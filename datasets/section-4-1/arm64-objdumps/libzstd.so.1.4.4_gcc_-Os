
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libzstd.so.1.4.4_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000004408 <.init>:
    4408:	stp	x29, x30, [sp, #-16]!
    440c:	mov	x29, sp
    4410:	bl	4b90 <ZSTD_initDStream_usingDDict@plt+0x10>
    4414:	ldp	x29, x30, [sp], #16
    4418:	ret

Disassembly of section .plt:

0000000000004420 <ZSTD_createDStream_advanced@plt-0x20>:
    4420:	stp	x16, x30, [sp, #-16]!
    4424:	adrp	x16, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
    4428:	ldr	x17, [x16, #4088]
    442c:	add	x16, x16, #0xff8
    4430:	br	x17
    4434:	nop
    4438:	nop
    443c:	nop

0000000000004440 <ZSTD_createDStream_advanced@plt>:
    4440:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4444:	ldr	x17, [x16]
    4448:	add	x16, x16, #0x0
    444c:	br	x17

0000000000004450 <ZSTD_CCtx_refCDict@plt>:
    4450:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4454:	ldr	x17, [x16, #8]
    4458:	add	x16, x16, #0x8
    445c:	br	x17

0000000000004460 <memcpy@plt>:
    4460:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4464:	ldr	x17, [x16, #16]
    4468:	add	x16, x16, #0x10
    446c:	br	x17

0000000000004470 <ZSTD_decompressBegin_usingDict@plt>:
    4470:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4474:	ldr	x17, [x16, #24]
    4478:	add	x16, x16, #0x18
    447c:	br	x17

0000000000004480 <ZSTD_estimateCDictSize_advanced@plt>:
    4480:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4484:	ldr	x17, [x16, #32]
    4488:	add	x16, x16, #0x20
    448c:	br	x17

0000000000004490 <memmove@plt>:
    4490:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4494:	ldr	x17, [x16, #40]
    4498:	add	x16, x16, #0x28
    449c:	br	x17

00000000000044a0 <ZSTD_CStreamInSize@plt>:
    44a0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    44a4:	ldr	x17, [x16, #48]
    44a8:	add	x16, x16, #0x30
    44ac:	br	x17

00000000000044b0 <ZSTD_compressStream@plt>:
    44b0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    44b4:	ldr	x17, [x16, #56]
    44b8:	add	x16, x16, #0x38
    44bc:	br	x17

00000000000044c0 <clock@plt>:
    44c0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    44c4:	ldr	x17, [x16, #64]
    44c8:	add	x16, x16, #0x40
    44cc:	br	x17

00000000000044d0 <fputs@plt>:
    44d0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    44d4:	ldr	x17, [x16, #72]
    44d8:	add	x16, x16, #0x48
    44dc:	br	x17

00000000000044e0 <ZSTD_createDStream@plt>:
    44e0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    44e4:	ldr	x17, [x16, #80]
    44e8:	add	x16, x16, #0x50
    44ec:	br	x17

00000000000044f0 <ZSTD_estimateCStreamSize_usingCCtxParams@plt>:
    44f0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    44f4:	ldr	x17, [x16, #88]
    44f8:	add	x16, x16, #0x58
    44fc:	br	x17

0000000000004500 <ZSTD_createCCtx_advanced@plt>:
    4500:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4504:	ldr	x17, [x16, #96]
    4508:	add	x16, x16, #0x60
    450c:	br	x17

0000000000004510 <ZSTD_decompressDCtx@plt>:
    4510:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4514:	ldr	x17, [x16, #104]
    4518:	add	x16, x16, #0x68
    451c:	br	x17

0000000000004520 <ZSTD_minCLevel@plt>:
    4520:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4524:	ldr	x17, [x16, #112]
    4528:	add	x16, x16, #0x70
    452c:	br	x17

0000000000004530 <ZSTD_DCtx_setParameter@plt>:
    4530:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4534:	ldr	x17, [x16, #120]
    4538:	add	x16, x16, #0x78
    453c:	br	x17

0000000000004540 <ZSTD_compressEnd@plt>:
    4540:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4544:	ldr	x17, [x16, #128]
    4548:	add	x16, x16, #0x80
    454c:	br	x17

0000000000004550 <ZSTD_initCStream@plt>:
    4550:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4554:	ldr	x17, [x16, #136]
    4558:	add	x16, x16, #0x88
    455c:	br	x17

0000000000004560 <ZSTD_CCtx_setParameter@plt>:
    4560:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4564:	ldr	x17, [x16, #144]
    4568:	add	x16, x16, #0x90
    456c:	br	x17

0000000000004570 <__cxa_finalize@plt>:
    4570:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4574:	ldr	x17, [x16, #152]
    4578:	add	x16, x16, #0x98
    457c:	br	x17

0000000000004580 <ZSTD_estimateDStreamSize@plt>:
    4580:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4584:	ldr	x17, [x16, #160]
    4588:	add	x16, x16, #0xa0
    458c:	br	x17

0000000000004590 <ZSTD_CCtx_reset@plt>:
    4590:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4594:	ldr	x17, [x16, #168]
    4598:	add	x16, x16, #0xa8
    459c:	br	x17

00000000000045a0 <fputc@plt>:
    45a0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    45a4:	ldr	x17, [x16, #176]
    45a8:	add	x16, x16, #0xb0
    45ac:	br	x17

00000000000045b0 <qsort@plt>:
    45b0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    45b4:	ldr	x17, [x16, #184]
    45b8:	add	x16, x16, #0xb8
    45bc:	br	x17

00000000000045c0 <ZSTD_freeCDict@plt>:
    45c0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    45c4:	ldr	x17, [x16, #192]
    45c8:	add	x16, x16, #0xc0
    45cc:	br	x17

00000000000045d0 <ZSTD_compress_usingCDict_advanced@plt>:
    45d0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    45d4:	ldr	x17, [x16, #200]
    45d8:	add	x16, x16, #0xc8
    45dc:	br	x17

00000000000045e0 <ZSTD_initCStream_advanced@plt>:
    45e0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    45e4:	ldr	x17, [x16, #208]
    45e8:	add	x16, x16, #0xd0
    45ec:	br	x17

00000000000045f0 <ZSTD_freeCCtx@plt>:
    45f0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    45f4:	ldr	x17, [x16, #216]
    45f8:	add	x16, x16, #0xd8
    45fc:	br	x17

0000000000004600 <ZSTD_getFrameHeader_advanced@plt>:
    4600:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4604:	ldr	x17, [x16, #224]
    4608:	add	x16, x16, #0xe0
    460c:	br	x17

0000000000004610 <ZSTD_flushStream@plt>:
    4610:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4614:	ldr	x17, [x16, #232]
    4618:	add	x16, x16, #0xe8
    461c:	br	x17

0000000000004620 <ZSTD_getCParams@plt>:
    4620:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4624:	ldr	x17, [x16, #240]
    4628:	add	x16, x16, #0xf0
    462c:	br	x17

0000000000004630 <ZSTD_getFrameContentSize@plt>:
    4630:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4634:	ldr	x17, [x16, #248]
    4638:	add	x16, x16, #0xf8
    463c:	br	x17

0000000000004640 <ZSTD_decompressBegin_usingDDict@plt>:
    4640:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4644:	ldr	x17, [x16, #256]
    4648:	add	x16, x16, #0x100
    464c:	br	x17

0000000000004650 <ZSTD_freeDCtx@plt>:
    4650:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4654:	ldr	x17, [x16, #264]
    4658:	add	x16, x16, #0x108
    465c:	br	x17

0000000000004660 <ZSTD_dParam_getBounds@plt>:
    4660:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4664:	ldr	x17, [x16, #272]
    4668:	add	x16, x16, #0x110
    466c:	br	x17

0000000000004670 <ZDICT_optimizeTrainFromBuffer_fastCover@plt>:
    4670:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4674:	ldr	x17, [x16, #280]
    4678:	add	x16, x16, #0x118
    467c:	br	x17

0000000000004680 <ZSTD_CCtx_loadDictionary@plt>:
    4680:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4684:	ldr	x17, [x16, #288]
    4688:	add	x16, x16, #0x120
    468c:	br	x17

0000000000004690 <ZSTD_DCtx_loadDictionary@plt>:
    4690:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4694:	ldr	x17, [x16, #296]
    4698:	add	x16, x16, #0x128
    469c:	br	x17

00000000000046a0 <malloc@plt>:
    46a0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    46a4:	ldr	x17, [x16, #304]
    46a8:	add	x16, x16, #0x130
    46ac:	br	x17

00000000000046b0 <ZSTD_compressStream2@plt>:
    46b0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    46b4:	ldr	x17, [x16, #312]
    46b8:	add	x16, x16, #0x138
    46bc:	br	x17

00000000000046c0 <ZSTD_CCtxParams_getParameter@plt>:
    46c0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    46c4:	ldr	x17, [x16, #320]
    46c8:	add	x16, x16, #0x140
    46cc:	br	x17

00000000000046d0 <ZSTD_DCtx_refPrefix_advanced@plt>:
    46d0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    46d4:	ldr	x17, [x16, #328]
    46d8:	add	x16, x16, #0x148
    46dc:	br	x17

00000000000046e0 <ZSTD_initDStream_usingDict@plt>:
    46e0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    46e4:	ldr	x17, [x16, #336]
    46e8:	add	x16, x16, #0x150
    46ec:	br	x17

00000000000046f0 <ZSTD_compressStream2_simpleArgs@plt>:
    46f0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    46f4:	ldr	x17, [x16, #344]
    46f8:	add	x16, x16, #0x158
    46fc:	br	x17

0000000000004700 <memset@plt>:
    4700:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4704:	ldr	x17, [x16, #352]
    4708:	add	x16, x16, #0x160
    470c:	br	x17

0000000000004710 <ZDICT_finalizeDictionary@plt>:
    4710:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4714:	ldr	x17, [x16, #360]
    4718:	add	x16, x16, #0x168
    471c:	br	x17

0000000000004720 <ZSTD_createCCtx@plt>:
    4720:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4724:	ldr	x17, [x16, #368]
    4728:	add	x16, x16, #0x170
    472c:	br	x17

0000000000004730 <ZSTD_initCStream_usingDict@plt>:
    4730:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4734:	ldr	x17, [x16, #376]
    4738:	add	x16, x16, #0x178
    473c:	br	x17

0000000000004740 <ZSTD_estimateCCtxSize_usingCParams@plt>:
    4740:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4744:	ldr	x17, [x16, #384]
    4748:	add	x16, x16, #0x180
    474c:	br	x17

0000000000004750 <ZSTD_DStreamOutSize@plt>:
    4750:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4754:	ldr	x17, [x16, #392]
    4758:	add	x16, x16, #0x188
    475c:	br	x17

0000000000004760 <calloc@plt>:
    4760:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4764:	ldr	x17, [x16, #400]
    4768:	add	x16, x16, #0x190
    476c:	br	x17

0000000000004770 <ZSTD_freeCStream@plt>:
    4770:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4774:	ldr	x17, [x16, #408]
    4778:	add	x16, x16, #0x198
    477c:	br	x17

0000000000004780 <ZSTD_CCtx_refPrefix_advanced@plt>:
    4780:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4784:	ldr	x17, [x16, #416]
    4788:	add	x16, x16, #0x1a0
    478c:	br	x17

0000000000004790 <ZSTD_decompress_usingDDict@plt>:
    4790:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4794:	ldr	x17, [x16, #424]
    4798:	add	x16, x16, #0x1a8
    479c:	br	x17

00000000000047a0 <ZSTD_sizeof_CCtx@plt>:
    47a0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    47a4:	ldr	x17, [x16, #432]
    47a8:	add	x16, x16, #0x1b0
    47ac:	br	x17

00000000000047b0 <ZSTD_compress_usingCDict@plt>:
    47b0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    47b4:	ldr	x17, [x16, #440]
    47b8:	add	x16, x16, #0x1b8
    47bc:	br	x17

00000000000047c0 <ZSTD_createDDict_advanced@plt>:
    47c0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    47c4:	ldr	x17, [x16, #448]
    47c8:	add	x16, x16, #0x1c0
    47cc:	br	x17

00000000000047d0 <ZSTD_DCtx_loadDictionary_advanced@plt>:
    47d0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    47d4:	ldr	x17, [x16, #456]
    47d8:	add	x16, x16, #0x1c8
    47dc:	br	x17

00000000000047e0 <ZSTD_compressBegin_usingDict@plt>:
    47e0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    47e4:	ldr	x17, [x16, #464]
    47e8:	add	x16, x16, #0x1d0
    47ec:	br	x17

00000000000047f0 <ZSTD_compressCCtx@plt>:
    47f0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    47f4:	ldr	x17, [x16, #472]
    47f8:	add	x16, x16, #0x1d8
    47fc:	br	x17

0000000000004800 <__gmon_start__@plt>:
    4800:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4804:	ldr	x17, [x16, #480]
    4808:	add	x16, x16, #0x1e0
    480c:	br	x17

0000000000004810 <ZSTD_createCDict_advanced@plt>:
    4810:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4814:	ldr	x17, [x16, #488]
    4818:	add	x16, x16, #0x1e8
    481c:	br	x17

0000000000004820 <ZSTD_decompressBegin@plt>:
    4820:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4824:	ldr	x17, [x16, #496]
    4828:	add	x16, x16, #0x1f0
    482c:	br	x17

0000000000004830 <ZSTD_sizeof_DCtx@plt>:
    4830:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4834:	ldr	x17, [x16, #504]
    4838:	add	x16, x16, #0x1f8
    483c:	br	x17

0000000000004840 <ZSTD_decodingBufferSize_min@plt>:
    4840:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4844:	ldr	x17, [x16, #512]
    4848:	add	x16, x16, #0x200
    484c:	br	x17

0000000000004850 <ZSTD_CCtxParams_setParameter@plt>:
    4850:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4854:	ldr	x17, [x16, #520]
    4858:	add	x16, x16, #0x208
    485c:	br	x17

0000000000004860 <ZSTD_sizeof_CDict@plt>:
    4860:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4864:	ldr	x17, [x16, #528]
    4868:	add	x16, x16, #0x210
    486c:	br	x17

0000000000004870 <ZSTD_initDStream@plt>:
    4870:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4874:	ldr	x17, [x16, #536]
    4878:	add	x16, x16, #0x218
    487c:	br	x17

0000000000004880 <ZSTD_createDCtx@plt>:
    4880:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4884:	ldr	x17, [x16, #544]
    4888:	add	x16, x16, #0x220
    488c:	br	x17

0000000000004890 <ZSTD_compress_usingDict@plt>:
    4890:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4894:	ldr	x17, [x16, #552]
    4898:	add	x16, x16, #0x228
    489c:	br	x17

00000000000048a0 <memcmp@plt>:
    48a0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    48a4:	ldr	x17, [x16, #560]
    48a8:	add	x16, x16, #0x230
    48ac:	br	x17

00000000000048b0 <ZSTD_getFrameHeader@plt>:
    48b0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    48b4:	ldr	x17, [x16, #568]
    48b8:	add	x16, x16, #0x238
    48bc:	br	x17

00000000000048c0 <ZSTD_createCDict@plt>:
    48c0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    48c4:	ldr	x17, [x16, #576]
    48c8:	add	x16, x16, #0x240
    48cc:	br	x17

00000000000048d0 <ZSTD_getBlockSize@plt>:
    48d0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    48d4:	ldr	x17, [x16, #584]
    48d8:	add	x16, x16, #0x248
    48dc:	br	x17

00000000000048e0 <free@plt>:
    48e0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    48e4:	ldr	x17, [x16, #592]
    48e8:	add	x16, x16, #0x250
    48ec:	br	x17

00000000000048f0 <ZSTD_DCtx_reset@plt>:
    48f0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    48f4:	ldr	x17, [x16, #600]
    48f8:	add	x16, x16, #0x258
    48fc:	br	x17

0000000000004900 <ZSTD_compressBlock@plt>:
    4900:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4904:	ldr	x17, [x16, #608]
    4908:	add	x16, x16, #0x260
    490c:	br	x17

0000000000004910 <ZSTD_CStreamOutSize@plt>:
    4910:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4914:	ldr	x17, [x16, #616]
    4918:	add	x16, x16, #0x268
    491c:	br	x17

0000000000004920 <ZSTD_checkCParams@plt>:
    4920:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4924:	ldr	x17, [x16, #624]
    4928:	add	x16, x16, #0x270
    492c:	br	x17

0000000000004930 <ZSTD_decompressContinue@plt>:
    4930:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4934:	ldr	x17, [x16, #632]
    4938:	add	x16, x16, #0x278
    493c:	br	x17

0000000000004940 <ZSTD_decompressStream@plt>:
    4940:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4944:	ldr	x17, [x16, #640]
    4948:	add	x16, x16, #0x280
    494c:	br	x17

0000000000004950 <ZSTD_CCtxParams_init@plt>:
    4950:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4954:	ldr	x17, [x16, #648]
    4958:	add	x16, x16, #0x288
    495c:	br	x17

0000000000004960 <ZSTD_estimateCCtxSize_usingCCtxParams@plt>:
    4960:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4964:	ldr	x17, [x16, #656]
    4968:	add	x16, x16, #0x290
    496c:	br	x17

0000000000004970 <fflush@plt>:
    4970:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4974:	ldr	x17, [x16, #664]
    4978:	add	x16, x16, #0x298
    497c:	br	x17

0000000000004980 <ZSTD_compressBound@plt>:
    4980:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4984:	ldr	x17, [x16, #672]
    4988:	add	x16, x16, #0x2a0
    498c:	br	x17

0000000000004990 <ZSTD_compressBegin_usingCDict_advanced@plt>:
    4990:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4994:	ldr	x17, [x16, #680]
    4998:	add	x16, x16, #0x2a8
    499c:	br	x17

00000000000049a0 <ZSTD_compress2@plt>:
    49a0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    49a4:	ldr	x17, [x16, #688]
    49a8:	add	x16, x16, #0x2b0
    49ac:	br	x17

00000000000049b0 <ZSTD_cParam_getBounds@plt>:
    49b0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    49b4:	ldr	x17, [x16, #696]
    49b8:	add	x16, x16, #0x2b8
    49bc:	br	x17

00000000000049c0 <ZSTD_endStream@plt>:
    49c0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    49c4:	ldr	x17, [x16, #704]
    49c8:	add	x16, x16, #0x2c0
    49cc:	br	x17

00000000000049d0 <ZSTD_DStreamInSize@plt>:
    49d0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    49d4:	ldr	x17, [x16, #712]
    49d8:	add	x16, x16, #0x2c8
    49dc:	br	x17

00000000000049e0 <ZSTD_compressBegin_usingCDict@plt>:
    49e0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    49e4:	ldr	x17, [x16, #720]
    49e8:	add	x16, x16, #0x2d0
    49ec:	br	x17

00000000000049f0 <ZSTD_CCtx_loadDictionary_advanced@plt>:
    49f0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    49f4:	ldr	x17, [x16, #728]
    49f8:	add	x16, x16, #0x2d8
    49fc:	br	x17

0000000000004a00 <ZSTD_sizeof_DDict@plt>:
    4a00:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4a04:	ldr	x17, [x16, #736]
    4a08:	add	x16, x16, #0x2e0
    4a0c:	br	x17

0000000000004a10 <ZSTD_nextSrcSizeToDecompress@plt>:
    4a10:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4a14:	ldr	x17, [x16, #744]
    4a18:	add	x16, x16, #0x2e8
    4a1c:	br	x17

0000000000004a20 <ZSTD_createCStream_advanced@plt>:
    4a20:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4a24:	ldr	x17, [x16, #752]
    4a28:	add	x16, x16, #0x2f0
    4a2c:	br	x17

0000000000004a30 <ZSTD_getDictID_fromDict@plt>:
    4a30:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4a34:	ldr	x17, [x16, #760]
    4a38:	add	x16, x16, #0x2f8
    4a3c:	br	x17

0000000000004a40 <ZSTD_findFrameCompressedSize@plt>:
    4a40:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4a44:	ldr	x17, [x16, #768]
    4a48:	add	x16, x16, #0x300
    4a4c:	br	x17

0000000000004a50 <ZSTD_freeDDict@plt>:
    4a50:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4a54:	ldr	x17, [x16, #776]
    4a58:	add	x16, x16, #0x308
    4a5c:	br	x17

0000000000004a60 <ZSTD_createCStream@plt>:
    4a60:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4a64:	ldr	x17, [x16, #784]
    4a68:	add	x16, x16, #0x310
    4a6c:	br	x17

0000000000004a70 <ZSTD_getParams@plt>:
    4a70:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4a74:	ldr	x17, [x16, #792]
    4a78:	add	x16, x16, #0x318
    4a7c:	br	x17

0000000000004a80 <ZSTD_initStaticCCtx@plt>:
    4a80:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4a84:	ldr	x17, [x16, #800]
    4a88:	add	x16, x16, #0x320
    4a8c:	br	x17

0000000000004a90 <__assert_fail@plt>:
    4a90:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4a94:	ldr	x17, [x16, #808]
    4a98:	add	x16, x16, #0x328
    4a9c:	br	x17

0000000000004aa0 <ZSTD_CCtxParams_reset@plt>:
    4aa0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4aa4:	ldr	x17, [x16, #816]
    4aa8:	add	x16, x16, #0x330
    4aac:	br	x17

0000000000004ab0 <ZSTD_CCtx_setPledgedSrcSize@plt>:
    4ab0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4ab4:	ldr	x17, [x16, #824]
    4ab8:	add	x16, x16, #0x338
    4abc:	br	x17

0000000000004ac0 <ZSTD_DCtx_refDDict@plt>:
    4ac0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4ac4:	ldr	x17, [x16, #832]
    4ac8:	add	x16, x16, #0x340
    4acc:	br	x17

0000000000004ad0 <ZSTD_estimateCStreamSize_usingCParams@plt>:
    4ad0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4ad4:	ldr	x17, [x16, #840]
    4ad8:	add	x16, x16, #0x348
    4adc:	br	x17

0000000000004ae0 <ZSTD_compressContinue@plt>:
    4ae0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4ae4:	ldr	x17, [x16, #848]
    4ae8:	add	x16, x16, #0x350
    4aec:	br	x17

0000000000004af0 <ZSTD_freeDStream@plt>:
    4af0:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4af4:	ldr	x17, [x16, #856]
    4af8:	add	x16, x16, #0x358
    4afc:	br	x17

0000000000004b00 <ZSTD_initStaticDCtx@plt>:
    4b00:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4b04:	ldr	x17, [x16, #864]
    4b08:	add	x16, x16, #0x360
    4b0c:	br	x17

0000000000004b10 <ZSTD_estimateDCtxSize@plt>:
    4b10:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4b14:	ldr	x17, [x16, #872]
    4b18:	add	x16, x16, #0x368
    4b1c:	br	x17

0000000000004b20 <ZSTD_getErrorCode@plt>:
    4b20:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4b24:	ldr	x17, [x16, #880]
    4b28:	add	x16, x16, #0x370
    4b2c:	br	x17

0000000000004b30 <ZSTD_createDCtx_advanced@plt>:
    4b30:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4b34:	ldr	x17, [x16, #888]
    4b38:	add	x16, x16, #0x378
    4b3c:	br	x17

0000000000004b40 <fprintf@plt>:
    4b40:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4b44:	ldr	x17, [x16, #896]
    4b48:	add	x16, x16, #0x380
    4b4c:	br	x17

0000000000004b50 <ZDICT_isError@plt>:
    4b50:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4b54:	ldr	x17, [x16, #904]
    4b58:	add	x16, x16, #0x388
    4b5c:	br	x17

0000000000004b60 <ZSTD_maxCLevel@plt>:
    4b60:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4b64:	ldr	x17, [x16, #912]
    4b68:	add	x16, x16, #0x390
    4b6c:	br	x17

0000000000004b70 <ZSTD_nextInputType@plt>:
    4b70:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4b74:	ldr	x17, [x16, #920]
    4b78:	add	x16, x16, #0x398
    4b7c:	br	x17

0000000000004b80 <ZSTD_initDStream_usingDDict@plt>:
    4b80:	adrp	x16, 71000 <ZSTD_createDStream_advanced@@Base+0x3561c>
    4b84:	ldr	x17, [x16, #928]
    4b88:	add	x16, x16, #0x3a0
    4b8c:	br	x17

Disassembly of section .text:

0000000000004b90 <ZSTD_versionNumber@@Base-0x1f6c>:
    4b90:	adrp	x0, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
    4b94:	ldr	x0, [x0, #4056]
    4b98:	cbz	x0, 4ba0 <ZSTD_initDStream_usingDDict@plt+0x20>
    4b9c:	b	4800 <__gmon_start__@plt>
    4ba0:	ret
    4ba4:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
    4ba8:	add	x0, x0, #0x3b8
    4bac:	adrp	x1, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
    4bb0:	add	x1, x1, #0x3b8
    4bb4:	cmp	x1, x0
    4bb8:	b.eq	4bd0 <ZSTD_initDStream_usingDDict@plt+0x50>  // b.none
    4bbc:	adrp	x1, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
    4bc0:	ldr	x1, [x1, #4032]
    4bc4:	cbz	x1, 4bd0 <ZSTD_initDStream_usingDDict@plt+0x50>
    4bc8:	mov	x16, x1
    4bcc:	br	x16
    4bd0:	ret
    4bd4:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
    4bd8:	add	x0, x0, #0x3b8
    4bdc:	adrp	x1, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
    4be0:	add	x1, x1, #0x3b8
    4be4:	sub	x1, x1, x0
    4be8:	mov	x2, #0x2                   	// #2
    4bec:	asr	x1, x1, #3
    4bf0:	sdiv	x1, x1, x2
    4bf4:	cbz	x1, 4c0c <ZSTD_initDStream_usingDDict@plt+0x8c>
    4bf8:	adrp	x2, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
    4bfc:	ldr	x2, [x2, #4064]
    4c00:	cbz	x2, 4c0c <ZSTD_initDStream_usingDDict@plt+0x8c>
    4c04:	mov	x16, x2
    4c08:	br	x16
    4c0c:	ret
    4c10:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
    4c14:	ldrb	w1, [x0, #952]
    4c18:	cbnz	w1, 4c5c <ZSTD_initDStream_usingDDict@plt+0xdc>
    4c1c:	stp	x29, x30, [sp, #-32]!
    4c20:	mov	x29, sp
    4c24:	str	x19, [sp, #16]
    4c28:	mov	x19, x0
    4c2c:	adrp	x0, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
    4c30:	ldr	x0, [x0, #4040]
    4c34:	cbz	x0, 4c44 <ZSTD_initDStream_usingDDict@plt+0xc4>
    4c38:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
    4c3c:	ldr	x0, [x0, #936]
    4c40:	bl	4570 <__cxa_finalize@plt>
    4c44:	bl	4ba4 <ZSTD_initDStream_usingDDict@plt+0x24>
    4c48:	mov	w0, #0x1                   	// #1
    4c4c:	strb	w0, [x19, #952]
    4c50:	ldr	x19, [sp, #16]
    4c54:	ldp	x29, x30, [sp], #32
    4c58:	ret
    4c5c:	ret
    4c60:	b	4bd4 <ZSTD_initDStream_usingDDict@plt+0x54>
    4c64:	mov	w0, #0x384                 	// #900
    4c68:	ret
    4c6c:	cmn	x0, #0x78
    4c70:	cset	w0, hi  // hi = pmore
    4c74:	ret
    4c78:	cmn	x0, #0x78
    4c7c:	b.ls	4c88 <ZSTD_initDStream_usingDDict@plt+0x108>  // b.plast
    4c80:	neg	w0, w0
    4c84:	b	511c <ZSTD_initDStream_usingDDict@plt+0x59c>
    4c88:	mov	w0, #0x0                   	// #0
    4c8c:	b	4c84 <ZSTD_initDStream_usingDDict@plt+0x104>
    4c90:	cmn	x0, #0x78
    4c94:	cset	w0, hi  // hi = pmore
    4c98:	ret
    4c9c:	cmn	x0, #0x78
    4ca0:	b.ls	4cac <ZSTD_initDStream_usingDDict@plt+0x12c>  // b.plast
    4ca4:	neg	w0, w0
    4ca8:	b	511c <ZSTD_initDStream_usingDDict@plt+0x59c>
    4cac:	mov	w0, #0x0                   	// #0
    4cb0:	b	4ca8 <ZSTD_initDStream_usingDDict@plt+0x128>
    4cb4:	stp	x29, x30, [sp, #-80]!
    4cb8:	cmp	x4, #0x3
    4cbc:	mov	x29, sp
    4cc0:	stp	x19, x20, [sp, #16]
    4cc4:	mov	x20, x3
    4cc8:	mov	x19, x4
    4ccc:	stp	x21, x22, [sp, #32]
    4cd0:	mov	x22, x0
    4cd4:	mov	x21, x1
    4cd8:	str	x23, [sp, #48]
    4cdc:	mov	x23, x2
    4ce0:	b.hi	4d3c <ZSTD_initDStream_usingDDict@plt+0x1bc>  // b.pmore
    4ce4:	add	x3, sp, #0x48
    4ce8:	mov	x2, x4
    4cec:	mov	x1, x20
    4cf0:	mov	x0, x3
    4cf4:	str	wzr, [sp, #72]
    4cf8:	bl	4460 <memcpy@plt>
    4cfc:	mov	x3, x0
    4d00:	mov	x2, x23
    4d04:	mov	x1, x21
    4d08:	mov	x0, x22
    4d0c:	mov	x4, #0x4                   	// #4
    4d10:	bl	4cb4 <ZSTD_initDStream_usingDDict@plt+0x134>
    4d14:	cmn	x0, #0x78
    4d18:	b.hi	4d28 <ZSTD_initDStream_usingDDict@plt+0x1a8>  // b.pmore
    4d1c:	cmp	x19, x0
    4d20:	mov	x1, #0xffffffffffffffec    	// #-20
    4d24:	csel	x0, x0, x1, cs  // cs = hs, nlast
    4d28:	ldp	x19, x20, [sp, #16]
    4d2c:	ldp	x21, x22, [sp, #32]
    4d30:	ldr	x23, [sp, #48]
    4d34:	ldp	x29, x30, [sp], #80
    4d38:	ret
    4d3c:	ldr	w2, [x21]
    4d40:	mov	w1, #0x0                   	// #0
    4d44:	add	w2, w2, #0x1
    4d48:	lsl	x2, x2, #1
    4d4c:	bl	4700 <memset@plt>
    4d50:	ldr	w6, [x20]
    4d54:	and	w3, w6, #0xf
    4d58:	add	w0, w3, #0x5
    4d5c:	cmp	w0, #0xf
    4d60:	b.hi	4f4c <ZSTD_initDStream_usingDDict@plt+0x3cc>  // b.pmore
    4d64:	str	w0, [x23]
    4d68:	add	x19, x20, x19
    4d6c:	mov	w8, #0x1                   	// #1
    4d70:	sub	x12, x19, #0x5
    4d74:	ldr	w9, [x21]
    4d78:	sub	x10, x19, #0x7
    4d7c:	lsl	w8, w8, w0
    4d80:	lsr	w6, w6, #4
    4d84:	add	w1, w8, #0x1
    4d88:	add	w3, w3, #0x6
    4d8c:	mov	x4, x20
    4d90:	sub	x19, x19, #0x4
    4d94:	mov	w2, #0x0                   	// #0
    4d98:	mov	w7, #0x0                   	// #0
    4d9c:	mov	w5, #0x4                   	// #4
    4da0:	mov	w11, #0xffff                	// #65535
    4da4:	cmp	w1, #0x1
    4da8:	ccmp	w9, w7, #0x0, gt
    4dac:	b.cs	4ddc <ZSTD_initDStream_usingDDict@plt+0x25c>  // b.hs, b.nlast
    4db0:	cmp	w1, #0x1
    4db4:	b.ne	4f5c <ZSTD_initDStream_usingDDict@plt+0x3dc>  // b.any
    4db8:	cmp	w5, #0x20
    4dbc:	b.gt	4f5c <ZSTD_initDStream_usingDDict@plt+0x3dc>
    4dc0:	add	w0, w5, #0x7
    4dc4:	sub	w7, w7, #0x1
    4dc8:	str	w7, [x21]
    4dcc:	asr	w0, w0, #3
    4dd0:	add	x0, x4, w0, sxtw
    4dd4:	sub	x0, x0, x20
    4dd8:	b	4d28 <ZSTD_initDStream_usingDDict@plt+0x1a8>
    4ddc:	cbz	w2, 4e70 <ZSTD_initDStream_usingDDict@plt+0x2f0>
    4de0:	mov	w0, w7
    4de4:	b	4e00 <ZSTD_initDStream_usingDDict@plt+0x280>
    4de8:	add	w0, w0, #0x18
    4dec:	cmp	x4, x12
    4df0:	b.cs	4eec <ZSTD_initDStream_usingDDict@plt+0x36c>  // b.hs, b.nlast
    4df4:	ldur	w6, [x4, #2]
    4df8:	add	x4, x4, #0x2
    4dfc:	lsr	w6, w6, w5
    4e00:	cmp	w11, w6, uxth
    4e04:	b.eq	4de8 <ZSTD_initDStream_usingDDict@plt+0x268>  // b.none
    4e08:	and	w2, w6, #0x3
    4e0c:	add	w5, w5, #0x2
    4e10:	cmp	w2, #0x3
    4e14:	b.eq	4ef8 <ZSTD_initDStream_usingDDict@plt+0x378>  // b.none
    4e18:	add	w2, w2, w0
    4e1c:	cmp	w9, w2
    4e20:	b.cc	4f54 <ZSTD_initDStream_usingDDict@plt+0x3d4>  // b.lo, b.ul, b.last
    4e24:	add	x14, x22, w7, uxtw #1
    4e28:	mov	x0, #0x0                   	// #0
    4e2c:	add	w13, w7, w0
    4e30:	cmp	w2, w13
    4e34:	b.hi	4f04 <ZSTD_initDStream_usingDDict@plt+0x384>  // b.pmore
    4e38:	cmp	w7, w2
    4e3c:	sub	w0, w2, w7
    4e40:	csel	w0, w0, wzr, ls  // ls = plast
    4e44:	cmp	x4, x10
    4e48:	add	w7, w7, w0
    4e4c:	asr	w0, w5, #3
    4e50:	add	x0, x4, w0, sxtw
    4e54:	b.ls	4e60 <ZSTD_initDStream_usingDDict@plt+0x2e0>  // b.plast
    4e58:	cmp	x0, x19
    4e5c:	b.hi	4f10 <ZSTD_initDStream_usingDDict@plt+0x390>  // b.pmore
    4e60:	ldr	w6, [x0]
    4e64:	and	w5, w5, #0x7
    4e68:	mov	x4, x0
    4e6c:	lsr	w6, w6, w5
    4e70:	lsl	w0, w8, #1
    4e74:	sub	w2, w8, #0x1
    4e78:	sub	w0, w0, #0x1
    4e7c:	and	w2, w2, w6
    4e80:	sub	w13, w0, w1
    4e84:	cmp	w2, w13
    4e88:	b.cs	4f18 <ZSTD_initDStream_usingDDict@plt+0x398>  // b.hs, b.nlast
    4e8c:	mov	w6, w2
    4e90:	sub	w2, w3, #0x1
    4e94:	add	w5, w2, w5
    4e98:	subs	w6, w6, #0x1
    4e9c:	add	w13, w7, #0x1
    4ea0:	cneg	w0, w6, mi  // mi = first
    4ea4:	cmp	w6, #0x0
    4ea8:	sub	w1, w1, w0
    4eac:	cset	w2, eq  // eq = none
    4eb0:	strh	w6, [x22, w7, uxtw #1]
    4eb4:	cmp	w8, w1
    4eb8:	b.gt	4f30 <ZSTD_initDStream_usingDDict@plt+0x3b0>
    4ebc:	asr	w0, w5, #3
    4ec0:	cmp	x4, x10
    4ec4:	add	x0, x4, w0, sxtw
    4ec8:	b.ls	4ed4 <ZSTD_initDStream_usingDDict@plt+0x354>  // b.plast
    4ecc:	cmp	x19, x0
    4ed0:	b.cc	4f3c <ZSTD_initDStream_usingDDict@plt+0x3bc>  // b.lo, b.ul, b.last
    4ed4:	and	w5, w5, #0x7
    4ed8:	mov	x4, x0
    4edc:	ldr	w6, [x4]
    4ee0:	mov	w7, w13
    4ee4:	lsr	w6, w6, w5
    4ee8:	b	4da4 <ZSTD_initDStream_usingDDict@plt+0x224>
    4eec:	lsr	w6, w6, #16
    4ef0:	add	w5, w5, #0x10
    4ef4:	b	4e00 <ZSTD_initDStream_usingDDict@plt+0x280>
    4ef8:	add	w0, w0, #0x3
    4efc:	lsr	w6, w6, #2
    4f00:	b	4e08 <ZSTD_initDStream_usingDDict@plt+0x288>
    4f04:	strh	wzr, [x14, x0, lsl #1]
    4f08:	add	x0, x0, #0x1
    4f0c:	b	4e2c <ZSTD_initDStream_usingDDict@plt+0x2ac>
    4f10:	lsr	w6, w6, #2
    4f14:	b	4e70 <ZSTD_initDStream_usingDDict@plt+0x2f0>
    4f18:	and	w6, w0, w6
    4f1c:	cmp	w8, w6
    4f20:	b.gt	4f28 <ZSTD_initDStream_usingDDict@plt+0x3a8>
    4f24:	sub	w6, w6, w13
    4f28:	add	w5, w3, w5
    4f2c:	b	4e98 <ZSTD_initDStream_usingDDict@plt+0x318>
    4f30:	sub	w3, w3, #0x1
    4f34:	asr	w8, w8, #1
    4f38:	b	4eb4 <ZSTD_initDStream_usingDDict@plt+0x334>
    4f3c:	sub	x0, x19, x4
    4f40:	mov	x4, x19
    4f44:	sub	w5, w5, w0, lsl #3
    4f48:	b	4edc <ZSTD_initDStream_usingDDict@plt+0x35c>
    4f4c:	mov	x0, #0xffffffffffffffd4    	// #-44
    4f50:	b	4d28 <ZSTD_initDStream_usingDDict@plt+0x1a8>
    4f54:	mov	x0, #0xffffffffffffffd0    	// #-48
    4f58:	b	4d28 <ZSTD_initDStream_usingDDict@plt+0x1a8>
    4f5c:	mov	x0, #0xffffffffffffffec    	// #-20
    4f60:	b	4d28 <ZSTD_initDStream_usingDDict@plt+0x1a8>
    4f64:	cbz	x6, 510c <ZSTD_initDStream_usingDDict@plt+0x58c>
    4f68:	stp	x29, x30, [sp, #-336]!
    4f6c:	mov	x29, sp
    4f70:	stp	x19, x20, [sp, #16]
    4f74:	mov	x19, x2
    4f78:	mov	x2, x5
    4f7c:	stp	x21, x22, [sp, #32]
    4f80:	mov	x21, x0
    4f84:	mov	x22, x3
    4f88:	str	x23, [sp, #48]
    4f8c:	mov	x23, x4
    4f90:	ldrb	w20, [x5]
    4f94:	cmp	x20, #0x7f
    4f98:	b.ls	50ac <ZSTD_initDStream_usingDDict@plt+0x52c>  // b.plast
    4f9c:	sub	x0, x20, #0x7f
    4fa0:	sub	x20, x20, #0x7e
    4fa4:	lsr	x20, x20, #1
    4fa8:	add	x3, x20, #0x1
    4fac:	cmp	x3, x6
    4fb0:	b.hi	5114 <ZSTD_initDStream_usingDDict@plt+0x594>  // b.pmore
    4fb4:	cmp	x1, x0
    4fb8:	b.hi	50a4 <ZSTD_initDStream_usingDDict@plt+0x524>  // b.pmore
    4fbc:	mov	x0, #0xffffffffffffffec    	// #-20
    4fc0:	ldp	x19, x20, [sp, #16]
    4fc4:	ldp	x21, x22, [sp, #32]
    4fc8:	ldr	x23, [sp, #48]
    4fcc:	ldp	x29, x30, [sp], #336
    4fd0:	ret
    4fd4:	lsr	w3, w1, #1
    4fd8:	add	x3, x3, #0x1
    4fdc:	ldrb	w4, [x2, x3]
    4fe0:	lsr	w4, w4, #4
    4fe4:	strb	w4, [x21, x5]
    4fe8:	add	w4, w1, #0x1
    4fec:	add	w1, w1, #0x2
    4ff0:	ldrb	w3, [x2, x3]
    4ff4:	and	w3, w3, #0xf
    4ff8:	strb	w3, [x21, x4]
    4ffc:	mov	w5, w1
    5000:	cmp	x0, w1, uxtw
    5004:	b.hi	4fd4 <ZSTD_initDStream_usingDDict@plt+0x454>  // b.pmore
    5008:	mov	w3, #0x0                   	// #0
    500c:	mov	w2, #0x0                   	// #0
    5010:	mov	w6, #0x1                   	// #1
    5014:	stp	xzr, xzr, [x19]
    5018:	stp	xzr, xzr, [x19, #16]
    501c:	stp	xzr, xzr, [x19, #32]
    5020:	str	wzr, [x19, #48]
    5024:	mov	w5, w3
    5028:	cmp	x0, w3, uxtw
    502c:	b.hi	50dc <ZSTD_initDStream_usingDDict@plt+0x55c>  // b.pmore
    5030:	cbz	w2, 4fbc <ZSTD_initDStream_usingDDict@plt+0x43c>
    5034:	clz	w1, w2
    5038:	eor	w1, w1, #0x1f
    503c:	add	w1, w1, #0x1
    5040:	cmp	w1, #0xc
    5044:	b.hi	4fbc <ZSTD_initDStream_usingDDict@plt+0x43c>  // b.pmore
    5048:	mov	w3, #0x1                   	// #1
    504c:	str	w1, [x23]
    5050:	lsl	w1, w3, w1
    5054:	sub	w1, w1, w2
    5058:	clz	w2, w1
    505c:	eor	w2, w2, #0x1f
    5060:	lsl	w3, w3, w2
    5064:	cmp	w1, w3
    5068:	b.ne	4fbc <ZSTD_initDStream_usingDDict@plt+0x43c>  // b.any
    506c:	add	w1, w2, #0x1
    5070:	strb	w1, [x21, x0]
    5074:	ubfiz	x1, x1, #2, #7
    5078:	ldr	w2, [x19, x1]
    507c:	add	w2, w2, #0x1
    5080:	str	w2, [x19, x1]
    5084:	ldr	w1, [x19, #4]
    5088:	cmp	w1, #0x1
    508c:	b.ls	4fbc <ZSTD_initDStream_usingDDict@plt+0x43c>  // b.plast
    5090:	tbnz	w1, #0, 4fbc <ZSTD_initDStream_usingDDict@plt+0x43c>
    5094:	add	w0, w0, #0x1
    5098:	str	w0, [x22]
    509c:	add	x0, x20, #0x1
    50a0:	b	4fc0 <ZSTD_initDStream_usingDDict@plt+0x440>
    50a4:	mov	w1, #0x0                   	// #0
    50a8:	b	4ffc <ZSTD_initDStream_usingDDict@plt+0x47c>
    50ac:	add	x3, x20, #0x1
    50b0:	cmp	x3, x6
    50b4:	b.hi	5114 <ZSTD_initDStream_usingDDict@plt+0x594>  // b.pmore
    50b8:	add	x4, sp, #0x48
    50bc:	mov	x3, x20
    50c0:	add	x2, x2, #0x1
    50c4:	sub	x1, x1, #0x1
    50c8:	mov	w5, #0x6                   	// #6
    50cc:	bl	59e0 <ZSTD_initDStream_usingDDict@plt+0xe60>
    50d0:	cmn	x0, #0x78
    50d4:	b.ls	5008 <ZSTD_initDStream_usingDDict@plt+0x488>  // b.plast
    50d8:	b	4fc0 <ZSTD_initDStream_usingDDict@plt+0x440>
    50dc:	ldrb	w1, [x21, x5]
    50e0:	cmp	w1, #0xb
    50e4:	b.hi	4fbc <ZSTD_initDStream_usingDDict@plt+0x43c>  // b.pmore
    50e8:	ubfiz	x1, x1, #2, #8
    50ec:	add	w3, w3, #0x1
    50f0:	ldr	w4, [x19, x1]
    50f4:	add	w4, w4, #0x1
    50f8:	str	w4, [x19, x1]
    50fc:	ldrb	w1, [x21, x5]
    5100:	lsl	w1, w6, w1
    5104:	add	w2, w2, w1, asr #1
    5108:	b	5024 <ZSTD_initDStream_usingDDict@plt+0x4a4>
    510c:	mov	x0, #0xffffffffffffffb8    	// #-72
    5110:	ret
    5114:	mov	x0, #0xffffffffffffffb8    	// #-72
    5118:	b	4fc0 <ZSTD_initDStream_usingDDict@plt+0x440>
    511c:	cmp	w0, #0x4a
    5120:	b.hi	5194 <ZSTD_initDStream_usingDDict@plt+0x614>  // b.pmore
    5124:	cmp	w0, #0x1d
    5128:	b.hi	5140 <ZSTD_initDStream_usingDDict@plt+0x5c0>  // b.pmore
    512c:	cmp	w0, #0x16
    5130:	b.ls	5170 <ZSTD_initDStream_usingDDict@plt+0x5f0>  // b.plast
    5134:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    5138:	add	x0, x0, #0xda0
    513c:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    5140:	sub	w0, w0, #0x1e
    5144:	cmp	w0, #0x2c
    5148:	b.hi	5134 <ZSTD_initDStream_usingDDict@plt+0x5b4>  // b.pmore
    514c:	adrp	x1, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    5150:	add	x1, x1, #0xd4
    5154:	ldrb	w0, [x1, w0, uxtw]
    5158:	adr	x1, 5164 <ZSTD_initDStream_usingDDict@plt+0x5e4>
    515c:	add	x0, x1, w0, sxtb #2
    5160:	br	x0
    5164:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    5168:	add	x0, x0, #0xe7e
    516c:	ret
    5170:	adrp	x1, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    5174:	add	x1, x1, #0x104
    5178:	ldrb	w0, [x1, w0, uxtw]
    517c:	adr	x1, 5188 <ZSTD_initDStream_usingDDict@plt+0x608>
    5180:	add	x0, x1, w0, sxtb #2
    5184:	br	x0
    5188:	adrp	x0, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    518c:	add	x0, x0, #0x7f
    5190:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    5194:	cmp	w0, #0x64
    5198:	b.eq	52b4 <ZSTD_initDStream_usingDDict@plt+0x734>  // b.none
    519c:	cmp	w0, #0x66
    51a0:	adrp	x2, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    51a4:	adrp	x1, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    51a8:	add	x2, x2, #0xa8
    51ac:	add	x0, x1, #0xda0
    51b0:	csel	x0, x0, x2, ne  // ne = any
    51b4:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    51b8:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    51bc:	add	x0, x0, #0xdc9
    51c0:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    51c4:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    51c8:	add	x0, x0, #0xde2
    51cc:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    51d0:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    51d4:	add	x0, x0, #0xdf8
    51d8:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    51dc:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    51e0:	add	x0, x0, #0xe14
    51e4:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    51e8:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    51ec:	add	x0, x0, #0xe40
    51f0:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    51f4:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    51f8:	add	x0, x0, #0xe59
    51fc:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    5200:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    5204:	add	x0, x0, #0xeae
    5208:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    520c:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    5210:	add	x0, x0, #0xecb
    5214:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    5218:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    521c:	add	x0, x0, #0xef0
    5220:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    5224:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    5228:	add	x0, x0, #0xf15
    522c:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    5230:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    5234:	add	x0, x0, #0xf4a
    5238:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    523c:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    5240:	add	x0, x0, #0xf7a
    5244:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    5248:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    524c:	add	x0, x0, #0xfa3
    5250:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    5254:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    5258:	add	x0, x0, #0xfc9
    525c:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    5260:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    5264:	add	x0, x0, #0xfe1
    5268:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    526c:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    5270:	add	x0, x0, #0xff5
    5274:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    5278:	adrp	x0, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    527c:	add	x0, x0, #0x24
    5280:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    5284:	adrp	x0, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    5288:	add	x0, x0, #0x44
    528c:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    5290:	adrp	x0, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    5294:	add	x0, x0, #0x5a
    5298:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    529c:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    52a0:	add	x0, x0, #0xe94
    52a4:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    52a8:	adrp	x0, 52000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaae0>
    52ac:	add	x0, x0, #0xdb7
    52b0:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    52b4:	adrp	x0, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    52b8:	add	x0, x0, #0x8f
    52bc:	b	516c <ZSTD_initDStream_usingDDict@plt+0x5ec>
    52c0:	ldr	w3, [x0, #8]
    52c4:	mov	x1, x0
    52c8:	cmp	w3, #0x40
    52cc:	b.hi	5360 <ZSTD_initDStream_usingDDict@plt+0x7e0>  // b.pmore
    52d0:	ldr	x2, [x0, #16]
    52d4:	ldr	x0, [x0, #32]
    52d8:	cmp	x2, x0
    52dc:	b.cc	5304 <ZSTD_initDStream_usingDDict@plt+0x784>  // b.lo, b.ul, b.last
    52e0:	lsr	w0, w3, #3
    52e4:	and	w3, w3, #0x7
    52e8:	sub	x2, x2, x0
    52ec:	ldr	x0, [x2]
    52f0:	str	x0, [x1]
    52f4:	mov	w0, #0x0                   	// #0
    52f8:	str	w3, [x1, #8]
    52fc:	str	x2, [x1, #16]
    5300:	ret
    5304:	ldr	x0, [x1, #24]
    5308:	cmp	x2, x0
    530c:	b.ne	5320 <ZSTD_initDStream_usingDDict@plt+0x7a0>  // b.any
    5310:	cmp	w3, #0x40
    5314:	cset	w0, eq  // eq = none
    5318:	add	w0, w0, #0x1
    531c:	b	5300 <ZSTD_initDStream_usingDDict@plt+0x780>
    5320:	lsr	w5, w3, #3
    5324:	lsr	w4, w3, #3
    5328:	sub	x5, x2, x5
    532c:	cmp	x0, x5
    5330:	b.ls	5358 <ZSTD_initDStream_usingDDict@plt+0x7d8>  // b.plast
    5334:	sub	w4, w2, w0
    5338:	mov	w0, #0x1                   	// #1
    533c:	sub	x2, x2, w4, uxtw
    5340:	str	x2, [x1, #16]
    5344:	sub	w3, w3, w4, lsl #3
    5348:	str	w3, [x1, #8]
    534c:	ldr	x2, [x2]
    5350:	str	x2, [x1]
    5354:	b	5300 <ZSTD_initDStream_usingDDict@plt+0x780>
    5358:	mov	w0, #0x0                   	// #0
    535c:	b	533c <ZSTD_initDStream_usingDDict@plt+0x7bc>
    5360:	mov	w0, #0x3                   	// #3
    5364:	b	5300 <ZSTD_initDStream_usingDDict@plt+0x780>
    5368:	mov	x2, x0
    536c:	ldp	x4, x0, [x0]
    5370:	lsl	x3, x4, #2
    5374:	add	x4, x0, x4, lsl #2
    5378:	ldrh	w6, [x0, x3]
    537c:	ldrb	w5, [x4, #3]
    5380:	ldrb	w0, [x4, #2]
    5384:	ldr	w4, [x1, #8]
    5388:	ldr	x3, [x1]
    538c:	add	w4, w5, w4
    5390:	neg	w7, w4
    5394:	str	w4, [x1, #8]
    5398:	lsr	x3, x3, x7
    539c:	adrp	x7, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    53a0:	add	x7, x7, #0x124
    53a4:	ldr	w5, [x7, x5, lsl #2]
    53a8:	and	x3, x3, x5
    53ac:	add	x3, x3, w6, uxth
    53b0:	str	x3, [x2]
    53b4:	ret
    53b8:	mov	x2, x0
    53bc:	ldr	w6, [x1, #8]
    53c0:	ldp	x4, x0, [x0]
    53c4:	lsl	x3, x4, #2
    53c8:	add	x4, x0, x4, lsl #2
    53cc:	ldrh	w5, [x0, x3]
    53d0:	ldr	x3, [x1]
    53d4:	ldrb	w0, [x4, #2]
    53d8:	ldrb	w4, [x4, #3]
    53dc:	lsl	x3, x3, x6
    53e0:	neg	w7, w4
    53e4:	add	w4, w4, w6
    53e8:	str	w4, [x1, #8]
    53ec:	lsr	x3, x3, x7
    53f0:	add	x3, x3, w5, uxth
    53f4:	str	x3, [x2]
    53f8:	ret
    53fc:	mov	x3, x0
    5400:	mov	x0, x2
    5404:	cbnz	x2, 541c <ZSTD_initDStream_usingDDict@plt+0x89c>
    5408:	mov	x0, #0xffffffffffffffb8    	// #-72
    540c:	stp	xzr, xzr, [x3]
    5410:	stp	xzr, xzr, [x3, #16]
    5414:	str	xzr, [x3, #32]
    5418:	ret
    541c:	add	x2, x1, #0x8
    5420:	stp	x1, x2, [x3, #24]
    5424:	sub	x6, x0, #0x1
    5428:	cmp	x0, #0x7
    542c:	b.ls	546c <ZSTD_initDStream_usingDDict@plt+0x8ec>  // b.plast
    5430:	sub	x2, x0, #0x8
    5434:	add	x4, x1, x2
    5438:	ldr	x2, [x1, x2]
    543c:	str	x2, [x3]
    5440:	str	x4, [x3, #16]
    5444:	ldrb	w2, [x1, x6]
    5448:	clz	w1, w2
    544c:	cmp	w2, #0x0
    5450:	eor	w4, w1, #0x1f
    5454:	mov	w1, #0x8                   	// #8
    5458:	sub	w1, w1, w4
    545c:	csinv	x0, x0, xzr, ne  // ne = any
    5460:	csel	w1, w1, wzr, ne  // ne = any
    5464:	str	w1, [x3, #8]
    5468:	b	5418 <ZSTD_initDStream_usingDDict@plt+0x898>
    546c:	str	x1, [x3, #16]
    5470:	sub	x5, x0, #0x2
    5474:	cmp	x5, #0x5
    5478:	ldrb	w7, [x1]
    547c:	str	x7, [x3]
    5480:	b.hi	5500 <ZSTD_initDStream_usingDDict@plt+0x980>  // b.pmore
    5484:	cmp	w5, #0x5
    5488:	b.hi	5500 <ZSTD_initDStream_usingDDict@plt+0x980>  // b.pmore
    548c:	adrp	x4, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    5490:	add	x4, x4, #0x11c
    5494:	ldrb	w2, [x4, w5, uxtw]
    5498:	adr	x4, 54a4 <ZSTD_initDStream_usingDDict@plt+0x924>
    549c:	add	x2, x4, w2, sxtb #2
    54a0:	br	x2
    54a4:	ldrb	w2, [x1, #6]
    54a8:	add	x2, x7, x2, lsl #48
    54ac:	str	x2, [x3]
    54b0:	ldr	x4, [x3]
    54b4:	ldrb	w2, [x1, #5]
    54b8:	add	x2, x4, x2, lsl #40
    54bc:	str	x2, [x3]
    54c0:	ldr	x4, [x3]
    54c4:	ldrb	w2, [x1, #4]
    54c8:	add	x2, x4, x2, lsl #32
    54cc:	str	x2, [x3]
    54d0:	ldr	x4, [x3]
    54d4:	ldrb	w2, [x1, #3]
    54d8:	add	x2, x4, x2, lsl #24
    54dc:	str	x2, [x3]
    54e0:	ldr	x4, [x3]
    54e4:	ldrb	w2, [x1, #2]
    54e8:	add	x2, x4, x2, lsl #16
    54ec:	str	x2, [x3]
    54f0:	ldr	x4, [x3]
    54f4:	ldrb	w2, [x1, #1]
    54f8:	add	x2, x4, x2, lsl #8
    54fc:	str	x2, [x3]
    5500:	ldrb	w1, [x1, x6]
    5504:	cbz	w1, 5528 <ZSTD_initDStream_usingDDict@plt+0x9a8>
    5508:	clz	w1, w1
    550c:	mov	w2, #0x8                   	// #8
    5510:	eor	w1, w1, #0x1f
    5514:	sub	w4, w2, w0
    5518:	sub	w1, w2, w1
    551c:	add	w1, w1, w4, lsl #3
    5520:	str	w1, [x3, #8]
    5524:	b	5418 <ZSTD_initDStream_usingDDict@plt+0x898>
    5528:	mov	x0, #0xffffffffffffffec    	// #-20
    552c:	str	wzr, [x3, #8]
    5530:	b	5418 <ZSTD_initDStream_usingDDict@plt+0x898>
    5534:	mov	x6, x2
    5538:	stp	x29, x30, [sp, #-16]!
    553c:	mov	x7, x0
    5540:	mov	x29, sp
    5544:	ldrh	w3, [x6], #4
    5548:	mov	x0, x1
    554c:	ldr	w2, [x1, #8]
    5550:	ldr	x1, [x1]
    5554:	add	w2, w3, w2
    5558:	neg	w4, w2
    555c:	str	w2, [x0, #8]
    5560:	lsr	x1, x1, x4
    5564:	adrp	x4, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    5568:	add	x4, x4, #0x124
    556c:	ldr	w3, [x4, x3, lsl #2]
    5570:	and	x1, x1, x3
    5574:	str	x1, [x7]
    5578:	bl	52c0 <ZSTD_initDStream_usingDDict@plt+0x740>
    557c:	ldp	x29, x30, [sp], #16
    5580:	str	x6, [x7, #8]
    5584:	ret
    5588:	cmp	w0, #0xf
    558c:	mov	w1, #0xf                   	// #15
    5590:	csel	w0, w0, w1, ls  // ls = plast
    5594:	mov	w1, #0x1                   	// #1
    5598:	lsl	w0, w1, w0
    559c:	add	w0, w0, w1
    55a0:	sbfiz	x0, x0, #2, #32
    55a4:	b	46a0 <malloc@plt>
    55a8:	b	48e0 <free@plt>
    55ac:	cmp	w2, #0xff
    55b0:	b.hi	56f4 <ZSTD_initDStream_usingDDict@plt+0xb74>  // b.pmore
    55b4:	cmp	w3, #0xc
    55b8:	b.hi	56fc <ZSTD_initDStream_usingDDict@plt+0xb7c>  // b.pmore
    55bc:	sub	w6, w3, #0x1
    55c0:	mov	w4, #0x1                   	// #1
    55c4:	sub	sp, sp, #0x200
    55c8:	and	w8, w3, #0xffff
    55cc:	lsl	w10, w4, w3
    55d0:	sub	w11, w10, #0x1
    55d4:	lsl	w6, w4, w6
    55d8:	add	x13, x0, #0x4
    55dc:	add	w2, w2, #0x1
    55e0:	orr	w8, w8, #0x10000
    55e4:	sxth	w6, w6
    55e8:	mov	w7, w11
    55ec:	mov	x14, sp
    55f0:	mov	w15, w4
    55f4:	mov	w16, w4
    55f8:	mov	x5, #0x0                   	// #0
    55fc:	mov	w12, #0x0                   	// #0
    5600:	cmp	w2, w5
    5604:	b.hi	5650 <ZSTD_initDStream_usingDDict@plt+0xad0>  // b.pmore
    5608:	cbz	w12, 5610 <ZSTD_initDStream_usingDDict@plt+0xa90>
    560c:	bfi	w8, w4, #16, #16
    5610:	lsr	w5, w10, #3
    5614:	mov	x6, #0x0                   	// #0
    5618:	add	w5, w5, w10, lsr #1
    561c:	mov	w4, #0x0                   	// #0
    5620:	add	w5, w5, #0x3
    5624:	str	w8, [x0]
    5628:	cmp	w2, w6
    562c:	b.hi	56b8 <ZSTD_initDStream_usingDDict@plt+0xb38>  // b.pmore
    5630:	cbnz	w4, 5704 <ZSTD_initDStream_usingDDict@plt+0xb84>
    5634:	add	x5, x0, w10, sxtw #2
    5638:	mov	x4, sp
    563c:	cmp	x0, x5
    5640:	b.ne	56c0 <ZSTD_initDStream_usingDDict@plt+0xb40>  // b.any
    5644:	mov	x0, #0x0                   	// #0
    5648:	add	sp, sp, #0x200
    564c:	ret
    5650:	ldrsh	w9, [x1, x5, lsl #1]
    5654:	cmn	w9, #0x1
    5658:	b.ne	5674 <ZSTD_initDStream_usingDDict@plt+0xaf4>  // b.any
    565c:	add	x9, x13, w7, uxtw #2
    5660:	sub	w7, w7, #0x1
    5664:	strh	w16, [x14, x5, lsl #1]
    5668:	strb	w5, [x9, #2]
    566c:	add	x5, x5, #0x1
    5670:	b	5600 <ZSTD_initDStream_usingDDict@plt+0xa80>
    5674:	cmp	w9, w6
    5678:	strh	w9, [x14, x5, lsl #1]
    567c:	csel	w12, w12, w15, lt  // lt = tstop
    5680:	csel	w4, w4, wzr, lt  // lt = tstop
    5684:	b	566c <ZSTD_initDStream_usingDDict@plt+0xaec>
    5688:	add	x9, x13, w4, uxtw #2
    568c:	strb	w6, [x9, #2]
    5690:	add	w4, w4, w5
    5694:	and	w4, w4, w11
    5698:	cmp	w7, w4
    569c:	b.cc	5690 <ZSTD_initDStream_usingDDict@plt+0xb10>  // b.lo, b.ul, b.last
    56a0:	add	w8, w8, #0x1
    56a4:	ldrsh	w9, [x1, x6, lsl #1]
    56a8:	cmp	w9, w8
    56ac:	b.gt	5688 <ZSTD_initDStream_usingDDict@plt+0xb08>
    56b0:	add	x6, x6, #0x1
    56b4:	b	5628 <ZSTD_initDStream_usingDDict@plt+0xaa8>
    56b8:	mov	w8, #0x0                   	// #0
    56bc:	b	56a4 <ZSTD_initDStream_usingDDict@plt+0xb24>
    56c0:	ldrb	w1, [x0, #6]
    56c4:	ldrh	w2, [x4, x1, lsl #1]
    56c8:	add	w6, w2, #0x1
    56cc:	strh	w6, [x4, x1, lsl #1]
    56d0:	clz	w1, w2
    56d4:	eor	w1, w1, #0x1f
    56d8:	sub	w1, w3, w1
    56dc:	and	w1, w1, #0xff
    56e0:	strb	w1, [x0, #7]
    56e4:	lsl	w1, w2, w1
    56e8:	sub	w1, w1, w10
    56ec:	strh	w1, [x0, #4]!
    56f0:	b	563c <ZSTD_initDStream_usingDDict@plt+0xabc>
    56f4:	mov	x0, #0xffffffffffffffd2    	// #-46
    56f8:	ret
    56fc:	mov	x0, #0xffffffffffffffd4    	// #-44
    5700:	ret
    5704:	mov	x0, #0xffffffffffffffff    	// #-1
    5708:	b	5648 <ZSTD_initDStream_usingDDict@plt+0xac8>
    570c:	str	wzr, [x0]
    5710:	strh	wzr, [x0, #4]
    5714:	strb	w1, [x0, #6]
    5718:	strb	wzr, [x0, #7]
    571c:	mov	x0, #0x0                   	// #0
    5720:	ret
    5724:	mov	w2, #0x1                   	// #1
    5728:	lsl	w3, w2, w1
    572c:	cbz	w1, 5768 <ZSTD_initDStream_usingDDict@plt+0xbe8>
    5730:	add	x0, x0, #0x4
    5734:	sturh	w1, [x0, #-4]
    5738:	sturh	w2, [x0, #-2]
    573c:	mov	w2, #0x0                   	// #0
    5740:	cmp	w2, w3
    5744:	b.ne	5750 <ZSTD_initDStream_usingDDict@plt+0xbd0>  // b.any
    5748:	mov	x0, #0x0                   	// #0
    574c:	ret
    5750:	add	x0, x0, #0x4
    5754:	sturh	wzr, [x0, #-4]
    5758:	sturb	w2, [x0, #-2]
    575c:	add	w2, w2, #0x1
    5760:	sturb	w1, [x0, #-1]
    5764:	b	5740 <ZSTD_initDStream_usingDDict@plt+0xbc0>
    5768:	mov	x0, #0xffffffffffffffff    	// #-1
    576c:	b	574c <ZSTD_initDStream_usingDDict@plt+0xbcc>
    5770:	stp	x29, x30, [sp, #-96]!
    5774:	mov	x10, x1
    5778:	add	x10, x0, x10
    577c:	mov	x29, sp
    5780:	mov	x11, x0
    5784:	ldrh	w0, [x4, #2]
    5788:	mov	x1, x2
    578c:	mov	x9, x4
    5790:	mov	x2, x3
    5794:	sub	x14, x10, #0x3
    5798:	add	x8, sp, #0x38
    579c:	cbz	w0, 58d0 <ZSTD_initDStream_usingDDict@plt+0xd50>
    57a0:	mov	x0, x8
    57a4:	bl	53fc <ZSTD_initDStream_usingDDict@plt+0x87c>
    57a8:	cmn	x0, #0x78
    57ac:	b.hi	5800 <ZSTD_initDStream_usingDDict@plt+0xc80>  // b.pmore
    57b0:	add	x12, sp, #0x18
    57b4:	mov	x2, x9
    57b8:	mov	x1, x8
    57bc:	mov	x0, x12
    57c0:	bl	5534 <ZSTD_initDStream_usingDDict@plt+0x9b4>
    57c4:	mov	x2, x9
    57c8:	add	x13, sp, #0x28
    57cc:	mov	x1, x8
    57d0:	mov	x0, x13
    57d4:	bl	5534 <ZSTD_initDStream_usingDDict@plt+0x9b4>
    57d8:	mov	x9, x11
    57dc:	mov	x0, x8
    57e0:	bl	52c0 <ZSTD_initDStream_usingDDict@plt+0x740>
    57e4:	cmp	w0, #0x0
    57e8:	ccmp	x9, x14, #0x2, eq  // eq = none
    57ec:	b.cc	5808 <ZSTD_initDStream_usingDDict@plt+0xc88>  // b.lo, b.ul, b.last
    57f0:	sub	x10, x10, #0x2
    57f4:	cmp	x10, x9
    57f8:	b.cs	584c <ZSTD_initDStream_usingDDict@plt+0xccc>  // b.hs, b.nlast
    57fc:	mov	x0, #0xffffffffffffffba    	// #-70
    5800:	ldp	x29, x30, [sp], #96
    5804:	ret
    5808:	mov	x1, x8
    580c:	mov	x0, x12
    5810:	bl	53b8 <ZSTD_initDStream_usingDDict@plt+0x838>
    5814:	strb	w0, [x9]
    5818:	mov	x0, x13
    581c:	bl	53b8 <ZSTD_initDStream_usingDDict@plt+0x838>
    5820:	strb	w0, [x9, #1]
    5824:	mov	x0, x12
    5828:	bl	53b8 <ZSTD_initDStream_usingDDict@plt+0x838>
    582c:	strb	w0, [x9, #2]
    5830:	mov	x0, x13
    5834:	bl	53b8 <ZSTD_initDStream_usingDDict@plt+0x838>
    5838:	add	x9, x9, #0x4
    583c:	sturb	w0, [x9, #-1]
    5840:	b	57dc <ZSTD_initDStream_usingDDict@plt+0xc5c>
    5844:	mov	x9, x6
    5848:	b	57f4 <ZSTD_initDStream_usingDDict@plt+0xc74>
    584c:	mov	x1, x8
    5850:	mov	x0, x12
    5854:	bl	53b8 <ZSTD_initDStream_usingDDict@plt+0x838>
    5858:	strb	w0, [x9]
    585c:	mov	x0, x8
    5860:	bl	52c0 <ZSTD_initDStream_usingDDict@plt+0x740>
    5864:	cmp	w0, #0x3
    5868:	b.ne	5888 <ZSTD_initDStream_usingDDict@plt+0xd08>  // b.any
    586c:	mov	x1, x8
    5870:	mov	x0, x13
    5874:	bl	53b8 <ZSTD_initDStream_usingDDict@plt+0x838>
    5878:	add	x1, x9, #0x2
    587c:	strb	w0, [x9, #1]
    5880:	sub	x0, x1, x11
    5884:	b	5800 <ZSTD_initDStream_usingDDict@plt+0xc80>
    5888:	add	x0, x9, #0x1
    588c:	cmp	x10, x0
    5890:	b.cc	57fc <ZSTD_initDStream_usingDDict@plt+0xc7c>  // b.lo, b.ul, b.last
    5894:	mov	x1, x8
    5898:	mov	x0, x13
    589c:	bl	53b8 <ZSTD_initDStream_usingDDict@plt+0x838>
    58a0:	add	x6, x9, #0x2
    58a4:	sturb	w0, [x6, #-1]
    58a8:	mov	x0, x8
    58ac:	bl	52c0 <ZSTD_initDStream_usingDDict@plt+0x740>
    58b0:	cmp	w0, #0x3
    58b4:	b.ne	5844 <ZSTD_initDStream_usingDDict@plt+0xcc4>  // b.any
    58b8:	mov	x1, x8
    58bc:	mov	x0, x12
    58c0:	bl	53b8 <ZSTD_initDStream_usingDDict@plt+0x838>
    58c4:	add	x1, x9, #0x3
    58c8:	strb	w0, [x9, #2]
    58cc:	b	5880 <ZSTD_initDStream_usingDDict@plt+0xd00>
    58d0:	mov	x0, x8
    58d4:	bl	53fc <ZSTD_initDStream_usingDDict@plt+0x87c>
    58d8:	cmn	x0, #0x78
    58dc:	b.hi	5800 <ZSTD_initDStream_usingDDict@plt+0xc80>  // b.pmore
    58e0:	add	x12, sp, #0x18
    58e4:	mov	x2, x9
    58e8:	mov	x1, x8
    58ec:	mov	x0, x12
    58f0:	bl	5534 <ZSTD_initDStream_usingDDict@plt+0x9b4>
    58f4:	mov	x2, x9
    58f8:	add	x13, sp, #0x28
    58fc:	mov	x1, x8
    5900:	mov	x0, x13
    5904:	bl	5534 <ZSTD_initDStream_usingDDict@plt+0x9b4>
    5908:	mov	x9, x11
    590c:	mov	x0, x8
    5910:	bl	52c0 <ZSTD_initDStream_usingDDict@plt+0x740>
    5914:	cmp	w0, #0x0
    5918:	ccmp	x9, x14, #0x2, eq  // eq = none
    591c:	b.cc	595c <ZSTD_initDStream_usingDDict@plt+0xddc>  // b.lo, b.ul, b.last
    5920:	sub	x10, x10, #0x2
    5924:	cmp	x10, x9
    5928:	b.cc	57fc <ZSTD_initDStream_usingDDict@plt+0xc7c>  // b.lo, b.ul, b.last
    592c:	mov	x1, x8
    5930:	mov	x0, x12
    5934:	bl	5368 <ZSTD_initDStream_usingDDict@plt+0x7e8>
    5938:	strb	w0, [x9]
    593c:	mov	x0, x8
    5940:	bl	52c0 <ZSTD_initDStream_usingDDict@plt+0x740>
    5944:	cmp	w0, #0x3
    5948:	b.ne	59a0 <ZSTD_initDStream_usingDDict@plt+0xe20>  // b.any
    594c:	mov	x1, x8
    5950:	mov	x0, x13
    5954:	bl	5368 <ZSTD_initDStream_usingDDict@plt+0x7e8>
    5958:	b	5878 <ZSTD_initDStream_usingDDict@plt+0xcf8>
    595c:	mov	x1, x8
    5960:	mov	x0, x12
    5964:	bl	5368 <ZSTD_initDStream_usingDDict@plt+0x7e8>
    5968:	strb	w0, [x9]
    596c:	mov	x0, x13
    5970:	bl	5368 <ZSTD_initDStream_usingDDict@plt+0x7e8>
    5974:	strb	w0, [x9, #1]
    5978:	mov	x0, x12
    597c:	bl	5368 <ZSTD_initDStream_usingDDict@plt+0x7e8>
    5980:	strb	w0, [x9, #2]
    5984:	mov	x0, x13
    5988:	bl	5368 <ZSTD_initDStream_usingDDict@plt+0x7e8>
    598c:	add	x9, x9, #0x4
    5990:	sturb	w0, [x9, #-1]
    5994:	b	590c <ZSTD_initDStream_usingDDict@plt+0xd8c>
    5998:	mov	x9, x6
    599c:	b	5924 <ZSTD_initDStream_usingDDict@plt+0xda4>
    59a0:	add	x0, x9, #0x1
    59a4:	cmp	x10, x0
    59a8:	b.cc	57fc <ZSTD_initDStream_usingDDict@plt+0xc7c>  // b.lo, b.ul, b.last
    59ac:	mov	x1, x8
    59b0:	mov	x0, x13
    59b4:	bl	5368 <ZSTD_initDStream_usingDDict@plt+0x7e8>
    59b8:	add	x6, x9, #0x2
    59bc:	sturb	w0, [x6, #-1]
    59c0:	mov	x0, x8
    59c4:	bl	52c0 <ZSTD_initDStream_usingDDict@plt+0x740>
    59c8:	cmp	w0, #0x3
    59cc:	b.ne	5998 <ZSTD_initDStream_usingDDict@plt+0xe18>  // b.any
    59d0:	mov	x1, x8
    59d4:	mov	x0, x12
    59d8:	bl	5368 <ZSTD_initDStream_usingDDict@plt+0x7e8>
    59dc:	b	58c4 <ZSTD_initDStream_usingDDict@plt+0xd44>
    59e0:	sub	sp, sp, #0x260
    59e4:	stp	x29, x30, [sp]
    59e8:	mov	x29, sp
    59ec:	stp	x21, x22, [sp, #32]
    59f0:	mov	x22, x0
    59f4:	mov	w0, #0xff                  	// #255
    59f8:	str	x25, [sp, #64]
    59fc:	add	x25, sp, #0x60
    5a00:	mov	x21, x4
    5a04:	mov	x4, x3
    5a08:	stp	x19, x20, [sp, #16]
    5a0c:	mov	x19, x2
    5a10:	mov	x20, x3
    5a14:	mov	x3, x2
    5a18:	add	x2, sp, #0x58
    5a1c:	stp	x23, x24, [sp, #48]
    5a20:	mov	x23, x1
    5a24:	mov	w24, w5
    5a28:	add	x1, sp, #0x5c
    5a2c:	str	w0, [sp, #92]
    5a30:	mov	x0, x25
    5a34:	bl	4cb4 <ZSTD_initDStream_usingDDict@plt+0x134>
    5a38:	mov	x18, x0
    5a3c:	cmn	x0, #0x78
    5a40:	b.hi	5a8c <ZSTD_initDStream_usingDDict@plt+0xf0c>  // b.pmore
    5a44:	ldr	w3, [sp, #88]
    5a48:	cmp	w3, w24
    5a4c:	b.hi	5a88 <ZSTD_initDStream_usingDDict@plt+0xf08>  // b.pmore
    5a50:	ldr	w2, [sp, #92]
    5a54:	mov	x1, x25
    5a58:	mov	x0, x21
    5a5c:	bl	55ac <ZSTD_initDStream_usingDDict@plt+0xa2c>
    5a60:	cmn	x0, #0x78
    5a64:	b.hi	5a80 <ZSTD_initDStream_usingDDict@plt+0xf00>  // b.pmore
    5a68:	mov	x4, x21
    5a6c:	sub	x3, x20, x18
    5a70:	add	x2, x19, x18
    5a74:	mov	x1, x23
    5a78:	mov	x0, x22
    5a7c:	bl	5770 <ZSTD_initDStream_usingDDict@plt+0xbf0>
    5a80:	mov	x18, x0
    5a84:	b	5a8c <ZSTD_initDStream_usingDDict@plt+0xf0c>
    5a88:	mov	x18, #0xffffffffffffffd4    	// #-44
    5a8c:	mov	x0, x18
    5a90:	ldp	x29, x30, [sp]
    5a94:	ldp	x19, x20, [sp, #16]
    5a98:	ldp	x21, x22, [sp, #32]
    5a9c:	ldp	x23, x24, [sp, #48]
    5aa0:	ldr	x25, [sp, #64]
    5aa4:	add	sp, sp, #0x260
    5aa8:	ret
    5aac:	mov	x12, #0x4020                	// #16416
    5ab0:	sub	sp, sp, x12
    5ab4:	add	x4, sp, #0x18
    5ab8:	mov	w5, #0xc                   	// #12
    5abc:	stp	x29, x30, [sp]
    5ac0:	mov	x29, sp
    5ac4:	bl	59e0 <ZSTD_initDStream_usingDDict@plt+0xe60>
    5ac8:	mov	x12, #0x4020                	// #16416
    5acc:	ldp	x29, x30, [sp]
    5ad0:	add	sp, sp, x12
    5ad4:	ret
    5ad8:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
    5adc:	add	x0, x0, #0x3c0
    5ae0:	ret
    5ae4:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
    5ae8:	add	x0, x0, #0x3c0
    5aec:	ret
    5af0:	ret
    5af4:	mov	w0, #0x0                   	// #0
    5af8:	ret
    5afc:	mov	x16, x1
    5b00:	mov	x0, x2
    5b04:	br	x16
    5b08:	stp	x29, x30, [sp, #-16]!
    5b0c:	mov	x0, x2
    5b10:	mov	x29, sp
    5b14:	blr	x1
    5b18:	mov	w0, #0x1                   	// #1
    5b1c:	ldp	x29, x30, [sp], #16
    5b20:	ret
    5b24:	cmp	x0, #0x0
    5b28:	cset	x0, ne  // ne = any
    5b2c:	lsl	x0, x0, #2
    5b30:	ret
    5b34:	mov	x2, #0xeb4f                	// #60239
    5b38:	movk	x2, #0x27d4, lsl #16
    5b3c:	movk	x2, #0xae3d, lsl #32
    5b40:	movk	x2, #0xc2b2, lsl #48
    5b44:	mul	x1, x1, x2
    5b48:	mov	x2, #0xca87                	// #51847
    5b4c:	movk	x2, #0x85eb, lsl #16
    5b50:	movk	x2, #0x79b1, lsl #32
    5b54:	movk	x2, #0x9e37, lsl #48
    5b58:	ror	x1, x1, #33
    5b5c:	mul	x1, x1, x2
    5b60:	eor	x1, x1, x0
    5b64:	mov	x0, #0xae63                	// #44643
    5b68:	movk	x0, #0xc2b2, lsl #16
    5b6c:	movk	x0, #0xca77, lsl #32
    5b70:	movk	x0, #0x85eb, lsl #48
    5b74:	madd	x0, x1, x2, x0
    5b78:	ret
    5b7c:	mov	w0, #0x25a                 	// #602
    5b80:	ret
    5b84:	ldp	x2, x3, [x1]
    5b88:	stp	x2, x3, [x0]
    5b8c:	ldp	x2, x3, [x1, #16]
    5b90:	stp	x2, x3, [x0, #16]
    5b94:	ldp	x2, x3, [x1, #32]
    5b98:	stp	x2, x3, [x0, #32]
    5b9c:	ret
    5ba0:	mov	x2, #0x58                  	// #88
    5ba4:	b	4460 <memcpy@plt>
    5ba8:	add	x3, x0, x1
    5bac:	tst	x0, #0x3
    5bb0:	b.ne	5d30 <ZSTD_initDStream_usingDDict@plt+0x11b0>  // b.any
    5bb4:	cmp	x1, #0xf
    5bb8:	b.ls	5cfc <ZSTD_initDStream_usingDDict@plt+0x117c>  // b.plast
    5bbc:	mov	w4, #0x4428                	// #17448
    5bc0:	mov	w7, #0xca77                	// #51831
    5bc4:	mov	w5, #0x864f                	// #34383
    5bc8:	movk	w4, #0x2423, lsl #16
    5bcc:	movk	w7, #0x85eb, lsl #16
    5bd0:	movk	w5, #0x61c8, lsl #16
    5bd4:	mov	w10, #0x79b1                	// #31153
    5bd8:	sub	x11, x3, #0x10
    5bdc:	add	w4, w2, w4
    5be0:	add	w8, w2, w7
    5be4:	add	w5, w2, w5
    5be8:	mov	x6, x0
    5bec:	movk	w10, #0x9e37, lsl #16
    5bf0:	ldr	w9, [x6]
    5bf4:	add	x6, x6, #0x10
    5bf8:	madd	w4, w9, w7, w4
    5bfc:	ldur	w9, [x6, #-12]
    5c00:	ror	w4, w4, #19
    5c04:	madd	w8, w9, w7, w8
    5c08:	ldur	w9, [x6, #-8]
    5c0c:	mul	w4, w4, w10
    5c10:	ror	w8, w8, #19
    5c14:	madd	w2, w9, w7, w2
    5c18:	ldur	w9, [x6, #-4]
    5c1c:	cmp	x11, x6
    5c20:	mul	w8, w8, w10
    5c24:	ror	w2, w2, #19
    5c28:	madd	w5, w9, w7, w5
    5c2c:	mul	w2, w2, w10
    5c30:	ror	w5, w5, #19
    5c34:	mul	w5, w5, w10
    5c38:	b.cs	5bf0 <ZSTD_initDStream_usingDDict@plt+0x1070>  // b.hs, b.nlast
    5c3c:	sub	x6, x1, #0x10
    5c40:	sub	x7, x3, #0xf
    5c44:	add	x9, x0, #0x1
    5c48:	and	x6, x6, #0xfffffffffffffff0
    5c4c:	cmp	x7, x9
    5c50:	add	x6, x6, #0x10
    5c54:	ror	w2, w2, #20
    5c58:	ror	w5, w5, #14
    5c5c:	ror	w4, w4, #31
    5c60:	mov	x7, #0x10                  	// #16
    5c64:	ror	w8, w8, #25
    5c68:	csel	x6, x6, x7, cs  // cs = hs, nlast
    5c6c:	add	w2, w2, w5
    5c70:	add	x0, x0, x6
    5c74:	add	w4, w4, w8
    5c78:	add	w2, w2, w4
    5c7c:	mov	w5, #0xae3d                	// #44605
    5c80:	mov	w6, #0xeb2f                	// #60207
    5c84:	add	w2, w2, w1
    5c88:	mov	x4, x0
    5c8c:	movk	w5, #0xc2b2, lsl #16
    5c90:	movk	w6, #0x27d4, lsl #16
    5c94:	add	x4, x4, #0x4
    5c98:	cmp	x4, x3
    5c9c:	b.ls	5d08 <ZSTD_initDStream_usingDDict@plt+0x1188>  // b.plast
    5ca0:	add	x5, x0, #0x1
    5ca4:	sub	x1, x3, x0
    5ca8:	add	x4, x3, #0x1
    5cac:	and	x1, x1, #0xfffffffffffffffc
    5cb0:	cmp	x4, x5
    5cb4:	mov	w4, #0x67b1                	// #26545
    5cb8:	csel	x1, x1, xzr, cs  // cs = hs, nlast
    5cbc:	mov	w5, #0x79b1                	// #31153
    5cc0:	add	x0, x0, x1
    5cc4:	movk	w4, #0x1656, lsl #16
    5cc8:	movk	w5, #0x9e37, lsl #16
    5ccc:	cmp	x0, x3
    5cd0:	b.cc	5d1c <ZSTD_initDStream_usingDDict@plt+0x119c>  // b.lo, b.ul, b.last
    5cd4:	eor	w2, w2, w2, lsr #15
    5cd8:	mov	w0, #0xca77                	// #51831
    5cdc:	movk	w0, #0x85eb, lsl #16
    5ce0:	mul	w0, w2, w0
    5ce4:	mov	w2, #0xae3d                	// #44605
    5ce8:	movk	w2, #0xc2b2, lsl #16
    5cec:	eor	w0, w0, w0, lsr #13
    5cf0:	mul	w0, w0, w2
    5cf4:	eor	w0, w0, w0, lsr #16
    5cf8:	ret
    5cfc:	mov	w4, #0x67b1                	// #26545
    5d00:	movk	w4, #0x1656, lsl #16
    5d04:	b	5c78 <ZSTD_initDStream_usingDDict@plt+0x10f8>
    5d08:	ldur	w1, [x4, #-4]
    5d0c:	madd	w2, w1, w5, w2
    5d10:	ror	w2, w2, #15
    5d14:	mul	w2, w2, w6
    5d18:	b	5c94 <ZSTD_initDStream_usingDDict@plt+0x1114>
    5d1c:	ldrb	w1, [x0], #1
    5d20:	madd	w2, w1, w4, w2
    5d24:	ror	w2, w2, #21
    5d28:	mul	w2, w2, w5
    5d2c:	b	5ccc <ZSTD_initDStream_usingDDict@plt+0x114c>
    5d30:	cmp	x1, #0xf
    5d34:	b.ls	5e64 <ZSTD_initDStream_usingDDict@plt+0x12e4>  // b.plast
    5d38:	mov	w4, #0x4428                	// #17448
    5d3c:	mov	w7, #0xca77                	// #51831
    5d40:	mov	w5, #0x864f                	// #34383
    5d44:	movk	w4, #0x2423, lsl #16
    5d48:	movk	w7, #0x85eb, lsl #16
    5d4c:	movk	w5, #0x61c8, lsl #16
    5d50:	mov	w10, #0x79b1                	// #31153
    5d54:	sub	x11, x3, #0x10
    5d58:	add	w4, w2, w4
    5d5c:	add	w8, w2, w7
    5d60:	add	w5, w2, w5
    5d64:	mov	x6, x0
    5d68:	movk	w10, #0x9e37, lsl #16
    5d6c:	ldr	w9, [x6]
    5d70:	add	x6, x6, #0x10
    5d74:	madd	w4, w9, w7, w4
    5d78:	ldur	w9, [x6, #-12]
    5d7c:	ror	w4, w4, #19
    5d80:	madd	w8, w9, w7, w8
    5d84:	ldur	w9, [x6, #-8]
    5d88:	mul	w4, w4, w10
    5d8c:	ror	w8, w8, #19
    5d90:	madd	w2, w9, w7, w2
    5d94:	ldur	w9, [x6, #-4]
    5d98:	cmp	x11, x6
    5d9c:	mul	w8, w8, w10
    5da0:	ror	w2, w2, #19
    5da4:	madd	w5, w9, w7, w5
    5da8:	mul	w2, w2, w10
    5dac:	ror	w5, w5, #19
    5db0:	mul	w5, w5, w10
    5db4:	b.cs	5d6c <ZSTD_initDStream_usingDDict@plt+0x11ec>  // b.hs, b.nlast
    5db8:	sub	x6, x1, #0x10
    5dbc:	sub	x7, x3, #0xf
    5dc0:	add	x9, x0, #0x1
    5dc4:	and	x6, x6, #0xfffffffffffffff0
    5dc8:	cmp	x7, x9
    5dcc:	add	x6, x6, #0x10
    5dd0:	ror	w2, w2, #20
    5dd4:	ror	w5, w5, #14
    5dd8:	ror	w4, w4, #31
    5ddc:	mov	x7, #0x10                  	// #16
    5de0:	ror	w8, w8, #25
    5de4:	csel	x6, x6, x7, cs  // cs = hs, nlast
    5de8:	add	w2, w2, w5
    5dec:	add	x0, x0, x6
    5df0:	add	w4, w4, w8
    5df4:	add	w2, w2, w4
    5df8:	mov	w5, #0xae3d                	// #44605
    5dfc:	mov	w6, #0xeb2f                	// #60207
    5e00:	add	w2, w2, w1
    5e04:	mov	x4, x0
    5e08:	movk	w5, #0xc2b2, lsl #16
    5e0c:	movk	w6, #0x27d4, lsl #16
    5e10:	add	x4, x4, #0x4
    5e14:	cmp	x4, x3
    5e18:	b.ls	5e70 <ZSTD_initDStream_usingDDict@plt+0x12f0>  // b.plast
    5e1c:	add	x5, x0, #0x1
    5e20:	sub	x1, x3, x0
    5e24:	add	x4, x3, #0x1
    5e28:	and	x1, x1, #0xfffffffffffffffc
    5e2c:	cmp	x4, x5
    5e30:	mov	w4, #0x67b1                	// #26545
    5e34:	csel	x1, x1, xzr, cs  // cs = hs, nlast
    5e38:	mov	w5, #0x79b1                	// #31153
    5e3c:	add	x0, x0, x1
    5e40:	movk	w4, #0x1656, lsl #16
    5e44:	movk	w5, #0x9e37, lsl #16
    5e48:	cmp	x0, x3
    5e4c:	b.cs	5cd4 <ZSTD_initDStream_usingDDict@plt+0x1154>  // b.hs, b.nlast
    5e50:	ldrb	w1, [x0], #1
    5e54:	madd	w2, w1, w4, w2
    5e58:	ror	w2, w2, #21
    5e5c:	mul	w2, w2, w5
    5e60:	b	5e48 <ZSTD_initDStream_usingDDict@plt+0x12c8>
    5e64:	mov	w4, #0x67b1                	// #26545
    5e68:	movk	w4, #0x1656, lsl #16
    5e6c:	b	5df4 <ZSTD_initDStream_usingDDict@plt+0x1274>
    5e70:	ldur	w1, [x4, #-4]
    5e74:	madd	w2, w1, w5, w2
    5e78:	ror	w2, w2, #15
    5e7c:	mul	w2, w2, w6
    5e80:	b	5e10 <ZSTD_initDStream_usingDDict@plt+0x1290>
    5e84:	stp	x29, x30, [sp, #-16]!
    5e88:	mov	x5, x0
    5e8c:	mov	x3, x1
    5e90:	mov	x29, sp
    5e94:	mov	x4, x2
    5e98:	add	x6, x0, x1
    5e9c:	tst	x0, #0x7
    5ea0:	b.ne	6110 <ZSTD_initDStream_usingDDict@plt+0x1590>  // b.any
    5ea4:	cmp	x1, #0x1f
    5ea8:	b.ls	60c0 <ZSTD_initDStream_usingDDict@plt+0x1540>  // b.plast
    5eac:	mov	x1, #0xb5d6                	// #46550
    5eb0:	mov	x8, #0xeb4f                	// #60239
    5eb4:	mov	x9, #0x3579                	// #13689
    5eb8:	movk	x1, #0xadc0, lsl #16
    5ebc:	movk	x8, #0x27d4, lsl #16
    5ec0:	movk	x9, #0x7a14, lsl #16
    5ec4:	mov	x11, #0xca87                	// #51847
    5ec8:	movk	x1, #0x27ee, lsl #32
    5ecc:	movk	x8, #0xae3d, lsl #32
    5ed0:	movk	x9, #0x864e, lsl #32
    5ed4:	movk	x11, #0x85eb, lsl #16
    5ed8:	movk	x1, #0x60ea, lsl #48
    5edc:	movk	x8, #0xc2b2, lsl #48
    5ee0:	movk	x9, #0x61c8, lsl #48
    5ee4:	movk	x11, #0x79b1, lsl #32
    5ee8:	sub	x12, x6, #0x20
    5eec:	add	x1, x2, x1
    5ef0:	add	x10, x2, x8
    5ef4:	add	x9, x2, x9
    5ef8:	mov	x7, x0
    5efc:	movk	x11, #0x9e37, lsl #48
    5f00:	ldr	x0, [x7]
    5f04:	add	x7, x7, #0x20
    5f08:	ldur	x2, [x7, #-16]
    5f0c:	madd	x1, x0, x8, x1
    5f10:	ldur	x0, [x7, #-24]
    5f14:	madd	x4, x2, x8, x4
    5f18:	ror	x1, x1, #33
    5f1c:	madd	x0, x0, x8, x10
    5f20:	ror	x4, x4, #33
    5f24:	mul	x1, x1, x11
    5f28:	mul	x4, x4, x11
    5f2c:	ror	x0, x0, #33
    5f30:	mul	x10, x0, x11
    5f34:	ldur	x0, [x7, #-8]
    5f38:	cmp	x12, x7
    5f3c:	madd	x9, x0, x8, x9
    5f40:	ror	x9, x9, #33
    5f44:	mul	x9, x9, x11
    5f48:	b.cs	5f00 <ZSTD_initDStream_usingDDict@plt+0x1380>  // b.hs, b.nlast
    5f4c:	sub	x0, x3, #0x20
    5f50:	sub	x2, x6, #0x1f
    5f54:	add	x7, x5, #0x1
    5f58:	and	x0, x0, #0xffffffffffffffe0
    5f5c:	cmp	x2, x7
    5f60:	add	x0, x0, #0x20
    5f64:	mov	x2, #0x20                  	// #32
    5f68:	csel	x0, x0, x2, cs  // cs = hs, nlast
    5f6c:	add	x5, x5, x0
    5f70:	ror	x7, x4, #52
    5f74:	ror	x0, x9, #46
    5f78:	add	x7, x7, x0
    5f7c:	ror	x2, x1, #63
    5f80:	ror	x0, x10, #57
    5f84:	add	x0, x2, x0
    5f88:	add	x0, x7, x0
    5f8c:	bl	5b34 <ZSTD_initDStream_usingDDict@plt+0xfb4>
    5f90:	mov	x1, x10
    5f94:	bl	5b34 <ZSTD_initDStream_usingDDict@plt+0xfb4>
    5f98:	mov	x1, x4
    5f9c:	bl	5b34 <ZSTD_initDStream_usingDDict@plt+0xfb4>
    5fa0:	mov	x1, x9
    5fa4:	bl	5b34 <ZSTD_initDStream_usingDDict@plt+0xfb4>
    5fa8:	add	x1, x3, x0
    5fac:	mov	x4, #0xeb4f                	// #60239
    5fb0:	mov	x3, #0xca87                	// #51847
    5fb4:	mov	x7, #0xae63                	// #44643
    5fb8:	movk	x4, #0x27d4, lsl #16
    5fbc:	movk	x3, #0x85eb, lsl #16
    5fc0:	movk	x7, #0xc2b2, lsl #16
    5fc4:	movk	x4, #0xae3d, lsl #32
    5fc8:	movk	x3, #0x79b1, lsl #32
    5fcc:	movk	x7, #0xca77, lsl #32
    5fd0:	mov	x2, x5
    5fd4:	movk	x4, #0xc2b2, lsl #48
    5fd8:	movk	x3, #0x9e37, lsl #48
    5fdc:	movk	x7, #0x85eb, lsl #48
    5fe0:	add	x2, x2, #0x8
    5fe4:	cmp	x2, x6
    5fe8:	b.ls	60d8 <ZSTD_initDStream_usingDDict@plt+0x1558>  // b.plast
    5fec:	add	x2, x6, #0x1
    5ff0:	add	x3, x5, #0x1
    5ff4:	sub	x0, x6, x5
    5ff8:	cmp	x2, x3
    5ffc:	and	x0, x0, #0xfffffffffffffff8
    6000:	csel	x0, x0, xzr, cs  // cs = hs, nlast
    6004:	add	x2, x5, x0
    6008:	add	x3, x2, #0x4
    600c:	cmp	x3, x6
    6010:	b.hi	605c <ZSTD_initDStream_usingDDict@plt+0x14dc>  // b.pmore
    6014:	mov	x2, #0xca87                	// #51847
    6018:	ldr	w0, [x5, x0]
    601c:	movk	x2, #0x85eb, lsl #16
    6020:	movk	x2, #0x79b1, lsl #32
    6024:	movk	x2, #0x9e37, lsl #48
    6028:	mul	x0, x0, x2
    602c:	mov	x2, #0x79f9                	// #31225
    6030:	movk	x2, #0x9e37, lsl #16
    6034:	eor	x1, x0, x1
    6038:	movk	x2, #0x67b1, lsl #32
    603c:	movk	x2, #0x1656, lsl #48
    6040:	ror	x0, x1, #41
    6044:	mov	x1, #0xeb4f                	// #60239
    6048:	movk	x1, #0x27d4, lsl #16
    604c:	movk	x1, #0xae3d, lsl #32
    6050:	movk	x1, #0xc2b2, lsl #48
    6054:	madd	x1, x0, x1, x2
    6058:	mov	x2, x3
    605c:	mov	x3, #0x67c5                	// #26565
    6060:	mov	x4, #0xca87                	// #51847
    6064:	movk	x3, #0x1656, lsl #16
    6068:	movk	x4, #0x85eb, lsl #16
    606c:	movk	x3, #0xeb2f, lsl #32
    6070:	movk	x4, #0x79b1, lsl #32
    6074:	movk	x3, #0x27d4, lsl #48
    6078:	movk	x4, #0x9e37, lsl #48
    607c:	cmp	x2, x6
    6080:	b.cc	60f8 <ZSTD_initDStream_usingDDict@plt+0x1578>  // b.lo, b.ul, b.last
    6084:	mov	x0, #0xeb4f                	// #60239
    6088:	eor	x1, x1, x1, lsr #33
    608c:	movk	x0, #0x27d4, lsl #16
    6090:	movk	x0, #0xae3d, lsl #32
    6094:	movk	x0, #0xc2b2, lsl #48
    6098:	ldp	x29, x30, [sp], #16
    609c:	mul	x0, x1, x0
    60a0:	mov	x1, #0x79f9                	// #31225
    60a4:	movk	x1, #0x9e37, lsl #16
    60a8:	eor	x0, x0, x0, lsr #29
    60ac:	movk	x1, #0x67b1, lsl #32
    60b0:	movk	x1, #0x1656, lsl #48
    60b4:	mul	x0, x0, x1
    60b8:	eor	x0, x0, x0, lsr #32
    60bc:	ret
    60c0:	mov	x1, #0x67c5                	// #26565
    60c4:	movk	x1, #0x1656, lsl #16
    60c8:	movk	x1, #0xeb2f, lsl #32
    60cc:	movk	x1, #0x27d4, lsl #48
    60d0:	add	x0, x2, x1
    60d4:	b	5fa8 <ZSTD_initDStream_usingDDict@plt+0x1428>
    60d8:	ldur	x0, [x2, #-8]
    60dc:	mul	x0, x0, x4
    60e0:	ror	x0, x0, #33
    60e4:	mul	x0, x0, x3
    60e8:	eor	x1, x0, x1
    60ec:	ror	x1, x1, #37
    60f0:	madd	x1, x1, x3, x7
    60f4:	b	5fe0 <ZSTD_initDStream_usingDDict@plt+0x1460>
    60f8:	ldrb	w0, [x2], #1
    60fc:	mul	x0, x0, x3
    6100:	eor	x1, x0, x1
    6104:	ror	x1, x1, #53
    6108:	mul	x1, x1, x4
    610c:	b	607c <ZSTD_initDStream_usingDDict@plt+0x14fc>
    6110:	cmp	x1, #0x1f
    6114:	b.ls	6308 <ZSTD_initDStream_usingDDict@plt+0x1788>  // b.plast
    6118:	mov	x1, #0xb5d6                	// #46550
    611c:	mov	x8, #0xeb4f                	// #60239
    6120:	mov	x9, #0x3579                	// #13689
    6124:	movk	x1, #0xadc0, lsl #16
    6128:	movk	x8, #0x27d4, lsl #16
    612c:	movk	x9, #0x7a14, lsl #16
    6130:	mov	x11, #0xca87                	// #51847
    6134:	movk	x1, #0x27ee, lsl #32
    6138:	movk	x8, #0xae3d, lsl #32
    613c:	movk	x9, #0x864e, lsl #32
    6140:	movk	x11, #0x85eb, lsl #16
    6144:	movk	x1, #0x60ea, lsl #48
    6148:	movk	x8, #0xc2b2, lsl #48
    614c:	movk	x9, #0x61c8, lsl #48
    6150:	movk	x11, #0x79b1, lsl #32
    6154:	sub	x12, x6, #0x20
    6158:	add	x1, x2, x1
    615c:	add	x10, x2, x8
    6160:	add	x9, x2, x9
    6164:	mov	x7, x0
    6168:	movk	x11, #0x9e37, lsl #48
    616c:	ldr	x0, [x7]
    6170:	add	x7, x7, #0x20
    6174:	ldur	x2, [x7, #-16]
    6178:	madd	x1, x0, x8, x1
    617c:	ldur	x0, [x7, #-24]
    6180:	madd	x4, x2, x8, x4
    6184:	ror	x1, x1, #33
    6188:	madd	x0, x0, x8, x10
    618c:	ror	x4, x4, #33
    6190:	mul	x1, x1, x11
    6194:	mul	x4, x4, x11
    6198:	ror	x0, x0, #33
    619c:	mul	x10, x0, x11
    61a0:	ldur	x0, [x7, #-8]
    61a4:	cmp	x12, x7
    61a8:	madd	x9, x0, x8, x9
    61ac:	ror	x9, x9, #33
    61b0:	mul	x9, x9, x11
    61b4:	b.cs	616c <ZSTD_initDStream_usingDDict@plt+0x15ec>  // b.hs, b.nlast
    61b8:	sub	x0, x3, #0x20
    61bc:	sub	x2, x6, #0x1f
    61c0:	add	x7, x5, #0x1
    61c4:	and	x0, x0, #0xffffffffffffffe0
    61c8:	cmp	x2, x7
    61cc:	add	x0, x0, #0x20
    61d0:	mov	x2, #0x20                  	// #32
    61d4:	csel	x0, x0, x2, cs  // cs = hs, nlast
    61d8:	add	x5, x5, x0
    61dc:	ror	x7, x4, #52
    61e0:	ror	x0, x9, #46
    61e4:	add	x7, x7, x0
    61e8:	ror	x2, x1, #63
    61ec:	ror	x0, x10, #57
    61f0:	add	x0, x2, x0
    61f4:	add	x0, x7, x0
    61f8:	bl	5b34 <ZSTD_initDStream_usingDDict@plt+0xfb4>
    61fc:	mov	x1, x10
    6200:	bl	5b34 <ZSTD_initDStream_usingDDict@plt+0xfb4>
    6204:	mov	x1, x4
    6208:	bl	5b34 <ZSTD_initDStream_usingDDict@plt+0xfb4>
    620c:	mov	x1, x9
    6210:	bl	5b34 <ZSTD_initDStream_usingDDict@plt+0xfb4>
    6214:	add	x1, x3, x0
    6218:	mov	x4, #0xeb4f                	// #60239
    621c:	mov	x3, #0xca87                	// #51847
    6220:	mov	x7, #0xae63                	// #44643
    6224:	movk	x4, #0x27d4, lsl #16
    6228:	movk	x3, #0x85eb, lsl #16
    622c:	movk	x7, #0xc2b2, lsl #16
    6230:	movk	x4, #0xae3d, lsl #32
    6234:	movk	x3, #0x79b1, lsl #32
    6238:	movk	x7, #0xca77, lsl #32
    623c:	mov	x2, x5
    6240:	movk	x4, #0xc2b2, lsl #48
    6244:	movk	x3, #0x9e37, lsl #48
    6248:	movk	x7, #0x85eb, lsl #48
    624c:	add	x2, x2, #0x8
    6250:	cmp	x2, x6
    6254:	b.ls	6320 <ZSTD_initDStream_usingDDict@plt+0x17a0>  // b.plast
    6258:	add	x2, x6, #0x1
    625c:	add	x3, x5, #0x1
    6260:	sub	x0, x6, x5
    6264:	cmp	x2, x3
    6268:	and	x0, x0, #0xfffffffffffffff8
    626c:	csel	x0, x0, xzr, cs  // cs = hs, nlast
    6270:	add	x2, x5, x0
    6274:	add	x3, x2, #0x4
    6278:	cmp	x3, x6
    627c:	b.hi	62c8 <ZSTD_initDStream_usingDDict@plt+0x1748>  // b.pmore
    6280:	mov	x2, #0xca87                	// #51847
    6284:	ldr	w0, [x5, x0]
    6288:	movk	x2, #0x85eb, lsl #16
    628c:	movk	x2, #0x79b1, lsl #32
    6290:	movk	x2, #0x9e37, lsl #48
    6294:	mul	x0, x0, x2
    6298:	mov	x2, #0x79f9                	// #31225
    629c:	movk	x2, #0x9e37, lsl #16
    62a0:	eor	x1, x0, x1
    62a4:	movk	x2, #0x67b1, lsl #32
    62a8:	movk	x2, #0x1656, lsl #48
    62ac:	ror	x0, x1, #41
    62b0:	mov	x1, #0xeb4f                	// #60239
    62b4:	movk	x1, #0x27d4, lsl #16
    62b8:	movk	x1, #0xae3d, lsl #32
    62bc:	movk	x1, #0xc2b2, lsl #48
    62c0:	madd	x1, x0, x1, x2
    62c4:	mov	x2, x3
    62c8:	mov	x3, #0x67c5                	// #26565
    62cc:	mov	x4, #0xca87                	// #51847
    62d0:	movk	x3, #0x1656, lsl #16
    62d4:	movk	x4, #0x85eb, lsl #16
    62d8:	movk	x3, #0xeb2f, lsl #32
    62dc:	movk	x4, #0x79b1, lsl #32
    62e0:	movk	x3, #0x27d4, lsl #48
    62e4:	movk	x4, #0x9e37, lsl #48
    62e8:	cmp	x2, x6
    62ec:	b.cs	6084 <ZSTD_initDStream_usingDDict@plt+0x1504>  // b.hs, b.nlast
    62f0:	ldrb	w0, [x2], #1
    62f4:	mul	x0, x0, x3
    62f8:	eor	x1, x0, x1
    62fc:	ror	x1, x1, #53
    6300:	mul	x1, x1, x4
    6304:	b	62e8 <ZSTD_initDStream_usingDDict@plt+0x1768>
    6308:	mov	x1, #0x67c5                	// #26565
    630c:	movk	x1, #0x1656, lsl #16
    6310:	movk	x1, #0xeb2f, lsl #32
    6314:	movk	x1, #0x27d4, lsl #48
    6318:	add	x0, x2, x1
    631c:	b	6214 <ZSTD_initDStream_usingDDict@plt+0x1694>
    6320:	ldur	x0, [x2, #-8]
    6324:	mul	x0, x0, x4
    6328:	ror	x0, x0, #33
    632c:	mul	x0, x0, x3
    6330:	eor	x1, x0, x1
    6334:	ror	x1, x1, #37
    6338:	madd	x1, x1, x3, x7
    633c:	b	624c <ZSTD_initDStream_usingDDict@plt+0x16cc>
    6340:	mov	x0, #0x30                  	// #48
    6344:	b	46a0 <malloc@plt>
    6348:	stp	x29, x30, [sp, #-16]!
    634c:	mov	x29, sp
    6350:	bl	48e0 <free@plt>
    6354:	mov	w0, #0x0                   	// #0
    6358:	ldp	x29, x30, [sp], #16
    635c:	ret
    6360:	mov	x0, #0x58                  	// #88
    6364:	b	46a0 <malloc@plt>
    6368:	stp	x29, x30, [sp, #-16]!
    636c:	mov	x29, sp
    6370:	bl	48e0 <free@plt>
    6374:	mov	w0, #0x0                   	// #0
    6378:	ldp	x29, x30, [sp], #16
    637c:	ret
    6380:	sub	sp, sp, #0x30
    6384:	mov	w2, #0x4428                	// #17448
    6388:	movk	w2, #0x2423, lsl #16
    638c:	add	w2, w1, w2
    6390:	stp	xzr, xzr, [sp]
    6394:	str	w2, [sp, #8]
    6398:	mov	w2, #0xca77                	// #51831
    639c:	movk	w2, #0x85eb, lsl #16
    63a0:	add	w2, w1, w2
    63a4:	str	w2, [sp, #12]
    63a8:	mov	w2, #0x864f                	// #34383
    63ac:	stp	xzr, xzr, [sp, #16]
    63b0:	movk	w2, #0x61c8, lsl #16
    63b4:	str	w1, [sp, #16]
    63b8:	add	w1, w1, w2
    63bc:	str	w1, [sp, #20]
    63c0:	str	xzr, [sp, #32]
    63c4:	str	wzr, [sp, #40]
    63c8:	ldp	x2, x3, [sp]
    63cc:	stp	x2, x3, [x0]
    63d0:	ldp	x2, x3, [sp, #16]
    63d4:	stp	x2, x3, [x0, #16]
    63d8:	ldp	x2, x3, [sp, #32]
    63dc:	stp	x2, x3, [x0, #32]
    63e0:	mov	w0, #0x0                   	// #0
    63e4:	add	sp, sp, #0x30
    63e8:	ret
    63ec:	stp	x29, x30, [sp, #-112]!
    63f0:	mov	x2, #0xb5d6                	// #46550
    63f4:	movk	x2, #0xadc0, lsl #16
    63f8:	mov	x29, sp
    63fc:	movk	x2, #0x27ee, lsl #32
    6400:	movk	x2, #0x60ea, lsl #48
    6404:	add	x2, x1, x2
    6408:	stp	xzr, xzr, [sp, #24]
    640c:	str	x2, [sp, #32]
    6410:	mov	x2, #0xeb4f                	// #60239
    6414:	movk	x2, #0x27d4, lsl #16
    6418:	str	x1, [sp, #48]
    641c:	movk	x2, #0xae3d, lsl #32
    6420:	stp	xzr, xzr, [sp, #56]
    6424:	movk	x2, #0xc2b2, lsl #48
    6428:	add	x2, x1, x2
    642c:	str	x2, [sp, #40]
    6430:	mov	x2, #0x3579                	// #13689
    6434:	stp	xzr, xzr, [sp, #72]
    6438:	movk	x2, #0x7a14, lsl #16
    643c:	movk	x2, #0x864e, lsl #32
    6440:	stp	xzr, xzr, [sp, #88]
    6444:	movk	x2, #0x61c8, lsl #48
    6448:	add	x1, x1, x2
    644c:	mov	x2, #0x58                  	// #88
    6450:	str	x1, [sp, #56]
    6454:	add	x1, sp, #0x18
    6458:	bl	4460 <memcpy@plt>
    645c:	mov	w0, #0x0                   	// #0
    6460:	ldp	x29, x30, [sp], #112
    6464:	ret
    6468:	stp	x29, x30, [sp, #-48]!
    646c:	cmp	x2, #0xf
    6470:	mov	x29, sp
    6474:	stp	x19, x20, [sp, #16]
    6478:	mov	x19, x0
    647c:	ldr	w0, [x0]
    6480:	stp	x21, x22, [sp, #32]
    6484:	add	x21, x1, x2
    6488:	add	w0, w0, w2
    648c:	ccmp	w0, #0xf, #0x2, ls  // ls = plast
    6490:	str	w0, [x19]
    6494:	ldr	w0, [x19, #4]
    6498:	cset	w3, hi  // hi = pmore
    649c:	orr	w0, w0, w3
    64a0:	ldr	w3, [x19, #40]
    64a4:	str	w0, [x19, #4]
    64a8:	mov	w4, w3
    64ac:	add	x0, x2, w3, uxtw
    64b0:	cmp	x0, #0xf
    64b4:	b.hi	64e8 <ZSTD_initDStream_usingDDict@plt+0x1968>  // b.pmore
    64b8:	add	x0, x19, #0x18
    64bc:	mov	x22, x2
    64c0:	add	x0, x0, x4
    64c4:	bl	4460 <memcpy@plt>
    64c8:	ldr	w2, [x19, #40]
    64cc:	add	w22, w2, w22
    64d0:	str	w22, [x19, #40]
    64d4:	mov	w0, #0x0                   	// #0
    64d8:	ldp	x19, x20, [sp, #16]
    64dc:	ldp	x21, x22, [sp, #32]
    64e0:	ldp	x29, x30, [sp], #48
    64e4:	ret
    64e8:	mov	x20, x1
    64ec:	cbz	w3, 6584 <ZSTD_initDStream_usingDDict@plt+0x1a04>
    64f0:	add	x0, x19, #0x18
    64f4:	mov	w22, #0x10                  	// #16
    64f8:	add	x0, x0, x4
    64fc:	sub	w2, w22, w3
    6500:	bl	4460 <memcpy@plt>
    6504:	ldr	w0, [x19, #8]
    6508:	mov	w3, #0xca77                	// #51831
    650c:	ldr	w1, [x19, #24]
    6510:	movk	w3, #0x85eb, lsl #16
    6514:	mov	w2, #0x79b1                	// #31153
    6518:	movk	w2, #0x9e37, lsl #16
    651c:	madd	w1, w1, w3, w0
    6520:	ldr	w0, [x19, #12]
    6524:	ror	w1, w1, #19
    6528:	mul	w1, w1, w2
    652c:	str	w1, [x19, #8]
    6530:	ldr	w1, [x19, #28]
    6534:	madd	w1, w1, w3, w0
    6538:	ldr	w0, [x19, #16]
    653c:	ror	w1, w1, #19
    6540:	mul	w1, w1, w2
    6544:	str	w1, [x19, #12]
    6548:	ldr	w1, [x19, #32]
    654c:	madd	w1, w1, w3, w0
    6550:	ldr	w0, [x19, #36]
    6554:	ror	w1, w1, #19
    6558:	mul	w1, w1, w2
    655c:	str	w1, [x19, #16]
    6560:	ldr	w1, [x19, #20]
    6564:	madd	w0, w0, w3, w1
    6568:	ror	w0, w0, #19
    656c:	mul	w0, w0, w2
    6570:	str	w0, [x19, #20]
    6574:	ldr	w0, [x19, #40]
    6578:	str	wzr, [x19, #40]
    657c:	sub	w22, w22, w0
    6580:	add	x20, x20, x22
    6584:	sub	x0, x21, #0x10
    6588:	cmp	x0, x20
    658c:	b.cc	6608 <ZSTD_initDStream_usingDDict@plt+0x1a88>  // b.lo, b.ul, b.last
    6590:	ldp	w11, w10, [x19, #8]
    6594:	mov	w7, #0xca77                	// #51831
    6598:	ldp	w9, w8, [x19, #16]
    659c:	mov	w6, #0x79b1                	// #31153
    65a0:	mov	x1, x20
    65a4:	movk	w7, #0x85eb, lsl #16
    65a8:	movk	w6, #0x9e37, lsl #16
    65ac:	ldp	w5, w4, [x1]
    65b0:	ldp	w3, w2, [x1, #8]
    65b4:	add	x1, x1, #0x10
    65b8:	madd	w5, w5, w7, w11
    65bc:	cmp	x0, x1
    65c0:	madd	w4, w4, w7, w10
    65c4:	madd	w3, w3, w7, w9
    65c8:	madd	w2, w2, w7, w8
    65cc:	ror	w5, w5, #19
    65d0:	ror	w4, w4, #19
    65d4:	ror	w3, w3, #19
    65d8:	mul	w11, w5, w6
    65dc:	ror	w2, w2, #19
    65e0:	mul	w10, w4, w6
    65e4:	mul	w9, w3, w6
    65e8:	mul	w8, w2, w6
    65ec:	b.cs	65ac <ZSTD_initDStream_usingDDict@plt+0x1a2c>  // b.hs, b.nlast
    65f0:	sub	x0, x0, x20
    65f4:	stp	w11, w10, [x19, #8]
    65f8:	and	x0, x0, #0xfffffffffffffff0
    65fc:	stp	w9, w8, [x19, #16]
    6600:	add	x0, x0, #0x10
    6604:	add	x20, x20, x0
    6608:	cmp	x21, x20
    660c:	b.ls	64d4 <ZSTD_initDStream_usingDDict@plt+0x1954>  // b.plast
    6610:	sub	x21, x21, x20
    6614:	mov	x1, x20
    6618:	mov	x2, x21
    661c:	add	x0, x19, #0x18
    6620:	bl	4460 <memcpy@plt>
    6624:	str	w21, [x19, #40]
    6628:	b	64d4 <ZSTD_initDStream_usingDDict@plt+0x1954>
    662c:	ldr	w1, [x0, #4]
    6630:	add	x3, x0, #0x18
    6634:	ldr	w4, [x0, #40]
    6638:	ldr	w2, [x0, #16]
    663c:	add	x4, x3, x4
    6640:	cbz	w1, 66f0 <ZSTD_initDStream_usingDDict@plt+0x1b70>
    6644:	ldp	w1, w6, [x0, #8]
    6648:	ror	w1, w1, #31
    664c:	ror	w6, w6, #25
    6650:	add	w6, w1, w6
    6654:	ldr	w1, [x0, #20]
    6658:	ror	w5, w1, #14
    665c:	ror	w1, w2, #20
    6660:	add	w1, w5, w1
    6664:	add	w1, w6, w1
    6668:	ldr	w2, [x0]
    666c:	mov	w6, #0xae3d                	// #44605
    6670:	mov	w7, #0xeb2f                	// #60207
    6674:	mov	x5, x3
    6678:	add	w1, w1, w2
    667c:	movk	w6, #0xc2b2, lsl #16
    6680:	movk	w7, #0x27d4, lsl #16
    6684:	add	x5, x5, #0x4
    6688:	cmp	x4, x5
    668c:	b.cs	6700 <ZSTD_initDStream_usingDDict@plt+0x1b80>  // b.hs, b.nlast
    6690:	sub	x2, x4, x0
    6694:	add	x5, x4, #0x1
    6698:	add	x0, x0, #0x19
    669c:	sub	x2, x2, #0x18
    66a0:	cmp	x5, x0
    66a4:	and	x2, x2, #0xfffffffffffffffc
    66a8:	csel	x2, x2, xzr, cs  // cs = hs, nlast
    66ac:	mov	w5, #0x79b1                	// #31153
    66b0:	add	x0, x3, x2
    66b4:	mov	w3, #0x67b1                	// #26545
    66b8:	movk	w3, #0x1656, lsl #16
    66bc:	movk	w5, #0x9e37, lsl #16
    66c0:	cmp	x4, x0
    66c4:	b.hi	6714 <ZSTD_initDStream_usingDDict@plt+0x1b94>  // b.pmore
    66c8:	eor	w1, w1, w1, lsr #15
    66cc:	mov	w0, #0xca77                	// #51831
    66d0:	movk	w0, #0x85eb, lsl #16
    66d4:	mul	w0, w1, w0
    66d8:	mov	w1, #0xae3d                	// #44605
    66dc:	movk	w1, #0xc2b2, lsl #16
    66e0:	eor	w0, w0, w0, lsr #13
    66e4:	mul	w0, w0, w1
    66e8:	eor	w0, w0, w0, lsr #16
    66ec:	ret
    66f0:	mov	w1, #0x67b1                	// #26545
    66f4:	movk	w1, #0x1656, lsl #16
    66f8:	add	w1, w2, w1
    66fc:	b	6668 <ZSTD_initDStream_usingDDict@plt+0x1ae8>
    6700:	ldur	w2, [x5, #-4]
    6704:	madd	w1, w2, w6, w1
    6708:	ror	w1, w1, #15
    670c:	mul	w1, w1, w7
    6710:	b	6684 <ZSTD_initDStream_usingDDict@plt+0x1b04>
    6714:	ldrb	w2, [x0], #1
    6718:	madd	w1, w2, w3, w1
    671c:	ror	w1, w1, #21
    6720:	mul	w1, w1, w5
    6724:	b	66c0 <ZSTD_initDStream_usingDDict@plt+0x1b40>
    6728:	stp	x29, x30, [sp, #-48]!
    672c:	mov	x29, sp
    6730:	ldr	w3, [x0, #72]
    6734:	stp	x19, x20, [sp, #16]
    6738:	mov	x19, x0
    673c:	mov	w4, w3
    6740:	ldr	x0, [x0]
    6744:	stp	x21, x22, [sp, #32]
    6748:	add	x21, x1, x2
    674c:	add	x0, x0, x2
    6750:	str	x0, [x19]
    6754:	add	x0, x2, w3, uxtw
    6758:	cmp	x0, #0x1f
    675c:	b.hi	6790 <ZSTD_initDStream_usingDDict@plt+0x1c10>  // b.pmore
    6760:	add	x0, x19, #0x28
    6764:	mov	x22, x2
    6768:	add	x0, x0, x4
    676c:	bl	4460 <memcpy@plt>
    6770:	ldr	w2, [x19, #72]
    6774:	add	w22, w2, w22
    6778:	str	w22, [x19, #72]
    677c:	mov	w0, #0x0                   	// #0
    6780:	ldp	x19, x20, [sp, #16]
    6784:	ldp	x21, x22, [sp, #32]
    6788:	ldp	x29, x30, [sp], #48
    678c:	ret
    6790:	mov	x20, x1
    6794:	cbz	w3, 683c <ZSTD_initDStream_usingDDict@plt+0x1cbc>
    6798:	add	x0, x19, #0x28
    679c:	mov	w22, #0x20                  	// #32
    67a0:	add	x0, x0, x4
    67a4:	sub	w2, w22, w3
    67a8:	bl	4460 <memcpy@plt>
    67ac:	mov	x3, #0xeb4f                	// #60239
    67b0:	mov	x2, #0xca87                	// #51847
    67b4:	movk	x3, #0x27d4, lsl #16
    67b8:	movk	x2, #0x85eb, lsl #16
    67bc:	ldr	x0, [x19, #8]
    67c0:	movk	x3, #0xae3d, lsl #32
    67c4:	ldr	x1, [x19, #40]
    67c8:	movk	x3, #0xc2b2, lsl #48
    67cc:	movk	x2, #0x79b1, lsl #32
    67d0:	movk	x2, #0x9e37, lsl #48
    67d4:	madd	x1, x1, x3, x0
    67d8:	ldr	x0, [x19, #16]
    67dc:	ror	x1, x1, #33
    67e0:	mul	x1, x1, x2
    67e4:	str	x1, [x19, #8]
    67e8:	ldr	x1, [x19, #48]
    67ec:	madd	x1, x1, x3, x0
    67f0:	ldr	x0, [x19, #24]
    67f4:	ror	x1, x1, #33
    67f8:	mul	x1, x1, x2
    67fc:	str	x1, [x19, #16]
    6800:	ldr	x1, [x19, #56]
    6804:	madd	x1, x1, x3, x0
    6808:	ldr	x0, [x19, #64]
    680c:	ror	x1, x1, #33
    6810:	mul	x1, x1, x2
    6814:	str	x1, [x19, #24]
    6818:	ldr	x1, [x19, #32]
    681c:	madd	x0, x0, x3, x1
    6820:	ror	x0, x0, #33
    6824:	mul	x0, x0, x2
    6828:	str	x0, [x19, #32]
    682c:	ldr	w0, [x19, #72]
    6830:	str	wzr, [x19, #72]
    6834:	sub	w22, w22, w0
    6838:	add	x20, x20, x22
    683c:	add	x0, x20, #0x20
    6840:	cmp	x21, x0
    6844:	b.cc	68d4 <ZSTD_initDStream_usingDDict@plt+0x1d54>  // b.lo, b.ul, b.last
    6848:	ldp	x11, x10, [x19, #8]
    684c:	mov	x7, #0xeb4f                	// #60239
    6850:	ldp	x9, x8, [x19, #24]
    6854:	mov	x6, #0xca87                	// #51847
    6858:	movk	x7, #0x27d4, lsl #16
    685c:	movk	x6, #0x85eb, lsl #16
    6860:	movk	x7, #0xae3d, lsl #32
    6864:	movk	x6, #0x79b1, lsl #32
    6868:	sub	x0, x21, #0x20
    686c:	mov	x1, x20
    6870:	movk	x7, #0xc2b2, lsl #48
    6874:	movk	x6, #0x9e37, lsl #48
    6878:	ldp	x5, x4, [x1]
    687c:	ldp	x3, x2, [x1, #16]
    6880:	add	x1, x1, #0x20
    6884:	cmp	x0, x1
    6888:	madd	x5, x5, x7, x11
    688c:	madd	x4, x4, x7, x10
    6890:	madd	x3, x3, x7, x9
    6894:	madd	x2, x2, x7, x8
    6898:	ror	x5, x5, #33
    689c:	ror	x4, x4, #33
    68a0:	ror	x3, x3, #33
    68a4:	mul	x11, x5, x6
    68a8:	ror	x2, x2, #33
    68ac:	mul	x10, x4, x6
    68b0:	mul	x9, x3, x6
    68b4:	mul	x8, x2, x6
    68b8:	b.cs	6878 <ZSTD_initDStream_usingDDict@plt+0x1cf8>  // b.hs, b.nlast
    68bc:	sub	x0, x0, x20
    68c0:	stp	x11, x10, [x19, #8]
    68c4:	and	x0, x0, #0xffffffffffffffe0
    68c8:	add	x0, x0, #0x20
    68cc:	stp	x9, x8, [x19, #24]
    68d0:	add	x20, x20, x0
    68d4:	cmp	x21, x20
    68d8:	b.ls	677c <ZSTD_initDStream_usingDDict@plt+0x1bfc>  // b.plast
    68dc:	sub	x21, x21, x20
    68e0:	mov	x1, x20
    68e4:	mov	x2, x21
    68e8:	add	x0, x19, #0x28
    68ec:	bl	4460 <memcpy@plt>
    68f0:	str	w21, [x19, #72]
    68f4:	b	677c <ZSTD_initDStream_usingDDict@plt+0x1bfc>
    68f8:	stp	x29, x30, [sp, #-16]!
    68fc:	add	x7, x0, #0x28
    6900:	mov	x4, x0
    6904:	mov	x29, sp
    6908:	ldr	x3, [x0]
    690c:	ldr	w6, [x0, #72]
    6910:	cmp	x3, #0x1f
    6914:	add	x6, x7, x6
    6918:	ldr	x5, [x0, #24]
    691c:	b.ls	6a7c <ZSTD_initDStream_usingDDict@plt+0x1efc>  // b.plast
    6920:	ldp	x1, x10, [x0, #8]
    6924:	ror	x8, x5, #52
    6928:	ldr	x9, [x0, #32]
    692c:	ror	x0, x9, #46
    6930:	add	x8, x8, x0
    6934:	ror	x2, x1, #63
    6938:	ror	x0, x10, #57
    693c:	add	x0, x2, x0
    6940:	add	x0, x8, x0
    6944:	bl	5b34 <ZSTD_initDStream_usingDDict@plt+0xfb4>
    6948:	mov	x1, x10
    694c:	bl	5b34 <ZSTD_initDStream_usingDDict@plt+0xfb4>
    6950:	mov	x1, x5
    6954:	bl	5b34 <ZSTD_initDStream_usingDDict@plt+0xfb4>
    6958:	mov	x1, x9
    695c:	bl	5b34 <ZSTD_initDStream_usingDDict@plt+0xfb4>
    6960:	add	x1, x3, x0
    6964:	mov	x5, #0xeb4f                	// #60239
    6968:	mov	x3, #0xca87                	// #51847
    696c:	mov	x8, #0xae63                	// #44643
    6970:	movk	x5, #0x27d4, lsl #16
    6974:	movk	x3, #0x85eb, lsl #16
    6978:	movk	x8, #0xc2b2, lsl #16
    697c:	movk	x5, #0xae3d, lsl #32
    6980:	movk	x3, #0x79b1, lsl #32
    6984:	movk	x8, #0xca77, lsl #32
    6988:	mov	x2, x7
    698c:	movk	x5, #0xc2b2, lsl #48
    6990:	movk	x3, #0x9e37, lsl #48
    6994:	movk	x8, #0x85eb, lsl #48
    6998:	add	x2, x2, #0x8
    699c:	cmp	x6, x2
    69a0:	b.cs	6a94 <ZSTD_initDStream_usingDDict@plt+0x1f14>  // b.hs, b.nlast
    69a4:	sub	x0, x6, x4
    69a8:	add	x2, x6, #0x1
    69ac:	sub	x0, x0, #0x28
    69b0:	add	x4, x4, #0x29
    69b4:	cmp	x2, x4
    69b8:	and	x0, x0, #0xfffffffffffffff8
    69bc:	csel	x0, x0, xzr, cs  // cs = hs, nlast
    69c0:	add	x2, x7, x0
    69c4:	add	x3, x2, #0x4
    69c8:	cmp	x6, x3
    69cc:	b.cc	6a18 <ZSTD_initDStream_usingDDict@plt+0x1e98>  // b.lo, b.ul, b.last
    69d0:	mov	x2, #0xca87                	// #51847
    69d4:	ldr	w0, [x7, x0]
    69d8:	movk	x2, #0x85eb, lsl #16
    69dc:	movk	x2, #0x79b1, lsl #32
    69e0:	movk	x2, #0x9e37, lsl #48
    69e4:	mul	x0, x0, x2
    69e8:	mov	x2, #0x79f9                	// #31225
    69ec:	movk	x2, #0x9e37, lsl #16
    69f0:	eor	x1, x0, x1
    69f4:	movk	x2, #0x67b1, lsl #32
    69f8:	movk	x2, #0x1656, lsl #48
    69fc:	ror	x0, x1, #41
    6a00:	mov	x1, #0xeb4f                	// #60239
    6a04:	movk	x1, #0x27d4, lsl #16
    6a08:	movk	x1, #0xae3d, lsl #32
    6a0c:	movk	x1, #0xc2b2, lsl #48
    6a10:	madd	x1, x0, x1, x2
    6a14:	mov	x2, x3
    6a18:	mov	x3, #0x67c5                	// #26565
    6a1c:	mov	x4, #0xca87                	// #51847
    6a20:	movk	x3, #0x1656, lsl #16
    6a24:	movk	x4, #0x85eb, lsl #16
    6a28:	movk	x3, #0xeb2f, lsl #32
    6a2c:	movk	x4, #0x79b1, lsl #32
    6a30:	movk	x3, #0x27d4, lsl #48
    6a34:	movk	x4, #0x9e37, lsl #48
    6a38:	cmp	x6, x2
    6a3c:	b.hi	6ab4 <ZSTD_initDStream_usingDDict@plt+0x1f34>  // b.pmore
    6a40:	mov	x0, #0xeb4f                	// #60239
    6a44:	eor	x1, x1, x1, lsr #33
    6a48:	movk	x0, #0x27d4, lsl #16
    6a4c:	movk	x0, #0xae3d, lsl #32
    6a50:	movk	x0, #0xc2b2, lsl #48
    6a54:	ldp	x29, x30, [sp], #16
    6a58:	mul	x0, x1, x0
    6a5c:	mov	x1, #0x79f9                	// #31225
    6a60:	movk	x1, #0x9e37, lsl #16
    6a64:	eor	x0, x0, x0, lsr #29
    6a68:	movk	x1, #0x67b1, lsl #32
    6a6c:	movk	x1, #0x1656, lsl #48
    6a70:	mul	x0, x0, x1
    6a74:	eor	x0, x0, x0, lsr #32
    6a78:	ret
    6a7c:	mov	x0, #0x67c5                	// #26565
    6a80:	movk	x0, #0x1656, lsl #16
    6a84:	movk	x0, #0xeb2f, lsl #32
    6a88:	movk	x0, #0x27d4, lsl #48
    6a8c:	add	x0, x5, x0
    6a90:	b	6960 <ZSTD_initDStream_usingDDict@plt+0x1de0>
    6a94:	ldur	x0, [x2, #-8]
    6a98:	mul	x0, x0, x5
    6a9c:	ror	x0, x0, #33
    6aa0:	mul	x0, x0, x3
    6aa4:	eor	x1, x0, x1
    6aa8:	ror	x1, x1, #37
    6aac:	madd	x1, x1, x3, x8
    6ab0:	b	6998 <ZSTD_initDStream_usingDDict@plt+0x1e18>
    6ab4:	ldrb	w0, [x2], #1
    6ab8:	mul	x0, x0, x3
    6abc:	eor	x1, x0, x1
    6ac0:	ror	x1, x1, #53
    6ac4:	mul	x1, x1, x4
    6ac8:	b	6a38 <ZSTD_initDStream_usingDDict@plt+0x1eb8>
    6acc:	rev	w1, w1
    6ad0:	str	w1, [x0]
    6ad4:	ret
    6ad8:	rev	x1, x1
    6adc:	str	x1, [x0]
    6ae0:	ret
    6ae4:	ldr	w0, [x0]
    6ae8:	rev	w0, w0
    6aec:	ret
    6af0:	ldr	x0, [x0]
    6af4:	rev	x0, x0
    6af8:	ret

0000000000006afc <ZSTD_versionNumber@@Base>:
    6afc:	mov	w0, #0x28a4                	// #10404
    6b00:	ret

0000000000006b04 <ZSTD_versionString@@Base>:
    6b04:	adrp	x0, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    6b08:	add	x0, x0, #0x1a4
    6b0c:	ret

0000000000006b10 <ZSTD_isError@@Base>:
    6b10:	cmn	x0, #0x78
    6b14:	cset	w0, hi  // hi = pmore
    6b18:	ret

0000000000006b1c <ZSTD_getErrorName@@Base>:
    6b1c:	cmn	x0, #0x78
    6b20:	b.ls	6b2c <ZSTD_getErrorName@@Base+0x10>  // b.plast
    6b24:	neg	w0, w0
    6b28:	b	511c <ZSTD_initDStream_usingDDict@plt+0x59c>
    6b2c:	mov	w0, #0x0                   	// #0
    6b30:	b	6b28 <ZSTD_getErrorName@@Base+0xc>

0000000000006b34 <ZSTD_getErrorCode@@Base>:
    6b34:	cmn	x0, #0x78
    6b38:	b.ls	6b44 <ZSTD_getErrorCode@@Base+0x10>  // b.plast
    6b3c:	neg	w0, w0
    6b40:	ret
    6b44:	mov	w0, #0x0                   	// #0
    6b48:	b	6b40 <ZSTD_getErrorCode@@Base+0xc>

0000000000006b4c <ZSTD_getErrorString@@Base>:
    6b4c:	b	511c <ZSTD_initDStream_usingDDict@plt+0x59c>
    6b50:	ldr	x4, [x1]
    6b54:	mov	x2, x1
    6b58:	cbz	x4, 6b6c <ZSTD_getErrorString@@Base+0x20>
    6b5c:	mov	x1, x0
    6b60:	mov	x16, x4
    6b64:	ldr	x0, [x2, #16]
    6b68:	br	x16
    6b6c:	b	46a0 <malloc@plt>
    6b70:	stp	x29, x30, [sp, #-32]!
    6b74:	mov	x29, sp
    6b78:	ldr	x2, [x1]
    6b7c:	stp	x19, x20, [sp, #16]
    6b80:	mov	x19, x0
    6b84:	cbnz	x2, 6b9c <ZSTD_getErrorString@@Base+0x50>
    6b88:	ldp	x19, x20, [sp, #16]
    6b8c:	mov	x1, x0
    6b90:	ldp	x29, x30, [sp], #32
    6b94:	mov	x0, #0x1                   	// #1
    6b98:	b	4760 <calloc@plt>
    6b9c:	mov	x0, x1
    6ba0:	mov	x1, x19
    6ba4:	ldr	x0, [x0, #16]
    6ba8:	blr	x2
    6bac:	mov	x20, x0
    6bb0:	mov	x2, x19
    6bb4:	mov	w1, #0x0                   	// #0
    6bb8:	bl	4700 <memset@plt>
    6bbc:	mov	x0, x20
    6bc0:	ldp	x19, x20, [sp, #16]
    6bc4:	ldp	x29, x30, [sp], #32
    6bc8:	ret
    6bcc:	mov	x2, x1
    6bd0:	cbz	x0, 6bf0 <ZSTD_getErrorString@@Base+0xa4>
    6bd4:	ldr	x4, [x1, #8]
    6bd8:	cbz	x4, 6bec <ZSTD_getErrorString@@Base+0xa0>
    6bdc:	mov	x1, x0
    6be0:	mov	x16, x4
    6be4:	ldr	x0, [x2, #16]
    6be8:	br	x16
    6bec:	b	48e0 <free@plt>
    6bf0:	ret
    6bf4:	ldr	w1, [x0, #8]
    6bf8:	ldr	x3, [x0, #24]
    6bfc:	lsr	w4, w1, #3
    6c00:	ldr	x2, [x0]
    6c04:	str	x2, [x3]
    6c08:	add	x3, x3, x4
    6c0c:	str	x3, [x0, #24]
    6c10:	and	w3, w1, #0x7
    6c14:	and	w1, w1, #0xfffffff8
    6c18:	str	w3, [x0, #8]
    6c1c:	lsr	x1, x2, x1
    6c20:	str	x1, [x0]
    6c24:	ret
    6c28:	ldr	w2, [x0, #8]
    6c2c:	ldr	x1, [x0, #24]
    6c30:	lsr	w4, w2, #3
    6c34:	ldr	x3, [x0]
    6c38:	str	x3, [x1]
    6c3c:	add	x1, x1, x4
    6c40:	ldr	x4, [x0, #32]
    6c44:	cmp	x1, x4
    6c48:	csel	x1, x1, x4, ls  // ls = plast
    6c4c:	str	x1, [x0, #24]
    6c50:	and	w1, w2, #0x7
    6c54:	and	w2, w2, #0xfffffff8
    6c58:	str	w1, [x0, #8]
    6c5c:	lsr	x2, x3, x2
    6c60:	str	x2, [x0]
    6c64:	ret
    6c68:	mov	x4, x1
    6c6c:	mov	w3, #0x1                   	// #1
    6c70:	ubfiz	x2, x2, #3, #32
    6c74:	ldrh	w5, [x4], #4
    6c78:	sub	w6, w5, #0x1
    6c7c:	cmp	w5, #0x0
    6c80:	lsl	w3, w3, w6
    6c84:	mov	x6, #0x8                   	// #8
    6c88:	sxtw	x3, w3
    6c8c:	add	x3, x3, #0x1
    6c90:	lsl	x3, x3, #2
    6c94:	csel	x3, x3, x6, ne  // ne = any
    6c98:	add	x3, x1, x3
    6c9c:	add	x1, x3, x2
    6ca0:	ldrsw	x2, [x3, x2]
    6ca4:	ldr	w6, [x1, #4]
    6ca8:	str	w5, [x0, #24]
    6cac:	add	w5, w6, #0x8, lsl #12
    6cb0:	stp	x4, x3, [x0, #8]
    6cb4:	and	w1, w5, #0xffff0000
    6cb8:	sub	w1, w1, w6
    6cbc:	lsr	w5, w5, #16
    6cc0:	asr	x1, x1, x5
    6cc4:	add	x1, x1, x2
    6cc8:	ldrh	w1, [x4, x1, lsl #1]
    6ccc:	str	x1, [x0]
    6cd0:	ret
    6cd4:	ldp	x8, x3, [x1, #8]
    6cd8:	ubfiz	x2, x2, #3, #32
    6cdc:	adrp	x6, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    6ce0:	add	x6, x6, #0x1ac
    6ce4:	add	x4, x3, x2
    6ce8:	ldr	w5, [x3, x2]
    6cec:	ldr	x3, [x1]
    6cf0:	ldr	w2, [x4, #4]
    6cf4:	ldr	w4, [x0, #8]
    6cf8:	add	x2, x2, x3
    6cfc:	asr	x7, x2, #16
    6d00:	ubfx	x2, x2, #16, #32
    6d04:	ldr	w2, [x6, x2, lsl #2]
    6d08:	ldr	x6, [x0]
    6d0c:	and	x2, x2, x3
    6d10:	asr	x3, x3, x7
    6d14:	add	x3, x3, w5, sxtw
    6d18:	lsl	x2, x2, x4
    6d1c:	add	w4, w4, w7
    6d20:	orr	x2, x6, x2
    6d24:	str	x2, [x0]
    6d28:	str	w4, [x0, #8]
    6d2c:	ldrh	w0, [x8, x3, lsl #1]
    6d30:	str	x0, [x1]
    6d34:	ret
    6d38:	add	x1, x0, x1
    6d3c:	mov	w13, #0x1                   	// #1
    6d40:	lsl	w13, w13, w4
    6d44:	sub	w11, w4, #0x5
    6d48:	add	w3, w3, #0x1
    6d4c:	add	w14, w13, #0x1
    6d50:	add	w4, w4, #0x1
    6d54:	mov	x12, x0
    6d58:	sub	x15, x1, #0x2
    6d5c:	mov	w8, #0x0                   	// #0
    6d60:	mov	w7, #0x0                   	// #0
    6d64:	mov	w6, #0x4                   	// #4
    6d68:	mov	w16, #0xffff                	// #65535
    6d6c:	mov	w17, #0x3                   	// #3
    6d70:	cmp	w7, w3
    6d74:	ccmp	w14, #0x1, #0x4, cc  // cc = lo, ul, last
    6d78:	b.gt	6db0 <ZSTD_getErrorString@@Base+0x264>
    6d7c:	cmp	w14, #0x1
    6d80:	b.ne	6e58 <ZSTD_getErrorString@@Base+0x30c>  // b.any
    6d84:	cbnz	w5, 6d94 <ZSTD_getErrorString@@Base+0x248>
    6d88:	sub	x1, x1, #0x2
    6d8c:	cmp	x12, x1
    6d90:	b.hi	6ec0 <ZSTD_getErrorString@@Base+0x374>  // b.pmore
    6d94:	add	w6, w6, #0x7
    6d98:	mov	w1, #0x8                   	// #8
    6d9c:	strh	w11, [x12]
    6da0:	sdiv	w6, w6, w1
    6da4:	add	x6, x12, w6, sxtw
    6da8:	sub	x0, x6, x0
    6dac:	b	6e5c <ZSTD_getErrorString@@Base+0x310>
    6db0:	cbnz	w8, 6e38 <ZSTD_getErrorString@@Base+0x2ec>
    6db4:	mov	w8, w7
    6db8:	add	w7, w8, #0x1
    6dbc:	ldrsh	w8, [x2, w8, uxtw #1]
    6dc0:	mvn	w9, w14
    6dc4:	cmp	w8, #0x0
    6dc8:	add	w9, w9, w13, lsl #1
    6dcc:	cneg	w10, w8, lt  // lt = tstop
    6dd0:	add	w8, w8, #0x1
    6dd4:	cmp	w13, w8
    6dd8:	sub	w14, w14, w10, uxth
    6ddc:	b.gt	6de4 <ZSTD_getErrorString@@Base+0x298>
    6de0:	add	w8, w8, w9
    6de4:	cmp	w8, w9
    6de8:	lsl	w10, w8, w6
    6dec:	cset	w9, lt  // lt = tstop
    6df0:	add	w6, w4, w6
    6df4:	cmp	w8, #0x1
    6df8:	add	w11, w11, w10
    6dfc:	cset	w8, eq  // eq = none
    6e00:	sub	w6, w6, w9
    6e04:	cmp	w14, #0x0
    6e08:	b.le	6e58 <ZSTD_getErrorString@@Base+0x30c>
    6e0c:	cmp	w13, w14
    6e10:	b.gt	6f00 <ZSTD_getErrorString@@Base+0x3b4>
    6e14:	cmp	w6, #0x10
    6e18:	b.le	6d70 <ZSTD_getErrorString@@Base+0x224>
    6e1c:	cbnz	w5, 6e28 <ZSTD_getErrorString@@Base+0x2dc>
    6e20:	cmp	x12, x15
    6e24:	b.hi	6ec0 <ZSTD_getErrorString@@Base+0x374>  // b.pmore
    6e28:	sub	w6, w6, #0x10
    6e2c:	strh	w11, [x12], #2
    6e30:	lsr	w11, w11, #16
    6e34:	b	6d70 <ZSTD_getErrorString@@Base+0x224>
    6e38:	mov	w8, w7
    6e3c:	ldrsh	w9, [x2, w8, uxtw #1]
    6e40:	cbnz	w9, 6e50 <ZSTD_getErrorString@@Base+0x304>
    6e44:	add	w8, w8, #0x1
    6e48:	cmp	w3, w8
    6e4c:	b.hi	6e3c <ZSTD_getErrorString@@Base+0x2f0>  // b.pmore
    6e50:	cmp	w3, w8
    6e54:	b.ne	6e60 <ZSTD_getErrorString@@Base+0x314>  // b.any
    6e58:	mov	x0, #0xffffffffffffffff    	// #-1
    6e5c:	ret
    6e60:	lsl	w10, w16, w6
    6e64:	add	w9, w7, #0x18
    6e68:	cmp	w9, w8
    6e6c:	b.ls	6eb0 <ZSTD_getErrorString@@Base+0x364>  // b.plast
    6e70:	add	w10, w7, #0x3
    6e74:	add	w9, w6, #0x2
    6e78:	cmp	w10, w8
    6e7c:	b.ls	6ee4 <ZSTD_getErrorString@@Base+0x398>  // b.plast
    6e80:	sub	w7, w8, w7
    6e84:	cmp	w9, #0x10
    6e88:	lsl	w7, w7, w6
    6e8c:	add	w11, w11, w7
    6e90:	b.le	6ef8 <ZSTD_getErrorString@@Base+0x3ac>
    6e94:	cbnz	w5, 6ea0 <ZSTD_getErrorString@@Base+0x354>
    6e98:	cmp	x12, x15
    6e9c:	b.hi	6ec0 <ZSTD_getErrorString@@Base+0x374>  // b.pmore
    6ea0:	sub	w6, w6, #0xe
    6ea4:	strh	w11, [x12], #2
    6ea8:	lsr	w11, w11, #16
    6eac:	b	6db8 <ZSTD_getErrorString@@Base+0x26c>
    6eb0:	add	w7, w10, w11
    6eb4:	cbnz	w5, 6ec8 <ZSTD_getErrorString@@Base+0x37c>
    6eb8:	cmp	x12, x15
    6ebc:	b.ls	6ec8 <ZSTD_getErrorString@@Base+0x37c>  // b.plast
    6ec0:	mov	x0, #0xffffffffffffffba    	// #-70
    6ec4:	b	6e5c <ZSTD_getErrorString@@Base+0x310>
    6ec8:	lsr	w11, w7, #8
    6ecc:	add	x12, x12, #0x2
    6ed0:	sturb	w7, [x12, #-2]
    6ed4:	sturb	w11, [x12, #-1]
    6ed8:	lsr	w11, w7, #16
    6edc:	mov	w7, w9
    6ee0:	b	6e64 <ZSTD_getErrorString@@Base+0x318>
    6ee4:	lsl	w6, w17, w6
    6ee8:	mov	w7, w10
    6eec:	add	w11, w11, w6
    6ef0:	mov	w6, w9
    6ef4:	b	6e70 <ZSTD_getErrorString@@Base+0x324>
    6ef8:	mov	w6, w9
    6efc:	b	6db8 <ZSTD_getErrorString@@Base+0x26c>
    6f00:	sub	w4, w4, #0x1
    6f04:	asr	w13, w13, #1
    6f08:	b	6e0c <ZSTD_getErrorString@@Base+0x2c0>
    6f0c:	cmp	x3, #0x2
    6f10:	b.hi	6f28 <ZSTD_getErrorString@@Base+0x3dc>  // b.pmore
    6f14:	mov	x0, #0x0                   	// #0
    6f18:	ret
    6f1c:	mov	x0, #0x0                   	// #0
    6f20:	ldp	x29, x30, [sp], #128
    6f24:	ret
    6f28:	stp	x29, x30, [sp, #-128]!
    6f2c:	mov	x15, x2
    6f30:	subs	x2, x1, #0x8
    6f34:	mov	x29, sp
    6f38:	str	xzr, [sp, #88]
    6f3c:	str	wzr, [sp, #96]
    6f40:	stp	x0, x0, [sp, #104]
    6f44:	add	x0, x0, x2
    6f48:	str	x0, [sp, #120]
    6f4c:	b.ls	6f1c <ZSTD_getErrorString@@Base+0x3d0>  // b.plast
    6f50:	add	x8, x15, x3
    6f54:	mov	x10, x3
    6f58:	mov	x7, x4
    6f5c:	mov	w12, w5
    6f60:	add	x11, sp, #0x18
    6f64:	add	x13, sp, #0x38
    6f68:	ldurb	w2, [x8, #-1]
    6f6c:	add	x9, sp, #0x58
    6f70:	mov	x1, x4
    6f74:	tbz	w3, #0, 6ff0 <ZSTD_getErrorString@@Base+0x4a4>
    6f78:	mov	x0, x11
    6f7c:	bl	6c68 <ZSTD_getErrorString@@Base+0x11c>
    6f80:	ldurb	w2, [x8, #-2]
    6f84:	mov	x1, x7
    6f88:	mov	x0, x13
    6f8c:	bl	6c68 <ZSTD_getErrorString@@Base+0x11c>
    6f90:	ldurb	w2, [x8, #-3]
    6f94:	sub	x14, x8, #0x3
    6f98:	mov	x0, x9
    6f9c:	mov	x1, x11
    6fa0:	bl	6cd4 <ZSTD_getErrorString@@Base+0x188>
    6fa4:	mov	x0, x9
    6fa8:	cbz	w12, 6fe8 <ZSTD_getErrorString@@Base+0x49c>
    6fac:	bl	6bf4 <ZSTD_getErrorString@@Base+0xa8>
    6fb0:	tbnz	w10, #1, 7010 <ZSTD_getErrorString@@Base+0x4c4>
    6fb4:	ldurb	w2, [x14, #-1]
    6fb8:	mov	x1, x13
    6fbc:	mov	x0, x9
    6fc0:	bl	6cd4 <ZSTD_getErrorString@@Base+0x188>
    6fc4:	ldurb	w2, [x14, #-2]
    6fc8:	sub	x10, x14, #0x2
    6fcc:	mov	x0, x9
    6fd0:	mov	x1, x11
    6fd4:	bl	6cd4 <ZSTD_getErrorString@@Base+0x188>
    6fd8:	mov	x0, x9
    6fdc:	cbz	w12, 7110 <ZSTD_getErrorString@@Base+0x5c4>
    6fe0:	bl	6bf4 <ZSTD_getErrorString@@Base+0xa8>
    6fe4:	b	7014 <ZSTD_getErrorString@@Base+0x4c8>
    6fe8:	bl	6c28 <ZSTD_getErrorString@@Base+0xdc>
    6fec:	b	6fb0 <ZSTD_getErrorString@@Base+0x464>
    6ff0:	mov	x0, x13
    6ff4:	bl	6c68 <ZSTD_getErrorString@@Base+0x11c>
    6ff8:	ldurb	w2, [x8, #-2]
    6ffc:	sub	x14, x8, #0x2
    7000:	mov	x1, x7
    7004:	mov	x0, x11
    7008:	bl	6c68 <ZSTD_getErrorString@@Base+0x11c>
    700c:	b	6fb0 <ZSTD_getErrorString@@Base+0x464>
    7010:	mov	x10, x14
    7014:	cmp	x10, x15
    7018:	b.hi	70d8 <ZSTD_getErrorString@@Base+0x58c>  // b.pmore
    701c:	ldr	w1, [sp, #80]
    7020:	adrp	x5, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    7024:	add	x5, x5, #0x1ac
    7028:	ldr	w3, [sp, #96]
    702c:	ldr	x2, [sp, #56]
    7030:	ldr	w0, [x5, w1, uxtw #2]
    7034:	add	w1, w1, w3
    7038:	str	w1, [sp, #96]
    703c:	and	x0, x0, x2
    7040:	ldr	x2, [sp, #88]
    7044:	lsl	x0, x0, x3
    7048:	orr	x0, x2, x0
    704c:	str	x0, [sp, #88]
    7050:	mov	x0, x9
    7054:	bl	6c28 <ZSTD_getErrorString@@Base+0xdc>
    7058:	ldr	w1, [sp, #48]
    705c:	ldr	x2, [sp, #24]
    7060:	ldr	w3, [sp, #96]
    7064:	ldr	w0, [x5, w1, uxtw #2]
    7068:	add	w1, w1, w3
    706c:	str	w1, [sp, #96]
    7070:	and	x0, x0, x2
    7074:	ldr	x2, [sp, #88]
    7078:	lsl	x0, x0, x3
    707c:	orr	x0, x2, x0
    7080:	str	x0, [sp, #88]
    7084:	mov	x0, x9
    7088:	bl	6c28 <ZSTD_getErrorString@@Base+0xdc>
    708c:	ldr	w0, [sp, #96]
    7090:	mov	x1, #0x1                   	// #1
    7094:	lsl	x2, x1, x0
    7098:	add	w0, w0, #0x1
    709c:	ldr	x1, [sp, #88]
    70a0:	str	w0, [sp, #96]
    70a4:	mov	x0, x9
    70a8:	orr	x1, x1, x2
    70ac:	str	x1, [sp, #88]
    70b0:	bl	6c28 <ZSTD_getErrorString@@Base+0xdc>
    70b4:	ldp	x0, x1, [sp, #112]
    70b8:	cmp	x0, x1
    70bc:	b.cs	6f1c <ZSTD_getErrorString@@Base+0x3d0>  // b.hs, b.nlast
    70c0:	ldr	x1, [sp, #104]
    70c4:	sub	x0, x0, x1
    70c8:	ldr	w1, [sp, #96]
    70cc:	cmp	w1, #0x0
    70d0:	cinc	x0, x0, ne  // ne = any
    70d4:	b	6f20 <ZSTD_getErrorString@@Base+0x3d4>
    70d8:	ldurb	w2, [x10, #-1]
    70dc:	mov	x1, x13
    70e0:	mov	x0, x9
    70e4:	bl	6cd4 <ZSTD_getErrorString@@Base+0x188>
    70e8:	ldurb	w2, [x10, #-2]
    70ec:	mov	x1, x11
    70f0:	mov	x0, x9
    70f4:	bl	6cd4 <ZSTD_getErrorString@@Base+0x188>
    70f8:	ldurb	w2, [x10, #-3]
    70fc:	mov	x1, x13
    7100:	mov	x0, x9
    7104:	bl	6cd4 <ZSTD_getErrorString@@Base+0x188>
    7108:	ldrb	w2, [x10, #-4]!
    710c:	b	6fcc <ZSTD_getErrorString@@Base+0x480>
    7110:	bl	6c28 <ZSTD_getErrorString@@Base+0xdc>
    7114:	b	7014 <ZSTD_getErrorString@@Base+0x4c8>
    7118:	mov	w6, #0x1                   	// #1
    711c:	cmp	w3, #0x0
    7120:	lsl	w6, w6, w3
    7124:	mov	x8, #0x8                   	// #8
    7128:	lsr	w7, w6, #1
    712c:	mov	x9, #0x1                   	// #1
    7130:	add	x7, x7, #0x1
    7134:	lsl	x9, x9, x3
    7138:	lsl	x7, x7, #2
    713c:	csel	x7, x7, x8, ne  // ne = any
    7140:	lsr	w8, w6, #3
    7144:	add	w8, w8, w6, lsr #1
    7148:	cmp	x9, x5
    714c:	b.hi	72dc <ZSTD_getErrorString@@Base+0x790>  // b.pmore
    7150:	sub	sp, sp, #0x410
    7154:	sub	w14, w6, #0x1
    7158:	add	x5, sp, #0x8
    715c:	add	w8, w8, #0x3
    7160:	mov	w10, w14
    7164:	mov	x13, x5
    7168:	add	w15, w2, #0x1
    716c:	mov	x9, #0x0                   	// #0
    7170:	strh	w3, [x0]
    7174:	strh	w2, [x0, #2]
    7178:	str	wzr, [sp, #8]
    717c:	add	w11, w9, #0x1
    7180:	cmp	w15, w11
    7184:	b.cs	7210 <ZSTD_getErrorString@@Base+0x6c4>  // b.hs, b.nlast
    7188:	add	w5, w6, #0x1
    718c:	mov	w9, #0x0                   	// #0
    7190:	str	w5, [x13, w15, uxtw #2]
    7194:	mov	w5, #0x0                   	// #0
    7198:	ldrsh	w12, [x1, w9, uxtw #1]
    719c:	mov	w11, #0x0                   	// #0
    71a0:	cmp	w11, w12
    71a4:	b.lt	7248 <ZSTD_getErrorString@@Base+0x6fc>  // b.tstop
    71a8:	add	w9, w9, #0x1
    71ac:	cmp	w2, w9
    71b0:	b.cs	7198 <ZSTD_getErrorString@@Base+0x64c>  // b.hs, b.nlast
    71b4:	mov	x5, #0x0                   	// #0
    71b8:	mov	x10, #0x4                   	// #4
    71bc:	cmp	w6, w5
    71c0:	b.hi	7264 <ZSTD_getErrorString@@Base+0x718>  // b.pmore
    71c4:	add	w8, w3, #0x1
    71c8:	lsl	w4, w3, #16
    71cc:	add	x7, x7, #0x4
    71d0:	mov	x9, #0x0                   	// #0
    71d4:	lsl	w8, w8, #16
    71d8:	add	x0, x0, x7
    71dc:	sub	w8, w8, w6
    71e0:	sub	w6, w4, w6
    71e4:	mov	w7, #0x0                   	// #0
    71e8:	ldrsh	w5, [x1, x9, lsl #1]
    71ec:	cbz	w5, 728c <ZSTD_getErrorString@@Base+0x740>
    71f0:	cmp	w5, #0x1
    71f4:	b.eq	7200 <ZSTD_getErrorString@@Base+0x6b4>  // b.none
    71f8:	cmn	w5, #0x1
    71fc:	b.ne	72ac <ZSTD_getErrorString@@Base+0x760>  // b.any
    7200:	sub	w4, w7, #0x1
    7204:	add	w7, w7, #0x1
    7208:	stp	w4, w6, [x0, #-4]
    720c:	b	7290 <ZSTD_getErrorString@@Base+0x744>
    7210:	ldrsh	w11, [x1, x9, lsl #1]
    7214:	ldr	w12, [x5]
    7218:	cmn	w11, #0x1
    721c:	b.ne	723c <ZSTD_getErrorString@@Base+0x6f0>  // b.any
    7220:	strb	w9, [x4, w10, uxtw]
    7224:	sub	w10, w10, #0x1
    7228:	add	w11, w12, #0x1
    722c:	str	w11, [x5, #4]
    7230:	add	x9, x9, #0x1
    7234:	add	x5, x5, #0x4
    7238:	b	717c <ZSTD_getErrorString@@Base+0x630>
    723c:	add	w11, w11, w12
    7240:	str	w11, [x5, #4]
    7244:	b	7230 <ZSTD_getErrorString@@Base+0x6e4>
    7248:	strb	w9, [x4, w5, uxtw]
    724c:	add	w5, w5, w8
    7250:	and	w5, w5, w14
    7254:	cmp	w10, w5
    7258:	b.cc	724c <ZSTD_getErrorString@@Base+0x700>  // b.lo, b.ul, b.last
    725c:	add	w11, w11, #0x1
    7260:	b	71a0 <ZSTD_getErrorString@@Base+0x654>
    7264:	ldrb	w9, [x4, x5]
    7268:	lsl	x9, x9, #2
    726c:	ldr	w8, [x13, x9]
    7270:	add	w11, w8, #0x1
    7274:	str	w11, [x13, x9]
    7278:	add	x8, x10, w8, uxtw #1
    727c:	add	w9, w6, w5
    7280:	add	x5, x5, #0x1
    7284:	strh	w9, [x0, x8]
    7288:	b	71bc <ZSTD_getErrorString@@Base+0x670>
    728c:	str	w8, [x0]
    7290:	add	x9, x9, #0x1
    7294:	add	x0, x0, #0x8
    7298:	cmp	w2, w9
    729c:	b.cs	71e8 <ZSTD_getErrorString@@Base+0x69c>  // b.hs, b.nlast
    72a0:	mov	x0, #0x0                   	// #0
    72a4:	add	sp, sp, #0x410
    72a8:	ret
    72ac:	sub	w4, w5, #0x1
    72b0:	clz	w4, w4
    72b4:	eor	w4, w4, #0x1f
    72b8:	sub	w4, w3, w4
    72bc:	lsl	w10, w4, #16
    72c0:	lsl	w4, w5, w4
    72c4:	sub	w4, w10, w4
    72c8:	str	w4, [x0]
    72cc:	sub	w4, w7, w5
    72d0:	add	w7, w7, w5
    72d4:	stur	w4, [x0, #-4]
    72d8:	b	7290 <ZSTD_getErrorString@@Base+0x744>
    72dc:	mov	x0, #0xffffffffffffffd4    	// #-44
    72e0:	ret
    72e4:	mov	x12, #0x1010                	// #4112
    72e8:	sub	sp, sp, x12
    72ec:	add	x4, sp, #0x10
    72f0:	mov	x5, #0x1000                	// #4096
    72f4:	stp	x29, x30, [sp]
    72f8:	mov	x29, sp
    72fc:	bl	7118 <ZSTD_getErrorString@@Base+0x5cc>
    7300:	mov	x12, #0x1010                	// #4112
    7304:	ldp	x29, x30, [sp]
    7308:	add	sp, sp, x12
    730c:	ret
    7310:	madd	w1, w0, w1, w1
    7314:	cmp	w0, #0x0
    7318:	mov	w0, #0x200                 	// #512
    731c:	lsr	w1, w1, #3
    7320:	add	w1, w1, #0x3
    7324:	csel	w0, w1, w0, ne  // ne = any
    7328:	and	x0, x0, #0x3fffffff
    732c:	ret
    7330:	cmp	w4, #0xc
    7334:	b.hi	7380 <ZSTD_getErrorString@@Base+0x834>  // b.pmore
    7338:	cmp	w4, #0x4
    733c:	b.ls	7388 <ZSTD_getErrorString@@Base+0x83c>  // b.plast
    7340:	mov	x6, x1
    7344:	mov	x7, x0
    7348:	stp	x29, x30, [sp, #-16]!
    734c:	mov	w1, w4
    7350:	mov	w0, w3
    7354:	mov	x29, sp
    7358:	bl	7310 <ZSTD_getErrorString@@Base+0x7c4>
    735c:	cmp	x0, x6
    7360:	b.ls	7378 <ZSTD_getErrorString@@Base+0x82c>  // b.plast
    7364:	mov	w5, #0x0                   	// #0
    7368:	ldp	x29, x30, [sp], #16
    736c:	mov	x1, x6
    7370:	mov	x0, x7
    7374:	b	6d38 <ZSTD_getErrorString@@Base+0x1ec>
    7378:	mov	w5, #0x1                   	// #1
    737c:	b	7368 <ZSTD_getErrorString@@Base+0x81c>
    7380:	mov	x0, #0xffffffffffffffd4    	// #-44
    7384:	ret
    7388:	mov	x0, #0xffffffffffffffff    	// #-1
    738c:	ret
    7390:	cmp	w1, #0xf
    7394:	mov	w2, #0xf                   	// #15
    7398:	csel	w1, w1, w2, ls  // ls = plast
    739c:	mov	w2, #0x1                   	// #1
    73a0:	sub	w1, w1, #0x1
    73a4:	lsl	w1, w2, w1
    73a8:	add	w0, w1, w0, lsl #1
    73ac:	add	w0, w0, #0x3
    73b0:	lsl	x0, x0, #2
    73b4:	b	46a0 <malloc@plt>
    73b8:	b	48e0 <free@plt>
    73bc:	sub	w4, w1, #0x1
    73c0:	clz	w2, w2
    73c4:	clz	w1, w1
    73c8:	eor	w2, w2, #0x1f
    73cc:	eor	w1, w1, #0x1f
    73d0:	add	w2, w2, #0x2
    73d4:	add	w1, w1, #0x1
    73d8:	clz	w4, w4
    73dc:	cmp	w1, w2
    73e0:	eor	w4, w4, #0x1f
    73e4:	csel	w1, w1, w2, ls  // ls = plast
    73e8:	cmp	w0, #0x0
    73ec:	sub	w3, w4, w3
    73f0:	mov	w2, #0xb                   	// #11
    73f4:	csel	w0, w0, w2, ne  // ne = any
    73f8:	cmp	w0, w3
    73fc:	csel	w0, w0, w3, ls  // ls = plast
    7400:	cmp	w0, w1
    7404:	csel	w0, w0, w1, cs  // cs = hs, nlast
    7408:	mov	w1, #0xc                   	// #12
    740c:	cmp	w0, #0xc
    7410:	csel	w0, w0, w1, ls  // ls = plast
    7414:	mov	w1, #0x5                   	// #5
    7418:	cmp	w0, #0x5
    741c:	csel	w0, w0, w1, cs  // cs = hs, nlast
    7420:	ret
    7424:	mov	w3, #0x2                   	// #2
    7428:	b	73bc <ZSTD_getErrorString@@Base+0x870>
    742c:	cbz	w1, 75f4 <ZSTD_getErrorString@@Base+0xaa8>
    7430:	cmp	w1, #0x4
    7434:	b.hi	744c <ZSTD_getErrorString@@Base+0x900>  // b.pmore
    7438:	mov	x0, #0xffffffffffffffff    	// #-1
    743c:	ret
    7440:	mov	x0, #0xffffffffffffffff    	// #-1
    7444:	ldp	x29, x30, [sp], #16
    7448:	ret
    744c:	cmp	w1, #0xc
    7450:	b.hi	7738 <ZSTD_getErrorString@@Base+0xbec>  // b.pmore
    7454:	clz	w5, w3
    7458:	clz	w6, w4
    745c:	eor	w5, w5, #0x1f
    7460:	eor	w6, w6, #0x1f
    7464:	add	w5, w5, #0x1
    7468:	add	w6, w6, #0x2
    746c:	cmp	w5, w6
    7470:	csel	w5, w5, w6, ls  // ls = plast
    7474:	cmp	w5, w1
    7478:	b.hi	7438 <ZSTD_getErrorString@@Base+0x8ec>  // b.pmore
    747c:	mov	x16, #0x4000000000000000    	// #4611686018427387904
    7480:	mov	w8, #0x1                   	// #1
    7484:	adrp	x11, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    7488:	add	x11, x11, #0x1ac
    748c:	udiv	x16, x16, x3
    7490:	mov	w7, #0x3e                  	// #62
    7494:	mov	w15, #0x2a                  	// #42
    7498:	lsl	w8, w8, w1
    749c:	sub	w7, w7, w1
    74a0:	sub	w15, w15, w1
    74a4:	mov	w6, w8
    74a8:	add	x11, x11, #0x80
    74ac:	stp	x29, x30, [sp, #-16]!
    74b0:	lsr	x14, x3, x1
    74b4:	mov	w18, #0x0                   	// #0
    74b8:	mov	w13, #0x0                   	// #0
    74bc:	mov	w9, #0x0                   	// #0
    74c0:	mov	w30, #0xffffffff            	// #-1
    74c4:	mov	x29, sp
    74c8:	ldr	w5, [x2, w9, uxtw #2]
    74cc:	mov	w12, w9
    74d0:	mov	w10, w5
    74d4:	cmp	x3, w5, uxtw
    74d8:	b.eq	7740 <ZSTD_getErrorString@@Base+0xbf4>  // b.none
    74dc:	lsl	x12, x12, #1
    74e0:	cbnz	w5, 75fc <ZSTD_getErrorString@@Base+0xab0>
    74e4:	strh	wzr, [x0, x12]
    74e8:	add	w9, w9, #0x1
    74ec:	cmp	w4, w9
    74f0:	b.cs	74c8 <ZSTD_getErrorString@@Base+0x97c>  // b.hs, b.nlast
    74f4:	ldrsh	w5, [x0, w13, uxtw #1]
    74f8:	neg	w10, w6
    74fc:	ubfiz	x9, x13, #1, #32
    7500:	cmp	w10, w5, asr #1
    7504:	b.lt	772c <ZSTD_getErrorString@@Base+0xbe0>  // b.tstop
    7508:	add	w5, w1, #0x1
    750c:	add	x9, x3, x3, lsl #1
    7510:	mov	w6, #0x0                   	// #0
    7514:	mov	w12, #0xfffffffe            	// #-2
    7518:	lsr	x9, x9, x5
    751c:	mov	w11, w9
    7520:	mov	x5, #0x0                   	// #0
    7524:	mov	w13, #0x1                   	// #1
    7528:	mov	w15, #0xffffffff            	// #-1
    752c:	ldr	w10, [x2, x5, lsl #2]
    7530:	cbnz	w10, 765c <ZSTD_getErrorString@@Base+0xb10>
    7534:	strh	wzr, [x0, x5, lsl #1]
    7538:	add	x5, x5, #0x1
    753c:	cmp	w4, w5
    7540:	b.cs	752c <ZSTD_getErrorString@@Base+0x9e0>  // b.hs, b.nlast
    7544:	subs	w5, w8, w6
    7548:	b.eq	75ec <ZSTD_getErrorString@@Base+0xaa0>  // b.none
    754c:	mov	w10, w5
    7550:	udiv	x10, x3, x10
    7554:	cmp	x10, w9, uxtw
    7558:	b.ls	75a4 <ZSTD_getErrorString@@Base+0xa58>  // b.plast
    755c:	add	x9, x3, x3, lsl #1
    7560:	lsl	w10, w5, #1
    7564:	mov	w11, #0x1                   	// #1
    7568:	udiv	x5, x9, x10
    756c:	mov	x9, #0x0                   	// #0
    7570:	ldrsh	w10, [x0, x9, lsl #1]
    7574:	cmn	w10, #0x2
    7578:	b.ne	7594 <ZSTD_getErrorString@@Base+0xa48>  // b.any
    757c:	ldr	w10, [x2, x9, lsl #2]
    7580:	cmp	w5, w10
    7584:	b.cc	7594 <ZSTD_getErrorString@@Base+0xa48>  // b.lo, b.ul, b.last
    7588:	add	w6, w6, #0x1
    758c:	sub	x3, x3, w10, uxtw
    7590:	strh	w11, [x0, x9, lsl #1]
    7594:	add	x9, x9, #0x1
    7598:	cmp	w4, w9
    759c:	b.cs	7570 <ZSTD_getErrorString@@Base+0xa24>  // b.hs, b.nlast
    75a0:	sub	w5, w8, w6
    75a4:	add	w8, w4, #0x1
    75a8:	cmp	w8, w6
    75ac:	b.ne	768c <ZSTD_getErrorString@@Base+0xb40>  // b.any
    75b0:	mov	x6, #0x0                   	// #0
    75b4:	mov	w3, #0x0                   	// #0
    75b8:	mov	w7, #0x0                   	// #0
    75bc:	ldr	w8, [x2, x6, lsl #2]
    75c0:	cmp	w8, w7
    75c4:	b.ls	75d0 <ZSTD_getErrorString@@Base+0xa84>  // b.plast
    75c8:	mov	w7, w8
    75cc:	mov	w3, w6
    75d0:	add	x6, x6, #0x1
    75d4:	cmp	w4, w6
    75d8:	b.cs	75bc <ZSTD_getErrorString@@Base+0xa70>  // b.hs, b.nlast
    75dc:	ubfiz	x2, x3, #1, #32
    75e0:	ldrh	w3, [x0, x2]
    75e4:	add	w5, w5, w3
    75e8:	strh	w5, [x0, x2]
    75ec:	mov	w0, w1
    75f0:	b	7444 <ZSTD_getErrorString@@Base+0x8f8>
    75f4:	mov	w1, #0xb                   	// #11
    75f8:	b	7454 <ZSTD_getErrorString@@Base+0x908>
    75fc:	cmp	w5, w14
    7600:	b.hi	7610 <ZSTD_getErrorString@@Base+0xac4>  // b.pmore
    7604:	sub	w6, w6, #0x1
    7608:	strh	w30, [x0, x12]
    760c:	b	74e8 <ZSTD_getErrorString@@Base+0x99c>
    7610:	mul	x10, x10, x16
    7614:	lsr	x5, x10, x7
    7618:	cmp	x5, #0x7
    761c:	b.ls	7640 <ZSTD_getErrorString@@Base+0xaf4>  // b.plast
    7620:	sxth	w5, w5
    7624:	cmp	w5, w18
    7628:	b.le	7634 <ZSTD_getErrorString@@Base+0xae8>
    762c:	mov	w18, w5
    7630:	mov	w13, w9
    7634:	sub	w6, w6, w5
    7638:	strh	w5, [x0, x12]
    763c:	b	74e8 <ZSTD_getErrorString@@Base+0x99c>
    7640:	lsl	x17, x5, x7
    7644:	sub	x10, x10, x17
    7648:	ldr	w17, [x11, w5, sxtw #2]
    764c:	lsl	x17, x17, x15
    7650:	cmp	x10, x17
    7654:	cinc	w5, w5, hi  // hi = pmore
    7658:	b	7620 <ZSTD_getErrorString@@Base+0xad4>
    765c:	cmp	w14, w10
    7660:	b.cc	7674 <ZSTD_getErrorString@@Base+0xb28>  // b.lo, b.ul, b.last
    7664:	strh	w15, [x0, x5, lsl #1]
    7668:	add	w6, w6, #0x1
    766c:	sub	x3, x3, w10, uxtw
    7670:	b	7538 <ZSTD_getErrorString@@Base+0x9ec>
    7674:	cmp	w11, w10
    7678:	b.cc	7684 <ZSTD_getErrorString@@Base+0xb38>  // b.lo, b.ul, b.last
    767c:	strh	w13, [x0, x5, lsl #1]
    7680:	b	7668 <ZSTD_getErrorString@@Base+0xb1c>
    7684:	strh	w12, [x0, x5, lsl #1]
    7688:	b	7538 <ZSTD_getErrorString@@Base+0x9ec>
    768c:	cbnz	x3, 76c8 <ZSTD_getErrorString@@Base+0xb7c>
    7690:	mov	w2, #0x0                   	// #0
    7694:	b	76c0 <ZSTD_getErrorString@@Base+0xb74>
    7698:	ldrsh	w3, [x0, w2, uxtw #1]
    769c:	ubfiz	x4, x2, #1, #32
    76a0:	cmp	w3, #0x0
    76a4:	b.le	76b4 <ZSTD_getErrorString@@Base+0xb68>
    76a8:	sub	w5, w5, #0x1
    76ac:	add	w3, w3, #0x1
    76b0:	strh	w3, [x0, x4]
    76b4:	add	w2, w2, #0x1
    76b8:	udiv	w3, w2, w8
    76bc:	msub	w2, w3, w8, w2
    76c0:	cbnz	w5, 7698 <ZSTD_getErrorString@@Base+0xb4c>
    76c4:	b	75ec <ZSTD_getErrorString@@Base+0xaa0>
    76c8:	mov	w6, #0x3d                  	// #61
    76cc:	sub	w8, w6, w1
    76d0:	mov	w5, w5
    76d4:	mov	x6, #0x1                   	// #1
    76d8:	lsl	x6, x6, x8
    76dc:	sub	x6, x6, #0x1
    76e0:	lsl	x5, x5, x7
    76e4:	add	x5, x5, x6
    76e8:	udiv	x3, x5, x3
    76ec:	mov	x5, #0x0                   	// #0
    76f0:	ldrsh	w8, [x0, x5, lsl #1]
    76f4:	cmn	w8, #0x2
    76f8:	b.ne	771c <ZSTD_getErrorString@@Base+0xbd0>  // b.any
    76fc:	ldr	w8, [x2, x5, lsl #2]
    7700:	madd	x8, x8, x3, x6
    7704:	lsr	x6, x6, x7
    7708:	lsr	x9, x8, x7
    770c:	subs	w6, w9, w6
    7710:	b.eq	7440 <ZSTD_getErrorString@@Base+0x8f4>  // b.none
    7714:	strh	w6, [x0, x5, lsl #1]
    7718:	mov	x6, x8
    771c:	add	x5, x5, #0x1
    7720:	cmp	w4, w5
    7724:	b.cs	76f0 <ZSTD_getErrorString@@Base+0xba4>  // b.hs, b.nlast
    7728:	b	75ec <ZSTD_getErrorString@@Base+0xaa0>
    772c:	add	w6, w5, w6
    7730:	strh	w6, [x0, x9]
    7734:	b	75ec <ZSTD_getErrorString@@Base+0xaa0>
    7738:	mov	x0, #0xffffffffffffffd4    	// #-44
    773c:	ret
    7740:	mov	x0, #0x0                   	// #0
    7744:	b	7444 <ZSTD_getErrorString@@Base+0x8f8>
    7748:	mov	w2, #0x1                   	// #1
    774c:	lsl	w2, w2, w1
    7750:	sub	w5, w2, #0x1
    7754:	lsr	w3, w2, #1
    7758:	add	x3, x3, #0x1
    775c:	lsl	x3, x3, #2
    7760:	cbz	w1, 77c0 <ZSTD_getErrorString@@Base+0xc74>
    7764:	add	x6, x0, #0x4
    7768:	mov	x4, #0x0                   	// #0
    776c:	strh	w1, [x0]
    7770:	strh	w5, [x0, #2]
    7774:	cmp	w2, w4
    7778:	b.hi	77b0 <ZSTD_getErrorString@@Base+0xc64>  // b.pmore
    777c:	lsl	w1, w1, #16
    7780:	sub	w1, w1, w2
    7784:	mov	w2, #0x0                   	// #0
    7788:	add	x4, x3, w2, uxtw #3
    778c:	add	x6, x0, x4
    7790:	str	w1, [x6, #4]
    7794:	sub	w6, w2, #0x1
    7798:	str	w6, [x0, x4]
    779c:	add	w2, w2, #0x1
    77a0:	cmp	w5, w2
    77a4:	b.cs	7788 <ZSTD_getErrorString@@Base+0xc3c>  // b.hs, b.nlast
    77a8:	mov	x0, #0x0                   	// #0
    77ac:	ret
    77b0:	add	w7, w2, w4
    77b4:	strh	w7, [x6, x4, lsl #1]
    77b8:	add	x4, x4, #0x1
    77bc:	b	7774 <ZSTD_getErrorString@@Base+0xc28>
    77c0:	mov	x0, #0xffffffffffffffff    	// #-1
    77c4:	b	77ac <ZSTD_getErrorString@@Base+0xc60>
    77c8:	and	w1, w1, #0xff
    77cc:	strh	wzr, [x0]
    77d0:	strh	w1, [x0, #2]
    77d4:	str	wzr, [x0, #4]
    77d8:	add	x0, x0, w1, uxtb #3
    77dc:	str	xzr, [x0, #8]
    77e0:	mov	x0, #0x0                   	// #0
    77e4:	ret
    77e8:	add	x6, x3, #0xc
    77ec:	add	x5, x6, x3, lsr #7
    77f0:	cmp	x5, x1
    77f4:	b.hi	7800 <ZSTD_getErrorString@@Base+0xcb4>  // b.pmore
    77f8:	mov	w5, #0x1                   	// #1
    77fc:	b	6f0c <ZSTD_getErrorString@@Base+0x3c0>
    7800:	mov	w5, #0x0                   	// #0
    7804:	b	77fc <ZSTD_getErrorString@@Base+0xcb0>
    7808:	add	x1, x0, #0x20c
    780c:	add	x0, x1, x0, lsr #7
    7810:	ret
    7814:	sub	sp, sp, #0x670
    7818:	cmp	w5, #0xc
    781c:	stp	x29, x30, [sp]
    7820:	mov	x29, sp
    7824:	stp	x19, x20, [sp, #16]
    7828:	mov	x20, x0
    782c:	sub	w19, w5, #0x1
    7830:	lsl	w0, w4, #1
    7834:	stp	x23, x24, [sp, #48]
    7838:	mov	x23, x2
    783c:	sub	w2, w5, #0x2
    7840:	add	w0, w0, #0x3
    7844:	stp	x21, x22, [sp, #32]
    7848:	mov	x22, x1
    784c:	mov	w1, #0x1                   	// #1
    7850:	lsl	w19, w1, w19
    7854:	add	w0, w0, w19
    7858:	lsl	w1, w1, w2
    785c:	mov	w2, #0x400                 	// #1024
    7860:	csel	w1, w1, w2, hi  // hi = pmore
    7864:	stp	x25, x26, [sp, #64]
    7868:	add	w1, w0, w1
    786c:	stp	x27, x28, [sp, #80]
    7870:	cmp	x1, x7
    7874:	str	w4, [sp, #108]
    7878:	b.hi	79e8 <ZSTD_getErrorString@@Base+0xe9c>  // b.pmore
    787c:	mov	x25, x3
    7880:	cmp	x3, #0x1
    7884:	b.ls	79c0 <ZSTD_getErrorString@@Base+0xe74>  // b.plast
    7888:	mov	w26, w5
    788c:	mov	x21, x6
    7890:	cbnz	w4, 789c <ZSTD_getErrorString@@Base+0xd50>
    7894:	mov	w1, #0xff                  	// #255
    7898:	str	w1, [sp, #108]
    789c:	cmp	w26, #0x0
    78a0:	ubfiz	x0, x0, #2, #32
    78a4:	sub	x19, x7, x0
    78a8:	add	x24, x21, x0
    78ac:	mov	w1, #0xb                   	// #11
    78b0:	add	x28, sp, #0x270
    78b4:	csel	w26, w26, w1, ne  // ne = any
    78b8:	mov	x5, x19
    78bc:	mov	x4, x24
    78c0:	mov	x3, x25
    78c4:	mov	x2, x23
    78c8:	add	x1, sp, #0x6c
    78cc:	mov	x0, x28
    78d0:	bl	7e64 <ZSTD_getErrorString@@Base+0x1318>
    78d4:	mov	x18, x0
    78d8:	cmn	x0, #0x78
    78dc:	b.hi	79c4 <ZSTD_getErrorString@@Base+0xe78>  // b.pmore
    78e0:	cmp	x25, x0
    78e4:	b.eq	79f0 <ZSTD_getErrorString@@Base+0xea4>  // b.none
    78e8:	cmp	x0, #0x1
    78ec:	b.eq	79c0 <ZSTD_getErrorString@@Base+0xe74>  // b.none
    78f0:	cmp	x0, x25, lsr #7
    78f4:	b.cc	79c0 <ZSTD_getErrorString@@Base+0xe74>  // b.lo, b.ul, b.last
    78f8:	ldr	w5, [sp, #108]
    78fc:	mov	x1, x25
    7900:	mov	w0, w26
    7904:	add	x27, sp, #0x70
    7908:	mov	w2, w5
    790c:	bl	7424 <ZSTD_getErrorString@@Base+0x8d8>
    7910:	mov	w1, w0
    7914:	mov	w26, w0
    7918:	mov	w4, w5
    791c:	mov	x3, x25
    7920:	mov	x2, x28
    7924:	mov	x0, x27
    7928:	bl	742c <ZSTD_getErrorString@@Base+0x8e0>
    792c:	mov	x18, x0
    7930:	cmn	x0, #0x78
    7934:	b.hi	79c4 <ZSTD_getErrorString@@Base+0xe78>  // b.pmore
    7938:	ldr	w3, [sp, #108]
    793c:	mov	w4, w26
    7940:	mov	x2, x27
    7944:	mov	x1, x22
    7948:	mov	x0, x20
    794c:	bl	7330 <ZSTD_getErrorString@@Base+0x7e4>
    7950:	mov	x18, x0
    7954:	cmn	x0, #0x78
    7958:	b.hi	79c4 <ZSTD_getErrorString@@Base+0xe78>  // b.pmore
    795c:	ldr	w2, [sp, #108]
    7960:	mov	x5, x19
    7964:	mov	x4, x24
    7968:	mov	w3, w26
    796c:	mov	x1, x27
    7970:	mov	x0, x21
    7974:	bl	7118 <ZSTD_getErrorString@@Base+0x5cc>
    7978:	cmn	x0, #0x78
    797c:	b.hi	79f8 <ZSTD_getErrorString@@Base+0xeac>  // b.pmore
    7980:	add	x19, x20, x18
    7984:	sub	x1, x22, x18
    7988:	mov	x4, x21
    798c:	mov	x3, x25
    7990:	mov	x2, x23
    7994:	mov	x0, x19
    7998:	bl	77e8 <ZSTD_getErrorString@@Base+0xc9c>
    799c:	mov	x18, x0
    79a0:	cmn	x0, #0x78
    79a4:	b.hi	79c4 <ZSTD_getErrorString@@Base+0xe78>  // b.pmore
    79a8:	cbz	x0, 79c0 <ZSTD_getErrorString@@Base+0xe74>
    79ac:	add	x18, x19, x0
    79b0:	sub	x25, x25, #0x1
    79b4:	sub	x18, x18, x20
    79b8:	cmp	x18, x25
    79bc:	b.cc	79c4 <ZSTD_getErrorString@@Base+0xe78>  // b.lo, b.ul, b.last
    79c0:	mov	x18, #0x0                   	// #0
    79c4:	mov	x0, x18
    79c8:	ldp	x29, x30, [sp]
    79cc:	ldp	x19, x20, [sp, #16]
    79d0:	ldp	x21, x22, [sp, #32]
    79d4:	ldp	x23, x24, [sp, #48]
    79d8:	ldp	x25, x26, [sp, #64]
    79dc:	ldp	x27, x28, [sp, #80]
    79e0:	add	sp, sp, #0x670
    79e4:	ret
    79e8:	mov	x18, #0xffffffffffffffd4    	// #-44
    79ec:	b	79c4 <ZSTD_getErrorString@@Base+0xe78>
    79f0:	mov	x18, #0x1                   	// #1
    79f4:	b	79c4 <ZSTD_getErrorString@@Base+0xe78>
    79f8:	mov	x18, x0
    79fc:	b	79c4 <ZSTD_getErrorString@@Base+0xe78>
    7a00:	mov	x12, #0x3820                	// #14368
    7a04:	sub	sp, sp, x12
    7a08:	add	x6, sp, #0x18
    7a0c:	mov	x7, #0x3804                	// #14340
    7a10:	stp	x29, x30, [sp]
    7a14:	mov	x29, sp
    7a18:	bl	7814 <ZSTD_getErrorString@@Base+0xcc8>
    7a1c:	mov	x12, #0x3820                	// #14368
    7a20:	ldp	x29, x30, [sp]
    7a24:	add	sp, sp, x12
    7a28:	ret
    7a2c:	cmp	w5, #0xc
    7a30:	b.hi	7a38 <ZSTD_getErrorString@@Base+0xeec>  // b.pmore
    7a34:	b	7a00 <ZSTD_getErrorString@@Base+0xeb4>
    7a38:	mov	x0, #0xffffffffffffffd4    	// #-44
    7a3c:	ret
    7a40:	mov	w5, #0xb                   	// #11
    7a44:	mov	w4, #0xff                  	// #255
    7a48:	b	7a00 <ZSTD_getErrorString@@Base+0xeb4>
    7a4c:	stp	x29, x30, [sp, #-96]!
    7a50:	mov	x29, sp
    7a54:	stp	x19, x20, [sp, #16]
    7a58:	mov	x19, x3
    7a5c:	ldr	w20, [x1]
    7a60:	stp	x21, x22, [sp, #32]
    7a64:	add	x21, x5, #0x400
    7a68:	add	x22, x5, #0x800
    7a6c:	stp	x23, x24, [sp, #48]
    7a70:	mov	x24, x0
    7a74:	mov	x23, x1
    7a78:	mov	x0, x5
    7a7c:	mov	w1, #0x0                   	// #0
    7a80:	stp	x25, x26, [sp, #64]
    7a84:	mov	x26, x2
    7a88:	add	x25, x5, #0xc00
    7a8c:	stp	x27, x28, [sp, #80]
    7a90:	add	x28, x2, x3
    7a94:	mov	w27, w4
    7a98:	mov	x2, #0x1000                	// #4096
    7a9c:	bl	4700 <memset@plt>
    7aa0:	cbnz	x19, 7ad8 <ZSTD_getErrorString@@Base+0xf8c>
    7aa4:	add	w2, w20, #0x1
    7aa8:	mov	x0, x24
    7aac:	mov	w1, #0x0                   	// #0
    7ab0:	bl	4700 <memset@plt>
    7ab4:	str	wzr, [x23]
    7ab8:	mov	x0, x19
    7abc:	ldp	x19, x20, [sp, #16]
    7ac0:	ldp	x21, x22, [sp, #32]
    7ac4:	ldp	x23, x24, [sp, #48]
    7ac8:	ldp	x25, x26, [sp, #64]
    7acc:	ldp	x27, x28, [sp, #80]
    7ad0:	ldp	x29, x30, [sp], #96
    7ad4:	ret
    7ad8:	mov	x6, x26
    7adc:	cmp	w20, #0x0
    7ae0:	mov	x5, x0
    7ae4:	sub	x1, x28, #0xf
    7ae8:	mov	w0, #0xff                  	// #255
    7aec:	csel	w20, w20, w0, ne  // ne = any
    7af0:	ldr	w3, [x6], #4
    7af4:	cmp	x1, x6
    7af8:	b.hi	7b8c <ZSTD_getErrorString@@Base+0x1040>  // b.pmore
    7afc:	sub	x19, x19, #0x4
    7b00:	sub	x0, x26, #0xb
    7b04:	and	x19, x19, #0xfffffffffffffff0
    7b08:	cmp	x1, x0
    7b0c:	csel	x19, x19, xzr, cs  // cs = hs, nlast
    7b10:	add	x2, x26, x19
    7b14:	cmp	x2, x28
    7b18:	b.cc	7cd4 <ZSTD_getErrorString@@Base+0x1188>  // b.lo, b.ul, b.last
    7b1c:	cbz	w27, 7b30 <ZSTD_getErrorString@@Base+0xfe4>
    7b20:	add	x0, x5, #0x3fc
    7b24:	mov	w2, #0xff                  	// #255
    7b28:	cmp	w20, w2
    7b2c:	b.cc	7cec <ZSTD_getErrorString@@Base+0x11a0>  // b.lo, b.ul, b.last
    7b30:	cmp	w20, #0xff
    7b34:	mov	w0, #0xff                  	// #255
    7b38:	csel	w20, w20, w0, ls  // ls = plast
    7b3c:	mov	x1, #0x0                   	// #0
    7b40:	mov	x19, #0x0                   	// #0
    7b44:	ldr	w2, [x5, #1024]
    7b48:	add	x5, x5, #0x4
    7b4c:	ldur	w0, [x5, #-4]
    7b50:	ldr	w3, [x5, #3068]
    7b54:	add	w0, w0, w2
    7b58:	ldr	w2, [x5, #2044]
    7b5c:	add	w2, w2, w3
    7b60:	add	w0, w0, w2
    7b64:	str	w0, [x24, x1, lsl #2]
    7b68:	cmp	w19, w0
    7b6c:	add	x1, x1, #0x1
    7b70:	csel	x19, x19, x0, cs  // cs = hs, nlast
    7b74:	cmp	w20, w1
    7b78:	b.cs	7b44 <ZSTD_getErrorString@@Base+0xff8>  // b.hs, b.nlast
    7b7c:	ldr	w0, [x24, w20, uxtw #2]
    7b80:	cbz	w0, 7d18 <ZSTD_getErrorString@@Base+0x11cc>
    7b84:	str	w20, [x23]
    7b88:	b	7ab8 <ZSTD_getErrorString@@Base+0xf6c>
    7b8c:	ubfiz	x2, x3, #2, #8
    7b90:	ldr	w7, [x6]
    7b94:	add	x6, x6, #0x10
    7b98:	ldr	w0, [x5, x2]
    7b9c:	add	w0, w0, #0x1
    7ba0:	str	w0, [x5, x2]
    7ba4:	ubfx	x0, x3, #8, #8
    7ba8:	lsl	x0, x0, #2
    7bac:	ldr	w2, [x21, x0]
    7bb0:	add	w2, w2, #0x1
    7bb4:	str	w2, [x21, x0]
    7bb8:	ubfx	x0, x3, #16, #8
    7bbc:	lsr	w3, w3, #24
    7bc0:	lsl	x0, x0, #2
    7bc4:	lsl	x3, x3, #2
    7bc8:	ldr	w2, [x22, x0]
    7bcc:	add	w2, w2, #0x1
    7bd0:	str	w2, [x22, x0]
    7bd4:	ubfiz	x2, x7, #2, #8
    7bd8:	ldr	w0, [x25, x3]
    7bdc:	add	w0, w0, #0x1
    7be0:	str	w0, [x25, x3]
    7be4:	ldr	w0, [x5, x2]
    7be8:	ldur	w3, [x6, #-12]
    7bec:	add	w0, w0, #0x1
    7bf0:	str	w0, [x5, x2]
    7bf4:	ubfx	x0, x7, #8, #8
    7bf8:	lsl	x0, x0, #2
    7bfc:	ldr	w2, [x21, x0]
    7c00:	add	w2, w2, #0x1
    7c04:	str	w2, [x21, x0]
    7c08:	ubfx	x0, x7, #16, #8
    7c0c:	lsr	w7, w7, #24
    7c10:	lsl	x0, x0, #2
    7c14:	lsl	x7, x7, #2
    7c18:	ldr	w2, [x22, x0]
    7c1c:	add	w2, w2, #0x1
    7c20:	str	w2, [x22, x0]
    7c24:	ubfiz	x2, x3, #2, #8
    7c28:	ldr	w0, [x25, x7]
    7c2c:	add	w0, w0, #0x1
    7c30:	str	w0, [x25, x7]
    7c34:	ldr	w0, [x5, x2]
    7c38:	ldur	w7, [x6, #-8]
    7c3c:	add	w0, w0, #0x1
    7c40:	str	w0, [x5, x2]
    7c44:	ubfx	x0, x3, #8, #8
    7c48:	lsl	x0, x0, #2
    7c4c:	ldr	w2, [x21, x0]
    7c50:	add	w2, w2, #0x1
    7c54:	str	w2, [x21, x0]
    7c58:	ubfx	x0, x3, #16, #8
    7c5c:	lsr	w3, w3, #24
    7c60:	lsl	x0, x0, #2
    7c64:	lsl	x3, x3, #2
    7c68:	ldr	w2, [x22, x0]
    7c6c:	add	w2, w2, #0x1
    7c70:	str	w2, [x22, x0]
    7c74:	ubfiz	x2, x7, #2, #8
    7c78:	ldr	w0, [x25, x3]
    7c7c:	add	w0, w0, #0x1
    7c80:	str	w0, [x25, x3]
    7c84:	ldr	w0, [x5, x2]
    7c88:	ldur	w3, [x6, #-4]
    7c8c:	add	w0, w0, #0x1
    7c90:	str	w0, [x5, x2]
    7c94:	ubfx	x0, x7, #8, #8
    7c98:	lsl	x0, x0, #2
    7c9c:	ldr	w2, [x21, x0]
    7ca0:	add	w2, w2, #0x1
    7ca4:	str	w2, [x21, x0]
    7ca8:	ubfx	x0, x7, #16, #8
    7cac:	lsr	w7, w7, #24
    7cb0:	lsl	x0, x0, #2
    7cb4:	lsl	x7, x7, #2
    7cb8:	ldr	w2, [x22, x0]
    7cbc:	add	w2, w2, #0x1
    7cc0:	str	w2, [x22, x0]
    7cc4:	ldr	w0, [x25, x7]
    7cc8:	add	w0, w0, #0x1
    7ccc:	str	w0, [x25, x7]
    7cd0:	b	7af4 <ZSTD_getErrorString@@Base+0xfa8>
    7cd4:	ldrb	w0, [x2], #1
    7cd8:	lsl	x0, x0, #2
    7cdc:	ldr	w1, [x5, x0]
    7ce0:	add	w1, w1, #0x1
    7ce4:	str	w1, [x5, x0]
    7ce8:	b	7b14 <ZSTD_getErrorString@@Base+0xfc8>
    7cec:	ldr	w3, [x0, #1024]
    7cf0:	ldr	w1, [x0]
    7cf4:	ldr	w4, [x0, #3072]
    7cf8:	add	w1, w1, w3
    7cfc:	ldr	w3, [x0, #2048]
    7d00:	add	w3, w3, w4
    7d04:	add	w1, w1, w3
    7d08:	str	w1, [x0], #-4
    7d0c:	cbnz	w1, 7d20 <ZSTD_getErrorString@@Base+0x11d4>
    7d10:	sub	w2, w2, #0x1
    7d14:	b	7b28 <ZSTD_getErrorString@@Base+0xfdc>
    7d18:	sub	w20, w20, #0x1
    7d1c:	b	7b7c <ZSTD_getErrorString@@Base+0x1030>
    7d20:	mov	x19, #0xffffffffffffffd0    	// #-48
    7d24:	b	7ab8 <ZSTD_getErrorString@@Base+0xf6c>
    7d28:	cmn	x0, #0x78
    7d2c:	cset	w0, hi  // hi = pmore
    7d30:	ret
    7d34:	stp	x29, x30, [sp, #-64]!
    7d38:	mov	x29, sp
    7d3c:	stp	x19, x20, [sp, #16]
    7d40:	mov	x19, x2
    7d44:	ldr	w20, [x1]
    7d48:	stp	x21, x22, [sp, #32]
    7d4c:	mov	x22, x3
    7d50:	add	w2, w20, #0x1
    7d54:	mov	x21, x0
    7d58:	str	x23, [sp, #48]
    7d5c:	lsl	x2, x2, #2
    7d60:	mov	x23, x1
    7d64:	mov	w1, #0x0                   	// #0
    7d68:	bl	4700 <memset@plt>
    7d6c:	cbnz	x22, 7dd8 <ZSTD_getErrorString@@Base+0x128c>
    7d70:	mov	w0, #0x0                   	// #0
    7d74:	str	wzr, [x23]
    7d78:	ldp	x19, x20, [sp, #16]
    7d7c:	ldp	x21, x22, [sp, #32]
    7d80:	ldr	x23, [sp, #48]
    7d84:	ldp	x29, x30, [sp], #64
    7d88:	ret
    7d8c:	ldrb	w0, [x2], #1
    7d90:	lsl	x0, x0, #2
    7d94:	ldr	w1, [x21, x0]
    7d98:	add	w1, w1, #0x1
    7d9c:	str	w1, [x21, x0]
    7da0:	cmp	x2, x22
    7da4:	b.cc	7d8c <ZSTD_getErrorString@@Base+0x1240>  // b.lo, b.ul, b.last
    7da8:	ldr	w0, [x21, w20, uxtw #2]
    7dac:	cbz	w0, 7de4 <ZSTD_getErrorString@@Base+0x1298>
    7db0:	mov	w1, #0x0                   	// #0
    7db4:	mov	w0, #0x0                   	// #0
    7db8:	str	w20, [x23]
    7dbc:	ldr	w2, [x21, w1, uxtw #2]
    7dc0:	add	w1, w1, #0x1
    7dc4:	cmp	w0, w2
    7dc8:	csel	w0, w0, w2, cs  // cs = hs, nlast
    7dcc:	cmp	w20, w1
    7dd0:	b.cs	7dbc <ZSTD_getErrorString@@Base+0x1270>  // b.hs, b.nlast
    7dd4:	b	7d78 <ZSTD_getErrorString@@Base+0x122c>
    7dd8:	mov	x2, x19
    7ddc:	add	x22, x19, x22
    7de0:	b	7da0 <ZSTD_getErrorString@@Base+0x1254>
    7de4:	sub	w20, w20, #0x1
    7de8:	b	7da8 <ZSTD_getErrorString@@Base+0x125c>
    7dec:	cmp	x3, #0x5db
    7df0:	b.hi	7e0c <ZSTD_getErrorString@@Base+0x12c0>  // b.pmore
    7df4:	stp	x29, x30, [sp, #-16]!
    7df8:	mov	x29, sp
    7dfc:	bl	7d34 <ZSTD_getErrorString@@Base+0x11e8>
    7e00:	mov	w0, w0
    7e04:	ldp	x29, x30, [sp], #16
    7e08:	ret
    7e0c:	tst	x4, #0x3
    7e10:	b.ne	7e28 <ZSTD_getErrorString@@Base+0x12dc>  // b.any
    7e14:	cmp	x5, #0xfff
    7e18:	b.ls	7e30 <ZSTD_getErrorString@@Base+0x12e4>  // b.plast
    7e1c:	mov	x5, x4
    7e20:	mov	w4, #0x0                   	// #0
    7e24:	b	7a4c <ZSTD_getErrorString@@Base+0xf00>
    7e28:	mov	x0, #0xffffffffffffffff    	// #-1
    7e2c:	ret
    7e30:	mov	x0, #0xffffffffffffffbe    	// #-66
    7e34:	ret
    7e38:	mov	x12, #0x1010                	// #4112
    7e3c:	sub	sp, sp, x12
    7e40:	add	x4, sp, #0x10
    7e44:	mov	x5, #0x1000                	// #4096
    7e48:	stp	x29, x30, [sp]
    7e4c:	mov	x29, sp
    7e50:	bl	7dec <ZSTD_getErrorString@@Base+0x12a0>
    7e54:	mov	x12, #0x1010                	// #4112
    7e58:	ldp	x29, x30, [sp]
    7e5c:	add	sp, sp, x12
    7e60:	ret
    7e64:	tst	x4, #0x3
    7e68:	b.ne	7e98 <ZSTD_getErrorString@@Base+0x134c>  // b.any
    7e6c:	cmp	x5, #0xfff
    7e70:	b.ls	7ea0 <ZSTD_getErrorString@@Base+0x1354>  // b.plast
    7e74:	ldr	w8, [x1]
    7e78:	cmp	w8, #0xfe
    7e7c:	b.hi	7e8c <ZSTD_getErrorString@@Base+0x1340>  // b.pmore
    7e80:	mov	x5, x4
    7e84:	mov	w4, #0x1                   	// #1
    7e88:	b	7a4c <ZSTD_getErrorString@@Base+0xf00>
    7e8c:	mov	w7, #0xff                  	// #255
    7e90:	str	w7, [x1]
    7e94:	b	7dec <ZSTD_getErrorString@@Base+0x12a0>
    7e98:	mov	x0, #0xffffffffffffffff    	// #-1
    7e9c:	ret
    7ea0:	mov	x0, #0xffffffffffffffbe    	// #-66
    7ea4:	b	7e9c <ZSTD_getErrorString@@Base+0x1350>
    7ea8:	mov	x12, #0x1010                	// #4112
    7eac:	sub	sp, sp, x12
    7eb0:	add	x4, sp, #0x10
    7eb4:	mov	x5, #0x1000                	// #4096
    7eb8:	stp	x29, x30, [sp]
    7ebc:	mov	x29, sp
    7ec0:	bl	7e64 <ZSTD_getErrorString@@Base+0x1318>
    7ec4:	mov	x12, #0x1010                	// #4112
    7ec8:	ldp	x29, x30, [sp]
    7ecc:	add	sp, sp, x12
    7ed0:	ret
    7ed4:	ldr	w2, [x0, #8]
    7ed8:	ldr	x1, [x0, #24]
    7edc:	lsr	w4, w2, #3
    7ee0:	ldr	x3, [x0]
    7ee4:	str	x3, [x1]
    7ee8:	add	x1, x1, x4
    7eec:	ldr	x4, [x0, #32]
    7ef0:	cmp	x1, x4
    7ef4:	csel	x1, x1, x4, ls  // ls = plast
    7ef8:	str	x1, [x0, #24]
    7efc:	and	w1, w2, #0x7
    7f00:	and	w2, w2, #0xfffffff8
    7f04:	str	w1, [x0, #8]
    7f08:	lsr	x2, x3, x2
    7f0c:	str	x2, [x0]
    7f10:	ret
    7f14:	stp	x29, x30, [sp, #-64]!
    7f18:	mov	x5, x4
    7f1c:	subs	x4, x1, #0x8
    7f20:	mov	x29, sp
    7f24:	str	xzr, [sp, #24]
    7f28:	str	wzr, [sp, #32]
    7f2c:	stp	x0, x0, [sp, #40]
    7f30:	add	x0, x0, x4
    7f34:	str	x0, [sp, #56]
    7f38:	b.hi	7f48 <ZSTD_getErrorString@@Base+0x13fc>  // b.pmore
    7f3c:	mov	x0, #0x0                   	// #0
    7f40:	ldp	x29, x30, [sp], #64
    7f44:	ret
    7f48:	and	x7, x3, #0xfffffffffffffffc
    7f4c:	and	x3, x3, #0x3
    7f50:	cmp	x3, #0x2
    7f54:	add	x6, x2, x7
    7f58:	add	x0, sp, #0x18
    7f5c:	b.eq	8010 <ZSTD_getErrorString@@Base+0x14c4>  // b.none
    7f60:	cmp	x3, #0x3
    7f64:	b.eq	7ff4 <ZSTD_getErrorString@@Base+0x14a8>  // b.none
    7f68:	cmp	x3, #0x1
    7f6c:	b.ne	7fa4 <ZSTD_getErrorString@@Base+0x1458>  // b.any
    7f70:	ldrb	w1, [x2, x7]
    7f74:	ldr	w4, [sp, #32]
    7f78:	lsl	x2, x1, #2
    7f7c:	add	x1, x5, x1, lsl #2
    7f80:	ldrh	w2, [x5, x2]
    7f84:	ldrb	w1, [x1, #2]
    7f88:	lsl	x3, x2, x4
    7f8c:	add	w1, w1, w4
    7f90:	ldr	x2, [sp, #24]
    7f94:	str	w1, [sp, #32]
    7f98:	orr	x2, x2, x3
    7f9c:	str	x2, [sp, #24]
    7fa0:	bl	7ed4 <ZSTD_getErrorString@@Base+0x1388>
    7fa4:	ldr	w2, [sp, #32]
    7fa8:	sub	x6, x6, #0x4
    7fac:	ldr	x10, [sp, #24]
    7fb0:	cbnz	x7, 8044 <ZSTD_getErrorString@@Base+0x14f8>
    7fb4:	mov	x1, #0x1                   	// #1
    7fb8:	lsl	x1, x1, x2
    7fbc:	add	w2, w2, #0x1
    7fc0:	orr	x1, x1, x10
    7fc4:	str	x1, [sp, #24]
    7fc8:	str	w2, [sp, #32]
    7fcc:	bl	7ed4 <ZSTD_getErrorString@@Base+0x1388>
    7fd0:	ldp	x0, x1, [sp, #48]
    7fd4:	cmp	x0, x1
    7fd8:	b.cs	7f3c <ZSTD_getErrorString@@Base+0x13f0>  // b.hs, b.nlast
    7fdc:	ldr	x1, [sp, #40]
    7fe0:	sub	x0, x0, x1
    7fe4:	ldr	w1, [sp, #32]
    7fe8:	cmp	w1, #0x0
    7fec:	cinc	x0, x0, ne  // ne = any
    7ff0:	b	7f40 <ZSTD_getErrorString@@Base+0x13f4>
    7ff4:	ldrb	w1, [x6, #2]
    7ff8:	lsl	x3, x1, #2
    7ffc:	add	x1, x5, x1, lsl #2
    8000:	ldrh	w3, [x5, x3]
    8004:	ldrb	w1, [x1, #2]
    8008:	str	x3, [sp, #24]
    800c:	str	w1, [sp, #32]
    8010:	ldrb	w1, [x6, #1]
    8014:	ldr	w8, [sp, #32]
    8018:	lsl	x3, x1, #2
    801c:	add	x1, x5, x1, lsl #2
    8020:	ldrh	w3, [x5, x3]
    8024:	ldrb	w1, [x1, #2]
    8028:	lsl	x4, x3, x8
    802c:	add	w1, w1, w8
    8030:	ldr	x3, [sp, #24]
    8034:	str	w1, [sp, #32]
    8038:	orr	x3, x3, x4
    803c:	str	x3, [sp, #24]
    8040:	b	7f70 <ZSTD_getErrorString@@Base+0x1424>
    8044:	ldrb	w3, [x6, #3]
    8048:	sub	x7, x7, #0x4
    804c:	ldrb	w4, [x6, #2]
    8050:	ldrb	w9, [x6]
    8054:	lsl	x12, x3, #2
    8058:	add	x3, x5, x3, lsl #2
    805c:	lsl	x13, x4, #2
    8060:	add	x4, x5, x4, lsl #2
    8064:	lsl	x11, x9, #2
    8068:	add	x9, x5, x9, lsl #2
    806c:	ldrb	w3, [x3, #2]
    8070:	ldrb	w1, [x4, #2]
    8074:	ldrb	w4, [x6, #1]
    8078:	add	w3, w3, w2
    807c:	add	w8, w1, w3
    8080:	ldrb	w9, [x9, #2]
    8084:	lsl	x1, x4, #2
    8088:	add	x4, x5, x4, lsl #2
    808c:	ldrh	w1, [x5, x1]
    8090:	ldrb	w4, [x4, #2]
    8094:	lsl	x1, x1, x8
    8098:	add	w4, w4, w8
    809c:	ldrh	w8, [x5, x13]
    80a0:	lsl	x3, x8, x3
    80a4:	orr	x1, x1, x3
    80a8:	ldrh	w3, [x5, x12]
    80ac:	lsl	x2, x3, x2
    80b0:	orr	x2, x2, x10
    80b4:	orr	x1, x1, x2
    80b8:	ldrh	w2, [x5, x11]
    80bc:	lsl	x2, x2, x4
    80c0:	add	w4, w9, w4
    80c4:	orr	x1, x1, x2
    80c8:	str	x1, [sp, #24]
    80cc:	str	w4, [sp, #32]
    80d0:	b	7fa0 <ZSTD_getErrorString@@Base+0x1454>
    80d4:	cmp	x1, #0x10
    80d8:	b.hi	80fc <ZSTD_getErrorString@@Base+0x15b0>  // b.pmore
    80dc:	mov	x0, #0x0                   	// #0
    80e0:	ret
    80e4:	mov	x0, #0x0                   	// #0
    80e8:	ldp	x19, x20, [sp, #16]
    80ec:	ldp	x21, x22, [sp, #32]
    80f0:	ldr	x23, [sp, #48]
    80f4:	ldp	x29, x30, [sp], #64
    80f8:	ret
    80fc:	stp	x29, x30, [sp, #-64]!
    8100:	cmp	x3, #0xb
    8104:	mov	x29, sp
    8108:	stp	x19, x20, [sp, #16]
    810c:	mov	x20, x3
    8110:	stp	x21, x22, [sp, #32]
    8114:	str	x23, [sp, #48]
    8118:	b.ls	80e4 <ZSTD_getErrorString@@Base+0x1598>  // b.plast
    811c:	mov	x15, x1
    8120:	sub	x1, x1, #0x6
    8124:	cmp	x1, #0x7
    8128:	b.ls	80e4 <ZSTD_getErrorString@@Base+0x1598>  // b.plast
    812c:	mov	x18, x0
    8130:	add	x22, x3, #0x3
    8134:	add	x14, x0, #0x6
    8138:	mov	x19, x2
    813c:	lsr	x22, x22, #2
    8140:	mov	x23, x4
    8144:	mov	x3, x22
    8148:	mov	x0, x14
    814c:	bl	7f14 <ZSTD_getErrorString@@Base+0x13c8>
    8150:	cmn	x0, #0x78
    8154:	b.hi	80e8 <ZSTD_getErrorString@@Base+0x159c>  // b.pmore
    8158:	cbz	x0, 80e4 <ZSTD_getErrorString@@Base+0x1598>
    815c:	add	x15, x18, x15
    8160:	add	x14, x14, x0
    8164:	strh	w0, [x18]
    8168:	sub	x1, x15, x14
    816c:	cmp	x1, #0x7
    8170:	b.ls	80e4 <ZSTD_getErrorString@@Base+0x1598>  // b.plast
    8174:	add	x21, x19, x22
    8178:	mov	x4, x23
    817c:	mov	x3, x22
    8180:	mov	x2, x21
    8184:	mov	x0, x14
    8188:	bl	7f14 <ZSTD_getErrorString@@Base+0x13c8>
    818c:	cmn	x0, #0x78
    8190:	b.hi	80e8 <ZSTD_getErrorString@@Base+0x159c>  // b.pmore
    8194:	cbz	x0, 80e4 <ZSTD_getErrorString@@Base+0x1598>
    8198:	add	x14, x14, x0
    819c:	strh	w0, [x18, #2]
    81a0:	sub	x1, x15, x14
    81a4:	cmp	x1, #0x7
    81a8:	b.ls	80e4 <ZSTD_getErrorString@@Base+0x1598>  // b.plast
    81ac:	add	x21, x21, x22
    81b0:	mov	x4, x23
    81b4:	mov	x3, x22
    81b8:	mov	x2, x21
    81bc:	mov	x0, x14
    81c0:	bl	7f14 <ZSTD_getErrorString@@Base+0x13c8>
    81c4:	cmn	x0, #0x78
    81c8:	b.hi	80e8 <ZSTD_getErrorString@@Base+0x159c>  // b.pmore
    81cc:	cbz	x0, 80e4 <ZSTD_getErrorString@@Base+0x1598>
    81d0:	add	x14, x14, x0
    81d4:	strh	w0, [x18, #4]
    81d8:	sub	x1, x15, x14
    81dc:	cmp	x1, #0x7
    81e0:	b.ls	80e4 <ZSTD_getErrorString@@Base+0x1598>  // b.plast
    81e4:	add	x2, x21, x22
    81e8:	add	x3, x19, x20
    81ec:	mov	x4, x23
    81f0:	sub	x3, x3, x2
    81f4:	mov	x0, x14
    81f8:	bl	7f14 <ZSTD_getErrorString@@Base+0x13c8>
    81fc:	cmn	x0, #0x78
    8200:	b.hi	80e8 <ZSTD_getErrorString@@Base+0x159c>  // b.pmore
    8204:	cbz	x0, 80e4 <ZSTD_getErrorString@@Base+0x1598>
    8208:	add	x0, x14, x0
    820c:	sub	x0, x0, x18
    8210:	b	80e8 <ZSTD_getErrorString@@Base+0x159c>
    8214:	stp	x29, x30, [sp, #-48]!
    8218:	mov	x29, sp
    821c:	stp	x19, x20, [sp, #16]
    8220:	mov	x20, x1
    8224:	mov	x1, x2
    8228:	str	x21, [sp, #32]
    822c:	mov	x19, x4
    8230:	mov	x2, x3
    8234:	mov	x4, x6
    8238:	sub	x1, x1, x20
    823c:	mov	x21, x0
    8240:	cbnz	w5, 828c <ZSTD_getErrorString@@Base+0x1740>
    8244:	cmp	x1, #0x7
    8248:	b.ls	8278 <ZSTD_getErrorString@@Base+0x172c>  // b.plast
    824c:	mov	x3, x19
    8250:	mov	x0, x20
    8254:	bl	7f14 <ZSTD_getErrorString@@Base+0x13c8>
    8258:	cmn	x0, #0x78
    825c:	b.hi	827c <ZSTD_getErrorString@@Base+0x1730>  // b.pmore
    8260:	cbz	x0, 8278 <ZSTD_getErrorString@@Base+0x172c>
    8264:	add	x0, x20, x0
    8268:	sub	x19, x19, #0x1
    826c:	sub	x0, x0, x21
    8270:	cmp	x0, x19
    8274:	b.cc	827c <ZSTD_getErrorString@@Base+0x1730>  // b.lo, b.ul, b.last
    8278:	mov	x0, #0x0                   	// #0
    827c:	ldp	x19, x20, [sp, #16]
    8280:	ldr	x21, [sp, #32]
    8284:	ldp	x29, x30, [sp], #48
    8288:	ret
    828c:	mov	x3, x19
    8290:	mov	x0, x20
    8294:	bl	80d4 <ZSTD_getErrorString@@Base+0x1588>
    8298:	b	8258 <ZSTD_getErrorString@@Base+0x170c>
    829c:	mov	w3, #0x1                   	// #1
    82a0:	b	73bc <ZSTD_getErrorString@@Base+0x870>
    82a4:	sub	sp, sp, #0x310
    82a8:	cmp	w3, #0xff
    82ac:	stp	x29, x30, [sp]
    82b0:	mov	x29, sp
    82b4:	stp	x19, x20, [sp, #16]
    82b8:	stp	x21, x22, [sp, #32]
    82bc:	stp	x23, x24, [sp, #48]
    82c0:	stp	x25, x26, [sp, #64]
    82c4:	stp	x27, x28, [sp, #80]
    82c8:	b.hi	84f4 <ZSTD_getErrorString@@Base+0x19a8>  // b.pmore
    82cc:	mov	w20, w3
    82d0:	mov	x24, x1
    82d4:	add	w3, w4, #0x1
    82d8:	add	x5, sp, #0x78
    82dc:	mov	x21, x0
    82e0:	mov	x0, #0x0                   	// #0
    82e4:	strb	wzr, [sp, #120]
    82e8:	add	x1, x0, #0x1
    82ec:	cmp	w3, w1
    82f0:	b.hi	833c <ZSTD_getErrorString@@Base+0x17f0>  // b.pmore
    82f4:	add	x1, sp, #0x210
    82f8:	add	x2, x2, #0x2
    82fc:	add	x3, sp, #0x78
    8300:	mov	x0, #0x0                   	// #0
    8304:	cmp	w20, w0
    8308:	b.hi	834c <ZSTD_getErrorString@@Base+0x1800>  // b.pmore
    830c:	mov	w0, #0xc                   	// #12
    8310:	str	w0, [sp, #116]
    8314:	cmp	w20, #0x1
    8318:	b.hi	8364 <ZSTD_getErrorString@@Base+0x1818>  // b.pmore
    831c:	mov	x19, #0x0                   	// #0
    8320:	lsr	w0, w20, #1
    8324:	cmp	x0, x19
    8328:	ccmp	x19, #0x1, #0x0, hi  // hi = pmore
    832c:	b.ls	8494 <ZSTD_getErrorString@@Base+0x1948>  // b.plast
    8330:	strb	w19, [x21]
    8334:	add	x19, x19, #0x1
    8338:	b	8470 <ZSTD_getErrorString@@Base+0x1924>
    833c:	sub	w0, w4, w0
    8340:	strb	w0, [x1, x5]
    8344:	mov	x0, x1
    8348:	b	82e8 <ZSTD_getErrorString@@Base+0x179c>
    834c:	lsl	x4, x0, #2
    8350:	ldrb	w4, [x2, x4]
    8354:	ldrb	w4, [x3, x4]
    8358:	strb	w4, [x0, x1]
    835c:	add	x0, x0, #0x1
    8360:	b	8304 <ZSTD_getErrorString@@Base+0x17b8>
    8364:	mov	w22, w20
    8368:	add	x26, sp, #0x210
    836c:	add	x19, sp, #0xa8
    8370:	mov	x3, x22
    8374:	mov	x2, x26
    8378:	add	x1, sp, #0x74
    837c:	mov	x0, x19
    8380:	bl	7d34 <ZSTD_getErrorString@@Base+0x11e8>
    8384:	cmp	x22, w0, uxtw
    8388:	b.ne	8394 <ZSTD_getErrorString@@Base+0x1848>  // b.any
    838c:	mov	x19, #0x1                   	// #1
    8390:	b	8320 <ZSTD_getErrorString@@Base+0x17d4>
    8394:	cmp	w0, #0x1
    8398:	b.eq	831c <ZSTD_getErrorString@@Base+0x17d0>  // b.none
    839c:	ldr	w2, [sp, #116]
    83a0:	mov	x1, x22
    83a4:	mov	w0, #0x6                   	// #6
    83a8:	add	x28, sp, #0x88
    83ac:	bl	7424 <ZSTD_getErrorString@@Base+0x8d8>
    83b0:	mov	w1, w0
    83b4:	ldr	w4, [sp, #116]
    83b8:	mov	x2, x19
    83bc:	mov	w23, w0
    83c0:	mov	x3, x22
    83c4:	mov	x0, x28
    83c8:	bl	742c <ZSTD_getErrorString@@Base+0x8e0>
    83cc:	mov	x19, x0
    83d0:	cmn	x0, #0x78
    83d4:	b.hi	8470 <ZSTD_getErrorString@@Base+0x1924>  // b.pmore
    83d8:	ldr	w3, [sp, #116]
    83dc:	add	x25, x21, #0x1
    83e0:	sub	x27, x24, #0x1
    83e4:	mov	w4, w23
    83e8:	mov	x2, x28
    83ec:	mov	x1, x27
    83f0:	mov	x0, x25
    83f4:	bl	7330 <ZSTD_getErrorString@@Base+0x7e4>
    83f8:	mov	x19, x0
    83fc:	cmn	x0, #0x78
    8400:	b.hi	8470 <ZSTD_getErrorString@@Base+0x1924>  // b.pmore
    8404:	ldr	w2, [sp, #116]
    8408:	add	x6, sp, #0x120
    840c:	add	x4, sp, #0xe0
    8410:	mov	w3, w23
    8414:	mov	x1, x28
    8418:	mov	x0, x6
    841c:	mov	x5, #0x40                  	// #64
    8420:	str	x6, [sp, #104]
    8424:	bl	7118 <ZSTD_getErrorString@@Base+0x5cc>
    8428:	cmn	x0, #0x78
    842c:	b.hi	850c <ZSTD_getErrorString@@Base+0x19c0>  // b.pmore
    8430:	ldr	x6, [sp, #104]
    8434:	add	x23, x25, x19
    8438:	sub	x1, x27, x19
    843c:	mov	x3, x22
    8440:	mov	x2, x26
    8444:	mov	x0, x23
    8448:	mov	x4, x6
    844c:	bl	77e8 <ZSTD_getErrorString@@Base+0xc9c>
    8450:	mov	x19, x0
    8454:	cmn	x0, #0x78
    8458:	b.hi	8470 <ZSTD_getErrorString@@Base+0x1924>  // b.pmore
    845c:	cbz	x0, 831c <ZSTD_getErrorString@@Base+0x17d0>
    8460:	add	x19, x23, x0
    8464:	sub	x19, x19, x25
    8468:	cmn	x19, #0x78
    846c:	b.ls	8320 <ZSTD_getErrorString@@Base+0x17d4>  // b.plast
    8470:	mov	x0, x19
    8474:	ldp	x29, x30, [sp]
    8478:	ldp	x19, x20, [sp, #16]
    847c:	ldp	x21, x22, [sp, #32]
    8480:	ldp	x23, x24, [sp, #48]
    8484:	ldp	x25, x26, [sp, #64]
    8488:	ldp	x27, x28, [sp, #80]
    848c:	add	sp, sp, #0x310
    8490:	ret
    8494:	cmp	w20, #0x80
    8498:	b.hi	84fc <ZSTD_getErrorString@@Base+0x19b0>  // b.pmore
    849c:	add	w19, w20, #0x1
    84a0:	lsr	w19, w19, #1
    84a4:	add	w19, w19, #0x1
    84a8:	cmp	x19, x24
    84ac:	b.hi	8504 <ZSTD_getErrorString@@Base+0x19b8>  // b.pmore
    84b0:	add	x1, sp, #0x210
    84b4:	add	w0, w20, #0x7f
    84b8:	mov	w2, #0x0                   	// #0
    84bc:	strb	w0, [x21]
    84c0:	strb	wzr, [x1, w20, uxtw]
    84c4:	cmp	w2, w20
    84c8:	b.cs	8470 <ZSTD_getErrorString@@Base+0x1924>  // b.hs, b.nlast
    84cc:	ldrb	w0, [x1]
    84d0:	lsr	w3, w2, #1
    84d4:	add	w3, w3, #0x1
    84d8:	ldrb	w4, [x1, #1]
    84dc:	add	w2, w2, #0x2
    84e0:	add	x1, x1, #0x2
    84e4:	ubfiz	w0, w0, #4, #4
    84e8:	add	w0, w0, w4
    84ec:	strb	w0, [x21, x3]
    84f0:	b	84c4 <ZSTD_getErrorString@@Base+0x1978>
    84f4:	mov	x19, #0xffffffffffffffd2    	// #-46
    84f8:	b	8470 <ZSTD_getErrorString@@Base+0x1924>
    84fc:	mov	x19, #0xffffffffffffffff    	// #-1
    8500:	b	8470 <ZSTD_getErrorString@@Base+0x1924>
    8504:	mov	x19, #0xffffffffffffffba    	// #-70
    8508:	b	8470 <ZSTD_getErrorString@@Base+0x1924>
    850c:	mov	x19, x0
    8510:	b	8470 <ZSTD_getErrorString@@Base+0x1924>
    8514:	stp	x29, x30, [sp, #-448]!
    8518:	mov	x6, x3
    851c:	mov	x5, x2
    8520:	mov	x29, sp
    8524:	stp	x19, x20, [sp, #16]
    8528:	add	x20, sp, #0x80
    852c:	mov	x19, x0
    8530:	stp	x21, x22, [sp, #32]
    8534:	add	x22, sp, #0xc0
    8538:	mov	x21, x1
    853c:	add	x4, sp, #0x38
    8540:	add	x3, sp, #0x3c
    8544:	mov	x2, x20
    8548:	mov	x0, x22
    854c:	mov	x1, #0x100                 	// #256
    8550:	stp	wzr, wzr, [sp, #56]
    8554:	bl	4f64 <ZSTD_initDStream_usingDDict@plt+0x3e4>
    8558:	cmn	x0, #0x78
    855c:	b.hi	8604 <ZSTD_getErrorString@@Base+0x1ab8>  // b.pmore
    8560:	ldr	w6, [sp, #56]
    8564:	cmp	w6, #0xc
    8568:	b.hi	8690 <ZSTD_getErrorString@@Base+0x1b44>  // b.pmore
    856c:	ldr	w1, [x21]
    8570:	ldr	w4, [sp, #60]
    8574:	add	w1, w1, #0x1
    8578:	cmp	w1, w4
    857c:	b.cc	8698 <ZSTD_getErrorString@@Base+0x1b4c>  // b.lo, b.ul, b.last
    8580:	mov	x2, x20
    8584:	mov	w3, #0x0                   	// #0
    8588:	mov	w1, #0x0                   	// #0
    858c:	add	x2, x2, #0x4
    8590:	cmp	w6, w3
    8594:	b.ne	8614 <ZSTD_getErrorString@@Base+0x1ac8>  // b.any
    8598:	add	x5, x19, #0x2
    859c:	add	w6, w3, #0x1
    85a0:	mov	x2, #0x0                   	// #0
    85a4:	cmp	w4, w2
    85a8:	b.hi	862c <ZSTD_getErrorString@@Base+0x1ae0>  // b.pmore
    85ac:	mov	x2, x19
    85b0:	add	x8, x19, w4, uxtw #2
    85b4:	mov	x5, x19
    85b8:	add	x7, sp, #0x40
    85bc:	stp	xzr, xzr, [sp, #64]
    85c0:	str	xzr, [sp, #80]
    85c4:	str	wzr, [sp, #88]
    85c8:	stp	xzr, xzr, [sp, #96]
    85cc:	str	xzr, [sp, #112]
    85d0:	str	wzr, [sp, #120]
    85d4:	cmp	x5, x8
    85d8:	b.ne	8644 <ZSTD_getErrorString@@Base+0x1af8>  // b.any
    85dc:	ubfiz	x3, x3, #1, #32
    85e0:	add	x1, sp, #0x60
    85e4:	add	x7, sp, #0x40
    85e8:	mov	w6, #0x0                   	// #0
    85ec:	cbnz	x3, 8660 <ZSTD_getErrorString@@Base+0x1b14>
    85f0:	add	x1, sp, #0x60
    85f4:	cmp	x2, x5
    85f8:	b.ne	8678 <ZSTD_getErrorString@@Base+0x1b2c>  // b.any
    85fc:	sub	w4, w4, #0x1
    8600:	str	w4, [x21]
    8604:	ldp	x19, x20, [sp, #16]
    8608:	ldp	x21, x22, [sp, #32]
    860c:	ldp	x29, x30, [sp], #448
    8610:	ret
    8614:	ldr	w5, [x2]
    8618:	str	w1, [x2]
    861c:	lsl	w5, w5, w3
    8620:	add	w3, w3, #0x1
    8624:	add	w1, w5, w1
    8628:	b	858c <ZSTD_getErrorString@@Base+0x1a40>
    862c:	lsl	x7, x2, #2
    8630:	ldrb	w1, [x22, x2]
    8634:	add	x2, x2, #0x1
    8638:	sub	w1, w6, w1
    863c:	strb	w1, [x5, x7]
    8640:	b	85a4 <ZSTD_getErrorString@@Base+0x1a58>
    8644:	ldrb	w1, [x5, #2]
    8648:	add	x5, x5, #0x4
    864c:	lsl	x1, x1, #1
    8650:	ldrh	w6, [x7, x1]
    8654:	add	w6, w6, #0x1
    8658:	strh	w6, [x7, x1]
    865c:	b	85d4 <ZSTD_getErrorString@@Base+0x1a88>
    8660:	ldrh	w8, [x7, x3]
    8664:	strh	w6, [x3, x1]
    8668:	sub	x3, x3, #0x2
    866c:	add	w6, w6, w8
    8670:	ubfx	x6, x6, #1, #15
    8674:	b	85ec <ZSTD_getErrorString@@Base+0x1aa0>
    8678:	ldrb	w6, [x2, #2]
    867c:	ldrh	w3, [x1, x6, lsl #1]
    8680:	strh	w3, [x2], #4
    8684:	add	w7, w3, #0x1
    8688:	strh	w7, [x1, x6, lsl #1]
    868c:	b	85f4 <ZSTD_getErrorString@@Base+0x1aa8>
    8690:	mov	x0, #0xffffffffffffffd4    	// #-44
    8694:	b	8604 <ZSTD_getErrorString@@Base+0x1ab8>
    8698:	mov	x0, #0xffffffffffffffd0    	// #-48
    869c:	b	8604 <ZSTD_getErrorString@@Base+0x1ab8>
    86a0:	add	x1, x0, w1, uxtw #2
    86a4:	ldrb	w0, [x1, #2]
    86a8:	ret
    86ac:	stp	x29, x30, [sp, #-384]!
    86b0:	mov	x29, sp
    86b4:	stp	x19, x20, [sp, #16]
    86b8:	stp	x21, x22, [sp, #32]
    86bc:	stp	x23, x24, [sp, #48]
    86c0:	stp	x25, x26, [sp, #64]
    86c4:	stp	x27, x28, [sp, #80]
    86c8:	ands	x27, x4, #0x3
    86cc:	b.ne	8c64 <ZSTD_getErrorString@@Base+0x2118>  // b.any
    86d0:	cmp	x5, #0xfff
    86d4:	b.ls	8c6c <ZSTD_getErrorString@@Base+0x2120>  // b.plast
    86d8:	cmp	w3, #0x0
    86dc:	mov	x22, x0
    86e0:	mov	w25, w2
    86e4:	mov	w0, #0xb                   	// #11
    86e8:	csel	w21, w3, w0, ne  // ne = any
    86ec:	cmp	w2, #0xff
    86f0:	b.hi	8c74 <ZSTD_getErrorString@@Base+0x2128>  // b.pmore
    86f4:	mov	x20, x4
    86f8:	mov	x0, x4
    86fc:	mov	x2, #0x1000                	// #4096
    8700:	mov	x23, x1
    8704:	mov	w1, #0x0                   	// #0
    8708:	bl	4700 <memset@plt>
    870c:	add	x3, sp, #0x80
    8710:	mov	w1, #0x0                   	// #0
    8714:	mov	x0, x3
    8718:	mov	x2, #0x100                 	// #256
    871c:	bl	4700 <memset@plt>
    8720:	mov	x3, x0
    8724:	mov	x1, #0x0                   	// #0
    8728:	ldr	w0, [x23, x1, lsl #2]
    872c:	add	x1, x1, #0x1
    8730:	cmp	w25, w1
    8734:	add	w0, w0, #0x1
    8738:	clz	w0, w0
    873c:	eor	w0, w0, #0x1f
    8740:	ubfiz	x0, x0, #3, #6
    8744:	ldr	w2, [x3, x0]
    8748:	add	w2, w2, #0x1
    874c:	str	w2, [x3, x0]
    8750:	b.cs	8728 <ZSTD_getErrorString@@Base+0x1bdc>  // b.hs, b.nlast
    8754:	mov	x1, x3
    8758:	mov	x0, x3
    875c:	mov	w28, #0x1e                  	// #30
    8760:	ldr	w2, [x0, #232]
    8764:	subs	w28, w28, #0x1
    8768:	ldr	w4, [x0, #240]
    876c:	sub	x0, x0, #0x8
    8770:	add	w2, w2, w4
    8774:	str	w2, [x0, #240]
    8778:	b.ne	8760 <ZSTD_getErrorString@@Base+0x1c14>  // b.any
    877c:	mov	w0, #0x0                   	// #0
    8780:	ldr	w2, [x1]
    8784:	add	w0, w0, #0x1
    8788:	str	w2, [x1, #4]
    878c:	cmp	w0, #0x20
    8790:	add	x1, x1, #0x8
    8794:	b.ne	8780 <ZSTD_getErrorString@@Base+0x1c34>  // b.any
    8798:	add	x19, x20, #0x8
    879c:	add	x6, sp, #0x84
    87a0:	mov	x1, #0x0                   	// #0
    87a4:	ldr	w4, [x23, x1, lsl #2]
    87a8:	add	w0, w4, #0x1
    87ac:	clz	w0, w0
    87b0:	eor	w0, w0, #0x1f
    87b4:	add	w0, w0, #0x1
    87b8:	ubfiz	x0, x0, #3, #7
    87bc:	ldr	w2, [x6, x0]
    87c0:	add	w5, w2, #0x1
    87c4:	str	w5, [x6, x0]
    87c8:	ldr	w7, [x3, x0]
    87cc:	ubfiz	x8, x2, #3, #32
    87d0:	add	x5, x19, x8
    87d4:	cmp	w2, w7
    87d8:	b.ls	87f0 <ZSTD_getErrorString@@Base+0x1ca4>  // b.plast
    87dc:	sub	w2, w2, #0x1
    87e0:	ubfiz	x7, x2, #3, #32
    87e4:	ldr	w9, [x19, x7]
    87e8:	cmp	w4, w9
    87ec:	b.hi	8a00 <ZSTD_getErrorString@@Base+0x1eb4>  // b.pmore
    87f0:	str	w4, [x5]
    87f4:	strb	w1, [x5, #6]
    87f8:	add	x1, x1, #0x1
    87fc:	cmp	w25, w1
    8800:	b.cs	87a4 <ZSTD_getErrorString@@Base+0x1c58>  // b.hs, b.nlast
    8804:	mov	w23, w25
    8808:	ubfiz	x0, x23, #3, #32
    880c:	add	x5, x19, x0
    8810:	ldr	w0, [x19, x0]
    8814:	cbz	w0, 8a0c <ZSTD_getErrorString@@Base+0x1ec0>
    8818:	sbfiz	x0, x23, #3, #32
    881c:	add	x4, x20, w23, sxtw #3
    8820:	add	x2, x19, w23, sxtw #3
    8824:	add	w1, w23, #0xff
    8828:	sub	w7, w23, #0x2
    882c:	ldr	w6, [x19, x0]
    8830:	ldr	w0, [x20, x0]
    8834:	add	w0, w6, w0
    8838:	str	w0, [x20, #2056]
    883c:	mov	w6, #0x100                 	// #256
    8840:	strh	w6, [x4, #4]
    8844:	mov	w0, #0x101                 	// #257
    8848:	strh	w6, [x2, #4]
    884c:	mov	w2, #0x40000000            	// #1073741824
    8850:	cmp	w0, w1
    8854:	b.ls	8a14 <ZSTD_getErrorString@@Base+0x1ec8>  // b.plast
    8858:	mov	w0, #0x80000000            	// #-2147483648
    885c:	mov	w8, #0x100                 	// #256
    8860:	str	w0, [x20]
    8864:	mov	w0, #0x101                 	// #257
    8868:	cmp	w0, w1
    886c:	b.ls	8a24 <ZSTD_getErrorString@@Base+0x1ed8>  // b.plast
    8870:	add	x1, x19, w1, uxtw #3
    8874:	add	w0, w23, #0xfe
    8878:	add	x0, x20, x0, lsl #3
    887c:	strb	wzr, [x1, #7]
    8880:	add	w1, w23, #0xfe
    8884:	sub	x0, x0, #0x8
    8888:	cmp	w1, #0xff
    888c:	b.hi	8ab4 <ZSTD_getErrorString@@Base+0x1f68>  // b.pmore
    8890:	mov	w0, #0x0                   	// #0
    8894:	add	x2, x19, w0, uxtw #3
    8898:	add	w0, w0, #0x1
    889c:	cmp	w23, w0
    88a0:	ldrh	w1, [x2, #4]
    88a4:	add	x1, x19, x1, lsl #3
    88a8:	ldrb	w1, [x1, #7]
    88ac:	add	w1, w1, #0x1
    88b0:	strb	w1, [x2, #7]
    88b4:	b.cs	8894 <ZSTD_getErrorString@@Base+0x1d48>  // b.hs, b.nlast
    88b8:	ldrb	w1, [x5, #7]
    88bc:	cmp	w21, w1
    88c0:	b.cs	8948 <ZSTD_getErrorString@@Base+0x1dfc>  // b.hs, b.nlast
    88c4:	sub	w4, w1, w21
    88c8:	mov	w0, #0x1                   	// #1
    88cc:	mov	w26, w23
    88d0:	mov	w2, w0
    88d4:	lsl	w6, w0, w4
    88d8:	mov	w24, #0x0                   	// #0
    88dc:	add	x5, x19, w26, uxtw #3
    88e0:	ldrb	w0, [x5, #7]
    88e4:	cmp	w21, w0
    88e8:	b.cc	8ad0 <ZSTD_getErrorString@@Base+0x1f84>  // b.lo, b.ul, b.last
    88ec:	add	x0, x19, w26, uxtw #3
    88f0:	ldrb	w0, [x0, #7]
    88f4:	cmp	w21, w0
    88f8:	b.eq	8aec <ZSTD_getErrorString@@Base+0x1fa0>  // b.none
    88fc:	mov	x0, x3
    8900:	asr	w24, w24, w4
    8904:	mov	x2, #0x38                  	// #56
    8908:	mov	w1, #0xf0                  	// #240
    890c:	bl	4700 <memset@plt>
    8910:	mov	x3, x0
    8914:	mov	w2, w21
    8918:	sxtw	x0, w26
    891c:	add	x4, x20, #0xf
    8920:	tbz	w0, #31, 8af4 <ZSTD_getErrorString@@Base+0x1fa8>
    8924:	add	x2, sp, #0x80
    8928:	mov	w4, #0xf0f0f0f0            	// #-252645136
    892c:	mov	w7, #0x1                   	// #1
    8930:	cmp	w24, #0x0
    8934:	b.gt	8b18 <ZSTD_getErrorString@@Base+0x1fcc>
    8938:	ldr	w0, [sp, #132]
    893c:	mov	w4, #0xf0f0f0f0            	// #-252645136
    8940:	cbnz	w24, 8bf4 <ZSTD_getErrorString@@Base+0x20a8>
    8944:	mov	w1, w21
    8948:	stp	xzr, xzr, [sp, #96]
    894c:	cmp	w1, #0xc
    8950:	str	xzr, [sp, #112]
    8954:	strh	wzr, [sp, #120]
    8958:	stp	xzr, xzr, [sp, #128]
    895c:	str	xzr, [sp, #144]
    8960:	strh	wzr, [sp, #152]
    8964:	b.hi	8c64 <ZSTD_getErrorString@@Base+0x2118>  // b.pmore
    8968:	add	x5, x20, #0xf
    896c:	add	x4, sp, #0x60
    8970:	lsl	x0, x27, #3
    8974:	add	x27, x27, #0x1
    8978:	cmp	w23, w27
    897c:	ldrb	w0, [x5, x0]
    8980:	lsl	x0, x0, #1
    8984:	ldrh	w2, [x4, x0]
    8988:	add	w2, w2, #0x1
    898c:	strh	w2, [x4, x0]
    8990:	b.cs	8970 <ZSTD_getErrorString@@Base+0x1e24>  // b.hs, b.nlast
    8994:	mov	w0, w1
    8998:	ubfiz	x1, x1, #1, #32
    899c:	mov	w2, #0x0                   	// #0
    89a0:	cbnz	x1, 8c4c <ZSTD_getErrorString@@Base+0x2100>
    89a4:	add	x20, x20, #0xe
    89a8:	ldrb	w4, [x20, #1]
    89ac:	add	w1, w1, #0x1
    89b0:	ldrb	w2, [x20], #8
    89b4:	cmp	w25, w1
    89b8:	add	x2, x22, x2, lsl #2
    89bc:	strb	w4, [x2, #2]
    89c0:	b.cs	89a8 <ZSTD_getErrorString@@Base+0x1e5c>  // b.hs, b.nlast
    89c4:	ldrb	w2, [x22, #2]
    89c8:	add	w28, w28, #0x1
    89cc:	cmp	w25, w28
    89d0:	ldrh	w1, [x3, x2, lsl #1]
    89d4:	strh	w1, [x22], #4
    89d8:	add	w4, w1, #0x1
    89dc:	strh	w4, [x3, x2, lsl #1]
    89e0:	b.cs	89c4 <ZSTD_getErrorString@@Base+0x1e78>  // b.hs, b.nlast
    89e4:	ldp	x19, x20, [sp, #16]
    89e8:	ldp	x21, x22, [sp, #32]
    89ec:	ldp	x23, x24, [sp, #48]
    89f0:	ldp	x25, x26, [sp, #64]
    89f4:	ldp	x27, x28, [sp, #80]
    89f8:	ldp	x29, x30, [sp], #384
    89fc:	ret
    8a00:	ldr	x5, [x19, x7]
    8a04:	str	x5, [x19, x8]
    8a08:	b	87c8 <ZSTD_getErrorString@@Base+0x1c7c>
    8a0c:	sub	w23, w23, #0x1
    8a10:	b	8808 <ZSTD_getErrorString@@Base+0x1cbc>
    8a14:	ubfiz	x4, x0, #3, #32
    8a18:	add	w0, w0, #0x1
    8a1c:	str	w2, [x19, x4]
    8a20:	b	8850 <ZSTD_getErrorString@@Base+0x1d04>
    8a24:	sbfiz	x4, x7, #3, #32
    8a28:	sbfiz	x2, x8, #3, #32
    8a2c:	ldr	w4, [x19, x4]
    8a30:	ldr	w2, [x19, x2]
    8a34:	cmp	w4, w2
    8a38:	b.cs	8a9c <ZSTD_getErrorString@@Base+0x1f50>  // b.hs, b.nlast
    8a3c:	mov	w4, w7
    8a40:	sub	w7, w7, #0x1
    8a44:	sbfiz	x6, x7, #3, #32
    8a48:	sbfiz	x2, x8, #3, #32
    8a4c:	ldr	w6, [x19, x6]
    8a50:	ldr	w2, [x19, x2]
    8a54:	cmp	w6, w2
    8a58:	b.cs	8aa8 <ZSTD_getErrorString@@Base+0x1f5c>  // b.hs, b.nlast
    8a5c:	mov	w2, w7
    8a60:	sub	w7, w7, #0x1
    8a64:	ubfiz	x4, x4, #3, #32
    8a68:	ubfiz	x2, x2, #3, #32
    8a6c:	ubfiz	x10, x0, #3, #16
    8a70:	add	x6, x19, x4
    8a74:	add	x9, x19, x2
    8a78:	ldr	w4, [x19, x4]
    8a7c:	ldr	w2, [x19, x2]
    8a80:	add	w2, w4, w2
    8a84:	str	w2, [x19, x10]
    8a88:	strh	w0, [x9, #4]
    8a8c:	strh	w0, [x6, #4]
    8a90:	add	w0, w0, #0x1
    8a94:	and	w0, w0, #0xffff
    8a98:	b	8868 <ZSTD_getErrorString@@Base+0x1d1c>
    8a9c:	mov	w4, w8
    8aa0:	add	w8, w8, #0x1
    8aa4:	b	8a44 <ZSTD_getErrorString@@Base+0x1ef8>
    8aa8:	mov	w2, w8
    8aac:	add	w8, w8, #0x1
    8ab0:	b	8a64 <ZSTD_getErrorString@@Base+0x1f18>
    8ab4:	ldrh	w2, [x0, #20]
    8ab8:	sub	w1, w1, #0x1
    8abc:	add	x2, x19, x2, lsl #3
    8ac0:	ldrb	w2, [x2, #7]
    8ac4:	add	w2, w2, #0x1
    8ac8:	strb	w2, [x0, #23]
    8acc:	b	8884 <ZSTD_getErrorString@@Base+0x1d38>
    8ad0:	sub	w0, w1, w0
    8ad4:	add	w24, w24, w6
    8ad8:	sub	w26, w26, #0x1
    8adc:	strb	w21, [x5, #7]
    8ae0:	lsl	w0, w2, w0
    8ae4:	sub	w24, w24, w0
    8ae8:	b	88dc <ZSTD_getErrorString@@Base+0x1d90>
    8aec:	sub	w26, w26, #0x1
    8af0:	b	88ec <ZSTD_getErrorString@@Base+0x1da0>
    8af4:	lsl	x1, x0, #3
    8af8:	ldrb	w1, [x4, x1]
    8afc:	cmp	w1, w2
    8b00:	b.cs	8b10 <ZSTD_getErrorString@@Base+0x1fc4>  // b.hs, b.nlast
    8b04:	sub	w2, w21, w1
    8b08:	str	w0, [x3, x2, lsl #2]
    8b0c:	mov	w2, w1
    8b10:	sub	x0, x0, #0x1
    8b14:	b	8920 <ZSTD_getErrorString@@Base+0x1dd4>
    8b18:	clz	w1, w24
    8b1c:	eor	w1, w1, #0x1f
    8b20:	add	w1, w1, #0x1
    8b24:	ubfiz	x0, x1, #2, #7
    8b28:	add	x0, x3, x0
    8b2c:	cmp	w1, #0x1
    8b30:	b.ne	8b94 <ZSTD_getErrorString@@Base+0x2048>  // b.any
    8b34:	ldr	w6, [x2, x1, lsl #2]
    8b38:	mov	w5, w1
    8b3c:	cmp	w1, #0xc
    8b40:	b.hi	8b50 <ZSTD_getErrorString@@Base+0x2004>  // b.pmore
    8b44:	add	x1, x1, #0x1
    8b48:	cmp	w6, w4
    8b4c:	b.eq	8b34 <ZSTD_getErrorString@@Base+0x1fe8>  // b.none
    8b50:	sub	w0, w5, #0x1
    8b54:	lsl	w1, w7, w0
    8b58:	ubfiz	x0, x0, #2, #32
    8b5c:	sub	w24, w24, w1
    8b60:	ldr	w1, [x2, x0]
    8b64:	cmp	w1, w4
    8b68:	b.ne	8b70 <ZSTD_getErrorString@@Base+0x2024>  // b.any
    8b6c:	str	w6, [x2, x0]
    8b70:	ubfiz	x1, x5, #2, #32
    8b74:	ldr	w0, [x2, x1]
    8b78:	add	x8, x19, w0, uxtw #3
    8b7c:	ldrb	w6, [x8, #7]
    8b80:	add	w6, w6, #0x1
    8b84:	strb	w6, [x8, #7]
    8b88:	cbnz	w0, 8bd4 <ZSTD_getErrorString@@Base+0x2088>
    8b8c:	str	w4, [x2, x1]
    8b90:	b	8930 <ZSTD_getErrorString@@Base+0x1de4>
    8b94:	ldr	w5, [x0]
    8b98:	sub	w8, w1, #0x1
    8b9c:	cmp	w5, w4
    8ba0:	b.eq	8bc8 <ZSTD_getErrorString@@Base+0x207c>  // b.none
    8ba4:	ldr	w6, [x2, w8, uxtw #2]
    8ba8:	cmp	w6, w4
    8bac:	b.eq	8b34 <ZSTD_getErrorString@@Base+0x1fe8>  // b.none
    8bb0:	ubfiz	x5, x5, #3, #32
    8bb4:	ubfiz	x6, x6, #3, #32
    8bb8:	ldr	w5, [x19, x5]
    8bbc:	ldr	w6, [x19, x6]
    8bc0:	cmp	w5, w6, lsl #1
    8bc4:	b.ls	8b34 <ZSTD_getErrorString@@Base+0x1fe8>  // b.plast
    8bc8:	sub	x0, x0, #0x4
    8bcc:	mov	w1, w8
    8bd0:	b	8b2c <ZSTD_getErrorString@@Base+0x1fe0>
    8bd4:	sub	w0, w0, #0x1
    8bd8:	sub	w5, w21, w5
    8bdc:	add	x6, x19, w0, uxtw #3
    8be0:	ldrb	w6, [x6, #7]
    8be4:	cmp	w6, w5
    8be8:	csel	w0, w4, w0, ne  // ne = any
    8bec:	str	w0, [x2, x1]
    8bf0:	b	8930 <ZSTD_getErrorString@@Base+0x1de4>
    8bf4:	add	w24, w24, #0x1
    8bf8:	cmp	w0, w4
    8bfc:	b.ne	8c34 <ZSTD_getErrorString@@Base+0x20e8>  // b.any
    8c00:	add	x0, x19, w26, uxtw #3
    8c04:	ldrb	w0, [x0, #7]
    8c08:	cmp	w21, w0
    8c0c:	b.eq	8c2c <ZSTD_getErrorString@@Base+0x20e0>  // b.none
    8c10:	add	w1, w26, #0x1
    8c14:	add	w0, w26, #0x1
    8c18:	add	x1, x19, x1, lsl #3
    8c1c:	ldrb	w2, [x1, #7]
    8c20:	sub	w2, w2, #0x1
    8c24:	strb	w2, [x1, #7]
    8c28:	b	8940 <ZSTD_getErrorString@@Base+0x1df4>
    8c2c:	sub	w26, w26, #0x1
    8c30:	b	8c00 <ZSTD_getErrorString@@Base+0x20b4>
    8c34:	add	w0, w0, #0x1
    8c38:	add	x2, x19, w0, uxtw #3
    8c3c:	ldrb	w1, [x2, #7]
    8c40:	sub	w1, w1, #0x1
    8c44:	strb	w1, [x2, #7]
    8c48:	b	8940 <ZSTD_getErrorString@@Base+0x1df4>
    8c4c:	ldrh	w5, [x4, x1]
    8c50:	strh	w2, [x3, x1]
    8c54:	sub	x1, x1, #0x2
    8c58:	add	w2, w2, w5
    8c5c:	ubfx	x2, x2, #1, #15
    8c60:	b	89a0 <ZSTD_getErrorString@@Base+0x1e54>
    8c64:	mov	x0, #0xffffffffffffffff    	// #-1
    8c68:	b	89e4 <ZSTD_getErrorString@@Base+0x1e98>
    8c6c:	mov	x0, #0xffffffffffffffbe    	// #-66
    8c70:	b	89e4 <ZSTD_getErrorString@@Base+0x1e98>
    8c74:	mov	x0, #0xffffffffffffffd2    	// #-46
    8c78:	b	89e4 <ZSTD_getErrorString@@Base+0x1e98>
    8c7c:	stp	x29, x30, [sp, #-128]!
    8c80:	mov	x29, sp
    8c84:	stp	x19, x20, [sp, #16]
    8c88:	stp	x21, x22, [sp, #32]
    8c8c:	mov	x22, x0
    8c90:	ands	x0, x7, #0x3
    8c94:	stp	x23, x24, [sp, #48]
    8c98:	stp	x25, x26, [sp, #64]
    8c9c:	mov	w25, w5
    8ca0:	stp	x27, x28, [sp, #80]
    8ca4:	stp	x0, x1, [sp, #104]
    8ca8:	str	w4, [sp, #124]
    8cac:	ldp	x5, x26, [sp, #128]
    8cb0:	ldr	x23, [sp, #144]
    8cb4:	b.ne	8fa4 <ZSTD_getErrorString@@Base+0x2458>  // b.any
    8cb8:	mov	x0, #0x17ff                	// #6143
    8cbc:	cmp	x5, x0
    8cc0:	b.ls	8fac <ZSTD_getErrorString@@Base+0x2460>  // b.plast
    8cc4:	mov	x20, x3
    8cc8:	cbnz	x3, 8cf0 <ZSTD_getErrorString@@Base+0x21a4>
    8ccc:	mov	x19, #0x0                   	// #0
    8cd0:	mov	x0, x19
    8cd4:	ldp	x19, x20, [sp, #16]
    8cd8:	ldp	x21, x22, [sp, #32]
    8cdc:	ldp	x23, x24, [sp, #48]
    8ce0:	ldp	x25, x26, [sp, #64]
    8ce4:	ldp	x27, x28, [sp, #80]
    8ce8:	ldp	x29, x30, [sp], #128
    8cec:	ret
    8cf0:	ldr	x0, [sp, #112]
    8cf4:	cbz	x0, 8ccc <ZSTD_getErrorString@@Base+0x2180>
    8cf8:	cmp	x3, #0x20, lsl #12
    8cfc:	b.hi	8fb4 <ZSTD_getErrorString@@Base+0x2468>  // b.pmore
    8d00:	cmp	w25, #0xc
    8d04:	b.hi	8fbc <ZSTD_getErrorString@@Base+0x2470>  // b.pmore
    8d08:	cmp	w4, #0xff
    8d0c:	b.hi	8fc4 <ZSTD_getErrorString@@Base+0x2478>  // b.pmore
    8d10:	mov	x24, x2
    8d14:	mov	w27, w6
    8d18:	mov	x21, x7
    8d1c:	cbnz	w4, 8d28 <ZSTD_getErrorString@@Base+0x21dc>
    8d20:	mov	w0, #0xff                  	// #255
    8d24:	str	w0, [sp, #124]
    8d28:	cmp	w25, #0x0
    8d2c:	mov	w0, #0xb                   	// #11
    8d30:	csel	w25, w25, w0, ne  // ne = any
    8d34:	ldr	x0, [sp, #112]
    8d38:	add	x28, x22, x0
    8d3c:	ldr	w0, [sp, #152]
    8d40:	cmp	w0, #0x0
    8d44:	cset	w6, ne  // ne = any
    8d48:	cmp	x23, #0x0
    8d4c:	csel	w6, w6, wzr, ne  // ne = any
    8d50:	cbz	w6, 8d88 <ZSTD_getErrorString@@Base+0x223c>
    8d54:	ldr	w0, [x23]
    8d58:	cmp	w0, #0x2
    8d5c:	b.ne	8d88 <ZSTD_getErrorString@@Base+0x223c>  // b.any
    8d60:	mov	x6, x26
    8d64:	mov	w5, w27
    8d68:	mov	x4, x20
    8d6c:	mov	x3, x24
    8d70:	mov	x2, x28
    8d74:	mov	x1, x22
    8d78:	mov	x0, x22
    8d7c:	bl	8214 <ZSTD_getErrorString@@Base+0x16c8>
    8d80:	mov	x19, x0
    8d84:	b	8cd0 <ZSTD_getErrorString@@Base+0x2184>
    8d88:	mov	x4, x21
    8d8c:	mov	x3, x20
    8d90:	mov	x2, x24
    8d94:	add	x1, sp, #0x7c
    8d98:	mov	x0, x21
    8d9c:	str	w6, [sp, #120]
    8da0:	bl	7e64 <ZSTD_getErrorString@@Base+0x1318>
    8da4:	mov	x19, x0
    8da8:	cmn	x0, #0x78
    8dac:	b.hi	8cd0 <ZSTD_getErrorString@@Base+0x2184>  // b.pmore
    8db0:	ldr	w6, [sp, #120]
    8db4:	cmp	x20, x0
    8db8:	b.ne	8dcc <ZSTD_getErrorString@@Base+0x2280>  // b.any
    8dbc:	ldrb	w0, [x24]
    8dc0:	mov	x19, #0x1                   	// #1
    8dc4:	strb	w0, [x22]
    8dc8:	b	8cd0 <ZSTD_getErrorString@@Base+0x2184>
    8dcc:	lsr	x0, x20, #7
    8dd0:	add	x0, x0, #0x4
    8dd4:	cmp	x19, x0
    8dd8:	b.ls	8ccc <ZSTD_getErrorString@@Base+0x2180>  // b.plast
    8ddc:	cbz	x23, 8e0c <ZSTD_getErrorString@@Base+0x22c0>
    8de0:	ldr	w0, [x23]
    8de4:	cmp	w0, #0x1
    8de8:	b.ne	8f48 <ZSTD_getErrorString@@Base+0x23fc>  // b.any
    8dec:	ldr	w2, [sp, #124]
    8df0:	add	x3, x26, #0x2
    8df4:	mov	x0, #0x0                   	// #0
    8df8:	mov	w1, #0x0                   	// #0
    8dfc:	cmp	w2, w0
    8e00:	b.ge	8f24 <ZSTD_getErrorString@@Base+0x23d8>  // b.tcont
    8e04:	cbz	w1, 8fcc <ZSTD_getErrorString@@Base+0x2480>
    8e08:	str	wzr, [x23]
    8e0c:	ldr	w2, [sp, #124]
    8e10:	mov	x1, x20
    8e14:	mov	w0, w25
    8e18:	add	x25, x21, #0x400
    8e1c:	bl	829c <ZSTD_getErrorString@@Base+0x1750>
    8e20:	mov	w3, w0
    8e24:	ldr	w2, [sp, #124]
    8e28:	add	x4, x21, #0x800
    8e2c:	mov	x1, x21
    8e30:	mov	x0, x25
    8e34:	mov	x5, #0x1000                	// #4096
    8e38:	bl	86ac <ZSTD_getErrorString@@Base+0x1b60>
    8e3c:	mov	x19, x0
    8e40:	cmn	x0, #0x78
    8e44:	b.hi	8cd0 <ZSTD_getErrorString@@Base+0x2184>  // b.pmore
    8e48:	ldr	w3, [sp, #124]
    8e4c:	mov	x2, #0x100                 	// #256
    8e50:	mov	w1, #0x0                   	// #0
    8e54:	str	w3, [sp, #120]
    8e58:	add	w0, w3, #0x1
    8e5c:	sub	x2, x2, x0
    8e60:	add	x0, x25, x0, lsl #2
    8e64:	lsl	x2, x2, #2
    8e68:	bl	4700 <memset@plt>
    8e6c:	ldr	w3, [sp, #120]
    8e70:	mov	w4, w19
    8e74:	ldr	x1, [sp, #112]
    8e78:	mov	x2, x25
    8e7c:	mov	x0, x22
    8e80:	bl	82a4 <ZSTD_getErrorString@@Base+0x1758>
    8e84:	mov	x19, x0
    8e88:	cmn	x0, #0x78
    8e8c:	b.hi	8cd0 <ZSTD_getErrorString@@Base+0x2184>  // b.pmore
    8e90:	cbz	x23, 8f94 <ZSTD_getErrorString@@Base+0x2448>
    8e94:	ldr	w0, [x23]
    8e98:	cbz	w0, 8f94 <ZSTD_getErrorString@@Base+0x2448>
    8e9c:	ldr	w3, [sp, #124]
    8ea0:	add	x4, x26, #0x2
    8ea4:	mov	x1, #0x0                   	// #0
    8ea8:	mov	x0, #0x0                   	// #0
    8eac:	cmp	w3, w1
    8eb0:	b.ge	8f54 <ZSTD_getErrorString@@Base+0x2408>  // b.tcont
    8eb4:	lsr	x0, x0, #3
    8eb8:	add	x4, x21, #0x402
    8ebc:	mov	x1, #0x0                   	// #0
    8ec0:	cmp	w3, w1
    8ec4:	b.ge	8f70 <ZSTD_getErrorString@@Base+0x2424>  // b.tcont
    8ec8:	ldr	x1, [sp, #104]
    8ecc:	add	x1, x19, x1, lsr #3
    8ed0:	cmp	x1, x0
    8ed4:	b.cs	8d60 <ZSTD_getErrorString@@Base+0x2214>  // b.hs, b.nlast
    8ed8:	add	x0, x19, #0xc
    8edc:	cmp	x20, x0
    8ee0:	b.ls	8d60 <ZSTD_getErrorString@@Base+0x2214>  // b.plast
    8ee4:	add	x19, x22, x19
    8ee8:	cbz	x23, 8ef0 <ZSTD_getErrorString@@Base+0x23a4>
    8eec:	str	wzr, [x23]
    8ef0:	cbz	x26, 8f04 <ZSTD_getErrorString@@Base+0x23b8>
    8ef4:	mov	x1, x25
    8ef8:	mov	x0, x26
    8efc:	mov	x2, #0x400                 	// #1024
    8f00:	bl	4460 <memcpy@plt>
    8f04:	mov	x6, x25
    8f08:	mov	w5, w27
    8f0c:	mov	x4, x20
    8f10:	mov	x3, x24
    8f14:	mov	x2, x28
    8f18:	mov	x1, x19
    8f1c:	mov	x0, x22
    8f20:	b	8d7c <ZSTD_getErrorString@@Base+0x2230>
    8f24:	lsl	x4, x0, #2
    8f28:	ldrb	w5, [x3, x4]
    8f2c:	ldr	w4, [x21, x0, lsl #2]
    8f30:	add	x0, x0, #0x1
    8f34:	cmp	w5, #0x0
    8f38:	ccmp	w4, #0x0, #0x4, eq  // eq = none
    8f3c:	cset	w4, ne  // ne = any
    8f40:	orr	w1, w1, w4
    8f44:	b	8dfc <ZSTD_getErrorString@@Base+0x22b0>
    8f48:	cbz	w6, 8e0c <ZSTD_getErrorString@@Base+0x22c0>
    8f4c:	cbz	w0, 8e0c <ZSTD_getErrorString@@Base+0x22c0>
    8f50:	b	8d60 <ZSTD_getErrorString@@Base+0x2214>
    8f54:	lsl	x2, x1, #2
    8f58:	ldr	w5, [x21, x1, lsl #2]
    8f5c:	add	x1, x1, #0x1
    8f60:	ldrb	w2, [x4, x2]
    8f64:	mul	w2, w2, w5
    8f68:	add	x0, x0, x2
    8f6c:	b	8eac <ZSTD_getErrorString@@Base+0x2360>
    8f70:	lsl	x2, x1, #2
    8f74:	ldr	w5, [x21, x1, lsl #2]
    8f78:	add	x1, x1, #0x1
    8f7c:	ldrb	w2, [x4, x2]
    8f80:	mul	w2, w2, w5
    8f84:	ldr	x5, [sp, #104]
    8f88:	add	x2, x5, x2
    8f8c:	str	x2, [sp, #104]
    8f90:	b	8ec0 <ZSTD_getErrorString@@Base+0x2374>
    8f94:	add	x0, x19, #0xc
    8f98:	cmp	x20, x0
    8f9c:	b.hi	8ee4 <ZSTD_getErrorString@@Base+0x2398>  // b.pmore
    8fa0:	b	8ccc <ZSTD_getErrorString@@Base+0x2180>
    8fa4:	mov	x19, #0xffffffffffffffff    	// #-1
    8fa8:	b	8cd0 <ZSTD_getErrorString@@Base+0x2184>
    8fac:	mov	x19, #0xffffffffffffffbe    	// #-66
    8fb0:	b	8cd0 <ZSTD_getErrorString@@Base+0x2184>
    8fb4:	mov	x19, #0xffffffffffffffb8    	// #-72
    8fb8:	b	8cd0 <ZSTD_getErrorString@@Base+0x2184>
    8fbc:	mov	x19, #0xffffffffffffffd4    	// #-44
    8fc0:	b	8cd0 <ZSTD_getErrorString@@Base+0x2184>
    8fc4:	mov	x19, #0xffffffffffffffd2    	// #-46
    8fc8:	b	8cd0 <ZSTD_getErrorString@@Base+0x2184>
    8fcc:	cbnz	w6, 8d60 <ZSTD_getErrorString@@Base+0x2214>
    8fd0:	b	8e0c <ZSTD_getErrorString@@Base+0x22c0>
    8fd4:	mov	x12, #0x1010                	// #4112
    8fd8:	sub	sp, sp, x12
    8fdc:	add	x4, sp, #0x10
    8fe0:	mov	x5, #0x1000                	// #4096
    8fe4:	stp	x29, x30, [sp]
    8fe8:	mov	x29, sp
    8fec:	bl	86ac <ZSTD_getErrorString@@Base+0x1b60>
    8ff0:	mov	x12, #0x1010                	// #4112
    8ff4:	ldp	x29, x30, [sp]
    8ff8:	add	sp, sp, x12
    8ffc:	ret
    9000:	add	x1, x0, #0x89
    9004:	add	x0, x1, x0, lsr #8
    9008:	ret
    900c:	cmp	x1, #0x7
    9010:	b.ls	9018 <ZSTD_getErrorString@@Base+0x24cc>  // b.plast
    9014:	b	7f14 <ZSTD_getErrorString@@Base+0x13c8>
    9018:	mov	x0, #0x0                   	// #0
    901c:	ret
    9020:	b	80d4 <ZSTD_getErrorString@@Base+0x1588>
    9024:	sub	sp, sp, #0x30
    9028:	stp	x29, x30, [sp, #32]
    902c:	add	x29, sp, #0x20
    9030:	stp	x7, xzr, [sp]
    9034:	mov	x7, x6
    9038:	mov	w6, #0x0                   	// #0
    903c:	str	xzr, [sp, #16]
    9040:	str	wzr, [sp, #24]
    9044:	bl	8c7c <ZSTD_getErrorString@@Base+0x2130>
    9048:	ldp	x29, x30, [sp, #32]
    904c:	add	sp, sp, #0x30
    9050:	ret
    9054:	ldr	w8, [sp, #16]
    9058:	str	w8, [sp, #24]
    905c:	ldr	x8, [sp, #8]
    9060:	str	x8, [sp, #16]
    9064:	ldr	x8, [sp]
    9068:	stp	x7, x8, [sp]
    906c:	mov	x7, x6
    9070:	mov	w6, #0x0                   	// #0
    9074:	b	8c7c <ZSTD_getErrorString@@Base+0x2130>
    9078:	mov	x12, #0x1810                	// #6160
    907c:	sub	sp, sp, x12
    9080:	add	x6, sp, #0x10
    9084:	mov	x7, #0x1800                	// #6144
    9088:	stp	x29, x30, [sp]
    908c:	mov	x29, sp
    9090:	bl	9024 <ZSTD_getErrorString@@Base+0x24d8>
    9094:	mov	x12, #0x1810                	// #6160
    9098:	ldp	x29, x30, [sp]
    909c:	add	sp, sp, x12
    90a0:	ret
    90a4:	sub	sp, sp, #0x30
    90a8:	stp	x29, x30, [sp, #32]
    90ac:	add	x29, sp, #0x20
    90b0:	stp	x7, xzr, [sp]
    90b4:	mov	x7, x6
    90b8:	mov	w6, #0x1                   	// #1
    90bc:	str	xzr, [sp, #16]
    90c0:	str	wzr, [sp, #24]
    90c4:	bl	8c7c <ZSTD_getErrorString@@Base+0x2130>
    90c8:	ldp	x29, x30, [sp, #32]
    90cc:	add	sp, sp, #0x30
    90d0:	ret
    90d4:	ldr	w8, [sp, #16]
    90d8:	str	w8, [sp, #24]
    90dc:	ldr	x8, [sp, #8]
    90e0:	str	x8, [sp, #16]
    90e4:	ldr	x8, [sp]
    90e8:	stp	x7, x8, [sp]
    90ec:	mov	x7, x6
    90f0:	mov	w6, #0x1                   	// #1
    90f4:	b	8c7c <ZSTD_getErrorString@@Base+0x2130>
    90f8:	mov	x12, #0x1810                	// #6160
    90fc:	sub	sp, sp, x12
    9100:	add	x6, sp, #0x10
    9104:	mov	x7, #0x1800                	// #6144
    9108:	stp	x29, x30, [sp]
    910c:	mov	x29, sp
    9110:	bl	90a4 <ZSTD_getErrorString@@Base+0x2558>
    9114:	mov	x12, #0x1810                	// #6160
    9118:	ldp	x29, x30, [sp]
    911c:	add	sp, sp, x12
    9120:	ret
    9124:	mov	w5, #0xb                   	// #11
    9128:	mov	w4, #0xff                  	// #255
    912c:	b	90f8 <ZSTD_getErrorString@@Base+0x25ac>
    9130:	ldr	w2, [x0, #56]
    9134:	cmp	w2, w1
    9138:	b.cs	916c <ZSTD_getErrorString@@Base+0x2620>  // b.hs, b.nlast
    913c:	cbnz	w2, 9148 <ZSTD_getErrorString@@Base+0x25fc>
    9140:	ldr	x2, [x0, #16]
    9144:	str	x2, [x0, #32]
    9148:	cmp	w1, #0x2
    914c:	b.ne	9168 <ZSTD_getErrorString@@Base+0x261c>  // b.any
    9150:	ldp	x3, x2, [x0, #32]
    9154:	and	x2, x2, #0xfffffffffffffffc
    9158:	str	x2, [x0, #40]
    915c:	cmp	x2, x3
    9160:	b.cs	9168 <ZSTD_getErrorString@@Base+0x261c>  // b.hs, b.nlast
    9164:	str	x2, [x0, #32]
    9168:	str	w1, [x0, #56]
    916c:	ret
    9170:	stp	x29, x30, [sp, #-16]!
    9174:	mov	x4, x0
    9178:	mov	x5, x1
    917c:	mov	x29, sp
    9180:	ldr	x6, [x0, #24]
    9184:	mov	w1, #0x2                   	// #2
    9188:	bl	9130 <ZSTD_getErrorString@@Base+0x25e4>
    918c:	add	x0, x5, #0x3
    9190:	ldr	x1, [x4, #40]
    9194:	and	x0, x0, #0xfffffffffffffffc
    9198:	sub	x0, x1, x0
    919c:	cmp	x6, x0
    91a0:	b.ls	91b8 <ZSTD_getErrorString@@Base+0x266c>  // b.plast
    91a4:	mov	w0, #0x1                   	// #1
    91a8:	str	w0, [x4, #48]
    91ac:	mov	x0, #0x0                   	// #0
    91b0:	ldp	x29, x30, [sp], #16
    91b4:	ret
    91b8:	ldr	x1, [x4, #32]
    91bc:	cmp	x0, x1
    91c0:	b.cs	91c8 <ZSTD_getErrorString@@Base+0x267c>  // b.hs, b.nlast
    91c4:	str	x0, [x4, #32]
    91c8:	str	x0, [x4, #40]
    91cc:	b	91b0 <ZSTD_getErrorString@@Base+0x2664>
    91d0:	ldr	w3, [x0, #56]
    91d4:	mov	x2, x0
    91d8:	ldr	x0, [x0, #16]
    91dc:	add	x1, x1, #0x7
    91e0:	and	x1, x1, #0xfffffffffffffff8
    91e4:	add	x1, x0, x1
    91e8:	cbnz	w3, 91f8 <ZSTD_getErrorString@@Base+0x26ac>
    91ec:	ldr	x3, [x2, #8]
    91f0:	cmp	x3, x1
    91f4:	b.cs	9208 <ZSTD_getErrorString@@Base+0x26bc>  // b.hs, b.nlast
    91f8:	mov	w0, #0x1                   	// #1
    91fc:	str	w0, [x2, #48]
    9200:	mov	x0, #0x0                   	// #0
    9204:	ret
    9208:	stp	x1, x1, [x2, #16]
    920c:	str	x1, [x2, #32]
    9210:	b	9204 <ZSTD_getErrorString@@Base+0x26b8>
    9214:	mov	x3, x0
    9218:	ldr	x0, [x0]
    921c:	cmp	x0, x1
    9220:	b.eq	9258 <ZSTD_getErrorString@@Base+0x270c>  // b.none
    9224:	ldr	x5, [x3, #8]
    9228:	str	x5, [x3, #16]
    922c:	ldr	w4, [x3, #24]
    9230:	sub	x0, x0, x5
    9234:	stp	w0, w4, [x3, #24]
    9238:	sub	x5, x1, x0
    923c:	str	x5, [x3, #8]
    9240:	sub	w4, w0, w4
    9244:	cmp	w4, #0x7
    9248:	b.hi	9250 <ZSTD_getErrorString@@Base+0x2704>  // b.pmore
    924c:	str	w0, [x3, #28]
    9250:	mov	w0, #0x0                   	// #0
    9254:	b	925c <ZSTD_getErrorString@@Base+0x2710>
    9258:	mov	w0, #0x1                   	// #1
    925c:	ldp	w4, w6, [x3, #24]
    9260:	add	x2, x1, x2
    9264:	ldr	x5, [x3, #16]
    9268:	str	x2, [x3]
    926c:	mov	w7, w4
    9270:	add	x6, x5, x6
    9274:	add	x8, x5, w4, uxtw
    9278:	cmp	x2, x6
    927c:	ccmp	x8, x1, #0x0, hi  // hi = pmore
    9280:	b.ls	9294 <ZSTD_getErrorString@@Base+0x2748>  // b.plast
    9284:	sub	x2, x2, x5
    9288:	cmp	x7, x2
    928c:	csel	w4, w4, w2, lt  // lt = tstop
    9290:	str	w4, [x3, #28]
    9294:	ret
    9298:	stp	x29, x30, [sp, #-32]!
    929c:	mov	x2, #0x90                  	// #144
    92a0:	mov	x29, sp
    92a4:	str	x19, [sp, #16]
    92a8:	mov	x19, x1
    92ac:	mov	x1, x0
    92b0:	mov	x0, x8
    92b4:	bl	4460 <memcpy@plt>
    92b8:	mov	x8, x0
    92bc:	add	x0, x0, #0x4
    92c0:	ldp	x2, x3, [x19]
    92c4:	stp	x2, x3, [x0]
    92c8:	ldur	x0, [x19, #28]
    92cc:	str	x0, [x8, #32]
    92d0:	ldr	w0, [x19, #36]
    92d4:	ldr	x1, [x19, #16]
    92d8:	stur	x1, [x8, #20]
    92dc:	ldr	w1, [x19, #24]
    92e0:	ldr	x19, [sp, #16]
    92e4:	str	w1, [x8, #28]
    92e8:	str	w0, [x8, #40]
    92ec:	mov	w0, #0x3                   	// #3
    92f0:	str	w0, [x8, #44]
    92f4:	ldp	x29, x30, [sp], #32
    92f8:	ret
    92fc:	ldr	w5, [x0, #24]
    9300:	cmp	w5, #0x1
    9304:	b.eq	9370 <ZSTD_getErrorString@@Base+0x2824>  // b.none
    9308:	ldr	w3, [x0, #4]
    930c:	mov	x2, #0x1                   	// #1
    9310:	lsl	x2, x2, x3
    9314:	ldr	w4, [x0, #8]
    9318:	mov	x3, #0x1                   	// #1
    931c:	lsl	x4, x3, x4
    9320:	cbz	w1, 9378 <ZSTD_getErrorString@@Base+0x282c>
    9324:	ldr	w6, [x0, #16]
    9328:	cmp	w6, #0x3
    932c:	b.ne	9378 <ZSTD_getErrorString@@Base+0x282c>  // b.any
    9330:	ldr	w0, [x0]
    9334:	cbz	w0, 9378 <ZSTD_getErrorString@@Base+0x282c>
    9338:	cmp	w0, #0x11
    933c:	mov	w6, #0x11                  	// #17
    9340:	csel	w0, w0, w6, ls  // ls = plast
    9344:	lsl	x0, x3, x0
    9348:	add	x2, x2, x4
    934c:	add	x2, x2, x0
    9350:	lsl	x2, x2, #2
    9354:	cbz	w1, 9380 <ZSTD_getErrorString@@Base+0x2834>
    9358:	cmp	w5, #0x7
    935c:	mov	x0, #0x4608                	// #17928
    9360:	movk	x0, #0x2, lsl #16
    9364:	csel	x0, xzr, x0, cc  // cc = lo, ul, last
    9368:	add	x0, x0, x2
    936c:	ret
    9370:	mov	x2, #0x0                   	// #0
    9374:	b	9314 <ZSTD_getErrorString@@Base+0x27c8>
    9378:	mov	x0, #0x0                   	// #0
    937c:	b	9348 <ZSTD_getErrorString@@Base+0x27fc>
    9380:	mov	x0, #0x0                   	// #0
    9384:	b	9368 <ZSTD_getErrorString@@Base+0x281c>
    9388:	mov	x1, #0x100000000           	// #4294967296
    938c:	str	x1, [x0, #4576]
    9390:	mov	x1, #0x4                   	// #4
    9394:	str	wzr, [x0, #1024]
    9398:	movk	x1, #0x8, lsl #32
    939c:	str	xzr, [x0, #4568]
    93a0:	str	x1, [x0, #4584]
    93a4:	ret
    93a8:	mov	w3, #0x10                  	// #16
    93ac:	mov	x4, #0x10                  	// #16
    93b0:	mov	w5, #0x0                   	// #0
    93b4:	sdiv	w1, w1, w3
    93b8:	cmp	w1, w5
    93bc:	b.gt	93c4 <ZSTD_getErrorString@@Base+0x2878>
    93c0:	ret
    93c4:	sub	x3, x4, #0x10
    93c8:	ldr	w7, [x0, x3, lsl #2]
    93cc:	cmp	w2, w7
    93d0:	sub	w6, w7, w2
    93d4:	csel	w6, w6, wzr, ls  // ls = plast
    93d8:	str	w6, [x0, x3, lsl #2]
    93dc:	add	x3, x3, #0x1
    93e0:	cmp	x3, x4
    93e4:	b.ne	93c8 <ZSTD_getErrorString@@Base+0x287c>  // b.any
    93e8:	add	w5, w5, #0x1
    93ec:	add	x4, x4, #0x10
    93f0:	b	93b8 <ZSTD_getErrorString@@Base+0x286c>
    93f4:	mov	x5, x0
    93f8:	ldr	w0, [x2, #40]
    93fc:	cbnz	w0, 94fc <ZSTD_getErrorString@@Base+0x29b0>
    9400:	cmp	w4, #0x0
    9404:	mov	w0, #0xffff                	// #65535
    9408:	cset	w7, ne  // ne = any
    940c:	cmp	w4, #0xff
    9410:	cinc	w7, w7, hi  // hi = pmore
    9414:	cmp	w4, w0
    9418:	cinc	w7, w7, hi  // hi = pmore
    941c:	ldp	w10, w0, [x2, #32]
    9420:	ldr	w9, [x2, #4]
    9424:	cmp	w0, #0x0
    9428:	cset	w0, gt
    942c:	cbz	w10, 9504 <ZSTD_getErrorString@@Base+0x29b8>
    9430:	mov	w6, #0x1                   	// #1
    9434:	mov	x8, #0xff                  	// #255
    9438:	lsl	w6, w6, w9
    943c:	cmp	x6, x3
    9440:	cset	w10, cs  // cs = hs, nlast
    9444:	cmp	x3, #0xff
    9448:	cset	w6, hi  // hi = pmore
    944c:	movk	x8, #0x1, lsl #16
    9450:	cmp	x3, x8
    9454:	mov	x8, #0xfffffffe            	// #4294967294
    9458:	cinc	w6, w6, hi  // hi = pmore
    945c:	cmp	x3, x8
    9460:	cinc	w6, w6, hi  // hi = pmore
    9464:	lsl	w8, w6, #6
    9468:	add	w0, w7, w0, lsl #2
    946c:	add	w8, w8, w10, lsl #5
    9470:	cmp	x1, #0x11
    9474:	add	w8, w8, w0
    9478:	and	w8, w8, #0xff
    947c:	b.ls	9554 <ZSTD_getErrorString@@Base+0x2a08>  // b.plast
    9480:	ldr	w0, [x2]
    9484:	cbnz	w0, 950c <ZSTD_getErrorString@@Base+0x29c0>
    9488:	mov	w0, #0xb528                	// #46376
    948c:	mov	x1, #0x4                   	// #4
    9490:	movk	w0, #0xfd2f, lsl #16
    9494:	str	w0, [x5]
    9498:	strb	w8, [x5, x1]
    949c:	add	x0, x1, #0x1
    94a0:	cbnz	w10, 94b4 <ZSTD_getErrorString@@Base+0x2968>
    94a4:	sub	w9, w9, #0xa
    94a8:	ubfiz	w9, w9, #3, #5
    94ac:	strb	w9, [x5, x0]
    94b0:	add	x0, x1, #0x2
    94b4:	cmp	w7, #0x2
    94b8:	b.eq	9514 <ZSTD_getErrorString@@Base+0x29c8>  // b.none
    94bc:	cmp	w7, #0x3
    94c0:	b.eq	9520 <ZSTD_getErrorString@@Base+0x29d4>  // b.none
    94c4:	cmp	w7, #0x1
    94c8:	b.ne	94d4 <ZSTD_getErrorString@@Base+0x2988>  // b.any
    94cc:	strb	w4, [x5, x0]
    94d0:	add	x0, x0, #0x1
    94d4:	cmp	w6, #0x2
    94d8:	b.eq	953c <ZSTD_getErrorString@@Base+0x29f0>  // b.none
    94dc:	cmp	w6, #0x3
    94e0:	b.eq	9548 <ZSTD_getErrorString@@Base+0x29fc>  // b.none
    94e4:	cmp	w6, #0x1
    94e8:	b.eq	952c <ZSTD_getErrorString@@Base+0x29e0>  // b.none
    94ec:	cbz	w10, 94f8 <ZSTD_getErrorString@@Base+0x29ac>
    94f0:	strb	w3, [x5, x0]
    94f4:	add	x0, x0, #0x1
    94f8:	ret
    94fc:	mov	w7, #0x0                   	// #0
    9500:	b	941c <ZSTD_getErrorString@@Base+0x28d0>
    9504:	mov	w6, #0x0                   	// #0
    9508:	b	9464 <ZSTD_getErrorString@@Base+0x2918>
    950c:	mov	x1, #0x0                   	// #0
    9510:	b	9498 <ZSTD_getErrorString@@Base+0x294c>
    9514:	strh	w4, [x5, x0]
    9518:	add	x0, x0, #0x2
    951c:	b	94d4 <ZSTD_getErrorString@@Base+0x2988>
    9520:	str	w4, [x5, x0]
    9524:	add	x0, x0, #0x4
    9528:	b	94d4 <ZSTD_getErrorString@@Base+0x2988>
    952c:	sub	w3, w3, #0x100
    9530:	strh	w3, [x5, x0]
    9534:	add	x0, x0, #0x2
    9538:	b	94f8 <ZSTD_getErrorString@@Base+0x29ac>
    953c:	str	w3, [x5, x0]
    9540:	add	x0, x0, #0x4
    9544:	b	94f8 <ZSTD_getErrorString@@Base+0x29ac>
    9548:	str	x3, [x5, x0]
    954c:	add	x0, x0, #0x8
    9550:	b	94f8 <ZSTD_getErrorString@@Base+0x29ac>
    9554:	mov	x0, #0xffffffffffffffba    	// #-70
    9558:	b	94f8 <ZSTD_getErrorString@@Base+0x29ac>
    955c:	stp	x29, x30, [sp, #-192]!
    9560:	mov	w1, #0x0                   	// #0
    9564:	add	x3, sp, #0x30
    9568:	mov	x29, sp
    956c:	stp	x19, x20, [sp, #16]
    9570:	mov	x19, x0
    9574:	mov	x20, x8
    9578:	mov	x0, x3
    957c:	str	x21, [sp, #32]
    9580:	mov	x21, #0x90                  	// #144
    9584:	mov	x2, x21
    9588:	bl	4700 <memset@plt>
    958c:	mov	x3, x0
    9590:	add	x2, sp, #0x4
    9594:	ldp	x0, x1, [x19]
    9598:	stp	x0, x1, [x2, #48]
    959c:	mov	x2, x21
    95a0:	mov	x1, x3
    95a4:	ldr	x0, [x19, #16]
    95a8:	stur	x0, [sp, #68]
    95ac:	ldr	w0, [x19, #24]
    95b0:	str	w0, [sp, #76]
    95b4:	mov	w0, #0x3                   	// #3
    95b8:	str	w0, [sp, #92]
    95bc:	mov	w0, #0x1                   	// #1
    95c0:	str	w0, [sp, #80]
    95c4:	mov	x0, x20
    95c8:	bl	4460 <memcpy@plt>
    95cc:	ldp	x19, x20, [sp, #16]
    95d0:	ldr	x21, [sp, #32]
    95d4:	ldp	x29, x30, [sp], #192
    95d8:	ret
    95dc:	stp	x29, x30, [sp, #-48]!
    95e0:	mov	x2, x0
    95e4:	mov	x29, sp
    95e8:	stp	xzr, xzr, [x0, #16]
    95ec:	stp	xzr, xzr, [x0, #32]
    95f0:	stp	xzr, xzr, [x0, #48]
    95f4:	ldr	x0, [x0]
    95f8:	stp	xzr, xzr, [x2]
    95fc:	ldp	x2, x3, [x1]
    9600:	stp	x2, x3, [sp, #16]
    9604:	ldr	x1, [x1, #16]
    9608:	str	x1, [sp, #32]
    960c:	add	x1, sp, #0x10
    9610:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
    9614:	ldp	x29, x30, [sp], #48
    9618:	ret
    961c:	ldp	w3, w4, [x0]
    9620:	ldr	w5, [x0, #8]
    9624:	cbz	x2, 96c4 <ZSTD_getErrorString@@Base+0x2b78>
    9628:	add	x6, x1, #0x1
    962c:	cmp	x6, #0x1
    9630:	mov	x6, #0x201                 	// #513
    9634:	csel	x1, x1, x6, hi  // hi = pmore
    9638:	mov	x6, #0x3fffffff            	// #1073741823
    963c:	cmp	x1, x6
    9640:	ccmp	x2, x6, #0x2, ls  // ls = plast
    9644:	b.hi	966c <ZSTD_getErrorString@@Base+0x2b20>  // b.pmore
    9648:	add	w1, w1, w2
    964c:	sub	w2, w1, #0x1
    9650:	cmp	w1, #0x3f
    9654:	clz	w2, w2
    9658:	mov	w1, #0x6                   	// #6
    965c:	eor	w2, w2, #0x1f
    9660:	csinc	w1, w1, w2, ls  // ls = plast
    9664:	cmp	w3, w1
    9668:	csel	w3, w3, w1, ls  // ls = plast
    966c:	ldr	w2, [x0, #24]
    9670:	add	w1, w3, #0x1
    9674:	cmp	w1, w5
    9678:	csel	w1, w1, w5, ls  // ls = plast
    967c:	cmp	w2, #0x5
    9680:	cset	w2, hi  // hi = pmore
    9684:	sub	w5, w4, w2
    9688:	cmp	w3, w5
    968c:	b.cs	9694 <ZSTD_getErrorString@@Base+0x2b48>  // b.hs, b.nlast
    9690:	add	w4, w3, w2
    9694:	cmp	w3, #0xa
    9698:	mov	w2, #0xa                   	// #10
    969c:	csel	w3, w3, w2, cs  // cs = hs, nlast
    96a0:	stp	w3, w4, [x0]
    96a4:	str	w1, [x0, #8]
    96a8:	ldr	x1, [x0, #16]
    96ac:	str	x1, [x8, #16]
    96b0:	ldp	x2, x3, [x0]
    96b4:	stp	x2, x3, [x8]
    96b8:	ldr	w0, [x0, #24]
    96bc:	str	w0, [x8, #24]
    96c0:	ret
    96c4:	cmp	x1, #0x0
    96c8:	csinv	x1, x1, xzr, ne  // ne = any
    96cc:	b	9638 <ZSTD_getErrorString@@Base+0x2aec>
    96d0:	cmp	w1, w2
    96d4:	b.cc	96f8 <ZSTD_getErrorString@@Base+0x2bac>  // b.lo, b.ul, b.last
    96d8:	mov	x1, #0x0                   	// #0
    96dc:	ldrsh	w3, [x0, x1, lsl #1]
    96e0:	cbz	w3, 96f8 <ZSTD_getErrorString@@Base+0x2bac>
    96e4:	add	x1, x1, #0x1
    96e8:	cmp	w2, w1
    96ec:	b.cs	96dc <ZSTD_getErrorString@@Base+0x2b90>  // b.hs, b.nlast
    96f0:	mov	x0, #0x0                   	// #0
    96f4:	ret
    96f8:	mov	x0, #0xffffffffffffffe2    	// #-30
    96fc:	b	96f4 <ZSTD_getErrorString@@Base+0x2ba8>
    9700:	stp	x29, x30, [sp, #-16]!
    9704:	mov	x12, x1
    9708:	mov	x8, x0
    970c:	mov	x29, sp
    9710:	ldr	w1, [x2, #28]
    9714:	mov	w10, #0x1                   	// #1
    9718:	ldr	w9, [x2, #8]
    971c:	mov	x11, x2
    9720:	cmp	w1, #0x5
    9724:	cset	w1, hi  // hi = pmore
    9728:	sub	w1, w9, w1
    972c:	mov	w9, #0xffffffff            	// #-1
    9730:	ldr	x0, [x0, #8]
    9734:	lsl	w9, w9, w1
    9738:	ldr	w1, [x2, #4]
    973c:	sub	x3, x3, x0
    9740:	bic	w9, w3, w9
    9744:	lsl	w1, w10, w1
    9748:	add	w9, w9, w1
    974c:	sub	w1, w3, w9
    9750:	sub	w2, w3, w9
    9754:	add	x0, x0, x1
    9758:	str	x0, [x8, #8]
    975c:	ldr	x0, [x8, #16]
    9760:	sub	w9, w9, w3
    9764:	add	x0, x0, x1
    9768:	ldr	w1, [x11, #12]
    976c:	str	x0, [x8, #16]
    9770:	ldr	w0, [x8, #28]
    9774:	lsl	w1, w10, w1
    9778:	add	w0, w0, w9
    977c:	str	w0, [x8, #28]
    9780:	ldr	w0, [x8, #24]
    9784:	add	w0, w0, w9
    9788:	str	w0, [x8, #24]
    978c:	ldr	x0, [x12, #16]
    9790:	str	x0, [x12, #32]
    9794:	ldr	x0, [x8, #48]
    9798:	bl	93a8 <ZSTD_getErrorString@@Base+0x285c>
    979c:	ldr	w3, [x11, #28]
    97a0:	cmp	w3, #0x1
    97a4:	b.eq	97d4 <ZSTD_getErrorString@@Base+0x2c88>  // b.none
    97a8:	ldr	w1, [x11, #8]
    97ac:	cmp	w3, #0x6
    97b0:	ldr	x0, [x8, #64]
    97b4:	lsl	w1, w10, w1
    97b8:	b.ne	9854 <ZSTD_getErrorString@@Base+0x2d08>  // b.any
    97bc:	mov	w10, #0x10                  	// #16
    97c0:	mov	x3, #0x0                   	// #0
    97c4:	mov	w4, #0x0                   	// #0
    97c8:	sdiv	w10, w1, w10
    97cc:	cmp	w10, w4
    97d0:	b.gt	981c <ZSTD_getErrorString@@Base+0x2cd0>
    97d4:	ldr	w0, [x8, #40]
    97d8:	cbz	w0, 97ec <ZSTD_getErrorString@@Base+0x2ca0>
    97dc:	mov	w1, #0x1                   	// #1
    97e0:	lsl	w1, w1, w0
    97e4:	ldr	x0, [x8, #56]
    97e8:	bl	93a8 <ZSTD_getErrorString@@Base+0x285c>
    97ec:	ldp	x0, x1, [x12, #24]
    97f0:	cmp	x1, x0
    97f4:	b.cs	97fc <ZSTD_getErrorString@@Base+0x2cb0>  // b.hs, b.nlast
    97f8:	str	x0, [x12, #32]
    97fc:	ldr	w0, [x8, #36]
    9800:	ldp	x29, x30, [sp], #16
    9804:	add	w9, w0, w9
    9808:	cmp	w0, w2
    980c:	str	xzr, [x8, #176]
    9810:	csel	w9, w9, wzr, cs  // cs = hs, nlast
    9814:	stp	wzr, w9, [x8, #32]
    9818:	ret
    981c:	add	x6, x3, #0x10
    9820:	ldr	w1, [x0, x3, lsl #2]
    9824:	cmp	w1, #0x1
    9828:	csel	w5, w2, wzr, eq  // eq = none
    982c:	add	w1, w1, w5
    9830:	cmp	w2, w1
    9834:	add	w5, w9, w1
    9838:	csel	w1, w5, wzr, ls  // ls = plast
    983c:	str	w1, [x0, x3, lsl #2]
    9840:	add	x3, x3, #0x1
    9844:	cmp	x3, x6
    9848:	b.ne	9820 <ZSTD_getErrorString@@Base+0x2cd4>  // b.any
    984c:	add	w4, w4, #0x1
    9850:	b	97cc <ZSTD_getErrorString@@Base+0x2c80>
    9854:	bl	93a8 <ZSTD_getErrorString@@Base+0x285c>
    9858:	b	97d4 <ZSTD_getErrorString@@Base+0x2c88>
    985c:	stp	x29, x30, [sp, #-16]!
    9860:	mov	x5, x1
    9864:	mov	x4, x0
    9868:	mov	x29, sp
    986c:	ldr	x6, [x0, #24]
    9870:	mov	w1, #0x1                   	// #1
    9874:	bl	9130 <ZSTD_getErrorString@@Base+0x25e4>
    9878:	ldr	x2, [x0, #40]
    987c:	sub	x0, x2, x5
    9880:	cmp	x6, x0
    9884:	b.ls	989c <ZSTD_getErrorString@@Base+0x2d50>  // b.plast
    9888:	mov	w0, #0x1                   	// #1
    988c:	str	w0, [x4, #48]
    9890:	mov	x0, #0x0                   	// #0
    9894:	ldp	x29, x30, [sp], #16
    9898:	ret
    989c:	ldr	x1, [x4, #32]
    98a0:	cmp	x0, x1
    98a4:	b.cs	98ac <ZSTD_getErrorString@@Base+0x2d60>  // b.hs, b.nlast
    98a8:	str	x0, [x4, #32]
    98ac:	str	x0, [x4, #40]
    98b0:	b	9894 <ZSTD_getErrorString@@Base+0x2d48>
    98b4:	stp	x29, x30, [sp, #-96]!
    98b8:	mov	x9, x4
    98bc:	mov	x29, sp
    98c0:	stp	x21, x22, [sp, #32]
    98c4:	mov	x21, x2
    98c8:	mov	w22, w5
    98cc:	mov	x2, x4
    98d0:	stp	x19, x20, [sp, #16]
    98d4:	add	x20, x3, x4
    98d8:	stp	x23, x24, [sp, #48]
    98dc:	mov	x23, x1
    98e0:	mov	x1, x3
    98e4:	stp	x25, x26, [sp, #64]
    98e8:	str	x27, [sp, #80]
    98ec:	mov	x27, x0
    98f0:	bl	9214 <ZSTD_getErrorString@@Base+0x26c8>
    98f4:	ldr	w0, [x21, #48]
    98f8:	cbnz	w0, 9958 <ZSTD_getErrorString@@Base+0x2e0c>
    98fc:	ldr	x0, [x27, #8]
    9900:	sub	w0, w20, w0
    9904:	str	w0, [x27, #32]
    9908:	cmp	x9, #0x8
    990c:	b.ls	9938 <ZSTD_getErrorString@@Base+0x2dec>  // b.plast
    9910:	adrp	x24, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    9914:	add	x24, x24, #0x250
    9918:	mov	x25, #0x1fffffff            	// #536870911
    991c:	mov	w26, #0xe0000000            	// #-536870912
    9920:	sub	x19, x20, x1
    9924:	cmp	x19, #0x8
    9928:	ldr	x0, [x27, #8]
    992c:	b.gt	9960 <ZSTD_getErrorString@@Base+0x2e14>
    9930:	sub	x20, x20, x0
    9934:	str	w20, [x27, #36]
    9938:	mov	x0, #0x0                   	// #0
    993c:	ldp	x19, x20, [sp, #16]
    9940:	ldp	x21, x22, [sp, #32]
    9944:	ldp	x23, x24, [sp, #48]
    9948:	ldp	x25, x26, [sp, #64]
    994c:	ldr	x27, [sp, #80]
    9950:	ldp	x29, x30, [sp], #96
    9954:	ret
    9958:	mov	w0, #0x0                   	// #0
    995c:	b	9904 <ZSTD_getErrorString@@Base+0x2db8>
    9960:	cmp	x19, x25
    9964:	csel	x19, x19, x25, ls  // ls = plast
    9968:	add	x19, x1, x19
    996c:	sub	x0, x19, x0
    9970:	cmp	w0, w26
    9974:	b.ls	998c <ZSTD_getErrorString@@Base+0x2e40>  // b.plast
    9978:	mov	x3, x1
    997c:	mov	x2, x21
    9980:	mov	x1, x23
    9984:	mov	x0, x27
    9988:	bl	9700 <ZSTD_getErrorString@@Base+0x2bb4>
    998c:	ldr	w0, [x21, #28]
    9990:	sub	w0, w0, #0x1
    9994:	cmp	w0, #0x8
    9998:	b.hi	99bc <ZSTD_getErrorString@@Base+0x2e70>  // b.pmore
    999c:	ldrb	w0, [x24, w0, uxtw]
    99a0:	adr	x1, 99ac <ZSTD_getErrorString@@Base+0x2e60>
    99a4:	add	x0, x1, w0, sxtb #2
    99a8:	br	x0
    99ac:	mov	w2, w22
    99b0:	mov	x1, x19
    99b4:	mov	x0, x27
    99b8:	bl	14c50 <ZSTD_compress@@Base+0x6404>
    99bc:	mov	x1, x19
    99c0:	b	9920 <ZSTD_getErrorString@@Base+0x2dd4>
    99c4:	mov	w2, w22
    99c8:	mov	x1, x19
    99cc:	mov	x0, x27
    99d0:	bl	105b4 <ZSTD_compress@@Base+0x1d68>
    99d4:	b	99bc <ZSTD_getErrorString@@Base+0x2e70>
    99d8:	sub	x1, x19, #0x8
    99dc:	mov	x0, x27
    99e0:	bl	1888c <ZSTD_compress@@Base+0xa040>
    99e4:	b	99bc <ZSTD_getErrorString@@Base+0x2e70>
    99e8:	mov	x2, x19
    99ec:	sub	x1, x19, #0x8
    99f0:	mov	x0, x27
    99f4:	bl	20aac <ZSTD_compress@@Base+0x12260>
    99f8:	b	99bc <ZSTD_getErrorString@@Base+0x2e70>
    99fc:	stp	x29, x30, [sp, #-320]!
    9a00:	mov	x29, sp
    9a04:	stp	x19, x20, [sp, #16]
    9a08:	mov	x20, x0
    9a0c:	mov	w0, #0x1f                  	// #31
    9a10:	str	w0, [sp, #132]
    9a14:	ldr	w0, [x3, #40]
    9a18:	stp	x21, x22, [sp, #32]
    9a1c:	add	x21, x4, x5
    9a20:	stp	x23, x24, [sp, #48]
    9a24:	mov	x24, x3
    9a28:	mov	x23, x7
    9a2c:	stp	x25, x26, [sp, #64]
    9a30:	stp	x27, x28, [sp, #80]
    9a34:	stp	x1, x2, [sp, #104]
    9a38:	str	w6, [sp, #124]
    9a3c:	cbnz	w0, 9ac8 <ZSTD_getErrorString@@Base+0x2f7c>
    9a40:	ldr	w25, [x4, #4]
    9a44:	add	x27, x4, #0x8
    9a48:	mov	w0, #0xff                  	// #255
    9a4c:	add	x22, sp, #0xd0
    9a50:	sub	x3, x21, x27
    9a54:	mov	x2, x27
    9a58:	mov	x1, x22
    9a5c:	str	w0, [sp, #208]
    9a60:	mov	x0, x20
    9a64:	bl	8514 <ZSTD_getErrorString@@Base+0x19c8>
    9a68:	cmn	x0, #0x78
    9a6c:	b.hi	9aa8 <ZSTD_getErrorString@@Base+0x2f5c>  // b.pmore
    9a70:	ldr	w1, [sp, #208]
    9a74:	cmp	w1, #0xfe
    9a78:	b.ls	9aa8 <ZSTD_getErrorString@@Base+0x2f5c>  // b.plast
    9a7c:	add	x27, x27, x0
    9a80:	add	x26, sp, #0x90
    9a84:	sub	x4, x21, x27
    9a88:	mov	x3, x27
    9a8c:	mov	x2, x22
    9a90:	add	x1, sp, #0x84
    9a94:	mov	x0, x26
    9a98:	bl	4cb4 <ZSTD_initDStream_usingDDict@plt+0x134>
    9a9c:	mov	x19, x0
    9aa0:	cmn	x0, #0x78
    9aa4:	b.ls	9ad0 <ZSTD_getErrorString@@Base+0x2f84>  // b.plast
    9aa8:	mov	x0, #0xffffffffffffffe2    	// #-30
    9aac:	ldp	x19, x20, [sp, #16]
    9ab0:	ldp	x21, x22, [sp, #32]
    9ab4:	ldp	x23, x24, [sp, #48]
    9ab8:	ldp	x25, x26, [sp, #64]
    9abc:	ldp	x27, x28, [sp, #80]
    9ac0:	ldp	x29, x30, [sp], #320
    9ac4:	ret
    9ac8:	mov	x25, #0x0                   	// #0
    9acc:	b	9a44 <ZSTD_getErrorString@@Base+0x2ef8>
    9ad0:	ldr	w3, [sp, #208]
    9ad4:	cmp	w3, #0x8
    9ad8:	b.hi	9aa8 <ZSTD_getErrorString@@Base+0x2f5c>  // b.pmore
    9adc:	mov	x4, x23
    9ae0:	mov	x1, x26
    9ae4:	add	x0, x20, #0x404
    9ae8:	mov	x5, #0x1800                	// #6144
    9aec:	mov	w2, #0x1f                  	// #31
    9af0:	bl	7118 <ZSTD_getErrorString@@Base+0x5cc>
    9af4:	cmn	x0, #0x78
    9af8:	b.hi	9aa8 <ZSTD_getErrorString@@Base+0x2f5c>  // b.pmore
    9afc:	mov	w5, #0x34                  	// #52
    9b00:	add	x19, x27, x19
    9b04:	add	x28, sp, #0x8c
    9b08:	add	x27, sp, #0x88
    9b0c:	sub	x4, x21, x19
    9b10:	mov	x3, x19
    9b14:	mov	x2, x28
    9b18:	mov	x1, x27
    9b1c:	mov	x0, x22
    9b20:	str	w5, [sp, #136]
    9b24:	bl	4cb4 <ZSTD_initDStream_usingDDict@plt+0x134>
    9b28:	str	x0, [sp, #96]
    9b2c:	cmn	x0, #0x78
    9b30:	mov	w5, #0x34                  	// #52
    9b34:	b.hi	9aa8 <ZSTD_getErrorString@@Base+0x2f5c>  // b.pmore
    9b38:	ldr	w7, [sp, #140]
    9b3c:	cmp	w7, #0x9
    9b40:	b.hi	9aa8 <ZSTD_getErrorString@@Base+0x2f5c>  // b.pmore
    9b44:	ldr	w6, [sp, #136]
    9b48:	mov	w2, w5
    9b4c:	mov	x0, x22
    9b50:	mov	w1, w6
    9b54:	bl	96d0 <ZSTD_getErrorString@@Base+0x2b84>
    9b58:	cmn	x0, #0x78
    9b5c:	b.hi	9aac <ZSTD_getErrorString@@Base+0x2f60>  // b.pmore
    9b60:	mov	x4, x23
    9b64:	mov	w3, w7
    9b68:	mov	w2, w6
    9b6c:	mov	x1, x22
    9b70:	add	x0, x20, #0x708
    9b74:	mov	x5, #0x1800                	// #6144
    9b78:	bl	7118 <ZSTD_getErrorString@@Base+0x5cc>
    9b7c:	cmn	x0, #0x78
    9b80:	b.hi	9aa8 <ZSTD_getErrorString@@Base+0x2f5c>  // b.pmore
    9b84:	ldr	x0, [sp, #96]
    9b88:	mov	x1, x27
    9b8c:	mov	x2, x28
    9b90:	add	x19, x19, x0
    9b94:	mov	w0, #0x23                  	// #35
    9b98:	sub	x4, x21, x19
    9b9c:	mov	x3, x19
    9ba0:	str	w0, [sp, #136]
    9ba4:	mov	x0, x22
    9ba8:	bl	4cb4 <ZSTD_initDStream_usingDDict@plt+0x134>
    9bac:	mov	x27, x0
    9bb0:	cmn	x0, #0x78
    9bb4:	b.hi	9aa8 <ZSTD_getErrorString@@Base+0x2f5c>  // b.pmore
    9bb8:	ldr	w7, [sp, #140]
    9bbc:	cmp	w7, #0x9
    9bc0:	b.hi	9aa8 <ZSTD_getErrorString@@Base+0x2f5c>  // b.pmore
    9bc4:	ldr	w6, [sp, #136]
    9bc8:	mov	x0, x22
    9bcc:	mov	w2, #0x23                  	// #35
    9bd0:	mov	w1, w6
    9bd4:	bl	96d0 <ZSTD_getErrorString@@Base+0x2b84>
    9bd8:	cmn	x0, #0x78
    9bdc:	b.hi	9aac <ZSTD_getErrorString@@Base+0x2f60>  // b.pmore
    9be0:	mov	x4, x23
    9be4:	mov	w3, w7
    9be8:	mov	w2, w6
    9bec:	mov	x1, x22
    9bf0:	add	x0, x20, #0xcb4
    9bf4:	mov	x5, #0x1800                	// #6144
    9bf8:	bl	7118 <ZSTD_getErrorString@@Base+0x5cc>
    9bfc:	cmn	x0, #0x78
    9c00:	b.hi	9aa8 <ZSTD_getErrorString@@Base+0x2f5c>  // b.pmore
    9c04:	add	x0, x19, x27
    9c08:	add	x6, x0, #0xc
    9c0c:	cmp	x6, x21
    9c10:	b.hi	9aa8 <ZSTD_getErrorString@@Base+0x2f5c>  // b.pmore
    9c14:	ldr	w1, [x19, x27]
    9c18:	sub	x4, x21, x6
    9c1c:	str	w1, [x20, #4580]
    9c20:	mov	w2, #0x1f                  	// #31
    9c24:	ldp	w1, w0, [x0, #4]
    9c28:	str	w1, [x20, #4584]
    9c2c:	mov	w1, #0xfffdffff            	// #-131073
    9c30:	cmp	x4, x1
    9c34:	ldr	w1, [sp, #132]
    9c38:	str	w0, [x20, #4588]
    9c3c:	add	w0, w4, #0x20, lsl #12
    9c40:	clz	w0, w0
    9c44:	eor	w0, w0, #0x1f
    9c48:	csel	w2, w0, w2, ls  // ls = plast
    9c4c:	mov	x0, x26
    9c50:	bl	96d0 <ZSTD_getErrorString@@Base+0x2b84>
    9c54:	cmn	x0, #0x78
    9c58:	b.hi	9aac <ZSTD_getErrorString@@Base+0x2f60>  // b.pmore
    9c5c:	mov	x0, #0x11e4                	// #4580
    9c60:	mov	x1, #0x11f0                	// #4592
    9c64:	add	x0, x20, x0
    9c68:	add	x2, x20, x1
    9c6c:	ldr	w1, [x0]
    9c70:	cbz	w1, 9aa8 <ZSTD_getErrorString@@Base+0x2f5c>
    9c74:	cmp	x4, w1, uxtw
    9c78:	b.cc	9aa8 <ZSTD_getErrorString@@Base+0x2f5c>  // b.lo, b.ul, b.last
    9c7c:	add	x0, x0, #0x4
    9c80:	cmp	x2, x0
    9c84:	b.ne	9c6c <ZSTD_getErrorString@@Base+0x3120>  // b.any
    9c88:	mov	w0, #0x2                   	// #2
    9c8c:	mov	x1, #0x200000002           	// #8589934594
    9c90:	str	w0, [x20, #1024]
    9c94:	mov	x3, x6
    9c98:	str	x1, [x20, #4568]
    9c9c:	mov	x2, x24
    9ca0:	str	w0, [x20, #4576]
    9ca4:	ldp	x0, x1, [sp, #104]
    9ca8:	ldr	w5, [sp, #124]
    9cac:	bl	98b4 <ZSTD_getErrorString@@Base+0x2d68>
    9cb0:	cmn	x0, #0x78
    9cb4:	csel	x0, x0, x25, hi  // hi = pmore
    9cb8:	b	9aac <ZSTD_getErrorString@@Base+0x2f60>
    9cbc:	stp	x29, x30, [sp, #-16]!
    9cc0:	mov	x10, x2
    9cc4:	mov	x2, x3
    9cc8:	mov	x3, x4
    9ccc:	mov	x29, sp
    9cd0:	mov	x4, x5
    9cd4:	cmp	x3, #0x0
    9cd8:	mov	w5, w7
    9cdc:	ccmp	x4, #0x7, #0x0, ne  // ne = any
    9ce0:	ldr	x7, [sp, #16]
    9ce4:	b.hi	9cfc <ZSTD_getErrorString@@Base+0x31b0>  // b.pmore
    9ce8:	cmp	w6, #0x2
    9cec:	b.ne	9d64 <ZSTD_getErrorString@@Base+0x3218>  // b.any
    9cf0:	mov	x0, #0xffffffffffffffe0    	// #-32
    9cf4:	ldp	x29, x30, [sp], #16
    9cf8:	ret
    9cfc:	mov	x9, x1
    9d00:	bl	9388 <ZSTD_getErrorString@@Base+0x283c>
    9d04:	cmp	w6, #0x1
    9d08:	b.ne	9d1c <ZSTD_getErrorString@@Base+0x31d0>  // b.any
    9d0c:	ldp	x29, x30, [sp], #16
    9d10:	mov	x1, x10
    9d14:	mov	x0, x9
    9d18:	b	98b4 <ZSTD_getErrorString@@Base+0x2d68>
    9d1c:	ldr	w1, [x3]
    9d20:	mov	x11, x0
    9d24:	mov	w0, #0xa437                	// #42039
    9d28:	movk	w0, #0xec30, lsl #16
    9d2c:	cmp	w1, w0
    9d30:	b.eq	9d40 <ZSTD_getErrorString@@Base+0x31f4>  // b.none
    9d34:	cbz	w6, 9d0c <ZSTD_getErrorString@@Base+0x31c0>
    9d38:	cmp	w6, #0x2
    9d3c:	b.eq	9cf0 <ZSTD_getErrorString@@Base+0x31a4>  // b.none
    9d40:	ldp	x29, x30, [sp], #16
    9d44:	mov	w6, w5
    9d48:	mov	x1, x9
    9d4c:	mov	x5, x4
    9d50:	mov	x0, x11
    9d54:	mov	x4, x3
    9d58:	mov	x3, x2
    9d5c:	mov	x2, x10
    9d60:	b	99fc <ZSTD_getErrorString@@Base+0x2eb0>
    9d64:	mov	x0, #0x0                   	// #0
    9d68:	b	9cf4 <ZSTD_getErrorString@@Base+0x31a8>
    9d6c:	stp	x29, x30, [sp, #-48]!
    9d70:	mov	w7, w3
    9d74:	mov	x29, sp
    9d78:	stp	x19, x20, [sp, #16]
    9d7c:	mov	x20, x0
    9d80:	ldr	w0, [x2, #24]
    9d84:	stp	x21, x22, [sp, #32]
    9d88:	mov	x19, x1
    9d8c:	mov	x21, x2
    9d90:	mov	w22, w5
    9d94:	cmp	w0, #0x1
    9d98:	b.eq	9fa0 <ZSTD_getErrorString@@Base+0x3454>  // b.none
    9d9c:	ldr	w0, [x2, #4]
    9da0:	mov	x8, #0x1                   	// #1
    9da4:	lsl	x8, x8, x0
    9da8:	ldr	w2, [x21, #8]
    9dac:	cmp	w22, #0x1
    9db0:	b.ne	9fa8 <ZSTD_getErrorString@@Base+0x345c>  // b.any
    9db4:	ldr	w0, [x21, #16]
    9db8:	cmp	w0, #0x3
    9dbc:	b.ne	9fb4 <ZSTD_getErrorString@@Base+0x3468>  // b.any
    9dc0:	ldr	w1, [x21]
    9dc4:	mov	w0, #0x11                  	// #17
    9dc8:	mov	x6, #0x1                   	// #1
    9dcc:	cmp	w1, #0x11
    9dd0:	csel	w0, w1, w0, ls  // ls = plast
    9dd4:	cmp	w1, #0x0
    9dd8:	lsl	x6, x6, x0
    9ddc:	csel	x6, x6, xzr, ne  // ne = any
    9de0:	cmp	w4, #0x1
    9de4:	b.ne	9dfc <ZSTD_getErrorString@@Base+0x32b0>  // b.any
    9de8:	stp	xzr, xzr, [x20, #8]
    9dec:	mov	x1, #0x1                   	// #1
    9df0:	str	x1, [x20]
    9df4:	ldr	x1, [x19, #16]
    9df8:	str	x1, [x19, #32]
    9dfc:	ldr	x1, [x20, #8]
    9e00:	mov	x4, #0x4                   	// #4
    9e04:	ldr	x5, [x19, #16]
    9e08:	lsl	x4, x4, x2
    9e0c:	ldr	x9, [x19, #40]
    9e10:	str	w0, [x20, #40]
    9e14:	ldr	x0, [x20]
    9e18:	add	x4, x5, x4
    9e1c:	str	wzr, [x20, #32]
    9e20:	sub	x0, x0, x1
    9e24:	stp	w0, w0, [x20, #24]
    9e28:	str	w0, [x20, #36]
    9e2c:	mov	w1, #0x2                   	// #2
    9e30:	str	wzr, [x20, #124]
    9e34:	mov	x0, x19
    9e38:	str	xzr, [x20, #176]
    9e3c:	str	x5, [x19, #24]
    9e40:	bl	9130 <ZSTD_getErrorString@@Base+0x25e4>
    9e44:	cmp	x4, x9
    9e48:	b.ls	9fbc <ZSTD_getErrorString@@Base+0x3470>  // b.plast
    9e4c:	mov	w0, #0x1                   	// #1
    9e50:	mov	x5, #0x0                   	// #0
    9e54:	str	w0, [x19, #48]
    9e58:	str	x5, [x20, #48]
    9e5c:	mov	x0, x19
    9e60:	ldr	x5, [x19, #24]
    9e64:	mov	w1, #0x2                   	// #2
    9e68:	add	x4, x5, x8, lsl #2
    9e6c:	ldr	x8, [x19, #40]
    9e70:	bl	9130 <ZSTD_getErrorString@@Base+0x25e4>
    9e74:	cmp	x4, x8
    9e78:	b.ls	9fc4 <ZSTD_getErrorString@@Base+0x3478>  // b.plast
    9e7c:	mov	w0, #0x1                   	// #1
    9e80:	mov	x5, #0x0                   	// #0
    9e84:	str	w0, [x19, #48]
    9e88:	ldr	x4, [x19, #24]
    9e8c:	str	x5, [x20, #64]
    9e90:	ldr	x5, [x19, #40]
    9e94:	mov	x0, x19
    9e98:	add	x6, x4, x6, lsl #2
    9e9c:	mov	w1, #0x2                   	// #2
    9ea0:	bl	9130 <ZSTD_getErrorString@@Base+0x25e4>
    9ea4:	cmp	x6, x5
    9ea8:	b.ls	9fcc <ZSTD_getErrorString@@Base+0x3480>  // b.plast
    9eac:	mov	w0, #0x1                   	// #1
    9eb0:	mov	x4, #0x0                   	// #0
    9eb4:	str	w0, [x19, #48]
    9eb8:	ldr	w0, [x19, #48]
    9ebc:	str	x4, [x20, #56]
    9ec0:	cbnz	w0, 9f8c <ZSTD_getErrorString@@Base+0x3440>
    9ec4:	cmp	w7, #0x1
    9ec8:	b.eq	9ef4 <ZSTD_getErrorString@@Base+0x33a8>  // b.none
    9ecc:	ldp	x2, x0, [x19, #24]
    9ed0:	cmp	x0, x2
    9ed4:	b.cs	9ee4 <ZSTD_getErrorString@@Base+0x3398>  // b.hs, b.nlast
    9ed8:	sub	x2, x2, x0
    9edc:	mov	w1, #0x0                   	// #0
    9ee0:	bl	4700 <memset@plt>
    9ee4:	ldp	x0, x1, [x19, #24]
    9ee8:	cmp	x1, x0
    9eec:	b.cs	9ef4 <ZSTD_getErrorString@@Base+0x33a8>  // b.hs, b.nlast
    9ef0:	str	x0, [x19, #32]
    9ef4:	cmp	w22, #0x1
    9ef8:	b.ne	9f6c <ZSTD_getErrorString@@Base+0x3420>  // b.any
    9efc:	ldr	w0, [x21, #24]
    9f00:	cmp	w0, #0x6
    9f04:	b.ls	9f6c <ZSTD_getErrorString@@Base+0x3420>  // b.plast
    9f08:	mov	x1, #0x400                 	// #1024
    9f0c:	mov	x0, x19
    9f10:	bl	9170 <ZSTD_getErrorString@@Base+0x2624>
    9f14:	str	x0, [x20, #72]
    9f18:	mov	x1, #0x90                  	// #144
    9f1c:	mov	x0, x19
    9f20:	bl	9170 <ZSTD_getErrorString@@Base+0x2624>
    9f24:	str	x0, [x20, #80]
    9f28:	mov	x1, #0xd4                  	// #212
    9f2c:	mov	x0, x19
    9f30:	bl	9170 <ZSTD_getErrorString@@Base+0x2624>
    9f34:	str	x0, [x20, #88]
    9f38:	mov	x1, #0x80                  	// #128
    9f3c:	mov	x0, x19
    9f40:	bl	9170 <ZSTD_getErrorString@@Base+0x2624>
    9f44:	str	x0, [x20, #96]
    9f48:	mov	x1, #0x8008                	// #32776
    9f4c:	mov	x0, x19
    9f50:	bl	9170 <ZSTD_getErrorString@@Base+0x2624>
    9f54:	str	x0, [x20, #104]
    9f58:	mov	x1, #0xc01c                	// #49180
    9f5c:	mov	x0, x19
    9f60:	movk	x1, #0x1, lsl #16
    9f64:	bl	9170 <ZSTD_getErrorString@@Base+0x2624>
    9f68:	str	x0, [x20, #112]
    9f6c:	ldp	x2, x3, [x21]
    9f70:	stp	x2, x3, [x20, #184]
    9f74:	ldr	x1, [x21, #16]
    9f78:	str	x1, [x20, #200]
    9f7c:	ldr	w1, [x21, #24]
    9f80:	str	w1, [x20, #208]
    9f84:	ldr	w0, [x19, #48]
    9f88:	cbz	w0, 9fd4 <ZSTD_getErrorString@@Base+0x3488>
    9f8c:	mov	x0, #0xffffffffffffffc0    	// #-64
    9f90:	ldp	x19, x20, [sp, #16]
    9f94:	ldp	x21, x22, [sp, #32]
    9f98:	ldp	x29, x30, [sp], #48
    9f9c:	ret
    9fa0:	mov	x8, #0x0                   	// #0
    9fa4:	b	9da8 <ZSTD_getErrorString@@Base+0x325c>
    9fa8:	mov	w0, w22
    9fac:	mov	x6, #0x0                   	// #0
    9fb0:	b	9de0 <ZSTD_getErrorString@@Base+0x3294>
    9fb4:	mov	w0, #0x0                   	// #0
    9fb8:	b	9fac <ZSTD_getErrorString@@Base+0x3460>
    9fbc:	str	x4, [x19, #24]
    9fc0:	b	9e58 <ZSTD_getErrorString@@Base+0x330c>
    9fc4:	str	x4, [x19, #24]
    9fc8:	b	9e88 <ZSTD_getErrorString@@Base+0x333c>
    9fcc:	str	x6, [x19, #24]
    9fd0:	b	9eb8 <ZSTD_getErrorString@@Base+0x336c>
    9fd4:	mov	x0, #0x0                   	// #0
    9fd8:	b	9f90 <ZSTD_getErrorString@@Base+0x3444>
    9fdc:	sub	sp, sp, #0xe0
    9fe0:	cmp	x1, #0x0
    9fe4:	mov	x7, x1
    9fe8:	ccmp	w3, #0x1, #0x4, ne  // ne = any
    9fec:	stp	x29, x30, [sp, #16]
    9ff0:	add	x29, sp, #0x10
    9ff4:	stp	x19, x20, [sp, #32]
    9ff8:	mov	x20, x5
    9ffc:	mov	x19, x0
    a000:	stp	x21, x22, [sp, #48]
    a004:	mov	x21, x2
    a008:	add	x22, x0, #0x18
    a00c:	stp	x23, x24, [sp, #64]
    a010:	mov	w23, w4
    a014:	ldr	x2, [x20, #16]
    a018:	str	x2, [x0, #288]
    a01c:	ldr	w2, [x20, #24]
    a020:	ldp	x4, x5, [x5]
    a024:	stp	x4, x5, [x0, #272]
    a028:	str	w2, [x0, #296]
    a02c:	b.eq	a034 <ZSTD_getErrorString@@Base+0x34e8>  // b.none
    a030:	cbnz	x21, a10c <ZSTD_getErrorString@@Base+0x35c0>
    a034:	str	x7, [x19]
    a038:	str	x21, [x19, #8]
    a03c:	mov	x1, #0x1800                	// #6144
    a040:	mov	x0, x22
    a044:	add	x21, x19, #0x130
    a048:	bl	91d0 <ZSTD_getErrorString@@Base+0x2684>
    a04c:	str	x0, [x19, #16]
    a050:	add	x24, x19, #0x58
    a054:	mov	x0, x21
    a058:	bl	9388 <ZSTD_getErrorString@@Base+0x283c>
    a05c:	mov	x2, x20
    a060:	mov	x1, x22
    a064:	mov	x0, x24
    a068:	mov	w5, #0x0                   	// #0
    a06c:	mov	w4, #0x1                   	// #1
    a070:	mov	w3, #0x0                   	// #0
    a074:	bl	9d6c <ZSTD_getErrorString@@Base+0x3220>
    a078:	cmn	x0, #0x78
    a07c:	b.hi	a0f4 <ZSTD_getErrorString@@Base+0x35a8>  // b.pmore
    a080:	add	x3, sp, #0x50
    a084:	mov	x2, #0x90                  	// #144
    a088:	mov	x0, x3
    a08c:	mov	w1, #0x0                   	// #0
    a090:	bl	4700 <memset@plt>
    a094:	mov	x3, x0
    a098:	add	x2, sp, #0x4
    a09c:	mov	w0, #0x3                   	// #3
    a0a0:	str	w0, [sp, #124]
    a0a4:	mov	w7, #0x1                   	// #1
    a0a8:	ldp	x0, x1, [x20]
    a0ac:	stp	x0, x1, [x2, #80]
    a0b0:	mov	w6, w23
    a0b4:	ldp	x4, x5, [x19]
    a0b8:	mov	x2, x22
    a0bc:	ldr	x0, [x20, #16]
    a0c0:	stur	x0, [sp, #100]
    a0c4:	ldr	w0, [x20, #24]
    a0c8:	mov	x1, x24
    a0cc:	str	w0, [sp, #108]
    a0d0:	ldr	x0, [x19, #16]
    a0d4:	str	x0, [sp]
    a0d8:	mov	x0, x21
    a0dc:	str	w7, [sp, #112]
    a0e0:	bl	9cbc <ZSTD_getErrorString@@Base+0x3170>
    a0e4:	cmn	x0, #0x78
    a0e8:	b.hi	a0f4 <ZSTD_getErrorString@@Base+0x35a8>  // b.pmore
    a0ec:	str	w0, [x19, #4920]
    a0f0:	mov	x0, #0x0                   	// #0
    a0f4:	ldp	x29, x30, [sp, #16]
    a0f8:	ldp	x19, x20, [sp, #32]
    a0fc:	ldp	x21, x22, [sp, #48]
    a100:	ldp	x23, x24, [sp, #64]
    a104:	add	sp, sp, #0xe0
    a108:	ret
    a10c:	add	x1, x21, #0x7
    a110:	mov	x0, x22
    a114:	and	x1, x1, #0xfffffffffffffff8
    a118:	bl	91d0 <ZSTD_getErrorString@@Base+0x2684>
    a11c:	cbz	x0, a134 <ZSTD_getErrorString@@Base+0x35e8>
    a120:	str	x0, [x19]
    a124:	mov	x2, x21
    a128:	mov	x1, x7
    a12c:	bl	4460 <memcpy@plt>
    a130:	b	a038 <ZSTD_getErrorString@@Base+0x34ec>
    a134:	mov	x0, #0xffffffffffffffc0    	// #-64
    a138:	b	a0f4 <ZSTD_getErrorString@@Base+0x35a8>

000000000000a13c <ZSTD_compressBound@@Base>:
    a13c:	mov	x1, #0x20000               	// #131072
    a140:	sub	x1, x1, x0
    a144:	mov	x3, #0x1ffff               	// #131071
    a148:	cmp	x0, x3
    a14c:	lsr	x1, x1, #11
    a150:	add	x2, x0, x0, lsr #8
    a154:	csel	x0, x1, xzr, ls  // ls = plast
    a158:	add	x0, x2, x0
    a15c:	ret

000000000000a160 <ZSTD_initStaticCCtx@@Base>:
    a160:	stp	x29, x30, [sp, #-96]!
    a164:	cmp	x1, #0x478
    a168:	mov	x29, sp
    a16c:	stp	x19, x20, [sp, #16]
    a170:	b.ls	a1ac <ZSTD_initStaticCCtx@@Base+0x4c>  // b.plast
    a174:	tst	x0, #0x7
    a178:	b.ne	a1ac <ZSTD_initStaticCCtx@@Base+0x4c>  // b.any
    a17c:	mov	x20, x1
    a180:	add	x1, x0, x1
    a184:	stp	x0, x1, [sp, #32]
    a188:	stp	x0, x0, [sp, #48]
    a18c:	stp	x0, x1, [sp, #64]
    a190:	add	x0, sp, #0x20
    a194:	mov	x1, #0x478                 	// #1144
    a198:	str	xzr, [sp, #80]
    a19c:	str	wzr, [sp, #88]
    a1a0:	bl	91d0 <ZSTD_getErrorString@@Base+0x2684>
    a1a4:	mov	x19, x0
    a1a8:	cbnz	x0, a1b4 <ZSTD_initStaticCCtx@@Base+0x54>
    a1ac:	mov	x19, #0x0                   	// #0
    a1b0:	b	a244 <ZSTD_initStaticCCtx@@Base+0xe4>
    a1b4:	mov	w1, #0x0                   	// #0
    a1b8:	mov	x2, #0x478                 	// #1144
    a1bc:	bl	4700 <memset@plt>
    a1c0:	add	x4, x19, #0x138
    a1c4:	ldp	x0, x1, [sp, #32]
    a1c8:	stp	xzr, xzr, [sp, #32]
    a1cc:	stp	x0, x1, [x4]
    a1d0:	ldp	x0, x1, [sp, #48]
    a1d4:	stp	x0, x1, [x4, #16]
    a1d8:	ldp	x0, x1, [sp, #64]
    a1dc:	stp	x0, x1, [x4, #32]
    a1e0:	ldp	x0, x1, [sp, #80]
    a1e4:	stp	x0, x1, [x4, #48]
    a1e8:	ldr	x1, [x19, #336]
    a1ec:	stp	xzr, xzr, [sp, #48]
    a1f0:	ldr	x0, [x19, #352]
    a1f4:	stp	xzr, xzr, [sp, #64]
    a1f8:	stp	xzr, xzr, [sp, #80]
    a1fc:	sub	x0, x0, x1
    a200:	mov	x1, #0x3bdf                	// #15327
    a204:	str	x20, [x19, #520]
    a208:	cmp	x0, x1
    a20c:	b.ls	a1ac <ZSTD_initStaticCCtx@@Base+0x4c>  // b.plast
    a210:	mov	x0, x4
    a214:	mov	x1, #0x11f0                	// #4592
    a218:	bl	91d0 <ZSTD_getErrorString@@Base+0x2684>
    a21c:	str	x0, [x19, #752]
    a220:	mov	x1, #0x11f0                	// #4592
    a224:	mov	x0, x4
    a228:	bl	91d0 <ZSTD_getErrorString@@Base+0x2684>
    a22c:	str	x0, [x19, #760]
    a230:	mov	x1, #0x1800                	// #6144
    a234:	mov	x0, x4
    a238:	bl	91d0 <ZSTD_getErrorString@@Base+0x2684>
    a23c:	str	wzr, [x19, #8]
    a240:	str	x0, [x19, #984]
    a244:	mov	x0, x19
    a248:	ldp	x19, x20, [sp, #16]
    a24c:	ldp	x29, x30, [sp], #96
    a250:	ret
    a254:	add	x0, x0, #0x238
    a258:	ret

000000000000a25c <ZSTD_createCCtxParams@@Base>:
    a25c:	adrp	x0, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    a260:	add	x0, x0, #0x2a0
    a264:	stp	x29, x30, [sp, #-80]!
    a268:	mov	x29, sp
    a26c:	ldp	x2, x3, [x0]
    a270:	add	x1, sp, #0x10
    a274:	ldr	x0, [x0, #16]
    a278:	stp	x2, x3, [sp, #16]
    a27c:	str	x0, [sp, #32]
    a280:	stp	x2, x3, [sp, #56]
    a284:	str	x0, [sp, #72]
    a288:	mov	x0, #0x90                  	// #144
    a28c:	bl	6b70 <ZSTD_getErrorString@@Base+0x24>
    a290:	cbz	x0, a2b4 <ZSTD_createCCtxParams@@Base+0x58>
    a294:	ldr	x1, [sp, #72]
    a298:	str	x1, [x0, #136]
    a29c:	mov	w1, #0x3                   	// #3
    a2a0:	str	w1, [x0, #44]
    a2a4:	ldp	x2, x3, [sp, #56]
    a2a8:	mov	w1, #0x1                   	// #1
    a2ac:	str	w1, [x0, #32]
    a2b0:	stp	x2, x3, [x0, #120]
    a2b4:	ldp	x29, x30, [sp], #80
    a2b8:	ret

000000000000a2bc <ZSTD_freeCCtxParams@@Base>:
    a2bc:	cbz	x0, a2ec <ZSTD_freeCCtxParams@@Base+0x30>
    a2c0:	stp	x29, x30, [sp, #-48]!
    a2c4:	mov	x29, sp
    a2c8:	ldp	x2, x3, [x0, #120]
    a2cc:	stp	x2, x3, [sp, #16]
    a2d0:	ldr	x1, [x0, #136]
    a2d4:	str	x1, [sp, #32]
    a2d8:	add	x1, sp, #0x10
    a2dc:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
    a2e0:	mov	x0, #0x0                   	// #0
    a2e4:	ldp	x29, x30, [sp], #48
    a2e8:	ret
    a2ec:	mov	x0, #0x0                   	// #0
    a2f0:	ret

000000000000a2f4 <ZSTD_CCtxParams_init@@Base>:
    a2f4:	cbz	x0, a334 <ZSTD_CCtxParams_init@@Base+0x40>
    a2f8:	stp	x29, x30, [sp, #-32]!
    a2fc:	mov	x2, #0x90                  	// #144
    a300:	mov	x29, sp
    a304:	stp	x19, x20, [sp, #16]
    a308:	mov	x19, x0
    a30c:	mov	w20, w1
    a310:	mov	w1, #0x0                   	// #0
    a314:	bl	4700 <memset@plt>
    a318:	mov	w0, #0x1                   	// #1
    a31c:	str	w0, [x19, #32]
    a320:	str	w20, [x19, #44]
    a324:	mov	x0, #0x0                   	// #0
    a328:	ldp	x19, x20, [sp, #16]
    a32c:	ldp	x29, x30, [sp], #32
    a330:	ret
    a334:	mov	x0, #0xffffffffffffffff    	// #-1
    a338:	ret

000000000000a33c <ZSTD_CCtxParams_reset@@Base>:
    a33c:	mov	w1, #0x3                   	// #3
    a340:	b	4950 <ZSTD_CCtxParams_init@plt>

000000000000a344 <ZSTD_CCtxParams_getParameter@@Base>:
    a344:	cmp	w1, #0xa4
    a348:	b.hi	a3d0 <ZSTD_CCtxParams_getParameter@@Base+0x8c>  // b.pmore
    a34c:	cmp	w1, #0x9f
    a350:	b.hi	a394 <ZSTD_CCtxParams_getParameter@@Base+0x50>  // b.pmore
    a354:	cmp	w1, #0xa
    a358:	b.eq	a414 <ZSTD_CCtxParams_getParameter@@Base+0xd0>  // b.none
    a35c:	sub	w1, w1, #0x64
    a360:	cmp	w1, #0x7
    a364:	b.ls	a3b8 <ZSTD_CCtxParams_getParameter@@Base+0x74>  // b.plast
    a368:	mov	x0, #0xffffffffffffffd8    	// #-40
    a36c:	b	a420 <ZSTD_CCtxParams_getParameter@@Base+0xdc>
    a370:	sub	w1, w1, #0x3e9
    a374:	cmp	w1, #0x3
    a378:	b.hi	a47c <ZSTD_CCtxParams_getParameter@@Base+0x138>  // b.pmore
    a37c:	adrp	x3, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    a380:	add	x3, x3, #0x25c
    a384:	ldrb	w1, [x3, w1, uxtw]
    a388:	adr	x3, a394 <ZSTD_CCtxParams_getParameter@@Base+0x50>
    a38c:	add	x1, x3, w1, sxtb #2
    a390:	br	x1
    a394:	sub	w1, w1, #0xa1
    a398:	cmp	w1, #0x3
    a39c:	b.hi	a494 <ZSTD_CCtxParams_getParameter@@Base+0x150>  // b.pmore
    a3a0:	adrp	x3, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    a3a4:	add	x3, x3, #0x260
    a3a8:	ldrb	w1, [x3, w1, uxtw]
    a3ac:	adr	x3, a3b8 <ZSTD_CCtxParams_getParameter@@Base+0x74>
    a3b0:	add	x1, x3, w1, sxtb #2
    a3b4:	br	x1
    a3b8:	adrp	x3, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    a3bc:	add	x3, x3, #0x264
    a3c0:	ldrb	w1, [x3, w1, uxtw]
    a3c4:	adr	x3, a3d0 <ZSTD_CCtxParams_getParameter@@Base+0x8c>
    a3c8:	add	x1, x3, w1, sxtb #2
    a3cc:	br	x1
    a3d0:	cmp	w1, #0x3ec
    a3d4:	b.hi	a368 <ZSTD_CCtxParams_getParameter@@Base+0x24>  // b.pmore
    a3d8:	cmp	w1, #0x3e7
    a3dc:	b.hi	a370 <ZSTD_CCtxParams_getParameter@@Base+0x2c>  // b.pmore
    a3e0:	cmp	w1, #0xca
    a3e4:	b.eq	a46c <ZSTD_CCtxParams_getParameter@@Base+0x128>  // b.none
    a3e8:	b.hi	a404 <ZSTD_CCtxParams_getParameter@@Base+0xc0>  // b.pmore
    a3ec:	cmp	w1, #0xc8
    a3f0:	b.eq	a464 <ZSTD_CCtxParams_getParameter@@Base+0x120>  // b.none
    a3f4:	cmp	w1, #0xc9
    a3f8:	b.ne	a368 <ZSTD_CCtxParams_getParameter@@Base+0x24>  // b.any
    a3fc:	ldr	w0, [x0, #36]
    a400:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a404:	cmp	w1, #0x190
    a408:	b.ne	a368 <ZSTD_CCtxParams_getParameter@@Base+0x24>  // b.any
    a40c:	ldr	w0, [x0, #76]
    a410:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a414:	ldr	w0, [x0]
    a418:	str	w0, [x2]
    a41c:	mov	x0, #0x0                   	// #0
    a420:	ret
    a424:	ldr	w0, [x0, #44]
    a428:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a42c:	ldr	w0, [x0, #4]
    a430:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a434:	ldr	w0, [x0, #12]
    a438:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a43c:	ldr	w0, [x0, #8]
    a440:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a444:	ldr	w0, [x0, #16]
    a448:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a44c:	ldr	w0, [x0, #20]
    a450:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a454:	ldr	w0, [x0, #24]
    a458:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a45c:	ldr	w0, [x0, #28]
    a460:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a464:	ldr	w0, [x0, #32]
    a468:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a46c:	ldr	w0, [x0, #40]
    a470:	cmp	w0, #0x0
    a474:	cset	w0, eq  // eq = none
    a478:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a47c:	ldr	w0, [x0, #48]
    a480:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a484:	ldr	w0, [x0, #68]
    a488:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a48c:	ldr	w0, [x0, #72]
    a490:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a494:	ldr	w0, [x0, #96]
    a498:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a49c:	ldr	w0, [x0, #100]
    a4a0:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a4a4:	ldr	w0, [x0, #108]
    a4a8:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a4ac:	ldr	w0, [x0, #104]
    a4b0:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a4b4:	ldr	w0, [x0, #112]
    a4b8:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a4bc:	ldr	x0, [x0, #56]
    a4c0:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>
    a4c4:	ldr	w0, [x0, #64]
    a4c8:	b	a418 <ZSTD_CCtxParams_getParameter@@Base+0xd4>

000000000000a4cc <ZSTD_CCtx_getParameter@@Base>:
    a4cc:	add	x0, x0, #0x10
    a4d0:	b	46c0 <ZSTD_CCtxParams_getParameter@plt>

000000000000a4d4 <ZSTD_CCtx_setParametersUsingCCtxParams@@Base>:
    a4d4:	ldr	w2, [x0, #1064]
    a4d8:	cbnz	w2, a504 <ZSTD_CCtx_setParametersUsingCCtxParams@@Base+0x30>
    a4dc:	ldr	x2, [x0, #1112]
    a4e0:	cbnz	x2, a504 <ZSTD_CCtx_setParametersUsingCCtxParams@@Base+0x30>
    a4e4:	stp	x29, x30, [sp, #-16]!
    a4e8:	mov	x2, #0x90                  	// #144
    a4ec:	add	x0, x0, #0x10
    a4f0:	mov	x29, sp
    a4f4:	bl	4460 <memcpy@plt>
    a4f8:	mov	x0, #0x0                   	// #0
    a4fc:	ldp	x29, x30, [sp], #16
    a500:	ret
    a504:	mov	x0, #0xffffffffffffffc4    	// #-60
    a508:	ret

000000000000a50c <ZSTD_CCtx_setPledgedSrcSize@@Base>:
    a50c:	ldr	w2, [x0, #1064]
    a510:	cbnz	w2, a524 <ZSTD_CCtx_setPledgedSrcSize@@Base+0x18>
    a514:	add	x1, x1, #0x1
    a518:	str	x1, [x0, #384]
    a51c:	mov	x0, #0x0                   	// #0
    a520:	ret
    a524:	mov	x0, #0xffffffffffffffc4    	// #-60
    a528:	b	a520 <ZSTD_CCtx_setPledgedSrcSize@@Base+0x14>

000000000000a52c <ZSTD_getFrameProgression@@Base>:
    a52c:	ldr	x1, [x0, #992]
    a530:	cbz	x1, a558 <ZSTD_getFrameProgression@@Base+0x2c>
    a534:	ldr	x2, [x0, #1008]
    a538:	ldr	x1, [x0, #1016]
    a53c:	sub	x1, x1, x2
    a540:	ldp	x2, x0, [x0, #392]
    a544:	stp	x0, x0, [x8, #16]
    a548:	str	xzr, [x8, #32]
    a54c:	add	x1, x2, x1
    a550:	stp	x1, x2, [x8]
    a554:	ret
    a558:	mov	x1, #0x0                   	// #0
    a55c:	b	a540 <ZSTD_getFrameProgression@@Base+0x14>

000000000000a560 <ZSTD_toFlushNow@@Base>:
    a560:	mov	x0, #0x0                   	// #0
    a564:	ret
    a568:	ldr	x0, [x0, #752]
    a56c:	mov	x1, #0x1200                	// #4608
    a570:	add	x1, x0, x1
    a574:	stur	xzr, [x1, #-28]
    a578:	str	wzr, [x0, #4588]
    a57c:	ret
    a580:	ldp	x3, x6, [x0]
    a584:	adrp	x1, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    a588:	ldp	x8, x7, [x0, #32]
    a58c:	add	x1, x1, #0x2a0
    a590:	ldr	x9, [x0, #48]
    a594:	add	x10, x1, #0x18
    a598:	sub	x6, x6, x3
    a59c:	add	x5, x1, #0x58
    a5a0:	mov	x4, #0x0                   	// #0
    a5a4:	ubfx	x6, x6, #3, #32
    a5a8:	cmp	w6, w4
    a5ac:	b.hi	a5e4 <ZSTD_toFlushNow@@Base+0x84>  // b.pmore
    a5b0:	ldr	w1, [x0, #72]
    a5b4:	cmp	w1, #0x1
    a5b8:	b.ne	a5c8 <ZSTD_toFlushNow@@Base+0x68>  // b.any
    a5bc:	ldr	w1, [x0, #76]
    a5c0:	mov	w2, #0x23                  	// #35
    a5c4:	strb	w2, [x8, x1]
    a5c8:	ldr	w1, [x0, #72]
    a5cc:	cmp	w1, #0x2
    a5d0:	b.ne	a5e0 <ZSTD_toFlushNow@@Base+0x80>  // b.any
    a5d4:	ldr	w0, [x0, #76]
    a5d8:	mov	w1, #0x34                  	// #52
    a5dc:	strb	w1, [x7, x0]
    a5e0:	ret
    a5e4:	ldrh	w2, [x3, #4]
    a5e8:	ldrh	w1, [x3, #6]
    a5ec:	cmp	w2, #0x3f
    a5f0:	b.ls	a638 <ZSTD_toFlushNow@@Base+0xd8>  // b.plast
    a5f4:	clz	w2, w2
    a5f8:	eor	w2, w2, #0x1f
    a5fc:	add	w2, w2, #0x13
    a600:	strb	w2, [x8, x4]
    a604:	cmp	w1, #0x7f
    a608:	ldr	w2, [x3]
    a60c:	clz	w2, w2
    a610:	eor	w2, w2, #0x1f
    a614:	strb	w2, [x9, x4]
    a618:	b.ls	a640 <ZSTD_toFlushNow@@Base+0xe0>  // b.plast
    a61c:	clz	w1, w1
    a620:	eor	w1, w1, #0x1f
    a624:	add	w1, w1, #0x24
    a628:	add	x3, x3, #0x8
    a62c:	strb	w1, [x7, x4]
    a630:	add	x4, x4, #0x1
    a634:	b	a5a8 <ZSTD_toFlushNow@@Base+0x48>
    a638:	ldrb	w2, [x10, x2]
    a63c:	b	a600 <ZSTD_toFlushNow@@Base+0xa0>
    a640:	ldrb	w1, [x5, x1]
    a644:	b	a628 <ZSTD_toFlushNow@@Base+0xc8>
    a648:	sxtw	x1, w1
    a64c:	mov	x2, #0xa                   	// #10
    a650:	mul	x1, x1, x2
    a654:	adrp	x2, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
    a658:	add	x2, x2, #0xce8
    a65c:	add	x1, x1, w0, sxtw
    a660:	ldr	x0, [x2, x1, lsl #3]
    a664:	ret
    a668:	ldr	x1, [x0, #16]
    a66c:	str	x1, [x0, #24]
    a670:	ldr	x1, [x0]
    a674:	str	x1, [x0, #8]
    a678:	str	wzr, [x0, #72]
    a67c:	ret
    a680:	sub	sp, sp, #0x210
    a684:	cmp	x4, #0x6
    a688:	stp	x29, x30, [sp, #64]
    a68c:	add	x29, sp, #0x40
    a690:	stp	x19, x20, [sp, #80]
    a694:	mov	x19, x0
    a698:	stp	x21, x22, [sp, #96]
    a69c:	mov	x21, x4
    a6a0:	stp	x23, x24, [sp, #112]
    a6a4:	stp	x25, x26, [sp, #128]
    a6a8:	stp	x27, x28, [sp, #144]
    a6ac:	str	x1, [sp, #160]
    a6b0:	str	x2, [sp, #184]
    a6b4:	str	w5, [sp, #228]
    a6b8:	b.hi	a6ec <ZSTD_toFlushNow@@Base+0x18c>  // b.pmore
    a6bc:	ldr	w2, [x19, #180]
    a6c0:	add	x0, x0, #0x2d0
    a6c4:	mov	x1, x4
    a6c8:	bl	1f9e0 <ZSTD_compress@@Base+0x11194>
    a6cc:	mov	x0, #0x0                   	// #0
    a6d0:	ldr	x1, [x19, #752]
    a6d4:	ldr	w2, [x1, #4568]
    a6d8:	cmp	w2, #0x2
    a6dc:	b.ne	a838 <ZSTD_toFlushNow@@Base+0x2d8>  // b.any
    a6e0:	mov	w2, #0x1                   	// #1
    a6e4:	str	w2, [x1, #4568]
    a6e8:	b	a838 <ZSTD_toFlushNow@@Base+0x2d8>
    a6ec:	add	x23, x19, #0x300
    a6f0:	add	x26, x0, #0x238
    a6f4:	mov	x22, x3
    a6f8:	mov	x0, x26
    a6fc:	bl	a668 <ZSTD_toFlushNow@@Base+0x108>
    a700:	ldr	w0, [x19, #232]
    a704:	ldr	x1, [x23, #8]
    a708:	ldr	x3, [x19, #752]
    a70c:	str	w0, [x23, #168]
    a710:	ldr	w0, [x23, #36]
    a714:	sub	x1, x22, x1
    a718:	str	x3, [x23, #160]
    a71c:	add	w2, w0, #0x180
    a720:	cmp	w1, w2
    a724:	b.ls	a744 <ZSTD_toFlushNow@@Base+0x1e4>  // b.plast
    a728:	sub	w0, w1, w0
    a72c:	mov	w2, #0xc0                  	// #192
    a730:	sub	w0, w0, #0x180
    a734:	cmp	w0, #0xc0
    a738:	csel	w0, w0, w2, ls  // ls = plast
    a73c:	sub	w0, w1, w0
    a740:	str	w0, [x23, #36]
    a744:	ldr	w1, [x19, #792]
    a748:	ldr	w0, [x19, #796]
    a74c:	cmp	w1, w0
    a750:	b.hi	a858 <ZSTD_toFlushNow@@Base+0x2f8>  // b.pmore
    a754:	ldr	x0, [x23, #176]
    a758:	cmp	x0, #0x0
    a75c:	cset	w0, ne  // ne = any
    a760:	lsl	w0, w0, #1
    a764:	ldr	x2, [x19, #760]
    a768:	ldr	w1, [x3, #4580]
    a76c:	str	w1, [x2, #4580]
    a770:	ldr	w1, [x3, #4584]
    a774:	str	w1, [x2, #4584]
    a778:	ldr	w1, [x3, #4588]
    a77c:	ldr	x3, [x19, #728]
    a780:	str	w1, [x2, #4588]
    a784:	ldr	x1, [x19, #736]
    a788:	cmp	x3, x1
    a78c:	b.cs	a860 <ZSTD_toFlushNow@@Base+0x300>  // b.hs, b.nlast
    a790:	mov	x7, #0x11e4                	// #4580
    a794:	mov	x5, x21
    a798:	add	x3, x2, x7
    a79c:	mov	x4, x22
    a7a0:	mov	x2, x26
    a7a4:	mov	x1, x23
    a7a8:	add	x0, x19, #0x2d0
    a7ac:	bl	1fa74 <ZSTD_compress@@Base+0x11228>
    a7b0:	mov	x2, x0
    a7b4:	mov	x20, x0
    a7b8:	sub	x1, x21, x0
    a7bc:	ldr	x0, [x19, #592]
    a7c0:	add	x1, x22, x1
    a7c4:	bl	4460 <memcpy@plt>
    a7c8:	ldr	x2, [x19, #592]
    a7cc:	ldr	w3, [x19, #528]
    a7d0:	ldr	x0, [x19, #568]
    a7d4:	add	x20, x2, x20
    a7d8:	str	x0, [sp, #192]
    a7dc:	str	x20, [x19, #592]
    a7e0:	cbz	w3, a9d4 <ZSTD_toFlushNow@@Base+0x474>
    a7e4:	ldr	x10, [x19, #536]
    a7e8:	mov	x8, #0x14                  	// #20
    a7ec:	ldr	x11, [x19, #544]
    a7f0:	adrp	x6, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    a7f4:	ldr	x3, [x26, #8]
    a7f8:	add	x6, x6, #0x2a0
    a7fc:	madd	x10, x11, x8, x10
    a800:	mov	w12, #0x3                   	// #3
    a804:	sub	x3, x3, x0
    a808:	add	x6, x6, #0xd8
    a80c:	ldr	x5, [sp, #192]
    a810:	asr	x3, x3, #3
    a814:	mov	x0, x10
    a818:	mov	x13, #0x0                   	// #0
    a81c:	mov	x4, #0x0                   	// #0
    a820:	movk	w12, #0x1, lsl #16
    a824:	cmp	x3, x4
    a828:	b.ne	a900 <ZSTD_toFlushNow@@Base+0x3a0>  // b.any
    a82c:	add	x3, x3, x11
    a830:	mov	x0, #0x0                   	// #0
    a834:	str	x3, [x19, #544]
    a838:	ldp	x29, x30, [sp, #64]
    a83c:	ldp	x19, x20, [sp, #80]
    a840:	ldp	x21, x22, [sp, #96]
    a844:	ldp	x23, x24, [sp, #112]
    a848:	ldp	x25, x26, [sp, #128]
    a84c:	ldp	x27, x28, [sp, #144]
    a850:	add	sp, sp, #0x210
    a854:	ret
    a858:	mov	w0, #0x1                   	// #1
    a85c:	b	a764 <ZSTD_toFlushNow@@Base+0x204>
    a860:	ldr	w1, [x19, #256]
    a864:	cbz	w1, a8c4 <ZSTD_toFlushNow@@Base+0x364>
    a868:	ldr	x0, [x19, #704]
    a86c:	add	x25, sp, #0x138
    a870:	stp	x0, xzr, [sp, #312]
    a874:	mov	x4, x21
    a878:	mov	x3, x22
    a87c:	ldr	x0, [x19, #712]
    a880:	add	x2, x19, #0x100
    a884:	mov	x1, x25
    a888:	str	xzr, [sp, #328]
    a88c:	str	x0, [sp, #336]
    a890:	add	x0, x19, #0x288
    a894:	bl	1f38c <ZSTD_compress@@Base+0x10b40>
    a898:	cmn	x0, #0x78
    a89c:	b.hi	a838 <ZSTD_toFlushNow@@Base+0x2d8>  // b.pmore
    a8a0:	ldr	x3, [x19, #760]
    a8a4:	mov	x6, #0x11e4                	// #4580
    a8a8:	mov	x5, x21
    a8ac:	mov	x4, x22
    a8b0:	mov	x2, x26
    a8b4:	mov	x1, x23
    a8b8:	mov	x0, x25
    a8bc:	add	x3, x3, x6
    a8c0:	b	a7ac <ZSTD_toFlushNow@@Base+0x24c>
    a8c4:	ldrsw	x1, [x19, #188]
    a8c8:	sxtw	x0, w0
    a8cc:	mov	x3, #0xa                   	// #10
    a8d0:	mov	x5, #0x11e4                	// #4580
    a8d4:	add	x2, x2, x5
    a8d8:	mov	x4, x21
    a8dc:	madd	x0, x0, x3, x1
    a8e0:	adrp	x1, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
    a8e4:	add	x1, x1, #0xce8
    a8e8:	mov	x3, x22
    a8ec:	ldr	x5, [x1, x0, lsl #3]
    a8f0:	mov	x1, x26
    a8f4:	mov	x0, x23
    a8f8:	blr	x5
    a8fc:	b	a7b0 <ZSTD_toFlushNow@@Base+0x250>
    a900:	ldrh	w2, [x5, #6]
    a904:	ldrh	w7, [x5, #4]
    a908:	ldr	w1, [x5]
    a90c:	add	w9, w2, #0x3
    a910:	stp	w1, w7, [x0, #4]
    a914:	str	w9, [x0, #12]
    a918:	ldr	w9, [x26, #76]
    a91c:	cmp	x4, x9
    a920:	b.ne	a938 <ZSTD_toFlushNow@@Base+0x3d8>  // b.any
    a924:	ldr	w9, [x26, #72]
    a928:	cmp	w9, #0x1
    a92c:	b.ne	a990 <ZSTD_toFlushNow@@Base+0x430>  // b.any
    a930:	add	w7, w7, #0x10, lsl #12
    a934:	str	w7, [x0, #8]
    a938:	ldr	w7, [x0, #8]
    a93c:	cmp	w1, #0x3
    a940:	b.hi	a9c8 <ZSTD_toFlushNow@@Base+0x468>  // b.pmore
    a944:	sub	w2, w4, w1
    a948:	cbz	w7, a9a4 <ZSTD_toFlushNow@@Base+0x444>
    a94c:	str	w1, [x0, #16]
    a950:	tbnz	w2, #31, a9bc <ZSTD_toFlushNow@@Base+0x45c>
    a954:	smaddl	x2, w2, w8, x10
    a958:	ldr	w9, [x2, #4]
    a95c:	ldr	w1, [x0, #16]
    a960:	sub	w2, w9, #0x1
    a964:	cmp	w1, #0x4
    a968:	csel	w2, w2, w9, eq  // eq = none
    a96c:	str	w2, [x0, #4]
    a970:	add	x1, x13, w7, uxtw
    a974:	ldr	w13, [x0, #12]
    a978:	add	x4, x4, #0x1
    a97c:	add	x5, x5, #0x8
    a980:	add	x13, x13, x1
    a984:	add	x0, x0, #0x14
    a988:	stur	w1, [x0, #-20]
    a98c:	b	a824 <ZSTD_toFlushNow@@Base+0x2c4>
    a990:	cmp	w9, #0x2
    a994:	b.ne	a938 <ZSTD_toFlushNow@@Base+0x3d8>  // b.any
    a998:	add	w2, w2, w12
    a99c:	str	w2, [x0, #12]
    a9a0:	b	a938 <ZSTD_toFlushNow@@Base+0x3d8>
    a9a4:	cmp	w1, #0x3
    a9a8:	sub	w2, w2, #0x1
    a9ac:	sub	w9, w4, #0x1
    a9b0:	add	w1, w1, #0x1
    a9b4:	csel	w2, w9, w2, eq  // eq = none
    a9b8:	b	a94c <ZSTD_toFlushNow@@Base+0x3ec>
    a9bc:	mvn	w2, w2
    a9c0:	ldr	w9, [x6, w2, sxtw #2]
    a9c4:	b	a95c <ZSTD_toFlushNow@@Base+0x3fc>
    a9c8:	sub	w1, w1, #0x3
    a9cc:	str	w1, [x0, #4]
    a9d0:	b	a970 <ZSTD_toFlushNow@@Base+0x410>
    a9d4:	ldr	w1, [x19, #164]
    a9d8:	ldr	w0, [x19, #8]
    a9dc:	stp	w0, w1, [sp, #248]
    a9e0:	ldr	w1, [x19, #188]
    a9e4:	ldp	x27, x6, [x26, #8]
    a9e8:	str	w1, [sp, #168]
    a9ec:	ldr	x1, [x26, #48]
    a9f0:	str	x1, [sp, #200]
    a9f4:	ldr	x1, [x26, #32]
    a9f8:	str	x1, [sp, #208]
    a9fc:	ldr	x1, [x26, #40]
    aa00:	str	x1, [sp, #216]
    aa04:	ldr	w1, [x19, #232]
    aa08:	sub	x7, x20, x6
    aa0c:	ldr	x24, [x19, #752]
    aa10:	cmp	w1, #0x1
    aa14:	ldr	x23, [x19, #760]
    aa18:	ldr	x25, [x19, #984]
    aa1c:	b.eq	aa40 <ZSTD_toFlushNow@@Base+0x4e0>  // b.none
    aa20:	cmp	w1, #0x2
    aa24:	b.eq	ab18 <ZSTD_toFlushNow@@Base+0x5b8>  // b.none
    aa28:	ldr	w1, [sp, #168]
    aa2c:	cmp	w1, #0x1
    aa30:	b.ne	aa40 <ZSTD_toFlushNow@@Base+0x4e0>  // b.any
    aa34:	ldr	w0, [x19, #184]
    aa38:	cmp	w0, #0x0
    aa3c:	cset	w3, ne  // ne = any
    aa40:	ldr	w0, [sp, #248]
    aa44:	mov	x1, x23
    aa48:	ldr	w2, [sp, #168]
    aa4c:	ldr	x4, [sp, #160]
    aa50:	str	x25, [sp]
    aa54:	ldr	x5, [sp, #184]
    aa58:	str	w0, [sp, #16]
    aa5c:	mov	x0, #0x1800                	// #6144
    aa60:	str	x0, [sp, #8]
    aa64:	mov	x0, x24
    aa68:	bl	ea08 <ZSTD_compress@@Base+0x1bc>
    aa6c:	cmn	x0, #0x78
    aa70:	b.hi	aa90 <ZSTD_toFlushNow@@Base+0x530>  // b.pmore
    aa74:	ldr	x1, [sp, #160]
    aa78:	add	x9, x1, x0
    aa7c:	ldr	x1, [sp, #184]
    aa80:	sub	x0, x1, x0
    aa84:	cmp	x0, #0x3
    aa88:	b.gt	ab20 <ZSTD_toFlushNow@@Base+0x5c0>
    aa8c:	mov	x0, #0xffffffffffffffba    	// #-70
    aa90:	ldr	x1, [sp, #184]
    aa94:	cmn	x0, #0x46
    aa98:	ccmp	x21, x1, #0x2, eq  // eq = none
    aa9c:	b.ls	af4c <ZSTD_toFlushNow@@Base+0x9ec>  // b.plast
    aaa0:	cmn	x0, #0x78
    aaa4:	b.hi	af50 <ZSTD_toFlushNow@@Base+0x9f0>  // b.pmore
    aaa8:	ldr	w1, [x19, #188]
    aaac:	cmp	w1, #0x7
    aab0:	sub	w2, w1, #0x1
    aab4:	mov	w1, #0x6                   	// #6
    aab8:	csel	w2, w2, w1, hi  // hi = pmore
    aabc:	sub	x1, x21, #0x2
    aac0:	lsr	x2, x21, x2
    aac4:	sub	x1, x1, x2
    aac8:	cmp	x1, x0
    aacc:	b.ls	af4c <ZSTD_toFlushNow@@Base+0x9ec>  // b.plast
    aad0:	ldr	w1, [sp, #228]
    aad4:	cbz	w1, af64 <ZSTD_toFlushNow@@Base+0xa04>
    aad8:	ldr	w1, [x19, #560]
    aadc:	cbnz	w1, af5c <ZSTD_toFlushNow@@Base+0x9fc>
    aae0:	cmp	x0, #0x18
    aae4:	b.hi	af5c <ZSTD_toFlushNow@@Base+0x9fc>  // b.pmore
    aae8:	ldrb	w2, [x22]
    aaec:	mov	x1, #0x1                   	// #1
    aaf0:	ldrb	w3, [x22, x1]
    aaf4:	cmp	w3, w2
    aaf8:	b.ne	af64 <ZSTD_toFlushNow@@Base+0xa04>  // b.any
    aafc:	add	x1, x1, #0x1
    ab00:	cmp	x21, x1
    ab04:	b.ne	aaf0 <ZSTD_toFlushNow@@Base+0x590>  // b.any
    ab08:	ldr	x0, [sp, #160]
    ab0c:	strb	w2, [x0]
    ab10:	mov	x0, #0x1                   	// #1
    ab14:	b	a6d0 <ZSTD_toFlushNow@@Base+0x170>
    ab18:	mov	w3, #0x1                   	// #1
    ab1c:	b	aa40 <ZSTD_toFlushNow@@Base+0x4e0>
    ab20:	add	x0, x23, #0x404
    ab24:	str	x0, [sp, #240]
    ab28:	ldr	x0, [sp, #192]
    ab2c:	sub	x0, x27, x0
    ab30:	cmp	x0, #0x3ff
    ab34:	asr	x28, x0, #3
    ab38:	b.hi	aef0 <ZSTD_toFlushNow@@Base+0x990>  // b.pmore
    ab3c:	mov	x27, x9
    ab40:	strb	w28, [x27], #1
    ab44:	cbz	x28, af30 <ZSTD_toFlushNow@@Base+0x9d0>
    ab48:	add	x0, x23, #0xcb4
    ab4c:	str	x0, [sp, #256]
    ab50:	ldr	x0, [sp, #160]
    ab54:	add	x20, x27, #0x1
    ab58:	ldr	x1, [sp, #184]
    ab5c:	add	x0, x0, x1
    ab60:	str	x0, [sp, #176]
    ab64:	mov	x0, x26
    ab68:	bl	a580 <ZSTD_toFlushNow@@Base+0x20>
    ab6c:	ldr	x2, [sp, #208]
    ab70:	add	x14, sp, #0x134
    ab74:	mov	w12, #0x23                  	// #35
    ab78:	add	x26, sp, #0x138
    ab7c:	mov	x1, x14
    ab80:	mov	x4, x25
    ab84:	mov	x3, x28
    ab88:	mov	x5, #0x1800                	// #6144
    ab8c:	mov	x0, x26
    ab90:	str	x14, [sp, #280]
    ab94:	str	w12, [sp, #308]
    ab98:	bl	7dec <ZSTD_getErrorString@@Base+0x12a0>
    ab9c:	ldr	w1, [x24, #4576]
    aba0:	adrp	x7, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    aba4:	str	w1, [x23, #4576]
    aba8:	add	x1, x7, #0x2a0
    abac:	add	x7, x1, #0xe4
    abb0:	mov	x2, #0x11e0                	// #4576
    abb4:	str	x1, [sp, #232]
    abb8:	mov	x3, x0
    abbc:	ldr	w1, [sp, #168]
    abc0:	add	x0, x23, x2
    abc4:	ldr	w2, [sp, #308]
    abc8:	add	x6, x24, #0xcb4
    abcc:	str	w1, [sp, #16]
    abd0:	mov	w1, #0x1                   	// #1
    abd4:	str	w1, [sp, #8]
    abd8:	mov	w1, #0x6                   	// #6
    abdc:	str	w1, [sp]
    abe0:	mov	x4, x28
    abe4:	mov	x1, x26
    abe8:	mov	w5, #0x9                   	// #9
    abec:	stp	x6, x7, [sp, #264]
    abf0:	bl	ee44 <ZSTD_compress@@Base+0x5f8>
    abf4:	mov	w12, #0x23                  	// #35
    abf8:	str	w0, [sp, #224]
    abfc:	mov	x0, #0x1800                	// #6144
    ac00:	ldp	x6, x7, [sp, #264]
    ac04:	str	x0, [sp, #56]
    ac08:	mov	x0, #0x524                 	// #1316
    ac0c:	ldr	w4, [sp, #224]
    ac10:	stp	x28, x7, [sp]
    ac14:	mov	x5, x26
    ac18:	add	x2, x23, #0xcb4
    ac1c:	str	x6, [sp, #32]
    ac20:	mov	w3, #0x9                   	// #9
    ac24:	ldr	w6, [sp, #308]
    ac28:	str	x0, [sp, #40]
    ac2c:	mov	w0, #0x6                   	// #6
    ac30:	ldr	x7, [sp, #208]
    ac34:	str	w0, [sp, #16]
    ac38:	ldr	x0, [sp, #176]
    ac3c:	str	w12, [sp, #24]
    ac40:	str	x25, [sp, #48]
    ac44:	sub	x1, x0, x20
    ac48:	mov	x0, x20
    ac4c:	bl	f098 <ZSTD_compress@@Base+0x84c>
    ac50:	cmn	x0, #0x78
    ac54:	b.hi	aa90 <ZSTD_toFlushNow@@Base+0x530>  // b.pmore
    ac58:	ldr	w1, [sp, #224]
    ac5c:	mov	x4, x25
    ac60:	ldr	x2, [sp, #200]
    ac64:	cmp	w1, #0x2
    ac68:	ldr	x14, [sp, #280]
    ac6c:	csel	x12, x20, xzr, eq  // eq = none
    ac70:	add	x20, x20, x0
    ac74:	mov	w0, #0x1f                  	// #31
    ac78:	mov	x1, x14
    ac7c:	mov	x3, x28
    ac80:	mov	x5, #0x1800                	// #6144
    ac84:	stp	x14, x12, [sp, #288]
    ac88:	str	w0, [sp, #308]
    ac8c:	mov	x0, x26
    ac90:	bl	7dec <ZSTD_getErrorString@@Base+0x12a0>
    ac94:	mov	x3, x0
    ac98:	mov	x1, #0x11d8                	// #4568
    ac9c:	add	x0, x23, x1
    aca0:	ldr	w1, [x24, #4568]
    aca4:	mov	w15, #0x5                   	// #5
    aca8:	ldr	w2, [sp, #308]
    acac:	add	x6, x24, #0x404
    acb0:	str	w1, [x23, #4568]
    acb4:	mov	x4, x28
    acb8:	ldr	x1, [sp, #232]
    acbc:	cmp	w2, #0x1c
    acc0:	str	w15, [sp]
    acc4:	mov	w5, #0x8                   	// #8
    acc8:	add	x7, x1, #0x12c
    accc:	ldr	w1, [sp, #168]
    acd0:	str	w1, [sp, #16]
    acd4:	cset	w1, ls  // ls = plast
    acd8:	str	w1, [sp, #8]
    acdc:	mov	x1, x26
    ace0:	stp	x6, x7, [sp, #264]
    ace4:	bl	ee44 <ZSTD_compress@@Base+0x5f8>
    ace8:	mov	w13, w0
    acec:	mov	x0, #0x1800                	// #6144
    acf0:	ldp	x6, x7, [sp, #264]
    acf4:	stp	x25, x0, [sp, #48]
    acf8:	mov	x0, #0x304                 	// #772
    acfc:	stp	x28, x7, [sp]
    ad00:	mov	w15, #0x5                   	// #5
    ad04:	mov	x5, x26
    ad08:	str	x6, [sp, #32]
    ad0c:	mov	w4, w13
    ad10:	ldr	w6, [sp, #308]
    ad14:	add	x2, x23, #0x404
    ad18:	str	x0, [sp, #40]
    ad1c:	mov	w0, #0x1c                  	// #28
    ad20:	ldr	x7, [sp, #200]
    ad24:	str	w0, [sp, #24]
    ad28:	ldr	x0, [sp, #176]
    ad2c:	str	w15, [sp, #16]
    ad30:	mov	w3, #0x8                   	// #8
    ad34:	str	w13, [sp, #264]
    ad38:	sub	x1, x0, x20
    ad3c:	mov	x0, x20
    ad40:	bl	f098 <ZSTD_compress@@Base+0x84c>
    ad44:	cmn	x0, #0x78
    ad48:	b.hi	aa90 <ZSTD_toFlushNow@@Base+0x530>  // b.pmore
    ad4c:	ldp	x14, x12, [sp, #288]
    ad50:	add	x15, x23, #0x708
    ad54:	ldr	w13, [sp, #264]
    ad58:	mov	w18, #0x34                  	// #52
    ad5c:	ldr	x2, [sp, #216]
    ad60:	cmp	w13, #0x2
    ad64:	mov	x4, x25
    ad68:	mov	x3, x28
    ad6c:	csel	x12, x12, x20, ne  // ne = any
    ad70:	mov	x1, x14
    ad74:	add	x20, x20, x0
    ad78:	mov	x5, #0x1800                	// #6144
    ad7c:	mov	x0, x26
    ad80:	stp	x15, x12, [sp, #264]
    ad84:	str	w13, [sp, #280]
    ad88:	str	w18, [sp, #308]
    ad8c:	bl	7dec <ZSTD_getErrorString@@Base+0x12a0>
    ad90:	ldr	w1, [x24, #4572]
    ad94:	add	x6, x24, #0x708
    ad98:	str	w1, [x23, #4572]
    ad9c:	mov	x3, x0
    ada0:	ldr	x1, [sp, #232]
    ada4:	mov	x4, x28
    ada8:	ldr	w2, [sp, #308]
    adac:	mov	w5, #0x9                   	// #9
    adb0:	add	x7, x1, #0x166
    adb4:	ldr	w1, [sp, #168]
    adb8:	str	w1, [sp, #16]
    adbc:	mov	x0, #0x11dc                	// #4572
    adc0:	mov	w1, #0x1                   	// #1
    adc4:	str	w1, [sp, #8]
    adc8:	mov	w1, #0x6                   	// #6
    adcc:	str	w1, [sp]
    add0:	add	x0, x23, x0
    add4:	mov	x1, x26
    add8:	str	x6, [sp, #168]
    addc:	str	x7, [sp, #232]
    ade0:	bl	ee44 <ZSTD_compress@@Base+0x5f8>
    ade4:	mov	w23, w0
    ade8:	mov	x0, #0x1800                	// #6144
    adec:	stp	x25, x0, [sp, #48]
    adf0:	mov	x0, #0x5ac                 	// #1452
    adf4:	mov	w18, #0x34                  	// #52
    adf8:	ldr	x6, [sp, #168]
    adfc:	str	x6, [sp, #32]
    ae00:	ldr	x7, [sp, #232]
    ae04:	stp	x28, x7, [sp]
    ae08:	ldr	w6, [sp, #308]
    ae0c:	str	x0, [sp, #40]
    ae10:	mov	w0, #0x6                   	// #6
    ae14:	ldr	x7, [sp, #216]
    ae18:	str	w0, [sp, #16]
    ae1c:	ldr	x15, [sp, #264]
    ae20:	str	w18, [sp, #24]
    ae24:	ldr	x0, [sp, #176]
    ae28:	mov	x5, x26
    ae2c:	mov	w4, w23
    ae30:	mov	x2, x15
    ae34:	sub	x1, x0, x20
    ae38:	mov	w3, #0x9                   	// #9
    ae3c:	mov	x0, x20
    ae40:	str	x15, [sp, #232]
    ae44:	bl	f098 <ZSTD_compress@@Base+0x84c>
    ae48:	cmn	x0, #0x78
    ae4c:	b.hi	aa90 <ZSTD_toFlushNow@@Base+0x530>  // b.pmore
    ae50:	ldr	w13, [sp, #280]
    ae54:	cmp	w23, #0x2
    ae58:	ldr	x12, [sp, #272]
    ae5c:	ldr	w1, [sp, #224]
    ae60:	csel	x12, x12, x20, ne  // ne = any
    ae64:	add	x20, x20, x0
    ae68:	lsl	w0, w13, #4
    ae6c:	str	x12, [sp, #168]
    ae70:	add	w0, w0, w1, lsl #6
    ae74:	add	w23, w0, w23, lsl #2
    ae78:	ldr	w0, [sp, #248]
    ae7c:	strb	w23, [x27]
    ae80:	str	w0, [sp, #24]
    ae84:	ldr	w0, [sp, #252]
    ae88:	ldp	x5, x7, [sp, #200]
    ae8c:	cmp	w0, #0x39
    ae90:	ldp	x15, x4, [sp, #232]
    ae94:	cset	w0, hi  // hi = pmore
    ae98:	str	w0, [sp, #16]
    ae9c:	ldr	x0, [sp, #192]
    aea0:	str	x0, [sp]
    aea4:	ldr	x3, [sp, #216]
    aea8:	str	x28, [sp, #8]
    aeac:	ldr	x6, [sp, #256]
    aeb0:	mov	x2, x15
    aeb4:	ldr	x0, [sp, #176]
    aeb8:	sub	x1, x0, x20
    aebc:	mov	x0, x20
    aec0:	bl	f238 <ZSTD_compress@@Base+0x9ec>
    aec4:	cmn	x0, #0x78
    aec8:	b.hi	aa90 <ZSTD_toFlushNow@@Base+0x530>  // b.pmore
    aecc:	ldr	x12, [sp, #168]
    aed0:	add	x0, x20, x0
    aed4:	cbz	x12, aee4 <ZSTD_toFlushNow@@Base+0x984>
    aed8:	sub	x12, x0, x12
    aedc:	cmp	x12, #0x3
    aee0:	b.le	af4c <ZSTD_toFlushNow@@Base+0x9ec>
    aee4:	ldr	x1, [sp, #160]
    aee8:	sub	x0, x0, x1
    aeec:	b	af48 <ZSTD_toFlushNow@@Base+0x9e8>
    aef0:	mov	x0, #0x7eff                	// #32511
    aef4:	cmp	x28, x0
    aef8:	b.hi	af14 <ZSTD_toFlushNow@@Base+0x9b4>  // b.pmore
    aefc:	lsr	x0, x28, #8
    af00:	add	x27, x9, #0x2
    af04:	sub	w0, w0, #0x80
    af08:	strb	w0, [x9]
    af0c:	strb	w28, [x9, #1]
    af10:	b	ab48 <ZSTD_toFlushNow@@Base+0x5e8>
    af14:	mov	w0, #0xffffffff            	// #-1
    af18:	mov	w3, #0xffff8100            	// #-32512
    af1c:	add	x27, x9, #0x3
    af20:	strb	w0, [x9]
    af24:	add	w0, w28, w3
    af28:	sturh	w0, [x9, #1]
    af2c:	b	ab48 <ZSTD_toFlushNow@@Base+0x5e8>
    af30:	ldr	x0, [sp, #240]
    af34:	add	x1, x24, #0x404
    af38:	mov	x2, #0xde0                 	// #3552
    af3c:	bl	4460 <memcpy@plt>
    af40:	ldr	x0, [sp, #160]
    af44:	sub	x0, x27, x0
    af48:	cbnz	x0, aa90 <ZSTD_toFlushNow@@Base+0x530>
    af4c:	mov	x0, #0x0                   	// #0
    af50:	ldr	w1, [sp, #228]
    af54:	cbnz	w1, aad8 <ZSTD_toFlushNow@@Base+0x578>
    af58:	b	a6d0 <ZSTD_toFlushNow@@Base+0x170>
    af5c:	cmn	x0, #0x78
    af60:	b.hi	a6d0 <ZSTD_toFlushNow@@Base+0x170>  // b.pmore
    af64:	cmp	x0, #0x1
    af68:	ldr	x1, [x19, #752]
    af6c:	b.ls	a6d0 <ZSTD_toFlushNow@@Base+0x170>  // b.plast
    af70:	ldr	x2, [x19, #760]
    af74:	str	x2, [x19, #752]
    af78:	str	x1, [x19, #760]
    af7c:	b	a6d0 <ZSTD_toFlushNow@@Base+0x170>
    af80:	stp	x29, x30, [sp, #-144]!
    af84:	mov	x29, sp
    af88:	stp	x25, x26, [sp, #64]
    af8c:	mov	x26, x0
    af90:	ldr	w0, [x0]
    af94:	stp	x19, x20, [sp, #16]
    af98:	stp	x21, x22, [sp, #32]
    af9c:	stp	x23, x24, [sp, #48]
    afa0:	stp	x27, x28, [sp, #80]
    afa4:	str	w6, [sp, #100]
    afa8:	cbz	w0, b238 <ZSTD_toFlushNow@@Base+0xcd8>
    afac:	mov	x21, x1
    afb0:	mov	x19, x2
    afb4:	mov	x27, x3
    afb8:	mov	x20, x4
    afbc:	mov	w12, w5
    afc0:	cbz	w5, b098 <ZSTD_toFlushNow@@Base+0xb38>
    afc4:	cmp	w0, #0x1
    afc8:	b.ne	b098 <ZSTD_toFlushNow@@Base+0xb38>  // b.any
    afcc:	ldr	w4, [x26, #304]
    afd0:	add	x2, x26, #0xa0
    afd4:	ldr	x3, [x26, #384]
    afd8:	mov	x1, x19
    afdc:	mov	x0, x21
    afe0:	sub	x3, x3, #0x1
    afe4:	bl	93f4 <ZSTD_getErrorString@@Base+0x28a8>
    afe8:	mov	x6, x0
    afec:	cmn	x0, #0x78
    aff0:	b.hi	b2a8 <ZSTD_toFlushNow@@Base+0xd48>  // b.pmore
    aff4:	mov	x22, x6
    aff8:	sub	x19, x19, x0
    affc:	add	x21, x21, x0
    b000:	mov	w0, #0x2                   	// #2
    b004:	str	w0, [x26]
    b008:	cbz	x20, b240 <ZSTD_toFlushNow@@Base+0xce0>
    b00c:	add	x28, x26, #0x300
    b010:	mov	x2, x20
    b014:	mov	x1, x27
    b018:	mov	x0, x28
    b01c:	bl	9214 <ZSTD_getErrorString@@Base+0x26c8>
    b020:	cbnz	w0, b02c <ZSTD_toFlushNow@@Base+0xacc>
    b024:	ldr	w0, [x28, #24]
    b028:	str	w0, [x28, #36]
    b02c:	ldr	w0, [x26, #256]
    b030:	cbz	w0, b044 <ZSTD_toFlushNow@@Base+0xae4>
    b034:	mov	x2, x20
    b038:	mov	x1, x27
    b03c:	add	x0, x26, #0x288
    b040:	bl	9214 <ZSTD_getErrorString@@Base+0x26c8>
    b044:	cbnz	w12, b248 <ZSTD_toFlushNow@@Base+0xce8>
    b048:	ldr	x1, [x26, #776]
    b04c:	add	x0, x27, x20
    b050:	sub	x0, x0, x1
    b054:	mov	w1, #0xe0000000            	// #-536870912
    b058:	cmp	w0, w1
    b05c:	b.ls	b074 <ZSTD_toFlushNow@@Base+0xb14>  // b.plast
    b060:	mov	x3, x27
    b064:	add	x2, x26, #0xa0
    b068:	add	x1, x26, #0x138
    b06c:	mov	x0, x28
    b070:	bl	9700 <ZSTD_getErrorString@@Base+0x2bb4>
    b074:	mov	x4, x20
    b078:	mov	x3, x27
    b07c:	mov	x2, x19
    b080:	mov	x1, x21
    b084:	mov	x0, x26
    b088:	mov	w5, #0x0                   	// #0
    b08c:	bl	a680 <ZSTD_toFlushNow@@Base+0x120>
    b090:	mov	x6, x0
    b094:	b	b1d4 <ZSTD_toFlushNow@@Base+0xc74>
    b098:	mov	x22, #0x0                   	// #0
    b09c:	b	b008 <ZSTD_toFlushNow@@Base+0xaa8>
    b0a0:	ldr	x27, [sp, #104]
    b0a4:	b	b28c <ZSTD_toFlushNow@@Base+0xd2c>
    b0a8:	cmp	x23, x25
    b0ac:	csel	x23, x23, x25, ls  // ls = plast
    b0b0:	add	x0, x27, x23
    b0b4:	str	x0, [sp, #104]
    b0b8:	ldr	x0, [x26, #776]
    b0bc:	add	x1, x27, x23
    b0c0:	sub	x0, x1, x0
    b0c4:	mov	w1, #0xe0000000            	// #-536870912
    b0c8:	cmp	w0, w1
    b0cc:	b.ls	b0e8 <ZSTD_toFlushNow@@Base+0xb88>  // b.plast
    b0d0:	ldp	x2, x1, [sp, #112]
    b0d4:	mov	x3, x27
    b0d8:	mov	x0, x28
    b0dc:	str	w8, [sp, #128]
    b0e0:	bl	9700 <ZSTD_getErrorString@@Base+0x2bb4>
    b0e4:	ldr	w8, [sp, #128]
    b0e8:	ldr	x0, [x26, #776]
    b0ec:	add	x1, x27, x23
    b0f0:	ldr	w2, [sp, #136]
    b0f4:	sub	x0, x1, x0
    b0f8:	ldr	w1, [x26, #800]
    b0fc:	add	w1, w2, w1
    b100:	cmp	w1, w0
    b104:	b.cs	b110 <ZSTD_toFlushNow@@Base+0xbb0>  // b.hs, b.nlast
    b108:	str	wzr, [x26, #800]
    b10c:	str	xzr, [x26, #944]
    b110:	ldr	w0, [x28, #28]
    b114:	ldr	w1, [x28, #36]
    b118:	cmp	w1, w0
    b11c:	b.cs	b124 <ZSTD_toFlushNow@@Base+0xbc4>  // b.hs, b.nlast
    b120:	str	w0, [x28, #36]
    b124:	add	x13, x24, #0x3
    b128:	mov	x4, x23
    b12c:	mov	x3, x27
    b130:	sub	x2, x19, #0x3
    b134:	mov	x1, x13
    b138:	mov	x0, x26
    b13c:	mov	w5, #0x1                   	// #1
    b140:	str	x13, [sp, #128]
    b144:	str	w8, [sp, #140]
    b148:	bl	a680 <ZSTD_toFlushNow@@Base+0x120>
    b14c:	mov	x6, x0
    b150:	cmn	x0, #0x78
    b154:	b.hi	b2a8 <ZSTD_toFlushNow@@Base+0xd48>  // b.pmore
    b158:	ldr	w8, [sp, #140]
    b15c:	ldr	x13, [sp, #128]
    b160:	cbnz	x0, b20c <ZSTD_toFlushNow@@Base+0xcac>
    b164:	add	x6, x23, #0x3
    b168:	str	x6, [sp, #128]
    b16c:	cmp	x6, x19
    b170:	b.hi	b2a4 <ZSTD_toFlushNow@@Base+0xd44>  // b.pmore
    b174:	add	w8, w8, w23, lsl #3
    b178:	strh	w8, [x24]
    b17c:	mov	x2, x23
    b180:	mov	x1, x27
    b184:	lsr	w8, w8, #16
    b188:	strb	w8, [x24, #2]
    b18c:	mov	x0, x13
    b190:	bl	4460 <memcpy@plt>
    b194:	ldr	x6, [sp, #128]
    b198:	cmn	x6, #0x78
    b19c:	b.hi	b2a8 <ZSTD_toFlushNow@@Base+0xd48>  // b.pmore
    b1a0:	str	wzr, [x26, #560]
    b1a4:	add	x24, x24, x6
    b1a8:	sub	x19, x19, x6
    b1ac:	subs	x25, x25, x23
    b1b0:	b.ne	b0a0 <ZSTD_toFlushNow@@Base+0xb40>  // b.any
    b1b4:	cmp	x21, x24
    b1b8:	ldr	w1, [sp, #100]
    b1bc:	cset	w0, cc  // cc = lo, ul, last
    b1c0:	tst	w1, w0
    b1c4:	b.eq	b1d0 <ZSTD_toFlushNow@@Base+0xc70>  // b.none
    b1c8:	mov	w0, #0x3                   	// #3
    b1cc:	str	w0, [x26]
    b1d0:	sub	x6, x24, x21
    b1d4:	cmn	x6, #0x78
    b1d8:	b.hi	b2a8 <ZSTD_toFlushNow@@Base+0xd48>  // b.pmore
    b1dc:	ldp	x4, x0, [x26, #392]
    b1e0:	add	x6, x6, x22
    b1e4:	add	x0, x0, x6
    b1e8:	add	x20, x20, x4
    b1ec:	stp	x20, x0, [x26, #392]
    b1f0:	ldr	x0, [x26, #384]
    b1f4:	cbz	x0, b2a8 <ZSTD_toFlushNow@@Base+0xd48>
    b1f8:	add	x20, x20, #0x1
    b1fc:	cmp	x0, x20
    b200:	mov	x0, #0xffffffffffffffb8    	// #-72
    b204:	csel	x6, x6, x0, cs  // cs = hs, nlast
    b208:	b	b2a8 <ZSTD_toFlushNow@@Base+0xd48>
    b20c:	add	w0, w8, w23, lsl #3
    b210:	add	w8, w8, #0x4
    b214:	add	w8, w8, w6, lsl #3
    b218:	cmp	x6, #0x1
    b21c:	add	w0, w0, #0x2
    b220:	add	x6, x6, #0x3
    b224:	csel	w8, w8, w0, ne  // ne = any
    b228:	strh	w8, [x24]
    b22c:	lsr	w8, w8, #16
    b230:	strb	w8, [x24, #2]
    b234:	b	b1a0 <ZSTD_toFlushNow@@Base+0xc40>
    b238:	mov	x6, #0xffffffffffffffc4    	// #-60
    b23c:	b	b2a8 <ZSTD_toFlushNow@@Base+0xd48>
    b240:	mov	x6, x22
    b244:	b	b2a8 <ZSTD_toFlushNow@@Base+0xd48>
    b248:	ldr	w0, [x26, #196]
    b24c:	ldr	w24, [x26, #164]
    b250:	ldr	x23, [x26, #376]
    b254:	cbz	w0, b268 <ZSTD_toFlushNow@@Base+0xd08>
    b258:	mov	x2, x20
    b25c:	mov	x1, x27
    b260:	add	x0, x26, #0x198
    b264:	bl	6728 <ZSTD_initDStream_usingDDict@plt+0x1ba8>
    b268:	mov	w0, #0x1                   	// #1
    b26c:	mov	x25, x20
    b270:	lsl	w0, w0, w24
    b274:	mov	x24, x21
    b278:	str	w0, [sp, #136]
    b27c:	add	x0, x26, #0xa0
    b280:	str	x0, [sp, #112]
    b284:	add	x0, x26, #0x138
    b288:	str	x0, [sp, #120]
    b28c:	cmp	x23, x25
    b290:	ldr	w0, [sp, #100]
    b294:	cset	w8, cs  // cs = hs, nlast
    b298:	cmp	x19, #0x5
    b29c:	and	w8, w8, w0
    b2a0:	b.hi	b0a8 <ZSTD_toFlushNow@@Base+0xb48>  // b.pmore
    b2a4:	mov	x6, #0xffffffffffffffba    	// #-70
    b2a8:	mov	x0, x6
    b2ac:	ldp	x19, x20, [sp, #16]
    b2b0:	ldp	x21, x22, [sp, #32]
    b2b4:	ldp	x23, x24, [sp, #48]
    b2b8:	ldp	x25, x26, [sp, #64]
    b2bc:	ldp	x27, x28, [sp, #80]
    b2c0:	ldp	x29, x30, [sp], #144
    b2c4:	ret
    b2c8:	cmp	x1, #0x2
    b2cc:	b.ls	b2e4 <ZSTD_toFlushNow@@Base+0xd84>  // b.plast
    b2d0:	mov	w1, #0x1                   	// #1
    b2d4:	strh	w1, [x0]
    b2d8:	strb	wzr, [x0, #2]
    b2dc:	mov	x0, #0x3                   	// #3
    b2e0:	ret
    b2e4:	mov	x0, #0xffffffffffffffba    	// #-70
    b2e8:	b	b2e0 <ZSTD_toFlushNow@@Base+0xd80>
    b2ec:	ldr	w3, [x0]
    b2f0:	cmp	w3, #0x1
    b2f4:	b.ne	b314 <ZSTD_toFlushNow@@Base+0xdb4>  // b.any
    b2f8:	ldr	w3, [x0, #256]
    b2fc:	cbnz	w3, b31c <ZSTD_toFlushNow@@Base+0xdbc>
    b300:	add	x3, x0, #0x2d0
    b304:	mov	x0, #0x0                   	// #0
    b308:	stp	x1, xzr, [x3]
    b30c:	stp	x2, x2, [x3, #16]
    b310:	ret
    b314:	mov	x0, #0xffffffffffffffc4    	// #-60
    b318:	b	b310 <ZSTD_toFlushNow@@Base+0xdb0>
    b31c:	mov	x0, #0xffffffffffffffd8    	// #-40
    b320:	b	b310 <ZSTD_toFlushNow@@Base+0xdb0>
    b324:	stp	x29, x30, [sp, #-256]!
    b328:	mov	x29, sp
    b32c:	stp	x25, x26, [sp, #64]
    b330:	mov	x25, x0
    b334:	add	x26, x0, #0x138
    b338:	mov	w0, #0x1                   	// #1
    b33c:	stp	x19, x20, [sp, #16]
    b340:	mov	x19, x1
    b344:	stp	x21, x22, [sp, #32]
    b348:	stp	x23, x24, [sp, #48]
    b34c:	mov	w24, w4
    b350:	add	x23, x1, #0x4
    b354:	stp	x27, x28, [sp, #80]
    b358:	add	x27, x1, #0x60
    b35c:	str	w0, [x25, #560]
    b360:	ldr	w0, [x1, #96]
    b364:	str	x2, [sp, #104]
    b368:	str	w3, [sp, #124]
    b36c:	cbz	w0, b3a0 <ZSTD_toFlushNow@@Base+0xe40>
    b370:	mov	x1, x23
    b374:	mov	x0, x27
    b378:	bl	1f2a4 <ZSTD_compress@@Base+0x10a58>
    b37c:	ldr	w0, [x19, #108]
    b380:	mov	x1, #0x6463                	// #25699
    b384:	movk	x1, #0xb7a5, lsl #16
    b388:	mov	x2, #0x1                   	// #1
    b38c:	movk	x1, #0xbcdc, lsl #32
    b390:	sub	w0, w0, #0x1
    b394:	movk	x1, #0xcf1b, lsl #48
    b398:	cbnz	x0, b6f0 <ZSTD_toFlushNow@@Base+0x1190>
    b39c:	str	x2, [x25, #696]
    b3a0:	ldr	w20, [x19, #4]
    b3a4:	mov	x0, #0x1                   	// #1
    b3a8:	ldr	x1, [sp, #104]
    b3ac:	mov	x22, #0x20000               	// #131072
    b3b0:	lsl	x20, x0, x20
    b3b4:	ldr	w21, [x19, #20]
    b3b8:	cmp	x20, x1
    b3bc:	csel	x20, x20, x1, ls  // ls = plast
    b3c0:	cmp	x20, #0x0
    b3c4:	csel	x20, x20, x0, ne  // ne = any
    b3c8:	mov	x0, #0x3c00                	// #15360
    b3cc:	cmp	x20, #0x20, lsl #12
    b3d0:	csel	x22, x20, x22, ls  // ls = plast
    b3d4:	cmp	w21, #0x3
    b3d8:	add	x1, x22, x0
    b3dc:	mov	w0, #0x4                   	// #4
    b3e0:	csel	w21, w21, w0, eq  // eq = none
    b3e4:	mov	x0, #0xb                   	// #11
    b3e8:	cmp	w24, #0x1
    b3ec:	udiv	x21, x22, x21
    b3f0:	mul	x28, x21, x0
    b3f4:	b.ne	b704 <ZSTD_toFlushNow@@Base+0x11a4>  // b.any
    b3f8:	mov	x0, x22
    b3fc:	str	x1, [sp, #112]
    b400:	bl	4980 <ZSTD_compressBound@plt>
    b404:	add	x20, x22, x20
    b408:	ldr	x1, [sp, #112]
    b40c:	add	x24, x0, #0x1
    b410:	add	x2, x20, x24
    b414:	mov	x0, x23
    b418:	add	x8, x2, x1
    b41c:	mov	w1, #0x1                   	// #1
    b420:	bl	92fc <ZSTD_getErrorString@@Base+0x27b0>
    b424:	add	x28, x0, x28
    b428:	ldp	x0, x1, [x19, #96]
    b42c:	add	x8, x28, x8
    b430:	add	x3, sp, #0xc0
    b434:	stp	x0, x1, [sp, #192]
    b438:	mov	x1, x22
    b43c:	ldr	x0, [x27, #16]
    b440:	stp	x3, x8, [sp, #144]
    b444:	str	x0, [sp, #208]
    b448:	mov	x0, x3
    b44c:	bl	1f370 <ZSTD_compress@@Base+0x10b24>
    b450:	str	x0, [sp, #112]
    b454:	ldr	w0, [x26, #52]
    b458:	ldp	x6, x7, [x19, #96]
    b45c:	add	w0, w0, #0x1
    b460:	ldr	x28, [x25, #520]
    b464:	ldr	x3, [sp, #144]
    b468:	cmp	x28, #0x0
    b46c:	ldr	x1, [x25, #768]
    b470:	ldr	x4, [x25, #776]
    b474:	str	w0, [x26, #52]
    b478:	stp	x6, x7, [sp, #192]
    b47c:	mov	x0, #0x478                 	// #1144
    b480:	csel	x28, x28, x0, eq  // eq = none
    b484:	ldr	x0, [x27, #16]
    b488:	stp	x4, x1, [sp, #128]
    b48c:	mov	x27, #0xc                   	// #12
    b490:	str	x0, [sp, #208]
    b494:	mov	x0, x3
    b498:	bl	1f338 <ZSTD_compress@@Base+0x10aec>
    b49c:	add	x28, x28, x0
    b4a0:	ldr	x1, [sp, #112]
    b4a4:	ldr	x8, [sp, #152]
    b4a8:	mul	x27, x1, x27
    b4ac:	add	x28, x28, x8
    b4b0:	ldr	x3, [x26, #24]
    b4b4:	add	x28, x28, x27
    b4b8:	ldr	x0, [x26, #40]
    b4bc:	add	x2, x28, x28, lsl #1
    b4c0:	ldr	x4, [sp, #128]
    b4c4:	sub	x0, x0, x3
    b4c8:	cmp	x2, x0
    b4cc:	ldr	x1, [sp, #136]
    b4d0:	b.hi	b4e0 <ZSTD_toFlushNow@@Base+0xf80>  // b.pmore
    b4d4:	ldr	w0, [x26, #52]
    b4d8:	cmp	w0, #0x80
    b4dc:	b.gt	b710 <ZSTD_toFlushNow@@Base+0x11b0>
    b4e0:	ldr	x0, [x26, #8]
    b4e4:	ldr	x2, [x25, #312]
    b4e8:	sub	x0, x0, x2
    b4ec:	cmp	x0, x28
    b4f0:	b.cc	b710 <ZSTD_toFlushNow@@Base+0x11b0>  // b.lo, b.ul, b.last
    b4f4:	sub	x0, x1, x4
    b4f8:	mov	x1, #0xdf000000            	// #3741319168
    b4fc:	cmp	x0, x1
    b500:	cset	w28, hi  // hi = pmore
    b504:	ldr	x0, [x26, #16]
    b508:	str	x0, [x26, #24]
    b50c:	ldr	x0, [x26, #8]
    b510:	str	x0, [x26, #40]
    b514:	ldr	w0, [x26, #56]
    b518:	str	wzr, [x26, #48]
    b51c:	cmp	w0, #0x1
    b520:	b.ls	b52c <ZSTD_toFlushNow@@Base+0xfcc>  // b.plast
    b524:	mov	w0, #0x1                   	// #1
    b528:	str	w0, [x26, #56]
    b52c:	mov	x1, x19
    b530:	mov	x2, #0x90                  	// #144
    b534:	add	x0, x25, #0xa0
    b538:	bl	4460 <memcpy@plt>
    b53c:	add	x0, x25, #0x3b8
    b540:	ldp	x2, x3, [x23]
    b544:	stp	x2, x3, [x0]
    b548:	ldr	x0, [sp, #104]
    b54c:	str	xzr, [x25, #400]
    b550:	ldr	x1, [x23, #16]
    b554:	add	x0, x0, #0x1
    b558:	stp	x0, xzr, [x25, #384]
    b55c:	str	x1, [x25, #968]
    b560:	ldr	w1, [x23, #24]
    b564:	ldr	x0, [sp, #104]
    b568:	str	w1, [x25, #976]
    b56c:	cmn	x0, #0x1
    b570:	b.ne	b578 <ZSTD_toFlushNow@@Base+0x1018>  // b.any
    b574:	str	wzr, [x25, #192]
    b578:	str	x22, [x25, #376]
    b57c:	mov	x1, #0x0                   	// #0
    b580:	add	x0, x25, #0x198
    b584:	bl	63ec <ZSTD_initDStream_usingDDict@plt+0x186c>
    b588:	str	wzr, [x25, #304]
    b58c:	mov	w0, #0x1                   	// #1
    b590:	str	w0, [x25]
    b594:	ldr	x0, [x25, #752]
    b598:	bl	9388 <ZSTD_getErrorString@@Base+0x283c>
    b59c:	add	x1, x22, #0x20
    b5a0:	mov	x0, x26
    b5a4:	bl	985c <ZSTD_getErrorString@@Base+0x2d10>
    b5a8:	str	x0, [x25, #584]
    b5ac:	str	x22, [x25, #632]
    b5b0:	mov	x1, x20
    b5b4:	str	x20, [x25, #1000]
    b5b8:	mov	x0, x26
    b5bc:	bl	985c <ZSTD_getErrorString@@Base+0x2d10>
    b5c0:	str	x0, [x25, #992]
    b5c4:	str	x24, [x25, #1040]
    b5c8:	mov	x1, x24
    b5cc:	mov	x0, x26
    b5d0:	bl	985c <ZSTD_getErrorString@@Base+0x2d10>
    b5d4:	str	x0, [x25, #1032]
    b5d8:	ldr	w0, [x19, #96]
    b5dc:	cbz	w0, b60c <ZSTD_toFlushNow@@Base+0x10ac>
    b5e0:	ldp	w1, w8, [x19, #100]
    b5e4:	mov	x0, x26
    b5e8:	sub	w1, w1, w8
    b5ec:	mov	x8, #0x1                   	// #1
    b5f0:	lsl	x8, x8, x1
    b5f4:	mov	x1, x8
    b5f8:	bl	985c <ZSTD_getErrorString@@Base+0x2d10>
    b5fc:	str	x0, [x25, #688]
    b600:	mov	x2, x8
    b604:	mov	w1, #0x0                   	// #0
    b608:	bl	4700 <memset@plt>
    b60c:	mov	x2, #0x0                   	// #0
    b610:	mov	x1, #0x0                   	// #0
    b614:	mov	x0, x25
    b618:	bl	b2ec <ZSTD_toFlushNow@@Base+0xd8c>
    b61c:	str	x21, [x25, #624]
    b620:	mov	x1, x21
    b624:	mov	x0, x26
    b628:	bl	985c <ZSTD_getErrorString@@Base+0x2d10>
    b62c:	str	x0, [x25, #600]
    b630:	mov	x1, x21
    b634:	mov	x0, x26
    b638:	bl	985c <ZSTD_getErrorString@@Base+0x2d10>
    b63c:	str	x0, [x25, #608]
    b640:	mov	x1, x21
    b644:	mov	x0, x26
    b648:	bl	985c <ZSTD_getErrorString@@Base+0x2d10>
    b64c:	str	x0, [x25, #616]
    b650:	lsl	x1, x21, #3
    b654:	mov	x0, x26
    b658:	bl	9170 <ZSTD_getErrorString@@Base+0x2624>
    b65c:	str	x0, [x25, #568]
    b660:	ldr	w3, [sp, #124]
    b664:	mov	w4, w28
    b668:	mov	x2, x23
    b66c:	mov	x1, x26
    b670:	add	x0, x25, #0x300
    b674:	mov	w5, #0x1                   	// #1
    b678:	bl	9d6c <ZSTD_getErrorString@@Base+0x3220>
    b67c:	cmn	x0, #0x78
    b680:	b.hi	b71c <ZSTD_toFlushNow@@Base+0x11bc>  // b.pmore
    b684:	ldr	w0, [x19, #96]
    b688:	cbz	w0, b6e8 <ZSTD_toFlushNow@@Base+0x1188>
    b68c:	ldr	w1, [x19, #100]
    b690:	mov	x8, #0x8                   	// #8
    b694:	mov	x0, x26
    b698:	lsl	x8, x8, x1
    b69c:	mov	x1, x8
    b6a0:	bl	9170 <ZSTD_getErrorString@@Base+0x2624>
    b6a4:	mov	x2, x8
    b6a8:	str	x0, [x25, #680]
    b6ac:	mov	w1, #0x0                   	// #0
    b6b0:	bl	4700 <memset@plt>
    b6b4:	mov	x1, x27
    b6b8:	mov	x0, x26
    b6bc:	bl	9170 <ZSTD_getErrorString@@Base+0x2624>
    b6c0:	str	x0, [x25, #704]
    b6c4:	add	x6, x25, #0x288
    b6c8:	ldr	x0, [sp, #112]
    b6cc:	str	x0, [x25, #712]
    b6d0:	stp	xzr, xzr, [x6]
    b6d4:	stp	xzr, xzr, [x6, #16]
    b6d8:	ldr	x0, [x25, #656]
    b6dc:	neg	x0, x0
    b6e0:	str	w0, [x25, #672]
    b6e4:	str	w0, [x25, #676]
    b6e8:	mov	x0, #0x0                   	// #0
    b6ec:	b	b71c <ZSTD_toFlushNow@@Base+0x11bc>
    b6f0:	tbz	w0, #0, b6f8 <ZSTD_toFlushNow@@Base+0x1198>
    b6f4:	mul	x2, x2, x1
    b6f8:	mul	x1, x1, x1
    b6fc:	lsr	x0, x0, #1
    b700:	b	b398 <ZSTD_toFlushNow@@Base+0xe38>
    b704:	mov	x24, #0x0                   	// #0
    b708:	mov	x20, #0x0                   	// #0
    b70c:	b	b410 <ZSTD_toFlushNow@@Base+0xeb0>
    b710:	ldr	x0, [x25, #520]
    b714:	cbz	x0, b738 <ZSTD_toFlushNow@@Base+0x11d8>
    b718:	mov	x0, #0xffffffffffffffc0    	// #-64
    b71c:	ldp	x19, x20, [sp, #16]
    b720:	ldp	x21, x22, [sp, #32]
    b724:	ldp	x23, x24, [sp, #48]
    b728:	ldp	x25, x26, [sp, #64]
    b72c:	ldp	x27, x28, [sp, #80]
    b730:	ldp	x29, x30, [sp], #256
    b734:	ret
    b738:	ldp	x2, x3, [x25, #496]
    b73c:	add	x4, x25, #0x1f0
    b740:	stp	x2, x3, [sp, #160]
    b744:	add	x1, sp, #0xa0
    b748:	ldr	x0, [x25, #512]
    b74c:	stp	x1, x4, [sp, #128]
    b750:	str	x0, [sp, #176]
    b754:	mov	x0, x26
    b758:	bl	95dc <ZSTD_getErrorString@@Base+0x2a90>
    b75c:	ldp	x1, x4, [sp, #128]
    b760:	ldp	x2, x3, [x25, #496]
    b764:	ldr	x0, [x4, #16]
    b768:	stp	x2, x3, [sp, #160]
    b76c:	str	x0, [sp, #176]
    b770:	mov	x0, x28
    b774:	bl	6b50 <ZSTD_getErrorString@@Base+0x4>
    b778:	cbz	x0, b718 <ZSTD_toFlushNow@@Base+0x11b8>
    b77c:	str	x0, [x25, #312]
    b780:	add	x28, x0, x28
    b784:	stp	x28, x0, [x26, #8]
    b788:	mov	x1, #0x11f0                	// #4592
    b78c:	stp	x0, x0, [x26, #24]
    b790:	mov	x0, x26
    b794:	str	x28, [x26, #40]
    b798:	str	xzr, [x25, #360]
    b79c:	str	wzr, [x26, #56]
    b7a0:	bl	91d0 <ZSTD_getErrorString@@Base+0x2684>
    b7a4:	str	x0, [x25, #752]
    b7a8:	cbz	x0, b718 <ZSTD_toFlushNow@@Base+0x11b8>
    b7ac:	mov	x0, x26
    b7b0:	mov	x1, #0x11f0                	// #4592
    b7b4:	bl	91d0 <ZSTD_getErrorString@@Base+0x2684>
    b7b8:	str	x0, [x25, #760]
    b7bc:	cbz	x0, b718 <ZSTD_toFlushNow@@Base+0x11b8>
    b7c0:	mov	x0, x26
    b7c4:	mov	x1, #0x1800                	// #6144
    b7c8:	bl	91d0 <ZSTD_getErrorString@@Base+0x2684>
    b7cc:	str	x0, [x25, #984]
    b7d0:	ldr	x0, [x25, #760]
    b7d4:	cbz	x0, b718 <ZSTD_toFlushNow@@Base+0x11b8>
    b7d8:	mov	w28, #0x1                   	// #1
    b7dc:	b	b504 <ZSTD_toFlushNow@@Base+0xfa4>

000000000000b7e0 <ZSTD_copyCCtx@@Base>:
    b7e0:	stp	x29, x30, [sp, #-352]!
    b7e4:	cmp	x2, #0x0
    b7e8:	mov	x29, sp
    b7ec:	stp	x19, x20, [sp, #16]
    b7f0:	stp	x21, x22, [sp, #32]
    b7f4:	csinv	x21, x2, xzr, ne  // ne = any
    b7f8:	ldr	w22, [x1]
    b7fc:	str	x23, [sp, #48]
    b800:	cmp	w22, #0x1
    b804:	b.ne	b97c <ZSTD_copyCCtx@@Base+0x19c>  // b.any
    b808:	mov	x20, x0
    b80c:	mov	x19, x1
    b810:	ldp	x0, x1, [x1, #496]
    b814:	add	x4, sp, #0xd0
    b818:	ldr	x23, [x19, #1000]
    b81c:	stp	x0, x1, [x20, #496]
    b820:	mov	x2, #0x90                  	// #144
    b824:	ldr	x0, [x19, #512]
    b828:	str	x0, [x20, #512]
    b82c:	add	x1, x20, #0x10
    b830:	mov	x0, x4
    b834:	bl	4460 <memcpy@plt>
    b838:	mov	x4, x0
    b83c:	add	x0, x19, #0xa4
    b840:	add	x1, sp, #0x4
    b844:	cmn	x21, #0x1
    b848:	add	x5, sp, #0x40
    b84c:	stur	xzr, [sp, #244]
    b850:	ldp	x2, x3, [x0]
    b854:	stp	x2, x3, [x1, #208]
    b858:	ldr	w0, [x19, #188]
    b85c:	str	w0, [sp, #236]
    b860:	cset	w0, ne  // ne = any
    b864:	ldur	x1, [x19, #180]
    b868:	mov	x2, #0x90                  	// #144
    b86c:	stur	x1, [sp, #228]
    b870:	mov	x1, x4
    b874:	str	w0, [sp, #240]
    b878:	mov	x0, x5
    b87c:	bl	4460 <memcpy@plt>
    b880:	mov	x1, x0
    b884:	cmp	x23, #0x0
    b888:	mov	x2, x21
    b88c:	add	x21, x20, #0x138
    b890:	cset	w4, ne  // ne = any
    b894:	mov	w3, w22
    b898:	mov	x0, x20
    b89c:	bl	b324 <ZSTD_toFlushNow@@Base+0xdc4>
    b8a0:	ldr	x0, [x21, #16]
    b8a4:	str	x0, [x21, #32]
    b8a8:	ldr	w0, [x19, #188]
    b8ac:	cmp	w0, #0x1
    b8b0:	b.eq	b974 <ZSTD_copyCCtx@@Base+0x194>  // b.none
    b8b4:	ldr	w0, [x19, #168]
    b8b8:	mov	x23, #0x1                   	// #1
    b8bc:	lsl	x23, x23, x0
    b8c0:	ldr	w0, [x19, #808]
    b8c4:	mov	x22, #0x1                   	// #1
    b8c8:	ldr	w1, [x19, #172]
    b8cc:	mov	x2, #0x4                   	// #4
    b8d0:	cmp	w0, #0x0
    b8d4:	lsl	x22, x22, x0
    b8d8:	csel	x22, x22, xzr, ne  // ne = any
    b8dc:	lsl	x2, x2, x1
    b8e0:	ldr	x0, [x20, #816]
    b8e4:	ldr	x1, [x19, #816]
    b8e8:	bl	4460 <memcpy@plt>
    b8ec:	ldr	x1, [x19, #832]
    b8f0:	lsl	x2, x23, #2
    b8f4:	ldr	x0, [x20, #832]
    b8f8:	bl	4460 <memcpy@plt>
    b8fc:	ldr	x1, [x19, #824]
    b900:	lsl	x2, x22, #2
    b904:	ldr	x0, [x20, #824]
    b908:	bl	4460 <memcpy@plt>
    b90c:	ldp	x0, x1, [x21, #24]
    b910:	cmp	x1, x0
    b914:	b.cs	b91c <ZSTD_copyCCtx@@Base+0x13c>  // b.hs, b.nlast
    b918:	str	x0, [x21, #32]
    b91c:	add	x1, x19, #0x300
    b920:	add	x0, x20, #0x300
    b924:	ldp	x2, x3, [x1]
    b928:	stp	x2, x3, [x0]
    b92c:	ldp	x2, x3, [x1, #16]
    b930:	stp	x2, x3, [x0, #16]
    b934:	ldr	w0, [x19, #304]
    b938:	ldr	w1, [x19, #800]
    b93c:	ldr	w2, [x19, #804]
    b940:	str	w0, [x20, #304]
    b944:	str	w1, [x20, #800]
    b948:	ldr	x0, [x20, #752]
    b94c:	str	w2, [x20, #804]
    b950:	ldr	x1, [x19, #752]
    b954:	mov	x2, #0x11f0                	// #4592
    b958:	bl	4460 <memcpy@plt>
    b95c:	mov	x0, #0x0                   	// #0
    b960:	ldp	x19, x20, [sp, #16]
    b964:	ldp	x21, x22, [sp, #32]
    b968:	ldr	x23, [sp, #48]
    b96c:	ldp	x29, x30, [sp], #352
    b970:	ret
    b974:	mov	x23, #0x0                   	// #0
    b978:	b	b8c0 <ZSTD_copyCCtx@@Base+0xe0>
    b97c:	mov	x0, #0xffffffffffffffc4    	// #-60
    b980:	b	b960 <ZSTD_copyCCtx@@Base+0x180>
    b984:	sub	sp, sp, #0x1b0
    b988:	stp	x29, x30, [sp, #16]
    b98c:	add	x29, sp, #0x10
    b990:	stp	x19, x20, [sp, #32]
    b994:	mov	x19, x0
    b998:	mov	x20, x5
    b99c:	stp	x21, x22, [sp, #48]
    b9a0:	mov	x21, x6
    b9a4:	mov	x22, x7
    b9a8:	stp	x23, x24, [sp, #64]
    b9ac:	mov	w23, w3
    b9b0:	add	x24, sp, #0x70
    b9b4:	stp	x25, x26, [sp, #80]
    b9b8:	mov	w26, w4
    b9bc:	ldr	w25, [sp, #432]
    b9c0:	stp	x27, x28, [sp, #96]
    b9c4:	mov	x27, x1
    b9c8:	mov	x28, x2
    b9cc:	cbz	x5, bc58 <ZSTD_copyCCtx@@Base+0x478>
    b9d0:	ldr	x0, [x5, #8]
    b9d4:	cbz	x0, bc58 <ZSTD_copyCCtx@@Base+0x478>
    b9d8:	sub	x2, x7, #0x20, lsl #12
    b9dc:	mov	x1, #0xfffffffffffdffff    	// #-131073
    b9e0:	cmp	x2, x1
    b9e4:	b.cs	ba00 <ZSTD_copyCCtx@@Base+0x220>  // b.hs, b.nlast
    b9e8:	mov	x1, #0x6                   	// #6
    b9ec:	mul	x0, x0, x1
    b9f0:	cmp	x0, x7
    b9f4:	b.hi	ba00 <ZSTD_copyCCtx@@Base+0x220>  // b.pmore
    b9f8:	ldr	w0, [x5, #4924]
    b9fc:	cbnz	w0, bc58 <ZSTD_copyCCtx@@Base+0x478>
    ba00:	ldr	w1, [x21, #68]
    ba04:	cmp	w1, #0x3
    ba08:	b.eq	bc58 <ZSTD_copyCCtx@@Base+0x478>  // b.none
    ba0c:	ldr	w2, [x20, #296]
    ba10:	adrp	x0, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    ba14:	add	x0, x0, #0x2a0
    ba18:	add	x26, sp, #0x120
    ba1c:	add	x0, x0, #0x1d0
    ba20:	add	x23, x20, #0x110
    ba24:	ldr	x0, [x0, x2, lsl #3]
    ba28:	cmp	x22, x0
    ba2c:	ccmn	x22, #0x1, #0x4, hi  // hi = pmore
    ba30:	b.eq	bad8 <ZSTD_copyCCtx@@Base+0x2f8>  // b.none
    ba34:	cmp	w1, #0x1
    ba38:	b.ne	bae0 <ZSTD_copyCCtx@@Base+0x300>  // b.any
    ba3c:	ldr	w0, [x21, #48]
    ba40:	ldr	w27, [x21, #4]
    ba44:	cbnz	w0, bae0 <ZSTD_copyCCtx@@Base+0x300>
    ba48:	mov	x1, x21
    ba4c:	mov	x2, #0x90                  	// #144
    ba50:	mov	x0, x26
    ba54:	bl	4460 <memcpy@plt>
    ba58:	ldp	x0, x1, [x20, #272]
    ba5c:	stp	x0, x1, [sp, #256]
    ba60:	add	x8, sp, #0x124
    ba64:	ldr	x0, [x23, #16]
    ba68:	str	x0, [sp, #272]
    ba6c:	mov	x1, x22
    ba70:	mov	x2, #0x0                   	// #0
    ba74:	ldr	w0, [x23, #24]
    ba78:	str	w0, [sp, #280]
    ba7c:	add	x0, sp, #0x100
    ba80:	bl	961c <ZSTD_getErrorString@@Base+0x2ad0>
    ba84:	str	w27, [sp, #292]
    ba88:	mov	x1, x26
    ba8c:	mov	x2, #0x90                  	// #144
    ba90:	mov	x0, x24
    ba94:	bl	4460 <memcpy@plt>
    ba98:	mov	w4, w25
    ba9c:	mov	x2, x22
    baa0:	mov	x1, x24
    baa4:	mov	x0, x19
    baa8:	mov	w3, #0x0                   	// #0
    baac:	bl	b324 <ZSTD_toFlushNow@@Base+0xdc4>
    bab0:	cmn	x0, #0x78
    bab4:	b.ls	bbec <ZSTD_copyCCtx@@Base+0x40c>  // b.plast
    bab8:	ldp	x29, x30, [sp, #16]
    babc:	ldp	x19, x20, [sp, #32]
    bac0:	ldp	x21, x22, [sp, #48]
    bac4:	ldp	x23, x24, [sp, #64]
    bac8:	ldp	x25, x26, [sp, #80]
    bacc:	ldp	x27, x28, [sp, #96]
    bad0:	add	sp, sp, #0x1b0
    bad4:	ret
    bad8:	cmp	w1, #0x2
    badc:	b.ne	ba3c <ZSTD_copyCCtx@@Base+0x25c>  // b.any
    bae0:	mov	x1, x21
    bae4:	mov	x2, #0x90                  	// #144
    bae8:	mov	x0, x26
    baec:	bl	4460 <memcpy@plt>
    baf0:	add	x3, sp, #0x204
    baf4:	ldr	w2, [x21, #4]
    baf8:	ldp	x0, x1, [x20, #272]
    bafc:	stp	x0, x1, [x3, #-224]
    bb00:	add	x1, sp, #0x200
    bb04:	ldr	x0, [x23, #16]
    bb08:	stur	x0, [x1, #-204]
    bb0c:	mov	x1, x26
    bb10:	ldr	w0, [x23, #24]
    bb14:	str	w2, [sp, #292]
    bb18:	mov	x2, #0x90                  	// #144
    bb1c:	str	w0, [sp, #316]
    bb20:	mov	x0, x24
    bb24:	bl	4460 <memcpy@plt>
    bb28:	mov	w4, w25
    bb2c:	mov	x2, x22
    bb30:	mov	x1, x24
    bb34:	mov	x0, x19
    bb38:	mov	w3, #0x1                   	// #1
    bb3c:	bl	b324 <ZSTD_toFlushNow@@Base+0xdc4>
    bb40:	cmn	x0, #0x78
    bb44:	b.hi	bab8 <ZSTD_copyCCtx@@Base+0x2d8>  // b.pmore
    bb48:	ldr	x0, [x19, #328]
    bb4c:	str	x0, [x19, #344]
    bb50:	ldr	w0, [x23, #24]
    bb54:	add	x21, x19, #0x138
    bb58:	cmp	w0, #0x1
    bb5c:	b.eq	bc50 <ZSTD_copyCCtx@@Base+0x470>  // b.none
    bb60:	ldr	w0, [x23, #4]
    bb64:	mov	x22, #0x1                   	// #1
    bb68:	lsl	x22, x22, x0
    bb6c:	ldr	w0, [x23, #8]
    bb70:	mov	x2, #0x4                   	// #4
    bb74:	ldr	x1, [x20, #136]
    bb78:	lsl	x2, x2, x0
    bb7c:	ldr	x0, [x19, #816]
    bb80:	bl	4460 <memcpy@plt>
    bb84:	ldr	x1, [x20, #152]
    bb88:	lsl	x2, x22, #2
    bb8c:	ldr	x0, [x19, #832]
    bb90:	bl	4460 <memcpy@plt>
    bb94:	ldr	w0, [x19, #808]
    bb98:	mov	x2, #0x1                   	// #1
    bb9c:	mov	w1, #0x0                   	// #0
    bba0:	cmp	w0, #0x0
    bba4:	lsl	x2, x2, x0
    bba8:	csel	x2, x2, xzr, ne  // ne = any
    bbac:	ldr	x0, [x19, #824]
    bbb0:	lsl	x2, x2, #2
    bbb4:	bl	4700 <memset@plt>
    bbb8:	ldp	x0, x1, [x21, #24]
    bbbc:	cmp	x1, x0
    bbc0:	b.cs	bbc8 <ZSTD_copyCCtx@@Base+0x3e8>  // b.hs, b.nlast
    bbc4:	str	x0, [x21, #32]
    bbc8:	add	x0, x19, #0x300
    bbcc:	ldp	x2, x3, [x20, #88]
    bbd0:	stp	x2, x3, [x0]
    bbd4:	ldp	x2, x3, [x20, #104]
    bbd8:	stp	x2, x3, [x0, #16]
    bbdc:	ldp	w1, w2, [x20, #120]
    bbe0:	str	w1, [x19, #800]
    bbe4:	str	w2, [x19, #804]
    bbe8:	b	bc30 <ZSTD_copyCCtx@@Base+0x450>
    bbec:	ldp	x0, x1, [x20, #88]
    bbf0:	sub	x0, x0, x1
    bbf4:	ldr	w1, [x20, #112]
    bbf8:	cmp	w0, w1
    bbfc:	b.eq	bc30 <ZSTD_copyCCtx@@Base+0x450>  // b.none
    bc00:	add	x1, x20, #0x58
    bc04:	str	x1, [x19, #944]
    bc08:	ldr	w1, [x19, #792]
    bc0c:	cmp	w0, w1
    bc10:	b.ls	bc28 <ZSTD_copyCCtx@@Base+0x448>  // b.plast
    bc14:	ldr	x1, [x19, #776]
    bc18:	str	w0, [x19, #792]
    bc1c:	str	w0, [x19, #796]
    bc20:	add	x1, x1, w0, uxtw
    bc24:	str	x1, [x19, #768]
    bc28:	ldr	w0, [x19, #792]
    bc2c:	str	w0, [x19, #800]
    bc30:	ldr	w0, [x20, #4920]
    bc34:	add	x1, x20, #0x130
    bc38:	str	w0, [x19, #304]
    bc3c:	mov	x2, #0x11f0                	// #4592
    bc40:	ldr	x0, [x19, #752]
    bc44:	bl	4460 <memcpy@plt>
    bc48:	mov	x0, #0x0                   	// #0
    bc4c:	b	bab8 <ZSTD_copyCCtx@@Base+0x2d8>
    bc50:	mov	x22, #0x0                   	// #0
    bc54:	b	bb6c <ZSTD_copyCCtx@@Base+0x38c>
    bc58:	mov	x1, x21
    bc5c:	mov	x2, #0x90                  	// #144
    bc60:	mov	x0, x24
    bc64:	bl	4460 <memcpy@plt>
    bc68:	mov	w4, w25
    bc6c:	mov	x2, x22
    bc70:	mov	x1, x24
    bc74:	mov	x0, x19
    bc78:	mov	w3, #0x0                   	// #0
    bc7c:	bl	b324 <ZSTD_toFlushNow@@Base+0xdc4>
    bc80:	cmn	x0, #0x78
    bc84:	b.hi	bab8 <ZSTD_copyCCtx@@Base+0x2d8>  // b.pmore
    bc88:	ldr	x3, [x19, #984]
    bc8c:	add	x1, x19, #0x300
    bc90:	ldr	x0, [x19, #752]
    bc94:	str	x3, [sp]
    bc98:	add	x2, x19, #0x138
    bc9c:	mov	w7, w26
    bca0:	mov	w6, w23
    bca4:	cbz	x20, bcc4 <ZSTD_copyCCtx@@Base+0x4e4>
    bca8:	ldp	x4, x5, [x20]
    bcac:	mov	x3, x21
    bcb0:	bl	9cbc <ZSTD_getErrorString@@Base+0x3170>
    bcb4:	cmn	x0, #0x78
    bcb8:	b.hi	bab8 <ZSTD_copyCCtx@@Base+0x2d8>  // b.pmore
    bcbc:	str	w0, [x19, #304]
    bcc0:	b	bc48 <ZSTD_copyCCtx@@Base+0x468>
    bcc4:	mov	x5, x28
    bcc8:	mov	x4, x27
    bccc:	b	bcac <ZSTD_copyCCtx@@Base+0x4cc>

000000000000bcd0 <ZSTD_compressContinue@@Base>:
    bcd0:	mov	w6, #0x0                   	// #0
    bcd4:	mov	w5, #0x1                   	// #1
    bcd8:	b	af80 <ZSTD_toFlushNow@@Base+0xa20>

000000000000bcdc <ZSTD_getBlockSize@@Base>:
    bcdc:	ldr	w1, [x0, #164]
    bce0:	mov	w0, #0x1                   	// #1
    bce4:	lsl	w0, w0, w1
    bce8:	cmp	w0, #0x20, lsl #12
    bcec:	mov	w1, #0x20000               	// #131072
    bcf0:	csel	w0, w0, w1, ls  // ls = plast
    bcf4:	ret

000000000000bcf8 <ZSTD_compressBlock@@Base>:
    bcf8:	stp	x29, x30, [sp, #-64]!
    bcfc:	mov	x29, sp
    bd00:	stp	x19, x20, [sp, #16]
    bd04:	mov	x19, x4
    bd08:	mov	x20, x0
    bd0c:	stp	x21, x22, [sp, #32]
    bd10:	mov	x21, x1
    bd14:	mov	x22, x2
    bd18:	str	x23, [sp, #48]
    bd1c:	mov	x23, x3
    bd20:	bl	48d0 <ZSTD_getBlockSize@plt>
    bd24:	cmp	x0, x19
    bd28:	b.cc	bd5c <ZSTD_compressBlock@@Base+0x64>  // b.lo, b.ul, b.last
    bd2c:	mov	x4, x19
    bd30:	mov	x3, x23
    bd34:	mov	x2, x22
    bd38:	mov	x1, x21
    bd3c:	mov	x0, x20
    bd40:	mov	w6, #0x0                   	// #0
    bd44:	ldp	x19, x20, [sp, #16]
    bd48:	mov	w5, #0x0                   	// #0
    bd4c:	ldp	x21, x22, [sp, #32]
    bd50:	ldr	x23, [sp, #48]
    bd54:	ldp	x29, x30, [sp], #64
    bd58:	b	af80 <ZSTD_toFlushNow@@Base+0xa20>
    bd5c:	mov	x0, #0xffffffffffffffb8    	// #-72
    bd60:	ldp	x19, x20, [sp, #16]
    bd64:	ldp	x21, x22, [sp, #32]
    bd68:	ldr	x23, [sp, #48]
    bd6c:	ldp	x29, x30, [sp], #64
    bd70:	ret

000000000000bd74 <ZSTD_compressEnd@@Base>:
    bd74:	stp	x29, x30, [sp, #-64]!
    bd78:	mov	w6, #0x1                   	// #1
    bd7c:	mov	w5, w6
    bd80:	mov	x29, sp
    bd84:	stp	x19, x20, [sp, #16]
    bd88:	mov	x20, x2
    bd8c:	stp	x21, x22, [sp, #32]
    bd90:	mov	x21, x0
    bd94:	mov	x22, x1
    bd98:	str	x23, [sp, #48]
    bd9c:	bl	af80 <ZSTD_toFlushNow@@Base+0xa20>
    bda0:	mov	x23, x0
    bda4:	cmn	x0, #0x78
    bda8:	b.hi	be00 <ZSTD_compressEnd@@Base+0x8c>  // b.pmore
    bdac:	add	x22, x22, x0
    bdb0:	sub	x20, x20, x0
    bdb4:	ldr	w0, [x21]
    bdb8:	cbz	w0, be88 <ZSTD_compressEnd@@Base+0x114>
    bdbc:	cmp	w0, #0x1
    bdc0:	b.ne	be14 <ZSTD_compressEnd@@Base+0xa0>  // b.any
    bdc4:	add	x2, x21, #0xa0
    bdc8:	mov	x1, x20
    bdcc:	mov	x0, x22
    bdd0:	mov	w4, #0x0                   	// #0
    bdd4:	mov	x3, #0x0                   	// #0
    bdd8:	bl	93f4 <ZSTD_getErrorString@@Base+0x28a8>
    bddc:	cmn	x0, #0x78
    bde0:	b.hi	be00 <ZSTD_compressEnd@@Base+0x8c>  // b.pmore
    bde4:	sub	x20, x20, x0
    bde8:	add	x0, x22, x0
    bdec:	mov	w1, #0x2                   	// #2
    bdf0:	str	w1, [x21]
    bdf4:	cmp	x20, #0x3
    bdf8:	b.hi	be24 <ZSTD_compressEnd@@Base+0xb0>  // b.pmore
    bdfc:	mov	x0, #0xffffffffffffffba    	// #-70
    be00:	ldp	x19, x20, [sp, #16]
    be04:	ldp	x21, x22, [sp, #32]
    be08:	ldr	x23, [sp, #48]
    be0c:	ldp	x29, x30, [sp], #64
    be10:	ret
    be14:	cmp	w0, #0x3
    be18:	b.eq	be80 <ZSTD_compressEnd@@Base+0x10c>  // b.none
    be1c:	mov	x0, x22
    be20:	b	bdf4 <ZSTD_compressEnd@@Base+0x80>
    be24:	mov	x19, x0
    be28:	sub	x20, x20, #0x3
    be2c:	mov	w0, #0x1                   	// #1
    be30:	str	w0, [x19], #3
    be34:	ldr	w0, [x21, #196]
    be38:	cbz	w0, be50 <ZSTD_compressEnd@@Base+0xdc>
    be3c:	add	x0, x21, #0x198
    be40:	bl	68f8 <ZSTD_initDStream_usingDDict@plt+0x1d78>
    be44:	cmp	x20, #0x3
    be48:	b.ls	bdfc <ZSTD_compressEnd@@Base+0x88>  // b.plast
    be4c:	str	w0, [x19], #4
    be50:	str	wzr, [x21]
    be54:	sub	x0, x19, x22
    be58:	cmn	x0, #0x78
    be5c:	b.hi	be00 <ZSTD_compressEnd@@Base+0x8c>  // b.pmore
    be60:	ldr	x2, [x21, #384]
    be64:	cbz	x2, be78 <ZSTD_compressEnd@@Base+0x104>
    be68:	ldr	x1, [x21, #392]
    be6c:	add	x1, x1, #0x1
    be70:	cmp	x2, x1
    be74:	b.ne	be90 <ZSTD_compressEnd@@Base+0x11c>  // b.any
    be78:	add	x0, x0, x23
    be7c:	b	be00 <ZSTD_compressEnd@@Base+0x8c>
    be80:	mov	x19, x22
    be84:	b	be34 <ZSTD_compressEnd@@Base+0xc0>
    be88:	mov	x0, #0xffffffffffffffc4    	// #-60
    be8c:	b	be00 <ZSTD_compressEnd@@Base+0x8c>
    be90:	mov	x0, #0xffffffffffffffb8    	// #-72
    be94:	b	be00 <ZSTD_compressEnd@@Base+0x8c>
    be98:	sub	sp, sp, #0x50
    be9c:	stp	x29, x30, [sp, #16]
    bea0:	add	x29, sp, #0x10
    bea4:	str	wzr, [sp]
    bea8:	stp	x19, x20, [sp, #32]
    beac:	mov	x20, x0
    beb0:	mov	x19, x4
    beb4:	stp	x21, x22, [sp, #48]
    beb8:	mov	x21, x1
    bebc:	mov	x22, x2
    bec0:	mov	x1, x5
    bec4:	mov	x2, x6
    bec8:	mov	x5, #0x0                   	// #0
    becc:	mov	x6, x7
    bed0:	mov	x7, x4
    bed4:	mov	w4, #0x0                   	// #0
    bed8:	str	x23, [sp, #64]
    bedc:	mov	x23, x3
    bee0:	mov	w3, #0x0                   	// #0
    bee4:	bl	b984 <ZSTD_copyCCtx@@Base+0x1a4>
    bee8:	cmn	x0, #0x78
    beec:	b.hi	bf1c <ZSTD_compressEnd@@Base+0x1a8>  // b.pmore
    bef0:	mov	x4, x19
    bef4:	mov	x2, x22
    bef8:	mov	x1, x21
    befc:	mov	x0, x20
    bf00:	ldp	x29, x30, [sp, #16]
    bf04:	mov	x3, x23
    bf08:	ldp	x19, x20, [sp, #32]
    bf0c:	ldp	x21, x22, [sp, #48]
    bf10:	ldr	x23, [sp, #64]
    bf14:	add	sp, sp, #0x50
    bf18:	b	4540 <ZSTD_compressEnd@plt>
    bf1c:	ldp	x29, x30, [sp, #16]
    bf20:	ldp	x19, x20, [sp, #32]
    bf24:	ldp	x21, x22, [sp, #48]
    bf28:	ldr	x23, [sp, #64]
    bf2c:	add	sp, sp, #0x50
    bf30:	ret

000000000000bf34 <ZSTD_estimateCDictSize_advanced@@Base>:
    bf34:	mov	x7, x0
    bf38:	mov	w8, w2
    bf3c:	stp	x29, x30, [sp, #-16]!
    bf40:	mov	x0, x1
    bf44:	mov	w1, #0x0                   	// #0
    bf48:	mov	x29, sp
    bf4c:	bl	92fc <ZSTD_getErrorString@@Base+0x27b0>
    bf50:	add	x7, x7, #0x7
    bf54:	cmp	w8, #0x1
    bf58:	and	x7, x7, #0xfffffffffffffff8
    bf5c:	csel	x7, x7, xzr, ne  // ne = any
    bf60:	mov	x1, #0x2b40                	// #11072
    bf64:	add	x0, x0, x1
    bf68:	add	x0, x0, x7
    bf6c:	ldp	x29, x30, [sp], #16
    bf70:	ret

000000000000bf74 <ZSTD_sizeof_CDict@@Base>:
    bf74:	cbz	x0, bf98 <ZSTD_sizeof_CDict@@Base+0x24>
    bf78:	ldr	x2, [x0, #24]
    bf7c:	mov	x1, #0x1340                	// #4928
    bf80:	cmp	x2, x0
    bf84:	ldr	x0, [x0, #32]
    bf88:	csel	x1, xzr, x1, eq  // eq = none
    bf8c:	sub	x0, x0, x2
    bf90:	add	x0, x0, x1
    bf94:	ret
    bf98:	mov	x0, #0x0                   	// #0
    bf9c:	b	bf94 <ZSTD_sizeof_CDict@@Base+0x20>

000000000000bfa0 <ZSTD_sizeof_CCtx@@Base>:
    bfa0:	cbz	x0, bff4 <ZSTD_sizeof_CCtx@@Base+0x54>
    bfa4:	stp	x29, x30, [sp, #-32]!
    bfa8:	mov	x1, #0x478                 	// #1144
    bfac:	mov	x29, sp
    bfb0:	stp	x19, x20, [sp, #16]
    bfb4:	ldp	x2, x19, [x0, #312]
    bfb8:	ldr	x20, [x0, #1088]
    bfbc:	cmp	x2, x0
    bfc0:	sub	x19, x19, x2
    bfc4:	csel	x1, xzr, x1, eq  // eq = none
    bfc8:	add	x19, x19, x1
    bfcc:	ldr	x1, [x0, #1072]
    bfd0:	ldr	x0, [x0, #1104]
    bfd4:	cmp	x1, #0x0
    bfd8:	csel	x20, x20, xzr, ne  // ne = any
    bfdc:	bl	4860 <ZSTD_sizeof_CDict@plt>
    bfe0:	add	x0, x0, x20
    bfe4:	add	x0, x0, x19
    bfe8:	ldp	x19, x20, [sp, #16]
    bfec:	ldp	x29, x30, [sp], #32
    bff0:	ret
    bff4:	mov	x0, #0x0                   	// #0
    bff8:	ret

000000000000bffc <ZSTD_sizeof_CStream@@Base>:
    bffc:	b	47a0 <ZSTD_sizeof_CCtx@plt>

000000000000c000 <ZSTD_freeCDict@@Base>:
    c000:	cbz	x0, c0a4 <ZSTD_freeCDict@@Base+0xa4>
    c004:	stp	x29, x30, [sp, #-112]!
    c008:	mov	x29, sp
    c00c:	stp	x19, x20, [sp, #16]
    c010:	mov	x19, x0
    c014:	mov	x0, #0x1320                	// #4896
    c018:	add	x0, x19, x0
    c01c:	ldp	x0, x1, [x0]
    c020:	stp	x0, x1, [sp, #88]
    c024:	ldr	x1, [x19, #24]
    c028:	ldr	x0, [x19, #4912]
    c02c:	str	x21, [sp, #32]
    c030:	str	x0, [sp, #104]
    c034:	cmp	x19, x1
    c038:	add	x0, x19, #0x18
    c03c:	b.cc	c09c <ZSTD_freeCDict@@Base+0x9c>  // b.lo, b.ul, b.last
    c040:	ldr	x1, [x0, #8]
    c044:	cmp	x19, x1
    c048:	cset	w21, ls  // ls = plast
    c04c:	ldp	x2, x3, [sp, #88]
    c050:	add	x20, sp, #0x30
    c054:	ldr	x1, [sp, #104]
    c058:	stp	x2, x3, [sp, #48]
    c05c:	str	x1, [sp, #64]
    c060:	mov	x1, x20
    c064:	bl	95dc <ZSTD_getErrorString@@Base+0x2a90>
    c068:	cbnz	w21, c088 <ZSTD_freeCDict@@Base+0x88>
    c06c:	ldp	x0, x1, [sp, #88]
    c070:	stp	x0, x1, [sp, #48]
    c074:	ldr	x0, [sp, #104]
    c078:	mov	x1, x20
    c07c:	str	x0, [sp, #64]
    c080:	mov	x0, x19
    c084:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
    c088:	mov	x0, #0x0                   	// #0
    c08c:	ldp	x19, x20, [sp, #16]
    c090:	ldr	x21, [sp, #32]
    c094:	ldp	x29, x30, [sp], #112
    c098:	ret
    c09c:	mov	w21, #0x0                   	// #0
    c0a0:	b	c04c <ZSTD_freeCDict@@Base+0x4c>
    c0a4:	mov	x0, #0x0                   	// #0
    c0a8:	ret
    c0ac:	stp	x29, x30, [sp, #-64]!
    c0b0:	mov	x29, sp
    c0b4:	str	x19, [sp, #16]
    c0b8:	mov	x19, x0
    c0bc:	ldp	x0, x1, [x0, #496]
    c0c0:	stp	x0, x1, [sp, #32]
    c0c4:	ldr	x0, [x19, #512]
    c0c8:	str	x0, [sp, #48]
    c0cc:	add	x1, sp, #0x20
    c0d0:	ldr	x0, [x19, #1072]
    c0d4:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
    c0d8:	ldr	x0, [x19, #1104]
    c0dc:	bl	45c0 <ZSTD_freeCDict@plt>
    c0e0:	add	x0, x19, #0x430
    c0e4:	stp	xzr, xzr, [x0]
    c0e8:	stp	xzr, xzr, [x0, #16]
    c0ec:	add	x0, x19, #0x460
    c0f0:	str	xzr, [x19, #1104]
    c0f4:	stp	xzr, xzr, [x0]
    c0f8:	str	xzr, [x19, #1112]
    c0fc:	str	xzr, [x19, #1136]
    c100:	ldr	x19, [sp, #16]
    c104:	ldp	x29, x30, [sp], #64
    c108:	ret

000000000000c10c <ZSTD_freeCCtx@@Base>:
    c10c:	stp	x29, x30, [sp, #-96]!
    c110:	mov	x29, sp
    c114:	stp	x19, x20, [sp, #16]
    c118:	stp	x21, x22, [sp, #32]
    c11c:	stp	x23, x24, [sp, #48]
    c120:	cbnz	x0, c140 <ZSTD_freeCCtx@@Base+0x34>
    c124:	mov	x20, #0x0                   	// #0
    c128:	mov	x0, x20
    c12c:	ldp	x19, x20, [sp, #16]
    c130:	ldp	x21, x22, [sp, #32]
    c134:	ldp	x23, x24, [sp, #48]
    c138:	ldp	x29, x30, [sp], #96
    c13c:	ret
    c140:	ldr	x20, [x0, #520]
    c144:	mov	x19, x0
    c148:	cbnz	x20, c1bc <ZSTD_freeCCtx@@Base+0xb0>
    c14c:	add	x24, x0, #0x138
    c150:	ldr	x0, [x0, #312]
    c154:	cmp	x19, x0
    c158:	b.cc	c1b4 <ZSTD_freeCCtx@@Base+0xa8>  // b.lo, b.ul, b.last
    c15c:	ldr	x0, [x24, #8]
    c160:	cmp	x19, x0
    c164:	cset	w23, ls  // ls = plast
    c168:	mov	x0, x19
    c16c:	bl	c0ac <ZSTD_freeCDict@@Base+0xac>
    c170:	ldp	x0, x1, [x19, #496]
    c174:	stp	x0, x1, [sp, #64]
    c178:	add	x21, sp, #0x40
    c17c:	ldr	x0, [x19, #512]
    c180:	mov	x1, x21
    c184:	str	x0, [sp, #80]
    c188:	mov	x0, x24
    c18c:	bl	95dc <ZSTD_getErrorString@@Base+0x2a90>
    c190:	cbnz	w23, c124 <ZSTD_freeCCtx@@Base+0x18>
    c194:	ldp	x0, x1, [x19, #496]
    c198:	stp	x0, x1, [sp, #64]
    c19c:	ldr	x0, [x19, #512]
    c1a0:	mov	x1, x21
    c1a4:	str	x0, [sp, #80]
    c1a8:	mov	x0, x19
    c1ac:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
    c1b0:	b	c128 <ZSTD_freeCCtx@@Base+0x1c>
    c1b4:	mov	w23, #0x0                   	// #0
    c1b8:	b	c168 <ZSTD_freeCCtx@@Base+0x5c>
    c1bc:	mov	x20, #0xffffffffffffffc0    	// #-64
    c1c0:	b	c128 <ZSTD_freeCCtx@@Base+0x1c>

000000000000c1c4 <ZSTD_CCtx_loadDictionary_advanced@@Base>:
    c1c4:	stp	x29, x30, [sp, #-96]!
    c1c8:	mov	x29, sp
    c1cc:	stp	x21, x22, [sp, #32]
    c1d0:	mov	x22, x1
    c1d4:	ldr	w1, [x0, #1064]
    c1d8:	stp	x19, x20, [sp, #16]
    c1dc:	stp	x23, x24, [sp, #48]
    c1e0:	cbnz	w1, c27c <ZSTD_CCtx_loadDictionary_advanced@@Base+0xb8>
    c1e4:	ldr	x23, [x0, #520]
    c1e8:	mov	x19, x0
    c1ec:	cbz	x23, c20c <ZSTD_CCtx_loadDictionary_advanced@@Base+0x48>
    c1f0:	mov	x23, #0xffffffffffffffc0    	// #-64
    c1f4:	mov	x0, x23
    c1f8:	ldp	x19, x20, [sp, #16]
    c1fc:	ldp	x21, x22, [sp, #32]
    c200:	ldp	x23, x24, [sp, #48]
    c204:	ldp	x29, x30, [sp], #96
    c208:	ret
    c20c:	mov	x20, x2
    c210:	mov	w21, w3
    c214:	mov	w24, w4
    c218:	bl	c0ac <ZSTD_freeCDict@@Base+0xac>
    c21c:	cmp	x22, #0x0
    c220:	ccmp	x20, #0x0, #0x4, ne  // ne = any
    c224:	b.eq	c1f4 <ZSTD_CCtx_loadDictionary_advanced@@Base+0x30>  // b.none
    c228:	cmp	w21, #0x1
    c22c:	b.ne	c240 <ZSTD_CCtx_loadDictionary_advanced@@Base+0x7c>  // b.any
    c230:	str	x22, [x19, #1080]
    c234:	str	x20, [x19, #1088]
    c238:	str	w24, [x19, #1096]
    c23c:	b	c1f4 <ZSTD_CCtx_loadDictionary_advanced@@Base+0x30>
    c240:	ldp	x0, x1, [x19, #496]
    c244:	stp	x0, x1, [sp, #64]
    c248:	ldr	x0, [x19, #512]
    c24c:	add	x1, sp, #0x40
    c250:	str	x0, [sp, #80]
    c254:	mov	x0, x20
    c258:	bl	6b50 <ZSTD_getErrorString@@Base+0x4>
    c25c:	mov	x21, x0
    c260:	cbz	x0, c1f0 <ZSTD_CCtx_loadDictionary_advanced@@Base+0x2c>
    c264:	mov	x2, x20
    c268:	mov	x1, x22
    c26c:	bl	4460 <memcpy@plt>
    c270:	str	x21, [x19, #1072]
    c274:	str	x21, [x19, #1080]
    c278:	b	c234 <ZSTD_CCtx_loadDictionary_advanced@@Base+0x70>
    c27c:	mov	x23, #0xffffffffffffffc4    	// #-60
    c280:	b	c1f4 <ZSTD_CCtx_loadDictionary_advanced@@Base+0x30>

000000000000c284 <ZSTD_CCtx_loadDictionary_byReference@@Base>:
    c284:	mov	w4, #0x0                   	// #0
    c288:	mov	w3, #0x1                   	// #1
    c28c:	b	49f0 <ZSTD_CCtx_loadDictionary_advanced@plt>

000000000000c290 <ZSTD_CCtx_loadDictionary@@Base>:
    c290:	mov	w4, #0x0                   	// #0
    c294:	mov	w3, #0x0                   	// #0
    c298:	b	49f0 <ZSTD_CCtx_loadDictionary_advanced@plt>

000000000000c29c <ZSTD_CCtx_refCDict@@Base>:
    c29c:	stp	x29, x30, [sp, #-32]!
    c2a0:	mov	x29, sp
    c2a4:	stp	x19, x20, [sp, #16]
    c2a8:	mov	x20, x1
    c2ac:	ldr	w1, [x0, #1064]
    c2b0:	cbnz	w1, c2d0 <ZSTD_CCtx_refCDict@@Base+0x34>
    c2b4:	mov	x19, x0
    c2b8:	bl	c0ac <ZSTD_freeCDict@@Base+0xac>
    c2bc:	mov	x0, #0x0                   	// #0
    c2c0:	str	x20, [x19, #1112]
    c2c4:	ldp	x19, x20, [sp, #16]
    c2c8:	ldp	x29, x30, [sp], #32
    c2cc:	ret
    c2d0:	mov	x0, #0xffffffffffffffc4    	// #-60
    c2d4:	b	c2c4 <ZSTD_CCtx_refCDict@@Base+0x28>

000000000000c2d8 <ZSTD_CCtx_refPrefix_advanced@@Base>:
    c2d8:	stp	x29, x30, [sp, #-48]!
    c2dc:	mov	x29, sp
    c2e0:	stp	x21, x22, [sp, #32]
    c2e4:	mov	x22, x1
    c2e8:	ldr	w1, [x0, #1064]
    c2ec:	stp	x19, x20, [sp, #16]
    c2f0:	cbnz	w1, c324 <ZSTD_CCtx_refPrefix_advanced@@Base+0x4c>
    c2f4:	mov	x19, x0
    c2f8:	mov	x21, x2
    c2fc:	mov	w20, w3
    c300:	bl	c0ac <ZSTD_freeCDict@@Base+0xac>
    c304:	mov	x0, #0x0                   	// #0
    c308:	str	x22, [x19, #1120]
    c30c:	str	x21, [x19, #1128]
    c310:	str	w20, [x19, #1136]
    c314:	ldp	x19, x20, [sp, #16]
    c318:	ldp	x21, x22, [sp, #32]
    c31c:	ldp	x29, x30, [sp], #48
    c320:	ret
    c324:	mov	x0, #0xffffffffffffffc4    	// #-60
    c328:	b	c314 <ZSTD_CCtx_refPrefix_advanced@@Base+0x3c>

000000000000c32c <ZSTD_CCtx_refPrefix@@Base>:
    c32c:	mov	w3, #0x1                   	// #1
    c330:	b	4780 <ZSTD_CCtx_refPrefix_advanced@plt>

000000000000c334 <ZSTD_CCtx_reset@@Base>:
    c334:	stp	x29, x30, [sp, #-32]!
    c338:	mov	x29, sp
    c33c:	str	x19, [sp, #16]
    c340:	mov	x19, x0
    c344:	and	w0, w1, #0xfffffffd
    c348:	cmp	w0, #0x1
    c34c:	b.ne	c358 <ZSTD_CCtx_reset@@Base+0x24>  // b.any
    c350:	str	xzr, [x19, #384]
    c354:	str	wzr, [x19, #1064]
    c358:	sub	w1, w1, #0x2
    c35c:	cmp	w1, #0x1
    c360:	b.hi	c384 <ZSTD_CCtx_reset@@Base+0x50>  // b.pmore
    c364:	ldr	w0, [x19, #1064]
    c368:	cbnz	w0, c394 <ZSTD_CCtx_reset@@Base+0x60>
    c36c:	mov	x0, x19
    c370:	bl	c0ac <ZSTD_freeCDict@@Base+0xac>
    c374:	add	x0, x19, #0x10
    c378:	ldr	x19, [sp, #16]
    c37c:	ldp	x29, x30, [sp], #32
    c380:	b	4aa0 <ZSTD_CCtxParams_reset@plt>
    c384:	mov	x0, #0x0                   	// #0
    c388:	ldr	x19, [sp, #16]
    c38c:	ldp	x29, x30, [sp], #32
    c390:	ret
    c394:	mov	x0, #0xffffffffffffffc4    	// #-60
    c398:	b	c388 <ZSTD_CCtx_reset@@Base+0x54>
    c39c:	stp	x29, x30, [sp, #-32]!
    c3a0:	mov	x2, #0x478                 	// #1144
    c3a4:	mov	x29, sp
    c3a8:	stp	x19, x20, [sp, #16]
    c3ac:	mov	x20, x1
    c3b0:	mov	x19, x0
    c3b4:	mov	w1, #0x0                   	// #0
    c3b8:	bl	4700 <memset@plt>
    c3bc:	ldp	x0, x1, [x20]
    c3c0:	stp	x0, x1, [x19, #496]
    c3c4:	ldr	x0, [x20, #16]
    c3c8:	str	x0, [x19, #512]
    c3cc:	mov	x0, x19
    c3d0:	mov	w1, #0x2                   	// #2
    c3d4:	ldp	x19, x20, [sp, #16]
    c3d8:	ldp	x29, x30, [sp], #32
    c3dc:	b	4590 <ZSTD_CCtx_reset@plt>

000000000000c3e0 <ZSTD_createCCtx_advanced@@Base>:
    c3e0:	stp	x29, x30, [sp, #-80]!
    c3e4:	mov	x29, sp
    c3e8:	stp	x19, x20, [sp, #16]
    c3ec:	mov	x19, x0
    c3f0:	ldr	x0, [x0]
    c3f4:	cmp	x0, #0x0
    c3f8:	ldr	x0, [x19, #8]
    c3fc:	cset	w1, eq  // eq = none
    c400:	str	x21, [sp, #32]
    c404:	cmp	x0, #0x0
    c408:	cset	w0, eq  // eq = none
    c40c:	cmp	w1, w0
    c410:	b.ne	c468 <ZSTD_createCCtx_advanced@@Base+0x88>  // b.any
    c414:	ldp	x0, x1, [x19]
    c418:	stp	x0, x1, [sp, #48]
    c41c:	add	x21, sp, #0x30
    c420:	ldr	x0, [x19, #16]
    c424:	mov	x1, x21
    c428:	str	x0, [sp, #64]
    c42c:	mov	x0, #0x478                 	// #1144
    c430:	bl	6b50 <ZSTD_getErrorString@@Base+0x4>
    c434:	mov	x20, x0
    c438:	cbz	x0, c454 <ZSTD_createCCtx_advanced@@Base+0x74>
    c43c:	ldp	x2, x3, [x19]
    c440:	stp	x2, x3, [sp, #48]
    c444:	ldr	x1, [x19, #16]
    c448:	str	x1, [sp, #64]
    c44c:	mov	x1, x21
    c450:	bl	c39c <ZSTD_CCtx_reset@@Base+0x68>
    c454:	mov	x0, x20
    c458:	ldp	x19, x20, [sp, #16]
    c45c:	ldr	x21, [sp, #32]
    c460:	ldp	x29, x30, [sp], #80
    c464:	ret
    c468:	mov	x20, #0x0                   	// #0
    c46c:	b	c454 <ZSTD_createCCtx_advanced@@Base+0x74>

000000000000c470 <ZSTD_createCCtx@@Base>:
    c470:	adrp	x0, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    c474:	add	x0, x0, #0x2a0
    c478:	stp	x29, x30, [sp, #-48]!
    c47c:	mov	x29, sp
    c480:	ldp	x2, x3, [x0]
    c484:	stp	x2, x3, [sp, #16]
    c488:	ldr	x0, [x0, #16]
    c48c:	str	x0, [sp, #32]
    c490:	add	x0, sp, #0x10
    c494:	bl	4500 <ZSTD_createCCtx_advanced@plt>
    c498:	ldp	x29, x30, [sp], #48
    c49c:	ret

000000000000c4a0 <ZSTD_createCDict_advanced@@Base>:
    c4a0:	stp	x29, x30, [sp, #-224]!
    c4a4:	mov	x29, sp
    c4a8:	stp	x23, x24, [sp, #48]
    c4ac:	mov	x24, x0
    c4b0:	ldr	x0, [x5]
    c4b4:	stp	x19, x20, [sp, #16]
    c4b8:	cmp	x0, #0x0
    c4bc:	stp	x21, x22, [sp, #32]
    c4c0:	mov	x22, x1
    c4c4:	ldr	x0, [x5, #8]
    c4c8:	cset	w1, eq  // eq = none
    c4cc:	stp	x25, x26, [sp, #64]
    c4d0:	cmp	x0, #0x0
    c4d4:	str	x27, [sp, #80]
    c4d8:	cset	w0, eq  // eq = none
    c4dc:	cmp	w1, w0
    c4e0:	b.ne	c630 <ZSTD_createCDict_advanced@@Base+0x190>  // b.any
    c4e4:	mov	x20, x5
    c4e8:	mov	w23, w2
    c4ec:	mov	w25, w3
    c4f0:	mov	x26, x4
    c4f4:	mov	x0, x4
    c4f8:	mov	w1, #0x0                   	// #0
    c4fc:	bl	92fc <ZSTD_getErrorString@@Base+0x27b0>
    c500:	add	x27, sp, #0x80
    c504:	mov	x2, #0x2b40                	// #11072
    c508:	add	x21, x0, x2
    c50c:	add	x0, x22, #0x7
    c510:	cmp	w23, #0x1
    c514:	and	x0, x0, #0xfffffffffffffff8
    c518:	csel	x0, x0, xzr, ne  // ne = any
    c51c:	add	x21, x21, x0
    c520:	ldp	x0, x1, [x20]
    c524:	stp	x0, x1, [sp, #128]
    c528:	ldr	x0, [x20, #16]
    c52c:	mov	x1, x27
    c530:	str	x0, [sp, #144]
    c534:	mov	x0, x21
    c538:	bl	6b50 <ZSTD_getErrorString@@Base+0x4>
    c53c:	mov	x19, x0
    c540:	cbnz	x0, c57c <ZSTD_createCDict_advanced@@Base+0xdc>
    c544:	ldp	x2, x3, [x20]
    c548:	stp	x2, x3, [sp, #128]
    c54c:	ldr	x1, [x20, #16]
    c550:	str	x1, [sp, #144]
    c554:	mov	x1, x27
    c558:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
    c55c:	mov	x0, x19
    c560:	ldp	x19, x20, [sp, #16]
    c564:	ldp	x21, x22, [sp, #32]
    c568:	ldp	x23, x24, [sp, #48]
    c56c:	ldp	x25, x26, [sp, #64]
    c570:	ldr	x27, [sp, #80]
    c574:	ldp	x29, x30, [sp], #224
    c578:	ret
    c57c:	add	x21, x0, x21
    c580:	mov	x1, #0x1340                	// #4928
    c584:	add	x0, sp, #0xa0
    c588:	stp	x19, x21, [sp, #160]
    c58c:	stp	x19, x19, [sp, #176]
    c590:	stp	x19, x21, [sp, #192]
    c594:	str	xzr, [sp, #208]
    c598:	str	wzr, [sp, #216]
    c59c:	bl	91d0 <ZSTD_getErrorString@@Base+0x2684>
    c5a0:	ldp	x2, x3, [sp, #160]
    c5a4:	stp	x2, x3, [x0, #24]
    c5a8:	mov	x1, #0x1320                	// #4896
    c5ac:	ldp	x2, x3, [sp, #176]
    c5b0:	stp	x2, x3, [x0, #40]
    c5b4:	add	x1, x0, x1
    c5b8:	ldp	x2, x3, [sp, #192]
    c5bc:	stp	x2, x3, [x0, #56]
    c5c0:	mov	x19, x0
    c5c4:	ldp	x2, x3, [sp, #208]
    c5c8:	stp	x2, x3, [x0, #72]
    c5cc:	add	x5, sp, #0x60
    c5d0:	ldp	x2, x3, [x20]
    c5d4:	stp	x2, x3, [x1]
    c5d8:	mov	w4, w25
    c5dc:	ldr	x1, [x20, #16]
    c5e0:	str	x1, [x0, #4912]
    c5e4:	str	wzr, [x0, #4924]
    c5e8:	ldp	x2, x3, [x26]
    c5ec:	stp	x2, x3, [sp, #96]
    c5f0:	ldr	x1, [x26, #16]
    c5f4:	str	x1, [sp, #112]
    c5f8:	mov	w3, w23
    c5fc:	mov	x2, x22
    c600:	ldr	w1, [x26, #24]
    c604:	str	w1, [sp, #120]
    c608:	mov	x1, x24
    c60c:	stp	xzr, xzr, [sp, #160]
    c610:	stp	xzr, xzr, [sp, #176]
    c614:	stp	xzr, xzr, [sp, #192]
    c618:	stp	xzr, xzr, [sp, #208]
    c61c:	bl	9fdc <ZSTD_getErrorString@@Base+0x3490>
    c620:	cmn	x0, #0x78
    c624:	b.ls	c55c <ZSTD_createCDict_advanced@@Base+0xbc>  // b.plast
    c628:	mov	x0, x19
    c62c:	bl	45c0 <ZSTD_freeCDict@plt>
    c630:	mov	x19, #0x0                   	// #0
    c634:	b	c55c <ZSTD_createCDict_advanced@@Base+0xbc>

000000000000c638 <ZSTD_initStaticCDict@@Base>:
    c638:	stp	x29, x30, [sp, #-128]!
    c63c:	add	x7, x3, #0x7
    c640:	cmp	w4, #0x1
    c644:	mov	x29, sp
    c648:	str	x19, [sp, #16]
    c64c:	and	x7, x7, #0xfffffffffffffff8
    c650:	csel	x7, x7, xzr, ne  // ne = any
    c654:	tst	x0, #0x7
    c658:	b.ne	c720 <ZSTD_initStaticCDict@@Base+0xe8>  // b.any
    c65c:	mov	x8, x0
    c660:	mov	x10, x1
    c664:	mov	w15, w4
    c668:	mov	x11, x2
    c66c:	mov	x14, x3
    c670:	mov	w18, w5
    c674:	mov	x9, x6
    c678:	mov	x0, x6
    c67c:	mov	w1, #0x0                   	// #0
    c680:	bl	92fc <ZSTD_getErrorString@@Base+0x27b0>
    c684:	mov	x4, x0
    c688:	add	x0, x8, x10
    c68c:	mov	x1, #0x1340                	// #4928
    c690:	stp	x8, x0, [sp, #64]
    c694:	stp	x8, x8, [sp, #80]
    c698:	stp	x8, x0, [sp, #96]
    c69c:	add	x0, sp, #0x40
    c6a0:	str	xzr, [sp, #112]
    c6a4:	str	wzr, [sp, #120]
    c6a8:	bl	91d0 <ZSTD_getErrorString@@Base+0x2684>
    c6ac:	mov	x19, x0
    c6b0:	cbz	x0, c724 <ZSTD_initStaticCDict@@Base+0xec>
    c6b4:	ldp	x12, x13, [sp, #64]
    c6b8:	stp	x12, x13, [x0, #24]
    c6bc:	mov	x1, #0x2b40                	// #11072
    c6c0:	ldp	x12, x13, [sp, #80]
    c6c4:	stp	x12, x13, [x0, #40]
    c6c8:	add	x7, x7, x1
    c6cc:	ldp	x12, x13, [sp, #96]
    c6d0:	stp	x12, x13, [x0, #56]
    c6d4:	add	x7, x7, x4
    c6d8:	ldp	x12, x13, [sp, #112]
    c6dc:	stp	x12, x13, [x0, #72]
    c6e0:	cmp	x7, x10
    c6e4:	b.hi	c720 <ZSTD_initStaticCDict@@Base+0xe8>  // b.pmore
    c6e8:	ldp	x2, x3, [x9]
    c6ec:	stp	x2, x3, [sp, #32]
    c6f0:	add	x5, sp, #0x20
    c6f4:	ldr	x1, [x9, #16]
    c6f8:	str	x1, [sp, #48]
    c6fc:	mov	w4, w18
    c700:	mov	w3, w15
    c704:	ldr	w1, [x9, #24]
    c708:	mov	x2, x14
    c70c:	str	w1, [sp, #56]
    c710:	mov	x1, x11
    c714:	bl	9fdc <ZSTD_getErrorString@@Base+0x3490>
    c718:	cmn	x0, #0x78
    c71c:	b.ls	c724 <ZSTD_initStaticCDict@@Base+0xec>  // b.plast
    c720:	mov	x19, #0x0                   	// #0
    c724:	mov	x0, x19
    c728:	ldr	x19, [sp, #16]
    c72c:	ldp	x29, x30, [sp], #128
    c730:	ret
    c734:	add	x1, x0, #0x110
    c738:	ldp	x2, x3, [x0, #272]
    c73c:	stp	x2, x3, [x8]
    c740:	ldr	x0, [x0, #288]
    c744:	str	x0, [x8, #16]
    c748:	ldr	w0, [x1, #24]
    c74c:	str	w0, [x8, #24]
    c750:	ret

000000000000c754 <ZSTD_initStaticCStream@@Base>:
    c754:	b	4a80 <ZSTD_initStaticCCtx@plt>

000000000000c758 <ZSTD_createCStream_advanced@@Base>:
    c758:	stp	x29, x30, [sp, #-48]!
    c75c:	mov	x29, sp
    c760:	ldp	x2, x3, [x0]
    c764:	stp	x2, x3, [sp, #16]
    c768:	ldr	x0, [x0, #16]
    c76c:	str	x0, [sp, #32]
    c770:	add	x0, sp, #0x10
    c774:	bl	4500 <ZSTD_createCCtx_advanced@plt>
    c778:	ldp	x29, x30, [sp], #48
    c77c:	ret

000000000000c780 <ZSTD_createCStream@@Base>:
    c780:	adrp	x0, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    c784:	add	x0, x0, #0x2a0
    c788:	stp	x29, x30, [sp, #-48]!
    c78c:	mov	x29, sp
    c790:	ldp	x2, x3, [x0]
    c794:	stp	x2, x3, [sp, #16]
    c798:	ldr	x0, [x0, #16]
    c79c:	str	x0, [sp, #32]
    c7a0:	add	x0, sp, #0x10
    c7a4:	bl	4a20 <ZSTD_createCStream_advanced@plt>
    c7a8:	ldp	x29, x30, [sp], #48
    c7ac:	ret

000000000000c7b0 <ZSTD_freeCStream@@Base>:
    c7b0:	b	45f0 <ZSTD_freeCCtx@plt>

000000000000c7b4 <ZSTD_CStreamInSize@@Base>:
    c7b4:	mov	x0, #0x20000               	// #131072
    c7b8:	ret

000000000000c7bc <ZSTD_CStreamOutSize@@Base>:
    c7bc:	stp	x29, x30, [sp, #-16]!
    c7c0:	mov	x0, #0x20000               	// #131072
    c7c4:	mov	x29, sp
    c7c8:	bl	4980 <ZSTD_compressBound@plt>
    c7cc:	add	x0, x0, #0x7
    c7d0:	ldp	x29, x30, [sp], #16
    c7d4:	ret

000000000000c7d8 <ZSTD_resetCStream@@Base>:
    c7d8:	cmp	x1, #0x0
    c7dc:	stp	x29, x30, [sp, #-32]!
    c7e0:	mov	x29, sp
    c7e4:	stp	x19, x20, [sp, #16]
    c7e8:	csinv	x19, x1, xzr, ne  // ne = any
    c7ec:	mov	x20, x0
    c7f0:	mov	w1, #0x1                   	// #1
    c7f4:	bl	4590 <ZSTD_CCtx_reset@plt>
    c7f8:	cmn	x0, #0x78
    c7fc:	b.hi	c818 <ZSTD_resetCStream@@Base+0x40>  // b.pmore
    c800:	mov	x1, x19
    c804:	mov	x0, x20
    c808:	bl	4ab0 <ZSTD_CCtx_setPledgedSrcSize@plt>
    c80c:	cmn	x0, #0x78
    c810:	b.hi	c818 <ZSTD_resetCStream@@Base+0x40>  // b.pmore
    c814:	mov	x0, #0x0                   	// #0
    c818:	ldp	x19, x20, [sp, #16]
    c81c:	ldp	x29, x30, [sp], #32
    c820:	ret
    c824:	stp	x29, x30, [sp, #-64]!
    c828:	mov	x29, sp
    c82c:	stp	x19, x20, [sp, #16]
    c830:	mov	x19, x0
    c834:	mov	x20, x1
    c838:	mov	w1, #0x1                   	// #1
    c83c:	stp	x21, x22, [sp, #32]
    c840:	mov	x22, x2
    c844:	mov	x21, x3
    c848:	stp	x23, x24, [sp, #48]
    c84c:	mov	x23, x4
    c850:	mov	x24, x5
    c854:	bl	4590 <ZSTD_CCtx_reset@plt>
    c858:	cmn	x0, #0x78
    c85c:	b.hi	c8a4 <ZSTD_resetCStream@@Base+0xcc>  // b.pmore
    c860:	mov	x1, x24
    c864:	mov	x0, x19
    c868:	bl	4ab0 <ZSTD_CCtx_setPledgedSrcSize@plt>
    c86c:	cmn	x0, #0x78
    c870:	b.hi	c8a4 <ZSTD_resetCStream@@Base+0xcc>  // b.pmore
    c874:	mov	x1, x23
    c878:	add	x0, x19, #0x10
    c87c:	mov	x2, #0x90                  	// #144
    c880:	bl	4460 <memcpy@plt>
    c884:	cbz	x20, c8b8 <ZSTD_resetCStream@@Base+0xe0>
    c888:	mov	x2, x22
    c88c:	mov	x1, x20
    c890:	mov	x0, x19
    c894:	bl	4680 <ZSTD_CCtx_loadDictionary@plt>
    c898:	cmn	x0, #0x78
    c89c:	b.hi	c8a4 <ZSTD_resetCStream@@Base+0xcc>  // b.pmore
    c8a0:	mov	x0, #0x0                   	// #0
    c8a4:	ldp	x19, x20, [sp, #16]
    c8a8:	ldp	x21, x22, [sp, #32]
    c8ac:	ldp	x23, x24, [sp, #48]
    c8b0:	ldp	x29, x30, [sp], #64
    c8b4:	ret
    c8b8:	mov	x1, x21
    c8bc:	mov	x0, x19
    c8c0:	bl	4450 <ZSTD_CCtx_refCDict@plt>
    c8c4:	b	c898 <ZSTD_resetCStream@@Base+0xc0>

000000000000c8c8 <ZSTD_initCStream_usingCDict_advanced@@Base>:
    c8c8:	stp	x29, x30, [sp, #-64]!
    c8cc:	mov	x29, sp
    c8d0:	stp	x19, x20, [sp, #16]
    c8d4:	mov	x19, x0
    c8d8:	mov	x20, x1
    c8dc:	mov	w1, #0x1                   	// #1
    c8e0:	str	x21, [sp, #32]
    c8e4:	mov	x21, x4
    c8e8:	str	x2, [sp, #48]
    c8ec:	str	w3, [sp, #56]
    c8f0:	bl	4590 <ZSTD_CCtx_reset@plt>
    c8f4:	cmn	x0, #0x78
    c8f8:	b.hi	c938 <ZSTD_initCStream_usingCDict_advanced@@Base+0x70>  // b.pmore
    c8fc:	mov	x1, x21
    c900:	mov	x0, x19
    c904:	bl	4ab0 <ZSTD_CCtx_setPledgedSrcSize@plt>
    c908:	cmn	x0, #0x78
    c90c:	b.hi	c938 <ZSTD_initCStream_usingCDict_advanced@@Base+0x70>  // b.pmore
    c910:	ldr	x0, [sp, #48]
    c914:	str	x0, [x19, #48]
    c918:	ldr	w0, [sp, #56]
    c91c:	mov	x1, x20
    c920:	str	w0, [x19, #56]
    c924:	mov	x0, x19
    c928:	bl	4450 <ZSTD_CCtx_refCDict@plt>
    c92c:	cmn	x0, #0x78
    c930:	b.hi	c938 <ZSTD_initCStream_usingCDict_advanced@@Base+0x70>  // b.pmore
    c934:	mov	x0, #0x0                   	// #0
    c938:	ldp	x19, x20, [sp, #16]
    c93c:	ldr	x21, [sp, #32]
    c940:	ldp	x29, x30, [sp], #64
    c944:	ret

000000000000c948 <ZSTD_initCStream_usingCDict@@Base>:
    c948:	stp	x29, x30, [sp, #-32]!
    c94c:	mov	x29, sp
    c950:	stp	x19, x20, [sp, #16]
    c954:	mov	x19, x0
    c958:	mov	x20, x1
    c95c:	mov	w1, #0x1                   	// #1
    c960:	bl	4590 <ZSTD_CCtx_reset@plt>
    c964:	cmn	x0, #0x78
    c968:	b.hi	c984 <ZSTD_initCStream_usingCDict@@Base+0x3c>  // b.pmore
    c96c:	mov	x1, x20
    c970:	mov	x0, x19
    c974:	bl	4450 <ZSTD_CCtx_refCDict@plt>
    c978:	cmn	x0, #0x78
    c97c:	b.hi	c984 <ZSTD_initCStream_usingCDict@@Base+0x3c>  // b.pmore
    c980:	mov	x0, #0x0                   	// #0
    c984:	ldp	x19, x20, [sp, #16]
    c988:	ldp	x29, x30, [sp], #32
    c98c:	ret

000000000000c990 <ZSTD_maxCLevel@@Base>:
    c990:	mov	w0, #0x16                  	// #22
    c994:	ret

000000000000c998 <ZSTD_minCLevel@@Base>:
    c998:	mov	w0, #0xfffe0000            	// #-131072
    c99c:	ret

000000000000c9a0 <ZSTD_cParam_getBounds@@Base>:
    c9a0:	cmp	w0, #0xa4
    c9a4:	b.hi	ca0c <ZSTD_cParam_getBounds@@Base+0x6c>  // b.pmore
    c9a8:	cmp	w0, #0x9f
    c9ac:	b.hi	c9cc <ZSTD_cParam_getBounds@@Base+0x2c>  // b.pmore
    c9b0:	cmp	w0, #0xa
    c9b4:	b.eq	ca34 <ZSTD_cParam_getBounds@@Base+0x94>  // b.none
    c9b8:	sub	w0, w0, #0x64
    c9bc:	cmp	w0, #0x7
    c9c0:	b.ls	c9f4 <ZSTD_cParam_getBounds@@Base+0x54>  // b.plast
    c9c4:	mov	x2, #0xffffffffffffffd8    	// #-40
    c9c8:	b	cb10 <ZSTD_cParam_getBounds@@Base+0x170>
    c9cc:	sub	w0, w0, #0xa1
    c9d0:	cmp	w0, #0x3
    c9d4:	b.hi	ca34 <ZSTD_cParam_getBounds@@Base+0x94>  // b.pmore
    c9d8:	adrp	x1, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    c9dc:	mov	x2, #0x0                   	// #0
    c9e0:	add	x1, x1, #0x26c
    c9e4:	ldrb	w0, [x1, w0, uxtw]
    c9e8:	adr	x1, c9f4 <ZSTD_cParam_getBounds@@Base+0x54>
    c9ec:	add	x0, x1, w0, sxtb #2
    c9f0:	br	x0
    c9f4:	adrp	x1, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    c9f8:	add	x1, x1, #0x270
    c9fc:	ldrb	w0, [x1, w0, uxtw]
    ca00:	adr	x1, ca0c <ZSTD_cParam_getBounds@@Base+0x6c>
    ca04:	add	x0, x1, w0, sxtb #2
    ca08:	br	x0
    ca0c:	cmp	w0, #0x1f4
    ca10:	b.eq	ca34 <ZSTD_cParam_getBounds@@Base+0x94>  // b.none
    ca14:	b.hi	ca54 <ZSTD_cParam_getBounds@@Base+0xb4>  // b.pmore
    ca18:	cmp	w0, #0x191
    ca1c:	b.hi	ca40 <ZSTD_cParam_getBounds@@Base+0xa0>  // b.pmore
    ca20:	cmp	w0, #0x18f
    ca24:	b.hi	cb0c <ZSTD_cParam_getBounds@@Base+0x16c>  // b.pmore
    ca28:	sub	w0, w0, #0xc8
    ca2c:	cmp	w0, #0x2
    ca30:	b.hi	c9c4 <ZSTD_cParam_getBounds@@Base+0x24>  // b.pmore
    ca34:	mov	x2, #0x0                   	// #0
    ca38:	mov	x1, #0x100000000           	// #4294967296
    ca3c:	b	cabc <ZSTD_cParam_getBounds@@Base+0x11c>
    ca40:	cmp	w0, #0x192
    ca44:	b.ne	c9c4 <ZSTD_cParam_getBounds@@Base+0x24>  // b.any
    ca48:	mov	x2, #0x0                   	// #0
    ca4c:	mov	x1, #0x900000000           	// #38654705664
    ca50:	b	cabc <ZSTD_cParam_getBounds@@Base+0x11c>
    ca54:	sub	w0, w0, #0x3e8
    ca58:	cmp	w0, #0x4
    ca5c:	b.hi	c9c4 <ZSTD_cParam_getBounds@@Base+0x24>  // b.pmore
    ca60:	adrp	x1, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    ca64:	add	x1, x1, #0x278
    ca68:	ldrb	w0, [x1, w0, uxtw]
    ca6c:	adr	x1, ca78 <ZSTD_cParam_getBounds@@Base+0xd8>
    ca70:	add	x0, x1, w0, sxtb #2
    ca74:	br	x0
    ca78:	stp	x29, x30, [sp, #-32]!
    ca7c:	mov	x29, sp
    ca80:	str	x19, [sp, #16]
    ca84:	bl	4520 <ZSTD_minCLevel@plt>
    ca88:	mov	w19, w0
    ca8c:	bl	4b60 <ZSTD_maxCLevel@plt>
    ca90:	mov	x1, #0x0                   	// #0
    ca94:	mov	x2, #0x0                   	// #0
    ca98:	bfxil	x1, x19, #0, #32
    ca9c:	ldr	x19, [sp, #16]
    caa0:	bfi	x1, x0, #32, #32
    caa4:	ldp	x29, x30, [sp], #32
    caa8:	mov	x0, x2
    caac:	ret
    cab0:	mov	x1, #0xa                   	// #10
    cab4:	mov	x2, #0x0                   	// #0
    cab8:	movk	x1, #0x1f, lsl #32
    cabc:	mov	x0, x2
    cac0:	ret
    cac4:	mov	x2, #0x0                   	// #0
    cac8:	mov	x1, #0x6                   	// #6
    cacc:	b	cad8 <ZSTD_cParam_getBounds@@Base+0x138>
    cad0:	mov	x2, #0x0                   	// #0
    cad4:	mov	x1, #0x1                   	// #1
    cad8:	movk	x1, #0x1e, lsl #32
    cadc:	b	cabc <ZSTD_cParam_getBounds@@Base+0x11c>
    cae0:	mov	x1, #0x3                   	// #3
    cae4:	mov	x2, #0x0                   	// #0
    cae8:	movk	x1, #0x7, lsl #32
    caec:	b	cabc <ZSTD_cParam_getBounds@@Base+0x11c>
    caf0:	mov	x2, #0x0                   	// #0
    caf4:	mov	x1, #0x2000000000000       	// #562949953421312
    caf8:	b	cabc <ZSTD_cParam_getBounds@@Base+0x11c>
    cafc:	mov	x1, #0x1                   	// #1
    cb00:	mov	x2, #0x0                   	// #0
    cb04:	movk	x1, #0x9, lsl #32
    cb08:	b	cabc <ZSTD_cParam_getBounds@@Base+0x11c>
    cb0c:	mov	x2, #0x0                   	// #0
    cb10:	mov	x1, #0x0                   	// #0
    cb14:	b	cabc <ZSTD_cParam_getBounds@@Base+0x11c>
    cb18:	mov	x1, #0x4                   	// #4
    cb1c:	movk	x1, #0x1000, lsl #32
    cb20:	b	cabc <ZSTD_cParam_getBounds@@Base+0x11c>
    cb24:	mov	x1, #0x1                   	// #1
    cb28:	movk	x1, #0x8, lsl #32
    cb2c:	b	cabc <ZSTD_cParam_getBounds@@Base+0x11c>
    cb30:	mov	x1, #0x1900000000          	// #107374182400
    cb34:	b	cabc <ZSTD_cParam_getBounds@@Base+0x11c>
    cb38:	mov	x2, #0x0                   	// #0
    cb3c:	mov	x1, #0x300000000           	// #12884901888
    cb40:	b	cabc <ZSTD_cParam_getBounds@@Base+0x11c>
    cb44:	mov	x2, #0x0                   	// #0
    cb48:	mov	x1, #0x200000000           	// #8589934592
    cb4c:	b	cabc <ZSTD_cParam_getBounds@@Base+0x11c>
    cb50:	mov	x1, #0x40                  	// #64
    cb54:	mov	x2, #0x0                   	// #0
    cb58:	movk	x1, #0x2, lsl #48
    cb5c:	b	cabc <ZSTD_cParam_getBounds@@Base+0x11c>
    cb60:	mov	x2, #0x0                   	// #0
    cb64:	mov	x1, #0x7fffffff00000000    	// #9223372032559808512
    cb68:	b	cabc <ZSTD_cParam_getBounds@@Base+0x11c>
    cb6c:	stp	x29, x30, [sp, #-32]!
    cb70:	mov	x29, sp
    cb74:	str	x19, [sp, #16]
    cb78:	mov	w19, w1
    cb7c:	bl	49b0 <ZSTD_cParam_getBounds@plt>
    cb80:	cmn	x0, #0x78
    cb84:	b.hi	cba8 <ZSTD_cParam_getBounds@@Base+0x208>  // b.pmore
    cb88:	cmp	w19, w1
    cb8c:	b.lt	cba8 <ZSTD_cParam_getBounds@@Base+0x208>  // b.tstop
    cb90:	asr	x0, x1, #32
    cb94:	cmp	w19, w0
    cb98:	cset	w0, le
    cb9c:	ldr	x19, [sp, #16]
    cba0:	ldp	x29, x30, [sp], #32
    cba4:	ret
    cba8:	mov	w0, #0x0                   	// #0
    cbac:	b	cb9c <ZSTD_cParam_getBounds@@Base+0x1fc>

000000000000cbb0 <ZSTD_CCtxParams_setParameter@@Base>:
    cbb0:	stp	x29, x30, [sp, #-32]!
    cbb4:	cmp	w1, #0xa4
    cbb8:	mov	x29, sp
    cbbc:	stp	x19, x20, [sp, #16]
    cbc0:	mov	x20, x0
    cbc4:	mov	w19, w2
    cbc8:	mov	w0, w1
    cbcc:	b.hi	cc30 <ZSTD_CCtxParams_setParameter@@Base+0x80>  // b.pmore
    cbd0:	cmp	w1, #0x9f
    cbd4:	b.hi	cbf4 <ZSTD_CCtxParams_setParameter@@Base+0x44>  // b.pmore
    cbd8:	cmp	w1, #0xa
    cbdc:	b.eq	cca0 <ZSTD_CCtxParams_setParameter@@Base+0xf0>  // b.none
    cbe0:	sub	w0, w1, #0x64
    cbe4:	cmp	w0, #0x7
    cbe8:	b.ls	cc18 <ZSTD_CCtxParams_setParameter@@Base+0x68>  // b.plast
    cbec:	mov	x0, #0xffffffffffffffd8    	// #-40
    cbf0:	b	ccb0 <ZSTD_CCtxParams_setParameter@@Base+0x100>
    cbf4:	sub	w0, w1, #0xa1
    cbf8:	cmp	w0, #0x3
    cbfc:	b.hi	ce50 <ZSTD_CCtxParams_setParameter@@Base+0x2a0>  // b.pmore
    cc00:	adrp	x1, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    cc04:	add	x1, x1, #0x280
    cc08:	ldrh	w0, [x1, w0, uxtw #1]
    cc0c:	adr	x1, cc18 <ZSTD_CCtxParams_setParameter@@Base+0x68>
    cc10:	add	x0, x1, w0, sxth #2
    cc14:	br	x0
    cc18:	adrp	x1, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    cc1c:	add	x1, x1, #0x288
    cc20:	ldrb	w0, [x1, w0, uxtw]
    cc24:	adr	x1, cc30 <ZSTD_CCtxParams_setParameter@@Base+0x80>
    cc28:	add	x0, x1, w0, sxtb #2
    cc2c:	br	x0
    cc30:	cmp	w1, #0x1f4
    cc34:	b.eq	cc74 <ZSTD_CCtxParams_setParameter@@Base+0xc4>  // b.none
    cc38:	b.hi	cc7c <ZSTD_CCtxParams_setParameter@@Base+0xcc>  // b.pmore
    cc3c:	cmp	w1, #0xca
    cc40:	b.eq	cdfc <ZSTD_CCtxParams_setParameter@@Base+0x24c>  // b.none
    cc44:	b.hi	cc68 <ZSTD_CCtxParams_setParameter@@Base+0xb8>  // b.pmore
    cc48:	cmp	w1, #0xc8
    cc4c:	b.eq	cde8 <ZSTD_CCtxParams_setParameter@@Base+0x238>  // b.none
    cc50:	cmp	w1, #0xc9
    cc54:	b.ne	cbec <ZSTD_CCtxParams_setParameter@@Base+0x3c>  // b.any
    cc58:	cmp	w2, #0x0
    cc5c:	cset	w1, ne  // ne = any
    cc60:	str	w1, [x20, #36]
    cc64:	b	cdf4 <ZSTD_CCtxParams_setParameter@@Base+0x244>
    cc68:	sub	w0, w1, #0x190
    cc6c:	cmp	w0, #0x2
    cc70:	b.hi	cbec <ZSTD_CCtxParams_setParameter@@Base+0x3c>  // b.pmore
    cc74:	cbz	w19, ccfc <ZSTD_CCtxParams_setParameter@@Base+0x14c>
    cc78:	b	cbec <ZSTD_CCtxParams_setParameter@@Base+0x3c>
    cc7c:	sub	w0, w1, #0x3e8
    cc80:	cmp	w0, #0x4
    cc84:	b.hi	cbec <ZSTD_CCtxParams_setParameter@@Base+0x3c>  // b.pmore
    cc88:	adrp	x1, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    cc8c:	add	x1, x1, #0x290
    cc90:	ldrh	w0, [x1, w0, uxtw #1]
    cc94:	adr	x1, cca0 <ZSTD_CCtxParams_setParameter@@Base+0xf0>
    cc98:	add	x0, x1, w0, sxth #2
    cc9c:	br	x0
    cca0:	mov	w1, w2
    cca4:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    cca8:	cbnz	w0, ccbc <ZSTD_CCtxParams_setParameter@@Base+0x10c>
    ccac:	mov	x0, #0xffffffffffffffd6    	// #-42
    ccb0:	ldp	x19, x20, [sp, #16]
    ccb4:	ldp	x29, x30, [sp], #32
    ccb8:	ret
    ccbc:	str	w19, [x20]
    ccc0:	mov	w0, w19
    ccc4:	b	ccb0 <ZSTD_CCtxParams_setParameter@@Base+0x100>
    ccc8:	mov	w0, #0x64                  	// #100
    cccc:	bl	49b0 <ZSTD_cParam_getBounds@plt>
    ccd0:	cmn	x0, #0x78
    ccd4:	b.hi	ccb0 <ZSTD_CCtxParams_setParameter@@Base+0x100>  // b.pmore
    ccd8:	cmp	w19, w1
    ccdc:	csel	w19, w19, w1, gt
    cce0:	asr	x1, x1, #32
    cce4:	cmp	w19, w1
    cce8:	csel	w1, w19, w1, lt  // lt = tstop
    ccec:	cbz	w1, ccf4 <ZSTD_CCtxParams_setParameter@@Base+0x144>
    ccf0:	str	w1, [x20, #44]
    ccf4:	ldr	w0, [x20, #44]
    ccf8:	tbz	w0, #31, cd04 <ZSTD_CCtxParams_setParameter@@Base+0x154>
    ccfc:	mov	x0, #0x0                   	// #0
    cd00:	b	ccb0 <ZSTD_CCtxParams_setParameter@@Base+0x100>
    cd04:	sxtw	x0, w0
    cd08:	b	ccb0 <ZSTD_CCtxParams_setParameter@@Base+0x100>
    cd0c:	cbnz	w2, cd18 <ZSTD_CCtxParams_setParameter@@Base+0x168>
    cd10:	str	w19, [x20, #4]
    cd14:	b	ccc0 <ZSTD_CCtxParams_setParameter@@Base+0x110>
    cd18:	mov	w1, w2
    cd1c:	mov	w0, #0x65                  	// #101
    cd20:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    cd24:	cbnz	w0, cd10 <ZSTD_CCtxParams_setParameter@@Base+0x160>
    cd28:	b	ccac <ZSTD_CCtxParams_setParameter@@Base+0xfc>
    cd2c:	cbnz	w2, cd38 <ZSTD_CCtxParams_setParameter@@Base+0x188>
    cd30:	str	w19, [x20, #12]
    cd34:	b	ccc0 <ZSTD_CCtxParams_setParameter@@Base+0x110>
    cd38:	mov	w1, w2
    cd3c:	mov	w0, #0x66                  	// #102
    cd40:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    cd44:	cbnz	w0, cd30 <ZSTD_CCtxParams_setParameter@@Base+0x180>
    cd48:	b	ccac <ZSTD_CCtxParams_setParameter@@Base+0xfc>
    cd4c:	cbnz	w2, cd58 <ZSTD_CCtxParams_setParameter@@Base+0x1a8>
    cd50:	str	w19, [x20, #8]
    cd54:	b	ccc0 <ZSTD_CCtxParams_setParameter@@Base+0x110>
    cd58:	mov	w1, w2
    cd5c:	mov	w0, #0x67                  	// #103
    cd60:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    cd64:	cbnz	w0, cd50 <ZSTD_CCtxParams_setParameter@@Base+0x1a0>
    cd68:	b	ccac <ZSTD_CCtxParams_setParameter@@Base+0xfc>
    cd6c:	cbnz	w2, cd7c <ZSTD_CCtxParams_setParameter@@Base+0x1cc>
    cd70:	str	w19, [x20, #16]
    cd74:	sxtw	x0, w19
    cd78:	b	ccb0 <ZSTD_CCtxParams_setParameter@@Base+0x100>
    cd7c:	mov	w1, w2
    cd80:	mov	w0, #0x68                  	// #104
    cd84:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    cd88:	cbnz	w0, cd70 <ZSTD_CCtxParams_setParameter@@Base+0x1c0>
    cd8c:	b	ccac <ZSTD_CCtxParams_setParameter@@Base+0xfc>
    cd90:	cbnz	w2, cd9c <ZSTD_CCtxParams_setParameter@@Base+0x1ec>
    cd94:	str	w19, [x20, #20]
    cd98:	b	ccc0 <ZSTD_CCtxParams_setParameter@@Base+0x110>
    cd9c:	mov	w1, w2
    cda0:	mov	w0, #0x69                  	// #105
    cda4:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    cda8:	cbnz	w0, cd94 <ZSTD_CCtxParams_setParameter@@Base+0x1e4>
    cdac:	b	ccac <ZSTD_CCtxParams_setParameter@@Base+0xfc>
    cdb0:	mov	w1, w2
    cdb4:	mov	w0, #0x6a                  	// #106
    cdb8:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    cdbc:	cbz	w0, ccac <ZSTD_CCtxParams_setParameter@@Base+0xfc>
    cdc0:	str	w19, [x20, #24]
    cdc4:	b	ccc0 <ZSTD_CCtxParams_setParameter@@Base+0x110>
    cdc8:	cbnz	w2, cdd4 <ZSTD_CCtxParams_setParameter@@Base+0x224>
    cdcc:	str	w19, [x20, #28]
    cdd0:	b	ccc0 <ZSTD_CCtxParams_setParameter@@Base+0x110>
    cdd4:	mov	w1, w2
    cdd8:	mov	w0, #0x6b                  	// #107
    cddc:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    cde0:	cbnz	w0, cdcc <ZSTD_CCtxParams_setParameter@@Base+0x21c>
    cde4:	b	ccac <ZSTD_CCtxParams_setParameter@@Base+0xfc>
    cde8:	cmp	w2, #0x0
    cdec:	cset	w1, ne  // ne = any
    cdf0:	str	w1, [x20, #32]
    cdf4:	and	x0, x1, #0xff
    cdf8:	b	ccb0 <ZSTD_CCtxParams_setParameter@@Base+0x100>
    cdfc:	cmp	w2, #0x0
    ce00:	cset	w0, eq  // eq = none
    ce04:	str	w0, [x20, #40]
    ce08:	cset	x0, ne  // ne = any
    ce0c:	b	ccb0 <ZSTD_CCtxParams_setParameter@@Base+0x100>
    ce10:	cmp	w19, #0x0
    ce14:	cset	w1, ne  // ne = any
    ce18:	str	w1, [x20, #48]
    ce1c:	b	cdf4 <ZSTD_CCtxParams_setParameter@@Base+0x244>
    ce20:	mov	w1, w19
    ce24:	mov	w0, #0x3e9                 	// #1001
    ce28:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    ce2c:	cbz	w0, ccac <ZSTD_CCtxParams_setParameter@@Base+0xfc>
    ce30:	str	w19, [x20, #68]
    ce34:	b	ccc0 <ZSTD_CCtxParams_setParameter@@Base+0x110>
    ce38:	mov	w1, w19
    ce3c:	mov	w0, #0x3ea                 	// #1002
    ce40:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    ce44:	cbz	w0, ccac <ZSTD_CCtxParams_setParameter@@Base+0xfc>
    ce48:	str	w19, [x20, #72]
    ce4c:	b	ccc0 <ZSTD_CCtxParams_setParameter@@Base+0x110>
    ce50:	cmp	w2, #0x0
    ce54:	cset	w1, ne  // ne = any
    ce58:	str	w1, [x20, #96]
    ce5c:	b	cdf4 <ZSTD_CCtxParams_setParameter@@Base+0x244>
    ce60:	cbnz	w2, ce6c <ZSTD_CCtxParams_setParameter@@Base+0x2bc>
    ce64:	str	w19, [x20, #100]
    ce68:	b	ccc0 <ZSTD_CCtxParams_setParameter@@Base+0x110>
    ce6c:	mov	w1, w2
    ce70:	mov	w0, #0xa1                  	// #161
    ce74:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    ce78:	cbnz	w0, ce64 <ZSTD_CCtxParams_setParameter@@Base+0x2b4>
    ce7c:	b	ccac <ZSTD_CCtxParams_setParameter@@Base+0xfc>
    ce80:	cbnz	w2, ce8c <ZSTD_CCtxParams_setParameter@@Base+0x2dc>
    ce84:	str	w19, [x20, #108]
    ce88:	b	ccc0 <ZSTD_CCtxParams_setParameter@@Base+0x110>
    ce8c:	mov	w1, w2
    ce90:	mov	w0, #0xa2                  	// #162
    ce94:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    ce98:	cbnz	w0, ce84 <ZSTD_CCtxParams_setParameter@@Base+0x2d4>
    ce9c:	b	ccac <ZSTD_CCtxParams_setParameter@@Base+0xfc>
    cea0:	cbnz	w2, ceac <ZSTD_CCtxParams_setParameter@@Base+0x2fc>
    cea4:	str	w19, [x20, #104]
    cea8:	b	ccc0 <ZSTD_CCtxParams_setParameter@@Base+0x110>
    ceac:	mov	w1, w2
    ceb0:	mov	w0, #0xa3                  	// #163
    ceb4:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    ceb8:	cbnz	w0, cea4 <ZSTD_CCtxParams_setParameter@@Base+0x2f4>
    cebc:	b	ccac <ZSTD_CCtxParams_setParameter@@Base+0xfc>
    cec0:	cmp	w2, #0x19
    cec4:	b.gt	ccac <ZSTD_CCtxParams_setParameter@@Base+0xfc>
    cec8:	str	w2, [x20, #112]
    cecc:	b	ccc0 <ZSTD_CCtxParams_setParameter@@Base+0x110>
    ced0:	cbnz	w19, cee0 <ZSTD_CCtxParams_setParameter@@Base+0x330>
    ced4:	sxtw	x0, w19
    ced8:	str	x0, [x20, #56]
    cedc:	b	ccb0 <ZSTD_CCtxParams_setParameter@@Base+0x100>
    cee0:	mov	w1, w19
    cee4:	mov	w0, #0x3eb                 	// #1003
    cee8:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    ceec:	cbnz	w0, ced4 <ZSTD_CCtxParams_setParameter@@Base+0x324>
    cef0:	b	ccac <ZSTD_CCtxParams_setParameter@@Base+0xfc>
    cef4:	cbnz	w19, cf00 <ZSTD_CCtxParams_setParameter@@Base+0x350>
    cef8:	str	w19, [x20, #64]
    cefc:	b	cd74 <ZSTD_CCtxParams_setParameter@@Base+0x1c4>
    cf00:	mov	w1, w19
    cf04:	mov	w0, #0x3ec                 	// #1004
    cf08:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    cf0c:	cbnz	w0, cef8 <ZSTD_CCtxParams_setParameter@@Base+0x348>
    cf10:	b	ccac <ZSTD_CCtxParams_setParameter@@Base+0xfc>

000000000000cf14 <ZSTD_CCtx_setParameter@@Base>:
    cf14:	ldr	w3, [x0, #1064]
    cf18:	cbz	w3, cf38 <ZSTD_CCtx_setParameter@@Base+0x24>
    cf1c:	cmp	w1, #0x64
    cf20:	b.eq	cf30 <ZSTD_CCtx_setParameter@@Base+0x1c>  // b.none
    cf24:	sub	w3, w1, #0x66
    cf28:	cmp	w3, #0x5
    cf2c:	b.hi	cfb4 <ZSTD_CCtx_setParameter@@Base+0xa0>  // b.pmore
    cf30:	mov	w3, #0x1                   	// #1
    cf34:	str	w3, [x0, #4]
    cf38:	cmp	w1, #0x190
    cf3c:	b.eq	cfa0 <ZSTD_CCtx_setParameter@@Base+0x8c>  // b.none
    cf40:	b.hi	cf7c <ZSTD_CCtx_setParameter@@Base+0x68>  // b.pmore
    cf44:	cmp	w1, #0xa4
    cf48:	b.hi	cf70 <ZSTD_CCtx_setParameter@@Base+0x5c>  // b.pmore
    cf4c:	cmp	w1, #0x9f
    cf50:	b.hi	cf68 <ZSTD_CCtx_setParameter@@Base+0x54>  // b.pmore
    cf54:	cmp	w1, #0xa
    cf58:	b.eq	cf68 <ZSTD_CCtx_setParameter@@Base+0x54>  // b.none
    cf5c:	sub	w3, w1, #0x64
    cf60:	cmp	w3, #0x7
    cf64:	b.hi	cfac <ZSTD_CCtx_setParameter@@Base+0x98>  // b.pmore
    cf68:	add	x0, x0, #0x10
    cf6c:	b	4850 <ZSTD_CCtxParams_setParameter@plt>
    cf70:	sub	w3, w1, #0xc8
    cf74:	cmp	w3, #0x2
    cf78:	b	cf64 <ZSTD_CCtx_setParameter@@Base+0x50>
    cf7c:	cmp	w1, #0x1f4
    cf80:	b.eq	cf68 <ZSTD_CCtx_setParameter@@Base+0x54>  // b.none
    cf84:	b.hi	cf94 <ZSTD_CCtx_setParameter@@Base+0x80>  // b.pmore
    cf88:	sub	w3, w1, #0x191
    cf8c:	cmp	w3, #0x1
    cf90:	b	cf64 <ZSTD_CCtx_setParameter@@Base+0x50>
    cf94:	sub	w3, w1, #0x3e8
    cf98:	cmp	w3, #0x4
    cf9c:	b	cf64 <ZSTD_CCtx_setParameter@@Base+0x50>
    cfa0:	cbz	w2, cf68 <ZSTD_CCtx_setParameter@@Base+0x54>
    cfa4:	ldr	x3, [x0, #520]
    cfa8:	cbz	x3, cf68 <ZSTD_CCtx_setParameter@@Base+0x54>
    cfac:	mov	x0, #0xffffffffffffffd8    	// #-40
    cfb0:	b	cfb8 <ZSTD_CCtx_setParameter@@Base+0xa4>
    cfb4:	mov	x0, #0xffffffffffffffc4    	// #-60
    cfb8:	ret

000000000000cfbc <ZSTD_initCStream_usingDict@@Base>:
    cfbc:	stp	x29, x30, [sp, #-48]!
    cfc0:	mov	x29, sp
    cfc4:	stp	x19, x20, [sp, #16]
    cfc8:	mov	x19, x0
    cfcc:	mov	x20, x1
    cfd0:	mov	w1, #0x1                   	// #1
    cfd4:	stp	x21, x22, [sp, #32]
    cfd8:	mov	x21, x2
    cfdc:	mov	w22, w3
    cfe0:	bl	4590 <ZSTD_CCtx_reset@plt>
    cfe4:	cmn	x0, #0x78
    cfe8:	b.hi	d020 <ZSTD_initCStream_usingDict@@Base+0x64>  // b.pmore
    cfec:	mov	w2, w22
    cff0:	mov	x0, x19
    cff4:	mov	w1, #0x64                  	// #100
    cff8:	bl	4560 <ZSTD_CCtx_setParameter@plt>
    cffc:	cmn	x0, #0x78
    d000:	b.hi	d020 <ZSTD_initCStream_usingDict@@Base+0x64>  // b.pmore
    d004:	mov	x2, x21
    d008:	mov	x1, x20
    d00c:	mov	x0, x19
    d010:	bl	4680 <ZSTD_CCtx_loadDictionary@plt>
    d014:	cmn	x0, #0x78
    d018:	b.hi	d020 <ZSTD_initCStream_usingDict@@Base+0x64>  // b.pmore
    d01c:	mov	x0, #0x0                   	// #0
    d020:	ldp	x19, x20, [sp, #16]
    d024:	ldp	x21, x22, [sp, #32]
    d028:	ldp	x29, x30, [sp], #48
    d02c:	ret

000000000000d030 <ZSTD_initCStream_srcSize@@Base>:
    d030:	stp	x29, x30, [sp, #-48]!
    d034:	cmp	x2, #0x0
    d038:	mov	x29, sp
    d03c:	stp	x19, x20, [sp, #16]
    d040:	csinv	x19, x2, xzr, ne  // ne = any
    d044:	mov	x20, x0
    d048:	str	x21, [sp, #32]
    d04c:	mov	w21, w1
    d050:	mov	w1, #0x1                   	// #1
    d054:	bl	4590 <ZSTD_CCtx_reset@plt>
    d058:	cmn	x0, #0x78
    d05c:	b.hi	d0a4 <ZSTD_initCStream_srcSize@@Base+0x74>  // b.pmore
    d060:	mov	x0, x20
    d064:	mov	x1, #0x0                   	// #0
    d068:	bl	4450 <ZSTD_CCtx_refCDict@plt>
    d06c:	cmn	x0, #0x78
    d070:	b.hi	d0a4 <ZSTD_initCStream_srcSize@@Base+0x74>  // b.pmore
    d074:	mov	w2, w21
    d078:	mov	x0, x20
    d07c:	mov	w1, #0x64                  	// #100
    d080:	bl	4560 <ZSTD_CCtx_setParameter@plt>
    d084:	cmn	x0, #0x78
    d088:	b.hi	d0a4 <ZSTD_initCStream_srcSize@@Base+0x74>  // b.pmore
    d08c:	mov	x1, x19
    d090:	mov	x0, x20
    d094:	bl	4ab0 <ZSTD_CCtx_setPledgedSrcSize@plt>
    d098:	cmn	x0, #0x78
    d09c:	b.hi	d0a4 <ZSTD_initCStream_srcSize@@Base+0x74>  // b.pmore
    d0a0:	mov	x0, #0x0                   	// #0
    d0a4:	ldp	x19, x20, [sp, #16]
    d0a8:	ldr	x21, [sp, #32]
    d0ac:	ldp	x29, x30, [sp], #48
    d0b0:	ret

000000000000d0b4 <ZSTD_initCStream@@Base>:
    d0b4:	stp	x29, x30, [sp, #-32]!
    d0b8:	mov	x29, sp
    d0bc:	stp	x19, x20, [sp, #16]
    d0c0:	mov	x19, x0
    d0c4:	mov	w20, w1
    d0c8:	mov	w1, #0x1                   	// #1
    d0cc:	bl	4590 <ZSTD_CCtx_reset@plt>
    d0d0:	cmn	x0, #0x78
    d0d4:	b.hi	d108 <ZSTD_initCStream@@Base+0x54>  // b.pmore
    d0d8:	mov	x0, x19
    d0dc:	mov	x1, #0x0                   	// #0
    d0e0:	bl	4450 <ZSTD_CCtx_refCDict@plt>
    d0e4:	cmn	x0, #0x78
    d0e8:	b.hi	d108 <ZSTD_initCStream@@Base+0x54>  // b.pmore
    d0ec:	mov	w2, w20
    d0f0:	mov	x0, x19
    d0f4:	mov	w1, #0x64                  	// #100
    d0f8:	bl	4560 <ZSTD_CCtx_setParameter@plt>
    d0fc:	cmn	x0, #0x78
    d100:	b.hi	d108 <ZSTD_initCStream@@Base+0x54>  // b.pmore
    d104:	mov	x0, #0x0                   	// #0
    d108:	ldp	x19, x20, [sp, #16]
    d10c:	ldp	x29, x30, [sp], #32
    d110:	ret

000000000000d114 <ZSTD_checkCParams@@Base>:
    d114:	stp	x29, x30, [sp, #-32]!
    d118:	mov	x29, sp
    d11c:	ldr	w1, [x0]
    d120:	str	x19, [sp, #16]
    d124:	mov	x19, x0
    d128:	mov	w0, #0x65                  	// #101
    d12c:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    d130:	cbz	w0, d194 <ZSTD_checkCParams@@Base+0x80>
    d134:	ldr	w1, [x19, #4]
    d138:	mov	w0, #0x67                  	// #103
    d13c:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    d140:	cbz	w0, d194 <ZSTD_checkCParams@@Base+0x80>
    d144:	ldr	w1, [x19, #8]
    d148:	mov	w0, #0x66                  	// #102
    d14c:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    d150:	cbz	w0, d194 <ZSTD_checkCParams@@Base+0x80>
    d154:	ldr	w1, [x19, #12]
    d158:	mov	w0, #0x68                  	// #104
    d15c:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    d160:	cbz	w0, d194 <ZSTD_checkCParams@@Base+0x80>
    d164:	ldr	w1, [x19, #16]
    d168:	mov	w0, #0x69                  	// #105
    d16c:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    d170:	cbz	w0, d194 <ZSTD_checkCParams@@Base+0x80>
    d174:	ldr	w1, [x19, #20]
    d178:	mov	w0, #0x6a                  	// #106
    d17c:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    d180:	cbz	w0, d194 <ZSTD_checkCParams@@Base+0x80>
    d184:	ldr	w1, [x19, #24]
    d188:	mov	w0, #0x6b                  	// #107
    d18c:	bl	cb6c <ZSTD_cParam_getBounds@@Base+0x1cc>
    d190:	cbnz	w0, d1a4 <ZSTD_checkCParams@@Base+0x90>
    d194:	mov	x0, #0xffffffffffffffd6    	// #-42
    d198:	ldr	x19, [sp, #16]
    d19c:	ldp	x29, x30, [sp], #32
    d1a0:	ret
    d1a4:	mov	x0, #0x0                   	// #0
    d1a8:	b	d198 <ZSTD_checkCParams@@Base+0x84>

000000000000d1ac <ZSTD_CCtxParams_init_advanced@@Base>:
    d1ac:	cbz	x0, d240 <ZSTD_CCtxParams_init_advanced@@Base+0x94>
    d1b0:	stp	x29, x30, [sp, #-64]!
    d1b4:	mov	x29, sp
    d1b8:	stp	x19, x20, [sp, #16]
    d1bc:	mov	x19, x1
    d1c0:	mov	x20, x0
    d1c4:	ldp	x0, x1, [x1]
    d1c8:	stp	x0, x1, [sp, #32]
    d1cc:	ldr	x0, [x19, #16]
    d1d0:	str	x0, [sp, #48]
    d1d4:	ldr	w0, [x19, #24]
    d1d8:	str	w0, [sp, #56]
    d1dc:	add	x0, sp, #0x20
    d1e0:	bl	4920 <ZSTD_checkCParams@plt>
    d1e4:	cmn	x0, #0x78
    d1e8:	b.hi	d234 <ZSTD_CCtxParams_init_advanced@@Base+0x88>  // b.pmore
    d1ec:	mov	x2, #0x90                  	// #144
    d1f0:	mov	w1, #0x0                   	// #0
    d1f4:	mov	x0, x20
    d1f8:	bl	4700 <memset@plt>
    d1fc:	add	x0, x20, #0x4
    d200:	ldp	x2, x3, [x19]
    d204:	stp	x2, x3, [x0]
    d208:	ldur	x0, [x19, #28]
    d20c:	str	x0, [x20, #32]
    d210:	ldr	w0, [x19, #36]
    d214:	ldr	x1, [x19, #16]
    d218:	stur	x1, [x20, #20]
    d21c:	ldr	w1, [x19, #24]
    d220:	str	w0, [x20, #40]
    d224:	mov	w0, #0x3                   	// #3
    d228:	str	w1, [x20, #28]
    d22c:	str	w0, [x20, #44]
    d230:	mov	x0, #0x0                   	// #0
    d234:	ldp	x19, x20, [sp, #16]
    d238:	ldp	x29, x30, [sp], #64
    d23c:	ret
    d240:	mov	x0, #0xffffffffffffffff    	// #-1
    d244:	ret
    d248:	sub	sp, sp, #0x80
    d24c:	stp	x29, x30, [sp, #16]
    d250:	add	x29, sp, #0x10
    d254:	stp	x21, x22, [sp, #48]
    d258:	mov	x22, x2
    d25c:	add	x2, x6, #0x4
    d260:	mov	x21, x1
    d264:	stp	x19, x20, [sp, #32]
    d268:	mov	x20, x0
    d26c:	ldp	x0, x1, [x2]
    d270:	stp	x0, x1, [sp, #96]
    d274:	mov	x19, x6
    d278:	ldur	x0, [x6, #20]
    d27c:	str	x0, [sp, #112]
    d280:	stp	x23, x24, [sp, #64]
    d284:	mov	w23, w3
    d288:	ldr	w0, [x6, #28]
    d28c:	mov	w24, w4
    d290:	stp	x25, x26, [sp, #80]
    d294:	mov	x25, x5
    d298:	mov	x26, x7
    d29c:	str	w0, [sp, #120]
    d2a0:	add	x0, sp, #0x60
    d2a4:	bl	4920 <ZSTD_checkCParams@plt>
    d2a8:	cmn	x0, #0x78
    d2ac:	b.hi	d2d8 <ZSTD_CCtxParams_init_advanced@@Base+0x12c>  // b.pmore
    d2b0:	str	wzr, [sp]
    d2b4:	mov	x7, x26
    d2b8:	mov	x6, x19
    d2bc:	mov	x5, x25
    d2c0:	mov	w4, w24
    d2c4:	mov	w3, w23
    d2c8:	mov	x2, x22
    d2cc:	mov	x1, x21
    d2d0:	mov	x0, x20
    d2d4:	bl	b984 <ZSTD_copyCCtx@@Base+0x1a4>
    d2d8:	ldp	x29, x30, [sp, #16]
    d2dc:	ldp	x19, x20, [sp, #32]
    d2e0:	ldp	x21, x22, [sp, #48]
    d2e4:	ldp	x23, x24, [sp, #64]
    d2e8:	ldp	x25, x26, [sp, #80]
    d2ec:	add	sp, sp, #0x80
    d2f0:	ret

000000000000d2f4 <ZSTD_compressBegin_advanced@@Base>:
    d2f4:	stp	x29, x30, [sp, #-256]!
    d2f8:	mov	x29, sp
    d2fc:	stp	x19, x20, [sp, #16]
    d300:	mov	x19, x0
    d304:	mov	x20, x1
    d308:	ldp	x0, x1, [x3]
    d30c:	stp	x0, x1, [sp, #64]
    d310:	ldp	x0, x1, [x3, #16]
    d314:	stp	x0, x1, [sp, #80]
    d318:	ldr	x0, [x3, #32]
    d31c:	str	x23, [sp, #48]
    d320:	add	x23, sp, #0x70
    d324:	add	x1, sp, #0x40
    d328:	mov	x8, x23
    d32c:	stp	x21, x22, [sp, #32]
    d330:	mov	x22, x4
    d334:	mov	x21, x2
    d338:	str	x0, [sp, #96]
    d33c:	add	x0, x19, #0x10
    d340:	bl	9298 <ZSTD_getErrorString@@Base+0x274c>
    d344:	mov	x7, x22
    d348:	mov	x6, x23
    d34c:	mov	x2, x21
    d350:	mov	x1, x20
    d354:	mov	x0, x19
    d358:	mov	x5, #0x0                   	// #0
    d35c:	mov	w4, #0x0                   	// #0
    d360:	mov	w3, #0x0                   	// #0
    d364:	bl	d248 <ZSTD_CCtxParams_init_advanced@@Base+0x9c>
    d368:	ldp	x19, x20, [sp, #16]
    d36c:	ldp	x21, x22, [sp, #32]
    d370:	ldr	x23, [sp, #48]
    d374:	ldp	x29, x30, [sp], #256
    d378:	ret

000000000000d37c <ZSTD_compress_advanced@@Base>:
    d37c:	stp	x29, x30, [sp, #-352]!
    d380:	mov	x29, sp
    d384:	stp	x19, x20, [sp, #16]
    d388:	mov	x20, x0
    d38c:	mov	x19, x7
    d390:	stp	x21, x22, [sp, #32]
    d394:	mov	x21, x1
    d398:	mov	x22, x2
    d39c:	ldp	x0, x1, [x7]
    d3a0:	stp	x0, x1, [sp, #128]
    d3a4:	ldr	x0, [x7, #16]
    d3a8:	str	x0, [sp, #144]
    d3ac:	stp	x23, x24, [sp, #48]
    d3b0:	mov	x23, x3
    d3b4:	ldr	w0, [x7, #24]
    d3b8:	mov	x24, x4
    d3bc:	stp	x25, x26, [sp, #64]
    d3c0:	mov	x25, x5
    d3c4:	mov	x26, x6
    d3c8:	str	w0, [sp, #152]
    d3cc:	add	x0, sp, #0x80
    d3d0:	bl	4920 <ZSTD_checkCParams@plt>
    d3d4:	cmn	x0, #0x78
    d3d8:	b.hi	d42c <ZSTD_compress_advanced@@Base+0xb0>  // b.pmore
    d3dc:	ldp	x4, x5, [x19]
    d3e0:	add	x1, sp, #0x50
    d3e4:	ldp	x2, x3, [x19, #16]
    d3e8:	ldr	x0, [x19, #32]
    d3ec:	add	x19, sp, #0xd0
    d3f0:	mov	x8, x19
    d3f4:	stp	x4, x5, [sp, #80]
    d3f8:	stp	x2, x3, [sp, #96]
    d3fc:	str	x0, [sp, #112]
    d400:	add	x0, x20, #0x10
    d404:	bl	9298 <ZSTD_getErrorString@@Base+0x274c>
    d408:	mov	x7, x19
    d40c:	mov	x6, x26
    d410:	mov	x5, x25
    d414:	mov	x4, x24
    d418:	mov	x3, x23
    d41c:	mov	x2, x22
    d420:	mov	x1, x21
    d424:	mov	x0, x20
    d428:	bl	be98 <ZSTD_compressEnd@@Base+0x124>
    d42c:	ldp	x19, x20, [sp, #16]
    d430:	ldp	x21, x22, [sp, #32]
    d434:	ldp	x23, x24, [sp, #48]
    d438:	ldp	x25, x26, [sp, #64]
    d43c:	ldp	x29, x30, [sp], #352
    d440:	ret

000000000000d444 <ZSTD_initCStream_advanced@@Base>:
    d444:	stp	x29, x30, [sp, #-288]!
    d448:	mov	x29, sp
    d44c:	stp	x19, x20, [sp, #16]
    d450:	mov	x20, x0
    d454:	mov	x19, x3
    d458:	stp	x21, x22, [sp, #32]
    d45c:	mov	x22, x1
    d460:	str	x23, [sp, #48]
    d464:	mov	x23, x2
    d468:	cbnz	x4, d538 <ZSTD_initCStream_advanced@@Base+0xf4>
    d46c:	ldr	w0, [x3, #28]
    d470:	cmp	w0, #0x0
    d474:	csetm	x21, eq  // eq = none
    d478:	mov	x0, x20
    d47c:	mov	w1, #0x1                   	// #1
    d480:	bl	4590 <ZSTD_CCtx_reset@plt>
    d484:	cmn	x0, #0x78
    d488:	b.hi	d524 <ZSTD_initCStream_advanced@@Base+0xe0>  // b.pmore
    d48c:	mov	x1, x21
    d490:	mov	x0, x20
    d494:	bl	4ab0 <ZSTD_CCtx_setPledgedSrcSize@plt>
    d498:	cmn	x0, #0x78
    d49c:	b.hi	d524 <ZSTD_initCStream_advanced@@Base+0xe0>  // b.pmore
    d4a0:	ldp	x0, x1, [x19]
    d4a4:	stp	x0, x1, [sp, #256]
    d4a8:	ldr	x0, [x19, #16]
    d4ac:	str	x0, [sp, #272]
    d4b0:	ldr	w0, [x19, #24]
    d4b4:	str	w0, [sp, #280]
    d4b8:	add	x0, sp, #0x100
    d4bc:	bl	4920 <ZSTD_checkCParams@plt>
    d4c0:	cmn	x0, #0x78
    d4c4:	b.hi	d524 <ZSTD_initCStream_advanced@@Base+0xe0>  // b.pmore
    d4c8:	ldp	x0, x1, [x19]
    d4cc:	stp	x0, x1, [sp, #64]
    d4d0:	add	x21, x20, #0x10
    d4d4:	ldp	x0, x1, [x19, #16]
    d4d8:	stp	x0, x1, [sp, #80]
    d4dc:	ldr	x0, [x19, #32]
    d4e0:	add	x19, sp, #0x70
    d4e4:	mov	x8, x19
    d4e8:	add	x1, sp, #0x40
    d4ec:	str	x0, [sp, #96]
    d4f0:	mov	x0, x21
    d4f4:	bl	9298 <ZSTD_getErrorString@@Base+0x274c>
    d4f8:	mov	x1, x19
    d4fc:	mov	x2, #0x90                  	// #144
    d500:	mov	x0, x21
    d504:	bl	4460 <memcpy@plt>
    d508:	mov	x2, x23
    d50c:	mov	x1, x22
    d510:	mov	x0, x20
    d514:	bl	4680 <ZSTD_CCtx_loadDictionary@plt>
    d518:	cmn	x0, #0x78
    d51c:	b.hi	d524 <ZSTD_initCStream_advanced@@Base+0xe0>  // b.pmore
    d520:	mov	x0, #0x0                   	// #0
    d524:	ldp	x19, x20, [sp, #16]
    d528:	ldp	x21, x22, [sp, #32]
    d52c:	ldr	x23, [sp, #48]
    d530:	ldp	x29, x30, [sp], #288
    d534:	ret
    d538:	mov	x21, x4
    d53c:	b	d478 <ZSTD_initCStream_advanced@@Base+0x34>

000000000000d540 <ZSTD_adjustCParams@@Base>:
    d540:	stp	x29, x30, [sp, #-144]!
    d544:	mov	x29, sp
    d548:	stp	x23, x24, [sp, #48]
    d54c:	stp	x25, x26, [sp, #64]
    d550:	mov	x26, x0
    d554:	ldp	w25, w24, [x0]
    d558:	stp	x19, x20, [sp, #16]
    d55c:	ldr	w19, [x0, #24]
    d560:	stp	x21, x22, [sp, #32]
    d564:	ldp	w23, w22, [x0, #8]
    d568:	stp	x27, x28, [sp, #80]
    d56c:	mov	x28, x8
    d570:	ldp	w21, w20, [x0, #16]
    d574:	mov	x27, x2
    d578:	mov	w0, #0x65                  	// #101
    d57c:	str	x1, [sp, #104]
    d580:	bl	49b0 <ZSTD_cParam_getBounds@plt>
    d584:	cmp	w1, w25
    d588:	b.le	d674 <ZSTD_adjustCParams@@Base+0x134>
    d58c:	mov	w25, w1
    d590:	mov	w0, #0x67                  	// #103
    d594:	bl	49b0 <ZSTD_cParam_getBounds@plt>
    d598:	asr	x0, x1, #32
    d59c:	cmp	w1, w24
    d5a0:	b.le	d684 <ZSTD_adjustCParams@@Base+0x144>
    d5a4:	mov	w24, w1
    d5a8:	mov	w0, #0x66                  	// #102
    d5ac:	bl	49b0 <ZSTD_cParam_getBounds@plt>
    d5b0:	asr	x0, x1, #32
    d5b4:	cmp	w1, w23
    d5b8:	b.le	d690 <ZSTD_adjustCParams@@Base+0x150>
    d5bc:	mov	w23, w1
    d5c0:	mov	w0, #0x68                  	// #104
    d5c4:	bl	49b0 <ZSTD_cParam_getBounds@plt>
    d5c8:	asr	x0, x1, #32
    d5cc:	cmp	w1, w22
    d5d0:	b.le	d69c <ZSTD_adjustCParams@@Base+0x15c>
    d5d4:	mov	w22, w1
    d5d8:	mov	w0, #0x69                  	// #105
    d5dc:	bl	49b0 <ZSTD_cParam_getBounds@plt>
    d5e0:	asr	x0, x1, #32
    d5e4:	cmp	w1, w21
    d5e8:	b.le	d6a8 <ZSTD_adjustCParams@@Base+0x168>
    d5ec:	mov	w21, w1
    d5f0:	mov	w0, #0x6a                  	// #106
    d5f4:	bl	49b0 <ZSTD_cParam_getBounds@plt>
    d5f8:	asr	x0, x1, #32
    d5fc:	cmp	w1, w20
    d600:	b.le	d6b4 <ZSTD_adjustCParams@@Base+0x174>
    d604:	mov	w20, w1
    d608:	mov	w0, #0x6b                  	// #107
    d60c:	bl	49b0 <ZSTD_cParam_getBounds@plt>
    d610:	asr	x0, x1, #32
    d614:	cmp	w1, w19
    d618:	b.le	d6c0 <ZSTD_adjustCParams@@Base+0x180>
    d61c:	mov	w19, w1
    d620:	stp	w25, w24, [x26]
    d624:	mov	x8, x28
    d628:	stp	w23, w22, [x26, #8]
    d62c:	mov	x2, x27
    d630:	stp	w21, w20, [x26, #16]
    d634:	ldp	x0, x1, [x26]
    d638:	str	w19, [x26, #24]
    d63c:	stp	x0, x1, [sp, #112]
    d640:	ldr	x1, [sp, #104]
    d644:	ldr	x0, [x26, #16]
    d648:	str	x0, [sp, #128]
    d64c:	add	x0, sp, #0x70
    d650:	str	w19, [sp, #136]
    d654:	bl	961c <ZSTD_getErrorString@@Base+0x2ad0>
    d658:	ldp	x19, x20, [sp, #16]
    d65c:	ldp	x21, x22, [sp, #32]
    d660:	ldp	x23, x24, [sp, #48]
    d664:	ldp	x25, x26, [sp, #64]
    d668:	ldp	x27, x28, [sp, #80]
    d66c:	ldp	x29, x30, [sp], #144
    d670:	ret
    d674:	asr	x0, x1, #32
    d678:	cmp	w25, w0
    d67c:	csel	w25, w25, w0, le
    d680:	b	d590 <ZSTD_adjustCParams@@Base+0x50>
    d684:	cmp	w24, w0
    d688:	csel	w24, w24, w0, le
    d68c:	b	d5a8 <ZSTD_adjustCParams@@Base+0x68>
    d690:	cmp	w23, w0
    d694:	csel	w23, w23, w0, le
    d698:	b	d5c0 <ZSTD_adjustCParams@@Base+0x80>
    d69c:	cmp	w22, w0
    d6a0:	csel	w22, w22, w0, le
    d6a4:	b	d5d8 <ZSTD_adjustCParams@@Base+0x98>
    d6a8:	cmp	w21, w0
    d6ac:	csel	w21, w21, w0, le
    d6b0:	b	d5f0 <ZSTD_adjustCParams@@Base+0xb0>
    d6b4:	cmp	w20, w0
    d6b8:	csel	w20, w20, w0, le
    d6bc:	b	d608 <ZSTD_adjustCParams@@Base+0xc8>
    d6c0:	cmp	w19, w0
    d6c4:	csel	w19, w19, w0, le
    d6c8:	b	d620 <ZSTD_adjustCParams@@Base+0xe0>

000000000000d6cc <ZSTD_getCParams@@Base>:
    d6cc:	cmp	x1, #0x0
    d6d0:	mov	x3, #0x1f4                 	// #500
    d6d4:	csel	x3, xzr, x3, ne  // ne = any
    d6d8:	adds	x4, x1, x2
    d6dc:	add	x3, x4, x3
    d6e0:	stp	x29, x30, [sp, #-80]!
    d6e4:	csinv	x3, x3, xzr, ne  // ne = any
    d6e8:	cmp	x3, #0x40, lsl #12
    d6ec:	mov	x29, sp
    d6f0:	cset	w5, ls  // ls = plast
    d6f4:	cmp	x3, #0x20, lsl #12
    d6f8:	cinc	w5, w5, ls  // ls = plast
    d6fc:	cmp	x3, #0x4, lsl #12
    d700:	cinc	w5, w5, ls  // ls = plast
    d704:	cbz	w0, d790 <ZSTD_getCParams@@Base+0xc4>
    d708:	cmp	w0, #0x16
    d70c:	mov	w3, #0x16                  	// #22
    d710:	csel	w3, w0, w3, le
    d714:	cmp	w3, #0x0
    d718:	csel	w3, w3, wzr, ge  // ge = tcont
    d71c:	mov	w5, w5
    d720:	mov	x6, #0x284                 	// #644
    d724:	sxtw	x3, w3
    d728:	adrp	x4, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    d72c:	add	x4, x4, #0x2a0
    d730:	mul	x5, x5, x6
    d734:	mov	x6, #0x1c                  	// #28
    d738:	add	x4, x4, #0x220
    d73c:	madd	x3, x3, x6, x5
    d740:	add	x3, x4, x3
    d744:	ldp	x4, x5, [x3]
    d748:	stp	x4, x5, [sp, #48]
    d74c:	ldr	x4, [x3, #16]
    d750:	str	x4, [sp, #64]
    d754:	ldr	w3, [x3, #24]
    d758:	str	w3, [sp, #72]
    d75c:	tbz	w0, #31, d768 <ZSTD_getCParams@@Base+0x9c>
    d760:	neg	w0, w0
    d764:	str	w0, [sp, #68]
    d768:	ldp	x4, x5, [sp, #48]
    d76c:	stp	x4, x5, [sp, #16]
    d770:	ldr	x0, [sp, #64]
    d774:	str	x0, [sp, #32]
    d778:	ldr	w0, [sp, #72]
    d77c:	str	w0, [sp, #40]
    d780:	add	x0, sp, #0x10
    d784:	bl	961c <ZSTD_getErrorString@@Base+0x2ad0>
    d788:	ldp	x29, x30, [sp], #80
    d78c:	ret
    d790:	mov	w3, #0x3                   	// #3
    d794:	b	d71c <ZSTD_getCParams@@Base+0x50>
    d798:	stp	x29, x30, [sp, #-112]!
    d79c:	cmn	x1, #0x1
    d7a0:	mov	x29, sp
    d7a4:	stp	x19, x20, [sp, #16]
    d7a8:	mov	x19, x0
    d7ac:	mov	x20, x1
    d7b0:	stp	x21, x22, [sp, #32]
    d7b4:	mov	x22, x8
    d7b8:	mov	x21, x2
    d7bc:	b.ne	d7d0 <ZSTD_getCParams@@Base+0x104>  // b.any
    d7c0:	ldr	w0, [x0, #64]
    d7c4:	cmp	w0, #0x0
    d7c8:	b.le	d7d0 <ZSTD_getCParams@@Base+0x104>
    d7cc:	sxtw	x20, w0
    d7d0:	ldr	w0, [x19, #44]
    d7d4:	add	x8, sp, #0x50
    d7d8:	mov	x2, x21
    d7dc:	mov	x1, x20
    d7e0:	bl	4620 <ZSTD_getCParams@plt>
    d7e4:	ldr	w0, [x19, #96]
    d7e8:	cbz	w0, d7f4 <ZSTD_getCParams@@Base+0x128>
    d7ec:	mov	w0, #0x1b                  	// #27
    d7f0:	str	w0, [sp, #80]
    d7f4:	ldr	w0, [x19, #4]
    d7f8:	cbz	w0, d800 <ZSTD_getCParams@@Base+0x134>
    d7fc:	str	w0, [sp, #80]
    d800:	ldr	w0, [x19, #12]
    d804:	cbz	w0, d80c <ZSTD_getCParams@@Base+0x140>
    d808:	str	w0, [sp, #88]
    d80c:	ldr	w0, [x19, #8]
    d810:	cbz	w0, d818 <ZSTD_getCParams@@Base+0x14c>
    d814:	str	w0, [sp, #84]
    d818:	ldr	w0, [x19, #16]
    d81c:	cbz	w0, d824 <ZSTD_getCParams@@Base+0x158>
    d820:	str	w0, [sp, #92]
    d824:	ldr	w0, [x19, #20]
    d828:	cbz	w0, d830 <ZSTD_getCParams@@Base+0x164>
    d82c:	str	w0, [sp, #96]
    d830:	ldr	w0, [x19, #24]
    d834:	cbz	w0, d83c <ZSTD_getCParams@@Base+0x170>
    d838:	str	w0, [sp, #100]
    d83c:	ldr	w0, [x19, #28]
    d840:	cbz	w0, d848 <ZSTD_getCParams@@Base+0x17c>
    d844:	str	w0, [sp, #104]
    d848:	ldp	x0, x1, [sp, #80]
    d84c:	stp	x0, x1, [sp, #48]
    d850:	mov	x8, x22
    d854:	ldr	x0, [sp, #96]
    d858:	str	x0, [sp, #64]
    d85c:	ldr	w0, [sp, #104]
    d860:	mov	x2, x21
    d864:	mov	x1, x20
    d868:	str	w0, [sp, #72]
    d86c:	add	x0, sp, #0x30
    d870:	bl	961c <ZSTD_getErrorString@@Base+0x2ad0>
    d874:	ldp	x19, x20, [sp, #16]
    d878:	ldp	x21, x22, [sp, #32]
    d87c:	ldp	x29, x30, [sp], #112
    d880:	ret

000000000000d884 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base>:
    d884:	ldr	w1, [x0, #76]
    d888:	cmp	w1, #0x0
    d88c:	b.gt	d970 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0xec>
    d890:	stp	x29, x30, [sp, #-144]!
    d894:	mov	x2, #0x0                   	// #0
    d898:	mov	x1, #0x0                   	// #0
    d89c:	mov	x29, sp
    d8a0:	stp	x23, x24, [sp, #48]
    d8a4:	add	x23, sp, #0x70
    d8a8:	mov	x8, x23
    d8ac:	stp	x19, x20, [sp, #16]
    d8b0:	stp	x21, x22, [sp, #32]
    d8b4:	mov	x22, x0
    d8b8:	str	x25, [sp, #64]
    d8bc:	bl	d798 <ZSTD_getCParams@@Base+0xcc>
    d8c0:	ldr	w19, [sp, #112]
    d8c4:	mov	x1, #0x1                   	// #1
    d8c8:	ldr	w21, [sp, #128]
    d8cc:	mov	x0, #0x20000               	// #131072
    d8d0:	lsl	x19, x1, x19
    d8d4:	cmp	x19, #0x20, lsl #12
    d8d8:	csel	x19, x19, x0, ls  // ls = plast
    d8dc:	cmp	w21, #0x3
    d8e0:	mov	x0, #0x4078                	// #16504
    d8e4:	add	x25, x19, x0
    d8e8:	mov	w0, #0x4                   	// #4
    d8ec:	csel	w21, w21, w0, eq  // eq = none
    d8f0:	mov	x0, x23
    d8f4:	bl	92fc <ZSTD_getErrorString@@Base+0x27b0>
    d8f8:	mov	x20, x0
    d8fc:	add	x23, sp, #0x50
    d900:	ldp	x0, x1, [x22, #96]
    d904:	stp	x0, x1, [sp, #80]
    d908:	mov	w21, w21
    d90c:	ldr	x0, [x22, #112]
    d910:	str	x0, [sp, #96]
    d914:	mov	x0, x23
    d918:	bl	1f338 <ZSTD_compress@@Base+0x10aec>
    d91c:	add	x20, x20, x0
    d920:	ldp	x0, x1, [x22, #96]
    d924:	stp	x0, x1, [sp, #80]
    d928:	add	x20, x20, x25
    d92c:	ldr	x0, [x22, #112]
    d930:	mov	x1, x19
    d934:	str	x0, [sp, #96]
    d938:	mov	x0, x23
    d93c:	bl	1f370 <ZSTD_compress@@Base+0x10b24>
    d940:	udiv	x19, x19, x21
    d944:	mov	x1, #0xc                   	// #12
    d948:	ldp	x21, x22, [sp, #32]
    d94c:	mul	x0, x0, x1
    d950:	mov	x1, #0xb                   	// #11
    d954:	ldp	x23, x24, [sp, #48]
    d958:	madd	x19, x19, x1, x0
    d95c:	ldr	x25, [sp, #64]
    d960:	add	x0, x19, x20
    d964:	ldp	x19, x20, [sp, #16]
    d968:	ldp	x29, x30, [sp], #144
    d96c:	ret
    d970:	mov	x0, #0xffffffffffffffff    	// #-1
    d974:	ret

000000000000d978 <ZSTD_estimateCCtxSize_usingCParams@@Base>:
    d978:	stp	x29, x30, [sp, #-208]!
    d97c:	mov	x29, sp
    d980:	ldp	x2, x3, [x0]
    d984:	stp	x2, x3, [sp, #32]
    d988:	ldr	x1, [x0, #16]
    d98c:	str	x19, [sp, #16]
    d990:	add	x19, sp, #0x40
    d994:	str	x1, [sp, #48]
    d998:	mov	x8, x19
    d99c:	ldr	w0, [x0, #24]
    d9a0:	str	w0, [sp, #56]
    d9a4:	add	x0, sp, #0x20
    d9a8:	bl	955c <ZSTD_getErrorString@@Base+0x2a10>
    d9ac:	mov	x0, x19
    d9b0:	bl	4960 <ZSTD_estimateCCtxSize_usingCCtxParams@plt>
    d9b4:	ldr	x19, [sp, #16]
    d9b8:	ldp	x29, x30, [sp], #208
    d9bc:	ret

000000000000d9c0 <ZSTD_estimateCStreamSize_usingCCtxParams@@Base>:
    d9c0:	ldr	w1, [x0, #76]
    d9c4:	cmp	w1, #0x0
    d9c8:	b.gt	da3c <ZSTD_estimateCStreamSize_usingCCtxParams@@Base+0x7c>
    d9cc:	stp	x29, x30, [sp, #-80]!
    d9d0:	mov	x2, #0x0                   	// #0
    d9d4:	mov	x1, #0x0                   	// #0
    d9d8:	mov	x29, sp
    d9dc:	add	x8, sp, #0x30
    d9e0:	stp	x19, x20, [sp, #16]
    d9e4:	mov	x19, x0
    d9e8:	mov	x20, #0x1                   	// #1
    d9ec:	str	x21, [sp, #32]
    d9f0:	bl	d798 <ZSTD_getCParams@@Base+0xcc>
    d9f4:	ldr	w21, [sp, #48]
    d9f8:	mov	x0, x19
    d9fc:	bl	4960 <ZSTD_estimateCCtxSize_usingCCtxParams@plt>
    da00:	mov	x19, x0
    da04:	mov	x0, #0x20000               	// #131072
    da08:	lsl	x20, x20, x21
    da0c:	cmp	x20, #0x20, lsl #12
    da10:	csel	x21, x20, x0, ls  // ls = plast
    da14:	add	x20, x20, #0x1
    da18:	mov	x0, x21
    da1c:	bl	4980 <ZSTD_compressBound@plt>
    da20:	add	x0, x19, x0
    da24:	add	x0, x0, x20
    da28:	add	x0, x0, x21
    da2c:	ldp	x19, x20, [sp, #16]
    da30:	ldr	x21, [sp, #32]
    da34:	ldp	x29, x30, [sp], #80
    da38:	ret
    da3c:	mov	x0, #0xffffffffffffffff    	// #-1
    da40:	ret

000000000000da44 <ZSTD_estimateCStreamSize_usingCParams@@Base>:
    da44:	stp	x29, x30, [sp, #-208]!
    da48:	mov	x29, sp
    da4c:	ldp	x2, x3, [x0]
    da50:	stp	x2, x3, [sp, #32]
    da54:	ldr	x1, [x0, #16]
    da58:	str	x19, [sp, #16]
    da5c:	add	x19, sp, #0x40
    da60:	str	x1, [sp, #48]
    da64:	mov	x8, x19
    da68:	ldr	w0, [x0, #24]
    da6c:	str	w0, [sp, #56]
    da70:	add	x0, sp, #0x20
    da74:	bl	955c <ZSTD_getErrorString@@Base+0x2a10>
    da78:	mov	x0, x19
    da7c:	bl	44f0 <ZSTD_estimateCStreamSize_usingCCtxParams@plt>
    da80:	ldr	x19, [sp, #16]
    da84:	ldp	x29, x30, [sp], #208
    da88:	ret

000000000000da8c <ZSTD_compressStream2@@Base>:
    da8c:	sub	sp, sp, #0x200
    da90:	stp	x29, x30, [sp, #16]
    da94:	add	x29, sp, #0x10
    da98:	stp	x21, x22, [sp, #48]
    da9c:	mov	x22, x1
    daa0:	stp	x23, x24, [sp, #64]
    daa4:	mov	x23, x0
    daa8:	ldr	x0, [x22, #8]
    daac:	stp	x19, x20, [sp, #32]
    dab0:	ldr	x1, [x1, #16]
    dab4:	stp	x25, x26, [sp, #80]
    dab8:	stp	x27, x28, [sp, #96]
    dabc:	cmp	x1, x0
    dac0:	str	w3, [sp, #124]
    dac4:	b.hi	df54 <ZSTD_compressStream2@@Base+0x4c8>  // b.pmore
    dac8:	ldp	x0, x1, [x2, #8]
    dacc:	mov	x21, x2
    dad0:	cmp	x1, x0
    dad4:	b.hi	df54 <ZSTD_compressStream2@@Base+0x4c8>  // b.pmore
    dad8:	ldr	w0, [x23, #1064]
    dadc:	cbnz	w0, dc64 <ZSTD_compressStream2@@Base+0x1d8>
    dae0:	add	x28, x23, #0x10
    dae4:	add	x25, sp, #0xe0
    dae8:	mov	x1, x28
    daec:	mov	x2, #0x90                  	// #144
    daf0:	mov	x0, x25
    daf4:	bl	4460 <memcpy@plt>
    daf8:	ldr	x2, [x23, #1088]
    dafc:	add	x19, sp, #0x170
    db00:	ldr	x0, [x23, #1120]
    db04:	mov	x8, x19
    db08:	ldr	w27, [x23, #1136]
    db0c:	mov	x1, #0x0                   	// #0
    db10:	str	x0, [sp, #128]
    db14:	mov	x0, x28
    db18:	ldr	x24, [x23, #1128]
    db1c:	bl	d798 <ZSTD_getCParams@@Base+0xcc>
    db20:	ldr	x0, [x23, #1080]
    db24:	add	x26, sp, #0xc0
    db28:	cbz	x0, db80 <ZSTD_compressStream2@@Base+0xf4>
    db2c:	ldr	x1, [x23, #1104]
    db30:	cbnz	x1, db80 <ZSTD_compressStream2@@Base+0xf4>
    db34:	ldp	x2, x3, [x19]
    db38:	stp	x2, x3, [sp, #192]
    db3c:	add	x5, sp, #0xa0
    db40:	ldr	x1, [x19, #16]
    db44:	mov	x4, x26
    db48:	ldp	x2, x3, [x23, #496]
    db4c:	str	x1, [sp, #208]
    db50:	ldr	w1, [x19, #24]
    db54:	stp	x2, x3, [sp, #160]
    db58:	mov	w2, #0x1                   	// #1
    db5c:	ldr	w3, [x23, #1096]
    db60:	str	w1, [sp, #216]
    db64:	ldr	x1, [x23, #512]
    db68:	str	x1, [sp, #176]
    db6c:	ldr	x1, [x23, #1088]
    db70:	bl	4810 <ZSTD_createCDict_advanced@plt>
    db74:	str	x0, [x23, #1104]
    db78:	cbz	x0, dcc4 <ZSTD_compressStream2@@Base+0x238>
    db7c:	str	x0, [x23, #1112]
    db80:	add	x0, x23, #0x460
    db84:	stp	xzr, xzr, [x0]
    db88:	ldr	w0, [sp, #124]
    db8c:	str	xzr, [x23, #1136]
    db90:	cmp	w0, #0x2
    db94:	b.ne	dba4 <ZSTD_compressStream2@@Base+0x118>  // b.any
    db98:	ldr	x0, [x21, #8]
    db9c:	add	x0, x0, #0x1
    dba0:	str	x0, [x23, #384]
    dba4:	ldr	x1, [x23, #384]
    dba8:	add	x8, sp, #0xe4
    dbac:	mov	x0, x28
    dbb0:	mov	x2, #0x0                   	// #0
    dbb4:	sub	x1, x1, #0x1
    dbb8:	bl	d798 <ZSTD_getCParams@@Base+0xcc>
    dbbc:	ldr	x20, [x23, #384]
    dbc0:	mov	x1, x25
    dbc4:	mov	x2, #0x90                  	// #144
    dbc8:	mov	x0, x19
    dbcc:	sub	x20, x20, #0x1
    dbd0:	ldr	x28, [x23, #1112]
    dbd4:	bl	4460 <memcpy@plt>
    dbd8:	mov	x8, x26
    dbdc:	mov	x2, x24
    dbe0:	mov	x1, x20
    dbe4:	mov	x0, x19
    dbe8:	bl	d798 <ZSTD_getCParams@@Base+0xcc>
    dbec:	add	x2, sp, #0x234
    dbf0:	mov	x7, x20
    dbf4:	ldp	x0, x1, [sp, #192]
    dbf8:	mov	x6, x19
    dbfc:	stp	x0, x1, [x2, #-192]
    dc00:	mov	x5, x28
    dc04:	add	x1, sp, #0x230
    dc08:	ldr	x0, [sp, #208]
    dc0c:	mov	w3, w27
    dc10:	stur	x0, [x1, #-172]
    dc14:	mov	x2, x24
    dc18:	ldr	x1, [sp, #128]
    dc1c:	mov	w4, #0x0                   	// #0
    dc20:	ldr	w0, [sp, #216]
    dc24:	str	w0, [sp, #396]
    dc28:	mov	w0, #0x1                   	// #1
    dc2c:	str	w0, [sp]
    dc30:	mov	x0, x23
    dc34:	bl	b984 <ZSTD_copyCCtx@@Base+0x1a4>
    dc38:	cmn	x0, #0x78
    dc3c:	b.hi	dcc8 <ZSTD_compressStream2@@Base+0x23c>  // b.pmore
    dc40:	ldr	x0, [x23, #376]
    dc44:	add	x1, x23, #0x3f8
    dc48:	str	xzr, [x23, #1008]
    dc4c:	cmp	x20, x0
    dc50:	cinc	x0, x0, eq  // eq = none
    dc54:	stp	xzr, x0, [x1]
    dc58:	mov	x0, #0x1                   	// #1
    dc5c:	stp	xzr, xzr, [x1, #32]
    dc60:	str	x0, [x23, #1064]
    dc64:	ldp	x0, x24, [x21]
    dc68:	str	x0, [sp, #128]
    dc6c:	ldp	x25, x19, [x22, #8]
    dc70:	mov	w27, #0x1                   	// #1
    dc74:	ldr	x20, [x21, #16]
    dc78:	add	x24, x0, x24
    dc7c:	add	x20, x0, x20
    dc80:	ldr	x0, [x22]
    dc84:	str	x0, [sp, #136]
    dc88:	add	x25, x0, x25
    dc8c:	add	x19, x0, x19
    dc90:	cbnz	w27, dce8 <ZSTD_compressStream2@@Base+0x25c>
    dc94:	ldr	x0, [sp, #128]
    dc98:	sub	x20, x20, x0
    dc9c:	ldr	x0, [sp, #136]
    dca0:	sub	x19, x19, x0
    dca4:	ldr	w0, [x23, #1068]
    dca8:	str	x20, [x21, #16]
    dcac:	str	x19, [x22, #16]
    dcb0:	cbz	w0, df34 <ZSTD_compressStream2@@Base+0x4a8>
    dcb4:	ldr	x0, [x23, #1048]
    dcb8:	ldr	x1, [x23, #1056]
    dcbc:	sub	x0, x0, x1
    dcc0:	b	dcc8 <ZSTD_compressStream2@@Base+0x23c>
    dcc4:	mov	x0, #0xffffffffffffffc0    	// #-64
    dcc8:	ldp	x29, x30, [sp, #16]
    dccc:	ldp	x19, x20, [sp, #32]
    dcd0:	ldp	x21, x22, [sp, #48]
    dcd4:	ldp	x23, x24, [sp, #64]
    dcd8:	ldp	x25, x26, [sp, #80]
    dcdc:	ldp	x27, x28, [sp, #96]
    dce0:	add	sp, sp, #0x200
    dce4:	ret
    dce8:	ldr	w28, [x23, #1064]
    dcec:	cmp	w28, #0x1
    dcf0:	b.eq	dd08 <ZSTD_compressStream2@@Base+0x27c>  // b.none
    dcf4:	cmp	w28, #0x2
    dcf8:	b.eq	debc <ZSTD_compressStream2@@Base+0x430>  // b.none
    dcfc:	cbnz	w28, dc90 <ZSTD_compressStream2@@Base+0x204>
    dd00:	mov	x0, #0xffffffffffffffc2    	// #-62
    dd04:	b	dcc8 <ZSTD_compressStream2@@Base+0x23c>
    dd08:	ldr	w0, [sp, #124]
    dd0c:	sub	x4, x24, x20
    dd10:	cmp	w0, #0x2
    dd14:	b.ne	dd78 <ZSTD_compressStream2@@Base+0x2ec>  // b.any
    dd18:	mov	x0, x4
    dd1c:	sub	x26, x25, x19
    dd20:	str	x4, [sp, #144]
    dd24:	bl	4980 <ZSTD_compressBound@plt>
    dd28:	cmp	x26, x0
    dd2c:	ldr	x4, [sp, #144]
    dd30:	b.cc	dd78 <ZSTD_compressStream2@@Base+0x2ec>  // b.lo, b.ul, b.last
    dd34:	ldr	x0, [x23, #1016]
    dd38:	cbnz	x0, dd78 <ZSTD_compressStream2@@Base+0x2ec>
    dd3c:	mov	x3, x20
    dd40:	mov	x2, x26
    dd44:	mov	x1, x19
    dd48:	mov	x0, x23
    dd4c:	bl	4540 <ZSTD_compressEnd@plt>
    dd50:	cmn	x0, #0x78
    dd54:	b.hi	dcc8 <ZSTD_compressStream2@@Base+0x23c>  // b.pmore
    dd58:	str	w28, [x23, #1068]
    dd5c:	add	x19, x19, x0
    dd60:	mov	w1, w28
    dd64:	mov	x0, x23
    dd68:	mov	x20, x24
    dd6c:	bl	4590 <ZSTD_CCtx_reset@plt>
    dd70:	mov	w28, #0x0                   	// #0
    dd74:	b	df2c <ZSTD_compressStream2@@Base+0x4a0>
    dd78:	ldr	x0, [x23, #1016]
    dd7c:	ldr	x26, [x23, #1024]
    dd80:	sub	x26, x26, x0
    dd84:	cmp	x26, x4
    dd88:	csel	x26, x26, x4, ls  // ls = plast
    dd8c:	cbz	x26, dda4 <ZSTD_compressStream2@@Base+0x318>
    dd90:	ldr	x3, [x23, #992]
    dd94:	mov	x2, x26
    dd98:	mov	x1, x20
    dd9c:	add	x0, x3, x0
    dda0:	bl	4460 <memcpy@plt>
    dda4:	ldr	x4, [x23, #1016]
    dda8:	add	x20, x20, x26
    ddac:	ldr	w0, [sp, #124]
    ddb0:	add	x4, x26, x4
    ddb4:	str	x4, [x23, #1016]
    ddb8:	cbnz	w0, de80 <ZSTD_compressStream2@@Base+0x3f4>
    ddbc:	ldr	x0, [x23, #1024]
    ddc0:	cmp	x4, x0
    ddc4:	b.cc	dd70 <ZSTD_compressStream2@@Base+0x2e4>  // b.lo, b.ul, b.last
    ddc8:	ldr	x0, [x23, #1008]
    ddcc:	sub	x2, x25, x19
    ddd0:	sub	x4, x4, x0
    ddd4:	ldr	w0, [sp, #124]
    ddd8:	stp	x4, x2, [sp, #144]
    dddc:	cmp	w0, #0x2
    dde0:	cset	w26, eq  // eq = none
    dde4:	cmp	x24, x20
    dde8:	csel	w26, w26, wzr, eq  // eq = none
    ddec:	mov	x0, x4
    ddf0:	bl	4980 <ZSTD_compressBound@plt>
    ddf4:	ldp	x4, x2, [sp, #144]
    ddf8:	cmp	x2, x0
    ddfc:	b.cs	de9c <ZSTD_compressStream2@@Base+0x410>  // b.hs, b.nlast
    de00:	ldr	x1, [x23, #1032]
    de04:	ldr	x2, [x23, #1040]
    de08:	str	x1, [sp, #144]
    de0c:	ldr	x3, [x23, #992]
    de10:	ldr	x0, [x23, #1008]
    de14:	add	x3, x3, x0
    de18:	mov	x0, x23
    de1c:	cbz	w26, dea4 <ZSTD_compressStream2@@Base+0x418>
    de20:	bl	4540 <ZSTD_compressEnd@plt>
    de24:	cmn	x0, #0x78
    de28:	ldr	x1, [sp, #144]
    de2c:	b.hi	dcc8 <ZSTD_compressStream2@@Base+0x23c>  // b.pmore
    de30:	ldr	x3, [x23, #376]
    de34:	str	w26, [x23, #1068]
    de38:	ldr	x2, [x23, #1016]
    de3c:	ldr	x4, [x23, #1000]
    de40:	add	x2, x3, x2
    de44:	str	x2, [x23, #1024]
    de48:	cmp	x2, x4
    de4c:	b.ls	de58 <ZSTD_compressStream2@@Base+0x3cc>  // b.plast
    de50:	str	xzr, [x23, #1016]
    de54:	str	x3, [x23, #1024]
    de58:	ldr	x2, [x23, #1016]
    de5c:	str	x2, [x23, #1008]
    de60:	cmp	x1, x19
    de64:	b.ne	deac <ZSTD_compressStream2@@Base+0x420>  // b.any
    de68:	add	x19, x19, x0
    de6c:	cbz	w26, df2c <ZSTD_compressStream2@@Base+0x4a0>
    de70:	mov	x0, x23
    de74:	mov	w1, #0x1                   	// #1
    de78:	bl	4590 <ZSTD_CCtx_reset@plt>
    de7c:	b	dd70 <ZSTD_compressStream2@@Base+0x2e4>
    de80:	ldr	w0, [sp, #124]
    de84:	cmp	w0, #0x1
    de88:	b.ne	ddc8 <ZSTD_compressStream2@@Base+0x33c>  // b.any
    de8c:	ldr	x0, [x23, #1008]
    de90:	cmp	x4, x0
    de94:	b.ne	ddc8 <ZSTD_compressStream2@@Base+0x33c>  // b.any
    de98:	b	dd70 <ZSTD_compressStream2@@Base+0x2e4>
    de9c:	mov	x1, x19
    dea0:	b	de08 <ZSTD_compressStream2@@Base+0x37c>
    dea4:	bl	4ae0 <ZSTD_compressContinue@plt>
    dea8:	b	de24 <ZSTD_compressStream2@@Base+0x398>
    deac:	str	x0, [x23, #1048]
    deb0:	mov	w0, #0x2                   	// #2
    deb4:	str	xzr, [x23, #1056]
    deb8:	str	w0, [x23, #1064]
    debc:	ldr	x26, [x23, #1048]
    dec0:	sub	x3, x25, x19
    dec4:	ldr	x0, [x23, #1056]
    dec8:	sub	x26, x26, x0
    decc:	cmp	x26, x3
    ded0:	csel	x28, x26, x3, ls  // ls = plast
    ded4:	cbz	x28, def4 <ZSTD_compressStream2@@Base+0x468>
    ded8:	ldr	x1, [x23, #1032]
    dedc:	mov	x2, x28
    dee0:	str	x3, [sp, #144]
    dee4:	add	x1, x1, x0
    dee8:	mov	x0, x19
    deec:	bl	4460 <memcpy@plt>
    def0:	ldr	x3, [sp, #144]
    def4:	add	x19, x19, x28
    def8:	cmp	x26, x3
    defc:	b.ls	df10 <ZSTD_compressStream2@@Base+0x484>  // b.plast
    df00:	ldr	x0, [x23, #1056]
    df04:	add	x2, x0, x28
    df08:	str	x2, [x23, #1056]
    df0c:	b	dd70 <ZSTD_compressStream2@@Base+0x2e4>
    df10:	ldr	w0, [x23, #1068]
    df14:	str	xzr, [x23, #1048]
    df18:	str	xzr, [x23, #1056]
    df1c:	cbnz	w0, de70 <ZSTD_compressStream2@@Base+0x3e4>
    df20:	mov	w28, w27
    df24:	mov	w0, #0x1                   	// #1
    df28:	str	w0, [x23, #1064]
    df2c:	mov	w27, w28
    df30:	b	dc90 <ZSTD_compressStream2@@Base+0x204>
    df34:	ldr	x1, [x23, #1016]
    df38:	ldr	x0, [x23, #1024]
    df3c:	subs	x0, x0, x1
    df40:	b.ne	df48 <ZSTD_compressStream2@@Base+0x4bc>  // b.any
    df44:	ldr	x0, [x23, #376]
    df48:	cmn	x0, #0x78
    df4c:	b.ls	dcb4 <ZSTD_compressStream2@@Base+0x228>  // b.plast
    df50:	b	dcc8 <ZSTD_compressStream2@@Base+0x23c>
    df54:	mov	x0, #0xffffffffffffffff    	// #-1
    df58:	b	dcc8 <ZSTD_compressStream2@@Base+0x23c>

000000000000df5c <ZSTD_compressStream@@Base>:
    df5c:	stp	x29, x30, [sp, #-32]!
    df60:	mov	w3, #0x0                   	// #0
    df64:	mov	x29, sp
    df68:	str	x19, [sp, #16]
    df6c:	mov	x19, x0
    df70:	bl	46b0 <ZSTD_compressStream2@plt>
    df74:	cmn	x0, #0x78
    df78:	b.hi	df90 <ZSTD_compressStream@@Base+0x34>  // b.pmore
    df7c:	ldr	x1, [x19, #1016]
    df80:	ldr	x0, [x19, #1024]
    df84:	subs	x0, x0, x1
    df88:	b.ne	df90 <ZSTD_compressStream@@Base+0x34>  // b.any
    df8c:	ldr	x0, [x19, #376]
    df90:	ldr	x19, [sp, #16]
    df94:	ldp	x29, x30, [sp], #32
    df98:	ret

000000000000df9c <ZSTD_compressStream2_simpleArgs@@Base>:
    df9c:	stp	x29, x30, [sp, #-80]!
    dfa0:	mov	x29, sp
    dfa4:	stp	x19, x20, [sp, #16]
    dfa8:	mov	x20, x3
    dfac:	mov	x19, x6
    dfb0:	stp	x1, x2, [sp, #32]
    dfb4:	mov	w3, w7
    dfb8:	add	x2, sp, #0x38
    dfbc:	ldr	x1, [x20]
    dfc0:	str	x1, [sp, #48]
    dfc4:	ldr	x1, [x6]
    dfc8:	stp	x4, x5, [sp, #56]
    dfcc:	str	x1, [sp, #72]
    dfd0:	add	x1, sp, #0x20
    dfd4:	bl	46b0 <ZSTD_compressStream2@plt>
    dfd8:	ldr	x1, [sp, #48]
    dfdc:	str	x1, [x20]
    dfe0:	ldr	x1, [sp, #72]
    dfe4:	str	x1, [x19]
    dfe8:	ldp	x19, x20, [sp, #16]
    dfec:	ldp	x29, x30, [sp], #80
    dff0:	ret

000000000000dff4 <ZSTD_compress2@@Base>:
    dff4:	stp	x29, x30, [sp, #-80]!
    dff8:	mov	x29, sp
    dffc:	stp	x19, x20, [sp, #16]
    e000:	mov	x19, x0
    e004:	mov	x20, x1
    e008:	mov	w1, #0x1                   	// #1
    e00c:	stp	x21, x22, [sp, #32]
    e010:	mov	x22, x3
    e014:	mov	x21, x2
    e018:	str	x23, [sp, #48]
    e01c:	mov	x23, x4
    e020:	bl	4590 <ZSTD_CCtx_reset@plt>
    e024:	add	x6, sp, #0x48
    e028:	mov	x5, x23
    e02c:	mov	x4, x22
    e030:	add	x3, sp, #0x40
    e034:	mov	x2, x21
    e038:	mov	x1, x20
    e03c:	mov	x0, x19
    e040:	mov	w7, #0x2                   	// #2
    e044:	stp	xzr, xzr, [sp, #64]
    e048:	bl	46f0 <ZSTD_compressStream2_simpleArgs@plt>
    e04c:	cmn	x0, #0x78
    e050:	b.hi	e064 <ZSTD_compress2@@Base+0x70>  // b.pmore
    e054:	cmp	x0, #0x0
    e058:	mov	x1, #0xffffffffffffffba    	// #-70
    e05c:	ldr	x0, [sp, #64]
    e060:	csel	x0, x0, x1, eq  // eq = none
    e064:	ldp	x19, x20, [sp, #16]
    e068:	ldp	x21, x22, [sp, #32]
    e06c:	ldr	x23, [sp, #48]
    e070:	ldp	x29, x30, [sp], #80
    e074:	ret

000000000000e078 <ZSTD_getSequences@@Base>:
    e078:	stp	x29, x30, [sp, #-144]!
    e07c:	mov	x29, sp
    e080:	stp	x19, x20, [sp, #16]
    e084:	mov	x19, x0
    e088:	mov	x0, x4
    e08c:	stp	x21, x22, [sp, #32]
    e090:	mov	x21, x4
    e094:	stp	x23, x24, [sp, #48]
    e098:	stp	x25, x26, [sp, #64]
    e09c:	mov	x25, x3
    e0a0:	add	x26, sp, #0x70
    e0a4:	stp	x27, x28, [sp, #80]
    e0a8:	mov	x28, x1
    e0ac:	str	x2, [sp, #104]
    e0b0:	bl	4980 <ZSTD_compressBound@plt>
    e0b4:	adrp	x4, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    e0b8:	add	x4, x4, #0x2a0
    e0bc:	mov	x24, x0
    e0c0:	mov	x1, x26
    e0c4:	ldp	x22, x23, [x4]
    e0c8:	stp	x22, x23, [sp, #112]
    e0cc:	ldr	x27, [x4, #16]
    e0d0:	str	x27, [sp, #128]
    e0d4:	bl	6b50 <ZSTD_getErrorString@@Base+0x4>
    e0d8:	cbz	x0, e144 <ZSTD_getSequences@@Base+0xcc>
    e0dc:	ldr	x2, [sp, #104]
    e0e0:	mov	x20, x0
    e0e4:	mov	x4, x21
    e0e8:	mov	x3, x25
    e0ec:	mov	w0, #0x1                   	// #1
    e0f0:	str	w0, [x19, #528]
    e0f4:	str	x28, [x19, #536]
    e0f8:	mov	x1, x20
    e0fc:	str	xzr, [x19, #544]
    e100:	mov	x0, x19
    e104:	str	x2, [x19, #552]
    e108:	mov	x2, x24
    e10c:	bl	49a0 <ZSTD_compress2@plt>
    e110:	stp	x22, x23, [sp, #112]
    e114:	mov	x0, x20
    e118:	mov	x1, x26
    e11c:	str	x27, [sp, #128]
    e120:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
    e124:	ldr	x0, [x19, #544]
    e128:	ldp	x19, x20, [sp, #16]
    e12c:	ldp	x21, x22, [sp, #32]
    e130:	ldp	x23, x24, [sp, #48]
    e134:	ldp	x25, x26, [sp, #64]
    e138:	ldp	x27, x28, [sp, #80]
    e13c:	ldp	x29, x30, [sp], #144
    e140:	ret
    e144:	mov	x0, #0xffffffffffffffc0    	// #-64
    e148:	b	e128 <ZSTD_getSequences@@Base+0xb0>

000000000000e14c <ZSTD_flushStream@@Base>:
    e14c:	stp	x29, x30, [sp, #-48]!
    e150:	mov	w3, #0x1                   	// #1
    e154:	mov	x29, sp
    e158:	add	x2, sp, #0x18
    e15c:	stp	xzr, xzr, [sp, #24]
    e160:	str	xzr, [sp, #40]
    e164:	bl	46b0 <ZSTD_compressStream2@plt>
    e168:	ldp	x29, x30, [sp], #48
    e16c:	ret

000000000000e170 <ZSTD_endStream@@Base>:
    e170:	stp	x29, x30, [sp, #-64]!
    e174:	mov	w3, #0x2                   	// #2
    e178:	mov	x29, sp
    e17c:	add	x2, sp, #0x28
    e180:	str	x19, [sp, #16]
    e184:	mov	x19, x0
    e188:	stp	xzr, xzr, [sp, #40]
    e18c:	str	xzr, [sp, #56]
    e190:	bl	46b0 <ZSTD_compressStream2@plt>
    e194:	cmn	x0, #0x78
    e198:	b.hi	e1c0 <ZSTD_endStream@@Base+0x50>  // b.pmore
    e19c:	ldr	w1, [x19, #236]
    e1a0:	cmp	w1, #0x0
    e1a4:	b.gt	e1c0 <ZSTD_endStream@@Base+0x50>
    e1a8:	ldr	w1, [x19, #1068]
    e1ac:	cbz	w1, e1cc <ZSTD_endStream@@Base+0x5c>
    e1b0:	mov	x2, #0x0                   	// #0
    e1b4:	mov	x1, #0x0                   	// #0
    e1b8:	add	x1, x1, x2
    e1bc:	add	x0, x0, x1
    e1c0:	ldr	x19, [sp, #16]
    e1c4:	ldp	x29, x30, [sp], #64
    e1c8:	ret
    e1cc:	ldr	w1, [x19, #196]
    e1d0:	mov	x2, #0x3                   	// #3
    e1d4:	lsl	w1, w1, #2
    e1d8:	sxtw	x1, w1
    e1dc:	b	e1b8 <ZSTD_endStream@@Base+0x48>

000000000000e1e0 <ZSTD_estimateCCtxSize@@Base>:
    e1e0:	stp	x29, x30, [sp, #-128]!
    e1e4:	cmp	w0, #0x0
    e1e8:	mov	x29, sp
    e1ec:	stp	x19, x20, [sp, #16]
    e1f0:	mov	w19, w0
    e1f4:	mov	x20, #0x0                   	// #0
    e1f8:	stp	x21, x22, [sp, #32]
    e1fc:	csinc	w21, w0, wzr, le
    e200:	add	x22, sp, #0x60
    e204:	str	x23, [sp, #48]
    e208:	add	x23, sp, #0x40
    e20c:	cmp	w21, w19
    e210:	b.le	e22c <ZSTD_estimateCCtxSize@@Base+0x4c>
    e214:	mov	x0, x20
    e218:	ldp	x19, x20, [sp, #16]
    e21c:	ldp	x21, x22, [sp, #32]
    e220:	ldr	x23, [sp, #48]
    e224:	ldp	x29, x30, [sp], #128
    e228:	ret
    e22c:	mov	w0, w21
    e230:	mov	x8, x22
    e234:	mov	x2, #0x0                   	// #0
    e238:	mov	x1, #0x0                   	// #0
    e23c:	bl	4620 <ZSTD_getCParams@plt>
    e240:	add	w21, w21, #0x1
    e244:	ldp	x0, x1, [x22]
    e248:	stp	x0, x1, [x23]
    e24c:	ldr	x0, [x22, #16]
    e250:	str	x0, [x23, #16]
    e254:	ldr	w0, [x22, #24]
    e258:	str	w0, [x23, #24]
    e25c:	mov	x0, x23
    e260:	bl	4740 <ZSTD_estimateCCtxSize_usingCParams@plt>
    e264:	cmp	x20, x0
    e268:	csel	x20, x20, x0, cs  // cs = hs, nlast
    e26c:	b	e20c <ZSTD_estimateCCtxSize@@Base+0x2c>

000000000000e270 <ZSTD_estimateCStreamSize@@Base>:
    e270:	stp	x29, x30, [sp, #-128]!
    e274:	cmp	w0, #0x0
    e278:	mov	x29, sp
    e27c:	stp	x19, x20, [sp, #16]
    e280:	mov	w19, w0
    e284:	mov	x20, #0x0                   	// #0
    e288:	stp	x21, x22, [sp, #32]
    e28c:	csinc	w21, w0, wzr, le
    e290:	add	x22, sp, #0x60
    e294:	str	x23, [sp, #48]
    e298:	add	x23, sp, #0x40
    e29c:	cmp	w21, w19
    e2a0:	b.le	e2bc <ZSTD_estimateCStreamSize@@Base+0x4c>
    e2a4:	mov	x0, x20
    e2a8:	ldp	x19, x20, [sp, #16]
    e2ac:	ldp	x21, x22, [sp, #32]
    e2b0:	ldr	x23, [sp, #48]
    e2b4:	ldp	x29, x30, [sp], #128
    e2b8:	ret
    e2bc:	mov	w0, w21
    e2c0:	mov	x8, x22
    e2c4:	mov	x2, #0x0                   	// #0
    e2c8:	mov	x1, #0x0                   	// #0
    e2cc:	bl	4620 <ZSTD_getCParams@plt>
    e2d0:	add	w21, w21, #0x1
    e2d4:	ldp	x0, x1, [x22]
    e2d8:	stp	x0, x1, [x23]
    e2dc:	ldr	x0, [x22, #16]
    e2e0:	str	x0, [x23, #16]
    e2e4:	ldr	w0, [x22, #24]
    e2e8:	str	w0, [x23, #24]
    e2ec:	mov	x0, x23
    e2f0:	bl	4ad0 <ZSTD_estimateCStreamSize_usingCParams@plt>
    e2f4:	cmp	x20, x0
    e2f8:	csel	x20, x20, x0, cs  // cs = hs, nlast
    e2fc:	b	e29c <ZSTD_estimateCStreamSize@@Base+0x2c>

000000000000e300 <ZSTD_estimateCDictSize@@Base>:
    e300:	stp	x29, x30, [sp, #-96]!
    e304:	mov	x29, sp
    e308:	str	x19, [sp, #16]
    e30c:	mov	x19, x0
    e310:	add	x8, sp, #0x40
    e314:	mov	w0, w1
    e318:	mov	x2, x19
    e31c:	mov	x1, #0x0                   	// #0
    e320:	bl	4620 <ZSTD_getCParams@plt>
    e324:	ldp	x0, x1, [sp, #64]
    e328:	stp	x0, x1, [sp, #32]
    e32c:	mov	w2, #0x0                   	// #0
    e330:	ldr	x0, [sp, #80]
    e334:	str	x0, [sp, #48]
    e338:	ldr	w0, [sp, #88]
    e33c:	add	x1, sp, #0x20
    e340:	str	w0, [sp, #56]
    e344:	mov	x0, x19
    e348:	bl	4480 <ZSTD_estimateCDictSize_advanced@plt>
    e34c:	ldr	x19, [sp, #16]
    e350:	ldp	x29, x30, [sp], #96
    e354:	ret

000000000000e358 <ZSTD_createCDict@@Base>:
    e358:	stp	x29, x30, [sp, #-144]!
    e35c:	mov	x29, sp
    e360:	stp	x19, x20, [sp, #16]
    e364:	mov	w19, w2
    e368:	mov	x20, x1
    e36c:	mov	x2, x1
    e370:	add	x8, sp, #0x70
    e374:	mov	x1, #0x0                   	// #0
    e378:	str	x21, [sp, #32]
    e37c:	mov	x21, x0
    e380:	mov	w0, w19
    e384:	bl	4620 <ZSTD_getCParams@plt>
    e388:	ldp	x0, x1, [sp, #112]
    e38c:	stp	x0, x1, [sp, #80]
    e390:	add	x5, sp, #0x30
    e394:	ldr	x0, [sp, #128]
    e398:	adrp	x1, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    e39c:	add	x1, x1, #0x2a0
    e3a0:	str	x0, [sp, #96]
    e3a4:	ldr	w0, [sp, #136]
    e3a8:	add	x4, sp, #0x50
    e3ac:	str	w0, [sp, #104]
    e3b0:	ldp	x2, x3, [x1]
    e3b4:	stp	x2, x3, [sp, #48]
    e3b8:	ldr	x0, [x1, #16]
    e3bc:	mov	w3, #0x0                   	// #0
    e3c0:	mov	x1, x20
    e3c4:	mov	w2, #0x0                   	// #0
    e3c8:	str	x0, [sp, #64]
    e3cc:	mov	x0, x21
    e3d0:	bl	4810 <ZSTD_createCDict_advanced@plt>
    e3d4:	cbz	x0, e3e8 <ZSTD_createCDict@@Base+0x90>
    e3d8:	cmp	w19, #0x0
    e3dc:	mov	w1, #0x3                   	// #3
    e3e0:	csel	w19, w19, w1, ne  // ne = any
    e3e4:	str	w19, [x0, #4924]
    e3e8:	ldp	x19, x20, [sp, #16]
    e3ec:	ldr	x21, [sp, #32]
    e3f0:	ldp	x29, x30, [sp], #144
    e3f4:	ret

000000000000e3f8 <ZSTD_createCDict_byReference@@Base>:
    e3f8:	stp	x29, x30, [sp, #-128]!
    e3fc:	mov	x29, sp
    e400:	add	x8, sp, #0x60
    e404:	stp	x19, x20, [sp, #16]
    e408:	mov	x20, x0
    e40c:	mov	x19, x1
    e410:	mov	w0, w2
    e414:	mov	x2, x1
    e418:	mov	x1, #0x0                   	// #0
    e41c:	bl	4620 <ZSTD_getCParams@plt>
    e420:	ldp	x0, x1, [sp, #96]
    e424:	stp	x0, x1, [sp, #64]
    e428:	add	x5, sp, #0x20
    e42c:	ldr	x0, [sp, #112]
    e430:	adrp	x1, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    e434:	add	x1, x1, #0x2a0
    e438:	str	x0, [sp, #80]
    e43c:	ldr	w0, [sp, #120]
    e440:	add	x4, sp, #0x40
    e444:	str	w0, [sp, #88]
    e448:	ldp	x2, x3, [x1]
    e44c:	stp	x2, x3, [sp, #32]
    e450:	ldr	x0, [x1, #16]
    e454:	mov	w3, #0x0                   	// #0
    e458:	mov	x1, x19
    e45c:	mov	w2, #0x1                   	// #1
    e460:	str	x0, [sp, #48]
    e464:	mov	x0, x20
    e468:	bl	4810 <ZSTD_createCDict_advanced@plt>
    e46c:	ldp	x19, x20, [sp, #16]
    e470:	ldp	x29, x30, [sp], #128
    e474:	ret

000000000000e478 <ZSTD_compressBegin_usingCDict_advanced@@Base>:
    e478:	sub	sp, sp, #0x120
    e47c:	stp	x29, x30, [sp, #16]
    e480:	add	x29, sp, #0x10
    e484:	stp	x19, x20, [sp, #32]
    e488:	stp	x21, x22, [sp, #48]
    e48c:	str	x2, [sp, #96]
    e490:	str	w3, [sp, #104]
    e494:	cbz	x1, e5dc <ZSTD_compressBegin_usingCDict_advanced@@Base+0x164>
    e498:	add	x22, sp, #0x90
    e49c:	mov	x19, x4
    e4a0:	mov	x21, x0
    e4a4:	mov	x20, x1
    e4a8:	mov	x2, #0x90                  	// #144
    e4ac:	add	x1, x0, #0x10
    e4b0:	mov	x0, x22
    e4b4:	bl	4460 <memcpy@plt>
    e4b8:	mov	x0, #0x1ffff               	// #131071
    e4bc:	cmp	x19, x0
    e4c0:	b.ls	e4e8 <ZSTD_compressBegin_usingCDict_advanced@@Base+0x70>  // b.plast
    e4c4:	ldr	x0, [x20, #8]
    e4c8:	mov	x1, #0x6                   	// #6
    e4cc:	mul	x0, x0, x1
    e4d0:	cmp	x0, x19
    e4d4:	b.hi	e4e8 <ZSTD_compressBegin_usingCDict_advanced@@Base+0x70>  // b.pmore
    e4d8:	cmn	x19, #0x1
    e4dc:	b.eq	e4e8 <ZSTD_compressBegin_usingCDict_advanced@@Base+0x70>  // b.none
    e4e0:	ldr	w0, [x20, #4924]
    e4e4:	cbnz	w0, e59c <ZSTD_compressBegin_usingCDict_advanced@@Base+0x124>
    e4e8:	ldr	w0, [sp, #212]
    e4ec:	cmp	w0, #0x3
    e4f0:	b.eq	e59c <ZSTD_compressBegin_usingCDict_advanced@@Base+0x124>  // b.none
    e4f4:	add	x4, sp, #0x4
    e4f8:	ldr	w0, [x20, #296]
    e4fc:	ldp	x2, x3, [x20, #272]
    e500:	ldr	x1, [x20, #288]
    e504:	stp	x2, x3, [x4, #144]
    e508:	stur	x1, [sp, #164]
    e50c:	str	w0, [sp, #172]
    e510:	cmn	x19, #0x1
    e514:	b.eq	e550 <ZSTD_compressBegin_usingCDict_advanced@@Base+0xd8>  // b.none
    e518:	mov	x0, #0x7ffff               	// #524287
    e51c:	cmp	x19, x0
    e520:	b.hi	e5cc <ZSTD_compressBegin_usingCDict_advanced@@Base+0x154>  // b.pmore
    e524:	cmp	x19, #0x1
    e528:	b.ls	e5d4 <ZSTD_compressBegin_usingCDict_advanced@@Base+0x15c>  // b.plast
    e52c:	mov	w2, w19
    e530:	sub	w2, w2, #0x1
    e534:	clz	w2, w2
    e538:	eor	w2, w2, #0x1f
    e53c:	add	w2, w2, #0x1
    e540:	ldr	w0, [sp, #148]
    e544:	cmp	w0, w2
    e548:	csel	w2, w0, w2, cs  // cs = hs, nlast
    e54c:	str	w2, [sp, #148]
    e550:	str	wzr, [sp]
    e554:	mov	x7, x19
    e558:	ldr	x0, [sp, #96]
    e55c:	str	x0, [sp, #176]
    e560:	ldr	w0, [sp, #104]
    e564:	mov	x6, x22
    e568:	mov	x5, x20
    e56c:	mov	w4, #0x0                   	// #0
    e570:	mov	w3, #0x0                   	// #0
    e574:	mov	x2, #0x0                   	// #0
    e578:	mov	x1, #0x0                   	// #0
    e57c:	str	w0, [sp, #184]
    e580:	mov	x0, x21
    e584:	bl	b984 <ZSTD_copyCCtx@@Base+0x1a4>
    e588:	ldp	x29, x30, [sp, #16]
    e58c:	ldp	x19, x20, [sp, #32]
    e590:	ldp	x21, x22, [sp, #48]
    e594:	add	sp, sp, #0x120
    e598:	ret
    e59c:	ldr	w0, [x20, #4924]
    e5a0:	mov	x1, x19
    e5a4:	ldr	x2, [x20, #8]
    e5a8:	add	x8, sp, #0x40
    e5ac:	bl	4620 <ZSTD_getCParams@plt>
    e5b0:	add	x2, sp, #0x4
    e5b4:	ldp	x0, x1, [sp, #64]
    e5b8:	stp	x0, x1, [x2, #144]
    e5bc:	ldr	x0, [sp, #80]
    e5c0:	stur	x0, [sp, #164]
    e5c4:	ldr	w0, [sp, #88]
    e5c8:	b	e50c <ZSTD_compressBegin_usingCDict_advanced@@Base+0x94>
    e5cc:	mov	w2, #0x80000               	// #524288
    e5d0:	b	e530 <ZSTD_compressBegin_usingCDict_advanced@@Base+0xb8>
    e5d4:	mov	w2, #0x1                   	// #1
    e5d8:	b	e540 <ZSTD_compressBegin_usingCDict_advanced@@Base+0xc8>
    e5dc:	mov	x0, #0xffffffffffffffe0    	// #-32
    e5e0:	b	e588 <ZSTD_compressBegin_usingCDict_advanced@@Base+0x110>

000000000000e5e4 <ZSTD_compressBegin_usingCDict@@Base>:
    e5e4:	sub	sp, sp, #0x10
    e5e8:	mov	x4, #0xffffffffffffffff    	// #-1
    e5ec:	mov	x2, #0x0                   	// #0
    e5f0:	add	sp, sp, #0x10
    e5f4:	mov	x3, #0x0                   	// #0
    e5f8:	b	4990 <ZSTD_compressBegin_usingCDict_advanced@plt>

000000000000e5fc <ZSTD_compress_usingCDict_advanced@@Base>:
    e5fc:	stp	x29, x30, [sp, #-80]!
    e600:	mov	x29, sp
    e604:	stp	x19, x20, [sp, #16]
    e608:	mov	x19, x0
    e60c:	mov	x20, x1
    e610:	mov	x1, x5
    e614:	stp	x21, x22, [sp, #32]
    e618:	mov	x21, x2
    e61c:	mov	x22, x3
    e620:	mov	x2, x6
    e624:	mov	w3, w7
    e628:	str	x23, [sp, #48]
    e62c:	mov	x23, x4
    e630:	bl	4990 <ZSTD_compressBegin_usingCDict_advanced@plt>
    e634:	cmn	x0, #0x78
    e638:	b.hi	e664 <ZSTD_compress_usingCDict_advanced@@Base+0x68>  // b.pmore
    e63c:	mov	x4, x23
    e640:	mov	x3, x22
    e644:	mov	x2, x21
    e648:	mov	x1, x20
    e64c:	mov	x0, x19
    e650:	ldp	x19, x20, [sp, #16]
    e654:	ldp	x21, x22, [sp, #32]
    e658:	ldr	x23, [sp, #48]
    e65c:	ldp	x29, x30, [sp], #80
    e660:	b	4540 <ZSTD_compressEnd@plt>
    e664:	ldp	x19, x20, [sp, #16]
    e668:	ldp	x21, x22, [sp, #32]
    e66c:	ldr	x23, [sp, #48]
    e670:	ldp	x29, x30, [sp], #80
    e674:	ret

000000000000e678 <ZSTD_compress_usingCDict@@Base>:
    e678:	sub	sp, sp, #0x10
    e67c:	mov	x6, #0x1                   	// #1
    e680:	mov	x7, #0x0                   	// #0
    e684:	add	sp, sp, #0x10
    e688:	b	45d0 <ZSTD_compress_usingCDict_advanced@plt>

000000000000e68c <ZSTD_getParams@@Base>:
    e68c:	stp	x29, x30, [sp, #-112]!
    e690:	mov	x29, sp
    e694:	str	x19, [sp, #16]
    e698:	mov	x19, x8
    e69c:	add	x8, sp, #0x28
    e6a0:	bl	4620 <ZSTD_getCParams@plt>
    e6a4:	ldr	x0, [sp, #56]
    e6a8:	str	x0, [sp, #88]
    e6ac:	ldr	w0, [sp, #64]
    e6b0:	str	w0, [sp, #96]
    e6b4:	mov	w0, #0x1                   	// #1
    e6b8:	str	w0, [sp, #100]
    e6bc:	ldp	x0, x1, [sp, #40]
    e6c0:	stp	x0, x1, [x19]
    e6c4:	ldp	x0, x1, [sp, #88]
    e6c8:	stp	x0, x1, [x19, #16]
    e6cc:	str	xzr, [x19, #32]
    e6d0:	ldr	x19, [sp, #16]
    e6d4:	ldp	x29, x30, [sp], #112
    e6d8:	ret

000000000000e6dc <ZSTD_compressBegin_usingDict@@Base>:
    e6dc:	sub	sp, sp, #0x130
    e6e0:	add	x8, sp, #0x78
    e6e4:	stp	x29, x30, [sp, #16]
    e6e8:	add	x29, sp, #0x10
    e6ec:	stp	x19, x20, [sp, #32]
    e6f0:	mov	x19, x0
    e6f4:	mov	x20, x1
    e6f8:	mov	w0, w3
    e6fc:	mov	x1, #0xffffffffffffffff    	// #-1
    e700:	stp	x21, x22, [sp, #48]
    e704:	mov	x21, x2
    e708:	bl	4a70 <ZSTD_getParams@plt>
    e70c:	ldp	x0, x1, [sp, #120]
    e710:	stp	x0, x1, [sp, #64]
    e714:	add	x22, sp, #0xa0
    e718:	ldp	x0, x1, [sp, #136]
    e71c:	mov	x8, x22
    e720:	stp	x0, x1, [sp, #80]
    e724:	add	x1, sp, #0x40
    e728:	ldr	x0, [sp, #152]
    e72c:	str	x0, [sp, #96]
    e730:	add	x0, x19, #0x10
    e734:	bl	9298 <ZSTD_getErrorString@@Base+0x274c>
    e738:	str	wzr, [sp]
    e73c:	mov	x6, x22
    e740:	mov	x2, x21
    e744:	mov	x1, x20
    e748:	mov	x0, x19
    e74c:	mov	x7, #0xffffffffffffffff    	// #-1
    e750:	mov	x5, #0x0                   	// #0
    e754:	mov	w4, #0x0                   	// #0
    e758:	mov	w3, #0x0                   	// #0
    e75c:	bl	b984 <ZSTD_copyCCtx@@Base+0x1a4>
    e760:	ldp	x29, x30, [sp, #16]
    e764:	ldp	x19, x20, [sp, #32]
    e768:	ldp	x21, x22, [sp, #48]
    e76c:	add	sp, sp, #0x130
    e770:	ret

000000000000e774 <ZSTD_compressBegin@@Base>:
    e774:	mov	w3, w1
    e778:	mov	x2, #0x0                   	// #0
    e77c:	mov	x1, #0x0                   	// #0
    e780:	b	47e0 <ZSTD_compressBegin_usingDict@plt>

000000000000e784 <ZSTD_compress_usingDict@@Base>:
    e784:	stp	x29, x30, [sp, #-320]!
    e788:	cmp	x4, #0x0
    e78c:	mov	x29, sp
    e790:	stp	x23, x24, [sp, #48]
    e794:	mov	x23, x1
    e798:	cinc	x1, x4, eq  // eq = none
    e79c:	cmp	x5, #0x0
    e7a0:	mov	x24, x2
    e7a4:	add	x8, sp, #0x88
    e7a8:	csel	x2, x6, xzr, ne  // ne = any
    e7ac:	stp	x19, x20, [sp, #16]
    e7b0:	mov	x20, x0
    e7b4:	mov	x19, x4
    e7b8:	mov	w0, w7
    e7bc:	stp	x21, x22, [sp, #32]
    e7c0:	mov	x21, x5
    e7c4:	mov	x22, x6
    e7c8:	stp	x25, x26, [sp, #64]
    e7cc:	mov	x25, x3
    e7d0:	bl	4a70 <ZSTD_getParams@plt>
    e7d4:	add	x26, sp, #0xb0
    e7d8:	ldp	x0, x1, [sp, #136]
    e7dc:	stp	x0, x1, [sp, #80]
    e7e0:	mov	x8, x26
    e7e4:	ldp	x0, x1, [sp, #152]
    e7e8:	stp	x0, x1, [sp, #96]
    e7ec:	ldr	x0, [sp, #168]
    e7f0:	add	x1, sp, #0x50
    e7f4:	str	x0, [sp, #112]
    e7f8:	add	x0, x20, #0x10
    e7fc:	bl	9298 <ZSTD_getErrorString@@Base+0x274c>
    e800:	mov	x7, x26
    e804:	mov	x6, x22
    e808:	mov	x5, x21
    e80c:	mov	x4, x19
    e810:	mov	x3, x25
    e814:	mov	x2, x24
    e818:	mov	x1, x23
    e81c:	mov	x0, x20
    e820:	bl	be98 <ZSTD_compressEnd@@Base+0x124>
    e824:	ldp	x19, x20, [sp, #16]
    e828:	ldp	x21, x22, [sp, #32]
    e82c:	ldp	x23, x24, [sp, #48]
    e830:	ldp	x25, x26, [sp, #64]
    e834:	ldp	x29, x30, [sp], #320
    e838:	ret

000000000000e83c <ZSTD_compressCCtx@@Base>:
    e83c:	mov	w7, w5
    e840:	mov	x6, #0x0                   	// #0
    e844:	mov	x5, #0x0                   	// #0
    e848:	b	4890 <ZSTD_compress_usingDict@plt>

000000000000e84c <ZSTD_compress@@Base>:
    e84c:	sub	sp, sp, #0x4f0
    e850:	adrp	x6, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    e854:	add	x6, x6, #0x2a0
    e858:	stp	x29, x30, [sp]
    e85c:	mov	x29, sp
    e860:	stp	x21, x22, [sp, #32]
    e864:	mov	x21, x0
    e868:	mov	x22, x1
    e86c:	ldp	x0, x1, [x6]
    e870:	stp	x19, x20, [sp, #16]
    e874:	add	x19, sp, #0x78
    e878:	add	x20, sp, #0x50
    e87c:	stp	x0, x1, [sp, #80]
    e880:	mov	x1, x20
    e884:	ldr	x0, [x6, #16]
    e888:	stp	x23, x24, [sp, #48]
    e88c:	mov	x23, x2
    e890:	mov	x24, x3
    e894:	str	x25, [sp, #64]
    e898:	mov	w25, w4
    e89c:	str	x0, [sp, #96]
    e8a0:	mov	x0, x19
    e8a4:	bl	c39c <ZSTD_CCtx_reset@@Base+0x68>
    e8a8:	mov	w5, w25
    e8ac:	mov	x4, x24
    e8b0:	mov	x3, x23
    e8b4:	mov	x2, x22
    e8b8:	mov	x1, x21
    e8bc:	mov	x0, x19
    e8c0:	bl	47f0 <ZSTD_compressCCtx@plt>
    e8c4:	mov	x21, x0
    e8c8:	mov	x0, x19
    e8cc:	bl	c0ac <ZSTD_freeCDict@@Base+0xac>
    e8d0:	add	x0, sp, #0x200
    e8d4:	ldp	x0, x1, [x0, #104]
    e8d8:	stp	x0, x1, [sp, #80]
    e8dc:	ldr	x0, [sp, #632]
    e8e0:	mov	x1, x20
    e8e4:	str	x0, [sp, #96]
    e8e8:	add	x0, x19, #0x138
    e8ec:	bl	95dc <ZSTD_getErrorString@@Base+0x2a90>
    e8f0:	mov	x0, x21
    e8f4:	ldp	x29, x30, [sp]
    e8f8:	ldp	x19, x20, [sp, #16]
    e8fc:	ldp	x21, x22, [sp, #32]
    e900:	ldp	x23, x24, [sp, #48]
    e904:	ldr	x25, [sp, #64]
    e908:	add	sp, sp, #0x4f0
    e90c:	ret
    e910:	cmp	x3, #0x1f
    e914:	stp	x29, x30, [sp, #-32]!
    e918:	mov	x5, x1
    e91c:	mov	x1, x2
    e920:	mov	x2, x3
    e924:	cset	w3, hi  // hi = pmore
    e928:	cmp	x2, #0xfff
    e92c:	add	w3, w3, #0x1
    e930:	mov	x29, sp
    e934:	cinc	w3, w3, hi  // hi = pmore
    e938:	str	x19, [sp, #16]
    e93c:	add	x19, x2, w3, sxtw
    e940:	cmp	x19, x5
    e944:	b.hi	e99c <ZSTD_compress@@Base+0x150>  // b.pmore
    e948:	sxtw	x4, w3
    e94c:	cmp	w3, #0x2
    e950:	b.eq	e97c <ZSTD_compress@@Base+0x130>  // b.none
    e954:	cmp	w3, #0x3
    e958:	b.eq	e98c <ZSTD_compress@@Base+0x140>  // b.none
    e95c:	ubfiz	w3, w2, #3, #5
    e960:	strb	w3, [x0]
    e964:	add	x0, x0, x4
    e968:	bl	4460 <memcpy@plt>
    e96c:	mov	x0, x19
    e970:	ldr	x19, [sp, #16]
    e974:	ldp	x29, x30, [sp], #32
    e978:	ret
    e97c:	ubfiz	w3, w2, #4, #12
    e980:	add	w3, w3, #0x4
    e984:	strh	w3, [x0]
    e988:	b	e964 <ZSTD_compress@@Base+0x118>
    e98c:	lsl	w3, w2, #4
    e990:	add	w3, w3, #0xc
    e994:	str	w3, [x0]
    e998:	b	e964 <ZSTD_compress@@Base+0x118>
    e99c:	mov	x19, #0xffffffffffffffba    	// #-70
    e9a0:	b	e96c <ZSTD_compress@@Base+0x120>
    e9a4:	cmp	x3, #0x1f
    e9a8:	cset	w1, hi  // hi = pmore
    e9ac:	cmp	x3, #0xfff
    e9b0:	add	w1, w1, #0x1
    e9b4:	cinc	w1, w1, hi  // hi = pmore
    e9b8:	cmp	w1, #0x2
    e9bc:	b.eq	e9e8 <ZSTD_compress@@Base+0x19c>  // b.none
    e9c0:	cmp	w1, #0x3
    e9c4:	b.eq	e9f8 <ZSTD_compress@@Base+0x1ac>  // b.none
    e9c8:	ubfiz	w3, w3, #3, #5
    e9cc:	add	w3, w3, #0x1
    e9d0:	strb	w3, [x0]
    e9d4:	ldrb	w2, [x2]
    e9d8:	strb	w2, [x0, w1, sxtw]
    e9dc:	add	w0, w1, #0x1
    e9e0:	and	x0, x0, #0xf
    e9e4:	ret
    e9e8:	ubfiz	w3, w3, #4, #12
    e9ec:	add	w3, w3, #0x5
    e9f0:	strh	w3, [x0]
    e9f4:	b	e9d4 <ZSTD_compress@@Base+0x188>
    e9f8:	lsl	w3, w3, #4
    e9fc:	add	w3, w3, #0xd
    ea00:	str	w3, [x0]
    ea04:	b	e9d4 <ZSTD_compress@@Base+0x188>
    ea08:	sub	sp, sp, #0x90
    ea0c:	cmp	w2, #0x7
    ea10:	stp	x29, x30, [sp, #32]
    ea14:	add	x29, sp, #0x20
    ea18:	stp	x25, x26, [sp, #96]
    ea1c:	sub	w25, w2, #0x1
    ea20:	stp	x27, x28, [sp, #112]
    ea24:	mov	x27, x0
    ea28:	mov	w0, #0x6                   	// #6
    ea2c:	csel	w25, w25, w0, hi  // hi = pmore
    ea30:	cmp	x7, #0x3ff
    ea34:	stp	x21, x22, [sp, #64]
    ea38:	mov	x21, x1
    ea3c:	mov	w28, w2
    ea40:	mov	x22, x5
    ea44:	cset	w26, hi  // hi = pmore
    ea48:	mov	x1, x27
    ea4c:	mov	x0, x21
    ea50:	mov	x2, #0x404                 	// #1028
    ea54:	stp	x19, x20, [sp, #48]
    ea58:	mov	x19, x7
    ea5c:	mov	x20, x4
    ea60:	stp	x23, x24, [sp, #80]
    ea64:	mov	x23, x6
    ea68:	mov	w24, w3
    ea6c:	bl	4460 <memcpy@plt>
    ea70:	ldp	x6, x7, [sp, #144]
    ea74:	cbz	w24, eaac <ZSTD_compress@@Base+0x260>
    ea78:	mov	x3, x19
    ea7c:	mov	x2, x23
    ea80:	mov	x1, x22
    ea84:	mov	x0, x20
    ea88:	bl	e910 <ZSTD_compress@@Base+0xc4>
    ea8c:	ldp	x29, x30, [sp, #32]
    ea90:	ldp	x19, x20, [sp, #48]
    ea94:	ldp	x21, x22, [sp, #64]
    ea98:	ldp	x23, x24, [sp, #80]
    ea9c:	ldp	x25, x26, [sp, #96]
    eaa0:	ldp	x27, x28, [sp, #112]
    eaa4:	add	sp, sp, #0x90
    eaa8:	ret
    eaac:	ldr	w2, [x27, #1024]
    eab0:	mov	x0, #0x6                   	// #6
    eab4:	mov	x1, #0x3f                  	// #63
    eab8:	cmp	w2, #0x2
    eabc:	csel	x0, x0, x1, eq  // eq = none
    eac0:	cmp	x0, x19
    eac4:	b.cs	ea78 <ZSTD_compress@@Base+0x22c>  // b.hs, b.nlast
    eac8:	mov	x0, #0x3fff                	// #16383
    eacc:	add	w26, w26, #0x3
    ead0:	cmp	x19, x0
    ead4:	cinc	w26, w26, hi  // hi = pmore
    ead8:	sxtw	x24, w26
    eadc:	add	x0, x24, #0x1
    eae0:	cmp	x0, x22
    eae4:	b.hi	ec3c <ZSTD_compress@@Base+0x3f0>  // b.pmore
    eae8:	cmp	x19, #0x400
    eaec:	ldr	w4, [sp, #160]
    eaf0:	ccmp	w28, #0x3, #0x2, ls  // ls = plast
    eaf4:	str	x21, [sp]
    eaf8:	cset	w3, ls  // ls = plast
    eafc:	cmp	w2, #0x2
    eb00:	str	w3, [sp, #16]
    eb04:	add	x0, x20, x24
    eb08:	str	w4, [sp, #24]
    eb0c:	sub	x1, x22, x24
    eb10:	str	w2, [sp, #140]
    eb14:	add	x2, sp, #0x8c
    eb18:	str	x2, [sp, #8]
    eb1c:	ccmp	x24, #0x3, #0x0, eq  // eq = none
    eb20:	mov	x3, x19
    eb24:	mov	x2, x23
    eb28:	mov	w5, #0xb                   	// #11
    eb2c:	mov	w4, #0xff                  	// #255
    eb30:	b.eq	eb3c <ZSTD_compress@@Base+0x2f0>  // b.none
    eb34:	cmp	x19, #0xff
    eb38:	b.hi	eb88 <ZSTD_compress@@Base+0x33c>  // b.pmore
    eb3c:	bl	9054 <ZSTD_getErrorString@@Base+0x2508>
    eb40:	mov	w1, #0x1                   	// #1
    eb44:	ldr	w2, [sp, #140]
    eb48:	lsr	x4, x19, x25
    eb4c:	cmp	w2, #0x0
    eb50:	cset	w3, ne  // ne = any
    eb54:	add	w2, w3, #0x2
    eb58:	sub	x3, x19, #0x2
    eb5c:	sub	x25, x3, x4
    eb60:	sub	x3, x0, #0x1
    eb64:	cmp	x25, x0
    eb68:	mov	x4, #0xffffffffffffff87    	// #-121
    eb6c:	ccmp	x3, x4, #0x2, hi  // hi = pmore
    eb70:	b.ls	eb94 <ZSTD_compress@@Base+0x348>  // b.plast
    eb74:	mov	x1, x27
    eb78:	mov	x0, x21
    eb7c:	mov	x2, #0x404                 	// #1028
    eb80:	bl	4460 <memcpy@plt>
    eb84:	b	ea78 <ZSTD_compress@@Base+0x22c>
    eb88:	bl	90d4 <ZSTD_getErrorString@@Base+0x2588>
    eb8c:	mov	w1, #0x0                   	// #0
    eb90:	b	eb44 <ZSTD_compress@@Base+0x2f8>
    eb94:	cmp	x0, #0x1
    eb98:	b.ne	ebc4 <ZSTD_compress@@Base+0x378>  // b.any
    eb9c:	mov	x1, x27
    eba0:	mov	x0, x21
    eba4:	mov	x2, #0x404                 	// #1028
    eba8:	bl	4460 <memcpy@plt>
    ebac:	mov	x3, x19
    ebb0:	mov	x2, x23
    ebb4:	mov	x1, x22
    ebb8:	mov	x0, x20
    ebbc:	bl	e9a4 <ZSTD_compress@@Base+0x158>
    ebc0:	b	ea8c <ZSTD_compress@@Base+0x240>
    ebc4:	cmp	w2, #0x2
    ebc8:	b.ne	ebd4 <ZSTD_compress@@Base+0x388>  // b.any
    ebcc:	mov	w3, #0x1                   	// #1
    ebd0:	str	w3, [x21, #1024]
    ebd4:	lsl	w19, w19, #4
    ebd8:	cmp	w26, #0x4
    ebdc:	add	w5, w19, #0x8
    ebe0:	add	w4, w19, #0xc
    ebe4:	b.eq	ec14 <ZSTD_compress@@Base+0x3c8>  // b.none
    ebe8:	cmp	w26, #0x5
    ebec:	b.eq	ec24 <ZSTD_compress@@Base+0x3d8>  // b.none
    ebf0:	eor	w1, w1, #0x1
    ebf4:	add	w19, w19, w0, lsl #14
    ebf8:	add	w3, w2, w1, lsl #2
    ebfc:	add	w19, w19, w3
    ec00:	strh	w19, [x20]
    ec04:	lsr	w19, w19, #16
    ec08:	strb	w19, [x20, #2]
    ec0c:	add	x0, x0, x24
    ec10:	b	ea8c <ZSTD_compress@@Base+0x240>
    ec14:	add	w3, w2, w0, lsl #18
    ec18:	add	w3, w3, w5
    ec1c:	str	w3, [x20]
    ec20:	b	ec0c <ZSTD_compress@@Base+0x3c0>
    ec24:	add	w3, w2, w0, lsl #22
    ec28:	lsr	x1, x0, #10
    ec2c:	add	w3, w3, w4
    ec30:	str	w3, [x20]
    ec34:	strb	w1, [x20, #4]
    ec38:	b	ec0c <ZSTD_compress@@Base+0x3c0>
    ec3c:	mov	x0, #0xffffffffffffffba    	// #-70
    ec40:	b	ea8c <ZSTD_compress@@Base+0x240>
    ec44:	adrp	x5, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    ec48:	add	x5, x5, #0xed4
    ec4c:	ldr	w4, [x0, #8]
    ec50:	ldr	w3, [x5, w2, uxtw #2]
    ec54:	and	x3, x3, x1
    ec58:	ldr	x1, [x0]
    ec5c:	lsl	x3, x3, x4
    ec60:	add	w4, w4, w2
    ec64:	str	w4, [x0, #8]
    ec68:	orr	x3, x1, x3
    ec6c:	str	x3, [x0]
    ec70:	ret
    ec74:	ldr	w2, [x0, #8]
    ec78:	ldr	x1, [x0, #24]
    ec7c:	lsr	w4, w2, #3
    ec80:	ldr	x3, [x0]
    ec84:	str	x3, [x1]
    ec88:	add	x1, x1, x4
    ec8c:	ldr	x4, [x0, #32]
    ec90:	cmp	x1, x4
    ec94:	csel	x1, x1, x4, ls  // ls = plast
    ec98:	str	x1, [x0, #24]
    ec9c:	and	w1, w2, #0x7
    eca0:	and	w2, w2, #0xfffffff8
    eca4:	str	w1, [x0, #8]
    eca8:	lsr	x2, x3, x2
    ecac:	str	x2, [x0]
    ecb0:	ret
    ecb4:	mov	x4, x1
    ecb8:	mov	x2, #0x1                   	// #1
    ecbc:	ldrh	w3, [x4], #4
    ecc0:	str	w3, [x0, #24]
    ecc4:	cmp	w3, #0x0
    ecc8:	lsl	x5, x2, x3
    eccc:	stp	x5, x4, [x0]
    ecd0:	sub	w4, w3, #0x1
    ecd4:	lsl	w2, w2, w4
    ecd8:	mov	x4, #0x8                   	// #8
    ecdc:	sxtw	x2, w2
    ece0:	add	x2, x2, #0x1
    ece4:	lsl	x2, x2, #2
    ece8:	csel	x2, x2, x4, ne  // ne = any
    ecec:	add	x1, x1, x2
    ecf0:	str	x1, [x0, #16]
    ecf4:	ret
    ecf8:	mov	x7, x0
    ecfc:	mov	w6, w2
    ed00:	stp	x29, x30, [sp, #-16]!
    ed04:	mov	x29, sp
    ed08:	bl	ecb4 <ZSTD_compress@@Base+0x468>
    ed0c:	ubfiz	x2, x6, #3, #32
    ed10:	ldr	x3, [x0, #16]
    ed14:	ldp	x29, x30, [sp], #16
    ed18:	add	x0, x3, x2
    ed1c:	ldr	w4, [x0, #4]
    ed20:	add	w0, w4, #0x8, lsl #12
    ed24:	and	w1, w0, #0xffff0000
    ed28:	sub	w1, w1, w4
    ed2c:	lsr	w0, w0, #16
    ed30:	asr	x1, x1, x0
    ed34:	ldrsw	x0, [x3, x2]
    ed38:	add	x1, x1, x0
    ed3c:	ldr	x0, [x7, #8]
    ed40:	ldrh	w0, [x0, x1, lsl #1]
    ed44:	str	x0, [x7]
    ed48:	ret
    ed4c:	stp	x29, x30, [sp, #-16]!
    ed50:	mov	x6, x1
    ed54:	ubfiz	x2, x2, #3, #32
    ed58:	mov	x29, sp
    ed5c:	ldp	x9, x1, [x1, #8]
    ed60:	add	x3, x1, x2
    ed64:	ldr	w8, [x1, x2]
    ed68:	ldr	x1, [x6]
    ed6c:	ldr	w7, [x3, #4]
    ed70:	add	x7, x7, x1
    ed74:	asr	x7, x7, #16
    ed78:	mov	w2, w7
    ed7c:	bl	ec44 <ZSTD_compress@@Base+0x3f8>
    ed80:	ldr	x0, [x6]
    ed84:	ldp	x29, x30, [sp], #16
    ed88:	asr	x7, x0, x7
    ed8c:	add	x8, x7, w8, sxtw
    ed90:	ldrh	w0, [x9, x8, lsl #1]
    ed94:	str	x0, [x6]
    ed98:	ret
    ed9c:	stp	x29, x30, [sp, #-16]!
    eda0:	mov	x29, sp
    eda4:	ldr	w2, [x1, #24]
    eda8:	ldr	x1, [x1]
    edac:	bl	ec44 <ZSTD_compress@@Base+0x3f8>
    edb0:	ldp	x29, x30, [sp], #16
    edb4:	b	ec74 <ZSTD_compress@@Base+0x428>
    edb8:	sub	sp, sp, #0x2b0
    edbc:	stp	x29, x30, [sp]
    edc0:	mov	x29, sp
    edc4:	stp	x21, x22, [sp, #32]
    edc8:	mov	x21, x2
    edcc:	mov	x22, x0
    edd0:	mov	w2, w1
    edd4:	mov	w0, w3
    edd8:	stp	x19, x20, [sp, #16]
    eddc:	mov	w19, w1
    ede0:	mov	x1, x21
    ede4:	str	x23, [sp, #48]
    ede8:	bl	7424 <ZSTD_getErrorString@@Base+0x8d8>
    edec:	add	x23, sp, #0x40
    edf0:	mov	w1, w0
    edf4:	mov	w20, w0
    edf8:	mov	w4, w19
    edfc:	mov	x3, x21
    ee00:	mov	x2, x22
    ee04:	mov	x0, x23
    ee08:	bl	742c <ZSTD_getErrorString@@Base+0x8e0>
    ee0c:	cmn	x0, #0x78
    ee10:	b.hi	ee2c <ZSTD_compress@@Base+0x5e0>  // b.pmore
    ee14:	mov	w4, w20
    ee18:	mov	w3, w19
    ee1c:	mov	x2, x23
    ee20:	add	x0, sp, #0xb0
    ee24:	mov	x1, #0x200                 	// #512
    ee28:	bl	7330 <ZSTD_getErrorString@@Base+0x7e4>
    ee2c:	ldp	x29, x30, [sp]
    ee30:	ldp	x19, x20, [sp, #16]
    ee34:	ldp	x21, x22, [sp, #32]
    ee38:	ldr	x23, [sp, #48]
    ee3c:	add	sp, sp, #0x2b0
    ee40:	ret
    ee44:	stp	x29, x30, [sp, #-96]!
    ee48:	mov	x8, x3
    ee4c:	cmp	x3, x4
    ee50:	mov	x29, sp
    ee54:	stp	x19, x20, [sp, #16]
    ee58:	ldr	w3, [sp, #112]
    ee5c:	stp	x21, x22, [sp, #32]
    ee60:	mov	x22, x0
    ee64:	stp	x23, x24, [sp, #48]
    ee68:	mov	x24, x1
    ee6c:	mov	w23, w2
    ee70:	ldr	w1, [sp, #104]
    ee74:	ldr	w2, [sp, #96]
    ee78:	b.ne	eea0 <ZSTD_compress@@Base+0x654>  // b.any
    ee7c:	cmp	w1, #0x0
    ee80:	str	wzr, [x22]
    ee84:	ccmp	x8, #0x2, #0x2, ne  // ne = any
    ee88:	cset	w0, hi  // hi = pmore
    ee8c:	ldp	x19, x20, [sp, #16]
    ee90:	ldp	x21, x22, [sp, #32]
    ee94:	ldp	x23, x24, [sp, #48]
    ee98:	ldp	x29, x30, [sp], #96
    ee9c:	ret
    eea0:	mov	x21, x4
    eea4:	cmp	w3, #0x3
    eea8:	b.hi	ef10 <ZSTD_compress@@Base+0x6c4>  // b.pmore
    eeac:	cbnz	w1, eec0 <ZSTD_compress@@Base+0x674>
    eeb0:	mov	w0, #0x1                   	// #1
    eeb4:	str	w0, [x22]
    eeb8:	mov	w0, #0x2                   	// #2
    eebc:	b	ee8c <ZSTD_compress@@Base+0x640>
    eec0:	mov	w0, #0xa                   	// #10
    eec4:	sub	w0, w0, w3
    eec8:	ldr	w1, [x22]
    eecc:	lsl	x0, x0, x2
    eed0:	lsr	x0, x0, #3
    eed4:	cmp	w1, #0x2
    eed8:	b.ne	eeec <ZSTD_compress@@Base+0x6a0>  // b.any
    eedc:	cmp	x4, #0x3e7
    eee0:	b.hi	eeec <ZSTD_compress@@Base+0x6a0>  // b.pmore
    eee4:	mov	w0, #0x3                   	// #3
    eee8:	b	ee8c <ZSTD_compress@@Base+0x640>
    eeec:	cmp	x21, x0
    eef0:	b.cc	ef04 <ZSTD_compress@@Base+0x6b8>  // b.lo, b.ul, b.last
    eef4:	sub	w2, w2, #0x1
    eef8:	lsr	x2, x21, x2
    eefc:	cmp	x2, x8
    ef00:	b.ls	eeb0 <ZSTD_compress@@Base+0x664>  // b.plast
    ef04:	mov	w0, #0x0                   	// #0
    ef08:	str	wzr, [x22]
    ef0c:	b	ee8c <ZSTD_compress@@Base+0x640>
    ef10:	mov	w9, w5
    ef14:	cbz	w1, f088 <ZSTD_compress@@Base+0x83c>
    ef18:	adrp	x4, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    ef1c:	add	x4, x4, #0xed4
    ef20:	mov	w0, #0x8                   	// #8
    ef24:	add	x4, x4, #0x80
    ef28:	sub	w2, w0, w2
    ef2c:	mov	x20, #0x0                   	// #0
    ef30:	mov	w0, #0x0                   	// #0
    ef34:	ldrsh	w8, [x7, w0, uxtw #1]
    ef38:	mov	w1, w0
    ef3c:	cmn	w8, #0x1
    ef40:	b.ne	ef48 <ZSTD_compress@@Base+0x6fc>  // b.any
    ef44:	mov	w8, #0x1                   	// #1
    ef48:	lsl	w8, w8, w2
    ef4c:	ldr	w1, [x24, x1, lsl #2]
    ef50:	add	w0, w0, #0x1
    ef54:	ldr	w3, [x4, x8, lsl #2]
    ef58:	cmp	w23, w0
    ef5c:	mul	w1, w1, w3
    ef60:	add	x20, x20, x1
    ef64:	b.cs	ef34 <ZSTD_compress@@Base+0x6e8>  // b.hs, b.nlast
    ef68:	lsr	x20, x20, #8
    ef6c:	ldr	w0, [x22]
    ef70:	cbz	w0, f090 <ZSTD_compress@@Base+0x844>
    ef74:	add	x0, sp, #0x40
    ef78:	mov	x1, x6
    ef7c:	bl	ecb4 <ZSTD_compress@@Base+0x468>
    ef80:	ldrh	w0, [x6, #2]
    ef84:	cmp	w23, w0
    ef88:	b.hi	f090 <ZSTD_compress@@Base+0x844>  // b.pmore
    ef8c:	ldr	w4, [sp, #88]
    ef90:	mov	w7, #0x1                   	// #1
    ef94:	ldr	x8, [sp, #80]
    ef98:	add	w5, w4, #0x1
    ef9c:	mov	x0, #0x0                   	// #0
    efa0:	mov	x19, #0x0                   	// #0
    efa4:	lsl	w5, w5, #8
    efa8:	add	x8, x8, #0x4
    efac:	lsl	w7, w7, w4
    efb0:	lsl	x1, x0, #3
    efb4:	ldr	w3, [x8, x1]
    efb8:	ldr	w1, [x24, x0, lsl #2]
    efbc:	cbz	w1, eff4 <ZSTD_compress@@Base+0x7a8>
    efc0:	lsr	w6, w3, #16
    efc4:	add	w3, w3, w7
    efc8:	add	w6, w6, #0x1
    efcc:	lsl	w2, w6, #8
    efd0:	lsl	w6, w6, #16
    efd4:	sub	w6, w6, w3
    efd8:	lsl	w6, w6, #8
    efdc:	lsr	w6, w6, w4
    efe0:	sub	w6, w2, w6
    efe4:	cmp	w5, w6
    efe8:	b.ls	f090 <ZSTD_compress@@Base+0x844>  // b.plast
    efec:	mul	w1, w1, w6
    eff0:	add	x19, x19, x1
    eff4:	add	x0, x0, #0x1
    eff8:	cmp	w23, w0
    effc:	b.cs	efb0 <ZSTD_compress@@Base+0x764>  // b.hs, b.nlast
    f000:	lsr	x19, x19, #8
    f004:	mov	w3, w9
    f008:	mov	w1, w23
    f00c:	mov	x2, x21
    f010:	mov	x0, x24
    f014:	bl	edb8 <ZSTD_compress@@Base+0x56c>
    f018:	lsl	x0, x0, #3
    f01c:	adrp	x1, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    f020:	add	x1, x1, #0xed4
    f024:	add	x1, x1, #0x80
    f028:	mov	w3, #0x0                   	// #0
    f02c:	mov	w4, #0x0                   	// #0
    f030:	mov	w7, #0x1                   	// #1
    f034:	ldr	w5, [x24, w4, uxtw #2]
    f038:	lsl	w2, w5, #8
    f03c:	udiv	x2, x2, x21
    f040:	mov	w6, w2
    f044:	cbz	w5, f050 <ZSTD_compress@@Base+0x804>
    f048:	cmp	w2, #0x0
    f04c:	csel	w6, w2, w7, ne  // ne = any
    f050:	ldr	w2, [x1, w6, uxtw #2]
    f054:	add	w4, w4, #0x1
    f058:	cmp	w23, w4
    f05c:	madd	w3, w5, w2, w3
    f060:	b.cs	f034 <ZSTD_compress@@Base+0x7e8>  // b.hs, b.nlast
    f064:	lsr	w3, w3, #8
    f068:	add	x3, x3, x0
    f06c:	cmp	x19, x3
    f070:	csel	x0, x19, x3, ls  // ls = plast
    f074:	cmp	x20, x0
    f078:	b.ls	ef04 <ZSTD_compress@@Base+0x6b8>  // b.plast
    f07c:	cmp	x19, x3
    f080:	b.hi	eeb0 <ZSTD_compress@@Base+0x664>  // b.pmore
    f084:	b	eee4 <ZSTD_compress@@Base+0x698>
    f088:	mov	x20, #0xffffffffffffffff    	// #-1
    f08c:	b	ef6c <ZSTD_compress@@Base+0x720>
    f090:	mov	x19, #0xffffffffffffffff    	// #-1
    f094:	b	f004 <ZSTD_compress@@Base+0x7b8>
    f098:	stp	x29, x30, [sp, #-208]!
    f09c:	cmp	w4, #0x3
    f0a0:	mov	x29, sp
    f0a4:	stp	x19, x20, [sp, #16]
    f0a8:	stp	x21, x22, [sp, #32]
    f0ac:	stp	x23, x24, [sp, #48]
    f0b0:	stp	x25, x26, [sp, #64]
    f0b4:	stp	x27, x28, [sp, #80]
    f0b8:	ldr	x28, [sp, #208]
    f0bc:	ldp	x25, x26, [sp, #256]
    f0c0:	b.hi	f228 <ZSTD_compress@@Base+0x9dc>  // b.pmore
    f0c4:	mov	x24, x1
    f0c8:	mov	x23, x0
    f0cc:	adrp	x1, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    f0d0:	mov	x21, x2
    f0d4:	mov	w20, w6
    f0d8:	mov	x27, x7
    f0dc:	add	x1, x1, #0xed0
    f0e0:	ldrb	w1, [x1, w4, uxtw]
    f0e4:	adr	x2, f0f0 <ZSTD_compress@@Base+0x8a4>
    f0e8:	add	x1, x2, w1, sxtb #2
    f0ec:	br	x1
    f0f0:	mov	w1, w6
    f0f4:	mov	x0, x21
    f0f8:	bl	77c8 <ZSTD_getErrorString@@Base+0xc7c>
    f0fc:	mov	x19, x0
    f100:	cmn	x0, #0x78
    f104:	b.hi	f118 <ZSTD_compress@@Base+0x8cc>  // b.pmore
    f108:	cbz	x24, f230 <ZSTD_compress@@Base+0x9e4>
    f10c:	ldrb	w0, [x27]
    f110:	mov	x19, #0x1                   	// #1
    f114:	strb	w0, [x23]
    f118:	mov	x0, x19
    f11c:	ldp	x19, x20, [sp, #16]
    f120:	ldp	x21, x22, [sp, #32]
    f124:	ldp	x23, x24, [sp, #48]
    f128:	ldp	x25, x26, [sp, #64]
    f12c:	ldp	x27, x28, [sp, #80]
    f130:	ldp	x29, x30, [sp], #208
    f134:	ret
    f138:	ldp	x1, x2, [sp, #240]
    f13c:	mov	x0, x21
    f140:	bl	4460 <memcpy@plt>
    f144:	mov	x19, #0x0                   	// #0
    f148:	b	f118 <ZSTD_compress@@Base+0x8cc>
    f14c:	ldr	w3, [sp, #224]
    f150:	mov	x5, x26
    f154:	ldr	w2, [sp, #232]
    f158:	mov	x4, x25
    f15c:	ldr	x1, [sp, #216]
    f160:	mov	x0, x21
    f164:	bl	7118 <ZSTD_getErrorString@@Base+0x5cc>
    f168:	mov	x19, x0
    f16c:	cmn	x0, #0x78
    f170:	b.ls	f144 <ZSTD_compress@@Base+0x8f8>  // b.plast
    f174:	b	f118 <ZSTD_compress@@Base+0x8cc>
    f178:	mov	x19, x5
    f17c:	mov	w2, w6
    f180:	mov	x1, x28
    f184:	mov	w0, w3
    f188:	bl	7424 <ZSTD_getErrorString@@Base+0x8d8>
    f18c:	mov	w22, w0
    f190:	sub	x2, x28, #0x1
    f194:	ldrb	w0, [x27, x2]
    f198:	lsl	x0, x0, #2
    f19c:	ldr	w1, [x19, x0]
    f1a0:	cmp	w1, #0x1
    f1a4:	b.ls	f1b4 <ZSTD_compress@@Base+0x968>  // b.plast
    f1a8:	mov	x28, x2
    f1ac:	sub	w1, w1, #0x1
    f1b0:	str	w1, [x19, x0]
    f1b4:	add	x27, sp, #0x60
    f1b8:	mov	x2, x19
    f1bc:	mov	w4, w20
    f1c0:	mov	x3, x28
    f1c4:	mov	w1, w22
    f1c8:	mov	x0, x27
    f1cc:	bl	742c <ZSTD_getErrorString@@Base+0x8e0>
    f1d0:	mov	x19, x0
    f1d4:	cmn	x0, #0x78
    f1d8:	b.hi	f118 <ZSTD_compress@@Base+0x8cc>  // b.pmore
    f1dc:	mov	w4, w22
    f1e0:	mov	w3, w20
    f1e4:	mov	x2, x27
    f1e8:	mov	x1, x24
    f1ec:	mov	x0, x23
    f1f0:	bl	7330 <ZSTD_getErrorString@@Base+0x7e4>
    f1f4:	mov	x19, x0
    f1f8:	cmn	x0, #0x78
    f1fc:	b.hi	f118 <ZSTD_compress@@Base+0x8cc>  // b.pmore
    f200:	mov	x5, x26
    f204:	mov	x4, x25
    f208:	mov	w3, w22
    f20c:	mov	w2, w20
    f210:	mov	x1, x27
    f214:	mov	x0, x21
    f218:	bl	7118 <ZSTD_getErrorString@@Base+0x5cc>
    f21c:	cmn	x0, #0x77
    f220:	csel	x19, x19, x0, cc  // cc = lo, ul, last
    f224:	b	f118 <ZSTD_compress@@Base+0x8cc>
    f228:	mov	x19, #0xffffffffffffffff    	// #-1
    f22c:	b	f118 <ZSTD_compress@@Base+0x8cc>
    f230:	mov	x19, #0xffffffffffffffba    	// #-70
    f234:	b	f118 <ZSTD_compress@@Base+0x8cc>
    f238:	stp	x29, x30, [sp, #-240]!
    f23c:	mov	x8, x1
    f240:	mov	x1, x2
    f244:	mov	x29, sp
    f248:	subs	x2, x8, #0x8
    f24c:	stp	x19, x20, [sp, #16]
    f250:	stp	x21, x22, [sp, #32]
    f254:	stp	x23, x24, [sp, #48]
    f258:	stp	x25, x26, [sp, #64]
    f25c:	stp	x27, x28, [sp, #80]
    f260:	str	xzr, [sp, #200]
    f264:	str	wzr, [sp, #208]
    f268:	stp	x0, x0, [sp, #216]
    f26c:	add	x0, x0, x2
    f270:	str	x0, [sp, #232]
    f274:	ldp	x11, x19, [sp, #240]
    f278:	b.ls	f3e0 <ZSTD_compress@@Base+0xb94>  // b.plast
    f27c:	sub	x8, x19, #0x1
    f280:	mov	x15, x7
    f284:	mov	x10, x4
    f288:	mov	x18, x5
    f28c:	mov	x14, x3
    f290:	mov	x9, x6
    f294:	ldrb	w2, [x3, x8]
    f298:	add	x22, sp, #0x68
    f29c:	mov	x0, x22
    f2a0:	add	x21, sp, #0x88
    f2a4:	add	x20, sp, #0xa8
    f2a8:	bl	ecf8 <ZSTD_compress@@Base+0x4ac>
    f2ac:	ldrb	w2, [x18, x8]
    f2b0:	mov	x1, x10
    f2b4:	mov	x0, x21
    f2b8:	bl	ecf8 <ZSTD_compress@@Base+0x4ac>
    f2bc:	ldrb	w2, [x15, x8]
    f2c0:	mov	x1, x9
    f2c4:	mov	x0, x20
    f2c8:	bl	ecf8 <ZSTD_compress@@Base+0x4ac>
    f2cc:	ldrb	w1, [x15, x8]
    f2d0:	lsl	x12, x19, #3
    f2d4:	adrp	x6, 53000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbae0>
    f2d8:	sub	x9, x12, #0x8
    f2dc:	add	x7, x6, #0xed4
    f2e0:	add	x13, x11, x9
    f2e4:	add	x0, x7, #0x480
    f2e8:	add	x10, sp, #0xc8
    f2ec:	ldr	w2, [x0, x1, lsl #2]
    f2f0:	mov	x0, x10
    f2f4:	ldrh	w1, [x13, #4]
    f2f8:	bl	ec44 <ZSTD_compress@@Base+0x3f8>
    f2fc:	ldrb	w0, [x14, x8]
    f300:	add	x7, x7, #0x510
    f304:	ldrh	w1, [x13, #6]
    f308:	ldr	w2, [x7, x0, lsl #2]
    f30c:	mov	x0, x10
    f310:	bl	ec44 <ZSTD_compress@@Base+0x3f8>
    f314:	ldrb	w8, [x18, x8]
    f318:	ldr	w0, [sp, #256]
    f31c:	cbz	w0, f408 <ZSTD_compress@@Base+0xbbc>
    f320:	cmp	w8, #0x37
    f324:	b.ls	f400 <ZSTD_compress@@Base+0xbb4>  // b.plast
    f328:	subs	w7, w8, #0x38
    f32c:	b.eq	f400 <ZSTD_compress@@Base+0xbb4>  // b.none
    f330:	ldr	w1, [x11, x9]
    f334:	mov	w2, w7
    f338:	mov	x0, x10
    f33c:	bl	ec44 <ZSTD_compress@@Base+0x3f8>
    f340:	bl	ec74 <ZSTD_compress@@Base+0x428>
    f344:	ldr	w1, [x11, x9]
    f348:	sub	w2, w8, w7
    f34c:	lsr	w1, w1, w7
    f350:	mov	x0, x10
    f354:	bl	ec44 <ZSTD_compress@@Base+0x3f8>
    f358:	bl	ec74 <ZSTD_compress@@Base+0x428>
    f35c:	add	x6, x6, #0xed4
    f360:	add	x11, x11, x12
    f364:	sub	x13, x19, #0x2
    f368:	add	x25, x6, #0x480
    f36c:	add	x12, x6, #0x510
    f370:	cmp	x19, x13
    f374:	b.hi	f414 <ZSTD_compress@@Base+0xbc8>  // b.pmore
    f378:	mov	x0, x10
    f37c:	mov	x1, x22
    f380:	bl	ed9c <ZSTD_compress@@Base+0x550>
    f384:	mov	x1, x21
    f388:	bl	ed9c <ZSTD_compress@@Base+0x550>
    f38c:	mov	x1, x20
    f390:	bl	ed9c <ZSTD_compress@@Base+0x550>
    f394:	ldr	w0, [sp, #208]
    f398:	mov	x1, #0x1                   	// #1
    f39c:	lsl	x2, x1, x0
    f3a0:	add	w0, w0, #0x1
    f3a4:	ldr	x1, [sp, #200]
    f3a8:	str	w0, [sp, #208]
    f3ac:	mov	x0, x10
    f3b0:	orr	x1, x1, x2
    f3b4:	str	x1, [sp, #200]
    f3b8:	bl	ec74 <ZSTD_compress@@Base+0x428>
    f3bc:	ldp	x0, x1, [sp, #224]
    f3c0:	cmp	x0, x1
    f3c4:	b.cs	f3e0 <ZSTD_compress@@Base+0xb94>  // b.hs, b.nlast
    f3c8:	ldr	x1, [sp, #216]
    f3cc:	sub	x0, x0, x1
    f3d0:	ldr	w1, [sp, #208]
    f3d4:	cmp	w1, #0x0
    f3d8:	cinc	x0, x0, ne  // ne = any
    f3dc:	cbnz	x0, f3e4 <ZSTD_compress@@Base+0xb98>
    f3e0:	mov	x0, #0xffffffffffffffba    	// #-70
    f3e4:	ldp	x19, x20, [sp, #16]
    f3e8:	ldp	x21, x22, [sp, #32]
    f3ec:	ldp	x23, x24, [sp, #48]
    f3f0:	ldp	x25, x26, [sp, #64]
    f3f4:	ldp	x27, x28, [sp, #80]
    f3f8:	ldp	x29, x30, [sp], #240
    f3fc:	ret
    f400:	mov	w7, #0x0                   	// #0
    f404:	b	f344 <ZSTD_compress@@Base+0xaf8>
    f408:	ldr	w1, [x11, x9]
    f40c:	mov	w2, w8
    f410:	b	f350 <ZSTD_compress@@Base+0xb04>
    f414:	ldrb	w0, [x15, x13]
    f418:	mov	x1, x21
    f41c:	ldrb	w24, [x18, x13]
    f420:	ldrb	w23, [x14, x13]
    f424:	ldrb	w28, [x15, x13]
    f428:	mov	w2, w24
    f42c:	ldr	w27, [x25, x0, lsl #2]
    f430:	ldrb	w0, [x14, x13]
    f434:	ldr	w26, [x12, x0, lsl #2]
    f438:	mov	x0, x10
    f43c:	bl	ed4c <ZSTD_compress@@Base+0x500>
    f440:	mov	x0, x10
    f444:	mov	w2, w23
    f448:	mov	x1, x22
    f44c:	bl	ed4c <ZSTD_compress@@Base+0x500>
    f450:	mov	x0, x10
    f454:	mov	w2, w28
    f458:	mov	x1, x20
    f45c:	bl	ed4c <ZSTD_compress@@Base+0x500>
    f460:	add	w6, w27, w26
    f464:	add	w6, w6, w24
    f468:	cmp	w6, #0x1e
    f46c:	b.ls	f478 <ZSTD_compress@@Base+0xc2c>  // b.plast
    f470:	mov	x0, x10
    f474:	bl	ec74 <ZSTD_compress@@Base+0x428>
    f478:	ldurh	w1, [x11, #-12]
    f47c:	mov	w2, w27
    f480:	mov	x0, x10
    f484:	bl	ec44 <ZSTD_compress@@Base+0x3f8>
    f488:	ldurh	w1, [x11, #-10]
    f48c:	mov	w2, w26
    f490:	bl	ec44 <ZSTD_compress@@Base+0x3f8>
    f494:	cmp	w6, #0x38
    f498:	b.ls	f4a0 <ZSTD_compress@@Base+0xc54>  // b.plast
    f49c:	bl	ec74 <ZSTD_compress@@Base+0x428>
    f4a0:	ldr	w0, [sp, #256]
    f4a4:	ldur	w1, [x11, #-16]
    f4a8:	cbz	w0, f4f8 <ZSTD_compress@@Base+0xcac>
    f4ac:	cmp	w24, #0x37
    f4b0:	b.ls	f4f0 <ZSTD_compress@@Base+0xca4>  // b.plast
    f4b4:	subs	w6, w24, #0x38
    f4b8:	b.eq	f4f0 <ZSTD_compress@@Base+0xca4>  // b.none
    f4bc:	mov	w2, w6
    f4c0:	mov	x0, x10
    f4c4:	bl	ec44 <ZSTD_compress@@Base+0x3f8>
    f4c8:	bl	ec74 <ZSTD_compress@@Base+0x428>
    f4cc:	ldur	w1, [x11, #-16]
    f4d0:	sub	w2, w24, w6
    f4d4:	lsr	w1, w1, w6
    f4d8:	mov	x0, x10
    f4dc:	bl	ec44 <ZSTD_compress@@Base+0x3f8>
    f4e0:	bl	ec74 <ZSTD_compress@@Base+0x428>
    f4e4:	sub	x13, x13, #0x1
    f4e8:	sub	x11, x11, #0x8
    f4ec:	b	f370 <ZSTD_compress@@Base+0xb24>
    f4f0:	mov	w6, #0x0                   	// #0
    f4f4:	b	f4cc <ZSTD_compress@@Base+0xc80>
    f4f8:	mov	w2, w24
    f4fc:	b	f4d8 <ZSTD_compress@@Base+0xc8c>
    f500:	cmp	x1, x3
    f504:	b.ls	f524 <ZSTD_compress@@Base+0xcd8>  // b.plast
    f508:	mov	x3, x1
    f50c:	mov	x4, x0
    f510:	mov	x0, #0x0                   	// #0
    f514:	add	x1, x3, x0
    f518:	cmp	x2, x1
    f51c:	b.hi	f570 <ZSTD_compress@@Base+0xd24>  // b.pmore
    f520:	ret
    f524:	ldp	x6, x7, [x1]
    f528:	stp	x6, x7, [x0]
    f52c:	sub	x4, x3, x1
    f530:	ldp	x6, x7, [x1, #16]
    f534:	stp	x6, x7, [x0, #16]
    f538:	add	x4, x0, x4
    f53c:	add	x0, x0, #0x20
    f540:	cmp	x4, x0
    f544:	b.ls	f510 <ZSTD_compress@@Base+0xcc4>  // b.plast
    f548:	add	x1, x1, #0x20
    f54c:	ldp	x6, x7, [x1]
    f550:	stp	x6, x7, [x0]
    f554:	add	x0, x0, #0x20
    f558:	ldp	x6, x7, [x1, #16]
    f55c:	stp	x6, x7, [x0, #-16]
    f560:	add	x1, x1, #0x20
    f564:	cmp	x4, x0
    f568:	b.hi	f54c <ZSTD_compress@@Base+0xd00>  // b.pmore
    f56c:	b	f510 <ZSTD_compress@@Base+0xcc4>
    f570:	ldrb	w1, [x3, x0]
    f574:	strb	w1, [x4, x0]
    f578:	add	x0, x0, #0x1
    f57c:	b	f514 <ZSTD_compress@@Base+0xcc8>
    f580:	sub	w2, w2, #0x5
    f584:	mov	x3, x0
    f588:	cmp	w2, #0x3
    f58c:	b.hi	f5b0 <ZSTD_compress@@Base+0xd64>  // b.pmore
    f590:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
    f594:	mov	w4, #0x40                  	// #64
    f598:	add	x0, x0, #0x4b8
    f59c:	ldr	x3, [x3]
    f5a0:	ldrb	w0, [x0, w2, uxtw]
    f5a4:	adr	x2, f5b0 <ZSTD_compress@@Base+0xd64>
    f5a8:	add	x0, x2, w0, sxtb #2
    f5ac:	br	x0
    f5b0:	ldr	w0, [x0]
    f5b4:	mov	w2, #0x79b1                	// #31153
    f5b8:	movk	w2, #0x9e37, lsl #16
    f5bc:	neg	w1, w1
    f5c0:	mul	w0, w0, w2
    f5c4:	lsr	w0, w0, w1
    f5c8:	mov	w0, w0
    f5cc:	ret
    f5d0:	mov	x0, #0xbb000000            	// #3137339392
    f5d4:	movk	x0, #0xbcdc, lsl #32
    f5d8:	movk	x0, #0xcf1b, lsl #48
    f5dc:	mul	x3, x3, x0
    f5e0:	sub	w0, w4, w1
    f5e4:	lsr	x0, x3, x0
    f5e8:	b	f5cc <ZSTD_compress@@Base+0xd80>
    f5ec:	mov	x0, #0xbf9b0000            	// #3214606336
    f5f0:	b	f5d4 <ZSTD_compress@@Base+0xd88>
    f5f4:	mov	x0, #0x6300                	// #25344
    f5f8:	movk	x0, #0xbfa5, lsl #16
    f5fc:	b	f5d4 <ZSTD_compress@@Base+0xd88>
    f600:	mov	x0, #0x6463                	// #25699
    f604:	movk	x0, #0xb7a5, lsl #16
    f608:	b	f5d4 <ZSTD_compress@@Base+0xd88>
    f60c:	sub	x5, x2, #0x7
    f610:	cmp	x0, x5
    f614:	b.cs	f6e4 <ZSTD_compress@@Base+0xe98>  // b.hs, b.nlast
    f618:	ldr	x4, [x0]
    f61c:	ldr	x3, [x1]
    f620:	cmp	x3, x4
    f624:	b.eq	f63c <ZSTD_compress@@Base+0xdf0>  // b.none
    f628:	eor	x0, x3, x4
    f62c:	rbit	x0, x0
    f630:	clz	x0, x0
    f634:	lsr	x0, x0, #3
    f638:	ret
    f63c:	add	x3, x0, #0x8
    f640:	add	x1, x1, #0x8
    f644:	cmp	x3, x5
    f648:	b.cc	f6b4 <ZSTD_compress@@Base+0xe68>  // b.lo, b.ul, b.last
    f64c:	sub	x4, x2, #0x3
    f650:	cmp	x3, x4
    f654:	b.cs	f670 <ZSTD_compress@@Base+0xe24>  // b.hs, b.nlast
    f658:	ldr	w4, [x1]
    f65c:	ldr	w5, [x3]
    f660:	cmp	w5, w4
    f664:	b.ne	f670 <ZSTD_compress@@Base+0xe24>  // b.any
    f668:	add	x3, x3, #0x4
    f66c:	add	x1, x1, #0x4
    f670:	sub	x4, x2, #0x1
    f674:	cmp	x3, x4
    f678:	b.cs	f694 <ZSTD_compress@@Base+0xe48>  // b.hs, b.nlast
    f67c:	ldrh	w5, [x3]
    f680:	ldrh	w4, [x1]
    f684:	cmp	w5, w4
    f688:	b.ne	f694 <ZSTD_compress@@Base+0xe48>  // b.any
    f68c:	add	x3, x3, #0x2
    f690:	add	x1, x1, #0x2
    f694:	cmp	x3, x2
    f698:	b.cs	f6dc <ZSTD_compress@@Base+0xe90>  // b.hs, b.nlast
    f69c:	ldrb	w2, [x1]
    f6a0:	ldrb	w1, [x3]
    f6a4:	cmp	w2, w1
    f6a8:	b.ne	f6dc <ZSTD_compress@@Base+0xe90>  // b.any
    f6ac:	add	x3, x3, #0x1
    f6b0:	b	f6dc <ZSTD_compress@@Base+0xe90>
    f6b4:	ldr	x4, [x1]
    f6b8:	ldr	x6, [x3]
    f6bc:	cmp	x4, x6
    f6c0:	b.ne	f6cc <ZSTD_compress@@Base+0xe80>  // b.any
    f6c4:	add	x3, x3, #0x8
    f6c8:	b	f640 <ZSTD_compress@@Base+0xdf4>
    f6cc:	eor	x4, x4, x6
    f6d0:	rbit	x4, x4
    f6d4:	clz	x4, x4
    f6d8:	add	x3, x3, x4, lsr #3
    f6dc:	sub	x0, x3, x0
    f6e0:	b	f638 <ZSTD_compress@@Base+0xdec>
    f6e4:	mov	x3, x0
    f6e8:	b	f64c <ZSTD_compress@@Base+0xe00>
    f6ec:	mov	x9, x2
    f6f0:	sub	x2, x3, x1
    f6f4:	add	x2, x0, x2
    f6f8:	mov	x8, x1
    f6fc:	cmp	x9, x2
    f700:	mov	x11, x3
    f704:	mov	x10, x0
    f708:	mov	x12, x4
    f70c:	stp	x29, x30, [sp, #-16]!
    f710:	csel	x2, x9, x2, cc  // cc = lo, ul, last
    f714:	mov	x29, sp
    f718:	bl	f60c <ZSTD_compress@@Base+0xdc0>
    f71c:	add	x8, x8, x0
    f720:	mov	x7, x0
    f724:	cmp	x11, x8
    f728:	b.ne	f740 <ZSTD_compress@@Base+0xef4>  // b.any
    f72c:	mov	x2, x9
    f730:	mov	x1, x12
    f734:	add	x0, x10, x0
    f738:	bl	f60c <ZSTD_compress@@Base+0xdc0>
    f73c:	add	x7, x7, x0
    f740:	mov	x0, x7
    f744:	ldp	x29, x30, [sp], #16
    f748:	ret
    f74c:	stp	x29, x30, [sp, #-192]!
    f750:	add	x15, x3, x4
    f754:	mov	x29, sp
    f758:	ldr	x14, [x0, #8]
    f75c:	stp	x19, x20, [sp, #16]
    f760:	mov	x19, x1
    f764:	ldr	x1, [x0, #48]
    f768:	str	x1, [sp, #96]
    f76c:	sub	x1, x15, #0x8
    f770:	str	x2, [sp, #136]
    f774:	ldr	x2, [x0, #64]
    f778:	str	x2, [sp, #112]
    f77c:	ldr	w2, [x0, #28]
    f780:	mov	x20, x3
    f784:	str	x1, [sp, #128]
    f788:	sub	x1, x3, x14
    f78c:	add	w4, w1, w4
    f790:	ldr	w1, [x0, #184]
    f794:	str	w2, [sp, #108]
    f798:	mov	w2, w2
    f79c:	mov	w3, #0x1                   	// #1
    f7a0:	stp	x21, x22, [sp, #32]
    f7a4:	mov	w22, w5
    f7a8:	sub	w5, w4, w2
    f7ac:	ldr	w8, [x0, #32]
    f7b0:	lsl	w1, w3, w1
    f7b4:	cmp	w1, w5
    f7b8:	ldr	w5, [sp, #108]
    f7bc:	sub	w2, w4, w1
    f7c0:	ldr	w6, [sp, #108]
    f7c4:	csel	w5, w2, w5, cc  // cc = lo, ul, last
    f7c8:	cmp	w8, #0x0
    f7cc:	csel	w5, w6, w5, ne  // ne = any
    f7d0:	str	w5, [sp, #108]
    f7d4:	ldr	x5, [sp, #136]
    f7d8:	stp	x23, x24, [sp, #48]
    f7dc:	ldr	w18, [x0, #24]
    f7e0:	ldp	w23, w21, [x0, #188]
    f7e4:	stp	x25, x26, [sp, #64]
    f7e8:	stp	x27, x28, [sp, #80]
    f7ec:	ldp	w13, w26, [x5]
    f7f0:	ldr	w5, [sp, #108]
    f7f4:	cmp	w18, w5
    f7f8:	b.ls	f848 <ZSTD_compress@@Base+0xffc>  // b.plast
    f7fc:	ldr	x0, [x0, #16]
    f800:	str	x0, [sp, #120]
    f804:	sub	w1, w18, #0x1
    f808:	stp	w3, w1, [sp, #160]
    f80c:	ldr	x1, [sp, #120]
    f810:	add	x24, x14, w18, uxtw
    f814:	mov	x28, x20
    f818:	sub	x25, x15, #0x20
    f81c:	add	x0, x1, w5, uxtw
    f820:	str	x0, [sp, #152]
    f824:	add	x0, x1, w18, uxtw
    f828:	str	x0, [sp, #144]
    f82c:	ldr	x0, [sp, #128]
    f830:	cmp	x20, x0
    f834:	b.cc	fe54 <ZSTD_compress@@Base+0x1608>  // b.lo, b.ul, b.last
    f838:	ldr	x0, [sp, #136]
    f83c:	stp	w13, w26, [x0]
    f840:	sub	x0, x15, x28
    f844:	b	f8b4 <ZSTD_compress@@Base+0x1068>
    f848:	sub	w4, w4, w18
    f84c:	cmp	w4, w1
    f850:	csel	w18, w18, w2, ls  // ls = plast
    f854:	add	x12, x14, w18, uxtw
    f858:	cmp	w20, w12
    f85c:	cinc	x8, x20, eq  // eq = none
    f860:	sub	x0, x8, x12
    f864:	cmp	w26, w0
    f868:	b.ls	f8d0 <ZSTD_compress@@Base+0x1084>  // b.plast
    f86c:	mov	w10, w26
    f870:	mov	w26, #0x0                   	// #0
    f874:	cmp	w13, w0
    f878:	b.ls	f884 <ZSTD_compress@@Base+0x1038>  // b.plast
    f87c:	mov	w10, w13
    f880:	mov	w13, #0x0                   	// #0
    f884:	sub	x11, x15, #0x20
    f888:	mov	x28, #0x4                   	// #4
    f88c:	ldr	x0, [sp, #128]
    f890:	cmp	x0, x8
    f894:	b.hi	f8d8 <ZSTD_compress@@Base+0x108c>  // b.pmore
    f898:	ldr	x0, [sp, #136]
    f89c:	cmp	w13, #0x0
    f8a0:	csel	w13, w13, w10, ne  // ne = any
    f8a4:	cmp	w26, #0x0
    f8a8:	csel	w10, w10, w26, eq  // eq = none
    f8ac:	stp	w13, w10, [x0]
    f8b0:	sub	x0, x15, x20
    f8b4:	ldp	x19, x20, [sp, #16]
    f8b8:	ldp	x21, x22, [sp, #32]
    f8bc:	ldp	x23, x24, [sp, #48]
    f8c0:	ldp	x25, x26, [sp, #64]
    f8c4:	ldp	x27, x28, [sp, #80]
    f8c8:	ldp	x29, x30, [sp], #192
    f8cc:	ret
    f8d0:	mov	w10, #0x0                   	// #0
    f8d4:	b	f874 <ZSTD_compress@@Base+0x1028>
    f8d8:	mov	w1, w21
    f8dc:	mov	x0, x8
    f8e0:	mov	w2, #0x8                   	// #8
    f8e4:	bl	f580 <ZSTD_compress@@Base+0xd34>
    f8e8:	mov	x5, x0
    f8ec:	mov	w2, w22
    f8f0:	mov	w1, w23
    f8f4:	mov	x0, x8
    f8f8:	bl	f580 <ZSTD_compress@@Base+0xd34>
    f8fc:	lsl	x1, x5, #2
    f900:	ldr	x2, [sp, #96]
    f904:	lsl	x0, x0, #2
    f908:	ldr	x4, [sp, #112]
    f90c:	sub	x9, x8, x14
    f910:	ldr	w3, [x2, x1]
    f914:	cmp	w13, #0x0
    f918:	ldr	x2, [sp, #112]
    f91c:	add	x25, x8, #0x1
    f920:	ldr	w2, [x2, x0]
    f924:	str	w9, [x4, x0]
    f928:	ldr	x0, [sp, #96]
    f92c:	str	w9, [x0, x1]
    f930:	sub	x0, x8, w13, uxtw
    f934:	mov	w1, w13
    f938:	ldur	w4, [x0, #1]
    f93c:	ldur	w0, [x8, #1]
    f940:	ccmp	w4, w0, #0x0, ne  // ne = any
    f944:	b.ne	fb20 <ZSTD_compress@@Base+0x12d4>  // b.any
    f948:	sub	x1, x8, x1
    f94c:	add	x0, x8, #0x5
    f950:	mov	x2, x15
    f954:	add	x1, x1, #0x5
    f958:	bl	f60c <ZSTD_compress@@Base+0xdc0>
    f95c:	sub	x24, x25, x20
    f960:	add	x5, x0, #0x4
    f964:	add	x8, x0, #0x1
    f968:	cmp	x25, x11
    f96c:	ldr	x0, [x19, #24]
    f970:	b.hi	fb0c <ZSTD_compress@@Base+0x12c0>  // b.pmore
    f974:	ldp	x2, x3, [x20]
    f978:	stp	x2, x3, [x0]
    f97c:	cmp	x24, #0x10
    f980:	b.ls	f9cc <ZSTD_compress@@Base+0x1180>  // b.plast
    f984:	ldr	x2, [x19, #24]
    f988:	ldp	x0, x1, [x20, #16]
    f98c:	add	x4, x2, x24
    f990:	stp	x0, x1, [x2, #16]
    f994:	ldp	x0, x1, [x20, #32]
    f998:	stp	x0, x1, [x2, #32]
    f99c:	add	x1, x2, #0x30
    f9a0:	cmp	x4, x1
    f9a4:	b.ls	f9cc <ZSTD_compress@@Base+0x1180>  // b.plast
    f9a8:	add	x6, x20, #0x30
    f9ac:	ldp	x2, x3, [x6]
    f9b0:	stp	x2, x3, [x1]
    f9b4:	add	x1, x1, #0x20
    f9b8:	ldp	x2, x3, [x6, #16]
    f9bc:	stp	x2, x3, [x1, #-16]
    f9c0:	add	x6, x6, #0x20
    f9c4:	cmp	x4, x1
    f9c8:	b.hi	f9ac <ZSTD_compress@@Base+0x1160>  // b.pmore
    f9cc:	ldr	x0, [x19, #24]
    f9d0:	mov	x1, #0xffff                	// #65535
    f9d4:	cmp	x24, x1
    f9d8:	add	x0, x0, x24
    f9dc:	str	x0, [x19, #24]
    f9e0:	ldr	x0, [x19, #8]
    f9e4:	b.ls	fa00 <ZSTD_compress@@Base+0x11b4>  // b.plast
    f9e8:	mov	w1, #0x1                   	// #1
    f9ec:	str	w1, [x19, #72]
    f9f0:	ldr	x1, [x19]
    f9f4:	sub	x1, x0, x1
    f9f8:	asr	x1, x1, #3
    f9fc:	str	w1, [x19, #76]
    fa00:	mov	w1, #0x1                   	// #1
    fa04:	str	w1, [x0]
    fa08:	strh	w24, [x0, #4]
    fa0c:	mov	x1, #0xffff                	// #65535
    fa10:	cmp	x8, x1
    fa14:	b.ls	fa30 <ZSTD_compress@@Base+0x11e4>  // b.plast
    fa18:	mov	w1, #0x2                   	// #2
    fa1c:	str	w1, [x19, #72]
    fa20:	ldr	x1, [x19]
    fa24:	sub	x1, x0, x1
    fa28:	asr	x1, x1, #3
    fa2c:	str	w1, [x19, #76]
    fa30:	mov	w24, w13
    fa34:	strh	w8, [x0, #6]
    fa38:	mov	x8, x25
    fa3c:	add	x0, x0, #0x8
    fa40:	str	x0, [x19, #8]
    fa44:	ldr	x0, [sp, #128]
    fa48:	add	x8, x8, x5
    fa4c:	cmp	x0, x8
    fa50:	b.cc	fb04 <ZSTD_compress@@Base+0x12b8>  // b.lo, b.ul, b.last
    fa54:	add	w5, w9, #0x2
    fa58:	add	w9, w9, #0x2
    fa5c:	add	x9, x14, x9
    fa60:	mov	w1, w21
    fa64:	mov	x0, x9
    fa68:	mov	w2, #0x8                   	// #8
    fa6c:	bl	f580 <ZSTD_compress@@Base+0xd34>
    fa70:	ldr	x1, [sp, #96]
    fa74:	mov	w2, #0x8                   	// #8
    fa78:	str	w5, [x1, x0, lsl #2]
    fa7c:	sub	x0, x8, #0x2
    fa80:	sub	x6, x0, x14
    fa84:	mov	w1, w21
    fa88:	bl	f580 <ZSTD_compress@@Base+0xd34>
    fa8c:	ldr	x1, [sp, #96]
    fa90:	mov	w2, w22
    fa94:	str	w6, [x1, x0, lsl #2]
    fa98:	mov	x0, x9
    fa9c:	mov	w1, w23
    faa0:	bl	f580 <ZSTD_compress@@Base+0xd34>
    faa4:	ldr	x1, [sp, #112]
    faa8:	mov	w2, w22
    faac:	str	w5, [x1, x0, lsl #2]
    fab0:	sub	x0, x8, #0x1
    fab4:	sub	x5, x0, x14
    fab8:	mov	w1, w23
    fabc:	bl	f580 <ZSTD_compress@@Base+0xd34>
    fac0:	ldr	x1, [sp, #112]
    fac4:	mov	w9, #0x1                   	// #1
    fac8:	mov	x13, #0xffff                	// #65535
    facc:	str	w5, [x1, x0, lsl #2]
    fad0:	mov	w0, w24
    fad4:	mov	w24, w26
    fad8:	mov	w26, w0
    fadc:	sub	x0, x8, w24, uxtw
    fae0:	cmp	w24, #0x0
    fae4:	mov	w1, w24
    fae8:	ldr	w2, [x0]
    faec:	ldr	w0, [x8]
    faf0:	ccmp	w2, w0, #0x0, ne  // ne = any
    faf4:	b.eq	fd80 <ZSTD_compress@@Base+0x1534>  // b.none
    faf8:	mov	w0, w24
    fafc:	mov	w24, w26
    fb00:	mov	w26, w0
    fb04:	mov	x20, x8
    fb08:	b	fd08 <ZSTD_compress@@Base+0x14bc>
    fb0c:	mov	x3, x11
    fb10:	mov	x2, x25
    fb14:	mov	x1, x20
    fb18:	bl	f500 <ZSTD_compress@@Base+0xcb4>
    fb1c:	b	f9cc <ZSTD_compress@@Base+0x1180>
    fb20:	cmp	w18, w3
    fb24:	b.cs	fc64 <ZSTD_compress@@Base+0x1418>  // b.hs, b.nlast
    fb28:	ldr	x0, [x14, w3, uxtw]
    fb2c:	add	x27, x14, w3, uxtw
    fb30:	ldr	x1, [x8]
    fb34:	cmp	x1, x0
    fb38:	b.ne	fc64 <ZSTD_compress@@Base+0x1418>  // b.any
    fb3c:	mov	x2, x15
    fb40:	add	x1, x27, #0x8
    fb44:	add	x0, x8, #0x8
    fb48:	bl	f60c <ZSTD_compress@@Base+0xdc0>
    fb4c:	add	x5, x0, #0x8
    fb50:	sub	w24, w8, w27
    fb54:	cmp	x20, x8
    fb58:	ccmp	x12, x27, #0x2, cc  // cc = lo, ul, last
    fb5c:	b.cs	fb70 <ZSTD_compress@@Base+0x1324>  // b.hs, b.nlast
    fb60:	ldurb	w1, [x8, #-1]
    fb64:	ldurb	w0, [x27, #-1]
    fb68:	cmp	w1, w0
    fb6c:	b.eq	fc54 <ZSTD_compress@@Base+0x1408>  // b.none
    fb70:	sub	x25, x8, x20
    fb74:	sub	x26, x5, #0x3
    fb78:	cmp	x8, x11
    fb7c:	ldr	x0, [x19, #24]
    fb80:	b.hi	fd6c <ZSTD_compress@@Base+0x1520>  // b.pmore
    fb84:	ldp	x2, x3, [x20]
    fb88:	stp	x2, x3, [x0]
    fb8c:	cmp	x25, #0x10
    fb90:	b.ls	fbdc <ZSTD_compress@@Base+0x1390>  // b.plast
    fb94:	ldr	x2, [x19, #24]
    fb98:	ldp	x0, x1, [x20, #16]
    fb9c:	add	x4, x2, x25
    fba0:	stp	x0, x1, [x2, #16]
    fba4:	ldp	x0, x1, [x20, #32]
    fba8:	stp	x0, x1, [x2, #32]
    fbac:	add	x1, x2, #0x30
    fbb0:	cmp	x4, x1
    fbb4:	b.ls	fbdc <ZSTD_compress@@Base+0x1390>  // b.plast
    fbb8:	add	x6, x20, #0x30
    fbbc:	ldp	x2, x3, [x6]
    fbc0:	stp	x2, x3, [x1]
    fbc4:	add	x1, x1, #0x20
    fbc8:	ldp	x2, x3, [x6, #16]
    fbcc:	stp	x2, x3, [x1, #-16]
    fbd0:	add	x6, x6, #0x20
    fbd4:	cmp	x4, x1
    fbd8:	b.hi	fbbc <ZSTD_compress@@Base+0x1370>  // b.pmore
    fbdc:	ldr	x0, [x19, #24]
    fbe0:	mov	x1, #0xffff                	// #65535
    fbe4:	cmp	x25, x1
    fbe8:	add	x0, x0, x25
    fbec:	str	x0, [x19, #24]
    fbf0:	ldr	x0, [x19, #8]
    fbf4:	b.ls	fc10 <ZSTD_compress@@Base+0x13c4>  // b.plast
    fbf8:	mov	w1, #0x1                   	// #1
    fbfc:	str	w1, [x19, #72]
    fc00:	ldr	x1, [x19]
    fc04:	sub	x1, x0, x1
    fc08:	asr	x1, x1, #3
    fc0c:	str	w1, [x19, #76]
    fc10:	add	w1, w24, #0x3
    fc14:	str	w1, [x0]
    fc18:	strh	w25, [x0, #4]
    fc1c:	mov	x1, #0xffff                	// #65535
    fc20:	cmp	x26, x1
    fc24:	b.ls	fc40 <ZSTD_compress@@Base+0x13f4>  // b.plast
    fc28:	mov	w1, #0x2                   	// #2
    fc2c:	str	w1, [x19, #72]
    fc30:	ldr	x1, [x19]
    fc34:	sub	x1, x0, x1
    fc38:	asr	x1, x1, #3
    fc3c:	str	w1, [x19, #76]
    fc40:	strh	w26, [x0, #6]
    fc44:	add	x0, x0, #0x8
    fc48:	mov	w26, w13
    fc4c:	str	x0, [x19, #8]
    fc50:	b	fa44 <ZSTD_compress@@Base+0x11f8>
    fc54:	sub	x8, x8, #0x1
    fc58:	sub	x27, x27, #0x1
    fc5c:	add	x5, x5, #0x1
    fc60:	b	fb54 <ZSTD_compress@@Base+0x1308>
    fc64:	cmp	w18, w2
    fc68:	b.cs	fcf4 <ZSTD_compress@@Base+0x14a8>  // b.hs, b.nlast
    fc6c:	ldr	w0, [x14, w2, uxtw]
    fc70:	add	x27, x14, w2, uxtw
    fc74:	ldr	w1, [x8]
    fc78:	cmp	w1, w0
    fc7c:	b.ne	fcf4 <ZSTD_compress@@Base+0x14a8>  // b.any
    fc80:	mov	w1, w21
    fc84:	mov	w2, #0x8                   	// #8
    fc88:	mov	x0, x25
    fc8c:	bl	f580 <ZSTD_compress@@Base+0xd34>
    fc90:	ldr	x1, [sp, #96]
    fc94:	lsl	x0, x0, #2
    fc98:	ldr	x3, [sp, #96]
    fc9c:	add	w2, w9, #0x1
    fca0:	ldr	w1, [x1, x0]
    fca4:	str	w2, [x3, x0]
    fca8:	cmp	w18, w1
    fcac:	b.cc	fd10 <ZSTD_compress@@Base+0x14c4>  // b.lo, b.ul, b.last
    fcb0:	mov	x2, x15
    fcb4:	add	x1, x27, #0x4
    fcb8:	add	x0, x8, #0x4
    fcbc:	bl	f60c <ZSTD_compress@@Base+0xdc0>
    fcc0:	add	x5, x0, #0x4
    fcc4:	sub	w24, w8, w27
    fcc8:	cmp	x20, x8
    fccc:	ccmp	x12, x27, #0x2, cc  // cc = lo, ul, last
    fcd0:	b.cs	fb70 <ZSTD_compress@@Base+0x1324>  // b.hs, b.nlast
    fcd4:	ldurb	w1, [x8, #-1]
    fcd8:	ldurb	w0, [x27, #-1]
    fcdc:	cmp	w1, w0
    fce0:	b.ne	fb70 <ZSTD_compress@@Base+0x1324>  // b.any
    fce4:	sub	x8, x8, #0x1
    fce8:	sub	x27, x27, #0x1
    fcec:	add	x5, x5, #0x1
    fcf0:	b	fcc8 <ZSTD_compress@@Base+0x147c>
    fcf4:	sub	x0, x8, x20
    fcf8:	mov	w24, w13
    fcfc:	asr	x0, x0, #8
    fd00:	add	x0, x0, #0x1
    fd04:	add	x8, x8, x0
    fd08:	mov	w13, w24
    fd0c:	b	f88c <ZSTD_compress@@Base+0x1040>
    fd10:	ldr	x0, [x14, w1, uxtw]
    fd14:	add	x26, x14, w1, uxtw
    fd18:	ldur	x2, [x8, #1]
    fd1c:	cmp	x2, x0
    fd20:	b.ne	fcb0 <ZSTD_compress@@Base+0x1464>  // b.any
    fd24:	add	x0, x8, #0x9
    fd28:	mov	x2, x15
    fd2c:	add	x1, x26, #0x8
    fd30:	bl	f60c <ZSTD_compress@@Base+0xdc0>
    fd34:	sub	w24, w25, w26
    fd38:	add	x5, x0, #0x8
    fd3c:	mov	x8, x25
    fd40:	cmp	x20, x8
    fd44:	ccmp	x12, x26, #0x2, cc  // cc = lo, ul, last
    fd48:	b.cs	fb70 <ZSTD_compress@@Base+0x1324>  // b.hs, b.nlast
    fd4c:	ldurb	w1, [x8, #-1]
    fd50:	ldurb	w0, [x26, #-1]
    fd54:	cmp	w1, w0
    fd58:	b.ne	fb70 <ZSTD_compress@@Base+0x1324>  // b.any
    fd5c:	sub	x8, x8, #0x1
    fd60:	sub	x26, x26, #0x1
    fd64:	add	x5, x5, #0x1
    fd68:	b	fd40 <ZSTD_compress@@Base+0x14f4>
    fd6c:	mov	x3, x11
    fd70:	mov	x2, x8
    fd74:	mov	x1, x20
    fd78:	bl	f500 <ZSTD_compress@@Base+0xcb4>
    fd7c:	b	fbdc <ZSTD_compress@@Base+0x1390>
    fd80:	sub	x1, x28, x1
    fd84:	mov	x2, x15
    fd88:	add	x1, x8, x1
    fd8c:	add	x0, x8, #0x4
    fd90:	bl	f60c <ZSTD_compress@@Base+0xdc0>
    fd94:	sub	x6, x8, x14
    fd98:	add	x5, x0, #0x4
    fd9c:	mov	x25, x0
    fda0:	mov	w2, w22
    fda4:	mov	w1, w23
    fda8:	mov	x0, x8
    fdac:	add	x25, x25, #0x1
    fdb0:	bl	f580 <ZSTD_compress@@Base+0xd34>
    fdb4:	ldr	x1, [sp, #112]
    fdb8:	mov	w2, #0x8                   	// #8
    fdbc:	str	w6, [x1, x0, lsl #2]
    fdc0:	mov	w1, w21
    fdc4:	mov	x0, x8
    fdc8:	bl	f580 <ZSTD_compress@@Base+0xd34>
    fdcc:	cmp	x11, x8
    fdd0:	ldr	x1, [sp, #96]
    fdd4:	str	w6, [x1, x0, lsl #2]
    fdd8:	ldr	x0, [x19, #24]
    fddc:	b.cc	fe40 <ZSTD_compress@@Base+0x15f4>  // b.lo, b.ul, b.last
    fde0:	ldp	x2, x3, [x8]
    fde4:	stp	x2, x3, [x0]
    fde8:	cmp	x25, x13
    fdec:	ldr	x0, [x19, #8]
    fdf0:	str	w9, [x0]
    fdf4:	strh	wzr, [x0, #4]
    fdf8:	b.ls	fe14 <ZSTD_compress@@Base+0x15c8>  // b.plast
    fdfc:	mov	w1, #0x2                   	// #2
    fe00:	str	w1, [x19, #72]
    fe04:	ldr	x1, [x19]
    fe08:	sub	x1, x0, x1
    fe0c:	asr	x1, x1, #3
    fe10:	str	w1, [x19, #76]
    fe14:	add	x0, x0, #0x8
    fe18:	sturh	w25, [x0, #-2]
    fe1c:	str	x0, [x19, #8]
    fe20:	add	x8, x8, x5
    fe24:	ldr	x0, [sp, #128]
    fe28:	cmp	x0, x8
    fe2c:	b.cc	fb04 <ZSTD_compress@@Base+0x12b8>  // b.lo, b.ul, b.last
    fe30:	mov	w0, w24
    fe34:	mov	w24, w26
    fe38:	mov	w26, w0
    fe3c:	b	fadc <ZSTD_compress@@Base+0x1290>
    fe40:	mov	x3, x11
    fe44:	mov	x2, x8
    fe48:	mov	x1, x8
    fe4c:	bl	f500 <ZSTD_compress@@Base+0xcb4>
    fe50:	b	fde8 <ZSTD_compress@@Base+0x159c>
    fe54:	mov	w2, w22
    fe58:	mov	w1, w23
    fe5c:	mov	x0, x20
    fe60:	bl	f580 <ZSTD_compress@@Base+0xd34>
    fe64:	lsl	x9, x0, #2
    fe68:	mov	w1, w21
    fe6c:	ldr	x0, [sp, #112]
    fe70:	mov	w2, #0x8                   	// #8
    fe74:	ldr	w8, [x0, x9]
    fe78:	ldr	x0, [sp, #120]
    fe7c:	cmp	w18, w8
    fe80:	str	w8, [sp, #168]
    fe84:	csel	x10, x0, x14, hi  // hi = pmore
    fe88:	mov	x0, x20
    fe8c:	bl	f580 <ZSTD_compress@@Base+0xd34>
    fe90:	lsl	x0, x0, #2
    fe94:	ldr	x1, [sp, #96]
    fe98:	sub	x27, x20, x14
    fe9c:	ldr	w8, [sp, #168]
    fea0:	ldr	w5, [x1, x0]
    fea4:	ldr	x1, [sp, #120]
    fea8:	cmp	w18, w5
    feac:	csel	x3, x1, x14, hi  // hi = pmore
    feb0:	ldr	w1, [sp, #160]
    feb4:	sub	w2, w1, w13
    feb8:	ldr	x1, [sp, #120]
    febc:	add	w2, w2, w27
    fec0:	cmp	w18, w2
    fec4:	csel	x4, x1, x14, hi  // hi = pmore
    fec8:	ldr	x1, [sp, #96]
    fecc:	str	w27, [x1, x0]
    fed0:	ldr	x0, [sp, #112]
    fed4:	str	w27, [x0, x9]
    fed8:	ldr	w0, [sp, #164]
    fedc:	sub	w0, w0, w2
    fee0:	cmp	w0, #0x2
    fee4:	ldr	w0, [sp, #108]
    fee8:	ccmp	w2, w0, #0x0, hi  // hi = pmore
    feec:	b.ls	101d8 <ZSTD_compress@@Base+0x198c>  // b.plast
    fef0:	ldr	w0, [x4, w2, uxtw]
    fef4:	add	x1, x4, w2, uxtw
    fef8:	ldur	w9, [x20, #1]
    fefc:	cmp	w9, w0
    ff00:	b.ne	101d8 <ZSTD_compress@@Base+0x198c>  // b.any
    ff04:	cmp	w18, w2
    ff08:	mov	x4, x24
    ff0c:	ldr	x0, [sp, #144]
    ff10:	mov	x2, x15
    ff14:	add	x1, x1, #0x4
    ff18:	csel	x3, x0, x15, hi  // hi = pmore
    ff1c:	add	x0, x20, #0x5
    ff20:	add	x20, x20, #0x1
    ff24:	bl	f6ec <ZSTD_compress@@Base+0xea0>
    ff28:	sub	x8, x20, x28
    ff2c:	add	x12, x0, #0x4
    ff30:	add	x5, x0, #0x1
    ff34:	cmp	x20, x25
    ff38:	ldr	x0, [x19, #24]
    ff3c:	b.hi	101c4 <ZSTD_compress@@Base+0x1978>  // b.pmore
    ff40:	ldp	x2, x3, [x28]
    ff44:	stp	x2, x3, [x0]
    ff48:	cmp	x8, #0x10
    ff4c:	b.ls	ff98 <ZSTD_compress@@Base+0x174c>  // b.plast
    ff50:	ldr	x2, [x19, #24]
    ff54:	ldp	x0, x1, [x28, #16]
    ff58:	add	x4, x2, x8
    ff5c:	stp	x0, x1, [x2, #16]
    ff60:	ldp	x0, x1, [x28, #32]
    ff64:	stp	x0, x1, [x2, #32]
    ff68:	add	x1, x2, #0x30
    ff6c:	cmp	x4, x1
    ff70:	b.ls	ff98 <ZSTD_compress@@Base+0x174c>  // b.plast
    ff74:	add	x28, x28, #0x30
    ff78:	ldp	x2, x3, [x28]
    ff7c:	stp	x2, x3, [x1]
    ff80:	add	x1, x1, #0x20
    ff84:	ldp	x2, x3, [x28, #16]
    ff88:	stp	x2, x3, [x1, #-16]
    ff8c:	add	x28, x28, #0x20
    ff90:	cmp	x4, x1
    ff94:	b.hi	ff78 <ZSTD_compress@@Base+0x172c>  // b.pmore
    ff98:	ldr	x0, [x19, #24]
    ff9c:	add	x0, x0, x8
    ffa0:	str	x0, [x19, #24]
    ffa4:	mov	x0, #0xffff                	// #65535
    ffa8:	cmp	x8, x0
    ffac:	ldr	x0, [x19, #8]
    ffb0:	b.ls	ffcc <ZSTD_compress@@Base+0x1780>  // b.plast
    ffb4:	ldr	w1, [sp, #160]
    ffb8:	str	w1, [x19, #72]
    ffbc:	ldr	x1, [x19]
    ffc0:	sub	x1, x0, x1
    ffc4:	asr	x1, x1, #3
    ffc8:	str	w1, [x19, #76]
    ffcc:	ldr	w1, [sp, #160]
    ffd0:	str	w1, [x0]
    ffd4:	strh	w8, [x0, #4]
    ffd8:	mov	x1, #0xffff                	// #65535
    ffdc:	cmp	x5, x1
    ffe0:	b.ls	fffc <ZSTD_compress@@Base+0x17b0>  // b.plast
    ffe4:	mov	w1, #0x2                   	// #2
    ffe8:	str	w1, [x19, #72]
    ffec:	ldr	x1, [x19]
    fff0:	sub	x1, x0, x1
    fff4:	asr	x1, x1, #3
    fff8:	str	w1, [x19, #76]
    fffc:	strh	w5, [x0, #6]
   10000:	mov	w5, w13
   10004:	mov	w13, w26
   10008:	add	x0, x0, #0x8
   1000c:	str	x0, [x19, #8]
   10010:	ldr	x0, [sp, #128]
   10014:	add	x20, x20, x12
   10018:	cmp	x0, x20
   1001c:	b.cc	101bc <ZSTD_compress@@Base+0x1970>  // b.lo, b.ul, b.last
   10020:	add	w8, w27, #0x2
   10024:	add	w27, w27, #0x2
   10028:	add	x27, x14, x27
   1002c:	mov	w1, w21
   10030:	mov	x0, x27
   10034:	mov	w2, #0x8                   	// #8
   10038:	str	w5, [sp, #168]
   1003c:	bl	f580 <ZSTD_compress@@Base+0xd34>
   10040:	ldr	x1, [sp, #96]
   10044:	mov	w2, #0x8                   	// #8
   10048:	mov	w28, #0x2                   	// #2
   1004c:	str	w8, [x1, x0, lsl #2]
   10050:	sub	x0, x20, #0x2
   10054:	sub	x9, x0, x14
   10058:	mov	w1, w21
   1005c:	bl	f580 <ZSTD_compress@@Base+0xd34>
   10060:	ldr	x1, [sp, #96]
   10064:	mov	w2, w22
   10068:	str	w9, [x1, x0, lsl #2]
   1006c:	mov	w1, w23
   10070:	mov	x0, x27
   10074:	mov	x27, #0xffff                	// #65535
   10078:	bl	f580 <ZSTD_compress@@Base+0xd34>
   1007c:	ldr	x1, [sp, #112]
   10080:	mov	w2, w22
   10084:	str	w8, [x1, x0, lsl #2]
   10088:	sub	x0, x20, #0x1
   1008c:	sub	x8, x0, x14
   10090:	mov	w1, w23
   10094:	bl	f580 <ZSTD_compress@@Base+0xd34>
   10098:	ldr	x1, [sp, #112]
   1009c:	ldr	w5, [sp, #168]
   100a0:	str	w8, [x1, x0, lsl #2]
   100a4:	ldr	x2, [sp, #120]
   100a8:	sub	x26, x20, x14
   100ac:	sub	w0, w26, w13
   100b0:	sub	w1, w26, w13
   100b4:	add	x2, x2, x1
   100b8:	cmp	w18, w0
   100bc:	add	x1, x14, x1
   100c0:	csel	x1, x1, x2, ls  // ls = plast
   100c4:	ldr	w2, [sp, #164]
   100c8:	add	w2, w2, w13
   100cc:	sub	w2, w2, w26
   100d0:	cmp	w2, #0x2
   100d4:	ldr	w2, [sp, #108]
   100d8:	ccmp	w0, w2, #0x0, hi  // hi = pmore
   100dc:	b.ls	101bc <ZSTD_compress@@Base+0x1970>  // b.plast
   100e0:	ldr	w2, [x1]
   100e4:	ldr	w3, [x20]
   100e8:	cmp	w3, w2
   100ec:	b.ne	101bc <ZSTD_compress@@Base+0x1970>  // b.any
   100f0:	cmp	w18, w0
   100f4:	mov	x4, x24
   100f8:	ldr	x0, [sp, #144]
   100fc:	mov	x2, x15
   10100:	add	x1, x1, #0x4
   10104:	str	w5, [sp, #168]
   10108:	csel	x3, x0, x15, hi  // hi = pmore
   1010c:	add	x0, x20, #0x4
   10110:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   10114:	add	x8, x0, #0x4
   10118:	add	x9, x0, #0x1
   1011c:	ldr	w5, [sp, #168]
   10120:	cmp	x20, x25
   10124:	ldr	x0, [x19, #24]
   10128:	b.hi	10598 <ZSTD_compress@@Base+0x1d4c>  // b.pmore
   1012c:	ldp	x2, x3, [x20]
   10130:	stp	x2, x3, [x0]
   10134:	ldr	w1, [sp, #160]
   10138:	ldr	x0, [x19, #8]
   1013c:	cmp	x9, x27
   10140:	str	w1, [x0]
   10144:	strh	wzr, [x0, #4]
   10148:	b.ls	1015c <ZSTD_compress@@Base+0x1910>  // b.plast
   1014c:	ldr	x1, [x19]
   10150:	sub	x1, x0, x1
   10154:	asr	x1, x1, #3
   10158:	stp	w28, w1, [x19, #72]
   1015c:	strh	w9, [x0, #6]
   10160:	add	x0, x0, #0x8
   10164:	str	x0, [x19, #8]
   10168:	mov	w2, w22
   1016c:	mov	w1, w23
   10170:	mov	x0, x20
   10174:	str	w5, [sp, #168]
   10178:	bl	f580 <ZSTD_compress@@Base+0xd34>
   1017c:	ldr	x1, [sp, #112]
   10180:	mov	w2, #0x8                   	// #8
   10184:	str	w26, [x1, x0, lsl #2]
   10188:	mov	w1, w21
   1018c:	mov	x0, x20
   10190:	bl	f580 <ZSTD_compress@@Base+0xd34>
   10194:	add	x20, x20, x8
   10198:	ldr	x1, [sp, #96]
   1019c:	ldr	w5, [sp, #168]
   101a0:	str	w26, [x1, x0, lsl #2]
   101a4:	ldr	x0, [sp, #128]
   101a8:	cmp	x0, x20
   101ac:	mov	w0, w5
   101b0:	mov	w5, w13
   101b4:	mov	w13, w0
   101b8:	b.cs	100a4 <ZSTD_compress@@Base+0x1858>  // b.hs, b.nlast
   101bc:	mov	x28, x20
   101c0:	b	1058c <ZSTD_compress@@Base+0x1d40>
   101c4:	mov	x3, x25
   101c8:	mov	x2, x20
   101cc:	mov	x1, x28
   101d0:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   101d4:	b	ff98 <ZSTD_compress@@Base+0x174c>
   101d8:	ldr	w0, [sp, #108]
   101dc:	cmp	w5, w0
   101e0:	b.ls	10364 <ZSTD_compress@@Base+0x1b18>  // b.plast
   101e4:	ldr	x0, [x3, w5, uxtw]
   101e8:	add	x9, x3, w5, uxtw
   101ec:	ldr	x1, [x20]
   101f0:	cmp	x1, x0
   101f4:	b.ne	10364 <ZSTD_compress@@Base+0x1b18>  // b.any
   101f8:	cmp	w18, w5
   101fc:	b.hi	10330 <ZSTD_compress@@Base+0x1ae4>  // b.pmore
   10200:	mov	x3, x15
   10204:	mov	x26, x24
   10208:	add	x1, x9, #0x8
   1020c:	mov	x4, x24
   10210:	mov	x2, x15
   10214:	add	x0, x20, #0x8
   10218:	str	x9, [sp, #168]
   1021c:	str	w5, [sp, #184]
   10220:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   10224:	ldr	w5, [sp, #184]
   10228:	add	x12, x0, #0x8
   1022c:	ldr	x9, [sp, #168]
   10230:	sub	w5, w27, w5
   10234:	cmp	x20, x28
   10238:	ccmp	x9, x26, #0x0, hi  // hi = pmore
   1023c:	b.ls	10250 <ZSTD_compress@@Base+0x1a04>  // b.plast
   10240:	ldurb	w1, [x20, #-1]
   10244:	ldurb	w0, [x9, #-1]
   10248:	cmp	w1, w0
   1024c:	b.eq	10338 <ZSTD_compress@@Base+0x1aec>  // b.none
   10250:	sub	x8, x20, x28
   10254:	sub	x9, x12, #0x3
   10258:	cmp	x20, x25
   1025c:	ldr	x0, [x19, #24]
   10260:	b.hi	10348 <ZSTD_compress@@Base+0x1afc>  // b.pmore
   10264:	ldp	x2, x3, [x28]
   10268:	stp	x2, x3, [x0]
   1026c:	cmp	x8, #0x10
   10270:	b.ls	102bc <ZSTD_compress@@Base+0x1a70>  // b.plast
   10274:	ldr	x2, [x19, #24]
   10278:	ldp	x0, x1, [x28, #16]
   1027c:	add	x4, x2, x8
   10280:	stp	x0, x1, [x2, #16]
   10284:	ldp	x0, x1, [x28, #32]
   10288:	stp	x0, x1, [x2, #32]
   1028c:	add	x1, x2, #0x30
   10290:	cmp	x4, x1
   10294:	b.ls	102bc <ZSTD_compress@@Base+0x1a70>  // b.plast
   10298:	add	x28, x28, #0x30
   1029c:	ldp	x2, x3, [x28]
   102a0:	stp	x2, x3, [x1]
   102a4:	add	x1, x1, #0x20
   102a8:	ldp	x2, x3, [x28, #16]
   102ac:	stp	x2, x3, [x1, #-16]
   102b0:	add	x28, x28, #0x20
   102b4:	cmp	x4, x1
   102b8:	b.hi	1029c <ZSTD_compress@@Base+0x1a50>  // b.pmore
   102bc:	ldr	x0, [x19, #24]
   102c0:	add	x0, x0, x8
   102c4:	str	x0, [x19, #24]
   102c8:	mov	x0, #0xffff                	// #65535
   102cc:	cmp	x8, x0
   102d0:	ldr	x0, [x19, #8]
   102d4:	b.ls	102f0 <ZSTD_compress@@Base+0x1aa4>  // b.plast
   102d8:	ldr	w1, [sp, #160]
   102dc:	str	w1, [x19, #72]
   102e0:	ldr	x1, [x19]
   102e4:	sub	x1, x0, x1
   102e8:	asr	x1, x1, #3
   102ec:	str	w1, [x19, #76]
   102f0:	add	w1, w5, #0x3
   102f4:	str	w1, [x0]
   102f8:	strh	w8, [x0, #4]
   102fc:	mov	x1, #0xffff                	// #65535
   10300:	cmp	x9, x1
   10304:	b.ls	10320 <ZSTD_compress@@Base+0x1ad4>  // b.plast
   10308:	mov	w1, #0x2                   	// #2
   1030c:	str	w1, [x19, #72]
   10310:	ldr	x1, [x19]
   10314:	sub	x1, x0, x1
   10318:	asr	x1, x1, #3
   1031c:	str	w1, [x19, #76]
   10320:	strh	w9, [x0, #6]
   10324:	add	x0, x0, #0x8
   10328:	str	x0, [x19, #8]
   1032c:	b	10010 <ZSTD_compress@@Base+0x17c4>
   10330:	ldp	x3, x26, [sp, #144]
   10334:	b	10208 <ZSTD_compress@@Base+0x19bc>
   10338:	sub	x20, x20, #0x1
   1033c:	sub	x9, x9, #0x1
   10340:	add	x12, x12, #0x1
   10344:	b	10234 <ZSTD_compress@@Base+0x19e8>
   10348:	mov	x3, x25
   1034c:	mov	x2, x20
   10350:	mov	x1, x28
   10354:	str	w5, [sp, #168]
   10358:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   1035c:	ldr	w5, [sp, #168]
   10360:	b	102bc <ZSTD_compress@@Base+0x1a70>
   10364:	ldr	w0, [sp, #108]
   10368:	cmp	w8, w0
   1036c:	b.ls	10574 <ZSTD_compress@@Base+0x1d28>  // b.plast
   10370:	ldr	w0, [x10, w8, uxtw]
   10374:	add	x9, x10, w8, uxtw
   10378:	ldr	w1, [x20]
   1037c:	cmp	w1, w0
   10380:	b.ne	10574 <ZSTD_compress@@Base+0x1d28>  // b.any
   10384:	add	x26, x20, #0x1
   10388:	mov	w1, w21
   1038c:	mov	w2, #0x8                   	// #8
   10390:	mov	x0, x26
   10394:	str	x9, [sp, #168]
   10398:	str	w8, [sp, #184]
   1039c:	bl	f580 <ZSTD_compress@@Base+0xd34>
   103a0:	ldr	x1, [sp, #96]
   103a4:	lsl	x0, x0, #2
   103a8:	ldr	x2, [sp, #96]
   103ac:	add	w11, w27, #0x1
   103b0:	ldr	w5, [x1, x0]
   103b4:	ldr	x1, [sp, #120]
   103b8:	str	w11, [x2, x0]
   103bc:	ldr	w0, [sp, #108]
   103c0:	cmp	w18, w5
   103c4:	csel	x1, x1, x14, hi  // hi = pmore
   103c8:	ldr	w8, [sp, #184]
   103cc:	cmp	w5, w0
   103d0:	ldr	x9, [sp, #168]
   103d4:	b.ls	104e8 <ZSTD_compress@@Base+0x1c9c>  // b.plast
   103d8:	ldr	x0, [x1, w5, uxtw]
   103dc:	add	x10, x1, w5, uxtw
   103e0:	ldur	x2, [x20, #1]
   103e4:	cmp	x2, x0
   103e8:	b.ne	104e8 <ZSTD_compress@@Base+0x1c9c>  // b.any
   103ec:	cmp	w18, w5
   103f0:	b.hi	104d0 <ZSTD_compress@@Base+0x1c84>  // b.pmore
   103f4:	mov	x3, x15
   103f8:	mov	x8, x24
   103fc:	add	x1, x10, #0x8
   10400:	add	x0, x20, #0x9
   10404:	mov	x4, x24
   10408:	mov	x2, x15
   1040c:	stp	x10, x8, [sp, #168]
   10410:	mov	x20, x26
   10414:	stp	w11, w5, [sp, #184]
   10418:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   1041c:	ldp	w11, w5, [sp, #184]
   10420:	add	x12, x0, #0x8
   10424:	ldp	x10, x8, [sp, #168]
   10428:	sub	w5, w11, w5
   1042c:	cmp	x20, x28
   10430:	ccmp	x10, x8, #0x0, hi  // hi = pmore
   10434:	b.ls	10448 <ZSTD_compress@@Base+0x1bfc>  // b.plast
   10438:	ldurb	w1, [x20, #-1]
   1043c:	ldurb	w0, [x10, #-1]
   10440:	cmp	w1, w0
   10444:	b.eq	104d8 <ZSTD_compress@@Base+0x1c8c>  // b.none
   10448:	sub	x8, x20, x28
   1044c:	sub	x9, x12, #0x3
   10450:	cmp	x20, x25
   10454:	ldr	x0, [x19, #24]
   10458:	b.hi	10558 <ZSTD_compress@@Base+0x1d0c>  // b.pmore
   1045c:	ldp	x2, x3, [x28]
   10460:	stp	x2, x3, [x0]
   10464:	cmp	x8, #0x10
   10468:	b.ls	104b4 <ZSTD_compress@@Base+0x1c68>  // b.plast
   1046c:	ldr	x2, [x19, #24]
   10470:	ldp	x0, x1, [x28, #16]
   10474:	add	x4, x2, x8
   10478:	stp	x0, x1, [x2, #16]
   1047c:	ldp	x0, x1, [x28, #32]
   10480:	stp	x0, x1, [x2, #32]
   10484:	add	x1, x2, #0x30
   10488:	cmp	x4, x1
   1048c:	b.ls	104b4 <ZSTD_compress@@Base+0x1c68>  // b.plast
   10490:	add	x28, x28, #0x30
   10494:	ldp	x2, x3, [x28]
   10498:	stp	x2, x3, [x1]
   1049c:	add	x1, x1, #0x20
   104a0:	ldp	x2, x3, [x28, #16]
   104a4:	stp	x2, x3, [x1, #-16]
   104a8:	add	x28, x28, #0x20
   104ac:	cmp	x4, x1
   104b0:	b.hi	10494 <ZSTD_compress@@Base+0x1c48>  // b.pmore
   104b4:	ldr	x0, [x19, #24]
   104b8:	mov	x1, #0xffff                	// #65535
   104bc:	cmp	x8, x1
   104c0:	add	x0, x0, x8
   104c4:	str	x0, [x19, #24]
   104c8:	ldr	x0, [x19, #8]
   104cc:	b	102d4 <ZSTD_compress@@Base+0x1a88>
   104d0:	ldp	x3, x8, [sp, #144]
   104d4:	b	103fc <ZSTD_compress@@Base+0x1bb0>
   104d8:	sub	x20, x20, #0x1
   104dc:	sub	x10, x10, #0x1
   104e0:	add	x12, x12, #0x1
   104e4:	b	1042c <ZSTD_compress@@Base+0x1be0>
   104e8:	cmp	w18, w8
   104ec:	b.hi	10550 <ZSTD_compress@@Base+0x1d04>  // b.pmore
   104f0:	mov	x3, x15
   104f4:	mov	x26, x24
   104f8:	add	x1, x9, #0x4
   104fc:	mov	x4, x24
   10500:	mov	x2, x15
   10504:	add	x0, x20, #0x4
   10508:	str	x9, [sp, #168]
   1050c:	str	w8, [sp, #184]
   10510:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   10514:	ldr	w8, [sp, #184]
   10518:	add	x12, x0, #0x4
   1051c:	ldr	x9, [sp, #168]
   10520:	sub	w5, w27, w8
   10524:	cmp	x20, x28
   10528:	ccmp	x9, x26, #0x0, hi  // hi = pmore
   1052c:	b.ls	10448 <ZSTD_compress@@Base+0x1bfc>  // b.plast
   10530:	ldurb	w1, [x20, #-1]
   10534:	ldurb	w0, [x9, #-1]
   10538:	cmp	w1, w0
   1053c:	b.ne	10448 <ZSTD_compress@@Base+0x1bfc>  // b.any
   10540:	sub	x20, x20, #0x1
   10544:	sub	x9, x9, #0x1
   10548:	add	x12, x12, #0x1
   1054c:	b	10524 <ZSTD_compress@@Base+0x1cd8>
   10550:	ldp	x3, x26, [sp, #144]
   10554:	b	104f8 <ZSTD_compress@@Base+0x1cac>
   10558:	mov	x3, x25
   1055c:	mov	x2, x20
   10560:	mov	x1, x28
   10564:	str	w5, [sp, #168]
   10568:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   1056c:	ldr	w5, [sp, #168]
   10570:	b	104b4 <ZSTD_compress@@Base+0x1c68>
   10574:	sub	x0, x20, x28
   10578:	mov	w5, w13
   1057c:	mov	w13, w26
   10580:	asr	x0, x0, #8
   10584:	add	x0, x0, #0x1
   10588:	add	x20, x20, x0
   1058c:	mov	w26, w13
   10590:	mov	w13, w5
   10594:	b	f82c <ZSTD_compress@@Base+0xfe0>
   10598:	mov	x3, x25
   1059c:	mov	x2, x20
   105a0:	mov	x1, x20
   105a4:	str	w5, [sp, #168]
   105a8:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   105ac:	ldr	w5, [sp, #168]
   105b0:	b	10134 <ZSTD_compress@@Base+0x18e8>
   105b4:	stp	x29, x30, [sp, #-32]!
   105b8:	mov	w9, w2
   105bc:	sub	x8, x1, #0x8
   105c0:	mov	x29, sp
   105c4:	ldr	x12, [x0, #8]
   105c8:	stp	x19, x20, [sp, #16]
   105cc:	ldr	w5, [x0, #36]
   105d0:	ldp	w20, w15, [x0, #188]
   105d4:	add	x5, x12, x5
   105d8:	ldr	w18, [x0, #200]
   105dc:	ldr	x11, [x0, #48]
   105e0:	ldr	x19, [x0, #64]
   105e4:	add	x0, x5, #0x2
   105e8:	cmp	x8, x0
   105ec:	b.cs	105fc <ZSTD_compress@@Base+0x1db0>  // b.hs, b.nlast
   105f0:	ldp	x19, x20, [sp, #16]
   105f4:	ldp	x29, x30, [sp], #32
   105f8:	ret
   105fc:	sub	w13, w5, w12
   10600:	mov	x6, #0x0                   	// #0
   10604:	add	x14, x5, x6
   10608:	mov	w1, w15
   1060c:	mov	x0, x14
   10610:	mov	w2, #0x8                   	// #8
   10614:	bl	f580 <ZSTD_compress@@Base+0xd34>
   10618:	mov	x7, x0
   1061c:	mov	w10, w6
   10620:	cbnz	x6, 10658 <ZSTD_compress@@Base+0x1e0c>
   10624:	mov	w2, w18
   10628:	mov	w1, w20
   1062c:	mov	x0, x14
   10630:	bl	f580 <ZSTD_compress@@Base+0xd34>
   10634:	str	w13, [x19, x0, lsl #2]
   10638:	add	w10, w13, w10
   1063c:	str	w10, [x11, x7, lsl #2]
   10640:	cbz	w9, 10650 <ZSTD_compress@@Base+0x1e04>
   10644:	add	x6, x6, #0x1
   10648:	cmp	x6, #0x3
   1064c:	b.ne	10604 <ZSTD_compress@@Base+0x1db8>  // b.any
   10650:	add	x5, x5, #0x3
   10654:	b	105e4 <ZSTD_compress@@Base+0x1d98>
   10658:	ldr	w0, [x11, x0, lsl #2]
   1065c:	cbz	w0, 10638 <ZSTD_compress@@Base+0x1dec>
   10660:	b	10640 <ZSTD_compress@@Base+0x1df4>
   10664:	stp	x29, x30, [sp, #-112]!
   10668:	mov	x7, x3
   1066c:	add	x13, x3, x4
   10670:	mov	x29, sp
   10674:	ldr	x12, [x0, #8]
   10678:	stp	x19, x20, [sp, #16]
   1067c:	ldr	w15, [x0, #24]
   10680:	ldr	w3, [x0, #200]
   10684:	mov	x8, x1
   10688:	ldp	w20, w18, [x0, #188]
   1068c:	stp	x21, x22, [sp, #32]
   10690:	mov	x21, x2
   10694:	ldr	x14, [x0, #48]
   10698:	stp	x23, x24, [sp, #48]
   1069c:	mov	w1, #0x1                   	// #1
   106a0:	ldr	x19, [x0, #64]
   106a4:	stp	x25, x26, [sp, #64]
   106a8:	ldr	w0, [x0, #184]
   106ac:	ldp	w9, w11, [x2]
   106b0:	sub	x2, x7, x12
   106b4:	stp	x27, x28, [sp, #80]
   106b8:	add	w2, w2, w4
   106bc:	cmp	w3, #0x6
   106c0:	sub	w5, w2, w15
   106c4:	lsl	w1, w1, w0
   106c8:	b.eq	112a4 <ZSTD_compress@@Base+0x2a58>  // b.none
   106cc:	cmp	w3, #0x7
   106d0:	b.eq	11848 <ZSTD_compress@@Base+0x2ffc>  // b.none
   106d4:	cmp	w3, #0x5
   106d8:	b.eq	10ce8 <ZSTD_compress@@Base+0x249c>  // b.none
   106dc:	cmp	w5, w1
   106e0:	b.ls	106e8 <ZSTD_compress@@Base+0x1e9c>  // b.plast
   106e4:	sub	w15, w2, w1
   106e8:	add	x26, x12, w15, uxtw
   106ec:	sub	x0, x13, #0x8
   106f0:	cmp	w7, w26
   106f4:	str	x0, [sp, #96]
   106f8:	cinc	x10, x7, eq  // eq = none
   106fc:	sub	x24, x13, #0x20
   10700:	sub	x0, x10, x26
   10704:	cmp	w11, w0
   10708:	csel	w23, w11, wzr, hi  // hi = pmore
   1070c:	csel	w11, w11, wzr, ls  // ls = plast
   10710:	cmp	w9, w0
   10714:	csel	w23, w23, w9, ls  // ls = plast
   10718:	csel	w9, w9, wzr, ls  // ls = plast
   1071c:	ldr	x0, [sp, #96]
   10720:	cmp	x0, x10
   10724:	b.hi	1075c <ZSTD_compress@@Base+0x1f10>  // b.pmore
   10728:	cmp	w9, #0x0
   1072c:	csel	w9, w9, w23, ne  // ne = any
   10730:	cmp	w11, #0x0
   10734:	csel	w23, w23, w11, eq  // eq = none
   10738:	stp	w9, w23, [x21]
   1073c:	sub	x0, x13, x7
   10740:	ldp	x19, x20, [sp, #16]
   10744:	ldp	x21, x22, [sp, #32]
   10748:	ldp	x23, x24, [sp, #48]
   1074c:	ldp	x25, x26, [sp, #64]
   10750:	ldp	x27, x28, [sp, #80]
   10754:	ldp	x29, x30, [sp], #112
   10758:	ret
   1075c:	mov	w1, w18
   10760:	mov	w2, #0x8                   	// #8
   10764:	mov	x0, x10
   10768:	bl	f580 <ZSTD_compress@@Base+0xd34>
   1076c:	mov	x27, x10
   10770:	mov	w2, #0x79b1                	// #31153
   10774:	movk	w2, #0x9e37, lsl #16
   10778:	mov	w25, #0x20                  	// #32
   1077c:	sub	w25, w25, w20
   10780:	lsl	x0, x0, #2
   10784:	ldr	w1, [x27], #1
   10788:	sub	x22, x10, x12
   1078c:	cmp	w9, #0x0
   10790:	ldr	w4, [x14, x0]
   10794:	mul	w1, w1, w2
   10798:	lsr	w1, w1, w25
   1079c:	lsl	x1, x1, #2
   107a0:	ldr	w2, [x19, x1]
   107a4:	str	w22, [x19, x1]
   107a8:	mov	w1, w9
   107ac:	str	w22, [x14, x0]
   107b0:	sub	x0, x10, w9, uxtw
   107b4:	ldur	w3, [x0, #1]
   107b8:	ldur	w0, [x10, #1]
   107bc:	ccmp	w3, w0, #0x0, ne  // ne = any
   107c0:	b.ne	10994 <ZSTD_compress@@Base+0x2148>  // b.any
   107c4:	sub	x1, x10, x1
   107c8:	add	x0, x10, #0x5
   107cc:	mov	x2, x13
   107d0:	add	x1, x1, #0x5
   107d4:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   107d8:	add	x5, x0, #0x4
   107dc:	add	x10, x0, #0x1
   107e0:	sub	x28, x27, x7
   107e4:	cmp	x27, x24
   107e8:	ldr	x0, [x8, #24]
   107ec:	b.hi	10980 <ZSTD_compress@@Base+0x2134>  // b.pmore
   107f0:	ldp	x2, x3, [x7]
   107f4:	stp	x2, x3, [x0]
   107f8:	cmp	x28, #0x10
   107fc:	b.ls	10848 <ZSTD_compress@@Base+0x1ffc>  // b.plast
   10800:	ldr	x2, [x8, #24]
   10804:	ldp	x0, x1, [x7, #16]
   10808:	add	x16, x2, x28
   1080c:	stp	x0, x1, [x2, #16]
   10810:	ldp	x0, x1, [x7, #32]
   10814:	stp	x0, x1, [x2, #32]
   10818:	add	x1, x2, #0x30
   1081c:	cmp	x16, x1
   10820:	b.ls	10848 <ZSTD_compress@@Base+0x1ffc>  // b.plast
   10824:	add	x7, x7, #0x30
   10828:	ldp	x2, x3, [x7]
   1082c:	stp	x2, x3, [x1]
   10830:	add	x1, x1, #0x20
   10834:	ldp	x2, x3, [x7, #16]
   10838:	stp	x2, x3, [x1, #-16]
   1083c:	add	x7, x7, #0x20
   10840:	cmp	x16, x1
   10844:	b.hi	10828 <ZSTD_compress@@Base+0x1fdc>  // b.pmore
   10848:	ldr	x0, [x8, #24]
   1084c:	mov	x1, #0xffff                	// #65535
   10850:	cmp	x28, x1
   10854:	add	x0, x0, x28
   10858:	str	x0, [x8, #24]
   1085c:	ldr	x0, [x8, #8]
   10860:	b.ls	1087c <ZSTD_compress@@Base+0x2030>  // b.plast
   10864:	mov	w1, #0x1                   	// #1
   10868:	str	w1, [x8, #72]
   1086c:	ldr	x1, [x8]
   10870:	sub	x1, x0, x1
   10874:	asr	x1, x1, #3
   10878:	str	w1, [x8, #76]
   1087c:	mov	w1, #0x1                   	// #1
   10880:	str	w1, [x0]
   10884:	strh	w28, [x0, #4]
   10888:	mov	x1, #0xffff                	// #65535
   1088c:	cmp	x10, x1
   10890:	b.ls	108ac <ZSTD_compress@@Base+0x2060>  // b.plast
   10894:	mov	w1, #0x2                   	// #2
   10898:	str	w1, [x8, #72]
   1089c:	ldr	x1, [x8]
   108a0:	sub	x1, x0, x1
   108a4:	asr	x1, x1, #3
   108a8:	str	w1, [x8, #76]
   108ac:	mov	w28, w9
   108b0:	strh	w10, [x0, #6]
   108b4:	mov	x10, x27
   108b8:	add	x0, x0, #0x8
   108bc:	str	x0, [x8, #8]
   108c0:	ldr	x0, [sp, #96]
   108c4:	add	x10, x10, x5
   108c8:	cmp	x0, x10
   108cc:	b.cc	10978 <ZSTD_compress@@Base+0x212c>  // b.lo, b.ul, b.last
   108d0:	add	w5, w22, #0x2
   108d4:	add	w22, w22, #0x2
   108d8:	mov	w1, w18
   108dc:	add	x0, x12, x22
   108e0:	mov	w2, #0x8                   	// #8
   108e4:	bl	f580 <ZSTD_compress@@Base+0xd34>
   108e8:	str	w5, [x14, x0, lsl #2]
   108ec:	sub	x0, x10, #0x2
   108f0:	mov	w1, w18
   108f4:	sub	x6, x0, x12
   108f8:	mov	w2, #0x8                   	// #8
   108fc:	bl	f580 <ZSTD_compress@@Base+0xd34>
   10900:	str	w6, [x14, x0, lsl #2]
   10904:	mov	w1, #0x79b1                	// #31153
   10908:	mov	w2, #0x79b1                	// #31153
   1090c:	ldr	w0, [x12, x22]
   10910:	movk	w1, #0x9e37, lsl #16
   10914:	movk	w2, #0x9e37, lsl #16
   10918:	mov	x9, #0x4                   	// #4
   1091c:	mov	w22, #0x1                   	// #1
   10920:	mul	w0, w0, w1
   10924:	mov	x1, x10
   10928:	lsr	w0, w0, w25
   1092c:	str	w5, [x19, x0, lsl #2]
   10930:	ldr	w0, [x1, #-1]!
   10934:	sub	x1, x1, x12
   10938:	mul	w0, w0, w2
   1093c:	lsr	w0, w0, w25
   10940:	str	w1, [x19, x0, lsl #2]
   10944:	mov	w0, w28
   10948:	mov	w28, w11
   1094c:	mov	w11, w0
   10950:	sub	x0, x10, w28, uxtw
   10954:	ldr	w7, [x10]
   10958:	cmp	w28, #0x0
   1095c:	mov	w1, w28
   10960:	ldr	w0, [x0]
   10964:	ccmp	w0, w7, #0x0, ne  // ne = any
   10968:	b.eq	10c0c <ZSTD_compress@@Base+0x23c0>  // b.none
   1096c:	mov	w0, w28
   10970:	mov	w28, w11
   10974:	mov	w11, w0
   10978:	mov	x7, x10
   1097c:	b	10b8c <ZSTD_compress@@Base+0x2340>
   10980:	mov	x3, x24
   10984:	mov	x2, x27
   10988:	mov	x1, x7
   1098c:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   10990:	b	10848 <ZSTD_compress@@Base+0x1ffc>
   10994:	cmp	w15, w4
   10998:	b.cs	10ae0 <ZSTD_compress@@Base+0x2294>  // b.hs, b.nlast
   1099c:	ldr	x0, [x12, w4, uxtw]
   109a0:	add	x3, x12, w4, uxtw
   109a4:	ldr	x1, [x10]
   109a8:	cmp	x1, x0
   109ac:	b.ne	10ae0 <ZSTD_compress@@Base+0x2294>  // b.any
   109b0:	add	x1, x3, #0x8
   109b4:	mov	x2, x13
   109b8:	add	x0, x10, #0x8
   109bc:	str	x3, [sp, #104]
   109c0:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   109c4:	add	x5, x0, #0x8
   109c8:	ldr	x3, [sp, #104]
   109cc:	sub	w28, w10, w3
   109d0:	cmp	x7, x10
   109d4:	ccmp	x26, x3, #0x2, cc  // cc = lo, ul, last
   109d8:	b.cs	109ec <ZSTD_compress@@Base+0x21a0>  // b.hs, b.nlast
   109dc:	ldurb	w1, [x10, #-1]
   109e0:	ldurb	w0, [x3, #-1]
   109e4:	cmp	w1, w0
   109e8:	b.eq	10ad0 <ZSTD_compress@@Base+0x2284>  // b.none
   109ec:	sub	x11, x10, x7
   109f0:	sub	x6, x5, #0x3
   109f4:	cmp	x10, x24
   109f8:	ldr	x0, [x8, #24]
   109fc:	b.hi	10bf0 <ZSTD_compress@@Base+0x23a4>  // b.pmore
   10a00:	ldp	x2, x3, [x7]
   10a04:	stp	x2, x3, [x0]
   10a08:	cmp	x11, #0x10
   10a0c:	b.ls	10a58 <ZSTD_compress@@Base+0x220c>  // b.plast
   10a10:	ldr	x2, [x8, #24]
   10a14:	ldp	x0, x1, [x7, #16]
   10a18:	add	x16, x2, x11
   10a1c:	stp	x0, x1, [x2, #16]
   10a20:	ldp	x0, x1, [x7, #32]
   10a24:	stp	x0, x1, [x2, #32]
   10a28:	add	x1, x2, #0x30
   10a2c:	cmp	x16, x1
   10a30:	b.ls	10a58 <ZSTD_compress@@Base+0x220c>  // b.plast
   10a34:	add	x7, x7, #0x30
   10a38:	ldp	x2, x3, [x7]
   10a3c:	stp	x2, x3, [x1]
   10a40:	add	x1, x1, #0x20
   10a44:	ldp	x2, x3, [x7, #16]
   10a48:	stp	x2, x3, [x1, #-16]
   10a4c:	add	x7, x7, #0x20
   10a50:	cmp	x16, x1
   10a54:	b.hi	10a38 <ZSTD_compress@@Base+0x21ec>  // b.pmore
   10a58:	ldr	x0, [x8, #24]
   10a5c:	mov	x1, #0xffff                	// #65535
   10a60:	cmp	x11, x1
   10a64:	add	x0, x0, x11
   10a68:	str	x0, [x8, #24]
   10a6c:	ldr	x0, [x8, #8]
   10a70:	b.ls	10a8c <ZSTD_compress@@Base+0x2240>  // b.plast
   10a74:	mov	w1, #0x1                   	// #1
   10a78:	str	w1, [x8, #72]
   10a7c:	ldr	x1, [x8]
   10a80:	sub	x1, x0, x1
   10a84:	asr	x1, x1, #3
   10a88:	str	w1, [x8, #76]
   10a8c:	add	w1, w28, #0x3
   10a90:	str	w1, [x0]
   10a94:	strh	w11, [x0, #4]
   10a98:	mov	x1, #0xffff                	// #65535
   10a9c:	cmp	x6, x1
   10aa0:	b.ls	10abc <ZSTD_compress@@Base+0x2270>  // b.plast
   10aa4:	mov	w1, #0x2                   	// #2
   10aa8:	str	w1, [x8, #72]
   10aac:	ldr	x1, [x8]
   10ab0:	sub	x1, x0, x1
   10ab4:	asr	x1, x1, #3
   10ab8:	str	w1, [x8, #76]
   10abc:	strh	w6, [x0, #6]
   10ac0:	mov	w11, w9
   10ac4:	add	x0, x0, #0x8
   10ac8:	str	x0, [x8, #8]
   10acc:	b	108c0 <ZSTD_compress@@Base+0x2074>
   10ad0:	sub	x10, x10, #0x1
   10ad4:	sub	x3, x3, #0x1
   10ad8:	add	x5, x5, #0x1
   10adc:	b	109d0 <ZSTD_compress@@Base+0x2184>
   10ae0:	cmp	w15, w2
   10ae4:	b.cs	10b78 <ZSTD_compress@@Base+0x232c>  // b.hs, b.nlast
   10ae8:	ldr	w0, [x12, w2, uxtw]
   10aec:	add	x3, x12, w2, uxtw
   10af0:	ldr	w1, [x10]
   10af4:	cmp	w1, w0
   10af8:	b.ne	10b78 <ZSTD_compress@@Base+0x232c>  // b.any
   10afc:	mov	w1, w18
   10b00:	mov	w2, #0x8                   	// #8
   10b04:	mov	x0, x27
   10b08:	str	x3, [sp, #104]
   10b0c:	bl	f580 <ZSTD_compress@@Base+0xd34>
   10b10:	lsl	x0, x0, #2
   10b14:	add	w2, w22, #0x1
   10b18:	ldr	x3, [sp, #104]
   10b1c:	ldr	w1, [x14, x0]
   10b20:	str	w2, [x14, x0]
   10b24:	cmp	w15, w1
   10b28:	b.cc	10b94 <ZSTD_compress@@Base+0x2348>  // b.lo, b.ul, b.last
   10b2c:	add	x1, x3, #0x4
   10b30:	mov	x2, x13
   10b34:	add	x0, x10, #0x4
   10b38:	str	x3, [sp, #104]
   10b3c:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   10b40:	add	x5, x0, #0x4
   10b44:	ldr	x3, [sp, #104]
   10b48:	sub	w28, w10, w3
   10b4c:	cmp	x7, x10
   10b50:	ccmp	x26, x3, #0x2, cc  // cc = lo, ul, last
   10b54:	b.cs	109ec <ZSTD_compress@@Base+0x21a0>  // b.hs, b.nlast
   10b58:	ldurb	w1, [x10, #-1]
   10b5c:	ldurb	w0, [x3, #-1]
   10b60:	cmp	w1, w0
   10b64:	b.ne	109ec <ZSTD_compress@@Base+0x21a0>  // b.any
   10b68:	sub	x10, x10, #0x1
   10b6c:	sub	x3, x3, #0x1
   10b70:	add	x5, x5, #0x1
   10b74:	b	10b4c <ZSTD_compress@@Base+0x2300>
   10b78:	sub	x0, x10, x7
   10b7c:	mov	w28, w9
   10b80:	asr	x0, x0, #8
   10b84:	add	x0, x0, #0x1
   10b88:	add	x10, x10, x0
   10b8c:	mov	w9, w28
   10b90:	b	1071c <ZSTD_compress@@Base+0x1ed0>
   10b94:	ldr	x0, [x12, w1, uxtw]
   10b98:	add	x11, x12, w1, uxtw
   10b9c:	ldur	x2, [x10, #1]
   10ba0:	cmp	x2, x0
   10ba4:	b.ne	10b2c <ZSTD_compress@@Base+0x22e0>  // b.any
   10ba8:	add	x0, x10, #0x9
   10bac:	mov	x2, x13
   10bb0:	add	x1, x11, #0x8
   10bb4:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   10bb8:	mov	x10, x27
   10bbc:	add	x5, x0, #0x8
   10bc0:	sub	w28, w27, w11
   10bc4:	cmp	x7, x10
   10bc8:	ccmp	x26, x11, #0x2, cc  // cc = lo, ul, last
   10bcc:	b.cs	109ec <ZSTD_compress@@Base+0x21a0>  // b.hs, b.nlast
   10bd0:	ldurb	w1, [x10, #-1]
   10bd4:	ldurb	w0, [x11, #-1]
   10bd8:	cmp	w1, w0
   10bdc:	b.ne	109ec <ZSTD_compress@@Base+0x21a0>  // b.any
   10be0:	sub	x10, x10, #0x1
   10be4:	sub	x11, x11, #0x1
   10be8:	add	x5, x5, #0x1
   10bec:	b	10bc4 <ZSTD_compress@@Base+0x2378>
   10bf0:	mov	x3, x24
   10bf4:	mov	x2, x10
   10bf8:	mov	x1, x7
   10bfc:	str	x6, [sp, #104]
   10c00:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   10c04:	ldr	x6, [sp, #104]
   10c08:	b	10a58 <ZSTD_compress@@Base+0x220c>
   10c0c:	sub	x1, x9, x1
   10c10:	mov	x2, x13
   10c14:	add	x1, x10, x1
   10c18:	add	x0, x10, #0x4
   10c1c:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   10c20:	mov	x6, x0
   10c24:	add	x5, x0, #0x4
   10c28:	mov	w0, #0x79b1                	// #31153
   10c2c:	movk	w0, #0x9e37, lsl #16
   10c30:	sub	x1, x10, x12
   10c34:	mov	w2, #0x8                   	// #8
   10c38:	mul	w0, w7, w0
   10c3c:	mov	x7, x1
   10c40:	lsr	w0, w0, w25
   10c44:	str	w1, [x19, x0, lsl #2]
   10c48:	mov	w1, w18
   10c4c:	mov	x0, x10
   10c50:	bl	f580 <ZSTD_compress@@Base+0xd34>
   10c54:	str	w7, [x14, x0, lsl #2]
   10c58:	add	x6, x6, #0x1
   10c5c:	cmp	x24, x10
   10c60:	ldr	x0, [x8, #24]
   10c64:	b.cc	10ccc <ZSTD_compress@@Base+0x2480>  // b.lo, b.ul, b.last
   10c68:	ldp	x2, x3, [x10]
   10c6c:	stp	x2, x3, [x0]
   10c70:	mov	x1, #0xffff                	// #65535
   10c74:	ldr	x0, [x8, #8]
   10c78:	cmp	x6, x1
   10c7c:	str	w22, [x0]
   10c80:	strh	wzr, [x0, #4]
   10c84:	b.ls	10ca0 <ZSTD_compress@@Base+0x2454>  // b.plast
   10c88:	mov	w1, #0x2                   	// #2
   10c8c:	str	w1, [x8, #72]
   10c90:	ldr	x1, [x8]
   10c94:	sub	x1, x0, x1
   10c98:	asr	x1, x1, #3
   10c9c:	str	w1, [x8, #76]
   10ca0:	add	x0, x0, #0x8
   10ca4:	sturh	w6, [x0, #-2]
   10ca8:	str	x0, [x8, #8]
   10cac:	add	x10, x10, x5
   10cb0:	ldr	x0, [sp, #96]
   10cb4:	cmp	x0, x10
   10cb8:	b.cc	10978 <ZSTD_compress@@Base+0x212c>  // b.lo, b.ul, b.last
   10cbc:	mov	w0, w28
   10cc0:	mov	w28, w11
   10cc4:	mov	w11, w0
   10cc8:	b	10950 <ZSTD_compress@@Base+0x2104>
   10ccc:	mov	x3, x24
   10cd0:	mov	x2, x10
   10cd4:	mov	x1, x10
   10cd8:	str	x6, [sp, #104]
   10cdc:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   10ce0:	ldr	x6, [sp, #104]
   10ce4:	b	10c70 <ZSTD_compress@@Base+0x2424>
   10ce8:	cmp	w5, w1
   10cec:	b.ls	10cf4 <ZSTD_compress@@Base+0x24a8>  // b.plast
   10cf0:	sub	w15, w2, w1
   10cf4:	add	x24, x12, w15, uxtw
   10cf8:	sub	x25, x13, #0x8
   10cfc:	cmp	w7, w24
   10d00:	sub	x23, x13, #0x20
   10d04:	cinc	x28, x7, eq  // eq = none
   10d08:	sub	x0, x28, x24
   10d0c:	cmp	w11, w0
   10d10:	csel	w22, w11, wzr, hi  // hi = pmore
   10d14:	csel	w11, w11, wzr, ls  // ls = plast
   10d18:	cmp	w9, w0
   10d1c:	csel	w22, w22, w9, ls  // ls = plast
   10d20:	csel	w9, w9, wzr, ls  // ls = plast
   10d24:	cmp	x25, x28
   10d28:	b.hi	10d44 <ZSTD_compress@@Base+0x24f8>  // b.pmore
   10d2c:	cmp	w9, #0x0
   10d30:	csel	w9, w9, w22, ne  // ne = any
   10d34:	cmp	w11, #0x0
   10d38:	csel	w22, w22, w11, eq  // eq = none
   10d3c:	stp	w9, w22, [x21]
   10d40:	b	1073c <ZSTD_compress@@Base+0x1ef0>
   10d44:	mov	w1, w18
   10d48:	mov	w2, #0x8                   	// #8
   10d4c:	mov	x0, x28
   10d50:	bl	f580 <ZSTD_compress@@Base+0xd34>
   10d54:	mov	x5, x0
   10d58:	mov	w1, w20
   10d5c:	mov	w2, #0x5                   	// #5
   10d60:	mov	x0, x28
   10d64:	add	x27, x28, #0x1
   10d68:	bl	f580 <ZSTD_compress@@Base+0xd34>
   10d6c:	lsl	x1, x5, #2
   10d70:	lsl	x0, x0, #2
   10d74:	sub	x10, x28, x12
   10d78:	cmp	w9, #0x0
   10d7c:	ldr	w4, [x14, x1]
   10d80:	ldr	w2, [x19, x0]
   10d84:	str	w10, [x19, x0]
   10d88:	sub	x0, x28, w9, uxtw
   10d8c:	str	w10, [x14, x1]
   10d90:	mov	w1, w9
   10d94:	ldur	w3, [x0, #1]
   10d98:	ldur	w0, [x28, #1]
   10d9c:	ccmp	w3, w0, #0x0, ne  // ne = any
   10da0:	b.ne	10f64 <ZSTD_compress@@Base+0x2718>  // b.any
   10da4:	sub	x1, x28, x1
   10da8:	add	x0, x28, #0x5
   10dac:	mov	x2, x13
   10db0:	add	x1, x1, #0x5
   10db4:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   10db8:	add	x5, x0, #0x4
   10dbc:	add	x28, x0, #0x1
   10dc0:	sub	x26, x27, x7
   10dc4:	cmp	x27, x23
   10dc8:	ldr	x0, [x8, #24]
   10dcc:	b.hi	10f50 <ZSTD_compress@@Base+0x2704>  // b.pmore
   10dd0:	ldp	x2, x3, [x7]
   10dd4:	stp	x2, x3, [x0]
   10dd8:	cmp	x26, #0x10
   10ddc:	b.ls	10e28 <ZSTD_compress@@Base+0x25dc>  // b.plast
   10de0:	ldr	x2, [x8, #24]
   10de4:	ldp	x0, x1, [x7, #16]
   10de8:	add	x6, x2, x26
   10dec:	stp	x0, x1, [x2, #16]
   10df0:	ldp	x0, x1, [x7, #32]
   10df4:	stp	x0, x1, [x2, #32]
   10df8:	add	x1, x2, #0x30
   10dfc:	cmp	x6, x1
   10e00:	b.ls	10e28 <ZSTD_compress@@Base+0x25dc>  // b.plast
   10e04:	add	x7, x7, #0x30
   10e08:	ldp	x2, x3, [x7]
   10e0c:	stp	x2, x3, [x1]
   10e10:	add	x1, x1, #0x20
   10e14:	ldp	x2, x3, [x7, #16]
   10e18:	stp	x2, x3, [x1, #-16]
   10e1c:	add	x7, x7, #0x20
   10e20:	cmp	x6, x1
   10e24:	b.hi	10e08 <ZSTD_compress@@Base+0x25bc>  // b.pmore
   10e28:	ldr	x0, [x8, #24]
   10e2c:	mov	x1, #0xffff                	// #65535
   10e30:	cmp	x26, x1
   10e34:	add	x0, x0, x26
   10e38:	str	x0, [x8, #24]
   10e3c:	ldr	x0, [x8, #8]
   10e40:	b.ls	10e5c <ZSTD_compress@@Base+0x2610>  // b.plast
   10e44:	mov	w1, #0x1                   	// #1
   10e48:	str	w1, [x8, #72]
   10e4c:	ldr	x1, [x8]
   10e50:	sub	x1, x0, x1
   10e54:	asr	x1, x1, #3
   10e58:	str	w1, [x8, #76]
   10e5c:	mov	w1, #0x1                   	// #1
   10e60:	str	w1, [x0]
   10e64:	strh	w26, [x0, #4]
   10e68:	mov	x1, #0xffff                	// #65535
   10e6c:	cmp	x28, x1
   10e70:	b.ls	10e8c <ZSTD_compress@@Base+0x2640>  // b.plast
   10e74:	mov	w1, #0x2                   	// #2
   10e78:	str	w1, [x8, #72]
   10e7c:	ldr	x1, [x8]
   10e80:	sub	x1, x0, x1
   10e84:	asr	x1, x1, #3
   10e88:	str	w1, [x8, #76]
   10e8c:	mov	w26, w9
   10e90:	strh	w28, [x0, #6]
   10e94:	mov	x28, x27
   10e98:	add	x0, x0, #0x8
   10e9c:	str	x0, [x8, #8]
   10ea0:	add	x28, x28, x5
   10ea4:	cmp	x25, x28
   10ea8:	b.cc	10f48 <ZSTD_compress@@Base+0x26fc>  // b.lo, b.ul, b.last
   10eac:	add	w5, w10, #0x2
   10eb0:	add	w10, w10, #0x2
   10eb4:	add	x10, x12, x10
   10eb8:	mov	w1, w18
   10ebc:	mov	x0, x10
   10ec0:	mov	w2, #0x8                   	// #8
   10ec4:	bl	f580 <ZSTD_compress@@Base+0xd34>
   10ec8:	str	w5, [x14, x0, lsl #2]
   10ecc:	sub	x0, x28, #0x2
   10ed0:	mov	w1, w18
   10ed4:	sub	x6, x0, x12
   10ed8:	mov	w2, #0x8                   	// #8
   10edc:	bl	f580 <ZSTD_compress@@Base+0xd34>
   10ee0:	str	w6, [x14, x0, lsl #2]
   10ee4:	mov	w1, w20
   10ee8:	mov	x0, x10
   10eec:	mov	w2, #0x5                   	// #5
   10ef0:	bl	f580 <ZSTD_compress@@Base+0xd34>
   10ef4:	str	w5, [x19, x0, lsl #2]
   10ef8:	sub	x0, x28, #0x1
   10efc:	sub	x5, x0, x12
   10f00:	mov	w1, w20
   10f04:	mov	w2, #0x5                   	// #5
   10f08:	bl	f580 <ZSTD_compress@@Base+0xd34>
   10f0c:	str	w5, [x19, x0, lsl #2]
   10f10:	mov	w0, w26
   10f14:	mov	w26, w11
   10f18:	mov	w11, w0
   10f1c:	mov	w9, #0x1                   	// #1
   10f20:	sub	x0, x28, w26, uxtw
   10f24:	cmp	w26, #0x0
   10f28:	mov	w1, w26
   10f2c:	ldr	w2, [x0]
   10f30:	ldr	w0, [x28]
   10f34:	ccmp	w2, w0, #0x0, ne  // ne = any
   10f38:	b.eq	111d4 <ZSTD_compress@@Base+0x2988>  // b.none
   10f3c:	mov	w0, w26
   10f40:	mov	w26, w11
   10f44:	mov	w11, w0
   10f48:	mov	x7, x28
   10f4c:	b	1115c <ZSTD_compress@@Base+0x2910>
   10f50:	mov	x3, x23
   10f54:	mov	x2, x27
   10f58:	mov	x1, x7
   10f5c:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   10f60:	b	10e28 <ZSTD_compress@@Base+0x25dc>
   10f64:	cmp	w15, w4
   10f68:	b.cs	110b0 <ZSTD_compress@@Base+0x2864>  // b.hs, b.nlast
   10f6c:	ldr	x0, [x12, w4, uxtw]
   10f70:	add	x3, x12, w4, uxtw
   10f74:	ldr	x1, [x28]
   10f78:	cmp	x1, x0
   10f7c:	b.ne	110b0 <ZSTD_compress@@Base+0x2864>  // b.any
   10f80:	add	x1, x3, #0x8
   10f84:	mov	x2, x13
   10f88:	add	x0, x28, #0x8
   10f8c:	str	x3, [sp, #96]
   10f90:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   10f94:	add	x5, x0, #0x8
   10f98:	ldr	x3, [sp, #96]
   10f9c:	sub	w26, w28, w3
   10fa0:	cmp	x7, x28
   10fa4:	ccmp	x24, x3, #0x2, cc  // cc = lo, ul, last
   10fa8:	b.cs	10fbc <ZSTD_compress@@Base+0x2770>  // b.hs, b.nlast
   10fac:	ldurb	w1, [x28, #-1]
   10fb0:	ldurb	w0, [x3, #-1]
   10fb4:	cmp	w1, w0
   10fb8:	b.eq	110a0 <ZSTD_compress@@Base+0x2854>  // b.none
   10fbc:	sub	x11, x28, x7
   10fc0:	sub	x27, x5, #0x3
   10fc4:	cmp	x28, x23
   10fc8:	ldr	x0, [x8, #24]
   10fcc:	b.hi	111c0 <ZSTD_compress@@Base+0x2974>  // b.pmore
   10fd0:	ldp	x2, x3, [x7]
   10fd4:	stp	x2, x3, [x0]
   10fd8:	cmp	x11, #0x10
   10fdc:	b.ls	11028 <ZSTD_compress@@Base+0x27dc>  // b.plast
   10fe0:	ldr	x2, [x8, #24]
   10fe4:	ldp	x0, x1, [x7, #16]
   10fe8:	add	x6, x2, x11
   10fec:	stp	x0, x1, [x2, #16]
   10ff0:	ldp	x0, x1, [x7, #32]
   10ff4:	stp	x0, x1, [x2, #32]
   10ff8:	add	x1, x2, #0x30
   10ffc:	cmp	x6, x1
   11000:	b.ls	11028 <ZSTD_compress@@Base+0x27dc>  // b.plast
   11004:	add	x7, x7, #0x30
   11008:	ldp	x2, x3, [x7]
   1100c:	stp	x2, x3, [x1]
   11010:	add	x1, x1, #0x20
   11014:	ldp	x2, x3, [x7, #16]
   11018:	stp	x2, x3, [x1, #-16]
   1101c:	add	x7, x7, #0x20
   11020:	cmp	x6, x1
   11024:	b.hi	11008 <ZSTD_compress@@Base+0x27bc>  // b.pmore
   11028:	ldr	x0, [x8, #24]
   1102c:	mov	x1, #0xffff                	// #65535
   11030:	cmp	x11, x1
   11034:	add	x0, x0, x11
   11038:	str	x0, [x8, #24]
   1103c:	ldr	x0, [x8, #8]
   11040:	b.ls	1105c <ZSTD_compress@@Base+0x2810>  // b.plast
   11044:	mov	w1, #0x1                   	// #1
   11048:	str	w1, [x8, #72]
   1104c:	ldr	x1, [x8]
   11050:	sub	x1, x0, x1
   11054:	asr	x1, x1, #3
   11058:	str	w1, [x8, #76]
   1105c:	add	w1, w26, #0x3
   11060:	str	w1, [x0]
   11064:	strh	w11, [x0, #4]
   11068:	mov	x1, #0xffff                	// #65535
   1106c:	cmp	x27, x1
   11070:	b.ls	1108c <ZSTD_compress@@Base+0x2840>  // b.plast
   11074:	mov	w1, #0x2                   	// #2
   11078:	str	w1, [x8, #72]
   1107c:	ldr	x1, [x8]
   11080:	sub	x1, x0, x1
   11084:	asr	x1, x1, #3
   11088:	str	w1, [x8, #76]
   1108c:	strh	w27, [x0, #6]
   11090:	mov	w11, w9
   11094:	add	x0, x0, #0x8
   11098:	str	x0, [x8, #8]
   1109c:	b	10ea0 <ZSTD_compress@@Base+0x2654>
   110a0:	sub	x28, x28, #0x1
   110a4:	sub	x3, x3, #0x1
   110a8:	add	x5, x5, #0x1
   110ac:	b	10fa0 <ZSTD_compress@@Base+0x2754>
   110b0:	cmp	w15, w2
   110b4:	b.cs	11148 <ZSTD_compress@@Base+0x28fc>  // b.hs, b.nlast
   110b8:	ldr	w0, [x12, w2, uxtw]
   110bc:	add	x3, x12, w2, uxtw
   110c0:	ldr	w1, [x28]
   110c4:	cmp	w1, w0
   110c8:	b.ne	11148 <ZSTD_compress@@Base+0x28fc>  // b.any
   110cc:	mov	w1, w18
   110d0:	mov	w2, #0x8                   	// #8
   110d4:	mov	x0, x27
   110d8:	str	x3, [sp, #96]
   110dc:	bl	f580 <ZSTD_compress@@Base+0xd34>
   110e0:	lsl	x0, x0, #2
   110e4:	add	w2, w10, #0x1
   110e8:	ldr	x3, [sp, #96]
   110ec:	ldr	w1, [x14, x0]
   110f0:	str	w2, [x14, x0]
   110f4:	cmp	w15, w1
   110f8:	b.cc	11164 <ZSTD_compress@@Base+0x2918>  // b.lo, b.ul, b.last
   110fc:	add	x1, x3, #0x4
   11100:	mov	x2, x13
   11104:	add	x0, x28, #0x4
   11108:	str	x3, [sp, #96]
   1110c:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   11110:	add	x5, x0, #0x4
   11114:	ldr	x3, [sp, #96]
   11118:	sub	w26, w28, w3
   1111c:	cmp	x7, x28
   11120:	ccmp	x24, x3, #0x2, cc  // cc = lo, ul, last
   11124:	b.cs	10fbc <ZSTD_compress@@Base+0x2770>  // b.hs, b.nlast
   11128:	ldurb	w1, [x28, #-1]
   1112c:	ldurb	w0, [x3, #-1]
   11130:	cmp	w1, w0
   11134:	b.ne	10fbc <ZSTD_compress@@Base+0x2770>  // b.any
   11138:	sub	x28, x28, #0x1
   1113c:	sub	x3, x3, #0x1
   11140:	add	x5, x5, #0x1
   11144:	b	1111c <ZSTD_compress@@Base+0x28d0>
   11148:	sub	x0, x28, x7
   1114c:	mov	w26, w9
   11150:	asr	x0, x0, #8
   11154:	add	x0, x0, #0x1
   11158:	add	x28, x28, x0
   1115c:	mov	w9, w26
   11160:	b	10d24 <ZSTD_compress@@Base+0x24d8>
   11164:	ldr	x0, [x12, w1, uxtw]
   11168:	add	x11, x12, w1, uxtw
   1116c:	ldur	x2, [x28, #1]
   11170:	cmp	x2, x0
   11174:	b.ne	110fc <ZSTD_compress@@Base+0x28b0>  // b.any
   11178:	add	x0, x28, #0x9
   1117c:	mov	x2, x13
   11180:	add	x1, x11, #0x8
   11184:	mov	x28, x27
   11188:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   1118c:	add	x5, x0, #0x8
   11190:	sub	w26, w27, w11
   11194:	cmp	x7, x28
   11198:	ccmp	x24, x11, #0x2, cc  // cc = lo, ul, last
   1119c:	b.cs	10fbc <ZSTD_compress@@Base+0x2770>  // b.hs, b.nlast
   111a0:	ldurb	w1, [x28, #-1]
   111a4:	ldurb	w0, [x11, #-1]
   111a8:	cmp	w1, w0
   111ac:	b.ne	10fbc <ZSTD_compress@@Base+0x2770>  // b.any
   111b0:	sub	x28, x28, #0x1
   111b4:	sub	x11, x11, #0x1
   111b8:	add	x5, x5, #0x1
   111bc:	b	11194 <ZSTD_compress@@Base+0x2948>
   111c0:	mov	x3, x23
   111c4:	mov	x2, x28
   111c8:	mov	x1, x7
   111cc:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   111d0:	b	11028 <ZSTD_compress@@Base+0x27dc>
   111d4:	mov	x0, #0x4                   	// #4
   111d8:	sub	x1, x0, x1
   111dc:	mov	x2, x13
   111e0:	add	x1, x28, x1
   111e4:	add	x0, x28, x0
   111e8:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   111ec:	mov	x10, x0
   111f0:	sub	x6, x28, x12
   111f4:	add	x5, x0, #0x4
   111f8:	mov	w1, w20
   111fc:	mov	w2, #0x5                   	// #5
   11200:	mov	x0, x28
   11204:	bl	f580 <ZSTD_compress@@Base+0xd34>
   11208:	str	w6, [x19, x0, lsl #2]
   1120c:	mov	w1, w18
   11210:	mov	x0, x28
   11214:	mov	w2, #0x8                   	// #8
   11218:	bl	f580 <ZSTD_compress@@Base+0xd34>
   1121c:	str	w6, [x14, x0, lsl #2]
   11220:	add	x10, x10, #0x1
   11224:	cmp	x23, x28
   11228:	ldr	x0, [x8, #24]
   1122c:	b.cc	11290 <ZSTD_compress@@Base+0x2a44>  // b.lo, b.ul, b.last
   11230:	ldp	x2, x3, [x28]
   11234:	stp	x2, x3, [x0]
   11238:	mov	x1, #0xffff                	// #65535
   1123c:	ldr	x0, [x8, #8]
   11240:	cmp	x10, x1
   11244:	str	w9, [x0]
   11248:	strh	wzr, [x0, #4]
   1124c:	b.ls	11268 <ZSTD_compress@@Base+0x2a1c>  // b.plast
   11250:	mov	w1, #0x2                   	// #2
   11254:	str	w1, [x8, #72]
   11258:	ldr	x1, [x8]
   1125c:	sub	x1, x0, x1
   11260:	asr	x1, x1, #3
   11264:	str	w1, [x8, #76]
   11268:	strh	w10, [x0, #6]
   1126c:	add	x0, x0, #0x8
   11270:	str	x0, [x8, #8]
   11274:	add	x28, x28, x5
   11278:	cmp	x25, x28
   1127c:	b.cc	10f48 <ZSTD_compress@@Base+0x26fc>  // b.lo, b.ul, b.last
   11280:	mov	w0, w26
   11284:	mov	w26, w11
   11288:	mov	w11, w0
   1128c:	b	10f20 <ZSTD_compress@@Base+0x26d4>
   11290:	mov	x3, x23
   11294:	mov	x2, x28
   11298:	mov	x1, x28
   1129c:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   112a0:	b	11238 <ZSTD_compress@@Base+0x29ec>
   112a4:	cmp	w5, w1
   112a8:	b.ls	112b0 <ZSTD_compress@@Base+0x2a64>  // b.plast
   112ac:	sub	w15, w2, w1
   112b0:	add	x24, x12, w15, uxtw
   112b4:	sub	x25, x13, #0x8
   112b8:	cmp	w7, w24
   112bc:	sub	x23, x13, #0x20
   112c0:	cinc	x28, x7, eq  // eq = none
   112c4:	sub	x0, x28, x24
   112c8:	cmp	w11, w0
   112cc:	csel	w22, w11, wzr, hi  // hi = pmore
   112d0:	csel	w11, w11, wzr, ls  // ls = plast
   112d4:	cmp	w9, w0
   112d8:	csel	w22, w22, w9, ls  // ls = plast
   112dc:	csel	w9, w9, wzr, ls  // ls = plast
   112e0:	cmp	x25, x28
   112e4:	b.ls	10d2c <ZSTD_compress@@Base+0x24e0>  // b.plast
   112e8:	mov	w1, w18
   112ec:	mov	w2, #0x8                   	// #8
   112f0:	mov	x0, x28
   112f4:	bl	f580 <ZSTD_compress@@Base+0xd34>
   112f8:	mov	x5, x0
   112fc:	mov	w1, w20
   11300:	mov	w2, #0x6                   	// #6
   11304:	mov	x0, x28
   11308:	add	x27, x28, #0x1
   1130c:	bl	f580 <ZSTD_compress@@Base+0xd34>
   11310:	lsl	x1, x5, #2
   11314:	lsl	x0, x0, #2
   11318:	sub	x10, x28, x12
   1131c:	cmp	w9, #0x0
   11320:	ldr	w4, [x14, x1]
   11324:	ldr	w2, [x19, x0]
   11328:	str	w10, [x19, x0]
   1132c:	sub	x0, x28, w9, uxtw
   11330:	str	w10, [x14, x1]
   11334:	mov	w1, w9
   11338:	ldur	w3, [x0, #1]
   1133c:	ldur	w0, [x28, #1]
   11340:	ccmp	w3, w0, #0x0, ne  // ne = any
   11344:	b.ne	11508 <ZSTD_compress@@Base+0x2cbc>  // b.any
   11348:	sub	x1, x28, x1
   1134c:	add	x0, x28, #0x5
   11350:	mov	x2, x13
   11354:	add	x1, x1, #0x5
   11358:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   1135c:	add	x5, x0, #0x4
   11360:	add	x28, x0, #0x1
   11364:	sub	x26, x27, x7
   11368:	cmp	x27, x23
   1136c:	ldr	x0, [x8, #24]
   11370:	b.hi	114f4 <ZSTD_compress@@Base+0x2ca8>  // b.pmore
   11374:	ldp	x2, x3, [x7]
   11378:	stp	x2, x3, [x0]
   1137c:	cmp	x26, #0x10
   11380:	b.ls	113cc <ZSTD_compress@@Base+0x2b80>  // b.plast
   11384:	ldr	x2, [x8, #24]
   11388:	ldp	x0, x1, [x7, #16]
   1138c:	add	x6, x2, x26
   11390:	stp	x0, x1, [x2, #16]
   11394:	ldp	x0, x1, [x7, #32]
   11398:	stp	x0, x1, [x2, #32]
   1139c:	add	x1, x2, #0x30
   113a0:	cmp	x6, x1
   113a4:	b.ls	113cc <ZSTD_compress@@Base+0x2b80>  // b.plast
   113a8:	add	x7, x7, #0x30
   113ac:	ldp	x2, x3, [x7]
   113b0:	stp	x2, x3, [x1]
   113b4:	add	x1, x1, #0x20
   113b8:	ldp	x2, x3, [x7, #16]
   113bc:	stp	x2, x3, [x1, #-16]
   113c0:	add	x7, x7, #0x20
   113c4:	cmp	x6, x1
   113c8:	b.hi	113ac <ZSTD_compress@@Base+0x2b60>  // b.pmore
   113cc:	ldr	x0, [x8, #24]
   113d0:	mov	x1, #0xffff                	// #65535
   113d4:	cmp	x26, x1
   113d8:	add	x0, x0, x26
   113dc:	str	x0, [x8, #24]
   113e0:	ldr	x0, [x8, #8]
   113e4:	b.ls	11400 <ZSTD_compress@@Base+0x2bb4>  // b.plast
   113e8:	mov	w1, #0x1                   	// #1
   113ec:	str	w1, [x8, #72]
   113f0:	ldr	x1, [x8]
   113f4:	sub	x1, x0, x1
   113f8:	asr	x1, x1, #3
   113fc:	str	w1, [x8, #76]
   11400:	mov	w1, #0x1                   	// #1
   11404:	str	w1, [x0]
   11408:	strh	w26, [x0, #4]
   1140c:	mov	x1, #0xffff                	// #65535
   11410:	cmp	x28, x1
   11414:	b.ls	11430 <ZSTD_compress@@Base+0x2be4>  // b.plast
   11418:	mov	w1, #0x2                   	// #2
   1141c:	str	w1, [x8, #72]
   11420:	ldr	x1, [x8]
   11424:	sub	x1, x0, x1
   11428:	asr	x1, x1, #3
   1142c:	str	w1, [x8, #76]
   11430:	mov	w26, w9
   11434:	strh	w28, [x0, #6]
   11438:	mov	x28, x27
   1143c:	add	x0, x0, #0x8
   11440:	str	x0, [x8, #8]
   11444:	add	x28, x28, x5
   11448:	cmp	x25, x28
   1144c:	b.cc	114ec <ZSTD_compress@@Base+0x2ca0>  // b.lo, b.ul, b.last
   11450:	add	w5, w10, #0x2
   11454:	add	w10, w10, #0x2
   11458:	add	x10, x12, x10
   1145c:	mov	w1, w18
   11460:	mov	x0, x10
   11464:	mov	w2, #0x8                   	// #8
   11468:	bl	f580 <ZSTD_compress@@Base+0xd34>
   1146c:	str	w5, [x14, x0, lsl #2]
   11470:	sub	x0, x28, #0x2
   11474:	mov	w1, w18
   11478:	sub	x6, x0, x12
   1147c:	mov	w2, #0x8                   	// #8
   11480:	bl	f580 <ZSTD_compress@@Base+0xd34>
   11484:	str	w6, [x14, x0, lsl #2]
   11488:	mov	w1, w20
   1148c:	mov	x0, x10
   11490:	mov	w2, #0x6                   	// #6
   11494:	bl	f580 <ZSTD_compress@@Base+0xd34>
   11498:	str	w5, [x19, x0, lsl #2]
   1149c:	sub	x0, x28, #0x1
   114a0:	sub	x5, x0, x12
   114a4:	mov	w1, w20
   114a8:	mov	w2, #0x6                   	// #6
   114ac:	bl	f580 <ZSTD_compress@@Base+0xd34>
   114b0:	str	w5, [x19, x0, lsl #2]
   114b4:	mov	w0, w26
   114b8:	mov	w26, w11
   114bc:	mov	w11, w0
   114c0:	mov	w9, #0x1                   	// #1
   114c4:	sub	x0, x28, w26, uxtw
   114c8:	cmp	w26, #0x0
   114cc:	mov	w1, w26
   114d0:	ldr	w2, [x0]
   114d4:	ldr	w0, [x28]
   114d8:	ccmp	w2, w0, #0x0, ne  // ne = any
   114dc:	b.eq	11778 <ZSTD_compress@@Base+0x2f2c>  // b.none
   114e0:	mov	w0, w26
   114e4:	mov	w26, w11
   114e8:	mov	w11, w0
   114ec:	mov	x7, x28
   114f0:	b	11700 <ZSTD_compress@@Base+0x2eb4>
   114f4:	mov	x3, x23
   114f8:	mov	x2, x27
   114fc:	mov	x1, x7
   11500:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   11504:	b	113cc <ZSTD_compress@@Base+0x2b80>
   11508:	cmp	w15, w4
   1150c:	b.cs	11654 <ZSTD_compress@@Base+0x2e08>  // b.hs, b.nlast
   11510:	ldr	x0, [x12, w4, uxtw]
   11514:	add	x3, x12, w4, uxtw
   11518:	ldr	x1, [x28]
   1151c:	cmp	x1, x0
   11520:	b.ne	11654 <ZSTD_compress@@Base+0x2e08>  // b.any
   11524:	add	x1, x3, #0x8
   11528:	mov	x2, x13
   1152c:	add	x0, x28, #0x8
   11530:	str	x3, [sp, #96]
   11534:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   11538:	add	x5, x0, #0x8
   1153c:	ldr	x3, [sp, #96]
   11540:	sub	w26, w28, w3
   11544:	cmp	x7, x28
   11548:	ccmp	x24, x3, #0x2, cc  // cc = lo, ul, last
   1154c:	b.cs	11560 <ZSTD_compress@@Base+0x2d14>  // b.hs, b.nlast
   11550:	ldurb	w1, [x28, #-1]
   11554:	ldurb	w0, [x3, #-1]
   11558:	cmp	w1, w0
   1155c:	b.eq	11644 <ZSTD_compress@@Base+0x2df8>  // b.none
   11560:	sub	x11, x28, x7
   11564:	sub	x27, x5, #0x3
   11568:	cmp	x28, x23
   1156c:	ldr	x0, [x8, #24]
   11570:	b.hi	11764 <ZSTD_compress@@Base+0x2f18>  // b.pmore
   11574:	ldp	x2, x3, [x7]
   11578:	stp	x2, x3, [x0]
   1157c:	cmp	x11, #0x10
   11580:	b.ls	115cc <ZSTD_compress@@Base+0x2d80>  // b.plast
   11584:	ldr	x2, [x8, #24]
   11588:	ldp	x0, x1, [x7, #16]
   1158c:	add	x6, x2, x11
   11590:	stp	x0, x1, [x2, #16]
   11594:	ldp	x0, x1, [x7, #32]
   11598:	stp	x0, x1, [x2, #32]
   1159c:	add	x1, x2, #0x30
   115a0:	cmp	x6, x1
   115a4:	b.ls	115cc <ZSTD_compress@@Base+0x2d80>  // b.plast
   115a8:	add	x7, x7, #0x30
   115ac:	ldp	x2, x3, [x7]
   115b0:	stp	x2, x3, [x1]
   115b4:	add	x1, x1, #0x20
   115b8:	ldp	x2, x3, [x7, #16]
   115bc:	stp	x2, x3, [x1, #-16]
   115c0:	add	x7, x7, #0x20
   115c4:	cmp	x6, x1
   115c8:	b.hi	115ac <ZSTD_compress@@Base+0x2d60>  // b.pmore
   115cc:	ldr	x0, [x8, #24]
   115d0:	mov	x1, #0xffff                	// #65535
   115d4:	cmp	x11, x1
   115d8:	add	x0, x0, x11
   115dc:	str	x0, [x8, #24]
   115e0:	ldr	x0, [x8, #8]
   115e4:	b.ls	11600 <ZSTD_compress@@Base+0x2db4>  // b.plast
   115e8:	mov	w1, #0x1                   	// #1
   115ec:	str	w1, [x8, #72]
   115f0:	ldr	x1, [x8]
   115f4:	sub	x1, x0, x1
   115f8:	asr	x1, x1, #3
   115fc:	str	w1, [x8, #76]
   11600:	add	w1, w26, #0x3
   11604:	str	w1, [x0]
   11608:	strh	w11, [x0, #4]
   1160c:	mov	x1, #0xffff                	// #65535
   11610:	cmp	x27, x1
   11614:	b.ls	11630 <ZSTD_compress@@Base+0x2de4>  // b.plast
   11618:	mov	w1, #0x2                   	// #2
   1161c:	str	w1, [x8, #72]
   11620:	ldr	x1, [x8]
   11624:	sub	x1, x0, x1
   11628:	asr	x1, x1, #3
   1162c:	str	w1, [x8, #76]
   11630:	strh	w27, [x0, #6]
   11634:	mov	w11, w9
   11638:	add	x0, x0, #0x8
   1163c:	str	x0, [x8, #8]
   11640:	b	11444 <ZSTD_compress@@Base+0x2bf8>
   11644:	sub	x28, x28, #0x1
   11648:	sub	x3, x3, #0x1
   1164c:	add	x5, x5, #0x1
   11650:	b	11544 <ZSTD_compress@@Base+0x2cf8>
   11654:	cmp	w15, w2
   11658:	b.cs	116ec <ZSTD_compress@@Base+0x2ea0>  // b.hs, b.nlast
   1165c:	ldr	w0, [x12, w2, uxtw]
   11660:	add	x3, x12, w2, uxtw
   11664:	ldr	w1, [x28]
   11668:	cmp	w1, w0
   1166c:	b.ne	116ec <ZSTD_compress@@Base+0x2ea0>  // b.any
   11670:	mov	w1, w18
   11674:	mov	w2, #0x8                   	// #8
   11678:	mov	x0, x27
   1167c:	str	x3, [sp, #96]
   11680:	bl	f580 <ZSTD_compress@@Base+0xd34>
   11684:	lsl	x0, x0, #2
   11688:	add	w2, w10, #0x1
   1168c:	ldr	x3, [sp, #96]
   11690:	ldr	w1, [x14, x0]
   11694:	str	w2, [x14, x0]
   11698:	cmp	w15, w1
   1169c:	b.cc	11708 <ZSTD_compress@@Base+0x2ebc>  // b.lo, b.ul, b.last
   116a0:	add	x1, x3, #0x4
   116a4:	mov	x2, x13
   116a8:	add	x0, x28, #0x4
   116ac:	str	x3, [sp, #96]
   116b0:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   116b4:	add	x5, x0, #0x4
   116b8:	ldr	x3, [sp, #96]
   116bc:	sub	w26, w28, w3
   116c0:	cmp	x7, x28
   116c4:	ccmp	x24, x3, #0x2, cc  // cc = lo, ul, last
   116c8:	b.cs	11560 <ZSTD_compress@@Base+0x2d14>  // b.hs, b.nlast
   116cc:	ldurb	w1, [x28, #-1]
   116d0:	ldurb	w0, [x3, #-1]
   116d4:	cmp	w1, w0
   116d8:	b.ne	11560 <ZSTD_compress@@Base+0x2d14>  // b.any
   116dc:	sub	x28, x28, #0x1
   116e0:	sub	x3, x3, #0x1
   116e4:	add	x5, x5, #0x1
   116e8:	b	116c0 <ZSTD_compress@@Base+0x2e74>
   116ec:	sub	x0, x28, x7
   116f0:	mov	w26, w9
   116f4:	asr	x0, x0, #8
   116f8:	add	x0, x0, #0x1
   116fc:	add	x28, x28, x0
   11700:	mov	w9, w26
   11704:	b	112e0 <ZSTD_compress@@Base+0x2a94>
   11708:	ldr	x0, [x12, w1, uxtw]
   1170c:	add	x11, x12, w1, uxtw
   11710:	ldur	x2, [x28, #1]
   11714:	cmp	x2, x0
   11718:	b.ne	116a0 <ZSTD_compress@@Base+0x2e54>  // b.any
   1171c:	add	x0, x28, #0x9
   11720:	mov	x2, x13
   11724:	add	x1, x11, #0x8
   11728:	mov	x28, x27
   1172c:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   11730:	add	x5, x0, #0x8
   11734:	sub	w26, w27, w11
   11738:	cmp	x7, x28
   1173c:	ccmp	x24, x11, #0x2, cc  // cc = lo, ul, last
   11740:	b.cs	11560 <ZSTD_compress@@Base+0x2d14>  // b.hs, b.nlast
   11744:	ldurb	w1, [x28, #-1]
   11748:	ldurb	w0, [x11, #-1]
   1174c:	cmp	w1, w0
   11750:	b.ne	11560 <ZSTD_compress@@Base+0x2d14>  // b.any
   11754:	sub	x28, x28, #0x1
   11758:	sub	x11, x11, #0x1
   1175c:	add	x5, x5, #0x1
   11760:	b	11738 <ZSTD_compress@@Base+0x2eec>
   11764:	mov	x3, x23
   11768:	mov	x2, x28
   1176c:	mov	x1, x7
   11770:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   11774:	b	115cc <ZSTD_compress@@Base+0x2d80>
   11778:	mov	x0, #0x4                   	// #4
   1177c:	sub	x1, x0, x1
   11780:	mov	x2, x13
   11784:	add	x1, x28, x1
   11788:	add	x0, x28, x0
   1178c:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   11790:	mov	x10, x0
   11794:	sub	x6, x28, x12
   11798:	add	x5, x0, #0x4
   1179c:	mov	w1, w20
   117a0:	mov	w2, #0x6                   	// #6
   117a4:	mov	x0, x28
   117a8:	bl	f580 <ZSTD_compress@@Base+0xd34>
   117ac:	str	w6, [x19, x0, lsl #2]
   117b0:	mov	w1, w18
   117b4:	mov	x0, x28
   117b8:	mov	w2, #0x8                   	// #8
   117bc:	bl	f580 <ZSTD_compress@@Base+0xd34>
   117c0:	str	w6, [x14, x0, lsl #2]
   117c4:	add	x10, x10, #0x1
   117c8:	cmp	x23, x28
   117cc:	ldr	x0, [x8, #24]
   117d0:	b.cc	11834 <ZSTD_compress@@Base+0x2fe8>  // b.lo, b.ul, b.last
   117d4:	ldp	x2, x3, [x28]
   117d8:	stp	x2, x3, [x0]
   117dc:	mov	x1, #0xffff                	// #65535
   117e0:	ldr	x0, [x8, #8]
   117e4:	cmp	x10, x1
   117e8:	str	w9, [x0]
   117ec:	strh	wzr, [x0, #4]
   117f0:	b.ls	1180c <ZSTD_compress@@Base+0x2fc0>  // b.plast
   117f4:	mov	w1, #0x2                   	// #2
   117f8:	str	w1, [x8, #72]
   117fc:	ldr	x1, [x8]
   11800:	sub	x1, x0, x1
   11804:	asr	x1, x1, #3
   11808:	str	w1, [x8, #76]
   1180c:	strh	w10, [x0, #6]
   11810:	add	x0, x0, #0x8
   11814:	str	x0, [x8, #8]
   11818:	add	x28, x28, x5
   1181c:	cmp	x25, x28
   11820:	b.cc	114ec <ZSTD_compress@@Base+0x2ca0>  // b.lo, b.ul, b.last
   11824:	mov	w0, w26
   11828:	mov	w26, w11
   1182c:	mov	w11, w0
   11830:	b	114c4 <ZSTD_compress@@Base+0x2c78>
   11834:	mov	x3, x23
   11838:	mov	x2, x28
   1183c:	mov	x1, x28
   11840:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   11844:	b	117dc <ZSTD_compress@@Base+0x2f90>
   11848:	cmp	w5, w1
   1184c:	b.ls	11854 <ZSTD_compress@@Base+0x3008>  // b.plast
   11850:	sub	w15, w2, w1
   11854:	add	x24, x12, w15, uxtw
   11858:	sub	x25, x13, #0x8
   1185c:	cmp	w7, w24
   11860:	sub	x23, x13, #0x20
   11864:	cinc	x28, x7, eq  // eq = none
   11868:	sub	x0, x28, x24
   1186c:	cmp	w11, w0
   11870:	csel	w22, w11, wzr, hi  // hi = pmore
   11874:	csel	w11, w11, wzr, ls  // ls = plast
   11878:	cmp	w9, w0
   1187c:	csel	w22, w22, w9, ls  // ls = plast
   11880:	csel	w9, w9, wzr, ls  // ls = plast
   11884:	cmp	x25, x28
   11888:	b.ls	10d2c <ZSTD_compress@@Base+0x24e0>  // b.plast
   1188c:	mov	w1, w18
   11890:	mov	w2, #0x8                   	// #8
   11894:	mov	x0, x28
   11898:	bl	f580 <ZSTD_compress@@Base+0xd34>
   1189c:	mov	x5, x0
   118a0:	mov	w1, w20
   118a4:	mov	w2, #0x7                   	// #7
   118a8:	mov	x0, x28
   118ac:	add	x27, x28, #0x1
   118b0:	bl	f580 <ZSTD_compress@@Base+0xd34>
   118b4:	lsl	x1, x5, #2
   118b8:	lsl	x0, x0, #2
   118bc:	sub	x10, x28, x12
   118c0:	cmp	w9, #0x0
   118c4:	ldr	w4, [x14, x1]
   118c8:	ldr	w2, [x19, x0]
   118cc:	str	w10, [x19, x0]
   118d0:	sub	x0, x28, w9, uxtw
   118d4:	str	w10, [x14, x1]
   118d8:	mov	w1, w9
   118dc:	ldur	w3, [x0, #1]
   118e0:	ldur	w0, [x28, #1]
   118e4:	ccmp	w3, w0, #0x0, ne  // ne = any
   118e8:	b.ne	11aac <ZSTD_compress@@Base+0x3260>  // b.any
   118ec:	sub	x1, x28, x1
   118f0:	add	x0, x28, #0x5
   118f4:	mov	x2, x13
   118f8:	add	x1, x1, #0x5
   118fc:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   11900:	add	x5, x0, #0x4
   11904:	add	x28, x0, #0x1
   11908:	sub	x26, x27, x7
   1190c:	cmp	x27, x23
   11910:	ldr	x0, [x8, #24]
   11914:	b.hi	11a98 <ZSTD_compress@@Base+0x324c>  // b.pmore
   11918:	ldp	x2, x3, [x7]
   1191c:	stp	x2, x3, [x0]
   11920:	cmp	x26, #0x10
   11924:	b.ls	11970 <ZSTD_compress@@Base+0x3124>  // b.plast
   11928:	ldr	x2, [x8, #24]
   1192c:	ldp	x0, x1, [x7, #16]
   11930:	add	x6, x2, x26
   11934:	stp	x0, x1, [x2, #16]
   11938:	ldp	x0, x1, [x7, #32]
   1193c:	stp	x0, x1, [x2, #32]
   11940:	add	x1, x2, #0x30
   11944:	cmp	x6, x1
   11948:	b.ls	11970 <ZSTD_compress@@Base+0x3124>  // b.plast
   1194c:	add	x7, x7, #0x30
   11950:	ldp	x2, x3, [x7]
   11954:	stp	x2, x3, [x1]
   11958:	add	x1, x1, #0x20
   1195c:	ldp	x2, x3, [x7, #16]
   11960:	stp	x2, x3, [x1, #-16]
   11964:	add	x7, x7, #0x20
   11968:	cmp	x6, x1
   1196c:	b.hi	11950 <ZSTD_compress@@Base+0x3104>  // b.pmore
   11970:	ldr	x0, [x8, #24]
   11974:	mov	x1, #0xffff                	// #65535
   11978:	cmp	x26, x1
   1197c:	add	x0, x0, x26
   11980:	str	x0, [x8, #24]
   11984:	ldr	x0, [x8, #8]
   11988:	b.ls	119a4 <ZSTD_compress@@Base+0x3158>  // b.plast
   1198c:	mov	w1, #0x1                   	// #1
   11990:	str	w1, [x8, #72]
   11994:	ldr	x1, [x8]
   11998:	sub	x1, x0, x1
   1199c:	asr	x1, x1, #3
   119a0:	str	w1, [x8, #76]
   119a4:	mov	w1, #0x1                   	// #1
   119a8:	str	w1, [x0]
   119ac:	strh	w26, [x0, #4]
   119b0:	mov	x1, #0xffff                	// #65535
   119b4:	cmp	x28, x1
   119b8:	b.ls	119d4 <ZSTD_compress@@Base+0x3188>  // b.plast
   119bc:	mov	w1, #0x2                   	// #2
   119c0:	str	w1, [x8, #72]
   119c4:	ldr	x1, [x8]
   119c8:	sub	x1, x0, x1
   119cc:	asr	x1, x1, #3
   119d0:	str	w1, [x8, #76]
   119d4:	mov	w26, w9
   119d8:	strh	w28, [x0, #6]
   119dc:	mov	x28, x27
   119e0:	add	x0, x0, #0x8
   119e4:	str	x0, [x8, #8]
   119e8:	add	x28, x28, x5
   119ec:	cmp	x25, x28
   119f0:	b.cc	11a90 <ZSTD_compress@@Base+0x3244>  // b.lo, b.ul, b.last
   119f4:	add	w5, w10, #0x2
   119f8:	add	w10, w10, #0x2
   119fc:	add	x10, x12, x10
   11a00:	mov	w1, w18
   11a04:	mov	x0, x10
   11a08:	mov	w2, #0x8                   	// #8
   11a0c:	bl	f580 <ZSTD_compress@@Base+0xd34>
   11a10:	str	w5, [x14, x0, lsl #2]
   11a14:	sub	x0, x28, #0x2
   11a18:	mov	w1, w18
   11a1c:	sub	x6, x0, x12
   11a20:	mov	w2, #0x8                   	// #8
   11a24:	bl	f580 <ZSTD_compress@@Base+0xd34>
   11a28:	str	w6, [x14, x0, lsl #2]
   11a2c:	mov	w1, w20
   11a30:	mov	x0, x10
   11a34:	mov	w2, #0x7                   	// #7
   11a38:	bl	f580 <ZSTD_compress@@Base+0xd34>
   11a3c:	str	w5, [x19, x0, lsl #2]
   11a40:	sub	x0, x28, #0x1
   11a44:	sub	x5, x0, x12
   11a48:	mov	w1, w20
   11a4c:	mov	w2, #0x7                   	// #7
   11a50:	bl	f580 <ZSTD_compress@@Base+0xd34>
   11a54:	str	w5, [x19, x0, lsl #2]
   11a58:	mov	w0, w26
   11a5c:	mov	w26, w11
   11a60:	mov	w11, w0
   11a64:	mov	w9, #0x1                   	// #1
   11a68:	sub	x0, x28, w26, uxtw
   11a6c:	cmp	w26, #0x0
   11a70:	mov	w1, w26
   11a74:	ldr	w2, [x0]
   11a78:	ldr	w0, [x28]
   11a7c:	ccmp	w2, w0, #0x0, ne  // ne = any
   11a80:	b.eq	11d1c <ZSTD_compress@@Base+0x34d0>  // b.none
   11a84:	mov	w0, w26
   11a88:	mov	w26, w11
   11a8c:	mov	w11, w0
   11a90:	mov	x7, x28
   11a94:	b	11ca4 <ZSTD_compress@@Base+0x3458>
   11a98:	mov	x3, x23
   11a9c:	mov	x2, x27
   11aa0:	mov	x1, x7
   11aa4:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   11aa8:	b	11970 <ZSTD_compress@@Base+0x3124>
   11aac:	cmp	w15, w4
   11ab0:	b.cs	11bf8 <ZSTD_compress@@Base+0x33ac>  // b.hs, b.nlast
   11ab4:	ldr	x0, [x12, w4, uxtw]
   11ab8:	add	x3, x12, w4, uxtw
   11abc:	ldr	x1, [x28]
   11ac0:	cmp	x1, x0
   11ac4:	b.ne	11bf8 <ZSTD_compress@@Base+0x33ac>  // b.any
   11ac8:	add	x1, x3, #0x8
   11acc:	mov	x2, x13
   11ad0:	add	x0, x28, #0x8
   11ad4:	str	x3, [sp, #96]
   11ad8:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   11adc:	add	x5, x0, #0x8
   11ae0:	ldr	x3, [sp, #96]
   11ae4:	sub	w26, w28, w3
   11ae8:	cmp	x7, x28
   11aec:	ccmp	x24, x3, #0x2, cc  // cc = lo, ul, last
   11af0:	b.cs	11b04 <ZSTD_compress@@Base+0x32b8>  // b.hs, b.nlast
   11af4:	ldurb	w1, [x28, #-1]
   11af8:	ldurb	w0, [x3, #-1]
   11afc:	cmp	w1, w0
   11b00:	b.eq	11be8 <ZSTD_compress@@Base+0x339c>  // b.none
   11b04:	sub	x11, x28, x7
   11b08:	sub	x27, x5, #0x3
   11b0c:	cmp	x28, x23
   11b10:	ldr	x0, [x8, #24]
   11b14:	b.hi	11d08 <ZSTD_compress@@Base+0x34bc>  // b.pmore
   11b18:	ldp	x2, x3, [x7]
   11b1c:	stp	x2, x3, [x0]
   11b20:	cmp	x11, #0x10
   11b24:	b.ls	11b70 <ZSTD_compress@@Base+0x3324>  // b.plast
   11b28:	ldr	x2, [x8, #24]
   11b2c:	ldp	x0, x1, [x7, #16]
   11b30:	add	x6, x2, x11
   11b34:	stp	x0, x1, [x2, #16]
   11b38:	ldp	x0, x1, [x7, #32]
   11b3c:	stp	x0, x1, [x2, #32]
   11b40:	add	x1, x2, #0x30
   11b44:	cmp	x6, x1
   11b48:	b.ls	11b70 <ZSTD_compress@@Base+0x3324>  // b.plast
   11b4c:	add	x7, x7, #0x30
   11b50:	ldp	x2, x3, [x7]
   11b54:	stp	x2, x3, [x1]
   11b58:	add	x1, x1, #0x20
   11b5c:	ldp	x2, x3, [x7, #16]
   11b60:	stp	x2, x3, [x1, #-16]
   11b64:	add	x7, x7, #0x20
   11b68:	cmp	x6, x1
   11b6c:	b.hi	11b50 <ZSTD_compress@@Base+0x3304>  // b.pmore
   11b70:	ldr	x0, [x8, #24]
   11b74:	mov	x1, #0xffff                	// #65535
   11b78:	cmp	x11, x1
   11b7c:	add	x0, x0, x11
   11b80:	str	x0, [x8, #24]
   11b84:	ldr	x0, [x8, #8]
   11b88:	b.ls	11ba4 <ZSTD_compress@@Base+0x3358>  // b.plast
   11b8c:	mov	w1, #0x1                   	// #1
   11b90:	str	w1, [x8, #72]
   11b94:	ldr	x1, [x8]
   11b98:	sub	x1, x0, x1
   11b9c:	asr	x1, x1, #3
   11ba0:	str	w1, [x8, #76]
   11ba4:	add	w1, w26, #0x3
   11ba8:	str	w1, [x0]
   11bac:	strh	w11, [x0, #4]
   11bb0:	mov	x1, #0xffff                	// #65535
   11bb4:	cmp	x27, x1
   11bb8:	b.ls	11bd4 <ZSTD_compress@@Base+0x3388>  // b.plast
   11bbc:	mov	w1, #0x2                   	// #2
   11bc0:	str	w1, [x8, #72]
   11bc4:	ldr	x1, [x8]
   11bc8:	sub	x1, x0, x1
   11bcc:	asr	x1, x1, #3
   11bd0:	str	w1, [x8, #76]
   11bd4:	strh	w27, [x0, #6]
   11bd8:	mov	w11, w9
   11bdc:	add	x0, x0, #0x8
   11be0:	str	x0, [x8, #8]
   11be4:	b	119e8 <ZSTD_compress@@Base+0x319c>
   11be8:	sub	x28, x28, #0x1
   11bec:	sub	x3, x3, #0x1
   11bf0:	add	x5, x5, #0x1
   11bf4:	b	11ae8 <ZSTD_compress@@Base+0x329c>
   11bf8:	cmp	w15, w2
   11bfc:	b.cs	11c90 <ZSTD_compress@@Base+0x3444>  // b.hs, b.nlast
   11c00:	ldr	w0, [x12, w2, uxtw]
   11c04:	add	x3, x12, w2, uxtw
   11c08:	ldr	w1, [x28]
   11c0c:	cmp	w1, w0
   11c10:	b.ne	11c90 <ZSTD_compress@@Base+0x3444>  // b.any
   11c14:	mov	w1, w18
   11c18:	mov	w2, #0x8                   	// #8
   11c1c:	mov	x0, x27
   11c20:	str	x3, [sp, #96]
   11c24:	bl	f580 <ZSTD_compress@@Base+0xd34>
   11c28:	lsl	x0, x0, #2
   11c2c:	add	w2, w10, #0x1
   11c30:	ldr	x3, [sp, #96]
   11c34:	ldr	w1, [x14, x0]
   11c38:	str	w2, [x14, x0]
   11c3c:	cmp	w15, w1
   11c40:	b.cc	11cac <ZSTD_compress@@Base+0x3460>  // b.lo, b.ul, b.last
   11c44:	add	x1, x3, #0x4
   11c48:	mov	x2, x13
   11c4c:	add	x0, x28, #0x4
   11c50:	str	x3, [sp, #96]
   11c54:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   11c58:	add	x5, x0, #0x4
   11c5c:	ldr	x3, [sp, #96]
   11c60:	sub	w26, w28, w3
   11c64:	cmp	x7, x28
   11c68:	ccmp	x24, x3, #0x2, cc  // cc = lo, ul, last
   11c6c:	b.cs	11b04 <ZSTD_compress@@Base+0x32b8>  // b.hs, b.nlast
   11c70:	ldurb	w1, [x28, #-1]
   11c74:	ldurb	w0, [x3, #-1]
   11c78:	cmp	w1, w0
   11c7c:	b.ne	11b04 <ZSTD_compress@@Base+0x32b8>  // b.any
   11c80:	sub	x28, x28, #0x1
   11c84:	sub	x3, x3, #0x1
   11c88:	add	x5, x5, #0x1
   11c8c:	b	11c64 <ZSTD_compress@@Base+0x3418>
   11c90:	sub	x0, x28, x7
   11c94:	mov	w26, w9
   11c98:	asr	x0, x0, #8
   11c9c:	add	x0, x0, #0x1
   11ca0:	add	x28, x28, x0
   11ca4:	mov	w9, w26
   11ca8:	b	11884 <ZSTD_compress@@Base+0x3038>
   11cac:	ldr	x0, [x12, w1, uxtw]
   11cb0:	add	x11, x12, w1, uxtw
   11cb4:	ldur	x2, [x28, #1]
   11cb8:	cmp	x2, x0
   11cbc:	b.ne	11c44 <ZSTD_compress@@Base+0x33f8>  // b.any
   11cc0:	add	x0, x28, #0x9
   11cc4:	mov	x2, x13
   11cc8:	add	x1, x11, #0x8
   11ccc:	mov	x28, x27
   11cd0:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   11cd4:	add	x5, x0, #0x8
   11cd8:	sub	w26, w27, w11
   11cdc:	cmp	x7, x28
   11ce0:	ccmp	x24, x11, #0x2, cc  // cc = lo, ul, last
   11ce4:	b.cs	11b04 <ZSTD_compress@@Base+0x32b8>  // b.hs, b.nlast
   11ce8:	ldurb	w1, [x28, #-1]
   11cec:	ldurb	w0, [x11, #-1]
   11cf0:	cmp	w1, w0
   11cf4:	b.ne	11b04 <ZSTD_compress@@Base+0x32b8>  // b.any
   11cf8:	sub	x28, x28, #0x1
   11cfc:	sub	x11, x11, #0x1
   11d00:	add	x5, x5, #0x1
   11d04:	b	11cdc <ZSTD_compress@@Base+0x3490>
   11d08:	mov	x3, x23
   11d0c:	mov	x2, x28
   11d10:	mov	x1, x7
   11d14:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   11d18:	b	11b70 <ZSTD_compress@@Base+0x3324>
   11d1c:	mov	x0, #0x4                   	// #4
   11d20:	sub	x1, x0, x1
   11d24:	mov	x2, x13
   11d28:	add	x1, x28, x1
   11d2c:	add	x0, x28, x0
   11d30:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   11d34:	mov	x10, x0
   11d38:	sub	x6, x28, x12
   11d3c:	add	x5, x0, #0x4
   11d40:	mov	w1, w20
   11d44:	mov	w2, #0x7                   	// #7
   11d48:	mov	x0, x28
   11d4c:	bl	f580 <ZSTD_compress@@Base+0xd34>
   11d50:	str	w6, [x19, x0, lsl #2]
   11d54:	mov	w1, w18
   11d58:	mov	x0, x28
   11d5c:	mov	w2, #0x8                   	// #8
   11d60:	bl	f580 <ZSTD_compress@@Base+0xd34>
   11d64:	str	w6, [x14, x0, lsl #2]
   11d68:	add	x10, x10, #0x1
   11d6c:	cmp	x23, x28
   11d70:	ldr	x0, [x8, #24]
   11d74:	b.cc	11dd8 <ZSTD_compress@@Base+0x358c>  // b.lo, b.ul, b.last
   11d78:	ldp	x2, x3, [x28]
   11d7c:	stp	x2, x3, [x0]
   11d80:	mov	x1, #0xffff                	// #65535
   11d84:	ldr	x0, [x8, #8]
   11d88:	cmp	x10, x1
   11d8c:	str	w9, [x0]
   11d90:	strh	wzr, [x0, #4]
   11d94:	b.ls	11db0 <ZSTD_compress@@Base+0x3564>  // b.plast
   11d98:	mov	w1, #0x2                   	// #2
   11d9c:	str	w1, [x8, #72]
   11da0:	ldr	x1, [x8]
   11da4:	sub	x1, x0, x1
   11da8:	asr	x1, x1, #3
   11dac:	str	w1, [x8, #76]
   11db0:	strh	w10, [x0, #6]
   11db4:	add	x0, x0, #0x8
   11db8:	str	x0, [x8, #8]
   11dbc:	add	x28, x28, x5
   11dc0:	cmp	x25, x28
   11dc4:	b.cc	11a90 <ZSTD_compress@@Base+0x3244>  // b.lo, b.ul, b.last
   11dc8:	mov	w0, w26
   11dcc:	mov	w26, w11
   11dd0:	mov	w11, w0
   11dd4:	b	11a68 <ZSTD_compress@@Base+0x321c>
   11dd8:	mov	x3, x23
   11ddc:	mov	x2, x28
   11de0:	mov	x1, x28
   11de4:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   11de8:	b	11d80 <ZSTD_compress@@Base+0x3534>
   11dec:	stp	x29, x30, [sp, #-224]!
   11df0:	add	x13, x3, x4
   11df4:	mov	x29, sp
   11df8:	stp	x19, x20, [sp, #16]
   11dfc:	mov	x19, x1
   11e00:	ldr	w6, [x0, #184]
   11e04:	ldr	x15, [x0, #8]
   11e08:	str	x2, [sp, #128]
   11e0c:	ldr	x1, [x0, #48]
   11e10:	str	x1, [sp, #104]
   11e14:	ldp	w1, w2, [x0, #188]
   11e18:	stp	x27, x28, [sp, #80]
   11e1c:	mov	x27, x3
   11e20:	stp	w2, w1, [sp, #120]
   11e24:	mov	w1, #0x1                   	// #1
   11e28:	ldr	x2, [x0, #64]
   11e2c:	str	x2, [sp, #112]
   11e30:	sub	x2, x27, x15
   11e34:	ldr	w14, [x0, #24]
   11e38:	add	w2, w2, w4
   11e3c:	ldr	w3, [x0, #200]
   11e40:	ldr	x4, [sp, #128]
   11e44:	stp	x21, x22, [sp, #32]
   11e48:	lsl	w1, w1, w6
   11e4c:	stp	x23, x24, [sp, #48]
   11e50:	cmp	w3, #0x6
   11e54:	sub	w6, w2, w14
   11e58:	stp	x25, x26, [sp, #64]
   11e5c:	ldp	w25, w18, [x4]
   11e60:	ldr	x0, [x0, #176]
   11e64:	b.eq	12f9c <ZSTD_compress@@Base+0x4750>  // b.none
   11e68:	cmp	w3, #0x7
   11e6c:	b.eq	13808 <ZSTD_compress@@Base+0x4fbc>  // b.none
   11e70:	cmp	w3, #0x5
   11e74:	b.eq	12734 <ZSTD_compress@@Base+0x3ee8>  // b.none
   11e78:	cmp	w6, w1
   11e7c:	b.ls	11e84 <ZSTD_compress@@Base+0x3638>  // b.plast
   11e80:	sub	w14, w2, w1
   11e84:	sub	w1, w14, #0x1
   11e88:	str	w1, [sp, #184]
   11e8c:	sub	x1, x13, #0x8
   11e90:	str	x1, [sp, #160]
   11e94:	ldr	x20, [x0, #8]
   11e98:	add	x21, x15, w14, uxtw
   11e9c:	ldr	x1, [x0, #48]
   11ea0:	str	x1, [sp, #168]
   11ea4:	ldr	w22, [x0, #24]
   11ea8:	sub	x24, x13, #0x20
   11eac:	ldr	x1, [x0, #64]
   11eb0:	str	x1, [sp, #192]
   11eb4:	ldr	x23, [x0], #184
   11eb8:	add	x1, x20, x22
   11ebc:	str	x1, [sp, #136]
   11ec0:	sub	x1, x23, x20
   11ec4:	str	w1, [sp, #176]
   11ec8:	add	w2, w1, #0x1
   11ecc:	sub	w1, w14, w1
   11ed0:	str	w1, [sp, #180]
   11ed4:	ldr	w1, [x0, #8]
   11ed8:	ldr	w0, [x0, #4]
   11edc:	stp	w1, w0, [sp, #200]
   11ee0:	sub	x0, x27, x21
   11ee4:	ldr	w1, [sp, #136]
   11ee8:	add	x0, x23, x0
   11eec:	str	w25, [sp, #144]
   11ef0:	cmp	w0, w1
   11ef4:	str	w2, [sp, #208]
   11ef8:	cinc	x28, x27, eq  // eq = none
   11efc:	ldr	x0, [sp, #160]
   11f00:	cmp	x0, x28
   11f04:	b.hi	11f38 <ZSTD_compress@@Base+0x36ec>  // b.pmore
   11f08:	ldr	x0, [sp, #128]
   11f0c:	ldr	w1, [sp, #144]
   11f10:	str	w1, [x0]
   11f14:	ldp	x19, x20, [sp, #16]
   11f18:	ldp	x21, x22, [sp, #32]
   11f1c:	ldp	x23, x24, [sp, #48]
   11f20:	ldp	x25, x26, [sp, #64]
   11f24:	str	w18, [x0, #4]
   11f28:	sub	x0, x13, x27
   11f2c:	ldp	x27, x28, [sp, #80]
   11f30:	ldp	x29, x30, [sp], #224
   11f34:	ret
   11f38:	ldr	w1, [sp, #120]
   11f3c:	mov	w2, #0x8                   	// #8
   11f40:	mov	x0, x28
   11f44:	bl	f580 <ZSTD_compress@@Base+0xd34>
   11f48:	mov	x9, x0
   11f4c:	ldr	w7, [x28]
   11f50:	mov	w0, #0x79b1                	// #31153
   11f54:	ldr	w1, [sp, #124]
   11f58:	movk	w0, #0x9e37, lsl #16
   11f5c:	mov	w2, #0x8                   	// #8
   11f60:	mul	w7, w7, w0
   11f64:	mov	w0, #0x20                  	// #32
   11f68:	sub	w0, w0, w1
   11f6c:	str	w0, [sp, #152]
   11f70:	ldr	w1, [sp, #200]
   11f74:	ldrb	w0, [sp, #152]
   11f78:	lsr	w8, w7, w0
   11f7c:	mov	x0, x28
   11f80:	bl	f580 <ZSTD_compress@@Base+0xd34>
   11f84:	lsl	x3, x9, #2
   11f88:	ldp	x1, x5, [sp, #104]
   11f8c:	ubfiz	x4, x8, #2, #32
   11f90:	sub	x26, x28, x15
   11f94:	ldr	w10, [x1, x3]
   11f98:	ldr	x1, [sp, #112]
   11f9c:	ldr	w22, [x1, x4]
   11fa0:	ldr	w1, [sp, #144]
   11fa4:	str	w26, [x5, x4]
   11fa8:	ldr	x4, [sp, #104]
   11fac:	sub	w2, w26, w1
   11fb0:	ldr	w1, [sp, #176]
   11fb4:	add	w2, w2, #0x1
   11fb8:	cmp	w14, w2
   11fbc:	sub	w1, w1, w14
   11fc0:	str	w26, [x4, x3]
   11fc4:	ldr	w3, [sp, #184]
   11fc8:	add	w1, w1, w2
   11fcc:	add	x8, x15, w2, uxtw
   11fd0:	add	x1, x20, x1
   11fd4:	sub	w3, w3, w2
   11fd8:	csel	x1, x8, x1, ls  // ls = plast
   11fdc:	cmp	w3, #0x2
   11fe0:	b.ls	122c4 <ZSTD_compress@@Base+0x3a78>  // b.plast
   11fe4:	ldr	w3, [x1]
   11fe8:	ldur	w4, [x28, #1]
   11fec:	cmp	w4, w3
   11ff0:	b.ne	122c4 <ZSTD_compress@@Base+0x3a78>  // b.any
   11ff4:	cmp	w14, w2
   11ff8:	add	x25, x28, #0x1
   11ffc:	csel	x3, x23, x13, hi  // hi = pmore
   12000:	mov	x4, x21
   12004:	mov	x2, x13
   12008:	add	x1, x1, #0x4
   1200c:	add	x0, x28, #0x5
   12010:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   12014:	sub	x9, x25, x27
   12018:	add	x11, x0, #0x4
   1201c:	add	x8, x0, #0x1
   12020:	cmp	x25, x24
   12024:	ldr	x0, [x19, #24]
   12028:	b.hi	122b0 <ZSTD_compress@@Base+0x3a64>  // b.pmore
   1202c:	ldp	x2, x3, [x27]
   12030:	stp	x2, x3, [x0]
   12034:	cmp	x9, #0x10
   12038:	b.ls	12084 <ZSTD_compress@@Base+0x3838>  // b.plast
   1203c:	ldr	x2, [x19, #24]
   12040:	ldp	x0, x1, [x27, #16]
   12044:	add	x4, x2, x9
   12048:	stp	x0, x1, [x2, #16]
   1204c:	ldp	x0, x1, [x27, #32]
   12050:	stp	x0, x1, [x2, #32]
   12054:	add	x1, x2, #0x30
   12058:	cmp	x4, x1
   1205c:	b.ls	12084 <ZSTD_compress@@Base+0x3838>  // b.plast
   12060:	add	x27, x27, #0x30
   12064:	ldp	x2, x3, [x27]
   12068:	stp	x2, x3, [x1]
   1206c:	add	x1, x1, #0x20
   12070:	ldp	x2, x3, [x27, #16]
   12074:	stp	x2, x3, [x1, #-16]
   12078:	add	x27, x27, #0x20
   1207c:	cmp	x4, x1
   12080:	b.hi	12064 <ZSTD_compress@@Base+0x3818>  // b.pmore
   12084:	ldr	x0, [x19, #24]
   12088:	mov	x1, #0xffff                	// #65535
   1208c:	cmp	x9, x1
   12090:	add	x0, x0, x9
   12094:	str	x0, [x19, #24]
   12098:	ldr	x0, [x19, #8]
   1209c:	b.ls	120b8 <ZSTD_compress@@Base+0x386c>  // b.plast
   120a0:	mov	w1, #0x1                   	// #1
   120a4:	str	w1, [x19, #72]
   120a8:	ldr	x1, [x19]
   120ac:	sub	x1, x0, x1
   120b0:	asr	x1, x1, #3
   120b4:	str	w1, [x19, #76]
   120b8:	mov	w1, #0x1                   	// #1
   120bc:	str	w1, [x0]
   120c0:	strh	w9, [x0, #4]
   120c4:	mov	x1, #0xffff                	// #65535
   120c8:	cmp	x8, x1
   120cc:	b.ls	120e8 <ZSTD_compress@@Base+0x389c>  // b.plast
   120d0:	mov	w1, #0x2                   	// #2
   120d4:	str	w1, [x19, #72]
   120d8:	ldr	x1, [x19]
   120dc:	sub	x1, x0, x1
   120e0:	asr	x1, x1, #3
   120e4:	str	w1, [x19, #76]
   120e8:	ldr	w22, [sp, #144]
   120ec:	add	x0, x0, #0x8
   120f0:	sturh	w8, [x0, #-2]
   120f4:	str	x0, [x19, #8]
   120f8:	ldr	x0, [sp, #160]
   120fc:	add	x28, x25, x11
   12100:	cmp	x0, x28
   12104:	b.cc	122a8 <ZSTD_compress@@Base+0x3a5c>  // b.lo, b.ul, b.last
   12108:	ldr	w1, [sp, #120]
   1210c:	add	w7, w26, #0x2
   12110:	add	w26, w26, #0x2
   12114:	mov	w2, #0x8                   	// #8
   12118:	add	x0, x15, x26
   1211c:	mov	x27, #0xffff                	// #65535
   12120:	bl	f580 <ZSTD_compress@@Base+0xd34>
   12124:	ldr	x1, [sp, #104]
   12128:	mov	w2, #0x8                   	// #8
   1212c:	str	w7, [x1, x0, lsl #2]
   12130:	sub	x0, x28, #0x2
   12134:	ldr	w1, [sp, #120]
   12138:	sub	x8, x0, x15
   1213c:	bl	f580 <ZSTD_compress@@Base+0xd34>
   12140:	ldr	x1, [sp, #104]
   12144:	mov	w2, #0x79b1                	// #31153
   12148:	movk	w2, #0x9e37, lsl #16
   1214c:	str	w8, [x1, x0, lsl #2]
   12150:	mov	w1, #0x79b1                	// #31153
   12154:	movk	w1, #0x9e37, lsl #16
   12158:	ldr	w0, [x15, x26]
   1215c:	mov	w26, #0x1                   	// #1
   12160:	mul	w0, w0, w1
   12164:	ldrb	w1, [sp, #152]
   12168:	lsr	w0, w0, w1
   1216c:	ldr	x1, [sp, #112]
   12170:	str	w7, [x1, x0, lsl #2]
   12174:	mov	x1, x28
   12178:	ldr	w0, [x1, #-1]!
   1217c:	sub	x1, x1, x15
   12180:	mul	w0, w0, w2
   12184:	ldrb	w2, [sp, #152]
   12188:	lsr	w0, w0, w2
   1218c:	ldr	x2, [sp, #112]
   12190:	str	w1, [x2, x0, lsl #2]
   12194:	ldr	w0, [sp, #180]
   12198:	str	x0, [sp, #144]
   1219c:	ldr	x1, [sp, #144]
   121a0:	sub	x25, x28, x15
   121a4:	sub	w0, w25, w18
   121a8:	sub	w3, w25, w18
   121ac:	sub	x1, x0, x1
   121b0:	cmp	w14, w3
   121b4:	add	x2, x20, x1
   121b8:	add	x1, x15, x0
   121bc:	ldr	w0, [sp, #184]
   121c0:	csel	x1, x1, x2, ls  // ls = plast
   121c4:	add	w0, w18, w0
   121c8:	sub	w0, w0, w25
   121cc:	cmp	w0, #0x2
   121d0:	b.ls	122a8 <ZSTD_compress@@Base+0x3a5c>  // b.plast
   121d4:	ldr	w0, [x1]
   121d8:	ldr	w2, [x28]
   121dc:	cmp	w2, w0
   121e0:	b.ne	122a8 <ZSTD_compress@@Base+0x3a5c>  // b.any
   121e4:	cmp	w14, w3
   121e8:	mov	x4, x21
   121ec:	csel	x3, x23, x13, hi  // hi = pmore
   121f0:	mov	x2, x13
   121f4:	add	x1, x1, #0x4
   121f8:	add	x0, x28, #0x4
   121fc:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   12200:	add	x8, x0, #0x4
   12204:	add	x10, x0, #0x1
   12208:	cmp	x24, x28
   1220c:	ldr	x0, [x19, #24]
   12210:	b.cc	12720 <ZSTD_compress@@Base+0x3ed4>  // b.lo, b.ul, b.last
   12214:	ldp	x2, x3, [x28]
   12218:	stp	x2, x3, [x0]
   1221c:	cmp	x10, x27
   12220:	ldr	x0, [x19, #8]
   12224:	str	w26, [x0]
   12228:	strh	wzr, [x0, #4]
   1222c:	b.ls	12248 <ZSTD_compress@@Base+0x39fc>  // b.plast
   12230:	mov	w1, #0x2                   	// #2
   12234:	str	w1, [x19, #72]
   12238:	ldr	x1, [x19]
   1223c:	sub	x1, x0, x1
   12240:	asr	x1, x1, #3
   12244:	str	w1, [x19, #76]
   12248:	add	x0, x0, #0x8
   1224c:	sturh	w10, [x0, #-2]
   12250:	str	x0, [x19, #8]
   12254:	mov	w1, #0x79b1                	// #31153
   12258:	ldr	w0, [x28]
   1225c:	movk	w1, #0x9e37, lsl #16
   12260:	mov	w2, #0x8                   	// #8
   12264:	mul	w0, w0, w1
   12268:	ldrb	w1, [sp, #152]
   1226c:	lsr	w0, w0, w1
   12270:	ldr	x1, [sp, #112]
   12274:	str	w25, [x1, x0, lsl #2]
   12278:	mov	x0, x28
   1227c:	ldr	w1, [sp, #120]
   12280:	bl	f580 <ZSTD_compress@@Base+0xd34>
   12284:	add	x28, x28, x8
   12288:	ldr	x1, [sp, #104]
   1228c:	str	w25, [x1, x0, lsl #2]
   12290:	ldr	x0, [sp, #160]
   12294:	cmp	x0, x28
   12298:	b.cs	12710 <ZSTD_compress@@Base+0x3ec4>  // b.hs, b.nlast
   1229c:	mov	w0, w22
   122a0:	mov	w22, w18
   122a4:	mov	w18, w0
   122a8:	mov	x27, x28
   122ac:	b	125bc <ZSTD_compress@@Base+0x3d70>
   122b0:	mov	x3, x24
   122b4:	mov	x2, x25
   122b8:	mov	x1, x27
   122bc:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   122c0:	b	12084 <ZSTD_compress@@Base+0x3838>
   122c4:	cmp	w14, w10
   122c8:	b.cs	1240c <ZSTD_compress@@Base+0x3bc0>  // b.hs, b.nlast
   122cc:	ldr	x0, [x15, w10, uxtw]
   122d0:	add	x8, x15, w10, uxtw
   122d4:	ldr	x1, [x28]
   122d8:	cmp	x1, x0
   122dc:	b.ne	124a0 <ZSTD_compress@@Base+0x3c54>  // b.any
   122e0:	mov	x2, x13
   122e4:	add	x1, x8, #0x8
   122e8:	add	x0, x28, #0x8
   122ec:	mov	x25, x28
   122f0:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   122f4:	add	x11, x0, #0x8
   122f8:	sub	w22, w28, w8
   122fc:	cmp	x27, x25
   12300:	ccmp	x21, x8, #0x2, cc  // cc = lo, ul, last
   12304:	b.cs	12318 <ZSTD_compress@@Base+0x3acc>  // b.hs, b.nlast
   12308:	ldurb	w1, [x25, #-1]
   1230c:	ldurb	w0, [x8, #-1]
   12310:	cmp	w1, w0
   12314:	b.eq	123fc <ZSTD_compress@@Base+0x3bb0>  // b.none
   12318:	sub	x8, x25, x27
   1231c:	sub	x10, x11, #0x3
   12320:	cmp	x25, x24
   12324:	ldr	x0, [x19, #24]
   12328:	b.hi	126fc <ZSTD_compress@@Base+0x3eb0>  // b.pmore
   1232c:	ldp	x2, x3, [x27]
   12330:	stp	x2, x3, [x0]
   12334:	cmp	x8, #0x10
   12338:	b.ls	12384 <ZSTD_compress@@Base+0x3b38>  // b.plast
   1233c:	ldr	x2, [x19, #24]
   12340:	ldp	x0, x1, [x27, #16]
   12344:	add	x4, x2, x8
   12348:	stp	x0, x1, [x2, #16]
   1234c:	ldp	x0, x1, [x27, #32]
   12350:	stp	x0, x1, [x2, #32]
   12354:	add	x1, x2, #0x30
   12358:	cmp	x4, x1
   1235c:	b.ls	12384 <ZSTD_compress@@Base+0x3b38>  // b.plast
   12360:	add	x27, x27, #0x30
   12364:	ldp	x2, x3, [x27]
   12368:	stp	x2, x3, [x1]
   1236c:	add	x1, x1, #0x20
   12370:	ldp	x2, x3, [x27, #16]
   12374:	stp	x2, x3, [x1, #-16]
   12378:	add	x27, x27, #0x20
   1237c:	cmp	x4, x1
   12380:	b.hi	12364 <ZSTD_compress@@Base+0x3b18>  // b.pmore
   12384:	ldr	x0, [x19, #24]
   12388:	mov	x1, #0xffff                	// #65535
   1238c:	cmp	x8, x1
   12390:	add	x0, x0, x8
   12394:	str	x0, [x19, #24]
   12398:	ldr	x0, [x19, #8]
   1239c:	b.ls	123b8 <ZSTD_compress@@Base+0x3b6c>  // b.plast
   123a0:	mov	w1, #0x1                   	// #1
   123a4:	str	w1, [x19, #72]
   123a8:	ldr	x1, [x19]
   123ac:	sub	x1, x0, x1
   123b0:	asr	x1, x1, #3
   123b4:	str	w1, [x19, #76]
   123b8:	add	w1, w22, #0x3
   123bc:	str	w1, [x0]
   123c0:	strh	w8, [x0, #4]
   123c4:	mov	x1, #0xffff                	// #65535
   123c8:	cmp	x10, x1
   123cc:	b.ls	123e8 <ZSTD_compress@@Base+0x3b9c>  // b.plast
   123d0:	mov	w1, #0x2                   	// #2
   123d4:	str	w1, [x19, #72]
   123d8:	ldr	x1, [x19]
   123dc:	sub	x1, x0, x1
   123e0:	asr	x1, x1, #3
   123e4:	str	w1, [x19, #76]
   123e8:	strh	w10, [x0, #6]
   123ec:	add	x0, x0, #0x8
   123f0:	ldr	w18, [sp, #144]
   123f4:	str	x0, [x19, #8]
   123f8:	b	120f8 <ZSTD_compress@@Base+0x38ac>
   123fc:	sub	x25, x25, #0x1
   12400:	sub	x8, x8, #0x1
   12404:	add	x11, x11, #0x1
   12408:	b	122fc <ZSTD_compress@@Base+0x3ab0>
   1240c:	ldr	x1, [sp, #168]
   12410:	ldr	w25, [x1, x0, lsl #2]
   12414:	ldr	x1, [sp, #136]
   12418:	mov	w0, w25
   1241c:	add	x8, x20, w25, uxtw
   12420:	cmp	x1, x8
   12424:	b.cs	124a0 <ZSTD_compress@@Base+0x3c54>  // b.hs, b.nlast
   12428:	ldr	x0, [x20, x0]
   1242c:	ldr	x1, [x28]
   12430:	cmp	x1, x0
   12434:	b.ne	124a0 <ZSTD_compress@@Base+0x3c54>  // b.any
   12438:	add	x1, x8, #0x8
   1243c:	mov	x4, x21
   12440:	mov	x3, x23
   12444:	mov	x2, x13
   12448:	add	x0, x28, #0x8
   1244c:	str	x8, [sp, #216]
   12450:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   12454:	add	x11, x0, #0x8
   12458:	ldr	w0, [sp, #176]
   1245c:	sub	w9, w26, w25
   12460:	ldr	x8, [sp, #216]
   12464:	sub	w18, w0, w14
   12468:	mov	x25, x28
   1246c:	add	w22, w9, w18
   12470:	ldr	x0, [sp, #136]
   12474:	cmp	x27, x25
   12478:	ccmp	x0, x8, #0x2, cc  // cc = lo, ul, last
   1247c:	b.cs	12318 <ZSTD_compress@@Base+0x3acc>  // b.hs, b.nlast
   12480:	ldurb	w1, [x25, #-1]
   12484:	ldurb	w0, [x8, #-1]
   12488:	cmp	w1, w0
   1248c:	b.ne	12318 <ZSTD_compress@@Base+0x3acc>  // b.any
   12490:	sub	x25, x25, #0x1
   12494:	sub	x8, x8, #0x1
   12498:	add	x11, x11, #0x1
   1249c:	b	12470 <ZSTD_compress@@Base+0x3c24>
   124a0:	cmp	w14, w22
   124a4:	b.cs	12564 <ZSTD_compress@@Base+0x3d18>  // b.hs, b.nlast
   124a8:	ldr	w0, [x15, w22, uxtw]
   124ac:	add	x8, x15, w22, uxtw
   124b0:	ldr	w1, [x28]
   124b4:	cmp	w1, w0
   124b8:	b.ne	125a8 <ZSTD_compress@@Base+0x3d5c>  // b.any
   124bc:	ldr	w1, [sp, #120]
   124c0:	add	x25, x28, #0x1
   124c4:	mov	w2, #0x8                   	// #8
   124c8:	mov	x0, x25
   124cc:	str	x8, [sp, #216]
   124d0:	bl	f580 <ZSTD_compress@@Base+0xd34>
   124d4:	mov	x10, x0
   124d8:	ldr	w1, [sp, #200]
   124dc:	mov	w2, #0x8                   	// #8
   124e0:	mov	x0, x25
   124e4:	bl	f580 <ZSTD_compress@@Base+0xd34>
   124e8:	lsl	x1, x10, #2
   124ec:	ldr	x2, [sp, #104]
   124f0:	add	w3, w26, #0x1
   124f4:	ldr	x4, [sp, #104]
   124f8:	ldr	w2, [x2, x1]
   124fc:	ldr	x8, [sp, #216]
   12500:	str	w3, [x4, x1]
   12504:	cmp	w14, w2
   12508:	b.cs	125c4 <ZSTD_compress@@Base+0x3d78>  // b.hs, b.nlast
   1250c:	ldr	x0, [x15, w2, uxtw]
   12510:	add	x10, x15, w2, uxtw
   12514:	ldur	x1, [x28, #1]
   12518:	cmp	x1, x0
   1251c:	b.ne	12654 <ZSTD_compress@@Base+0x3e08>  // b.any
   12520:	mov	x2, x13
   12524:	add	x1, x10, #0x8
   12528:	add	x0, x28, #0x9
   1252c:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   12530:	add	x11, x0, #0x8
   12534:	sub	w22, w25, w10
   12538:	cmp	x27, x25
   1253c:	ccmp	x21, x10, #0x2, cc  // cc = lo, ul, last
   12540:	b.cs	12318 <ZSTD_compress@@Base+0x3acc>  // b.hs, b.nlast
   12544:	ldurb	w1, [x25, #-1]
   12548:	ldurb	w0, [x10, #-1]
   1254c:	cmp	w1, w0
   12550:	b.ne	12318 <ZSTD_compress@@Base+0x3acc>  // b.any
   12554:	sub	x25, x25, #0x1
   12558:	sub	x10, x10, #0x1
   1255c:	add	x11, x11, #0x1
   12560:	b	12538 <ZSTD_compress@@Base+0x3cec>
   12564:	ldr	w0, [sp, #204]
   12568:	ldr	x1, [sp, #136]
   1256c:	neg	w0, w0
   12570:	lsr	w7, w7, w0
   12574:	ldr	x0, [sp, #192]
   12578:	ldr	w9, [x0, w7, uxtw #2]
   1257c:	mov	w0, w9
   12580:	add	x8, x20, w9, uxtw
   12584:	cmp	x1, x8
   12588:	b.cs	125a8 <ZSTD_compress@@Base+0x3d5c>  // b.hs, b.nlast
   1258c:	ldr	w0, [x20, x0]
   12590:	ldr	w1, [x28]
   12594:	cmp	w1, w0
   12598:	b.ne	125a8 <ZSTD_compress@@Base+0x3d5c>  // b.any
   1259c:	ldr	w0, [sp, #180]
   125a0:	add	w22, w0, w9
   125a4:	b	124bc <ZSTD_compress@@Base+0x3c70>
   125a8:	sub	x0, x28, x27
   125ac:	ldr	w22, [sp, #144]
   125b0:	asr	x0, x0, #8
   125b4:	add	x0, x0, #0x1
   125b8:	add	x28, x28, x0
   125bc:	str	w22, [sp, #144]
   125c0:	b	11efc <ZSTD_compress@@Base+0x36b0>
   125c4:	ldr	x1, [sp, #168]
   125c8:	ldr	w18, [x1, x0, lsl #2]
   125cc:	ldr	x1, [sp, #136]
   125d0:	mov	w0, w18
   125d4:	add	x10, x20, w18, uxtw
   125d8:	cmp	x1, x10
   125dc:	b.cs	12654 <ZSTD_compress@@Base+0x3e08>  // b.hs, b.nlast
   125e0:	ldr	x0, [x20, x0]
   125e4:	ldur	x1, [x28, #1]
   125e8:	cmp	x1, x0
   125ec:	b.ne	12654 <ZSTD_compress@@Base+0x3e08>  // b.any
   125f0:	add	x1, x10, #0x8
   125f4:	mov	x4, x21
   125f8:	mov	x3, x23
   125fc:	mov	x2, x13
   12600:	add	x0, x28, #0x9
   12604:	str	x10, [sp, #216]
   12608:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   1260c:	add	x11, x0, #0x8
   12610:	ldr	w0, [sp, #208]
   12614:	sub	w9, w26, w18
   12618:	ldr	x10, [sp, #216]
   1261c:	sub	w18, w0, w14
   12620:	add	w22, w9, w18
   12624:	ldr	x0, [sp, #136]
   12628:	cmp	x27, x25
   1262c:	ccmp	x0, x10, #0x2, cc  // cc = lo, ul, last
   12630:	b.cs	12318 <ZSTD_compress@@Base+0x3acc>  // b.hs, b.nlast
   12634:	ldurb	w1, [x25, #-1]
   12638:	ldurb	w0, [x10, #-1]
   1263c:	cmp	w1, w0
   12640:	b.ne	12318 <ZSTD_compress@@Base+0x3acc>  // b.any
   12644:	sub	x25, x25, #0x1
   12648:	sub	x10, x10, #0x1
   1264c:	add	x11, x11, #0x1
   12650:	b	12624 <ZSTD_compress@@Base+0x3dd8>
   12654:	str	x8, [sp, #216]
   12658:	add	x0, x28, #0x4
   1265c:	add	x1, x8, #0x4
   12660:	cmp	w14, w22
   12664:	b.ls	126b8 <ZSTD_compress@@Base+0x3e6c>  // b.plast
   12668:	mov	x4, x21
   1266c:	mov	x3, x23
   12670:	mov	x2, x13
   12674:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   12678:	ldr	x8, [sp, #216]
   1267c:	add	x11, x0, #0x4
   12680:	sub	w22, w26, w22
   12684:	mov	x25, x28
   12688:	ldr	x0, [sp, #136]
   1268c:	cmp	x27, x25
   12690:	ccmp	x0, x8, #0x2, cc  // cc = lo, ul, last
   12694:	b.cs	12318 <ZSTD_compress@@Base+0x3acc>  // b.hs, b.nlast
   12698:	ldurb	w1, [x25, #-1]
   1269c:	ldurb	w0, [x8, #-1]
   126a0:	cmp	w1, w0
   126a4:	b.ne	12318 <ZSTD_compress@@Base+0x3acc>  // b.any
   126a8:	sub	x25, x25, #0x1
   126ac:	sub	x8, x8, #0x1
   126b0:	add	x11, x11, #0x1
   126b4:	b	12688 <ZSTD_compress@@Base+0x3e3c>
   126b8:	mov	x2, x13
   126bc:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   126c0:	ldr	x8, [sp, #216]
   126c4:	add	x11, x0, #0x4
   126c8:	mov	x25, x28
   126cc:	sub	w22, w28, w8
   126d0:	cmp	x27, x25
   126d4:	ccmp	x21, x8, #0x2, cc  // cc = lo, ul, last
   126d8:	b.cs	12318 <ZSTD_compress@@Base+0x3acc>  // b.hs, b.nlast
   126dc:	ldurb	w1, [x25, #-1]
   126e0:	ldurb	w0, [x8, #-1]
   126e4:	cmp	w1, w0
   126e8:	b.ne	12318 <ZSTD_compress@@Base+0x3acc>  // b.any
   126ec:	sub	x25, x25, #0x1
   126f0:	sub	x8, x8, #0x1
   126f4:	add	x11, x11, #0x1
   126f8:	b	126d0 <ZSTD_compress@@Base+0x3e84>
   126fc:	mov	x3, x24
   12700:	mov	x2, x25
   12704:	mov	x1, x27
   12708:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   1270c:	b	12384 <ZSTD_compress@@Base+0x3b38>
   12710:	mov	w0, w18
   12714:	mov	w18, w22
   12718:	mov	w22, w0
   1271c:	b	1219c <ZSTD_compress@@Base+0x3950>
   12720:	mov	x3, x24
   12724:	mov	x2, x28
   12728:	mov	x1, x28
   1272c:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   12730:	b	1221c <ZSTD_compress@@Base+0x39d0>
   12734:	cmp	w6, w1
   12738:	b.ls	12740 <ZSTD_compress@@Base+0x3ef4>  // b.plast
   1273c:	sub	w14, w2, w1
   12740:	sub	w1, w14, #0x1
   12744:	str	w1, [sp, #200]
   12748:	sub	x1, x13, #0x8
   1274c:	str	x1, [sp, #152]
   12750:	ldr	x20, [x0, #8]
   12754:	add	x21, x15, w14, uxtw
   12758:	ldr	x1, [x0, #48]
   1275c:	str	x1, [sp, #160]
   12760:	ldr	w22, [x0, #24]
   12764:	ldr	x1, [x0, #64]
   12768:	str	x1, [sp, #184]
   1276c:	ldr	x23, [x0], #184
   12770:	add	x1, x20, x22
   12774:	str	x1, [sp, #136]
   12778:	sub	x1, x23, x20
   1277c:	str	w1, [sp, #168]
   12780:	add	w2, w1, #0x1
   12784:	sub	w1, w14, w1
   12788:	str	w1, [sp, #176]
   1278c:	ldr	w1, [x0, #8]
   12790:	ldr	w0, [x0, #4]
   12794:	str	w1, [sp, #180]
   12798:	ldr	w1, [sp, #136]
   1279c:	str	w0, [sp, #192]
   127a0:	sub	x0, x27, x21
   127a4:	add	x0, x23, x0
   127a8:	str	w2, [sp, #204]
   127ac:	cmp	w0, w1
   127b0:	sub	x0, x13, #0x20
   127b4:	cinc	x22, x27, eq  // eq = none
   127b8:	str	x0, [sp, #144]
   127bc:	ldr	x0, [sp, #152]
   127c0:	cmp	x0, x22
   127c4:	b.hi	127d4 <ZSTD_compress@@Base+0x3f88>  // b.pmore
   127c8:	ldr	x0, [sp, #128]
   127cc:	str	w25, [x0]
   127d0:	b	11f14 <ZSTD_compress@@Base+0x36c8>
   127d4:	ldr	w1, [sp, #120]
   127d8:	mov	w2, #0x8                   	// #8
   127dc:	mov	x0, x22
   127e0:	bl	f580 <ZSTD_compress@@Base+0xd34>
   127e4:	mov	x9, x0
   127e8:	ldr	w1, [sp, #124]
   127ec:	mov	w2, #0x5                   	// #5
   127f0:	mov	x0, x22
   127f4:	bl	f580 <ZSTD_compress@@Base+0xd34>
   127f8:	mov	x7, x0
   127fc:	ldr	w1, [sp, #180]
   12800:	mov	w2, #0x8                   	// #8
   12804:	mov	x0, x22
   12808:	bl	f580 <ZSTD_compress@@Base+0xd34>
   1280c:	mov	x8, x0
   12810:	ldr	w1, [sp, #192]
   12814:	mov	w2, #0x5                   	// #5
   12818:	mov	x0, x22
   1281c:	bl	f580 <ZSTD_compress@@Base+0xd34>
   12820:	lsl	x3, x9, #2
   12824:	ldp	x1, x5, [sp, #104]
   12828:	lsl	x4, x7, #2
   1282c:	sub	x26, x22, x15
   12830:	ldr	w10, [x1, x3]
   12834:	ldr	x1, [sp, #112]
   12838:	ldr	w24, [x1, x4]
   1283c:	mov	w1, #0x1                   	// #1
   12840:	str	w26, [x5, x4]
   12844:	sub	w2, w1, w25
   12848:	ldr	x4, [sp, #104]
   1284c:	add	w2, w2, w26
   12850:	ldr	w1, [sp, #168]
   12854:	cmp	w14, w2
   12858:	add	x9, x15, w2, uxtw
   1285c:	sub	w1, w1, w14
   12860:	str	w26, [x4, x3]
   12864:	ldr	w3, [sp, #200]
   12868:	add	w1, w1, w2
   1286c:	add	x1, x20, x1
   12870:	sub	w3, w3, w2
   12874:	csel	x1, x9, x1, ls  // ls = plast
   12878:	cmp	w3, #0x2
   1287c:	b.ls	12b48 <ZSTD_compress@@Base+0x42fc>  // b.plast
   12880:	ldr	w3, [x1]
   12884:	ldur	w4, [x22, #1]
   12888:	cmp	w4, w3
   1288c:	b.ne	12b48 <ZSTD_compress@@Base+0x42fc>  // b.any
   12890:	cmp	w14, w2
   12894:	add	x1, x1, #0x4
   12898:	csel	x3, x23, x13, hi  // hi = pmore
   1289c:	mov	x4, x21
   128a0:	mov	x2, x13
   128a4:	add	x0, x22, #0x5
   128a8:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   128ac:	add	x28, x22, #0x1
   128b0:	ldr	x1, [sp, #144]
   128b4:	add	x8, x0, #0x4
   128b8:	add	x9, x0, #0x1
   128bc:	sub	x10, x28, x27
   128c0:	cmp	x28, x1
   128c4:	ldr	x0, [x19, #24]
   128c8:	b.hi	12b34 <ZSTD_compress@@Base+0x42e8>  // b.pmore
   128cc:	ldp	x2, x3, [x27]
   128d0:	stp	x2, x3, [x0]
   128d4:	cmp	x10, #0x10
   128d8:	b.ls	12924 <ZSTD_compress@@Base+0x40d8>  // b.plast
   128dc:	ldr	x2, [x19, #24]
   128e0:	ldp	x0, x1, [x27, #16]
   128e4:	add	x4, x2, x10
   128e8:	stp	x0, x1, [x2, #16]
   128ec:	ldp	x0, x1, [x27, #32]
   128f0:	stp	x0, x1, [x2, #32]
   128f4:	add	x1, x2, #0x30
   128f8:	cmp	x4, x1
   128fc:	b.ls	12924 <ZSTD_compress@@Base+0x40d8>  // b.plast
   12900:	add	x27, x27, #0x30
   12904:	ldp	x2, x3, [x27]
   12908:	stp	x2, x3, [x1]
   1290c:	add	x1, x1, #0x20
   12910:	ldp	x2, x3, [x27, #16]
   12914:	stp	x2, x3, [x1, #-16]
   12918:	add	x27, x27, #0x20
   1291c:	cmp	x4, x1
   12920:	b.hi	12904 <ZSTD_compress@@Base+0x40b8>  // b.pmore
   12924:	ldr	x0, [x19, #24]
   12928:	mov	x1, #0xffff                	// #65535
   1292c:	cmp	x10, x1
   12930:	add	x0, x0, x10
   12934:	str	x0, [x19, #24]
   12938:	ldr	x0, [x19, #8]
   1293c:	b.ls	12958 <ZSTD_compress@@Base+0x410c>  // b.plast
   12940:	mov	w1, #0x1                   	// #1
   12944:	str	w1, [x19, #72]
   12948:	ldr	x1, [x19]
   1294c:	sub	x1, x0, x1
   12950:	asr	x1, x1, #3
   12954:	str	w1, [x19, #76]
   12958:	mov	w1, #0x1                   	// #1
   1295c:	str	w1, [x0]
   12960:	strh	w10, [x0, #4]
   12964:	mov	x1, #0xffff                	// #65535
   12968:	cmp	x9, x1
   1296c:	b.ls	12988 <ZSTD_compress@@Base+0x413c>  // b.plast
   12970:	mov	w1, #0x2                   	// #2
   12974:	str	w1, [x19, #72]
   12978:	ldr	x1, [x19]
   1297c:	sub	x1, x0, x1
   12980:	asr	x1, x1, #3
   12984:	str	w1, [x19, #76]
   12988:	mov	w24, w25
   1298c:	mov	x22, x28
   12990:	strh	w9, [x0, #6]
   12994:	add	x0, x0, #0x8
   12998:	str	x0, [x19, #8]
   1299c:	ldr	x0, [sp, #152]
   129a0:	add	x22, x22, x8
   129a4:	cmp	x0, x22
   129a8:	b.cc	12b2c <ZSTD_compress@@Base+0x42e0>  // b.lo, b.ul, b.last
   129ac:	ldr	w1, [sp, #120]
   129b0:	add	w8, w26, #0x2
   129b4:	add	w26, w26, #0x2
   129b8:	mov	w2, #0x8                   	// #8
   129bc:	add	x26, x15, x26
   129c0:	mov	x27, #0xffff                	// #65535
   129c4:	mov	x0, x26
   129c8:	mov	w28, #0x2                   	// #2
   129cc:	bl	f580 <ZSTD_compress@@Base+0xd34>
   129d0:	ldr	x1, [sp, #104]
   129d4:	mov	w2, #0x8                   	// #8
   129d8:	str	w8, [x1, x0, lsl #2]
   129dc:	sub	x0, x22, #0x2
   129e0:	ldr	w1, [sp, #120]
   129e4:	sub	x9, x0, x15
   129e8:	bl	f580 <ZSTD_compress@@Base+0xd34>
   129ec:	ldr	x1, [sp, #104]
   129f0:	mov	w2, #0x5                   	// #5
   129f4:	str	w9, [x1, x0, lsl #2]
   129f8:	mov	x0, x26
   129fc:	ldr	w1, [sp, #124]
   12a00:	bl	f580 <ZSTD_compress@@Base+0xd34>
   12a04:	ldr	x1, [sp, #112]
   12a08:	mov	w2, #0x5                   	// #5
   12a0c:	str	w8, [x1, x0, lsl #2]
   12a10:	sub	x0, x22, #0x1
   12a14:	ldr	w1, [sp, #124]
   12a18:	sub	x8, x0, x15
   12a1c:	bl	f580 <ZSTD_compress@@Base+0xd34>
   12a20:	ldr	w26, [sp, #176]
   12a24:	ldr	x1, [sp, #112]
   12a28:	str	w8, [x1, x0, lsl #2]
   12a2c:	sub	x25, x22, x15
   12a30:	sub	w0, w25, w18
   12a34:	sub	w3, w25, w18
   12a38:	sub	x1, x0, x26
   12a3c:	cmp	w14, w3
   12a40:	add	x2, x20, x1
   12a44:	add	x1, x15, x0
   12a48:	ldr	w0, [sp, #200]
   12a4c:	csel	x1, x1, x2, ls  // ls = plast
   12a50:	add	w0, w18, w0
   12a54:	sub	w0, w0, w25
   12a58:	cmp	w0, #0x2
   12a5c:	b.ls	12b2c <ZSTD_compress@@Base+0x42e0>  // b.plast
   12a60:	ldr	w0, [x1]
   12a64:	ldr	w2, [x22]
   12a68:	cmp	w2, w0
   12a6c:	b.ne	12b2c <ZSTD_compress@@Base+0x42e0>  // b.any
   12a70:	cmp	w14, w3
   12a74:	add	x1, x1, #0x4
   12a78:	csel	x3, x23, x13, hi  // hi = pmore
   12a7c:	mov	x4, x21
   12a80:	mov	x2, x13
   12a84:	add	x0, x22, #0x4
   12a88:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   12a8c:	add	x8, x0, #0x4
   12a90:	ldr	x1, [sp, #144]
   12a94:	add	x9, x0, #0x1
   12a98:	ldr	x0, [x19, #24]
   12a9c:	cmp	x1, x22
   12aa0:	b.cc	12f88 <ZSTD_compress@@Base+0x473c>  // b.lo, b.ul, b.last
   12aa4:	ldp	x2, x3, [x22]
   12aa8:	stp	x2, x3, [x0]
   12aac:	mov	w1, #0x1                   	// #1
   12ab0:	ldr	x0, [x19, #8]
   12ab4:	cmp	x9, x27
   12ab8:	str	w1, [x0]
   12abc:	strh	wzr, [x0, #4]
   12ac0:	b.ls	12ad4 <ZSTD_compress@@Base+0x4288>  // b.plast
   12ac4:	ldr	x1, [x19]
   12ac8:	sub	x1, x0, x1
   12acc:	asr	x1, x1, #3
   12ad0:	stp	w28, w1, [x19, #72]
   12ad4:	ldr	w1, [sp, #124]
   12ad8:	add	x0, x0, #0x8
   12adc:	sturh	w9, [x0, #-2]
   12ae0:	mov	w2, #0x5                   	// #5
   12ae4:	str	x0, [x19, #8]
   12ae8:	mov	x0, x22
   12aec:	bl	f580 <ZSTD_compress@@Base+0xd34>
   12af0:	ldr	x1, [sp, #112]
   12af4:	mov	w2, #0x8                   	// #8
   12af8:	str	w25, [x1, x0, lsl #2]
   12afc:	mov	x0, x22
   12b00:	ldr	w1, [sp, #120]
   12b04:	bl	f580 <ZSTD_compress@@Base+0xd34>
   12b08:	add	x22, x22, x8
   12b0c:	ldr	x1, [sp, #104]
   12b10:	str	w25, [x1, x0, lsl #2]
   12b14:	ldr	x0, [sp, #152]
   12b18:	cmp	x0, x22
   12b1c:	b.cs	12f78 <ZSTD_compress@@Base+0x472c>  // b.hs, b.nlast
   12b20:	mov	w0, w24
   12b24:	mov	w24, w18
   12b28:	mov	w18, w0
   12b2c:	mov	x27, x22
   12b30:	b	12e2c <ZSTD_compress@@Base+0x45e0>
   12b34:	ldr	x3, [sp, #144]
   12b38:	mov	x2, x28
   12b3c:	mov	x1, x27
   12b40:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   12b44:	b	12924 <ZSTD_compress@@Base+0x40d8>
   12b48:	cmp	w14, w10
   12b4c:	b.cs	12c90 <ZSTD_compress@@Base+0x4444>  // b.hs, b.nlast
   12b50:	ldr	x1, [x15, w10, uxtw]
   12b54:	add	x9, x15, w10, uxtw
   12b58:	ldr	x2, [x22]
   12b5c:	cmp	x2, x1
   12b60:	b.ne	12d20 <ZSTD_compress@@Base+0x44d4>  // b.any
   12b64:	mov	x2, x13
   12b68:	add	x1, x9, #0x8
   12b6c:	add	x0, x22, #0x8
   12b70:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   12b74:	add	x8, x0, #0x8
   12b78:	sub	w24, w22, w9
   12b7c:	cmp	x27, x22
   12b80:	ccmp	x21, x9, #0x2, cc  // cc = lo, ul, last
   12b84:	b.cs	12b98 <ZSTD_compress@@Base+0x434c>  // b.hs, b.nlast
   12b88:	ldurb	w1, [x22, #-1]
   12b8c:	ldurb	w0, [x9, #-1]
   12b90:	cmp	w1, w0
   12b94:	b.eq	12c80 <ZSTD_compress@@Base+0x4434>  // b.none
   12b98:	ldr	x1, [sp, #144]
   12b9c:	sub	x9, x22, x27
   12ba0:	sub	x10, x8, #0x3
   12ba4:	cmp	x22, x1
   12ba8:	ldr	x0, [x19, #24]
   12bac:	b.hi	12f64 <ZSTD_compress@@Base+0x4718>  // b.pmore
   12bb0:	ldp	x2, x3, [x27]
   12bb4:	stp	x2, x3, [x0]
   12bb8:	cmp	x9, #0x10
   12bbc:	b.ls	12c08 <ZSTD_compress@@Base+0x43bc>  // b.plast
   12bc0:	ldr	x2, [x19, #24]
   12bc4:	ldp	x0, x1, [x27, #16]
   12bc8:	add	x4, x2, x9
   12bcc:	stp	x0, x1, [x2, #16]
   12bd0:	ldp	x0, x1, [x27, #32]
   12bd4:	stp	x0, x1, [x2, #32]
   12bd8:	add	x1, x2, #0x30
   12bdc:	cmp	x4, x1
   12be0:	b.ls	12c08 <ZSTD_compress@@Base+0x43bc>  // b.plast
   12be4:	add	x27, x27, #0x30
   12be8:	ldp	x2, x3, [x27]
   12bec:	stp	x2, x3, [x1]
   12bf0:	add	x1, x1, #0x20
   12bf4:	ldp	x2, x3, [x27, #16]
   12bf8:	stp	x2, x3, [x1, #-16]
   12bfc:	add	x27, x27, #0x20
   12c00:	cmp	x4, x1
   12c04:	b.hi	12be8 <ZSTD_compress@@Base+0x439c>  // b.pmore
   12c08:	ldr	x0, [x19, #24]
   12c0c:	mov	x1, #0xffff                	// #65535
   12c10:	cmp	x9, x1
   12c14:	add	x0, x0, x9
   12c18:	str	x0, [x19, #24]
   12c1c:	ldr	x0, [x19, #8]
   12c20:	b.ls	12c3c <ZSTD_compress@@Base+0x43f0>  // b.plast
   12c24:	mov	w1, #0x1                   	// #1
   12c28:	str	w1, [x19, #72]
   12c2c:	ldr	x1, [x19]
   12c30:	sub	x1, x0, x1
   12c34:	asr	x1, x1, #3
   12c38:	str	w1, [x19, #76]
   12c3c:	add	w1, w24, #0x3
   12c40:	str	w1, [x0]
   12c44:	strh	w9, [x0, #4]
   12c48:	mov	x1, #0xffff                	// #65535
   12c4c:	cmp	x10, x1
   12c50:	b.ls	12c6c <ZSTD_compress@@Base+0x4420>  // b.plast
   12c54:	mov	w1, #0x2                   	// #2
   12c58:	str	w1, [x19, #72]
   12c5c:	ldr	x1, [x19]
   12c60:	sub	x1, x0, x1
   12c64:	asr	x1, x1, #3
   12c68:	str	w1, [x19, #76]
   12c6c:	strh	w10, [x0, #6]
   12c70:	mov	w18, w25
   12c74:	add	x0, x0, #0x8
   12c78:	str	x0, [x19, #8]
   12c7c:	b	1299c <ZSTD_compress@@Base+0x4150>
   12c80:	sub	x22, x22, #0x1
   12c84:	sub	x9, x9, #0x1
   12c88:	add	x8, x8, #0x1
   12c8c:	b	12b7c <ZSTD_compress@@Base+0x4330>
   12c90:	ldr	x1, [sp, #160]
   12c94:	ldr	x2, [sp, #136]
   12c98:	ldr	w9, [x1, x8, lsl #2]
   12c9c:	mov	w1, w9
   12ca0:	add	x28, x20, w9, uxtw
   12ca4:	cmp	x2, x28
   12ca8:	b.cs	12d20 <ZSTD_compress@@Base+0x44d4>  // b.hs, b.nlast
   12cac:	ldr	x1, [x20, x1]
   12cb0:	ldr	x2, [x22]
   12cb4:	cmp	x2, x1
   12cb8:	b.ne	12d20 <ZSTD_compress@@Base+0x44d4>  // b.any
   12cbc:	add	x1, x28, #0x8
   12cc0:	mov	x4, x21
   12cc4:	mov	x3, x23
   12cc8:	mov	x2, x13
   12ccc:	add	x0, x22, #0x8
   12cd0:	str	w9, [sp, #208]
   12cd4:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   12cd8:	add	x8, x0, #0x8
   12cdc:	ldr	w1, [sp, #168]
   12ce0:	ldr	w9, [sp, #208]
   12ce4:	sub	w7, w1, w14
   12ce8:	sub	w0, w26, w9
   12cec:	add	w24, w0, w7
   12cf0:	ldr	x0, [sp, #136]
   12cf4:	cmp	x27, x22
   12cf8:	ccmp	x0, x28, #0x2, cc  // cc = lo, ul, last
   12cfc:	b.cs	12b98 <ZSTD_compress@@Base+0x434c>  // b.hs, b.nlast
   12d00:	ldurb	w1, [x22, #-1]
   12d04:	ldurb	w0, [x28, #-1]
   12d08:	cmp	w1, w0
   12d0c:	b.ne	12b98 <ZSTD_compress@@Base+0x434c>  // b.any
   12d10:	sub	x22, x22, #0x1
   12d14:	sub	x28, x28, #0x1
   12d18:	add	x8, x8, #0x1
   12d1c:	b	12cf0 <ZSTD_compress@@Base+0x44a4>
   12d20:	cmp	w14, w24
   12d24:	b.cs	12de0 <ZSTD_compress@@Base+0x4594>  // b.hs, b.nlast
   12d28:	ldr	w0, [x15, w24, uxtw]
   12d2c:	add	x28, x15, w24, uxtw
   12d30:	ldr	w1, [x22]
   12d34:	cmp	w1, w0
   12d38:	b.ne	12e18 <ZSTD_compress@@Base+0x45cc>  // b.any
   12d3c:	ldr	w1, [sp, #120]
   12d40:	add	x18, x22, #0x1
   12d44:	mov	x0, x18
   12d48:	mov	w2, #0x8                   	// #8
   12d4c:	bl	f580 <ZSTD_compress@@Base+0xd34>
   12d50:	mov	x8, x0
   12d54:	ldr	w1, [sp, #180]
   12d58:	mov	w2, #0x8                   	// #8
   12d5c:	mov	x0, x18
   12d60:	bl	f580 <ZSTD_compress@@Base+0xd34>
   12d64:	lsl	x1, x8, #2
   12d68:	ldr	x2, [sp, #104]
   12d6c:	add	w3, w26, #0x1
   12d70:	ldr	x4, [sp, #104]
   12d74:	ldr	w2, [x2, x1]
   12d78:	str	w3, [x4, x1]
   12d7c:	cmp	w14, w2
   12d80:	b.cs	12e34 <ZSTD_compress@@Base+0x45e8>  // b.hs, b.nlast
   12d84:	ldr	x0, [x15, w2, uxtw]
   12d88:	add	x9, x15, w2, uxtw
   12d8c:	ldur	x1, [x22, #1]
   12d90:	cmp	x1, x0
   12d94:	b.ne	12ed0 <ZSTD_compress@@Base+0x4684>  // b.any
   12d98:	add	x0, x22, #0x9
   12d9c:	mov	x2, x13
   12da0:	add	x1, x9, #0x8
   12da4:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   12da8:	add	x8, x0, #0x8
   12dac:	sub	w24, w18, w9
   12db0:	mov	x22, x18
   12db4:	cmp	x27, x22
   12db8:	ccmp	x21, x9, #0x2, cc  // cc = lo, ul, last
   12dbc:	b.cs	12b98 <ZSTD_compress@@Base+0x434c>  // b.hs, b.nlast
   12dc0:	ldurb	w1, [x22, #-1]
   12dc4:	ldurb	w0, [x9, #-1]
   12dc8:	cmp	w1, w0
   12dcc:	b.ne	12b98 <ZSTD_compress@@Base+0x434c>  // b.any
   12dd0:	sub	x22, x22, #0x1
   12dd4:	sub	x9, x9, #0x1
   12dd8:	add	x8, x8, #0x1
   12ddc:	b	12db4 <ZSTD_compress@@Base+0x4568>
   12de0:	ldr	x1, [sp, #184]
   12de4:	ldr	w7, [x1, x0, lsl #2]
   12de8:	ldr	x1, [sp, #136]
   12dec:	mov	w0, w7
   12df0:	add	x28, x20, w7, uxtw
   12df4:	cmp	x1, x28
   12df8:	b.cs	12e18 <ZSTD_compress@@Base+0x45cc>  // b.hs, b.nlast
   12dfc:	ldr	w0, [x20, x0]
   12e00:	ldr	w1, [x22]
   12e04:	cmp	w1, w0
   12e08:	b.ne	12e18 <ZSTD_compress@@Base+0x45cc>  // b.any
   12e0c:	ldr	w0, [sp, #176]
   12e10:	add	w24, w0, w7
   12e14:	b	12d3c <ZSTD_compress@@Base+0x44f0>
   12e18:	sub	x0, x22, x27
   12e1c:	mov	w24, w25
   12e20:	asr	x0, x0, #8
   12e24:	add	x0, x0, #0x1
   12e28:	add	x22, x22, x0
   12e2c:	mov	w25, w24
   12e30:	b	127bc <ZSTD_compress@@Base+0x3f70>
   12e34:	ldr	x1, [sp, #160]
   12e38:	ldr	w10, [x1, x0, lsl #2]
   12e3c:	ldr	x1, [sp, #136]
   12e40:	mov	w0, w10
   12e44:	add	x9, x20, w10, uxtw
   12e48:	cmp	x1, x9
   12e4c:	b.cs	12ed0 <ZSTD_compress@@Base+0x4684>  // b.hs, b.nlast
   12e50:	ldr	x0, [x20, x0]
   12e54:	ldur	x1, [x22, #1]
   12e58:	cmp	x1, x0
   12e5c:	b.ne	12ed0 <ZSTD_compress@@Base+0x4684>  // b.any
   12e60:	add	x1, x9, #0x8
   12e64:	add	x0, x22, #0x9
   12e68:	mov	x4, x21
   12e6c:	mov	x3, x23
   12e70:	mov	x2, x13
   12e74:	str	x9, [sp, #208]
   12e78:	str	w10, [sp, #216]
   12e7c:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   12e80:	ldr	w1, [sp, #204]
   12e84:	add	x8, x0, #0x8
   12e88:	ldr	w10, [sp, #216]
   12e8c:	mov	x22, x18
   12e90:	sub	w7, w1, w14
   12e94:	sub	w0, w26, w10
   12e98:	ldr	x9, [sp, #208]
   12e9c:	add	w24, w0, w7
   12ea0:	ldr	x0, [sp, #136]
   12ea4:	cmp	x27, x22
   12ea8:	ccmp	x0, x9, #0x2, cc  // cc = lo, ul, last
   12eac:	b.cs	12b98 <ZSTD_compress@@Base+0x434c>  // b.hs, b.nlast
   12eb0:	ldurb	w1, [x22, #-1]
   12eb4:	ldurb	w0, [x9, #-1]
   12eb8:	cmp	w1, w0
   12ebc:	b.ne	12b98 <ZSTD_compress@@Base+0x434c>  // b.any
   12ec0:	sub	x22, x22, #0x1
   12ec4:	sub	x9, x9, #0x1
   12ec8:	add	x8, x8, #0x1
   12ecc:	b	12ea0 <ZSTD_compress@@Base+0x4654>
   12ed0:	add	x0, x22, #0x4
   12ed4:	add	x1, x28, #0x4
   12ed8:	cmp	w14, w24
   12edc:	b.ls	12f28 <ZSTD_compress@@Base+0x46dc>  // b.plast
   12ee0:	mov	x4, x21
   12ee4:	mov	x3, x23
   12ee8:	mov	x2, x13
   12eec:	sub	w24, w26, w24
   12ef0:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   12ef4:	add	x8, x0, #0x4
   12ef8:	ldr	x0, [sp, #136]
   12efc:	cmp	x27, x22
   12f00:	ccmp	x0, x28, #0x2, cc  // cc = lo, ul, last
   12f04:	b.cs	12b98 <ZSTD_compress@@Base+0x434c>  // b.hs, b.nlast
   12f08:	ldurb	w1, [x22, #-1]
   12f0c:	ldurb	w0, [x28, #-1]
   12f10:	cmp	w1, w0
   12f14:	b.ne	12b98 <ZSTD_compress@@Base+0x434c>  // b.any
   12f18:	sub	x22, x22, #0x1
   12f1c:	sub	x28, x28, #0x1
   12f20:	add	x8, x8, #0x1
   12f24:	b	12ef8 <ZSTD_compress@@Base+0x46ac>
   12f28:	mov	x2, x13
   12f2c:	sub	w24, w22, w28
   12f30:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   12f34:	add	x8, x0, #0x4
   12f38:	cmp	x27, x22
   12f3c:	ccmp	x21, x28, #0x2, cc  // cc = lo, ul, last
   12f40:	b.cs	12b98 <ZSTD_compress@@Base+0x434c>  // b.hs, b.nlast
   12f44:	ldurb	w1, [x22, #-1]
   12f48:	ldurb	w0, [x28, #-1]
   12f4c:	cmp	w1, w0
   12f50:	b.ne	12b98 <ZSTD_compress@@Base+0x434c>  // b.any
   12f54:	sub	x22, x22, #0x1
   12f58:	sub	x28, x28, #0x1
   12f5c:	add	x8, x8, #0x1
   12f60:	b	12f38 <ZSTD_compress@@Base+0x46ec>
   12f64:	ldr	x3, [sp, #144]
   12f68:	mov	x2, x22
   12f6c:	mov	x1, x27
   12f70:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   12f74:	b	12c08 <ZSTD_compress@@Base+0x43bc>
   12f78:	mov	w0, w18
   12f7c:	mov	w18, w24
   12f80:	mov	w24, w0
   12f84:	b	12a2c <ZSTD_compress@@Base+0x41e0>
   12f88:	ldr	x3, [sp, #144]
   12f8c:	mov	x2, x22
   12f90:	mov	x1, x22
   12f94:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   12f98:	b	12aac <ZSTD_compress@@Base+0x4260>
   12f9c:	cmp	w6, w1
   12fa0:	b.ls	12fa8 <ZSTD_compress@@Base+0x475c>  // b.plast
   12fa4:	sub	w14, w2, w1
   12fa8:	sub	w1, w14, #0x1
   12fac:	str	w1, [sp, #200]
   12fb0:	sub	x1, x13, #0x8
   12fb4:	str	x1, [sp, #152]
   12fb8:	ldr	x20, [x0, #8]
   12fbc:	add	x21, x15, w14, uxtw
   12fc0:	ldr	x1, [x0, #48]
   12fc4:	str	x1, [sp, #160]
   12fc8:	ldr	w22, [x0, #24]
   12fcc:	ldr	x1, [x0, #64]
   12fd0:	str	x1, [sp, #184]
   12fd4:	ldr	x23, [x0], #184
   12fd8:	add	x1, x20, x22
   12fdc:	str	x1, [sp, #136]
   12fe0:	sub	x1, x23, x20
   12fe4:	str	w1, [sp, #168]
   12fe8:	add	w2, w1, #0x1
   12fec:	sub	w1, w14, w1
   12ff0:	str	w1, [sp, #176]
   12ff4:	ldr	w1, [x0, #8]
   12ff8:	ldr	w0, [x0, #4]
   12ffc:	str	w1, [sp, #180]
   13000:	ldr	w1, [sp, #136]
   13004:	str	w0, [sp, #192]
   13008:	sub	x0, x27, x21
   1300c:	add	x0, x23, x0
   13010:	str	w2, [sp, #204]
   13014:	cmp	w0, w1
   13018:	sub	x0, x13, #0x20
   1301c:	cinc	x22, x27, eq  // eq = none
   13020:	str	x0, [sp, #144]
   13024:	ldr	x0, [sp, #152]
   13028:	cmp	x0, x22
   1302c:	b.ls	127c8 <ZSTD_compress@@Base+0x3f7c>  // b.plast
   13030:	ldr	w1, [sp, #120]
   13034:	mov	w2, #0x8                   	// #8
   13038:	mov	x0, x22
   1303c:	bl	f580 <ZSTD_compress@@Base+0xd34>
   13040:	mov	x9, x0
   13044:	ldr	w1, [sp, #124]
   13048:	mov	w2, #0x6                   	// #6
   1304c:	mov	x0, x22
   13050:	bl	f580 <ZSTD_compress@@Base+0xd34>
   13054:	mov	x8, x0
   13058:	ldr	w1, [sp, #180]
   1305c:	mov	w2, #0x8                   	// #8
   13060:	mov	x0, x22
   13064:	bl	f580 <ZSTD_compress@@Base+0xd34>
   13068:	mov	x7, x0
   1306c:	ldr	w1, [sp, #192]
   13070:	mov	w2, #0x6                   	// #6
   13074:	mov	x0, x22
   13078:	bl	f580 <ZSTD_compress@@Base+0xd34>
   1307c:	lsl	x3, x9, #2
   13080:	ldp	x1, x5, [sp, #104]
   13084:	lsl	x4, x8, #2
   13088:	sub	x26, x22, x15
   1308c:	ldr	w9, [x1, x3]
   13090:	ldr	x1, [sp, #112]
   13094:	ldr	w24, [x1, x4]
   13098:	mov	w1, #0x1                   	// #1
   1309c:	str	w26, [x5, x4]
   130a0:	sub	w2, w1, w25
   130a4:	ldr	x4, [sp, #104]
   130a8:	add	w2, w2, w26
   130ac:	ldr	w1, [sp, #168]
   130b0:	cmp	w14, w2
   130b4:	add	x10, x15, w2, uxtw
   130b8:	sub	w1, w1, w14
   130bc:	str	w26, [x4, x3]
   130c0:	ldr	w3, [sp, #200]
   130c4:	add	w1, w1, w2
   130c8:	add	x1, x20, x1
   130cc:	sub	w3, w3, w2
   130d0:	csel	x1, x10, x1, ls  // ls = plast
   130d4:	cmp	w3, #0x2
   130d8:	b.ls	133a0 <ZSTD_compress@@Base+0x4b54>  // b.plast
   130dc:	ldr	w3, [x1]
   130e0:	ldur	w4, [x22, #1]
   130e4:	cmp	w4, w3
   130e8:	b.ne	133a0 <ZSTD_compress@@Base+0x4b54>  // b.any
   130ec:	cmp	w14, w2
   130f0:	add	x1, x1, #0x4
   130f4:	csel	x3, x23, x13, hi  // hi = pmore
   130f8:	mov	x4, x21
   130fc:	mov	x2, x13
   13100:	add	x0, x22, #0x5
   13104:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   13108:	add	x28, x22, #0x1
   1310c:	ldr	x1, [sp, #144]
   13110:	add	x10, x0, #0x4
   13114:	add	x8, x0, #0x1
   13118:	sub	x9, x28, x27
   1311c:	cmp	x28, x1
   13120:	ldr	x0, [x19, #24]
   13124:	b.hi	1338c <ZSTD_compress@@Base+0x4b40>  // b.pmore
   13128:	ldp	x2, x3, [x27]
   1312c:	stp	x2, x3, [x0]
   13130:	cmp	x9, #0x10
   13134:	b.ls	13180 <ZSTD_compress@@Base+0x4934>  // b.plast
   13138:	ldr	x2, [x19, #24]
   1313c:	ldp	x0, x1, [x27, #16]
   13140:	add	x4, x2, x9
   13144:	stp	x0, x1, [x2, #16]
   13148:	ldp	x0, x1, [x27, #32]
   1314c:	stp	x0, x1, [x2, #32]
   13150:	add	x1, x2, #0x30
   13154:	cmp	x4, x1
   13158:	b.ls	13180 <ZSTD_compress@@Base+0x4934>  // b.plast
   1315c:	add	x27, x27, #0x30
   13160:	ldp	x2, x3, [x27]
   13164:	stp	x2, x3, [x1]
   13168:	add	x1, x1, #0x20
   1316c:	ldp	x2, x3, [x27, #16]
   13170:	stp	x2, x3, [x1, #-16]
   13174:	add	x27, x27, #0x20
   13178:	cmp	x4, x1
   1317c:	b.hi	13160 <ZSTD_compress@@Base+0x4914>  // b.pmore
   13180:	ldr	x0, [x19, #24]
   13184:	mov	x1, #0xffff                	// #65535
   13188:	cmp	x9, x1
   1318c:	add	x0, x0, x9
   13190:	str	x0, [x19, #24]
   13194:	ldr	x0, [x19, #8]
   13198:	b.ls	131b4 <ZSTD_compress@@Base+0x4968>  // b.plast
   1319c:	mov	w1, #0x1                   	// #1
   131a0:	str	w1, [x19, #72]
   131a4:	ldr	x1, [x19]
   131a8:	sub	x1, x0, x1
   131ac:	asr	x1, x1, #3
   131b0:	str	w1, [x19, #76]
   131b4:	mov	w1, #0x1                   	// #1
   131b8:	str	w1, [x0]
   131bc:	strh	w9, [x0, #4]
   131c0:	mov	x1, #0xffff                	// #65535
   131c4:	cmp	x8, x1
   131c8:	b.ls	131e4 <ZSTD_compress@@Base+0x4998>  // b.plast
   131cc:	mov	w1, #0x2                   	// #2
   131d0:	str	w1, [x19, #72]
   131d4:	ldr	x1, [x19]
   131d8:	sub	x1, x0, x1
   131dc:	asr	x1, x1, #3
   131e0:	str	w1, [x19, #76]
   131e4:	mov	w24, w25
   131e8:	strh	w8, [x0, #6]
   131ec:	add	x0, x0, #0x8
   131f0:	str	x0, [x19, #8]
   131f4:	ldr	x0, [sp, #152]
   131f8:	add	x22, x28, x10
   131fc:	cmp	x0, x22
   13200:	b.cc	13384 <ZSTD_compress@@Base+0x4b38>  // b.lo, b.ul, b.last
   13204:	ldr	w1, [sp, #120]
   13208:	add	w7, w26, #0x2
   1320c:	add	w26, w26, #0x2
   13210:	mov	w2, #0x8                   	// #8
   13214:	add	x26, x15, x26
   13218:	mov	x27, #0xffff                	// #65535
   1321c:	mov	x0, x26
   13220:	mov	w28, #0x2                   	// #2
   13224:	bl	f580 <ZSTD_compress@@Base+0xd34>
   13228:	ldr	x1, [sp, #104]
   1322c:	mov	w2, #0x8                   	// #8
   13230:	str	w7, [x1, x0, lsl #2]
   13234:	sub	x0, x22, #0x2
   13238:	ldr	w1, [sp, #120]
   1323c:	sub	x9, x0, x15
   13240:	bl	f580 <ZSTD_compress@@Base+0xd34>
   13244:	ldr	x1, [sp, #104]
   13248:	mov	w2, #0x6                   	// #6
   1324c:	str	w9, [x1, x0, lsl #2]
   13250:	mov	x0, x26
   13254:	ldr	w1, [sp, #124]
   13258:	bl	f580 <ZSTD_compress@@Base+0xd34>
   1325c:	ldr	x1, [sp, #112]
   13260:	mov	w2, #0x6                   	// #6
   13264:	str	w7, [x1, x0, lsl #2]
   13268:	sub	x0, x22, #0x1
   1326c:	ldr	w1, [sp, #124]
   13270:	sub	x7, x0, x15
   13274:	bl	f580 <ZSTD_compress@@Base+0xd34>
   13278:	ldr	w26, [sp, #176]
   1327c:	ldr	x1, [sp, #112]
   13280:	str	w7, [x1, x0, lsl #2]
   13284:	sub	x25, x22, x15
   13288:	sub	w0, w25, w18
   1328c:	sub	w3, w25, w18
   13290:	sub	x1, x0, x26
   13294:	cmp	w14, w3
   13298:	add	x2, x20, x1
   1329c:	add	x1, x15, x0
   132a0:	ldr	w0, [sp, #200]
   132a4:	csel	x1, x1, x2, ls  // ls = plast
   132a8:	add	w0, w0, w18
   132ac:	sub	w0, w0, w25
   132b0:	cmp	w0, #0x2
   132b4:	b.ls	13384 <ZSTD_compress@@Base+0x4b38>  // b.plast
   132b8:	ldr	w0, [x1]
   132bc:	ldr	w2, [x22]
   132c0:	cmp	w2, w0
   132c4:	b.ne	13384 <ZSTD_compress@@Base+0x4b38>  // b.any
   132c8:	cmp	w14, w3
   132cc:	add	x1, x1, #0x4
   132d0:	csel	x3, x23, x13, hi  // hi = pmore
   132d4:	mov	x4, x21
   132d8:	mov	x2, x13
   132dc:	add	x0, x22, #0x4
   132e0:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   132e4:	add	x9, x0, #0x4
   132e8:	ldr	x1, [sp, #144]
   132ec:	add	x10, x0, #0x1
   132f0:	ldr	x0, [x19, #24]
   132f4:	cmp	x1, x22
   132f8:	b.cc	137f4 <ZSTD_compress@@Base+0x4fa8>  // b.lo, b.ul, b.last
   132fc:	ldp	x2, x3, [x22]
   13300:	stp	x2, x3, [x0]
   13304:	mov	w1, #0x1                   	// #1
   13308:	ldr	x0, [x19, #8]
   1330c:	cmp	x10, x27
   13310:	str	w1, [x0]
   13314:	strh	wzr, [x0, #4]
   13318:	b.ls	1332c <ZSTD_compress@@Base+0x4ae0>  // b.plast
   1331c:	ldr	x1, [x19]
   13320:	sub	x1, x0, x1
   13324:	asr	x1, x1, #3
   13328:	stp	w28, w1, [x19, #72]
   1332c:	ldr	w1, [sp, #124]
   13330:	add	x0, x0, #0x8
   13334:	sturh	w10, [x0, #-2]
   13338:	mov	w2, #0x6                   	// #6
   1333c:	str	x0, [x19, #8]
   13340:	mov	x0, x22
   13344:	bl	f580 <ZSTD_compress@@Base+0xd34>
   13348:	ldr	x1, [sp, #112]
   1334c:	mov	w2, #0x8                   	// #8
   13350:	str	w25, [x1, x0, lsl #2]
   13354:	mov	x0, x22
   13358:	ldr	w1, [sp, #120]
   1335c:	bl	f580 <ZSTD_compress@@Base+0xd34>
   13360:	add	x22, x22, x9
   13364:	ldr	x1, [sp, #104]
   13368:	str	w25, [x1, x0, lsl #2]
   1336c:	ldr	x0, [sp, #152]
   13370:	cmp	x0, x22
   13374:	b.cs	137e4 <ZSTD_compress@@Base+0x4f98>  // b.hs, b.nlast
   13378:	mov	w0, w24
   1337c:	mov	w24, w18
   13380:	mov	w18, w0
   13384:	mov	x27, x22
   13388:	b	13690 <ZSTD_compress@@Base+0x4e44>
   1338c:	ldr	x3, [sp, #144]
   13390:	mov	x2, x28
   13394:	mov	x1, x27
   13398:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   1339c:	b	13180 <ZSTD_compress@@Base+0x4934>
   133a0:	cmp	w14, w9
   133a4:	b.cs	134ec <ZSTD_compress@@Base+0x4ca0>  // b.hs, b.nlast
   133a8:	ldr	x1, [x15, w9, uxtw]
   133ac:	add	x7, x15, w9, uxtw
   133b0:	ldr	x2, [x22]
   133b4:	cmp	x2, x1
   133b8:	b.ne	13580 <ZSTD_compress@@Base+0x4d34>  // b.any
   133bc:	mov	x2, x13
   133c0:	add	x1, x7, #0x8
   133c4:	add	x0, x22, #0x8
   133c8:	mov	x28, x22
   133cc:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   133d0:	add	x10, x0, #0x8
   133d4:	sub	w24, w22, w7
   133d8:	cmp	x27, x28
   133dc:	ccmp	x21, x7, #0x2, cc  // cc = lo, ul, last
   133e0:	b.cs	133f4 <ZSTD_compress@@Base+0x4ba8>  // b.hs, b.nlast
   133e4:	ldurb	w1, [x28, #-1]
   133e8:	ldurb	w0, [x7, #-1]
   133ec:	cmp	w1, w0
   133f0:	b.eq	134dc <ZSTD_compress@@Base+0x4c90>  // b.none
   133f4:	ldr	x1, [sp, #144]
   133f8:	sub	x9, x28, x27
   133fc:	sub	x11, x10, #0x3
   13400:	cmp	x28, x1
   13404:	ldr	x0, [x19, #24]
   13408:	b.hi	137d0 <ZSTD_compress@@Base+0x4f84>  // b.pmore
   1340c:	ldp	x2, x3, [x27]
   13410:	stp	x2, x3, [x0]
   13414:	cmp	x9, #0x10
   13418:	b.ls	13464 <ZSTD_compress@@Base+0x4c18>  // b.plast
   1341c:	ldr	x2, [x19, #24]
   13420:	ldp	x0, x1, [x27, #16]
   13424:	add	x4, x2, x9
   13428:	stp	x0, x1, [x2, #16]
   1342c:	ldp	x0, x1, [x27, #32]
   13430:	stp	x0, x1, [x2, #32]
   13434:	add	x1, x2, #0x30
   13438:	cmp	x4, x1
   1343c:	b.ls	13464 <ZSTD_compress@@Base+0x4c18>  // b.plast
   13440:	add	x27, x27, #0x30
   13444:	ldp	x2, x3, [x27]
   13448:	stp	x2, x3, [x1]
   1344c:	add	x1, x1, #0x20
   13450:	ldp	x2, x3, [x27, #16]
   13454:	stp	x2, x3, [x1, #-16]
   13458:	add	x27, x27, #0x20
   1345c:	cmp	x4, x1
   13460:	b.hi	13444 <ZSTD_compress@@Base+0x4bf8>  // b.pmore
   13464:	ldr	x0, [x19, #24]
   13468:	mov	x1, #0xffff                	// #65535
   1346c:	cmp	x9, x1
   13470:	add	x0, x0, x9
   13474:	str	x0, [x19, #24]
   13478:	ldr	x0, [x19, #8]
   1347c:	b.ls	13498 <ZSTD_compress@@Base+0x4c4c>  // b.plast
   13480:	mov	w1, #0x1                   	// #1
   13484:	str	w1, [x19, #72]
   13488:	ldr	x1, [x19]
   1348c:	sub	x1, x0, x1
   13490:	asr	x1, x1, #3
   13494:	str	w1, [x19, #76]
   13498:	add	w1, w24, #0x3
   1349c:	str	w1, [x0]
   134a0:	strh	w9, [x0, #4]
   134a4:	mov	x1, #0xffff                	// #65535
   134a8:	cmp	x11, x1
   134ac:	b.ls	134c8 <ZSTD_compress@@Base+0x4c7c>  // b.plast
   134b0:	mov	w1, #0x2                   	// #2
   134b4:	str	w1, [x19, #72]
   134b8:	ldr	x1, [x19]
   134bc:	sub	x1, x0, x1
   134c0:	asr	x1, x1, #3
   134c4:	str	w1, [x19, #76]
   134c8:	strh	w11, [x0, #6]
   134cc:	mov	w18, w25
   134d0:	add	x0, x0, #0x8
   134d4:	str	x0, [x19, #8]
   134d8:	b	131f4 <ZSTD_compress@@Base+0x49a8>
   134dc:	sub	x28, x28, #0x1
   134e0:	sub	x7, x7, #0x1
   134e4:	add	x10, x10, #0x1
   134e8:	b	133d8 <ZSTD_compress@@Base+0x4b8c>
   134ec:	ldr	x1, [sp, #160]
   134f0:	ldr	x2, [sp, #136]
   134f4:	ldr	w28, [x1, x7, lsl #2]
   134f8:	mov	w1, w28
   134fc:	add	x7, x20, w28, uxtw
   13500:	cmp	x2, x7
   13504:	b.cs	13580 <ZSTD_compress@@Base+0x4d34>  // b.hs, b.nlast
   13508:	ldr	x1, [x20, x1]
   1350c:	ldr	x2, [x22]
   13510:	cmp	x2, x1
   13514:	b.ne	13580 <ZSTD_compress@@Base+0x4d34>  // b.any
   13518:	add	x1, x7, #0x8
   1351c:	mov	x4, x21
   13520:	mov	x3, x23
   13524:	mov	x2, x13
   13528:	add	x0, x22, #0x8
   1352c:	str	x7, [sp, #208]
   13530:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   13534:	add	x10, x0, #0x8
   13538:	ldr	w0, [sp, #168]
   1353c:	sub	w8, w26, w28
   13540:	ldr	x7, [sp, #208]
   13544:	sub	w18, w0, w14
   13548:	mov	x28, x22
   1354c:	add	w24, w8, w18
   13550:	ldr	x0, [sp, #136]
   13554:	cmp	x27, x28
   13558:	ccmp	x0, x7, #0x2, cc  // cc = lo, ul, last
   1355c:	b.cs	133f4 <ZSTD_compress@@Base+0x4ba8>  // b.hs, b.nlast
   13560:	ldurb	w1, [x28, #-1]
   13564:	ldurb	w0, [x7, #-1]
   13568:	cmp	w1, w0
   1356c:	b.ne	133f4 <ZSTD_compress@@Base+0x4ba8>  // b.any
   13570:	sub	x28, x28, #0x1
   13574:	sub	x7, x7, #0x1
   13578:	add	x10, x10, #0x1
   1357c:	b	13550 <ZSTD_compress@@Base+0x4d04>
   13580:	cmp	w14, w24
   13584:	b.cs	13644 <ZSTD_compress@@Base+0x4df8>  // b.hs, b.nlast
   13588:	ldr	w0, [x15, w24, uxtw]
   1358c:	add	x7, x15, w24, uxtw
   13590:	ldr	w1, [x22]
   13594:	cmp	w1, w0
   13598:	b.ne	1367c <ZSTD_compress@@Base+0x4e30>  // b.any
   1359c:	ldr	w1, [sp, #120]
   135a0:	add	x28, x22, #0x1
   135a4:	mov	w2, #0x8                   	// #8
   135a8:	mov	x0, x28
   135ac:	str	x7, [sp, #208]
   135b0:	bl	f580 <ZSTD_compress@@Base+0xd34>
   135b4:	mov	x9, x0
   135b8:	ldr	w1, [sp, #180]
   135bc:	mov	w2, #0x8                   	// #8
   135c0:	mov	x0, x28
   135c4:	bl	f580 <ZSTD_compress@@Base+0xd34>
   135c8:	lsl	x1, x9, #2
   135cc:	ldr	x2, [sp, #104]
   135d0:	add	w3, w26, #0x1
   135d4:	ldr	x4, [sp, #104]
   135d8:	ldr	w2, [x2, x1]
   135dc:	ldr	x7, [sp, #208]
   135e0:	str	w3, [x4, x1]
   135e4:	cmp	w14, w2
   135e8:	b.cs	13698 <ZSTD_compress@@Base+0x4e4c>  // b.hs, b.nlast
   135ec:	ldr	x0, [x15, w2, uxtw]
   135f0:	add	x9, x15, w2, uxtw
   135f4:	ldur	x1, [x22, #1]
   135f8:	cmp	x1, x0
   135fc:	b.ne	13728 <ZSTD_compress@@Base+0x4edc>  // b.any
   13600:	mov	x2, x13
   13604:	add	x1, x9, #0x8
   13608:	add	x0, x22, #0x9
   1360c:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   13610:	add	x10, x0, #0x8
   13614:	sub	w24, w28, w9
   13618:	cmp	x27, x28
   1361c:	ccmp	x21, x9, #0x2, cc  // cc = lo, ul, last
   13620:	b.cs	133f4 <ZSTD_compress@@Base+0x4ba8>  // b.hs, b.nlast
   13624:	ldurb	w1, [x28, #-1]
   13628:	ldurb	w0, [x9, #-1]
   1362c:	cmp	w1, w0
   13630:	b.ne	133f4 <ZSTD_compress@@Base+0x4ba8>  // b.any
   13634:	sub	x28, x28, #0x1
   13638:	sub	x9, x9, #0x1
   1363c:	add	x10, x10, #0x1
   13640:	b	13618 <ZSTD_compress@@Base+0x4dcc>
   13644:	ldr	x1, [sp, #184]
   13648:	ldr	w8, [x1, x0, lsl #2]
   1364c:	ldr	x1, [sp, #136]
   13650:	mov	w0, w8
   13654:	add	x7, x20, w8, uxtw
   13658:	cmp	x1, x7
   1365c:	b.cs	1367c <ZSTD_compress@@Base+0x4e30>  // b.hs, b.nlast
   13660:	ldr	w0, [x20, x0]
   13664:	ldr	w1, [x22]
   13668:	cmp	w1, w0
   1366c:	b.ne	1367c <ZSTD_compress@@Base+0x4e30>  // b.any
   13670:	ldr	w0, [sp, #176]
   13674:	add	w24, w0, w8
   13678:	b	1359c <ZSTD_compress@@Base+0x4d50>
   1367c:	sub	x0, x22, x27
   13680:	mov	w24, w25
   13684:	asr	x0, x0, #8
   13688:	add	x0, x0, #0x1
   1368c:	add	x22, x22, x0
   13690:	mov	w25, w24
   13694:	b	13024 <ZSTD_compress@@Base+0x47d8>
   13698:	ldr	x1, [sp, #160]
   1369c:	ldr	w18, [x1, x0, lsl #2]
   136a0:	ldr	x1, [sp, #136]
   136a4:	mov	w0, w18
   136a8:	add	x9, x20, w18, uxtw
   136ac:	cmp	x1, x9
   136b0:	b.cs	13728 <ZSTD_compress@@Base+0x4edc>  // b.hs, b.nlast
   136b4:	ldr	x0, [x20, x0]
   136b8:	ldur	x1, [x22, #1]
   136bc:	cmp	x1, x0
   136c0:	b.ne	13728 <ZSTD_compress@@Base+0x4edc>  // b.any
   136c4:	add	x1, x9, #0x8
   136c8:	mov	x4, x21
   136cc:	mov	x3, x23
   136d0:	mov	x2, x13
   136d4:	add	x0, x22, #0x9
   136d8:	str	x9, [sp, #208]
   136dc:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   136e0:	add	x10, x0, #0x8
   136e4:	ldr	w0, [sp, #204]
   136e8:	sub	w8, w26, w18
   136ec:	ldr	x9, [sp, #208]
   136f0:	sub	w18, w0, w14
   136f4:	add	w24, w8, w18
   136f8:	ldr	x0, [sp, #136]
   136fc:	cmp	x27, x28
   13700:	ccmp	x0, x9, #0x2, cc  // cc = lo, ul, last
   13704:	b.cs	133f4 <ZSTD_compress@@Base+0x4ba8>  // b.hs, b.nlast
   13708:	ldurb	w1, [x28, #-1]
   1370c:	ldurb	w0, [x9, #-1]
   13710:	cmp	w1, w0
   13714:	b.ne	133f4 <ZSTD_compress@@Base+0x4ba8>  // b.any
   13718:	sub	x28, x28, #0x1
   1371c:	sub	x9, x9, #0x1
   13720:	add	x10, x10, #0x1
   13724:	b	136f8 <ZSTD_compress@@Base+0x4eac>
   13728:	str	x7, [sp, #208]
   1372c:	add	x0, x22, #0x4
   13730:	add	x1, x7, #0x4
   13734:	cmp	w14, w24
   13738:	b.ls	1378c <ZSTD_compress@@Base+0x4f40>  // b.plast
   1373c:	mov	x4, x21
   13740:	mov	x3, x23
   13744:	mov	x2, x13
   13748:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   1374c:	ldr	x7, [sp, #208]
   13750:	add	x10, x0, #0x4
   13754:	sub	w24, w26, w24
   13758:	mov	x28, x22
   1375c:	ldr	x0, [sp, #136]
   13760:	cmp	x27, x28
   13764:	ccmp	x0, x7, #0x2, cc  // cc = lo, ul, last
   13768:	b.cs	133f4 <ZSTD_compress@@Base+0x4ba8>  // b.hs, b.nlast
   1376c:	ldurb	w1, [x28, #-1]
   13770:	ldurb	w0, [x7, #-1]
   13774:	cmp	w1, w0
   13778:	b.ne	133f4 <ZSTD_compress@@Base+0x4ba8>  // b.any
   1377c:	sub	x28, x28, #0x1
   13780:	sub	x7, x7, #0x1
   13784:	add	x10, x10, #0x1
   13788:	b	1375c <ZSTD_compress@@Base+0x4f10>
   1378c:	mov	x2, x13
   13790:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   13794:	ldr	x7, [sp, #208]
   13798:	add	x10, x0, #0x4
   1379c:	mov	x28, x22
   137a0:	sub	w24, w22, w7
   137a4:	cmp	x27, x28
   137a8:	ccmp	x21, x7, #0x2, cc  // cc = lo, ul, last
   137ac:	b.cs	133f4 <ZSTD_compress@@Base+0x4ba8>  // b.hs, b.nlast
   137b0:	ldurb	w1, [x28, #-1]
   137b4:	ldurb	w0, [x7, #-1]
   137b8:	cmp	w1, w0
   137bc:	b.ne	133f4 <ZSTD_compress@@Base+0x4ba8>  // b.any
   137c0:	sub	x28, x28, #0x1
   137c4:	sub	x7, x7, #0x1
   137c8:	add	x10, x10, #0x1
   137cc:	b	137a4 <ZSTD_compress@@Base+0x4f58>
   137d0:	ldr	x3, [sp, #144]
   137d4:	mov	x2, x28
   137d8:	mov	x1, x27
   137dc:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   137e0:	b	13464 <ZSTD_compress@@Base+0x4c18>
   137e4:	mov	w0, w18
   137e8:	mov	w18, w24
   137ec:	mov	w24, w0
   137f0:	b	13284 <ZSTD_compress@@Base+0x4a38>
   137f4:	ldr	x3, [sp, #144]
   137f8:	mov	x2, x22
   137fc:	mov	x1, x22
   13800:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   13804:	b	13304 <ZSTD_compress@@Base+0x4ab8>
   13808:	cmp	w6, w1
   1380c:	b.ls	13814 <ZSTD_compress@@Base+0x4fc8>  // b.plast
   13810:	sub	w14, w2, w1
   13814:	sub	w1, w14, #0x1
   13818:	str	w1, [sp, #200]
   1381c:	sub	x1, x13, #0x8
   13820:	str	x1, [sp, #152]
   13824:	ldr	x20, [x0, #8]
   13828:	add	x21, x15, w14, uxtw
   1382c:	ldr	x1, [x0, #48]
   13830:	str	x1, [sp, #160]
   13834:	ldr	w22, [x0, #24]
   13838:	ldr	x1, [x0, #64]
   1383c:	str	x1, [sp, #184]
   13840:	ldr	x23, [x0], #184
   13844:	add	x1, x20, x22
   13848:	str	x1, [sp, #136]
   1384c:	sub	x1, x23, x20
   13850:	str	w1, [sp, #168]
   13854:	add	w2, w1, #0x1
   13858:	sub	w1, w14, w1
   1385c:	str	w1, [sp, #176]
   13860:	ldr	w1, [x0, #8]
   13864:	ldr	w0, [x0, #4]
   13868:	str	w1, [sp, #180]
   1386c:	ldr	w1, [sp, #136]
   13870:	str	w0, [sp, #192]
   13874:	sub	x0, x27, x21
   13878:	add	x0, x23, x0
   1387c:	str	w2, [sp, #204]
   13880:	cmp	w0, w1
   13884:	sub	x0, x13, #0x20
   13888:	cinc	x22, x27, eq  // eq = none
   1388c:	str	x0, [sp, #144]
   13890:	ldr	x0, [sp, #152]
   13894:	cmp	x0, x22
   13898:	b.ls	127c8 <ZSTD_compress@@Base+0x3f7c>  // b.plast
   1389c:	ldr	w1, [sp, #120]
   138a0:	mov	w2, #0x8                   	// #8
   138a4:	mov	x0, x22
   138a8:	bl	f580 <ZSTD_compress@@Base+0xd34>
   138ac:	mov	x9, x0
   138b0:	ldr	w1, [sp, #124]
   138b4:	mov	w2, #0x7                   	// #7
   138b8:	mov	x0, x22
   138bc:	bl	f580 <ZSTD_compress@@Base+0xd34>
   138c0:	mov	x8, x0
   138c4:	ldr	w1, [sp, #180]
   138c8:	mov	w2, #0x8                   	// #8
   138cc:	mov	x0, x22
   138d0:	bl	f580 <ZSTD_compress@@Base+0xd34>
   138d4:	mov	x7, x0
   138d8:	ldr	w1, [sp, #192]
   138dc:	mov	w2, #0x7                   	// #7
   138e0:	mov	x0, x22
   138e4:	bl	f580 <ZSTD_compress@@Base+0xd34>
   138e8:	lsl	x3, x9, #2
   138ec:	ldp	x1, x5, [sp, #104]
   138f0:	lsl	x4, x8, #2
   138f4:	sub	x26, x22, x15
   138f8:	ldr	w9, [x1, x3]
   138fc:	ldr	x1, [sp, #112]
   13900:	ldr	w24, [x1, x4]
   13904:	mov	w1, #0x1                   	// #1
   13908:	str	w26, [x5, x4]
   1390c:	sub	w2, w1, w25
   13910:	ldr	x4, [sp, #104]
   13914:	add	w2, w2, w26
   13918:	ldr	w1, [sp, #168]
   1391c:	cmp	w14, w2
   13920:	add	x10, x15, w2, uxtw
   13924:	sub	w1, w1, w14
   13928:	str	w26, [x4, x3]
   1392c:	ldr	w3, [sp, #200]
   13930:	add	w1, w1, w2
   13934:	add	x1, x20, x1
   13938:	sub	w3, w3, w2
   1393c:	csel	x1, x10, x1, ls  // ls = plast
   13940:	cmp	w3, #0x2
   13944:	b.ls	13c0c <ZSTD_compress@@Base+0x53c0>  // b.plast
   13948:	ldr	w3, [x1]
   1394c:	ldur	w4, [x22, #1]
   13950:	cmp	w4, w3
   13954:	b.ne	13c0c <ZSTD_compress@@Base+0x53c0>  // b.any
   13958:	cmp	w14, w2
   1395c:	add	x1, x1, #0x4
   13960:	csel	x3, x23, x13, hi  // hi = pmore
   13964:	mov	x4, x21
   13968:	mov	x2, x13
   1396c:	add	x0, x22, #0x5
   13970:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   13974:	add	x28, x22, #0x1
   13978:	ldr	x1, [sp, #144]
   1397c:	add	x10, x0, #0x4
   13980:	add	x8, x0, #0x1
   13984:	sub	x9, x28, x27
   13988:	cmp	x28, x1
   1398c:	ldr	x0, [x19, #24]
   13990:	b.hi	13bf8 <ZSTD_compress@@Base+0x53ac>  // b.pmore
   13994:	ldp	x2, x3, [x27]
   13998:	stp	x2, x3, [x0]
   1399c:	cmp	x9, #0x10
   139a0:	b.ls	139ec <ZSTD_compress@@Base+0x51a0>  // b.plast
   139a4:	ldr	x2, [x19, #24]
   139a8:	ldp	x0, x1, [x27, #16]
   139ac:	add	x4, x2, x9
   139b0:	stp	x0, x1, [x2, #16]
   139b4:	ldp	x0, x1, [x27, #32]
   139b8:	stp	x0, x1, [x2, #32]
   139bc:	add	x1, x2, #0x30
   139c0:	cmp	x4, x1
   139c4:	b.ls	139ec <ZSTD_compress@@Base+0x51a0>  // b.plast
   139c8:	add	x27, x27, #0x30
   139cc:	ldp	x2, x3, [x27]
   139d0:	stp	x2, x3, [x1]
   139d4:	add	x1, x1, #0x20
   139d8:	ldp	x2, x3, [x27, #16]
   139dc:	stp	x2, x3, [x1, #-16]
   139e0:	add	x27, x27, #0x20
   139e4:	cmp	x4, x1
   139e8:	b.hi	139cc <ZSTD_compress@@Base+0x5180>  // b.pmore
   139ec:	ldr	x0, [x19, #24]
   139f0:	mov	x1, #0xffff                	// #65535
   139f4:	cmp	x9, x1
   139f8:	add	x0, x0, x9
   139fc:	str	x0, [x19, #24]
   13a00:	ldr	x0, [x19, #8]
   13a04:	b.ls	13a20 <ZSTD_compress@@Base+0x51d4>  // b.plast
   13a08:	mov	w1, #0x1                   	// #1
   13a0c:	str	w1, [x19, #72]
   13a10:	ldr	x1, [x19]
   13a14:	sub	x1, x0, x1
   13a18:	asr	x1, x1, #3
   13a1c:	str	w1, [x19, #76]
   13a20:	mov	w1, #0x1                   	// #1
   13a24:	str	w1, [x0]
   13a28:	strh	w9, [x0, #4]
   13a2c:	mov	x1, #0xffff                	// #65535
   13a30:	cmp	x8, x1
   13a34:	b.ls	13a50 <ZSTD_compress@@Base+0x5204>  // b.plast
   13a38:	mov	w1, #0x2                   	// #2
   13a3c:	str	w1, [x19, #72]
   13a40:	ldr	x1, [x19]
   13a44:	sub	x1, x0, x1
   13a48:	asr	x1, x1, #3
   13a4c:	str	w1, [x19, #76]
   13a50:	mov	w24, w25
   13a54:	strh	w8, [x0, #6]
   13a58:	add	x0, x0, #0x8
   13a5c:	str	x0, [x19, #8]
   13a60:	ldr	x0, [sp, #152]
   13a64:	add	x22, x28, x10
   13a68:	cmp	x0, x22
   13a6c:	b.cc	13bf0 <ZSTD_compress@@Base+0x53a4>  // b.lo, b.ul, b.last
   13a70:	ldr	w1, [sp, #120]
   13a74:	add	w7, w26, #0x2
   13a78:	add	w26, w26, #0x2
   13a7c:	mov	w2, #0x8                   	// #8
   13a80:	add	x26, x15, x26
   13a84:	mov	x27, #0xffff                	// #65535
   13a88:	mov	x0, x26
   13a8c:	mov	w28, #0x2                   	// #2
   13a90:	bl	f580 <ZSTD_compress@@Base+0xd34>
   13a94:	ldr	x1, [sp, #104]
   13a98:	mov	w2, #0x8                   	// #8
   13a9c:	str	w7, [x1, x0, lsl #2]
   13aa0:	sub	x0, x22, #0x2
   13aa4:	ldr	w1, [sp, #120]
   13aa8:	sub	x9, x0, x15
   13aac:	bl	f580 <ZSTD_compress@@Base+0xd34>
   13ab0:	ldr	x1, [sp, #104]
   13ab4:	mov	w2, #0x7                   	// #7
   13ab8:	str	w9, [x1, x0, lsl #2]
   13abc:	mov	x0, x26
   13ac0:	ldr	w1, [sp, #124]
   13ac4:	bl	f580 <ZSTD_compress@@Base+0xd34>
   13ac8:	ldr	x1, [sp, #112]
   13acc:	mov	w2, #0x7                   	// #7
   13ad0:	str	w7, [x1, x0, lsl #2]
   13ad4:	sub	x0, x22, #0x1
   13ad8:	ldr	w1, [sp, #124]
   13adc:	sub	x7, x0, x15
   13ae0:	bl	f580 <ZSTD_compress@@Base+0xd34>
   13ae4:	ldr	w26, [sp, #176]
   13ae8:	ldr	x1, [sp, #112]
   13aec:	str	w7, [x1, x0, lsl #2]
   13af0:	sub	x25, x22, x15
   13af4:	sub	w0, w25, w18
   13af8:	sub	w3, w25, w18
   13afc:	sub	x1, x0, x26
   13b00:	cmp	w14, w3
   13b04:	add	x2, x20, x1
   13b08:	add	x1, x15, x0
   13b0c:	ldr	w0, [sp, #200]
   13b10:	csel	x1, x1, x2, ls  // ls = plast
   13b14:	add	w0, w0, w18
   13b18:	sub	w0, w0, w25
   13b1c:	cmp	w0, #0x2
   13b20:	b.ls	13bf0 <ZSTD_compress@@Base+0x53a4>  // b.plast
   13b24:	ldr	w0, [x1]
   13b28:	ldr	w2, [x22]
   13b2c:	cmp	w2, w0
   13b30:	b.ne	13bf0 <ZSTD_compress@@Base+0x53a4>  // b.any
   13b34:	cmp	w14, w3
   13b38:	add	x1, x1, #0x4
   13b3c:	csel	x3, x23, x13, hi  // hi = pmore
   13b40:	mov	x4, x21
   13b44:	mov	x2, x13
   13b48:	add	x0, x22, #0x4
   13b4c:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   13b50:	add	x9, x0, #0x4
   13b54:	ldr	x1, [sp, #144]
   13b58:	add	x10, x0, #0x1
   13b5c:	ldr	x0, [x19, #24]
   13b60:	cmp	x1, x22
   13b64:	b.cc	14060 <ZSTD_compress@@Base+0x5814>  // b.lo, b.ul, b.last
   13b68:	ldp	x2, x3, [x22]
   13b6c:	stp	x2, x3, [x0]
   13b70:	mov	w1, #0x1                   	// #1
   13b74:	ldr	x0, [x19, #8]
   13b78:	cmp	x10, x27
   13b7c:	str	w1, [x0]
   13b80:	strh	wzr, [x0, #4]
   13b84:	b.ls	13b98 <ZSTD_compress@@Base+0x534c>  // b.plast
   13b88:	ldr	x1, [x19]
   13b8c:	sub	x1, x0, x1
   13b90:	asr	x1, x1, #3
   13b94:	stp	w28, w1, [x19, #72]
   13b98:	ldr	w1, [sp, #124]
   13b9c:	add	x0, x0, #0x8
   13ba0:	sturh	w10, [x0, #-2]
   13ba4:	mov	w2, #0x7                   	// #7
   13ba8:	str	x0, [x19, #8]
   13bac:	mov	x0, x22
   13bb0:	bl	f580 <ZSTD_compress@@Base+0xd34>
   13bb4:	ldr	x1, [sp, #112]
   13bb8:	mov	w2, #0x8                   	// #8
   13bbc:	str	w25, [x1, x0, lsl #2]
   13bc0:	mov	x0, x22
   13bc4:	ldr	w1, [sp, #120]
   13bc8:	bl	f580 <ZSTD_compress@@Base+0xd34>
   13bcc:	add	x22, x22, x9
   13bd0:	ldr	x1, [sp, #104]
   13bd4:	str	w25, [x1, x0, lsl #2]
   13bd8:	ldr	x0, [sp, #152]
   13bdc:	cmp	x0, x22
   13be0:	b.cs	14050 <ZSTD_compress@@Base+0x5804>  // b.hs, b.nlast
   13be4:	mov	w0, w24
   13be8:	mov	w24, w18
   13bec:	mov	w18, w0
   13bf0:	mov	x27, x22
   13bf4:	b	13efc <ZSTD_compress@@Base+0x56b0>
   13bf8:	ldr	x3, [sp, #144]
   13bfc:	mov	x2, x28
   13c00:	mov	x1, x27
   13c04:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   13c08:	b	139ec <ZSTD_compress@@Base+0x51a0>
   13c0c:	cmp	w14, w9
   13c10:	b.cs	13d58 <ZSTD_compress@@Base+0x550c>  // b.hs, b.nlast
   13c14:	ldr	x1, [x15, w9, uxtw]
   13c18:	add	x7, x15, w9, uxtw
   13c1c:	ldr	x2, [x22]
   13c20:	cmp	x2, x1
   13c24:	b.ne	13dec <ZSTD_compress@@Base+0x55a0>  // b.any
   13c28:	mov	x2, x13
   13c2c:	add	x1, x7, #0x8
   13c30:	add	x0, x22, #0x8
   13c34:	mov	x28, x22
   13c38:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   13c3c:	add	x10, x0, #0x8
   13c40:	sub	w24, w22, w7
   13c44:	cmp	x27, x28
   13c48:	ccmp	x21, x7, #0x2, cc  // cc = lo, ul, last
   13c4c:	b.cs	13c60 <ZSTD_compress@@Base+0x5414>  // b.hs, b.nlast
   13c50:	ldurb	w1, [x28, #-1]
   13c54:	ldurb	w0, [x7, #-1]
   13c58:	cmp	w1, w0
   13c5c:	b.eq	13d48 <ZSTD_compress@@Base+0x54fc>  // b.none
   13c60:	ldr	x1, [sp, #144]
   13c64:	sub	x9, x28, x27
   13c68:	sub	x11, x10, #0x3
   13c6c:	cmp	x28, x1
   13c70:	ldr	x0, [x19, #24]
   13c74:	b.hi	1403c <ZSTD_compress@@Base+0x57f0>  // b.pmore
   13c78:	ldp	x2, x3, [x27]
   13c7c:	stp	x2, x3, [x0]
   13c80:	cmp	x9, #0x10
   13c84:	b.ls	13cd0 <ZSTD_compress@@Base+0x5484>  // b.plast
   13c88:	ldr	x2, [x19, #24]
   13c8c:	ldp	x0, x1, [x27, #16]
   13c90:	add	x4, x2, x9
   13c94:	stp	x0, x1, [x2, #16]
   13c98:	ldp	x0, x1, [x27, #32]
   13c9c:	stp	x0, x1, [x2, #32]
   13ca0:	add	x1, x2, #0x30
   13ca4:	cmp	x4, x1
   13ca8:	b.ls	13cd0 <ZSTD_compress@@Base+0x5484>  // b.plast
   13cac:	add	x27, x27, #0x30
   13cb0:	ldp	x2, x3, [x27]
   13cb4:	stp	x2, x3, [x1]
   13cb8:	add	x1, x1, #0x20
   13cbc:	ldp	x2, x3, [x27, #16]
   13cc0:	stp	x2, x3, [x1, #-16]
   13cc4:	add	x27, x27, #0x20
   13cc8:	cmp	x4, x1
   13ccc:	b.hi	13cb0 <ZSTD_compress@@Base+0x5464>  // b.pmore
   13cd0:	ldr	x0, [x19, #24]
   13cd4:	mov	x1, #0xffff                	// #65535
   13cd8:	cmp	x9, x1
   13cdc:	add	x0, x0, x9
   13ce0:	str	x0, [x19, #24]
   13ce4:	ldr	x0, [x19, #8]
   13ce8:	b.ls	13d04 <ZSTD_compress@@Base+0x54b8>  // b.plast
   13cec:	mov	w1, #0x1                   	// #1
   13cf0:	str	w1, [x19, #72]
   13cf4:	ldr	x1, [x19]
   13cf8:	sub	x1, x0, x1
   13cfc:	asr	x1, x1, #3
   13d00:	str	w1, [x19, #76]
   13d04:	add	w1, w24, #0x3
   13d08:	str	w1, [x0]
   13d0c:	strh	w9, [x0, #4]
   13d10:	mov	x1, #0xffff                	// #65535
   13d14:	cmp	x11, x1
   13d18:	b.ls	13d34 <ZSTD_compress@@Base+0x54e8>  // b.plast
   13d1c:	mov	w1, #0x2                   	// #2
   13d20:	str	w1, [x19, #72]
   13d24:	ldr	x1, [x19]
   13d28:	sub	x1, x0, x1
   13d2c:	asr	x1, x1, #3
   13d30:	str	w1, [x19, #76]
   13d34:	strh	w11, [x0, #6]
   13d38:	mov	w18, w25
   13d3c:	add	x0, x0, #0x8
   13d40:	str	x0, [x19, #8]
   13d44:	b	13a60 <ZSTD_compress@@Base+0x5214>
   13d48:	sub	x28, x28, #0x1
   13d4c:	sub	x7, x7, #0x1
   13d50:	add	x10, x10, #0x1
   13d54:	b	13c44 <ZSTD_compress@@Base+0x53f8>
   13d58:	ldr	x1, [sp, #160]
   13d5c:	ldr	x2, [sp, #136]
   13d60:	ldr	w28, [x1, x7, lsl #2]
   13d64:	mov	w1, w28
   13d68:	add	x7, x20, w28, uxtw
   13d6c:	cmp	x2, x7
   13d70:	b.cs	13dec <ZSTD_compress@@Base+0x55a0>  // b.hs, b.nlast
   13d74:	ldr	x1, [x20, x1]
   13d78:	ldr	x2, [x22]
   13d7c:	cmp	x2, x1
   13d80:	b.ne	13dec <ZSTD_compress@@Base+0x55a0>  // b.any
   13d84:	add	x1, x7, #0x8
   13d88:	mov	x4, x21
   13d8c:	mov	x3, x23
   13d90:	mov	x2, x13
   13d94:	add	x0, x22, #0x8
   13d98:	str	x7, [sp, #208]
   13d9c:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   13da0:	add	x10, x0, #0x8
   13da4:	ldr	w0, [sp, #168]
   13da8:	sub	w8, w26, w28
   13dac:	ldr	x7, [sp, #208]
   13db0:	sub	w18, w0, w14
   13db4:	mov	x28, x22
   13db8:	add	w24, w8, w18
   13dbc:	ldr	x0, [sp, #136]
   13dc0:	cmp	x27, x28
   13dc4:	ccmp	x0, x7, #0x2, cc  // cc = lo, ul, last
   13dc8:	b.cs	13c60 <ZSTD_compress@@Base+0x5414>  // b.hs, b.nlast
   13dcc:	ldurb	w1, [x28, #-1]
   13dd0:	ldurb	w0, [x7, #-1]
   13dd4:	cmp	w1, w0
   13dd8:	b.ne	13c60 <ZSTD_compress@@Base+0x5414>  // b.any
   13ddc:	sub	x28, x28, #0x1
   13de0:	sub	x7, x7, #0x1
   13de4:	add	x10, x10, #0x1
   13de8:	b	13dbc <ZSTD_compress@@Base+0x5570>
   13dec:	cmp	w14, w24
   13df0:	b.cs	13eb0 <ZSTD_compress@@Base+0x5664>  // b.hs, b.nlast
   13df4:	ldr	w0, [x15, w24, uxtw]
   13df8:	add	x7, x15, w24, uxtw
   13dfc:	ldr	w1, [x22]
   13e00:	cmp	w1, w0
   13e04:	b.ne	13ee8 <ZSTD_compress@@Base+0x569c>  // b.any
   13e08:	ldr	w1, [sp, #120]
   13e0c:	add	x28, x22, #0x1
   13e10:	mov	w2, #0x8                   	// #8
   13e14:	mov	x0, x28
   13e18:	str	x7, [sp, #208]
   13e1c:	bl	f580 <ZSTD_compress@@Base+0xd34>
   13e20:	mov	x9, x0
   13e24:	ldr	w1, [sp, #180]
   13e28:	mov	w2, #0x8                   	// #8
   13e2c:	mov	x0, x28
   13e30:	bl	f580 <ZSTD_compress@@Base+0xd34>
   13e34:	lsl	x1, x9, #2
   13e38:	ldr	x2, [sp, #104]
   13e3c:	add	w3, w26, #0x1
   13e40:	ldr	x4, [sp, #104]
   13e44:	ldr	w2, [x2, x1]
   13e48:	ldr	x7, [sp, #208]
   13e4c:	str	w3, [x4, x1]
   13e50:	cmp	w14, w2
   13e54:	b.cs	13f04 <ZSTD_compress@@Base+0x56b8>  // b.hs, b.nlast
   13e58:	ldr	x0, [x15, w2, uxtw]
   13e5c:	add	x9, x15, w2, uxtw
   13e60:	ldur	x1, [x22, #1]
   13e64:	cmp	x1, x0
   13e68:	b.ne	13f94 <ZSTD_compress@@Base+0x5748>  // b.any
   13e6c:	mov	x2, x13
   13e70:	add	x1, x9, #0x8
   13e74:	add	x0, x22, #0x9
   13e78:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   13e7c:	add	x10, x0, #0x8
   13e80:	sub	w24, w28, w9
   13e84:	cmp	x27, x28
   13e88:	ccmp	x21, x9, #0x2, cc  // cc = lo, ul, last
   13e8c:	b.cs	13c60 <ZSTD_compress@@Base+0x5414>  // b.hs, b.nlast
   13e90:	ldurb	w1, [x28, #-1]
   13e94:	ldurb	w0, [x9, #-1]
   13e98:	cmp	w1, w0
   13e9c:	b.ne	13c60 <ZSTD_compress@@Base+0x5414>  // b.any
   13ea0:	sub	x28, x28, #0x1
   13ea4:	sub	x9, x9, #0x1
   13ea8:	add	x10, x10, #0x1
   13eac:	b	13e84 <ZSTD_compress@@Base+0x5638>
   13eb0:	ldr	x1, [sp, #184]
   13eb4:	ldr	w8, [x1, x0, lsl #2]
   13eb8:	ldr	x1, [sp, #136]
   13ebc:	mov	w0, w8
   13ec0:	add	x7, x20, w8, uxtw
   13ec4:	cmp	x1, x7
   13ec8:	b.cs	13ee8 <ZSTD_compress@@Base+0x569c>  // b.hs, b.nlast
   13ecc:	ldr	w0, [x20, x0]
   13ed0:	ldr	w1, [x22]
   13ed4:	cmp	w1, w0
   13ed8:	b.ne	13ee8 <ZSTD_compress@@Base+0x569c>  // b.any
   13edc:	ldr	w0, [sp, #176]
   13ee0:	add	w24, w0, w8
   13ee4:	b	13e08 <ZSTD_compress@@Base+0x55bc>
   13ee8:	sub	x0, x22, x27
   13eec:	mov	w24, w25
   13ef0:	asr	x0, x0, #8
   13ef4:	add	x0, x0, #0x1
   13ef8:	add	x22, x22, x0
   13efc:	mov	w25, w24
   13f00:	b	13890 <ZSTD_compress@@Base+0x5044>
   13f04:	ldr	x1, [sp, #160]
   13f08:	ldr	w18, [x1, x0, lsl #2]
   13f0c:	ldr	x1, [sp, #136]
   13f10:	mov	w0, w18
   13f14:	add	x9, x20, w18, uxtw
   13f18:	cmp	x1, x9
   13f1c:	b.cs	13f94 <ZSTD_compress@@Base+0x5748>  // b.hs, b.nlast
   13f20:	ldr	x0, [x20, x0]
   13f24:	ldur	x1, [x22, #1]
   13f28:	cmp	x1, x0
   13f2c:	b.ne	13f94 <ZSTD_compress@@Base+0x5748>  // b.any
   13f30:	add	x1, x9, #0x8
   13f34:	mov	x4, x21
   13f38:	mov	x3, x23
   13f3c:	mov	x2, x13
   13f40:	add	x0, x22, #0x9
   13f44:	str	x9, [sp, #208]
   13f48:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   13f4c:	add	x10, x0, #0x8
   13f50:	ldr	w0, [sp, #204]
   13f54:	sub	w8, w26, w18
   13f58:	ldr	x9, [sp, #208]
   13f5c:	sub	w18, w0, w14
   13f60:	add	w24, w8, w18
   13f64:	ldr	x0, [sp, #136]
   13f68:	cmp	x27, x28
   13f6c:	ccmp	x0, x9, #0x2, cc  // cc = lo, ul, last
   13f70:	b.cs	13c60 <ZSTD_compress@@Base+0x5414>  // b.hs, b.nlast
   13f74:	ldurb	w1, [x28, #-1]
   13f78:	ldurb	w0, [x9, #-1]
   13f7c:	cmp	w1, w0
   13f80:	b.ne	13c60 <ZSTD_compress@@Base+0x5414>  // b.any
   13f84:	sub	x28, x28, #0x1
   13f88:	sub	x9, x9, #0x1
   13f8c:	add	x10, x10, #0x1
   13f90:	b	13f64 <ZSTD_compress@@Base+0x5718>
   13f94:	str	x7, [sp, #208]
   13f98:	add	x0, x22, #0x4
   13f9c:	add	x1, x7, #0x4
   13fa0:	cmp	w14, w24
   13fa4:	b.ls	13ff8 <ZSTD_compress@@Base+0x57ac>  // b.plast
   13fa8:	mov	x4, x21
   13fac:	mov	x3, x23
   13fb0:	mov	x2, x13
   13fb4:	bl	f6ec <ZSTD_compress@@Base+0xea0>
   13fb8:	ldr	x7, [sp, #208]
   13fbc:	add	x10, x0, #0x4
   13fc0:	sub	w24, w26, w24
   13fc4:	mov	x28, x22
   13fc8:	ldr	x0, [sp, #136]
   13fcc:	cmp	x27, x28
   13fd0:	ccmp	x0, x7, #0x2, cc  // cc = lo, ul, last
   13fd4:	b.cs	13c60 <ZSTD_compress@@Base+0x5414>  // b.hs, b.nlast
   13fd8:	ldurb	w1, [x28, #-1]
   13fdc:	ldurb	w0, [x7, #-1]
   13fe0:	cmp	w1, w0
   13fe4:	b.ne	13c60 <ZSTD_compress@@Base+0x5414>  // b.any
   13fe8:	sub	x28, x28, #0x1
   13fec:	sub	x7, x7, #0x1
   13ff0:	add	x10, x10, #0x1
   13ff4:	b	13fc8 <ZSTD_compress@@Base+0x577c>
   13ff8:	mov	x2, x13
   13ffc:	bl	f60c <ZSTD_compress@@Base+0xdc0>
   14000:	ldr	x7, [sp, #208]
   14004:	add	x10, x0, #0x4
   14008:	mov	x28, x22
   1400c:	sub	w24, w22, w7
   14010:	cmp	x27, x28
   14014:	ccmp	x21, x7, #0x2, cc  // cc = lo, ul, last
   14018:	b.cs	13c60 <ZSTD_compress@@Base+0x5414>  // b.hs, b.nlast
   1401c:	ldurb	w1, [x28, #-1]
   14020:	ldurb	w0, [x7, #-1]
   14024:	cmp	w1, w0
   14028:	b.ne	13c60 <ZSTD_compress@@Base+0x5414>  // b.any
   1402c:	sub	x28, x28, #0x1
   14030:	sub	x7, x7, #0x1
   14034:	add	x10, x10, #0x1
   14038:	b	14010 <ZSTD_compress@@Base+0x57c4>
   1403c:	ldr	x3, [sp, #144]
   14040:	mov	x2, x28
   14044:	mov	x1, x27
   14048:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   1404c:	b	13cd0 <ZSTD_compress@@Base+0x5484>
   14050:	mov	w0, w18
   14054:	mov	w18, w24
   14058:	mov	w24, w0
   1405c:	b	13af0 <ZSTD_compress@@Base+0x52a4>
   14060:	ldr	x3, [sp, #144]
   14064:	mov	x2, x22
   14068:	mov	x1, x22
   1406c:	bl	f500 <ZSTD_compress@@Base+0xcb4>
   14070:	b	13b70 <ZSTD_compress@@Base+0x5324>
   14074:	ldr	w5, [x0, #200]
   14078:	cmp	w5, #0x6
   1407c:	b.eq	14094 <ZSTD_compress@@Base+0x5848>  // b.none
   14080:	cmp	w5, #0x7
   14084:	b.eq	14094 <ZSTD_compress@@Base+0x5848>  // b.none
   14088:	cmp	w5, #0x5
   1408c:	b.eq	14094 <ZSTD_compress@@Base+0x5848>  // b.none
   14090:	mov	w5, #0x4                   	// #4
   14094:	b	f74c <ZSTD_compress@@Base+0xf00>
   14098:	cmp	x1, x3
   1409c:	b.ls	140bc <ZSTD_compress@@Base+0x5870>  // b.plast
   140a0:	mov	x3, x1
   140a4:	mov	x4, x0
   140a8:	mov	x0, #0x0                   	// #0
   140ac:	add	x1, x3, x0
   140b0:	cmp	x2, x1
   140b4:	b.hi	14108 <ZSTD_compress@@Base+0x58bc>  // b.pmore
   140b8:	ret
   140bc:	ldp	x6, x7, [x1]
   140c0:	stp	x6, x7, [x0]
   140c4:	sub	x4, x3, x1
   140c8:	ldp	x6, x7, [x1, #16]
   140cc:	stp	x6, x7, [x0, #16]
   140d0:	add	x4, x0, x4
   140d4:	add	x0, x0, #0x20
   140d8:	cmp	x4, x0
   140dc:	b.ls	140a8 <ZSTD_compress@@Base+0x585c>  // b.plast
   140e0:	add	x1, x1, #0x20
   140e4:	ldp	x6, x7, [x1]
   140e8:	stp	x6, x7, [x0]
   140ec:	add	x0, x0, #0x20
   140f0:	ldp	x6, x7, [x1, #16]
   140f4:	stp	x6, x7, [x0, #-16]
   140f8:	add	x1, x1, #0x20
   140fc:	cmp	x4, x0
   14100:	b.hi	140e4 <ZSTD_compress@@Base+0x5898>  // b.pmore
   14104:	b	140a8 <ZSTD_compress@@Base+0x585c>
   14108:	ldrb	w1, [x3, x0]
   1410c:	strb	w1, [x4, x0]
   14110:	add	x0, x0, #0x1
   14114:	b	140ac <ZSTD_compress@@Base+0x5860>
   14118:	sub	w2, w2, #0x5
   1411c:	mov	x3, x0
   14120:	cmp	w2, #0x3
   14124:	b.hi	14148 <ZSTD_compress@@Base+0x58fc>  // b.pmore
   14128:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   1412c:	mov	w4, #0x40                  	// #64
   14130:	add	x0, x0, #0x4bc
   14134:	ldr	x3, [x3]
   14138:	ldrb	w0, [x0, w2, uxtw]
   1413c:	adr	x2, 14148 <ZSTD_compress@@Base+0x58fc>
   14140:	add	x0, x2, w0, sxtb #2
   14144:	br	x0
   14148:	ldr	w0, [x0]
   1414c:	mov	w2, #0x79b1                	// #31153
   14150:	movk	w2, #0x9e37, lsl #16
   14154:	neg	w1, w1
   14158:	mul	w0, w0, w2
   1415c:	lsr	w0, w0, w1
   14160:	mov	w0, w0
   14164:	ret
   14168:	mov	x0, #0xbb000000            	// #3137339392
   1416c:	movk	x0, #0xbcdc, lsl #32
   14170:	movk	x0, #0xcf1b, lsl #48
   14174:	mul	x3, x3, x0
   14178:	sub	w0, w4, w1
   1417c:	lsr	x0, x3, x0
   14180:	b	14164 <ZSTD_compress@@Base+0x5918>
   14184:	mov	x0, #0xbf9b0000            	// #3214606336
   14188:	b	1416c <ZSTD_compress@@Base+0x5920>
   1418c:	mov	x0, #0x6300                	// #25344
   14190:	movk	x0, #0xbfa5, lsl #16
   14194:	b	1416c <ZSTD_compress@@Base+0x5920>
   14198:	mov	x0, #0x6463                	// #25699
   1419c:	movk	x0, #0xb7a5, lsl #16
   141a0:	b	1416c <ZSTD_compress@@Base+0x5920>
   141a4:	sub	x5, x2, #0x7
   141a8:	cmp	x0, x5
   141ac:	b.cs	1427c <ZSTD_compress@@Base+0x5a30>  // b.hs, b.nlast
   141b0:	ldr	x4, [x0]
   141b4:	ldr	x3, [x1]
   141b8:	cmp	x3, x4
   141bc:	b.eq	141d4 <ZSTD_compress@@Base+0x5988>  // b.none
   141c0:	eor	x0, x3, x4
   141c4:	rbit	x0, x0
   141c8:	clz	x0, x0
   141cc:	lsr	x0, x0, #3
   141d0:	ret
   141d4:	add	x3, x0, #0x8
   141d8:	add	x1, x1, #0x8
   141dc:	cmp	x3, x5
   141e0:	b.cc	1424c <ZSTD_compress@@Base+0x5a00>  // b.lo, b.ul, b.last
   141e4:	sub	x4, x2, #0x3
   141e8:	cmp	x3, x4
   141ec:	b.cs	14208 <ZSTD_compress@@Base+0x59bc>  // b.hs, b.nlast
   141f0:	ldr	w4, [x1]
   141f4:	ldr	w5, [x3]
   141f8:	cmp	w5, w4
   141fc:	b.ne	14208 <ZSTD_compress@@Base+0x59bc>  // b.any
   14200:	add	x3, x3, #0x4
   14204:	add	x1, x1, #0x4
   14208:	sub	x4, x2, #0x1
   1420c:	cmp	x3, x4
   14210:	b.cs	1422c <ZSTD_compress@@Base+0x59e0>  // b.hs, b.nlast
   14214:	ldrh	w5, [x3]
   14218:	ldrh	w4, [x1]
   1421c:	cmp	w5, w4
   14220:	b.ne	1422c <ZSTD_compress@@Base+0x59e0>  // b.any
   14224:	add	x3, x3, #0x2
   14228:	add	x1, x1, #0x2
   1422c:	cmp	x3, x2
   14230:	b.cs	14274 <ZSTD_compress@@Base+0x5a28>  // b.hs, b.nlast
   14234:	ldrb	w2, [x1]
   14238:	ldrb	w1, [x3]
   1423c:	cmp	w2, w1
   14240:	b.ne	14274 <ZSTD_compress@@Base+0x5a28>  // b.any
   14244:	add	x3, x3, #0x1
   14248:	b	14274 <ZSTD_compress@@Base+0x5a28>
   1424c:	ldr	x4, [x1]
   14250:	ldr	x6, [x3]
   14254:	cmp	x4, x6
   14258:	b.ne	14264 <ZSTD_compress@@Base+0x5a18>  // b.any
   1425c:	add	x3, x3, #0x8
   14260:	b	141d8 <ZSTD_compress@@Base+0x598c>
   14264:	eor	x4, x4, x6
   14268:	rbit	x4, x4
   1426c:	clz	x4, x4
   14270:	add	x3, x3, x4, lsr #3
   14274:	sub	x0, x3, x0
   14278:	b	141d0 <ZSTD_compress@@Base+0x5984>
   1427c:	mov	x3, x0
   14280:	b	141e4 <ZSTD_compress@@Base+0x5998>
   14284:	mov	x9, x2
   14288:	sub	x2, x3, x1
   1428c:	add	x2, x0, x2
   14290:	mov	x8, x1
   14294:	cmp	x9, x2
   14298:	mov	x11, x3
   1429c:	mov	x10, x0
   142a0:	mov	x12, x4
   142a4:	stp	x29, x30, [sp, #-16]!
   142a8:	csel	x2, x9, x2, cc  // cc = lo, ul, last
   142ac:	mov	x29, sp
   142b0:	bl	141a4 <ZSTD_compress@@Base+0x5958>
   142b4:	add	x8, x8, x0
   142b8:	mov	x7, x0
   142bc:	cmp	x11, x8
   142c0:	b.ne	142d8 <ZSTD_compress@@Base+0x5a8c>  // b.any
   142c4:	mov	x2, x9
   142c8:	mov	x1, x12
   142cc:	add	x0, x10, x0
   142d0:	bl	141a4 <ZSTD_compress@@Base+0x5958>
   142d4:	add	x7, x7, x0
   142d8:	mov	x0, x7
   142dc:	ldp	x29, x30, [sp], #16
   142e0:	ret
   142e4:	stp	x29, x30, [sp, #-176]!
   142e8:	add	x14, x3, x4
   142ec:	mov	x13, x3
   142f0:	mov	x29, sp
   142f4:	stp	x23, x24, [sp, #48]
   142f8:	ldr	w23, [x0, #204]
   142fc:	ldr	x15, [x0, #8]
   14300:	cmp	w23, #0x0
   14304:	stp	x25, x26, [sp, #64]
   14308:	mov	x25, x1
   1430c:	cinc	w1, w23, eq  // eq = none
   14310:	ldr	w7, [x0, #184]
   14314:	ldr	w23, [x0, #28]
   14318:	str	x2, [sp, #104]
   1431c:	str	w1, [sp, #148]
   14320:	sub	x1, x3, x15
   14324:	add	w1, w1, w4
   14328:	sub	x4, x14, #0x8
   1432c:	ldr	w8, [x0, #32]
   14330:	mov	w3, #0x1                   	// #1
   14334:	stp	x21, x22, [sp, #32]
   14338:	mov	w21, w5
   1433c:	sub	w5, w1, w23
   14340:	str	x4, [sp, #96]
   14344:	lsl	w7, w3, w7
   14348:	ldr	x4, [sp, #104]
   1434c:	cmp	w7, w5
   14350:	sub	w2, w1, w7
   14354:	ldr	w18, [x0, #24]
   14358:	csel	w5, w2, w23, cc  // cc = lo, ul, last
   1435c:	cmp	w8, #0x0
   14360:	stp	x19, x20, [sp, #16]
   14364:	csel	w23, w23, w5, ne  // ne = any
   14368:	ldr	w22, [x0, #192]
   1436c:	stp	x27, x28, [sp, #80]
   14370:	cmp	w18, w23
   14374:	ldp	w27, w24, [x4]
   14378:	ldr	x20, [x0, #48]
   1437c:	b.ls	143d4 <ZSTD_compress@@Base+0x5b88>  // b.plast
   14380:	ldr	x0, [x0, #16]
   14384:	str	x0, [sp, #112]
   14388:	mov	x7, x13
   1438c:	sub	x26, x14, #0x20
   14390:	str	w3, [sp, #124]
   14394:	add	x0, x0, w23, uxtw
   14398:	str	x0, [sp, #152]
   1439c:	sub	w0, w18, #0x1
   143a0:	str	w0, [sp, #144]
   143a4:	add	x0, x15, w18, uxtw
   143a8:	str	x0, [sp, #128]
   143ac:	ldr	x0, [sp, #112]
   143b0:	add	x0, x0, w18, uxtw
   143b4:	str	x0, [sp, #136]
   143b8:	ldr	x0, [sp, #96]
   143bc:	cmp	x13, x0
   143c0:	b.cc	147d4 <ZSTD_compress@@Base+0x5f88>  // b.lo, b.ul, b.last
   143c4:	ldr	x0, [sp, #104]
   143c8:	stp	w27, w24, [x0]
   143cc:	sub	x0, x14, x7
   143d0:	b	1444c <ZSTD_compress@@Base+0x5c00>
   143d4:	sub	w1, w1, w18
   143d8:	ldr	w0, [sp, #148]
   143dc:	cmp	w1, w7
   143e0:	csel	w18, w18, w2, ls  // ls = plast
   143e4:	add	w23, w0, #0x1
   143e8:	add	x12, x15, w18, uxtw
   143ec:	cmp	x13, x12
   143f0:	cinc	x28, x13, eq  // eq = none
   143f4:	sub	x0, x28, x12
   143f8:	add	x26, x28, #0x1
   143fc:	cmp	w24, w0
   14400:	b.ls	14468 <ZSTD_compress@@Base+0x5c1c>  // b.plast
   14404:	mov	w8, w24
   14408:	mov	w24, #0x0                   	// #0
   1440c:	cmp	w27, w0
   14410:	b.ls	1441c <ZSTD_compress@@Base+0x5bd0>  // b.plast
   14414:	mov	w8, w27
   14418:	mov	w27, #0x0                   	// #0
   1441c:	sub	x11, x14, #0x20
   14420:	mov	w19, #0x1                   	// #1
   14424:	ldr	x0, [sp, #96]
   14428:	cmp	x0, x26
   1442c:	b.hi	14470 <ZSTD_compress@@Base+0x5c24>  // b.pmore
   14430:	ldr	x0, [sp, #104]
   14434:	cmp	w27, #0x0
   14438:	csel	w27, w27, w8, ne  // ne = any
   1443c:	cmp	w24, #0x0
   14440:	csel	w8, w8, w24, eq  // eq = none
   14444:	stp	w27, w8, [x0]
   14448:	sub	x0, x14, x13
   1444c:	ldp	x19, x20, [sp, #16]
   14450:	ldp	x21, x22, [sp, #32]
   14454:	ldp	x23, x24, [sp, #48]
   14458:	ldp	x25, x26, [sp, #64]
   1445c:	ldp	x27, x28, [sp, #80]
   14460:	ldp	x29, x30, [sp], #176
   14464:	ret
   14468:	mov	w8, #0x0                   	// #0
   1446c:	b	1440c <ZSTD_compress@@Base+0x5bc0>
   14470:	add	x9, x28, #0x2
   14474:	mov	w2, w21
   14478:	mov	w1, w22
   1447c:	mov	x0, x28
   14480:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   14484:	mov	x5, x0
   14488:	ldr	w7, [x28]
   1448c:	mov	w2, w21
   14490:	mov	w1, w22
   14494:	mov	x0, x26
   14498:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   1449c:	lsl	x3, x5, #2
   144a0:	lsl	x0, x0, #2
   144a4:	ldr	w2, [x26]
   144a8:	sub	x10, x28, x15
   144ac:	sub	x1, x9, w27, uxtw
   144b0:	ldr	w4, [x20, x3]
   144b4:	cmp	w27, #0x0
   144b8:	ldr	w16, [x20, x0]
   144bc:	str	w10, [x20, x3]
   144c0:	sub	x3, x26, x15
   144c4:	str	w3, [x20, x0]
   144c8:	ldr	w0, [x1]
   144cc:	ldur	w3, [x28, #2]
   144d0:	ccmp	w3, w0, #0x0, ne  // ne = any
   144d4:	b.ne	14674 <ZSTD_compress@@Base+0x5e28>  // b.any
   144d8:	ldurb	w0, [x1, #-1]
   144dc:	mov	w26, #0x0                   	// #0
   144e0:	ldrb	w2, [x28, #1]
   144e4:	cmp	w2, w0
   144e8:	csetm	x0, eq  // eq = none
   144ec:	cset	x7, eq  // eq = none
   144f0:	add	x28, x9, x0
   144f4:	add	x1, x1, x0
   144f8:	mov	w9, w27
   144fc:	mov	w27, w24
   14500:	add	x0, x7, #0x4
   14504:	mov	x2, x14
   14508:	add	x1, x1, x0
   1450c:	add	x0, x28, x0
   14510:	bl	141a4 <ZSTD_compress@@Base+0x5958>
   14514:	add	x5, x7, x0
   14518:	add	x24, x5, #0x4
   1451c:	sub	x4, x28, x13
   14520:	add	x5, x5, #0x1
   14524:	cmp	x28, x11
   14528:	ldr	x0, [x25, #24]
   1452c:	b.hi	14708 <ZSTD_compress@@Base+0x5ebc>  // b.pmore
   14530:	ldp	x2, x3, [x13]
   14534:	stp	x2, x3, [x0]
   14538:	cmp	x4, #0x10
   1453c:	b.ls	14588 <ZSTD_compress@@Base+0x5d3c>  // b.plast
   14540:	ldr	x2, [x25, #24]
   14544:	ldp	x0, x1, [x13, #16]
   14548:	add	x30, x2, x4
   1454c:	stp	x0, x1, [x2, #16]
   14550:	ldp	x0, x1, [x13, #32]
   14554:	stp	x0, x1, [x2, #32]
   14558:	add	x1, x2, #0x30
   1455c:	cmp	x30, x1
   14560:	b.ls	14588 <ZSTD_compress@@Base+0x5d3c>  // b.plast
   14564:	add	x13, x13, #0x30
   14568:	ldp	x16, x17, [x13]
   1456c:	stp	x16, x17, [x1]
   14570:	add	x1, x1, #0x20
   14574:	ldp	x16, x17, [x13, #16]
   14578:	stp	x16, x17, [x1, #-16]
   1457c:	add	x13, x13, #0x20
   14580:	cmp	x30, x1
   14584:	b.hi	14568 <ZSTD_compress@@Base+0x5d1c>  // b.pmore
   14588:	ldr	x0, [x25, #24]
   1458c:	mov	x1, #0xffff                	// #65535
   14590:	cmp	x4, x1
   14594:	add	x0, x0, x4
   14598:	str	x0, [x25, #24]
   1459c:	ldr	x0, [x25, #8]
   145a0:	b.ls	145b4 <ZSTD_compress@@Base+0x5d68>  // b.plast
   145a4:	ldr	x1, [x25]
   145a8:	sub	x1, x0, x1
   145ac:	asr	x1, x1, #3
   145b0:	stp	w19, w1, [x25, #72]
   145b4:	add	w26, w26, #0x1
   145b8:	str	w26, [x0]
   145bc:	strh	w4, [x0, #4]
   145c0:	mov	x1, #0xffff                	// #65535
   145c4:	cmp	x5, x1
   145c8:	b.ls	145e4 <ZSTD_compress@@Base+0x5d98>  // b.plast
   145cc:	mov	w1, #0x2                   	// #2
   145d0:	str	w1, [x25, #72]
   145d4:	ldr	x1, [x25]
   145d8:	sub	x1, x0, x1
   145dc:	asr	x1, x1, #3
   145e0:	str	w1, [x25, #76]
   145e4:	add	x0, x0, #0x8
   145e8:	sturh	w5, [x0, #-2]
   145ec:	str	x0, [x25, #8]
   145f0:	add	x28, x28, x24
   145f4:	ldr	x0, [sp, #96]
   145f8:	add	x26, x28, #0x1
   145fc:	cmp	x0, x28
   14600:	b.cc	1466c <ZSTD_compress@@Base+0x5e20>  // b.lo, b.ul, b.last
   14604:	and	x0, x10, #0xffffffff
   14608:	mov	w2, w21
   1460c:	add	x0, x0, #0x2
   14610:	mov	w1, w22
   14614:	add	x0, x15, x0
   14618:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   1461c:	add	w10, w10, #0x2
   14620:	str	w10, [x20, x0, lsl #2]
   14624:	sub	x0, x28, #0x2
   14628:	mov	w2, w21
   1462c:	sub	x5, x0, x15
   14630:	mov	w1, w22
   14634:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   14638:	str	w5, [x20, x0, lsl #2]
   1463c:	mov	x10, #0xffff                	// #65535
   14640:	mov	w13, #0x2                   	// #2
   14644:	ldr	x0, [sp, #96]
   14648:	cmp	w27, #0x0
   1464c:	ccmp	x0, x28, #0x0, ne  // ne = any
   14650:	b.cc	1466c <ZSTD_compress@@Base+0x5e20>  // b.lo, b.ul, b.last
   14654:	sub	x0, x28, w27, uxtw
   14658:	mov	w1, w27
   1465c:	ldr	w2, [x0]
   14660:	ldr	w0, [x28]
   14664:	cmp	w2, w0
   14668:	b.eq	14724 <ZSTD_compress@@Base+0x5ed8>  // b.none
   1466c:	mov	x13, x28
   14670:	b	146bc <ZSTD_compress@@Base+0x5e70>
   14674:	cmp	w18, w4
   14678:	b.cs	1468c <ZSTD_compress@@Base+0x5e40>  // b.hs, b.nlast
   1467c:	ldr	w1, [x15, w4, uxtw]
   14680:	add	x0, x15, w4, uxtw
   14684:	cmp	w7, w1
   14688:	b.eq	146cc <ZSTD_compress@@Base+0x5e80>  // b.none
   1468c:	cmp	w18, w16
   14690:	b.cs	146a4 <ZSTD_compress@@Base+0x5e58>  // b.hs, b.nlast
   14694:	ldr	w1, [x15, w16, uxtw]
   14698:	add	x0, x15, w16, uxtw
   1469c:	cmp	w2, w1
   146a0:	b.eq	146c8 <ZSTD_compress@@Base+0x5e7c>  // b.none
   146a4:	sub	x0, x28, x13
   146a8:	mov	w9, w27
   146ac:	mov	w27, w24
   146b0:	add	x0, x23, x0, lsr #7
   146b4:	add	x28, x28, x0
   146b8:	add	x26, x26, x0
   146bc:	mov	w24, w27
   146c0:	mov	w27, w9
   146c4:	b	14424 <ZSTD_compress@@Base+0x5bd8>
   146c8:	mov	x28, x26
   146cc:	sub	x26, x28, x0
   146d0:	mov	x1, x0
   146d4:	mov	w9, w26
   146d8:	add	w26, w26, #0x2
   146dc:	cmp	x13, x28
   146e0:	sub	x7, x0, x1
   146e4:	ccmp	x12, x1, #0x2, cc  // cc = lo, ul, last
   146e8:	b.cs	14500 <ZSTD_compress@@Base+0x5cb4>  // b.hs, b.nlast
   146ec:	ldurb	w3, [x28, #-1]
   146f0:	ldurb	w2, [x1, #-1]
   146f4:	cmp	w3, w2
   146f8:	b.ne	14500 <ZSTD_compress@@Base+0x5cb4>  // b.any
   146fc:	sub	x28, x28, #0x1
   14700:	sub	x1, x1, #0x1
   14704:	b	146dc <ZSTD_compress@@Base+0x5e90>
   14708:	mov	x3, x11
   1470c:	mov	x2, x28
   14710:	mov	x1, x13
   14714:	str	x4, [sp, #112]
   14718:	bl	14098 <ZSTD_compress@@Base+0x584c>
   1471c:	ldr	x4, [sp, #112]
   14720:	b	14588 <ZSTD_compress@@Base+0x5d3c>
   14724:	mov	x0, #0x4                   	// #4
   14728:	sub	x1, x0, x1
   1472c:	mov	x2, x14
   14730:	add	x1, x28, x1
   14734:	add	x0, x28, x0
   14738:	bl	141a4 <ZSTD_compress@@Base+0x5958>
   1473c:	mov	x5, x0
   14740:	sub	x7, x28, x15
   14744:	mov	w2, w21
   14748:	mov	w1, w22
   1474c:	mov	x0, x28
   14750:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   14754:	add	x4, x5, #0x4
   14758:	str	w7, [x20, x0, lsl #2]
   1475c:	add	x24, x28, x4
   14760:	add	x26, x24, #0x1
   14764:	add	x5, x5, #0x1
   14768:	cmp	x11, x28
   1476c:	ldr	x0, [x25, #24]
   14770:	b.cc	147c0 <ZSTD_compress@@Base+0x5f74>  // b.lo, b.ul, b.last
   14774:	ldp	x2, x3, [x28]
   14778:	stp	x2, x3, [x0]
   1477c:	cmp	x5, x10
   14780:	ldr	x0, [x25, #8]
   14784:	str	w19, [x0]
   14788:	strh	wzr, [x0, #4]
   1478c:	b.ls	147a0 <ZSTD_compress@@Base+0x5f54>  // b.plast
   14790:	ldr	x1, [x25]
   14794:	sub	x1, x0, x1
   14798:	asr	x1, x1, #3
   1479c:	stp	w13, w1, [x25, #72]
   147a0:	add	x0, x0, #0x8
   147a4:	sturh	w5, [x0, #-2]
   147a8:	str	x0, [x25, #8]
   147ac:	mov	w0, w9
   147b0:	mov	x28, x24
   147b4:	mov	w9, w27
   147b8:	mov	w27, w0
   147bc:	b	14644 <ZSTD_compress@@Base+0x5df8>
   147c0:	mov	x3, x11
   147c4:	mov	x2, x28
   147c8:	mov	x1, x28
   147cc:	bl	14098 <ZSTD_compress@@Base+0x584c>
   147d0:	b	1477c <ZSTD_compress@@Base+0x5f30>
   147d4:	mov	w2, w21
   147d8:	mov	w1, w22
   147dc:	mov	x0, x13
   147e0:	str	x7, [sp, #160]
   147e4:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   147e8:	lsl	x0, x0, #2
   147ec:	ldr	x1, [sp, #112]
   147f0:	sub	x28, x13, x15
   147f4:	ldr	w19, [x20, x0]
   147f8:	str	w28, [x20, x0]
   147fc:	cmp	w18, w19
   14800:	ldr	w0, [sp, #144]
   14804:	csel	x3, x1, x15, hi  // hi = pmore
   14808:	ldr	w1, [sp, #124]
   1480c:	ldr	x7, [sp, #160]
   14810:	sub	w2, w1, w27
   14814:	ldr	x1, [sp, #112]
   14818:	add	w2, w2, w28
   1481c:	cmp	w18, w2
   14820:	sub	w0, w0, w2
   14824:	csel	x4, x1, x15, hi  // hi = pmore
   14828:	cmp	w0, #0x2
   1482c:	ccmp	w2, w23, #0x0, hi  // hi = pmore
   14830:	b.ls	14a9c <ZSTD_compress@@Base+0x6250>  // b.plast
   14834:	ldr	w0, [x4, w2, uxtw]
   14838:	add	x1, x4, w2, uxtw
   1483c:	ldur	w8, [x13, #1]
   14840:	cmp	w8, w0
   14844:	b.ne	14a9c <ZSTD_compress@@Base+0x6250>  // b.any
   14848:	ldp	x4, x0, [sp, #128]
   1484c:	cmp	w18, w2
   14850:	add	x1, x1, #0x4
   14854:	mov	x2, x14
   14858:	csel	x3, x0, x14, hi  // hi = pmore
   1485c:	add	x0, x13, #0x5
   14860:	bl	14284 <ZSTD_compress@@Base+0x5a38>
   14864:	add	x2, x13, #0x1
   14868:	ldr	x7, [sp, #160]
   1486c:	add	x10, x0, #0x4
   14870:	add	x8, x0, #0x1
   14874:	cmp	x2, x26
   14878:	sub	x9, x2, x7
   1487c:	ldr	x0, [x25, #24]
   14880:	b.hi	14a8c <ZSTD_compress@@Base+0x6240>  // b.pmore
   14884:	ldp	x12, x13, [x7]
   14888:	stp	x12, x13, [x0]
   1488c:	cmp	x9, #0x10
   14890:	b.ls	148dc <ZSTD_compress@@Base+0x6090>  // b.plast
   14894:	ldr	x3, [x25, #24]
   14898:	ldp	x0, x1, [x7, #16]
   1489c:	add	x4, x3, x9
   148a0:	stp	x0, x1, [x3, #16]
   148a4:	ldp	x0, x1, [x7, #32]
   148a8:	stp	x0, x1, [x3, #32]
   148ac:	add	x1, x3, #0x30
   148b0:	cmp	x4, x1
   148b4:	b.ls	148dc <ZSTD_compress@@Base+0x6090>  // b.plast
   148b8:	add	x7, x7, #0x30
   148bc:	ldp	x12, x13, [x7]
   148c0:	stp	x12, x13, [x1]
   148c4:	add	x1, x1, #0x20
   148c8:	ldp	x12, x13, [x7, #16]
   148cc:	stp	x12, x13, [x1, #-16]
   148d0:	add	x7, x7, #0x20
   148d4:	cmp	x4, x1
   148d8:	b.hi	148bc <ZSTD_compress@@Base+0x6070>  // b.pmore
   148dc:	ldr	x0, [x25, #24]
   148e0:	add	x0, x0, x9
   148e4:	str	x0, [x25, #24]
   148e8:	mov	x0, #0xffff                	// #65535
   148ec:	cmp	x9, x0
   148f0:	ldr	x0, [x25, #8]
   148f4:	b.ls	14910 <ZSTD_compress@@Base+0x60c4>  // b.plast
   148f8:	ldr	w1, [sp, #124]
   148fc:	str	w1, [x25, #72]
   14900:	ldr	x1, [x25]
   14904:	sub	x1, x0, x1
   14908:	asr	x1, x1, #3
   1490c:	str	w1, [x25, #76]
   14910:	ldr	w1, [sp, #124]
   14914:	str	w1, [x0]
   14918:	strh	w9, [x0, #4]
   1491c:	mov	x1, #0xffff                	// #65535
   14920:	cmp	x8, x1
   14924:	b.ls	14940 <ZSTD_compress@@Base+0x60f4>  // b.plast
   14928:	mov	w1, #0x2                   	// #2
   1492c:	str	w1, [x25, #72]
   14930:	ldr	x1, [x25]
   14934:	sub	x1, x0, x1
   14938:	asr	x1, x1, #3
   1493c:	str	w1, [x25, #76]
   14940:	add	x13, x2, x10
   14944:	mov	w19, w27
   14948:	strh	w8, [x0, #6]
   1494c:	add	x0, x0, #0x8
   14950:	str	x0, [x25, #8]
   14954:	ldr	x0, [sp, #96]
   14958:	cmp	x13, x0
   1495c:	b.hi	14a84 <ZSTD_compress@@Base+0x6238>  // b.pmore
   14960:	and	x0, x28, #0xffffffff
   14964:	mov	w2, w21
   14968:	add	x0, x0, #0x2
   1496c:	mov	w1, w22
   14970:	add	x0, x15, x0
   14974:	add	w28, w28, #0x2
   14978:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   1497c:	str	w28, [x20, x0, lsl #2]
   14980:	sub	x0, x13, #0x2
   14984:	mov	w2, w21
   14988:	sub	x7, x0, x15
   1498c:	mov	w1, w22
   14990:	mov	w28, #0x2                   	// #2
   14994:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   14998:	str	w7, [x20, x0, lsl #2]
   1499c:	ldr	x2, [sp, #112]
   149a0:	sub	x27, x13, x15
   149a4:	sub	w0, w27, w24
   149a8:	sub	w1, w27, w24
   149ac:	add	x2, x2, x1
   149b0:	cmp	w18, w0
   149b4:	add	x1, x15, x1
   149b8:	csel	x1, x1, x2, ls  // ls = plast
   149bc:	ldr	w2, [sp, #144]
   149c0:	add	w2, w2, w24
   149c4:	sub	w2, w2, w27
   149c8:	cmp	w2, #0x2
   149cc:	ccmp	w0, w23, #0x0, hi  // hi = pmore
   149d0:	b.ls	14a84 <ZSTD_compress@@Base+0x6238>  // b.plast
   149d4:	ldr	w2, [x1]
   149d8:	ldr	w3, [x13]
   149dc:	cmp	w3, w2
   149e0:	b.ne	14a84 <ZSTD_compress@@Base+0x6238>  // b.any
   149e4:	cmp	w18, w0
   149e8:	mov	x2, x14
   149ec:	ldp	x4, x0, [sp, #128]
   149f0:	add	x1, x1, #0x4
   149f4:	csel	x3, x0, x14, hi  // hi = pmore
   149f8:	add	x0, x13, #0x4
   149fc:	bl	14284 <ZSTD_compress@@Base+0x5a38>
   14a00:	add	x8, x0, #0x4
   14a04:	add	x9, x0, #0x1
   14a08:	cmp	x26, x13
   14a0c:	ldr	x0, [x25, #24]
   14a10:	b.cc	14c3c <ZSTD_compress@@Base+0x63f0>  // b.lo, b.ul, b.last
   14a14:	ldp	x2, x3, [x13]
   14a18:	stp	x2, x3, [x0]
   14a1c:	ldr	w1, [sp, #124]
   14a20:	ldr	x0, [x25, #8]
   14a24:	str	w1, [x0]
   14a28:	mov	x1, #0xffff                	// #65535
   14a2c:	strh	wzr, [x0, #4]
   14a30:	cmp	x9, x1
   14a34:	b.ls	14a48 <ZSTD_compress@@Base+0x61fc>  // b.plast
   14a38:	ldr	x1, [x25]
   14a3c:	sub	x1, x0, x1
   14a40:	asr	x1, x1, #3
   14a44:	stp	w28, w1, [x25, #72]
   14a48:	strh	w9, [x0, #6]
   14a4c:	add	x0, x0, #0x8
   14a50:	str	x0, [x25, #8]
   14a54:	mov	w2, w21
   14a58:	mov	x0, x13
   14a5c:	mov	w1, w22
   14a60:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   14a64:	str	w27, [x20, x0, lsl #2]
   14a68:	ldr	x0, [sp, #96]
   14a6c:	add	x13, x13, x8
   14a70:	cmp	x0, x13
   14a74:	mov	w0, w19
   14a78:	mov	w19, w24
   14a7c:	mov	w24, w0
   14a80:	b.cs	1499c <ZSTD_compress@@Base+0x6150>  // b.hs, b.nlast
   14a84:	mov	x7, x13
   14a88:	b	14acc <ZSTD_compress@@Base+0x6280>
   14a8c:	mov	x3, x26
   14a90:	mov	x1, x7
   14a94:	bl	14098 <ZSTD_compress@@Base+0x584c>
   14a98:	b	148dc <ZSTD_compress@@Base+0x6090>
   14a9c:	cmp	w19, w23
   14aa0:	b.cc	14ab8 <ZSTD_compress@@Base+0x626c>  // b.lo, b.ul, b.last
   14aa4:	ldr	w0, [x3, w19, uxtw]
   14aa8:	add	x8, x3, w19, uxtw
   14aac:	ldr	w1, [x13]
   14ab0:	cmp	w1, w0
   14ab4:	b.eq	14ad4 <ZSTD_compress@@Base+0x6288>  // b.none
   14ab8:	ldr	w1, [sp, #148]
   14abc:	sub	x0, x13, x7
   14ac0:	mov	w19, w27
   14ac4:	add	x0, x1, x0, asr #8
   14ac8:	add	x13, x13, x0
   14acc:	mov	w27, w19
   14ad0:	b	143b8 <ZSTD_compress@@Base+0x5b6c>
   14ad4:	cmp	w18, w19
   14ad8:	b.hi	14c0c <ZSTD_compress@@Base+0x63c0>  // b.pmore
   14adc:	ldr	x24, [sp, #128]
   14ae0:	mov	x3, x14
   14ae4:	ldr	x4, [sp, #128]
   14ae8:	add	x1, x8, #0x4
   14aec:	mov	x2, x14
   14af0:	add	x0, x13, #0x4
   14af4:	stp	x8, x7, [sp, #160]
   14af8:	sub	w19, w28, w19
   14afc:	bl	14284 <ZSTD_compress@@Base+0x5a38>
   14b00:	ldp	x8, x7, [sp, #160]
   14b04:	add	x5, x0, #0x4
   14b08:	cmp	x13, x7
   14b0c:	ccmp	x8, x24, #0x0, hi  // hi = pmore
   14b10:	b.ls	14b24 <ZSTD_compress@@Base+0x62d8>  // b.plast
   14b14:	ldurb	w1, [x13, #-1]
   14b18:	ldurb	w0, [x8, #-1]
   14b1c:	cmp	w1, w0
   14b20:	b.eq	14c18 <ZSTD_compress@@Base+0x63cc>  // b.none
   14b24:	sub	x8, x13, x7
   14b28:	sub	x9, x5, #0x3
   14b2c:	cmp	x13, x26
   14b30:	ldr	x0, [x25, #24]
   14b34:	b.hi	14c28 <ZSTD_compress@@Base+0x63dc>  // b.pmore
   14b38:	ldp	x2, x3, [x7]
   14b3c:	stp	x2, x3, [x0]
   14b40:	cmp	x8, #0x10
   14b44:	b.ls	14b90 <ZSTD_compress@@Base+0x6344>  // b.plast
   14b48:	ldr	x2, [x25, #24]
   14b4c:	ldp	x0, x1, [x7, #16]
   14b50:	add	x4, x2, x8
   14b54:	stp	x0, x1, [x2, #16]
   14b58:	ldp	x0, x1, [x7, #32]
   14b5c:	stp	x0, x1, [x2, #32]
   14b60:	add	x1, x2, #0x30
   14b64:	cmp	x4, x1
   14b68:	b.ls	14b90 <ZSTD_compress@@Base+0x6344>  // b.plast
   14b6c:	add	x7, x7, #0x30
   14b70:	ldp	x10, x11, [x7]
   14b74:	stp	x10, x11, [x1]
   14b78:	add	x1, x1, #0x20
   14b7c:	ldp	x10, x11, [x7, #16]
   14b80:	stp	x10, x11, [x1, #-16]
   14b84:	add	x7, x7, #0x20
   14b88:	cmp	x4, x1
   14b8c:	b.hi	14b70 <ZSTD_compress@@Base+0x6324>  // b.pmore
   14b90:	ldr	x0, [x25, #24]
   14b94:	add	x0, x0, x8
   14b98:	str	x0, [x25, #24]
   14b9c:	mov	x0, #0xffff                	// #65535
   14ba0:	cmp	x8, x0
   14ba4:	ldr	x0, [x25, #8]
   14ba8:	b.ls	14bc4 <ZSTD_compress@@Base+0x6378>  // b.plast
   14bac:	ldr	w1, [sp, #124]
   14bb0:	str	w1, [x25, #72]
   14bb4:	ldr	x1, [x25]
   14bb8:	sub	x1, x0, x1
   14bbc:	asr	x1, x1, #3
   14bc0:	str	w1, [x25, #76]
   14bc4:	add	w1, w19, #0x3
   14bc8:	str	w1, [x0]
   14bcc:	strh	w8, [x0, #4]
   14bd0:	mov	x1, #0xffff                	// #65535
   14bd4:	cmp	x9, x1
   14bd8:	b.ls	14bf4 <ZSTD_compress@@Base+0x63a8>  // b.plast
   14bdc:	mov	w1, #0x2                   	// #2
   14be0:	str	w1, [x25, #72]
   14be4:	ldr	x1, [x25]
   14be8:	sub	x1, x0, x1
   14bec:	asr	x1, x1, #3
   14bf0:	str	w1, [x25, #76]
   14bf4:	strh	w9, [x0, #6]
   14bf8:	add	x13, x13, x5
   14bfc:	add	x0, x0, #0x8
   14c00:	mov	w24, w27
   14c04:	str	x0, [x25, #8]
   14c08:	b	14954 <ZSTD_compress@@Base+0x6108>
   14c0c:	ldr	x3, [sp, #136]
   14c10:	ldr	x24, [sp, #152]
   14c14:	b	14ae4 <ZSTD_compress@@Base+0x6298>
   14c18:	sub	x13, x13, #0x1
   14c1c:	sub	x8, x8, #0x1
   14c20:	add	x5, x5, #0x1
   14c24:	b	14b08 <ZSTD_compress@@Base+0x62bc>
   14c28:	mov	x3, x26
   14c2c:	mov	x2, x13
   14c30:	mov	x1, x7
   14c34:	bl	14098 <ZSTD_compress@@Base+0x584c>
   14c38:	b	14b90 <ZSTD_compress@@Base+0x6344>
   14c3c:	mov	x3, x26
   14c40:	mov	x2, x13
   14c44:	mov	x1, x13
   14c48:	bl	14098 <ZSTD_compress@@Base+0x584c>
   14c4c:	b	14a1c <ZSTD_compress@@Base+0x61d0>
   14c50:	ldr	x13, [x0, #8]
   14c54:	sub	x8, x1, #0x6
   14c58:	ldr	w5, [x0, #36]
   14c5c:	mov	w12, w2
   14c60:	ldr	w10, [x0, #192]
   14c64:	add	x5, x13, x5
   14c68:	ldr	w11, [x0, #200]
   14c6c:	add	x9, x5, #0x3
   14c70:	cmp	x9, x8
   14c74:	ldr	x6, [x0, #48]
   14c78:	b.cc	14c80 <ZSTD_compress@@Base+0x6434>  // b.lo, b.ul, b.last
   14c7c:	ret
   14c80:	stp	x29, x30, [sp, #-16]!
   14c84:	mov	x29, sp
   14c88:	sub	x7, x5, x13
   14c8c:	mov	w2, w11
   14c90:	mov	w1, w10
   14c94:	mov	x0, x5
   14c98:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   14c9c:	str	w7, [x6, x0, lsl #2]
   14ca0:	cbz	w12, 14cec <ZSTD_compress@@Base+0x64a0>
   14ca4:	mov	w1, w10
   14ca8:	mov	w2, w11
   14cac:	add	x0, x5, #0x1
   14cb0:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   14cb4:	lsl	x0, x0, #2
   14cb8:	ldr	w1, [x6, x0]
   14cbc:	cbnz	w1, 14cc8 <ZSTD_compress@@Base+0x647c>
   14cc0:	add	w1, w7, #0x1
   14cc4:	str	w1, [x6, x0]
   14cc8:	mov	w1, w10
   14ccc:	mov	w2, w11
   14cd0:	sub	x0, x9, #0x1
   14cd4:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   14cd8:	lsl	x0, x0, #2
   14cdc:	ldr	w1, [x6, x0]
   14ce0:	cbnz	w1, 14cec <ZSTD_compress@@Base+0x64a0>
   14ce4:	add	w7, w7, #0x2
   14ce8:	str	w7, [x6, x0]
   14cec:	mov	x5, x9
   14cf0:	add	x9, x9, #0x3
   14cf4:	cmp	x9, x8
   14cf8:	b.cc	14c88 <ZSTD_compress@@Base+0x643c>  // b.lo, b.ul, b.last
   14cfc:	ldp	x29, x30, [sp], #16
   14d00:	ret
   14d04:	stp	x29, x30, [sp, #-112]!
   14d08:	mov	x7, x3
   14d0c:	add	x10, x3, x4
   14d10:	mov	x29, sp
   14d14:	ldp	w3, w14, [x0, #200]
   14d18:	mov	x13, x2
   14d1c:	ldr	x9, [x0, #8]
   14d20:	cmp	w14, #0x0
   14d24:	ldr	w5, [x0, #184]
   14d28:	add	w14, w14, #0x1
   14d2c:	ldr	w12, [x0, #24]
   14d30:	cinc	w14, w14, eq  // eq = none
   14d34:	ldr	w8, [x2]
   14d38:	sub	x2, x7, x9
   14d3c:	stp	x19, x20, [sp, #16]
   14d40:	add	w2, w2, w4
   14d44:	ldr	w15, [x0, #192]
   14d48:	stp	x21, x22, [sp, #32]
   14d4c:	mov	w14, w14
   14d50:	cmp	w3, #0x6
   14d54:	stp	x23, x24, [sp, #48]
   14d58:	stp	x25, x26, [sp, #64]
   14d5c:	stp	x27, x28, [sp, #80]
   14d60:	mov	x28, x1
   14d64:	mov	w1, #0x1                   	// #1
   14d68:	lsl	w1, w1, w5
   14d6c:	sub	w5, w2, w12
   14d70:	ldr	x11, [x0, #48]
   14d74:	ldr	w0, [x13, #4]
   14d78:	b.eq	15540 <ZSTD_compress@@Base+0x6cf4>  // b.none
   14d7c:	cmp	w3, #0x7
   14d80:	b.eq	15900 <ZSTD_compress@@Base+0x70b4>  // b.none
   14d84:	cmp	w3, #0x5
   14d88:	b.eq	15168 <ZSTD_compress@@Base+0x691c>  // b.none
   14d8c:	cmp	w1, w5
   14d90:	b.cs	14d98 <ZSTD_compress@@Base+0x654c>  // b.hs, b.nlast
   14d94:	sub	w12, w2, w1
   14d98:	add	x23, x9, w12, uxtw
   14d9c:	mov	w19, #0x79b1                	// #31153
   14da0:	cmp	x7, x23
   14da4:	sub	x22, x10, #0x8
   14da8:	cinc	x24, x7, eq  // eq = none
   14dac:	sub	x21, x10, #0x20
   14db0:	sub	x1, x24, x23
   14db4:	add	x5, x24, #0x1
   14db8:	cmp	w0, w1
   14dbc:	movk	w19, #0x9e37, lsl #16
   14dc0:	csel	w18, w0, wzr, hi  // hi = pmore
   14dc4:	csel	w0, w0, wzr, ls  // ls = plast
   14dc8:	cmp	w8, w1
   14dcc:	mov	w1, #0x20                  	// #32
   14dd0:	csel	w18, w18, w8, ls  // ls = plast
   14dd4:	sub	w15, w1, w15
   14dd8:	csel	w8, w8, wzr, ls  // ls = plast
   14ddc:	cmp	x22, x5
   14de0:	b.hi	14e18 <ZSTD_compress@@Base+0x65cc>  // b.pmore
   14de4:	cmp	w8, #0x0
   14de8:	csel	w8, w8, w18, ne  // ne = any
   14dec:	cmp	w0, #0x0
   14df0:	csel	w18, w18, w0, eq  // eq = none
   14df4:	stp	w8, w18, [x13]
   14df8:	sub	x0, x10, x7
   14dfc:	ldp	x19, x20, [sp, #16]
   14e00:	ldp	x21, x22, [sp, #32]
   14e04:	ldp	x23, x24, [sp, #48]
   14e08:	ldp	x25, x26, [sp, #64]
   14e0c:	ldp	x27, x28, [sp, #80]
   14e10:	ldp	x29, x30, [sp], #112
   14e14:	ret
   14e18:	mov	x4, x24
   14e1c:	ldr	w6, [x5]
   14e20:	sub	x26, x24, x9
   14e24:	cmp	w8, #0x0
   14e28:	ldr	w16, [x4], #2
   14e2c:	mul	w2, w6, w19
   14e30:	sub	x1, x4, w8, uxtw
   14e34:	mul	w3, w16, w19
   14e38:	lsr	w2, w2, w15
   14e3c:	lsl	x2, x2, #2
   14e40:	lsr	w3, w3, w15
   14e44:	lsl	x3, x3, #2
   14e48:	ldr	w17, [x11, x2]
   14e4c:	ldr	w20, [x11, x3]
   14e50:	str	w26, [x11, x3]
   14e54:	sub	x3, x5, x9
   14e58:	str	w3, [x11, x2]
   14e5c:	ldr	w2, [x1]
   14e60:	ldur	w3, [x24, #2]
   14e64:	ccmp	w3, w2, #0x0, ne  // ne = any
   14e68:	b.ne	15008 <ZSTD_compress@@Base+0x67bc>  // b.any
   14e6c:	ldurb	w2, [x1, #-1]
   14e70:	mov	w20, w8
   14e74:	ldrb	w3, [x24, #1]
   14e78:	mov	w8, w0
   14e7c:	mov	w25, #0x0                   	// #0
   14e80:	cmp	w3, w2
   14e84:	csetm	x2, eq  // eq = none
   14e88:	cset	x27, eq  // eq = none
   14e8c:	add	x24, x4, x2
   14e90:	add	x1, x1, x2
   14e94:	add	x0, x27, #0x4
   14e98:	mov	x2, x10
   14e9c:	add	x1, x1, x0
   14ea0:	add	x0, x24, x0
   14ea4:	bl	141a4 <ZSTD_compress@@Base+0x5958>
   14ea8:	add	x5, x27, x0
   14eac:	add	x4, x5, #0x4
   14eb0:	sub	x27, x24, x7
   14eb4:	add	x5, x5, #0x1
   14eb8:	cmp	x24, x21
   14ebc:	ldr	x0, [x28, #24]
   14ec0:	b.hi	1509c <ZSTD_compress@@Base+0x6850>  // b.pmore
   14ec4:	ldp	x2, x3, [x7]
   14ec8:	stp	x2, x3, [x0]
   14ecc:	cmp	x27, #0x10
   14ed0:	b.ls	14f1c <ZSTD_compress@@Base+0x66d0>  // b.plast
   14ed4:	ldr	x2, [x28, #24]
   14ed8:	ldp	x0, x1, [x7, #16]
   14edc:	add	x6, x2, x27
   14ee0:	stp	x0, x1, [x2, #16]
   14ee4:	ldp	x0, x1, [x7, #32]
   14ee8:	stp	x0, x1, [x2, #32]
   14eec:	add	x1, x2, #0x30
   14ef0:	cmp	x6, x1
   14ef4:	b.ls	14f1c <ZSTD_compress@@Base+0x66d0>  // b.plast
   14ef8:	add	x7, x7, #0x30
   14efc:	ldp	x2, x3, [x7]
   14f00:	stp	x2, x3, [x1]
   14f04:	add	x1, x1, #0x20
   14f08:	ldp	x2, x3, [x7, #16]
   14f0c:	stp	x2, x3, [x1, #-16]
   14f10:	add	x7, x7, #0x20
   14f14:	cmp	x6, x1
   14f18:	b.hi	14efc <ZSTD_compress@@Base+0x66b0>  // b.pmore
   14f1c:	ldr	x0, [x28, #24]
   14f20:	mov	x1, #0xffff                	// #65535
   14f24:	cmp	x27, x1
   14f28:	add	x0, x0, x27
   14f2c:	str	x0, [x28, #24]
   14f30:	ldr	x0, [x28, #8]
   14f34:	b.ls	14f50 <ZSTD_compress@@Base+0x6704>  // b.plast
   14f38:	mov	w1, #0x1                   	// #1
   14f3c:	str	w1, [x28, #72]
   14f40:	ldr	x1, [x28]
   14f44:	sub	x1, x0, x1
   14f48:	asr	x1, x1, #3
   14f4c:	str	w1, [x28, #76]
   14f50:	add	w25, w25, #0x1
   14f54:	str	w25, [x0]
   14f58:	strh	w27, [x0, #4]
   14f5c:	mov	x1, #0xffff                	// #65535
   14f60:	cmp	x5, x1
   14f64:	b.ls	14f80 <ZSTD_compress@@Base+0x6734>  // b.plast
   14f68:	mov	w1, #0x2                   	// #2
   14f6c:	str	w1, [x28, #72]
   14f70:	ldr	x1, [x28]
   14f74:	sub	x1, x0, x1
   14f78:	asr	x1, x1, #3
   14f7c:	str	w1, [x28, #76]
   14f80:	strh	w5, [x0, #6]
   14f84:	add	x0, x0, #0x8
   14f88:	str	x0, [x28, #8]
   14f8c:	add	x7, x24, x4
   14f90:	add	x5, x7, #0x1
   14f94:	cmp	x22, x7
   14f98:	b.cc	15000 <ZSTD_compress@@Base+0x67b4>  // b.lo, b.ul, b.last
   14f9c:	add	x0, x9, w26, uxtw
   14fa0:	mov	x1, x7
   14fa4:	add	w26, w26, #0x2
   14fa8:	mov	x24, #0x4                   	// #4
   14fac:	mov	w25, #0x1                   	// #1
   14fb0:	mov	w27, #0x2                   	// #2
   14fb4:	ldur	w0, [x0, #2]
   14fb8:	mul	w0, w0, w19
   14fbc:	lsr	w0, w0, w15
   14fc0:	str	w26, [x11, x0, lsl #2]
   14fc4:	mov	x26, #0xffff                	// #65535
   14fc8:	ldr	w0, [x1, #-2]!
   14fcc:	sub	x1, x1, x9
   14fd0:	mul	w0, w0, w19
   14fd4:	lsr	w0, w0, w15
   14fd8:	str	w1, [x11, x0, lsl #2]
   14fdc:	cmp	w8, #0x0
   14fe0:	ccmp	x22, x7, #0x0, ne  // ne = any
   14fe4:	b.cc	15000 <ZSTD_compress@@Base+0x67b4>  // b.lo, b.ul, b.last
   14fe8:	sub	x2, x7, w8, uxtw
   14fec:	ldr	w0, [x7]
   14ff0:	mov	w1, w8
   14ff4:	ldr	w3, [x2]
   14ff8:	cmp	w3, w0
   14ffc:	b.eq	150b8 <ZSTD_compress@@Base+0x686c>  // b.none
   15000:	mov	x24, x7
   15004:	b	15050 <ZSTD_compress@@Base+0x6804>
   15008:	cmp	w12, w20
   1500c:	b.cs	15020 <ZSTD_compress@@Base+0x67d4>  // b.hs, b.nlast
   15010:	ldr	w1, [x9, w20, uxtw]
   15014:	add	x2, x9, w20, uxtw
   15018:	cmp	w16, w1
   1501c:	b.eq	15060 <ZSTD_compress@@Base+0x6814>  // b.none
   15020:	cmp	w12, w17
   15024:	b.cs	15038 <ZSTD_compress@@Base+0x67ec>  // b.hs, b.nlast
   15028:	ldr	w1, [x9, w17, uxtw]
   1502c:	add	x2, x9, w17, uxtw
   15030:	cmp	w6, w1
   15034:	b.eq	1505c <ZSTD_compress@@Base+0x6810>  // b.none
   15038:	sub	x1, x24, x7
   1503c:	mov	w20, w8
   15040:	mov	w8, w0
   15044:	add	x1, x14, x1, lsr #7
   15048:	add	x24, x24, x1
   1504c:	add	x5, x5, x1
   15050:	mov	w0, w8
   15054:	mov	w8, w20
   15058:	b	14ddc <ZSTD_compress@@Base+0x6590>
   1505c:	mov	x24, x5
   15060:	sub	x25, x24, x2
   15064:	mov	x1, x2
   15068:	mov	w20, w25
   1506c:	add	w25, w25, #0x2
   15070:	cmp	x7, x24
   15074:	sub	x27, x2, x1
   15078:	ccmp	x23, x1, #0x2, cc  // cc = lo, ul, last
   1507c:	b.cs	14e94 <ZSTD_compress@@Base+0x6648>  // b.hs, b.nlast
   15080:	ldurb	w3, [x24, #-1]
   15084:	ldurb	w0, [x1, #-1]
   15088:	cmp	w3, w0
   1508c:	b.ne	14e94 <ZSTD_compress@@Base+0x6648>  // b.any
   15090:	sub	x24, x24, #0x1
   15094:	sub	x1, x1, #0x1
   15098:	b	15070 <ZSTD_compress@@Base+0x6824>
   1509c:	mov	x3, x21
   150a0:	mov	x2, x24
   150a4:	mov	x1, x7
   150a8:	str	x4, [sp, #96]
   150ac:	bl	14098 <ZSTD_compress@@Base+0x584c>
   150b0:	ldr	x4, [sp, #96]
   150b4:	b	14f1c <ZSTD_compress@@Base+0x66d0>
   150b8:	sub	x1, x24, x1
   150bc:	mov	x2, x10
   150c0:	add	x1, x7, x1
   150c4:	add	x0, x7, #0x4
   150c8:	str	w3, [sp, #96]
   150cc:	bl	141a4 <ZSTD_compress@@Base+0x5958>
   150d0:	ldr	w3, [sp, #96]
   150d4:	add	x6, x0, #0x4
   150d8:	sub	x1, x7, x9
   150dc:	add	x6, x7, x6
   150e0:	add	x4, x0, #0x1
   150e4:	add	x5, x6, #0x1
   150e8:	cmp	x21, x7
   150ec:	mul	w3, w3, w19
   150f0:	ldr	x0, [x28, #24]
   150f4:	lsr	w3, w3, w15
   150f8:	str	w1, [x11, x3, lsl #2]
   150fc:	b.cc	1514c <ZSTD_compress@@Base+0x6900>  // b.lo, b.ul, b.last
   15100:	ldp	x2, x3, [x7]
   15104:	stp	x2, x3, [x0]
   15108:	cmp	x4, x26
   1510c:	ldr	x0, [x28, #8]
   15110:	str	w25, [x0]
   15114:	strh	wzr, [x0, #4]
   15118:	b.ls	1512c <ZSTD_compress@@Base+0x68e0>  // b.plast
   1511c:	ldr	x1, [x28]
   15120:	sub	x1, x0, x1
   15124:	asr	x1, x1, #3
   15128:	stp	w27, w1, [x28, #72]
   1512c:	add	x0, x0, #0x8
   15130:	sturh	w4, [x0, #-2]
   15134:	str	x0, [x28, #8]
   15138:	mov	w0, w20
   1513c:	mov	x7, x6
   15140:	mov	w20, w8
   15144:	mov	w8, w0
   15148:	b	14fdc <ZSTD_compress@@Base+0x6790>
   1514c:	mov	x3, x21
   15150:	mov	x2, x7
   15154:	mov	x1, x7
   15158:	stp	x6, x4, [sp, #96]
   1515c:	bl	14098 <ZSTD_compress@@Base+0x584c>
   15160:	ldp	x6, x4, [sp, #96]
   15164:	b	15108 <ZSTD_compress@@Base+0x68bc>
   15168:	cmp	w1, w5
   1516c:	b.cs	15174 <ZSTD_compress@@Base+0x6928>  // b.hs, b.nlast
   15170:	sub	w12, w2, w1
   15174:	add	x24, x9, w12, uxtw
   15178:	sub	x23, x10, #0x8
   1517c:	cmp	x7, x24
   15180:	sub	x22, x10, #0x20
   15184:	cinc	x27, x7, eq  // eq = none
   15188:	mov	x26, #0x4                   	// #4
   1518c:	sub	x1, x27, x24
   15190:	add	x5, x27, #0x1
   15194:	cmp	w0, w1
   15198:	mov	w25, #0x1                   	// #1
   1519c:	csel	w19, w0, wzr, hi  // hi = pmore
   151a0:	csel	w6, w0, wzr, ls  // ls = plast
   151a4:	cmp	w8, w1
   151a8:	csel	w19, w19, w8, ls  // ls = plast
   151ac:	csel	w8, w8, wzr, ls  // ls = plast
   151b0:	cmp	x23, x5
   151b4:	b.hi	151d0 <ZSTD_compress@@Base+0x6984>  // b.pmore
   151b8:	cmp	w8, #0x0
   151bc:	csel	w8, w8, w19, ne  // ne = any
   151c0:	cmp	w6, #0x0
   151c4:	csel	w19, w19, w6, eq  // eq = none
   151c8:	stp	w8, w19, [x13]
   151cc:	b	14df8 <ZSTD_compress@@Base+0x65ac>
   151d0:	add	x18, x27, #0x2
   151d4:	mov	w1, w15
   151d8:	mov	w2, #0x5                   	// #5
   151dc:	mov	x0, x27
   151e0:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   151e4:	mov	x3, x0
   151e8:	mov	w1, w15
   151ec:	mov	w2, #0x5                   	// #5
   151f0:	mov	x0, x5
   151f4:	str	x3, [sp, #96]
   151f8:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   151fc:	lsl	x0, x0, #2
   15200:	ldr	x3, [sp, #96]
   15204:	sub	x21, x27, x9
   15208:	ldr	w20, [x27]
   1520c:	sub	x1, x18, w8, uxtw
   15210:	ldr	w4, [x5]
   15214:	cmp	w8, #0x0
   15218:	lsl	x2, x3, #2
   1521c:	ldr	w3, [x11, x0]
   15220:	ldr	w16, [x11, x2]
   15224:	str	w21, [x11, x2]
   15228:	sub	x2, x5, x9
   1522c:	str	w2, [x11, x0]
   15230:	ldr	w0, [x1]
   15234:	ldur	w2, [x27, #2]
   15238:	ccmp	w2, w0, #0x0, ne  // ne = any
   1523c:	b.ne	153dc <ZSTD_compress@@Base+0x6b90>  // b.any
   15240:	ldurb	w0, [x1, #-1]
   15244:	mov	w20, w8
   15248:	ldrb	w2, [x27, #1]
   1524c:	mov	w8, w6
   15250:	cmp	w2, w0
   15254:	csetm	x0, eq  // eq = none
   15258:	cset	x5, eq  // eq = none
   1525c:	add	x1, x1, x0
   15260:	add	x27, x18, x0
   15264:	mov	w18, #0x0                   	// #0
   15268:	add	x0, x5, #0x4
   1526c:	mov	x2, x10
   15270:	add	x1, x1, x0
   15274:	add	x0, x27, x0
   15278:	str	x5, [sp, #96]
   1527c:	bl	141a4 <ZSTD_compress@@Base+0x5958>
   15280:	ldr	x5, [sp, #96]
   15284:	sub	x4, x27, x7
   15288:	cmp	x27, x22
   1528c:	add	x5, x5, x0
   15290:	add	x6, x5, #0x4
   15294:	add	x5, x5, #0x1
   15298:	ldr	x0, [x28, #24]
   1529c:	b.hi	15470 <ZSTD_compress@@Base+0x6c24>  // b.pmore
   152a0:	ldp	x2, x3, [x7]
   152a4:	stp	x2, x3, [x0]
   152a8:	cmp	x4, #0x10
   152ac:	b.ls	152f8 <ZSTD_compress@@Base+0x6aac>  // b.plast
   152b0:	ldr	x2, [x28, #24]
   152b4:	ldp	x0, x1, [x7, #16]
   152b8:	add	x16, x2, x4
   152bc:	stp	x0, x1, [x2, #16]
   152c0:	ldp	x0, x1, [x7, #32]
   152c4:	stp	x0, x1, [x2, #32]
   152c8:	add	x1, x2, #0x30
   152cc:	cmp	x16, x1
   152d0:	b.ls	152f8 <ZSTD_compress@@Base+0x6aac>  // b.plast
   152d4:	add	x7, x7, #0x30
   152d8:	ldp	x2, x3, [x7]
   152dc:	stp	x2, x3, [x1]
   152e0:	add	x1, x1, #0x20
   152e4:	ldp	x2, x3, [x7, #16]
   152e8:	stp	x2, x3, [x1, #-16]
   152ec:	add	x7, x7, #0x20
   152f0:	cmp	x16, x1
   152f4:	b.hi	152d8 <ZSTD_compress@@Base+0x6a8c>  // b.pmore
   152f8:	ldr	x0, [x28, #24]
   152fc:	mov	x1, #0xffff                	// #65535
   15300:	cmp	x4, x1
   15304:	add	x0, x0, x4
   15308:	str	x0, [x28, #24]
   1530c:	ldr	x0, [x28, #8]
   15310:	b.ls	15324 <ZSTD_compress@@Base+0x6ad8>  // b.plast
   15314:	ldr	x1, [x28]
   15318:	sub	x1, x0, x1
   1531c:	asr	x1, x1, #3
   15320:	stp	w25, w1, [x28, #72]
   15324:	add	w18, w18, #0x1
   15328:	str	w18, [x0]
   1532c:	strh	w4, [x0, #4]
   15330:	mov	x1, #0xffff                	// #65535
   15334:	cmp	x5, x1
   15338:	b.ls	15354 <ZSTD_compress@@Base+0x6b08>  // b.plast
   1533c:	mov	w1, #0x2                   	// #2
   15340:	str	w1, [x28, #72]
   15344:	ldr	x1, [x28]
   15348:	sub	x1, x0, x1
   1534c:	asr	x1, x1, #3
   15350:	str	w1, [x28, #76]
   15354:	strh	w5, [x0, #6]
   15358:	add	x0, x0, #0x8
   1535c:	str	x0, [x28, #8]
   15360:	add	x7, x27, x6
   15364:	add	x5, x7, #0x1
   15368:	cmp	x23, x7
   1536c:	b.cc	153d4 <ZSTD_compress@@Base+0x6b88>  // b.lo, b.ul, b.last
   15370:	and	x0, x21, #0xffffffff
   15374:	mov	w1, w15
   15378:	add	x0, x0, #0x2
   1537c:	add	w21, w21, #0x2
   15380:	add	x0, x9, x0
   15384:	mov	w2, #0x5                   	// #5
   15388:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   1538c:	str	w21, [x11, x0, lsl #2]
   15390:	sub	x0, x7, #0x2
   15394:	mov	w1, w15
   15398:	sub	x6, x0, x9
   1539c:	mov	w2, #0x5                   	// #5
   153a0:	mov	w21, #0x2                   	// #2
   153a4:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   153a8:	str	w6, [x11, x0, lsl #2]
   153ac:	mov	x18, #0xffff                	// #65535
   153b0:	cmp	w8, #0x0
   153b4:	ccmp	x23, x7, #0x0, ne  // ne = any
   153b8:	b.cc	153d4 <ZSTD_compress@@Base+0x6b88>  // b.lo, b.ul, b.last
   153bc:	sub	x0, x7, w8, uxtw
   153c0:	mov	w1, w8
   153c4:	ldr	w2, [x0]
   153c8:	ldr	w0, [x7]
   153cc:	cmp	w2, w0
   153d0:	b.eq	1548c <ZSTD_compress@@Base+0x6c40>  // b.none
   153d4:	mov	x27, x7
   153d8:	b	15424 <ZSTD_compress@@Base+0x6bd8>
   153dc:	cmp	w12, w16
   153e0:	b.cs	153f4 <ZSTD_compress@@Base+0x6ba8>  // b.hs, b.nlast
   153e4:	ldr	w1, [x9, w16, uxtw]
   153e8:	add	x0, x9, w16, uxtw
   153ec:	cmp	w20, w1
   153f0:	b.eq	15434 <ZSTD_compress@@Base+0x6be8>  // b.none
   153f4:	cmp	w12, w3
   153f8:	b.cs	1540c <ZSTD_compress@@Base+0x6bc0>  // b.hs, b.nlast
   153fc:	ldr	w1, [x9, w3, uxtw]
   15400:	add	x0, x9, w3, uxtw
   15404:	cmp	w4, w1
   15408:	b.eq	15430 <ZSTD_compress@@Base+0x6be4>  // b.none
   1540c:	sub	x0, x27, x7
   15410:	mov	w20, w8
   15414:	mov	w8, w6
   15418:	add	x0, x14, x0, lsr #7
   1541c:	add	x27, x27, x0
   15420:	add	x5, x5, x0
   15424:	mov	w6, w8
   15428:	mov	w8, w20
   1542c:	b	151b0 <ZSTD_compress@@Base+0x6964>
   15430:	mov	x27, x5
   15434:	sub	x18, x27, x0
   15438:	mov	x1, x0
   1543c:	mov	w20, w18
   15440:	add	w18, w18, #0x2
   15444:	cmp	x7, x27
   15448:	sub	x5, x0, x1
   1544c:	ccmp	x24, x1, #0x2, cc  // cc = lo, ul, last
   15450:	b.cs	15268 <ZSTD_compress@@Base+0x6a1c>  // b.hs, b.nlast
   15454:	ldurb	w3, [x27, #-1]
   15458:	ldurb	w2, [x1, #-1]
   1545c:	cmp	w3, w2
   15460:	b.ne	15268 <ZSTD_compress@@Base+0x6a1c>  // b.any
   15464:	sub	x27, x27, #0x1
   15468:	sub	x1, x1, #0x1
   1546c:	b	15444 <ZSTD_compress@@Base+0x6bf8>
   15470:	mov	x3, x22
   15474:	mov	x2, x27
   15478:	mov	x1, x7
   1547c:	stp	x6, x4, [sp, #96]
   15480:	bl	14098 <ZSTD_compress@@Base+0x584c>
   15484:	ldp	x6, x4, [sp, #96]
   15488:	b	152f8 <ZSTD_compress@@Base+0x6aac>
   1548c:	sub	x1, x26, x1
   15490:	mov	x2, x10
   15494:	add	x1, x7, x1
   15498:	add	x0, x7, #0x4
   1549c:	bl	141a4 <ZSTD_compress@@Base+0x5958>
   154a0:	mov	x6, x0
   154a4:	sub	x5, x7, x9
   154a8:	mov	w1, w15
   154ac:	mov	x0, x7
   154b0:	mov	w2, #0x5                   	// #5
   154b4:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   154b8:	add	x27, x6, #0x4
   154bc:	str	w5, [x11, x0, lsl #2]
   154c0:	add	x27, x7, x27
   154c4:	add	x5, x27, #0x1
   154c8:	add	x6, x6, #0x1
   154cc:	cmp	x22, x7
   154d0:	ldr	x0, [x28, #24]
   154d4:	b.cc	15524 <ZSTD_compress@@Base+0x6cd8>  // b.lo, b.ul, b.last
   154d8:	ldp	x2, x3, [x7]
   154dc:	stp	x2, x3, [x0]
   154e0:	cmp	x6, x18
   154e4:	ldr	x0, [x28, #8]
   154e8:	str	w25, [x0]
   154ec:	strh	wzr, [x0, #4]
   154f0:	b.ls	15504 <ZSTD_compress@@Base+0x6cb8>  // b.plast
   154f4:	ldr	x1, [x28]
   154f8:	sub	x1, x0, x1
   154fc:	asr	x1, x1, #3
   15500:	stp	w21, w1, [x28, #72]
   15504:	add	x0, x0, #0x8
   15508:	sturh	w6, [x0, #-2]
   1550c:	str	x0, [x28, #8]
   15510:	mov	w0, w20
   15514:	mov	x7, x27
   15518:	mov	w20, w8
   1551c:	mov	w8, w0
   15520:	b	153b0 <ZSTD_compress@@Base+0x6b64>
   15524:	mov	x3, x22
   15528:	mov	x2, x7
   1552c:	mov	x1, x7
   15530:	str	x6, [sp, #96]
   15534:	bl	14098 <ZSTD_compress@@Base+0x584c>
   15538:	ldr	x6, [sp, #96]
   1553c:	b	154e0 <ZSTD_compress@@Base+0x6c94>
   15540:	cmp	w1, w5
   15544:	b.cs	1554c <ZSTD_compress@@Base+0x6d00>  // b.hs, b.nlast
   15548:	sub	w12, w2, w1
   1554c:	add	x24, x9, w12, uxtw
   15550:	sub	x23, x10, #0x8
   15554:	cmp	x7, x24
   15558:	sub	x22, x10, #0x20
   1555c:	cinc	x27, x7, eq  // eq = none
   15560:	mov	x26, #0x4                   	// #4
   15564:	sub	x1, x27, x24
   15568:	add	x5, x27, #0x1
   1556c:	cmp	w0, w1
   15570:	mov	w25, #0x1                   	// #1
   15574:	csel	w19, w0, wzr, hi  // hi = pmore
   15578:	csel	w6, w0, wzr, ls  // ls = plast
   1557c:	cmp	w8, w1
   15580:	csel	w19, w19, w8, ls  // ls = plast
   15584:	csel	w8, w8, wzr, ls  // ls = plast
   15588:	cmp	x23, x5
   1558c:	b.ls	151b8 <ZSTD_compress@@Base+0x696c>  // b.plast
   15590:	add	x18, x27, #0x2
   15594:	mov	w1, w15
   15598:	mov	w2, #0x6                   	// #6
   1559c:	mov	x0, x27
   155a0:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   155a4:	mov	x3, x0
   155a8:	mov	w1, w15
   155ac:	mov	w2, #0x6                   	// #6
   155b0:	mov	x0, x5
   155b4:	str	x3, [sp, #96]
   155b8:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   155bc:	lsl	x0, x0, #2
   155c0:	ldr	x3, [sp, #96]
   155c4:	sub	x21, x27, x9
   155c8:	ldr	w20, [x27]
   155cc:	sub	x1, x18, w8, uxtw
   155d0:	ldr	w4, [x5]
   155d4:	cmp	w8, #0x0
   155d8:	lsl	x2, x3, #2
   155dc:	ldr	w3, [x11, x0]
   155e0:	ldr	w16, [x11, x2]
   155e4:	str	w21, [x11, x2]
   155e8:	sub	x2, x5, x9
   155ec:	str	w2, [x11, x0]
   155f0:	ldr	w0, [x1]
   155f4:	ldur	w2, [x27, #2]
   155f8:	ccmp	w2, w0, #0x0, ne  // ne = any
   155fc:	b.ne	1579c <ZSTD_compress@@Base+0x6f50>  // b.any
   15600:	ldurb	w0, [x1, #-1]
   15604:	mov	w20, w8
   15608:	ldrb	w2, [x27, #1]
   1560c:	mov	w8, w6
   15610:	cmp	w2, w0
   15614:	csetm	x0, eq  // eq = none
   15618:	cset	x5, eq  // eq = none
   1561c:	add	x1, x1, x0
   15620:	add	x27, x18, x0
   15624:	mov	w18, #0x0                   	// #0
   15628:	add	x0, x5, #0x4
   1562c:	mov	x2, x10
   15630:	add	x1, x1, x0
   15634:	add	x0, x27, x0
   15638:	str	x5, [sp, #96]
   1563c:	bl	141a4 <ZSTD_compress@@Base+0x5958>
   15640:	ldr	x5, [sp, #96]
   15644:	sub	x4, x27, x7
   15648:	cmp	x27, x22
   1564c:	add	x5, x5, x0
   15650:	add	x6, x5, #0x4
   15654:	add	x5, x5, #0x1
   15658:	ldr	x0, [x28, #24]
   1565c:	b.hi	15830 <ZSTD_compress@@Base+0x6fe4>  // b.pmore
   15660:	ldp	x2, x3, [x7]
   15664:	stp	x2, x3, [x0]
   15668:	cmp	x4, #0x10
   1566c:	b.ls	156b8 <ZSTD_compress@@Base+0x6e6c>  // b.plast
   15670:	ldr	x2, [x28, #24]
   15674:	ldp	x0, x1, [x7, #16]
   15678:	add	x16, x2, x4
   1567c:	stp	x0, x1, [x2, #16]
   15680:	ldp	x0, x1, [x7, #32]
   15684:	stp	x0, x1, [x2, #32]
   15688:	add	x1, x2, #0x30
   1568c:	cmp	x16, x1
   15690:	b.ls	156b8 <ZSTD_compress@@Base+0x6e6c>  // b.plast
   15694:	add	x7, x7, #0x30
   15698:	ldp	x2, x3, [x7]
   1569c:	stp	x2, x3, [x1]
   156a0:	add	x1, x1, #0x20
   156a4:	ldp	x2, x3, [x7, #16]
   156a8:	stp	x2, x3, [x1, #-16]
   156ac:	add	x7, x7, #0x20
   156b0:	cmp	x16, x1
   156b4:	b.hi	15698 <ZSTD_compress@@Base+0x6e4c>  // b.pmore
   156b8:	ldr	x0, [x28, #24]
   156bc:	mov	x1, #0xffff                	// #65535
   156c0:	cmp	x4, x1
   156c4:	add	x0, x0, x4
   156c8:	str	x0, [x28, #24]
   156cc:	ldr	x0, [x28, #8]
   156d0:	b.ls	156e4 <ZSTD_compress@@Base+0x6e98>  // b.plast
   156d4:	ldr	x1, [x28]
   156d8:	sub	x1, x0, x1
   156dc:	asr	x1, x1, #3
   156e0:	stp	w25, w1, [x28, #72]
   156e4:	add	w18, w18, #0x1
   156e8:	str	w18, [x0]
   156ec:	strh	w4, [x0, #4]
   156f0:	mov	x1, #0xffff                	// #65535
   156f4:	cmp	x5, x1
   156f8:	b.ls	15714 <ZSTD_compress@@Base+0x6ec8>  // b.plast
   156fc:	mov	w1, #0x2                   	// #2
   15700:	str	w1, [x28, #72]
   15704:	ldr	x1, [x28]
   15708:	sub	x1, x0, x1
   1570c:	asr	x1, x1, #3
   15710:	str	w1, [x28, #76]
   15714:	strh	w5, [x0, #6]
   15718:	add	x0, x0, #0x8
   1571c:	str	x0, [x28, #8]
   15720:	add	x27, x27, x6
   15724:	add	x5, x27, #0x1
   15728:	cmp	x23, x27
   1572c:	b.cc	15794 <ZSTD_compress@@Base+0x6f48>  // b.lo, b.ul, b.last
   15730:	and	x0, x21, #0xffffffff
   15734:	mov	w1, w15
   15738:	add	x0, x0, #0x2
   1573c:	mov	w2, #0x6                   	// #6
   15740:	add	x0, x9, x0
   15744:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   15748:	add	w21, w21, #0x2
   1574c:	str	w21, [x11, x0, lsl #2]
   15750:	sub	x0, x27, #0x2
   15754:	mov	w1, w15
   15758:	sub	x6, x0, x9
   1575c:	mov	w2, #0x6                   	// #6
   15760:	mov	w21, #0x2                   	// #2
   15764:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   15768:	str	w6, [x11, x0, lsl #2]
   1576c:	mov	x18, #0xffff                	// #65535
   15770:	cmp	w8, #0x0
   15774:	ccmp	x23, x27, #0x0, ne  // ne = any
   15778:	b.cc	15794 <ZSTD_compress@@Base+0x6f48>  // b.lo, b.ul, b.last
   1577c:	sub	x0, x27, w8, uxtw
   15780:	mov	w1, w8
   15784:	ldr	w2, [x0]
   15788:	ldr	w0, [x27]
   1578c:	cmp	w2, w0
   15790:	b.eq	1584c <ZSTD_compress@@Base+0x7000>  // b.none
   15794:	mov	x7, x27
   15798:	b	157e4 <ZSTD_compress@@Base+0x6f98>
   1579c:	cmp	w12, w16
   157a0:	b.cs	157b4 <ZSTD_compress@@Base+0x6f68>  // b.hs, b.nlast
   157a4:	ldr	w1, [x9, w16, uxtw]
   157a8:	add	x0, x9, w16, uxtw
   157ac:	cmp	w20, w1
   157b0:	b.eq	157f4 <ZSTD_compress@@Base+0x6fa8>  // b.none
   157b4:	cmp	w12, w3
   157b8:	b.cs	157cc <ZSTD_compress@@Base+0x6f80>  // b.hs, b.nlast
   157bc:	ldr	w1, [x9, w3, uxtw]
   157c0:	add	x0, x9, w3, uxtw
   157c4:	cmp	w4, w1
   157c8:	b.eq	157f0 <ZSTD_compress@@Base+0x6fa4>  // b.none
   157cc:	sub	x0, x27, x7
   157d0:	mov	w20, w8
   157d4:	mov	w8, w6
   157d8:	add	x0, x14, x0, lsr #7
   157dc:	add	x27, x27, x0
   157e0:	add	x5, x5, x0
   157e4:	mov	w6, w8
   157e8:	mov	w8, w20
   157ec:	b	15588 <ZSTD_compress@@Base+0x6d3c>
   157f0:	mov	x27, x5
   157f4:	sub	x18, x27, x0
   157f8:	mov	x1, x0
   157fc:	mov	w20, w18
   15800:	add	w18, w18, #0x2
   15804:	cmp	x7, x27
   15808:	sub	x5, x0, x1
   1580c:	ccmp	x24, x1, #0x2, cc  // cc = lo, ul, last
   15810:	b.cs	15628 <ZSTD_compress@@Base+0x6ddc>  // b.hs, b.nlast
   15814:	ldurb	w3, [x27, #-1]
   15818:	ldurb	w2, [x1, #-1]
   1581c:	cmp	w3, w2
   15820:	b.ne	15628 <ZSTD_compress@@Base+0x6ddc>  // b.any
   15824:	sub	x27, x27, #0x1
   15828:	sub	x1, x1, #0x1
   1582c:	b	15804 <ZSTD_compress@@Base+0x6fb8>
   15830:	mov	x3, x22
   15834:	mov	x2, x27
   15838:	mov	x1, x7
   1583c:	stp	x6, x4, [sp, #96]
   15840:	bl	14098 <ZSTD_compress@@Base+0x584c>
   15844:	ldp	x6, x4, [sp, #96]
   15848:	b	156b8 <ZSTD_compress@@Base+0x6e6c>
   1584c:	sub	x1, x26, x1
   15850:	mov	x2, x10
   15854:	add	x1, x27, x1
   15858:	add	x0, x27, #0x4
   1585c:	bl	141a4 <ZSTD_compress@@Base+0x5958>
   15860:	mov	x6, x0
   15864:	sub	x5, x27, x9
   15868:	mov	w1, w15
   1586c:	mov	x0, x27
   15870:	mov	w2, #0x6                   	// #6
   15874:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   15878:	add	x4, x6, #0x4
   1587c:	str	w5, [x11, x0, lsl #2]
   15880:	add	x4, x27, x4
   15884:	add	x5, x4, #0x1
   15888:	add	x6, x6, #0x1
   1588c:	cmp	x22, x27
   15890:	ldr	x0, [x28, #24]
   15894:	b.cc	158e4 <ZSTD_compress@@Base+0x7098>  // b.lo, b.ul, b.last
   15898:	ldp	x2, x3, [x27]
   1589c:	stp	x2, x3, [x0]
   158a0:	cmp	x6, x18
   158a4:	ldr	x0, [x28, #8]
   158a8:	str	w25, [x0]
   158ac:	strh	wzr, [x0, #4]
   158b0:	b.ls	158c4 <ZSTD_compress@@Base+0x7078>  // b.plast
   158b4:	ldr	x1, [x28]
   158b8:	sub	x1, x0, x1
   158bc:	asr	x1, x1, #3
   158c0:	stp	w21, w1, [x28, #72]
   158c4:	add	x0, x0, #0x8
   158c8:	sturh	w6, [x0, #-2]
   158cc:	str	x0, [x28, #8]
   158d0:	mov	w0, w20
   158d4:	mov	x27, x4
   158d8:	mov	w20, w8
   158dc:	mov	w8, w0
   158e0:	b	15770 <ZSTD_compress@@Base+0x6f24>
   158e4:	mov	x3, x22
   158e8:	mov	x2, x27
   158ec:	mov	x1, x27
   158f0:	stp	x4, x6, [sp, #96]
   158f4:	bl	14098 <ZSTD_compress@@Base+0x584c>
   158f8:	ldp	x4, x6, [sp, #96]
   158fc:	b	158a0 <ZSTD_compress@@Base+0x7054>
   15900:	cmp	w1, w5
   15904:	b.cs	1590c <ZSTD_compress@@Base+0x70c0>  // b.hs, b.nlast
   15908:	sub	w12, w2, w1
   1590c:	add	x25, x9, w12, uxtw
   15910:	sub	x24, x10, #0x8
   15914:	cmp	x7, x25
   15918:	sub	x23, x10, #0x20
   1591c:	cinc	x18, x7, eq  // eq = none
   15920:	mov	x27, #0x4                   	// #4
   15924:	sub	x1, x18, x25
   15928:	add	x5, x18, #0x1
   1592c:	cmp	w0, w1
   15930:	mov	w26, #0x1                   	// #1
   15934:	csel	w20, w0, wzr, hi  // hi = pmore
   15938:	csel	w6, w0, wzr, ls  // ls = plast
   1593c:	cmp	w8, w1
   15940:	csel	w20, w20, w8, ls  // ls = plast
   15944:	csel	w8, w8, wzr, ls  // ls = plast
   15948:	cmp	x24, x5
   1594c:	b.hi	15968 <ZSTD_compress@@Base+0x711c>  // b.pmore
   15950:	cmp	w8, #0x0
   15954:	csel	w8, w8, w20, ne  // ne = any
   15958:	cmp	w6, #0x0
   1595c:	csel	w20, w20, w6, eq  // eq = none
   15960:	stp	w8, w20, [x13]
   15964:	b	14df8 <ZSTD_compress@@Base+0x65ac>
   15968:	add	x19, x18, #0x2
   1596c:	mov	w1, w15
   15970:	mov	x0, x18
   15974:	mov	w2, #0x7                   	// #7
   15978:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   1597c:	mov	x3, x0
   15980:	ldr	w21, [x18]
   15984:	mov	w1, w15
   15988:	mov	w2, #0x7                   	// #7
   1598c:	mov	x0, x5
   15990:	str	x3, [sp, #96]
   15994:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   15998:	ldr	x3, [sp, #96]
   1599c:	lsl	x0, x0, #2
   159a0:	ldr	w4, [x5]
   159a4:	sub	x22, x18, x9
   159a8:	sub	x1, x19, w8, uxtw
   159ac:	cmp	w8, #0x0
   159b0:	lsl	x2, x3, #2
   159b4:	ldr	w3, [x11, x0]
   159b8:	ldr	w16, [x11, x2]
   159bc:	str	w22, [x11, x2]
   159c0:	sub	x2, x5, x9
   159c4:	str	w2, [x11, x0]
   159c8:	ldr	w0, [x1]
   159cc:	ldur	w2, [x18, #2]
   159d0:	ccmp	w2, w0, #0x0, ne  // ne = any
   159d4:	b.ne	15b74 <ZSTD_compress@@Base+0x7328>  // b.any
   159d8:	ldurb	w0, [x1, #-1]
   159dc:	mov	w21, w8
   159e0:	ldrb	w2, [x18, #1]
   159e4:	mov	w8, w6
   159e8:	cmp	w2, w0
   159ec:	csetm	x0, eq  // eq = none
   159f0:	cset	x5, eq  // eq = none
   159f4:	add	x1, x1, x0
   159f8:	add	x18, x19, x0
   159fc:	mov	w19, #0x0                   	// #0
   15a00:	add	x0, x5, #0x4
   15a04:	mov	x2, x10
   15a08:	add	x1, x1, x0
   15a0c:	add	x0, x18, x0
   15a10:	str	x5, [sp, #96]
   15a14:	bl	141a4 <ZSTD_compress@@Base+0x5958>
   15a18:	ldr	x5, [sp, #96]
   15a1c:	sub	x4, x18, x7
   15a20:	cmp	x18, x23
   15a24:	add	x5, x5, x0
   15a28:	add	x6, x5, #0x4
   15a2c:	add	x5, x5, #0x1
   15a30:	ldr	x0, [x28, #24]
   15a34:	b.hi	15c08 <ZSTD_compress@@Base+0x73bc>  // b.pmore
   15a38:	ldp	x2, x3, [x7]
   15a3c:	stp	x2, x3, [x0]
   15a40:	cmp	x4, #0x10
   15a44:	b.ls	15a90 <ZSTD_compress@@Base+0x7244>  // b.plast
   15a48:	ldr	x2, [x28, #24]
   15a4c:	ldp	x0, x1, [x7, #16]
   15a50:	add	x16, x2, x4
   15a54:	stp	x0, x1, [x2, #16]
   15a58:	ldp	x0, x1, [x7, #32]
   15a5c:	stp	x0, x1, [x2, #32]
   15a60:	add	x1, x2, #0x30
   15a64:	cmp	x16, x1
   15a68:	b.ls	15a90 <ZSTD_compress@@Base+0x7244>  // b.plast
   15a6c:	add	x7, x7, #0x30
   15a70:	ldp	x2, x3, [x7]
   15a74:	stp	x2, x3, [x1]
   15a78:	add	x1, x1, #0x20
   15a7c:	ldp	x2, x3, [x7, #16]
   15a80:	stp	x2, x3, [x1, #-16]
   15a84:	add	x7, x7, #0x20
   15a88:	cmp	x16, x1
   15a8c:	b.hi	15a70 <ZSTD_compress@@Base+0x7224>  // b.pmore
   15a90:	ldr	x0, [x28, #24]
   15a94:	mov	x1, #0xffff                	// #65535
   15a98:	cmp	x4, x1
   15a9c:	add	x0, x0, x4
   15aa0:	str	x0, [x28, #24]
   15aa4:	ldr	x0, [x28, #8]
   15aa8:	b.ls	15abc <ZSTD_compress@@Base+0x7270>  // b.plast
   15aac:	ldr	x1, [x28]
   15ab0:	sub	x1, x0, x1
   15ab4:	asr	x1, x1, #3
   15ab8:	stp	w26, w1, [x28, #72]
   15abc:	add	w19, w19, #0x1
   15ac0:	str	w19, [x0]
   15ac4:	strh	w4, [x0, #4]
   15ac8:	mov	x1, #0xffff                	// #65535
   15acc:	cmp	x5, x1
   15ad0:	b.ls	15aec <ZSTD_compress@@Base+0x72a0>  // b.plast
   15ad4:	mov	w1, #0x2                   	// #2
   15ad8:	str	w1, [x28, #72]
   15adc:	ldr	x1, [x28]
   15ae0:	sub	x1, x0, x1
   15ae4:	asr	x1, x1, #3
   15ae8:	str	w1, [x28, #76]
   15aec:	strh	w5, [x0, #6]
   15af0:	add	x0, x0, #0x8
   15af4:	str	x0, [x28, #8]
   15af8:	add	x18, x18, x6
   15afc:	add	x5, x18, #0x1
   15b00:	cmp	x24, x18
   15b04:	b.cc	15b6c <ZSTD_compress@@Base+0x7320>  // b.lo, b.ul, b.last
   15b08:	and	x0, x22, #0xffffffff
   15b0c:	mov	w1, w15
   15b10:	add	x0, x0, #0x2
   15b14:	add	w22, w22, #0x2
   15b18:	add	x0, x9, x0
   15b1c:	mov	w2, #0x7                   	// #7
   15b20:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   15b24:	str	w22, [x11, x0, lsl #2]
   15b28:	sub	x0, x18, #0x2
   15b2c:	mov	w1, w15
   15b30:	sub	x6, x0, x9
   15b34:	mov	w2, #0x7                   	// #7
   15b38:	mov	x19, #0xffff                	// #65535
   15b3c:	mov	w22, #0x2                   	// #2
   15b40:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   15b44:	str	w6, [x11, x0, lsl #2]
   15b48:	cmp	w8, #0x0
   15b4c:	ccmp	x24, x18, #0x0, ne  // ne = any
   15b50:	b.cc	15b6c <ZSTD_compress@@Base+0x7320>  // b.lo, b.ul, b.last
   15b54:	sub	x0, x18, w8, uxtw
   15b58:	mov	w1, w8
   15b5c:	ldr	w2, [x0]
   15b60:	ldr	w0, [x18]
   15b64:	cmp	w2, w0
   15b68:	b.eq	15c24 <ZSTD_compress@@Base+0x73d8>  // b.none
   15b6c:	mov	x7, x18
   15b70:	b	15bbc <ZSTD_compress@@Base+0x7370>
   15b74:	cmp	w12, w16
   15b78:	b.cs	15b8c <ZSTD_compress@@Base+0x7340>  // b.hs, b.nlast
   15b7c:	ldr	w1, [x9, w16, uxtw]
   15b80:	add	x0, x9, w16, uxtw
   15b84:	cmp	w21, w1
   15b88:	b.eq	15bcc <ZSTD_compress@@Base+0x7380>  // b.none
   15b8c:	cmp	w12, w3
   15b90:	b.cs	15ba4 <ZSTD_compress@@Base+0x7358>  // b.hs, b.nlast
   15b94:	ldr	w1, [x9, w3, uxtw]
   15b98:	add	x0, x9, w3, uxtw
   15b9c:	cmp	w4, w1
   15ba0:	b.eq	15bc8 <ZSTD_compress@@Base+0x737c>  // b.none
   15ba4:	sub	x0, x18, x7
   15ba8:	mov	w21, w8
   15bac:	mov	w8, w6
   15bb0:	add	x0, x14, x0, lsr #7
   15bb4:	add	x18, x18, x0
   15bb8:	add	x5, x5, x0
   15bbc:	mov	w6, w8
   15bc0:	mov	w8, w21
   15bc4:	b	15948 <ZSTD_compress@@Base+0x70fc>
   15bc8:	mov	x18, x5
   15bcc:	sub	x19, x18, x0
   15bd0:	mov	x1, x0
   15bd4:	mov	w21, w19
   15bd8:	add	w19, w19, #0x2
   15bdc:	cmp	x7, x18
   15be0:	sub	x5, x0, x1
   15be4:	ccmp	x25, x1, #0x2, cc  // cc = lo, ul, last
   15be8:	b.cs	15a00 <ZSTD_compress@@Base+0x71b4>  // b.hs, b.nlast
   15bec:	ldurb	w3, [x18, #-1]
   15bf0:	ldurb	w2, [x1, #-1]
   15bf4:	cmp	w3, w2
   15bf8:	b.ne	15a00 <ZSTD_compress@@Base+0x71b4>  // b.any
   15bfc:	sub	x18, x18, #0x1
   15c00:	sub	x1, x1, #0x1
   15c04:	b	15bdc <ZSTD_compress@@Base+0x7390>
   15c08:	mov	x3, x23
   15c0c:	mov	x2, x18
   15c10:	mov	x1, x7
   15c14:	stp	x6, x4, [sp, #96]
   15c18:	bl	14098 <ZSTD_compress@@Base+0x584c>
   15c1c:	ldp	x6, x4, [sp, #96]
   15c20:	b	15a90 <ZSTD_compress@@Base+0x7244>
   15c24:	sub	x1, x27, x1
   15c28:	mov	x2, x10
   15c2c:	add	x1, x18, x1
   15c30:	add	x0, x18, #0x4
   15c34:	bl	141a4 <ZSTD_compress@@Base+0x5958>
   15c38:	mov	x6, x0
   15c3c:	sub	x5, x18, x9
   15c40:	mov	w1, w15
   15c44:	mov	x0, x18
   15c48:	mov	w2, #0x7                   	// #7
   15c4c:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   15c50:	add	x4, x6, #0x4
   15c54:	str	w5, [x11, x0, lsl #2]
   15c58:	add	x4, x18, x4
   15c5c:	add	x5, x4, #0x1
   15c60:	add	x6, x6, #0x1
   15c64:	cmp	x23, x18
   15c68:	ldr	x0, [x28, #24]
   15c6c:	b.cc	15cbc <ZSTD_compress@@Base+0x7470>  // b.lo, b.ul, b.last
   15c70:	ldp	x2, x3, [x18]
   15c74:	stp	x2, x3, [x0]
   15c78:	cmp	x6, x19
   15c7c:	ldr	x0, [x28, #8]
   15c80:	str	w26, [x0]
   15c84:	strh	wzr, [x0, #4]
   15c88:	b.ls	15c9c <ZSTD_compress@@Base+0x7450>  // b.plast
   15c8c:	ldr	x1, [x28]
   15c90:	sub	x1, x0, x1
   15c94:	asr	x1, x1, #3
   15c98:	stp	w22, w1, [x28, #72]
   15c9c:	add	x0, x0, #0x8
   15ca0:	sturh	w6, [x0, #-2]
   15ca4:	str	x0, [x28, #8]
   15ca8:	mov	w0, w21
   15cac:	mov	x18, x4
   15cb0:	mov	w21, w8
   15cb4:	mov	w8, w0
   15cb8:	b	15b48 <ZSTD_compress@@Base+0x72fc>
   15cbc:	mov	x3, x23
   15cc0:	mov	x2, x18
   15cc4:	mov	x1, x18
   15cc8:	stp	x4, x6, [sp, #96]
   15ccc:	bl	14098 <ZSTD_compress@@Base+0x584c>
   15cd0:	ldp	x4, x6, [sp, #96]
   15cd4:	b	15c78 <ZSTD_compress@@Base+0x742c>
   15cd8:	stp	x29, x30, [sp, #-192]!
   15cdc:	add	x13, x3, x4
   15ce0:	mov	x29, sp
   15ce4:	str	x2, [sp, #136]
   15ce8:	ldr	x2, [x0, #48]
   15cec:	str	x2, [sp, #104]
   15cf0:	ldr	w2, [x0, #204]
   15cf4:	stp	x19, x20, [sp, #16]
   15cf8:	cmp	w2, #0x0
   15cfc:	cinc	w2, w2, eq  // eq = none
   15d00:	str	w2, [sp, #156]
   15d04:	sub	x2, x13, #0x8
   15d08:	ldr	w19, [x0, #24]
   15d0c:	stp	x21, x22, [sp, #32]
   15d10:	mov	x22, x1
   15d14:	ldr	w1, [x0, #200]
   15d18:	stp	x27, x28, [sp, #80]
   15d1c:	mov	x28, x3
   15d20:	ldr	w3, [x0, #192]
   15d24:	str	x2, [sp, #128]
   15d28:	ldr	x18, [x0, #8]
   15d2c:	stp	x23, x24, [sp, #48]
   15d30:	ldr	x2, [sp, #136]
   15d34:	stp	x25, x26, [sp, #64]
   15d38:	add	x21, x18, w19, uxtw
   15d3c:	ldr	x0, [x0, #176]
   15d40:	str	w3, [sp, #144]
   15d44:	ldp	w15, w14, [x2]
   15d48:	ldr	x2, [x0, #48]
   15d4c:	str	x2, [sp, #184]
   15d50:	ldr	w2, [x0, #24]
   15d54:	str	w2, [sp, #168]
   15d58:	ldr	x2, [x0, #8]
   15d5c:	str	x2, [sp, #112]
   15d60:	ldr	w2, [sp, #168]
   15d64:	ldr	x3, [sp, #112]
   15d68:	add	x2, x3, w2, uxtw
   15d6c:	str	x2, [sp, #160]
   15d70:	ldr	x2, [x0], #184
   15d74:	str	x2, [sp, #120]
   15d78:	sub	x2, x2, x3
   15d7c:	str	w2, [sp, #148]
   15d80:	sub	w2, w19, w2
   15d84:	str	w2, [sp, #180]
   15d88:	ldr	x2, [sp, #120]
   15d8c:	ldr	w0, [x0, #8]
   15d90:	str	w0, [sp, #176]
   15d94:	sub	x0, x28, x21
   15d98:	add	x0, x2, x0
   15d9c:	ldr	w2, [sp, #160]
   15da0:	cmp	w0, w2
   15da4:	sub	w0, w19, #0x1
   15da8:	str	w0, [sp, #152]
   15dac:	cinc	x20, x28, eq  // eq = none
   15db0:	cmp	w1, #0x6
   15db4:	b.ne	16080 <ZSTD_compress@@Base+0x7834>  // b.any
   15db8:	sub	x23, x13, #0x20
   15dbc:	mov	w24, #0x1                   	// #1
   15dc0:	ldr	x0, [sp, #128]
   15dc4:	cmp	x20, x0
   15dc8:	b.cs	16638 <ZSTD_compress@@Base+0x7dec>  // b.hs, b.nlast
   15dcc:	ldr	w1, [sp, #144]
   15dd0:	mov	w2, #0x6                   	// #6
   15dd4:	mov	x0, x20
   15dd8:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   15ddc:	lsl	x0, x0, #2
   15de0:	ldp	x1, x3, [sp, #104]
   15de4:	sub	x26, x20, x18
   15de8:	sub	w2, w24, w15
   15dec:	add	w2, w2, w26
   15df0:	cmp	w2, w19
   15df4:	ldr	w4, [x1, x0]
   15df8:	ldr	w1, [sp, #148]
   15dfc:	sub	w1, w1, w19
   15e00:	add	w1, w1, w2
   15e04:	add	x1, x3, x1
   15e08:	add	x3, x18, w2, uxtw
   15e0c:	csel	x1, x3, x1, cs  // cs = hs, nlast
   15e10:	ldr	x3, [sp, #104]
   15e14:	str	w26, [x3, x0]
   15e18:	ldr	w0, [sp, #152]
   15e1c:	sub	w0, w0, w2
   15e20:	cmp	w0, #0x2
   15e24:	b.ls	16fb8 <ZSTD_compress@@Base+0x876c>  // b.plast
   15e28:	ldr	w0, [x1]
   15e2c:	ldur	w3, [x20, #1]
   15e30:	cmp	w3, w0
   15e34:	b.ne	16fb8 <ZSTD_compress@@Base+0x876c>  // b.any
   15e38:	cmp	w2, w19
   15e3c:	add	x25, x20, #0x1
   15e40:	ldr	x0, [sp, #120]
   15e44:	mov	x4, x21
   15e48:	mov	x2, x13
   15e4c:	add	x1, x1, #0x4
   15e50:	csel	x3, x0, x13, cc  // cc = lo, ul, last
   15e54:	add	x0, x20, #0x5
   15e58:	bl	14284 <ZSTD_compress@@Base+0x5a38>
   15e5c:	add	x8, x0, #0x4
   15e60:	add	x5, x0, #0x1
   15e64:	sub	x9, x25, x28
   15e68:	cmp	x25, x23
   15e6c:	ldr	x0, [x22, #24]
   15e70:	b.hi	16fa4 <ZSTD_compress@@Base+0x8758>  // b.pmore
   15e74:	ldp	x2, x3, [x28]
   15e78:	stp	x2, x3, [x0]
   15e7c:	cmp	x9, #0x10
   15e80:	b.ls	15ecc <ZSTD_compress@@Base+0x7680>  // b.plast
   15e84:	ldr	x2, [x22, #24]
   15e88:	ldp	x0, x1, [x28, #16]
   15e8c:	add	x10, x2, x9
   15e90:	stp	x0, x1, [x2, #16]
   15e94:	ldp	x0, x1, [x28, #32]
   15e98:	stp	x0, x1, [x2, #32]
   15e9c:	add	x1, x2, #0x30
   15ea0:	cmp	x10, x1
   15ea4:	b.ls	15ecc <ZSTD_compress@@Base+0x7680>  // b.plast
   15ea8:	add	x6, x28, #0x30
   15eac:	ldp	x2, x3, [x6]
   15eb0:	stp	x2, x3, [x1]
   15eb4:	add	x1, x1, #0x20
   15eb8:	ldp	x2, x3, [x6, #16]
   15ebc:	stp	x2, x3, [x1, #-16]
   15ec0:	add	x6, x6, #0x20
   15ec4:	cmp	x10, x1
   15ec8:	b.hi	15eac <ZSTD_compress@@Base+0x7660>  // b.pmore
   15ecc:	ldr	x0, [x22, #24]
   15ed0:	mov	x1, #0xffff                	// #65535
   15ed4:	cmp	x9, x1
   15ed8:	add	x0, x0, x9
   15edc:	str	x0, [x22, #24]
   15ee0:	ldr	x0, [x22, #8]
   15ee4:	b.ls	15ef8 <ZSTD_compress@@Base+0x76ac>  // b.plast
   15ee8:	ldr	x1, [x22]
   15eec:	sub	x1, x0, x1
   15ef0:	asr	x1, x1, #3
   15ef4:	stp	w24, w1, [x22, #72]
   15ef8:	str	w24, [x0]
   15efc:	mov	x1, #0xffff                	// #65535
   15f00:	strh	w9, [x0, #4]
   15f04:	cmp	x5, x1
   15f08:	b.ls	15f24 <ZSTD_compress@@Base+0x76d8>  // b.plast
   15f0c:	mov	w1, #0x2                   	// #2
   15f10:	str	w1, [x22, #72]
   15f14:	ldr	x1, [x22]
   15f18:	sub	x1, x0, x1
   15f1c:	asr	x1, x1, #3
   15f20:	str	w1, [x22, #76]
   15f24:	mov	x20, x25
   15f28:	strh	w5, [x0, #6]
   15f2c:	add	x0, x0, #0x8
   15f30:	str	x0, [x22, #8]
   15f34:	ldr	x0, [sp, #128]
   15f38:	add	x20, x20, x8
   15f3c:	cmp	x20, x0
   15f40:	b.hi	16078 <ZSTD_compress@@Base+0x782c>  // b.pmore
   15f44:	ldr	w1, [sp, #144]
   15f48:	and	x0, x26, #0xffffffff
   15f4c:	add	x0, x0, #0x2
   15f50:	mov	w2, #0x6                   	// #6
   15f54:	add	x0, x18, x0
   15f58:	add	w26, w26, #0x2
   15f5c:	mov	x27, #0xffff                	// #65535
   15f60:	mov	w28, #0x2                   	// #2
   15f64:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   15f68:	ldr	x1, [sp, #104]
   15f6c:	mov	w2, #0x6                   	// #6
   15f70:	str	w26, [x1, x0, lsl #2]
   15f74:	sub	x0, x20, #0x2
   15f78:	ldr	w1, [sp, #144]
   15f7c:	sub	x6, x0, x18
   15f80:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   15f84:	ldr	w26, [sp, #180]
   15f88:	ldr	x1, [sp, #104]
   15f8c:	str	w6, [x1, x0, lsl #2]
   15f90:	sub	x25, x20, x18
   15f94:	ldr	x2, [sp, #112]
   15f98:	sub	w0, w25, w14
   15f9c:	sub	x1, x0, x26
   15fa0:	sub	w3, w25, w14
   15fa4:	add	x2, x2, x1
   15fa8:	add	x1, x18, x0
   15fac:	ldr	w0, [sp, #152]
   15fb0:	cmp	w3, w19
   15fb4:	csel	x1, x1, x2, cs  // cs = hs, nlast
   15fb8:	add	w0, w14, w0
   15fbc:	sub	w0, w0, w25
   15fc0:	cmp	w0, #0x2
   15fc4:	b.ls	16078 <ZSTD_compress@@Base+0x782c>  // b.plast
   15fc8:	ldr	w0, [x1]
   15fcc:	ldr	w2, [x20]
   15fd0:	cmp	w2, w0
   15fd4:	b.ne	16078 <ZSTD_compress@@Base+0x782c>  // b.any
   15fd8:	cmp	w3, w19
   15fdc:	mov	x4, x21
   15fe0:	ldr	x0, [sp, #120]
   15fe4:	mov	x2, x13
   15fe8:	add	x1, x1, #0x4
   15fec:	csel	x3, x0, x13, cc  // cc = lo, ul, last
   15ff0:	add	x0, x20, #0x4
   15ff4:	bl	14284 <ZSTD_compress@@Base+0x5a38>
   15ff8:	add	x9, x0, #0x4
   15ffc:	add	x8, x0, #0x1
   16000:	cmp	x20, x23
   16004:	ldr	x0, [x22, #24]
   16008:	b.hi	172bc <ZSTD_compress@@Base+0x8a70>  // b.pmore
   1600c:	ldp	x2, x3, [x20]
   16010:	stp	x2, x3, [x0]
   16014:	cmp	x8, x27
   16018:	ldr	x0, [x22, #8]
   1601c:	str	w24, [x0]
   16020:	strh	wzr, [x0, #4]
   16024:	b.ls	16038 <ZSTD_compress@@Base+0x77ec>  // b.plast
   16028:	ldr	x1, [x22]
   1602c:	sub	x1, x0, x1
   16030:	asr	x1, x1, #3
   16034:	stp	w28, w1, [x22, #72]
   16038:	ldr	w1, [sp, #144]
   1603c:	add	x0, x0, #0x8
   16040:	sturh	w8, [x0, #-2]
   16044:	mov	w2, #0x6                   	// #6
   16048:	str	x0, [x22, #8]
   1604c:	mov	x0, x20
   16050:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   16054:	add	x20, x20, x9
   16058:	ldr	x1, [sp, #104]
   1605c:	str	w25, [x1, x0, lsl #2]
   16060:	ldr	x0, [sp, #128]
   16064:	cmp	x20, x0
   16068:	b.ls	172ac <ZSTD_compress@@Base+0x8a60>  // b.plast
   1606c:	mov	w0, w15
   16070:	mov	w15, w14
   16074:	mov	w14, w0
   16078:	mov	x28, x20
   1607c:	b	15dc0 <ZSTD_compress@@Base+0x7574>
   16080:	cmp	w1, #0x7
   16084:	b.ne	16350 <ZSTD_compress@@Base+0x7b04>  // b.any
   16088:	sub	x23, x13, #0x20
   1608c:	mov	w24, #0x1                   	// #1
   16090:	ldr	x0, [sp, #128]
   16094:	cmp	x20, x0
   16098:	b.cs	16638 <ZSTD_compress@@Base+0x7dec>  // b.hs, b.nlast
   1609c:	ldr	w1, [sp, #144]
   160a0:	mov	w2, #0x7                   	// #7
   160a4:	mov	x0, x20
   160a8:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   160ac:	lsl	x0, x0, #2
   160b0:	ldp	x1, x3, [sp, #104]
   160b4:	sub	x26, x20, x18
   160b8:	sub	w2, w24, w15
   160bc:	add	w2, w2, w26
   160c0:	cmp	w2, w19
   160c4:	ldr	w4, [x1, x0]
   160c8:	ldr	w1, [sp, #148]
   160cc:	sub	w1, w1, w19
   160d0:	add	w1, w1, w2
   160d4:	add	x1, x3, x1
   160d8:	add	x3, x18, w2, uxtw
   160dc:	csel	x1, x3, x1, cs  // cs = hs, nlast
   160e0:	ldr	x3, [sp, #104]
   160e4:	str	w26, [x3, x0]
   160e8:	ldr	w0, [sp, #152]
   160ec:	sub	w0, w0, w2
   160f0:	cmp	w0, #0x2
   160f4:	b.ls	172e4 <ZSTD_compress@@Base+0x8a98>  // b.plast
   160f8:	ldr	w0, [x1]
   160fc:	ldur	w3, [x20, #1]
   16100:	cmp	w3, w0
   16104:	b.ne	172e4 <ZSTD_compress@@Base+0x8a98>  // b.any
   16108:	cmp	w2, w19
   1610c:	add	x25, x20, #0x1
   16110:	ldr	x0, [sp, #120]
   16114:	mov	x4, x21
   16118:	mov	x2, x13
   1611c:	add	x1, x1, #0x4
   16120:	csel	x3, x0, x13, cc  // cc = lo, ul, last
   16124:	add	x0, x20, #0x5
   16128:	bl	14284 <ZSTD_compress@@Base+0x5a38>
   1612c:	add	x8, x0, #0x4
   16130:	add	x5, x0, #0x1
   16134:	sub	x9, x25, x28
   16138:	cmp	x25, x23
   1613c:	ldr	x0, [x22, #24]
   16140:	b.hi	172d0 <ZSTD_compress@@Base+0x8a84>  // b.pmore
   16144:	ldp	x2, x3, [x28]
   16148:	stp	x2, x3, [x0]
   1614c:	cmp	x9, #0x10
   16150:	b.ls	1619c <ZSTD_compress@@Base+0x7950>  // b.plast
   16154:	ldr	x2, [x22, #24]
   16158:	ldp	x0, x1, [x28, #16]
   1615c:	add	x10, x2, x9
   16160:	stp	x0, x1, [x2, #16]
   16164:	ldp	x0, x1, [x28, #32]
   16168:	stp	x0, x1, [x2, #32]
   1616c:	add	x1, x2, #0x30
   16170:	cmp	x10, x1
   16174:	b.ls	1619c <ZSTD_compress@@Base+0x7950>  // b.plast
   16178:	add	x6, x28, #0x30
   1617c:	ldp	x2, x3, [x6]
   16180:	stp	x2, x3, [x1]
   16184:	add	x1, x1, #0x20
   16188:	ldp	x2, x3, [x6, #16]
   1618c:	stp	x2, x3, [x1, #-16]
   16190:	add	x6, x6, #0x20
   16194:	cmp	x10, x1
   16198:	b.hi	1617c <ZSTD_compress@@Base+0x7930>  // b.pmore
   1619c:	ldr	x0, [x22, #24]
   161a0:	mov	x1, #0xffff                	// #65535
   161a4:	cmp	x9, x1
   161a8:	add	x0, x0, x9
   161ac:	str	x0, [x22, #24]
   161b0:	ldr	x0, [x22, #8]
   161b4:	b.ls	161c8 <ZSTD_compress@@Base+0x797c>  // b.plast
   161b8:	ldr	x1, [x22]
   161bc:	sub	x1, x0, x1
   161c0:	asr	x1, x1, #3
   161c4:	stp	w24, w1, [x22, #72]
   161c8:	str	w24, [x0]
   161cc:	mov	x1, #0xffff                	// #65535
   161d0:	strh	w9, [x0, #4]
   161d4:	cmp	x5, x1
   161d8:	b.ls	161f4 <ZSTD_compress@@Base+0x79a8>  // b.plast
   161dc:	mov	w1, #0x2                   	// #2
   161e0:	str	w1, [x22, #72]
   161e4:	ldr	x1, [x22]
   161e8:	sub	x1, x0, x1
   161ec:	asr	x1, x1, #3
   161f0:	str	w1, [x22, #76]
   161f4:	mov	x20, x25
   161f8:	strh	w5, [x0, #6]
   161fc:	add	x0, x0, #0x8
   16200:	str	x0, [x22, #8]
   16204:	ldr	x0, [sp, #128]
   16208:	add	x20, x20, x8
   1620c:	cmp	x20, x0
   16210:	b.hi	16348 <ZSTD_compress@@Base+0x7afc>  // b.pmore
   16214:	ldr	w1, [sp, #144]
   16218:	and	x0, x26, #0xffffffff
   1621c:	add	x0, x0, #0x2
   16220:	mov	w2, #0x7                   	// #7
   16224:	add	x0, x18, x0
   16228:	add	w26, w26, #0x2
   1622c:	mov	x27, #0xffff                	// #65535
   16230:	mov	w28, #0x2                   	// #2
   16234:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   16238:	ldr	x1, [sp, #104]
   1623c:	mov	w2, #0x7                   	// #7
   16240:	str	w26, [x1, x0, lsl #2]
   16244:	sub	x0, x20, #0x2
   16248:	ldr	w1, [sp, #144]
   1624c:	sub	x6, x0, x18
   16250:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   16254:	ldr	w26, [sp, #180]
   16258:	ldr	x1, [sp, #104]
   1625c:	str	w6, [x1, x0, lsl #2]
   16260:	sub	x25, x20, x18
   16264:	ldr	x2, [sp, #112]
   16268:	sub	w0, w25, w14
   1626c:	sub	x1, x0, x26
   16270:	sub	w3, w25, w14
   16274:	add	x2, x2, x1
   16278:	add	x1, x18, x0
   1627c:	ldr	w0, [sp, #152]
   16280:	cmp	w3, w19
   16284:	csel	x1, x1, x2, cs  // cs = hs, nlast
   16288:	add	w0, w14, w0
   1628c:	sub	w0, w0, w25
   16290:	cmp	w0, #0x2
   16294:	b.ls	16348 <ZSTD_compress@@Base+0x7afc>  // b.plast
   16298:	ldr	w0, [x1]
   1629c:	ldr	w2, [x20]
   162a0:	cmp	w2, w0
   162a4:	b.ne	16348 <ZSTD_compress@@Base+0x7afc>  // b.any
   162a8:	cmp	w3, w19
   162ac:	mov	x4, x21
   162b0:	ldr	x0, [sp, #120]
   162b4:	mov	x2, x13
   162b8:	add	x1, x1, #0x4
   162bc:	csel	x3, x0, x13, cc  // cc = lo, ul, last
   162c0:	add	x0, x20, #0x4
   162c4:	bl	14284 <ZSTD_compress@@Base+0x5a38>
   162c8:	add	x9, x0, #0x4
   162cc:	add	x8, x0, #0x1
   162d0:	cmp	x20, x23
   162d4:	ldr	x0, [x22, #24]
   162d8:	b.hi	175e8 <ZSTD_compress@@Base+0x8d9c>  // b.pmore
   162dc:	ldp	x2, x3, [x20]
   162e0:	stp	x2, x3, [x0]
   162e4:	cmp	x8, x27
   162e8:	ldr	x0, [x22, #8]
   162ec:	str	w24, [x0]
   162f0:	strh	wzr, [x0, #4]
   162f4:	b.ls	16308 <ZSTD_compress@@Base+0x7abc>  // b.plast
   162f8:	ldr	x1, [x22]
   162fc:	sub	x1, x0, x1
   16300:	asr	x1, x1, #3
   16304:	stp	w28, w1, [x22, #72]
   16308:	ldr	w1, [sp, #144]
   1630c:	add	x0, x0, #0x8
   16310:	sturh	w8, [x0, #-2]
   16314:	mov	w2, #0x7                   	// #7
   16318:	str	x0, [x22, #8]
   1631c:	mov	x0, x20
   16320:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   16324:	add	x20, x20, x9
   16328:	ldr	x1, [sp, #104]
   1632c:	str	w25, [x1, x0, lsl #2]
   16330:	ldr	x0, [sp, #128]
   16334:	cmp	x20, x0
   16338:	b.ls	175d8 <ZSTD_compress@@Base+0x8d8c>  // b.plast
   1633c:	mov	w0, w15
   16340:	mov	w15, w14
   16344:	mov	w14, w0
   16348:	mov	x28, x20
   1634c:	b	16090 <ZSTD_compress@@Base+0x7844>
   16350:	cmp	w1, #0x5
   16354:	b.ne	16620 <ZSTD_compress@@Base+0x7dd4>  // b.any
   16358:	sub	x23, x13, #0x20
   1635c:	mov	w24, #0x1                   	// #1
   16360:	ldr	x0, [sp, #128]
   16364:	cmp	x20, x0
   16368:	b.cs	16638 <ZSTD_compress@@Base+0x7dec>  // b.hs, b.nlast
   1636c:	ldr	w1, [sp, #144]
   16370:	mov	w2, #0x5                   	// #5
   16374:	mov	x0, x20
   16378:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   1637c:	lsl	x0, x0, #2
   16380:	ldp	x1, x3, [sp, #104]
   16384:	sub	x26, x20, x18
   16388:	sub	w2, w24, w15
   1638c:	add	w2, w2, w26
   16390:	cmp	w2, w19
   16394:	ldr	w4, [x1, x0]
   16398:	ldr	w1, [sp, #148]
   1639c:	sub	w1, w1, w19
   163a0:	add	w1, w1, w2
   163a4:	add	x1, x3, x1
   163a8:	add	x3, x18, w2, uxtw
   163ac:	csel	x1, x3, x1, cs  // cs = hs, nlast
   163b0:	ldr	x3, [sp, #104]
   163b4:	str	w26, [x3, x0]
   163b8:	ldr	w0, [sp, #152]
   163bc:	sub	w0, w0, w2
   163c0:	cmp	w0, #0x2
   163c4:	b.ls	16c8c <ZSTD_compress@@Base+0x8440>  // b.plast
   163c8:	ldr	w0, [x1]
   163cc:	ldur	w3, [x20, #1]
   163d0:	cmp	w3, w0
   163d4:	b.ne	16c8c <ZSTD_compress@@Base+0x8440>  // b.any
   163d8:	cmp	w2, w19
   163dc:	add	x25, x20, #0x1
   163e0:	ldr	x0, [sp, #120]
   163e4:	mov	x4, x21
   163e8:	mov	x2, x13
   163ec:	add	x1, x1, #0x4
   163f0:	csel	x3, x0, x13, cc  // cc = lo, ul, last
   163f4:	add	x0, x20, #0x5
   163f8:	bl	14284 <ZSTD_compress@@Base+0x5a38>
   163fc:	add	x8, x0, #0x4
   16400:	add	x5, x0, #0x1
   16404:	sub	x9, x25, x28
   16408:	cmp	x25, x23
   1640c:	ldr	x0, [x22, #24]
   16410:	b.hi	16c78 <ZSTD_compress@@Base+0x842c>  // b.pmore
   16414:	ldp	x2, x3, [x28]
   16418:	stp	x2, x3, [x0]
   1641c:	cmp	x9, #0x10
   16420:	b.ls	1646c <ZSTD_compress@@Base+0x7c20>  // b.plast
   16424:	ldr	x2, [x22, #24]
   16428:	ldp	x0, x1, [x28, #16]
   1642c:	add	x10, x2, x9
   16430:	stp	x0, x1, [x2, #16]
   16434:	ldp	x0, x1, [x28, #32]
   16438:	stp	x0, x1, [x2, #32]
   1643c:	add	x1, x2, #0x30
   16440:	cmp	x10, x1
   16444:	b.ls	1646c <ZSTD_compress@@Base+0x7c20>  // b.plast
   16448:	add	x6, x28, #0x30
   1644c:	ldp	x2, x3, [x6]
   16450:	stp	x2, x3, [x1]
   16454:	add	x1, x1, #0x20
   16458:	ldp	x2, x3, [x6, #16]
   1645c:	stp	x2, x3, [x1, #-16]
   16460:	add	x6, x6, #0x20
   16464:	cmp	x10, x1
   16468:	b.hi	1644c <ZSTD_compress@@Base+0x7c00>  // b.pmore
   1646c:	ldr	x0, [x22, #24]
   16470:	mov	x1, #0xffff                	// #65535
   16474:	cmp	x9, x1
   16478:	add	x0, x0, x9
   1647c:	str	x0, [x22, #24]
   16480:	ldr	x0, [x22, #8]
   16484:	b.ls	16498 <ZSTD_compress@@Base+0x7c4c>  // b.plast
   16488:	ldr	x1, [x22]
   1648c:	sub	x1, x0, x1
   16490:	asr	x1, x1, #3
   16494:	stp	w24, w1, [x22, #72]
   16498:	str	w24, [x0]
   1649c:	mov	x1, #0xffff                	// #65535
   164a0:	strh	w9, [x0, #4]
   164a4:	cmp	x5, x1
   164a8:	b.ls	164c4 <ZSTD_compress@@Base+0x7c78>  // b.plast
   164ac:	mov	w1, #0x2                   	// #2
   164b0:	str	w1, [x22, #72]
   164b4:	ldr	x1, [x22]
   164b8:	sub	x1, x0, x1
   164bc:	asr	x1, x1, #3
   164c0:	str	w1, [x22, #76]
   164c4:	mov	x20, x25
   164c8:	strh	w5, [x0, #6]
   164cc:	add	x0, x0, #0x8
   164d0:	str	x0, [x22, #8]
   164d4:	ldr	x0, [sp, #128]
   164d8:	add	x20, x20, x8
   164dc:	cmp	x20, x0
   164e0:	b.hi	16618 <ZSTD_compress@@Base+0x7dcc>  // b.pmore
   164e4:	ldr	w1, [sp, #144]
   164e8:	and	x0, x26, #0xffffffff
   164ec:	add	x0, x0, #0x2
   164f0:	mov	w2, #0x5                   	// #5
   164f4:	add	x0, x18, x0
   164f8:	add	w26, w26, #0x2
   164fc:	mov	x27, #0xffff                	// #65535
   16500:	mov	w28, #0x2                   	// #2
   16504:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   16508:	ldr	x1, [sp, #104]
   1650c:	mov	w2, #0x5                   	// #5
   16510:	str	w26, [x1, x0, lsl #2]
   16514:	sub	x0, x20, #0x2
   16518:	ldr	w1, [sp, #144]
   1651c:	sub	x6, x0, x18
   16520:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   16524:	ldr	w26, [sp, #180]
   16528:	ldr	x1, [sp, #104]
   1652c:	str	w6, [x1, x0, lsl #2]
   16530:	sub	x25, x20, x18
   16534:	ldr	x2, [sp, #112]
   16538:	sub	w0, w25, w14
   1653c:	sub	x1, x0, x26
   16540:	sub	w3, w25, w14
   16544:	add	x2, x2, x1
   16548:	add	x1, x18, x0
   1654c:	ldr	w0, [sp, #152]
   16550:	cmp	w3, w19
   16554:	csel	x1, x1, x2, cs  // cs = hs, nlast
   16558:	add	w0, w14, w0
   1655c:	sub	w0, w0, w25
   16560:	cmp	w0, #0x2
   16564:	b.ls	16618 <ZSTD_compress@@Base+0x7dcc>  // b.plast
   16568:	ldr	w0, [x1]
   1656c:	ldr	w2, [x20]
   16570:	cmp	w2, w0
   16574:	b.ne	16618 <ZSTD_compress@@Base+0x7dcc>  // b.any
   16578:	cmp	w3, w19
   1657c:	mov	x4, x21
   16580:	ldr	x0, [sp, #120]
   16584:	mov	x2, x13
   16588:	add	x1, x1, #0x4
   1658c:	csel	x3, x0, x13, cc  // cc = lo, ul, last
   16590:	add	x0, x20, #0x4
   16594:	bl	14284 <ZSTD_compress@@Base+0x5a38>
   16598:	add	x9, x0, #0x4
   1659c:	add	x8, x0, #0x1
   165a0:	cmp	x23, x20
   165a4:	ldr	x0, [x22, #24]
   165a8:	b.cc	16f90 <ZSTD_compress@@Base+0x8744>  // b.lo, b.ul, b.last
   165ac:	ldp	x2, x3, [x20]
   165b0:	stp	x2, x3, [x0]
   165b4:	cmp	x8, x27
   165b8:	ldr	x0, [x22, #8]
   165bc:	str	w24, [x0]
   165c0:	strh	wzr, [x0, #4]
   165c4:	b.ls	165d8 <ZSTD_compress@@Base+0x7d8c>  // b.plast
   165c8:	ldr	x1, [x22]
   165cc:	sub	x1, x0, x1
   165d0:	asr	x1, x1, #3
   165d4:	stp	w28, w1, [x22, #72]
   165d8:	ldr	w1, [sp, #144]
   165dc:	add	x0, x0, #0x8
   165e0:	sturh	w8, [x0, #-2]
   165e4:	mov	w2, #0x5                   	// #5
   165e8:	str	x0, [x22, #8]
   165ec:	mov	x0, x20
   165f0:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   165f4:	add	x20, x20, x9
   165f8:	ldr	x1, [sp, #104]
   165fc:	str	w25, [x1, x0, lsl #2]
   16600:	ldr	x0, [sp, #128]
   16604:	cmp	x20, x0
   16608:	b.ls	16f80 <ZSTD_compress@@Base+0x8734>  // b.plast
   1660c:	mov	w0, w15
   16610:	mov	w15, w14
   16614:	mov	w14, w0
   16618:	mov	x28, x20
   1661c:	b	16360 <ZSTD_compress@@Base+0x7b14>
   16620:	mov	w27, #0x79b1                	// #31153
   16624:	sub	x23, x13, #0x20
   16628:	movk	w27, #0x9e37, lsl #16
   1662c:	ldr	x0, [sp, #128]
   16630:	cmp	x20, x0
   16634:	b.cc	16660 <ZSTD_compress@@Base+0x7e14>  // b.lo, b.ul, b.last
   16638:	ldr	x0, [sp, #136]
   1663c:	ldp	x19, x20, [sp, #16]
   16640:	ldp	x21, x22, [sp, #32]
   16644:	ldp	x23, x24, [sp, #48]
   16648:	ldp	x25, x26, [sp, #64]
   1664c:	stp	w15, w14, [x0]
   16650:	sub	x0, x13, x28
   16654:	ldp	x27, x28, [sp, #80]
   16658:	ldp	x29, x30, [sp], #192
   1665c:	ret
   16660:	ldr	w1, [sp, #144]
   16664:	mov	w0, #0x20                  	// #32
   16668:	sub	x25, x20, x18
   1666c:	sub	w0, w0, w1
   16670:	str	w0, [sp, #172]
   16674:	ldr	w0, [x20]
   16678:	sub	w2, w25, w15
   1667c:	ldrb	w1, [sp, #172]
   16680:	add	w2, w2, #0x1
   16684:	ldr	x3, [sp, #112]
   16688:	cmp	w2, w19
   1668c:	mul	w0, w0, w27
   16690:	lsr	w0, w0, w1
   16694:	ldr	x1, [sp, #104]
   16698:	lsl	x0, x0, #2
   1669c:	ldr	w4, [x1, x0]
   166a0:	ldr	w1, [sp, #148]
   166a4:	sub	w1, w1, w19
   166a8:	add	w1, w1, w2
   166ac:	add	x1, x3, x1
   166b0:	add	x3, x18, w2, uxtw
   166b4:	csel	x1, x3, x1, cs  // cs = hs, nlast
   166b8:	ldr	x3, [sp, #104]
   166bc:	str	w25, [x3, x0]
   166c0:	ldr	w0, [sp, #152]
   166c4:	sub	w0, w0, w2
   166c8:	cmp	w0, #0x2
   166cc:	b.ls	16950 <ZSTD_compress@@Base+0x8104>  // b.plast
   166d0:	ldr	w0, [x1]
   166d4:	ldur	w3, [x20, #1]
   166d8:	cmp	w3, w0
   166dc:	b.ne	16950 <ZSTD_compress@@Base+0x8104>  // b.any
   166e0:	cmp	w2, w19
   166e4:	add	x24, x20, #0x1
   166e8:	ldr	x0, [sp, #120]
   166ec:	mov	x4, x21
   166f0:	mov	x2, x13
   166f4:	add	x1, x1, #0x4
   166f8:	csel	x3, x0, x13, cc  // cc = lo, ul, last
   166fc:	add	x0, x20, #0x5
   16700:	bl	14284 <ZSTD_compress@@Base+0x5a38>
   16704:	add	x8, x0, #0x4
   16708:	add	x5, x0, #0x1
   1670c:	sub	x9, x24, x28
   16710:	cmp	x24, x23
   16714:	ldr	x0, [x22, #24]
   16718:	b.hi	1693c <ZSTD_compress@@Base+0x80f0>  // b.pmore
   1671c:	ldp	x2, x3, [x28]
   16720:	stp	x2, x3, [x0]
   16724:	cmp	x9, #0x10
   16728:	b.ls	16774 <ZSTD_compress@@Base+0x7f28>  // b.plast
   1672c:	ldr	x2, [x22, #24]
   16730:	ldp	x0, x1, [x28, #16]
   16734:	add	x10, x2, x9
   16738:	stp	x0, x1, [x2, #16]
   1673c:	ldp	x0, x1, [x28, #32]
   16740:	stp	x0, x1, [x2, #32]
   16744:	add	x1, x2, #0x30
   16748:	cmp	x10, x1
   1674c:	b.ls	16774 <ZSTD_compress@@Base+0x7f28>  // b.plast
   16750:	add	x6, x28, #0x30
   16754:	ldp	x2, x3, [x6]
   16758:	stp	x2, x3, [x1]
   1675c:	add	x1, x1, #0x20
   16760:	ldp	x2, x3, [x6, #16]
   16764:	stp	x2, x3, [x1, #-16]
   16768:	add	x6, x6, #0x20
   1676c:	cmp	x10, x1
   16770:	b.hi	16754 <ZSTD_compress@@Base+0x7f08>  // b.pmore
   16774:	ldr	x0, [x22, #24]
   16778:	mov	x1, #0xffff                	// #65535
   1677c:	cmp	x9, x1
   16780:	add	x0, x0, x9
   16784:	str	x0, [x22, #24]
   16788:	ldr	x0, [x22, #8]
   1678c:	b.ls	167a8 <ZSTD_compress@@Base+0x7f5c>  // b.plast
   16790:	mov	w1, #0x1                   	// #1
   16794:	str	w1, [x22, #72]
   16798:	ldr	x1, [x22]
   1679c:	sub	x1, x0, x1
   167a0:	asr	x1, x1, #3
   167a4:	str	w1, [x22, #76]
   167a8:	mov	w1, #0x1                   	// #1
   167ac:	str	w1, [x0]
   167b0:	strh	w9, [x0, #4]
   167b4:	mov	x1, #0xffff                	// #65535
   167b8:	cmp	x5, x1
   167bc:	b.ls	167d8 <ZSTD_compress@@Base+0x7f8c>  // b.plast
   167c0:	mov	w1, #0x2                   	// #2
   167c4:	str	w1, [x22, #72]
   167c8:	ldr	x1, [x22]
   167cc:	sub	x1, x0, x1
   167d0:	asr	x1, x1, #3
   167d4:	str	w1, [x22, #76]
   167d8:	mov	x20, x24
   167dc:	strh	w5, [x0, #6]
   167e0:	add	x0, x0, #0x8
   167e4:	str	x0, [x22, #8]
   167e8:	ldr	x0, [sp, #128]
   167ec:	add	x20, x20, x8
   167f0:	cmp	x20, x0
   167f4:	b.hi	16934 <ZSTD_compress@@Base+0x80e8>  // b.pmore
   167f8:	add	x0, x18, w25, uxtw
   167fc:	ldrb	w1, [sp, #172]
   16800:	add	w25, w25, #0x2
   16804:	ldrb	w2, [sp, #172]
   16808:	ldr	w24, [sp, #180]
   1680c:	mov	x26, #0xffff                	// #65535
   16810:	ldur	w0, [x0, #2]
   16814:	mul	w0, w0, w27
   16818:	lsr	w0, w0, w1
   1681c:	ldr	x1, [sp, #104]
   16820:	str	w25, [x1, x0, lsl #2]
   16824:	mov	x1, x20
   16828:	mov	w25, #0x1                   	// #1
   1682c:	ldr	w0, [x1, #-2]!
   16830:	sub	x1, x1, x18
   16834:	mul	w0, w0, w27
   16838:	lsr	w0, w0, w2
   1683c:	ldr	x2, [sp, #104]
   16840:	str	w1, [x2, x0, lsl #2]
   16844:	sub	x28, x20, x18
   16848:	ldr	x2, [sp, #112]
   1684c:	sub	w0, w28, w14
   16850:	sub	x1, x0, x24
   16854:	sub	w3, w28, w14
   16858:	add	x2, x2, x1
   1685c:	add	x1, x18, x0
   16860:	ldr	w0, [sp, #152]
   16864:	cmp	w3, w19
   16868:	csel	x1, x1, x2, cs  // cs = hs, nlast
   1686c:	add	w0, w14, w0
   16870:	sub	w0, w0, w28
   16874:	cmp	w0, #0x2
   16878:	b.ls	16934 <ZSTD_compress@@Base+0x80e8>  // b.plast
   1687c:	ldr	w0, [x1]
   16880:	ldr	w2, [x20]
   16884:	cmp	w2, w0
   16888:	b.ne	16934 <ZSTD_compress@@Base+0x80e8>  // b.any
   1688c:	cmp	w3, w19
   16890:	mov	x4, x21
   16894:	ldr	x0, [sp, #120]
   16898:	mov	x2, x13
   1689c:	add	x1, x1, #0x4
   168a0:	csel	x3, x0, x13, cc  // cc = lo, ul, last
   168a4:	add	x0, x20, #0x4
   168a8:	bl	14284 <ZSTD_compress@@Base+0x5a38>
   168ac:	add	x9, x0, #0x4
   168b0:	add	x8, x0, #0x1
   168b4:	cmp	x23, x20
   168b8:	ldr	x0, [x22, #24]
   168bc:	b.cc	16c64 <ZSTD_compress@@Base+0x8418>  // b.lo, b.ul, b.last
   168c0:	ldp	x2, x3, [x20]
   168c4:	stp	x2, x3, [x0]
   168c8:	cmp	x8, x26
   168cc:	ldr	x0, [x22, #8]
   168d0:	str	w25, [x0]
   168d4:	strh	wzr, [x0, #4]
   168d8:	b.ls	168f4 <ZSTD_compress@@Base+0x80a8>  // b.plast
   168dc:	mov	w1, #0x2                   	// #2
   168e0:	str	w1, [x22, #72]
   168e4:	ldr	x1, [x22]
   168e8:	sub	x1, x0, x1
   168ec:	asr	x1, x1, #3
   168f0:	str	w1, [x22, #76]
   168f4:	add	x0, x0, #0x8
   168f8:	sturh	w8, [x0, #-2]
   168fc:	str	x0, [x22, #8]
   16900:	ldr	w0, [x20]
   16904:	add	x20, x20, x9
   16908:	ldrb	w1, [sp, #172]
   1690c:	mul	w0, w0, w27
   16910:	lsr	w0, w0, w1
   16914:	ldr	x1, [sp, #104]
   16918:	str	w28, [x1, x0, lsl #2]
   1691c:	ldr	x0, [sp, #128]
   16920:	cmp	x20, x0
   16924:	b.ls	16c54 <ZSTD_compress@@Base+0x8408>  // b.plast
   16928:	mov	w0, w15
   1692c:	mov	w15, w14
   16930:	mov	w14, w0
   16934:	mov	x28, x20
   16938:	b	1662c <ZSTD_compress@@Base+0x7de0>
   1693c:	mov	x3, x23
   16940:	mov	x2, x24
   16944:	mov	x1, x28
   16948:	bl	14098 <ZSTD_compress@@Base+0x584c>
   1694c:	b	16774 <ZSTD_compress@@Base+0x7f28>
   16950:	ldr	w1, [x20]
   16954:	cmp	w4, w19
   16958:	b.hi	16b04 <ZSTD_compress@@Base+0x82b8>  // b.pmore
   1695c:	ldr	w3, [sp, #176]
   16960:	mul	w0, w1, w27
   16964:	mov	w2, #0x20                  	// #32
   16968:	sub	w2, w2, w3
   1696c:	lsr	w0, w0, w2
   16970:	ldr	x2, [sp, #184]
   16974:	ldr	w24, [x2, x0, lsl #2]
   16978:	ldr	w0, [sp, #168]
   1697c:	cmp	w24, w0
   16980:	b.ls	16998 <ZSTD_compress@@Base+0x814c>  // b.plast
   16984:	ldr	x0, [sp, #112]
   16988:	add	x26, x0, w24, uxtw
   1698c:	ldr	w0, [x0, w24, uxtw]
   16990:	cmp	w0, w1
   16994:	b.eq	169ac <ZSTD_compress@@Base+0x8160>  // b.none
   16998:	ldr	w1, [sp, #156]
   1699c:	sub	x0, x20, x28
   169a0:	add	x0, x1, x0, asr #8
   169a4:	add	x20, x20, x0
   169a8:	b	1662c <ZSTD_compress@@Base+0x7de0>
   169ac:	ldr	x3, [sp, #120]
   169b0:	sub	w24, w25, w24
   169b4:	ldr	w0, [sp, #148]
   169b8:	mov	x4, x21
   169bc:	mov	x2, x13
   169c0:	add	x1, x26, #0x4
   169c4:	sub	w0, w0, w19
   169c8:	add	w24, w24, w0
   169cc:	add	x0, x20, #0x4
   169d0:	bl	14284 <ZSTD_compress@@Base+0x5a38>
   169d4:	add	x8, x0, #0x4
   169d8:	ldr	x0, [sp, #160]
   169dc:	cmp	x28, x20
   169e0:	ccmp	x26, x0, #0x0, cc  // cc = lo, ul, last
   169e4:	b.ls	169f8 <ZSTD_compress@@Base+0x81ac>  // b.plast
   169e8:	ldurb	w1, [x20, #-1]
   169ec:	ldurb	w0, [x26, #-1]
   169f0:	cmp	w1, w0
   169f4:	b.eq	16ae0 <ZSTD_compress@@Base+0x8294>  // b.none
   169f8:	sub	x9, x20, x28
   169fc:	sub	x10, x8, #0x3
   16a00:	cmp	x20, x23
   16a04:	ldr	x0, [x22, #24]
   16a08:	b.hi	16af0 <ZSTD_compress@@Base+0x82a4>  // b.pmore
   16a0c:	ldp	x2, x3, [x28]
   16a10:	stp	x2, x3, [x0]
   16a14:	cmp	x9, #0x10
   16a18:	b.ls	16a64 <ZSTD_compress@@Base+0x8218>  // b.plast
   16a1c:	ldr	x2, [x22, #24]
   16a20:	ldp	x0, x1, [x28, #16]
   16a24:	add	x11, x2, x9
   16a28:	stp	x0, x1, [x2, #16]
   16a2c:	ldp	x0, x1, [x28, #32]
   16a30:	stp	x0, x1, [x2, #32]
   16a34:	add	x1, x2, #0x30
   16a38:	cmp	x11, x1
   16a3c:	b.ls	16a64 <ZSTD_compress@@Base+0x8218>  // b.plast
   16a40:	add	x6, x28, #0x30
   16a44:	ldp	x2, x3, [x6]
   16a48:	stp	x2, x3, [x1]
   16a4c:	add	x1, x1, #0x20
   16a50:	ldp	x2, x3, [x6, #16]
   16a54:	stp	x2, x3, [x1, #-16]
   16a58:	add	x6, x6, #0x20
   16a5c:	cmp	x11, x1
   16a60:	b.hi	16a44 <ZSTD_compress@@Base+0x81f8>  // b.pmore
   16a64:	ldr	x0, [x22, #24]
   16a68:	mov	x1, #0xffff                	// #65535
   16a6c:	cmp	x9, x1
   16a70:	add	x0, x0, x9
   16a74:	str	x0, [x22, #24]
   16a78:	ldr	x0, [x22, #8]
   16a7c:	b.ls	16a98 <ZSTD_compress@@Base+0x824c>  // b.plast
   16a80:	mov	w1, #0x1                   	// #1
   16a84:	str	w1, [x22, #72]
   16a88:	ldr	x1, [x22]
   16a8c:	sub	x1, x0, x1
   16a90:	asr	x1, x1, #3
   16a94:	str	w1, [x22, #76]
   16a98:	add	w1, w24, #0x3
   16a9c:	str	w1, [x0]
   16aa0:	strh	w9, [x0, #4]
   16aa4:	mov	x1, #0xffff                	// #65535
   16aa8:	cmp	x10, x1
   16aac:	b.ls	16ac8 <ZSTD_compress@@Base+0x827c>  // b.plast
   16ab0:	mov	w1, #0x2                   	// #2
   16ab4:	str	w1, [x22, #72]
   16ab8:	ldr	x1, [x22]
   16abc:	sub	x1, x0, x1
   16ac0:	asr	x1, x1, #3
   16ac4:	str	w1, [x22, #76]
   16ac8:	strh	w10, [x0, #6]
   16acc:	mov	w14, w15
   16ad0:	add	x0, x0, #0x8
   16ad4:	mov	w15, w24
   16ad8:	str	x0, [x22, #8]
   16adc:	b	167e8 <ZSTD_compress@@Base+0x7f9c>
   16ae0:	sub	x20, x20, #0x1
   16ae4:	sub	x26, x26, #0x1
   16ae8:	add	x8, x8, #0x1
   16aec:	b	169d8 <ZSTD_compress@@Base+0x818c>
   16af0:	mov	x3, x23
   16af4:	mov	x2, x20
   16af8:	mov	x1, x28
   16afc:	bl	14098 <ZSTD_compress@@Base+0x584c>
   16b00:	b	16a64 <ZSTD_compress@@Base+0x8218>
   16b04:	ldr	w0, [x18, w4, uxtw]
   16b08:	add	x10, x18, w4, uxtw
   16b0c:	cmp	w0, w1
   16b10:	b.ne	16998 <ZSTD_compress@@Base+0x814c>  // b.any
   16b14:	sub	x9, x20, x10
   16b18:	mov	x2, x13
   16b1c:	add	x1, x10, #0x4
   16b20:	add	x0, x20, #0x4
   16b24:	bl	141a4 <ZSTD_compress@@Base+0x5958>
   16b28:	add	x8, x0, #0x4
   16b2c:	cmp	x28, x20
   16b30:	ccmp	x10, x21, #0x0, cc  // cc = lo, ul, last
   16b34:	b.ls	16b48 <ZSTD_compress@@Base+0x82fc>  // b.plast
   16b38:	ldurb	w1, [x20, #-1]
   16b3c:	ldurb	w0, [x10, #-1]
   16b40:	cmp	w1, w0
   16b44:	b.eq	16c30 <ZSTD_compress@@Base+0x83e4>  // b.none
   16b48:	sub	x10, x20, x28
   16b4c:	sub	x11, x8, #0x3
   16b50:	cmp	x20, x23
   16b54:	ldr	x0, [x22, #24]
   16b58:	b.hi	16c40 <ZSTD_compress@@Base+0x83f4>  // b.pmore
   16b5c:	ldp	x2, x3, [x28]
   16b60:	stp	x2, x3, [x0]
   16b64:	cmp	x10, #0x10
   16b68:	b.ls	16bb4 <ZSTD_compress@@Base+0x8368>  // b.plast
   16b6c:	ldr	x2, [x22, #24]
   16b70:	ldp	x0, x1, [x28, #16]
   16b74:	add	x12, x2, x10
   16b78:	stp	x0, x1, [x2, #16]
   16b7c:	ldp	x0, x1, [x28, #32]
   16b80:	stp	x0, x1, [x2, #32]
   16b84:	add	x1, x2, #0x30
   16b88:	cmp	x12, x1
   16b8c:	b.ls	16bb4 <ZSTD_compress@@Base+0x8368>  // b.plast
   16b90:	add	x6, x28, #0x30
   16b94:	ldp	x2, x3, [x6]
   16b98:	stp	x2, x3, [x1]
   16b9c:	add	x1, x1, #0x20
   16ba0:	ldp	x2, x3, [x6, #16]
   16ba4:	stp	x2, x3, [x1, #-16]
   16ba8:	add	x6, x6, #0x20
   16bac:	cmp	x12, x1
   16bb0:	b.hi	16b94 <ZSTD_compress@@Base+0x8348>  // b.pmore
   16bb4:	ldr	x0, [x22, #24]
   16bb8:	mov	x1, #0xffff                	// #65535
   16bbc:	cmp	x10, x1
   16bc0:	add	x0, x0, x10
   16bc4:	str	x0, [x22, #24]
   16bc8:	ldr	x0, [x22, #8]
   16bcc:	b.ls	16be8 <ZSTD_compress@@Base+0x839c>  // b.plast
   16bd0:	mov	w1, #0x1                   	// #1
   16bd4:	str	w1, [x22, #72]
   16bd8:	ldr	x1, [x22]
   16bdc:	sub	x1, x0, x1
   16be0:	asr	x1, x1, #3
   16be4:	str	w1, [x22, #76]
   16be8:	add	w1, w9, #0x3
   16bec:	str	w1, [x0]
   16bf0:	strh	w10, [x0, #4]
   16bf4:	mov	x1, #0xffff                	// #65535
   16bf8:	cmp	x11, x1
   16bfc:	b.ls	16c18 <ZSTD_compress@@Base+0x83cc>  // b.plast
   16c00:	mov	w1, #0x2                   	// #2
   16c04:	str	w1, [x22, #72]
   16c08:	ldr	x1, [x22]
   16c0c:	sub	x1, x0, x1
   16c10:	asr	x1, x1, #3
   16c14:	str	w1, [x22, #76]
   16c18:	strh	w11, [x0, #6]
   16c1c:	mov	w14, w15
   16c20:	add	x0, x0, #0x8
   16c24:	mov	w15, w9
   16c28:	str	x0, [x22, #8]
   16c2c:	b	167e8 <ZSTD_compress@@Base+0x7f9c>
   16c30:	sub	x20, x20, #0x1
   16c34:	sub	x10, x10, #0x1
   16c38:	add	x8, x8, #0x1
   16c3c:	b	16b2c <ZSTD_compress@@Base+0x82e0>
   16c40:	mov	x3, x23
   16c44:	mov	x2, x20
   16c48:	mov	x1, x28
   16c4c:	bl	14098 <ZSTD_compress@@Base+0x584c>
   16c50:	b	16bb4 <ZSTD_compress@@Base+0x8368>
   16c54:	mov	w0, w14
   16c58:	mov	w14, w15
   16c5c:	mov	w15, w0
   16c60:	b	16844 <ZSTD_compress@@Base+0x7ff8>
   16c64:	mov	x3, x23
   16c68:	mov	x2, x20
   16c6c:	mov	x1, x20
   16c70:	bl	14098 <ZSTD_compress@@Base+0x584c>
   16c74:	b	168c8 <ZSTD_compress@@Base+0x807c>
   16c78:	mov	x3, x23
   16c7c:	mov	x2, x25
   16c80:	mov	x1, x28
   16c84:	bl	14098 <ZSTD_compress@@Base+0x584c>
   16c88:	b	1646c <ZSTD_compress@@Base+0x7c20>
   16c8c:	cmp	w4, w19
   16c90:	b.hi	16e34 <ZSTD_compress@@Base+0x85e8>  // b.pmore
   16c94:	ldr	w1, [sp, #176]
   16c98:	mov	x0, x20
   16c9c:	mov	w2, #0x5                   	// #5
   16ca0:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   16ca4:	ldr	x1, [sp, #184]
   16ca8:	ldr	w25, [x1, x0, lsl #2]
   16cac:	ldr	w0, [sp, #168]
   16cb0:	cmp	w25, w0
   16cb4:	b.ls	16cd0 <ZSTD_compress@@Base+0x8484>  // b.plast
   16cb8:	ldr	x0, [sp, #112]
   16cbc:	ldr	w1, [x20]
   16cc0:	add	x27, x0, w25, uxtw
   16cc4:	ldr	w0, [x0, w25, uxtw]
   16cc8:	cmp	w1, w0
   16ccc:	b.eq	16ce4 <ZSTD_compress@@Base+0x8498>  // b.none
   16cd0:	ldr	w1, [sp, #156]
   16cd4:	sub	x0, x20, x28
   16cd8:	add	x0, x1, x0, asr #8
   16cdc:	add	x20, x20, x0
   16ce0:	b	16360 <ZSTD_compress@@Base+0x7b14>
   16ce4:	ldr	x3, [sp, #120]
   16ce8:	sub	w25, w26, w25
   16cec:	ldr	w0, [sp, #148]
   16cf0:	mov	x4, x21
   16cf4:	mov	x2, x13
   16cf8:	add	x1, x27, #0x4
   16cfc:	sub	w0, w0, w19
   16d00:	add	w25, w25, w0
   16d04:	add	x0, x20, #0x4
   16d08:	bl	14284 <ZSTD_compress@@Base+0x5a38>
   16d0c:	add	x8, x0, #0x4
   16d10:	ldr	x0, [sp, #160]
   16d14:	cmp	x28, x20
   16d18:	ccmp	x27, x0, #0x0, cc  // cc = lo, ul, last
   16d1c:	b.ls	16d30 <ZSTD_compress@@Base+0x84e4>  // b.plast
   16d20:	ldurb	w1, [x20, #-1]
   16d24:	ldurb	w0, [x27, #-1]
   16d28:	cmp	w1, w0
   16d2c:	b.eq	16e10 <ZSTD_compress@@Base+0x85c4>  // b.none
   16d30:	sub	x9, x20, x28
   16d34:	sub	x10, x8, #0x3
   16d38:	cmp	x20, x23
   16d3c:	ldr	x0, [x22, #24]
   16d40:	b.hi	16e20 <ZSTD_compress@@Base+0x85d4>  // b.pmore
   16d44:	ldp	x2, x3, [x28]
   16d48:	stp	x2, x3, [x0]
   16d4c:	cmp	x9, #0x10
   16d50:	b.ls	16d9c <ZSTD_compress@@Base+0x8550>  // b.plast
   16d54:	ldr	x2, [x22, #24]
   16d58:	ldp	x0, x1, [x28, #16]
   16d5c:	add	x11, x2, x9
   16d60:	stp	x0, x1, [x2, #16]
   16d64:	ldp	x0, x1, [x28, #32]
   16d68:	stp	x0, x1, [x2, #32]
   16d6c:	add	x1, x2, #0x30
   16d70:	cmp	x11, x1
   16d74:	b.ls	16d9c <ZSTD_compress@@Base+0x8550>  // b.plast
   16d78:	add	x6, x28, #0x30
   16d7c:	ldp	x2, x3, [x6]
   16d80:	stp	x2, x3, [x1]
   16d84:	add	x1, x1, #0x20
   16d88:	ldp	x2, x3, [x6, #16]
   16d8c:	stp	x2, x3, [x1, #-16]
   16d90:	add	x6, x6, #0x20
   16d94:	cmp	x11, x1
   16d98:	b.hi	16d7c <ZSTD_compress@@Base+0x8530>  // b.pmore
   16d9c:	ldr	x0, [x22, #24]
   16da0:	mov	x1, #0xffff                	// #65535
   16da4:	cmp	x9, x1
   16da8:	add	x0, x0, x9
   16dac:	str	x0, [x22, #24]
   16db0:	ldr	x0, [x22, #8]
   16db4:	b.ls	16dc8 <ZSTD_compress@@Base+0x857c>  // b.plast
   16db8:	ldr	x1, [x22]
   16dbc:	sub	x1, x0, x1
   16dc0:	asr	x1, x1, #3
   16dc4:	stp	w24, w1, [x22, #72]
   16dc8:	add	w1, w25, #0x3
   16dcc:	str	w1, [x0]
   16dd0:	strh	w9, [x0, #4]
   16dd4:	mov	x1, #0xffff                	// #65535
   16dd8:	cmp	x10, x1
   16ddc:	b.ls	16df8 <ZSTD_compress@@Base+0x85ac>  // b.plast
   16de0:	mov	w1, #0x2                   	// #2
   16de4:	str	w1, [x22, #72]
   16de8:	ldr	x1, [x22]
   16dec:	sub	x1, x0, x1
   16df0:	asr	x1, x1, #3
   16df4:	str	w1, [x22, #76]
   16df8:	strh	w10, [x0, #6]
   16dfc:	mov	w14, w15
   16e00:	add	x0, x0, #0x8
   16e04:	mov	w15, w25
   16e08:	str	x0, [x22, #8]
   16e0c:	b	164d4 <ZSTD_compress@@Base+0x7c88>
   16e10:	sub	x20, x20, #0x1
   16e14:	sub	x27, x27, #0x1
   16e18:	add	x8, x8, #0x1
   16e1c:	b	16d10 <ZSTD_compress@@Base+0x84c4>
   16e20:	mov	x3, x23
   16e24:	mov	x2, x20
   16e28:	mov	x1, x28
   16e2c:	bl	14098 <ZSTD_compress@@Base+0x584c>
   16e30:	b	16d9c <ZSTD_compress@@Base+0x8550>
   16e34:	ldr	w0, [x18, w4, uxtw]
   16e38:	add	x10, x18, w4, uxtw
   16e3c:	ldr	w1, [x20]
   16e40:	cmp	w1, w0
   16e44:	b.ne	16cd0 <ZSTD_compress@@Base+0x8484>  // b.any
   16e48:	sub	x9, x20, x10
   16e4c:	mov	x2, x13
   16e50:	add	x1, x10, #0x4
   16e54:	add	x0, x20, #0x4
   16e58:	bl	141a4 <ZSTD_compress@@Base+0x5958>
   16e5c:	add	x8, x0, #0x4
   16e60:	cmp	x28, x20
   16e64:	ccmp	x10, x21, #0x0, cc  // cc = lo, ul, last
   16e68:	b.ls	16e7c <ZSTD_compress@@Base+0x8630>  // b.plast
   16e6c:	ldurb	w1, [x20, #-1]
   16e70:	ldurb	w0, [x10, #-1]
   16e74:	cmp	w1, w0
   16e78:	b.eq	16f5c <ZSTD_compress@@Base+0x8710>  // b.none
   16e7c:	sub	x10, x20, x28
   16e80:	sub	x11, x8, #0x3
   16e84:	cmp	x20, x23
   16e88:	ldr	x0, [x22, #24]
   16e8c:	b.hi	16f6c <ZSTD_compress@@Base+0x8720>  // b.pmore
   16e90:	ldp	x2, x3, [x28]
   16e94:	stp	x2, x3, [x0]
   16e98:	cmp	x10, #0x10
   16e9c:	b.ls	16ee8 <ZSTD_compress@@Base+0x869c>  // b.plast
   16ea0:	ldr	x2, [x22, #24]
   16ea4:	ldp	x0, x1, [x28, #16]
   16ea8:	add	x12, x2, x10
   16eac:	stp	x0, x1, [x2, #16]
   16eb0:	ldp	x0, x1, [x28, #32]
   16eb4:	stp	x0, x1, [x2, #32]
   16eb8:	add	x1, x2, #0x30
   16ebc:	cmp	x12, x1
   16ec0:	b.ls	16ee8 <ZSTD_compress@@Base+0x869c>  // b.plast
   16ec4:	add	x6, x28, #0x30
   16ec8:	ldp	x2, x3, [x6]
   16ecc:	stp	x2, x3, [x1]
   16ed0:	add	x1, x1, #0x20
   16ed4:	ldp	x2, x3, [x6, #16]
   16ed8:	stp	x2, x3, [x1, #-16]
   16edc:	add	x6, x6, #0x20
   16ee0:	cmp	x12, x1
   16ee4:	b.hi	16ec8 <ZSTD_compress@@Base+0x867c>  // b.pmore
   16ee8:	ldr	x0, [x22, #24]
   16eec:	mov	x1, #0xffff                	// #65535
   16ef0:	cmp	x10, x1
   16ef4:	add	x0, x0, x10
   16ef8:	str	x0, [x22, #24]
   16efc:	ldr	x0, [x22, #8]
   16f00:	b.ls	16f14 <ZSTD_compress@@Base+0x86c8>  // b.plast
   16f04:	ldr	x1, [x22]
   16f08:	sub	x1, x0, x1
   16f0c:	asr	x1, x1, #3
   16f10:	stp	w24, w1, [x22, #72]
   16f14:	add	w1, w9, #0x3
   16f18:	str	w1, [x0]
   16f1c:	strh	w10, [x0, #4]
   16f20:	mov	x1, #0xffff                	// #65535
   16f24:	cmp	x11, x1
   16f28:	b.ls	16f44 <ZSTD_compress@@Base+0x86f8>  // b.plast
   16f2c:	mov	w1, #0x2                   	// #2
   16f30:	str	w1, [x22, #72]
   16f34:	ldr	x1, [x22]
   16f38:	sub	x1, x0, x1
   16f3c:	asr	x1, x1, #3
   16f40:	str	w1, [x22, #76]
   16f44:	strh	w11, [x0, #6]
   16f48:	mov	w14, w15
   16f4c:	add	x0, x0, #0x8
   16f50:	mov	w15, w9
   16f54:	str	x0, [x22, #8]
   16f58:	b	164d4 <ZSTD_compress@@Base+0x7c88>
   16f5c:	sub	x20, x20, #0x1
   16f60:	sub	x10, x10, #0x1
   16f64:	add	x8, x8, #0x1
   16f68:	b	16e60 <ZSTD_compress@@Base+0x8614>
   16f6c:	mov	x3, x23
   16f70:	mov	x2, x20
   16f74:	mov	x1, x28
   16f78:	bl	14098 <ZSTD_compress@@Base+0x584c>
   16f7c:	b	16ee8 <ZSTD_compress@@Base+0x869c>
   16f80:	mov	w0, w14
   16f84:	mov	w14, w15
   16f88:	mov	w15, w0
   16f8c:	b	16530 <ZSTD_compress@@Base+0x7ce4>
   16f90:	mov	x3, x23
   16f94:	mov	x2, x20
   16f98:	mov	x1, x20
   16f9c:	bl	14098 <ZSTD_compress@@Base+0x584c>
   16fa0:	b	165b4 <ZSTD_compress@@Base+0x7d68>
   16fa4:	mov	x3, x23
   16fa8:	mov	x2, x25
   16fac:	mov	x1, x28
   16fb0:	bl	14098 <ZSTD_compress@@Base+0x584c>
   16fb4:	b	15ecc <ZSTD_compress@@Base+0x7680>
   16fb8:	cmp	w4, w19
   16fbc:	b.hi	17160 <ZSTD_compress@@Base+0x8914>  // b.pmore
   16fc0:	ldr	w1, [sp, #176]
   16fc4:	mov	x0, x20
   16fc8:	mov	w2, #0x6                   	// #6
   16fcc:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   16fd0:	ldr	x1, [sp, #184]
   16fd4:	ldr	w25, [x1, x0, lsl #2]
   16fd8:	ldr	w0, [sp, #168]
   16fdc:	cmp	w25, w0
   16fe0:	b.ls	16ffc <ZSTD_compress@@Base+0x87b0>  // b.plast
   16fe4:	ldr	x0, [sp, #112]
   16fe8:	ldr	w1, [x20]
   16fec:	add	x27, x0, w25, uxtw
   16ff0:	ldr	w0, [x0, w25, uxtw]
   16ff4:	cmp	w1, w0
   16ff8:	b.eq	17010 <ZSTD_compress@@Base+0x87c4>  // b.none
   16ffc:	ldr	w1, [sp, #156]
   17000:	sub	x0, x20, x28
   17004:	add	x0, x1, x0, asr #8
   17008:	add	x20, x20, x0
   1700c:	b	15dc0 <ZSTD_compress@@Base+0x7574>
   17010:	ldr	x3, [sp, #120]
   17014:	sub	w25, w26, w25
   17018:	ldr	w0, [sp, #148]
   1701c:	mov	x4, x21
   17020:	mov	x2, x13
   17024:	add	x1, x27, #0x4
   17028:	sub	w0, w0, w19
   1702c:	add	w25, w25, w0
   17030:	add	x0, x20, #0x4
   17034:	bl	14284 <ZSTD_compress@@Base+0x5a38>
   17038:	add	x8, x0, #0x4
   1703c:	ldr	x0, [sp, #160]
   17040:	cmp	x28, x20
   17044:	ccmp	x27, x0, #0x0, cc  // cc = lo, ul, last
   17048:	b.ls	1705c <ZSTD_compress@@Base+0x8810>  // b.plast
   1704c:	ldurb	w1, [x20, #-1]
   17050:	ldurb	w0, [x27, #-1]
   17054:	cmp	w1, w0
   17058:	b.eq	1713c <ZSTD_compress@@Base+0x88f0>  // b.none
   1705c:	sub	x9, x20, x28
   17060:	sub	x10, x8, #0x3
   17064:	cmp	x20, x23
   17068:	ldr	x0, [x22, #24]
   1706c:	b.hi	1714c <ZSTD_compress@@Base+0x8900>  // b.pmore
   17070:	ldp	x2, x3, [x28]
   17074:	stp	x2, x3, [x0]
   17078:	cmp	x9, #0x10
   1707c:	b.ls	170c8 <ZSTD_compress@@Base+0x887c>  // b.plast
   17080:	ldr	x2, [x22, #24]
   17084:	ldp	x0, x1, [x28, #16]
   17088:	add	x11, x2, x9
   1708c:	stp	x0, x1, [x2, #16]
   17090:	ldp	x0, x1, [x28, #32]
   17094:	stp	x0, x1, [x2, #32]
   17098:	add	x1, x2, #0x30
   1709c:	cmp	x11, x1
   170a0:	b.ls	170c8 <ZSTD_compress@@Base+0x887c>  // b.plast
   170a4:	add	x6, x28, #0x30
   170a8:	ldp	x2, x3, [x6]
   170ac:	stp	x2, x3, [x1]
   170b0:	add	x1, x1, #0x20
   170b4:	ldp	x2, x3, [x6, #16]
   170b8:	stp	x2, x3, [x1, #-16]
   170bc:	add	x6, x6, #0x20
   170c0:	cmp	x11, x1
   170c4:	b.hi	170a8 <ZSTD_compress@@Base+0x885c>  // b.pmore
   170c8:	ldr	x0, [x22, #24]
   170cc:	mov	x1, #0xffff                	// #65535
   170d0:	cmp	x9, x1
   170d4:	add	x0, x0, x9
   170d8:	str	x0, [x22, #24]
   170dc:	ldr	x0, [x22, #8]
   170e0:	b.ls	170f4 <ZSTD_compress@@Base+0x88a8>  // b.plast
   170e4:	ldr	x1, [x22]
   170e8:	sub	x1, x0, x1
   170ec:	asr	x1, x1, #3
   170f0:	stp	w24, w1, [x22, #72]
   170f4:	add	w1, w25, #0x3
   170f8:	str	w1, [x0]
   170fc:	strh	w9, [x0, #4]
   17100:	mov	x1, #0xffff                	// #65535
   17104:	cmp	x10, x1
   17108:	b.ls	17124 <ZSTD_compress@@Base+0x88d8>  // b.plast
   1710c:	mov	w1, #0x2                   	// #2
   17110:	str	w1, [x22, #72]
   17114:	ldr	x1, [x22]
   17118:	sub	x1, x0, x1
   1711c:	asr	x1, x1, #3
   17120:	str	w1, [x22, #76]
   17124:	strh	w10, [x0, #6]
   17128:	mov	w14, w15
   1712c:	add	x0, x0, #0x8
   17130:	mov	w15, w25
   17134:	str	x0, [x22, #8]
   17138:	b	15f34 <ZSTD_compress@@Base+0x76e8>
   1713c:	sub	x20, x20, #0x1
   17140:	sub	x27, x27, #0x1
   17144:	add	x8, x8, #0x1
   17148:	b	1703c <ZSTD_compress@@Base+0x87f0>
   1714c:	mov	x3, x23
   17150:	mov	x2, x20
   17154:	mov	x1, x28
   17158:	bl	14098 <ZSTD_compress@@Base+0x584c>
   1715c:	b	170c8 <ZSTD_compress@@Base+0x887c>
   17160:	ldr	w0, [x18, w4, uxtw]
   17164:	add	x10, x18, w4, uxtw
   17168:	ldr	w1, [x20]
   1716c:	cmp	w1, w0
   17170:	b.ne	16ffc <ZSTD_compress@@Base+0x87b0>  // b.any
   17174:	sub	x9, x20, x10
   17178:	mov	x2, x13
   1717c:	add	x1, x10, #0x4
   17180:	add	x0, x20, #0x4
   17184:	bl	141a4 <ZSTD_compress@@Base+0x5958>
   17188:	add	x8, x0, #0x4
   1718c:	cmp	x28, x20
   17190:	ccmp	x10, x21, #0x0, cc  // cc = lo, ul, last
   17194:	b.ls	171a8 <ZSTD_compress@@Base+0x895c>  // b.plast
   17198:	ldurb	w1, [x20, #-1]
   1719c:	ldurb	w0, [x10, #-1]
   171a0:	cmp	w1, w0
   171a4:	b.eq	17288 <ZSTD_compress@@Base+0x8a3c>  // b.none
   171a8:	sub	x10, x20, x28
   171ac:	sub	x11, x8, #0x3
   171b0:	cmp	x20, x23
   171b4:	ldr	x0, [x22, #24]
   171b8:	b.hi	17298 <ZSTD_compress@@Base+0x8a4c>  // b.pmore
   171bc:	ldp	x2, x3, [x28]
   171c0:	stp	x2, x3, [x0]
   171c4:	cmp	x10, #0x10
   171c8:	b.ls	17214 <ZSTD_compress@@Base+0x89c8>  // b.plast
   171cc:	ldr	x2, [x22, #24]
   171d0:	ldp	x0, x1, [x28, #16]
   171d4:	add	x12, x2, x10
   171d8:	stp	x0, x1, [x2, #16]
   171dc:	ldp	x0, x1, [x28, #32]
   171e0:	stp	x0, x1, [x2, #32]
   171e4:	add	x1, x2, #0x30
   171e8:	cmp	x12, x1
   171ec:	b.ls	17214 <ZSTD_compress@@Base+0x89c8>  // b.plast
   171f0:	add	x6, x28, #0x30
   171f4:	ldp	x2, x3, [x6]
   171f8:	stp	x2, x3, [x1]
   171fc:	add	x1, x1, #0x20
   17200:	ldp	x2, x3, [x6, #16]
   17204:	stp	x2, x3, [x1, #-16]
   17208:	add	x6, x6, #0x20
   1720c:	cmp	x12, x1
   17210:	b.hi	171f4 <ZSTD_compress@@Base+0x89a8>  // b.pmore
   17214:	ldr	x0, [x22, #24]
   17218:	mov	x1, #0xffff                	// #65535
   1721c:	cmp	x10, x1
   17220:	add	x0, x0, x10
   17224:	str	x0, [x22, #24]
   17228:	ldr	x0, [x22, #8]
   1722c:	b.ls	17240 <ZSTD_compress@@Base+0x89f4>  // b.plast
   17230:	ldr	x1, [x22]
   17234:	sub	x1, x0, x1
   17238:	asr	x1, x1, #3
   1723c:	stp	w24, w1, [x22, #72]
   17240:	add	w1, w9, #0x3
   17244:	str	w1, [x0]
   17248:	strh	w10, [x0, #4]
   1724c:	mov	x1, #0xffff                	// #65535
   17250:	cmp	x11, x1
   17254:	b.ls	17270 <ZSTD_compress@@Base+0x8a24>  // b.plast
   17258:	mov	w1, #0x2                   	// #2
   1725c:	str	w1, [x22, #72]
   17260:	ldr	x1, [x22]
   17264:	sub	x1, x0, x1
   17268:	asr	x1, x1, #3
   1726c:	str	w1, [x22, #76]
   17270:	strh	w11, [x0, #6]
   17274:	mov	w14, w15
   17278:	add	x0, x0, #0x8
   1727c:	mov	w15, w9
   17280:	str	x0, [x22, #8]
   17284:	b	15f34 <ZSTD_compress@@Base+0x76e8>
   17288:	sub	x20, x20, #0x1
   1728c:	sub	x10, x10, #0x1
   17290:	add	x8, x8, #0x1
   17294:	b	1718c <ZSTD_compress@@Base+0x8940>
   17298:	mov	x3, x23
   1729c:	mov	x2, x20
   172a0:	mov	x1, x28
   172a4:	bl	14098 <ZSTD_compress@@Base+0x584c>
   172a8:	b	17214 <ZSTD_compress@@Base+0x89c8>
   172ac:	mov	w0, w14
   172b0:	mov	w14, w15
   172b4:	mov	w15, w0
   172b8:	b	15f90 <ZSTD_compress@@Base+0x7744>
   172bc:	mov	x3, x23
   172c0:	mov	x2, x20
   172c4:	mov	x1, x20
   172c8:	bl	14098 <ZSTD_compress@@Base+0x584c>
   172cc:	b	16014 <ZSTD_compress@@Base+0x77c8>
   172d0:	mov	x3, x23
   172d4:	mov	x2, x25
   172d8:	mov	x1, x28
   172dc:	bl	14098 <ZSTD_compress@@Base+0x584c>
   172e0:	b	1619c <ZSTD_compress@@Base+0x7950>
   172e4:	cmp	w4, w19
   172e8:	b.hi	1748c <ZSTD_compress@@Base+0x8c40>  // b.pmore
   172ec:	ldr	w1, [sp, #176]
   172f0:	mov	x0, x20
   172f4:	mov	w2, #0x7                   	// #7
   172f8:	bl	14118 <ZSTD_compress@@Base+0x58cc>
   172fc:	ldr	x1, [sp, #184]
   17300:	ldr	w25, [x1, x0, lsl #2]
   17304:	ldr	w0, [sp, #168]
   17308:	cmp	w25, w0
   1730c:	b.ls	17328 <ZSTD_compress@@Base+0x8adc>  // b.plast
   17310:	ldr	x0, [sp, #112]
   17314:	ldr	w1, [x20]
   17318:	add	x27, x0, w25, uxtw
   1731c:	ldr	w0, [x0, w25, uxtw]
   17320:	cmp	w1, w0
   17324:	b.eq	1733c <ZSTD_compress@@Base+0x8af0>  // b.none
   17328:	ldr	w1, [sp, #156]
   1732c:	sub	x0, x20, x28
   17330:	add	x0, x1, x0, asr #8
   17334:	add	x20, x20, x0
   17338:	b	16090 <ZSTD_compress@@Base+0x7844>
   1733c:	ldr	x3, [sp, #120]
   17340:	sub	w25, w26, w25
   17344:	ldr	w0, [sp, #148]
   17348:	mov	x4, x21
   1734c:	mov	x2, x13
   17350:	add	x1, x27, #0x4
   17354:	sub	w0, w0, w19
   17358:	add	w25, w25, w0
   1735c:	add	x0, x20, #0x4
   17360:	bl	14284 <ZSTD_compress@@Base+0x5a38>
   17364:	add	x8, x0, #0x4
   17368:	ldr	x0, [sp, #160]
   1736c:	cmp	x28, x20
   17370:	ccmp	x27, x0, #0x0, cc  // cc = lo, ul, last
   17374:	b.ls	17388 <ZSTD_compress@@Base+0x8b3c>  // b.plast
   17378:	ldurb	w1, [x20, #-1]
   1737c:	ldurb	w0, [x27, #-1]
   17380:	cmp	w1, w0
   17384:	b.eq	17468 <ZSTD_compress@@Base+0x8c1c>  // b.none
   17388:	sub	x9, x20, x28
   1738c:	sub	x10, x8, #0x3
   17390:	cmp	x20, x23
   17394:	ldr	x0, [x22, #24]
   17398:	b.hi	17478 <ZSTD_compress@@Base+0x8c2c>  // b.pmore
   1739c:	ldp	x2, x3, [x28]
   173a0:	stp	x2, x3, [x0]
   173a4:	cmp	x9, #0x10
   173a8:	b.ls	173f4 <ZSTD_compress@@Base+0x8ba8>  // b.plast
   173ac:	ldr	x2, [x22, #24]
   173b0:	ldp	x0, x1, [x28, #16]
   173b4:	add	x11, x2, x9
   173b8:	stp	x0, x1, [x2, #16]
   173bc:	ldp	x0, x1, [x28, #32]
   173c0:	stp	x0, x1, [x2, #32]
   173c4:	add	x1, x2, #0x30
   173c8:	cmp	x11, x1
   173cc:	b.ls	173f4 <ZSTD_compress@@Base+0x8ba8>  // b.plast
   173d0:	add	x6, x28, #0x30
   173d4:	ldp	x2, x3, [x6]
   173d8:	stp	x2, x3, [x1]
   173dc:	add	x1, x1, #0x20
   173e0:	ldp	x2, x3, [x6, #16]
   173e4:	stp	x2, x3, [x1, #-16]
   173e8:	add	x6, x6, #0x20
   173ec:	cmp	x11, x1
   173f0:	b.hi	173d4 <ZSTD_compress@@Base+0x8b88>  // b.pmore
   173f4:	ldr	x0, [x22, #24]
   173f8:	mov	x1, #0xffff                	// #65535
   173fc:	cmp	x9, x1
   17400:	add	x0, x0, x9
   17404:	str	x0, [x22, #24]
   17408:	ldr	x0, [x22, #8]
   1740c:	b.ls	17420 <ZSTD_compress@@Base+0x8bd4>  // b.plast
   17410:	ldr	x1, [x22]
   17414:	sub	x1, x0, x1
   17418:	asr	x1, x1, #3
   1741c:	stp	w24, w1, [x22, #72]
   17420:	add	w1, w25, #0x3
   17424:	str	w1, [x0]
   17428:	strh	w9, [x0, #4]
   1742c:	mov	x1, #0xffff                	// #65535
   17430:	cmp	x10, x1
   17434:	b.ls	17450 <ZSTD_compress@@Base+0x8c04>  // b.plast
   17438:	mov	w1, #0x2                   	// #2
   1743c:	str	w1, [x22, #72]
   17440:	ldr	x1, [x22]
   17444:	sub	x1, x0, x1
   17448:	asr	x1, x1, #3
   1744c:	str	w1, [x22, #76]
   17450:	strh	w10, [x0, #6]
   17454:	mov	w14, w15
   17458:	add	x0, x0, #0x8
   1745c:	mov	w15, w25
   17460:	str	x0, [x22, #8]
   17464:	b	16204 <ZSTD_compress@@Base+0x79b8>
   17468:	sub	x20, x20, #0x1
   1746c:	sub	x27, x27, #0x1
   17470:	add	x8, x8, #0x1
   17474:	b	17368 <ZSTD_compress@@Base+0x8b1c>
   17478:	mov	x3, x23
   1747c:	mov	x2, x20
   17480:	mov	x1, x28
   17484:	bl	14098 <ZSTD_compress@@Base+0x584c>
   17488:	b	173f4 <ZSTD_compress@@Base+0x8ba8>
   1748c:	ldr	w0, [x18, w4, uxtw]
   17490:	add	x10, x18, w4, uxtw
   17494:	ldr	w1, [x20]
   17498:	cmp	w1, w0
   1749c:	b.ne	17328 <ZSTD_compress@@Base+0x8adc>  // b.any
   174a0:	sub	x9, x20, x10
   174a4:	mov	x2, x13
   174a8:	add	x1, x10, #0x4
   174ac:	add	x0, x20, #0x4
   174b0:	bl	141a4 <ZSTD_compress@@Base+0x5958>
   174b4:	add	x8, x0, #0x4
   174b8:	cmp	x28, x20
   174bc:	ccmp	x10, x21, #0x0, cc  // cc = lo, ul, last
   174c0:	b.ls	174d4 <ZSTD_compress@@Base+0x8c88>  // b.plast
   174c4:	ldurb	w1, [x20, #-1]
   174c8:	ldurb	w0, [x10, #-1]
   174cc:	cmp	w1, w0
   174d0:	b.eq	175b4 <ZSTD_compress@@Base+0x8d68>  // b.none
   174d4:	sub	x10, x20, x28
   174d8:	sub	x11, x8, #0x3
   174dc:	cmp	x20, x23
   174e0:	ldr	x0, [x22, #24]
   174e4:	b.hi	175c4 <ZSTD_compress@@Base+0x8d78>  // b.pmore
   174e8:	ldp	x2, x3, [x28]
   174ec:	stp	x2, x3, [x0]
   174f0:	cmp	x10, #0x10
   174f4:	b.ls	17540 <ZSTD_compress@@Base+0x8cf4>  // b.plast
   174f8:	ldr	x2, [x22, #24]
   174fc:	ldp	x0, x1, [x28, #16]
   17500:	add	x12, x2, x10
   17504:	stp	x0, x1, [x2, #16]
   17508:	ldp	x0, x1, [x28, #32]
   1750c:	stp	x0, x1, [x2, #32]
   17510:	add	x1, x2, #0x30
   17514:	cmp	x12, x1
   17518:	b.ls	17540 <ZSTD_compress@@Base+0x8cf4>  // b.plast
   1751c:	add	x6, x28, #0x30
   17520:	ldp	x2, x3, [x6]
   17524:	stp	x2, x3, [x1]
   17528:	add	x1, x1, #0x20
   1752c:	ldp	x2, x3, [x6, #16]
   17530:	stp	x2, x3, [x1, #-16]
   17534:	add	x6, x6, #0x20
   17538:	cmp	x12, x1
   1753c:	b.hi	17520 <ZSTD_compress@@Base+0x8cd4>  // b.pmore
   17540:	ldr	x0, [x22, #24]
   17544:	mov	x1, #0xffff                	// #65535
   17548:	cmp	x10, x1
   1754c:	add	x0, x0, x10
   17550:	str	x0, [x22, #24]
   17554:	ldr	x0, [x22, #8]
   17558:	b.ls	1756c <ZSTD_compress@@Base+0x8d20>  // b.plast
   1755c:	ldr	x1, [x22]
   17560:	sub	x1, x0, x1
   17564:	asr	x1, x1, #3
   17568:	stp	w24, w1, [x22, #72]
   1756c:	add	w1, w9, #0x3
   17570:	str	w1, [x0]
   17574:	strh	w10, [x0, #4]
   17578:	mov	x1, #0xffff                	// #65535
   1757c:	cmp	x11, x1
   17580:	b.ls	1759c <ZSTD_compress@@Base+0x8d50>  // b.plast
   17584:	mov	w1, #0x2                   	// #2
   17588:	str	w1, [x22, #72]
   1758c:	ldr	x1, [x22]
   17590:	sub	x1, x0, x1
   17594:	asr	x1, x1, #3
   17598:	str	w1, [x22, #76]
   1759c:	strh	w11, [x0, #6]
   175a0:	mov	w14, w15
   175a4:	add	x0, x0, #0x8
   175a8:	mov	w15, w9
   175ac:	str	x0, [x22, #8]
   175b0:	b	16204 <ZSTD_compress@@Base+0x79b8>
   175b4:	sub	x20, x20, #0x1
   175b8:	sub	x10, x10, #0x1
   175bc:	add	x8, x8, #0x1
   175c0:	b	174b8 <ZSTD_compress@@Base+0x8c6c>
   175c4:	mov	x3, x23
   175c8:	mov	x2, x20
   175cc:	mov	x1, x28
   175d0:	bl	14098 <ZSTD_compress@@Base+0x584c>
   175d4:	b	17540 <ZSTD_compress@@Base+0x8cf4>
   175d8:	mov	w0, w14
   175dc:	mov	w14, w15
   175e0:	mov	w15, w0
   175e4:	b	16260 <ZSTD_compress@@Base+0x7a14>
   175e8:	mov	x3, x23
   175ec:	mov	x2, x20
   175f0:	mov	x1, x20
   175f4:	bl	14098 <ZSTD_compress@@Base+0x584c>
   175f8:	b	162e4 <ZSTD_compress@@Base+0x7a98>
   175fc:	ldr	w5, [x0, #200]
   17600:	cmp	w5, #0x6
   17604:	b.eq	1761c <ZSTD_compress@@Base+0x8dd0>  // b.none
   17608:	cmp	w5, #0x7
   1760c:	b.eq	1761c <ZSTD_compress@@Base+0x8dd0>  // b.none
   17610:	cmp	w5, #0x5
   17614:	b.eq	1761c <ZSTD_compress@@Base+0x8dd0>  // b.none
   17618:	mov	w5, #0x4                   	// #4
   1761c:	b	142e4 <ZSTD_compress@@Base+0x5a98>
   17620:	cmp	x1, x3
   17624:	b.ls	17644 <ZSTD_compress@@Base+0x8df8>  // b.plast
   17628:	mov	x3, x1
   1762c:	mov	x4, x0
   17630:	mov	x0, #0x0                   	// #0
   17634:	add	x1, x3, x0
   17638:	cmp	x2, x1
   1763c:	b.hi	17690 <ZSTD_compress@@Base+0x8e44>  // b.pmore
   17640:	ret
   17644:	ldp	x6, x7, [x1]
   17648:	stp	x6, x7, [x0]
   1764c:	sub	x4, x3, x1
   17650:	ldp	x6, x7, [x1, #16]
   17654:	stp	x6, x7, [x0, #16]
   17658:	add	x4, x0, x4
   1765c:	add	x0, x0, #0x20
   17660:	cmp	x4, x0
   17664:	b.ls	17630 <ZSTD_compress@@Base+0x8de4>  // b.plast
   17668:	add	x1, x1, #0x20
   1766c:	ldp	x6, x7, [x1]
   17670:	stp	x6, x7, [x0]
   17674:	add	x0, x0, #0x20
   17678:	ldp	x6, x7, [x1, #16]
   1767c:	stp	x6, x7, [x0, #-16]
   17680:	add	x1, x1, #0x20
   17684:	cmp	x4, x0
   17688:	b.hi	1766c <ZSTD_compress@@Base+0x8e20>  // b.pmore
   1768c:	b	17630 <ZSTD_compress@@Base+0x8de4>
   17690:	ldrb	w1, [x3, x0]
   17694:	strb	w1, [x4, x0]
   17698:	add	x0, x0, #0x1
   1769c:	b	17634 <ZSTD_compress@@Base+0x8de8>
   176a0:	sub	w2, w2, #0x5
   176a4:	mov	x3, x0
   176a8:	cmp	w2, #0x3
   176ac:	b.hi	176d0 <ZSTD_compress@@Base+0x8e84>  // b.pmore
   176b0:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   176b4:	mov	w4, #0x40                  	// #64
   176b8:	add	x0, x0, #0x4c0
   176bc:	ldr	x3, [x3]
   176c0:	ldrb	w0, [x0, w2, uxtw]
   176c4:	adr	x2, 176d0 <ZSTD_compress@@Base+0x8e84>
   176c8:	add	x0, x2, w0, sxtb #2
   176cc:	br	x0
   176d0:	ldr	w0, [x0]
   176d4:	mov	w2, #0x79b1                	// #31153
   176d8:	movk	w2, #0x9e37, lsl #16
   176dc:	neg	w1, w1
   176e0:	mul	w0, w0, w2
   176e4:	lsr	w0, w0, w1
   176e8:	mov	w0, w0
   176ec:	ret
   176f0:	mov	x0, #0xbb000000            	// #3137339392
   176f4:	movk	x0, #0xbcdc, lsl #32
   176f8:	movk	x0, #0xcf1b, lsl #48
   176fc:	mul	x3, x3, x0
   17700:	sub	w0, w4, w1
   17704:	lsr	x0, x3, x0
   17708:	b	176ec <ZSTD_compress@@Base+0x8ea0>
   1770c:	mov	x0, #0xbf9b0000            	// #3214606336
   17710:	b	176f4 <ZSTD_compress@@Base+0x8ea8>
   17714:	mov	x0, #0x6300                	// #25344
   17718:	movk	x0, #0xbfa5, lsl #16
   1771c:	b	176f4 <ZSTD_compress@@Base+0x8ea8>
   17720:	mov	x0, #0x6463                	// #25699
   17724:	movk	x0, #0xb7a5, lsl #16
   17728:	b	176f4 <ZSTD_compress@@Base+0x8ea8>
   1772c:	mov	x5, x0
   17730:	stp	x29, x30, [sp, #-16]!
   17734:	mov	w8, #0x1                   	// #1
   17738:	mov	x29, sp
   1773c:	ldp	w0, w12, [x1, #4]
   17740:	mov	x9, x2
   17744:	ldr	x7, [x5, #8]
   17748:	mov	w10, w3
   1774c:	ldr	w6, [x5, #36]
   17750:	lsl	w8, w8, w0
   17754:	sub	x13, x2, x7
   17758:	sub	w8, w8, #0x1
   1775c:	ldr	x11, [x5, #48]
   17760:	mov	w14, w13
   17764:	ldr	x15, [x5, #64]
   17768:	add	x7, x7, w6, uxtw
   1776c:	cmp	w6, w14
   17770:	b.cc	17794 <ZSTD_compress@@Base+0x8f48>  // b.lo, b.ul, b.last
   17774:	str	w13, [x5, #36]
   17778:	mov	w2, w10
   1777c:	mov	w1, w12
   17780:	mov	x0, x9
   17784:	bl	176a0 <ZSTD_compress@@Base+0x8e54>
   17788:	ldr	w0, [x11, x0, lsl #2]
   1778c:	ldp	x29, x30, [sp], #16
   17790:	ret
   17794:	mov	w2, w10
   17798:	mov	w1, w12
   1779c:	mov	x0, x7
   177a0:	bl	176a0 <ZSTD_compress@@Base+0x8e54>
   177a4:	lsl	x0, x0, #2
   177a8:	and	w1, w6, w8
   177ac:	add	x7, x7, #0x1
   177b0:	ldr	w2, [x11, x0]
   177b4:	str	w2, [x15, x1, lsl #2]
   177b8:	str	w6, [x11, x0]
   177bc:	add	w6, w6, #0x1
   177c0:	b	1776c <ZSTD_compress@@Base+0x8f20>
   177c4:	sub	x5, x2, #0x7
   177c8:	cmp	x0, x5
   177cc:	b.cs	1789c <ZSTD_compress@@Base+0x9050>  // b.hs, b.nlast
   177d0:	ldr	x4, [x0]
   177d4:	ldr	x3, [x1]
   177d8:	cmp	x3, x4
   177dc:	b.eq	177f4 <ZSTD_compress@@Base+0x8fa8>  // b.none
   177e0:	eor	x0, x3, x4
   177e4:	rbit	x0, x0
   177e8:	clz	x0, x0
   177ec:	lsr	x0, x0, #3
   177f0:	ret
   177f4:	add	x3, x0, #0x8
   177f8:	add	x1, x1, #0x8
   177fc:	cmp	x3, x5
   17800:	b.cc	1786c <ZSTD_compress@@Base+0x9020>  // b.lo, b.ul, b.last
   17804:	sub	x4, x2, #0x3
   17808:	cmp	x3, x4
   1780c:	b.cs	17828 <ZSTD_compress@@Base+0x8fdc>  // b.hs, b.nlast
   17810:	ldr	w4, [x1]
   17814:	ldr	w5, [x3]
   17818:	cmp	w5, w4
   1781c:	b.ne	17828 <ZSTD_compress@@Base+0x8fdc>  // b.any
   17820:	add	x3, x3, #0x4
   17824:	add	x1, x1, #0x4
   17828:	sub	x4, x2, #0x1
   1782c:	cmp	x3, x4
   17830:	b.cs	1784c <ZSTD_compress@@Base+0x9000>  // b.hs, b.nlast
   17834:	ldrh	w5, [x3]
   17838:	ldrh	w4, [x1]
   1783c:	cmp	w5, w4
   17840:	b.ne	1784c <ZSTD_compress@@Base+0x9000>  // b.any
   17844:	add	x3, x3, #0x2
   17848:	add	x1, x1, #0x2
   1784c:	cmp	x3, x2
   17850:	b.cs	17894 <ZSTD_compress@@Base+0x9048>  // b.hs, b.nlast
   17854:	ldrb	w2, [x1]
   17858:	ldrb	w1, [x3]
   1785c:	cmp	w2, w1
   17860:	b.ne	17894 <ZSTD_compress@@Base+0x9048>  // b.any
   17864:	add	x3, x3, #0x1
   17868:	b	17894 <ZSTD_compress@@Base+0x9048>
   1786c:	ldr	x4, [x1]
   17870:	ldr	x6, [x3]
   17874:	cmp	x4, x6
   17878:	b.ne	17884 <ZSTD_compress@@Base+0x9038>  // b.any
   1787c:	add	x3, x3, #0x8
   17880:	b	177f8 <ZSTD_compress@@Base+0x8fac>
   17884:	eor	x4, x4, x6
   17888:	rbit	x4, x4
   1788c:	clz	x4, x4
   17890:	add	x3, x3, x4, lsr #3
   17894:	sub	x0, x3, x0
   17898:	b	177f0 <ZSTD_compress@@Base+0x8fa4>
   1789c:	mov	x3, x0
   178a0:	b	17804 <ZSTD_compress@@Base+0x8fb8>
   178a4:	mov	x9, x2
   178a8:	sub	x2, x3, x1
   178ac:	add	x2, x0, x2
   178b0:	mov	x8, x1
   178b4:	cmp	x9, x2
   178b8:	mov	x11, x3
   178bc:	mov	x10, x0
   178c0:	mov	x12, x4
   178c4:	stp	x29, x30, [sp, #-16]!
   178c8:	csel	x2, x9, x2, cc  // cc = lo, ul, last
   178cc:	mov	x29, sp
   178d0:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   178d4:	add	x8, x8, x0
   178d8:	mov	x7, x0
   178dc:	cmp	x11, x8
   178e0:	b.ne	178f8 <ZSTD_compress@@Base+0x90ac>  // b.any
   178e4:	mov	x2, x9
   178e8:	mov	x1, x12
   178ec:	add	x0, x10, x0
   178f0:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   178f4:	add	x7, x7, x0
   178f8:	mov	x0, x7
   178fc:	ldp	x29, x30, [sp], #16
   17900:	ret
   17904:	mov	x5, x0
   17908:	ldr	w7, [x0, #36]
   1790c:	ldp	w6, w15, [x0, #188]
   17910:	mov	w11, w2
   17914:	ldr	x8, [x5, #8]
   17918:	sub	w6, w6, #0x1
   1791c:	ldr	x12, [x0, #48]
   17920:	sub	x9, x1, x8
   17924:	mov	w0, #0x1                   	// #1
   17928:	mov	w14, w9
   1792c:	lsl	w6, w0, w6
   17930:	mov	w10, w0
   17934:	sub	w6, w6, #0x1
   17938:	add	x8, x8, w7, uxtw
   1793c:	cmp	w9, w7
   17940:	ldr	x13, [x5, #64]
   17944:	b.hi	17950 <ZSTD_compress@@Base+0x9104>  // b.pmore
   17948:	str	w9, [x5, #36]
   1794c:	ret
   17950:	stp	x29, x30, [sp, #-16]!
   17954:	mov	x29, sp
   17958:	mov	w2, w11
   1795c:	mov	w1, w15
   17960:	mov	x0, x8
   17964:	bl	176a0 <ZSTD_compress@@Base+0x8e54>
   17968:	and	w3, w6, w7
   1796c:	lsl	x0, x0, #2
   17970:	add	x8, x8, #0x1
   17974:	ubfiz	x3, x3, #3, #31
   17978:	add	x1, x13, x3
   1797c:	ldr	w2, [x12, x0]
   17980:	str	w7, [x12, x0]
   17984:	add	w7, w7, #0x1
   17988:	str	w2, [x13, x3]
   1798c:	cmp	w14, w7
   17990:	str	w10, [x1, #4]
   17994:	b.hi	17958 <ZSTD_compress@@Base+0x910c>  // b.pmore
   17998:	ldp	x29, x30, [sp], #16
   1799c:	str	w9, [x5, #36]
   179a0:	ret
   179a4:	stp	x29, x30, [sp, #-320]!
   179a8:	mov	x13, x0
   179ac:	mov	x29, sp
   179b0:	stp	x21, x22, [sp, #32]
   179b4:	mov	x21, x1
   179b8:	ldr	w1, [x0, #192]
   179bc:	mov	x0, x21
   179c0:	stp	x19, x20, [sp, #16]
   179c4:	stp	x23, x24, [sp, #48]
   179c8:	stp	x25, x26, [sp, #64]
   179cc:	stp	x27, x28, [sp, #80]
   179d0:	str	x2, [sp, #96]
   179d4:	mov	w2, w4
   179d8:	str	x3, [sp, #128]
   179dc:	str	w5, [sp, #136]
   179e0:	str	w4, [sp, #216]
   179e4:	bl	176a0 <ZSTD_compress@@Base+0x8e54>
   179e8:	lsl	x0, x0, #2
   179ec:	str	x0, [sp, #168]
   179f0:	ldr	x0, [x13, #48]
   179f4:	str	x0, [sp, #176]
   179f8:	ldr	x1, [sp, #168]
   179fc:	mov	w14, #0x1                   	// #1
   17a00:	ldr	w26, [x13, #28]
   17a04:	mov	w18, #0x0                   	// #0
   17a08:	ldr	w15, [x13, #188]
   17a0c:	ldr	w1, [x0, x1]
   17a10:	ldr	x0, [x13, #8]
   17a14:	str	x0, [sp, #120]
   17a18:	sub	w15, w15, #0x1
   17a1c:	sub	x24, x21, x0
   17a20:	ldr	w0, [x13, #184]
   17a24:	sub	w3, w24, w26
   17a28:	lsl	w15, w14, w15
   17a2c:	sub	w15, w15, #0x1
   17a30:	str	w24, [sp, #220]
   17a34:	lsl	w0, w14, w0
   17a38:	cmp	w0, w3
   17a3c:	sub	w2, w24, w0
   17a40:	ldr	w3, [x13, #196]
   17a44:	csel	w0, w2, w26, cc  // cc = lo, ul, last
   17a48:	ldr	w2, [x13, #32]
   17a4c:	ldr	x22, [x13, #64]
   17a50:	cmp	w2, #0x0
   17a54:	csel	w26, w26, w0, ne  // ne = any
   17a58:	cmp	w15, w24
   17a5c:	sub	w0, w24, w15
   17a60:	lsl	w25, w14, w3
   17a64:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   17a68:	str	w0, [sp, #112]
   17a6c:	cmp	w0, w26
   17a70:	str	w25, [sp, #184]
   17a74:	csel	w0, w0, w26, cs  // cs = hs, nlast
   17a78:	str	w0, [sp, #192]
   17a7c:	and	w0, w1, w15
   17a80:	ubfiz	x0, x0, #3, #31
   17a84:	add	x2, x22, x0
   17a88:	add	x0, x0, #0x4
   17a8c:	add	x0, x22, x0
   17a90:	ldr	w3, [sp, #192]
   17a94:	cmp	w1, w3
   17a98:	b.ls	17ab8 <ZSTD_compress@@Base+0x926c>  // b.plast
   17a9c:	ldr	w3, [x0]
   17aa0:	cmp	w3, #0x1
   17aa4:	b.ne	17ab8 <ZSTD_compress@@Base+0x926c>  // b.any
   17aa8:	cmp	w25, #0x1
   17aac:	b.hi	17de4 <ZSTD_compress@@Base+0x9598>  // b.pmore
   17ab0:	str	wzr, [x0]
   17ab4:	str	wzr, [x2]
   17ab8:	add	x0, sp, #0x13c
   17abc:	str	x0, [sp, #208]
   17ac0:	ldr	x0, [x13, #16]
   17ac4:	str	x0, [sp, #104]
   17ac8:	ldr	w12, [x13, #24]
   17acc:	mov	w23, w12
   17ad0:	add	x0, x0, w12, uxtw
   17ad4:	str	x0, [sp, #160]
   17ad8:	cbnz	w18, 17e10 <ZSTD_compress@@Base+0x95c4>
   17adc:	ldr	x0, [sp, #120]
   17ae0:	and	w20, w15, w24
   17ae4:	ldr	x1, [sp, #168]
   17ae8:	add	x0, x0, x23
   17aec:	str	x0, [sp, #152]
   17af0:	add	w0, w24, #0x9
   17af4:	str	w0, [sp, #192]
   17af8:	ubfiz	x20, x20, #3, #31
   17afc:	ldr	x0, [sp, #176]
   17b00:	add	x25, x22, x20
   17b04:	add	x20, x20, #0x4
   17b08:	mov	x18, #0x0                   	// #0
   17b0c:	add	x20, x22, x20
   17b10:	mov	x8, #0x0                   	// #0
   17b14:	ldr	w19, [x0, x1]
   17b18:	mov	x7, #0x0                   	// #0
   17b1c:	str	w24, [x0, x1]
   17b20:	ldr	w0, [sp, #184]
   17b24:	sub	w14, w0, #0x1
   17b28:	cmn	w14, #0x1
   17b2c:	b.eq	17c18 <ZSTD_compress@@Base+0x93cc>  // b.none
   17b30:	cmp	w19, w26
   17b34:	b.ls	17c18 <ZSTD_compress@@Base+0x93cc>  // b.plast
   17b38:	and	w24, w19, w15
   17b3c:	cmp	x7, x8
   17b40:	ldr	w1, [sp, #136]
   17b44:	csel	x27, x7, x8, ls  // ls = plast
   17b48:	ubfiz	x0, x24, #3, #31
   17b4c:	str	x0, [sp, #144]
   17b50:	add	x24, x22, x0
   17b54:	mov	w5, w19
   17b58:	cmp	w1, #0x1
   17b5c:	add	x0, x21, x27
   17b60:	b.ne	17b70 <ZSTD_compress@@Base+0x9324>  // b.any
   17b64:	add	x1, x27, x5
   17b68:	cmp	x1, x23
   17b6c:	b.cc	1804c <ZSTD_compress@@Base+0x9800>  // b.lo, b.ul, b.last
   17b70:	ldr	x2, [sp, #96]
   17b74:	stp	x8, x7, [sp, #168]
   17b78:	ldr	x1, [sp, #120]
   17b7c:	add	x28, x1, x5
   17b80:	add	x1, x28, x27
   17b84:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   17b88:	ldp	x8, x7, [sp, #168]
   17b8c:	add	x27, x27, x0
   17b90:	cmp	x18, x27
   17b94:	b.cs	1808c <ZSTD_compress@@Base+0x9840>  // b.hs, b.nlast
   17b98:	ldr	w0, [sp, #192]
   17b9c:	mov	w3, w27
   17ba0:	sub	w0, w0, w19
   17ba4:	cmp	x0, x27
   17ba8:	b.cs	17bb4 <ZSTD_compress@@Base+0x9368>  // b.hs, b.nlast
   17bac:	add	w0, w19, w27
   17bb0:	str	w0, [sp, #192]
   17bb4:	ldr	x1, [sp, #128]
   17bb8:	sub	w3, w3, w18
   17bbc:	ldr	w0, [sp, #220]
   17bc0:	ldr	x1, [x1]
   17bc4:	sub	w2, w0, w19
   17bc8:	add	w0, w2, #0x1
   17bcc:	add	w1, w1, #0x1
   17bd0:	clz	w0, w0
   17bd4:	clz	w1, w1
   17bd8:	eor	w0, w0, #0x1f
   17bdc:	eor	w1, w1, #0x1f
   17be0:	sub	w0, w0, w1
   17be4:	cmp	w0, w3, lsl #2
   17be8:	b.ge	17bfc <ZSTD_compress@@Base+0x93b0>  // b.tcont
   17bec:	ldr	x0, [sp, #128]
   17bf0:	mov	x18, x27
   17bf4:	add	w2, w2, #0x2
   17bf8:	str	x2, [x0]
   17bfc:	ldr	x1, [sp, #96]
   17c00:	add	x0, x21, x27
   17c04:	cmp	x1, x0
   17c08:	b.ne	1808c <ZSTD_compress@@Base+0x9840>  // b.any
   17c0c:	ldr	w0, [sp, #136]
   17c10:	cmp	w0, #0x2
   17c14:	csel	w14, w14, wzr, ne  // ne = any
   17c18:	str	wzr, [x20]
   17c1c:	cmp	w14, #0x0
   17c20:	ldr	w0, [sp, #136]
   17c24:	str	wzr, [x25]
   17c28:	ccmp	w0, #0x2, #0x0, ne  // ne = any
   17c2c:	b.ne	17db8 <ZSTD_compress@@Base+0x956c>  // b.any
   17c30:	ldr	x6, [x13, #176]
   17c34:	mov	x0, x21
   17c38:	ldr	w2, [sp, #216]
   17c3c:	mov	x26, #0x0                   	// #0
   17c40:	mov	x27, #0x0                   	// #0
   17c44:	ldr	w1, [x6, #192]
   17c48:	bl	176a0 <ZSTD_compress@@Base+0x8e54>
   17c4c:	ldr	w19, [x6, #188]
   17c50:	ldp	x3, x8, [x6]
   17c54:	ldr	x1, [x6, #48]
   17c58:	ldr	w25, [x6, #28]
   17c5c:	ldr	x28, [x13, #8]
   17c60:	sub	x20, x3, x8
   17c64:	ldr	w15, [x1, x0, lsl #2]
   17c68:	sub	w0, w19, #0x1
   17c6c:	mov	w19, #0x1                   	// #1
   17c70:	ldr	w1, [x13, #28]
   17c74:	lsl	w19, w19, w0
   17c78:	ldr	w4, [x13, #24]
   17c7c:	sub	w19, w19, #0x1
   17c80:	sub	w0, w20, w25
   17c84:	sub	w22, w20, w19
   17c88:	cmp	w19, w0
   17c8c:	sub	w5, w21, w28
   17c90:	mov	w10, w20
   17c94:	ldr	x9, [x6, #64]
   17c98:	and	x11, x20, #0xffffffff
   17c9c:	csel	w22, w22, w25, cc  // cc = lo, ul, last
   17ca0:	sub	w20, w1, w20
   17ca4:	add	x4, x28, x4
   17ca8:	sub	w5, w5, w1
   17cac:	cmp	w25, w15
   17cb0:	b.cs	17db8 <ZSTD_compress@@Base+0x956c>  // b.hs, b.nlast
   17cb4:	and	w23, w19, w15
   17cb8:	cmp	x27, x26
   17cbc:	ldr	x2, [sp, #96]
   17cc0:	ubfiz	x23, x23, #3, #31
   17cc4:	csel	x7, x27, x26, ls  // ls = plast
   17cc8:	add	x6, x8, w15, uxtw
   17ccc:	add	x12, x9, x23
   17cd0:	mov	w24, w15
   17cd4:	add	x1, x6, x7
   17cd8:	add	x0, x21, x7
   17cdc:	stp	x7, x6, [sp, #104]
   17ce0:	str	x3, [sp, #120]
   17ce4:	stp	x4, x8, [sp, #136]
   17ce8:	stp	x12, x9, [sp, #152]
   17cec:	str	w10, [sp, #168]
   17cf0:	str	x11, [sp, #176]
   17cf4:	str	w5, [sp, #184]
   17cf8:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   17cfc:	ldp	x7, x6, [sp, #104]
   17d00:	ldr	x11, [sp, #176]
   17d04:	ldr	w10, [sp, #168]
   17d08:	ldr	w5, [sp, #184]
   17d0c:	add	x7, x7, x0
   17d10:	add	x0, x24, x7
   17d14:	cmp	x0, x11
   17d18:	ldr	x3, [sp, #120]
   17d1c:	ldp	x4, x8, [sp, #136]
   17d20:	ldp	x12, x9, [sp, #152]
   17d24:	b.cc	17d30 <ZSTD_compress@@Base+0x94e4>  // b.lo, b.ul, b.last
   17d28:	add	x24, x20, x24
   17d2c:	add	x6, x28, x24
   17d30:	cmp	x7, x18
   17d34:	b.ls	17d90 <ZSTD_compress@@Base+0x9544>  // b.plast
   17d38:	ldr	x1, [sp, #128]
   17d3c:	sub	w2, w10, w15
   17d40:	add	w2, w5, w2
   17d44:	sub	w16, w7, w18
   17d48:	add	w0, w2, #0x1
   17d4c:	ldr	x1, [x1]
   17d50:	clz	w0, w0
   17d54:	eor	w0, w0, #0x1f
   17d58:	add	w1, w1, #0x1
   17d5c:	clz	w1, w1
   17d60:	eor	w1, w1, #0x1f
   17d64:	sub	w1, w0, w1
   17d68:	cmp	w1, w16, lsl #2
   17d6c:	b.ge	17d80 <ZSTD_compress@@Base+0x9534>  // b.tcont
   17d70:	ldr	x0, [sp, #128]
   17d74:	mov	x18, x7
   17d78:	add	w2, w2, #0x2
   17d7c:	str	x2, [x0]
   17d80:	ldr	x1, [sp, #96]
   17d84:	add	x0, x21, x7
   17d88:	cmp	x1, x0
   17d8c:	b.eq	17db8 <ZSTD_compress@@Base+0x956c>  // b.none
   17d90:	ldrb	w1, [x6, x7]
   17d94:	ldrb	w0, [x21, x7]
   17d98:	cmp	w1, w0
   17d9c:	b.cs	180f8 <ZSTD_compress@@Base+0x98ac>  // b.hs, b.nlast
   17da0:	cmp	w22, w15
   17da4:	b.cs	17db8 <ZSTD_compress@@Base+0x956c>  // b.hs, b.nlast
   17da8:	ldr	w15, [x12, #4]
   17dac:	mov	x27, x7
   17db0:	subs	w14, w14, #0x1
   17db4:	b.ne	17cac <ZSTD_compress@@Base+0x9460>  // b.any
   17db8:	ldr	w0, [sp, #192]
   17dbc:	ldp	x19, x20, [sp, #16]
   17dc0:	sub	w21, w0, #0x8
   17dc4:	ldp	x23, x24, [sp, #48]
   17dc8:	mov	x0, x18
   17dcc:	ldp	x25, x26, [sp, #64]
   17dd0:	ldp	x27, x28, [sp, #80]
   17dd4:	str	w21, [x13, #36]
   17dd8:	ldp	x21, x22, [sp, #32]
   17ddc:	ldp	x29, x30, [sp], #320
   17de0:	ret
   17de4:	str	w18, [x0]
   17de8:	sub	w25, w25, #0x1
   17dec:	mov	w18, w1
   17df0:	ldr	w3, [x2]
   17df4:	and	w0, w15, w3
   17df8:	mov	w1, w3
   17dfc:	ubfiz	x0, x0, #3, #31
   17e00:	add	x2, x22, x0
   17e04:	add	x0, x0, #0x4
   17e08:	add	x0, x22, x0
   17e0c:	b	17a90 <ZSTD_compress@@Base+0x9244>
   17e10:	and	w0, w18, w15
   17e14:	mov	w1, #0x1                   	// #1
   17e18:	mov	w11, w18
   17e1c:	cmp	w18, w12
   17e20:	lsl	w0, w0, #1
   17e24:	add	x0, x0, #0x1
   17e28:	ldr	x5, [x13, #8]
   17e2c:	ldr	w0, [x22, x0, lsl #2]
   17e30:	str	w0, [sp, #296]
   17e34:	ldr	w0, [x13, #188]
   17e38:	ldr	x10, [x13, #64]
   17e3c:	sub	w0, w0, #0x1
   17e40:	lsl	w0, w1, w0
   17e44:	sub	w0, w0, #0x1
   17e48:	str	w0, [sp, #196]
   17e4c:	b.cc	17ed8 <ZSTD_compress@@Base+0x968c>  // b.lo, b.ul, b.last
   17e50:	ldr	x2, [sp, #96]
   17e54:	add	x11, x5, x11
   17e58:	add	x0, x5, x23
   17e5c:	str	x0, [sp, #224]
   17e60:	ldr	w0, [sp, #196]
   17e64:	mov	w1, #0x1                   	// #1
   17e68:	and	w0, w18, w0
   17e6c:	ubfiz	x0, x0, #3, #31
   17e70:	add	x27, x10, x0
   17e74:	add	x28, x27, #0x4
   17e78:	ldr	w19, [x10, x0]
   17e7c:	ldr	w0, [x13, #28]
   17e80:	str	w0, [sp, #144]
   17e84:	ldr	w0, [x13, #184]
   17e88:	lsl	w0, w1, w0
   17e8c:	ldr	w1, [sp, #144]
   17e90:	sub	w1, w18, w1
   17e94:	cmp	w0, w1
   17e98:	b.cs	17ea4 <ZSTD_compress@@Base+0x9658>  // b.hs, b.nlast
   17e9c:	sub	w0, w18, w0
   17ea0:	str	w0, [sp, #144]
   17ea4:	mov	x9, #0x0                   	// #0
   17ea8:	mov	x7, #0x0                   	// #0
   17eac:	str	w25, [sp, #152]
   17eb0:	ldr	w0, [sp, #152]
   17eb4:	cbz	w0, 17ec4 <ZSTD_compress@@Base+0x9678>
   17eb8:	ldr	w0, [sp, #144]
   17ebc:	cmp	w19, w0
   17ec0:	b.hi	17ee8 <ZSTD_compress@@Base+0x969c>  // b.pmore
   17ec4:	str	wzr, [x28]
   17ec8:	add	w25, w25, #0x1
   17ecc:	ldr	w18, [sp, #296]
   17ed0:	str	wzr, [x27]
   17ed4:	b	17ac0 <ZSTD_compress@@Base+0x9274>
   17ed8:	ldr	x0, [sp, #104]
   17edc:	ldr	x2, [sp, #160]
   17ee0:	add	x11, x0, x11
   17ee4:	b	17e58 <ZSTD_compress@@Base+0x960c>
   17ee8:	ldr	w0, [sp, #196]
   17eec:	cmp	x7, x9
   17ef0:	ldr	w1, [sp, #136]
   17ef4:	csel	x14, x7, x9, ls  // ls = plast
   17ef8:	and	w0, w0, w19
   17efc:	mov	w6, w19
   17f00:	cmp	w1, #0x1
   17f04:	ubfiz	x0, x0, #3, #31
   17f08:	str	x0, [sp, #200]
   17f0c:	add	x8, x10, x0
   17f10:	add	x0, x11, x14
   17f14:	b.ne	17fb8 <ZSTD_compress@@Base+0x976c>  // b.any
   17f18:	add	x1, x6, x14
   17f1c:	cmp	x1, x23
   17f20:	b.cs	17fb8 <ZSTD_compress@@Base+0x976c>  // b.hs, b.nlast
   17f24:	cmp	w18, w12
   17f28:	b.cs	17fc0 <ZSTD_compress@@Base+0x9774>  // b.hs, b.nlast
   17f2c:	ldr	x20, [sp, #104]
   17f30:	add	x20, x20, x6
   17f34:	add	x1, x20, x14
   17f38:	stp	x2, x11, [sp, #232]
   17f3c:	stp	x10, x5, [sp, #248]
   17f40:	stp	x8, x7, [sp, #264]
   17f44:	str	x9, [sp, #280]
   17f48:	str	w12, [sp, #288]
   17f4c:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   17f50:	ldp	x2, x11, [sp, #232]
   17f54:	add	x14, x14, x0
   17f58:	ldp	x10, x5, [sp, #248]
   17f5c:	ldp	x8, x7, [sp, #264]
   17f60:	ldr	w12, [sp, #288]
   17f64:	ldr	x9, [sp, #280]
   17f68:	add	x0, x11, x14
   17f6c:	cmp	x2, x0
   17f70:	b.eq	17ec4 <ZSTD_compress@@Base+0x9678>  // b.none
   17f74:	ldrb	w1, [x20, x14]
   17f78:	ldrb	w0, [x11, x14]
   17f7c:	cmp	w1, w0
   17f80:	b.cs	18018 <ZSTD_compress@@Base+0x97cc>  // b.hs, b.nlast
   17f84:	ldr	w0, [sp, #192]
   17f88:	str	w19, [x27]
   17f8c:	cmp	w0, w19
   17f90:	b.cs	1803c <ZSTD_compress@@Base+0x97f0>  // b.hs, b.nlast
   17f94:	ldr	w19, [x8, #4]
   17f98:	add	x27, x8, #0x4
   17f9c:	mov	x8, x28
   17fa0:	ldr	w0, [sp, #152]
   17fa4:	mov	x28, x8
   17fa8:	mov	x7, x14
   17fac:	sub	w0, w0, #0x1
   17fb0:	str	w0, [sp, #152]
   17fb4:	b	17eb0 <ZSTD_compress@@Base+0x9664>
   17fb8:	mov	x20, x5
   17fbc:	b	17f30 <ZSTD_compress@@Base+0x96e4>
   17fc0:	ldr	x1, [sp, #104]
   17fc4:	stp	x2, x6, [sp, #232]
   17fc8:	ldr	x3, [sp, #160]
   17fcc:	add	x20, x1, x6
   17fd0:	ldr	x4, [sp, #224]
   17fd4:	add	x1, x20, x14
   17fd8:	stp	x11, x10, [sp, #248]
   17fdc:	stp	x5, x8, [sp, #264]
   17fe0:	stp	x7, x9, [sp, #280]
   17fe4:	str	w12, [sp, #300]
   17fe8:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   17fec:	ldp	x2, x6, [sp, #232]
   17ff0:	add	x14, x14, x0
   17ff4:	ldr	w12, [sp, #300]
   17ff8:	ldp	x11, x10, [sp, #248]
   17ffc:	ldp	x5, x8, [sp, #264]
   18000:	add	x0, x6, x14
   18004:	cmp	x0, x23
   18008:	ldp	x7, x9, [sp, #280]
   1800c:	b.cc	17f68 <ZSTD_compress@@Base+0x971c>  // b.lo, b.ul, b.last
   18010:	add	x20, x5, x6
   18014:	b	17f68 <ZSTD_compress@@Base+0x971c>
   18018:	ldr	w0, [sp, #192]
   1801c:	str	w19, [x28]
   18020:	cmp	w0, w19
   18024:	b.cs	18044 <ZSTD_compress@@Base+0x97f8>  // b.hs, b.nlast
   18028:	ldr	x0, [sp, #200]
   1802c:	mov	x9, x14
   18030:	mov	x14, x7
   18034:	ldr	w19, [x10, x0]
   18038:	b	17fa0 <ZSTD_compress@@Base+0x9754>
   1803c:	ldr	x27, [sp, #208]
   18040:	b	17ec4 <ZSTD_compress@@Base+0x9678>
   18044:	ldr	x28, [sp, #208]
   18048:	b	17ec4 <ZSTD_compress@@Base+0x9678>
   1804c:	ldp	x2, x1, [sp, #96]
   18050:	stp	x5, x8, [sp, #168]
   18054:	ldp	x4, x3, [sp, #152]
   18058:	str	x7, [sp, #184]
   1805c:	add	x28, x1, x5
   18060:	add	x1, x28, x27
   18064:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   18068:	add	x27, x27, x0
   1806c:	ldp	x5, x8, [sp, #168]
   18070:	ldr	x7, [sp, #184]
   18074:	add	x0, x27, x5
   18078:	cmp	x0, x23
   1807c:	b.cc	17b90 <ZSTD_compress@@Base+0x9344>  // b.lo, b.ul, b.last
   18080:	ldr	x0, [sp, #120]
   18084:	add	x28, x0, x5
   18088:	b	17b90 <ZSTD_compress@@Base+0x9344>
   1808c:	ldrb	w1, [x28, x27]
   18090:	ldrb	w0, [x21, x27]
   18094:	cmp	w1, w0
   18098:	b.cs	180c0 <ZSTD_compress@@Base+0x9874>  // b.hs, b.nlast
   1809c:	ldr	w0, [sp, #112]
   180a0:	str	w19, [x25]
   180a4:	cmp	w19, w0
   180a8:	b.ls	180e8 <ZSTD_compress@@Base+0x989c>  // b.plast
   180ac:	ldr	w19, [x24, #4]
   180b0:	add	x25, x24, #0x4
   180b4:	sub	w14, w14, #0x1
   180b8:	mov	x7, x27
   180bc:	b	17b28 <ZSTD_compress@@Base+0x92dc>
   180c0:	ldr	w0, [sp, #112]
   180c4:	str	w19, [x20]
   180c8:	cmp	w19, w0
   180cc:	b.ls	180f0 <ZSTD_compress@@Base+0x98a4>  // b.plast
   180d0:	ldr	x0, [sp, #144]
   180d4:	mov	x8, x27
   180d8:	mov	x20, x24
   180dc:	mov	x27, x7
   180e0:	ldr	w19, [x22, x0]
   180e4:	b	180b4 <ZSTD_compress@@Base+0x9868>
   180e8:	add	x25, sp, #0x13c
   180ec:	b	17c18 <ZSTD_compress@@Base+0x93cc>
   180f0:	add	x20, sp, #0x13c
   180f4:	b	17c18 <ZSTD_compress@@Base+0x93cc>
   180f8:	cmp	w22, w15
   180fc:	b.cs	17db8 <ZSTD_compress@@Base+0x956c>  // b.hs, b.nlast
   18100:	ldr	w15, [x9, x23]
   18104:	mov	x26, x7
   18108:	b	17db0 <ZSTD_compress@@Base+0x9564>
   1810c:	stp	x29, x30, [sp, #-48]!
   18110:	mov	x18, x0
   18114:	mov	x29, sp
   18118:	stp	x21, x22, [sp, #32]
   1811c:	mov	x21, x2
   18120:	mov	x22, x3
   18124:	ldr	x2, [x0, #8]
   18128:	stp	x19, x20, [sp, #16]
   1812c:	ldr	w3, [x0, #36]
   18130:	ldr	w20, [x0, #200]
   18134:	mov	x19, x1
   18138:	add	x2, x2, x3
   1813c:	cmp	w20, #0x5
   18140:	b.eq	181a4 <ZSTD_compress@@Base+0x9958>  // b.none
   18144:	sub	w20, w20, #0x6
   18148:	cmp	w20, #0x1
   1814c:	b.hi	1816c <ZSTD_compress@@Base+0x9920>  // b.pmore
   18150:	cmp	x1, x2
   18154:	b.cc	181c0 <ZSTD_compress@@Base+0x9974>  // b.lo, b.ul, b.last
   18158:	mov	w2, #0x6                   	// #6
   1815c:	bl	17904 <ZSTD_compress@@Base+0x90b8>
   18160:	mov	w5, #0x1                   	// #1
   18164:	mov	w4, #0x6                   	// #6
   18168:	b	18184 <ZSTD_compress@@Base+0x9938>
   1816c:	cmp	x1, x2
   18170:	b.cc	181c0 <ZSTD_compress@@Base+0x9974>  // b.lo, b.ul, b.last
   18174:	mov	w2, #0x4                   	// #4
   18178:	bl	17904 <ZSTD_compress@@Base+0x90b8>
   1817c:	mov	w5, #0x1                   	// #1
   18180:	mov	w4, #0x4                   	// #4
   18184:	mov	x3, x22
   18188:	mov	x2, x21
   1818c:	mov	x1, x19
   18190:	mov	x0, x18
   18194:	ldp	x19, x20, [sp, #16]
   18198:	ldp	x21, x22, [sp, #32]
   1819c:	ldp	x29, x30, [sp], #48
   181a0:	b	179a4 <ZSTD_compress@@Base+0x9158>
   181a4:	cmp	x1, x2
   181a8:	b.cc	181c0 <ZSTD_compress@@Base+0x9974>  // b.lo, b.ul, b.last
   181ac:	mov	w2, w20
   181b0:	bl	17904 <ZSTD_compress@@Base+0x90b8>
   181b4:	mov	w4, w20
   181b8:	mov	w5, #0x1                   	// #1
   181bc:	b	18184 <ZSTD_compress@@Base+0x9938>
   181c0:	mov	x0, #0x0                   	// #0
   181c4:	ldp	x19, x20, [sp, #16]
   181c8:	ldp	x21, x22, [sp, #32]
   181cc:	ldp	x29, x30, [sp], #48
   181d0:	ret
   181d4:	stp	x29, x30, [sp, #-48]!
   181d8:	mov	x18, x0
   181dc:	mov	x29, sp
   181e0:	stp	x21, x22, [sp, #32]
   181e4:	mov	x21, x2
   181e8:	mov	x22, x3
   181ec:	ldr	x2, [x0, #8]
   181f0:	stp	x19, x20, [sp, #16]
   181f4:	ldr	w3, [x0, #36]
   181f8:	ldr	w20, [x0, #200]
   181fc:	mov	x19, x1
   18200:	add	x2, x2, x3
   18204:	cmp	w20, #0x5
   18208:	b.eq	1826c <ZSTD_compress@@Base+0x9a20>  // b.none
   1820c:	sub	w20, w20, #0x6
   18210:	cmp	w20, #0x1
   18214:	b.hi	18234 <ZSTD_compress@@Base+0x99e8>  // b.pmore
   18218:	cmp	x1, x2
   1821c:	b.cc	18288 <ZSTD_compress@@Base+0x9a3c>  // b.lo, b.ul, b.last
   18220:	mov	w2, #0x6                   	// #6
   18224:	bl	17904 <ZSTD_compress@@Base+0x90b8>
   18228:	mov	w5, #0x2                   	// #2
   1822c:	mov	w4, #0x6                   	// #6
   18230:	b	1824c <ZSTD_compress@@Base+0x9a00>
   18234:	cmp	x1, x2
   18238:	b.cc	18288 <ZSTD_compress@@Base+0x9a3c>  // b.lo, b.ul, b.last
   1823c:	mov	w2, #0x4                   	// #4
   18240:	bl	17904 <ZSTD_compress@@Base+0x90b8>
   18244:	mov	w5, #0x2                   	// #2
   18248:	mov	w4, #0x4                   	// #4
   1824c:	mov	x3, x22
   18250:	mov	x2, x21
   18254:	mov	x1, x19
   18258:	mov	x0, x18
   1825c:	ldp	x19, x20, [sp, #16]
   18260:	ldp	x21, x22, [sp, #32]
   18264:	ldp	x29, x30, [sp], #48
   18268:	b	179a4 <ZSTD_compress@@Base+0x9158>
   1826c:	cmp	x1, x2
   18270:	b.cc	18288 <ZSTD_compress@@Base+0x9a3c>  // b.lo, b.ul, b.last
   18274:	mov	w2, w20
   18278:	bl	17904 <ZSTD_compress@@Base+0x90b8>
   1827c:	mov	w4, w20
   18280:	mov	w5, #0x2                   	// #2
   18284:	b	1824c <ZSTD_compress@@Base+0x9a00>
   18288:	mov	x0, #0x0                   	// #0
   1828c:	ldp	x19, x20, [sp, #16]
   18290:	ldp	x21, x22, [sp, #32]
   18294:	ldp	x29, x30, [sp], #48
   18298:	ret
   1829c:	stp	x29, x30, [sp, #-48]!
   182a0:	mov	x18, x0
   182a4:	mov	x29, sp
   182a8:	stp	x21, x22, [sp, #32]
   182ac:	mov	x21, x2
   182b0:	mov	x22, x3
   182b4:	ldr	x2, [x0, #8]
   182b8:	stp	x19, x20, [sp, #16]
   182bc:	ldr	w3, [x0, #36]
   182c0:	ldr	w20, [x0, #200]
   182c4:	mov	x19, x1
   182c8:	add	x2, x2, x3
   182cc:	cmp	w20, #0x5
   182d0:	b.eq	18334 <ZSTD_compress@@Base+0x9ae8>  // b.none
   182d4:	sub	w20, w20, #0x6
   182d8:	cmp	w20, #0x1
   182dc:	b.hi	182fc <ZSTD_compress@@Base+0x9ab0>  // b.pmore
   182e0:	cmp	x1, x2
   182e4:	b.cc	18350 <ZSTD_compress@@Base+0x9b04>  // b.lo, b.ul, b.last
   182e8:	mov	w2, #0x6                   	// #6
   182ec:	bl	17904 <ZSTD_compress@@Base+0x90b8>
   182f0:	mov	w5, #0x0                   	// #0
   182f4:	mov	w4, #0x6                   	// #6
   182f8:	b	18314 <ZSTD_compress@@Base+0x9ac8>
   182fc:	cmp	x1, x2
   18300:	b.cc	18350 <ZSTD_compress@@Base+0x9b04>  // b.lo, b.ul, b.last
   18304:	mov	w2, #0x4                   	// #4
   18308:	bl	17904 <ZSTD_compress@@Base+0x90b8>
   1830c:	mov	w5, #0x0                   	// #0
   18310:	mov	w4, #0x4                   	// #4
   18314:	mov	x3, x22
   18318:	mov	x2, x21
   1831c:	mov	x1, x19
   18320:	mov	x0, x18
   18324:	ldp	x19, x20, [sp, #16]
   18328:	ldp	x21, x22, [sp, #32]
   1832c:	ldp	x29, x30, [sp], #48
   18330:	b	179a4 <ZSTD_compress@@Base+0x9158>
   18334:	cmp	x1, x2
   18338:	b.cc	18350 <ZSTD_compress@@Base+0x9b04>  // b.lo, b.ul, b.last
   1833c:	mov	w2, w20
   18340:	bl	17904 <ZSTD_compress@@Base+0x90b8>
   18344:	mov	w4, w20
   18348:	mov	w5, #0x0                   	// #0
   1834c:	b	18314 <ZSTD_compress@@Base+0x9ac8>
   18350:	mov	x0, #0x0                   	// #0
   18354:	ldp	x19, x20, [sp, #16]
   18358:	ldp	x21, x22, [sp, #32]
   1835c:	ldp	x29, x30, [sp], #48
   18360:	ret
   18364:	stp	x29, x30, [sp, #-128]!
   18368:	mov	w18, #0x1                   	// #1
   1836c:	mov	x29, sp
   18370:	stp	x27, x28, [sp, #80]
   18374:	mov	x28, x1
   18378:	ldr	w7, [x0, #184]
   1837c:	stp	x21, x22, [sp, #32]
   18380:	add	x1, x0, #0xb8
   18384:	ldr	w6, [x1, #4]
   18388:	stp	x23, x24, [sp, #48]
   1838c:	lsl	w7, w18, w7
   18390:	ldr	w9, [x0, #32]
   18394:	stp	x25, x26, [sp, #64]
   18398:	lsl	w6, w18, w6
   1839c:	mov	x25, x0
   183a0:	ldp	w23, w26, [x0, #24]
   183a4:	stp	x19, x20, [sp, #16]
   183a8:	mov	x19, x2
   183ac:	ldr	x22, [x0, #8]
   183b0:	mov	x20, x3
   183b4:	ldr	x2, [x0, #64]
   183b8:	str	x2, [sp, #104]
   183bc:	ldr	w3, [x0, #200]
   183c0:	sub	w2, w6, #0x1
   183c4:	str	w2, [sp, #112]
   183c8:	sub	x2, x28, x22
   183cc:	cmp	w3, #0x5
   183d0:	add	x24, x22, w23, uxtw
   183d4:	sub	w10, w2, w26
   183d8:	add	w21, w2, #0x2
   183dc:	b.eq	186ac <ZSTD_compress@@Base+0x9e60>  // b.none
   183e0:	sub	w3, w3, #0x6
   183e4:	cmp	w3, w18
   183e8:	sub	w3, w2, w7
   183ec:	b.hi	18510 <ZSTD_compress@@Base+0x9cc4>  // b.pmore
   183f0:	cmp	w7, w10
   183f4:	sub	w27, w2, w6
   183f8:	csel	w3, w3, w26, cc  // cc = lo, ul, last
   183fc:	cmp	w9, #0x0
   18400:	csel	w26, w26, w3, ne  // ne = any
   18404:	cmp	w6, w2
   18408:	ldr	w2, [x1, #12]
   1840c:	csel	w27, w27, wzr, cc  // cc = lo, ul, last
   18410:	mov	w3, #0x6                   	// #6
   18414:	lsl	w18, w18, w2
   18418:	mov	x2, x28
   1841c:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   18420:	mov	w7, w0
   18424:	mov	x13, #0x3                   	// #3
   18428:	cmp	w18, #0x0
   1842c:	ccmp	w7, w26, #0x0, ne  // ne = any
   18430:	b.hi	1882c <ZSTD_compress@@Base+0x9fe0>  // b.pmore
   18434:	ldr	x5, [x25, #176]
   18438:	mov	w0, #0x1                   	// #1
   1843c:	mov	w2, #0x6                   	// #6
   18440:	ldp	x27, x22, [x5]
   18444:	ldr	w1, [x5, #188]
   18448:	ldr	x25, [x5, #64]
   1844c:	lsl	w0, w0, w1
   18450:	ldr	w1, [x5, #24]
   18454:	str	w1, [sp, #104]
   18458:	sub	x1, x27, x22
   1845c:	cmp	w0, w1
   18460:	mov	w6, w1
   18464:	sub	w15, w1, w0
   18468:	ldr	w1, [x5, #192]
   1846c:	csel	w15, w15, wzr, cc  // cc = lo, ul, last
   18470:	sub	w26, w0, #0x1
   18474:	mov	x0, x28
   18478:	bl	176a0 <ZSTD_compress@@Base+0x8e54>
   1847c:	sub	w23, w6, w23
   18480:	ldr	x1, [x5, #48]
   18484:	add	w21, w23, w21
   18488:	add	x5, x28, #0x4
   1848c:	ldr	w14, [x1, x0, lsl #2]
   18490:	ldr	w0, [sp, #104]
   18494:	cmp	w18, #0x0
   18498:	ccmp	w0, w14, #0x2, ne  // ne = any
   1849c:	b.cs	185bc <ZSTD_compress@@Base+0x9d70>  // b.hs, b.nlast
   184a0:	ldr	w2, [x22, w14, uxtw]
   184a4:	add	x1, x22, w14, uxtw
   184a8:	ldr	w0, [x28]
   184ac:	cmp	w2, w0
   184b0:	b.ne	184f8 <ZSTD_compress@@Base+0x9cac>  // b.any
   184b4:	mov	x0, x5
   184b8:	mov	x4, x24
   184bc:	mov	x3, x27
   184c0:	mov	x2, x19
   184c4:	add	x1, x1, #0x4
   184c8:	str	x5, [sp, #112]
   184cc:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   184d0:	add	x0, x0, #0x4
   184d4:	cmp	x0, x13
   184d8:	ldr	x5, [sp, #112]
   184dc:	b.ls	184f8 <ZSTD_compress@@Base+0x9cac>  // b.plast
   184e0:	sub	w1, w21, w14
   184e4:	str	x1, [x20]
   184e8:	add	x1, x28, x0
   184ec:	mov	x13, x0
   184f0:	cmp	x19, x1
   184f4:	b.eq	185bc <ZSTD_compress@@Base+0x9d70>  // b.none
   184f8:	cmp	w14, w15
   184fc:	b.ls	185bc <ZSTD_compress@@Base+0x9d70>  // b.plast
   18500:	and	w14, w26, w14
   18504:	sub	w18, w18, #0x1
   18508:	ldr	w14, [x25, x14, lsl #2]
   1850c:	b	18490 <ZSTD_compress@@Base+0x9c44>
   18510:	cmp	w7, w10
   18514:	sub	w27, w2, w6
   18518:	csel	w3, w3, w26, cc  // cc = lo, ul, last
   1851c:	cmp	w9, #0x0
   18520:	csel	w26, w26, w3, ne  // ne = any
   18524:	cmp	w6, w2
   18528:	ldr	w2, [x1, #12]
   1852c:	csel	w27, w27, wzr, cc  // cc = lo, ul, last
   18530:	mov	w3, #0x4                   	// #4
   18534:	lsl	w18, w18, w2
   18538:	mov	x2, x28
   1853c:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   18540:	mov	w7, w0
   18544:	mov	x13, #0x3                   	// #3
   18548:	cmp	w18, #0x0
   1854c:	ccmp	w7, w26, #0x0, ne  // ne = any
   18550:	b.hi	185dc <ZSTD_compress@@Base+0x9d90>  // b.pmore
   18554:	ldr	x0, [x25, #176]
   18558:	mov	x25, x28
   1855c:	mov	w2, #0x1                   	// #1
   18560:	ldp	x3, x15, [x0]
   18564:	ldp	w1, w4, [x0, #188]
   18568:	ldr	w26, [x25], #4
   1856c:	ldr	w27, [x0, #24]
   18570:	neg	w4, w4
   18574:	lsl	w2, w2, w1
   18578:	sub	x1, x3, x15
   1857c:	sub	w22, w1, w2
   18580:	cmp	w2, w1
   18584:	sub	w6, w2, #0x1
   18588:	mov	w2, #0x79b1                	// #31153
   1858c:	movk	w2, #0x9e37, lsl #16
   18590:	sub	w23, w1, w23
   18594:	ldr	x5, [x0, #64]
   18598:	mul	w2, w26, w2
   1859c:	ldr	x0, [x0, #48]
   185a0:	csel	w22, w22, wzr, cc  // cc = lo, ul, last
   185a4:	lsr	w2, w2, w4
   185a8:	add	w21, w23, w21
   185ac:	ldr	w14, [x0, w2, uxtw #2]
   185b0:	cmp	w18, #0x0
   185b4:	ccmp	w27, w14, #0x2, ne  // ne = any
   185b8:	b.cc	1863c <ZSTD_compress@@Base+0x9df0>  // b.lo, b.ul, b.last
   185bc:	mov	x0, x13
   185c0:	ldp	x19, x20, [sp, #16]
   185c4:	ldp	x21, x22, [sp, #32]
   185c8:	ldp	x23, x24, [sp, #48]
   185cc:	ldp	x25, x26, [sp, #64]
   185d0:	ldp	x27, x28, [sp, #80]
   185d4:	ldp	x29, x30, [sp], #128
   185d8:	ret
   185dc:	add	x1, x22, w7, uxtw
   185e0:	ldrb	w0, [x28, x13]
   185e4:	ldrb	w2, [x1, x13]
   185e8:	cmp	w2, w0
   185ec:	b.ne	1861c <ZSTD_compress@@Base+0x9dd0>  // b.any
   185f0:	mov	x2, x19
   185f4:	mov	x0, x28
   185f8:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   185fc:	cmp	x13, x0
   18600:	b.cs	1861c <ZSTD_compress@@Base+0x9dd0>  // b.hs, b.nlast
   18604:	sub	w1, w21, w7
   18608:	str	x1, [x20]
   1860c:	add	x1, x28, x0
   18610:	mov	x13, x0
   18614:	cmp	x19, x1
   18618:	b.eq	18554 <ZSTD_compress@@Base+0x9d08>  // b.none
   1861c:	cmp	w7, w27
   18620:	b.ls	18554 <ZSTD_compress@@Base+0x9d08>  // b.plast
   18624:	ldr	w0, [sp, #112]
   18628:	sub	w18, w18, #0x1
   1862c:	and	w7, w7, w0
   18630:	ldr	x0, [sp, #104]
   18634:	ldr	w7, [x0, x7, lsl #2]
   18638:	b	18548 <ZSTD_compress@@Base+0x9cfc>
   1863c:	ldr	w0, [x15, w14, uxtw]
   18640:	add	x1, x15, w14, uxtw
   18644:	cmp	w0, w26
   18648:	b.ne	18694 <ZSTD_compress@@Base+0x9e48>  // b.any
   1864c:	mov	x4, x24
   18650:	mov	x2, x19
   18654:	add	x1, x1, #0x4
   18658:	mov	x0, x25
   1865c:	stp	x3, x5, [sp, #104]
   18660:	str	w6, [sp, #124]
   18664:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   18668:	add	x0, x0, #0x4
   1866c:	ldr	w6, [sp, #124]
   18670:	cmp	x0, x13
   18674:	ldp	x3, x5, [sp, #104]
   18678:	b.ls	18694 <ZSTD_compress@@Base+0x9e48>  // b.plast
   1867c:	sub	w1, w21, w14
   18680:	str	x1, [x20]
   18684:	add	x1, x28, x0
   18688:	mov	x13, x0
   1868c:	cmp	x19, x1
   18690:	b.eq	185bc <ZSTD_compress@@Base+0x9d70>  // b.none
   18694:	cmp	w14, w22
   18698:	b.ls	185bc <ZSTD_compress@@Base+0x9d70>  // b.plast
   1869c:	and	w14, w6, w14
   186a0:	sub	w18, w18, #0x1
   186a4:	ldr	w14, [x5, x14, lsl #2]
   186a8:	b	185b0 <ZSTD_compress@@Base+0x9d64>
   186ac:	sub	w8, w2, w7
   186b0:	cmp	w7, w10
   186b4:	csel	w7, w8, w26, cc  // cc = lo, ul, last
   186b8:	cmp	w9, #0x0
   186bc:	csel	w26, w26, w7, ne  // ne = any
   186c0:	sub	w27, w2, w6
   186c4:	cmp	w6, w2
   186c8:	ldr	w2, [x1, #12]
   186cc:	csel	w27, w27, wzr, cc  // cc = lo, ul, last
   186d0:	lsl	w18, w18, w2
   186d4:	mov	x2, x28
   186d8:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   186dc:	mov	w7, w0
   186e0:	mov	x13, #0x3                   	// #3
   186e4:	cmp	w18, #0x0
   186e8:	ccmp	w7, w26, #0x0, ne  // ne = any
   186ec:	b.hi	187cc <ZSTD_compress@@Base+0x9f80>  // b.pmore
   186f0:	ldr	x5, [x25, #176]
   186f4:	mov	w0, #0x1                   	// #1
   186f8:	mov	w2, #0x5                   	// #5
   186fc:	ldp	x27, x22, [x5]
   18700:	ldr	w1, [x5, #188]
   18704:	ldr	x25, [x5, #64]
   18708:	lsl	w0, w0, w1
   1870c:	ldr	w1, [x5, #24]
   18710:	str	w1, [sp, #104]
   18714:	sub	x1, x27, x22
   18718:	cmp	w0, w1
   1871c:	mov	w6, w1
   18720:	sub	w15, w1, w0
   18724:	ldr	w1, [x5, #192]
   18728:	csel	w15, w15, wzr, cc  // cc = lo, ul, last
   1872c:	sub	w26, w0, #0x1
   18730:	mov	x0, x28
   18734:	bl	176a0 <ZSTD_compress@@Base+0x8e54>
   18738:	sub	w23, w6, w23
   1873c:	ldr	x1, [x5, #48]
   18740:	add	w21, w23, w21
   18744:	add	x5, x28, #0x4
   18748:	ldr	w14, [x1, x0, lsl #2]
   1874c:	ldr	w0, [sp, #104]
   18750:	cmp	w18, #0x0
   18754:	ccmp	w0, w14, #0x2, ne  // ne = any
   18758:	b.cs	185bc <ZSTD_compress@@Base+0x9d70>  // b.hs, b.nlast
   1875c:	ldr	w2, [x22, w14, uxtw]
   18760:	add	x1, x22, w14, uxtw
   18764:	ldr	w0, [x28]
   18768:	cmp	w2, w0
   1876c:	b.ne	187b4 <ZSTD_compress@@Base+0x9f68>  // b.any
   18770:	mov	x0, x5
   18774:	mov	x4, x24
   18778:	mov	x3, x27
   1877c:	mov	x2, x19
   18780:	add	x1, x1, #0x4
   18784:	str	x5, [sp, #112]
   18788:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1878c:	add	x0, x0, #0x4
   18790:	cmp	x0, x13
   18794:	ldr	x5, [sp, #112]
   18798:	b.ls	187b4 <ZSTD_compress@@Base+0x9f68>  // b.plast
   1879c:	sub	w1, w21, w14
   187a0:	str	x1, [x20]
   187a4:	add	x1, x28, x0
   187a8:	mov	x13, x0
   187ac:	cmp	x19, x1
   187b0:	b.eq	185bc <ZSTD_compress@@Base+0x9d70>  // b.none
   187b4:	cmp	w14, w15
   187b8:	b.ls	185bc <ZSTD_compress@@Base+0x9d70>  // b.plast
   187bc:	and	w14, w26, w14
   187c0:	sub	w18, w18, #0x1
   187c4:	ldr	w14, [x25, x14, lsl #2]
   187c8:	b	1874c <ZSTD_compress@@Base+0x9f00>
   187cc:	add	x1, x22, w7, uxtw
   187d0:	ldrb	w0, [x28, x13]
   187d4:	ldrb	w2, [x1, x13]
   187d8:	cmp	w2, w0
   187dc:	b.ne	1880c <ZSTD_compress@@Base+0x9fc0>  // b.any
   187e0:	mov	x2, x19
   187e4:	mov	x0, x28
   187e8:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   187ec:	cmp	x13, x0
   187f0:	b.cs	1880c <ZSTD_compress@@Base+0x9fc0>  // b.hs, b.nlast
   187f4:	sub	w1, w21, w7
   187f8:	str	x1, [x20]
   187fc:	add	x1, x28, x0
   18800:	mov	x13, x0
   18804:	cmp	x19, x1
   18808:	b.eq	186f0 <ZSTD_compress@@Base+0x9ea4>  // b.none
   1880c:	cmp	w7, w27
   18810:	b.ls	186f0 <ZSTD_compress@@Base+0x9ea4>  // b.plast
   18814:	ldr	w0, [sp, #112]
   18818:	sub	w18, w18, #0x1
   1881c:	and	w7, w7, w0
   18820:	ldr	x0, [sp, #104]
   18824:	ldr	w7, [x0, x7, lsl #2]
   18828:	b	186e4 <ZSTD_compress@@Base+0x9e98>
   1882c:	add	x1, x22, w7, uxtw
   18830:	ldrb	w0, [x28, x13]
   18834:	ldrb	w2, [x1, x13]
   18838:	cmp	w2, w0
   1883c:	b.ne	1886c <ZSTD_compress@@Base+0xa020>  // b.any
   18840:	mov	x2, x19
   18844:	mov	x0, x28
   18848:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1884c:	cmp	x13, x0
   18850:	b.cs	1886c <ZSTD_compress@@Base+0xa020>  // b.hs, b.nlast
   18854:	sub	w1, w21, w7
   18858:	str	x1, [x20]
   1885c:	add	x1, x28, x0
   18860:	mov	x13, x0
   18864:	cmp	x19, x1
   18868:	b.eq	18434 <ZSTD_compress@@Base+0x9be8>  // b.none
   1886c:	cmp	w7, w27
   18870:	b.ls	18434 <ZSTD_compress@@Base+0x9be8>  // b.plast
   18874:	ldr	w0, [sp, #112]
   18878:	sub	w18, w18, #0x1
   1887c:	and	w7, w7, w0
   18880:	ldr	x0, [sp, #104]
   18884:	ldr	w7, [x0, x7, lsl #2]
   18888:	b	18428 <ZSTD_compress@@Base+0x9bdc>
   1888c:	ldr	w3, [x0, #200]
   18890:	mov	x2, x1
   18894:	add	x1, x0, #0xb8
   18898:	b	1772c <ZSTD_compress@@Base+0x8ee0>
   1889c:	stp	x29, x30, [sp, #-192]!
   188a0:	mov	x29, sp
   188a4:	stp	x21, x22, [sp, #32]
   188a8:	mov	x22, x0
   188ac:	stp	x19, x20, [sp, #16]
   188b0:	add	x20, x3, x4
   188b4:	sub	x0, x20, #0x8
   188b8:	stp	x27, x28, [sp, #80]
   188bc:	mov	x27, x1
   188c0:	ldr	x1, [x22, #8]
   188c4:	stp	x0, x2, [sp, #104]
   188c8:	ldr	w0, [x22, #24]
   188cc:	ldp	w19, w21, [x2]
   188d0:	add	x0, x1, x0
   188d4:	str	x0, [sp, #128]
   188d8:	stp	x23, x24, [sp, #48]
   188dc:	mov	x23, x3
   188e0:	ldr	w0, [sp, #128]
   188e4:	stp	x25, x26, [sp, #64]
   188e8:	cmp	w3, w0
   188ec:	ldr	x0, [sp, #128]
   188f0:	cinc	x25, x3, eq  // eq = none
   188f4:	sub	x0, x25, x0
   188f8:	cmp	w21, w0
   188fc:	b.ls	1892c <ZSTD_compress@@Base+0xa0e0>  // b.plast
   18900:	str	w21, [sp, #136]
   18904:	mov	w21, #0x0                   	// #0
   18908:	cmp	w19, w0
   1890c:	b.ls	18918 <ZSTD_compress@@Base+0xa0cc>  // b.plast
   18910:	str	w19, [sp, #136]
   18914:	mov	w19, #0x0                   	// #0
   18918:	add	x0, sp, #0xb8
   1891c:	str	x0, [sp, #144]
   18920:	sub	x0, x20, #0x20
   18924:	str	x0, [sp, #120]
   18928:	b	18c14 <ZSTD_compress@@Base+0xa3c8>
   1892c:	str	wzr, [sp, #136]
   18930:	b	18908 <ZSTD_compress@@Base+0xa0bc>
   18934:	cmp	w19, #0x0
   18938:	cset	w0, ne  // ne = any
   1893c:	str	w0, [sp, #140]
   18940:	mov	w0, w19
   18944:	str	x0, [sp, #152]
   18948:	sub	x0, x25, w19, uxtw
   1894c:	ldr	w2, [sp, #140]
   18950:	cmp	w2, #0x0
   18954:	ldur	w1, [x0, #1]
   18958:	ldur	w0, [x25, #1]
   1895c:	ccmp	w1, w0, #0x0, ne  // ne = any
   18960:	b.ne	18bf0 <ZSTD_compress@@Base+0xa3a4>  // b.any
   18964:	mov	w0, w19
   18968:	mov	x2, x20
   1896c:	sub	x1, x25, x0
   18970:	add	x0, x25, #0x5
   18974:	add	x1, x1, #0x5
   18978:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1897c:	add	x24, x0, #0x4
   18980:	ldr	x3, [sp, #144]
   18984:	mov	x0, #0xc9ff                	// #51711
   18988:	movk	x0, #0x3b9a, lsl #16
   1898c:	mov	x2, x20
   18990:	mov	x1, x25
   18994:	str	x0, [sp, #184]
   18998:	mov	x0, x22
   1899c:	bl	1829c <ZSTD_compress@@Base+0x9a50>
   189a0:	mov	x28, x0
   189a4:	cmp	x0, x24
   189a8:	b.hi	18bf8 <ZSTD_compress@@Base+0xa3ac>  // b.pmore
   189ac:	add	x26, x25, #0x1
   189b0:	mov	x28, x24
   189b4:	mov	x24, #0x0                   	// #0
   189b8:	cmp	x28, #0x3
   189bc:	b.ls	18c04 <ZSTD_compress@@Base+0xa3b8>  // b.plast
   189c0:	mov	w1, w19
   189c4:	mov	x0, #0x4                   	// #4
   189c8:	sub	x0, x0, x1
   189cc:	str	x0, [sp, #160]
   189d0:	add	x11, x25, #0x1
   189d4:	cbz	x24, 18a4c <ZSTD_compress@@Base+0xa200>
   189d8:	ldr	x0, [sp, #152]
   189dc:	ldr	w2, [sp, #140]
   189e0:	sub	x0, x11, x0
   189e4:	cmp	w2, #0x0
   189e8:	ldr	w1, [x0]
   189ec:	ldur	w0, [x25, #1]
   189f0:	ccmp	w1, w0, #0x0, ne  // ne = any
   189f4:	b.ne	18a4c <ZSTD_compress@@Base+0xa200>  // b.any
   189f8:	ldr	x0, [sp, #160]
   189fc:	mov	x2, x20
   18a00:	str	x11, [sp, #168]
   18a04:	add	x1, x11, x0
   18a08:	add	x0, x25, #0x5
   18a0c:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   18a10:	add	x0, x0, #0x4
   18a14:	add	w2, w24, #0x1
   18a18:	add	w1, w28, w28, lsl #1
   18a1c:	clz	w2, w2
   18a20:	add	w1, w1, #0x1
   18a24:	eor	w2, w2, #0x1f
   18a28:	add	w3, w0, w0, lsl #1
   18a2c:	sub	w1, w1, w2
   18a30:	cmp	w3, w1
   18a34:	ccmp	x0, #0x3, #0x0, gt
   18a38:	ldr	x11, [sp, #168]
   18a3c:	b.ls	18a4c <ZSTD_compress@@Base+0xa200>  // b.plast
   18a40:	mov	x26, x11
   18a44:	mov	x28, x0
   18a48:	mov	x24, #0x0                   	// #0
   18a4c:	ldr	x3, [sp, #144]
   18a50:	mov	x0, #0xc9ff                	// #51711
   18a54:	movk	x0, #0x3b9a, lsl #16
   18a58:	mov	x1, x11
   18a5c:	mov	x2, x20
   18a60:	str	x11, [sp, #168]
   18a64:	str	x0, [sp, #184]
   18a68:	mov	x0, x22
   18a6c:	bl	1829c <ZSTD_compress@@Base+0x9a50>
   18a70:	ldr	x3, [sp, #184]
   18a74:	add	w2, w24, #0x1
   18a78:	clz	w2, w2
   18a7c:	lsl	w10, w28, #2
   18a80:	add	w1, w3, #0x1
   18a84:	eor	w2, w2, #0x1f
   18a88:	clz	w1, w1
   18a8c:	sub	w10, w10, w2
   18a90:	eor	w1, w1, #0x1f
   18a94:	lsl	w2, w0, #2
   18a98:	sub	w1, w2, w1
   18a9c:	add	w2, w10, #0x4
   18aa0:	cmp	w1, w2
   18aa4:	ccmp	x0, #0x3, #0x0, gt
   18aa8:	ldr	x11, [sp, #168]
   18aac:	b.ls	18c78 <ZSTD_compress@@Base+0xa42c>  // b.plast
   18ab0:	mov	x24, x3
   18ab4:	mov	x28, x0
   18ab8:	mov	x26, x11
   18abc:	ldr	x0, [sp, #104]
   18ac0:	cmp	x0, x11
   18ac4:	b.hi	18c70 <ZSTD_compress@@Base+0xa424>  // b.pmore
   18ac8:	cbnz	x24, 18d98 <ZSTD_compress@@Base+0xa54c>
   18acc:	ldr	x1, [sp, #120]
   18ad0:	sub	x10, x26, x23
   18ad4:	mov	w9, w24
   18ad8:	sub	x11, x28, #0x3
   18adc:	cmp	x26, x1
   18ae0:	ldr	x0, [x27, #24]
   18ae4:	b.hi	18db4 <ZSTD_compress@@Base+0xa568>  // b.pmore
   18ae8:	ldp	x2, x3, [x23]
   18aec:	stp	x2, x3, [x0]
   18af0:	cmp	x10, #0x10
   18af4:	b.ls	18b40 <ZSTD_compress@@Base+0xa2f4>  // b.plast
   18af8:	ldr	x2, [x27, #24]
   18afc:	ldp	x0, x1, [x23, #16]
   18b00:	add	x3, x2, x10
   18b04:	stp	x0, x1, [x2, #16]
   18b08:	add	x2, x2, #0x30
   18b0c:	ldp	x0, x1, [x23, #32]
   18b10:	stp	x0, x1, [x2, #-16]
   18b14:	cmp	x3, x2
   18b18:	b.ls	18b40 <ZSTD_compress@@Base+0xa2f4>  // b.plast
   18b1c:	add	x6, x23, #0x30
   18b20:	ldp	x0, x1, [x6]
   18b24:	stp	x0, x1, [x2]
   18b28:	add	x2, x2, #0x20
   18b2c:	ldp	x0, x1, [x6, #16]
   18b30:	stp	x0, x1, [x2, #-16]
   18b34:	add	x6, x6, #0x20
   18b38:	cmp	x3, x2
   18b3c:	b.hi	18b20 <ZSTD_compress@@Base+0xa2d4>  // b.pmore
   18b40:	ldr	x0, [x27, #24]
   18b44:	mov	x1, #0xffff                	// #65535
   18b48:	cmp	x10, x1
   18b4c:	add	x0, x0, x10
   18b50:	str	x0, [x27, #24]
   18b54:	ldr	x0, [x27, #8]
   18b58:	b.ls	18b74 <ZSTD_compress@@Base+0xa328>  // b.plast
   18b5c:	mov	w1, #0x1                   	// #1
   18b60:	str	w1, [x27, #72]
   18b64:	ldr	x1, [x27]
   18b68:	sub	x1, x0, x1
   18b6c:	asr	x1, x1, #3
   18b70:	str	w1, [x27, #76]
   18b74:	add	w9, w9, #0x1
   18b78:	str	w9, [x0]
   18b7c:	strh	w10, [x0, #4]
   18b80:	mov	x1, #0xffff                	// #65535
   18b84:	cmp	x11, x1
   18b88:	b.ls	18ba4 <ZSTD_compress@@Base+0xa358>  // b.plast
   18b8c:	mov	w1, #0x2                   	// #2
   18b90:	str	w1, [x27, #72]
   18b94:	ldr	x1, [x27]
   18b98:	sub	x1, x0, x1
   18b9c:	asr	x1, x1, #3
   18ba0:	str	w1, [x27, #76]
   18ba4:	add	x25, x26, x28
   18ba8:	strh	w11, [x0, #6]
   18bac:	mov	w8, #0x1                   	// #1
   18bb0:	add	x0, x0, #0x8
   18bb4:	mov	x9, #0xffff                	// #65535
   18bb8:	mov	w10, #0x2                   	// #2
   18bbc:	str	x0, [x27, #8]
   18bc0:	ldr	x0, [sp, #104]
   18bc4:	cmp	w21, #0x0
   18bc8:	ccmp	x0, x25, #0x0, ne  // ne = any
   18bcc:	b.cc	18be8 <ZSTD_compress@@Base+0xa39c>  // b.lo, b.ul, b.last
   18bd0:	sub	x0, x25, w21, uxtw
   18bd4:	mov	w1, w21
   18bd8:	ldr	w2, [x0]
   18bdc:	ldr	w0, [x25]
   18be0:	cmp	w2, w0
   18be4:	b.eq	18dc8 <ZSTD_compress@@Base+0xa57c>  // b.none
   18be8:	mov	x23, x25
   18bec:	b	18c14 <ZSTD_compress@@Base+0xa3c8>
   18bf0:	mov	x24, #0x0                   	// #0
   18bf4:	b	18980 <ZSTD_compress@@Base+0xa134>
   18bf8:	mov	x26, x25
   18bfc:	ldr	x24, [sp, #184]
   18c00:	b	189b8 <ZSTD_compress@@Base+0xa16c>
   18c04:	sub	x0, x25, x23
   18c08:	asr	x0, x0, #8
   18c0c:	add	x0, x0, #0x1
   18c10:	add	x25, x25, x0
   18c14:	ldr	x0, [sp, #104]
   18c18:	cmp	x0, x25
   18c1c:	b.hi	18934 <ZSTD_compress@@Base+0xa0e8>  // b.pmore
   18c20:	ldr	w0, [sp, #136]
   18c24:	cmp	w19, #0x0
   18c28:	ldp	x25, x26, [sp, #64]
   18c2c:	csel	w19, w19, w0, ne  // ne = any
   18c30:	ldr	x0, [sp, #112]
   18c34:	cmp	w21, #0x0
   18c38:	ldp	x27, x28, [sp, #80]
   18c3c:	str	w19, [x0]
   18c40:	ldr	w0, [sp, #136]
   18c44:	csel	w0, w0, w21, eq  // eq = none
   18c48:	str	w0, [sp, #136]
   18c4c:	ldr	x0, [sp, #112]
   18c50:	ldr	w1, [sp, #136]
   18c54:	ldp	x21, x22, [sp, #32]
   18c58:	str	w1, [x0, #4]
   18c5c:	sub	x0, x20, x23
   18c60:	ldp	x19, x20, [sp, #16]
   18c64:	ldp	x23, x24, [sp, #48]
   18c68:	ldp	x29, x30, [sp], #192
   18c6c:	ret
   18c70:	mov	x25, x26
   18c74:	b	189d0 <ZSTD_compress@@Base+0xa184>
   18c78:	ldr	x0, [sp, #104]
   18c7c:	cmp	x0, x11
   18c80:	b.ls	18ac8 <ZSTD_compress@@Base+0xa27c>  // b.plast
   18c84:	add	x11, x25, #0x2
   18c88:	cbz	x24, 18cec <ZSTD_compress@@Base+0xa4a0>
   18c8c:	ldr	x0, [sp, #152]
   18c90:	ldr	w2, [sp, #140]
   18c94:	sub	x0, x11, x0
   18c98:	cmp	w2, #0x0
   18c9c:	ldr	w1, [x0]
   18ca0:	ldur	w0, [x25, #2]
   18ca4:	ccmp	w1, w0, #0x0, ne  // ne = any
   18ca8:	b.ne	18cec <ZSTD_compress@@Base+0xa4a0>  // b.any
   18cac:	ldr	x0, [sp, #160]
   18cb0:	mov	x2, x20
   18cb4:	str	x11, [sp, #168]
   18cb8:	add	x1, x11, x0
   18cbc:	add	x0, x25, #0x6
   18cc0:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   18cc4:	add	x0, x0, #0x4
   18cc8:	add	w10, w10, #0x1
   18ccc:	lsl	w1, w0, #2
   18cd0:	cmp	w1, w10
   18cd4:	ccmp	x0, #0x3, #0x0, gt
   18cd8:	ldr	x11, [sp, #168]
   18cdc:	b.ls	18cec <ZSTD_compress@@Base+0xa4a0>  // b.plast
   18ce0:	mov	x26, x11
   18ce4:	mov	x28, x0
   18ce8:	mov	x24, #0x0                   	// #0
   18cec:	ldr	x3, [sp, #144]
   18cf0:	mov	x0, #0xc9ff                	// #51711
   18cf4:	movk	x0, #0x3b9a, lsl #16
   18cf8:	mov	x1, x11
   18cfc:	mov	x2, x20
   18d00:	str	x11, [sp, #168]
   18d04:	str	x0, [sp, #184]
   18d08:	mov	x0, x22
   18d0c:	bl	1829c <ZSTD_compress@@Base+0x9a50>
   18d10:	lsl	w3, w0, #2
   18d14:	ldr	x4, [sp, #184]
   18d18:	add	w2, w24, #0x1
   18d1c:	clz	w2, w2
   18d20:	add	w1, w4, #0x1
   18d24:	eor	w2, w2, #0x1f
   18d28:	clz	w1, w1
   18d2c:	eor	w1, w1, #0x1f
   18d30:	sub	w3, w3, w1
   18d34:	lsl	w1, w28, #2
   18d38:	add	w1, w1, #0x7
   18d3c:	sub	w1, w1, w2
   18d40:	cmp	w3, w1
   18d44:	ccmp	x0, #0x3, #0x0, gt
   18d48:	ldr	x11, [sp, #168]
   18d4c:	b.ls	18ac8 <ZSTD_compress@@Base+0xa27c>  // b.plast
   18d50:	mov	x24, x4
   18d54:	b	18ab4 <ZSTD_compress@@Base+0xa268>
   18d58:	sub	x5, x5, #0x1
   18d5c:	ldr	x4, [sp, #128]
   18d60:	add	x3, x2, x5
   18d64:	sub	x8, x0, x5
   18d68:	cmp	x4, x3
   18d6c:	ccmp	x23, x5, #0x2, cc  // cc = lo, ul, last
   18d70:	b.cs	18d84 <ZSTD_compress@@Base+0xa538>  // b.hs, b.nlast
   18d74:	ldurb	w4, [x5, #-1]
   18d78:	ldrb	w3, [x5, x1]
   18d7c:	cmp	w4, w3
   18d80:	b.eq	18d58 <ZSTD_compress@@Base+0xa50c>  // b.none
   18d84:	mov	w21, w19
   18d88:	mov	x26, x5
   18d8c:	mov	x28, x8
   18d90:	sub	w19, w24, #0x2
   18d94:	b	18acc <ZSTD_compress@@Base+0xa280>
   18d98:	mov	x2, #0x2                   	// #2
   18d9c:	mov	x1, #0x1                   	// #1
   18da0:	mov	x5, x26
   18da4:	add	x0, x26, x28
   18da8:	sub	x2, x2, x24
   18dac:	sub	x1, x1, x24
   18db0:	b	18d5c <ZSTD_compress@@Base+0xa510>
   18db4:	ldr	x3, [sp, #120]
   18db8:	mov	x2, x26
   18dbc:	mov	x1, x23
   18dc0:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   18dc4:	b	18b40 <ZSTD_compress@@Base+0xa2f4>
   18dc8:	mov	x0, #0x4                   	// #4
   18dcc:	sub	x1, x0, x1
   18dd0:	add	x1, x25, x1
   18dd4:	mov	x2, x20
   18dd8:	add	x0, x25, x0
   18ddc:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   18de0:	ldr	x1, [sp, #120]
   18de4:	add	x11, x0, #0x4
   18de8:	add	x5, x0, #0x1
   18dec:	cmp	x1, x25
   18df0:	ldr	x0, [x27, #24]
   18df4:	b.cc	18e44 <ZSTD_compress@@Base+0xa5f8>  // b.lo, b.ul, b.last
   18df8:	ldp	x2, x3, [x25]
   18dfc:	stp	x2, x3, [x0]
   18e00:	cmp	x5, x9
   18e04:	ldr	x0, [x27, #8]
   18e08:	str	w8, [x0]
   18e0c:	strh	wzr, [x0, #4]
   18e10:	b.ls	18e24 <ZSTD_compress@@Base+0xa5d8>  // b.plast
   18e14:	ldr	x1, [x27]
   18e18:	sub	x1, x0, x1
   18e1c:	asr	x1, x1, #3
   18e20:	stp	w10, w1, [x27, #72]
   18e24:	add	x0, x0, #0x8
   18e28:	sturh	w5, [x0, #-2]
   18e2c:	str	x0, [x27, #8]
   18e30:	mov	w0, w19
   18e34:	add	x25, x25, x11
   18e38:	mov	w19, w21
   18e3c:	mov	w21, w0
   18e40:	b	18bc0 <ZSTD_compress@@Base+0xa374>
   18e44:	ldr	x3, [sp, #120]
   18e48:	mov	x2, x25
   18e4c:	mov	x1, x25
   18e50:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   18e54:	b	18e00 <ZSTD_compress@@Base+0xa5b4>
   18e58:	stp	x29, x30, [sp, #-208]!
   18e5c:	mov	x18, x0
   18e60:	mov	x29, sp
   18e64:	stp	x19, x20, [sp, #16]
   18e68:	add	x19, x3, x4
   18e6c:	sub	x0, x19, #0x8
   18e70:	stp	x21, x22, [sp, #32]
   18e74:	mov	x21, x1
   18e78:	mov	x20, x3
   18e7c:	ldr	x1, [x18, #8]
   18e80:	str	x0, [sp, #120]
   18e84:	ldr	w0, [x18, #24]
   18e88:	stp	x23, x24, [sp, #48]
   18e8c:	add	x0, x1, x0
   18e90:	str	x0, [sp, #160]
   18e94:	ldr	w0, [x2]
   18e98:	str	w0, [sp, #100]
   18e9c:	ldr	w0, [x2, #4]
   18ea0:	str	w0, [sp, #112]
   18ea4:	ldr	w0, [sp, #160]
   18ea8:	ldr	w1, [sp, #112]
   18eac:	cmp	w3, w0
   18eb0:	stp	x25, x26, [sp, #64]
   18eb4:	ldr	x0, [sp, #160]
   18eb8:	stp	x27, x28, [sp, #80]
   18ebc:	cinc	x27, x3, eq  // eq = none
   18ec0:	str	x2, [sp, #144]
   18ec4:	sub	x0, x27, x0
   18ec8:	cmp	w1, w0
   18ecc:	b.ls	18ef4 <ZSTD_compress@@Base+0xa6a8>  // b.plast
   18ed0:	stp	wzr, w1, [sp, #112]
   18ed4:	ldr	w1, [sp, #100]
   18ed8:	cmp	w1, w0
   18edc:	b.ls	18ee8 <ZSTD_compress@@Base+0xa69c>  // b.plast
   18ee0:	str	wzr, [sp, #100]
   18ee4:	str	w1, [sp, #116]
   18ee8:	sub	x0, x19, #0x20
   18eec:	str	x0, [sp, #152]
   18ef0:	b	19374 <ZSTD_compress@@Base+0xab28>
   18ef4:	str	wzr, [sp, #116]
   18ef8:	b	18ed4 <ZSTD_compress@@Base+0xa688>
   18efc:	cmp	w0, #0x0
   18f00:	ldr	w1, [sp, #100]
   18f04:	cset	w0, ne  // ne = any
   18f08:	str	w0, [sp, #176]
   18f0c:	ldr	w0, [sp, #100]
   18f10:	str	x0, [sp, #128]
   18f14:	mov	x0, #0x1                   	// #1
   18f18:	ldr	w2, [sp, #176]
   18f1c:	sub	x0, x0, w1, uxtw
   18f20:	cmp	w2, #0x0
   18f24:	ldr	w1, [x27, x0]
   18f28:	ldur	w0, [x27, #1]
   18f2c:	ccmp	w1, w0, #0x0, ne  // ne = any
   18f30:	b.ne	19060 <ZSTD_compress@@Base+0xa814>  // b.any
   18f34:	ldr	x0, [sp, #128]
   18f38:	mov	x2, x19
   18f3c:	sub	x1, x27, x0
   18f40:	add	x0, x27, #0x5
   18f44:	add	x1, x1, #0x5
   18f48:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   18f4c:	add	x0, x0, #0x4
   18f50:	str	x0, [sp, #104]
   18f54:	ldr	x25, [x18, #8]
   18f58:	mov	w6, #0x1                   	// #1
   18f5c:	ldp	w24, w8, [x18, #28]
   18f60:	add	x22, x18, #0xb8
   18f64:	ldr	w2, [x18, #184]
   18f68:	ldr	w1, [x22, #4]
   18f6c:	ldr	x0, [x18, #64]
   18f70:	str	x0, [sp, #136]
   18f74:	ldr	w3, [x18, #200]
   18f78:	sub	x0, x27, x25
   18f7c:	lsl	w1, w6, w1
   18f80:	mov	w23, w0
   18f84:	cmp	w3, #0x5
   18f88:	sub	w28, w1, #0x1
   18f8c:	sub	w9, w0, w24
   18f90:	lsl	w2, w6, w2
   18f94:	b.eq	192a4 <ZSTD_compress@@Base+0xaa58>  // b.none
   18f98:	sub	w3, w3, #0x6
   18f9c:	cmp	w3, w6
   18fa0:	sub	w3, w0, w2
   18fa4:	b.hi	19068 <ZSTD_compress@@Base+0xa81c>  // b.pmore
   18fa8:	cmp	w2, w9
   18fac:	sub	w26, w0, w1
   18fb0:	csel	w2, w3, w24, cc  // cc = lo, ul, last
   18fb4:	cmp	w8, #0x0
   18fb8:	csel	w24, w24, w2, ne  // ne = any
   18fbc:	cmp	w1, w0
   18fc0:	csel	w0, w26, wzr, cc  // cc = lo, ul, last
   18fc4:	str	w0, [sp, #168]
   18fc8:	ldr	w0, [x22, #12]
   18fcc:	mov	x2, x27
   18fd0:	mov	x1, x22
   18fd4:	mov	w3, #0x6                   	// #6
   18fd8:	add	w23, w23, #0x2
   18fdc:	lsl	w26, w6, w0
   18fe0:	mov	x0, x18
   18fe4:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   18fe8:	mov	w9, w0
   18fec:	mov	x8, #0xc9ff                	// #51711
   18ff0:	mov	x7, #0x3                   	// #3
   18ff4:	movk	x8, #0x3b9a, lsl #16
   18ff8:	cmp	w26, #0x0
   18ffc:	ccmp	w9, w24, #0x0, ne  // ne = any
   19000:	b.ls	190c4 <ZSTD_compress@@Base+0xa878>  // b.plast
   19004:	add	x1, x25, w9, uxtw
   19008:	ldrb	w0, [x27, x7]
   1900c:	ldrb	w2, [x1, x7]
   19010:	cmp	w2, w0
   19014:	b.ne	19040 <ZSTD_compress@@Base+0xa7f4>  // b.any
   19018:	mov	x2, x19
   1901c:	mov	x0, x27
   19020:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   19024:	cmp	x7, x0
   19028:	b.cs	19040 <ZSTD_compress@@Base+0xa7f4>  // b.hs, b.nlast
   1902c:	add	x1, x27, x0
   19030:	sub	w8, w23, w9
   19034:	mov	x7, x0
   19038:	cmp	x19, x1
   1903c:	b.eq	190c4 <ZSTD_compress@@Base+0xa878>  // b.none
   19040:	ldr	w0, [sp, #168]
   19044:	cmp	w9, w0
   19048:	b.ls	190c4 <ZSTD_compress@@Base+0xa878>  // b.plast
   1904c:	ldr	x0, [sp, #136]
   19050:	and	w9, w9, w28
   19054:	sub	w26, w26, #0x1
   19058:	ldr	w9, [x0, x9, lsl #2]
   1905c:	b	18ff8 <ZSTD_compress@@Base+0xa7ac>
   19060:	str	xzr, [sp, #104]
   19064:	b	18f54 <ZSTD_compress@@Base+0xa708>
   19068:	cmp	w2, w9
   1906c:	sub	w26, w0, w1
   19070:	csel	w2, w3, w24, cc  // cc = lo, ul, last
   19074:	cmp	w8, #0x0
   19078:	csel	w24, w24, w2, ne  // ne = any
   1907c:	cmp	w1, w0
   19080:	csel	w0, w26, wzr, cc  // cc = lo, ul, last
   19084:	str	w0, [sp, #168]
   19088:	ldr	w0, [x22, #12]
   1908c:	mov	x2, x27
   19090:	mov	x1, x22
   19094:	mov	w3, #0x4                   	// #4
   19098:	add	w23, w23, #0x2
   1909c:	lsl	w26, w6, w0
   190a0:	mov	x0, x18
   190a4:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   190a8:	mov	w9, w0
   190ac:	mov	x8, #0xc9ff                	// #51711
   190b0:	mov	x7, #0x3                   	// #3
   190b4:	movk	x8, #0x3b9a, lsl #16
   190b8:	cmp	w26, #0x0
   190bc:	ccmp	w9, w24, #0x0, ne  // ne = any
   190c0:	b.hi	19248 <ZSTD_compress@@Base+0xa9fc>  // b.pmore
   190c4:	ldr	x0, [sp, #104]
   190c8:	cmp	x0, x7
   190cc:	b.cc	1935c <ZSTD_compress@@Base+0xab10>  // b.lo, b.ul, b.last
   190d0:	add	x23, x27, #0x1
   190d4:	mov	x7, x0
   190d8:	mov	x8, #0x0                   	// #0
   190dc:	cmp	x7, #0x3
   190e0:	b.ls	19364 <ZSTD_compress@@Base+0xab18>  // b.plast
   190e4:	ldr	x1, [sp, #128]
   190e8:	mov	x0, #0x4                   	// #4
   190ec:	sub	x0, x0, x1
   190f0:	str	x0, [sp, #184]
   190f4:	ldr	x0, [sp, #128]
   190f8:	mov	x24, x8
   190fc:	mov	x28, x7
   19100:	str	x27, [sp, #104]
   19104:	neg	x0, x0
   19108:	str	x0, [sp, #200]
   1910c:	ldr	x1, [sp, #104]
   19110:	ldr	x0, [sp, #120]
   19114:	cmp	x0, x1
   19118:	b.hi	193e4 <ZSTD_compress@@Base+0xab98>  // b.pmore
   1911c:	cbnz	x24, 19b08 <ZSTD_compress@@Base+0xb2bc>
   19120:	ldr	x1, [sp, #152]
   19124:	sub	x5, x23, x20
   19128:	sub	x8, x28, #0x3
   1912c:	cmp	x23, x1
   19130:	ldr	x0, [x21, #24]
   19134:	b.hi	19b20 <ZSTD_compress@@Base+0xb2d4>  // b.pmore
   19138:	ldp	x2, x3, [x20]
   1913c:	stp	x2, x3, [x0]
   19140:	cmp	x5, #0x10
   19144:	b.ls	19190 <ZSTD_compress@@Base+0xa944>  // b.plast
   19148:	ldr	x0, [x21, #24]
   1914c:	ldp	x2, x3, [x20, #16]
   19150:	add	x1, x0, x5
   19154:	stp	x2, x3, [x0, #16]
   19158:	add	x0, x0, #0x30
   1915c:	ldp	x2, x3, [x20, #32]
   19160:	stp	x2, x3, [x0, #-16]
   19164:	cmp	x1, x0
   19168:	b.ls	19190 <ZSTD_compress@@Base+0xa944>  // b.plast
   1916c:	add	x20, x20, #0x30
   19170:	ldp	x2, x3, [x20]
   19174:	stp	x2, x3, [x0]
   19178:	add	x0, x0, #0x20
   1917c:	ldp	x2, x3, [x20, #16]
   19180:	stp	x2, x3, [x0, #-16]
   19184:	add	x20, x20, #0x20
   19188:	cmp	x1, x0
   1918c:	b.hi	19170 <ZSTD_compress@@Base+0xa924>  // b.pmore
   19190:	ldr	x0, [x21, #24]
   19194:	mov	x1, #0xffff                	// #65535
   19198:	cmp	x5, x1
   1919c:	add	x0, x0, x5
   191a0:	str	x0, [x21, #24]
   191a4:	ldr	x0, [x21, #8]
   191a8:	b.ls	191c4 <ZSTD_compress@@Base+0xa978>  // b.plast
   191ac:	mov	w1, #0x1                   	// #1
   191b0:	str	w1, [x21, #72]
   191b4:	ldr	x1, [x21]
   191b8:	sub	x1, x0, x1
   191bc:	asr	x1, x1, #3
   191c0:	str	w1, [x21, #76]
   191c4:	add	w24, w24, #0x1
   191c8:	str	w24, [x0]
   191cc:	strh	w5, [x0, #4]
   191d0:	mov	x1, #0xffff                	// #65535
   191d4:	cmp	x8, x1
   191d8:	b.ls	191f4 <ZSTD_compress@@Base+0xa9a8>  // b.plast
   191dc:	mov	w1, #0x2                   	// #2
   191e0:	str	w1, [x21, #72]
   191e4:	ldr	x1, [x21]
   191e8:	sub	x1, x0, x1
   191ec:	asr	x1, x1, #3
   191f0:	str	w1, [x21, #76]
   191f4:	add	x27, x23, x28
   191f8:	strh	w8, [x0, #6]
   191fc:	mov	w9, #0x1                   	// #1
   19200:	add	x0, x0, #0x8
   19204:	mov	x8, #0x4                   	// #4
   19208:	mov	x10, #0xffff                	// #65535
   1920c:	mov	w11, #0x2                   	// #2
   19210:	str	x0, [x21, #8]
   19214:	ldr	w0, [sp, #112]
   19218:	cmp	w0, #0x0
   1921c:	ldr	x0, [sp, #120]
   19220:	ccmp	x0, x27, #0x0, ne  // ne = any
   19224:	b.cc	19240 <ZSTD_compress@@Base+0xa9f4>  // b.lo, b.ul, b.last
   19228:	ldr	w1, [sp, #112]
   1922c:	sub	x0, x27, w1, uxtw
   19230:	ldr	w2, [x0]
   19234:	ldr	w0, [x27]
   19238:	cmp	w2, w0
   1923c:	b.eq	19b34 <ZSTD_compress@@Base+0xb2e8>  // b.none
   19240:	mov	x20, x27
   19244:	b	19374 <ZSTD_compress@@Base+0xab28>
   19248:	add	x1, x25, w9, uxtw
   1924c:	ldrb	w0, [x27, x7]
   19250:	ldrb	w2, [x1, x7]
   19254:	cmp	w2, w0
   19258:	b.ne	19284 <ZSTD_compress@@Base+0xaa38>  // b.any
   1925c:	mov	x2, x19
   19260:	mov	x0, x27
   19264:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   19268:	cmp	x7, x0
   1926c:	b.cs	19284 <ZSTD_compress@@Base+0xaa38>  // b.hs, b.nlast
   19270:	add	x1, x27, x0
   19274:	sub	w8, w23, w9
   19278:	mov	x7, x0
   1927c:	cmp	x19, x1
   19280:	b.eq	190c4 <ZSTD_compress@@Base+0xa878>  // b.none
   19284:	ldr	w0, [sp, #168]
   19288:	cmp	w9, w0
   1928c:	b.ls	190c4 <ZSTD_compress@@Base+0xa878>  // b.plast
   19290:	ldr	x0, [sp, #136]
   19294:	and	w9, w9, w28
   19298:	sub	w26, w26, #0x1
   1929c:	ldr	w9, [x0, x9, lsl #2]
   192a0:	b	190b8 <ZSTD_compress@@Base+0xa86c>
   192a4:	sub	w7, w0, w2
   192a8:	cmp	w2, w9
   192ac:	csel	w2, w7, w24, cc  // cc = lo, ul, last
   192b0:	cmp	w8, #0x0
   192b4:	sub	w26, w0, w1
   192b8:	csel	w24, w24, w2, ne  // ne = any
   192bc:	cmp	w1, w0
   192c0:	mov	x2, x27
   192c4:	csel	w0, w26, wzr, cc  // cc = lo, ul, last
   192c8:	str	w0, [sp, #168]
   192cc:	ldr	w0, [x22, #12]
   192d0:	mov	x1, x22
   192d4:	add	w23, w23, #0x2
   192d8:	lsl	w26, w6, w0
   192dc:	mov	x0, x18
   192e0:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   192e4:	mov	w9, w0
   192e8:	mov	x8, #0xc9ff                	// #51711
   192ec:	mov	x7, #0x3                   	// #3
   192f0:	movk	x8, #0x3b9a, lsl #16
   192f4:	cmp	w26, #0x0
   192f8:	ccmp	w9, w24, #0x0, ne  // ne = any
   192fc:	b.ls	190c4 <ZSTD_compress@@Base+0xa878>  // b.plast
   19300:	add	x1, x25, w9, uxtw
   19304:	ldrb	w0, [x27, x7]
   19308:	ldrb	w2, [x1, x7]
   1930c:	cmp	w2, w0
   19310:	b.ne	1933c <ZSTD_compress@@Base+0xaaf0>  // b.any
   19314:	mov	x2, x19
   19318:	mov	x0, x27
   1931c:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   19320:	cmp	x7, x0
   19324:	b.cs	1933c <ZSTD_compress@@Base+0xaaf0>  // b.hs, b.nlast
   19328:	add	x1, x27, x0
   1932c:	sub	w8, w23, w9
   19330:	mov	x7, x0
   19334:	cmp	x19, x1
   19338:	b.eq	190c4 <ZSTD_compress@@Base+0xa878>  // b.none
   1933c:	ldr	w0, [sp, #168]
   19340:	cmp	w9, w0
   19344:	b.ls	190c4 <ZSTD_compress@@Base+0xa878>  // b.plast
   19348:	ldr	x0, [sp, #136]
   1934c:	and	w9, w9, w28
   19350:	sub	w26, w26, #0x1
   19354:	ldr	w9, [x0, x9, lsl #2]
   19358:	b	192f4 <ZSTD_compress@@Base+0xaaa8>
   1935c:	mov	x23, x27
   19360:	b	190dc <ZSTD_compress@@Base+0xa890>
   19364:	sub	x0, x27, x20
   19368:	asr	x0, x0, #8
   1936c:	add	x0, x0, #0x1
   19370:	add	x27, x27, x0
   19374:	ldr	x0, [sp, #120]
   19378:	cmp	x0, x27
   1937c:	ldr	w0, [sp, #100]
   19380:	b.hi	18efc <ZSTD_compress@@Base+0xa6b0>  // b.pmore
   19384:	ldr	w1, [sp, #116]
   19388:	cmp	w0, #0x0
   1938c:	ldp	x21, x22, [sp, #32]
   19390:	csel	w0, w0, w1, ne  // ne = any
   19394:	str	w0, [sp, #100]
   19398:	ldr	x0, [sp, #144]
   1939c:	ldr	w1, [sp, #100]
   193a0:	ldp	x23, x24, [sp, #48]
   193a4:	ldp	x25, x26, [sp, #64]
   193a8:	ldp	x27, x28, [sp, #80]
   193ac:	str	w1, [x0]
   193b0:	ldr	w0, [sp, #112]
   193b4:	ldr	w1, [sp, #112]
   193b8:	cmp	w0, #0x0
   193bc:	ldr	w0, [sp, #116]
   193c0:	csel	w0, w0, w1, eq  // eq = none
   193c4:	str	w0, [sp, #116]
   193c8:	ldr	x0, [sp, #144]
   193cc:	ldr	w1, [sp, #116]
   193d0:	str	w1, [x0, #4]
   193d4:	sub	x0, x19, x20
   193d8:	ldp	x19, x20, [sp, #16]
   193dc:	ldp	x29, x30, [sp], #208
   193e0:	ret
   193e4:	ldr	x0, [sp, #104]
   193e8:	add	x25, x0, #0x1
   193ec:	cbz	x24, 19460 <ZSTD_compress@@Base+0xac14>
   193f0:	ldr	x0, [sp, #200]
   193f4:	ldr	w2, [sp, #176]
   193f8:	ldr	w1, [x25, x0]
   193fc:	cmp	w2, #0x0
   19400:	ldr	x0, [sp, #104]
   19404:	ldur	w0, [x0, #1]
   19408:	ccmp	w1, w0, #0x0, ne  // ne = any
   1940c:	b.ne	19460 <ZSTD_compress@@Base+0xac14>  // b.any
   19410:	ldr	x0, [sp, #184]
   19414:	mov	x2, x19
   19418:	add	x1, x25, x0
   1941c:	ldr	x0, [sp, #104]
   19420:	add	x0, x0, #0x5
   19424:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   19428:	add	w2, w24, #0x1
   1942c:	add	x0, x0, #0x4
   19430:	clz	w2, w2
   19434:	add	w1, w28, w28, lsl #1
   19438:	add	w1, w1, #0x1
   1943c:	eor	w2, w2, #0x1f
   19440:	add	w3, w0, w0, lsl #1
   19444:	sub	w1, w1, w2
   19448:	cmp	w3, w1
   1944c:	ccmp	x0, #0x3, #0x0, gt
   19450:	b.ls	19460 <ZSTD_compress@@Base+0xac14>  // b.plast
   19454:	mov	x23, x25
   19458:	mov	x28, x0
   1945c:	mov	x24, #0x0                   	// #0
   19460:	ldr	w2, [x22, #4]
   19464:	mov	w6, #0x1                   	// #1
   19468:	ldr	x0, [x18, #64]
   1946c:	str	x0, [sp, #168]
   19470:	lsl	w2, w6, w2
   19474:	sub	w0, w2, #0x1
   19478:	str	w0, [sp, #180]
   1947c:	ldr	x0, [x18, #8]
   19480:	str	x0, [sp, #136]
   19484:	ldp	w26, w8, [x18, #28]
   19488:	sub	x1, x25, x0
   1948c:	ldr	w0, [x22]
   19490:	ldr	w3, [x18, #200]
   19494:	sub	w9, w1, w26
   19498:	str	w1, [sp, #192]
   1949c:	cmp	w3, #0x5
   194a0:	lsl	w0, w6, w0
   194a4:	b.eq	19758 <ZSTD_compress@@Base+0xaf0c>  // b.none
   194a8:	sub	w3, w3, #0x6
   194ac:	cmp	w3, w6
   194b0:	sub	w3, w1, w0
   194b4:	b.hi	19520 <ZSTD_compress@@Base+0xacd4>  // b.pmore
   194b8:	cmp	w0, w9
   194bc:	sub	w27, w1, w2
   194c0:	csel	w0, w3, w26, cc  // cc = lo, ul, last
   194c4:	cmp	w8, #0x0
   194c8:	csel	w26, w26, w0, ne  // ne = any
   194cc:	cmp	w2, w1
   194d0:	csel	w0, w27, wzr, cc  // cc = lo, ul, last
   194d4:	str	w0, [sp, #196]
   194d8:	ldr	w0, [x22, #12]
   194dc:	mov	x2, x25
   194e0:	mov	x1, x22
   194e4:	mov	w3, #0x6                   	// #6
   194e8:	lsl	w27, w6, w0
   194ec:	mov	x0, x18
   194f0:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   194f4:	mov	w8, w0
   194f8:	ldr	w0, [sp, #192]
   194fc:	mov	x9, #0xc9ff                	// #51711
   19500:	movk	x9, #0x3b9a, lsl #16
   19504:	mov	x10, #0x3                   	// #3
   19508:	add	w11, w0, #0x2
   1950c:	cmp	w27, #0x0
   19510:	ccmp	w8, w26, #0x0, ne  // ne = any
   19514:	b.hi	1981c <ZSTD_compress@@Base+0xafd0>  // b.pmore
   19518:	mov	x7, x10
   1951c:	b	19580 <ZSTD_compress@@Base+0xad34>
   19520:	cmp	w0, w9
   19524:	sub	w27, w1, w2
   19528:	csel	w0, w3, w26, cc  // cc = lo, ul, last
   1952c:	cmp	w8, #0x0
   19530:	csel	w26, w26, w0, ne  // ne = any
   19534:	cmp	w2, w1
   19538:	csel	w0, w27, wzr, cc  // cc = lo, ul, last
   1953c:	str	w0, [sp, #196]
   19540:	ldr	w0, [x22, #12]
   19544:	mov	x2, x25
   19548:	mov	x1, x22
   1954c:	mov	w3, #0x4                   	// #4
   19550:	lsl	w27, w6, w0
   19554:	mov	x0, x18
   19558:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1955c:	mov	w8, w0
   19560:	ldr	w0, [sp, #192]
   19564:	mov	x9, #0xc9ff                	// #51711
   19568:	movk	x9, #0x3b9a, lsl #16
   1956c:	mov	x7, #0x3                   	// #3
   19570:	add	w10, w0, #0x2
   19574:	cmp	w27, #0x0
   19578:	ccmp	w8, w26, #0x0, ne  // ne = any
   1957c:	b.hi	196f4 <ZSTD_compress@@Base+0xaea8>  // b.pmore
   19580:	add	w0, w24, #0x1
   19584:	add	w1, w9, #0x1
   19588:	clz	w0, w0
   1958c:	clz	w1, w1
   19590:	eor	w0, w0, #0x1f
   19594:	lsl	w8, w28, #2
   19598:	sub	w8, w8, w0
   1959c:	eor	w1, w1, #0x1f
   195a0:	lsl	w0, w7, #2
   195a4:	sub	w0, w0, w1
   195a8:	add	w1, w8, #0x4
   195ac:	cmp	w0, w1
   195b0:	ccmp	x7, #0x3, #0x0, gt
   195b4:	b.hi	19ab4 <ZSTD_compress@@Base+0xb268>  // b.pmore
   195b8:	ldr	x0, [sp, #120]
   195bc:	cmp	x0, x25
   195c0:	b.ls	1911c <ZSTD_compress@@Base+0xa8d0>  // b.plast
   195c4:	ldr	x0, [sp, #104]
   195c8:	add	x27, x0, #0x2
   195cc:	cbz	x24, 19630 <ZSTD_compress@@Base+0xade4>
   195d0:	ldr	x0, [sp, #128]
   195d4:	ldr	w2, [sp, #176]
   195d8:	sub	x0, x27, x0
   195dc:	cmp	w2, #0x0
   195e0:	ldr	w1, [x0]
   195e4:	ldr	x0, [sp, #104]
   195e8:	ldur	w0, [x0, #2]
   195ec:	ccmp	w1, w0, #0x0, ne  // ne = any
   195f0:	b.ne	19630 <ZSTD_compress@@Base+0xade4>  // b.any
   195f4:	ldr	x0, [sp, #184]
   195f8:	mov	x2, x19
   195fc:	add	x1, x27, x0
   19600:	ldr	x0, [sp, #104]
   19604:	add	x0, x0, #0x6
   19608:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1960c:	add	x0, x0, #0x4
   19610:	add	w8, w8, #0x1
   19614:	lsl	w1, w0, #2
   19618:	cmp	w1, w8
   1961c:	ccmp	x0, #0x3, #0x0, gt
   19620:	b.ls	19630 <ZSTD_compress@@Base+0xade4>  // b.plast
   19624:	mov	x23, x27
   19628:	mov	x28, x0
   1962c:	mov	x24, #0x0                   	// #0
   19630:	ldr	w2, [x18, #188]
   19634:	mov	w9, #0x1                   	// #1
   19638:	ldr	x0, [x18, #64]
   1963c:	str	x0, [sp, #136]
   19640:	lsl	w2, w9, w2
   19644:	sub	w0, w2, #0x1
   19648:	str	w0, [sp, #168]
   1964c:	add	x10, x18, #0xb8
   19650:	ldr	x0, [x18, #8]
   19654:	str	x0, [sp, #104]
   19658:	ldp	w25, w7, [x18, #28]
   1965c:	sub	x1, x27, x0
   19660:	ldr	w0, [x18, #184]
   19664:	ldr	w3, [x18, #200]
   19668:	sub	w8, w1, w25
   1966c:	str	w1, [sp, #180]
   19670:	cmp	w3, #0x5
   19674:	lsl	w0, w9, w0
   19678:	b.eq	19988 <ZSTD_compress@@Base+0xb13c>  // b.none
   1967c:	sub	w3, w3, #0x6
   19680:	cmp	w3, w9
   19684:	sub	w3, w1, w0
   19688:	b.hi	19884 <ZSTD_compress@@Base+0xb038>  // b.pmore
   1968c:	cmp	w0, w8
   19690:	ldr	w6, [x10, #12]
   19694:	csel	w0, w3, w25, cc  // cc = lo, ul, last
   19698:	cmp	w7, #0x0
   1969c:	csel	w25, w25, w0, ne  // ne = any
   196a0:	cmp	w2, w1
   196a4:	sub	w26, w1, w2
   196a8:	mov	w3, #0x6                   	// #6
   196ac:	csel	w0, w26, wzr, cc  // cc = lo, ul, last
   196b0:	mov	x2, x27
   196b4:	lsl	w26, w9, w6
   196b8:	mov	x1, x22
   196bc:	str	w0, [sp, #192]
   196c0:	mov	x0, x18
   196c4:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   196c8:	mov	w9, w0
   196cc:	ldr	w0, [sp, #180]
   196d0:	mov	x8, #0xc9ff                	// #51711
   196d4:	movk	x8, #0x3b9a, lsl #16
   196d8:	mov	x10, #0x3                   	// #3
   196dc:	add	w11, w0, #0x2
   196e0:	cmp	w26, #0x0
   196e4:	ccmp	w9, w25, #0x0, ne  // ne = any
   196e8:	b.hi	19a4c <ZSTD_compress@@Base+0xb200>  // b.pmore
   196ec:	mov	x7, x10
   196f0:	b	198e4 <ZSTD_compress@@Base+0xb098>
   196f4:	ldr	x0, [sp, #136]
   196f8:	add	x1, x0, w8, uxtw
   196fc:	ldrb	w0, [x25, x7]
   19700:	ldrb	w2, [x1, x7]
   19704:	cmp	w2, w0
   19708:	b.ne	19734 <ZSTD_compress@@Base+0xaee8>  // b.any
   1970c:	mov	x2, x19
   19710:	mov	x0, x25
   19714:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   19718:	cmp	x7, x0
   1971c:	b.cs	19734 <ZSTD_compress@@Base+0xaee8>  // b.hs, b.nlast
   19720:	add	x1, x25, x0
   19724:	sub	w9, w10, w8
   19728:	mov	x7, x0
   1972c:	cmp	x19, x1
   19730:	b.eq	19580 <ZSTD_compress@@Base+0xad34>  // b.none
   19734:	ldr	w0, [sp, #196]
   19738:	cmp	w8, w0
   1973c:	b.ls	19580 <ZSTD_compress@@Base+0xad34>  // b.plast
   19740:	ldr	w0, [sp, #180]
   19744:	sub	w27, w27, #0x1
   19748:	and	w8, w8, w0
   1974c:	ldr	x0, [sp, #168]
   19750:	ldr	w8, [x0, x8, lsl #2]
   19754:	b	19574 <ZSTD_compress@@Base+0xad28>
   19758:	sub	w7, w1, w0
   1975c:	cmp	w0, w9
   19760:	csel	w0, w7, w26, cc  // cc = lo, ul, last
   19764:	cmp	w8, #0x0
   19768:	sub	w27, w1, w2
   1976c:	csel	w26, w26, w0, ne  // ne = any
   19770:	cmp	w2, w1
   19774:	mov	x2, x25
   19778:	csel	w0, w27, wzr, cc  // cc = lo, ul, last
   1977c:	str	w0, [sp, #196]
   19780:	ldr	w0, [x22, #12]
   19784:	mov	x1, x22
   19788:	lsl	w27, w6, w0
   1978c:	mov	x0, x18
   19790:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   19794:	mov	w8, w0
   19798:	ldr	w0, [sp, #192]
   1979c:	mov	x9, #0xc9ff                	// #51711
   197a0:	movk	x9, #0x3b9a, lsl #16
   197a4:	mov	x7, #0x3                   	// #3
   197a8:	add	w10, w0, #0x2
   197ac:	cmp	w27, #0x0
   197b0:	ccmp	w8, w26, #0x0, ne  // ne = any
   197b4:	b.ls	19580 <ZSTD_compress@@Base+0xad34>  // b.plast
   197b8:	ldr	x0, [sp, #136]
   197bc:	add	x1, x0, w8, uxtw
   197c0:	ldrb	w0, [x25, x7]
   197c4:	ldrb	w2, [x1, x7]
   197c8:	cmp	w2, w0
   197cc:	b.ne	197f8 <ZSTD_compress@@Base+0xafac>  // b.any
   197d0:	mov	x2, x19
   197d4:	mov	x0, x25
   197d8:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   197dc:	cmp	x7, x0
   197e0:	b.cs	197f8 <ZSTD_compress@@Base+0xafac>  // b.hs, b.nlast
   197e4:	add	x1, x25, x0
   197e8:	sub	w9, w10, w8
   197ec:	mov	x7, x0
   197f0:	cmp	x19, x1
   197f4:	b.eq	19580 <ZSTD_compress@@Base+0xad34>  // b.none
   197f8:	ldr	w0, [sp, #196]
   197fc:	cmp	w8, w0
   19800:	b.ls	19580 <ZSTD_compress@@Base+0xad34>  // b.plast
   19804:	ldr	w0, [sp, #180]
   19808:	sub	w27, w27, #0x1
   1980c:	and	w8, w8, w0
   19810:	ldr	x0, [sp, #168]
   19814:	ldr	w8, [x0, x8, lsl #2]
   19818:	b	197ac <ZSTD_compress@@Base+0xaf60>
   1981c:	ldr	x0, [sp, #136]
   19820:	add	x1, x0, w8, uxtw
   19824:	ldrb	w0, [x25, x10]
   19828:	ldrb	w2, [x1, x10]
   1982c:	cmp	w2, w0
   19830:	b.ne	19860 <ZSTD_compress@@Base+0xb014>  // b.any
   19834:	mov	x2, x19
   19838:	mov	x0, x25
   1983c:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   19840:	mov	x7, x0
   19844:	cmp	x10, x0
   19848:	b.cs	19860 <ZSTD_compress@@Base+0xb014>  // b.hs, b.nlast
   1984c:	add	x0, x25, x0
   19850:	sub	w9, w11, w8
   19854:	cmp	x19, x0
   19858:	b.eq	19580 <ZSTD_compress@@Base+0xad34>  // b.none
   1985c:	mov	x10, x7
   19860:	ldr	w0, [sp, #196]
   19864:	cmp	w8, w0
   19868:	b.ls	19518 <ZSTD_compress@@Base+0xaccc>  // b.plast
   1986c:	ldr	w0, [sp, #180]
   19870:	sub	w27, w27, #0x1
   19874:	and	w8, w8, w0
   19878:	ldr	x0, [sp, #168]
   1987c:	ldr	w8, [x0, x8, lsl #2]
   19880:	b	1950c <ZSTD_compress@@Base+0xacc0>
   19884:	cmp	w0, w8
   19888:	ldr	w6, [x10, #12]
   1988c:	csel	w0, w3, w25, cc  // cc = lo, ul, last
   19890:	cmp	w7, #0x0
   19894:	csel	w25, w25, w0, ne  // ne = any
   19898:	cmp	w2, w1
   1989c:	sub	w26, w1, w2
   198a0:	mov	w3, #0x4                   	// #4
   198a4:	csel	w0, w26, wzr, cc  // cc = lo, ul, last
   198a8:	mov	x2, x27
   198ac:	lsl	w26, w9, w6
   198b0:	mov	x1, x22
   198b4:	str	w0, [sp, #192]
   198b8:	mov	x0, x18
   198bc:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   198c0:	mov	w9, w0
   198c4:	ldr	w0, [sp, #180]
   198c8:	mov	x8, #0xc9ff                	// #51711
   198cc:	movk	x8, #0x3b9a, lsl #16
   198d0:	mov	x7, #0x3                   	// #3
   198d4:	add	w10, w0, #0x2
   198d8:	cmp	w26, #0x0
   198dc:	ccmp	w9, w25, #0x0, ne  // ne = any
   198e0:	b.hi	19924 <ZSTD_compress@@Base+0xb0d8>  // b.pmore
   198e4:	add	w0, w8, #0x1
   198e8:	add	w2, w24, #0x1
   198ec:	clz	w0, w0
   198f0:	lsl	w1, w7, #2
   198f4:	eor	w0, w0, #0x1f
   198f8:	clz	w2, w2
   198fc:	sub	w1, w1, w0
   19900:	lsl	w0, w28, #2
   19904:	add	w0, w0, #0x7
   19908:	eor	w2, w2, #0x1f
   1990c:	sub	w0, w0, w2
   19910:	cmp	w1, w0
   19914:	ccmp	x7, #0x3, #0x0, gt
   19918:	b.ls	1911c <ZSTD_compress@@Base+0xa8d0>  // b.plast
   1991c:	mov	x23, x27
   19920:	b	190f4 <ZSTD_compress@@Base+0xa8a8>
   19924:	ldr	x0, [sp, #104]
   19928:	add	x1, x0, w9, uxtw
   1992c:	ldrb	w0, [x27, x7]
   19930:	ldrb	w2, [x1, x7]
   19934:	cmp	w2, w0
   19938:	b.ne	19964 <ZSTD_compress@@Base+0xb118>  // b.any
   1993c:	mov	x2, x19
   19940:	mov	x0, x27
   19944:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   19948:	cmp	x7, x0
   1994c:	b.cs	19964 <ZSTD_compress@@Base+0xb118>  // b.hs, b.nlast
   19950:	add	x1, x27, x0
   19954:	sub	w8, w10, w9
   19958:	mov	x7, x0
   1995c:	cmp	x19, x1
   19960:	b.eq	198e4 <ZSTD_compress@@Base+0xb098>  // b.none
   19964:	ldr	w0, [sp, #192]
   19968:	cmp	w9, w0
   1996c:	b.ls	198e4 <ZSTD_compress@@Base+0xb098>  // b.plast
   19970:	ldr	w0, [sp, #168]
   19974:	sub	w26, w26, #0x1
   19978:	and	w9, w9, w0
   1997c:	ldr	x0, [sp, #136]
   19980:	ldr	w9, [x0, x9, lsl #2]
   19984:	b	198d8 <ZSTD_compress@@Base+0xb08c>
   19988:	cmp	w0, w8
   1998c:	sub	w6, w1, w0
   19990:	csel	w0, w6, w25, cc  // cc = lo, ul, last
   19994:	cmp	w7, #0x0
   19998:	ldr	w6, [x10, #12]
   1999c:	csel	w25, w25, w0, ne  // ne = any
   199a0:	cmp	w2, w1
   199a4:	sub	w26, w1, w2
   199a8:	csel	w0, w26, wzr, cc  // cc = lo, ul, last
   199ac:	mov	x2, x27
   199b0:	lsl	w26, w9, w6
   199b4:	mov	x1, x22
   199b8:	str	w0, [sp, #192]
   199bc:	mov	x0, x18
   199c0:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   199c4:	mov	w9, w0
   199c8:	ldr	w0, [sp, #180]
   199cc:	mov	x8, #0xc9ff                	// #51711
   199d0:	movk	x8, #0x3b9a, lsl #16
   199d4:	mov	x7, #0x3                   	// #3
   199d8:	add	w10, w0, #0x2
   199dc:	cmp	w26, #0x0
   199e0:	ccmp	w9, w25, #0x0, ne  // ne = any
   199e4:	b.ls	198e4 <ZSTD_compress@@Base+0xb098>  // b.plast
   199e8:	ldr	x0, [sp, #104]
   199ec:	add	x1, x0, w9, uxtw
   199f0:	ldrb	w0, [x27, x7]
   199f4:	ldrb	w2, [x1, x7]
   199f8:	cmp	w2, w0
   199fc:	b.ne	19a28 <ZSTD_compress@@Base+0xb1dc>  // b.any
   19a00:	mov	x2, x19
   19a04:	mov	x0, x27
   19a08:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   19a0c:	cmp	x7, x0
   19a10:	b.cs	19a28 <ZSTD_compress@@Base+0xb1dc>  // b.hs, b.nlast
   19a14:	add	x1, x27, x0
   19a18:	sub	w8, w10, w9
   19a1c:	mov	x7, x0
   19a20:	cmp	x19, x1
   19a24:	b.eq	198e4 <ZSTD_compress@@Base+0xb098>  // b.none
   19a28:	ldr	w0, [sp, #192]
   19a2c:	cmp	w9, w0
   19a30:	b.ls	198e4 <ZSTD_compress@@Base+0xb098>  // b.plast
   19a34:	ldr	w0, [sp, #168]
   19a38:	sub	w26, w26, #0x1
   19a3c:	and	w9, w9, w0
   19a40:	ldr	x0, [sp, #136]
   19a44:	ldr	w9, [x0, x9, lsl #2]
   19a48:	b	199dc <ZSTD_compress@@Base+0xb190>
   19a4c:	ldr	x0, [sp, #104]
   19a50:	add	x1, x0, w9, uxtw
   19a54:	ldrb	w0, [x27, x10]
   19a58:	ldrb	w2, [x1, x10]
   19a5c:	cmp	w2, w0
   19a60:	b.ne	19a90 <ZSTD_compress@@Base+0xb244>  // b.any
   19a64:	mov	x2, x19
   19a68:	mov	x0, x27
   19a6c:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   19a70:	mov	x7, x0
   19a74:	cmp	x10, x0
   19a78:	b.cs	19a90 <ZSTD_compress@@Base+0xb244>  // b.hs, b.nlast
   19a7c:	add	x0, x27, x0
   19a80:	sub	w8, w11, w9
   19a84:	cmp	x19, x0
   19a88:	b.eq	198e4 <ZSTD_compress@@Base+0xb098>  // b.none
   19a8c:	mov	x10, x7
   19a90:	ldr	w0, [sp, #192]
   19a94:	cmp	w9, w0
   19a98:	b.ls	196ec <ZSTD_compress@@Base+0xaea0>  // b.plast
   19a9c:	ldr	w0, [sp, #168]
   19aa0:	sub	w26, w26, #0x1
   19aa4:	and	w9, w9, w0
   19aa8:	ldr	x0, [sp, #136]
   19aac:	ldr	w9, [x0, x9, lsl #2]
   19ab0:	b	196e0 <ZSTD_compress@@Base+0xae94>
   19ab4:	mov	x23, x25
   19ab8:	mov	x24, x9
   19abc:	mov	x28, x7
   19ac0:	str	x25, [sp, #104]
   19ac4:	b	1910c <ZSTD_compress@@Base+0xa8c0>
   19ac8:	sub	x23, x23, #0x1
   19acc:	ldr	x2, [sp, #160]
   19ad0:	add	x1, x0, x23
   19ad4:	sub	x28, x4, x23
   19ad8:	cmp	x2, x1
   19adc:	ccmp	x20, x23, #0x2, cc  // cc = lo, ul, last
   19ae0:	b.cs	19af4 <ZSTD_compress@@Base+0xb2a8>  // b.hs, b.nlast
   19ae4:	ldurb	w2, [x23, #-1]
   19ae8:	ldrb	w1, [x23, x3]
   19aec:	cmp	w2, w1
   19af0:	b.eq	19ac8 <ZSTD_compress@@Base+0xb27c>  // b.none
   19af4:	ldr	w0, [sp, #100]
   19af8:	str	w0, [sp, #112]
   19afc:	sub	w0, w24, #0x2
   19b00:	str	w0, [sp, #100]
   19b04:	b	19120 <ZSTD_compress@@Base+0xa8d4>
   19b08:	mov	x0, #0x2                   	// #2
   19b0c:	mov	x1, #0x1                   	// #1
   19b10:	add	x4, x23, x28
   19b14:	sub	x0, x0, x24
   19b18:	sub	x3, x1, x24
   19b1c:	b	19acc <ZSTD_compress@@Base+0xb280>
   19b20:	ldr	x3, [sp, #152]
   19b24:	mov	x2, x23
   19b28:	mov	x1, x20
   19b2c:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   19b30:	b	19190 <ZSTD_compress@@Base+0xa944>
   19b34:	sub	x1, x8, x1
   19b38:	mov	x2, x19
   19b3c:	add	x1, x27, x1
   19b40:	add	x0, x27, #0x4
   19b44:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   19b48:	add	x5, x0, #0x4
   19b4c:	ldr	x1, [sp, #152]
   19b50:	add	x12, x0, #0x1
   19b54:	ldr	x0, [x21, #24]
   19b58:	cmp	x1, x27
   19b5c:	b.cc	19bb0 <ZSTD_compress@@Base+0xb364>  // b.lo, b.ul, b.last
   19b60:	ldp	x2, x3, [x27]
   19b64:	stp	x2, x3, [x0]
   19b68:	cmp	x12, x10
   19b6c:	ldr	x0, [x21, #8]
   19b70:	str	w9, [x0]
   19b74:	strh	wzr, [x0, #4]
   19b78:	b.ls	19b8c <ZSTD_compress@@Base+0xb340>  // b.plast
   19b7c:	ldr	x1, [x21]
   19b80:	sub	x1, x0, x1
   19b84:	asr	x1, x1, #3
   19b88:	stp	w11, w1, [x21, #72]
   19b8c:	add	x0, x0, #0x8
   19b90:	sturh	w12, [x0, #-2]
   19b94:	ldr	w1, [sp, #112]
   19b98:	add	x27, x27, x5
   19b9c:	str	x0, [x21, #8]
   19ba0:	ldr	w0, [sp, #100]
   19ba4:	str	w1, [sp, #100]
   19ba8:	str	w0, [sp, #112]
   19bac:	b	19214 <ZSTD_compress@@Base+0xa9c8>
   19bb0:	ldr	x3, [sp, #152]
   19bb4:	mov	x2, x27
   19bb8:	mov	x1, x27
   19bbc:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   19bc0:	b	19b68 <ZSTD_compress@@Base+0xb31c>
   19bc4:	stp	x29, x30, [sp, #-208]!
   19bc8:	mov	x18, x0
   19bcc:	mov	x29, sp
   19bd0:	stp	x19, x20, [sp, #16]
   19bd4:	add	x20, x3, x4
   19bd8:	sub	x0, x20, #0x8
   19bdc:	stp	x21, x22, [sp, #32]
   19be0:	mov	x21, x1
   19be4:	mov	x19, x3
   19be8:	ldr	x1, [x18, #8]
   19bec:	str	x0, [sp, #144]
   19bf0:	ldr	w0, [x18, #24]
   19bf4:	stp	x23, x24, [sp, #48]
   19bf8:	add	x0, x1, x0
   19bfc:	str	x0, [sp, #152]
   19c00:	ldr	w0, [x2, #4]
   19c04:	str	w0, [sp, #116]
   19c08:	ldr	w0, [sp, #152]
   19c0c:	ldr	w1, [sp, #116]
   19c10:	cmp	w3, w0
   19c14:	stp	x25, x26, [sp, #64]
   19c18:	cinc	x25, x3, eq  // eq = none
   19c1c:	ldr	x0, [sp, #152]
   19c20:	stp	x27, x28, [sp, #80]
   19c24:	ldr	w27, [x2]
   19c28:	str	x2, [sp, #128]
   19c2c:	sub	x0, x25, x0
   19c30:	cmp	w1, w0
   19c34:	b.ls	19c5c <ZSTD_compress@@Base+0xb410>  // b.plast
   19c38:	str	wzr, [sp, #116]
   19c3c:	str	w1, [sp, #168]
   19c40:	cmp	w27, w0
   19c44:	b.ls	19c50 <ZSTD_compress@@Base+0xb404>  // b.plast
   19c48:	str	w27, [sp, #168]
   19c4c:	mov	w27, #0x0                   	// #0
   19c50:	sub	x0, x20, #0x20
   19c54:	str	x0, [sp, #136]
   19c58:	b	1a110 <ZSTD_compress@@Base+0xb8c4>
   19c5c:	str	wzr, [sp, #168]
   19c60:	b	19c40 <ZSTD_compress@@Base+0xb3f4>
   19c64:	cmp	w27, #0x0
   19c68:	cset	w0, ne  // ne = any
   19c6c:	str	w0, [sp, #184]
   19c70:	mov	w0, w27
   19c74:	str	x0, [sp, #176]
   19c78:	sub	x0, x25, w27, uxtw
   19c7c:	ldr	w2, [sp, #184]
   19c80:	cmp	w2, #0x0
   19c84:	ldur	w1, [x0, #1]
   19c88:	ldur	w0, [x25, #1]
   19c8c:	ccmp	w1, w0, #0x0, ne  // ne = any
   19c90:	b.ne	19ddc <ZSTD_compress@@Base+0xb590>  // b.any
   19c94:	mov	w0, w27
   19c98:	mov	x2, x20
   19c9c:	sub	x1, x25, x0
   19ca0:	add	x0, x25, #0x5
   19ca4:	add	x1, x1, #0x5
   19ca8:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   19cac:	add	x0, x0, #0x4
   19cb0:	str	x0, [sp, #120]
   19cb4:	ldr	w1, [x18, #188]
   19cb8:	mov	w5, #0x1                   	// #1
   19cbc:	ldr	x24, [x18, #8]
   19cc0:	add	x28, x18, #0xb8
   19cc4:	ldp	w23, w9, [x18, #28]
   19cc8:	lsl	w1, w5, w1
   19ccc:	ldr	w2, [x18, #184]
   19cd0:	ldr	x0, [x18, #64]
   19cd4:	str	x0, [sp, #160]
   19cd8:	ldr	w3, [x18, #200]
   19cdc:	sub	w0, w1, #0x1
   19ce0:	str	w0, [sp, #172]
   19ce4:	sub	x0, x25, x24
   19ce8:	cmp	w3, #0x5
   19cec:	mov	w22, w0
   19cf0:	sub	w10, w0, w23
   19cf4:	lsl	w2, w5, w2
   19cf8:	b.eq	1a028 <ZSTD_compress@@Base+0xb7dc>  // b.none
   19cfc:	sub	w3, w3, #0x6
   19d00:	cmp	w3, w5
   19d04:	sub	w3, w0, w2
   19d08:	b.hi	19de4 <ZSTD_compress@@Base+0xb598>  // b.pmore
   19d0c:	cmp	w2, w10
   19d10:	sub	w26, w0, w1
   19d14:	csel	w2, w3, w23, cc  // cc = lo, ul, last
   19d18:	cmp	w9, #0x0
   19d1c:	ldr	w9, [x28, #12]
   19d20:	csel	w23, w23, w2, ne  // ne = any
   19d24:	cmp	w1, w0
   19d28:	mov	x2, x25
   19d2c:	csel	w0, w26, wzr, cc  // cc = lo, ul, last
   19d30:	mov	x1, x28
   19d34:	lsl	w9, w5, w9
   19d38:	mov	w3, #0x6                   	// #6
   19d3c:	stp	w0, w9, [sp, #188]
   19d40:	mov	x0, x18
   19d44:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   19d48:	add	w22, w22, #0x2
   19d4c:	ldr	w9, [sp, #192]
   19d50:	mov	w8, w0
   19d54:	mov	x0, #0xc9ff                	// #51711
   19d58:	mov	x26, #0x3                   	// #3
   19d5c:	movk	x0, #0x3b9a, lsl #16
   19d60:	str	x0, [sp, #104]
   19d64:	cmp	w9, #0x0
   19d68:	ccmp	w8, w23, #0x0, ne  // ne = any
   19d6c:	b.ls	19e48 <ZSTD_compress@@Base+0xb5fc>  // b.plast
   19d70:	add	x1, x24, w8, uxtw
   19d74:	ldrb	w0, [x25, x26]
   19d78:	ldrb	w2, [x1, x26]
   19d7c:	cmp	w2, w0
   19d80:	b.ne	19db8 <ZSTD_compress@@Base+0xb56c>  // b.any
   19d84:	mov	x2, x20
   19d88:	mov	x0, x25
   19d8c:	str	w9, [sp, #192]
   19d90:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   19d94:	ldr	w9, [sp, #192]
   19d98:	cmp	x26, x0
   19d9c:	b.cs	19db8 <ZSTD_compress@@Base+0xb56c>  // b.hs, b.nlast
   19da0:	sub	w1, w22, w8
   19da4:	str	x1, [sp, #104]
   19da8:	add	x1, x25, x0
   19dac:	mov	x26, x0
   19db0:	cmp	x20, x1
   19db4:	b.eq	19e48 <ZSTD_compress@@Base+0xb5fc>  // b.none
   19db8:	ldr	w0, [sp, #188]
   19dbc:	cmp	w8, w0
   19dc0:	b.ls	19e48 <ZSTD_compress@@Base+0xb5fc>  // b.plast
   19dc4:	ldr	w0, [sp, #172]
   19dc8:	sub	w9, w9, #0x1
   19dcc:	and	w8, w8, w0
   19dd0:	ldr	x0, [sp, #160]
   19dd4:	ldr	w8, [x0, x8, lsl #2]
   19dd8:	b	19d64 <ZSTD_compress@@Base+0xb518>
   19ddc:	str	xzr, [sp, #120]
   19de0:	b	19cb4 <ZSTD_compress@@Base+0xb468>
   19de4:	cmp	w2, w10
   19de8:	sub	w26, w0, w1
   19dec:	csel	w2, w3, w23, cc  // cc = lo, ul, last
   19df0:	cmp	w9, #0x0
   19df4:	ldr	w9, [x28, #12]
   19df8:	csel	w23, w23, w2, ne  // ne = any
   19dfc:	cmp	w1, w0
   19e00:	mov	x2, x25
   19e04:	csel	w0, w26, wzr, cc  // cc = lo, ul, last
   19e08:	mov	x1, x28
   19e0c:	lsl	w9, w5, w9
   19e10:	mov	w3, #0x4                   	// #4
   19e14:	stp	w0, w9, [sp, #188]
   19e18:	mov	x0, x18
   19e1c:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   19e20:	add	w22, w22, #0x2
   19e24:	ldr	w9, [sp, #192]
   19e28:	mov	w8, w0
   19e2c:	mov	x0, #0xc9ff                	// #51711
   19e30:	mov	x26, #0x3                   	// #3
   19e34:	movk	x0, #0x3b9a, lsl #16
   19e38:	str	x0, [sp, #104]
   19e3c:	cmp	w9, #0x0
   19e40:	ccmp	w8, w23, #0x0, ne  // ne = any
   19e44:	b.hi	19fbc <ZSTD_compress@@Base+0xb770>  // b.pmore
   19e48:	ldr	x0, [sp, #120]
   19e4c:	cmp	x0, x26
   19e50:	b.cc	1a0f8 <ZSTD_compress@@Base+0xb8ac>  // b.lo, b.ul, b.last
   19e54:	add	x22, x25, #0x1
   19e58:	mov	x26, x0
   19e5c:	str	xzr, [sp, #104]
   19e60:	cmp	x26, #0x3
   19e64:	b.ls	1a100 <ZSTD_compress@@Base+0xb8b4>  // b.plast
   19e68:	ldr	x0, [sp, #176]
   19e6c:	ldr	x1, [sp, #176]
   19e70:	neg	x0, x0
   19e74:	str	x0, [sp, #192]
   19e78:	mov	x0, #0x4                   	// #4
   19e7c:	sub	x0, x0, x1
   19e80:	str	x0, [sp, #200]
   19e84:	ldr	x0, [sp, #104]
   19e88:	add	x25, x25, #0x1
   19e8c:	cbz	x0, 19efc <ZSTD_compress@@Base+0xb6b0>
   19e90:	ldr	x0, [sp, #192]
   19e94:	ldr	w2, [sp, #184]
   19e98:	ldr	w1, [x25, x0]
   19e9c:	cmp	w2, #0x0
   19ea0:	ldr	w0, [x25]
   19ea4:	ccmp	w1, w0, #0x0, ne  // ne = any
   19ea8:	b.ne	19efc <ZSTD_compress@@Base+0xb6b0>  // b.any
   19eac:	ldr	x0, [sp, #200]
   19eb0:	mov	x2, x20
   19eb4:	add	x1, x25, x0
   19eb8:	add	x0, x25, #0x4
   19ebc:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   19ec0:	add	x0, x0, #0x4
   19ec4:	ldr	w1, [sp, #104]
   19ec8:	add	w3, w0, w0, lsl #1
   19ecc:	add	w2, w1, #0x1
   19ed0:	add	w1, w26, w26, lsl #1
   19ed4:	clz	w2, w2
   19ed8:	add	w1, w1, #0x1
   19edc:	eor	w2, w2, #0x1f
   19ee0:	sub	w1, w1, w2
   19ee4:	cmp	w3, w1
   19ee8:	ccmp	x0, #0x3, #0x0, gt
   19eec:	b.ls	19efc <ZSTD_compress@@Base+0xb6b0>  // b.plast
   19ef0:	mov	x22, x25
   19ef4:	mov	x26, x0
   19ef8:	str	xzr, [sp, #104]
   19efc:	ldr	w2, [x28, #4]
   19f00:	mov	w7, #0x1                   	// #1
   19f04:	ldr	x0, [x18, #64]
   19f08:	str	x0, [sp, #160]
   19f0c:	lsl	w2, w7, w2
   19f10:	sub	w0, w2, #0x1
   19f14:	str	w0, [sp, #172]
   19f18:	ldr	x0, [x18, #8]
   19f1c:	str	x0, [sp, #120]
   19f20:	ldp	w23, w10, [x18, #28]
   19f24:	sub	x1, x25, x0
   19f28:	ldr	w0, [x28]
   19f2c:	ldr	w3, [x18, #200]
   19f30:	sub	w11, w1, w23
   19f34:	str	w1, [sp, #176]
   19f38:	cmp	w3, #0x5
   19f3c:	lsl	w0, w7, w0
   19f40:	b.eq	1a3bc <ZSTD_compress@@Base+0xbb70>  // b.none
   19f44:	sub	w3, w3, #0x6
   19f48:	cmp	w3, w7
   19f4c:	sub	w3, w1, w0
   19f50:	b.hi	1a180 <ZSTD_compress@@Base+0xb934>  // b.pmore
   19f54:	cmp	w0, w11
   19f58:	ldr	w11, [x28, #12]
   19f5c:	csel	w0, w3, w23, cc  // cc = lo, ul, last
   19f60:	cmp	w10, #0x0
   19f64:	csel	w23, w23, w0, ne  // ne = any
   19f68:	cmp	w2, w1
   19f6c:	sub	w24, w1, w2
   19f70:	mov	w3, #0x6                   	// #6
   19f74:	csel	w0, w24, wzr, cc  // cc = lo, ul, last
   19f78:	mov	x2, x25
   19f7c:	lsl	w24, w7, w11
   19f80:	mov	x1, x28
   19f84:	str	w0, [sp, #188]
   19f88:	mov	x0, x18
   19f8c:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   19f90:	mov	w10, w0
   19f94:	ldr	w0, [sp, #176]
   19f98:	mov	x7, #0xc9ff                	// #51711
   19f9c:	movk	x7, #0x3b9a, lsl #16
   19fa0:	mov	x12, #0x3                   	// #3
   19fa4:	add	w9, w0, #0x2
   19fa8:	cmp	w24, #0x0
   19fac:	ccmp	w10, w23, #0x0, ne  // ne = any
   19fb0:	b.hi	1a480 <ZSTD_compress@@Base+0xbc34>  // b.pmore
   19fb4:	mov	x8, x12
   19fb8:	b	1a1e0 <ZSTD_compress@@Base+0xb994>
   19fbc:	add	x1, x24, w8, uxtw
   19fc0:	ldrb	w0, [x25, x26]
   19fc4:	ldrb	w2, [x1, x26]
   19fc8:	cmp	w2, w0
   19fcc:	b.ne	1a004 <ZSTD_compress@@Base+0xb7b8>  // b.any
   19fd0:	mov	x2, x20
   19fd4:	mov	x0, x25
   19fd8:	str	w9, [sp, #192]
   19fdc:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   19fe0:	ldr	w9, [sp, #192]
   19fe4:	cmp	x26, x0
   19fe8:	b.cs	1a004 <ZSTD_compress@@Base+0xb7b8>  // b.hs, b.nlast
   19fec:	sub	w1, w22, w8
   19ff0:	str	x1, [sp, #104]
   19ff4:	add	x1, x25, x0
   19ff8:	mov	x26, x0
   19ffc:	cmp	x20, x1
   1a000:	b.eq	19e48 <ZSTD_compress@@Base+0xb5fc>  // b.none
   1a004:	ldr	w0, [sp, #188]
   1a008:	cmp	w8, w0
   1a00c:	b.ls	19e48 <ZSTD_compress@@Base+0xb5fc>  // b.plast
   1a010:	ldr	w0, [sp, #172]
   1a014:	sub	w9, w9, #0x1
   1a018:	and	w8, w8, w0
   1a01c:	ldr	x0, [sp, #160]
   1a020:	ldr	w8, [x0, x8, lsl #2]
   1a024:	b	19e3c <ZSTD_compress@@Base+0xb5f0>
   1a028:	sub	w8, w0, w2
   1a02c:	cmp	w2, w10
   1a030:	csel	w2, w8, w23, cc  // cc = lo, ul, last
   1a034:	cmp	w9, #0x0
   1a038:	ldr	w9, [x28, #12]
   1a03c:	csel	w23, w23, w2, ne  // ne = any
   1a040:	cmp	w1, w0
   1a044:	sub	w26, w0, w1
   1a048:	csel	w0, w26, wzr, cc  // cc = lo, ul, last
   1a04c:	mov	x2, x25
   1a050:	lsl	w9, w5, w9
   1a054:	mov	x1, x28
   1a058:	stp	w0, w9, [sp, #188]
   1a05c:	mov	x0, x18
   1a060:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1a064:	add	w22, w22, #0x2
   1a068:	ldr	w9, [sp, #192]
   1a06c:	mov	w8, w0
   1a070:	mov	x0, #0xc9ff                	// #51711
   1a074:	mov	x26, #0x3                   	// #3
   1a078:	movk	x0, #0x3b9a, lsl #16
   1a07c:	str	x0, [sp, #104]
   1a080:	cmp	w9, #0x0
   1a084:	ccmp	w8, w23, #0x0, ne  // ne = any
   1a088:	b.ls	19e48 <ZSTD_compress@@Base+0xb5fc>  // b.plast
   1a08c:	add	x1, x24, w8, uxtw
   1a090:	ldrb	w0, [x25, x26]
   1a094:	ldrb	w2, [x1, x26]
   1a098:	cmp	w2, w0
   1a09c:	b.ne	1a0d4 <ZSTD_compress@@Base+0xb888>  // b.any
   1a0a0:	mov	x2, x20
   1a0a4:	mov	x0, x25
   1a0a8:	str	w9, [sp, #192]
   1a0ac:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1a0b0:	ldr	w9, [sp, #192]
   1a0b4:	cmp	x26, x0
   1a0b8:	b.cs	1a0d4 <ZSTD_compress@@Base+0xb888>  // b.hs, b.nlast
   1a0bc:	sub	w1, w22, w8
   1a0c0:	str	x1, [sp, #104]
   1a0c4:	add	x1, x25, x0
   1a0c8:	mov	x26, x0
   1a0cc:	cmp	x20, x1
   1a0d0:	b.eq	19e48 <ZSTD_compress@@Base+0xb5fc>  // b.none
   1a0d4:	ldr	w0, [sp, #188]
   1a0d8:	cmp	w8, w0
   1a0dc:	b.ls	19e48 <ZSTD_compress@@Base+0xb5fc>  // b.plast
   1a0e0:	ldr	w0, [sp, #172]
   1a0e4:	sub	w9, w9, #0x1
   1a0e8:	and	w8, w8, w0
   1a0ec:	ldr	x0, [sp, #160]
   1a0f0:	ldr	w8, [x0, x8, lsl #2]
   1a0f4:	b	1a080 <ZSTD_compress@@Base+0xb834>
   1a0f8:	mov	x22, x25
   1a0fc:	b	19e60 <ZSTD_compress@@Base+0xb614>
   1a100:	sub	x0, x25, x19
   1a104:	asr	x0, x0, #8
   1a108:	add	x0, x0, #0x1
   1a10c:	add	x25, x25, x0
   1a110:	ldr	x0, [sp, #144]
   1a114:	cmp	x0, x25
   1a118:	b.hi	19c64 <ZSTD_compress@@Base+0xb418>  // b.pmore
   1a11c:	ldr	w0, [sp, #168]
   1a120:	cmp	w27, #0x0
   1a124:	ldp	x21, x22, [sp, #32]
   1a128:	csel	w27, w27, w0, ne  // ne = any
   1a12c:	ldr	x0, [sp, #128]
   1a130:	ldp	x23, x24, [sp, #48]
   1a134:	ldp	x25, x26, [sp, #64]
   1a138:	str	w27, [x0]
   1a13c:	ldr	w0, [sp, #116]
   1a140:	ldr	w1, [sp, #116]
   1a144:	cmp	w0, #0x0
   1a148:	ldr	w0, [sp, #168]
   1a14c:	ldp	x27, x28, [sp, #80]
   1a150:	csel	w0, w0, w1, eq  // eq = none
   1a154:	str	w0, [sp, #168]
   1a158:	ldr	x0, [sp, #128]
   1a15c:	ldr	w1, [sp, #168]
   1a160:	str	w1, [x0, #4]
   1a164:	sub	x0, x20, x19
   1a168:	ldp	x19, x20, [sp, #16]
   1a16c:	ldp	x29, x30, [sp], #208
   1a170:	ret
   1a174:	mov	x26, x8
   1a178:	str	x7, [sp, #104]
   1a17c:	b	19e84 <ZSTD_compress@@Base+0xb638>
   1a180:	cmp	w0, w11
   1a184:	ldr	w11, [x28, #12]
   1a188:	csel	w0, w3, w23, cc  // cc = lo, ul, last
   1a18c:	cmp	w10, #0x0
   1a190:	csel	w23, w23, w0, ne  // ne = any
   1a194:	cmp	w2, w1
   1a198:	sub	w24, w1, w2
   1a19c:	mov	w3, #0x4                   	// #4
   1a1a0:	csel	w0, w24, wzr, cc  // cc = lo, ul, last
   1a1a4:	mov	x2, x25
   1a1a8:	lsl	w24, w7, w11
   1a1ac:	mov	x1, x28
   1a1b0:	str	w0, [sp, #188]
   1a1b4:	mov	x0, x18
   1a1b8:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1a1bc:	mov	w10, w0
   1a1c0:	ldr	w0, [sp, #176]
   1a1c4:	mov	x7, #0xc9ff                	// #51711
   1a1c8:	movk	x7, #0x3b9a, lsl #16
   1a1cc:	mov	x8, #0x3                   	// #3
   1a1d0:	add	w9, w0, #0x2
   1a1d4:	cmp	w24, #0x0
   1a1d8:	ccmp	w10, w23, #0x0, ne  // ne = any
   1a1dc:	b.hi	1a358 <ZSTD_compress@@Base+0xbb0c>  // b.pmore
   1a1e0:	ldr	w1, [sp, #104]
   1a1e4:	add	w0, w7, #0x1
   1a1e8:	clz	w0, w0
   1a1ec:	eor	w0, w0, #0x1f
   1a1f0:	add	w2, w1, #0x1
   1a1f4:	lsl	w1, w8, #2
   1a1f8:	clz	w2, w2
   1a1fc:	sub	w1, w1, w0
   1a200:	add	w0, w26, #0x1
   1a204:	eor	w2, w2, #0x1f
   1a208:	lsl	w0, w0, #2
   1a20c:	sub	w0, w0, w2
   1a210:	cmp	w1, w0
   1a214:	ccmp	x8, #0x3, #0x0, gt
   1a218:	b.ls	1a4e8 <ZSTD_compress@@Base+0xbc9c>  // b.plast
   1a21c:	ldr	x0, [sp, #144]
   1a220:	mov	x22, x25
   1a224:	cmp	x0, x25
   1a228:	b.hi	1a174 <ZSTD_compress@@Base+0xb928>  // b.pmore
   1a22c:	cbnz	x7, 1a52c <ZSTD_compress@@Base+0xbce0>
   1a230:	ldr	x1, [sp, #136]
   1a234:	sub	x9, x22, x19
   1a238:	mov	w5, w7
   1a23c:	sub	x10, x8, #0x3
   1a240:	cmp	x22, x1
   1a244:	ldr	x0, [x21, #24]
   1a248:	b.hi	1a544 <ZSTD_compress@@Base+0xbcf8>  // b.pmore
   1a24c:	ldp	x2, x3, [x19]
   1a250:	stp	x2, x3, [x0]
   1a254:	cmp	x9, #0x10
   1a258:	b.ls	1a2a4 <ZSTD_compress@@Base+0xba58>  // b.plast
   1a25c:	ldr	x0, [x21, #24]
   1a260:	ldp	x2, x3, [x19, #16]
   1a264:	add	x1, x0, x9
   1a268:	stp	x2, x3, [x0, #16]
   1a26c:	add	x0, x0, #0x30
   1a270:	ldp	x2, x3, [x19, #32]
   1a274:	stp	x2, x3, [x0, #-16]
   1a278:	cmp	x1, x0
   1a27c:	b.ls	1a2a4 <ZSTD_compress@@Base+0xba58>  // b.plast
   1a280:	add	x19, x19, #0x30
   1a284:	ldp	x2, x3, [x19]
   1a288:	stp	x2, x3, [x0]
   1a28c:	add	x0, x0, #0x20
   1a290:	ldp	x2, x3, [x19, #16]
   1a294:	stp	x2, x3, [x0, #-16]
   1a298:	add	x19, x19, #0x20
   1a29c:	cmp	x1, x0
   1a2a0:	b.hi	1a284 <ZSTD_compress@@Base+0xba38>  // b.pmore
   1a2a4:	ldr	x0, [x21, #24]
   1a2a8:	mov	x1, #0xffff                	// #65535
   1a2ac:	cmp	x9, x1
   1a2b0:	add	x0, x0, x9
   1a2b4:	str	x0, [x21, #24]
   1a2b8:	ldr	x0, [x21, #8]
   1a2bc:	b.ls	1a2d8 <ZSTD_compress@@Base+0xba8c>  // b.plast
   1a2c0:	mov	w1, #0x1                   	// #1
   1a2c4:	str	w1, [x21, #72]
   1a2c8:	ldr	x1, [x21]
   1a2cc:	sub	x1, x0, x1
   1a2d0:	asr	x1, x1, #3
   1a2d4:	str	w1, [x21, #76]
   1a2d8:	add	w7, w5, #0x1
   1a2dc:	str	w7, [x0]
   1a2e0:	strh	w9, [x0, #4]
   1a2e4:	mov	x1, #0xffff                	// #65535
   1a2e8:	cmp	x10, x1
   1a2ec:	b.ls	1a308 <ZSTD_compress@@Base+0xbabc>  // b.plast
   1a2f0:	mov	w1, #0x2                   	// #2
   1a2f4:	str	w1, [x21, #72]
   1a2f8:	ldr	x1, [x21]
   1a2fc:	sub	x1, x0, x1
   1a300:	asr	x1, x1, #3
   1a304:	str	w1, [x21, #76]
   1a308:	strh	w10, [x0, #6]
   1a30c:	add	x25, x22, x8
   1a310:	add	x0, x0, #0x8
   1a314:	mov	w8, #0x1                   	// #1
   1a318:	mov	x9, #0xffff                	// #65535
   1a31c:	mov	w10, #0x2                   	// #2
   1a320:	str	x0, [x21, #8]
   1a324:	ldr	w0, [sp, #116]
   1a328:	cmp	w0, #0x0
   1a32c:	ldr	x0, [sp, #144]
   1a330:	ccmp	x0, x25, #0x0, ne  // ne = any
   1a334:	b.cc	1a350 <ZSTD_compress@@Base+0xbb04>  // b.lo, b.ul, b.last
   1a338:	ldr	w1, [sp, #116]
   1a33c:	sub	x0, x25, w1, uxtw
   1a340:	ldr	w2, [x0]
   1a344:	ldr	w0, [x25]
   1a348:	cmp	w2, w0
   1a34c:	b.eq	1a558 <ZSTD_compress@@Base+0xbd0c>  // b.none
   1a350:	mov	x19, x25
   1a354:	b	1a110 <ZSTD_compress@@Base+0xb8c4>
   1a358:	ldr	x0, [sp, #120]
   1a35c:	add	x1, x0, w10, uxtw
   1a360:	ldrb	w0, [x25, x8]
   1a364:	ldrb	w2, [x1, x8]
   1a368:	cmp	w2, w0
   1a36c:	b.ne	1a398 <ZSTD_compress@@Base+0xbb4c>  // b.any
   1a370:	mov	x2, x20
   1a374:	mov	x0, x25
   1a378:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1a37c:	cmp	x8, x0
   1a380:	b.cs	1a398 <ZSTD_compress@@Base+0xbb4c>  // b.hs, b.nlast
   1a384:	add	x1, x25, x0
   1a388:	sub	w7, w9, w10
   1a38c:	mov	x8, x0
   1a390:	cmp	x20, x1
   1a394:	b.eq	1a1e0 <ZSTD_compress@@Base+0xb994>  // b.none
   1a398:	ldr	w0, [sp, #188]
   1a39c:	cmp	w10, w0
   1a3a0:	b.ls	1a1e0 <ZSTD_compress@@Base+0xb994>  // b.plast
   1a3a4:	ldr	w0, [sp, #172]
   1a3a8:	sub	w24, w24, #0x1
   1a3ac:	and	w10, w10, w0
   1a3b0:	ldr	x0, [sp, #160]
   1a3b4:	ldr	w10, [x0, x10, lsl #2]
   1a3b8:	b	1a1d4 <ZSTD_compress@@Base+0xb988>
   1a3bc:	sub	w8, w1, w0
   1a3c0:	cmp	w0, w11
   1a3c4:	csel	w0, w8, w23, cc  // cc = lo, ul, last
   1a3c8:	ldr	w11, [x28, #12]
   1a3cc:	cmp	w10, #0x0
   1a3d0:	sub	w24, w1, w2
   1a3d4:	csel	w23, w23, w0, ne  // ne = any
   1a3d8:	cmp	w2, w1
   1a3dc:	csel	w0, w24, wzr, cc  // cc = lo, ul, last
   1a3e0:	mov	x2, x25
   1a3e4:	lsl	w24, w7, w11
   1a3e8:	mov	x1, x28
   1a3ec:	str	w0, [sp, #188]
   1a3f0:	mov	x0, x18
   1a3f4:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1a3f8:	mov	w10, w0
   1a3fc:	ldr	w0, [sp, #176]
   1a400:	mov	x7, #0xc9ff                	// #51711
   1a404:	movk	x7, #0x3b9a, lsl #16
   1a408:	mov	x8, #0x3                   	// #3
   1a40c:	add	w9, w0, #0x2
   1a410:	cmp	w24, #0x0
   1a414:	ccmp	w10, w23, #0x0, ne  // ne = any
   1a418:	b.ls	1a1e0 <ZSTD_compress@@Base+0xb994>  // b.plast
   1a41c:	ldr	x0, [sp, #120]
   1a420:	add	x1, x0, w10, uxtw
   1a424:	ldrb	w0, [x25, x8]
   1a428:	ldrb	w2, [x1, x8]
   1a42c:	cmp	w2, w0
   1a430:	b.ne	1a45c <ZSTD_compress@@Base+0xbc10>  // b.any
   1a434:	mov	x2, x20
   1a438:	mov	x0, x25
   1a43c:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1a440:	cmp	x8, x0
   1a444:	b.cs	1a45c <ZSTD_compress@@Base+0xbc10>  // b.hs, b.nlast
   1a448:	add	x1, x25, x0
   1a44c:	sub	w7, w9, w10
   1a450:	mov	x8, x0
   1a454:	cmp	x20, x1
   1a458:	b.eq	1a1e0 <ZSTD_compress@@Base+0xb994>  // b.none
   1a45c:	ldr	w0, [sp, #188]
   1a460:	cmp	w10, w0
   1a464:	b.ls	1a1e0 <ZSTD_compress@@Base+0xb994>  // b.plast
   1a468:	ldr	w0, [sp, #172]
   1a46c:	sub	w24, w24, #0x1
   1a470:	and	w10, w10, w0
   1a474:	ldr	x0, [sp, #160]
   1a478:	ldr	w10, [x0, x10, lsl #2]
   1a47c:	b	1a410 <ZSTD_compress@@Base+0xbbc4>
   1a480:	ldr	x0, [sp, #120]
   1a484:	add	x1, x0, w10, uxtw
   1a488:	ldrb	w0, [x25, x12]
   1a48c:	ldrb	w2, [x1, x12]
   1a490:	cmp	w2, w0
   1a494:	b.ne	1a4c4 <ZSTD_compress@@Base+0xbc78>  // b.any
   1a498:	mov	x2, x20
   1a49c:	mov	x0, x25
   1a4a0:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1a4a4:	mov	x8, x0
   1a4a8:	cmp	x12, x0
   1a4ac:	b.cs	1a4c4 <ZSTD_compress@@Base+0xbc78>  // b.hs, b.nlast
   1a4b0:	add	x0, x25, x0
   1a4b4:	sub	w7, w9, w10
   1a4b8:	cmp	x20, x0
   1a4bc:	b.eq	1a1e0 <ZSTD_compress@@Base+0xb994>  // b.none
   1a4c0:	mov	x12, x8
   1a4c4:	ldr	w0, [sp, #188]
   1a4c8:	cmp	w10, w0
   1a4cc:	b.ls	19fb4 <ZSTD_compress@@Base+0xb768>  // b.plast
   1a4d0:	ldr	w0, [sp, #172]
   1a4d4:	sub	w24, w24, #0x1
   1a4d8:	and	w10, w10, w0
   1a4dc:	ldr	x0, [sp, #160]
   1a4e0:	ldr	w10, [x0, x10, lsl #2]
   1a4e4:	b	19fa8 <ZSTD_compress@@Base+0xb75c>
   1a4e8:	mov	x8, x26
   1a4ec:	ldr	x7, [sp, #104]
   1a4f0:	b	1a22c <ZSTD_compress@@Base+0xb9e0>
   1a4f4:	sub	x22, x22, #0x1
   1a4f8:	ldr	x4, [sp, #152]
   1a4fc:	add	x3, x2, x22
   1a500:	sub	x8, x0, x22
   1a504:	cmp	x4, x3
   1a508:	ccmp	x19, x22, #0x2, cc  // cc = lo, ul, last
   1a50c:	b.cs	1a520 <ZSTD_compress@@Base+0xbcd4>  // b.hs, b.nlast
   1a510:	ldurb	w4, [x22, #-1]
   1a514:	ldrb	w3, [x22, x1]
   1a518:	cmp	w4, w3
   1a51c:	b.eq	1a4f4 <ZSTD_compress@@Base+0xbca8>  // b.none
   1a520:	str	w27, [sp, #116]
   1a524:	sub	w27, w7, #0x2
   1a528:	b	1a230 <ZSTD_compress@@Base+0xb9e4>
   1a52c:	mov	x2, #0x2                   	// #2
   1a530:	mov	x1, #0x1                   	// #1
   1a534:	add	x0, x22, x8
   1a538:	sub	x2, x2, x7
   1a53c:	sub	x1, x1, x7
   1a540:	b	1a4f8 <ZSTD_compress@@Base+0xbcac>
   1a544:	ldr	x3, [sp, #136]
   1a548:	mov	x2, x22
   1a54c:	mov	x1, x19
   1a550:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1a554:	b	1a2a4 <ZSTD_compress@@Base+0xba58>
   1a558:	mov	x0, #0x4                   	// #4
   1a55c:	sub	x1, x0, x1
   1a560:	add	x1, x25, x1
   1a564:	mov	x2, x20
   1a568:	add	x0, x25, x0
   1a56c:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1a570:	ldr	x1, [sp, #136]
   1a574:	add	x11, x0, #0x4
   1a578:	add	x5, x0, #0x1
   1a57c:	cmp	x1, x25
   1a580:	ldr	x0, [x21, #24]
   1a584:	b.cc	1a5d4 <ZSTD_compress@@Base+0xbd88>  // b.lo, b.ul, b.last
   1a588:	ldp	x2, x3, [x25]
   1a58c:	stp	x2, x3, [x0]
   1a590:	cmp	x5, x9
   1a594:	ldr	x0, [x21, #8]
   1a598:	str	w8, [x0]
   1a59c:	strh	wzr, [x0, #4]
   1a5a0:	b.ls	1a5b4 <ZSTD_compress@@Base+0xbd68>  // b.plast
   1a5a4:	ldr	x1, [x21]
   1a5a8:	sub	x1, x0, x1
   1a5ac:	asr	x1, x1, #3
   1a5b0:	stp	w10, w1, [x21, #72]
   1a5b4:	add	x0, x0, #0x8
   1a5b8:	sturh	w5, [x0, #-2]
   1a5bc:	add	x25, x25, x11
   1a5c0:	str	x0, [x21, #8]
   1a5c4:	mov	w0, w27
   1a5c8:	ldr	w27, [sp, #116]
   1a5cc:	str	w0, [sp, #116]
   1a5d0:	b	1a324 <ZSTD_compress@@Base+0xbad8>
   1a5d4:	ldr	x3, [sp, #136]
   1a5d8:	mov	x2, x25
   1a5dc:	mov	x1, x25
   1a5e0:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1a5e4:	b	1a590 <ZSTD_compress@@Base+0xbd44>
   1a5e8:	stp	x29, x30, [sp, #-160]!
   1a5ec:	mov	x29, sp
   1a5f0:	stp	x19, x20, [sp, #16]
   1a5f4:	mov	x19, x0
   1a5f8:	add	x20, x3, x4
   1a5fc:	sub	x0, x20, #0x8
   1a600:	stp	x27, x28, [sp, #80]
   1a604:	mov	x27, x1
   1a608:	ldr	x1, [x19, #8]
   1a60c:	str	x0, [sp, #144]
   1a610:	ldr	w0, [x19, #24]
   1a614:	mov	x28, x3
   1a618:	stp	x21, x22, [sp, #32]
   1a61c:	add	x0, x1, x0
   1a620:	str	x0, [sp, #120]
   1a624:	ldp	w18, w21, [x2]
   1a628:	stp	x23, x24, [sp, #48]
   1a62c:	ldr	w0, [sp, #120]
   1a630:	stp	x25, x26, [sp, #64]
   1a634:	cmp	w3, w0
   1a638:	ldr	x0, [sp, #120]
   1a63c:	cinc	x23, x3, eq  // eq = none
   1a640:	str	x2, [sp, #112]
   1a644:	sub	x0, x23, x0
   1a648:	cmp	w21, w0
   1a64c:	b.ls	1a670 <ZSTD_compress@@Base+0xbe24>  // b.plast
   1a650:	mov	w24, w21
   1a654:	mov	w21, #0x0                   	// #0
   1a658:	cmp	w18, w0
   1a65c:	b.ls	1a668 <ZSTD_compress@@Base+0xbe1c>  // b.plast
   1a660:	mov	w24, w18
   1a664:	mov	w18, #0x0                   	// #0
   1a668:	sub	x26, x20, #0x20
   1a66c:	b	1a978 <ZSTD_compress@@Base+0xc12c>
   1a670:	mov	w24, #0x0                   	// #0
   1a674:	b	1a658 <ZSTD_compress@@Base+0xbe0c>
   1a678:	mov	x2, #0x1                   	// #1
   1a67c:	cmp	w18, #0x0
   1a680:	sub	x0, x2, w18, uxtw
   1a684:	mov	w1, w18
   1a688:	ldr	w3, [x23, x0]
   1a68c:	ldur	w0, [x23, #1]
   1a690:	ccmp	w3, w0, #0x0, ne  // ne = any
   1a694:	b.ne	1a7d4 <ZSTD_compress@@Base+0xbf88>  // b.any
   1a698:	add	x7, x23, x2
   1a69c:	sub	x1, x23, x1
   1a6a0:	add	x0, x23, #0x5
   1a6a4:	mov	x2, x20
   1a6a8:	add	x1, x1, #0x5
   1a6ac:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1a6b0:	add	x8, x0, #0x4
   1a6b4:	mov	x23, x7
   1a6b8:	mov	x9, #0x0                   	// #0
   1a6bc:	sub	x10, x23, x28
   1a6c0:	sub	x11, x8, #0x3
   1a6c4:	cmp	x23, x26
   1a6c8:	ldr	x0, [x27, #24]
   1a6cc:	b.hi	1ab54 <ZSTD_compress@@Base+0xc308>  // b.pmore
   1a6d0:	ldp	x2, x3, [x28]
   1a6d4:	stp	x2, x3, [x0]
   1a6d8:	cmp	x10, #0x10
   1a6dc:	b.ls	1a728 <ZSTD_compress@@Base+0xbedc>  // b.plast
   1a6e0:	ldr	x2, [x27, #24]
   1a6e4:	ldp	x0, x1, [x28, #16]
   1a6e8:	add	x3, x2, x10
   1a6ec:	stp	x0, x1, [x2, #16]
   1a6f0:	add	x2, x2, #0x30
   1a6f4:	ldp	x0, x1, [x28, #32]
   1a6f8:	stp	x0, x1, [x2, #-16]
   1a6fc:	cmp	x3, x2
   1a700:	b.ls	1a728 <ZSTD_compress@@Base+0xbedc>  // b.plast
   1a704:	add	x5, x28, #0x30
   1a708:	ldp	x0, x1, [x5]
   1a70c:	stp	x0, x1, [x2]
   1a710:	add	x2, x2, #0x20
   1a714:	ldp	x0, x1, [x5, #16]
   1a718:	stp	x0, x1, [x2, #-16]
   1a71c:	add	x5, x5, #0x20
   1a720:	cmp	x3, x2
   1a724:	b.hi	1a708 <ZSTD_compress@@Base+0xbebc>  // b.pmore
   1a728:	ldr	x0, [x27, #24]
   1a72c:	mov	x1, #0xffff                	// #65535
   1a730:	cmp	x10, x1
   1a734:	add	x0, x0, x10
   1a738:	str	x0, [x27, #24]
   1a73c:	ldr	x0, [x27, #8]
   1a740:	b.ls	1a75c <ZSTD_compress@@Base+0xbf10>  // b.plast
   1a744:	mov	w1, #0x1                   	// #1
   1a748:	str	w1, [x27, #72]
   1a74c:	ldr	x1, [x27]
   1a750:	sub	x1, x0, x1
   1a754:	asr	x1, x1, #3
   1a758:	str	w1, [x27, #76]
   1a75c:	add	w9, w9, #0x1
   1a760:	str	w9, [x0]
   1a764:	strh	w10, [x0, #4]
   1a768:	mov	x1, #0xffff                	// #65535
   1a76c:	cmp	x11, x1
   1a770:	b.ls	1a78c <ZSTD_compress@@Base+0xbf40>  // b.plast
   1a774:	mov	w1, #0x2                   	// #2
   1a778:	str	w1, [x27, #72]
   1a77c:	ldr	x1, [x27]
   1a780:	sub	x1, x0, x1
   1a784:	asr	x1, x1, #3
   1a788:	str	w1, [x27, #76]
   1a78c:	strh	w11, [x0, #6]
   1a790:	add	x23, x23, x8
   1a794:	add	x0, x0, #0x8
   1a798:	mov	x8, #0xffff                	// #65535
   1a79c:	mov	w9, #0x2                   	// #2
   1a7a0:	str	x0, [x27, #8]
   1a7a4:	ldr	x0, [sp, #144]
   1a7a8:	cmp	w21, #0x0
   1a7ac:	ccmp	x0, x23, #0x0, ne  // ne = any
   1a7b0:	b.cc	1a7cc <ZSTD_compress@@Base+0xbf80>  // b.lo, b.ul, b.last
   1a7b4:	sub	x0, x23, w21, uxtw
   1a7b8:	mov	w1, w21
   1a7bc:	ldr	w2, [x0]
   1a7c0:	ldr	w0, [x23]
   1a7c4:	cmp	w2, w0
   1a7c8:	b.eq	1ab68 <ZSTD_compress@@Base+0xc31c>  // b.none
   1a7cc:	mov	x28, x23
   1a7d0:	b	1a978 <ZSTD_compress@@Base+0xc12c>
   1a7d4:	ldr	w8, [x19, #188]
   1a7d8:	add	x1, x19, #0xb8
   1a7dc:	ldr	x0, [x19, #64]
   1a7e0:	str	x0, [sp, #136]
   1a7e4:	lsl	w8, w2, w8
   1a7e8:	sub	w0, w8, #0x1
   1a7ec:	str	w0, [sp, #132]
   1a7f0:	ldr	x0, [x19, #8]
   1a7f4:	str	x0, [sp, #104]
   1a7f8:	ldp	w25, w10, [x19, #28]
   1a7fc:	sub	x0, x23, x0
   1a800:	ldr	w7, [x19, #184]
   1a804:	mov	w22, w0
   1a808:	ldr	w3, [x19, #200]
   1a80c:	sub	w11, w0, w25
   1a810:	cmp	w3, #0x5
   1a814:	lsl	w2, w2, w7
   1a818:	b.eq	1aa28 <ZSTD_compress@@Base+0xc1dc>  // b.none
   1a81c:	sub	w3, w3, #0x6
   1a820:	cmp	w3, #0x1
   1a824:	sub	w3, w0, w2
   1a828:	b.hi	1a8fc <ZSTD_compress@@Base+0xc0b0>  // b.pmore
   1a82c:	cmp	w2, w11
   1a830:	ldr	w11, [x1, #12]
   1a834:	csel	w2, w3, w25, cc  // cc = lo, ul, last
   1a838:	cmp	w10, #0x0
   1a83c:	csel	w25, w25, w2, ne  // ne = any
   1a840:	sub	w2, w0, w8
   1a844:	cmp	w8, w0
   1a848:	mov	w3, #0x6                   	// #6
   1a84c:	csel	w0, w2, wzr, cc  // cc = lo, ul, last
   1a850:	str	w0, [sp, #152]
   1a854:	mov	w0, #0x1                   	// #1
   1a858:	mov	x2, x23
   1a85c:	lsl	w11, w0, w11
   1a860:	mov	x0, x19
   1a864:	str	w11, [sp, #156]
   1a868:	add	w22, w22, #0x2
   1a86c:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1a870:	mov	w10, w0
   1a874:	ldr	w11, [sp, #156]
   1a878:	mov	x9, #0xc9ff                	// #51711
   1a87c:	movk	x9, #0x3b9a, lsl #16
   1a880:	mov	x8, #0x3                   	// #3
   1a884:	cmp	w11, #0x0
   1a888:	ccmp	w10, w25, #0x0, ne  // ne = any
   1a88c:	b.ls	1a960 <ZSTD_compress@@Base+0xc114>  // b.plast
   1a890:	ldr	x0, [sp, #104]
   1a894:	add	x1, x0, w10, uxtw
   1a898:	ldrb	w0, [x23, x8]
   1a89c:	ldrb	w2, [x1, x8]
   1a8a0:	cmp	w2, w0
   1a8a4:	b.ne	1a8d8 <ZSTD_compress@@Base+0xc08c>  // b.any
   1a8a8:	mov	x2, x20
   1a8ac:	mov	x0, x23
   1a8b0:	str	w11, [sp, #156]
   1a8b4:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1a8b8:	ldr	w11, [sp, #156]
   1a8bc:	cmp	x8, x0
   1a8c0:	b.cs	1a8d8 <ZSTD_compress@@Base+0xc08c>  // b.hs, b.nlast
   1a8c4:	add	x1, x23, x0
   1a8c8:	sub	w9, w22, w10
   1a8cc:	mov	x8, x0
   1a8d0:	cmp	x20, x1
   1a8d4:	b.eq	1a960 <ZSTD_compress@@Base+0xc114>  // b.none
   1a8d8:	ldr	w0, [sp, #152]
   1a8dc:	cmp	w10, w0
   1a8e0:	b.ls	1a960 <ZSTD_compress@@Base+0xc114>  // b.plast
   1a8e4:	ldr	w0, [sp, #132]
   1a8e8:	sub	w11, w11, #0x1
   1a8ec:	and	w10, w10, w0
   1a8f0:	ldr	x0, [sp, #136]
   1a8f4:	ldr	w10, [x0, x10, lsl #2]
   1a8f8:	b	1a884 <ZSTD_compress@@Base+0xc038>
   1a8fc:	cmp	w2, w11
   1a900:	ldr	w11, [x1, #12]
   1a904:	csel	w2, w3, w25, cc  // cc = lo, ul, last
   1a908:	cmp	w10, #0x0
   1a90c:	csel	w25, w25, w2, ne  // ne = any
   1a910:	sub	w2, w0, w8
   1a914:	cmp	w8, w0
   1a918:	mov	w3, #0x4                   	// #4
   1a91c:	csel	w0, w2, wzr, cc  // cc = lo, ul, last
   1a920:	str	w0, [sp, #152]
   1a924:	mov	w0, #0x1                   	// #1
   1a928:	mov	x2, x23
   1a92c:	lsl	w11, w0, w11
   1a930:	mov	x0, x19
   1a934:	str	w11, [sp, #156]
   1a938:	add	w22, w22, #0x2
   1a93c:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1a940:	mov	w10, w0
   1a944:	ldr	w11, [sp, #156]
   1a948:	mov	x9, #0xc9ff                	// #51711
   1a94c:	movk	x9, #0x3b9a, lsl #16
   1a950:	mov	x8, #0x3                   	// #3
   1a954:	cmp	w11, #0x0
   1a958:	ccmp	w10, w25, #0x0, ne  // ne = any
   1a95c:	b.hi	1a9bc <ZSTD_compress@@Base+0xc170>  // b.pmore
   1a960:	cmp	x8, #0x3
   1a964:	b.hi	1aaf8 <ZSTD_compress@@Base+0xc2ac>  // b.pmore
   1a968:	sub	x0, x23, x28
   1a96c:	asr	x0, x0, #8
   1a970:	add	x0, x0, #0x1
   1a974:	add	x23, x23, x0
   1a978:	ldr	x0, [sp, #144]
   1a97c:	cmp	x0, x23
   1a980:	b.hi	1a678 <ZSTD_compress@@Base+0xbe2c>  // b.pmore
   1a984:	ldr	x0, [sp, #112]
   1a988:	cmp	w18, #0x0
   1a98c:	csel	w18, w18, w24, ne  // ne = any
   1a990:	cmp	w21, #0x0
   1a994:	csel	w24, w24, w21, eq  // eq = none
   1a998:	ldp	x21, x22, [sp, #32]
   1a99c:	ldp	x25, x26, [sp, #64]
   1a9a0:	stp	w18, w24, [x0]
   1a9a4:	sub	x0, x20, x28
   1a9a8:	ldp	x19, x20, [sp, #16]
   1a9ac:	ldp	x23, x24, [sp, #48]
   1a9b0:	ldp	x27, x28, [sp, #80]
   1a9b4:	ldp	x29, x30, [sp], #160
   1a9b8:	ret
   1a9bc:	ldr	x0, [sp, #104]
   1a9c0:	add	x1, x0, w10, uxtw
   1a9c4:	ldrb	w0, [x23, x8]
   1a9c8:	ldrb	w2, [x1, x8]
   1a9cc:	cmp	w2, w0
   1a9d0:	b.ne	1aa04 <ZSTD_compress@@Base+0xc1b8>  // b.any
   1a9d4:	mov	x2, x20
   1a9d8:	mov	x0, x23
   1a9dc:	str	w11, [sp, #156]
   1a9e0:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1a9e4:	ldr	w11, [sp, #156]
   1a9e8:	cmp	x8, x0
   1a9ec:	b.cs	1aa04 <ZSTD_compress@@Base+0xc1b8>  // b.hs, b.nlast
   1a9f0:	add	x1, x23, x0
   1a9f4:	sub	w9, w22, w10
   1a9f8:	mov	x8, x0
   1a9fc:	cmp	x20, x1
   1aa00:	b.eq	1a960 <ZSTD_compress@@Base+0xc114>  // b.none
   1aa04:	ldr	w0, [sp, #152]
   1aa08:	cmp	w10, w0
   1aa0c:	b.ls	1a960 <ZSTD_compress@@Base+0xc114>  // b.plast
   1aa10:	ldr	w0, [sp, #132]
   1aa14:	sub	w11, w11, #0x1
   1aa18:	and	w10, w10, w0
   1aa1c:	ldr	x0, [sp, #136]
   1aa20:	ldr	w10, [x0, x10, lsl #2]
   1aa24:	b	1a954 <ZSTD_compress@@Base+0xc108>
   1aa28:	sub	w9, w0, w2
   1aa2c:	cmp	w2, w11
   1aa30:	csel	w2, w9, w25, cc  // cc = lo, ul, last
   1aa34:	cmp	w10, #0x0
   1aa38:	ldr	w11, [x1, #12]
   1aa3c:	csel	w25, w25, w2, ne  // ne = any
   1aa40:	sub	w2, w0, w8
   1aa44:	cmp	w8, w0
   1aa48:	csel	w0, w2, wzr, cc  // cc = lo, ul, last
   1aa4c:	str	w0, [sp, #152]
   1aa50:	mov	w0, #0x1                   	// #1
   1aa54:	mov	x2, x23
   1aa58:	lsl	w11, w0, w11
   1aa5c:	mov	x0, x19
   1aa60:	str	w11, [sp, #156]
   1aa64:	add	w22, w22, #0x2
   1aa68:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1aa6c:	mov	w10, w0
   1aa70:	ldr	w11, [sp, #156]
   1aa74:	mov	x9, #0xc9ff                	// #51711
   1aa78:	movk	x9, #0x3b9a, lsl #16
   1aa7c:	mov	x8, #0x3                   	// #3
   1aa80:	cmp	w11, #0x0
   1aa84:	ccmp	w10, w25, #0x0, ne  // ne = any
   1aa88:	b.ls	1a960 <ZSTD_compress@@Base+0xc114>  // b.plast
   1aa8c:	ldr	x0, [sp, #104]
   1aa90:	add	x1, x0, w10, uxtw
   1aa94:	ldrb	w0, [x23, x8]
   1aa98:	ldrb	w2, [x1, x8]
   1aa9c:	cmp	w2, w0
   1aaa0:	b.ne	1aad4 <ZSTD_compress@@Base+0xc288>  // b.any
   1aaa4:	mov	x2, x20
   1aaa8:	mov	x0, x23
   1aaac:	str	w11, [sp, #156]
   1aab0:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1aab4:	ldr	w11, [sp, #156]
   1aab8:	cmp	x8, x0
   1aabc:	b.cs	1aad4 <ZSTD_compress@@Base+0xc288>  // b.hs, b.nlast
   1aac0:	add	x1, x23, x0
   1aac4:	sub	w9, w22, w10
   1aac8:	mov	x8, x0
   1aacc:	cmp	x20, x1
   1aad0:	b.eq	1a960 <ZSTD_compress@@Base+0xc114>  // b.none
   1aad4:	ldr	w0, [sp, #152]
   1aad8:	cmp	w10, w0
   1aadc:	b.ls	1a960 <ZSTD_compress@@Base+0xc114>  // b.plast
   1aae0:	ldr	w0, [sp, #132]
   1aae4:	sub	w11, w11, #0x1
   1aae8:	and	w10, w10, w0
   1aaec:	ldr	x0, [sp, #136]
   1aaf0:	ldr	w10, [x0, x10, lsl #2]
   1aaf4:	b	1aa80 <ZSTD_compress@@Base+0xc234>
   1aaf8:	cbz	x9, 1a6bc <ZSTD_compress@@Base+0xbe70>
   1aafc:	mov	x2, #0x2                   	// #2
   1ab00:	mov	x1, #0x1                   	// #1
   1ab04:	mov	x4, x23
   1ab08:	add	x0, x23, x8
   1ab0c:	sub	x2, x2, x9
   1ab10:	sub	x1, x1, x9
   1ab14:	b	1ab1c <ZSTD_compress@@Base+0xc2d0>
   1ab18:	sub	x4, x4, #0x1
   1ab1c:	ldr	x5, [sp, #120]
   1ab20:	add	x3, x2, x4
   1ab24:	sub	x8, x0, x4
   1ab28:	cmp	x5, x3
   1ab2c:	ccmp	x28, x4, #0x2, cc  // cc = lo, ul, last
   1ab30:	b.cs	1ab44 <ZSTD_compress@@Base+0xc2f8>  // b.hs, b.nlast
   1ab34:	ldurb	w7, [x4, #-1]
   1ab38:	ldrb	w3, [x4, x1]
   1ab3c:	cmp	w7, w3
   1ab40:	b.eq	1ab18 <ZSTD_compress@@Base+0xc2cc>  // b.none
   1ab44:	mov	w21, w18
   1ab48:	mov	x23, x4
   1ab4c:	sub	w18, w9, #0x2
   1ab50:	b	1a6bc <ZSTD_compress@@Base+0xbe70>
   1ab54:	mov	x3, x26
   1ab58:	mov	x2, x23
   1ab5c:	mov	x1, x28
   1ab60:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1ab64:	b	1a728 <ZSTD_compress@@Base+0xbedc>
   1ab68:	mov	x0, #0x4                   	// #4
   1ab6c:	sub	x1, x0, x1
   1ab70:	mov	x2, x20
   1ab74:	add	x1, x23, x1
   1ab78:	add	x0, x23, x0
   1ab7c:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1ab80:	cmp	x26, x23
   1ab84:	add	x10, x0, #0x4
   1ab88:	add	x5, x0, #0x1
   1ab8c:	ldr	x0, [x27, #24]
   1ab90:	b.cc	1abe4 <ZSTD_compress@@Base+0xc398>  // b.lo, b.ul, b.last
   1ab94:	ldp	x2, x3, [x23]
   1ab98:	stp	x2, x3, [x0]
   1ab9c:	mov	w1, #0x1                   	// #1
   1aba0:	ldr	x0, [x27, #8]
   1aba4:	cmp	x5, x8
   1aba8:	str	w1, [x0]
   1abac:	strh	wzr, [x0, #4]
   1abb0:	b.ls	1abc4 <ZSTD_compress@@Base+0xc378>  // b.plast
   1abb4:	ldr	x1, [x27]
   1abb8:	sub	x1, x0, x1
   1abbc:	asr	x1, x1, #3
   1abc0:	stp	w9, w1, [x27, #72]
   1abc4:	add	x0, x0, #0x8
   1abc8:	sturh	w5, [x0, #-2]
   1abcc:	str	x0, [x27, #8]
   1abd0:	mov	w0, w18
   1abd4:	add	x23, x23, x10
   1abd8:	mov	w18, w21
   1abdc:	mov	w21, w0
   1abe0:	b	1a7a4 <ZSTD_compress@@Base+0xbf58>
   1abe4:	mov	x3, x26
   1abe8:	mov	x2, x23
   1abec:	mov	x1, x23
   1abf0:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1abf4:	b	1ab9c <ZSTD_compress@@Base+0xc350>
   1abf8:	stp	x29, x30, [sp, #-224]!
   1abfc:	mov	x29, sp
   1ac00:	stp	x21, x22, [sp, #32]
   1ac04:	mov	x22, x0
   1ac08:	ldr	w21, [x2]
   1ac0c:	stp	x19, x20, [sp, #16]
   1ac10:	ldr	w19, [x22, #24]
   1ac14:	stp	x27, x28, [sp, #80]
   1ac18:	add	x27, x3, x4
   1ac1c:	sub	x0, x27, #0x8
   1ac20:	stp	x0, x2, [sp, #112]
   1ac24:	sub	w0, w19, #0x1
   1ac28:	mov	x28, x3
   1ac2c:	str	w0, [sp, #140]
   1ac30:	ldr	w0, [x2, #4]
   1ac34:	str	w0, [sp, #136]
   1ac38:	ldr	x0, [x22, #176]
   1ac3c:	stp	x23, x24, [sp, #48]
   1ac40:	mov	x23, x1
   1ac44:	ldr	x20, [x22, #8]
   1ac48:	stp	x25, x26, [sp, #64]
   1ac4c:	ldr	x1, [x0, #8]
   1ac50:	str	x1, [sp, #96]
   1ac54:	ldr	w1, [x0, #24]
   1ac58:	add	x25, x20, w19, uxtw
   1ac5c:	ldr	x2, [sp, #96]
   1ac60:	ldr	x0, [x0]
   1ac64:	str	x0, [sp, #104]
   1ac68:	add	x1, x2, x1
   1ac6c:	str	x1, [sp, #152]
   1ac70:	sub	x1, x0, x2
   1ac74:	sub	x0, x3, x25
   1ac78:	ldr	x2, [sp, #104]
   1ac7c:	str	w1, [sp, #168]
   1ac80:	add	x0, x2, x0
   1ac84:	ldr	w2, [sp, #152]
   1ac88:	cmp	w0, w2
   1ac8c:	add	x0, sp, #0xd8
   1ac90:	cinc	x26, x3, eq  // eq = none
   1ac94:	str	x0, [sp, #144]
   1ac98:	sub	x0, x27, #0x20
   1ac9c:	str	x0, [sp, #128]
   1aca0:	sub	w0, w19, w1
   1aca4:	str	x0, [sp, #176]
   1aca8:	ldr	x0, [sp, #112]
   1acac:	cmp	x0, x26
   1acb0:	b.hi	1ace0 <ZSTD_compress@@Base+0xc494>  // b.pmore
   1acb4:	ldr	x0, [sp, #120]
   1acb8:	ldr	w1, [sp, #136]
   1acbc:	ldp	x19, x20, [sp, #16]
   1acc0:	ldp	x23, x24, [sp, #48]
   1acc4:	ldp	x25, x26, [sp, #64]
   1acc8:	stp	w21, w1, [x0]
   1accc:	sub	x0, x27, x28
   1acd0:	ldp	x21, x22, [sp, #32]
   1acd4:	ldp	x27, x28, [sp, #80]
   1acd8:	ldp	x29, x30, [sp], #224
   1acdc:	ret
   1ace0:	ldr	w1, [sp, #168]
   1ace4:	sub	x0, x26, x20
   1ace8:	sub	w0, w0, w21
   1acec:	ldr	x2, [sp, #96]
   1acf0:	add	w0, w0, #0x1
   1acf4:	sub	w1, w1, w19
   1acf8:	cmp	w19, w0
   1acfc:	add	w1, w1, w0
   1ad00:	add	x1, x2, x1
   1ad04:	add	x2, x20, w0, uxtw
   1ad08:	csel	x1, x2, x1, ls  // ls = plast
   1ad0c:	ldr	w2, [sp, #140]
   1ad10:	sub	w2, w2, w0
   1ad14:	cmp	w2, #0x2
   1ad18:	b.ls	1b04c <ZSTD_compress@@Base+0xc800>  // b.plast
   1ad1c:	ldr	w2, [x1]
   1ad20:	ldur	w3, [x26, #1]
   1ad24:	cmp	w3, w2
   1ad28:	b.ne	1b04c <ZSTD_compress@@Base+0xc800>  // b.any
   1ad2c:	cmp	w19, w0
   1ad30:	mov	x4, x25
   1ad34:	ldr	x0, [sp, #104]
   1ad38:	mov	x2, x27
   1ad3c:	add	x1, x1, #0x4
   1ad40:	csel	x3, x0, x27, hi  // hi = pmore
   1ad44:	add	x0, x26, #0x5
   1ad48:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1ad4c:	add	x4, x0, #0x4
   1ad50:	ldr	x3, [sp, #144]
   1ad54:	mov	x0, #0xc9ff                	// #51711
   1ad58:	movk	x0, #0x3b9a, lsl #16
   1ad5c:	mov	x2, x27
   1ad60:	mov	x1, x26
   1ad64:	str	x4, [sp, #160]
   1ad68:	str	x0, [sp, #216]
   1ad6c:	mov	x0, x22
   1ad70:	bl	181d4 <ZSTD_compress@@Base+0x9988>
   1ad74:	mov	x24, x0
   1ad78:	ldr	x4, [sp, #160]
   1ad7c:	cmp	x0, x4
   1ad80:	b.hi	1b054 <ZSTD_compress@@Base+0xc808>  // b.pmore
   1ad84:	add	x7, x26, #0x1
   1ad88:	mov	x24, x4
   1ad8c:	mov	x11, #0x0                   	// #0
   1ad90:	cmp	x24, #0x3
   1ad94:	b.ls	1b060 <ZSTD_compress@@Base+0xc814>  // b.plast
   1ad98:	ldr	w0, [sp, #168]
   1ad9c:	sub	w0, w0, w19
   1ada0:	str	w0, [sp, #172]
   1ada4:	ldr	w0, [sp, #140]
   1ada8:	add	w0, w21, w0
   1adac:	str	w0, [sp, #160]
   1adb0:	add	x12, x26, #0x1
   1adb4:	ldr	w1, [sp, #172]
   1adb8:	sub	x2, x12, x20
   1adbc:	ldr	x3, [sp, #96]
   1adc0:	sub	w0, w2, w21
   1adc4:	add	w1, w1, w0
   1adc8:	cmp	w19, w0
   1adcc:	add	x3, x3, x1
   1add0:	add	x1, x20, w0, uxtw
   1add4:	csel	x1, x1, x3, ls  // ls = plast
   1add8:	ldr	w3, [sp, #160]
   1addc:	sub	w2, w3, w2
   1ade0:	cmp	w2, #0x2
   1ade4:	b.ls	1ae60 <ZSTD_compress@@Base+0xc614>  // b.plast
   1ade8:	ldr	w2, [x1]
   1adec:	ldur	w3, [x26, #1]
   1adf0:	cmp	w3, w2
   1adf4:	b.ne	1ae60 <ZSTD_compress@@Base+0xc614>  // b.any
   1adf8:	cmp	w19, w0
   1adfc:	mov	x2, x27
   1ae00:	ldr	x0, [sp, #104]
   1ae04:	add	x1, x1, #0x4
   1ae08:	mov	x4, x25
   1ae0c:	stp	x12, x11, [sp, #184]
   1ae10:	csel	x3, x0, x27, hi  // hi = pmore
   1ae14:	add	x0, x26, #0x5
   1ae18:	str	x7, [sp, #200]
   1ae1c:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1ae20:	add	x0, x0, #0x4
   1ae24:	ldp	x12, x11, [sp, #184]
   1ae28:	add	w1, w24, w24, lsl #1
   1ae2c:	add	w1, w1, #0x1
   1ae30:	add	w3, w0, w0, lsl #1
   1ae34:	ldr	x7, [sp, #200]
   1ae38:	add	w2, w11, #0x1
   1ae3c:	clz	w2, w2
   1ae40:	eor	w2, w2, #0x1f
   1ae44:	sub	w1, w1, w2
   1ae48:	cmp	w3, w1
   1ae4c:	ccmp	x0, #0x3, #0x0, gt
   1ae50:	b.ls	1ae60 <ZSTD_compress@@Base+0xc614>  // b.plast
   1ae54:	mov	x7, x12
   1ae58:	mov	x24, x0
   1ae5c:	mov	x11, #0x0                   	// #0
   1ae60:	ldr	x3, [sp, #144]
   1ae64:	mov	x0, #0xc9ff                	// #51711
   1ae68:	movk	x0, #0x3b9a, lsl #16
   1ae6c:	mov	x1, x12
   1ae70:	mov	x2, x27
   1ae74:	stp	x12, x11, [sp, #184]
   1ae78:	str	x7, [sp, #200]
   1ae7c:	str	x0, [sp, #216]
   1ae80:	mov	x0, x22
   1ae84:	bl	181d4 <ZSTD_compress@@Base+0x9988>
   1ae88:	ldp	x12, x11, [sp, #184]
   1ae8c:	lsl	w13, w24, #2
   1ae90:	ldr	x3, [sp, #216]
   1ae94:	ldr	x7, [sp, #200]
   1ae98:	add	w1, w3, #0x1
   1ae9c:	add	w2, w11, #0x1
   1aea0:	clz	w1, w1
   1aea4:	clz	w2, w2
   1aea8:	eor	w1, w1, #0x1f
   1aeac:	eor	w2, w2, #0x1f
   1aeb0:	sub	w13, w13, w2
   1aeb4:	lsl	w2, w0, #2
   1aeb8:	sub	w1, w2, w1
   1aebc:	add	w2, w13, #0x4
   1aec0:	cmp	w1, w2
   1aec4:	ccmp	x0, #0x3, #0x0, gt
   1aec8:	b.ls	1b07c <ZSTD_compress@@Base+0xc830>  // b.plast
   1aecc:	mov	x11, x3
   1aed0:	mov	x24, x0
   1aed4:	mov	x7, x12
   1aed8:	ldr	x0, [sp, #112]
   1aedc:	cmp	x0, x12
   1aee0:	b.hi	1b074 <ZSTD_compress@@Base+0xc828>  // b.pmore
   1aee4:	mov	w5, w11
   1aee8:	cbz	x11, 1af48 <ZSTD_compress@@Base+0xc6fc>
   1aeec:	sub	x1, x7, x20
   1aef0:	sub	w1, w1, w11
   1aef4:	add	w0, w1, #0x2
   1aef8:	add	w1, w1, #0x2
   1aefc:	cmp	w19, w0
   1af00:	b.ls	1b198 <ZSTD_compress@@Base+0xc94c>  // b.plast
   1af04:	ldr	x0, [sp, #176]
   1af08:	ldr	x2, [sp, #152]
   1af0c:	sub	x1, x1, x0
   1af10:	ldr	x0, [sp, #96]
   1af14:	add	x1, x0, x1
   1af18:	add	x0, x7, x24
   1af1c:	cmp	x28, x7
   1af20:	sub	x9, x0, x7
   1af24:	ccmp	x1, x2, #0x0, cc  // cc = lo, ul, last
   1af28:	b.ls	1af3c <ZSTD_compress@@Base+0xc6f0>  // b.plast
   1af2c:	ldurb	w4, [x7, #-1]
   1af30:	ldurb	w3, [x1, #-1]
   1af34:	cmp	w4, w3
   1af38:	b.eq	1b1a4 <ZSTD_compress@@Base+0xc958>  // b.none
   1af3c:	mov	x24, x9
   1af40:	str	w21, [sp, #136]
   1af44:	sub	w21, w5, #0x2
   1af48:	ldr	x1, [sp, #128]
   1af4c:	sub	x11, x7, x28
   1af50:	sub	x12, x24, #0x3
   1af54:	cmp	x7, x1
   1af58:	ldr	x0, [x23, #24]
   1af5c:	b.hi	1b1b0 <ZSTD_compress@@Base+0xc964>  // b.pmore
   1af60:	ldp	x2, x3, [x28]
   1af64:	stp	x2, x3, [x0]
   1af68:	cmp	x11, #0x10
   1af6c:	b.ls	1afb8 <ZSTD_compress@@Base+0xc76c>  // b.plast
   1af70:	ldr	x2, [x23, #24]
   1af74:	ldp	x0, x1, [x28, #16]
   1af78:	add	x3, x2, x11
   1af7c:	stp	x0, x1, [x2, #16]
   1af80:	add	x2, x2, #0x30
   1af84:	ldp	x0, x1, [x28, #32]
   1af88:	stp	x0, x1, [x2, #-16]
   1af8c:	cmp	x3, x2
   1af90:	b.ls	1afb8 <ZSTD_compress@@Base+0xc76c>  // b.plast
   1af94:	add	x6, x28, #0x30
   1af98:	ldp	x0, x1, [x6]
   1af9c:	stp	x0, x1, [x2]
   1afa0:	add	x2, x2, #0x20
   1afa4:	ldp	x0, x1, [x6, #16]
   1afa8:	stp	x0, x1, [x2, #-16]
   1afac:	add	x6, x6, #0x20
   1afb0:	cmp	x3, x2
   1afb4:	b.hi	1af98 <ZSTD_compress@@Base+0xc74c>  // b.pmore
   1afb8:	ldr	x0, [x23, #24]
   1afbc:	mov	x1, #0xffff                	// #65535
   1afc0:	cmp	x11, x1
   1afc4:	add	x0, x0, x11
   1afc8:	str	x0, [x23, #24]
   1afcc:	ldr	x0, [x23, #8]
   1afd0:	b.ls	1afec <ZSTD_compress@@Base+0xc7a0>  // b.plast
   1afd4:	mov	w1, #0x1                   	// #1
   1afd8:	str	w1, [x23, #72]
   1afdc:	ldr	x1, [x23]
   1afe0:	sub	x1, x0, x1
   1afe4:	asr	x1, x1, #3
   1afe8:	str	w1, [x23, #76]
   1afec:	add	w5, w5, #0x1
   1aff0:	str	w5, [x0]
   1aff4:	strh	w11, [x0, #4]
   1aff8:	mov	x1, #0xffff                	// #65535
   1affc:	cmp	x12, x1
   1b000:	b.ls	1b01c <ZSTD_compress@@Base+0xc7d0>  // b.plast
   1b004:	mov	w1, #0x2                   	// #2
   1b008:	str	w1, [x23, #72]
   1b00c:	ldr	x1, [x23]
   1b010:	sub	x1, x0, x1
   1b014:	asr	x1, x1, #3
   1b018:	str	w1, [x23, #76]
   1b01c:	add	x26, x7, x24
   1b020:	strh	w12, [x0, #6]
   1b024:	mov	w13, #0x1                   	// #1
   1b028:	add	x0, x0, #0x8
   1b02c:	mov	x14, #0xffff                	// #65535
   1b030:	mov	w15, #0x2                   	// #2
   1b034:	str	x0, [x23, #8]
   1b038:	ldr	x0, [sp, #112]
   1b03c:	cmp	x0, x26
   1b040:	b.cs	1b1cc <ZSTD_compress@@Base+0xc980>  // b.hs, b.nlast
   1b044:	mov	x28, x26
   1b048:	b	1aca8 <ZSTD_compress@@Base+0xc45c>
   1b04c:	mov	x4, #0x0                   	// #0
   1b050:	b	1ad50 <ZSTD_compress@@Base+0xc504>
   1b054:	mov	x7, x26
   1b058:	ldr	x11, [sp, #216]
   1b05c:	b	1ad90 <ZSTD_compress@@Base+0xc544>
   1b060:	sub	x0, x26, x28
   1b064:	asr	x0, x0, #8
   1b068:	add	x0, x0, #0x1
   1b06c:	add	x26, x26, x0
   1b070:	b	1aca8 <ZSTD_compress@@Base+0xc45c>
   1b074:	mov	x26, x7
   1b078:	b	1adb0 <ZSTD_compress@@Base+0xc564>
   1b07c:	ldr	x0, [sp, #112]
   1b080:	cmp	x0, x12
   1b084:	b.ls	1aee4 <ZSTD_compress@@Base+0xc698>  // b.plast
   1b088:	add	x12, x26, #0x2
   1b08c:	ldr	w1, [sp, #172]
   1b090:	sub	x2, x12, x20
   1b094:	ldr	x3, [sp, #96]
   1b098:	sub	w0, w2, w21
   1b09c:	add	w1, w1, w0
   1b0a0:	cmp	w19, w0
   1b0a4:	add	x3, x3, x1
   1b0a8:	add	x1, x20, w0, uxtw
   1b0ac:	csel	x1, x1, x3, ls  // ls = plast
   1b0b0:	ldr	w3, [sp, #160]
   1b0b4:	sub	w2, w3, w2
   1b0b8:	cmp	w2, #0x2
   1b0bc:	b.ls	1b124 <ZSTD_compress@@Base+0xc8d8>  // b.plast
   1b0c0:	ldr	w2, [x1]
   1b0c4:	ldur	w3, [x26, #2]
   1b0c8:	cmp	w3, w2
   1b0cc:	b.ne	1b124 <ZSTD_compress@@Base+0xc8d8>  // b.any
   1b0d0:	cmp	w19, w0
   1b0d4:	add	x1, x1, #0x4
   1b0d8:	ldr	x0, [sp, #104]
   1b0dc:	mov	x4, x25
   1b0e0:	mov	x2, x27
   1b0e4:	stp	x11, x12, [sp, #184]
   1b0e8:	csel	x3, x0, x27, hi  // hi = pmore
   1b0ec:	add	x0, x26, #0x6
   1b0f0:	str	x7, [sp, #200]
   1b0f4:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1b0f8:	add	x0, x0, #0x4
   1b0fc:	add	w13, w13, #0x1
   1b100:	lsl	w1, w0, #2
   1b104:	cmp	w1, w13
   1b108:	ccmp	x0, #0x3, #0x0, gt
   1b10c:	ldp	x11, x12, [sp, #184]
   1b110:	ldr	x7, [sp, #200]
   1b114:	b.ls	1b124 <ZSTD_compress@@Base+0xc8d8>  // b.plast
   1b118:	mov	x7, x12
   1b11c:	mov	x24, x0
   1b120:	mov	x11, #0x0                   	// #0
   1b124:	ldr	x3, [sp, #144]
   1b128:	mov	x0, #0xc9ff                	// #51711
   1b12c:	movk	x0, #0x3b9a, lsl #16
   1b130:	mov	x1, x12
   1b134:	mov	x2, x27
   1b138:	stp	x12, x11, [sp, #184]
   1b13c:	str	x7, [sp, #200]
   1b140:	str	x0, [sp, #216]
   1b144:	mov	x0, x22
   1b148:	bl	181d4 <ZSTD_compress@@Base+0x9988>
   1b14c:	lsl	w3, w0, #2
   1b150:	ldp	x12, x11, [sp, #184]
   1b154:	ldr	x4, [sp, #216]
   1b158:	ldr	x7, [sp, #200]
   1b15c:	add	w1, w4, #0x1
   1b160:	clz	w1, w1
   1b164:	add	w2, w11, #0x1
   1b168:	eor	w1, w1, #0x1f
   1b16c:	clz	w2, w2
   1b170:	sub	w3, w3, w1
   1b174:	lsl	w1, w24, #2
   1b178:	add	w1, w1, #0x7
   1b17c:	eor	w2, w2, #0x1f
   1b180:	sub	w1, w1, w2
   1b184:	cmp	w3, w1
   1b188:	ccmp	x0, #0x3, #0x0, gt
   1b18c:	b.ls	1aee4 <ZSTD_compress@@Base+0xc698>  // b.plast
   1b190:	mov	x11, x4
   1b194:	b	1aed0 <ZSTD_compress@@Base+0xc684>
   1b198:	add	x1, x20, x1
   1b19c:	mov	x2, x25
   1b1a0:	b	1af18 <ZSTD_compress@@Base+0xc6cc>
   1b1a4:	sub	x7, x7, #0x1
   1b1a8:	sub	x1, x1, #0x1
   1b1ac:	b	1af1c <ZSTD_compress@@Base+0xc6d0>
   1b1b0:	ldr	x3, [sp, #128]
   1b1b4:	mov	x2, x7
   1b1b8:	mov	x1, x28
   1b1bc:	str	x7, [sp, #160]
   1b1c0:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1b1c4:	ldr	x7, [sp, #160]
   1b1c8:	b	1afb8 <ZSTD_compress@@Base+0xc76c>
   1b1cc:	ldr	w0, [sp, #136]
   1b1d0:	sub	x2, x26, x20
   1b1d4:	ldr	x1, [sp, #176]
   1b1d8:	sub	w4, w2, w0
   1b1dc:	ldr	x3, [sp, #96]
   1b1e0:	sub	w0, w2, w0
   1b1e4:	sub	x1, x0, x1
   1b1e8:	cmp	w19, w4
   1b1ec:	add	x3, x3, x1
   1b1f0:	add	x1, x20, x0
   1b1f4:	csel	x1, x1, x3, ls  // ls = plast
   1b1f8:	ldp	w0, w3, [sp, #136]
   1b1fc:	add	w0, w0, w3
   1b200:	sub	w0, w0, w2
   1b204:	cmp	w0, #0x2
   1b208:	b.ls	1b044 <ZSTD_compress@@Base+0xc7f8>  // b.plast
   1b20c:	ldr	w0, [x1]
   1b210:	ldr	w2, [x26]
   1b214:	cmp	w2, w0
   1b218:	b.ne	1b044 <ZSTD_compress@@Base+0xc7f8>  // b.any
   1b21c:	cmp	w19, w4
   1b220:	add	x1, x1, #0x4
   1b224:	ldr	x0, [sp, #104]
   1b228:	mov	x4, x25
   1b22c:	mov	x2, x27
   1b230:	csel	x3, x0, x27, hi  // hi = pmore
   1b234:	add	x0, x26, #0x4
   1b238:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1b23c:	add	x11, x0, #0x4
   1b240:	ldr	x1, [sp, #128]
   1b244:	add	x9, x0, #0x1
   1b248:	ldr	x0, [x23, #24]
   1b24c:	cmp	x1, x26
   1b250:	b.cc	1b2a0 <ZSTD_compress@@Base+0xca54>  // b.lo, b.ul, b.last
   1b254:	ldp	x2, x3, [x26]
   1b258:	stp	x2, x3, [x0]
   1b25c:	cmp	x9, x14
   1b260:	ldr	x0, [x23, #8]
   1b264:	str	w13, [x0]
   1b268:	strh	wzr, [x0, #4]
   1b26c:	b.ls	1b280 <ZSTD_compress@@Base+0xca34>  // b.plast
   1b270:	ldr	x1, [x23]
   1b274:	sub	x1, x0, x1
   1b278:	asr	x1, x1, #3
   1b27c:	stp	w15, w1, [x23, #72]
   1b280:	add	x0, x0, #0x8
   1b284:	sturh	w9, [x0, #-2]
   1b288:	add	x26, x26, x11
   1b28c:	str	x0, [x23, #8]
   1b290:	mov	w0, w21
   1b294:	ldr	w21, [sp, #136]
   1b298:	str	w0, [sp, #136]
   1b29c:	b	1b038 <ZSTD_compress@@Base+0xc7ec>
   1b2a0:	ldr	x3, [sp, #128]
   1b2a4:	mov	x2, x26
   1b2a8:	mov	x1, x26
   1b2ac:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1b2b0:	b	1b25c <ZSTD_compress@@Base+0xca10>
   1b2b4:	stp	x29, x30, [sp, #-224]!
   1b2b8:	mov	x29, sp
   1b2bc:	stp	x21, x22, [sp, #32]
   1b2c0:	mov	x22, x0
   1b2c4:	ldr	w21, [x2]
   1b2c8:	stp	x19, x20, [sp, #16]
   1b2cc:	ldr	w19, [x22, #24]
   1b2d0:	stp	x27, x28, [sp, #80]
   1b2d4:	add	x27, x3, x4
   1b2d8:	sub	x0, x27, #0x8
   1b2dc:	stp	x0, x2, [sp, #112]
   1b2e0:	sub	w0, w19, #0x1
   1b2e4:	mov	x28, x3
   1b2e8:	str	w0, [sp, #140]
   1b2ec:	ldr	w0, [x2, #4]
   1b2f0:	str	w0, [sp, #136]
   1b2f4:	ldr	x0, [x22, #176]
   1b2f8:	stp	x23, x24, [sp, #48]
   1b2fc:	mov	x23, x1
   1b300:	ldr	x20, [x22, #8]
   1b304:	stp	x25, x26, [sp, #64]
   1b308:	ldr	x1, [x0, #8]
   1b30c:	str	x1, [sp, #96]
   1b310:	ldr	w1, [x0, #24]
   1b314:	add	x25, x20, w19, uxtw
   1b318:	ldr	x2, [sp, #96]
   1b31c:	ldr	x0, [x0]
   1b320:	str	x0, [sp, #104]
   1b324:	add	x1, x2, x1
   1b328:	str	x1, [sp, #152]
   1b32c:	sub	x1, x0, x2
   1b330:	sub	x0, x3, x25
   1b334:	ldr	x2, [sp, #104]
   1b338:	str	w1, [sp, #168]
   1b33c:	add	x0, x2, x0
   1b340:	ldr	w2, [sp, #152]
   1b344:	cmp	w0, w2
   1b348:	add	x0, sp, #0xd8
   1b34c:	cinc	x26, x3, eq  // eq = none
   1b350:	str	x0, [sp, #144]
   1b354:	sub	x0, x27, #0x20
   1b358:	str	x0, [sp, #128]
   1b35c:	sub	w0, w19, w1
   1b360:	str	x0, [sp, #176]
   1b364:	ldr	x0, [sp, #112]
   1b368:	cmp	x0, x26
   1b36c:	b.hi	1b39c <ZSTD_compress@@Base+0xcb50>  // b.pmore
   1b370:	ldr	x0, [sp, #120]
   1b374:	ldr	w1, [sp, #136]
   1b378:	ldp	x19, x20, [sp, #16]
   1b37c:	ldp	x23, x24, [sp, #48]
   1b380:	ldp	x25, x26, [sp, #64]
   1b384:	stp	w21, w1, [x0]
   1b388:	sub	x0, x27, x28
   1b38c:	ldp	x21, x22, [sp, #32]
   1b390:	ldp	x27, x28, [sp, #80]
   1b394:	ldp	x29, x30, [sp], #224
   1b398:	ret
   1b39c:	ldr	w1, [sp, #168]
   1b3a0:	sub	x0, x26, x20
   1b3a4:	sub	w0, w0, w21
   1b3a8:	ldr	x2, [sp, #96]
   1b3ac:	add	w0, w0, #0x1
   1b3b0:	sub	w1, w1, w19
   1b3b4:	cmp	w19, w0
   1b3b8:	add	w1, w1, w0
   1b3bc:	add	x1, x2, x1
   1b3c0:	add	x2, x20, w0, uxtw
   1b3c4:	csel	x1, x2, x1, ls  // ls = plast
   1b3c8:	ldr	w2, [sp, #140]
   1b3cc:	sub	w2, w2, w0
   1b3d0:	cmp	w2, #0x2
   1b3d4:	b.ls	1b708 <ZSTD_compress@@Base+0xcebc>  // b.plast
   1b3d8:	ldr	w2, [x1]
   1b3dc:	ldur	w3, [x26, #1]
   1b3e0:	cmp	w3, w2
   1b3e4:	b.ne	1b708 <ZSTD_compress@@Base+0xcebc>  // b.any
   1b3e8:	cmp	w19, w0
   1b3ec:	mov	x4, x25
   1b3f0:	ldr	x0, [sp, #104]
   1b3f4:	mov	x2, x27
   1b3f8:	add	x1, x1, #0x4
   1b3fc:	csel	x3, x0, x27, hi  // hi = pmore
   1b400:	add	x0, x26, #0x5
   1b404:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1b408:	add	x4, x0, #0x4
   1b40c:	ldr	x3, [sp, #144]
   1b410:	mov	x0, #0xc9ff                	// #51711
   1b414:	movk	x0, #0x3b9a, lsl #16
   1b418:	mov	x2, x27
   1b41c:	mov	x1, x26
   1b420:	str	x4, [sp, #160]
   1b424:	str	x0, [sp, #216]
   1b428:	mov	x0, x22
   1b42c:	bl	18364 <ZSTD_compress@@Base+0x9b18>
   1b430:	mov	x24, x0
   1b434:	ldr	x4, [sp, #160]
   1b438:	cmp	x0, x4
   1b43c:	b.hi	1b710 <ZSTD_compress@@Base+0xcec4>  // b.pmore
   1b440:	add	x7, x26, #0x1
   1b444:	mov	x24, x4
   1b448:	mov	x11, #0x0                   	// #0
   1b44c:	cmp	x24, #0x3
   1b450:	b.ls	1b71c <ZSTD_compress@@Base+0xced0>  // b.plast
   1b454:	ldr	w0, [sp, #168]
   1b458:	sub	w0, w0, w19
   1b45c:	str	w0, [sp, #172]
   1b460:	ldr	w0, [sp, #140]
   1b464:	add	w0, w21, w0
   1b468:	str	w0, [sp, #160]
   1b46c:	add	x12, x26, #0x1
   1b470:	ldr	w1, [sp, #172]
   1b474:	sub	x2, x12, x20
   1b478:	ldr	x3, [sp, #96]
   1b47c:	sub	w0, w2, w21
   1b480:	add	w1, w1, w0
   1b484:	cmp	w19, w0
   1b488:	add	x3, x3, x1
   1b48c:	add	x1, x20, w0, uxtw
   1b490:	csel	x1, x1, x3, ls  // ls = plast
   1b494:	ldr	w3, [sp, #160]
   1b498:	sub	w2, w3, w2
   1b49c:	cmp	w2, #0x2
   1b4a0:	b.ls	1b51c <ZSTD_compress@@Base+0xccd0>  // b.plast
   1b4a4:	ldr	w2, [x1]
   1b4a8:	ldur	w3, [x26, #1]
   1b4ac:	cmp	w3, w2
   1b4b0:	b.ne	1b51c <ZSTD_compress@@Base+0xccd0>  // b.any
   1b4b4:	cmp	w19, w0
   1b4b8:	mov	x2, x27
   1b4bc:	ldr	x0, [sp, #104]
   1b4c0:	add	x1, x1, #0x4
   1b4c4:	mov	x4, x25
   1b4c8:	stp	x12, x11, [sp, #184]
   1b4cc:	csel	x3, x0, x27, hi  // hi = pmore
   1b4d0:	add	x0, x26, #0x5
   1b4d4:	str	x7, [sp, #200]
   1b4d8:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1b4dc:	add	x0, x0, #0x4
   1b4e0:	ldp	x12, x11, [sp, #184]
   1b4e4:	add	w1, w24, w24, lsl #1
   1b4e8:	add	w1, w1, #0x1
   1b4ec:	add	w3, w0, w0, lsl #1
   1b4f0:	ldr	x7, [sp, #200]
   1b4f4:	add	w2, w11, #0x1
   1b4f8:	clz	w2, w2
   1b4fc:	eor	w2, w2, #0x1f
   1b500:	sub	w1, w1, w2
   1b504:	cmp	w3, w1
   1b508:	ccmp	x0, #0x3, #0x0, gt
   1b50c:	b.ls	1b51c <ZSTD_compress@@Base+0xccd0>  // b.plast
   1b510:	mov	x7, x12
   1b514:	mov	x24, x0
   1b518:	mov	x11, #0x0                   	// #0
   1b51c:	ldr	x3, [sp, #144]
   1b520:	mov	x0, #0xc9ff                	// #51711
   1b524:	movk	x0, #0x3b9a, lsl #16
   1b528:	mov	x1, x12
   1b52c:	mov	x2, x27
   1b530:	stp	x12, x11, [sp, #184]
   1b534:	str	x7, [sp, #200]
   1b538:	str	x0, [sp, #216]
   1b53c:	mov	x0, x22
   1b540:	bl	18364 <ZSTD_compress@@Base+0x9b18>
   1b544:	ldp	x12, x11, [sp, #184]
   1b548:	lsl	w13, w24, #2
   1b54c:	ldr	x3, [sp, #216]
   1b550:	ldr	x7, [sp, #200]
   1b554:	add	w1, w3, #0x1
   1b558:	add	w2, w11, #0x1
   1b55c:	clz	w1, w1
   1b560:	clz	w2, w2
   1b564:	eor	w1, w1, #0x1f
   1b568:	eor	w2, w2, #0x1f
   1b56c:	sub	w13, w13, w2
   1b570:	lsl	w2, w0, #2
   1b574:	sub	w1, w2, w1
   1b578:	add	w2, w13, #0x4
   1b57c:	cmp	w1, w2
   1b580:	ccmp	x0, #0x3, #0x0, gt
   1b584:	b.ls	1b738 <ZSTD_compress@@Base+0xceec>  // b.plast
   1b588:	mov	x11, x3
   1b58c:	mov	x24, x0
   1b590:	mov	x7, x12
   1b594:	ldr	x0, [sp, #112]
   1b598:	cmp	x0, x12
   1b59c:	b.hi	1b730 <ZSTD_compress@@Base+0xcee4>  // b.pmore
   1b5a0:	mov	w5, w11
   1b5a4:	cbz	x11, 1b604 <ZSTD_compress@@Base+0xcdb8>
   1b5a8:	sub	x1, x7, x20
   1b5ac:	sub	w1, w1, w11
   1b5b0:	add	w0, w1, #0x2
   1b5b4:	add	w1, w1, #0x2
   1b5b8:	cmp	w19, w0
   1b5bc:	b.ls	1b854 <ZSTD_compress@@Base+0xd008>  // b.plast
   1b5c0:	ldr	x0, [sp, #176]
   1b5c4:	ldr	x2, [sp, #152]
   1b5c8:	sub	x1, x1, x0
   1b5cc:	ldr	x0, [sp, #96]
   1b5d0:	add	x1, x0, x1
   1b5d4:	add	x0, x7, x24
   1b5d8:	cmp	x28, x7
   1b5dc:	sub	x9, x0, x7
   1b5e0:	ccmp	x1, x2, #0x0, cc  // cc = lo, ul, last
   1b5e4:	b.ls	1b5f8 <ZSTD_compress@@Base+0xcdac>  // b.plast
   1b5e8:	ldurb	w4, [x7, #-1]
   1b5ec:	ldurb	w3, [x1, #-1]
   1b5f0:	cmp	w4, w3
   1b5f4:	b.eq	1b860 <ZSTD_compress@@Base+0xd014>  // b.none
   1b5f8:	mov	x24, x9
   1b5fc:	str	w21, [sp, #136]
   1b600:	sub	w21, w5, #0x2
   1b604:	ldr	x1, [sp, #128]
   1b608:	sub	x11, x7, x28
   1b60c:	sub	x12, x24, #0x3
   1b610:	cmp	x7, x1
   1b614:	ldr	x0, [x23, #24]
   1b618:	b.hi	1b86c <ZSTD_compress@@Base+0xd020>  // b.pmore
   1b61c:	ldp	x2, x3, [x28]
   1b620:	stp	x2, x3, [x0]
   1b624:	cmp	x11, #0x10
   1b628:	b.ls	1b674 <ZSTD_compress@@Base+0xce28>  // b.plast
   1b62c:	ldr	x2, [x23, #24]
   1b630:	ldp	x0, x1, [x28, #16]
   1b634:	add	x3, x2, x11
   1b638:	stp	x0, x1, [x2, #16]
   1b63c:	add	x2, x2, #0x30
   1b640:	ldp	x0, x1, [x28, #32]
   1b644:	stp	x0, x1, [x2, #-16]
   1b648:	cmp	x3, x2
   1b64c:	b.ls	1b674 <ZSTD_compress@@Base+0xce28>  // b.plast
   1b650:	add	x6, x28, #0x30
   1b654:	ldp	x0, x1, [x6]
   1b658:	stp	x0, x1, [x2]
   1b65c:	add	x2, x2, #0x20
   1b660:	ldp	x0, x1, [x6, #16]
   1b664:	stp	x0, x1, [x2, #-16]
   1b668:	add	x6, x6, #0x20
   1b66c:	cmp	x3, x2
   1b670:	b.hi	1b654 <ZSTD_compress@@Base+0xce08>  // b.pmore
   1b674:	ldr	x0, [x23, #24]
   1b678:	mov	x1, #0xffff                	// #65535
   1b67c:	cmp	x11, x1
   1b680:	add	x0, x0, x11
   1b684:	str	x0, [x23, #24]
   1b688:	ldr	x0, [x23, #8]
   1b68c:	b.ls	1b6a8 <ZSTD_compress@@Base+0xce5c>  // b.plast
   1b690:	mov	w1, #0x1                   	// #1
   1b694:	str	w1, [x23, #72]
   1b698:	ldr	x1, [x23]
   1b69c:	sub	x1, x0, x1
   1b6a0:	asr	x1, x1, #3
   1b6a4:	str	w1, [x23, #76]
   1b6a8:	add	w5, w5, #0x1
   1b6ac:	str	w5, [x0]
   1b6b0:	strh	w11, [x0, #4]
   1b6b4:	mov	x1, #0xffff                	// #65535
   1b6b8:	cmp	x12, x1
   1b6bc:	b.ls	1b6d8 <ZSTD_compress@@Base+0xce8c>  // b.plast
   1b6c0:	mov	w1, #0x2                   	// #2
   1b6c4:	str	w1, [x23, #72]
   1b6c8:	ldr	x1, [x23]
   1b6cc:	sub	x1, x0, x1
   1b6d0:	asr	x1, x1, #3
   1b6d4:	str	w1, [x23, #76]
   1b6d8:	add	x26, x7, x24
   1b6dc:	strh	w12, [x0, #6]
   1b6e0:	mov	w13, #0x1                   	// #1
   1b6e4:	add	x0, x0, #0x8
   1b6e8:	mov	x14, #0xffff                	// #65535
   1b6ec:	mov	w15, #0x2                   	// #2
   1b6f0:	str	x0, [x23, #8]
   1b6f4:	ldr	x0, [sp, #112]
   1b6f8:	cmp	x0, x26
   1b6fc:	b.cs	1b888 <ZSTD_compress@@Base+0xd03c>  // b.hs, b.nlast
   1b700:	mov	x28, x26
   1b704:	b	1b364 <ZSTD_compress@@Base+0xcb18>
   1b708:	mov	x4, #0x0                   	// #0
   1b70c:	b	1b40c <ZSTD_compress@@Base+0xcbc0>
   1b710:	mov	x7, x26
   1b714:	ldr	x11, [sp, #216]
   1b718:	b	1b44c <ZSTD_compress@@Base+0xcc00>
   1b71c:	sub	x0, x26, x28
   1b720:	asr	x0, x0, #8
   1b724:	add	x0, x0, #0x1
   1b728:	add	x26, x26, x0
   1b72c:	b	1b364 <ZSTD_compress@@Base+0xcb18>
   1b730:	mov	x26, x7
   1b734:	b	1b46c <ZSTD_compress@@Base+0xcc20>
   1b738:	ldr	x0, [sp, #112]
   1b73c:	cmp	x0, x12
   1b740:	b.ls	1b5a0 <ZSTD_compress@@Base+0xcd54>  // b.plast
   1b744:	add	x12, x26, #0x2
   1b748:	ldr	w1, [sp, #172]
   1b74c:	sub	x2, x12, x20
   1b750:	ldr	x3, [sp, #96]
   1b754:	sub	w0, w2, w21
   1b758:	add	w1, w1, w0
   1b75c:	cmp	w19, w0
   1b760:	add	x3, x3, x1
   1b764:	add	x1, x20, w0, uxtw
   1b768:	csel	x1, x1, x3, ls  // ls = plast
   1b76c:	ldr	w3, [sp, #160]
   1b770:	sub	w2, w3, w2
   1b774:	cmp	w2, #0x2
   1b778:	b.ls	1b7e0 <ZSTD_compress@@Base+0xcf94>  // b.plast
   1b77c:	ldr	w2, [x1]
   1b780:	ldur	w3, [x26, #2]
   1b784:	cmp	w3, w2
   1b788:	b.ne	1b7e0 <ZSTD_compress@@Base+0xcf94>  // b.any
   1b78c:	cmp	w19, w0
   1b790:	add	x1, x1, #0x4
   1b794:	ldr	x0, [sp, #104]
   1b798:	mov	x4, x25
   1b79c:	mov	x2, x27
   1b7a0:	stp	x11, x12, [sp, #184]
   1b7a4:	csel	x3, x0, x27, hi  // hi = pmore
   1b7a8:	add	x0, x26, #0x6
   1b7ac:	str	x7, [sp, #200]
   1b7b0:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1b7b4:	add	x0, x0, #0x4
   1b7b8:	add	w13, w13, #0x1
   1b7bc:	lsl	w1, w0, #2
   1b7c0:	cmp	w1, w13
   1b7c4:	ccmp	x0, #0x3, #0x0, gt
   1b7c8:	ldp	x11, x12, [sp, #184]
   1b7cc:	ldr	x7, [sp, #200]
   1b7d0:	b.ls	1b7e0 <ZSTD_compress@@Base+0xcf94>  // b.plast
   1b7d4:	mov	x7, x12
   1b7d8:	mov	x24, x0
   1b7dc:	mov	x11, #0x0                   	// #0
   1b7e0:	ldr	x3, [sp, #144]
   1b7e4:	mov	x0, #0xc9ff                	// #51711
   1b7e8:	movk	x0, #0x3b9a, lsl #16
   1b7ec:	mov	x1, x12
   1b7f0:	mov	x2, x27
   1b7f4:	stp	x12, x11, [sp, #184]
   1b7f8:	str	x7, [sp, #200]
   1b7fc:	str	x0, [sp, #216]
   1b800:	mov	x0, x22
   1b804:	bl	18364 <ZSTD_compress@@Base+0x9b18>
   1b808:	lsl	w3, w0, #2
   1b80c:	ldp	x12, x11, [sp, #184]
   1b810:	ldr	x4, [sp, #216]
   1b814:	ldr	x7, [sp, #200]
   1b818:	add	w1, w4, #0x1
   1b81c:	clz	w1, w1
   1b820:	add	w2, w11, #0x1
   1b824:	eor	w1, w1, #0x1f
   1b828:	clz	w2, w2
   1b82c:	sub	w3, w3, w1
   1b830:	lsl	w1, w24, #2
   1b834:	add	w1, w1, #0x7
   1b838:	eor	w2, w2, #0x1f
   1b83c:	sub	w1, w1, w2
   1b840:	cmp	w3, w1
   1b844:	ccmp	x0, #0x3, #0x0, gt
   1b848:	b.ls	1b5a0 <ZSTD_compress@@Base+0xcd54>  // b.plast
   1b84c:	mov	x11, x4
   1b850:	b	1b58c <ZSTD_compress@@Base+0xcd40>
   1b854:	add	x1, x20, x1
   1b858:	mov	x2, x25
   1b85c:	b	1b5d4 <ZSTD_compress@@Base+0xcd88>
   1b860:	sub	x7, x7, #0x1
   1b864:	sub	x1, x1, #0x1
   1b868:	b	1b5d8 <ZSTD_compress@@Base+0xcd8c>
   1b86c:	ldr	x3, [sp, #128]
   1b870:	mov	x2, x7
   1b874:	mov	x1, x28
   1b878:	str	x7, [sp, #160]
   1b87c:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1b880:	ldr	x7, [sp, #160]
   1b884:	b	1b674 <ZSTD_compress@@Base+0xce28>
   1b888:	ldr	w0, [sp, #136]
   1b88c:	sub	x2, x26, x20
   1b890:	ldr	x1, [sp, #176]
   1b894:	sub	w4, w2, w0
   1b898:	ldr	x3, [sp, #96]
   1b89c:	sub	w0, w2, w0
   1b8a0:	sub	x1, x0, x1
   1b8a4:	cmp	w19, w4
   1b8a8:	add	x3, x3, x1
   1b8ac:	add	x1, x20, x0
   1b8b0:	csel	x1, x1, x3, ls  // ls = plast
   1b8b4:	ldp	w0, w3, [sp, #136]
   1b8b8:	add	w0, w0, w3
   1b8bc:	sub	w0, w0, w2
   1b8c0:	cmp	w0, #0x2
   1b8c4:	b.ls	1b700 <ZSTD_compress@@Base+0xceb4>  // b.plast
   1b8c8:	ldr	w0, [x1]
   1b8cc:	ldr	w2, [x26]
   1b8d0:	cmp	w2, w0
   1b8d4:	b.ne	1b700 <ZSTD_compress@@Base+0xceb4>  // b.any
   1b8d8:	cmp	w19, w4
   1b8dc:	add	x1, x1, #0x4
   1b8e0:	ldr	x0, [sp, #104]
   1b8e4:	mov	x4, x25
   1b8e8:	mov	x2, x27
   1b8ec:	csel	x3, x0, x27, hi  // hi = pmore
   1b8f0:	add	x0, x26, #0x4
   1b8f4:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1b8f8:	add	x11, x0, #0x4
   1b8fc:	ldr	x1, [sp, #128]
   1b900:	add	x9, x0, #0x1
   1b904:	ldr	x0, [x23, #24]
   1b908:	cmp	x1, x26
   1b90c:	b.cc	1b95c <ZSTD_compress@@Base+0xd110>  // b.lo, b.ul, b.last
   1b910:	ldp	x2, x3, [x26]
   1b914:	stp	x2, x3, [x0]
   1b918:	cmp	x9, x14
   1b91c:	ldr	x0, [x23, #8]
   1b920:	str	w13, [x0]
   1b924:	strh	wzr, [x0, #4]
   1b928:	b.ls	1b93c <ZSTD_compress@@Base+0xd0f0>  // b.plast
   1b92c:	ldr	x1, [x23]
   1b930:	sub	x1, x0, x1
   1b934:	asr	x1, x1, #3
   1b938:	stp	w15, w1, [x23, #72]
   1b93c:	add	x0, x0, #0x8
   1b940:	sturh	w9, [x0, #-2]
   1b944:	add	x26, x26, x11
   1b948:	str	x0, [x23, #8]
   1b94c:	mov	w0, w21
   1b950:	ldr	w21, [sp, #136]
   1b954:	str	w0, [sp, #136]
   1b958:	b	1b6f4 <ZSTD_compress@@Base+0xcea8>
   1b95c:	ldr	x3, [sp, #128]
   1b960:	mov	x2, x26
   1b964:	mov	x1, x26
   1b968:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1b96c:	b	1b918 <ZSTD_compress@@Base+0xd0cc>
   1b970:	stp	x29, x30, [sp, #-224]!
   1b974:	mov	x29, sp
   1b978:	stp	x23, x24, [sp, #48]
   1b97c:	mov	x23, x0
   1b980:	mov	x24, x3
   1b984:	stp	x19, x20, [sp, #16]
   1b988:	ldr	w19, [x23, #24]
   1b98c:	stp	x27, x28, [sp, #80]
   1b990:	add	x27, x3, x4
   1b994:	sub	x0, x27, #0x8
   1b998:	str	x0, [sp, #136]
   1b99c:	sub	w0, w19, #0x1
   1b9a0:	str	w0, [sp, #152]
   1b9a4:	ldr	x0, [x23, #176]
   1b9a8:	stp	x25, x26, [sp, #64]
   1b9ac:	mov	x25, x1
   1b9b0:	stp	x21, x22, [sp, #32]
   1b9b4:	ldr	x1, [x0, #8]
   1b9b8:	str	x1, [sp, #104]
   1b9bc:	ldp	w21, w22, [x2]
   1b9c0:	str	x2, [sp, #120]
   1b9c4:	ldr	x2, [sp, #104]
   1b9c8:	ldr	w1, [x0, #24]
   1b9cc:	ldr	x0, [x0]
   1b9d0:	str	x0, [sp, #112]
   1b9d4:	ldr	x20, [x23, #8]
   1b9d8:	add	x1, x2, x1
   1b9dc:	str	x1, [sp, #144]
   1b9e0:	sub	x1, x0, x2
   1b9e4:	ldr	x2, [sp, #112]
   1b9e8:	add	x26, x20, w19, uxtw
   1b9ec:	sub	x0, x3, x26
   1b9f0:	str	w1, [sp, #156]
   1b9f4:	add	x0, x2, x0
   1b9f8:	ldr	w2, [sp, #144]
   1b9fc:	cmp	w0, w2
   1ba00:	add	x0, sp, #0xd8
   1ba04:	cinc	x28, x3, eq  // eq = none
   1ba08:	str	x0, [sp, #160]
   1ba0c:	sub	x0, x27, #0x20
   1ba10:	str	x0, [sp, #128]
   1ba14:	sub	w0, w19, w1
   1ba18:	str	x0, [sp, #168]
   1ba1c:	ldr	x0, [sp, #136]
   1ba20:	cmp	x0, x28
   1ba24:	b.hi	1ba50 <ZSTD_compress@@Base+0xd204>  // b.pmore
   1ba28:	ldr	x0, [sp, #120]
   1ba2c:	ldp	x19, x20, [sp, #16]
   1ba30:	ldp	x25, x26, [sp, #64]
   1ba34:	stp	w21, w22, [x0]
   1ba38:	sub	x0, x27, x24
   1ba3c:	ldp	x21, x22, [sp, #32]
   1ba40:	ldp	x23, x24, [sp, #48]
   1ba44:	ldp	x27, x28, [sp, #80]
   1ba48:	ldp	x29, x30, [sp], #224
   1ba4c:	ret
   1ba50:	ldr	w1, [sp, #156]
   1ba54:	sub	x0, x28, x20
   1ba58:	sub	w0, w0, w21
   1ba5c:	ldr	x2, [sp, #104]
   1ba60:	add	w0, w0, #0x1
   1ba64:	sub	w1, w1, w19
   1ba68:	cmp	w19, w0
   1ba6c:	add	w1, w1, w0
   1ba70:	add	x1, x2, x1
   1ba74:	add	x2, x20, w0, uxtw
   1ba78:	csel	x1, x2, x1, ls  // ls = plast
   1ba7c:	ldr	w2, [sp, #152]
   1ba80:	sub	w2, w2, w0
   1ba84:	cmp	w2, #0x2
   1ba88:	b.ls	1bdb0 <ZSTD_compress@@Base+0xd564>  // b.plast
   1ba8c:	ldr	w2, [x1]
   1ba90:	ldur	w3, [x28, #1]
   1ba94:	cmp	w3, w2
   1ba98:	b.ne	1bdb0 <ZSTD_compress@@Base+0xd564>  // b.any
   1ba9c:	cmp	w19, w0
   1baa0:	mov	x4, x26
   1baa4:	ldr	x0, [sp, #112]
   1baa8:	mov	x2, x27
   1baac:	add	x1, x1, #0x4
   1bab0:	csel	x3, x0, x27, hi  // hi = pmore
   1bab4:	add	x0, x28, #0x5
   1bab8:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1babc:	add	x4, x0, #0x4
   1bac0:	ldr	x3, [sp, #160]
   1bac4:	mov	x0, #0xc9ff                	// #51711
   1bac8:	movk	x0, #0x3b9a, lsl #16
   1bacc:	mov	x2, x27
   1bad0:	mov	x1, x28
   1bad4:	str	x4, [sp, #176]
   1bad8:	str	x0, [sp, #216]
   1badc:	mov	x0, x23
   1bae0:	bl	18364 <ZSTD_compress@@Base+0x9b18>
   1bae4:	mov	x10, x0
   1bae8:	ldr	x4, [sp, #176]
   1baec:	cmp	x0, x4
   1baf0:	b.hi	1bdb8 <ZSTD_compress@@Base+0xd56c>  // b.pmore
   1baf4:	add	x12, x28, #0x1
   1baf8:	mov	x10, x4
   1bafc:	mov	x11, #0x0                   	// #0
   1bb00:	cmp	x10, #0x3
   1bb04:	b.ls	1bdc4 <ZSTD_compress@@Base+0xd578>  // b.plast
   1bb08:	ldr	w0, [sp, #156]
   1bb0c:	sub	w0, w0, w19
   1bb10:	str	w0, [sp, #176]
   1bb14:	add	x28, x28, #0x1
   1bb18:	ldr	w1, [sp, #176]
   1bb1c:	sub	x0, x28, x20
   1bb20:	ldr	x3, [sp, #104]
   1bb24:	sub	w2, w0, w21
   1bb28:	add	w1, w1, w2
   1bb2c:	cmp	w19, w2
   1bb30:	add	x3, x3, x1
   1bb34:	add	x1, x20, w2, uxtw
   1bb38:	csel	x1, x1, x3, ls  // ls = plast
   1bb3c:	ldr	w3, [sp, #152]
   1bb40:	sub	w0, w3, w0
   1bb44:	add	w0, w0, w21
   1bb48:	cmp	w0, #0x2
   1bb4c:	b.ls	1bbc8 <ZSTD_compress@@Base+0xd37c>  // b.plast
   1bb50:	ldr	w0, [x1]
   1bb54:	ldr	w3, [x28]
   1bb58:	cmp	w3, w0
   1bb5c:	b.ne	1bbc8 <ZSTD_compress@@Base+0xd37c>  // b.any
   1bb60:	cmp	w19, w2
   1bb64:	add	x1, x1, #0x4
   1bb68:	ldr	x0, [sp, #112]
   1bb6c:	mov	x2, x27
   1bb70:	mov	x4, x26
   1bb74:	stp	x10, x11, [sp, #184]
   1bb78:	csel	x3, x0, x27, hi  // hi = pmore
   1bb7c:	add	x0, x28, #0x4
   1bb80:	str	x12, [sp, #200]
   1bb84:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1bb88:	add	x0, x0, #0x4
   1bb8c:	ldp	x10, x11, [sp, #184]
   1bb90:	add	w3, w0, w0, lsl #1
   1bb94:	ldr	x12, [sp, #200]
   1bb98:	add	w2, w11, #0x1
   1bb9c:	add	w1, w10, w10, lsl #1
   1bba0:	clz	w2, w2
   1bba4:	add	w1, w1, #0x1
   1bba8:	eor	w2, w2, #0x1f
   1bbac:	sub	w1, w1, w2
   1bbb0:	cmp	w3, w1
   1bbb4:	ccmp	x0, #0x3, #0x0, gt
   1bbb8:	b.ls	1bbc8 <ZSTD_compress@@Base+0xd37c>  // b.plast
   1bbbc:	mov	x12, x28
   1bbc0:	mov	x10, x0
   1bbc4:	mov	x11, #0x0                   	// #0
   1bbc8:	ldr	x3, [sp, #160]
   1bbcc:	mov	x0, #0xc9ff                	// #51711
   1bbd0:	movk	x0, #0x3b9a, lsl #16
   1bbd4:	mov	x2, x27
   1bbd8:	mov	x1, x28
   1bbdc:	stp	x10, x11, [sp, #184]
   1bbe0:	str	x12, [sp, #200]
   1bbe4:	str	x0, [sp, #216]
   1bbe8:	mov	x0, x23
   1bbec:	bl	18364 <ZSTD_compress@@Base+0x9b18>
   1bbf0:	mov	x9, x0
   1bbf4:	ldp	x10, x11, [sp, #184]
   1bbf8:	lsl	w1, w0, #2
   1bbfc:	ldr	x3, [sp, #216]
   1bc00:	ldr	x12, [sp, #200]
   1bc04:	add	w0, w3, #0x1
   1bc08:	clz	w0, w0
   1bc0c:	add	w2, w11, #0x1
   1bc10:	eor	w0, w0, #0x1f
   1bc14:	clz	w2, w2
   1bc18:	sub	w1, w1, w0
   1bc1c:	add	w0, w10, #0x1
   1bc20:	eor	w2, w2, #0x1f
   1bc24:	lsl	w0, w0, #2
   1bc28:	sub	w0, w0, w2
   1bc2c:	cmp	w1, w0
   1bc30:	ccmp	x9, #0x3, #0x0, gt
   1bc34:	b.ls	1bde8 <ZSTD_compress@@Base+0xd59c>  // b.plast
   1bc38:	ldr	x0, [sp, #136]
   1bc3c:	cmp	x0, x28
   1bc40:	b.hi	1bdd8 <ZSTD_compress@@Base+0xd58c>  // b.pmore
   1bc44:	mov	w10, w3
   1bc48:	cbz	x3, 1bcac <ZSTD_compress@@Base+0xd460>
   1bc4c:	sub	x1, x28, x20
   1bc50:	sub	w1, w1, w3
   1bc54:	add	w0, w1, #0x2
   1bc58:	add	w1, w1, #0x2
   1bc5c:	cmp	w19, w0
   1bc60:	b.ls	1bdf8 <ZSTD_compress@@Base+0xd5ac>  // b.plast
   1bc64:	ldr	x0, [sp, #168]
   1bc68:	ldr	x2, [sp, #144]
   1bc6c:	sub	x1, x1, x0
   1bc70:	ldr	x0, [sp, #104]
   1bc74:	add	x1, x0, x1
   1bc78:	mov	x5, x28
   1bc7c:	add	x0, x28, x9
   1bc80:	cmp	x24, x5
   1bc84:	sub	x9, x0, x5
   1bc88:	ccmp	x1, x2, #0x0, cc  // cc = lo, ul, last
   1bc8c:	b.ls	1bca0 <ZSTD_compress@@Base+0xd454>  // b.plast
   1bc90:	ldurb	w4, [x5, #-1]
   1bc94:	ldurb	w3, [x1, #-1]
   1bc98:	cmp	w4, w3
   1bc9c:	b.eq	1be04 <ZSTD_compress@@Base+0xd5b8>  // b.none
   1bca0:	mov	w22, w21
   1bca4:	mov	x28, x5
   1bca8:	sub	w21, w10, #0x2
   1bcac:	ldr	x1, [sp, #128]
   1bcb0:	sub	x11, x28, x24
   1bcb4:	sub	x12, x9, #0x3
   1bcb8:	cmp	x28, x1
   1bcbc:	ldr	x0, [x25, #24]
   1bcc0:	b.hi	1be10 <ZSTD_compress@@Base+0xd5c4>  // b.pmore
   1bcc4:	ldp	x2, x3, [x24]
   1bcc8:	stp	x2, x3, [x0]
   1bccc:	cmp	x11, #0x10
   1bcd0:	b.ls	1bd1c <ZSTD_compress@@Base+0xd4d0>  // b.plast
   1bcd4:	ldr	x2, [x25, #24]
   1bcd8:	ldp	x0, x1, [x24, #16]
   1bcdc:	add	x3, x2, x11
   1bce0:	stp	x0, x1, [x2, #16]
   1bce4:	add	x2, x2, #0x30
   1bce8:	ldp	x0, x1, [x24, #32]
   1bcec:	stp	x0, x1, [x2, #-16]
   1bcf0:	cmp	x3, x2
   1bcf4:	b.ls	1bd1c <ZSTD_compress@@Base+0xd4d0>  // b.plast
   1bcf8:	add	x6, x24, #0x30
   1bcfc:	ldp	x0, x1, [x6]
   1bd00:	stp	x0, x1, [x2]
   1bd04:	add	x2, x2, #0x20
   1bd08:	ldp	x0, x1, [x6, #16]
   1bd0c:	stp	x0, x1, [x2, #-16]
   1bd10:	add	x6, x6, #0x20
   1bd14:	cmp	x3, x2
   1bd18:	b.hi	1bcfc <ZSTD_compress@@Base+0xd4b0>  // b.pmore
   1bd1c:	ldr	x0, [x25, #24]
   1bd20:	mov	x1, #0xffff                	// #65535
   1bd24:	cmp	x11, x1
   1bd28:	add	x0, x0, x11
   1bd2c:	str	x0, [x25, #24]
   1bd30:	ldr	x0, [x25, #8]
   1bd34:	b.ls	1bd50 <ZSTD_compress@@Base+0xd504>  // b.plast
   1bd38:	mov	w1, #0x1                   	// #1
   1bd3c:	str	w1, [x25, #72]
   1bd40:	ldr	x1, [x25]
   1bd44:	sub	x1, x0, x1
   1bd48:	asr	x1, x1, #3
   1bd4c:	str	w1, [x25, #76]
   1bd50:	add	w10, w10, #0x1
   1bd54:	str	w10, [x0]
   1bd58:	strh	w11, [x0, #4]
   1bd5c:	mov	x1, #0xffff                	// #65535
   1bd60:	cmp	x12, x1
   1bd64:	b.ls	1bd80 <ZSTD_compress@@Base+0xd534>  // b.plast
   1bd68:	mov	w1, #0x2                   	// #2
   1bd6c:	str	w1, [x25, #72]
   1bd70:	ldr	x1, [x25]
   1bd74:	sub	x1, x0, x1
   1bd78:	asr	x1, x1, #3
   1bd7c:	str	w1, [x25, #76]
   1bd80:	add	x28, x28, x9
   1bd84:	strh	w12, [x0, #6]
   1bd88:	mov	w13, #0x1                   	// #1
   1bd8c:	add	x0, x0, #0x8
   1bd90:	mov	x14, #0xffff                	// #65535
   1bd94:	mov	w15, #0x2                   	// #2
   1bd98:	str	x0, [x25, #8]
   1bd9c:	ldr	x0, [sp, #136]
   1bda0:	cmp	x0, x28
   1bda4:	b.cs	1be24 <ZSTD_compress@@Base+0xd5d8>  // b.hs, b.nlast
   1bda8:	mov	x24, x28
   1bdac:	b	1ba1c <ZSTD_compress@@Base+0xd1d0>
   1bdb0:	mov	x4, #0x0                   	// #0
   1bdb4:	b	1bac0 <ZSTD_compress@@Base+0xd274>
   1bdb8:	mov	x12, x28
   1bdbc:	ldr	x11, [sp, #216]
   1bdc0:	b	1bb00 <ZSTD_compress@@Base+0xd2b4>
   1bdc4:	sub	x0, x28, x24
   1bdc8:	asr	x0, x0, #8
   1bdcc:	add	x0, x0, #0x1
   1bdd0:	add	x28, x28, x0
   1bdd4:	b	1ba1c <ZSTD_compress@@Base+0xd1d0>
   1bdd8:	mov	x12, x28
   1bddc:	mov	x10, x9
   1bde0:	mov	x11, x3
   1bde4:	b	1bb14 <ZSTD_compress@@Base+0xd2c8>
   1bde8:	mov	x28, x12
   1bdec:	mov	x3, x11
   1bdf0:	mov	x9, x10
   1bdf4:	b	1bc44 <ZSTD_compress@@Base+0xd3f8>
   1bdf8:	add	x1, x20, x1
   1bdfc:	mov	x2, x26
   1be00:	b	1bc78 <ZSTD_compress@@Base+0xd42c>
   1be04:	sub	x5, x5, #0x1
   1be08:	sub	x1, x1, #0x1
   1be0c:	b	1bc80 <ZSTD_compress@@Base+0xd434>
   1be10:	ldr	x3, [sp, #128]
   1be14:	mov	x2, x28
   1be18:	mov	x1, x24
   1be1c:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1be20:	b	1bd1c <ZSTD_compress@@Base+0xd4d0>
   1be24:	ldr	x1, [sp, #168]
   1be28:	sub	x2, x28, x20
   1be2c:	ldr	x3, [sp, #104]
   1be30:	sub	w0, w2, w22
   1be34:	sub	x1, x0, x1
   1be38:	sub	w4, w2, w22
   1be3c:	add	x3, x3, x1
   1be40:	add	x1, x20, x0
   1be44:	ldr	w0, [sp, #152]
   1be48:	cmp	w19, w4
   1be4c:	csel	x1, x1, x3, ls  // ls = plast
   1be50:	add	w0, w22, w0
   1be54:	sub	w0, w0, w2
   1be58:	cmp	w0, #0x2
   1be5c:	b.ls	1bda8 <ZSTD_compress@@Base+0xd55c>  // b.plast
   1be60:	ldr	w0, [x1]
   1be64:	ldr	w2, [x28]
   1be68:	cmp	w2, w0
   1be6c:	b.ne	1bda8 <ZSTD_compress@@Base+0xd55c>  // b.any
   1be70:	cmp	w19, w4
   1be74:	add	x1, x1, #0x4
   1be78:	ldr	x0, [sp, #112]
   1be7c:	mov	x4, x26
   1be80:	mov	x2, x27
   1be84:	csel	x3, x0, x27, hi  // hi = pmore
   1be88:	add	x0, x28, #0x4
   1be8c:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1be90:	add	x10, x0, #0x4
   1be94:	ldr	x1, [sp, #128]
   1be98:	add	x9, x0, #0x1
   1be9c:	ldr	x0, [x25, #24]
   1bea0:	cmp	x1, x28
   1bea4:	b.cc	1bef4 <ZSTD_compress@@Base+0xd6a8>  // b.lo, b.ul, b.last
   1bea8:	ldp	x2, x3, [x28]
   1beac:	stp	x2, x3, [x0]
   1beb0:	cmp	x9, x14
   1beb4:	ldr	x0, [x25, #8]
   1beb8:	str	w13, [x0]
   1bebc:	strh	wzr, [x0, #4]
   1bec0:	b.ls	1bed4 <ZSTD_compress@@Base+0xd688>  // b.plast
   1bec4:	ldr	x1, [x25]
   1bec8:	sub	x1, x0, x1
   1becc:	asr	x1, x1, #3
   1bed0:	stp	w15, w1, [x25, #72]
   1bed4:	add	x0, x0, #0x8
   1bed8:	sturh	w9, [x0, #-2]
   1bedc:	str	x0, [x25, #8]
   1bee0:	mov	w0, w21
   1bee4:	add	x28, x28, x10
   1bee8:	mov	w21, w22
   1beec:	mov	w22, w0
   1bef0:	b	1bd9c <ZSTD_compress@@Base+0xd550>
   1bef4:	ldr	x3, [sp, #128]
   1bef8:	mov	x2, x28
   1befc:	mov	x1, x28
   1bf00:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1bf04:	b	1beb0 <ZSTD_compress@@Base+0xd664>
   1bf08:	stp	x29, x30, [sp, #-192]!
   1bf0c:	mov	x6, x3
   1bf10:	mov	x29, sp
   1bf14:	stp	x23, x24, [sp, #48]
   1bf18:	mov	x23, x0
   1bf1c:	mov	x24, x1
   1bf20:	stp	x25, x26, [sp, #64]
   1bf24:	ldr	w26, [x23, #24]
   1bf28:	stp	x27, x28, [sp, #80]
   1bf2c:	add	x28, x3, x4
   1bf30:	sub	x0, x28, #0x8
   1bf34:	stp	x2, x0, [sp, #120]
   1bf38:	sub	w0, w26, #0x1
   1bf3c:	sub	x27, x28, #0x20
   1bf40:	str	w0, [sp, #152]
   1bf44:	ldr	x0, [x23, #176]
   1bf48:	stp	x19, x20, [sp, #16]
   1bf4c:	stp	x21, x22, [sp, #32]
   1bf50:	ldr	x1, [x0, #8]
   1bf54:	str	x1, [sp, #104]
   1bf58:	ldp	w21, w19, [x2]
   1bf5c:	ldr	x2, [sp, #104]
   1bf60:	ldr	w1, [x0, #24]
   1bf64:	ldr	x0, [x0]
   1bf68:	str	x0, [sp, #112]
   1bf6c:	ldr	x22, [x23, #8]
   1bf70:	add	x1, x2, x1
   1bf74:	str	x1, [sp, #136]
   1bf78:	sub	x1, x0, x2
   1bf7c:	ldr	x2, [sp, #112]
   1bf80:	add	x25, x22, w26, uxtw
   1bf84:	sub	x0, x3, x25
   1bf88:	str	w1, [sp, #156]
   1bf8c:	add	x0, x2, x0
   1bf90:	ldr	w2, [sp, #136]
   1bf94:	cmp	w0, w2
   1bf98:	sub	w0, w26, w1
   1bf9c:	cinc	x20, x3, eq  // eq = none
   1bfa0:	str	x0, [sp, #144]
   1bfa4:	ldr	x0, [sp, #128]
   1bfa8:	cmp	x0, x20
   1bfac:	b.hi	1bfd8 <ZSTD_compress@@Base+0xd78c>  // b.pmore
   1bfb0:	ldr	x0, [sp, #120]
   1bfb4:	ldp	x23, x24, [sp, #48]
   1bfb8:	ldp	x25, x26, [sp, #64]
   1bfbc:	stp	w21, w19, [x0]
   1bfc0:	sub	x0, x28, x6
   1bfc4:	ldp	x19, x20, [sp, #16]
   1bfc8:	ldp	x21, x22, [sp, #32]
   1bfcc:	ldp	x27, x28, [sp, #80]
   1bfd0:	ldp	x29, x30, [sp], #192
   1bfd4:	ret
   1bfd8:	ldr	w1, [sp, #156]
   1bfdc:	sub	x8, x20, x22
   1bfe0:	mov	w0, #0x1                   	// #1
   1bfe4:	sub	w0, w0, w21
   1bfe8:	ldr	x2, [sp, #104]
   1bfec:	add	w0, w0, w8
   1bff0:	sub	w1, w1, w26
   1bff4:	cmp	w26, w0
   1bff8:	add	w1, w1, w0
   1bffc:	add	x1, x2, x1
   1c000:	add	x2, x22, w0, uxtw
   1c004:	csel	x1, x2, x1, ls  // ls = plast
   1c008:	ldr	w2, [sp, #152]
   1c00c:	sub	w2, w2, w0
   1c010:	cmp	w2, #0x2
   1c014:	b.ls	1c160 <ZSTD_compress@@Base+0xd914>  // b.plast
   1c018:	ldr	w2, [x1]
   1c01c:	ldur	w3, [x20, #1]
   1c020:	cmp	w3, w2
   1c024:	b.ne	1c160 <ZSTD_compress@@Base+0xd914>  // b.any
   1c028:	cmp	w26, w0
   1c02c:	add	x13, x20, #0x1
   1c030:	ldr	x0, [sp, #112]
   1c034:	mov	x2, x28
   1c038:	mov	x4, x25
   1c03c:	add	x1, x1, #0x4
   1c040:	csel	x3, x0, x28, hi  // hi = pmore
   1c044:	add	x0, x20, #0x5
   1c048:	str	x6, [sp, #160]
   1c04c:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1c050:	ldr	x6, [sp, #160]
   1c054:	add	x11, x0, #0x4
   1c058:	mov	x20, x13
   1c05c:	mov	x2, #0x0                   	// #0
   1c060:	sub	x12, x20, x6
   1c064:	mov	w8, w2
   1c068:	sub	x13, x11, #0x3
   1c06c:	cmp	x20, x27
   1c070:	ldr	x0, [x24, #24]
   1c074:	b.hi	1c230 <ZSTD_compress@@Base+0xd9e4>  // b.pmore
   1c078:	ldp	x2, x3, [x6]
   1c07c:	stp	x2, x3, [x0]
   1c080:	cmp	x12, #0x10
   1c084:	b.ls	1c0d0 <ZSTD_compress@@Base+0xd884>  // b.plast
   1c088:	ldr	x2, [x24, #24]
   1c08c:	ldp	x0, x1, [x6, #16]
   1c090:	add	x4, x2, x12
   1c094:	stp	x0, x1, [x2, #16]
   1c098:	add	x2, x2, #0x30
   1c09c:	ldp	x0, x1, [x6, #32]
   1c0a0:	stp	x0, x1, [x2, #-16]
   1c0a4:	cmp	x4, x2
   1c0a8:	b.ls	1c0d0 <ZSTD_compress@@Base+0xd884>  // b.plast
   1c0ac:	add	x6, x6, #0x30
   1c0b0:	ldp	x0, x1, [x6]
   1c0b4:	stp	x0, x1, [x2]
   1c0b8:	add	x2, x2, #0x20
   1c0bc:	ldp	x0, x1, [x6, #16]
   1c0c0:	stp	x0, x1, [x2, #-16]
   1c0c4:	add	x6, x6, #0x20
   1c0c8:	cmp	x4, x2
   1c0cc:	b.hi	1c0b0 <ZSTD_compress@@Base+0xd864>  // b.pmore
   1c0d0:	ldr	x0, [x24, #24]
   1c0d4:	mov	x1, #0xffff                	// #65535
   1c0d8:	cmp	x12, x1
   1c0dc:	add	x0, x0, x12
   1c0e0:	str	x0, [x24, #24]
   1c0e4:	ldr	x0, [x24, #8]
   1c0e8:	b.ls	1c104 <ZSTD_compress@@Base+0xd8b8>  // b.plast
   1c0ec:	mov	w1, #0x1                   	// #1
   1c0f0:	str	w1, [x24, #72]
   1c0f4:	ldr	x1, [x24]
   1c0f8:	sub	x1, x0, x1
   1c0fc:	asr	x1, x1, #3
   1c100:	str	w1, [x24, #76]
   1c104:	add	w8, w8, #0x1
   1c108:	str	w8, [x0]
   1c10c:	strh	w12, [x0, #4]
   1c110:	mov	x1, #0xffff                	// #65535
   1c114:	cmp	x13, x1
   1c118:	b.ls	1c134 <ZSTD_compress@@Base+0xd8e8>  // b.plast
   1c11c:	mov	w1, #0x2                   	// #2
   1c120:	str	w1, [x24, #72]
   1c124:	ldr	x1, [x24]
   1c128:	sub	x1, x0, x1
   1c12c:	asr	x1, x1, #3
   1c130:	str	w1, [x24, #76]
   1c134:	add	x20, x20, x11
   1c138:	strh	w13, [x0, #6]
   1c13c:	mov	w14, #0x2                   	// #2
   1c140:	add	x0, x0, #0x8
   1c144:	mov	x13, #0xffff                	// #65535
   1c148:	str	x0, [x24, #8]
   1c14c:	ldr	x0, [sp, #128]
   1c150:	cmp	x0, x20
   1c154:	b.cs	1c244 <ZSTD_compress@@Base+0xd9f8>  // b.hs, b.nlast
   1c158:	mov	x6, x20
   1c15c:	b	1bfa4 <ZSTD_compress@@Base+0xd758>
   1c160:	mov	x0, #0xc9ff                	// #51711
   1c164:	add	x3, sp, #0xb8
   1c168:	movk	x0, #0x3b9a, lsl #16
   1c16c:	mov	x2, x28
   1c170:	mov	x1, x20
   1c174:	stp	x6, x8, [sp, #160]
   1c178:	str	x0, [sp, #184]
   1c17c:	mov	x0, x23
   1c180:	bl	18364 <ZSTD_compress@@Base+0x9b18>
   1c184:	mov	x11, x0
   1c188:	ldr	x6, [sp, #160]
   1c18c:	cbz	x0, 1c1a0 <ZSTD_compress@@Base+0xd954>
   1c190:	cmp	x0, #0x3
   1c194:	ldr	x8, [sp, #168]
   1c198:	ldr	x2, [sp, #184]
   1c19c:	b.hi	1c1b4 <ZSTD_compress@@Base+0xd968>  // b.pmore
   1c1a0:	sub	x0, x20, x6
   1c1a4:	asr	x0, x0, #8
   1c1a8:	add	x0, x0, #0x1
   1c1ac:	add	x20, x20, x0
   1c1b0:	b	1bfa4 <ZSTD_compress@@Base+0xd758>
   1c1b4:	cbz	x2, 1c060 <ZSTD_compress@@Base+0xd814>
   1c1b8:	sub	w1, w8, w2
   1c1bc:	mov	w4, w2
   1c1c0:	add	w0, w1, #0x2
   1c1c4:	add	w1, w1, #0x2
   1c1c8:	cmp	w26, w0
   1c1cc:	b.ls	1c218 <ZSTD_compress@@Base+0xd9cc>  // b.plast
   1c1d0:	ldp	x3, x0, [sp, #136]
   1c1d4:	sub	x1, x1, x0
   1c1d8:	ldr	x0, [sp, #104]
   1c1dc:	add	x1, x0, x1
   1c1e0:	mov	x5, x20
   1c1e4:	add	x0, x20, x11
   1c1e8:	cmp	x6, x5
   1c1ec:	sub	x11, x0, x5
   1c1f0:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
   1c1f4:	b.ls	1c208 <ZSTD_compress@@Base+0xd9bc>  // b.plast
   1c1f8:	ldurb	w12, [x5, #-1]
   1c1fc:	ldurb	w8, [x1, #-1]
   1c200:	cmp	w12, w8
   1c204:	b.eq	1c224 <ZSTD_compress@@Base+0xd9d8>  // b.none
   1c208:	mov	w19, w21
   1c20c:	mov	x20, x5
   1c210:	sub	w21, w4, #0x2
   1c214:	b	1c060 <ZSTD_compress@@Base+0xd814>
   1c218:	add	x1, x22, x1
   1c21c:	mov	x3, x25
   1c220:	b	1c1e0 <ZSTD_compress@@Base+0xd994>
   1c224:	sub	x5, x5, #0x1
   1c228:	sub	x1, x1, #0x1
   1c22c:	b	1c1e8 <ZSTD_compress@@Base+0xd99c>
   1c230:	mov	x3, x27
   1c234:	mov	x2, x20
   1c238:	mov	x1, x6
   1c23c:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1c240:	b	1c0d0 <ZSTD_compress@@Base+0xd884>
   1c244:	ldr	x1, [sp, #144]
   1c248:	sub	x2, x20, x22
   1c24c:	ldr	x3, [sp, #104]
   1c250:	sub	w0, w2, w19
   1c254:	sub	x1, x0, x1
   1c258:	sub	w4, w2, w19
   1c25c:	add	x3, x3, x1
   1c260:	add	x1, x22, x0
   1c264:	ldr	w0, [sp, #152]
   1c268:	cmp	w26, w4
   1c26c:	csel	x1, x1, x3, ls  // ls = plast
   1c270:	add	w0, w19, w0
   1c274:	sub	w0, w0, w2
   1c278:	cmp	w0, #0x2
   1c27c:	b.ls	1c158 <ZSTD_compress@@Base+0xd90c>  // b.plast
   1c280:	ldr	w0, [x1]
   1c284:	ldr	w2, [x20]
   1c288:	cmp	w2, w0
   1c28c:	b.ne	1c158 <ZSTD_compress@@Base+0xd90c>  // b.any
   1c290:	cmp	w26, w4
   1c294:	mov	x2, x28
   1c298:	ldr	x0, [sp, #112]
   1c29c:	mov	x4, x25
   1c2a0:	add	x1, x1, #0x4
   1c2a4:	csel	x3, x0, x28, hi  // hi = pmore
   1c2a8:	add	x0, x20, #0x4
   1c2ac:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1c2b0:	add	x11, x0, #0x4
   1c2b4:	add	x8, x0, #0x1
   1c2b8:	cmp	x27, x20
   1c2bc:	ldr	x0, [x24, #24]
   1c2c0:	b.cc	1c314 <ZSTD_compress@@Base+0xdac8>  // b.lo, b.ul, b.last
   1c2c4:	ldp	x2, x3, [x20]
   1c2c8:	stp	x2, x3, [x0]
   1c2cc:	mov	w1, #0x1                   	// #1
   1c2d0:	ldr	x0, [x24, #8]
   1c2d4:	cmp	x8, x13
   1c2d8:	str	w1, [x0]
   1c2dc:	strh	wzr, [x0, #4]
   1c2e0:	b.ls	1c2f4 <ZSTD_compress@@Base+0xdaa8>  // b.plast
   1c2e4:	ldr	x1, [x24]
   1c2e8:	sub	x1, x0, x1
   1c2ec:	asr	x1, x1, #3
   1c2f0:	stp	w14, w1, [x24, #72]
   1c2f4:	add	x0, x0, #0x8
   1c2f8:	sturh	w8, [x0, #-2]
   1c2fc:	str	x0, [x24, #8]
   1c300:	mov	w0, w21
   1c304:	add	x20, x20, x11
   1c308:	mov	w21, w19
   1c30c:	mov	w19, w0
   1c310:	b	1c14c <ZSTD_compress@@Base+0xd900>
   1c314:	mov	x3, x27
   1c318:	mov	x2, x20
   1c31c:	mov	x1, x20
   1c320:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1c324:	b	1c2cc <ZSTD_compress@@Base+0xda80>
   1c328:	stp	x29, x30, [sp, #-240]!
   1c32c:	mov	x18, x3
   1c330:	mov	x29, sp
   1c334:	stp	x19, x20, [sp, #16]
   1c338:	mov	x20, x0
   1c33c:	mov	x19, x1
   1c340:	stp	x21, x22, [sp, #32]
   1c344:	add	x21, x3, x4
   1c348:	sub	x0, x21, #0x8
   1c34c:	stp	x23, x24, [sp, #48]
   1c350:	ldr	w24, [x20, #24]
   1c354:	str	x0, [sp, #200]
   1c358:	ldr	x0, [x20, #8]
   1c35c:	str	x0, [sp, #104]
   1c360:	sub	w0, w24, #0x1
   1c364:	str	w0, [sp, #232]
   1c368:	ldr	w0, [x20, #28]
   1c36c:	str	w0, [sp, #176]
   1c370:	ldr	x0, [sp, #104]
   1c374:	stp	x25, x26, [sp, #64]
   1c378:	mov	w25, #0x1                   	// #1
   1c37c:	stp	x27, x28, [sp, #80]
   1c380:	add	x0, x0, w24, uxtw
   1c384:	str	x0, [sp, #144]
   1c388:	ldr	x0, [x20, #16]
   1c38c:	str	x0, [sp, #120]
   1c390:	str	x2, [sp, #152]
   1c394:	ldr	x1, [sp, #120]
   1c398:	add	x0, x0, w24, uxtw
   1c39c:	str	x0, [sp, #208]
   1c3a0:	ldr	w0, [sp, #176]
   1c3a4:	add	x0, x1, w0, uxtw
   1c3a8:	str	x0, [sp, #224]
   1c3ac:	ldr	w0, [x2]
   1c3b0:	str	w0, [sp, #116]
   1c3b4:	ldr	w0, [x2, #4]
   1c3b8:	str	w0, [sp, #136]
   1c3bc:	ldr	x0, [sp, #144]
   1c3c0:	cmp	x3, x0
   1c3c4:	sub	x0, x21, #0x20
   1c3c8:	cinc	x26, x3, eq  // eq = none
   1c3cc:	str	x0, [sp, #160]
   1c3d0:	ldr	x0, [sp, #200]
   1c3d4:	cmp	x0, x26
   1c3d8:	b.hi	1c410 <ZSTD_compress@@Base+0xdbc4>  // b.pmore
   1c3dc:	ldr	x0, [sp, #152]
   1c3e0:	ldr	w1, [sp, #116]
   1c3e4:	ldp	x19, x20, [sp, #16]
   1c3e8:	ldp	x23, x24, [sp, #48]
   1c3ec:	ldp	x25, x26, [sp, #64]
   1c3f0:	ldp	x27, x28, [sp, #80]
   1c3f4:	str	w1, [x0]
   1c3f8:	ldr	w1, [sp, #136]
   1c3fc:	str	w1, [x0, #4]
   1c400:	sub	x0, x21, x18
   1c404:	ldp	x21, x22, [sp, #32]
   1c408:	ldp	x29, x30, [sp], #240
   1c40c:	ret
   1c410:	ldr	x0, [sp, #104]
   1c414:	ldr	x2, [sp, #104]
   1c418:	sub	x0, x26, x0
   1c41c:	str	x0, [sp, #216]
   1c420:	ldr	w0, [sp, #116]
   1c424:	ldr	w1, [sp, #216]
   1c428:	sub	w0, w25, w0
   1c42c:	add	w0, w0, w1
   1c430:	ldr	x1, [sp, #120]
   1c434:	cmp	w24, w0
   1c438:	csel	x2, x1, x2, hi  // hi = pmore
   1c43c:	ldr	w1, [sp, #232]
   1c440:	sub	w1, w1, w0
   1c444:	cmp	w1, #0x2
   1c448:	ldr	w1, [sp, #176]
   1c44c:	ccmp	w1, w0, #0x2, hi  // hi = pmore
   1c450:	b.cs	1c58c <ZSTD_compress@@Base+0xdd40>  // b.hs, b.nlast
   1c454:	ldr	w3, [x2, w0, uxtw]
   1c458:	add	x1, x2, w0, uxtw
   1c45c:	ldur	w2, [x26, #1]
   1c460:	cmp	w3, w2
   1c464:	b.ne	1c58c <ZSTD_compress@@Base+0xdd40>  // b.any
   1c468:	ldr	x4, [sp, #144]
   1c46c:	cmp	w24, w0
   1c470:	add	x13, x26, #0x1
   1c474:	mov	x2, x21
   1c478:	ldr	x0, [sp, #208]
   1c47c:	add	x1, x1, #0x4
   1c480:	csel	x3, x0, x21, hi  // hi = pmore
   1c484:	add	x0, x26, #0x5
   1c488:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1c48c:	add	x14, x0, #0x4
   1c490:	mov	x26, x13
   1c494:	mov	x15, #0x0                   	// #0
   1c498:	ldr	x1, [sp, #160]
   1c49c:	sub	x9, x26, x18
   1c4a0:	sub	x10, x14, #0x3
   1c4a4:	cmp	x26, x1
   1c4a8:	ldr	x0, [x19, #24]
   1c4ac:	b.hi	1c9e8 <ZSTD_compress@@Base+0xe19c>  // b.pmore
   1c4b0:	ldp	x2, x3, [x18]
   1c4b4:	stp	x2, x3, [x0]
   1c4b8:	cmp	x9, #0x10
   1c4bc:	b.ls	1c508 <ZSTD_compress@@Base+0xdcbc>  // b.plast
   1c4c0:	ldr	x2, [x19, #24]
   1c4c4:	ldp	x0, x1, [x18, #16]
   1c4c8:	add	x3, x2, x9
   1c4cc:	stp	x0, x1, [x2, #16]
   1c4d0:	add	x2, x2, #0x30
   1c4d4:	ldp	x0, x1, [x18, #32]
   1c4d8:	stp	x0, x1, [x2, #-16]
   1c4dc:	cmp	x3, x2
   1c4e0:	b.ls	1c508 <ZSTD_compress@@Base+0xdcbc>  // b.plast
   1c4e4:	add	x18, x18, #0x30
   1c4e8:	ldp	x0, x1, [x18]
   1c4ec:	stp	x0, x1, [x2]
   1c4f0:	add	x2, x2, #0x20
   1c4f4:	ldp	x0, x1, [x18, #16]
   1c4f8:	stp	x0, x1, [x2, #-16]
   1c4fc:	add	x18, x18, #0x20
   1c500:	cmp	x3, x2
   1c504:	b.hi	1c4e8 <ZSTD_compress@@Base+0xdc9c>  // b.pmore
   1c508:	ldr	x0, [x19, #24]
   1c50c:	mov	x1, #0xffff                	// #65535
   1c510:	cmp	x9, x1
   1c514:	add	x0, x0, x9
   1c518:	str	x0, [x19, #24]
   1c51c:	ldr	x0, [x19, #8]
   1c520:	b.ls	1c534 <ZSTD_compress@@Base+0xdce8>  // b.plast
   1c524:	ldr	x1, [x19]
   1c528:	sub	x1, x0, x1
   1c52c:	asr	x1, x1, #3
   1c530:	stp	w25, w1, [x19, #72]
   1c534:	add	w8, w15, #0x1
   1c538:	str	w8, [x0]
   1c53c:	strh	w9, [x0, #4]
   1c540:	mov	x1, #0xffff                	// #65535
   1c544:	cmp	x10, x1
   1c548:	b.ls	1c564 <ZSTD_compress@@Base+0xdd18>  // b.plast
   1c54c:	mov	w1, #0x2                   	// #2
   1c550:	str	w1, [x19, #72]
   1c554:	ldr	x1, [x19]
   1c558:	sub	x1, x0, x1
   1c55c:	asr	x1, x1, #3
   1c560:	str	w1, [x19, #76]
   1c564:	add	x26, x26, x14
   1c568:	strh	w10, [x0, #6]
   1c56c:	mov	w13, #0x2                   	// #2
   1c570:	add	x0, x0, #0x8
   1c574:	str	x0, [x19, #8]
   1c578:	ldr	x0, [sp, #200]
   1c57c:	cmp	x0, x26
   1c580:	b.cs	1c9fc <ZSTD_compress@@Base+0xe1b0>  // b.hs, b.nlast
   1c584:	mov	x18, x26
   1c588:	b	1c3d0 <ZSTD_compress@@Base+0xdb84>
   1c58c:	ldr	w2, [x20, #188]
   1c590:	add	x1, x20, #0xb8
   1c594:	ldr	x0, [x20, #64]
   1c598:	str	x0, [sp, #184]
   1c59c:	lsl	w2, w25, w2
   1c5a0:	sub	w0, w2, #0x1
   1c5a4:	str	w0, [sp, #180]
   1c5a8:	ldr	x0, [x20, #8]
   1c5ac:	str	x0, [sp, #128]
   1c5b0:	ldr	x0, [x20, #16]
   1c5b4:	str	x0, [sp, #96]
   1c5b8:	ldr	w0, [x20, #24]
   1c5bc:	ldr	x4, [sp, #128]
   1c5c0:	str	w0, [sp, #140]
   1c5c4:	mov	w0, w0
   1c5c8:	ldr	w22, [x20, #28]
   1c5cc:	ldr	w3, [x20, #200]
   1c5d0:	add	x0, x4, w0, uxtw
   1c5d4:	str	x0, [sp, #192]
   1c5d8:	ldr	x4, [sp, #96]
   1c5dc:	cmp	w3, #0x5
   1c5e0:	ldr	w0, [sp, #140]
   1c5e4:	add	x0, x4, w0, uxtw
   1c5e8:	str	x0, [sp, #168]
   1c5ec:	ldr	x0, [sp, #128]
   1c5f0:	ldr	w4, [x20, #184]
   1c5f4:	sub	x0, x26, x0
   1c5f8:	mov	w23, w0
   1c5fc:	sub	w7, w0, w22
   1c600:	lsl	w4, w25, w4
   1c604:	b.eq	1c814 <ZSTD_compress@@Base+0xdfc8>  // b.none
   1c608:	sub	w3, w3, #0x6
   1c60c:	ldr	w6, [x20, #32]
   1c610:	cmp	w3, #0x1
   1c614:	sub	w3, w0, w4
   1c618:	b.hi	1c6ec <ZSTD_compress@@Base+0xdea0>  // b.pmore
   1c61c:	cmp	w4, w7
   1c620:	sub	w28, w0, w2
   1c624:	csel	w3, w3, w22, cc  // cc = lo, ul, last
   1c628:	cmp	w6, #0x0
   1c62c:	csel	w22, w22, w3, ne  // ne = any
   1c630:	cmp	w2, w0
   1c634:	csel	w0, w28, wzr, cc  // cc = lo, ul, last
   1c638:	ldr	w27, [x1, #12]
   1c63c:	mov	x2, x26
   1c640:	mov	w3, #0x6                   	// #6
   1c644:	str	w0, [sp, #236]
   1c648:	mov	x0, x20
   1c64c:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1c650:	add	w23, w23, #0x2
   1c654:	mov	x15, #0xc9ff                	// #51711
   1c658:	mov	w28, w0
   1c65c:	add	x13, x26, #0x4
   1c660:	lsl	w27, w25, w27
   1c664:	movk	x15, #0x3b9a, lsl #16
   1c668:	mov	x14, #0x3                   	// #3
   1c66c:	cmp	w27, #0x0
   1c670:	ccmp	w28, w22, #0x0, ne  // ne = any
   1c674:	b.ls	1c748 <ZSTD_compress@@Base+0xdefc>  // b.plast
   1c678:	ldr	w1, [sp, #140]
   1c67c:	mov	w0, w28
   1c680:	cmp	w28, w1
   1c684:	b.cc	1c924 <ZSTD_compress@@Base+0xe0d8>  // b.lo, b.ul, b.last
   1c688:	ldr	x1, [sp, #128]
   1c68c:	add	x1, x1, x0
   1c690:	ldrb	w0, [x26, x14]
   1c694:	ldrb	w2, [x1, x14]
   1c698:	cmp	w2, w0
   1c69c:	b.ne	1c6c8 <ZSTD_compress@@Base+0xde7c>  // b.any
   1c6a0:	mov	x2, x21
   1c6a4:	mov	x0, x26
   1c6a8:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1c6ac:	cmp	x14, x0
   1c6b0:	b.cs	1c6c8 <ZSTD_compress@@Base+0xde7c>  // b.hs, b.nlast
   1c6b4:	add	x1, x26, x0
   1c6b8:	sub	w15, w23, w28
   1c6bc:	mov	x14, x0
   1c6c0:	cmp	x21, x1
   1c6c4:	b.eq	1c748 <ZSTD_compress@@Base+0xdefc>  // b.none
   1c6c8:	ldr	w0, [sp, #236]
   1c6cc:	cmp	w28, w0
   1c6d0:	b.ls	1c748 <ZSTD_compress@@Base+0xdefc>  // b.plast
   1c6d4:	ldr	w0, [sp, #180]
   1c6d8:	sub	w27, w27, #0x1
   1c6dc:	and	w6, w28, w0
   1c6e0:	ldr	x0, [sp, #184]
   1c6e4:	ldr	w28, [x0, x6, lsl #2]
   1c6e8:	b	1c66c <ZSTD_compress@@Base+0xde20>
   1c6ec:	cmp	w4, w7
   1c6f0:	sub	w28, w0, w2
   1c6f4:	csel	w3, w3, w22, cc  // cc = lo, ul, last
   1c6f8:	cmp	w6, #0x0
   1c6fc:	csel	w22, w22, w3, ne  // ne = any
   1c700:	cmp	w2, w0
   1c704:	csel	w0, w28, wzr, cc  // cc = lo, ul, last
   1c708:	ldr	w27, [x1, #12]
   1c70c:	mov	x2, x26
   1c710:	mov	w3, #0x4                   	// #4
   1c714:	str	w0, [sp, #236]
   1c718:	mov	x0, x20
   1c71c:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1c720:	add	w23, w23, #0x2
   1c724:	mov	x15, #0xc9ff                	// #51711
   1c728:	mov	w28, w0
   1c72c:	add	x13, x26, #0x4
   1c730:	lsl	w27, w25, w27
   1c734:	movk	x15, #0x3b9a, lsl #16
   1c738:	mov	x14, #0x3                   	// #3
   1c73c:	cmp	w27, #0x0
   1c740:	ccmp	w28, w22, #0x0, ne  // ne = any
   1c744:	b.hi	1c764 <ZSTD_compress@@Base+0xdf18>  // b.pmore
   1c748:	cmp	x14, #0x3
   1c74c:	b.hi	1c960 <ZSTD_compress@@Base+0xe114>  // b.pmore
   1c750:	sub	x0, x26, x18
   1c754:	asr	x0, x0, #8
   1c758:	add	x0, x0, #0x1
   1c75c:	add	x26, x26, x0
   1c760:	b	1c3d0 <ZSTD_compress@@Base+0xdb84>
   1c764:	ldr	w1, [sp, #140]
   1c768:	mov	w0, w28
   1c76c:	cmp	w28, w1
   1c770:	b.cc	1c7d8 <ZSTD_compress@@Base+0xdf8c>  // b.lo, b.ul, b.last
   1c774:	ldr	x1, [sp, #128]
   1c778:	add	x1, x1, x0
   1c77c:	ldrb	w0, [x26, x14]
   1c780:	ldrb	w2, [x1, x14]
   1c784:	cmp	w2, w0
   1c788:	b.ne	1c7b4 <ZSTD_compress@@Base+0xdf68>  // b.any
   1c78c:	mov	x2, x21
   1c790:	mov	x0, x26
   1c794:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1c798:	cmp	x14, x0
   1c79c:	b.cs	1c7b4 <ZSTD_compress@@Base+0xdf68>  // b.hs, b.nlast
   1c7a0:	add	x1, x26, x0
   1c7a4:	sub	w15, w23, w28
   1c7a8:	mov	x14, x0
   1c7ac:	cmp	x21, x1
   1c7b0:	b.eq	1c748 <ZSTD_compress@@Base+0xdefc>  // b.none
   1c7b4:	ldr	w0, [sp, #236]
   1c7b8:	cmp	w28, w0
   1c7bc:	b.ls	1c748 <ZSTD_compress@@Base+0xdefc>  // b.plast
   1c7c0:	ldr	w0, [sp, #180]
   1c7c4:	sub	w27, w27, #0x1
   1c7c8:	and	w6, w28, w0
   1c7cc:	ldr	x0, [sp, #184]
   1c7d0:	ldr	w28, [x0, x6, lsl #2]
   1c7d4:	b	1c73c <ZSTD_compress@@Base+0xdef0>
   1c7d8:	ldr	x3, [sp, #96]
   1c7dc:	ldr	x1, [sp, #96]
   1c7e0:	ldr	w2, [x26]
   1c7e4:	add	x1, x1, x0
   1c7e8:	ldr	w0, [x3, x0]
   1c7ec:	cmp	w2, w0
   1c7f0:	b.ne	1c7b4 <ZSTD_compress@@Base+0xdf68>  // b.any
   1c7f4:	ldr	x3, [sp, #168]
   1c7f8:	mov	x2, x21
   1c7fc:	ldr	x4, [sp, #192]
   1c800:	add	x1, x1, #0x4
   1c804:	mov	x0, x13
   1c808:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1c80c:	add	x0, x0, #0x4
   1c810:	b	1c798 <ZSTD_compress@@Base+0xdf4c>
   1c814:	sub	w6, w0, w4
   1c818:	cmp	w4, w7
   1c81c:	csel	w4, w6, w22, cc  // cc = lo, ul, last
   1c820:	ldr	w6, [x20, #32]
   1c824:	sub	w28, w0, w2
   1c828:	ldr	w27, [x1, #12]
   1c82c:	cmp	w6, #0x0
   1c830:	add	w23, w0, #0x2
   1c834:	csel	w22, w22, w4, ne  // ne = any
   1c838:	cmp	w2, w0
   1c83c:	csel	w0, w28, wzr, cc  // cc = lo, ul, last
   1c840:	mov	x2, x26
   1c844:	str	w0, [sp, #236]
   1c848:	mov	x0, x20
   1c84c:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1c850:	mov	w28, w0
   1c854:	mov	x15, #0xc9ff                	// #51711
   1c858:	add	x13, x26, #0x4
   1c85c:	lsl	w27, w25, w27
   1c860:	movk	x15, #0x3b9a, lsl #16
   1c864:	mov	x14, #0x3                   	// #3
   1c868:	cmp	w27, #0x0
   1c86c:	ccmp	w28, w22, #0x0, ne  // ne = any
   1c870:	b.ls	1c748 <ZSTD_compress@@Base+0xdefc>  // b.plast
   1c874:	ldr	w1, [sp, #140]
   1c878:	mov	w0, w28
   1c87c:	cmp	w28, w1
   1c880:	b.cc	1c8e8 <ZSTD_compress@@Base+0xe09c>  // b.lo, b.ul, b.last
   1c884:	ldr	x1, [sp, #128]
   1c888:	add	x1, x1, x0
   1c88c:	ldrb	w0, [x26, x14]
   1c890:	ldrb	w2, [x1, x14]
   1c894:	cmp	w2, w0
   1c898:	b.ne	1c8c4 <ZSTD_compress@@Base+0xe078>  // b.any
   1c89c:	mov	x2, x21
   1c8a0:	mov	x0, x26
   1c8a4:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1c8a8:	cmp	x14, x0
   1c8ac:	b.cs	1c8c4 <ZSTD_compress@@Base+0xe078>  // b.hs, b.nlast
   1c8b0:	add	x1, x26, x0
   1c8b4:	sub	w15, w23, w28
   1c8b8:	mov	x14, x0
   1c8bc:	cmp	x21, x1
   1c8c0:	b.eq	1c748 <ZSTD_compress@@Base+0xdefc>  // b.none
   1c8c4:	ldr	w0, [sp, #236]
   1c8c8:	cmp	w28, w0
   1c8cc:	b.ls	1c748 <ZSTD_compress@@Base+0xdefc>  // b.plast
   1c8d0:	ldr	w0, [sp, #180]
   1c8d4:	sub	w27, w27, #0x1
   1c8d8:	and	w6, w28, w0
   1c8dc:	ldr	x0, [sp, #184]
   1c8e0:	ldr	w28, [x0, x6, lsl #2]
   1c8e4:	b	1c868 <ZSTD_compress@@Base+0xe01c>
   1c8e8:	ldr	x3, [sp, #96]
   1c8ec:	ldr	x1, [sp, #96]
   1c8f0:	ldr	w2, [x26]
   1c8f4:	add	x1, x1, x0
   1c8f8:	ldr	w0, [x3, x0]
   1c8fc:	cmp	w2, w0
   1c900:	b.ne	1c8c4 <ZSTD_compress@@Base+0xe078>  // b.any
   1c904:	ldr	x3, [sp, #168]
   1c908:	mov	x2, x21
   1c90c:	ldr	x4, [sp, #192]
   1c910:	add	x1, x1, #0x4
   1c914:	mov	x0, x13
   1c918:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1c91c:	add	x0, x0, #0x4
   1c920:	b	1c8a8 <ZSTD_compress@@Base+0xe05c>
   1c924:	ldr	x3, [sp, #96]
   1c928:	ldr	x1, [sp, #96]
   1c92c:	ldr	w2, [x26]
   1c930:	add	x1, x1, x0
   1c934:	ldr	w0, [x3, x0]
   1c938:	cmp	w2, w0
   1c93c:	b.ne	1c6c8 <ZSTD_compress@@Base+0xde7c>  // b.any
   1c940:	ldr	x3, [sp, #168]
   1c944:	mov	x2, x21
   1c948:	ldr	x4, [sp, #192]
   1c94c:	add	x1, x1, #0x4
   1c950:	mov	x0, x13
   1c954:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1c958:	add	x0, x0, #0x4
   1c95c:	b	1c6ac <ZSTD_compress@@Base+0xde60>
   1c960:	cbz	x15, 1c498 <ZSTD_compress@@Base+0xdc4c>
   1c964:	ldr	w0, [sp, #216]
   1c968:	mov	w3, w15
   1c96c:	add	w1, w0, #0x2
   1c970:	sub	w0, w1, w15
   1c974:	sub	w1, w1, w15
   1c978:	cmp	w24, w0
   1c97c:	b.ls	1c9cc <ZSTD_compress@@Base+0xe180>  // b.plast
   1c980:	ldr	x0, [sp, #120]
   1c984:	ldr	x2, [sp, #224]
   1c988:	add	x1, x0, x1
   1c98c:	mov	x5, x26
   1c990:	add	x0, x26, x14
   1c994:	cmp	x18, x5
   1c998:	sub	x14, x0, x5
   1c99c:	ccmp	x1, x2, #0x0, cc  // cc = lo, ul, last
   1c9a0:	b.ls	1c9b4 <ZSTD_compress@@Base+0xe168>  // b.plast
   1c9a4:	ldurb	w6, [x5, #-1]
   1c9a8:	ldurb	w4, [x1, #-1]
   1c9ac:	cmp	w6, w4
   1c9b0:	b.eq	1c9dc <ZSTD_compress@@Base+0xe190>  // b.none
   1c9b4:	ldr	w0, [sp, #116]
   1c9b8:	mov	x26, x5
   1c9bc:	str	w0, [sp, #136]
   1c9c0:	sub	w0, w3, #0x2
   1c9c4:	str	w0, [sp, #116]
   1c9c8:	b	1c498 <ZSTD_compress@@Base+0xdc4c>
   1c9cc:	ldr	x0, [sp, #104]
   1c9d0:	ldr	x2, [sp, #144]
   1c9d4:	add	x1, x0, x1
   1c9d8:	b	1c98c <ZSTD_compress@@Base+0xe140>
   1c9dc:	sub	x5, x5, #0x1
   1c9e0:	sub	x1, x1, #0x1
   1c9e4:	b	1c994 <ZSTD_compress@@Base+0xe148>
   1c9e8:	ldr	x3, [sp, #160]
   1c9ec:	mov	x2, x26
   1c9f0:	mov	x1, x18
   1c9f4:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1c9f8:	b	1c508 <ZSTD_compress@@Base+0xdcbc>
   1c9fc:	ldr	x0, [sp, #104]
   1ca00:	ldr	x2, [sp, #104]
   1ca04:	sub	x4, x26, x0
   1ca08:	ldr	w0, [sp, #136]
   1ca0c:	ldr	x1, [sp, #120]
   1ca10:	sub	w6, w4, w0
   1ca14:	cmp	w24, w6
   1ca18:	ldr	w5, [sp, #136]
   1ca1c:	csel	x3, x1, x2, hi  // hi = pmore
   1ca20:	ldr	w2, [sp, #232]
   1ca24:	add	x1, x3, w6, uxtw
   1ca28:	add	w2, w2, w5
   1ca2c:	sub	w2, w2, w4
   1ca30:	cmp	w2, #0x2
   1ca34:	ldr	w2, [sp, #176]
   1ca38:	ccmp	w2, w6, #0x2, hi  // hi = pmore
   1ca3c:	b.cs	1c584 <ZSTD_compress@@Base+0xdd38>  // b.hs, b.nlast
   1ca40:	ldr	w3, [x3, x6]
   1ca44:	ldr	w2, [x26]
   1ca48:	cmp	w3, w2
   1ca4c:	b.ne	1c584 <ZSTD_compress@@Base+0xdd38>  // b.any
   1ca50:	ldr	x4, [sp, #144]
   1ca54:	cmp	w24, w6
   1ca58:	ldr	x0, [sp, #208]
   1ca5c:	add	x1, x1, #0x4
   1ca60:	mov	x2, x21
   1ca64:	csel	x3, x0, x21, hi  // hi = pmore
   1ca68:	add	x0, x26, #0x4
   1ca6c:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1ca70:	add	x9, x0, #0x4
   1ca74:	ldr	x1, [sp, #160]
   1ca78:	add	x8, x0, #0x1
   1ca7c:	ldr	x0, [x19, #24]
   1ca80:	cmp	x1, x26
   1ca84:	b.cc	1cadc <ZSTD_compress@@Base+0xe290>  // b.lo, b.ul, b.last
   1ca88:	ldp	x2, x3, [x26]
   1ca8c:	stp	x2, x3, [x0]
   1ca90:	mov	x1, #0xffff                	// #65535
   1ca94:	ldr	x0, [x19, #8]
   1ca98:	cmp	x8, x1
   1ca9c:	str	w25, [x0]
   1caa0:	strh	wzr, [x0, #4]
   1caa4:	b.ls	1cab8 <ZSTD_compress@@Base+0xe26c>  // b.plast
   1caa8:	ldr	x1, [x19]
   1caac:	sub	x1, x0, x1
   1cab0:	asr	x1, x1, #3
   1cab4:	stp	w13, w1, [x19, #72]
   1cab8:	add	x0, x0, #0x8
   1cabc:	sturh	w8, [x0, #-2]
   1cac0:	ldr	w1, [sp, #136]
   1cac4:	add	x26, x26, x9
   1cac8:	str	x0, [x19, #8]
   1cacc:	ldr	w0, [sp, #116]
   1cad0:	str	w1, [sp, #116]
   1cad4:	str	w0, [sp, #136]
   1cad8:	b	1c578 <ZSTD_compress@@Base+0xdd2c>
   1cadc:	ldr	x3, [sp, #160]
   1cae0:	mov	x2, x26
   1cae4:	mov	x1, x26
   1cae8:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1caec:	b	1ca90 <ZSTD_compress@@Base+0xe244>
   1caf0:	stp	x29, x30, [sp, #-272]!
   1caf4:	mov	x18, x0
   1caf8:	mov	x29, sp
   1cafc:	stp	x19, x20, [sp, #16]
   1cb00:	add	x19, x3, x4
   1cb04:	sub	x0, x19, #0x8
   1cb08:	str	x0, [sp, #200]
   1cb0c:	ldr	x0, [x18, #8]
   1cb10:	str	x0, [sp, #112]
   1cb14:	ldr	w0, [x18, #24]
   1cb18:	str	w0, [sp, #136]
   1cb1c:	mov	w0, w0
   1cb20:	stp	x21, x22, [sp, #32]
   1cb24:	sub	w0, w0, #0x1
   1cb28:	mov	x22, x1
   1cb2c:	str	w0, [sp, #264]
   1cb30:	ldr	w0, [x18, #28]
   1cb34:	mov	x21, x3
   1cb38:	ldr	x1, [sp, #112]
   1cb3c:	str	w0, [sp, #172]
   1cb40:	ldr	w0, [sp, #136]
   1cb44:	stp	x23, x24, [sp, #48]
   1cb48:	add	x0, x1, w0, uxtw
   1cb4c:	str	x0, [sp, #144]
   1cb50:	ldr	x0, [x18, #16]
   1cb54:	str	x0, [sp, #128]
   1cb58:	ldr	w0, [sp, #136]
   1cb5c:	ldr	x1, [sp, #128]
   1cb60:	stp	x25, x26, [sp, #64]
   1cb64:	stp	x27, x28, [sp, #80]
   1cb68:	add	x0, x1, w0, uxtw
   1cb6c:	str	x0, [sp, #208]
   1cb70:	ldr	w0, [sp, #172]
   1cb74:	str	x2, [sp, #184]
   1cb78:	add	x0, x1, w0, uxtw
   1cb7c:	str	x0, [sp, #248]
   1cb80:	ldr	w0, [x2]
   1cb84:	str	w0, [sp, #140]
   1cb88:	ldr	w0, [x2, #4]
   1cb8c:	str	w0, [sp, #168]
   1cb90:	ldr	x0, [sp, #144]
   1cb94:	cmp	x3, x0
   1cb98:	sub	x0, x19, #0x20
   1cb9c:	cinc	x26, x3, eq  // eq = none
   1cba0:	str	x0, [sp, #192]
   1cba4:	ldr	x0, [sp, #200]
   1cba8:	cmp	x0, x26
   1cbac:	b.hi	1cbe4 <ZSTD_compress@@Base+0xe398>  // b.pmore
   1cbb0:	ldr	x0, [sp, #184]
   1cbb4:	ldr	w1, [sp, #140]
   1cbb8:	ldp	x23, x24, [sp, #48]
   1cbbc:	ldp	x25, x26, [sp, #64]
   1cbc0:	ldp	x27, x28, [sp, #80]
   1cbc4:	str	w1, [x0]
   1cbc8:	ldr	w1, [sp, #168]
   1cbcc:	str	w1, [x0, #4]
   1cbd0:	sub	x0, x19, x21
   1cbd4:	ldp	x19, x20, [sp, #16]
   1cbd8:	ldp	x21, x22, [sp, #32]
   1cbdc:	ldp	x29, x30, [sp], #272
   1cbe0:	ret
   1cbe4:	ldr	x0, [sp, #112]
   1cbe8:	mov	w1, #0x1                   	// #1
   1cbec:	ldr	w2, [sp, #140]
   1cbf0:	sub	x0, x26, x0
   1cbf4:	sub	w1, w1, w2
   1cbf8:	add	w0, w1, w0
   1cbfc:	str	w0, [sp, #100]
   1cc00:	ldr	w0, [sp, #136]
   1cc04:	ldr	w1, [sp, #100]
   1cc08:	ldr	w2, [sp, #100]
   1cc0c:	cmp	w0, w1
   1cc10:	ldr	x1, [sp, #112]
   1cc14:	ldr	x0, [sp, #128]
   1cc18:	csel	x0, x0, x1, hi  // hi = pmore
   1cc1c:	ldr	w1, [sp, #264]
   1cc20:	sub	w1, w1, w2
   1cc24:	cmp	w1, #0x2
   1cc28:	ldr	w1, [sp, #172]
   1cc2c:	ccmp	w1, w2, #0x2, hi  // hi = pmore
   1cc30:	b.cs	1cde8 <ZSTD_compress@@Base+0xe59c>  // b.hs, b.nlast
   1cc34:	add	x1, x0, w2, uxtw
   1cc38:	ldr	w2, [x0, w2, uxtw]
   1cc3c:	ldur	w0, [x26, #1]
   1cc40:	cmp	w2, w0
   1cc44:	b.ne	1cde8 <ZSTD_compress@@Base+0xe59c>  // b.any
   1cc48:	ldr	w2, [sp, #100]
   1cc4c:	add	x1, x1, #0x4
   1cc50:	ldr	w0, [sp, #136]
   1cc54:	ldr	x4, [sp, #144]
   1cc58:	cmp	w0, w2
   1cc5c:	ldr	x0, [sp, #208]
   1cc60:	mov	x2, x19
   1cc64:	csel	x3, x0, x19, hi  // hi = pmore
   1cc68:	add	x0, x26, #0x5
   1cc6c:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1cc70:	add	x0, x0, #0x4
   1cc74:	str	x0, [sp, #176]
   1cc78:	ldr	w1, [x18, #188]
   1cc7c:	mov	w4, #0x1                   	// #1
   1cc80:	ldr	x0, [x18, #64]
   1cc84:	str	x0, [sp, #216]
   1cc88:	mov	w0, #0x1                   	// #1
   1cc8c:	ldr	w23, [x18, #28]
   1cc90:	lsl	w1, w0, w1
   1cc94:	sub	w0, w1, #0x1
   1cc98:	str	w0, [sp, #224]
   1cc9c:	add	x25, x18, #0xb8
   1cca0:	ldr	x0, [x18, #8]
   1cca4:	str	x0, [sp, #152]
   1cca8:	ldr	x0, [x18, #16]
   1ccac:	str	x0, [sp, #120]
   1ccb0:	ldr	w0, [x18, #24]
   1ccb4:	ldr	x2, [sp, #152]
   1ccb8:	str	w0, [sp, #160]
   1ccbc:	mov	w0, w0
   1ccc0:	ldr	w3, [x18, #200]
   1ccc4:	add	x0, x2, w0, uxtw
   1ccc8:	str	x0, [sp, #232]
   1cccc:	ldr	x2, [sp, #120]
   1ccd0:	cmp	w3, #0x5
   1ccd4:	ldr	w0, [sp, #160]
   1ccd8:	add	x0, x2, w0, uxtw
   1ccdc:	str	x0, [sp, #240]
   1cce0:	ldr	x0, [sp, #152]
   1cce4:	ldr	w2, [x18, #184]
   1cce8:	sub	x0, x26, x0
   1ccec:	mov	w24, w0
   1ccf0:	sub	w6, w0, w23
   1ccf4:	lsl	w2, w4, w2
   1ccf8:	b.eq	1cf34 <ZSTD_compress@@Base+0xe6e8>  // b.none
   1ccfc:	sub	w3, w3, #0x6
   1cd00:	cmp	w3, w4
   1cd04:	ldr	w4, [x18, #32]
   1cd08:	sub	w3, w0, w2
   1cd0c:	b.hi	1cdf0 <ZSTD_compress@@Base+0xe5a4>  // b.pmore
   1cd10:	cmp	w2, w6
   1cd14:	ldr	w27, [x25, #12]
   1cd18:	csel	w2, w3, w23, cc  // cc = lo, ul, last
   1cd1c:	cmp	w4, #0x0
   1cd20:	csel	w23, w23, w2, ne  // ne = any
   1cd24:	cmp	w1, w0
   1cd28:	sub	w28, w0, w1
   1cd2c:	mov	w0, #0x1                   	// #1
   1cd30:	csel	w28, w28, wzr, cc  // cc = lo, ul, last
   1cd34:	mov	x2, x26
   1cd38:	mov	x1, x25
   1cd3c:	mov	w3, #0x6                   	// #6
   1cd40:	lsl	w27, w0, w27
   1cd44:	mov	x0, x18
   1cd48:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1cd4c:	add	w24, w24, #0x2
   1cd50:	mov	w14, w0
   1cd54:	add	x13, x26, #0x4
   1cd58:	mov	x0, #0xc9ff                	// #51711
   1cd5c:	mov	x20, #0x3                   	// #3
   1cd60:	movk	x0, #0x3b9a, lsl #16
   1cd64:	str	x0, [sp, #104]
   1cd68:	cmp	w27, #0x0
   1cd6c:	ccmp	w14, w23, #0x0, ne  // ne = any
   1cd70:	b.ls	1ce54 <ZSTD_compress@@Base+0xe608>  // b.plast
   1cd74:	ldr	w1, [sp, #160]
   1cd78:	mov	w0, w14
   1cd7c:	cmp	w14, w1
   1cd80:	b.cc	1d048 <ZSTD_compress@@Base+0xe7fc>  // b.lo, b.ul, b.last
   1cd84:	ldr	x1, [sp, #152]
   1cd88:	add	x1, x1, x0
   1cd8c:	ldrb	w0, [x26, x20]
   1cd90:	ldrb	w2, [x1, x20]
   1cd94:	cmp	w2, w0
   1cd98:	b.ne	1cdc8 <ZSTD_compress@@Base+0xe57c>  // b.any
   1cd9c:	mov	x2, x19
   1cda0:	mov	x0, x26
   1cda4:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1cda8:	cmp	x20, x0
   1cdac:	b.cs	1cdc8 <ZSTD_compress@@Base+0xe57c>  // b.hs, b.nlast
   1cdb0:	sub	w1, w24, w14
   1cdb4:	str	x1, [sp, #104]
   1cdb8:	add	x1, x26, x0
   1cdbc:	mov	x20, x0
   1cdc0:	cmp	x19, x1
   1cdc4:	b.eq	1ce54 <ZSTD_compress@@Base+0xe608>  // b.none
   1cdc8:	cmp	w14, w28
   1cdcc:	b.ls	1ce54 <ZSTD_compress@@Base+0xe608>  // b.plast
   1cdd0:	ldr	w0, [sp, #224]
   1cdd4:	sub	w27, w27, #0x1
   1cdd8:	and	w14, w14, w0
   1cddc:	ldr	x0, [sp, #216]
   1cde0:	ldr	w14, [x0, x14, lsl #2]
   1cde4:	b	1cd68 <ZSTD_compress@@Base+0xe51c>
   1cde8:	str	xzr, [sp, #176]
   1cdec:	b	1cc78 <ZSTD_compress@@Base+0xe42c>
   1cdf0:	cmp	w2, w6
   1cdf4:	ldr	w27, [x25, #12]
   1cdf8:	csel	w2, w3, w23, cc  // cc = lo, ul, last
   1cdfc:	cmp	w4, #0x0
   1ce00:	csel	w23, w23, w2, ne  // ne = any
   1ce04:	cmp	w1, w0
   1ce08:	sub	w28, w0, w1
   1ce0c:	mov	w0, #0x1                   	// #1
   1ce10:	csel	w28, w28, wzr, cc  // cc = lo, ul, last
   1ce14:	mov	x2, x26
   1ce18:	mov	x1, x25
   1ce1c:	mov	w3, #0x4                   	// #4
   1ce20:	lsl	w27, w0, w27
   1ce24:	mov	x0, x18
   1ce28:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1ce2c:	add	w24, w24, #0x2
   1ce30:	mov	w14, w0
   1ce34:	add	x13, x26, #0x4
   1ce38:	mov	x0, #0xc9ff                	// #51711
   1ce3c:	mov	x20, #0x3                   	// #3
   1ce40:	movk	x0, #0x3b9a, lsl #16
   1ce44:	str	x0, [sp, #104]
   1ce48:	cmp	w27, #0x0
   1ce4c:	ccmp	w14, w23, #0x0, ne  // ne = any
   1ce50:	b.hi	1ce88 <ZSTD_compress@@Base+0xe63c>  // b.pmore
   1ce54:	ldr	x0, [sp, #176]
   1ce58:	cmp	x0, x20
   1ce5c:	b.cc	1d080 <ZSTD_compress@@Base+0xe834>  // b.lo, b.ul, b.last
   1ce60:	add	x23, x26, #0x1
   1ce64:	mov	x20, x0
   1ce68:	str	xzr, [sp, #104]
   1ce6c:	cmp	x20, #0x3
   1ce70:	b.hi	1d090 <ZSTD_compress@@Base+0xe844>  // b.pmore
   1ce74:	sub	x0, x26, x21
   1ce78:	asr	x0, x0, #8
   1ce7c:	add	x0, x0, #0x1
   1ce80:	add	x26, x26, x0
   1ce84:	b	1cba4 <ZSTD_compress@@Base+0xe358>
   1ce88:	ldr	w1, [sp, #160]
   1ce8c:	mov	w0, w14
   1ce90:	cmp	w14, w1
   1ce94:	b.cc	1cefc <ZSTD_compress@@Base+0xe6b0>  // b.lo, b.ul, b.last
   1ce98:	ldr	x1, [sp, #152]
   1ce9c:	add	x1, x1, x0
   1cea0:	ldrb	w0, [x26, x20]
   1cea4:	ldrb	w2, [x1, x20]
   1cea8:	cmp	w2, w0
   1ceac:	b.ne	1cedc <ZSTD_compress@@Base+0xe690>  // b.any
   1ceb0:	mov	x2, x19
   1ceb4:	mov	x0, x26
   1ceb8:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1cebc:	cmp	x20, x0
   1cec0:	b.cs	1cedc <ZSTD_compress@@Base+0xe690>  // b.hs, b.nlast
   1cec4:	sub	w1, w24, w14
   1cec8:	str	x1, [sp, #104]
   1cecc:	add	x1, x26, x0
   1ced0:	mov	x20, x0
   1ced4:	cmp	x19, x1
   1ced8:	b.eq	1ce54 <ZSTD_compress@@Base+0xe608>  // b.none
   1cedc:	cmp	w14, w28
   1cee0:	b.ls	1ce54 <ZSTD_compress@@Base+0xe608>  // b.plast
   1cee4:	ldr	w0, [sp, #224]
   1cee8:	sub	w27, w27, #0x1
   1ceec:	and	w14, w14, w0
   1cef0:	ldr	x0, [sp, #216]
   1cef4:	ldr	w14, [x0, x14, lsl #2]
   1cef8:	b	1ce48 <ZSTD_compress@@Base+0xe5fc>
   1cefc:	ldr	x3, [sp, #120]
   1cf00:	ldr	x1, [sp, #120]
   1cf04:	ldr	w2, [x26]
   1cf08:	add	x1, x1, x0
   1cf0c:	ldr	w0, [x3, x0]
   1cf10:	cmp	w2, w0
   1cf14:	b.ne	1cedc <ZSTD_compress@@Base+0xe690>  // b.any
   1cf18:	ldp	x4, x3, [sp, #232]
   1cf1c:	mov	x2, x19
   1cf20:	add	x1, x1, #0x4
   1cf24:	mov	x0, x13
   1cf28:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1cf2c:	add	x0, x0, #0x4
   1cf30:	b	1cebc <ZSTD_compress@@Base+0xe670>
   1cf34:	sub	w4, w0, w2
   1cf38:	cmp	w2, w6
   1cf3c:	csel	w2, w4, w23, cc  // cc = lo, ul, last
   1cf40:	ldr	w4, [x18, #32]
   1cf44:	ldr	w27, [x25, #12]
   1cf48:	sub	w28, w0, w1
   1cf4c:	cmp	w4, #0x0
   1cf50:	add	w24, w0, #0x2
   1cf54:	csel	w23, w23, w2, ne  // ne = any
   1cf58:	cmp	w1, w0
   1cf5c:	mov	w0, #0x1                   	// #1
   1cf60:	csel	w28, w28, wzr, cc  // cc = lo, ul, last
   1cf64:	mov	x2, x26
   1cf68:	mov	x1, x25
   1cf6c:	lsl	w27, w0, w27
   1cf70:	mov	x0, x18
   1cf74:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1cf78:	mov	w14, w0
   1cf7c:	add	x13, x26, #0x4
   1cf80:	mov	x0, #0xc9ff                	// #51711
   1cf84:	movk	x0, #0x3b9a, lsl #16
   1cf88:	mov	x20, #0x3                   	// #3
   1cf8c:	str	x0, [sp, #104]
   1cf90:	cmp	w27, #0x0
   1cf94:	ccmp	w14, w23, #0x0, ne  // ne = any
   1cf98:	b.ls	1ce54 <ZSTD_compress@@Base+0xe608>  // b.plast
   1cf9c:	ldr	w1, [sp, #160]
   1cfa0:	mov	w0, w14
   1cfa4:	cmp	w14, w1
   1cfa8:	b.cc	1d010 <ZSTD_compress@@Base+0xe7c4>  // b.lo, b.ul, b.last
   1cfac:	ldr	x1, [sp, #152]
   1cfb0:	add	x1, x1, x0
   1cfb4:	ldrb	w0, [x26, x20]
   1cfb8:	ldrb	w2, [x1, x20]
   1cfbc:	cmp	w2, w0
   1cfc0:	b.ne	1cff0 <ZSTD_compress@@Base+0xe7a4>  // b.any
   1cfc4:	mov	x2, x19
   1cfc8:	mov	x0, x26
   1cfcc:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1cfd0:	cmp	x20, x0
   1cfd4:	b.cs	1cff0 <ZSTD_compress@@Base+0xe7a4>  // b.hs, b.nlast
   1cfd8:	sub	w1, w24, w14
   1cfdc:	str	x1, [sp, #104]
   1cfe0:	add	x1, x26, x0
   1cfe4:	mov	x20, x0
   1cfe8:	cmp	x19, x1
   1cfec:	b.eq	1ce54 <ZSTD_compress@@Base+0xe608>  // b.none
   1cff0:	cmp	w14, w28
   1cff4:	b.ls	1ce54 <ZSTD_compress@@Base+0xe608>  // b.plast
   1cff8:	ldr	w0, [sp, #224]
   1cffc:	sub	w27, w27, #0x1
   1d000:	and	w14, w14, w0
   1d004:	ldr	x0, [sp, #216]
   1d008:	ldr	w14, [x0, x14, lsl #2]
   1d00c:	b	1cf90 <ZSTD_compress@@Base+0xe744>
   1d010:	ldr	x3, [sp, #120]
   1d014:	ldr	x1, [sp, #120]
   1d018:	ldr	w2, [x26]
   1d01c:	add	x1, x1, x0
   1d020:	ldr	w0, [x3, x0]
   1d024:	cmp	w2, w0
   1d028:	b.ne	1cff0 <ZSTD_compress@@Base+0xe7a4>  // b.any
   1d02c:	ldp	x4, x3, [sp, #232]
   1d030:	mov	x2, x19
   1d034:	add	x1, x1, #0x4
   1d038:	mov	x0, x13
   1d03c:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1d040:	add	x0, x0, #0x4
   1d044:	b	1cfd0 <ZSTD_compress@@Base+0xe784>
   1d048:	ldr	x3, [sp, #120]
   1d04c:	ldr	x1, [sp, #120]
   1d050:	ldr	w2, [x26]
   1d054:	add	x1, x1, x0
   1d058:	ldr	w0, [x3, x0]
   1d05c:	cmp	w2, w0
   1d060:	b.ne	1cdc8 <ZSTD_compress@@Base+0xe57c>  // b.any
   1d064:	ldp	x4, x3, [sp, #232]
   1d068:	mov	x2, x19
   1d06c:	add	x1, x1, #0x4
   1d070:	mov	x0, x13
   1d074:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1d078:	add	x0, x0, #0x4
   1d07c:	b	1cda8 <ZSTD_compress@@Base+0xe55c>
   1d080:	mov	x23, x26
   1d084:	b	1ce6c <ZSTD_compress@@Base+0xe620>
   1d088:	mov	x20, x13
   1d08c:	str	x15, [sp, #104]
   1d090:	ldr	x0, [sp, #104]
   1d094:	add	x26, x26, #0x1
   1d098:	cbz	x0, 1d148 <ZSTD_compress@@Base+0xe8fc>
   1d09c:	ldr	w1, [sp, #100]
   1d0a0:	ldr	w0, [sp, #136]
   1d0a4:	ldr	w2, [sp, #100]
   1d0a8:	cmp	w0, w1
   1d0ac:	ldr	x1, [sp, #112]
   1d0b0:	ldr	x0, [sp, #128]
   1d0b4:	csel	x0, x0, x1, hi  // hi = pmore
   1d0b8:	ldr	w1, [sp, #264]
   1d0bc:	sub	w1, w1, w2
   1d0c0:	cmp	w1, #0x2
   1d0c4:	ldr	w1, [sp, #172]
   1d0c8:	ccmp	w1, w2, #0x2, hi  // hi = pmore
   1d0cc:	b.cs	1d148 <ZSTD_compress@@Base+0xe8fc>  // b.hs, b.nlast
   1d0d0:	add	x1, x0, w2, uxtw
   1d0d4:	ldr	w2, [x0, w2, uxtw]
   1d0d8:	ldr	w0, [x26]
   1d0dc:	cmp	w2, w0
   1d0e0:	b.ne	1d148 <ZSTD_compress@@Base+0xe8fc>  // b.any
   1d0e4:	ldr	w2, [sp, #100]
   1d0e8:	add	x1, x1, #0x4
   1d0ec:	ldr	w0, [sp, #136]
   1d0f0:	ldr	x4, [sp, #144]
   1d0f4:	cmp	w0, w2
   1d0f8:	ldr	x0, [sp, #208]
   1d0fc:	mov	x2, x19
   1d100:	csel	x3, x0, x19, hi  // hi = pmore
   1d104:	add	x0, x26, #0x4
   1d108:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1d10c:	add	x0, x0, #0x4
   1d110:	ldr	w1, [sp, #104]
   1d114:	add	w3, w0, w0, lsl #1
   1d118:	add	w2, w1, #0x1
   1d11c:	add	w1, w20, w20, lsl #1
   1d120:	clz	w2, w2
   1d124:	add	w1, w1, #0x1
   1d128:	eor	w2, w2, #0x1f
   1d12c:	sub	w1, w1, w2
   1d130:	cmp	w3, w1
   1d134:	ccmp	x0, #0x3, #0x0, gt
   1d138:	b.ls	1d148 <ZSTD_compress@@Base+0xe8fc>  // b.plast
   1d13c:	mov	x23, x26
   1d140:	mov	x20, x0
   1d144:	str	xzr, [sp, #104]
   1d148:	ldr	w1, [x18, #188]
   1d14c:	mov	w5, #0x1                   	// #1
   1d150:	ldr	x0, [x18, #64]
   1d154:	str	x0, [sp, #160]
   1d158:	mov	w0, #0x1                   	// #1
   1d15c:	ldr	w24, [x18, #28]
   1d160:	lsl	w1, w0, w1
   1d164:	sub	w0, w1, #0x1
   1d168:	str	w0, [sp, #176]
   1d16c:	add	x4, x18, #0xb8
   1d170:	ldr	x0, [x18, #8]
   1d174:	str	x0, [sp, #120]
   1d178:	ldr	w0, [x18, #24]
   1d17c:	ldr	x2, [sp, #120]
   1d180:	str	w0, [sp, #152]
   1d184:	mov	w0, w0
   1d188:	ldr	w3, [x18, #200]
   1d18c:	ldr	x27, [x18, #16]
   1d190:	add	x0, x2, w0, uxtw
   1d194:	str	x0, [sp, #216]
   1d198:	cmp	w3, #0x5
   1d19c:	ldr	w0, [sp, #152]
   1d1a0:	add	x0, x27, w0, uxtw
   1d1a4:	str	x0, [sp, #224]
   1d1a8:	sub	x0, x26, x2
   1d1ac:	ldr	w2, [x18, #184]
   1d1b0:	str	w0, [sp, #232]
   1d1b4:	sub	w7, w0, w24
   1d1b8:	lsl	w2, w5, w2
   1d1bc:	b.eq	1d520 <ZSTD_compress@@Base+0xecd4>  // b.none
   1d1c0:	sub	w3, w3, #0x6
   1d1c4:	ldr	w6, [x18, #32]
   1d1c8:	cmp	w3, w5
   1d1cc:	sub	w3, w0, w2
   1d1d0:	b.hi	1d248 <ZSTD_compress@@Base+0xe9fc>  // b.pmore
   1d1d4:	cmp	w2, w7
   1d1d8:	ldr	w28, [x4, #12]
   1d1dc:	csel	w2, w3, w24, cc  // cc = lo, ul, last
   1d1e0:	cmp	w6, #0x0
   1d1e4:	csel	w24, w24, w2, ne  // ne = any
   1d1e8:	cmp	w1, w0
   1d1ec:	sub	w2, w0, w1
   1d1f0:	mov	w3, #0x6                   	// #6
   1d1f4:	csel	w0, w2, wzr, cc  // cc = lo, ul, last
   1d1f8:	mov	x1, x25
   1d1fc:	mov	x2, x26
   1d200:	lsl	w28, w5, w28
   1d204:	str	w0, [sp, #240]
   1d208:	mov	x0, x18
   1d20c:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1d210:	mov	w6, w0
   1d214:	ldr	w0, [sp, #232]
   1d218:	mov	x15, #0xc9ff                	// #51711
   1d21c:	movk	x15, #0x3b9a, lsl #16
   1d220:	mov	x14, #0x3                   	// #3
   1d224:	add	w0, w0, #0x2
   1d228:	str	w0, [sp, #232]
   1d22c:	add	x0, x26, #0x4
   1d230:	str	x0, [sp, #256]
   1d234:	cmp	w28, #0x0
   1d238:	ccmp	w6, w24, #0x0, ne  // ne = any
   1d23c:	b.hi	1d63c <ZSTD_compress@@Base+0xedf0>  // b.pmore
   1d240:	mov	x13, x14
   1d244:	b	1d2b8 <ZSTD_compress@@Base+0xea6c>
   1d248:	cmp	w2, w7
   1d24c:	ldr	w28, [x4, #12]
   1d250:	csel	w2, w3, w24, cc  // cc = lo, ul, last
   1d254:	cmp	w6, #0x0
   1d258:	csel	w24, w24, w2, ne  // ne = any
   1d25c:	sub	w2, w0, w1
   1d260:	cmp	w1, w0
   1d264:	mov	w3, #0x4                   	// #4
   1d268:	csel	w0, w2, wzr, cc  // cc = lo, ul, last
   1d26c:	str	w0, [sp, #240]
   1d270:	mov	w0, #0x1                   	// #1
   1d274:	mov	x2, x26
   1d278:	mov	x1, x25
   1d27c:	lsl	w28, w0, w28
   1d280:	mov	x0, x18
   1d284:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1d288:	mov	w14, w0
   1d28c:	ldr	w0, [sp, #232]
   1d290:	mov	x15, #0xc9ff                	// #51711
   1d294:	mov	x13, #0x3                   	// #3
   1d298:	add	w0, w0, #0x2
   1d29c:	movk	x15, #0x3b9a, lsl #16
   1d2a0:	str	w0, [sp, #232]
   1d2a4:	add	x0, x26, #0x4
   1d2a8:	str	x0, [sp, #256]
   1d2ac:	cmp	w28, #0x0
   1d2b0:	ccmp	w14, w24, #0x0, ne  // ne = any
   1d2b4:	b.hi	1d478 <ZSTD_compress@@Base+0xec2c>  // b.pmore
   1d2b8:	ldr	w1, [sp, #104]
   1d2bc:	add	w0, w15, #0x1
   1d2c0:	clz	w0, w0
   1d2c4:	eor	w0, w0, #0x1f
   1d2c8:	add	w2, w1, #0x1
   1d2cc:	lsl	w1, w13, #2
   1d2d0:	clz	w2, w2
   1d2d4:	sub	w1, w1, w0
   1d2d8:	add	w0, w20, #0x1
   1d2dc:	eor	w2, w2, #0x1f
   1d2e0:	lsl	w0, w0, #2
   1d2e4:	sub	w0, w0, w2
   1d2e8:	cmp	w1, w0
   1d2ec:	ccmp	x13, #0x3, #0x0, gt
   1d2f0:	b.ls	1d6f4 <ZSTD_compress@@Base+0xeea8>  // b.plast
   1d2f4:	ldr	w0, [sp, #100]
   1d2f8:	mov	x23, x26
   1d2fc:	add	w0, w0, #0x1
   1d300:	str	w0, [sp, #100]
   1d304:	ldr	x0, [sp, #200]
   1d308:	cmp	x0, x26
   1d30c:	b.hi	1d088 <ZSTD_compress@@Base+0xe83c>  // b.pmore
   1d310:	mov	w8, w15
   1d314:	cbz	x15, 1d378 <ZSTD_compress@@Base+0xeb2c>
   1d318:	ldr	x0, [sp, #112]
   1d31c:	ldr	w2, [sp, #136]
   1d320:	sub	x1, x23, x0
   1d324:	sub	w1, w1, w15
   1d328:	add	w0, w1, #0x2
   1d32c:	add	w1, w1, #0x2
   1d330:	cmp	w2, w0
   1d334:	b.ls	1d700 <ZSTD_compress@@Base+0xeeb4>  // b.plast
   1d338:	ldr	x0, [sp, #128]
   1d33c:	ldr	x2, [sp, #248]
   1d340:	add	x1, x0, x1
   1d344:	add	x0, x23, x13
   1d348:	cmp	x21, x23
   1d34c:	sub	x13, x0, x23
   1d350:	ccmp	x1, x2, #0x0, cc  // cc = lo, ul, last
   1d354:	b.ls	1d368 <ZSTD_compress@@Base+0xeb1c>  // b.plast
   1d358:	ldurb	w4, [x23, #-1]
   1d35c:	ldurb	w3, [x1, #-1]
   1d360:	cmp	w4, w3
   1d364:	b.eq	1d710 <ZSTD_compress@@Base+0xeec4>  // b.none
   1d368:	ldr	w0, [sp, #140]
   1d36c:	str	w0, [sp, #168]
   1d370:	sub	w0, w8, #0x2
   1d374:	str	w0, [sp, #140]
   1d378:	ldr	x1, [sp, #192]
   1d37c:	sub	x5, x23, x21
   1d380:	sub	x9, x13, #0x3
   1d384:	cmp	x23, x1
   1d388:	ldr	x0, [x22, #24]
   1d38c:	b.hi	1d71c <ZSTD_compress@@Base+0xeed0>  // b.pmore
   1d390:	ldp	x2, x3, [x21]
   1d394:	stp	x2, x3, [x0]
   1d398:	cmp	x5, #0x10
   1d39c:	b.ls	1d3e8 <ZSTD_compress@@Base+0xeb9c>  // b.plast
   1d3a0:	ldr	x2, [x22, #24]
   1d3a4:	ldp	x0, x1, [x21, #16]
   1d3a8:	add	x3, x2, x5
   1d3ac:	stp	x0, x1, [x2, #16]
   1d3b0:	add	x2, x2, #0x30
   1d3b4:	ldp	x0, x1, [x21, #32]
   1d3b8:	stp	x0, x1, [x2, #-16]
   1d3bc:	cmp	x3, x2
   1d3c0:	b.ls	1d3e8 <ZSTD_compress@@Base+0xeb9c>  // b.plast
   1d3c4:	add	x21, x21, #0x30
   1d3c8:	ldp	x0, x1, [x21]
   1d3cc:	stp	x0, x1, [x2]
   1d3d0:	add	x2, x2, #0x20
   1d3d4:	ldp	x0, x1, [x21, #16]
   1d3d8:	stp	x0, x1, [x2, #-16]
   1d3dc:	add	x21, x21, #0x20
   1d3e0:	cmp	x3, x2
   1d3e4:	b.hi	1d3c8 <ZSTD_compress@@Base+0xeb7c>  // b.pmore
   1d3e8:	ldr	x0, [x22, #24]
   1d3ec:	mov	x1, #0xffff                	// #65535
   1d3f0:	cmp	x5, x1
   1d3f4:	add	x0, x0, x5
   1d3f8:	str	x0, [x22, #24]
   1d3fc:	ldr	x0, [x22, #8]
   1d400:	b.ls	1d41c <ZSTD_compress@@Base+0xebd0>  // b.plast
   1d404:	mov	w1, #0x1                   	// #1
   1d408:	str	w1, [x22, #72]
   1d40c:	ldr	x1, [x22]
   1d410:	sub	x1, x0, x1
   1d414:	asr	x1, x1, #3
   1d418:	str	w1, [x22, #76]
   1d41c:	add	w8, w8, #0x1
   1d420:	str	w8, [x0]
   1d424:	strh	w5, [x0, #4]
   1d428:	mov	x1, #0xffff                	// #65535
   1d42c:	cmp	x9, x1
   1d430:	b.ls	1d44c <ZSTD_compress@@Base+0xec00>  // b.plast
   1d434:	mov	w1, #0x2                   	// #2
   1d438:	str	w1, [x22, #72]
   1d43c:	ldr	x1, [x22]
   1d440:	sub	x1, x0, x1
   1d444:	asr	x1, x1, #3
   1d448:	str	w1, [x22, #76]
   1d44c:	strh	w9, [x0, #6]
   1d450:	add	x26, x23, x13
   1d454:	add	x0, x0, #0x8
   1d458:	mov	x13, #0xffff                	// #65535
   1d45c:	mov	w14, #0x2                   	// #2
   1d460:	str	x0, [x22, #8]
   1d464:	ldr	x0, [sp, #200]
   1d468:	cmp	x0, x26
   1d46c:	b.cs	1d730 <ZSTD_compress@@Base+0xeee4>  // b.hs, b.nlast
   1d470:	mov	x21, x26
   1d474:	b	1cba4 <ZSTD_compress@@Base+0xe358>
   1d478:	ldr	w1, [sp, #152]
   1d47c:	mov	w0, w14
   1d480:	cmp	w14, w1
   1d484:	b.cc	1d4f0 <ZSTD_compress@@Base+0xeca4>  // b.lo, b.ul, b.last
   1d488:	ldr	x1, [sp, #120]
   1d48c:	add	x1, x1, x0
   1d490:	ldrb	w0, [x26, x13]
   1d494:	ldrb	w2, [x1, x13]
   1d498:	cmp	w2, w0
   1d49c:	b.ne	1d4cc <ZSTD_compress@@Base+0xec80>  // b.any
   1d4a0:	mov	x2, x19
   1d4a4:	mov	x0, x26
   1d4a8:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1d4ac:	cmp	x13, x0
   1d4b0:	b.cs	1d4cc <ZSTD_compress@@Base+0xec80>  // b.hs, b.nlast
   1d4b4:	ldr	w1, [sp, #232]
   1d4b8:	mov	x13, x0
   1d4bc:	sub	w15, w1, w14
   1d4c0:	add	x1, x26, x0
   1d4c4:	cmp	x19, x1
   1d4c8:	b.eq	1d2b8 <ZSTD_compress@@Base+0xea6c>  // b.none
   1d4cc:	ldr	w0, [sp, #240]
   1d4d0:	cmp	w14, w0
   1d4d4:	b.ls	1d2b8 <ZSTD_compress@@Base+0xea6c>  // b.plast
   1d4d8:	ldr	w0, [sp, #176]
   1d4dc:	sub	w28, w28, #0x1
   1d4e0:	and	w6, w14, w0
   1d4e4:	ldr	x0, [sp, #160]
   1d4e8:	ldr	w14, [x0, x6, lsl #2]
   1d4ec:	b	1d2ac <ZSTD_compress@@Base+0xea60>
   1d4f0:	ldr	w2, [x26]
   1d4f4:	add	x1, x27, x0
   1d4f8:	ldr	w0, [x27, x0]
   1d4fc:	cmp	w2, w0
   1d500:	b.ne	1d4cc <ZSTD_compress@@Base+0xec80>  // b.any
   1d504:	ldp	x4, x3, [sp, #216]
   1d508:	mov	x2, x19
   1d50c:	ldr	x0, [sp, #256]
   1d510:	add	x1, x1, #0x4
   1d514:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1d518:	add	x0, x0, #0x4
   1d51c:	b	1d4ac <ZSTD_compress@@Base+0xec60>
   1d520:	sub	w6, w0, w2
   1d524:	cmp	w2, w7
   1d528:	csel	w2, w6, w24, cc  // cc = lo, ul, last
   1d52c:	ldr	w6, [x18, #32]
   1d530:	ldr	w28, [x4, #12]
   1d534:	cmp	w6, #0x0
   1d538:	csel	w24, w24, w2, ne  // ne = any
   1d53c:	sub	w2, w0, w1
   1d540:	cmp	w1, w0
   1d544:	mov	x1, x25
   1d548:	csel	w0, w2, wzr, cc  // cc = lo, ul, last
   1d54c:	str	w0, [sp, #240]
   1d550:	mov	w0, #0x1                   	// #1
   1d554:	mov	x2, x26
   1d558:	lsl	w28, w0, w28
   1d55c:	mov	x0, x18
   1d560:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1d564:	mov	w14, w0
   1d568:	ldr	w0, [sp, #232]
   1d56c:	mov	x15, #0xc9ff                	// #51711
   1d570:	movk	x15, #0x3b9a, lsl #16
   1d574:	mov	x13, #0x3                   	// #3
   1d578:	add	w0, w0, #0x2
   1d57c:	str	w0, [sp, #232]
   1d580:	add	x0, x26, #0x4
   1d584:	str	x0, [sp, #256]
   1d588:	cmp	w28, #0x0
   1d58c:	ccmp	w14, w24, #0x0, ne  // ne = any
   1d590:	b.ls	1d2b8 <ZSTD_compress@@Base+0xea6c>  // b.plast
   1d594:	ldr	w1, [sp, #152]
   1d598:	mov	w0, w14
   1d59c:	cmp	w14, w1
   1d5a0:	b.cc	1d60c <ZSTD_compress@@Base+0xedc0>  // b.lo, b.ul, b.last
   1d5a4:	ldr	x1, [sp, #120]
   1d5a8:	add	x1, x1, x0
   1d5ac:	ldrb	w0, [x26, x13]
   1d5b0:	ldrb	w2, [x1, x13]
   1d5b4:	cmp	w2, w0
   1d5b8:	b.ne	1d5e8 <ZSTD_compress@@Base+0xed9c>  // b.any
   1d5bc:	mov	x2, x19
   1d5c0:	mov	x0, x26
   1d5c4:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1d5c8:	cmp	x13, x0
   1d5cc:	b.cs	1d5e8 <ZSTD_compress@@Base+0xed9c>  // b.hs, b.nlast
   1d5d0:	ldr	w1, [sp, #232]
   1d5d4:	mov	x13, x0
   1d5d8:	sub	w15, w1, w14
   1d5dc:	add	x1, x26, x0
   1d5e0:	cmp	x19, x1
   1d5e4:	b.eq	1d2b8 <ZSTD_compress@@Base+0xea6c>  // b.none
   1d5e8:	ldr	w0, [sp, #240]
   1d5ec:	cmp	w14, w0
   1d5f0:	b.ls	1d2b8 <ZSTD_compress@@Base+0xea6c>  // b.plast
   1d5f4:	ldr	w0, [sp, #176]
   1d5f8:	sub	w28, w28, #0x1
   1d5fc:	and	w6, w14, w0
   1d600:	ldr	x0, [sp, #160]
   1d604:	ldr	w14, [x0, x6, lsl #2]
   1d608:	b	1d588 <ZSTD_compress@@Base+0xed3c>
   1d60c:	ldr	w2, [x26]
   1d610:	add	x1, x27, x0
   1d614:	ldr	w0, [x27, x0]
   1d618:	cmp	w2, w0
   1d61c:	b.ne	1d5e8 <ZSTD_compress@@Base+0xed9c>  // b.any
   1d620:	ldp	x4, x3, [sp, #216]
   1d624:	mov	x2, x19
   1d628:	ldr	x0, [sp, #256]
   1d62c:	add	x1, x1, #0x4
   1d630:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1d634:	add	x0, x0, #0x4
   1d638:	b	1d5c8 <ZSTD_compress@@Base+0xed7c>
   1d63c:	ldr	w1, [sp, #152]
   1d640:	mov	w0, w6
   1d644:	cmp	w6, w1
   1d648:	b.cc	1d6c0 <ZSTD_compress@@Base+0xee74>  // b.lo, b.ul, b.last
   1d64c:	ldr	x1, [sp, #120]
   1d650:	add	x1, x1, x0
   1d654:	ldrb	w0, [x26, x14]
   1d658:	ldrb	w2, [x1, x14]
   1d65c:	cmp	w2, w0
   1d660:	b.ne	1d69c <ZSTD_compress@@Base+0xee50>  // b.any
   1d664:	mov	x2, x19
   1d668:	mov	x0, x26
   1d66c:	str	w6, [sp, #268]
   1d670:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1d674:	mov	x13, x0
   1d678:	ldr	w6, [sp, #268]
   1d67c:	cmp	x14, x13
   1d680:	b.cs	1d69c <ZSTD_compress@@Base+0xee50>  // b.hs, b.nlast
   1d684:	ldr	w0, [sp, #232]
   1d688:	sub	w15, w0, w6
   1d68c:	add	x0, x26, x13
   1d690:	cmp	x19, x0
   1d694:	b.eq	1d2b8 <ZSTD_compress@@Base+0xea6c>  // b.none
   1d698:	mov	x14, x13
   1d69c:	ldr	w0, [sp, #240]
   1d6a0:	cmp	w6, w0
   1d6a4:	b.ls	1d240 <ZSTD_compress@@Base+0xe9f4>  // b.plast
   1d6a8:	ldr	w0, [sp, #176]
   1d6ac:	sub	w28, w28, #0x1
   1d6b0:	and	w6, w6, w0
   1d6b4:	ldr	x0, [sp, #160]
   1d6b8:	ldr	w6, [x0, x6, lsl #2]
   1d6bc:	b	1d234 <ZSTD_compress@@Base+0xe9e8>
   1d6c0:	ldr	w2, [x26]
   1d6c4:	add	x1, x27, x0
   1d6c8:	ldr	w0, [x27, x0]
   1d6cc:	cmp	w2, w0
   1d6d0:	b.ne	1d69c <ZSTD_compress@@Base+0xee50>  // b.any
   1d6d4:	ldp	x4, x3, [sp, #216]
   1d6d8:	mov	x2, x19
   1d6dc:	ldr	x0, [sp, #256]
   1d6e0:	add	x1, x1, #0x4
   1d6e4:	str	w6, [sp, #268]
   1d6e8:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1d6ec:	add	x13, x0, #0x4
   1d6f0:	b	1d678 <ZSTD_compress@@Base+0xee2c>
   1d6f4:	mov	x13, x20
   1d6f8:	ldr	x15, [sp, #104]
   1d6fc:	b	1d310 <ZSTD_compress@@Base+0xeac4>
   1d700:	ldr	x0, [sp, #112]
   1d704:	ldr	x2, [sp, #144]
   1d708:	add	x1, x0, x1
   1d70c:	b	1d344 <ZSTD_compress@@Base+0xeaf8>
   1d710:	sub	x23, x23, #0x1
   1d714:	sub	x1, x1, #0x1
   1d718:	b	1d348 <ZSTD_compress@@Base+0xeafc>
   1d71c:	ldr	x3, [sp, #192]
   1d720:	mov	x2, x23
   1d724:	mov	x1, x21
   1d728:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1d72c:	b	1d3e8 <ZSTD_compress@@Base+0xeb9c>
   1d730:	ldr	x0, [sp, #112]
   1d734:	ldr	w1, [sp, #136]
   1d738:	sub	x4, x26, x0
   1d73c:	ldr	w0, [sp, #168]
   1d740:	ldr	x2, [sp, #112]
   1d744:	sub	w6, w4, w0
   1d748:	cmp	w1, w6
   1d74c:	ldr	w5, [sp, #168]
   1d750:	ldr	x1, [sp, #128]
   1d754:	csel	x3, x1, x2, hi  // hi = pmore
   1d758:	ldr	w2, [sp, #264]
   1d75c:	add	x1, x3, w6, uxtw
   1d760:	add	w2, w2, w5
   1d764:	sub	w2, w2, w4
   1d768:	cmp	w2, #0x2
   1d76c:	ldr	w2, [sp, #172]
   1d770:	ccmp	w2, w6, #0x2, hi  // hi = pmore
   1d774:	b.cs	1d470 <ZSTD_compress@@Base+0xec24>  // b.hs, b.nlast
   1d778:	ldr	w3, [x3, x6]
   1d77c:	ldr	w2, [x26]
   1d780:	cmp	w3, w2
   1d784:	b.ne	1d470 <ZSTD_compress@@Base+0xec24>  // b.any
   1d788:	ldr	w2, [sp, #136]
   1d78c:	add	x1, x1, #0x4
   1d790:	ldr	x4, [sp, #144]
   1d794:	cmp	w2, w6
   1d798:	ldr	x0, [sp, #208]
   1d79c:	mov	x2, x19
   1d7a0:	csel	x3, x0, x19, hi  // hi = pmore
   1d7a4:	add	x0, x26, #0x4
   1d7a8:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1d7ac:	add	x9, x0, #0x4
   1d7b0:	ldr	x1, [sp, #192]
   1d7b4:	add	x8, x0, #0x1
   1d7b8:	ldr	x0, [x22, #24]
   1d7bc:	cmp	x1, x26
   1d7c0:	b.cc	1d818 <ZSTD_compress@@Base+0xefcc>  // b.lo, b.ul, b.last
   1d7c4:	ldp	x2, x3, [x26]
   1d7c8:	stp	x2, x3, [x0]
   1d7cc:	mov	w1, #0x1                   	// #1
   1d7d0:	ldr	x0, [x22, #8]
   1d7d4:	cmp	x8, x13
   1d7d8:	str	w1, [x0]
   1d7dc:	strh	wzr, [x0, #4]
   1d7e0:	b.ls	1d7f4 <ZSTD_compress@@Base+0xefa8>  // b.plast
   1d7e4:	ldr	x1, [x22]
   1d7e8:	sub	x1, x0, x1
   1d7ec:	asr	x1, x1, #3
   1d7f0:	stp	w14, w1, [x22, #72]
   1d7f4:	add	x0, x0, #0x8
   1d7f8:	sturh	w8, [x0, #-2]
   1d7fc:	ldr	w1, [sp, #168]
   1d800:	add	x26, x26, x9
   1d804:	str	x0, [x22, #8]
   1d808:	ldr	w0, [sp, #140]
   1d80c:	str	w1, [sp, #140]
   1d810:	str	w0, [sp, #168]
   1d814:	b	1d464 <ZSTD_compress@@Base+0xec18>
   1d818:	ldr	x3, [sp, #192]
   1d81c:	mov	x2, x26
   1d820:	mov	x1, x26
   1d824:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1d828:	b	1d7cc <ZSTD_compress@@Base+0xef80>
   1d82c:	stp	x29, x30, [sp, #-288]!
   1d830:	mov	x18, x0
   1d834:	mov	x29, sp
   1d838:	stp	x19, x20, [sp, #16]
   1d83c:	add	x19, x3, x4
   1d840:	sub	x0, x19, #0x8
   1d844:	str	x0, [sp, #200]
   1d848:	ldr	x0, [x18, #8]
   1d84c:	str	x0, [sp, #136]
   1d850:	ldr	w0, [x18, #24]
   1d854:	str	w0, [sp, #120]
   1d858:	mov	w0, w0
   1d85c:	stp	x21, x22, [sp, #32]
   1d860:	sub	w0, w0, #0x1
   1d864:	mov	x21, x1
   1d868:	str	w0, [sp, #264]
   1d86c:	ldr	w0, [x18, #28]
   1d870:	ldr	x1, [sp, #136]
   1d874:	str	w0, [sp, #172]
   1d878:	ldr	w0, [sp, #120]
   1d87c:	stp	x23, x24, [sp, #48]
   1d880:	add	x0, x1, w0, uxtw
   1d884:	str	x0, [sp, #160]
   1d888:	ldr	x0, [x18, #16]
   1d88c:	str	x0, [sp, #144]
   1d890:	ldr	w0, [sp, #120]
   1d894:	ldr	x1, [sp, #144]
   1d898:	stp	x25, x26, [sp, #64]
   1d89c:	stp	x27, x28, [sp, #80]
   1d8a0:	add	x0, x1, w0, uxtw
   1d8a4:	str	x0, [sp, #208]
   1d8a8:	ldr	w0, [sp, #172]
   1d8ac:	str	x3, [sp, #104]
   1d8b0:	str	x2, [sp, #216]
   1d8b4:	add	x0, x1, w0, uxtw
   1d8b8:	str	x0, [sp, #256]
   1d8bc:	ldr	x1, [sp, #160]
   1d8c0:	ldr	w0, [x2]
   1d8c4:	str	w0, [sp, #124]
   1d8c8:	cmp	x3, x1
   1d8cc:	ldr	w0, [x2, #4]
   1d8d0:	cinc	x26, x3, eq  // eq = none
   1d8d4:	str	w0, [sp, #168]
   1d8d8:	ldr	w0, [sp, #120]
   1d8dc:	sub	w0, w0, #0x2
   1d8e0:	str	w0, [sp, #284]
   1d8e4:	ldr	x0, [sp, #200]
   1d8e8:	cmp	x0, x26
   1d8ec:	b.hi	1d928 <ZSTD_compress@@Base+0xf0dc>  // b.pmore
   1d8f0:	ldr	x0, [sp, #216]
   1d8f4:	ldr	w1, [sp, #124]
   1d8f8:	ldp	x21, x22, [sp, #32]
   1d8fc:	ldp	x23, x24, [sp, #48]
   1d900:	ldp	x25, x26, [sp, #64]
   1d904:	ldp	x27, x28, [sp, #80]
   1d908:	str	w1, [x0]
   1d90c:	ldr	w1, [sp, #168]
   1d910:	str	w1, [x0, #4]
   1d914:	ldr	x0, [sp, #104]
   1d918:	sub	x0, x19, x0
   1d91c:	ldp	x19, x20, [sp, #16]
   1d920:	ldp	x29, x30, [sp], #288
   1d924:	ret
   1d928:	ldr	x0, [sp, #136]
   1d92c:	ldr	w1, [sp, #124]
   1d930:	sub	x0, x26, x0
   1d934:	str	w0, [sp, #184]
   1d938:	sub	w0, w0, w1
   1d93c:	ldr	w1, [sp, #120]
   1d940:	add	w0, w0, #0x1
   1d944:	cmp	w1, w0
   1d948:	ldr	x2, [sp, #136]
   1d94c:	ldr	x1, [sp, #144]
   1d950:	csel	x2, x1, x2, hi  // hi = pmore
   1d954:	ldr	w1, [sp, #264]
   1d958:	sub	w1, w1, w0
   1d95c:	cmp	w1, #0x2
   1d960:	ldr	w1, [sp, #172]
   1d964:	ccmp	w1, w0, #0x2, hi  // hi = pmore
   1d968:	b.cs	1db00 <ZSTD_compress@@Base+0xf2b4>  // b.hs, b.nlast
   1d96c:	ldr	w3, [x2, w0, uxtw]
   1d970:	add	x1, x2, w0, uxtw
   1d974:	ldur	w2, [x26, #1]
   1d978:	cmp	w3, w2
   1d97c:	b.ne	1db00 <ZSTD_compress@@Base+0xf2b4>  // b.any
   1d980:	ldr	w2, [sp, #120]
   1d984:	add	x1, x1, #0x4
   1d988:	ldr	x4, [sp, #160]
   1d98c:	cmp	w2, w0
   1d990:	ldr	x0, [sp, #208]
   1d994:	mov	x2, x19
   1d998:	csel	x3, x0, x19, hi  // hi = pmore
   1d99c:	add	x0, x26, #0x5
   1d9a0:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1d9a4:	add	x0, x0, #0x4
   1d9a8:	str	x0, [sp, #152]
   1d9ac:	ldr	w1, [x18, #188]
   1d9b0:	mov	w20, #0x1                   	// #1
   1d9b4:	ldr	x0, [x18, #64]
   1d9b8:	str	x0, [sp, #176]
   1d9bc:	lsl	w1, w20, w1
   1d9c0:	sub	w0, w1, #0x1
   1d9c4:	str	w0, [sp, #192]
   1d9c8:	add	x24, x18, #0xb8
   1d9cc:	ldr	x0, [x18, #8]
   1d9d0:	str	x0, [sp, #112]
   1d9d4:	ldr	w0, [x18, #24]
   1d9d8:	ldr	x25, [x18, #16]
   1d9dc:	str	w0, [sp, #128]
   1d9e0:	ldr	x2, [sp, #112]
   1d9e4:	mov	w0, w0
   1d9e8:	ldr	w22, [x18, #28]
   1d9ec:	ldr	w3, [x18, #200]
   1d9f0:	add	x28, x2, w0, uxtw
   1d9f4:	add	x0, x25, w0, uxtw
   1d9f8:	str	x0, [sp, #224]
   1d9fc:	sub	x0, x26, x2
   1da00:	ldr	w2, [x18, #184]
   1da04:	cmp	w3, #0x5
   1da08:	mov	w23, w0
   1da0c:	sub	w6, w0, w22
   1da10:	lsl	w2, w20, w2
   1da14:	b.eq	1dc48 <ZSTD_compress@@Base+0xf3fc>  // b.none
   1da18:	sub	w3, w3, #0x6
   1da1c:	ldr	w4, [x18, #32]
   1da20:	cmp	w3, w20
   1da24:	sub	w3, w0, w2
   1da28:	b.hi	1db08 <ZSTD_compress@@Base+0xf2bc>  // b.pmore
   1da2c:	cmp	w2, w6
   1da30:	sub	w27, w0, w1
   1da34:	csel	w2, w3, w22, cc  // cc = lo, ul, last
   1da38:	cmp	w4, #0x0
   1da3c:	csel	w22, w22, w2, ne  // ne = any
   1da40:	cmp	w1, w0
   1da44:	csel	w0, w27, wzr, cc  // cc = lo, ul, last
   1da48:	str	w0, [sp, #232]
   1da4c:	ldr	w0, [x24, #12]
   1da50:	mov	x2, x26
   1da54:	mov	x1, x24
   1da58:	mov	w3, #0x6                   	// #6
   1da5c:	add	w23, w23, #0x2
   1da60:	lsl	w20, w20, w0
   1da64:	mov	x0, x18
   1da68:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1da6c:	mov	w27, w0
   1da70:	mov	x13, #0xc9ff                	// #51711
   1da74:	add	x14, x26, #0x4
   1da78:	movk	x13, #0x3b9a, lsl #16
   1da7c:	mov	x15, #0x3                   	// #3
   1da80:	cmp	w20, #0x0
   1da84:	ccmp	w27, w22, #0x0, ne  // ne = any
   1da88:	b.ls	1db68 <ZSTD_compress@@Base+0xf31c>  // b.plast
   1da8c:	ldr	w1, [sp, #128]
   1da90:	mov	w0, w27
   1da94:	cmp	w27, w1
   1da98:	b.cc	1dd54 <ZSTD_compress@@Base+0xf508>  // b.lo, b.ul, b.last
   1da9c:	ldr	x1, [sp, #112]
   1daa0:	add	x1, x1, x0
   1daa4:	ldrb	w0, [x26, x15]
   1daa8:	ldrb	w2, [x1, x15]
   1daac:	cmp	w2, w0
   1dab0:	b.ne	1dadc <ZSTD_compress@@Base+0xf290>  // b.any
   1dab4:	mov	x2, x19
   1dab8:	mov	x0, x26
   1dabc:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1dac0:	cmp	x15, x0
   1dac4:	b.cs	1dadc <ZSTD_compress@@Base+0xf290>  // b.hs, b.nlast
   1dac8:	add	x1, x26, x0
   1dacc:	sub	w13, w23, w27
   1dad0:	mov	x15, x0
   1dad4:	cmp	x19, x1
   1dad8:	b.eq	1db68 <ZSTD_compress@@Base+0xf31c>  // b.none
   1dadc:	ldr	w0, [sp, #232]
   1dae0:	cmp	w27, w0
   1dae4:	b.ls	1db68 <ZSTD_compress@@Base+0xf31c>  // b.plast
   1dae8:	ldr	w0, [sp, #192]
   1daec:	sub	w20, w20, #0x1
   1daf0:	and	w6, w27, w0
   1daf4:	ldr	x0, [sp, #176]
   1daf8:	ldr	w27, [x0, x6, lsl #2]
   1dafc:	b	1da80 <ZSTD_compress@@Base+0xf234>
   1db00:	str	xzr, [sp, #152]
   1db04:	b	1d9ac <ZSTD_compress@@Base+0xf160>
   1db08:	cmp	w2, w6
   1db0c:	sub	w27, w0, w1
   1db10:	csel	w2, w3, w22, cc  // cc = lo, ul, last
   1db14:	cmp	w4, #0x0
   1db18:	csel	w22, w22, w2, ne  // ne = any
   1db1c:	cmp	w1, w0
   1db20:	csel	w0, w27, wzr, cc  // cc = lo, ul, last
   1db24:	str	w0, [sp, #232]
   1db28:	ldr	w0, [x24, #12]
   1db2c:	mov	x2, x26
   1db30:	mov	x1, x24
   1db34:	mov	w3, #0x4                   	// #4
   1db38:	add	w23, w23, #0x2
   1db3c:	lsl	w20, w20, w0
   1db40:	mov	x0, x18
   1db44:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1db48:	mov	w27, w0
   1db4c:	mov	x13, #0xc9ff                	// #51711
   1db50:	add	x14, x26, #0x4
   1db54:	movk	x13, #0x3b9a, lsl #16
   1db58:	mov	x15, #0x3                   	// #3
   1db5c:	cmp	w20, #0x0
   1db60:	ccmp	w27, w22, #0x0, ne  // ne = any
   1db64:	b.hi	1dba0 <ZSTD_compress@@Base+0xf354>  // b.pmore
   1db68:	ldr	x0, [sp, #152]
   1db6c:	cmp	x0, x15
   1db70:	b.cc	1dd88 <ZSTD_compress@@Base+0xf53c>  // b.lo, b.ul, b.last
   1db74:	add	x20, x26, #0x1
   1db78:	mov	x15, x0
   1db7c:	mov	x13, #0x0                   	// #0
   1db80:	cmp	x15, #0x3
   1db84:	b.hi	1e4d8 <ZSTD_compress@@Base+0xfc8c>  // b.pmore
   1db88:	ldr	x0, [sp, #104]
   1db8c:	sub	x0, x26, x0
   1db90:	asr	x0, x0, #8
   1db94:	add	x0, x0, #0x1
   1db98:	add	x26, x26, x0
   1db9c:	b	1d8e4 <ZSTD_compress@@Base+0xf098>
   1dba0:	ldr	w1, [sp, #128]
   1dba4:	mov	w0, w27
   1dba8:	cmp	w27, w1
   1dbac:	b.cc	1dc14 <ZSTD_compress@@Base+0xf3c8>  // b.lo, b.ul, b.last
   1dbb0:	ldr	x1, [sp, #112]
   1dbb4:	add	x1, x1, x0
   1dbb8:	ldrb	w0, [x26, x15]
   1dbbc:	ldrb	w2, [x1, x15]
   1dbc0:	cmp	w2, w0
   1dbc4:	b.ne	1dbf0 <ZSTD_compress@@Base+0xf3a4>  // b.any
   1dbc8:	mov	x2, x19
   1dbcc:	mov	x0, x26
   1dbd0:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1dbd4:	cmp	x15, x0
   1dbd8:	b.cs	1dbf0 <ZSTD_compress@@Base+0xf3a4>  // b.hs, b.nlast
   1dbdc:	add	x1, x26, x0
   1dbe0:	sub	w13, w23, w27
   1dbe4:	mov	x15, x0
   1dbe8:	cmp	x19, x1
   1dbec:	b.eq	1db68 <ZSTD_compress@@Base+0xf31c>  // b.none
   1dbf0:	ldr	w0, [sp, #232]
   1dbf4:	cmp	w27, w0
   1dbf8:	b.ls	1db68 <ZSTD_compress@@Base+0xf31c>  // b.plast
   1dbfc:	ldr	w0, [sp, #192]
   1dc00:	sub	w20, w20, #0x1
   1dc04:	and	w6, w27, w0
   1dc08:	ldr	x0, [sp, #176]
   1dc0c:	ldr	w27, [x0, x6, lsl #2]
   1dc10:	b	1db5c <ZSTD_compress@@Base+0xf310>
   1dc14:	ldr	w2, [x26]
   1dc18:	add	x1, x25, x0
   1dc1c:	ldr	w0, [x25, x0]
   1dc20:	cmp	w2, w0
   1dc24:	b.ne	1dbf0 <ZSTD_compress@@Base+0xf3a4>  // b.any
   1dc28:	ldr	x3, [sp, #224]
   1dc2c:	mov	x4, x28
   1dc30:	mov	x2, x19
   1dc34:	add	x1, x1, #0x4
   1dc38:	mov	x0, x14
   1dc3c:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1dc40:	add	x0, x0, #0x4
   1dc44:	b	1dbd4 <ZSTD_compress@@Base+0xf388>
   1dc48:	sub	w4, w0, w2
   1dc4c:	cmp	w2, w6
   1dc50:	csel	w2, w4, w22, cc  // cc = lo, ul, last
   1dc54:	ldr	w4, [x18, #32]
   1dc58:	sub	w27, w0, w1
   1dc5c:	add	w23, w0, #0x2
   1dc60:	cmp	w4, #0x0
   1dc64:	csel	w22, w22, w2, ne  // ne = any
   1dc68:	cmp	w1, w0
   1dc6c:	csel	w0, w27, wzr, cc  // cc = lo, ul, last
   1dc70:	str	w0, [sp, #232]
   1dc74:	ldr	w0, [x24, #12]
   1dc78:	mov	x2, x26
   1dc7c:	mov	x1, x24
   1dc80:	lsl	w20, w20, w0
   1dc84:	mov	x0, x18
   1dc88:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1dc8c:	mov	w27, w0
   1dc90:	mov	x13, #0xc9ff                	// #51711
   1dc94:	add	x14, x26, #0x4
   1dc98:	movk	x13, #0x3b9a, lsl #16
   1dc9c:	mov	x15, #0x3                   	// #3
   1dca0:	cmp	w20, #0x0
   1dca4:	ccmp	w27, w22, #0x0, ne  // ne = any
   1dca8:	b.ls	1db68 <ZSTD_compress@@Base+0xf31c>  // b.plast
   1dcac:	ldr	w1, [sp, #128]
   1dcb0:	mov	w0, w27
   1dcb4:	cmp	w27, w1
   1dcb8:	b.cc	1dd20 <ZSTD_compress@@Base+0xf4d4>  // b.lo, b.ul, b.last
   1dcbc:	ldr	x1, [sp, #112]
   1dcc0:	add	x1, x1, x0
   1dcc4:	ldrb	w0, [x26, x15]
   1dcc8:	ldrb	w2, [x1, x15]
   1dccc:	cmp	w2, w0
   1dcd0:	b.ne	1dcfc <ZSTD_compress@@Base+0xf4b0>  // b.any
   1dcd4:	mov	x2, x19
   1dcd8:	mov	x0, x26
   1dcdc:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1dce0:	cmp	x15, x0
   1dce4:	b.cs	1dcfc <ZSTD_compress@@Base+0xf4b0>  // b.hs, b.nlast
   1dce8:	add	x1, x26, x0
   1dcec:	sub	w13, w23, w27
   1dcf0:	mov	x15, x0
   1dcf4:	cmp	x19, x1
   1dcf8:	b.eq	1db68 <ZSTD_compress@@Base+0xf31c>  // b.none
   1dcfc:	ldr	w0, [sp, #232]
   1dd00:	cmp	w27, w0
   1dd04:	b.ls	1db68 <ZSTD_compress@@Base+0xf31c>  // b.plast
   1dd08:	ldr	w0, [sp, #192]
   1dd0c:	sub	w20, w20, #0x1
   1dd10:	and	w6, w27, w0
   1dd14:	ldr	x0, [sp, #176]
   1dd18:	ldr	w27, [x0, x6, lsl #2]
   1dd1c:	b	1dca0 <ZSTD_compress@@Base+0xf454>
   1dd20:	ldr	w2, [x26]
   1dd24:	add	x1, x25, x0
   1dd28:	ldr	w0, [x25, x0]
   1dd2c:	cmp	w2, w0
   1dd30:	b.ne	1dcfc <ZSTD_compress@@Base+0xf4b0>  // b.any
   1dd34:	ldr	x3, [sp, #224]
   1dd38:	mov	x4, x28
   1dd3c:	mov	x2, x19
   1dd40:	add	x1, x1, #0x4
   1dd44:	mov	x0, x14
   1dd48:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1dd4c:	add	x0, x0, #0x4
   1dd50:	b	1dce0 <ZSTD_compress@@Base+0xf494>
   1dd54:	ldr	w2, [x26]
   1dd58:	add	x1, x25, x0
   1dd5c:	ldr	w0, [x25, x0]
   1dd60:	cmp	w2, w0
   1dd64:	b.ne	1dadc <ZSTD_compress@@Base+0xf290>  // b.any
   1dd68:	ldr	x3, [sp, #224]
   1dd6c:	mov	x4, x28
   1dd70:	mov	x2, x19
   1dd74:	add	x1, x1, #0x4
   1dd78:	mov	x0, x14
   1dd7c:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1dd80:	add	x0, x0, #0x4
   1dd84:	b	1dac0 <ZSTD_compress@@Base+0xf274>
   1dd88:	mov	x20, x26
   1dd8c:	b	1db80 <ZSTD_compress@@Base+0xf334>
   1dd90:	ldr	x0, [sp, #112]
   1dd94:	add	x26, x23, #0x1
   1dd98:	cbz	x0, 1de48 <ZSTD_compress@@Base+0xf5fc>
   1dd9c:	ldr	w0, [sp, #176]
   1dda0:	ldr	w1, [sp, #120]
   1dda4:	add	w0, w0, #0x1
   1dda8:	ldr	w3, [sp, #176]
   1ddac:	cmp	w1, w0
   1ddb0:	ldp	x2, x1, [sp, #136]
   1ddb4:	csel	x2, x1, x2, hi  // hi = pmore
   1ddb8:	ldr	w1, [sp, #284]
   1ddbc:	sub	w1, w1, w3
   1ddc0:	cmp	w1, #0x2
   1ddc4:	ldr	w1, [sp, #172]
   1ddc8:	ccmp	w1, w0, #0x2, hi  // hi = pmore
   1ddcc:	b.cs	1de48 <ZSTD_compress@@Base+0xf5fc>  // b.hs, b.nlast
   1ddd0:	ldr	w3, [x2, w0, uxtw]
   1ddd4:	add	x1, x2, w0, uxtw
   1ddd8:	ldr	w2, [x26]
   1dddc:	cmp	w3, w2
   1dde0:	b.ne	1de48 <ZSTD_compress@@Base+0xf5fc>  // b.any
   1dde4:	ldr	w2, [sp, #120]
   1dde8:	add	x1, x1, #0x4
   1ddec:	ldr	x4, [sp, #160]
   1ddf0:	cmp	w2, w0
   1ddf4:	ldr	x0, [sp, #208]
   1ddf8:	mov	x2, x19
   1ddfc:	csel	x3, x0, x19, hi  // hi = pmore
   1de00:	add	x0, x23, #0x5
   1de04:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1de08:	add	x0, x0, #0x4
   1de0c:	ldr	w1, [sp, #112]
   1de10:	add	w3, w0, w0, lsl #1
   1de14:	add	w2, w1, #0x1
   1de18:	ldr	w1, [sp, #128]
   1de1c:	clz	w2, w2
   1de20:	eor	w2, w2, #0x1f
   1de24:	add	w1, w1, w1, lsl #1
   1de28:	add	w1, w1, #0x1
   1de2c:	sub	w1, w1, w2
   1de30:	cmp	w3, w1
   1de34:	ccmp	x0, #0x3, #0x0, gt
   1de38:	b.ls	1de48 <ZSTD_compress@@Base+0xf5fc>  // b.plast
   1de3c:	mov	x20, x26
   1de40:	str	xzr, [sp, #112]
   1de44:	str	x0, [sp, #128]
   1de48:	ldr	w1, [x18, #188]
   1de4c:	mov	w5, #0x1                   	// #1
   1de50:	ldr	x0, [x18, #64]
   1de54:	str	x0, [sp, #224]
   1de58:	mov	w0, #0x1                   	// #1
   1de5c:	ldr	w22, [x18, #28]
   1de60:	lsl	w1, w0, w1
   1de64:	sub	w0, w1, #0x1
   1de68:	str	w0, [sp, #232]
   1de6c:	add	x4, x18, #0xb8
   1de70:	ldr	x0, [x18, #8]
   1de74:	str	x0, [sp, #184]
   1de78:	ldr	x0, [x18, #16]
   1de7c:	str	x0, [sp, #152]
   1de80:	ldr	w0, [x18, #24]
   1de84:	ldr	x2, [sp, #184]
   1de88:	str	w0, [sp, #192]
   1de8c:	mov	w0, w0
   1de90:	ldr	w3, [x18, #200]
   1de94:	add	x0, x2, w0, uxtw
   1de98:	str	x0, [sp, #240]
   1de9c:	ldr	x2, [sp, #152]
   1dea0:	cmp	w3, #0x5
   1dea4:	ldr	w0, [sp, #192]
   1dea8:	add	x0, x2, w0, uxtw
   1deac:	str	x0, [sp, #248]
   1deb0:	ldr	x0, [sp, #184]
   1deb4:	ldr	w2, [x18, #184]
   1deb8:	sub	x0, x26, x0
   1debc:	mov	w25, w0
   1dec0:	sub	w7, w0, w22
   1dec4:	lsl	w2, w5, w2
   1dec8:	b.eq	1e264 <ZSTD_compress@@Base+0xfa18>  // b.none
   1decc:	sub	w3, w3, #0x6
   1ded0:	ldr	w6, [x18, #32]
   1ded4:	cmp	w3, w5
   1ded8:	sub	w3, w0, w2
   1dedc:	b.hi	1df4c <ZSTD_compress@@Base+0xf700>  // b.pmore
   1dee0:	cmp	w2, w7
   1dee4:	ldr	w27, [x4, #12]
   1dee8:	csel	w2, w3, w22, cc  // cc = lo, ul, last
   1deec:	cmp	w6, #0x0
   1def0:	csel	w22, w22, w2, ne  // ne = any
   1def4:	cmp	w1, w0
   1def8:	sub	w28, w0, w1
   1defc:	mov	x2, x26
   1df00:	csel	w0, w28, wzr, cc  // cc = lo, ul, last
   1df04:	mov	x1, x24
   1df08:	mov	w3, #0x6                   	// #6
   1df0c:	lsl	w27, w5, w27
   1df10:	str	w0, [sp, #268]
   1df14:	mov	x0, x18
   1df18:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1df1c:	mov	w14, w0
   1df20:	mov	x13, #0xc9ff                	// #51711
   1df24:	add	w0, w25, #0x2
   1df28:	add	x25, x26, #0x4
   1df2c:	mov	x28, #0x3                   	// #3
   1df30:	movk	x13, #0x3b9a, lsl #16
   1df34:	str	w0, [sp, #280]
   1df38:	cmp	w27, #0x0
   1df3c:	ccmp	w14, w22, #0x0, ne  // ne = any
   1df40:	b.hi	1e378 <ZSTD_compress@@Base+0xfb2c>  // b.pmore
   1df44:	mov	x15, x28
   1df48:	b	1dfb0 <ZSTD_compress@@Base+0xf764>
   1df4c:	cmp	w2, w7
   1df50:	sub	w28, w0, w1
   1df54:	csel	w2, w3, w22, cc  // cc = lo, ul, last
   1df58:	cmp	w6, #0x0
   1df5c:	ldr	w27, [x4, #12]
   1df60:	csel	w22, w22, w2, ne  // ne = any
   1df64:	cmp	w1, w0
   1df68:	mov	x2, x26
   1df6c:	csel	w0, w28, wzr, cc  // cc = lo, ul, last
   1df70:	str	w0, [sp, #268]
   1df74:	mov	w0, #0x1                   	// #1
   1df78:	mov	x1, x24
   1df7c:	mov	w3, #0x4                   	// #4
   1df80:	lsl	w27, w0, w27
   1df84:	mov	x0, x18
   1df88:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1df8c:	mov	x13, #0xc9ff                	// #51711
   1df90:	add	w25, w25, #0x2
   1df94:	mov	w28, w0
   1df98:	add	x14, x26, #0x4
   1df9c:	movk	x13, #0x3b9a, lsl #16
   1dfa0:	mov	x15, #0x3                   	// #3
   1dfa4:	cmp	w27, #0x0
   1dfa8:	ccmp	w28, w22, #0x0, ne  // ne = any
   1dfac:	b.hi	1e1b8 <ZSTD_compress@@Base+0xf96c>  // b.pmore
   1dfb0:	ldr	w0, [sp, #112]
   1dfb4:	add	w1, w13, #0x1
   1dfb8:	ldr	w2, [sp, #128]
   1dfbc:	clz	w1, w1
   1dfc0:	add	w0, w0, #0x1
   1dfc4:	eor	w1, w1, #0x1f
   1dfc8:	clz	w0, w0
   1dfcc:	eor	w0, w0, #0x1f
   1dfd0:	lsl	w14, w2, #2
   1dfd4:	sub	w14, w14, w0
   1dfd8:	ldr	w0, [sp, #176]
   1dfdc:	add	w0, w0, #0x1
   1dfe0:	str	w0, [sp, #176]
   1dfe4:	lsl	w0, w15, #2
   1dfe8:	sub	w0, w0, w1
   1dfec:	add	w1, w14, #0x4
   1dff0:	cmp	w0, w1
   1dff4:	ccmp	x15, #0x3, #0x0, gt
   1dff8:	b.hi	1e90c <ZSTD_compress@@Base+0x100c0>  // b.pmore
   1dffc:	ldr	x0, [sp, #200]
   1e000:	cmp	x0, x26
   1e004:	b.ls	1e510 <ZSTD_compress@@Base+0xfcc4>  // b.plast
   1e008:	ldr	w0, [sp, #272]
   1e00c:	add	x26, x23, #0x2
   1e010:	add	w0, w0, #0x2
   1e014:	str	w0, [sp, #184]
   1e018:	ldr	x0, [sp, #112]
   1e01c:	cbz	x0, 1e0bc <ZSTD_compress@@Base+0xf870>
   1e020:	ldr	w1, [sp, #124]
   1e024:	ldr	w0, [sp, #184]
   1e028:	ldr	w3, [sp, #264]
   1e02c:	sub	w0, w0, w1
   1e030:	ldr	w1, [sp, #120]
   1e034:	cmp	w1, w0
   1e038:	ldp	x2, x1, [sp, #136]
   1e03c:	csel	x2, x1, x2, hi  // hi = pmore
   1e040:	ldr	w1, [sp, #124]
   1e044:	add	w1, w1, w3
   1e048:	ldr	w3, [sp, #184]
   1e04c:	sub	w1, w1, w3
   1e050:	cmp	w1, #0x2
   1e054:	ldr	w1, [sp, #172]
   1e058:	ccmp	w1, w0, #0x2, hi  // hi = pmore
   1e05c:	b.cs	1e0bc <ZSTD_compress@@Base+0xf870>  // b.hs, b.nlast
   1e060:	ldr	w3, [x2, w0, uxtw]
   1e064:	add	x1, x2, w0, uxtw
   1e068:	ldur	w2, [x23, #2]
   1e06c:	cmp	w3, w2
   1e070:	b.ne	1e0bc <ZSTD_compress@@Base+0xf870>  // b.any
   1e074:	ldr	w2, [sp, #120]
   1e078:	add	x1, x1, #0x4
   1e07c:	ldr	x4, [sp, #160]
   1e080:	cmp	w2, w0
   1e084:	ldr	x0, [sp, #208]
   1e088:	mov	x2, x19
   1e08c:	csel	x3, x0, x19, hi  // hi = pmore
   1e090:	add	x0, x23, #0x6
   1e094:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1e098:	add	x0, x0, #0x4
   1e09c:	add	w14, w14, #0x1
   1e0a0:	lsl	w1, w0, #2
   1e0a4:	cmp	w1, w14
   1e0a8:	ccmp	x0, #0x3, #0x0, gt
   1e0ac:	b.ls	1e0bc <ZSTD_compress@@Base+0xf870>  // b.plast
   1e0b0:	mov	x20, x26
   1e0b4:	str	xzr, [sp, #112]
   1e0b8:	str	x0, [sp, #128]
   1e0bc:	ldr	w1, [x18, #188]
   1e0c0:	mov	w22, #0x1                   	// #1
   1e0c4:	ldr	x0, [x18, #64]
   1e0c8:	str	x0, [sp, #192]
   1e0cc:	lsl	w1, w22, w1
   1e0d0:	sub	w0, w1, #0x1
   1e0d4:	str	w0, [sp, #224]
   1e0d8:	add	x4, x18, #0xb8
   1e0dc:	ldr	x0, [x18, #8]
   1e0e0:	str	x0, [sp, #152]
   1e0e4:	ldr	w0, [x18, #24]
   1e0e8:	ldr	x2, [sp, #152]
   1e0ec:	str	w0, [sp, #176]
   1e0f0:	mov	w0, w0
   1e0f4:	ldr	w25, [x18, #28]
   1e0f8:	ldr	x27, [x18, #16]
   1e0fc:	add	x0, x2, w0, uxtw
   1e100:	str	x0, [sp, #232]
   1e104:	ldr	w0, [sp, #176]
   1e108:	ldr	w3, [x18, #200]
   1e10c:	add	x0, x27, w0, uxtw
   1e110:	str	x0, [sp, #240]
   1e114:	sub	x0, x26, x2
   1e118:	ldr	w2, [x18, #184]
   1e11c:	str	w0, [sp, #248]
   1e120:	cmp	w3, #0x5
   1e124:	sub	w7, w0, w25
   1e128:	lsl	w2, w22, w2
   1e12c:	b.eq	1e74c <ZSTD_compress@@Base+0xff00>  // b.none
   1e130:	sub	w3, w3, #0x6
   1e134:	ldr	w6, [x18, #32]
   1e138:	cmp	w3, w22
   1e13c:	sub	w3, w0, w2
   1e140:	b.hi	1e42c <ZSTD_compress@@Base+0xfbe0>  // b.pmore
   1e144:	cmp	w2, w7
   1e148:	sub	w28, w0, w1
   1e14c:	csel	w2, w3, w25, cc  // cc = lo, ul, last
   1e150:	cmp	w6, #0x0
   1e154:	csel	w25, w25, w2, ne  // ne = any
   1e158:	cmp	w1, w0
   1e15c:	csel	w0, w28, wzr, cc  // cc = lo, ul, last
   1e160:	str	w0, [sp, #268]
   1e164:	ldr	w0, [x4, #12]
   1e168:	mov	x2, x26
   1e16c:	mov	x1, x24
   1e170:	mov	w3, #0x6                   	// #6
   1e174:	mov	x28, #0x3                   	// #3
   1e178:	lsl	w22, w22, w0
   1e17c:	mov	x0, x18
   1e180:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1e184:	mov	w14, w0
   1e188:	ldr	w0, [sp, #248]
   1e18c:	mov	x13, #0xc9ff                	// #51711
   1e190:	movk	x13, #0x3b9a, lsl #16
   1e194:	add	w0, w0, #0x2
   1e198:	str	w0, [sp, #248]
   1e19c:	add	x0, x23, #0x6
   1e1a0:	str	x0, [sp, #272]
   1e1a4:	cmp	w22, #0x0
   1e1a8:	ccmp	w14, w25, #0x0, ne  // ne = any
   1e1ac:	b.hi	1e860 <ZSTD_compress@@Base+0x10014>  // b.pmore
   1e1b0:	mov	x15, x28
   1e1b4:	b	1e494 <ZSTD_compress@@Base+0xfc48>
   1e1b8:	ldr	w1, [sp, #192]
   1e1bc:	mov	w0, w28
   1e1c0:	cmp	w28, w1
   1e1c4:	b.cc	1e22c <ZSTD_compress@@Base+0xf9e0>  // b.lo, b.ul, b.last
   1e1c8:	ldr	x1, [sp, #184]
   1e1cc:	add	x1, x1, x0
   1e1d0:	ldrb	w0, [x26, x15]
   1e1d4:	ldrb	w2, [x1, x15]
   1e1d8:	cmp	w2, w0
   1e1dc:	b.ne	1e208 <ZSTD_compress@@Base+0xf9bc>  // b.any
   1e1e0:	mov	x2, x19
   1e1e4:	mov	x0, x26
   1e1e8:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1e1ec:	cmp	x15, x0
   1e1f0:	b.cs	1e208 <ZSTD_compress@@Base+0xf9bc>  // b.hs, b.nlast
   1e1f4:	add	x1, x26, x0
   1e1f8:	sub	w13, w25, w28
   1e1fc:	mov	x15, x0
   1e200:	cmp	x19, x1
   1e204:	b.eq	1dfb0 <ZSTD_compress@@Base+0xf764>  // b.none
   1e208:	ldr	w0, [sp, #268]
   1e20c:	cmp	w28, w0
   1e210:	b.ls	1dfb0 <ZSTD_compress@@Base+0xf764>  // b.plast
   1e214:	ldr	w0, [sp, #232]
   1e218:	sub	w27, w27, #0x1
   1e21c:	and	w6, w28, w0
   1e220:	ldr	x0, [sp, #224]
   1e224:	ldr	w28, [x0, x6, lsl #2]
   1e228:	b	1dfa4 <ZSTD_compress@@Base+0xf758>
   1e22c:	ldr	x3, [sp, #152]
   1e230:	ldr	x1, [sp, #152]
   1e234:	ldr	w2, [x26]
   1e238:	add	x1, x1, x0
   1e23c:	ldr	w0, [x3, x0]
   1e240:	cmp	w2, w0
   1e244:	b.ne	1e208 <ZSTD_compress@@Base+0xf9bc>  // b.any
   1e248:	ldp	x4, x3, [sp, #240]
   1e24c:	mov	x2, x19
   1e250:	add	x1, x1, #0x4
   1e254:	mov	x0, x14
   1e258:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1e25c:	add	x0, x0, #0x4
   1e260:	b	1e1ec <ZSTD_compress@@Base+0xf9a0>
   1e264:	sub	w6, w0, w2
   1e268:	cmp	w2, w7
   1e26c:	csel	w2, w6, w22, cc  // cc = lo, ul, last
   1e270:	ldr	w6, [x18, #32]
   1e274:	sub	w28, w0, w1
   1e278:	ldr	w27, [x4, #12]
   1e27c:	cmp	w6, #0x0
   1e280:	add	w25, w0, #0x2
   1e284:	csel	w22, w22, w2, ne  // ne = any
   1e288:	cmp	w1, w0
   1e28c:	csel	w0, w28, wzr, cc  // cc = lo, ul, last
   1e290:	str	w0, [sp, #268]
   1e294:	mov	w0, #0x1                   	// #1
   1e298:	mov	x2, x26
   1e29c:	mov	x1, x24
   1e2a0:	lsl	w27, w0, w27
   1e2a4:	mov	x0, x18
   1e2a8:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1e2ac:	mov	x13, #0xc9ff                	// #51711
   1e2b0:	mov	w28, w0
   1e2b4:	add	x14, x26, #0x4
   1e2b8:	movk	x13, #0x3b9a, lsl #16
   1e2bc:	mov	x15, #0x3                   	// #3
   1e2c0:	cmp	w27, #0x0
   1e2c4:	ccmp	w28, w22, #0x0, ne  // ne = any
   1e2c8:	b.ls	1dfb0 <ZSTD_compress@@Base+0xf764>  // b.plast
   1e2cc:	ldr	w1, [sp, #192]
   1e2d0:	mov	w0, w28
   1e2d4:	cmp	w28, w1
   1e2d8:	b.cc	1e340 <ZSTD_compress@@Base+0xfaf4>  // b.lo, b.ul, b.last
   1e2dc:	ldr	x1, [sp, #184]
   1e2e0:	add	x1, x1, x0
   1e2e4:	ldrb	w0, [x26, x15]
   1e2e8:	ldrb	w2, [x1, x15]
   1e2ec:	cmp	w2, w0
   1e2f0:	b.ne	1e31c <ZSTD_compress@@Base+0xfad0>  // b.any
   1e2f4:	mov	x2, x19
   1e2f8:	mov	x0, x26
   1e2fc:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1e300:	cmp	x15, x0
   1e304:	b.cs	1e31c <ZSTD_compress@@Base+0xfad0>  // b.hs, b.nlast
   1e308:	add	x1, x26, x0
   1e30c:	sub	w13, w25, w28
   1e310:	mov	x15, x0
   1e314:	cmp	x19, x1
   1e318:	b.eq	1dfb0 <ZSTD_compress@@Base+0xf764>  // b.none
   1e31c:	ldr	w0, [sp, #268]
   1e320:	cmp	w28, w0
   1e324:	b.ls	1dfb0 <ZSTD_compress@@Base+0xf764>  // b.plast
   1e328:	ldr	w0, [sp, #232]
   1e32c:	sub	w27, w27, #0x1
   1e330:	and	w6, w28, w0
   1e334:	ldr	x0, [sp, #224]
   1e338:	ldr	w28, [x0, x6, lsl #2]
   1e33c:	b	1e2c0 <ZSTD_compress@@Base+0xfa74>
   1e340:	ldr	x3, [sp, #152]
   1e344:	ldr	x1, [sp, #152]
   1e348:	ldr	w2, [x26]
   1e34c:	add	x1, x1, x0
   1e350:	ldr	w0, [x3, x0]
   1e354:	cmp	w2, w0
   1e358:	b.ne	1e31c <ZSTD_compress@@Base+0xfad0>  // b.any
   1e35c:	ldp	x4, x3, [sp, #240]
   1e360:	mov	x2, x19
   1e364:	add	x1, x1, #0x4
   1e368:	mov	x0, x14
   1e36c:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1e370:	add	x0, x0, #0x4
   1e374:	b	1e300 <ZSTD_compress@@Base+0xfab4>
   1e378:	ldr	w1, [sp, #192]
   1e37c:	mov	w0, w14
   1e380:	cmp	w14, w1
   1e384:	b.cc	1e3f4 <ZSTD_compress@@Base+0xfba8>  // b.lo, b.ul, b.last
   1e388:	ldr	x1, [sp, #184]
   1e38c:	add	x1, x1, x0
   1e390:	ldrb	w0, [x26, x28]
   1e394:	ldrb	w2, [x1, x28]
   1e398:	cmp	w2, w0
   1e39c:	b.ne	1e3d0 <ZSTD_compress@@Base+0xfb84>  // b.any
   1e3a0:	mov	x2, x19
   1e3a4:	mov	x0, x26
   1e3a8:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1e3ac:	mov	x15, x0
   1e3b0:	cmp	x28, x15
   1e3b4:	b.cs	1e3d0 <ZSTD_compress@@Base+0xfb84>  // b.hs, b.nlast
   1e3b8:	ldr	w0, [sp, #280]
   1e3bc:	sub	w13, w0, w14
   1e3c0:	add	x0, x26, x15
   1e3c4:	cmp	x19, x0
   1e3c8:	b.eq	1dfb0 <ZSTD_compress@@Base+0xf764>  // b.none
   1e3cc:	mov	x28, x15
   1e3d0:	ldr	w0, [sp, #268]
   1e3d4:	cmp	w14, w0
   1e3d8:	b.ls	1df44 <ZSTD_compress@@Base+0xf6f8>  // b.plast
   1e3dc:	ldr	w0, [sp, #232]
   1e3e0:	sub	w27, w27, #0x1
   1e3e4:	and	w6, w14, w0
   1e3e8:	ldr	x0, [sp, #224]
   1e3ec:	ldr	w14, [x0, x6, lsl #2]
   1e3f0:	b	1df38 <ZSTD_compress@@Base+0xf6ec>
   1e3f4:	ldr	x3, [sp, #152]
   1e3f8:	ldr	x1, [sp, #152]
   1e3fc:	ldr	w2, [x26]
   1e400:	add	x1, x1, x0
   1e404:	ldr	w0, [x3, x0]
   1e408:	cmp	w2, w0
   1e40c:	b.ne	1e3d0 <ZSTD_compress@@Base+0xfb84>  // b.any
   1e410:	ldp	x4, x3, [sp, #240]
   1e414:	mov	x2, x19
   1e418:	add	x1, x1, #0x4
   1e41c:	mov	x0, x25
   1e420:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1e424:	add	x15, x0, #0x4
   1e428:	b	1e3b0 <ZSTD_compress@@Base+0xfb64>
   1e42c:	cmp	w2, w7
   1e430:	sub	w28, w0, w1
   1e434:	csel	w2, w3, w25, cc  // cc = lo, ul, last
   1e438:	cmp	w6, #0x0
   1e43c:	csel	w25, w25, w2, ne  // ne = any
   1e440:	cmp	w1, w0
   1e444:	csel	w0, w28, wzr, cc  // cc = lo, ul, last
   1e448:	str	w0, [sp, #268]
   1e44c:	ldr	w0, [x4, #12]
   1e450:	mov	x2, x26
   1e454:	mov	x1, x24
   1e458:	mov	w3, #0x4                   	// #4
   1e45c:	lsl	w22, w22, w0
   1e460:	mov	x0, x18
   1e464:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1e468:	mov	w28, w0
   1e46c:	ldr	w0, [sp, #248]
   1e470:	mov	x13, #0xc9ff                	// #51711
   1e474:	add	x14, x23, #0x6
   1e478:	movk	x13, #0x3b9a, lsl #16
   1e47c:	add	w0, w0, #0x2
   1e480:	mov	x15, #0x3                   	// #3
   1e484:	str	w0, [sp, #248]
   1e488:	cmp	w22, #0x0
   1e48c:	ccmp	w28, w25, #0x0, ne  // ne = any
   1e490:	b.hi	1e6a4 <ZSTD_compress@@Base+0xfe58>  // b.pmore
   1e494:	ldr	w1, [sp, #112]
   1e498:	add	w0, w13, #0x1
   1e49c:	clz	w0, w0
   1e4a0:	eor	w0, w0, #0x1f
   1e4a4:	add	w2, w1, #0x1
   1e4a8:	lsl	w1, w15, #2
   1e4ac:	clz	w2, w2
   1e4b0:	sub	w1, w1, w0
   1e4b4:	ldr	w0, [sp, #128]
   1e4b8:	eor	w2, w2, #0x1f
   1e4bc:	lsl	w0, w0, #2
   1e4c0:	add	w0, w0, #0x7
   1e4c4:	sub	w0, w0, w2
   1e4c8:	cmp	w1, w0
   1e4cc:	ccmp	x15, #0x3, #0x0, gt
   1e4d0:	b.ls	1e510 <ZSTD_compress@@Base+0xfcc4>  // b.plast
   1e4d4:	mov	x20, x26
   1e4d8:	ldr	w1, [sp, #124]
   1e4dc:	mov	x23, x26
   1e4e0:	ldr	w0, [sp, #184]
   1e4e4:	str	x13, [sp, #112]
   1e4e8:	sub	w0, w0, w1
   1e4ec:	str	x15, [sp, #128]
   1e4f0:	str	w0, [sp, #176]
   1e4f4:	ldr	w0, [sp, #124]
   1e4f8:	ldr	w1, [sp, #176]
   1e4fc:	add	w0, w0, w1
   1e500:	str	w0, [sp, #272]
   1e504:	ldr	x0, [sp, #200]
   1e508:	cmp	x0, x23
   1e50c:	b.hi	1dd90 <ZSTD_compress@@Base+0xf544>  // b.pmore
   1e510:	ldr	x0, [sp, #112]
   1e514:	ldr	w8, [sp, #112]
   1e518:	cbz	x0, 1e588 <ZSTD_compress@@Base+0xfd3c>
   1e51c:	ldr	x0, [sp, #136]
   1e520:	ldr	w2, [sp, #120]
   1e524:	sub	x0, x20, x0
   1e528:	sub	w0, w0, w8
   1e52c:	add	w1, w0, #0x2
   1e530:	add	w0, w0, #0x2
   1e534:	cmp	w2, w1
   1e538:	b.ls	1e920 <ZSTD_compress@@Base+0x100d4>  // b.plast
   1e53c:	ldr	x1, [sp, #144]
   1e540:	add	x0, x1, x0
   1e544:	ldr	x1, [sp, #256]
   1e548:	ldr	x2, [sp, #128]
   1e54c:	add	x5, x20, x2
   1e550:	ldr	x3, [sp, #104]
   1e554:	sub	x2, x5, x20
   1e558:	cmp	x3, x20
   1e55c:	ccmp	x0, x1, #0x0, cc  // cc = lo, ul, last
   1e560:	b.ls	1e574 <ZSTD_compress@@Base+0xfd28>  // b.plast
   1e564:	ldurb	w4, [x20, #-1]
   1e568:	ldurb	w3, [x0, #-1]
   1e56c:	cmp	w4, w3
   1e570:	b.eq	1e930 <ZSTD_compress@@Base+0x100e4>  // b.none
   1e574:	ldr	w0, [sp, #124]
   1e578:	str	x2, [sp, #128]
   1e57c:	str	w0, [sp, #168]
   1e580:	sub	w0, w8, #0x2
   1e584:	str	w0, [sp, #124]
   1e588:	ldr	x0, [sp, #104]
   1e58c:	sub	x22, x19, #0x20
   1e590:	cmp	x20, x22
   1e594:	sub	x5, x20, x0
   1e598:	ldr	x0, [sp, #128]
   1e59c:	sub	x9, x0, #0x3
   1e5a0:	ldr	x0, [x21, #24]
   1e5a4:	b.hi	1e93c <ZSTD_compress@@Base+0x100f0>  // b.pmore
   1e5a8:	ldr	x1, [sp, #104]
   1e5ac:	cmp	x5, #0x10
   1e5b0:	ldp	x2, x3, [x1]
   1e5b4:	stp	x2, x3, [x0]
   1e5b8:	b.ls	1e60c <ZSTD_compress@@Base+0xfdc0>  // b.plast
   1e5bc:	ldr	x2, [x21, #24]
   1e5c0:	ldp	x0, x1, [x1, #16]
   1e5c4:	add	x4, x2, x5
   1e5c8:	stp	x0, x1, [x2, #16]
   1e5cc:	add	x2, x2, #0x30
   1e5d0:	ldr	x0, [sp, #104]
   1e5d4:	ldp	x0, x1, [x0, #32]
   1e5d8:	stp	x0, x1, [x2, #-16]
   1e5dc:	cmp	x4, x2
   1e5e0:	b.ls	1e60c <ZSTD_compress@@Base+0xfdc0>  // b.plast
   1e5e4:	ldr	x0, [sp, #104]
   1e5e8:	add	x3, x0, #0x30
   1e5ec:	ldp	x0, x1, [x3]
   1e5f0:	stp	x0, x1, [x2]
   1e5f4:	add	x2, x2, #0x20
   1e5f8:	ldp	x0, x1, [x3, #16]
   1e5fc:	stp	x0, x1, [x2, #-16]
   1e600:	add	x3, x3, #0x20
   1e604:	cmp	x4, x2
   1e608:	b.hi	1e5ec <ZSTD_compress@@Base+0xfda0>  // b.pmore
   1e60c:	ldr	x0, [x21, #24]
   1e610:	mov	x1, #0xffff                	// #65535
   1e614:	cmp	x5, x1
   1e618:	add	x0, x0, x5
   1e61c:	str	x0, [x21, #24]
   1e620:	ldr	x0, [x21, #8]
   1e624:	b.ls	1e640 <ZSTD_compress@@Base+0xfdf4>  // b.plast
   1e628:	mov	w1, #0x1                   	// #1
   1e62c:	str	w1, [x21, #72]
   1e630:	ldr	x1, [x21]
   1e634:	sub	x1, x0, x1
   1e638:	asr	x1, x1, #3
   1e63c:	str	w1, [x21, #76]
   1e640:	add	w8, w8, #0x1
   1e644:	str	w8, [x0]
   1e648:	strh	w5, [x0, #4]
   1e64c:	mov	x1, #0xffff                	// #65535
   1e650:	cmp	x9, x1
   1e654:	b.ls	1e670 <ZSTD_compress@@Base+0xfe24>  // b.plast
   1e658:	mov	w1, #0x2                   	// #2
   1e65c:	str	w1, [x21, #72]
   1e660:	ldr	x1, [x21]
   1e664:	sub	x1, x0, x1
   1e668:	asr	x1, x1, #3
   1e66c:	str	w1, [x21, #76]
   1e670:	add	x0, x0, #0x8
   1e674:	sturh	w9, [x0, #-2]
   1e678:	str	x0, [x21, #8]
   1e67c:	mov	w13, #0x1                   	// #1
   1e680:	ldr	x0, [sp, #128]
   1e684:	mov	x14, #0xffff                	// #65535
   1e688:	mov	w15, #0x2                   	// #2
   1e68c:	add	x26, x20, x0
   1e690:	ldr	x0, [sp, #200]
   1e694:	cmp	x0, x26
   1e698:	b.cs	1e950 <ZSTD_compress@@Base+0x10104>  // b.hs, b.nlast
   1e69c:	str	x26, [sp, #104]
   1e6a0:	b	1d8e4 <ZSTD_compress@@Base+0xf098>
   1e6a4:	ldr	w1, [sp, #176]
   1e6a8:	mov	w0, w28
   1e6ac:	cmp	w28, w1
   1e6b0:	b.cc	1e71c <ZSTD_compress@@Base+0xfed0>  // b.lo, b.ul, b.last
   1e6b4:	ldr	x1, [sp, #152]
   1e6b8:	add	x1, x1, x0
   1e6bc:	ldrb	w0, [x26, x15]
   1e6c0:	ldrb	w2, [x1, x15]
   1e6c4:	cmp	w2, w0
   1e6c8:	b.ne	1e6f8 <ZSTD_compress@@Base+0xfeac>  // b.any
   1e6cc:	mov	x2, x19
   1e6d0:	mov	x0, x26
   1e6d4:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1e6d8:	cmp	x15, x0
   1e6dc:	b.cs	1e6f8 <ZSTD_compress@@Base+0xfeac>  // b.hs, b.nlast
   1e6e0:	ldr	w1, [sp, #248]
   1e6e4:	mov	x15, x0
   1e6e8:	sub	w13, w1, w28
   1e6ec:	add	x1, x26, x0
   1e6f0:	cmp	x19, x1
   1e6f4:	b.eq	1e494 <ZSTD_compress@@Base+0xfc48>  // b.none
   1e6f8:	ldr	w0, [sp, #268]
   1e6fc:	cmp	w28, w0
   1e700:	b.ls	1e494 <ZSTD_compress@@Base+0xfc48>  // b.plast
   1e704:	ldr	w0, [sp, #224]
   1e708:	sub	w22, w22, #0x1
   1e70c:	and	w6, w28, w0
   1e710:	ldr	x0, [sp, #192]
   1e714:	ldr	w28, [x0, x6, lsl #2]
   1e718:	b	1e488 <ZSTD_compress@@Base+0xfc3c>
   1e71c:	ldur	w2, [x23, #2]
   1e720:	add	x1, x27, x0
   1e724:	ldr	w0, [x27, x0]
   1e728:	cmp	w2, w0
   1e72c:	b.ne	1e6f8 <ZSTD_compress@@Base+0xfeac>  // b.any
   1e730:	ldp	x4, x3, [sp, #232]
   1e734:	mov	x2, x19
   1e738:	add	x1, x1, #0x4
   1e73c:	mov	x0, x14
   1e740:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1e744:	add	x0, x0, #0x4
   1e748:	b	1e6d8 <ZSTD_compress@@Base+0xfe8c>
   1e74c:	sub	w6, w0, w2
   1e750:	cmp	w2, w7
   1e754:	csel	w2, w6, w25, cc  // cc = lo, ul, last
   1e758:	ldr	w6, [x18, #32]
   1e75c:	sub	w28, w0, w1
   1e760:	cmp	w6, #0x0
   1e764:	csel	w25, w25, w2, ne  // ne = any
   1e768:	cmp	w1, w0
   1e76c:	csel	w0, w28, wzr, cc  // cc = lo, ul, last
   1e770:	str	w0, [sp, #268]
   1e774:	ldr	w0, [x4, #12]
   1e778:	mov	x2, x26
   1e77c:	mov	x1, x24
   1e780:	lsl	w22, w22, w0
   1e784:	mov	x0, x18
   1e788:	bl	1772c <ZSTD_compress@@Base+0x8ee0>
   1e78c:	mov	w28, w0
   1e790:	ldr	w0, [sp, #248]
   1e794:	mov	x13, #0xc9ff                	// #51711
   1e798:	add	x14, x23, #0x6
   1e79c:	movk	x13, #0x3b9a, lsl #16
   1e7a0:	add	w0, w0, #0x2
   1e7a4:	mov	x15, #0x3                   	// #3
   1e7a8:	str	w0, [sp, #248]
   1e7ac:	cmp	w22, #0x0
   1e7b0:	ccmp	w28, w25, #0x0, ne  // ne = any
   1e7b4:	b.ls	1e494 <ZSTD_compress@@Base+0xfc48>  // b.plast
   1e7b8:	ldr	w1, [sp, #176]
   1e7bc:	mov	w0, w28
   1e7c0:	cmp	w28, w1
   1e7c4:	b.cc	1e830 <ZSTD_compress@@Base+0xffe4>  // b.lo, b.ul, b.last
   1e7c8:	ldr	x1, [sp, #152]
   1e7cc:	add	x1, x1, x0
   1e7d0:	ldrb	w0, [x26, x15]
   1e7d4:	ldrb	w2, [x1, x15]
   1e7d8:	cmp	w2, w0
   1e7dc:	b.ne	1e80c <ZSTD_compress@@Base+0xffc0>  // b.any
   1e7e0:	mov	x2, x19
   1e7e4:	mov	x0, x26
   1e7e8:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1e7ec:	cmp	x15, x0
   1e7f0:	b.cs	1e80c <ZSTD_compress@@Base+0xffc0>  // b.hs, b.nlast
   1e7f4:	ldr	w1, [sp, #248]
   1e7f8:	mov	x15, x0
   1e7fc:	sub	w13, w1, w28
   1e800:	add	x1, x26, x0
   1e804:	cmp	x19, x1
   1e808:	b.eq	1e494 <ZSTD_compress@@Base+0xfc48>  // b.none
   1e80c:	ldr	w0, [sp, #268]
   1e810:	cmp	w28, w0
   1e814:	b.ls	1e494 <ZSTD_compress@@Base+0xfc48>  // b.plast
   1e818:	ldr	w0, [sp, #224]
   1e81c:	sub	w22, w22, #0x1
   1e820:	and	w6, w28, w0
   1e824:	ldr	x0, [sp, #192]
   1e828:	ldr	w28, [x0, x6, lsl #2]
   1e82c:	b	1e7ac <ZSTD_compress@@Base+0xff60>
   1e830:	ldur	w2, [x23, #2]
   1e834:	add	x1, x27, x0
   1e838:	ldr	w0, [x27, x0]
   1e83c:	cmp	w2, w0
   1e840:	b.ne	1e80c <ZSTD_compress@@Base+0xffc0>  // b.any
   1e844:	ldp	x4, x3, [sp, #232]
   1e848:	mov	x2, x19
   1e84c:	add	x1, x1, #0x4
   1e850:	mov	x0, x14
   1e854:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1e858:	add	x0, x0, #0x4
   1e85c:	b	1e7ec <ZSTD_compress@@Base+0xffa0>
   1e860:	ldr	w1, [sp, #176]
   1e864:	mov	w0, w14
   1e868:	cmp	w14, w1
   1e86c:	b.cc	1e8dc <ZSTD_compress@@Base+0x10090>  // b.lo, b.ul, b.last
   1e870:	ldr	x1, [sp, #152]
   1e874:	add	x1, x1, x0
   1e878:	ldrb	w0, [x26, x28]
   1e87c:	ldrb	w2, [x1, x28]
   1e880:	cmp	w2, w0
   1e884:	b.ne	1e8b8 <ZSTD_compress@@Base+0x1006c>  // b.any
   1e888:	mov	x2, x19
   1e88c:	mov	x0, x26
   1e890:	bl	177c4 <ZSTD_compress@@Base+0x8f78>
   1e894:	mov	x15, x0
   1e898:	cmp	x28, x15
   1e89c:	b.cs	1e8b8 <ZSTD_compress@@Base+0x1006c>  // b.hs, b.nlast
   1e8a0:	ldr	w0, [sp, #248]
   1e8a4:	sub	w13, w0, w14
   1e8a8:	add	x0, x26, x15
   1e8ac:	cmp	x19, x0
   1e8b0:	b.eq	1e494 <ZSTD_compress@@Base+0xfc48>  // b.none
   1e8b4:	mov	x28, x15
   1e8b8:	ldr	w0, [sp, #268]
   1e8bc:	cmp	w14, w0
   1e8c0:	b.ls	1e1b0 <ZSTD_compress@@Base+0xf964>  // b.plast
   1e8c4:	ldr	w0, [sp, #224]
   1e8c8:	sub	w22, w22, #0x1
   1e8cc:	and	w6, w14, w0
   1e8d0:	ldr	x0, [sp, #192]
   1e8d4:	ldr	w14, [x0, x6, lsl #2]
   1e8d8:	b	1e1a4 <ZSTD_compress@@Base+0xf958>
   1e8dc:	ldur	w2, [x23, #2]
   1e8e0:	add	x1, x27, x0
   1e8e4:	ldr	w0, [x27, x0]
   1e8e8:	cmp	w2, w0
   1e8ec:	b.ne	1e8b8 <ZSTD_compress@@Base+0x1006c>  // b.any
   1e8f0:	ldp	x4, x3, [sp, #232]
   1e8f4:	mov	x2, x19
   1e8f8:	ldr	x0, [sp, #272]
   1e8fc:	add	x1, x1, #0x4
   1e900:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1e904:	add	x15, x0, #0x4
   1e908:	b	1e898 <ZSTD_compress@@Base+0x1004c>
   1e90c:	mov	x20, x26
   1e910:	mov	x23, x26
   1e914:	str	x13, [sp, #112]
   1e918:	str	x15, [sp, #128]
   1e91c:	b	1e4f4 <ZSTD_compress@@Base+0xfca8>
   1e920:	ldr	x1, [sp, #136]
   1e924:	add	x0, x1, x0
   1e928:	ldr	x1, [sp, #160]
   1e92c:	b	1e548 <ZSTD_compress@@Base+0xfcfc>
   1e930:	sub	x20, x20, #0x1
   1e934:	sub	x0, x0, #0x1
   1e938:	b	1e550 <ZSTD_compress@@Base+0xfd04>
   1e93c:	ldr	x1, [sp, #104]
   1e940:	mov	x3, x22
   1e944:	mov	x2, x20
   1e948:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1e94c:	b	1e60c <ZSTD_compress@@Base+0xfdc0>
   1e950:	ldr	x0, [sp, #136]
   1e954:	ldr	w1, [sp, #120]
   1e958:	sub	x4, x26, x0
   1e95c:	ldr	w0, [sp, #168]
   1e960:	ldr	x2, [sp, #136]
   1e964:	sub	w6, w4, w0
   1e968:	cmp	w1, w6
   1e96c:	ldr	w5, [sp, #264]
   1e970:	ldr	x1, [sp, #144]
   1e974:	csel	x3, x1, x2, hi  // hi = pmore
   1e978:	ldr	w2, [sp, #168]
   1e97c:	add	x1, x3, w6, uxtw
   1e980:	add	w2, w2, w5
   1e984:	sub	w2, w2, w4
   1e988:	cmp	w2, #0x2
   1e98c:	ldr	w2, [sp, #172]
   1e990:	ccmp	w2, w6, #0x2, hi  // hi = pmore
   1e994:	b.cs	1e69c <ZSTD_compress@@Base+0xfe50>  // b.hs, b.nlast
   1e998:	ldr	w3, [x3, x6]
   1e99c:	ldr	w2, [x26]
   1e9a0:	cmp	w3, w2
   1e9a4:	b.ne	1e69c <ZSTD_compress@@Base+0xfe50>  // b.any
   1e9a8:	ldr	w2, [sp, #120]
   1e9ac:	add	x1, x1, #0x4
   1e9b0:	ldr	x4, [sp, #160]
   1e9b4:	cmp	w2, w6
   1e9b8:	ldr	x0, [sp, #208]
   1e9bc:	mov	x2, x19
   1e9c0:	csel	x3, x0, x19, hi  // hi = pmore
   1e9c4:	add	x0, x26, #0x4
   1e9c8:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1e9cc:	add	x9, x0, #0x4
   1e9d0:	add	x8, x0, #0x1
   1e9d4:	cmp	x22, x26
   1e9d8:	ldr	x0, [x21, #24]
   1e9dc:	b.cc	1ea30 <ZSTD_compress@@Base+0x101e4>  // b.lo, b.ul, b.last
   1e9e0:	ldp	x2, x3, [x26]
   1e9e4:	stp	x2, x3, [x0]
   1e9e8:	cmp	x8, x14
   1e9ec:	ldr	x0, [x21, #8]
   1e9f0:	str	w13, [x0]
   1e9f4:	strh	wzr, [x0, #4]
   1e9f8:	b.ls	1ea0c <ZSTD_compress@@Base+0x101c0>  // b.plast
   1e9fc:	ldr	x1, [x21]
   1ea00:	sub	x1, x0, x1
   1ea04:	asr	x1, x1, #3
   1ea08:	stp	w15, w1, [x21, #72]
   1ea0c:	add	x0, x0, #0x8
   1ea10:	sturh	w8, [x0, #-2]
   1ea14:	ldr	w1, [sp, #168]
   1ea18:	add	x26, x26, x9
   1ea1c:	str	x0, [x21, #8]
   1ea20:	ldr	w0, [sp, #124]
   1ea24:	str	w1, [sp, #124]
   1ea28:	str	w0, [sp, #168]
   1ea2c:	b	1e690 <ZSTD_compress@@Base+0xfe44>
   1ea30:	mov	x3, x22
   1ea34:	mov	x2, x26
   1ea38:	mov	x1, x26
   1ea3c:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1ea40:	b	1e9e8 <ZSTD_compress@@Base+0x1019c>
   1ea44:	stp	x29, x30, [sp, #-240]!
   1ea48:	mov	x29, sp
   1ea4c:	stp	x21, x22, [sp, #32]
   1ea50:	mov	x22, x0
   1ea54:	stp	x19, x20, [sp, #16]
   1ea58:	ldr	w19, [x22, #24]
   1ea5c:	stp	x27, x28, [sp, #80]
   1ea60:	add	x27, x3, x4
   1ea64:	sub	x0, x27, #0x8
   1ea68:	str	x0, [sp, #128]
   1ea6c:	sub	w0, w19, #0x1
   1ea70:	str	w0, [sp, #164]
   1ea74:	mov	x28, x3
   1ea78:	ldr	w0, [x22, #28]
   1ea7c:	str	w0, [sp, #160]
   1ea80:	ldr	x0, [x22, #16]
   1ea84:	str	x0, [sp, #104]
   1ea88:	stp	x25, x26, [sp, #64]
   1ea8c:	mov	x26, x1
   1ea90:	ldr	w20, [x2]
   1ea94:	add	x0, x0, w19, uxtw
   1ea98:	str	x0, [sp, #136]
   1ea9c:	ldr	x21, [x22, #8]
   1eaa0:	stp	x23, x24, [sp, #48]
   1eaa4:	ldr	w0, [sp, #160]
   1eaa8:	ldr	x1, [sp, #104]
   1eaac:	add	x25, x21, w19, uxtw
   1eab0:	cmp	x3, x25
   1eab4:	str	x2, [sp, #144]
   1eab8:	cinc	x24, x3, eq  // eq = none
   1eabc:	add	x0, x1, w0, uxtw
   1eac0:	str	x0, [sp, #184]
   1eac4:	ldr	w0, [x2, #4]
   1eac8:	str	w0, [sp, #124]
   1eacc:	add	x0, sp, #0xe8
   1ead0:	str	x0, [sp, #168]
   1ead4:	sub	x0, x27, #0x20
   1ead8:	str	x0, [sp, #152]
   1eadc:	ldr	x0, [sp, #128]
   1eae0:	cmp	x0, x24
   1eae4:	b.hi	1eb14 <ZSTD_compress@@Base+0x102c8>  // b.pmore
   1eae8:	ldr	x0, [sp, #144]
   1eaec:	ldr	w1, [sp, #124]
   1eaf0:	ldp	x21, x22, [sp, #32]
   1eaf4:	ldp	x23, x24, [sp, #48]
   1eaf8:	ldp	x25, x26, [sp, #64]
   1eafc:	stp	w20, w1, [x0]
   1eb00:	sub	x0, x27, x28
   1eb04:	ldp	x19, x20, [sp, #16]
   1eb08:	ldp	x27, x28, [sp, #80]
   1eb0c:	ldp	x29, x30, [sp], #240
   1eb10:	ret
   1eb14:	sub	x1, x24, x21
   1eb18:	mov	w0, #0x1                   	// #1
   1eb1c:	sub	w0, w0, w20
   1eb20:	str	w1, [sp, #112]
   1eb24:	add	w0, w0, w1
   1eb28:	ldr	x1, [sp, #104]
   1eb2c:	cmp	w19, w0
   1eb30:	csel	x2, x1, x21, hi  // hi = pmore
   1eb34:	ldr	w1, [sp, #164]
   1eb38:	sub	w1, w1, w0
   1eb3c:	cmp	w1, #0x2
   1eb40:	ldr	w1, [sp, #160]
   1eb44:	ccmp	w1, w0, #0x2, hi  // hi = pmore
   1eb48:	b.cs	1ee80 <ZSTD_compress@@Base+0x10634>  // b.hs, b.nlast
   1eb4c:	ldr	w3, [x2, w0, uxtw]
   1eb50:	add	x1, x2, w0, uxtw
   1eb54:	ldur	w2, [x24, #1]
   1eb58:	cmp	w3, w2
   1eb5c:	b.ne	1ee80 <ZSTD_compress@@Base+0x10634>  // b.any
   1eb60:	cmp	w19, w0
   1eb64:	mov	x4, x25
   1eb68:	ldr	x0, [sp, #136]
   1eb6c:	mov	x2, x27
   1eb70:	add	x1, x1, #0x4
   1eb74:	csel	x3, x0, x27, hi  // hi = pmore
   1eb78:	add	x0, x24, #0x5
   1eb7c:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1eb80:	add	x4, x0, #0x4
   1eb84:	ldr	x3, [sp, #168]
   1eb88:	mov	x0, #0xc9ff                	// #51711
   1eb8c:	movk	x0, #0x3b9a, lsl #16
   1eb90:	mov	x2, x27
   1eb94:	mov	x1, x24
   1eb98:	str	x4, [sp, #176]
   1eb9c:	str	x0, [sp, #232]
   1eba0:	mov	x0, x22
   1eba4:	bl	1810c <ZSTD_compress@@Base+0x98c0>
   1eba8:	mov	x23, x0
   1ebac:	ldr	x4, [sp, #176]
   1ebb0:	cmp	x0, x4
   1ebb4:	b.hi	1ee88 <ZSTD_compress@@Base+0x1063c>  // b.pmore
   1ebb8:	add	x7, x24, #0x1
   1ebbc:	mov	x23, x4
   1ebc0:	mov	x11, #0x0                   	// #0
   1ebc4:	cmp	x23, #0x3
   1ebc8:	b.ls	1ee94 <ZSTD_compress@@Base+0x10648>  // b.plast
   1ebcc:	ldr	w0, [sp, #164]
   1ebd0:	add	w0, w20, w0
   1ebd4:	str	w0, [sp, #176]
   1ebd8:	ldr	w0, [sp, #112]
   1ebdc:	add	x12, x24, #0x1
   1ebe0:	add	w14, w0, #0x1
   1ebe4:	cbz	x11, 1ec94 <ZSTD_compress@@Base+0x10448>
   1ebe8:	ldr	x1, [sp, #104]
   1ebec:	sub	w0, w14, w20
   1ebf0:	cmp	w19, w0
   1ebf4:	csel	x2, x1, x21, hi  // hi = pmore
   1ebf8:	ldr	w1, [sp, #176]
   1ebfc:	sub	w1, w1, w14
   1ec00:	cmp	w1, #0x2
   1ec04:	ldr	w1, [sp, #160]
   1ec08:	ccmp	w1, w0, #0x2, hi  // hi = pmore
   1ec0c:	b.cs	1ec94 <ZSTD_compress@@Base+0x10448>  // b.hs, b.nlast
   1ec10:	ldr	w3, [x2, w0, uxtw]
   1ec14:	add	x1, x2, w0, uxtw
   1ec18:	ldur	w2, [x24, #1]
   1ec1c:	cmp	w3, w2
   1ec20:	b.ne	1ec94 <ZSTD_compress@@Base+0x10448>  // b.any
   1ec24:	cmp	w19, w0
   1ec28:	mov	x2, x27
   1ec2c:	ldr	x0, [sp, #136]
   1ec30:	add	x1, x1, #0x4
   1ec34:	mov	x4, x25
   1ec38:	str	x12, [sp, #192]
   1ec3c:	csel	x3, x0, x27, hi  // hi = pmore
   1ec40:	add	x0, x24, #0x5
   1ec44:	str	w14, [sp, #200]
   1ec48:	stp	x11, x7, [sp, #208]
   1ec4c:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1ec50:	add	w1, w23, w23, lsl #1
   1ec54:	ldp	x11, x7, [sp, #208]
   1ec58:	add	x0, x0, #0x4
   1ec5c:	add	w1, w1, #0x1
   1ec60:	ldr	w14, [sp, #200]
   1ec64:	add	w3, w0, w0, lsl #1
   1ec68:	ldr	x12, [sp, #192]
   1ec6c:	add	w2, w11, #0x1
   1ec70:	clz	w2, w2
   1ec74:	eor	w2, w2, #0x1f
   1ec78:	sub	w1, w1, w2
   1ec7c:	cmp	w3, w1
   1ec80:	ccmp	x0, #0x3, #0x0, gt
   1ec84:	b.ls	1ec94 <ZSTD_compress@@Base+0x10448>  // b.plast
   1ec88:	mov	x7, x12
   1ec8c:	mov	x23, x0
   1ec90:	mov	x11, #0x0                   	// #0
   1ec94:	ldr	x3, [sp, #168]
   1ec98:	mov	x0, #0xc9ff                	// #51711
   1ec9c:	movk	x0, #0x3b9a, lsl #16
   1eca0:	mov	x1, x12
   1eca4:	mov	x2, x27
   1eca8:	str	x12, [sp, #192]
   1ecac:	str	w14, [sp, #200]
   1ecb0:	stp	x11, x7, [sp, #208]
   1ecb4:	str	x0, [sp, #232]
   1ecb8:	mov	x0, x22
   1ecbc:	bl	1810c <ZSTD_compress@@Base+0x98c0>
   1ecc0:	ldp	x11, x7, [sp, #208]
   1ecc4:	lsl	w13, w23, #2
   1ecc8:	ldr	x3, [sp, #232]
   1eccc:	ldr	w14, [sp, #200]
   1ecd0:	add	w1, w3, #0x1
   1ecd4:	add	w2, w11, #0x1
   1ecd8:	clz	w1, w1
   1ecdc:	clz	w2, w2
   1ece0:	eor	w1, w1, #0x1f
   1ece4:	eor	w2, w2, #0x1f
   1ece8:	sub	w13, w13, w2
   1ecec:	lsl	w2, w0, #2
   1ecf0:	sub	w1, w2, w1
   1ecf4:	add	w2, w13, #0x4
   1ecf8:	cmp	w1, w2
   1ecfc:	ccmp	x0, #0x3, #0x0, gt
   1ed00:	ldr	x12, [sp, #192]
   1ed04:	b.ls	1eeb0 <ZSTD_compress@@Base+0x10664>  // b.plast
   1ed08:	mov	x11, x3
   1ed0c:	str	w14, [sp, #112]
   1ed10:	mov	x23, x0
   1ed14:	mov	x7, x12
   1ed18:	ldr	x0, [sp, #128]
   1ed1c:	cmp	x0, x12
   1ed20:	b.hi	1eea8 <ZSTD_compress@@Base+0x1065c>  // b.pmore
   1ed24:	mov	w5, w11
   1ed28:	cbz	x11, 1ed80 <ZSTD_compress@@Base+0x10534>
   1ed2c:	sub	x1, x7, x21
   1ed30:	sub	w1, w1, w11
   1ed34:	add	w0, w1, #0x2
   1ed38:	add	w1, w1, #0x2
   1ed3c:	cmp	w19, w0
   1ed40:	b.ls	1efd8 <ZSTD_compress@@Base+0x1078c>  // b.plast
   1ed44:	ldr	x0, [sp, #104]
   1ed48:	ldr	x2, [sp, #184]
   1ed4c:	add	x1, x0, x1
   1ed50:	add	x0, x7, x23
   1ed54:	cmp	x28, x7
   1ed58:	sub	x9, x0, x7
   1ed5c:	ccmp	x1, x2, #0x0, cc  // cc = lo, ul, last
   1ed60:	b.ls	1ed74 <ZSTD_compress@@Base+0x10528>  // b.plast
   1ed64:	ldurb	w4, [x7, #-1]
   1ed68:	ldurb	w3, [x1, #-1]
   1ed6c:	cmp	w4, w3
   1ed70:	b.eq	1efe4 <ZSTD_compress@@Base+0x10798>  // b.none
   1ed74:	mov	x23, x9
   1ed78:	str	w20, [sp, #124]
   1ed7c:	sub	w20, w5, #0x2
   1ed80:	ldr	x1, [sp, #152]
   1ed84:	sub	x11, x7, x28
   1ed88:	sub	x12, x23, #0x3
   1ed8c:	cmp	x7, x1
   1ed90:	ldr	x0, [x26, #24]
   1ed94:	b.hi	1eff0 <ZSTD_compress@@Base+0x107a4>  // b.pmore
   1ed98:	ldp	x2, x3, [x28]
   1ed9c:	stp	x2, x3, [x0]
   1eda0:	cmp	x11, #0x10
   1eda4:	b.ls	1edf0 <ZSTD_compress@@Base+0x105a4>  // b.plast
   1eda8:	ldr	x2, [x26, #24]
   1edac:	ldp	x0, x1, [x28, #16]
   1edb0:	add	x3, x2, x11
   1edb4:	stp	x0, x1, [x2, #16]
   1edb8:	add	x2, x2, #0x30
   1edbc:	ldp	x0, x1, [x28, #32]
   1edc0:	stp	x0, x1, [x2, #-16]
   1edc4:	cmp	x3, x2
   1edc8:	b.ls	1edf0 <ZSTD_compress@@Base+0x105a4>  // b.plast
   1edcc:	add	x6, x28, #0x30
   1edd0:	ldp	x0, x1, [x6]
   1edd4:	stp	x0, x1, [x2]
   1edd8:	add	x2, x2, #0x20
   1eddc:	ldp	x0, x1, [x6, #16]
   1ede0:	stp	x0, x1, [x2, #-16]
   1ede4:	add	x6, x6, #0x20
   1ede8:	cmp	x3, x2
   1edec:	b.hi	1edd0 <ZSTD_compress@@Base+0x10584>  // b.pmore
   1edf0:	ldr	x0, [x26, #24]
   1edf4:	mov	x1, #0xffff                	// #65535
   1edf8:	cmp	x11, x1
   1edfc:	add	x0, x0, x11
   1ee00:	str	x0, [x26, #24]
   1ee04:	ldr	x0, [x26, #8]
   1ee08:	b.ls	1ee24 <ZSTD_compress@@Base+0x105d8>  // b.plast
   1ee0c:	mov	w1, #0x1                   	// #1
   1ee10:	str	w1, [x26, #72]
   1ee14:	ldr	x1, [x26]
   1ee18:	sub	x1, x0, x1
   1ee1c:	asr	x1, x1, #3
   1ee20:	str	w1, [x26, #76]
   1ee24:	add	w5, w5, #0x1
   1ee28:	str	w5, [x0]
   1ee2c:	strh	w11, [x0, #4]
   1ee30:	mov	x1, #0xffff                	// #65535
   1ee34:	cmp	x12, x1
   1ee38:	b.ls	1ee54 <ZSTD_compress@@Base+0x10608>  // b.plast
   1ee3c:	mov	w1, #0x2                   	// #2
   1ee40:	str	w1, [x26, #72]
   1ee44:	ldr	x1, [x26]
   1ee48:	sub	x1, x0, x1
   1ee4c:	asr	x1, x1, #3
   1ee50:	str	w1, [x26, #76]
   1ee54:	add	x24, x7, x23
   1ee58:	strh	w12, [x0, #6]
   1ee5c:	mov	x13, #0xffff                	// #65535
   1ee60:	add	x0, x0, #0x8
   1ee64:	mov	w14, #0x2                   	// #2
   1ee68:	str	x0, [x26, #8]
   1ee6c:	ldr	x0, [sp, #128]
   1ee70:	cmp	x0, x24
   1ee74:	b.cs	1f00c <ZSTD_compress@@Base+0x107c0>  // b.hs, b.nlast
   1ee78:	mov	x28, x24
   1ee7c:	b	1eadc <ZSTD_compress@@Base+0x10290>
   1ee80:	mov	x4, #0x0                   	// #0
   1ee84:	b	1eb84 <ZSTD_compress@@Base+0x10338>
   1ee88:	mov	x7, x24
   1ee8c:	ldr	x11, [sp, #232]
   1ee90:	b	1ebc4 <ZSTD_compress@@Base+0x10378>
   1ee94:	sub	x0, x24, x28
   1ee98:	asr	x0, x0, #8
   1ee9c:	add	x0, x0, #0x1
   1eea0:	add	x24, x24, x0
   1eea4:	b	1eadc <ZSTD_compress@@Base+0x10290>
   1eea8:	mov	x24, x7
   1eeac:	b	1ebd8 <ZSTD_compress@@Base+0x1038c>
   1eeb0:	ldr	x0, [sp, #128]
   1eeb4:	cmp	x0, x12
   1eeb8:	b.ls	1ed24 <ZSTD_compress@@Base+0x104d8>  // b.plast
   1eebc:	ldr	w0, [sp, #112]
   1eec0:	add	x12, x24, #0x2
   1eec4:	add	w0, w0, #0x2
   1eec8:	str	w0, [sp, #112]
   1eecc:	cbz	x11, 1ef64 <ZSTD_compress@@Base+0x10718>
   1eed0:	ldr	x1, [sp, #104]
   1eed4:	sub	w0, w0, w20
   1eed8:	cmp	w19, w0
   1eedc:	ldr	w3, [sp, #112]
   1eee0:	csel	x2, x1, x21, hi  // hi = pmore
   1eee4:	ldr	w1, [sp, #176]
   1eee8:	sub	w1, w1, w3
   1eeec:	cmp	w1, #0x2
   1eef0:	ldr	w1, [sp, #160]
   1eef4:	ccmp	w1, w0, #0x2, hi  // hi = pmore
   1eef8:	b.cs	1ef64 <ZSTD_compress@@Base+0x10718>  // b.hs, b.nlast
   1eefc:	ldr	w3, [x2, w0, uxtw]
   1ef00:	add	x1, x2, w0, uxtw
   1ef04:	ldur	w2, [x24, #2]
   1ef08:	cmp	w3, w2
   1ef0c:	b.ne	1ef64 <ZSTD_compress@@Base+0x10718>  // b.any
   1ef10:	cmp	w19, w0
   1ef14:	add	x1, x1, #0x4
   1ef18:	ldr	x0, [sp, #136]
   1ef1c:	mov	x4, x25
   1ef20:	mov	x2, x27
   1ef24:	stp	x11, x12, [sp, #192]
   1ef28:	csel	x3, x0, x27, hi  // hi = pmore
   1ef2c:	add	x0, x24, #0x6
   1ef30:	str	x7, [sp, #208]
   1ef34:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1ef38:	add	x0, x0, #0x4
   1ef3c:	add	w13, w13, #0x1
   1ef40:	lsl	w1, w0, #2
   1ef44:	cmp	w1, w13
   1ef48:	ccmp	x0, #0x3, #0x0, gt
   1ef4c:	ldp	x11, x12, [sp, #192]
   1ef50:	ldr	x7, [sp, #208]
   1ef54:	b.ls	1ef64 <ZSTD_compress@@Base+0x10718>  // b.plast
   1ef58:	mov	x7, x12
   1ef5c:	mov	x23, x0
   1ef60:	mov	x11, #0x0                   	// #0
   1ef64:	ldr	x3, [sp, #168]
   1ef68:	mov	x0, #0xc9ff                	// #51711
   1ef6c:	movk	x0, #0x3b9a, lsl #16
   1ef70:	mov	x1, x12
   1ef74:	mov	x2, x27
   1ef78:	stp	x12, x11, [sp, #192]
   1ef7c:	str	x7, [sp, #208]
   1ef80:	str	x0, [sp, #232]
   1ef84:	mov	x0, x22
   1ef88:	bl	1810c <ZSTD_compress@@Base+0x98c0>
   1ef8c:	lsl	w3, w0, #2
   1ef90:	ldp	x12, x11, [sp, #192]
   1ef94:	ldr	x4, [sp, #232]
   1ef98:	ldr	x7, [sp, #208]
   1ef9c:	add	w1, w4, #0x1
   1efa0:	clz	w1, w1
   1efa4:	add	w2, w11, #0x1
   1efa8:	eor	w1, w1, #0x1f
   1efac:	clz	w2, w2
   1efb0:	sub	w3, w3, w1
   1efb4:	lsl	w1, w23, #2
   1efb8:	add	w1, w1, #0x7
   1efbc:	eor	w2, w2, #0x1f
   1efc0:	sub	w1, w1, w2
   1efc4:	cmp	w3, w1
   1efc8:	ccmp	x0, #0x3, #0x0, gt
   1efcc:	b.ls	1ed24 <ZSTD_compress@@Base+0x104d8>  // b.plast
   1efd0:	mov	x11, x4
   1efd4:	b	1ed10 <ZSTD_compress@@Base+0x104c4>
   1efd8:	add	x1, x21, x1
   1efdc:	mov	x2, x25
   1efe0:	b	1ed50 <ZSTD_compress@@Base+0x10504>
   1efe4:	sub	x7, x7, #0x1
   1efe8:	sub	x1, x1, #0x1
   1efec:	b	1ed54 <ZSTD_compress@@Base+0x10508>
   1eff0:	ldr	x3, [sp, #152]
   1eff4:	mov	x2, x7
   1eff8:	mov	x1, x28
   1effc:	str	x7, [sp, #112]
   1f000:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1f004:	ldr	x7, [sp, #112]
   1f008:	b	1edf0 <ZSTD_compress@@Base+0x105a4>
   1f00c:	ldr	w0, [sp, #124]
   1f010:	sub	x4, x24, x21
   1f014:	ldr	w2, [sp, #124]
   1f018:	ldr	w5, [sp, #164]
   1f01c:	sub	w6, w4, w0
   1f020:	ldr	x1, [sp, #104]
   1f024:	add	w2, w2, w5
   1f028:	cmp	w19, w6
   1f02c:	sub	w2, w2, w4
   1f030:	csel	x3, x1, x21, hi  // hi = pmore
   1f034:	cmp	w2, #0x2
   1f038:	ldr	w2, [sp, #160]
   1f03c:	add	x1, x3, w6, uxtw
   1f040:	ccmp	w2, w6, #0x2, hi  // hi = pmore
   1f044:	b.cs	1ee78 <ZSTD_compress@@Base+0x1062c>  // b.hs, b.nlast
   1f048:	ldr	w3, [x3, x6]
   1f04c:	ldr	w2, [x24]
   1f050:	cmp	w3, w2
   1f054:	b.ne	1ee78 <ZSTD_compress@@Base+0x1062c>  // b.any
   1f058:	cmp	w19, w6
   1f05c:	add	x1, x1, #0x4
   1f060:	ldr	x0, [sp, #136]
   1f064:	mov	x4, x25
   1f068:	mov	x2, x27
   1f06c:	csel	x3, x0, x27, hi  // hi = pmore
   1f070:	add	x0, x24, #0x4
   1f074:	bl	178a4 <ZSTD_compress@@Base+0x9058>
   1f078:	add	x11, x0, #0x4
   1f07c:	ldr	x1, [sp, #152]
   1f080:	add	x9, x0, #0x1
   1f084:	ldr	x0, [x26, #24]
   1f088:	cmp	x1, x24
   1f08c:	b.cc	1f0e0 <ZSTD_compress@@Base+0x10894>  // b.lo, b.ul, b.last
   1f090:	ldp	x2, x3, [x24]
   1f094:	stp	x2, x3, [x0]
   1f098:	mov	w1, #0x1                   	// #1
   1f09c:	ldr	x0, [x26, #8]
   1f0a0:	cmp	x9, x13
   1f0a4:	str	w1, [x0]
   1f0a8:	strh	wzr, [x0, #4]
   1f0ac:	b.ls	1f0c0 <ZSTD_compress@@Base+0x10874>  // b.plast
   1f0b0:	ldr	x1, [x26]
   1f0b4:	sub	x1, x0, x1
   1f0b8:	asr	x1, x1, #3
   1f0bc:	stp	w14, w1, [x26, #72]
   1f0c0:	add	x0, x0, #0x8
   1f0c4:	sturh	w9, [x0, #-2]
   1f0c8:	add	x24, x24, x11
   1f0cc:	str	x0, [x26, #8]
   1f0d0:	mov	w0, w20
   1f0d4:	ldr	w20, [sp, #124]
   1f0d8:	str	w0, [sp, #124]
   1f0dc:	b	1ee6c <ZSTD_compress@@Base+0x10620>
   1f0e0:	ldr	x3, [sp, #152]
   1f0e4:	mov	x2, x24
   1f0e8:	mov	x1, x24
   1f0ec:	bl	17620 <ZSTD_compress@@Base+0x8dd4>
   1f0f0:	b	1f098 <ZSTD_compress@@Base+0x1084c>
   1f0f4:	sub	x5, x2, #0x7
   1f0f8:	cmp	x0, x5
   1f0fc:	b.cs	1f1cc <ZSTD_compress@@Base+0x10980>  // b.hs, b.nlast
   1f100:	ldr	x4, [x0]
   1f104:	ldr	x3, [x1]
   1f108:	cmp	x3, x4
   1f10c:	b.eq	1f124 <ZSTD_compress@@Base+0x108d8>  // b.none
   1f110:	eor	x0, x3, x4
   1f114:	rbit	x0, x0
   1f118:	clz	x0, x0
   1f11c:	lsr	x0, x0, #3
   1f120:	ret
   1f124:	add	x3, x0, #0x8
   1f128:	add	x1, x1, #0x8
   1f12c:	cmp	x3, x5
   1f130:	b.cc	1f19c <ZSTD_compress@@Base+0x10950>  // b.lo, b.ul, b.last
   1f134:	sub	x4, x2, #0x3
   1f138:	cmp	x3, x4
   1f13c:	b.cs	1f158 <ZSTD_compress@@Base+0x1090c>  // b.hs, b.nlast
   1f140:	ldr	w4, [x1]
   1f144:	ldr	w5, [x3]
   1f148:	cmp	w5, w4
   1f14c:	b.ne	1f158 <ZSTD_compress@@Base+0x1090c>  // b.any
   1f150:	add	x3, x3, #0x4
   1f154:	add	x1, x1, #0x4
   1f158:	sub	x4, x2, #0x1
   1f15c:	cmp	x3, x4
   1f160:	b.cs	1f17c <ZSTD_compress@@Base+0x10930>  // b.hs, b.nlast
   1f164:	ldrh	w5, [x3]
   1f168:	ldrh	w4, [x1]
   1f16c:	cmp	w5, w4
   1f170:	b.ne	1f17c <ZSTD_compress@@Base+0x10930>  // b.any
   1f174:	add	x3, x3, #0x2
   1f178:	add	x1, x1, #0x2
   1f17c:	cmp	x3, x2
   1f180:	b.cs	1f1c4 <ZSTD_compress@@Base+0x10978>  // b.hs, b.nlast
   1f184:	ldrb	w2, [x1]
   1f188:	ldrb	w1, [x3]
   1f18c:	cmp	w2, w1
   1f190:	b.ne	1f1c4 <ZSTD_compress@@Base+0x10978>  // b.any
   1f194:	add	x3, x3, #0x1
   1f198:	b	1f1c4 <ZSTD_compress@@Base+0x10978>
   1f19c:	ldr	x4, [x1]
   1f1a0:	ldr	x6, [x3]
   1f1a4:	cmp	x4, x6
   1f1a8:	b.ne	1f1b4 <ZSTD_compress@@Base+0x10968>  // b.any
   1f1ac:	add	x3, x3, #0x8
   1f1b0:	b	1f128 <ZSTD_compress@@Base+0x108dc>
   1f1b4:	eor	x4, x4, x6
   1f1b8:	rbit	x4, x4
   1f1bc:	clz	x4, x4
   1f1c0:	add	x3, x3, x4, lsr #3
   1f1c4:	sub	x0, x3, x0
   1f1c8:	b	1f120 <ZSTD_compress@@Base+0x108d4>
   1f1cc:	mov	x3, x0
   1f1d0:	b	1f134 <ZSTD_compress@@Base+0x108e8>
   1f1d4:	stp	x29, x30, [sp, #-16]!
   1f1d8:	mov	x29, sp
   1f1dc:	ldr	w2, [x0, #208]
   1f1e0:	cmp	w2, #0x1
   1f1e4:	b.eq	1f1fc <ZSTD_compress@@Base+0x109b0>  // b.none
   1f1e8:	cmp	w2, #0x2
   1f1ec:	b.eq	1f208 <ZSTD_compress@@Base+0x109bc>  // b.none
   1f1f0:	mov	x0, #0x0                   	// #0
   1f1f4:	ldp	x29, x30, [sp], #16
   1f1f8:	ret
   1f1fc:	mov	w2, #0x0                   	// #0
   1f200:	bl	14c50 <ZSTD_compress@@Base+0x6404>
   1f204:	b	1f1f0 <ZSTD_compress@@Base+0x109a4>
   1f208:	mov	w2, #0x0                   	// #0
   1f20c:	bl	105b4 <ZSTD_compress@@Base+0x1d68>
   1f210:	b	1f1f0 <ZSTD_compress@@Base+0x109a4>
   1f214:	mov	w6, #0x20                  	// #32
   1f218:	sub	w9, w6, w2
   1f21c:	sub	w6, w6, w5
   1f220:	mov	w7, #0xffffffff            	// #-1
   1f224:	sub	w6, w6, w2
   1f228:	lsl	w8, w7, w5
   1f22c:	cmp	w5, w9
   1f230:	bic	w10, w1, w8
   1f234:	lsr	x6, x1, x6
   1f238:	bic	w6, w6, w8
   1f23c:	mov	w8, #0x1                   	// #1
   1f240:	csel	w6, w6, w10, ls  // ls = plast
   1f244:	lsl	w5, w8, w5
   1f248:	add	w5, w5, w7
   1f24c:	cmp	w5, w6
   1f250:	b.ne	1f2a0 <ZSTD_compress@@Base+0x10a54>  // b.any
   1f254:	neg	w5, w2
   1f258:	cmp	w2, #0x0
   1f25c:	ldr	x6, [x0, #40]
   1f260:	lsr	x5, x1, x5
   1f264:	csel	w2, w5, w2, ne  // ne = any
   1f268:	lsr	x1, x1, x9
   1f26c:	ldr	x0, [x0, #32]
   1f270:	lsl	x5, x2, x4
   1f274:	ldrb	w8, [x6, x2]
   1f278:	lsl	w7, w7, w4
   1f27c:	add	x5, x5, x8
   1f280:	lsl	x8, x5, #3
   1f284:	add	x5, x0, x5, lsl #3
   1f288:	str	w3, [x0, x8]
   1f28c:	str	w1, [x5, #4]
   1f290:	ldrb	w0, [x6, x2]
   1f294:	add	w0, w0, #0x1
   1f298:	bic	w7, w0, w7
   1f29c:	strb	w7, [x6, x2]
   1f2a0:	ret
   1f2a4:	ldr	w2, [x0, #8]
   1f2a8:	ldr	w3, [x1]
   1f2ac:	str	w3, [x0, #20]
   1f2b0:	cbnz	w2, 1f2bc <ZSTD_compress@@Base+0x10a70>
   1f2b4:	mov	w2, #0x3                   	// #3
   1f2b8:	str	w2, [x0, #8]
   1f2bc:	ldr	w2, [x0, #12]
   1f2c0:	cbnz	w2, 1f2cc <ZSTD_compress@@Base+0x10a80>
   1f2c4:	mov	w2, #0x40                  	// #64
   1f2c8:	str	w2, [x0, #12]
   1f2cc:	ldr	w2, [x1, #24]
   1f2d0:	cmp	w2, #0x6
   1f2d4:	b.ls	1f2ec <ZSTD_compress@@Base+0x10aa0>  // b.plast
   1f2d8:	ldr	w2, [x1, #20]
   1f2dc:	ldr	w1, [x0, #12]
   1f2e0:	cmp	w1, w2
   1f2e4:	csel	w1, w1, w2, cs  // cs = hs, nlast
   1f2e8:	str	w1, [x0, #12]
   1f2ec:	ldr	w1, [x0, #4]
   1f2f0:	cbnz	w1, 1f308 <ZSTD_compress@@Base+0x10abc>
   1f2f4:	sub	w1, w3, #0x7
   1f2f8:	mov	w2, #0x6                   	// #6
   1f2fc:	cmp	w1, #0x6
   1f300:	csel	w1, w1, w2, cs  // cs = hs, nlast
   1f304:	str	w1, [x0, #4]
   1f308:	ldr	w1, [x0, #16]
   1f30c:	ldr	w2, [x0, #4]
   1f310:	cbnz	w1, 1f324 <ZSTD_compress@@Base+0x10ad8>
   1f314:	cmp	w3, w2
   1f318:	b.cc	1f320 <ZSTD_compress@@Base+0x10ad4>  // b.lo, b.ul, b.last
   1f31c:	sub	w1, w3, w2
   1f320:	str	w1, [x0, #16]
   1f324:	ldr	w1, [x0, #8]
   1f328:	cmp	w1, w2
   1f32c:	csel	w1, w1, w2, ls  // ls = plast
   1f330:	str	w1, [x0, #8]
   1f334:	ret
   1f338:	ldp	w2, w1, [x0, #4]
   1f33c:	ldr	w0, [x0]
   1f340:	cbz	w0, 1f368 <ZSTD_compress@@Base+0x10b1c>
   1f344:	cmp	w1, w2
   1f348:	mov	x0, #0x1                   	// #1
   1f34c:	csel	w1, w1, w2, ls  // ls = plast
   1f350:	sub	w1, w2, w1
   1f354:	lsl	x0, x0, x1
   1f358:	mov	x1, #0x8                   	// #8
   1f35c:	lsl	x2, x1, x2
   1f360:	add	x0, x0, x2
   1f364:	ret
   1f368:	mov	x0, #0x0                   	// #0
   1f36c:	b	1f364 <ZSTD_compress@@Base+0x10b18>
   1f370:	ldr	w2, [x0]
   1f374:	cbz	w2, 1f384 <ZSTD_compress@@Base+0x10b38>
   1f378:	ldr	w0, [x0, #12]
   1f37c:	udiv	x0, x1, x0
   1f380:	ret
   1f384:	mov	x0, #0x0                   	// #0
   1f388:	b	1f380 <ZSTD_compress@@Base+0x10b34>
   1f38c:	stp	x29, x30, [sp, #-272]!
   1f390:	mov	x12, x0
   1f394:	tst	x4, #0xfffff
   1f398:	mov	x29, sp
   1f39c:	ldr	w0, [x2, #20]
   1f3a0:	mov	x18, x2
   1f3a4:	stp	x21, x22, [sp, #32]
   1f3a8:	mov	w21, #0x1                   	// #1
   1f3ac:	mov	x15, x3
   1f3b0:	lsl	w21, w21, w0
   1f3b4:	add	x0, x3, x4
   1f3b8:	stp	x19, x20, [sp, #16]
   1f3bc:	mov	x20, x1
   1f3c0:	str	x0, [sp, #200]
   1f3c4:	lsr	x0, x4, #20
   1f3c8:	cinc	x0, x0, ne  // ne = any
   1f3cc:	stp	x23, x24, [sp, #48]
   1f3d0:	stp	x25, x26, [sp, #64]
   1f3d4:	stp	x27, x28, [sp, #80]
   1f3d8:	str	xzr, [sp, #96]
   1f3dc:	str	x4, [sp, #112]
   1f3e0:	str	xzr, [sp, #128]
   1f3e4:	str	x0, [sp, #208]
   1f3e8:	ldr	x0, [sp, #96]
   1f3ec:	ldr	x1, [sp, #208]
   1f3f0:	cmp	x0, x1
   1f3f4:	b.eq	1f410 <ZSTD_compress@@Base+0x10bc4>  // b.none
   1f3f8:	ldr	x0, [x20, #16]
   1f3fc:	str	x0, [sp, #120]
   1f400:	ldr	x0, [x20, #24]
   1f404:	ldr	x1, [sp, #120]
   1f408:	cmp	x1, x0
   1f40c:	b.cc	1f418 <ZSTD_compress@@Base+0x10bcc>  // b.lo, b.ul, b.last
   1f410:	mov	x0, #0x0                   	// #0
   1f414:	b	1f9c4 <ZSTD_compress@@Base+0x11178>
   1f418:	ldr	x0, [sp, #96]
   1f41c:	add	x13, x15, #0x100, lsl #12
   1f420:	ldr	x1, [sp, #112]
   1f424:	ldr	w2, [x18, #4]
   1f428:	sub	x0, x1, x0, lsl #20
   1f42c:	mov	x1, #0xfffff               	// #1048575
   1f430:	cmp	x0, x1
   1f434:	ldr	x0, [sp, #200]
   1f438:	ldr	x1, [x12, #8]
   1f43c:	csel	x13, x13, x0, hi  // hi = pmore
   1f440:	sub	x0, x13, x15
   1f444:	str	x0, [sp, #216]
   1f448:	sub	x3, x13, x1
   1f44c:	mov	w0, #0xe0000000            	// #-536870912
   1f450:	cmp	w3, w0
   1f454:	b.hi	1f5a0 <ZSTD_compress@@Base+0x10d54>  // b.pmore
   1f458:	ldr	x23, [x12, #8]
   1f45c:	sub	x0, x13, x23
   1f460:	cmp	w21, w0
   1f464:	b.cc	1f608 <ZSTD_compress@@Base+0x10dbc>  // b.lo, b.ul, b.last
   1f468:	ldp	w22, w0, [x12, #24]
   1f46c:	ldr	w4, [x18, #16]
   1f470:	stp	w0, w4, [sp, #104]
   1f474:	ldr	w0, [x18, #12]
   1f478:	ldr	w3, [x18, #8]
   1f47c:	ldrb	w4, [sp, #108]
   1f480:	str	w0, [sp, #144]
   1f484:	sub	w25, w2, w3
   1f488:	ldr	x0, [x12, #48]
   1f48c:	str	x0, [sp, #224]
   1f490:	mov	w0, #0x1                   	// #1
   1f494:	lsl	w1, w0, w3
   1f498:	lsl	w0, w0, w4
   1f49c:	sub	w0, w0, #0x1
   1f4a0:	str	w0, [sp, #256]
   1f4a4:	ldr	w0, [sp, #104]
   1f4a8:	ldr	w4, [sp, #104]
   1f4ac:	cmp	w22, w0
   1f4b0:	csel	w0, w22, w0, ls  // ls = plast
   1f4b4:	str	w0, [sp, #184]
   1f4b8:	cmp	w22, w4
   1f4bc:	mov	w0, w22
   1f4c0:	b.ls	1f630 <ZSTD_compress@@Base+0x10de4>  // b.plast
   1f4c4:	ldr	x26, [x12, #16]
   1f4c8:	ldr	w4, [sp, #184]
   1f4cc:	add	x4, x26, w4, uxtw
   1f4d0:	str	x4, [sp, #192]
   1f4d4:	add	x4, x26, x0
   1f4d8:	str	x4, [sp, #176]
   1f4dc:	add	x0, x23, x0
   1f4e0:	str	x0, [sp, #136]
   1f4e4:	ldr	w0, [sp, #144]
   1f4e8:	mov	x4, #0xfffffffffffffff8    	// #-8
   1f4ec:	mov	x11, x15
   1f4f0:	mov	x19, x15
   1f4f4:	cmp	w0, #0x8
   1f4f8:	mov	x14, #0x0                   	// #0
   1f4fc:	csneg	x0, x4, x0, ls  // ls = plast
   1f500:	ldrb	w4, [sp, #108]
   1f504:	add	x0, x13, x0
   1f508:	str	x0, [sp, #152]
   1f50c:	mov	w0, #0xffffffff            	// #-1
   1f510:	lsl	w0, w0, w4
   1f514:	mvn	w0, w0
   1f518:	str	w0, [sp, #188]
   1f51c:	ubfiz	x0, x1, #3, #32
   1f520:	str	x0, [sp, #240]
   1f524:	sub	w0, w3, w2
   1f528:	ldr	w2, [sp, #108]
   1f52c:	mov	x1, #0x0                   	// #0
   1f530:	str	w0, [sp, #148]
   1f534:	sub	w0, w0, w2
   1f538:	add	w0, w0, #0x20
   1f53c:	str	w0, [sp, #260]
   1f540:	ldr	x0, [sp, #152]
   1f544:	cmp	x0, x11
   1f548:	b.cs	1f640 <ZSTD_compress@@Base+0x10df4>  // b.hs, b.nlast
   1f54c:	sub	x0, x13, x19
   1f550:	cmn	x0, #0x78
   1f554:	b.hi	1f9c4 <ZSTD_compress@@Base+0x11178>  // b.pmore
   1f558:	ldr	x1, [x20, #16]
   1f55c:	ldr	x2, [sp, #120]
   1f560:	cmp	x1, x2
   1f564:	b.ls	1f9b0 <ZSTD_compress@@Base+0x11164>  // b.plast
   1f568:	ldr	x2, [x20]
   1f56c:	mov	x1, #0xc                   	// #12
   1f570:	ldr	x3, [sp, #120]
   1f574:	madd	x1, x3, x1, x2
   1f578:	ldr	w3, [sp, #128]
   1f57c:	ldr	w2, [x1, #4]
   1f580:	add	w2, w2, w3
   1f584:	str	w2, [x1, #4]
   1f588:	ldr	x1, [sp, #96]
   1f58c:	add	x15, x15, #0x100, lsl #12
   1f590:	str	x0, [sp, #128]
   1f594:	add	x1, x1, #0x1
   1f598:	str	x1, [sp, #96]
   1f59c:	b	1f3e8 <ZSTD_compress@@Base+0x10b9c>
   1f5a0:	sub	x0, x15, x1
   1f5a4:	sub	w6, w0, w21
   1f5a8:	sub	w5, w0, w21
   1f5ac:	add	x1, x1, x6
   1f5b0:	str	x1, [x12, #8]
   1f5b4:	ldr	x1, [x12, #16]
   1f5b8:	sub	w0, w21, w0
   1f5bc:	ldp	w3, w4, [x12, #24]
   1f5c0:	add	x1, x1, x6
   1f5c4:	str	x1, [x12, #16]
   1f5c8:	add	w1, w0, w4
   1f5cc:	str	w1, [x12, #28]
   1f5d0:	add	w1, w0, w3
   1f5d4:	str	w1, [x12, #24]
   1f5d8:	ldr	x1, [x12, #32]
   1f5dc:	mov	w3, #0x1                   	// #1
   1f5e0:	lsl	w3, w3, w2
   1f5e4:	add	x3, x1, w3, uxtw #3
   1f5e8:	cmp	x3, x1
   1f5ec:	b.eq	1f458 <ZSTD_compress@@Base+0x10c0c>  // b.none
   1f5f0:	ldr	w6, [x1]
   1f5f4:	add	w4, w6, w0
   1f5f8:	cmp	w6, w5
   1f5fc:	csel	w4, w4, wzr, cs  // cs = hs, nlast
   1f600:	str	w4, [x1], #8
   1f604:	b	1f5e8 <ZSTD_compress@@Base+0x10d9c>
   1f608:	ldr	w1, [x12, #28]
   1f60c:	sub	w0, w0, w21
   1f610:	cmp	w0, w1
   1f614:	b.ls	1f61c <ZSTD_compress@@Base+0x10dd0>  // b.plast
   1f618:	str	w0, [x12, #28]
   1f61c:	ldp	w1, w0, [x12, #24]
   1f620:	cmp	w1, w0
   1f624:	b.cs	1f468 <ZSTD_compress@@Base+0x10c1c>  // b.hs, b.nlast
   1f628:	str	w0, [x12, #24]
   1f62c:	b	1f468 <ZSTD_compress@@Base+0x10c1c>
   1f630:	mov	x26, #0x0                   	// #0
   1f634:	str	xzr, [sp, #176]
   1f638:	str	xzr, [sp, #192]
   1f63c:	b	1f4dc <ZSTD_compress@@Base+0x10c90>
   1f640:	ldr	w7, [sp, #144]
   1f644:	cmp	x15, x11
   1f648:	b.eq	1f6ec <ZSTD_compress@@Base+0x10ea0>  // b.none
   1f64c:	ldrb	w0, [x1]
   1f650:	ldr	x2, [sp, #224]
   1f654:	add	x0, x0, #0xa
   1f658:	msub	x14, x0, x2, x14
   1f65c:	ldrb	w0, [x1, x7]
   1f660:	mov	x1, #0x6463                	// #25699
   1f664:	movk	x1, #0xb7a5, lsl #16
   1f668:	add	x0, x0, #0xa
   1f66c:	movk	x1, #0xbcdc, lsl #32
   1f670:	movk	x1, #0xcf1b, lsl #48
   1f674:	madd	x14, x14, x1, x0
   1f678:	ldrb	w1, [sp, #260]
   1f67c:	ldr	w0, [sp, #148]
   1f680:	ldr	w3, [sp, #188]
   1f684:	add	w2, w0, #0x20
   1f688:	lsr	x1, x14, x1
   1f68c:	ldr	w0, [sp, #188]
   1f690:	and	w1, w3, w1
   1f694:	ldr	w3, [sp, #108]
   1f698:	and	w0, w0, w14
   1f69c:	cmp	w3, w2
   1f6a0:	csel	w0, w1, w0, ls  // ls = plast
   1f6a4:	ldr	w1, [sp, #256]
   1f6a8:	cmp	w1, w0
   1f6ac:	b.eq	1f6f8 <ZSTD_compress@@Base+0x10eac>  // b.none
   1f6b0:	add	x0, x11, #0x1
   1f6b4:	mov	x1, x11
   1f6b8:	mov	x11, x0
   1f6bc:	b	1f540 <ZSTD_compress@@Base+0x10cf4>
   1f6c0:	ldrb	w1, [x11, x0]
   1f6c4:	mov	x2, #0x6463                	// #25699
   1f6c8:	movk	x2, #0xb7a5, lsl #16
   1f6cc:	add	x0, x0, #0x1
   1f6d0:	add	x1, x1, #0xa
   1f6d4:	movk	x2, #0xbcdc, lsl #32
   1f6d8:	movk	x2, #0xcf1b, lsl #48
   1f6dc:	madd	x14, x14, x2, x1
   1f6e0:	cmp	x0, x7
   1f6e4:	b.cc	1f6c0 <ZSTD_compress@@Base+0x10e74>  // b.lo, b.ul, b.last
   1f6e8:	b	1f678 <ZSTD_compress@@Base+0x10e2c>
   1f6ec:	mov	x0, #0x0                   	// #0
   1f6f0:	mov	x14, #0x0                   	// #0
   1f6f4:	b	1f6e0 <ZSTD_compress@@Base+0x10e94>
   1f6f8:	ldr	w0, [sp, #148]
   1f6fc:	cmp	w25, #0x0
   1f700:	ldr	w8, [x18, #8]
   1f704:	mov	x9, #0x0                   	// #0
   1f708:	add	w4, w0, #0x40
   1f70c:	mov	x24, #0x0                   	// #0
   1f710:	ldr	x0, [x12, #32]
   1f714:	lsr	x4, x14, x4
   1f718:	csel	w4, w4, wzr, ne  // ne = any
   1f71c:	mov	x28, #0x0                   	// #0
   1f720:	str	xzr, [sp, #168]
   1f724:	lsl	x4, x4, x8
   1f728:	add	x10, x0, x4, lsl #3
   1f72c:	lsr	x0, x14, x2
   1f730:	str	x0, [sp, #232]
   1f734:	ldr	x0, [sp, #240]
   1f738:	add	x0, x10, x0
   1f73c:	str	x0, [sp, #248]
   1f740:	ldr	x0, [sp, #248]
   1f744:	cmp	x10, x0
   1f748:	b.cc	1f770 <ZSTD_compress@@Base+0x10f24>  // b.lo, b.ul, b.last
   1f74c:	sub	x3, x11, x23
   1f750:	cbnz	x9, 1f8d0 <ZSTD_compress@@Base+0x11084>
   1f754:	ldr	w5, [x18, #16]
   1f758:	mov	w4, w8
   1f75c:	mov	w2, w25
   1f760:	mov	x1, x14
   1f764:	mov	x0, x12
   1f768:	bl	1f214 <ZSTD_compress@@Base+0x109c8>
   1f76c:	b	1f6b0 <ZSTD_compress@@Base+0x10e64>
   1f770:	ldr	w0, [x10, #4]
   1f774:	ldr	w1, [sp, #232]
   1f778:	cmp	w1, w0
   1f77c:	b.ne	1f85c <ZSTD_compress@@Base+0x11010>  // b.any
   1f780:	ldr	w0, [x10]
   1f784:	ldr	w1, [sp, #184]
   1f788:	cmp	w1, w0
   1f78c:	b.cs	1f85c <ZSTD_compress@@Base+0x11010>  // b.hs, b.nlast
   1f790:	ldr	w1, [sp, #104]
   1f794:	mov	w3, w0
   1f798:	cmp	w22, w1
   1f79c:	b.ls	1f87c <ZSTD_compress@@Base+0x11030>  // b.plast
   1f7a0:	cmp	w22, w0
   1f7a4:	csel	x1, x26, x23, hi  // hi = pmore
   1f7a8:	add	x27, x1, x3
   1f7ac:	b.ls	1f864 <ZSTD_compress@@Base+0x11018>  // b.plast
   1f7b0:	ldr	x6, [sp, #176]
   1f7b4:	ldr	x0, [sp, #192]
   1f7b8:	sub	x2, x6, x27
   1f7bc:	add	x2, x11, x2
   1f7c0:	mov	x1, x27
   1f7c4:	cmp	x13, x2
   1f7c8:	str	x0, [sp, #160]
   1f7cc:	csel	x2, x13, x2, cc  // cc = lo, ul, last
   1f7d0:	mov	x0, x11
   1f7d4:	str	x6, [sp, #264]
   1f7d8:	bl	1f0f4 <ZSTD_compress@@Base+0x108a8>
   1f7dc:	mov	x5, x0
   1f7e0:	ldr	x6, [sp, #264]
   1f7e4:	add	x0, x27, x0
   1f7e8:	cmp	x6, x0
   1f7ec:	b.ne	1f80c <ZSTD_compress@@Base+0x10fc0>  // b.any
   1f7f0:	ldr	x1, [sp, #136]
   1f7f4:	add	x0, x11, x5
   1f7f8:	mov	x2, x13
   1f7fc:	str	x5, [sp, #264]
   1f800:	bl	1f0f4 <ZSTD_compress@@Base+0x108a8>
   1f804:	ldr	x5, [sp, #264]
   1f808:	add	x5, x5, x0
   1f80c:	cmp	x5, x7
   1f810:	b.cc	1f85c <ZSTD_compress@@Base+0x11010>  // b.lo, b.ul, b.last
   1f814:	mov	x0, x11
   1f818:	ldr	x2, [sp, #160]
   1f81c:	cmp	x19, x0
   1f820:	sub	x1, x11, x0
   1f824:	ccmp	x2, x27, #0x2, cc  // cc = lo, ul, last
   1f828:	b.cs	1f83c <ZSTD_compress@@Base+0x10ff0>  // b.hs, b.nlast
   1f82c:	ldurb	w6, [x0, #-1]
   1f830:	ldurb	w2, [x27, #-1]
   1f834:	cmp	w6, w2
   1f838:	b.eq	1f870 <ZSTD_compress@@Base+0x11024>  // b.none
   1f83c:	ldr	x2, [sp, #168]
   1f840:	add	x0, x5, x1
   1f844:	cmp	x2, x0
   1f848:	b.cs	1f85c <ZSTD_compress@@Base+0x11010>  // b.hs, b.nlast
   1f84c:	mov	x9, x10
   1f850:	mov	x24, x1
   1f854:	mov	x28, x5
   1f858:	str	x0, [sp, #168]
   1f85c:	add	x10, x10, #0x8
   1f860:	b	1f740 <ZSTD_compress@@Base+0x10ef4>
   1f864:	mov	x6, x13
   1f868:	ldr	x0, [sp, #136]
   1f86c:	b	1f7b8 <ZSTD_compress@@Base+0x10f6c>
   1f870:	sub	x0, x0, #0x1
   1f874:	sub	x27, x27, #0x1
   1f878:	b	1f818 <ZSTD_compress@@Base+0x10fcc>
   1f87c:	add	x27, x23, x3
   1f880:	mov	x2, x13
   1f884:	mov	x1, x27
   1f888:	mov	x0, x11
   1f88c:	bl	1f0f4 <ZSTD_compress@@Base+0x108a8>
   1f890:	mov	x5, x0
   1f894:	cmp	x0, x7
   1f898:	b.cc	1f85c <ZSTD_compress@@Base+0x11010>  // b.lo, b.ul, b.last
   1f89c:	mov	x0, x11
   1f8a0:	ldr	x2, [sp, #136]
   1f8a4:	cmp	x19, x0
   1f8a8:	sub	x1, x11, x0
   1f8ac:	ccmp	x2, x27, #0x2, cc  // cc = lo, ul, last
   1f8b0:	b.cs	1f83c <ZSTD_compress@@Base+0x10ff0>  // b.hs, b.nlast
   1f8b4:	ldurb	w3, [x0, #-1]
   1f8b8:	ldurb	w2, [x27, #-1]
   1f8bc:	cmp	w3, w2
   1f8c0:	b.ne	1f83c <ZSTD_compress@@Base+0x10ff0>  // b.any
   1f8c4:	sub	x0, x0, #0x1
   1f8c8:	sub	x27, x27, #0x1
   1f8cc:	b	1f8a0 <ZSTD_compress@@Base+0x11054>
   1f8d0:	ldp	x1, x0, [x20, #16]
   1f8d4:	mov	x2, #0xc                   	// #12
   1f8d8:	ldr	x5, [x20]
   1f8dc:	add	x27, x28, x24
   1f8e0:	ldr	w4, [x9]
   1f8e4:	sub	x24, x11, x24
   1f8e8:	mul	x2, x1, x2
   1f8ec:	sub	w4, w3, w4
   1f8f0:	cmp	x1, x0
   1f8f4:	add	x6, x5, x2
   1f8f8:	b.eq	1f9c0 <ZSTD_compress@@Base+0x11174>  // b.none
   1f8fc:	sub	x19, x24, x19
   1f900:	stp	w19, w27, [x6, #4]
   1f904:	str	w4, [x5, x2]
   1f908:	add	x1, x1, #0x1
   1f90c:	ldr	w5, [x18, #16]
   1f910:	mov	x0, x12
   1f914:	str	x1, [x20, #16]
   1f918:	mov	w4, w8
   1f91c:	mov	w2, w25
   1f920:	mov	x1, x14
   1f924:	bl	1f214 <ZSTD_compress@@Base+0x109c8>
   1f928:	add	x19, x11, x28
   1f92c:	ldr	x0, [sp, #152]
   1f930:	cmp	x0, x19
   1f934:	b.cc	1f958 <ZSTD_compress@@Base+0x1110c>  // b.lo, b.ul, b.last
   1f938:	ldp	w4, w28, [x18, #8]
   1f93c:	add	x11, x11, #0x1
   1f940:	ldr	w5, [x18, #16]
   1f944:	sub	w28, w28, #0x1
   1f948:	cmp	x19, x11
   1f94c:	b.hi	1f960 <ZSTD_compress@@Base+0x11114>  // b.pmore
   1f950:	sub	x11, x27, #0x1
   1f954:	add	x11, x24, x11
   1f958:	mov	x0, x19
   1f95c:	b	1f6b4 <ZSTD_compress@@Base+0x10e68>
   1f960:	ldurb	w0, [x11, #-1]
   1f964:	sub	w3, w11, w23
   1f968:	ldr	x1, [x12, #48]
   1f96c:	add	x0, x0, #0xa
   1f970:	mov	w2, w25
   1f974:	str	w5, [sp, #160]
   1f978:	msub	x14, x0, x1, x14
   1f97c:	ldrb	w0, [x11, x28]
   1f980:	mov	x1, #0x6463                	// #25699
   1f984:	movk	x1, #0xb7a5, lsl #16
   1f988:	add	x0, x0, #0xa
   1f98c:	movk	x1, #0xbcdc, lsl #32
   1f990:	movk	x1, #0xcf1b, lsl #48
   1f994:	madd	x14, x14, x1, x0
   1f998:	mov	x0, x12
   1f99c:	mov	x1, x14
   1f9a0:	bl	1f214 <ZSTD_compress@@Base+0x109c8>
   1f9a4:	add	x11, x11, #0x1
   1f9a8:	ldr	w5, [sp, #160]
   1f9ac:	b	1f948 <ZSTD_compress@@Base+0x110fc>
   1f9b0:	ldr	x0, [sp, #128]
   1f9b4:	ldr	x1, [sp, #216]
   1f9b8:	add	x0, x0, x1
   1f9bc:	b	1f588 <ZSTD_compress@@Base+0x10d3c>
   1f9c0:	mov	x0, #0xffffffffffffffba    	// #-70
   1f9c4:	ldp	x19, x20, [sp, #16]
   1f9c8:	ldp	x21, x22, [sp, #32]
   1f9cc:	ldp	x23, x24, [sp, #48]
   1f9d0:	ldp	x25, x26, [sp, #64]
   1f9d4:	ldp	x27, x28, [sp, #80]
   1f9d8:	ldp	x29, x30, [sp], #272
   1f9dc:	ret
   1f9e0:	mov	x7, #0xc                   	// #12
   1f9e4:	cbz	x1, 1fa14 <ZSTD_compress@@Base+0x111c8>
   1f9e8:	ldp	x4, x6, [x0, #8]
   1f9ec:	cmp	x4, x6
   1f9f0:	b.cs	1fa14 <ZSTD_compress@@Base+0x111c8>  // b.hs, b.nlast
   1f9f4:	ldr	x3, [x0]
   1f9f8:	madd	x3, x4, x7, x3
   1f9fc:	ldr	w5, [x3, #4]
   1fa00:	mov	w8, w5
   1fa04:	cmp	x1, w5, uxtw
   1fa08:	b.hi	1fa18 <ZSTD_compress@@Base+0x111cc>  // b.pmore
   1fa0c:	sub	w1, w5, w1
   1fa10:	str	w1, [x3, #4]
   1fa14:	ret
   1fa18:	ldr	w5, [x3, #8]
   1fa1c:	sub	x1, x1, x8
   1fa20:	str	wzr, [x3, #4]
   1fa24:	mov	w8, w5
   1fa28:	cmp	x1, w5, uxtw
   1fa2c:	b.cs	1fa60 <ZSTD_compress@@Base+0x11214>  // b.hs, b.nlast
   1fa30:	sub	w1, w5, w1
   1fa34:	str	w1, [x3, #8]
   1fa38:	cmp	w1, w2
   1fa3c:	b.cs	1fa14 <ZSTD_compress@@Base+0x111c8>  // b.hs, b.nlast
   1fa40:	add	x4, x4, #0x1
   1fa44:	cmp	x4, x6
   1fa48:	b.cs	1fa58 <ZSTD_compress@@Base+0x1120c>  // b.hs, b.nlast
   1fa4c:	ldr	w2, [x3, #16]
   1fa50:	add	w1, w2, w1
   1fa54:	str	w1, [x3, #16]
   1fa58:	str	x4, [x0, #8]
   1fa5c:	b	1fa14 <ZSTD_compress@@Base+0x111c8>
   1fa60:	str	wzr, [x3, #8]
   1fa64:	add	x4, x4, #0x1
   1fa68:	sub	x1, x1, x8
   1fa6c:	str	x4, [x0, #8]
   1fa70:	b	1f9e4 <ZSTD_compress@@Base+0x11198>
   1fa74:	stp	x29, x30, [sp, #-112]!
   1fa78:	mov	x29, sp
   1fa7c:	stp	x19, x20, [sp, #16]
   1fa80:	mov	x19, x1
   1fa84:	ldr	w1, [x1, #200]
   1fa88:	mov	x20, x2
   1fa8c:	stp	x21, x22, [sp, #32]
   1fa90:	ldr	w2, [x19, #24]
   1fa94:	stp	x23, x24, [sp, #48]
   1fa98:	mov	x21, x3
   1fa9c:	stp	x25, x26, [sp, #64]
   1faa0:	mov	x25, x4
   1faa4:	stp	x27, x28, [sp, #80]
   1faa8:	mov	x27, x0
   1faac:	mov	x28, x5
   1fab0:	str	w1, [sp, #104]
   1fab4:	ldr	w1, [x19, #28]
   1fab8:	ldr	w0, [x19, #208]
   1fabc:	cmp	w2, w1
   1fac0:	b.hi	1fb94 <ZSTD_compress@@Base+0x11348>  // b.pmore
   1fac4:	ldr	x1, [x19, #176]
   1fac8:	cmp	x1, #0x0
   1facc:	cset	w1, ne  // ne = any
   1fad0:	lsl	w1, w1, #1
   1fad4:	add	x28, x25, x28
   1fad8:	bl	a648 <ZSTD_toFlushNow@@Base+0xe8>
   1fadc:	sub	x23, x28, #0x20
   1fae0:	str	x0, [sp, #96]
   1fae4:	ldp	x0, x1, [x27, #8]
   1fae8:	sub	x26, x28, x25
   1faec:	cmp	x0, x1
   1faf0:	b.cs	1fb3c <ZSTD_compress@@Base+0x112f0>  // b.hs, b.nlast
   1faf4:	cmp	x25, x28
   1faf8:	b.cs	1fb3c <ZSTD_compress@@Base+0x112f0>  // b.hs, b.nlast
   1fafc:	mov	x1, #0xc                   	// #12
   1fb00:	ldr	x5, [x27]
   1fb04:	mul	x1, x0, x1
   1fb08:	add	x2, x5, x1
   1fb0c:	ldr	w22, [x5, x1]
   1fb10:	ldp	w8, w24, [x2, #4]
   1fb14:	add	w1, w8, w24
   1fb18:	cmp	w26, w1
   1fb1c:	b.cc	1fb9c <ZSTD_compress@@Base+0x11350>  // b.lo, b.ul, b.last
   1fb20:	add	x0, x0, #0x1
   1fb24:	str	x0, [x27, #8]
   1fb28:	ldr	x1, [x19, #8]
   1fb2c:	ldr	w0, [x19, #36]
   1fb30:	sub	x1, x25, x1
   1fb34:	add	w2, w0, #0x400
   1fb38:	cbnz	w22, 1fbd8 <ZSTD_compress@@Base+0x1138c>
   1fb3c:	ldr	x1, [x19, #8]
   1fb40:	ldr	w0, [x19, #36]
   1fb44:	sub	x1, x25, x1
   1fb48:	add	w2, w0, #0x400
   1fb4c:	cmp	w1, w2
   1fb50:	b.hi	1fdb8 <ZSTD_compress@@Base+0x1156c>  // b.pmore
   1fb54:	mov	x1, x25
   1fb58:	mov	x0, x19
   1fb5c:	bl	1f1d4 <ZSTD_compress@@Base+0x10988>
   1fb60:	mov	x4, x26
   1fb64:	mov	x3, x25
   1fb68:	mov	x2, x21
   1fb6c:	mov	x1, x20
   1fb70:	mov	x0, x19
   1fb74:	ldp	x19, x20, [sp, #16]
   1fb78:	ldp	x21, x22, [sp, #32]
   1fb7c:	ldp	x23, x24, [sp, #48]
   1fb80:	ldp	x25, x26, [sp, #64]
   1fb84:	ldp	x27, x28, [sp, #80]
   1fb88:	ldr	x16, [sp, #96]
   1fb8c:	ldp	x29, x30, [sp], #112
   1fb90:	br	x16
   1fb94:	mov	w1, #0x1                   	// #1
   1fb98:	b	1fad4 <ZSTD_compress@@Base+0x11288>
   1fb9c:	cmp	w26, w8
   1fba0:	b.ls	1fbd0 <ZSTD_compress@@Base+0x11384>  // b.plast
   1fba4:	ldr	w0, [sp, #104]
   1fba8:	sub	w24, w26, w8
   1fbac:	cmp	w0, w24
   1fbb0:	csel	w22, w22, wzr, ls  // ls = plast
   1fbb4:	ldr	w2, [sp, #104]
   1fbb8:	mov	w1, w26
   1fbbc:	mov	x0, x27
   1fbc0:	str	w8, [sp, #108]
   1fbc4:	bl	1f9e0 <ZSTD_compress@@Base+0x11194>
   1fbc8:	ldr	w8, [sp, #108]
   1fbcc:	b	1fb28 <ZSTD_compress@@Base+0x112dc>
   1fbd0:	mov	w22, #0x0                   	// #0
   1fbd4:	b	1fbb4 <ZSTD_compress@@Base+0x11368>
   1fbd8:	cmp	w1, w2
   1fbdc:	b.ls	1fc00 <ZSTD_compress@@Base+0x113b4>  // b.plast
   1fbe0:	mov	w2, #0xfffffc00            	// #-1024
   1fbe4:	sub	w0, w2, w0
   1fbe8:	add	w0, w0, w1
   1fbec:	mov	w2, #0x200                 	// #512
   1fbf0:	cmp	w0, #0x200
   1fbf4:	csel	w0, w0, w2, ls  // ls = plast
   1fbf8:	sub	w0, w1, w0
   1fbfc:	str	w0, [x19, #36]
   1fc00:	mov	x1, x25
   1fc04:	mov	x0, x19
   1fc08:	str	w8, [sp, #108]
   1fc0c:	bl	1f1d4 <ZSTD_compress@@Base+0x10988>
   1fc10:	ldr	w8, [sp, #108]
   1fc14:	mov	x1, x20
   1fc18:	ldr	x5, [sp, #96]
   1fc1c:	mov	w26, w8
   1fc20:	mov	x4, x26
   1fc24:	mov	x3, x25
   1fc28:	mov	x2, x21
   1fc2c:	mov	x0, x19
   1fc30:	blr	x5
   1fc34:	ldr	w1, [x21, #4]
   1fc38:	add	x4, x25, x26
   1fc3c:	ldr	x9, [x20, #24]
   1fc40:	str	w1, [x21, #8]
   1fc44:	ldr	w1, [x21]
   1fc48:	sub	x8, x4, x0
   1fc4c:	stp	w22, w1, [x21]
   1fc50:	mov	x11, x23
   1fc54:	cmp	x23, x4
   1fc58:	sub	w1, w24, #0x3
   1fc5c:	b.cc	1fd1c <ZSTD_compress@@Base+0x114d0>  // b.lo, b.ul, b.last
   1fc60:	ldp	x2, x3, [x8]
   1fc64:	stp	x2, x3, [x9]
   1fc68:	cmp	x0, #0x10
   1fc6c:	b.hi	1fcd0 <ZSTD_compress@@Base+0x11484>  // b.pmore
   1fc70:	ldr	x2, [x20, #24]
   1fc74:	mov	x3, #0xffff                	// #65535
   1fc78:	cmp	x0, x3
   1fc7c:	add	x2, x2, x0
   1fc80:	str	x2, [x20, #24]
   1fc84:	ldr	x2, [x20, #8]
   1fc88:	b.hi	1fd9c <ZSTD_compress@@Base+0x11550>  // b.pmore
   1fc8c:	add	w22, w22, #0x3
   1fc90:	str	w22, [x2]
   1fc94:	strh	w0, [x2, #4]
   1fc98:	mov	w0, #0xffff                	// #65535
   1fc9c:	cmp	w1, w0
   1fca0:	b.ls	1fcbc <ZSTD_compress@@Base+0x11470>  // b.plast
   1fca4:	mov	w0, #0x2                   	// #2
   1fca8:	str	w0, [x20, #72]
   1fcac:	ldr	x0, [x20]
   1fcb0:	sub	x0, x2, x0
   1fcb4:	asr	x0, x0, #3
   1fcb8:	str	w0, [x20, #76]
   1fcbc:	strh	w1, [x2, #6]
   1fcc0:	add	x25, x4, w24, uxtw
   1fcc4:	add	x2, x2, #0x8
   1fcc8:	str	x2, [x20, #8]
   1fccc:	b	1fae4 <ZSTD_compress@@Base+0x11298>
   1fcd0:	ldr	x9, [x20, #24]
   1fcd4:	ldp	x2, x3, [x8, #16]
   1fcd8:	add	x10, x9, x0
   1fcdc:	stp	x2, x3, [x9, #16]
   1fce0:	add	x9, x9, #0x30
   1fce4:	ldp	x2, x3, [x8, #32]
   1fce8:	stp	x2, x3, [x9, #-16]
   1fcec:	cmp	x10, x9
   1fcf0:	b.ls	1fc70 <ZSTD_compress@@Base+0x11424>  // b.plast
   1fcf4:	add	x8, x8, #0x30
   1fcf8:	ldp	x2, x3, [x8]
   1fcfc:	stp	x2, x3, [x9]
   1fd00:	add	x9, x9, #0x20
   1fd04:	ldp	x2, x3, [x8, #16]
   1fd08:	stp	x2, x3, [x9, #-16]
   1fd0c:	add	x8, x8, #0x20
   1fd10:	cmp	x10, x9
   1fd14:	b.hi	1fcf8 <ZSTD_compress@@Base+0x114ac>  // b.pmore
   1fd18:	b	1fc70 <ZSTD_compress@@Base+0x11424>
   1fd1c:	cmp	x8, x23
   1fd20:	b.hi	1fd68 <ZSTD_compress@@Base+0x1151c>  // b.pmore
   1fd24:	ldp	x2, x3, [x8]
   1fd28:	stp	x2, x3, [x9]
   1fd2c:	sub	x10, x23, x8
   1fd30:	ldp	x2, x3, [x8, #16]
   1fd34:	stp	x2, x3, [x9, #16]
   1fd38:	add	x10, x9, x10
   1fd3c:	add	x9, x9, #0x20
   1fd40:	cmp	x10, x9
   1fd44:	b.hi	1fd74 <ZSTD_compress@@Base+0x11528>  // b.pmore
   1fd48:	mov	x2, #0x0                   	// #0
   1fd4c:	add	x3, x11, x2
   1fd50:	cmp	x4, x3
   1fd54:	b.ls	1fc70 <ZSTD_compress@@Base+0x11424>  // b.plast
   1fd58:	ldrb	w3, [x11, x2]
   1fd5c:	strb	w3, [x10, x2]
   1fd60:	add	x2, x2, #0x1
   1fd64:	b	1fd4c <ZSTD_compress@@Base+0x11500>
   1fd68:	mov	x11, x8
   1fd6c:	mov	x10, x9
   1fd70:	b	1fd48 <ZSTD_compress@@Base+0x114fc>
   1fd74:	add	x8, x8, #0x20
   1fd78:	ldp	x2, x3, [x8]
   1fd7c:	stp	x2, x3, [x9]
   1fd80:	add	x9, x9, #0x20
   1fd84:	ldp	x2, x3, [x8, #16]
   1fd88:	stp	x2, x3, [x9, #-16]
   1fd8c:	add	x8, x8, #0x20
   1fd90:	cmp	x10, x9
   1fd94:	b.hi	1fd78 <ZSTD_compress@@Base+0x1152c>  // b.pmore
   1fd98:	b	1fd48 <ZSTD_compress@@Base+0x114fc>
   1fd9c:	mov	w3, #0x1                   	// #1
   1fda0:	str	w3, [x20, #72]
   1fda4:	ldr	x3, [x20]
   1fda8:	sub	x3, x2, x3
   1fdac:	asr	x3, x3, #3
   1fdb0:	str	w3, [x20, #76]
   1fdb4:	b	1fc8c <ZSTD_compress@@Base+0x11440>
   1fdb8:	sub	w0, w1, w0
   1fdbc:	mov	w2, #0x200                 	// #512
   1fdc0:	sub	w0, w0, #0x400
   1fdc4:	cmp	w0, #0x200
   1fdc8:	csel	w0, w0, w2, ls  // ls = plast
   1fdcc:	sub	w0, w1, w0
   1fdd0:	str	w0, [x19, #36]
   1fdd4:	b	1fb54 <ZSTD_compress@@Base+0x11308>
   1fdd8:	mov	x4, x1
   1fddc:	mov	x2, #0x1                   	// #1
   1fde0:	ldrh	w3, [x4], #4
   1fde4:	str	w3, [x0, #24]
   1fde8:	cmp	w3, #0x0
   1fdec:	lsl	x5, x2, x3
   1fdf0:	stp	x5, x4, [x0]
   1fdf4:	sub	w4, w3, #0x1
   1fdf8:	lsl	w2, w2, w4
   1fdfc:	mov	x4, #0x8                   	// #8
   1fe00:	sxtw	x2, w2
   1fe04:	add	x2, x2, #0x1
   1fe08:	lsl	x2, x2, #2
   1fe0c:	csel	x2, x2, x4, ne  // ne = any
   1fe10:	add	x1, x1, x2
   1fe14:	str	x1, [x0, #16]
   1fe18:	ret
   1fe1c:	cmp	x1, x3
   1fe20:	b.ls	1fe40 <ZSTD_compress@@Base+0x115f4>  // b.plast
   1fe24:	mov	x3, x1
   1fe28:	mov	x4, x0
   1fe2c:	mov	x0, #0x0                   	// #0
   1fe30:	add	x1, x3, x0
   1fe34:	cmp	x2, x1
   1fe38:	b.hi	1fe8c <ZSTD_compress@@Base+0x11640>  // b.pmore
   1fe3c:	ret
   1fe40:	ldp	x6, x7, [x1]
   1fe44:	stp	x6, x7, [x0]
   1fe48:	sub	x4, x3, x1
   1fe4c:	ldp	x6, x7, [x1, #16]
   1fe50:	stp	x6, x7, [x0, #16]
   1fe54:	add	x4, x0, x4
   1fe58:	add	x0, x0, #0x20
   1fe5c:	cmp	x4, x0
   1fe60:	b.ls	1fe2c <ZSTD_compress@@Base+0x115e0>  // b.plast
   1fe64:	add	x1, x1, #0x20
   1fe68:	ldp	x6, x7, [x1]
   1fe6c:	stp	x6, x7, [x0]
   1fe70:	add	x0, x0, #0x20
   1fe74:	ldp	x6, x7, [x1, #16]
   1fe78:	stp	x6, x7, [x0, #-16]
   1fe7c:	add	x1, x1, #0x20
   1fe80:	cmp	x4, x0
   1fe84:	b.hi	1fe68 <ZSTD_compress@@Base+0x1161c>  // b.pmore
   1fe88:	b	1fe2c <ZSTD_compress@@Base+0x115e0>
   1fe8c:	ldrb	w1, [x3, x0]
   1fe90:	strb	w1, [x4, x0]
   1fe94:	add	x0, x0, #0x1
   1fe98:	b	1fe30 <ZSTD_compress@@Base+0x115e4>
   1fe9c:	sub	w2, w2, #0x5
   1fea0:	mov	x3, x0
   1fea4:	cmp	w2, #0x3
   1fea8:	b.hi	1fecc <ZSTD_compress@@Base+0x11680>  // b.pmore
   1feac:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   1feb0:	mov	w4, #0x40                  	// #64
   1feb4:	add	x0, x0, #0x4c4
   1feb8:	ldr	x3, [x3]
   1febc:	ldrb	w0, [x0, w2, uxtw]
   1fec0:	adr	x2, 1fecc <ZSTD_compress@@Base+0x11680>
   1fec4:	add	x0, x2, w0, sxtb #2
   1fec8:	br	x0
   1fecc:	ldr	w0, [x0]
   1fed0:	mov	w2, #0x79b1                	// #31153
   1fed4:	movk	w2, #0x9e37, lsl #16
   1fed8:	neg	w1, w1
   1fedc:	mul	w0, w0, w2
   1fee0:	lsr	w0, w0, w1
   1fee4:	mov	w0, w0
   1fee8:	ret
   1feec:	mov	x0, #0xbb000000            	// #3137339392
   1fef0:	movk	x0, #0xbcdc, lsl #32
   1fef4:	movk	x0, #0xcf1b, lsl #48
   1fef8:	mul	x3, x3, x0
   1fefc:	sub	w0, w4, w1
   1ff00:	lsr	x0, x3, x0
   1ff04:	b	1fee8 <ZSTD_compress@@Base+0x1169c>
   1ff08:	mov	x0, #0xbf9b0000            	// #3214606336
   1ff0c:	b	1fef0 <ZSTD_compress@@Base+0x116a4>
   1ff10:	mov	x0, #0x6300                	// #25344
   1ff14:	movk	x0, #0xbfa5, lsl #16
   1ff18:	b	1fef0 <ZSTD_compress@@Base+0x116a4>
   1ff1c:	mov	x0, #0x6463                	// #25699
   1ff20:	movk	x0, #0xb7a5, lsl #16
   1ff24:	b	1fef0 <ZSTD_compress@@Base+0x116a4>
   1ff28:	mov	w3, #0x1                   	// #1
   1ff2c:	lsl	w2, w3, w2
   1ff30:	ldp	w3, w0, [x0, #28]
   1ff34:	sub	w4, w1, w3
   1ff38:	sub	w1, w1, w2
   1ff3c:	cmp	w4, w2
   1ff40:	csel	w1, w1, w3, hi  // hi = pmore
   1ff44:	cmp	w0, #0x0
   1ff48:	csel	w0, w3, w1, ne  // ne = any
   1ff4c:	ret
   1ff50:	add	w2, w2, #0x4
   1ff54:	add	w1, w1, #0x1
   1ff58:	mov	x5, x0
   1ff5c:	mov	x4, #0x0                   	// #0
   1ff60:	mov	w0, #0x0                   	// #0
   1ff64:	ldr	w3, [x5, x4, lsl #2]
   1ff68:	lsr	w3, w3, w2
   1ff6c:	add	w3, w3, #0x1
   1ff70:	str	w3, [x5, x4, lsl #2]
   1ff74:	add	x4, x4, #0x1
   1ff78:	add	w0, w0, w3
   1ff7c:	cmp	w1, w4
   1ff80:	b.hi	1ff64 <ZSTD_compress@@Base+0x11718>  // b.pmore
   1ff84:	ret
   1ff88:	ldr	x4, [x0, #8]
   1ff8c:	mov	w5, #0x20                  	// #32
   1ff90:	ldr	x7, [x0, #56]
   1ff94:	mov	w6, #0xbd00                	// #48384
   1ff98:	ldr	w0, [x0, #40]
   1ff9c:	movk	w6, #0x35a7, lsl #16
   1ffa0:	ldr	w3, [x1]
   1ffa4:	sub	x8, x2, x4
   1ffa8:	sub	w5, w5, w0
   1ffac:	ldr	w0, [x2]
   1ffb0:	mov	w9, w8
   1ffb4:	add	x2, x4, w3, uxtw
   1ffb8:	mul	w0, w0, w6
   1ffbc:	lsr	w0, w0, w5
   1ffc0:	cmp	w3, w9
   1ffc4:	b.cc	1ffd4 <ZSTD_compress@@Base+0x11788>  // b.lo, b.ul, b.last
   1ffc8:	str	w8, [x1]
   1ffcc:	ldr	w0, [x7, w0, uxtw #2]
   1ffd0:	ret
   1ffd4:	ldr	w4, [x2], #1
   1ffd8:	mul	w4, w4, w6
   1ffdc:	lsr	w4, w4, w5
   1ffe0:	str	w3, [x7, x4, lsl #2]
   1ffe4:	add	w3, w3, #0x1
   1ffe8:	b	1ffc0 <ZSTD_compress@@Base+0x11774>
   1ffec:	sub	x5, x2, #0x7
   1fff0:	cmp	x0, x5
   1fff4:	b.cs	200c4 <ZSTD_compress@@Base+0x11878>  // b.hs, b.nlast
   1fff8:	ldr	x4, [x0]
   1fffc:	ldr	x3, [x1]
   20000:	cmp	x3, x4
   20004:	b.eq	2001c <ZSTD_compress@@Base+0x117d0>  // b.none
   20008:	eor	x0, x3, x4
   2000c:	rbit	x0, x0
   20010:	clz	x0, x0
   20014:	lsr	x0, x0, #3
   20018:	ret
   2001c:	add	x3, x0, #0x8
   20020:	add	x1, x1, #0x8
   20024:	cmp	x3, x5
   20028:	b.cc	20094 <ZSTD_compress@@Base+0x11848>  // b.lo, b.ul, b.last
   2002c:	sub	x4, x2, #0x3
   20030:	cmp	x3, x4
   20034:	b.cs	20050 <ZSTD_compress@@Base+0x11804>  // b.hs, b.nlast
   20038:	ldr	w4, [x1]
   2003c:	ldr	w5, [x3]
   20040:	cmp	w5, w4
   20044:	b.ne	20050 <ZSTD_compress@@Base+0x11804>  // b.any
   20048:	add	x3, x3, #0x4
   2004c:	add	x1, x1, #0x4
   20050:	sub	x4, x2, #0x1
   20054:	cmp	x3, x4
   20058:	b.cs	20074 <ZSTD_compress@@Base+0x11828>  // b.hs, b.nlast
   2005c:	ldrh	w5, [x3]
   20060:	ldrh	w4, [x1]
   20064:	cmp	w5, w4
   20068:	b.ne	20074 <ZSTD_compress@@Base+0x11828>  // b.any
   2006c:	add	x3, x3, #0x2
   20070:	add	x1, x1, #0x2
   20074:	cmp	x3, x2
   20078:	b.cs	200bc <ZSTD_compress@@Base+0x11870>  // b.hs, b.nlast
   2007c:	ldrb	w2, [x1]
   20080:	ldrb	w1, [x3]
   20084:	cmp	w2, w1
   20088:	b.ne	200bc <ZSTD_compress@@Base+0x11870>  // b.any
   2008c:	add	x3, x3, #0x1
   20090:	b	200bc <ZSTD_compress@@Base+0x11870>
   20094:	ldr	x4, [x1]
   20098:	ldr	x6, [x3]
   2009c:	cmp	x4, x6
   200a0:	b.ne	200ac <ZSTD_compress@@Base+0x11860>  // b.any
   200a4:	add	x3, x3, #0x8
   200a8:	b	20020 <ZSTD_compress@@Base+0x117d4>
   200ac:	eor	x4, x4, x6
   200b0:	rbit	x4, x4
   200b4:	clz	x4, x4
   200b8:	add	x3, x3, x4, lsr #3
   200bc:	sub	x0, x3, x0
   200c0:	b	20018 <ZSTD_compress@@Base+0x117cc>
   200c4:	mov	x3, x0
   200c8:	b	2002c <ZSTD_compress@@Base+0x117e0>
   200cc:	mov	x9, x2
   200d0:	sub	x2, x3, x1
   200d4:	add	x2, x0, x2
   200d8:	mov	x8, x1
   200dc:	cmp	x9, x2
   200e0:	mov	x11, x3
   200e4:	mov	x10, x0
   200e8:	mov	x12, x4
   200ec:	stp	x29, x30, [sp, #-16]!
   200f0:	csel	x2, x9, x2, cc  // cc = lo, ul, last
   200f4:	mov	x29, sp
   200f8:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   200fc:	add	x8, x8, x0
   20100:	mov	x7, x0
   20104:	cmp	x11, x8
   20108:	b.ne	20120 <ZSTD_compress@@Base+0x118d4>  // b.any
   2010c:	mov	x2, x9
   20110:	mov	x1, x12
   20114:	add	x0, x10, x0
   20118:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2011c:	add	x7, x7, x0
   20120:	mov	x0, x7
   20124:	ldp	x29, x30, [sp], #16
   20128:	ret
   2012c:	stp	x29, x30, [sp, #-208]!
   20130:	mov	x5, x0
   20134:	mov	x29, sp
   20138:	stp	x21, x22, [sp, #32]
   2013c:	mov	x21, x1
   20140:	ldr	w1, [x0, #192]
   20144:	stp	x23, x24, [sp, #48]
   20148:	mov	x24, x2
   2014c:	mov	w2, w3
   20150:	mov	x0, x21
   20154:	stp	x19, x20, [sp, #16]
   20158:	mov	w23, #0x1                   	// #1
   2015c:	stp	x25, x26, [sp, #64]
   20160:	stp	x27, x28, [sp, #80]
   20164:	str	w4, [sp, #148]
   20168:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   2016c:	ldp	x9, x2, [x5, #8]
   20170:	str	x2, [sp, #112]
   20174:	ldr	w18, [x5, #188]
   20178:	lsl	x0, x0, #2
   2017c:	ldr	w7, [x5, #24]
   20180:	mov	x14, #0x8                   	// #8
   20184:	sub	w18, w18, #0x1
   20188:	mov	x8, #0x0                   	// #0
   2018c:	ldr	x11, [x5, #64]
   20190:	sub	x22, x21, x9
   20194:	add	x2, x2, x7
   20198:	lsl	w18, w23, w18
   2019c:	sub	w18, w18, #0x1
   201a0:	str	x2, [sp, #128]
   201a4:	sub	w26, w22, w18
   201a8:	add	x2, x9, x7
   201ac:	cmp	w18, w22
   201b0:	and	w19, w18, w22
   201b4:	str	x2, [sp, #136]
   201b8:	csel	w2, w26, wzr, cc  // cc = lo, ul, last
   201bc:	str	w2, [sp, #108]
   201c0:	ubfiz	x19, x19, #3, #31
   201c4:	ldr	w2, [x5, #28]
   201c8:	add	x19, x11, x19
   201cc:	ldr	x1, [x5, #48]
   201d0:	str	w2, [sp, #144]
   201d4:	ldr	w2, [x5, #196]
   201d8:	add	x28, x19, #0x4
   201dc:	add	w20, w22, #0x9
   201e0:	mov	x26, #0x0                   	// #0
   201e4:	ldr	w15, [x1, x0]
   201e8:	lsl	w23, w23, w2
   201ec:	str	w22, [x1, x0]
   201f0:	cbz	w23, 20200 <ZSTD_compress@@Base+0x119b4>
   201f4:	ldr	w0, [sp, #144]
   201f8:	cmp	w15, w0
   201fc:	b.cs	2024c <ZSTD_compress@@Base+0x11a00>  // b.hs, b.nlast
   20200:	str	wzr, [x28]
   20204:	cmp	x14, #0x180
   20208:	str	wzr, [x19]
   2020c:	b.ls	20380 <ZSTD_compress@@Base+0x11b34>  // b.plast
   20210:	sub	w14, w14, #0x180
   20214:	mov	w0, #0xc0                  	// #192
   20218:	cmp	w14, #0xc0
   2021c:	csel	w14, w14, w0, ls  // ls = plast
   20220:	sub	w20, w20, w22
   20224:	sub	w0, w20, #0x8
   20228:	cmp	w0, w14
   2022c:	csel	w0, w0, w14, cs  // cs = hs, nlast
   20230:	ldp	x19, x20, [sp, #16]
   20234:	ldp	x21, x22, [sp, #32]
   20238:	ldp	x23, x24, [sp, #48]
   2023c:	ldp	x25, x26, [sp, #64]
   20240:	ldp	x27, x28, [sp, #80]
   20244:	ldp	x29, x30, [sp], #208
   20248:	ret
   2024c:	and	w27, w15, w18
   20250:	ldr	w1, [sp, #148]
   20254:	cmp	x8, x26
   20258:	mov	w5, w15
   2025c:	ubfiz	x0, x27, #3, #31
   20260:	str	x0, [sp, #120]
   20264:	csel	x13, x8, x26, ls  // ls = plast
   20268:	add	x27, x11, x0
   2026c:	add	x0, x21, x13
   20270:	cbz	w1, 20280 <ZSTD_compress@@Base+0x11a34>
   20274:	add	x1, x5, x13
   20278:	cmp	x7, x1
   2027c:	b.hi	20300 <ZSTD_compress@@Base+0x11ab4>  // b.pmore
   20280:	add	x25, x9, x5
   20284:	mov	x2, x24
   20288:	add	x1, x25, x13
   2028c:	stp	x9, x7, [sp, #152]
   20290:	stp	x8, x11, [sp, #168]
   20294:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   20298:	add	x13, x13, x0
   2029c:	ldp	x9, x7, [sp, #152]
   202a0:	ldp	x8, x11, [sp, #168]
   202a4:	cmp	x14, x13
   202a8:	b.cs	202c0 <ZSTD_compress@@Base+0x11a74>  // b.hs, b.nlast
   202ac:	sub	w0, w20, w15
   202b0:	cmp	x0, x13
   202b4:	b.cs	202bc <ZSTD_compress@@Base+0x11a70>  // b.hs, b.nlast
   202b8:	add	w20, w15, w13
   202bc:	mov	x14, x13
   202c0:	add	x0, x21, x13
   202c4:	cmp	x0, x24
   202c8:	b.eq	20200 <ZSTD_compress@@Base+0x119b4>  // b.none
   202cc:	ldrb	w1, [x25, x13]
   202d0:	ldrb	w0, [x21, x13]
   202d4:	cmp	w1, w0
   202d8:	b.cs	20348 <ZSTD_compress@@Base+0x11afc>  // b.hs, b.nlast
   202dc:	ldr	w0, [sp, #108]
   202e0:	str	w15, [x19]
   202e4:	cmp	w15, w0
   202e8:	b.ls	20370 <ZSTD_compress@@Base+0x11b24>  // b.plast
   202ec:	ldr	w15, [x27, #4]
   202f0:	add	x19, x27, #0x4
   202f4:	sub	w23, w23, #0x1
   202f8:	mov	x8, x13
   202fc:	b	201f0 <ZSTD_compress@@Base+0x119a4>
   20300:	ldp	x3, x4, [sp, #128]
   20304:	mov	x2, x24
   20308:	ldr	x1, [sp, #112]
   2030c:	stp	x5, x7, [sp, #152]
   20310:	add	x25, x1, x5
   20314:	stp	x8, x11, [sp, #168]
   20318:	add	x1, x25, x13
   2031c:	str	x9, [sp, #184]
   20320:	bl	200cc <ZSTD_compress@@Base+0x11880>
   20324:	ldp	x5, x7, [sp, #152]
   20328:	add	x13, x13, x0
   2032c:	ldp	x8, x11, [sp, #168]
   20330:	ldr	x9, [sp, #184]
   20334:	add	x0, x5, x13
   20338:	cmp	x7, x0
   2033c:	b.hi	202a4 <ZSTD_compress@@Base+0x11a58>  // b.pmore
   20340:	add	x25, x9, x5
   20344:	b	202a4 <ZSTD_compress@@Base+0x11a58>
   20348:	ldr	w0, [sp, #108]
   2034c:	str	w15, [x28]
   20350:	cmp	w15, w0
   20354:	b.ls	20378 <ZSTD_compress@@Base+0x11b2c>  // b.plast
   20358:	ldr	x0, [sp, #120]
   2035c:	mov	x26, x13
   20360:	mov	x28, x27
   20364:	mov	x13, x8
   20368:	ldr	w15, [x11, x0]
   2036c:	b	202f4 <ZSTD_compress@@Base+0x11aa8>
   20370:	add	x19, sp, #0xcc
   20374:	b	20200 <ZSTD_compress@@Base+0x119b4>
   20378:	add	x28, sp, #0xcc
   2037c:	b	20200 <ZSTD_compress@@Base+0x119b4>
   20380:	mov	w14, #0x0                   	// #0
   20384:	b	20220 <ZSTD_compress@@Base+0x119d4>
   20388:	add	w1, w0, #0x1
   2038c:	clz	w0, w1
   20390:	eor	w0, w0, #0x1f
   20394:	lsl	w1, w1, #8
   20398:	lsr	w1, w1, w0
   2039c:	add	w0, w1, w0, lsl #8
   203a0:	ret
   203a4:	add	w0, w0, #0x1
   203a8:	clz	w0, w0
   203ac:	eor	w0, w0, #0x1f
   203b0:	lsl	w0, w0, #8
   203b4:	ret
   203b8:	stp	x29, x30, [sp, #-16]!
   203bc:	mov	x2, x0
   203c0:	mov	w3, w1
   203c4:	mov	x29, sp
   203c8:	ldr	w0, [x0, #96]
   203cc:	cmp	w0, #0x2
   203d0:	b.eq	203e4 <ZSTD_compress@@Base+0x11b98>  // b.none
   203d4:	ldr	w0, [x2, #48]
   203d8:	cbz	w1, 2041c <ZSTD_compress@@Base+0x11bd0>
   203dc:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   203e0:	str	w0, [x2, #64]
   203e4:	ldr	w0, [x2, #52]
   203e8:	cbz	w3, 20424 <ZSTD_compress@@Base+0x11bd8>
   203ec:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   203f0:	str	w0, [x2, #68]
   203f4:	ldr	w0, [x2, #56]
   203f8:	cbz	w3, 2042c <ZSTD_compress@@Base+0x11be0>
   203fc:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   20400:	str	w0, [x2, #72]
   20404:	ldr	w0, [x2, #60]
   20408:	cbz	w3, 20434 <ZSTD_compress@@Base+0x11be8>
   2040c:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   20410:	ldp	x29, x30, [sp], #16
   20414:	str	w0, [x2, #76]
   20418:	ret
   2041c:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   20420:	b	203e0 <ZSTD_compress@@Base+0x11b94>
   20424:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   20428:	b	203f0 <ZSTD_compress@@Base+0x11ba4>
   2042c:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   20430:	b	20400 <ZSTD_compress@@Base+0x11bb4>
   20434:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   20438:	b	20410 <ZSTD_compress@@Base+0x11bc4>
   2043c:	cmp	w0, #0x7f
   20440:	b.ls	20454 <ZSTD_compress@@Base+0x11c08>  // b.plast
   20444:	clz	w0, w0
   20448:	eor	w0, w0, #0x1f
   2044c:	add	w0, w0, #0x24
   20450:	ret
   20454:	adrp	x1, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   20458:	add	x1, x1, #0x4c8
   2045c:	ldrb	w0, [x1, w0, uxtw]
   20460:	b	20450 <ZSTD_compress@@Base+0x11c04>
   20464:	mov	w4, w1
   20468:	cbz	w1, 20480 <ZSTD_compress@@Base+0x11c34>
   2046c:	mov	x5, x0
   20470:	ldr	w0, [x2, #96]
   20474:	cmp	w0, #0x2
   20478:	b.ne	20488 <ZSTD_compress@@Base+0x11c3c>  // b.any
   2047c:	lsl	w4, w1, #11
   20480:	mov	w0, w4
   20484:	ret
   20488:	ldr	w0, [x2, #80]
   2048c:	cmp	w0, #0x1
   20490:	b.ne	204a8 <ZSTD_compress@@Base+0x11c5c>  // b.any
   20494:	mov	w0, #0x600                 	// #1536
   20498:	mul	w4, w1, w0
   2049c:	b	20480 <ZSTD_compress@@Base+0x11c34>
   204a0:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   204a4:	b	204d8 <ZSTD_compress@@Base+0x11c8c>
   204a8:	ldr	w0, [x2, #64]
   204ac:	add	x6, x5, w1, uxtw
   204b0:	cmp	x5, x6
   204b4:	mul	w4, w1, w0
   204b8:	b.eq	20480 <ZSTD_compress@@Base+0x11c34>  // b.none
   204bc:	stp	x29, x30, [sp, #-16]!
   204c0:	mov	x29, sp
   204c4:	ldrb	w1, [x5]
   204c8:	ldr	x0, [x2]
   204cc:	ldr	w0, [x0, x1, lsl #2]
   204d0:	cbz	w3, 204a0 <ZSTD_compress@@Base+0x11c54>
   204d4:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   204d8:	add	x5, x5, #0x1
   204dc:	sub	w4, w4, w0
   204e0:	cmp	x5, x6
   204e4:	b.ne	204c4 <ZSTD_compress@@Base+0x11c78>  // b.any
   204e8:	mov	w0, w4
   204ec:	ldp	x29, x30, [sp], #16
   204f0:	ret
   204f4:	mov	w8, w3
   204f8:	mov	w7, w1
   204fc:	stp	x29, x30, [sp, #-16]!
   20500:	mov	x29, sp
   20504:	bl	20464 <ZSTD_compress@@Base+0x11c18>
   20508:	mov	w3, w0
   2050c:	ldr	w0, [x2, #80]
   20510:	cbz	w0, 20534 <ZSTD_compress@@Base+0x11ce8>
   20514:	mov	w0, w7
   20518:	cbz	w8, 2052c <ZSTD_compress@@Base+0x11ce0>
   2051c:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   20520:	add	w0, w3, w0
   20524:	ldp	x29, x30, [sp], #16
   20528:	ret
   2052c:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   20530:	b	20520 <ZSTD_compress@@Base+0x11cd4>
   20534:	mov	x9, x2
   20538:	cmp	w7, #0x3f
   2053c:	adrp	x1, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   20540:	b.ls	20588 <ZSTD_compress@@Base+0x11d3c>  // b.plast
   20544:	clz	w7, w7
   20548:	eor	w7, w7, #0x1f
   2054c:	add	w7, w7, #0x13
   20550:	add	x1, x1, #0x4c8
   20554:	add	x1, x1, #0xc0
   20558:	ldr	x5, [x9, #8]
   2055c:	ldr	w4, [x1, x7, lsl #2]
   20560:	ldr	w0, [x5]
   20564:	lsl	w4, w4, #8
   20568:	cbz	w8, 20598 <ZSTD_compress@@Base+0x11d4c>
   2056c:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   20570:	add	w4, w4, w0
   20574:	ldr	w0, [x5, x7, lsl #2]
   20578:	cbz	w8, 205a0 <ZSTD_compress@@Base+0x11d54>
   2057c:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   20580:	sub	w0, w4, w0
   20584:	b	20520 <ZSTD_compress@@Base+0x11cd4>
   20588:	add	x0, x1, #0x4c8
   2058c:	add	x0, x0, #0x80
   20590:	ldrb	w7, [x0, w7, uxtw]
   20594:	b	20550 <ZSTD_compress@@Base+0x11d04>
   20598:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   2059c:	b	20570 <ZSTD_compress@@Base+0x11d24>
   205a0:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   205a4:	b	20580 <ZSTD_compress@@Base+0x11d34>
   205a8:	sub	sp, sp, #0x10
   205ac:	cmp	w1, #0x2
   205b0:	b.ls	205d0 <ZSTD_compress@@Base+0x11d84>  // b.plast
   205b4:	ldp	w2, w3, [x0]
   205b8:	sub	w4, w1, #0x2
   205bc:	stp	w4, w2, [sp]
   205c0:	mov	w1, w3
   205c4:	ldr	x0, [sp]
   205c8:	add	sp, sp, #0x10
   205cc:	ret
   205d0:	adds	w1, w1, w2
   205d4:	b.eq	20604 <ZSTD_compress@@Base+0x11db8>  // b.none
   205d8:	ldr	w2, [x0]
   205dc:	cmp	w1, #0x3
   205e0:	b.ne	205f0 <ZSTD_compress@@Base+0x11da4>  // b.any
   205e4:	sub	w4, w2, #0x1
   205e8:	ldr	w3, [x0, #4]
   205ec:	b	205bc <ZSTD_compress@@Base+0x11d70>
   205f0:	ldr	w4, [x0, w1, uxtw #2]
   205f4:	cmp	w1, #0x1
   205f8:	b.ne	205e8 <ZSTD_compress@@Base+0x11d9c>  // b.any
   205fc:	ldr	w3, [x0, #8]
   20600:	b	205bc <ZSTD_compress@@Base+0x11d70>
   20604:	ldr	x2, [x0]
   20608:	mov	w4, w2
   2060c:	lsr	x2, x2, #32
   20610:	b	205fc <ZSTD_compress@@Base+0x11db0>
   20614:	add	w1, w1, #0x1
   20618:	mov	x4, x0
   2061c:	mov	x3, #0x0                   	// #0
   20620:	mov	w0, #0x0                   	// #0
   20624:	ldr	w2, [x4, x3, lsl #2]
   20628:	lsl	w2, w2, #4
   2062c:	sub	w2, w2, #0x1
   20630:	str	w2, [x4, x3, lsl #2]
   20634:	add	x3, x3, #0x1
   20638:	add	w0, w0, w2
   2063c:	cmp	w1, w3
   20640:	b.hi	20624 <ZSTD_compress@@Base+0x11dd8>  // b.pmore
   20644:	ret
   20648:	stp	x29, x30, [sp, #-96]!
   2064c:	mov	x29, sp
   20650:	stp	x19, x20, [sp, #16]
   20654:	mov	x19, x0
   20658:	mov	w20, w3
   2065c:	stp	x21, x22, [sp, #32]
   20660:	ldr	w3, [x19, #52]
   20664:	ldr	w0, [x0, #96]
   20668:	str	wzr, [x19, #80]
   2066c:	str	x23, [sp, #48]
   20670:	cbnz	w3, 208d8 <ZSTD_compress@@Base+0x1208c>
   20674:	cmp	x2, #0x400
   20678:	b.hi	20684 <ZSTD_compress@@Base+0x11e38>  // b.pmore
   2067c:	mov	w3, #0x1                   	// #1
   20680:	str	w3, [x19, #80]
   20684:	ldr	x3, [x19, #88]
   20688:	ldr	w3, [x3, #1024]
   2068c:	cmp	w3, #0x2
   20690:	b.ne	2083c <ZSTD_compress@@Base+0x11ff0>  // b.any
   20694:	str	wzr, [x19, #80]
   20698:	cmp	w0, #0x2
   2069c:	b.eq	206ec <ZSTD_compress@@Base+0x11ea0>  // b.none
   206a0:	mov	x21, #0x0                   	// #0
   206a4:	mov	w22, #0x1                   	// #1
   206a8:	mov	w23, #0xb                   	// #11
   206ac:	str	wzr, [x19, #48]
   206b0:	ldr	x0, [x19, #88]
   206b4:	mov	w1, w21
   206b8:	bl	86a0 <ZSTD_getErrorString@@Base+0x1b54>
   206bc:	sub	w1, w23, w0
   206c0:	cmp	w0, #0x0
   206c4:	lsl	w1, w22, w1
   206c8:	csel	w0, w1, w22, ne  // ne = any
   206cc:	ldr	x1, [x19]
   206d0:	str	w0, [x1, x21, lsl #2]
   206d4:	add	x21, x21, #0x1
   206d8:	cmp	x21, #0x100
   206dc:	ldr	w1, [x19, #48]
   206e0:	add	w0, w1, w0
   206e4:	str	w0, [x19, #48]
   206e8:	b.ne	206b0 <ZSTD_compress@@Base+0x11e64>  // b.any
   206ec:	ldr	x1, [x19, #88]
   206f0:	add	x0, sp, #0x40
   206f4:	add	x1, x1, #0xcb4
   206f8:	bl	1fdd8 <ZSTD_compress@@Base+0x1158c>
   206fc:	ldr	x4, [sp, #80]
   20700:	mov	x2, #0x0                   	// #0
   20704:	ldr	x6, [x19, #8]
   20708:	add	x4, x4, #0x4
   2070c:	mov	w8, #0xffff                	// #65535
   20710:	mov	w5, #0x1                   	// #1
   20714:	mov	w7, #0xa                   	// #10
   20718:	str	wzr, [x19, #52]
   2071c:	lsl	x1, x2, #3
   20720:	ldr	w3, [x4, x1]
   20724:	add	w3, w3, w8
   20728:	sub	w1, w7, w3, lsr #16
   2072c:	cmp	wzr, w3, lsr #16
   20730:	lsl	w1, w5, w1
   20734:	csel	w1, w1, w5, ne  // ne = any
   20738:	str	w1, [x6, x2, lsl #2]
   2073c:	add	x2, x2, #0x1
   20740:	cmp	x2, #0x24
   20744:	ldr	w3, [x19, #52]
   20748:	add	w1, w3, w1
   2074c:	str	w1, [x19, #52]
   20750:	b.ne	2071c <ZSTD_compress@@Base+0x11ed0>  // b.any
   20754:	ldr	x1, [x19, #88]
   20758:	add	x1, x1, #0x708
   2075c:	bl	1fdd8 <ZSTD_compress@@Base+0x1158c>
   20760:	ldr	x4, [sp, #80]
   20764:	mov	x2, #0x0                   	// #0
   20768:	ldr	x6, [x19, #16]
   2076c:	add	x4, x4, #0x4
   20770:	mov	w8, #0xffff                	// #65535
   20774:	mov	w5, #0x1                   	// #1
   20778:	mov	w7, #0xa                   	// #10
   2077c:	str	wzr, [x19, #56]
   20780:	lsl	x1, x2, #3
   20784:	ldr	w3, [x4, x1]
   20788:	add	w3, w3, w8
   2078c:	sub	w1, w7, w3, lsr #16
   20790:	cmp	wzr, w3, lsr #16
   20794:	lsl	w1, w5, w1
   20798:	csel	w1, w1, w5, ne  // ne = any
   2079c:	str	w1, [x6, x2, lsl #2]
   207a0:	add	x2, x2, #0x1
   207a4:	cmp	x2, #0x35
   207a8:	ldr	w3, [x19, #56]
   207ac:	add	w1, w3, w1
   207b0:	str	w1, [x19, #56]
   207b4:	b.ne	20780 <ZSTD_compress@@Base+0x11f34>  // b.any
   207b8:	ldr	x1, [x19, #88]
   207bc:	add	x1, x1, #0x404
   207c0:	bl	1fdd8 <ZSTD_compress@@Base+0x1158c>
   207c4:	ldr	x3, [sp, #80]
   207c8:	mov	x1, #0x0                   	// #0
   207cc:	ldr	x5, [x19, #24]
   207d0:	add	x3, x3, #0x4
   207d4:	mov	w7, #0xffff                	// #65535
   207d8:	mov	w4, #0x1                   	// #1
   207dc:	mov	w6, #0xa                   	// #10
   207e0:	str	wzr, [x19, #60]
   207e4:	lsl	x0, x1, #3
   207e8:	ldr	w2, [x3, x0]
   207ec:	add	w2, w2, w7
   207f0:	sub	w0, w6, w2, lsr #16
   207f4:	cmp	wzr, w2, lsr #16
   207f8:	lsl	w0, w4, w0
   207fc:	csel	w0, w0, w4, ne  // ne = any
   20800:	str	w0, [x5, x1, lsl #2]
   20804:	add	x1, x1, #0x1
   20808:	cmp	x1, #0x20
   2080c:	ldr	w2, [x19, #60]
   20810:	add	w0, w2, w0
   20814:	str	w0, [x19, #60]
   20818:	b.ne	207e4 <ZSTD_compress@@Base+0x11f98>  // b.any
   2081c:	mov	w1, w20
   20820:	mov	x0, x19
   20824:	bl	203b8 <ZSTD_compress@@Base+0x11b6c>
   20828:	ldp	x19, x20, [sp, #16]
   2082c:	ldp	x21, x22, [sp, #32]
   20830:	ldr	x23, [sp, #48]
   20834:	ldp	x29, x30, [sp], #96
   20838:	ret
   2083c:	cmp	w0, #0x2
   20840:	b.eq	20874 <ZSTD_compress@@Base+0x12028>  // b.none
   20844:	ldr	x0, [x19]
   20848:	mov	x3, x2
   2084c:	mov	w21, #0xff                  	// #255
   20850:	mov	x2, x1
   20854:	add	x1, sp, #0x40
   20858:	str	w21, [sp, #64]
   2085c:	bl	7d34 <ZSTD_getErrorString@@Base+0x11e8>
   20860:	ldr	x0, [x19]
   20864:	mov	w1, w21
   20868:	mov	w2, #0x1                   	// #1
   2086c:	bl	1ff50 <ZSTD_compress@@Base+0x11704>
   20870:	str	w0, [x19, #48]
   20874:	ldr	x1, [x19, #8]
   20878:	mov	x0, #0x0                   	// #0
   2087c:	mov	w2, #0x1                   	// #1
   20880:	str	w2, [x1, x0, lsl #2]
   20884:	add	x0, x0, #0x1
   20888:	cmp	x0, #0x24
   2088c:	b.ne	20880 <ZSTD_compress@@Base+0x12034>  // b.any
   20890:	ldr	x1, [x19, #16]
   20894:	mov	w2, #0x1                   	// #1
   20898:	str	w0, [x19, #52]
   2089c:	mov	x0, #0x0                   	// #0
   208a0:	str	w2, [x1, x0, lsl #2]
   208a4:	add	x0, x0, #0x1
   208a8:	cmp	x0, #0x35
   208ac:	b.ne	208a0 <ZSTD_compress@@Base+0x12054>  // b.any
   208b0:	ldr	x1, [x19, #24]
   208b4:	mov	w2, #0x1                   	// #1
   208b8:	str	w0, [x19, #56]
   208bc:	mov	x0, #0x0                   	// #0
   208c0:	str	w2, [x1, x0, lsl #2]
   208c4:	add	x0, x0, #0x1
   208c8:	cmp	x0, #0x20
   208cc:	b.ne	208c0 <ZSTD_compress@@Base+0x12074>  // b.any
   208d0:	str	w0, [x19, #60]
   208d4:	b	2081c <ZSTD_compress@@Base+0x11fd0>
   208d8:	cmp	w0, #0x2
   208dc:	b.eq	208f4 <ZSTD_compress@@Base+0x120a8>  // b.none
   208e0:	ldr	x0, [x19]
   208e4:	mov	w2, #0x1                   	// #1
   208e8:	mov	w1, #0xff                  	// #255
   208ec:	bl	1ff50 <ZSTD_compress@@Base+0x11704>
   208f0:	str	w0, [x19, #48]
   208f4:	ldr	x0, [x19, #8]
   208f8:	mov	w2, #0x0                   	// #0
   208fc:	mov	w1, #0x23                  	// #35
   20900:	bl	1ff50 <ZSTD_compress@@Base+0x11704>
   20904:	str	w0, [x19, #52]
   20908:	ldr	x0, [x19, #16]
   2090c:	mov	w2, #0x0                   	// #0
   20910:	mov	w1, #0x34                  	// #52
   20914:	bl	1ff50 <ZSTD_compress@@Base+0x11704>
   20918:	str	w0, [x19, #56]
   2091c:	ldr	x0, [x19, #24]
   20920:	mov	w2, #0x0                   	// #0
   20924:	mov	w1, #0x1f                  	// #31
   20928:	bl	1ff50 <ZSTD_compress@@Base+0x11704>
   2092c:	b	208d0 <ZSTD_compress@@Base+0x12084>
   20930:	ldr	w4, [x1, #80]
   20934:	cmp	w4, #0x1
   20938:	b.ne	20948 <ZSTD_compress@@Base+0x120fc>  // b.any
   2093c:	cbz	w2, 20944 <ZSTD_compress@@Base+0x120f8>
   20940:	b	20388 <ZSTD_compress@@Base+0x11b3c>
   20944:	b	203a4 <ZSTD_compress@@Base+0x11b58>
   20948:	stp	x29, x30, [sp, #-16]!
   2094c:	mov	w3, w0
   20950:	cmp	w0, #0x3f
   20954:	mov	x29, sp
   20958:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   2095c:	b.ls	2099c <ZSTD_compress@@Base+0x12150>  // b.plast
   20960:	clz	w3, w3
   20964:	eor	w3, w3, #0x1f
   20968:	add	w3, w3, #0x13
   2096c:	add	x0, x0, #0x4c8
   20970:	add	x0, x0, #0xc0
   20974:	ldr	w4, [x0, x3, lsl #2]
   20978:	ldr	w0, [x1, #68]
   2097c:	add	w4, w0, w4, lsl #8
   20980:	ldr	x0, [x1, #8]
   20984:	ldr	w0, [x0, x3, lsl #2]
   20988:	cbz	w2, 209ac <ZSTD_compress@@Base+0x12160>
   2098c:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   20990:	sub	w0, w4, w0
   20994:	ldp	x29, x30, [sp], #16
   20998:	ret
   2099c:	add	x4, x0, #0x4c8
   209a0:	add	x4, x4, #0x80
   209a4:	ldrb	w3, [x4, w3, uxtw]
   209a8:	b	2096c <ZSTD_compress@@Base+0x12120>
   209ac:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   209b0:	b	20990 <ZSTD_compress@@Base+0x12144>
   209b4:	stp	x29, x30, [sp, #-16]!
   209b8:	mov	x5, x0
   209bc:	mov	x29, sp
   209c0:	ldr	w0, [x0, #96]
   209c4:	cmp	w0, #0x2
   209c8:	b.ne	20a90 <ZSTD_compress@@Base+0x12244>  // b.any
   209cc:	cmp	w1, #0x3f
   209d0:	b.ls	20a98 <ZSTD_compress@@Base+0x1224c>  // b.plast
   209d4:	clz	w1, w1
   209d8:	eor	w1, w1, #0x1f
   209dc:	add	w1, w1, #0x13
   209e0:	ldr	x2, [x5, #8]
   209e4:	ubfiz	x1, x1, #2, #8
   209e8:	ldr	w0, [x2, x1]
   209ec:	add	w0, w0, #0x1
   209f0:	str	w0, [x2, x1]
   209f4:	add	w1, w3, #0x1
   209f8:	clz	w1, w1
   209fc:	ldr	w0, [x5, #52]
   20a00:	eor	w1, w1, #0x1f
   20a04:	ldr	x2, [x5, #24]
   20a08:	sbfiz	x1, x1, #2, #32
   20a0c:	add	w0, w0, #0x1
   20a10:	str	w0, [x5, #52]
   20a14:	ldr	w0, [x2, x1]
   20a18:	add	w0, w0, #0x1
   20a1c:	str	w0, [x2, x1]
   20a20:	ldr	w0, [x5, #60]
   20a24:	add	w0, w0, #0x1
   20a28:	str	w0, [x5, #60]
   20a2c:	sub	w0, w4, #0x3
   20a30:	bl	2043c <ZSTD_compress@@Base+0x11bf0>
   20a34:	ubfiz	x0, x0, #2, #32
   20a38:	ldr	x2, [x5, #16]
   20a3c:	ldr	w1, [x2, x0]
   20a40:	add	w1, w1, #0x1
   20a44:	str	w1, [x2, x0]
   20a48:	ldr	w0, [x5, #56]
   20a4c:	ldp	x29, x30, [sp], #16
   20a50:	add	w0, w0, #0x1
   20a54:	str	w0, [x5, #56]
   20a58:	ret
   20a5c:	ldrb	w7, [x2, x6]
   20a60:	add	x6, x6, #0x1
   20a64:	ldr	x8, [x5]
   20a68:	lsl	x7, x7, #2
   20a6c:	ldr	w0, [x8, x7]
   20a70:	add	w0, w0, #0x2
   20a74:	str	w0, [x8, x7]
   20a78:	cmp	w1, w6
   20a7c:	b.hi	20a5c <ZSTD_compress@@Base+0x12210>  // b.pmore
   20a80:	ldr	w0, [x5, #48]
   20a84:	add	w0, w0, w1, lsl #1
   20a88:	str	w0, [x5, #48]
   20a8c:	b	209cc <ZSTD_compress@@Base+0x12180>
   20a90:	mov	x6, #0x0                   	// #0
   20a94:	b	20a78 <ZSTD_compress@@Base+0x1222c>
   20a98:	adrp	x2, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   20a9c:	add	x2, x2, #0x4c8
   20aa0:	add	x2, x2, #0x80
   20aa4:	ldrb	w1, [x2, w1, uxtw]
   20aa8:	b	209e0 <ZSTD_compress@@Base+0x12194>
   20aac:	stp	x29, x30, [sp, #-80]!
   20ab0:	mov	x29, sp
   20ab4:	stp	x23, x24, [sp, #48]
   20ab8:	ldr	x23, [x0, #8]
   20abc:	stp	x19, x20, [sp, #16]
   20ac0:	mov	x19, x0
   20ac4:	sub	x20, x1, x23
   20ac8:	stp	x21, x22, [sp, #32]
   20acc:	ldr	w21, [x0, #36]
   20ad0:	str	x25, [sp, #64]
   20ad4:	mov	x22, x2
   20ad8:	ldr	w25, [x0, #200]
   20adc:	mov	w24, w20
   20ae0:	cmp	w24, w21
   20ae4:	b.hi	20b04 <ZSTD_compress@@Base+0x122b8>  // b.pmore
   20ae8:	ldp	x21, x22, [sp, #32]
   20aec:	ldp	x23, x24, [sp, #48]
   20af0:	ldr	x25, [sp, #64]
   20af4:	str	w20, [x19, #36]
   20af8:	ldp	x19, x20, [sp, #16]
   20afc:	ldp	x29, x30, [sp], #80
   20b00:	ret
   20b04:	add	x1, x23, w21, uxtw
   20b08:	mov	w3, w25
   20b0c:	mov	x2, x22
   20b10:	mov	x0, x19
   20b14:	mov	w4, #0x0                   	// #0
   20b18:	bl	2012c <ZSTD_compress@@Base+0x118e0>
   20b1c:	add	w21, w21, w0
   20b20:	b	20ae0 <ZSTD_compress@@Base+0x12294>
   20b24:	stp	x29, x30, [sp, #-336]!
   20b28:	mov	x29, sp
   20b2c:	stp	x19, x20, [sp, #16]
   20b30:	mov	x19, x0
   20b34:	add	x0, x0, #0x48
   20b38:	stp	x21, x22, [sp, #32]
   20b3c:	add	x22, x3, x4
   20b40:	str	x0, [sp, #160]
   20b44:	sub	x0, x22, #0x8
   20b48:	ldr	x20, [x19, #8]
   20b4c:	str	x0, [sp, #216]
   20b50:	ldr	w0, [x19, #24]
   20b54:	str	x1, [sp, #144]
   20b58:	ldr	w1, [x19, #204]
   20b5c:	add	x20, x20, x0
   20b60:	ldr	w0, [x19, #200]
   20b64:	cmp	w1, #0xfff
   20b68:	str	w0, [sp, #124]
   20b6c:	stp	x2, x3, [sp, #104]
   20b70:	mov	w3, #0xfff                 	// #4095
   20b74:	csel	w1, w1, w3, ls  // ls = plast
   20b78:	mov	w0, w0
   20b7c:	str	w1, [sp, #224]
   20b80:	ldr	w1, [sp, #124]
   20b84:	cmp	w0, #0x3
   20b88:	mov	w0, #0x4                   	// #4
   20b8c:	mov	x2, x4
   20b90:	csel	w0, w1, w0, eq  // eq = none
   20b94:	str	w0, [sp, #124]
   20b98:	ldr	x1, [sp, #112]
   20b9c:	mov	w3, #0x0                   	// #0
   20ba0:	ldr	w0, [x19, #36]
   20ba4:	str	w0, [sp, #284]
   20ba8:	ldr	x0, [x19, #112]
   20bac:	stp	x23, x24, [sp, #48]
   20bb0:	stp	x25, x26, [sp, #64]
   20bb4:	stp	x27, x28, [sp, #80]
   20bb8:	str	x0, [sp, #96]
   20bbc:	add	x0, x19, #0x48
   20bc0:	ldr	x21, [x19, #104]
   20bc4:	bl	20648 <ZSTD_compress@@Base+0x11dfc>
   20bc8:	ldr	x0, [sp, #112]
   20bcc:	cmp	x0, x20
   20bd0:	cinc	x20, x0, eq  // eq = none
   20bd4:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   20bd8:	add	x0, x0, #0x4c8
   20bdc:	add	x0, x0, #0x150
   20be0:	str	x0, [sp, #248]
   20be4:	ldr	x0, [sp, #216]
   20be8:	cmp	x0, x20
   20bec:	b.hi	20c14 <ZSTD_compress@@Base+0x123c8>  // b.pmore
   20bf0:	ldr	x0, [sp, #112]
   20bf4:	ldp	x19, x20, [sp, #16]
   20bf8:	sub	x0, x22, x0
   20bfc:	ldp	x21, x22, [sp, #32]
   20c00:	ldp	x23, x24, [sp, #48]
   20c04:	ldp	x25, x26, [sp, #64]
   20c08:	ldp	x27, x28, [sp, #80]
   20c0c:	ldp	x29, x30, [sp], #336
   20c10:	ret
   20c14:	ldr	x25, [x19, #8]
   20c18:	ldr	w23, [x19, #36]
   20c1c:	add	x0, x25, w23, uxtw
   20c20:	cmp	x20, x0
   20c24:	b.cs	20c30 <ZSTD_compress@@Base+0x123e4>  // b.hs, b.nlast
   20c28:	add	x20, x20, #0x1
   20c2c:	b	20be4 <ZSTD_compress@@Base+0x12398>
   20c30:	sub	x26, x20, x25
   20c34:	ldr	w3, [x19, #200]
   20c38:	add	x24, x19, #0xb8
   20c3c:	mov	w27, w26
   20c40:	cmp	w27, w23
   20c44:	b.hi	20e44 <ZSTD_compress@@Base+0x125f8>  // b.pmore
   20c48:	ldr	x0, [sp, #112]
   20c4c:	mov	w1, #0xfff                 	// #4095
   20c50:	str	w26, [x19, #36]
   20c54:	sub	x0, x20, x0
   20c58:	str	x0, [sp, #152]
   20c5c:	ldr	w5, [x19, #24]
   20c60:	ldr	w0, [sp, #152]
   20c64:	str	w0, [sp, #180]
   20c68:	cmp	w0, #0x0
   20c6c:	cset	w0, eq  // eq = none
   20c70:	str	w0, [sp, #128]
   20c74:	ldr	w0, [x24, #20]
   20c78:	ldr	x15, [x19, #48]
   20c7c:	cmp	w0, #0xfff
   20c80:	csel	w0, w0, w1, ls  // ls = plast
   20c84:	str	w0, [sp, #176]
   20c88:	ldr	x0, [x19, #8]
   20c8c:	str	x0, [sp, #136]
   20c90:	ldr	w1, [x24, #8]
   20c94:	cmp	w3, #0x5
   20c98:	sub	x11, x20, x0
   20c9c:	mov	w13, w11
   20ca0:	ldr	x12, [x19, #64]
   20ca4:	b.eq	2146c <ZSTD_compress@@Base+0x12c20>  // b.none
   20ca8:	b.hi	20e68 <ZSTD_compress@@Base+0x1261c>  // b.pmore
   20cac:	cmp	w3, #0x3
   20cb0:	b.eq	20ff8 <ZSTD_compress@@Base+0x127ac>  // b.none
   20cb4:	mov	x7, x20
   20cb8:	mov	w18, #0x79b1                	// #31153
   20cbc:	movk	w18, #0x9e37, lsl #16
   20cc0:	neg	w1, w1
   20cc4:	ldr	w14, [x24, #4]
   20cc8:	mov	w23, #0x1                   	// #1
   20ccc:	ldr	w27, [x7], #4
   20cd0:	sub	w14, w14, #0x1
   20cd4:	ldr	w2, [x19, #184]
   20cd8:	lsl	w14, w23, w14
   20cdc:	sub	w14, w14, #0x1
   20ce0:	mul	w18, w27, w18
   20ce4:	cmp	w14, w11
   20ce8:	sub	w0, w11, w14
   20cec:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   20cf0:	str	w0, [sp, #168]
   20cf4:	lsr	w18, w18, w1
   20cf8:	mov	x0, x19
   20cfc:	ubfiz	x18, x18, #2, #32
   20d00:	mov	w1, w11
   20d04:	ldr	w8, [x15, x18]
   20d08:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   20d0c:	cmp	w0, #0x0
   20d10:	csel	w0, w0, w23, ne  // ne = any
   20d14:	str	w0, [sp, #184]
   20d18:	ldr	w0, [x24, #12]
   20d1c:	and	w9, w14, w11
   20d20:	ldrb	w24, [sp, #128]
   20d24:	mov	w3, #0x4                   	// #4
   20d28:	ubfiz	x9, x9, #3, #31
   20d2c:	add	w25, w11, #0x9
   20d30:	lsl	w23, w23, w0
   20d34:	ldr	w0, [sp, #124]
   20d38:	add	x26, x12, x9
   20d3c:	add	x9, x9, #0x4
   20d40:	sub	w28, w0, #0x1
   20d44:	ldr	w0, [sp, #128]
   20d48:	add	x9, x12, x9
   20d4c:	sub	w4, w13, w5
   20d50:	cmp	w0, #0x0
   20d54:	mov	w0, #0x3                   	// #3
   20d58:	csel	w3, w3, w0, ne  // ne = any
   20d5c:	mov	w10, #0x0                   	// #0
   20d60:	mov	x6, #0x4                   	// #4
   20d64:	mov	w5, w24
   20d68:	cmp	w24, #0x3
   20d6c:	ldr	x0, [sp, #104]
   20d70:	b.ne	2137c <ZSTD_compress@@Base+0x12b30>  // b.any
   20d74:	ldr	w0, [x0]
   20d78:	sub	w0, w0, #0x1
   20d7c:	sub	w1, w0, #0x1
   20d80:	cmp	w1, w4
   20d84:	b.cs	21384 <ZSTD_compress@@Base+0x12b38>  // b.hs, b.nlast
   20d88:	mov	w1, w0
   20d8c:	sub	x0, x20, w0, uxtw
   20d90:	ldr	w0, [x0]
   20d94:	cmp	w27, w0
   20d98:	b.ne	21384 <ZSTD_compress@@Base+0x12b38>  // b.any
   20d9c:	sub	x1, x6, x1
   20da0:	mov	x2, x22
   20da4:	add	x1, x20, x1
   20da8:	mov	x0, x7
   20dac:	str	w3, [sp, #192]
   20db0:	str	w4, [sp, #200]
   20db4:	str	w5, [sp, #208]
   20db8:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   20dbc:	ldr	w3, [sp, #192]
   20dc0:	add	w0, w0, #0x4
   20dc4:	ldr	w4, [sp, #200]
   20dc8:	mov	x6, #0x4                   	// #4
   20dcc:	ldr	w5, [sp, #208]
   20dd0:	mov	w1, w0
   20dd4:	cmp	x28, w0, uxtw
   20dd8:	b.cs	20e10 <ZSTD_compress@@Base+0x125c4>  // b.hs, b.nlast
   20ddc:	ubfiz	x2, x10, #3, #32
   20de0:	ldr	w17, [sp, #128]
   20de4:	add	x16, x21, x2
   20de8:	add	w10, w10, #0x1
   20dec:	sub	w5, w5, w17
   20df0:	str	w5, [x21, x2]
   20df4:	add	x2, x20, x1
   20df8:	cmp	x2, x22
   20dfc:	ldr	w2, [sp, #176]
   20e00:	str	w0, [x16, #4]
   20e04:	ccmp	w0, w2, #0x2, ne  // ne = any
   20e08:	b.hi	215f4 <ZSTD_compress@@Base+0x12da8>  // b.pmore
   20e0c:	mov	x28, x1
   20e10:	add	x24, x24, #0x1
   20e14:	cmp	w3, w24
   20e18:	b.hi	20d64 <ZSTD_compress@@Base+0x12518>  // b.pmore
   20e1c:	add	w13, w13, #0x2
   20e20:	mov	x7, #0x0                   	// #0
   20e24:	str	w11, [x15, x18]
   20e28:	mov	x15, #0x0                   	// #0
   20e2c:	cbz	w23, 20e3c <ZSTD_compress@@Base+0x125f0>
   20e30:	ldr	w0, [sp, #184]
   20e34:	cmp	w0, w8
   20e38:	b.ls	2138c <ZSTD_compress@@Base+0x12b40>  // b.plast
   20e3c:	str	wzr, [x9]
   20e40:	b	2128c <ZSTD_compress@@Base+0x12a40>
   20e44:	add	x1, x25, w23, uxtw
   20e48:	mov	x2, x22
   20e4c:	mov	x0, x19
   20e50:	mov	w4, #0x0                   	// #0
   20e54:	str	w3, [sp, #128]
   20e58:	bl	2012c <ZSTD_compress@@Base+0x118e0>
   20e5c:	ldr	w3, [sp, #128]
   20e60:	add	w23, w23, w0
   20e64:	b	20c40 <ZSTD_compress@@Base+0x123f4>
   20e68:	sub	w3, w3, #0x6
   20e6c:	cmp	w3, #0x1
   20e70:	b.hi	20cb4 <ZSTD_compress@@Base+0x12468>  // b.pmore
   20e74:	mov	w2, #0x6                   	// #6
   20e78:	mov	x0, x20
   20e7c:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   20e80:	lsl	x26, x0, #2
   20e84:	ldr	w9, [x24, #4]
   20e88:	mov	w14, #0x1                   	// #1
   20e8c:	ldr	w2, [x19, #184]
   20e90:	mov	w1, w11
   20e94:	sub	w9, w9, #0x1
   20e98:	ldr	w7, [x15, x26]
   20e9c:	mov	w28, #0x4                   	// #4
   20ea0:	lsl	w9, w14, w9
   20ea4:	sub	w9, w9, #0x1
   20ea8:	cmp	w9, w11
   20eac:	sub	w0, w11, w9
   20eb0:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   20eb4:	str	w0, [sp, #168]
   20eb8:	mov	x0, x19
   20ebc:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   20ec0:	cmp	w0, #0x0
   20ec4:	csel	w0, w0, w14, ne  // ne = any
   20ec8:	str	w0, [sp, #184]
   20ecc:	ldr	w0, [x24, #12]
   20ed0:	and	w8, w9, w11
   20ed4:	ldrb	w18, [sp, #128]
   20ed8:	sub	w23, w11, w5
   20edc:	ubfiz	x8, x8, #3, #31
   20ee0:	mov	x4, #0x4                   	// #4
   20ee4:	lsl	w14, w14, w0
   20ee8:	ldr	w0, [sp, #124]
   20eec:	add	x27, x12, x8
   20ef0:	add	x8, x8, #0x4
   20ef4:	sub	w24, w0, #0x1
   20ef8:	ldr	w0, [sp, #128]
   20efc:	add	x8, x12, x8
   20f00:	add	w25, w11, #0x9
   20f04:	cmp	w0, #0x0
   20f08:	add	x5, x20, x4
   20f0c:	mov	w0, #0x3                   	// #3
   20f10:	csel	w28, w28, w0, ne  // ne = any
   20f14:	mov	w10, #0x0                   	// #0
   20f18:	mov	w3, w18
   20f1c:	cmp	w18, #0x3
   20f20:	ldr	x0, [sp, #104]
   20f24:	b.ne	216ec <ZSTD_compress@@Base+0x12ea0>  // b.any
   20f28:	ldr	w0, [x0]
   20f2c:	sub	w0, w0, #0x1
   20f30:	sub	w1, w0, #0x1
   20f34:	cmp	w1, w23
   20f38:	b.cs	216f4 <ZSTD_compress@@Base+0x12ea8>  // b.hs, b.nlast
   20f3c:	mov	w1, w0
   20f40:	sub	x0, x20, w0, uxtw
   20f44:	ldr	w2, [x0]
   20f48:	ldr	w0, [x20]
   20f4c:	cmp	w2, w0
   20f50:	b.ne	216f4 <ZSTD_compress@@Base+0x12ea8>  // b.any
   20f54:	sub	x1, x4, x1
   20f58:	mov	x0, x5
   20f5c:	mov	x2, x22
   20f60:	add	x1, x20, x1
   20f64:	str	x5, [sp, #192]
   20f68:	str	w3, [sp, #208]
   20f6c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   20f70:	ldr	w3, [sp, #208]
   20f74:	add	w0, w0, #0x4
   20f78:	ldr	x5, [sp, #192]
   20f7c:	mov	x4, #0x4                   	// #4
   20f80:	mov	w1, w0
   20f84:	cmp	x24, w0, uxtw
   20f88:	b.cs	20fc0 <ZSTD_compress@@Base+0x12774>  // b.hs, b.nlast
   20f8c:	ubfiz	x2, x10, #3, #32
   20f90:	ldr	w16, [sp, #128]
   20f94:	add	x6, x21, x2
   20f98:	add	w10, w10, #0x1
   20f9c:	sub	w3, w3, w16
   20fa0:	str	w3, [x21, x2]
   20fa4:	add	x2, x20, x1
   20fa8:	cmp	x2, x22
   20fac:	ldr	w2, [sp, #176]
   20fb0:	str	w0, [x6, #4]
   20fb4:	ccmp	w0, w2, #0x2, ne  // ne = any
   20fb8:	b.hi	215f4 <ZSTD_compress@@Base+0x12da8>  // b.pmore
   20fbc:	mov	x24, x1
   20fc0:	add	x18, x18, #0x1
   20fc4:	cmp	w28, w18
   20fc8:	b.hi	20f18 <ZSTD_compress@@Base+0x126cc>  // b.pmore
   20fcc:	add	w13, w13, #0x2
   20fd0:	mov	x18, #0x0                   	// #0
   20fd4:	str	w11, [x15, x26]
   20fd8:	mov	x11, #0x0                   	// #0
   20fdc:	cbz	w14, 20fec <ZSTD_compress@@Base+0x127a0>
   20fe0:	ldr	w0, [sp, #184]
   20fe4:	cmp	w0, w7
   20fe8:	b.ls	216fc <ZSTD_compress@@Base+0x12eb0>  // b.plast
   20fec:	str	wzr, [x8]
   20ff0:	str	wzr, [x27]
   20ff4:	b	21290 <ZSTD_compress@@Base+0x12a44>
   20ff8:	mov	x28, x20
   20ffc:	mov	w0, #0x79b1                	// #31153
   21000:	movk	w0, #0x9e37, lsl #16
   21004:	ldr	w18, [x24, #4]
   21008:	neg	w1, w1
   2100c:	mov	w23, #0x1                   	// #1
   21010:	ldr	w9, [x28], #3
   21014:	sub	w18, w18, #0x1
   21018:	ldr	w2, [x19, #184]
   2101c:	lsl	w18, w23, w18
   21020:	sub	w18, w18, #0x1
   21024:	cmp	w18, w11
   21028:	str	w3, [sp, #208]
   2102c:	mul	w0, w9, w0
   21030:	lsr	w0, w0, w1
   21034:	mov	w1, w11
   21038:	ubfiz	x0, x0, #2, #32
   2103c:	str	x0, [sp, #192]
   21040:	ldr	w27, [x15, x0]
   21044:	sub	w0, w11, w18
   21048:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   2104c:	str	w0, [sp, #184]
   21050:	mov	x0, x19
   21054:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   21058:	cmp	w0, #0x0
   2105c:	and	w14, w18, w11
   21060:	csel	w0, w0, w23, ne  // ne = any
   21064:	str	w0, [sp, #168]
   21068:	ldr	w0, [x24, #12]
   2106c:	ubfiz	x14, x14, #3, #31
   21070:	ldr	w3, [sp, #208]
   21074:	add	x26, x12, x14
   21078:	ldrb	w8, [sp, #128]
   2107c:	add	x14, x14, #0x4
   21080:	lsl	w23, w23, w0
   21084:	ldr	w0, [sp, #124]
   21088:	mov	w7, #0x4                   	// #4
   2108c:	add	x14, x12, x14
   21090:	sub	w24, w0, #0x1
   21094:	ldr	w0, [sp, #128]
   21098:	add	w25, w11, #0x9
   2109c:	lsl	w9, w9, #8
   210a0:	cmp	w0, #0x0
   210a4:	sub	w5, w11, w5
   210a8:	csel	w7, w7, w3, ne  // ne = any
   210ac:	mov	w10, #0x0                   	// #0
   210b0:	mov	x4, #0x3                   	// #3
   210b4:	mov	w3, w8
   210b8:	cmp	w8, #0x3
   210bc:	ldr	x0, [sp, #104]
   210c0:	b.ne	2124c <ZSTD_compress@@Base+0x12a00>  // b.any
   210c4:	ldr	w0, [x0]
   210c8:	sub	w0, w0, #0x1
   210cc:	sub	w1, w0, #0x1
   210d0:	cmp	w1, w5
   210d4:	b.cs	21254 <ZSTD_compress@@Base+0x12a08>  // b.hs, b.nlast
   210d8:	mov	w1, w0
   210dc:	sub	x0, x20, w0, uxtw
   210e0:	ldr	w0, [x0]
   210e4:	cmp	w9, w0, lsl #8
   210e8:	b.ne	21254 <ZSTD_compress@@Base+0x12a08>  // b.any
   210ec:	sub	x1, x4, x1
   210f0:	mov	x2, x22
   210f4:	add	x1, x20, x1
   210f8:	mov	x0, x28
   210fc:	str	w5, [sp, #200]
   21100:	str	w3, [sp, #208]
   21104:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   21108:	ldr	w5, [sp, #200]
   2110c:	add	w0, w0, #0x3
   21110:	ldr	w3, [sp, #208]
   21114:	mov	x4, #0x3                   	// #3
   21118:	mov	w1, w0
   2111c:	cmp	x24, w0, uxtw
   21120:	b.cs	21158 <ZSTD_compress@@Base+0x1290c>  // b.hs, b.nlast
   21124:	ubfiz	x2, x10, #3, #32
   21128:	ldr	w16, [sp, #128]
   2112c:	add	x6, x21, x2
   21130:	add	w10, w10, #0x1
   21134:	sub	w3, w3, w16
   21138:	str	w3, [x21, x2]
   2113c:	add	x2, x20, x1
   21140:	cmp	x2, x22
   21144:	ldr	w2, [sp, #176]
   21148:	str	w0, [x6, #4]
   2114c:	ccmp	w0, w2, #0x2, ne  // ne = any
   21150:	b.hi	215f4 <ZSTD_compress@@Base+0x12da8>  // b.pmore
   21154:	mov	x24, x1
   21158:	add	x8, x8, #0x1
   2115c:	cmp	w7, w8
   21160:	b.hi	210b4 <ZSTD_compress@@Base+0x12868>  // b.pmore
   21164:	cmp	x24, #0x2
   21168:	b.ne	21264 <ZSTD_compress@@Base+0x12a18>  // b.any
   2116c:	add	x1, sp, #0x11c
   21170:	mov	x2, x20
   21174:	mov	x0, x19
   21178:	bl	1ff88 <ZSTD_compress@@Base+0x1173c>
   2117c:	ldr	w1, [sp, #168]
   21180:	sub	w7, w11, w0
   21184:	cmp	w1, w0
   21188:	mov	w1, #0x3ffff               	// #262143
   2118c:	ccmp	w7, w1, #0x2, ls  // ls = plast
   21190:	b.hi	21264 <ZSTD_compress@@Base+0x12a18>  // b.pmore
   21194:	ldr	x1, [sp, #136]
   21198:	mov	x2, x22
   2119c:	add	x1, x1, w0, uxtw
   211a0:	mov	x0, x20
   211a4:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   211a8:	cmp	x0, #0x2
   211ac:	b.ls	21264 <ZSTD_compress@@Base+0x12a18>  // b.plast
   211b0:	add	w1, w7, #0x2
   211b4:	ldr	w2, [sp, #176]
   211b8:	stp	w1, w0, [x21]
   211bc:	add	x1, x20, x0
   211c0:	cmp	x1, x22
   211c4:	ccmp	x0, x2, #0x2, ne  // ne = any
   211c8:	b.ls	2125c <ZSTD_compress@@Base+0x12a10>  // b.plast
   211cc:	add	w11, w11, #0x1
   211d0:	mov	w10, #0x1                   	// #1
   211d4:	str	w11, [x19, #36]
   211d8:	ldp	x1, x0, [sp, #96]
   211dc:	mov	w3, #0x0                   	// #0
   211e0:	ldr	x2, [sp, #160]
   211e4:	ldr	w0, [x0]
   211e8:	str	w0, [x1, #16]
   211ec:	ldr	x0, [sp, #104]
   211f0:	ldr	w0, [x0, #4]
   211f4:	str	w0, [x1, #20]
   211f8:	ldr	x0, [sp, #104]
   211fc:	ldr	w0, [x0, #8]
   21200:	str	w0, [x1, #24]
   21204:	mov	x0, x1
   21208:	ldr	w1, [sp, #152]
   2120c:	stp	wzr, w1, [x0, #8]
   21210:	ldr	x0, [sp, #112]
   21214:	bl	204f4 <ZSTD_compress@@Base+0x11ca8>
   21218:	mov	w6, w0
   2121c:	ldr	x0, [sp, #96]
   21220:	str	w6, [x0]
   21224:	sub	w0, w10, #0x1
   21228:	lsl	x2, x0, #3
   2122c:	add	x0, x21, x0, lsl #3
   21230:	ldr	w1, [x0, #4]
   21234:	ldr	w0, [sp, #224]
   21238:	cmp	w0, w1
   2123c:	b.cs	217dc <ZSTD_compress@@Base+0x12f90>  // b.hs, b.nlast
   21240:	ldr	w2, [x21, x2]
   21244:	mov	w0, #0x0                   	// #0
   21248:	b	219e0 <ZSTD_compress@@Base+0x13194>
   2124c:	ldr	w0, [x0, x8, lsl #2]
   21250:	b	210cc <ZSTD_compress@@Base+0x12880>
   21254:	mov	w0, #0x0                   	// #0
   21258:	b	21118 <ZSTD_compress@@Base+0x128cc>
   2125c:	mov	x24, x0
   21260:	mov	w10, #0x1                   	// #1
   21264:	ldr	x0, [sp, #192]
   21268:	add	w13, w13, #0x2
   2126c:	mov	x9, #0x0                   	// #0
   21270:	mov	x7, #0x0                   	// #0
   21274:	str	w11, [x15, x0]
   21278:	cbz	w23, 21288 <ZSTD_compress@@Base+0x12a3c>
   2127c:	ldr	w0, [sp, #168]
   21280:	cmp	w0, w27
   21284:	b.ls	2129c <ZSTD_compress@@Base+0x12a50>  // b.plast
   21288:	str	wzr, [x14]
   2128c:	str	wzr, [x26]
   21290:	sub	w25, w25, #0x8
   21294:	str	w25, [x19, #36]
   21298:	b	215f4 <ZSTD_compress@@Base+0x12da8>
   2129c:	and	w8, w18, w27
   212a0:	cmp	x7, x9
   212a4:	ldr	x0, [sp, #136]
   212a8:	ubfiz	x8, x8, #3, #31
   212ac:	csel	x15, x7, x9, ls  // ls = plast
   212b0:	add	x11, x12, x8
   212b4:	mov	x2, x22
   212b8:	add	x28, x0, w27, uxtw
   212bc:	add	x0, x20, x15
   212c0:	add	x1, x28, x15
   212c4:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   212c8:	add	x15, x15, x0
   212cc:	cmp	x15, x24
   212d0:	b.ls	21314 <ZSTD_compress@@Base+0x12ac8>  // b.plast
   212d4:	sub	w0, w25, w27
   212d8:	mov	w2, w15
   212dc:	cmp	x15, x0
   212e0:	b.ls	212e8 <ZSTD_compress@@Base+0x12a9c>  // b.plast
   212e4:	add	w25, w27, w15
   212e8:	ubfiz	x0, x10, #3, #32
   212ec:	sub	w3, w13, w27
   212f0:	add	x1, x21, x0
   212f4:	cmp	x15, #0x1, lsl #12
   212f8:	add	w10, w10, #0x1
   212fc:	str	w3, [x21, x0]
   21300:	add	x0, x20, x15
   21304:	str	w2, [x1, #4]
   21308:	ccmp	x0, x22, #0x4, ls  // ls = plast
   2130c:	b.eq	21288 <ZSTD_compress@@Base+0x12a3c>  // b.none
   21310:	mov	x24, x15
   21314:	ldrb	w1, [x28, x15]
   21318:	ldrb	w0, [x20, x15]
   2131c:	cmp	w1, w0
   21320:	b.cs	21348 <ZSTD_compress@@Base+0x12afc>  // b.hs, b.nlast
   21324:	ldr	w0, [sp, #184]
   21328:	str	w27, [x26]
   2132c:	cmp	w27, w0
   21330:	b.ls	2136c <ZSTD_compress@@Base+0x12b20>  // b.plast
   21334:	ldr	w27, [x11, #4]
   21338:	add	x26, x11, #0x4
   2133c:	sub	w23, w23, #0x1
   21340:	mov	x7, x15
   21344:	b	21278 <ZSTD_compress@@Base+0x12a2c>
   21348:	ldr	w0, [sp, #184]
   2134c:	str	w27, [x14]
   21350:	cmp	w27, w0
   21354:	b.ls	21374 <ZSTD_compress@@Base+0x12b28>  // b.plast
   21358:	mov	x9, x15
   2135c:	ldr	w27, [x12, x8]
   21360:	mov	x14, x11
   21364:	mov	x15, x7
   21368:	b	2133c <ZSTD_compress@@Base+0x12af0>
   2136c:	add	x26, sp, #0x120
   21370:	b	21288 <ZSTD_compress@@Base+0x12a3c>
   21374:	add	x14, sp, #0x120
   21378:	b	21288 <ZSTD_compress@@Base+0x12a3c>
   2137c:	ldr	w0, [x0, x24, lsl #2]
   21380:	b	20d7c <ZSTD_compress@@Base+0x12530>
   21384:	mov	w0, #0x0                   	// #0
   21388:	b	20dd0 <ZSTD_compress@@Base+0x12584>
   2138c:	and	w11, w14, w8
   21390:	cmp	x7, x15
   21394:	ldr	x0, [sp, #136]
   21398:	ubfiz	x11, x11, #3, #31
   2139c:	add	x18, x12, x11
   213a0:	csel	x24, x7, x15, ls  // ls = plast
   213a4:	mov	x2, x22
   213a8:	add	x27, x0, w8, uxtw
   213ac:	add	x0, x20, x24
   213b0:	add	x1, x27, x24
   213b4:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   213b8:	add	x24, x24, x0
   213bc:	cmp	x24, x28
   213c0:	b.ls	21404 <ZSTD_compress@@Base+0x12bb8>  // b.plast
   213c4:	sub	w0, w25, w8
   213c8:	mov	w2, w24
   213cc:	cmp	x24, x0
   213d0:	b.ls	213d8 <ZSTD_compress@@Base+0x12b8c>  // b.plast
   213d4:	add	w25, w8, w24
   213d8:	ubfiz	x0, x10, #3, #32
   213dc:	sub	w3, w13, w8
   213e0:	add	x1, x21, x0
   213e4:	cmp	x24, #0x1, lsl #12
   213e8:	add	w10, w10, #0x1
   213ec:	str	w3, [x21, x0]
   213f0:	add	x0, x20, x24
   213f4:	str	w2, [x1, #4]
   213f8:	ccmp	x0, x22, #0x4, ls  // ls = plast
   213fc:	b.eq	20e3c <ZSTD_compress@@Base+0x125f0>  // b.none
   21400:	mov	x28, x24
   21404:	ldrb	w1, [x27, x24]
   21408:	ldrb	w0, [x20, x24]
   2140c:	cmp	w1, w0
   21410:	b.cs	21438 <ZSTD_compress@@Base+0x12bec>  // b.hs, b.nlast
   21414:	ldr	w0, [sp, #168]
   21418:	str	w8, [x26]
   2141c:	cmp	w8, w0
   21420:	b.ls	2145c <ZSTD_compress@@Base+0x12c10>  // b.plast
   21424:	ldr	w8, [x18, #4]
   21428:	add	x26, x18, #0x4
   2142c:	sub	w23, w23, #0x1
   21430:	mov	x7, x24
   21434:	b	20e2c <ZSTD_compress@@Base+0x125e0>
   21438:	ldr	w0, [sp, #168]
   2143c:	str	w8, [x9]
   21440:	cmp	w8, w0
   21444:	b.ls	21464 <ZSTD_compress@@Base+0x12c18>  // b.plast
   21448:	mov	x15, x24
   2144c:	ldr	w8, [x12, x11]
   21450:	mov	x9, x18
   21454:	mov	x24, x7
   21458:	b	2142c <ZSTD_compress@@Base+0x12be0>
   2145c:	add	x26, sp, #0x120
   21460:	b	20e3c <ZSTD_compress@@Base+0x125f0>
   21464:	add	x9, sp, #0x120
   21468:	b	20e3c <ZSTD_compress@@Base+0x125f0>
   2146c:	mov	w2, w3
   21470:	mov	x0, x20
   21474:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   21478:	lsl	x26, x0, #2
   2147c:	ldr	w9, [x24, #4]
   21480:	mov	w14, #0x1                   	// #1
   21484:	ldr	w2, [x19, #184]
   21488:	mov	w1, w11
   2148c:	sub	w9, w9, #0x1
   21490:	ldr	w7, [x15, x26]
   21494:	mov	w27, #0x4                   	// #4
   21498:	lsl	w9, w14, w9
   2149c:	sub	w9, w9, #0x1
   214a0:	cmp	w9, w11
   214a4:	sub	w0, w11, w9
   214a8:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   214ac:	str	w0, [sp, #168]
   214b0:	mov	x0, x19
   214b4:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   214b8:	cmp	w0, #0x0
   214bc:	csel	w0, w0, w14, ne  // ne = any
   214c0:	str	w0, [sp, #184]
   214c4:	ldr	w0, [x24, #12]
   214c8:	and	w8, w9, w11
   214cc:	ldrb	w18, [sp, #128]
   214d0:	mov	x3, #0x4                   	// #4
   214d4:	ubfiz	x8, x8, #3, #31
   214d8:	add	w23, w11, #0x9
   214dc:	lsl	w14, w14, w0
   214e0:	ldr	w0, [sp, #124]
   214e4:	add	x25, x12, x8
   214e8:	add	x8, x8, #0x4
   214ec:	sub	w24, w0, #0x1
   214f0:	ldr	w0, [sp, #128]
   214f4:	add	x8, x12, x8
   214f8:	sub	w5, w11, w5
   214fc:	cmp	w0, #0x0
   21500:	add	x4, x20, x3
   21504:	mov	w0, #0x3                   	// #3
   21508:	csel	w27, w27, w0, ne  // ne = any
   2150c:	mov	w10, #0x0                   	// #0
   21510:	mov	w28, w18
   21514:	cmp	w18, #0x3
   21518:	ldr	x0, [sp, #104]
   2151c:	b.ne	215fc <ZSTD_compress@@Base+0x12db0>  // b.any
   21520:	ldr	w0, [x0]
   21524:	sub	w0, w0, #0x1
   21528:	sub	w1, w0, #0x1
   2152c:	cmp	w1, w5
   21530:	b.cs	21604 <ZSTD_compress@@Base+0x12db8>  // b.hs, b.nlast
   21534:	mov	w1, w0
   21538:	sub	x0, x20, w0, uxtw
   2153c:	ldr	w2, [x0]
   21540:	ldr	w0, [x20]
   21544:	cmp	w2, w0
   21548:	b.ne	21604 <ZSTD_compress@@Base+0x12db8>  // b.any
   2154c:	sub	x1, x3, x1
   21550:	mov	x0, x4
   21554:	mov	x2, x22
   21558:	add	x1, x20, x1
   2155c:	str	x4, [sp, #192]
   21560:	str	w5, [sp, #208]
   21564:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   21568:	ldr	w5, [sp, #208]
   2156c:	add	w0, w0, #0x4
   21570:	ldr	x4, [sp, #192]
   21574:	mov	x3, #0x4                   	// #4
   21578:	mov	w1, w0
   2157c:	cmp	x24, w0, uxtw
   21580:	b.cs	215b8 <ZSTD_compress@@Base+0x12d6c>  // b.hs, b.nlast
   21584:	ubfiz	x2, x10, #3, #32
   21588:	ldr	w16, [sp, #128]
   2158c:	add	x6, x21, x2
   21590:	add	w10, w10, #0x1
   21594:	sub	w28, w28, w16
   21598:	str	w28, [x21, x2]
   2159c:	add	x2, x20, x1
   215a0:	cmp	x2, x22
   215a4:	ldr	w2, [sp, #176]
   215a8:	str	w0, [x6, #4]
   215ac:	ccmp	w0, w2, #0x2, ne  // ne = any
   215b0:	b.hi	215f4 <ZSTD_compress@@Base+0x12da8>  // b.pmore
   215b4:	mov	x24, x1
   215b8:	add	x18, x18, #0x1
   215bc:	cmp	w27, w18
   215c0:	b.hi	21510 <ZSTD_compress@@Base+0x12cc4>  // b.pmore
   215c4:	add	w13, w13, #0x2
   215c8:	mov	x18, #0x0                   	// #0
   215cc:	str	w11, [x15, x26]
   215d0:	mov	x11, #0x0                   	// #0
   215d4:	cbz	w14, 215e4 <ZSTD_compress@@Base+0x12d98>
   215d8:	ldr	w0, [sp, #184]
   215dc:	cmp	w0, w7
   215e0:	b.ls	2160c <ZSTD_compress@@Base+0x12dc0>  // b.plast
   215e4:	str	wzr, [x8]
   215e8:	sub	w23, w23, #0x8
   215ec:	str	wzr, [x25]
   215f0:	str	w23, [x19, #36]
   215f4:	cbz	w10, 20c28 <ZSTD_compress@@Base+0x123dc>
   215f8:	b	211d8 <ZSTD_compress@@Base+0x1298c>
   215fc:	ldr	w0, [x0, x18, lsl #2]
   21600:	b	21528 <ZSTD_compress@@Base+0x12cdc>
   21604:	mov	w0, #0x0                   	// #0
   21608:	b	21578 <ZSTD_compress@@Base+0x12d2c>
   2160c:	and	w15, w9, w7
   21610:	cmp	x11, x18
   21614:	ldr	x0, [sp, #136]
   21618:	ubfiz	x15, x15, #3, #31
   2161c:	csel	x27, x11, x18, ls  // ls = plast
   21620:	add	x26, x12, x15
   21624:	mov	x2, x22
   21628:	add	x28, x0, w7, uxtw
   2162c:	add	x0, x20, x27
   21630:	add	x1, x28, x27
   21634:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   21638:	add	x27, x27, x0
   2163c:	cmp	x27, x24
   21640:	b.ls	21684 <ZSTD_compress@@Base+0x12e38>  // b.plast
   21644:	sub	w0, w23, w7
   21648:	mov	w2, w27
   2164c:	cmp	x27, x0
   21650:	b.ls	21658 <ZSTD_compress@@Base+0x12e0c>  // b.plast
   21654:	add	w23, w7, w27
   21658:	ubfiz	x0, x10, #3, #32
   2165c:	sub	w3, w13, w7
   21660:	add	x1, x21, x0
   21664:	cmp	x27, #0x1, lsl #12
   21668:	add	w10, w10, #0x1
   2166c:	str	w3, [x21, x0]
   21670:	add	x0, x20, x27
   21674:	str	w2, [x1, #4]
   21678:	ccmp	x0, x22, #0x4, ls  // ls = plast
   2167c:	b.eq	215e4 <ZSTD_compress@@Base+0x12d98>  // b.none
   21680:	mov	x24, x27
   21684:	ldrb	w1, [x28, x27]
   21688:	ldrb	w0, [x20, x27]
   2168c:	cmp	w1, w0
   21690:	b.cs	216b8 <ZSTD_compress@@Base+0x12e6c>  // b.hs, b.nlast
   21694:	ldr	w0, [sp, #168]
   21698:	str	w7, [x25]
   2169c:	cmp	w7, w0
   216a0:	b.ls	216dc <ZSTD_compress@@Base+0x12e90>  // b.plast
   216a4:	ldr	w7, [x26, #4]
   216a8:	add	x25, x26, #0x4
   216ac:	sub	w14, w14, #0x1
   216b0:	mov	x11, x27
   216b4:	b	215d4 <ZSTD_compress@@Base+0x12d88>
   216b8:	ldr	w0, [sp, #168]
   216bc:	str	w7, [x8]
   216c0:	cmp	w7, w0
   216c4:	b.ls	216e4 <ZSTD_compress@@Base+0x12e98>  // b.plast
   216c8:	mov	x18, x27
   216cc:	ldr	w7, [x12, x15]
   216d0:	mov	x8, x26
   216d4:	mov	x27, x11
   216d8:	b	216ac <ZSTD_compress@@Base+0x12e60>
   216dc:	add	x25, sp, #0x120
   216e0:	b	215e4 <ZSTD_compress@@Base+0x12d98>
   216e4:	add	x8, sp, #0x120
   216e8:	b	215e4 <ZSTD_compress@@Base+0x12d98>
   216ec:	ldr	w0, [x0, x18, lsl #2]
   216f0:	b	20f30 <ZSTD_compress@@Base+0x126e4>
   216f4:	mov	w0, #0x0                   	// #0
   216f8:	b	20f80 <ZSTD_compress@@Base+0x12734>
   216fc:	and	w15, w9, w7
   21700:	cmp	x11, x18
   21704:	ldr	x0, [sp, #136]
   21708:	ubfiz	x15, x15, #3, #31
   2170c:	csel	x26, x11, x18, ls  // ls = plast
   21710:	add	x23, x12, x15
   21714:	mov	x2, x22
   21718:	add	x28, x0, w7, uxtw
   2171c:	add	x0, x20, x26
   21720:	add	x1, x28, x26
   21724:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   21728:	add	x26, x26, x0
   2172c:	cmp	x26, x24
   21730:	b.ls	21774 <ZSTD_compress@@Base+0x12f28>  // b.plast
   21734:	sub	w0, w25, w7
   21738:	mov	w2, w26
   2173c:	cmp	x26, x0
   21740:	b.ls	21748 <ZSTD_compress@@Base+0x12efc>  // b.plast
   21744:	add	w25, w7, w26
   21748:	ubfiz	x0, x10, #3, #32
   2174c:	sub	w3, w13, w7
   21750:	add	x1, x21, x0
   21754:	cmp	x26, #0x1, lsl #12
   21758:	add	w10, w10, #0x1
   2175c:	str	w3, [x21, x0]
   21760:	add	x0, x20, x26
   21764:	str	w2, [x1, #4]
   21768:	ccmp	x0, x22, #0x4, ls  // ls = plast
   2176c:	b.eq	20fec <ZSTD_compress@@Base+0x127a0>  // b.none
   21770:	mov	x24, x26
   21774:	ldrb	w1, [x28, x26]
   21778:	ldrb	w0, [x20, x26]
   2177c:	cmp	w1, w0
   21780:	b.cs	217a8 <ZSTD_compress@@Base+0x12f5c>  // b.hs, b.nlast
   21784:	ldr	w0, [sp, #168]
   21788:	str	w7, [x27]
   2178c:	cmp	w7, w0
   21790:	b.ls	217cc <ZSTD_compress@@Base+0x12f80>  // b.plast
   21794:	ldr	w7, [x23, #4]
   21798:	add	x27, x23, #0x4
   2179c:	sub	w14, w14, #0x1
   217a0:	mov	x11, x26
   217a4:	b	20fdc <ZSTD_compress@@Base+0x12790>
   217a8:	ldr	w0, [sp, #168]
   217ac:	str	w7, [x8]
   217b0:	cmp	w7, w0
   217b4:	b.ls	217d4 <ZSTD_compress@@Base+0x12f88>  // b.plast
   217b8:	mov	x18, x26
   217bc:	ldr	w7, [x12, x15]
   217c0:	mov	x8, x23
   217c4:	mov	x26, x11
   217c8:	b	2179c <ZSTD_compress@@Base+0x12f50>
   217cc:	add	x27, sp, #0x120
   217d0:	b	20fec <ZSTD_compress@@Base+0x127a0>
   217d4:	add	x8, sp, #0x120
   217d8:	b	20fec <ZSTD_compress@@Base+0x127a0>
   217dc:	ldr	x1, [sp, #160]
   217e0:	mov	w2, #0x0                   	// #0
   217e4:	mov	w0, #0x0                   	// #0
   217e8:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   217ec:	add	w6, w6, w0
   217f0:	ldr	x1, [sp, #96]
   217f4:	mov	w0, #0x40000000            	// #1073741824
   217f8:	str	w0, [x1, #28]
   217fc:	str	w0, [x1, #56]
   21800:	ldr	w1, [sp, #124]
   21804:	cmp	w1, #0x4
   21808:	b.ne	21814 <ZSTD_compress@@Base+0x12fc8>  // b.any
   2180c:	ldr	x1, [sp, #96]
   21810:	str	w0, [x1, #84]
   21814:	ldr	w5, [sp, #124]
   21818:	mov	x8, x21
   2181c:	add	x7, x19, #0x48
   21820:	mov	w9, #0x0                   	// #0
   21824:	ldp	w11, w13, [x8]
   21828:	ldr	w2, [sp, #128]
   2182c:	ldr	x0, [sp, #104]
   21830:	mov	w1, w11
   21834:	bl	205a8 <ZSTD_compress@@Base+0x11d5c>
   21838:	add	w2, w11, #0x1
   2183c:	clz	w2, w2
   21840:	mov	w18, #0x1c                  	// #28
   21844:	eor	w2, w2, #0x1f
   21848:	str	w0, [sp, #288]
   2184c:	sub	w4, w2, #0x13
   21850:	add	w12, w2, #0x10
   21854:	sbfiz	x14, x2, #2, #32
   21858:	lsl	w15, w2, #8
   2185c:	lsl	w4, w4, #9
   21860:	lsl	w12, w12, #8
   21864:	lsr	x0, x0, #32
   21868:	str	w0, [sp, #292]
   2186c:	str	w1, [sp, #296]
   21870:	cmp	w13, w5
   21874:	b.cs	21a88 <ZSTD_compress@@Base+0x1323c>  // b.hs, b.nlast
   21878:	add	w9, w9, #0x1
   2187c:	add	x8, x8, #0x8
   21880:	cmp	w10, w9
   21884:	b.ne	21824 <ZSTD_compress@@Base+0x12fd8>  // b.any
   21888:	sub	w0, w5, #0x1
   2188c:	str	w0, [sp, #152]
   21890:	mov	w0, #0x1                   	// #1
   21894:	str	w0, [sp, #176]
   21898:	ldr	w1, [sp, #152]
   2189c:	ldr	w0, [sp, #176]
   218a0:	cmp	w0, w1
   218a4:	b.hi	21990 <ZSTD_compress@@Base+0x13144>  // b.pmore
   218a8:	ldr	w0, [sp, #176]
   218ac:	mov	w1, #0x1c                  	// #28
   218b0:	sub	w9, w0, #0x1
   218b4:	add	x23, x20, w0, uxtw
   218b8:	umull	x9, w9, w1
   218bc:	ldr	x1, [sp, #96]
   218c0:	add	x8, x1, x9
   218c4:	ldr	w1, [x8, #8]
   218c8:	cbnz	w1, 21b3c <ZSTD_compress@@Base+0x132f0>
   218cc:	ldr	w7, [x8, #12]
   218d0:	add	w7, w7, #0x1
   218d4:	ldr	x2, [sp, #160]
   218d8:	sub	x0, x0, #0x1
   218dc:	mov	w3, #0x0                   	// #0
   218e0:	mov	w1, #0x1                   	// #1
   218e4:	add	x0, x20, x0
   218e8:	bl	20464 <ZSTD_compress@@Base+0x11c18>
   218ec:	mov	w5, w0
   218f0:	ldr	x1, [sp, #160]
   218f4:	mov	w0, w7
   218f8:	mov	w2, #0x0                   	// #0
   218fc:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   21900:	add	w5, w5, w0
   21904:	ldr	x1, [sp, #160]
   21908:	mov	w2, #0x0                   	// #0
   2190c:	sub	w0, w7, #0x1
   21910:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   21914:	ldr	x1, [sp, #96]
   21918:	ldr	w2, [sp, #176]
   2191c:	ldr	w1, [x1, x9]
   21920:	sub	w0, w1, w0
   21924:	mov	w1, #0x1c                  	// #28
   21928:	add	w0, w0, w5
   2192c:	umull	x1, w2, w1
   21930:	ldr	x2, [sp, #96]
   21934:	add	x2, x2, x1
   21938:	str	x2, [sp, #128]
   2193c:	ldr	x2, [sp, #96]
   21940:	ldr	w2, [x2, x1]
   21944:	cmp	w0, w2
   21948:	b.gt	21974 <ZSTD_compress@@Base+0x13128>
   2194c:	ldr	x2, [sp, #128]
   21950:	stur	xzr, [x2, #4]
   21954:	str	w7, [x2, #12]
   21958:	ldr	x2, [sp, #96]
   2195c:	str	w0, [x2, x1]
   21960:	ldr	x2, [sp, #128]
   21964:	ldr	x0, [x8, #16]
   21968:	str	x0, [x2, #16]
   2196c:	ldr	w0, [x8, #24]
   21970:	str	w0, [x2, #24]
   21974:	ldr	x0, [sp, #216]
   21978:	cmp	x0, x23
   2197c:	b.cc	222fc <ZSTD_compress@@Base+0x13ab0>  // b.lo, b.ul, b.last
   21980:	ldr	w2, [sp, #152]
   21984:	ldr	w0, [sp, #176]
   21988:	cmp	w0, w2
   2198c:	b.ne	21b44 <ZSTD_compress@@Base+0x132f8>  // b.any
   21990:	ldr	w1, [sp, #152]
   21994:	mov	w0, #0x1c                  	// #28
   21998:	ldr	x2, [sp, #96]
   2199c:	ldr	w4, [sp, #152]
   219a0:	umaddl	x0, w1, w0, x2
   219a4:	ldp	x2, x3, [x0]
   219a8:	stp	x2, x3, [sp, #304]
   219ac:	ldr	w2, [x0, #4]
   219b0:	ldr	x1, [x0, #16]
   219b4:	str	x1, [sp, #320]
   219b8:	ldr	w1, [x0, #24]
   219bc:	str	w1, [sp, #328]
   219c0:	ldp	w1, w0, [x0, #8]
   219c4:	str	w0, [sp, #180]
   219c8:	mov	w0, w0
   219cc:	add	w3, w0, w1
   219d0:	ldr	w0, [sp, #152]
   219d4:	cmp	w4, w3
   219d8:	sub	w0, w0, w3
   219dc:	csel	w0, w0, wzr, hi  // hi = pmore
   219e0:	str	w2, [sp, #308]
   219e4:	add	w25, w0, #0x1
   219e8:	str	w1, [sp, #312]
   219ec:	mov	w10, w25
   219f0:	ldr	w1, [sp, #180]
   219f4:	ldr	x2, [sp, #96]
   219f8:	str	w1, [sp, #316]
   219fc:	mov	w1, #0x1c                  	// #28
   21a00:	ldr	x3, [sp, #320]
   21a04:	umaddl	x2, w25, w1, x2
   21a08:	ldp	x4, x5, [sp, #304]
   21a0c:	str	x3, [x2, #16]
   21a10:	ldr	w3, [sp, #328]
   21a14:	stp	x4, x5, [x2]
   21a18:	str	w3, [x2, #24]
   21a1c:	cbz	w0, 21a5c <ZSTD_compress@@Base+0x13210>
   21a20:	ldr	x2, [sp, #96]
   21a24:	sub	w10, w10, #0x1
   21a28:	umaddl	x4, w0, w1, x2
   21a2c:	ldp	w5, w2, [x4, #8]
   21a30:	add	w5, w5, w2
   21a34:	ldr	x2, [sp, #96]
   21a38:	cmp	w0, w5
   21a3c:	umaddl	x6, w10, w1, x2
   21a40:	ldp	x2, x3, [x4]
   21a44:	stp	x2, x3, [x6]
   21a48:	ldr	x2, [x4, #16]
   21a4c:	str	x2, [x6, #16]
   21a50:	ldr	w2, [x4, #24]
   21a54:	str	w2, [x6, #24]
   21a58:	b.hi	22964 <ZSTD_compress@@Base+0x14118>  // b.pmore
   21a5c:	mov	x13, #0xffff                	// #65535
   21a60:	sub	x12, x22, #0x20
   21a64:	mov	w15, w13
   21a68:	mov	w14, #0x1c                  	// #28
   21a6c:	mov	w18, #0x2                   	// #2
   21a70:	cmp	w25, w10
   21a74:	b.cs	2296c <ZSTD_compress@@Base+0x14120>  // b.hs, b.nlast
   21a78:	ldr	x0, [sp, #160]
   21a7c:	mov	w1, #0x0                   	// #0
   21a80:	bl	203b8 <ZSTD_compress@@Base+0x11b6c>
   21a84:	b	20be4 <ZSTD_compress@@Base+0x12398>
   21a88:	ldr	w0, [x7, #80]
   21a8c:	sub	w1, w5, #0x3
   21a90:	cmp	w0, #0x1
   21a94:	b.ne	21ae0 <ZSTD_compress@@Base+0x13294>  // b.any
   21a98:	mov	w0, w1
   21a9c:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   21aa0:	add	w0, w12, w0
   21aa4:	ldr	x1, [sp, #96]
   21aa8:	umull	x3, w5, w18
   21aac:	ldr	w16, [sp, #180]
   21ab0:	add	w0, w6, w0
   21ab4:	add	x1, x1, x3
   21ab8:	str	w16, [x1, #12]
   21abc:	ldr	x16, [sp, #96]
   21ac0:	stp	w11, w5, [x1, #4]
   21ac4:	add	w5, w5, #0x1
   21ac8:	str	w0, [x16, x3]
   21acc:	ldr	x0, [sp, #288]
   21ad0:	str	x0, [x1, #16]
   21ad4:	ldr	w0, [sp, #296]
   21ad8:	str	w0, [x1, #24]
   21adc:	b	21870 <ZSTD_compress@@Base+0x13024>
   21ae0:	ldr	x0, [x7, #24]
   21ae4:	ldr	w0, [x0, x14]
   21ae8:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   21aec:	ldr	w3, [x7, #76]
   21af0:	cmp	w2, #0x13
   21af4:	add	w3, w15, w3
   21af8:	sub	w3, w3, w0
   21afc:	b.le	21b04 <ZSTD_compress@@Base+0x132b8>
   21b00:	add	w3, w3, w4
   21b04:	mov	w0, w1
   21b08:	bl	2043c <ZSTD_compress@@Base+0x11bf0>
   21b0c:	ldr	x16, [x7, #16]
   21b10:	mov	w1, w0
   21b14:	ldr	w0, [x16, w0, uxtw #2]
   21b18:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   21b1c:	ldr	w16, [x7, #72]
   21b20:	sub	w0, w3, w0
   21b24:	add	w16, w16, #0x33
   21b28:	add	w16, w16, w0
   21b2c:	ldr	x0, [sp, #248]
   21b30:	ldr	w0, [x0, x1, lsl #2]
   21b34:	add	w0, w16, w0, lsl #8
   21b38:	b	21aa4 <ZSTD_compress@@Base+0x13258>
   21b3c:	mov	w7, #0x1                   	// #1
   21b40:	b	218d4 <ZSTD_compress@@Base+0x13088>
   21b44:	ldr	x0, [sp, #96]
   21b48:	ldr	x2, [sp, #96]
   21b4c:	ldr	w0, [x0, x1]
   21b50:	mov	w1, #0x1c                  	// #28
   21b54:	str	w0, [sp, #228]
   21b58:	ldr	w0, [sp, #176]
   21b5c:	add	w0, w0, #0x1
   21b60:	umull	x0, w0, w1
   21b64:	ldr	w1, [sp, #228]
   21b68:	add	w1, w1, #0x80
   21b6c:	ldr	w0, [x2, x0]
   21b70:	cmp	w0, w1
   21b74:	b.le	222fc <ZSTD_compress@@Base+0x13ab0>
   21b78:	ldr	x0, [sp, #128]
   21b7c:	ldr	w24, [x0, #8]
   21b80:	cbnz	w24, 21de4 <ZSTD_compress@@Base+0x13598>
   21b84:	ldr	w0, [x0, #12]
   21b88:	str	w0, [sp, #180]
   21b8c:	ldr	x27, [x19, #8]
   21b90:	ldr	w25, [x19, #36]
   21b94:	add	x0, x27, w25, uxtw
   21b98:	cmp	x23, x0
   21b9c:	b.cc	222fc <ZSTD_compress@@Base+0x13ab0>  // b.lo, b.ul, b.last
   21ba0:	ldr	x1, [sp, #160]
   21ba4:	add	x26, x19, #0xb8
   21ba8:	mov	w2, #0x0                   	// #0
   21bac:	mov	w0, #0x0                   	// #0
   21bb0:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   21bb4:	ldr	w28, [x26, #16]
   21bb8:	sub	x5, x23, x27
   21bbc:	str	w0, [sp, #260]
   21bc0:	mov	w6, w5
   21bc4:	cmp	w6, w25
   21bc8:	b.hi	21dec <ZSTD_compress@@Base+0x135a0>  // b.pmore
   21bcc:	cmp	w24, #0x0
   21bd0:	mov	w1, #0xfff                 	// #4095
   21bd4:	cset	w0, ne  // ne = any
   21bd8:	str	w0, [sp, #136]
   21bdc:	ldr	x0, [sp, #128]
   21be0:	str	w5, [x19, #36]
   21be4:	add	x0, x0, #0x10
   21be8:	str	x0, [sp, #200]
   21bec:	ldr	w0, [x26, #20]
   21bf0:	cmp	w0, #0xfff
   21bf4:	csel	w0, w0, w1, ls  // ls = plast
   21bf8:	str	w0, [sp, #192]
   21bfc:	ldr	x0, [x19, #8]
   21c00:	str	x0, [sp, #184]
   21c04:	ldr	w1, [x26, #8]
   21c08:	cmp	w28, #0x5
   21c0c:	sub	x11, x23, x0
   21c10:	str	w11, [sp, #208]
   21c14:	ldr	x0, [x19, #48]
   21c18:	str	x0, [sp, #168]
   21c1c:	b.eq	224e8 <ZSTD_compress@@Base+0x13c9c>  // b.none
   21c20:	b.hi	21e1c <ZSTD_compress@@Base+0x135d0>  // b.pmore
   21c24:	cmp	w28, #0x3
   21c28:	b.eq	22064 <ZSTD_compress@@Base+0x13818>  // b.none
   21c2c:	mov	x28, x23
   21c30:	mov	w12, #0x79b1                	// #31153
   21c34:	movk	w12, #0x9e37, lsl #16
   21c38:	neg	w1, w1
   21c3c:	ldp	w2, w9, [x19, #184]
   21c40:	mov	w13, #0x1                   	// #1
   21c44:	ldr	w0, [x28], #4
   21c48:	mov	w26, #0x4                   	// #4
   21c4c:	str	w0, [sp, #256]
   21c50:	sub	w9, w9, #0x1
   21c54:	mov	w0, w0
   21c58:	ldr	w27, [x19, #24]
   21c5c:	lsl	w9, w13, w9
   21c60:	sub	w9, w9, #0x1
   21c64:	cmp	w9, w11
   21c68:	mul	w12, w0, w12
   21c6c:	ldr	x0, [sp, #168]
   21c70:	lsr	w12, w12, w1
   21c74:	mov	w1, w11
   21c78:	ubfiz	x12, x12, #2, #32
   21c7c:	ldr	x24, [x19, #64]
   21c80:	ldr	w7, [x0, x12]
   21c84:	sub	w0, w11, w9
   21c88:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   21c8c:	str	w0, [sp, #212]
   21c90:	mov	x0, x19
   21c94:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   21c98:	cmp	w0, #0x0
   21c9c:	csel	w0, w0, w13, ne  // ne = any
   21ca0:	str	w0, [sp, #232]
   21ca4:	ldr	w0, [x19, #196]
   21ca8:	and	w8, w9, w11
   21cac:	ldrb	w14, [sp, #136]
   21cb0:	add	w15, w11, #0x9
   21cb4:	ubfiz	x8, x8, #3, #31
   21cb8:	sub	w27, w11, w27
   21cbc:	lsl	w13, w13, w0
   21cc0:	ldr	w0, [sp, #124]
   21cc4:	add	x18, x24, x8
   21cc8:	add	x8, x8, #0x4
   21ccc:	sub	w25, w0, #0x1
   21cd0:	ldr	w0, [sp, #136]
   21cd4:	add	x8, x24, x8
   21cd8:	mov	w10, #0x0                   	// #0
   21cdc:	cmp	w0, #0x0
   21ce0:	mov	w0, #0x3                   	// #3
   21ce4:	csel	w26, w26, w0, ne  // ne = any
   21ce8:	mov	x6, #0x4                   	// #4
   21cec:	ldr	x0, [sp, #128]
   21cf0:	add	x5, x0, #0x10
   21cf4:	mov	w4, w14
   21cf8:	cmp	w14, #0x3
   21cfc:	b.ne	223f0 <ZSTD_compress@@Base+0x13ba4>  // b.any
   21d00:	ldr	x0, [sp, #128]
   21d04:	ldr	w0, [x0, #16]
   21d08:	sub	w0, w0, #0x1
   21d0c:	sub	w1, w0, #0x1
   21d10:	cmp	w1, w27
   21d14:	b.cs	223f8 <ZSTD_compress@@Base+0x13bac>  // b.hs, b.nlast
   21d18:	mov	w1, w0
   21d1c:	sub	x0, x23, w0, uxtw
   21d20:	ldr	w2, [sp, #256]
   21d24:	ldr	w0, [x0]
   21d28:	cmp	w2, w0
   21d2c:	b.ne	223f8 <ZSTD_compress@@Base+0x13bac>  // b.any
   21d30:	sub	x1, x6, x1
   21d34:	mov	x2, x22
   21d38:	add	x1, x23, x1
   21d3c:	mov	x0, x28
   21d40:	str	w4, [sp, #240]
   21d44:	str	x5, [sp, #264]
   21d48:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   21d4c:	ldr	w4, [sp, #240]
   21d50:	add	w0, w0, #0x4
   21d54:	ldr	x5, [sp, #264]
   21d58:	mov	x6, #0x4                   	// #4
   21d5c:	mov	w1, w0
   21d60:	cmp	x25, w0, uxtw
   21d64:	b.cs	21d9c <ZSTD_compress@@Base+0x13550>  // b.hs, b.nlast
   21d68:	ubfiz	x2, x10, #3, #32
   21d6c:	ldr	w3, [sp, #136]
   21d70:	add	x16, x21, x2
   21d74:	add	w10, w10, #0x1
   21d78:	sub	w4, w4, w3
   21d7c:	str	w4, [x21, x2]
   21d80:	add	x2, x23, x1
   21d84:	cmp	x2, x22
   21d88:	ldr	w2, [sp, #192]
   21d8c:	str	w0, [x16, #4]
   21d90:	ccmp	w0, w2, #0x2, ne  // ne = any
   21d94:	b.hi	222f8 <ZSTD_compress@@Base+0x13aac>  // b.pmore
   21d98:	mov	x25, x1
   21d9c:	add	x14, x14, #0x1
   21da0:	cmp	w26, w14
   21da4:	b.hi	21cf4 <ZSTD_compress@@Base+0x134a8>  // b.pmore
   21da8:	ldr	x0, [sp, #168]
   21dac:	mov	x14, #0x0                   	// #0
   21db0:	str	w11, [x0, x12]
   21db4:	mov	x11, #0x0                   	// #0
   21db8:	ldr	w0, [sp, #208]
   21dbc:	add	w3, w0, #0x2
   21dc0:	cbz	w13, 21dd0 <ZSTD_compress@@Base+0x13584>
   21dc4:	ldr	w0, [sp, #232]
   21dc8:	cmp	w0, w7
   21dcc:	b.ls	22400 <ZSTD_compress@@Base+0x13bb4>  // b.plast
   21dd0:	str	wzr, [x8]
   21dd4:	sub	w15, w15, #0x8
   21dd8:	str	wzr, [x18]
   21ddc:	str	w15, [x19, #36]
   21de0:	b	222f8 <ZSTD_compress@@Base+0x13aac>
   21de4:	str	wzr, [sp, #180]
   21de8:	b	21b8c <ZSTD_compress@@Base+0x13340>
   21dec:	add	x1, x27, w25, uxtw
   21df0:	mov	w3, w28
   21df4:	mov	x2, x22
   21df8:	mov	x0, x19
   21dfc:	mov	w4, #0x0                   	// #0
   21e00:	str	w6, [sp, #136]
   21e04:	str	x5, [sp, #168]
   21e08:	bl	2012c <ZSTD_compress@@Base+0x118e0>
   21e0c:	ldr	w6, [sp, #136]
   21e10:	add	w25, w25, w0
   21e14:	ldr	x5, [sp, #168]
   21e18:	b	21bc4 <ZSTD_compress@@Base+0x13378>
   21e1c:	sub	w9, w28, #0x6
   21e20:	cmp	w9, #0x1
   21e24:	b.hi	21c2c <ZSTD_compress@@Base+0x133e0>  // b.pmore
   21e28:	mov	w2, #0x6                   	// #6
   21e2c:	mov	x0, x23
   21e30:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   21e34:	lsl	x25, x0, #2
   21e38:	ldr	w9, [x26, #4]
   21e3c:	mov	w12, #0x1                   	// #1
   21e40:	ldr	x0, [sp, #168]
   21e44:	sub	w9, w9, #0x1
   21e48:	ldr	w2, [x19, #184]
   21e4c:	mov	w1, w11
   21e50:	lsl	w9, w12, w9
   21e54:	sub	w9, w9, #0x1
   21e58:	ldr	w7, [x0, x25]
   21e5c:	cmp	w9, w11
   21e60:	ldr	x18, [x19, #64]
   21e64:	sub	w0, w11, w9
   21e68:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   21e6c:	str	w0, [sp, #212]
   21e70:	mov	x0, x19
   21e74:	ldr	w27, [x19, #24]
   21e78:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   21e7c:	cmp	w0, #0x0
   21e80:	csel	w0, w0, w12, ne  // ne = any
   21e84:	str	w0, [sp, #256]
   21e88:	ldr	w0, [x19, #196]
   21e8c:	and	w8, w9, w11
   21e90:	ldrb	w13, [sp, #136]
   21e94:	mov	w26, #0x4                   	// #4
   21e98:	ubfiz	x8, x8, #3, #31
   21e9c:	mov	x4, #0x4                   	// #4
   21ea0:	lsl	w12, w12, w0
   21ea4:	ldr	w0, [sp, #124]
   21ea8:	add	x15, x18, x8
   21eac:	add	x8, x8, #0x4
   21eb0:	sub	w24, w0, #0x1
   21eb4:	ldr	w0, [sp, #136]
   21eb8:	ldr	x3, [sp, #200]
   21ebc:	cmp	w0, #0x0
   21ec0:	add	x8, x18, x8
   21ec4:	mov	w0, #0x3                   	// #3
   21ec8:	add	w14, w11, #0x9
   21ecc:	add	x5, x23, x4
   21ed0:	csel	w26, w26, w0, ne  // ne = any
   21ed4:	sub	w27, w11, w27
   21ed8:	mov	w10, #0x0                   	// #0
   21edc:	mov	w28, w13
   21ee0:	cmp	w13, #0x3
   21ee4:	b.ne	2276c <ZSTD_compress@@Base+0x13f20>  // b.any
   21ee8:	ldr	x0, [sp, #128]
   21eec:	ldr	w0, [x0, #16]
   21ef0:	sub	w0, w0, #0x1
   21ef4:	sub	w1, w0, #0x1
   21ef8:	cmp	w1, w27
   21efc:	b.cs	22774 <ZSTD_compress@@Base+0x13f28>  // b.hs, b.nlast
   21f00:	mov	w1, w0
   21f04:	sub	x0, x23, w0, uxtw
   21f08:	ldr	w2, [x0]
   21f0c:	ldr	w0, [x23]
   21f10:	cmp	w2, w0
   21f14:	b.ne	22774 <ZSTD_compress@@Base+0x13f28>  // b.any
   21f18:	sub	x1, x4, x1
   21f1c:	mov	x0, x5
   21f20:	mov	x2, x22
   21f24:	add	x1, x23, x1
   21f28:	stp	x5, x3, [sp, #232]
   21f2c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   21f30:	add	w0, w0, #0x4
   21f34:	ldp	x5, x3, [sp, #232]
   21f38:	mov	x4, #0x4                   	// #4
   21f3c:	mov	w1, w0
   21f40:	cmp	x24, w0, uxtw
   21f44:	b.cs	21f7c <ZSTD_compress@@Base+0x13730>  // b.hs, b.nlast
   21f48:	ubfiz	x2, x10, #3, #32
   21f4c:	ldr	w16, [sp, #136]
   21f50:	add	x6, x21, x2
   21f54:	add	w10, w10, #0x1
   21f58:	sub	w28, w28, w16
   21f5c:	str	w28, [x21, x2]
   21f60:	add	x2, x23, x1
   21f64:	cmp	x2, x22
   21f68:	ldr	w2, [sp, #192]
   21f6c:	str	w0, [x6, #4]
   21f70:	ccmp	w0, w2, #0x2, ne  // ne = any
   21f74:	b.hi	222f8 <ZSTD_compress@@Base+0x13aac>  // b.pmore
   21f78:	mov	x24, x1
   21f7c:	add	x13, x13, #0x1
   21f80:	cmp	w26, w13
   21f84:	b.hi	21edc <ZSTD_compress@@Base+0x13690>  // b.pmore
   21f88:	ldr	x0, [sp, #168]
   21f8c:	mov	x26, #0x0                   	// #0
   21f90:	mov	x13, #0x0                   	// #0
   21f94:	str	w11, [x0, x25]
   21f98:	ldr	w0, [sp, #208]
   21f9c:	add	w11, w0, #0x2
   21fa0:	cbz	w12, 22670 <ZSTD_compress@@Base+0x13e24>
   21fa4:	ldr	w0, [sp, #256]
   21fa8:	cmp	w0, w7
   21fac:	b.hi	22670 <ZSTD_compress@@Base+0x13e24>  // b.pmore
   21fb0:	ldr	x0, [sp, #184]
   21fb4:	cmp	x13, x26
   21fb8:	and	w25, w9, w7
   21fbc:	csel	x28, x13, x26, ls  // ls = plast
   21fc0:	mov	x2, x22
   21fc4:	add	x3, x0, w7, uxtw
   21fc8:	ubfiz	x25, x25, #3, #31
   21fcc:	add	x1, x3, x28
   21fd0:	add	x0, x23, x28
   21fd4:	add	x27, x18, x25
   21fd8:	str	x3, [sp, #168]
   21fdc:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   21fe0:	add	x28, x28, x0
   21fe4:	cmp	x28, x24
   21fe8:	ldr	x3, [sp, #168]
   21fec:	b.ls	22030 <ZSTD_compress@@Base+0x137e4>  // b.plast
   21ff0:	sub	w0, w14, w7
   21ff4:	mov	w2, w28
   21ff8:	cmp	x28, x0
   21ffc:	b.ls	22004 <ZSTD_compress@@Base+0x137b8>  // b.plast
   22000:	add	w14, w7, w28
   22004:	ubfiz	x0, x10, #3, #32
   22008:	sub	w4, w11, w7
   2200c:	add	x1, x21, x0
   22010:	cmp	x28, #0x1, lsl #12
   22014:	add	w10, w10, #0x1
   22018:	str	w4, [x21, x0]
   2201c:	add	x0, x23, x28
   22020:	str	w2, [x1, #4]
   22024:	ccmp	x0, x22, #0x4, ls  // ls = plast
   22028:	b.eq	22670 <ZSTD_compress@@Base+0x13e24>  // b.none
   2202c:	mov	x24, x28
   22030:	ldrb	w1, [x3, x28]
   22034:	ldrb	w0, [x23, x28]
   22038:	cmp	w1, w0
   2203c:	b.cs	2277c <ZSTD_compress@@Base+0x13f30>  // b.hs, b.nlast
   22040:	ldr	w0, [sp, #212]
   22044:	str	w7, [x15]
   22048:	cmp	w7, w0
   2204c:	b.ls	227a0 <ZSTD_compress@@Base+0x13f54>  // b.plast
   22050:	ldr	w7, [x27, #4]
   22054:	add	x15, x27, #0x4
   22058:	sub	w12, w12, #0x1
   2205c:	mov	x13, x28
   22060:	b	21fa0 <ZSTD_compress@@Base+0x13754>
   22064:	mov	x27, x23
   22068:	mov	w0, #0x79b1                	// #31153
   2206c:	movk	w0, #0x9e37, lsl #16
   22070:	neg	w1, w1
   22074:	ldr	w14, [x26, #4]
   22078:	mov	w15, #0x1                   	// #1
   2207c:	ldr	w8, [x27], #3
   22080:	sub	w14, w14, #0x1
   22084:	ldr	w2, [x19, #184]
   22088:	ldr	x25, [x19, #64]
   2208c:	lsl	w14, w15, w14
   22090:	mul	w0, w8, w0
   22094:	sub	w14, w14, #0x1
   22098:	cmp	w14, w11
   2209c:	ldr	w26, [x19, #24]
   220a0:	lsr	w0, w0, w1
   220a4:	ubfiz	x0, x0, #2, #32
   220a8:	str	x0, [sp, #240]
   220ac:	ldr	x0, [sp, #168]
   220b0:	ldr	x1, [sp, #240]
   220b4:	ldr	w12, [x0, x1]
   220b8:	sub	w0, w11, w14
   220bc:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   220c0:	mov	w1, w11
   220c4:	str	w0, [sp, #232]
   220c8:	mov	x0, x19
   220cc:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   220d0:	cmp	w0, #0x0
   220d4:	csel	w0, w0, w15, ne  // ne = any
   220d8:	str	w0, [sp, #256]
   220dc:	add	w0, w11, #0x9
   220e0:	str	w0, [sp, #212]
   220e4:	ldr	w0, [x19, #196]
   220e8:	and	w13, w14, w11
   220ec:	ldrb	w7, [sp, #136]
   220f0:	mov	w9, #0x4                   	// #4
   220f4:	ubfiz	x13, x13, #3, #31
   220f8:	lsl	w8, w8, #8
   220fc:	lsl	w15, w15, w0
   22100:	ldr	w0, [sp, #124]
   22104:	add	x24, x25, x13
   22108:	add	x13, x13, #0x4
   2210c:	sub	w18, w0, #0x1
   22110:	ldr	w0, [sp, #136]
   22114:	ldr	x3, [sp, #200]
   22118:	cmp	w0, #0x0
   2211c:	add	x13, x25, x13
   22120:	csel	w9, w9, w28, ne  // ne = any
   22124:	sub	w26, w11, w26
   22128:	mov	w10, #0x0                   	// #0
   2212c:	mov	x4, #0x3                   	// #3
   22130:	mov	w28, w7
   22134:	cmp	w7, #0x3
   22138:	b.ne	222a0 <ZSTD_compress@@Base+0x13a54>  // b.any
   2213c:	ldr	x0, [sp, #128]
   22140:	ldr	w0, [x0, #16]
   22144:	sub	w0, w0, #0x1
   22148:	sub	w1, w0, #0x1
   2214c:	cmp	w1, w26
   22150:	b.cs	222a8 <ZSTD_compress@@Base+0x13a5c>  // b.hs, b.nlast
   22154:	mov	w1, w0
   22158:	sub	x0, x23, w0, uxtw
   2215c:	ldr	w0, [x0]
   22160:	cmp	w8, w0, lsl #8
   22164:	b.ne	222a8 <ZSTD_compress@@Base+0x13a5c>  // b.any
   22168:	sub	x1, x4, x1
   2216c:	mov	x2, x22
   22170:	add	x1, x23, x1
   22174:	mov	x0, x27
   22178:	str	x3, [sp, #264]
   2217c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   22180:	ldr	x3, [sp, #264]
   22184:	add	w0, w0, #0x3
   22188:	mov	x4, #0x3                   	// #3
   2218c:	mov	w1, w0
   22190:	cmp	x18, w0, uxtw
   22194:	b.cs	221cc <ZSTD_compress@@Base+0x13980>  // b.hs, b.nlast
   22198:	ubfiz	x2, x10, #3, #32
   2219c:	ldr	w6, [sp, #136]
   221a0:	add	x5, x21, x2
   221a4:	add	w10, w10, #0x1
   221a8:	sub	w28, w28, w6
   221ac:	str	w28, [x21, x2]
   221b0:	add	x2, x23, x1
   221b4:	cmp	x2, x22
   221b8:	ldr	w2, [sp, #192]
   221bc:	str	w0, [x5, #4]
   221c0:	ccmp	w0, w2, #0x2, ne  // ne = any
   221c4:	b.hi	222f8 <ZSTD_compress@@Base+0x13aac>  // b.pmore
   221c8:	mov	x18, x1
   221cc:	add	x7, x7, #0x1
   221d0:	cmp	w9, w7
   221d4:	b.hi	22130 <ZSTD_compress@@Base+0x138e4>  // b.pmore
   221d8:	cmp	x18, #0x2
   221dc:	b.ne	222b8 <ZSTD_compress@@Base+0x13a6c>  // b.any
   221e0:	add	x1, sp, #0x11c
   221e4:	mov	x2, x23
   221e8:	mov	x0, x19
   221ec:	bl	1ff88 <ZSTD_compress@@Base+0x1173c>
   221f0:	ldr	w1, [sp, #256]
   221f4:	sub	w7, w11, w0
   221f8:	cmp	w1, w0
   221fc:	mov	w1, #0x3ffff               	// #262143
   22200:	ccmp	w7, w1, #0x2, ls  // ls = plast
   22204:	b.hi	222b8 <ZSTD_compress@@Base+0x13a6c>  // b.pmore
   22208:	ldr	x1, [sp, #184]
   2220c:	mov	x2, x22
   22210:	add	x1, x1, w0, uxtw
   22214:	mov	x0, x23
   22218:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2221c:	cmp	x0, #0x2
   22220:	b.ls	222b8 <ZSTD_compress@@Base+0x13a6c>  // b.plast
   22224:	ldr	w2, [sp, #192]
   22228:	add	w7, w7, #0x2
   2222c:	add	x1, x23, x0
   22230:	stp	w7, w0, [x21]
   22234:	cmp	x1, x22
   22238:	ccmp	x0, x2, #0x2, ne  // ne = any
   2223c:	b.ls	222b0 <ZSTD_compress@@Base+0x13a64>  // b.plast
   22240:	add	w11, w11, #0x1
   22244:	mov	w10, #0x1                   	// #1
   22248:	str	w11, [x19, #36]
   2224c:	sub	w0, w10, #0x1
   22250:	ldr	w2, [sp, #224]
   22254:	add	x0, x21, x0, lsl #3
   22258:	ldr	w1, [x0, #4]
   2225c:	cmp	w2, w1
   22260:	b.cc	22274 <ZSTD_compress@@Base+0x13a28>  // b.lo, b.ul, b.last
   22264:	ldr	w2, [sp, #176]
   22268:	add	w2, w2, w1
   2226c:	cmp	w2, #0xfff
   22270:	b.ls	227b8 <ZSTD_compress@@Base+0x13f6c>  // b.plast
   22274:	ldr	w2, [x0]
   22278:	ldr	x0, [sp, #128]
   2227c:	ldr	w0, [x0, #8]
   22280:	cbnz	w0, 227b0 <ZSTD_compress@@Base+0x13f64>
   22284:	ldr	x0, [sp, #128]
   22288:	ldr	w0, [x0, #12]
   2228c:	ldr	w3, [sp, #176]
   22290:	sub	w0, w3, w0
   22294:	cmp	w0, #0x1, lsl #12
   22298:	b.ls	219e0 <ZSTD_compress@@Base+0x13194>  // b.plast
   2229c:	b	21244 <ZSTD_compress@@Base+0x129f8>
   222a0:	ldr	w0, [x3, x7, lsl #2]
   222a4:	b	22148 <ZSTD_compress@@Base+0x138fc>
   222a8:	mov	w0, #0x0                   	// #0
   222ac:	b	2218c <ZSTD_compress@@Base+0x13940>
   222b0:	mov	x18, x0
   222b4:	mov	w10, #0x1                   	// #1
   222b8:	ldr	x0, [sp, #168]
   222bc:	mov	x9, #0x0                   	// #0
   222c0:	ldr	x1, [sp, #240]
   222c4:	mov	x7, #0x0                   	// #0
   222c8:	str	w11, [x0, x1]
   222cc:	ldr	w0, [sp, #208]
   222d0:	add	w28, w0, #0x2
   222d4:	cbz	w15, 222e4 <ZSTD_compress@@Base+0x13a98>
   222d8:	ldr	w0, [sp, #256]
   222dc:	cmp	w0, w12
   222e0:	b.ls	22308 <ZSTD_compress@@Base+0x13abc>  // b.plast
   222e4:	ldr	w0, [sp, #212]
   222e8:	str	wzr, [x13]
   222ec:	str	wzr, [x24]
   222f0:	sub	w0, w0, #0x8
   222f4:	str	w0, [x19, #36]
   222f8:	cbnz	w10, 2224c <ZSTD_compress@@Base+0x13a00>
   222fc:	ldr	w0, [sp, #176]
   22300:	add	w0, w0, #0x1
   22304:	b	21894 <ZSTD_compress@@Base+0x13048>
   22308:	and	w8, w14, w12
   2230c:	cmp	x7, x9
   22310:	ldr	x0, [sp, #184]
   22314:	ubfiz	x8, x8, #3, #31
   22318:	add	x11, x25, x8
   2231c:	csel	x26, x7, x9, ls  // ls = plast
   22320:	mov	x2, x22
   22324:	add	x27, x0, w12, uxtw
   22328:	add	x0, x23, x26
   2232c:	add	x1, x27, x26
   22330:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   22334:	add	x26, x26, x0
   22338:	cmp	x26, x18
   2233c:	b.ls	22388 <ZSTD_compress@@Base+0x13b3c>  // b.plast
   22340:	ldr	w0, [sp, #212]
   22344:	mov	w2, w26
   22348:	sub	w0, w0, w12
   2234c:	cmp	x26, x0
   22350:	b.ls	2235c <ZSTD_compress@@Base+0x13b10>  // b.plast
   22354:	add	w0, w12, w26
   22358:	str	w0, [sp, #212]
   2235c:	ubfiz	x0, x10, #3, #32
   22360:	sub	w3, w28, w12
   22364:	add	x1, x21, x0
   22368:	cmp	x26, #0x1, lsl #12
   2236c:	add	w10, w10, #0x1
   22370:	str	w3, [x21, x0]
   22374:	add	x0, x23, x26
   22378:	str	w2, [x1, #4]
   2237c:	ccmp	x0, x22, #0x4, ls  // ls = plast
   22380:	b.eq	222e4 <ZSTD_compress@@Base+0x13a98>  // b.none
   22384:	mov	x18, x26
   22388:	ldrb	w1, [x27, x26]
   2238c:	ldrb	w0, [x23, x26]
   22390:	cmp	w1, w0
   22394:	b.cs	223bc <ZSTD_compress@@Base+0x13b70>  // b.hs, b.nlast
   22398:	ldr	w0, [sp, #232]
   2239c:	str	w12, [x24]
   223a0:	cmp	w12, w0
   223a4:	b.ls	223e0 <ZSTD_compress@@Base+0x13b94>  // b.plast
   223a8:	ldr	w12, [x11, #4]
   223ac:	add	x24, x11, #0x4
   223b0:	sub	w15, w15, #0x1
   223b4:	mov	x7, x26
   223b8:	b	222d4 <ZSTD_compress@@Base+0x13a88>
   223bc:	ldr	w0, [sp, #232]
   223c0:	str	w12, [x13]
   223c4:	cmp	w12, w0
   223c8:	b.ls	223e8 <ZSTD_compress@@Base+0x13b9c>  // b.plast
   223cc:	mov	x9, x26
   223d0:	ldr	w12, [x25, x8]
   223d4:	mov	x13, x11
   223d8:	mov	x26, x7
   223dc:	b	223b0 <ZSTD_compress@@Base+0x13b64>
   223e0:	add	x24, sp, #0x120
   223e4:	b	222e4 <ZSTD_compress@@Base+0x13a98>
   223e8:	add	x13, sp, #0x120
   223ec:	b	222e4 <ZSTD_compress@@Base+0x13a98>
   223f0:	ldr	w0, [x5, x14, lsl #2]
   223f4:	b	21d0c <ZSTD_compress@@Base+0x134c0>
   223f8:	mov	w0, #0x0                   	// #0
   223fc:	b	21d5c <ZSTD_compress@@Base+0x13510>
   22400:	and	w12, w9, w7
   22404:	cmp	x11, x14
   22408:	ldr	x0, [sp, #184]
   2240c:	ubfiz	x12, x12, #3, #31
   22410:	csel	x27, x11, x14, ls  // ls = plast
   22414:	add	x26, x24, x12
   22418:	mov	x2, x22
   2241c:	str	w3, [sp, #168]
   22420:	add	x28, x0, w7, uxtw
   22424:	add	x0, x23, x27
   22428:	add	x1, x28, x27
   2242c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   22430:	add	x27, x27, x0
   22434:	ldr	w3, [sp, #168]
   22438:	cmp	x27, x25
   2243c:	b.ls	22480 <ZSTD_compress@@Base+0x13c34>  // b.plast
   22440:	sub	w0, w15, w7
   22444:	mov	w2, w27
   22448:	cmp	x27, x0
   2244c:	b.ls	22454 <ZSTD_compress@@Base+0x13c08>  // b.plast
   22450:	add	w15, w7, w27
   22454:	ubfiz	x0, x10, #3, #32
   22458:	sub	w4, w3, w7
   2245c:	add	x1, x21, x0
   22460:	cmp	x27, #0x1, lsl #12
   22464:	add	w10, w10, #0x1
   22468:	str	w4, [x21, x0]
   2246c:	add	x0, x23, x27
   22470:	str	w2, [x1, #4]
   22474:	ccmp	x0, x22, #0x4, ls  // ls = plast
   22478:	b.eq	21dd0 <ZSTD_compress@@Base+0x13584>  // b.none
   2247c:	mov	x25, x27
   22480:	ldrb	w1, [x28, x27]
   22484:	ldrb	w0, [x23, x27]
   22488:	cmp	w1, w0
   2248c:	b.cs	224b4 <ZSTD_compress@@Base+0x13c68>  // b.hs, b.nlast
   22490:	ldr	w0, [sp, #212]
   22494:	str	w7, [x18]
   22498:	cmp	w7, w0
   2249c:	b.ls	224d8 <ZSTD_compress@@Base+0x13c8c>  // b.plast
   224a0:	ldr	w7, [x26, #4]
   224a4:	add	x18, x26, #0x4
   224a8:	sub	w13, w13, #0x1
   224ac:	mov	x11, x27
   224b0:	b	21dc0 <ZSTD_compress@@Base+0x13574>
   224b4:	ldr	w0, [sp, #212]
   224b8:	str	w7, [x8]
   224bc:	cmp	w7, w0
   224c0:	b.ls	224e0 <ZSTD_compress@@Base+0x13c94>  // b.plast
   224c4:	mov	x14, x27
   224c8:	ldr	w7, [x24, x12]
   224cc:	mov	x8, x26
   224d0:	mov	x27, x11
   224d4:	b	224a8 <ZSTD_compress@@Base+0x13c5c>
   224d8:	add	x18, sp, #0x120
   224dc:	b	21dd0 <ZSTD_compress@@Base+0x13584>
   224e0:	add	x8, sp, #0x120
   224e4:	b	21dd0 <ZSTD_compress@@Base+0x13584>
   224e8:	mov	w2, w28
   224ec:	mov	x0, x23
   224f0:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   224f4:	lsl	x25, x0, #2
   224f8:	ldr	w9, [x26, #4]
   224fc:	mov	w12, #0x1                   	// #1
   22500:	ldr	x0, [sp, #168]
   22504:	sub	w9, w9, #0x1
   22508:	ldr	w2, [x19, #184]
   2250c:	mov	w1, w11
   22510:	lsl	w9, w12, w9
   22514:	sub	w9, w9, #0x1
   22518:	ldr	w7, [x0, x25]
   2251c:	cmp	w9, w11
   22520:	ldr	x18, [x19, #64]
   22524:	sub	w0, w11, w9
   22528:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   2252c:	str	w0, [sp, #212]
   22530:	mov	x0, x19
   22534:	ldr	w27, [x19, #24]
   22538:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   2253c:	cmp	w0, #0x0
   22540:	csel	w0, w0, w12, ne  // ne = any
   22544:	str	w0, [sp, #256]
   22548:	ldr	w0, [x19, #196]
   2254c:	and	w8, w9, w11
   22550:	ldrb	w13, [sp, #136]
   22554:	mov	w26, #0x4                   	// #4
   22558:	ubfiz	x8, x8, #3, #31
   2255c:	mov	x4, #0x4                   	// #4
   22560:	lsl	w12, w12, w0
   22564:	ldr	w0, [sp, #124]
   22568:	add	x15, x18, x8
   2256c:	add	x8, x8, #0x4
   22570:	sub	w24, w0, #0x1
   22574:	ldr	w0, [sp, #136]
   22578:	ldr	x3, [sp, #200]
   2257c:	cmp	w0, #0x0
   22580:	add	x8, x18, x8
   22584:	mov	w0, #0x3                   	// #3
   22588:	add	w14, w11, #0x9
   2258c:	add	x5, x23, x4
   22590:	csel	w26, w26, w0, ne  // ne = any
   22594:	sub	w27, w11, w27
   22598:	mov	w10, #0x0                   	// #0
   2259c:	mov	w28, w13
   225a0:	cmp	w13, #0x3
   225a4:	b.ne	22684 <ZSTD_compress@@Base+0x13e38>  // b.any
   225a8:	ldr	x0, [sp, #128]
   225ac:	ldr	w0, [x0, #16]
   225b0:	sub	w0, w0, #0x1
   225b4:	sub	w1, w0, #0x1
   225b8:	cmp	w1, w27
   225bc:	b.cs	2268c <ZSTD_compress@@Base+0x13e40>  // b.hs, b.nlast
   225c0:	mov	w1, w0
   225c4:	sub	x0, x23, w0, uxtw
   225c8:	ldr	w2, [x0]
   225cc:	ldr	w0, [x23]
   225d0:	cmp	w2, w0
   225d4:	b.ne	2268c <ZSTD_compress@@Base+0x13e40>  // b.any
   225d8:	sub	x1, x4, x1
   225dc:	mov	x0, x5
   225e0:	mov	x2, x22
   225e4:	add	x1, x23, x1
   225e8:	stp	x5, x3, [sp, #232]
   225ec:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   225f0:	add	w0, w0, #0x4
   225f4:	ldp	x5, x3, [sp, #232]
   225f8:	mov	x4, #0x4                   	// #4
   225fc:	mov	w1, w0
   22600:	cmp	x24, w0, uxtw
   22604:	b.cs	2263c <ZSTD_compress@@Base+0x13df0>  // b.hs, b.nlast
   22608:	ubfiz	x2, x10, #3, #32
   2260c:	ldr	w16, [sp, #136]
   22610:	add	x6, x21, x2
   22614:	add	w10, w10, #0x1
   22618:	sub	w28, w28, w16
   2261c:	str	w28, [x21, x2]
   22620:	add	x2, x23, x1
   22624:	cmp	x2, x22
   22628:	ldr	w2, [sp, #192]
   2262c:	str	w0, [x6, #4]
   22630:	ccmp	w0, w2, #0x2, ne  // ne = any
   22634:	b.hi	222f8 <ZSTD_compress@@Base+0x13aac>  // b.pmore
   22638:	mov	x24, x1
   2263c:	add	x13, x13, #0x1
   22640:	cmp	w26, w13
   22644:	b.hi	2259c <ZSTD_compress@@Base+0x13d50>  // b.pmore
   22648:	ldr	x0, [sp, #168]
   2264c:	str	w11, [x0, x25]
   22650:	mov	x25, #0x0                   	// #0
   22654:	ldr	w0, [sp, #208]
   22658:	mov	x11, #0x0                   	// #0
   2265c:	add	w3, w0, #0x2
   22660:	cbz	w12, 22670 <ZSTD_compress@@Base+0x13e24>
   22664:	ldr	w0, [sp, #256]
   22668:	cmp	w0, w7
   2266c:	b.ls	22694 <ZSTD_compress@@Base+0x13e48>  // b.plast
   22670:	str	wzr, [x8]
   22674:	sub	w14, w14, #0x8
   22678:	str	wzr, [x15]
   2267c:	str	w14, [x19, #36]
   22680:	b	222f8 <ZSTD_compress@@Base+0x13aac>
   22684:	ldr	w0, [x3, x13, lsl #2]
   22688:	b	225b4 <ZSTD_compress@@Base+0x13d68>
   2268c:	mov	w0, #0x0                   	// #0
   22690:	b	225fc <ZSTD_compress@@Base+0x13db0>
   22694:	and	w13, w9, w7
   22698:	cmp	x11, x25
   2269c:	ldr	x0, [sp, #184]
   226a0:	ubfiz	x13, x13, #3, #31
   226a4:	csel	x27, x11, x25, ls  // ls = plast
   226a8:	add	x26, x18, x13
   226ac:	mov	x2, x22
   226b0:	str	w3, [sp, #168]
   226b4:	add	x28, x0, w7, uxtw
   226b8:	add	x0, x23, x27
   226bc:	add	x1, x28, x27
   226c0:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   226c4:	add	x27, x27, x0
   226c8:	ldr	w3, [sp, #168]
   226cc:	cmp	x27, x24
   226d0:	b.ls	22714 <ZSTD_compress@@Base+0x13ec8>  // b.plast
   226d4:	sub	w0, w14, w7
   226d8:	mov	w2, w27
   226dc:	cmp	x27, x0
   226e0:	b.ls	226e8 <ZSTD_compress@@Base+0x13e9c>  // b.plast
   226e4:	add	w14, w7, w27
   226e8:	ubfiz	x0, x10, #3, #32
   226ec:	sub	w4, w3, w7
   226f0:	add	x1, x21, x0
   226f4:	cmp	x27, #0x1, lsl #12
   226f8:	add	w10, w10, #0x1
   226fc:	str	w4, [x21, x0]
   22700:	add	x0, x23, x27
   22704:	str	w2, [x1, #4]
   22708:	ccmp	x0, x22, #0x4, ls  // ls = plast
   2270c:	b.eq	22670 <ZSTD_compress@@Base+0x13e24>  // b.none
   22710:	mov	x24, x27
   22714:	ldrb	w1, [x28, x27]
   22718:	ldrb	w0, [x23, x27]
   2271c:	cmp	w1, w0
   22720:	b.cs	22748 <ZSTD_compress@@Base+0x13efc>  // b.hs, b.nlast
   22724:	ldr	w0, [sp, #212]
   22728:	str	w7, [x15]
   2272c:	cmp	w7, w0
   22730:	b.ls	227a0 <ZSTD_compress@@Base+0x13f54>  // b.plast
   22734:	ldr	w7, [x26, #4]
   22738:	add	x15, x26, #0x4
   2273c:	sub	w12, w12, #0x1
   22740:	mov	x11, x27
   22744:	b	22660 <ZSTD_compress@@Base+0x13e14>
   22748:	ldr	w0, [sp, #212]
   2274c:	str	w7, [x8]
   22750:	cmp	w7, w0
   22754:	b.ls	227a8 <ZSTD_compress@@Base+0x13f5c>  // b.plast
   22758:	mov	x25, x27
   2275c:	ldr	w7, [x18, x13]
   22760:	mov	x8, x26
   22764:	mov	x27, x11
   22768:	b	2273c <ZSTD_compress@@Base+0x13ef0>
   2276c:	ldr	w0, [x3, x13, lsl #2]
   22770:	b	21ef4 <ZSTD_compress@@Base+0x136a8>
   22774:	mov	w0, #0x0                   	// #0
   22778:	b	21f3c <ZSTD_compress@@Base+0x136f0>
   2277c:	ldr	w0, [sp, #212]
   22780:	str	w7, [x8]
   22784:	cmp	w7, w0
   22788:	b.ls	227a8 <ZSTD_compress@@Base+0x13f5c>  // b.plast
   2278c:	mov	x26, x28
   22790:	ldr	w7, [x18, x25]
   22794:	mov	x8, x27
   22798:	mov	x28, x13
   2279c:	b	22058 <ZSTD_compress@@Base+0x1380c>
   227a0:	add	x15, sp, #0x120
   227a4:	b	22670 <ZSTD_compress@@Base+0x13e24>
   227a8:	add	x8, sp, #0x120
   227ac:	b	22670 <ZSTD_compress@@Base+0x13e24>
   227b0:	mov	w0, #0x0                   	// #0
   227b4:	b	2228c <ZSTD_compress@@Base+0x13a40>
   227b8:	mov	x7, x21
   227bc:	mov	w5, #0x0                   	// #0
   227c0:	ldr	w9, [x7]
   227c4:	ldr	w2, [sp, #136]
   227c8:	ldr	x0, [sp, #200]
   227cc:	mov	w1, w9
   227d0:	bl	205a8 <ZSTD_compress@@Base+0x11d5c>
   227d4:	str	w0, [sp, #288]
   227d8:	lsr	x0, x0, #32
   227dc:	str	w0, [sp, #292]
   227e0:	str	w1, [sp, #296]
   227e4:	ldr	w4, [x7, #4]
   227e8:	cbz	w5, 22858 <ZSTD_compress@@Base+0x1400c>
   227ec:	sub	w0, w5, #0x1
   227f0:	add	x0, x21, x0, lsl #3
   227f4:	ldr	w8, [x0, #4]
   227f8:	add	w8, w8, #0x1
   227fc:	add	w2, w9, #0x1
   22800:	ldr	w0, [sp, #176]
   22804:	clz	w2, w2
   22808:	ldr	w1, [sp, #260]
   2280c:	eor	w2, w2, #0x1f
   22810:	add	w6, w0, w4
   22814:	sub	w11, w2, #0x13
   22818:	ldr	w0, [sp, #228]
   2281c:	add	w12, w2, #0x10
   22820:	sbfiz	x14, x2, #2, #32
   22824:	lsl	w15, w2, #8
   22828:	lsl	w11, w11, #9
   2282c:	lsl	w12, w12, #8
   22830:	add	w18, w0, w1
   22834:	mov	w13, #0x1c                  	// #28
   22838:	mov	w23, #0x40000000            	// #1073741824
   2283c:	cmp	w4, w8
   22840:	b.cs	22860 <ZSTD_compress@@Base+0x14014>  // b.hs, b.nlast
   22844:	add	w5, w5, #0x1
   22848:	add	x7, x7, #0x8
   2284c:	cmp	w10, w5
   22850:	b.ne	227c0 <ZSTD_compress@@Base+0x13f74>  // b.any
   22854:	b	222fc <ZSTD_compress@@Base+0x13ab0>
   22858:	ldr	w8, [sp, #124]
   2285c:	b	227fc <ZSTD_compress@@Base+0x13fb0>
   22860:	ldr	w0, [x19, #152]
   22864:	add	x24, x19, #0x48
   22868:	sub	w1, w4, #0x3
   2286c:	cmp	w0, #0x1
   22870:	b.ne	228dc <ZSTD_compress@@Base+0x14090>  // b.any
   22874:	mov	w0, w1
   22878:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   2287c:	add	w0, w12, w0
   22880:	ldr	x1, [sp, #96]
   22884:	umull	x16, w6, w13
   22888:	ldr	w3, [sp, #152]
   2288c:	add	w0, w18, w0
   22890:	add	x1, x1, x16
   22894:	cmp	w3, w6
   22898:	b.cc	22938 <ZSTD_compress@@Base+0x140ec>  // b.lo, b.ul, b.last
   2289c:	ldr	x3, [sp, #96]
   228a0:	ldr	w3, [x3, x16]
   228a4:	cmp	w0, w3
   228a8:	b.ge	22844 <ZSTD_compress@@Base+0x13ff8>  // b.tcont
   228ac:	ldr	w3, [sp, #180]
   228b0:	sub	w6, w6, #0x1
   228b4:	str	w3, [x1, #12]
   228b8:	ldr	x3, [sp, #96]
   228bc:	stp	w9, w4, [x1, #4]
   228c0:	sub	w4, w4, #0x1
   228c4:	str	w0, [x3, x16]
   228c8:	ldr	x0, [sp, #288]
   228cc:	str	x0, [x1, #16]
   228d0:	ldr	w0, [sp, #296]
   228d4:	str	w0, [x1, #24]
   228d8:	b	2283c <ZSTD_compress@@Base+0x13ff0>
   228dc:	ldr	x0, [x24, #24]
   228e0:	ldr	w0, [x0, x14]
   228e4:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   228e8:	cmp	w2, #0x13
   228ec:	ldr	w3, [x24, #76]
   228f0:	add	w3, w15, w3
   228f4:	sub	w3, w3, w0
   228f8:	b.le	22900 <ZSTD_compress@@Base+0x140b4>
   228fc:	add	w3, w3, w11
   22900:	mov	w0, w1
   22904:	bl	2043c <ZSTD_compress@@Base+0x11bf0>
   22908:	ldr	x16, [x19, #88]
   2290c:	mov	w24, w0
   22910:	ldr	w0, [x16, w0, uxtw #2]
   22914:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   22918:	sub	w0, w3, w0
   2291c:	ldr	w1, [x19, #144]
   22920:	add	w1, w1, #0x33
   22924:	add	w1, w1, w0
   22928:	ldr	x0, [sp, #248]
   2292c:	ldr	w0, [x0, x24, lsl #2]
   22930:	add	w0, w1, w0, lsl #8
   22934:	b	22880 <ZSTD_compress@@Base+0x14034>
   22938:	ldr	w3, [sp, #152]
   2293c:	ldr	x17, [sp, #96]
   22940:	add	w3, w3, #0x1
   22944:	umaddl	x3, w3, w13, x17
   22948:	ldr	w17, [sp, #152]
   2294c:	str	w23, [x3], #28
   22950:	add	w17, w17, #0x1
   22954:	str	w17, [sp, #152]
   22958:	cmp	w17, w6
   2295c:	b.ne	22948 <ZSTD_compress@@Base+0x140fc>  // b.any
   22960:	b	228ac <ZSTD_compress@@Base+0x14060>
   22964:	sub	w0, w0, w5
   22968:	b	21a1c <ZSTD_compress@@Base+0x131d0>
   2296c:	ldr	x0, [sp, #96]
   22970:	ldr	x1, [sp, #112]
   22974:	umaddl	x0, w10, w14, x0
   22978:	ldp	w23, w9, [x0, #8]
   2297c:	mov	w24, w9
   22980:	add	x20, x1, w9, uxtw
   22984:	cbz	w23, 22adc <ZSTD_compress@@Base+0x14290>
   22988:	ldr	w11, [x0, #4]
   2298c:	cmp	w11, #0x2
   22990:	b.ls	22ae4 <ZSTD_compress@@Base+0x14298>  // b.plast
   22994:	ldr	x0, [sp, #104]
   22998:	ldr	x1, [sp, #104]
   2299c:	ldr	w0, [x0, #4]
   229a0:	str	w0, [x1, #8]
   229a4:	ldr	w0, [x1]
   229a8:	str	w0, [x1, #4]
   229ac:	sub	w0, w11, #0x2
   229b0:	str	w0, [x1]
   229b4:	ldr	x2, [sp, #112]
   229b8:	mov	w4, w23
   229bc:	ldr	x0, [sp, #160]
   229c0:	mov	w3, w11
   229c4:	mov	w1, w9
   229c8:	bl	209b4 <ZSTD_compress@@Base+0x12168>
   229cc:	cmp	x20, x12
   229d0:	sub	w5, w23, #0x3
   229d4:	b.hi	22b34 <ZSTD_compress@@Base+0x142e8>  // b.pmore
   229d8:	ldr	x0, [sp, #144]
   229dc:	cmp	x24, #0x10
   229e0:	ldr	x2, [x0, #24]
   229e4:	ldr	x0, [sp, #112]
   229e8:	ldp	x0, x1, [x0]
   229ec:	stp	x0, x1, [x2]
   229f0:	b.ls	22a4c <ZSTD_compress@@Base+0x14200>  // b.plast
   229f4:	ldr	x0, [sp, #144]
   229f8:	ldr	x3, [x0, #24]
   229fc:	ldr	x0, [sp, #112]
   22a00:	add	x2, x3, x24
   22a04:	add	x3, x3, #0x30
   22a08:	ldp	x0, x1, [x0, #16]
   22a0c:	stp	x0, x1, [x3, #-32]
   22a10:	ldr	x0, [sp, #112]
   22a14:	ldp	x0, x1, [x0, #32]
   22a18:	stp	x0, x1, [x3, #-16]
   22a1c:	cmp	x2, x3
   22a20:	b.ls	22a4c <ZSTD_compress@@Base+0x14200>  // b.plast
   22a24:	ldr	x0, [sp, #112]
   22a28:	add	x4, x0, #0x30
   22a2c:	ldp	x0, x1, [x4]
   22a30:	stp	x0, x1, [x3]
   22a34:	add	x3, x3, #0x20
   22a38:	ldp	x0, x1, [x4, #16]
   22a3c:	stp	x0, x1, [x3, #-16]
   22a40:	add	x4, x4, #0x20
   22a44:	cmp	x3, x2
   22a48:	b.cc	22a2c <ZSTD_compress@@Base+0x141e0>  // b.lo, b.ul, b.last
   22a4c:	ldr	x0, [sp, #144]
   22a50:	cmp	x24, x13
   22a54:	ldr	x1, [sp, #144]
   22a58:	ldr	x0, [x0, #24]
   22a5c:	add	x0, x0, x24
   22a60:	str	x0, [x1, #24]
   22a64:	ldr	x0, [x1, #8]
   22a68:	b.ls	22a88 <ZSTD_compress@@Base+0x1423c>  // b.plast
   22a6c:	ldr	x2, [sp, #144]
   22a70:	mov	w1, #0x1                   	// #1
   22a74:	str	w1, [x2, #72]
   22a78:	ldr	x1, [x2]
   22a7c:	sub	x1, x0, x1
   22a80:	asr	x1, x1, #3
   22a84:	str	w1, [x2, #76]
   22a88:	add	w11, w11, #0x1
   22a8c:	str	w11, [x0]
   22a90:	strh	w9, [x0, #4]
   22a94:	cmp	w5, w15
   22a98:	b.ls	22ab8 <ZSTD_compress@@Base+0x1426c>  // b.plast
   22a9c:	ldr	x1, [sp, #144]
   22aa0:	ldr	x2, [sp, #144]
   22aa4:	str	w18, [x1, #72]
   22aa8:	ldr	x1, [x1]
   22aac:	sub	x1, x0, x1
   22ab0:	asr	x1, x1, #3
   22ab4:	str	w1, [x2, #76]
   22ab8:	ldr	x1, [sp, #144]
   22abc:	add	x0, x0, #0x8
   22ac0:	sturh	w5, [x0, #-2]
   22ac4:	add	w9, w9, w23
   22ac8:	str	x0, [x1, #8]
   22acc:	ldr	x0, [sp, #112]
   22ad0:	add	x0, x0, x9
   22ad4:	str	x0, [sp, #112]
   22ad8:	mov	x20, x0
   22adc:	add	w10, w10, #0x1
   22ae0:	b	21a70 <ZSTD_compress@@Base+0x13224>
   22ae4:	cmp	w9, #0x0
   22ae8:	cinc	w0, w11, eq  // eq = none
   22aec:	cbz	w0, 229b4 <ZSTD_compress@@Base+0x14168>
   22af0:	ldr	x1, [sp, #104]
   22af4:	cmp	w0, #0x3
   22af8:	ldr	w2, [x1]
   22afc:	b.ne	22b18 <ZSTD_compress@@Base+0x142cc>  // b.any
   22b00:	sub	w1, w2, #0x1
   22b04:	ldr	x0, [sp, #104]
   22b08:	ldr	x3, [sp, #104]
   22b0c:	ldr	w0, [x0, #4]
   22b10:	str	w0, [x3, #8]
   22b14:	b	22b28 <ZSTD_compress@@Base+0x142dc>
   22b18:	ldr	x1, [sp, #104]
   22b1c:	cmp	w0, #0x1
   22b20:	ldr	w1, [x1, w0, uxtw #2]
   22b24:	b.ne	22b04 <ZSTD_compress@@Base+0x142b8>  // b.any
   22b28:	ldr	x0, [sp, #104]
   22b2c:	stp	w1, w2, [x0]
   22b30:	b	229b4 <ZSTD_compress@@Base+0x14168>
   22b34:	ldr	x0, [sp, #144]
   22b38:	mov	x3, x12
   22b3c:	ldr	x1, [sp, #112]
   22b40:	mov	x2, x20
   22b44:	ldr	x0, [x0, #24]
   22b48:	bl	1fe1c <ZSTD_compress@@Base+0x115d0>
   22b4c:	b	22a4c <ZSTD_compress@@Base+0x14200>
   22b50:	stp	x29, x30, [sp, #-336]!
   22b54:	mov	x29, sp
   22b58:	stp	x19, x20, [sp, #16]
   22b5c:	mov	x19, x0
   22b60:	add	x0, x0, #0x48
   22b64:	stp	x21, x22, [sp, #32]
   22b68:	add	x22, x3, x4
   22b6c:	str	x0, [sp, #168]
   22b70:	sub	x0, x22, #0x8
   22b74:	ldr	x20, [x19, #8]
   22b78:	str	x0, [sp, #216]
   22b7c:	ldr	w0, [x19, #24]
   22b80:	str	x1, [sp, #152]
   22b84:	ldr	w1, [x19, #204]
   22b88:	add	x20, x20, x0
   22b8c:	ldr	w0, [x19, #200]
   22b90:	cmp	w1, #0xfff
   22b94:	str	w0, [sp, #132]
   22b98:	stp	x2, x3, [sp, #112]
   22b9c:	mov	w3, #0xfff                 	// #4095
   22ba0:	csel	w1, w1, w3, ls  // ls = plast
   22ba4:	mov	w0, w0
   22ba8:	str	w1, [sp, #224]
   22bac:	ldr	w1, [sp, #132]
   22bb0:	cmp	w0, #0x3
   22bb4:	mov	w0, #0x4                   	// #4
   22bb8:	mov	x2, x4
   22bbc:	csel	w0, w1, w0, eq  // eq = none
   22bc0:	str	w0, [sp, #132]
   22bc4:	ldr	x1, [sp, #120]
   22bc8:	mov	w3, #0x2                   	// #2
   22bcc:	ldr	w0, [x19, #36]
   22bd0:	str	w0, [sp, #284]
   22bd4:	ldr	x0, [x19, #112]
   22bd8:	stp	x23, x24, [sp, #48]
   22bdc:	stp	x25, x26, [sp, #64]
   22be0:	stp	x27, x28, [sp, #80]
   22be4:	str	x0, [sp, #104]
   22be8:	add	x0, x19, #0x48
   22bec:	ldr	x21, [x19, #104]
   22bf0:	bl	20648 <ZSTD_compress@@Base+0x11dfc>
   22bf4:	ldr	x0, [sp, #120]
   22bf8:	cmp	x0, x20
   22bfc:	cinc	x20, x0, eq  // eq = none
   22c00:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   22c04:	add	x0, x0, #0x4c8
   22c08:	add	x0, x0, #0x150
   22c0c:	str	x0, [sp, #248]
   22c10:	ldr	x0, [sp, #216]
   22c14:	cmp	x0, x20
   22c18:	b.hi	22c40 <ZSTD_compress@@Base+0x143f4>  // b.pmore
   22c1c:	ldr	x0, [sp, #120]
   22c20:	ldp	x19, x20, [sp, #16]
   22c24:	sub	x0, x22, x0
   22c28:	ldp	x21, x22, [sp, #32]
   22c2c:	ldp	x23, x24, [sp, #48]
   22c30:	ldp	x25, x26, [sp, #64]
   22c34:	ldp	x27, x28, [sp, #80]
   22c38:	ldp	x29, x30, [sp], #336
   22c3c:	ret
   22c40:	ldr	x25, [x19, #8]
   22c44:	ldr	w24, [x19, #36]
   22c48:	add	x0, x25, w24, uxtw
   22c4c:	cmp	x20, x0
   22c50:	b.cs	22c5c <ZSTD_compress@@Base+0x14410>  // b.hs, b.nlast
   22c54:	add	x20, x20, #0x1
   22c58:	b	22c10 <ZSTD_compress@@Base+0x143c4>
   22c5c:	sub	x26, x20, x25
   22c60:	ldr	w28, [x19, #200]
   22c64:	add	x23, x19, #0xb8
   22c68:	mov	w27, w26
   22c6c:	cmp	w27, w24
   22c70:	b.hi	22e6c <ZSTD_compress@@Base+0x14620>  // b.pmore
   22c74:	ldr	x0, [sp, #120]
   22c78:	mov	w1, #0xfff                 	// #4095
   22c7c:	str	w26, [x19, #36]
   22c80:	sub	x0, x20, x0
   22c84:	str	x0, [sp, #176]
   22c88:	ldr	w5, [x19, #24]
   22c8c:	ldr	w0, [sp, #176]
   22c90:	str	w0, [sp, #192]
   22c94:	cmp	w0, #0x0
   22c98:	cset	w0, eq  // eq = none
   22c9c:	str	w0, [sp, #136]
   22ca0:	ldr	w0, [x23, #20]
   22ca4:	ldr	x14, [x19, #48]
   22ca8:	cmp	w0, #0xfff
   22cac:	csel	w0, w0, w1, ls  // ls = plast
   22cb0:	str	w0, [sp, #160]
   22cb4:	ldr	x0, [x19, #8]
   22cb8:	str	x0, [sp, #144]
   22cbc:	ldr	w1, [x23, #8]
   22cc0:	cmp	w28, #0x5
   22cc4:	sub	x11, x20, x0
   22cc8:	str	w11, [sp, #164]
   22ccc:	ldr	x12, [x19, #64]
   22cd0:	b.eq	23480 <ZSTD_compress@@Base+0x14c34>  // b.none
   22cd4:	b.hi	22e8c <ZSTD_compress@@Base+0x14640>  // b.pmore
   22cd8:	cmp	w28, #0x3
   22cdc:	b.eq	23018 <ZSTD_compress@@Base+0x147cc>  // b.none
   22ce0:	mov	x7, x20
   22ce4:	mov	w15, #0x79b1                	// #31153
   22ce8:	movk	w15, #0x9e37, lsl #16
   22cec:	neg	w1, w1
   22cf0:	ldr	w13, [x23, #4]
   22cf4:	mov	w18, #0x1                   	// #1
   22cf8:	ldr	w26, [x7], #4
   22cfc:	mov	w28, #0x4                   	// #4
   22d00:	sub	w13, w13, #0x1
   22d04:	ldr	w2, [x19, #184]
   22d08:	lsl	w13, w18, w13
   22d0c:	sub	w13, w13, #0x1
   22d10:	mul	w15, w26, w15
   22d14:	cmp	w13, w11
   22d18:	sub	w0, w11, w13
   22d1c:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   22d20:	str	w0, [sp, #184]
   22d24:	lsr	w15, w15, w1
   22d28:	mov	x0, x19
   22d2c:	ubfiz	x15, x15, #2, #32
   22d30:	mov	w1, w11
   22d34:	ldr	w8, [x14, x15]
   22d38:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   22d3c:	cmp	w0, #0x0
   22d40:	csel	w0, w0, w18, ne  // ne = any
   22d44:	str	w0, [sp, #196]
   22d48:	ldr	w0, [x23, #12]
   22d4c:	and	w9, w13, w11
   22d50:	ldrb	w23, [sp, #136]
   22d54:	add	w24, w11, #0x9
   22d58:	ubfiz	x9, x9, #3, #31
   22d5c:	sub	w3, w11, w5
   22d60:	lsl	w18, w18, w0
   22d64:	ldr	w0, [sp, #132]
   22d68:	add	x25, x12, x9
   22d6c:	add	x9, x9, #0x4
   22d70:	sub	w27, w0, #0x1
   22d74:	ldr	w0, [sp, #136]
   22d78:	add	x9, x12, x9
   22d7c:	mov	w10, #0x0                   	// #0
   22d80:	cmp	w0, #0x0
   22d84:	mov	w0, #0x3                   	// #3
   22d88:	csel	w28, w28, w0, ne  // ne = any
   22d8c:	mov	x5, #0x4                   	// #4
   22d90:	mov	w4, w23
   22d94:	cmp	w23, #0x3
   22d98:	ldr	x0, [sp, #112]
   22d9c:	b.ne	23390 <ZSTD_compress@@Base+0x14b44>  // b.any
   22da0:	ldr	w0, [x0]
   22da4:	sub	w0, w0, #0x1
   22da8:	sub	w1, w0, #0x1
   22dac:	cmp	w1, w3
   22db0:	b.cs	23398 <ZSTD_compress@@Base+0x14b4c>  // b.hs, b.nlast
   22db4:	mov	w1, w0
   22db8:	sub	x0, x20, w0, uxtw
   22dbc:	ldr	w0, [x0]
   22dc0:	cmp	w26, w0
   22dc4:	b.ne	23398 <ZSTD_compress@@Base+0x14b4c>  // b.any
   22dc8:	sub	x1, x5, x1
   22dcc:	mov	x2, x22
   22dd0:	add	x1, x20, x1
   22dd4:	mov	x0, x7
   22dd8:	str	w4, [sp, #200]
   22ddc:	str	w3, [sp, #208]
   22de0:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   22de4:	ldr	w4, [sp, #200]
   22de8:	add	w0, w0, #0x4
   22dec:	ldr	w3, [sp, #208]
   22df0:	mov	x5, #0x4                   	// #4
   22df4:	mov	w1, w0
   22df8:	cmp	x27, w0, uxtw
   22dfc:	b.cs	22e34 <ZSTD_compress@@Base+0x145e8>  // b.hs, b.nlast
   22e00:	ubfiz	x2, x10, #3, #32
   22e04:	ldr	w16, [sp, #136]
   22e08:	add	x6, x21, x2
   22e0c:	add	w10, w10, #0x1
   22e10:	sub	w4, w4, w16
   22e14:	str	w4, [x21, x2]
   22e18:	add	x2, x20, x1
   22e1c:	cmp	x2, x22
   22e20:	ldr	w2, [sp, #160]
   22e24:	str	w0, [x6, #4]
   22e28:	ccmp	w0, w2, #0x2, ne  // ne = any
   22e2c:	b.hi	23604 <ZSTD_compress@@Base+0x14db8>  // b.pmore
   22e30:	mov	x27, x1
   22e34:	add	x23, x23, #0x1
   22e38:	cmp	w28, w23
   22e3c:	b.hi	22d90 <ZSTD_compress@@Base+0x14544>  // b.pmore
   22e40:	ldr	w0, [sp, #164]
   22e44:	mov	x7, #0x0                   	// #0
   22e48:	str	w11, [x14, x15]
   22e4c:	mov	x14, #0x0                   	// #0
   22e50:	add	w28, w0, #0x2
   22e54:	cbz	w18, 22e64 <ZSTD_compress@@Base+0x14618>
   22e58:	ldr	w0, [sp, #196]
   22e5c:	cmp	w0, w8
   22e60:	b.ls	233a0 <ZSTD_compress@@Base+0x14b54>  // b.plast
   22e64:	str	wzr, [x9]
   22e68:	b	232a0 <ZSTD_compress@@Base+0x14a54>
   22e6c:	add	x1, x25, w24, uxtw
   22e70:	mov	w3, w28
   22e74:	mov	x2, x22
   22e78:	mov	x0, x19
   22e7c:	mov	w4, #0x0                   	// #0
   22e80:	bl	2012c <ZSTD_compress@@Base+0x118e0>
   22e84:	add	w24, w24, w0
   22e88:	b	22c6c <ZSTD_compress@@Base+0x14420>
   22e8c:	sub	w7, w28, #0x6
   22e90:	cmp	w7, #0x1
   22e94:	b.hi	22ce0 <ZSTD_compress@@Base+0x14494>  // b.pmore
   22e98:	mov	w2, #0x6                   	// #6
   22e9c:	mov	x0, x20
   22ea0:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   22ea4:	lsl	x25, x0, #2
   22ea8:	ldr	w9, [x23, #4]
   22eac:	mov	w13, #0x1                   	// #1
   22eb0:	ldr	w2, [x19, #184]
   22eb4:	mov	w1, w11
   22eb8:	sub	w9, w9, #0x1
   22ebc:	ldr	w7, [x14, x25]
   22ec0:	mov	w27, #0x4                   	// #4
   22ec4:	lsl	w9, w13, w9
   22ec8:	sub	w9, w9, #0x1
   22ecc:	cmp	w9, w11
   22ed0:	sub	w0, w11, w9
   22ed4:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   22ed8:	str	w0, [sp, #184]
   22edc:	mov	x0, x19
   22ee0:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   22ee4:	cmp	w0, #0x0
   22ee8:	csel	w0, w0, w13, ne  // ne = any
   22eec:	str	w0, [sp, #196]
   22ef0:	ldr	w0, [x23, #12]
   22ef4:	and	w8, w9, w11
   22ef8:	ldrb	w15, [sp, #136]
   22efc:	mov	x3, #0x4                   	// #4
   22f00:	ubfiz	x8, x8, #3, #31
   22f04:	add	w24, w11, #0x9
   22f08:	lsl	w13, w13, w0
   22f0c:	ldr	w0, [sp, #132]
   22f10:	add	x26, x12, x8
   22f14:	add	x8, x8, #0x4
   22f18:	sub	w23, w0, #0x1
   22f1c:	ldr	w0, [sp, #136]
   22f20:	add	x8, x12, x8
   22f24:	add	x4, x20, x3
   22f28:	cmp	w0, #0x0
   22f2c:	sub	w18, w11, w5
   22f30:	mov	w0, #0x3                   	// #3
   22f34:	csel	w27, w27, w0, ne  // ne = any
   22f38:	mov	w10, #0x0                   	// #0
   22f3c:	mov	w28, w15
   22f40:	cmp	w15, #0x3
   22f44:	ldr	x0, [sp, #112]
   22f48:	b.ne	236fc <ZSTD_compress@@Base+0x14eb0>  // b.any
   22f4c:	ldr	w0, [x0]
   22f50:	sub	w0, w0, #0x1
   22f54:	sub	w1, w0, #0x1
   22f58:	cmp	w1, w18
   22f5c:	b.cs	23704 <ZSTD_compress@@Base+0x14eb8>  // b.hs, b.nlast
   22f60:	mov	w1, w0
   22f64:	sub	x0, x20, w0, uxtw
   22f68:	ldr	w2, [x0]
   22f6c:	ldr	w0, [x20]
   22f70:	cmp	w2, w0
   22f74:	b.ne	23704 <ZSTD_compress@@Base+0x14eb8>  // b.any
   22f78:	sub	x1, x3, x1
   22f7c:	mov	x0, x4
   22f80:	mov	x2, x22
   22f84:	add	x1, x20, x1
   22f88:	str	x4, [sp, #200]
   22f8c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   22f90:	ldr	x4, [sp, #200]
   22f94:	add	w0, w0, #0x4
   22f98:	mov	x3, #0x4                   	// #4
   22f9c:	mov	w1, w0
   22fa0:	cmp	x23, w0, uxtw
   22fa4:	b.cs	22fdc <ZSTD_compress@@Base+0x14790>  // b.hs, b.nlast
   22fa8:	ubfiz	x2, x10, #3, #32
   22fac:	ldr	w6, [sp, #136]
   22fb0:	add	x5, x21, x2
   22fb4:	add	w10, w10, #0x1
   22fb8:	sub	w28, w28, w6
   22fbc:	str	w28, [x21, x2]
   22fc0:	add	x2, x20, x1
   22fc4:	cmp	x2, x22
   22fc8:	ldr	w2, [sp, #160]
   22fcc:	str	w0, [x5, #4]
   22fd0:	ccmp	w0, w2, #0x2, ne  // ne = any
   22fd4:	b.hi	23604 <ZSTD_compress@@Base+0x14db8>  // b.pmore
   22fd8:	mov	x23, x1
   22fdc:	add	x15, x15, #0x1
   22fe0:	cmp	w27, w15
   22fe4:	b.hi	22f3c <ZSTD_compress@@Base+0x146f0>  // b.pmore
   22fe8:	ldr	w0, [sp, #164]
   22fec:	mov	x18, #0x0                   	// #0
   22ff0:	str	w11, [x14, x25]
   22ff4:	mov	x14, #0x0                   	// #0
   22ff8:	add	w11, w0, #0x2
   22ffc:	cbz	w13, 2300c <ZSTD_compress@@Base+0x147c0>
   23000:	ldr	w0, [sp, #196]
   23004:	cmp	w0, w7
   23008:	b.ls	2370c <ZSTD_compress@@Base+0x14ec0>  // b.plast
   2300c:	str	wzr, [x8]
   23010:	str	wzr, [x26]
   23014:	b	232a4 <ZSTD_compress@@Base+0x14a58>
   23018:	mov	x27, x20
   2301c:	mov	w0, #0x79b1                	// #31153
   23020:	movk	w0, #0x9e37, lsl #16
   23024:	ldr	w15, [x23, #4]
   23028:	neg	w1, w1
   2302c:	mov	w18, #0x1                   	// #1
   23030:	ldr	w9, [x27], #3
   23034:	sub	w15, w15, #0x1
   23038:	ldr	w2, [x19, #184]
   2303c:	lsl	w15, w18, w15
   23040:	sub	w15, w15, #0x1
   23044:	cmp	w15, w11
   23048:	mul	w0, w9, w0
   2304c:	lsr	w0, w0, w1
   23050:	mov	w1, w11
   23054:	ubfiz	x0, x0, #2, #32
   23058:	str	x0, [sp, #200]
   2305c:	ldr	w26, [x14, x0]
   23060:	sub	w0, w11, w15
   23064:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   23068:	str	w0, [sp, #196]
   2306c:	mov	x0, x19
   23070:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   23074:	cmp	w0, #0x0
   23078:	and	w13, w15, w11
   2307c:	csel	w0, w0, w18, ne  // ne = any
   23080:	str	w0, [sp, #184]
   23084:	ldr	w0, [x23, #12]
   23088:	ubfiz	x13, x13, #3, #31
   2308c:	add	x25, x12, x13
   23090:	ldrb	w8, [sp, #136]
   23094:	add	x13, x13, #0x4
   23098:	mov	w7, #0x4                   	// #4
   2309c:	lsl	w18, w18, w0
   230a0:	ldr	w0, [sp, #132]
   230a4:	add	x13, x12, x13
   230a8:	add	w24, w11, #0x9
   230ac:	sub	w23, w0, #0x1
   230b0:	ldr	w0, [sp, #136]
   230b4:	lsl	w9, w9, #8
   230b8:	sub	w5, w11, w5
   230bc:	cmp	w0, #0x0
   230c0:	mov	w10, #0x0                   	// #0
   230c4:	csel	w7, w7, w28, ne  // ne = any
   230c8:	mov	x3, #0x3                   	// #3
   230cc:	mov	w28, w8
   230d0:	cmp	w8, #0x3
   230d4:	ldr	x0, [sp, #112]
   230d8:	b.ne	2325c <ZSTD_compress@@Base+0x14a10>  // b.any
   230dc:	ldr	w0, [x0]
   230e0:	sub	w0, w0, #0x1
   230e4:	sub	w1, w0, #0x1
   230e8:	cmp	w1, w5
   230ec:	b.cs	23264 <ZSTD_compress@@Base+0x14a18>  // b.hs, b.nlast
   230f0:	mov	w1, w0
   230f4:	sub	x0, x20, w0, uxtw
   230f8:	ldr	w0, [x0]
   230fc:	cmp	w9, w0, lsl #8
   23100:	b.ne	23264 <ZSTD_compress@@Base+0x14a18>  // b.any
   23104:	sub	x1, x3, x1
   23108:	mov	x2, x22
   2310c:	add	x1, x20, x1
   23110:	mov	x0, x27
   23114:	str	w5, [sp, #208]
   23118:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2311c:	ldr	w5, [sp, #208]
   23120:	add	w0, w0, #0x3
   23124:	mov	x3, #0x3                   	// #3
   23128:	mov	w1, w0
   2312c:	cmp	x23, w0, uxtw
   23130:	b.cs	23168 <ZSTD_compress@@Base+0x1491c>  // b.hs, b.nlast
   23134:	ubfiz	x2, x10, #3, #32
   23138:	ldr	w6, [sp, #136]
   2313c:	add	x4, x21, x2
   23140:	add	w10, w10, #0x1
   23144:	sub	w28, w28, w6
   23148:	str	w28, [x21, x2]
   2314c:	add	x2, x20, x1
   23150:	cmp	x2, x22
   23154:	ldr	w2, [sp, #160]
   23158:	str	w0, [x4, #4]
   2315c:	ccmp	w0, w2, #0x2, ne  // ne = any
   23160:	b.hi	23604 <ZSTD_compress@@Base+0x14db8>  // b.pmore
   23164:	mov	x23, x1
   23168:	add	x8, x8, #0x1
   2316c:	cmp	w7, w8
   23170:	b.hi	230cc <ZSTD_compress@@Base+0x14880>  // b.pmore
   23174:	cmp	x23, #0x2
   23178:	b.ne	23274 <ZSTD_compress@@Base+0x14a28>  // b.any
   2317c:	add	x1, sp, #0x11c
   23180:	mov	x2, x20
   23184:	mov	x0, x19
   23188:	bl	1ff88 <ZSTD_compress@@Base+0x1173c>
   2318c:	ldr	w1, [sp, #184]
   23190:	sub	w7, w11, w0
   23194:	cmp	w1, w0
   23198:	mov	w1, #0x3ffff               	// #262143
   2319c:	ccmp	w7, w1, #0x2, ls  // ls = plast
   231a0:	b.hi	23274 <ZSTD_compress@@Base+0x14a28>  // b.pmore
   231a4:	ldr	x1, [sp, #144]
   231a8:	mov	x2, x22
   231ac:	add	x1, x1, w0, uxtw
   231b0:	mov	x0, x20
   231b4:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   231b8:	cmp	x0, #0x2
   231bc:	b.ls	23274 <ZSTD_compress@@Base+0x14a28>  // b.plast
   231c0:	add	w1, w7, #0x2
   231c4:	ldr	w2, [sp, #160]
   231c8:	stp	w1, w0, [x21]
   231cc:	add	x1, x20, x0
   231d0:	cmp	x1, x22
   231d4:	ccmp	x0, x2, #0x2, ne  // ne = any
   231d8:	b.ls	2326c <ZSTD_compress@@Base+0x14a20>  // b.plast
   231dc:	add	w11, w11, #0x1
   231e0:	mov	w10, #0x1                   	// #1
   231e4:	str	w11, [x19, #36]
   231e8:	ldp	x1, x0, [sp, #104]
   231ec:	mov	w3, #0x2                   	// #2
   231f0:	ldr	x2, [sp, #168]
   231f4:	ldr	w0, [x0]
   231f8:	str	w0, [x1, #16]
   231fc:	ldr	x0, [sp, #112]
   23200:	ldr	w0, [x0, #4]
   23204:	str	w0, [x1, #20]
   23208:	ldr	x0, [sp, #112]
   2320c:	ldr	w0, [x0, #8]
   23210:	str	w0, [x1, #24]
   23214:	mov	x0, x1
   23218:	ldr	w1, [sp, #176]
   2321c:	stp	wzr, w1, [x0, #8]
   23220:	ldr	x0, [sp, #120]
   23224:	bl	204f4 <ZSTD_compress@@Base+0x11ca8>
   23228:	mov	w6, w0
   2322c:	ldr	x0, [sp, #104]
   23230:	str	w6, [x0]
   23234:	sub	w0, w10, #0x1
   23238:	lsl	x2, x0, #3
   2323c:	add	x0, x21, x0, lsl #3
   23240:	ldr	w1, [x0, #4]
   23244:	ldr	w0, [sp, #224]
   23248:	cmp	w0, w1
   2324c:	b.cs	237ec <ZSTD_compress@@Base+0x14fa0>  // b.hs, b.nlast
   23250:	ldr	w2, [x21, x2]
   23254:	mov	w0, #0x0                   	// #0
   23258:	b	239dc <ZSTD_compress@@Base+0x15190>
   2325c:	ldr	w0, [x0, x8, lsl #2]
   23260:	b	230e4 <ZSTD_compress@@Base+0x14898>
   23264:	mov	w0, #0x0                   	// #0
   23268:	b	23128 <ZSTD_compress@@Base+0x148dc>
   2326c:	mov	x23, x0
   23270:	mov	w10, #0x1                   	// #1
   23274:	ldr	x0, [sp, #200]
   23278:	mov	x9, #0x0                   	// #0
   2327c:	mov	x7, #0x0                   	// #0
   23280:	str	w11, [x14, x0]
   23284:	ldr	w0, [sp, #164]
   23288:	add	w28, w0, #0x2
   2328c:	cbz	w18, 2329c <ZSTD_compress@@Base+0x14a50>
   23290:	ldr	w0, [sp, #184]
   23294:	cmp	w0, w26
   23298:	b.ls	232b0 <ZSTD_compress@@Base+0x14a64>  // b.plast
   2329c:	str	wzr, [x13]
   232a0:	str	wzr, [x25]
   232a4:	sub	w24, w24, #0x8
   232a8:	str	w24, [x19, #36]
   232ac:	b	23604 <ZSTD_compress@@Base+0x14db8>
   232b0:	and	w8, w15, w26
   232b4:	cmp	x7, x9
   232b8:	ldr	x0, [sp, #144]
   232bc:	ubfiz	x8, x8, #3, #31
   232c0:	csel	x14, x7, x9, ls  // ls = plast
   232c4:	add	x11, x12, x8
   232c8:	mov	x2, x22
   232cc:	add	x27, x0, w26, uxtw
   232d0:	add	x0, x20, x14
   232d4:	add	x1, x27, x14
   232d8:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   232dc:	add	x14, x14, x0
   232e0:	cmp	x14, x23
   232e4:	b.ls	23328 <ZSTD_compress@@Base+0x14adc>  // b.plast
   232e8:	sub	w0, w24, w26
   232ec:	mov	w2, w14
   232f0:	cmp	x14, x0
   232f4:	b.ls	232fc <ZSTD_compress@@Base+0x14ab0>  // b.plast
   232f8:	add	w24, w26, w14
   232fc:	ubfiz	x0, x10, #3, #32
   23300:	sub	w3, w28, w26
   23304:	add	x1, x21, x0
   23308:	cmp	x14, #0x1, lsl #12
   2330c:	add	w10, w10, #0x1
   23310:	str	w3, [x21, x0]
   23314:	add	x0, x20, x14
   23318:	str	w2, [x1, #4]
   2331c:	ccmp	x0, x22, #0x4, ls  // ls = plast
   23320:	b.eq	2329c <ZSTD_compress@@Base+0x14a50>  // b.none
   23324:	mov	x23, x14
   23328:	ldrb	w1, [x27, x14]
   2332c:	ldrb	w0, [x20, x14]
   23330:	cmp	w1, w0
   23334:	b.cs	2335c <ZSTD_compress@@Base+0x14b10>  // b.hs, b.nlast
   23338:	ldr	w0, [sp, #196]
   2333c:	str	w26, [x25]
   23340:	cmp	w26, w0
   23344:	b.ls	23380 <ZSTD_compress@@Base+0x14b34>  // b.plast
   23348:	ldr	w26, [x11, #4]
   2334c:	add	x25, x11, #0x4
   23350:	sub	w18, w18, #0x1
   23354:	mov	x7, x14
   23358:	b	2328c <ZSTD_compress@@Base+0x14a40>
   2335c:	ldr	w0, [sp, #196]
   23360:	str	w26, [x13]
   23364:	cmp	w26, w0
   23368:	b.ls	23388 <ZSTD_compress@@Base+0x14b3c>  // b.plast
   2336c:	mov	x9, x14
   23370:	ldr	w26, [x12, x8]
   23374:	mov	x13, x11
   23378:	mov	x14, x7
   2337c:	b	23350 <ZSTD_compress@@Base+0x14b04>
   23380:	add	x25, sp, #0x120
   23384:	b	2329c <ZSTD_compress@@Base+0x14a50>
   23388:	add	x13, sp, #0x120
   2338c:	b	2329c <ZSTD_compress@@Base+0x14a50>
   23390:	ldr	w0, [x0, x23, lsl #2]
   23394:	b	22da8 <ZSTD_compress@@Base+0x1455c>
   23398:	mov	w0, #0x0                   	// #0
   2339c:	b	22df4 <ZSTD_compress@@Base+0x145a8>
   233a0:	and	w11, w13, w8
   233a4:	cmp	x7, x14
   233a8:	ldr	x0, [sp, #144]
   233ac:	ubfiz	x11, x11, #3, #31
   233b0:	add	x15, x12, x11
   233b4:	csel	x23, x7, x14, ls  // ls = plast
   233b8:	mov	x2, x22
   233bc:	add	x26, x0, w8, uxtw
   233c0:	add	x0, x20, x23
   233c4:	add	x1, x26, x23
   233c8:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   233cc:	add	x23, x23, x0
   233d0:	cmp	x23, x27
   233d4:	b.ls	23418 <ZSTD_compress@@Base+0x14bcc>  // b.plast
   233d8:	sub	w0, w24, w8
   233dc:	mov	w2, w23
   233e0:	cmp	x23, x0
   233e4:	b.ls	233ec <ZSTD_compress@@Base+0x14ba0>  // b.plast
   233e8:	add	w24, w8, w23
   233ec:	ubfiz	x0, x10, #3, #32
   233f0:	sub	w3, w28, w8
   233f4:	add	x1, x21, x0
   233f8:	cmp	x23, #0x1, lsl #12
   233fc:	add	w10, w10, #0x1
   23400:	str	w3, [x21, x0]
   23404:	add	x0, x20, x23
   23408:	str	w2, [x1, #4]
   2340c:	ccmp	x0, x22, #0x4, ls  // ls = plast
   23410:	b.eq	22e64 <ZSTD_compress@@Base+0x14618>  // b.none
   23414:	mov	x27, x23
   23418:	ldrb	w1, [x26, x23]
   2341c:	ldrb	w0, [x20, x23]
   23420:	cmp	w1, w0
   23424:	b.cs	2344c <ZSTD_compress@@Base+0x14c00>  // b.hs, b.nlast
   23428:	ldr	w0, [sp, #184]
   2342c:	str	w8, [x25]
   23430:	cmp	w8, w0
   23434:	b.ls	23470 <ZSTD_compress@@Base+0x14c24>  // b.plast
   23438:	ldr	w8, [x15, #4]
   2343c:	add	x25, x15, #0x4
   23440:	sub	w18, w18, #0x1
   23444:	mov	x7, x23
   23448:	b	22e54 <ZSTD_compress@@Base+0x14608>
   2344c:	ldr	w0, [sp, #184]
   23450:	str	w8, [x9]
   23454:	cmp	w8, w0
   23458:	b.ls	23478 <ZSTD_compress@@Base+0x14c2c>  // b.plast
   2345c:	mov	x14, x23
   23460:	ldr	w8, [x12, x11]
   23464:	mov	x9, x15
   23468:	mov	x23, x7
   2346c:	b	23440 <ZSTD_compress@@Base+0x14bf4>
   23470:	add	x25, sp, #0x120
   23474:	b	22e64 <ZSTD_compress@@Base+0x14618>
   23478:	add	x9, sp, #0x120
   2347c:	b	22e64 <ZSTD_compress@@Base+0x14618>
   23480:	mov	w2, w28
   23484:	mov	x0, x20
   23488:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   2348c:	lsl	x25, x0, #2
   23490:	ldr	w9, [x23, #4]
   23494:	mov	w13, #0x1                   	// #1
   23498:	ldr	w2, [x19, #184]
   2349c:	mov	w1, w11
   234a0:	sub	w9, w9, #0x1
   234a4:	ldr	w7, [x14, x25]
   234a8:	mov	w26, #0x4                   	// #4
   234ac:	lsl	w9, w13, w9
   234b0:	sub	w9, w9, #0x1
   234b4:	cmp	w9, w11
   234b8:	sub	w0, w11, w9
   234bc:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   234c0:	str	w0, [sp, #184]
   234c4:	mov	x0, x19
   234c8:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   234cc:	cmp	w0, #0x0
   234d0:	csel	w0, w0, w13, ne  // ne = any
   234d4:	str	w0, [sp, #196]
   234d8:	ldr	w0, [x23, #12]
   234dc:	and	w8, w9, w11
   234e0:	ldrb	w15, [sp, #136]
   234e4:	mov	x3, #0x4                   	// #4
   234e8:	ubfiz	x8, x8, #3, #31
   234ec:	add	w18, w11, #0x9
   234f0:	lsl	w13, w13, w0
   234f4:	ldr	w0, [sp, #132]
   234f8:	add	x24, x12, x8
   234fc:	add	x8, x8, #0x4
   23500:	sub	w23, w0, #0x1
   23504:	ldr	w0, [sp, #136]
   23508:	add	x8, x12, x8
   2350c:	add	x4, x20, x3
   23510:	cmp	w0, #0x0
   23514:	sub	w28, w11, w5
   23518:	mov	w0, #0x3                   	// #3
   2351c:	csel	w26, w26, w0, ne  // ne = any
   23520:	mov	w10, #0x0                   	// #0
   23524:	mov	w27, w15
   23528:	cmp	w15, #0x3
   2352c:	ldr	x0, [sp, #112]
   23530:	b.ne	2360c <ZSTD_compress@@Base+0x14dc0>  // b.any
   23534:	ldr	w0, [x0]
   23538:	sub	w0, w0, #0x1
   2353c:	sub	w1, w0, #0x1
   23540:	cmp	w1, w28
   23544:	b.cs	23614 <ZSTD_compress@@Base+0x14dc8>  // b.hs, b.nlast
   23548:	mov	w1, w0
   2354c:	sub	x0, x20, w0, uxtw
   23550:	ldr	w2, [x0]
   23554:	ldr	w0, [x20]
   23558:	cmp	w2, w0
   2355c:	b.ne	23614 <ZSTD_compress@@Base+0x14dc8>  // b.any
   23560:	sub	x1, x3, x1
   23564:	mov	x0, x4
   23568:	mov	x2, x22
   2356c:	add	x1, x20, x1
   23570:	str	x4, [sp, #200]
   23574:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   23578:	ldr	x4, [sp, #200]
   2357c:	add	w0, w0, #0x4
   23580:	mov	x3, #0x4                   	// #4
   23584:	mov	w1, w0
   23588:	cmp	x23, w0, uxtw
   2358c:	b.cs	235c4 <ZSTD_compress@@Base+0x14d78>  // b.hs, b.nlast
   23590:	ubfiz	x2, x10, #3, #32
   23594:	ldr	w6, [sp, #136]
   23598:	add	x5, x21, x2
   2359c:	add	w10, w10, #0x1
   235a0:	sub	w27, w27, w6
   235a4:	str	w27, [x21, x2]
   235a8:	add	x2, x20, x1
   235ac:	cmp	x2, x22
   235b0:	ldr	w2, [sp, #160]
   235b4:	str	w0, [x5, #4]
   235b8:	ccmp	w0, w2, #0x2, ne  // ne = any
   235bc:	b.hi	23604 <ZSTD_compress@@Base+0x14db8>  // b.pmore
   235c0:	mov	x23, x1
   235c4:	add	x15, x15, #0x1
   235c8:	cmp	w26, w15
   235cc:	b.hi	23524 <ZSTD_compress@@Base+0x14cd8>  // b.pmore
   235d0:	ldr	w0, [sp, #164]
   235d4:	mov	x15, #0x0                   	// #0
   235d8:	str	w11, [x14, x25]
   235dc:	mov	x11, #0x0                   	// #0
   235e0:	add	w28, w0, #0x2
   235e4:	cbz	w13, 235f4 <ZSTD_compress@@Base+0x14da8>
   235e8:	ldr	w0, [sp, #196]
   235ec:	cmp	w0, w7
   235f0:	b.ls	2361c <ZSTD_compress@@Base+0x14dd0>  // b.plast
   235f4:	str	wzr, [x8]
   235f8:	sub	w18, w18, #0x8
   235fc:	str	wzr, [x24]
   23600:	str	w18, [x19, #36]
   23604:	cbz	w10, 22c54 <ZSTD_compress@@Base+0x14408>
   23608:	b	231e8 <ZSTD_compress@@Base+0x1499c>
   2360c:	ldr	w0, [x0, x15, lsl #2]
   23610:	b	2353c <ZSTD_compress@@Base+0x14cf0>
   23614:	mov	w0, #0x0                   	// #0
   23618:	b	23584 <ZSTD_compress@@Base+0x14d38>
   2361c:	and	w14, w9, w7
   23620:	cmp	x11, x15
   23624:	ldr	x0, [sp, #144]
   23628:	ubfiz	x14, x14, #3, #31
   2362c:	csel	x26, x11, x15, ls  // ls = plast
   23630:	add	x25, x12, x14
   23634:	mov	x2, x22
   23638:	add	x27, x0, w7, uxtw
   2363c:	add	x0, x20, x26
   23640:	add	x1, x27, x26
   23644:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   23648:	add	x26, x26, x0
   2364c:	cmp	x26, x23
   23650:	b.ls	23694 <ZSTD_compress@@Base+0x14e48>  // b.plast
   23654:	sub	w0, w18, w7
   23658:	mov	w2, w26
   2365c:	cmp	x26, x0
   23660:	b.ls	23668 <ZSTD_compress@@Base+0x14e1c>  // b.plast
   23664:	add	w18, w7, w26
   23668:	ubfiz	x0, x10, #3, #32
   2366c:	sub	w3, w28, w7
   23670:	add	x1, x21, x0
   23674:	cmp	x26, #0x1, lsl #12
   23678:	add	w10, w10, #0x1
   2367c:	str	w3, [x21, x0]
   23680:	add	x0, x20, x26
   23684:	str	w2, [x1, #4]
   23688:	ccmp	x0, x22, #0x4, ls  // ls = plast
   2368c:	b.eq	235f4 <ZSTD_compress@@Base+0x14da8>  // b.none
   23690:	mov	x23, x26
   23694:	ldrb	w1, [x27, x26]
   23698:	ldrb	w0, [x20, x26]
   2369c:	cmp	w1, w0
   236a0:	b.cs	236c8 <ZSTD_compress@@Base+0x14e7c>  // b.hs, b.nlast
   236a4:	ldr	w0, [sp, #184]
   236a8:	str	w7, [x24]
   236ac:	cmp	w7, w0
   236b0:	b.ls	236ec <ZSTD_compress@@Base+0x14ea0>  // b.plast
   236b4:	ldr	w7, [x25, #4]
   236b8:	add	x24, x25, #0x4
   236bc:	sub	w13, w13, #0x1
   236c0:	mov	x11, x26
   236c4:	b	235e4 <ZSTD_compress@@Base+0x14d98>
   236c8:	ldr	w0, [sp, #184]
   236cc:	str	w7, [x8]
   236d0:	cmp	w7, w0
   236d4:	b.ls	236f4 <ZSTD_compress@@Base+0x14ea8>  // b.plast
   236d8:	mov	x15, x26
   236dc:	ldr	w7, [x12, x14]
   236e0:	mov	x8, x25
   236e4:	mov	x26, x11
   236e8:	b	236bc <ZSTD_compress@@Base+0x14e70>
   236ec:	add	x24, sp, #0x120
   236f0:	b	235f4 <ZSTD_compress@@Base+0x14da8>
   236f4:	add	x8, sp, #0x120
   236f8:	b	235f4 <ZSTD_compress@@Base+0x14da8>
   236fc:	ldr	w0, [x0, x15, lsl #2]
   23700:	b	22f54 <ZSTD_compress@@Base+0x14708>
   23704:	mov	w0, #0x0                   	// #0
   23708:	b	22f9c <ZSTD_compress@@Base+0x14750>
   2370c:	and	w15, w9, w7
   23710:	cmp	x14, x18
   23714:	ldr	x0, [sp, #144]
   23718:	ubfiz	x15, x15, #3, #31
   2371c:	csel	x27, x14, x18, ls  // ls = plast
   23720:	add	x25, x12, x15
   23724:	mov	x2, x22
   23728:	add	x28, x0, w7, uxtw
   2372c:	add	x0, x20, x27
   23730:	add	x1, x28, x27
   23734:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   23738:	add	x27, x27, x0
   2373c:	cmp	x27, x23
   23740:	b.ls	23784 <ZSTD_compress@@Base+0x14f38>  // b.plast
   23744:	sub	w0, w24, w7
   23748:	mov	w2, w27
   2374c:	cmp	x27, x0
   23750:	b.ls	23758 <ZSTD_compress@@Base+0x14f0c>  // b.plast
   23754:	add	w24, w7, w27
   23758:	ubfiz	x0, x10, #3, #32
   2375c:	sub	w3, w11, w7
   23760:	add	x1, x21, x0
   23764:	cmp	x27, #0x1, lsl #12
   23768:	add	w10, w10, #0x1
   2376c:	str	w3, [x21, x0]
   23770:	add	x0, x20, x27
   23774:	str	w2, [x1, #4]
   23778:	ccmp	x0, x22, #0x4, ls  // ls = plast
   2377c:	b.eq	2300c <ZSTD_compress@@Base+0x147c0>  // b.none
   23780:	mov	x23, x27
   23784:	ldrb	w1, [x28, x27]
   23788:	ldrb	w0, [x20, x27]
   2378c:	cmp	w1, w0
   23790:	b.cs	237b8 <ZSTD_compress@@Base+0x14f6c>  // b.hs, b.nlast
   23794:	ldr	w0, [sp, #184]
   23798:	str	w7, [x26]
   2379c:	cmp	w7, w0
   237a0:	b.ls	237dc <ZSTD_compress@@Base+0x14f90>  // b.plast
   237a4:	ldr	w7, [x25, #4]
   237a8:	add	x26, x25, #0x4
   237ac:	sub	w13, w13, #0x1
   237b0:	mov	x14, x27
   237b4:	b	22ffc <ZSTD_compress@@Base+0x147b0>
   237b8:	ldr	w0, [sp, #184]
   237bc:	str	w7, [x8]
   237c0:	cmp	w7, w0
   237c4:	b.ls	237e4 <ZSTD_compress@@Base+0x14f98>  // b.plast
   237c8:	mov	x18, x27
   237cc:	ldr	w7, [x12, x15]
   237d0:	mov	x8, x25
   237d4:	mov	x27, x14
   237d8:	b	237ac <ZSTD_compress@@Base+0x14f60>
   237dc:	add	x26, sp, #0x120
   237e0:	b	2300c <ZSTD_compress@@Base+0x147c0>
   237e4:	add	x8, sp, #0x120
   237e8:	b	2300c <ZSTD_compress@@Base+0x147c0>
   237ec:	ldr	x1, [sp, #168]
   237f0:	mov	w2, #0x2                   	// #2
   237f4:	mov	w0, #0x0                   	// #0
   237f8:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   237fc:	add	w6, w6, w0
   23800:	ldr	x1, [sp, #104]
   23804:	mov	w0, #0x40000000            	// #1073741824
   23808:	str	w0, [x1, #28]
   2380c:	str	w0, [x1, #56]
   23810:	ldr	w1, [sp, #132]
   23814:	cmp	w1, #0x4
   23818:	b.ne	23824 <ZSTD_compress@@Base+0x14fd8>  // b.any
   2381c:	ldr	x1, [sp, #104]
   23820:	str	w0, [x1, #84]
   23824:	ldr	w5, [sp, #132]
   23828:	mov	x7, x21
   2382c:	mov	w8, #0x0                   	// #0
   23830:	mov	w11, #0x1c                  	// #28
   23834:	ldp	w9, w12, [x7]
   23838:	ldr	w2, [sp, #136]
   2383c:	ldr	x0, [sp, #112]
   23840:	mov	w1, w9
   23844:	bl	205a8 <ZSTD_compress@@Base+0x11d5c>
   23848:	add	w2, w9, #0x1
   2384c:	clz	w2, w2
   23850:	str	w0, [sp, #288]
   23854:	eor	w2, w2, #0x1f
   23858:	lsr	x0, x0, #32
   2385c:	add	w3, w2, #0x10
   23860:	str	w0, [sp, #292]
   23864:	sbfiz	x4, x2, #2, #32
   23868:	str	w1, [sp, #296]
   2386c:	lsl	w3, w3, #8
   23870:	cmp	w12, w5
   23874:	b.cs	23a84 <ZSTD_compress@@Base+0x15238>  // b.hs, b.nlast
   23878:	add	w8, w8, #0x1
   2387c:	add	x7, x7, #0x8
   23880:	cmp	w10, w8
   23884:	b.ne	23834 <ZSTD_compress@@Base+0x14fe8>  // b.any
   23888:	sub	w0, w5, #0x1
   2388c:	str	w0, [sp, #164]
   23890:	mov	w0, #0x1                   	// #1
   23894:	str	w0, [sp, #160]
   23898:	ldr	w1, [sp, #164]
   2389c:	ldr	w0, [sp, #160]
   238a0:	cmp	w0, w1
   238a4:	b.hi	2398c <ZSTD_compress@@Base+0x15140>  // b.pmore
   238a8:	ldr	w0, [sp, #160]
   238ac:	mov	w1, #0x1c                  	// #28
   238b0:	sub	w9, w0, #0x1
   238b4:	add	x23, x20, w0, uxtw
   238b8:	umull	x9, w9, w1
   238bc:	ldr	x1, [sp, #104]
   238c0:	add	x8, x1, x9
   238c4:	ldr	w1, [x8, #8]
   238c8:	cbnz	w1, 23b34 <ZSTD_compress@@Base+0x152e8>
   238cc:	ldr	w7, [x8, #12]
   238d0:	add	w7, w7, #0x1
   238d4:	ldr	x2, [sp, #168]
   238d8:	sub	x0, x0, #0x1
   238dc:	mov	w3, #0x2                   	// #2
   238e0:	mov	w1, #0x1                   	// #1
   238e4:	add	x0, x20, x0
   238e8:	bl	20464 <ZSTD_compress@@Base+0x11c18>
   238ec:	mov	w5, w0
   238f0:	ldr	x1, [sp, #168]
   238f4:	mov	w0, w7
   238f8:	mov	w2, #0x2                   	// #2
   238fc:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   23900:	add	w5, w5, w0
   23904:	ldr	x1, [sp, #168]
   23908:	mov	w2, #0x2                   	// #2
   2390c:	sub	w0, w7, #0x1
   23910:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   23914:	ldr	x1, [sp, #104]
   23918:	ldr	w2, [sp, #160]
   2391c:	ldr	w1, [x1, x9]
   23920:	sub	w0, w1, w0
   23924:	mov	w1, #0x1c                  	// #28
   23928:	add	w0, w0, w5
   2392c:	umull	x1, w2, w1
   23930:	ldr	x2, [sp, #104]
   23934:	add	x2, x2, x1
   23938:	str	x2, [sp, #136]
   2393c:	ldr	x2, [sp, #104]
   23940:	ldr	w2, [x2, x1]
   23944:	cmp	w0, w2
   23948:	b.gt	23974 <ZSTD_compress@@Base+0x15128>
   2394c:	ldr	x2, [sp, #136]
   23950:	stur	xzr, [x2, #4]
   23954:	str	w7, [x2, #12]
   23958:	ldr	x2, [sp, #104]
   2395c:	str	w0, [x2, x1]
   23960:	ldr	x2, [sp, #136]
   23964:	ldr	x0, [x8, #16]
   23968:	str	x0, [x2, #16]
   2396c:	ldr	w0, [x8, #24]
   23970:	str	w0, [x2, #24]
   23974:	ldr	x0, [sp, #216]
   23978:	cmp	x0, x23
   2397c:	b.cc	242cc <ZSTD_compress@@Base+0x15a80>  // b.lo, b.ul, b.last
   23980:	ldp	w0, w2, [sp, #160]
   23984:	cmp	w0, w2
   23988:	b.ne	23b3c <ZSTD_compress@@Base+0x152f0>  // b.any
   2398c:	ldr	w1, [sp, #164]
   23990:	mov	w0, #0x1c                  	// #28
   23994:	ldr	x2, [sp, #104]
   23998:	ldr	w4, [sp, #164]
   2399c:	umaddl	x0, w1, w0, x2
   239a0:	ldp	x2, x3, [x0]
   239a4:	stp	x2, x3, [sp, #304]
   239a8:	ldr	w2, [x0, #4]
   239ac:	ldr	x1, [x0, #16]
   239b0:	str	x1, [sp, #320]
   239b4:	ldr	w1, [x0, #24]
   239b8:	str	w1, [sp, #328]
   239bc:	ldp	w1, w0, [x0, #8]
   239c0:	str	w0, [sp, #192]
   239c4:	mov	w0, w0
   239c8:	add	w3, w0, w1
   239cc:	ldr	w0, [sp, #164]
   239d0:	cmp	w4, w3
   239d4:	sub	w0, w0, w3
   239d8:	csel	w0, w0, wzr, hi  // hi = pmore
   239dc:	str	w2, [sp, #308]
   239e0:	add	w25, w0, #0x1
   239e4:	str	w1, [sp, #312]
   239e8:	mov	w10, w25
   239ec:	ldr	w1, [sp, #192]
   239f0:	ldr	x2, [sp, #104]
   239f4:	str	w1, [sp, #316]
   239f8:	mov	w1, #0x1c                  	// #28
   239fc:	ldr	x3, [sp, #320]
   23a00:	umaddl	x2, w25, w1, x2
   23a04:	ldp	x4, x5, [sp, #304]
   23a08:	str	x3, [x2, #16]
   23a0c:	ldr	w3, [sp, #328]
   23a10:	stp	x4, x5, [x2]
   23a14:	str	w3, [x2, #24]
   23a18:	cbz	w0, 23a58 <ZSTD_compress@@Base+0x1520c>
   23a1c:	ldr	x2, [sp, #104]
   23a20:	sub	w10, w10, #0x1
   23a24:	umaddl	x4, w0, w1, x2
   23a28:	ldp	w5, w2, [x4, #8]
   23a2c:	add	w5, w5, w2
   23a30:	ldr	x2, [sp, #104]
   23a34:	cmp	w0, w5
   23a38:	umaddl	x6, w10, w1, x2
   23a3c:	ldp	x2, x3, [x4]
   23a40:	stp	x2, x3, [x6]
   23a44:	ldr	x2, [x4, #16]
   23a48:	str	x2, [x6, #16]
   23a4c:	ldr	w2, [x4, #24]
   23a50:	str	w2, [x6, #24]
   23a54:	b.hi	24920 <ZSTD_compress@@Base+0x160d4>  // b.pmore
   23a58:	mov	x13, #0xffff                	// #65535
   23a5c:	sub	x12, x22, #0x20
   23a60:	mov	w15, w13
   23a64:	mov	w14, #0x1c                  	// #28
   23a68:	mov	w18, #0x2                   	// #2
   23a6c:	cmp	w25, w10
   23a70:	b.cs	24928 <ZSTD_compress@@Base+0x160dc>  // b.hs, b.nlast
   23a74:	ldr	x0, [sp, #168]
   23a78:	mov	w1, #0x2                   	// #2
   23a7c:	bl	203b8 <ZSTD_compress@@Base+0x11b6c>
   23a80:	b	22c10 <ZSTD_compress@@Base+0x143c4>
   23a84:	ldr	w0, [x19, #152]
   23a88:	add	x15, x19, #0x48
   23a8c:	sub	w18, w5, #0x3
   23a90:	cmp	w0, #0x1
   23a94:	b.ne	23ae0 <ZSTD_compress@@Base+0x15294>  // b.any
   23a98:	mov	w0, w18
   23a9c:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   23aa0:	add	w0, w3, w0
   23aa4:	ldr	x1, [sp, #104]
   23aa8:	umull	x13, w5, w11
   23aac:	ldr	w14, [sp, #192]
   23ab0:	add	w0, w6, w0
   23ab4:	add	x1, x1, x13
   23ab8:	str	w14, [x1, #12]
   23abc:	ldr	x14, [sp, #104]
   23ac0:	stp	w9, w5, [x1, #4]
   23ac4:	add	w5, w5, #0x1
   23ac8:	str	w0, [x14, x13]
   23acc:	ldr	x0, [sp, #288]
   23ad0:	str	x0, [x1, #16]
   23ad4:	ldr	w0, [sp, #296]
   23ad8:	str	w0, [x1, #24]
   23adc:	b	23870 <ZSTD_compress@@Base+0x15024>
   23ae0:	ldr	x0, [x15, #24]
   23ae4:	ldr	w0, [x0, x4]
   23ae8:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   23aec:	mov	w14, w0
   23af0:	mov	w0, w18
   23af4:	bl	2043c <ZSTD_compress@@Base+0x11bf0>
   23af8:	mov	w18, w0
   23afc:	ldp	w1, w13, [x15, #72]
   23b00:	add	w13, w13, w1
   23b04:	ldr	x1, [x15, #16]
   23b08:	ldr	w0, [x1, w0, uxtw #2]
   23b0c:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   23b10:	add	w0, w14, w0
   23b14:	ldr	x1, [sp, #248]
   23b18:	sub	w0, w13, w0
   23b1c:	ldr	w1, [x1, x18, lsl #2]
   23b20:	add	w1, w2, w1
   23b24:	lsl	w1, w1, #8
   23b28:	add	w1, w1, #0x33
   23b2c:	add	w0, w1, w0
   23b30:	b	23aa4 <ZSTD_compress@@Base+0x15258>
   23b34:	mov	w7, #0x1                   	// #1
   23b38:	b	238d4 <ZSTD_compress@@Base+0x15088>
   23b3c:	ldr	x0, [sp, #136]
   23b40:	ldr	w24, [x0, #8]
   23b44:	cbnz	w24, 23db4 <ZSTD_compress@@Base+0x15568>
   23b48:	ldr	w0, [x0, #12]
   23b4c:	str	w0, [sp, #192]
   23b50:	ldr	x27, [x19, #8]
   23b54:	ldr	w25, [x19, #36]
   23b58:	add	x0, x27, w25, uxtw
   23b5c:	cmp	x23, x0
   23b60:	b.cc	242cc <ZSTD_compress@@Base+0x15a80>  // b.lo, b.ul, b.last
   23b64:	ldr	x0, [sp, #104]
   23b68:	add	x26, x19, #0xb8
   23b6c:	mov	w2, #0x2                   	// #2
   23b70:	ldr	w0, [x0, x1]
   23b74:	ldr	x1, [sp, #168]
   23b78:	str	w0, [sp, #256]
   23b7c:	mov	w0, #0x0                   	// #0
   23b80:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   23b84:	ldr	w28, [x26, #16]
   23b88:	sub	x5, x23, x27
   23b8c:	str	w0, [sp, #260]
   23b90:	mov	w6, w5
   23b94:	cmp	w6, w25
   23b98:	b.hi	23dbc <ZSTD_compress@@Base+0x15570>  // b.pmore
   23b9c:	cmp	w24, #0x0
   23ba0:	mov	w1, #0xfff                 	// #4095
   23ba4:	cset	w0, ne  // ne = any
   23ba8:	str	w0, [sp, #144]
   23bac:	ldr	x0, [sp, #136]
   23bb0:	str	w5, [x19, #36]
   23bb4:	add	x0, x0, #0x10
   23bb8:	str	x0, [sp, #200]
   23bbc:	ldr	w0, [x26, #20]
   23bc0:	cmp	w0, #0xfff
   23bc4:	csel	w0, w0, w1, ls  // ls = plast
   23bc8:	str	w0, [sp, #196]
   23bcc:	ldr	x0, [x19, #8]
   23bd0:	str	x0, [sp, #184]
   23bd4:	ldr	w1, [x26, #8]
   23bd8:	cmp	w28, #0x5
   23bdc:	sub	x11, x23, x0
   23be0:	str	w11, [sp, #208]
   23be4:	ldr	x0, [x19, #48]
   23be8:	str	x0, [sp, #176]
   23bec:	b.eq	244b8 <ZSTD_compress@@Base+0x15c6c>  // b.none
   23bf0:	b.hi	23dec <ZSTD_compress@@Base+0x155a0>  // b.pmore
   23bf4:	cmp	w28, #0x3
   23bf8:	b.eq	24034 <ZSTD_compress@@Base+0x157e8>  // b.none
   23bfc:	mov	x28, x23
   23c00:	mov	w12, #0x79b1                	// #31153
   23c04:	movk	w12, #0x9e37, lsl #16
   23c08:	neg	w1, w1
   23c0c:	ldp	w2, w9, [x19, #184]
   23c10:	mov	w13, #0x1                   	// #1
   23c14:	ldr	w0, [x28], #4
   23c18:	mov	w26, #0x4                   	// #4
   23c1c:	str	w0, [sp, #228]
   23c20:	sub	w9, w9, #0x1
   23c24:	mov	w0, w0
   23c28:	ldr	w27, [x19, #24]
   23c2c:	lsl	w9, w13, w9
   23c30:	sub	w9, w9, #0x1
   23c34:	cmp	w9, w11
   23c38:	mul	w12, w0, w12
   23c3c:	ldr	x0, [sp, #176]
   23c40:	lsr	w12, w12, w1
   23c44:	mov	w1, w11
   23c48:	ubfiz	x12, x12, #2, #32
   23c4c:	ldr	x24, [x19, #64]
   23c50:	ldr	w7, [x0, x12]
   23c54:	sub	w0, w11, w9
   23c58:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   23c5c:	str	w0, [sp, #212]
   23c60:	mov	x0, x19
   23c64:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   23c68:	cmp	w0, #0x0
   23c6c:	csel	w0, w0, w13, ne  // ne = any
   23c70:	str	w0, [sp, #232]
   23c74:	ldr	w0, [x19, #196]
   23c78:	and	w8, w9, w11
   23c7c:	ldrb	w14, [sp, #144]
   23c80:	add	w15, w11, #0x9
   23c84:	ubfiz	x8, x8, #3, #31
   23c88:	sub	w27, w11, w27
   23c8c:	lsl	w13, w13, w0
   23c90:	ldr	w0, [sp, #132]
   23c94:	add	x18, x24, x8
   23c98:	add	x8, x8, #0x4
   23c9c:	sub	w25, w0, #0x1
   23ca0:	ldr	w0, [sp, #144]
   23ca4:	add	x8, x24, x8
   23ca8:	mov	w10, #0x0                   	// #0
   23cac:	cmp	w0, #0x0
   23cb0:	mov	w0, #0x3                   	// #3
   23cb4:	csel	w26, w26, w0, ne  // ne = any
   23cb8:	mov	x6, #0x4                   	// #4
   23cbc:	ldr	x0, [sp, #136]
   23cc0:	add	x5, x0, #0x10
   23cc4:	mov	w4, w14
   23cc8:	cmp	w14, #0x3
   23ccc:	b.ne	243c0 <ZSTD_compress@@Base+0x15b74>  // b.any
   23cd0:	ldr	x0, [sp, #136]
   23cd4:	ldr	w0, [x0, #16]
   23cd8:	sub	w0, w0, #0x1
   23cdc:	sub	w1, w0, #0x1
   23ce0:	cmp	w1, w27
   23ce4:	b.cs	243c8 <ZSTD_compress@@Base+0x15b7c>  // b.hs, b.nlast
   23ce8:	mov	w1, w0
   23cec:	sub	x0, x23, w0, uxtw
   23cf0:	ldr	w2, [sp, #228]
   23cf4:	ldr	w0, [x0]
   23cf8:	cmp	w2, w0
   23cfc:	b.ne	243c8 <ZSTD_compress@@Base+0x15b7c>  // b.any
   23d00:	sub	x1, x6, x1
   23d04:	mov	x2, x22
   23d08:	add	x1, x23, x1
   23d0c:	mov	x0, x28
   23d10:	str	w4, [sp, #240]
   23d14:	str	x5, [sp, #264]
   23d18:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   23d1c:	ldr	w4, [sp, #240]
   23d20:	add	w0, w0, #0x4
   23d24:	ldr	x5, [sp, #264]
   23d28:	mov	x6, #0x4                   	// #4
   23d2c:	mov	w1, w0
   23d30:	cmp	x25, w0, uxtw
   23d34:	b.cs	23d6c <ZSTD_compress@@Base+0x15520>  // b.hs, b.nlast
   23d38:	ubfiz	x2, x10, #3, #32
   23d3c:	ldr	w3, [sp, #144]
   23d40:	add	x16, x21, x2
   23d44:	add	w10, w10, #0x1
   23d48:	sub	w4, w4, w3
   23d4c:	str	w4, [x21, x2]
   23d50:	add	x2, x23, x1
   23d54:	cmp	x2, x22
   23d58:	ldr	w2, [sp, #196]
   23d5c:	str	w0, [x16, #4]
   23d60:	ccmp	w0, w2, #0x2, ne  // ne = any
   23d64:	b.hi	242c8 <ZSTD_compress@@Base+0x15a7c>  // b.pmore
   23d68:	mov	x25, x1
   23d6c:	add	x14, x14, #0x1
   23d70:	cmp	w26, w14
   23d74:	b.hi	23cc4 <ZSTD_compress@@Base+0x15478>  // b.pmore
   23d78:	ldr	x0, [sp, #176]
   23d7c:	mov	x14, #0x0                   	// #0
   23d80:	str	w11, [x0, x12]
   23d84:	mov	x11, #0x0                   	// #0
   23d88:	ldr	w0, [sp, #208]
   23d8c:	add	w3, w0, #0x2
   23d90:	cbz	w13, 23da0 <ZSTD_compress@@Base+0x15554>
   23d94:	ldr	w0, [sp, #232]
   23d98:	cmp	w0, w7
   23d9c:	b.ls	243d0 <ZSTD_compress@@Base+0x15b84>  // b.plast
   23da0:	str	wzr, [x8]
   23da4:	sub	w15, w15, #0x8
   23da8:	str	wzr, [x18]
   23dac:	str	w15, [x19, #36]
   23db0:	b	242c8 <ZSTD_compress@@Base+0x15a7c>
   23db4:	str	wzr, [sp, #192]
   23db8:	b	23b50 <ZSTD_compress@@Base+0x15304>
   23dbc:	add	x1, x27, w25, uxtw
   23dc0:	mov	w3, w28
   23dc4:	mov	x2, x22
   23dc8:	mov	x0, x19
   23dcc:	mov	w4, #0x0                   	// #0
   23dd0:	str	w6, [sp, #144]
   23dd4:	str	x5, [sp, #176]
   23dd8:	bl	2012c <ZSTD_compress@@Base+0x118e0>
   23ddc:	ldr	w6, [sp, #144]
   23de0:	add	w25, w25, w0
   23de4:	ldr	x5, [sp, #176]
   23de8:	b	23b94 <ZSTD_compress@@Base+0x15348>
   23dec:	sub	w9, w28, #0x6
   23df0:	cmp	w9, #0x1
   23df4:	b.hi	23bfc <ZSTD_compress@@Base+0x153b0>  // b.pmore
   23df8:	mov	w2, #0x6                   	// #6
   23dfc:	mov	x0, x23
   23e00:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   23e04:	lsl	x25, x0, #2
   23e08:	ldr	w9, [x26, #4]
   23e0c:	mov	w12, #0x1                   	// #1
   23e10:	ldr	x0, [sp, #176]
   23e14:	sub	w9, w9, #0x1
   23e18:	ldr	w2, [x19, #184]
   23e1c:	mov	w1, w11
   23e20:	lsl	w9, w12, w9
   23e24:	sub	w9, w9, #0x1
   23e28:	ldr	w7, [x0, x25]
   23e2c:	cmp	w9, w11
   23e30:	ldr	x18, [x19, #64]
   23e34:	sub	w0, w11, w9
   23e38:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   23e3c:	str	w0, [sp, #212]
   23e40:	mov	x0, x19
   23e44:	ldr	w27, [x19, #24]
   23e48:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   23e4c:	cmp	w0, #0x0
   23e50:	csel	w0, w0, w12, ne  // ne = any
   23e54:	str	w0, [sp, #228]
   23e58:	ldr	w0, [x19, #196]
   23e5c:	and	w8, w9, w11
   23e60:	ldrb	w13, [sp, #144]
   23e64:	mov	w26, #0x4                   	// #4
   23e68:	ubfiz	x8, x8, #3, #31
   23e6c:	mov	x4, #0x4                   	// #4
   23e70:	lsl	w12, w12, w0
   23e74:	ldr	w0, [sp, #132]
   23e78:	add	x15, x18, x8
   23e7c:	add	x8, x8, #0x4
   23e80:	sub	w24, w0, #0x1
   23e84:	ldr	w0, [sp, #144]
   23e88:	ldr	x3, [sp, #200]
   23e8c:	cmp	w0, #0x0
   23e90:	add	x8, x18, x8
   23e94:	mov	w0, #0x3                   	// #3
   23e98:	add	w14, w11, #0x9
   23e9c:	add	x5, x23, x4
   23ea0:	csel	w26, w26, w0, ne  // ne = any
   23ea4:	sub	w27, w11, w27
   23ea8:	mov	w10, #0x0                   	// #0
   23eac:	mov	w28, w13
   23eb0:	cmp	w13, #0x3
   23eb4:	b.ne	2473c <ZSTD_compress@@Base+0x15ef0>  // b.any
   23eb8:	ldr	x0, [sp, #136]
   23ebc:	ldr	w0, [x0, #16]
   23ec0:	sub	w0, w0, #0x1
   23ec4:	sub	w1, w0, #0x1
   23ec8:	cmp	w1, w27
   23ecc:	b.cs	24744 <ZSTD_compress@@Base+0x15ef8>  // b.hs, b.nlast
   23ed0:	mov	w1, w0
   23ed4:	sub	x0, x23, w0, uxtw
   23ed8:	ldr	w2, [x0]
   23edc:	ldr	w0, [x23]
   23ee0:	cmp	w2, w0
   23ee4:	b.ne	24744 <ZSTD_compress@@Base+0x15ef8>  // b.any
   23ee8:	sub	x1, x4, x1
   23eec:	mov	x0, x5
   23ef0:	mov	x2, x22
   23ef4:	add	x1, x23, x1
   23ef8:	stp	x5, x3, [sp, #232]
   23efc:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   23f00:	add	w0, w0, #0x4
   23f04:	ldp	x5, x3, [sp, #232]
   23f08:	mov	x4, #0x4                   	// #4
   23f0c:	mov	w1, w0
   23f10:	cmp	x24, w0, uxtw
   23f14:	b.cs	23f4c <ZSTD_compress@@Base+0x15700>  // b.hs, b.nlast
   23f18:	ubfiz	x2, x10, #3, #32
   23f1c:	ldr	w16, [sp, #144]
   23f20:	add	x6, x21, x2
   23f24:	add	w10, w10, #0x1
   23f28:	sub	w28, w28, w16
   23f2c:	str	w28, [x21, x2]
   23f30:	add	x2, x23, x1
   23f34:	cmp	x2, x22
   23f38:	ldr	w2, [sp, #196]
   23f3c:	str	w0, [x6, #4]
   23f40:	ccmp	w0, w2, #0x2, ne  // ne = any
   23f44:	b.hi	242c8 <ZSTD_compress@@Base+0x15a7c>  // b.pmore
   23f48:	mov	x24, x1
   23f4c:	add	x13, x13, #0x1
   23f50:	cmp	w26, w13
   23f54:	b.hi	23eac <ZSTD_compress@@Base+0x15660>  // b.pmore
   23f58:	ldr	x0, [sp, #176]
   23f5c:	mov	x26, #0x0                   	// #0
   23f60:	mov	x13, #0x0                   	// #0
   23f64:	str	w11, [x0, x25]
   23f68:	ldr	w0, [sp, #208]
   23f6c:	add	w11, w0, #0x2
   23f70:	cbz	w12, 24640 <ZSTD_compress@@Base+0x15df4>
   23f74:	ldr	w0, [sp, #228]
   23f78:	cmp	w0, w7
   23f7c:	b.hi	24640 <ZSTD_compress@@Base+0x15df4>  // b.pmore
   23f80:	ldr	x0, [sp, #184]
   23f84:	cmp	x13, x26
   23f88:	and	w25, w9, w7
   23f8c:	csel	x28, x13, x26, ls  // ls = plast
   23f90:	mov	x2, x22
   23f94:	add	x3, x0, w7, uxtw
   23f98:	ubfiz	x25, x25, #3, #31
   23f9c:	add	x1, x3, x28
   23fa0:	add	x0, x23, x28
   23fa4:	add	x27, x18, x25
   23fa8:	str	x3, [sp, #176]
   23fac:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   23fb0:	add	x28, x28, x0
   23fb4:	cmp	x28, x24
   23fb8:	ldr	x3, [sp, #176]
   23fbc:	b.ls	24000 <ZSTD_compress@@Base+0x157b4>  // b.plast
   23fc0:	sub	w0, w14, w7
   23fc4:	mov	w2, w28
   23fc8:	cmp	x28, x0
   23fcc:	b.ls	23fd4 <ZSTD_compress@@Base+0x15788>  // b.plast
   23fd0:	add	w14, w7, w28
   23fd4:	ubfiz	x0, x10, #3, #32
   23fd8:	sub	w4, w11, w7
   23fdc:	add	x1, x21, x0
   23fe0:	cmp	x28, #0x1, lsl #12
   23fe4:	add	w10, w10, #0x1
   23fe8:	str	w4, [x21, x0]
   23fec:	add	x0, x23, x28
   23ff0:	str	w2, [x1, #4]
   23ff4:	ccmp	x0, x22, #0x4, ls  // ls = plast
   23ff8:	b.eq	24640 <ZSTD_compress@@Base+0x15df4>  // b.none
   23ffc:	mov	x24, x28
   24000:	ldrb	w1, [x3, x28]
   24004:	ldrb	w0, [x23, x28]
   24008:	cmp	w1, w0
   2400c:	b.cs	2474c <ZSTD_compress@@Base+0x15f00>  // b.hs, b.nlast
   24010:	ldr	w0, [sp, #212]
   24014:	str	w7, [x15]
   24018:	cmp	w7, w0
   2401c:	b.ls	24770 <ZSTD_compress@@Base+0x15f24>  // b.plast
   24020:	ldr	w7, [x27, #4]
   24024:	add	x15, x27, #0x4
   24028:	sub	w12, w12, #0x1
   2402c:	mov	x13, x28
   24030:	b	23f70 <ZSTD_compress@@Base+0x15724>
   24034:	mov	x27, x23
   24038:	mov	w0, #0x79b1                	// #31153
   2403c:	movk	w0, #0x9e37, lsl #16
   24040:	neg	w1, w1
   24044:	ldr	w14, [x26, #4]
   24048:	mov	w15, #0x1                   	// #1
   2404c:	ldr	w8, [x27], #3
   24050:	sub	w14, w14, #0x1
   24054:	ldr	w2, [x19, #184]
   24058:	ldr	x25, [x19, #64]
   2405c:	lsl	w14, w15, w14
   24060:	mul	w0, w8, w0
   24064:	sub	w14, w14, #0x1
   24068:	cmp	w14, w11
   2406c:	ldr	w26, [x19, #24]
   24070:	lsr	w0, w0, w1
   24074:	ubfiz	x0, x0, #2, #32
   24078:	str	x0, [sp, #240]
   2407c:	ldr	x0, [sp, #176]
   24080:	ldr	x1, [sp, #240]
   24084:	ldr	w12, [x0, x1]
   24088:	sub	w0, w11, w14
   2408c:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   24090:	mov	w1, w11
   24094:	str	w0, [sp, #232]
   24098:	mov	x0, x19
   2409c:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   240a0:	cmp	w0, #0x0
   240a4:	csel	w0, w0, w15, ne  // ne = any
   240a8:	str	w0, [sp, #228]
   240ac:	add	w0, w11, #0x9
   240b0:	str	w0, [sp, #212]
   240b4:	ldr	w0, [x19, #196]
   240b8:	and	w13, w14, w11
   240bc:	ldrb	w7, [sp, #144]
   240c0:	mov	w9, #0x4                   	// #4
   240c4:	ubfiz	x13, x13, #3, #31
   240c8:	lsl	w8, w8, #8
   240cc:	lsl	w15, w15, w0
   240d0:	ldr	w0, [sp, #132]
   240d4:	add	x24, x25, x13
   240d8:	add	x13, x13, #0x4
   240dc:	sub	w18, w0, #0x1
   240e0:	ldr	w0, [sp, #144]
   240e4:	ldr	x3, [sp, #200]
   240e8:	cmp	w0, #0x0
   240ec:	add	x13, x25, x13
   240f0:	csel	w9, w9, w28, ne  // ne = any
   240f4:	sub	w26, w11, w26
   240f8:	mov	w10, #0x0                   	// #0
   240fc:	mov	x4, #0x3                   	// #3
   24100:	mov	w28, w7
   24104:	cmp	w7, #0x3
   24108:	b.ne	24270 <ZSTD_compress@@Base+0x15a24>  // b.any
   2410c:	ldr	x0, [sp, #136]
   24110:	ldr	w0, [x0, #16]
   24114:	sub	w0, w0, #0x1
   24118:	sub	w1, w0, #0x1
   2411c:	cmp	w1, w26
   24120:	b.cs	24278 <ZSTD_compress@@Base+0x15a2c>  // b.hs, b.nlast
   24124:	mov	w1, w0
   24128:	sub	x0, x23, w0, uxtw
   2412c:	ldr	w0, [x0]
   24130:	cmp	w8, w0, lsl #8
   24134:	b.ne	24278 <ZSTD_compress@@Base+0x15a2c>  // b.any
   24138:	sub	x1, x4, x1
   2413c:	mov	x2, x22
   24140:	add	x1, x23, x1
   24144:	mov	x0, x27
   24148:	str	x3, [sp, #264]
   2414c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   24150:	ldr	x3, [sp, #264]
   24154:	add	w0, w0, #0x3
   24158:	mov	x4, #0x3                   	// #3
   2415c:	mov	w1, w0
   24160:	cmp	x18, w0, uxtw
   24164:	b.cs	2419c <ZSTD_compress@@Base+0x15950>  // b.hs, b.nlast
   24168:	ubfiz	x2, x10, #3, #32
   2416c:	ldr	w6, [sp, #144]
   24170:	add	x5, x21, x2
   24174:	add	w10, w10, #0x1
   24178:	sub	w28, w28, w6
   2417c:	str	w28, [x21, x2]
   24180:	add	x2, x23, x1
   24184:	cmp	x2, x22
   24188:	ldr	w2, [sp, #196]
   2418c:	str	w0, [x5, #4]
   24190:	ccmp	w0, w2, #0x2, ne  // ne = any
   24194:	b.hi	242c8 <ZSTD_compress@@Base+0x15a7c>  // b.pmore
   24198:	mov	x18, x1
   2419c:	add	x7, x7, #0x1
   241a0:	cmp	w9, w7
   241a4:	b.hi	24100 <ZSTD_compress@@Base+0x158b4>  // b.pmore
   241a8:	cmp	x18, #0x2
   241ac:	b.ne	24288 <ZSTD_compress@@Base+0x15a3c>  // b.any
   241b0:	add	x1, sp, #0x11c
   241b4:	mov	x2, x23
   241b8:	mov	x0, x19
   241bc:	bl	1ff88 <ZSTD_compress@@Base+0x1173c>
   241c0:	ldr	w1, [sp, #228]
   241c4:	sub	w7, w11, w0
   241c8:	cmp	w1, w0
   241cc:	mov	w1, #0x3ffff               	// #262143
   241d0:	ccmp	w7, w1, #0x2, ls  // ls = plast
   241d4:	b.hi	24288 <ZSTD_compress@@Base+0x15a3c>  // b.pmore
   241d8:	ldr	x1, [sp, #184]
   241dc:	mov	x2, x22
   241e0:	add	x1, x1, w0, uxtw
   241e4:	mov	x0, x23
   241e8:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   241ec:	cmp	x0, #0x2
   241f0:	b.ls	24288 <ZSTD_compress@@Base+0x15a3c>  // b.plast
   241f4:	ldr	w2, [sp, #196]
   241f8:	add	w7, w7, #0x2
   241fc:	add	x1, x23, x0
   24200:	stp	w7, w0, [x21]
   24204:	cmp	x1, x22
   24208:	ccmp	x0, x2, #0x2, ne  // ne = any
   2420c:	b.ls	24280 <ZSTD_compress@@Base+0x15a34>  // b.plast
   24210:	add	w11, w11, #0x1
   24214:	mov	w10, #0x1                   	// #1
   24218:	str	w11, [x19, #36]
   2421c:	sub	w0, w10, #0x1
   24220:	ldr	w2, [sp, #224]
   24224:	add	x0, x21, x0, lsl #3
   24228:	ldr	w1, [x0, #4]
   2422c:	cmp	w2, w1
   24230:	b.cc	24244 <ZSTD_compress@@Base+0x159f8>  // b.lo, b.ul, b.last
   24234:	ldr	w2, [sp, #160]
   24238:	add	w2, w2, w1
   2423c:	cmp	w2, #0xfff
   24240:	b.ls	24788 <ZSTD_compress@@Base+0x15f3c>  // b.plast
   24244:	ldr	w2, [x0]
   24248:	ldr	x0, [sp, #136]
   2424c:	ldr	w0, [x0, #8]
   24250:	cbnz	w0, 24780 <ZSTD_compress@@Base+0x15f34>
   24254:	ldr	x0, [sp, #136]
   24258:	ldr	w0, [x0, #12]
   2425c:	ldr	w3, [sp, #160]
   24260:	sub	w0, w3, w0
   24264:	cmp	w0, #0x1, lsl #12
   24268:	b.ls	239dc <ZSTD_compress@@Base+0x15190>  // b.plast
   2426c:	b	23254 <ZSTD_compress@@Base+0x14a08>
   24270:	ldr	w0, [x3, x7, lsl #2]
   24274:	b	24118 <ZSTD_compress@@Base+0x158cc>
   24278:	mov	w0, #0x0                   	// #0
   2427c:	b	2415c <ZSTD_compress@@Base+0x15910>
   24280:	mov	x18, x0
   24284:	mov	w10, #0x1                   	// #1
   24288:	ldr	x0, [sp, #176]
   2428c:	mov	x9, #0x0                   	// #0
   24290:	ldr	x1, [sp, #240]
   24294:	mov	x7, #0x0                   	// #0
   24298:	str	w11, [x0, x1]
   2429c:	ldr	w0, [sp, #208]
   242a0:	add	w28, w0, #0x2
   242a4:	cbz	w15, 242b4 <ZSTD_compress@@Base+0x15a68>
   242a8:	ldr	w0, [sp, #228]
   242ac:	cmp	w0, w12
   242b0:	b.ls	242d8 <ZSTD_compress@@Base+0x15a8c>  // b.plast
   242b4:	ldr	w0, [sp, #212]
   242b8:	str	wzr, [x13]
   242bc:	str	wzr, [x24]
   242c0:	sub	w0, w0, #0x8
   242c4:	str	w0, [x19, #36]
   242c8:	cbnz	w10, 2421c <ZSTD_compress@@Base+0x159d0>
   242cc:	ldr	w0, [sp, #160]
   242d0:	add	w0, w0, #0x1
   242d4:	b	23894 <ZSTD_compress@@Base+0x15048>
   242d8:	and	w8, w14, w12
   242dc:	cmp	x7, x9
   242e0:	ldr	x0, [sp, #184]
   242e4:	ubfiz	x8, x8, #3, #31
   242e8:	add	x11, x25, x8
   242ec:	csel	x26, x7, x9, ls  // ls = plast
   242f0:	mov	x2, x22
   242f4:	add	x27, x0, w12, uxtw
   242f8:	add	x0, x23, x26
   242fc:	add	x1, x27, x26
   24300:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   24304:	add	x26, x26, x0
   24308:	cmp	x26, x18
   2430c:	b.ls	24358 <ZSTD_compress@@Base+0x15b0c>  // b.plast
   24310:	ldr	w0, [sp, #212]
   24314:	mov	w2, w26
   24318:	sub	w0, w0, w12
   2431c:	cmp	x26, x0
   24320:	b.ls	2432c <ZSTD_compress@@Base+0x15ae0>  // b.plast
   24324:	add	w0, w12, w26
   24328:	str	w0, [sp, #212]
   2432c:	ubfiz	x0, x10, #3, #32
   24330:	sub	w3, w28, w12
   24334:	add	x1, x21, x0
   24338:	cmp	x26, #0x1, lsl #12
   2433c:	add	w10, w10, #0x1
   24340:	str	w3, [x21, x0]
   24344:	add	x0, x23, x26
   24348:	str	w2, [x1, #4]
   2434c:	ccmp	x0, x22, #0x4, ls  // ls = plast
   24350:	b.eq	242b4 <ZSTD_compress@@Base+0x15a68>  // b.none
   24354:	mov	x18, x26
   24358:	ldrb	w1, [x27, x26]
   2435c:	ldrb	w0, [x23, x26]
   24360:	cmp	w1, w0
   24364:	b.cs	2438c <ZSTD_compress@@Base+0x15b40>  // b.hs, b.nlast
   24368:	ldr	w0, [sp, #232]
   2436c:	str	w12, [x24]
   24370:	cmp	w12, w0
   24374:	b.ls	243b0 <ZSTD_compress@@Base+0x15b64>  // b.plast
   24378:	ldr	w12, [x11, #4]
   2437c:	add	x24, x11, #0x4
   24380:	sub	w15, w15, #0x1
   24384:	mov	x7, x26
   24388:	b	242a4 <ZSTD_compress@@Base+0x15a58>
   2438c:	ldr	w0, [sp, #232]
   24390:	str	w12, [x13]
   24394:	cmp	w12, w0
   24398:	b.ls	243b8 <ZSTD_compress@@Base+0x15b6c>  // b.plast
   2439c:	mov	x9, x26
   243a0:	ldr	w12, [x25, x8]
   243a4:	mov	x13, x11
   243a8:	mov	x26, x7
   243ac:	b	24380 <ZSTD_compress@@Base+0x15b34>
   243b0:	add	x24, sp, #0x120
   243b4:	b	242b4 <ZSTD_compress@@Base+0x15a68>
   243b8:	add	x13, sp, #0x120
   243bc:	b	242b4 <ZSTD_compress@@Base+0x15a68>
   243c0:	ldr	w0, [x5, x14, lsl #2]
   243c4:	b	23cdc <ZSTD_compress@@Base+0x15490>
   243c8:	mov	w0, #0x0                   	// #0
   243cc:	b	23d2c <ZSTD_compress@@Base+0x154e0>
   243d0:	and	w12, w9, w7
   243d4:	cmp	x11, x14
   243d8:	ldr	x0, [sp, #184]
   243dc:	ubfiz	x12, x12, #3, #31
   243e0:	csel	x27, x11, x14, ls  // ls = plast
   243e4:	add	x26, x24, x12
   243e8:	mov	x2, x22
   243ec:	str	w3, [sp, #176]
   243f0:	add	x28, x0, w7, uxtw
   243f4:	add	x0, x23, x27
   243f8:	add	x1, x28, x27
   243fc:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   24400:	add	x27, x27, x0
   24404:	ldr	w3, [sp, #176]
   24408:	cmp	x27, x25
   2440c:	b.ls	24450 <ZSTD_compress@@Base+0x15c04>  // b.plast
   24410:	sub	w0, w15, w7
   24414:	mov	w2, w27
   24418:	cmp	x27, x0
   2441c:	b.ls	24424 <ZSTD_compress@@Base+0x15bd8>  // b.plast
   24420:	add	w15, w7, w27
   24424:	ubfiz	x0, x10, #3, #32
   24428:	sub	w4, w3, w7
   2442c:	add	x1, x21, x0
   24430:	cmp	x27, #0x1, lsl #12
   24434:	add	w10, w10, #0x1
   24438:	str	w4, [x21, x0]
   2443c:	add	x0, x23, x27
   24440:	str	w2, [x1, #4]
   24444:	ccmp	x0, x22, #0x4, ls  // ls = plast
   24448:	b.eq	23da0 <ZSTD_compress@@Base+0x15554>  // b.none
   2444c:	mov	x25, x27
   24450:	ldrb	w1, [x28, x27]
   24454:	ldrb	w0, [x23, x27]
   24458:	cmp	w1, w0
   2445c:	b.cs	24484 <ZSTD_compress@@Base+0x15c38>  // b.hs, b.nlast
   24460:	ldr	w0, [sp, #212]
   24464:	str	w7, [x18]
   24468:	cmp	w7, w0
   2446c:	b.ls	244a8 <ZSTD_compress@@Base+0x15c5c>  // b.plast
   24470:	ldr	w7, [x26, #4]
   24474:	add	x18, x26, #0x4
   24478:	sub	w13, w13, #0x1
   2447c:	mov	x11, x27
   24480:	b	23d90 <ZSTD_compress@@Base+0x15544>
   24484:	ldr	w0, [sp, #212]
   24488:	str	w7, [x8]
   2448c:	cmp	w7, w0
   24490:	b.ls	244b0 <ZSTD_compress@@Base+0x15c64>  // b.plast
   24494:	mov	x14, x27
   24498:	ldr	w7, [x24, x12]
   2449c:	mov	x8, x26
   244a0:	mov	x27, x11
   244a4:	b	24478 <ZSTD_compress@@Base+0x15c2c>
   244a8:	add	x18, sp, #0x120
   244ac:	b	23da0 <ZSTD_compress@@Base+0x15554>
   244b0:	add	x8, sp, #0x120
   244b4:	b	23da0 <ZSTD_compress@@Base+0x15554>
   244b8:	mov	w2, w28
   244bc:	mov	x0, x23
   244c0:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   244c4:	lsl	x25, x0, #2
   244c8:	ldr	w9, [x26, #4]
   244cc:	mov	w12, #0x1                   	// #1
   244d0:	ldr	x0, [sp, #176]
   244d4:	sub	w9, w9, #0x1
   244d8:	ldr	w2, [x19, #184]
   244dc:	mov	w1, w11
   244e0:	lsl	w9, w12, w9
   244e4:	sub	w9, w9, #0x1
   244e8:	ldr	w7, [x0, x25]
   244ec:	cmp	w9, w11
   244f0:	ldr	x18, [x19, #64]
   244f4:	sub	w0, w11, w9
   244f8:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   244fc:	str	w0, [sp, #212]
   24500:	mov	x0, x19
   24504:	ldr	w27, [x19, #24]
   24508:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   2450c:	cmp	w0, #0x0
   24510:	csel	w0, w0, w12, ne  // ne = any
   24514:	str	w0, [sp, #228]
   24518:	ldr	w0, [x19, #196]
   2451c:	and	w8, w9, w11
   24520:	ldrb	w13, [sp, #144]
   24524:	mov	w26, #0x4                   	// #4
   24528:	ubfiz	x8, x8, #3, #31
   2452c:	mov	x4, #0x4                   	// #4
   24530:	lsl	w12, w12, w0
   24534:	ldr	w0, [sp, #132]
   24538:	add	x15, x18, x8
   2453c:	add	x8, x8, #0x4
   24540:	sub	w24, w0, #0x1
   24544:	ldr	w0, [sp, #144]
   24548:	ldr	x3, [sp, #200]
   2454c:	cmp	w0, #0x0
   24550:	add	x8, x18, x8
   24554:	mov	w0, #0x3                   	// #3
   24558:	add	w14, w11, #0x9
   2455c:	add	x5, x23, x4
   24560:	csel	w26, w26, w0, ne  // ne = any
   24564:	sub	w27, w11, w27
   24568:	mov	w10, #0x0                   	// #0
   2456c:	mov	w28, w13
   24570:	cmp	w13, #0x3
   24574:	b.ne	24654 <ZSTD_compress@@Base+0x15e08>  // b.any
   24578:	ldr	x0, [sp, #136]
   2457c:	ldr	w0, [x0, #16]
   24580:	sub	w0, w0, #0x1
   24584:	sub	w1, w0, #0x1
   24588:	cmp	w1, w27
   2458c:	b.cs	2465c <ZSTD_compress@@Base+0x15e10>  // b.hs, b.nlast
   24590:	mov	w1, w0
   24594:	sub	x0, x23, w0, uxtw
   24598:	ldr	w2, [x0]
   2459c:	ldr	w0, [x23]
   245a0:	cmp	w2, w0
   245a4:	b.ne	2465c <ZSTD_compress@@Base+0x15e10>  // b.any
   245a8:	sub	x1, x4, x1
   245ac:	mov	x0, x5
   245b0:	mov	x2, x22
   245b4:	add	x1, x23, x1
   245b8:	stp	x5, x3, [sp, #232]
   245bc:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   245c0:	add	w0, w0, #0x4
   245c4:	ldp	x5, x3, [sp, #232]
   245c8:	mov	x4, #0x4                   	// #4
   245cc:	mov	w1, w0
   245d0:	cmp	x24, w0, uxtw
   245d4:	b.cs	2460c <ZSTD_compress@@Base+0x15dc0>  // b.hs, b.nlast
   245d8:	ubfiz	x2, x10, #3, #32
   245dc:	ldr	w16, [sp, #144]
   245e0:	add	x6, x21, x2
   245e4:	add	w10, w10, #0x1
   245e8:	sub	w28, w28, w16
   245ec:	str	w28, [x21, x2]
   245f0:	add	x2, x23, x1
   245f4:	cmp	x2, x22
   245f8:	ldr	w2, [sp, #196]
   245fc:	str	w0, [x6, #4]
   24600:	ccmp	w0, w2, #0x2, ne  // ne = any
   24604:	b.hi	242c8 <ZSTD_compress@@Base+0x15a7c>  // b.pmore
   24608:	mov	x24, x1
   2460c:	add	x13, x13, #0x1
   24610:	cmp	w26, w13
   24614:	b.hi	2456c <ZSTD_compress@@Base+0x15d20>  // b.pmore
   24618:	ldr	x0, [sp, #176]
   2461c:	str	w11, [x0, x25]
   24620:	mov	x25, #0x0                   	// #0
   24624:	ldr	w0, [sp, #208]
   24628:	mov	x11, #0x0                   	// #0
   2462c:	add	w3, w0, #0x2
   24630:	cbz	w12, 24640 <ZSTD_compress@@Base+0x15df4>
   24634:	ldr	w0, [sp, #228]
   24638:	cmp	w0, w7
   2463c:	b.ls	24664 <ZSTD_compress@@Base+0x15e18>  // b.plast
   24640:	str	wzr, [x8]
   24644:	sub	w14, w14, #0x8
   24648:	str	wzr, [x15]
   2464c:	str	w14, [x19, #36]
   24650:	b	242c8 <ZSTD_compress@@Base+0x15a7c>
   24654:	ldr	w0, [x3, x13, lsl #2]
   24658:	b	24584 <ZSTD_compress@@Base+0x15d38>
   2465c:	mov	w0, #0x0                   	// #0
   24660:	b	245cc <ZSTD_compress@@Base+0x15d80>
   24664:	and	w13, w9, w7
   24668:	cmp	x11, x25
   2466c:	ldr	x0, [sp, #184]
   24670:	ubfiz	x13, x13, #3, #31
   24674:	csel	x27, x11, x25, ls  // ls = plast
   24678:	add	x26, x18, x13
   2467c:	mov	x2, x22
   24680:	str	w3, [sp, #176]
   24684:	add	x28, x0, w7, uxtw
   24688:	add	x0, x23, x27
   2468c:	add	x1, x28, x27
   24690:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   24694:	add	x27, x27, x0
   24698:	ldr	w3, [sp, #176]
   2469c:	cmp	x27, x24
   246a0:	b.ls	246e4 <ZSTD_compress@@Base+0x15e98>  // b.plast
   246a4:	sub	w0, w14, w7
   246a8:	mov	w2, w27
   246ac:	cmp	x27, x0
   246b0:	b.ls	246b8 <ZSTD_compress@@Base+0x15e6c>  // b.plast
   246b4:	add	w14, w7, w27
   246b8:	ubfiz	x0, x10, #3, #32
   246bc:	sub	w4, w3, w7
   246c0:	add	x1, x21, x0
   246c4:	cmp	x27, #0x1, lsl #12
   246c8:	add	w10, w10, #0x1
   246cc:	str	w4, [x21, x0]
   246d0:	add	x0, x23, x27
   246d4:	str	w2, [x1, #4]
   246d8:	ccmp	x0, x22, #0x4, ls  // ls = plast
   246dc:	b.eq	24640 <ZSTD_compress@@Base+0x15df4>  // b.none
   246e0:	mov	x24, x27
   246e4:	ldrb	w1, [x28, x27]
   246e8:	ldrb	w0, [x23, x27]
   246ec:	cmp	w1, w0
   246f0:	b.cs	24718 <ZSTD_compress@@Base+0x15ecc>  // b.hs, b.nlast
   246f4:	ldr	w0, [sp, #212]
   246f8:	str	w7, [x15]
   246fc:	cmp	w7, w0
   24700:	b.ls	24770 <ZSTD_compress@@Base+0x15f24>  // b.plast
   24704:	ldr	w7, [x26, #4]
   24708:	add	x15, x26, #0x4
   2470c:	sub	w12, w12, #0x1
   24710:	mov	x11, x27
   24714:	b	24630 <ZSTD_compress@@Base+0x15de4>
   24718:	ldr	w0, [sp, #212]
   2471c:	str	w7, [x8]
   24720:	cmp	w7, w0
   24724:	b.ls	24778 <ZSTD_compress@@Base+0x15f2c>  // b.plast
   24728:	mov	x25, x27
   2472c:	ldr	w7, [x18, x13]
   24730:	mov	x8, x26
   24734:	mov	x27, x11
   24738:	b	2470c <ZSTD_compress@@Base+0x15ec0>
   2473c:	ldr	w0, [x3, x13, lsl #2]
   24740:	b	23ec4 <ZSTD_compress@@Base+0x15678>
   24744:	mov	w0, #0x0                   	// #0
   24748:	b	23f0c <ZSTD_compress@@Base+0x156c0>
   2474c:	ldr	w0, [sp, #212]
   24750:	str	w7, [x8]
   24754:	cmp	w7, w0
   24758:	b.ls	24778 <ZSTD_compress@@Base+0x15f2c>  // b.plast
   2475c:	mov	x26, x28
   24760:	ldr	w7, [x18, x25]
   24764:	mov	x8, x27
   24768:	mov	x28, x13
   2476c:	b	24028 <ZSTD_compress@@Base+0x157dc>
   24770:	add	x15, sp, #0x120
   24774:	b	24640 <ZSTD_compress@@Base+0x15df4>
   24778:	add	x8, sp, #0x120
   2477c:	b	24640 <ZSTD_compress@@Base+0x15df4>
   24780:	mov	w0, #0x0                   	// #0
   24784:	b	2425c <ZSTD_compress@@Base+0x15a10>
   24788:	mov	x9, x21
   2478c:	mov	w5, #0x0                   	// #0
   24790:	ldr	w12, [x9]
   24794:	ldr	w2, [sp, #144]
   24798:	ldr	x0, [sp, #200]
   2479c:	mov	w1, w12
   247a0:	bl	205a8 <ZSTD_compress@@Base+0x11d5c>
   247a4:	str	w0, [sp, #288]
   247a8:	lsr	x0, x0, #32
   247ac:	str	w0, [sp, #292]
   247b0:	str	w1, [sp, #296]
   247b4:	ldr	w3, [x9, #4]
   247b8:	cbz	w5, 2481c <ZSTD_compress@@Base+0x15fd0>
   247bc:	sub	w0, w5, #0x1
   247c0:	add	x0, x21, x0, lsl #3
   247c4:	ldr	w11, [x0, #4]
   247c8:	add	w11, w11, #0x1
   247cc:	add	w2, w12, #0x1
   247d0:	ldr	w0, [sp, #160]
   247d4:	clz	w2, w2
   247d8:	ldr	w1, [sp, #260]
   247dc:	eor	w2, w2, #0x1f
   247e0:	add	w4, w0, w3
   247e4:	add	w13, w2, #0x10
   247e8:	ldr	w0, [sp, #256]
   247ec:	sbfiz	x15, x2, #2, #32
   247f0:	mov	w14, #0x1c                  	// #28
   247f4:	lsl	w13, w13, #8
   247f8:	add	w18, w0, w1
   247fc:	mov	w23, #0x40000000            	// #1073741824
   24800:	cmp	w3, w11
   24804:	b.cs	24824 <ZSTD_compress@@Base+0x15fd8>  // b.hs, b.nlast
   24808:	add	w5, w5, #0x1
   2480c:	add	x9, x9, #0x8
   24810:	cmp	w10, w5
   24814:	b.ne	24790 <ZSTD_compress@@Base+0x15f44>  // b.any
   24818:	b	242cc <ZSTD_compress@@Base+0x15a80>
   2481c:	ldr	w11, [sp, #132]
   24820:	b	247cc <ZSTD_compress@@Base+0x15f80>
   24824:	ldr	w0, [x19, #152]
   24828:	add	x8, x19, #0x48
   2482c:	sub	w24, w3, #0x3
   24830:	cmp	w0, #0x1
   24834:	b.ne	248a0 <ZSTD_compress@@Base+0x16054>  // b.any
   24838:	mov	w0, w24
   2483c:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   24840:	add	w0, w13, w0
   24844:	ldr	x1, [sp, #104]
   24848:	umull	x7, w4, w14
   2484c:	ldr	w6, [sp, #164]
   24850:	add	w0, w18, w0
   24854:	add	x1, x1, x7
   24858:	cmp	w6, w4
   2485c:	b.cc	248f4 <ZSTD_compress@@Base+0x160a8>  // b.lo, b.ul, b.last
   24860:	ldr	x6, [sp, #104]
   24864:	ldr	w6, [x6, x7]
   24868:	cmp	w0, w6
   2486c:	b.ge	24894 <ZSTD_compress@@Base+0x16048>  // b.tcont
   24870:	ldr	w6, [sp, #192]
   24874:	str	w6, [x1, #12]
   24878:	ldr	x6, [sp, #104]
   2487c:	stp	w12, w3, [x1, #4]
   24880:	str	w0, [x6, x7]
   24884:	ldr	x0, [sp, #288]
   24888:	str	x0, [x1, #16]
   2488c:	ldr	w0, [sp, #296]
   24890:	str	w0, [x1, #24]
   24894:	sub	w3, w3, #0x1
   24898:	sub	w4, w4, #0x1
   2489c:	b	24800 <ZSTD_compress@@Base+0x15fb4>
   248a0:	ldr	x0, [x8, #24]
   248a4:	ldr	w0, [x0, x15]
   248a8:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   248ac:	mov	w7, w0
   248b0:	mov	w0, w24
   248b4:	bl	2043c <ZSTD_compress@@Base+0x11bf0>
   248b8:	mov	w24, w0
   248bc:	ldp	w1, w6, [x8, #72]
   248c0:	add	w6, w6, w1
   248c4:	ldr	x1, [x8, #16]
   248c8:	ldr	w0, [x1, w0, uxtw #2]
   248cc:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   248d0:	add	w0, w7, w0
   248d4:	ldr	x1, [sp, #248]
   248d8:	sub	w0, w6, w0
   248dc:	ldr	w1, [x1, x24, lsl #2]
   248e0:	add	w1, w2, w1
   248e4:	lsl	w1, w1, #8
   248e8:	add	w1, w1, #0x33
   248ec:	add	w0, w1, w0
   248f0:	b	24844 <ZSTD_compress@@Base+0x15ff8>
   248f4:	ldr	w6, [sp, #164]
   248f8:	ldr	x8, [sp, #104]
   248fc:	add	w6, w6, #0x1
   24900:	umaddl	x6, w6, w14, x8
   24904:	ldr	w8, [sp, #164]
   24908:	str	w23, [x6], #28
   2490c:	add	w8, w8, #0x1
   24910:	str	w8, [sp, #164]
   24914:	cmp	w8, w4
   24918:	b.ne	24904 <ZSTD_compress@@Base+0x160b8>  // b.any
   2491c:	b	24870 <ZSTD_compress@@Base+0x16024>
   24920:	sub	w0, w0, w5
   24924:	b	23a18 <ZSTD_compress@@Base+0x151cc>
   24928:	ldr	x0, [sp, #104]
   2492c:	ldr	x1, [sp, #120]
   24930:	umaddl	x0, w10, w14, x0
   24934:	ldp	w23, w9, [x0, #8]
   24938:	mov	w24, w9
   2493c:	add	x20, x1, w9, uxtw
   24940:	cbz	w23, 24a98 <ZSTD_compress@@Base+0x1624c>
   24944:	ldr	w11, [x0, #4]
   24948:	cmp	w11, #0x2
   2494c:	b.ls	24aa0 <ZSTD_compress@@Base+0x16254>  // b.plast
   24950:	ldr	x0, [sp, #112]
   24954:	ldr	x1, [sp, #112]
   24958:	ldr	w0, [x0, #4]
   2495c:	str	w0, [x1, #8]
   24960:	ldr	w0, [x1]
   24964:	str	w0, [x1, #4]
   24968:	sub	w0, w11, #0x2
   2496c:	str	w0, [x1]
   24970:	ldr	x2, [sp, #120]
   24974:	mov	w4, w23
   24978:	ldr	x0, [sp, #168]
   2497c:	mov	w3, w11
   24980:	mov	w1, w9
   24984:	bl	209b4 <ZSTD_compress@@Base+0x12168>
   24988:	cmp	x20, x12
   2498c:	sub	w5, w23, #0x3
   24990:	b.hi	24af0 <ZSTD_compress@@Base+0x162a4>  // b.pmore
   24994:	ldr	x0, [sp, #152]
   24998:	cmp	x24, #0x10
   2499c:	ldr	x2, [x0, #24]
   249a0:	ldr	x0, [sp, #120]
   249a4:	ldp	x0, x1, [x0]
   249a8:	stp	x0, x1, [x2]
   249ac:	b.ls	24a08 <ZSTD_compress@@Base+0x161bc>  // b.plast
   249b0:	ldr	x0, [sp, #152]
   249b4:	ldr	x3, [x0, #24]
   249b8:	ldr	x0, [sp, #120]
   249bc:	add	x2, x3, x24
   249c0:	add	x3, x3, #0x30
   249c4:	ldp	x0, x1, [x0, #16]
   249c8:	stp	x0, x1, [x3, #-32]
   249cc:	ldr	x0, [sp, #120]
   249d0:	ldp	x0, x1, [x0, #32]
   249d4:	stp	x0, x1, [x3, #-16]
   249d8:	cmp	x2, x3
   249dc:	b.ls	24a08 <ZSTD_compress@@Base+0x161bc>  // b.plast
   249e0:	ldr	x0, [sp, #120]
   249e4:	add	x4, x0, #0x30
   249e8:	ldp	x0, x1, [x4]
   249ec:	stp	x0, x1, [x3]
   249f0:	add	x3, x3, #0x20
   249f4:	ldp	x0, x1, [x4, #16]
   249f8:	stp	x0, x1, [x3, #-16]
   249fc:	add	x4, x4, #0x20
   24a00:	cmp	x3, x2
   24a04:	b.cc	249e8 <ZSTD_compress@@Base+0x1619c>  // b.lo, b.ul, b.last
   24a08:	ldr	x0, [sp, #152]
   24a0c:	cmp	x24, x13
   24a10:	ldr	x1, [sp, #152]
   24a14:	ldr	x0, [x0, #24]
   24a18:	add	x0, x0, x24
   24a1c:	str	x0, [x1, #24]
   24a20:	ldr	x0, [x1, #8]
   24a24:	b.ls	24a44 <ZSTD_compress@@Base+0x161f8>  // b.plast
   24a28:	ldr	x2, [sp, #152]
   24a2c:	mov	w1, #0x1                   	// #1
   24a30:	str	w1, [x2, #72]
   24a34:	ldr	x1, [x2]
   24a38:	sub	x1, x0, x1
   24a3c:	asr	x1, x1, #3
   24a40:	str	w1, [x2, #76]
   24a44:	add	w11, w11, #0x1
   24a48:	str	w11, [x0]
   24a4c:	strh	w9, [x0, #4]
   24a50:	cmp	w5, w15
   24a54:	b.ls	24a74 <ZSTD_compress@@Base+0x16228>  // b.plast
   24a58:	ldr	x1, [sp, #152]
   24a5c:	ldr	x2, [sp, #152]
   24a60:	str	w18, [x1, #72]
   24a64:	ldr	x1, [x1]
   24a68:	sub	x1, x0, x1
   24a6c:	asr	x1, x1, #3
   24a70:	str	w1, [x2, #76]
   24a74:	ldr	x1, [sp, #152]
   24a78:	add	x0, x0, #0x8
   24a7c:	sturh	w5, [x0, #-2]
   24a80:	add	w9, w9, w23
   24a84:	str	x0, [x1, #8]
   24a88:	ldr	x0, [sp, #120]
   24a8c:	add	x0, x0, x9
   24a90:	str	x0, [sp, #120]
   24a94:	mov	x20, x0
   24a98:	add	w10, w10, #0x1
   24a9c:	b	23a6c <ZSTD_compress@@Base+0x15220>
   24aa0:	cmp	w9, #0x0
   24aa4:	cinc	w0, w11, eq  // eq = none
   24aa8:	cbz	w0, 24970 <ZSTD_compress@@Base+0x16124>
   24aac:	ldr	x1, [sp, #112]
   24ab0:	cmp	w0, #0x3
   24ab4:	ldr	w2, [x1]
   24ab8:	b.ne	24ad4 <ZSTD_compress@@Base+0x16288>  // b.any
   24abc:	sub	w1, w2, #0x1
   24ac0:	ldr	x0, [sp, #112]
   24ac4:	ldr	x3, [sp, #112]
   24ac8:	ldr	w0, [x0, #4]
   24acc:	str	w0, [x3, #8]
   24ad0:	b	24ae4 <ZSTD_compress@@Base+0x16298>
   24ad4:	ldr	x1, [sp, #112]
   24ad8:	cmp	w0, #0x1
   24adc:	ldr	w1, [x1, w0, uxtw #2]
   24ae0:	b.ne	24ac0 <ZSTD_compress@@Base+0x16274>  // b.any
   24ae4:	ldr	x0, [sp, #112]
   24ae8:	stp	w1, w2, [x0]
   24aec:	b	24970 <ZSTD_compress@@Base+0x16124>
   24af0:	ldr	x0, [sp, #152]
   24af4:	mov	x3, x12
   24af8:	ldr	x1, [sp, #120]
   24afc:	mov	x2, x20
   24b00:	ldr	x0, [x0, #24]
   24b04:	bl	1fe1c <ZSTD_compress@@Base+0x115d0>
   24b08:	b	24a08 <ZSTD_compress@@Base+0x161bc>
   24b0c:	stp	x29, x30, [sp, #-400]!
   24b10:	mov	x29, sp
   24b14:	stp	x19, x20, [sp, #16]
   24b18:	mov	x19, x0
   24b1c:	ldr	w0, [x0, #124]
   24b20:	add	x20, x3, x4
   24b24:	str	x1, [sp, #104]
   24b28:	add	x1, x19, #0x48
   24b2c:	stp	x21, x22, [sp, #32]
   24b30:	stp	x23, x24, [sp, #48]
   24b34:	stp	x25, x26, [sp, #64]
   24b38:	stp	x27, x28, [sp, #80]
   24b3c:	stp	x2, x3, [sp, #120]
   24b40:	str	x1, [sp, #136]
   24b44:	sub	x1, x20, #0x8
   24b48:	str	x4, [sp, #216]
   24b4c:	str	x1, [sp, #224]
   24b50:	cbnz	w0, 24cac <ZSTD_compress@@Base+0x16460>
   24b54:	ldr	x0, [sp, #104]
   24b58:	ldr	x1, [x0, #8]
   24b5c:	ldr	x0, [x0]
   24b60:	cmp	x1, x0
   24b64:	b.ne	24cac <ZSTD_compress@@Base+0x16460>  // b.any
   24b68:	ldp	w0, w21, [x19, #24]
   24b6c:	cmp	w21, w0
   24b70:	b.ne	24cac <ZSTD_compress@@Base+0x16460>  // b.any
   24b74:	ldr	x23, [x19, #8]
   24b78:	sub	x0, x3, x23
   24b7c:	cmp	w21, w0
   24b80:	b.ne	24cac <ZSTD_compress@@Base+0x16460>  // b.any
   24b84:	cmp	x4, #0x400
   24b88:	b.ls	24cac <ZSTD_compress@@Base+0x16460>  // b.plast
   24b8c:	ldr	x0, [sp, #120]
   24b90:	mov	w2, #0xfff                 	// #4095
   24b94:	ldr	w1, [x19, #204]
   24b98:	mov	w3, #0x2                   	// #2
   24b9c:	ldr	x22, [x19, #104]
   24ba0:	cmp	w1, #0xfff
   24ba4:	ldr	x0, [x0]
   24ba8:	str	x0, [sp, #336]
   24bac:	ldr	x0, [sp, #120]
   24bb0:	csel	w1, w1, w2, ls  // ls = plast
   24bb4:	str	w1, [sp, #252]
   24bb8:	mov	x2, x4
   24bbc:	add	x21, x23, w21, uxtw
   24bc0:	ldr	w0, [x0, #8]
   24bc4:	str	w0, [sp, #344]
   24bc8:	ldr	w0, [x19, #200]
   24bcc:	str	w0, [sp, #148]
   24bd0:	mov	w0, w0
   24bd4:	ldr	w1, [sp, #148]
   24bd8:	cmp	w0, #0x3
   24bdc:	mov	w0, #0x4                   	// #4
   24be0:	csel	w0, w1, w0, eq  // eq = none
   24be4:	str	w0, [sp, #148]
   24be8:	ldr	x1, [sp, #128]
   24bec:	ldr	w0, [x19, #36]
   24bf0:	str	w0, [sp, #332]
   24bf4:	ldr	x0, [x19, #112]
   24bf8:	str	x0, [sp, #112]
   24bfc:	add	x0, x19, #0x48
   24c00:	bl	20648 <ZSTD_compress@@Base+0x11dfc>
   24c04:	ldr	x0, [sp, #128]
   24c08:	str	x0, [sp, #160]
   24c0c:	cmp	x0, x21
   24c10:	cinc	x21, x0, eq  // eq = none
   24c14:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   24c18:	add	x0, x0, #0x4c8
   24c1c:	add	x0, x0, #0x150
   24c20:	str	x0, [sp, #280]
   24c24:	ldr	x0, [sp, #224]
   24c28:	cmp	x0, x21
   24c2c:	b.hi	24d60 <ZSTD_compress@@Base+0x16514>  // b.pmore
   24c30:	ldr	x0, [sp, #104]
   24c34:	bl	a668 <ZSTD_toFlushNow@@Base+0x108>
   24c38:	ldr	x0, [x19, #8]
   24c3c:	add	x5, x19, #0x48
   24c40:	ldr	x1, [sp, #216]
   24c44:	sub	x0, x0, x1
   24c48:	ldr	w1, [sp, #216]
   24c4c:	str	x0, [x19, #8]
   24c50:	ldr	w0, [x19, #24]
   24c54:	add	w0, w0, w1
   24c58:	stp	w0, w0, [x19, #24]
   24c5c:	str	w0, [x19, #36]
   24c60:	ldr	w0, [x19, #168]
   24c64:	cmp	w0, #0x2
   24c68:	b.eq	24c7c <ZSTD_compress@@Base+0x16430>  // b.none
   24c6c:	ldr	x0, [x19, #72]
   24c70:	mov	w1, #0xff                  	// #255
   24c74:	bl	20614 <ZSTD_compress@@Base+0x11dc8>
   24c78:	str	w0, [x5, #48]
   24c7c:	ldr	x0, [x5, #8]
   24c80:	mov	w1, #0x23                  	// #35
   24c84:	bl	20614 <ZSTD_compress@@Base+0x11dc8>
   24c88:	str	w0, [x5, #52]
   24c8c:	ldr	x0, [x5, #16]
   24c90:	mov	w1, #0x34                  	// #52
   24c94:	bl	20614 <ZSTD_compress@@Base+0x11dc8>
   24c98:	str	w0, [x5, #56]
   24c9c:	ldr	x0, [x5, #24]
   24ca0:	mov	w1, #0x1f                  	// #31
   24ca4:	bl	20614 <ZSTD_compress@@Base+0x11dc8>
   24ca8:	str	w0, [x5, #60]
   24cac:	ldr	x21, [x19, #8]
   24cb0:	mov	w2, #0xfff                 	// #4095
   24cb4:	ldr	w0, [x19, #24]
   24cb8:	mov	w3, #0x2                   	// #2
   24cbc:	ldr	w1, [x19, #204]
   24cc0:	add	x21, x21, x0
   24cc4:	ldr	w0, [x19, #200]
   24cc8:	cmp	w1, #0xfff
   24ccc:	str	w0, [sp, #148]
   24cd0:	csel	w1, w1, w2, ls  // ls = plast
   24cd4:	mov	w0, w0
   24cd8:	str	w1, [sp, #232]
   24cdc:	cmp	w0, #0x3
   24ce0:	ldr	w1, [sp, #148]
   24ce4:	mov	w0, #0x4                   	// #4
   24ce8:	ldr	x2, [sp, #216]
   24cec:	csel	w0, w1, w0, eq  // eq = none
   24cf0:	str	w0, [sp, #148]
   24cf4:	ldr	w0, [x19, #36]
   24cf8:	ldr	x1, [x19, #112]
   24cfc:	str	x1, [sp, #112]
   24d00:	str	w0, [sp, #336]
   24d04:	ldr	x1, [sp, #128]
   24d08:	ldr	x0, [sp, #136]
   24d0c:	ldr	x22, [x19, #104]
   24d10:	bl	20648 <ZSTD_compress@@Base+0x11dfc>
   24d14:	ldr	x0, [sp, #128]
   24d18:	cmp	x0, x21
   24d1c:	cinc	x21, x0, eq  // eq = none
   24d20:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   24d24:	add	x0, x0, #0x4c8
   24d28:	add	x0, x0, #0x150
   24d2c:	str	x0, [sp, #264]
   24d30:	ldr	x0, [sp, #224]
   24d34:	cmp	x21, x0
   24d38:	b.cc	26c24 <ZSTD_compress@@Base+0x183d8>  // b.lo, b.ul, b.last
   24d3c:	ldr	x0, [sp, #128]
   24d40:	ldp	x21, x22, [sp, #32]
   24d44:	sub	x0, x20, x0
   24d48:	ldp	x19, x20, [sp, #16]
   24d4c:	ldp	x23, x24, [sp, #48]
   24d50:	ldp	x25, x26, [sp, #64]
   24d54:	ldp	x27, x28, [sp, #80]
   24d58:	ldp	x29, x30, [sp], #400
   24d5c:	ret
   24d60:	ldr	x25, [x19, #8]
   24d64:	ldr	w24, [x19, #36]
   24d68:	add	x0, x25, w24, uxtw
   24d6c:	cmp	x21, x0
   24d70:	b.cs	24d7c <ZSTD_compress@@Base+0x16530>  // b.hs, b.nlast
   24d74:	add	x21, x21, #0x1
   24d78:	b	24c24 <ZSTD_compress@@Base+0x163d8>
   24d7c:	sub	x26, x21, x25
   24d80:	ldr	w28, [x19, #200]
   24d84:	add	x23, x19, #0xb8
   24d88:	mov	w27, w26
   24d8c:	cmp	w27, w24
   24d90:	b.hi	24fa0 <ZSTD_compress@@Base+0x16754>  // b.pmore
   24d94:	ldr	x0, [sp, #160]
   24d98:	mov	w1, #0xfff                 	// #4095
   24d9c:	str	w26, [x19, #36]
   24da0:	sub	x0, x21, x0
   24da4:	str	x0, [sp, #192]
   24da8:	ldr	w5, [x19, #24]
   24dac:	ldr	w0, [sp, #192]
   24db0:	str	w0, [sp, #200]
   24db4:	cmp	w0, #0x0
   24db8:	cset	w0, eq  // eq = none
   24dbc:	str	w0, [sp, #152]
   24dc0:	ldr	w0, [x23, #20]
   24dc4:	ldr	x18, [x19, #48]
   24dc8:	cmp	w0, #0xfff
   24dcc:	csel	w0, w0, w1, ls  // ls = plast
   24dd0:	str	w0, [sp, #176]
   24dd4:	ldr	x0, [x19, #8]
   24dd8:	str	x0, [sp, #168]
   24ddc:	ldr	w1, [x23, #8]
   24de0:	cmp	w28, #0x5
   24de4:	sub	x11, x21, x0
   24de8:	str	w11, [sp, #184]
   24dec:	ldr	x12, [x19, #64]
   24df0:	b.eq	2565c <ZSTD_compress@@Base+0x16e10>  // b.none
   24df4:	b.hi	24fc0 <ZSTD_compress@@Base+0x16774>  // b.pmore
   24df8:	cmp	w28, #0x3
   24dfc:	b.eq	251f8 <ZSTD_compress@@Base+0x169ac>  // b.none
   24e00:	mov	x26, x21
   24e04:	mov	w13, #0x79b1                	// #31153
   24e08:	movk	w13, #0x9e37, lsl #16
   24e0c:	neg	w1, w1
   24e10:	ldr	w9, [x23, #4]
   24e14:	mov	w14, #0x1                   	// #1
   24e18:	ldr	w0, [x26], #4
   24e1c:	mov	w27, #0x4                   	// #4
   24e20:	str	w0, [sp, #208]
   24e24:	sub	w9, w9, #0x1
   24e28:	mov	w0, w0
   24e2c:	ldr	w2, [x19, #184]
   24e30:	lsl	w9, w14, w9
   24e34:	sub	w9, w9, #0x1
   24e38:	cmp	w9, w11
   24e3c:	mov	x28, #0x0                   	// #0
   24e40:	mul	w13, w0, w13
   24e44:	sub	w0, w11, w9
   24e48:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   24e4c:	str	w0, [sp, #248]
   24e50:	mov	x0, x19
   24e54:	lsr	w13, w13, w1
   24e58:	mov	w1, w11
   24e5c:	ubfiz	x13, x13, #2, #32
   24e60:	ldr	w8, [x18, x13]
   24e64:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   24e68:	cmp	w0, #0x0
   24e6c:	csel	w0, w0, w14, ne  // ne = any
   24e70:	str	w0, [sp, #232]
   24e74:	ldr	w0, [x23, #12]
   24e78:	and	w7, w9, w11
   24e7c:	ldrb	w23, [sp, #152]
   24e80:	add	w15, w11, #0x9
   24e84:	ubfiz	x7, x7, #3, #31
   24e88:	add	x4, sp, #0x150
   24e8c:	lsl	w14, w14, w0
   24e90:	ldr	w0, [sp, #148]
   24e94:	add	x24, x12, x7
   24e98:	add	x7, x7, #0x4
   24e9c:	sub	w25, w0, #0x1
   24ea0:	ldr	w0, [sp, #152]
   24ea4:	add	x7, x12, x7
   24ea8:	sub	w5, w11, w5
   24eac:	cmp	w0, #0x0
   24eb0:	mov	w0, #0x3                   	// #3
   24eb4:	csel	w27, w27, w0, ne  // ne = any
   24eb8:	mov	w10, #0x0                   	// #0
   24ebc:	mov	x6, #0x4                   	// #4
   24ec0:	cmp	w23, #0x3
   24ec4:	b.ne	25578 <ZSTD_compress@@Base+0x16d2c>  // b.any
   24ec8:	ldr	w0, [sp, #336]
   24ecc:	sub	w0, w0, #0x1
   24ed0:	sub	w1, w0, #0x1
   24ed4:	cmp	w1, w5
   24ed8:	b.cs	25580 <ZSTD_compress@@Base+0x16d34>  // b.hs, b.nlast
   24edc:	mov	w1, w0
   24ee0:	sub	x0, x21, w0, uxtw
   24ee4:	ldr	w2, [sp, #208]
   24ee8:	ldr	w0, [x0]
   24eec:	cmp	w2, w0
   24ef0:	b.ne	25580 <ZSTD_compress@@Base+0x16d34>  // b.any
   24ef4:	sub	x1, x6, x1
   24ef8:	mov	x2, x20
   24efc:	add	x1, x21, x1
   24f00:	mov	x0, x26
   24f04:	str	w5, [sp, #240]
   24f08:	str	x4, [sp, #256]
   24f0c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   24f10:	ldr	w5, [sp, #240]
   24f14:	add	w0, w0, #0x4
   24f18:	ldr	x4, [sp, #256]
   24f1c:	mov	x6, #0x4                   	// #4
   24f20:	mov	w1, w0
   24f24:	cmp	x25, w0, uxtw
   24f28:	b.cs	24f58 <ZSTD_compress@@Base+0x1670c>  // b.hs, b.nlast
   24f2c:	ubfiz	x2, x10, #3, #32
   24f30:	add	w10, w10, #0x1
   24f34:	add	x16, x22, x2
   24f38:	str	w28, [x22, x2]
   24f3c:	add	x2, x21, x1
   24f40:	cmp	x2, x20
   24f44:	ldr	w2, [sp, #176]
   24f48:	str	w0, [x16, #4]
   24f4c:	ccmp	w0, w2, #0x2, ne  // ne = any
   24f50:	b.hi	2548c <ZSTD_compress@@Base+0x16c40>  // b.pmore
   24f54:	mov	x25, x1
   24f58:	add	x23, x23, #0x1
   24f5c:	add	x28, x28, #0x1
   24f60:	cmp	w27, w23
   24f64:	b.hi	24ec0 <ZSTD_compress@@Base+0x16674>  // b.pmore
   24f68:	ldr	w0, [sp, #184]
   24f6c:	mov	x23, #0x0                   	// #0
   24f70:	str	w11, [x18, x13]
   24f74:	mov	x11, #0x0                   	// #0
   24f78:	add	w28, w0, #0x2
   24f7c:	cbz	w14, 24f8c <ZSTD_compress@@Base+0x16740>
   24f80:	ldr	w0, [sp, #232]
   24f84:	cmp	w0, w8
   24f88:	b.ls	25588 <ZSTD_compress@@Base+0x16d3c>  // b.plast
   24f8c:	str	wzr, [x7]
   24f90:	sub	w15, w15, #0x8
   24f94:	str	wzr, [x24]
   24f98:	str	w15, [x19, #36]
   24f9c:	b	2548c <ZSTD_compress@@Base+0x16c40>
   24fa0:	add	x1, x25, w24, uxtw
   24fa4:	mov	w3, w28
   24fa8:	mov	x2, x20
   24fac:	mov	x0, x19
   24fb0:	mov	w4, #0x0                   	// #0
   24fb4:	bl	2012c <ZSTD_compress@@Base+0x118e0>
   24fb8:	add	w24, w24, w0
   24fbc:	b	24d8c <ZSTD_compress@@Base+0x16540>
   24fc0:	sub	w7, w28, #0x6
   24fc4:	cmp	w7, #0x1
   24fc8:	b.hi	24e00 <ZSTD_compress@@Base+0x165b4>  // b.pmore
   24fcc:	mov	w2, #0x6                   	// #6
   24fd0:	mov	x0, x21
   24fd4:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   24fd8:	lsl	x25, x0, #2
   24fdc:	ldr	w9, [x23, #4]
   24fe0:	mov	w13, #0x1                   	// #1
   24fe4:	ldr	w2, [x19, #184]
   24fe8:	mov	w1, w11
   24fec:	sub	w9, w9, #0x1
   24ff0:	ldr	w8, [x18, x25]
   24ff4:	mov	w27, #0x4                   	// #4
   24ff8:	mov	x28, #0x0                   	// #0
   24ffc:	lsl	w9, w13, w9
   25000:	sub	w9, w9, #0x1
   25004:	cmp	w9, w11
   25008:	sub	w0, w11, w9
   2500c:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   25010:	str	w0, [sp, #208]
   25014:	mov	x0, x19
   25018:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   2501c:	cmp	w0, #0x0
   25020:	csel	w0, w0, w13, ne  // ne = any
   25024:	str	w0, [sp, #248]
   25028:	ldr	w0, [x23, #12]
   2502c:	and	w7, w9, w11
   25030:	ldrb	w23, [sp, #152]
   25034:	sub	w14, w11, w5
   25038:	ubfiz	x7, x7, #3, #31
   2503c:	mov	x4, #0x4                   	// #4
   25040:	lsl	w13, w13, w0
   25044:	ldr	w0, [sp, #148]
   25048:	add	x24, x12, x7
   2504c:	add	x7, x7, #0x4
   25050:	sub	w26, w0, #0x1
   25054:	ldr	w0, [sp, #152]
   25058:	add	x7, x12, x7
   2505c:	add	w15, w11, #0x9
   25060:	cmp	w0, #0x0
   25064:	add	x3, sp, #0x150
   25068:	mov	w0, #0x3                   	// #3
   2506c:	add	x5, x21, x4
   25070:	csel	w27, w27, w0, ne  // ne = any
   25074:	mov	w10, #0x0                   	// #0
   25078:	cmp	w23, #0x3
   2507c:	b.ne	258d4 <ZSTD_compress@@Base+0x17088>  // b.any
   25080:	ldr	w0, [sp, #336]
   25084:	sub	w0, w0, #0x1
   25088:	sub	w1, w0, #0x1
   2508c:	cmp	w1, w14
   25090:	b.cs	258dc <ZSTD_compress@@Base+0x17090>  // b.hs, b.nlast
   25094:	mov	w1, w0
   25098:	sub	x0, x21, w0, uxtw
   2509c:	ldr	w2, [x21]
   250a0:	ldr	w0, [x0]
   250a4:	cmp	w2, w0
   250a8:	b.ne	258dc <ZSTD_compress@@Base+0x17090>  // b.any
   250ac:	sub	x1, x4, x1
   250b0:	mov	x0, x5
   250b4:	mov	x2, x20
   250b8:	add	x1, x21, x1
   250bc:	stp	x5, x3, [sp, #232]
   250c0:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   250c4:	add	w0, w0, #0x4
   250c8:	ldp	x5, x3, [sp, #232]
   250cc:	mov	x4, #0x4                   	// #4
   250d0:	mov	w1, w0
   250d4:	cmp	x26, w0, uxtw
   250d8:	b.cs	25108 <ZSTD_compress@@Base+0x168bc>  // b.hs, b.nlast
   250dc:	ubfiz	x2, x10, #3, #32
   250e0:	add	w10, w10, #0x1
   250e4:	add	x6, x22, x2
   250e8:	str	w28, [x22, x2]
   250ec:	add	x2, x21, x1
   250f0:	cmp	x2, x20
   250f4:	ldr	w2, [sp, #176]
   250f8:	str	w0, [x6, #4]
   250fc:	ccmp	w0, w2, #0x2, ne  // ne = any
   25100:	b.hi	2548c <ZSTD_compress@@Base+0x16c40>  // b.pmore
   25104:	mov	x26, x1
   25108:	add	x23, x23, #0x1
   2510c:	add	x28, x28, #0x1
   25110:	cmp	w27, w23
   25114:	b.hi	25078 <ZSTD_compress@@Base+0x1682c>  // b.pmore
   25118:	ldr	w0, [sp, #184]
   2511c:	mov	x14, #0x0                   	// #0
   25120:	str	w11, [x18, x25]
   25124:	mov	x25, #0x0                   	// #0
   25128:	add	w11, w0, #0x2
   2512c:	cbz	w13, 24f8c <ZSTD_compress@@Base+0x16740>
   25130:	ldr	w0, [sp, #248]
   25134:	cmp	w0, w8
   25138:	b.hi	24f8c <ZSTD_compress@@Base+0x16740>  // b.pmore
   2513c:	and	w23, w9, w8
   25140:	cmp	x25, x14
   25144:	ldr	x0, [sp, #168]
   25148:	ubfiz	x23, x23, #3, #31
   2514c:	add	x18, x12, x23
   25150:	csel	x27, x25, x14, ls  // ls = plast
   25154:	mov	x2, x20
   25158:	add	x28, x0, w8, uxtw
   2515c:	add	x0, x21, x27
   25160:	add	x1, x28, x27
   25164:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   25168:	add	x27, x27, x0
   2516c:	cmp	x27, x26
   25170:	b.ls	251b4 <ZSTD_compress@@Base+0x16968>  // b.plast
   25174:	sub	w0, w15, w8
   25178:	mov	w2, w27
   2517c:	cmp	x27, x0
   25180:	b.ls	25188 <ZSTD_compress@@Base+0x1693c>  // b.plast
   25184:	add	w15, w8, w27
   25188:	ubfiz	x0, x10, #3, #32
   2518c:	sub	w3, w11, w8
   25190:	add	x1, x22, x0
   25194:	cmp	x27, #0x1, lsl #12
   25198:	add	w10, w10, #0x1
   2519c:	str	w3, [x22, x0]
   251a0:	add	x0, x21, x27
   251a4:	str	w2, [x1, #4]
   251a8:	ccmp	x0, x20, #0x4, ls  // ls = plast
   251ac:	b.eq	24f8c <ZSTD_compress@@Base+0x16740>  // b.none
   251b0:	mov	x26, x27
   251b4:	ldrb	w1, [x28, x27]
   251b8:	ldrb	w0, [x21, x27]
   251bc:	cmp	w1, w0
   251c0:	b.cs	258e4 <ZSTD_compress@@Base+0x17098>  // b.hs, b.nlast
   251c4:	ldr	w0, [sp, #208]
   251c8:	str	w8, [x24]
   251cc:	cmp	w8, w0
   251d0:	b.ls	258fc <ZSTD_compress@@Base+0x170b0>  // b.plast
   251d4:	ldr	w8, [x18, #4]
   251d8:	add	x24, x18, #0x4
   251dc:	mov	x25, x27
   251e0:	mov	x18, x7
   251e4:	mov	x27, x14
   251e8:	sub	w13, w13, #0x1
   251ec:	mov	x7, x18
   251f0:	mov	x14, x27
   251f4:	b	2512c <ZSTD_compress@@Base+0x168e0>
   251f8:	mov	x4, x21
   251fc:	mov	w24, #0x79b1                	// #31153
   25200:	movk	w24, #0x9e37, lsl #16
   25204:	neg	w1, w1
   25208:	ldr	w15, [x23, #4]
   2520c:	mov	w6, #0x1                   	// #1
   25210:	ldr	w9, [x4], #3
   25214:	sub	w15, w15, #0x1
   25218:	ldr	w2, [x19, #184]
   2521c:	str	x4, [sp, #232]
   25220:	lsl	w15, w6, w15
   25224:	sub	w15, w15, #0x1
   25228:	mul	w24, w9, w24
   2522c:	cmp	w15, w11
   25230:	sub	w0, w11, w15
   25234:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   25238:	str	w0, [sp, #248]
   2523c:	lsr	w24, w24, w1
   25240:	mov	x0, x19
   25244:	ubfiz	x24, x24, #2, #32
   25248:	mov	w1, w11
   2524c:	ldr	w14, [x18, x24]
   25250:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   25254:	cmp	w0, #0x0
   25258:	csel	w0, w0, w6, ne  // ne = any
   2525c:	and	w13, w15, w11
   25260:	str	w0, [sp, #208]
   25264:	add	w25, w11, #0x9
   25268:	ldr	w0, [sp, #148]
   2526c:	ubfiz	x13, x13, #3, #31
   25270:	ldr	w23, [x23, #12]
   25274:	add	x26, x12, x13
   25278:	sub	w27, w0, #0x1
   2527c:	ldr	w0, [sp, #152]
   25280:	add	x13, x13, #0x4
   25284:	ldrb	w8, [sp, #152]
   25288:	ldr	x4, [sp, #232]
   2528c:	cmp	w0, #0x0
   25290:	add	x13, x12, x13
   25294:	lsl	w9, w9, #8
   25298:	add	x3, sp, #0x150
   2529c:	sub	w5, w11, w5
   252a0:	mov	w7, #0x4                   	// #4
   252a4:	lsl	w23, w6, w23
   252a8:	csel	w7, w7, w28, ne  // ne = any
   252ac:	mov	w10, #0x0                   	// #0
   252b0:	mov	x6, #0x3                   	// #3
   252b4:	mov	x28, #0x0                   	// #0
   252b8:	cmp	w8, #0x3
   252bc:	b.ne	25440 <ZSTD_compress@@Base+0x16bf4>  // b.any
   252c0:	ldr	w0, [sp, #336]
   252c4:	sub	w0, w0, #0x1
   252c8:	sub	w1, w0, #0x1
   252cc:	cmp	w1, w5
   252d0:	b.cs	25448 <ZSTD_compress@@Base+0x16bfc>  // b.hs, b.nlast
   252d4:	mov	w1, w0
   252d8:	sub	x0, x21, w0, uxtw
   252dc:	ldr	w0, [x0]
   252e0:	cmp	w9, w0, lsl #8
   252e4:	b.ne	25448 <ZSTD_compress@@Base+0x16bfc>  // b.any
   252e8:	sub	x1, x6, x1
   252ec:	mov	x0, x4
   252f0:	mov	x2, x20
   252f4:	add	x1, x21, x1
   252f8:	str	x4, [sp, #232]
   252fc:	str	w5, [sp, #240]
   25300:	str	x3, [sp, #256]
   25304:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   25308:	ldr	w5, [sp, #240]
   2530c:	add	w0, w0, #0x3
   25310:	ldr	x4, [sp, #232]
   25314:	mov	x6, #0x3                   	// #3
   25318:	ldr	x3, [sp, #256]
   2531c:	mov	w1, w0
   25320:	cmp	x27, w0, uxtw
   25324:	b.cs	25354 <ZSTD_compress@@Base+0x16b08>  // b.hs, b.nlast
   25328:	ubfiz	x2, x10, #3, #32
   2532c:	add	w10, w10, #0x1
   25330:	add	x16, x22, x2
   25334:	str	w28, [x22, x2]
   25338:	add	x2, x21, x1
   2533c:	cmp	x2, x20
   25340:	ldr	w2, [sp, #176]
   25344:	str	w0, [x16, #4]
   25348:	ccmp	w0, w2, #0x2, ne  // ne = any
   2534c:	b.hi	2548c <ZSTD_compress@@Base+0x16c40>  // b.pmore
   25350:	mov	x27, x1
   25354:	add	x8, x8, #0x1
   25358:	add	x28, x28, #0x1
   2535c:	cmp	w7, w8
   25360:	b.hi	252b8 <ZSTD_compress@@Base+0x16a6c>  // b.pmore
   25364:	cmp	x27, #0x2
   25368:	b.ne	25458 <ZSTD_compress@@Base+0x16c0c>  // b.any
   2536c:	add	x1, sp, #0x14c
   25370:	mov	x2, x21
   25374:	mov	x0, x19
   25378:	bl	1ff88 <ZSTD_compress@@Base+0x1173c>
   2537c:	ldr	w1, [sp, #208]
   25380:	sub	w7, w11, w0
   25384:	cmp	w1, w0
   25388:	mov	w1, #0x3ffff               	// #262143
   2538c:	ccmp	w7, w1, #0x2, ls  // ls = plast
   25390:	b.hi	25458 <ZSTD_compress@@Base+0x16c0c>  // b.pmore
   25394:	ldr	x1, [sp, #168]
   25398:	mov	x2, x20
   2539c:	add	x1, x1, w0, uxtw
   253a0:	mov	x0, x21
   253a4:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   253a8:	cmp	x0, #0x2
   253ac:	b.ls	25458 <ZSTD_compress@@Base+0x16c0c>  // b.plast
   253b0:	add	w1, w7, #0x2
   253b4:	ldr	w2, [sp, #176]
   253b8:	stp	w1, w0, [x22]
   253bc:	add	x1, x21, x0
   253c0:	cmp	x1, x20
   253c4:	ccmp	x0, x2, #0x2, ne  // ne = any
   253c8:	b.ls	25450 <ZSTD_compress@@Base+0x16c04>  // b.plast
   253cc:	add	w11, w11, #0x1
   253d0:	mov	w10, #0x1                   	// #1
   253d4:	str	w11, [x19, #36]
   253d8:	ldr	x2, [sp, #112]
   253dc:	mov	w3, #0x2                   	// #2
   253e0:	ldr	x1, [sp, #336]
   253e4:	ldr	w0, [sp, #344]
   253e8:	str	x1, [x2, #16]
   253ec:	mov	x1, x2
   253f0:	ldr	x2, [sp, #136]
   253f4:	str	w0, [x1, #24]
   253f8:	mov	x0, x1
   253fc:	ldr	w1, [sp, #192]
   25400:	stp	wzr, w1, [x0, #8]
   25404:	ldr	x0, [sp, #160]
   25408:	bl	204f4 <ZSTD_compress@@Base+0x11ca8>
   2540c:	mov	w6, w0
   25410:	ldr	x0, [sp, #112]
   25414:	str	w6, [x0]
   25418:	sub	w0, w10, #0x1
   2541c:	lsl	x2, x0, #3
   25420:	add	x0, x22, x0, lsl #3
   25424:	ldr	w1, [x0, #4]
   25428:	ldr	w0, [sp, #252]
   2542c:	cmp	w0, w1
   25430:	b.cs	2590c <ZSTD_compress@@Base+0x170c0>  // b.hs, b.nlast
   25434:	ldr	w2, [x22, x2]
   25438:	mov	w0, #0x0                   	// #0
   2543c:	b	25b04 <ZSTD_compress@@Base+0x172b8>
   25440:	ldr	w0, [x3, x8, lsl #2]
   25444:	b	252c8 <ZSTD_compress@@Base+0x16a7c>
   25448:	mov	w0, #0x0                   	// #0
   2544c:	b	2531c <ZSTD_compress@@Base+0x16ad0>
   25450:	mov	x27, x0
   25454:	mov	w10, #0x1                   	// #1
   25458:	ldr	w0, [sp, #184]
   2545c:	mov	x7, #0x0                   	// #0
   25460:	str	w11, [x18, x24]
   25464:	mov	x11, #0x0                   	// #0
   25468:	add	w28, w0, #0x2
   2546c:	cbz	w23, 2547c <ZSTD_compress@@Base+0x16c30>
   25470:	ldr	w0, [sp, #208]
   25474:	cmp	w0, w14
   25478:	b.ls	25494 <ZSTD_compress@@Base+0x16c48>  // b.plast
   2547c:	str	wzr, [x13]
   25480:	sub	w25, w25, #0x8
   25484:	str	wzr, [x26]
   25488:	str	w25, [x19, #36]
   2548c:	cbz	w10, 24d74 <ZSTD_compress@@Base+0x16528>
   25490:	b	253d8 <ZSTD_compress@@Base+0x16b8c>
   25494:	and	w9, w15, w14
   25498:	cmp	x11, x7
   2549c:	ldr	x0, [sp, #168]
   254a0:	ubfiz	x9, x9, #3, #31
   254a4:	csel	x18, x11, x7, ls  // ls = plast
   254a8:	add	x8, x12, x9
   254ac:	mov	x2, x20
   254b0:	add	x24, x0, w14, uxtw
   254b4:	add	x0, x21, x18
   254b8:	add	x1, x24, x18
   254bc:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   254c0:	add	x18, x18, x0
   254c4:	cmp	x18, x27
   254c8:	b.ls	2550c <ZSTD_compress@@Base+0x16cc0>  // b.plast
   254cc:	sub	w0, w25, w14
   254d0:	mov	w2, w18
   254d4:	cmp	x18, x0
   254d8:	b.ls	254e0 <ZSTD_compress@@Base+0x16c94>  // b.plast
   254dc:	add	w25, w14, w18
   254e0:	ubfiz	x0, x10, #3, #32
   254e4:	sub	w3, w28, w14
   254e8:	add	x1, x22, x0
   254ec:	cmp	x18, #0x1, lsl #12
   254f0:	add	w10, w10, #0x1
   254f4:	str	w3, [x22, x0]
   254f8:	add	x0, x21, x18
   254fc:	str	w2, [x1, #4]
   25500:	ccmp	x0, x20, #0x4, ls  // ls = plast
   25504:	b.eq	2547c <ZSTD_compress@@Base+0x16c30>  // b.none
   25508:	mov	x27, x18
   2550c:	ldrb	w1, [x24, x18]
   25510:	ldrb	w0, [x21, x18]
   25514:	cmp	w1, w0
   25518:	b.cs	25550 <ZSTD_compress@@Base+0x16d04>  // b.hs, b.nlast
   2551c:	ldr	w0, [sp, #248]
   25520:	str	w14, [x26]
   25524:	cmp	w14, w0
   25528:	b.ls	25568 <ZSTD_compress@@Base+0x16d1c>  // b.plast
   2552c:	ldr	w14, [x8, #4]
   25530:	add	x26, x8, #0x4
   25534:	mov	x11, x18
   25538:	mov	x8, x13
   2553c:	mov	x18, x7
   25540:	sub	w23, w23, #0x1
   25544:	mov	x13, x8
   25548:	mov	x7, x18
   2554c:	b	2546c <ZSTD_compress@@Base+0x16c20>
   25550:	ldr	w0, [sp, #248]
   25554:	str	w14, [x13]
   25558:	cmp	w14, w0
   2555c:	b.ls	25570 <ZSTD_compress@@Base+0x16d24>  // b.plast
   25560:	ldr	w14, [x12, x9]
   25564:	b	25540 <ZSTD_compress@@Base+0x16cf4>
   25568:	add	x26, sp, #0x160
   2556c:	b	2547c <ZSTD_compress@@Base+0x16c30>
   25570:	add	x13, sp, #0x160
   25574:	b	2547c <ZSTD_compress@@Base+0x16c30>
   25578:	ldr	w0, [x4, x23, lsl #2]
   2557c:	b	24ed0 <ZSTD_compress@@Base+0x16684>
   25580:	mov	w0, #0x0                   	// #0
   25584:	b	24f20 <ZSTD_compress@@Base+0x166d4>
   25588:	and	w18, w9, w8
   2558c:	cmp	x23, x11
   25590:	ldr	x0, [sp, #168]
   25594:	ubfiz	x18, x18, #3, #31
   25598:	add	x13, x12, x18
   2559c:	csel	x26, x23, x11, ls  // ls = plast
   255a0:	mov	x2, x20
   255a4:	add	x27, x0, w8, uxtw
   255a8:	add	x0, x21, x26
   255ac:	add	x1, x27, x26
   255b0:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   255b4:	add	x26, x26, x0
   255b8:	cmp	x26, x25
   255bc:	b.ls	25600 <ZSTD_compress@@Base+0x16db4>  // b.plast
   255c0:	sub	w0, w15, w8
   255c4:	mov	w2, w26
   255c8:	cmp	x26, x0
   255cc:	b.ls	255d4 <ZSTD_compress@@Base+0x16d88>  // b.plast
   255d0:	add	w15, w8, w26
   255d4:	ubfiz	x0, x10, #3, #32
   255d8:	sub	w3, w28, w8
   255dc:	add	x1, x22, x0
   255e0:	cmp	x26, #0x1, lsl #12
   255e4:	add	w10, w10, #0x1
   255e8:	str	w3, [x22, x0]
   255ec:	add	x0, x21, x26
   255f0:	str	w2, [x1, #4]
   255f4:	ccmp	x0, x20, #0x4, ls  // ls = plast
   255f8:	b.eq	24f8c <ZSTD_compress@@Base+0x16740>  // b.none
   255fc:	mov	x25, x26
   25600:	ldrb	w1, [x27, x26]
   25604:	ldrb	w0, [x21, x26]
   25608:	cmp	w1, w0
   2560c:	b.cs	25644 <ZSTD_compress@@Base+0x16df8>  // b.hs, b.nlast
   25610:	ldr	w0, [sp, #248]
   25614:	str	w8, [x24]
   25618:	cmp	w8, w0
   2561c:	b.ls	258fc <ZSTD_compress@@Base+0x170b0>  // b.plast
   25620:	ldr	w8, [x13, #4]
   25624:	add	x24, x13, #0x4
   25628:	mov	x23, x26
   2562c:	mov	x13, x7
   25630:	mov	x26, x11
   25634:	sub	w14, w14, #0x1
   25638:	mov	x7, x13
   2563c:	mov	x11, x26
   25640:	b	24f7c <ZSTD_compress@@Base+0x16730>
   25644:	ldr	w0, [sp, #248]
   25648:	str	w8, [x7]
   2564c:	cmp	w8, w0
   25650:	b.ls	25904 <ZSTD_compress@@Base+0x170b8>  // b.plast
   25654:	ldr	w8, [x12, x18]
   25658:	b	25634 <ZSTD_compress@@Base+0x16de8>
   2565c:	mov	w2, w28
   25660:	mov	x0, x21
   25664:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   25668:	lsl	x25, x0, #2
   2566c:	ldr	w9, [x23, #4]
   25670:	mov	w13, #0x1                   	// #1
   25674:	ldr	w2, [x19, #184]
   25678:	mov	w1, w11
   2567c:	sub	w9, w9, #0x1
   25680:	ldr	w8, [x18, x25]
   25684:	mov	w26, #0x4                   	// #4
   25688:	mov	x27, #0x0                   	// #0
   2568c:	lsl	w9, w13, w9
   25690:	sub	w9, w9, #0x1
   25694:	cmp	w9, w11
   25698:	sub	w0, w11, w9
   2569c:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   256a0:	str	w0, [sp, #208]
   256a4:	mov	x0, x19
   256a8:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   256ac:	cmp	w0, #0x0
   256b0:	csel	w0, w0, w13, ne  // ne = any
   256b4:	str	w0, [sp, #248]
   256b8:	ldr	w0, [x23, #12]
   256bc:	and	w7, w9, w11
   256c0:	ldrb	w15, [sp, #152]
   256c4:	sub	w28, w11, w5
   256c8:	ubfiz	x7, x7, #3, #31
   256cc:	mov	x4, #0x4                   	// #4
   256d0:	lsl	w13, w13, w0
   256d4:	ldr	w0, [sp, #148]
   256d8:	add	x24, x12, x7
   256dc:	add	x7, x7, #0x4
   256e0:	sub	w23, w0, #0x1
   256e4:	ldr	w0, [sp, #152]
   256e8:	add	x7, x12, x7
   256ec:	add	w14, w11, #0x9
   256f0:	cmp	w0, #0x0
   256f4:	add	x3, sp, #0x150
   256f8:	mov	w0, #0x3                   	// #3
   256fc:	add	x5, x21, x4
   25700:	csel	w26, w26, w0, ne  // ne = any
   25704:	mov	w10, #0x0                   	// #0
   25708:	cmp	w15, #0x3
   2570c:	b.ne	257e0 <ZSTD_compress@@Base+0x16f94>  // b.any
   25710:	ldr	w0, [sp, #336]
   25714:	sub	w0, w0, #0x1
   25718:	sub	w1, w0, #0x1
   2571c:	cmp	w1, w28
   25720:	b.cs	257e8 <ZSTD_compress@@Base+0x16f9c>  // b.hs, b.nlast
   25724:	mov	w1, w0
   25728:	sub	x0, x21, w0, uxtw
   2572c:	ldr	w2, [x21]
   25730:	ldr	w0, [x0]
   25734:	cmp	w2, w0
   25738:	b.ne	257e8 <ZSTD_compress@@Base+0x16f9c>  // b.any
   2573c:	sub	x1, x4, x1
   25740:	mov	x0, x5
   25744:	mov	x2, x20
   25748:	add	x1, x21, x1
   2574c:	stp	x5, x3, [sp, #232]
   25750:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   25754:	add	w0, w0, #0x4
   25758:	ldp	x5, x3, [sp, #232]
   2575c:	mov	x4, #0x4                   	// #4
   25760:	mov	w1, w0
   25764:	cmp	x23, w0, uxtw
   25768:	b.cs	25798 <ZSTD_compress@@Base+0x16f4c>  // b.hs, b.nlast
   2576c:	ubfiz	x2, x10, #3, #32
   25770:	add	w10, w10, #0x1
   25774:	add	x6, x22, x2
   25778:	str	w27, [x22, x2]
   2577c:	add	x2, x21, x1
   25780:	cmp	x2, x20
   25784:	ldr	w2, [sp, #176]
   25788:	str	w0, [x6, #4]
   2578c:	ccmp	w0, w2, #0x2, ne  // ne = any
   25790:	b.hi	2548c <ZSTD_compress@@Base+0x16c40>  // b.pmore
   25794:	mov	x23, x1
   25798:	add	x15, x15, #0x1
   2579c:	add	x27, x27, #0x1
   257a0:	cmp	w26, w15
   257a4:	b.hi	25708 <ZSTD_compress@@Base+0x16ebc>  // b.pmore
   257a8:	ldr	w0, [sp, #184]
   257ac:	str	w11, [x18, x25]
   257b0:	mov	x11, #0x0                   	// #0
   257b4:	add	w28, w0, #0x2
   257b8:	mov	x25, #0x0                   	// #0
   257bc:	cbz	w13, 257cc <ZSTD_compress@@Base+0x16f80>
   257c0:	ldr	w0, [sp, #248]
   257c4:	cmp	w0, w8
   257c8:	b.ls	257f0 <ZSTD_compress@@Base+0x16fa4>  // b.plast
   257cc:	str	wzr, [x7]
   257d0:	sub	w14, w14, #0x8
   257d4:	str	wzr, [x24]
   257d8:	str	w14, [x19, #36]
   257dc:	b	2548c <ZSTD_compress@@Base+0x16c40>
   257e0:	ldr	w0, [x3, x15, lsl #2]
   257e4:	b	25718 <ZSTD_compress@@Base+0x16ecc>
   257e8:	mov	w0, #0x0                   	// #0
   257ec:	b	25760 <ZSTD_compress@@Base+0x16f14>
   257f0:	and	w18, w9, w8
   257f4:	cmp	x25, x11
   257f8:	ldr	x0, [sp, #168]
   257fc:	ubfiz	x18, x18, #3, #31
   25800:	add	x15, x12, x18
   25804:	csel	x26, x25, x11, ls  // ls = plast
   25808:	mov	x2, x20
   2580c:	add	x27, x0, w8, uxtw
   25810:	add	x0, x21, x26
   25814:	add	x1, x27, x26
   25818:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2581c:	add	x26, x26, x0
   25820:	cmp	x26, x23
   25824:	b.ls	25868 <ZSTD_compress@@Base+0x1701c>  // b.plast
   25828:	sub	w0, w14, w8
   2582c:	mov	w2, w26
   25830:	cmp	x26, x0
   25834:	b.ls	2583c <ZSTD_compress@@Base+0x16ff0>  // b.plast
   25838:	add	w14, w8, w26
   2583c:	ubfiz	x0, x10, #3, #32
   25840:	sub	w3, w28, w8
   25844:	add	x1, x22, x0
   25848:	cmp	x26, #0x1, lsl #12
   2584c:	add	w10, w10, #0x1
   25850:	str	w3, [x22, x0]
   25854:	add	x0, x21, x26
   25858:	str	w2, [x1, #4]
   2585c:	ccmp	x0, x20, #0x4, ls  // ls = plast
   25860:	b.eq	257cc <ZSTD_compress@@Base+0x16f80>  // b.none
   25864:	mov	x23, x26
   25868:	ldrb	w1, [x27, x26]
   2586c:	ldrb	w0, [x21, x26]
   25870:	cmp	w1, w0
   25874:	b.cs	258ac <ZSTD_compress@@Base+0x17060>  // b.hs, b.nlast
   25878:	ldr	w0, [sp, #208]
   2587c:	str	w8, [x24]
   25880:	cmp	w8, w0
   25884:	b.ls	258c4 <ZSTD_compress@@Base+0x17078>  // b.plast
   25888:	ldr	w8, [x15, #4]
   2588c:	add	x24, x15, #0x4
   25890:	mov	x25, x26
   25894:	mov	x15, x7
   25898:	mov	x26, x11
   2589c:	sub	w13, w13, #0x1
   258a0:	mov	x7, x15
   258a4:	mov	x11, x26
   258a8:	b	257bc <ZSTD_compress@@Base+0x16f70>
   258ac:	ldr	w0, [sp, #208]
   258b0:	str	w8, [x7]
   258b4:	cmp	w8, w0
   258b8:	b.ls	258cc <ZSTD_compress@@Base+0x17080>  // b.plast
   258bc:	ldr	w8, [x12, x18]
   258c0:	b	2589c <ZSTD_compress@@Base+0x17050>
   258c4:	add	x24, sp, #0x160
   258c8:	b	257cc <ZSTD_compress@@Base+0x16f80>
   258cc:	add	x7, sp, #0x160
   258d0:	b	257cc <ZSTD_compress@@Base+0x16f80>
   258d4:	ldr	w0, [x3, x23, lsl #2]
   258d8:	b	25088 <ZSTD_compress@@Base+0x1683c>
   258dc:	mov	w0, #0x0                   	// #0
   258e0:	b	250d0 <ZSTD_compress@@Base+0x16884>
   258e4:	ldr	w0, [sp, #208]
   258e8:	str	w8, [x7]
   258ec:	cmp	w8, w0
   258f0:	b.ls	25904 <ZSTD_compress@@Base+0x170b8>  // b.plast
   258f4:	ldr	w8, [x12, x23]
   258f8:	b	251e8 <ZSTD_compress@@Base+0x1699c>
   258fc:	add	x24, sp, #0x160
   25900:	b	24f8c <ZSTD_compress@@Base+0x16740>
   25904:	add	x7, sp, #0x160
   25908:	b	24f8c <ZSTD_compress@@Base+0x16740>
   2590c:	ldr	x1, [sp, #136]
   25910:	mov	w2, #0x2                   	// #2
   25914:	mov	w0, #0x0                   	// #0
   25918:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   2591c:	add	w6, w6, w0
   25920:	ldr	x1, [sp, #112]
   25924:	mov	w0, #0x40000000            	// #1073741824
   25928:	str	w0, [x1, #28]
   2592c:	str	w0, [x1, #56]
   25930:	ldr	w1, [sp, #148]
   25934:	cmp	w1, #0x4
   25938:	b.ne	25944 <ZSTD_compress@@Base+0x170f8>  // b.any
   2593c:	ldr	x1, [sp, #112]
   25940:	str	w0, [x1, #84]
   25944:	ldr	w5, [sp, #148]
   25948:	mov	x8, x22
   2594c:	add	x12, sp, #0x150
   25950:	mov	w9, #0x0                   	// #0
   25954:	ldp	w11, w13, [x8]
   25958:	mov	x0, x12
   2595c:	ldr	w2, [sp, #152]
   25960:	mov	w1, w11
   25964:	bl	205a8 <ZSTD_compress@@Base+0x11d5c>
   25968:	add	w2, w11, #0x1
   2596c:	clz	w2, w2
   25970:	mov	w18, #0x1c                  	// #28
   25974:	eor	w2, w2, #0x1f
   25978:	str	w0, [sp, #352]
   2597c:	add	w14, w2, #0x10
   25980:	lsr	x0, x0, #32
   25984:	sbfiz	x15, x2, #2, #32
   25988:	str	w0, [sp, #356]
   2598c:	lsl	w14, w14, #8
   25990:	str	w1, [sp, #360]
   25994:	cmp	w13, w5
   25998:	b.cs	25bac <ZSTD_compress@@Base+0x17360>  // b.hs, b.nlast
   2599c:	add	w9, w9, #0x1
   259a0:	add	x8, x8, #0x8
   259a4:	cmp	w10, w9
   259a8:	b.ne	25954 <ZSTD_compress@@Base+0x17108>  // b.any
   259ac:	sub	w0, w5, #0x1
   259b0:	str	w0, [sp, #176]
   259b4:	mov	w0, #0x1                   	// #1
   259b8:	str	w0, [sp, #168]
   259bc:	ldr	w1, [sp, #176]
   259c0:	ldr	w0, [sp, #168]
   259c4:	cmp	w0, w1
   259c8:	b.hi	25ab4 <ZSTD_compress@@Base+0x17268>  // b.pmore
   259cc:	ldr	w0, [sp, #168]
   259d0:	mov	w1, #0x1c                  	// #28
   259d4:	sub	w9, w0, #0x1
   259d8:	add	x23, x21, w0, uxtw
   259dc:	umull	x9, w9, w1
   259e0:	ldr	x1, [sp, #112]
   259e4:	add	x8, x1, x9
   259e8:	ldr	w1, [x8, #8]
   259ec:	cbnz	w1, 25c5c <ZSTD_compress@@Base+0x17410>
   259f0:	ldr	w7, [x8, #12]
   259f4:	add	w7, w7, #0x1
   259f8:	ldr	x2, [sp, #136]
   259fc:	sub	x0, x0, #0x1
   25a00:	mov	w3, #0x2                   	// #2
   25a04:	mov	w1, #0x1                   	// #1
   25a08:	add	x0, x21, x0
   25a0c:	bl	20464 <ZSTD_compress@@Base+0x11c18>
   25a10:	mov	w5, w0
   25a14:	ldr	x1, [sp, #136]
   25a18:	mov	w0, w7
   25a1c:	mov	w2, #0x2                   	// #2
   25a20:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   25a24:	add	w5, w5, w0
   25a28:	ldr	x1, [sp, #136]
   25a2c:	mov	w2, #0x2                   	// #2
   25a30:	sub	w0, w7, #0x1
   25a34:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   25a38:	ldr	x1, [sp, #112]
   25a3c:	ldr	w2, [sp, #168]
   25a40:	ldr	w1, [x1, x9]
   25a44:	sub	w0, w1, w0
   25a48:	mov	w1, #0x1c                  	// #28
   25a4c:	add	w0, w0, w5
   25a50:	umull	x1, w2, w1
   25a54:	ldr	x2, [sp, #112]
   25a58:	add	x2, x2, x1
   25a5c:	str	x2, [sp, #152]
   25a60:	ldr	x2, [sp, #112]
   25a64:	ldr	w2, [x2, x1]
   25a68:	cmp	w0, w2
   25a6c:	b.gt	25a98 <ZSTD_compress@@Base+0x1724c>
   25a70:	ldr	x2, [sp, #152]
   25a74:	stur	xzr, [x2, #4]
   25a78:	str	w7, [x2, #12]
   25a7c:	ldr	x2, [sp, #112]
   25a80:	str	w0, [x2, x1]
   25a84:	ldr	x2, [sp, #152]
   25a88:	ldr	x0, [x8, #16]
   25a8c:	str	x0, [x2, #16]
   25a90:	ldr	w0, [x8, #24]
   25a94:	str	w0, [x2, #24]
   25a98:	ldr	x0, [sp, #224]
   25a9c:	cmp	x0, x23
   25aa0:	b.cc	263f8 <ZSTD_compress@@Base+0x17bac>  // b.lo, b.ul, b.last
   25aa4:	ldr	w0, [sp, #168]
   25aa8:	ldr	w2, [sp, #176]
   25aac:	cmp	w0, w2
   25ab0:	b.ne	25c64 <ZSTD_compress@@Base+0x17418>  // b.any
   25ab4:	ldr	w1, [sp, #176]
   25ab8:	mov	w0, #0x1c                  	// #28
   25abc:	ldr	x2, [sp, #112]
   25ac0:	ldr	w4, [sp, #176]
   25ac4:	umaddl	x0, w1, w0, x2
   25ac8:	ldp	x2, x3, [x0]
   25acc:	stp	x2, x3, [sp, #368]
   25ad0:	ldr	w2, [x0, #4]
   25ad4:	ldr	x1, [x0, #16]
   25ad8:	str	x1, [sp, #384]
   25adc:	ldr	w1, [x0, #24]
   25ae0:	str	w1, [sp, #392]
   25ae4:	ldp	w1, w0, [x0, #8]
   25ae8:	str	w0, [sp, #200]
   25aec:	mov	w0, w0
   25af0:	add	w3, w1, w0
   25af4:	ldr	w0, [sp, #176]
   25af8:	cmp	w4, w3
   25afc:	sub	w0, w0, w3
   25b00:	csel	w0, w0, wzr, hi  // hi = pmore
   25b04:	str	w2, [sp, #372]
   25b08:	add	w25, w0, #0x1
   25b0c:	str	w1, [sp, #376]
   25b10:	mov	w10, w25
   25b14:	ldr	w1, [sp, #200]
   25b18:	ldr	x2, [sp, #112]
   25b1c:	str	w1, [sp, #380]
   25b20:	mov	w1, #0x1c                  	// #28
   25b24:	ldr	x3, [sp, #384]
   25b28:	umaddl	x2, w25, w1, x2
   25b2c:	ldp	x4, x5, [sp, #368]
   25b30:	str	x3, [x2, #16]
   25b34:	ldr	w3, [sp, #392]
   25b38:	stp	x4, x5, [x2]
   25b3c:	str	w3, [x2, #24]
   25b40:	cbz	w0, 25b80 <ZSTD_compress@@Base+0x17334>
   25b44:	ldr	x2, [sp, #112]
   25b48:	sub	w10, w10, #0x1
   25b4c:	umaddl	x4, w0, w1, x2
   25b50:	ldp	w5, w2, [x4, #8]
   25b54:	add	w5, w5, w2
   25b58:	ldr	x2, [sp, #112]
   25b5c:	cmp	w0, w5
   25b60:	umaddl	x6, w10, w1, x2
   25b64:	ldp	x2, x3, [x4]
   25b68:	stp	x2, x3, [x6]
   25b6c:	ldr	x2, [x4, #16]
   25b70:	str	x2, [x6, #16]
   25b74:	ldr	w2, [x4, #24]
   25b78:	str	w2, [x6, #24]
   25b7c:	b.hi	26a50 <ZSTD_compress@@Base+0x18204>  // b.pmore
   25b80:	mov	x13, #0xffff                	// #65535
   25b84:	sub	x12, x20, #0x20
   25b88:	mov	w15, w13
   25b8c:	add	x18, sp, #0x150
   25b90:	mov	w14, #0x1c                  	// #28
   25b94:	cmp	w25, w10
   25b98:	b.cs	26a58 <ZSTD_compress@@Base+0x1820c>  // b.hs, b.nlast
   25b9c:	ldr	x0, [sp, #136]
   25ba0:	mov	w1, #0x2                   	// #2
   25ba4:	bl	203b8 <ZSTD_compress@@Base+0x11b6c>
   25ba8:	b	24c24 <ZSTD_compress@@Base+0x163d8>
   25bac:	ldr	w0, [x19, #152]
   25bb0:	add	x7, x19, #0x48
   25bb4:	sub	w23, w5, #0x3
   25bb8:	cmp	w0, #0x1
   25bbc:	b.ne	25c08 <ZSTD_compress@@Base+0x173bc>  // b.any
   25bc0:	mov	w0, w23
   25bc4:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   25bc8:	add	w0, w14, w0
   25bcc:	ldr	x1, [sp, #112]
   25bd0:	umull	x3, w5, w18
   25bd4:	ldr	w4, [sp, #200]
   25bd8:	add	w0, w6, w0
   25bdc:	add	x1, x1, x3
   25be0:	str	w4, [x1, #12]
   25be4:	ldr	x4, [sp, #112]
   25be8:	stp	w11, w5, [x1, #4]
   25bec:	add	w5, w5, #0x1
   25bf0:	str	w0, [x4, x3]
   25bf4:	ldr	x0, [sp, #352]
   25bf8:	str	x0, [x1, #16]
   25bfc:	ldr	w0, [sp, #360]
   25c00:	str	w0, [x1, #24]
   25c04:	b	25994 <ZSTD_compress@@Base+0x17148>
   25c08:	ldr	x0, [x7, #24]
   25c0c:	ldr	w0, [x0, x15]
   25c10:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   25c14:	mov	w4, w0
   25c18:	mov	w0, w23
   25c1c:	bl	2043c <ZSTD_compress@@Base+0x11bf0>
   25c20:	mov	w23, w0
   25c24:	ldp	w1, w3, [x7, #72]
   25c28:	add	w3, w3, w1
   25c2c:	ldr	x1, [x7, #16]
   25c30:	ldr	w0, [x1, w0, uxtw #2]
   25c34:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   25c38:	add	w0, w4, w0
   25c3c:	ldr	x1, [sp, #280]
   25c40:	sub	w0, w3, w0
   25c44:	ldr	w1, [x1, x23, lsl #2]
   25c48:	add	w1, w2, w1
   25c4c:	lsl	w1, w1, #8
   25c50:	add	w1, w1, #0x33
   25c54:	add	w0, w1, w0
   25c58:	b	25bcc <ZSTD_compress@@Base+0x17380>
   25c5c:	mov	w7, #0x1                   	// #1
   25c60:	b	259f8 <ZSTD_compress@@Base+0x171ac>
   25c64:	ldr	x0, [sp, #152]
   25c68:	ldr	w24, [x0, #8]
   25c6c:	cbnz	w24, 25ed8 <ZSTD_compress@@Base+0x1768c>
   25c70:	ldr	w0, [x0, #12]
   25c74:	str	w0, [sp, #200]
   25c78:	ldr	x26, [x19, #8]
   25c7c:	ldr	w25, [x19, #36]
   25c80:	add	x0, x26, w25, uxtw
   25c84:	cmp	x23, x0
   25c88:	b.cc	263f8 <ZSTD_compress@@Base+0x17bac>  // b.lo, b.ul, b.last
   25c8c:	ldr	x0, [sp, #112]
   25c90:	sub	x28, x23, x26
   25c94:	mov	w2, #0x2                   	// #2
   25c98:	ldr	w0, [x0, x1]
   25c9c:	ldr	x1, [sp, #136]
   25ca0:	str	w0, [sp, #288]
   25ca4:	mov	w0, #0x0                   	// #0
   25ca8:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   25cac:	ldr	w27, [x19, #200]
   25cb0:	mov	w5, w28
   25cb4:	str	w0, [sp, #296]
   25cb8:	cmp	w5, w25
   25cbc:	b.hi	25ee0 <ZSTD_compress@@Base+0x17694>  // b.pmore
   25cc0:	cmp	w24, #0x0
   25cc4:	add	x5, x19, #0xb8
   25cc8:	cset	w0, ne  // ne = any
   25ccc:	str	w0, [sp, #184]
   25cd0:	ldr	x0, [sp, #152]
   25cd4:	mov	w1, #0xfff                 	// #4095
   25cd8:	str	w28, [x19, #36]
   25cdc:	add	x0, x0, #0x10
   25ce0:	str	x0, [sp, #232]
   25ce4:	ldr	w0, [x5, #20]
   25ce8:	cmp	w0, #0xfff
   25cec:	csel	w0, w0, w1, ls  // ls = plast
   25cf0:	str	w0, [sp, #248]
   25cf4:	ldr	x0, [x19, #8]
   25cf8:	str	x0, [sp, #208]
   25cfc:	ldr	w1, [x5, #8]
   25d00:	cmp	w27, #0x5
   25d04:	sub	x11, x23, x0
   25d08:	str	w11, [sp, #240]
   25d0c:	ldr	x0, [x19, #48]
   25d10:	str	x0, [sp, #192]
   25d14:	b.eq	265ec <ZSTD_compress@@Base+0x17da0>  // b.none
   25d18:	b.hi	25f08 <ZSTD_compress@@Base+0x176bc>  // b.pmore
   25d1c:	cmp	w27, #0x3
   25d20:	b.eq	26164 <ZSTD_compress@@Base+0x17918>  // b.none
   25d24:	mov	x28, x23
   25d28:	mov	w12, #0x79b1                	// #31153
   25d2c:	movk	w12, #0x9e37, lsl #16
   25d30:	neg	w1, w1
   25d34:	ldp	w2, w9, [x19, #184]
   25d38:	mov	w13, #0x1                   	// #1
   25d3c:	ldr	w0, [x28], #4
   25d40:	mov	w26, #0x4                   	// #4
   25d44:	str	w0, [sp, #256]
   25d48:	sub	w9, w9, #0x1
   25d4c:	mov	w0, w0
   25d50:	ldr	w6, [x19, #24]
   25d54:	lsl	w9, w13, w9
   25d58:	sub	w9, w9, #0x1
   25d5c:	cmp	w9, w11
   25d60:	mov	x27, #0x0                   	// #0
   25d64:	mul	w12, w0, w12
   25d68:	ldr	x0, [sp, #192]
   25d6c:	lsr	w12, w12, w1
   25d70:	mov	w1, w11
   25d74:	ubfiz	x12, x12, #2, #32
   25d78:	ldr	x24, [x19, #64]
   25d7c:	ldr	w8, [x0, x12]
   25d80:	sub	w0, w11, w9
   25d84:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   25d88:	str	w0, [sp, #264]
   25d8c:	mov	x0, x19
   25d90:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   25d94:	cmp	w0, #0x0
   25d98:	csel	w0, w0, w13, ne  // ne = any
   25d9c:	str	w0, [sp, #272]
   25da0:	ldr	w0, [x19, #196]
   25da4:	and	w7, w9, w11
   25da8:	ldrb	w15, [sp, #184]
   25dac:	add	w14, w11, #0x9
   25db0:	ubfiz	x7, x7, #3, #31
   25db4:	sub	w6, w11, w6
   25db8:	lsl	w13, w13, w0
   25dbc:	ldr	w0, [sp, #148]
   25dc0:	add	x18, x24, x7
   25dc4:	add	x7, x7, #0x4
   25dc8:	sub	w25, w0, #0x1
   25dcc:	ldr	w0, [sp, #184]
   25dd0:	add	x7, x24, x7
   25dd4:	mov	w10, #0x0                   	// #0
   25dd8:	cmp	w0, #0x0
   25ddc:	mov	w0, #0x3                   	// #3
   25de0:	csel	w26, w26, w0, ne  // ne = any
   25de4:	mov	x3, #0x4                   	// #4
   25de8:	ldr	x0, [sp, #152]
   25dec:	add	x5, x0, #0x10
   25df0:	cmp	w15, #0x3
   25df4:	b.ne	264f0 <ZSTD_compress@@Base+0x17ca4>  // b.any
   25df8:	ldr	x0, [sp, #152]
   25dfc:	ldr	w0, [x0, #16]
   25e00:	sub	w0, w0, #0x1
   25e04:	sub	w1, w0, #0x1
   25e08:	cmp	w1, w6
   25e0c:	b.cs	264f8 <ZSTD_compress@@Base+0x17cac>  // b.hs, b.nlast
   25e10:	mov	w1, w0
   25e14:	sub	x0, x23, w0, uxtw
   25e18:	ldr	w2, [sp, #256]
   25e1c:	ldr	w0, [x0]
   25e20:	cmp	w2, w0
   25e24:	b.ne	264f8 <ZSTD_compress@@Base+0x17cac>  // b.any
   25e28:	sub	x1, x3, x1
   25e2c:	mov	x2, x20
   25e30:	add	x1, x23, x1
   25e34:	mov	x0, x28
   25e38:	str	w6, [sp, #304]
   25e3c:	str	x5, [sp, #312]
   25e40:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   25e44:	ldr	w6, [sp, #304]
   25e48:	add	w0, w0, #0x4
   25e4c:	ldr	x5, [sp, #312]
   25e50:	mov	x3, #0x4                   	// #4
   25e54:	mov	w1, w0
   25e58:	cmp	x25, w0, uxtw
   25e5c:	b.cs	25e8c <ZSTD_compress@@Base+0x17640>  // b.hs, b.nlast
   25e60:	ubfiz	x2, x10, #3, #32
   25e64:	add	w10, w10, #0x1
   25e68:	add	x16, x22, x2
   25e6c:	str	w27, [x22, x2]
   25e70:	add	x2, x23, x1
   25e74:	cmp	x2, x20
   25e78:	ldr	w2, [sp, #248]
   25e7c:	str	w0, [x16, #4]
   25e80:	ccmp	w2, w0, #0x0, ne  // ne = any
   25e84:	b.cc	263f4 <ZSTD_compress@@Base+0x17ba8>  // b.lo, b.ul, b.last
   25e88:	mov	x25, x1
   25e8c:	add	x15, x15, #0x1
   25e90:	add	x27, x27, #0x1
   25e94:	cmp	w26, w15
   25e98:	b.hi	25df0 <ZSTD_compress@@Base+0x175a4>  // b.pmore
   25e9c:	ldr	x0, [sp, #192]
   25ea0:	mov	x26, #0x0                   	// #0
   25ea4:	str	w11, [x0, x12]
   25ea8:	mov	x11, #0x0                   	// #0
   25eac:	ldr	w0, [sp, #240]
   25eb0:	add	w3, w0, #0x2
   25eb4:	cbz	w13, 25ec4 <ZSTD_compress@@Base+0x17678>
   25eb8:	ldr	w0, [sp, #272]
   25ebc:	cmp	w0, w8
   25ec0:	b.ls	26500 <ZSTD_compress@@Base+0x17cb4>  // b.plast
   25ec4:	str	wzr, [x7]
   25ec8:	sub	w14, w14, #0x8
   25ecc:	str	wzr, [x18]
   25ed0:	str	w14, [x19, #36]
   25ed4:	b	263f4 <ZSTD_compress@@Base+0x17ba8>
   25ed8:	str	wzr, [sp, #200]
   25edc:	b	25c78 <ZSTD_compress@@Base+0x1742c>
   25ee0:	add	x1, x26, w25, uxtw
   25ee4:	mov	w3, w27
   25ee8:	mov	x2, x20
   25eec:	mov	x0, x19
   25ef0:	mov	w4, #0x0                   	// #0
   25ef4:	str	w5, [sp, #184]
   25ef8:	bl	2012c <ZSTD_compress@@Base+0x118e0>
   25efc:	add	w25, w25, w0
   25f00:	ldr	w5, [sp, #184]
   25f04:	b	25cb8 <ZSTD_compress@@Base+0x1746c>
   25f08:	sub	w7, w27, #0x6
   25f0c:	cmp	w7, #0x1
   25f10:	b.hi	25d24 <ZSTD_compress@@Base+0x174d8>  // b.pmore
   25f14:	mov	w2, #0x6                   	// #6
   25f18:	mov	x0, x23
   25f1c:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   25f20:	ldr	w9, [x5, #4]
   25f24:	lsl	x25, x0, #2
   25f28:	mov	w12, #0x1                   	// #1
   25f2c:	ldr	x0, [sp, #192]
   25f30:	sub	w9, w9, #0x1
   25f34:	ldr	w2, [x19, #184]
   25f38:	mov	w1, w11
   25f3c:	lsl	w9, w12, w9
   25f40:	sub	w9, w9, #0x1
   25f44:	ldr	w8, [x0, x25]
   25f48:	cmp	w9, w11
   25f4c:	ldr	x18, [x19, #64]
   25f50:	sub	w0, w11, w9
   25f54:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   25f58:	str	w0, [sp, #256]
   25f5c:	mov	x0, x19
   25f60:	ldr	w28, [x19, #24]
   25f64:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   25f68:	cmp	w0, #0x0
   25f6c:	csel	w0, w0, w12, ne  // ne = any
   25f70:	str	w0, [sp, #264]
   25f74:	ldr	w0, [x5, #12]
   25f78:	and	w7, w9, w11
   25f7c:	ldrb	w14, [sp, #184]
   25f80:	mov	w26, #0x4                   	// #4
   25f84:	ubfiz	x7, x7, #3, #31
   25f88:	mov	x4, #0x4                   	// #4
   25f8c:	lsl	w12, w12, w0
   25f90:	ldr	w0, [sp, #148]
   25f94:	add	x15, x18, x7
   25f98:	add	x7, x7, #0x4
   25f9c:	sub	w24, w0, #0x1
   25fa0:	ldr	w0, [sp, #184]
   25fa4:	ldr	x3, [sp, #232]
   25fa8:	cmp	w0, #0x0
   25fac:	add	x7, x18, x7
   25fb0:	mov	w0, #0x3                   	// #3
   25fb4:	add	w13, w11, #0x9
   25fb8:	add	x5, x23, x4
   25fbc:	csel	w26, w26, w0, ne  // ne = any
   25fc0:	sub	w28, w11, w28
   25fc4:	mov	x27, #0x0                   	// #0
   25fc8:	mov	w10, #0x0                   	// #0
   25fcc:	cmp	w14, #0x3
   25fd0:	b.ne	26878 <ZSTD_compress@@Base+0x1802c>  // b.any
   25fd4:	ldr	x0, [sp, #152]
   25fd8:	ldr	w0, [x0, #16]
   25fdc:	sub	w0, w0, #0x1
   25fe0:	sub	w1, w0, #0x1
   25fe4:	cmp	w1, w28
   25fe8:	b.cs	26880 <ZSTD_compress@@Base+0x18034>  // b.hs, b.nlast
   25fec:	mov	w1, w0
   25ff0:	sub	x0, x23, w0, uxtw
   25ff4:	ldr	w2, [x23]
   25ff8:	ldr	w0, [x0]
   25ffc:	cmp	w2, w0
   26000:	b.ne	26880 <ZSTD_compress@@Base+0x18034>  // b.any
   26004:	sub	x1, x4, x1
   26008:	mov	x0, x5
   2600c:	mov	x2, x20
   26010:	add	x1, x23, x1
   26014:	str	x5, [sp, #272]
   26018:	str	x3, [sp, #304]
   2601c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   26020:	ldr	x5, [sp, #272]
   26024:	add	w0, w0, #0x4
   26028:	ldr	x3, [sp, #304]
   2602c:	mov	x4, #0x4                   	// #4
   26030:	mov	w1, w0
   26034:	cmp	x24, w0, uxtw
   26038:	b.cs	26068 <ZSTD_compress@@Base+0x1781c>  // b.hs, b.nlast
   2603c:	ubfiz	x2, x10, #3, #32
   26040:	add	w10, w10, #0x1
   26044:	add	x6, x22, x2
   26048:	str	w27, [x22, x2]
   2604c:	add	x2, x23, x1
   26050:	cmp	x2, x20
   26054:	ldr	w2, [sp, #248]
   26058:	str	w0, [x6, #4]
   2605c:	ccmp	w2, w0, #0x0, ne  // ne = any
   26060:	b.cc	263f4 <ZSTD_compress@@Base+0x17ba8>  // b.lo, b.ul, b.last
   26064:	mov	x24, x1
   26068:	add	x14, x14, #0x1
   2606c:	add	x27, x27, #0x1
   26070:	cmp	w26, w14
   26074:	b.hi	25fcc <ZSTD_compress@@Base+0x17780>  // b.pmore
   26078:	ldr	x0, [sp, #192]
   2607c:	mov	x14, #0x0                   	// #0
   26080:	mov	x27, #0x0                   	// #0
   26084:	str	w11, [x0, x25]
   26088:	ldr	w0, [sp, #240]
   2608c:	add	w11, w0, #0x2
   26090:	cbz	w12, 26778 <ZSTD_compress@@Base+0x17f2c>
   26094:	ldr	w0, [sp, #264]
   26098:	cmp	w0, w8
   2609c:	b.hi	26778 <ZSTD_compress@@Base+0x17f2c>  // b.pmore
   260a0:	ldr	x0, [sp, #208]
   260a4:	cmp	x27, x14
   260a8:	and	w26, w9, w8
   260ac:	csel	x28, x27, x14, ls  // ls = plast
   260b0:	mov	x2, x20
   260b4:	add	x3, x0, w8, uxtw
   260b8:	ubfiz	x26, x26, #3, #31
   260bc:	add	x1, x3, x28
   260c0:	add	x0, x23, x28
   260c4:	add	x25, x18, x26
   260c8:	str	x3, [sp, #192]
   260cc:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   260d0:	add	x28, x28, x0
   260d4:	cmp	x28, x24
   260d8:	ldr	x3, [sp, #192]
   260dc:	b.ls	26120 <ZSTD_compress@@Base+0x178d4>  // b.plast
   260e0:	sub	w0, w13, w8
   260e4:	mov	w2, w28
   260e8:	cmp	x28, x0
   260ec:	b.ls	260f4 <ZSTD_compress@@Base+0x178a8>  // b.plast
   260f0:	add	w13, w8, w28
   260f4:	ubfiz	x0, x10, #3, #32
   260f8:	sub	w4, w11, w8
   260fc:	add	x1, x22, x0
   26100:	cmp	x28, #0x1, lsl #12
   26104:	add	w10, w10, #0x1
   26108:	str	w4, [x22, x0]
   2610c:	add	x0, x23, x28
   26110:	str	w2, [x1, #4]
   26114:	ccmp	x0, x20, #0x4, ls  // ls = plast
   26118:	b.eq	26778 <ZSTD_compress@@Base+0x17f2c>  // b.none
   2611c:	mov	x24, x28
   26120:	ldrb	w1, [x3, x28]
   26124:	ldrb	w0, [x23, x28]
   26128:	cmp	w1, w0
   2612c:	b.cs	26888 <ZSTD_compress@@Base+0x1803c>  // b.hs, b.nlast
   26130:	ldr	w0, [sp, #256]
   26134:	str	w8, [x15]
   26138:	cmp	w8, w0
   2613c:	b.ls	268a0 <ZSTD_compress@@Base+0x18054>  // b.plast
   26140:	ldr	w8, [x25, #4]
   26144:	add	x15, x25, #0x4
   26148:	mov	x27, x28
   2614c:	mov	x25, x7
   26150:	mov	x28, x14
   26154:	sub	w12, w12, #0x1
   26158:	mov	x7, x25
   2615c:	mov	x14, x28
   26160:	b	26090 <ZSTD_compress@@Base+0x17844>
   26164:	mov	x4, x23
   26168:	mov	w0, #0x79b1                	// #31153
   2616c:	movk	w0, #0x9e37, lsl #16
   26170:	neg	w1, w1
   26174:	ldr	w14, [x5, #4]
   26178:	mov	w15, #0x1                   	// #1
   2617c:	ldr	w9, [x4], #3
   26180:	sub	w14, w14, #0x1
   26184:	ldr	w2, [x19, #184]
   26188:	str	x4, [sp, #304]
   2618c:	lsl	w14, w15, w14
   26190:	sub	w14, w14, #0x1
   26194:	mul	w0, w9, w0
   26198:	cmp	w14, w11
   2619c:	ldr	x26, [x19, #64]
   261a0:	lsr	w0, w0, w1
   261a4:	ldr	w28, [x19, #24]
   261a8:	ubfiz	x0, x0, #2, #32
   261ac:	str	x0, [sp, #272]
   261b0:	ldr	x0, [sp, #192]
   261b4:	ldr	x1, [sp, #272]
   261b8:	ldr	w13, [x0, x1]
   261bc:	sub	w0, w11, w14
   261c0:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   261c4:	mov	w1, w11
   261c8:	str	w0, [sp, #264]
   261cc:	mov	x0, x19
   261d0:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   261d4:	cmp	w0, #0x0
   261d8:	csel	w0, w0, w15, ne  // ne = any
   261dc:	str	w0, [sp, #256]
   261e0:	ldr	w0, [x5, #12]
   261e4:	and	w12, w14, w11
   261e8:	ldrb	w8, [sp, #184]
   261ec:	add	w24, w11, #0x9
   261f0:	ubfiz	x12, x12, #3, #31
   261f4:	lsl	w9, w9, #8
   261f8:	lsl	w15, w15, w0
   261fc:	ldr	w0, [sp, #148]
   26200:	add	x25, x26, x12
   26204:	add	x12, x12, #0x4
   26208:	sub	w18, w0, #0x1
   2620c:	ldr	w0, [sp, #184]
   26210:	ldr	x3, [sp, #232]
   26214:	cmp	w0, #0x0
   26218:	ldr	x4, [sp, #304]
   2621c:	add	x12, x26, x12
   26220:	sub	w28, w11, w28
   26224:	mov	w7, #0x4                   	// #4
   26228:	mov	w10, #0x0                   	// #0
   2622c:	csel	w7, w7, w27, ne  // ne = any
   26230:	mov	x5, #0x3                   	// #3
   26234:	mov	x27, #0x0                   	// #0
   26238:	cmp	w8, #0x3
   2623c:	b.ne	263a0 <ZSTD_compress@@Base+0x17b54>  // b.any
   26240:	ldr	x0, [sp, #152]
   26244:	ldr	w0, [x0, #16]
   26248:	sub	w0, w0, #0x1
   2624c:	sub	w1, w0, #0x1
   26250:	cmp	w1, w28
   26254:	b.cs	263a8 <ZSTD_compress@@Base+0x17b5c>  // b.hs, b.nlast
   26258:	mov	w1, w0
   2625c:	sub	x0, x23, w0, uxtw
   26260:	ldr	w0, [x0]
   26264:	cmp	w9, w0, lsl #8
   26268:	b.ne	263a8 <ZSTD_compress@@Base+0x17b5c>  // b.any
   2626c:	sub	x1, x5, x1
   26270:	mov	x0, x4
   26274:	mov	x2, x20
   26278:	add	x1, x23, x1
   2627c:	stp	x4, x3, [sp, #304]
   26280:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   26284:	add	w0, w0, #0x3
   26288:	ldp	x4, x3, [sp, #304]
   2628c:	mov	x5, #0x3                   	// #3
   26290:	mov	w1, w0
   26294:	cmp	x18, w0, uxtw
   26298:	b.cs	262c8 <ZSTD_compress@@Base+0x17a7c>  // b.hs, b.nlast
   2629c:	ubfiz	x2, x10, #3, #32
   262a0:	add	w10, w10, #0x1
   262a4:	add	x6, x22, x2
   262a8:	str	w27, [x22, x2]
   262ac:	add	x2, x23, x1
   262b0:	cmp	x2, x20
   262b4:	ldr	w2, [sp, #248]
   262b8:	str	w0, [x6, #4]
   262bc:	ccmp	w2, w0, #0x0, ne  // ne = any
   262c0:	b.cc	263f4 <ZSTD_compress@@Base+0x17ba8>  // b.lo, b.ul, b.last
   262c4:	mov	x18, x1
   262c8:	add	x8, x8, #0x1
   262cc:	add	x27, x27, #0x1
   262d0:	cmp	w7, w8
   262d4:	b.hi	26238 <ZSTD_compress@@Base+0x179ec>  // b.pmore
   262d8:	cmp	x18, #0x2
   262dc:	b.ne	263b8 <ZSTD_compress@@Base+0x17b6c>  // b.any
   262e0:	add	x1, sp, #0x14c
   262e4:	mov	x2, x23
   262e8:	mov	x0, x19
   262ec:	bl	1ff88 <ZSTD_compress@@Base+0x1173c>
   262f0:	ldr	w1, [sp, #256]
   262f4:	sub	w7, w11, w0
   262f8:	cmp	w1, w0
   262fc:	mov	w1, #0x3ffff               	// #262143
   26300:	ccmp	w7, w1, #0x2, ls  // ls = plast
   26304:	b.hi	263b8 <ZSTD_compress@@Base+0x17b6c>  // b.pmore
   26308:	ldr	x1, [sp, #208]
   2630c:	mov	x2, x20
   26310:	add	x1, x1, w0, uxtw
   26314:	mov	x0, x23
   26318:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2631c:	cmp	x0, #0x2
   26320:	b.ls	263b8 <ZSTD_compress@@Base+0x17b6c>  // b.plast
   26324:	ldr	w2, [sp, #248]
   26328:	add	w7, w7, #0x2
   2632c:	add	x1, x23, x0
   26330:	stp	w7, w0, [x22]
   26334:	cmp	x1, x20
   26338:	ccmp	x0, x2, #0x2, ne  // ne = any
   2633c:	b.ls	263b0 <ZSTD_compress@@Base+0x17b64>  // b.plast
   26340:	add	w11, w11, #0x1
   26344:	mov	w10, #0x1                   	// #1
   26348:	str	w11, [x19, #36]
   2634c:	sub	w0, w10, #0x1
   26350:	ldr	w2, [sp, #252]
   26354:	add	x0, x22, x0, lsl #3
   26358:	ldr	w1, [x0, #4]
   2635c:	cmp	w2, w1
   26360:	b.cc	26374 <ZSTD_compress@@Base+0x17b28>  // b.lo, b.ul, b.last
   26364:	ldr	w2, [sp, #168]
   26368:	add	w2, w2, w1
   2636c:	cmp	w2, #0xfff
   26370:	b.ls	268b8 <ZSTD_compress@@Base+0x1806c>  // b.plast
   26374:	ldr	w2, [x0]
   26378:	ldr	x0, [sp, #152]
   2637c:	ldr	w0, [x0, #8]
   26380:	cbnz	w0, 268b0 <ZSTD_compress@@Base+0x18064>
   26384:	ldr	x0, [sp, #152]
   26388:	ldr	w0, [x0, #12]
   2638c:	ldr	w3, [sp, #168]
   26390:	sub	w0, w3, w0
   26394:	cmp	w0, #0x1, lsl #12
   26398:	b.ls	25b04 <ZSTD_compress@@Base+0x172b8>  // b.plast
   2639c:	b	25438 <ZSTD_compress@@Base+0x16bec>
   263a0:	ldr	w0, [x3, x8, lsl #2]
   263a4:	b	2624c <ZSTD_compress@@Base+0x17a00>
   263a8:	mov	w0, #0x0                   	// #0
   263ac:	b	26290 <ZSTD_compress@@Base+0x17a44>
   263b0:	mov	x18, x0
   263b4:	mov	w10, #0x1                   	// #1
   263b8:	ldr	x0, [sp, #192]
   263bc:	mov	x7, #0x0                   	// #0
   263c0:	ldr	x1, [sp, #272]
   263c4:	str	w11, [x0, x1]
   263c8:	mov	x11, #0x0                   	// #0
   263cc:	ldr	w0, [sp, #240]
   263d0:	add	w3, w0, #0x2
   263d4:	cbz	w15, 263e4 <ZSTD_compress@@Base+0x17b98>
   263d8:	ldr	w0, [sp, #256]
   263dc:	cmp	w0, w13
   263e0:	b.ls	26404 <ZSTD_compress@@Base+0x17bb8>  // b.plast
   263e4:	str	wzr, [x12]
   263e8:	sub	w24, w24, #0x8
   263ec:	str	wzr, [x25]
   263f0:	str	w24, [x19, #36]
   263f4:	cbnz	w10, 2634c <ZSTD_compress@@Base+0x17b00>
   263f8:	ldr	w0, [sp, #168]
   263fc:	add	w0, w0, #0x1
   26400:	b	259b8 <ZSTD_compress@@Base+0x1716c>
   26404:	and	w9, w14, w13
   26408:	cmp	x11, x7
   2640c:	ldr	x0, [sp, #208]
   26410:	ubfiz	x9, x9, #3, #31
   26414:	add	x8, x26, x9
   26418:	csel	x27, x11, x7, ls  // ls = plast
   2641c:	mov	x2, x20
   26420:	str	w3, [sp, #192]
   26424:	add	x28, x0, w13, uxtw
   26428:	add	x0, x23, x27
   2642c:	add	x1, x28, x27
   26430:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   26434:	add	x27, x27, x0
   26438:	ldr	w3, [sp, #192]
   2643c:	cmp	x27, x18
   26440:	b.ls	26484 <ZSTD_compress@@Base+0x17c38>  // b.plast
   26444:	sub	w0, w24, w13
   26448:	mov	w2, w27
   2644c:	cmp	x27, x0
   26450:	b.ls	26458 <ZSTD_compress@@Base+0x17c0c>  // b.plast
   26454:	add	w24, w13, w27
   26458:	ubfiz	x0, x10, #3, #32
   2645c:	sub	w4, w3, w13
   26460:	add	x1, x22, x0
   26464:	cmp	x27, #0x1, lsl #12
   26468:	add	w10, w10, #0x1
   2646c:	str	w4, [x22, x0]
   26470:	add	x0, x23, x27
   26474:	str	w2, [x1, #4]
   26478:	ccmp	x0, x20, #0x4, ls  // ls = plast
   2647c:	b.eq	263e4 <ZSTD_compress@@Base+0x17b98>  // b.none
   26480:	mov	x18, x27
   26484:	ldrb	w1, [x28, x27]
   26488:	ldrb	w0, [x23, x27]
   2648c:	cmp	w1, w0
   26490:	b.cs	264c8 <ZSTD_compress@@Base+0x17c7c>  // b.hs, b.nlast
   26494:	ldr	w0, [sp, #264]
   26498:	str	w13, [x25]
   2649c:	cmp	w13, w0
   264a0:	b.ls	264e0 <ZSTD_compress@@Base+0x17c94>  // b.plast
   264a4:	ldr	w13, [x8, #4]
   264a8:	add	x25, x8, #0x4
   264ac:	mov	x11, x27
   264b0:	mov	x8, x12
   264b4:	mov	x27, x7
   264b8:	sub	w15, w15, #0x1
   264bc:	mov	x12, x8
   264c0:	mov	x7, x27
   264c4:	b	263d4 <ZSTD_compress@@Base+0x17b88>
   264c8:	ldr	w0, [sp, #264]
   264cc:	str	w13, [x12]
   264d0:	cmp	w13, w0
   264d4:	b.ls	264e8 <ZSTD_compress@@Base+0x17c9c>  // b.plast
   264d8:	ldr	w13, [x26, x9]
   264dc:	b	264b8 <ZSTD_compress@@Base+0x17c6c>
   264e0:	add	x25, sp, #0x160
   264e4:	b	263e4 <ZSTD_compress@@Base+0x17b98>
   264e8:	add	x12, sp, #0x160
   264ec:	b	263e4 <ZSTD_compress@@Base+0x17b98>
   264f0:	ldr	w0, [x5, x15, lsl #2]
   264f4:	b	25e04 <ZSTD_compress@@Base+0x175b8>
   264f8:	mov	w0, #0x0                   	// #0
   264fc:	b	25e54 <ZSTD_compress@@Base+0x17608>
   26500:	and	w15, w9, w8
   26504:	cmp	x26, x11
   26508:	ldr	x0, [sp, #208]
   2650c:	ubfiz	x15, x15, #3, #31
   26510:	add	x12, x24, x15
   26514:	csel	x27, x26, x11, ls  // ls = plast
   26518:	mov	x2, x20
   2651c:	str	w3, [sp, #192]
   26520:	add	x28, x0, w8, uxtw
   26524:	add	x0, x23, x27
   26528:	add	x1, x28, x27
   2652c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   26530:	add	x27, x27, x0
   26534:	ldr	w3, [sp, #192]
   26538:	cmp	x27, x25
   2653c:	b.ls	26580 <ZSTD_compress@@Base+0x17d34>  // b.plast
   26540:	sub	w0, w14, w8
   26544:	mov	w2, w27
   26548:	cmp	x27, x0
   2654c:	b.ls	26554 <ZSTD_compress@@Base+0x17d08>  // b.plast
   26550:	add	w14, w8, w27
   26554:	ubfiz	x0, x10, #3, #32
   26558:	sub	w4, w3, w8
   2655c:	add	x1, x22, x0
   26560:	cmp	x27, #0x1, lsl #12
   26564:	add	w10, w10, #0x1
   26568:	str	w4, [x22, x0]
   2656c:	add	x0, x23, x27
   26570:	str	w2, [x1, #4]
   26574:	ccmp	x0, x20, #0x4, ls  // ls = plast
   26578:	b.eq	25ec4 <ZSTD_compress@@Base+0x17678>  // b.none
   2657c:	mov	x25, x27
   26580:	ldrb	w1, [x28, x27]
   26584:	ldrb	w0, [x23, x27]
   26588:	cmp	w1, w0
   2658c:	b.cs	265c4 <ZSTD_compress@@Base+0x17d78>  // b.hs, b.nlast
   26590:	ldr	w0, [sp, #264]
   26594:	str	w8, [x18]
   26598:	cmp	w8, w0
   2659c:	b.ls	265dc <ZSTD_compress@@Base+0x17d90>  // b.plast
   265a0:	ldr	w8, [x12, #4]
   265a4:	add	x18, x12, #0x4
   265a8:	mov	x26, x27
   265ac:	mov	x12, x7
   265b0:	mov	x27, x11
   265b4:	sub	w13, w13, #0x1
   265b8:	mov	x7, x12
   265bc:	mov	x11, x27
   265c0:	b	25eb4 <ZSTD_compress@@Base+0x17668>
   265c4:	ldr	w0, [sp, #264]
   265c8:	str	w8, [x7]
   265cc:	cmp	w8, w0
   265d0:	b.ls	265e4 <ZSTD_compress@@Base+0x17d98>  // b.plast
   265d4:	ldr	w8, [x24, x15]
   265d8:	b	265b4 <ZSTD_compress@@Base+0x17d68>
   265dc:	add	x18, sp, #0x160
   265e0:	b	25ec4 <ZSTD_compress@@Base+0x17678>
   265e4:	add	x7, sp, #0x160
   265e8:	b	25ec4 <ZSTD_compress@@Base+0x17678>
   265ec:	mov	w2, w27
   265f0:	mov	x0, x23
   265f4:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   265f8:	ldr	w9, [x5, #4]
   265fc:	lsl	x25, x0, #2
   26600:	mov	w12, #0x1                   	// #1
   26604:	ldr	x0, [sp, #192]
   26608:	sub	w9, w9, #0x1
   2660c:	ldr	w2, [x19, #184]
   26610:	mov	w1, w11
   26614:	lsl	w9, w12, w9
   26618:	sub	w9, w9, #0x1
   2661c:	ldr	w8, [x0, x25]
   26620:	cmp	w9, w11
   26624:	ldr	x18, [x19, #64]
   26628:	sub	w0, w11, w9
   2662c:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   26630:	str	w0, [sp, #256]
   26634:	mov	x0, x19
   26638:	ldr	w28, [x19, #24]
   2663c:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   26640:	cmp	w0, #0x0
   26644:	csel	w0, w0, w12, ne  // ne = any
   26648:	str	w0, [sp, #264]
   2664c:	ldr	w0, [x5, #12]
   26650:	and	w7, w9, w11
   26654:	ldrb	w14, [sp, #184]
   26658:	mov	w26, #0x4                   	// #4
   2665c:	ubfiz	x7, x7, #3, #31
   26660:	mov	x4, #0x4                   	// #4
   26664:	lsl	w12, w12, w0
   26668:	ldr	w0, [sp, #148]
   2666c:	add	x15, x18, x7
   26670:	add	x7, x7, #0x4
   26674:	sub	w24, w0, #0x1
   26678:	ldr	w0, [sp, #184]
   2667c:	ldr	x3, [sp, #232]
   26680:	cmp	w0, #0x0
   26684:	add	x7, x18, x7
   26688:	mov	w0, #0x3                   	// #3
   2668c:	add	w13, w11, #0x9
   26690:	add	x5, x23, x4
   26694:	csel	w26, w26, w0, ne  // ne = any
   26698:	sub	w28, w11, w28
   2669c:	mov	x27, #0x0                   	// #0
   266a0:	mov	w10, #0x0                   	// #0
   266a4:	cmp	w14, #0x3
   266a8:	b.ne	2678c <ZSTD_compress@@Base+0x17f40>  // b.any
   266ac:	ldr	x0, [sp, #152]
   266b0:	ldr	w0, [x0, #16]
   266b4:	sub	w0, w0, #0x1
   266b8:	sub	w1, w0, #0x1
   266bc:	cmp	w1, w28
   266c0:	b.cs	26794 <ZSTD_compress@@Base+0x17f48>  // b.hs, b.nlast
   266c4:	mov	w1, w0
   266c8:	sub	x0, x23, w0, uxtw
   266cc:	ldr	w2, [x23]
   266d0:	ldr	w0, [x0]
   266d4:	cmp	w2, w0
   266d8:	b.ne	26794 <ZSTD_compress@@Base+0x17f48>  // b.any
   266dc:	sub	x1, x4, x1
   266e0:	mov	x0, x5
   266e4:	mov	x2, x20
   266e8:	add	x1, x23, x1
   266ec:	str	x5, [sp, #272]
   266f0:	str	x3, [sp, #304]
   266f4:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   266f8:	ldr	x5, [sp, #272]
   266fc:	add	w0, w0, #0x4
   26700:	ldr	x3, [sp, #304]
   26704:	mov	x4, #0x4                   	// #4
   26708:	mov	w1, w0
   2670c:	cmp	x24, w0, uxtw
   26710:	b.cs	26740 <ZSTD_compress@@Base+0x17ef4>  // b.hs, b.nlast
   26714:	ubfiz	x2, x10, #3, #32
   26718:	add	w10, w10, #0x1
   2671c:	add	x6, x22, x2
   26720:	str	w27, [x22, x2]
   26724:	add	x2, x23, x1
   26728:	cmp	x2, x20
   2672c:	ldr	w2, [sp, #248]
   26730:	str	w0, [x6, #4]
   26734:	ccmp	w2, w0, #0x0, ne  // ne = any
   26738:	b.cc	263f4 <ZSTD_compress@@Base+0x17ba8>  // b.lo, b.ul, b.last
   2673c:	mov	x24, x1
   26740:	add	x14, x14, #0x1
   26744:	add	x27, x27, #0x1
   26748:	cmp	w26, w14
   2674c:	b.hi	266a4 <ZSTD_compress@@Base+0x17e58>  // b.pmore
   26750:	ldr	x0, [sp, #192]
   26754:	mov	x26, #0x0                   	// #0
   26758:	str	w11, [x0, x25]
   2675c:	mov	x11, #0x0                   	// #0
   26760:	ldr	w0, [sp, #240]
   26764:	add	w3, w0, #0x2
   26768:	cbz	w12, 26778 <ZSTD_compress@@Base+0x17f2c>
   2676c:	ldr	w0, [sp, #264]
   26770:	cmp	w0, w8
   26774:	b.ls	2679c <ZSTD_compress@@Base+0x17f50>  // b.plast
   26778:	str	wzr, [x7]
   2677c:	sub	w13, w13, #0x8
   26780:	str	wzr, [x15]
   26784:	str	w13, [x19, #36]
   26788:	b	263f4 <ZSTD_compress@@Base+0x17ba8>
   2678c:	ldr	w0, [x3, x14, lsl #2]
   26790:	b	266b8 <ZSTD_compress@@Base+0x17e6c>
   26794:	mov	w0, #0x0                   	// #0
   26798:	b	26708 <ZSTD_compress@@Base+0x17ebc>
   2679c:	and	w25, w9, w8
   267a0:	cmp	x26, x11
   267a4:	ldr	x0, [sp, #208]
   267a8:	ubfiz	x25, x25, #3, #31
   267ac:	add	x14, x18, x25
   267b0:	csel	x27, x26, x11, ls  // ls = plast
   267b4:	mov	x2, x20
   267b8:	str	w3, [sp, #192]
   267bc:	add	x28, x0, w8, uxtw
   267c0:	add	x0, x23, x27
   267c4:	add	x1, x28, x27
   267c8:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   267cc:	add	x27, x27, x0
   267d0:	ldr	w3, [sp, #192]
   267d4:	cmp	x27, x24
   267d8:	b.ls	2681c <ZSTD_compress@@Base+0x17fd0>  // b.plast
   267dc:	sub	w0, w13, w8
   267e0:	mov	w2, w27
   267e4:	cmp	x27, x0
   267e8:	b.ls	267f0 <ZSTD_compress@@Base+0x17fa4>  // b.plast
   267ec:	add	w13, w8, w27
   267f0:	ubfiz	x0, x10, #3, #32
   267f4:	sub	w4, w3, w8
   267f8:	add	x1, x22, x0
   267fc:	cmp	x27, #0x1, lsl #12
   26800:	add	w10, w10, #0x1
   26804:	str	w4, [x22, x0]
   26808:	add	x0, x23, x27
   2680c:	str	w2, [x1, #4]
   26810:	ccmp	x0, x20, #0x4, ls  // ls = plast
   26814:	b.eq	26778 <ZSTD_compress@@Base+0x17f2c>  // b.none
   26818:	mov	x24, x27
   2681c:	ldrb	w1, [x28, x27]
   26820:	ldrb	w0, [x23, x27]
   26824:	cmp	w1, w0
   26828:	b.cs	26860 <ZSTD_compress@@Base+0x18014>  // b.hs, b.nlast
   2682c:	ldr	w0, [sp, #256]
   26830:	str	w8, [x15]
   26834:	cmp	w8, w0
   26838:	b.ls	268a0 <ZSTD_compress@@Base+0x18054>  // b.plast
   2683c:	ldr	w8, [x14, #4]
   26840:	add	x15, x14, #0x4
   26844:	mov	x26, x27
   26848:	mov	x14, x7
   2684c:	mov	x27, x11
   26850:	sub	w12, w12, #0x1
   26854:	mov	x7, x14
   26858:	mov	x11, x27
   2685c:	b	26768 <ZSTD_compress@@Base+0x17f1c>
   26860:	ldr	w0, [sp, #256]
   26864:	str	w8, [x7]
   26868:	cmp	w8, w0
   2686c:	b.ls	268a8 <ZSTD_compress@@Base+0x1805c>  // b.plast
   26870:	ldr	w8, [x18, x25]
   26874:	b	26850 <ZSTD_compress@@Base+0x18004>
   26878:	ldr	w0, [x3, x14, lsl #2]
   2687c:	b	25fe0 <ZSTD_compress@@Base+0x17794>
   26880:	mov	w0, #0x0                   	// #0
   26884:	b	26030 <ZSTD_compress@@Base+0x177e4>
   26888:	ldr	w0, [sp, #256]
   2688c:	str	w8, [x7]
   26890:	cmp	w8, w0
   26894:	b.ls	268a8 <ZSTD_compress@@Base+0x1805c>  // b.plast
   26898:	ldr	w8, [x18, x26]
   2689c:	b	26154 <ZSTD_compress@@Base+0x17908>
   268a0:	add	x15, sp, #0x160
   268a4:	b	26778 <ZSTD_compress@@Base+0x17f2c>
   268a8:	add	x7, sp, #0x160
   268ac:	b	26778 <ZSTD_compress@@Base+0x17f2c>
   268b0:	mov	w0, #0x0                   	// #0
   268b4:	b	2638c <ZSTD_compress@@Base+0x17b40>
   268b8:	mov	x9, x22
   268bc:	mov	w5, #0x0                   	// #0
   268c0:	ldr	w12, [x9]
   268c4:	ldr	w2, [sp, #184]
   268c8:	ldr	x0, [sp, #232]
   268cc:	mov	w1, w12
   268d0:	bl	205a8 <ZSTD_compress@@Base+0x11d5c>
   268d4:	str	w0, [sp, #352]
   268d8:	lsr	x0, x0, #32
   268dc:	str	w0, [sp, #356]
   268e0:	str	w1, [sp, #360]
   268e4:	ldr	w3, [x9, #4]
   268e8:	cbz	w5, 2694c <ZSTD_compress@@Base+0x18100>
   268ec:	sub	w0, w5, #0x1
   268f0:	add	x0, x22, x0, lsl #3
   268f4:	ldr	w11, [x0, #4]
   268f8:	add	w11, w11, #0x1
   268fc:	add	w2, w12, #0x1
   26900:	ldr	w0, [sp, #168]
   26904:	clz	w2, w2
   26908:	ldr	w1, [sp, #296]
   2690c:	eor	w2, w2, #0x1f
   26910:	add	w4, w0, w3
   26914:	add	w13, w2, #0x10
   26918:	ldr	w0, [sp, #288]
   2691c:	sbfiz	x15, x2, #2, #32
   26920:	mov	w14, #0x1c                  	// #28
   26924:	lsl	w13, w13, #8
   26928:	add	w18, w0, w1
   2692c:	mov	w23, #0x40000000            	// #1073741824
   26930:	cmp	w3, w11
   26934:	b.cs	26954 <ZSTD_compress@@Base+0x18108>  // b.hs, b.nlast
   26938:	add	w5, w5, #0x1
   2693c:	add	x9, x9, #0x8
   26940:	cmp	w10, w5
   26944:	b.ne	268c0 <ZSTD_compress@@Base+0x18074>  // b.any
   26948:	b	263f8 <ZSTD_compress@@Base+0x17bac>
   2694c:	ldr	w11, [sp, #148]
   26950:	b	268fc <ZSTD_compress@@Base+0x180b0>
   26954:	ldr	w0, [x19, #152]
   26958:	add	x8, x19, #0x48
   2695c:	sub	w24, w3, #0x3
   26960:	cmp	w0, #0x1
   26964:	b.ne	269d0 <ZSTD_compress@@Base+0x18184>  // b.any
   26968:	mov	w0, w24
   2696c:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   26970:	add	w0, w13, w0
   26974:	ldr	x1, [sp, #112]
   26978:	umull	x7, w4, w14
   2697c:	ldr	w6, [sp, #176]
   26980:	add	w0, w18, w0
   26984:	add	x1, x1, x7
   26988:	cmp	w6, w4
   2698c:	b.cc	26a24 <ZSTD_compress@@Base+0x181d8>  // b.lo, b.ul, b.last
   26990:	ldr	x6, [sp, #112]
   26994:	ldr	w6, [x6, x7]
   26998:	cmp	w0, w6
   2699c:	b.ge	269c4 <ZSTD_compress@@Base+0x18178>  // b.tcont
   269a0:	ldr	w6, [sp, #200]
   269a4:	str	w6, [x1, #12]
   269a8:	ldr	x6, [sp, #112]
   269ac:	stp	w12, w3, [x1, #4]
   269b0:	str	w0, [x6, x7]
   269b4:	ldr	x0, [sp, #352]
   269b8:	str	x0, [x1, #16]
   269bc:	ldr	w0, [sp, #360]
   269c0:	str	w0, [x1, #24]
   269c4:	sub	w3, w3, #0x1
   269c8:	sub	w4, w4, #0x1
   269cc:	b	26930 <ZSTD_compress@@Base+0x180e4>
   269d0:	ldr	x0, [x8, #24]
   269d4:	ldr	w0, [x0, x15]
   269d8:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   269dc:	mov	w7, w0
   269e0:	mov	w0, w24
   269e4:	bl	2043c <ZSTD_compress@@Base+0x11bf0>
   269e8:	mov	w24, w0
   269ec:	ldp	w1, w6, [x8, #72]
   269f0:	add	w6, w6, w1
   269f4:	ldr	x1, [x8, #16]
   269f8:	ldr	w0, [x1, w0, uxtw #2]
   269fc:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   26a00:	add	w0, w7, w0
   26a04:	ldr	x1, [sp, #280]
   26a08:	sub	w0, w6, w0
   26a0c:	ldr	w1, [x1, x24, lsl #2]
   26a10:	add	w1, w2, w1
   26a14:	lsl	w1, w1, #8
   26a18:	add	w1, w1, #0x33
   26a1c:	add	w0, w1, w0
   26a20:	b	26974 <ZSTD_compress@@Base+0x18128>
   26a24:	ldr	w6, [sp, #176]
   26a28:	ldr	x8, [sp, #112]
   26a2c:	add	w6, w6, #0x1
   26a30:	umaddl	x6, w6, w14, x8
   26a34:	ldr	w8, [sp, #176]
   26a38:	str	w23, [x6], #28
   26a3c:	add	w8, w8, #0x1
   26a40:	str	w8, [sp, #176]
   26a44:	cmp	w8, w4
   26a48:	b.ne	26a34 <ZSTD_compress@@Base+0x181e8>  // b.any
   26a4c:	b	269a0 <ZSTD_compress@@Base+0x18154>
   26a50:	sub	w0, w0, w5
   26a54:	b	25b40 <ZSTD_compress@@Base+0x172f4>
   26a58:	ldr	x0, [sp, #112]
   26a5c:	ldr	x1, [sp, #160]
   26a60:	umaddl	x0, w10, w14, x0
   26a64:	ldp	w23, w9, [x0, #8]
   26a68:	mov	w24, w9
   26a6c:	add	x21, x1, w9, uxtw
   26a70:	cbz	w23, 26bc0 <ZSTD_compress@@Base+0x18374>
   26a74:	ldr	w11, [x0, #4]
   26a78:	cmp	w11, #0x2
   26a7c:	b.ls	26bc8 <ZSTD_compress@@Base+0x1837c>  // b.plast
   26a80:	ldr	w0, [sp, #340]
   26a84:	str	w0, [sp, #344]
   26a88:	ldr	w0, [sp, #336]
   26a8c:	str	w0, [sp, #340]
   26a90:	sub	w0, w11, #0x2
   26a94:	str	w0, [sp, #336]
   26a98:	ldr	x0, [sp, #136]
   26a9c:	mov	w4, w23
   26aa0:	ldr	x2, [sp, #160]
   26aa4:	mov	w3, w11
   26aa8:	mov	w1, w9
   26aac:	bl	209b4 <ZSTD_compress@@Base+0x12168>
   26ab0:	cmp	x12, x21
   26ab4:	sub	w5, w23, #0x3
   26ab8:	b.cc	26c08 <ZSTD_compress@@Base+0x183bc>  // b.lo, b.ul, b.last
   26abc:	ldr	x0, [sp, #104]
   26ac0:	cmp	x24, #0x10
   26ac4:	ldr	x2, [x0, #24]
   26ac8:	ldr	x0, [sp, #160]
   26acc:	ldp	x0, x1, [x0]
   26ad0:	stp	x0, x1, [x2]
   26ad4:	b.ls	26b30 <ZSTD_compress@@Base+0x182e4>  // b.plast
   26ad8:	ldr	x0, [sp, #104]
   26adc:	ldr	x3, [x0, #24]
   26ae0:	ldr	x0, [sp, #160]
   26ae4:	add	x2, x3, x24
   26ae8:	add	x3, x3, #0x30
   26aec:	ldp	x0, x1, [x0, #16]
   26af0:	stp	x0, x1, [x3, #-32]
   26af4:	ldr	x0, [sp, #160]
   26af8:	ldp	x0, x1, [x0, #32]
   26afc:	stp	x0, x1, [x3, #-16]
   26b00:	cmp	x2, x3
   26b04:	b.ls	26b30 <ZSTD_compress@@Base+0x182e4>  // b.plast
   26b08:	ldr	x0, [sp, #160]
   26b0c:	add	x4, x0, #0x30
   26b10:	ldp	x0, x1, [x4]
   26b14:	stp	x0, x1, [x3]
   26b18:	add	x3, x3, #0x20
   26b1c:	ldp	x0, x1, [x4, #16]
   26b20:	stp	x0, x1, [x3, #-16]
   26b24:	add	x4, x4, #0x20
   26b28:	cmp	x2, x3
   26b2c:	b.hi	26b10 <ZSTD_compress@@Base+0x182c4>  // b.pmore
   26b30:	ldr	x0, [sp, #104]
   26b34:	cmp	x24, x13
   26b38:	ldr	x1, [sp, #104]
   26b3c:	ldr	x0, [x0, #24]
   26b40:	add	x0, x0, x24
   26b44:	str	x0, [x1, #24]
   26b48:	ldr	x0, [x1, #8]
   26b4c:	b.ls	26b6c <ZSTD_compress@@Base+0x18320>  // b.plast
   26b50:	ldr	x2, [sp, #104]
   26b54:	mov	w1, #0x1                   	// #1
   26b58:	str	w1, [x2, #72]
   26b5c:	ldr	x1, [x2]
   26b60:	sub	x1, x0, x1
   26b64:	asr	x1, x1, #3
   26b68:	str	w1, [x2, #76]
   26b6c:	add	w11, w11, #0x1
   26b70:	str	w11, [x0]
   26b74:	strh	w9, [x0, #4]
   26b78:	cmp	w5, w15
   26b7c:	b.ls	26b9c <ZSTD_compress@@Base+0x18350>  // b.plast
   26b80:	ldr	x2, [sp, #104]
   26b84:	mov	w1, #0x2                   	// #2
   26b88:	str	w1, [x2, #72]
   26b8c:	ldr	x1, [x2]
   26b90:	sub	x1, x0, x1
   26b94:	asr	x1, x1, #3
   26b98:	str	w1, [x2, #76]
   26b9c:	ldr	x1, [sp, #104]
   26ba0:	add	x0, x0, #0x8
   26ba4:	sturh	w5, [x0, #-2]
   26ba8:	add	w9, w9, w23
   26bac:	str	x0, [x1, #8]
   26bb0:	ldr	x0, [sp, #160]
   26bb4:	add	x0, x0, x9
   26bb8:	str	x0, [sp, #160]
   26bbc:	mov	x21, x0
   26bc0:	add	w10, w10, #0x1
   26bc4:	b	25b94 <ZSTD_compress@@Base+0x17348>
   26bc8:	cmp	w9, #0x0
   26bcc:	cinc	w0, w11, eq  // eq = none
   26bd0:	cbz	w0, 26a98 <ZSTD_compress@@Base+0x1824c>
   26bd4:	ldr	w2, [sp, #336]
   26bd8:	cmp	w0, #0x3
   26bdc:	b.ne	26bf0 <ZSTD_compress@@Base+0x183a4>  // b.any
   26be0:	sub	w1, w2, #0x1
   26be4:	ldr	w0, [sp, #340]
   26be8:	str	w0, [sp, #344]
   26bec:	b	26bfc <ZSTD_compress@@Base+0x183b0>
   26bf0:	ldr	w1, [x18, w0, uxtw #2]
   26bf4:	cmp	w0, #0x1
   26bf8:	b.ne	26be4 <ZSTD_compress@@Base+0x18398>  // b.any
   26bfc:	str	w1, [sp, #336]
   26c00:	str	w2, [sp, #340]
   26c04:	b	26a98 <ZSTD_compress@@Base+0x1824c>
   26c08:	ldr	x0, [sp, #104]
   26c0c:	mov	x3, x12
   26c10:	ldr	x1, [sp, #160]
   26c14:	mov	x2, x21
   26c18:	ldr	x0, [x0, #24]
   26c1c:	bl	1fe1c <ZSTD_compress@@Base+0x115d0>
   26c20:	b	26b30 <ZSTD_compress@@Base+0x182e4>
   26c24:	ldr	x24, [x19, #8]
   26c28:	ldr	w23, [x19, #36]
   26c2c:	add	x0, x24, w23, uxtw
   26c30:	cmp	x21, x0
   26c34:	b.cs	26c40 <ZSTD_compress@@Base+0x183f4>  // b.hs, b.nlast
   26c38:	add	x21, x21, #0x1
   26c3c:	b	24d30 <ZSTD_compress@@Base+0x164e4>
   26c40:	sub	x26, x21, x24
   26c44:	ldr	w3, [x19, #200]
   26c48:	add	x25, x19, #0xb8
   26c4c:	mov	w27, w26
   26c50:	cmp	w27, w23
   26c54:	b.hi	26e64 <ZSTD_compress@@Base+0x18618>  // b.pmore
   26c58:	ldr	x0, [sp, #128]
   26c5c:	mov	w1, #0xfff                 	// #4095
   26c60:	str	w26, [x19, #36]
   26c64:	sub	x0, x21, x0
   26c68:	str	x0, [sp, #176]
   26c6c:	ldr	w5, [x19, #24]
   26c70:	ldr	w0, [sp, #176]
   26c74:	str	w0, [sp, #192]
   26c78:	cmp	w0, #0x0
   26c7c:	cset	w0, eq  // eq = none
   26c80:	str	w0, [sp, #152]
   26c84:	ldr	w0, [x25, #20]
   26c88:	ldr	x18, [x19, #48]
   26c8c:	cmp	w0, #0xfff
   26c90:	csel	w0, w0, w1, ls  // ls = plast
   26c94:	str	w0, [sp, #168]
   26c98:	ldr	x0, [x19, #8]
   26c9c:	str	x0, [sp, #160]
   26ca0:	ldr	w1, [x25, #8]
   26ca4:	cmp	w3, #0x5
   26ca8:	sub	x11, x21, x0
   26cac:	mov	w13, w11
   26cb0:	ldr	x12, [x19, #64]
   26cb4:	b.eq	27498 <ZSTD_compress@@Base+0x18c4c>  // b.none
   26cb8:	b.hi	26e88 <ZSTD_compress@@Base+0x1863c>  // b.pmore
   26cbc:	cmp	w3, #0x3
   26cc0:	b.eq	27018 <ZSTD_compress@@Base+0x187cc>  // b.none
   26cc4:	mov	x27, x21
   26cc8:	mov	w14, #0x79b1                	// #31153
   26ccc:	movk	w14, #0x9e37, lsl #16
   26cd0:	neg	w1, w1
   26cd4:	ldr	w9, [x25, #4]
   26cd8:	mov	w15, #0x1                   	// #1
   26cdc:	ldr	w0, [x27], #4
   26ce0:	mov	w28, #0x4                   	// #4
   26ce4:	str	w0, [sp, #200]
   26ce8:	sub	w9, w9, #0x1
   26cec:	mov	w0, w0
   26cf0:	ldr	w2, [x19, #184]
   26cf4:	lsl	w9, w15, w9
   26cf8:	sub	w9, w9, #0x1
   26cfc:	cmp	w9, w11
   26d00:	mul	w14, w0, w14
   26d04:	sub	w0, w11, w9
   26d08:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   26d0c:	str	w0, [sp, #184]
   26d10:	mov	x0, x19
   26d14:	lsr	w14, w14, w1
   26d18:	mov	w1, w11
   26d1c:	ubfiz	x14, x14, #2, #32
   26d20:	ldr	w7, [x18, x14]
   26d24:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   26d28:	cmp	w0, #0x0
   26d2c:	csel	w0, w0, w15, ne  // ne = any
   26d30:	str	w0, [sp, #208]
   26d34:	ldr	w0, [x25, #12]
   26d38:	and	w8, w9, w11
   26d3c:	ldrb	w23, [sp, #152]
   26d40:	add	w24, w11, #0x9
   26d44:	ubfiz	x8, x8, #3, #31
   26d48:	sub	w5, w13, w5
   26d4c:	lsl	w15, w15, w0
   26d50:	ldr	w0, [sp, #148]
   26d54:	add	x26, x12, x8
   26d58:	add	x8, x8, #0x4
   26d5c:	sub	w25, w0, #0x1
   26d60:	ldr	w0, [sp, #152]
   26d64:	add	x8, x12, x8
   26d68:	mov	w10, #0x0                   	// #0
   26d6c:	cmp	w0, #0x0
   26d70:	mov	w0, #0x3                   	// #3
   26d74:	csel	w28, w28, w0, ne  // ne = any
   26d78:	mov	x6, #0x4                   	// #4
   26d7c:	mov	w4, w23
   26d80:	cmp	w23, #0x3
   26d84:	ldr	x0, [sp, #120]
   26d88:	b.ne	273a8 <ZSTD_compress@@Base+0x18b5c>  // b.any
   26d8c:	ldr	w0, [x0]
   26d90:	sub	w0, w0, #0x1
   26d94:	sub	w1, w0, #0x1
   26d98:	cmp	w1, w5
   26d9c:	b.cs	273b0 <ZSTD_compress@@Base+0x18b64>  // b.hs, b.nlast
   26da0:	mov	w1, w0
   26da4:	sub	x0, x21, w0, uxtw
   26da8:	ldr	w2, [sp, #200]
   26dac:	ldr	w0, [x0]
   26db0:	cmp	w2, w0
   26db4:	b.ne	273b0 <ZSTD_compress@@Base+0x18b64>  // b.any
   26db8:	sub	x1, x6, x1
   26dbc:	mov	x2, x20
   26dc0:	add	x1, x21, x1
   26dc4:	mov	x0, x27
   26dc8:	str	w4, [sp, #216]
   26dcc:	str	w5, [sp, #248]
   26dd0:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   26dd4:	ldr	w4, [sp, #216]
   26dd8:	add	w0, w0, #0x4
   26ddc:	ldr	w5, [sp, #248]
   26de0:	mov	x6, #0x4                   	// #4
   26de4:	mov	w1, w0
   26de8:	cmp	x25, w0, uxtw
   26dec:	b.cs	26e24 <ZSTD_compress@@Base+0x185d8>  // b.hs, b.nlast
   26df0:	ubfiz	x2, x10, #3, #32
   26df4:	ldr	w3, [sp, #152]
   26df8:	add	x16, x22, x2
   26dfc:	add	w10, w10, #0x1
   26e00:	sub	w4, w4, w3
   26e04:	str	w4, [x22, x2]
   26e08:	add	x2, x21, x1
   26e0c:	cmp	x2, x20
   26e10:	ldr	w2, [sp, #168]
   26e14:	str	w0, [x16, #4]
   26e18:	ccmp	w2, w0, #0x0, ne  // ne = any
   26e1c:	b.cc	272c0 <ZSTD_compress@@Base+0x18a74>  // b.lo, b.ul, b.last
   26e20:	mov	x25, x1
   26e24:	add	x23, x23, #0x1
   26e28:	cmp	w28, w23
   26e2c:	b.hi	26d7c <ZSTD_compress@@Base+0x18530>  // b.pmore
   26e30:	add	w13, w13, #0x2
   26e34:	str	w11, [x18, x14]
   26e38:	mov	x18, #0x0                   	// #0
   26e3c:	mov	x11, #0x0                   	// #0
   26e40:	cbz	w15, 26e50 <ZSTD_compress@@Base+0x18604>
   26e44:	ldr	w0, [sp, #208]
   26e48:	cmp	w0, w7
   26e4c:	b.ls	273b8 <ZSTD_compress@@Base+0x18b6c>  // b.plast
   26e50:	str	wzr, [x8]
   26e54:	str	wzr, [x26]
   26e58:	sub	w24, w24, #0x8
   26e5c:	str	w24, [x19, #36]
   26e60:	b	272c0 <ZSTD_compress@@Base+0x18a74>
   26e64:	add	x1, x24, w23, uxtw
   26e68:	mov	x2, x20
   26e6c:	mov	x0, x19
   26e70:	mov	w4, #0x0                   	// #0
   26e74:	str	w3, [sp, #152]
   26e78:	bl	2012c <ZSTD_compress@@Base+0x118e0>
   26e7c:	ldr	w3, [sp, #152]
   26e80:	add	w23, w23, w0
   26e84:	b	26c50 <ZSTD_compress@@Base+0x18404>
   26e88:	sub	w3, w3, #0x6
   26e8c:	cmp	w3, #0x1
   26e90:	b.hi	26cc4 <ZSTD_compress@@Base+0x18478>  // b.pmore
   26e94:	mov	w2, #0x6                   	// #6
   26e98:	mov	x0, x21
   26e9c:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   26ea0:	lsl	x26, x0, #2
   26ea4:	ldr	w9, [x25, #4]
   26ea8:	mov	w14, #0x1                   	// #1
   26eac:	ldr	w2, [x19, #184]
   26eb0:	mov	w1, w11
   26eb4:	sub	w9, w9, #0x1
   26eb8:	ldr	w7, [x18, x26]
   26ebc:	mov	w28, #0x4                   	// #4
   26ec0:	lsl	w9, w14, w9
   26ec4:	sub	w9, w9, #0x1
   26ec8:	cmp	w9, w11
   26ecc:	sub	w0, w11, w9
   26ed0:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   26ed4:	str	w0, [sp, #184]
   26ed8:	mov	x0, x19
   26edc:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   26ee0:	cmp	w0, #0x0
   26ee4:	csel	w0, w0, w14, ne  // ne = any
   26ee8:	str	w0, [sp, #200]
   26eec:	ldr	w0, [x25, #12]
   26ef0:	and	w8, w9, w11
   26ef4:	ldrb	w15, [sp, #152]
   26ef8:	sub	w23, w11, w5
   26efc:	ubfiz	x8, x8, #3, #31
   26f00:	mov	x4, #0x4                   	// #4
   26f04:	lsl	w14, w14, w0
   26f08:	ldr	w0, [sp, #148]
   26f0c:	add	x27, x12, x8
   26f10:	add	x8, x8, #0x4
   26f14:	sub	w25, w0, #0x1
   26f18:	ldr	w0, [sp, #152]
   26f1c:	add	x8, x12, x8
   26f20:	add	w24, w11, #0x9
   26f24:	cmp	w0, #0x0
   26f28:	add	x5, x21, x4
   26f2c:	mov	w0, #0x3                   	// #3
   26f30:	csel	w28, w28, w0, ne  // ne = any
   26f34:	mov	w10, #0x0                   	// #0
   26f38:	mov	w3, w15
   26f3c:	cmp	w15, #0x3
   26f40:	ldr	x0, [sp, #120]
   26f44:	b.ne	27714 <ZSTD_compress@@Base+0x18ec8>  // b.any
   26f48:	ldr	w0, [x0]
   26f4c:	sub	w0, w0, #0x1
   26f50:	sub	w1, w0, #0x1
   26f54:	cmp	w1, w23
   26f58:	b.cs	2771c <ZSTD_compress@@Base+0x18ed0>  // b.hs, b.nlast
   26f5c:	mov	w1, w0
   26f60:	sub	x0, x21, w0, uxtw
   26f64:	ldr	w2, [x0]
   26f68:	ldr	w0, [x21]
   26f6c:	cmp	w2, w0
   26f70:	b.ne	2771c <ZSTD_compress@@Base+0x18ed0>  // b.any
   26f74:	sub	x1, x4, x1
   26f78:	mov	x0, x5
   26f7c:	mov	x2, x20
   26f80:	add	x1, x21, x1
   26f84:	str	x5, [sp, #208]
   26f88:	str	w3, [sp, #216]
   26f8c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   26f90:	ldr	w3, [sp, #216]
   26f94:	add	w0, w0, #0x4
   26f98:	ldr	x5, [sp, #208]
   26f9c:	mov	x4, #0x4                   	// #4
   26fa0:	mov	w1, w0
   26fa4:	cmp	x25, w0, uxtw
   26fa8:	b.cs	26fe0 <ZSTD_compress@@Base+0x18794>  // b.hs, b.nlast
   26fac:	ubfiz	x2, x10, #3, #32
   26fb0:	ldr	w16, [sp, #152]
   26fb4:	add	x6, x22, x2
   26fb8:	add	w10, w10, #0x1
   26fbc:	sub	w3, w3, w16
   26fc0:	str	w3, [x22, x2]
   26fc4:	add	x2, x21, x1
   26fc8:	cmp	x2, x20
   26fcc:	ldr	w2, [sp, #168]
   26fd0:	str	w0, [x6, #4]
   26fd4:	ccmp	w2, w0, #0x0, ne  // ne = any
   26fd8:	b.cc	272c0 <ZSTD_compress@@Base+0x18a74>  // b.lo, b.ul, b.last
   26fdc:	mov	x25, x1
   26fe0:	add	x15, x15, #0x1
   26fe4:	cmp	w28, w15
   26fe8:	b.hi	26f38 <ZSTD_compress@@Base+0x186ec>  // b.pmore
   26fec:	add	w13, w13, #0x2
   26ff0:	str	w11, [x18, x26]
   26ff4:	mov	x18, #0x0                   	// #0
   26ff8:	mov	x11, #0x0                   	// #0
   26ffc:	cbz	w14, 2700c <ZSTD_compress@@Base+0x187c0>
   27000:	ldr	w0, [sp, #200]
   27004:	cmp	w0, w7
   27008:	b.ls	27724 <ZSTD_compress@@Base+0x18ed8>  // b.plast
   2700c:	str	wzr, [x8]
   27010:	str	wzr, [x27]
   27014:	b	26e58 <ZSTD_compress@@Base+0x1860c>
   27018:	mov	x4, x21
   2701c:	mov	w23, #0x79b1                	// #31153
   27020:	movk	w23, #0x9e37, lsl #16
   27024:	ldr	w15, [x25, #4]
   27028:	neg	w1, w1
   2702c:	mov	w24, #0x1                   	// #1
   27030:	ldr	w9, [x4], #3
   27034:	sub	w15, w15, #0x1
   27038:	ldr	w2, [x19, #184]
   2703c:	lsl	w15, w24, w15
   27040:	sub	w15, w15, #0x1
   27044:	cmp	w15, w11
   27048:	sub	w0, w11, w15
   2704c:	mul	w23, w9, w23
   27050:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   27054:	str	w0, [sp, #200]
   27058:	mov	x0, x19
   2705c:	str	x4, [sp, #208]
   27060:	lsr	w23, w23, w1
   27064:	mov	w1, w11
   27068:	ubfiz	x23, x23, #2, #32
   2706c:	str	w3, [sp, #216]
   27070:	ldr	w28, [x18, x23]
   27074:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   27078:	cmp	w0, #0x0
   2707c:	and	w14, w15, w11
   27080:	csel	w0, w0, w24, ne  // ne = any
   27084:	str	w0, [sp, #184]
   27088:	ldr	w0, [x25, #12]
   2708c:	ubfiz	x14, x14, #3, #31
   27090:	ldr	w3, [sp, #216]
   27094:	add	x27, x12, x14
   27098:	ldrb	w8, [sp, #152]
   2709c:	add	x14, x14, #0x4
   270a0:	lsl	w24, w24, w0
   270a4:	ldr	w0, [sp, #148]
   270a8:	ldr	x4, [sp, #208]
   270ac:	sub	w25, w0, #0x1
   270b0:	ldr	w0, [sp, #152]
   270b4:	mov	w7, #0x4                   	// #4
   270b8:	add	x14, x12, x14
   270bc:	add	w26, w11, #0x9
   270c0:	cmp	w0, #0x0
   270c4:	lsl	w9, w9, #8
   270c8:	sub	w5, w11, w5
   270cc:	csel	w7, w7, w3, ne  // ne = any
   270d0:	mov	w10, #0x0                   	// #0
   270d4:	mov	x6, #0x3                   	// #3
   270d8:	mov	w3, w8
   270dc:	cmp	w8, #0x3
   270e0:	ldr	x0, [sp, #120]
   270e4:	b.ne	27278 <ZSTD_compress@@Base+0x18a2c>  // b.any
   270e8:	ldr	w0, [x0]
   270ec:	sub	w0, w0, #0x1
   270f0:	sub	w1, w0, #0x1
   270f4:	cmp	w1, w5
   270f8:	b.cs	27280 <ZSTD_compress@@Base+0x18a34>  // b.hs, b.nlast
   270fc:	mov	w1, w0
   27100:	sub	x0, x21, w0, uxtw
   27104:	ldr	w0, [x0]
   27108:	cmp	w9, w0, lsl #8
   2710c:	b.ne	27280 <ZSTD_compress@@Base+0x18a34>  // b.any
   27110:	sub	x1, x6, x1
   27114:	mov	x0, x4
   27118:	mov	x2, x20
   2711c:	add	x1, x21, x1
   27120:	str	x4, [sp, #208]
   27124:	str	w3, [sp, #216]
   27128:	str	w5, [sp, #248]
   2712c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   27130:	ldr	w3, [sp, #216]
   27134:	add	w0, w0, #0x3
   27138:	ldr	w5, [sp, #248]
   2713c:	mov	x6, #0x3                   	// #3
   27140:	ldr	x4, [sp, #208]
   27144:	mov	w1, w0
   27148:	cmp	x25, w0, uxtw
   2714c:	b.cs	27184 <ZSTD_compress@@Base+0x18938>  // b.hs, b.nlast
   27150:	ubfiz	x2, x10, #3, #32
   27154:	ldr	w17, [sp, #152]
   27158:	add	x16, x22, x2
   2715c:	add	w10, w10, #0x1
   27160:	sub	w3, w3, w17
   27164:	str	w3, [x22, x2]
   27168:	add	x2, x21, x1
   2716c:	cmp	x2, x20
   27170:	ldr	w2, [sp, #168]
   27174:	str	w0, [x16, #4]
   27178:	ccmp	w0, w2, #0x2, ne  // ne = any
   2717c:	b.hi	272c0 <ZSTD_compress@@Base+0x18a74>  // b.pmore
   27180:	mov	x25, x1
   27184:	add	x8, x8, #0x1
   27188:	cmp	w7, w8
   2718c:	b.hi	270d8 <ZSTD_compress@@Base+0x1888c>  // b.pmore
   27190:	cmp	x25, #0x2
   27194:	b.ne	27290 <ZSTD_compress@@Base+0x18a44>  // b.any
   27198:	add	x1, sp, #0x150
   2719c:	mov	x2, x21
   271a0:	mov	x0, x19
   271a4:	bl	1ff88 <ZSTD_compress@@Base+0x1173c>
   271a8:	ldr	w1, [sp, #184]
   271ac:	sub	w7, w11, w0
   271b0:	cmp	w1, w0
   271b4:	mov	w1, #0x3ffff               	// #262143
   271b8:	ccmp	w7, w1, #0x2, ls  // ls = plast
   271bc:	b.hi	27290 <ZSTD_compress@@Base+0x18a44>  // b.pmore
   271c0:	ldr	x1, [sp, #160]
   271c4:	mov	x2, x20
   271c8:	add	x1, x1, w0, uxtw
   271cc:	mov	x0, x21
   271d0:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   271d4:	cmp	x0, #0x2
   271d8:	b.ls	27290 <ZSTD_compress@@Base+0x18a44>  // b.plast
   271dc:	add	w1, w7, #0x2
   271e0:	ldr	w2, [sp, #168]
   271e4:	stp	w1, w0, [x22]
   271e8:	add	x1, x21, x0
   271ec:	cmp	x1, x20
   271f0:	ccmp	x0, x2, #0x2, ne  // ne = any
   271f4:	b.ls	27288 <ZSTD_compress@@Base+0x18a3c>  // b.plast
   271f8:	add	w11, w11, #0x1
   271fc:	mov	w10, #0x1                   	// #1
   27200:	str	w11, [x19, #36]
   27204:	ldp	x1, x0, [sp, #112]
   27208:	mov	w3, #0x2                   	// #2
   2720c:	ldr	x2, [sp, #136]
   27210:	ldr	w0, [x0]
   27214:	str	w0, [x1, #16]
   27218:	ldr	x0, [sp, #120]
   2721c:	ldr	w0, [x0, #4]
   27220:	str	w0, [x1, #20]
   27224:	ldr	x0, [sp, #120]
   27228:	ldr	w0, [x0, #8]
   2722c:	str	w0, [x1, #24]
   27230:	mov	x0, x1
   27234:	ldr	w1, [sp, #176]
   27238:	stp	wzr, w1, [x0, #8]
   2723c:	ldr	x0, [sp, #128]
   27240:	bl	204f4 <ZSTD_compress@@Base+0x11ca8>
   27244:	mov	w6, w0
   27248:	ldr	x0, [sp, #112]
   2724c:	str	w6, [x0]
   27250:	sub	w0, w10, #0x1
   27254:	lsl	x2, x0, #3
   27258:	add	x0, x22, x0, lsl #3
   2725c:	ldr	w1, [x0, #4]
   27260:	ldr	w0, [sp, #232]
   27264:	cmp	w0, w1
   27268:	b.cs	27804 <ZSTD_compress@@Base+0x18fb8>  // b.hs, b.nlast
   2726c:	ldr	w2, [x22, x2]
   27270:	mov	w0, #0x0                   	// #0
   27274:	b	279f8 <ZSTD_compress@@Base+0x191ac>
   27278:	ldr	w0, [x0, x8, lsl #2]
   2727c:	b	270f0 <ZSTD_compress@@Base+0x188a4>
   27280:	mov	w0, #0x0                   	// #0
   27284:	b	27144 <ZSTD_compress@@Base+0x188f8>
   27288:	mov	x25, x0
   2728c:	mov	w10, #0x1                   	// #1
   27290:	add	w13, w13, #0x2
   27294:	mov	x9, #0x0                   	// #0
   27298:	mov	x7, #0x0                   	// #0
   2729c:	str	w11, [x18, x23]
   272a0:	cbz	w24, 272b0 <ZSTD_compress@@Base+0x18a64>
   272a4:	ldr	w0, [sp, #184]
   272a8:	cmp	w0, w28
   272ac:	b.ls	272c8 <ZSTD_compress@@Base+0x18a7c>  // b.plast
   272b0:	str	wzr, [x14]
   272b4:	sub	w26, w26, #0x8
   272b8:	str	wzr, [x27]
   272bc:	str	w26, [x19, #36]
   272c0:	cbz	w10, 26c38 <ZSTD_compress@@Base+0x183ec>
   272c4:	b	27204 <ZSTD_compress@@Base+0x189b8>
   272c8:	and	w8, w15, w28
   272cc:	cmp	x7, x9
   272d0:	ldr	x0, [sp, #160]
   272d4:	ubfiz	x8, x8, #3, #31
   272d8:	csel	x18, x7, x9, ls  // ls = plast
   272dc:	add	x11, x12, x8
   272e0:	mov	x2, x20
   272e4:	add	x23, x0, w28, uxtw
   272e8:	add	x0, x21, x18
   272ec:	add	x1, x23, x18
   272f0:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   272f4:	add	x18, x18, x0
   272f8:	cmp	x18, x25
   272fc:	b.ls	27340 <ZSTD_compress@@Base+0x18af4>  // b.plast
   27300:	sub	w0, w26, w28
   27304:	mov	w2, w18
   27308:	cmp	x18, x0
   2730c:	b.ls	27314 <ZSTD_compress@@Base+0x18ac8>  // b.plast
   27310:	add	w26, w28, w18
   27314:	ubfiz	x1, x10, #3, #32
   27318:	sub	w3, w13, w28
   2731c:	add	x0, x22, x1
   27320:	cmp	x18, #0x1, lsl #12
   27324:	add	w10, w10, #0x1
   27328:	str	w3, [x22, x1]
   2732c:	add	x1, x21, x18
   27330:	str	w2, [x0, #4]
   27334:	ccmp	x1, x20, #0x4, ls  // ls = plast
   27338:	b.eq	272b0 <ZSTD_compress@@Base+0x18a64>  // b.none
   2733c:	mov	x25, x18
   27340:	ldrb	w1, [x23, x18]
   27344:	ldrb	w0, [x21, x18]
   27348:	cmp	w1, w0
   2734c:	b.cs	27374 <ZSTD_compress@@Base+0x18b28>  // b.hs, b.nlast
   27350:	ldr	w0, [sp, #200]
   27354:	str	w28, [x27]
   27358:	cmp	w28, w0
   2735c:	b.ls	27398 <ZSTD_compress@@Base+0x18b4c>  // b.plast
   27360:	ldr	w28, [x11, #4]
   27364:	add	x27, x11, #0x4
   27368:	sub	w24, w24, #0x1
   2736c:	mov	x7, x18
   27370:	b	272a0 <ZSTD_compress@@Base+0x18a54>
   27374:	ldr	w0, [sp, #200]
   27378:	str	w28, [x14]
   2737c:	cmp	w28, w0
   27380:	b.ls	273a0 <ZSTD_compress@@Base+0x18b54>  // b.plast
   27384:	mov	x9, x18
   27388:	ldr	w28, [x12, x8]
   2738c:	mov	x14, x11
   27390:	mov	x18, x7
   27394:	b	27368 <ZSTD_compress@@Base+0x18b1c>
   27398:	add	x27, sp, #0x160
   2739c:	b	272b0 <ZSTD_compress@@Base+0x18a64>
   273a0:	add	x14, sp, #0x160
   273a4:	b	272b0 <ZSTD_compress@@Base+0x18a64>
   273a8:	ldr	w0, [x0, x23, lsl #2]
   273ac:	b	26d94 <ZSTD_compress@@Base+0x18548>
   273b0:	mov	w0, #0x0                   	// #0
   273b4:	b	26de4 <ZSTD_compress@@Base+0x18598>
   273b8:	and	w14, w9, w7
   273bc:	cmp	x11, x18
   273c0:	ldr	x0, [sp, #160]
   273c4:	ubfiz	x14, x14, #3, #31
   273c8:	csel	x27, x11, x18, ls  // ls = plast
   273cc:	add	x23, x12, x14
   273d0:	mov	x2, x20
   273d4:	add	x28, x0, w7, uxtw
   273d8:	add	x0, x21, x27
   273dc:	add	x1, x28, x27
   273e0:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   273e4:	add	x27, x27, x0
   273e8:	cmp	x27, x25
   273ec:	b.ls	27430 <ZSTD_compress@@Base+0x18be4>  // b.plast
   273f0:	sub	w0, w24, w7
   273f4:	mov	w2, w27
   273f8:	cmp	x27, x0
   273fc:	b.ls	27404 <ZSTD_compress@@Base+0x18bb8>  // b.plast
   27400:	add	w24, w7, w27
   27404:	ubfiz	x1, x10, #3, #32
   27408:	sub	w3, w13, w7
   2740c:	add	x0, x22, x1
   27410:	cmp	x27, #0x1, lsl #12
   27414:	add	w10, w10, #0x1
   27418:	str	w3, [x22, x1]
   2741c:	add	x1, x21, x27
   27420:	str	w2, [x0, #4]
   27424:	ccmp	x1, x20, #0x4, ls  // ls = plast
   27428:	b.eq	26e50 <ZSTD_compress@@Base+0x18604>  // b.none
   2742c:	mov	x25, x27
   27430:	ldrb	w1, [x28, x27]
   27434:	ldrb	w0, [x21, x27]
   27438:	cmp	w1, w0
   2743c:	b.cs	27464 <ZSTD_compress@@Base+0x18c18>  // b.hs, b.nlast
   27440:	ldr	w0, [sp, #184]
   27444:	str	w7, [x26]
   27448:	cmp	w7, w0
   2744c:	b.ls	27488 <ZSTD_compress@@Base+0x18c3c>  // b.plast
   27450:	ldr	w7, [x23, #4]
   27454:	add	x26, x23, #0x4
   27458:	sub	w15, w15, #0x1
   2745c:	mov	x11, x27
   27460:	b	26e40 <ZSTD_compress@@Base+0x185f4>
   27464:	ldr	w0, [sp, #184]
   27468:	str	w7, [x8]
   2746c:	cmp	w7, w0
   27470:	b.ls	27490 <ZSTD_compress@@Base+0x18c44>  // b.plast
   27474:	mov	x18, x27
   27478:	ldr	w7, [x12, x14]
   2747c:	mov	x8, x23
   27480:	mov	x27, x11
   27484:	b	27458 <ZSTD_compress@@Base+0x18c0c>
   27488:	add	x26, sp, #0x160
   2748c:	b	26e50 <ZSTD_compress@@Base+0x18604>
   27490:	add	x8, sp, #0x160
   27494:	b	26e50 <ZSTD_compress@@Base+0x18604>
   27498:	mov	w2, w3
   2749c:	mov	x0, x21
   274a0:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   274a4:	lsl	x26, x0, #2
   274a8:	ldr	w9, [x25, #4]
   274ac:	mov	w14, #0x1                   	// #1
   274b0:	ldr	w2, [x19, #184]
   274b4:	mov	w1, w11
   274b8:	sub	w9, w9, #0x1
   274bc:	ldr	w7, [x18, x26]
   274c0:	mov	w27, #0x4                   	// #4
   274c4:	lsl	w9, w14, w9
   274c8:	sub	w9, w9, #0x1
   274cc:	cmp	w9, w11
   274d0:	sub	w0, w11, w9
   274d4:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   274d8:	str	w0, [sp, #184]
   274dc:	mov	x0, x19
   274e0:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   274e4:	cmp	w0, #0x0
   274e8:	csel	w0, w0, w14, ne  // ne = any
   274ec:	str	w0, [sp, #200]
   274f0:	ldr	w0, [x25, #12]
   274f4:	and	w8, w9, w11
   274f8:	ldrb	w15, [sp, #152]
   274fc:	mov	x3, #0x4                   	// #4
   27500:	ubfiz	x8, x8, #3, #31
   27504:	add	w23, w11, #0x9
   27508:	lsl	w14, w14, w0
   2750c:	ldr	w0, [sp, #148]
   27510:	add	x24, x12, x8
   27514:	add	x8, x8, #0x4
   27518:	sub	w25, w0, #0x1
   2751c:	ldr	w0, [sp, #152]
   27520:	add	x8, x12, x8
   27524:	sub	w5, w11, w5
   27528:	cmp	w0, #0x0
   2752c:	add	x4, x21, x3
   27530:	mov	w0, #0x3                   	// #3
   27534:	csel	w27, w27, w0, ne  // ne = any
   27538:	mov	w10, #0x0                   	// #0
   2753c:	mov	w28, w15
   27540:	cmp	w15, #0x3
   27544:	ldr	x0, [sp, #120]
   27548:	b.ne	27624 <ZSTD_compress@@Base+0x18dd8>  // b.any
   2754c:	ldr	w0, [x0]
   27550:	sub	w0, w0, #0x1
   27554:	sub	w1, w0, #0x1
   27558:	cmp	w1, w5
   2755c:	b.cs	2762c <ZSTD_compress@@Base+0x18de0>  // b.hs, b.nlast
   27560:	mov	w1, w0
   27564:	sub	x0, x21, w0, uxtw
   27568:	ldr	w2, [x0]
   2756c:	ldr	w0, [x21]
   27570:	cmp	w2, w0
   27574:	b.ne	2762c <ZSTD_compress@@Base+0x18de0>  // b.any
   27578:	sub	x1, x3, x1
   2757c:	mov	x0, x4
   27580:	mov	x2, x20
   27584:	add	x1, x21, x1
   27588:	str	x4, [sp, #208]
   2758c:	str	w5, [sp, #216]
   27590:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   27594:	ldr	w5, [sp, #216]
   27598:	add	w0, w0, #0x4
   2759c:	ldr	x4, [sp, #208]
   275a0:	mov	x3, #0x4                   	// #4
   275a4:	mov	w1, w0
   275a8:	cmp	x25, w0, uxtw
   275ac:	b.cs	275e4 <ZSTD_compress@@Base+0x18d98>  // b.hs, b.nlast
   275b0:	ubfiz	x2, x10, #3, #32
   275b4:	ldr	w16, [sp, #152]
   275b8:	add	x6, x22, x2
   275bc:	add	w10, w10, #0x1
   275c0:	sub	w28, w28, w16
   275c4:	str	w28, [x22, x2]
   275c8:	add	x2, x21, x1
   275cc:	cmp	x2, x20
   275d0:	ldr	w2, [sp, #168]
   275d4:	str	w0, [x6, #4]
   275d8:	ccmp	w2, w0, #0x0, ne  // ne = any
   275dc:	b.cc	272c0 <ZSTD_compress@@Base+0x18a74>  // b.lo, b.ul, b.last
   275e0:	mov	x25, x1
   275e4:	add	x15, x15, #0x1
   275e8:	cmp	w27, w15
   275ec:	b.hi	2753c <ZSTD_compress@@Base+0x18cf0>  // b.pmore
   275f0:	add	w13, w13, #0x2
   275f4:	str	w11, [x18, x26]
   275f8:	mov	x18, #0x0                   	// #0
   275fc:	mov	x11, #0x0                   	// #0
   27600:	cbz	w14, 27610 <ZSTD_compress@@Base+0x18dc4>
   27604:	ldr	w0, [sp, #200]
   27608:	cmp	w0, w7
   2760c:	b.ls	27634 <ZSTD_compress@@Base+0x18de8>  // b.plast
   27610:	str	wzr, [x8]
   27614:	sub	w23, w23, #0x8
   27618:	str	wzr, [x24]
   2761c:	str	w23, [x19, #36]
   27620:	b	272c0 <ZSTD_compress@@Base+0x18a74>
   27624:	ldr	w0, [x0, x15, lsl #2]
   27628:	b	27554 <ZSTD_compress@@Base+0x18d08>
   2762c:	mov	w0, #0x0                   	// #0
   27630:	b	275a4 <ZSTD_compress@@Base+0x18d58>
   27634:	and	w15, w9, w7
   27638:	cmp	x11, x18
   2763c:	ldr	x0, [sp, #160]
   27640:	ubfiz	x15, x15, #3, #31
   27644:	csel	x27, x11, x18, ls  // ls = plast
   27648:	add	x26, x12, x15
   2764c:	mov	x2, x20
   27650:	add	x28, x0, w7, uxtw
   27654:	add	x0, x21, x27
   27658:	add	x1, x28, x27
   2765c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   27660:	add	x27, x27, x0
   27664:	cmp	x27, x25
   27668:	b.ls	276ac <ZSTD_compress@@Base+0x18e60>  // b.plast
   2766c:	sub	w0, w23, w7
   27670:	mov	w2, w27
   27674:	cmp	x27, x0
   27678:	b.ls	27680 <ZSTD_compress@@Base+0x18e34>  // b.plast
   2767c:	add	w23, w7, w27
   27680:	ubfiz	x1, x10, #3, #32
   27684:	sub	w3, w13, w7
   27688:	add	x0, x22, x1
   2768c:	cmp	x27, #0x1, lsl #12
   27690:	add	w10, w10, #0x1
   27694:	str	w3, [x22, x1]
   27698:	add	x1, x21, x27
   2769c:	str	w2, [x0, #4]
   276a0:	ccmp	x1, x20, #0x4, ls  // ls = plast
   276a4:	b.eq	27610 <ZSTD_compress@@Base+0x18dc4>  // b.none
   276a8:	mov	x25, x27
   276ac:	ldrb	w1, [x28, x27]
   276b0:	ldrb	w0, [x21, x27]
   276b4:	cmp	w1, w0
   276b8:	b.cs	276e0 <ZSTD_compress@@Base+0x18e94>  // b.hs, b.nlast
   276bc:	ldr	w0, [sp, #184]
   276c0:	str	w7, [x24]
   276c4:	cmp	w7, w0
   276c8:	b.ls	27704 <ZSTD_compress@@Base+0x18eb8>  // b.plast
   276cc:	ldr	w7, [x26, #4]
   276d0:	add	x24, x26, #0x4
   276d4:	sub	w14, w14, #0x1
   276d8:	mov	x11, x27
   276dc:	b	27600 <ZSTD_compress@@Base+0x18db4>
   276e0:	ldr	w0, [sp, #184]
   276e4:	str	w7, [x8]
   276e8:	cmp	w7, w0
   276ec:	b.ls	2770c <ZSTD_compress@@Base+0x18ec0>  // b.plast
   276f0:	mov	x18, x27
   276f4:	ldr	w7, [x12, x15]
   276f8:	mov	x8, x26
   276fc:	mov	x27, x11
   27700:	b	276d4 <ZSTD_compress@@Base+0x18e88>
   27704:	add	x24, sp, #0x160
   27708:	b	27610 <ZSTD_compress@@Base+0x18dc4>
   2770c:	add	x8, sp, #0x160
   27710:	b	27610 <ZSTD_compress@@Base+0x18dc4>
   27714:	ldr	w0, [x0, x15, lsl #2]
   27718:	b	26f50 <ZSTD_compress@@Base+0x18704>
   2771c:	mov	w0, #0x0                   	// #0
   27720:	b	26fa0 <ZSTD_compress@@Base+0x18754>
   27724:	and	w15, w9, w7
   27728:	cmp	x11, x18
   2772c:	ldr	x0, [sp, #160]
   27730:	ubfiz	x15, x15, #3, #31
   27734:	csel	x26, x11, x18, ls  // ls = plast
   27738:	add	x23, x12, x15
   2773c:	mov	x2, x20
   27740:	add	x28, x0, w7, uxtw
   27744:	add	x0, x21, x26
   27748:	add	x1, x28, x26
   2774c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   27750:	add	x26, x26, x0
   27754:	cmp	x26, x25
   27758:	b.ls	2779c <ZSTD_compress@@Base+0x18f50>  // b.plast
   2775c:	sub	w0, w24, w7
   27760:	mov	w2, w26
   27764:	cmp	x26, x0
   27768:	b.ls	27770 <ZSTD_compress@@Base+0x18f24>  // b.plast
   2776c:	add	w24, w7, w26
   27770:	ubfiz	x1, x10, #3, #32
   27774:	sub	w3, w13, w7
   27778:	add	x0, x22, x1
   2777c:	cmp	x26, #0x1, lsl #12
   27780:	add	w10, w10, #0x1
   27784:	str	w3, [x22, x1]
   27788:	add	x1, x21, x26
   2778c:	str	w2, [x0, #4]
   27790:	ccmp	x1, x20, #0x4, ls  // ls = plast
   27794:	b.eq	2700c <ZSTD_compress@@Base+0x187c0>  // b.none
   27798:	mov	x25, x26
   2779c:	ldrb	w1, [x28, x26]
   277a0:	ldrb	w0, [x21, x26]
   277a4:	cmp	w1, w0
   277a8:	b.cs	277d0 <ZSTD_compress@@Base+0x18f84>  // b.hs, b.nlast
   277ac:	ldr	w0, [sp, #184]
   277b0:	str	w7, [x27]
   277b4:	cmp	w7, w0
   277b8:	b.ls	277f4 <ZSTD_compress@@Base+0x18fa8>  // b.plast
   277bc:	ldr	w7, [x23, #4]
   277c0:	add	x27, x23, #0x4
   277c4:	sub	w14, w14, #0x1
   277c8:	mov	x11, x26
   277cc:	b	26ffc <ZSTD_compress@@Base+0x187b0>
   277d0:	ldr	w0, [sp, #184]
   277d4:	str	w7, [x8]
   277d8:	cmp	w7, w0
   277dc:	b.ls	277fc <ZSTD_compress@@Base+0x18fb0>  // b.plast
   277e0:	mov	x18, x26
   277e4:	ldr	w7, [x12, x15]
   277e8:	mov	x8, x23
   277ec:	mov	x26, x11
   277f0:	b	277c4 <ZSTD_compress@@Base+0x18f78>
   277f4:	add	x27, sp, #0x160
   277f8:	b	2700c <ZSTD_compress@@Base+0x187c0>
   277fc:	add	x8, sp, #0x160
   27800:	b	2700c <ZSTD_compress@@Base+0x187c0>
   27804:	ldr	x1, [sp, #136]
   27808:	mov	w2, #0x2                   	// #2
   2780c:	mov	w0, #0x0                   	// #0
   27810:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   27814:	add	w6, w6, w0
   27818:	ldr	x1, [sp, #112]
   2781c:	mov	w0, #0x40000000            	// #1073741824
   27820:	str	w0, [x1, #28]
   27824:	str	w0, [x1, #56]
   27828:	ldr	w1, [sp, #148]
   2782c:	cmp	w1, #0x4
   27830:	b.ne	2783c <ZSTD_compress@@Base+0x18ff0>  // b.any
   27834:	ldr	x1, [sp, #112]
   27838:	str	w0, [x1, #84]
   2783c:	ldr	w5, [sp, #148]
   27840:	mov	x7, x22
   27844:	mov	w8, #0x0                   	// #0
   27848:	mov	w11, #0x1c                  	// #28
   2784c:	ldp	w9, w12, [x7]
   27850:	ldr	w2, [sp, #152]
   27854:	ldr	x0, [sp, #120]
   27858:	mov	w1, w9
   2785c:	bl	205a8 <ZSTD_compress@@Base+0x11d5c>
   27860:	add	w2, w9, #0x1
   27864:	clz	w2, w2
   27868:	str	w0, [sp, #352]
   2786c:	eor	w2, w2, #0x1f
   27870:	lsr	x0, x0, #32
   27874:	add	w3, w2, #0x10
   27878:	str	w0, [sp, #356]
   2787c:	sbfiz	x4, x2, #2, #32
   27880:	str	w1, [sp, #360]
   27884:	lsl	w3, w3, #8
   27888:	cmp	w12, w5
   2788c:	b.cs	27aa0 <ZSTD_compress@@Base+0x19254>  // b.hs, b.nlast
   27890:	add	w8, w8, #0x1
   27894:	add	x7, x7, #0x8
   27898:	cmp	w10, w8
   2789c:	b.ne	2784c <ZSTD_compress@@Base+0x19000>  // b.any
   278a0:	sub	w0, w5, #0x1
   278a4:	str	w0, [sp, #176]
   278a8:	mov	w0, #0x1                   	// #1
   278ac:	str	w0, [sp, #168]
   278b0:	ldr	w1, [sp, #176]
   278b4:	ldr	w0, [sp, #168]
   278b8:	cmp	w0, w1
   278bc:	b.hi	279a8 <ZSTD_compress@@Base+0x1915c>  // b.pmore
   278c0:	ldr	w0, [sp, #168]
   278c4:	mov	w1, #0x1c                  	// #28
   278c8:	sub	w9, w0, #0x1
   278cc:	add	x23, x21, w0, uxtw
   278d0:	umull	x9, w9, w1
   278d4:	ldr	x1, [sp, #112]
   278d8:	add	x8, x1, x9
   278dc:	ldr	w1, [x8, #8]
   278e0:	cbnz	w1, 27b50 <ZSTD_compress@@Base+0x19304>
   278e4:	ldr	w7, [x8, #12]
   278e8:	add	w7, w7, #0x1
   278ec:	ldr	x2, [sp, #136]
   278f0:	sub	x0, x0, #0x1
   278f4:	mov	w3, #0x2                   	// #2
   278f8:	mov	w1, #0x1                   	// #1
   278fc:	add	x0, x21, x0
   27900:	bl	20464 <ZSTD_compress@@Base+0x11c18>
   27904:	mov	w5, w0
   27908:	ldr	x1, [sp, #136]
   2790c:	mov	w0, w7
   27910:	mov	w2, #0x2                   	// #2
   27914:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   27918:	add	w5, w5, w0
   2791c:	ldr	x1, [sp, #136]
   27920:	mov	w2, #0x2                   	// #2
   27924:	sub	w0, w7, #0x1
   27928:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   2792c:	ldr	x1, [sp, #112]
   27930:	ldr	w2, [sp, #168]
   27934:	ldr	w1, [x1, x9]
   27938:	sub	w0, w1, w0
   2793c:	mov	w1, #0x1c                  	// #28
   27940:	add	w0, w0, w5
   27944:	umull	x1, w2, w1
   27948:	ldr	x2, [sp, #112]
   2794c:	add	x2, x2, x1
   27950:	str	x2, [sp, #152]
   27954:	ldr	x2, [sp, #112]
   27958:	ldr	w2, [x2, x1]
   2795c:	cmp	w0, w2
   27960:	b.gt	2798c <ZSTD_compress@@Base+0x19140>
   27964:	ldr	x2, [sp, #152]
   27968:	stur	xzr, [x2, #4]
   2796c:	str	w7, [x2, #12]
   27970:	ldr	x2, [sp, #112]
   27974:	str	w0, [x2, x1]
   27978:	ldr	x2, [sp, #152]
   2797c:	ldr	x0, [x8, #16]
   27980:	str	x0, [x2, #16]
   27984:	ldr	w0, [x8, #24]
   27988:	str	w0, [x2, #24]
   2798c:	ldr	x0, [sp, #224]
   27990:	cmp	x23, x0
   27994:	b.hi	282f4 <ZSTD_compress@@Base+0x19aa8>  // b.pmore
   27998:	ldr	w0, [sp, #168]
   2799c:	ldr	w2, [sp, #176]
   279a0:	cmp	w0, w2
   279a4:	b.ne	27b58 <ZSTD_compress@@Base+0x1930c>  // b.any
   279a8:	ldr	w1, [sp, #176]
   279ac:	mov	w0, #0x1c                  	// #28
   279b0:	ldr	x2, [sp, #112]
   279b4:	ldr	w4, [sp, #176]
   279b8:	umaddl	x0, w1, w0, x2
   279bc:	ldp	x2, x3, [x0]
   279c0:	stp	x2, x3, [sp, #368]
   279c4:	ldr	w2, [x0, #4]
   279c8:	ldr	x1, [x0, #16]
   279cc:	str	x1, [sp, #384]
   279d0:	ldr	w1, [x0, #24]
   279d4:	str	w1, [sp, #392]
   279d8:	ldp	w1, w0, [x0, #8]
   279dc:	str	w0, [sp, #192]
   279e0:	mov	w0, w0
   279e4:	add	w3, w1, w0
   279e8:	ldr	w0, [sp, #176]
   279ec:	cmp	w4, w3
   279f0:	sub	w0, w0, w3
   279f4:	csel	w0, w0, wzr, hi  // hi = pmore
   279f8:	str	w2, [sp, #372]
   279fc:	add	w25, w0, #0x1
   27a00:	str	w1, [sp, #376]
   27a04:	mov	w10, w25
   27a08:	ldr	w1, [sp, #192]
   27a0c:	ldr	x2, [sp, #112]
   27a10:	str	w1, [sp, #380]
   27a14:	mov	w1, #0x1c                  	// #28
   27a18:	ldr	x3, [sp, #384]
   27a1c:	umaddl	x2, w25, w1, x2
   27a20:	ldp	x4, x5, [sp, #368]
   27a24:	str	x3, [x2, #16]
   27a28:	ldr	w3, [sp, #392]
   27a2c:	stp	x4, x5, [x2]
   27a30:	str	w3, [x2, #24]
   27a34:	cbz	w0, 27a74 <ZSTD_compress@@Base+0x19228>
   27a38:	ldr	x2, [sp, #112]
   27a3c:	sub	w10, w10, #0x1
   27a40:	umaddl	x4, w0, w1, x2
   27a44:	ldp	w5, w2, [x4, #8]
   27a48:	add	w5, w5, w2
   27a4c:	ldr	x2, [sp, #112]
   27a50:	cmp	w0, w5
   27a54:	umaddl	x6, w10, w1, x2
   27a58:	ldp	x2, x3, [x4]
   27a5c:	stp	x2, x3, [x6]
   27a60:	ldr	x2, [x4, #16]
   27a64:	str	x2, [x6, #16]
   27a68:	ldr	w2, [x4, #24]
   27a6c:	str	w2, [x6, #24]
   27a70:	b.hi	28950 <ZSTD_compress@@Base+0x1a104>  // b.pmore
   27a74:	mov	x13, #0xffff                	// #65535
   27a78:	sub	x12, x20, #0x20
   27a7c:	mov	w15, w13
   27a80:	mov	w14, #0x1c                  	// #28
   27a84:	mov	w18, #0x2                   	// #2
   27a88:	cmp	w25, w10
   27a8c:	b.cs	28958 <ZSTD_compress@@Base+0x1a10c>  // b.hs, b.nlast
   27a90:	ldr	x0, [sp, #136]
   27a94:	mov	w1, #0x2                   	// #2
   27a98:	bl	203b8 <ZSTD_compress@@Base+0x11b6c>
   27a9c:	b	24d30 <ZSTD_compress@@Base+0x164e4>
   27aa0:	ldr	w0, [x19, #152]
   27aa4:	add	x15, x19, #0x48
   27aa8:	sub	w18, w5, #0x3
   27aac:	cmp	w0, #0x1
   27ab0:	b.ne	27afc <ZSTD_compress@@Base+0x192b0>  // b.any
   27ab4:	mov	w0, w18
   27ab8:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   27abc:	add	w0, w3, w0
   27ac0:	ldr	x1, [sp, #112]
   27ac4:	umull	x13, w5, w11
   27ac8:	ldr	w14, [sp, #192]
   27acc:	add	w0, w6, w0
   27ad0:	add	x1, x1, x13
   27ad4:	str	w14, [x1, #12]
   27ad8:	ldr	x14, [sp, #112]
   27adc:	stp	w9, w5, [x1, #4]
   27ae0:	add	w5, w5, #0x1
   27ae4:	str	w0, [x14, x13]
   27ae8:	ldr	x0, [sp, #352]
   27aec:	str	x0, [x1, #16]
   27af0:	ldr	w0, [sp, #360]
   27af4:	str	w0, [x1, #24]
   27af8:	b	27888 <ZSTD_compress@@Base+0x1903c>
   27afc:	ldr	x0, [x15, #24]
   27b00:	ldr	w0, [x0, x4]
   27b04:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   27b08:	mov	w14, w0
   27b0c:	mov	w0, w18
   27b10:	bl	2043c <ZSTD_compress@@Base+0x11bf0>
   27b14:	mov	w18, w0
   27b18:	ldp	w1, w13, [x15, #72]
   27b1c:	add	w13, w13, w1
   27b20:	ldr	x1, [x15, #16]
   27b24:	ldr	w0, [x1, w0, uxtw #2]
   27b28:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   27b2c:	add	w0, w14, w0
   27b30:	ldr	x1, [sp, #264]
   27b34:	sub	w0, w13, w0
   27b38:	ldr	w1, [x1, x18, lsl #2]
   27b3c:	add	w1, w2, w1
   27b40:	lsl	w1, w1, #8
   27b44:	add	w1, w1, #0x33
   27b48:	add	w0, w1, w0
   27b4c:	b	27ac0 <ZSTD_compress@@Base+0x19274>
   27b50:	mov	w7, #0x1                   	// #1
   27b54:	b	278ec <ZSTD_compress@@Base+0x190a0>
   27b58:	ldr	x0, [sp, #152]
   27b5c:	ldr	w25, [x0, #8]
   27b60:	cbnz	w25, 27dd0 <ZSTD_compress@@Base+0x19584>
   27b64:	ldr	w0, [x0, #12]
   27b68:	str	w0, [sp, #192]
   27b6c:	ldr	x27, [x19, #8]
   27b70:	ldr	w26, [x19, #36]
   27b74:	add	x0, x27, w26, uxtw
   27b78:	cmp	x23, x0
   27b7c:	b.cc	282f4 <ZSTD_compress@@Base+0x19aa8>  // b.lo, b.ul, b.last
   27b80:	ldr	x0, [sp, #112]
   27b84:	add	x24, x19, #0xb8
   27b88:	mov	w2, #0x2                   	// #2
   27b8c:	sub	x28, x23, x27
   27b90:	ldr	w0, [x0, x1]
   27b94:	ldr	x1, [sp, #136]
   27b98:	str	w0, [sp, #272]
   27b9c:	mov	w0, #0x0                   	// #0
   27ba0:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   27ba4:	str	w0, [sp, #280]
   27ba8:	ldr	w3, [x24, #16]
   27bac:	mov	w5, w28
   27bb0:	cmp	w5, w26
   27bb4:	b.hi	27dd8 <ZSTD_compress@@Base+0x1958c>  // b.pmore
   27bb8:	cmp	w25, #0x0
   27bbc:	mov	w1, #0xfff                 	// #4095
   27bc0:	cset	w0, ne  // ne = any
   27bc4:	str	w0, [sp, #160]
   27bc8:	ldr	x0, [sp, #152]
   27bcc:	str	w28, [x19, #36]
   27bd0:	add	x0, x0, #0x10
   27bd4:	str	x0, [sp, #216]
   27bd8:	ldr	w0, [x24, #20]
   27bdc:	cmp	w0, #0xfff
   27be0:	csel	w0, w0, w1, ls  // ls = plast
   27be4:	str	w0, [sp, #208]
   27be8:	ldr	x0, [x19, #8]
   27bec:	str	x0, [sp, #200]
   27bf0:	ldr	w1, [x24, #8]
   27bf4:	cmp	w3, #0x5
   27bf8:	sub	x11, x23, x0
   27bfc:	str	w11, [sp, #248]
   27c00:	ldr	x0, [x19, #48]
   27c04:	str	x0, [sp, #184]
   27c08:	b.eq	284e0 <ZSTD_compress@@Base+0x19c94>  // b.none
   27c0c:	b.hi	27e04 <ZSTD_compress@@Base+0x195b8>  // b.pmore
   27c10:	cmp	w3, #0x3
   27c14:	b.eq	28054 <ZSTD_compress@@Base+0x19808>  // b.none
   27c18:	mov	x28, x23
   27c1c:	mov	w12, #0x79b1                	// #31153
   27c20:	movk	w12, #0x9e37, lsl #16
   27c24:	neg	w1, w1
   27c28:	ldp	w2, w9, [x19, #184]
   27c2c:	mov	w13, #0x1                   	// #1
   27c30:	ldr	w0, [x28], #4
   27c34:	mov	w26, #0x4                   	// #4
   27c38:	str	w0, [sp, #252]
   27c3c:	sub	w9, w9, #0x1
   27c40:	mov	w0, w0
   27c44:	ldr	w27, [x19, #24]
   27c48:	lsl	w9, w13, w9
   27c4c:	sub	w9, w9, #0x1
   27c50:	cmp	w9, w11
   27c54:	mul	w12, w0, w12
   27c58:	ldr	x0, [sp, #184]
   27c5c:	lsr	w12, w12, w1
   27c60:	mov	w1, w11
   27c64:	ubfiz	x12, x12, #2, #32
   27c68:	ldr	x24, [x19, #64]
   27c6c:	ldr	w7, [x0, x12]
   27c70:	sub	w0, w11, w9
   27c74:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   27c78:	str	w0, [sp, #240]
   27c7c:	mov	x0, x19
   27c80:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   27c84:	cmp	w0, #0x0
   27c88:	csel	w0, w0, w13, ne  // ne = any
   27c8c:	str	w0, [sp, #256]
   27c90:	ldr	w0, [x19, #196]
   27c94:	and	w8, w9, w11
   27c98:	ldrb	w14, [sp, #160]
   27c9c:	add	w15, w11, #0x9
   27ca0:	ubfiz	x8, x8, #3, #31
   27ca4:	sub	w27, w11, w27
   27ca8:	lsl	w13, w13, w0
   27cac:	ldr	w0, [sp, #148]
   27cb0:	add	x18, x24, x8
   27cb4:	add	x8, x8, #0x4
   27cb8:	sub	w25, w0, #0x1
   27cbc:	ldr	w0, [sp, #160]
   27cc0:	add	x8, x24, x8
   27cc4:	mov	w10, #0x0                   	// #0
   27cc8:	cmp	w0, #0x0
   27ccc:	mov	w0, #0x3                   	// #3
   27cd0:	csel	w26, w26, w0, ne  // ne = any
   27cd4:	mov	x6, #0x4                   	// #4
   27cd8:	ldr	x0, [sp, #152]
   27cdc:	add	x5, x0, #0x10
   27ce0:	mov	w4, w14
   27ce4:	cmp	w14, #0x3
   27ce8:	b.ne	283e8 <ZSTD_compress@@Base+0x19b9c>  // b.any
   27cec:	ldr	x0, [sp, #152]
   27cf0:	ldr	w0, [x0, #16]
   27cf4:	sub	w0, w0, #0x1
   27cf8:	sub	w1, w0, #0x1
   27cfc:	cmp	w1, w27
   27d00:	b.cs	283f0 <ZSTD_compress@@Base+0x19ba4>  // b.hs, b.nlast
   27d04:	mov	w1, w0
   27d08:	sub	x0, x23, w0, uxtw
   27d0c:	ldr	w2, [sp, #252]
   27d10:	ldr	w0, [x0]
   27d14:	cmp	w2, w0
   27d18:	b.ne	283f0 <ZSTD_compress@@Base+0x19ba4>  // b.any
   27d1c:	sub	x1, x6, x1
   27d20:	mov	x2, x20
   27d24:	add	x1, x23, x1
   27d28:	mov	x0, x28
   27d2c:	str	w4, [sp, #288]
   27d30:	str	x5, [sp, #296]
   27d34:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   27d38:	ldr	w4, [sp, #288]
   27d3c:	add	w0, w0, #0x4
   27d40:	ldr	x5, [sp, #296]
   27d44:	mov	x6, #0x4                   	// #4
   27d48:	mov	w1, w0
   27d4c:	cmp	x25, w0, uxtw
   27d50:	b.cs	27d88 <ZSTD_compress@@Base+0x1953c>  // b.hs, b.nlast
   27d54:	ubfiz	x2, x10, #3, #32
   27d58:	ldr	w3, [sp, #160]
   27d5c:	add	x16, x22, x2
   27d60:	add	w10, w10, #0x1
   27d64:	sub	w4, w4, w3
   27d68:	str	w4, [x22, x2]
   27d6c:	add	x2, x23, x1
   27d70:	cmp	x2, x20
   27d74:	ldr	w2, [sp, #208]
   27d78:	str	w0, [x16, #4]
   27d7c:	ccmp	w0, w2, #0x2, ne  // ne = any
   27d80:	b.hi	282f0 <ZSTD_compress@@Base+0x19aa4>  // b.pmore
   27d84:	mov	x25, x1
   27d88:	add	x14, x14, #0x1
   27d8c:	cmp	w26, w14
   27d90:	b.hi	27ce0 <ZSTD_compress@@Base+0x19494>  // b.pmore
   27d94:	ldr	x0, [sp, #184]
   27d98:	mov	x14, #0x0                   	// #0
   27d9c:	str	w11, [x0, x12]
   27da0:	mov	x11, #0x0                   	// #0
   27da4:	ldr	w0, [sp, #248]
   27da8:	add	w3, w0, #0x2
   27dac:	cbz	w13, 27dbc <ZSTD_compress@@Base+0x19570>
   27db0:	ldr	w0, [sp, #256]
   27db4:	cmp	w0, w7
   27db8:	b.ls	283f8 <ZSTD_compress@@Base+0x19bac>  // b.plast
   27dbc:	str	wzr, [x8]
   27dc0:	sub	w15, w15, #0x8
   27dc4:	str	wzr, [x18]
   27dc8:	str	w15, [x19, #36]
   27dcc:	b	282f0 <ZSTD_compress@@Base+0x19aa4>
   27dd0:	str	wzr, [sp, #192]
   27dd4:	b	27b6c <ZSTD_compress@@Base+0x19320>
   27dd8:	add	x1, x27, w26, uxtw
   27ddc:	mov	x2, x20
   27de0:	mov	x0, x19
   27de4:	mov	w4, #0x0                   	// #0
   27de8:	str	w3, [sp, #160]
   27dec:	str	w5, [sp, #184]
   27df0:	bl	2012c <ZSTD_compress@@Base+0x118e0>
   27df4:	ldr	w3, [sp, #160]
   27df8:	add	w26, w26, w0
   27dfc:	ldr	w5, [sp, #184]
   27e00:	b	27bb0 <ZSTD_compress@@Base+0x19364>
   27e04:	sub	w3, w3, #0x6
   27e08:	cmp	w3, #0x1
   27e0c:	b.hi	27c18 <ZSTD_compress@@Base+0x193cc>  // b.pmore
   27e10:	mov	w2, #0x6                   	// #6
   27e14:	mov	x0, x23
   27e18:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   27e1c:	lsl	x25, x0, #2
   27e20:	ldr	w9, [x24, #4]
   27e24:	mov	w12, #0x1                   	// #1
   27e28:	ldr	x0, [sp, #184]
   27e2c:	sub	w9, w9, #0x1
   27e30:	ldr	w2, [x19, #184]
   27e34:	mov	w1, w11
   27e38:	lsl	w9, w12, w9
   27e3c:	sub	w9, w9, #0x1
   27e40:	ldr	w7, [x0, x25]
   27e44:	cmp	w9, w11
   27e48:	ldr	x18, [x19, #64]
   27e4c:	sub	w0, w11, w9
   27e50:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   27e54:	str	w0, [sp, #240]
   27e58:	mov	x0, x19
   27e5c:	ldr	w27, [x19, #24]
   27e60:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   27e64:	cmp	w0, #0x0
   27e68:	csel	w0, w0, w12, ne  // ne = any
   27e6c:	str	w0, [sp, #252]
   27e70:	ldr	w0, [x19, #196]
   27e74:	and	w8, w9, w11
   27e78:	ldrb	w13, [sp, #160]
   27e7c:	mov	w26, #0x4                   	// #4
   27e80:	ubfiz	x8, x8, #3, #31
   27e84:	mov	x4, #0x4                   	// #4
   27e88:	lsl	w12, w12, w0
   27e8c:	ldr	w0, [sp, #148]
   27e90:	add	x15, x18, x8
   27e94:	add	x8, x8, #0x4
   27e98:	sub	w24, w0, #0x1
   27e9c:	ldr	w0, [sp, #160]
   27ea0:	ldr	x3, [sp, #216]
   27ea4:	cmp	w0, #0x0
   27ea8:	add	x8, x18, x8
   27eac:	mov	w0, #0x3                   	// #3
   27eb0:	add	w14, w11, #0x9
   27eb4:	add	x5, x23, x4
   27eb8:	csel	w26, w26, w0, ne  // ne = any
   27ebc:	sub	w27, w11, w27
   27ec0:	mov	w10, #0x0                   	// #0
   27ec4:	mov	w28, w13
   27ec8:	cmp	w13, #0x3
   27ecc:	b.ne	2876c <ZSTD_compress@@Base+0x19f20>  // b.any
   27ed0:	ldr	x0, [sp, #152]
   27ed4:	ldr	w0, [x0, #16]
   27ed8:	sub	w0, w0, #0x1
   27edc:	sub	w1, w0, #0x1
   27ee0:	cmp	w1, w27
   27ee4:	b.cs	28774 <ZSTD_compress@@Base+0x19f28>  // b.hs, b.nlast
   27ee8:	mov	w1, w0
   27eec:	sub	x0, x23, w0, uxtw
   27ef0:	ldr	w2, [x0]
   27ef4:	ldr	w0, [x23]
   27ef8:	cmp	w2, w0
   27efc:	b.ne	28774 <ZSTD_compress@@Base+0x19f28>  // b.any
   27f00:	sub	x1, x4, x1
   27f04:	mov	x0, x5
   27f08:	mov	x2, x20
   27f0c:	add	x1, x23, x1
   27f10:	str	x5, [sp, #256]
   27f14:	str	x3, [sp, #288]
   27f18:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   27f1c:	ldr	x5, [sp, #256]
   27f20:	add	w0, w0, #0x4
   27f24:	ldr	x3, [sp, #288]
   27f28:	mov	x4, #0x4                   	// #4
   27f2c:	mov	w1, w0
   27f30:	cmp	x24, w0, uxtw
   27f34:	b.cs	27f6c <ZSTD_compress@@Base+0x19720>  // b.hs, b.nlast
   27f38:	ubfiz	x2, x10, #3, #32
   27f3c:	ldr	w16, [sp, #160]
   27f40:	add	x6, x22, x2
   27f44:	add	w10, w10, #0x1
   27f48:	sub	w28, w28, w16
   27f4c:	str	w28, [x22, x2]
   27f50:	add	x2, x23, x1
   27f54:	cmp	x2, x20
   27f58:	ldr	w2, [sp, #208]
   27f5c:	str	w0, [x6, #4]
   27f60:	ccmp	w0, w2, #0x2, ne  // ne = any
   27f64:	b.hi	282f0 <ZSTD_compress@@Base+0x19aa4>  // b.pmore
   27f68:	mov	x24, x1
   27f6c:	add	x13, x13, #0x1
   27f70:	cmp	w26, w13
   27f74:	b.hi	27ec4 <ZSTD_compress@@Base+0x19678>  // b.pmore
   27f78:	ldr	x0, [sp, #184]
   27f7c:	mov	x26, #0x0                   	// #0
   27f80:	mov	x13, #0x0                   	// #0
   27f84:	str	w11, [x0, x25]
   27f88:	ldr	w0, [sp, #248]
   27f8c:	add	w11, w0, #0x2
   27f90:	cbz	w12, 28670 <ZSTD_compress@@Base+0x19e24>
   27f94:	ldr	w0, [sp, #252]
   27f98:	cmp	w0, w7
   27f9c:	b.hi	28670 <ZSTD_compress@@Base+0x19e24>  // b.pmore
   27fa0:	ldr	x0, [sp, #200]
   27fa4:	cmp	x13, x26
   27fa8:	and	w25, w9, w7
   27fac:	csel	x28, x13, x26, ls  // ls = plast
   27fb0:	mov	x2, x20
   27fb4:	add	x3, x0, w7, uxtw
   27fb8:	ubfiz	x25, x25, #3, #31
   27fbc:	add	x1, x3, x28
   27fc0:	add	x0, x23, x28
   27fc4:	add	x27, x18, x25
   27fc8:	str	x3, [sp, #184]
   27fcc:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   27fd0:	add	x28, x28, x0
   27fd4:	cmp	x28, x24
   27fd8:	ldr	x3, [sp, #184]
   27fdc:	b.ls	28020 <ZSTD_compress@@Base+0x197d4>  // b.plast
   27fe0:	sub	w0, w14, w7
   27fe4:	mov	w2, w28
   27fe8:	cmp	x28, x0
   27fec:	b.ls	27ff4 <ZSTD_compress@@Base+0x197a8>  // b.plast
   27ff0:	add	w14, w7, w28
   27ff4:	ubfiz	x1, x10, #3, #32
   27ff8:	sub	w4, w11, w7
   27ffc:	add	x0, x22, x1
   28000:	cmp	x28, #0x1, lsl #12
   28004:	add	w10, w10, #0x1
   28008:	str	w4, [x22, x1]
   2800c:	add	x1, x23, x28
   28010:	str	w2, [x0, #4]
   28014:	ccmp	x1, x20, #0x4, ls  // ls = plast
   28018:	b.eq	28670 <ZSTD_compress@@Base+0x19e24>  // b.none
   2801c:	mov	x24, x28
   28020:	ldrb	w1, [x3, x28]
   28024:	ldrb	w0, [x23, x28]
   28028:	cmp	w1, w0
   2802c:	b.cs	2877c <ZSTD_compress@@Base+0x19f30>  // b.hs, b.nlast
   28030:	ldr	w0, [sp, #240]
   28034:	str	w7, [x15]
   28038:	cmp	w7, w0
   2803c:	b.ls	287a0 <ZSTD_compress@@Base+0x19f54>  // b.plast
   28040:	ldr	w7, [x27, #4]
   28044:	add	x15, x27, #0x4
   28048:	sub	w12, w12, #0x1
   2804c:	mov	x13, x28
   28050:	b	27f90 <ZSTD_compress@@Base+0x19744>
   28054:	mov	x28, x23
   28058:	mov	w0, #0x79b1                	// #31153
   2805c:	movk	w0, #0x9e37, lsl #16
   28060:	neg	w1, w1
   28064:	ldr	w14, [x24, #4]
   28068:	mov	w15, #0x1                   	// #1
   2806c:	ldr	w9, [x28], #3
   28070:	sub	w14, w14, #0x1
   28074:	ldr	w2, [x19, #184]
   28078:	str	w3, [sp, #288]
   2807c:	lsl	w14, w15, w14
   28080:	sub	w14, w14, #0x1
   28084:	mul	w0, w9, w0
   28088:	cmp	w14, w11
   2808c:	ldr	x26, [x19, #64]
   28090:	lsr	w0, w0, w1
   28094:	ldr	w27, [x19, #24]
   28098:	ubfiz	x0, x0, #2, #32
   2809c:	str	x0, [sp, #256]
   280a0:	ldr	x0, [sp, #184]
   280a4:	ldr	x1, [sp, #256]
   280a8:	ldr	w12, [x0, x1]
   280ac:	sub	w0, w11, w14
   280b0:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   280b4:	mov	w1, w11
   280b8:	str	w0, [sp, #252]
   280bc:	mov	x0, x19
   280c0:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   280c4:	cmp	w0, #0x0
   280c8:	csel	w0, w0, w15, ne  // ne = any
   280cc:	str	w0, [sp, #240]
   280d0:	ldr	w0, [x19, #196]
   280d4:	and	w13, w14, w11
   280d8:	ldr	w3, [sp, #288]
   280dc:	mov	w7, #0x4                   	// #4
   280e0:	ubfiz	x13, x13, #3, #31
   280e4:	ldrb	w8, [sp, #160]
   280e8:	lsl	w15, w15, w0
   280ec:	ldr	w0, [sp, #148]
   280f0:	add	x25, x26, x13
   280f4:	add	x13, x13, #0x4
   280f8:	sub	w18, w0, #0x1
   280fc:	ldr	w0, [sp, #160]
   28100:	ldr	x4, [sp, #216]
   28104:	cmp	w0, #0x0
   28108:	add	x13, x26, x13
   2810c:	add	w24, w11, #0x9
   28110:	lsl	w9, w9, #8
   28114:	csel	w7, w7, w3, ne  // ne = any
   28118:	sub	w27, w11, w27
   2811c:	mov	w10, #0x0                   	// #0
   28120:	mov	x5, #0x3                   	// #3
   28124:	mov	w3, w8
   28128:	cmp	w8, #0x3
   2812c:	b.ne	2829c <ZSTD_compress@@Base+0x19a50>  // b.any
   28130:	ldr	x0, [sp, #152]
   28134:	ldr	w0, [x0, #16]
   28138:	sub	w0, w0, #0x1
   2813c:	sub	w1, w0, #0x1
   28140:	cmp	w1, w27
   28144:	b.cs	282a4 <ZSTD_compress@@Base+0x19a58>  // b.hs, b.nlast
   28148:	mov	w1, w0
   2814c:	sub	x0, x23, w0, uxtw
   28150:	ldr	w0, [x0]
   28154:	cmp	w9, w0, lsl #8
   28158:	b.ne	282a4 <ZSTD_compress@@Base+0x19a58>  // b.any
   2815c:	sub	x1, x5, x1
   28160:	mov	x2, x20
   28164:	add	x1, x23, x1
   28168:	mov	x0, x28
   2816c:	str	w3, [sp, #288]
   28170:	str	x4, [sp, #296]
   28174:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   28178:	ldr	w3, [sp, #288]
   2817c:	add	w0, w0, #0x3
   28180:	ldr	x4, [sp, #296]
   28184:	mov	x5, #0x3                   	// #3
   28188:	mov	w1, w0
   2818c:	cmp	x18, w0, uxtw
   28190:	b.cs	281c8 <ZSTD_compress@@Base+0x1997c>  // b.hs, b.nlast
   28194:	ubfiz	x2, x10, #3, #32
   28198:	ldr	w16, [sp, #160]
   2819c:	add	x6, x22, x2
   281a0:	add	w10, w10, #0x1
   281a4:	sub	w3, w3, w16
   281a8:	str	w3, [x22, x2]
   281ac:	add	x2, x23, x1
   281b0:	cmp	x2, x20
   281b4:	ldr	w2, [sp, #208]
   281b8:	str	w0, [x6, #4]
   281bc:	ccmp	w0, w2, #0x2, ne  // ne = any
   281c0:	b.hi	282f0 <ZSTD_compress@@Base+0x19aa4>  // b.pmore
   281c4:	mov	x18, x1
   281c8:	add	x8, x8, #0x1
   281cc:	cmp	w7, w8
   281d0:	b.hi	28124 <ZSTD_compress@@Base+0x198d8>  // b.pmore
   281d4:	cmp	x18, #0x2
   281d8:	b.ne	282b4 <ZSTD_compress@@Base+0x19a68>  // b.any
   281dc:	add	x1, sp, #0x150
   281e0:	mov	x2, x23
   281e4:	mov	x0, x19
   281e8:	bl	1ff88 <ZSTD_compress@@Base+0x1173c>
   281ec:	ldr	w1, [sp, #240]
   281f0:	sub	w7, w11, w0
   281f4:	cmp	w1, w0
   281f8:	mov	w1, #0x3ffff               	// #262143
   281fc:	ccmp	w7, w1, #0x2, ls  // ls = plast
   28200:	b.hi	282b4 <ZSTD_compress@@Base+0x19a68>  // b.pmore
   28204:	ldr	x1, [sp, #200]
   28208:	mov	x2, x20
   2820c:	add	x1, x1, w0, uxtw
   28210:	mov	x0, x23
   28214:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   28218:	cmp	x0, #0x2
   2821c:	b.ls	282b4 <ZSTD_compress@@Base+0x19a68>  // b.plast
   28220:	ldr	w2, [sp, #208]
   28224:	add	w7, w7, #0x2
   28228:	add	x1, x23, x0
   2822c:	stp	w7, w0, [x22]
   28230:	cmp	x1, x20
   28234:	ccmp	x0, x2, #0x2, ne  // ne = any
   28238:	b.ls	282ac <ZSTD_compress@@Base+0x19a60>  // b.plast
   2823c:	add	w11, w11, #0x1
   28240:	mov	w10, #0x1                   	// #1
   28244:	str	w11, [x19, #36]
   28248:	sub	w0, w10, #0x1
   2824c:	ldr	w2, [sp, #232]
   28250:	add	x0, x22, x0, lsl #3
   28254:	ldr	w1, [x0, #4]
   28258:	cmp	w2, w1
   2825c:	b.cc	28270 <ZSTD_compress@@Base+0x19a24>  // b.lo, b.ul, b.last
   28260:	ldr	w2, [sp, #168]
   28264:	add	w2, w2, w1
   28268:	cmp	w2, #0xfff
   2826c:	b.ls	287b8 <ZSTD_compress@@Base+0x19f6c>  // b.plast
   28270:	ldr	w2, [x0]
   28274:	ldr	x0, [sp, #152]
   28278:	ldr	w0, [x0, #8]
   2827c:	cbnz	w0, 287b0 <ZSTD_compress@@Base+0x19f64>
   28280:	ldr	x0, [sp, #152]
   28284:	ldr	w0, [x0, #12]
   28288:	ldr	w3, [sp, #168]
   2828c:	sub	w0, w3, w0
   28290:	cmp	w0, #0x1, lsl #12
   28294:	b.ls	279f8 <ZSTD_compress@@Base+0x191ac>  // b.plast
   28298:	b	27270 <ZSTD_compress@@Base+0x18a24>
   2829c:	ldr	w0, [x4, x8, lsl #2]
   282a0:	b	2813c <ZSTD_compress@@Base+0x198f0>
   282a4:	mov	w0, #0x0                   	// #0
   282a8:	b	28188 <ZSTD_compress@@Base+0x1993c>
   282ac:	mov	x18, x0
   282b0:	mov	w10, #0x1                   	// #1
   282b4:	ldr	x0, [sp, #184]
   282b8:	mov	x9, #0x0                   	// #0
   282bc:	ldr	x1, [sp, #256]
   282c0:	mov	x7, #0x0                   	// #0
   282c4:	str	w11, [x0, x1]
   282c8:	ldr	w0, [sp, #248]
   282cc:	add	w3, w0, #0x2
   282d0:	cbz	w15, 282e0 <ZSTD_compress@@Base+0x19a94>
   282d4:	ldr	w0, [sp, #240]
   282d8:	cmp	w0, w12
   282dc:	b.ls	28300 <ZSTD_compress@@Base+0x19ab4>  // b.plast
   282e0:	str	wzr, [x13]
   282e4:	sub	w24, w24, #0x8
   282e8:	str	wzr, [x25]
   282ec:	str	w24, [x19, #36]
   282f0:	cbnz	w10, 28248 <ZSTD_compress@@Base+0x199fc>
   282f4:	ldr	w0, [sp, #168]
   282f8:	add	w0, w0, #0x1
   282fc:	b	278ac <ZSTD_compress@@Base+0x19060>
   28300:	and	w8, w14, w12
   28304:	cmp	x7, x9
   28308:	ldr	x0, [sp, #200]
   2830c:	ubfiz	x8, x8, #3, #31
   28310:	add	x11, x26, x8
   28314:	csel	x27, x7, x9, ls  // ls = plast
   28318:	mov	x2, x20
   2831c:	str	w3, [sp, #184]
   28320:	add	x28, x0, w12, uxtw
   28324:	add	x0, x23, x27
   28328:	add	x1, x28, x27
   2832c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   28330:	add	x27, x27, x0
   28334:	ldr	w3, [sp, #184]
   28338:	cmp	x27, x18
   2833c:	b.ls	28380 <ZSTD_compress@@Base+0x19b34>  // b.plast
   28340:	sub	w0, w24, w12
   28344:	mov	w2, w27
   28348:	cmp	x27, x0
   2834c:	b.ls	28354 <ZSTD_compress@@Base+0x19b08>  // b.plast
   28350:	add	w24, w12, w27
   28354:	ubfiz	x1, x10, #3, #32
   28358:	sub	w4, w3, w12
   2835c:	add	x0, x22, x1
   28360:	cmp	x27, #0x1, lsl #12
   28364:	add	w10, w10, #0x1
   28368:	str	w4, [x22, x1]
   2836c:	add	x1, x23, x27
   28370:	str	w2, [x0, #4]
   28374:	ccmp	x1, x20, #0x4, ls  // ls = plast
   28378:	b.eq	282e0 <ZSTD_compress@@Base+0x19a94>  // b.none
   2837c:	mov	x18, x27
   28380:	ldrb	w1, [x28, x27]
   28384:	ldrb	w0, [x23, x27]
   28388:	cmp	w1, w0
   2838c:	b.cs	283b4 <ZSTD_compress@@Base+0x19b68>  // b.hs, b.nlast
   28390:	ldr	w0, [sp, #252]
   28394:	str	w12, [x25]
   28398:	cmp	w12, w0
   2839c:	b.ls	283d8 <ZSTD_compress@@Base+0x19b8c>  // b.plast
   283a0:	ldr	w12, [x11, #4]
   283a4:	add	x25, x11, #0x4
   283a8:	sub	w15, w15, #0x1
   283ac:	mov	x7, x27
   283b0:	b	282d0 <ZSTD_compress@@Base+0x19a84>
   283b4:	ldr	w0, [sp, #252]
   283b8:	str	w12, [x13]
   283bc:	cmp	w12, w0
   283c0:	b.ls	283e0 <ZSTD_compress@@Base+0x19b94>  // b.plast
   283c4:	mov	x9, x27
   283c8:	ldr	w12, [x26, x8]
   283cc:	mov	x13, x11
   283d0:	mov	x27, x7
   283d4:	b	283a8 <ZSTD_compress@@Base+0x19b5c>
   283d8:	add	x25, sp, #0x160
   283dc:	b	282e0 <ZSTD_compress@@Base+0x19a94>
   283e0:	add	x13, sp, #0x160
   283e4:	b	282e0 <ZSTD_compress@@Base+0x19a94>
   283e8:	ldr	w0, [x5, x14, lsl #2]
   283ec:	b	27cf8 <ZSTD_compress@@Base+0x194ac>
   283f0:	mov	w0, #0x0                   	// #0
   283f4:	b	27d48 <ZSTD_compress@@Base+0x194fc>
   283f8:	and	w12, w9, w7
   283fc:	cmp	x11, x14
   28400:	ldr	x0, [sp, #200]
   28404:	ubfiz	x12, x12, #3, #31
   28408:	csel	x27, x11, x14, ls  // ls = plast
   2840c:	add	x26, x24, x12
   28410:	mov	x2, x20
   28414:	str	w3, [sp, #184]
   28418:	add	x28, x0, w7, uxtw
   2841c:	add	x0, x23, x27
   28420:	add	x1, x28, x27
   28424:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   28428:	add	x27, x27, x0
   2842c:	ldr	w3, [sp, #184]
   28430:	cmp	x27, x25
   28434:	b.ls	28478 <ZSTD_compress@@Base+0x19c2c>  // b.plast
   28438:	sub	w0, w15, w7
   2843c:	mov	w2, w27
   28440:	cmp	x27, x0
   28444:	b.ls	2844c <ZSTD_compress@@Base+0x19c00>  // b.plast
   28448:	add	w15, w7, w27
   2844c:	ubfiz	x1, x10, #3, #32
   28450:	sub	w4, w3, w7
   28454:	add	x0, x22, x1
   28458:	cmp	x27, #0x1, lsl #12
   2845c:	add	w10, w10, #0x1
   28460:	str	w4, [x22, x1]
   28464:	add	x1, x23, x27
   28468:	str	w2, [x0, #4]
   2846c:	ccmp	x1, x20, #0x4, ls  // ls = plast
   28470:	b.eq	27dbc <ZSTD_compress@@Base+0x19570>  // b.none
   28474:	mov	x25, x27
   28478:	ldrb	w1, [x28, x27]
   2847c:	ldrb	w0, [x23, x27]
   28480:	cmp	w1, w0
   28484:	b.cs	284ac <ZSTD_compress@@Base+0x19c60>  // b.hs, b.nlast
   28488:	ldr	w0, [sp, #240]
   2848c:	str	w7, [x18]
   28490:	cmp	w7, w0
   28494:	b.ls	284d0 <ZSTD_compress@@Base+0x19c84>  // b.plast
   28498:	ldr	w7, [x26, #4]
   2849c:	add	x18, x26, #0x4
   284a0:	sub	w13, w13, #0x1
   284a4:	mov	x11, x27
   284a8:	b	27dac <ZSTD_compress@@Base+0x19560>
   284ac:	ldr	w0, [sp, #240]
   284b0:	str	w7, [x8]
   284b4:	cmp	w7, w0
   284b8:	b.ls	284d8 <ZSTD_compress@@Base+0x19c8c>  // b.plast
   284bc:	mov	x14, x27
   284c0:	ldr	w7, [x24, x12]
   284c4:	mov	x8, x26
   284c8:	mov	x27, x11
   284cc:	b	284a0 <ZSTD_compress@@Base+0x19c54>
   284d0:	add	x18, sp, #0x160
   284d4:	b	27dbc <ZSTD_compress@@Base+0x19570>
   284d8:	add	x8, sp, #0x160
   284dc:	b	27dbc <ZSTD_compress@@Base+0x19570>
   284e0:	mov	w2, w3
   284e4:	mov	x0, x23
   284e8:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   284ec:	lsl	x25, x0, #2
   284f0:	ldr	w9, [x24, #4]
   284f4:	mov	w12, #0x1                   	// #1
   284f8:	ldr	x0, [sp, #184]
   284fc:	sub	w9, w9, #0x1
   28500:	ldr	w2, [x19, #184]
   28504:	mov	w1, w11
   28508:	lsl	w9, w12, w9
   2850c:	sub	w9, w9, #0x1
   28510:	ldr	w7, [x0, x25]
   28514:	cmp	w9, w11
   28518:	ldr	x18, [x19, #64]
   2851c:	sub	w0, w11, w9
   28520:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   28524:	str	w0, [sp, #240]
   28528:	mov	x0, x19
   2852c:	ldr	w27, [x19, #24]
   28530:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   28534:	cmp	w0, #0x0
   28538:	csel	w0, w0, w12, ne  // ne = any
   2853c:	str	w0, [sp, #252]
   28540:	ldr	w0, [x19, #196]
   28544:	and	w8, w9, w11
   28548:	ldrb	w13, [sp, #160]
   2854c:	mov	w26, #0x4                   	// #4
   28550:	ubfiz	x8, x8, #3, #31
   28554:	mov	x4, #0x4                   	// #4
   28558:	lsl	w12, w12, w0
   2855c:	ldr	w0, [sp, #148]
   28560:	add	x15, x18, x8
   28564:	add	x8, x8, #0x4
   28568:	sub	w24, w0, #0x1
   2856c:	ldr	w0, [sp, #160]
   28570:	ldr	x3, [sp, #216]
   28574:	cmp	w0, #0x0
   28578:	add	x8, x18, x8
   2857c:	mov	w0, #0x3                   	// #3
   28580:	add	w14, w11, #0x9
   28584:	add	x5, x23, x4
   28588:	csel	w26, w26, w0, ne  // ne = any
   2858c:	sub	w27, w11, w27
   28590:	mov	w10, #0x0                   	// #0
   28594:	mov	w28, w13
   28598:	cmp	w13, #0x3
   2859c:	b.ne	28684 <ZSTD_compress@@Base+0x19e38>  // b.any
   285a0:	ldr	x0, [sp, #152]
   285a4:	ldr	w0, [x0, #16]
   285a8:	sub	w0, w0, #0x1
   285ac:	sub	w1, w0, #0x1
   285b0:	cmp	w1, w27
   285b4:	b.cs	2868c <ZSTD_compress@@Base+0x19e40>  // b.hs, b.nlast
   285b8:	mov	w1, w0
   285bc:	sub	x0, x23, w0, uxtw
   285c0:	ldr	w2, [x0]
   285c4:	ldr	w0, [x23]
   285c8:	cmp	w2, w0
   285cc:	b.ne	2868c <ZSTD_compress@@Base+0x19e40>  // b.any
   285d0:	sub	x1, x4, x1
   285d4:	mov	x0, x5
   285d8:	mov	x2, x20
   285dc:	add	x1, x23, x1
   285e0:	str	x5, [sp, #256]
   285e4:	str	x3, [sp, #288]
   285e8:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   285ec:	ldr	x5, [sp, #256]
   285f0:	add	w0, w0, #0x4
   285f4:	ldr	x3, [sp, #288]
   285f8:	mov	x4, #0x4                   	// #4
   285fc:	mov	w1, w0
   28600:	cmp	x24, w0, uxtw
   28604:	b.cs	2863c <ZSTD_compress@@Base+0x19df0>  // b.hs, b.nlast
   28608:	ubfiz	x2, x10, #3, #32
   2860c:	ldr	w16, [sp, #160]
   28610:	add	x6, x22, x2
   28614:	add	w10, w10, #0x1
   28618:	sub	w28, w28, w16
   2861c:	str	w28, [x22, x2]
   28620:	add	x2, x23, x1
   28624:	cmp	x2, x20
   28628:	ldr	w2, [sp, #208]
   2862c:	str	w0, [x6, #4]
   28630:	ccmp	w0, w2, #0x2, ne  // ne = any
   28634:	b.hi	282f0 <ZSTD_compress@@Base+0x19aa4>  // b.pmore
   28638:	mov	x24, x1
   2863c:	add	x13, x13, #0x1
   28640:	cmp	w26, w13
   28644:	b.hi	28594 <ZSTD_compress@@Base+0x19d48>  // b.pmore
   28648:	ldr	x0, [sp, #184]
   2864c:	str	w11, [x0, x25]
   28650:	mov	x25, #0x0                   	// #0
   28654:	ldr	w0, [sp, #248]
   28658:	mov	x11, #0x0                   	// #0
   2865c:	add	w3, w0, #0x2
   28660:	cbz	w12, 28670 <ZSTD_compress@@Base+0x19e24>
   28664:	ldr	w0, [sp, #252]
   28668:	cmp	w0, w7
   2866c:	b.ls	28694 <ZSTD_compress@@Base+0x19e48>  // b.plast
   28670:	str	wzr, [x8]
   28674:	sub	w14, w14, #0x8
   28678:	str	wzr, [x15]
   2867c:	str	w14, [x19, #36]
   28680:	b	282f0 <ZSTD_compress@@Base+0x19aa4>
   28684:	ldr	w0, [x3, x13, lsl #2]
   28688:	b	285ac <ZSTD_compress@@Base+0x19d60>
   2868c:	mov	w0, #0x0                   	// #0
   28690:	b	285fc <ZSTD_compress@@Base+0x19db0>
   28694:	and	w13, w9, w7
   28698:	cmp	x11, x25
   2869c:	ldr	x0, [sp, #200]
   286a0:	ubfiz	x13, x13, #3, #31
   286a4:	csel	x27, x11, x25, ls  // ls = plast
   286a8:	add	x26, x18, x13
   286ac:	mov	x2, x20
   286b0:	str	w3, [sp, #184]
   286b4:	add	x28, x0, w7, uxtw
   286b8:	add	x0, x23, x27
   286bc:	add	x1, x28, x27
   286c0:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   286c4:	add	x27, x27, x0
   286c8:	ldr	w3, [sp, #184]
   286cc:	cmp	x27, x24
   286d0:	b.ls	28714 <ZSTD_compress@@Base+0x19ec8>  // b.plast
   286d4:	sub	w0, w14, w7
   286d8:	mov	w2, w27
   286dc:	cmp	x27, x0
   286e0:	b.ls	286e8 <ZSTD_compress@@Base+0x19e9c>  // b.plast
   286e4:	add	w14, w7, w27
   286e8:	ubfiz	x1, x10, #3, #32
   286ec:	sub	w4, w3, w7
   286f0:	add	x0, x22, x1
   286f4:	cmp	x27, #0x1, lsl #12
   286f8:	add	w10, w10, #0x1
   286fc:	str	w4, [x22, x1]
   28700:	add	x1, x23, x27
   28704:	str	w2, [x0, #4]
   28708:	ccmp	x1, x20, #0x4, ls  // ls = plast
   2870c:	b.eq	28670 <ZSTD_compress@@Base+0x19e24>  // b.none
   28710:	mov	x24, x27
   28714:	ldrb	w1, [x28, x27]
   28718:	ldrb	w0, [x23, x27]
   2871c:	cmp	w1, w0
   28720:	b.cs	28748 <ZSTD_compress@@Base+0x19efc>  // b.hs, b.nlast
   28724:	ldr	w0, [sp, #240]
   28728:	str	w7, [x15]
   2872c:	cmp	w7, w0
   28730:	b.ls	287a0 <ZSTD_compress@@Base+0x19f54>  // b.plast
   28734:	ldr	w7, [x26, #4]
   28738:	add	x15, x26, #0x4
   2873c:	sub	w12, w12, #0x1
   28740:	mov	x11, x27
   28744:	b	28660 <ZSTD_compress@@Base+0x19e14>
   28748:	ldr	w0, [sp, #240]
   2874c:	str	w7, [x8]
   28750:	cmp	w7, w0
   28754:	b.ls	287a8 <ZSTD_compress@@Base+0x19f5c>  // b.plast
   28758:	mov	x25, x27
   2875c:	ldr	w7, [x18, x13]
   28760:	mov	x8, x26
   28764:	mov	x27, x11
   28768:	b	2873c <ZSTD_compress@@Base+0x19ef0>
   2876c:	ldr	w0, [x3, x13, lsl #2]
   28770:	b	27edc <ZSTD_compress@@Base+0x19690>
   28774:	mov	w0, #0x0                   	// #0
   28778:	b	27f2c <ZSTD_compress@@Base+0x196e0>
   2877c:	ldr	w0, [sp, #240]
   28780:	str	w7, [x8]
   28784:	cmp	w7, w0
   28788:	b.ls	287a8 <ZSTD_compress@@Base+0x19f5c>  // b.plast
   2878c:	mov	x26, x28
   28790:	ldr	w7, [x18, x25]
   28794:	mov	x8, x27
   28798:	mov	x28, x13
   2879c:	b	28048 <ZSTD_compress@@Base+0x197fc>
   287a0:	add	x15, sp, #0x160
   287a4:	b	28670 <ZSTD_compress@@Base+0x19e24>
   287a8:	add	x8, sp, #0x160
   287ac:	b	28670 <ZSTD_compress@@Base+0x19e24>
   287b0:	mov	w0, #0x0                   	// #0
   287b4:	b	28288 <ZSTD_compress@@Base+0x19a3c>
   287b8:	mov	x9, x22
   287bc:	mov	w5, #0x0                   	// #0
   287c0:	ldr	w12, [x9]
   287c4:	ldr	w2, [sp, #160]
   287c8:	ldr	x0, [sp, #216]
   287cc:	mov	w1, w12
   287d0:	bl	205a8 <ZSTD_compress@@Base+0x11d5c>
   287d4:	str	w0, [sp, #352]
   287d8:	lsr	x0, x0, #32
   287dc:	str	w0, [sp, #356]
   287e0:	str	w1, [sp, #360]
   287e4:	ldr	w3, [x9, #4]
   287e8:	cbz	w5, 2884c <ZSTD_compress@@Base+0x1a000>
   287ec:	sub	w0, w5, #0x1
   287f0:	add	x0, x22, x0, lsl #3
   287f4:	ldr	w11, [x0, #4]
   287f8:	add	w11, w11, #0x1
   287fc:	add	w2, w12, #0x1
   28800:	ldr	w0, [sp, #168]
   28804:	clz	w2, w2
   28808:	ldr	w1, [sp, #280]
   2880c:	eor	w2, w2, #0x1f
   28810:	add	w4, w0, w3
   28814:	add	w13, w2, #0x10
   28818:	ldr	w0, [sp, #272]
   2881c:	sbfiz	x15, x2, #2, #32
   28820:	mov	w14, #0x1c                  	// #28
   28824:	lsl	w13, w13, #8
   28828:	add	w18, w0, w1
   2882c:	mov	w23, #0x40000000            	// #1073741824
   28830:	cmp	w3, w11
   28834:	b.cs	28854 <ZSTD_compress@@Base+0x1a008>  // b.hs, b.nlast
   28838:	add	w5, w5, #0x1
   2883c:	add	x9, x9, #0x8
   28840:	cmp	w10, w5
   28844:	b.ne	287c0 <ZSTD_compress@@Base+0x19f74>  // b.any
   28848:	b	282f4 <ZSTD_compress@@Base+0x19aa8>
   2884c:	ldr	w11, [sp, #148]
   28850:	b	287fc <ZSTD_compress@@Base+0x19fb0>
   28854:	ldr	w0, [x19, #152]
   28858:	add	x8, x19, #0x48
   2885c:	sub	w24, w3, #0x3
   28860:	cmp	w0, #0x1
   28864:	b.ne	288d0 <ZSTD_compress@@Base+0x1a084>  // b.any
   28868:	mov	w0, w24
   2886c:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   28870:	add	w0, w13, w0
   28874:	ldr	x1, [sp, #112]
   28878:	umull	x7, w4, w14
   2887c:	add	w0, w18, w0
   28880:	add	x6, x1, x7
   28884:	ldr	w1, [sp, #176]
   28888:	cmp	w1, w4
   2888c:	b.cc	28924 <ZSTD_compress@@Base+0x1a0d8>  // b.lo, b.ul, b.last
   28890:	ldr	x1, [sp, #112]
   28894:	ldr	w1, [x1, x7]
   28898:	cmp	w0, w1
   2889c:	b.ge	288c4 <ZSTD_compress@@Base+0x1a078>  // b.tcont
   288a0:	ldr	w1, [sp, #192]
   288a4:	str	w1, [x6, #12]
   288a8:	ldr	x1, [sp, #112]
   288ac:	stp	w12, w3, [x6, #4]
   288b0:	str	w0, [x1, x7]
   288b4:	ldr	x0, [sp, #352]
   288b8:	str	x0, [x6, #16]
   288bc:	ldr	w0, [sp, #360]
   288c0:	str	w0, [x6, #24]
   288c4:	sub	w3, w3, #0x1
   288c8:	sub	w4, w4, #0x1
   288cc:	b	28830 <ZSTD_compress@@Base+0x19fe4>
   288d0:	ldr	x0, [x8, #24]
   288d4:	ldr	w0, [x0, x15]
   288d8:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   288dc:	mov	w7, w0
   288e0:	mov	w0, w24
   288e4:	bl	2043c <ZSTD_compress@@Base+0x11bf0>
   288e8:	mov	w24, w0
   288ec:	ldp	w1, w6, [x8, #72]
   288f0:	add	w6, w6, w1
   288f4:	ldr	x1, [x8, #16]
   288f8:	ldr	w0, [x1, w0, uxtw #2]
   288fc:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   28900:	add	w0, w7, w0
   28904:	ldr	x1, [sp, #264]
   28908:	sub	w0, w6, w0
   2890c:	ldr	w1, [x1, x24, lsl #2]
   28910:	add	w1, w2, w1
   28914:	lsl	w1, w1, #8
   28918:	add	w1, w1, #0x33
   2891c:	add	w0, w1, w0
   28920:	b	28874 <ZSTD_compress@@Base+0x1a028>
   28924:	ldr	w1, [sp, #176]
   28928:	ldr	x8, [sp, #112]
   2892c:	add	w1, w1, #0x1
   28930:	umaddl	x1, w1, w14, x8
   28934:	ldr	w8, [sp, #176]
   28938:	str	w23, [x1], #28
   2893c:	add	w8, w8, #0x1
   28940:	str	w8, [sp, #176]
   28944:	cmp	w8, w4
   28948:	b.ne	28934 <ZSTD_compress@@Base+0x1a0e8>  // b.any
   2894c:	b	288a0 <ZSTD_compress@@Base+0x1a054>
   28950:	sub	w0, w0, w5
   28954:	b	27a34 <ZSTD_compress@@Base+0x191e8>
   28958:	ldr	x0, [sp, #112]
   2895c:	ldr	x1, [sp, #128]
   28960:	umaddl	x0, w10, w14, x0
   28964:	ldp	w23, w9, [x0, #8]
   28968:	mov	w24, w9
   2896c:	add	x21, x1, w9, uxtw
   28970:	cbz	w23, 28ac4 <ZSTD_compress@@Base+0x1a278>
   28974:	ldr	w11, [x0, #4]
   28978:	cmp	w11, #0x2
   2897c:	b.ls	28acc <ZSTD_compress@@Base+0x1a280>  // b.plast
   28980:	ldr	x0, [sp, #120]
   28984:	ldr	x1, [sp, #120]
   28988:	ldr	w0, [x0, #4]
   2898c:	str	w0, [x1, #8]
   28990:	ldr	w0, [x1]
   28994:	str	w0, [x1, #4]
   28998:	sub	w0, w11, #0x2
   2899c:	str	w0, [x1]
   289a0:	ldp	x2, x0, [sp, #128]
   289a4:	mov	w4, w23
   289a8:	mov	w3, w11
   289ac:	mov	w1, w9
   289b0:	bl	209b4 <ZSTD_compress@@Base+0x12168>
   289b4:	cmp	x12, x21
   289b8:	sub	w5, w23, #0x3
   289bc:	b.cc	28b1c <ZSTD_compress@@Base+0x1a2d0>  // b.lo, b.ul, b.last
   289c0:	ldr	x0, [sp, #104]
   289c4:	cmp	x24, #0x10
   289c8:	ldr	x2, [x0, #24]
   289cc:	ldr	x0, [sp, #128]
   289d0:	ldp	x0, x1, [x0]
   289d4:	stp	x0, x1, [x2]
   289d8:	b.ls	28a34 <ZSTD_compress@@Base+0x1a1e8>  // b.plast
   289dc:	ldr	x0, [sp, #104]
   289e0:	ldr	x3, [x0, #24]
   289e4:	ldr	x0, [sp, #128]
   289e8:	add	x2, x3, x24
   289ec:	add	x3, x3, #0x30
   289f0:	ldp	x0, x1, [x0, #16]
   289f4:	stp	x0, x1, [x3, #-32]
   289f8:	ldr	x0, [sp, #128]
   289fc:	ldp	x0, x1, [x0, #32]
   28a00:	stp	x0, x1, [x3, #-16]
   28a04:	cmp	x2, x3
   28a08:	b.ls	28a34 <ZSTD_compress@@Base+0x1a1e8>  // b.plast
   28a0c:	ldr	x0, [sp, #128]
   28a10:	add	x4, x0, #0x30
   28a14:	ldp	x0, x1, [x4]
   28a18:	stp	x0, x1, [x3]
   28a1c:	add	x3, x3, #0x20
   28a20:	ldp	x0, x1, [x4, #16]
   28a24:	stp	x0, x1, [x3, #-16]
   28a28:	add	x4, x4, #0x20
   28a2c:	cmp	x3, x2
   28a30:	b.cc	28a14 <ZSTD_compress@@Base+0x1a1c8>  // b.lo, b.ul, b.last
   28a34:	ldr	x0, [sp, #104]
   28a38:	cmp	x24, x13
   28a3c:	ldr	x1, [sp, #104]
   28a40:	ldr	x0, [x0, #24]
   28a44:	add	x0, x0, x24
   28a48:	str	x0, [x1, #24]
   28a4c:	ldr	x0, [x1, #8]
   28a50:	b.ls	28a70 <ZSTD_compress@@Base+0x1a224>  // b.plast
   28a54:	ldr	x2, [sp, #104]
   28a58:	mov	w1, #0x1                   	// #1
   28a5c:	str	w1, [x2, #72]
   28a60:	ldr	x1, [x2]
   28a64:	sub	x1, x0, x1
   28a68:	asr	x1, x1, #3
   28a6c:	str	w1, [x2, #76]
   28a70:	add	w11, w11, #0x1
   28a74:	str	w11, [x0]
   28a78:	strh	w9, [x0, #4]
   28a7c:	cmp	w5, w15
   28a80:	b.ls	28aa0 <ZSTD_compress@@Base+0x1a254>  // b.plast
   28a84:	ldr	x1, [sp, #104]
   28a88:	ldr	x2, [sp, #104]
   28a8c:	str	w18, [x1, #72]
   28a90:	ldr	x1, [x1]
   28a94:	sub	x1, x0, x1
   28a98:	asr	x1, x1, #3
   28a9c:	str	w1, [x2, #76]
   28aa0:	ldr	x1, [sp, #104]
   28aa4:	add	x0, x0, #0x8
   28aa8:	sturh	w5, [x0, #-2]
   28aac:	add	w9, w9, w23
   28ab0:	str	x0, [x1, #8]
   28ab4:	ldr	x0, [sp, #128]
   28ab8:	add	x0, x0, x9
   28abc:	str	x0, [sp, #128]
   28ac0:	mov	x21, x0
   28ac4:	add	w10, w10, #0x1
   28ac8:	b	27a88 <ZSTD_compress@@Base+0x1923c>
   28acc:	cmp	w9, #0x0
   28ad0:	cinc	w0, w11, eq  // eq = none
   28ad4:	cbz	w0, 289a0 <ZSTD_compress@@Base+0x1a154>
   28ad8:	ldr	x1, [sp, #120]
   28adc:	cmp	w0, #0x3
   28ae0:	ldr	w2, [x1]
   28ae4:	b.ne	28b00 <ZSTD_compress@@Base+0x1a2b4>  // b.any
   28ae8:	sub	w1, w2, #0x1
   28aec:	ldr	x0, [sp, #120]
   28af0:	ldr	x3, [sp, #120]
   28af4:	ldr	w0, [x0, #4]
   28af8:	str	w0, [x3, #8]
   28afc:	b	28b10 <ZSTD_compress@@Base+0x1a2c4>
   28b00:	ldr	x1, [sp, #120]
   28b04:	cmp	w0, #0x1
   28b08:	ldr	w1, [x1, w0, uxtw #2]
   28b0c:	b.ne	28aec <ZSTD_compress@@Base+0x1a2a0>  // b.any
   28b10:	ldr	x0, [sp, #120]
   28b14:	stp	w1, w2, [x0]
   28b18:	b	289a0 <ZSTD_compress@@Base+0x1a154>
   28b1c:	ldr	x0, [sp, #104]
   28b20:	mov	x3, x12
   28b24:	ldr	x1, [sp, #128]
   28b28:	mov	x2, x21
   28b2c:	ldr	x0, [x0, #24]
   28b30:	bl	1fe1c <ZSTD_compress@@Base+0x115d0>
   28b34:	b	28a34 <ZSTD_compress@@Base+0x1a1e8>
   28b38:	stp	x29, x30, [sp, #-496]!
   28b3c:	mov	x29, sp
   28b40:	stp	x19, x20, [sp, #16]
   28b44:	mov	x19, x0
   28b48:	add	x0, x0, #0x48
   28b4c:	stp	x21, x22, [sp, #32]
   28b50:	add	x21, x3, x4
   28b54:	str	x0, [sp, #168]
   28b58:	sub	x0, x21, #0x8
   28b5c:	ldr	x20, [x19, #8]
   28b60:	str	x0, [sp, #288]
   28b64:	ldr	w0, [x19, #24]
   28b68:	str	x1, [sp, #144]
   28b6c:	ldr	w1, [x19, #204]
   28b70:	add	x20, x20, x0
   28b74:	ldr	w0, [x19, #200]
   28b78:	cmp	w1, #0xfff
   28b7c:	str	w0, [sp, #184]
   28b80:	stp	x2, x3, [sp, #104]
   28b84:	mov	w3, #0xfff                 	// #4095
   28b88:	csel	w1, w1, w3, ls  // ls = plast
   28b8c:	mov	w0, w0
   28b90:	str	w1, [sp, #296]
   28b94:	ldr	w1, [sp, #184]
   28b98:	cmp	w0, #0x3
   28b9c:	mov	w0, #0x4                   	// #4
   28ba0:	mov	x2, x4
   28ba4:	csel	w0, w1, w0, eq  // eq = none
   28ba8:	str	w0, [sp, #184]
   28bac:	ldr	x1, [sp, #112]
   28bb0:	mov	w3, #0x0                   	// #0
   28bb4:	ldr	w0, [x19, #36]
   28bb8:	str	w0, [sp, #444]
   28bbc:	ldr	x0, [x19, #112]
   28bc0:	stp	x23, x24, [sp, #48]
   28bc4:	stp	x25, x26, [sp, #64]
   28bc8:	stp	x27, x28, [sp, #80]
   28bcc:	str	x0, [sp, #96]
   28bd0:	add	x0, x19, #0x48
   28bd4:	ldr	x28, [x19, #104]
   28bd8:	bl	20648 <ZSTD_compress@@Base+0x11dfc>
   28bdc:	ldr	x0, [sp, #112]
   28be0:	cmp	x0, x20
   28be4:	cinc	x20, x0, eq  // eq = none
   28be8:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   28bec:	add	x0, x0, #0x4c8
   28bf0:	add	x0, x0, #0x150
   28bf4:	str	x0, [sp, #336]
   28bf8:	ldr	x0, [sp, #288]
   28bfc:	cmp	x0, x20
   28c00:	b.hi	28c28 <ZSTD_compress@@Base+0x1a3dc>  // b.pmore
   28c04:	ldr	x0, [sp, #112]
   28c08:	ldp	x19, x20, [sp, #16]
   28c0c:	sub	x0, x21, x0
   28c10:	ldp	x21, x22, [sp, #32]
   28c14:	ldp	x23, x24, [sp, #48]
   28c18:	ldp	x25, x26, [sp, #64]
   28c1c:	ldp	x27, x28, [sp, #80]
   28c20:	ldp	x29, x30, [sp], #496
   28c24:	ret
   28c28:	ldr	x23, [x19, #8]
   28c2c:	ldr	w22, [x19, #36]
   28c30:	add	x0, x23, w22, uxtw
   28c34:	cmp	x20, x0
   28c38:	b.cs	28c44 <ZSTD_compress@@Base+0x1a3f8>  // b.hs, b.nlast
   28c3c:	add	x20, x20, #0x1
   28c40:	b	28bf8 <ZSTD_compress@@Base+0x1a3ac>
   28c44:	sub	x24, x20, x23
   28c48:	ldr	w26, [x19, #200]
   28c4c:	add	x27, x19, #0xb8
   28c50:	mov	w25, w24
   28c54:	cmp	w25, w22
   28c58:	b.hi	29084 <ZSTD_compress@@Base+0x1a838>  // b.pmore
   28c5c:	ldr	x0, [sp, #112]
   28c60:	mov	w1, #0xfff                 	// #4095
   28c64:	str	w24, [x19, #36]
   28c68:	sub	x0, x20, x0
   28c6c:	str	x0, [sp, #232]
   28c70:	ldr	w11, [x19, #24]
   28c74:	ldr	w0, [sp, #232]
   28c78:	str	w0, [sp, #188]
   28c7c:	cmp	w0, #0x0
   28c80:	cset	w0, eq  // eq = none
   28c84:	str	w0, [sp, #136]
   28c88:	ldr	w0, [x27, #20]
   28c8c:	cmp	w0, #0xfff
   28c90:	csel	w0, w0, w1, ls  // ls = plast
   28c94:	str	w0, [sp, #192]
   28c98:	ldr	x0, [x19, #8]
   28c9c:	str	x0, [sp, #128]
   28ca0:	ldr	w1, [x27, #8]
   28ca4:	cmp	w26, #0x5
   28ca8:	sub	x15, x20, x0
   28cac:	ldr	x0, [x19, #48]
   28cb0:	str	x0, [sp, #152]
   28cb4:	ldr	x0, [x19, #64]
   28cb8:	str	x0, [sp, #120]
   28cbc:	mov	w14, w15
   28cc0:	b.eq	29c14 <ZSTD_compress@@Base+0x1b3c8>  // b.none
   28cc4:	b.hi	290a4 <ZSTD_compress@@Base+0x1a858>  // b.pmore
   28cc8:	cmp	w26, #0x3
   28ccc:	b.eq	29440 <ZSTD_compress@@Base+0x1abf4>  // b.none
   28cd0:	mov	x25, x20
   28cd4:	neg	w1, w1
   28cd8:	ldr	w22, [x27, #4]
   28cdc:	mov	w6, #0x1                   	// #1
   28ce0:	sub	w5, w11, #0x1
   28ce4:	ldr	w0, [x25], #4
   28ce8:	sub	w22, w22, #0x1
   28cec:	str	w0, [sp, #240]
   28cf0:	mov	w0, #0x79b1                	// #31153
   28cf4:	lsl	w22, w6, w22
   28cf8:	ldr	w2, [sp, #240]
   28cfc:	movk	w0, #0x9e37, lsl #16
   28d00:	sub	w22, w22, #0x1
   28d04:	cmp	w22, w15
   28d08:	mul	w0, w2, w0
   28d0c:	ldr	w2, [x19, #184]
   28d10:	lsr	w1, w0, w1
   28d14:	ubfiz	x0, x1, #2, #32
   28d18:	str	x0, [sp, #272]
   28d1c:	ldr	x0, [sp, #152]
   28d20:	ldr	x1, [sp, #272]
   28d24:	ldr	w26, [x0, x1]
   28d28:	mov	w1, w15
   28d2c:	ldr	x0, [sp, #128]
   28d30:	add	x0, x0, w11, uxtw
   28d34:	str	x0, [sp, #248]
   28d38:	sub	w0, w15, w22
   28d3c:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   28d40:	str	w0, [sp, #264]
   28d44:	mov	x0, x19
   28d48:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   28d4c:	cmp	w0, #0x0
   28d50:	and	w18, w22, w15
   28d54:	csel	w1, w0, w6, ne  // ne = any
   28d58:	str	w1, [sp, #280]
   28d5c:	ldr	x1, [sp, #120]
   28d60:	ubfiz	x18, x18, #3, #31
   28d64:	ldr	x24, [x19, #176]
   28d68:	add	x1, x1, x18
   28d6c:	str	x1, [sp, #200]
   28d70:	add	x18, x18, #0x4
   28d74:	ldr	x1, [sp, #120]
   28d78:	mov	w13, #0x0                   	// #0
   28d7c:	add	x18, x1, x18
   28d80:	add	w1, w15, #0x9
   28d84:	str	w1, [sp, #160]
   28d88:	ldr	w1, [x27, #12]
   28d8c:	lsl	w1, w6, w1
   28d90:	str	w1, [sp, #300]
   28d94:	ldr	x1, [x24, #8]
   28d98:	str	x1, [sp, #176]
   28d9c:	ldr	x1, [x24]
   28da0:	str	x1, [sp, #208]
   28da4:	ldr	x2, [sp, #176]
   28da8:	sub	x27, x1, x2
   28dac:	ldr	w1, [x24, #28]
   28db0:	str	w1, [sp, #216]
   28db4:	sub	w1, w0, w27
   28db8:	str	w1, [sp, #256]
   28dbc:	ldr	w1, [x24, #188]
   28dc0:	ldr	w2, [x24, #192]
   28dc4:	sub	w1, w1, #0x1
   28dc8:	str	w2, [sp, #304]
   28dcc:	lsl	w6, w6, w1
   28dd0:	sub	w1, w6, #0x1
   28dd4:	str	w1, [sp, #224]
   28dd8:	ldr	w1, [sp, #216]
   28ddc:	ldr	w3, [sp, #224]
   28de0:	ldr	w2, [sp, #224]
   28de4:	sub	w1, w27, w1
   28de8:	cmp	w3, w1
   28dec:	ldr	w3, [sp, #216]
   28df0:	sub	w2, w27, w2
   28df4:	ldrb	w23, [sp, #136]
   28df8:	csel	w2, w2, w3, cc  // cc = lo, ul, last
   28dfc:	str	w2, [sp, #384]
   28e00:	ldr	w2, [sp, #184]
   28e04:	mov	w3, #0x4                   	// #4
   28e08:	sub	w6, w2, #0x1
   28e0c:	ldr	w2, [sp, #136]
   28e10:	cmp	w2, #0x0
   28e14:	mov	w2, #0x3                   	// #3
   28e18:	csel	w2, w3, w2, ne  // ne = any
   28e1c:	str	w2, [sp, #312]
   28e20:	sub	w2, w14, w11
   28e24:	str	w2, [sp, #320]
   28e28:	sub	w2, w14, w0
   28e2c:	sub	w0, w0, w27
   28e30:	add	w1, w2, w1
   28e34:	str	w1, [sp, #328]
   28e38:	sub	w1, w5, w14
   28e3c:	str	w1, [sp, #344]
   28e40:	str	x0, [sp, #352]
   28e44:	str	w23, [sp, #360]
   28e48:	cmp	w23, #0x3
   28e4c:	ldr	x0, [sp, #104]
   28e50:	b.ne	29a8c <ZSTD_compress@@Base+0x1b240>  // b.any
   28e54:	ldr	w0, [x0]
   28e58:	sub	w0, w0, #0x1
   28e5c:	ldr	w1, [sp, #320]
   28e60:	sub	w2, w0, #0x1
   28e64:	cmp	w2, w1
   28e68:	b.cs	29a94 <ZSTD_compress@@Base+0x1b248>  // b.hs, b.nlast
   28e6c:	mov	w1, w0
   28e70:	sub	x0, x20, w0, uxtw
   28e74:	ldr	w2, [sp, #240]
   28e78:	ldr	w0, [x0]
   28e7c:	cmp	w2, w0
   28e80:	b.ne	29af4 <ZSTD_compress@@Base+0x1b2a8>  // b.any
   28e84:	mov	x0, #0x4                   	// #4
   28e88:	sub	x1, x0, x1
   28e8c:	mov	x2, x21
   28e90:	add	x1, x20, x1
   28e94:	mov	x0, x25
   28e98:	str	x6, [sp, #360]
   28e9c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   28ea0:	ldr	x6, [sp, #360]
   28ea4:	add	w0, w0, #0x4
   28ea8:	mov	w1, w0
   28eac:	cmp	x6, w0, uxtw
   28eb0:	b.cs	28ee8 <ZSTD_compress@@Base+0x1a69c>  // b.hs, b.nlast
   28eb4:	ubfiz	x2, x13, #3, #32
   28eb8:	ldr	w5, [sp, #136]
   28ebc:	add	x3, x28, x2
   28ec0:	add	w13, w13, #0x1
   28ec4:	sub	w4, w23, w5
   28ec8:	str	w4, [x28, x2]
   28ecc:	add	x2, x20, x1
   28ed0:	cmp	x2, x21
   28ed4:	ldr	w2, [sp, #192]
   28ed8:	str	w0, [x3, #4]
   28edc:	ccmp	w0, w2, #0x2, ne  // ne = any
   28ee0:	b.hi	29968 <ZSTD_compress@@Base+0x1b11c>  // b.pmore
   28ee4:	mov	x6, x1
   28ee8:	ldr	w0, [sp, #312]
   28eec:	add	x23, x23, #0x1
   28ef0:	cmp	w0, w23
   28ef4:	b.hi	28e44 <ZSTD_compress@@Base+0x1a5f8>  // b.pmore
   28ef8:	ldr	x0, [sp, #152]
   28efc:	add	w7, w14, #0x2
   28f00:	ldr	x1, [sp, #272]
   28f04:	mov	x11, #0x0                   	// #0
   28f08:	mov	x9, #0x0                   	// #0
   28f0c:	str	w15, [x0, x1]
   28f10:	ldr	w0, [sp, #300]
   28f14:	sub	w15, w0, #0x1
   28f18:	cmn	w15, #0x1
   28f1c:	b.eq	28f2c <ZSTD_compress@@Base+0x1a6e0>  // b.none
   28f20:	ldr	w0, [sp, #280]
   28f24:	cmp	w0, w26
   28f28:	b.ls	29afc <ZSTD_compress@@Base+0x1b2b0>  // b.plast
   28f2c:	ldr	x0, [sp, #200]
   28f30:	str	wzr, [x18]
   28f34:	str	wzr, [x0]
   28f38:	cbz	w15, 2907c <ZSTD_compress@@Base+0x1a830>
   28f3c:	ldr	w0, [x20]
   28f40:	mov	w1, #0x79b1                	// #31153
   28f44:	movk	w1, #0x9e37, lsl #16
   28f48:	ldr	w9, [sp, #256]
   28f4c:	and	x7, x27, #0xffffffff
   28f50:	add	w14, w14, #0x2
   28f54:	mov	x25, #0x0                   	// #0
   28f58:	mul	w0, w0, w1
   28f5c:	ldr	w1, [sp, #304]
   28f60:	ldr	x5, [x24, #64]
   28f64:	neg	w1, w1
   28f68:	lsr	w0, w0, w1
   28f6c:	ldr	x1, [x24, #48]
   28f70:	mov	x24, #0x0                   	// #0
   28f74:	ldr	w18, [x1, w0, uxtw #2]
   28f78:	ldr	w0, [sp, #216]
   28f7c:	cmp	w0, w18
   28f80:	b.cs	2907c <ZSTD_compress@@Base+0x1a830>  // b.hs, b.nlast
   28f84:	ldr	w0, [sp, #224]
   28f88:	cmp	x24, x25
   28f8c:	ldr	x3, [sp, #208]
   28f90:	and	w22, w0, w18
   28f94:	ldr	x0, [sp, #176]
   28f98:	ubfiz	x22, x22, #3, #31
   28f9c:	ldr	x4, [sp, #248]
   28fa0:	add	x8, x5, x22
   28fa4:	csel	x27, x24, x25, ls  // ls = plast
   28fa8:	add	x26, x0, w18, uxtw
   28fac:	mov	w23, w18
   28fb0:	add	x1, x26, x27
   28fb4:	add	x0, x20, x27
   28fb8:	mov	x2, x21
   28fbc:	str	x8, [sp, #120]
   28fc0:	str	x5, [sp, #152]
   28fc4:	stp	x6, x7, [sp, #192]
   28fc8:	str	x9, [sp, #240]
   28fcc:	bl	200cc <ZSTD_compress@@Base+0x11880>
   28fd0:	ldp	x6, x7, [sp, #192]
   28fd4:	add	x27, x27, x0
   28fd8:	add	x0, x23, x27
   28fdc:	ldr	x8, [sp, #120]
   28fe0:	ldr	x5, [sp, #152]
   28fe4:	cmp	x0, x7
   28fe8:	ldr	x9, [sp, #240]
   28fec:	b.cc	28ffc <ZSTD_compress@@Base+0x1a7b0>  // b.lo, b.ul, b.last
   28ff0:	ldr	x0, [sp, #128]
   28ff4:	add	x23, x9, x23
   28ff8:	add	x26, x0, x23
   28ffc:	cmp	x27, x6
   29000:	b.ls	29050 <ZSTD_compress@@Base+0x1a804>  // b.plast
   29004:	ldr	w0, [sp, #256]
   29008:	add	w1, w0, w18
   2900c:	ldr	w0, [sp, #160]
   29010:	sub	w0, w0, w1
   29014:	cmp	x27, x0
   29018:	b.ls	29024 <ZSTD_compress@@Base+0x1a7d8>  // b.plast
   2901c:	add	w0, w1, w27
   29020:	str	w0, [sp, #160]
   29024:	ubfiz	x0, x13, #3, #32
   29028:	sub	w1, w14, w1
   2902c:	add	x2, x28, x0
   29030:	cmp	x27, #0x1, lsl #12
   29034:	add	w13, w13, #0x1
   29038:	str	w1, [x28, x0]
   2903c:	add	x1, x20, x27
   29040:	str	w27, [x2, #4]
   29044:	ccmp	x1, x21, #0x4, ls  // ls = plast
   29048:	b.eq	2907c <ZSTD_compress@@Base+0x1a830>  // b.none
   2904c:	mov	x6, x27
   29050:	ldr	w0, [sp, #384]
   29054:	cmp	w0, w18
   29058:	b.cs	2907c <ZSTD_compress@@Base+0x1a830>  // b.hs, b.nlast
   2905c:	ldrb	w1, [x26, x27]
   29060:	ldrb	w0, [x20, x27]
   29064:	cmp	w1, w0
   29068:	b.cs	29c08 <ZSTD_compress@@Base+0x1b3bc>  // b.hs, b.nlast
   2906c:	ldr	w18, [x8, #4]
   29070:	mov	x25, x27
   29074:	subs	w15, w15, #0x1
   29078:	b.ne	28f78 <ZSTD_compress@@Base+0x1a72c>  // b.any
   2907c:	ldr	w0, [sp, #160]
   29080:	b	29960 <ZSTD_compress@@Base+0x1b114>
   29084:	add	x1, x23, w22, uxtw
   29088:	mov	w3, w26
   2908c:	mov	x2, x21
   29090:	mov	x0, x19
   29094:	mov	w4, #0x0                   	// #0
   29098:	bl	2012c <ZSTD_compress@@Base+0x118e0>
   2909c:	add	w22, w22, w0
   290a0:	b	28c54 <ZSTD_compress@@Base+0x1a408>
   290a4:	sub	w0, w26, #0x6
   290a8:	cmp	w0, #0x1
   290ac:	b.hi	28cd0 <ZSTD_compress@@Base+0x1a484>  // b.pmore
   290b0:	mov	w2, #0x6                   	// #6
   290b4:	mov	x0, x20
   290b8:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   290bc:	lsl	x0, x0, #2
   290c0:	str	x0, [sp, #264]
   290c4:	mov	w7, #0x1                   	// #1
   290c8:	ldr	x0, [sp, #152]
   290cc:	sub	w8, w11, #0x1
   290d0:	ldr	x1, [sp, #264]
   290d4:	ldr	w22, [x27, #4]
   290d8:	ldr	w2, [x19, #184]
   290dc:	ldr	w26, [x0, x1]
   290e0:	sub	w22, w22, #0x1
   290e4:	ldr	x0, [sp, #128]
   290e8:	lsl	w22, w7, w22
   290ec:	sub	w22, w22, #0x1
   290f0:	mov	w1, w15
   290f4:	cmp	w22, w15
   290f8:	add	x0, x0, w11, uxtw
   290fc:	str	x0, [sp, #240]
   29100:	sub	w0, w15, w22
   29104:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   29108:	str	w0, [sp, #256]
   2910c:	mov	x0, x19
   29110:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   29114:	cmp	w0, #0x0
   29118:	and	w18, w22, w15
   2911c:	csel	w1, w0, w7, ne  // ne = any
   29120:	str	w1, [sp, #272]
   29124:	ldr	x1, [sp, #120]
   29128:	ubfiz	x18, x18, #3, #31
   2912c:	mov	w13, #0x0                   	// #0
   29130:	add	x1, x1, x18
   29134:	str	x1, [sp, #200]
   29138:	ldr	x1, [sp, #120]
   2913c:	add	x18, x18, #0x4
   29140:	add	x18, x1, x18
   29144:	add	w1, w15, #0x9
   29148:	str	w1, [sp, #160]
   2914c:	ldr	w1, [x27, #12]
   29150:	ldr	x27, [x19, #176]
   29154:	lsl	w1, w7, w1
   29158:	str	w1, [sp, #280]
   2915c:	ldr	x1, [x27, #8]
   29160:	str	x1, [sp, #176]
   29164:	ldr	x1, [x27]
   29168:	str	x1, [sp, #208]
   2916c:	ldr	x2, [sp, #176]
   29170:	sub	x25, x1, x2
   29174:	ldr	w1, [x27, #28]
   29178:	str	w1, [sp, #216]
   2917c:	sub	w1, w0, w25
   29180:	str	w1, [sp, #248]
   29184:	ldr	w1, [x27, #188]
   29188:	ldr	w2, [x27, #192]
   2918c:	sub	w1, w1, #0x1
   29190:	str	w2, [sp, #300]
   29194:	lsl	w7, w7, w1
   29198:	sub	w1, w7, #0x1
   2919c:	str	w1, [sp, #224]
   291a0:	ldr	w1, [sp, #216]
   291a4:	ldr	w3, [sp, #224]
   291a8:	ldr	w2, [sp, #224]
   291ac:	sub	w1, w25, w1
   291b0:	cmp	w3, w1
   291b4:	ldr	w3, [sp, #216]
   291b8:	sub	w2, w25, w2
   291bc:	csel	w2, w2, w3, cc  // cc = lo, ul, last
   291c0:	str	w2, [sp, #312]
   291c4:	ldr	w2, [sp, #184]
   291c8:	mov	w3, #0x4                   	// #4
   291cc:	ldrb	w23, [sp, #136]
   291d0:	sub	w24, w2, #0x1
   291d4:	ldr	w2, [sp, #136]
   291d8:	cmp	w2, #0x0
   291dc:	mov	w2, #0x3                   	// #3
   291e0:	csel	w2, w3, w2, ne  // ne = any
   291e4:	str	w2, [sp, #304]
   291e8:	sub	w2, w15, w11
   291ec:	str	w2, [sp, #384]
   291f0:	sub	w2, w15, w0
   291f4:	sub	w0, w0, w25
   291f8:	add	w1, w2, w1
   291fc:	str	w1, [sp, #320]
   29200:	sub	w1, w8, w15
   29204:	add	x8, x20, #0x4
   29208:	str	w1, [sp, #328]
   2920c:	str	x0, [sp, #344]
   29210:	str	w23, [sp, #352]
   29214:	cmp	w23, #0x3
   29218:	ldr	x0, [sp, #104]
   2921c:	b.ne	2a124 <ZSTD_compress@@Base+0x1b8d8>  // b.any
   29220:	ldr	w0, [x0]
   29224:	sub	w0, w0, #0x1
   29228:	ldr	w1, [sp, #384]
   2922c:	sub	w2, w0, #0x1
   29230:	cmp	w2, w1
   29234:	b.cs	2a12c <ZSTD_compress@@Base+0x1b8e0>  // b.hs, b.nlast
   29238:	mov	w1, w0
   2923c:	sub	x0, x20, w0, uxtw
   29240:	ldr	w2, [x0]
   29244:	ldr	w0, [x20]
   29248:	cmp	w2, w0
   2924c:	b.ne	2a18c <ZSTD_compress@@Base+0x1b940>  // b.any
   29250:	mov	x0, #0x4                   	// #4
   29254:	sub	x1, x0, x1
   29258:	mov	x2, x21
   2925c:	add	x1, x20, x1
   29260:	mov	x0, x8
   29264:	str	x8, [sp, #352]
   29268:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2926c:	ldr	x8, [sp, #352]
   29270:	add	w0, w0, #0x4
   29274:	mov	w1, w0
   29278:	cmp	x24, w0, uxtw
   2927c:	b.cs	292b4 <ZSTD_compress@@Base+0x1aa68>  // b.hs, b.nlast
   29280:	ubfiz	x2, x13, #3, #32
   29284:	ldr	w5, [sp, #136]
   29288:	add	x3, x28, x2
   2928c:	add	w13, w13, #0x1
   29290:	sub	w4, w23, w5
   29294:	str	w4, [x28, x2]
   29298:	add	x2, x20, x1
   2929c:	cmp	x2, x21
   292a0:	ldr	w2, [sp, #192]
   292a4:	str	w0, [x3, #4]
   292a8:	ccmp	w0, w2, #0x2, ne  // ne = any
   292ac:	b.hi	29968 <ZSTD_compress@@Base+0x1b11c>  // b.pmore
   292b0:	mov	x24, x1
   292b4:	ldr	w0, [sp, #304]
   292b8:	add	x23, x23, #0x1
   292bc:	cmp	w0, w23
   292c0:	b.hi	29210 <ZSTD_compress@@Base+0x1a9c4>  // b.pmore
   292c4:	ldr	x0, [sp, #152]
   292c8:	add	w12, w14, #0x2
   292cc:	ldr	x1, [sp, #264]
   292d0:	mov	x9, #0x0                   	// #0
   292d4:	mov	x7, #0x0                   	// #0
   292d8:	str	w15, [x0, x1]
   292dc:	ldr	w0, [sp, #280]
   292e0:	sub	w23, w0, #0x1
   292e4:	cmn	w23, #0x1
   292e8:	b.eq	292f8 <ZSTD_compress@@Base+0x1aaac>  // b.none
   292ec:	ldr	w0, [sp, #272]
   292f0:	cmp	w0, w26
   292f4:	b.ls	2a194 <ZSTD_compress@@Base+0x1b948>  // b.plast
   292f8:	ldr	x0, [sp, #200]
   292fc:	str	wzr, [x18]
   29300:	str	wzr, [x0]
   29304:	cbz	w23, 2907c <ZSTD_compress@@Base+0x1a830>
   29308:	ldr	w1, [sp, #300]
   2930c:	mov	x0, x20
   29310:	mov	w2, #0x6                   	// #6
   29314:	mov	x26, #0x0                   	// #0
   29318:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   2931c:	add	w14, w14, #0x2
   29320:	ldr	x1, [x27, #48]
   29324:	and	x9, x25, #0xffffffff
   29328:	ldr	w7, [sp, #248]
   2932c:	ldr	x5, [x27, #64]
   29330:	mov	x27, #0x0                   	// #0
   29334:	ldr	w15, [x1, x0, lsl #2]
   29338:	ldr	w0, [sp, #216]
   2933c:	cmp	w0, w15
   29340:	b.cs	2907c <ZSTD_compress@@Base+0x1a830>  // b.hs, b.nlast
   29344:	ldr	w0, [sp, #224]
   29348:	cmp	x27, x26
   2934c:	ldr	x3, [sp, #208]
   29350:	and	w18, w0, w15
   29354:	ldr	x0, [sp, #176]
   29358:	ubfiz	x18, x18, #3, #31
   2935c:	ldr	x4, [sp, #240]
   29360:	add	x8, x5, x18
   29364:	add	x6, x0, w15, uxtw
   29368:	csel	x25, x27, x26, ls  // ls = plast
   2936c:	add	x1, x6, x25
   29370:	mov	w22, w15
   29374:	add	x0, x20, x25
   29378:	mov	x2, x21
   2937c:	str	x6, [sp, #120]
   29380:	str	x8, [sp, #152]
   29384:	stp	x5, x9, [sp, #192]
   29388:	str	x7, [sp, #256]
   2938c:	bl	200cc <ZSTD_compress@@Base+0x11880>
   29390:	ldp	x5, x9, [sp, #192]
   29394:	add	x25, x25, x0
   29398:	add	x0, x22, x25
   2939c:	ldr	x6, [sp, #120]
   293a0:	ldr	x8, [sp, #152]
   293a4:	cmp	x0, x9
   293a8:	ldr	x7, [sp, #256]
   293ac:	b.cc	293bc <ZSTD_compress@@Base+0x1ab70>  // b.lo, b.ul, b.last
   293b0:	ldr	x0, [sp, #128]
   293b4:	add	x22, x7, x22
   293b8:	add	x6, x0, x22
   293bc:	cmp	x25, x24
   293c0:	b.ls	29410 <ZSTD_compress@@Base+0x1abc4>  // b.plast
   293c4:	ldr	w0, [sp, #248]
   293c8:	add	w1, w0, w15
   293cc:	ldr	w0, [sp, #160]
   293d0:	sub	w0, w0, w1
   293d4:	cmp	x25, x0
   293d8:	b.ls	293e4 <ZSTD_compress@@Base+0x1ab98>  // b.plast
   293dc:	add	w0, w1, w25
   293e0:	str	w0, [sp, #160]
   293e4:	ubfiz	x0, x13, #3, #32
   293e8:	sub	w1, w14, w1
   293ec:	add	x2, x28, x0
   293f0:	cmp	x25, #0x1, lsl #12
   293f4:	add	w13, w13, #0x1
   293f8:	str	w1, [x28, x0]
   293fc:	add	x1, x20, x25
   29400:	str	w25, [x2, #4]
   29404:	ccmp	x1, x21, #0x4, ls  // ls = plast
   29408:	b.eq	2907c <ZSTD_compress@@Base+0x1a830>  // b.none
   2940c:	mov	x24, x25
   29410:	ldr	w0, [sp, #312]
   29414:	cmp	w0, w15
   29418:	b.cs	2907c <ZSTD_compress@@Base+0x1a830>  // b.hs, b.nlast
   2941c:	ldrb	w1, [x6, x25]
   29420:	ldrb	w0, [x20, x25]
   29424:	cmp	w1, w0
   29428:	b.cs	2a298 <ZSTD_compress@@Base+0x1ba4c>  // b.hs, b.nlast
   2942c:	ldr	w15, [x8, #4]
   29430:	mov	x26, x25
   29434:	subs	w23, w23, #0x1
   29438:	b.ne	29338 <ZSTD_compress@@Base+0x1aaec>  // b.any
   2943c:	b	2907c <ZSTD_compress@@Base+0x1a830>
   29440:	mov	x22, x20
   29444:	mov	w0, #0x79b1                	// #31153
   29448:	movk	w0, #0x9e37, lsl #16
   2944c:	neg	w1, w1
   29450:	mov	w6, #0x1                   	// #1
   29454:	ldr	w2, [x19, #184]
   29458:	ldr	w25, [x22], #3
   2945c:	sub	w5, w11, #0x1
   29460:	mul	w0, w25, w0
   29464:	lsl	w25, w25, #8
   29468:	lsr	w1, w0, w1
   2946c:	ubfiz	x0, x1, #2, #32
   29470:	str	x0, [sp, #304]
   29474:	ldr	x0, [sp, #152]
   29478:	ldr	x1, [sp, #304]
   2947c:	ldr	w23, [x0, x1]
   29480:	ldr	w0, [x27, #4]
   29484:	sub	w0, w0, #0x1
   29488:	lsl	w0, w6, w0
   2948c:	sub	w0, w0, #0x1
   29490:	str	w0, [sp, #200]
   29494:	ldr	x0, [sp, #128]
   29498:	ldr	w1, [sp, #200]
   2949c:	add	x0, x0, w11, uxtw
   294a0:	str	x0, [sp, #264]
   294a4:	ldr	w0, [sp, #200]
   294a8:	cmp	w1, w15
   294ac:	mov	w1, w15
   294b0:	sub	w0, w15, w0
   294b4:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   294b8:	str	w0, [sp, #300]
   294bc:	mov	x0, x19
   294c0:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   294c4:	cmp	w0, #0x0
   294c8:	mov	w13, #0x0                   	// #0
   294cc:	csel	w1, w0, w6, ne  // ne = any
   294d0:	str	w1, [sp, #272]
   294d4:	ldr	w1, [sp, #200]
   294d8:	ldr	x2, [sp, #120]
   294dc:	and	w1, w1, w15
   294e0:	ldr	x24, [x19, #176]
   294e4:	ubfiz	x1, x1, #3, #31
   294e8:	add	x2, x2, x1
   294ec:	str	x2, [sp, #216]
   294f0:	ldr	x2, [sp, #120]
   294f4:	add	x1, x1, #0x4
   294f8:	add	x1, x2, x1
   294fc:	str	x1, [sp, #224]
   29500:	add	w1, w15, #0x9
   29504:	str	w1, [sp, #176]
   29508:	ldr	w1, [x27, #12]
   2950c:	lsl	w1, w6, w1
   29510:	str	w1, [sp, #312]
   29514:	ldr	x1, [x24, #8]
   29518:	str	x1, [sp, #208]
   2951c:	ldr	x1, [x24]
   29520:	str	x1, [sp, #240]
   29524:	ldr	x2, [sp, #208]
   29528:	sub	x1, x1, x2
   2952c:	str	x1, [sp, #160]
   29530:	ldr	w1, [x24, #28]
   29534:	str	w1, [sp, #248]
   29538:	ldr	w1, [sp, #160]
   2953c:	ldr	w2, [x24, #192]
   29540:	sub	w1, w0, w1
   29544:	str	w1, [sp, #280]
   29548:	str	w2, [sp, #384]
   2954c:	ldr	w1, [x24, #188]
   29550:	ldr	w2, [sp, #248]
   29554:	sub	w1, w1, #0x1
   29558:	lsl	w6, w6, w1
   2955c:	sub	w1, w6, #0x1
   29560:	str	w1, [sp, #256]
   29564:	ldr	w1, [sp, #160]
   29568:	ldr	w3, [sp, #256]
   2956c:	sub	w1, w1, w2
   29570:	ldr	w2, [sp, #160]
   29574:	cmp	w3, w1
   29578:	sub	w2, w2, w3
   2957c:	ldr	w3, [sp, #248]
   29580:	csel	w2, w2, w3, cc  // cc = lo, ul, last
   29584:	str	w2, [sp, #328]
   29588:	ldr	w2, [sp, #184]
   2958c:	mov	w3, #0x4                   	// #4
   29590:	sub	w18, w2, #0x1
   29594:	ldr	w2, [sp, #136]
   29598:	cmp	w2, #0x0
   2959c:	csel	w2, w3, w26, ne  // ne = any
   295a0:	str	w2, [sp, #320]
   295a4:	sub	w2, w15, w11
   295a8:	str	w2, [sp, #344]
   295ac:	sub	w2, w15, w0
   295b0:	ldrb	w26, [sp, #136]
   295b4:	add	w1, w2, w1
   295b8:	str	w1, [sp, #352]
   295bc:	sub	w1, w5, w15
   295c0:	str	w1, [sp, #360]
   295c4:	ldr	w1, [sp, #160]
   295c8:	sub	w0, w0, w1
   295cc:	str	x0, [sp, #368]
   295d0:	mov	w27, w26
   295d4:	cmp	w26, #0x3
   295d8:	ldr	x0, [sp, #104]
   295dc:	b.ne	29760 <ZSTD_compress@@Base+0x1af14>  // b.any
   295e0:	ldr	w0, [x0]
   295e4:	sub	w0, w0, #0x1
   295e8:	ldr	w1, [sp, #344]
   295ec:	sub	w2, w0, #0x1
   295f0:	cmp	w2, w1
   295f4:	b.cs	29768 <ZSTD_compress@@Base+0x1af1c>  // b.hs, b.nlast
   295f8:	mov	w1, w0
   295fc:	sub	x0, x20, w0, uxtw
   29600:	ldr	w0, [x0]
   29604:	cmp	w25, w0, lsl #8
   29608:	b.ne	297c0 <ZSTD_compress@@Base+0x1af74>  // b.any
   2960c:	mov	x0, #0x3                   	// #3
   29610:	sub	x1, x0, x1
   29614:	mov	x2, x21
   29618:	add	x1, x20, x1
   2961c:	mov	x0, x22
   29620:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   29624:	add	w0, w0, #0x3
   29628:	mov	w1, w0
   2962c:	cmp	x18, w0, uxtw
   29630:	b.cs	29668 <ZSTD_compress@@Base+0x1ae1c>  // b.hs, b.nlast
   29634:	ubfiz	x2, x13, #3, #32
   29638:	ldr	w4, [sp, #136]
   2963c:	add	x3, x28, x2
   29640:	add	w13, w13, #0x1
   29644:	sub	w27, w27, w4
   29648:	str	w27, [x28, x2]
   2964c:	add	x2, x20, x1
   29650:	cmp	x2, x21
   29654:	ldr	w2, [sp, #192]
   29658:	str	w0, [x3, #4]
   2965c:	ccmp	w0, w2, #0x2, ne  // ne = any
   29660:	b.hi	29968 <ZSTD_compress@@Base+0x1b11c>  // b.pmore
   29664:	mov	x18, x1
   29668:	ldr	w0, [sp, #320]
   2966c:	add	x26, x26, #0x1
   29670:	cmp	w0, w26
   29674:	b.hi	295d0 <ZSTD_compress@@Base+0x1ad84>  // b.pmore
   29678:	cmp	x18, #0x2
   2967c:	b.ne	297d0 <ZSTD_compress@@Base+0x1af84>  // b.any
   29680:	add	x1, sp, #0x1bc
   29684:	mov	x2, x20
   29688:	mov	x0, x19
   2968c:	bl	1ff88 <ZSTD_compress@@Base+0x1173c>
   29690:	ldr	w1, [sp, #272]
   29694:	sub	w7, w15, w0
   29698:	cmp	w1, w0
   2969c:	mov	w1, #0x3ffff               	// #262143
   296a0:	ccmp	w7, w1, #0x2, ls  // ls = plast
   296a4:	b.hi	297d0 <ZSTD_compress@@Base+0x1af84>  // b.pmore
   296a8:	ldr	x1, [sp, #128]
   296ac:	mov	x2, x21
   296b0:	add	x1, x1, w0, uxtw
   296b4:	mov	x0, x20
   296b8:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   296bc:	cmp	x0, #0x2
   296c0:	b.ls	297d0 <ZSTD_compress@@Base+0x1af84>  // b.plast
   296c4:	ldr	w2, [sp, #192]
   296c8:	add	w7, w7, #0x2
   296cc:	add	x1, x20, x0
   296d0:	stp	w7, w0, [x28]
   296d4:	cmp	x1, x21
   296d8:	ccmp	x0, x2, #0x2, ne  // ne = any
   296dc:	b.ls	297c8 <ZSTD_compress@@Base+0x1af7c>  // b.plast
   296e0:	add	w15, w15, #0x1
   296e4:	mov	w13, #0x1                   	// #1
   296e8:	str	w15, [x19, #36]
   296ec:	ldp	x1, x0, [sp, #96]
   296f0:	mov	w3, #0x0                   	// #0
   296f4:	ldr	x2, [sp, #168]
   296f8:	ldr	w0, [x0]
   296fc:	str	w0, [x1, #16]
   29700:	ldr	x0, [sp, #104]
   29704:	ldr	w0, [x0, #4]
   29708:	str	w0, [x1, #20]
   2970c:	ldr	x0, [sp, #104]
   29710:	ldr	w0, [x0, #8]
   29714:	str	w0, [x1, #24]
   29718:	mov	x0, x1
   2971c:	ldr	w1, [sp, #232]
   29720:	stp	wzr, w1, [x0, #8]
   29724:	ldr	x0, [sp, #112]
   29728:	bl	204f4 <ZSTD_compress@@Base+0x11ca8>
   2972c:	mov	w6, w0
   29730:	ldr	x0, [sp, #96]
   29734:	str	w6, [x0]
   29738:	sub	w0, w13, #0x1
   2973c:	lsl	x2, x0, #3
   29740:	add	x0, x28, x0, lsl #3
   29744:	ldr	w1, [x0, #4]
   29748:	ldr	w0, [sp, #296]
   2974c:	cmp	w0, w1
   29750:	b.cs	2a2a4 <ZSTD_compress@@Base+0x1ba58>  // b.hs, b.nlast
   29754:	ldr	w2, [x28, x2]
   29758:	mov	w6, #0x0                   	// #0
   2975c:	b	2a4a0 <ZSTD_compress@@Base+0x1bc54>
   29760:	ldr	w0, [x0, x26, lsl #2]
   29764:	b	295e8 <ZSTD_compress@@Base+0x1ad9c>
   29768:	ldr	w3, [sp, #352]
   2976c:	ldr	w1, [sp, #360]
   29770:	cmp	w2, w3
   29774:	add	w1, w1, w0
   29778:	ccmp	w1, #0x2, #0x0, cc  // cc = lo, ul, last
   2977c:	b.ls	297c0 <ZSTD_compress@@Base+0x1af74>  // b.plast
   29780:	ldr	x1, [sp, #368]
   29784:	sub	w0, w14, w0
   29788:	ldr	x2, [sp, #208]
   2978c:	sub	x0, x0, x1
   29790:	ldr	x1, [sp, #208]
   29794:	add	x1, x1, x0
   29798:	ldr	w0, [x2, x0]
   2979c:	cmp	w25, w0, lsl #8
   297a0:	b.ne	297c0 <ZSTD_compress@@Base+0x1af74>  // b.any
   297a4:	ldr	x3, [sp, #240]
   297a8:	mov	x2, x21
   297ac:	ldr	x4, [sp, #264]
   297b0:	add	x1, x1, #0x3
   297b4:	mov	x0, x22
   297b8:	bl	200cc <ZSTD_compress@@Base+0x11880>
   297bc:	b	29624 <ZSTD_compress@@Base+0x1add8>
   297c0:	mov	w0, #0x0                   	// #0
   297c4:	b	29628 <ZSTD_compress@@Base+0x1addc>
   297c8:	mov	x18, x0
   297cc:	mov	w13, #0x1                   	// #1
   297d0:	ldr	x0, [sp, #152]
   297d4:	add	w12, w14, #0x2
   297d8:	ldr	x1, [sp, #304]
   297dc:	mov	x9, #0x0                   	// #0
   297e0:	mov	x7, #0x0                   	// #0
   297e4:	str	w15, [x0, x1]
   297e8:	ldr	w0, [sp, #312]
   297ec:	sub	w22, w0, #0x1
   297f0:	cmn	w22, #0x1
   297f4:	b.eq	29804 <ZSTD_compress@@Base+0x1afb8>  // b.none
   297f8:	ldr	w0, [sp, #272]
   297fc:	cmp	w0, w23
   29800:	b.ls	29970 <ZSTD_compress@@Base+0x1b124>  // b.plast
   29804:	ldr	x0, [sp, #224]
   29808:	str	wzr, [x0]
   2980c:	ldr	x0, [sp, #216]
   29810:	str	wzr, [x0]
   29814:	cbz	w22, 2995c <ZSTD_compress@@Base+0x1b110>
   29818:	ldr	w0, [x20]
   2981c:	mov	w1, #0x79b1                	// #31153
   29820:	movk	w1, #0x9e37, lsl #16
   29824:	ldr	w9, [sp, #280]
   29828:	ldr	x5, [x24, #64]
   2982c:	add	w7, w14, #0x2
   29830:	mul	w0, w0, w1
   29834:	ldr	w1, [sp, #384]
   29838:	mov	x26, #0x0                   	// #0
   2983c:	mov	x27, #0x0                   	// #0
   29840:	neg	w1, w1
   29844:	lsr	w0, w0, w1
   29848:	ldr	x1, [x24, #48]
   2984c:	ldr	w15, [x1, w0, uxtw #2]
   29850:	ldr	x0, [sp, #160]
   29854:	and	x23, x0, #0xffffffff
   29858:	ldr	w0, [sp, #248]
   2985c:	cmp	w0, w15
   29860:	b.cs	2995c <ZSTD_compress@@Base+0x1b110>  // b.hs, b.nlast
   29864:	ldr	w0, [sp, #256]
   29868:	cmp	x26, x27
   2986c:	ldr	x3, [sp, #240]
   29870:	and	w24, w0, w15
   29874:	ldr	x0, [sp, #208]
   29878:	ubfiz	x24, x24, #3, #31
   2987c:	ldr	x4, [sp, #264]
   29880:	csel	x14, x26, x27, ls  // ls = plast
   29884:	add	x6, x0, w15, uxtw
   29888:	add	x8, x5, x24
   2988c:	add	x1, x6, x14
   29890:	mov	w25, w15
   29894:	add	x0, x20, x14
   29898:	mov	x2, x21
   2989c:	str	x6, [sp, #120]
   298a0:	stp	x8, x5, [sp, #152]
   298a4:	str	x9, [sp, #192]
   298a8:	str	w7, [sp, #200]
   298ac:	bl	200cc <ZSTD_compress@@Base+0x11880>
   298b0:	add	x14, x14, x0
   298b4:	ldr	w7, [sp, #200]
   298b8:	add	x0, x25, x14
   298bc:	cmp	x0, x23
   298c0:	ldr	x6, [sp, #120]
   298c4:	ldp	x8, x5, [sp, #152]
   298c8:	ldr	x9, [sp, #192]
   298cc:	b.cc	298dc <ZSTD_compress@@Base+0x1b090>  // b.lo, b.ul, b.last
   298d0:	ldr	x0, [sp, #128]
   298d4:	add	x25, x9, x25
   298d8:	add	x6, x0, x25
   298dc:	cmp	x14, x18
   298e0:	b.ls	29930 <ZSTD_compress@@Base+0x1b0e4>  // b.plast
   298e4:	ldr	w0, [sp, #280]
   298e8:	add	w1, w0, w15
   298ec:	ldr	w0, [sp, #176]
   298f0:	sub	w0, w0, w1
   298f4:	cmp	x14, x0
   298f8:	b.ls	29904 <ZSTD_compress@@Base+0x1b0b8>  // b.plast
   298fc:	add	w0, w1, w14
   29900:	str	w0, [sp, #176]
   29904:	ubfiz	x0, x13, #3, #32
   29908:	sub	w1, w7, w1
   2990c:	add	x2, x28, x0
   29910:	cmp	x14, #0x1, lsl #12
   29914:	add	w13, w13, #0x1
   29918:	str	w1, [x28, x0]
   2991c:	add	x1, x20, x14
   29920:	str	w14, [x2, #4]
   29924:	ccmp	x1, x21, #0x4, ls  // ls = plast
   29928:	b.eq	2995c <ZSTD_compress@@Base+0x1b110>  // b.none
   2992c:	mov	x18, x14
   29930:	ldr	w0, [sp, #328]
   29934:	cmp	w0, w15
   29938:	b.cs	2995c <ZSTD_compress@@Base+0x1b110>  // b.hs, b.nlast
   2993c:	ldrb	w1, [x6, x14]
   29940:	ldrb	w0, [x20, x14]
   29944:	cmp	w1, w0
   29948:	b.cs	29a80 <ZSTD_compress@@Base+0x1b234>  // b.hs, b.nlast
   2994c:	ldr	w15, [x8, #4]
   29950:	mov	x27, x14
   29954:	subs	w22, w22, #0x1
   29958:	b.ne	29858 <ZSTD_compress@@Base+0x1b00c>  // b.any
   2995c:	ldr	w0, [sp, #176]
   29960:	sub	w0, w0, #0x8
   29964:	str	w0, [x19, #36]
   29968:	cbz	w13, 28c3c <ZSTD_compress@@Base+0x1a3f0>
   2996c:	b	296ec <ZSTD_compress@@Base+0x1aea0>
   29970:	ldr	w0, [sp, #200]
   29974:	cmp	x7, x9
   29978:	csel	x15, x7, x9, ls  // ls = plast
   2997c:	mov	x2, x21
   29980:	and	w8, w0, w23
   29984:	ldr	x0, [sp, #120]
   29988:	ubfiz	x8, x8, #3, #31
   2998c:	add	x10, x0, x8
   29990:	ldr	x0, [sp, #128]
   29994:	add	x11, x0, w23, uxtw
   29998:	add	x0, x20, x15
   2999c:	add	x1, x11, x15
   299a0:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   299a4:	add	x0, x15, x0
   299a8:	cmp	x0, x18
   299ac:	b.ls	299f8 <ZSTD_compress@@Base+0x1b1ac>  // b.plast
   299b0:	ldr	w1, [sp, #176]
   299b4:	mov	w3, w0
   299b8:	sub	w1, w1, w23
   299bc:	cmp	x0, x1
   299c0:	b.ls	299cc <ZSTD_compress@@Base+0x1b180>  // b.plast
   299c4:	add	w1, w23, w0
   299c8:	str	w1, [sp, #176]
   299cc:	ubfiz	x1, x13, #3, #32
   299d0:	sub	w4, w12, w23
   299d4:	add	x2, x28, x1
   299d8:	cmp	x0, #0x1, lsl #12
   299dc:	add	w13, w13, #0x1
   299e0:	mov	x18, x0
   299e4:	str	w4, [x28, x1]
   299e8:	add	x1, x20, x0
   299ec:	str	w3, [x2, #4]
   299f0:	ccmp	x1, x21, #0x4, ls  // ls = plast
   299f4:	b.eq	29a60 <ZSTD_compress@@Base+0x1b214>  // b.none
   299f8:	ldrb	w2, [x11, x0]
   299fc:	ldrb	w1, [x20, x0]
   29a00:	cmp	w2, w1
   29a04:	b.cs	29a34 <ZSTD_compress@@Base+0x1b1e8>  // b.hs, b.nlast
   29a08:	ldr	x1, [sp, #216]
   29a0c:	str	w23, [x1]
   29a10:	ldr	w1, [sp, #300]
   29a14:	cmp	w23, w1
   29a18:	b.ls	29a68 <ZSTD_compress@@Base+0x1b21c>  // b.plast
   29a1c:	ldr	w23, [x10, #4]
   29a20:	add	x1, x10, #0x4
   29a24:	str	x1, [sp, #216]
   29a28:	sub	w22, w22, #0x1
   29a2c:	mov	x7, x0
   29a30:	b	297f0 <ZSTD_compress@@Base+0x1afa4>
   29a34:	ldr	x1, [sp, #224]
   29a38:	str	w23, [x1]
   29a3c:	ldr	w1, [sp, #300]
   29a40:	cmp	w23, w1
   29a44:	b.ls	29a74 <ZSTD_compress@@Base+0x1b228>  // b.plast
   29a48:	ldr	x1, [sp, #120]
   29a4c:	mov	x9, x0
   29a50:	mov	x0, x7
   29a54:	str	x10, [sp, #224]
   29a58:	ldr	w23, [x1, x8]
   29a5c:	b	29a28 <ZSTD_compress@@Base+0x1b1dc>
   29a60:	mov	w22, #0x0                   	// #0
   29a64:	b	29804 <ZSTD_compress@@Base+0x1afb8>
   29a68:	add	x0, sp, #0x1c0
   29a6c:	str	x0, [sp, #216]
   29a70:	b	29804 <ZSTD_compress@@Base+0x1afb8>
   29a74:	add	x0, sp, #0x1c0
   29a78:	str	x0, [sp, #224]
   29a7c:	b	29804 <ZSTD_compress@@Base+0x1afb8>
   29a80:	ldr	w15, [x5, x24]
   29a84:	mov	x26, x14
   29a88:	b	29954 <ZSTD_compress@@Base+0x1b108>
   29a8c:	ldr	w0, [x0, x23, lsl #2]
   29a90:	b	28e5c <ZSTD_compress@@Base+0x1a610>
   29a94:	ldr	w3, [sp, #328]
   29a98:	ldr	w1, [sp, #344]
   29a9c:	cmp	w2, w3
   29aa0:	add	w1, w1, w0
   29aa4:	ccmp	w1, #0x2, #0x0, cc  // cc = lo, ul, last
   29aa8:	b.ls	29af4 <ZSTD_compress@@Base+0x1b2a8>  // b.plast
   29aac:	ldr	x1, [sp, #352]
   29ab0:	sub	w0, w14, w0
   29ab4:	ldr	x2, [sp, #176]
   29ab8:	sub	x0, x0, x1
   29abc:	ldr	x1, [sp, #176]
   29ac0:	add	x1, x1, x0
   29ac4:	ldr	w0, [x2, x0]
   29ac8:	ldr	w2, [sp, #240]
   29acc:	cmp	w2, w0
   29ad0:	b.ne	29af4 <ZSTD_compress@@Base+0x1b2a8>  // b.any
   29ad4:	ldr	x3, [sp, #208]
   29ad8:	mov	x2, x21
   29adc:	ldr	x4, [sp, #248]
   29ae0:	add	x1, x1, #0x4
   29ae4:	mov	x0, x25
   29ae8:	str	x6, [sp, #360]
   29aec:	bl	200cc <ZSTD_compress@@Base+0x11880>
   29af0:	b	28ea0 <ZSTD_compress@@Base+0x1a654>
   29af4:	mov	w0, #0x0                   	// #0
   29af8:	b	28ea8 <ZSTD_compress@@Base+0x1a65c>
   29afc:	and	w10, w22, w26
   29b00:	cmp	x9, x11
   29b04:	ldr	x0, [sp, #120]
   29b08:	ubfiz	x10, x10, #3, #31
   29b0c:	csel	x23, x9, x11, ls  // ls = plast
   29b10:	mov	x2, x21
   29b14:	add	x12, x0, x10
   29b18:	str	x6, [sp, #152]
   29b1c:	ldr	x0, [sp, #128]
   29b20:	add	x25, x0, w26, uxtw
   29b24:	add	x0, x20, x23
   29b28:	add	x1, x25, x23
   29b2c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   29b30:	ldr	x6, [sp, #152]
   29b34:	add	x23, x23, x0
   29b38:	cmp	x23, x6
   29b3c:	b.ls	29b88 <ZSTD_compress@@Base+0x1b33c>  // b.plast
   29b40:	ldr	w0, [sp, #160]
   29b44:	mov	w2, w23
   29b48:	sub	w0, w0, w26
   29b4c:	cmp	x23, x0
   29b50:	b.ls	29b5c <ZSTD_compress@@Base+0x1b310>  // b.plast
   29b54:	add	w0, w26, w23
   29b58:	str	w0, [sp, #160]
   29b5c:	ubfiz	x0, x13, #3, #32
   29b60:	sub	w3, w7, w26
   29b64:	add	x1, x28, x0
   29b68:	cmp	x23, #0x1, lsl #12
   29b6c:	add	w13, w13, #0x1
   29b70:	mov	x6, x23
   29b74:	str	w3, [x28, x0]
   29b78:	str	w2, [x1, #4]
   29b7c:	add	x1, x20, x23
   29b80:	ccmp	x1, x21, #0x4, ls  // ls = plast
   29b84:	b.eq	29bec <ZSTD_compress@@Base+0x1b3a0>  // b.none
   29b88:	ldrb	w1, [x25, x23]
   29b8c:	ldrb	w0, [x20, x23]
   29b90:	cmp	w1, w0
   29b94:	b.cs	29bc4 <ZSTD_compress@@Base+0x1b378>  // b.hs, b.nlast
   29b98:	ldr	x0, [sp, #200]
   29b9c:	str	w26, [x0]
   29ba0:	ldr	w0, [sp, #264]
   29ba4:	cmp	w26, w0
   29ba8:	b.ls	29bf4 <ZSTD_compress@@Base+0x1b3a8>  // b.plast
   29bac:	ldr	w26, [x12, #4]
   29bb0:	add	x0, x12, #0x4
   29bb4:	str	x0, [sp, #200]
   29bb8:	sub	w15, w15, #0x1
   29bbc:	mov	x9, x23
   29bc0:	b	28f18 <ZSTD_compress@@Base+0x1a6cc>
   29bc4:	ldr	w0, [sp, #264]
   29bc8:	str	w26, [x18]
   29bcc:	cmp	w26, w0
   29bd0:	b.ls	29c00 <ZSTD_compress@@Base+0x1b3b4>  // b.plast
   29bd4:	ldr	x0, [sp, #120]
   29bd8:	mov	x11, x23
   29bdc:	mov	x18, x12
   29be0:	mov	x23, x9
   29be4:	ldr	w26, [x0, x10]
   29be8:	b	29bb8 <ZSTD_compress@@Base+0x1b36c>
   29bec:	mov	w15, #0x0                   	// #0
   29bf0:	b	28f2c <ZSTD_compress@@Base+0x1a6e0>
   29bf4:	add	x0, sp, #0x1c0
   29bf8:	str	x0, [sp, #200]
   29bfc:	b	28f2c <ZSTD_compress@@Base+0x1a6e0>
   29c00:	add	x18, sp, #0x1c0
   29c04:	b	28f2c <ZSTD_compress@@Base+0x1a6e0>
   29c08:	ldr	w18, [x5, x22]
   29c0c:	mov	x24, x27
   29c10:	b	29074 <ZSTD_compress@@Base+0x1a828>
   29c14:	mov	w2, w26
   29c18:	mov	x0, x20
   29c1c:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   29c20:	lsl	x0, x0, #2
   29c24:	str	x0, [sp, #264]
   29c28:	mov	w7, #0x1                   	// #1
   29c2c:	ldr	x0, [sp, #152]
   29c30:	sub	w8, w11, #0x1
   29c34:	ldr	x1, [sp, #264]
   29c38:	ldr	w22, [x27, #4]
   29c3c:	ldr	w2, [x19, #184]
   29c40:	ldr	w26, [x0, x1]
   29c44:	sub	w22, w22, #0x1
   29c48:	ldr	x0, [sp, #128]
   29c4c:	lsl	w22, w7, w22
   29c50:	sub	w22, w22, #0x1
   29c54:	mov	w1, w15
   29c58:	cmp	w22, w15
   29c5c:	add	x0, x0, w11, uxtw
   29c60:	str	x0, [sp, #240]
   29c64:	sub	w0, w15, w22
   29c68:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   29c6c:	str	w0, [sp, #256]
   29c70:	mov	x0, x19
   29c74:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   29c78:	cmp	w0, #0x0
   29c7c:	and	w18, w22, w15
   29c80:	csel	w1, w0, w7, ne  // ne = any
   29c84:	str	w1, [sp, #272]
   29c88:	ldr	x1, [sp, #120]
   29c8c:	ubfiz	x18, x18, #3, #31
   29c90:	mov	w13, #0x0                   	// #0
   29c94:	add	x1, x1, x18
   29c98:	str	x1, [sp, #200]
   29c9c:	ldr	x1, [sp, #120]
   29ca0:	add	x18, x18, #0x4
   29ca4:	add	x18, x1, x18
   29ca8:	add	w1, w15, #0x9
   29cac:	str	w1, [sp, #160]
   29cb0:	ldr	w1, [x27, #12]
   29cb4:	ldr	x27, [x19, #176]
   29cb8:	lsl	w1, w7, w1
   29cbc:	str	w1, [sp, #280]
   29cc0:	ldr	x1, [x27, #8]
   29cc4:	str	x1, [sp, #176]
   29cc8:	ldr	x1, [x27]
   29ccc:	str	x1, [sp, #208]
   29cd0:	ldr	x2, [sp, #176]
   29cd4:	sub	x25, x1, x2
   29cd8:	ldr	w1, [x27, #28]
   29cdc:	str	w1, [sp, #216]
   29ce0:	sub	w1, w0, w25
   29ce4:	str	w1, [sp, #248]
   29ce8:	ldr	w1, [x27, #188]
   29cec:	ldr	w2, [x27, #192]
   29cf0:	sub	w1, w1, #0x1
   29cf4:	str	w2, [sp, #300]
   29cf8:	lsl	w7, w7, w1
   29cfc:	sub	w1, w7, #0x1
   29d00:	str	w1, [sp, #224]
   29d04:	ldr	w1, [sp, #216]
   29d08:	ldr	w3, [sp, #224]
   29d0c:	ldr	w2, [sp, #224]
   29d10:	sub	w1, w25, w1
   29d14:	cmp	w3, w1
   29d18:	ldr	w3, [sp, #216]
   29d1c:	sub	w2, w25, w2
   29d20:	csel	w2, w2, w3, cc  // cc = lo, ul, last
   29d24:	str	w2, [sp, #312]
   29d28:	ldr	w2, [sp, #184]
   29d2c:	mov	w3, #0x4                   	// #4
   29d30:	ldrb	w23, [sp, #136]
   29d34:	sub	w24, w2, #0x1
   29d38:	ldr	w2, [sp, #136]
   29d3c:	cmp	w2, #0x0
   29d40:	mov	w2, #0x3                   	// #3
   29d44:	csel	w2, w3, w2, ne  // ne = any
   29d48:	str	w2, [sp, #304]
   29d4c:	sub	w2, w15, w11
   29d50:	str	w2, [sp, #384]
   29d54:	sub	w2, w15, w0
   29d58:	sub	w0, w0, w25
   29d5c:	add	w1, w2, w1
   29d60:	str	w1, [sp, #320]
   29d64:	sub	w1, w8, w15
   29d68:	add	x8, x20, #0x4
   29d6c:	str	w1, [sp, #328]
   29d70:	str	x0, [sp, #344]
   29d74:	str	w23, [sp, #352]
   29d78:	cmp	w23, #0x3
   29d7c:	ldr	x0, [sp, #104]
   29d80:	b.ne	29fa4 <ZSTD_compress@@Base+0x1b758>  // b.any
   29d84:	ldr	w0, [x0]
   29d88:	sub	w0, w0, #0x1
   29d8c:	ldr	w1, [sp, #384]
   29d90:	sub	w2, w0, #0x1
   29d94:	cmp	w2, w1
   29d98:	b.cs	29fac <ZSTD_compress@@Base+0x1b760>  // b.hs, b.nlast
   29d9c:	mov	w1, w0
   29da0:	sub	x0, x20, w0, uxtw
   29da4:	ldr	w2, [x0]
   29da8:	ldr	w0, [x20]
   29dac:	cmp	w2, w0
   29db0:	b.ne	2a00c <ZSTD_compress@@Base+0x1b7c0>  // b.any
   29db4:	mov	x0, #0x4                   	// #4
   29db8:	sub	x1, x0, x1
   29dbc:	mov	x2, x21
   29dc0:	add	x1, x20, x1
   29dc4:	mov	x0, x8
   29dc8:	str	x8, [sp, #352]
   29dcc:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   29dd0:	ldr	x8, [sp, #352]
   29dd4:	add	w0, w0, #0x4
   29dd8:	mov	w1, w0
   29ddc:	cmp	x24, w0, uxtw
   29de0:	b.cs	29e18 <ZSTD_compress@@Base+0x1b5cc>  // b.hs, b.nlast
   29de4:	ubfiz	x2, x13, #3, #32
   29de8:	ldr	w5, [sp, #136]
   29dec:	add	x3, x28, x2
   29df0:	add	w13, w13, #0x1
   29df4:	sub	w4, w23, w5
   29df8:	str	w4, [x28, x2]
   29dfc:	add	x2, x20, x1
   29e00:	cmp	x2, x21
   29e04:	ldr	w2, [sp, #192]
   29e08:	str	w0, [x3, #4]
   29e0c:	ccmp	w0, w2, #0x2, ne  // ne = any
   29e10:	b.hi	29968 <ZSTD_compress@@Base+0x1b11c>  // b.pmore
   29e14:	mov	x24, x1
   29e18:	ldr	w0, [sp, #304]
   29e1c:	add	x23, x23, #0x1
   29e20:	cmp	w0, w23
   29e24:	b.hi	29d74 <ZSTD_compress@@Base+0x1b528>  // b.pmore
   29e28:	ldr	x0, [sp, #152]
   29e2c:	add	w12, w14, #0x2
   29e30:	ldr	x1, [sp, #264]
   29e34:	mov	x9, #0x0                   	// #0
   29e38:	mov	x7, #0x0                   	// #0
   29e3c:	str	w15, [x0, x1]
   29e40:	ldr	w0, [sp, #280]
   29e44:	sub	w23, w0, #0x1
   29e48:	cmn	w23, #0x1
   29e4c:	b.eq	29e5c <ZSTD_compress@@Base+0x1b610>  // b.none
   29e50:	ldr	w0, [sp, #272]
   29e54:	cmp	w0, w26
   29e58:	b.ls	2a014 <ZSTD_compress@@Base+0x1b7c8>  // b.plast
   29e5c:	ldr	x0, [sp, #200]
   29e60:	str	wzr, [x18]
   29e64:	str	wzr, [x0]
   29e68:	cbz	w23, 2907c <ZSTD_compress@@Base+0x1a830>
   29e6c:	ldr	w1, [sp, #300]
   29e70:	mov	x0, x20
   29e74:	mov	w2, #0x5                   	// #5
   29e78:	and	x25, x25, #0xffffffff
   29e7c:	mov	x26, #0x0                   	// #0
   29e80:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   29e84:	add	w7, w14, #0x2
   29e88:	ldr	x1, [x27, #48]
   29e8c:	ldr	w9, [sp, #248]
   29e90:	ldr	x5, [x27, #64]
   29e94:	mov	x27, #0x0                   	// #0
   29e98:	ldr	w15, [x1, x0, lsl #2]
   29e9c:	ldr	w0, [sp, #216]
   29ea0:	cmp	w0, w15
   29ea4:	b.cs	2907c <ZSTD_compress@@Base+0x1a830>  // b.hs, b.nlast
   29ea8:	ldr	w0, [sp, #224]
   29eac:	cmp	x27, x26
   29eb0:	ldr	x3, [sp, #208]
   29eb4:	and	w18, w0, w15
   29eb8:	ldr	x0, [sp, #176]
   29ebc:	ubfiz	x18, x18, #3, #31
   29ec0:	ldr	x4, [sp, #240]
   29ec4:	csel	x14, x27, x26, ls  // ls = plast
   29ec8:	add	x6, x0, w15, uxtw
   29ecc:	add	x8, x5, x18
   29ed0:	add	x1, x6, x14
   29ed4:	mov	w22, w15
   29ed8:	add	x0, x20, x14
   29edc:	mov	x2, x21
   29ee0:	str	x6, [sp, #120]
   29ee4:	str	x8, [sp, #152]
   29ee8:	stp	x5, x9, [sp, #192]
   29eec:	str	w7, [sp, #256]
   29ef0:	bl	200cc <ZSTD_compress@@Base+0x11880>
   29ef4:	add	x14, x14, x0
   29ef8:	ldr	w7, [sp, #256]
   29efc:	add	x0, x22, x14
   29f00:	cmp	x0, x25
   29f04:	ldr	x6, [sp, #120]
   29f08:	ldr	x8, [sp, #152]
   29f0c:	ldp	x5, x9, [sp, #192]
   29f10:	b.cc	29f20 <ZSTD_compress@@Base+0x1b6d4>  // b.lo, b.ul, b.last
   29f14:	ldr	x0, [sp, #128]
   29f18:	add	x22, x9, x22
   29f1c:	add	x6, x0, x22
   29f20:	cmp	x14, x24
   29f24:	b.ls	29f74 <ZSTD_compress@@Base+0x1b728>  // b.plast
   29f28:	ldr	w0, [sp, #248]
   29f2c:	add	w1, w0, w15
   29f30:	ldr	w0, [sp, #160]
   29f34:	sub	w0, w0, w1
   29f38:	cmp	x14, x0
   29f3c:	b.ls	29f48 <ZSTD_compress@@Base+0x1b6fc>  // b.plast
   29f40:	add	w0, w1, w14
   29f44:	str	w0, [sp, #160]
   29f48:	ubfiz	x0, x13, #3, #32
   29f4c:	sub	w1, w7, w1
   29f50:	add	x2, x28, x0
   29f54:	cmp	x14, #0x1, lsl #12
   29f58:	add	w13, w13, #0x1
   29f5c:	str	w1, [x28, x0]
   29f60:	add	x1, x20, x14
   29f64:	str	w14, [x2, #4]
   29f68:	ccmp	x1, x21, #0x4, ls  // ls = plast
   29f6c:	b.eq	2907c <ZSTD_compress@@Base+0x1a830>  // b.none
   29f70:	mov	x24, x14
   29f74:	ldr	w0, [sp, #312]
   29f78:	cmp	w0, w15
   29f7c:	b.cs	2907c <ZSTD_compress@@Base+0x1a830>  // b.hs, b.nlast
   29f80:	ldrb	w1, [x6, x14]
   29f84:	ldrb	w0, [x20, x14]
   29f88:	cmp	w1, w0
   29f8c:	b.cs	2a118 <ZSTD_compress@@Base+0x1b8cc>  // b.hs, b.nlast
   29f90:	ldr	w15, [x8, #4]
   29f94:	mov	x26, x14
   29f98:	subs	w23, w23, #0x1
   29f9c:	b.ne	29e9c <ZSTD_compress@@Base+0x1b650>  // b.any
   29fa0:	b	2907c <ZSTD_compress@@Base+0x1a830>
   29fa4:	ldr	w0, [x0, x23, lsl #2]
   29fa8:	b	29d8c <ZSTD_compress@@Base+0x1b540>
   29fac:	ldr	w3, [sp, #320]
   29fb0:	ldr	w1, [sp, #328]
   29fb4:	cmp	w2, w3
   29fb8:	add	w1, w1, w0
   29fbc:	ccmp	w1, #0x2, #0x0, cc  // cc = lo, ul, last
   29fc0:	b.ls	2a00c <ZSTD_compress@@Base+0x1b7c0>  // b.plast
   29fc4:	ldr	x1, [sp, #344]
   29fc8:	sub	w0, w14, w0
   29fcc:	ldr	x2, [sp, #176]
   29fd0:	sub	x0, x0, x1
   29fd4:	ldr	x1, [sp, #176]
   29fd8:	ldr	w2, [x2, x0]
   29fdc:	add	x1, x1, x0
   29fe0:	ldr	w0, [x20]
   29fe4:	cmp	w2, w0
   29fe8:	b.ne	2a00c <ZSTD_compress@@Base+0x1b7c0>  // b.any
   29fec:	ldr	x3, [sp, #208]
   29ff0:	mov	x2, x21
   29ff4:	ldr	x4, [sp, #240]
   29ff8:	add	x1, x1, #0x4
   29ffc:	mov	x0, x8
   2a000:	str	x8, [sp, #352]
   2a004:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2a008:	b	29dd0 <ZSTD_compress@@Base+0x1b584>
   2a00c:	mov	w0, #0x0                   	// #0
   2a010:	b	29dd8 <ZSTD_compress@@Base+0x1b58c>
   2a014:	and	w8, w22, w26
   2a018:	cmp	x7, x9
   2a01c:	ldr	x0, [sp, #120]
   2a020:	ubfiz	x8, x8, #3, #31
   2a024:	csel	x15, x7, x9, ls  // ls = plast
   2a028:	mov	x2, x21
   2a02c:	add	x10, x0, x8
   2a030:	ldr	x0, [sp, #128]
   2a034:	add	x11, x0, w26, uxtw
   2a038:	add	x0, x20, x15
   2a03c:	add	x1, x11, x15
   2a040:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2a044:	add	x0, x15, x0
   2a048:	cmp	x0, x24
   2a04c:	b.ls	2a098 <ZSTD_compress@@Base+0x1b84c>  // b.plast
   2a050:	ldr	w1, [sp, #160]
   2a054:	mov	w3, w0
   2a058:	sub	w1, w1, w26
   2a05c:	cmp	x0, x1
   2a060:	b.ls	2a06c <ZSTD_compress@@Base+0x1b820>  // b.plast
   2a064:	add	w1, w26, w0
   2a068:	str	w1, [sp, #160]
   2a06c:	ubfiz	x1, x13, #3, #32
   2a070:	sub	w4, w12, w26
   2a074:	add	x2, x28, x1
   2a078:	cmp	x0, #0x1, lsl #12
   2a07c:	add	w13, w13, #0x1
   2a080:	mov	x24, x0
   2a084:	str	w4, [x28, x1]
   2a088:	add	x1, x20, x0
   2a08c:	str	w3, [x2, #4]
   2a090:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2a094:	b.eq	2a0fc <ZSTD_compress@@Base+0x1b8b0>  // b.none
   2a098:	ldrb	w2, [x11, x0]
   2a09c:	ldrb	w1, [x20, x0]
   2a0a0:	cmp	w2, w1
   2a0a4:	b.cs	2a0d4 <ZSTD_compress@@Base+0x1b888>  // b.hs, b.nlast
   2a0a8:	ldr	x1, [sp, #200]
   2a0ac:	str	w26, [x1]
   2a0b0:	ldr	w1, [sp, #256]
   2a0b4:	cmp	w26, w1
   2a0b8:	b.ls	2a104 <ZSTD_compress@@Base+0x1b8b8>  // b.plast
   2a0bc:	ldr	w26, [x10, #4]
   2a0c0:	add	x1, x10, #0x4
   2a0c4:	str	x1, [sp, #200]
   2a0c8:	sub	w23, w23, #0x1
   2a0cc:	mov	x7, x0
   2a0d0:	b	29e48 <ZSTD_compress@@Base+0x1b5fc>
   2a0d4:	ldr	w1, [sp, #256]
   2a0d8:	str	w26, [x18]
   2a0dc:	cmp	w26, w1
   2a0e0:	b.ls	2a110 <ZSTD_compress@@Base+0x1b8c4>  // b.plast
   2a0e4:	ldr	x1, [sp, #120]
   2a0e8:	mov	x9, x0
   2a0ec:	mov	x18, x10
   2a0f0:	mov	x0, x7
   2a0f4:	ldr	w26, [x1, x8]
   2a0f8:	b	2a0c8 <ZSTD_compress@@Base+0x1b87c>
   2a0fc:	mov	w23, #0x0                   	// #0
   2a100:	b	29e5c <ZSTD_compress@@Base+0x1b610>
   2a104:	add	x0, sp, #0x1c0
   2a108:	str	x0, [sp, #200]
   2a10c:	b	29e5c <ZSTD_compress@@Base+0x1b610>
   2a110:	add	x18, sp, #0x1c0
   2a114:	b	29e5c <ZSTD_compress@@Base+0x1b610>
   2a118:	ldr	w15, [x5, x18]
   2a11c:	mov	x27, x14
   2a120:	b	29f98 <ZSTD_compress@@Base+0x1b74c>
   2a124:	ldr	w0, [x0, x23, lsl #2]
   2a128:	b	29228 <ZSTD_compress@@Base+0x1a9dc>
   2a12c:	ldr	w3, [sp, #320]
   2a130:	ldr	w1, [sp, #328]
   2a134:	cmp	w2, w3
   2a138:	add	w1, w1, w0
   2a13c:	ccmp	w1, #0x2, #0x0, cc  // cc = lo, ul, last
   2a140:	b.ls	2a18c <ZSTD_compress@@Base+0x1b940>  // b.plast
   2a144:	ldr	x1, [sp, #344]
   2a148:	sub	w0, w14, w0
   2a14c:	ldr	x2, [sp, #176]
   2a150:	sub	x0, x0, x1
   2a154:	ldr	x1, [sp, #176]
   2a158:	ldr	w2, [x2, x0]
   2a15c:	add	x1, x1, x0
   2a160:	ldr	w0, [x20]
   2a164:	cmp	w2, w0
   2a168:	b.ne	2a18c <ZSTD_compress@@Base+0x1b940>  // b.any
   2a16c:	ldr	x3, [sp, #208]
   2a170:	mov	x2, x21
   2a174:	ldr	x4, [sp, #240]
   2a178:	add	x1, x1, #0x4
   2a17c:	mov	x0, x8
   2a180:	str	x8, [sp, #352]
   2a184:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2a188:	b	2926c <ZSTD_compress@@Base+0x1aa20>
   2a18c:	mov	w0, #0x0                   	// #0
   2a190:	b	29274 <ZSTD_compress@@Base+0x1aa28>
   2a194:	and	w8, w22, w26
   2a198:	cmp	x7, x9
   2a19c:	ldr	x0, [sp, #120]
   2a1a0:	ubfiz	x8, x8, #3, #31
   2a1a4:	csel	x15, x7, x9, ls  // ls = plast
   2a1a8:	mov	x2, x21
   2a1ac:	add	x10, x0, x8
   2a1b0:	ldr	x0, [sp, #128]
   2a1b4:	add	x11, x0, w26, uxtw
   2a1b8:	add	x0, x20, x15
   2a1bc:	add	x1, x11, x15
   2a1c0:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2a1c4:	add	x0, x15, x0
   2a1c8:	cmp	x0, x24
   2a1cc:	b.ls	2a218 <ZSTD_compress@@Base+0x1b9cc>  // b.plast
   2a1d0:	ldr	w1, [sp, #160]
   2a1d4:	mov	w3, w0
   2a1d8:	sub	w1, w1, w26
   2a1dc:	cmp	x0, x1
   2a1e0:	b.ls	2a1ec <ZSTD_compress@@Base+0x1b9a0>  // b.plast
   2a1e4:	add	w1, w26, w0
   2a1e8:	str	w1, [sp, #160]
   2a1ec:	ubfiz	x1, x13, #3, #32
   2a1f0:	sub	w4, w12, w26
   2a1f4:	add	x2, x28, x1
   2a1f8:	cmp	x0, #0x1, lsl #12
   2a1fc:	add	w13, w13, #0x1
   2a200:	mov	x24, x0
   2a204:	str	w4, [x28, x1]
   2a208:	add	x1, x20, x0
   2a20c:	str	w3, [x2, #4]
   2a210:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2a214:	b.eq	2a27c <ZSTD_compress@@Base+0x1ba30>  // b.none
   2a218:	ldrb	w2, [x11, x0]
   2a21c:	ldrb	w1, [x20, x0]
   2a220:	cmp	w2, w1
   2a224:	b.cs	2a254 <ZSTD_compress@@Base+0x1ba08>  // b.hs, b.nlast
   2a228:	ldr	x1, [sp, #200]
   2a22c:	str	w26, [x1]
   2a230:	ldr	w1, [sp, #256]
   2a234:	cmp	w26, w1
   2a238:	b.ls	2a284 <ZSTD_compress@@Base+0x1ba38>  // b.plast
   2a23c:	ldr	w26, [x10, #4]
   2a240:	add	x1, x10, #0x4
   2a244:	str	x1, [sp, #200]
   2a248:	sub	w23, w23, #0x1
   2a24c:	mov	x7, x0
   2a250:	b	292e4 <ZSTD_compress@@Base+0x1aa98>
   2a254:	ldr	w1, [sp, #256]
   2a258:	str	w26, [x18]
   2a25c:	cmp	w26, w1
   2a260:	b.ls	2a290 <ZSTD_compress@@Base+0x1ba44>  // b.plast
   2a264:	ldr	x1, [sp, #120]
   2a268:	mov	x9, x0
   2a26c:	mov	x18, x10
   2a270:	mov	x0, x7
   2a274:	ldr	w26, [x1, x8]
   2a278:	b	2a248 <ZSTD_compress@@Base+0x1b9fc>
   2a27c:	mov	w23, #0x0                   	// #0
   2a280:	b	292f8 <ZSTD_compress@@Base+0x1aaac>
   2a284:	add	x0, sp, #0x1c0
   2a288:	str	x0, [sp, #200]
   2a28c:	b	292f8 <ZSTD_compress@@Base+0x1aaac>
   2a290:	add	x18, sp, #0x1c0
   2a294:	b	292f8 <ZSTD_compress@@Base+0x1aaac>
   2a298:	ldr	w15, [x5, x18]
   2a29c:	mov	x27, x25
   2a2a0:	b	29434 <ZSTD_compress@@Base+0x1abe8>
   2a2a4:	ldr	x1, [sp, #168]
   2a2a8:	mov	w2, #0x0                   	// #0
   2a2ac:	mov	w0, #0x0                   	// #0
   2a2b0:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   2a2b4:	add	w6, w6, w0
   2a2b8:	ldr	x1, [sp, #96]
   2a2bc:	mov	w0, #0x40000000            	// #1073741824
   2a2c0:	str	w0, [x1, #28]
   2a2c4:	str	w0, [x1, #56]
   2a2c8:	ldr	w1, [sp, #184]
   2a2cc:	cmp	w1, #0x4
   2a2d0:	b.ne	2a2dc <ZSTD_compress@@Base+0x1ba90>  // b.any
   2a2d4:	ldr	x1, [sp, #96]
   2a2d8:	str	w0, [x1, #84]
   2a2dc:	ldr	w5, [sp, #184]
   2a2e0:	mov	x8, x28
   2a2e4:	add	x7, x19, #0x48
   2a2e8:	mov	w9, #0x0                   	// #0
   2a2ec:	ldp	w10, w12, [x8]
   2a2f0:	ldr	w2, [sp, #136]
   2a2f4:	ldr	x0, [sp, #104]
   2a2f8:	mov	w1, w10
   2a2fc:	bl	205a8 <ZSTD_compress@@Base+0x11d5c>
   2a300:	add	w2, w10, #0x1
   2a304:	clz	w2, w2
   2a308:	mov	w18, #0x1c                  	// #28
   2a30c:	eor	w2, w2, #0x1f
   2a310:	str	w0, [sp, #448]
   2a314:	sub	w4, w2, #0x13
   2a318:	add	w11, w2, #0x10
   2a31c:	sbfiz	x14, x2, #2, #32
   2a320:	lsl	w15, w2, #8
   2a324:	lsl	w4, w4, #9
   2a328:	lsl	w11, w11, #8
   2a32c:	lsr	x0, x0, #32
   2a330:	str	w0, [sp, #452]
   2a334:	str	w1, [sp, #456]
   2a338:	cmp	w12, w5
   2a33c:	b.cs	2a548 <ZSTD_compress@@Base+0x1bcfc>  // b.hs, b.nlast
   2a340:	add	w9, w9, #0x1
   2a344:	add	x8, x8, #0x8
   2a348:	cmp	w13, w9
   2a34c:	b.ne	2a2ec <ZSTD_compress@@Base+0x1baa0>  // b.any
   2a350:	sub	w0, w5, #0x1
   2a354:	str	w0, [sp, #160]
   2a358:	mov	w0, #0x1                   	// #1
   2a35c:	str	w0, [sp, #152]
   2a360:	ldr	w1, [sp, #160]
   2a364:	ldr	w0, [sp, #152]
   2a368:	cmp	w0, w1
   2a36c:	b.hi	2a458 <ZSTD_compress@@Base+0x1bc0c>  // b.pmore
   2a370:	ldr	w0, [sp, #152]
   2a374:	mov	w1, #0x1c                  	// #28
   2a378:	sub	w9, w0, #0x1
   2a37c:	add	x26, x20, w0, uxtw
   2a380:	umull	x9, w9, w1
   2a384:	ldr	x1, [sp, #96]
   2a388:	add	x8, x1, x9
   2a38c:	ldr	w1, [x8, #8]
   2a390:	cbnz	w1, 2a5fc <ZSTD_compress@@Base+0x1bdb0>
   2a394:	ldr	w7, [x8, #12]
   2a398:	add	w7, w7, #0x1
   2a39c:	ldr	x2, [sp, #168]
   2a3a0:	sub	x0, x0, #0x1
   2a3a4:	mov	w3, #0x0                   	// #0
   2a3a8:	mov	w1, #0x1                   	// #1
   2a3ac:	add	x0, x20, x0
   2a3b0:	bl	20464 <ZSTD_compress@@Base+0x11c18>
   2a3b4:	mov	w6, w0
   2a3b8:	ldr	x1, [sp, #168]
   2a3bc:	mov	w0, w7
   2a3c0:	mov	w2, #0x0                   	// #0
   2a3c4:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   2a3c8:	add	w6, w6, w0
   2a3cc:	ldr	x1, [sp, #168]
   2a3d0:	mov	w2, #0x0                   	// #0
   2a3d4:	sub	w0, w7, #0x1
   2a3d8:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   2a3dc:	ldr	x1, [sp, #96]
   2a3e0:	ldr	w2, [sp, #152]
   2a3e4:	ldr	w1, [x1, x9]
   2a3e8:	sub	w0, w1, w0
   2a3ec:	mov	w1, #0x1c                  	// #28
   2a3f0:	add	w0, w0, w6
   2a3f4:	umull	x1, w2, w1
   2a3f8:	ldr	x2, [sp, #96]
   2a3fc:	add	x2, x2, x1
   2a400:	str	x2, [sp, #120]
   2a404:	ldr	x2, [sp, #96]
   2a408:	ldr	w2, [x2, x1]
   2a40c:	cmp	w0, w2
   2a410:	b.gt	2a43c <ZSTD_compress@@Base+0x1bbf0>
   2a414:	ldr	x2, [sp, #120]
   2a418:	stur	xzr, [x2, #4]
   2a41c:	str	w7, [x2, #12]
   2a420:	ldr	x2, [sp, #96]
   2a424:	str	w0, [x2, x1]
   2a428:	ldr	x2, [sp, #120]
   2a42c:	ldr	x0, [x8, #16]
   2a430:	str	x0, [x2, #16]
   2a434:	ldr	w0, [x8, #24]
   2a438:	str	w0, [x2, #24]
   2a43c:	ldr	x0, [sp, #288]
   2a440:	cmp	x0, x26
   2a444:	b.cc	2b414 <ZSTD_compress@@Base+0x1cbc8>  // b.lo, b.ul, b.last
   2a448:	ldr	w0, [sp, #152]
   2a44c:	ldr	w2, [sp, #160]
   2a450:	cmp	w0, w2
   2a454:	b.ne	2a604 <ZSTD_compress@@Base+0x1bdb8>  // b.any
   2a458:	ldr	w1, [sp, #160]
   2a45c:	mov	w0, #0x1c                  	// #28
   2a460:	ldr	x2, [sp, #96]
   2a464:	umaddl	x0, w1, w0, x2
   2a468:	ldp	x2, x3, [x0]
   2a46c:	stp	x2, x3, [sp, #464]
   2a470:	ldr	w2, [x0, #4]
   2a474:	ldr	x1, [x0, #16]
   2a478:	str	x1, [sp, #480]
   2a47c:	ldr	w1, [x0, #24]
   2a480:	str	w1, [sp, #488]
   2a484:	ldp	w1, w0, [x0, #8]
   2a488:	str	w0, [sp, #188]
   2a48c:	ldr	w3, [sp, #160]
   2a490:	mov	w0, w0
   2a494:	add	w0, w0, w1
   2a498:	subs	w6, w3, w0
   2a49c:	csel	w6, w6, wzr, hi  // hi = pmore
   2a4a0:	ldr	w0, [sp, #188]
   2a4a4:	add	w24, w6, #0x1
   2a4a8:	str	w1, [sp, #472]
   2a4ac:	mov	w10, w24
   2a4b0:	ldr	x1, [sp, #96]
   2a4b4:	str	w0, [sp, #476]
   2a4b8:	mov	w0, #0x1c                  	// #28
   2a4bc:	str	w2, [sp, #468]
   2a4c0:	umaddl	x1, w24, w0, x1
   2a4c4:	ldp	x2, x3, [sp, #464]
   2a4c8:	stp	x2, x3, [x1]
   2a4cc:	ldr	x2, [sp, #480]
   2a4d0:	str	x2, [x1, #16]
   2a4d4:	ldr	w2, [sp, #488]
   2a4d8:	str	w2, [x1, #24]
   2a4dc:	cbz	w6, 2a51c <ZSTD_compress@@Base+0x1bcd0>
   2a4e0:	ldr	x1, [sp, #96]
   2a4e4:	sub	w10, w10, #0x1
   2a4e8:	umaddl	x1, w6, w0, x1
   2a4ec:	ldp	w4, w2, [x1, #8]
   2a4f0:	add	w4, w4, w2
   2a4f4:	ldr	x2, [sp, #96]
   2a4f8:	cmp	w6, w4
   2a4fc:	umaddl	x5, w10, w0, x2
   2a500:	ldp	x2, x3, [x1]
   2a504:	stp	x2, x3, [x5]
   2a508:	ldr	x2, [x1, #16]
   2a50c:	str	x2, [x5, #16]
   2a510:	ldr	w1, [x1, #24]
   2a514:	str	w1, [x5, #24]
   2a518:	b.hi	2bf48 <ZSTD_compress@@Base+0x1d6fc>  // b.pmore
   2a51c:	mov	x13, #0xffff                	// #65535
   2a520:	sub	x12, x21, #0x20
   2a524:	mov	w15, w13
   2a528:	mov	w14, #0x1c                  	// #28
   2a52c:	mov	w18, #0x2                   	// #2
   2a530:	cmp	w24, w10
   2a534:	b.cs	2bf50 <ZSTD_compress@@Base+0x1d704>  // b.hs, b.nlast
   2a538:	ldr	x0, [sp, #168]
   2a53c:	mov	w1, #0x0                   	// #0
   2a540:	bl	203b8 <ZSTD_compress@@Base+0x11b6c>
   2a544:	b	28bf8 <ZSTD_compress@@Base+0x1a3ac>
   2a548:	ldr	w0, [x7, #80]
   2a54c:	sub	w1, w5, #0x3
   2a550:	cmp	w0, #0x1
   2a554:	b.ne	2a5a0 <ZSTD_compress@@Base+0x1bd54>  // b.any
   2a558:	mov	w0, w1
   2a55c:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   2a560:	add	w0, w11, w0
   2a564:	ldr	x1, [sp, #96]
   2a568:	umull	x3, w5, w18
   2a56c:	ldr	w16, [sp, #188]
   2a570:	add	w0, w6, w0
   2a574:	add	x1, x1, x3
   2a578:	str	w16, [x1, #12]
   2a57c:	ldr	x16, [sp, #96]
   2a580:	stp	w10, w5, [x1, #4]
   2a584:	add	w5, w5, #0x1
   2a588:	str	w0, [x16, x3]
   2a58c:	ldr	x0, [sp, #448]
   2a590:	str	x0, [x1, #16]
   2a594:	ldr	w0, [sp, #456]
   2a598:	str	w0, [x1, #24]
   2a59c:	b	2a338 <ZSTD_compress@@Base+0x1baec>
   2a5a0:	ldr	x0, [x7, #24]
   2a5a4:	ldr	w0, [x0, x14]
   2a5a8:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   2a5ac:	ldr	w3, [x7, #76]
   2a5b0:	cmp	w2, #0x13
   2a5b4:	add	w3, w15, w3
   2a5b8:	sub	w3, w3, w0
   2a5bc:	b.le	2a5c4 <ZSTD_compress@@Base+0x1bd78>
   2a5c0:	add	w3, w3, w4
   2a5c4:	mov	w0, w1
   2a5c8:	bl	2043c <ZSTD_compress@@Base+0x11bf0>
   2a5cc:	ldr	x16, [x7, #16]
   2a5d0:	mov	w1, w0
   2a5d4:	ldr	w0, [x16, w0, uxtw #2]
   2a5d8:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   2a5dc:	ldr	w16, [x7, #72]
   2a5e0:	sub	w0, w3, w0
   2a5e4:	add	w16, w16, #0x33
   2a5e8:	add	w16, w16, w0
   2a5ec:	ldr	x0, [sp, #336]
   2a5f0:	ldr	w0, [x0, x1, lsl #2]
   2a5f4:	add	w0, w16, w0, lsl #8
   2a5f8:	b	2a564 <ZSTD_compress@@Base+0x1bd18>
   2a5fc:	mov	w7, #0x1                   	// #1
   2a600:	b	2a39c <ZSTD_compress@@Base+0x1bb50>
   2a604:	ldr	x0, [sp, #96]
   2a608:	ldr	x2, [sp, #96]
   2a60c:	ldr	w0, [x0, x1]
   2a610:	mov	w1, #0x1c                  	// #28
   2a614:	str	w0, [sp, #300]
   2a618:	ldr	w0, [sp, #152]
   2a61c:	add	w0, w0, #0x1
   2a620:	umull	x0, w0, w1
   2a624:	ldr	w1, [sp, #300]
   2a628:	add	w1, w1, #0x80
   2a62c:	ldr	w0, [x2, x0]
   2a630:	cmp	w0, w1
   2a634:	b.le	2b414 <ZSTD_compress@@Base+0x1cbc8>
   2a638:	ldr	x0, [sp, #120]
   2a63c:	ldr	w22, [x0, #8]
   2a640:	cbnz	w22, 2aad4 <ZSTD_compress@@Base+0x1c288>
   2a644:	ldr	w0, [x0, #12]
   2a648:	str	w0, [sp, #188]
   2a64c:	ldr	x25, [x19, #8]
   2a650:	ldr	w24, [x19, #36]
   2a654:	add	x0, x25, w24, uxtw
   2a658:	cmp	x26, x0
   2a65c:	b.cc	2b414 <ZSTD_compress@@Base+0x1cbc8>  // b.lo, b.ul, b.last
   2a660:	ldr	x1, [sp, #168]
   2a664:	add	x23, x19, #0xb8
   2a668:	mov	w2, #0x0                   	// #0
   2a66c:	mov	w0, #0x0                   	// #0
   2a670:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   2a674:	ldr	w27, [x23, #16]
   2a678:	sub	x5, x26, x25
   2a67c:	str	w0, [sp, #344]
   2a680:	mov	w6, w5
   2a684:	cmp	w6, w24
   2a688:	b.hi	2aadc <ZSTD_compress@@Base+0x1c290>  // b.pmore
   2a68c:	cmp	w22, #0x0
   2a690:	mov	w1, #0xfff                 	// #4095
   2a694:	cset	w0, ne  // ne = any
   2a698:	str	w0, [sp, #136]
   2a69c:	ldr	x0, [sp, #120]
   2a6a0:	str	w5, [x19, #36]
   2a6a4:	add	x0, x0, #0x10
   2a6a8:	str	x0, [sp, #216]
   2a6ac:	ldr	w0, [x23, #20]
   2a6b0:	cmp	w0, #0xfff
   2a6b4:	csel	w0, w0, w1, ls  // ls = plast
   2a6b8:	str	w0, [sp, #200]
   2a6bc:	ldr	x0, [x19, #8]
   2a6c0:	str	x0, [sp, #128]
   2a6c4:	ldr	w1, [x23, #8]
   2a6c8:	cmp	w27, #0x5
   2a6cc:	sub	x15, x26, x0
   2a6d0:	ldr	x0, [x19, #48]
   2a6d4:	str	x0, [sp, #176]
   2a6d8:	mov	w14, w15
   2a6dc:	b.eq	2b6c8 <ZSTD_compress@@Base+0x1ce7c>  // b.none
   2a6e0:	b.hi	2ab0c <ZSTD_compress@@Base+0x1c2c0>  // b.pmore
   2a6e4:	cmp	w27, #0x3
   2a6e8:	b.eq	2aedc <ZSTD_compress@@Base+0x1c690>  // b.none
   2a6ec:	mov	x25, x26
   2a6f0:	neg	w1, w1
   2a6f4:	ldr	w22, [x19, #188]
   2a6f8:	mov	w7, #0x1                   	// #1
   2a6fc:	ldr	w12, [x19, #24]
   2a700:	ldr	w0, [x25], #4
   2a704:	sub	w22, w22, #0x1
   2a708:	str	w0, [sp, #280]
   2a70c:	sub	w5, w12, #0x1
   2a710:	mov	w0, #0x79b1                	// #31153
   2a714:	lsl	w22, w7, w22
   2a718:	ldr	w2, [sp, #280]
   2a71c:	movk	w0, #0x9e37, lsl #16
   2a720:	mul	w0, w2, w0
   2a724:	ldr	w2, [x19, #184]
   2a728:	lsr	w1, w0, w1
   2a72c:	ubfiz	x0, x1, #2, #32
   2a730:	str	x0, [sp, #320]
   2a734:	ldr	x0, [sp, #176]
   2a738:	ldr	x1, [sp, #320]
   2a73c:	ldr	w23, [x0, x1]
   2a740:	ldr	x0, [x19, #64]
   2a744:	str	x0, [sp, #224]
   2a748:	sub	w0, w22, #0x1
   2a74c:	str	w0, [sp, #232]
   2a750:	ldr	x0, [sp, #128]
   2a754:	ldr	w1, [sp, #232]
   2a758:	add	x0, x0, w12, uxtw
   2a75c:	str	x0, [sp, #304]
   2a760:	ldr	w0, [sp, #232]
   2a764:	cmp	w1, w15
   2a768:	mov	w1, w15
   2a76c:	sub	w0, w15, w0
   2a770:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   2a774:	str	w0, [sp, #384]
   2a778:	mov	x0, x19
   2a77c:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   2a780:	cmp	w0, #0x0
   2a784:	mov	w13, #0x0                   	// #0
   2a788:	csel	w1, w0, w7, ne  // ne = any
   2a78c:	str	w1, [sp, #328]
   2a790:	ldr	w1, [sp, #232]
   2a794:	ldr	x24, [x19, #176]
   2a798:	and	w18, w1, w15
   2a79c:	ldr	x1, [sp, #224]
   2a7a0:	ubfiz	x18, x18, #3, #31
   2a7a4:	add	x1, x1, x18
   2a7a8:	str	x1, [sp, #248]
   2a7ac:	ldr	x1, [sp, #224]
   2a7b0:	add	x18, x18, #0x4
   2a7b4:	add	x18, x1, x18
   2a7b8:	add	w1, w15, #0x9
   2a7bc:	str	w1, [sp, #208]
   2a7c0:	ldr	w1, [x19, #196]
   2a7c4:	lsl	w1, w7, w1
   2a7c8:	str	w1, [sp, #352]
   2a7cc:	ldr	x1, [x24, #8]
   2a7d0:	str	x1, [sp, #240]
   2a7d4:	ldr	x1, [x24]
   2a7d8:	str	x1, [sp, #256]
   2a7dc:	ldr	x2, [sp, #240]
   2a7e0:	sub	x22, x1, x2
   2a7e4:	ldr	w1, [x24, #28]
   2a7e8:	ldr	w2, [x24, #192]
   2a7ec:	str	w1, [sp, #264]
   2a7f0:	sub	w1, w0, w22
   2a7f4:	str	w1, [sp, #312]
   2a7f8:	str	w2, [sp, #360]
   2a7fc:	ldr	w1, [x24, #188]
   2a800:	ldrb	w10, [sp, #136]
   2a804:	sub	w1, w1, #0x1
   2a808:	lsl	w7, w7, w1
   2a80c:	sub	w1, w7, #0x1
   2a810:	str	w1, [sp, #272]
   2a814:	ldr	w1, [sp, #264]
   2a818:	ldr	w3, [sp, #272]
   2a81c:	sub	w1, w22, w1
   2a820:	ldr	w2, [sp, #272]
   2a824:	cmp	w3, w1
   2a828:	ldr	w3, [sp, #264]
   2a82c:	sub	w2, w22, w2
   2a830:	csel	w2, w2, w3, cc  // cc = lo, ul, last
   2a834:	str	w2, [sp, #376]
   2a838:	ldr	w2, [sp, #184]
   2a83c:	mov	w3, #0x4                   	// #4
   2a840:	sub	w2, w2, #0x1
   2a844:	str	x2, [sp, #192]
   2a848:	ldr	w2, [sp, #136]
   2a84c:	cmp	w2, #0x0
   2a850:	mov	w2, #0x3                   	// #3
   2a854:	csel	w2, w3, w2, ne  // ne = any
   2a858:	str	w2, [sp, #368]
   2a85c:	ldr	x2, [sp, #120]
   2a860:	add	x2, x2, #0x10
   2a864:	str	x2, [sp, #392]
   2a868:	sub	w2, w14, w12
   2a86c:	str	w2, [sp, #388]
   2a870:	sub	w2, w14, w0
   2a874:	sub	w0, w0, w22
   2a878:	add	w1, w2, w1
   2a87c:	str	w1, [sp, #400]
   2a880:	sub	w1, w5, w14
   2a884:	str	w1, [sp, #408]
   2a888:	str	x0, [sp, #416]
   2a88c:	mov	w27, w10
   2a890:	cmp	w10, #0x3
   2a894:	b.ne	2b53c <ZSTD_compress@@Base+0x1ccf0>  // b.any
   2a898:	ldr	x0, [sp, #120]
   2a89c:	ldr	w0, [x0, #16]
   2a8a0:	sub	w0, w0, #0x1
   2a8a4:	ldr	w1, [sp, #388]
   2a8a8:	sub	w2, w0, #0x1
   2a8ac:	cmp	w2, w1
   2a8b0:	b.cs	2b548 <ZSTD_compress@@Base+0x1ccfc>  // b.hs, b.nlast
   2a8b4:	mov	w1, w0
   2a8b8:	sub	x0, x26, w0, uxtw
   2a8bc:	ldr	w2, [sp, #280]
   2a8c0:	ldr	w0, [x0]
   2a8c4:	cmp	w2, w0
   2a8c8:	b.ne	2b5a8 <ZSTD_compress@@Base+0x1cd5c>  // b.any
   2a8cc:	mov	x0, #0x4                   	// #4
   2a8d0:	sub	x1, x0, x1
   2a8d4:	mov	x2, x21
   2a8d8:	add	x1, x26, x1
   2a8dc:	mov	x0, x25
   2a8e0:	str	x10, [sp, #424]
   2a8e4:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2a8e8:	ldr	x10, [sp, #424]
   2a8ec:	add	w0, w0, #0x4
   2a8f0:	ldr	x2, [sp, #192]
   2a8f4:	mov	w1, w0
   2a8f8:	cmp	x2, w0, uxtw
   2a8fc:	b.cs	2a934 <ZSTD_compress@@Base+0x1c0e8>  // b.hs, b.nlast
   2a900:	ubfiz	x2, x13, #3, #32
   2a904:	ldr	w4, [sp, #136]
   2a908:	add	x3, x28, x2
   2a90c:	add	w13, w13, #0x1
   2a910:	sub	w27, w27, w4
   2a914:	str	w27, [x28, x2]
   2a918:	add	x2, x26, x1
   2a91c:	cmp	x2, x21
   2a920:	ldr	w2, [sp, #200]
   2a924:	str	w0, [x3, #4]
   2a928:	ccmp	w0, w2, #0x2, ne  // ne = any
   2a92c:	b.hi	2b410 <ZSTD_compress@@Base+0x1cbc4>  // b.pmore
   2a930:	str	x1, [sp, #192]
   2a934:	ldr	w0, [sp, #368]
   2a938:	add	x10, x10, #0x1
   2a93c:	cmp	w0, w10
   2a940:	b.hi	2a88c <ZSTD_compress@@Base+0x1c040>  // b.pmore
   2a944:	ldr	x0, [sp, #176]
   2a948:	add	w27, w14, #0x2
   2a94c:	ldr	x1, [sp, #320]
   2a950:	mov	x12, #0x0                   	// #0
   2a954:	mov	x10, #0x0                   	// #0
   2a958:	str	w15, [x0, x1]
   2a95c:	ldr	w0, [sp, #352]
   2a960:	sub	w15, w0, #0x1
   2a964:	cmn	w15, #0x1
   2a968:	b.eq	2a978 <ZSTD_compress@@Base+0x1c12c>  // b.none
   2a96c:	ldr	w0, [sp, #328]
   2a970:	cmp	w0, w23
   2a974:	b.ls	2b5b0 <ZSTD_compress@@Base+0x1cd64>  // b.plast
   2a978:	ldr	x0, [sp, #248]
   2a97c:	str	wzr, [x18]
   2a980:	str	wzr, [x0]
   2a984:	cbz	w15, 2aacc <ZSTD_compress@@Base+0x1c280>
   2a988:	ldr	w0, [x26]
   2a98c:	mov	w1, #0x79b1                	// #31153
   2a990:	movk	w1, #0x9e37, lsl #16
   2a994:	ldr	w7, [sp, #312]
   2a998:	and	x8, x22, #0xffffffff
   2a99c:	add	w14, w14, #0x2
   2a9a0:	mov	x25, #0x0                   	// #0
   2a9a4:	mul	w0, w0, w1
   2a9a8:	ldr	w1, [sp, #360]
   2a9ac:	ldr	x5, [x24, #64]
   2a9b0:	neg	w1, w1
   2a9b4:	lsr	w0, w0, w1
   2a9b8:	ldr	x1, [x24, #48]
   2a9bc:	mov	x24, #0x0                   	// #0
   2a9c0:	ldr	w18, [x1, w0, uxtw #2]
   2a9c4:	ldr	w0, [sp, #264]
   2a9c8:	cmp	w0, w18
   2a9cc:	b.cs	2aacc <ZSTD_compress@@Base+0x1c280>  // b.hs, b.nlast
   2a9d0:	ldr	w0, [sp, #272]
   2a9d4:	cmp	x24, x25
   2a9d8:	ldr	x3, [sp, #256]
   2a9dc:	and	w22, w0, w18
   2a9e0:	ldr	x0, [sp, #240]
   2a9e4:	ubfiz	x22, x22, #3, #31
   2a9e8:	ldr	x4, [sp, #304]
   2a9ec:	add	x9, x5, x22
   2a9f0:	add	x6, x0, w18, uxtw
   2a9f4:	csel	x27, x24, x25, ls  // ls = plast
   2a9f8:	add	x1, x6, x27
   2a9fc:	mov	w23, w18
   2aa00:	add	x0, x26, x27
   2aa04:	mov	x2, x21
   2aa08:	str	x6, [sp, #176]
   2aa0c:	str	x9, [sp, #200]
   2aa10:	stp	x5, x8, [sp, #224]
   2aa14:	str	x7, [sp, #248]
   2aa18:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2aa1c:	ldp	x5, x8, [sp, #224]
   2aa20:	add	x27, x27, x0
   2aa24:	add	x0, x23, x27
   2aa28:	ldr	x6, [sp, #176]
   2aa2c:	ldr	x9, [sp, #200]
   2aa30:	cmp	x0, x8
   2aa34:	ldr	x7, [sp, #248]
   2aa38:	b.cc	2aa48 <ZSTD_compress@@Base+0x1c1fc>  // b.lo, b.ul, b.last
   2aa3c:	ldr	x0, [sp, #128]
   2aa40:	add	x23, x7, x23
   2aa44:	add	x6, x0, x23
   2aa48:	ldr	x0, [sp, #192]
   2aa4c:	cmp	x27, x0
   2aa50:	b.ls	2aaa0 <ZSTD_compress@@Base+0x1c254>  // b.plast
   2aa54:	ldr	w0, [sp, #312]
   2aa58:	add	w1, w0, w18
   2aa5c:	ldr	w0, [sp, #208]
   2aa60:	sub	w0, w0, w1
   2aa64:	cmp	x27, x0
   2aa68:	b.ls	2aa74 <ZSTD_compress@@Base+0x1c228>  // b.plast
   2aa6c:	add	w0, w1, w27
   2aa70:	str	w0, [sp, #208]
   2aa74:	ubfiz	x0, x13, #3, #32
   2aa78:	sub	w1, w14, w1
   2aa7c:	add	x2, x28, x0
   2aa80:	cmp	x27, #0x1, lsl #12
   2aa84:	add	w13, w13, #0x1
   2aa88:	str	w1, [x28, x0]
   2aa8c:	add	x1, x26, x27
   2aa90:	str	w27, [x2, #4]
   2aa94:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2aa98:	b.eq	2aacc <ZSTD_compress@@Base+0x1c280>  // b.none
   2aa9c:	str	x27, [sp, #192]
   2aaa0:	ldr	w0, [sp, #376]
   2aaa4:	cmp	w0, w18
   2aaa8:	b.cs	2aacc <ZSTD_compress@@Base+0x1c280>  // b.hs, b.nlast
   2aaac:	ldrb	w1, [x6, x27]
   2aab0:	ldrb	w0, [x26, x27]
   2aab4:	cmp	w1, w0
   2aab8:	b.cs	2b6bc <ZSTD_compress@@Base+0x1ce70>  // b.hs, b.nlast
   2aabc:	ldr	w18, [x9, #4]
   2aac0:	mov	x24, x27
   2aac4:	subs	w15, w15, #0x1
   2aac8:	b.ne	2a9c4 <ZSTD_compress@@Base+0x1c178>  // b.any
   2aacc:	ldr	w0, [sp, #208]
   2aad0:	b	2b408 <ZSTD_compress@@Base+0x1cbbc>
   2aad4:	str	wzr, [sp, #188]
   2aad8:	b	2a64c <ZSTD_compress@@Base+0x1be00>
   2aadc:	add	x1, x25, w24, uxtw
   2aae0:	mov	w3, w27
   2aae4:	mov	x2, x21
   2aae8:	mov	x0, x19
   2aaec:	mov	w4, #0x0                   	// #0
   2aaf0:	str	w6, [sp, #128]
   2aaf4:	str	x5, [sp, #136]
   2aaf8:	bl	2012c <ZSTD_compress@@Base+0x118e0>
   2aafc:	ldr	w6, [sp, #128]
   2ab00:	add	w24, w24, w0
   2ab04:	ldr	x5, [sp, #136]
   2ab08:	b	2a684 <ZSTD_compress@@Base+0x1be38>
   2ab0c:	sub	w27, w27, #0x6
   2ab10:	cmp	w27, #0x1
   2ab14:	b.hi	2a6ec <ZSTD_compress@@Base+0x1bea0>  // b.pmore
   2ab18:	mov	w2, #0x6                   	// #6
   2ab1c:	mov	x0, x26
   2ab20:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   2ab24:	lsl	x0, x0, #2
   2ab28:	str	x0, [sp, #312]
   2ab2c:	mov	w8, #0x1                   	// #1
   2ab30:	ldr	x0, [sp, #176]
   2ab34:	add	x7, x19, #0xb8
   2ab38:	ldr	x1, [sp, #312]
   2ab3c:	ldr	w22, [x23, #4]
   2ab40:	ldr	w9, [x19, #24]
   2ab44:	ldr	w25, [x0, x1]
   2ab48:	sub	w22, w22, #0x1
   2ab4c:	ldr	x0, [x19, #64]
   2ab50:	str	x0, [sp, #224]
   2ab54:	ldr	x0, [sp, #128]
   2ab58:	lsl	w22, w8, w22
   2ab5c:	ldr	w2, [x19, #184]
   2ab60:	sub	w22, w22, #0x1
   2ab64:	sub	w10, w9, #0x1
   2ab68:	cmp	w22, w15
   2ab6c:	add	x0, x0, w9, uxtw
   2ab70:	str	x0, [sp, #272]
   2ab74:	sub	w0, w15, w22
   2ab78:	mov	w1, w15
   2ab7c:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   2ab80:	str	w0, [sp, #304]
   2ab84:	mov	x0, x19
   2ab88:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   2ab8c:	cmp	w0, #0x0
   2ab90:	and	w18, w22, w15
   2ab94:	csel	w1, w0, w8, ne  // ne = any
   2ab98:	str	w1, [sp, #384]
   2ab9c:	ldr	x1, [sp, #224]
   2aba0:	ubfiz	x18, x18, #3, #31
   2aba4:	ldr	x23, [x19, #176]
   2aba8:	add	x1, x1, x18
   2abac:	str	x1, [sp, #240]
   2abb0:	add	x18, x18, #0x4
   2abb4:	ldr	x1, [sp, #224]
   2abb8:	mov	w13, #0x0                   	// #0
   2abbc:	add	x18, x1, x18
   2abc0:	add	w1, w15, #0x9
   2abc4:	str	w1, [sp, #208]
   2abc8:	ldr	w1, [x7, #12]
   2abcc:	lsl	w1, w8, w1
   2abd0:	str	w1, [sp, #320]
   2abd4:	ldr	x1, [x23, #8]
   2abd8:	str	x1, [sp, #232]
   2abdc:	ldr	x1, [x23]
   2abe0:	str	x1, [sp, #248]
   2abe4:	ldr	x2, [sp, #232]
   2abe8:	sub	x1, x1, x2
   2abec:	str	x1, [sp, #192]
   2abf0:	ldr	w1, [x23, #28]
   2abf4:	str	w1, [sp, #256]
   2abf8:	ldr	w1, [sp, #192]
   2abfc:	ldr	w2, [x23, #192]
   2ac00:	sub	w1, w0, w1
   2ac04:	str	w1, [sp, #280]
   2ac08:	ldr	w1, [x23, #188]
   2ac0c:	str	w2, [sp, #328]
   2ac10:	sub	w1, w1, #0x1
   2ac14:	lsl	w8, w8, w1
   2ac18:	sub	w1, w8, #0x1
   2ac1c:	str	w1, [sp, #264]
   2ac20:	ldr	w1, [sp, #192]
   2ac24:	ldr	w2, [sp, #256]
   2ac28:	ldr	w3, [sp, #264]
   2ac2c:	sub	w1, w1, w2
   2ac30:	ldr	w2, [sp, #192]
   2ac34:	cmp	w3, w1
   2ac38:	ldrb	w8, [sp, #136]
   2ac3c:	sub	w2, w2, w3
   2ac40:	ldr	w3, [sp, #256]
   2ac44:	csel	w2, w2, w3, cc  // cc = lo, ul, last
   2ac48:	str	w2, [sp, #360]
   2ac4c:	ldr	w2, [sp, #184]
   2ac50:	mov	w3, #0x4                   	// #4
   2ac54:	sub	w24, w2, #0x1
   2ac58:	ldr	w2, [sp, #136]
   2ac5c:	cmp	w2, #0x0
   2ac60:	mov	w2, #0x3                   	// #3
   2ac64:	csel	w2, w3, w2, ne  // ne = any
   2ac68:	str	w2, [sp, #352]
   2ac6c:	ldr	x2, [sp, #216]
   2ac70:	str	x2, [sp, #376]
   2ac74:	sub	w2, w15, w9
   2ac78:	str	w2, [sp, #368]
   2ac7c:	sub	w2, w15, w0
   2ac80:	add	x9, x26, #0x4
   2ac84:	add	w1, w2, w1
   2ac88:	str	w1, [sp, #388]
   2ac8c:	sub	w1, w10, w15
   2ac90:	str	w1, [sp, #392]
   2ac94:	ldr	w1, [sp, #192]
   2ac98:	sub	w0, w0, w1
   2ac9c:	str	x0, [sp, #400]
   2aca0:	mov	w27, w8
   2aca4:	cmp	w8, #0x3
   2aca8:	b.ne	2bc10 <ZSTD_compress@@Base+0x1d3c4>  // b.any
   2acac:	ldr	x0, [sp, #120]
   2acb0:	ldr	w0, [x0, #16]
   2acb4:	sub	w0, w0, #0x1
   2acb8:	ldr	w1, [sp, #368]
   2acbc:	sub	w2, w0, #0x1
   2acc0:	cmp	w2, w1
   2acc4:	b.cs	2bc1c <ZSTD_compress@@Base+0x1d3d0>  // b.hs, b.nlast
   2acc8:	mov	w1, w0
   2accc:	sub	x0, x26, w0, uxtw
   2acd0:	ldr	w2, [x0]
   2acd4:	ldr	w0, [x26]
   2acd8:	cmp	w2, w0
   2acdc:	b.ne	2bc7c <ZSTD_compress@@Base+0x1d430>  // b.any
   2ace0:	mov	x0, #0x4                   	// #4
   2ace4:	sub	x1, x0, x1
   2ace8:	mov	x2, x21
   2acec:	add	x1, x26, x1
   2acf0:	mov	x0, x9
   2acf4:	stp	x9, x8, [sp, #408]
   2acf8:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2acfc:	ldp	x9, x8, [sp, #408]
   2ad00:	add	w0, w0, #0x4
   2ad04:	mov	w1, w0
   2ad08:	cmp	x24, w0, uxtw
   2ad0c:	b.cs	2ad44 <ZSTD_compress@@Base+0x1c4f8>  // b.hs, b.nlast
   2ad10:	ubfiz	x2, x13, #3, #32
   2ad14:	ldr	w4, [sp, #136]
   2ad18:	add	x3, x28, x2
   2ad1c:	add	w13, w13, #0x1
   2ad20:	sub	w27, w27, w4
   2ad24:	str	w27, [x28, x2]
   2ad28:	add	x2, x26, x1
   2ad2c:	cmp	x2, x21
   2ad30:	ldr	w2, [sp, #200]
   2ad34:	str	w0, [x3, #4]
   2ad38:	ccmp	w2, w0, #0x0, ne  // ne = any
   2ad3c:	b.cc	2b410 <ZSTD_compress@@Base+0x1cbc4>  // b.lo, b.ul, b.last
   2ad40:	mov	x24, x1
   2ad44:	ldr	w0, [sp, #352]
   2ad48:	add	x8, x8, #0x1
   2ad4c:	cmp	w0, w8
   2ad50:	b.hi	2aca0 <ZSTD_compress@@Base+0x1c454>  // b.pmore
   2ad54:	ldr	x0, [sp, #176]
   2ad58:	add	w27, w14, #0x2
   2ad5c:	ldr	x1, [sp, #312]
   2ad60:	mov	x10, #0x0                   	// #0
   2ad64:	mov	x8, #0x0                   	// #0
   2ad68:	str	w15, [x0, x1]
   2ad6c:	ldr	w0, [sp, #320]
   2ad70:	sub	w15, w0, #0x1
   2ad74:	cmn	w15, #0x1
   2ad78:	b.eq	2ad88 <ZSTD_compress@@Base+0x1c53c>  // b.none
   2ad7c:	ldr	w0, [sp, #384]
   2ad80:	cmp	w0, w25
   2ad84:	b.ls	2bc84 <ZSTD_compress@@Base+0x1d438>  // b.plast
   2ad88:	ldr	x0, [sp, #240]
   2ad8c:	str	wzr, [x18]
   2ad90:	str	wzr, [x0]
   2ad94:	cbz	w15, 2aacc <ZSTD_compress@@Base+0x1c280>
   2ad98:	ldr	w1, [sp, #328]
   2ad9c:	mov	x0, x26
   2ada0:	mov	w2, #0x6                   	// #6
   2ada4:	mov	x27, #0x0                   	// #0
   2ada8:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   2adac:	add	w14, w14, #0x2
   2adb0:	ldr	x1, [x23, #48]
   2adb4:	mov	x5, #0x0                   	// #0
   2adb8:	ldr	w8, [sp, #280]
   2adbc:	ldr	x6, [x23, #64]
   2adc0:	ldr	w18, [x1, x0, lsl #2]
   2adc4:	ldr	x0, [sp, #192]
   2adc8:	and	x10, x0, #0xffffffff
   2adcc:	ldr	w0, [sp, #256]
   2add0:	cmp	w0, w18
   2add4:	b.cs	2aacc <ZSTD_compress@@Base+0x1c280>  // b.hs, b.nlast
   2add8:	ldr	w0, [sp, #264]
   2addc:	cmp	x5, x27
   2ade0:	ldr	x3, [sp, #248]
   2ade4:	and	w22, w0, w18
   2ade8:	ldr	x0, [sp, #232]
   2adec:	ubfiz	x22, x22, #3, #31
   2adf0:	ldr	x4, [sp, #272]
   2adf4:	add	x9, x6, x22
   2adf8:	add	x7, x0, w18, uxtw
   2adfc:	csel	x25, x5, x27, ls  // ls = plast
   2ae00:	add	x1, x7, x25
   2ae04:	mov	w23, w18
   2ae08:	add	x0, x26, x25
   2ae0c:	mov	x2, x21
   2ae10:	str	x7, [sp, #176]
   2ae14:	stp	x5, x9, [sp, #192]
   2ae18:	str	x6, [sp, #224]
   2ae1c:	str	x10, [sp, #240]
   2ae20:	str	x8, [sp, #304]
   2ae24:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2ae28:	ldr	x10, [sp, #240]
   2ae2c:	add	x25, x25, x0
   2ae30:	add	x0, x23, x25
   2ae34:	cmp	x0, x10
   2ae38:	ldr	x7, [sp, #176]
   2ae3c:	ldp	x5, x9, [sp, #192]
   2ae40:	ldr	x6, [sp, #224]
   2ae44:	ldr	x8, [sp, #304]
   2ae48:	b.cc	2ae58 <ZSTD_compress@@Base+0x1c60c>  // b.lo, b.ul, b.last
   2ae4c:	ldr	x0, [sp, #128]
   2ae50:	add	x23, x8, x23
   2ae54:	add	x7, x0, x23
   2ae58:	cmp	x25, x24
   2ae5c:	b.ls	2aeac <ZSTD_compress@@Base+0x1c660>  // b.plast
   2ae60:	ldr	w0, [sp, #280]
   2ae64:	add	w1, w0, w18
   2ae68:	ldr	w0, [sp, #208]
   2ae6c:	sub	w0, w0, w1
   2ae70:	cmp	x25, x0
   2ae74:	b.ls	2ae80 <ZSTD_compress@@Base+0x1c634>  // b.plast
   2ae78:	add	w0, w1, w25
   2ae7c:	str	w0, [sp, #208]
   2ae80:	ubfiz	x0, x13, #3, #32
   2ae84:	sub	w1, w14, w1
   2ae88:	add	x2, x28, x0
   2ae8c:	cmp	x25, #0x1, lsl #12
   2ae90:	add	w13, w13, #0x1
   2ae94:	str	w1, [x28, x0]
   2ae98:	add	x1, x26, x25
   2ae9c:	str	w25, [x2, #4]
   2aea0:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2aea4:	b.eq	2aacc <ZSTD_compress@@Base+0x1c280>  // b.none
   2aea8:	mov	x24, x25
   2aeac:	ldr	w0, [sp, #360]
   2aeb0:	cmp	w0, w18
   2aeb4:	b.cs	2aacc <ZSTD_compress@@Base+0x1c280>  // b.hs, b.nlast
   2aeb8:	ldrb	w1, [x7, x25]
   2aebc:	ldrb	w0, [x26, x25]
   2aec0:	cmp	w1, w0
   2aec4:	b.cs	2bd88 <ZSTD_compress@@Base+0x1d53c>  // b.hs, b.nlast
   2aec8:	ldr	w18, [x9, #4]
   2aecc:	mov	x27, x25
   2aed0:	subs	w15, w15, #0x1
   2aed4:	b.ne	2adcc <ZSTD_compress@@Base+0x1c580>  // b.any
   2aed8:	b	2aacc <ZSTD_compress@@Base+0x1c280>
   2aedc:	mov	x8, x26
   2aee0:	mov	w0, #0x79b1                	// #31153
   2aee4:	movk	w0, #0x9e37, lsl #16
   2aee8:	neg	w1, w1
   2aeec:	mov	w7, #0x1                   	// #1
   2aef0:	ldr	w9, [x19, #24]
   2aef4:	ldr	w6, [x8], #3
   2aef8:	ldr	w2, [x19, #184]
   2aefc:	sub	w5, w9, #0x1
   2af00:	str	x8, [sp, #424]
   2af04:	mul	w0, w6, w0
   2af08:	lsr	w1, w0, w1
   2af0c:	ubfiz	x0, x1, #2, #32
   2af10:	str	x0, [sp, #328]
   2af14:	ldr	x0, [sp, #176]
   2af18:	ldr	x1, [sp, #328]
   2af1c:	ldr	w25, [x0, x1]
   2af20:	ldr	x0, [x19, #64]
   2af24:	str	x0, [sp, #208]
   2af28:	ldr	w0, [x23, #4]
   2af2c:	sub	w0, w0, #0x1
   2af30:	lsl	w0, w7, w0
   2af34:	sub	w0, w0, #0x1
   2af38:	str	w0, [sp, #224]
   2af3c:	ldr	x0, [sp, #128]
   2af40:	ldr	w1, [sp, #224]
   2af44:	add	x0, x0, w9, uxtw
   2af48:	str	x0, [sp, #280]
   2af4c:	ldr	w0, [sp, #224]
   2af50:	cmp	w1, w15
   2af54:	mov	w1, w15
   2af58:	sub	w0, w15, w0
   2af5c:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   2af60:	str	w0, [sp, #384]
   2af64:	mov	x0, x19
   2af68:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   2af6c:	cmp	w0, #0x0
   2af70:	ldr	w22, [x19, #196]
   2af74:	csel	w1, w0, w7, ne  // ne = any
   2af78:	str	w1, [sp, #304]
   2af7c:	ldr	w1, [sp, #224]
   2af80:	mov	w13, #0x0                   	// #0
   2af84:	ldr	x2, [sp, #208]
   2af88:	and	w1, w1, w15
   2af8c:	ldr	x24, [x19, #176]
   2af90:	ubfiz	x1, x1, #3, #31
   2af94:	add	x2, x2, x1
   2af98:	str	x2, [sp, #240]
   2af9c:	ldr	x2, [sp, #208]
   2afa0:	add	x1, x1, #0x4
   2afa4:	add	x1, x2, x1
   2afa8:	str	x1, [sp, #248]
   2afac:	add	w1, w15, #0x9
   2afb0:	str	w1, [sp, #192]
   2afb4:	lsl	w1, w7, w22
   2afb8:	str	w1, [sp, #352]
   2afbc:	ldr	x1, [x24, #8]
   2afc0:	str	x1, [sp, #232]
   2afc4:	ldr	x1, [x24]
   2afc8:	str	x1, [sp, #256]
   2afcc:	ldr	x2, [sp, #232]
   2afd0:	sub	x23, x1, x2
   2afd4:	ldr	w1, [x24, #28]
   2afd8:	ldr	w2, [x24, #192]
   2afdc:	str	w1, [sp, #264]
   2afe0:	sub	w1, w0, w23
   2afe4:	str	w1, [sp, #312]
   2afe8:	str	w2, [sp, #360]
   2afec:	ldr	w1, [x24, #188]
   2aff0:	ldrb	w22, [sp, #136]
   2aff4:	sub	w1, w1, #0x1
   2aff8:	ldr	x8, [sp, #424]
   2affc:	lsl	w7, w7, w1
   2b000:	sub	w1, w7, #0x1
   2b004:	str	w1, [sp, #272]
   2b008:	ldr	w1, [sp, #264]
   2b00c:	ldr	w3, [sp, #272]
   2b010:	sub	w1, w23, w1
   2b014:	ldr	w2, [sp, #272]
   2b018:	cmp	w3, w1
   2b01c:	ldr	w3, [sp, #264]
   2b020:	sub	w2, w23, w2
   2b024:	csel	w2, w2, w3, cc  // cc = lo, ul, last
   2b028:	str	w2, [sp, #376]
   2b02c:	ldr	w2, [sp, #184]
   2b030:	mov	w3, #0x4                   	// #4
   2b034:	sub	w18, w2, #0x1
   2b038:	ldr	w2, [sp, #136]
   2b03c:	cmp	w2, #0x0
   2b040:	csel	w2, w3, w27, ne  // ne = any
   2b044:	str	w2, [sp, #368]
   2b048:	lsl	w2, w6, #8
   2b04c:	str	w2, [sp, #320]
   2b050:	ldr	x2, [sp, #216]
   2b054:	str	x2, [sp, #392]
   2b058:	sub	w2, w15, w9
   2b05c:	str	w2, [sp, #388]
   2b060:	sub	w2, w15, w0
   2b064:	sub	w0, w0, w23
   2b068:	add	w1, w2, w1
   2b06c:	str	w1, [sp, #400]
   2b070:	sub	w1, w5, w15
   2b074:	str	w1, [sp, #408]
   2b078:	str	x0, [sp, #416]
   2b07c:	mov	w27, w22
   2b080:	cmp	w22, #0x3
   2b084:	b.ne	2b1f8 <ZSTD_compress@@Base+0x1c9ac>  // b.any
   2b088:	ldr	x0, [sp, #120]
   2b08c:	ldr	w0, [x0, #16]
   2b090:	sub	w0, w0, #0x1
   2b094:	ldr	w1, [sp, #388]
   2b098:	sub	w2, w0, #0x1
   2b09c:	cmp	w2, w1
   2b0a0:	b.cs	2b204 <ZSTD_compress@@Base+0x1c9b8>  // b.hs, b.nlast
   2b0a4:	mov	w1, w0
   2b0a8:	sub	x0, x26, w0, uxtw
   2b0ac:	ldr	w2, [sp, #320]
   2b0b0:	ldr	w0, [x0]
   2b0b4:	cmp	w2, w0, lsl #8
   2b0b8:	b.ne	2b264 <ZSTD_compress@@Base+0x1ca18>  // b.any
   2b0bc:	mov	x0, #0x3                   	// #3
   2b0c0:	sub	x1, x0, x1
   2b0c4:	mov	x2, x21
   2b0c8:	add	x1, x26, x1
   2b0cc:	mov	x0, x8
   2b0d0:	str	x8, [sp, #424]
   2b0d4:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2b0d8:	ldr	x8, [sp, #424]
   2b0dc:	add	w0, w0, #0x3
   2b0e0:	mov	w1, w0
   2b0e4:	cmp	x18, w0, uxtw
   2b0e8:	b.cs	2b120 <ZSTD_compress@@Base+0x1c8d4>  // b.hs, b.nlast
   2b0ec:	ubfiz	x2, x13, #3, #32
   2b0f0:	ldr	w4, [sp, #136]
   2b0f4:	add	x3, x28, x2
   2b0f8:	add	w13, w13, #0x1
   2b0fc:	sub	w27, w27, w4
   2b100:	str	w27, [x28, x2]
   2b104:	add	x2, x26, x1
   2b108:	cmp	x2, x21
   2b10c:	ldr	w2, [sp, #200]
   2b110:	str	w0, [x3, #4]
   2b114:	ccmp	w0, w2, #0x2, ne  // ne = any
   2b118:	b.hi	2b410 <ZSTD_compress@@Base+0x1cbc4>  // b.pmore
   2b11c:	mov	x18, x1
   2b120:	ldr	w0, [sp, #368]
   2b124:	add	x22, x22, #0x1
   2b128:	cmp	w0, w22
   2b12c:	b.hi	2b07c <ZSTD_compress@@Base+0x1c830>  // b.pmore
   2b130:	cmp	x18, #0x2
   2b134:	b.ne	2b274 <ZSTD_compress@@Base+0x1ca28>  // b.any
   2b138:	add	x1, sp, #0x1bc
   2b13c:	mov	x2, x26
   2b140:	mov	x0, x19
   2b144:	bl	1ff88 <ZSTD_compress@@Base+0x1173c>
   2b148:	ldr	w1, [sp, #304]
   2b14c:	sub	w7, w15, w0
   2b150:	cmp	w1, w0
   2b154:	mov	w1, #0x3ffff               	// #262143
   2b158:	ccmp	w7, w1, #0x2, ls  // ls = plast
   2b15c:	b.hi	2b274 <ZSTD_compress@@Base+0x1ca28>  // b.pmore
   2b160:	ldr	x1, [sp, #128]
   2b164:	mov	x2, x21
   2b168:	add	x1, x1, w0, uxtw
   2b16c:	mov	x0, x26
   2b170:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2b174:	cmp	x0, #0x2
   2b178:	b.ls	2b274 <ZSTD_compress@@Base+0x1ca28>  // b.plast
   2b17c:	ldr	w2, [sp, #200]
   2b180:	add	w7, w7, #0x2
   2b184:	add	x1, x26, x0
   2b188:	stp	w7, w0, [x28]
   2b18c:	cmp	x1, x21
   2b190:	ccmp	x0, x2, #0x2, ne  // ne = any
   2b194:	b.ls	2b26c <ZSTD_compress@@Base+0x1ca20>  // b.plast
   2b198:	add	w15, w15, #0x1
   2b19c:	mov	w13, #0x1                   	// #1
   2b1a0:	str	w15, [x19, #36]
   2b1a4:	sub	w0, w13, #0x1
   2b1a8:	ldr	w2, [sp, #296]
   2b1ac:	add	x0, x28, x0, lsl #3
   2b1b0:	ldr	w1, [x0, #4]
   2b1b4:	cmp	w2, w1
   2b1b8:	b.cc	2b1cc <ZSTD_compress@@Base+0x1c980>  // b.lo, b.ul, b.last
   2b1bc:	ldr	w2, [sp, #152]
   2b1c0:	add	w2, w2, w1
   2b1c4:	cmp	w2, #0xfff
   2b1c8:	b.ls	2bd9c <ZSTD_compress@@Base+0x1d550>  // b.plast
   2b1cc:	ldr	w2, [x0]
   2b1d0:	ldr	x0, [sp, #120]
   2b1d4:	ldr	w0, [x0, #8]
   2b1d8:	cbnz	w0, 2bd94 <ZSTD_compress@@Base+0x1d548>
   2b1dc:	ldr	x0, [sp, #120]
   2b1e0:	ldr	w6, [x0, #12]
   2b1e4:	ldr	w0, [sp, #152]
   2b1e8:	sub	w6, w0, w6
   2b1ec:	cmp	w6, #0x1, lsl #12
   2b1f0:	b.ls	2a4a0 <ZSTD_compress@@Base+0x1bc54>  // b.plast
   2b1f4:	b	29758 <ZSTD_compress@@Base+0x1af0c>
   2b1f8:	ldr	x0, [sp, #392]
   2b1fc:	ldr	w0, [x0, x22, lsl #2]
   2b200:	b	2b094 <ZSTD_compress@@Base+0x1c848>
   2b204:	ldr	w3, [sp, #400]
   2b208:	ldr	w1, [sp, #408]
   2b20c:	cmp	w2, w3
   2b210:	add	w1, w1, w0
   2b214:	ccmp	w1, #0x2, #0x0, cc  // cc = lo, ul, last
   2b218:	b.ls	2b264 <ZSTD_compress@@Base+0x1ca18>  // b.plast
   2b21c:	ldr	x1, [sp, #416]
   2b220:	sub	w0, w14, w0
   2b224:	ldr	x2, [sp, #232]
   2b228:	sub	x0, x0, x1
   2b22c:	ldr	x1, [sp, #232]
   2b230:	add	x1, x1, x0
   2b234:	ldr	w0, [x2, x0]
   2b238:	ldr	w2, [sp, #320]
   2b23c:	cmp	w2, w0, lsl #8
   2b240:	b.ne	2b264 <ZSTD_compress@@Base+0x1ca18>  // b.any
   2b244:	ldr	x3, [sp, #256]
   2b248:	mov	x2, x21
   2b24c:	ldr	x4, [sp, #280]
   2b250:	add	x1, x1, #0x3
   2b254:	mov	x0, x8
   2b258:	str	x8, [sp, #424]
   2b25c:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2b260:	b	2b0d8 <ZSTD_compress@@Base+0x1c88c>
   2b264:	mov	w0, #0x0                   	// #0
   2b268:	b	2b0e0 <ZSTD_compress@@Base+0x1c894>
   2b26c:	mov	x18, x0
   2b270:	mov	w13, #0x1                   	// #1
   2b274:	ldr	x0, [sp, #176]
   2b278:	add	w12, w14, #0x2
   2b27c:	ldr	x1, [sp, #328]
   2b280:	mov	x9, #0x0                   	// #0
   2b284:	mov	x7, #0x0                   	// #0
   2b288:	str	w15, [x0, x1]
   2b28c:	ldr	w0, [sp, #352]
   2b290:	sub	w22, w0, #0x1
   2b294:	cmn	w22, #0x1
   2b298:	b.eq	2b2a8 <ZSTD_compress@@Base+0x1ca5c>  // b.none
   2b29c:	ldr	w0, [sp, #304]
   2b2a0:	cmp	w0, w25
   2b2a4:	b.ls	2b420 <ZSTD_compress@@Base+0x1cbd4>  // b.plast
   2b2a8:	ldr	x0, [sp, #248]
   2b2ac:	str	wzr, [x0]
   2b2b0:	ldr	x0, [sp, #240]
   2b2b4:	str	wzr, [x0]
   2b2b8:	cbz	w22, 2b404 <ZSTD_compress@@Base+0x1cbb8>
   2b2bc:	ldr	w0, [x26]
   2b2c0:	mov	w1, #0x79b1                	// #31153
   2b2c4:	movk	w1, #0x9e37, lsl #16
   2b2c8:	ldr	w10, [sp, #312]
   2b2cc:	ldr	x6, [x24, #64]
   2b2d0:	and	x23, x23, #0xffffffff
   2b2d4:	mul	w0, w0, w1
   2b2d8:	ldr	w1, [sp, #360]
   2b2dc:	add	w8, w14, #0x2
   2b2e0:	mov	x5, #0x0                   	// #0
   2b2e4:	neg	w1, w1
   2b2e8:	mov	x27, #0x0                   	// #0
   2b2ec:	lsr	w0, w0, w1
   2b2f0:	ldr	x1, [x24, #48]
   2b2f4:	ldr	w15, [x1, w0, uxtw #2]
   2b2f8:	ldr	w0, [sp, #264]
   2b2fc:	cmp	w0, w15
   2b300:	b.cs	2b404 <ZSTD_compress@@Base+0x1cbb8>  // b.hs, b.nlast
   2b304:	ldr	w0, [sp, #272]
   2b308:	cmp	x27, x5
   2b30c:	ldr	x3, [sp, #256]
   2b310:	and	w24, w0, w15
   2b314:	ldr	x0, [sp, #232]
   2b318:	ubfiz	x24, x24, #3, #31
   2b31c:	ldr	x4, [sp, #280]
   2b320:	csel	x14, x27, x5, ls  // ls = plast
   2b324:	add	x7, x0, w15, uxtw
   2b328:	add	x9, x6, x24
   2b32c:	add	x1, x7, x14
   2b330:	mov	w25, w15
   2b334:	add	x0, x26, x14
   2b338:	mov	x2, x21
   2b33c:	str	x7, [sp, #176]
   2b340:	stp	x5, x9, [sp, #200]
   2b344:	str	x6, [sp, #224]
   2b348:	str	x10, [sp, #240]
   2b34c:	str	w8, [sp, #248]
   2b350:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2b354:	add	x14, x14, x0
   2b358:	ldr	w8, [sp, #248]
   2b35c:	add	x0, x25, x14
   2b360:	cmp	x0, x23
   2b364:	ldr	x7, [sp, #176]
   2b368:	ldp	x5, x9, [sp, #200]
   2b36c:	ldr	x6, [sp, #224]
   2b370:	ldr	x10, [sp, #240]
   2b374:	b.cc	2b384 <ZSTD_compress@@Base+0x1cb38>  // b.lo, b.ul, b.last
   2b378:	ldr	x0, [sp, #128]
   2b37c:	add	x25, x10, x25
   2b380:	add	x7, x0, x25
   2b384:	cmp	x14, x18
   2b388:	b.ls	2b3d8 <ZSTD_compress@@Base+0x1cb8c>  // b.plast
   2b38c:	ldr	w0, [sp, #312]
   2b390:	add	w1, w0, w15
   2b394:	ldr	w0, [sp, #192]
   2b398:	sub	w0, w0, w1
   2b39c:	cmp	x14, x0
   2b3a0:	b.ls	2b3ac <ZSTD_compress@@Base+0x1cb60>  // b.plast
   2b3a4:	add	w0, w1, w14
   2b3a8:	str	w0, [sp, #192]
   2b3ac:	ubfiz	x0, x13, #3, #32
   2b3b0:	sub	w1, w8, w1
   2b3b4:	add	x2, x28, x0
   2b3b8:	cmp	x14, #0x1, lsl #12
   2b3bc:	add	w13, w13, #0x1
   2b3c0:	str	w1, [x28, x0]
   2b3c4:	add	x1, x26, x14
   2b3c8:	str	w14, [x2, #4]
   2b3cc:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2b3d0:	b.eq	2b404 <ZSTD_compress@@Base+0x1cbb8>  // b.none
   2b3d4:	mov	x18, x14
   2b3d8:	ldr	w0, [sp, #376]
   2b3dc:	cmp	w0, w15
   2b3e0:	b.cs	2b404 <ZSTD_compress@@Base+0x1cbb8>  // b.hs, b.nlast
   2b3e4:	ldrb	w1, [x7, x14]
   2b3e8:	ldrb	w0, [x26, x14]
   2b3ec:	cmp	w1, w0
   2b3f0:	b.cs	2b530 <ZSTD_compress@@Base+0x1cce4>  // b.hs, b.nlast
   2b3f4:	ldr	w15, [x9, #4]
   2b3f8:	mov	x27, x14
   2b3fc:	subs	w22, w22, #0x1
   2b400:	b.ne	2b2f8 <ZSTD_compress@@Base+0x1caac>  // b.any
   2b404:	ldr	w0, [sp, #192]
   2b408:	sub	w0, w0, #0x8
   2b40c:	str	w0, [x19, #36]
   2b410:	cbnz	w13, 2b1a4 <ZSTD_compress@@Base+0x1c958>
   2b414:	ldr	w0, [sp, #152]
   2b418:	add	w0, w0, #0x1
   2b41c:	b	2a35c <ZSTD_compress@@Base+0x1bb10>
   2b420:	ldr	w0, [sp, #224]
   2b424:	cmp	x7, x9
   2b428:	csel	x15, x7, x9, ls  // ls = plast
   2b42c:	mov	x2, x21
   2b430:	and	w8, w0, w25
   2b434:	ldr	x0, [sp, #208]
   2b438:	ubfiz	x8, x8, #3, #31
   2b43c:	add	x10, x0, x8
   2b440:	ldr	x0, [sp, #128]
   2b444:	add	x11, x0, w25, uxtw
   2b448:	add	x0, x26, x15
   2b44c:	add	x1, x11, x15
   2b450:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2b454:	add	x0, x15, x0
   2b458:	cmp	x0, x18
   2b45c:	b.ls	2b4a8 <ZSTD_compress@@Base+0x1cc5c>  // b.plast
   2b460:	ldr	w1, [sp, #192]
   2b464:	mov	w3, w0
   2b468:	sub	w1, w1, w25
   2b46c:	cmp	x0, x1
   2b470:	b.ls	2b47c <ZSTD_compress@@Base+0x1cc30>  // b.plast
   2b474:	add	w1, w25, w0
   2b478:	str	w1, [sp, #192]
   2b47c:	ubfiz	x1, x13, #3, #32
   2b480:	sub	w4, w12, w25
   2b484:	add	x2, x28, x1
   2b488:	cmp	x0, #0x1, lsl #12
   2b48c:	add	w13, w13, #0x1
   2b490:	mov	x18, x0
   2b494:	str	w4, [x28, x1]
   2b498:	add	x1, x26, x0
   2b49c:	str	w3, [x2, #4]
   2b4a0:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2b4a4:	b.eq	2b510 <ZSTD_compress@@Base+0x1ccc4>  // b.none
   2b4a8:	ldrb	w2, [x11, x0]
   2b4ac:	ldrb	w1, [x26, x0]
   2b4b0:	cmp	w2, w1
   2b4b4:	b.cs	2b4e4 <ZSTD_compress@@Base+0x1cc98>  // b.hs, b.nlast
   2b4b8:	ldr	x1, [sp, #240]
   2b4bc:	str	w25, [x1]
   2b4c0:	ldr	w1, [sp, #384]
   2b4c4:	cmp	w25, w1
   2b4c8:	b.ls	2b518 <ZSTD_compress@@Base+0x1cccc>  // b.plast
   2b4cc:	ldr	w25, [x10, #4]
   2b4d0:	add	x1, x10, #0x4
   2b4d4:	str	x1, [sp, #240]
   2b4d8:	sub	w22, w22, #0x1
   2b4dc:	mov	x7, x0
   2b4e0:	b	2b294 <ZSTD_compress@@Base+0x1ca48>
   2b4e4:	ldr	x1, [sp, #248]
   2b4e8:	str	w25, [x1]
   2b4ec:	ldr	w1, [sp, #384]
   2b4f0:	cmp	w25, w1
   2b4f4:	b.ls	2b524 <ZSTD_compress@@Base+0x1ccd8>  // b.plast
   2b4f8:	ldr	x1, [sp, #208]
   2b4fc:	mov	x9, x0
   2b500:	mov	x0, x7
   2b504:	str	x10, [sp, #248]
   2b508:	ldr	w25, [x1, x8]
   2b50c:	b	2b4d8 <ZSTD_compress@@Base+0x1cc8c>
   2b510:	mov	w22, #0x0                   	// #0
   2b514:	b	2b2a8 <ZSTD_compress@@Base+0x1ca5c>
   2b518:	add	x0, sp, #0x1c0
   2b51c:	str	x0, [sp, #240]
   2b520:	b	2b2a8 <ZSTD_compress@@Base+0x1ca5c>
   2b524:	add	x0, sp, #0x1c0
   2b528:	str	x0, [sp, #248]
   2b52c:	b	2b2a8 <ZSTD_compress@@Base+0x1ca5c>
   2b530:	ldr	w15, [x6, x24]
   2b534:	mov	x5, x14
   2b538:	b	2b3fc <ZSTD_compress@@Base+0x1cbb0>
   2b53c:	ldr	x0, [sp, #392]
   2b540:	ldr	w0, [x0, x10, lsl #2]
   2b544:	b	2a8a4 <ZSTD_compress@@Base+0x1c058>
   2b548:	ldr	w3, [sp, #400]
   2b54c:	ldr	w1, [sp, #408]
   2b550:	cmp	w2, w3
   2b554:	add	w1, w1, w0
   2b558:	ccmp	w1, #0x2, #0x0, cc  // cc = lo, ul, last
   2b55c:	b.ls	2b5a8 <ZSTD_compress@@Base+0x1cd5c>  // b.plast
   2b560:	ldr	x1, [sp, #416]
   2b564:	sub	w0, w14, w0
   2b568:	ldr	x2, [sp, #240]
   2b56c:	sub	x0, x0, x1
   2b570:	ldr	x1, [sp, #240]
   2b574:	add	x1, x1, x0
   2b578:	ldr	w0, [x2, x0]
   2b57c:	ldr	w2, [sp, #280]
   2b580:	cmp	w2, w0
   2b584:	b.ne	2b5a8 <ZSTD_compress@@Base+0x1cd5c>  // b.any
   2b588:	ldr	x3, [sp, #256]
   2b58c:	mov	x2, x21
   2b590:	ldr	x4, [sp, #304]
   2b594:	add	x1, x1, #0x4
   2b598:	mov	x0, x25
   2b59c:	str	x10, [sp, #424]
   2b5a0:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2b5a4:	b	2a8e8 <ZSTD_compress@@Base+0x1c09c>
   2b5a8:	mov	w0, #0x0                   	// #0
   2b5ac:	b	2a8f0 <ZSTD_compress@@Base+0x1c0a4>
   2b5b0:	ldr	w0, [sp, #232]
   2b5b4:	cmp	x10, x12
   2b5b8:	csel	x25, x10, x12, ls  // ls = plast
   2b5bc:	mov	x2, x21
   2b5c0:	and	w11, w0, w23
   2b5c4:	ldr	x0, [sp, #224]
   2b5c8:	ubfiz	x11, x11, #3, #31
   2b5cc:	add	x7, x0, x11
   2b5d0:	ldr	x0, [sp, #128]
   2b5d4:	add	x8, x0, w23, uxtw
   2b5d8:	add	x0, x26, x25
   2b5dc:	add	x1, x8, x25
   2b5e0:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2b5e4:	add	x25, x25, x0
   2b5e8:	ldr	x0, [sp, #192]
   2b5ec:	cmp	x25, x0
   2b5f0:	b.ls	2b63c <ZSTD_compress@@Base+0x1cdf0>  // b.plast
   2b5f4:	ldr	w0, [sp, #208]
   2b5f8:	mov	w2, w25
   2b5fc:	sub	w0, w0, w23
   2b600:	cmp	x25, x0
   2b604:	b.ls	2b610 <ZSTD_compress@@Base+0x1cdc4>  // b.plast
   2b608:	add	w0, w23, w25
   2b60c:	str	w0, [sp, #208]
   2b610:	ubfiz	x0, x13, #3, #32
   2b614:	sub	w3, w27, w23
   2b618:	add	x1, x28, x0
   2b61c:	str	x25, [sp, #192]
   2b620:	cmp	x25, #0x1, lsl #12
   2b624:	add	w13, w13, #0x1
   2b628:	str	w3, [x28, x0]
   2b62c:	str	w2, [x1, #4]
   2b630:	add	x1, x26, x25
   2b634:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2b638:	b.eq	2b6a0 <ZSTD_compress@@Base+0x1ce54>  // b.none
   2b63c:	ldrb	w1, [x8, x25]
   2b640:	ldrb	w0, [x26, x25]
   2b644:	cmp	w1, w0
   2b648:	b.cs	2b678 <ZSTD_compress@@Base+0x1ce2c>  // b.hs, b.nlast
   2b64c:	ldr	x0, [sp, #248]
   2b650:	str	w23, [x0]
   2b654:	ldr	w0, [sp, #384]
   2b658:	cmp	w23, w0
   2b65c:	b.ls	2b6a8 <ZSTD_compress@@Base+0x1ce5c>  // b.plast
   2b660:	ldr	w23, [x7, #4]
   2b664:	add	x0, x7, #0x4
   2b668:	str	x0, [sp, #248]
   2b66c:	sub	w15, w15, #0x1
   2b670:	mov	x10, x25
   2b674:	b	2a964 <ZSTD_compress@@Base+0x1c118>
   2b678:	ldr	w0, [sp, #384]
   2b67c:	str	w23, [x18]
   2b680:	cmp	w23, w0
   2b684:	b.ls	2b6b4 <ZSTD_compress@@Base+0x1ce68>  // b.plast
   2b688:	ldr	x0, [sp, #224]
   2b68c:	mov	x12, x25
   2b690:	mov	x18, x7
   2b694:	mov	x25, x10
   2b698:	ldr	w23, [x0, x11]
   2b69c:	b	2b66c <ZSTD_compress@@Base+0x1ce20>
   2b6a0:	mov	w15, #0x0                   	// #0
   2b6a4:	b	2a978 <ZSTD_compress@@Base+0x1c12c>
   2b6a8:	add	x0, sp, #0x1c0
   2b6ac:	str	x0, [sp, #248]
   2b6b0:	b	2a978 <ZSTD_compress@@Base+0x1c12c>
   2b6b4:	add	x18, sp, #0x1c0
   2b6b8:	b	2a978 <ZSTD_compress@@Base+0x1c12c>
   2b6bc:	ldr	w18, [x5, x22]
   2b6c0:	mov	x25, x27
   2b6c4:	b	2aac4 <ZSTD_compress@@Base+0x1c278>
   2b6c8:	mov	w2, w27
   2b6cc:	mov	x0, x26
   2b6d0:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   2b6d4:	lsl	x0, x0, #2
   2b6d8:	str	x0, [sp, #312]
   2b6dc:	mov	w8, #0x1                   	// #1
   2b6e0:	ldr	x0, [sp, #176]
   2b6e4:	add	x7, x19, #0xb8
   2b6e8:	ldr	x1, [sp, #312]
   2b6ec:	ldr	w22, [x23, #4]
   2b6f0:	ldr	w9, [x19, #24]
   2b6f4:	ldr	w25, [x0, x1]
   2b6f8:	sub	w22, w22, #0x1
   2b6fc:	ldr	x0, [x19, #64]
   2b700:	str	x0, [sp, #224]
   2b704:	ldr	x0, [sp, #128]
   2b708:	lsl	w22, w8, w22
   2b70c:	ldr	w2, [x19, #184]
   2b710:	sub	w22, w22, #0x1
   2b714:	sub	w10, w9, #0x1
   2b718:	cmp	w22, w15
   2b71c:	add	x0, x0, w9, uxtw
   2b720:	str	x0, [sp, #272]
   2b724:	sub	w0, w15, w22
   2b728:	mov	w1, w15
   2b72c:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   2b730:	str	w0, [sp, #304]
   2b734:	mov	x0, x19
   2b738:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   2b73c:	cmp	w0, #0x0
   2b740:	and	w18, w22, w15
   2b744:	csel	w1, w0, w8, ne  // ne = any
   2b748:	str	w1, [sp, #384]
   2b74c:	ldr	x1, [sp, #224]
   2b750:	ubfiz	x18, x18, #3, #31
   2b754:	ldr	x23, [x19, #176]
   2b758:	add	x1, x1, x18
   2b75c:	str	x1, [sp, #240]
   2b760:	add	x18, x18, #0x4
   2b764:	ldr	x1, [sp, #224]
   2b768:	mov	w13, #0x0                   	// #0
   2b76c:	add	x18, x1, x18
   2b770:	add	w1, w15, #0x9
   2b774:	str	w1, [sp, #208]
   2b778:	ldr	w1, [x7, #12]
   2b77c:	lsl	w1, w8, w1
   2b780:	str	w1, [sp, #320]
   2b784:	ldr	x1, [x23, #8]
   2b788:	str	x1, [sp, #232]
   2b78c:	ldr	x1, [x23]
   2b790:	str	x1, [sp, #248]
   2b794:	ldr	x2, [sp, #232]
   2b798:	sub	x1, x1, x2
   2b79c:	str	x1, [sp, #192]
   2b7a0:	ldr	w1, [x23, #28]
   2b7a4:	str	w1, [sp, #256]
   2b7a8:	ldr	w1, [sp, #192]
   2b7ac:	ldr	w2, [x23, #192]
   2b7b0:	sub	w1, w0, w1
   2b7b4:	str	w1, [sp, #280]
   2b7b8:	ldr	w1, [x23, #188]
   2b7bc:	str	w2, [sp, #328]
   2b7c0:	sub	w1, w1, #0x1
   2b7c4:	lsl	w8, w8, w1
   2b7c8:	sub	w1, w8, #0x1
   2b7cc:	str	w1, [sp, #264]
   2b7d0:	ldr	w1, [sp, #192]
   2b7d4:	ldr	w2, [sp, #256]
   2b7d8:	ldr	w3, [sp, #264]
   2b7dc:	sub	w1, w1, w2
   2b7e0:	ldr	w2, [sp, #192]
   2b7e4:	cmp	w3, w1
   2b7e8:	ldrb	w8, [sp, #136]
   2b7ec:	sub	w2, w2, w3
   2b7f0:	ldr	w3, [sp, #256]
   2b7f4:	csel	w2, w2, w3, cc  // cc = lo, ul, last
   2b7f8:	str	w2, [sp, #360]
   2b7fc:	ldr	w2, [sp, #184]
   2b800:	mov	w3, #0x4                   	// #4
   2b804:	sub	w24, w2, #0x1
   2b808:	ldr	w2, [sp, #136]
   2b80c:	cmp	w2, #0x0
   2b810:	mov	w2, #0x3                   	// #3
   2b814:	csel	w2, w3, w2, ne  // ne = any
   2b818:	str	w2, [sp, #352]
   2b81c:	ldr	x2, [sp, #216]
   2b820:	str	x2, [sp, #376]
   2b824:	sub	w2, w15, w9
   2b828:	str	w2, [sp, #368]
   2b82c:	sub	w2, w15, w0
   2b830:	add	x9, x26, #0x4
   2b834:	add	w1, w2, w1
   2b838:	str	w1, [sp, #388]
   2b83c:	sub	w1, w10, w15
   2b840:	str	w1, [sp, #392]
   2b844:	ldr	w1, [sp, #192]
   2b848:	sub	w0, w0, w1
   2b84c:	str	x0, [sp, #400]
   2b850:	mov	w27, w8
   2b854:	cmp	w8, #0x3
   2b858:	b.ne	2ba8c <ZSTD_compress@@Base+0x1d240>  // b.any
   2b85c:	ldr	x0, [sp, #120]
   2b860:	ldr	w0, [x0, #16]
   2b864:	sub	w0, w0, #0x1
   2b868:	ldr	w1, [sp, #368]
   2b86c:	sub	w2, w0, #0x1
   2b870:	cmp	w2, w1
   2b874:	b.cs	2ba98 <ZSTD_compress@@Base+0x1d24c>  // b.hs, b.nlast
   2b878:	mov	w1, w0
   2b87c:	sub	x0, x26, w0, uxtw
   2b880:	ldr	w2, [x0]
   2b884:	ldr	w0, [x26]
   2b888:	cmp	w2, w0
   2b88c:	b.ne	2baf8 <ZSTD_compress@@Base+0x1d2ac>  // b.any
   2b890:	mov	x0, #0x4                   	// #4
   2b894:	sub	x1, x0, x1
   2b898:	mov	x2, x21
   2b89c:	add	x1, x26, x1
   2b8a0:	mov	x0, x9
   2b8a4:	stp	x9, x8, [sp, #408]
   2b8a8:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2b8ac:	ldp	x9, x8, [sp, #408]
   2b8b0:	add	w0, w0, #0x4
   2b8b4:	mov	w1, w0
   2b8b8:	cmp	x24, w0, uxtw
   2b8bc:	b.cs	2b8f4 <ZSTD_compress@@Base+0x1d0a8>  // b.hs, b.nlast
   2b8c0:	ubfiz	x2, x13, #3, #32
   2b8c4:	ldr	w4, [sp, #136]
   2b8c8:	add	x3, x28, x2
   2b8cc:	add	w13, w13, #0x1
   2b8d0:	sub	w27, w27, w4
   2b8d4:	str	w27, [x28, x2]
   2b8d8:	add	x2, x26, x1
   2b8dc:	cmp	x2, x21
   2b8e0:	ldr	w2, [sp, #200]
   2b8e4:	str	w0, [x3, #4]
   2b8e8:	ccmp	w2, w0, #0x0, ne  // ne = any
   2b8ec:	b.cc	2b410 <ZSTD_compress@@Base+0x1cbc4>  // b.lo, b.ul, b.last
   2b8f0:	mov	x24, x1
   2b8f4:	ldr	w0, [sp, #352]
   2b8f8:	add	x8, x8, #0x1
   2b8fc:	cmp	w0, w8
   2b900:	b.hi	2b850 <ZSTD_compress@@Base+0x1d004>  // b.pmore
   2b904:	ldr	x0, [sp, #176]
   2b908:	add	w27, w14, #0x2
   2b90c:	ldr	x1, [sp, #312]
   2b910:	mov	x10, #0x0                   	// #0
   2b914:	mov	x8, #0x0                   	// #0
   2b918:	str	w15, [x0, x1]
   2b91c:	ldr	w0, [sp, #320]
   2b920:	sub	w15, w0, #0x1
   2b924:	cmn	w15, #0x1
   2b928:	b.eq	2b938 <ZSTD_compress@@Base+0x1d0ec>  // b.none
   2b92c:	ldr	w0, [sp, #384]
   2b930:	cmp	w0, w25
   2b934:	b.ls	2bb00 <ZSTD_compress@@Base+0x1d2b4>  // b.plast
   2b938:	ldr	x0, [sp, #240]
   2b93c:	str	wzr, [x18]
   2b940:	str	wzr, [x0]
   2b944:	cbz	w15, 2aacc <ZSTD_compress@@Base+0x1c280>
   2b948:	ldr	w1, [sp, #328]
   2b94c:	mov	x0, x26
   2b950:	mov	w2, #0x5                   	// #5
   2b954:	mov	x27, #0x0                   	// #0
   2b958:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   2b95c:	add	w8, w14, #0x2
   2b960:	ldr	x1, [x23, #48]
   2b964:	mov	x5, #0x0                   	// #0
   2b968:	ldr	w10, [sp, #280]
   2b96c:	ldr	x6, [x23, #64]
   2b970:	ldr	w18, [x1, x0, lsl #2]
   2b974:	ldr	x0, [sp, #192]
   2b978:	and	x25, x0, #0xffffffff
   2b97c:	ldr	w0, [sp, #256]
   2b980:	cmp	w0, w18
   2b984:	b.cs	2aacc <ZSTD_compress@@Base+0x1c280>  // b.hs, b.nlast
   2b988:	ldr	w0, [sp, #264]
   2b98c:	cmp	x5, x27
   2b990:	ldr	x3, [sp, #248]
   2b994:	and	w22, w0, w18
   2b998:	ldr	x0, [sp, #232]
   2b99c:	ubfiz	x22, x22, #3, #31
   2b9a0:	ldr	x4, [sp, #272]
   2b9a4:	csel	x14, x5, x27, ls  // ls = plast
   2b9a8:	add	x7, x0, w18, uxtw
   2b9ac:	add	x9, x6, x22
   2b9b0:	add	x1, x7, x14
   2b9b4:	mov	w23, w18
   2b9b8:	add	x0, x26, x14
   2b9bc:	mov	x2, x21
   2b9c0:	str	x7, [sp, #176]
   2b9c4:	stp	x5, x9, [sp, #192]
   2b9c8:	str	x6, [sp, #224]
   2b9cc:	str	x10, [sp, #240]
   2b9d0:	str	w8, [sp, #304]
   2b9d4:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2b9d8:	add	x14, x14, x0
   2b9dc:	ldr	w8, [sp, #304]
   2b9e0:	add	x0, x23, x14
   2b9e4:	cmp	x0, x25
   2b9e8:	ldr	x7, [sp, #176]
   2b9ec:	ldp	x5, x9, [sp, #192]
   2b9f0:	ldr	x6, [sp, #224]
   2b9f4:	ldr	x10, [sp, #240]
   2b9f8:	b.cc	2ba08 <ZSTD_compress@@Base+0x1d1bc>  // b.lo, b.ul, b.last
   2b9fc:	ldr	x0, [sp, #128]
   2ba00:	add	x23, x10, x23
   2ba04:	add	x7, x0, x23
   2ba08:	cmp	x14, x24
   2ba0c:	b.ls	2ba5c <ZSTD_compress@@Base+0x1d210>  // b.plast
   2ba10:	ldr	w0, [sp, #280]
   2ba14:	add	w1, w0, w18
   2ba18:	ldr	w0, [sp, #208]
   2ba1c:	sub	w0, w0, w1
   2ba20:	cmp	x14, x0
   2ba24:	b.ls	2ba30 <ZSTD_compress@@Base+0x1d1e4>  // b.plast
   2ba28:	add	w0, w1, w14
   2ba2c:	str	w0, [sp, #208]
   2ba30:	ubfiz	x0, x13, #3, #32
   2ba34:	sub	w1, w8, w1
   2ba38:	add	x2, x28, x0
   2ba3c:	cmp	x14, #0x1, lsl #12
   2ba40:	add	w13, w13, #0x1
   2ba44:	str	w1, [x28, x0]
   2ba48:	add	x1, x26, x14
   2ba4c:	str	w14, [x2, #4]
   2ba50:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2ba54:	b.eq	2aacc <ZSTD_compress@@Base+0x1c280>  // b.none
   2ba58:	mov	x24, x14
   2ba5c:	ldr	w0, [sp, #360]
   2ba60:	cmp	w0, w18
   2ba64:	b.cs	2aacc <ZSTD_compress@@Base+0x1c280>  // b.hs, b.nlast
   2ba68:	ldrb	w1, [x7, x14]
   2ba6c:	ldrb	w0, [x26, x14]
   2ba70:	cmp	w1, w0
   2ba74:	b.cs	2bc04 <ZSTD_compress@@Base+0x1d3b8>  // b.hs, b.nlast
   2ba78:	ldr	w18, [x9, #4]
   2ba7c:	mov	x5, x14
   2ba80:	subs	w15, w15, #0x1
   2ba84:	b.ne	2b97c <ZSTD_compress@@Base+0x1d130>  // b.any
   2ba88:	b	2aacc <ZSTD_compress@@Base+0x1c280>
   2ba8c:	ldr	x0, [sp, #376]
   2ba90:	ldr	w0, [x0, x8, lsl #2]
   2ba94:	b	2b868 <ZSTD_compress@@Base+0x1d01c>
   2ba98:	ldr	w3, [sp, #388]
   2ba9c:	ldr	w1, [sp, #392]
   2baa0:	cmp	w2, w3
   2baa4:	add	w1, w1, w0
   2baa8:	ccmp	w1, #0x2, #0x0, cc  // cc = lo, ul, last
   2baac:	b.ls	2baf8 <ZSTD_compress@@Base+0x1d2ac>  // b.plast
   2bab0:	ldr	x1, [sp, #400]
   2bab4:	sub	w0, w14, w0
   2bab8:	ldr	x2, [sp, #232]
   2babc:	sub	x0, x0, x1
   2bac0:	ldr	x1, [sp, #232]
   2bac4:	ldr	w2, [x2, x0]
   2bac8:	add	x1, x1, x0
   2bacc:	ldr	w0, [x26]
   2bad0:	cmp	w2, w0
   2bad4:	b.ne	2baf8 <ZSTD_compress@@Base+0x1d2ac>  // b.any
   2bad8:	ldr	x3, [sp, #248]
   2badc:	mov	x2, x21
   2bae0:	ldr	x4, [sp, #272]
   2bae4:	add	x1, x1, #0x4
   2bae8:	mov	x0, x9
   2baec:	stp	x9, x8, [sp, #408]
   2baf0:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2baf4:	b	2b8ac <ZSTD_compress@@Base+0x1d060>
   2baf8:	mov	w0, #0x0                   	// #0
   2bafc:	b	2b8b4 <ZSTD_compress@@Base+0x1d068>
   2bb00:	and	w9, w22, w25
   2bb04:	cmp	x8, x10
   2bb08:	ldr	x0, [sp, #224]
   2bb0c:	ubfiz	x9, x9, #3, #31
   2bb10:	csel	x12, x8, x10, ls  // ls = plast
   2bb14:	mov	x2, x21
   2bb18:	add	x11, x0, x9
   2bb1c:	ldr	x0, [sp, #128]
   2bb20:	add	x7, x0, w25, uxtw
   2bb24:	add	x0, x26, x12
   2bb28:	add	x1, x7, x12
   2bb2c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2bb30:	add	x12, x12, x0
   2bb34:	cmp	x12, x24
   2bb38:	b.ls	2bb84 <ZSTD_compress@@Base+0x1d338>  // b.plast
   2bb3c:	ldr	w0, [sp, #208]
   2bb40:	mov	w2, w12
   2bb44:	sub	w0, w0, w25
   2bb48:	cmp	x12, x0
   2bb4c:	b.ls	2bb58 <ZSTD_compress@@Base+0x1d30c>  // b.plast
   2bb50:	add	w0, w25, w12
   2bb54:	str	w0, [sp, #208]
   2bb58:	ubfiz	x0, x13, #3, #32
   2bb5c:	sub	w3, w27, w25
   2bb60:	add	x1, x28, x0
   2bb64:	cmp	x12, #0x1, lsl #12
   2bb68:	add	w13, w13, #0x1
   2bb6c:	mov	x24, x12
   2bb70:	str	w3, [x28, x0]
   2bb74:	str	w2, [x1, #4]
   2bb78:	add	x1, x26, x12
   2bb7c:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2bb80:	b.eq	2bbe8 <ZSTD_compress@@Base+0x1d39c>  // b.none
   2bb84:	ldrb	w1, [x7, x12]
   2bb88:	ldrb	w0, [x26, x12]
   2bb8c:	cmp	w1, w0
   2bb90:	b.cs	2bbc0 <ZSTD_compress@@Base+0x1d374>  // b.hs, b.nlast
   2bb94:	ldr	x0, [sp, #240]
   2bb98:	str	w25, [x0]
   2bb9c:	ldr	w0, [sp, #304]
   2bba0:	cmp	w25, w0
   2bba4:	b.ls	2bbf0 <ZSTD_compress@@Base+0x1d3a4>  // b.plast
   2bba8:	ldr	w25, [x11, #4]
   2bbac:	add	x0, x11, #0x4
   2bbb0:	str	x0, [sp, #240]
   2bbb4:	sub	w15, w15, #0x1
   2bbb8:	mov	x8, x12
   2bbbc:	b	2b924 <ZSTD_compress@@Base+0x1d0d8>
   2bbc0:	ldr	w0, [sp, #304]
   2bbc4:	str	w25, [x18]
   2bbc8:	cmp	w25, w0
   2bbcc:	b.ls	2bbfc <ZSTD_compress@@Base+0x1d3b0>  // b.plast
   2bbd0:	ldr	x0, [sp, #224]
   2bbd4:	mov	x10, x12
   2bbd8:	mov	x18, x11
   2bbdc:	mov	x12, x8
   2bbe0:	ldr	w25, [x0, x9]
   2bbe4:	b	2bbb4 <ZSTD_compress@@Base+0x1d368>
   2bbe8:	mov	w15, #0x0                   	// #0
   2bbec:	b	2b938 <ZSTD_compress@@Base+0x1d0ec>
   2bbf0:	add	x0, sp, #0x1c0
   2bbf4:	str	x0, [sp, #240]
   2bbf8:	b	2b938 <ZSTD_compress@@Base+0x1d0ec>
   2bbfc:	add	x18, sp, #0x1c0
   2bc00:	b	2b938 <ZSTD_compress@@Base+0x1d0ec>
   2bc04:	ldr	w18, [x6, x22]
   2bc08:	mov	x27, x14
   2bc0c:	b	2ba80 <ZSTD_compress@@Base+0x1d234>
   2bc10:	ldr	x0, [sp, #376]
   2bc14:	ldr	w0, [x0, x8, lsl #2]
   2bc18:	b	2acb8 <ZSTD_compress@@Base+0x1c46c>
   2bc1c:	ldr	w3, [sp, #388]
   2bc20:	ldr	w1, [sp, #392]
   2bc24:	cmp	w2, w3
   2bc28:	add	w1, w1, w0
   2bc2c:	ccmp	w1, #0x2, #0x0, cc  // cc = lo, ul, last
   2bc30:	b.ls	2bc7c <ZSTD_compress@@Base+0x1d430>  // b.plast
   2bc34:	ldr	x1, [sp, #400]
   2bc38:	sub	w0, w14, w0
   2bc3c:	ldr	x2, [sp, #232]
   2bc40:	sub	x0, x0, x1
   2bc44:	ldr	x1, [sp, #232]
   2bc48:	ldr	w2, [x2, x0]
   2bc4c:	add	x1, x1, x0
   2bc50:	ldr	w0, [x26]
   2bc54:	cmp	w2, w0
   2bc58:	b.ne	2bc7c <ZSTD_compress@@Base+0x1d430>  // b.any
   2bc5c:	ldr	x3, [sp, #248]
   2bc60:	mov	x2, x21
   2bc64:	ldr	x4, [sp, #272]
   2bc68:	add	x1, x1, #0x4
   2bc6c:	mov	x0, x9
   2bc70:	stp	x9, x8, [sp, #408]
   2bc74:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2bc78:	b	2acfc <ZSTD_compress@@Base+0x1c4b0>
   2bc7c:	mov	w0, #0x0                   	// #0
   2bc80:	b	2ad04 <ZSTD_compress@@Base+0x1c4b8>
   2bc84:	and	w9, w22, w25
   2bc88:	cmp	x8, x10
   2bc8c:	ldr	x0, [sp, #224]
   2bc90:	ubfiz	x9, x9, #3, #31
   2bc94:	csel	x12, x8, x10, ls  // ls = plast
   2bc98:	mov	x2, x21
   2bc9c:	add	x11, x0, x9
   2bca0:	ldr	x0, [sp, #128]
   2bca4:	add	x7, x0, w25, uxtw
   2bca8:	add	x0, x26, x12
   2bcac:	add	x1, x7, x12
   2bcb0:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2bcb4:	add	x12, x12, x0
   2bcb8:	cmp	x12, x24
   2bcbc:	b.ls	2bd08 <ZSTD_compress@@Base+0x1d4bc>  // b.plast
   2bcc0:	ldr	w0, [sp, #208]
   2bcc4:	mov	w2, w12
   2bcc8:	sub	w0, w0, w25
   2bccc:	cmp	x12, x0
   2bcd0:	b.ls	2bcdc <ZSTD_compress@@Base+0x1d490>  // b.plast
   2bcd4:	add	w0, w25, w12
   2bcd8:	str	w0, [sp, #208]
   2bcdc:	ubfiz	x0, x13, #3, #32
   2bce0:	sub	w3, w27, w25
   2bce4:	add	x1, x28, x0
   2bce8:	cmp	x12, #0x1, lsl #12
   2bcec:	add	w13, w13, #0x1
   2bcf0:	mov	x24, x12
   2bcf4:	str	w3, [x28, x0]
   2bcf8:	str	w2, [x1, #4]
   2bcfc:	add	x1, x26, x12
   2bd00:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2bd04:	b.eq	2bd6c <ZSTD_compress@@Base+0x1d520>  // b.none
   2bd08:	ldrb	w1, [x7, x12]
   2bd0c:	ldrb	w0, [x26, x12]
   2bd10:	cmp	w1, w0
   2bd14:	b.cs	2bd44 <ZSTD_compress@@Base+0x1d4f8>  // b.hs, b.nlast
   2bd18:	ldr	x0, [sp, #240]
   2bd1c:	str	w25, [x0]
   2bd20:	ldr	w0, [sp, #304]
   2bd24:	cmp	w25, w0
   2bd28:	b.ls	2bd74 <ZSTD_compress@@Base+0x1d528>  // b.plast
   2bd2c:	ldr	w25, [x11, #4]
   2bd30:	add	x0, x11, #0x4
   2bd34:	str	x0, [sp, #240]
   2bd38:	sub	w15, w15, #0x1
   2bd3c:	mov	x8, x12
   2bd40:	b	2ad74 <ZSTD_compress@@Base+0x1c528>
   2bd44:	ldr	w0, [sp, #304]
   2bd48:	str	w25, [x18]
   2bd4c:	cmp	w25, w0
   2bd50:	b.ls	2bd80 <ZSTD_compress@@Base+0x1d534>  // b.plast
   2bd54:	ldr	x0, [sp, #224]
   2bd58:	mov	x10, x12
   2bd5c:	mov	x18, x11
   2bd60:	mov	x12, x8
   2bd64:	ldr	w25, [x0, x9]
   2bd68:	b	2bd38 <ZSTD_compress@@Base+0x1d4ec>
   2bd6c:	mov	w15, #0x0                   	// #0
   2bd70:	b	2ad88 <ZSTD_compress@@Base+0x1c53c>
   2bd74:	add	x0, sp, #0x1c0
   2bd78:	str	x0, [sp, #240]
   2bd7c:	b	2ad88 <ZSTD_compress@@Base+0x1c53c>
   2bd80:	add	x18, sp, #0x1c0
   2bd84:	b	2ad88 <ZSTD_compress@@Base+0x1c53c>
   2bd88:	ldr	w18, [x6, x22]
   2bd8c:	mov	x5, x25
   2bd90:	b	2aed0 <ZSTD_compress@@Base+0x1c684>
   2bd94:	mov	w6, #0x0                   	// #0
   2bd98:	b	2b1e4 <ZSTD_compress@@Base+0x1c998>
   2bd9c:	mov	x7, x28
   2bda0:	mov	w5, #0x0                   	// #0
   2bda4:	ldr	w9, [x7]
   2bda8:	ldr	w2, [sp, #136]
   2bdac:	ldr	x0, [sp, #216]
   2bdb0:	mov	w1, w9
   2bdb4:	bl	205a8 <ZSTD_compress@@Base+0x11d5c>
   2bdb8:	str	w0, [sp, #448]
   2bdbc:	lsr	x0, x0, #32
   2bdc0:	str	w0, [sp, #452]
   2bdc4:	str	w1, [sp, #456]
   2bdc8:	ldr	w4, [x7, #4]
   2bdcc:	cbz	w5, 2be3c <ZSTD_compress@@Base+0x1d5f0>
   2bdd0:	sub	w0, w5, #0x1
   2bdd4:	add	x0, x28, x0, lsl #3
   2bdd8:	ldr	w8, [x0, #4]
   2bddc:	add	w8, w8, #0x1
   2bde0:	add	w2, w9, #0x1
   2bde4:	ldr	w0, [sp, #152]
   2bde8:	clz	w2, w2
   2bdec:	ldr	w1, [sp, #344]
   2bdf0:	eor	w2, w2, #0x1f
   2bdf4:	add	w6, w0, w4
   2bdf8:	sub	w10, w2, #0x13
   2bdfc:	ldr	w0, [sp, #300]
   2be00:	add	w11, w2, #0x10
   2be04:	sbfiz	x14, x2, #2, #32
   2be08:	lsl	w15, w2, #8
   2be0c:	lsl	w10, w10, #9
   2be10:	lsl	w11, w11, #8
   2be14:	add	w18, w0, w1
   2be18:	mov	w12, #0x1c                  	// #28
   2be1c:	mov	w22, #0x40000000            	// #1073741824
   2be20:	cmp	w4, w8
   2be24:	b.cs	2be44 <ZSTD_compress@@Base+0x1d5f8>  // b.hs, b.nlast
   2be28:	add	w5, w5, #0x1
   2be2c:	add	x7, x7, #0x8
   2be30:	cmp	w13, w5
   2be34:	b.ne	2bda4 <ZSTD_compress@@Base+0x1d558>  // b.any
   2be38:	b	2b414 <ZSTD_compress@@Base+0x1cbc8>
   2be3c:	ldr	w8, [sp, #184]
   2be40:	b	2bde0 <ZSTD_compress@@Base+0x1d594>
   2be44:	ldr	w0, [x19, #152]
   2be48:	add	x23, x19, #0x48
   2be4c:	sub	w1, w4, #0x3
   2be50:	cmp	w0, #0x1
   2be54:	b.ne	2bec0 <ZSTD_compress@@Base+0x1d674>  // b.any
   2be58:	mov	w0, w1
   2be5c:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   2be60:	add	w0, w11, w0
   2be64:	ldr	x1, [sp, #96]
   2be68:	umull	x16, w6, w12
   2be6c:	ldr	w3, [sp, #160]
   2be70:	add	w0, w18, w0
   2be74:	add	x1, x1, x16
   2be78:	cmp	w3, w6
   2be7c:	b.cc	2bf1c <ZSTD_compress@@Base+0x1d6d0>  // b.lo, b.ul, b.last
   2be80:	ldr	x3, [sp, #96]
   2be84:	ldr	w3, [x3, x16]
   2be88:	cmp	w0, w3
   2be8c:	b.ge	2be28 <ZSTD_compress@@Base+0x1d5dc>  // b.tcont
   2be90:	ldr	w3, [sp, #188]
   2be94:	sub	w6, w6, #0x1
   2be98:	str	w3, [x1, #12]
   2be9c:	ldr	x3, [sp, #96]
   2bea0:	stp	w9, w4, [x1, #4]
   2bea4:	sub	w4, w4, #0x1
   2bea8:	str	w0, [x3, x16]
   2beac:	ldr	x0, [sp, #448]
   2beb0:	str	x0, [x1, #16]
   2beb4:	ldr	w0, [sp, #456]
   2beb8:	str	w0, [x1, #24]
   2bebc:	b	2be20 <ZSTD_compress@@Base+0x1d5d4>
   2bec0:	ldr	x0, [x23, #24]
   2bec4:	ldr	w0, [x0, x14]
   2bec8:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   2becc:	cmp	w2, #0x13
   2bed0:	ldr	w3, [x23, #76]
   2bed4:	add	w3, w15, w3
   2bed8:	sub	w3, w3, w0
   2bedc:	b.le	2bee4 <ZSTD_compress@@Base+0x1d698>
   2bee0:	add	w3, w3, w10
   2bee4:	mov	w0, w1
   2bee8:	bl	2043c <ZSTD_compress@@Base+0x11bf0>
   2beec:	ldr	x16, [x19, #88]
   2bef0:	mov	w23, w0
   2bef4:	ldr	w0, [x16, w0, uxtw #2]
   2bef8:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   2befc:	sub	w0, w3, w0
   2bf00:	ldr	w1, [x19, #144]
   2bf04:	add	w1, w1, #0x33
   2bf08:	add	w1, w1, w0
   2bf0c:	ldr	x0, [sp, #336]
   2bf10:	ldr	w0, [x0, x23, lsl #2]
   2bf14:	add	w0, w1, w0, lsl #8
   2bf18:	b	2be64 <ZSTD_compress@@Base+0x1d618>
   2bf1c:	ldr	w3, [sp, #160]
   2bf20:	ldr	x17, [sp, #96]
   2bf24:	add	w3, w3, #0x1
   2bf28:	umaddl	x3, w3, w12, x17
   2bf2c:	ldr	w17, [sp, #160]
   2bf30:	str	w22, [x3], #28
   2bf34:	add	w17, w17, #0x1
   2bf38:	str	w17, [sp, #160]
   2bf3c:	cmp	w17, w6
   2bf40:	b.ne	2bf2c <ZSTD_compress@@Base+0x1d6e0>  // b.any
   2bf44:	b	2be90 <ZSTD_compress@@Base+0x1d644>
   2bf48:	sub	w6, w6, w4
   2bf4c:	b	2a4dc <ZSTD_compress@@Base+0x1bc90>
   2bf50:	ldr	x0, [sp, #96]
   2bf54:	ldr	x1, [sp, #112]
   2bf58:	umaddl	x0, w10, w14, x0
   2bf5c:	ldp	w22, w9, [x0, #8]
   2bf60:	mov	w23, w9
   2bf64:	add	x20, x1, w9, uxtw
   2bf68:	cbz	w22, 2c0c0 <ZSTD_compress@@Base+0x1d874>
   2bf6c:	ldr	w11, [x0, #4]
   2bf70:	cmp	w11, #0x2
   2bf74:	b.ls	2c0c8 <ZSTD_compress@@Base+0x1d87c>  // b.plast
   2bf78:	ldr	x0, [sp, #104]
   2bf7c:	ldr	x1, [sp, #104]
   2bf80:	ldr	w0, [x0, #4]
   2bf84:	str	w0, [x1, #8]
   2bf88:	ldr	w0, [x1]
   2bf8c:	str	w0, [x1, #4]
   2bf90:	sub	w0, w11, #0x2
   2bf94:	str	w0, [x1]
   2bf98:	ldr	x2, [sp, #112]
   2bf9c:	mov	w4, w22
   2bfa0:	ldr	x0, [sp, #168]
   2bfa4:	mov	w3, w11
   2bfa8:	mov	w1, w9
   2bfac:	bl	209b4 <ZSTD_compress@@Base+0x12168>
   2bfb0:	cmp	x12, x20
   2bfb4:	sub	w5, w22, #0x3
   2bfb8:	b.cc	2c118 <ZSTD_compress@@Base+0x1d8cc>  // b.lo, b.ul, b.last
   2bfbc:	ldr	x0, [sp, #144]
   2bfc0:	cmp	x23, #0x10
   2bfc4:	ldr	x2, [x0, #24]
   2bfc8:	ldr	x0, [sp, #112]
   2bfcc:	ldp	x0, x1, [x0]
   2bfd0:	stp	x0, x1, [x2]
   2bfd4:	b.ls	2c030 <ZSTD_compress@@Base+0x1d7e4>  // b.plast
   2bfd8:	ldr	x0, [sp, #144]
   2bfdc:	ldr	x3, [x0, #24]
   2bfe0:	ldr	x0, [sp, #112]
   2bfe4:	add	x2, x3, x23
   2bfe8:	add	x3, x3, #0x30
   2bfec:	ldp	x0, x1, [x0, #16]
   2bff0:	stp	x0, x1, [x3, #-32]
   2bff4:	ldr	x0, [sp, #112]
   2bff8:	ldp	x0, x1, [x0, #32]
   2bffc:	stp	x0, x1, [x3, #-16]
   2c000:	cmp	x2, x3
   2c004:	b.ls	2c030 <ZSTD_compress@@Base+0x1d7e4>  // b.plast
   2c008:	ldr	x0, [sp, #112]
   2c00c:	add	x4, x0, #0x30
   2c010:	ldp	x0, x1, [x4]
   2c014:	stp	x0, x1, [x3]
   2c018:	add	x3, x3, #0x20
   2c01c:	ldp	x0, x1, [x4, #16]
   2c020:	stp	x0, x1, [x3, #-16]
   2c024:	add	x4, x4, #0x20
   2c028:	cmp	x2, x3
   2c02c:	b.hi	2c010 <ZSTD_compress@@Base+0x1d7c4>  // b.pmore
   2c030:	ldr	x0, [sp, #144]
   2c034:	cmp	x23, x13
   2c038:	ldr	x1, [sp, #144]
   2c03c:	ldr	x0, [x0, #24]
   2c040:	add	x0, x0, x23
   2c044:	str	x0, [x1, #24]
   2c048:	ldr	x0, [x1, #8]
   2c04c:	b.ls	2c06c <ZSTD_compress@@Base+0x1d820>  // b.plast
   2c050:	ldr	x2, [sp, #144]
   2c054:	mov	w1, #0x1                   	// #1
   2c058:	str	w1, [x2, #72]
   2c05c:	ldr	x1, [x2]
   2c060:	sub	x1, x0, x1
   2c064:	asr	x1, x1, #3
   2c068:	str	w1, [x2, #76]
   2c06c:	add	w11, w11, #0x1
   2c070:	str	w11, [x0]
   2c074:	strh	w9, [x0, #4]
   2c078:	cmp	w5, w15
   2c07c:	b.ls	2c09c <ZSTD_compress@@Base+0x1d850>  // b.plast
   2c080:	ldr	x1, [sp, #144]
   2c084:	ldr	x2, [sp, #144]
   2c088:	str	w18, [x1, #72]
   2c08c:	ldr	x1, [x1]
   2c090:	sub	x1, x0, x1
   2c094:	asr	x1, x1, #3
   2c098:	str	w1, [x2, #76]
   2c09c:	ldr	x1, [sp, #144]
   2c0a0:	add	x0, x0, #0x8
   2c0a4:	sturh	w5, [x0, #-2]
   2c0a8:	add	w9, w9, w22
   2c0ac:	str	x0, [x1, #8]
   2c0b0:	ldr	x0, [sp, #112]
   2c0b4:	add	x0, x0, x9
   2c0b8:	str	x0, [sp, #112]
   2c0bc:	mov	x20, x0
   2c0c0:	add	w10, w10, #0x1
   2c0c4:	b	2a530 <ZSTD_compress@@Base+0x1bce4>
   2c0c8:	cmp	w9, #0x0
   2c0cc:	cinc	w0, w11, eq  // eq = none
   2c0d0:	cbz	w0, 2bf98 <ZSTD_compress@@Base+0x1d74c>
   2c0d4:	ldr	x1, [sp, #104]
   2c0d8:	cmp	w0, #0x3
   2c0dc:	ldr	w2, [x1]
   2c0e0:	b.ne	2c0fc <ZSTD_compress@@Base+0x1d8b0>  // b.any
   2c0e4:	sub	w1, w2, #0x1
   2c0e8:	ldr	x0, [sp, #104]
   2c0ec:	ldr	x3, [sp, #104]
   2c0f0:	ldr	w0, [x0, #4]
   2c0f4:	str	w0, [x3, #8]
   2c0f8:	b	2c10c <ZSTD_compress@@Base+0x1d8c0>
   2c0fc:	ldr	x1, [sp, #104]
   2c100:	cmp	w0, #0x1
   2c104:	ldr	w1, [x1, w0, uxtw #2]
   2c108:	b.ne	2c0e8 <ZSTD_compress@@Base+0x1d89c>  // b.any
   2c10c:	ldr	x0, [sp, #104]
   2c110:	stp	w1, w2, [x0]
   2c114:	b	2bf98 <ZSTD_compress@@Base+0x1d74c>
   2c118:	ldr	x0, [sp, #144]
   2c11c:	mov	x3, x12
   2c120:	ldr	x1, [sp, #112]
   2c124:	mov	x2, x20
   2c128:	ldr	x0, [x0, #24]
   2c12c:	bl	1fe1c <ZSTD_compress@@Base+0x115d0>
   2c130:	b	2c030 <ZSTD_compress@@Base+0x1d7e4>
   2c134:	stp	x29, x30, [sp, #-496]!
   2c138:	mov	x29, sp
   2c13c:	stp	x19, x20, [sp, #16]
   2c140:	mov	x19, x0
   2c144:	add	x0, x0, #0x48
   2c148:	stp	x21, x22, [sp, #32]
   2c14c:	add	x21, x3, x4
   2c150:	str	x0, [sp, #168]
   2c154:	sub	x0, x21, #0x8
   2c158:	ldr	x20, [x19, #8]
   2c15c:	str	x0, [sp, #288]
   2c160:	ldr	w0, [x19, #24]
   2c164:	str	x1, [sp, #144]
   2c168:	ldr	w1, [x19, #204]
   2c16c:	add	x20, x20, x0
   2c170:	ldr	w0, [x19, #200]
   2c174:	cmp	w1, #0xfff
   2c178:	str	w0, [sp, #192]
   2c17c:	stp	x2, x3, [sp, #104]
   2c180:	mov	w3, #0xfff                 	// #4095
   2c184:	csel	w1, w1, w3, ls  // ls = plast
   2c188:	mov	w0, w0
   2c18c:	str	w1, [sp, #312]
   2c190:	ldr	w1, [sp, #192]
   2c194:	cmp	w0, #0x3
   2c198:	mov	w0, #0x4                   	// #4
   2c19c:	mov	x2, x4
   2c1a0:	csel	w0, w1, w0, eq  // eq = none
   2c1a4:	str	w0, [sp, #192]
   2c1a8:	ldr	x1, [sp, #112]
   2c1ac:	mov	w3, #0x2                   	// #2
   2c1b0:	ldr	w0, [x19, #36]
   2c1b4:	str	w0, [sp, #444]
   2c1b8:	ldr	x0, [x19, #112]
   2c1bc:	stp	x23, x24, [sp, #48]
   2c1c0:	stp	x25, x26, [sp, #64]
   2c1c4:	stp	x27, x28, [sp, #80]
   2c1c8:	str	x0, [sp, #96]
   2c1cc:	add	x0, x19, #0x48
   2c1d0:	ldr	x28, [x19, #104]
   2c1d4:	bl	20648 <ZSTD_compress@@Base+0x11dfc>
   2c1d8:	ldr	x0, [sp, #112]
   2c1dc:	cmp	x0, x20
   2c1e0:	cinc	x20, x0, eq  // eq = none
   2c1e4:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   2c1e8:	add	x0, x0, #0x4c8
   2c1ec:	add	x0, x0, #0x150
   2c1f0:	str	x0, [sp, #336]
   2c1f4:	ldr	x0, [sp, #288]
   2c1f8:	cmp	x0, x20
   2c1fc:	b.hi	2c224 <ZSTD_compress@@Base+0x1d9d8>  // b.pmore
   2c200:	ldr	x0, [sp, #112]
   2c204:	ldp	x19, x20, [sp, #16]
   2c208:	sub	x0, x21, x0
   2c20c:	ldp	x21, x22, [sp, #32]
   2c210:	ldp	x23, x24, [sp, #48]
   2c214:	ldp	x25, x26, [sp, #64]
   2c218:	ldp	x27, x28, [sp, #80]
   2c21c:	ldp	x29, x30, [sp], #496
   2c220:	ret
   2c224:	ldr	x23, [x19, #8]
   2c228:	ldr	w22, [x19, #36]
   2c22c:	add	x0, x23, w22, uxtw
   2c230:	cmp	x20, x0
   2c234:	b.cs	2c240 <ZSTD_compress@@Base+0x1d9f4>  // b.hs, b.nlast
   2c238:	add	x20, x20, #0x1
   2c23c:	b	2c1f4 <ZSTD_compress@@Base+0x1d9a8>
   2c240:	sub	x24, x20, x23
   2c244:	ldr	w26, [x19, #200]
   2c248:	add	x27, x19, #0xb8
   2c24c:	mov	w25, w24
   2c250:	cmp	w25, w22
   2c254:	b.hi	2c688 <ZSTD_compress@@Base+0x1de3c>  // b.pmore
   2c258:	ldr	x0, [sp, #112]
   2c25c:	mov	w1, #0xfff                 	// #4095
   2c260:	str	w24, [x19, #36]
   2c264:	sub	x0, x20, x0
   2c268:	str	x0, [sp, #232]
   2c26c:	ldr	w11, [x19, #24]
   2c270:	ldr	w0, [sp, #232]
   2c274:	str	w0, [sp, #196]
   2c278:	cmp	w0, #0x0
   2c27c:	cset	w0, eq  // eq = none
   2c280:	str	w0, [sp, #136]
   2c284:	ldr	w0, [x27, #20]
   2c288:	cmp	w0, #0xfff
   2c28c:	csel	w0, w0, w1, ls  // ls = plast
   2c290:	str	w0, [sp, #176]
   2c294:	ldr	x0, [x19, #8]
   2c298:	str	x0, [sp, #128]
   2c29c:	ldr	w1, [x27, #8]
   2c2a0:	cmp	w26, #0x5
   2c2a4:	sub	x15, x20, x0
   2c2a8:	ldr	x0, [x19, #48]
   2c2ac:	str	x0, [sp, #152]
   2c2b0:	ldr	x0, [x19, #64]
   2c2b4:	str	x0, [sp, #120]
   2c2b8:	mov	w14, w15
   2c2bc:	b.eq	2d220 <ZSTD_compress@@Base+0x1e9d4>  // b.none
   2c2c0:	b.hi	2c6a8 <ZSTD_compress@@Base+0x1de5c>  // b.pmore
   2c2c4:	cmp	w26, #0x3
   2c2c8:	b.eq	2ca4c <ZSTD_compress@@Base+0x1e200>  // b.none
   2c2cc:	mov	x25, x20
   2c2d0:	neg	w1, w1
   2c2d4:	ldr	w22, [x27, #4]
   2c2d8:	mov	w6, #0x1                   	// #1
   2c2dc:	sub	w5, w11, #0x1
   2c2e0:	ldr	w0, [x25], #4
   2c2e4:	sub	w22, w22, #0x1
   2c2e8:	str	w0, [sp, #240]
   2c2ec:	mov	w0, #0x79b1                	// #31153
   2c2f0:	lsl	w22, w6, w22
   2c2f4:	ldr	w2, [sp, #240]
   2c2f8:	movk	w0, #0x9e37, lsl #16
   2c2fc:	sub	w22, w22, #0x1
   2c300:	cmp	w22, w15
   2c304:	mul	w0, w2, w0
   2c308:	ldr	w2, [x19, #184]
   2c30c:	lsr	w1, w0, w1
   2c310:	ubfiz	x0, x1, #2, #32
   2c314:	str	x0, [sp, #272]
   2c318:	ldr	x0, [sp, #152]
   2c31c:	ldr	x1, [sp, #272]
   2c320:	ldr	w26, [x0, x1]
   2c324:	mov	w1, w15
   2c328:	ldr	x0, [sp, #128]
   2c32c:	add	x0, x0, w11, uxtw
   2c330:	str	x0, [sp, #248]
   2c334:	sub	w0, w15, w22
   2c338:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   2c33c:	str	w0, [sp, #264]
   2c340:	mov	x0, x19
   2c344:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   2c348:	cmp	w0, #0x0
   2c34c:	and	w18, w22, w15
   2c350:	csel	w1, w0, w6, ne  // ne = any
   2c354:	str	w1, [sp, #280]
   2c358:	ldr	x1, [sp, #120]
   2c35c:	ubfiz	x18, x18, #3, #31
   2c360:	ldr	x24, [x19, #176]
   2c364:	add	x1, x1, x18
   2c368:	str	x1, [sp, #200]
   2c36c:	add	x18, x18, #0x4
   2c370:	ldr	x1, [sp, #120]
   2c374:	mov	w13, #0x0                   	// #0
   2c378:	add	x18, x1, x18
   2c37c:	add	w1, w15, #0x9
   2c380:	str	w1, [sp, #160]
   2c384:	ldr	w1, [x27, #12]
   2c388:	lsl	w1, w6, w1
   2c38c:	str	w1, [sp, #296]
   2c390:	ldr	x1, [x24, #8]
   2c394:	str	x1, [sp, #184]
   2c398:	ldr	x1, [x24]
   2c39c:	str	x1, [sp, #208]
   2c3a0:	ldr	x2, [sp, #184]
   2c3a4:	sub	x27, x1, x2
   2c3a8:	ldr	w1, [x24, #28]
   2c3ac:	str	w1, [sp, #216]
   2c3b0:	sub	w1, w0, w27
   2c3b4:	str	w1, [sp, #256]
   2c3b8:	ldr	w1, [x24, #188]
   2c3bc:	ldr	w2, [x24, #192]
   2c3c0:	sub	w1, w1, #0x1
   2c3c4:	str	w2, [sp, #304]
   2c3c8:	lsl	w6, w6, w1
   2c3cc:	sub	w1, w6, #0x1
   2c3d0:	str	w1, [sp, #224]
   2c3d4:	ldr	w1, [sp, #216]
   2c3d8:	ldr	w3, [sp, #224]
   2c3dc:	ldr	w2, [sp, #224]
   2c3e0:	sub	w1, w27, w1
   2c3e4:	cmp	w3, w1
   2c3e8:	ldr	w3, [sp, #216]
   2c3ec:	sub	w2, w27, w2
   2c3f0:	ldrb	w23, [sp, #136]
   2c3f4:	csel	w2, w2, w3, cc  // cc = lo, ul, last
   2c3f8:	str	w2, [sp, #320]
   2c3fc:	ldr	w2, [sp, #192]
   2c400:	mov	w3, #0x4                   	// #4
   2c404:	sub	w6, w2, #0x1
   2c408:	ldr	w2, [sp, #136]
   2c40c:	cmp	w2, #0x0
   2c410:	mov	w2, #0x3                   	// #3
   2c414:	csel	w2, w3, w2, ne  // ne = any
   2c418:	str	w2, [sp, #316]
   2c41c:	sub	w2, w14, w11
   2c420:	str	w2, [sp, #328]
   2c424:	sub	w2, w14, w0
   2c428:	sub	w0, w0, w27
   2c42c:	add	w1, w2, w1
   2c430:	str	x0, [sp, #352]
   2c434:	str	w1, [sp, #384]
   2c438:	sub	w1, w5, w14
   2c43c:	str	w1, [sp, #344]
   2c440:	str	w23, [sp, #360]
   2c444:	cmp	w23, #0x3
   2c448:	ldr	x0, [sp, #104]
   2c44c:	b.ne	2d098 <ZSTD_compress@@Base+0x1e84c>  // b.any
   2c450:	ldr	w0, [x0]
   2c454:	sub	w0, w0, #0x1
   2c458:	ldr	w1, [sp, #328]
   2c45c:	sub	w2, w0, #0x1
   2c460:	cmp	w2, w1
   2c464:	b.cs	2d0a0 <ZSTD_compress@@Base+0x1e854>  // b.hs, b.nlast
   2c468:	mov	w1, w0
   2c46c:	sub	x0, x20, w0, uxtw
   2c470:	ldr	w2, [sp, #240]
   2c474:	ldr	w0, [x0]
   2c478:	cmp	w2, w0
   2c47c:	b.ne	2d100 <ZSTD_compress@@Base+0x1e8b4>  // b.any
   2c480:	mov	x0, #0x4                   	// #4
   2c484:	sub	x1, x0, x1
   2c488:	mov	x2, x21
   2c48c:	add	x1, x20, x1
   2c490:	mov	x0, x25
   2c494:	str	x6, [sp, #360]
   2c498:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2c49c:	ldr	x6, [sp, #360]
   2c4a0:	add	w0, w0, #0x4
   2c4a4:	mov	w1, w0
   2c4a8:	cmp	x6, w0, uxtw
   2c4ac:	b.cs	2c4e4 <ZSTD_compress@@Base+0x1dc98>  // b.hs, b.nlast
   2c4b0:	ubfiz	x2, x13, #3, #32
   2c4b4:	ldr	w5, [sp, #136]
   2c4b8:	add	x3, x28, x2
   2c4bc:	add	w13, w13, #0x1
   2c4c0:	sub	w4, w23, w5
   2c4c4:	str	w4, [x28, x2]
   2c4c8:	add	x2, x20, x1
   2c4cc:	cmp	x2, x21
   2c4d0:	ldr	w2, [sp, #176]
   2c4d4:	str	w0, [x3, #4]
   2c4d8:	ccmp	w0, w2, #0x2, ne  // ne = any
   2c4dc:	b.hi	2cf74 <ZSTD_compress@@Base+0x1e728>  // b.pmore
   2c4e0:	mov	x6, x1
   2c4e4:	ldr	w0, [sp, #316]
   2c4e8:	add	x23, x23, #0x1
   2c4ec:	cmp	w0, w23
   2c4f0:	b.hi	2c440 <ZSTD_compress@@Base+0x1dbf4>  // b.pmore
   2c4f4:	ldr	x0, [sp, #152]
   2c4f8:	add	w7, w14, #0x2
   2c4fc:	ldr	x1, [sp, #272]
   2c500:	mov	x11, #0x0                   	// #0
   2c504:	mov	x9, #0x0                   	// #0
   2c508:	str	w15, [x0, x1]
   2c50c:	ldr	w0, [sp, #296]
   2c510:	sub	w15, w0, #0x1
   2c514:	cmn	w15, #0x1
   2c518:	b.eq	2c528 <ZSTD_compress@@Base+0x1dcdc>  // b.none
   2c51c:	ldr	w0, [sp, #280]
   2c520:	cmp	w0, w26
   2c524:	b.ls	2d108 <ZSTD_compress@@Base+0x1e8bc>  // b.plast
   2c528:	ldr	x0, [sp, #200]
   2c52c:	str	wzr, [x18]
   2c530:	str	wzr, [x0]
   2c534:	cbz	w15, 2c680 <ZSTD_compress@@Base+0x1de34>
   2c538:	ldr	w0, [x20]
   2c53c:	mov	w1, #0x79b1                	// #31153
   2c540:	movk	w1, #0x9e37, lsl #16
   2c544:	ldr	w9, [sp, #256]
   2c548:	and	x7, x27, #0xffffffff
   2c54c:	add	w14, w14, #0x2
   2c550:	mov	x25, #0x0                   	// #0
   2c554:	mul	w0, w0, w1
   2c558:	ldr	w1, [sp, #304]
   2c55c:	ldr	x5, [x24, #64]
   2c560:	neg	w1, w1
   2c564:	lsr	w0, w0, w1
   2c568:	ldr	x1, [x24, #48]
   2c56c:	mov	x24, #0x0                   	// #0
   2c570:	ldr	w18, [x1, w0, uxtw #2]
   2c574:	ldr	w0, [sp, #216]
   2c578:	cmp	w0, w18
   2c57c:	b.cs	2c680 <ZSTD_compress@@Base+0x1de34>  // b.hs, b.nlast
   2c580:	ldr	w0, [sp, #224]
   2c584:	cmp	x24, x25
   2c588:	ldr	x3, [sp, #208]
   2c58c:	and	w22, w0, w18
   2c590:	ldr	x0, [sp, #184]
   2c594:	ubfiz	x22, x22, #3, #31
   2c598:	ldr	x4, [sp, #248]
   2c59c:	add	x8, x5, x22
   2c5a0:	csel	x27, x24, x25, ls  // ls = plast
   2c5a4:	add	x26, x0, w18, uxtw
   2c5a8:	mov	w23, w18
   2c5ac:	add	x1, x26, x27
   2c5b0:	add	x0, x20, x27
   2c5b4:	mov	x2, x21
   2c5b8:	str	x8, [sp, #120]
   2c5bc:	str	x5, [sp, #152]
   2c5c0:	str	x6, [sp, #176]
   2c5c4:	str	x7, [sp, #200]
   2c5c8:	str	x9, [sp, #240]
   2c5cc:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2c5d0:	ldr	x7, [sp, #200]
   2c5d4:	add	x27, x27, x0
   2c5d8:	add	x0, x23, x27
   2c5dc:	cmp	x0, x7
   2c5e0:	ldr	x8, [sp, #120]
   2c5e4:	ldr	x5, [sp, #152]
   2c5e8:	ldr	x6, [sp, #176]
   2c5ec:	ldr	x9, [sp, #240]
   2c5f0:	b.cc	2c600 <ZSTD_compress@@Base+0x1ddb4>  // b.lo, b.ul, b.last
   2c5f4:	ldr	x0, [sp, #128]
   2c5f8:	add	x23, x9, x23
   2c5fc:	add	x26, x0, x23
   2c600:	cmp	x27, x6
   2c604:	b.ls	2c654 <ZSTD_compress@@Base+0x1de08>  // b.plast
   2c608:	ldr	w0, [sp, #256]
   2c60c:	add	w1, w0, w18
   2c610:	ldr	w0, [sp, #160]
   2c614:	sub	w0, w0, w1
   2c618:	cmp	x27, x0
   2c61c:	b.ls	2c628 <ZSTD_compress@@Base+0x1dddc>  // b.plast
   2c620:	add	w0, w1, w27
   2c624:	str	w0, [sp, #160]
   2c628:	ubfiz	x0, x13, #3, #32
   2c62c:	sub	w1, w14, w1
   2c630:	add	x2, x28, x0
   2c634:	cmp	x27, #0x1, lsl #12
   2c638:	add	w13, w13, #0x1
   2c63c:	str	w1, [x28, x0]
   2c640:	add	x1, x20, x27
   2c644:	str	w27, [x2, #4]
   2c648:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2c64c:	b.eq	2c680 <ZSTD_compress@@Base+0x1de34>  // b.none
   2c650:	mov	x6, x27
   2c654:	ldr	w0, [sp, #320]
   2c658:	cmp	w0, w18
   2c65c:	b.cs	2c680 <ZSTD_compress@@Base+0x1de34>  // b.hs, b.nlast
   2c660:	ldrb	w1, [x26, x27]
   2c664:	ldrb	w0, [x20, x27]
   2c668:	cmp	w1, w0
   2c66c:	b.cs	2d214 <ZSTD_compress@@Base+0x1e9c8>  // b.hs, b.nlast
   2c670:	ldr	w18, [x8, #4]
   2c674:	mov	x25, x27
   2c678:	subs	w15, w15, #0x1
   2c67c:	b.ne	2c574 <ZSTD_compress@@Base+0x1dd28>  // b.any
   2c680:	ldr	w0, [sp, #160]
   2c684:	b	2cf6c <ZSTD_compress@@Base+0x1e720>
   2c688:	add	x1, x23, w22, uxtw
   2c68c:	mov	w3, w26
   2c690:	mov	x2, x21
   2c694:	mov	x0, x19
   2c698:	mov	w4, #0x0                   	// #0
   2c69c:	bl	2012c <ZSTD_compress@@Base+0x118e0>
   2c6a0:	add	w22, w22, w0
   2c6a4:	b	2c250 <ZSTD_compress@@Base+0x1da04>
   2c6a8:	sub	w0, w26, #0x6
   2c6ac:	cmp	w0, #0x1
   2c6b0:	b.hi	2c2cc <ZSTD_compress@@Base+0x1da80>  // b.pmore
   2c6b4:	mov	w2, #0x6                   	// #6
   2c6b8:	mov	x0, x20
   2c6bc:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   2c6c0:	lsl	x0, x0, #2
   2c6c4:	str	x0, [sp, #264]
   2c6c8:	mov	w7, #0x1                   	// #1
   2c6cc:	ldr	x0, [sp, #152]
   2c6d0:	sub	w8, w11, #0x1
   2c6d4:	ldr	x1, [sp, #264]
   2c6d8:	ldr	w22, [x27, #4]
   2c6dc:	ldr	w2, [x19, #184]
   2c6e0:	ldr	w26, [x0, x1]
   2c6e4:	sub	w22, w22, #0x1
   2c6e8:	ldr	x0, [sp, #128]
   2c6ec:	lsl	w22, w7, w22
   2c6f0:	sub	w22, w22, #0x1
   2c6f4:	mov	w1, w15
   2c6f8:	cmp	w22, w15
   2c6fc:	add	x0, x0, w11, uxtw
   2c700:	str	x0, [sp, #240]
   2c704:	sub	w0, w15, w22
   2c708:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   2c70c:	str	w0, [sp, #256]
   2c710:	mov	x0, x19
   2c714:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   2c718:	cmp	w0, #0x0
   2c71c:	and	w18, w22, w15
   2c720:	csel	w1, w0, w7, ne  // ne = any
   2c724:	str	w1, [sp, #272]
   2c728:	ldr	x1, [sp, #120]
   2c72c:	ubfiz	x18, x18, #3, #31
   2c730:	mov	w13, #0x0                   	// #0
   2c734:	add	x1, x1, x18
   2c738:	str	x1, [sp, #200]
   2c73c:	ldr	x1, [sp, #120]
   2c740:	add	x18, x18, #0x4
   2c744:	add	x18, x1, x18
   2c748:	add	w1, w15, #0x9
   2c74c:	str	w1, [sp, #160]
   2c750:	ldr	w1, [x27, #12]
   2c754:	ldr	x27, [x19, #176]
   2c758:	lsl	w1, w7, w1
   2c75c:	str	w1, [sp, #280]
   2c760:	ldr	x1, [x27, #8]
   2c764:	str	x1, [sp, #184]
   2c768:	ldr	x1, [x27]
   2c76c:	str	x1, [sp, #208]
   2c770:	ldr	x2, [sp, #184]
   2c774:	sub	x25, x1, x2
   2c778:	ldr	w1, [x27, #28]
   2c77c:	str	w1, [sp, #216]
   2c780:	sub	w1, w0, w25
   2c784:	str	w1, [sp, #248]
   2c788:	ldr	w1, [x27, #188]
   2c78c:	ldr	w2, [x27, #192]
   2c790:	sub	w1, w1, #0x1
   2c794:	str	w2, [sp, #296]
   2c798:	lsl	w7, w7, w1
   2c79c:	sub	w1, w7, #0x1
   2c7a0:	str	w1, [sp, #224]
   2c7a4:	ldr	w1, [sp, #216]
   2c7a8:	ldr	w3, [sp, #224]
   2c7ac:	ldr	w2, [sp, #224]
   2c7b0:	sub	w1, w25, w1
   2c7b4:	cmp	w3, w1
   2c7b8:	ldr	w3, [sp, #216]
   2c7bc:	sub	w2, w25, w2
   2c7c0:	csel	w2, w2, w3, cc  // cc = lo, ul, last
   2c7c4:	str	w2, [sp, #316]
   2c7c8:	ldr	w2, [sp, #192]
   2c7cc:	mov	w3, #0x4                   	// #4
   2c7d0:	ldrb	w23, [sp, #136]
   2c7d4:	sub	w24, w2, #0x1
   2c7d8:	ldr	w2, [sp, #136]
   2c7dc:	cmp	w2, #0x0
   2c7e0:	mov	w2, #0x3                   	// #3
   2c7e4:	csel	w2, w3, w2, ne  // ne = any
   2c7e8:	str	w2, [sp, #304]
   2c7ec:	sub	w2, w15, w11
   2c7f0:	str	w2, [sp, #320]
   2c7f4:	sub	w2, w15, w0
   2c7f8:	sub	w0, w0, w25
   2c7fc:	add	w1, w2, w1
   2c800:	str	w1, [sp, #328]
   2c804:	sub	w1, w8, w15
   2c808:	add	x8, x20, #0x4
   2c80c:	str	x0, [sp, #344]
   2c810:	str	w1, [sp, #384]
   2c814:	str	w23, [sp, #352]
   2c818:	cmp	w23, #0x3
   2c81c:	ldr	x0, [sp, #104]
   2c820:	b.ne	2d738 <ZSTD_compress@@Base+0x1eeec>  // b.any
   2c824:	ldr	w0, [x0]
   2c828:	sub	w0, w0, #0x1
   2c82c:	ldr	w1, [sp, #320]
   2c830:	sub	w2, w0, #0x1
   2c834:	cmp	w2, w1
   2c838:	b.cs	2d740 <ZSTD_compress@@Base+0x1eef4>  // b.hs, b.nlast
   2c83c:	mov	w1, w0
   2c840:	sub	x0, x20, w0, uxtw
   2c844:	ldr	w2, [x0]
   2c848:	ldr	w0, [x20]
   2c84c:	cmp	w2, w0
   2c850:	b.ne	2d7a0 <ZSTD_compress@@Base+0x1ef54>  // b.any
   2c854:	mov	x0, #0x4                   	// #4
   2c858:	sub	x1, x0, x1
   2c85c:	mov	x2, x21
   2c860:	add	x1, x20, x1
   2c864:	mov	x0, x8
   2c868:	str	x8, [sp, #352]
   2c86c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2c870:	ldr	x8, [sp, #352]
   2c874:	add	w0, w0, #0x4
   2c878:	mov	w1, w0
   2c87c:	cmp	x24, w0, uxtw
   2c880:	b.cs	2c8b8 <ZSTD_compress@@Base+0x1e06c>  // b.hs, b.nlast
   2c884:	ubfiz	x2, x13, #3, #32
   2c888:	ldr	w5, [sp, #136]
   2c88c:	add	x3, x28, x2
   2c890:	add	w13, w13, #0x1
   2c894:	sub	w4, w23, w5
   2c898:	str	w4, [x28, x2]
   2c89c:	add	x2, x20, x1
   2c8a0:	cmp	x2, x21
   2c8a4:	ldr	w2, [sp, #176]
   2c8a8:	str	w0, [x3, #4]
   2c8ac:	ccmp	w0, w2, #0x2, ne  // ne = any
   2c8b0:	b.hi	2cf74 <ZSTD_compress@@Base+0x1e728>  // b.pmore
   2c8b4:	mov	x24, x1
   2c8b8:	ldr	w0, [sp, #304]
   2c8bc:	add	x23, x23, #0x1
   2c8c0:	cmp	w0, w23
   2c8c4:	b.hi	2c814 <ZSTD_compress@@Base+0x1dfc8>  // b.pmore
   2c8c8:	ldr	x0, [sp, #152]
   2c8cc:	add	w12, w14, #0x2
   2c8d0:	ldr	x1, [sp, #264]
   2c8d4:	mov	x9, #0x0                   	// #0
   2c8d8:	mov	x7, #0x0                   	// #0
   2c8dc:	str	w15, [x0, x1]
   2c8e0:	ldr	w0, [sp, #280]
   2c8e4:	sub	w23, w0, #0x1
   2c8e8:	cmn	w23, #0x1
   2c8ec:	b.eq	2c8fc <ZSTD_compress@@Base+0x1e0b0>  // b.none
   2c8f0:	ldr	w0, [sp, #272]
   2c8f4:	cmp	w0, w26
   2c8f8:	b.ls	2d7a8 <ZSTD_compress@@Base+0x1ef5c>  // b.plast
   2c8fc:	ldr	x0, [sp, #200]
   2c900:	str	wzr, [x18]
   2c904:	str	wzr, [x0]
   2c908:	cbz	w23, 2c680 <ZSTD_compress@@Base+0x1de34>
   2c90c:	ldr	w1, [sp, #296]
   2c910:	mov	x0, x20
   2c914:	mov	w2, #0x6                   	// #6
   2c918:	mov	x26, #0x0                   	// #0
   2c91c:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   2c920:	add	w14, w14, #0x2
   2c924:	ldr	x1, [x27, #48]
   2c928:	and	x9, x25, #0xffffffff
   2c92c:	ldr	w7, [sp, #248]
   2c930:	ldr	x5, [x27, #64]
   2c934:	mov	x27, #0x0                   	// #0
   2c938:	ldr	w15, [x1, x0, lsl #2]
   2c93c:	ldr	w0, [sp, #216]
   2c940:	cmp	w0, w15
   2c944:	b.cs	2c680 <ZSTD_compress@@Base+0x1de34>  // b.hs, b.nlast
   2c948:	ldr	w0, [sp, #224]
   2c94c:	cmp	x27, x26
   2c950:	ldr	x3, [sp, #208]
   2c954:	and	w18, w0, w15
   2c958:	ldr	x0, [sp, #184]
   2c95c:	ubfiz	x18, x18, #3, #31
   2c960:	ldr	x4, [sp, #240]
   2c964:	add	x8, x5, x18
   2c968:	add	x6, x0, w15, uxtw
   2c96c:	csel	x25, x27, x26, ls  // ls = plast
   2c970:	add	x1, x6, x25
   2c974:	mov	w22, w15
   2c978:	add	x0, x20, x25
   2c97c:	mov	x2, x21
   2c980:	str	x6, [sp, #120]
   2c984:	str	x8, [sp, #152]
   2c988:	str	x5, [sp, #176]
   2c98c:	str	x9, [sp, #200]
   2c990:	str	x7, [sp, #256]
   2c994:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2c998:	ldr	x9, [sp, #200]
   2c99c:	add	x25, x25, x0
   2c9a0:	add	x0, x22, x25
   2c9a4:	cmp	x0, x9
   2c9a8:	ldr	x6, [sp, #120]
   2c9ac:	ldr	x8, [sp, #152]
   2c9b0:	ldr	x5, [sp, #176]
   2c9b4:	ldr	x7, [sp, #256]
   2c9b8:	b.cc	2c9c8 <ZSTD_compress@@Base+0x1e17c>  // b.lo, b.ul, b.last
   2c9bc:	ldr	x0, [sp, #128]
   2c9c0:	add	x22, x7, x22
   2c9c4:	add	x6, x0, x22
   2c9c8:	cmp	x25, x24
   2c9cc:	b.ls	2ca1c <ZSTD_compress@@Base+0x1e1d0>  // b.plast
   2c9d0:	ldr	w0, [sp, #248]
   2c9d4:	add	w1, w0, w15
   2c9d8:	ldr	w0, [sp, #160]
   2c9dc:	sub	w0, w0, w1
   2c9e0:	cmp	x25, x0
   2c9e4:	b.ls	2c9f0 <ZSTD_compress@@Base+0x1e1a4>  // b.plast
   2c9e8:	add	w0, w1, w25
   2c9ec:	str	w0, [sp, #160]
   2c9f0:	ubfiz	x0, x13, #3, #32
   2c9f4:	sub	w1, w14, w1
   2c9f8:	add	x2, x28, x0
   2c9fc:	cmp	x25, #0x1, lsl #12
   2ca00:	add	w13, w13, #0x1
   2ca04:	str	w1, [x28, x0]
   2ca08:	add	x1, x20, x25
   2ca0c:	str	w25, [x2, #4]
   2ca10:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2ca14:	b.eq	2c680 <ZSTD_compress@@Base+0x1de34>  // b.none
   2ca18:	mov	x24, x25
   2ca1c:	ldr	w0, [sp, #316]
   2ca20:	cmp	w0, w15
   2ca24:	b.cs	2c680 <ZSTD_compress@@Base+0x1de34>  // b.hs, b.nlast
   2ca28:	ldrb	w1, [x6, x25]
   2ca2c:	ldrb	w0, [x20, x25]
   2ca30:	cmp	w1, w0
   2ca34:	b.cs	2d8ac <ZSTD_compress@@Base+0x1f060>  // b.hs, b.nlast
   2ca38:	ldr	w15, [x8, #4]
   2ca3c:	mov	x26, x25
   2ca40:	subs	w23, w23, #0x1
   2ca44:	b.ne	2c93c <ZSTD_compress@@Base+0x1e0f0>  // b.any
   2ca48:	b	2c680 <ZSTD_compress@@Base+0x1de34>
   2ca4c:	mov	x22, x20
   2ca50:	mov	w0, #0x79b1                	// #31153
   2ca54:	movk	w0, #0x9e37, lsl #16
   2ca58:	neg	w1, w1
   2ca5c:	mov	w6, #0x1                   	// #1
   2ca60:	ldr	w2, [x19, #184]
   2ca64:	ldr	w25, [x22], #3
   2ca68:	sub	w5, w11, #0x1
   2ca6c:	mul	w0, w25, w0
   2ca70:	lsl	w25, w25, #8
   2ca74:	lsr	w1, w0, w1
   2ca78:	ubfiz	x0, x1, #2, #32
   2ca7c:	str	x0, [sp, #304]
   2ca80:	ldr	x0, [sp, #152]
   2ca84:	ldr	x1, [sp, #304]
   2ca88:	ldr	w23, [x0, x1]
   2ca8c:	ldr	w0, [x27, #4]
   2ca90:	sub	w0, w0, #0x1
   2ca94:	lsl	w0, w6, w0
   2ca98:	sub	w0, w0, #0x1
   2ca9c:	str	w0, [sp, #200]
   2caa0:	ldr	x0, [sp, #128]
   2caa4:	ldr	w1, [sp, #200]
   2caa8:	add	x0, x0, w11, uxtw
   2caac:	str	x0, [sp, #264]
   2cab0:	ldr	w0, [sp, #200]
   2cab4:	cmp	w1, w15
   2cab8:	mov	w1, w15
   2cabc:	sub	w0, w15, w0
   2cac0:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   2cac4:	str	w0, [sp, #296]
   2cac8:	mov	x0, x19
   2cacc:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   2cad0:	cmp	w0, #0x0
   2cad4:	mov	w13, #0x0                   	// #0
   2cad8:	csel	w1, w0, w6, ne  // ne = any
   2cadc:	str	w1, [sp, #272]
   2cae0:	ldr	w1, [sp, #200]
   2cae4:	ldr	x2, [sp, #120]
   2cae8:	and	w1, w1, w15
   2caec:	ldr	x24, [x19, #176]
   2caf0:	ubfiz	x1, x1, #3, #31
   2caf4:	add	x2, x2, x1
   2caf8:	str	x2, [sp, #216]
   2cafc:	ldr	x2, [sp, #120]
   2cb00:	add	x1, x1, #0x4
   2cb04:	add	x1, x2, x1
   2cb08:	str	x1, [sp, #224]
   2cb0c:	add	w1, w15, #0x9
   2cb10:	str	w1, [sp, #184]
   2cb14:	ldr	w1, [x27, #12]
   2cb18:	lsl	w1, w6, w1
   2cb1c:	str	w1, [sp, #316]
   2cb20:	ldr	x1, [x24, #8]
   2cb24:	str	x1, [sp, #208]
   2cb28:	ldr	x1, [x24]
   2cb2c:	str	x1, [sp, #240]
   2cb30:	ldr	x2, [sp, #208]
   2cb34:	sub	x1, x1, x2
   2cb38:	str	x1, [sp, #160]
   2cb3c:	ldr	w1, [x24, #28]
   2cb40:	str	w1, [sp, #248]
   2cb44:	ldr	w1, [sp, #160]
   2cb48:	ldr	w2, [x24, #192]
   2cb4c:	sub	w1, w0, w1
   2cb50:	str	w1, [sp, #280]
   2cb54:	str	w2, [sp, #320]
   2cb58:	ldr	w1, [x24, #188]
   2cb5c:	ldr	w2, [sp, #248]
   2cb60:	sub	w1, w1, #0x1
   2cb64:	lsl	w6, w6, w1
   2cb68:	sub	w1, w6, #0x1
   2cb6c:	str	w1, [sp, #256]
   2cb70:	ldr	w1, [sp, #160]
   2cb74:	ldr	w3, [sp, #256]
   2cb78:	sub	w1, w1, w2
   2cb7c:	ldr	w2, [sp, #160]
   2cb80:	cmp	w3, w1
   2cb84:	sub	w2, w2, w3
   2cb88:	ldr	w3, [sp, #248]
   2cb8c:	csel	w2, w2, w3, cc  // cc = lo, ul, last
   2cb90:	str	w2, [sp, #384]
   2cb94:	ldr	w2, [sp, #192]
   2cb98:	mov	w3, #0x4                   	// #4
   2cb9c:	sub	w18, w2, #0x1
   2cba0:	ldr	w2, [sp, #136]
   2cba4:	cmp	w2, #0x0
   2cba8:	csel	w2, w3, w26, ne  // ne = any
   2cbac:	str	w2, [sp, #328]
   2cbb0:	sub	w2, w15, w11
   2cbb4:	str	w2, [sp, #344]
   2cbb8:	sub	w2, w15, w0
   2cbbc:	ldrb	w26, [sp, #136]
   2cbc0:	add	w1, w2, w1
   2cbc4:	str	w1, [sp, #352]
   2cbc8:	sub	w1, w5, w15
   2cbcc:	str	w1, [sp, #360]
   2cbd0:	ldr	w1, [sp, #160]
   2cbd4:	sub	w0, w0, w1
   2cbd8:	str	x0, [sp, #368]
   2cbdc:	mov	w27, w26
   2cbe0:	cmp	w26, #0x3
   2cbe4:	ldr	x0, [sp, #104]
   2cbe8:	b.ne	2cd6c <ZSTD_compress@@Base+0x1e520>  // b.any
   2cbec:	ldr	w0, [x0]
   2cbf0:	sub	w0, w0, #0x1
   2cbf4:	ldr	w1, [sp, #344]
   2cbf8:	sub	w2, w0, #0x1
   2cbfc:	cmp	w2, w1
   2cc00:	b.cs	2cd74 <ZSTD_compress@@Base+0x1e528>  // b.hs, b.nlast
   2cc04:	mov	w1, w0
   2cc08:	sub	x0, x20, w0, uxtw
   2cc0c:	ldr	w0, [x0]
   2cc10:	cmp	w25, w0, lsl #8
   2cc14:	b.ne	2cdcc <ZSTD_compress@@Base+0x1e580>  // b.any
   2cc18:	mov	x0, #0x3                   	// #3
   2cc1c:	sub	x1, x0, x1
   2cc20:	mov	x2, x21
   2cc24:	add	x1, x20, x1
   2cc28:	mov	x0, x22
   2cc2c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2cc30:	add	w0, w0, #0x3
   2cc34:	mov	w1, w0
   2cc38:	cmp	x18, w0, uxtw
   2cc3c:	b.cs	2cc74 <ZSTD_compress@@Base+0x1e428>  // b.hs, b.nlast
   2cc40:	ubfiz	x2, x13, #3, #32
   2cc44:	ldr	w4, [sp, #136]
   2cc48:	add	x3, x28, x2
   2cc4c:	add	w13, w13, #0x1
   2cc50:	sub	w27, w27, w4
   2cc54:	str	w27, [x28, x2]
   2cc58:	add	x2, x20, x1
   2cc5c:	cmp	x2, x21
   2cc60:	ldr	w2, [sp, #176]
   2cc64:	str	w0, [x3, #4]
   2cc68:	ccmp	w0, w2, #0x2, ne  // ne = any
   2cc6c:	b.hi	2cf74 <ZSTD_compress@@Base+0x1e728>  // b.pmore
   2cc70:	mov	x18, x1
   2cc74:	ldr	w0, [sp, #328]
   2cc78:	add	x26, x26, #0x1
   2cc7c:	cmp	w0, w26
   2cc80:	b.hi	2cbdc <ZSTD_compress@@Base+0x1e390>  // b.pmore
   2cc84:	cmp	x18, #0x2
   2cc88:	b.ne	2cddc <ZSTD_compress@@Base+0x1e590>  // b.any
   2cc8c:	add	x1, sp, #0x1bc
   2cc90:	mov	x2, x20
   2cc94:	mov	x0, x19
   2cc98:	bl	1ff88 <ZSTD_compress@@Base+0x1173c>
   2cc9c:	ldr	w1, [sp, #272]
   2cca0:	sub	w7, w15, w0
   2cca4:	cmp	w1, w0
   2cca8:	mov	w1, #0x3ffff               	// #262143
   2ccac:	ccmp	w7, w1, #0x2, ls  // ls = plast
   2ccb0:	b.hi	2cddc <ZSTD_compress@@Base+0x1e590>  // b.pmore
   2ccb4:	ldr	x1, [sp, #128]
   2ccb8:	mov	x2, x21
   2ccbc:	add	x1, x1, w0, uxtw
   2ccc0:	mov	x0, x20
   2ccc4:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2ccc8:	cmp	x0, #0x2
   2cccc:	b.ls	2cddc <ZSTD_compress@@Base+0x1e590>  // b.plast
   2ccd0:	ldr	w2, [sp, #176]
   2ccd4:	add	w7, w7, #0x2
   2ccd8:	add	x1, x20, x0
   2ccdc:	stp	w7, w0, [x28]
   2cce0:	cmp	x1, x21
   2cce4:	ccmp	x0, x2, #0x2, ne  // ne = any
   2cce8:	b.ls	2cdd4 <ZSTD_compress@@Base+0x1e588>  // b.plast
   2ccec:	add	w15, w15, #0x1
   2ccf0:	mov	w13, #0x1                   	// #1
   2ccf4:	str	w15, [x19, #36]
   2ccf8:	ldp	x1, x0, [sp, #96]
   2ccfc:	mov	w3, #0x2                   	// #2
   2cd00:	ldr	x2, [sp, #168]
   2cd04:	ldr	w0, [x0]
   2cd08:	str	w0, [x1, #16]
   2cd0c:	ldr	x0, [sp, #104]
   2cd10:	ldr	w0, [x0, #4]
   2cd14:	str	w0, [x1, #20]
   2cd18:	ldr	x0, [sp, #104]
   2cd1c:	ldr	w0, [x0, #8]
   2cd20:	str	w0, [x1, #24]
   2cd24:	mov	x0, x1
   2cd28:	ldr	w1, [sp, #232]
   2cd2c:	stp	wzr, w1, [x0, #8]
   2cd30:	ldr	x0, [sp, #112]
   2cd34:	bl	204f4 <ZSTD_compress@@Base+0x11ca8>
   2cd38:	mov	w6, w0
   2cd3c:	ldr	x0, [sp, #96]
   2cd40:	str	w6, [x0]
   2cd44:	sub	w0, w13, #0x1
   2cd48:	lsl	x2, x0, #3
   2cd4c:	add	x0, x28, x0, lsl #3
   2cd50:	ldr	w1, [x0, #4]
   2cd54:	ldr	w0, [sp, #312]
   2cd58:	cmp	w0, w1
   2cd5c:	b.cs	2d8b8 <ZSTD_compress@@Base+0x1f06c>  // b.hs, b.nlast
   2cd60:	ldr	w2, [x28, x2]
   2cd64:	mov	w6, #0x0                   	// #0
   2cd68:	b	2daa4 <ZSTD_compress@@Base+0x1f258>
   2cd6c:	ldr	w0, [x0, x26, lsl #2]
   2cd70:	b	2cbf4 <ZSTD_compress@@Base+0x1e3a8>
   2cd74:	ldr	w3, [sp, #352]
   2cd78:	ldr	w1, [sp, #360]
   2cd7c:	cmp	w2, w3
   2cd80:	add	w1, w1, w0
   2cd84:	ccmp	w1, #0x2, #0x0, cc  // cc = lo, ul, last
   2cd88:	b.ls	2cdcc <ZSTD_compress@@Base+0x1e580>  // b.plast
   2cd8c:	ldr	x1, [sp, #368]
   2cd90:	sub	w0, w14, w0
   2cd94:	ldr	x2, [sp, #208]
   2cd98:	sub	x0, x0, x1
   2cd9c:	ldr	x1, [sp, #208]
   2cda0:	add	x1, x1, x0
   2cda4:	ldr	w0, [x2, x0]
   2cda8:	cmp	w25, w0, lsl #8
   2cdac:	b.ne	2cdcc <ZSTD_compress@@Base+0x1e580>  // b.any
   2cdb0:	ldr	x3, [sp, #240]
   2cdb4:	mov	x2, x21
   2cdb8:	ldr	x4, [sp, #264]
   2cdbc:	add	x1, x1, #0x3
   2cdc0:	mov	x0, x22
   2cdc4:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2cdc8:	b	2cc30 <ZSTD_compress@@Base+0x1e3e4>
   2cdcc:	mov	w0, #0x0                   	// #0
   2cdd0:	b	2cc34 <ZSTD_compress@@Base+0x1e3e8>
   2cdd4:	mov	x18, x0
   2cdd8:	mov	w13, #0x1                   	// #1
   2cddc:	ldr	x0, [sp, #152]
   2cde0:	add	w12, w14, #0x2
   2cde4:	ldr	x1, [sp, #304]
   2cde8:	mov	x9, #0x0                   	// #0
   2cdec:	mov	x7, #0x0                   	// #0
   2cdf0:	str	w15, [x0, x1]
   2cdf4:	ldr	w0, [sp, #316]
   2cdf8:	sub	w22, w0, #0x1
   2cdfc:	cmn	w22, #0x1
   2ce00:	b.eq	2ce10 <ZSTD_compress@@Base+0x1e5c4>  // b.none
   2ce04:	ldr	w0, [sp, #272]
   2ce08:	cmp	w0, w23
   2ce0c:	b.ls	2cf7c <ZSTD_compress@@Base+0x1e730>  // b.plast
   2ce10:	ldr	x0, [sp, #224]
   2ce14:	str	wzr, [x0]
   2ce18:	ldr	x0, [sp, #216]
   2ce1c:	str	wzr, [x0]
   2ce20:	cbz	w22, 2cf68 <ZSTD_compress@@Base+0x1e71c>
   2ce24:	ldr	w0, [x20]
   2ce28:	mov	w1, #0x79b1                	// #31153
   2ce2c:	movk	w1, #0x9e37, lsl #16
   2ce30:	ldr	w9, [sp, #280]
   2ce34:	ldr	x5, [x24, #64]
   2ce38:	add	w7, w14, #0x2
   2ce3c:	mul	w0, w0, w1
   2ce40:	ldr	w1, [sp, #320]
   2ce44:	mov	x26, #0x0                   	// #0
   2ce48:	mov	x27, #0x0                   	// #0
   2ce4c:	neg	w1, w1
   2ce50:	lsr	w0, w0, w1
   2ce54:	ldr	x1, [x24, #48]
   2ce58:	ldr	w15, [x1, w0, uxtw #2]
   2ce5c:	ldr	x0, [sp, #160]
   2ce60:	and	x23, x0, #0xffffffff
   2ce64:	ldr	w0, [sp, #248]
   2ce68:	cmp	w0, w15
   2ce6c:	b.cs	2cf68 <ZSTD_compress@@Base+0x1e71c>  // b.hs, b.nlast
   2ce70:	ldr	w0, [sp, #256]
   2ce74:	cmp	x27, x26
   2ce78:	ldr	x3, [sp, #240]
   2ce7c:	and	w24, w0, w15
   2ce80:	ldr	x0, [sp, #208]
   2ce84:	ubfiz	x24, x24, #3, #31
   2ce88:	ldr	x4, [sp, #264]
   2ce8c:	csel	x14, x27, x26, ls  // ls = plast
   2ce90:	add	x6, x0, w15, uxtw
   2ce94:	add	x8, x5, x24
   2ce98:	add	x1, x6, x14
   2ce9c:	mov	w25, w15
   2cea0:	add	x0, x20, x14
   2cea4:	mov	x2, x21
   2cea8:	str	x6, [sp, #120]
   2ceac:	stp	x8, x5, [sp, #152]
   2ceb0:	str	x9, [sp, #176]
   2ceb4:	str	w7, [sp, #200]
   2ceb8:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2cebc:	add	x14, x14, x0
   2cec0:	ldr	w7, [sp, #200]
   2cec4:	add	x0, x25, x14
   2cec8:	cmp	x0, x23
   2cecc:	ldr	x6, [sp, #120]
   2ced0:	ldp	x8, x5, [sp, #152]
   2ced4:	ldr	x9, [sp, #176]
   2ced8:	b.cc	2cee8 <ZSTD_compress@@Base+0x1e69c>  // b.lo, b.ul, b.last
   2cedc:	ldr	x0, [sp, #128]
   2cee0:	add	x25, x9, x25
   2cee4:	add	x6, x0, x25
   2cee8:	cmp	x14, x18
   2ceec:	b.ls	2cf3c <ZSTD_compress@@Base+0x1e6f0>  // b.plast
   2cef0:	ldr	w0, [sp, #280]
   2cef4:	add	w1, w0, w15
   2cef8:	ldr	w0, [sp, #184]
   2cefc:	sub	w0, w0, w1
   2cf00:	cmp	x14, x0
   2cf04:	b.ls	2cf10 <ZSTD_compress@@Base+0x1e6c4>  // b.plast
   2cf08:	add	w0, w1, w14
   2cf0c:	str	w0, [sp, #184]
   2cf10:	ubfiz	x0, x13, #3, #32
   2cf14:	sub	w1, w7, w1
   2cf18:	add	x2, x28, x0
   2cf1c:	cmp	x14, #0x1, lsl #12
   2cf20:	add	w13, w13, #0x1
   2cf24:	str	w1, [x28, x0]
   2cf28:	add	x1, x20, x14
   2cf2c:	str	w14, [x2, #4]
   2cf30:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2cf34:	b.eq	2cf68 <ZSTD_compress@@Base+0x1e71c>  // b.none
   2cf38:	mov	x18, x14
   2cf3c:	ldr	w0, [sp, #384]
   2cf40:	cmp	w0, w15
   2cf44:	b.cs	2cf68 <ZSTD_compress@@Base+0x1e71c>  // b.hs, b.nlast
   2cf48:	ldrb	w1, [x6, x14]
   2cf4c:	ldrb	w0, [x20, x14]
   2cf50:	cmp	w1, w0
   2cf54:	b.cs	2d08c <ZSTD_compress@@Base+0x1e840>  // b.hs, b.nlast
   2cf58:	ldr	w15, [x8, #4]
   2cf5c:	mov	x27, x14
   2cf60:	subs	w22, w22, #0x1
   2cf64:	b.ne	2ce64 <ZSTD_compress@@Base+0x1e618>  // b.any
   2cf68:	ldr	w0, [sp, #184]
   2cf6c:	sub	w0, w0, #0x8
   2cf70:	str	w0, [x19, #36]
   2cf74:	cbz	w13, 2c238 <ZSTD_compress@@Base+0x1d9ec>
   2cf78:	b	2ccf8 <ZSTD_compress@@Base+0x1e4ac>
   2cf7c:	ldr	w0, [sp, #200]
   2cf80:	cmp	x7, x9
   2cf84:	csel	x15, x7, x9, ls  // ls = plast
   2cf88:	mov	x2, x21
   2cf8c:	and	w8, w0, w23
   2cf90:	ldr	x0, [sp, #120]
   2cf94:	ubfiz	x8, x8, #3, #31
   2cf98:	add	x10, x0, x8
   2cf9c:	ldr	x0, [sp, #128]
   2cfa0:	add	x11, x0, w23, uxtw
   2cfa4:	add	x0, x20, x15
   2cfa8:	add	x1, x11, x15
   2cfac:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2cfb0:	add	x0, x15, x0
   2cfb4:	cmp	x0, x18
   2cfb8:	b.ls	2d004 <ZSTD_compress@@Base+0x1e7b8>  // b.plast
   2cfbc:	ldr	w1, [sp, #184]
   2cfc0:	mov	w3, w0
   2cfc4:	sub	w1, w1, w23
   2cfc8:	cmp	x0, x1
   2cfcc:	b.ls	2cfd8 <ZSTD_compress@@Base+0x1e78c>  // b.plast
   2cfd0:	add	w1, w23, w0
   2cfd4:	str	w1, [sp, #184]
   2cfd8:	ubfiz	x1, x13, #3, #32
   2cfdc:	sub	w4, w12, w23
   2cfe0:	add	x2, x28, x1
   2cfe4:	cmp	x0, #0x1, lsl #12
   2cfe8:	add	w13, w13, #0x1
   2cfec:	mov	x18, x0
   2cff0:	str	w4, [x28, x1]
   2cff4:	add	x1, x20, x0
   2cff8:	str	w3, [x2, #4]
   2cffc:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2d000:	b.eq	2d06c <ZSTD_compress@@Base+0x1e820>  // b.none
   2d004:	ldrb	w2, [x11, x0]
   2d008:	ldrb	w1, [x20, x0]
   2d00c:	cmp	w2, w1
   2d010:	b.cs	2d040 <ZSTD_compress@@Base+0x1e7f4>  // b.hs, b.nlast
   2d014:	ldr	x1, [sp, #216]
   2d018:	str	w23, [x1]
   2d01c:	ldr	w1, [sp, #296]
   2d020:	cmp	w23, w1
   2d024:	b.ls	2d074 <ZSTD_compress@@Base+0x1e828>  // b.plast
   2d028:	ldr	w23, [x10, #4]
   2d02c:	add	x1, x10, #0x4
   2d030:	str	x1, [sp, #216]
   2d034:	sub	w22, w22, #0x1
   2d038:	mov	x7, x0
   2d03c:	b	2cdfc <ZSTD_compress@@Base+0x1e5b0>
   2d040:	ldr	x1, [sp, #224]
   2d044:	str	w23, [x1]
   2d048:	ldr	w1, [sp, #296]
   2d04c:	cmp	w23, w1
   2d050:	b.ls	2d080 <ZSTD_compress@@Base+0x1e834>  // b.plast
   2d054:	ldr	x1, [sp, #120]
   2d058:	mov	x9, x0
   2d05c:	mov	x0, x7
   2d060:	str	x10, [sp, #224]
   2d064:	ldr	w23, [x1, x8]
   2d068:	b	2d034 <ZSTD_compress@@Base+0x1e7e8>
   2d06c:	mov	w22, #0x0                   	// #0
   2d070:	b	2ce10 <ZSTD_compress@@Base+0x1e5c4>
   2d074:	add	x0, sp, #0x1c0
   2d078:	str	x0, [sp, #216]
   2d07c:	b	2ce10 <ZSTD_compress@@Base+0x1e5c4>
   2d080:	add	x0, sp, #0x1c0
   2d084:	str	x0, [sp, #224]
   2d088:	b	2ce10 <ZSTD_compress@@Base+0x1e5c4>
   2d08c:	ldr	w15, [x5, x24]
   2d090:	mov	x26, x14
   2d094:	b	2cf60 <ZSTD_compress@@Base+0x1e714>
   2d098:	ldr	w0, [x0, x23, lsl #2]
   2d09c:	b	2c458 <ZSTD_compress@@Base+0x1dc0c>
   2d0a0:	ldr	w1, [sp, #344]
   2d0a4:	ldr	w3, [sp, #384]
   2d0a8:	add	w1, w1, w0
   2d0ac:	cmp	w2, w3
   2d0b0:	ccmp	w1, #0x2, #0x0, cc  // cc = lo, ul, last
   2d0b4:	b.ls	2d100 <ZSTD_compress@@Base+0x1e8b4>  // b.plast
   2d0b8:	ldr	x1, [sp, #352]
   2d0bc:	sub	w0, w14, w0
   2d0c0:	ldr	x2, [sp, #184]
   2d0c4:	sub	x0, x0, x1
   2d0c8:	ldr	x1, [sp, #184]
   2d0cc:	add	x1, x1, x0
   2d0d0:	ldr	w0, [x2, x0]
   2d0d4:	ldr	w2, [sp, #240]
   2d0d8:	cmp	w2, w0
   2d0dc:	b.ne	2d100 <ZSTD_compress@@Base+0x1e8b4>  // b.any
   2d0e0:	ldr	x3, [sp, #208]
   2d0e4:	mov	x2, x21
   2d0e8:	ldr	x4, [sp, #248]
   2d0ec:	add	x1, x1, #0x4
   2d0f0:	mov	x0, x25
   2d0f4:	str	x6, [sp, #360]
   2d0f8:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2d0fc:	b	2c49c <ZSTD_compress@@Base+0x1dc50>
   2d100:	mov	w0, #0x0                   	// #0
   2d104:	b	2c4a4 <ZSTD_compress@@Base+0x1dc58>
   2d108:	and	w10, w22, w26
   2d10c:	cmp	x9, x11
   2d110:	ldr	x0, [sp, #120]
   2d114:	ubfiz	x10, x10, #3, #31
   2d118:	csel	x23, x9, x11, ls  // ls = plast
   2d11c:	mov	x2, x21
   2d120:	add	x12, x0, x10
   2d124:	str	x6, [sp, #152]
   2d128:	ldr	x0, [sp, #128]
   2d12c:	add	x25, x0, w26, uxtw
   2d130:	add	x0, x20, x23
   2d134:	add	x1, x25, x23
   2d138:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2d13c:	ldr	x6, [sp, #152]
   2d140:	add	x23, x23, x0
   2d144:	cmp	x23, x6
   2d148:	b.ls	2d194 <ZSTD_compress@@Base+0x1e948>  // b.plast
   2d14c:	ldr	w0, [sp, #160]
   2d150:	mov	w2, w23
   2d154:	sub	w0, w0, w26
   2d158:	cmp	x23, x0
   2d15c:	b.ls	2d168 <ZSTD_compress@@Base+0x1e91c>  // b.plast
   2d160:	add	w0, w26, w23
   2d164:	str	w0, [sp, #160]
   2d168:	ubfiz	x0, x13, #3, #32
   2d16c:	sub	w3, w7, w26
   2d170:	add	x1, x28, x0
   2d174:	cmp	x23, #0x1, lsl #12
   2d178:	add	w13, w13, #0x1
   2d17c:	mov	x6, x23
   2d180:	str	w3, [x28, x0]
   2d184:	str	w2, [x1, #4]
   2d188:	add	x1, x20, x23
   2d18c:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2d190:	b.eq	2d1f8 <ZSTD_compress@@Base+0x1e9ac>  // b.none
   2d194:	ldrb	w1, [x25, x23]
   2d198:	ldrb	w0, [x20, x23]
   2d19c:	cmp	w1, w0
   2d1a0:	b.cs	2d1d0 <ZSTD_compress@@Base+0x1e984>  // b.hs, b.nlast
   2d1a4:	ldr	x0, [sp, #200]
   2d1a8:	str	w26, [x0]
   2d1ac:	ldr	w0, [sp, #264]
   2d1b0:	cmp	w26, w0
   2d1b4:	b.ls	2d200 <ZSTD_compress@@Base+0x1e9b4>  // b.plast
   2d1b8:	ldr	w26, [x12, #4]
   2d1bc:	add	x0, x12, #0x4
   2d1c0:	str	x0, [sp, #200]
   2d1c4:	sub	w15, w15, #0x1
   2d1c8:	mov	x9, x23
   2d1cc:	b	2c514 <ZSTD_compress@@Base+0x1dcc8>
   2d1d0:	ldr	w0, [sp, #264]
   2d1d4:	str	w26, [x18]
   2d1d8:	cmp	w26, w0
   2d1dc:	b.ls	2d20c <ZSTD_compress@@Base+0x1e9c0>  // b.plast
   2d1e0:	ldr	x0, [sp, #120]
   2d1e4:	mov	x11, x23
   2d1e8:	mov	x18, x12
   2d1ec:	mov	x23, x9
   2d1f0:	ldr	w26, [x0, x10]
   2d1f4:	b	2d1c4 <ZSTD_compress@@Base+0x1e978>
   2d1f8:	mov	w15, #0x0                   	// #0
   2d1fc:	b	2c528 <ZSTD_compress@@Base+0x1dcdc>
   2d200:	add	x0, sp, #0x1c0
   2d204:	str	x0, [sp, #200]
   2d208:	b	2c528 <ZSTD_compress@@Base+0x1dcdc>
   2d20c:	add	x18, sp, #0x1c0
   2d210:	b	2c528 <ZSTD_compress@@Base+0x1dcdc>
   2d214:	ldr	w18, [x5, x22]
   2d218:	mov	x24, x27
   2d21c:	b	2c678 <ZSTD_compress@@Base+0x1de2c>
   2d220:	mov	w2, w26
   2d224:	mov	x0, x20
   2d228:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   2d22c:	lsl	x0, x0, #2
   2d230:	str	x0, [sp, #264]
   2d234:	mov	w7, #0x1                   	// #1
   2d238:	ldr	x0, [sp, #152]
   2d23c:	sub	w8, w11, #0x1
   2d240:	ldr	x1, [sp, #264]
   2d244:	ldr	w22, [x27, #4]
   2d248:	ldr	w2, [x19, #184]
   2d24c:	ldr	w26, [x0, x1]
   2d250:	sub	w22, w22, #0x1
   2d254:	ldr	x0, [sp, #128]
   2d258:	lsl	w22, w7, w22
   2d25c:	sub	w22, w22, #0x1
   2d260:	mov	w1, w15
   2d264:	cmp	w22, w15
   2d268:	add	x0, x0, w11, uxtw
   2d26c:	str	x0, [sp, #240]
   2d270:	sub	w0, w15, w22
   2d274:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   2d278:	str	w0, [sp, #256]
   2d27c:	mov	x0, x19
   2d280:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   2d284:	cmp	w0, #0x0
   2d288:	and	w18, w22, w15
   2d28c:	csel	w1, w0, w7, ne  // ne = any
   2d290:	str	w1, [sp, #272]
   2d294:	ldr	x1, [sp, #120]
   2d298:	ubfiz	x18, x18, #3, #31
   2d29c:	mov	w13, #0x0                   	// #0
   2d2a0:	add	x1, x1, x18
   2d2a4:	str	x1, [sp, #200]
   2d2a8:	ldr	x1, [sp, #120]
   2d2ac:	add	x18, x18, #0x4
   2d2b0:	add	x18, x1, x18
   2d2b4:	add	w1, w15, #0x9
   2d2b8:	str	w1, [sp, #160]
   2d2bc:	ldr	w1, [x27, #12]
   2d2c0:	ldr	x27, [x19, #176]
   2d2c4:	lsl	w1, w7, w1
   2d2c8:	str	w1, [sp, #280]
   2d2cc:	ldr	x1, [x27, #8]
   2d2d0:	str	x1, [sp, #184]
   2d2d4:	ldr	x1, [x27]
   2d2d8:	str	x1, [sp, #208]
   2d2dc:	ldr	x2, [sp, #184]
   2d2e0:	sub	x25, x1, x2
   2d2e4:	ldr	w1, [x27, #28]
   2d2e8:	str	w1, [sp, #216]
   2d2ec:	sub	w1, w0, w25
   2d2f0:	str	w1, [sp, #248]
   2d2f4:	ldr	w1, [x27, #188]
   2d2f8:	ldr	w2, [x27, #192]
   2d2fc:	sub	w1, w1, #0x1
   2d300:	str	w2, [sp, #296]
   2d304:	lsl	w7, w7, w1
   2d308:	sub	w1, w7, #0x1
   2d30c:	str	w1, [sp, #224]
   2d310:	ldr	w1, [sp, #216]
   2d314:	ldr	w3, [sp, #224]
   2d318:	ldr	w2, [sp, #224]
   2d31c:	sub	w1, w25, w1
   2d320:	cmp	w3, w1
   2d324:	ldr	w3, [sp, #216]
   2d328:	sub	w2, w25, w2
   2d32c:	csel	w2, w2, w3, cc  // cc = lo, ul, last
   2d330:	str	w2, [sp, #316]
   2d334:	ldr	w2, [sp, #192]
   2d338:	mov	w3, #0x4                   	// #4
   2d33c:	ldrb	w23, [sp, #136]
   2d340:	sub	w24, w2, #0x1
   2d344:	ldr	w2, [sp, #136]
   2d348:	cmp	w2, #0x0
   2d34c:	mov	w2, #0x3                   	// #3
   2d350:	csel	w2, w3, w2, ne  // ne = any
   2d354:	str	w2, [sp, #304]
   2d358:	sub	w2, w15, w11
   2d35c:	str	w2, [sp, #320]
   2d360:	sub	w2, w15, w0
   2d364:	sub	w0, w0, w25
   2d368:	add	w1, w2, w1
   2d36c:	str	w1, [sp, #328]
   2d370:	sub	w1, w8, w15
   2d374:	add	x8, x20, #0x4
   2d378:	str	x0, [sp, #344]
   2d37c:	str	w1, [sp, #384]
   2d380:	str	w23, [sp, #352]
   2d384:	cmp	w23, #0x3
   2d388:	ldr	x0, [sp, #104]
   2d38c:	b.ne	2d5b8 <ZSTD_compress@@Base+0x1ed6c>  // b.any
   2d390:	ldr	w0, [x0]
   2d394:	sub	w0, w0, #0x1
   2d398:	ldr	w1, [sp, #320]
   2d39c:	sub	w2, w0, #0x1
   2d3a0:	cmp	w2, w1
   2d3a4:	b.cs	2d5c0 <ZSTD_compress@@Base+0x1ed74>  // b.hs, b.nlast
   2d3a8:	mov	w1, w0
   2d3ac:	sub	x0, x20, w0, uxtw
   2d3b0:	ldr	w2, [x0]
   2d3b4:	ldr	w0, [x20]
   2d3b8:	cmp	w2, w0
   2d3bc:	b.ne	2d620 <ZSTD_compress@@Base+0x1edd4>  // b.any
   2d3c0:	mov	x0, #0x4                   	// #4
   2d3c4:	sub	x1, x0, x1
   2d3c8:	mov	x2, x21
   2d3cc:	add	x1, x20, x1
   2d3d0:	mov	x0, x8
   2d3d4:	str	x8, [sp, #352]
   2d3d8:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2d3dc:	ldr	x8, [sp, #352]
   2d3e0:	add	w0, w0, #0x4
   2d3e4:	mov	w1, w0
   2d3e8:	cmp	x24, w0, uxtw
   2d3ec:	b.cs	2d424 <ZSTD_compress@@Base+0x1ebd8>  // b.hs, b.nlast
   2d3f0:	ubfiz	x2, x13, #3, #32
   2d3f4:	ldr	w5, [sp, #136]
   2d3f8:	add	x3, x28, x2
   2d3fc:	add	w13, w13, #0x1
   2d400:	sub	w4, w23, w5
   2d404:	str	w4, [x28, x2]
   2d408:	add	x2, x20, x1
   2d40c:	cmp	x2, x21
   2d410:	ldr	w2, [sp, #176]
   2d414:	str	w0, [x3, #4]
   2d418:	ccmp	w0, w2, #0x2, ne  // ne = any
   2d41c:	b.hi	2cf74 <ZSTD_compress@@Base+0x1e728>  // b.pmore
   2d420:	mov	x24, x1
   2d424:	ldr	w0, [sp, #304]
   2d428:	add	x23, x23, #0x1
   2d42c:	cmp	w0, w23
   2d430:	b.hi	2d380 <ZSTD_compress@@Base+0x1eb34>  // b.pmore
   2d434:	ldr	x0, [sp, #152]
   2d438:	add	w12, w14, #0x2
   2d43c:	ldr	x1, [sp, #264]
   2d440:	mov	x9, #0x0                   	// #0
   2d444:	mov	x7, #0x0                   	// #0
   2d448:	str	w15, [x0, x1]
   2d44c:	ldr	w0, [sp, #280]
   2d450:	sub	w23, w0, #0x1
   2d454:	cmn	w23, #0x1
   2d458:	b.eq	2d468 <ZSTD_compress@@Base+0x1ec1c>  // b.none
   2d45c:	ldr	w0, [sp, #272]
   2d460:	cmp	w0, w26
   2d464:	b.ls	2d628 <ZSTD_compress@@Base+0x1eddc>  // b.plast
   2d468:	ldr	x0, [sp, #200]
   2d46c:	str	wzr, [x18]
   2d470:	str	wzr, [x0]
   2d474:	cbz	w23, 2c680 <ZSTD_compress@@Base+0x1de34>
   2d478:	ldr	w1, [sp, #296]
   2d47c:	mov	x0, x20
   2d480:	mov	w2, #0x5                   	// #5
   2d484:	and	x25, x25, #0xffffffff
   2d488:	mov	x26, #0x0                   	// #0
   2d48c:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   2d490:	add	w7, w14, #0x2
   2d494:	ldr	x1, [x27, #48]
   2d498:	ldr	w9, [sp, #248]
   2d49c:	ldr	x5, [x27, #64]
   2d4a0:	mov	x27, #0x0                   	// #0
   2d4a4:	ldr	w15, [x1, x0, lsl #2]
   2d4a8:	ldr	w0, [sp, #216]
   2d4ac:	cmp	w0, w15
   2d4b0:	b.cs	2c680 <ZSTD_compress@@Base+0x1de34>  // b.hs, b.nlast
   2d4b4:	ldr	w0, [sp, #224]
   2d4b8:	cmp	x27, x26
   2d4bc:	ldr	x3, [sp, #208]
   2d4c0:	and	w18, w0, w15
   2d4c4:	ldr	x0, [sp, #184]
   2d4c8:	ubfiz	x18, x18, #3, #31
   2d4cc:	ldr	x4, [sp, #240]
   2d4d0:	csel	x14, x27, x26, ls  // ls = plast
   2d4d4:	add	x6, x0, w15, uxtw
   2d4d8:	add	x8, x5, x18
   2d4dc:	add	x1, x6, x14
   2d4e0:	mov	w22, w15
   2d4e4:	add	x0, x20, x14
   2d4e8:	mov	x2, x21
   2d4ec:	str	x6, [sp, #120]
   2d4f0:	str	x8, [sp, #152]
   2d4f4:	str	x5, [sp, #176]
   2d4f8:	str	x9, [sp, #200]
   2d4fc:	str	w7, [sp, #256]
   2d500:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2d504:	add	x14, x14, x0
   2d508:	ldr	w7, [sp, #256]
   2d50c:	add	x0, x22, x14
   2d510:	cmp	x0, x25
   2d514:	ldr	x6, [sp, #120]
   2d518:	ldr	x8, [sp, #152]
   2d51c:	ldr	x5, [sp, #176]
   2d520:	ldr	x9, [sp, #200]
   2d524:	b.cc	2d534 <ZSTD_compress@@Base+0x1ece8>  // b.lo, b.ul, b.last
   2d528:	ldr	x0, [sp, #128]
   2d52c:	add	x22, x9, x22
   2d530:	add	x6, x0, x22
   2d534:	cmp	x14, x24
   2d538:	b.ls	2d588 <ZSTD_compress@@Base+0x1ed3c>  // b.plast
   2d53c:	ldr	w0, [sp, #248]
   2d540:	add	w1, w0, w15
   2d544:	ldr	w0, [sp, #160]
   2d548:	sub	w0, w0, w1
   2d54c:	cmp	x14, x0
   2d550:	b.ls	2d55c <ZSTD_compress@@Base+0x1ed10>  // b.plast
   2d554:	add	w0, w1, w14
   2d558:	str	w0, [sp, #160]
   2d55c:	ubfiz	x0, x13, #3, #32
   2d560:	sub	w1, w7, w1
   2d564:	add	x2, x28, x0
   2d568:	cmp	x14, #0x1, lsl #12
   2d56c:	add	w13, w13, #0x1
   2d570:	str	w1, [x28, x0]
   2d574:	add	x1, x20, x14
   2d578:	str	w14, [x2, #4]
   2d57c:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2d580:	b.eq	2c680 <ZSTD_compress@@Base+0x1de34>  // b.none
   2d584:	mov	x24, x14
   2d588:	ldr	w0, [sp, #316]
   2d58c:	cmp	w0, w15
   2d590:	b.cs	2c680 <ZSTD_compress@@Base+0x1de34>  // b.hs, b.nlast
   2d594:	ldrb	w1, [x6, x14]
   2d598:	ldrb	w0, [x20, x14]
   2d59c:	cmp	w1, w0
   2d5a0:	b.cs	2d72c <ZSTD_compress@@Base+0x1eee0>  // b.hs, b.nlast
   2d5a4:	ldr	w15, [x8, #4]
   2d5a8:	mov	x26, x14
   2d5ac:	subs	w23, w23, #0x1
   2d5b0:	b.ne	2d4a8 <ZSTD_compress@@Base+0x1ec5c>  // b.any
   2d5b4:	b	2c680 <ZSTD_compress@@Base+0x1de34>
   2d5b8:	ldr	w0, [x0, x23, lsl #2]
   2d5bc:	b	2d398 <ZSTD_compress@@Base+0x1eb4c>
   2d5c0:	ldr	w3, [sp, #328]
   2d5c4:	ldr	w1, [sp, #384]
   2d5c8:	cmp	w2, w3
   2d5cc:	add	w1, w1, w0
   2d5d0:	ccmp	w1, #0x2, #0x0, cc  // cc = lo, ul, last
   2d5d4:	b.ls	2d620 <ZSTD_compress@@Base+0x1edd4>  // b.plast
   2d5d8:	ldr	x1, [sp, #344]
   2d5dc:	sub	w0, w14, w0
   2d5e0:	ldr	x2, [sp, #184]
   2d5e4:	sub	x0, x0, x1
   2d5e8:	ldr	x1, [sp, #184]
   2d5ec:	ldr	w2, [x2, x0]
   2d5f0:	add	x1, x1, x0
   2d5f4:	ldr	w0, [x20]
   2d5f8:	cmp	w2, w0
   2d5fc:	b.ne	2d620 <ZSTD_compress@@Base+0x1edd4>  // b.any
   2d600:	ldr	x3, [sp, #208]
   2d604:	mov	x2, x21
   2d608:	ldr	x4, [sp, #240]
   2d60c:	add	x1, x1, #0x4
   2d610:	mov	x0, x8
   2d614:	str	x8, [sp, #352]
   2d618:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2d61c:	b	2d3dc <ZSTD_compress@@Base+0x1eb90>
   2d620:	mov	w0, #0x0                   	// #0
   2d624:	b	2d3e4 <ZSTD_compress@@Base+0x1eb98>
   2d628:	and	w8, w22, w26
   2d62c:	cmp	x7, x9
   2d630:	ldr	x0, [sp, #120]
   2d634:	ubfiz	x8, x8, #3, #31
   2d638:	csel	x15, x7, x9, ls  // ls = plast
   2d63c:	mov	x2, x21
   2d640:	add	x10, x0, x8
   2d644:	ldr	x0, [sp, #128]
   2d648:	add	x11, x0, w26, uxtw
   2d64c:	add	x0, x20, x15
   2d650:	add	x1, x11, x15
   2d654:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2d658:	add	x0, x15, x0
   2d65c:	cmp	x0, x24
   2d660:	b.ls	2d6ac <ZSTD_compress@@Base+0x1ee60>  // b.plast
   2d664:	ldr	w1, [sp, #160]
   2d668:	mov	w3, w0
   2d66c:	sub	w1, w1, w26
   2d670:	cmp	x0, x1
   2d674:	b.ls	2d680 <ZSTD_compress@@Base+0x1ee34>  // b.plast
   2d678:	add	w1, w26, w0
   2d67c:	str	w1, [sp, #160]
   2d680:	ubfiz	x1, x13, #3, #32
   2d684:	sub	w4, w12, w26
   2d688:	add	x2, x28, x1
   2d68c:	cmp	x0, #0x1, lsl #12
   2d690:	add	w13, w13, #0x1
   2d694:	mov	x24, x0
   2d698:	str	w4, [x28, x1]
   2d69c:	add	x1, x20, x0
   2d6a0:	str	w3, [x2, #4]
   2d6a4:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2d6a8:	b.eq	2d710 <ZSTD_compress@@Base+0x1eec4>  // b.none
   2d6ac:	ldrb	w2, [x11, x0]
   2d6b0:	ldrb	w1, [x20, x0]
   2d6b4:	cmp	w2, w1
   2d6b8:	b.cs	2d6e8 <ZSTD_compress@@Base+0x1ee9c>  // b.hs, b.nlast
   2d6bc:	ldr	x1, [sp, #200]
   2d6c0:	str	w26, [x1]
   2d6c4:	ldr	w1, [sp, #256]
   2d6c8:	cmp	w26, w1
   2d6cc:	b.ls	2d718 <ZSTD_compress@@Base+0x1eecc>  // b.plast
   2d6d0:	ldr	w26, [x10, #4]
   2d6d4:	add	x1, x10, #0x4
   2d6d8:	str	x1, [sp, #200]
   2d6dc:	sub	w23, w23, #0x1
   2d6e0:	mov	x7, x0
   2d6e4:	b	2d454 <ZSTD_compress@@Base+0x1ec08>
   2d6e8:	ldr	w1, [sp, #256]
   2d6ec:	str	w26, [x18]
   2d6f0:	cmp	w26, w1
   2d6f4:	b.ls	2d724 <ZSTD_compress@@Base+0x1eed8>  // b.plast
   2d6f8:	ldr	x1, [sp, #120]
   2d6fc:	mov	x9, x0
   2d700:	mov	x18, x10
   2d704:	mov	x0, x7
   2d708:	ldr	w26, [x1, x8]
   2d70c:	b	2d6dc <ZSTD_compress@@Base+0x1ee90>
   2d710:	mov	w23, #0x0                   	// #0
   2d714:	b	2d468 <ZSTD_compress@@Base+0x1ec1c>
   2d718:	add	x0, sp, #0x1c0
   2d71c:	str	x0, [sp, #200]
   2d720:	b	2d468 <ZSTD_compress@@Base+0x1ec1c>
   2d724:	add	x18, sp, #0x1c0
   2d728:	b	2d468 <ZSTD_compress@@Base+0x1ec1c>
   2d72c:	ldr	w15, [x5, x18]
   2d730:	mov	x27, x14
   2d734:	b	2d5ac <ZSTD_compress@@Base+0x1ed60>
   2d738:	ldr	w0, [x0, x23, lsl #2]
   2d73c:	b	2c82c <ZSTD_compress@@Base+0x1dfe0>
   2d740:	ldr	w3, [sp, #328]
   2d744:	ldr	w1, [sp, #384]
   2d748:	cmp	w2, w3
   2d74c:	add	w1, w1, w0
   2d750:	ccmp	w1, #0x2, #0x0, cc  // cc = lo, ul, last
   2d754:	b.ls	2d7a0 <ZSTD_compress@@Base+0x1ef54>  // b.plast
   2d758:	ldr	x1, [sp, #344]
   2d75c:	sub	w0, w14, w0
   2d760:	ldr	x2, [sp, #184]
   2d764:	sub	x0, x0, x1
   2d768:	ldr	x1, [sp, #184]
   2d76c:	ldr	w2, [x2, x0]
   2d770:	add	x1, x1, x0
   2d774:	ldr	w0, [x20]
   2d778:	cmp	w2, w0
   2d77c:	b.ne	2d7a0 <ZSTD_compress@@Base+0x1ef54>  // b.any
   2d780:	ldr	x3, [sp, #208]
   2d784:	mov	x2, x21
   2d788:	ldr	x4, [sp, #240]
   2d78c:	add	x1, x1, #0x4
   2d790:	mov	x0, x8
   2d794:	str	x8, [sp, #352]
   2d798:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2d79c:	b	2c870 <ZSTD_compress@@Base+0x1e024>
   2d7a0:	mov	w0, #0x0                   	// #0
   2d7a4:	b	2c878 <ZSTD_compress@@Base+0x1e02c>
   2d7a8:	and	w8, w22, w26
   2d7ac:	cmp	x7, x9
   2d7b0:	ldr	x0, [sp, #120]
   2d7b4:	ubfiz	x8, x8, #3, #31
   2d7b8:	csel	x15, x7, x9, ls  // ls = plast
   2d7bc:	mov	x2, x21
   2d7c0:	add	x10, x0, x8
   2d7c4:	ldr	x0, [sp, #128]
   2d7c8:	add	x11, x0, w26, uxtw
   2d7cc:	add	x0, x20, x15
   2d7d0:	add	x1, x11, x15
   2d7d4:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2d7d8:	add	x0, x15, x0
   2d7dc:	cmp	x0, x24
   2d7e0:	b.ls	2d82c <ZSTD_compress@@Base+0x1efe0>  // b.plast
   2d7e4:	ldr	w1, [sp, #160]
   2d7e8:	mov	w3, w0
   2d7ec:	sub	w1, w1, w26
   2d7f0:	cmp	x0, x1
   2d7f4:	b.ls	2d800 <ZSTD_compress@@Base+0x1efb4>  // b.plast
   2d7f8:	add	w1, w26, w0
   2d7fc:	str	w1, [sp, #160]
   2d800:	ubfiz	x1, x13, #3, #32
   2d804:	sub	w4, w12, w26
   2d808:	add	x2, x28, x1
   2d80c:	cmp	x0, #0x1, lsl #12
   2d810:	add	w13, w13, #0x1
   2d814:	mov	x24, x0
   2d818:	str	w4, [x28, x1]
   2d81c:	add	x1, x20, x0
   2d820:	str	w3, [x2, #4]
   2d824:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2d828:	b.eq	2d890 <ZSTD_compress@@Base+0x1f044>  // b.none
   2d82c:	ldrb	w2, [x11, x0]
   2d830:	ldrb	w1, [x20, x0]
   2d834:	cmp	w2, w1
   2d838:	b.cs	2d868 <ZSTD_compress@@Base+0x1f01c>  // b.hs, b.nlast
   2d83c:	ldr	x1, [sp, #200]
   2d840:	str	w26, [x1]
   2d844:	ldr	w1, [sp, #256]
   2d848:	cmp	w26, w1
   2d84c:	b.ls	2d898 <ZSTD_compress@@Base+0x1f04c>  // b.plast
   2d850:	ldr	w26, [x10, #4]
   2d854:	add	x1, x10, #0x4
   2d858:	str	x1, [sp, #200]
   2d85c:	sub	w23, w23, #0x1
   2d860:	mov	x7, x0
   2d864:	b	2c8e8 <ZSTD_compress@@Base+0x1e09c>
   2d868:	ldr	w1, [sp, #256]
   2d86c:	str	w26, [x18]
   2d870:	cmp	w26, w1
   2d874:	b.ls	2d8a4 <ZSTD_compress@@Base+0x1f058>  // b.plast
   2d878:	ldr	x1, [sp, #120]
   2d87c:	mov	x9, x0
   2d880:	mov	x18, x10
   2d884:	mov	x0, x7
   2d888:	ldr	w26, [x1, x8]
   2d88c:	b	2d85c <ZSTD_compress@@Base+0x1f010>
   2d890:	mov	w23, #0x0                   	// #0
   2d894:	b	2c8fc <ZSTD_compress@@Base+0x1e0b0>
   2d898:	add	x0, sp, #0x1c0
   2d89c:	str	x0, [sp, #200]
   2d8a0:	b	2c8fc <ZSTD_compress@@Base+0x1e0b0>
   2d8a4:	add	x18, sp, #0x1c0
   2d8a8:	b	2c8fc <ZSTD_compress@@Base+0x1e0b0>
   2d8ac:	ldr	w15, [x5, x18]
   2d8b0:	mov	x27, x25
   2d8b4:	b	2ca40 <ZSTD_compress@@Base+0x1e1f4>
   2d8b8:	ldr	x1, [sp, #168]
   2d8bc:	mov	w2, #0x2                   	// #2
   2d8c0:	mov	w0, #0x0                   	// #0
   2d8c4:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   2d8c8:	add	w6, w6, w0
   2d8cc:	ldr	x1, [sp, #96]
   2d8d0:	mov	w0, #0x40000000            	// #1073741824
   2d8d4:	str	w0, [x1, #28]
   2d8d8:	str	w0, [x1, #56]
   2d8dc:	ldr	w1, [sp, #192]
   2d8e0:	cmp	w1, #0x4
   2d8e4:	b.ne	2d8f0 <ZSTD_compress@@Base+0x1f0a4>  // b.any
   2d8e8:	ldr	x1, [sp, #96]
   2d8ec:	str	w0, [x1, #84]
   2d8f0:	ldr	w5, [sp, #192]
   2d8f4:	mov	x7, x28
   2d8f8:	mov	w8, #0x0                   	// #0
   2d8fc:	mov	w10, #0x1c                  	// #28
   2d900:	ldp	w9, w11, [x7]
   2d904:	ldr	w2, [sp, #136]
   2d908:	ldr	x0, [sp, #104]
   2d90c:	mov	w1, w9
   2d910:	bl	205a8 <ZSTD_compress@@Base+0x11d5c>
   2d914:	add	w2, w9, #0x1
   2d918:	clz	w2, w2
   2d91c:	str	w0, [sp, #448]
   2d920:	eor	w2, w2, #0x1f
   2d924:	lsr	x0, x0, #32
   2d928:	add	w3, w2, #0x10
   2d92c:	str	w0, [sp, #452]
   2d930:	sbfiz	x4, x2, #2, #32
   2d934:	str	w1, [sp, #456]
   2d938:	lsl	w3, w3, #8
   2d93c:	cmp	w11, w5
   2d940:	b.cs	2db4c <ZSTD_compress@@Base+0x1f300>  // b.hs, b.nlast
   2d944:	add	w8, w8, #0x1
   2d948:	add	x7, x7, #0x8
   2d94c:	cmp	w13, w8
   2d950:	b.ne	2d900 <ZSTD_compress@@Base+0x1f0b4>  // b.any
   2d954:	sub	w0, w5, #0x1
   2d958:	str	w0, [sp, #160]
   2d95c:	mov	w0, #0x1                   	// #1
   2d960:	str	w0, [sp, #152]
   2d964:	ldr	w1, [sp, #160]
   2d968:	ldr	w0, [sp, #152]
   2d96c:	cmp	w0, w1
   2d970:	b.hi	2da5c <ZSTD_compress@@Base+0x1f210>  // b.pmore
   2d974:	ldr	w0, [sp, #152]
   2d978:	mov	w1, #0x1c                  	// #28
   2d97c:	sub	w9, w0, #0x1
   2d980:	add	x26, x20, w0, uxtw
   2d984:	umull	x9, w9, w1
   2d988:	ldr	x1, [sp, #96]
   2d98c:	add	x8, x1, x9
   2d990:	ldr	w1, [x8, #8]
   2d994:	cbnz	w1, 2dbfc <ZSTD_compress@@Base+0x1f3b0>
   2d998:	ldr	w7, [x8, #12]
   2d99c:	add	w7, w7, #0x1
   2d9a0:	ldr	x2, [sp, #168]
   2d9a4:	sub	x0, x0, #0x1
   2d9a8:	mov	w3, #0x2                   	// #2
   2d9ac:	mov	w1, #0x1                   	// #1
   2d9b0:	add	x0, x20, x0
   2d9b4:	bl	20464 <ZSTD_compress@@Base+0x11c18>
   2d9b8:	mov	w6, w0
   2d9bc:	ldr	x1, [sp, #168]
   2d9c0:	mov	w0, w7
   2d9c4:	mov	w2, #0x2                   	// #2
   2d9c8:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   2d9cc:	add	w6, w6, w0
   2d9d0:	ldr	x1, [sp, #168]
   2d9d4:	mov	w2, #0x2                   	// #2
   2d9d8:	sub	w0, w7, #0x1
   2d9dc:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   2d9e0:	ldr	x1, [sp, #96]
   2d9e4:	ldr	w2, [sp, #152]
   2d9e8:	ldr	w1, [x1, x9]
   2d9ec:	sub	w0, w1, w0
   2d9f0:	mov	w1, #0x1c                  	// #28
   2d9f4:	add	w0, w0, w6
   2d9f8:	umull	x1, w2, w1
   2d9fc:	ldr	x2, [sp, #96]
   2da00:	add	x2, x2, x1
   2da04:	str	x2, [sp, #120]
   2da08:	ldr	x2, [sp, #96]
   2da0c:	ldr	w2, [x2, x1]
   2da10:	cmp	w0, w2
   2da14:	b.gt	2da40 <ZSTD_compress@@Base+0x1f1f4>
   2da18:	ldr	x2, [sp, #120]
   2da1c:	stur	xzr, [x2, #4]
   2da20:	str	w7, [x2, #12]
   2da24:	ldr	x2, [sp, #96]
   2da28:	str	w0, [x2, x1]
   2da2c:	ldr	x2, [sp, #120]
   2da30:	ldr	x0, [x8, #16]
   2da34:	str	x0, [x2, #16]
   2da38:	ldr	w0, [x8, #24]
   2da3c:	str	w0, [x2, #24]
   2da40:	ldr	x0, [sp, #288]
   2da44:	cmp	x0, x26
   2da48:	b.cc	2e9ec <ZSTD_compress@@Base+0x201a0>  // b.lo, b.ul, b.last
   2da4c:	ldr	w0, [sp, #152]
   2da50:	ldr	w2, [sp, #160]
   2da54:	cmp	w0, w2
   2da58:	b.ne	2dc04 <ZSTD_compress@@Base+0x1f3b8>  // b.any
   2da5c:	ldr	w1, [sp, #160]
   2da60:	mov	w0, #0x1c                  	// #28
   2da64:	ldr	x2, [sp, #96]
   2da68:	umaddl	x0, w1, w0, x2
   2da6c:	ldp	x2, x3, [x0]
   2da70:	stp	x2, x3, [sp, #464]
   2da74:	ldr	w2, [x0, #4]
   2da78:	ldr	x1, [x0, #16]
   2da7c:	str	x1, [sp, #480]
   2da80:	ldr	w1, [x0, #24]
   2da84:	str	w1, [sp, #488]
   2da88:	ldp	w1, w0, [x0, #8]
   2da8c:	str	w0, [sp, #196]
   2da90:	ldr	w3, [sp, #160]
   2da94:	mov	w0, w0
   2da98:	add	w0, w1, w0
   2da9c:	subs	w6, w3, w0
   2daa0:	csel	w6, w6, wzr, hi  // hi = pmore
   2daa4:	ldr	w0, [sp, #196]
   2daa8:	add	w24, w6, #0x1
   2daac:	str	w1, [sp, #472]
   2dab0:	mov	w10, w24
   2dab4:	ldr	x1, [sp, #96]
   2dab8:	str	w0, [sp, #476]
   2dabc:	mov	w0, #0x1c                  	// #28
   2dac0:	str	w2, [sp, #468]
   2dac4:	umaddl	x1, w24, w0, x1
   2dac8:	ldp	x2, x3, [sp, #464]
   2dacc:	stp	x2, x3, [x1]
   2dad0:	ldr	x2, [sp, #480]
   2dad4:	str	x2, [x1, #16]
   2dad8:	ldr	w2, [sp, #488]
   2dadc:	str	w2, [x1, #24]
   2dae0:	cbz	w6, 2db20 <ZSTD_compress@@Base+0x1f2d4>
   2dae4:	ldr	x1, [sp, #96]
   2dae8:	sub	w10, w10, #0x1
   2daec:	umaddl	x1, w6, w0, x1
   2daf0:	ldp	w4, w2, [x1, #8]
   2daf4:	add	w4, w4, w2
   2daf8:	ldr	x2, [sp, #96]
   2dafc:	cmp	w6, w4
   2db00:	umaddl	x5, w10, w0, x2
   2db04:	ldp	x2, x3, [x1]
   2db08:	stp	x2, x3, [x5]
   2db0c:	ldr	x2, [x1, #16]
   2db10:	str	x2, [x5, #16]
   2db14:	ldr	w1, [x1, #24]
   2db18:	str	w1, [x5, #24]
   2db1c:	b.hi	2f50c <ZSTD_compress@@Base+0x20cc0>  // b.pmore
   2db20:	mov	x13, #0xffff                	// #65535
   2db24:	sub	x12, x21, #0x20
   2db28:	mov	w15, w13
   2db2c:	mov	w14, #0x1c                  	// #28
   2db30:	mov	w18, #0x2                   	// #2
   2db34:	cmp	w24, w10
   2db38:	b.cs	2f514 <ZSTD_compress@@Base+0x20cc8>  // b.hs, b.nlast
   2db3c:	ldr	x0, [sp, #168]
   2db40:	mov	w1, #0x2                   	// #2
   2db44:	bl	203b8 <ZSTD_compress@@Base+0x11b6c>
   2db48:	b	2c1f4 <ZSTD_compress@@Base+0x1d9a8>
   2db4c:	ldr	w0, [x19, #152]
   2db50:	add	x15, x19, #0x48
   2db54:	sub	w18, w5, #0x3
   2db58:	cmp	w0, #0x1
   2db5c:	b.ne	2dba8 <ZSTD_compress@@Base+0x1f35c>  // b.any
   2db60:	mov	w0, w18
   2db64:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   2db68:	add	w0, w3, w0
   2db6c:	ldr	x1, [sp, #96]
   2db70:	umull	x12, w5, w10
   2db74:	ldr	w14, [sp, #196]
   2db78:	add	w0, w6, w0
   2db7c:	add	x1, x1, x12
   2db80:	str	w14, [x1, #12]
   2db84:	ldr	x14, [sp, #96]
   2db88:	stp	w9, w5, [x1, #4]
   2db8c:	add	w5, w5, #0x1
   2db90:	str	w0, [x14, x12]
   2db94:	ldr	x0, [sp, #448]
   2db98:	str	x0, [x1, #16]
   2db9c:	ldr	w0, [sp, #456]
   2dba0:	str	w0, [x1, #24]
   2dba4:	b	2d93c <ZSTD_compress@@Base+0x1f0f0>
   2dba8:	ldr	x0, [x15, #24]
   2dbac:	ldr	w0, [x0, x4]
   2dbb0:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   2dbb4:	mov	w14, w0
   2dbb8:	mov	w0, w18
   2dbbc:	bl	2043c <ZSTD_compress@@Base+0x11bf0>
   2dbc0:	mov	w18, w0
   2dbc4:	ldp	w1, w12, [x15, #72]
   2dbc8:	add	w12, w12, w1
   2dbcc:	ldr	x1, [x15, #16]
   2dbd0:	ldr	w0, [x1, w0, uxtw #2]
   2dbd4:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   2dbd8:	add	w0, w14, w0
   2dbdc:	ldr	x1, [sp, #336]
   2dbe0:	sub	w0, w12, w0
   2dbe4:	ldr	w1, [x1, x18, lsl #2]
   2dbe8:	add	w1, w2, w1
   2dbec:	lsl	w1, w1, #8
   2dbf0:	add	w1, w1, #0x33
   2dbf4:	add	w0, w1, w0
   2dbf8:	b	2db6c <ZSTD_compress@@Base+0x1f320>
   2dbfc:	mov	w7, #0x1                   	// #1
   2dc00:	b	2d9a0 <ZSTD_compress@@Base+0x1f154>
   2dc04:	ldr	x0, [sp, #120]
   2dc08:	ldr	w22, [x0, #8]
   2dc0c:	cbnz	w22, 2e0ac <ZSTD_compress@@Base+0x1f860>
   2dc10:	ldr	w0, [x0, #12]
   2dc14:	str	w0, [sp, #196]
   2dc18:	ldr	x25, [x19, #8]
   2dc1c:	ldr	w24, [x19, #36]
   2dc20:	add	x0, x25, w24, uxtw
   2dc24:	cmp	x26, x0
   2dc28:	b.cc	2e9ec <ZSTD_compress@@Base+0x201a0>  // b.lo, b.ul, b.last
   2dc2c:	ldr	x0, [sp, #96]
   2dc30:	add	x23, x19, #0xb8
   2dc34:	mov	w2, #0x2                   	// #2
   2dc38:	ldr	w0, [x0, x1]
   2dc3c:	ldr	x1, [sp, #168]
   2dc40:	str	w0, [sp, #384]
   2dc44:	mov	w0, #0x0                   	// #0
   2dc48:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   2dc4c:	ldr	w27, [x23, #16]
   2dc50:	sub	x5, x26, x25
   2dc54:	str	w0, [sp, #344]
   2dc58:	mov	w6, w5
   2dc5c:	cmp	w6, w24
   2dc60:	b.hi	2e0b4 <ZSTD_compress@@Base+0x1f868>  // b.pmore
   2dc64:	cmp	w22, #0x0
   2dc68:	mov	w1, #0xfff                 	// #4095
   2dc6c:	cset	w0, ne  // ne = any
   2dc70:	str	w0, [sp, #136]
   2dc74:	ldr	x0, [sp, #120]
   2dc78:	str	w5, [x19, #36]
   2dc7c:	add	x0, x0, #0x10
   2dc80:	str	x0, [sp, #216]
   2dc84:	ldr	w0, [x23, #20]
   2dc88:	cmp	w0, #0xfff
   2dc8c:	csel	w0, w0, w1, ls  // ls = plast
   2dc90:	str	w0, [sp, #200]
   2dc94:	ldr	x0, [x19, #8]
   2dc98:	str	x0, [sp, #128]
   2dc9c:	ldr	w1, [x23, #8]
   2dca0:	cmp	w27, #0x5
   2dca4:	sub	x15, x26, x0
   2dca8:	ldr	x0, [x19, #48]
   2dcac:	str	x0, [sp, #176]
   2dcb0:	mov	w14, w15
   2dcb4:	b.eq	2eca0 <ZSTD_compress@@Base+0x20454>  // b.none
   2dcb8:	b.hi	2e0e4 <ZSTD_compress@@Base+0x1f898>  // b.pmore
   2dcbc:	cmp	w27, #0x3
   2dcc0:	b.eq	2e4b4 <ZSTD_compress@@Base+0x1fc68>  // b.none
   2dcc4:	mov	x25, x26
   2dcc8:	neg	w1, w1
   2dccc:	ldr	w22, [x19, #188]
   2dcd0:	mov	w7, #0x1                   	// #1
   2dcd4:	ldr	w12, [x19, #24]
   2dcd8:	ldr	w0, [x25], #4
   2dcdc:	sub	w22, w22, #0x1
   2dce0:	str	w0, [sp, #280]
   2dce4:	sub	w5, w12, #0x1
   2dce8:	mov	w0, #0x79b1                	// #31153
   2dcec:	lsl	w22, w7, w22
   2dcf0:	ldr	w2, [sp, #280]
   2dcf4:	movk	w0, #0x9e37, lsl #16
   2dcf8:	mul	w0, w2, w0
   2dcfc:	ldr	w2, [x19, #184]
   2dd00:	lsr	w1, w0, w1
   2dd04:	ubfiz	x0, x1, #2, #32
   2dd08:	str	x0, [sp, #320]
   2dd0c:	ldr	x0, [sp, #176]
   2dd10:	ldr	x1, [sp, #320]
   2dd14:	ldr	w23, [x0, x1]
   2dd18:	ldr	x0, [x19, #64]
   2dd1c:	str	x0, [sp, #224]
   2dd20:	sub	w0, w22, #0x1
   2dd24:	str	w0, [sp, #232]
   2dd28:	ldr	x0, [sp, #128]
   2dd2c:	ldr	w1, [sp, #232]
   2dd30:	add	x0, x0, w12, uxtw
   2dd34:	str	x0, [sp, #296]
   2dd38:	ldr	w0, [sp, #232]
   2dd3c:	cmp	w1, w15
   2dd40:	mov	w1, w15
   2dd44:	sub	w0, w15, w0
   2dd48:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   2dd4c:	str	w0, [sp, #316]
   2dd50:	mov	x0, x19
   2dd54:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   2dd58:	cmp	w0, #0x0
   2dd5c:	mov	w13, #0x0                   	// #0
   2dd60:	csel	w1, w0, w7, ne  // ne = any
   2dd64:	str	w1, [sp, #328]
   2dd68:	ldr	w1, [sp, #232]
   2dd6c:	ldr	x24, [x19, #176]
   2dd70:	and	w18, w1, w15
   2dd74:	ldr	x1, [sp, #224]
   2dd78:	ubfiz	x18, x18, #3, #31
   2dd7c:	add	x1, x1, x18
   2dd80:	str	x1, [sp, #248]
   2dd84:	ldr	x1, [sp, #224]
   2dd88:	add	x18, x18, #0x4
   2dd8c:	add	x18, x1, x18
   2dd90:	add	w1, w15, #0x9
   2dd94:	str	w1, [sp, #208]
   2dd98:	ldr	w1, [x19, #196]
   2dd9c:	lsl	w1, w7, w1
   2dda0:	str	w1, [sp, #352]
   2dda4:	ldr	x1, [x24, #8]
   2dda8:	str	x1, [sp, #240]
   2ddac:	ldr	x1, [x24]
   2ddb0:	str	x1, [sp, #256]
   2ddb4:	ldr	x2, [sp, #240]
   2ddb8:	sub	x22, x1, x2
   2ddbc:	ldr	w1, [x24, #28]
   2ddc0:	ldr	w2, [x24, #192]
   2ddc4:	str	w1, [sp, #264]
   2ddc8:	sub	w1, w0, w22
   2ddcc:	str	w1, [sp, #304]
   2ddd0:	str	w2, [sp, #360]
   2ddd4:	ldr	w1, [x24, #188]
   2ddd8:	ldrb	w10, [sp, #136]
   2dddc:	sub	w1, w1, #0x1
   2dde0:	lsl	w7, w7, w1
   2dde4:	sub	w1, w7, #0x1
   2dde8:	str	w1, [sp, #272]
   2ddec:	ldr	w1, [sp, #264]
   2ddf0:	ldr	w3, [sp, #272]
   2ddf4:	sub	w1, w22, w1
   2ddf8:	ldr	w2, [sp, #272]
   2ddfc:	cmp	w3, w1
   2de00:	ldr	w3, [sp, #264]
   2de04:	sub	w2, w22, w2
   2de08:	csel	w2, w2, w3, cc  // cc = lo, ul, last
   2de0c:	str	w2, [sp, #376]
   2de10:	ldr	w2, [sp, #192]
   2de14:	mov	w3, #0x4                   	// #4
   2de18:	sub	w2, w2, #0x1
   2de1c:	str	x2, [sp, #184]
   2de20:	ldr	w2, [sp, #136]
   2de24:	cmp	w2, #0x0
   2de28:	mov	w2, #0x3                   	// #3
   2de2c:	csel	w2, w3, w2, ne  // ne = any
   2de30:	str	w2, [sp, #368]
   2de34:	ldr	x2, [sp, #120]
   2de38:	add	x2, x2, #0x10
   2de3c:	str	x2, [sp, #392]
   2de40:	sub	w2, w14, w12
   2de44:	str	w2, [sp, #388]
   2de48:	sub	w2, w14, w0
   2de4c:	sub	w0, w0, w22
   2de50:	add	w1, w2, w1
   2de54:	str	w1, [sp, #400]
   2de58:	sub	w1, w5, w14
   2de5c:	str	w1, [sp, #408]
   2de60:	str	x0, [sp, #416]
   2de64:	mov	w27, w10
   2de68:	cmp	w10, #0x3
   2de6c:	b.ne	2eb14 <ZSTD_compress@@Base+0x202c8>  // b.any
   2de70:	ldr	x0, [sp, #120]
   2de74:	ldr	w0, [x0, #16]
   2de78:	sub	w0, w0, #0x1
   2de7c:	ldr	w1, [sp, #388]
   2de80:	sub	w2, w0, #0x1
   2de84:	cmp	w2, w1
   2de88:	b.cs	2eb20 <ZSTD_compress@@Base+0x202d4>  // b.hs, b.nlast
   2de8c:	mov	w1, w0
   2de90:	sub	x0, x26, w0, uxtw
   2de94:	ldr	w2, [sp, #280]
   2de98:	ldr	w0, [x0]
   2de9c:	cmp	w2, w0
   2dea0:	b.ne	2eb80 <ZSTD_compress@@Base+0x20334>  // b.any
   2dea4:	mov	x0, #0x4                   	// #4
   2dea8:	sub	x1, x0, x1
   2deac:	mov	x2, x21
   2deb0:	add	x1, x26, x1
   2deb4:	mov	x0, x25
   2deb8:	str	x10, [sp, #424]
   2debc:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2dec0:	ldr	x10, [sp, #424]
   2dec4:	add	w0, w0, #0x4
   2dec8:	ldr	x2, [sp, #184]
   2decc:	mov	w1, w0
   2ded0:	cmp	x2, w0, uxtw
   2ded4:	b.cs	2df0c <ZSTD_compress@@Base+0x1f6c0>  // b.hs, b.nlast
   2ded8:	ubfiz	x2, x13, #3, #32
   2dedc:	ldr	w4, [sp, #136]
   2dee0:	add	x3, x28, x2
   2dee4:	add	w13, w13, #0x1
   2dee8:	sub	w27, w27, w4
   2deec:	str	w27, [x28, x2]
   2def0:	add	x2, x26, x1
   2def4:	cmp	x2, x21
   2def8:	ldr	w2, [sp, #200]
   2defc:	str	w0, [x3, #4]
   2df00:	ccmp	w0, w2, #0x2, ne  // ne = any
   2df04:	b.hi	2e9e8 <ZSTD_compress@@Base+0x2019c>  // b.pmore
   2df08:	str	x1, [sp, #184]
   2df0c:	ldr	w0, [sp, #368]
   2df10:	add	x10, x10, #0x1
   2df14:	cmp	w0, w10
   2df18:	b.hi	2de64 <ZSTD_compress@@Base+0x1f618>  // b.pmore
   2df1c:	ldr	x0, [sp, #176]
   2df20:	add	w27, w14, #0x2
   2df24:	ldr	x1, [sp, #320]
   2df28:	mov	x12, #0x0                   	// #0
   2df2c:	mov	x10, #0x0                   	// #0
   2df30:	str	w15, [x0, x1]
   2df34:	ldr	w0, [sp, #352]
   2df38:	sub	w15, w0, #0x1
   2df3c:	cmn	w15, #0x1
   2df40:	b.eq	2df50 <ZSTD_compress@@Base+0x1f704>  // b.none
   2df44:	ldr	w0, [sp, #328]
   2df48:	cmp	w0, w23
   2df4c:	b.ls	2eb88 <ZSTD_compress@@Base+0x2033c>  // b.plast
   2df50:	ldr	x0, [sp, #248]
   2df54:	str	wzr, [x18]
   2df58:	str	wzr, [x0]
   2df5c:	cbz	w15, 2e0a4 <ZSTD_compress@@Base+0x1f858>
   2df60:	ldr	w0, [x26]
   2df64:	mov	w1, #0x79b1                	// #31153
   2df68:	movk	w1, #0x9e37, lsl #16
   2df6c:	ldr	w7, [sp, #304]
   2df70:	and	x8, x22, #0xffffffff
   2df74:	add	w14, w14, #0x2
   2df78:	mov	x25, #0x0                   	// #0
   2df7c:	mul	w0, w0, w1
   2df80:	ldr	w1, [sp, #360]
   2df84:	ldr	x5, [x24, #64]
   2df88:	neg	w1, w1
   2df8c:	lsr	w0, w0, w1
   2df90:	ldr	x1, [x24, #48]
   2df94:	mov	x24, #0x0                   	// #0
   2df98:	ldr	w18, [x1, w0, uxtw #2]
   2df9c:	ldr	w0, [sp, #264]
   2dfa0:	cmp	w0, w18
   2dfa4:	b.cs	2e0a4 <ZSTD_compress@@Base+0x1f858>  // b.hs, b.nlast
   2dfa8:	ldr	w0, [sp, #272]
   2dfac:	cmp	x25, x24
   2dfb0:	ldr	x3, [sp, #256]
   2dfb4:	and	w22, w0, w18
   2dfb8:	ldr	x0, [sp, #240]
   2dfbc:	ubfiz	x22, x22, #3, #31
   2dfc0:	ldr	x4, [sp, #296]
   2dfc4:	add	x9, x5, x22
   2dfc8:	add	x6, x0, w18, uxtw
   2dfcc:	csel	x27, x25, x24, ls  // ls = plast
   2dfd0:	add	x1, x6, x27
   2dfd4:	mov	w23, w18
   2dfd8:	add	x0, x26, x27
   2dfdc:	mov	x2, x21
   2dfe0:	str	x6, [sp, #176]
   2dfe4:	str	x9, [sp, #200]
   2dfe8:	stp	x5, x8, [sp, #224]
   2dfec:	str	x7, [sp, #248]
   2dff0:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2dff4:	ldp	x5, x8, [sp, #224]
   2dff8:	add	x27, x27, x0
   2dffc:	add	x0, x23, x27
   2e000:	ldr	x6, [sp, #176]
   2e004:	ldr	x9, [sp, #200]
   2e008:	cmp	x0, x8
   2e00c:	ldr	x7, [sp, #248]
   2e010:	b.cc	2e020 <ZSTD_compress@@Base+0x1f7d4>  // b.lo, b.ul, b.last
   2e014:	ldr	x0, [sp, #128]
   2e018:	add	x23, x7, x23
   2e01c:	add	x6, x0, x23
   2e020:	ldr	x0, [sp, #184]
   2e024:	cmp	x27, x0
   2e028:	b.ls	2e078 <ZSTD_compress@@Base+0x1f82c>  // b.plast
   2e02c:	ldr	w0, [sp, #304]
   2e030:	add	w1, w0, w18
   2e034:	ldr	w0, [sp, #208]
   2e038:	sub	w0, w0, w1
   2e03c:	cmp	x27, x0
   2e040:	b.ls	2e04c <ZSTD_compress@@Base+0x1f800>  // b.plast
   2e044:	add	w0, w1, w27
   2e048:	str	w0, [sp, #208]
   2e04c:	ubfiz	x0, x13, #3, #32
   2e050:	sub	w1, w14, w1
   2e054:	add	x2, x28, x0
   2e058:	cmp	x27, #0x1, lsl #12
   2e05c:	add	w13, w13, #0x1
   2e060:	str	w1, [x28, x0]
   2e064:	add	x1, x26, x27
   2e068:	str	w27, [x2, #4]
   2e06c:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2e070:	b.eq	2e0a4 <ZSTD_compress@@Base+0x1f858>  // b.none
   2e074:	str	x27, [sp, #184]
   2e078:	ldr	w0, [sp, #376]
   2e07c:	cmp	w0, w18
   2e080:	b.cs	2e0a4 <ZSTD_compress@@Base+0x1f858>  // b.hs, b.nlast
   2e084:	ldrb	w1, [x6, x27]
   2e088:	ldrb	w0, [x26, x27]
   2e08c:	cmp	w1, w0
   2e090:	b.cs	2ec94 <ZSTD_compress@@Base+0x20448>  // b.hs, b.nlast
   2e094:	ldr	w18, [x9, #4]
   2e098:	mov	x24, x27
   2e09c:	subs	w15, w15, #0x1
   2e0a0:	b.ne	2df9c <ZSTD_compress@@Base+0x1f750>  // b.any
   2e0a4:	ldr	w0, [sp, #208]
   2e0a8:	b	2e9e0 <ZSTD_compress@@Base+0x20194>
   2e0ac:	str	wzr, [sp, #196]
   2e0b0:	b	2dc18 <ZSTD_compress@@Base+0x1f3cc>
   2e0b4:	add	x1, x25, w24, uxtw
   2e0b8:	mov	w3, w27
   2e0bc:	mov	x2, x21
   2e0c0:	mov	x0, x19
   2e0c4:	mov	w4, #0x0                   	// #0
   2e0c8:	str	w6, [sp, #128]
   2e0cc:	str	x5, [sp, #136]
   2e0d0:	bl	2012c <ZSTD_compress@@Base+0x118e0>
   2e0d4:	ldr	w6, [sp, #128]
   2e0d8:	add	w24, w24, w0
   2e0dc:	ldr	x5, [sp, #136]
   2e0e0:	b	2dc5c <ZSTD_compress@@Base+0x1f410>
   2e0e4:	sub	w27, w27, #0x6
   2e0e8:	cmp	w27, #0x1
   2e0ec:	b.hi	2dcc4 <ZSTD_compress@@Base+0x1f478>  // b.pmore
   2e0f0:	mov	w2, #0x6                   	// #6
   2e0f4:	mov	x0, x26
   2e0f8:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   2e0fc:	lsl	x0, x0, #2
   2e100:	str	x0, [sp, #304]
   2e104:	mov	w8, #0x1                   	// #1
   2e108:	ldr	x0, [sp, #176]
   2e10c:	add	x7, x19, #0xb8
   2e110:	ldr	x1, [sp, #304]
   2e114:	ldr	w22, [x23, #4]
   2e118:	ldr	w9, [x19, #24]
   2e11c:	ldr	w25, [x0, x1]
   2e120:	sub	w22, w22, #0x1
   2e124:	ldr	x0, [x19, #64]
   2e128:	str	x0, [sp, #224]
   2e12c:	ldr	x0, [sp, #128]
   2e130:	lsl	w22, w8, w22
   2e134:	ldr	w2, [x19, #184]
   2e138:	sub	w22, w22, #0x1
   2e13c:	sub	w10, w9, #0x1
   2e140:	cmp	w22, w15
   2e144:	add	x0, x0, w9, uxtw
   2e148:	str	x0, [sp, #272]
   2e14c:	sub	w0, w15, w22
   2e150:	mov	w1, w15
   2e154:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   2e158:	str	w0, [sp, #296]
   2e15c:	mov	x0, x19
   2e160:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   2e164:	cmp	w0, #0x0
   2e168:	and	w18, w22, w15
   2e16c:	csel	w1, w0, w8, ne  // ne = any
   2e170:	str	w1, [sp, #316]
   2e174:	ldr	x1, [sp, #224]
   2e178:	ubfiz	x18, x18, #3, #31
   2e17c:	ldr	x23, [x19, #176]
   2e180:	add	x1, x1, x18
   2e184:	str	x1, [sp, #240]
   2e188:	add	x18, x18, #0x4
   2e18c:	ldr	x1, [sp, #224]
   2e190:	mov	w13, #0x0                   	// #0
   2e194:	add	x18, x1, x18
   2e198:	add	w1, w15, #0x9
   2e19c:	str	w1, [sp, #208]
   2e1a0:	ldr	w1, [x7, #12]
   2e1a4:	lsl	w1, w8, w1
   2e1a8:	str	w1, [sp, #320]
   2e1ac:	ldr	x1, [x23, #8]
   2e1b0:	str	x1, [sp, #232]
   2e1b4:	ldr	x1, [x23]
   2e1b8:	str	x1, [sp, #248]
   2e1bc:	ldr	x2, [sp, #232]
   2e1c0:	sub	x1, x1, x2
   2e1c4:	str	x1, [sp, #184]
   2e1c8:	ldr	w1, [x23, #28]
   2e1cc:	str	w1, [sp, #256]
   2e1d0:	ldr	w1, [sp, #184]
   2e1d4:	ldr	w2, [x23, #192]
   2e1d8:	sub	w1, w0, w1
   2e1dc:	str	w1, [sp, #280]
   2e1e0:	ldr	w1, [x23, #188]
   2e1e4:	str	w2, [sp, #328]
   2e1e8:	sub	w1, w1, #0x1
   2e1ec:	lsl	w8, w8, w1
   2e1f0:	sub	w1, w8, #0x1
   2e1f4:	str	w1, [sp, #264]
   2e1f8:	ldr	w1, [sp, #184]
   2e1fc:	ldr	w2, [sp, #256]
   2e200:	ldr	w3, [sp, #264]
   2e204:	sub	w1, w1, w2
   2e208:	ldr	w2, [sp, #184]
   2e20c:	cmp	w3, w1
   2e210:	ldrb	w8, [sp, #136]
   2e214:	sub	w2, w2, w3
   2e218:	ldr	w3, [sp, #256]
   2e21c:	csel	w2, w2, w3, cc  // cc = lo, ul, last
   2e220:	str	w2, [sp, #360]
   2e224:	ldr	w2, [sp, #192]
   2e228:	mov	w3, #0x4                   	// #4
   2e22c:	sub	w24, w2, #0x1
   2e230:	ldr	w2, [sp, #136]
   2e234:	cmp	w2, #0x0
   2e238:	mov	w2, #0x3                   	// #3
   2e23c:	csel	w2, w3, w2, ne  // ne = any
   2e240:	str	w2, [sp, #352]
   2e244:	ldr	x2, [sp, #216]
   2e248:	str	x2, [sp, #376]
   2e24c:	sub	w2, w15, w9
   2e250:	str	w2, [sp, #368]
   2e254:	sub	w2, w15, w0
   2e258:	add	x9, x26, #0x4
   2e25c:	add	w1, w2, w1
   2e260:	str	w1, [sp, #388]
   2e264:	sub	w1, w10, w15
   2e268:	str	w1, [sp, #392]
   2e26c:	ldr	w1, [sp, #184]
   2e270:	sub	w0, w0, w1
   2e274:	str	x0, [sp, #400]
   2e278:	mov	w27, w8
   2e27c:	cmp	w8, #0x3
   2e280:	b.ne	2f1e8 <ZSTD_compress@@Base+0x2099c>  // b.any
   2e284:	ldr	x0, [sp, #120]
   2e288:	ldr	w0, [x0, #16]
   2e28c:	sub	w0, w0, #0x1
   2e290:	ldr	w1, [sp, #368]
   2e294:	sub	w2, w0, #0x1
   2e298:	cmp	w2, w1
   2e29c:	b.cs	2f1f4 <ZSTD_compress@@Base+0x209a8>  // b.hs, b.nlast
   2e2a0:	mov	w1, w0
   2e2a4:	sub	x0, x26, w0, uxtw
   2e2a8:	ldr	w2, [x0]
   2e2ac:	ldr	w0, [x26]
   2e2b0:	cmp	w2, w0
   2e2b4:	b.ne	2f254 <ZSTD_compress@@Base+0x20a08>  // b.any
   2e2b8:	mov	x0, #0x4                   	// #4
   2e2bc:	sub	x1, x0, x1
   2e2c0:	mov	x2, x21
   2e2c4:	add	x1, x26, x1
   2e2c8:	mov	x0, x9
   2e2cc:	stp	x9, x8, [sp, #408]
   2e2d0:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2e2d4:	ldp	x9, x8, [sp, #408]
   2e2d8:	add	w0, w0, #0x4
   2e2dc:	mov	w1, w0
   2e2e0:	cmp	x24, w0, uxtw
   2e2e4:	b.cs	2e31c <ZSTD_compress@@Base+0x1fad0>  // b.hs, b.nlast
   2e2e8:	ubfiz	x2, x13, #3, #32
   2e2ec:	ldr	w4, [sp, #136]
   2e2f0:	add	x3, x28, x2
   2e2f4:	add	w13, w13, #0x1
   2e2f8:	sub	w27, w27, w4
   2e2fc:	str	w27, [x28, x2]
   2e300:	add	x2, x26, x1
   2e304:	cmp	x2, x21
   2e308:	ldr	w2, [sp, #200]
   2e30c:	str	w0, [x3, #4]
   2e310:	ccmp	w2, w0, #0x0, ne  // ne = any
   2e314:	b.cc	2e9e8 <ZSTD_compress@@Base+0x2019c>  // b.lo, b.ul, b.last
   2e318:	mov	x24, x1
   2e31c:	ldr	w0, [sp, #352]
   2e320:	add	x8, x8, #0x1
   2e324:	cmp	w0, w8
   2e328:	b.hi	2e278 <ZSTD_compress@@Base+0x1fa2c>  // b.pmore
   2e32c:	ldr	x0, [sp, #176]
   2e330:	add	w27, w14, #0x2
   2e334:	ldr	x1, [sp, #304]
   2e338:	mov	x10, #0x0                   	// #0
   2e33c:	mov	x8, #0x0                   	// #0
   2e340:	str	w15, [x0, x1]
   2e344:	ldr	w0, [sp, #320]
   2e348:	sub	w15, w0, #0x1
   2e34c:	cmn	w15, #0x1
   2e350:	b.eq	2e360 <ZSTD_compress@@Base+0x1fb14>  // b.none
   2e354:	ldr	w0, [sp, #316]
   2e358:	cmp	w0, w25
   2e35c:	b.ls	2f25c <ZSTD_compress@@Base+0x20a10>  // b.plast
   2e360:	ldr	x0, [sp, #240]
   2e364:	str	wzr, [x18]
   2e368:	str	wzr, [x0]
   2e36c:	cbz	w15, 2e0a4 <ZSTD_compress@@Base+0x1f858>
   2e370:	ldr	w1, [sp, #328]
   2e374:	mov	x0, x26
   2e378:	mov	w2, #0x6                   	// #6
   2e37c:	mov	x27, #0x0                   	// #0
   2e380:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   2e384:	add	w14, w14, #0x2
   2e388:	ldr	x1, [x23, #48]
   2e38c:	mov	x5, #0x0                   	// #0
   2e390:	ldr	w8, [sp, #280]
   2e394:	ldr	x6, [x23, #64]
   2e398:	ldr	w18, [x1, x0, lsl #2]
   2e39c:	ldr	x0, [sp, #184]
   2e3a0:	and	x10, x0, #0xffffffff
   2e3a4:	ldr	w0, [sp, #256]
   2e3a8:	cmp	w0, w18
   2e3ac:	b.cs	2e0a4 <ZSTD_compress@@Base+0x1f858>  // b.hs, b.nlast
   2e3b0:	ldr	w0, [sp, #264]
   2e3b4:	cmp	x5, x27
   2e3b8:	ldr	x3, [sp, #248]
   2e3bc:	and	w22, w0, w18
   2e3c0:	ldr	x0, [sp, #232]
   2e3c4:	ubfiz	x22, x22, #3, #31
   2e3c8:	ldr	x4, [sp, #272]
   2e3cc:	add	x9, x6, x22
   2e3d0:	add	x7, x0, w18, uxtw
   2e3d4:	csel	x25, x5, x27, ls  // ls = plast
   2e3d8:	add	x1, x7, x25
   2e3dc:	mov	w23, w18
   2e3e0:	add	x0, x26, x25
   2e3e4:	mov	x2, x21
   2e3e8:	stp	x7, x5, [sp, #176]
   2e3ec:	str	x9, [sp, #200]
   2e3f0:	str	x6, [sp, #224]
   2e3f4:	str	x10, [sp, #240]
   2e3f8:	str	x8, [sp, #296]
   2e3fc:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2e400:	ldr	x10, [sp, #240]
   2e404:	add	x25, x25, x0
   2e408:	add	x0, x23, x25
   2e40c:	cmp	x0, x10
   2e410:	ldp	x7, x5, [sp, #176]
   2e414:	ldr	x9, [sp, #200]
   2e418:	ldr	x6, [sp, #224]
   2e41c:	ldr	x8, [sp, #296]
   2e420:	b.cc	2e430 <ZSTD_compress@@Base+0x1fbe4>  // b.lo, b.ul, b.last
   2e424:	ldr	x0, [sp, #128]
   2e428:	add	x23, x8, x23
   2e42c:	add	x7, x0, x23
   2e430:	cmp	x25, x24
   2e434:	b.ls	2e484 <ZSTD_compress@@Base+0x1fc38>  // b.plast
   2e438:	ldr	w0, [sp, #280]
   2e43c:	add	w1, w0, w18
   2e440:	ldr	w0, [sp, #208]
   2e444:	sub	w0, w0, w1
   2e448:	cmp	x25, x0
   2e44c:	b.ls	2e458 <ZSTD_compress@@Base+0x1fc0c>  // b.plast
   2e450:	add	w0, w1, w25
   2e454:	str	w0, [sp, #208]
   2e458:	ubfiz	x0, x13, #3, #32
   2e45c:	sub	w1, w14, w1
   2e460:	add	x2, x28, x0
   2e464:	cmp	x25, #0x1, lsl #12
   2e468:	add	w13, w13, #0x1
   2e46c:	str	w1, [x28, x0]
   2e470:	add	x1, x26, x25
   2e474:	str	w25, [x2, #4]
   2e478:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2e47c:	b.eq	2e0a4 <ZSTD_compress@@Base+0x1f858>  // b.none
   2e480:	mov	x24, x25
   2e484:	ldr	w0, [sp, #360]
   2e488:	cmp	w0, w18
   2e48c:	b.cs	2e0a4 <ZSTD_compress@@Base+0x1f858>  // b.hs, b.nlast
   2e490:	ldrb	w1, [x7, x25]
   2e494:	ldrb	w0, [x26, x25]
   2e498:	cmp	w1, w0
   2e49c:	b.cs	2f360 <ZSTD_compress@@Base+0x20b14>  // b.hs, b.nlast
   2e4a0:	ldr	w18, [x9, #4]
   2e4a4:	mov	x27, x25
   2e4a8:	subs	w15, w15, #0x1
   2e4ac:	b.ne	2e3a4 <ZSTD_compress@@Base+0x1fb58>  // b.any
   2e4b0:	b	2e0a4 <ZSTD_compress@@Base+0x1f858>
   2e4b4:	mov	x8, x26
   2e4b8:	mov	w0, #0x79b1                	// #31153
   2e4bc:	movk	w0, #0x9e37, lsl #16
   2e4c0:	neg	w1, w1
   2e4c4:	mov	w7, #0x1                   	// #1
   2e4c8:	ldr	w9, [x19, #24]
   2e4cc:	ldr	w6, [x8], #3
   2e4d0:	ldr	w2, [x19, #184]
   2e4d4:	sub	w5, w9, #0x1
   2e4d8:	str	x8, [sp, #424]
   2e4dc:	mul	w0, w6, w0
   2e4e0:	lsr	w1, w0, w1
   2e4e4:	ubfiz	x0, x1, #2, #32
   2e4e8:	str	x0, [sp, #328]
   2e4ec:	ldr	x0, [sp, #176]
   2e4f0:	ldr	x1, [sp, #328]
   2e4f4:	ldr	w25, [x0, x1]
   2e4f8:	ldr	x0, [x19, #64]
   2e4fc:	str	x0, [sp, #208]
   2e500:	ldr	w0, [x23, #4]
   2e504:	sub	w0, w0, #0x1
   2e508:	lsl	w0, w7, w0
   2e50c:	sub	w0, w0, #0x1
   2e510:	str	w0, [sp, #224]
   2e514:	ldr	x0, [sp, #128]
   2e518:	ldr	w1, [sp, #224]
   2e51c:	add	x0, x0, w9, uxtw
   2e520:	str	x0, [sp, #280]
   2e524:	ldr	w0, [sp, #224]
   2e528:	cmp	w1, w15
   2e52c:	mov	w1, w15
   2e530:	sub	w0, w15, w0
   2e534:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   2e538:	str	w0, [sp, #316]
   2e53c:	mov	x0, x19
   2e540:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   2e544:	cmp	w0, #0x0
   2e548:	ldr	w22, [x19, #196]
   2e54c:	csel	w1, w0, w7, ne  // ne = any
   2e550:	str	w1, [sp, #296]
   2e554:	ldr	w1, [sp, #224]
   2e558:	mov	w13, #0x0                   	// #0
   2e55c:	ldr	x2, [sp, #208]
   2e560:	and	w1, w1, w15
   2e564:	ldr	x24, [x19, #176]
   2e568:	ubfiz	x1, x1, #3, #31
   2e56c:	add	x2, x2, x1
   2e570:	str	x2, [sp, #240]
   2e574:	ldr	x2, [sp, #208]
   2e578:	add	x1, x1, #0x4
   2e57c:	add	x1, x2, x1
   2e580:	str	x1, [sp, #248]
   2e584:	add	w1, w15, #0x9
   2e588:	str	w1, [sp, #184]
   2e58c:	lsl	w1, w7, w22
   2e590:	str	w1, [sp, #352]
   2e594:	ldr	x1, [x24, #8]
   2e598:	str	x1, [sp, #232]
   2e59c:	ldr	x1, [x24]
   2e5a0:	str	x1, [sp, #256]
   2e5a4:	ldr	x2, [sp, #232]
   2e5a8:	sub	x23, x1, x2
   2e5ac:	ldr	w1, [x24, #28]
   2e5b0:	ldr	w2, [x24, #192]
   2e5b4:	str	w1, [sp, #264]
   2e5b8:	sub	w1, w0, w23
   2e5bc:	str	w1, [sp, #304]
   2e5c0:	str	w2, [sp, #360]
   2e5c4:	ldr	w1, [x24, #188]
   2e5c8:	ldrb	w22, [sp, #136]
   2e5cc:	sub	w1, w1, #0x1
   2e5d0:	ldr	x8, [sp, #424]
   2e5d4:	lsl	w7, w7, w1
   2e5d8:	sub	w1, w7, #0x1
   2e5dc:	str	w1, [sp, #272]
   2e5e0:	ldr	w1, [sp, #264]
   2e5e4:	ldr	w3, [sp, #272]
   2e5e8:	sub	w1, w23, w1
   2e5ec:	ldr	w2, [sp, #272]
   2e5f0:	cmp	w3, w1
   2e5f4:	ldr	w3, [sp, #264]
   2e5f8:	sub	w2, w23, w2
   2e5fc:	csel	w2, w2, w3, cc  // cc = lo, ul, last
   2e600:	str	w2, [sp, #376]
   2e604:	ldr	w2, [sp, #192]
   2e608:	mov	w3, #0x4                   	// #4
   2e60c:	sub	w18, w2, #0x1
   2e610:	ldr	w2, [sp, #136]
   2e614:	cmp	w2, #0x0
   2e618:	csel	w2, w3, w27, ne  // ne = any
   2e61c:	str	w2, [sp, #368]
   2e620:	lsl	w2, w6, #8
   2e624:	str	w2, [sp, #320]
   2e628:	ldr	x2, [sp, #216]
   2e62c:	str	x2, [sp, #392]
   2e630:	sub	w2, w15, w9
   2e634:	str	w2, [sp, #388]
   2e638:	sub	w2, w15, w0
   2e63c:	sub	w0, w0, w23
   2e640:	add	w1, w2, w1
   2e644:	str	w1, [sp, #400]
   2e648:	sub	w1, w5, w15
   2e64c:	str	w1, [sp, #408]
   2e650:	str	x0, [sp, #416]
   2e654:	mov	w27, w22
   2e658:	cmp	w22, #0x3
   2e65c:	b.ne	2e7d0 <ZSTD_compress@@Base+0x1ff84>  // b.any
   2e660:	ldr	x0, [sp, #120]
   2e664:	ldr	w0, [x0, #16]
   2e668:	sub	w0, w0, #0x1
   2e66c:	ldr	w1, [sp, #388]
   2e670:	sub	w2, w0, #0x1
   2e674:	cmp	w2, w1
   2e678:	b.cs	2e7dc <ZSTD_compress@@Base+0x1ff90>  // b.hs, b.nlast
   2e67c:	mov	w1, w0
   2e680:	sub	x0, x26, w0, uxtw
   2e684:	ldr	w2, [sp, #320]
   2e688:	ldr	w0, [x0]
   2e68c:	cmp	w2, w0, lsl #8
   2e690:	b.ne	2e83c <ZSTD_compress@@Base+0x1fff0>  // b.any
   2e694:	mov	x0, #0x3                   	// #3
   2e698:	sub	x1, x0, x1
   2e69c:	mov	x2, x21
   2e6a0:	add	x1, x26, x1
   2e6a4:	mov	x0, x8
   2e6a8:	str	x8, [sp, #424]
   2e6ac:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2e6b0:	ldr	x8, [sp, #424]
   2e6b4:	add	w0, w0, #0x3
   2e6b8:	mov	w1, w0
   2e6bc:	cmp	x18, w0, uxtw
   2e6c0:	b.cs	2e6f8 <ZSTD_compress@@Base+0x1feac>  // b.hs, b.nlast
   2e6c4:	ubfiz	x2, x13, #3, #32
   2e6c8:	ldr	w4, [sp, #136]
   2e6cc:	add	x3, x28, x2
   2e6d0:	add	w13, w13, #0x1
   2e6d4:	sub	w27, w27, w4
   2e6d8:	str	w27, [x28, x2]
   2e6dc:	add	x2, x26, x1
   2e6e0:	cmp	x2, x21
   2e6e4:	ldr	w2, [sp, #200]
   2e6e8:	str	w0, [x3, #4]
   2e6ec:	ccmp	w0, w2, #0x2, ne  // ne = any
   2e6f0:	b.hi	2e9e8 <ZSTD_compress@@Base+0x2019c>  // b.pmore
   2e6f4:	mov	x18, x1
   2e6f8:	ldr	w0, [sp, #368]
   2e6fc:	add	x22, x22, #0x1
   2e700:	cmp	w0, w22
   2e704:	b.hi	2e654 <ZSTD_compress@@Base+0x1fe08>  // b.pmore
   2e708:	cmp	x18, #0x2
   2e70c:	b.ne	2e84c <ZSTD_compress@@Base+0x20000>  // b.any
   2e710:	add	x1, sp, #0x1bc
   2e714:	mov	x2, x26
   2e718:	mov	x0, x19
   2e71c:	bl	1ff88 <ZSTD_compress@@Base+0x1173c>
   2e720:	ldr	w1, [sp, #296]
   2e724:	sub	w7, w15, w0
   2e728:	cmp	w1, w0
   2e72c:	mov	w1, #0x3ffff               	// #262143
   2e730:	ccmp	w7, w1, #0x2, ls  // ls = plast
   2e734:	b.hi	2e84c <ZSTD_compress@@Base+0x20000>  // b.pmore
   2e738:	ldr	x1, [sp, #128]
   2e73c:	mov	x2, x21
   2e740:	add	x1, x1, w0, uxtw
   2e744:	mov	x0, x26
   2e748:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2e74c:	cmp	x0, #0x2
   2e750:	b.ls	2e84c <ZSTD_compress@@Base+0x20000>  // b.plast
   2e754:	ldr	w2, [sp, #200]
   2e758:	add	w7, w7, #0x2
   2e75c:	add	x1, x26, x0
   2e760:	stp	w7, w0, [x28]
   2e764:	cmp	x1, x21
   2e768:	ccmp	x0, x2, #0x2, ne  // ne = any
   2e76c:	b.ls	2e844 <ZSTD_compress@@Base+0x1fff8>  // b.plast
   2e770:	add	w15, w15, #0x1
   2e774:	mov	w13, #0x1                   	// #1
   2e778:	str	w15, [x19, #36]
   2e77c:	sub	w0, w13, #0x1
   2e780:	ldr	w2, [sp, #312]
   2e784:	add	x0, x28, x0, lsl #3
   2e788:	ldr	w1, [x0, #4]
   2e78c:	cmp	w2, w1
   2e790:	b.cc	2e7a4 <ZSTD_compress@@Base+0x1ff58>  // b.lo, b.ul, b.last
   2e794:	ldr	w2, [sp, #152]
   2e798:	add	w2, w2, w1
   2e79c:	cmp	w2, #0xfff
   2e7a0:	b.ls	2f374 <ZSTD_compress@@Base+0x20b28>  // b.plast
   2e7a4:	ldr	w2, [x0]
   2e7a8:	ldr	x0, [sp, #120]
   2e7ac:	ldr	w0, [x0, #8]
   2e7b0:	cbnz	w0, 2f36c <ZSTD_compress@@Base+0x20b20>
   2e7b4:	ldr	x0, [sp, #120]
   2e7b8:	ldr	w6, [x0, #12]
   2e7bc:	ldr	w0, [sp, #152]
   2e7c0:	sub	w6, w0, w6
   2e7c4:	cmp	w6, #0x1, lsl #12
   2e7c8:	b.ls	2daa4 <ZSTD_compress@@Base+0x1f258>  // b.plast
   2e7cc:	b	2cd64 <ZSTD_compress@@Base+0x1e518>
   2e7d0:	ldr	x0, [sp, #392]
   2e7d4:	ldr	w0, [x0, x22, lsl #2]
   2e7d8:	b	2e66c <ZSTD_compress@@Base+0x1fe20>
   2e7dc:	ldr	w3, [sp, #400]
   2e7e0:	ldr	w1, [sp, #408]
   2e7e4:	cmp	w2, w3
   2e7e8:	add	w1, w1, w0
   2e7ec:	ccmp	w1, #0x2, #0x0, cc  // cc = lo, ul, last
   2e7f0:	b.ls	2e83c <ZSTD_compress@@Base+0x1fff0>  // b.plast
   2e7f4:	ldr	x1, [sp, #416]
   2e7f8:	sub	w0, w14, w0
   2e7fc:	ldr	x2, [sp, #232]
   2e800:	sub	x0, x0, x1
   2e804:	ldr	x1, [sp, #232]
   2e808:	add	x1, x1, x0
   2e80c:	ldr	w0, [x2, x0]
   2e810:	ldr	w2, [sp, #320]
   2e814:	cmp	w2, w0, lsl #8
   2e818:	b.ne	2e83c <ZSTD_compress@@Base+0x1fff0>  // b.any
   2e81c:	ldr	x3, [sp, #256]
   2e820:	mov	x2, x21
   2e824:	ldr	x4, [sp, #280]
   2e828:	add	x1, x1, #0x3
   2e82c:	mov	x0, x8
   2e830:	str	x8, [sp, #424]
   2e834:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2e838:	b	2e6b0 <ZSTD_compress@@Base+0x1fe64>
   2e83c:	mov	w0, #0x0                   	// #0
   2e840:	b	2e6b8 <ZSTD_compress@@Base+0x1fe6c>
   2e844:	mov	x18, x0
   2e848:	mov	w13, #0x1                   	// #1
   2e84c:	ldr	x0, [sp, #176]
   2e850:	add	w12, w14, #0x2
   2e854:	ldr	x1, [sp, #328]
   2e858:	mov	x9, #0x0                   	// #0
   2e85c:	mov	x7, #0x0                   	// #0
   2e860:	str	w15, [x0, x1]
   2e864:	ldr	w0, [sp, #352]
   2e868:	sub	w22, w0, #0x1
   2e86c:	cmn	w22, #0x1
   2e870:	b.eq	2e880 <ZSTD_compress@@Base+0x20034>  // b.none
   2e874:	ldr	w0, [sp, #296]
   2e878:	cmp	w0, w25
   2e87c:	b.ls	2e9f8 <ZSTD_compress@@Base+0x201ac>  // b.plast
   2e880:	ldr	x0, [sp, #248]
   2e884:	str	wzr, [x0]
   2e888:	ldr	x0, [sp, #240]
   2e88c:	str	wzr, [x0]
   2e890:	cbz	w22, 2e9dc <ZSTD_compress@@Base+0x20190>
   2e894:	ldr	w0, [x26]
   2e898:	mov	w1, #0x79b1                	// #31153
   2e89c:	movk	w1, #0x9e37, lsl #16
   2e8a0:	ldr	w10, [sp, #304]
   2e8a4:	ldr	x6, [x24, #64]
   2e8a8:	and	x23, x23, #0xffffffff
   2e8ac:	mul	w0, w0, w1
   2e8b0:	ldr	w1, [sp, #360]
   2e8b4:	add	w8, w14, #0x2
   2e8b8:	mov	x27, #0x0                   	// #0
   2e8bc:	neg	w1, w1
   2e8c0:	mov	x5, #0x0                   	// #0
   2e8c4:	lsr	w0, w0, w1
   2e8c8:	ldr	x1, [x24, #48]
   2e8cc:	ldr	w15, [x1, w0, uxtw #2]
   2e8d0:	ldr	w0, [sp, #264]
   2e8d4:	cmp	w0, w15
   2e8d8:	b.cs	2e9dc <ZSTD_compress@@Base+0x20190>  // b.hs, b.nlast
   2e8dc:	ldr	w0, [sp, #272]
   2e8e0:	cmp	x27, x5
   2e8e4:	ldr	x3, [sp, #256]
   2e8e8:	and	w24, w0, w15
   2e8ec:	ldr	x0, [sp, #232]
   2e8f0:	ubfiz	x24, x24, #3, #31
   2e8f4:	ldr	x4, [sp, #280]
   2e8f8:	csel	x14, x27, x5, ls  // ls = plast
   2e8fc:	add	x7, x0, w15, uxtw
   2e900:	add	x9, x6, x24
   2e904:	add	x1, x7, x14
   2e908:	mov	w25, w15
   2e90c:	add	x0, x26, x14
   2e910:	mov	x2, x21
   2e914:	str	x7, [sp, #176]
   2e918:	stp	x5, x9, [sp, #200]
   2e91c:	str	x6, [sp, #224]
   2e920:	str	x10, [sp, #240]
   2e924:	str	w8, [sp, #248]
   2e928:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2e92c:	add	x14, x14, x0
   2e930:	ldr	w8, [sp, #248]
   2e934:	add	x0, x25, x14
   2e938:	cmp	x0, x23
   2e93c:	ldr	x7, [sp, #176]
   2e940:	ldp	x5, x9, [sp, #200]
   2e944:	ldr	x6, [sp, #224]
   2e948:	ldr	x10, [sp, #240]
   2e94c:	b.cc	2e95c <ZSTD_compress@@Base+0x20110>  // b.lo, b.ul, b.last
   2e950:	ldr	x0, [sp, #128]
   2e954:	add	x25, x10, x25
   2e958:	add	x7, x0, x25
   2e95c:	cmp	x14, x18
   2e960:	b.ls	2e9b0 <ZSTD_compress@@Base+0x20164>  // b.plast
   2e964:	ldr	w0, [sp, #304]
   2e968:	add	w1, w0, w15
   2e96c:	ldr	w0, [sp, #184]
   2e970:	sub	w0, w0, w1
   2e974:	cmp	x14, x0
   2e978:	b.ls	2e984 <ZSTD_compress@@Base+0x20138>  // b.plast
   2e97c:	add	w0, w1, w14
   2e980:	str	w0, [sp, #184]
   2e984:	ubfiz	x0, x13, #3, #32
   2e988:	sub	w1, w8, w1
   2e98c:	add	x2, x28, x0
   2e990:	cmp	x14, #0x1, lsl #12
   2e994:	add	w13, w13, #0x1
   2e998:	str	w1, [x28, x0]
   2e99c:	add	x1, x26, x14
   2e9a0:	str	w14, [x2, #4]
   2e9a4:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2e9a8:	b.eq	2e9dc <ZSTD_compress@@Base+0x20190>  // b.none
   2e9ac:	mov	x18, x14
   2e9b0:	ldr	w0, [sp, #376]
   2e9b4:	cmp	w0, w15
   2e9b8:	b.cs	2e9dc <ZSTD_compress@@Base+0x20190>  // b.hs, b.nlast
   2e9bc:	ldrb	w1, [x7, x14]
   2e9c0:	ldrb	w0, [x26, x14]
   2e9c4:	cmp	w1, w0
   2e9c8:	b.cs	2eb08 <ZSTD_compress@@Base+0x202bc>  // b.hs, b.nlast
   2e9cc:	ldr	w15, [x9, #4]
   2e9d0:	mov	x5, x14
   2e9d4:	subs	w22, w22, #0x1
   2e9d8:	b.ne	2e8d0 <ZSTD_compress@@Base+0x20084>  // b.any
   2e9dc:	ldr	w0, [sp, #184]
   2e9e0:	sub	w0, w0, #0x8
   2e9e4:	str	w0, [x19, #36]
   2e9e8:	cbnz	w13, 2e77c <ZSTD_compress@@Base+0x1ff30>
   2e9ec:	ldr	w0, [sp, #152]
   2e9f0:	add	w0, w0, #0x1
   2e9f4:	b	2d960 <ZSTD_compress@@Base+0x1f114>
   2e9f8:	ldr	w0, [sp, #224]
   2e9fc:	cmp	x7, x9
   2ea00:	csel	x15, x7, x9, ls  // ls = plast
   2ea04:	mov	x2, x21
   2ea08:	and	w8, w0, w25
   2ea0c:	ldr	x0, [sp, #208]
   2ea10:	ubfiz	x8, x8, #3, #31
   2ea14:	add	x10, x0, x8
   2ea18:	ldr	x0, [sp, #128]
   2ea1c:	add	x11, x0, w25, uxtw
   2ea20:	add	x0, x26, x15
   2ea24:	add	x1, x11, x15
   2ea28:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2ea2c:	add	x0, x15, x0
   2ea30:	cmp	x0, x18
   2ea34:	b.ls	2ea80 <ZSTD_compress@@Base+0x20234>  // b.plast
   2ea38:	ldr	w1, [sp, #184]
   2ea3c:	mov	w3, w0
   2ea40:	sub	w1, w1, w25
   2ea44:	cmp	x0, x1
   2ea48:	b.ls	2ea54 <ZSTD_compress@@Base+0x20208>  // b.plast
   2ea4c:	add	w1, w25, w0
   2ea50:	str	w1, [sp, #184]
   2ea54:	ubfiz	x1, x13, #3, #32
   2ea58:	sub	w4, w12, w25
   2ea5c:	add	x2, x28, x1
   2ea60:	cmp	x0, #0x1, lsl #12
   2ea64:	add	w13, w13, #0x1
   2ea68:	mov	x18, x0
   2ea6c:	str	w4, [x28, x1]
   2ea70:	add	x1, x26, x0
   2ea74:	str	w3, [x2, #4]
   2ea78:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2ea7c:	b.eq	2eae8 <ZSTD_compress@@Base+0x2029c>  // b.none
   2ea80:	ldrb	w2, [x11, x0]
   2ea84:	ldrb	w1, [x26, x0]
   2ea88:	cmp	w2, w1
   2ea8c:	b.cs	2eabc <ZSTD_compress@@Base+0x20270>  // b.hs, b.nlast
   2ea90:	ldr	x1, [sp, #240]
   2ea94:	str	w25, [x1]
   2ea98:	ldr	w1, [sp, #316]
   2ea9c:	cmp	w25, w1
   2eaa0:	b.ls	2eaf0 <ZSTD_compress@@Base+0x202a4>  // b.plast
   2eaa4:	ldr	w25, [x10, #4]
   2eaa8:	add	x1, x10, #0x4
   2eaac:	str	x1, [sp, #240]
   2eab0:	sub	w22, w22, #0x1
   2eab4:	mov	x7, x0
   2eab8:	b	2e86c <ZSTD_compress@@Base+0x20020>
   2eabc:	ldr	x1, [sp, #248]
   2eac0:	str	w25, [x1]
   2eac4:	ldr	w1, [sp, #316]
   2eac8:	cmp	w25, w1
   2eacc:	b.ls	2eafc <ZSTD_compress@@Base+0x202b0>  // b.plast
   2ead0:	ldr	x1, [sp, #208]
   2ead4:	mov	x9, x0
   2ead8:	mov	x0, x7
   2eadc:	str	x10, [sp, #248]
   2eae0:	ldr	w25, [x1, x8]
   2eae4:	b	2eab0 <ZSTD_compress@@Base+0x20264>
   2eae8:	mov	w22, #0x0                   	// #0
   2eaec:	b	2e880 <ZSTD_compress@@Base+0x20034>
   2eaf0:	add	x0, sp, #0x1c0
   2eaf4:	str	x0, [sp, #240]
   2eaf8:	b	2e880 <ZSTD_compress@@Base+0x20034>
   2eafc:	add	x0, sp, #0x1c0
   2eb00:	str	x0, [sp, #248]
   2eb04:	b	2e880 <ZSTD_compress@@Base+0x20034>
   2eb08:	ldr	w15, [x6, x24]
   2eb0c:	mov	x27, x14
   2eb10:	b	2e9d4 <ZSTD_compress@@Base+0x20188>
   2eb14:	ldr	x0, [sp, #392]
   2eb18:	ldr	w0, [x0, x10, lsl #2]
   2eb1c:	b	2de7c <ZSTD_compress@@Base+0x1f630>
   2eb20:	ldr	w3, [sp, #400]
   2eb24:	ldr	w1, [sp, #408]
   2eb28:	cmp	w2, w3
   2eb2c:	add	w1, w1, w0
   2eb30:	ccmp	w1, #0x2, #0x0, cc  // cc = lo, ul, last
   2eb34:	b.ls	2eb80 <ZSTD_compress@@Base+0x20334>  // b.plast
   2eb38:	ldr	x1, [sp, #416]
   2eb3c:	sub	w0, w14, w0
   2eb40:	ldr	x2, [sp, #240]
   2eb44:	sub	x0, x0, x1
   2eb48:	ldr	x1, [sp, #240]
   2eb4c:	add	x1, x1, x0
   2eb50:	ldr	w0, [x2, x0]
   2eb54:	ldr	w2, [sp, #280]
   2eb58:	cmp	w2, w0
   2eb5c:	b.ne	2eb80 <ZSTD_compress@@Base+0x20334>  // b.any
   2eb60:	ldr	x3, [sp, #256]
   2eb64:	mov	x2, x21
   2eb68:	ldr	x4, [sp, #296]
   2eb6c:	add	x1, x1, #0x4
   2eb70:	mov	x0, x25
   2eb74:	str	x10, [sp, #424]
   2eb78:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2eb7c:	b	2dec0 <ZSTD_compress@@Base+0x1f674>
   2eb80:	mov	w0, #0x0                   	// #0
   2eb84:	b	2dec8 <ZSTD_compress@@Base+0x1f67c>
   2eb88:	ldr	w0, [sp, #232]
   2eb8c:	cmp	x10, x12
   2eb90:	csel	x25, x10, x12, ls  // ls = plast
   2eb94:	mov	x2, x21
   2eb98:	and	w11, w0, w23
   2eb9c:	ldr	x0, [sp, #224]
   2eba0:	ubfiz	x11, x11, #3, #31
   2eba4:	add	x7, x0, x11
   2eba8:	ldr	x0, [sp, #128]
   2ebac:	add	x8, x0, w23, uxtw
   2ebb0:	add	x0, x26, x25
   2ebb4:	add	x1, x8, x25
   2ebb8:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2ebbc:	add	x25, x25, x0
   2ebc0:	ldr	x0, [sp, #184]
   2ebc4:	cmp	x25, x0
   2ebc8:	b.ls	2ec14 <ZSTD_compress@@Base+0x203c8>  // b.plast
   2ebcc:	ldr	w0, [sp, #208]
   2ebd0:	mov	w2, w25
   2ebd4:	sub	w0, w0, w23
   2ebd8:	cmp	x25, x0
   2ebdc:	b.ls	2ebe8 <ZSTD_compress@@Base+0x2039c>  // b.plast
   2ebe0:	add	w0, w23, w25
   2ebe4:	str	w0, [sp, #208]
   2ebe8:	ubfiz	x0, x13, #3, #32
   2ebec:	sub	w3, w27, w23
   2ebf0:	add	x1, x28, x0
   2ebf4:	str	x25, [sp, #184]
   2ebf8:	cmp	x25, #0x1, lsl #12
   2ebfc:	add	w13, w13, #0x1
   2ec00:	str	w3, [x28, x0]
   2ec04:	str	w2, [x1, #4]
   2ec08:	add	x1, x26, x25
   2ec0c:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2ec10:	b.eq	2ec78 <ZSTD_compress@@Base+0x2042c>  // b.none
   2ec14:	ldrb	w1, [x8, x25]
   2ec18:	ldrb	w0, [x26, x25]
   2ec1c:	cmp	w1, w0
   2ec20:	b.cs	2ec50 <ZSTD_compress@@Base+0x20404>  // b.hs, b.nlast
   2ec24:	ldr	x0, [sp, #248]
   2ec28:	str	w23, [x0]
   2ec2c:	ldr	w0, [sp, #316]
   2ec30:	cmp	w23, w0
   2ec34:	b.ls	2ec80 <ZSTD_compress@@Base+0x20434>  // b.plast
   2ec38:	ldr	w23, [x7, #4]
   2ec3c:	add	x0, x7, #0x4
   2ec40:	str	x0, [sp, #248]
   2ec44:	sub	w15, w15, #0x1
   2ec48:	mov	x10, x25
   2ec4c:	b	2df3c <ZSTD_compress@@Base+0x1f6f0>
   2ec50:	ldr	w0, [sp, #316]
   2ec54:	str	w23, [x18]
   2ec58:	cmp	w23, w0
   2ec5c:	b.ls	2ec8c <ZSTD_compress@@Base+0x20440>  // b.plast
   2ec60:	ldr	x0, [sp, #224]
   2ec64:	mov	x12, x25
   2ec68:	mov	x18, x7
   2ec6c:	mov	x25, x10
   2ec70:	ldr	w23, [x0, x11]
   2ec74:	b	2ec44 <ZSTD_compress@@Base+0x203f8>
   2ec78:	mov	w15, #0x0                   	// #0
   2ec7c:	b	2df50 <ZSTD_compress@@Base+0x1f704>
   2ec80:	add	x0, sp, #0x1c0
   2ec84:	str	x0, [sp, #248]
   2ec88:	b	2df50 <ZSTD_compress@@Base+0x1f704>
   2ec8c:	add	x18, sp, #0x1c0
   2ec90:	b	2df50 <ZSTD_compress@@Base+0x1f704>
   2ec94:	ldr	w18, [x5, x22]
   2ec98:	mov	x25, x27
   2ec9c:	b	2e09c <ZSTD_compress@@Base+0x1f850>
   2eca0:	mov	w2, w27
   2eca4:	mov	x0, x26
   2eca8:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   2ecac:	lsl	x0, x0, #2
   2ecb0:	str	x0, [sp, #304]
   2ecb4:	mov	w8, #0x1                   	// #1
   2ecb8:	ldr	x0, [sp, #176]
   2ecbc:	add	x7, x19, #0xb8
   2ecc0:	ldr	x1, [sp, #304]
   2ecc4:	ldr	w22, [x23, #4]
   2ecc8:	ldr	w9, [x19, #24]
   2eccc:	ldr	w25, [x0, x1]
   2ecd0:	sub	w22, w22, #0x1
   2ecd4:	ldr	x0, [x19, #64]
   2ecd8:	str	x0, [sp, #224]
   2ecdc:	ldr	x0, [sp, #128]
   2ece0:	lsl	w22, w8, w22
   2ece4:	ldr	w2, [x19, #184]
   2ece8:	sub	w22, w22, #0x1
   2ecec:	sub	w10, w9, #0x1
   2ecf0:	cmp	w22, w15
   2ecf4:	add	x0, x0, w9, uxtw
   2ecf8:	str	x0, [sp, #272]
   2ecfc:	sub	w0, w15, w22
   2ed00:	mov	w1, w15
   2ed04:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   2ed08:	str	w0, [sp, #296]
   2ed0c:	mov	x0, x19
   2ed10:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   2ed14:	cmp	w0, #0x0
   2ed18:	and	w18, w22, w15
   2ed1c:	csel	w1, w0, w8, ne  // ne = any
   2ed20:	str	w1, [sp, #316]
   2ed24:	ldr	x1, [sp, #224]
   2ed28:	ubfiz	x18, x18, #3, #31
   2ed2c:	ldr	x23, [x19, #176]
   2ed30:	add	x1, x1, x18
   2ed34:	str	x1, [sp, #240]
   2ed38:	add	x18, x18, #0x4
   2ed3c:	ldr	x1, [sp, #224]
   2ed40:	mov	w13, #0x0                   	// #0
   2ed44:	add	x18, x1, x18
   2ed48:	add	w1, w15, #0x9
   2ed4c:	str	w1, [sp, #208]
   2ed50:	ldr	w1, [x7, #12]
   2ed54:	lsl	w1, w8, w1
   2ed58:	str	w1, [sp, #320]
   2ed5c:	ldr	x1, [x23, #8]
   2ed60:	str	x1, [sp, #232]
   2ed64:	ldr	x1, [x23]
   2ed68:	str	x1, [sp, #248]
   2ed6c:	ldr	x2, [sp, #232]
   2ed70:	sub	x1, x1, x2
   2ed74:	str	x1, [sp, #184]
   2ed78:	ldr	w1, [x23, #28]
   2ed7c:	str	w1, [sp, #256]
   2ed80:	ldr	w1, [sp, #184]
   2ed84:	ldr	w2, [x23, #192]
   2ed88:	sub	w1, w0, w1
   2ed8c:	str	w1, [sp, #280]
   2ed90:	ldr	w1, [x23, #188]
   2ed94:	str	w2, [sp, #328]
   2ed98:	sub	w1, w1, #0x1
   2ed9c:	lsl	w8, w8, w1
   2eda0:	sub	w1, w8, #0x1
   2eda4:	str	w1, [sp, #264]
   2eda8:	ldr	w1, [sp, #184]
   2edac:	ldr	w2, [sp, #256]
   2edb0:	ldr	w3, [sp, #264]
   2edb4:	sub	w1, w1, w2
   2edb8:	ldr	w2, [sp, #184]
   2edbc:	cmp	w3, w1
   2edc0:	ldrb	w8, [sp, #136]
   2edc4:	sub	w2, w2, w3
   2edc8:	ldr	w3, [sp, #256]
   2edcc:	csel	w2, w2, w3, cc  // cc = lo, ul, last
   2edd0:	str	w2, [sp, #360]
   2edd4:	ldr	w2, [sp, #192]
   2edd8:	mov	w3, #0x4                   	// #4
   2eddc:	sub	w24, w2, #0x1
   2ede0:	ldr	w2, [sp, #136]
   2ede4:	cmp	w2, #0x0
   2ede8:	mov	w2, #0x3                   	// #3
   2edec:	csel	w2, w3, w2, ne  // ne = any
   2edf0:	str	w2, [sp, #352]
   2edf4:	ldr	x2, [sp, #216]
   2edf8:	str	x2, [sp, #376]
   2edfc:	sub	w2, w15, w9
   2ee00:	str	w2, [sp, #368]
   2ee04:	sub	w2, w15, w0
   2ee08:	add	x9, x26, #0x4
   2ee0c:	add	w1, w2, w1
   2ee10:	str	w1, [sp, #388]
   2ee14:	sub	w1, w10, w15
   2ee18:	str	w1, [sp, #392]
   2ee1c:	ldr	w1, [sp, #184]
   2ee20:	sub	w0, w0, w1
   2ee24:	str	x0, [sp, #400]
   2ee28:	mov	w27, w8
   2ee2c:	cmp	w8, #0x3
   2ee30:	b.ne	2f064 <ZSTD_compress@@Base+0x20818>  // b.any
   2ee34:	ldr	x0, [sp, #120]
   2ee38:	ldr	w0, [x0, #16]
   2ee3c:	sub	w0, w0, #0x1
   2ee40:	ldr	w1, [sp, #368]
   2ee44:	sub	w2, w0, #0x1
   2ee48:	cmp	w2, w1
   2ee4c:	b.cs	2f070 <ZSTD_compress@@Base+0x20824>  // b.hs, b.nlast
   2ee50:	mov	w1, w0
   2ee54:	sub	x0, x26, w0, uxtw
   2ee58:	ldr	w2, [x0]
   2ee5c:	ldr	w0, [x26]
   2ee60:	cmp	w2, w0
   2ee64:	b.ne	2f0d0 <ZSTD_compress@@Base+0x20884>  // b.any
   2ee68:	mov	x0, #0x4                   	// #4
   2ee6c:	sub	x1, x0, x1
   2ee70:	mov	x2, x21
   2ee74:	add	x1, x26, x1
   2ee78:	mov	x0, x9
   2ee7c:	stp	x9, x8, [sp, #408]
   2ee80:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2ee84:	ldp	x9, x8, [sp, #408]
   2ee88:	add	w0, w0, #0x4
   2ee8c:	mov	w1, w0
   2ee90:	cmp	x24, w0, uxtw
   2ee94:	b.cs	2eecc <ZSTD_compress@@Base+0x20680>  // b.hs, b.nlast
   2ee98:	ubfiz	x2, x13, #3, #32
   2ee9c:	ldr	w4, [sp, #136]
   2eea0:	add	x3, x28, x2
   2eea4:	add	w13, w13, #0x1
   2eea8:	sub	w27, w27, w4
   2eeac:	str	w27, [x28, x2]
   2eeb0:	add	x2, x26, x1
   2eeb4:	cmp	x2, x21
   2eeb8:	ldr	w2, [sp, #200]
   2eebc:	str	w0, [x3, #4]
   2eec0:	ccmp	w0, w2, #0x2, ne  // ne = any
   2eec4:	b.hi	2e9e8 <ZSTD_compress@@Base+0x2019c>  // b.pmore
   2eec8:	mov	x24, x1
   2eecc:	ldr	w0, [sp, #352]
   2eed0:	add	x8, x8, #0x1
   2eed4:	cmp	w0, w8
   2eed8:	b.hi	2ee28 <ZSTD_compress@@Base+0x205dc>  // b.pmore
   2eedc:	ldr	x0, [sp, #176]
   2eee0:	add	w27, w14, #0x2
   2eee4:	ldr	x1, [sp, #304]
   2eee8:	mov	x10, #0x0                   	// #0
   2eeec:	mov	x8, #0x0                   	// #0
   2eef0:	str	w15, [x0, x1]
   2eef4:	ldr	w0, [sp, #320]
   2eef8:	sub	w15, w0, #0x1
   2eefc:	cmn	w15, #0x1
   2ef00:	b.eq	2ef10 <ZSTD_compress@@Base+0x206c4>  // b.none
   2ef04:	ldr	w0, [sp, #316]
   2ef08:	cmp	w0, w25
   2ef0c:	b.ls	2f0d8 <ZSTD_compress@@Base+0x2088c>  // b.plast
   2ef10:	ldr	x0, [sp, #240]
   2ef14:	str	wzr, [x18]
   2ef18:	str	wzr, [x0]
   2ef1c:	cbz	w15, 2e0a4 <ZSTD_compress@@Base+0x1f858>
   2ef20:	ldr	w1, [sp, #328]
   2ef24:	mov	x0, x26
   2ef28:	mov	w2, #0x5                   	// #5
   2ef2c:	mov	x27, #0x0                   	// #0
   2ef30:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   2ef34:	add	w8, w14, #0x2
   2ef38:	ldr	x1, [x23, #48]
   2ef3c:	mov	x5, #0x0                   	// #0
   2ef40:	ldr	w10, [sp, #280]
   2ef44:	ldr	x6, [x23, #64]
   2ef48:	ldr	w18, [x1, x0, lsl #2]
   2ef4c:	ldr	x0, [sp, #184]
   2ef50:	and	x25, x0, #0xffffffff
   2ef54:	ldr	w0, [sp, #256]
   2ef58:	cmp	w0, w18
   2ef5c:	b.cs	2e0a4 <ZSTD_compress@@Base+0x1f858>  // b.hs, b.nlast
   2ef60:	ldr	w0, [sp, #264]
   2ef64:	cmp	x5, x27
   2ef68:	ldr	x3, [sp, #248]
   2ef6c:	and	w22, w0, w18
   2ef70:	ldr	x0, [sp, #232]
   2ef74:	ubfiz	x22, x22, #3, #31
   2ef78:	ldr	x4, [sp, #272]
   2ef7c:	csel	x14, x5, x27, ls  // ls = plast
   2ef80:	add	x7, x0, w18, uxtw
   2ef84:	add	x9, x6, x22
   2ef88:	add	x1, x7, x14
   2ef8c:	mov	w23, w18
   2ef90:	add	x0, x26, x14
   2ef94:	mov	x2, x21
   2ef98:	stp	x7, x5, [sp, #176]
   2ef9c:	str	x9, [sp, #200]
   2efa0:	str	x6, [sp, #224]
   2efa4:	str	x10, [sp, #240]
   2efa8:	str	w8, [sp, #296]
   2efac:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2efb0:	add	x14, x14, x0
   2efb4:	ldr	w8, [sp, #296]
   2efb8:	add	x0, x23, x14
   2efbc:	cmp	x0, x25
   2efc0:	ldp	x7, x5, [sp, #176]
   2efc4:	ldr	x9, [sp, #200]
   2efc8:	ldr	x6, [sp, #224]
   2efcc:	ldr	x10, [sp, #240]
   2efd0:	b.cc	2efe0 <ZSTD_compress@@Base+0x20794>  // b.lo, b.ul, b.last
   2efd4:	ldr	x0, [sp, #128]
   2efd8:	add	x23, x10, x23
   2efdc:	add	x7, x0, x23
   2efe0:	cmp	x14, x24
   2efe4:	b.ls	2f034 <ZSTD_compress@@Base+0x207e8>  // b.plast
   2efe8:	ldr	w0, [sp, #280]
   2efec:	add	w1, w0, w18
   2eff0:	ldr	w0, [sp, #208]
   2eff4:	sub	w0, w0, w1
   2eff8:	cmp	x14, x0
   2effc:	b.ls	2f008 <ZSTD_compress@@Base+0x207bc>  // b.plast
   2f000:	add	w0, w1, w14
   2f004:	str	w0, [sp, #208]
   2f008:	ubfiz	x0, x13, #3, #32
   2f00c:	sub	w1, w8, w1
   2f010:	add	x2, x28, x0
   2f014:	cmp	x14, #0x1, lsl #12
   2f018:	add	w13, w13, #0x1
   2f01c:	str	w1, [x28, x0]
   2f020:	add	x1, x26, x14
   2f024:	str	w14, [x2, #4]
   2f028:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2f02c:	b.eq	2e0a4 <ZSTD_compress@@Base+0x1f858>  // b.none
   2f030:	mov	x24, x14
   2f034:	ldr	w0, [sp, #360]
   2f038:	cmp	w0, w18
   2f03c:	b.cs	2e0a4 <ZSTD_compress@@Base+0x1f858>  // b.hs, b.nlast
   2f040:	ldrb	w1, [x7, x14]
   2f044:	ldrb	w0, [x26, x14]
   2f048:	cmp	w1, w0
   2f04c:	b.cs	2f1dc <ZSTD_compress@@Base+0x20990>  // b.hs, b.nlast
   2f050:	ldr	w18, [x9, #4]
   2f054:	mov	x5, x14
   2f058:	subs	w15, w15, #0x1
   2f05c:	b.ne	2ef54 <ZSTD_compress@@Base+0x20708>  // b.any
   2f060:	b	2e0a4 <ZSTD_compress@@Base+0x1f858>
   2f064:	ldr	x0, [sp, #376]
   2f068:	ldr	w0, [x0, x8, lsl #2]
   2f06c:	b	2ee40 <ZSTD_compress@@Base+0x205f4>
   2f070:	ldr	w3, [sp, #388]
   2f074:	ldr	w1, [sp, #392]
   2f078:	cmp	w2, w3
   2f07c:	add	w1, w1, w0
   2f080:	ccmp	w1, #0x2, #0x0, cc  // cc = lo, ul, last
   2f084:	b.ls	2f0d0 <ZSTD_compress@@Base+0x20884>  // b.plast
   2f088:	ldr	x1, [sp, #400]
   2f08c:	sub	w0, w14, w0
   2f090:	ldr	x2, [sp, #232]
   2f094:	sub	x0, x0, x1
   2f098:	ldr	x1, [sp, #232]
   2f09c:	ldr	w2, [x2, x0]
   2f0a0:	add	x1, x1, x0
   2f0a4:	ldr	w0, [x26]
   2f0a8:	cmp	w2, w0
   2f0ac:	b.ne	2f0d0 <ZSTD_compress@@Base+0x20884>  // b.any
   2f0b0:	ldr	x3, [sp, #248]
   2f0b4:	mov	x2, x21
   2f0b8:	ldr	x4, [sp, #272]
   2f0bc:	add	x1, x1, #0x4
   2f0c0:	mov	x0, x9
   2f0c4:	stp	x9, x8, [sp, #408]
   2f0c8:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2f0cc:	b	2ee84 <ZSTD_compress@@Base+0x20638>
   2f0d0:	mov	w0, #0x0                   	// #0
   2f0d4:	b	2ee8c <ZSTD_compress@@Base+0x20640>
   2f0d8:	and	w9, w22, w25
   2f0dc:	cmp	x8, x10
   2f0e0:	ldr	x0, [sp, #224]
   2f0e4:	ubfiz	x9, x9, #3, #31
   2f0e8:	csel	x12, x8, x10, ls  // ls = plast
   2f0ec:	mov	x2, x21
   2f0f0:	add	x11, x0, x9
   2f0f4:	ldr	x0, [sp, #128]
   2f0f8:	add	x7, x0, w25, uxtw
   2f0fc:	add	x0, x26, x12
   2f100:	add	x1, x7, x12
   2f104:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2f108:	add	x12, x12, x0
   2f10c:	cmp	x12, x24
   2f110:	b.ls	2f15c <ZSTD_compress@@Base+0x20910>  // b.plast
   2f114:	ldr	w0, [sp, #208]
   2f118:	mov	w2, w12
   2f11c:	sub	w0, w0, w25
   2f120:	cmp	x12, x0
   2f124:	b.ls	2f130 <ZSTD_compress@@Base+0x208e4>  // b.plast
   2f128:	add	w0, w25, w12
   2f12c:	str	w0, [sp, #208]
   2f130:	ubfiz	x0, x13, #3, #32
   2f134:	sub	w3, w27, w25
   2f138:	add	x1, x28, x0
   2f13c:	cmp	x12, #0x1, lsl #12
   2f140:	add	w13, w13, #0x1
   2f144:	mov	x24, x12
   2f148:	str	w3, [x28, x0]
   2f14c:	str	w2, [x1, #4]
   2f150:	add	x1, x26, x12
   2f154:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2f158:	b.eq	2f1c0 <ZSTD_compress@@Base+0x20974>  // b.none
   2f15c:	ldrb	w1, [x7, x12]
   2f160:	ldrb	w0, [x26, x12]
   2f164:	cmp	w1, w0
   2f168:	b.cs	2f198 <ZSTD_compress@@Base+0x2094c>  // b.hs, b.nlast
   2f16c:	ldr	x0, [sp, #240]
   2f170:	str	w25, [x0]
   2f174:	ldr	w0, [sp, #296]
   2f178:	cmp	w25, w0
   2f17c:	b.ls	2f1c8 <ZSTD_compress@@Base+0x2097c>  // b.plast
   2f180:	ldr	w25, [x11, #4]
   2f184:	add	x0, x11, #0x4
   2f188:	str	x0, [sp, #240]
   2f18c:	sub	w15, w15, #0x1
   2f190:	mov	x8, x12
   2f194:	b	2eefc <ZSTD_compress@@Base+0x206b0>
   2f198:	ldr	w0, [sp, #296]
   2f19c:	str	w25, [x18]
   2f1a0:	cmp	w25, w0
   2f1a4:	b.ls	2f1d4 <ZSTD_compress@@Base+0x20988>  // b.plast
   2f1a8:	ldr	x0, [sp, #224]
   2f1ac:	mov	x10, x12
   2f1b0:	mov	x18, x11
   2f1b4:	mov	x12, x8
   2f1b8:	ldr	w25, [x0, x9]
   2f1bc:	b	2f18c <ZSTD_compress@@Base+0x20940>
   2f1c0:	mov	w15, #0x0                   	// #0
   2f1c4:	b	2ef10 <ZSTD_compress@@Base+0x206c4>
   2f1c8:	add	x0, sp, #0x1c0
   2f1cc:	str	x0, [sp, #240]
   2f1d0:	b	2ef10 <ZSTD_compress@@Base+0x206c4>
   2f1d4:	add	x18, sp, #0x1c0
   2f1d8:	b	2ef10 <ZSTD_compress@@Base+0x206c4>
   2f1dc:	ldr	w18, [x6, x22]
   2f1e0:	mov	x27, x14
   2f1e4:	b	2f058 <ZSTD_compress@@Base+0x2080c>
   2f1e8:	ldr	x0, [sp, #376]
   2f1ec:	ldr	w0, [x0, x8, lsl #2]
   2f1f0:	b	2e290 <ZSTD_compress@@Base+0x1fa44>
   2f1f4:	ldr	w3, [sp, #388]
   2f1f8:	ldr	w1, [sp, #392]
   2f1fc:	cmp	w2, w3
   2f200:	add	w1, w1, w0
   2f204:	ccmp	w1, #0x2, #0x0, cc  // cc = lo, ul, last
   2f208:	b.ls	2f254 <ZSTD_compress@@Base+0x20a08>  // b.plast
   2f20c:	ldr	x1, [sp, #400]
   2f210:	sub	w0, w14, w0
   2f214:	ldr	x2, [sp, #232]
   2f218:	sub	x0, x0, x1
   2f21c:	ldr	x1, [sp, #232]
   2f220:	ldr	w2, [x2, x0]
   2f224:	add	x1, x1, x0
   2f228:	ldr	w0, [x26]
   2f22c:	cmp	w2, w0
   2f230:	b.ne	2f254 <ZSTD_compress@@Base+0x20a08>  // b.any
   2f234:	ldr	x3, [sp, #248]
   2f238:	mov	x2, x21
   2f23c:	ldr	x4, [sp, #272]
   2f240:	add	x1, x1, #0x4
   2f244:	mov	x0, x9
   2f248:	stp	x9, x8, [sp, #408]
   2f24c:	bl	200cc <ZSTD_compress@@Base+0x11880>
   2f250:	b	2e2d4 <ZSTD_compress@@Base+0x1fa88>
   2f254:	mov	w0, #0x0                   	// #0
   2f258:	b	2e2dc <ZSTD_compress@@Base+0x1fa90>
   2f25c:	and	w9, w22, w25
   2f260:	cmp	x8, x10
   2f264:	ldr	x0, [sp, #224]
   2f268:	ubfiz	x9, x9, #3, #31
   2f26c:	csel	x12, x8, x10, ls  // ls = plast
   2f270:	mov	x2, x21
   2f274:	add	x11, x0, x9
   2f278:	ldr	x0, [sp, #128]
   2f27c:	add	x7, x0, w25, uxtw
   2f280:	add	x0, x26, x12
   2f284:	add	x1, x7, x12
   2f288:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2f28c:	add	x12, x12, x0
   2f290:	cmp	x12, x24
   2f294:	b.ls	2f2e0 <ZSTD_compress@@Base+0x20a94>  // b.plast
   2f298:	ldr	w0, [sp, #208]
   2f29c:	mov	w2, w12
   2f2a0:	sub	w0, w0, w25
   2f2a4:	cmp	x12, x0
   2f2a8:	b.ls	2f2b4 <ZSTD_compress@@Base+0x20a68>  // b.plast
   2f2ac:	add	w0, w25, w12
   2f2b0:	str	w0, [sp, #208]
   2f2b4:	ubfiz	x0, x13, #3, #32
   2f2b8:	sub	w3, w27, w25
   2f2bc:	add	x1, x28, x0
   2f2c0:	cmp	x12, #0x1, lsl #12
   2f2c4:	add	w13, w13, #0x1
   2f2c8:	mov	x24, x12
   2f2cc:	str	w3, [x28, x0]
   2f2d0:	str	w2, [x1, #4]
   2f2d4:	add	x1, x26, x12
   2f2d8:	ccmp	x1, x21, #0x4, ls  // ls = plast
   2f2dc:	b.eq	2f344 <ZSTD_compress@@Base+0x20af8>  // b.none
   2f2e0:	ldrb	w1, [x7, x12]
   2f2e4:	ldrb	w0, [x26, x12]
   2f2e8:	cmp	w1, w0
   2f2ec:	b.cs	2f31c <ZSTD_compress@@Base+0x20ad0>  // b.hs, b.nlast
   2f2f0:	ldr	x0, [sp, #240]
   2f2f4:	str	w25, [x0]
   2f2f8:	ldr	w0, [sp, #296]
   2f2fc:	cmp	w25, w0
   2f300:	b.ls	2f34c <ZSTD_compress@@Base+0x20b00>  // b.plast
   2f304:	ldr	w25, [x11, #4]
   2f308:	add	x0, x11, #0x4
   2f30c:	str	x0, [sp, #240]
   2f310:	sub	w15, w15, #0x1
   2f314:	mov	x8, x12
   2f318:	b	2e34c <ZSTD_compress@@Base+0x1fb00>
   2f31c:	ldr	w0, [sp, #296]
   2f320:	str	w25, [x18]
   2f324:	cmp	w25, w0
   2f328:	b.ls	2f358 <ZSTD_compress@@Base+0x20b0c>  // b.plast
   2f32c:	ldr	x0, [sp, #224]
   2f330:	mov	x10, x12
   2f334:	mov	x18, x11
   2f338:	mov	x12, x8
   2f33c:	ldr	w25, [x0, x9]
   2f340:	b	2f310 <ZSTD_compress@@Base+0x20ac4>
   2f344:	mov	w15, #0x0                   	// #0
   2f348:	b	2e360 <ZSTD_compress@@Base+0x1fb14>
   2f34c:	add	x0, sp, #0x1c0
   2f350:	str	x0, [sp, #240]
   2f354:	b	2e360 <ZSTD_compress@@Base+0x1fb14>
   2f358:	add	x18, sp, #0x1c0
   2f35c:	b	2e360 <ZSTD_compress@@Base+0x1fb14>
   2f360:	ldr	w18, [x6, x22]
   2f364:	mov	x5, x25
   2f368:	b	2e4a8 <ZSTD_compress@@Base+0x1fc5c>
   2f36c:	mov	w6, #0x0                   	// #0
   2f370:	b	2e7bc <ZSTD_compress@@Base+0x1ff70>
   2f374:	mov	x9, x28
   2f378:	mov	w5, #0x0                   	// #0
   2f37c:	ldr	w11, [x9]
   2f380:	ldr	w2, [sp, #136]
   2f384:	ldr	x0, [sp, #216]
   2f388:	mov	w1, w11
   2f38c:	bl	205a8 <ZSTD_compress@@Base+0x11d5c>
   2f390:	str	w0, [sp, #448]
   2f394:	lsr	x0, x0, #32
   2f398:	str	w0, [sp, #452]
   2f39c:	str	w1, [sp, #456]
   2f3a0:	ldr	w3, [x9, #4]
   2f3a4:	cbz	w5, 2f408 <ZSTD_compress@@Base+0x20bbc>
   2f3a8:	sub	w0, w5, #0x1
   2f3ac:	add	x0, x28, x0, lsl #3
   2f3b0:	ldr	w10, [x0, #4]
   2f3b4:	add	w10, w10, #0x1
   2f3b8:	add	w2, w11, #0x1
   2f3bc:	ldr	w0, [sp, #152]
   2f3c0:	clz	w2, w2
   2f3c4:	ldr	w1, [sp, #344]
   2f3c8:	eor	w2, w2, #0x1f
   2f3cc:	add	w4, w0, w3
   2f3d0:	add	w12, w2, #0x10
   2f3d4:	ldr	w0, [sp, #384]
   2f3d8:	sbfiz	x15, x2, #2, #32
   2f3dc:	mov	w14, #0x1c                  	// #28
   2f3e0:	lsl	w12, w12, #8
   2f3e4:	add	w18, w0, w1
   2f3e8:	mov	w22, #0x40000000            	// #1073741824
   2f3ec:	cmp	w3, w10
   2f3f0:	b.cs	2f410 <ZSTD_compress@@Base+0x20bc4>  // b.hs, b.nlast
   2f3f4:	add	w5, w5, #0x1
   2f3f8:	add	x9, x9, #0x8
   2f3fc:	cmp	w13, w5
   2f400:	b.ne	2f37c <ZSTD_compress@@Base+0x20b30>  // b.any
   2f404:	b	2e9ec <ZSTD_compress@@Base+0x201a0>
   2f408:	ldr	w10, [sp, #192]
   2f40c:	b	2f3b8 <ZSTD_compress@@Base+0x20b6c>
   2f410:	ldr	w0, [x19, #152]
   2f414:	add	x8, x19, #0x48
   2f418:	sub	w23, w3, #0x3
   2f41c:	cmp	w0, #0x1
   2f420:	b.ne	2f48c <ZSTD_compress@@Base+0x20c40>  // b.any
   2f424:	mov	w0, w23
   2f428:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   2f42c:	add	w0, w12, w0
   2f430:	ldr	x1, [sp, #96]
   2f434:	umull	x7, w4, w14
   2f438:	add	w0, w18, w0
   2f43c:	add	x6, x1, x7
   2f440:	ldr	w1, [sp, #160]
   2f444:	cmp	w1, w4
   2f448:	b.cc	2f4e0 <ZSTD_compress@@Base+0x20c94>  // b.lo, b.ul, b.last
   2f44c:	ldr	x1, [sp, #96]
   2f450:	ldr	w1, [x1, x7]
   2f454:	cmp	w0, w1
   2f458:	b.ge	2f480 <ZSTD_compress@@Base+0x20c34>  // b.tcont
   2f45c:	ldr	w1, [sp, #196]
   2f460:	str	w1, [x6, #12]
   2f464:	ldr	x1, [sp, #96]
   2f468:	stp	w11, w3, [x6, #4]
   2f46c:	str	w0, [x1, x7]
   2f470:	ldr	x0, [sp, #448]
   2f474:	str	x0, [x6, #16]
   2f478:	ldr	w0, [sp, #456]
   2f47c:	str	w0, [x6, #24]
   2f480:	sub	w3, w3, #0x1
   2f484:	sub	w4, w4, #0x1
   2f488:	b	2f3ec <ZSTD_compress@@Base+0x20ba0>
   2f48c:	ldr	x0, [x8, #24]
   2f490:	ldr	w0, [x0, x15]
   2f494:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   2f498:	mov	w7, w0
   2f49c:	mov	w0, w23
   2f4a0:	bl	2043c <ZSTD_compress@@Base+0x11bf0>
   2f4a4:	mov	w23, w0
   2f4a8:	ldp	w1, w6, [x8, #72]
   2f4ac:	add	w6, w6, w1
   2f4b0:	ldr	x1, [x8, #16]
   2f4b4:	ldr	w0, [x1, w0, uxtw #2]
   2f4b8:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   2f4bc:	add	w0, w7, w0
   2f4c0:	ldr	x1, [sp, #336]
   2f4c4:	sub	w0, w6, w0
   2f4c8:	ldr	w1, [x1, x23, lsl #2]
   2f4cc:	add	w1, w2, w1
   2f4d0:	lsl	w1, w1, #8
   2f4d4:	add	w1, w1, #0x33
   2f4d8:	add	w0, w1, w0
   2f4dc:	b	2f430 <ZSTD_compress@@Base+0x20be4>
   2f4e0:	ldr	w1, [sp, #160]
   2f4e4:	ldr	x8, [sp, #96]
   2f4e8:	add	w1, w1, #0x1
   2f4ec:	umaddl	x1, w1, w14, x8
   2f4f0:	ldr	w8, [sp, #160]
   2f4f4:	str	w22, [x1], #28
   2f4f8:	add	w8, w8, #0x1
   2f4fc:	str	w8, [sp, #160]
   2f500:	cmp	w8, w4
   2f504:	b.ne	2f4f0 <ZSTD_compress@@Base+0x20ca4>  // b.any
   2f508:	b	2f45c <ZSTD_compress@@Base+0x20c10>
   2f50c:	sub	w6, w6, w4
   2f510:	b	2dae0 <ZSTD_compress@@Base+0x1f294>
   2f514:	ldr	x0, [sp, #96]
   2f518:	ldr	x1, [sp, #112]
   2f51c:	umaddl	x0, w10, w14, x0
   2f520:	ldp	w22, w9, [x0, #8]
   2f524:	mov	w23, w9
   2f528:	add	x20, x1, w9, uxtw
   2f52c:	cbz	w22, 2f684 <ZSTD_compress@@Base+0x20e38>
   2f530:	ldr	w11, [x0, #4]
   2f534:	cmp	w11, #0x2
   2f538:	b.ls	2f68c <ZSTD_compress@@Base+0x20e40>  // b.plast
   2f53c:	ldr	x0, [sp, #104]
   2f540:	ldr	x1, [sp, #104]
   2f544:	ldr	w0, [x0, #4]
   2f548:	str	w0, [x1, #8]
   2f54c:	ldr	w0, [x1]
   2f550:	str	w0, [x1, #4]
   2f554:	sub	w0, w11, #0x2
   2f558:	str	w0, [x1]
   2f55c:	ldr	x2, [sp, #112]
   2f560:	mov	w4, w22
   2f564:	ldr	x0, [sp, #168]
   2f568:	mov	w3, w11
   2f56c:	mov	w1, w9
   2f570:	bl	209b4 <ZSTD_compress@@Base+0x12168>
   2f574:	cmp	x12, x20
   2f578:	sub	w5, w22, #0x3
   2f57c:	b.cc	2f6dc <ZSTD_compress@@Base+0x20e90>  // b.lo, b.ul, b.last
   2f580:	ldr	x0, [sp, #144]
   2f584:	cmp	x23, #0x10
   2f588:	ldr	x2, [x0, #24]
   2f58c:	ldr	x0, [sp, #112]
   2f590:	ldp	x0, x1, [x0]
   2f594:	stp	x0, x1, [x2]
   2f598:	b.ls	2f5f4 <ZSTD_compress@@Base+0x20da8>  // b.plast
   2f59c:	ldr	x0, [sp, #144]
   2f5a0:	ldr	x3, [x0, #24]
   2f5a4:	ldr	x0, [sp, #112]
   2f5a8:	add	x2, x3, x23
   2f5ac:	add	x3, x3, #0x30
   2f5b0:	ldp	x0, x1, [x0, #16]
   2f5b4:	stp	x0, x1, [x3, #-32]
   2f5b8:	ldr	x0, [sp, #112]
   2f5bc:	ldp	x0, x1, [x0, #32]
   2f5c0:	stp	x0, x1, [x3, #-16]
   2f5c4:	cmp	x2, x3
   2f5c8:	b.ls	2f5f4 <ZSTD_compress@@Base+0x20da8>  // b.plast
   2f5cc:	ldr	x0, [sp, #112]
   2f5d0:	add	x4, x0, #0x30
   2f5d4:	ldp	x0, x1, [x4]
   2f5d8:	stp	x0, x1, [x3]
   2f5dc:	add	x3, x3, #0x20
   2f5e0:	ldp	x0, x1, [x4, #16]
   2f5e4:	stp	x0, x1, [x3, #-16]
   2f5e8:	add	x4, x4, #0x20
   2f5ec:	cmp	x2, x3
   2f5f0:	b.hi	2f5d4 <ZSTD_compress@@Base+0x20d88>  // b.pmore
   2f5f4:	ldr	x0, [sp, #144]
   2f5f8:	cmp	x23, x13
   2f5fc:	ldr	x1, [sp, #144]
   2f600:	ldr	x0, [x0, #24]
   2f604:	add	x0, x0, x23
   2f608:	str	x0, [x1, #24]
   2f60c:	ldr	x0, [x1, #8]
   2f610:	b.ls	2f630 <ZSTD_compress@@Base+0x20de4>  // b.plast
   2f614:	ldr	x2, [sp, #144]
   2f618:	mov	w1, #0x1                   	// #1
   2f61c:	str	w1, [x2, #72]
   2f620:	ldr	x1, [x2]
   2f624:	sub	x1, x0, x1
   2f628:	asr	x1, x1, #3
   2f62c:	str	w1, [x2, #76]
   2f630:	add	w11, w11, #0x1
   2f634:	str	w11, [x0]
   2f638:	strh	w9, [x0, #4]
   2f63c:	cmp	w5, w15
   2f640:	b.ls	2f660 <ZSTD_compress@@Base+0x20e14>  // b.plast
   2f644:	ldr	x1, [sp, #144]
   2f648:	ldr	x2, [sp, #144]
   2f64c:	str	w18, [x1, #72]
   2f650:	ldr	x1, [x1]
   2f654:	sub	x1, x0, x1
   2f658:	asr	x1, x1, #3
   2f65c:	str	w1, [x2, #76]
   2f660:	ldr	x1, [sp, #144]
   2f664:	add	x0, x0, #0x8
   2f668:	sturh	w5, [x0, #-2]
   2f66c:	add	w9, w9, w22
   2f670:	str	x0, [x1, #8]
   2f674:	ldr	x0, [sp, #112]
   2f678:	add	x0, x0, x9
   2f67c:	str	x0, [sp, #112]
   2f680:	mov	x20, x0
   2f684:	add	w10, w10, #0x1
   2f688:	b	2db34 <ZSTD_compress@@Base+0x1f2e8>
   2f68c:	cmp	w9, #0x0
   2f690:	cinc	w0, w11, eq  // eq = none
   2f694:	cbz	w0, 2f55c <ZSTD_compress@@Base+0x20d10>
   2f698:	ldr	x1, [sp, #104]
   2f69c:	cmp	w0, #0x3
   2f6a0:	ldr	w2, [x1]
   2f6a4:	b.ne	2f6c0 <ZSTD_compress@@Base+0x20e74>  // b.any
   2f6a8:	sub	w1, w2, #0x1
   2f6ac:	ldr	x0, [sp, #104]
   2f6b0:	ldr	x3, [sp, #104]
   2f6b4:	ldr	w0, [x0, #4]
   2f6b8:	str	w0, [x3, #8]
   2f6bc:	b	2f6d0 <ZSTD_compress@@Base+0x20e84>
   2f6c0:	ldr	x1, [sp, #104]
   2f6c4:	cmp	w0, #0x1
   2f6c8:	ldr	w1, [x1, w0, uxtw #2]
   2f6cc:	b.ne	2f6ac <ZSTD_compress@@Base+0x20e60>  // b.any
   2f6d0:	ldr	x0, [sp, #104]
   2f6d4:	stp	w1, w2, [x0]
   2f6d8:	b	2f55c <ZSTD_compress@@Base+0x20d10>
   2f6dc:	ldr	x0, [sp, #144]
   2f6e0:	mov	x3, x12
   2f6e4:	ldr	x1, [sp, #112]
   2f6e8:	mov	x2, x20
   2f6ec:	ldr	x0, [x0, #24]
   2f6f0:	bl	1fe1c <ZSTD_compress@@Base+0x115d0>
   2f6f4:	b	2f5f4 <ZSTD_compress@@Base+0x20da8>
   2f6f8:	stp	x29, x30, [sp, #-448]!
   2f6fc:	mov	x29, sp
   2f700:	stp	x19, x20, [sp, #16]
   2f704:	mov	x19, x0
   2f708:	add	x20, x3, x4
   2f70c:	add	x0, x0, #0x48
   2f710:	stp	x21, x22, [sp, #32]
   2f714:	str	x0, [sp, #184]
   2f718:	sub	x0, x20, #0x8
   2f71c:	ldr	x21, [x19, #8]
   2f720:	str	x0, [sp, #288]
   2f724:	ldr	w0, [x19, #24]
   2f728:	str	x1, [sp, #160]
   2f72c:	ldr	w1, [x19, #204]
   2f730:	add	x21, x21, x0
   2f734:	ldr	w0, [x19, #200]
   2f738:	cmp	w1, #0xfff
   2f73c:	str	w0, [sp, #192]
   2f740:	stp	x2, x3, [sp, #120]
   2f744:	mov	w3, #0xfff                 	// #4095
   2f748:	csel	w1, w1, w3, ls  // ls = plast
   2f74c:	mov	w0, w0
   2f750:	str	w1, [sp, #296]
   2f754:	ldr	w1, [sp, #192]
   2f758:	cmp	w0, #0x3
   2f75c:	mov	w0, #0x4                   	// #4
   2f760:	stp	x23, x24, [sp, #48]
   2f764:	csel	w0, w1, w0, eq  // eq = none
   2f768:	str	w0, [sp, #192]
   2f76c:	mov	x2, x4
   2f770:	ldr	w0, [x19, #36]
   2f774:	mov	w3, #0x0                   	// #0
   2f778:	str	w0, [sp, #396]
   2f77c:	ldr	x0, [x19, #112]
   2f780:	str	x0, [sp, #112]
   2f784:	ldr	x0, [x19, #104]
   2f788:	stp	x25, x26, [sp, #64]
   2f78c:	stp	x27, x28, [sp, #80]
   2f790:	str	x0, [sp, #104]
   2f794:	add	x0, x19, #0x48
   2f798:	ldr	x1, [sp, #128]
   2f79c:	bl	20648 <ZSTD_compress@@Base+0x11dfc>
   2f7a0:	ldr	x0, [sp, #128]
   2f7a4:	cmp	x0, x21
   2f7a8:	cinc	x21, x0, eq  // eq = none
   2f7ac:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   2f7b0:	add	x0, x0, #0x4c8
   2f7b4:	add	x0, x0, #0x150
   2f7b8:	str	x0, [sp, #336]
   2f7bc:	ldr	x0, [sp, #288]
   2f7c0:	cmp	x0, x21
   2f7c4:	b.hi	2f7ec <ZSTD_compress@@Base+0x20fa0>  // b.pmore
   2f7c8:	ldr	x0, [sp, #128]
   2f7cc:	ldp	x21, x22, [sp, #32]
   2f7d0:	sub	x0, x20, x0
   2f7d4:	ldp	x19, x20, [sp, #16]
   2f7d8:	ldp	x23, x24, [sp, #48]
   2f7dc:	ldp	x25, x26, [sp, #64]
   2f7e0:	ldp	x27, x28, [sp, #80]
   2f7e4:	ldp	x29, x30, [sp], #448
   2f7e8:	ret
   2f7ec:	ldr	x23, [x19, #8]
   2f7f0:	ldr	w22, [x19, #36]
   2f7f4:	add	x0, x23, w22, uxtw
   2f7f8:	cmp	x21, x0
   2f7fc:	b.cs	2f808 <ZSTD_compress@@Base+0x20fbc>  // b.hs, b.nlast
   2f800:	add	x21, x21, #0x1
   2f804:	b	2f7bc <ZSTD_compress@@Base+0x20f70>
   2f808:	sub	x24, x21, x23
   2f80c:	ldr	w28, [x19, #200]
   2f810:	add	x27, x19, #0xb8
   2f814:	mov	w25, w24
   2f818:	cmp	w25, w22
   2f81c:	b.hi	2fa98 <ZSTD_compress@@Base+0x2124c>  // b.pmore
   2f820:	ldr	x0, [sp, #128]
   2f824:	mov	w1, #0xfff                 	// #4095
   2f828:	str	w24, [x19, #36]
   2f82c:	sub	x0, x21, x0
   2f830:	str	x0, [sp, #232]
   2f834:	ldr	w0, [sp, #232]
   2f838:	str	w0, [sp, #196]
   2f83c:	cmp	w0, #0x0
   2f840:	cset	w0, eq  // eq = none
   2f844:	str	w0, [sp, #144]
   2f848:	ldr	w0, [x27, #20]
   2f84c:	cmp	w0, #0xfff
   2f850:	csel	w0, w0, w1, ls  // ls = plast
   2f854:	str	w0, [sp, #176]
   2f858:	ldr	x0, [x19, #8]
   2f85c:	str	x0, [sp, #136]
   2f860:	ldr	w1, [x27, #8]
   2f864:	cmp	w28, #0x5
   2f868:	sub	x14, x21, x0
   2f86c:	ldr	x0, [x19, #48]
   2f870:	str	x0, [sp, #152]
   2f874:	mov	w15, w14
   2f878:	b.eq	30468 <ZSTD_compress@@Base+0x21c1c>  // b.none
   2f87c:	b.hi	2fab8 <ZSTD_compress@@Base+0x2126c>  // b.pmore
   2f880:	cmp	w28, #0x3
   2f884:	b.eq	2fda0 <ZSTD_compress@@Base+0x21554>  // b.none
   2f888:	mov	x28, x21
   2f88c:	mov	w22, #0x79b1                	// #31153
   2f890:	movk	w22, #0x9e37, lsl #16
   2f894:	neg	w1, w1
   2f898:	ldr	x0, [sp, #152]
   2f89c:	mov	w6, #0x1                   	// #1
   2f8a0:	ldr	w26, [x28], #4
   2f8a4:	ldr	w8, [x19, #24]
   2f8a8:	ldr	w2, [x19, #184]
   2f8ac:	sub	w9, w8, #0x1
   2f8b0:	mul	w22, w26, w22
   2f8b4:	lsr	w1, w22, w1
   2f8b8:	ubfiz	x22, x1, #2, #32
   2f8bc:	ldr	w24, [x0, x22]
   2f8c0:	ldr	x0, [x19, #64]
   2f8c4:	str	x0, [sp, #168]
   2f8c8:	ldr	w0, [x19, #188]
   2f8cc:	sub	w0, w0, #0x1
   2f8d0:	lsl	w0, w6, w0
   2f8d4:	sub	w0, w0, #0x1
   2f8d8:	str	w0, [sp, #200]
   2f8dc:	ldr	x0, [x19, #16]
   2f8e0:	str	x0, [sp, #208]
   2f8e4:	mov	w0, w8
   2f8e8:	str	x0, [sp, #248]
   2f8ec:	ldr	x0, [sp, #208]
   2f8f0:	ldr	w1, [sp, #200]
   2f8f4:	add	x0, x0, w8, uxtw
   2f8f8:	str	x0, [sp, #256]
   2f8fc:	ldr	x0, [sp, #136]
   2f900:	cmp	w1, w14
   2f904:	mov	w1, w14
   2f908:	add	x0, x0, w8, uxtw
   2f90c:	str	x0, [sp, #264]
   2f910:	ldr	w0, [sp, #200]
   2f914:	sub	w0, w14, w0
   2f918:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   2f91c:	str	w0, [sp, #272]
   2f920:	mov	x0, x19
   2f924:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   2f928:	cmp	w0, #0x0
   2f92c:	mov	w2, #0x4                   	// #4
   2f930:	csel	w1, w0, w6, ne  // ne = any
   2f934:	str	w1, [sp, #280]
   2f938:	ldr	w1, [sp, #200]
   2f93c:	sub	w0, w15, w0
   2f940:	ldrb	w23, [sp, #144]
   2f944:	mov	w13, #0x0                   	// #0
   2f948:	and	w18, w1, w14
   2f94c:	str	w0, [sp, #320]
   2f950:	ldr	x1, [sp, #168]
   2f954:	ubfiz	x18, x18, #3, #31
   2f958:	add	x1, x1, x18
   2f95c:	str	x1, [sp, #216]
   2f960:	ldr	x1, [sp, #168]
   2f964:	add	x18, x18, #0x4
   2f968:	add	x18, x1, x18
   2f96c:	add	w1, w14, #0x9
   2f970:	str	w1, [sp, #224]
   2f974:	ldr	w1, [x19, #196]
   2f978:	lsl	w1, w6, w1
   2f97c:	str	w1, [sp, #240]
   2f980:	ldr	w1, [sp, #192]
   2f984:	sub	w25, w1, #0x1
   2f988:	ldr	w1, [sp, #144]
   2f98c:	cmp	w1, #0x0
   2f990:	mov	w1, #0x3                   	// #3
   2f994:	csel	w1, w2, w1, ne  // ne = any
   2f998:	str	w1, [sp, #300]
   2f99c:	sub	w1, w15, w8
   2f9a0:	str	w1, [sp, #304]
   2f9a4:	sub	w1, w9, w15
   2f9a8:	str	w1, [sp, #312]
   2f9ac:	mov	w27, w23
   2f9b0:	cmp	w23, #0x3
   2f9b4:	ldr	x0, [sp, #120]
   2f9b8:	b.ne	302a8 <ZSTD_compress@@Base+0x21a5c>  // b.any
   2f9bc:	ldr	w0, [x0]
   2f9c0:	sub	w0, w0, #0x1
   2f9c4:	ldr	w2, [sp, #304]
   2f9c8:	sub	w1, w0, #0x1
   2f9cc:	cmp	w1, w2
   2f9d0:	b.cs	302b0 <ZSTD_compress@@Base+0x21a64>  // b.hs, b.nlast
   2f9d4:	mov	w1, w0
   2f9d8:	sub	x0, x21, w0, uxtw
   2f9dc:	ldr	w0, [x0]
   2f9e0:	cmp	w26, w0
   2f9e4:	b.ne	302fc <ZSTD_compress@@Base+0x21ab0>  // b.any
   2f9e8:	mov	x0, #0x4                   	// #4
   2f9ec:	sub	x1, x0, x1
   2f9f0:	mov	x2, x20
   2f9f4:	add	x1, x21, x1
   2f9f8:	mov	x0, x28
   2f9fc:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2fa00:	add	w0, w0, #0x4
   2fa04:	mov	w1, w0
   2fa08:	cmp	x25, w0, uxtw
   2fa0c:	b.cs	2fa4c <ZSTD_compress@@Base+0x21200>  // b.hs, b.nlast
   2fa10:	ldr	w4, [sp, #144]
   2fa14:	ubfiz	x2, x13, #3, #32
   2fa18:	ldr	x3, [sp, #104]
   2fa1c:	sub	w27, w27, w4
   2fa20:	ldr	x4, [sp, #104]
   2fa24:	add	x3, x3, x2
   2fa28:	add	w13, w13, #0x1
   2fa2c:	str	w27, [x4, x2]
   2fa30:	add	x2, x21, x1
   2fa34:	cmp	x2, x20
   2fa38:	ldr	w2, [sp, #176]
   2fa3c:	str	w0, [x3, #4]
   2fa40:	ccmp	w0, w2, #0x2, ne  // ne = any
   2fa44:	b.hi	3013c <ZSTD_compress@@Base+0x218f0>  // b.pmore
   2fa48:	mov	x25, x1
   2fa4c:	ldr	w0, [sp, #300]
   2fa50:	add	x23, x23, #0x1
   2fa54:	cmp	w0, w23
   2fa58:	b.hi	2f9ac <ZSTD_compress@@Base+0x21160>  // b.pmore
   2fa5c:	ldr	x0, [sp, #152]
   2fa60:	add	w15, w15, #0x2
   2fa64:	mov	x26, #0x0                   	// #0
   2fa68:	mov	x27, #0x0                   	// #0
   2fa6c:	str	w14, [x0, x22]
   2fa70:	ldr	w0, [sp, #240]
   2fa74:	cbz	w0, 2fa84 <ZSTD_compress@@Base+0x21238>
   2fa78:	ldr	w0, [sp, #280]
   2fa7c:	cmp	w0, w24
   2fa80:	b.ls	30304 <ZSTD_compress@@Base+0x21ab8>  // b.plast
   2fa84:	ldr	x0, [sp, #216]
   2fa88:	str	wzr, [x18]
   2fa8c:	str	wzr, [x0]
   2fa90:	ldr	w0, [sp, #224]
   2fa94:	b	30134 <ZSTD_compress@@Base+0x218e8>
   2fa98:	add	x1, x23, w22, uxtw
   2fa9c:	mov	w3, w28
   2faa0:	mov	x2, x20
   2faa4:	mov	x0, x19
   2faa8:	mov	w4, #0x1                   	// #1
   2faac:	bl	2012c <ZSTD_compress@@Base+0x118e0>
   2fab0:	add	w22, w22, w0
   2fab4:	b	2f818 <ZSTD_compress@@Base+0x20fcc>
   2fab8:	sub	w28, w28, #0x6
   2fabc:	cmp	w28, #0x1
   2fac0:	b.hi	2f888 <ZSTD_compress@@Base+0x2103c>  // b.pmore
   2fac4:	mov	w2, #0x6                   	// #6
   2fac8:	mov	x0, x21
   2facc:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   2fad0:	lsl	x26, x0, #2
   2fad4:	ldr	x0, [sp, #152]
   2fad8:	mov	w6, #0x1                   	// #1
   2fadc:	ldr	x24, [x19, #16]
   2fae0:	add	x28, x21, #0x4
   2fae4:	ldr	w23, [x0, x26]
   2fae8:	ldr	x0, [x19, #64]
   2faec:	str	x0, [sp, #168]
   2faf0:	ldr	w0, [x27, #4]
   2faf4:	ldr	w7, [x19, #24]
   2faf8:	sub	w0, w0, #0x1
   2fafc:	ldr	w2, [x19, #184]
   2fb00:	sub	w8, w7, #0x1
   2fb04:	lsl	w0, w6, w0
   2fb08:	sub	w0, w0, #0x1
   2fb0c:	str	w0, [sp, #200]
   2fb10:	mov	w0, w7
   2fb14:	str	x0, [sp, #240]
   2fb18:	add	x0, x24, w7, uxtw
   2fb1c:	str	x0, [sp, #248]
   2fb20:	ldr	x0, [sp, #136]
   2fb24:	ldr	w1, [sp, #200]
   2fb28:	add	x0, x0, w7, uxtw
   2fb2c:	str	x0, [sp, #256]
   2fb30:	ldr	w0, [sp, #200]
   2fb34:	cmp	w1, w14
   2fb38:	mov	w1, w14
   2fb3c:	sub	w0, w14, w0
   2fb40:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   2fb44:	str	w0, [sp, #264]
   2fb48:	mov	x0, x19
   2fb4c:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   2fb50:	cmp	w0, #0x0
   2fb54:	mov	w2, #0x4                   	// #4
   2fb58:	csel	w1, w0, w6, ne  // ne = any
   2fb5c:	str	w1, [sp, #272]
   2fb60:	ldr	w1, [sp, #200]
   2fb64:	sub	w0, w14, w0
   2fb68:	ldrb	w22, [sp, #144]
   2fb6c:	mov	w13, #0x0                   	// #0
   2fb70:	and	w18, w1, w14
   2fb74:	str	w0, [sp, #312]
   2fb78:	ldr	x1, [sp, #168]
   2fb7c:	ubfiz	x18, x18, #3, #31
   2fb80:	add	x1, x1, x18
   2fb84:	str	x1, [sp, #208]
   2fb88:	ldr	x1, [sp, #168]
   2fb8c:	add	x18, x18, #0x4
   2fb90:	add	x18, x1, x18
   2fb94:	add	w1, w14, #0x9
   2fb98:	str	w1, [sp, #216]
   2fb9c:	ldr	w1, [x27, #12]
   2fba0:	lsl	w1, w6, w1
   2fba4:	str	w1, [sp, #224]
   2fba8:	ldr	w1, [sp, #192]
   2fbac:	sub	w25, w1, #0x1
   2fbb0:	ldr	w1, [sp, #144]
   2fbb4:	cmp	w1, #0x0
   2fbb8:	mov	w1, #0x3                   	// #3
   2fbbc:	csel	w1, w2, w1, ne  // ne = any
   2fbc0:	str	w1, [sp, #280]
   2fbc4:	sub	w1, w14, w7
   2fbc8:	str	w1, [sp, #300]
   2fbcc:	sub	w1, w8, w14
   2fbd0:	str	w1, [sp, #304]
   2fbd4:	mov	w27, w22
   2fbd8:	cmp	w22, #0x3
   2fbdc:	ldr	x0, [sp, #120]
   2fbe0:	b.ne	30814 <ZSTD_compress@@Base+0x21fc8>  // b.any
   2fbe4:	ldr	w0, [x0]
   2fbe8:	sub	w0, w0, #0x1
   2fbec:	ldr	w2, [sp, #300]
   2fbf0:	sub	w1, w0, #0x1
   2fbf4:	cmp	w1, w2
   2fbf8:	b.cs	3081c <ZSTD_compress@@Base+0x21fd0>  // b.hs, b.nlast
   2fbfc:	mov	w1, w0
   2fc00:	sub	x0, x21, w0, uxtw
   2fc04:	ldr	w2, [x0]
   2fc08:	ldr	w0, [x21]
   2fc0c:	cmp	w2, w0
   2fc10:	b.ne	30864 <ZSTD_compress@@Base+0x22018>  // b.any
   2fc14:	mov	x0, #0x4                   	// #4
   2fc18:	sub	x1, x0, x1
   2fc1c:	mov	x2, x20
   2fc20:	add	x1, x21, x1
   2fc24:	mov	x0, x28
   2fc28:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2fc2c:	add	w0, w0, #0x4
   2fc30:	mov	w1, w0
   2fc34:	cmp	x25, w0, uxtw
   2fc38:	b.cs	2fc78 <ZSTD_compress@@Base+0x2142c>  // b.hs, b.nlast
   2fc3c:	ldr	w4, [sp, #144]
   2fc40:	ubfiz	x2, x13, #3, #32
   2fc44:	ldr	x3, [sp, #104]
   2fc48:	sub	w27, w27, w4
   2fc4c:	ldr	x4, [sp, #104]
   2fc50:	add	x3, x3, x2
   2fc54:	add	w13, w13, #0x1
   2fc58:	str	w27, [x4, x2]
   2fc5c:	add	x2, x21, x1
   2fc60:	cmp	x2, x20
   2fc64:	ldr	w2, [sp, #176]
   2fc68:	str	w0, [x3, #4]
   2fc6c:	ccmp	w0, w2, #0x2, ne  // ne = any
   2fc70:	b.hi	3013c <ZSTD_compress@@Base+0x218f0>  // b.pmore
   2fc74:	mov	x25, x1
   2fc78:	ldr	w0, [sp, #280]
   2fc7c:	add	x22, x22, #0x1
   2fc80:	cmp	w0, w22
   2fc84:	b.hi	2fbd4 <ZSTD_compress@@Base+0x21388>  // b.pmore
   2fc88:	ldr	x0, [sp, #152]
   2fc8c:	mov	x28, #0x0                   	// #0
   2fc90:	mov	x27, #0x0                   	// #0
   2fc94:	str	w14, [x0, x26]
   2fc98:	add	w0, w15, #0x2
   2fc9c:	str	w0, [sp, #152]
   2fca0:	ldr	w0, [sp, #224]
   2fca4:	cbz	w0, 30658 <ZSTD_compress@@Base+0x21e0c>
   2fca8:	ldr	w0, [sp, #272]
   2fcac:	cmp	w0, w23
   2fcb0:	b.hi	30658 <ZSTD_compress@@Base+0x21e0c>  // b.pmore
   2fcb4:	ldr	w0, [sp, #200]
   2fcb8:	cmp	x27, x28
   2fcbc:	ldr	x2, [sp, #240]
   2fcc0:	and	w14, w0, w23
   2fcc4:	ldr	x0, [sp, #168]
   2fcc8:	csel	x22, x27, x28, ls  // ls = plast
   2fccc:	add	x1, x22, w23, uxtw
   2fcd0:	ubfiz	x14, x14, #3, #31
   2fcd4:	add	x15, x0, x14
   2fcd8:	mov	w7, w23
   2fcdc:	add	x0, x21, x22
   2fce0:	cmp	x2, x1
   2fce4:	b.hi	3086c <ZSTD_compress@@Base+0x22020>  // b.pmore
   2fce8:	ldr	x1, [sp, #136]
   2fcec:	mov	x2, x20
   2fcf0:	add	x26, x1, x7
   2fcf4:	add	x1, x26, x22
   2fcf8:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2fcfc:	add	x0, x22, x0
   2fd00:	cmp	x25, x0
   2fd04:	b.cs	2fd5c <ZSTD_compress@@Base+0x21510>  // b.hs, b.nlast
   2fd08:	ldr	w1, [sp, #216]
   2fd0c:	mov	w3, w0
   2fd10:	sub	w1, w1, w23
   2fd14:	cmp	x0, x1
   2fd18:	b.ls	2fd24 <ZSTD_compress@@Base+0x214d8>  // b.plast
   2fd1c:	add	w1, w23, w0
   2fd20:	str	w1, [sp, #216]
   2fd24:	ldr	x2, [sp, #104]
   2fd28:	ubfiz	x1, x13, #3, #32
   2fd2c:	ldr	x5, [sp, #104]
   2fd30:	add	x2, x2, x1
   2fd34:	ldr	w4, [sp, #152]
   2fd38:	cmp	x0, #0x1, lsl #12
   2fd3c:	add	w13, w13, #0x1
   2fd40:	sub	w4, w4, w23
   2fd44:	str	w4, [x5, x1]
   2fd48:	str	w3, [x2, #4]
   2fd4c:	add	x1, x21, x0
   2fd50:	ccmp	x1, x20, #0x4, ls  // ls = plast
   2fd54:	b.eq	30658 <ZSTD_compress@@Base+0x21e0c>  // b.none
   2fd58:	mov	x25, x0
   2fd5c:	ldrb	w2, [x26, x0]
   2fd60:	ldrb	w1, [x21, x0]
   2fd64:	cmp	w2, w1
   2fd68:	b.cs	308a8 <ZSTD_compress@@Base+0x2205c>  // b.hs, b.nlast
   2fd6c:	ldr	x1, [sp, #208]
   2fd70:	str	w23, [x1]
   2fd74:	ldr	w1, [sp, #264]
   2fd78:	cmp	w23, w1
   2fd7c:	b.ls	308d0 <ZSTD_compress@@Base+0x22084>  // b.plast
   2fd80:	ldr	w23, [x15, #4]
   2fd84:	add	x1, x15, #0x4
   2fd88:	str	x1, [sp, #208]
   2fd8c:	ldr	w1, [sp, #224]
   2fd90:	mov	x27, x0
   2fd94:	sub	w1, w1, #0x1
   2fd98:	str	w1, [sp, #224]
   2fd9c:	b	2fca0 <ZSTD_compress@@Base+0x21454>
   2fda0:	mov	x26, x21
   2fda4:	mov	w0, #0x79b1                	// #31153
   2fda8:	movk	w0, #0x9e37, lsl #16
   2fdac:	neg	w1, w1
   2fdb0:	mov	w5, #0x1                   	// #1
   2fdb4:	ldr	w24, [x19, #24]
   2fdb8:	ldr	w25, [x26], #3
   2fdbc:	ldr	w2, [x19, #184]
   2fdc0:	sub	w6, w24, #0x1
   2fdc4:	mul	w0, w25, w0
   2fdc8:	lsl	w25, w25, #8
   2fdcc:	lsr	w1, w0, w1
   2fdd0:	ubfiz	x0, x1, #2, #32
   2fdd4:	str	x0, [sp, #304]
   2fdd8:	ldr	x0, [sp, #152]
   2fddc:	ldr	x1, [sp, #304]
   2fde0:	ldr	w18, [x0, x1]
   2fde4:	ldr	x0, [x19, #64]
   2fde8:	str	x0, [sp, #200]
   2fdec:	ldr	w0, [x27, #4]
   2fdf0:	sub	w0, w0, #0x1
   2fdf4:	lsl	w0, w5, w0
   2fdf8:	sub	w0, w0, #0x1
   2fdfc:	str	w0, [sp, #208]
   2fe00:	ldr	x0, [x19, #16]
   2fe04:	str	x0, [sp, #168]
   2fe08:	mov	w0, w24
   2fe0c:	str	x0, [sp, #272]
   2fe10:	ldr	x0, [sp, #168]
   2fe14:	ldr	w1, [sp, #208]
   2fe18:	add	x0, x0, w24, uxtw
   2fe1c:	str	x0, [sp, #240]
   2fe20:	ldr	x0, [sp, #136]
   2fe24:	cmp	w1, w14
   2fe28:	mov	w1, w14
   2fe2c:	add	x0, x0, w24, uxtw
   2fe30:	str	x0, [sp, #248]
   2fe34:	ldr	w0, [sp, #208]
   2fe38:	sub	w0, w14, w0
   2fe3c:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   2fe40:	str	w0, [sp, #300]
   2fe44:	mov	x0, x19
   2fe48:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   2fe4c:	cmp	w0, #0x0
   2fe50:	ldrb	w22, [sp, #144]
   2fe54:	csel	w1, w0, w5, ne  // ne = any
   2fe58:	str	w1, [sp, #280]
   2fe5c:	ldr	w1, [sp, #208]
   2fe60:	mov	w3, #0x4                   	// #4
   2fe64:	ldr	x2, [sp, #200]
   2fe68:	and	w1, w1, w14
   2fe6c:	sub	w0, w14, w0
   2fe70:	mov	w13, #0x0                   	// #0
   2fe74:	ubfiz	x1, x1, #3, #31
   2fe78:	str	w0, [sp, #328]
   2fe7c:	add	x2, x2, x1
   2fe80:	str	x2, [sp, #216]
   2fe84:	ldr	x2, [sp, #200]
   2fe88:	add	x1, x1, #0x4
   2fe8c:	add	x1, x2, x1
   2fe90:	str	x1, [sp, #224]
   2fe94:	add	w1, w14, #0x9
   2fe98:	str	w1, [sp, #256]
   2fe9c:	ldr	w1, [x19, #196]
   2fea0:	lsl	w1, w5, w1
   2fea4:	str	w1, [sp, #264]
   2fea8:	ldr	w1, [sp, #192]
   2feac:	sub	w23, w1, #0x1
   2feb0:	ldr	w1, [sp, #144]
   2feb4:	cmp	w1, #0x0
   2feb8:	sub	w1, w14, w24
   2febc:	csel	w28, w3, w28, ne  // ne = any
   2fec0:	str	w1, [sp, #312]
   2fec4:	sub	w1, w6, w14
   2fec8:	str	w1, [sp, #320]
   2fecc:	mov	w27, w22
   2fed0:	cmp	w22, #0x3
   2fed4:	ldr	x0, [sp, #120]
   2fed8:	b.ne	30074 <ZSTD_compress@@Base+0x21828>  // b.any
   2fedc:	ldr	w0, [x0]
   2fee0:	sub	w0, w0, #0x1
   2fee4:	ldr	w2, [sp, #312]
   2fee8:	sub	w1, w0, #0x1
   2feec:	cmp	w1, w2
   2fef0:	b.cs	3007c <ZSTD_compress@@Base+0x21830>  // b.hs, b.nlast
   2fef4:	mov	w1, w0
   2fef8:	sub	x0, x21, w0, uxtw
   2fefc:	ldr	w0, [x0]
   2ff00:	cmp	w25, w0, lsl #8
   2ff04:	b.ne	300c8 <ZSTD_compress@@Base+0x2187c>  // b.any
   2ff08:	mov	x0, #0x3                   	// #3
   2ff0c:	sub	x1, x0, x1
   2ff10:	mov	x2, x20
   2ff14:	add	x1, x21, x1
   2ff18:	mov	x0, x26
   2ff1c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2ff20:	add	w0, w0, #0x3
   2ff24:	mov	w1, w0
   2ff28:	cmp	x23, w0, uxtw
   2ff2c:	b.cs	2ff6c <ZSTD_compress@@Base+0x21720>  // b.hs, b.nlast
   2ff30:	ldr	w4, [sp, #144]
   2ff34:	ubfiz	x2, x13, #3, #32
   2ff38:	ldr	x3, [sp, #104]
   2ff3c:	sub	w27, w27, w4
   2ff40:	ldr	x4, [sp, #104]
   2ff44:	add	x3, x3, x2
   2ff48:	add	w13, w13, #0x1
   2ff4c:	str	w27, [x4, x2]
   2ff50:	add	x2, x21, x1
   2ff54:	cmp	x2, x20
   2ff58:	ldr	w2, [sp, #176]
   2ff5c:	str	w0, [x3, #4]
   2ff60:	ccmp	w0, w2, #0x2, ne  // ne = any
   2ff64:	b.hi	3013c <ZSTD_compress@@Base+0x218f0>  // b.pmore
   2ff68:	mov	x23, x1
   2ff6c:	add	x22, x22, #0x1
   2ff70:	cmp	w28, w22
   2ff74:	b.hi	2fecc <ZSTD_compress@@Base+0x21680>  // b.pmore
   2ff78:	cmp	x23, #0x2
   2ff7c:	b.ne	300f4 <ZSTD_compress@@Base+0x218a8>  // b.any
   2ff80:	add	x1, sp, #0x18c
   2ff84:	mov	x2, x21
   2ff88:	mov	x0, x19
   2ff8c:	bl	1ff88 <ZSTD_compress@@Base+0x1173c>
   2ff90:	ldr	w1, [sp, #280]
   2ff94:	sub	w22, w14, w0
   2ff98:	cmp	w1, w0
   2ff9c:	mov	w1, #0x3ffff               	// #262143
   2ffa0:	ccmp	w22, w1, #0x2, ls  // ls = plast
   2ffa4:	b.hi	300f4 <ZSTD_compress@@Base+0x218a8>  // b.pmore
   2ffa8:	mov	w1, w0
   2ffac:	cmp	w24, w0
   2ffb0:	b.hi	300d0 <ZSTD_compress@@Base+0x21884>  // b.pmore
   2ffb4:	ldr	x0, [sp, #136]
   2ffb8:	mov	x2, x20
   2ffbc:	add	x1, x0, x1
   2ffc0:	mov	x0, x21
   2ffc4:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   2ffc8:	cmp	x0, #0x2
   2ffcc:	b.ls	300f4 <ZSTD_compress@@Base+0x218a8>  // b.plast
   2ffd0:	ldr	x1, [sp, #104]
   2ffd4:	add	w22, w22, #0x2
   2ffd8:	ldr	w2, [sp, #176]
   2ffdc:	stp	w22, w0, [x1]
   2ffe0:	add	x1, x21, x0
   2ffe4:	cmp	x1, x20
   2ffe8:	ccmp	x0, x2, #0x2, ne  // ne = any
   2ffec:	b.ls	300ec <ZSTD_compress@@Base+0x218a0>  // b.plast
   2fff0:	add	w14, w14, #0x1
   2fff4:	mov	w13, #0x1                   	// #1
   2fff8:	str	w14, [x19, #36]
   2fffc:	ldp	x1, x0, [sp, #112]
   30000:	mov	w3, #0x0                   	// #0
   30004:	ldr	x2, [sp, #184]
   30008:	ldr	w0, [x0]
   3000c:	str	w0, [x1, #16]
   30010:	ldr	x0, [sp, #120]
   30014:	ldr	w0, [x0, #4]
   30018:	str	w0, [x1, #20]
   3001c:	ldr	x0, [sp, #120]
   30020:	ldr	w0, [x0, #8]
   30024:	str	w0, [x1, #24]
   30028:	mov	x0, x1
   3002c:	ldr	w1, [sp, #232]
   30030:	stp	wzr, w1, [x0, #8]
   30034:	ldr	x0, [sp, #128]
   30038:	bl	204f4 <ZSTD_compress@@Base+0x11ca8>
   3003c:	mov	w6, w0
   30040:	ldp	x1, x0, [sp, #104]
   30044:	str	w6, [x0]
   30048:	sub	w0, w13, #0x1
   3004c:	lsl	x2, x0, #3
   30050:	add	x0, x1, x0, lsl #3
   30054:	ldr	w1, [x0, #4]
   30058:	ldr	w0, [sp, #296]
   3005c:	cmp	w0, w1
   30060:	b.cs	308e4 <ZSTD_compress@@Base+0x22098>  // b.hs, b.nlast
   30064:	ldr	x0, [sp, #104]
   30068:	ldr	w2, [x0, x2]
   3006c:	mov	w0, #0x0                   	// #0
   30070:	b	30ae8 <ZSTD_compress@@Base+0x2229c>
   30074:	ldr	w0, [x0, x22, lsl #2]
   30078:	b	2fee4 <ZSTD_compress@@Base+0x21698>
   3007c:	ldr	w2, [sp, #320]
   30080:	add	w2, w2, w0
   30084:	cmp	w2, #0x2
   30088:	ldr	w2, [sp, #328]
   3008c:	ccmp	w1, w2, #0x2, hi  // hi = pmore
   30090:	b.cs	300c8 <ZSTD_compress@@Base+0x2187c>  // b.hs, b.nlast
   30094:	ldr	x2, [sp, #168]
   30098:	sub	w0, w15, w0
   3009c:	ldr	x1, [sp, #168]
   300a0:	add	x1, x1, x0
   300a4:	ldr	w0, [x2, x0]
   300a8:	cmp	w25, w0, lsl #8
   300ac:	b.ne	300c8 <ZSTD_compress@@Base+0x2187c>  // b.any
   300b0:	ldp	x3, x4, [sp, #240]
   300b4:	mov	x2, x20
   300b8:	add	x1, x1, #0x3
   300bc:	mov	x0, x26
   300c0:	bl	200cc <ZSTD_compress@@Base+0x11880>
   300c4:	b	2ff20 <ZSTD_compress@@Base+0x216d4>
   300c8:	mov	w0, #0x0                   	// #0
   300cc:	b	2ff24 <ZSTD_compress@@Base+0x216d8>
   300d0:	ldp	x3, x4, [sp, #240]
   300d4:	mov	x2, x20
   300d8:	ldr	x0, [sp, #168]
   300dc:	add	x1, x0, x1
   300e0:	mov	x0, x21
   300e4:	bl	200cc <ZSTD_compress@@Base+0x11880>
   300e8:	b	2ffc8 <ZSTD_compress@@Base+0x2177c>
   300ec:	mov	x23, x0
   300f0:	mov	w13, #0x1                   	// #1
   300f4:	ldr	x0, [sp, #152]
   300f8:	add	w15, w15, #0x2
   300fc:	ldr	x1, [sp, #304]
   30100:	mov	x27, #0x0                   	// #0
   30104:	mov	x25, #0x0                   	// #0
   30108:	str	w14, [x0, x1]
   3010c:	ldr	w0, [sp, #264]
   30110:	cbz	w0, 30120 <ZSTD_compress@@Base+0x218d4>
   30114:	ldr	w0, [sp, #280]
   30118:	cmp	w0, w18
   3011c:	b.ls	30144 <ZSTD_compress@@Base+0x218f8>  // b.plast
   30120:	ldr	x0, [sp, #224]
   30124:	str	wzr, [x0]
   30128:	ldr	x0, [sp, #216]
   3012c:	str	wzr, [x0]
   30130:	ldr	w0, [sp, #256]
   30134:	sub	w0, w0, #0x8
   30138:	str	w0, [x19, #36]
   3013c:	cbz	w13, 2f800 <ZSTD_compress@@Base+0x20fb4>
   30140:	b	2fffc <ZSTD_compress@@Base+0x217b0>
   30144:	ldr	w0, [sp, #208]
   30148:	cmp	x25, x27
   3014c:	ldr	x2, [sp, #272]
   30150:	and	w14, w0, w18
   30154:	ldr	x0, [sp, #200]
   30158:	csel	x22, x25, x27, ls  // ls = plast
   3015c:	add	x1, x22, w18, uxtw
   30160:	ubfiz	x14, x14, #3, #31
   30164:	add	x28, x0, x14
   30168:	mov	w26, w18
   3016c:	add	x0, x21, x22
   30170:	cmp	x2, x1
   30174:	b.hi	3022c <ZSTD_compress@@Base+0x219e0>  // b.pmore
   30178:	ldr	x1, [sp, #136]
   3017c:	mov	x2, x20
   30180:	add	x24, x1, x26
   30184:	add	x1, x24, x22
   30188:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   3018c:	add	x0, x22, x0
   30190:	cmp	x23, x0
   30194:	b.cs	301e8 <ZSTD_compress@@Base+0x2199c>  // b.hs, b.nlast
   30198:	ldr	w1, [sp, #256]
   3019c:	mov	w3, w0
   301a0:	sub	w1, w1, w18
   301a4:	cmp	x0, x1
   301a8:	b.ls	301b4 <ZSTD_compress@@Base+0x21968>  // b.plast
   301ac:	add	w1, w18, w0
   301b0:	str	w1, [sp, #256]
   301b4:	ldr	x2, [sp, #104]
   301b8:	ubfiz	x1, x13, #3, #32
   301bc:	ldr	x5, [sp, #104]
   301c0:	add	x2, x2, x1
   301c4:	sub	w4, w15, w18
   301c8:	cmp	x0, #0x1, lsl #12
   301cc:	add	w13, w13, #0x1
   301d0:	str	w4, [x5, x1]
   301d4:	add	x1, x21, x0
   301d8:	str	w3, [x2, #4]
   301dc:	ccmp	x1, x20, #0x4, ls  // ls = plast
   301e0:	b.eq	30120 <ZSTD_compress@@Base+0x218d4>  // b.none
   301e4:	mov	x23, x0
   301e8:	ldrb	w2, [x24, x0]
   301ec:	ldrb	w1, [x21, x0]
   301f0:	cmp	w2, w1
   301f4:	b.cs	30264 <ZSTD_compress@@Base+0x21a18>  // b.hs, b.nlast
   301f8:	ldr	x1, [sp, #216]
   301fc:	str	w18, [x1]
   30200:	ldr	w1, [sp, #300]
   30204:	cmp	w18, w1
   30208:	b.ls	30290 <ZSTD_compress@@Base+0x21a44>  // b.plast
   3020c:	ldr	w18, [x28, #4]
   30210:	add	x1, x28, #0x4
   30214:	str	x1, [sp, #216]
   30218:	ldr	w1, [sp, #264]
   3021c:	mov	x25, x0
   30220:	sub	w1, w1, #0x1
   30224:	str	w1, [sp, #264]
   30228:	b	3010c <ZSTD_compress@@Base+0x218c0>
   3022c:	ldp	x3, x4, [sp, #240]
   30230:	mov	x2, x20
   30234:	ldr	x1, [sp, #168]
   30238:	add	x24, x1, x26
   3023c:	add	x1, x24, x22
   30240:	bl	200cc <ZSTD_compress@@Base+0x11880>
   30244:	ldr	x2, [sp, #272]
   30248:	add	x0, x22, x0
   3024c:	add	x1, x26, x0
   30250:	cmp	x2, x1
   30254:	b.hi	30190 <ZSTD_compress@@Base+0x21944>  // b.pmore
   30258:	ldr	x1, [sp, #136]
   3025c:	add	x24, x1, x26
   30260:	b	30190 <ZSTD_compress@@Base+0x21944>
   30264:	ldr	x1, [sp, #224]
   30268:	str	w18, [x1]
   3026c:	ldr	w1, [sp, #300]
   30270:	cmp	w18, w1
   30274:	b.ls	3029c <ZSTD_compress@@Base+0x21a50>  // b.plast
   30278:	ldr	x1, [sp, #200]
   3027c:	mov	x27, x0
   30280:	mov	x0, x25
   30284:	str	x28, [sp, #224]
   30288:	ldr	w18, [x1, x14]
   3028c:	b	30218 <ZSTD_compress@@Base+0x219cc>
   30290:	add	x0, sp, #0x190
   30294:	str	x0, [sp, #216]
   30298:	b	30120 <ZSTD_compress@@Base+0x218d4>
   3029c:	add	x0, sp, #0x190
   302a0:	str	x0, [sp, #224]
   302a4:	b	30120 <ZSTD_compress@@Base+0x218d4>
   302a8:	ldr	w0, [x0, x23, lsl #2]
   302ac:	b	2f9c4 <ZSTD_compress@@Base+0x21178>
   302b0:	ldr	w2, [sp, #312]
   302b4:	add	w2, w2, w0
   302b8:	cmp	w2, #0x2
   302bc:	ldr	w2, [sp, #320]
   302c0:	ccmp	w1, w2, #0x2, hi  // hi = pmore
   302c4:	b.cs	302fc <ZSTD_compress@@Base+0x21ab0>  // b.hs, b.nlast
   302c8:	ldr	x2, [sp, #208]
   302cc:	sub	w0, w15, w0
   302d0:	ldr	x1, [sp, #208]
   302d4:	add	x1, x1, x0
   302d8:	ldr	w0, [x2, x0]
   302dc:	cmp	w26, w0
   302e0:	b.ne	302fc <ZSTD_compress@@Base+0x21ab0>  // b.any
   302e4:	ldp	x3, x4, [sp, #256]
   302e8:	mov	x2, x20
   302ec:	add	x1, x1, #0x4
   302f0:	mov	x0, x28
   302f4:	bl	200cc <ZSTD_compress@@Base+0x11880>
   302f8:	b	2fa00 <ZSTD_compress@@Base+0x211b4>
   302fc:	mov	w0, #0x0                   	// #0
   30300:	b	2fa04 <ZSTD_compress@@Base+0x211b8>
   30304:	ldr	w0, [sp, #200]
   30308:	cmp	x27, x26
   3030c:	ldr	x2, [sp, #248]
   30310:	and	w14, w0, w24
   30314:	ldr	x0, [sp, #168]
   30318:	csel	x22, x27, x26, ls  // ls = plast
   3031c:	add	x1, x22, w24, uxtw
   30320:	ubfiz	x14, x14, #3, #31
   30324:	add	x28, x0, x14
   30328:	mov	w6, w24
   3032c:	add	x0, x21, x22
   30330:	cmp	x2, x1
   30334:	b.hi	303f4 <ZSTD_compress@@Base+0x21ba8>  // b.pmore
   30338:	ldr	x1, [sp, #136]
   3033c:	mov	x2, x20
   30340:	add	x23, x1, x6
   30344:	add	x1, x23, x22
   30348:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   3034c:	add	x0, x22, x0
   30350:	cmp	x25, x0
   30354:	b.cs	303a8 <ZSTD_compress@@Base+0x21b5c>  // b.hs, b.nlast
   30358:	ldr	w1, [sp, #224]
   3035c:	mov	w3, w0
   30360:	sub	w1, w1, w24
   30364:	cmp	x0, x1
   30368:	b.ls	30374 <ZSTD_compress@@Base+0x21b28>  // b.plast
   3036c:	add	w1, w24, w0
   30370:	str	w1, [sp, #224]
   30374:	ldr	x2, [sp, #104]
   30378:	ubfiz	x1, x13, #3, #32
   3037c:	ldr	x5, [sp, #104]
   30380:	add	x2, x2, x1
   30384:	sub	w4, w15, w24
   30388:	cmp	x0, #0x1, lsl #12
   3038c:	add	w13, w13, #0x1
   30390:	str	w4, [x5, x1]
   30394:	add	x1, x21, x0
   30398:	str	w3, [x2, #4]
   3039c:	ccmp	x1, x20, #0x4, ls  // ls = plast
   303a0:	b.eq	2fa84 <ZSTD_compress@@Base+0x21238>  // b.none
   303a4:	mov	x25, x0
   303a8:	ldrb	w2, [x23, x0]
   303ac:	ldrb	w1, [x21, x0]
   303b0:	cmp	w2, w1
   303b4:	b.cs	30434 <ZSTD_compress@@Base+0x21be8>  // b.hs, b.nlast
   303b8:	ldr	x1, [sp, #216]
   303bc:	str	w24, [x1]
   303c0:	ldr	w1, [sp, #272]
   303c4:	cmp	w24, w1
   303c8:	b.ls	30454 <ZSTD_compress@@Base+0x21c08>  // b.plast
   303cc:	ldr	w24, [x28, #4]
   303d0:	mov	x27, x0
   303d4:	mov	x0, x26
   303d8:	add	x1, x28, #0x4
   303dc:	str	x1, [sp, #216]
   303e0:	ldr	w1, [sp, #240]
   303e4:	mov	x26, x0
   303e8:	sub	w1, w1, #0x1
   303ec:	str	w1, [sp, #240]
   303f0:	b	2fa70 <ZSTD_compress@@Base+0x21224>
   303f4:	ldp	x3, x4, [sp, #256]
   303f8:	mov	x2, x20
   303fc:	ldr	x1, [sp, #208]
   30400:	str	x6, [sp, #152]
   30404:	add	x23, x1, x6
   30408:	add	x1, x23, x22
   3040c:	bl	200cc <ZSTD_compress@@Base+0x11880>
   30410:	ldr	x6, [sp, #152]
   30414:	add	x0, x22, x0
   30418:	ldr	x2, [sp, #248]
   3041c:	add	x1, x6, x0
   30420:	cmp	x2, x1
   30424:	b.hi	30350 <ZSTD_compress@@Base+0x21b04>  // b.pmore
   30428:	ldr	x1, [sp, #136]
   3042c:	add	x23, x1, x6
   30430:	b	30350 <ZSTD_compress@@Base+0x21b04>
   30434:	ldr	w1, [sp, #272]
   30438:	str	w24, [x18]
   3043c:	cmp	w24, w1
   30440:	b.ls	30460 <ZSTD_compress@@Base+0x21c14>  // b.plast
   30444:	ldr	x1, [sp, #168]
   30448:	mov	x18, x28
   3044c:	ldr	w24, [x1, x14]
   30450:	b	303e0 <ZSTD_compress@@Base+0x21b94>
   30454:	add	x0, sp, #0x190
   30458:	str	x0, [sp, #216]
   3045c:	b	2fa84 <ZSTD_compress@@Base+0x21238>
   30460:	add	x18, sp, #0x190
   30464:	b	2fa84 <ZSTD_compress@@Base+0x21238>
   30468:	mov	w2, w28
   3046c:	mov	x0, x21
   30470:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   30474:	lsl	x26, x0, #2
   30478:	ldr	x0, [sp, #152]
   3047c:	mov	w6, #0x1                   	// #1
   30480:	ldr	x24, [x19, #16]
   30484:	add	x28, x21, #0x4
   30488:	ldr	w23, [x0, x26]
   3048c:	ldr	x0, [x19, #64]
   30490:	str	x0, [sp, #168]
   30494:	ldr	w0, [x27, #4]
   30498:	ldr	w7, [x19, #24]
   3049c:	sub	w0, w0, #0x1
   304a0:	ldr	w2, [x19, #184]
   304a4:	sub	w8, w7, #0x1
   304a8:	lsl	w0, w6, w0
   304ac:	sub	w0, w0, #0x1
   304b0:	str	w0, [sp, #200]
   304b4:	mov	w0, w7
   304b8:	str	x0, [sp, #240]
   304bc:	add	x0, x24, w7, uxtw
   304c0:	str	x0, [sp, #248]
   304c4:	ldr	x0, [sp, #136]
   304c8:	ldr	w1, [sp, #200]
   304cc:	add	x0, x0, w7, uxtw
   304d0:	str	x0, [sp, #256]
   304d4:	ldr	w0, [sp, #200]
   304d8:	cmp	w1, w14
   304dc:	mov	w1, w14
   304e0:	sub	w0, w14, w0
   304e4:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   304e8:	str	w0, [sp, #264]
   304ec:	mov	x0, x19
   304f0:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   304f4:	cmp	w0, #0x0
   304f8:	mov	w2, #0x4                   	// #4
   304fc:	csel	w1, w0, w6, ne  // ne = any
   30500:	str	w1, [sp, #272]
   30504:	ldr	w1, [sp, #200]
   30508:	sub	w0, w14, w0
   3050c:	ldrb	w22, [sp, #144]
   30510:	mov	w13, #0x0                   	// #0
   30514:	and	w18, w1, w14
   30518:	str	w0, [sp, #312]
   3051c:	ldr	x1, [sp, #168]
   30520:	ubfiz	x18, x18, #3, #31
   30524:	add	x1, x1, x18
   30528:	str	x1, [sp, #208]
   3052c:	ldr	x1, [sp, #168]
   30530:	add	x18, x18, #0x4
   30534:	add	x18, x1, x18
   30538:	add	w1, w14, #0x9
   3053c:	str	w1, [sp, #216]
   30540:	ldr	w1, [x27, #12]
   30544:	lsl	w1, w6, w1
   30548:	str	w1, [sp, #224]
   3054c:	ldr	w1, [sp, #192]
   30550:	sub	w25, w1, #0x1
   30554:	ldr	w1, [sp, #144]
   30558:	cmp	w1, #0x0
   3055c:	mov	w1, #0x3                   	// #3
   30560:	csel	w1, w2, w1, ne  // ne = any
   30564:	str	w1, [sp, #280]
   30568:	sub	w1, w14, w7
   3056c:	str	w1, [sp, #300]
   30570:	sub	w1, w8, w14
   30574:	str	w1, [sp, #304]
   30578:	mov	w27, w22
   3057c:	cmp	w22, #0x3
   30580:	ldr	x0, [sp, #120]
   30584:	b.ne	3066c <ZSTD_compress@@Base+0x21e20>  // b.any
   30588:	ldr	w0, [x0]
   3058c:	sub	w0, w0, #0x1
   30590:	ldr	w2, [sp, #300]
   30594:	sub	w1, w0, #0x1
   30598:	cmp	w1, w2
   3059c:	b.cs	30674 <ZSTD_compress@@Base+0x21e28>  // b.hs, b.nlast
   305a0:	mov	w1, w0
   305a4:	sub	x0, x21, w0, uxtw
   305a8:	ldr	w2, [x0]
   305ac:	ldr	w0, [x21]
   305b0:	cmp	w2, w0
   305b4:	b.ne	306bc <ZSTD_compress@@Base+0x21e70>  // b.any
   305b8:	mov	x0, #0x4                   	// #4
   305bc:	sub	x1, x0, x1
   305c0:	mov	x2, x20
   305c4:	add	x1, x21, x1
   305c8:	mov	x0, x28
   305cc:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   305d0:	add	w0, w0, #0x4
   305d4:	mov	w1, w0
   305d8:	cmp	x25, w0, uxtw
   305dc:	b.cs	3061c <ZSTD_compress@@Base+0x21dd0>  // b.hs, b.nlast
   305e0:	ldr	w4, [sp, #144]
   305e4:	ubfiz	x2, x13, #3, #32
   305e8:	ldr	x3, [sp, #104]
   305ec:	sub	w27, w27, w4
   305f0:	ldr	x4, [sp, #104]
   305f4:	add	x3, x3, x2
   305f8:	add	w13, w13, #0x1
   305fc:	str	w27, [x4, x2]
   30600:	add	x2, x21, x1
   30604:	cmp	x2, x20
   30608:	ldr	w2, [sp, #176]
   3060c:	str	w0, [x3, #4]
   30610:	ccmp	w0, w2, #0x2, ne  // ne = any
   30614:	b.hi	3013c <ZSTD_compress@@Base+0x218f0>  // b.pmore
   30618:	mov	x25, x1
   3061c:	ldr	w0, [sp, #280]
   30620:	add	x22, x22, #0x1
   30624:	cmp	w0, w22
   30628:	b.hi	30578 <ZSTD_compress@@Base+0x21d2c>  // b.pmore
   3062c:	ldr	x0, [sp, #152]
   30630:	mov	x28, #0x0                   	// #0
   30634:	mov	x27, #0x0                   	// #0
   30638:	str	w14, [x0, x26]
   3063c:	add	w0, w15, #0x2
   30640:	str	w0, [sp, #152]
   30644:	ldr	w0, [sp, #224]
   30648:	cbz	w0, 30658 <ZSTD_compress@@Base+0x21e0c>
   3064c:	ldr	w0, [sp, #272]
   30650:	cmp	w0, w23
   30654:	b.ls	306c4 <ZSTD_compress@@Base+0x21e78>  // b.plast
   30658:	ldr	x0, [sp, #208]
   3065c:	str	wzr, [x18]
   30660:	str	wzr, [x0]
   30664:	ldr	w0, [sp, #216]
   30668:	b	30134 <ZSTD_compress@@Base+0x218e8>
   3066c:	ldr	w0, [x0, x22, lsl #2]
   30670:	b	30590 <ZSTD_compress@@Base+0x21d44>
   30674:	ldr	w2, [sp, #304]
   30678:	add	w2, w2, w0
   3067c:	cmp	w2, #0x2
   30680:	ldr	w2, [sp, #312]
   30684:	ccmp	w1, w2, #0x2, hi  // hi = pmore
   30688:	b.cs	306bc <ZSTD_compress@@Base+0x21e70>  // b.hs, b.nlast
   3068c:	sub	w0, w15, w0
   30690:	add	x1, x24, x0
   30694:	ldr	w2, [x24, x0]
   30698:	ldr	w0, [x21]
   3069c:	cmp	w2, w0
   306a0:	b.ne	306bc <ZSTD_compress@@Base+0x21e70>  // b.any
   306a4:	ldp	x3, x4, [sp, #248]
   306a8:	mov	x2, x20
   306ac:	add	x1, x1, #0x4
   306b0:	mov	x0, x28
   306b4:	bl	200cc <ZSTD_compress@@Base+0x11880>
   306b8:	b	305d0 <ZSTD_compress@@Base+0x21d84>
   306bc:	mov	w0, #0x0                   	// #0
   306c0:	b	305d4 <ZSTD_compress@@Base+0x21d88>
   306c4:	ldr	w0, [sp, #200]
   306c8:	cmp	x27, x28
   306cc:	ldr	x2, [sp, #240]
   306d0:	and	w14, w0, w23
   306d4:	ldr	x0, [sp, #168]
   306d8:	csel	x22, x27, x28, ls  // ls = plast
   306dc:	add	x1, x22, w23, uxtw
   306e0:	ubfiz	x14, x14, #3, #31
   306e4:	add	x15, x0, x14
   306e8:	mov	w7, w23
   306ec:	add	x0, x21, x22
   306f0:	cmp	x2, x1
   306f4:	b.hi	307b0 <ZSTD_compress@@Base+0x21f64>  // b.pmore
   306f8:	ldr	x1, [sp, #136]
   306fc:	mov	x2, x20
   30700:	add	x26, x1, x7
   30704:	add	x1, x26, x22
   30708:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   3070c:	add	x0, x22, x0
   30710:	cmp	x25, x0
   30714:	b.cs	3076c <ZSTD_compress@@Base+0x21f20>  // b.hs, b.nlast
   30718:	ldr	w1, [sp, #216]
   3071c:	mov	w3, w0
   30720:	sub	w1, w1, w23
   30724:	cmp	x0, x1
   30728:	b.ls	30734 <ZSTD_compress@@Base+0x21ee8>  // b.plast
   3072c:	add	w1, w23, w0
   30730:	str	w1, [sp, #216]
   30734:	ldr	x2, [sp, #104]
   30738:	ubfiz	x1, x13, #3, #32
   3073c:	ldr	x5, [sp, #104]
   30740:	add	x2, x2, x1
   30744:	ldr	w4, [sp, #152]
   30748:	cmp	x0, #0x1, lsl #12
   3074c:	add	w13, w13, #0x1
   30750:	sub	w4, w4, w23
   30754:	str	w4, [x5, x1]
   30758:	str	w3, [x2, #4]
   3075c:	add	x1, x21, x0
   30760:	ccmp	x1, x20, #0x4, ls  // ls = plast
   30764:	b.eq	30658 <ZSTD_compress@@Base+0x21e0c>  // b.none
   30768:	mov	x25, x0
   3076c:	ldrb	w2, [x26, x0]
   30770:	ldrb	w1, [x21, x0]
   30774:	cmp	w2, w1
   30778:	b.cs	307ec <ZSTD_compress@@Base+0x21fa0>  // b.hs, b.nlast
   3077c:	ldr	x1, [sp, #208]
   30780:	str	w23, [x1]
   30784:	ldr	w1, [sp, #264]
   30788:	cmp	w23, w1
   3078c:	b.ls	308d0 <ZSTD_compress@@Base+0x22084>  // b.plast
   30790:	ldr	w23, [x15, #4]
   30794:	add	x1, x15, #0x4
   30798:	str	x1, [sp, #208]
   3079c:	ldr	w1, [sp, #224]
   307a0:	mov	x27, x0
   307a4:	sub	w1, w1, #0x1
   307a8:	str	w1, [sp, #224]
   307ac:	b	30644 <ZSTD_compress@@Base+0x21df8>
   307b0:	ldp	x3, x4, [sp, #248]
   307b4:	add	x26, x24, x7
   307b8:	mov	x2, x20
   307bc:	add	x1, x26, x22
   307c0:	str	x7, [sp, #176]
   307c4:	bl	200cc <ZSTD_compress@@Base+0x11880>
   307c8:	add	x0, x22, x0
   307cc:	ldr	x7, [sp, #176]
   307d0:	ldr	x2, [sp, #240]
   307d4:	add	x1, x7, x0
   307d8:	cmp	x2, x1
   307dc:	b.hi	30710 <ZSTD_compress@@Base+0x21ec4>  // b.pmore
   307e0:	ldr	x1, [sp, #136]
   307e4:	add	x26, x1, x7
   307e8:	b	30710 <ZSTD_compress@@Base+0x21ec4>
   307ec:	ldr	w1, [sp, #264]
   307f0:	str	w23, [x18]
   307f4:	cmp	w23, w1
   307f8:	b.ls	308dc <ZSTD_compress@@Base+0x22090>  // b.plast
   307fc:	ldr	x1, [sp, #168]
   30800:	mov	x28, x0
   30804:	mov	x18, x15
   30808:	mov	x0, x27
   3080c:	ldr	w23, [x1, x14]
   30810:	b	3079c <ZSTD_compress@@Base+0x21f50>
   30814:	ldr	w0, [x0, x22, lsl #2]
   30818:	b	2fbec <ZSTD_compress@@Base+0x213a0>
   3081c:	ldr	w2, [sp, #304]
   30820:	add	w2, w2, w0
   30824:	cmp	w2, #0x2
   30828:	ldr	w2, [sp, #312]
   3082c:	ccmp	w1, w2, #0x2, hi  // hi = pmore
   30830:	b.cs	30864 <ZSTD_compress@@Base+0x22018>  // b.hs, b.nlast
   30834:	sub	w0, w15, w0
   30838:	add	x1, x24, x0
   3083c:	ldr	w2, [x24, x0]
   30840:	ldr	w0, [x21]
   30844:	cmp	w2, w0
   30848:	b.ne	30864 <ZSTD_compress@@Base+0x22018>  // b.any
   3084c:	ldp	x3, x4, [sp, #248]
   30850:	mov	x2, x20
   30854:	add	x1, x1, #0x4
   30858:	mov	x0, x28
   3085c:	bl	200cc <ZSTD_compress@@Base+0x11880>
   30860:	b	2fc2c <ZSTD_compress@@Base+0x213e0>
   30864:	mov	w0, #0x0                   	// #0
   30868:	b	2fc30 <ZSTD_compress@@Base+0x213e4>
   3086c:	ldp	x3, x4, [sp, #248]
   30870:	add	x26, x24, x7
   30874:	mov	x2, x20
   30878:	add	x1, x26, x22
   3087c:	str	x7, [sp, #176]
   30880:	bl	200cc <ZSTD_compress@@Base+0x11880>
   30884:	add	x0, x22, x0
   30888:	ldr	x7, [sp, #176]
   3088c:	ldr	x2, [sp, #240]
   30890:	add	x1, x7, x0
   30894:	cmp	x2, x1
   30898:	b.hi	2fd00 <ZSTD_compress@@Base+0x214b4>  // b.pmore
   3089c:	ldr	x1, [sp, #136]
   308a0:	add	x26, x1, x7
   308a4:	b	2fd00 <ZSTD_compress@@Base+0x214b4>
   308a8:	ldr	w1, [sp, #264]
   308ac:	str	w23, [x18]
   308b0:	cmp	w23, w1
   308b4:	b.ls	308dc <ZSTD_compress@@Base+0x22090>  // b.plast
   308b8:	ldr	x1, [sp, #168]
   308bc:	mov	x28, x0
   308c0:	mov	x18, x15
   308c4:	mov	x0, x27
   308c8:	ldr	w23, [x1, x14]
   308cc:	b	2fd8c <ZSTD_compress@@Base+0x21540>
   308d0:	add	x0, sp, #0x190
   308d4:	str	x0, [sp, #208]
   308d8:	b	30658 <ZSTD_compress@@Base+0x21e0c>
   308dc:	add	x18, sp, #0x190
   308e0:	b	30658 <ZSTD_compress@@Base+0x21e0c>
   308e4:	ldr	x1, [sp, #184]
   308e8:	mov	w2, #0x0                   	// #0
   308ec:	mov	w0, #0x0                   	// #0
   308f0:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   308f4:	add	w6, w6, w0
   308f8:	ldr	x1, [sp, #112]
   308fc:	mov	w0, #0x40000000            	// #1073741824
   30900:	str	w0, [x1, #28]
   30904:	str	w0, [x1, #56]
   30908:	ldr	w1, [sp, #192]
   3090c:	cmp	w1, #0x4
   30910:	b.ne	3091c <ZSTD_compress@@Base+0x220d0>  // b.any
   30914:	ldr	x1, [sp, #112]
   30918:	str	w0, [x1, #84]
   3091c:	ldr	w5, [sp, #192]
   30920:	add	x7, x19, #0x48
   30924:	ldr	x8, [sp, #104]
   30928:	mov	w9, #0x0                   	// #0
   3092c:	ldp	w10, w12, [x8]
   30930:	ldr	w2, [sp, #144]
   30934:	ldr	x0, [sp, #120]
   30938:	mov	w1, w10
   3093c:	bl	205a8 <ZSTD_compress@@Base+0x11d5c>
   30940:	add	w2, w10, #0x1
   30944:	clz	w2, w2
   30948:	mov	w18, #0x1c                  	// #28
   3094c:	eor	w2, w2, #0x1f
   30950:	str	w0, [sp, #400]
   30954:	sub	w4, w2, #0x13
   30958:	add	w11, w2, #0x10
   3095c:	sbfiz	x14, x2, #2, #32
   30960:	lsl	w15, w2, #8
   30964:	lsl	w4, w4, #9
   30968:	lsl	w11, w11, #8
   3096c:	lsr	x0, x0, #32
   30970:	str	w0, [sp, #404]
   30974:	str	w1, [sp, #408]
   30978:	cmp	w12, w5
   3097c:	b.cs	30b90 <ZSTD_compress@@Base+0x22344>  // b.hs, b.nlast
   30980:	add	w9, w9, #0x1
   30984:	add	x8, x8, #0x8
   30988:	cmp	w13, w9
   3098c:	b.ne	3092c <ZSTD_compress@@Base+0x220e0>  // b.any
   30990:	sub	w0, w5, #0x1
   30994:	str	w0, [sp, #176]
   30998:	mov	w0, #0x1                   	// #1
   3099c:	str	w0, [sp, #168]
   309a0:	ldr	w1, [sp, #176]
   309a4:	ldr	w0, [sp, #168]
   309a8:	cmp	w0, w1
   309ac:	b.hi	30a98 <ZSTD_compress@@Base+0x2224c>  // b.pmore
   309b0:	ldr	w0, [sp, #168]
   309b4:	mov	w1, #0x1c                  	// #28
   309b8:	sub	w9, w0, #0x1
   309bc:	add	x22, x21, w0, uxtw
   309c0:	umull	x9, w9, w1
   309c4:	ldr	x1, [sp, #112]
   309c8:	add	x8, x1, x9
   309cc:	ldr	w1, [x8, #8]
   309d0:	cbnz	w1, 30c44 <ZSTD_compress@@Base+0x223f8>
   309d4:	ldr	w7, [x8, #12]
   309d8:	add	w7, w7, #0x1
   309dc:	ldr	x2, [sp, #184]
   309e0:	sub	x0, x0, #0x1
   309e4:	mov	w3, #0x0                   	// #0
   309e8:	mov	w1, #0x1                   	// #1
   309ec:	add	x0, x21, x0
   309f0:	bl	20464 <ZSTD_compress@@Base+0x11c18>
   309f4:	mov	w5, w0
   309f8:	ldr	x1, [sp, #184]
   309fc:	mov	w0, w7
   30a00:	mov	w2, #0x0                   	// #0
   30a04:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   30a08:	add	w5, w5, w0
   30a0c:	ldr	x1, [sp, #184]
   30a10:	mov	w2, #0x0                   	// #0
   30a14:	sub	w0, w7, #0x1
   30a18:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   30a1c:	ldr	x1, [sp, #112]
   30a20:	ldr	w2, [sp, #168]
   30a24:	ldr	w1, [x1, x9]
   30a28:	sub	w0, w1, w0
   30a2c:	mov	w1, #0x1c                  	// #28
   30a30:	add	w0, w0, w5
   30a34:	umull	x1, w2, w1
   30a38:	ldr	x2, [sp, #112]
   30a3c:	add	x2, x2, x1
   30a40:	str	x2, [sp, #136]
   30a44:	ldr	x2, [sp, #112]
   30a48:	ldr	w2, [x2, x1]
   30a4c:	cmp	w0, w2
   30a50:	b.gt	30a7c <ZSTD_compress@@Base+0x22230>
   30a54:	ldr	x2, [sp, #136]
   30a58:	stur	xzr, [x2, #4]
   30a5c:	str	w7, [x2, #12]
   30a60:	ldr	x2, [sp, #112]
   30a64:	str	w0, [x2, x1]
   30a68:	ldr	x2, [sp, #136]
   30a6c:	ldr	x0, [x8, #16]
   30a70:	str	x0, [x2, #16]
   30a74:	ldr	w0, [x8, #24]
   30a78:	str	w0, [x2, #24]
   30a7c:	ldr	x0, [sp, #288]
   30a80:	cmp	x0, x22
   30a84:	b.cc	31620 <ZSTD_compress@@Base+0x22dd4>  // b.lo, b.ul, b.last
   30a88:	ldr	w0, [sp, #168]
   30a8c:	ldr	w2, [sp, #176]
   30a90:	cmp	w0, w2
   30a94:	b.ne	30c4c <ZSTD_compress@@Base+0x22400>  // b.any
   30a98:	ldr	w1, [sp, #176]
   30a9c:	mov	w0, #0x1c                  	// #28
   30aa0:	ldr	x2, [sp, #112]
   30aa4:	ldr	w4, [sp, #176]
   30aa8:	umaddl	x0, w1, w0, x2
   30aac:	ldp	x2, x3, [x0]
   30ab0:	stp	x2, x3, [sp, #416]
   30ab4:	ldr	w2, [x0, #4]
   30ab8:	ldr	x1, [x0, #16]
   30abc:	str	x1, [sp, #432]
   30ac0:	ldr	w1, [x0, #24]
   30ac4:	str	w1, [sp, #440]
   30ac8:	ldp	w1, w0, [x0, #8]
   30acc:	str	w0, [sp, #196]
   30ad0:	mov	w0, w0
   30ad4:	add	w3, w0, w1
   30ad8:	ldr	w0, [sp, #176]
   30adc:	cmp	w4, w3
   30ae0:	sub	w0, w0, w3
   30ae4:	csel	w0, w0, wzr, hi  // hi = pmore
   30ae8:	str	w2, [sp, #420]
   30aec:	add	w24, w0, #0x1
   30af0:	str	w1, [sp, #424]
   30af4:	mov	w10, w24
   30af8:	ldr	w1, [sp, #196]
   30afc:	ldr	x2, [sp, #112]
   30b00:	str	w1, [sp, #428]
   30b04:	mov	w1, #0x1c                  	// #28
   30b08:	ldr	x3, [sp, #432]
   30b0c:	umaddl	x2, w24, w1, x2
   30b10:	ldp	x4, x5, [sp, #416]
   30b14:	str	x3, [x2, #16]
   30b18:	ldr	w3, [sp, #440]
   30b1c:	stp	x4, x5, [x2]
   30b20:	str	w3, [x2, #24]
   30b24:	cbz	w0, 30b64 <ZSTD_compress@@Base+0x22318>
   30b28:	ldr	x2, [sp, #112]
   30b2c:	sub	w10, w10, #0x1
   30b30:	umaddl	x4, w0, w1, x2
   30b34:	ldp	w5, w2, [x4, #8]
   30b38:	add	w5, w5, w2
   30b3c:	ldr	x2, [sp, #112]
   30b40:	cmp	w0, w5
   30b44:	umaddl	x6, w10, w1, x2
   30b48:	ldp	x2, x3, [x4]
   30b4c:	stp	x2, x3, [x6]
   30b50:	ldr	x2, [x4, #16]
   30b54:	str	x2, [x6, #16]
   30b58:	ldr	w2, [x4, #24]
   30b5c:	str	w2, [x6, #24]
   30b60:	b.hi	31fc0 <ZSTD_compress@@Base+0x23774>  // b.pmore
   30b64:	mov	x13, #0xffff                	// #65535
   30b68:	sub	x12, x20, #0x20
   30b6c:	mov	w15, w13
   30b70:	mov	w14, #0x1c                  	// #28
   30b74:	mov	w18, #0x2                   	// #2
   30b78:	cmp	w24, w10
   30b7c:	b.cs	31fc8 <ZSTD_compress@@Base+0x2377c>  // b.hs, b.nlast
   30b80:	ldr	x0, [sp, #184]
   30b84:	mov	w1, #0x0                   	// #0
   30b88:	bl	203b8 <ZSTD_compress@@Base+0x11b6c>
   30b8c:	b	2f7bc <ZSTD_compress@@Base+0x20f70>
   30b90:	ldr	w0, [x7, #80]
   30b94:	sub	w1, w5, #0x3
   30b98:	cmp	w0, #0x1
   30b9c:	b.ne	30be8 <ZSTD_compress@@Base+0x2239c>  // b.any
   30ba0:	mov	w0, w1
   30ba4:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   30ba8:	add	w0, w11, w0
   30bac:	ldr	x1, [sp, #112]
   30bb0:	umull	x3, w5, w18
   30bb4:	ldr	w16, [sp, #196]
   30bb8:	add	w0, w6, w0
   30bbc:	add	x1, x1, x3
   30bc0:	str	w16, [x1, #12]
   30bc4:	ldr	x16, [sp, #112]
   30bc8:	stp	w10, w5, [x1, #4]
   30bcc:	add	w5, w5, #0x1
   30bd0:	str	w0, [x16, x3]
   30bd4:	ldr	x0, [sp, #400]
   30bd8:	str	x0, [x1, #16]
   30bdc:	ldr	w0, [sp, #408]
   30be0:	str	w0, [x1, #24]
   30be4:	b	30978 <ZSTD_compress@@Base+0x2212c>
   30be8:	ldr	x0, [x7, #24]
   30bec:	ldr	w0, [x0, x14]
   30bf0:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   30bf4:	ldr	w3, [x7, #76]
   30bf8:	cmp	w2, #0x13
   30bfc:	add	w3, w15, w3
   30c00:	sub	w3, w3, w0
   30c04:	b.le	30c0c <ZSTD_compress@@Base+0x223c0>
   30c08:	add	w3, w3, w4
   30c0c:	mov	w0, w1
   30c10:	bl	2043c <ZSTD_compress@@Base+0x11bf0>
   30c14:	ldr	x16, [x7, #16]
   30c18:	mov	w1, w0
   30c1c:	ldr	w0, [x16, w0, uxtw #2]
   30c20:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   30c24:	ldr	w16, [x7, #72]
   30c28:	sub	w0, w3, w0
   30c2c:	add	w16, w16, #0x33
   30c30:	add	w16, w16, w0
   30c34:	ldr	x0, [sp, #336]
   30c38:	ldr	w0, [x0, x1, lsl #2]
   30c3c:	add	w0, w16, w0, lsl #8
   30c40:	b	30bac <ZSTD_compress@@Base+0x22360>
   30c44:	mov	w7, #0x1                   	// #1
   30c48:	b	309dc <ZSTD_compress@@Base+0x22190>
   30c4c:	ldr	x0, [sp, #112]
   30c50:	ldr	x2, [sp, #112]
   30c54:	ldr	w0, [x0, x1]
   30c58:	mov	w1, #0x1c                  	// #28
   30c5c:	str	w0, [sp, #300]
   30c60:	ldr	w0, [sp, #168]
   30c64:	add	w0, w0, #0x1
   30c68:	umull	x0, w0, w1
   30c6c:	ldr	w1, [sp, #300]
   30c70:	add	w1, w1, #0x80
   30c74:	ldr	w0, [x2, x0]
   30c78:	cmp	w0, w1
   30c7c:	b.le	31620 <ZSTD_compress@@Base+0x22dd4>
   30c80:	ldr	x0, [sp, #136]
   30c84:	ldr	w23, [x0, #8]
   30c88:	cbnz	w23, 30f5c <ZSTD_compress@@Base+0x22710>
   30c8c:	ldr	w0, [x0, #12]
   30c90:	str	w0, [sp, #196]
   30c94:	ldr	x26, [x19, #8]
   30c98:	ldr	w25, [x19, #36]
   30c9c:	add	x0, x26, w25, uxtw
   30ca0:	cmp	x22, x0
   30ca4:	b.cc	31620 <ZSTD_compress@@Base+0x22dd4>  // b.lo, b.ul, b.last
   30ca8:	ldr	x1, [sp, #184]
   30cac:	add	x24, x19, #0xb8
   30cb0:	sub	x28, x22, x26
   30cb4:	mov	w2, #0x0                   	// #0
   30cb8:	mov	w0, #0x0                   	// #0
   30cbc:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   30cc0:	ldr	w27, [x24, #16]
   30cc4:	mov	w5, w28
   30cc8:	str	w0, [sp, #344]
   30ccc:	cmp	w5, w25
   30cd0:	b.hi	30f64 <ZSTD_compress@@Base+0x22718>  // b.pmore
   30cd4:	cmp	w23, #0x0
   30cd8:	mov	w1, #0xfff                 	// #4095
   30cdc:	cset	w0, ne  // ne = any
   30ce0:	str	w0, [sp, #152]
   30ce4:	ldr	x0, [sp, #136]
   30ce8:	str	w28, [x19, #36]
   30cec:	ldr	x28, [x19, #48]
   30cf0:	add	x0, x0, #0x10
   30cf4:	str	x0, [sp, #216]
   30cf8:	ldr	w0, [x24, #20]
   30cfc:	cmp	w0, #0xfff
   30d00:	csel	w0, w0, w1, ls  // ls = plast
   30d04:	str	w0, [sp, #208]
   30d08:	ldr	x0, [x19, #8]
   30d0c:	str	x0, [sp, #144]
   30d10:	ldr	w1, [x24, #8]
   30d14:	cmp	w27, #0x5
   30d18:	sub	x14, x22, x0
   30d1c:	mov	w15, w14
   30d20:	b.eq	31964 <ZSTD_compress@@Base+0x23118>  // b.none
   30d24:	b.hi	30f8c <ZSTD_compress@@Base+0x22740>  // b.pmore
   30d28:	cmp	w27, #0x3
   30d2c:	b.eq	31280 <ZSTD_compress@@Base+0x22a34>  // b.none
   30d30:	mov	x26, x22
   30d34:	neg	w1, w1
   30d38:	mov	w6, #0x1                   	// #1
   30d3c:	ldr	w8, [x19, #24]
   30d40:	ldr	w0, [x26], #4
   30d44:	sub	w9, w8, #0x1
   30d48:	str	w0, [sp, #264]
   30d4c:	mov	w0, #0x79b1                	// #31153
   30d50:	ldr	w2, [sp, #264]
   30d54:	movk	w0, #0x9e37, lsl #16
   30d58:	mul	w0, w2, w0
   30d5c:	ldr	w2, [x19, #184]
   30d60:	lsr	w1, w0, w1
   30d64:	ubfiz	x0, x1, #2, #32
   30d68:	str	x0, [sp, #320]
   30d6c:	ldr	w24, [x28, x0]
   30d70:	ldr	x0, [x19, #64]
   30d74:	str	x0, [sp, #200]
   30d78:	ldr	w0, [x19, #188]
   30d7c:	sub	w0, w0, #0x1
   30d80:	lsl	w0, w6, w0
   30d84:	sub	w0, w0, #0x1
   30d88:	str	w0, [sp, #224]
   30d8c:	ldr	x0, [x19, #16]
   30d90:	str	x0, [sp, #232]
   30d94:	mov	w0, w8
   30d98:	str	x0, [sp, #272]
   30d9c:	ldr	x0, [sp, #232]
   30da0:	ldr	w1, [sp, #224]
   30da4:	add	x0, x0, w8, uxtw
   30da8:	str	x0, [sp, #280]
   30dac:	ldr	x0, [sp, #144]
   30db0:	cmp	w1, w14
   30db4:	mov	w1, w14
   30db8:	add	x0, x0, w8, uxtw
   30dbc:	str	x0, [sp, #304]
   30dc0:	ldr	w0, [sp, #224]
   30dc4:	sub	w0, w14, w0
   30dc8:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   30dcc:	str	w0, [sp, #312]
   30dd0:	mov	x0, x19
   30dd4:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   30dd8:	cmp	w0, #0x0
   30ddc:	mov	w2, #0x4                   	// #4
   30de0:	csel	w1, w0, w6, ne  // ne = any
   30de4:	str	w1, [sp, #328]
   30de8:	ldr	w1, [sp, #224]
   30dec:	sub	w0, w15, w0
   30df0:	ldrb	w23, [sp, #152]
   30df4:	mov	w13, #0x0                   	// #0
   30df8:	and	w18, w1, w14
   30dfc:	str	w0, [sp, #372]
   30e00:	ldr	x1, [sp, #200]
   30e04:	ubfiz	x18, x18, #3, #31
   30e08:	add	x1, x1, x18
   30e0c:	str	x1, [sp, #240]
   30e10:	ldr	x1, [sp, #200]
   30e14:	add	x18, x18, #0x4
   30e18:	add	x18, x1, x18
   30e1c:	add	w1, w14, #0x9
   30e20:	str	w1, [sp, #256]
   30e24:	ldr	w1, [x19, #196]
   30e28:	lsl	w1, w6, w1
   30e2c:	str	w1, [sp, #248]
   30e30:	ldr	w1, [sp, #192]
   30e34:	sub	w25, w1, #0x1
   30e38:	ldr	w1, [sp, #152]
   30e3c:	cmp	w1, #0x0
   30e40:	mov	w1, #0x3                   	// #3
   30e44:	csel	w1, w2, w1, ne  // ne = any
   30e48:	str	w1, [sp, #348]
   30e4c:	ldr	x1, [sp, #136]
   30e50:	add	x1, x1, #0x10
   30e54:	str	x1, [sp, #360]
   30e58:	sub	w1, w15, w8
   30e5c:	str	w1, [sp, #352]
   30e60:	sub	w1, w9, w15
   30e64:	str	w1, [sp, #368]
   30e68:	mov	w27, w23
   30e6c:	cmp	w23, #0x3
   30e70:	b.ne	31794 <ZSTD_compress@@Base+0x22f48>  // b.any
   30e74:	ldr	x0, [sp, #136]
   30e78:	ldr	w0, [x0, #16]
   30e7c:	sub	w0, w0, #0x1
   30e80:	ldr	w2, [sp, #352]
   30e84:	sub	w1, w0, #0x1
   30e88:	cmp	w1, w2
   30e8c:	b.cs	317a0 <ZSTD_compress@@Base+0x22f54>  // b.hs, b.nlast
   30e90:	mov	w1, w0
   30e94:	sub	x0, x22, w0, uxtw
   30e98:	ldr	w2, [sp, #264]
   30e9c:	ldr	w0, [x0]
   30ea0:	cmp	w2, w0
   30ea4:	b.ne	317f4 <ZSTD_compress@@Base+0x22fa8>  // b.any
   30ea8:	mov	x0, #0x4                   	// #4
   30eac:	sub	x1, x0, x1
   30eb0:	mov	x2, x20
   30eb4:	add	x1, x22, x1
   30eb8:	mov	x0, x26
   30ebc:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   30ec0:	add	w0, w0, #0x4
   30ec4:	mov	w1, w0
   30ec8:	cmp	x25, w0, uxtw
   30ecc:	b.cs	30f0c <ZSTD_compress@@Base+0x226c0>  // b.hs, b.nlast
   30ed0:	ldr	w4, [sp, #152]
   30ed4:	ubfiz	x2, x13, #3, #32
   30ed8:	ldr	x3, [sp, #104]
   30edc:	sub	w27, w27, w4
   30ee0:	ldr	x4, [sp, #104]
   30ee4:	add	x3, x3, x2
   30ee8:	add	w13, w13, #0x1
   30eec:	str	w27, [x4, x2]
   30ef0:	add	x2, x22, x1
   30ef4:	cmp	x2, x20
   30ef8:	ldr	w2, [sp, #208]
   30efc:	str	w0, [x3, #4]
   30f00:	ccmp	w0, w2, #0x2, ne  // ne = any
   30f04:	b.hi	3161c <ZSTD_compress@@Base+0x22dd0>  // b.pmore
   30f08:	mov	x25, x1
   30f0c:	ldr	w0, [sp, #348]
   30f10:	add	x23, x23, #0x1
   30f14:	cmp	w0, w23
   30f18:	b.hi	30e68 <ZSTD_compress@@Base+0x2261c>  // b.pmore
   30f1c:	ldr	x0, [sp, #320]
   30f20:	mov	x27, #0x0                   	// #0
   30f24:	str	w14, [x28, x0]
   30f28:	add	w0, w15, #0x2
   30f2c:	mov	x28, #0x0                   	// #0
   30f30:	str	w0, [sp, #208]
   30f34:	ldr	w0, [sp, #248]
   30f38:	cbz	w0, 30f48 <ZSTD_compress@@Base+0x226fc>
   30f3c:	ldr	w0, [sp, #328]
   30f40:	cmp	w0, w24
   30f44:	b.ls	317fc <ZSTD_compress@@Base+0x22fb0>  // b.plast
   30f48:	ldr	x0, [sp, #240]
   30f4c:	str	wzr, [x18]
   30f50:	str	wzr, [x0]
   30f54:	ldr	w0, [sp, #256]
   30f58:	b	31614 <ZSTD_compress@@Base+0x22dc8>
   30f5c:	str	wzr, [sp, #196]
   30f60:	b	30c94 <ZSTD_compress@@Base+0x22448>
   30f64:	add	x1, x26, w25, uxtw
   30f68:	mov	w3, w27
   30f6c:	mov	x2, x20
   30f70:	mov	x0, x19
   30f74:	mov	w4, #0x1                   	// #1
   30f78:	str	w5, [sp, #144]
   30f7c:	bl	2012c <ZSTD_compress@@Base+0x118e0>
   30f80:	add	w25, w25, w0
   30f84:	ldr	w5, [sp, #144]
   30f88:	b	30ccc <ZSTD_compress@@Base+0x22480>
   30f8c:	sub	w27, w27, #0x6
   30f90:	cmp	w27, #0x1
   30f94:	b.hi	30d30 <ZSTD_compress@@Base+0x224e4>  // b.pmore
   30f98:	mov	w2, #0x6                   	// #6
   30f9c:	mov	x0, x22
   30fa0:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   30fa4:	lsl	x0, x0, #2
   30fa8:	str	x0, [sp, #312]
   30fac:	mov	w6, #0x1                   	// #1
   30fb0:	ldr	w7, [x19, #24]
   30fb4:	ldr	w25, [x28, x0]
   30fb8:	ldr	x0, [x19, #64]
   30fbc:	str	x0, [sp, #200]
   30fc0:	ldr	w0, [x24, #4]
   30fc4:	sub	w26, w7, #0x1
   30fc8:	ldr	w2, [x19, #184]
   30fcc:	sub	w0, w0, #0x1
   30fd0:	lsl	w0, w6, w0
   30fd4:	sub	w0, w0, #0x1
   30fd8:	str	w0, [sp, #224]
   30fdc:	ldr	x0, [x19, #16]
   30fe0:	str	x0, [sp, #232]
   30fe4:	mov	w0, w7
   30fe8:	str	x0, [sp, #264]
   30fec:	ldr	x0, [sp, #232]
   30ff0:	ldr	w1, [sp, #224]
   30ff4:	add	x0, x0, w7, uxtw
   30ff8:	str	x0, [sp, #272]
   30ffc:	ldr	x0, [sp, #144]
   31000:	cmp	w1, w14
   31004:	mov	w1, w14
   31008:	add	x0, x0, w7, uxtw
   3100c:	str	x0, [sp, #280]
   31010:	ldr	w0, [sp, #224]
   31014:	sub	w0, w14, w0
   31018:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   3101c:	str	w0, [sp, #304]
   31020:	mov	x0, x19
   31024:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   31028:	cmp	w0, #0x0
   3102c:	mov	w2, #0x4                   	// #4
   31030:	csel	w1, w0, w6, ne  // ne = any
   31034:	str	w1, [sp, #320]
   31038:	ldr	w1, [sp, #224]
   3103c:	sub	w0, w14, w0
   31040:	ldrb	w23, [sp, #152]
   31044:	mov	w13, #0x0                   	// #0
   31048:	and	w18, w1, w14
   3104c:	str	w0, [sp, #368]
   31050:	ldr	x1, [sp, #200]
   31054:	ubfiz	x18, x18, #3, #31
   31058:	add	x24, x1, x18
   3105c:	add	x18, x18, #0x4
   31060:	add	x18, x1, x18
   31064:	add	w1, w14, #0x9
   31068:	str	w1, [sp, #248]
   3106c:	ldr	w1, [x19, #196]
   31070:	lsl	w1, w6, w1
   31074:	str	w1, [sp, #256]
   31078:	ldr	w1, [sp, #192]
   3107c:	sub	w1, w1, #0x1
   31080:	str	x1, [sp, #240]
   31084:	ldr	w1, [sp, #152]
   31088:	cmp	w1, #0x0
   3108c:	mov	w1, #0x3                   	// #3
   31090:	csel	w1, w2, w1, ne  // ne = any
   31094:	str	w1, [sp, #328]
   31098:	ldr	x1, [sp, #216]
   3109c:	str	x1, [sp, #352]
   310a0:	sub	w1, w14, w7
   310a4:	str	w1, [sp, #348]
   310a8:	sub	w1, w26, w14
   310ac:	add	x26, x22, #0x4
   310b0:	str	w1, [sp, #360]
   310b4:	mov	w27, w23
   310b8:	cmp	w23, #0x3
   310bc:	b.ne	31d28 <ZSTD_compress@@Base+0x234dc>  // b.any
   310c0:	ldr	x0, [sp, #136]
   310c4:	ldr	w0, [x0, #16]
   310c8:	sub	w0, w0, #0x1
   310cc:	ldr	w2, [sp, #348]
   310d0:	sub	w1, w0, #0x1
   310d4:	cmp	w1, w2
   310d8:	b.cs	31d34 <ZSTD_compress@@Base+0x234e8>  // b.hs, b.nlast
   310dc:	mov	w1, w0
   310e0:	sub	x0, x22, w0, uxtw
   310e4:	ldr	w2, [x0]
   310e8:	ldr	w0, [x22]
   310ec:	cmp	w2, w0
   310f0:	b.ne	31d84 <ZSTD_compress@@Base+0x23538>  // b.any
   310f4:	mov	x0, #0x4                   	// #4
   310f8:	sub	x1, x0, x1
   310fc:	mov	x2, x20
   31100:	add	x1, x22, x1
   31104:	mov	x0, x26
   31108:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   3110c:	add	w0, w0, #0x4
   31110:	ldr	x2, [sp, #240]
   31114:	mov	w1, w0
   31118:	cmp	x2, w0, uxtw
   3111c:	b.cs	3115c <ZSTD_compress@@Base+0x22910>  // b.hs, b.nlast
   31120:	ldr	w4, [sp, #152]
   31124:	ubfiz	x2, x13, #3, #32
   31128:	ldr	x3, [sp, #104]
   3112c:	sub	w27, w27, w4
   31130:	ldr	x4, [sp, #104]
   31134:	add	x3, x3, x2
   31138:	add	w13, w13, #0x1
   3113c:	str	w27, [x4, x2]
   31140:	add	x2, x22, x1
   31144:	cmp	x2, x20
   31148:	ldr	w2, [sp, #208]
   3114c:	str	w0, [x3, #4]
   31150:	ccmp	w0, w2, #0x2, ne  // ne = any
   31154:	b.hi	3161c <ZSTD_compress@@Base+0x22dd0>  // b.pmore
   31158:	str	x1, [sp, #240]
   3115c:	ldr	w0, [sp, #328]
   31160:	add	x23, x23, #0x1
   31164:	cmp	w0, w23
   31168:	b.hi	310b4 <ZSTD_compress@@Base+0x22868>  // b.pmore
   3116c:	ldr	x0, [sp, #312]
   31170:	mov	x27, #0x0                   	// #0
   31174:	str	w14, [x28, x0]
   31178:	add	w0, w15, #0x2
   3117c:	mov	x28, #0x0                   	// #0
   31180:	str	w0, [sp, #208]
   31184:	ldr	w0, [sp, #256]
   31188:	cbz	w0, 31b64 <ZSTD_compress@@Base+0x23318>
   3118c:	ldr	w0, [sp, #320]
   31190:	cmp	w0, w25
   31194:	b.hi	31b64 <ZSTD_compress@@Base+0x23318>  // b.pmore
   31198:	ldr	w0, [sp, #224]
   3119c:	cmp	x27, x28
   311a0:	ldr	x2, [sp, #264]
   311a4:	and	w14, w0, w25
   311a8:	ldr	x0, [sp, #200]
   311ac:	csel	x23, x27, x28, ls  // ls = plast
   311b0:	add	x1, x23, w25, uxtw
   311b4:	ubfiz	x14, x14, #3, #31
   311b8:	add	x15, x0, x14
   311bc:	mov	w7, w25
   311c0:	add	x0, x22, x23
   311c4:	cmp	x2, x1
   311c8:	b.hi	31d8c <ZSTD_compress@@Base+0x23540>  // b.pmore
   311cc:	ldr	x1, [sp, #144]
   311d0:	mov	x2, x20
   311d4:	add	x26, x1, x7
   311d8:	add	x1, x26, x23
   311dc:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   311e0:	add	x0, x23, x0
   311e4:	ldr	x1, [sp, #240]
   311e8:	cmp	x1, x0
   311ec:	b.cs	31244 <ZSTD_compress@@Base+0x229f8>  // b.hs, b.nlast
   311f0:	ldr	w1, [sp, #248]
   311f4:	mov	w3, w0
   311f8:	sub	w1, w1, w25
   311fc:	cmp	x0, x1
   31200:	b.ls	3120c <ZSTD_compress@@Base+0x229c0>  // b.plast
   31204:	add	w1, w25, w0
   31208:	str	w1, [sp, #248]
   3120c:	ldr	x2, [sp, #104]
   31210:	ubfiz	x1, x13, #3, #32
   31214:	ldr	x5, [sp, #104]
   31218:	add	x2, x2, x1
   3121c:	ldr	w4, [sp, #208]
   31220:	cmp	x0, #0x1, lsl #12
   31224:	add	w13, w13, #0x1
   31228:	sub	w4, w4, w25
   3122c:	str	w4, [x5, x1]
   31230:	str	w3, [x2, #4]
   31234:	add	x1, x22, x0
   31238:	ccmp	x1, x20, #0x4, ls  // ls = plast
   3123c:	b.eq	31b64 <ZSTD_compress@@Base+0x23318>  // b.none
   31240:	str	x0, [sp, #240]
   31244:	ldrb	w2, [x26, x0]
   31248:	ldrb	w1, [x22, x0]
   3124c:	cmp	w2, w1
   31250:	b.cs	31dcc <ZSTD_compress@@Base+0x23580>  // b.hs, b.nlast
   31254:	ldr	w1, [sp, #304]
   31258:	str	w25, [x24]
   3125c:	cmp	w25, w1
   31260:	b.ls	31df4 <ZSTD_compress@@Base+0x235a8>  // b.plast
   31264:	ldr	w25, [x15, #4]
   31268:	add	x24, x15, #0x4
   3126c:	ldr	w1, [sp, #256]
   31270:	mov	x27, x0
   31274:	sub	w1, w1, #0x1
   31278:	str	w1, [sp, #256]
   3127c:	b	31184 <ZSTD_compress@@Base+0x22938>
   31280:	mov	x6, x22
   31284:	mov	w0, #0x79b1                	// #31153
   31288:	movk	w0, #0x9e37, lsl #16
   3128c:	neg	w1, w1
   31290:	mov	w5, #0x1                   	// #1
   31294:	ldr	w25, [x19, #24]
   31298:	ldr	w26, [x6], #3
   3129c:	ldr	w2, [x19, #184]
   312a0:	sub	w7, w25, #0x1
   312a4:	str	x6, [sp, #376]
   312a8:	mul	w0, w26, w0
   312ac:	lsl	w26, w26, #8
   312b0:	lsr	w1, w0, w1
   312b4:	ubfiz	x0, x1, #2, #32
   312b8:	str	x0, [sp, #328]
   312bc:	ldr	w18, [x28, x0]
   312c0:	ldr	x0, [x19, #64]
   312c4:	str	x0, [sp, #224]
   312c8:	ldr	w0, [x24, #4]
   312cc:	sub	w0, w0, #0x1
   312d0:	lsl	w0, w5, w0
   312d4:	sub	w0, w0, #0x1
   312d8:	str	w0, [sp, #232]
   312dc:	ldr	x0, [x19, #16]
   312e0:	str	x0, [sp, #200]
   312e4:	mov	w0, w25
   312e8:	str	x0, [sp, #304]
   312ec:	ldr	x0, [sp, #200]
   312f0:	ldr	w1, [sp, #232]
   312f4:	add	x0, x0, w25, uxtw
   312f8:	str	x0, [sp, #256]
   312fc:	ldr	x0, [sp, #144]
   31300:	cmp	w1, w14
   31304:	mov	w1, w14
   31308:	add	x0, x0, w25, uxtw
   3130c:	str	x0, [sp, #264]
   31310:	ldr	w0, [sp, #232]
   31314:	sub	w0, w14, w0
   31318:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   3131c:	str	w0, [sp, #320]
   31320:	mov	x0, x19
   31324:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   31328:	cmp	w0, #0x0
   3132c:	mov	w3, #0x4                   	// #4
   31330:	csel	w1, w0, w5, ne  // ne = any
   31334:	str	w1, [sp, #312]
   31338:	ldr	w1, [sp, #232]
   3133c:	sub	w0, w14, w0
   31340:	ldr	x2, [sp, #224]
   31344:	and	w1, w1, w14
   31348:	ldrb	w23, [sp, #152]
   3134c:	mov	w13, #0x0                   	// #0
   31350:	ubfiz	x1, x1, #3, #31
   31354:	str	w0, [sp, #372]
   31358:	add	x2, x2, x1
   3135c:	str	x2, [sp, #240]
   31360:	ldr	x2, [sp, #224]
   31364:	add	x1, x1, #0x4
   31368:	ldr	x6, [sp, #376]
   3136c:	add	x1, x2, x1
   31370:	str	x1, [sp, #248]
   31374:	add	w1, w14, #0x9
   31378:	str	w1, [sp, #272]
   3137c:	ldr	w1, [x19, #196]
   31380:	lsl	w1, w5, w1
   31384:	str	w1, [sp, #280]
   31388:	ldr	w1, [sp, #192]
   3138c:	sub	w24, w1, #0x1
   31390:	ldr	w1, [sp, #152]
   31394:	cmp	w1, #0x0
   31398:	csel	w1, w3, w27, ne  // ne = any
   3139c:	str	w1, [sp, #348]
   313a0:	ldr	x1, [sp, #216]
   313a4:	str	x1, [sp, #360]
   313a8:	sub	w1, w14, w25
   313ac:	str	w1, [sp, #352]
   313b0:	sub	w1, w7, w14
   313b4:	str	w1, [sp, #368]
   313b8:	mov	w27, w23
   313bc:	cmp	w23, #0x3
   313c0:	b.ne	3154c <ZSTD_compress@@Base+0x22d00>  // b.any
   313c4:	ldr	x0, [sp, #136]
   313c8:	ldr	w0, [x0, #16]
   313cc:	sub	w0, w0, #0x1
   313d0:	ldr	w2, [sp, #352]
   313d4:	sub	w1, w0, #0x1
   313d8:	cmp	w1, w2
   313dc:	b.cs	31558 <ZSTD_compress@@Base+0x22d0c>  // b.hs, b.nlast
   313e0:	mov	w1, w0
   313e4:	sub	x0, x22, w0, uxtw
   313e8:	ldr	w0, [x0]
   313ec:	cmp	w26, w0, lsl #8
   313f0:	b.ne	315a8 <ZSTD_compress@@Base+0x22d5c>  // b.any
   313f4:	mov	x0, #0x3                   	// #3
   313f8:	sub	x1, x0, x1
   313fc:	mov	x2, x20
   31400:	add	x1, x22, x1
   31404:	mov	x0, x6
   31408:	str	x6, [sp, #376]
   3140c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   31410:	ldr	x6, [sp, #376]
   31414:	add	w0, w0, #0x3
   31418:	mov	w1, w0
   3141c:	cmp	x24, w0, uxtw
   31420:	b.cs	31460 <ZSTD_compress@@Base+0x22c14>  // b.hs, b.nlast
   31424:	ldr	w4, [sp, #152]
   31428:	ubfiz	x2, x13, #3, #32
   3142c:	ldr	x3, [sp, #104]
   31430:	sub	w27, w27, w4
   31434:	ldr	x4, [sp, #104]
   31438:	add	x3, x3, x2
   3143c:	add	w13, w13, #0x1
   31440:	str	w27, [x4, x2]
   31444:	add	x2, x22, x1
   31448:	cmp	x2, x20
   3144c:	ldr	w2, [sp, #208]
   31450:	str	w0, [x3, #4]
   31454:	ccmp	w0, w2, #0x2, ne  // ne = any
   31458:	b.hi	3161c <ZSTD_compress@@Base+0x22dd0>  // b.pmore
   3145c:	mov	x24, x1
   31460:	ldr	w0, [sp, #348]
   31464:	add	x23, x23, #0x1
   31468:	cmp	w0, w23
   3146c:	b.hi	313b8 <ZSTD_compress@@Base+0x22b6c>  // b.pmore
   31470:	cmp	x24, #0x2
   31474:	b.ne	315d4 <ZSTD_compress@@Base+0x22d88>  // b.any
   31478:	add	x1, sp, #0x18c
   3147c:	mov	x2, x22
   31480:	mov	x0, x19
   31484:	bl	1ff88 <ZSTD_compress@@Base+0x1173c>
   31488:	ldr	w1, [sp, #312]
   3148c:	sub	w23, w14, w0
   31490:	cmp	w1, w0
   31494:	mov	w1, #0x3ffff               	// #262143
   31498:	ccmp	w23, w1, #0x2, ls  // ls = plast
   3149c:	b.hi	315d4 <ZSTD_compress@@Base+0x22d88>  // b.pmore
   314a0:	mov	w1, w0
   314a4:	cmp	w25, w0
   314a8:	b.hi	315b0 <ZSTD_compress@@Base+0x22d64>  // b.pmore
   314ac:	ldr	x0, [sp, #144]
   314b0:	mov	x2, x20
   314b4:	add	x1, x0, x1
   314b8:	mov	x0, x22
   314bc:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   314c0:	cmp	x0, #0x2
   314c4:	b.ls	315d4 <ZSTD_compress@@Base+0x22d88>  // b.plast
   314c8:	ldr	x1, [sp, #104]
   314cc:	add	w23, w23, #0x2
   314d0:	ldr	w2, [sp, #208]
   314d4:	stp	w23, w0, [x1]
   314d8:	add	x1, x22, x0
   314dc:	cmp	x1, x20
   314e0:	ccmp	x0, x2, #0x2, ne  // ne = any
   314e4:	b.ls	315cc <ZSTD_compress@@Base+0x22d80>  // b.plast
   314e8:	add	w14, w14, #0x1
   314ec:	mov	w13, #0x1                   	// #1
   314f0:	str	w14, [x19, #36]
   314f4:	ldr	x1, [sp, #104]
   314f8:	sub	w0, w13, #0x1
   314fc:	ldr	w2, [sp, #296]
   31500:	add	x0, x1, x0, lsl #3
   31504:	ldr	w1, [x0, #4]
   31508:	cmp	w2, w1
   3150c:	b.cc	31520 <ZSTD_compress@@Base+0x22cd4>  // b.lo, b.ul, b.last
   31510:	ldr	w2, [sp, #168]
   31514:	add	w2, w2, w1
   31518:	cmp	w2, #0xfff
   3151c:	b.ls	31e0c <ZSTD_compress@@Base+0x235c0>  // b.plast
   31520:	ldr	w2, [x0]
   31524:	ldr	x0, [sp, #136]
   31528:	ldr	w0, [x0, #8]
   3152c:	cbnz	w0, 31e04 <ZSTD_compress@@Base+0x235b8>
   31530:	ldr	x0, [sp, #136]
   31534:	ldr	w0, [x0, #12]
   31538:	ldr	w3, [sp, #168]
   3153c:	sub	w0, w3, w0
   31540:	cmp	w0, #0x1, lsl #12
   31544:	b.ls	30ae8 <ZSTD_compress@@Base+0x2229c>  // b.plast
   31548:	b	3006c <ZSTD_compress@@Base+0x21820>
   3154c:	ldr	x0, [sp, #360]
   31550:	ldr	w0, [x0, x23, lsl #2]
   31554:	b	313d0 <ZSTD_compress@@Base+0x22b84>
   31558:	ldr	w2, [sp, #368]
   3155c:	add	w2, w2, w0
   31560:	cmp	w2, #0x2
   31564:	ldr	w2, [sp, #372]
   31568:	ccmp	w1, w2, #0x2, hi  // hi = pmore
   3156c:	b.cs	315a8 <ZSTD_compress@@Base+0x22d5c>  // b.hs, b.nlast
   31570:	ldr	x2, [sp, #200]
   31574:	sub	w0, w15, w0
   31578:	ldr	x1, [sp, #200]
   3157c:	add	x1, x1, x0
   31580:	ldr	w0, [x2, x0]
   31584:	cmp	w26, w0, lsl #8
   31588:	b.ne	315a8 <ZSTD_compress@@Base+0x22d5c>  // b.any
   3158c:	ldp	x3, x4, [sp, #256]
   31590:	mov	x2, x20
   31594:	add	x1, x1, #0x3
   31598:	mov	x0, x6
   3159c:	str	x6, [sp, #376]
   315a0:	bl	200cc <ZSTD_compress@@Base+0x11880>
   315a4:	b	31410 <ZSTD_compress@@Base+0x22bc4>
   315a8:	mov	w0, #0x0                   	// #0
   315ac:	b	31418 <ZSTD_compress@@Base+0x22bcc>
   315b0:	ldp	x3, x4, [sp, #256]
   315b4:	mov	x2, x20
   315b8:	ldr	x0, [sp, #200]
   315bc:	add	x1, x0, x1
   315c0:	mov	x0, x22
   315c4:	bl	200cc <ZSTD_compress@@Base+0x11880>
   315c8:	b	314c0 <ZSTD_compress@@Base+0x22c74>
   315cc:	mov	x24, x0
   315d0:	mov	w13, #0x1                   	// #1
   315d4:	ldr	x0, [sp, #328]
   315d8:	mov	x26, #0x0                   	// #0
   315dc:	str	w14, [x28, x0]
   315e0:	add	w0, w15, #0x2
   315e4:	mov	x28, #0x0                   	// #0
   315e8:	str	w0, [sp, #208]
   315ec:	ldr	w0, [sp, #280]
   315f0:	cbz	w0, 31600 <ZSTD_compress@@Base+0x22db4>
   315f4:	ldr	w0, [sp, #312]
   315f8:	cmp	w0, w18
   315fc:	b.ls	3162c <ZSTD_compress@@Base+0x22de0>  // b.plast
   31600:	ldr	x0, [sp, #248]
   31604:	str	wzr, [x0]
   31608:	ldr	x0, [sp, #240]
   3160c:	str	wzr, [x0]
   31610:	ldr	w0, [sp, #272]
   31614:	sub	w0, w0, #0x8
   31618:	str	w0, [x19, #36]
   3161c:	cbnz	w13, 314f4 <ZSTD_compress@@Base+0x22ca8>
   31620:	ldr	w0, [sp, #168]
   31624:	add	w0, w0, #0x1
   31628:	b	3099c <ZSTD_compress@@Base+0x22150>
   3162c:	ldr	w0, [sp, #232]
   31630:	cmp	x26, x28
   31634:	ldr	x2, [sp, #304]
   31638:	and	w14, w0, w18
   3163c:	ldr	x0, [sp, #224]
   31640:	csel	x23, x26, x28, ls  // ls = plast
   31644:	add	x1, x23, w18, uxtw
   31648:	ubfiz	x14, x14, #3, #31
   3164c:	add	x15, x0, x14
   31650:	mov	w27, w18
   31654:	add	x0, x22, x23
   31658:	cmp	x2, x1
   3165c:	b.hi	31718 <ZSTD_compress@@Base+0x22ecc>  // b.pmore
   31660:	ldr	x1, [sp, #144]
   31664:	mov	x2, x20
   31668:	add	x25, x1, x27
   3166c:	add	x1, x25, x23
   31670:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   31674:	add	x0, x23, x0
   31678:	cmp	x24, x0
   3167c:	b.cs	316d4 <ZSTD_compress@@Base+0x22e88>  // b.hs, b.nlast
   31680:	ldr	w1, [sp, #272]
   31684:	mov	w3, w0
   31688:	sub	w1, w1, w18
   3168c:	cmp	x0, x1
   31690:	b.ls	3169c <ZSTD_compress@@Base+0x22e50>  // b.plast
   31694:	add	w1, w18, w0
   31698:	str	w1, [sp, #272]
   3169c:	ldr	x2, [sp, #104]
   316a0:	ubfiz	x1, x13, #3, #32
   316a4:	ldr	x5, [sp, #104]
   316a8:	add	x2, x2, x1
   316ac:	ldr	w4, [sp, #208]
   316b0:	cmp	x0, #0x1, lsl #12
   316b4:	add	w13, w13, #0x1
   316b8:	sub	w4, w4, w18
   316bc:	str	w4, [x5, x1]
   316c0:	str	w3, [x2, #4]
   316c4:	add	x1, x22, x0
   316c8:	ccmp	x1, x20, #0x4, ls  // ls = plast
   316cc:	b.eq	31600 <ZSTD_compress@@Base+0x22db4>  // b.none
   316d0:	mov	x24, x0
   316d4:	ldrb	w2, [x25, x0]
   316d8:	ldrb	w1, [x22, x0]
   316dc:	cmp	w2, w1
   316e0:	b.cs	31750 <ZSTD_compress@@Base+0x22f04>  // b.hs, b.nlast
   316e4:	ldr	x1, [sp, #240]
   316e8:	str	w18, [x1]
   316ec:	ldr	w1, [sp, #320]
   316f0:	cmp	w18, w1
   316f4:	b.ls	3177c <ZSTD_compress@@Base+0x22f30>  // b.plast
   316f8:	ldr	w18, [x15, #4]
   316fc:	add	x1, x15, #0x4
   31700:	str	x1, [sp, #240]
   31704:	ldr	w1, [sp, #280]
   31708:	mov	x26, x0
   3170c:	sub	w1, w1, #0x1
   31710:	str	w1, [sp, #280]
   31714:	b	315ec <ZSTD_compress@@Base+0x22da0>
   31718:	ldp	x3, x4, [sp, #256]
   3171c:	mov	x2, x20
   31720:	ldr	x1, [sp, #200]
   31724:	add	x25, x1, x27
   31728:	add	x1, x25, x23
   3172c:	bl	200cc <ZSTD_compress@@Base+0x11880>
   31730:	ldr	x2, [sp, #304]
   31734:	add	x0, x23, x0
   31738:	add	x1, x27, x0
   3173c:	cmp	x2, x1
   31740:	b.hi	31678 <ZSTD_compress@@Base+0x22e2c>  // b.pmore
   31744:	ldr	x1, [sp, #144]
   31748:	add	x25, x1, x27
   3174c:	b	31678 <ZSTD_compress@@Base+0x22e2c>
   31750:	ldr	x1, [sp, #248]
   31754:	str	w18, [x1]
   31758:	ldr	w1, [sp, #320]
   3175c:	cmp	w18, w1
   31760:	b.ls	31788 <ZSTD_compress@@Base+0x22f3c>  // b.plast
   31764:	ldr	x1, [sp, #224]
   31768:	mov	x28, x0
   3176c:	mov	x0, x26
   31770:	str	x15, [sp, #248]
   31774:	ldr	w18, [x1, x14]
   31778:	b	31704 <ZSTD_compress@@Base+0x22eb8>
   3177c:	add	x0, sp, #0x190
   31780:	str	x0, [sp, #240]
   31784:	b	31600 <ZSTD_compress@@Base+0x22db4>
   31788:	add	x0, sp, #0x190
   3178c:	str	x0, [sp, #248]
   31790:	b	31600 <ZSTD_compress@@Base+0x22db4>
   31794:	ldr	x0, [sp, #360]
   31798:	ldr	w0, [x0, x23, lsl #2]
   3179c:	b	30e80 <ZSTD_compress@@Base+0x22634>
   317a0:	ldr	w2, [sp, #368]
   317a4:	add	w2, w2, w0
   317a8:	cmp	w2, #0x2
   317ac:	ldr	w2, [sp, #372]
   317b0:	ccmp	w1, w2, #0x2, hi  // hi = pmore
   317b4:	b.cs	317f4 <ZSTD_compress@@Base+0x22fa8>  // b.hs, b.nlast
   317b8:	ldr	x2, [sp, #232]
   317bc:	sub	w0, w15, w0
   317c0:	ldr	x1, [sp, #232]
   317c4:	add	x1, x1, x0
   317c8:	ldr	w0, [x2, x0]
   317cc:	ldr	w2, [sp, #264]
   317d0:	cmp	w2, w0
   317d4:	b.ne	317f4 <ZSTD_compress@@Base+0x22fa8>  // b.any
   317d8:	ldr	x3, [sp, #280]
   317dc:	mov	x2, x20
   317e0:	ldr	x4, [sp, #304]
   317e4:	add	x1, x1, #0x4
   317e8:	mov	x0, x26
   317ec:	bl	200cc <ZSTD_compress@@Base+0x11880>
   317f0:	b	30ec0 <ZSTD_compress@@Base+0x22674>
   317f4:	mov	w0, #0x0                   	// #0
   317f8:	b	30ec4 <ZSTD_compress@@Base+0x22678>
   317fc:	ldr	w0, [sp, #224]
   31800:	cmp	x28, x27
   31804:	ldr	x2, [sp, #272]
   31808:	and	w14, w0, w24
   3180c:	ldr	x0, [sp, #200]
   31810:	csel	x23, x28, x27, ls  // ls = plast
   31814:	add	x1, x23, w24, uxtw
   31818:	ubfiz	x14, x14, #3, #31
   3181c:	add	x15, x0, x14
   31820:	mov	w7, w24
   31824:	add	x0, x22, x23
   31828:	cmp	x2, x1
   3182c:	b.hi	318f0 <ZSTD_compress@@Base+0x230a4>  // b.pmore
   31830:	ldr	x1, [sp, #144]
   31834:	mov	x2, x20
   31838:	add	x26, x1, x7
   3183c:	add	x1, x26, x23
   31840:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   31844:	add	x0, x23, x0
   31848:	cmp	x25, x0
   3184c:	b.cs	318a4 <ZSTD_compress@@Base+0x23058>  // b.hs, b.nlast
   31850:	ldr	w1, [sp, #256]
   31854:	mov	w3, w0
   31858:	sub	w1, w1, w24
   3185c:	cmp	x0, x1
   31860:	b.ls	3186c <ZSTD_compress@@Base+0x23020>  // b.plast
   31864:	add	w1, w24, w0
   31868:	str	w1, [sp, #256]
   3186c:	ldr	x2, [sp, #104]
   31870:	ubfiz	x1, x13, #3, #32
   31874:	ldr	x5, [sp, #104]
   31878:	add	x2, x2, x1
   3187c:	ldr	w4, [sp, #208]
   31880:	cmp	x0, #0x1, lsl #12
   31884:	add	w13, w13, #0x1
   31888:	sub	w4, w4, w24
   3188c:	str	w4, [x5, x1]
   31890:	str	w3, [x2, #4]
   31894:	add	x1, x22, x0
   31898:	ccmp	x1, x20, #0x4, ls  // ls = plast
   3189c:	b.eq	30f48 <ZSTD_compress@@Base+0x226fc>  // b.none
   318a0:	mov	x25, x0
   318a4:	ldrb	w2, [x26, x0]
   318a8:	ldrb	w1, [x22, x0]
   318ac:	cmp	w2, w1
   318b0:	b.cs	31930 <ZSTD_compress@@Base+0x230e4>  // b.hs, b.nlast
   318b4:	ldr	x1, [sp, #240]
   318b8:	str	w24, [x1]
   318bc:	ldr	w1, [sp, #312]
   318c0:	cmp	w24, w1
   318c4:	b.ls	31950 <ZSTD_compress@@Base+0x23104>  // b.plast
   318c8:	ldr	w24, [x15, #4]
   318cc:	mov	x28, x0
   318d0:	mov	x0, x27
   318d4:	add	x1, x15, #0x4
   318d8:	str	x1, [sp, #240]
   318dc:	ldr	w1, [sp, #248]
   318e0:	mov	x27, x0
   318e4:	sub	w1, w1, #0x1
   318e8:	str	w1, [sp, #248]
   318ec:	b	30f34 <ZSTD_compress@@Base+0x226e8>
   318f0:	ldr	x1, [sp, #232]
   318f4:	mov	x2, x20
   318f8:	ldr	x3, [sp, #280]
   318fc:	add	x26, x1, x7
   31900:	ldr	x4, [sp, #304]
   31904:	add	x1, x26, x23
   31908:	str	x7, [sp, #264]
   3190c:	bl	200cc <ZSTD_compress@@Base+0x11880>
   31910:	add	x0, x23, x0
   31914:	ldp	x7, x2, [sp, #264]
   31918:	add	x1, x7, x0
   3191c:	cmp	x2, x1
   31920:	b.hi	31848 <ZSTD_compress@@Base+0x22ffc>  // b.pmore
   31924:	ldr	x1, [sp, #144]
   31928:	add	x26, x1, x7
   3192c:	b	31848 <ZSTD_compress@@Base+0x22ffc>
   31930:	ldr	w1, [sp, #312]
   31934:	str	w24, [x18]
   31938:	cmp	w24, w1
   3193c:	b.ls	3195c <ZSTD_compress@@Base+0x23110>  // b.plast
   31940:	ldr	x1, [sp, #200]
   31944:	mov	x18, x15
   31948:	ldr	w24, [x1, x14]
   3194c:	b	318dc <ZSTD_compress@@Base+0x23090>
   31950:	add	x0, sp, #0x190
   31954:	str	x0, [sp, #240]
   31958:	b	30f48 <ZSTD_compress@@Base+0x226fc>
   3195c:	add	x18, sp, #0x190
   31960:	b	30f48 <ZSTD_compress@@Base+0x226fc>
   31964:	mov	w2, w27
   31968:	mov	x0, x22
   3196c:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   31970:	lsl	x0, x0, #2
   31974:	str	x0, [sp, #312]
   31978:	mov	w6, #0x1                   	// #1
   3197c:	ldr	w7, [x19, #24]
   31980:	ldr	w25, [x28, x0]
   31984:	ldr	x0, [x19, #64]
   31988:	str	x0, [sp, #200]
   3198c:	ldr	w0, [x24, #4]
   31990:	sub	w26, w7, #0x1
   31994:	ldr	w2, [x19, #184]
   31998:	sub	w0, w0, #0x1
   3199c:	lsl	w0, w6, w0
   319a0:	sub	w0, w0, #0x1
   319a4:	str	w0, [sp, #224]
   319a8:	ldr	x0, [x19, #16]
   319ac:	str	x0, [sp, #232]
   319b0:	mov	w0, w7
   319b4:	str	x0, [sp, #264]
   319b8:	ldr	x0, [sp, #232]
   319bc:	ldr	w1, [sp, #224]
   319c0:	add	x0, x0, w7, uxtw
   319c4:	str	x0, [sp, #272]
   319c8:	ldr	x0, [sp, #144]
   319cc:	cmp	w1, w14
   319d0:	mov	w1, w14
   319d4:	add	x0, x0, w7, uxtw
   319d8:	str	x0, [sp, #280]
   319dc:	ldr	w0, [sp, #224]
   319e0:	sub	w0, w14, w0
   319e4:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   319e8:	str	w0, [sp, #304]
   319ec:	mov	x0, x19
   319f0:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   319f4:	cmp	w0, #0x0
   319f8:	mov	w2, #0x4                   	// #4
   319fc:	csel	w1, w0, w6, ne  // ne = any
   31a00:	str	w1, [sp, #320]
   31a04:	ldr	w1, [sp, #224]
   31a08:	sub	w0, w14, w0
   31a0c:	ldrb	w23, [sp, #152]
   31a10:	mov	w13, #0x0                   	// #0
   31a14:	and	w18, w1, w14
   31a18:	str	w0, [sp, #368]
   31a1c:	ldr	x1, [sp, #200]
   31a20:	ubfiz	x18, x18, #3, #31
   31a24:	add	x24, x1, x18
   31a28:	add	x18, x18, #0x4
   31a2c:	add	x18, x1, x18
   31a30:	add	w1, w14, #0x9
   31a34:	str	w1, [sp, #248]
   31a38:	ldr	w1, [x19, #196]
   31a3c:	lsl	w1, w6, w1
   31a40:	str	w1, [sp, #256]
   31a44:	ldr	w1, [sp, #192]
   31a48:	sub	w1, w1, #0x1
   31a4c:	str	x1, [sp, #240]
   31a50:	ldr	w1, [sp, #152]
   31a54:	cmp	w1, #0x0
   31a58:	mov	w1, #0x3                   	// #3
   31a5c:	csel	w1, w2, w1, ne  // ne = any
   31a60:	str	w1, [sp, #328]
   31a64:	ldr	x1, [sp, #216]
   31a68:	str	x1, [sp, #352]
   31a6c:	sub	w1, w14, w7
   31a70:	str	w1, [sp, #348]
   31a74:	sub	w1, w26, w14
   31a78:	add	x26, x22, #0x4
   31a7c:	str	w1, [sp, #360]
   31a80:	mov	w27, w23
   31a84:	cmp	w23, #0x3
   31a88:	b.ne	31b74 <ZSTD_compress@@Base+0x23328>  // b.any
   31a8c:	ldr	x0, [sp, #136]
   31a90:	ldr	w0, [x0, #16]
   31a94:	sub	w0, w0, #0x1
   31a98:	ldr	w2, [sp, #348]
   31a9c:	sub	w1, w0, #0x1
   31aa0:	cmp	w1, w2
   31aa4:	b.cs	31b80 <ZSTD_compress@@Base+0x23334>  // b.hs, b.nlast
   31aa8:	mov	w1, w0
   31aac:	sub	x0, x22, w0, uxtw
   31ab0:	ldr	w2, [x0]
   31ab4:	ldr	w0, [x22]
   31ab8:	cmp	w2, w0
   31abc:	b.ne	31bd0 <ZSTD_compress@@Base+0x23384>  // b.any
   31ac0:	mov	x0, #0x4                   	// #4
   31ac4:	sub	x1, x0, x1
   31ac8:	mov	x2, x20
   31acc:	add	x1, x22, x1
   31ad0:	mov	x0, x26
   31ad4:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   31ad8:	add	w0, w0, #0x4
   31adc:	ldr	x2, [sp, #240]
   31ae0:	mov	w1, w0
   31ae4:	cmp	x2, w0, uxtw
   31ae8:	b.cs	31b28 <ZSTD_compress@@Base+0x232dc>  // b.hs, b.nlast
   31aec:	ldr	w4, [sp, #152]
   31af0:	ubfiz	x2, x13, #3, #32
   31af4:	ldr	x3, [sp, #104]
   31af8:	sub	w27, w27, w4
   31afc:	ldr	x4, [sp, #104]
   31b00:	add	x3, x3, x2
   31b04:	add	w13, w13, #0x1
   31b08:	str	w27, [x4, x2]
   31b0c:	add	x2, x22, x1
   31b10:	cmp	x2, x20
   31b14:	ldr	w2, [sp, #208]
   31b18:	str	w0, [x3, #4]
   31b1c:	ccmp	w0, w2, #0x2, ne  // ne = any
   31b20:	b.hi	3161c <ZSTD_compress@@Base+0x22dd0>  // b.pmore
   31b24:	str	x1, [sp, #240]
   31b28:	ldr	w0, [sp, #328]
   31b2c:	add	x23, x23, #0x1
   31b30:	cmp	w0, w23
   31b34:	b.hi	31a80 <ZSTD_compress@@Base+0x23234>  // b.pmore
   31b38:	ldr	x0, [sp, #312]
   31b3c:	mov	x27, #0x0                   	// #0
   31b40:	str	w14, [x28, x0]
   31b44:	add	w0, w15, #0x2
   31b48:	mov	x28, #0x0                   	// #0
   31b4c:	str	w0, [sp, #208]
   31b50:	ldr	w0, [sp, #256]
   31b54:	cbz	w0, 31b64 <ZSTD_compress@@Base+0x23318>
   31b58:	ldr	w0, [sp, #320]
   31b5c:	cmp	w0, w25
   31b60:	b.ls	31bd8 <ZSTD_compress@@Base+0x2338c>  // b.plast
   31b64:	ldr	w0, [sp, #248]
   31b68:	str	wzr, [x18]
   31b6c:	str	wzr, [x24]
   31b70:	b	31614 <ZSTD_compress@@Base+0x22dc8>
   31b74:	ldr	x0, [sp, #352]
   31b78:	ldr	w0, [x0, x23, lsl #2]
   31b7c:	b	31a98 <ZSTD_compress@@Base+0x2324c>
   31b80:	ldr	w2, [sp, #360]
   31b84:	add	w2, w2, w0
   31b88:	cmp	w2, #0x2
   31b8c:	ldr	w2, [sp, #368]
   31b90:	ccmp	w1, w2, #0x2, hi  // hi = pmore
   31b94:	b.cs	31bd0 <ZSTD_compress@@Base+0x23384>  // b.hs, b.nlast
   31b98:	ldr	x2, [sp, #232]
   31b9c:	sub	w0, w15, w0
   31ba0:	ldr	x1, [sp, #232]
   31ba4:	ldr	w2, [x2, x0]
   31ba8:	add	x1, x1, x0
   31bac:	ldr	w0, [x22]
   31bb0:	cmp	w2, w0
   31bb4:	b.ne	31bd0 <ZSTD_compress@@Base+0x23384>  // b.any
   31bb8:	ldp	x3, x4, [sp, #272]
   31bbc:	mov	x2, x20
   31bc0:	add	x1, x1, #0x4
   31bc4:	mov	x0, x26
   31bc8:	bl	200cc <ZSTD_compress@@Base+0x11880>
   31bcc:	b	31ad8 <ZSTD_compress@@Base+0x2328c>
   31bd0:	mov	w0, #0x0                   	// #0
   31bd4:	b	31adc <ZSTD_compress@@Base+0x23290>
   31bd8:	ldr	w0, [sp, #224]
   31bdc:	cmp	x27, x28
   31be0:	ldr	x2, [sp, #264]
   31be4:	and	w14, w0, w25
   31be8:	ldr	x0, [sp, #200]
   31bec:	csel	x23, x27, x28, ls  // ls = plast
   31bf0:	add	x1, x23, w25, uxtw
   31bf4:	ubfiz	x14, x14, #3, #31
   31bf8:	add	x15, x0, x14
   31bfc:	mov	w7, w25
   31c00:	add	x0, x22, x23
   31c04:	cmp	x2, x1
   31c08:	b.hi	31cc0 <ZSTD_compress@@Base+0x23474>  // b.pmore
   31c0c:	ldr	x1, [sp, #144]
   31c10:	mov	x2, x20
   31c14:	add	x26, x1, x7
   31c18:	add	x1, x26, x23
   31c1c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   31c20:	add	x0, x23, x0
   31c24:	ldr	x1, [sp, #240]
   31c28:	cmp	x1, x0
   31c2c:	b.cs	31c84 <ZSTD_compress@@Base+0x23438>  // b.hs, b.nlast
   31c30:	ldr	w1, [sp, #248]
   31c34:	mov	w3, w0
   31c38:	sub	w1, w1, w25
   31c3c:	cmp	x0, x1
   31c40:	b.ls	31c4c <ZSTD_compress@@Base+0x23400>  // b.plast
   31c44:	add	w1, w25, w0
   31c48:	str	w1, [sp, #248]
   31c4c:	ldr	x2, [sp, #104]
   31c50:	ubfiz	x1, x13, #3, #32
   31c54:	ldr	x5, [sp, #104]
   31c58:	add	x2, x2, x1
   31c5c:	ldr	w4, [sp, #208]
   31c60:	cmp	x0, #0x1, lsl #12
   31c64:	add	w13, w13, #0x1
   31c68:	sub	w4, w4, w25
   31c6c:	str	w4, [x5, x1]
   31c70:	str	w3, [x2, #4]
   31c74:	add	x1, x22, x0
   31c78:	ccmp	x1, x20, #0x4, ls  // ls = plast
   31c7c:	b.eq	31b64 <ZSTD_compress@@Base+0x23318>  // b.none
   31c80:	str	x0, [sp, #240]
   31c84:	ldrb	w2, [x26, x0]
   31c88:	ldrb	w1, [x22, x0]
   31c8c:	cmp	w2, w1
   31c90:	b.cs	31d00 <ZSTD_compress@@Base+0x234b4>  // b.hs, b.nlast
   31c94:	ldr	w1, [sp, #304]
   31c98:	str	w25, [x24]
   31c9c:	cmp	w25, w1
   31ca0:	b.ls	31df4 <ZSTD_compress@@Base+0x235a8>  // b.plast
   31ca4:	ldr	w25, [x15, #4]
   31ca8:	add	x24, x15, #0x4
   31cac:	ldr	w1, [sp, #256]
   31cb0:	mov	x27, x0
   31cb4:	sub	w1, w1, #0x1
   31cb8:	str	w1, [sp, #256]
   31cbc:	b	31b50 <ZSTD_compress@@Base+0x23304>
   31cc0:	ldp	x3, x4, [sp, #272]
   31cc4:	mov	x2, x20
   31cc8:	ldr	x1, [sp, #232]
   31ccc:	str	x7, [sp, #312]
   31cd0:	add	x26, x1, x7
   31cd4:	add	x1, x26, x23
   31cd8:	bl	200cc <ZSTD_compress@@Base+0x11880>
   31cdc:	ldr	x7, [sp, #312]
   31ce0:	add	x0, x23, x0
   31ce4:	ldr	x2, [sp, #264]
   31ce8:	add	x1, x7, x0
   31cec:	cmp	x2, x1
   31cf0:	b.hi	31c24 <ZSTD_compress@@Base+0x233d8>  // b.pmore
   31cf4:	ldr	x1, [sp, #144]
   31cf8:	add	x26, x1, x7
   31cfc:	b	31c24 <ZSTD_compress@@Base+0x233d8>
   31d00:	ldr	w1, [sp, #304]
   31d04:	str	w25, [x18]
   31d08:	cmp	w25, w1
   31d0c:	b.ls	31dfc <ZSTD_compress@@Base+0x235b0>  // b.plast
   31d10:	ldr	x1, [sp, #200]
   31d14:	mov	x28, x0
   31d18:	mov	x18, x15
   31d1c:	mov	x0, x27
   31d20:	ldr	w25, [x1, x14]
   31d24:	b	31cac <ZSTD_compress@@Base+0x23460>
   31d28:	ldr	x0, [sp, #352]
   31d2c:	ldr	w0, [x0, x23, lsl #2]
   31d30:	b	310cc <ZSTD_compress@@Base+0x22880>
   31d34:	ldr	w2, [sp, #360]
   31d38:	add	w2, w2, w0
   31d3c:	cmp	w2, #0x2
   31d40:	ldr	w2, [sp, #368]
   31d44:	ccmp	w1, w2, #0x2, hi  // hi = pmore
   31d48:	b.cs	31d84 <ZSTD_compress@@Base+0x23538>  // b.hs, b.nlast
   31d4c:	ldr	x2, [sp, #232]
   31d50:	sub	w0, w15, w0
   31d54:	ldr	x1, [sp, #232]
   31d58:	ldr	w2, [x2, x0]
   31d5c:	add	x1, x1, x0
   31d60:	ldr	w0, [x22]
   31d64:	cmp	w2, w0
   31d68:	b.ne	31d84 <ZSTD_compress@@Base+0x23538>  // b.any
   31d6c:	ldp	x3, x4, [sp, #272]
   31d70:	mov	x2, x20
   31d74:	add	x1, x1, #0x4
   31d78:	mov	x0, x26
   31d7c:	bl	200cc <ZSTD_compress@@Base+0x11880>
   31d80:	b	3110c <ZSTD_compress@@Base+0x228c0>
   31d84:	mov	w0, #0x0                   	// #0
   31d88:	b	31110 <ZSTD_compress@@Base+0x228c4>
   31d8c:	ldp	x3, x4, [sp, #272]
   31d90:	mov	x2, x20
   31d94:	ldr	x1, [sp, #232]
   31d98:	str	x7, [sp, #312]
   31d9c:	add	x26, x1, x7
   31da0:	add	x1, x26, x23
   31da4:	bl	200cc <ZSTD_compress@@Base+0x11880>
   31da8:	ldr	x7, [sp, #312]
   31dac:	add	x0, x23, x0
   31db0:	ldr	x2, [sp, #264]
   31db4:	add	x1, x7, x0
   31db8:	cmp	x2, x1
   31dbc:	b.hi	311e4 <ZSTD_compress@@Base+0x22998>  // b.pmore
   31dc0:	ldr	x1, [sp, #144]
   31dc4:	add	x26, x1, x7
   31dc8:	b	311e4 <ZSTD_compress@@Base+0x22998>
   31dcc:	ldr	w1, [sp, #304]
   31dd0:	str	w25, [x18]
   31dd4:	cmp	w25, w1
   31dd8:	b.ls	31dfc <ZSTD_compress@@Base+0x235b0>  // b.plast
   31ddc:	ldr	x1, [sp, #200]
   31de0:	mov	x28, x0
   31de4:	mov	x18, x15
   31de8:	mov	x0, x27
   31dec:	ldr	w25, [x1, x14]
   31df0:	b	3126c <ZSTD_compress@@Base+0x22a20>
   31df4:	add	x24, sp, #0x190
   31df8:	b	31b64 <ZSTD_compress@@Base+0x23318>
   31dfc:	add	x18, sp, #0x190
   31e00:	b	31b64 <ZSTD_compress@@Base+0x23318>
   31e04:	mov	w0, #0x0                   	// #0
   31e08:	b	31538 <ZSTD_compress@@Base+0x22cec>
   31e0c:	ldr	x7, [sp, #104]
   31e10:	mov	w6, #0x0                   	// #0
   31e14:	ldr	w9, [x7]
   31e18:	ldr	w2, [sp, #152]
   31e1c:	ldr	x0, [sp, #216]
   31e20:	mov	w1, w9
   31e24:	bl	205a8 <ZSTD_compress@@Base+0x11d5c>
   31e28:	str	w0, [sp, #400]
   31e2c:	lsr	x0, x0, #32
   31e30:	str	w0, [sp, #404]
   31e34:	str	w1, [sp, #408]
   31e38:	ldr	w4, [x7, #4]
   31e3c:	cbz	w6, 31eb0 <ZSTD_compress@@Base+0x23664>
   31e40:	ldr	x1, [sp, #104]
   31e44:	sub	w0, w6, #0x1
   31e48:	add	x0, x1, x0, lsl #3
   31e4c:	ldr	w8, [x0, #4]
   31e50:	add	w8, w8, #0x1
   31e54:	add	w2, w9, #0x1
   31e58:	ldr	w0, [sp, #168]
   31e5c:	clz	w2, w2
   31e60:	ldr	w1, [sp, #344]
   31e64:	eor	w2, w2, #0x1f
   31e68:	add	w5, w0, w4
   31e6c:	sub	w10, w2, #0x13
   31e70:	ldr	w0, [sp, #300]
   31e74:	add	w11, w2, #0x10
   31e78:	sbfiz	x14, x2, #2, #32
   31e7c:	lsl	w15, w2, #8
   31e80:	lsl	w10, w10, #9
   31e84:	lsl	w11, w11, #8
   31e88:	add	w18, w0, w1
   31e8c:	mov	w12, #0x1c                  	// #28
   31e90:	mov	w22, #0x40000000            	// #1073741824
   31e94:	cmp	w4, w8
   31e98:	b.cs	31eb8 <ZSTD_compress@@Base+0x2366c>  // b.hs, b.nlast
   31e9c:	add	w6, w6, #0x1
   31ea0:	add	x7, x7, #0x8
   31ea4:	cmp	w13, w6
   31ea8:	b.ne	31e14 <ZSTD_compress@@Base+0x235c8>  // b.any
   31eac:	b	31620 <ZSTD_compress@@Base+0x22dd4>
   31eb0:	ldr	w8, [sp, #192]
   31eb4:	b	31e54 <ZSTD_compress@@Base+0x23608>
   31eb8:	ldr	w0, [x19, #152]
   31ebc:	add	x23, x19, #0x48
   31ec0:	sub	w1, w4, #0x3
   31ec4:	cmp	w0, #0x1
   31ec8:	b.ne	31f34 <ZSTD_compress@@Base+0x236e8>  // b.any
   31ecc:	mov	w0, w1
   31ed0:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   31ed4:	add	w0, w11, w0
   31ed8:	ldr	x1, [sp, #112]
   31edc:	umull	x16, w5, w12
   31ee0:	ldr	w3, [sp, #176]
   31ee4:	add	w0, w18, w0
   31ee8:	add	x1, x1, x16
   31eec:	cmp	w5, w3
   31ef0:	b.hi	31f90 <ZSTD_compress@@Base+0x23744>  // b.pmore
   31ef4:	ldr	x3, [sp, #112]
   31ef8:	ldr	w3, [x3, x16]
   31efc:	cmp	w0, w3
   31f00:	b.ge	31e9c <ZSTD_compress@@Base+0x23650>  // b.tcont
   31f04:	ldr	w3, [sp, #196]
   31f08:	sub	w5, w5, #0x1
   31f0c:	str	w3, [x1, #12]
   31f10:	ldr	x3, [sp, #112]
   31f14:	stp	w9, w4, [x1, #4]
   31f18:	sub	w4, w4, #0x1
   31f1c:	str	w0, [x3, x16]
   31f20:	ldr	x0, [sp, #400]
   31f24:	str	x0, [x1, #16]
   31f28:	ldr	w0, [sp, #408]
   31f2c:	str	w0, [x1, #24]
   31f30:	b	31e94 <ZSTD_compress@@Base+0x23648>
   31f34:	ldr	x0, [x23, #24]
   31f38:	ldr	w0, [x0, x14]
   31f3c:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   31f40:	cmp	w2, #0x13
   31f44:	ldr	w3, [x23, #76]
   31f48:	add	w3, w15, w3
   31f4c:	sub	w3, w3, w0
   31f50:	b.le	31f58 <ZSTD_compress@@Base+0x2370c>
   31f54:	add	w3, w3, w10
   31f58:	mov	w0, w1
   31f5c:	bl	2043c <ZSTD_compress@@Base+0x11bf0>
   31f60:	ldr	x16, [x19, #88]
   31f64:	mov	w23, w0
   31f68:	ldr	w0, [x16, w0, uxtw #2]
   31f6c:	bl	203a4 <ZSTD_compress@@Base+0x11b58>
   31f70:	sub	w0, w3, w0
   31f74:	ldr	w1, [x19, #144]
   31f78:	add	w1, w1, #0x33
   31f7c:	add	w1, w1, w0
   31f80:	ldr	x0, [sp, #336]
   31f84:	ldr	w0, [x0, x23, lsl #2]
   31f88:	add	w0, w1, w0, lsl #8
   31f8c:	b	31ed8 <ZSTD_compress@@Base+0x2368c>
   31f90:	ldr	w3, [sp, #176]
   31f94:	ldr	x17, [sp, #112]
   31f98:	add	w3, w3, #0x1
   31f9c:	umaddl	x3, w3, w12, x17
   31fa0:	ldr	w17, [sp, #176]
   31fa4:	str	w22, [x3], #28
   31fa8:	add	w17, w17, #0x1
   31fac:	str	w17, [sp, #176]
   31fb0:	cmp	w5, w17
   31fb4:	b.ne	31fa0 <ZSTD_compress@@Base+0x23754>  // b.any
   31fb8:	str	w5, [sp, #176]
   31fbc:	b	31f04 <ZSTD_compress@@Base+0x236b8>
   31fc0:	sub	w0, w0, w5
   31fc4:	b	30b24 <ZSTD_compress@@Base+0x222d8>
   31fc8:	ldr	x0, [sp, #112]
   31fcc:	ldr	x1, [sp, #128]
   31fd0:	umaddl	x0, w10, w14, x0
   31fd4:	ldp	w22, w9, [x0, #8]
   31fd8:	mov	w23, w9
   31fdc:	add	x21, x1, w9, uxtw
   31fe0:	cbz	w22, 32138 <ZSTD_compress@@Base+0x238ec>
   31fe4:	ldr	w11, [x0, #4]
   31fe8:	cmp	w11, #0x2
   31fec:	b.ls	32140 <ZSTD_compress@@Base+0x238f4>  // b.plast
   31ff0:	ldr	x0, [sp, #120]
   31ff4:	ldr	x1, [sp, #120]
   31ff8:	ldr	w0, [x0, #4]
   31ffc:	str	w0, [x1, #8]
   32000:	ldr	w0, [x1]
   32004:	str	w0, [x1, #4]
   32008:	sub	w0, w11, #0x2
   3200c:	str	w0, [x1]
   32010:	ldr	x2, [sp, #128]
   32014:	mov	w4, w22
   32018:	ldr	x0, [sp, #184]
   3201c:	mov	w3, w11
   32020:	mov	w1, w9
   32024:	bl	209b4 <ZSTD_compress@@Base+0x12168>
   32028:	cmp	x21, x12
   3202c:	sub	w5, w22, #0x3
   32030:	b.hi	32190 <ZSTD_compress@@Base+0x23944>  // b.pmore
   32034:	ldr	x0, [sp, #160]
   32038:	cmp	x23, #0x10
   3203c:	ldr	x2, [x0, #24]
   32040:	ldr	x0, [sp, #128]
   32044:	ldp	x0, x1, [x0]
   32048:	stp	x0, x1, [x2]
   3204c:	b.ls	320a8 <ZSTD_compress@@Base+0x2385c>  // b.plast
   32050:	ldr	x0, [sp, #160]
   32054:	ldr	x3, [x0, #24]
   32058:	ldr	x0, [sp, #128]
   3205c:	add	x2, x3, x23
   32060:	add	x3, x3, #0x30
   32064:	ldp	x0, x1, [x0, #16]
   32068:	stp	x0, x1, [x3, #-32]
   3206c:	ldr	x0, [sp, #128]
   32070:	ldp	x0, x1, [x0, #32]
   32074:	stp	x0, x1, [x3, #-16]
   32078:	cmp	x2, x3
   3207c:	b.ls	320a8 <ZSTD_compress@@Base+0x2385c>  // b.plast
   32080:	ldr	x0, [sp, #128]
   32084:	add	x4, x0, #0x30
   32088:	ldp	x0, x1, [x4]
   3208c:	stp	x0, x1, [x3]
   32090:	add	x3, x3, #0x20
   32094:	ldp	x0, x1, [x4, #16]
   32098:	stp	x0, x1, [x3, #-16]
   3209c:	add	x4, x4, #0x20
   320a0:	cmp	x3, x2
   320a4:	b.cc	32088 <ZSTD_compress@@Base+0x2383c>  // b.lo, b.ul, b.last
   320a8:	ldr	x0, [sp, #160]
   320ac:	cmp	x23, x13
   320b0:	ldr	x1, [sp, #160]
   320b4:	ldr	x0, [x0, #24]
   320b8:	add	x0, x0, x23
   320bc:	str	x0, [x1, #24]
   320c0:	ldr	x0, [x1, #8]
   320c4:	b.ls	320e4 <ZSTD_compress@@Base+0x23898>  // b.plast
   320c8:	ldr	x2, [sp, #160]
   320cc:	mov	w1, #0x1                   	// #1
   320d0:	str	w1, [x2, #72]
   320d4:	ldr	x1, [x2]
   320d8:	sub	x1, x0, x1
   320dc:	asr	x1, x1, #3
   320e0:	str	w1, [x2, #76]
   320e4:	add	w11, w11, #0x1
   320e8:	str	w11, [x0]
   320ec:	strh	w9, [x0, #4]
   320f0:	cmp	w5, w15
   320f4:	b.ls	32114 <ZSTD_compress@@Base+0x238c8>  // b.plast
   320f8:	ldr	x1, [sp, #160]
   320fc:	ldr	x2, [sp, #160]
   32100:	str	w18, [x1, #72]
   32104:	ldr	x1, [x1]
   32108:	sub	x1, x0, x1
   3210c:	asr	x1, x1, #3
   32110:	str	w1, [x2, #76]
   32114:	ldr	x1, [sp, #160]
   32118:	add	x0, x0, #0x8
   3211c:	sturh	w5, [x0, #-2]
   32120:	add	w9, w9, w22
   32124:	str	x0, [x1, #8]
   32128:	ldr	x0, [sp, #128]
   3212c:	add	x0, x0, x9
   32130:	str	x0, [sp, #128]
   32134:	mov	x21, x0
   32138:	add	w10, w10, #0x1
   3213c:	b	30b78 <ZSTD_compress@@Base+0x2232c>
   32140:	cmp	w9, #0x0
   32144:	cinc	w0, w11, eq  // eq = none
   32148:	cbz	w0, 32010 <ZSTD_compress@@Base+0x237c4>
   3214c:	ldr	x1, [sp, #120]
   32150:	cmp	w0, #0x3
   32154:	ldr	w2, [x1]
   32158:	b.ne	32174 <ZSTD_compress@@Base+0x23928>  // b.any
   3215c:	sub	w1, w2, #0x1
   32160:	ldr	x0, [sp, #120]
   32164:	ldr	x3, [sp, #120]
   32168:	ldr	w0, [x0, #4]
   3216c:	str	w0, [x3, #8]
   32170:	b	32184 <ZSTD_compress@@Base+0x23938>
   32174:	ldr	x1, [sp, #120]
   32178:	cmp	w0, #0x1
   3217c:	ldr	w1, [x1, w0, uxtw #2]
   32180:	b.ne	32160 <ZSTD_compress@@Base+0x23914>  // b.any
   32184:	ldr	x0, [sp, #120]
   32188:	stp	w1, w2, [x0]
   3218c:	b	32010 <ZSTD_compress@@Base+0x237c4>
   32190:	ldr	x0, [sp, #160]
   32194:	mov	x3, x12
   32198:	ldr	x1, [sp, #128]
   3219c:	mov	x2, x21
   321a0:	ldr	x0, [x0, #24]
   321a4:	bl	1fe1c <ZSTD_compress@@Base+0x115d0>
   321a8:	b	320a8 <ZSTD_compress@@Base+0x2385c>
   321ac:	stp	x29, x30, [sp, #-448]!
   321b0:	mov	x29, sp
   321b4:	stp	x19, x20, [sp, #16]
   321b8:	mov	x19, x0
   321bc:	add	x20, x3, x4
   321c0:	add	x0, x0, #0x48
   321c4:	stp	x21, x22, [sp, #32]
   321c8:	str	x0, [sp, #184]
   321cc:	sub	x0, x20, #0x8
   321d0:	ldr	x21, [x19, #8]
   321d4:	str	x0, [sp, #288]
   321d8:	ldr	w0, [x19, #24]
   321dc:	str	x1, [sp, #160]
   321e0:	ldr	w1, [x19, #204]
   321e4:	add	x21, x21, x0
   321e8:	ldr	w0, [x19, #200]
   321ec:	cmp	w1, #0xfff
   321f0:	str	w0, [sp, #192]
   321f4:	stp	x2, x3, [sp, #120]
   321f8:	mov	w3, #0xfff                 	// #4095
   321fc:	csel	w1, w1, w3, ls  // ls = plast
   32200:	mov	w0, w0
   32204:	str	w1, [sp, #336]
   32208:	ldr	w1, [sp, #192]
   3220c:	cmp	w0, #0x3
   32210:	mov	w0, #0x4                   	// #4
   32214:	stp	x23, x24, [sp, #48]
   32218:	csel	w0, w1, w0, eq  // eq = none
   3221c:	str	w0, [sp, #192]
   32220:	mov	x2, x4
   32224:	ldr	w0, [x19, #36]
   32228:	mov	w3, #0x2                   	// #2
   3222c:	str	w0, [sp, #396]
   32230:	ldr	x0, [x19, #112]
   32234:	str	x0, [sp, #112]
   32238:	ldr	x0, [x19, #104]
   3223c:	stp	x25, x26, [sp, #64]
   32240:	stp	x27, x28, [sp, #80]
   32244:	str	x0, [sp, #104]
   32248:	add	x0, x19, #0x48
   3224c:	ldr	x1, [sp, #128]
   32250:	bl	20648 <ZSTD_compress@@Base+0x11dfc>
   32254:	ldr	x0, [sp, #128]
   32258:	cmp	x0, x21
   3225c:	cinc	x21, x0, eq  // eq = none
   32260:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   32264:	add	x0, x0, #0x4c8
   32268:	add	x0, x0, #0x150
   3226c:	str	x0, [sp, #328]
   32270:	ldr	x0, [sp, #288]
   32274:	cmp	x0, x21
   32278:	b.hi	322a0 <ZSTD_compress@@Base+0x23a54>  // b.pmore
   3227c:	ldr	x0, [sp, #128]
   32280:	ldp	x21, x22, [sp, #32]
   32284:	sub	x0, x20, x0
   32288:	ldp	x19, x20, [sp, #16]
   3228c:	ldp	x23, x24, [sp, #48]
   32290:	ldp	x25, x26, [sp, #64]
   32294:	ldp	x27, x28, [sp, #80]
   32298:	ldp	x29, x30, [sp], #448
   3229c:	ret
   322a0:	ldr	x23, [x19, #8]
   322a4:	ldr	w22, [x19, #36]
   322a8:	add	x0, x23, w22, uxtw
   322ac:	cmp	x21, x0
   322b0:	b.cs	322bc <ZSTD_compress@@Base+0x23a70>  // b.hs, b.nlast
   322b4:	add	x21, x21, #0x1
   322b8:	b	32270 <ZSTD_compress@@Base+0x23a24>
   322bc:	sub	x24, x21, x23
   322c0:	ldr	w28, [x19, #200]
   322c4:	add	x27, x19, #0xb8
   322c8:	mov	w25, w24
   322cc:	cmp	w25, w22
   322d0:	b.hi	3254c <ZSTD_compress@@Base+0x23d00>  // b.pmore
   322d4:	ldr	x0, [sp, #128]
   322d8:	mov	w1, #0xfff                 	// #4095
   322dc:	str	w24, [x19, #36]
   322e0:	sub	x0, x21, x0
   322e4:	str	x0, [sp, #232]
   322e8:	ldr	w0, [sp, #232]
   322ec:	str	w0, [sp, #196]
   322f0:	cmp	w0, #0x0
   322f4:	cset	w0, eq  // eq = none
   322f8:	str	w0, [sp, #144]
   322fc:	ldr	w0, [x27, #20]
   32300:	cmp	w0, #0xfff
   32304:	csel	w0, w0, w1, ls  // ls = plast
   32308:	str	w0, [sp, #176]
   3230c:	ldr	x0, [x19, #8]
   32310:	str	x0, [sp, #136]
   32314:	ldr	w1, [x27, #8]
   32318:	cmp	w28, #0x5
   3231c:	sub	x14, x21, x0
   32320:	ldr	x0, [x19, #48]
   32324:	str	x0, [sp, #152]
   32328:	mov	w15, w14
   3232c:	b.eq	32f1c <ZSTD_compress@@Base+0x246d0>  // b.none
   32330:	b.hi	3256c <ZSTD_compress@@Base+0x23d20>  // b.pmore
   32334:	cmp	w28, #0x3
   32338:	b.eq	32854 <ZSTD_compress@@Base+0x24008>  // b.none
   3233c:	mov	x28, x21
   32340:	mov	w22, #0x79b1                	// #31153
   32344:	movk	w22, #0x9e37, lsl #16
   32348:	neg	w1, w1
   3234c:	ldr	x0, [sp, #152]
   32350:	mov	w6, #0x1                   	// #1
   32354:	ldr	w26, [x28], #4
   32358:	ldr	w8, [x19, #24]
   3235c:	ldr	w2, [x19, #184]
   32360:	sub	w9, w8, #0x1
   32364:	mul	w22, w26, w22
   32368:	lsr	w1, w22, w1
   3236c:	ubfiz	x22, x1, #2, #32
   32370:	ldr	w24, [x0, x22]
   32374:	ldr	x0, [x19, #64]
   32378:	str	x0, [sp, #168]
   3237c:	ldr	w0, [x19, #188]
   32380:	sub	w0, w0, #0x1
   32384:	lsl	w0, w6, w0
   32388:	sub	w0, w0, #0x1
   3238c:	str	w0, [sp, #200]
   32390:	ldr	x0, [x19, #16]
   32394:	str	x0, [sp, #208]
   32398:	mov	w0, w8
   3239c:	str	x0, [sp, #248]
   323a0:	ldr	x0, [sp, #208]
   323a4:	ldr	w1, [sp, #200]
   323a8:	add	x0, x0, w8, uxtw
   323ac:	str	x0, [sp, #256]
   323b0:	ldr	x0, [sp, #136]
   323b4:	cmp	w1, w14
   323b8:	mov	w1, w14
   323bc:	add	x0, x0, w8, uxtw
   323c0:	str	x0, [sp, #264]
   323c4:	ldr	w0, [sp, #200]
   323c8:	sub	w0, w14, w0
   323cc:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   323d0:	str	w0, [sp, #272]
   323d4:	mov	x0, x19
   323d8:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   323dc:	cmp	w0, #0x0
   323e0:	mov	w2, #0x4                   	// #4
   323e4:	csel	w1, w0, w6, ne  // ne = any
   323e8:	str	w1, [sp, #280]
   323ec:	ldr	w1, [sp, #200]
   323f0:	sub	w0, w15, w0
   323f4:	ldrb	w23, [sp, #144]
   323f8:	mov	w13, #0x0                   	// #0
   323fc:	and	w18, w1, w14
   32400:	str	w0, [sp, #320]
   32404:	ldr	x1, [sp, #168]
   32408:	ubfiz	x18, x18, #3, #31
   3240c:	add	x1, x1, x18
   32410:	str	x1, [sp, #216]
   32414:	ldr	x1, [sp, #168]
   32418:	add	x18, x18, #0x4
   3241c:	add	x18, x1, x18
   32420:	add	w1, w14, #0x9
   32424:	str	w1, [sp, #224]
   32428:	ldr	w1, [x19, #196]
   3242c:	lsl	w1, w6, w1
   32430:	str	w1, [sp, #240]
   32434:	ldr	w1, [sp, #192]
   32438:	sub	w25, w1, #0x1
   3243c:	ldr	w1, [sp, #144]
   32440:	cmp	w1, #0x0
   32444:	mov	w1, #0x3                   	// #3
   32448:	csel	w1, w2, w1, ne  // ne = any
   3244c:	str	w1, [sp, #296]
   32450:	sub	w1, w15, w8
   32454:	str	w1, [sp, #304]
   32458:	sub	w1, w9, w15
   3245c:	str	w1, [sp, #312]
   32460:	mov	w27, w23
   32464:	cmp	w23, #0x3
   32468:	ldr	x0, [sp, #120]
   3246c:	b.ne	32d5c <ZSTD_compress@@Base+0x24510>  // b.any
   32470:	ldr	w0, [x0]
   32474:	sub	w0, w0, #0x1
   32478:	ldr	w2, [sp, #304]
   3247c:	sub	w1, w0, #0x1
   32480:	cmp	w1, w2
   32484:	b.cs	32d64 <ZSTD_compress@@Base+0x24518>  // b.hs, b.nlast
   32488:	mov	w1, w0
   3248c:	sub	x0, x21, w0, uxtw
   32490:	ldr	w0, [x0]
   32494:	cmp	w26, w0
   32498:	b.ne	32db0 <ZSTD_compress@@Base+0x24564>  // b.any
   3249c:	mov	x0, #0x4                   	// #4
   324a0:	sub	x1, x0, x1
   324a4:	mov	x2, x20
   324a8:	add	x1, x21, x1
   324ac:	mov	x0, x28
   324b0:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   324b4:	add	w0, w0, #0x4
   324b8:	mov	w1, w0
   324bc:	cmp	x25, w0, uxtw
   324c0:	b.cs	32500 <ZSTD_compress@@Base+0x23cb4>  // b.hs, b.nlast
   324c4:	ldr	w4, [sp, #144]
   324c8:	ubfiz	x2, x13, #3, #32
   324cc:	ldr	x3, [sp, #104]
   324d0:	sub	w27, w27, w4
   324d4:	ldr	x4, [sp, #104]
   324d8:	add	x3, x3, x2
   324dc:	add	w13, w13, #0x1
   324e0:	str	w27, [x4, x2]
   324e4:	add	x2, x21, x1
   324e8:	cmp	x2, x20
   324ec:	ldr	w2, [sp, #176]
   324f0:	str	w0, [x3, #4]
   324f4:	ccmp	w0, w2, #0x2, ne  // ne = any
   324f8:	b.hi	32bf0 <ZSTD_compress@@Base+0x243a4>  // b.pmore
   324fc:	mov	x25, x1
   32500:	ldr	w0, [sp, #296]
   32504:	add	x23, x23, #0x1
   32508:	cmp	w0, w23
   3250c:	b.hi	32460 <ZSTD_compress@@Base+0x23c14>  // b.pmore
   32510:	ldr	x0, [sp, #152]
   32514:	add	w15, w15, #0x2
   32518:	mov	x26, #0x0                   	// #0
   3251c:	mov	x27, #0x0                   	// #0
   32520:	str	w14, [x0, x22]
   32524:	ldr	w0, [sp, #240]
   32528:	cbz	w0, 32538 <ZSTD_compress@@Base+0x23cec>
   3252c:	ldr	w0, [sp, #280]
   32530:	cmp	w0, w24
   32534:	b.ls	32db8 <ZSTD_compress@@Base+0x2456c>  // b.plast
   32538:	ldr	x0, [sp, #216]
   3253c:	str	wzr, [x18]
   32540:	str	wzr, [x0]
   32544:	ldr	w0, [sp, #224]
   32548:	b	32be8 <ZSTD_compress@@Base+0x2439c>
   3254c:	add	x1, x23, w22, uxtw
   32550:	mov	w3, w28
   32554:	mov	x2, x20
   32558:	mov	x0, x19
   3255c:	mov	w4, #0x1                   	// #1
   32560:	bl	2012c <ZSTD_compress@@Base+0x118e0>
   32564:	add	w22, w22, w0
   32568:	b	322cc <ZSTD_compress@@Base+0x23a80>
   3256c:	sub	w28, w28, #0x6
   32570:	cmp	w28, #0x1
   32574:	b.hi	3233c <ZSTD_compress@@Base+0x23af0>  // b.pmore
   32578:	mov	w2, #0x6                   	// #6
   3257c:	mov	x0, x21
   32580:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   32584:	lsl	x26, x0, #2
   32588:	ldr	x0, [sp, #152]
   3258c:	mov	w6, #0x1                   	// #1
   32590:	ldr	x24, [x19, #16]
   32594:	add	x28, x21, #0x4
   32598:	ldr	w23, [x0, x26]
   3259c:	ldr	x0, [x19, #64]
   325a0:	str	x0, [sp, #168]
   325a4:	ldr	w0, [x27, #4]
   325a8:	ldr	w7, [x19, #24]
   325ac:	sub	w0, w0, #0x1
   325b0:	ldr	w2, [x19, #184]
   325b4:	sub	w8, w7, #0x1
   325b8:	lsl	w0, w6, w0
   325bc:	sub	w0, w0, #0x1
   325c0:	str	w0, [sp, #200]
   325c4:	mov	w0, w7
   325c8:	str	x0, [sp, #240]
   325cc:	add	x0, x24, w7, uxtw
   325d0:	str	x0, [sp, #248]
   325d4:	ldr	x0, [sp, #136]
   325d8:	ldr	w1, [sp, #200]
   325dc:	add	x0, x0, w7, uxtw
   325e0:	str	x0, [sp, #256]
   325e4:	ldr	w0, [sp, #200]
   325e8:	cmp	w1, w14
   325ec:	mov	w1, w14
   325f0:	sub	w0, w14, w0
   325f4:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   325f8:	str	w0, [sp, #264]
   325fc:	mov	x0, x19
   32600:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   32604:	cmp	w0, #0x0
   32608:	mov	w2, #0x4                   	// #4
   3260c:	csel	w1, w0, w6, ne  // ne = any
   32610:	str	w1, [sp, #272]
   32614:	ldr	w1, [sp, #200]
   32618:	sub	w0, w14, w0
   3261c:	ldrb	w22, [sp, #144]
   32620:	mov	w13, #0x0                   	// #0
   32624:	and	w18, w1, w14
   32628:	str	w0, [sp, #312]
   3262c:	ldr	x1, [sp, #168]
   32630:	ubfiz	x18, x18, #3, #31
   32634:	add	x1, x1, x18
   32638:	str	x1, [sp, #208]
   3263c:	ldr	x1, [sp, #168]
   32640:	add	x18, x18, #0x4
   32644:	add	x18, x1, x18
   32648:	add	w1, w14, #0x9
   3264c:	str	w1, [sp, #216]
   32650:	ldr	w1, [x27, #12]
   32654:	lsl	w1, w6, w1
   32658:	str	w1, [sp, #224]
   3265c:	ldr	w1, [sp, #192]
   32660:	sub	w25, w1, #0x1
   32664:	ldr	w1, [sp, #144]
   32668:	cmp	w1, #0x0
   3266c:	mov	w1, #0x3                   	// #3
   32670:	csel	w1, w2, w1, ne  // ne = any
   32674:	str	w1, [sp, #280]
   32678:	sub	w1, w14, w7
   3267c:	str	w1, [sp, #296]
   32680:	sub	w1, w8, w14
   32684:	str	w1, [sp, #304]
   32688:	mov	w27, w22
   3268c:	cmp	w22, #0x3
   32690:	ldr	x0, [sp, #120]
   32694:	b.ne	332c8 <ZSTD_compress@@Base+0x24a7c>  // b.any
   32698:	ldr	w0, [x0]
   3269c:	sub	w0, w0, #0x1
   326a0:	ldr	w2, [sp, #296]
   326a4:	sub	w1, w0, #0x1
   326a8:	cmp	w1, w2
   326ac:	b.cs	332d0 <ZSTD_compress@@Base+0x24a84>  // b.hs, b.nlast
   326b0:	mov	w1, w0
   326b4:	sub	x0, x21, w0, uxtw
   326b8:	ldr	w2, [x0]
   326bc:	ldr	w0, [x21]
   326c0:	cmp	w2, w0
   326c4:	b.ne	33318 <ZSTD_compress@@Base+0x24acc>  // b.any
   326c8:	mov	x0, #0x4                   	// #4
   326cc:	sub	x1, x0, x1
   326d0:	mov	x2, x20
   326d4:	add	x1, x21, x1
   326d8:	mov	x0, x28
   326dc:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   326e0:	add	w0, w0, #0x4
   326e4:	mov	w1, w0
   326e8:	cmp	x25, w0, uxtw
   326ec:	b.cs	3272c <ZSTD_compress@@Base+0x23ee0>  // b.hs, b.nlast
   326f0:	ldr	w4, [sp, #144]
   326f4:	ubfiz	x2, x13, #3, #32
   326f8:	ldr	x3, [sp, #104]
   326fc:	sub	w27, w27, w4
   32700:	ldr	x4, [sp, #104]
   32704:	add	x3, x3, x2
   32708:	add	w13, w13, #0x1
   3270c:	str	w27, [x4, x2]
   32710:	add	x2, x21, x1
   32714:	cmp	x2, x20
   32718:	ldr	w2, [sp, #176]
   3271c:	str	w0, [x3, #4]
   32720:	ccmp	w0, w2, #0x2, ne  // ne = any
   32724:	b.hi	32bf0 <ZSTD_compress@@Base+0x243a4>  // b.pmore
   32728:	mov	x25, x1
   3272c:	ldr	w0, [sp, #280]
   32730:	add	x22, x22, #0x1
   32734:	cmp	w0, w22
   32738:	b.hi	32688 <ZSTD_compress@@Base+0x23e3c>  // b.pmore
   3273c:	ldr	x0, [sp, #152]
   32740:	mov	x28, #0x0                   	// #0
   32744:	mov	x27, #0x0                   	// #0
   32748:	str	w14, [x0, x26]
   3274c:	add	w0, w15, #0x2
   32750:	str	w0, [sp, #152]
   32754:	ldr	w0, [sp, #224]
   32758:	cbz	w0, 3310c <ZSTD_compress@@Base+0x248c0>
   3275c:	ldr	w0, [sp, #272]
   32760:	cmp	w0, w23
   32764:	b.hi	3310c <ZSTD_compress@@Base+0x248c0>  // b.pmore
   32768:	ldr	w0, [sp, #200]
   3276c:	cmp	x27, x28
   32770:	ldr	x2, [sp, #240]
   32774:	and	w14, w0, w23
   32778:	ldr	x0, [sp, #168]
   3277c:	csel	x22, x27, x28, ls  // ls = plast
   32780:	add	x1, x22, w23, uxtw
   32784:	ubfiz	x14, x14, #3, #31
   32788:	add	x15, x0, x14
   3278c:	mov	w7, w23
   32790:	add	x0, x21, x22
   32794:	cmp	x2, x1
   32798:	b.hi	33320 <ZSTD_compress@@Base+0x24ad4>  // b.pmore
   3279c:	ldr	x1, [sp, #136]
   327a0:	mov	x2, x20
   327a4:	add	x26, x1, x7
   327a8:	add	x1, x26, x22
   327ac:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   327b0:	add	x0, x22, x0
   327b4:	cmp	x25, x0
   327b8:	b.cs	32810 <ZSTD_compress@@Base+0x23fc4>  // b.hs, b.nlast
   327bc:	ldr	w1, [sp, #216]
   327c0:	mov	w3, w0
   327c4:	sub	w1, w1, w23
   327c8:	cmp	x0, x1
   327cc:	b.ls	327d8 <ZSTD_compress@@Base+0x23f8c>  // b.plast
   327d0:	add	w1, w23, w0
   327d4:	str	w1, [sp, #216]
   327d8:	ldr	x2, [sp, #104]
   327dc:	ubfiz	x1, x13, #3, #32
   327e0:	ldr	x5, [sp, #104]
   327e4:	add	x2, x2, x1
   327e8:	ldr	w4, [sp, #152]
   327ec:	cmp	x0, #0x1, lsl #12
   327f0:	add	w13, w13, #0x1
   327f4:	sub	w4, w4, w23
   327f8:	str	w4, [x5, x1]
   327fc:	str	w3, [x2, #4]
   32800:	add	x1, x21, x0
   32804:	ccmp	x1, x20, #0x4, ls  // ls = plast
   32808:	b.eq	3310c <ZSTD_compress@@Base+0x248c0>  // b.none
   3280c:	mov	x25, x0
   32810:	ldrb	w2, [x26, x0]
   32814:	ldrb	w1, [x21, x0]
   32818:	cmp	w2, w1
   3281c:	b.cs	3335c <ZSTD_compress@@Base+0x24b10>  // b.hs, b.nlast
   32820:	ldr	x1, [sp, #208]
   32824:	str	w23, [x1]
   32828:	ldr	w1, [sp, #264]
   3282c:	cmp	w23, w1
   32830:	b.ls	33384 <ZSTD_compress@@Base+0x24b38>  // b.plast
   32834:	ldr	w23, [x15, #4]
   32838:	add	x1, x15, #0x4
   3283c:	str	x1, [sp, #208]
   32840:	ldr	w1, [sp, #224]
   32844:	mov	x27, x0
   32848:	sub	w1, w1, #0x1
   3284c:	str	w1, [sp, #224]
   32850:	b	32754 <ZSTD_compress@@Base+0x23f08>
   32854:	mov	x26, x21
   32858:	mov	w0, #0x79b1                	// #31153
   3285c:	movk	w0, #0x9e37, lsl #16
   32860:	neg	w1, w1
   32864:	mov	w5, #0x1                   	// #1
   32868:	ldr	w24, [x19, #24]
   3286c:	ldr	w25, [x26], #3
   32870:	ldr	w2, [x19, #184]
   32874:	sub	w6, w24, #0x1
   32878:	mul	w0, w25, w0
   3287c:	lsl	w25, w25, #8
   32880:	lsr	w1, w0, w1
   32884:	ubfiz	x0, x1, #2, #32
   32888:	str	x0, [sp, #304]
   3288c:	ldr	x0, [sp, #152]
   32890:	ldr	x1, [sp, #304]
   32894:	ldr	w18, [x0, x1]
   32898:	ldr	x0, [x19, #64]
   3289c:	str	x0, [sp, #200]
   328a0:	ldr	w0, [x27, #4]
   328a4:	sub	w0, w0, #0x1
   328a8:	lsl	w0, w5, w0
   328ac:	sub	w0, w0, #0x1
   328b0:	str	w0, [sp, #208]
   328b4:	ldr	x0, [x19, #16]
   328b8:	str	x0, [sp, #168]
   328bc:	mov	w0, w24
   328c0:	str	x0, [sp, #272]
   328c4:	ldr	x0, [sp, #168]
   328c8:	ldr	w1, [sp, #208]
   328cc:	add	x0, x0, w24, uxtw
   328d0:	str	x0, [sp, #240]
   328d4:	ldr	x0, [sp, #136]
   328d8:	cmp	w1, w14
   328dc:	mov	w1, w14
   328e0:	add	x0, x0, w24, uxtw
   328e4:	str	x0, [sp, #248]
   328e8:	ldr	w0, [sp, #208]
   328ec:	sub	w0, w14, w0
   328f0:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   328f4:	str	w0, [sp, #296]
   328f8:	mov	x0, x19
   328fc:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   32900:	cmp	w0, #0x0
   32904:	ldrb	w22, [sp, #144]
   32908:	csel	w1, w0, w5, ne  // ne = any
   3290c:	str	w1, [sp, #280]
   32910:	ldr	w1, [sp, #208]
   32914:	mov	w3, #0x4                   	// #4
   32918:	ldr	x2, [sp, #200]
   3291c:	and	w1, w1, w14
   32920:	sub	w0, w14, w0
   32924:	mov	w13, #0x0                   	// #0
   32928:	ubfiz	x1, x1, #3, #31
   3292c:	str	w0, [sp, #340]
   32930:	add	x2, x2, x1
   32934:	str	x2, [sp, #216]
   32938:	ldr	x2, [sp, #200]
   3293c:	add	x1, x1, #0x4
   32940:	add	x1, x2, x1
   32944:	str	x1, [sp, #224]
   32948:	add	w1, w14, #0x9
   3294c:	str	w1, [sp, #256]
   32950:	ldr	w1, [x19, #196]
   32954:	lsl	w1, w5, w1
   32958:	str	w1, [sp, #264]
   3295c:	ldr	w1, [sp, #192]
   32960:	sub	w23, w1, #0x1
   32964:	ldr	w1, [sp, #144]
   32968:	cmp	w1, #0x0
   3296c:	sub	w1, w14, w24
   32970:	csel	w28, w3, w28, ne  // ne = any
   32974:	str	w1, [sp, #312]
   32978:	sub	w1, w6, w14
   3297c:	str	w1, [sp, #320]
   32980:	mov	w27, w22
   32984:	cmp	w22, #0x3
   32988:	ldr	x0, [sp, #120]
   3298c:	b.ne	32b28 <ZSTD_compress@@Base+0x242dc>  // b.any
   32990:	ldr	w0, [x0]
   32994:	sub	w0, w0, #0x1
   32998:	ldr	w2, [sp, #312]
   3299c:	sub	w1, w0, #0x1
   329a0:	cmp	w1, w2
   329a4:	b.cs	32b30 <ZSTD_compress@@Base+0x242e4>  // b.hs, b.nlast
   329a8:	mov	w1, w0
   329ac:	sub	x0, x21, w0, uxtw
   329b0:	ldr	w0, [x0]
   329b4:	cmp	w25, w0, lsl #8
   329b8:	b.ne	32b7c <ZSTD_compress@@Base+0x24330>  // b.any
   329bc:	mov	x0, #0x3                   	// #3
   329c0:	sub	x1, x0, x1
   329c4:	mov	x2, x20
   329c8:	add	x1, x21, x1
   329cc:	mov	x0, x26
   329d0:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   329d4:	add	w0, w0, #0x3
   329d8:	mov	w1, w0
   329dc:	cmp	x23, w0, uxtw
   329e0:	b.cs	32a20 <ZSTD_compress@@Base+0x241d4>  // b.hs, b.nlast
   329e4:	ldr	w4, [sp, #144]
   329e8:	ubfiz	x2, x13, #3, #32
   329ec:	ldr	x3, [sp, #104]
   329f0:	sub	w27, w27, w4
   329f4:	ldr	x4, [sp, #104]
   329f8:	add	x3, x3, x2
   329fc:	add	w13, w13, #0x1
   32a00:	str	w27, [x4, x2]
   32a04:	add	x2, x21, x1
   32a08:	cmp	x2, x20
   32a0c:	ldr	w2, [sp, #176]
   32a10:	str	w0, [x3, #4]
   32a14:	ccmp	w0, w2, #0x2, ne  // ne = any
   32a18:	b.hi	32bf0 <ZSTD_compress@@Base+0x243a4>  // b.pmore
   32a1c:	mov	x23, x1
   32a20:	add	x22, x22, #0x1
   32a24:	cmp	w28, w22
   32a28:	b.hi	32980 <ZSTD_compress@@Base+0x24134>  // b.pmore
   32a2c:	cmp	x23, #0x2
   32a30:	b.ne	32ba8 <ZSTD_compress@@Base+0x2435c>  // b.any
   32a34:	add	x1, sp, #0x18c
   32a38:	mov	x2, x21
   32a3c:	mov	x0, x19
   32a40:	bl	1ff88 <ZSTD_compress@@Base+0x1173c>
   32a44:	ldr	w1, [sp, #280]
   32a48:	sub	w22, w14, w0
   32a4c:	cmp	w1, w0
   32a50:	mov	w1, #0x3ffff               	// #262143
   32a54:	ccmp	w22, w1, #0x2, ls  // ls = plast
   32a58:	b.hi	32ba8 <ZSTD_compress@@Base+0x2435c>  // b.pmore
   32a5c:	mov	w1, w0
   32a60:	cmp	w24, w0
   32a64:	b.hi	32b84 <ZSTD_compress@@Base+0x24338>  // b.pmore
   32a68:	ldr	x0, [sp, #136]
   32a6c:	mov	x2, x20
   32a70:	add	x1, x0, x1
   32a74:	mov	x0, x21
   32a78:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   32a7c:	cmp	x0, #0x2
   32a80:	b.ls	32ba8 <ZSTD_compress@@Base+0x2435c>  // b.plast
   32a84:	ldr	x1, [sp, #104]
   32a88:	add	w22, w22, #0x2
   32a8c:	ldr	w2, [sp, #176]
   32a90:	stp	w22, w0, [x1]
   32a94:	add	x1, x21, x0
   32a98:	cmp	x1, x20
   32a9c:	ccmp	x0, x2, #0x2, ne  // ne = any
   32aa0:	b.ls	32ba0 <ZSTD_compress@@Base+0x24354>  // b.plast
   32aa4:	add	w14, w14, #0x1
   32aa8:	mov	w13, #0x1                   	// #1
   32aac:	str	w14, [x19, #36]
   32ab0:	ldp	x1, x0, [sp, #112]
   32ab4:	mov	w3, #0x2                   	// #2
   32ab8:	ldr	x2, [sp, #184]
   32abc:	ldr	w0, [x0]
   32ac0:	str	w0, [x1, #16]
   32ac4:	ldr	x0, [sp, #120]
   32ac8:	ldr	w0, [x0, #4]
   32acc:	str	w0, [x1, #20]
   32ad0:	ldr	x0, [sp, #120]
   32ad4:	ldr	w0, [x0, #8]
   32ad8:	str	w0, [x1, #24]
   32adc:	mov	x0, x1
   32ae0:	ldr	w1, [sp, #232]
   32ae4:	stp	wzr, w1, [x0, #8]
   32ae8:	ldr	x0, [sp, #128]
   32aec:	bl	204f4 <ZSTD_compress@@Base+0x11ca8>
   32af0:	mov	w6, w0
   32af4:	ldp	x1, x0, [sp, #104]
   32af8:	str	w6, [x0]
   32afc:	sub	w0, w13, #0x1
   32b00:	lsl	x2, x0, #3
   32b04:	add	x0, x1, x0, lsl #3
   32b08:	ldr	w1, [x0, #4]
   32b0c:	ldr	w0, [sp, #336]
   32b10:	cmp	w0, w1
   32b14:	b.cs	33398 <ZSTD_compress@@Base+0x24b4c>  // b.hs, b.nlast
   32b18:	ldr	x0, [sp, #104]
   32b1c:	ldr	w2, [x0, x2]
   32b20:	mov	w0, #0x0                   	// #0
   32b24:	b	3358c <ZSTD_compress@@Base+0x24d40>
   32b28:	ldr	w0, [x0, x22, lsl #2]
   32b2c:	b	32998 <ZSTD_compress@@Base+0x2414c>
   32b30:	ldr	w2, [sp, #320]
   32b34:	add	w2, w2, w0
   32b38:	cmp	w2, #0x2
   32b3c:	ldr	w2, [sp, #340]
   32b40:	ccmp	w1, w2, #0x2, hi  // hi = pmore
   32b44:	b.cs	32b7c <ZSTD_compress@@Base+0x24330>  // b.hs, b.nlast
   32b48:	ldr	x2, [sp, #168]
   32b4c:	sub	w0, w15, w0
   32b50:	ldr	x1, [sp, #168]
   32b54:	add	x1, x1, x0
   32b58:	ldr	w0, [x2, x0]
   32b5c:	cmp	w25, w0, lsl #8
   32b60:	b.ne	32b7c <ZSTD_compress@@Base+0x24330>  // b.any
   32b64:	ldp	x3, x4, [sp, #240]
   32b68:	mov	x2, x20
   32b6c:	add	x1, x1, #0x3
   32b70:	mov	x0, x26
   32b74:	bl	200cc <ZSTD_compress@@Base+0x11880>
   32b78:	b	329d4 <ZSTD_compress@@Base+0x24188>
   32b7c:	mov	w0, #0x0                   	// #0
   32b80:	b	329d8 <ZSTD_compress@@Base+0x2418c>
   32b84:	ldp	x3, x4, [sp, #240]
   32b88:	mov	x2, x20
   32b8c:	ldr	x0, [sp, #168]
   32b90:	add	x1, x0, x1
   32b94:	mov	x0, x21
   32b98:	bl	200cc <ZSTD_compress@@Base+0x11880>
   32b9c:	b	32a7c <ZSTD_compress@@Base+0x24230>
   32ba0:	mov	x23, x0
   32ba4:	mov	w13, #0x1                   	// #1
   32ba8:	ldr	x0, [sp, #152]
   32bac:	add	w15, w15, #0x2
   32bb0:	ldr	x1, [sp, #304]
   32bb4:	mov	x27, #0x0                   	// #0
   32bb8:	mov	x25, #0x0                   	// #0
   32bbc:	str	w14, [x0, x1]
   32bc0:	ldr	w0, [sp, #264]
   32bc4:	cbz	w0, 32bd4 <ZSTD_compress@@Base+0x24388>
   32bc8:	ldr	w0, [sp, #280]
   32bcc:	cmp	w0, w18
   32bd0:	b.ls	32bf8 <ZSTD_compress@@Base+0x243ac>  // b.plast
   32bd4:	ldr	x0, [sp, #224]
   32bd8:	str	wzr, [x0]
   32bdc:	ldr	x0, [sp, #216]
   32be0:	str	wzr, [x0]
   32be4:	ldr	w0, [sp, #256]
   32be8:	sub	w0, w0, #0x8
   32bec:	str	w0, [x19, #36]
   32bf0:	cbz	w13, 322b4 <ZSTD_compress@@Base+0x23a68>
   32bf4:	b	32ab0 <ZSTD_compress@@Base+0x24264>
   32bf8:	ldr	w0, [sp, #208]
   32bfc:	cmp	x25, x27
   32c00:	ldr	x2, [sp, #272]
   32c04:	and	w14, w0, w18
   32c08:	ldr	x0, [sp, #200]
   32c0c:	csel	x22, x25, x27, ls  // ls = plast
   32c10:	add	x1, x22, w18, uxtw
   32c14:	ubfiz	x14, x14, #3, #31
   32c18:	add	x28, x0, x14
   32c1c:	mov	w26, w18
   32c20:	add	x0, x21, x22
   32c24:	cmp	x2, x1
   32c28:	b.hi	32ce0 <ZSTD_compress@@Base+0x24494>  // b.pmore
   32c2c:	ldr	x1, [sp, #136]
   32c30:	mov	x2, x20
   32c34:	add	x24, x1, x26
   32c38:	add	x1, x24, x22
   32c3c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   32c40:	add	x0, x22, x0
   32c44:	cmp	x23, x0
   32c48:	b.cs	32c9c <ZSTD_compress@@Base+0x24450>  // b.hs, b.nlast
   32c4c:	ldr	w1, [sp, #256]
   32c50:	mov	w3, w0
   32c54:	sub	w1, w1, w18
   32c58:	cmp	x0, x1
   32c5c:	b.ls	32c68 <ZSTD_compress@@Base+0x2441c>  // b.plast
   32c60:	add	w1, w18, w0
   32c64:	str	w1, [sp, #256]
   32c68:	ldr	x2, [sp, #104]
   32c6c:	ubfiz	x1, x13, #3, #32
   32c70:	ldr	x5, [sp, #104]
   32c74:	add	x2, x2, x1
   32c78:	sub	w4, w15, w18
   32c7c:	cmp	x0, #0x1, lsl #12
   32c80:	add	w13, w13, #0x1
   32c84:	str	w4, [x5, x1]
   32c88:	add	x1, x21, x0
   32c8c:	str	w3, [x2, #4]
   32c90:	ccmp	x1, x20, #0x4, ls  // ls = plast
   32c94:	b.eq	32bd4 <ZSTD_compress@@Base+0x24388>  // b.none
   32c98:	mov	x23, x0
   32c9c:	ldrb	w2, [x24, x0]
   32ca0:	ldrb	w1, [x21, x0]
   32ca4:	cmp	w2, w1
   32ca8:	b.cs	32d18 <ZSTD_compress@@Base+0x244cc>  // b.hs, b.nlast
   32cac:	ldr	x1, [sp, #216]
   32cb0:	str	w18, [x1]
   32cb4:	ldr	w1, [sp, #296]
   32cb8:	cmp	w18, w1
   32cbc:	b.ls	32d44 <ZSTD_compress@@Base+0x244f8>  // b.plast
   32cc0:	ldr	w18, [x28, #4]
   32cc4:	add	x1, x28, #0x4
   32cc8:	str	x1, [sp, #216]
   32ccc:	ldr	w1, [sp, #264]
   32cd0:	mov	x25, x0
   32cd4:	sub	w1, w1, #0x1
   32cd8:	str	w1, [sp, #264]
   32cdc:	b	32bc0 <ZSTD_compress@@Base+0x24374>
   32ce0:	ldp	x3, x4, [sp, #240]
   32ce4:	mov	x2, x20
   32ce8:	ldr	x1, [sp, #168]
   32cec:	add	x24, x1, x26
   32cf0:	add	x1, x24, x22
   32cf4:	bl	200cc <ZSTD_compress@@Base+0x11880>
   32cf8:	ldr	x2, [sp, #272]
   32cfc:	add	x0, x22, x0
   32d00:	add	x1, x26, x0
   32d04:	cmp	x2, x1
   32d08:	b.hi	32c44 <ZSTD_compress@@Base+0x243f8>  // b.pmore
   32d0c:	ldr	x1, [sp, #136]
   32d10:	add	x24, x1, x26
   32d14:	b	32c44 <ZSTD_compress@@Base+0x243f8>
   32d18:	ldr	x1, [sp, #224]
   32d1c:	str	w18, [x1]
   32d20:	ldr	w1, [sp, #296]
   32d24:	cmp	w18, w1
   32d28:	b.ls	32d50 <ZSTD_compress@@Base+0x24504>  // b.plast
   32d2c:	ldr	x1, [sp, #200]
   32d30:	mov	x27, x0
   32d34:	mov	x0, x25
   32d38:	str	x28, [sp, #224]
   32d3c:	ldr	w18, [x1, x14]
   32d40:	b	32ccc <ZSTD_compress@@Base+0x24480>
   32d44:	add	x0, sp, #0x190
   32d48:	str	x0, [sp, #216]
   32d4c:	b	32bd4 <ZSTD_compress@@Base+0x24388>
   32d50:	add	x0, sp, #0x190
   32d54:	str	x0, [sp, #224]
   32d58:	b	32bd4 <ZSTD_compress@@Base+0x24388>
   32d5c:	ldr	w0, [x0, x23, lsl #2]
   32d60:	b	32478 <ZSTD_compress@@Base+0x23c2c>
   32d64:	ldr	w2, [sp, #312]
   32d68:	add	w2, w2, w0
   32d6c:	cmp	w2, #0x2
   32d70:	ldr	w2, [sp, #320]
   32d74:	ccmp	w1, w2, #0x2, hi  // hi = pmore
   32d78:	b.cs	32db0 <ZSTD_compress@@Base+0x24564>  // b.hs, b.nlast
   32d7c:	ldr	x2, [sp, #208]
   32d80:	sub	w0, w15, w0
   32d84:	ldr	x1, [sp, #208]
   32d88:	add	x1, x1, x0
   32d8c:	ldr	w0, [x2, x0]
   32d90:	cmp	w26, w0
   32d94:	b.ne	32db0 <ZSTD_compress@@Base+0x24564>  // b.any
   32d98:	ldp	x3, x4, [sp, #256]
   32d9c:	mov	x2, x20
   32da0:	add	x1, x1, #0x4
   32da4:	mov	x0, x28
   32da8:	bl	200cc <ZSTD_compress@@Base+0x11880>
   32dac:	b	324b4 <ZSTD_compress@@Base+0x23c68>
   32db0:	mov	w0, #0x0                   	// #0
   32db4:	b	324b8 <ZSTD_compress@@Base+0x23c6c>
   32db8:	ldr	w0, [sp, #200]
   32dbc:	cmp	x27, x26
   32dc0:	ldr	x2, [sp, #248]
   32dc4:	and	w14, w0, w24
   32dc8:	ldr	x0, [sp, #168]
   32dcc:	csel	x22, x27, x26, ls  // ls = plast
   32dd0:	add	x1, x22, w24, uxtw
   32dd4:	ubfiz	x14, x14, #3, #31
   32dd8:	add	x28, x0, x14
   32ddc:	mov	w6, w24
   32de0:	add	x0, x21, x22
   32de4:	cmp	x2, x1
   32de8:	b.hi	32ea8 <ZSTD_compress@@Base+0x2465c>  // b.pmore
   32dec:	ldr	x1, [sp, #136]
   32df0:	mov	x2, x20
   32df4:	add	x23, x1, x6
   32df8:	add	x1, x23, x22
   32dfc:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   32e00:	add	x0, x22, x0
   32e04:	cmp	x25, x0
   32e08:	b.cs	32e5c <ZSTD_compress@@Base+0x24610>  // b.hs, b.nlast
   32e0c:	ldr	w1, [sp, #224]
   32e10:	mov	w3, w0
   32e14:	sub	w1, w1, w24
   32e18:	cmp	x0, x1
   32e1c:	b.ls	32e28 <ZSTD_compress@@Base+0x245dc>  // b.plast
   32e20:	add	w1, w24, w0
   32e24:	str	w1, [sp, #224]
   32e28:	ldr	x2, [sp, #104]
   32e2c:	ubfiz	x1, x13, #3, #32
   32e30:	ldr	x5, [sp, #104]
   32e34:	add	x2, x2, x1
   32e38:	sub	w4, w15, w24
   32e3c:	cmp	x0, #0x1, lsl #12
   32e40:	add	w13, w13, #0x1
   32e44:	str	w4, [x5, x1]
   32e48:	add	x1, x21, x0
   32e4c:	str	w3, [x2, #4]
   32e50:	ccmp	x1, x20, #0x4, ls  // ls = plast
   32e54:	b.eq	32538 <ZSTD_compress@@Base+0x23cec>  // b.none
   32e58:	mov	x25, x0
   32e5c:	ldrb	w2, [x23, x0]
   32e60:	ldrb	w1, [x21, x0]
   32e64:	cmp	w2, w1
   32e68:	b.cs	32ee8 <ZSTD_compress@@Base+0x2469c>  // b.hs, b.nlast
   32e6c:	ldr	x1, [sp, #216]
   32e70:	str	w24, [x1]
   32e74:	ldr	w1, [sp, #272]
   32e78:	cmp	w24, w1
   32e7c:	b.ls	32f08 <ZSTD_compress@@Base+0x246bc>  // b.plast
   32e80:	ldr	w24, [x28, #4]
   32e84:	mov	x27, x0
   32e88:	mov	x0, x26
   32e8c:	add	x1, x28, #0x4
   32e90:	str	x1, [sp, #216]
   32e94:	ldr	w1, [sp, #240]
   32e98:	mov	x26, x0
   32e9c:	sub	w1, w1, #0x1
   32ea0:	str	w1, [sp, #240]
   32ea4:	b	32524 <ZSTD_compress@@Base+0x23cd8>
   32ea8:	ldp	x3, x4, [sp, #256]
   32eac:	mov	x2, x20
   32eb0:	ldr	x1, [sp, #208]
   32eb4:	str	x6, [sp, #152]
   32eb8:	add	x23, x1, x6
   32ebc:	add	x1, x23, x22
   32ec0:	bl	200cc <ZSTD_compress@@Base+0x11880>
   32ec4:	ldr	x6, [sp, #152]
   32ec8:	add	x0, x22, x0
   32ecc:	ldr	x2, [sp, #248]
   32ed0:	add	x1, x6, x0
   32ed4:	cmp	x2, x1
   32ed8:	b.hi	32e04 <ZSTD_compress@@Base+0x245b8>  // b.pmore
   32edc:	ldr	x1, [sp, #136]
   32ee0:	add	x23, x1, x6
   32ee4:	b	32e04 <ZSTD_compress@@Base+0x245b8>
   32ee8:	ldr	w1, [sp, #272]
   32eec:	str	w24, [x18]
   32ef0:	cmp	w24, w1
   32ef4:	b.ls	32f14 <ZSTD_compress@@Base+0x246c8>  // b.plast
   32ef8:	ldr	x1, [sp, #168]
   32efc:	mov	x18, x28
   32f00:	ldr	w24, [x1, x14]
   32f04:	b	32e94 <ZSTD_compress@@Base+0x24648>
   32f08:	add	x0, sp, #0x190
   32f0c:	str	x0, [sp, #216]
   32f10:	b	32538 <ZSTD_compress@@Base+0x23cec>
   32f14:	add	x18, sp, #0x190
   32f18:	b	32538 <ZSTD_compress@@Base+0x23cec>
   32f1c:	mov	w2, w28
   32f20:	mov	x0, x21
   32f24:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   32f28:	lsl	x26, x0, #2
   32f2c:	ldr	x0, [sp, #152]
   32f30:	mov	w6, #0x1                   	// #1
   32f34:	ldr	x24, [x19, #16]
   32f38:	add	x28, x21, #0x4
   32f3c:	ldr	w23, [x0, x26]
   32f40:	ldr	x0, [x19, #64]
   32f44:	str	x0, [sp, #168]
   32f48:	ldr	w0, [x27, #4]
   32f4c:	ldr	w7, [x19, #24]
   32f50:	sub	w0, w0, #0x1
   32f54:	ldr	w2, [x19, #184]
   32f58:	sub	w8, w7, #0x1
   32f5c:	lsl	w0, w6, w0
   32f60:	sub	w0, w0, #0x1
   32f64:	str	w0, [sp, #200]
   32f68:	mov	w0, w7
   32f6c:	str	x0, [sp, #240]
   32f70:	add	x0, x24, w7, uxtw
   32f74:	str	x0, [sp, #248]
   32f78:	ldr	x0, [sp, #136]
   32f7c:	ldr	w1, [sp, #200]
   32f80:	add	x0, x0, w7, uxtw
   32f84:	str	x0, [sp, #256]
   32f88:	ldr	w0, [sp, #200]
   32f8c:	cmp	w1, w14
   32f90:	mov	w1, w14
   32f94:	sub	w0, w14, w0
   32f98:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   32f9c:	str	w0, [sp, #264]
   32fa0:	mov	x0, x19
   32fa4:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   32fa8:	cmp	w0, #0x0
   32fac:	mov	w2, #0x4                   	// #4
   32fb0:	csel	w1, w0, w6, ne  // ne = any
   32fb4:	str	w1, [sp, #272]
   32fb8:	ldr	w1, [sp, #200]
   32fbc:	sub	w0, w14, w0
   32fc0:	ldrb	w22, [sp, #144]
   32fc4:	mov	w13, #0x0                   	// #0
   32fc8:	and	w18, w1, w14
   32fcc:	str	w0, [sp, #312]
   32fd0:	ldr	x1, [sp, #168]
   32fd4:	ubfiz	x18, x18, #3, #31
   32fd8:	add	x1, x1, x18
   32fdc:	str	x1, [sp, #208]
   32fe0:	ldr	x1, [sp, #168]
   32fe4:	add	x18, x18, #0x4
   32fe8:	add	x18, x1, x18
   32fec:	add	w1, w14, #0x9
   32ff0:	str	w1, [sp, #216]
   32ff4:	ldr	w1, [x27, #12]
   32ff8:	lsl	w1, w6, w1
   32ffc:	str	w1, [sp, #224]
   33000:	ldr	w1, [sp, #192]
   33004:	sub	w25, w1, #0x1
   33008:	ldr	w1, [sp, #144]
   3300c:	cmp	w1, #0x0
   33010:	mov	w1, #0x3                   	// #3
   33014:	csel	w1, w2, w1, ne  // ne = any
   33018:	str	w1, [sp, #280]
   3301c:	sub	w1, w14, w7
   33020:	str	w1, [sp, #296]
   33024:	sub	w1, w8, w14
   33028:	str	w1, [sp, #304]
   3302c:	mov	w27, w22
   33030:	cmp	w22, #0x3
   33034:	ldr	x0, [sp, #120]
   33038:	b.ne	33120 <ZSTD_compress@@Base+0x248d4>  // b.any
   3303c:	ldr	w0, [x0]
   33040:	sub	w0, w0, #0x1
   33044:	ldr	w2, [sp, #296]
   33048:	sub	w1, w0, #0x1
   3304c:	cmp	w1, w2
   33050:	b.cs	33128 <ZSTD_compress@@Base+0x248dc>  // b.hs, b.nlast
   33054:	mov	w1, w0
   33058:	sub	x0, x21, w0, uxtw
   3305c:	ldr	w2, [x0]
   33060:	ldr	w0, [x21]
   33064:	cmp	w2, w0
   33068:	b.ne	33170 <ZSTD_compress@@Base+0x24924>  // b.any
   3306c:	mov	x0, #0x4                   	// #4
   33070:	sub	x1, x0, x1
   33074:	mov	x2, x20
   33078:	add	x1, x21, x1
   3307c:	mov	x0, x28
   33080:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   33084:	add	w0, w0, #0x4
   33088:	mov	w1, w0
   3308c:	cmp	x25, w0, uxtw
   33090:	b.cs	330d0 <ZSTD_compress@@Base+0x24884>  // b.hs, b.nlast
   33094:	ldr	w4, [sp, #144]
   33098:	ubfiz	x2, x13, #3, #32
   3309c:	ldr	x3, [sp, #104]
   330a0:	sub	w27, w27, w4
   330a4:	ldr	x4, [sp, #104]
   330a8:	add	x3, x3, x2
   330ac:	add	w13, w13, #0x1
   330b0:	str	w27, [x4, x2]
   330b4:	add	x2, x21, x1
   330b8:	cmp	x2, x20
   330bc:	ldr	w2, [sp, #176]
   330c0:	str	w0, [x3, #4]
   330c4:	ccmp	w0, w2, #0x2, ne  // ne = any
   330c8:	b.hi	32bf0 <ZSTD_compress@@Base+0x243a4>  // b.pmore
   330cc:	mov	x25, x1
   330d0:	ldr	w0, [sp, #280]
   330d4:	add	x22, x22, #0x1
   330d8:	cmp	w0, w22
   330dc:	b.hi	3302c <ZSTD_compress@@Base+0x247e0>  // b.pmore
   330e0:	ldr	x0, [sp, #152]
   330e4:	mov	x28, #0x0                   	// #0
   330e8:	mov	x27, #0x0                   	// #0
   330ec:	str	w14, [x0, x26]
   330f0:	add	w0, w15, #0x2
   330f4:	str	w0, [sp, #152]
   330f8:	ldr	w0, [sp, #224]
   330fc:	cbz	w0, 3310c <ZSTD_compress@@Base+0x248c0>
   33100:	ldr	w0, [sp, #272]
   33104:	cmp	w0, w23
   33108:	b.ls	33178 <ZSTD_compress@@Base+0x2492c>  // b.plast
   3310c:	ldr	x0, [sp, #208]
   33110:	str	wzr, [x18]
   33114:	str	wzr, [x0]
   33118:	ldr	w0, [sp, #216]
   3311c:	b	32be8 <ZSTD_compress@@Base+0x2439c>
   33120:	ldr	w0, [x0, x22, lsl #2]
   33124:	b	33044 <ZSTD_compress@@Base+0x247f8>
   33128:	ldr	w2, [sp, #304]
   3312c:	add	w2, w2, w0
   33130:	cmp	w2, #0x2
   33134:	ldr	w2, [sp, #312]
   33138:	ccmp	w1, w2, #0x2, hi  // hi = pmore
   3313c:	b.cs	33170 <ZSTD_compress@@Base+0x24924>  // b.hs, b.nlast
   33140:	sub	w0, w15, w0
   33144:	add	x1, x24, x0
   33148:	ldr	w2, [x24, x0]
   3314c:	ldr	w0, [x21]
   33150:	cmp	w2, w0
   33154:	b.ne	33170 <ZSTD_compress@@Base+0x24924>  // b.any
   33158:	ldp	x3, x4, [sp, #248]
   3315c:	mov	x2, x20
   33160:	add	x1, x1, #0x4
   33164:	mov	x0, x28
   33168:	bl	200cc <ZSTD_compress@@Base+0x11880>
   3316c:	b	33084 <ZSTD_compress@@Base+0x24838>
   33170:	mov	w0, #0x0                   	// #0
   33174:	b	33088 <ZSTD_compress@@Base+0x2483c>
   33178:	ldr	w0, [sp, #200]
   3317c:	cmp	x27, x28
   33180:	ldr	x2, [sp, #240]
   33184:	and	w14, w0, w23
   33188:	ldr	x0, [sp, #168]
   3318c:	csel	x22, x27, x28, ls  // ls = plast
   33190:	add	x1, x22, w23, uxtw
   33194:	ubfiz	x14, x14, #3, #31
   33198:	add	x15, x0, x14
   3319c:	mov	w7, w23
   331a0:	add	x0, x21, x22
   331a4:	cmp	x2, x1
   331a8:	b.hi	33264 <ZSTD_compress@@Base+0x24a18>  // b.pmore
   331ac:	ldr	x1, [sp, #136]
   331b0:	mov	x2, x20
   331b4:	add	x26, x1, x7
   331b8:	add	x1, x26, x22
   331bc:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   331c0:	add	x0, x22, x0
   331c4:	cmp	x25, x0
   331c8:	b.cs	33220 <ZSTD_compress@@Base+0x249d4>  // b.hs, b.nlast
   331cc:	ldr	w1, [sp, #216]
   331d0:	mov	w3, w0
   331d4:	sub	w1, w1, w23
   331d8:	cmp	x0, x1
   331dc:	b.ls	331e8 <ZSTD_compress@@Base+0x2499c>  // b.plast
   331e0:	add	w1, w23, w0
   331e4:	str	w1, [sp, #216]
   331e8:	ldr	x2, [sp, #104]
   331ec:	ubfiz	x1, x13, #3, #32
   331f0:	ldr	x5, [sp, #104]
   331f4:	add	x2, x2, x1
   331f8:	ldr	w4, [sp, #152]
   331fc:	cmp	x0, #0x1, lsl #12
   33200:	add	w13, w13, #0x1
   33204:	sub	w4, w4, w23
   33208:	str	w4, [x5, x1]
   3320c:	str	w3, [x2, #4]
   33210:	add	x1, x21, x0
   33214:	ccmp	x1, x20, #0x4, ls  // ls = plast
   33218:	b.eq	3310c <ZSTD_compress@@Base+0x248c0>  // b.none
   3321c:	mov	x25, x0
   33220:	ldrb	w2, [x26, x0]
   33224:	ldrb	w1, [x21, x0]
   33228:	cmp	w2, w1
   3322c:	b.cs	332a0 <ZSTD_compress@@Base+0x24a54>  // b.hs, b.nlast
   33230:	ldr	x1, [sp, #208]
   33234:	str	w23, [x1]
   33238:	ldr	w1, [sp, #264]
   3323c:	cmp	w23, w1
   33240:	b.ls	33384 <ZSTD_compress@@Base+0x24b38>  // b.plast
   33244:	ldr	w23, [x15, #4]
   33248:	add	x1, x15, #0x4
   3324c:	str	x1, [sp, #208]
   33250:	ldr	w1, [sp, #224]
   33254:	mov	x27, x0
   33258:	sub	w1, w1, #0x1
   3325c:	str	w1, [sp, #224]
   33260:	b	330f8 <ZSTD_compress@@Base+0x248ac>
   33264:	ldp	x3, x4, [sp, #248]
   33268:	add	x26, x24, x7
   3326c:	mov	x2, x20
   33270:	add	x1, x26, x22
   33274:	str	x7, [sp, #176]
   33278:	bl	200cc <ZSTD_compress@@Base+0x11880>
   3327c:	add	x0, x22, x0
   33280:	ldr	x7, [sp, #176]
   33284:	ldr	x2, [sp, #240]
   33288:	add	x1, x7, x0
   3328c:	cmp	x2, x1
   33290:	b.hi	331c4 <ZSTD_compress@@Base+0x24978>  // b.pmore
   33294:	ldr	x1, [sp, #136]
   33298:	add	x26, x1, x7
   3329c:	b	331c4 <ZSTD_compress@@Base+0x24978>
   332a0:	ldr	w1, [sp, #264]
   332a4:	str	w23, [x18]
   332a8:	cmp	w23, w1
   332ac:	b.ls	33390 <ZSTD_compress@@Base+0x24b44>  // b.plast
   332b0:	ldr	x1, [sp, #168]
   332b4:	mov	x28, x0
   332b8:	mov	x18, x15
   332bc:	mov	x0, x27
   332c0:	ldr	w23, [x1, x14]
   332c4:	b	33250 <ZSTD_compress@@Base+0x24a04>
   332c8:	ldr	w0, [x0, x22, lsl #2]
   332cc:	b	326a0 <ZSTD_compress@@Base+0x23e54>
   332d0:	ldr	w2, [sp, #304]
   332d4:	add	w2, w2, w0
   332d8:	cmp	w2, #0x2
   332dc:	ldr	w2, [sp, #312]
   332e0:	ccmp	w1, w2, #0x2, hi  // hi = pmore
   332e4:	b.cs	33318 <ZSTD_compress@@Base+0x24acc>  // b.hs, b.nlast
   332e8:	sub	w0, w15, w0
   332ec:	add	x1, x24, x0
   332f0:	ldr	w2, [x24, x0]
   332f4:	ldr	w0, [x21]
   332f8:	cmp	w2, w0
   332fc:	b.ne	33318 <ZSTD_compress@@Base+0x24acc>  // b.any
   33300:	ldp	x3, x4, [sp, #248]
   33304:	mov	x2, x20
   33308:	add	x1, x1, #0x4
   3330c:	mov	x0, x28
   33310:	bl	200cc <ZSTD_compress@@Base+0x11880>
   33314:	b	326e0 <ZSTD_compress@@Base+0x23e94>
   33318:	mov	w0, #0x0                   	// #0
   3331c:	b	326e4 <ZSTD_compress@@Base+0x23e98>
   33320:	ldp	x3, x4, [sp, #248]
   33324:	add	x26, x24, x7
   33328:	mov	x2, x20
   3332c:	add	x1, x26, x22
   33330:	str	x7, [sp, #176]
   33334:	bl	200cc <ZSTD_compress@@Base+0x11880>
   33338:	add	x0, x22, x0
   3333c:	ldr	x7, [sp, #176]
   33340:	ldr	x2, [sp, #240]
   33344:	add	x1, x7, x0
   33348:	cmp	x2, x1
   3334c:	b.hi	327b4 <ZSTD_compress@@Base+0x23f68>  // b.pmore
   33350:	ldr	x1, [sp, #136]
   33354:	add	x26, x1, x7
   33358:	b	327b4 <ZSTD_compress@@Base+0x23f68>
   3335c:	ldr	w1, [sp, #264]
   33360:	str	w23, [x18]
   33364:	cmp	w23, w1
   33368:	b.ls	33390 <ZSTD_compress@@Base+0x24b44>  // b.plast
   3336c:	ldr	x1, [sp, #168]
   33370:	mov	x28, x0
   33374:	mov	x18, x15
   33378:	mov	x0, x27
   3337c:	ldr	w23, [x1, x14]
   33380:	b	32840 <ZSTD_compress@@Base+0x23ff4>
   33384:	add	x0, sp, #0x190
   33388:	str	x0, [sp, #208]
   3338c:	b	3310c <ZSTD_compress@@Base+0x248c0>
   33390:	add	x18, sp, #0x190
   33394:	b	3310c <ZSTD_compress@@Base+0x248c0>
   33398:	ldr	x1, [sp, #184]
   3339c:	mov	w2, #0x2                   	// #2
   333a0:	mov	w0, #0x0                   	// #0
   333a4:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   333a8:	add	w6, w6, w0
   333ac:	ldr	x1, [sp, #112]
   333b0:	mov	w0, #0x40000000            	// #1073741824
   333b4:	str	w0, [x1, #28]
   333b8:	str	w0, [x1, #56]
   333bc:	ldr	w1, [sp, #192]
   333c0:	cmp	w1, #0x4
   333c4:	b.ne	333d0 <ZSTD_compress@@Base+0x24b84>  // b.any
   333c8:	ldr	x1, [sp, #112]
   333cc:	str	w0, [x1, #84]
   333d0:	ldr	w5, [sp, #192]
   333d4:	mov	w8, #0x0                   	// #0
   333d8:	ldr	x7, [sp, #104]
   333dc:	mov	w10, #0x1c                  	// #28
   333e0:	ldp	w9, w11, [x7]
   333e4:	ldr	w2, [sp, #144]
   333e8:	ldr	x0, [sp, #120]
   333ec:	mov	w1, w9
   333f0:	bl	205a8 <ZSTD_compress@@Base+0x11d5c>
   333f4:	add	w2, w9, #0x1
   333f8:	clz	w2, w2
   333fc:	str	w0, [sp, #400]
   33400:	eor	w2, w2, #0x1f
   33404:	lsr	x0, x0, #32
   33408:	add	w3, w2, #0x10
   3340c:	str	w0, [sp, #404]
   33410:	sbfiz	x4, x2, #2, #32
   33414:	str	w1, [sp, #408]
   33418:	lsl	w3, w3, #8
   3341c:	cmp	w11, w5
   33420:	b.cs	33634 <ZSTD_compress@@Base+0x24de8>  // b.hs, b.nlast
   33424:	add	w8, w8, #0x1
   33428:	add	x7, x7, #0x8
   3342c:	cmp	w13, w8
   33430:	b.ne	333e0 <ZSTD_compress@@Base+0x24b94>  // b.any
   33434:	sub	w0, w5, #0x1
   33438:	str	w0, [sp, #176]
   3343c:	mov	w0, #0x1                   	// #1
   33440:	str	w0, [sp, #168]
   33444:	ldr	w1, [sp, #176]
   33448:	ldr	w0, [sp, #168]
   3344c:	cmp	w0, w1
   33450:	b.hi	3353c <ZSTD_compress@@Base+0x24cf0>  // b.pmore
   33454:	ldr	w0, [sp, #168]
   33458:	mov	w1, #0x1c                  	// #28
   3345c:	sub	w9, w0, #0x1
   33460:	add	x22, x21, w0, uxtw
   33464:	umull	x9, w9, w1
   33468:	ldr	x1, [sp, #112]
   3346c:	add	x8, x1, x9
   33470:	ldr	w1, [x8, #8]
   33474:	cbnz	w1, 336e4 <ZSTD_compress@@Base+0x24e98>
   33478:	ldr	w7, [x8, #12]
   3347c:	add	w7, w7, #0x1
   33480:	ldr	x2, [sp, #184]
   33484:	sub	x0, x0, #0x1
   33488:	mov	w3, #0x2                   	// #2
   3348c:	mov	w1, #0x1                   	// #1
   33490:	add	x0, x21, x0
   33494:	bl	20464 <ZSTD_compress@@Base+0x11c18>
   33498:	mov	w5, w0
   3349c:	ldr	x1, [sp, #184]
   334a0:	mov	w0, w7
   334a4:	mov	w2, #0x2                   	// #2
   334a8:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   334ac:	add	w5, w5, w0
   334b0:	ldr	x1, [sp, #184]
   334b4:	mov	w2, #0x2                   	// #2
   334b8:	sub	w0, w7, #0x1
   334bc:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   334c0:	ldr	x1, [sp, #112]
   334c4:	ldr	w2, [sp, #168]
   334c8:	ldr	w1, [x1, x9]
   334cc:	sub	w0, w1, w0
   334d0:	mov	w1, #0x1c                  	// #28
   334d4:	add	w0, w0, w5
   334d8:	umull	x1, w2, w1
   334dc:	ldr	x2, [sp, #112]
   334e0:	add	x2, x2, x1
   334e4:	str	x2, [sp, #136]
   334e8:	ldr	x2, [sp, #112]
   334ec:	ldr	w2, [x2, x1]
   334f0:	cmp	w0, w2
   334f4:	b.gt	33520 <ZSTD_compress@@Base+0x24cd4>
   334f8:	ldr	x2, [sp, #136]
   334fc:	stur	xzr, [x2, #4]
   33500:	str	w7, [x2, #12]
   33504:	ldr	x2, [sp, #112]
   33508:	str	w0, [x2, x1]
   3350c:	ldr	x2, [sp, #136]
   33510:	ldr	x0, [x8, #16]
   33514:	str	x0, [x2, #16]
   33518:	ldr	w0, [x8, #24]
   3351c:	str	w0, [x2, #24]
   33520:	ldr	x0, [sp, #288]
   33524:	cmp	x0, x22
   33528:	b.cc	34098 <ZSTD_compress@@Base+0x2584c>  // b.lo, b.ul, b.last
   3352c:	ldr	w0, [sp, #168]
   33530:	ldr	w2, [sp, #176]
   33534:	cmp	w0, w2
   33538:	b.ne	336ec <ZSTD_compress@@Base+0x24ea0>  // b.any
   3353c:	ldr	w1, [sp, #176]
   33540:	mov	w0, #0x1c                  	// #28
   33544:	ldr	x2, [sp, #112]
   33548:	ldr	w4, [sp, #176]
   3354c:	umaddl	x0, w1, w0, x2
   33550:	ldp	x2, x3, [x0]
   33554:	stp	x2, x3, [sp, #416]
   33558:	ldr	w2, [x0, #4]
   3355c:	ldr	x1, [x0, #16]
   33560:	str	x1, [sp, #432]
   33564:	ldr	w1, [x0, #24]
   33568:	str	w1, [sp, #440]
   3356c:	ldp	w1, w0, [x0, #8]
   33570:	str	w0, [sp, #196]
   33574:	mov	w0, w0
   33578:	add	w3, w0, w1
   3357c:	ldr	w0, [sp, #176]
   33580:	cmp	w4, w3
   33584:	sub	w0, w0, w3
   33588:	csel	w0, w0, wzr, hi  // hi = pmore
   3358c:	str	w2, [sp, #420]
   33590:	add	w24, w0, #0x1
   33594:	str	w1, [sp, #424]
   33598:	mov	w10, w24
   3359c:	ldr	w1, [sp, #196]
   335a0:	ldr	x2, [sp, #112]
   335a4:	str	w1, [sp, #428]
   335a8:	mov	w1, #0x1c                  	// #28
   335ac:	ldr	x3, [sp, #432]
   335b0:	umaddl	x2, w24, w1, x2
   335b4:	ldp	x4, x5, [sp, #416]
   335b8:	str	x3, [x2, #16]
   335bc:	ldr	w3, [sp, #440]
   335c0:	stp	x4, x5, [x2]
   335c4:	str	w3, [x2, #24]
   335c8:	cbz	w0, 33608 <ZSTD_compress@@Base+0x24dbc>
   335cc:	ldr	x2, [sp, #112]
   335d0:	sub	w10, w10, #0x1
   335d4:	umaddl	x4, w0, w1, x2
   335d8:	ldp	w5, w2, [x4, #8]
   335dc:	add	w5, w5, w2
   335e0:	ldr	x2, [sp, #112]
   335e4:	cmp	w0, w5
   335e8:	umaddl	x6, w10, w1, x2
   335ec:	ldp	x2, x3, [x4]
   335f0:	stp	x2, x3, [x6]
   335f4:	ldr	x2, [x4, #16]
   335f8:	str	x2, [x6, #16]
   335fc:	ldr	w2, [x4, #24]
   33600:	str	w2, [x6, #24]
   33604:	b.hi	34a20 <ZSTD_compress@@Base+0x261d4>  // b.pmore
   33608:	mov	x13, #0xffff                	// #65535
   3360c:	sub	x12, x20, #0x20
   33610:	mov	w15, w13
   33614:	mov	w14, #0x1c                  	// #28
   33618:	mov	w18, #0x2                   	// #2
   3361c:	cmp	w24, w10
   33620:	b.cs	34a28 <ZSTD_compress@@Base+0x261dc>  // b.hs, b.nlast
   33624:	ldr	x0, [sp, #184]
   33628:	mov	w1, #0x2                   	// #2
   3362c:	bl	203b8 <ZSTD_compress@@Base+0x11b6c>
   33630:	b	32270 <ZSTD_compress@@Base+0x23a24>
   33634:	ldr	w0, [x19, #152]
   33638:	add	x15, x19, #0x48
   3363c:	sub	w18, w5, #0x3
   33640:	cmp	w0, #0x1
   33644:	b.ne	33690 <ZSTD_compress@@Base+0x24e44>  // b.any
   33648:	mov	w0, w18
   3364c:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   33650:	add	w0, w3, w0
   33654:	ldr	x1, [sp, #112]
   33658:	umull	x12, w5, w10
   3365c:	ldr	w14, [sp, #196]
   33660:	add	w0, w6, w0
   33664:	add	x1, x1, x12
   33668:	str	w14, [x1, #12]
   3366c:	ldr	x14, [sp, #112]
   33670:	stp	w9, w5, [x1, #4]
   33674:	add	w5, w5, #0x1
   33678:	str	w0, [x14, x12]
   3367c:	ldr	x0, [sp, #400]
   33680:	str	x0, [x1, #16]
   33684:	ldr	w0, [sp, #408]
   33688:	str	w0, [x1, #24]
   3368c:	b	3341c <ZSTD_compress@@Base+0x24bd0>
   33690:	ldr	x0, [x15, #24]
   33694:	ldr	w0, [x0, x4]
   33698:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   3369c:	mov	w14, w0
   336a0:	mov	w0, w18
   336a4:	bl	2043c <ZSTD_compress@@Base+0x11bf0>
   336a8:	mov	w18, w0
   336ac:	ldp	w1, w12, [x15, #72]
   336b0:	add	w12, w12, w1
   336b4:	ldr	x1, [x15, #16]
   336b8:	ldr	w0, [x1, w0, uxtw #2]
   336bc:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   336c0:	add	w0, w14, w0
   336c4:	ldr	x1, [sp, #328]
   336c8:	sub	w0, w12, w0
   336cc:	ldr	w1, [x1, x18, lsl #2]
   336d0:	add	w1, w2, w1
   336d4:	lsl	w1, w1, #8
   336d8:	add	w1, w1, #0x33
   336dc:	add	w0, w1, w0
   336e0:	b	33654 <ZSTD_compress@@Base+0x24e08>
   336e4:	mov	w7, #0x1                   	// #1
   336e8:	b	33480 <ZSTD_compress@@Base+0x24c34>
   336ec:	ldr	x0, [sp, #136]
   336f0:	ldr	w23, [x0, #8]
   336f4:	cbnz	w23, 339d4 <ZSTD_compress@@Base+0x25188>
   336f8:	ldr	w0, [x0, #12]
   336fc:	str	w0, [sp, #196]
   33700:	ldr	x26, [x19, #8]
   33704:	ldr	w25, [x19, #36]
   33708:	add	x0, x26, w25, uxtw
   3370c:	cmp	x22, x0
   33710:	b.cc	34098 <ZSTD_compress@@Base+0x2584c>  // b.lo, b.ul, b.last
   33714:	ldr	x0, [sp, #112]
   33718:	add	x24, x19, #0xb8
   3371c:	sub	x28, x22, x26
   33720:	mov	w2, #0x2                   	// #2
   33724:	ldr	w0, [x0, x1]
   33728:	ldr	x1, [sp, #184]
   3372c:	str	w0, [sp, #340]
   33730:	mov	w0, #0x0                   	// #0
   33734:	bl	20930 <ZSTD_compress@@Base+0x120e4>
   33738:	ldr	w27, [x24, #16]
   3373c:	mov	w5, w28
   33740:	str	w0, [sp, #344]
   33744:	cmp	w5, w25
   33748:	b.hi	339dc <ZSTD_compress@@Base+0x25190>  // b.pmore
   3374c:	cmp	w23, #0x0
   33750:	mov	w1, #0xfff                 	// #4095
   33754:	cset	w0, ne  // ne = any
   33758:	str	w0, [sp, #152]
   3375c:	ldr	x0, [sp, #136]
   33760:	str	w28, [x19, #36]
   33764:	ldr	x28, [x19, #48]
   33768:	add	x0, x0, #0x10
   3376c:	str	x0, [sp, #216]
   33770:	ldr	w0, [x24, #20]
   33774:	cmp	w0, #0xfff
   33778:	csel	w0, w0, w1, ls  // ls = plast
   3377c:	str	w0, [sp, #208]
   33780:	ldr	x0, [x19, #8]
   33784:	str	x0, [sp, #144]
   33788:	ldr	w1, [x24, #8]
   3378c:	cmp	w27, #0x5
   33790:	sub	x14, x22, x0
   33794:	mov	w15, w14
   33798:	b.eq	343dc <ZSTD_compress@@Base+0x25b90>  // b.none
   3379c:	b.hi	33a04 <ZSTD_compress@@Base+0x251b8>  // b.pmore
   337a0:	cmp	w27, #0x3
   337a4:	b.eq	33cf8 <ZSTD_compress@@Base+0x254ac>  // b.none
   337a8:	mov	x26, x22
   337ac:	neg	w1, w1
   337b0:	mov	w6, #0x1                   	// #1
   337b4:	ldr	w8, [x19, #24]
   337b8:	ldr	w0, [x26], #4
   337bc:	sub	w9, w8, #0x1
   337c0:	str	w0, [sp, #264]
   337c4:	mov	w0, #0x79b1                	// #31153
   337c8:	ldr	w2, [sp, #264]
   337cc:	movk	w0, #0x9e37, lsl #16
   337d0:	mul	w0, w2, w0
   337d4:	ldr	w2, [x19, #184]
   337d8:	lsr	w1, w0, w1
   337dc:	ubfiz	x0, x1, #2, #32
   337e0:	str	x0, [sp, #312]
   337e4:	ldr	w24, [x28, x0]
   337e8:	ldr	x0, [x19, #64]
   337ec:	str	x0, [sp, #200]
   337f0:	ldr	w0, [x19, #188]
   337f4:	sub	w0, w0, #0x1
   337f8:	lsl	w0, w6, w0
   337fc:	sub	w0, w0, #0x1
   33800:	str	w0, [sp, #224]
   33804:	ldr	x0, [x19, #16]
   33808:	str	x0, [sp, #232]
   3380c:	mov	w0, w8
   33810:	str	x0, [sp, #272]
   33814:	ldr	x0, [sp, #232]
   33818:	ldr	w1, [sp, #224]
   3381c:	add	x0, x0, w8, uxtw
   33820:	str	x0, [sp, #280]
   33824:	ldr	x0, [sp, #144]
   33828:	cmp	w1, w14
   3382c:	mov	w1, w14
   33830:	add	x0, x0, w8, uxtw
   33834:	str	x0, [sp, #296]
   33838:	ldr	w0, [sp, #224]
   3383c:	sub	w0, w14, w0
   33840:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   33844:	str	w0, [sp, #304]
   33848:	mov	x0, x19
   3384c:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   33850:	cmp	w0, #0x0
   33854:	mov	w2, #0x4                   	// #4
   33858:	csel	w1, w0, w6, ne  // ne = any
   3385c:	str	w1, [sp, #320]
   33860:	ldr	w1, [sp, #224]
   33864:	sub	w0, w15, w0
   33868:	ldrb	w23, [sp, #152]
   3386c:	mov	w13, #0x0                   	// #0
   33870:	and	w18, w1, w14
   33874:	str	w0, [sp, #372]
   33878:	ldr	x1, [sp, #200]
   3387c:	ubfiz	x18, x18, #3, #31
   33880:	add	x1, x1, x18
   33884:	str	x1, [sp, #240]
   33888:	ldr	x1, [sp, #200]
   3388c:	add	x18, x18, #0x4
   33890:	add	x18, x1, x18
   33894:	add	w1, w14, #0x9
   33898:	str	w1, [sp, #248]
   3389c:	ldr	w1, [x19, #196]
   338a0:	lsl	w1, w6, w1
   338a4:	str	w1, [sp, #256]
   338a8:	ldr	w1, [sp, #192]
   338ac:	sub	w25, w1, #0x1
   338b0:	ldr	w1, [sp, #152]
   338b4:	cmp	w1, #0x0
   338b8:	mov	w1, #0x3                   	// #3
   338bc:	csel	w1, w2, w1, ne  // ne = any
   338c0:	str	w1, [sp, #348]
   338c4:	ldr	x1, [sp, #136]
   338c8:	add	x1, x1, #0x10
   338cc:	str	x1, [sp, #360]
   338d0:	sub	w1, w15, w8
   338d4:	str	w1, [sp, #352]
   338d8:	sub	w1, w9, w15
   338dc:	str	w1, [sp, #368]
   338e0:	mov	w27, w23
   338e4:	cmp	w23, #0x3
   338e8:	b.ne	3420c <ZSTD_compress@@Base+0x259c0>  // b.any
   338ec:	ldr	x0, [sp, #136]
   338f0:	ldr	w0, [x0, #16]
   338f4:	sub	w0, w0, #0x1
   338f8:	ldr	w2, [sp, #352]
   338fc:	sub	w1, w0, #0x1
   33900:	cmp	w1, w2
   33904:	b.cs	34218 <ZSTD_compress@@Base+0x259cc>  // b.hs, b.nlast
   33908:	mov	w1, w0
   3390c:	sub	x0, x22, w0, uxtw
   33910:	ldr	w2, [sp, #264]
   33914:	ldr	w0, [x0]
   33918:	cmp	w2, w0
   3391c:	b.ne	3426c <ZSTD_compress@@Base+0x25a20>  // b.any
   33920:	mov	x0, #0x4                   	// #4
   33924:	sub	x1, x0, x1
   33928:	mov	x2, x20
   3392c:	add	x1, x22, x1
   33930:	mov	x0, x26
   33934:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   33938:	add	w0, w0, #0x4
   3393c:	mov	w1, w0
   33940:	cmp	x25, w0, uxtw
   33944:	b.cs	33984 <ZSTD_compress@@Base+0x25138>  // b.hs, b.nlast
   33948:	ldr	w4, [sp, #152]
   3394c:	ubfiz	x2, x13, #3, #32
   33950:	ldr	x3, [sp, #104]
   33954:	sub	w27, w27, w4
   33958:	ldr	x4, [sp, #104]
   3395c:	add	x3, x3, x2
   33960:	add	w13, w13, #0x1
   33964:	str	w27, [x4, x2]
   33968:	add	x2, x22, x1
   3396c:	cmp	x2, x20
   33970:	ldr	w2, [sp, #208]
   33974:	str	w0, [x3, #4]
   33978:	ccmp	w0, w2, #0x2, ne  // ne = any
   3397c:	b.hi	34094 <ZSTD_compress@@Base+0x25848>  // b.pmore
   33980:	mov	x25, x1
   33984:	ldr	w0, [sp, #348]
   33988:	add	x23, x23, #0x1
   3398c:	cmp	w0, w23
   33990:	b.hi	338e0 <ZSTD_compress@@Base+0x25094>  // b.pmore
   33994:	ldr	x0, [sp, #312]
   33998:	mov	x27, #0x0                   	// #0
   3399c:	str	w14, [x28, x0]
   339a0:	add	w0, w15, #0x2
   339a4:	mov	x28, #0x0                   	// #0
   339a8:	str	w0, [sp, #208]
   339ac:	ldr	w0, [sp, #256]
   339b0:	cbz	w0, 339c0 <ZSTD_compress@@Base+0x25174>
   339b4:	ldr	w0, [sp, #320]
   339b8:	cmp	w0, w24
   339bc:	b.ls	34274 <ZSTD_compress@@Base+0x25a28>  // b.plast
   339c0:	ldr	x0, [sp, #240]
   339c4:	str	wzr, [x18]
   339c8:	str	wzr, [x0]
   339cc:	ldr	w0, [sp, #248]
   339d0:	b	3408c <ZSTD_compress@@Base+0x25840>
   339d4:	str	wzr, [sp, #196]
   339d8:	b	33700 <ZSTD_compress@@Base+0x24eb4>
   339dc:	add	x1, x26, w25, uxtw
   339e0:	mov	w3, w27
   339e4:	mov	x2, x20
   339e8:	mov	x0, x19
   339ec:	mov	w4, #0x1                   	// #1
   339f0:	str	w5, [sp, #144]
   339f4:	bl	2012c <ZSTD_compress@@Base+0x118e0>
   339f8:	add	w25, w25, w0
   339fc:	ldr	w5, [sp, #144]
   33a00:	b	33744 <ZSTD_compress@@Base+0x24ef8>
   33a04:	sub	w27, w27, #0x6
   33a08:	cmp	w27, #0x1
   33a0c:	b.hi	337a8 <ZSTD_compress@@Base+0x24f5c>  // b.pmore
   33a10:	mov	w2, #0x6                   	// #6
   33a14:	mov	x0, x22
   33a18:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   33a1c:	lsl	x0, x0, #2
   33a20:	str	x0, [sp, #304]
   33a24:	mov	w6, #0x1                   	// #1
   33a28:	ldr	w7, [x19, #24]
   33a2c:	ldr	w25, [x28, x0]
   33a30:	ldr	x0, [x19, #64]
   33a34:	str	x0, [sp, #200]
   33a38:	ldr	w0, [x24, #4]
   33a3c:	sub	w26, w7, #0x1
   33a40:	ldr	w2, [x19, #184]
   33a44:	sub	w0, w0, #0x1
   33a48:	lsl	w0, w6, w0
   33a4c:	sub	w0, w0, #0x1
   33a50:	str	w0, [sp, #224]
   33a54:	ldr	x0, [x19, #16]
   33a58:	str	x0, [sp, #232]
   33a5c:	mov	w0, w7
   33a60:	str	x0, [sp, #264]
   33a64:	ldr	x0, [sp, #232]
   33a68:	ldr	w1, [sp, #224]
   33a6c:	add	x0, x0, w7, uxtw
   33a70:	str	x0, [sp, #272]
   33a74:	ldr	x0, [sp, #144]
   33a78:	cmp	w1, w14
   33a7c:	mov	w1, w14
   33a80:	add	x0, x0, w7, uxtw
   33a84:	str	x0, [sp, #280]
   33a88:	ldr	w0, [sp, #224]
   33a8c:	sub	w0, w14, w0
   33a90:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   33a94:	str	w0, [sp, #296]
   33a98:	mov	x0, x19
   33a9c:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   33aa0:	cmp	w0, #0x0
   33aa4:	mov	w2, #0x4                   	// #4
   33aa8:	csel	w1, w0, w6, ne  // ne = any
   33aac:	str	w1, [sp, #312]
   33ab0:	ldr	w1, [sp, #224]
   33ab4:	sub	w0, w14, w0
   33ab8:	ldrb	w23, [sp, #152]
   33abc:	mov	w13, #0x0                   	// #0
   33ac0:	and	w18, w1, w14
   33ac4:	str	w0, [sp, #368]
   33ac8:	ldr	x1, [sp, #200]
   33acc:	ubfiz	x18, x18, #3, #31
   33ad0:	add	x24, x1, x18
   33ad4:	add	x18, x18, #0x4
   33ad8:	add	x18, x1, x18
   33adc:	add	w1, w14, #0x9
   33ae0:	str	w1, [sp, #248]
   33ae4:	ldr	w1, [x19, #196]
   33ae8:	lsl	w1, w6, w1
   33aec:	str	w1, [sp, #256]
   33af0:	ldr	w1, [sp, #192]
   33af4:	sub	w1, w1, #0x1
   33af8:	str	x1, [sp, #240]
   33afc:	ldr	w1, [sp, #152]
   33b00:	cmp	w1, #0x0
   33b04:	mov	w1, #0x3                   	// #3
   33b08:	csel	w1, w2, w1, ne  // ne = any
   33b0c:	str	w1, [sp, #320]
   33b10:	ldr	x1, [sp, #216]
   33b14:	str	x1, [sp, #352]
   33b18:	sub	w1, w14, w7
   33b1c:	str	w1, [sp, #348]
   33b20:	sub	w1, w26, w14
   33b24:	add	x26, x22, #0x4
   33b28:	str	w1, [sp, #360]
   33b2c:	mov	w27, w23
   33b30:	cmp	w23, #0x3
   33b34:	b.ne	3479c <ZSTD_compress@@Base+0x25f50>  // b.any
   33b38:	ldr	x0, [sp, #136]
   33b3c:	ldr	w0, [x0, #16]
   33b40:	sub	w0, w0, #0x1
   33b44:	ldr	w2, [sp, #348]
   33b48:	sub	w1, w0, #0x1
   33b4c:	cmp	w1, w2
   33b50:	b.cs	347a8 <ZSTD_compress@@Base+0x25f5c>  // b.hs, b.nlast
   33b54:	mov	w1, w0
   33b58:	sub	x0, x22, w0, uxtw
   33b5c:	ldr	w2, [x0]
   33b60:	ldr	w0, [x22]
   33b64:	cmp	w2, w0
   33b68:	b.ne	347f8 <ZSTD_compress@@Base+0x25fac>  // b.any
   33b6c:	mov	x0, #0x4                   	// #4
   33b70:	sub	x1, x0, x1
   33b74:	mov	x2, x20
   33b78:	add	x1, x22, x1
   33b7c:	mov	x0, x26
   33b80:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   33b84:	add	w0, w0, #0x4
   33b88:	ldr	x2, [sp, #240]
   33b8c:	mov	w1, w0
   33b90:	cmp	x2, w0, uxtw
   33b94:	b.cs	33bd4 <ZSTD_compress@@Base+0x25388>  // b.hs, b.nlast
   33b98:	ldr	w4, [sp, #152]
   33b9c:	ubfiz	x2, x13, #3, #32
   33ba0:	ldr	x3, [sp, #104]
   33ba4:	sub	w27, w27, w4
   33ba8:	ldr	x4, [sp, #104]
   33bac:	add	x3, x3, x2
   33bb0:	add	w13, w13, #0x1
   33bb4:	str	w27, [x4, x2]
   33bb8:	add	x2, x22, x1
   33bbc:	cmp	x2, x20
   33bc0:	ldr	w2, [sp, #208]
   33bc4:	str	w0, [x3, #4]
   33bc8:	ccmp	w0, w2, #0x2, ne  // ne = any
   33bcc:	b.hi	34094 <ZSTD_compress@@Base+0x25848>  // b.pmore
   33bd0:	str	x1, [sp, #240]
   33bd4:	ldr	w0, [sp, #320]
   33bd8:	add	x23, x23, #0x1
   33bdc:	cmp	w0, w23
   33be0:	b.hi	33b2c <ZSTD_compress@@Base+0x252e0>  // b.pmore
   33be4:	ldr	x0, [sp, #304]
   33be8:	mov	x27, #0x0                   	// #0
   33bec:	str	w14, [x28, x0]
   33bf0:	add	w0, w15, #0x2
   33bf4:	mov	x28, #0x0                   	// #0
   33bf8:	str	w0, [sp, #208]
   33bfc:	ldr	w0, [sp, #256]
   33c00:	cbz	w0, 345dc <ZSTD_compress@@Base+0x25d90>
   33c04:	ldr	w0, [sp, #312]
   33c08:	cmp	w0, w25
   33c0c:	b.hi	345dc <ZSTD_compress@@Base+0x25d90>  // b.pmore
   33c10:	ldr	w0, [sp, #224]
   33c14:	cmp	x27, x28
   33c18:	ldr	x2, [sp, #264]
   33c1c:	and	w14, w0, w25
   33c20:	ldr	x0, [sp, #200]
   33c24:	csel	x23, x27, x28, ls  // ls = plast
   33c28:	add	x1, x23, w25, uxtw
   33c2c:	ubfiz	x14, x14, #3, #31
   33c30:	add	x15, x0, x14
   33c34:	mov	w7, w25
   33c38:	add	x0, x22, x23
   33c3c:	cmp	x2, x1
   33c40:	b.hi	34800 <ZSTD_compress@@Base+0x25fb4>  // b.pmore
   33c44:	ldr	x1, [sp, #144]
   33c48:	mov	x2, x20
   33c4c:	add	x26, x1, x7
   33c50:	add	x1, x26, x23
   33c54:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   33c58:	add	x0, x23, x0
   33c5c:	ldr	x1, [sp, #240]
   33c60:	cmp	x1, x0
   33c64:	b.cs	33cbc <ZSTD_compress@@Base+0x25470>  // b.hs, b.nlast
   33c68:	ldr	w1, [sp, #248]
   33c6c:	mov	w3, w0
   33c70:	sub	w1, w1, w25
   33c74:	cmp	x0, x1
   33c78:	b.ls	33c84 <ZSTD_compress@@Base+0x25438>  // b.plast
   33c7c:	add	w1, w25, w0
   33c80:	str	w1, [sp, #248]
   33c84:	ldr	x2, [sp, #104]
   33c88:	ubfiz	x1, x13, #3, #32
   33c8c:	ldr	x5, [sp, #104]
   33c90:	add	x2, x2, x1
   33c94:	ldr	w4, [sp, #208]
   33c98:	cmp	x0, #0x1, lsl #12
   33c9c:	add	w13, w13, #0x1
   33ca0:	sub	w4, w4, w25
   33ca4:	str	w4, [x5, x1]
   33ca8:	str	w3, [x2, #4]
   33cac:	add	x1, x22, x0
   33cb0:	ccmp	x1, x20, #0x4, ls  // ls = plast
   33cb4:	b.eq	345dc <ZSTD_compress@@Base+0x25d90>  // b.none
   33cb8:	str	x0, [sp, #240]
   33cbc:	ldrb	w2, [x26, x0]
   33cc0:	ldrb	w1, [x22, x0]
   33cc4:	cmp	w2, w1
   33cc8:	b.cs	34840 <ZSTD_compress@@Base+0x25ff4>  // b.hs, b.nlast
   33ccc:	ldr	w1, [sp, #296]
   33cd0:	str	w25, [x24]
   33cd4:	cmp	w25, w1
   33cd8:	b.ls	34868 <ZSTD_compress@@Base+0x2601c>  // b.plast
   33cdc:	ldr	w25, [x15, #4]
   33ce0:	add	x24, x15, #0x4
   33ce4:	ldr	w1, [sp, #256]
   33ce8:	mov	x27, x0
   33cec:	sub	w1, w1, #0x1
   33cf0:	str	w1, [sp, #256]
   33cf4:	b	33bfc <ZSTD_compress@@Base+0x253b0>
   33cf8:	mov	x6, x22
   33cfc:	mov	w0, #0x79b1                	// #31153
   33d00:	movk	w0, #0x9e37, lsl #16
   33d04:	neg	w1, w1
   33d08:	mov	w5, #0x1                   	// #1
   33d0c:	ldr	w25, [x19, #24]
   33d10:	ldr	w26, [x6], #3
   33d14:	ldr	w2, [x19, #184]
   33d18:	sub	w7, w25, #0x1
   33d1c:	str	x6, [sp, #376]
   33d20:	mul	w0, w26, w0
   33d24:	lsl	w26, w26, #8
   33d28:	lsr	w1, w0, w1
   33d2c:	ubfiz	x0, x1, #2, #32
   33d30:	str	x0, [sp, #320]
   33d34:	ldr	w18, [x28, x0]
   33d38:	ldr	x0, [x19, #64]
   33d3c:	str	x0, [sp, #224]
   33d40:	ldr	w0, [x24, #4]
   33d44:	sub	w0, w0, #0x1
   33d48:	lsl	w0, w5, w0
   33d4c:	sub	w0, w0, #0x1
   33d50:	str	w0, [sp, #232]
   33d54:	ldr	x0, [x19, #16]
   33d58:	str	x0, [sp, #200]
   33d5c:	mov	w0, w25
   33d60:	str	x0, [sp, #296]
   33d64:	ldr	x0, [sp, #200]
   33d68:	ldr	w1, [sp, #232]
   33d6c:	add	x0, x0, w25, uxtw
   33d70:	str	x0, [sp, #256]
   33d74:	ldr	x0, [sp, #144]
   33d78:	cmp	w1, w14
   33d7c:	mov	w1, w14
   33d80:	add	x0, x0, w25, uxtw
   33d84:	str	x0, [sp, #264]
   33d88:	ldr	w0, [sp, #232]
   33d8c:	sub	w0, w14, w0
   33d90:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   33d94:	str	w0, [sp, #312]
   33d98:	mov	x0, x19
   33d9c:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   33da0:	cmp	w0, #0x0
   33da4:	mov	w3, #0x4                   	// #4
   33da8:	csel	w1, w0, w5, ne  // ne = any
   33dac:	str	w1, [sp, #304]
   33db0:	ldr	w1, [sp, #232]
   33db4:	sub	w0, w14, w0
   33db8:	ldr	x2, [sp, #224]
   33dbc:	and	w1, w1, w14
   33dc0:	ldrb	w23, [sp, #152]
   33dc4:	mov	w13, #0x0                   	// #0
   33dc8:	ubfiz	x1, x1, #3, #31
   33dcc:	str	w0, [sp, #372]
   33dd0:	add	x2, x2, x1
   33dd4:	str	x2, [sp, #240]
   33dd8:	ldr	x2, [sp, #224]
   33ddc:	add	x1, x1, #0x4
   33de0:	ldr	x6, [sp, #376]
   33de4:	add	x1, x2, x1
   33de8:	str	x1, [sp, #248]
   33dec:	add	w1, w14, #0x9
   33df0:	str	w1, [sp, #272]
   33df4:	ldr	w1, [x19, #196]
   33df8:	lsl	w1, w5, w1
   33dfc:	str	w1, [sp, #280]
   33e00:	ldr	w1, [sp, #192]
   33e04:	sub	w24, w1, #0x1
   33e08:	ldr	w1, [sp, #152]
   33e0c:	cmp	w1, #0x0
   33e10:	csel	w1, w3, w27, ne  // ne = any
   33e14:	str	w1, [sp, #348]
   33e18:	ldr	x1, [sp, #216]
   33e1c:	str	x1, [sp, #360]
   33e20:	sub	w1, w14, w25
   33e24:	str	w1, [sp, #352]
   33e28:	sub	w1, w7, w14
   33e2c:	str	w1, [sp, #368]
   33e30:	mov	w27, w23
   33e34:	cmp	w23, #0x3
   33e38:	b.ne	33fc4 <ZSTD_compress@@Base+0x25778>  // b.any
   33e3c:	ldr	x0, [sp, #136]
   33e40:	ldr	w0, [x0, #16]
   33e44:	sub	w0, w0, #0x1
   33e48:	ldr	w2, [sp, #352]
   33e4c:	sub	w1, w0, #0x1
   33e50:	cmp	w1, w2
   33e54:	b.cs	33fd0 <ZSTD_compress@@Base+0x25784>  // b.hs, b.nlast
   33e58:	mov	w1, w0
   33e5c:	sub	x0, x22, w0, uxtw
   33e60:	ldr	w0, [x0]
   33e64:	cmp	w26, w0, lsl #8
   33e68:	b.ne	34020 <ZSTD_compress@@Base+0x257d4>  // b.any
   33e6c:	mov	x0, #0x3                   	// #3
   33e70:	sub	x1, x0, x1
   33e74:	mov	x2, x20
   33e78:	add	x1, x22, x1
   33e7c:	mov	x0, x6
   33e80:	str	x6, [sp, #376]
   33e84:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   33e88:	ldr	x6, [sp, #376]
   33e8c:	add	w0, w0, #0x3
   33e90:	mov	w1, w0
   33e94:	cmp	x24, w0, uxtw
   33e98:	b.cs	33ed8 <ZSTD_compress@@Base+0x2568c>  // b.hs, b.nlast
   33e9c:	ldr	w4, [sp, #152]
   33ea0:	ubfiz	x2, x13, #3, #32
   33ea4:	ldr	x3, [sp, #104]
   33ea8:	sub	w27, w27, w4
   33eac:	ldr	x4, [sp, #104]
   33eb0:	add	x3, x3, x2
   33eb4:	add	w13, w13, #0x1
   33eb8:	str	w27, [x4, x2]
   33ebc:	add	x2, x22, x1
   33ec0:	cmp	x2, x20
   33ec4:	ldr	w2, [sp, #208]
   33ec8:	str	w0, [x3, #4]
   33ecc:	ccmp	w0, w2, #0x2, ne  // ne = any
   33ed0:	b.hi	34094 <ZSTD_compress@@Base+0x25848>  // b.pmore
   33ed4:	mov	x24, x1
   33ed8:	ldr	w0, [sp, #348]
   33edc:	add	x23, x23, #0x1
   33ee0:	cmp	w0, w23
   33ee4:	b.hi	33e30 <ZSTD_compress@@Base+0x255e4>  // b.pmore
   33ee8:	cmp	x24, #0x2
   33eec:	b.ne	3404c <ZSTD_compress@@Base+0x25800>  // b.any
   33ef0:	add	x1, sp, #0x18c
   33ef4:	mov	x2, x22
   33ef8:	mov	x0, x19
   33efc:	bl	1ff88 <ZSTD_compress@@Base+0x1173c>
   33f00:	ldr	w1, [sp, #304]
   33f04:	sub	w23, w14, w0
   33f08:	cmp	w1, w0
   33f0c:	mov	w1, #0x3ffff               	// #262143
   33f10:	ccmp	w23, w1, #0x2, ls  // ls = plast
   33f14:	b.hi	3404c <ZSTD_compress@@Base+0x25800>  // b.pmore
   33f18:	mov	w1, w0
   33f1c:	cmp	w25, w0
   33f20:	b.hi	34028 <ZSTD_compress@@Base+0x257dc>  // b.pmore
   33f24:	ldr	x0, [sp, #144]
   33f28:	mov	x2, x20
   33f2c:	add	x1, x0, x1
   33f30:	mov	x0, x22
   33f34:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   33f38:	cmp	x0, #0x2
   33f3c:	b.ls	3404c <ZSTD_compress@@Base+0x25800>  // b.plast
   33f40:	ldr	x1, [sp, #104]
   33f44:	add	w23, w23, #0x2
   33f48:	ldr	w2, [sp, #208]
   33f4c:	stp	w23, w0, [x1]
   33f50:	add	x1, x22, x0
   33f54:	cmp	x1, x20
   33f58:	ccmp	x0, x2, #0x2, ne  // ne = any
   33f5c:	b.ls	34044 <ZSTD_compress@@Base+0x257f8>  // b.plast
   33f60:	add	w14, w14, #0x1
   33f64:	mov	w13, #0x1                   	// #1
   33f68:	str	w14, [x19, #36]
   33f6c:	ldr	x1, [sp, #104]
   33f70:	sub	w0, w13, #0x1
   33f74:	ldr	w2, [sp, #336]
   33f78:	add	x0, x1, x0, lsl #3
   33f7c:	ldr	w1, [x0, #4]
   33f80:	cmp	w2, w1
   33f84:	b.cc	33f98 <ZSTD_compress@@Base+0x2574c>  // b.lo, b.ul, b.last
   33f88:	ldr	w2, [sp, #168]
   33f8c:	add	w2, w2, w1
   33f90:	cmp	w2, #0xfff
   33f94:	b.ls	34880 <ZSTD_compress@@Base+0x26034>  // b.plast
   33f98:	ldr	w2, [x0]
   33f9c:	ldr	x0, [sp, #136]
   33fa0:	ldr	w0, [x0, #8]
   33fa4:	cbnz	w0, 34878 <ZSTD_compress@@Base+0x2602c>
   33fa8:	ldr	x0, [sp, #136]
   33fac:	ldr	w0, [x0, #12]
   33fb0:	ldr	w3, [sp, #168]
   33fb4:	sub	w0, w3, w0
   33fb8:	cmp	w0, #0x1, lsl #12
   33fbc:	b.ls	3358c <ZSTD_compress@@Base+0x24d40>  // b.plast
   33fc0:	b	32b20 <ZSTD_compress@@Base+0x242d4>
   33fc4:	ldr	x0, [sp, #360]
   33fc8:	ldr	w0, [x0, x23, lsl #2]
   33fcc:	b	33e48 <ZSTD_compress@@Base+0x255fc>
   33fd0:	ldr	w2, [sp, #368]
   33fd4:	add	w2, w2, w0
   33fd8:	cmp	w2, #0x2
   33fdc:	ldr	w2, [sp, #372]
   33fe0:	ccmp	w1, w2, #0x2, hi  // hi = pmore
   33fe4:	b.cs	34020 <ZSTD_compress@@Base+0x257d4>  // b.hs, b.nlast
   33fe8:	ldr	x2, [sp, #200]
   33fec:	sub	w0, w15, w0
   33ff0:	ldr	x1, [sp, #200]
   33ff4:	add	x1, x1, x0
   33ff8:	ldr	w0, [x2, x0]
   33ffc:	cmp	w26, w0, lsl #8
   34000:	b.ne	34020 <ZSTD_compress@@Base+0x257d4>  // b.any
   34004:	ldp	x3, x4, [sp, #256]
   34008:	mov	x2, x20
   3400c:	add	x1, x1, #0x3
   34010:	mov	x0, x6
   34014:	str	x6, [sp, #376]
   34018:	bl	200cc <ZSTD_compress@@Base+0x11880>
   3401c:	b	33e88 <ZSTD_compress@@Base+0x2563c>
   34020:	mov	w0, #0x0                   	// #0
   34024:	b	33e90 <ZSTD_compress@@Base+0x25644>
   34028:	ldp	x3, x4, [sp, #256]
   3402c:	mov	x2, x20
   34030:	ldr	x0, [sp, #200]
   34034:	add	x1, x0, x1
   34038:	mov	x0, x22
   3403c:	bl	200cc <ZSTD_compress@@Base+0x11880>
   34040:	b	33f38 <ZSTD_compress@@Base+0x256ec>
   34044:	mov	x24, x0
   34048:	mov	w13, #0x1                   	// #1
   3404c:	ldr	x0, [sp, #320]
   34050:	mov	x26, #0x0                   	// #0
   34054:	str	w14, [x28, x0]
   34058:	add	w0, w15, #0x2
   3405c:	mov	x28, #0x0                   	// #0
   34060:	str	w0, [sp, #208]
   34064:	ldr	w0, [sp, #280]
   34068:	cbz	w0, 34078 <ZSTD_compress@@Base+0x2582c>
   3406c:	ldr	w0, [sp, #304]
   34070:	cmp	w0, w18
   34074:	b.ls	340a4 <ZSTD_compress@@Base+0x25858>  // b.plast
   34078:	ldr	x0, [sp, #248]
   3407c:	str	wzr, [x0]
   34080:	ldr	x0, [sp, #240]
   34084:	str	wzr, [x0]
   34088:	ldr	w0, [sp, #272]
   3408c:	sub	w0, w0, #0x8
   34090:	str	w0, [x19, #36]
   34094:	cbnz	w13, 33f6c <ZSTD_compress@@Base+0x25720>
   34098:	ldr	w0, [sp, #168]
   3409c:	add	w0, w0, #0x1
   340a0:	b	33440 <ZSTD_compress@@Base+0x24bf4>
   340a4:	ldr	w0, [sp, #232]
   340a8:	cmp	x26, x28
   340ac:	ldr	x2, [sp, #296]
   340b0:	and	w14, w0, w18
   340b4:	ldr	x0, [sp, #224]
   340b8:	csel	x23, x26, x28, ls  // ls = plast
   340bc:	add	x1, x23, w18, uxtw
   340c0:	ubfiz	x14, x14, #3, #31
   340c4:	add	x15, x0, x14
   340c8:	mov	w27, w18
   340cc:	add	x0, x22, x23
   340d0:	cmp	x2, x1
   340d4:	b.hi	34190 <ZSTD_compress@@Base+0x25944>  // b.pmore
   340d8:	ldr	x1, [sp, #144]
   340dc:	mov	x2, x20
   340e0:	add	x25, x1, x27
   340e4:	add	x1, x25, x23
   340e8:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   340ec:	add	x0, x23, x0
   340f0:	cmp	x24, x0
   340f4:	b.cs	3414c <ZSTD_compress@@Base+0x25900>  // b.hs, b.nlast
   340f8:	ldr	w1, [sp, #272]
   340fc:	mov	w3, w0
   34100:	sub	w1, w1, w18
   34104:	cmp	x0, x1
   34108:	b.ls	34114 <ZSTD_compress@@Base+0x258c8>  // b.plast
   3410c:	add	w1, w18, w0
   34110:	str	w1, [sp, #272]
   34114:	ldr	x2, [sp, #104]
   34118:	ubfiz	x1, x13, #3, #32
   3411c:	ldr	x5, [sp, #104]
   34120:	add	x2, x2, x1
   34124:	ldr	w4, [sp, #208]
   34128:	cmp	x0, #0x1, lsl #12
   3412c:	add	w13, w13, #0x1
   34130:	sub	w4, w4, w18
   34134:	str	w4, [x5, x1]
   34138:	str	w3, [x2, #4]
   3413c:	add	x1, x22, x0
   34140:	ccmp	x1, x20, #0x4, ls  // ls = plast
   34144:	b.eq	34078 <ZSTD_compress@@Base+0x2582c>  // b.none
   34148:	mov	x24, x0
   3414c:	ldrb	w2, [x25, x0]
   34150:	ldrb	w1, [x22, x0]
   34154:	cmp	w2, w1
   34158:	b.cs	341c8 <ZSTD_compress@@Base+0x2597c>  // b.hs, b.nlast
   3415c:	ldr	x1, [sp, #240]
   34160:	str	w18, [x1]
   34164:	ldr	w1, [sp, #312]
   34168:	cmp	w18, w1
   3416c:	b.ls	341f4 <ZSTD_compress@@Base+0x259a8>  // b.plast
   34170:	ldr	w18, [x15, #4]
   34174:	add	x1, x15, #0x4
   34178:	str	x1, [sp, #240]
   3417c:	ldr	w1, [sp, #280]
   34180:	mov	x26, x0
   34184:	sub	w1, w1, #0x1
   34188:	str	w1, [sp, #280]
   3418c:	b	34064 <ZSTD_compress@@Base+0x25818>
   34190:	ldp	x3, x4, [sp, #256]
   34194:	mov	x2, x20
   34198:	ldr	x1, [sp, #200]
   3419c:	add	x25, x1, x27
   341a0:	add	x1, x25, x23
   341a4:	bl	200cc <ZSTD_compress@@Base+0x11880>
   341a8:	ldr	x2, [sp, #296]
   341ac:	add	x0, x23, x0
   341b0:	add	x1, x27, x0
   341b4:	cmp	x2, x1
   341b8:	b.hi	340f0 <ZSTD_compress@@Base+0x258a4>  // b.pmore
   341bc:	ldr	x1, [sp, #144]
   341c0:	add	x25, x1, x27
   341c4:	b	340f0 <ZSTD_compress@@Base+0x258a4>
   341c8:	ldr	x1, [sp, #248]
   341cc:	str	w18, [x1]
   341d0:	ldr	w1, [sp, #312]
   341d4:	cmp	w18, w1
   341d8:	b.ls	34200 <ZSTD_compress@@Base+0x259b4>  // b.plast
   341dc:	ldr	x1, [sp, #224]
   341e0:	mov	x28, x0
   341e4:	mov	x0, x26
   341e8:	str	x15, [sp, #248]
   341ec:	ldr	w18, [x1, x14]
   341f0:	b	3417c <ZSTD_compress@@Base+0x25930>
   341f4:	add	x0, sp, #0x190
   341f8:	str	x0, [sp, #240]
   341fc:	b	34078 <ZSTD_compress@@Base+0x2582c>
   34200:	add	x0, sp, #0x190
   34204:	str	x0, [sp, #248]
   34208:	b	34078 <ZSTD_compress@@Base+0x2582c>
   3420c:	ldr	x0, [sp, #360]
   34210:	ldr	w0, [x0, x23, lsl #2]
   34214:	b	338f8 <ZSTD_compress@@Base+0x250ac>
   34218:	ldr	w2, [sp, #368]
   3421c:	add	w2, w2, w0
   34220:	cmp	w2, #0x2
   34224:	ldr	w2, [sp, #372]
   34228:	ccmp	w1, w2, #0x2, hi  // hi = pmore
   3422c:	b.cs	3426c <ZSTD_compress@@Base+0x25a20>  // b.hs, b.nlast
   34230:	ldr	x2, [sp, #232]
   34234:	sub	w0, w15, w0
   34238:	ldr	x1, [sp, #232]
   3423c:	add	x1, x1, x0
   34240:	ldr	w0, [x2, x0]
   34244:	ldr	w2, [sp, #264]
   34248:	cmp	w2, w0
   3424c:	b.ne	3426c <ZSTD_compress@@Base+0x25a20>  // b.any
   34250:	ldr	x3, [sp, #280]
   34254:	mov	x2, x20
   34258:	ldr	x4, [sp, #296]
   3425c:	add	x1, x1, #0x4
   34260:	mov	x0, x26
   34264:	bl	200cc <ZSTD_compress@@Base+0x11880>
   34268:	b	33938 <ZSTD_compress@@Base+0x250ec>
   3426c:	mov	w0, #0x0                   	// #0
   34270:	b	3393c <ZSTD_compress@@Base+0x250f0>
   34274:	ldr	w0, [sp, #224]
   34278:	cmp	x28, x27
   3427c:	ldr	x2, [sp, #272]
   34280:	and	w14, w0, w24
   34284:	ldr	x0, [sp, #200]
   34288:	csel	x23, x28, x27, ls  // ls = plast
   3428c:	add	x1, x23, w24, uxtw
   34290:	ubfiz	x14, x14, #3, #31
   34294:	add	x15, x0, x14
   34298:	mov	w7, w24
   3429c:	add	x0, x22, x23
   342a0:	cmp	x2, x1
   342a4:	b.hi	34368 <ZSTD_compress@@Base+0x25b1c>  // b.pmore
   342a8:	ldr	x1, [sp, #144]
   342ac:	mov	x2, x20
   342b0:	add	x26, x1, x7
   342b4:	add	x1, x26, x23
   342b8:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   342bc:	add	x0, x23, x0
   342c0:	cmp	x25, x0
   342c4:	b.cs	3431c <ZSTD_compress@@Base+0x25ad0>  // b.hs, b.nlast
   342c8:	ldr	w1, [sp, #248]
   342cc:	mov	w3, w0
   342d0:	sub	w1, w1, w24
   342d4:	cmp	x0, x1
   342d8:	b.ls	342e4 <ZSTD_compress@@Base+0x25a98>  // b.plast
   342dc:	add	w1, w24, w0
   342e0:	str	w1, [sp, #248]
   342e4:	ldr	x2, [sp, #104]
   342e8:	ubfiz	x1, x13, #3, #32
   342ec:	ldr	x5, [sp, #104]
   342f0:	add	x2, x2, x1
   342f4:	ldr	w4, [sp, #208]
   342f8:	cmp	x0, #0x1, lsl #12
   342fc:	add	w13, w13, #0x1
   34300:	sub	w4, w4, w24
   34304:	str	w4, [x5, x1]
   34308:	str	w3, [x2, #4]
   3430c:	add	x1, x22, x0
   34310:	ccmp	x1, x20, #0x4, ls  // ls = plast
   34314:	b.eq	339c0 <ZSTD_compress@@Base+0x25174>  // b.none
   34318:	mov	x25, x0
   3431c:	ldrb	w2, [x26, x0]
   34320:	ldrb	w1, [x22, x0]
   34324:	cmp	w2, w1
   34328:	b.cs	343a8 <ZSTD_compress@@Base+0x25b5c>  // b.hs, b.nlast
   3432c:	ldr	x1, [sp, #240]
   34330:	str	w24, [x1]
   34334:	ldr	w1, [sp, #304]
   34338:	cmp	w24, w1
   3433c:	b.ls	343c8 <ZSTD_compress@@Base+0x25b7c>  // b.plast
   34340:	ldr	w24, [x15, #4]
   34344:	mov	x28, x0
   34348:	mov	x0, x27
   3434c:	add	x1, x15, #0x4
   34350:	str	x1, [sp, #240]
   34354:	ldr	w1, [sp, #256]
   34358:	mov	x27, x0
   3435c:	sub	w1, w1, #0x1
   34360:	str	w1, [sp, #256]
   34364:	b	339ac <ZSTD_compress@@Base+0x25160>
   34368:	ldr	x1, [sp, #232]
   3436c:	mov	x2, x20
   34370:	ldr	x3, [sp, #280]
   34374:	add	x26, x1, x7
   34378:	ldr	x4, [sp, #296]
   3437c:	add	x1, x26, x23
   34380:	str	x7, [sp, #264]
   34384:	bl	200cc <ZSTD_compress@@Base+0x11880>
   34388:	add	x0, x23, x0
   3438c:	ldp	x7, x2, [sp, #264]
   34390:	add	x1, x7, x0
   34394:	cmp	x2, x1
   34398:	b.hi	342c0 <ZSTD_compress@@Base+0x25a74>  // b.pmore
   3439c:	ldr	x1, [sp, #144]
   343a0:	add	x26, x1, x7
   343a4:	b	342c0 <ZSTD_compress@@Base+0x25a74>
   343a8:	ldr	w1, [sp, #304]
   343ac:	str	w24, [x18]
   343b0:	cmp	w24, w1
   343b4:	b.ls	343d4 <ZSTD_compress@@Base+0x25b88>  // b.plast
   343b8:	ldr	x1, [sp, #200]
   343bc:	mov	x18, x15
   343c0:	ldr	w24, [x1, x14]
   343c4:	b	34354 <ZSTD_compress@@Base+0x25b08>
   343c8:	add	x0, sp, #0x190
   343cc:	str	x0, [sp, #240]
   343d0:	b	339c0 <ZSTD_compress@@Base+0x25174>
   343d4:	add	x18, sp, #0x190
   343d8:	b	339c0 <ZSTD_compress@@Base+0x25174>
   343dc:	mov	w2, w27
   343e0:	mov	x0, x22
   343e4:	bl	1fe9c <ZSTD_compress@@Base+0x11650>
   343e8:	lsl	x0, x0, #2
   343ec:	str	x0, [sp, #304]
   343f0:	mov	w6, #0x1                   	// #1
   343f4:	ldr	w7, [x19, #24]
   343f8:	ldr	w25, [x28, x0]
   343fc:	ldr	x0, [x19, #64]
   34400:	str	x0, [sp, #200]
   34404:	ldr	w0, [x24, #4]
   34408:	sub	w26, w7, #0x1
   3440c:	ldr	w2, [x19, #184]
   34410:	sub	w0, w0, #0x1
   34414:	lsl	w0, w6, w0
   34418:	sub	w0, w0, #0x1
   3441c:	str	w0, [sp, #224]
   34420:	ldr	x0, [x19, #16]
   34424:	str	x0, [sp, #232]
   34428:	mov	w0, w7
   3442c:	str	x0, [sp, #264]
   34430:	ldr	x0, [sp, #232]
   34434:	ldr	w1, [sp, #224]
   34438:	add	x0, x0, w7, uxtw
   3443c:	str	x0, [sp, #272]
   34440:	ldr	x0, [sp, #144]
   34444:	cmp	w1, w14
   34448:	mov	w1, w14
   3444c:	add	x0, x0, w7, uxtw
   34450:	str	x0, [sp, #280]
   34454:	ldr	w0, [sp, #224]
   34458:	sub	w0, w14, w0
   3445c:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   34460:	str	w0, [sp, #296]
   34464:	mov	x0, x19
   34468:	bl	1ff28 <ZSTD_compress@@Base+0x116dc>
   3446c:	cmp	w0, #0x0
   34470:	mov	w2, #0x4                   	// #4
   34474:	csel	w1, w0, w6, ne  // ne = any
   34478:	str	w1, [sp, #312]
   3447c:	ldr	w1, [sp, #224]
   34480:	sub	w0, w14, w0
   34484:	ldrb	w23, [sp, #152]
   34488:	mov	w13, #0x0                   	// #0
   3448c:	and	w18, w1, w14
   34490:	str	w0, [sp, #368]
   34494:	ldr	x1, [sp, #200]
   34498:	ubfiz	x18, x18, #3, #31
   3449c:	add	x24, x1, x18
   344a0:	add	x18, x18, #0x4
   344a4:	add	x18, x1, x18
   344a8:	add	w1, w14, #0x9
   344ac:	str	w1, [sp, #248]
   344b0:	ldr	w1, [x19, #196]
   344b4:	lsl	w1, w6, w1
   344b8:	str	w1, [sp, #256]
   344bc:	ldr	w1, [sp, #192]
   344c0:	sub	w1, w1, #0x1
   344c4:	str	x1, [sp, #240]
   344c8:	ldr	w1, [sp, #152]
   344cc:	cmp	w1, #0x0
   344d0:	mov	w1, #0x3                   	// #3
   344d4:	csel	w1, w2, w1, ne  // ne = any
   344d8:	str	w1, [sp, #320]
   344dc:	ldr	x1, [sp, #216]
   344e0:	str	x1, [sp, #352]
   344e4:	sub	w1, w14, w7
   344e8:	str	w1, [sp, #348]
   344ec:	sub	w1, w26, w14
   344f0:	add	x26, x22, #0x4
   344f4:	str	w1, [sp, #360]
   344f8:	mov	w27, w23
   344fc:	cmp	w23, #0x3
   34500:	b.ne	345e8 <ZSTD_compress@@Base+0x25d9c>  // b.any
   34504:	ldr	x0, [sp, #136]
   34508:	ldr	w0, [x0, #16]
   3450c:	sub	w0, w0, #0x1
   34510:	ldr	w2, [sp, #348]
   34514:	sub	w1, w0, #0x1
   34518:	cmp	w1, w2
   3451c:	b.cs	345f4 <ZSTD_compress@@Base+0x25da8>  // b.hs, b.nlast
   34520:	mov	w1, w0
   34524:	sub	x0, x22, w0, uxtw
   34528:	ldr	w2, [x0]
   3452c:	ldr	w0, [x22]
   34530:	cmp	w2, w0
   34534:	b.ne	34644 <ZSTD_compress@@Base+0x25df8>  // b.any
   34538:	mov	x0, #0x4                   	// #4
   3453c:	sub	x1, x0, x1
   34540:	mov	x2, x20
   34544:	add	x1, x22, x1
   34548:	mov	x0, x26
   3454c:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   34550:	add	w0, w0, #0x4
   34554:	ldr	x2, [sp, #240]
   34558:	mov	w1, w0
   3455c:	cmp	x2, w0, uxtw
   34560:	b.cs	345a0 <ZSTD_compress@@Base+0x25d54>  // b.hs, b.nlast
   34564:	ldr	w4, [sp, #152]
   34568:	ubfiz	x2, x13, #3, #32
   3456c:	ldr	x3, [sp, #104]
   34570:	sub	w27, w27, w4
   34574:	ldr	x4, [sp, #104]
   34578:	add	x3, x3, x2
   3457c:	add	w13, w13, #0x1
   34580:	str	w27, [x4, x2]
   34584:	add	x2, x22, x1
   34588:	cmp	x2, x20
   3458c:	ldr	w2, [sp, #208]
   34590:	str	w0, [x3, #4]
   34594:	ccmp	w0, w2, #0x2, ne  // ne = any
   34598:	b.hi	34094 <ZSTD_compress@@Base+0x25848>  // b.pmore
   3459c:	str	x1, [sp, #240]
   345a0:	ldr	w0, [sp, #320]
   345a4:	add	x23, x23, #0x1
   345a8:	cmp	w0, w23
   345ac:	b.hi	344f8 <ZSTD_compress@@Base+0x25cac>  // b.pmore
   345b0:	ldr	x0, [sp, #304]
   345b4:	mov	x27, #0x0                   	// #0
   345b8:	str	w14, [x28, x0]
   345bc:	add	w0, w15, #0x2
   345c0:	mov	x28, #0x0                   	// #0
   345c4:	str	w0, [sp, #208]
   345c8:	ldr	w0, [sp, #256]
   345cc:	cbz	w0, 345dc <ZSTD_compress@@Base+0x25d90>
   345d0:	ldr	w0, [sp, #312]
   345d4:	cmp	w0, w25
   345d8:	b.ls	3464c <ZSTD_compress@@Base+0x25e00>  // b.plast
   345dc:	str	wzr, [x18]
   345e0:	str	wzr, [x24]
   345e4:	b	339cc <ZSTD_compress@@Base+0x25180>
   345e8:	ldr	x0, [sp, #352]
   345ec:	ldr	w0, [x0, x23, lsl #2]
   345f0:	b	34510 <ZSTD_compress@@Base+0x25cc4>
   345f4:	ldr	w2, [sp, #360]
   345f8:	add	w2, w2, w0
   345fc:	cmp	w2, #0x2
   34600:	ldr	w2, [sp, #368]
   34604:	ccmp	w1, w2, #0x2, hi  // hi = pmore
   34608:	b.cs	34644 <ZSTD_compress@@Base+0x25df8>  // b.hs, b.nlast
   3460c:	ldr	x2, [sp, #232]
   34610:	sub	w0, w15, w0
   34614:	ldr	x1, [sp, #232]
   34618:	ldr	w2, [x2, x0]
   3461c:	add	x1, x1, x0
   34620:	ldr	w0, [x22]
   34624:	cmp	w2, w0
   34628:	b.ne	34644 <ZSTD_compress@@Base+0x25df8>  // b.any
   3462c:	ldp	x3, x4, [sp, #272]
   34630:	mov	x2, x20
   34634:	add	x1, x1, #0x4
   34638:	mov	x0, x26
   3463c:	bl	200cc <ZSTD_compress@@Base+0x11880>
   34640:	b	34550 <ZSTD_compress@@Base+0x25d04>
   34644:	mov	w0, #0x0                   	// #0
   34648:	b	34554 <ZSTD_compress@@Base+0x25d08>
   3464c:	ldr	w0, [sp, #224]
   34650:	cmp	x27, x28
   34654:	ldr	x2, [sp, #264]
   34658:	and	w14, w0, w25
   3465c:	ldr	x0, [sp, #200]
   34660:	csel	x23, x27, x28, ls  // ls = plast
   34664:	add	x1, x23, w25, uxtw
   34668:	ubfiz	x14, x14, #3, #31
   3466c:	add	x15, x0, x14
   34670:	mov	w7, w25
   34674:	add	x0, x22, x23
   34678:	cmp	x2, x1
   3467c:	b.hi	34734 <ZSTD_compress@@Base+0x25ee8>  // b.pmore
   34680:	ldr	x1, [sp, #144]
   34684:	mov	x2, x20
   34688:	add	x26, x1, x7
   3468c:	add	x1, x26, x23
   34690:	bl	1ffec <ZSTD_compress@@Base+0x117a0>
   34694:	add	x0, x23, x0
   34698:	ldr	x1, [sp, #240]
   3469c:	cmp	x1, x0
   346a0:	b.cs	346f8 <ZSTD_compress@@Base+0x25eac>  // b.hs, b.nlast
   346a4:	ldr	w1, [sp, #248]
   346a8:	mov	w3, w0
   346ac:	sub	w1, w1, w25
   346b0:	cmp	x0, x1
   346b4:	b.ls	346c0 <ZSTD_compress@@Base+0x25e74>  // b.plast
   346b8:	add	w1, w25, w0
   346bc:	str	w1, [sp, #248]
   346c0:	ldr	x2, [sp, #104]
   346c4:	ubfiz	x1, x13, #3, #32
   346c8:	ldr	x5, [sp, #104]
   346cc:	add	x2, x2, x1
   346d0:	ldr	w4, [sp, #208]
   346d4:	cmp	x0, #0x1, lsl #12
   346d8:	add	w13, w13, #0x1
   346dc:	sub	w4, w4, w25
   346e0:	str	w4, [x5, x1]
   346e4:	str	w3, [x2, #4]
   346e8:	add	x1, x22, x0
   346ec:	ccmp	x1, x20, #0x4, ls  // ls = plast
   346f0:	b.eq	345dc <ZSTD_compress@@Base+0x25d90>  // b.none
   346f4:	str	x0, [sp, #240]
   346f8:	ldrb	w2, [x26, x0]
   346fc:	ldrb	w1, [x22, x0]
   34700:	cmp	w2, w1
   34704:	b.cs	34774 <ZSTD_compress@@Base+0x25f28>  // b.hs, b.nlast
   34708:	ldr	w1, [sp, #296]
   3470c:	str	w25, [x24]
   34710:	cmp	w25, w1
   34714:	b.ls	34868 <ZSTD_compress@@Base+0x2601c>  // b.plast
   34718:	ldr	w25, [x15, #4]
   3471c:	add	x24, x15, #0x4
   34720:	ldr	w1, [sp, #256]
   34724:	mov	x27, x0
   34728:	sub	w1, w1, #0x1
   3472c:	str	w1, [sp, #256]
   34730:	b	345c8 <ZSTD_compress@@Base+0x25d7c>
   34734:	ldp	x3, x4, [sp, #272]
   34738:	mov	x2, x20
   3473c:	ldr	x1, [sp, #232]
   34740:	str	x7, [sp, #304]
   34744:	add	x26, x1, x7
   34748:	add	x1, x26, x23
   3474c:	bl	200cc <ZSTD_compress@@Base+0x11880>
   34750:	ldr	x7, [sp, #304]
   34754:	add	x0, x23, x0
   34758:	ldr	x2, [sp, #264]
   3475c:	add	x1, x7, x0
   34760:	cmp	x2, x1
   34764:	b.hi	34698 <ZSTD_compress@@Base+0x25e4c>  // b.pmore
   34768:	ldr	x1, [sp, #144]
   3476c:	add	x26, x1, x7
   34770:	b	34698 <ZSTD_compress@@Base+0x25e4c>
   34774:	ldr	w1, [sp, #296]
   34778:	str	w25, [x18]
   3477c:	cmp	w25, w1
   34780:	b.ls	34870 <ZSTD_compress@@Base+0x26024>  // b.plast
   34784:	ldr	x1, [sp, #200]
   34788:	mov	x28, x0
   3478c:	mov	x18, x15
   34790:	mov	x0, x27
   34794:	ldr	w25, [x1, x14]
   34798:	b	34720 <ZSTD_compress@@Base+0x25ed4>
   3479c:	ldr	x0, [sp, #352]
   347a0:	ldr	w0, [x0, x23, lsl #2]
   347a4:	b	33b44 <ZSTD_compress@@Base+0x252f8>
   347a8:	ldr	w2, [sp, #360]
   347ac:	add	w2, w2, w0
   347b0:	cmp	w2, #0x2
   347b4:	ldr	w2, [sp, #368]
   347b8:	ccmp	w1, w2, #0x2, hi  // hi = pmore
   347bc:	b.cs	347f8 <ZSTD_compress@@Base+0x25fac>  // b.hs, b.nlast
   347c0:	ldr	x2, [sp, #232]
   347c4:	sub	w0, w15, w0
   347c8:	ldr	x1, [sp, #232]
   347cc:	ldr	w2, [x2, x0]
   347d0:	add	x1, x1, x0
   347d4:	ldr	w0, [x22]
   347d8:	cmp	w2, w0
   347dc:	b.ne	347f8 <ZSTD_compress@@Base+0x25fac>  // b.any
   347e0:	ldp	x3, x4, [sp, #272]
   347e4:	mov	x2, x20
   347e8:	add	x1, x1, #0x4
   347ec:	mov	x0, x26
   347f0:	bl	200cc <ZSTD_compress@@Base+0x11880>
   347f4:	b	33b84 <ZSTD_compress@@Base+0x25338>
   347f8:	mov	w0, #0x0                   	// #0
   347fc:	b	33b88 <ZSTD_compress@@Base+0x2533c>
   34800:	ldp	x3, x4, [sp, #272]
   34804:	mov	x2, x20
   34808:	ldr	x1, [sp, #232]
   3480c:	str	x7, [sp, #304]
   34810:	add	x26, x1, x7
   34814:	add	x1, x26, x23
   34818:	bl	200cc <ZSTD_compress@@Base+0x11880>
   3481c:	ldr	x7, [sp, #304]
   34820:	add	x0, x23, x0
   34824:	ldr	x2, [sp, #264]
   34828:	add	x1, x7, x0
   3482c:	cmp	x2, x1
   34830:	b.hi	33c5c <ZSTD_compress@@Base+0x25410>  // b.pmore
   34834:	ldr	x1, [sp, #144]
   34838:	add	x26, x1, x7
   3483c:	b	33c5c <ZSTD_compress@@Base+0x25410>
   34840:	ldr	w1, [sp, #296]
   34844:	str	w25, [x18]
   34848:	cmp	w25, w1
   3484c:	b.ls	34870 <ZSTD_compress@@Base+0x26024>  // b.plast
   34850:	ldr	x1, [sp, #200]
   34854:	mov	x28, x0
   34858:	mov	x18, x15
   3485c:	mov	x0, x27
   34860:	ldr	w25, [x1, x14]
   34864:	b	33ce4 <ZSTD_compress@@Base+0x25498>
   34868:	add	x24, sp, #0x190
   3486c:	b	345dc <ZSTD_compress@@Base+0x25d90>
   34870:	add	x18, sp, #0x190
   34874:	b	345dc <ZSTD_compress@@Base+0x25d90>
   34878:	mov	w0, #0x0                   	// #0
   3487c:	b	33fb0 <ZSTD_compress@@Base+0x25764>
   34880:	ldr	x9, [sp, #104]
   34884:	mov	w5, #0x0                   	// #0
   34888:	ldr	w11, [x9]
   3488c:	ldr	w2, [sp, #152]
   34890:	ldr	x0, [sp, #216]
   34894:	mov	w1, w11
   34898:	bl	205a8 <ZSTD_compress@@Base+0x11d5c>
   3489c:	str	w0, [sp, #400]
   348a0:	lsr	x0, x0, #32
   348a4:	str	w0, [sp, #404]
   348a8:	str	w1, [sp, #408]
   348ac:	ldr	w3, [x9, #4]
   348b0:	cbz	w5, 34918 <ZSTD_compress@@Base+0x260cc>
   348b4:	ldr	x1, [sp, #104]
   348b8:	sub	w0, w5, #0x1
   348bc:	add	x0, x1, x0, lsl #3
   348c0:	ldr	w10, [x0, #4]
   348c4:	add	w10, w10, #0x1
   348c8:	add	w2, w11, #0x1
   348cc:	ldr	w0, [sp, #168]
   348d0:	clz	w2, w2
   348d4:	ldr	w1, [sp, #344]
   348d8:	eor	w2, w2, #0x1f
   348dc:	add	w4, w0, w3
   348e0:	add	w12, w2, #0x10
   348e4:	ldr	w0, [sp, #340]
   348e8:	sbfiz	x15, x2, #2, #32
   348ec:	mov	w14, #0x1c                  	// #28
   348f0:	lsl	w12, w12, #8
   348f4:	add	w18, w0, w1
   348f8:	mov	w22, #0x40000000            	// #1073741824
   348fc:	cmp	w3, w10
   34900:	b.cs	34920 <ZSTD_compress@@Base+0x260d4>  // b.hs, b.nlast
   34904:	add	w5, w5, #0x1
   34908:	add	x9, x9, #0x8
   3490c:	cmp	w13, w5
   34910:	b.ne	34888 <ZSTD_compress@@Base+0x2603c>  // b.any
   34914:	b	34098 <ZSTD_compress@@Base+0x2584c>
   34918:	ldr	w10, [sp, #192]
   3491c:	b	348c8 <ZSTD_compress@@Base+0x2607c>
   34920:	ldr	w0, [x19, #152]
   34924:	add	x8, x19, #0x48
   34928:	sub	w23, w3, #0x3
   3492c:	cmp	w0, #0x1
   34930:	b.ne	3499c <ZSTD_compress@@Base+0x26150>  // b.any
   34934:	mov	w0, w23
   34938:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   3493c:	add	w0, w12, w0
   34940:	ldr	x1, [sp, #112]
   34944:	umull	x7, w4, w14
   34948:	ldr	w6, [sp, #176]
   3494c:	add	w0, w18, w0
   34950:	add	x1, x1, x7
   34954:	cmp	w4, w6
   34958:	b.hi	349f0 <ZSTD_compress@@Base+0x261a4>  // b.pmore
   3495c:	ldr	x6, [sp, #112]
   34960:	ldr	w6, [x6, x7]
   34964:	cmp	w0, w6
   34968:	b.ge	34990 <ZSTD_compress@@Base+0x26144>  // b.tcont
   3496c:	ldr	w6, [sp, #196]
   34970:	str	w6, [x1, #12]
   34974:	ldr	x6, [sp, #112]
   34978:	stp	w11, w3, [x1, #4]
   3497c:	str	w0, [x6, x7]
   34980:	ldr	x0, [sp, #400]
   34984:	str	x0, [x1, #16]
   34988:	ldr	w0, [sp, #408]
   3498c:	str	w0, [x1, #24]
   34990:	sub	w3, w3, #0x1
   34994:	sub	w4, w4, #0x1
   34998:	b	348fc <ZSTD_compress@@Base+0x260b0>
   3499c:	ldr	x0, [x8, #24]
   349a0:	ldr	w0, [x0, x15]
   349a4:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   349a8:	mov	w7, w0
   349ac:	mov	w0, w23
   349b0:	bl	2043c <ZSTD_compress@@Base+0x11bf0>
   349b4:	mov	w23, w0
   349b8:	ldp	w1, w6, [x8, #72]
   349bc:	add	w6, w6, w1
   349c0:	ldr	x1, [x8, #16]
   349c4:	ldr	w0, [x1, w0, uxtw #2]
   349c8:	bl	20388 <ZSTD_compress@@Base+0x11b3c>
   349cc:	add	w0, w7, w0
   349d0:	ldr	x1, [sp, #328]
   349d4:	sub	w0, w6, w0
   349d8:	ldr	w1, [x1, x23, lsl #2]
   349dc:	add	w1, w2, w1
   349e0:	lsl	w1, w1, #8
   349e4:	add	w1, w1, #0x33
   349e8:	add	w0, w1, w0
   349ec:	b	34940 <ZSTD_compress@@Base+0x260f4>
   349f0:	ldr	w6, [sp, #176]
   349f4:	ldr	x8, [sp, #112]
   349f8:	add	w6, w6, #0x1
   349fc:	umaddl	x6, w6, w14, x8
   34a00:	ldr	w8, [sp, #176]
   34a04:	str	w22, [x6], #28
   34a08:	add	w8, w8, #0x1
   34a0c:	str	w8, [sp, #176]
   34a10:	cmp	w4, w8
   34a14:	b.ne	34a00 <ZSTD_compress@@Base+0x261b4>  // b.any
   34a18:	str	w4, [sp, #176]
   34a1c:	b	3496c <ZSTD_compress@@Base+0x26120>
   34a20:	sub	w0, w0, w5
   34a24:	b	335c8 <ZSTD_compress@@Base+0x24d7c>
   34a28:	ldr	x0, [sp, #112]
   34a2c:	ldr	x1, [sp, #128]
   34a30:	umaddl	x0, w10, w14, x0
   34a34:	ldp	w22, w9, [x0, #8]
   34a38:	mov	w23, w9
   34a3c:	add	x21, x1, w9, uxtw
   34a40:	cbz	w22, 34b98 <ZSTD_compress@@Base+0x2634c>
   34a44:	ldr	w11, [x0, #4]
   34a48:	cmp	w11, #0x2
   34a4c:	b.ls	34ba0 <ZSTD_compress@@Base+0x26354>  // b.plast
   34a50:	ldr	x0, [sp, #120]
   34a54:	ldr	x1, [sp, #120]
   34a58:	ldr	w0, [x0, #4]
   34a5c:	str	w0, [x1, #8]
   34a60:	ldr	w0, [x1]
   34a64:	str	w0, [x1, #4]
   34a68:	sub	w0, w11, #0x2
   34a6c:	str	w0, [x1]
   34a70:	ldr	x2, [sp, #128]
   34a74:	mov	w4, w22
   34a78:	ldr	x0, [sp, #184]
   34a7c:	mov	w3, w11
   34a80:	mov	w1, w9
   34a84:	bl	209b4 <ZSTD_compress@@Base+0x12168>
   34a88:	cmp	x21, x12
   34a8c:	sub	w5, w22, #0x3
   34a90:	b.hi	34bf0 <ZSTD_compress@@Base+0x263a4>  // b.pmore
   34a94:	ldr	x0, [sp, #160]
   34a98:	cmp	x23, #0x10
   34a9c:	ldr	x2, [x0, #24]
   34aa0:	ldr	x0, [sp, #128]
   34aa4:	ldp	x0, x1, [x0]
   34aa8:	stp	x0, x1, [x2]
   34aac:	b.ls	34b08 <ZSTD_compress@@Base+0x262bc>  // b.plast
   34ab0:	ldr	x0, [sp, #160]
   34ab4:	ldr	x3, [x0, #24]
   34ab8:	ldr	x0, [sp, #128]
   34abc:	add	x2, x3, x23
   34ac0:	add	x3, x3, #0x30
   34ac4:	ldp	x0, x1, [x0, #16]
   34ac8:	stp	x0, x1, [x3, #-32]
   34acc:	ldr	x0, [sp, #128]
   34ad0:	ldp	x0, x1, [x0, #32]
   34ad4:	stp	x0, x1, [x3, #-16]
   34ad8:	cmp	x2, x3
   34adc:	b.ls	34b08 <ZSTD_compress@@Base+0x262bc>  // b.plast
   34ae0:	ldr	x0, [sp, #128]
   34ae4:	add	x4, x0, #0x30
   34ae8:	ldp	x0, x1, [x4]
   34aec:	stp	x0, x1, [x3]
   34af0:	add	x3, x3, #0x20
   34af4:	ldp	x0, x1, [x4, #16]
   34af8:	stp	x0, x1, [x3, #-16]
   34afc:	add	x4, x4, #0x20
   34b00:	cmp	x2, x3
   34b04:	b.hi	34ae8 <ZSTD_compress@@Base+0x2629c>  // b.pmore
   34b08:	ldr	x0, [sp, #160]
   34b0c:	cmp	x23, x13
   34b10:	ldr	x1, [sp, #160]
   34b14:	ldr	x0, [x0, #24]
   34b18:	add	x0, x0, x23
   34b1c:	str	x0, [x1, #24]
   34b20:	ldr	x0, [x1, #8]
   34b24:	b.ls	34b44 <ZSTD_compress@@Base+0x262f8>  // b.plast
   34b28:	ldr	x2, [sp, #160]
   34b2c:	mov	w1, #0x1                   	// #1
   34b30:	str	w1, [x2, #72]
   34b34:	ldr	x1, [x2]
   34b38:	sub	x1, x0, x1
   34b3c:	asr	x1, x1, #3
   34b40:	str	w1, [x2, #76]
   34b44:	add	w11, w11, #0x1
   34b48:	str	w11, [x0]
   34b4c:	strh	w9, [x0, #4]
   34b50:	cmp	w5, w15
   34b54:	b.ls	34b74 <ZSTD_compress@@Base+0x26328>  // b.plast
   34b58:	ldr	x1, [sp, #160]
   34b5c:	ldr	x2, [sp, #160]
   34b60:	str	w18, [x1, #72]
   34b64:	ldr	x1, [x1]
   34b68:	sub	x1, x0, x1
   34b6c:	asr	x1, x1, #3
   34b70:	str	w1, [x2, #76]
   34b74:	ldr	x1, [sp, #160]
   34b78:	add	x0, x0, #0x8
   34b7c:	sturh	w5, [x0, #-2]
   34b80:	add	w9, w9, w22
   34b84:	str	x0, [x1, #8]
   34b88:	ldr	x0, [sp, #128]
   34b8c:	add	x0, x0, x9
   34b90:	str	x0, [sp, #128]
   34b94:	mov	x21, x0
   34b98:	add	w10, w10, #0x1
   34b9c:	b	3361c <ZSTD_compress@@Base+0x24dd0>
   34ba0:	cmp	w9, #0x0
   34ba4:	cinc	w0, w11, eq  // eq = none
   34ba8:	cbz	w0, 34a70 <ZSTD_compress@@Base+0x26224>
   34bac:	ldr	x1, [sp, #120]
   34bb0:	cmp	w0, #0x3
   34bb4:	ldr	w2, [x1]
   34bb8:	b.ne	34bd4 <ZSTD_compress@@Base+0x26388>  // b.any
   34bbc:	sub	w1, w2, #0x1
   34bc0:	ldr	x0, [sp, #120]
   34bc4:	ldr	x3, [sp, #120]
   34bc8:	ldr	w0, [x0, #4]
   34bcc:	str	w0, [x3, #8]
   34bd0:	b	34be4 <ZSTD_compress@@Base+0x26398>
   34bd4:	ldr	x1, [sp, #120]
   34bd8:	cmp	w0, #0x1
   34bdc:	ldr	w1, [x1, w0, uxtw #2]
   34be0:	b.ne	34bc0 <ZSTD_compress@@Base+0x26374>  // b.any
   34be4:	ldr	x0, [sp, #120]
   34be8:	stp	w1, w2, [x0]
   34bec:	b	34a70 <ZSTD_compress@@Base+0x26224>
   34bf0:	ldr	x0, [sp, #160]
   34bf4:	mov	x3, x12
   34bf8:	ldr	x1, [sp, #128]
   34bfc:	mov	x2, x21
   34c00:	ldr	x0, [x0, #24]
   34c04:	bl	1fe1c <ZSTD_compress@@Base+0x115d0>
   34c08:	b	34b08 <ZSTD_compress@@Base+0x262bc>
   34c0c:	ldr	w4, [x0, #652]
   34c10:	mov	w5, #0x128                 	// #296
   34c14:	ldr	w2, [x0, #648]
   34c18:	cmp	w2, w4
   34c1c:	b.cc	34c24 <ZSTD_compress@@Base+0x263d8>  // b.lo, b.ul, b.last
   34c20:	ret
   34c24:	ldr	w1, [x0, #644]
   34c28:	ldr	x3, [x0, #8]
   34c2c:	and	w1, w2, w1
   34c30:	umull	x1, w1, w5
   34c34:	add	x6, x3, x1
   34c38:	ldr	x3, [x3, x1]
   34c3c:	ldr	x1, [x6, #96]
   34c40:	cmp	x3, x1
   34c44:	b.cc	34c40 <ZSTD_compress@@Base+0x263f4>  // b.lo, b.ul, b.last
   34c48:	add	w2, w2, #0x1
   34c4c:	str	w2, [x0, #648]
   34c50:	b	34c14 <ZSTD_compress@@Base+0x263c8>
   34c54:	ldr	w1, [x0, #96]
   34c58:	cbz	w1, 34c80 <ZSTD_compress@@Base+0x26434>
   34c5c:	ldr	w0, [x0, #8]
   34c60:	mov	w1, #0x15                  	// #21
   34c64:	add	w0, w0, #0x4
   34c68:	cmp	w0, #0x15
   34c6c:	csel	w0, w0, w1, cs  // cs = hs, nlast
   34c70:	mov	w1, #0x1e                  	// #30
   34c74:	cmp	w0, #0x1e
   34c78:	csel	w0, w0, w1, ls  // ls = plast
   34c7c:	ret
   34c80:	ldr	w0, [x0, #4]
   34c84:	mov	w1, #0x14                  	// #20
   34c88:	add	w0, w0, #0x2
   34c8c:	cmp	w0, #0x14
   34c90:	b	34c6c <ZSTD_compress@@Base+0x26420>
   34c94:	mov	x2, x0
   34c98:	ldr	w0, [x0, #88]
   34c9c:	cbnz	w0, 34cbc <ZSTD_compress@@Base+0x26470>
   34ca0:	ldr	w0, [x2, #28]
   34ca4:	sub	w0, w0, #0x5
   34ca8:	cmp	w0, #0x4
   34cac:	b.hi	34d18 <ZSTD_compress@@Base+0x264cc>  // b.pmore
   34cb0:	adrp	x1, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   34cb4:	add	x1, x1, #0x6ec
   34cb8:	ldrsb	w0, [x1, w0, uxtw]
   34cbc:	mov	w3, #0x9                   	// #9
   34cc0:	sub	w3, w3, w0
   34cc4:	cmp	w3, #0x7
   34cc8:	b.gt	34d20 <ZSTD_compress@@Base+0x264d4>
   34ccc:	ldr	w1, [x2, #4]
   34cd0:	sub	w1, w1, w3
   34cd4:	ldr	w0, [x2, #96]
   34cd8:	cbz	w0, 34d28 <ZSTD_compress@@Base+0x264dc>
   34cdc:	stp	x29, x30, [sp, #-16]!
   34ce0:	mov	x0, x2
   34ce4:	mov	x29, sp
   34ce8:	bl	34c54 <ZSTD_compress@@Base+0x26408>
   34cec:	ldr	w1, [x2, #4]
   34cf0:	sub	w0, w0, #0x2
   34cf4:	cmp	w1, w0
   34cf8:	csel	w1, w1, w0, ls  // ls = plast
   34cfc:	mov	x0, #0x1                   	// #1
   34d00:	sub	w1, w1, w3
   34d04:	cmp	w1, #0x0
   34d08:	ldp	x29, x30, [sp], #16
   34d0c:	lsl	x0, x0, x1
   34d10:	csel	x0, x0, xzr, ne  // ne = any
   34d14:	ret
   34d18:	mov	w0, #0x6                   	// #6
   34d1c:	b	34cbc <ZSTD_compress@@Base+0x26470>
   34d20:	mov	w1, #0x0                   	// #0
   34d24:	b	34cd4 <ZSTD_compress@@Base+0x26488>
   34d28:	cmp	w1, #0x0
   34d2c:	mov	x0, #0x1                   	// #1
   34d30:	lsl	x0, x0, x1
   34d34:	csel	x0, x0, xzr, ne  // ne = any
   34d38:	ret
   34d3c:	cmp	x2, #0x0
   34d40:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   34d44:	b.eq	34d6c <ZSTD_compress@@Base+0x26520>  // b.none
   34d48:	add	x1, x0, x1
   34d4c:	add	x3, x2, x3
   34d50:	cmp	x0, x1
   34d54:	ccmp	x2, x3, #0x4, ne  // ne = any
   34d58:	b.eq	34d6c <ZSTD_compress@@Base+0x26520>  // b.none
   34d5c:	cmp	x0, x3
   34d60:	ccmp	x1, x2, #0x0, cc  // cc = lo, ul, last
   34d64:	cset	w0, hi  // hi = pmore
   34d68:	ret
   34d6c:	mov	w0, #0x0                   	// #0
   34d70:	b	34d68 <ZSTD_compress@@Base+0x2651c>
   34d74:	mov	x4, x0
   34d78:	ldr	w0, [x0, #136]
   34d7c:	mov	x6, x1
   34d80:	mov	x5, x2
   34d84:	cbz	w0, 34de4 <ZSTD_compress@@Base+0x26598>
   34d88:	stp	x29, x30, [sp, #-16]!
   34d8c:	mov	x29, sp
   34d90:	ldr	x7, [x4, #592]
   34d94:	mov	x1, x5
   34d98:	ldr	w3, [x4, #608]
   34d9c:	ldr	x8, [x4, #584]
   34da0:	add	x7, x7, w3, uxtw
   34da4:	ldr	w0, [x4, #612]
   34da8:	ldr	x2, [x4, #600]
   34dac:	sub	x8, x8, x7
   34db0:	sub	w3, w3, w0
   34db4:	add	x2, x2, w0, uxtw
   34db8:	mov	x0, x6
   34dbc:	bl	34d3c <ZSTD_compress@@Base+0x264f0>
   34dc0:	cbnz	w0, 34d90 <ZSTD_compress@@Base+0x26544>
   34dc4:	mov	x2, x7
   34dc8:	mov	x3, x8
   34dcc:	mov	x0, x6
   34dd0:	mov	x1, x5
   34dd4:	bl	34d3c <ZSTD_compress@@Base+0x264f0>
   34dd8:	cbnz	w0, 34d90 <ZSTD_compress@@Base+0x26544>
   34ddc:	ldp	x29, x30, [sp], #16
   34de0:	ret
   34de4:	ret
   34de8:	cbz	x1, 34e48 <ZSTD_compress@@Base+0x265fc>
   34dec:	mov	x3, x0
   34df0:	mov	x0, x1
   34df4:	ldp	w1, w4, [x3, #16]
   34df8:	cmp	w4, w1
   34dfc:	b.cs	34e20 <ZSTD_compress@@Base+0x265d4>  // b.hs, b.nlast
   34e00:	add	w1, w4, #0x1
   34e04:	ubfiz	x4, x4, #4, #32
   34e08:	add	x4, x4, #0x30
   34e0c:	str	w1, [x3, #20]
   34e10:	add	x1, x3, x4
   34e14:	str	x0, [x3, x4]
   34e18:	str	x2, [x1, #8]
   34e1c:	ret
   34e20:	stp	x29, x30, [sp, #-48]!
   34e24:	mov	x29, sp
   34e28:	ldp	x4, x5, [x3, #24]
   34e2c:	stp	x4, x5, [sp, #16]
   34e30:	ldr	x1, [x3, #40]
   34e34:	str	x1, [sp, #32]
   34e38:	add	x1, sp, #0x10
   34e3c:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   34e40:	ldp	x29, x30, [sp], #48
   34e44:	ret
   34e48:	ret
   34e4c:	stp	x29, x30, [sp, #-64]!
   34e50:	mov	x29, sp
   34e54:	stp	x19, x20, [sp, #16]
   34e58:	mov	x19, x0
   34e5c:	mov	w20, #0x0                   	// #0
   34e60:	stp	x21, x22, [sp, #32]
   34e64:	str	x23, [sp, #48]
   34e68:	mov	w23, #0x128                 	// #296
   34e6c:	ldr	x0, [x19, #8]
   34e70:	umull	x21, w20, w23
   34e74:	add	w20, w20, #0x1
   34e78:	add	x0, x0, x21
   34e7c:	ldp	x1, x2, [x0, #56]
   34e80:	ldr	x22, [x0, #16]
   34e84:	ldr	x0, [x19, #16]
   34e88:	bl	34de8 <ZSTD_compress@@Base+0x2659c>
   34e8c:	ldr	x0, [x19, #8]
   34e90:	mov	x2, #0x128                 	// #296
   34e94:	mov	w1, #0x0                   	// #0
   34e98:	add	x0, x0, x21
   34e9c:	bl	4700 <memset@plt>
   34ea0:	ldr	x0, [x19, #8]
   34ea4:	add	x0, x0, x21
   34ea8:	str	x22, [x0, #16]
   34eac:	ldr	w0, [x19, #644]
   34eb0:	cmp	w0, w20
   34eb4:	b.cs	34e6c <ZSTD_compress@@Base+0x26620>  // b.hs, b.nlast
   34eb8:	mov	w0, #0x1                   	// #1
   34ebc:	ldp	x21, x22, [sp, #32]
   34ec0:	ldr	x23, [sp, #48]
   34ec4:	stp	xzr, xzr, [x19, #224]
   34ec8:	str	xzr, [x19, #240]
   34ecc:	str	w0, [x19, #660]
   34ed0:	ldp	x19, x20, [sp, #16]
   34ed4:	ldp	x29, x30, [sp], #64
   34ed8:	ret
   34edc:	stp	x29, x30, [sp, #-176]!
   34ee0:	mov	x1, x0
   34ee4:	add	x3, sp, #0x20
   34ee8:	mov	x29, sp
   34eec:	mov	x0, x3
   34ef0:	stp	x19, x20, [sp, #16]
   34ef4:	mov	x19, x8
   34ef8:	mov	x20, #0x90                  	// #144
   34efc:	mov	x2, x20
   34f00:	bl	4460 <memcpy@plt>
   34f04:	mov	x3, x0
   34f08:	stp	xzr, xzr, [sp, #128]
   34f0c:	mov	x2, x20
   34f10:	mov	x1, x0
   34f14:	mov	x0, x19
   34f18:	str	xzr, [x3, #112]
   34f1c:	stp	xzr, xzr, [sp, #152]
   34f20:	str	xzr, [x3, #136]
   34f24:	str	wzr, [sp, #80]
   34f28:	str	wzr, [sp, #108]
   34f2c:	stp	xzr, xzr, [sp, #112]
   34f30:	bl	4460 <memcpy@plt>
   34f34:	ldp	x19, x20, [sp, #16]
   34f38:	ldp	x29, x30, [sp], #176
   34f3c:	ret
   34f40:	stp	x29, x30, [sp, #-80]!
   34f44:	mov	x29, sp
   34f48:	stp	x19, x20, [sp, #16]
   34f4c:	mov	x19, x0
   34f50:	mov	x20, #0x0                   	// #0
   34f54:	str	x21, [sp, #32]
   34f58:	add	x21, x0, #0x28
   34f5c:	ldr	w0, [x19, #4]
   34f60:	cmp	w0, w20
   34f64:	b.gt	34f94 <ZSTD_compress@@Base+0x26748>
   34f68:	ldp	x0, x1, [x19, #16]
   34f6c:	stp	x0, x1, [sp, #48]
   34f70:	ldr	x0, [x19, #32]
   34f74:	add	x1, sp, #0x30
   34f78:	str	x0, [sp, #64]
   34f7c:	mov	x0, x19
   34f80:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   34f84:	ldp	x19, x20, [sp, #16]
   34f88:	ldr	x21, [sp, #32]
   34f8c:	ldp	x29, x30, [sp], #80
   34f90:	ret
   34f94:	ldr	x0, [x21, x20, lsl #3]
   34f98:	add	x20, x20, #0x1
   34f9c:	bl	45f0 <ZSTD_freeCCtx@plt>
   34fa0:	b	34f5c <ZSTD_compress@@Base+0x26710>
   34fa4:	stp	x29, x30, [sp, #-64]!
   34fa8:	mov	x29, sp
   34fac:	ldr	w2, [x0, #20]
   34fb0:	stp	x19, x20, [sp, #16]
   34fb4:	mov	x19, x0
   34fb8:	ldr	x20, [x0, #8]
   34fbc:	cbz	w2, 35008 <ZSTD_compress@@Base+0x267bc>
   34fc0:	sub	w2, w2, #0x1
   34fc4:	add	x0, x2, #0x3
   34fc8:	add	x1, x19, x0, lsl #4
   34fcc:	lsl	x3, x0, #4
   34fd0:	ldr	x0, [x19, x3]
   34fd4:	ldr	x1, [x1, #8]
   34fd8:	str	w2, [x19, #20]
   34fdc:	add	x2, x19, x2, lsl #4
   34fe0:	cmp	x20, x1, lsr #3
   34fe4:	stp	xzr, xzr, [x2, #48]
   34fe8:	ccmp	x20, x1, #0x2, cs  // cs = hs, nlast
   34fec:	b.ls	3502c <ZSTD_compress@@Base+0x267e0>  // b.plast
   34ff0:	ldp	x2, x3, [x19, #24]
   34ff4:	stp	x2, x3, [sp, #32]
   34ff8:	ldr	x1, [x19, #40]
   34ffc:	str	x1, [sp, #48]
   35000:	add	x1, sp, #0x20
   35004:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   35008:	ldp	x0, x1, [x19, #24]
   3500c:	stp	x0, x1, [sp, #32]
   35010:	ldr	x0, [x19, #40]
   35014:	add	x1, sp, #0x20
   35018:	str	x0, [sp, #48]
   3501c:	mov	x0, x20
   35020:	bl	6b50 <ZSTD_getErrorString@@Base+0x4>
   35024:	cmp	x0, #0x0
   35028:	csel	x1, x20, xzr, ne  // ne = any
   3502c:	ldp	x19, x20, [sp, #16]
   35030:	ldp	x29, x30, [sp], #64
   35034:	ret
   35038:	stp	x29, x30, [sp, #-80]!
   3503c:	mov	x29, sp
   35040:	stp	x21, x22, [sp, #32]
   35044:	ldr	w21, [x0, #644]
   35048:	stp	x23, x24, [sp, #48]
   3504c:	mov	w24, w3
   35050:	ldr	w3, [x0, #648]
   35054:	stp	x19, x20, [sp, #16]
   35058:	mov	x19, x0
   3505c:	and	w21, w3, w21
   35060:	mov	w0, #0x128                 	// #296
   35064:	stp	x25, x26, [sp, #64]
   35068:	mov	x26, x1
   3506c:	ldr	x1, [x19, #8]
   35070:	umull	x21, w21, w0
   35074:	add	x0, x1, x21
   35078:	ldr	x20, [x0, #8]
   3507c:	cbz	w2, 350a8 <ZSTD_compress@@Base+0x2685c>
   35080:	ldr	w2, [x19, #652]
   35084:	cmp	w3, w2
   35088:	b.cs	350a8 <ZSTD_compress@@Base+0x2685c>  // b.hs, b.nlast
   3508c:	ldr	x3, [x1, x21]
   35090:	ldr	x4, [x0, #96]
   35094:	ldr	x2, [x0, #280]
   35098:	cmp	x2, x20
   3509c:	b.ne	350a8 <ZSTD_compress@@Base+0x2685c>  // b.any
   350a0:	cmp	x3, x4
   350a4:	b.ne	35098 <ZSTD_compress@@Base+0x2684c>  // b.any
   350a8:	cmn	x20, #0x78
   350ac:	b.ls	350d8 <ZSTD_compress@@Base+0x2688c>  // b.plast
   350b0:	mov	x0, x19
   350b4:	bl	34c0c <ZSTD_compress@@Base+0x263c0>
   350b8:	bl	34e4c <ZSTD_compress@@Base+0x26600>
   350bc:	mov	x0, x20
   350c0:	ldp	x19, x20, [sp, #16]
   350c4:	ldp	x21, x22, [sp, #32]
   350c8:	ldp	x23, x24, [sp, #48]
   350cc:	ldp	x25, x26, [sp, #64]
   350d0:	ldp	x29, x30, [sp], #80
   350d4:	ret
   350d8:	ldr	x23, [x1, x21]
   350dc:	ldr	x25, [x0, #96]
   350e0:	cmp	x23, x25
   350e4:	b.ne	351c8 <ZSTD_compress@@Base+0x2697c>  // b.any
   350e8:	ldr	w0, [x0, #288]
   350ec:	cbz	w0, 351c8 <ZSTD_compress@@Base+0x2697c>
   350f0:	add	x0, x19, #0x1e0
   350f4:	bl	68f8 <ZSTD_initDStream_usingDDict@plt+0x1d78>
   350f8:	ldr	x1, [x19, #8]
   350fc:	add	x20, x20, #0x4
   35100:	add	x1, x1, x21
   35104:	ldr	x2, [x1, #8]
   35108:	ldr	x3, [x1, #56]
   3510c:	str	w0, [x3, x2]
   35110:	add	x2, x2, #0x4
   35114:	str	x2, [x1, #8]
   35118:	str	wzr, [x1, #288]
   3511c:	ldr	x3, [x19, #8]
   35120:	ldp	x4, x22, [x26]
   35124:	add	x3, x3, x21
   35128:	ldr	x0, [x26, #16]
   3512c:	ldr	x1, [x3, #280]
   35130:	sub	x22, x22, x0
   35134:	add	x0, x4, x0
   35138:	sub	x2, x20, x1
   3513c:	ldr	x3, [x3, #56]
   35140:	cmp	x22, x2
   35144:	csel	x22, x22, x2, ls  // ls = plast
   35148:	mov	x2, x22
   3514c:	add	x1, x3, x1
   35150:	bl	4460 <memcpy@plt>
   35154:	ldr	x0, [x26, #16]
   35158:	cmp	x23, x25
   3515c:	add	x0, x0, x22
   35160:	str	x0, [x26, #16]
   35164:	ldr	x0, [x19, #8]
   35168:	add	x0, x0, x21
   3516c:	ldr	x2, [x0, #280]
   35170:	add	x22, x22, x2
   35174:	str	x22, [x0, #280]
   35178:	b.ne	351cc <ZSTD_compress@@Base+0x26980>  // b.any
   3517c:	cmp	x22, x20
   35180:	b.ne	351cc <ZSTD_compress@@Base+0x26980>  // b.any
   35184:	ldp	x1, x2, [x0, #56]
   35188:	ldr	x0, [x19, #16]
   3518c:	bl	34de8 <ZSTD_compress@@Base+0x2659c>
   35190:	ldr	x0, [x19, #8]
   35194:	add	x0, x0, x21
   35198:	str	xzr, [x0, #8]
   3519c:	stp	xzr, xzr, [x0, #56]
   351a0:	ldr	x0, [x19, #672]
   351a4:	add	x0, x0, x23
   351a8:	str	x0, [x19, #672]
   351ac:	ldr	x0, [x19, #680]
   351b0:	add	x0, x0, x20
   351b4:	str	x0, [x19, #680]
   351b8:	ldr	w0, [x19, #648]
   351bc:	add	w0, w0, #0x1
   351c0:	str	w0, [x19, #648]
   351c4:	b	351cc <ZSTD_compress@@Base+0x26980>
   351c8:	cbnz	x20, 3511c <ZSTD_compress@@Base+0x268d0>
   351cc:	ldr	x0, [x19, #8]
   351d0:	add	x21, x0, x21
   351d4:	ldr	x0, [x21, #280]
   351d8:	cmp	x0, x20
   351dc:	b.cs	351e8 <ZSTD_compress@@Base+0x2699c>  // b.hs, b.nlast
   351e0:	sub	x20, x20, x0
   351e4:	b	350bc <ZSTD_compress@@Base+0x26870>
   351e8:	cmp	x23, x25
   351ec:	b.cc	3522c <ZSTD_compress@@Base+0x269e0>  // b.lo, b.ul, b.last
   351f0:	ldr	w1, [x19, #648]
   351f4:	ldr	w0, [x19, #652]
   351f8:	cmp	w1, w0
   351fc:	b.cc	3522c <ZSTD_compress@@Base+0x269e0>  // b.lo, b.ul, b.last
   35200:	ldr	w0, [x19, #200]
   35204:	cbnz	w0, 3522c <ZSTD_compress@@Base+0x269e0>
   35208:	ldr	x20, [x19, #240]
   3520c:	cbnz	x20, 3522c <ZSTD_compress@@Base+0x269e0>
   35210:	ldr	w0, [x19, #656]
   35214:	cmp	w24, #0x2
   35218:	str	w0, [x19, #660]
   3521c:	b.ne	350bc <ZSTD_compress@@Base+0x26870>  // b.any
   35220:	cmp	w0, #0x0
   35224:	cset	x20, eq  // eq = none
   35228:	b	350bc <ZSTD_compress@@Base+0x26870>
   3522c:	mov	x20, #0x1                   	// #1
   35230:	b	350bc <ZSTD_compress@@Base+0x26870>
   35234:	stp	x29, x30, [sp, #-64]!
   35238:	mov	x29, sp
   3523c:	stp	x19, x20, [sp, #16]
   35240:	mov	x19, x0
   35244:	stp	x21, x22, [sp, #32]
   35248:	mov	x21, x1
   3524c:	ldr	w22, [x0, #652]
   35250:	ldr	w1, [x19, #648]
   35254:	ldr	w0, [x0, #644]
   35258:	stp	x23, x24, [sp, #48]
   3525c:	add	w1, w0, w1
   35260:	cmp	w22, w1
   35264:	b.hi	353c4 <ZSTD_compress@@Base+0x26b78>  // b.pmore
   35268:	and	w0, w22, w0
   3526c:	mov	w1, #0x128                 	// #296
   35270:	mov	w23, w2
   35274:	ldr	w2, [x19, #200]
   35278:	umull	x0, w0, w1
   3527c:	ldr	x1, [x19, #8]
   35280:	add	x20, x1, x0
   35284:	cbnz	w2, 35350 <ZSTD_compress@@Base+0x26b04>
   35288:	ldp	x2, x3, [x19, #208]
   3528c:	ldr	x24, [x19, #224]
   35290:	stp	x2, x3, [x20, #72]
   35294:	mov	x2, #0x90                  	// #144
   35298:	stp	x24, x21, [x20, #88]
   3529c:	str	xzr, [x1, x0]
   352a0:	add	x1, x19, #0x28
   352a4:	str	xzr, [x20, #8]
   352a8:	add	x0, x20, #0x78
   352ac:	bl	4460 <memcpy@plt>
   352b0:	cbnz	w22, 3537c <ZSTD_compress@@Base+0x26b30>
   352b4:	ldr	x0, [x19, #720]
   352b8:	cmp	w22, #0x0
   352bc:	ldr	x1, [x19, #32]
   352c0:	str	x0, [x20, #264]
   352c4:	ldr	x0, [x19, #664]
   352c8:	str	x0, [x20, #272]
   352cc:	ldr	x0, [x19, #24]
   352d0:	str	x0, [x20, #24]
   352d4:	ldr	x0, [x19, #16]
   352d8:	stp	x0, x1, [x20, #32]
   352dc:	add	x1, x19, #0x110
   352e0:	str	x1, [x20, #48]
   352e4:	cset	w1, eq  // eq = none
   352e8:	cmp	w23, #0x2
   352ec:	stp	xzr, xzr, [x20, #56]
   352f0:	cset	w2, eq  // eq = none
   352f4:	stp	w1, w2, [x20, #108]
   352f8:	ldr	w1, [x19, #76]
   352fc:	str	w22, [x20, #104]
   35300:	cbz	w1, 35310 <ZSTD_compress@@Base+0x26ac4>
   35304:	b.ne	35384 <ZSTD_compress@@Base+0x26b38>  // b.any
   35308:	cmp	w22, #0x0
   3530c:	cset	w1, ne  // ne = any
   35310:	str	w1, [x20, #288]
   35314:	cmp	w23, #0x2
   35318:	ldr	x1, [x19, #264]
   3531c:	str	xzr, [x20, #280]
   35320:	stp	xzr, xzr, [x19, #224]
   35324:	add	x1, x1, x21
   35328:	str	xzr, [x19, #240]
   3532c:	str	x1, [x19, #264]
   35330:	b.eq	3538c <ZSTD_compress@@Base+0x26b40>  // b.none
   35334:	ldr	x1, [x19, #192]
   35338:	cmp	x1, x21
   3533c:	csel	x1, x1, x21, ls  // ls = plast
   35340:	sub	x2, x21, x1
   35344:	add	x24, x24, x2
   35348:	stp	x24, x1, [x19, #208]
   3534c:	cbz	x21, 353a0 <ZSTD_compress@@Base+0x26b54>
   35350:	ldr	x0, [x19]
   35354:	adrp	x1, 35000 <ZSTD_compress@@Base+0x267b4>
   35358:	mov	x2, x20
   3535c:	add	x1, x1, #0x5bc
   35360:	bl	5b08 <ZSTD_initDStream_usingDDict@plt+0xf88>
   35364:	cbz	w0, 353ec <ZSTD_compress@@Base+0x26ba0>
   35368:	ldr	w0, [x19, #652]
   3536c:	str	wzr, [x19, #200]
   35370:	add	w0, w0, #0x1
   35374:	str	w0, [x19, #652]
   35378:	b	353c4 <ZSTD_compress@@Base+0x26b78>
   3537c:	mov	x0, #0x0                   	// #0
   35380:	b	352b8 <ZSTD_compress@@Base+0x26a6c>
   35384:	mov	w1, #0x0                   	// #0
   35388:	b	35310 <ZSTD_compress@@Base+0x26ac4>
   3538c:	stp	xzr, xzr, [x19, #208]
   35390:	str	w2, [x19, #656]
   35394:	cbnz	w22, 353f8 <ZSTD_compress@@Base+0x26bac>
   35398:	str	wzr, [x19, #76]
   3539c:	b	35350 <ZSTD_compress@@Base+0x26b04>
   353a0:	cbz	w22, 35350 <ZSTD_compress@@Base+0x26b04>
   353a4:	bl	34fa4 <ZSTD_compress@@Base+0x26758>
   353a8:	stp	x0, x1, [x20, #56]
   353ac:	cbnz	x0, 353dc <ZSTD_compress@@Base+0x26b90>
   353b0:	mov	x0, #0xffffffffffffffc0    	// #-64
   353b4:	str	x0, [x20, #8]
   353b8:	ldr	w0, [x19, #652]
   353bc:	add	w0, w0, #0x1
   353c0:	str	w0, [x19, #652]
   353c4:	mov	x0, #0x0                   	// #0
   353c8:	ldp	x19, x20, [sp, #16]
   353cc:	ldp	x21, x22, [sp, #32]
   353d0:	ldp	x23, x24, [sp, #48]
   353d4:	ldp	x29, x30, [sp], #64
   353d8:	ret
   353dc:	ldr	x1, [x20, #64]
   353e0:	stp	xzr, xzr, [x20, #88]
   353e4:	bl	b2c8 <ZSTD_toFlushNow@@Base+0xd68>
   353e8:	b	353b4 <ZSTD_compress@@Base+0x26b68>
   353ec:	mov	w0, #0x1                   	// #1
   353f0:	str	w0, [x19, #200]
   353f4:	b	353c4 <ZSTD_compress@@Base+0x26b78>
   353f8:	cbz	x21, 353a4 <ZSTD_compress@@Base+0x26b58>
   353fc:	b	35350 <ZSTD_compress@@Base+0x26b04>
   35400:	stp	x29, x30, [sp, #-48]!
   35404:	mov	x29, sp
   35408:	stp	x19, x20, [sp, #16]
   3540c:	mov	x19, x0
   35410:	mov	w20, w2
   35414:	str	x21, [sp, #32]
   35418:	mov	x21, x1
   3541c:	ldr	x1, [x0, #240]
   35420:	ldr	w0, [x0, #200]
   35424:	cbnz	w0, 3545c <ZSTD_compress@@Base+0x26c10>
   35428:	cbnz	x1, 3545c <ZSTD_compress@@Base+0x26c10>
   3542c:	cmp	w2, #0x2
   35430:	b.eq	35454 <ZSTD_compress@@Base+0x26c08>  // b.none
   35434:	mov	w3, w20
   35438:	mov	x1, x21
   3543c:	mov	x0, x19
   35440:	mov	w2, #0x1                   	// #1
   35444:	ldp	x19, x20, [sp, #16]
   35448:	ldr	x21, [sp, #32]
   3544c:	ldp	x29, x30, [sp], #48
   35450:	b	35038 <ZSTD_compress@@Base+0x267ec>
   35454:	ldr	w0, [x19, #656]
   35458:	cbnz	w0, 35434 <ZSTD_compress@@Base+0x26be8>
   3545c:	mov	w2, w20
   35460:	mov	x0, x19
   35464:	bl	35234 <ZSTD_compress@@Base+0x269e8>
   35468:	cmn	x0, #0x78
   3546c:	b.ls	35434 <ZSTD_compress@@Base+0x26be8>  // b.plast
   35470:	ldp	x19, x20, [sp, #16]
   35474:	ldr	x21, [sp, #32]
   35478:	ldp	x29, x30, [sp], #48
   3547c:	ret
   35480:	stp	x29, x30, [sp, #-112]!
   35484:	mov	x29, sp
   35488:	stp	x19, x20, [sp, #16]
   3548c:	mov	x20, x0
   35490:	ldr	w0, [x0, #644]
   35494:	stp	x21, x22, [sp, #32]
   35498:	add	w19, w1, #0x2
   3549c:	add	w0, w0, #0x1
   354a0:	cmp	w19, w0
   354a4:	b.ls	35520 <ZSTD_compress@@Base+0x26cd4>  // b.plast
   354a8:	ldr	x0, [x20, #8]
   354ac:	add	x21, x20, #0x2b0
   354b0:	add	x22, sp, #0x30
   354b4:	ldr	x1, [x21, #16]
   354b8:	ldp	x2, x3, [x21]
   354bc:	cbz	x0, 354d0 <ZSTD_compress@@Base+0x26c84>
   354c0:	stp	x2, x3, [sp, #48]
   354c4:	str	x1, [sp, #64]
   354c8:	mov	x1, x22
   354cc:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   354d0:	clz	w0, w19
   354d4:	eor	w0, w0, #0x1f
   354d8:	add	w0, w0, #0x1
   354dc:	ldp	x2, x3, [x21]
   354e0:	ldr	x1, [x21, #16]
   354e4:	mov	w21, #0x1                   	// #1
   354e8:	lsl	w21, w21, w0
   354ec:	mov	w0, #0x128                 	// #296
   354f0:	stp	x2, x3, [sp, #48]
   354f4:	umull	x0, w21, w0
   354f8:	str	wzr, [x20, #644]
   354fc:	str	x1, [sp, #64]
   35500:	mov	x1, x22
   35504:	bl	6b70 <ZSTD_getErrorString@@Base+0x24>
   35508:	str	x0, [x20, #8]
   3550c:	cmp	x0, #0x0
   35510:	csel	w19, w19, w21, eq  // eq = none
   35514:	cbz	x0, 35534 <ZSTD_compress@@Base+0x26ce8>
   35518:	sub	w19, w19, #0x1
   3551c:	str	w19, [x20, #644]
   35520:	mov	x0, #0x0                   	// #0
   35524:	ldp	x19, x20, [sp, #16]
   35528:	ldp	x21, x22, [sp, #32]
   3552c:	ldp	x29, x30, [sp], #112
   35530:	ret
   35534:	mov	x0, #0xffffffffffffffc0    	// #-64
   35538:	b	35524 <ZSTD_compress@@Base+0x26cd8>
   3553c:	stp	x29, x30, [sp, #-80]!
   35540:	mov	x29, sp
   35544:	stp	x19, x20, [sp, #16]
   35548:	mov	x19, x0
   3554c:	add	x20, sp, #0x30
   35550:	str	x21, [sp, #32]
   35554:	mov	w21, #0x0                   	// #0
   35558:	ldr	w0, [x19, #16]
   3555c:	ldp	x2, x3, [x19, #24]
   35560:	cmp	w21, w0
   35564:	add	x0, x19, #0x18
   35568:	b.cc	35594 <ZSTD_compress@@Base+0x26d48>  // b.lo, b.ul, b.last
   3556c:	stp	x2, x3, [sp, #48]
   35570:	mov	x1, x20
   35574:	ldr	x0, [x0, #16]
   35578:	str	x0, [sp, #64]
   3557c:	mov	x0, x19
   35580:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   35584:	ldp	x19, x20, [sp, #16]
   35588:	ldr	x21, [sp, #32]
   3558c:	ldp	x29, x30, [sp], #80
   35590:	ret
   35594:	stp	x2, x3, [x20]
   35598:	mov	x1, x20
   3559c:	ldr	x0, [x0, #16]
   355a0:	str	x0, [x20, #16]
   355a4:	ubfiz	x0, x21, #4, #32
   355a8:	add	w21, w21, #0x1
   355ac:	add	x0, x0, #0x30
   355b0:	ldr	x0, [x19, x0]
   355b4:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   355b8:	b	35558 <ZSTD_compress@@Base+0x26d0c>
   355bc:	stp	x29, x30, [sp, #-320]!
   355c0:	add	x1, x0, #0x78
   355c4:	mov	x2, #0x90                  	// #144
   355c8:	mov	x29, sp
   355cc:	stp	x19, x20, [sp, #16]
   355d0:	mov	x19, x0
   355d4:	stp	x23, x24, [sp, #48]
   355d8:	add	x23, sp, #0xb0
   355dc:	mov	x0, x23
   355e0:	stp	x21, x22, [sp, #32]
   355e4:	stp	x25, x26, [sp, #64]
   355e8:	stp	x27, x28, [sp, #80]
   355ec:	bl	4460 <memcpy@plt>
   355f0:	ldr	x1, [x19, #24]
   355f4:	ldr	w0, [x1, #8]
   355f8:	cbz	w0, 356cc <ZSTD_compress@@Base+0x26e80>
   355fc:	sub	w0, w0, #0x1
   35600:	str	w0, [x1, #8]
   35604:	add	x0, x1, w0, sxtw #3
   35608:	ldr	x21, [x0, #40]
   3560c:	ldr	x0, [x19, #40]
   35610:	ldr	x24, [x0, #8]
   35614:	cbz	x24, 356ec <ZSTD_compress@@Base+0x26ea0>
   35618:	bl	34fa4 <ZSTD_compress@@Base+0x26758>
   3561c:	mov	x25, x0
   35620:	mov	x0, #0xc                   	// #12
   35624:	udiv	x24, x1, x0
   35628:	cbnz	x21, 356f4 <ZSTD_compress@@Base+0x26ea8>
   3562c:	mov	x0, #0xffffffffffffffc0    	// #-64
   35630:	str	x0, [x19, #8]
   35634:	mov	x20, #0x0                   	// #0
   35638:	ldr	x0, [x19, #48]
   3563c:	ldr	w1, [x19, #104]
   35640:	ldr	w2, [x0, #296]
   35644:	cmp	w1, w2
   35648:	b.cc	35668 <ZSTD_compress@@Base+0x26e1c>  // b.lo, b.ul, b.last
   3564c:	add	w1, w1, #0x1
   35650:	str	w1, [x0, #296]
   35654:	add	x1, x0, #0x138
   35658:	ldr	x0, [x0, #312]
   3565c:	ldr	x2, [x1, #8]
   35660:	sub	x0, x0, x2
   35664:	stp	w0, w0, [x1, #24]
   35668:	mov	x2, #0xc                   	// #12
   3566c:	mov	x1, x25
   35670:	ldr	x0, [x19, #40]
   35674:	mul	x2, x24, x2
   35678:	bl	34de8 <ZSTD_compress@@Base+0x2659c>
   3567c:	cbz	x21, 356a0 <ZSTD_compress@@Base+0x26e54>
   35680:	ldr	x1, [x19, #24]
   35684:	ldp	w2, w0, [x1, #4]
   35688:	cmp	w0, w2
   3568c:	b.ge	359c0 <ZSTD_compress@@Base+0x27174>  // b.tcont
   35690:	add	w2, w0, #0x1
   35694:	add	x0, x1, w0, sxtw #3
   35698:	str	w2, [x1, #8]
   3569c:	str	x21, [x0, #40]
   356a0:	ldr	x0, [x19, #8]
   356a4:	ldp	x21, x22, [sp, #32]
   356a8:	add	x20, x0, x20
   356ac:	ldr	x0, [x19, #96]
   356b0:	ldp	x23, x24, [sp, #48]
   356b4:	ldp	x25, x26, [sp, #64]
   356b8:	ldp	x27, x28, [sp, #80]
   356bc:	stp	x0, x20, [x19]
   356c0:	ldp	x19, x20, [sp, #16]
   356c4:	ldp	x29, x30, [sp], #320
   356c8:	ret
   356cc:	ldp	x2, x3, [x1, #16]
   356d0:	stp	x2, x3, [sp, #112]
   356d4:	ldr	x0, [x1, #32]
   356d8:	str	x0, [sp, #128]
   356dc:	add	x0, sp, #0x70
   356e0:	bl	4500 <ZSTD_createCCtx_advanced@plt>
   356e4:	mov	x21, x0
   356e8:	b	3560c <ZSTD_compress@@Base+0x26dc0>
   356ec:	mov	x25, #0x0                   	// #0
   356f0:	b	35628 <ZSTD_compress@@Base+0x26ddc>
   356f4:	ldr	x20, [x19, #56]
   356f8:	cbz	x20, 35908 <ZSTD_compress@@Base+0x270bc>
   356fc:	ldr	x22, [x19, #64]
   35700:	ldr	w0, [sp, #272]
   35704:	cbz	w0, 3570c <ZSTD_compress@@Base+0x26ec0>
   35708:	cbz	x25, 3562c <ZSTD_compress@@Base+0x26de0>
   3570c:	ldr	w0, [x19, #104]
   35710:	cbz	w0, 35718 <ZSTD_compress@@Base+0x26ecc>
   35714:	str	wzr, [sp, #212]
   35718:	ldr	x5, [x19, #264]
   3571c:	str	wzr, [sp, #272]
   35720:	cbz	x5, 35924 <ZSTD_compress@@Base+0x270d8>
   35724:	ldr	x7, [x19, #272]
   35728:	mov	x6, x23
   3572c:	mov	w4, #0x0                   	// #0
   35730:	mov	w3, #0x0                   	// #0
   35734:	mov	x2, #0x0                   	// #0
   35738:	mov	x1, #0x0                   	// #0
   3573c:	mov	x0, x21
   35740:	bl	d248 <ZSTD_CCtxParams_init_advanced@@Base+0x9c>
   35744:	cmn	x0, #0x78
   35748:	b.hi	35630 <ZSTD_compress@@Base+0x26de4>  // b.pmore
   3574c:	ldr	x23, [x19, #48]
   35750:	stp	x25, xzr, [sp, #144]
   35754:	ldr	w1, [x19, #104]
   35758:	stp	xzr, x24, [sp, #160]
   3575c:	ldr	w0, [x23, #296]
   35760:	cmp	w1, w0
   35764:	b.hi	35760 <ZSTD_compress@@Base+0x26f14>  // b.pmore
   35768:	b.ne	35834 <ZSTD_compress@@Base+0x26fe8>  // b.any
   3576c:	ldr	w0, [x23, #104]
   35770:	ldp	x27, x28, [x19, #88]
   35774:	cbz	w0, 35818 <ZSTD_compress@@Base+0x26fcc>
   35778:	ldr	x0, [x23, #152]
   3577c:	add	x26, x23, #0x98
   35780:	cmp	x0, x27
   35784:	b.eq	357b4 <ZSTD_compress@@Base+0x26f68>  // b.none
   35788:	ldr	x2, [x26, #8]
   3578c:	str	x2, [x26, #16]
   35790:	ldr	w1, [x26, #24]
   35794:	sub	x0, x0, x2
   35798:	str	w0, [x26, #24]
   3579c:	sub	x2, x27, x0
   357a0:	str	x2, [x26, #8]
   357a4:	sub	w2, w0, w1
   357a8:	cmp	w2, #0x7
   357ac:	csel	w0, w1, w0, hi  // hi = pmore
   357b0:	str	w0, [x26, #28]
   357b4:	ldp	w1, w3, [x26, #24]
   357b8:	add	x0, x27, x28
   357bc:	ldr	x2, [x26, #16]
   357c0:	str	x0, [x23, #152]
   357c4:	mov	w4, w1
   357c8:	add	x3, x2, x3
   357cc:	add	x5, x2, w1, uxtw
   357d0:	cmp	x0, x3
   357d4:	ccmp	x5, x27, #0x0, hi  // hi = pmore
   357d8:	b.ls	357ec <ZSTD_compress@@Base+0x26fa0>  // b.plast
   357dc:	sub	x0, x0, x2
   357e0:	cmp	x0, x4
   357e4:	csel	w1, w1, w0, gt
   357e8:	str	w1, [x26, #28]
   357ec:	add	x2, x23, #0x68
   357f0:	add	x1, sp, #0x90
   357f4:	mov	x4, x28
   357f8:	mov	x3, x27
   357fc:	mov	x0, x26
   35800:	bl	1f38c <ZSTD_compress@@Base+0x10b40>
   35804:	add	x2, x23, #0x138
   35808:	ldp	x0, x1, [x23, #152]
   3580c:	stp	x0, x1, [x2]
   35810:	ldp	x0, x1, [x26, #16]
   35814:	stp	x0, x1, [x2, #16]
   35818:	ldr	w0, [x23, #44]
   3581c:	cbz	w0, 35834 <ZSTD_compress@@Base+0x26fe8>
   35820:	cbz	x28, 35834 <ZSTD_compress@@Base+0x26fe8>
   35824:	mov	x2, x28
   35828:	mov	x1, x27
   3582c:	add	x0, x23, #0xd0
   35830:	bl	6728 <ZSTD_initDStream_usingDDict@plt+0x1ba8>
   35834:	ldr	w0, [x23, #296]
   35838:	ldr	x2, [sp, #160]
   3583c:	add	w0, w0, #0x1
   35840:	str	w0, [x23, #296]
   35844:	cbz	x2, 35854 <ZSTD_compress@@Base+0x27008>
   35848:	ldr	x1, [sp, #144]
   3584c:	mov	x0, x21
   35850:	bl	b2ec <ZSTD_toFlushNow@@Base+0xd8c>
   35854:	ldr	w0, [x19, #108]
   35858:	cbnz	w0, 35884 <ZSTD_compress@@Base+0x27038>
   3585c:	ldr	x3, [x19, #88]
   35860:	mov	x2, x22
   35864:	mov	x1, x20
   35868:	mov	x0, x21
   3586c:	mov	x4, #0x0                   	// #0
   35870:	bl	4ae0 <ZSTD_compressContinue@plt>
   35874:	cmn	x0, #0x78
   35878:	b.hi	35630 <ZSTD_compress@@Base+0x26de4>  // b.pmore
   3587c:	mov	x0, x21
   35880:	bl	a568 <ZSTD_toFlushNow@@Base+0x8>
   35884:	ldp	x5, x23, [x19, #88]
   35888:	mov	x0, #0x7ffff               	// #524287
   3588c:	add	x22, x20, x22
   35890:	mov	x26, #0x0                   	// #0
   35894:	add	x23, x23, x0
   35898:	lsr	x23, x23, #19
   3589c:	mov	w28, w23
   358a0:	add	w0, w26, #0x1
   358a4:	lsl	x27, x26, #19
   358a8:	add	x3, x5, x26, lsl #19
   358ac:	cmp	w28, w0
   358b0:	b.gt	35970 <ZSTD_compress@@Base+0x27124>
   358b4:	ldr	w1, [x19, #112]
   358b8:	cmp	w23, #0x0
   358bc:	cset	w0, gt
   358c0:	orr	w0, w0, w1
   358c4:	cbz	w0, 35634 <ZSTD_compress@@Base+0x26de8>
   358c8:	ldr	x0, [x19, #96]
   358cc:	mov	x2, #0x7ffff               	// #524287
   358d0:	ands	x4, x0, #0x7ffff
   358d4:	ccmp	x0, x2, #0x0, eq  // eq = none
   358d8:	mov	x0, #0x80000               	// #524288
   358dc:	sub	x2, x22, x20
   358e0:	csel	x4, x4, x0, ls  // ls = plast
   358e4:	cbz	w1, 359b0 <ZSTD_compress@@Base+0x27164>
   358e8:	mov	x1, x20
   358ec:	mov	x0, x21
   358f0:	bl	4540 <ZSTD_compressEnd@plt>
   358f4:	mov	x20, x0
   358f8:	cmn	x0, #0x78
   358fc:	b.ls	35638 <ZSTD_compress@@Base+0x26dec>  // b.plast
   35900:	str	x0, [x19, #8]
   35904:	b	35634 <ZSTD_compress@@Base+0x26de8>
   35908:	ldr	x0, [x19, #32]
   3590c:	bl	34fa4 <ZSTD_compress@@Base+0x26758>
   35910:	mov	x22, x1
   35914:	mov	x20, x0
   35918:	cbz	x0, 3562c <ZSTD_compress@@Base+0x26de0>
   3591c:	stp	x0, x1, [x19, #56]
   35920:	b	35700 <ZSTD_compress@@Base+0x26eb4>
   35924:	ldr	w0, [x19, #108]
   35928:	cbz	w0, 35968 <ZSTD_compress@@Base+0x2711c>
   3592c:	ldr	x26, [x19, #272]
   35930:	cmp	w0, #0x0
   35934:	cset	w2, eq  // eq = none
   35938:	mov	x0, x23
   3593c:	mov	w1, #0x3e8                 	// #1000
   35940:	bl	4850 <ZSTD_CCtxParams_setParameter@plt>
   35944:	cmn	x0, #0x78
   35948:	b.hi	35630 <ZSTD_compress@@Base+0x26de4>  // b.pmore
   3594c:	mov	x7, x26
   35950:	mov	x6, x23
   35954:	mov	x5, #0x0                   	// #0
   35958:	mov	w4, #0x0                   	// #0
   3595c:	mov	w3, #0x1                   	// #1
   35960:	ldp	x1, x2, [x19, #72]
   35964:	b	3573c <ZSTD_compress@@Base+0x26ef0>
   35968:	ldr	x26, [x19, #96]
   3596c:	b	35930 <ZSTD_compress@@Base+0x270e4>
   35970:	sub	x2, x22, x20
   35974:	mov	x1, x20
   35978:	mov	x0, x21
   3597c:	mov	x4, #0x80000               	// #524288
   35980:	str	x5, [sp, #104]
   35984:	bl	4ae0 <ZSTD_compressContinue@plt>
   35988:	add	x26, x26, #0x1
   3598c:	cmn	x0, #0x78
   35990:	ldr	x5, [sp, #104]
   35994:	b.hi	35630 <ZSTD_compress@@Base+0x26de4>  // b.pmore
   35998:	ldr	x1, [x19, #8]
   3599c:	add	x20, x20, x0
   359a0:	add	x27, x27, #0x80, lsl #12
   359a4:	add	x0, x1, x0
   359a8:	stp	x27, x0, [x19]
   359ac:	b	358a0 <ZSTD_compress@@Base+0x27054>
   359b0:	mov	x1, x20
   359b4:	mov	x0, x21
   359b8:	bl	4ae0 <ZSTD_compressContinue@plt>
   359bc:	b	358f4 <ZSTD_compress@@Base+0x270a8>
   359c0:	mov	x0, x21
   359c4:	bl	45f0 <ZSTD_freeCCtx@plt>
   359c8:	b	356a0 <ZSTD_compress@@Base+0x26e54>
   359cc:	stp	x29, x30, [sp, #-112]!
   359d0:	mov	x29, sp
   359d4:	ldp	x4, x5, [x0, #24]
   359d8:	stp	x19, x20, [sp, #16]
   359dc:	mov	w19, w1
   359e0:	ldr	x1, [x0, #40]
   359e4:	stp	x4, x5, [sp, #64]
   359e8:	str	x1, [sp, #80]
   359ec:	ldr	x20, [x0, #8]
   359f0:	bl	3553c <ZSTD_compress@@Base+0x26cf0>
   359f4:	ldp	x2, x3, [sp, #64]
   359f8:	lsl	w1, w19, #1
   359fc:	ldr	x0, [sp, #80]
   35a00:	str	x0, [sp, #48]
   35a04:	str	x0, [sp, #104]
   35a08:	add	w0, w1, #0x2
   35a0c:	add	x0, x0, #0x4
   35a10:	add	w19, w1, #0x3
   35a14:	add	x1, sp, #0x20
   35a18:	stp	x2, x3, [sp, #32]
   35a1c:	lsl	x0, x0, #4
   35a20:	stp	x2, x3, [sp, #88]
   35a24:	bl	6b70 <ZSTD_getErrorString@@Base+0x24>
   35a28:	cbz	x0, 35a44 <ZSTD_compress@@Base+0x271f8>
   35a2c:	ldp	x2, x3, [sp, #88]
   35a30:	str	x20, [x0, #8]
   35a34:	ldr	x1, [sp, #104]
   35a38:	stp	w19, wzr, [x0, #16]
   35a3c:	stp	x2, x3, [x0, #24]
   35a40:	str	x1, [x0, #40]
   35a44:	ldp	x19, x20, [sp, #16]
   35a48:	ldp	x29, x30, [sp], #112
   35a4c:	ret
   35a50:	stp	x29, x30, [sp, #-192]!
   35a54:	mov	x29, sp
   35a58:	stp	x21, x22, [sp, #32]
   35a5c:	mov	x22, x2
   35a60:	mov	x21, x3
   35a64:	stp	x19, x20, [sp, #16]
   35a68:	mov	x19, x0
   35a6c:	ldr	w0, [x22, #96]!
   35a70:	stp	x23, x24, [sp, #48]
   35a74:	mov	x20, x2
   35a78:	stp	x25, x26, [sp, #64]
   35a7c:	mov	x26, x1
   35a80:	stp	x27, x28, [sp, #80]
   35a84:	cbz	w0, 35c34 <ZSTD_compress@@Base+0x273e8>
   35a88:	add	x1, x2, #0x4
   35a8c:	mov	x0, x22
   35a90:	bl	1f2a4 <ZSTD_compress@@Base+0x10a58>
   35a94:	ldr	w0, [x20, #108]
   35a98:	mov	x1, #0x6463                	// #25699
   35a9c:	movk	x1, #0xb7a5, lsl #16
   35aa0:	mov	x2, #0x1                   	// #1
   35aa4:	movk	x1, #0xbcdc, lsl #32
   35aa8:	sub	w0, w0, #0x1
   35aac:	movk	x1, #0xcf1b, lsl #48
   35ab0:	cbnz	x0, 35c20 <ZSTD_compress@@Base+0x273d4>
   35ab4:	str	x2, [x19, #200]
   35ab8:	ldr	w0, [x20, #36]
   35abc:	str	wzr, [x19, #296]
   35ac0:	cbz	w0, 35ad0 <ZSTD_compress@@Base+0x27284>
   35ac4:	add	x0, x19, #0xd0
   35ac8:	mov	x1, #0x0                   	// #0
   35acc:	bl	63ec <ZSTD_initDStream_usingDDict@plt+0x186c>
   35ad0:	ldr	w0, [x20, #96]
   35ad4:	cbz	w0, 35c5c <ZSTD_compress@@Base+0x27410>
   35ad8:	ldp	x0, x1, [x20, #120]
   35adc:	stp	x0, x1, [sp, #168]
   35ae0:	ldr	w27, [x19, #108]
   35ae4:	ldr	x0, [x20, #136]
   35ae8:	str	x0, [sp, #184]
   35aec:	ldr	w0, [x19, #112]
   35af0:	mov	x24, #0x8                   	// #8
   35af4:	ldp	w28, w25, [x20, #100]
   35af8:	sub	w27, w27, w0
   35afc:	ldp	x0, x1, [x20, #96]
   35b00:	stp	x0, x1, [sp, #128]
   35b04:	sub	w25, w28, w25
   35b08:	ldr	x0, [x22, #16]
   35b0c:	mov	x1, x21
   35b10:	str	x0, [sp, #144]
   35b14:	add	x0, sp, #0x80
   35b18:	bl	1f370 <ZSTD_compress@@Base+0x10b24>
   35b1c:	mov	x23, #0x1                   	// #1
   35b20:	mov	x1, #0xc                   	// #12
   35b24:	lsl	x24, x24, x28
   35b28:	lsl	x23, x23, x25
   35b2c:	mul	x0, x0, x1
   35b30:	ldp	x1, x2, [x19, #152]
   35b34:	sub	x1, x1, x2
   35b38:	ldp	x2, x3, [x19, #152]
   35b3c:	str	x0, [x26, #8]
   35b40:	stp	w1, w1, [x19, #176]
   35b44:	add	x1, x19, #0x138
   35b48:	ldr	x0, [x19, #184]
   35b4c:	stp	x2, x3, [x1]
   35b50:	ldp	x2, x3, [x19, #168]
   35b54:	stp	x2, x3, [x1, #16]
   35b58:	cbz	x0, 35b68 <ZSTD_compress@@Base+0x2731c>
   35b5c:	ldr	w1, [x19, #108]
   35b60:	cmp	w1, w28
   35b64:	b.cs	35ba4 <ZSTD_compress@@Base+0x27358>  // b.hs, b.nlast
   35b68:	ldp	x2, x3, [sp, #168]
   35b6c:	add	x22, sp, #0x60
   35b70:	ldr	x1, [sp, #184]
   35b74:	stp	x2, x3, [sp, #96]
   35b78:	str	x1, [sp, #112]
   35b7c:	mov	x1, x22
   35b80:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   35b84:	ldp	x0, x1, [sp, #168]
   35b88:	stp	x0, x1, [sp, #96]
   35b8c:	ldr	x0, [sp, #184]
   35b90:	mov	x1, x22
   35b94:	str	x0, [sp, #112]
   35b98:	mov	x0, x24
   35b9c:	bl	6b50 <ZSTD_getErrorString@@Base+0x4>
   35ba0:	str	x0, [x19, #184]
   35ba4:	ldr	x0, [x19, #192]
   35ba8:	cbz	x0, 35bb4 <ZSTD_compress@@Base+0x27368>
   35bac:	cmp	w25, w27
   35bb0:	b.ls	35bf0 <ZSTD_compress@@Base+0x273a4>  // b.plast
   35bb4:	ldp	x2, x3, [sp, #168]
   35bb8:	add	x22, sp, #0x60
   35bbc:	ldr	x1, [sp, #184]
   35bc0:	stp	x2, x3, [sp, #96]
   35bc4:	str	x1, [sp, #112]
   35bc8:	mov	x1, x22
   35bcc:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   35bd0:	ldp	x0, x1, [sp, #168]
   35bd4:	stp	x0, x1, [sp, #96]
   35bd8:	ldr	x0, [sp, #184]
   35bdc:	mov	x1, x22
   35be0:	str	x0, [sp, #112]
   35be4:	mov	x0, x23
   35be8:	bl	6b50 <ZSTD_getErrorString@@Base+0x4>
   35bec:	str	x0, [x19, #192]
   35bf0:	ldr	x0, [x19, #184]
   35bf4:	cbz	x0, 35c00 <ZSTD_compress@@Base+0x273b4>
   35bf8:	ldr	x1, [x19, #192]
   35bfc:	cbnz	x1, 35c40 <ZSTD_compress@@Base+0x273f4>
   35c00:	mov	w0, #0x1                   	// #1
   35c04:	ldp	x19, x20, [sp, #16]
   35c08:	ldp	x21, x22, [sp, #32]
   35c0c:	ldp	x23, x24, [sp, #48]
   35c10:	ldp	x25, x26, [sp, #64]
   35c14:	ldp	x27, x28, [sp, #80]
   35c18:	ldp	x29, x30, [sp], #192
   35c1c:	ret
   35c20:	tbz	w0, #0, 35c28 <ZSTD_compress@@Base+0x273dc>
   35c24:	mul	x2, x2, x1
   35c28:	mul	x1, x1, x1
   35c2c:	lsr	x0, x0, #1
   35c30:	b	35ab0 <ZSTD_compress@@Base+0x27264>
   35c34:	stp	xzr, xzr, [x2, #96]
   35c38:	str	xzr, [x22, #16]
   35c3c:	b	35ab8 <ZSTD_compress@@Base+0x2726c>
   35c40:	mov	x2, x24
   35c44:	mov	w1, #0x0                   	// #0
   35c48:	bl	4700 <memset@plt>
   35c4c:	ldr	x0, [x19, #192]
   35c50:	mov	x2, x23
   35c54:	mov	w1, #0x0                   	// #0
   35c58:	bl	4700 <memset@plt>
   35c5c:	mov	x1, x20
   35c60:	add	x0, x19, #0x8
   35c64:	mov	x2, #0x90                  	// #144
   35c68:	bl	4460 <memcpy@plt>
   35c6c:	and	x21, x21, #0xffffffff
   35c70:	mov	w0, #0x0                   	// #0
   35c74:	str	x21, [x19, #88]
   35c78:	b	35c04 <ZSTD_compress@@Base+0x273b8>
   35c7c:	sub	sp, sp, #0x200
   35c80:	stp	x29, x30, [sp]
   35c84:	mov	x29, sp
   35c88:	stp	x27, x28, [sp, #80]
   35c8c:	add	x28, sp, #0x170
   35c90:	mov	x8, x28
   35c94:	stp	x21, x22, [sp, #32]
   35c98:	mov	x22, x6
   35c9c:	mov	x27, x5
   35ca0:	stp	x19, x20, [sp, #16]
   35ca4:	mov	x19, x0
   35ca8:	mov	x0, x6
   35cac:	stp	x23, x24, [sp, #48]
   35cb0:	mov	x24, x2
   35cb4:	mov	x23, x4
   35cb8:	stp	x25, x26, [sp, #64]
   35cbc:	mov	x25, x1
   35cc0:	mov	x26, x3
   35cc4:	bl	34edc <ZSTD_compress@@Base+0x26690>
   35cc8:	mov	x0, x22
   35ccc:	bl	34c94 <ZSTD_compress@@Base+0x26448>
   35cd0:	ldr	w20, [x22, #76]
   35cd4:	str	x0, [sp, #128]
   35cd8:	mov	x0, x22
   35cdc:	bl	34c54 <ZSTD_compress@@Base+0x26408>
   35ce0:	mov	w2, w20
   35ce4:	mov	x1, #0x4                   	// #4
   35ce8:	lsl	x1, x1, x0
   35cec:	mul	x1, x1, x2
   35cf0:	udiv	x1, x23, x1
   35cf4:	add	w1, w1, #0x1
   35cf8:	cmp	w1, #0x1
   35cfc:	b.ls	35dc0 <ZSTD_compress@@Base+0x27574>  // b.plast
   35d00:	mul	w20, w20, w1
   35d04:	sub	w0, w20, #0x1
   35d08:	str	w0, [sp, #116]
   35d0c:	mov	x1, #0x7ffe                	// #32766
   35d10:	add	x21, x23, w0, uxtw
   35d14:	mov	w0, w20
   35d18:	udiv	x21, x21, x0
   35d1c:	sub	x0, x21, #0x1
   35d20:	and	x0, x0, #0x1ffff
   35d24:	cmp	x0, x1
   35d28:	b.hi	35d34 <ZSTD_compress@@Base+0x274e8>  // b.pmore
   35d2c:	mov	x0, #0xffff                	// #65535
   35d30:	add	x21, x21, x0
   35d34:	mov	x0, x23
   35d38:	bl	4980 <ZSTD_compressBound@plt>
   35d3c:	cmp	x0, x24
   35d40:	b.ls	35dd4 <ZSTD_compress@@Base+0x27588>  // b.plast
   35d44:	mov	x0, x21
   35d48:	bl	4980 <ZSTD_compressBound@plt>
   35d4c:	udiv	x0, x24, x0
   35d50:	str	x0, [sp, #104]
   35d54:	and	x0, x21, #0xffffffff
   35d58:	str	x0, [x22, #80]
   35d5c:	ldr	w0, [x22, #76]
   35d60:	cmp	w0, #0x1
   35d64:	ccmp	w20, #0x1, #0x4, gt
   35d68:	b.ne	35e00 <ZSTD_compress@@Base+0x275b4>  // b.any
   35d6c:	ldr	x0, [x19, #24]
   35d70:	ldr	x0, [x0, #40]
   35d74:	cbz	x27, 35ddc <ZSTD_compress@@Base+0x27590>
   35d78:	ldr	w7, [sp, #408]
   35d7c:	mov	x5, x27
   35d80:	ldr	x6, [sp, #400]
   35d84:	mov	x4, x23
   35d88:	mov	x3, x26
   35d8c:	mov	x2, x24
   35d90:	mov	x1, x25
   35d94:	bl	45d0 <ZSTD_compress_usingCDict_advanced@plt>
   35d98:	mov	x3, x0
   35d9c:	mov	x0, x3
   35da0:	ldp	x29, x30, [sp]
   35da4:	ldp	x19, x20, [sp, #16]
   35da8:	ldp	x21, x22, [sp, #32]
   35dac:	ldp	x23, x24, [sp, #48]
   35db0:	ldp	x25, x26, [sp, #64]
   35db4:	ldp	x27, x28, [sp, #80]
   35db8:	add	sp, sp, #0x200
   35dbc:	ret
   35dc0:	lsr	x0, x23, x0
   35dc4:	add	w0, w0, #0x1
   35dc8:	cmp	w0, w20
   35dcc:	csel	w20, w0, w20, ls  // ls = plast
   35dd0:	b	35d04 <ZSTD_compress@@Base+0x274b8>
   35dd4:	str	w20, [sp, #104]
   35dd8:	b	35d54 <ZSTD_compress@@Base+0x27508>
   35ddc:	mov	x7, x28
   35de0:	mov	x4, x23
   35de4:	mov	x3, x26
   35de8:	mov	x2, x24
   35dec:	mov	x1, x25
   35df0:	mov	x6, #0x0                   	// #0
   35df4:	mov	x5, #0x0                   	// #0
   35df8:	bl	be98 <ZSTD_compressEnd@@Base+0x124>
   35dfc:	b	35d98 <ZSTD_compress@@Base+0x2754c>
   35e00:	ldr	x1, [x19, #16]
   35e04:	mov	x0, x21
   35e08:	str	x1, [sp, #120]
   35e0c:	bl	4980 <ZSTD_compressBound@plt>
   35e10:	ldr	x1, [sp, #120]
   35e14:	add	x4, sp, #0xe0
   35e18:	mov	x2, #0x90                  	// #144
   35e1c:	str	x0, [x1, #8]
   35e20:	add	x0, x19, #0x110
   35e24:	mov	x1, x22
   35e28:	str	x0, [sp, #120]
   35e2c:	mov	x0, x4
   35e30:	bl	4460 <memcpy@plt>
   35e34:	ldr	x1, [x19, #32]
   35e38:	mov	x2, x0
   35e3c:	mov	x3, x21
   35e40:	add	x0, x19, #0x110
   35e44:	bl	35a50 <ZSTD_compress@@Base+0x27204>
   35e48:	cbnz	w0, 360c0 <ZSTD_compress@@Base+0x27874>
   35e4c:	mov	w1, w20
   35e50:	mov	x0, x19
   35e54:	bl	35480 <ZSTD_compress@@Base+0x26c34>
   35e58:	mov	x3, x0
   35e5c:	cmn	x0, #0x78
   35e60:	b.hi	35d9c <ZSTD_compress@@Base+0x27550>  // b.pmore
   35e64:	mov	x6, x23
   35e68:	adrp	x0, 35000 <ZSTD_compress@@Base+0x267b4>
   35e6c:	mov	x4, #0x0                   	// #0
   35e70:	add	x0, x0, #0x5bc
   35e74:	mov	x10, #0x0                   	// #0
   35e78:	mov	x7, #0x0                   	// #0
   35e7c:	str	x0, [sp, #136]
   35e80:	mov	w5, w4
   35e84:	cmp	w20, w4
   35e88:	b.hi	35edc <ZSTD_compress@@Base+0x27690>  // b.pmore
   35e8c:	mov	x27, #0x0                   	// #0
   35e90:	mov	x3, #0x0                   	// #0
   35e94:	mov	x28, #0x0                   	// #0
   35e98:	mov	w5, w27
   35e9c:	cmp	w20, w27
   35ea0:	b.hi	3601c <ZSTD_compress@@Base+0x277d0>  // b.pmore
   35ea4:	ldr	w0, [x22, #36]
   35ea8:	cbz	w0, 35ed0 <ZSTD_compress@@Base+0x27684>
   35eac:	add	x0, x19, #0x1e0
   35eb0:	str	x3, [sp, #104]
   35eb4:	bl	68f8 <ZSTD_initDStream_usingDDict@plt+0x1d78>
   35eb8:	ldr	x3, [sp, #104]
   35ebc:	add	x1, x3, #0x4
   35ec0:	cmp	x1, x24
   35ec4:	b.hi	360c8 <ZSTD_compress@@Base+0x2787c>  // b.pmore
   35ec8:	str	w0, [x25, x3]
   35ecc:	mov	x3, x1
   35ed0:	cmp	x28, #0x0
   35ed4:	csel	x3, x3, x28, eq  // eq = none
   35ed8:	b	35d9c <ZSTD_compress@@Base+0x27550>
   35edc:	cmp	x6, x21
   35ee0:	stp	x7, x10, [sp, #160]
   35ee4:	csel	x8, x6, x21, ls  // ls = plast
   35ee8:	mov	x0, x8
   35eec:	stp	x8, x6, [sp, #144]
   35ef0:	str	w5, [sp, #176]
   35ef4:	str	x4, [sp, #184]
   35ef8:	bl	4980 <ZSTD_compressBound@plt>
   35efc:	ldr	x4, [sp, #184]
   35f00:	mov	x9, x0
   35f04:	ldr	w0, [sp, #104]
   35f08:	ldr	w5, [sp, #176]
   35f0c:	cmp	w0, w4
   35f10:	ldp	x8, x6, [sp, #144]
   35f14:	ldp	x7, x10, [sp, #160]
   35f18:	b.ls	36010 <ZSTD_compress@@Base+0x277c4>  // b.plast
   35f1c:	add	x12, x25, x10
   35f20:	mov	x11, x9
   35f24:	ldr	x0, [sp, #128]
   35f28:	cmp	w5, #0x0
   35f2c:	ldr	x2, [x19, #8]
   35f30:	csel	x13, x0, xzr, ne  // ne = any
   35f34:	mov	x0, #0x128                 	// #296
   35f38:	str	w5, [sp, #152]
   35f3c:	stp	x8, x7, [sp, #160]
   35f40:	mul	x1, x4, x0
   35f44:	sub	x0, x7, x13
   35f48:	stp	x4, x6, [sp, #176]
   35f4c:	add	x3, x2, x1
   35f50:	add	x0, x26, x0
   35f54:	str	x3, [sp, #144]
   35f58:	stp	x10, x12, [sp, #192]
   35f5c:	stp	x0, x13, [x3, #72]
   35f60:	add	x0, x26, x7
   35f64:	str	x0, [x3, #88]
   35f68:	csel	x0, x27, xzr, eq  // eq = none
   35f6c:	str	x8, [x3, #96]
   35f70:	str	xzr, [x2, x1]
   35f74:	mov	x1, x28
   35f78:	str	xzr, [x3, #8]
   35f7c:	mov	x2, #0x90                  	// #144
   35f80:	stp	x0, x23, [x3, #264]
   35f84:	add	x0, x3, #0x78
   35f88:	stp	x11, x9, [sp, #208]
   35f8c:	bl	4460 <memcpy@plt>
   35f90:	ldr	w5, [sp, #152]
   35f94:	ldp	x1, x3, [sp, #136]
   35f98:	cmp	w5, #0x0
   35f9c:	ldr	x0, [x19, #24]
   35fa0:	ldp	x12, x11, [sp, #200]
   35fa4:	str	x0, [x3, #24]
   35fa8:	mov	x2, x3
   35fac:	ldr	x0, [x19, #16]
   35fb0:	str	x0, [x3, #32]
   35fb4:	ldr	x0, [x19, #32]
   35fb8:	str	x0, [x3, #40]
   35fbc:	ldr	x0, [sp, #120]
   35fc0:	str	x0, [x3, #48]
   35fc4:	cset	w0, eq  // eq = none
   35fc8:	str	w0, [x3, #108]
   35fcc:	ldr	w0, [sp, #116]
   35fd0:	stp	x12, x11, [x3, #56]
   35fd4:	cmp	w0, w5
   35fd8:	cset	w0, eq  // eq = none
   35fdc:	str	w0, [x3, #112]
   35fe0:	ldr	x0, [x19]
   35fe4:	str	w5, [x3, #104]
   35fe8:	bl	5afc <ZSTD_initDStream_usingDDict@plt+0xf7c>
   35fec:	ldp	x8, x7, [sp, #160]
   35ff0:	ldp	x4, x6, [sp, #176]
   35ff4:	ldr	x10, [sp, #192]
   35ff8:	ldr	x9, [sp, #216]
   35ffc:	add	x7, x7, x8
   36000:	sub	x6, x6, x8
   36004:	add	x4, x4, #0x1
   36008:	add	x10, x10, x9
   3600c:	b	35e80 <ZSTD_compress@@Base+0x27634>
   36010:	mov	x11, #0x0                   	// #0
   36014:	mov	x12, #0x0                   	// #0
   36018:	b	35f24 <ZSTD_compress@@Base+0x276d8>
   3601c:	mov	x0, #0x128                 	// #296
   36020:	ldr	x1, [x19, #8]
   36024:	mul	x26, x27, x0
   36028:	add	x0, x1, x26
   3602c:	ldr	x2, [x1, x26]
   36030:	ldr	x1, [x0, #96]
   36034:	cmp	x2, x1
   36038:	b.cc	36034 <ZSTD_compress@@Base+0x277e8>  // b.lo, b.ul, b.last
   3603c:	ldr	x21, [x0, #8]
   36040:	add	x23, x3, x21
   36044:	cmn	x21, #0x78
   36048:	b.hi	360d4 <ZSTD_compress@@Base+0x27888>  // b.pmore
   3604c:	cbnz	x28, 360d0 <ZSTD_compress@@Base+0x27884>
   36050:	cmp	x24, x23
   36054:	b.cc	360dc <ZSTD_compress@@Base+0x27890>  // b.lo, b.ul, b.last
   36058:	cbnz	w5, 36064 <ZSTD_compress@@Base+0x27818>
   3605c:	mov	x21, #0x0                   	// #0
   36060:	b	360a0 <ZSTD_compress@@Base+0x27854>
   36064:	ldr	x1, [x0, #56]
   36068:	mov	x2, x21
   3606c:	add	x0, x25, x3
   36070:	str	w5, [sp, #116]
   36074:	mov	x21, #0x0                   	// #0
   36078:	bl	4490 <memmove@plt>
   3607c:	ldr	w5, [sp, #116]
   36080:	ldr	w0, [sp, #104]
   36084:	cmp	w0, w5
   36088:	b.hi	360a0 <ZSTD_compress@@Base+0x27854>  // b.pmore
   3608c:	ldr	x0, [x19, #8]
   36090:	add	x0, x0, x26
   36094:	ldp	x1, x2, [x0, #56]
   36098:	ldr	x0, [x19, #16]
   3609c:	bl	34de8 <ZSTD_compress@@Base+0x2659c>
   360a0:	ldr	x0, [x19, #8]
   360a4:	add	x27, x27, #0x1
   360a8:	mov	x3, x23
   360ac:	mov	x28, x21
   360b0:	add	x0, x0, x26
   360b4:	str	xzr, [x0, #8]
   360b8:	stp	xzr, xzr, [x0, #56]
   360bc:	b	35e98 <ZSTD_compress@@Base+0x2764c>
   360c0:	mov	x3, #0xffffffffffffffc0    	// #-64
   360c4:	b	35d9c <ZSTD_compress@@Base+0x27550>
   360c8:	mov	x3, #0xffffffffffffffba    	// #-70
   360cc:	b	35d9c <ZSTD_compress@@Base+0x27550>
   360d0:	mov	x21, x28
   360d4:	cbnz	w5, 36080 <ZSTD_compress@@Base+0x27834>
   360d8:	b	360a0 <ZSTD_compress@@Base+0x27854>
   360dc:	mov	x21, #0xffffffffffffffba    	// #-70
   360e0:	b	360d4 <ZSTD_compress@@Base+0x27888>
   360e4:	mov	w2, w1
   360e8:	mov	w1, #0x190                 	// #400
   360ec:	b	4850 <ZSTD_CCtxParams_setParameter@plt>
   360f0:	mov	x0, #0x0                   	// #0
   360f4:	ret
   360f8:	mov	x0, #0x0                   	// #0
   360fc:	ret
   36100:	cbz	x0, 36208 <ZSTD_compress@@Base+0x279bc>
   36104:	stp	x29, x30, [sp, #-112]!
   36108:	mov	x29, sp
   3610c:	stp	x19, x20, [sp, #16]
   36110:	mov	x19, x0
   36114:	add	x20, x0, #0x2b0
   36118:	ldr	x0, [x0]
   3611c:	stp	x21, x22, [sp, #32]
   36120:	add	x21, sp, #0x30
   36124:	bl	5af0 <ZSTD_initDStream_usingDDict@plt+0xf70>
   36128:	mov	x0, x19
   3612c:	bl	34e4c <ZSTD_compress@@Base+0x26600>
   36130:	ldr	x0, [x19, #8]
   36134:	ldp	x2, x3, [x20]
   36138:	ldr	x1, [x20, #16]
   3613c:	cbz	x0, 36150 <ZSTD_compress@@Base+0x27904>
   36140:	stp	x2, x3, [sp, #48]
   36144:	str	x1, [sp, #64]
   36148:	mov	x1, x21
   3614c:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   36150:	ldr	x0, [x19, #16]
   36154:	cbz	x0, 3615c <ZSTD_compress@@Base+0x27910>
   36158:	bl	3553c <ZSTD_compress@@Base+0x26cf0>
   3615c:	ldr	x0, [x19, #24]
   36160:	bl	34f40 <ZSTD_compress@@Base+0x266f4>
   36164:	ldr	x0, [x19, #32]
   36168:	cbz	x0, 36170 <ZSTD_compress@@Base+0x27924>
   3616c:	bl	3553c <ZSTD_compress@@Base+0x26cf0>
   36170:	ldp	x2, x3, [x19, #400]
   36174:	mov	x1, x21
   36178:	ldr	x0, [x19, #416]
   3617c:	stp	x2, x3, [sp, #48]
   36180:	str	x0, [sp, #64]
   36184:	str	x0, [sp, #104]
   36188:	ldr	x0, [x19, #456]
   3618c:	stp	x2, x3, [sp, #88]
   36190:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   36194:	ldp	x0, x1, [sp, #88]
   36198:	stp	x0, x1, [sp, #48]
   3619c:	ldr	x0, [sp, #104]
   361a0:	str	x0, [sp, #64]
   361a4:	mov	x1, x21
   361a8:	ldr	x0, [x19, #464]
   361ac:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   361b0:	ldr	x0, [x19, #712]
   361b4:	bl	45c0 <ZSTD_freeCDict@plt>
   361b8:	ldr	x0, [x19, #248]
   361bc:	cbz	x0, 361d8 <ZSTD_compress@@Base+0x2798c>
   361c0:	ldp	x2, x3, [x20]
   361c4:	stp	x2, x3, [sp, #48]
   361c8:	ldr	x1, [x20, #16]
   361cc:	str	x1, [sp, #64]
   361d0:	mov	x1, x21
   361d4:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   361d8:	ldp	x0, x1, [x20]
   361dc:	stp	x0, x1, [sp, #48]
   361e0:	ldr	x0, [x20, #16]
   361e4:	mov	x1, x21
   361e8:	str	x0, [sp, #64]
   361ec:	mov	x0, x19
   361f0:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   361f4:	mov	x0, #0x0                   	// #0
   361f8:	ldp	x19, x20, [sp, #16]
   361fc:	ldp	x21, x22, [sp, #32]
   36200:	ldp	x29, x30, [sp], #112
   36204:	ret
   36208:	mov	x0, #0x0                   	// #0
   3620c:	ret
   36210:	cbz	x0, 36330 <ZSTD_compress@@Base+0x27ae4>
   36214:	stp	x29, x30, [sp, #-96]!
   36218:	mov	x29, sp
   3621c:	stp	x19, x20, [sp, #16]
   36220:	mov	x19, x0
   36224:	ldr	x0, [x0]
   36228:	stp	x21, x22, [sp, #32]
   3622c:	stp	x23, x24, [sp, #48]
   36230:	stp	x25, x26, [sp, #64]
   36234:	mov	x26, #0x0                   	// #0
   36238:	stp	x27, x28, [sp, #80]
   3623c:	bl	5b24 <ZSTD_initDStream_usingDDict@plt+0xfa4>
   36240:	ldr	x2, [x19, #16]
   36244:	ldr	w3, [x2, #16]
   36248:	sub	w28, w3, #0x1
   3624c:	add	x3, x2, w3, uxtw #4
   36250:	cmp	x2, x3
   36254:	b.ne	362fc <ZSTD_compress@@Base+0x27ab0>  // b.any
   36258:	ldr	w1, [x19, #644]
   3625c:	mov	w21, #0x128                 	// #296
   36260:	mov	x24, #0x0                   	// #0
   36264:	mov	x22, #0x0                   	// #0
   36268:	add	w1, w1, #0x1
   3626c:	umaddl	x21, w1, w21, x0
   36270:	ldr	x0, [x19, #24]
   36274:	add	x25, x0, #0x28
   36278:	ldr	w27, [x0, #4]
   3627c:	sub	w23, w27, #0x1
   36280:	add	x23, x23, #0x6
   36284:	lsl	x23, x23, #3
   36288:	cmp	w27, w24
   3628c:	b.hi	3630c <ZSTD_compress@@Base+0x27ac0>  // b.pmore
   36290:	ldr	x0, [x19, #32]
   36294:	add	x22, x22, x26
   36298:	ldr	w2, [x0, #16]
   3629c:	sub	w20, w2, #0x1
   362a0:	add	x20, x20, x28
   362a4:	add	x2, x0, w2, uxtw #4
   362a8:	add	x1, x20, #0x8
   362ac:	add	x20, x23, x1, lsl #4
   362b0:	mov	x23, #0x0                   	// #0
   362b4:	cmp	x2, x0
   362b8:	b.ne	36320 <ZSTD_compress@@Base+0x27ad4>  // b.any
   362bc:	ldr	x0, [x19, #712]
   362c0:	bl	4860 <ZSTD_sizeof_CDict@plt>
   362c4:	add	x0, x0, x23
   362c8:	ldr	x1, [x19, #256]
   362cc:	ldp	x23, x24, [sp, #48]
   362d0:	add	x1, x1, #0x2d8
   362d4:	add	x1, x1, x20
   362d8:	add	x1, x1, x21
   362dc:	add	x1, x1, x22
   362e0:	add	x0, x1, x0
   362e4:	ldp	x19, x20, [sp, #16]
   362e8:	ldp	x21, x22, [sp, #32]
   362ec:	ldp	x25, x26, [sp, #64]
   362f0:	ldp	x27, x28, [sp, #80]
   362f4:	ldp	x29, x30, [sp], #96
   362f8:	ret
   362fc:	ldr	x1, [x2, #56]
   36300:	add	x2, x2, #0x10
   36304:	add	x26, x26, x1
   36308:	b	36250 <ZSTD_compress@@Base+0x27a04>
   3630c:	ldr	x0, [x25, x24, lsl #3]
   36310:	add	x24, x24, #0x1
   36314:	bl	47a0 <ZSTD_sizeof_CCtx@plt>
   36318:	add	x22, x22, x0
   3631c:	b	36288 <ZSTD_compress@@Base+0x27a3c>
   36320:	ldr	x1, [x0, #56]
   36324:	add	x0, x0, #0x10
   36328:	add	x23, x23, x1
   3632c:	b	362b4 <ZSTD_compress@@Base+0x27a68>
   36330:	mov	x0, #0x0                   	// #0
   36334:	ret
   36338:	cmp	w1, #0x1
   3633c:	b.eq	36354 <ZSTD_compress@@Base+0x27b08>  // b.none
   36340:	cmp	w1, #0x2
   36344:	b.eq	3635c <ZSTD_compress@@Base+0x27b10>  // b.none
   36348:	cbnz	w1, 36364 <ZSTD_compress@@Base+0x27b18>
   3634c:	mov	w1, #0x191                 	// #401
   36350:	b	4850 <ZSTD_CCtxParams_setParameter@plt>
   36354:	mov	w1, #0x192                 	// #402
   36358:	b	36350 <ZSTD_compress@@Base+0x27b04>
   3635c:	mov	w1, #0x1f4                 	// #500
   36360:	b	36350 <ZSTD_compress@@Base+0x27b04>
   36364:	mov	x0, #0xffffffffffffffd8    	// #-40
   36368:	ret
   3636c:	add	x0, x0, #0x28
   36370:	b	36338 <ZSTD_compress@@Base+0x27aec>
   36374:	cmp	w1, #0x1
   36378:	b.eq	36394 <ZSTD_compress@@Base+0x27b48>  // b.none
   3637c:	cmp	w1, #0x2
   36380:	b.eq	3639c <ZSTD_compress@@Base+0x27b50>  // b.none
   36384:	cbnz	w1, 363a4 <ZSTD_compress@@Base+0x27b58>
   36388:	mov	w1, #0x191                 	// #401
   3638c:	add	x0, x0, #0x28
   36390:	b	46c0 <ZSTD_CCtxParams_getParameter@plt>
   36394:	mov	w1, #0x192                 	// #402
   36398:	b	3638c <ZSTD_compress@@Base+0x27b40>
   3639c:	mov	w1, #0x1f4                 	// #500
   363a0:	b	3638c <ZSTD_compress@@Base+0x27b40>
   363a4:	mov	x0, #0xffffffffffffffd8    	// #-40
   363a8:	ret
   363ac:	stp	x29, x30, [sp, #-64]!
   363b0:	mov	x2, #0x0                   	// #0
   363b4:	mov	x29, sp
   363b8:	stp	x19, x20, [sp, #16]
   363bc:	mov	x19, x0
   363c0:	mov	x0, x1
   363c4:	ldr	w1, [x1, #44]
   363c8:	add	x8, sp, #0x20
   363cc:	str	w1, [x19, #84]
   363d0:	add	x19, x19, #0x2c
   363d4:	ldr	w20, [x19]
   363d8:	mov	x1, #0x0                   	// #0
   363dc:	bl	d798 <ZSTD_getCParams@@Base+0xcc>
   363e0:	str	w20, [sp, #32]
   363e4:	ldp	x0, x1, [sp, #32]
   363e8:	stp	x0, x1, [x19]
   363ec:	ldr	x0, [sp, #48]
   363f0:	str	x0, [x19, #16]
   363f4:	ldr	w0, [sp, #56]
   363f8:	str	w0, [x19, #24]
   363fc:	ldp	x19, x20, [sp, #16]
   36400:	ldp	x29, x30, [sp], #64
   36404:	ret
   36408:	ldr	x2, [x0, #240]
   3640c:	mov	w11, #0x0                   	// #0
   36410:	ldr	x3, [x0, #672]
   36414:	mov	w15, #0x128                 	// #296
   36418:	ldr	x4, [x0, #680]
   3641c:	add	x2, x3, x2
   36420:	ldr	w7, [x0, #200]
   36424:	ldr	w13, [x0, #652]
   36428:	mov	x10, x4
   3642c:	ldr	w5, [x0, #648]
   36430:	add	w7, w13, w7
   36434:	cmp	w5, w7
   36438:	b.cc	3644c <ZSTD_compress@@Base+0x27c00>  // b.lo, b.ul, b.last
   3643c:	stp	x2, x3, [x8]
   36440:	stp	x4, x10, [x8, #16]
   36444:	stp	w13, w11, [x8, #32]
   36448:	ret
   3644c:	ldr	w1, [x0, #644]
   36450:	ldr	x14, [x0, #8]
   36454:	and	w1, w5, w1
   36458:	umull	x1, w1, w15
   3645c:	add	x6, x14, x1
   36460:	ldr	x9, [x6, #8]
   36464:	cmn	x9, #0x78
   36468:	b.ls	3649c <ZSTD_compress@@Base+0x27c50>  // b.plast
   3646c:	mov	x9, #0x0                   	// #0
   36470:	mov	x12, #0x0                   	// #0
   36474:	ldr	x1, [x14, x1]
   36478:	add	x4, x4, x9
   3647c:	ldr	x6, [x6, #96]
   36480:	add	x3, x3, x1
   36484:	add	x10, x10, x12
   36488:	add	w5, w5, #0x1
   3648c:	cmp	x6, x1
   36490:	add	x2, x2, x6
   36494:	cinc	w11, w11, hi  // hi = pmore
   36498:	b	36434 <ZSTD_compress@@Base+0x27be8>
   3649c:	ldr	x12, [x6, #280]
   364a0:	b	36474 <ZSTD_compress@@Base+0x27c28>
   364a4:	ldr	w1, [x0, #648]
   364a8:	ldr	w2, [x0, #652]
   364ac:	cmp	w2, w1
   364b0:	b.eq	364e4 <ZSTD_compress@@Base+0x27c98>  // b.none
   364b4:	ldr	w2, [x0, #644]
   364b8:	ldr	x0, [x0, #8]
   364bc:	and	w1, w1, w2
   364c0:	mov	w2, #0x128                 	// #296
   364c4:	umaddl	x1, w1, w2, x0
   364c8:	ldr	x0, [x1, #8]
   364cc:	cmn	x0, #0x78
   364d0:	b.ls	364ec <ZSTD_compress@@Base+0x27ca0>  // b.plast
   364d4:	mov	x0, #0x0                   	// #0
   364d8:	mov	x1, #0x0                   	// #0
   364dc:	sub	x0, x0, x1
   364e0:	ret
   364e4:	mov	x0, #0x0                   	// #0
   364e8:	b	364e0 <ZSTD_compress@@Base+0x27c94>
   364ec:	ldr	x1, [x1, #280]
   364f0:	b	364dc <ZSTD_compress@@Base+0x27c90>
   364f4:	stp	x29, x30, [sp, #-384]!
   364f8:	mov	x29, sp
   364fc:	add	x8, sp, #0xf0
   36500:	stp	x19, x20, [sp, #16]
   36504:	mov	x19, x6
   36508:	mov	x20, x0
   3650c:	stp	x21, x22, [sp, #32]
   36510:	mov	x21, x1
   36514:	mov	x22, x2
   36518:	add	x1, x0, #0x28
   3651c:	mov	x0, x8
   36520:	stp	x23, x24, [sp, #48]
   36524:	mov	x23, x3
   36528:	mov	x24, x4
   3652c:	stp	x25, x26, [sp, #64]
   36530:	mov	w26, w7
   36534:	mov	x25, x5
   36538:	str	x27, [sp, #80]
   3653c:	mov	x27, #0x90                  	// #144
   36540:	mov	x2, x27
   36544:	bl	4460 <memcpy@plt>
   36548:	add	x2, sp, #0x4
   3654c:	mov	x8, x0
   36550:	ldp	x0, x1, [x19]
   36554:	add	x6, sp, #0x60
   36558:	stp	x0, x1, [x2, #240]
   3655c:	mov	x2, x27
   36560:	add	x1, sp, #0x200
   36564:	ldr	x0, [x19, #16]
   36568:	str	w26, [sp, #328]
   3656c:	stur	x0, [x1, #-252]
   36570:	mov	x1, x8
   36574:	ldr	w0, [x19, #24]
   36578:	str	w0, [sp, #268]
   3657c:	ldur	x0, [x19, #28]
   36580:	str	x0, [sp, #272]
   36584:	ldr	w0, [x19, #36]
   36588:	str	w0, [sp, #280]
   3658c:	mov	x0, x6
   36590:	bl	4460 <memcpy@plt>
   36594:	mov	x6, x0
   36598:	mov	x5, x25
   3659c:	mov	x4, x24
   365a0:	mov	x3, x23
   365a4:	mov	x2, x22
   365a8:	mov	x1, x21
   365ac:	mov	x0, x20
   365b0:	bl	35c7c <ZSTD_compress@@Base+0x27430>
   365b4:	ldp	x19, x20, [sp, #16]
   365b8:	ldp	x21, x22, [sp, #32]
   365bc:	ldp	x23, x24, [sp, #48]
   365c0:	ldp	x25, x26, [sp, #64]
   365c4:	ldr	x27, [sp, #80]
   365c8:	ldp	x29, x30, [sp], #384
   365cc:	ret
   365d0:	stp	x29, x30, [sp, #-160]!
   365d4:	mov	x29, sp
   365d8:	add	x8, sp, #0x78
   365dc:	stp	x19, x20, [sp, #16]
   365e0:	mov	x19, x4
   365e4:	mov	x20, x0
   365e8:	mov	w0, w5
   365ec:	stp	x21, x22, [sp, #32]
   365f0:	mov	x21, x1
   365f4:	mov	x22, x2
   365f8:	mov	x1, x4
   365fc:	mov	x2, #0x0                   	// #0
   36600:	str	x23, [sp, #48]
   36604:	mov	x23, x3
   36608:	bl	4a70 <ZSTD_getParams@plt>
   3660c:	ldr	w4, [sp, #144]
   36610:	sub	w4, w4, #0x5
   36614:	cmp	w4, #0x4
   36618:	b.hi	3667c <ZSTD_compress@@Base+0x27e30>  // b.pmore
   3661c:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   36620:	add	x0, x0, #0x6ec
   36624:	ldrsb	w7, [x0, w4, uxtw]
   36628:	mov	w0, #0x1                   	// #1
   3662c:	str	w0, [sp, #148]
   36630:	ldp	x0, x1, [sp, #120]
   36634:	stp	x0, x1, [sp, #64]
   36638:	add	x6, sp, #0x40
   3663c:	ldp	x0, x1, [sp, #136]
   36640:	stp	x0, x1, [sp, #80]
   36644:	mov	x4, x19
   36648:	ldr	x0, [sp, #152]
   3664c:	mov	x3, x23
   36650:	mov	x2, x22
   36654:	mov	x1, x21
   36658:	mov	x5, #0x0                   	// #0
   3665c:	str	x0, [sp, #96]
   36660:	mov	x0, x20
   36664:	bl	364f4 <ZSTD_compress@@Base+0x27ca8>
   36668:	ldp	x19, x20, [sp, #16]
   3666c:	ldp	x21, x22, [sp, #32]
   36670:	ldr	x23, [sp, #48]
   36674:	ldp	x29, x30, [sp], #160
   36678:	ret
   3667c:	mov	w7, #0x6                   	// #6
   36680:	b	36628 <ZSTD_compress@@Base+0x27ddc>
   36684:	stp	x29, x30, [sp, #-496]!
   36688:	mov	x29, sp
   3668c:	stp	x19, x20, [sp, #16]
   36690:	mov	x19, x0
   36694:	ldr	w0, [x0, #116]
   36698:	stp	x21, x22, [sp, #32]
   3669c:	mov	x21, x5
   366a0:	ldr	w22, [x5, #76]
   366a4:	stp	x23, x24, [sp, #48]
   366a8:	mov	x24, x1
   366ac:	mov	x23, x6
   366b0:	stp	x25, x26, [sp, #64]
   366b4:	cmp	w22, w0
   366b8:	mov	x26, x2
   366bc:	stp	x27, x28, [sp, #80]
   366c0:	mov	x25, x4
   366c4:	mov	w28, w3
   366c8:	b.eq	36818 <ZSTD_compress@@Base+0x27fcc>  // b.none
   366cc:	ldr	x0, [x19]
   366d0:	mov	w1, w22
   366d4:	bl	5af4 <ZSTD_initDStream_usingDDict@plt+0xf74>
   366d8:	cbz	w0, 366e4 <ZSTD_compress@@Base+0x27e98>
   366dc:	mov	x0, #0xffffffffffffffc0    	// #-64
   366e0:	b	36884 <ZSTD_compress@@Base+0x28038>
   366e4:	mov	w1, w22
   366e8:	mov	x0, x19
   366ec:	bl	35480 <ZSTD_compress@@Base+0x26c34>
   366f0:	cmn	x0, #0x78
   366f4:	b.hi	36884 <ZSTD_compress@@Base+0x28038>  // b.pmore
   366f8:	ldr	x0, [x19, #16]
   366fc:	lsl	w27, w22, #1
   36700:	add	w27, w27, #0x3
   36704:	cbz	x0, 366dc <ZSTD_compress@@Base+0x27e90>
   36708:	ldr	w1, [x0, #16]
   3670c:	cmp	w27, w1
   36710:	b.ls	3671c <ZSTD_compress@@Base+0x27ed0>  // b.plast
   36714:	mov	w1, w22
   36718:	bl	359cc <ZSTD_compress@@Base+0x27180>
   3671c:	str	x0, [x19, #16]
   36720:	cbz	x0, 366dc <ZSTD_compress@@Base+0x27e90>
   36724:	ldr	x20, [x19, #24]
   36728:	cbz	x20, 366dc <ZSTD_compress@@Base+0x27e90>
   3672c:	ldr	w0, [x20, #4]
   36730:	cmp	w22, w0
   36734:	b.le	367e0 <ZSTD_compress@@Base+0x27f94>
   36738:	ldp	x0, x1, [x20, #16]
   3673c:	add	x2, sp, #0x210
   36740:	stp	x0, x1, [x2, #-200]
   36744:	ldr	x0, [x20, #32]
   36748:	str	x0, [sp, #344]
   3674c:	mov	x0, x20
   36750:	bl	34f40 <ZSTD_compress@@Base+0x266f4>
   36754:	add	x0, sp, #0x210
   36758:	add	x1, sp, #0x120
   3675c:	str	x1, [sp, #104]
   36760:	ldp	x2, x3, [x0, #-200]
   36764:	stp	x2, x3, [sp, #288]
   36768:	ldr	x0, [sp, #344]
   3676c:	str	x0, [sp, #304]
   36770:	str	x0, [sp, #368]
   36774:	sub	w0, w22, #0x1
   36778:	stp	x2, x3, [sp, #352]
   3677c:	sxtw	x0, w0
   36780:	add	x0, x0, #0x6
   36784:	lsl	x0, x0, #3
   36788:	bl	6b70 <ZSTD_getErrorString@@Base+0x24>
   3678c:	mov	x20, x0
   36790:	cbz	x0, 367e0 <ZSTD_compress@@Base+0x27f94>
   36794:	ldp	x2, x3, [sp, #352]
   36798:	stp	x2, x3, [x0, #16]
   3679c:	ldr	x0, [sp, #368]
   367a0:	str	x0, [x20, #32]
   367a4:	ldr	x1, [sp, #104]
   367a8:	mov	w0, #0x1                   	// #1
   367ac:	ldp	x2, x3, [sp, #352]
   367b0:	str	w22, [x20, #4]
   367b4:	str	w0, [x20, #8]
   367b8:	ldr	x0, [sp, #368]
   367bc:	stp	x2, x3, [sp, #288]
   367c0:	str	x0, [sp, #304]
   367c4:	mov	x0, x1
   367c8:	bl	4500 <ZSTD_createCCtx_advanced@plt>
   367cc:	str	x0, [x20, #40]
   367d0:	cbnz	x0, 367e0 <ZSTD_compress@@Base+0x27f94>
   367d4:	mov	x0, x20
   367d8:	mov	x20, #0x0                   	// #0
   367dc:	bl	34f40 <ZSTD_compress@@Base+0x266f4>
   367e0:	str	x20, [x19, #24]
   367e4:	cbz	x20, 366dc <ZSTD_compress@@Base+0x27e90>
   367e8:	ldr	x0, [x19, #32]
   367ec:	cbz	x0, 366dc <ZSTD_compress@@Base+0x27e90>
   367f0:	ldr	w1, [x0, #16]
   367f4:	cmp	w27, w1
   367f8:	b.ls	36804 <ZSTD_compress@@Base+0x27fb8>  // b.plast
   367fc:	mov	w1, w22
   36800:	bl	359cc <ZSTD_compress@@Base+0x27180>
   36804:	str	x0, [x19, #32]
   36808:	cbz	x0, 366dc <ZSTD_compress@@Base+0x27e90>
   3680c:	mov	w1, w22
   36810:	add	x0, x19, #0x28
   36814:	bl	360e4 <ZSTD_compress@@Base+0x27898>
   36818:	ldr	x1, [x21, #80]
   3681c:	mov	x0, #0xffffe               	// #1048574
   36820:	sub	x2, x1, #0x1
   36824:	cmp	x2, x0
   36828:	b.hi	36838 <ZSTD_compress@@Base+0x27fec>  // b.pmore
   3682c:	mov	x0, #0x100000              	// #1048576
   36830:	str	x0, [x21, #80]
   36834:	b	36844 <ZSTD_compress@@Base+0x27ff8>
   36838:	mov	x0, #0x40000000            	// #1073741824
   3683c:	cmp	x1, x0
   36840:	b.hi	36830 <ZSTD_compress@@Base+0x27fe4>  // b.pmore
   36844:	cmp	x23, #0x100, lsl #12
   36848:	cset	w0, ls  // ls = plast
   3684c:	str	w0, [x19, #640]
   36850:	b.hi	368a0 <ZSTD_compress@@Base+0x28054>  // b.pmore
   36854:	add	x20, sp, #0x160
   36858:	mov	x0, x21
   3685c:	mov	x8, x20
   36860:	bl	34edc <ZSTD_compress@@Base+0x26690>
   36864:	ldr	x0, [x19, #24]
   36868:	mov	x5, x23
   3686c:	mov	x4, x20
   36870:	mov	x3, x25
   36874:	mov	x2, x26
   36878:	mov	x1, x24
   3687c:	ldr	x0, [x0, #40]
   36880:	bl	c824 <ZSTD_resetCStream@@Base+0x4c>
   36884:	ldp	x19, x20, [sp, #16]
   36888:	ldp	x21, x22, [sp, #32]
   3688c:	ldp	x23, x24, [sp, #48]
   36890:	ldp	x25, x26, [sp, #64]
   36894:	ldp	x27, x28, [sp, #80]
   36898:	ldp	x29, x30, [sp], #496
   3689c:	ret
   368a0:	ldr	w0, [x19, #660]
   368a4:	cbnz	w0, 368bc <ZSTD_compress@@Base+0x28070>
   368a8:	mov	x0, x19
   368ac:	bl	34c0c <ZSTD_compress@@Base+0x263c0>
   368b0:	bl	34e4c <ZSTD_compress@@Base+0x26600>
   368b4:	mov	w0, #0x1                   	// #1
   368b8:	str	w0, [x19, #660]
   368bc:	mov	x1, x21
   368c0:	add	x0, x19, #0x28
   368c4:	mov	x2, #0x90                  	// #144
   368c8:	bl	4460 <memcpy@plt>
   368cc:	str	x23, [x19, #664]
   368d0:	ldr	x0, [x19, #712]
   368d4:	cbz	x24, 36a88 <ZSTD_compress@@Base+0x2823c>
   368d8:	bl	45c0 <ZSTD_freeCDict@plt>
   368dc:	add	x0, x21, #0x4
   368e0:	add	x5, sp, #0x120
   368e4:	add	x4, sp, #0x100
   368e8:	ldp	x2, x3, [x0]
   368ec:	stp	x2, x3, [sp, #256]
   368f0:	ldr	w0, [x21, #28]
   368f4:	ldur	x1, [x21, #20]
   368f8:	str	w0, [sp, #280]
   368fc:	add	x0, x19, #0x2b0
   36900:	str	x1, [sp, #272]
   36904:	mov	x1, x26
   36908:	ldp	x2, x3, [x0]
   3690c:	stp	x2, x3, [sp, #288]
   36910:	ldr	x0, [x19, #704]
   36914:	mov	w3, w28
   36918:	mov	w2, #0x0                   	// #0
   3691c:	str	x0, [sp, #304]
   36920:	mov	x0, x24
   36924:	bl	4810 <ZSTD_createCDict_advanced@plt>
   36928:	str	x0, [x19, #712]
   3692c:	str	x0, [x19, #720]
   36930:	cbz	x0, 366dc <ZSTD_compress@@Base+0x27e90>
   36934:	mov	x0, x21
   36938:	bl	34c94 <ZSTD_compress@@Base+0x26448>
   3693c:	mov	x3, x0
   36940:	ldr	x0, [x21, #80]
   36944:	stp	x0, x3, [x19, #184]
   36948:	cbnz	x0, 36960 <ZSTD_compress@@Base+0x28114>
   3694c:	mov	x0, x21
   36950:	bl	34c54 <ZSTD_compress@@Base+0x26408>
   36954:	mov	x1, #0x1                   	// #1
   36958:	lsl	x1, x1, x0
   3695c:	str	x1, [x19, #184]
   36960:	ldr	w0, [x21, #92]
   36964:	ldr	x5, [x19, #184]
   36968:	cbz	w0, 369c8 <ZSTD_compress@@Base+0x2817c>
   3696c:	lsr	x1, x5, #20
   36970:	mov	x0, #0x6463                	// #25699
   36974:	clz	w1, w1
   36978:	mov	x2, #0x1                   	// #1
   3697c:	eor	w1, w1, #0x1f
   36980:	movk	x0, #0xb7a5, lsl #16
   36984:	add	w1, w1, #0x14
   36988:	movk	x0, #0xbcdc, lsl #32
   3698c:	mov	w4, #0x5                   	// #5
   36990:	movk	x0, #0xcf1b, lsl #48
   36994:	lsl	x1, x2, x1
   36998:	sub	x1, x1, #0x1
   3699c:	str	xzr, [x19, #616]
   369a0:	str	x1, [x19, #624]
   369a4:	mov	x1, x2
   369a8:	mov	x2, #0x1f                  	// #31
   369ac:	tbz	w2, #0, 369b4 <ZSTD_compress@@Base+0x28168>
   369b0:	mul	x1, x1, x0
   369b4:	mul	x0, x0, x0
   369b8:	lsr	x2, x2, #1
   369bc:	subs	w4, w4, #0x1
   369c0:	b.ne	369ac <ZSTD_compress@@Base+0x28160>  // b.any
   369c4:	str	x1, [x19, #632]
   369c8:	cmp	x3, x5
   369cc:	b.ls	369d4 <ZSTD_compress@@Base+0x28188>  // b.plast
   369d0:	str	x3, [x19, #184]
   369d4:	ldr	x0, [x19, #184]
   369d8:	ldr	x20, [x19, #16]
   369dc:	bl	4980 <ZSTD_compressBound@plt>
   369e0:	str	x0, [x20, #8]
   369e4:	ldr	w0, [x19, #136]
   369e8:	cbz	w0, 36a98 <ZSTD_compress@@Base+0x2824c>
   369ec:	ldr	w0, [x19, #44]
   369f0:	mov	w1, #0x1                   	// #1
   369f4:	lsl	w0, w1, w0
   369f8:	ldp	x20, x1, [x19, #184]
   369fc:	ldr	w2, [x19, #116]
   36a00:	cmp	x1, #0x0
   36a04:	cset	x3, ne  // ne = any
   36a08:	cmp	w2, #0x0
   36a0c:	csinc	w2, w2, wzr, gt
   36a10:	add	x3, x3, #0x2
   36a14:	sxtw	x2, w2
   36a18:	mul	x1, x2, x20
   36a1c:	cmp	x1, x0
   36a20:	csel	x1, x1, x0, cs  // cs = hs, nlast
   36a24:	ldr	x0, [x19, #256]
   36a28:	madd	x20, x20, x3, x1
   36a2c:	cmp	x0, x20
   36a30:	b.cs	36aa4 <ZSTD_compress@@Base+0x28258>  // b.hs, b.nlast
   36a34:	ldr	x0, [x19, #248]
   36a38:	add	x23, sp, #0x120
   36a3c:	add	x22, x19, #0x2b0
   36a40:	cbz	x0, 36a5c <ZSTD_compress@@Base+0x28210>
   36a44:	ldp	x2, x3, [x22]
   36a48:	stp	x2, x3, [sp, #288]
   36a4c:	ldr	x1, [x22, #16]
   36a50:	str	x1, [sp, #304]
   36a54:	mov	x1, x23
   36a58:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   36a5c:	ldp	x0, x1, [x22]
   36a60:	stp	x0, x1, [sp, #288]
   36a64:	ldr	x0, [x22, #16]
   36a68:	mov	x1, x23
   36a6c:	str	x0, [sp, #304]
   36a70:	mov	x0, x20
   36a74:	bl	6b50 <ZSTD_getErrorString@@Base+0x4>
   36a78:	str	x0, [x19, #248]
   36a7c:	cbnz	x0, 36aa0 <ZSTD_compress@@Base+0x28254>
   36a80:	str	xzr, [x19, #256]
   36a84:	b	366dc <ZSTD_compress@@Base+0x27e90>
   36a88:	bl	45c0 <ZSTD_freeCDict@plt>
   36a8c:	str	xzr, [x19, #712]
   36a90:	str	x25, [x19, #720]
   36a94:	b	36934 <ZSTD_compress@@Base+0x280e8>
   36a98:	mov	x0, #0x0                   	// #0
   36a9c:	b	369f8 <ZSTD_compress@@Base+0x281ac>
   36aa0:	str	x20, [x19, #256]
   36aa4:	add	x3, x19, #0x288
   36aa8:	add	x4, sp, #0x70
   36aac:	stp	xzr, xzr, [x19, #208]
   36ab0:	mov	x1, x21
   36ab4:	mov	x2, #0x90                  	// #144
   36ab8:	stp	xzr, xzr, [x19, #224]
   36abc:	mov	x0, x4
   36ac0:	str	xzr, [x19, #240]
   36ac4:	str	xzr, [x19, #264]
   36ac8:	stp	xzr, xzr, [x3]
   36acc:	stp	xzr, xzr, [x3, #24]
   36ad0:	bl	4460 <memcpy@plt>
   36ad4:	mov	x2, x0
   36ad8:	ldr	x1, [x19, #32]
   36adc:	add	x0, x19, #0x110
   36ae0:	ldr	x3, [x19, #184]
   36ae4:	bl	35a50 <ZSTD_compress@@Base+0x27204>
   36ae8:	cbnz	w0, 366dc <ZSTD_compress@@Base+0x27e90>
   36aec:	mov	x0, #0x0                   	// #0
   36af0:	b	36884 <ZSTD_compress@@Base+0x28038>
   36af4:	stp	x29, x30, [sp, #-352]!
   36af8:	mov	x29, sp
   36afc:	stp	x19, x20, [sp, #16]
   36b00:	mov	x19, x3
   36b04:	add	x3, sp, #0xd0
   36b08:	mov	x20, x0
   36b0c:	stp	x21, x22, [sp, #32]
   36b10:	mov	x21, x1
   36b14:	mov	x22, x2
   36b18:	add	x1, x0, #0x28
   36b1c:	mov	x0, x3
   36b20:	stp	x23, x24, [sp, #48]
   36b24:	mov	x23, x4
   36b28:	mov	x24, #0x90                  	// #144
   36b2c:	mov	x2, x24
   36b30:	bl	4460 <memcpy@plt>
   36b34:	mov	x3, x0
   36b38:	add	x2, sp, #0x4
   36b3c:	add	x5, sp, #0x40
   36b40:	ldp	x0, x1, [x19]
   36b44:	stp	x0, x1, [x2, #208]
   36b48:	mov	x2, x24
   36b4c:	mov	x1, x3
   36b50:	ldr	x0, [x19, #16]
   36b54:	stur	x0, [sp, #228]
   36b58:	ldr	w0, [x19, #24]
   36b5c:	str	w0, [sp, #236]
   36b60:	ldur	x0, [x19, #28]
   36b64:	str	x0, [sp, #240]
   36b68:	ldr	w0, [x19, #36]
   36b6c:	str	w0, [sp, #248]
   36b70:	mov	x0, x5
   36b74:	bl	4460 <memcpy@plt>
   36b78:	mov	x5, x0
   36b7c:	mov	x6, x23
   36b80:	mov	x2, x22
   36b84:	mov	x1, x21
   36b88:	mov	x0, x20
   36b8c:	mov	x4, #0x0                   	// #0
   36b90:	mov	w3, #0x0                   	// #0
   36b94:	bl	36684 <ZSTD_compress@@Base+0x27e38>
   36b98:	ldp	x19, x20, [sp, #16]
   36b9c:	ldp	x21, x22, [sp, #32]
   36ba0:	ldp	x23, x24, [sp, #48]
   36ba4:	ldp	x29, x30, [sp], #352
   36ba8:	ret
   36bac:	stp	x29, x30, [sp, #-352]!
   36bb0:	mov	x29, sp
   36bb4:	stp	x21, x22, [sp, #32]
   36bb8:	add	x22, sp, #0xd0
   36bbc:	mov	x21, x4
   36bc0:	stp	x19, x20, [sp, #16]
   36bc4:	mov	x19, x1
   36bc8:	mov	x20, x0
   36bcc:	add	x1, x0, #0x28
   36bd0:	mov	x0, x22
   36bd4:	str	x2, [sp, #192]
   36bd8:	mov	x2, #0x90                  	// #144
   36bdc:	str	w3, [sp, #200]
   36be0:	bl	4460 <memcpy@plt>
   36be4:	cbz	x19, 36c48 <ZSTD_compress@@Base+0x283fc>
   36be8:	add	x8, sp, #0xd4
   36bec:	mov	x0, x19
   36bf0:	bl	c734 <ZSTD_initStaticCDict@@Base+0xfc>
   36bf4:	add	x5, sp, #0x30
   36bf8:	mov	x1, x22
   36bfc:	ldr	x0, [sp, #192]
   36c00:	str	x0, [sp, #240]
   36c04:	ldr	w0, [sp, #200]
   36c08:	mov	x2, #0x90                  	// #144
   36c0c:	str	w0, [sp, #248]
   36c10:	mov	x0, x5
   36c14:	bl	4460 <memcpy@plt>
   36c18:	mov	x5, x0
   36c1c:	mov	x6, x21
   36c20:	mov	x4, x19
   36c24:	mov	x0, x20
   36c28:	mov	w3, #0x0                   	// #0
   36c2c:	mov	x2, #0x0                   	// #0
   36c30:	mov	x1, #0x0                   	// #0
   36c34:	bl	36684 <ZSTD_compress@@Base+0x27e38>
   36c38:	ldp	x19, x20, [sp, #16]
   36c3c:	ldp	x21, x22, [sp, #32]
   36c40:	ldp	x29, x30, [sp], #352
   36c44:	ret
   36c48:	mov	x0, #0xffffffffffffffe0    	// #-32
   36c4c:	b	36c38 <ZSTD_compress@@Base+0x283ec>
   36c50:	stp	x29, x30, [sp, #-176]!
   36c54:	cmp	x1, #0x0
   36c58:	mov	x2, #0x90                  	// #144
   36c5c:	add	x5, sp, #0x20
   36c60:	mov	x29, sp
   36c64:	stp	x19, x20, [sp, #16]
   36c68:	csinv	x19, x1, xzr, ne  // ne = any
   36c6c:	mov	x20, x0
   36c70:	add	x1, x0, #0x28
   36c74:	mov	x0, x5
   36c78:	bl	4460 <memcpy@plt>
   36c7c:	mov	x5, x0
   36c80:	mov	x6, x19
   36c84:	mov	x0, x20
   36c88:	mov	x4, #0x0                   	// #0
   36c8c:	mov	w3, #0x0                   	// #0
   36c90:	mov	x2, #0x0                   	// #0
   36c94:	mov	x1, #0x0                   	// #0
   36c98:	bl	36684 <ZSTD_compress@@Base+0x27e38>
   36c9c:	ldp	x19, x20, [sp, #16]
   36ca0:	ldp	x29, x30, [sp], #176
   36ca4:	ret
   36ca8:	stp	x29, x30, [sp, #-368]!
   36cac:	mov	x2, #0x0                   	// #0
   36cb0:	mov	x29, sp
   36cb4:	add	x8, sp, #0xb8
   36cb8:	stp	x19, x20, [sp, #16]
   36cbc:	mov	x19, x0
   36cc0:	mov	w0, w1
   36cc4:	mov	x1, #0xffffffffffffffff    	// #-1
   36cc8:	bl	4a70 <ZSTD_getParams@plt>
   36ccc:	mov	x20, #0x90                  	// #144
   36cd0:	add	x3, sp, #0xe0
   36cd4:	mov	x2, x20
   36cd8:	add	x1, x19, #0x28
   36cdc:	mov	x0, x3
   36ce0:	bl	4460 <memcpy@plt>
   36ce4:	mov	x3, x0
   36ce8:	add	x2, sp, #0x4
   36cec:	add	x5, sp, #0x20
   36cf0:	ldp	x0, x1, [sp, #184]
   36cf4:	stp	x0, x1, [x2, #224]
   36cf8:	mov	x2, x20
   36cfc:	mov	x1, x3
   36d00:	ldr	x0, [sp, #200]
   36d04:	stur	x0, [sp, #244]
   36d08:	ldr	w0, [sp, #208]
   36d0c:	str	w0, [sp, #252]
   36d10:	ldur	x0, [sp, #212]
   36d14:	str	x0, [sp, #256]
   36d18:	ldr	w0, [sp, #220]
   36d1c:	str	w0, [sp, #264]
   36d20:	mov	x0, x5
   36d24:	bl	4460 <memcpy@plt>
   36d28:	mov	x5, x0
   36d2c:	mov	x6, #0xffffffffffffffff    	// #-1
   36d30:	mov	x0, x19
   36d34:	mov	x4, #0x0                   	// #0
   36d38:	mov	w3, #0x0                   	// #0
   36d3c:	mov	x2, #0x0                   	// #0
   36d40:	mov	x1, #0x0                   	// #0
   36d44:	bl	36684 <ZSTD_compress@@Base+0x27e38>
   36d48:	ldp	x19, x20, [sp, #16]
   36d4c:	ldp	x29, x30, [sp], #368
   36d50:	ret
   36d54:	ldr	x2, [x0, #184]
   36d58:	ldr	x1, [x0, #240]
   36d5c:	subs	x1, x2, x1
   36d60:	csel	x0, x1, x2, ne  // ne = any
   36d64:	ret
   36d68:	stp	x29, x30, [sp, #-240]!
   36d6c:	mov	x29, sp
   36d70:	stp	x23, x24, [sp, #48]
   36d74:	ldr	w23, [x0, #640]
   36d78:	stp	x19, x20, [sp, #16]
   36d7c:	mov	x19, x0
   36d80:	stp	x21, x22, [sp, #32]
   36d84:	stp	x25, x26, [sp, #64]
   36d88:	stp	x27, x28, [sp, #80]
   36d8c:	cbz	w23, 36db4 <ZSTD_compress@@Base+0x28568>
   36d90:	ldr	x0, [x0, #24]
   36d94:	ldp	x19, x20, [sp, #16]
   36d98:	ldp	x21, x22, [sp, #32]
   36d9c:	ldr	x0, [x0, #40]
   36da0:	ldp	x23, x24, [sp, #48]
   36da4:	ldp	x25, x26, [sp, #64]
   36da8:	ldp	x27, x28, [sp, #80]
   36dac:	ldp	x29, x30, [sp], #240
   36db0:	b	46b0 <ZSTD_compressStream2@plt>
   36db4:	ldr	w0, [x0, #656]
   36db8:	mov	x21, x1
   36dbc:	mov	x20, x2
   36dc0:	mov	w22, w3
   36dc4:	cbz	w0, 36dcc <ZSTD_compress@@Base+0x28580>
   36dc8:	cbz	w3, 37190 <ZSTD_compress@@Base+0x28944>
   36dcc:	ldr	w0, [x19, #132]
   36dd0:	cbnz	w0, 36ef0 <ZSTD_compress@@Base+0x286a4>
   36dd4:	ldr	w0, [x19, #652]
   36dd8:	cbnz	w0, 36ef0 <ZSTD_compress@@Base+0x286a4>
   36ddc:	ldr	x0, [x19, #240]
   36de0:	cbnz	x0, 36ef0 <ZSTD_compress@@Base+0x286a4>
   36de4:	ldr	w0, [x19, #200]
   36de8:	cbnz	w0, 36e00 <ZSTD_compress@@Base+0x285b4>
   36dec:	cmp	w22, #0x2
   36df0:	b.eq	36e48 <ZSTD_compress@@Base+0x285fc>  // b.none
   36df4:	ldp	x1, x0, [x20, #8]
   36df8:	cmp	x1, x0
   36dfc:	b.hi	36efc <ZSTD_compress@@Base+0x286b0>  // b.pmore
   36e00:	ldr	w0, [x19, #200]
   36e04:	ldr	x1, [x19, #240]
   36e08:	cbnz	w0, 37178 <ZSTD_compress@@Base+0x2892c>
   36e0c:	ldr	x0, [x19, #184]
   36e10:	cmp	x0, x1
   36e14:	b.ls	37178 <ZSTD_compress@@Base+0x2892c>  // b.plast
   36e18:	cbnz	w22, 37164 <ZSTD_compress@@Base+0x28918>
   36e1c:	eor	w2, w23, #0x1
   36e20:	mov	x1, x21
   36e24:	mov	w3, w22
   36e28:	mov	x0, x19
   36e2c:	bl	35038 <ZSTD_compress@@Base+0x267ec>
   36e30:	ldp	x1, x2, [x20, #8]
   36e34:	cmp	x2, x1
   36e38:	b.cs	36ed4 <ZSTD_compress@@Base+0x28688>  // b.hs, b.nlast
   36e3c:	cmp	x0, #0x0
   36e40:	csinc	x0, x0, xzr, ne  // ne = any
   36e44:	b	36ed4 <ZSTD_compress@@Base+0x28688>
   36e48:	ldp	x24, x0, [x21, #8]
   36e4c:	ldr	x1, [x20, #8]
   36e50:	sub	x24, x24, x0
   36e54:	ldr	x0, [x20, #16]
   36e58:	sub	x0, x1, x0
   36e5c:	bl	4980 <ZSTD_compressBound@plt>
   36e60:	cmp	x24, x0
   36e64:	b.cc	36ef0 <ZSTD_compress@@Base+0x286a4>  // b.lo, b.ul, b.last
   36e68:	add	x6, sp, #0x60
   36e6c:	add	x1, x19, #0x28
   36e70:	mov	x0, x6
   36e74:	mov	x2, #0x90                  	// #144
   36e78:	ldr	x23, [x20, #16]
   36e7c:	ldr	x22, [x21, #16]
   36e80:	bl	4460 <memcpy@plt>
   36e84:	ldp	x3, x4, [x20]
   36e88:	mov	x6, x0
   36e8c:	ldp	x1, x2, [x21]
   36e90:	mov	x0, x19
   36e94:	ldr	x5, [x19, #720]
   36e98:	sub	x4, x4, x23
   36e9c:	add	x3, x3, x23
   36ea0:	sub	x2, x2, x22
   36ea4:	add	x1, x1, x22
   36ea8:	bl	35c7c <ZSTD_compress@@Base+0x27430>
   36eac:	cmn	x0, #0x78
   36eb0:	b.hi	36ed4 <ZSTD_compress@@Base+0x28688>  // b.pmore
   36eb4:	ldr	x1, [x20, #8]
   36eb8:	str	x1, [x20, #16]
   36ebc:	ldr	x1, [x21, #16]
   36ec0:	add	x0, x1, x0
   36ec4:	str	x0, [x21, #16]
   36ec8:	mov	x0, #0x100000001           	// #4294967297
   36ecc:	str	x0, [x19, #656]
   36ed0:	mov	x0, #0x0                   	// #0
   36ed4:	ldp	x19, x20, [sp, #16]
   36ed8:	ldp	x21, x22, [sp, #32]
   36edc:	ldp	x23, x24, [sp, #48]
   36ee0:	ldp	x25, x26, [sp, #64]
   36ee4:	ldp	x27, x28, [sp, #80]
   36ee8:	ldp	x29, x30, [sp], #240
   36eec:	ret
   36ef0:	ldr	w0, [x19, #200]
   36ef4:	cbz	w0, 36df4 <ZSTD_compress@@Base+0x285a8>
   36ef8:	b	36e00 <ZSTD_compress@@Base+0x285b4>
   36efc:	ldr	x25, [x19, #224]
   36f00:	cbnz	x25, 36fec <ZSTD_compress@@Base+0x287a0>
   36f04:	ldr	w1, [x19, #648]
   36f08:	mov	w6, #0x128                 	// #296
   36f0c:	ldr	w5, [x19, #652]
   36f10:	cmp	w5, w1
   36f14:	b.hi	36f20 <ZSTD_compress@@Base+0x286d4>  // b.pmore
   36f18:	mov	x24, #0x0                   	// #0
   36f1c:	b	36f54 <ZSTD_compress@@Base+0x28708>
   36f20:	ldr	w0, [x19, #644]
   36f24:	ldr	x4, [x19, #8]
   36f28:	and	w0, w1, w0
   36f2c:	umull	x0, w0, w6
   36f30:	add	x2, x4, x0
   36f34:	ldr	x0, [x4, x0]
   36f38:	ldr	x3, [x2, #96]
   36f3c:	cmp	x0, x3
   36f40:	b.cs	37104 <ZSTD_compress@@Base+0x288b8>  // b.hs, b.nlast
   36f44:	ldp	x25, x24, [x2, #72]
   36f48:	cbnz	x24, 36f54 <ZSTD_compress@@Base+0x28708>
   36f4c:	ldr	x25, [x2, #88]
   36f50:	mov	x24, x3
   36f54:	ldp	x0, x1, [x19, #256]
   36f58:	ldr	x26, [x19, #184]
   36f5c:	sub	x0, x0, x1
   36f60:	cmp	x0, x26
   36f64:	b.cs	36fb0 <ZSTD_compress@@Base+0x28764>  // b.hs, b.nlast
   36f68:	ldr	x27, [x19, #216]
   36f6c:	mov	x2, x25
   36f70:	ldr	x28, [x19, #248]
   36f74:	mov	x3, x24
   36f78:	mov	x1, x27
   36f7c:	mov	x0, x28
   36f80:	bl	34d3c <ZSTD_compress@@Base+0x264f0>
   36f84:	cbnz	w0, 36fec <ZSTD_compress@@Base+0x287a0>
   36f88:	mov	x1, x28
   36f8c:	mov	x2, x27
   36f90:	mov	x0, x19
   36f94:	bl	34d74 <ZSTD_compress@@Base+0x26528>
   36f98:	ldr	x1, [x19, #208]
   36f9c:	mov	x2, x27
   36fa0:	mov	x0, x28
   36fa4:	bl	4490 <memmove@plt>
   36fa8:	str	x28, [x19, #208]
   36fac:	str	x27, [x19, #264]
   36fb0:	ldr	x9, [x19, #248]
   36fb4:	mov	x2, x25
   36fb8:	ldr	x0, [x19, #264]
   36fbc:	mov	x3, x24
   36fc0:	mov	x1, x26
   36fc4:	add	x9, x9, x0
   36fc8:	mov	x0, x9
   36fcc:	bl	34d3c <ZSTD_compress@@Base+0x264f0>
   36fd0:	cbnz	w0, 36fec <ZSTD_compress@@Base+0x287a0>
   36fd4:	mov	x1, x9
   36fd8:	mov	x2, x26
   36fdc:	mov	x0, x19
   36fe0:	bl	34d74 <ZSTD_compress@@Base+0x26528>
   36fe4:	stp	x9, x26, [x19, #224]
   36fe8:	str	xzr, [x19, #240]
   36fec:	ldr	x5, [x19, #224]
   36ff0:	cbz	x5, 370ec <ZSTD_compress@@Base+0x288a0>
   36ff4:	ldp	x1, x2, [x20]
   36ff8:	ldr	x3, [x20, #16]
   36ffc:	ldr	x23, [x19, #184]
   37000:	ldr	x0, [x19, #240]
   37004:	sub	x2, x2, x3
   37008:	add	x1, x1, x3
   3700c:	sub	x23, x23, x0
   37010:	cmp	x23, x2
   37014:	csel	x23, x23, x2, ls  // ls = plast
   37018:	ldr	w2, [x19, #132]
   3701c:	cbz	w2, 370c0 <ZSTD_compress@@Base+0x28874>
   37020:	add	x2, x23, x0
   37024:	cmp	x2, #0x1f
   37028:	b.ls	370c0 <ZSTD_compress@@Base+0x28874>  // b.plast
   3702c:	mov	x7, #0x6463                	// #25699
   37030:	sub	x6, x0, #0x20
   37034:	movk	x7, #0xb7a5, lsl #16
   37038:	add	x6, x5, x6
   3703c:	movk	x7, #0xbcdc, lsl #32
   37040:	cmp	x0, #0x1f
   37044:	movk	x7, #0xcf1b, lsl #48
   37048:	b.ls	3710c <ZSTD_compress@@Base+0x288c0>  // b.plast
   3704c:	mov	x2, #0x0                   	// #0
   37050:	mov	x4, #0x0                   	// #0
   37054:	ldrb	w3, [x6, x2]
   37058:	add	x2, x2, #0x1
   3705c:	cmp	x2, #0x20
   37060:	add	x3, x3, #0xa
   37064:	madd	x4, x4, x7, x3
   37068:	b.ne	37054 <ZSTD_compress@@Base+0x28808>  // b.any
   3706c:	mov	x2, #0x0                   	// #0
   37070:	ldr	x9, [x19, #624]
   37074:	sub	x10, x1, #0x20
   37078:	ldr	x8, [x19, #632]
   3707c:	cmp	x23, x2
   37080:	b.ls	370c0 <ZSTD_compress@@Base+0x28874>  // b.plast
   37084:	cmp	x2, #0x1f
   37088:	b.hi	3715c <ZSTD_compress@@Base+0x28910>  // b.pmore
   3708c:	ldrb	w3, [x6, x2]
   37090:	add	w3, w3, #0xa
   37094:	sxtw	x3, w3
   37098:	msub	x4, x3, x8, x4
   3709c:	ldrb	w3, [x1, x2]
   370a0:	add	x2, x2, #0x1
   370a4:	add	x3, x3, #0xa
   370a8:	madd	x4, x4, x7, x3
   370ac:	bics	xzr, x9, x4
   370b0:	b.ne	3707c <ZSTD_compress@@Base+0x28830>  // b.any
   370b4:	cmp	w22, #0x0
   370b8:	mov	x23, x2
   370bc:	csinc	w22, w22, wzr, ne  // ne = any
   370c0:	mov	x2, x23
   370c4:	add	x0, x5, x0
   370c8:	bl	4460 <memcpy@plt>
   370cc:	ldr	x0, [x20, #16]
   370d0:	cmp	x23, #0x0
   370d4:	add	x0, x0, x23
   370d8:	str	x0, [x20, #16]
   370dc:	ldr	x0, [x19, #240]
   370e0:	add	x0, x0, x23
   370e4:	cset	w23, ne  // ne = any
   370e8:	str	x0, [x19, #240]
   370ec:	ldp	x0, x1, [x20, #8]
   370f0:	cmp	x1, x0
   370f4:	b.cs	36e00 <ZSTD_compress@@Base+0x285b4>  // b.hs, b.nlast
   370f8:	cmp	w22, #0x2
   370fc:	csinc	w22, w22, wzr, ne  // ne = any
   37100:	b	36e00 <ZSTD_compress@@Base+0x285b4>
   37104:	add	w1, w1, #0x1
   37108:	b	36f10 <ZSTD_compress@@Base+0x286c4>
   3710c:	mov	x2, #0x20                  	// #32
   37110:	sub	x2, x2, x0
   37114:	mov	x3, #0x0                   	// #0
   37118:	mov	x4, #0x0                   	// #0
   3711c:	mul	x8, x4, x7
   37120:	cmp	x3, x0
   37124:	b.ne	37148 <ZSTD_compress@@Base+0x288fc>  // b.any
   37128:	mov	x3, #0x0                   	// #0
   3712c:	ldrb	w8, [x1, x3]
   37130:	add	x3, x3, #0x1
   37134:	cmp	x2, x3
   37138:	add	x8, x8, #0xa
   3713c:	madd	x4, x4, x7, x8
   37140:	b.ne	3712c <ZSTD_compress@@Base+0x288e0>  // b.any
   37144:	b	37070 <ZSTD_compress@@Base+0x28824>
   37148:	ldrb	w4, [x5, x3]
   3714c:	add	x3, x3, #0x1
   37150:	add	x4, x4, #0xa
   37154:	add	x4, x4, x8
   37158:	b	3711c <ZSTD_compress@@Base+0x288d0>
   3715c:	ldrb	w3, [x10, x2]
   37160:	b	37090 <ZSTD_compress@@Base+0x28844>
   37164:	cbnz	x1, 37178 <ZSTD_compress@@Base+0x2892c>
   37168:	cmp	w22, #0x2
   3716c:	b.ne	36e1c <ZSTD_compress@@Base+0x285d0>  // b.any
   37170:	ldr	w0, [x19, #656]
   37174:	cbnz	w0, 36e1c <ZSTD_compress@@Base+0x285d0>
   37178:	mov	w2, w22
   3717c:	mov	x0, x19
   37180:	bl	35234 <ZSTD_compress@@Base+0x269e8>
   37184:	cmn	x0, #0x78
   37188:	b.ls	36e1c <ZSTD_compress@@Base+0x285d0>  // b.plast
   3718c:	b	36ed4 <ZSTD_compress@@Base+0x28688>
   37190:	mov	x0, #0xffffffffffffffc4    	// #-60
   37194:	b	36ed4 <ZSTD_compress@@Base+0x28688>
   37198:	stp	x29, x30, [sp, #-32]!
   3719c:	mov	w3, #0x0                   	// #0
   371a0:	mov	x29, sp
   371a4:	str	x19, [sp, #16]
   371a8:	mov	x19, x0
   371ac:	bl	36d68 <ZSTD_compress@@Base+0x2851c>
   371b0:	cmn	x0, #0x78
   371b4:	b.hi	371c4 <ZSTD_compress@@Base+0x28978>  // b.pmore
   371b8:	ldr	x0, [x19, #184]
   371bc:	ldr	x1, [x19, #240]
   371c0:	sub	x0, x0, x1
   371c4:	ldr	x19, [sp, #16]
   371c8:	ldp	x29, x30, [sp], #32
   371cc:	ret
   371d0:	ldr	w3, [x0, #640]
   371d4:	cbz	w3, 371e4 <ZSTD_compress@@Base+0x28998>
   371d8:	ldr	x0, [x0, #24]
   371dc:	ldr	x0, [x0, #40]
   371e0:	b	4610 <ZSTD_flushStream@plt>
   371e4:	mov	w2, #0x1                   	// #1
   371e8:	b	35400 <ZSTD_compress@@Base+0x26bb4>
   371ec:	ldr	w3, [x0, #640]
   371f0:	cbz	w3, 37200 <ZSTD_compress@@Base+0x289b4>
   371f4:	ldr	x0, [x0, #24]
   371f8:	ldr	x0, [x0, #40]
   371fc:	b	49c0 <ZSTD_endStream@plt>
   37200:	mov	w2, #0x2                   	// #2
   37204:	b	35400 <ZSTD_compress@@Base+0x26bb4>
   37208:	ldr	w2, [x0, #8]
   3720c:	neg	w1, w1
   37210:	ldr	x0, [x0]
   37214:	lsl	x0, x0, x2
   37218:	lsr	x0, x0, x1
   3721c:	ret
   37220:	ldr	w3, [x0, #8]
   37224:	mov	x1, x0
   37228:	cmp	w3, #0x40
   3722c:	b.hi	372c0 <ZSTD_compress@@Base+0x28a74>  // b.pmore
   37230:	ldr	x2, [x0, #16]
   37234:	ldr	x0, [x0, #32]
   37238:	cmp	x2, x0
   3723c:	b.cc	37264 <ZSTD_compress@@Base+0x28a18>  // b.lo, b.ul, b.last
   37240:	lsr	w0, w3, #3
   37244:	and	w3, w3, #0x7
   37248:	sub	x2, x2, x0
   3724c:	ldr	x0, [x2]
   37250:	str	x0, [x1]
   37254:	mov	w0, #0x0                   	// #0
   37258:	str	w3, [x1, #8]
   3725c:	str	x2, [x1, #16]
   37260:	ret
   37264:	ldr	x0, [x1, #24]
   37268:	cmp	x2, x0
   3726c:	b.ne	37280 <ZSTD_compress@@Base+0x28a34>  // b.any
   37270:	cmp	w3, #0x40
   37274:	cset	w0, eq  // eq = none
   37278:	add	w0, w0, #0x1
   3727c:	b	37260 <ZSTD_compress@@Base+0x28a14>
   37280:	lsr	w5, w3, #3
   37284:	lsr	w4, w3, #3
   37288:	sub	x5, x2, x5
   3728c:	cmp	x0, x5
   37290:	b.ls	372b8 <ZSTD_compress@@Base+0x28a6c>  // b.plast
   37294:	sub	w4, w2, w0
   37298:	mov	w0, #0x1                   	// #1
   3729c:	sub	x2, x2, w4, uxtw
   372a0:	str	x2, [x1, #16]
   372a4:	sub	w3, w3, w4, lsl #3
   372a8:	str	w3, [x1, #8]
   372ac:	ldr	x2, [x2]
   372b0:	str	x2, [x1]
   372b4:	b	37260 <ZSTD_compress@@Base+0x28a14>
   372b8:	mov	w0, #0x0                   	// #0
   372bc:	b	3729c <ZSTD_compress@@Base+0x28a50>
   372c0:	mov	w0, #0x3                   	// #3
   372c4:	b	37260 <ZSTD_compress@@Base+0x28a14>
   372c8:	ldp	x2, x1, [x0, #16]
   372cc:	cmp	x2, x1
   372d0:	b.ne	372e4 <ZSTD_compress@@Base+0x28a98>  // b.any
   372d4:	ldr	w0, [x0, #8]
   372d8:	cmp	w0, #0x40
   372dc:	cset	w0, eq  // eq = none
   372e0:	ret
   372e4:	mov	w0, #0x0                   	// #0
   372e8:	b	372e0 <ZSTD_compress@@Base+0x28a94>
   372ec:	mov	x3, x0
   372f0:	mov	x0, x2
   372f4:	cbnz	x2, 3730c <ZSTD_compress@@Base+0x28ac0>
   372f8:	mov	x0, #0xffffffffffffffb8    	// #-72
   372fc:	stp	xzr, xzr, [x3]
   37300:	stp	xzr, xzr, [x3, #16]
   37304:	str	xzr, [x3, #32]
   37308:	ret
   3730c:	add	x2, x1, #0x8
   37310:	stp	x1, x2, [x3, #24]
   37314:	sub	x6, x0, #0x1
   37318:	cmp	x0, #0x7
   3731c:	b.ls	3735c <ZSTD_compress@@Base+0x28b10>  // b.plast
   37320:	sub	x2, x0, #0x8
   37324:	add	x4, x1, x2
   37328:	ldr	x2, [x1, x2]
   3732c:	str	x2, [x3]
   37330:	str	x4, [x3, #16]
   37334:	ldrb	w2, [x1, x6]
   37338:	clz	w1, w2
   3733c:	cmp	w2, #0x0
   37340:	eor	w4, w1, #0x1f
   37344:	mov	w1, #0x8                   	// #8
   37348:	sub	w1, w1, w4
   3734c:	csinv	x0, x0, xzr, ne  // ne = any
   37350:	csel	w1, w1, wzr, ne  // ne = any
   37354:	str	w1, [x3, #8]
   37358:	b	37308 <ZSTD_compress@@Base+0x28abc>
   3735c:	str	x1, [x3, #16]
   37360:	sub	x5, x0, #0x2
   37364:	cmp	x5, #0x5
   37368:	ldrb	w7, [x1]
   3736c:	str	x7, [x3]
   37370:	b.hi	373f0 <ZSTD_compress@@Base+0x28ba4>  // b.pmore
   37374:	cmp	w5, #0x5
   37378:	b.hi	373f0 <ZSTD_compress@@Base+0x28ba4>  // b.pmore
   3737c:	adrp	x4, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   37380:	add	x4, x4, #0x6f4
   37384:	ldrb	w2, [x4, w5, uxtw]
   37388:	adr	x4, 37394 <ZSTD_compress@@Base+0x28b48>
   3738c:	add	x2, x4, w2, sxtb #2
   37390:	br	x2
   37394:	ldrb	w2, [x1, #6]
   37398:	add	x2, x7, x2, lsl #48
   3739c:	str	x2, [x3]
   373a0:	ldr	x4, [x3]
   373a4:	ldrb	w2, [x1, #5]
   373a8:	add	x2, x4, x2, lsl #40
   373ac:	str	x2, [x3]
   373b0:	ldr	x4, [x3]
   373b4:	ldrb	w2, [x1, #4]
   373b8:	add	x2, x4, x2, lsl #32
   373bc:	str	x2, [x3]
   373c0:	ldr	x4, [x3]
   373c4:	ldrb	w2, [x1, #3]
   373c8:	add	x2, x4, x2, lsl #24
   373cc:	str	x2, [x3]
   373d0:	ldr	x4, [x3]
   373d4:	ldrb	w2, [x1, #2]
   373d8:	add	x2, x4, x2, lsl #16
   373dc:	str	x2, [x3]
   373e0:	ldr	x4, [x3]
   373e4:	ldrb	w2, [x1, #1]
   373e8:	add	x2, x4, x2, lsl #8
   373ec:	str	x2, [x3]
   373f0:	ldrb	w1, [x1, x6]
   373f4:	cbz	w1, 37418 <ZSTD_compress@@Base+0x28bcc>
   373f8:	clz	w1, w1
   373fc:	mov	w2, #0x8                   	// #8
   37400:	eor	w1, w1, #0x1f
   37404:	sub	w4, w2, w0
   37408:	sub	w1, w2, w1
   3740c:	add	w1, w1, w4, lsl #3
   37410:	str	w1, [x3, #8]
   37414:	b	37308 <ZSTD_compress@@Base+0x28abc>
   37418:	mov	x0, #0xffffffffffffffec    	// #-20
   3741c:	str	wzr, [x3, #8]
   37420:	b	37308 <ZSTD_compress@@Base+0x28abc>
   37424:	stp	x29, x30, [sp, #-64]!
   37428:	mov	x8, x0
   3742c:	mov	x10, x1
   37430:	mov	x29, sp
   37434:	ldr	w13, [x4]
   37438:	add	x9, sp, #0x18
   3743c:	mov	x12, x4
   37440:	mov	x1, x2
   37444:	mov	x0, x9
   37448:	mov	x2, x3
   3744c:	bl	372ec <ZSTD_compress@@Base+0x28aa0>
   37450:	cmn	x0, #0x78
   37454:	b.hi	37498 <ZSTD_compress@@Base+0x28c4c>  // b.pmore
   37458:	add	x11, x8, x10
   3745c:	add	x6, x12, #0x4
   37460:	ubfx	x13, x13, #16, #8
   37464:	sub	x12, x11, #0x3
   37468:	mov	x0, x9
   3746c:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   37470:	cmp	w0, #0x0
   37474:	ccmp	x8, x12, #0x2, eq  // eq = none
   37478:	b.cc	374a0 <ZSTD_compress@@Base+0x28c54>  // b.lo, b.ul, b.last
   3747c:	cmp	x11, x8
   37480:	b.hi	3754c <ZSTD_compress@@Base+0x28d00>  // b.pmore
   37484:	mov	x0, x9
   37488:	bl	372c8 <ZSTD_compress@@Base+0x28a7c>
   3748c:	cmp	w0, #0x0
   37490:	mov	x0, #0xffffffffffffffec    	// #-20
   37494:	csel	x0, x10, x0, ne  // ne = any
   37498:	ldp	x29, x30, [sp], #64
   3749c:	ret
   374a0:	mov	w1, w13
   374a4:	mov	x0, x9
   374a8:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   374ac:	lsl	x1, x0, #1
   374b0:	add	x0, x6, x0, lsl #1
   374b4:	ldr	w3, [sp, #32]
   374b8:	ldrb	w1, [x6, x1]
   374bc:	ldrb	w4, [x0, #1]
   374c0:	mov	x0, x9
   374c4:	strb	w1, [x8]
   374c8:	mov	w1, w13
   374cc:	add	w4, w4, w3
   374d0:	str	w4, [sp, #32]
   374d4:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   374d8:	lsl	x1, x0, #1
   374dc:	add	x0, x6, x0, lsl #1
   374e0:	ldrb	w1, [x6, x1]
   374e4:	ldrb	w3, [x0, #1]
   374e8:	mov	x0, x9
   374ec:	strb	w1, [x8, #1]
   374f0:	mov	w1, w13
   374f4:	add	w4, w3, w4
   374f8:	str	w4, [sp, #32]
   374fc:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37500:	lsl	x1, x0, #1
   37504:	add	x0, x6, x0, lsl #1
   37508:	add	x8, x8, #0x4
   3750c:	ldrb	w1, [x6, x1]
   37510:	ldrb	w3, [x0, #1]
   37514:	mov	x0, x9
   37518:	sturb	w1, [x8, #-2]
   3751c:	mov	w1, w13
   37520:	add	w3, w3, w4
   37524:	str	w3, [sp, #32]
   37528:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   3752c:	lsl	x1, x0, #1
   37530:	add	x0, x6, x0, lsl #1
   37534:	ldrb	w1, [x6, x1]
   37538:	ldrb	w0, [x0, #1]
   3753c:	sturb	w1, [x8, #-1]
   37540:	add	w3, w0, w3
   37544:	str	w3, [sp, #32]
   37548:	b	37468 <ZSTD_compress@@Base+0x28c1c>
   3754c:	mov	w1, w13
   37550:	mov	x0, x9
   37554:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37558:	lsl	x1, x0, #1
   3755c:	add	x0, x6, x0, lsl #1
   37560:	ldrb	w1, [x6, x1]
   37564:	ldrb	w2, [x0, #1]
   37568:	ldr	w0, [sp, #32]
   3756c:	strb	w1, [x8], #1
   37570:	add	w0, w0, w2
   37574:	str	w0, [sp, #32]
   37578:	b	3747c <ZSTD_compress@@Base+0x28c30>
   3757c:	stp	x29, x30, [sp, #-224]!
   37580:	mov	x13, x1
   37584:	sub	x11, x3, #0x6
   37588:	mov	x29, sp
   3758c:	ldrh	w14, [x2]
   37590:	ldrh	w12, [x2, #2]
   37594:	stp	x19, x20, [sp, #16]
   37598:	add	x1, x14, x12
   3759c:	ldrh	w20, [x2, #4]
   375a0:	sub	x11, x11, x1
   375a4:	stp	x21, x22, [sp, #32]
   375a8:	sub	x11, x11, x20
   375ac:	stp	x23, x24, [sp, #48]
   375b0:	cmp	x3, x11
   375b4:	ldr	w8, [x4]
   375b8:	b.cc	376ac <ZSTD_compress@@Base+0x28e60>  // b.lo, b.ul, b.last
   375bc:	add	x10, x2, #0x6
   375c0:	mov	x9, x0
   375c4:	add	x15, sp, #0x40
   375c8:	mov	x19, x4
   375cc:	mov	x2, x14
   375d0:	mov	x1, x10
   375d4:	mov	x0, x15
   375d8:	bl	372ec <ZSTD_compress@@Base+0x28aa0>
   375dc:	cmn	x0, #0x78
   375e0:	b.hi	376b0 <ZSTD_compress@@Base+0x28e64>  // b.pmore
   375e4:	add	x10, x10, x14
   375e8:	add	x18, sp, #0x68
   375ec:	mov	x2, x12
   375f0:	mov	x1, x10
   375f4:	mov	x0, x18
   375f8:	bl	372ec <ZSTD_compress@@Base+0x28aa0>
   375fc:	cmn	x0, #0x78
   37600:	b.hi	376b0 <ZSTD_compress@@Base+0x28e64>  // b.pmore
   37604:	add	x10, x10, x12
   37608:	add	x14, sp, #0x90
   3760c:	mov	x2, x20
   37610:	mov	x1, x10
   37614:	mov	x0, x14
   37618:	bl	372ec <ZSTD_compress@@Base+0x28aa0>
   3761c:	cmn	x0, #0x78
   37620:	b.hi	376b0 <ZSTD_compress@@Base+0x28e64>  // b.pmore
   37624:	add	x12, sp, #0xb8
   37628:	mov	x2, x11
   3762c:	add	x1, x10, x20
   37630:	mov	x0, x12
   37634:	bl	372ec <ZSTD_compress@@Base+0x28aa0>
   37638:	cmn	x0, #0x78
   3763c:	b.hi	376b0 <ZSTD_compress@@Base+0x28e64>  // b.pmore
   37640:	add	x6, x19, #0x4
   37644:	ubfx	x7, x8, #16, #8
   37648:	add	x19, x13, #0x3
   3764c:	add	x22, x9, x13
   37650:	mov	x0, x15
   37654:	sub	x23, x22, #0x3
   37658:	add	x21, x9, x19, lsr #2
   3765c:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   37660:	mov	w10, w0
   37664:	mov	x0, x18
   37668:	add	x20, x21, x19, lsr #2
   3766c:	add	x19, x20, x19, lsr #2
   37670:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   37674:	orr	w10, w10, w0
   37678:	mov	x0, x14
   3767c:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   37680:	mov	w8, w0
   37684:	mov	x0, x12
   37688:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   3768c:	orr	w0, w8, w0
   37690:	orr	w0, w0, w10
   37694:	mov	x8, x19
   37698:	mov	x10, x20
   3769c:	mov	x11, x21
   376a0:	cbz	w0, 37984 <ZSTD_compress@@Base+0x29138>
   376a4:	cmp	x21, x9
   376a8:	b.cs	37990 <ZSTD_compress@@Base+0x29144>  // b.hs, b.nlast
   376ac:	mov	x0, #0xffffffffffffffec    	// #-20
   376b0:	ldp	x19, x20, [sp, #16]
   376b4:	ldp	x21, x22, [sp, #32]
   376b8:	ldp	x23, x24, [sp, #48]
   376bc:	ldp	x29, x30, [sp], #224
   376c0:	ret
   376c4:	mov	w1, w7
   376c8:	mov	x0, x15
   376cc:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   376d0:	lsl	x1, x0, #1
   376d4:	add	x0, x6, x0, lsl #1
   376d8:	ldrb	w1, [x6, x1]
   376dc:	ldrb	w24, [x0, #1]
   376e0:	ldr	w0, [sp, #72]
   376e4:	strb	w1, [x9]
   376e8:	mov	w1, w7
   376ec:	add	w24, w24, w0
   376f0:	mov	x0, x18
   376f4:	str	w24, [sp, #72]
   376f8:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   376fc:	lsl	x1, x0, #1
   37700:	add	x0, x6, x0, lsl #1
   37704:	ldrb	w5, [x0, #1]
   37708:	ldr	w0, [sp, #112]
   3770c:	ldrb	w1, [x6, x1]
   37710:	add	w5, w5, w0
   37714:	strb	w1, [x11]
   37718:	mov	w1, w7
   3771c:	mov	x0, x14
   37720:	str	w5, [sp, #112]
   37724:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37728:	lsl	x1, x0, #1
   3772c:	add	x0, x6, x0, lsl #1
   37730:	ldrb	w1, [x6, x1]
   37734:	ldrb	w4, [x0, #1]
   37738:	ldr	w0, [sp, #152]
   3773c:	strb	w1, [x10]
   37740:	mov	w1, w7
   37744:	add	w4, w4, w0
   37748:	mov	x0, x12
   3774c:	str	w4, [sp, #152]
   37750:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37754:	lsl	x1, x0, #1
   37758:	add	x0, x6, x0, lsl #1
   3775c:	ldrb	w1, [x6, x1]
   37760:	ldrb	w3, [x0, #1]
   37764:	ldr	w0, [sp, #192]
   37768:	strb	w1, [x8]
   3776c:	mov	w1, w7
   37770:	add	w3, w3, w0
   37774:	mov	x0, x15
   37778:	str	w3, [sp, #192]
   3777c:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37780:	lsl	x1, x0, #1
   37784:	add	x0, x6, x0, lsl #1
   37788:	ldrb	w1, [x6, x1]
   3778c:	ldrb	w0, [x0, #1]
   37790:	strb	w1, [x9, #1]
   37794:	mov	w1, w7
   37798:	add	w24, w0, w24
   3779c:	mov	x0, x18
   377a0:	str	w24, [sp, #72]
   377a4:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   377a8:	lsl	x1, x0, #1
   377ac:	add	x0, x6, x0, lsl #1
   377b0:	ldrb	w0, [x0, #1]
   377b4:	ldrb	w1, [x6, x1]
   377b8:	add	w5, w0, w5
   377bc:	strb	w1, [x11, #1]
   377c0:	mov	w1, w7
   377c4:	mov	x0, x14
   377c8:	str	w5, [sp, #112]
   377cc:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   377d0:	lsl	x1, x0, #1
   377d4:	add	x0, x6, x0, lsl #1
   377d8:	ldrb	w1, [x6, x1]
   377dc:	ldrb	w0, [x0, #1]
   377e0:	strb	w1, [x10, #1]
   377e4:	mov	w1, w7
   377e8:	add	w4, w0, w4
   377ec:	mov	x0, x12
   377f0:	str	w4, [sp, #152]
   377f4:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   377f8:	lsl	x1, x0, #1
   377fc:	add	x0, x6, x0, lsl #1
   37800:	ldrb	w1, [x6, x1]
   37804:	ldrb	w0, [x0, #1]
   37808:	strb	w1, [x8, #1]
   3780c:	mov	w1, w7
   37810:	add	w3, w0, w3
   37814:	mov	x0, x15
   37818:	str	w3, [sp, #192]
   3781c:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37820:	lsl	x1, x0, #1
   37824:	add	x0, x6, x0, lsl #1
   37828:	ldrb	w1, [x6, x1]
   3782c:	ldrb	w0, [x0, #1]
   37830:	add	w24, w0, w24
   37834:	str	w24, [sp, #72]
   37838:	strb	w1, [x9, #2]
   3783c:	mov	w1, w7
   37840:	mov	x0, x18
   37844:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37848:	lsl	x1, x0, #1
   3784c:	add	x0, x6, x0, lsl #1
   37850:	ldrb	w0, [x0, #1]
   37854:	ldrb	w1, [x6, x1]
   37858:	add	w5, w0, w5
   3785c:	strb	w1, [x11, #2]
   37860:	mov	w1, w7
   37864:	mov	x0, x14
   37868:	str	w5, [sp, #112]
   3786c:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37870:	lsl	x1, x0, #1
   37874:	add	x0, x6, x0, lsl #1
   37878:	ldrb	w1, [x6, x1]
   3787c:	ldrb	w0, [x0, #1]
   37880:	strb	w1, [x10, #2]
   37884:	mov	w1, w7
   37888:	add	w4, w0, w4
   3788c:	mov	x0, x12
   37890:	str	w4, [sp, #152]
   37894:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37898:	lsl	x1, x0, #1
   3789c:	add	x0, x6, x0, lsl #1
   378a0:	add	x9, x9, #0x4
   378a4:	ldrb	w1, [x6, x1]
   378a8:	ldrb	w0, [x0, #1]
   378ac:	strb	w1, [x8, #2]
   378b0:	mov	w1, w7
   378b4:	add	w3, w0, w3
   378b8:	mov	x0, x15
   378bc:	str	w3, [sp, #192]
   378c0:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   378c4:	lsl	x1, x0, #1
   378c8:	add	x0, x6, x0, lsl #1
   378cc:	add	x11, x11, #0x4
   378d0:	ldrb	w1, [x6, x1]
   378d4:	ldrb	w0, [x0, #1]
   378d8:	sturb	w1, [x9, #-1]
   378dc:	mov	w1, w7
   378e0:	add	w24, w0, w24
   378e4:	mov	x0, x18
   378e8:	str	w24, [sp, #72]
   378ec:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   378f0:	lsl	x1, x0, #1
   378f4:	add	x0, x6, x0, lsl #1
   378f8:	add	x10, x10, #0x4
   378fc:	ldrb	w0, [x0, #1]
   37900:	ldrb	w1, [x6, x1]
   37904:	add	w5, w0, w5
   37908:	sturb	w1, [x11, #-1]
   3790c:	mov	w1, w7
   37910:	mov	x0, x14
   37914:	str	w5, [sp, #112]
   37918:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   3791c:	lsl	x1, x0, #1
   37920:	add	x0, x6, x0, lsl #1
   37924:	add	x8, x8, #0x4
   37928:	ldrb	w1, [x6, x1]
   3792c:	ldrb	w0, [x0, #1]
   37930:	sturb	w1, [x10, #-1]
   37934:	mov	w1, w7
   37938:	add	w4, w0, w4
   3793c:	mov	x0, x12
   37940:	str	w4, [sp, #152]
   37944:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37948:	lsl	x1, x0, #1
   3794c:	add	x0, x6, x0, lsl #1
   37950:	ldrb	w1, [x6, x1]
   37954:	ldrb	w0, [x0, #1]
   37958:	sturb	w1, [x8, #-1]
   3795c:	add	w3, w0, w3
   37960:	mov	x0, x15
   37964:	str	w3, [sp, #192]
   37968:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   3796c:	mov	x0, x18
   37970:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   37974:	mov	x0, x14
   37978:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   3797c:	mov	x0, x12
   37980:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   37984:	cmp	x8, x23
   37988:	b.cc	376c4 <ZSTD_compress@@Base+0x28e78>  // b.lo, b.ul, b.last
   3798c:	b	376a4 <ZSTD_compress@@Base+0x28e58>
   37990:	cmp	x20, x11
   37994:	b.cc	376ac <ZSTD_compress@@Base+0x28e60>  // b.lo, b.ul, b.last
   37998:	cmp	x19, x10
   3799c:	b.cc	376ac <ZSTD_compress@@Base+0x28e60>  // b.lo, b.ul, b.last
   379a0:	sub	x23, x21, #0x3
   379a4:	mov	x0, x15
   379a8:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   379ac:	cmp	w0, #0x0
   379b0:	ccmp	x9, x23, #0x2, eq  // eq = none
   379b4:	b.cc	37a60 <ZSTD_compress@@Base+0x29214>  // b.lo, b.ul, b.last
   379b8:	cmp	x21, x9
   379bc:	b.hi	37b0c <ZSTD_compress@@Base+0x292c0>  // b.pmore
   379c0:	sub	x9, x20, #0x3
   379c4:	mov	x0, x18
   379c8:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   379cc:	cmp	w0, #0x0
   379d0:	ccmp	x11, x9, #0x2, eq  // eq = none
   379d4:	b.cc	37b3c <ZSTD_compress@@Base+0x292f0>  // b.lo, b.ul, b.last
   379d8:	cmp	x20, x11
   379dc:	b.hi	37be8 <ZSTD_compress@@Base+0x2939c>  // b.pmore
   379e0:	sub	x9, x19, #0x3
   379e4:	mov	x0, x14
   379e8:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   379ec:	cmp	w0, #0x0
   379f0:	ccmp	x10, x9, #0x2, eq  // eq = none
   379f4:	b.cc	37c18 <ZSTD_compress@@Base+0x293cc>  // b.lo, b.ul, b.last
   379f8:	cmp	x19, x10
   379fc:	b.hi	37cc4 <ZSTD_compress@@Base+0x29478>  // b.pmore
   37a00:	sub	x9, x22, #0x3
   37a04:	mov	x0, x12
   37a08:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   37a0c:	cmp	w0, #0x0
   37a10:	ccmp	x8, x9, #0x2, eq  // eq = none
   37a14:	b.cc	37cf4 <ZSTD_compress@@Base+0x294a8>  // b.lo, b.ul, b.last
   37a18:	cmp	x22, x8
   37a1c:	b.hi	37da0 <ZSTD_compress@@Base+0x29554>  // b.pmore
   37a20:	mov	x0, x15
   37a24:	bl	372c8 <ZSTD_compress@@Base+0x28a7c>
   37a28:	mov	w3, w0
   37a2c:	mov	x0, x18
   37a30:	bl	372c8 <ZSTD_compress@@Base+0x28a7c>
   37a34:	and	w3, w3, w0
   37a38:	mov	x0, x14
   37a3c:	bl	372c8 <ZSTD_compress@@Base+0x28a7c>
   37a40:	mov	w4, w0
   37a44:	mov	x0, x12
   37a48:	bl	372c8 <ZSTD_compress@@Base+0x28a7c>
   37a4c:	and	w4, w4, w0
   37a50:	tst	w4, w3
   37a54:	b.eq	376ac <ZSTD_compress@@Base+0x28e60>  // b.none
   37a58:	mov	x0, x13
   37a5c:	b	376b0 <ZSTD_compress@@Base+0x28e64>
   37a60:	mov	w1, w7
   37a64:	mov	x0, x15
   37a68:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37a6c:	lsl	x1, x0, #1
   37a70:	add	x0, x6, x0, lsl #1
   37a74:	ldr	w3, [sp, #72]
   37a78:	ldrb	w1, [x6, x1]
   37a7c:	ldrb	w4, [x0, #1]
   37a80:	mov	x0, x15
   37a84:	strb	w1, [x9]
   37a88:	mov	w1, w7
   37a8c:	add	w4, w4, w3
   37a90:	str	w4, [sp, #72]
   37a94:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37a98:	lsl	x1, x0, #1
   37a9c:	add	x0, x6, x0, lsl #1
   37aa0:	ldrb	w1, [x6, x1]
   37aa4:	ldrb	w3, [x0, #1]
   37aa8:	mov	x0, x15
   37aac:	strb	w1, [x9, #1]
   37ab0:	mov	w1, w7
   37ab4:	add	w4, w3, w4
   37ab8:	str	w4, [sp, #72]
   37abc:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37ac0:	lsl	x1, x0, #1
   37ac4:	add	x0, x6, x0, lsl #1
   37ac8:	add	x9, x9, #0x4
   37acc:	ldrb	w1, [x6, x1]
   37ad0:	ldrb	w3, [x0, #1]
   37ad4:	mov	x0, x15
   37ad8:	sturb	w1, [x9, #-2]
   37adc:	mov	w1, w7
   37ae0:	add	w3, w3, w4
   37ae4:	str	w3, [sp, #72]
   37ae8:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37aec:	lsl	x1, x0, #1
   37af0:	add	x0, x6, x0, lsl #1
   37af4:	ldrb	w1, [x6, x1]
   37af8:	ldrb	w0, [x0, #1]
   37afc:	sturb	w1, [x9, #-1]
   37b00:	add	w3, w0, w3
   37b04:	str	w3, [sp, #72]
   37b08:	b	379a4 <ZSTD_compress@@Base+0x29158>
   37b0c:	mov	w1, w7
   37b10:	mov	x0, x15
   37b14:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37b18:	lsl	x1, x0, #1
   37b1c:	add	x0, x6, x0, lsl #1
   37b20:	ldrb	w1, [x6, x1]
   37b24:	ldrb	w2, [x0, #1]
   37b28:	ldr	w0, [sp, #72]
   37b2c:	strb	w1, [x9], #1
   37b30:	add	w0, w0, w2
   37b34:	str	w0, [sp, #72]
   37b38:	b	379b8 <ZSTD_compress@@Base+0x2916c>
   37b3c:	mov	w1, w7
   37b40:	mov	x0, x18
   37b44:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37b48:	lsl	x1, x0, #1
   37b4c:	add	x0, x6, x0, lsl #1
   37b50:	ldr	w3, [sp, #112]
   37b54:	ldrb	w1, [x6, x1]
   37b58:	ldrb	w4, [x0, #1]
   37b5c:	mov	x0, x18
   37b60:	strb	w1, [x11]
   37b64:	mov	w1, w7
   37b68:	add	w4, w4, w3
   37b6c:	str	w4, [sp, #112]
   37b70:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37b74:	lsl	x1, x0, #1
   37b78:	add	x0, x6, x0, lsl #1
   37b7c:	ldrb	w1, [x6, x1]
   37b80:	ldrb	w3, [x0, #1]
   37b84:	mov	x0, x18
   37b88:	strb	w1, [x11, #1]
   37b8c:	mov	w1, w7
   37b90:	add	w4, w3, w4
   37b94:	str	w4, [sp, #112]
   37b98:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37b9c:	lsl	x1, x0, #1
   37ba0:	add	x0, x6, x0, lsl #1
   37ba4:	add	x11, x11, #0x4
   37ba8:	ldrb	w1, [x6, x1]
   37bac:	ldrb	w3, [x0, #1]
   37bb0:	mov	x0, x18
   37bb4:	sturb	w1, [x11, #-2]
   37bb8:	mov	w1, w7
   37bbc:	add	w3, w3, w4
   37bc0:	str	w3, [sp, #112]
   37bc4:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37bc8:	lsl	x1, x0, #1
   37bcc:	add	x0, x6, x0, lsl #1
   37bd0:	ldrb	w1, [x6, x1]
   37bd4:	ldrb	w0, [x0, #1]
   37bd8:	sturb	w1, [x11, #-1]
   37bdc:	add	w3, w0, w3
   37be0:	str	w3, [sp, #112]
   37be4:	b	379c4 <ZSTD_compress@@Base+0x29178>
   37be8:	mov	w1, w7
   37bec:	mov	x0, x18
   37bf0:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37bf4:	lsl	x1, x0, #1
   37bf8:	add	x0, x6, x0, lsl #1
   37bfc:	ldrb	w1, [x6, x1]
   37c00:	ldrb	w2, [x0, #1]
   37c04:	ldr	w0, [sp, #112]
   37c08:	strb	w1, [x11], #1
   37c0c:	add	w0, w0, w2
   37c10:	str	w0, [sp, #112]
   37c14:	b	379d8 <ZSTD_compress@@Base+0x2918c>
   37c18:	mov	w1, w7
   37c1c:	mov	x0, x14
   37c20:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37c24:	lsl	x1, x0, #1
   37c28:	add	x0, x6, x0, lsl #1
   37c2c:	ldr	w3, [sp, #152]
   37c30:	ldrb	w1, [x6, x1]
   37c34:	ldrb	w4, [x0, #1]
   37c38:	mov	x0, x14
   37c3c:	strb	w1, [x10]
   37c40:	mov	w1, w7
   37c44:	add	w4, w4, w3
   37c48:	str	w4, [sp, #152]
   37c4c:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37c50:	lsl	x1, x0, #1
   37c54:	add	x0, x6, x0, lsl #1
   37c58:	ldrb	w1, [x6, x1]
   37c5c:	ldrb	w3, [x0, #1]
   37c60:	mov	x0, x14
   37c64:	strb	w1, [x10, #1]
   37c68:	mov	w1, w7
   37c6c:	add	w4, w3, w4
   37c70:	str	w4, [sp, #152]
   37c74:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37c78:	lsl	x1, x0, #1
   37c7c:	add	x0, x6, x0, lsl #1
   37c80:	add	x10, x10, #0x4
   37c84:	ldrb	w1, [x6, x1]
   37c88:	ldrb	w3, [x0, #1]
   37c8c:	mov	x0, x14
   37c90:	sturb	w1, [x10, #-2]
   37c94:	mov	w1, w7
   37c98:	add	w3, w3, w4
   37c9c:	str	w3, [sp, #152]
   37ca0:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37ca4:	lsl	x1, x0, #1
   37ca8:	add	x0, x6, x0, lsl #1
   37cac:	ldrb	w1, [x6, x1]
   37cb0:	ldrb	w0, [x0, #1]
   37cb4:	sturb	w1, [x10, #-1]
   37cb8:	add	w3, w0, w3
   37cbc:	str	w3, [sp, #152]
   37cc0:	b	379e4 <ZSTD_compress@@Base+0x29198>
   37cc4:	mov	w1, w7
   37cc8:	mov	x0, x14
   37ccc:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37cd0:	lsl	x1, x0, #1
   37cd4:	add	x0, x6, x0, lsl #1
   37cd8:	ldrb	w1, [x6, x1]
   37cdc:	ldrb	w2, [x0, #1]
   37ce0:	ldr	w0, [sp, #152]
   37ce4:	strb	w1, [x10], #1
   37ce8:	add	w0, w0, w2
   37cec:	str	w0, [sp, #152]
   37cf0:	b	379f8 <ZSTD_compress@@Base+0x291ac>
   37cf4:	mov	w1, w7
   37cf8:	mov	x0, x12
   37cfc:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37d00:	lsl	x1, x0, #1
   37d04:	add	x0, x6, x0, lsl #1
   37d08:	ldr	w3, [sp, #192]
   37d0c:	ldrb	w1, [x6, x1]
   37d10:	ldrb	w4, [x0, #1]
   37d14:	mov	x0, x12
   37d18:	strb	w1, [x8]
   37d1c:	mov	w1, w7
   37d20:	add	w4, w4, w3
   37d24:	str	w4, [sp, #192]
   37d28:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37d2c:	lsl	x1, x0, #1
   37d30:	add	x0, x6, x0, lsl #1
   37d34:	ldrb	w1, [x6, x1]
   37d38:	ldrb	w3, [x0, #1]
   37d3c:	mov	x0, x12
   37d40:	strb	w1, [x8, #1]
   37d44:	mov	w1, w7
   37d48:	add	w4, w3, w4
   37d4c:	str	w4, [sp, #192]
   37d50:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37d54:	lsl	x1, x0, #1
   37d58:	add	x0, x6, x0, lsl #1
   37d5c:	add	x8, x8, #0x4
   37d60:	ldrb	w1, [x6, x1]
   37d64:	ldrb	w3, [x0, #1]
   37d68:	mov	x0, x12
   37d6c:	sturb	w1, [x8, #-2]
   37d70:	mov	w1, w7
   37d74:	add	w3, w3, w4
   37d78:	str	w3, [sp, #192]
   37d7c:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37d80:	lsl	x1, x0, #1
   37d84:	add	x0, x6, x0, lsl #1
   37d88:	ldrb	w1, [x6, x1]
   37d8c:	ldrb	w0, [x0, #1]
   37d90:	sturb	w1, [x8, #-1]
   37d94:	add	w3, w0, w3
   37d98:	str	w3, [sp, #192]
   37d9c:	b	37a04 <ZSTD_compress@@Base+0x291b8>
   37da0:	mov	w1, w7
   37da4:	mov	x0, x12
   37da8:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37dac:	lsl	x1, x0, #1
   37db0:	add	x0, x6, x0, lsl #1
   37db4:	ldrb	w1, [x6, x1]
   37db8:	ldrb	w2, [x0, #1]
   37dbc:	ldr	w0, [sp, #192]
   37dc0:	strb	w1, [x8], #1
   37dc4:	add	w0, w0, w2
   37dc8:	str	w0, [sp, #192]
   37dcc:	b	37a18 <ZSTD_compress@@Base+0x291cc>
   37dd0:	stp	x29, x30, [sp, #-64]!
   37dd4:	mov	x8, x0
   37dd8:	mov	x10, x1
   37ddc:	add	x9, sp, #0x18
   37de0:	mov	x12, x4
   37de4:	mov	x29, sp
   37de8:	mov	x1, x2
   37dec:	mov	x0, x9
   37df0:	mov	x2, x3
   37df4:	bl	372ec <ZSTD_compress@@Base+0x28aa0>
   37df8:	cmn	x0, #0x78
   37dfc:	b.hi	37e98 <ZSTD_compress@@Base+0x2964c>  // b.pmore
   37e00:	add	x11, x8, x10
   37e04:	ldrb	w7, [x12, #2]
   37e08:	add	x6, x12, #0x4
   37e0c:	sub	x12, x11, #0x7
   37e10:	mov	x0, x9
   37e14:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   37e18:	cmp	w0, #0x0
   37e1c:	ccmp	x8, x12, #0x2, eq  // eq = none
   37e20:	b.cc	37ea0 <ZSTD_compress@@Base+0x29654>  // b.lo, b.ul, b.last
   37e24:	sub	x12, x11, #0x2
   37e28:	mov	x0, x9
   37e2c:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   37e30:	cmp	w0, #0x0
   37e34:	ccmp	x8, x12, #0x2, eq  // eq = none
   37e38:	b.ls	37f68 <ZSTD_compress@@Base+0x2971c>  // b.plast
   37e3c:	cmp	x12, x8
   37e40:	b.cs	37fa0 <ZSTD_compress@@Base+0x29754>  // b.hs, b.nlast
   37e44:	cmp	x11, x8
   37e48:	b.ls	37e84 <ZSTD_compress@@Base+0x29638>  // b.plast
   37e4c:	mov	w1, w7
   37e50:	mov	x0, x9
   37e54:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37e58:	lsl	x1, x0, #2
   37e5c:	add	x0, x6, x0, lsl #2
   37e60:	ldrb	w1, [x6, x1]
   37e64:	strb	w1, [x8]
   37e68:	ldr	w1, [sp, #32]
   37e6c:	ldrb	w2, [x0, #3]
   37e70:	cmp	w2, #0x1
   37e74:	b.ne	37fd8 <ZSTD_compress@@Base+0x2978c>  // b.any
   37e78:	ldrb	w0, [x0, #2]
   37e7c:	add	w0, w0, w1
   37e80:	str	w0, [sp, #32]
   37e84:	mov	x0, x9
   37e88:	bl	372c8 <ZSTD_compress@@Base+0x28a7c>
   37e8c:	cmp	w0, #0x0
   37e90:	mov	x0, #0xffffffffffffffec    	// #-20
   37e94:	csel	x0, x10, x0, ne  // ne = any
   37e98:	ldp	x29, x30, [sp], #64
   37e9c:	ret
   37ea0:	mov	w1, w7
   37ea4:	mov	x0, x9
   37ea8:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37eac:	lsl	x1, x0, #2
   37eb0:	add	x0, x6, x0, lsl #2
   37eb4:	ldr	w3, [sp, #32]
   37eb8:	ldrh	w1, [x6, x1]
   37ebc:	strh	w1, [x8]
   37ec0:	mov	w1, w7
   37ec4:	ldrb	w4, [x0, #2]
   37ec8:	add	w4, w4, w3
   37ecc:	ldrb	w3, [x0, #3]
   37ed0:	mov	x0, x9
   37ed4:	str	w4, [sp, #32]
   37ed8:	add	x13, x8, x3
   37edc:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37ee0:	lsl	x1, x0, #2
   37ee4:	add	x0, x6, x0, lsl #2
   37ee8:	ldrh	w1, [x6, x1]
   37eec:	strh	w1, [x8, x3]
   37ef0:	mov	w1, w7
   37ef4:	ldrb	w3, [x0, #2]
   37ef8:	add	w4, w3, w4
   37efc:	ldrb	w3, [x0, #3]
   37f00:	mov	x0, x9
   37f04:	str	w4, [sp, #32]
   37f08:	add	x5, x13, x3
   37f0c:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37f10:	lsl	x1, x0, #2
   37f14:	add	x0, x6, x0, lsl #2
   37f18:	ldrh	w1, [x6, x1]
   37f1c:	strh	w1, [x13, x3]
   37f20:	mov	w1, w7
   37f24:	ldrb	w3, [x0, #2]
   37f28:	add	w3, w3, w4
   37f2c:	ldrb	w4, [x0, #3]
   37f30:	mov	x0, x9
   37f34:	str	w3, [sp, #32]
   37f38:	add	x8, x5, x4
   37f3c:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37f40:	lsl	x1, x0, #2
   37f44:	add	x0, x6, x0, lsl #2
   37f48:	ldrh	w1, [x6, x1]
   37f4c:	strh	w1, [x5, x4]
   37f50:	ldrb	w1, [x0, #2]
   37f54:	ldrb	w0, [x0, #3]
   37f58:	add	w3, w1, w3
   37f5c:	str	w3, [sp, #32]
   37f60:	add	x8, x8, x0
   37f64:	b	37e10 <ZSTD_compress@@Base+0x295c4>
   37f68:	mov	w1, w7
   37f6c:	mov	x0, x9
   37f70:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37f74:	lsl	x1, x0, #2
   37f78:	add	x0, x6, x0, lsl #2
   37f7c:	ldrh	w1, [x6, x1]
   37f80:	strh	w1, [x8]
   37f84:	ldr	w1, [sp, #32]
   37f88:	ldrb	w2, [x0, #2]
   37f8c:	ldrb	w0, [x0, #3]
   37f90:	add	w1, w1, w2
   37f94:	str	w1, [sp, #32]
   37f98:	add	x8, x8, x0
   37f9c:	b	37e28 <ZSTD_compress@@Base+0x295dc>
   37fa0:	mov	w1, w7
   37fa4:	mov	x0, x9
   37fa8:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   37fac:	lsl	x1, x0, #2
   37fb0:	add	x0, x6, x0, lsl #2
   37fb4:	ldrh	w1, [x6, x1]
   37fb8:	strh	w1, [x8]
   37fbc:	ldr	w1, [sp, #32]
   37fc0:	ldrb	w2, [x0, #2]
   37fc4:	ldrb	w0, [x0, #3]
   37fc8:	add	w1, w1, w2
   37fcc:	str	w1, [sp, #32]
   37fd0:	add	x8, x8, x0
   37fd4:	b	37e3c <ZSTD_compress@@Base+0x295f0>
   37fd8:	cmp	w1, #0x3f
   37fdc:	b.hi	37e84 <ZSTD_compress@@Base+0x29638>  // b.pmore
   37fe0:	ldrb	w0, [x0, #2]
   37fe4:	add	w0, w0, w1
   37fe8:	cmp	w0, #0x40
   37fec:	b.ls	37e80 <ZSTD_compress@@Base+0x29634>  // b.plast
   37ff0:	mov	w0, #0x40                  	// #64
   37ff4:	b	37e80 <ZSTD_compress@@Base+0x29634>
   37ff8:	stp	x29, x30, [sp, #-304]!
   37ffc:	mov	x8, x0
   38000:	sub	x11, x3, #0x6
   38004:	mov	x29, sp
   38008:	ldrh	w13, [x2]
   3800c:	ldrh	w12, [x2, #2]
   38010:	stp	x19, x20, [sp, #16]
   38014:	add	x0, x13, x12
   38018:	ldrh	w19, [x2, #4]
   3801c:	sub	x11, x11, x0
   38020:	stp	x21, x22, [sp, #32]
   38024:	sub	x11, x11, x19
   38028:	stp	x23, x24, [sp, #48]
   3802c:	cmp	x3, x11
   38030:	stp	x25, x26, [sp, #64]
   38034:	stp	x27, x28, [sp, #80]
   38038:	str	x1, [sp, #96]
   3803c:	ldr	w10, [x4]
   38040:	b.cs	38064 <ZSTD_compress@@Base+0x29818>  // b.hs, b.nlast
   38044:	mov	x0, #0xffffffffffffffec    	// #-20
   38048:	ldp	x19, x20, [sp, #16]
   3804c:	ldp	x21, x22, [sp, #32]
   38050:	ldp	x23, x24, [sp, #48]
   38054:	ldp	x25, x26, [sp, #64]
   38058:	ldp	x27, x28, [sp, #80]
   3805c:	ldp	x29, x30, [sp], #304
   38060:	ret
   38064:	add	x9, x2, #0x6
   38068:	add	x15, sp, #0x90
   3806c:	mov	x18, x4
   38070:	mov	x2, x13
   38074:	mov	x1, x9
   38078:	mov	x0, x15
   3807c:	bl	372ec <ZSTD_compress@@Base+0x28aa0>
   38080:	cmn	x0, #0x78
   38084:	b.hi	38048 <ZSTD_compress@@Base+0x297fc>  // b.pmore
   38088:	add	x9, x9, x13
   3808c:	add	x14, sp, #0xb8
   38090:	mov	x2, x12
   38094:	mov	x1, x9
   38098:	mov	x0, x14
   3809c:	bl	372ec <ZSTD_compress@@Base+0x28aa0>
   380a0:	cmn	x0, #0x78
   380a4:	b.hi	38048 <ZSTD_compress@@Base+0x297fc>  // b.pmore
   380a8:	add	x9, x9, x12
   380ac:	add	x13, sp, #0xe0
   380b0:	mov	x2, x19
   380b4:	mov	x1, x9
   380b8:	mov	x0, x13
   380bc:	bl	372ec <ZSTD_compress@@Base+0x28aa0>
   380c0:	cmn	x0, #0x78
   380c4:	b.hi	38048 <ZSTD_compress@@Base+0x297fc>  // b.pmore
   380c8:	add	x12, sp, #0x108
   380cc:	mov	x2, x11
   380d0:	add	x1, x9, x19
   380d4:	mov	x0, x12
   380d8:	bl	372ec <ZSTD_compress@@Base+0x28aa0>
   380dc:	cmn	x0, #0x78
   380e0:	b.hi	38048 <ZSTD_compress@@Base+0x297fc>  // b.pmore
   380e4:	ldr	x0, [sp, #96]
   380e8:	add	x6, x18, #0x4
   380ec:	ubfx	x7, x10, #16, #8
   380f0:	add	x18, x0, #0x3
   380f4:	add	x22, x8, x0
   380f8:	mov	x0, x15
   380fc:	add	x20, x8, x18, lsr #2
   38100:	add	x19, x20, x18, lsr #2
   38104:	add	x18, x19, x18, lsr #2
   38108:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   3810c:	mov	w10, w0
   38110:	mov	x0, x14
   38114:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   38118:	orr	w10, w10, w0
   3811c:	mov	x0, x13
   38120:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   38124:	mov	w9, w0
   38128:	mov	x0, x12
   3812c:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   38130:	orr	w0, w9, w0
   38134:	orr	w0, w0, w10
   38138:	mov	x9, x18
   3813c:	mov	x10, x19
   38140:	mov	x11, x20
   38144:	sub	x1, x22, #0x7
   38148:	str	x1, [sp, #136]
   3814c:	cmp	w0, #0x0
   38150:	ldr	x0, [sp, #136]
   38154:	ccmp	x9, x0, #0x2, eq  // eq = none
   38158:	b.cc	38394 <ZSTD_compress@@Base+0x29b48>  // b.lo, b.ul, b.last
   3815c:	cmp	x20, x8
   38160:	b.cc	38044 <ZSTD_compress@@Base+0x297f8>  // b.lo, b.ul, b.last
   38164:	cmp	x19, x11
   38168:	b.cc	38044 <ZSTD_compress@@Base+0x297f8>  // b.lo, b.ul, b.last
   3816c:	cmp	x18, x10
   38170:	b.cc	38044 <ZSTD_compress@@Base+0x297f8>  // b.lo, b.ul, b.last
   38174:	sub	x21, x20, #0x7
   38178:	mov	x0, x15
   3817c:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   38180:	cmp	w0, #0x0
   38184:	ccmp	x8, x21, #0x2, eq  // eq = none
   38188:	b.cc	3870c <ZSTD_compress@@Base+0x29ec0>  // b.lo, b.ul, b.last
   3818c:	sub	x21, x20, #0x2
   38190:	mov	x0, x15
   38194:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   38198:	cmp	w0, #0x0
   3819c:	ccmp	x8, x21, #0x2, eq  // eq = none
   381a0:	b.ls	387d4 <ZSTD_compress@@Base+0x29f88>  // b.plast
   381a4:	cmp	x21, x8
   381a8:	b.cs	3880c <ZSTD_compress@@Base+0x29fc0>  // b.hs, b.nlast
   381ac:	cmp	x20, x8
   381b0:	b.ls	381ec <ZSTD_compress@@Base+0x299a0>  // b.plast
   381b4:	mov	w1, w7
   381b8:	mov	x0, x15
   381bc:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   381c0:	lsl	x1, x0, #2
   381c4:	add	x0, x6, x0, lsl #2
   381c8:	ldrb	w1, [x6, x1]
   381cc:	strb	w1, [x8]
   381d0:	ldr	w1, [sp, #152]
   381d4:	ldrb	w2, [x0, #3]
   381d8:	cmp	w2, #0x1
   381dc:	b.ne	38844 <ZSTD_compress@@Base+0x29ff8>  // b.any
   381e0:	ldrb	w0, [x0, #2]
   381e4:	add	w0, w0, w1
   381e8:	str	w0, [sp, #152]
   381ec:	sub	x8, x19, #0x7
   381f0:	mov	x0, x14
   381f4:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   381f8:	cmp	w0, #0x0
   381fc:	ccmp	x11, x8, #0x2, eq  // eq = none
   38200:	b.cc	38864 <ZSTD_compress@@Base+0x2a018>  // b.lo, b.ul, b.last
   38204:	sub	x8, x19, #0x2
   38208:	mov	x0, x14
   3820c:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   38210:	cmp	w0, #0x0
   38214:	ccmp	x11, x8, #0x2, eq  // eq = none
   38218:	b.ls	3892c <ZSTD_compress@@Base+0x2a0e0>  // b.plast
   3821c:	cmp	x8, x11
   38220:	b.cs	38964 <ZSTD_compress@@Base+0x2a118>  // b.hs, b.nlast
   38224:	cmp	x19, x11
   38228:	b.ls	38264 <ZSTD_compress@@Base+0x29a18>  // b.plast
   3822c:	mov	w1, w7
   38230:	mov	x0, x14
   38234:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38238:	lsl	x1, x0, #2
   3823c:	add	x0, x6, x0, lsl #2
   38240:	ldrb	w1, [x6, x1]
   38244:	strb	w1, [x11]
   38248:	ldr	w1, [sp, #192]
   3824c:	ldrb	w2, [x0, #3]
   38250:	cmp	w2, #0x1
   38254:	b.ne	3899c <ZSTD_compress@@Base+0x2a150>  // b.any
   38258:	ldrb	w0, [x0, #2]
   3825c:	add	w0, w0, w1
   38260:	str	w0, [sp, #192]
   38264:	sub	x8, x18, #0x7
   38268:	mov	x0, x13
   3826c:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   38270:	cmp	w0, #0x0
   38274:	ccmp	x10, x8, #0x2, eq  // eq = none
   38278:	b.cc	389bc <ZSTD_compress@@Base+0x2a170>  // b.lo, b.ul, b.last
   3827c:	sub	x8, x18, #0x2
   38280:	mov	x0, x13
   38284:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   38288:	cmp	w0, #0x0
   3828c:	ccmp	x10, x8, #0x2, eq  // eq = none
   38290:	b.ls	38a84 <ZSTD_compress@@Base+0x2a238>  // b.plast
   38294:	cmp	x8, x10
   38298:	b.cs	38abc <ZSTD_compress@@Base+0x2a270>  // b.hs, b.nlast
   3829c:	cmp	x18, x10
   382a0:	b.ls	382dc <ZSTD_compress@@Base+0x29a90>  // b.plast
   382a4:	mov	w1, w7
   382a8:	mov	x0, x13
   382ac:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   382b0:	lsl	x1, x0, #2
   382b4:	add	x0, x6, x0, lsl #2
   382b8:	ldrb	w1, [x6, x1]
   382bc:	strb	w1, [x10]
   382c0:	ldr	w1, [sp, #232]
   382c4:	ldrb	w2, [x0, #3]
   382c8:	cmp	w2, #0x1
   382cc:	b.ne	38af4 <ZSTD_compress@@Base+0x2a2a8>  // b.any
   382d0:	ldrb	w0, [x0, #2]
   382d4:	add	w0, w0, w1
   382d8:	str	w0, [sp, #232]
   382dc:	mov	x0, x12
   382e0:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   382e4:	cmp	w0, #0x0
   382e8:	ldr	x0, [sp, #136]
   382ec:	ccmp	x0, x9, #0x0, eq  // eq = none
   382f0:	b.hi	38b14 <ZSTD_compress@@Base+0x2a2c8>  // b.pmore
   382f4:	sub	x8, x22, #0x2
   382f8:	mov	x0, x12
   382fc:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   38300:	cmp	w0, #0x0
   38304:	ccmp	x9, x8, #0x2, eq  // eq = none
   38308:	b.ls	38bdc <ZSTD_compress@@Base+0x2a390>  // b.plast
   3830c:	cmp	x8, x9
   38310:	b.cs	38c14 <ZSTD_compress@@Base+0x2a3c8>  // b.hs, b.nlast
   38314:	cmp	x22, x9
   38318:	b.ls	38354 <ZSTD_compress@@Base+0x29b08>  // b.plast
   3831c:	mov	w1, w7
   38320:	mov	x0, x12
   38324:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38328:	lsl	x1, x0, #2
   3832c:	add	x0, x6, x0, lsl #2
   38330:	ldrb	w1, [x6, x1]
   38334:	strb	w1, [x9]
   38338:	ldr	w1, [sp, #272]
   3833c:	ldrb	w2, [x0, #3]
   38340:	cmp	w2, #0x1
   38344:	b.ne	38c4c <ZSTD_compress@@Base+0x2a400>  // b.any
   38348:	ldrb	w0, [x0, #2]
   3834c:	add	w0, w0, w1
   38350:	str	w0, [sp, #272]
   38354:	add	x0, sp, #0x90
   38358:	bl	372c8 <ZSTD_compress@@Base+0x28a7c>
   3835c:	mov	w3, w0
   38360:	add	x0, sp, #0xb8
   38364:	bl	372c8 <ZSTD_compress@@Base+0x28a7c>
   38368:	and	w3, w3, w0
   3836c:	add	x0, sp, #0xe0
   38370:	bl	372c8 <ZSTD_compress@@Base+0x28a7c>
   38374:	mov	w4, w0
   38378:	mov	x0, x12
   3837c:	bl	372c8 <ZSTD_compress@@Base+0x28a7c>
   38380:	and	w4, w4, w0
   38384:	tst	w4, w3
   38388:	b.eq	38044 <ZSTD_compress@@Base+0x297f8>  // b.none
   3838c:	ldr	x0, [sp, #96]
   38390:	b	38048 <ZSTD_compress@@Base+0x297fc>
   38394:	mov	w1, w7
   38398:	mov	x0, x15
   3839c:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   383a0:	lsl	x1, x0, #2
   383a4:	add	x0, x6, x0, lsl #2
   383a8:	ldrh	w1, [x6, x1]
   383ac:	strh	w1, [x8]
   383b0:	ldr	w1, [sp, #152]
   383b4:	ldrb	w21, [x0, #2]
   383b8:	ldrb	w28, [x0, #3]
   383bc:	mov	x0, x14
   383c0:	add	w21, w21, w1
   383c4:	mov	w1, w7
   383c8:	add	x25, x8, x28
   383cc:	str	w21, [sp, #152]
   383d0:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   383d4:	lsl	x1, x0, #2
   383d8:	add	x0, x6, x0, lsl #2
   383dc:	ldrh	w1, [x6, x1]
   383e0:	strh	w1, [x11]
   383e4:	ldr	w1, [sp, #192]
   383e8:	ldrb	w5, [x0, #2]
   383ec:	ldrb	w27, [x0, #3]
   383f0:	mov	x0, x13
   383f4:	add	w5, w5, w1
   383f8:	mov	w1, w7
   383fc:	add	x23, x11, x27
   38400:	str	w5, [sp, #192]
   38404:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38408:	lsl	x1, x0, #2
   3840c:	add	x0, x6, x0, lsl #2
   38410:	ldrh	w1, [x6, x1]
   38414:	strh	w1, [x10]
   38418:	ldr	w1, [sp, #232]
   3841c:	ldrb	w4, [x0, #2]
   38420:	ldrb	w26, [x0, #3]
   38424:	add	w4, w4, w1
   38428:	mov	w1, w7
   3842c:	add	x0, x10, x26
   38430:	str	x0, [sp, #104]
   38434:	mov	x0, x12
   38438:	str	w4, [sp, #232]
   3843c:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38440:	lsl	x1, x0, #2
   38444:	add	x0, x6, x0, lsl #2
   38448:	ldrh	w1, [x6, x1]
   3844c:	strh	w1, [x9]
   38450:	ldr	w1, [sp, #272]
   38454:	ldrb	w3, [x0, #2]
   38458:	ldrb	w24, [x0, #3]
   3845c:	add	w3, w3, w1
   38460:	mov	w1, w7
   38464:	add	x0, x9, x24
   38468:	str	x0, [sp, #112]
   3846c:	mov	x0, x15
   38470:	str	w3, [sp, #272]
   38474:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38478:	lsl	x1, x0, #2
   3847c:	add	x0, x6, x0, lsl #2
   38480:	ldrh	w1, [x6, x1]
   38484:	strh	w1, [x8, x28]
   38488:	mov	w1, w7
   3848c:	ldrb	w8, [x0, #2]
   38490:	add	w8, w8, w21
   38494:	ldrb	w21, [x0, #3]
   38498:	str	w8, [sp, #152]
   3849c:	add	x0, x25, x21
   384a0:	str	x0, [sp, #120]
   384a4:	mov	x0, x14
   384a8:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   384ac:	lsl	x1, x0, #2
   384b0:	add	x0, x6, x0, lsl #2
   384b4:	ldrh	w1, [x6, x1]
   384b8:	strh	w1, [x11, x27]
   384bc:	ldrb	w1, [x0, #2]
   384c0:	ldrb	w11, [x0, #3]
   384c4:	add	w5, w1, w5
   384c8:	mov	w1, w7
   384cc:	add	x0, x23, x11
   384d0:	str	x0, [sp, #128]
   384d4:	mov	x0, x13
   384d8:	str	w5, [sp, #192]
   384dc:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   384e0:	lsl	x1, x0, #2
   384e4:	add	x0, x6, x0, lsl #2
   384e8:	ldrh	w1, [x6, x1]
   384ec:	strh	w1, [x10, x26]
   384f0:	ldrb	w1, [x0, #2]
   384f4:	add	w4, w1, w4
   384f8:	str	w4, [sp, #232]
   384fc:	ldrb	w10, [x0, #3]
   38500:	mov	w1, w7
   38504:	ldr	x0, [sp, #104]
   38508:	add	x26, x0, x10
   3850c:	mov	x0, x12
   38510:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38514:	lsl	x1, x0, #2
   38518:	add	x0, x6, x0, lsl #2
   3851c:	ldrh	w1, [x6, x1]
   38520:	strh	w1, [x9, x24]
   38524:	ldrb	w1, [x0, #2]
   38528:	ldrb	w9, [x0, #3]
   3852c:	add	w3, w1, w3
   38530:	mov	w1, w7
   38534:	ldr	x0, [sp, #112]
   38538:	str	w3, [sp, #272]
   3853c:	add	x24, x0, x9
   38540:	mov	x0, x15
   38544:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38548:	lsl	x1, x0, #2
   3854c:	add	x0, x6, x0, lsl #2
   38550:	ldrh	w1, [x6, x1]
   38554:	strh	w1, [x25, x21]
   38558:	mov	w1, w7
   3855c:	ldrb	w21, [x0, #2]
   38560:	ldrb	w28, [x0, #3]
   38564:	ldr	x0, [sp, #120]
   38568:	add	w21, w21, w8
   3856c:	str	w21, [sp, #152]
   38570:	add	x8, x0, x28
   38574:	mov	x0, x14
   38578:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   3857c:	lsl	x1, x0, #2
   38580:	add	x0, x6, x0, lsl #2
   38584:	ldrh	w1, [x6, x1]
   38588:	strh	w1, [x23, x11]
   3858c:	ldrb	w1, [x0, #2]
   38590:	ldrb	w27, [x0, #3]
   38594:	ldr	x0, [sp, #128]
   38598:	add	w5, w1, w5
   3859c:	mov	w1, w7
   385a0:	str	w5, [sp, #192]
   385a4:	add	x11, x0, x27
   385a8:	mov	x0, x13
   385ac:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   385b0:	lsl	x1, x0, #2
   385b4:	ldr	x2, [sp, #104]
   385b8:	add	x0, x6, x0, lsl #2
   385bc:	ldrh	w1, [x6, x1]
   385c0:	strh	w1, [x2, x10]
   385c4:	ldrb	w1, [x0, #2]
   385c8:	ldrb	w25, [x0, #3]
   385cc:	mov	x0, x12
   385d0:	add	w4, w1, w4
   385d4:	mov	w1, w7
   385d8:	add	x10, x26, x25
   385dc:	str	w4, [sp, #232]
   385e0:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   385e4:	lsl	x1, x0, #2
   385e8:	ldr	x2, [sp, #112]
   385ec:	add	x0, x6, x0, lsl #2
   385f0:	ldrh	w1, [x6, x1]
   385f4:	strh	w1, [x2, x9]
   385f8:	ldrb	w23, [x0, #3]
   385fc:	ldrb	w1, [x0, #2]
   38600:	mov	x0, x15
   38604:	add	x9, x24, x23
   38608:	add	w3, w1, w3
   3860c:	mov	w1, w7
   38610:	str	w3, [sp, #272]
   38614:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38618:	lsl	x1, x0, #2
   3861c:	ldr	x2, [sp, #120]
   38620:	add	x0, x6, x0, lsl #2
   38624:	ldrh	w1, [x6, x1]
   38628:	strh	w1, [x2, x28]
   3862c:	ldrb	w1, [x0, #2]
   38630:	add	w21, w1, w21
   38634:	str	w21, [sp, #152]
   38638:	ldrb	w0, [x0, #3]
   3863c:	mov	w1, w7
   38640:	add	x8, x8, x0
   38644:	mov	x0, x14
   38648:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   3864c:	lsl	x1, x0, #2
   38650:	ldr	x2, [sp, #128]
   38654:	add	x0, x6, x0, lsl #2
   38658:	ldrh	w1, [x6, x1]
   3865c:	strh	w1, [x2, x27]
   38660:	ldrb	w1, [x0, #2]
   38664:	ldrb	w0, [x0, #3]
   38668:	add	w5, w1, w5
   3866c:	mov	w1, w7
   38670:	add	x11, x11, x0
   38674:	mov	x0, x13
   38678:	str	w5, [sp, #192]
   3867c:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38680:	lsl	x1, x0, #2
   38684:	add	x0, x6, x0, lsl #2
   38688:	ldrh	w1, [x6, x1]
   3868c:	strh	w1, [x26, x25]
   38690:	ldrb	w1, [x0, #2]
   38694:	ldrb	w0, [x0, #3]
   38698:	add	w4, w1, w4
   3869c:	mov	w1, w7
   386a0:	add	x10, x10, x0
   386a4:	mov	x0, x12
   386a8:	str	w4, [sp, #232]
   386ac:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   386b0:	lsl	x1, x0, #2
   386b4:	add	x0, x6, x0, lsl #2
   386b8:	ldrh	w1, [x6, x1]
   386bc:	strh	w1, [x24, x23]
   386c0:	ldrb	w1, [x0, #2]
   386c4:	ldrb	w0, [x0, #3]
   386c8:	add	w3, w1, w3
   386cc:	str	w3, [sp, #272]
   386d0:	add	x9, x9, x0
   386d4:	mov	x0, x15
   386d8:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   386dc:	mov	w23, w0
   386e0:	mov	x0, x14
   386e4:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   386e8:	orr	w23, w23, w0
   386ec:	mov	x0, x13
   386f0:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   386f4:	mov	w21, w0
   386f8:	mov	x0, x12
   386fc:	bl	37220 <ZSTD_compress@@Base+0x289d4>
   38700:	orr	w0, w21, w0
   38704:	orr	w0, w0, w23
   38708:	b	3814c <ZSTD_compress@@Base+0x29900>
   3870c:	mov	w1, w7
   38710:	mov	x0, x15
   38714:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38718:	lsl	x1, x0, #2
   3871c:	add	x0, x6, x0, lsl #2
   38720:	ldrh	w1, [x6, x1]
   38724:	strh	w1, [x8]
   38728:	ldr	w1, [sp, #152]
   3872c:	ldrb	w5, [x0, #3]
   38730:	ldrb	w3, [x0, #2]
   38734:	mov	x0, x15
   38738:	add	x4, x8, x5
   3873c:	add	w3, w3, w1
   38740:	mov	w1, w7
   38744:	str	w3, [sp, #152]
   38748:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   3874c:	lsl	x1, x0, #2
   38750:	add	x0, x6, x0, lsl #2
   38754:	ldrh	w1, [x6, x1]
   38758:	strh	w1, [x8, x5]
   3875c:	ldrb	w8, [x0, #3]
   38760:	ldrb	w1, [x0, #2]
   38764:	mov	x0, x15
   38768:	add	x5, x4, x8
   3876c:	add	w3, w1, w3
   38770:	mov	w1, w7
   38774:	str	w3, [sp, #152]
   38778:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   3877c:	lsl	x1, x0, #2
   38780:	add	x0, x6, x0, lsl #2
   38784:	ldrh	w1, [x6, x1]
   38788:	strh	w1, [x4, x8]
   3878c:	ldrb	w1, [x0, #2]
   38790:	ldrb	w4, [x0, #3]
   38794:	mov	x0, x15
   38798:	add	w3, w1, w3
   3879c:	mov	w1, w7
   387a0:	add	x8, x5, x4
   387a4:	str	w3, [sp, #152]
   387a8:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   387ac:	lsl	x1, x0, #2
   387b0:	add	x0, x6, x0, lsl #2
   387b4:	ldrh	w1, [x6, x1]
   387b8:	strh	w1, [x5, x4]
   387bc:	ldrb	w1, [x0, #2]
   387c0:	ldrb	w0, [x0, #3]
   387c4:	add	w3, w1, w3
   387c8:	str	w3, [sp, #152]
   387cc:	add	x8, x8, x0
   387d0:	b	38178 <ZSTD_compress@@Base+0x2992c>
   387d4:	mov	w1, w7
   387d8:	mov	x0, x15
   387dc:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   387e0:	lsl	x1, x0, #2
   387e4:	add	x0, x6, x0, lsl #2
   387e8:	ldrh	w1, [x6, x1]
   387ec:	strh	w1, [x8]
   387f0:	ldr	w1, [sp, #152]
   387f4:	ldrb	w2, [x0, #2]
   387f8:	ldrb	w0, [x0, #3]
   387fc:	add	w1, w1, w2
   38800:	str	w1, [sp, #152]
   38804:	add	x8, x8, x0
   38808:	b	38190 <ZSTD_compress@@Base+0x29944>
   3880c:	mov	w1, w7
   38810:	mov	x0, x15
   38814:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38818:	lsl	x1, x0, #2
   3881c:	add	x0, x6, x0, lsl #2
   38820:	ldrh	w1, [x6, x1]
   38824:	strh	w1, [x8]
   38828:	ldr	w1, [sp, #152]
   3882c:	ldrb	w2, [x0, #2]
   38830:	ldrb	w0, [x0, #3]
   38834:	add	w1, w1, w2
   38838:	str	w1, [sp, #152]
   3883c:	add	x8, x8, x0
   38840:	b	381a4 <ZSTD_compress@@Base+0x29958>
   38844:	cmp	w1, #0x3f
   38848:	b.hi	381ec <ZSTD_compress@@Base+0x299a0>  // b.pmore
   3884c:	ldrb	w0, [x0, #2]
   38850:	add	w0, w0, w1
   38854:	cmp	w0, #0x40
   38858:	b.ls	381e8 <ZSTD_compress@@Base+0x2999c>  // b.plast
   3885c:	mov	w0, #0x40                  	// #64
   38860:	b	381e8 <ZSTD_compress@@Base+0x2999c>
   38864:	mov	w1, w7
   38868:	mov	x0, x14
   3886c:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38870:	lsl	x1, x0, #2
   38874:	add	x0, x6, x0, lsl #2
   38878:	ldr	w3, [sp, #192]
   3887c:	ldrh	w1, [x6, x1]
   38880:	strh	w1, [x11]
   38884:	mov	w1, w7
   38888:	ldrb	w4, [x0, #2]
   3888c:	add	w4, w4, w3
   38890:	ldrb	w3, [x0, #3]
   38894:	mov	x0, x14
   38898:	str	w4, [sp, #192]
   3889c:	add	x15, x11, x3
   388a0:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   388a4:	lsl	x1, x0, #2
   388a8:	add	x0, x6, x0, lsl #2
   388ac:	ldrh	w1, [x6, x1]
   388b0:	strh	w1, [x11, x3]
   388b4:	mov	w1, w7
   388b8:	ldrb	w3, [x0, #2]
   388bc:	add	w4, w3, w4
   388c0:	ldrb	w3, [x0, #3]
   388c4:	mov	x0, x14
   388c8:	str	w4, [sp, #192]
   388cc:	add	x5, x15, x3
   388d0:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   388d4:	lsl	x1, x0, #2
   388d8:	add	x0, x6, x0, lsl #2
   388dc:	ldrh	w1, [x6, x1]
   388e0:	strh	w1, [x15, x3]
   388e4:	mov	w1, w7
   388e8:	ldrb	w3, [x0, #2]
   388ec:	add	w3, w3, w4
   388f0:	ldrb	w4, [x0, #3]
   388f4:	mov	x0, x14
   388f8:	str	w3, [sp, #192]
   388fc:	add	x11, x5, x4
   38900:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38904:	lsl	x1, x0, #2
   38908:	add	x0, x6, x0, lsl #2
   3890c:	ldrh	w1, [x6, x1]
   38910:	strh	w1, [x5, x4]
   38914:	ldrb	w1, [x0, #2]
   38918:	ldrb	w0, [x0, #3]
   3891c:	add	w3, w1, w3
   38920:	str	w3, [sp, #192]
   38924:	add	x11, x11, x0
   38928:	b	381f0 <ZSTD_compress@@Base+0x299a4>
   3892c:	mov	w1, w7
   38930:	mov	x0, x14
   38934:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38938:	lsl	x1, x0, #2
   3893c:	add	x0, x6, x0, lsl #2
   38940:	ldrh	w1, [x6, x1]
   38944:	strh	w1, [x11]
   38948:	ldr	w1, [sp, #192]
   3894c:	ldrb	w2, [x0, #2]
   38950:	ldrb	w0, [x0, #3]
   38954:	add	w1, w1, w2
   38958:	str	w1, [sp, #192]
   3895c:	add	x11, x11, x0
   38960:	b	38208 <ZSTD_compress@@Base+0x299bc>
   38964:	mov	w1, w7
   38968:	mov	x0, x14
   3896c:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38970:	lsl	x1, x0, #2
   38974:	add	x0, x6, x0, lsl #2
   38978:	ldrh	w1, [x6, x1]
   3897c:	strh	w1, [x11]
   38980:	ldr	w1, [sp, #192]
   38984:	ldrb	w2, [x0, #2]
   38988:	ldrb	w0, [x0, #3]
   3898c:	add	w1, w1, w2
   38990:	str	w1, [sp, #192]
   38994:	add	x11, x11, x0
   38998:	b	3821c <ZSTD_compress@@Base+0x299d0>
   3899c:	cmp	w1, #0x3f
   389a0:	b.hi	38264 <ZSTD_compress@@Base+0x29a18>  // b.pmore
   389a4:	ldrb	w0, [x0, #2]
   389a8:	add	w0, w0, w1
   389ac:	cmp	w0, #0x40
   389b0:	b.ls	38260 <ZSTD_compress@@Base+0x29a14>  // b.plast
   389b4:	mov	w0, #0x40                  	// #64
   389b8:	b	38260 <ZSTD_compress@@Base+0x29a14>
   389bc:	mov	w1, w7
   389c0:	mov	x0, x13
   389c4:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   389c8:	lsl	x1, x0, #2
   389cc:	add	x0, x6, x0, lsl #2
   389d0:	ldr	w3, [sp, #232]
   389d4:	ldrh	w1, [x6, x1]
   389d8:	strh	w1, [x10]
   389dc:	mov	w1, w7
   389e0:	ldrb	w4, [x0, #2]
   389e4:	add	w4, w4, w3
   389e8:	ldrb	w3, [x0, #3]
   389ec:	mov	x0, x13
   389f0:	str	w4, [sp, #232]
   389f4:	add	x11, x10, x3
   389f8:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   389fc:	lsl	x1, x0, #2
   38a00:	add	x0, x6, x0, lsl #2
   38a04:	ldrh	w1, [x6, x1]
   38a08:	strh	w1, [x10, x3]
   38a0c:	mov	w1, w7
   38a10:	ldrb	w3, [x0, #2]
   38a14:	add	w4, w3, w4
   38a18:	ldrb	w3, [x0, #3]
   38a1c:	mov	x0, x13
   38a20:	str	w4, [sp, #232]
   38a24:	add	x5, x11, x3
   38a28:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38a2c:	lsl	x1, x0, #2
   38a30:	add	x0, x6, x0, lsl #2
   38a34:	ldrh	w1, [x6, x1]
   38a38:	strh	w1, [x11, x3]
   38a3c:	mov	w1, w7
   38a40:	ldrb	w3, [x0, #2]
   38a44:	add	w3, w3, w4
   38a48:	ldrb	w4, [x0, #3]
   38a4c:	mov	x0, x13
   38a50:	str	w3, [sp, #232]
   38a54:	add	x10, x5, x4
   38a58:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38a5c:	lsl	x1, x0, #2
   38a60:	add	x0, x6, x0, lsl #2
   38a64:	ldrh	w1, [x6, x1]
   38a68:	strh	w1, [x5, x4]
   38a6c:	ldrb	w1, [x0, #2]
   38a70:	ldrb	w0, [x0, #3]
   38a74:	add	w3, w1, w3
   38a78:	str	w3, [sp, #232]
   38a7c:	add	x10, x10, x0
   38a80:	b	38268 <ZSTD_compress@@Base+0x29a1c>
   38a84:	mov	w1, w7
   38a88:	mov	x0, x13
   38a8c:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38a90:	lsl	x1, x0, #2
   38a94:	add	x0, x6, x0, lsl #2
   38a98:	ldrh	w1, [x6, x1]
   38a9c:	strh	w1, [x10]
   38aa0:	ldr	w1, [sp, #232]
   38aa4:	ldrb	w2, [x0, #2]
   38aa8:	ldrb	w0, [x0, #3]
   38aac:	add	w1, w1, w2
   38ab0:	str	w1, [sp, #232]
   38ab4:	add	x10, x10, x0
   38ab8:	b	38280 <ZSTD_compress@@Base+0x29a34>
   38abc:	mov	w1, w7
   38ac0:	mov	x0, x13
   38ac4:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38ac8:	lsl	x1, x0, #2
   38acc:	add	x0, x6, x0, lsl #2
   38ad0:	ldrh	w1, [x6, x1]
   38ad4:	strh	w1, [x10]
   38ad8:	ldr	w1, [sp, #232]
   38adc:	ldrb	w2, [x0, #2]
   38ae0:	ldrb	w0, [x0, #3]
   38ae4:	add	w1, w1, w2
   38ae8:	str	w1, [sp, #232]
   38aec:	add	x10, x10, x0
   38af0:	b	38294 <ZSTD_compress@@Base+0x29a48>
   38af4:	cmp	w1, #0x3f
   38af8:	b.hi	382dc <ZSTD_compress@@Base+0x29a90>  // b.pmore
   38afc:	ldrb	w0, [x0, #2]
   38b00:	add	w0, w0, w1
   38b04:	cmp	w0, #0x40
   38b08:	b.ls	382d8 <ZSTD_compress@@Base+0x29a8c>  // b.plast
   38b0c:	mov	w0, #0x40                  	// #64
   38b10:	b	382d8 <ZSTD_compress@@Base+0x29a8c>
   38b14:	mov	w1, w7
   38b18:	mov	x0, x12
   38b1c:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38b20:	lsl	x1, x0, #2
   38b24:	add	x0, x6, x0, lsl #2
   38b28:	ldr	w3, [sp, #272]
   38b2c:	ldrh	w1, [x6, x1]
   38b30:	strh	w1, [x9]
   38b34:	mov	w1, w7
   38b38:	ldrb	w4, [x0, #2]
   38b3c:	add	w4, w4, w3
   38b40:	ldrb	w3, [x0, #3]
   38b44:	mov	x0, x12
   38b48:	str	w4, [sp, #272]
   38b4c:	add	x8, x9, x3
   38b50:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38b54:	lsl	x1, x0, #2
   38b58:	add	x0, x6, x0, lsl #2
   38b5c:	ldrh	w1, [x6, x1]
   38b60:	strh	w1, [x9, x3]
   38b64:	mov	w1, w7
   38b68:	ldrb	w3, [x0, #2]
   38b6c:	add	w4, w3, w4
   38b70:	ldrb	w3, [x0, #3]
   38b74:	mov	x0, x12
   38b78:	str	w4, [sp, #272]
   38b7c:	add	x5, x8, x3
   38b80:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38b84:	lsl	x1, x0, #2
   38b88:	add	x0, x6, x0, lsl #2
   38b8c:	ldrh	w1, [x6, x1]
   38b90:	strh	w1, [x8, x3]
   38b94:	mov	w1, w7
   38b98:	ldrb	w3, [x0, #2]
   38b9c:	add	w3, w3, w4
   38ba0:	ldrb	w4, [x0, #3]
   38ba4:	mov	x0, x12
   38ba8:	str	w3, [sp, #272]
   38bac:	add	x9, x5, x4
   38bb0:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38bb4:	lsl	x1, x0, #2
   38bb8:	add	x0, x6, x0, lsl #2
   38bbc:	ldrh	w1, [x6, x1]
   38bc0:	strh	w1, [x5, x4]
   38bc4:	ldrb	w1, [x0, #2]
   38bc8:	ldrb	w0, [x0, #3]
   38bcc:	add	w3, w1, w3
   38bd0:	str	w3, [sp, #272]
   38bd4:	add	x9, x9, x0
   38bd8:	b	382dc <ZSTD_compress@@Base+0x29a90>
   38bdc:	mov	w1, w7
   38be0:	mov	x0, x12
   38be4:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38be8:	lsl	x1, x0, #2
   38bec:	add	x0, x6, x0, lsl #2
   38bf0:	ldrh	w1, [x6, x1]
   38bf4:	strh	w1, [x9]
   38bf8:	ldr	w1, [sp, #272]
   38bfc:	ldrb	w2, [x0, #2]
   38c00:	ldrb	w0, [x0, #3]
   38c04:	add	w1, w1, w2
   38c08:	str	w1, [sp, #272]
   38c0c:	add	x9, x9, x0
   38c10:	b	382f8 <ZSTD_compress@@Base+0x29aac>
   38c14:	mov	w1, w7
   38c18:	mov	x0, x12
   38c1c:	bl	37208 <ZSTD_compress@@Base+0x289bc>
   38c20:	lsl	x1, x0, #2
   38c24:	add	x0, x6, x0, lsl #2
   38c28:	ldrh	w1, [x6, x1]
   38c2c:	strh	w1, [x9]
   38c30:	ldr	w1, [sp, #272]
   38c34:	ldrb	w2, [x0, #2]
   38c38:	ldrb	w0, [x0, #3]
   38c3c:	add	w1, w1, w2
   38c40:	str	w1, [sp, #272]
   38c44:	add	x9, x9, x0
   38c48:	b	3830c <ZSTD_compress@@Base+0x29ac0>
   38c4c:	cmp	w1, #0x3f
   38c50:	b.hi	38354 <ZSTD_compress@@Base+0x29b08>  // b.pmore
   38c54:	ldrb	w0, [x0, #2]
   38c58:	add	w0, w0, w1
   38c5c:	cmp	w0, #0x40
   38c60:	b.ls	38350 <ZSTD_compress@@Base+0x29b04>  // b.plast
   38c64:	mov	w0, #0x40                  	// #64
   38c68:	b	38350 <ZSTD_compress@@Base+0x29b04>
   38c6c:	stp	x29, x30, [sp, #-64]!
   38c70:	cmp	x4, #0x13f
   38c74:	mov	x29, sp
   38c78:	stp	x19, x20, [sp, #16]
   38c7c:	str	x21, [sp, #32]
   38c80:	stp	wzr, wzr, [sp, #56]
   38c84:	b.ls	38ce4 <ZSTD_compress@@Base+0x2a498>  // b.plast
   38c88:	mov	x19, x3
   38c8c:	add	x21, x3, #0x40
   38c90:	mov	x5, x1
   38c94:	mov	x6, x2
   38c98:	mov	x20, x0
   38c9c:	add	x4, sp, #0x38
   38ca0:	add	x3, sp, #0x3c
   38ca4:	mov	x2, x19
   38ca8:	mov	x0, x21
   38cac:	mov	x1, #0x100                 	// #256
   38cb0:	bl	4f64 <ZSTD_initDStream_usingDDict@plt+0x3e4>
   38cb4:	cmn	x0, #0x78
   38cb8:	b.hi	38d2c <ZSTD_compress@@Base+0x2a4e0>  // b.pmore
   38cbc:	ldr	w1, [x20]
   38cc0:	mov	w2, #0x0                   	// #0
   38cc4:	lsr	w3, w1, #24
   38cc8:	bfxil	w2, w1, #0, #8
   38ccc:	and	w1, w1, #0xff
   38cd0:	bfi	w2, w3, #24, #8
   38cd4:	ldr	w3, [sp, #56]
   38cd8:	add	w1, w1, #0x1
   38cdc:	cmp	w1, w3
   38ce0:	b.cs	38cec <ZSTD_compress@@Base+0x2a4a0>  // b.hs, b.nlast
   38ce4:	mov	x0, #0xffffffffffffffd4    	// #-44
   38ce8:	b	38d2c <ZSTD_compress@@Base+0x2a4e0>
   38cec:	and	w4, w3, #0xff
   38cf0:	and	w2, w2, #0xffff00ff
   38cf4:	add	w3, w3, #0x1
   38cf8:	mov	x1, #0x0                   	// #0
   38cfc:	bfi	w2, w4, #16, #8
   38d00:	str	w2, [x20]
   38d04:	mov	w2, #0x0                   	// #0
   38d08:	add	x1, x1, #0x1
   38d0c:	cmp	w3, w1
   38d10:	b.hi	38d3c <ZSTD_compress@@Base+0x2a4f0>  // b.pmore
   38d14:	ldr	w8, [sp, #60]
   38d18:	mov	w9, #0x1                   	// #1
   38d1c:	add	w4, w4, w9
   38d20:	mov	x3, #0x0                   	// #0
   38d24:	cmp	w8, w3
   38d28:	b.hi	38d54 <ZSTD_compress@@Base+0x2a508>  // b.pmore
   38d2c:	ldp	x19, x20, [sp, #16]
   38d30:	ldr	x21, [sp, #32]
   38d34:	ldp	x29, x30, [sp], #64
   38d38:	ret
   38d3c:	ldr	w6, [x19, x1, lsl #2]
   38d40:	sub	w5, w1, #0x1
   38d44:	str	w2, [x19, x1, lsl #2]
   38d48:	lsl	w5, w6, w5
   38d4c:	add	w2, w5, w2
   38d50:	b	38d08 <ZSTD_compress@@Base+0x2a4bc>
   38d54:	ldrb	w1, [x21, x3]
   38d58:	and	w10, w3, #0xff
   38d5c:	sub	w7, w4, w1
   38d60:	ubfiz	x2, x1, #2, #8
   38d64:	lsl	w5, w9, w1
   38d68:	and	w7, w7, #0xff
   38d6c:	ldr	w1, [x19, x2]
   38d70:	add	x6, x20, w1, uxtw #1
   38d74:	add	w5, w1, w5, asr #1
   38d78:	add	x6, x6, #0x2
   38d7c:	cmp	w5, w1
   38d80:	b.hi	38d90 <ZSTD_compress@@Base+0x2a544>  // b.pmore
   38d84:	add	x3, x3, #0x1
   38d88:	str	w5, [x19, x2]
   38d8c:	b	38d24 <ZSTD_compress@@Base+0x2a4d8>
   38d90:	add	w1, w1, #0x1
   38d94:	strb	w10, [x6, #2]
   38d98:	strb	w7, [x6, #3]
   38d9c:	b	38d78 <ZSTD_compress@@Base+0x2a52c>
   38da0:	stp	x29, x30, [sp, #-64]!
   38da4:	mov	x29, sp
   38da8:	stp	x19, x20, [sp, #16]
   38dac:	mov	x20, x3
   38db0:	mov	x19, x4
   38db4:	mov	x3, x5
   38db8:	mov	x4, x6
   38dbc:	stp	x21, x22, [sp, #32]
   38dc0:	mov	x21, x1
   38dc4:	mov	x22, x2
   38dc8:	mov	x1, x20
   38dcc:	mov	x2, x19
   38dd0:	str	x23, [sp, #48]
   38dd4:	mov	x23, x0
   38dd8:	bl	38c6c <ZSTD_compress@@Base+0x2a420>
   38ddc:	cmn	x0, #0x78
   38de0:	b.hi	38e20 <ZSTD_compress@@Base+0x2a5d4>  // b.pmore
   38de4:	cmp	x19, x0
   38de8:	b.ls	38e1c <ZSTD_compress@@Base+0x2a5d0>  // b.plast
   38dec:	sub	x3, x19, x0
   38df0:	cmp	x3, #0x9
   38df4:	b.ls	38e34 <ZSTD_compress@@Base+0x2a5e8>  // b.plast
   38df8:	add	x2, x20, x0
   38dfc:	mov	x4, x23
   38e00:	mov	x1, x22
   38e04:	mov	x0, x21
   38e08:	ldp	x19, x20, [sp, #16]
   38e0c:	ldp	x21, x22, [sp, #32]
   38e10:	ldr	x23, [sp, #48]
   38e14:	ldp	x29, x30, [sp], #64
   38e18:	b	3757c <ZSTD_compress@@Base+0x28d30>
   38e1c:	mov	x0, #0xffffffffffffffb8    	// #-72
   38e20:	ldp	x19, x20, [sp, #16]
   38e24:	ldp	x21, x22, [sp, #32]
   38e28:	ldr	x23, [sp, #48]
   38e2c:	ldp	x29, x30, [sp], #64
   38e30:	ret
   38e34:	mov	x0, #0xffffffffffffffec    	// #-20
   38e38:	b	38e20 <ZSTD_compress@@Base+0x2a5d4>
   38e3c:	sub	sp, sp, #0x810
   38e40:	mov	x4, #0x800                 	// #2048
   38e44:	add	x3, sp, #0x10
   38e48:	stp	x29, x30, [sp]
   38e4c:	mov	x29, sp
   38e50:	bl	38c6c <ZSTD_compress@@Base+0x2a420>
   38e54:	ldp	x29, x30, [sp]
   38e58:	add	sp, sp, #0x810
   38e5c:	ret
   38e60:	ldrb	w5, [x4, #1]
   38e64:	cbnz	w5, 38e6c <ZSTD_compress@@Base+0x2a620>
   38e68:	b	37424 <ZSTD_compress@@Base+0x28bd8>
   38e6c:	mov	x0, #0xffffffffffffffff    	// #-1
   38e70:	ret
   38e74:	stp	x29, x30, [sp, #-64]!
   38e78:	mov	x29, sp
   38e7c:	stp	x19, x20, [sp, #16]
   38e80:	mov	x20, x3
   38e84:	mov	x19, x4
   38e88:	mov	x3, x5
   38e8c:	mov	x4, x6
   38e90:	stp	x21, x22, [sp, #32]
   38e94:	mov	x21, x1
   38e98:	mov	x22, x2
   38e9c:	mov	x1, x20
   38ea0:	mov	x2, x19
   38ea4:	str	x23, [sp, #48]
   38ea8:	mov	x23, x0
   38eac:	bl	38c6c <ZSTD_compress@@Base+0x2a420>
   38eb0:	cmn	x0, #0x78
   38eb4:	b.hi	38eec <ZSTD_compress@@Base+0x2a6a0>  // b.pmore
   38eb8:	cmp	x19, x0
   38ebc:	b.ls	38ee8 <ZSTD_compress@@Base+0x2a69c>  // b.plast
   38ec0:	sub	x3, x19, x0
   38ec4:	add	x2, x20, x0
   38ec8:	mov	x4, x23
   38ecc:	mov	x1, x22
   38ed0:	mov	x0, x21
   38ed4:	ldp	x19, x20, [sp, #16]
   38ed8:	ldp	x21, x22, [sp, #32]
   38edc:	ldr	x23, [sp, #48]
   38ee0:	ldp	x29, x30, [sp], #64
   38ee4:	b	37424 <ZSTD_compress@@Base+0x28bd8>
   38ee8:	mov	x0, #0xffffffffffffffb8    	// #-72
   38eec:	ldp	x19, x20, [sp, #16]
   38ef0:	ldp	x21, x22, [sp, #32]
   38ef4:	ldr	x23, [sp, #48]
   38ef8:	ldp	x29, x30, [sp], #64
   38efc:	ret
   38f00:	sub	sp, sp, #0x810
   38f04:	mov	x6, #0x800                 	// #2048
   38f08:	add	x5, sp, #0x10
   38f0c:	stp	x29, x30, [sp]
   38f10:	mov	x29, sp
   38f14:	bl	38e74 <ZSTD_compress@@Base+0x2a628>
   38f18:	ldp	x29, x30, [sp]
   38f1c:	add	sp, sp, #0x810
   38f20:	ret
   38f24:	mov	x12, #0x2040                	// #8256
   38f28:	sub	sp, sp, x12
   38f2c:	add	x5, sp, #0x38
   38f30:	stp	x29, x30, [sp]
   38f34:	mov	x29, sp
   38f38:	stp	x19, x20, [sp, #16]
   38f3c:	mov	x19, x0
   38f40:	mov	x20, x1
   38f44:	mov	x0, x5
   38f48:	mov	w1, #0x0                   	// #0
   38f4c:	stp	x21, x22, [sp, #32]
   38f50:	mov	x22, x3
   38f54:	mov	x21, x2
   38f58:	mov	x2, #0x2004                	// #8196
   38f5c:	bl	4700 <memset@plt>
   38f60:	mov	x5, x0
   38f64:	mov	w0, #0xb                   	// #11
   38f68:	movk	w0, #0xb00, lsl #16
   38f6c:	mov	x4, x22
   38f70:	mov	x3, x21
   38f74:	mov	x2, x20
   38f78:	mov	x1, x19
   38f7c:	str	w0, [sp, #56]
   38f80:	mov	x0, x5
   38f84:	bl	38f00 <ZSTD_compress@@Base+0x2a6b4>
   38f88:	mov	x12, #0x2040                	// #8256
   38f8c:	ldp	x29, x30, [sp]
   38f90:	ldp	x19, x20, [sp, #16]
   38f94:	ldp	x21, x22, [sp, #32]
   38f98:	add	sp, sp, x12
   38f9c:	ret
   38fa0:	ldrb	w6, [x4, #1]
   38fa4:	cbnz	w6, 38fb4 <ZSTD_compress@@Base+0x2a768>
   38fa8:	cmp	x3, #0x9
   38fac:	b.ls	38fbc <ZSTD_compress@@Base+0x2a770>  // b.plast
   38fb0:	b	3757c <ZSTD_compress@@Base+0x28d30>
   38fb4:	mov	x0, #0xffffffffffffffff    	// #-1
   38fb8:	ret
   38fbc:	mov	x0, #0xffffffffffffffec    	// #-20
   38fc0:	b	38fb8 <ZSTD_compress@@Base+0x2a76c>
   38fc4:	b	38da0 <ZSTD_compress@@Base+0x2a554>
   38fc8:	sub	sp, sp, #0x810
   38fcc:	mov	x6, #0x800                 	// #2048
   38fd0:	add	x5, sp, #0x10
   38fd4:	stp	x29, x30, [sp]
   38fd8:	mov	x29, sp
   38fdc:	bl	38da0 <ZSTD_compress@@Base+0x2a554>
   38fe0:	ldp	x29, x30, [sp]
   38fe4:	add	sp, sp, #0x810
   38fe8:	ret
   38fec:	mov	x12, #0x2040                	// #8256
   38ff0:	sub	sp, sp, x12
   38ff4:	add	x5, sp, #0x38
   38ff8:	stp	x29, x30, [sp]
   38ffc:	mov	x29, sp
   39000:	stp	x19, x20, [sp, #16]
   39004:	mov	x19, x0
   39008:	mov	x20, x1
   3900c:	mov	x0, x5
   39010:	mov	w1, #0x0                   	// #0
   39014:	stp	x21, x22, [sp, #32]
   39018:	mov	x22, x3
   3901c:	mov	x21, x2
   39020:	mov	x2, #0x2004                	// #8196
   39024:	bl	4700 <memset@plt>
   39028:	mov	x5, x0
   3902c:	mov	w0, #0xb                   	// #11
   39030:	movk	w0, #0xb00, lsl #16
   39034:	mov	x4, x22
   39038:	mov	x3, x21
   3903c:	mov	x2, x20
   39040:	mov	x1, x19
   39044:	str	w0, [sp, #56]
   39048:	mov	x0, x5
   3904c:	bl	38fc8 <ZSTD_compress@@Base+0x2a77c>
   39050:	mov	x12, #0x2040                	// #8256
   39054:	ldp	x29, x30, [sp]
   39058:	ldp	x19, x20, [sp, #16]
   3905c:	ldp	x21, x22, [sp, #32]
   39060:	add	sp, sp, x12
   39064:	ret
   39068:	stp	x29, x30, [sp, #-304]!
   3906c:	cmp	x4, #0x5db
   39070:	mov	x29, sp
   39074:	stp	x19, x20, [sp, #16]
   39078:	stp	x21, x22, [sp, #32]
   3907c:	stp	x23, x24, [sp, #48]
   39080:	mov	w23, #0x0                   	// #0
   39084:	stp	x25, x26, [sp, #64]
   39088:	mov	x25, x0
   3908c:	stp	x27, x28, [sp, #80]
   39090:	ldr	w21, [x0]
   39094:	and	w0, w21, #0xff
   39098:	str	w0, [sp, #104]
   3909c:	bfxil	w23, w0, #0, #8
   390a0:	ubfx	x0, x21, #8, #8
   390a4:	bfi	w23, w0, #8, #8
   390a8:	ubfx	x0, x21, #16, #8
   390ac:	bfi	w23, w0, #16, #8
   390b0:	lsr	w0, w21, #24
   390b4:	bfi	w23, w0, #24, #8
   390b8:	b.hi	390e0 <ZSTD_compress@@Base+0x2a894>  // b.pmore
   390bc:	mov	x26, #0xffffffffffffffd4    	// #-44
   390c0:	mov	x0, x26
   390c4:	ldp	x19, x20, [sp, #16]
   390c8:	ldp	x21, x22, [sp, #32]
   390cc:	ldp	x23, x24, [sp, #48]
   390d0:	ldp	x25, x26, [sp, #64]
   390d4:	ldp	x27, x28, [sp, #80]
   390d8:	ldp	x29, x30, [sp], #304
   390dc:	ret
   390e0:	add	x20, x3, #0x270
   390e4:	mov	x22, x1
   390e8:	mov	x27, x2
   390ec:	mov	x19, x3
   390f0:	and	w21, w21, #0xff
   390f4:	mov	x0, x20
   390f8:	mov	x2, #0x6c                  	// #108
   390fc:	mov	w1, #0x0                   	// #0
   39100:	bl	4700 <memset@plt>
   39104:	cmp	w21, #0xc
   39108:	b.hi	390bc <ZSTD_compress@@Base+0x2a870>  // b.pmore
   3910c:	add	x24, x19, #0x4dc
   39110:	mov	x6, x27
   39114:	mov	x5, x22
   39118:	add	x4, sp, #0xb8
   3911c:	add	x3, sp, #0xbc
   39120:	mov	x2, x20
   39124:	mov	x0, x24
   39128:	mov	x1, #0x100                 	// #256
   3912c:	bl	4f64 <ZSTD_initDStream_usingDDict@plt+0x3e4>
   39130:	mov	x26, x0
   39134:	cmn	x0, #0x78
   39138:	b.hi	390c0 <ZSTD_compress@@Base+0x2a874>  // b.pmore
   3913c:	ldr	w1, [sp, #184]
   39140:	cmp	w1, w21
   39144:	b.hi	390bc <ZSTD_compress@@Base+0x2a870>  // b.pmore
   39148:	mov	w22, w1
   3914c:	ldr	w0, [x20, w22, uxtw #2]
   39150:	cbz	w0, 39228 <ZSTD_compress@@Base+0x2a9dc>
   39154:	mov	w2, #0x1                   	// #1
   39158:	add	w4, w22, w21
   3915c:	add	x7, x19, #0x2a8
   39160:	add	x0, x19, #0x274
   39164:	add	w6, w22, w2
   39168:	mov	w27, #0x0                   	// #0
   3916c:	cmp	w6, w2
   39170:	b.hi	39230 <ZSTD_compress@@Base+0x2a9e4>  // b.pmore
   39174:	ldr	w8, [sp, #188]
   39178:	mov	x0, #0x0                   	// #0
   3917c:	mov	x9, #0x2dc                 	// #732
   39180:	str	w27, [x19, #680]
   39184:	cmp	w8, w0
   39188:	b.hi	39248 <ZSTD_compress@@Base+0x2a9fc>  // b.pmore
   3918c:	mvn	w2, w1
   39190:	mov	x0, #0x0                   	// #0
   39194:	add	w2, w2, w21
   39198:	mov	w3, #0x0                   	// #0
   3919c:	str	wzr, [x19, #680]
   391a0:	add	x0, x0, #0x1
   391a4:	cmp	w6, w0
   391a8:	b.hi	39278 <ZSTD_compress@@Base+0x2aa2c>  // b.pmore
   391ac:	add	w28, w1, #0x1
   391b0:	mov	w0, #0x34                  	// #52
   391b4:	sub	w22, w28, w22
   391b8:	sub	w3, w4, w1
   391bc:	mov	w2, w22
   391c0:	umaddl	x0, w22, w0, x19
   391c4:	cmp	w2, w3
   391c8:	b.cc	392b4 <ZSTD_compress@@Base+0x2aa68>  // b.lo, b.ul, b.last
   391cc:	add	x10, sp, #0xc0
   391d0:	sub	w0, w28, w21
   391d4:	mov	x1, x19
   391d8:	mov	x2, #0x34                  	// #52
   391dc:	str	w0, [sp, #108]
   391e0:	mov	x0, x10
   391e4:	bl	4460 <memcpy@plt>
   391e8:	mov	x10, x0
   391ec:	mov	w7, #0x1                   	// #1
   391f0:	mov	x6, x19
   391f4:	mov	w12, w7
   391f8:	add	x8, sp, #0xf8
   391fc:	add	x0, x19, w27, uxtw #1
   39200:	str	x0, [sp, #112]
   39204:	ldr	x0, [sp, #112]
   39208:	cmp	x6, x0
   3920c:	b.ne	392bc <ZSTD_compress@@Base+0x2aa70>  // b.any
   39210:	ldr	w0, [sp, #104]
   39214:	bfi	w23, w0, #16, #8
   39218:	mov	w0, #0x1                   	// #1
   3921c:	bfi	w23, w0, #8, #8
   39220:	str	w23, [x25]
   39224:	b	390c0 <ZSTD_compress@@Base+0x2a874>
   39228:	sub	w22, w22, #0x1
   3922c:	b	3914c <ZSTD_compress@@Base+0x2a900>
   39230:	ldr	w3, [x0]
   39234:	add	w2, w2, #0x1
   39238:	add	x0, x0, #0x4
   3923c:	str	w27, [x0, #52]
   39240:	add	w27, w27, w3
   39244:	b	3916c <ZSTD_compress@@Base+0x2a920>
   39248:	ldrb	w3, [x24, x0]
   3924c:	ldrb	w10, [x24, x0]
   39250:	lsl	x3, x3, #2
   39254:	ldr	w2, [x7, x3]
   39258:	add	w11, w2, #0x1
   3925c:	str	w11, [x7, x3]
   39260:	add	x2, x9, w2, uxtw #1
   39264:	add	x3, x19, x2
   39268:	strb	w0, [x19, x2]
   3926c:	add	x0, x0, #0x1
   39270:	strb	w10, [x3, #1]
   39274:	b	39184 <ZSTD_compress@@Base+0x2a938>
   39278:	ldr	w8, [x20, x0, lsl #2]
   3927c:	add	w7, w2, w0
   39280:	str	w3, [x19, x0, lsl #2]
   39284:	lsl	w7, w8, w7
   39288:	add	w3, w7, w3
   3928c:	b	391a0 <ZSTD_compress@@Base+0x2a954>
   39290:	ldr	w4, [x19, x1, lsl #2]
   39294:	lsr	w4, w4, w2
   39298:	str	w4, [x0, x1, lsl #2]
   3929c:	add	x1, x1, #0x1
   392a0:	cmp	w6, w1
   392a4:	b.hi	39290 <ZSTD_compress@@Base+0x2aa44>  // b.pmore
   392a8:	add	w2, w2, #0x1
   392ac:	add	x0, x0, #0x34
   392b0:	b	391c4 <ZSTD_compress@@Base+0x2a978>
   392b4:	mov	x1, #0x0                   	// #0
   392b8:	b	3929c <ZSTD_compress@@Base+0x2aa50>
   392bc:	ldrb	w0, [x6, #733]
   392c0:	sub	w2, w21, w28
   392c4:	str	x0, [sp, #120]
   392c8:	add	w3, w2, w0
   392cc:	sub	w24, w28, w0
   392d0:	ubfiz	x0, x0, #2, #8
   392d4:	str	w3, [sp, #172]
   392d8:	lsl	w9, w7, w3
   392dc:	ldrb	w11, [x6, #732]
   392e0:	cmp	w22, w3
   392e4:	ldr	w0, [x10, x0]
   392e8:	add	w9, w9, w0
   392ec:	mov	w20, w0
   392f0:	b.hi	3942c <ZSTD_compress@@Base+0x2abe0>  // b.pmore
   392f4:	ldr	w0, [sp, #108]
   392f8:	mov	w1, #0x34                  	// #52
   392fc:	mov	x2, #0x34                  	// #52
   39300:	str	x6, [sp, #144]
   39304:	add	w4, w0, w24
   39308:	umaddl	x1, w24, w1, x19
   3930c:	cmp	w4, #0x0
   39310:	stp	w11, w9, [sp, #152]
   39314:	csel	w15, w4, w7, gt
   39318:	stp	w15, w4, [sp, #136]
   3931c:	str	x10, [sp, #160]
   39320:	add	x20, x20, #0x1
   39324:	add	x0, x19, w15, sxtw #2
   39328:	str	w12, [sp, #168]
   3932c:	add	x20, x25, x20, lsl #2
   39330:	ldr	w14, [x0, #676]
   39334:	mov	x0, x8
   39338:	sub	w13, w27, w14
   3933c:	stp	w13, w14, [sp, #128]
   39340:	bl	4460 <memcpy@plt>
   39344:	mov	x8, x0
   39348:	ldp	w15, w4, [sp, #136]
   3934c:	mov	w7, #0x1                   	// #1
   39350:	ldp	w13, w14, [sp, #128]
   39354:	cmp	w4, #0x1
   39358:	ldp	w11, w9, [sp, #152]
   3935c:	ldp	w12, w3, [sp, #168]
   39360:	ldr	x6, [sp, #144]
   39364:	ldr	x10, [sp, #160]
   39368:	b.gt	39394 <ZSTD_compress@@Base+0x2ab48>
   3936c:	add	x1, x19, w14, uxtw #1
   39370:	sub	w2, w3, w28
   39374:	mov	w17, #0x0                   	// #0
   39378:	mov	w30, #0x2                   	// #2
   3937c:	cmp	w13, w17
   39380:	b.ne	393c0 <ZSTD_compress@@Base+0x2ab74>  // b.any
   39384:	ldr	x0, [sp, #120]
   39388:	add	x6, x6, #0x2
   3938c:	str	w9, [x10, x0, lsl #2]
   39390:	b	39204 <ZSTD_compress@@Base+0x2a9b8>
   39394:	ldr	w1, [x8, w15, sxtw #2]
   39398:	and	w2, w24, #0xff
   3939c:	mov	x0, x20
   393a0:	add	x1, x20, w1, uxtw #2
   393a4:	cmp	x0, x1
   393a8:	b.eq	3936c <ZSTD_compress@@Base+0x2ab20>  // b.none
   393ac:	add	x0, x0, #0x4
   393b0:	sturh	w11, [x0, #-4]
   393b4:	sturb	w2, [x0, #-2]
   393b8:	sturb	w12, [x0, #-1]
   393bc:	b	393a4 <ZSTD_compress@@Base+0x2ab58>
   393c0:	ldrb	w3, [x1, #733]
   393c4:	ldrb	w0, [x1, #733]
   393c8:	add	w4, w2, w0
   393cc:	sub	w15, w28, w0
   393d0:	ldr	w14, [x8, x3, lsl #2]
   393d4:	add	w15, w15, w24
   393d8:	ldrb	w3, [x1, #732]
   393dc:	lsl	w4, w7, w4
   393e0:	and	w15, w15, #0xff
   393e4:	add	w4, w4, w14
   393e8:	ubfiz	w3, w3, #8, #8
   393ec:	add	w3, w11, w3
   393f0:	and	w3, w3, #0xffff
   393f4:	mov	w16, w14
   393f8:	add	w14, w14, #0x1
   393fc:	cmp	w4, w14
   39400:	ubfiz	x16, x16, #2, #32
   39404:	add	x18, x20, x16
   39408:	strh	w3, [x20, x16]
   3940c:	strb	w15, [x18, #2]
   39410:	strb	w30, [x18, #3]
   39414:	b.hi	393f4 <ZSTD_compress@@Base+0x2aba8>  // b.pmore
   39418:	ubfiz	x0, x0, #2, #8
   3941c:	add	w17, w17, #0x1
   39420:	add	x1, x1, #0x2
   39424:	str	w4, [x8, x0]
   39428:	b	3937c <ZSTD_compress@@Base+0x2ab30>
   3942c:	and	w24, w24, #0xff
   39430:	add	x20, x25, x20, lsl #2
   39434:	add	x20, x20, #0x4
   39438:	cmp	w0, w9
   3943c:	b.cs	39384 <ZSTD_compress@@Base+0x2ab38>  // b.hs, b.nlast
   39440:	add	w0, w0, #0x1
   39444:	strh	w11, [x20]
   39448:	strb	w24, [x20, #2]
   3944c:	strb	w12, [x20, #3]
   39450:	b	39434 <ZSTD_compress@@Base+0x2abe8>
   39454:	stp	x29, x30, [sp, #-64]!
   39458:	mov	x29, sp
   3945c:	stp	x19, x20, [sp, #16]
   39460:	mov	x20, x3
   39464:	mov	x19, x4
   39468:	mov	x3, x5
   3946c:	mov	x4, x6
   39470:	stp	x21, x22, [sp, #32]
   39474:	mov	x21, x1
   39478:	mov	x22, x2
   3947c:	mov	x1, x20
   39480:	mov	x2, x19
   39484:	str	x23, [sp, #48]
   39488:	mov	x23, x0
   3948c:	bl	39068 <ZSTD_compress@@Base+0x2a81c>
   39490:	cmn	x0, #0x78
   39494:	b.hi	394d4 <ZSTD_compress@@Base+0x2ac88>  // b.pmore
   39498:	cmp	x19, x0
   3949c:	b.ls	394d0 <ZSTD_compress@@Base+0x2ac84>  // b.plast
   394a0:	sub	x3, x19, x0
   394a4:	cmp	x3, #0x9
   394a8:	b.ls	394e8 <ZSTD_compress@@Base+0x2ac9c>  // b.plast
   394ac:	add	x2, x20, x0
   394b0:	mov	x4, x23
   394b4:	mov	x1, x22
   394b8:	mov	x0, x21
   394bc:	ldp	x19, x20, [sp, #16]
   394c0:	ldp	x21, x22, [sp, #32]
   394c4:	ldr	x23, [sp, #48]
   394c8:	ldp	x29, x30, [sp], #64
   394cc:	b	37ff8 <ZSTD_compress@@Base+0x297ac>
   394d0:	mov	x0, #0xffffffffffffffb8    	// #-72
   394d4:	ldp	x19, x20, [sp, #16]
   394d8:	ldp	x21, x22, [sp, #32]
   394dc:	ldr	x23, [sp, #48]
   394e0:	ldp	x29, x30, [sp], #64
   394e4:	ret
   394e8:	mov	x0, #0xffffffffffffffec    	// #-20
   394ec:	b	394d4 <ZSTD_compress@@Base+0x2ac88>
   394f0:	sub	sp, sp, #0x810
   394f4:	mov	x4, #0x800                 	// #2048
   394f8:	add	x3, sp, #0x10
   394fc:	stp	x29, x30, [sp]
   39500:	mov	x29, sp
   39504:	bl	39068 <ZSTD_compress@@Base+0x2a81c>
   39508:	ldp	x29, x30, [sp]
   3950c:	add	sp, sp, #0x810
   39510:	ret
   39514:	ldrb	w5, [x4, #1]
   39518:	cmp	w5, #0x1
   3951c:	b.ne	39524 <ZSTD_compress@@Base+0x2acd8>  // b.any
   39520:	b	37dd0 <ZSTD_compress@@Base+0x29584>
   39524:	mov	x0, #0xffffffffffffffff    	// #-1
   39528:	ret
   3952c:	stp	x29, x30, [sp, #-64]!
   39530:	mov	x29, sp
   39534:	stp	x19, x20, [sp, #16]
   39538:	mov	x20, x3
   3953c:	mov	x19, x4
   39540:	mov	x3, x5
   39544:	mov	x4, x6
   39548:	stp	x21, x22, [sp, #32]
   3954c:	mov	x21, x1
   39550:	mov	x22, x2
   39554:	mov	x1, x20
   39558:	mov	x2, x19
   3955c:	str	x23, [sp, #48]
   39560:	mov	x23, x0
   39564:	bl	39068 <ZSTD_compress@@Base+0x2a81c>
   39568:	cmn	x0, #0x78
   3956c:	b.hi	395a4 <ZSTD_compress@@Base+0x2ad58>  // b.pmore
   39570:	cmp	x19, x0
   39574:	b.ls	395a0 <ZSTD_compress@@Base+0x2ad54>  // b.plast
   39578:	sub	x3, x19, x0
   3957c:	add	x2, x20, x0
   39580:	mov	x4, x23
   39584:	mov	x1, x22
   39588:	mov	x0, x21
   3958c:	ldp	x19, x20, [sp, #16]
   39590:	ldp	x21, x22, [sp, #32]
   39594:	ldr	x23, [sp, #48]
   39598:	ldp	x29, x30, [sp], #64
   3959c:	b	37dd0 <ZSTD_compress@@Base+0x29584>
   395a0:	mov	x0, #0xffffffffffffffb8    	// #-72
   395a4:	ldp	x19, x20, [sp, #16]
   395a8:	ldp	x21, x22, [sp, #32]
   395ac:	ldr	x23, [sp, #48]
   395b0:	ldp	x29, x30, [sp], #64
   395b4:	ret
   395b8:	sub	sp, sp, #0x810
   395bc:	mov	x6, #0x800                 	// #2048
   395c0:	add	x5, sp, #0x10
   395c4:	stp	x29, x30, [sp]
   395c8:	mov	x29, sp
   395cc:	bl	3952c <ZSTD_compress@@Base+0x2ace0>
   395d0:	ldp	x29, x30, [sp]
   395d4:	add	sp, sp, #0x810
   395d8:	ret
   395dc:	mov	x12, #0x4040                	// #16448
   395e0:	sub	sp, sp, x12
   395e4:	add	x5, sp, #0x38
   395e8:	stp	x29, x30, [sp]
   395ec:	mov	x29, sp
   395f0:	stp	x19, x20, [sp, #16]
   395f4:	mov	x19, x0
   395f8:	mov	x20, x1
   395fc:	mov	x0, x5
   39600:	mov	w1, #0x0                   	// #0
   39604:	stp	x21, x22, [sp, #32]
   39608:	mov	x22, x3
   3960c:	mov	x21, x2
   39610:	mov	x2, #0x4004                	// #16388
   39614:	bl	4700 <memset@plt>
   39618:	mov	x5, x0
   3961c:	mov	w0, #0xc                   	// #12
   39620:	movk	w0, #0xc00, lsl #16
   39624:	mov	x4, x22
   39628:	mov	x3, x21
   3962c:	mov	x2, x20
   39630:	mov	x1, x19
   39634:	str	w0, [sp, #56]
   39638:	mov	x0, x5
   3963c:	bl	395b8 <ZSTD_compress@@Base+0x2ad6c>
   39640:	mov	x12, #0x4040                	// #16448
   39644:	ldp	x29, x30, [sp]
   39648:	ldp	x19, x20, [sp, #16]
   3964c:	ldp	x21, x22, [sp, #32]
   39650:	add	sp, sp, x12
   39654:	ret
   39658:	ldrb	w6, [x4, #1]
   3965c:	cmp	w6, #0x1
   39660:	b.ne	39670 <ZSTD_compress@@Base+0x2ae24>  // b.any
   39664:	cmp	x3, #0x9
   39668:	b.ls	39678 <ZSTD_compress@@Base+0x2ae2c>  // b.plast
   3966c:	b	37ff8 <ZSTD_compress@@Base+0x297ac>
   39670:	mov	x0, #0xffffffffffffffff    	// #-1
   39674:	ret
   39678:	mov	x0, #0xffffffffffffffec    	// #-20
   3967c:	b	39674 <ZSTD_compress@@Base+0x2ae28>
   39680:	b	39454 <ZSTD_compress@@Base+0x2ac08>
   39684:	sub	sp, sp, #0x810
   39688:	mov	x6, #0x800                 	// #2048
   3968c:	add	x5, sp, #0x10
   39690:	stp	x29, x30, [sp]
   39694:	mov	x29, sp
   39698:	bl	39454 <ZSTD_compress@@Base+0x2ac08>
   3969c:	ldp	x29, x30, [sp]
   396a0:	add	sp, sp, #0x810
   396a4:	ret
   396a8:	mov	x12, #0x4040                	// #16448
   396ac:	sub	sp, sp, x12
   396b0:	add	x5, sp, #0x38
   396b4:	stp	x29, x30, [sp]
   396b8:	mov	x29, sp
   396bc:	stp	x19, x20, [sp, #16]
   396c0:	mov	x19, x0
   396c4:	mov	x20, x1
   396c8:	mov	x0, x5
   396cc:	mov	w1, #0x0                   	// #0
   396d0:	stp	x21, x22, [sp, #32]
   396d4:	mov	x22, x3
   396d8:	mov	x21, x2
   396dc:	mov	x2, #0x4004                	// #16388
   396e0:	bl	4700 <memset@plt>
   396e4:	mov	x5, x0
   396e8:	mov	w0, #0xc                   	// #12
   396ec:	movk	w0, #0xc00, lsl #16
   396f0:	mov	x4, x22
   396f4:	mov	x3, x21
   396f8:	mov	x2, x20
   396fc:	mov	x1, x19
   39700:	str	w0, [sp, #56]
   39704:	mov	x0, x5
   39708:	bl	39684 <ZSTD_compress@@Base+0x2ae38>
   3970c:	mov	x12, #0x4040                	// #16448
   39710:	ldp	x29, x30, [sp]
   39714:	ldp	x19, x20, [sp, #16]
   39718:	ldp	x21, x22, [sp, #32]
   3971c:	add	sp, sp, x12
   39720:	ret
   39724:	ldrb	w5, [x4, #1]
   39728:	cbz	w5, 39730 <ZSTD_compress@@Base+0x2aee4>
   3972c:	b	37dd0 <ZSTD_compress@@Base+0x29584>
   39730:	b	37424 <ZSTD_compress@@Base+0x28bd8>
   39734:	ldrb	w6, [x4, #1]
   39738:	cmp	x3, #0x9
   3973c:	cbz	w6, 39748 <ZSTD_compress@@Base+0x2aefc>
   39740:	b.ls	39750 <ZSTD_compress@@Base+0x2af04>  // b.plast
   39744:	b	37ff8 <ZSTD_compress@@Base+0x297ac>
   39748:	b.ls	39750 <ZSTD_compress@@Base+0x2af04>  // b.plast
   3974c:	b	3757c <ZSTD_compress@@Base+0x28d30>
   39750:	mov	x0, #0xffffffffffffffec    	// #-20
   39754:	ret
   39758:	cmp	x1, x0
   3975c:	b.cs	397a8 <ZSTD_compress@@Base+0x2af5c>  // b.hs, b.nlast
   39760:	lsl	x1, x1, #4
   39764:	udiv	x1, x1, x0
   39768:	mov	w1, w1
   3976c:	mov	x2, #0x18                  	// #24
   39770:	adrp	x3, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   39774:	add	x3, x3, #0x6fc
   39778:	lsr	x0, x0, #8
   3977c:	mul	x1, x1, x2
   39780:	add	x4, x3, x1
   39784:	ldr	w1, [x3, x1]
   39788:	ldp	w5, w2, [x4, #8]
   3978c:	ldr	w4, [x4, #4]
   39790:	madd	w2, w2, w0, w5
   39794:	madd	w0, w4, w0, w1
   39798:	add	w2, w2, w2, lsr #3
   3979c:	cmp	w0, w2
   397a0:	cset	w0, hi  // hi = pmore
   397a4:	ret
   397a8:	mov	w1, #0xf                   	// #15
   397ac:	b	39768 <ZSTD_compress@@Base+0x2af1c>
   397b0:	stp	x29, x30, [sp, #-32]!
   397b4:	mov	x29, sp
   397b8:	str	x19, [sp, #16]
   397bc:	cbz	x1, 39848 <ZSTD_compress@@Base+0x2affc>
   397c0:	mov	x19, x1
   397c4:	mov	x6, x3
   397c8:	cmp	x1, x3
   397cc:	b.cc	39850 <ZSTD_compress@@Base+0x2b004>  // b.lo, b.ul, b.last
   397d0:	mov	x7, x2
   397d4:	b.ne	397f4 <ZSTD_compress@@Base+0x2afa8>  // b.any
   397d8:	mov	x2, x1
   397dc:	mov	x1, x7
   397e0:	bl	4460 <memcpy@plt>
   397e4:	mov	x0, x19
   397e8:	ldr	x19, [sp, #16]
   397ec:	ldp	x29, x30, [sp], #32
   397f0:	ret
   397f4:	cmp	x3, #0x1
   397f8:	b.ne	3980c <ZSTD_compress@@Base+0x2afc0>  // b.any
   397fc:	mov	x2, x1
   39800:	ldrb	w1, [x7]
   39804:	bl	4700 <memset@plt>
   39808:	b	397e4 <ZSTD_compress@@Base+0x2af98>
   3980c:	mov	x8, x0
   39810:	mov	x1, x3
   39814:	mov	x0, x19
   39818:	bl	39758 <ZSTD_compress@@Base+0x2af0c>
   3981c:	mov	x3, x6
   39820:	adrp	x1, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   39824:	add	x1, x1, #0xc80
   39828:	mov	x2, x7
   3982c:	ldr	x4, [x1, w0, uxtw #3]
   39830:	mov	x1, x19
   39834:	ldr	x19, [sp, #16]
   39838:	mov	x0, x8
   3983c:	ldp	x29, x30, [sp], #32
   39840:	mov	x16, x4
   39844:	br	x16
   39848:	mov	x19, #0xffffffffffffffba    	// #-70
   3984c:	b	397e4 <ZSTD_compress@@Base+0x2af98>
   39850:	mov	x19, #0xffffffffffffffec    	// #-20
   39854:	b	397e4 <ZSTD_compress@@Base+0x2af98>
   39858:	stp	x29, x30, [sp, #-32]!
   3985c:	mov	x29, sp
   39860:	str	x19, [sp, #16]
   39864:	cbz	x2, 398fc <ZSTD_compress@@Base+0x2b0b0>
   39868:	mov	x19, x2
   3986c:	mov	x6, x4
   39870:	cmp	x2, x4
   39874:	b.cc	39904 <ZSTD_compress@@Base+0x2b0b8>  // b.lo, b.ul, b.last
   39878:	mov	x7, x1
   3987c:	mov	x8, x3
   39880:	b.ne	398a0 <ZSTD_compress@@Base+0x2b054>  // b.any
   39884:	mov	x1, x3
   39888:	mov	x0, x7
   3988c:	bl	4460 <memcpy@plt>
   39890:	mov	x0, x19
   39894:	ldr	x19, [sp, #16]
   39898:	ldp	x29, x30, [sp], #32
   3989c:	ret
   398a0:	cmp	x4, #0x1
   398a4:	b.ne	398b8 <ZSTD_compress@@Base+0x2b06c>  // b.any
   398a8:	ldrb	w1, [x3]
   398ac:	mov	x0, x7
   398b0:	bl	4700 <memset@plt>
   398b4:	b	39890 <ZSTD_compress@@Base+0x2b044>
   398b8:	mov	x9, x0
   398bc:	mov	x1, x4
   398c0:	mov	x0, x2
   398c4:	bl	39758 <ZSTD_compress@@Base+0x2af0c>
   398c8:	mov	x4, x6
   398cc:	mov	x3, x8
   398d0:	mov	x2, x19
   398d4:	mov	x1, x7
   398d8:	cbz	w0, 398ec <ZSTD_compress@@Base+0x2b0a0>
   398dc:	ldr	x19, [sp, #16]
   398e0:	mov	x0, x9
   398e4:	ldp	x29, x30, [sp], #32
   398e8:	b	39684 <ZSTD_compress@@Base+0x2ae38>
   398ec:	ldr	x19, [sp, #16]
   398f0:	mov	x0, x9
   398f4:	ldp	x29, x30, [sp], #32
   398f8:	b	38fc8 <ZSTD_compress@@Base+0x2a77c>
   398fc:	mov	x19, #0xffffffffffffffba    	// #-70
   39900:	b	39890 <ZSTD_compress@@Base+0x2b044>
   39904:	mov	x19, #0xffffffffffffffec    	// #-20
   39908:	b	39890 <ZSTD_compress@@Base+0x2b044>
   3990c:	cbz	x2, 39970 <ZSTD_compress@@Base+0x2b124>
   39910:	mov	x8, x4
   39914:	cbz	x4, 39978 <ZSTD_compress@@Base+0x2b12c>
   39918:	mov	x10, x1
   3991c:	mov	x9, x0
   39920:	mov	x7, x2
   39924:	mov	x11, x3
   39928:	mov	x12, x5
   3992c:	stp	x29, x30, [sp, #-16]!
   39930:	mov	x1, x4
   39934:	mov	x29, sp
   39938:	mov	x0, x2
   3993c:	bl	39758 <ZSTD_compress@@Base+0x2af0c>
   39940:	mov	x5, x12
   39944:	mov	x4, x8
   39948:	mov	x3, x11
   3994c:	mov	x2, x7
   39950:	mov	x1, x10
   39954:	cbz	w0, 39964 <ZSTD_compress@@Base+0x2b118>
   39958:	ldp	x29, x30, [sp], #16
   3995c:	mov	x0, x9
   39960:	b	39454 <ZSTD_compress@@Base+0x2ac08>
   39964:	ldp	x29, x30, [sp], #16
   39968:	mov	x0, x9
   3996c:	b	38da0 <ZSTD_compress@@Base+0x2a554>
   39970:	mov	x0, #0xffffffffffffffba    	// #-70
   39974:	ret
   39978:	mov	x0, #0xffffffffffffffec    	// #-20
   3997c:	ret
   39980:	sub	sp, sp, #0x810
   39984:	mov	x6, #0x800                 	// #2048
   39988:	add	x5, sp, #0x10
   3998c:	stp	x29, x30, [sp]
   39990:	mov	x29, sp
   39994:	bl	3990c <ZSTD_compress@@Base+0x2b0c0>
   39998:	ldp	x29, x30, [sp]
   3999c:	add	sp, sp, #0x810
   399a0:	ret
   399a4:	stp	x29, x30, [sp, #-32]!
   399a8:	mov	x29, sp
   399ac:	str	x19, [sp, #16]
   399b0:	cbz	x2, 39a50 <ZSTD_compress@@Base+0x2b204>
   399b4:	mov	x19, x2
   399b8:	mov	x7, x4
   399bc:	cmp	x2, x4
   399c0:	b.cc	39a58 <ZSTD_compress@@Base+0x2b20c>  // b.lo, b.ul, b.last
   399c4:	mov	x8, x1
   399c8:	mov	x9, x3
   399cc:	b.ne	399ec <ZSTD_compress@@Base+0x2b1a0>  // b.any
   399d0:	mov	x1, x3
   399d4:	mov	x0, x8
   399d8:	bl	4460 <memcpy@plt>
   399dc:	mov	x0, x19
   399e0:	ldr	x19, [sp, #16]
   399e4:	ldp	x29, x30, [sp], #32
   399e8:	ret
   399ec:	cmp	x4, #0x1
   399f0:	b.ne	39a04 <ZSTD_compress@@Base+0x2b1b8>  // b.any
   399f4:	ldrb	w1, [x3]
   399f8:	mov	x0, x8
   399fc:	bl	4700 <memset@plt>
   39a00:	b	399dc <ZSTD_compress@@Base+0x2b190>
   39a04:	mov	x10, x0
   39a08:	mov	x11, x5
   39a0c:	mov	x1, x4
   39a10:	mov	x0, x2
   39a14:	bl	39758 <ZSTD_compress@@Base+0x2af0c>
   39a18:	mov	x5, x11
   39a1c:	mov	x4, x7
   39a20:	mov	x3, x9
   39a24:	mov	x2, x19
   39a28:	mov	x1, x8
   39a2c:	cbz	w0, 39a40 <ZSTD_compress@@Base+0x2b1f4>
   39a30:	ldr	x19, [sp, #16]
   39a34:	mov	x0, x10
   39a38:	ldp	x29, x30, [sp], #32
   39a3c:	b	3952c <ZSTD_compress@@Base+0x2ace0>
   39a40:	ldr	x19, [sp, #16]
   39a44:	mov	x0, x10
   39a48:	ldp	x29, x30, [sp], #32
   39a4c:	b	38e74 <ZSTD_compress@@Base+0x2a628>
   39a50:	mov	x19, #0xffffffffffffffba    	// #-70
   39a54:	b	399dc <ZSTD_compress@@Base+0x2b190>
   39a58:	mov	x19, #0xffffffffffffffec    	// #-20
   39a5c:	b	399dc <ZSTD_compress@@Base+0x2b190>
   39a60:	sub	sp, sp, #0x810
   39a64:	mov	x6, #0x800                 	// #2048
   39a68:	add	x5, sp, #0x10
   39a6c:	stp	x29, x30, [sp]
   39a70:	mov	x29, sp
   39a74:	bl	399a4 <ZSTD_compress@@Base+0x2b158>
   39a78:	ldp	x29, x30, [sp]
   39a7c:	add	sp, sp, #0x810
   39a80:	ret
   39a84:	ldrb	w5, [x4, #1]
   39a88:	cbz	w5, 39a90 <ZSTD_compress@@Base+0x2b244>
   39a8c:	b	37dd0 <ZSTD_compress@@Base+0x29584>
   39a90:	b	37424 <ZSTD_compress@@Base+0x28bd8>
   39a94:	stp	x29, x30, [sp, #-64]!
   39a98:	mov	x29, sp
   39a9c:	stp	x19, x20, [sp, #16]
   39aa0:	mov	x20, x3
   39aa4:	mov	x19, x4
   39aa8:	mov	x3, x5
   39aac:	mov	x4, x6
   39ab0:	stp	x21, x22, [sp, #32]
   39ab4:	mov	x21, x1
   39ab8:	mov	x22, x2
   39abc:	mov	x1, x20
   39ac0:	mov	x2, x19
   39ac4:	str	x23, [sp, #48]
   39ac8:	mov	x23, x0
   39acc:	bl	38c6c <ZSTD_compress@@Base+0x2a420>
   39ad0:	cmn	x0, #0x78
   39ad4:	b.hi	39b0c <ZSTD_compress@@Base+0x2b2c0>  // b.pmore
   39ad8:	cmp	x19, x0
   39adc:	b.ls	39b08 <ZSTD_compress@@Base+0x2b2bc>  // b.plast
   39ae0:	sub	x3, x19, x0
   39ae4:	add	x2, x20, x0
   39ae8:	mov	x4, x23
   39aec:	mov	x1, x22
   39af0:	mov	x0, x21
   39af4:	ldp	x19, x20, [sp, #16]
   39af8:	ldp	x21, x22, [sp, #32]
   39afc:	ldr	x23, [sp, #48]
   39b00:	ldp	x29, x30, [sp], #64
   39b04:	b	37424 <ZSTD_compress@@Base+0x28bd8>
   39b08:	mov	x0, #0xffffffffffffffb8    	// #-72
   39b0c:	ldp	x19, x20, [sp, #16]
   39b10:	ldp	x21, x22, [sp, #32]
   39b14:	ldr	x23, [sp, #48]
   39b18:	ldp	x29, x30, [sp], #64
   39b1c:	ret
   39b20:	ldrb	w6, [x4, #1]
   39b24:	cmp	x3, #0x9
   39b28:	cbz	w6, 39b34 <ZSTD_compress@@Base+0x2b2e8>
   39b2c:	b.ls	39b3c <ZSTD_compress@@Base+0x2b2f0>  // b.plast
   39b30:	b	37ff8 <ZSTD_compress@@Base+0x297ac>
   39b34:	b.ls	39b3c <ZSTD_compress@@Base+0x2b2f0>  // b.plast
   39b38:	b	3757c <ZSTD_compress@@Base+0x28d30>
   39b3c:	mov	x0, #0xffffffffffffffec    	// #-20
   39b40:	ret
   39b44:	cbz	x2, 39ba8 <ZSTD_compress@@Base+0x2b35c>
   39b48:	mov	x8, x4
   39b4c:	cbz	x4, 39bb0 <ZSTD_compress@@Base+0x2b364>
   39b50:	mov	x10, x1
   39b54:	mov	x9, x0
   39b58:	mov	x7, x2
   39b5c:	mov	x11, x3
   39b60:	mov	x12, x5
   39b64:	stp	x29, x30, [sp, #-16]!
   39b68:	mov	x1, x4
   39b6c:	mov	x29, sp
   39b70:	mov	x0, x2
   39b74:	bl	39758 <ZSTD_compress@@Base+0x2af0c>
   39b78:	mov	x5, x12
   39b7c:	mov	x4, x8
   39b80:	mov	x3, x11
   39b84:	mov	x2, x7
   39b88:	mov	x1, x10
   39b8c:	cbz	w0, 39b9c <ZSTD_compress@@Base+0x2b350>
   39b90:	ldp	x29, x30, [sp], #16
   39b94:	mov	x0, x9
   39b98:	b	39454 <ZSTD_compress@@Base+0x2ac08>
   39b9c:	ldp	x29, x30, [sp], #16
   39ba0:	mov	x0, x9
   39ba4:	b	38da0 <ZSTD_compress@@Base+0x2a554>
   39ba8:	mov	x0, #0xffffffffffffffba    	// #-70
   39bac:	ret
   39bb0:	mov	x0, #0xffffffffffffffec    	// #-20
   39bb4:	ret
   39bb8:	stp	x29, x30, [sp, #-80]!
   39bbc:	cmp	x1, #0x0
   39bc0:	ccmp	w3, #0x1, #0x4, ne  // ne = any
   39bc4:	mov	x29, sp
   39bc8:	stp	x19, x20, [sp, #16]
   39bcc:	mov	x19, x0
   39bd0:	mov	x20, x2
   39bd4:	stp	x21, x22, [sp, #32]
   39bd8:	mov	x21, x1
   39bdc:	mov	w22, w4
   39be0:	b.eq	39be8 <ZSTD_compress@@Base+0x2b39c>  // b.none
   39be4:	cbnz	x2, 39c28 <ZSTD_compress@@Base+0x2b3dc>
   39be8:	cmp	x21, #0x0
   39bec:	stp	xzr, x21, [x19]
   39bf0:	csel	x20, x20, xzr, ne  // ne = any
   39bf4:	mov	w0, #0xc                   	// #12
   39bf8:	str	x20, [x19, #16]
   39bfc:	movk	w0, #0xc00, lsl #16
   39c00:	str	w0, [x19, #10288]
   39c04:	str	xzr, [x19, #26688]
   39c08:	cmp	w22, #0x1
   39c0c:	b.eq	39c20 <ZSTD_compress@@Base+0x2b3d4>  // b.none
   39c10:	cmp	x20, #0x7
   39c14:	b.hi	39c64 <ZSTD_compress@@Base+0x2b418>  // b.pmore
   39c18:	cmp	w22, #0x2
   39c1c:	b.eq	39ca8 <ZSTD_compress@@Base+0x2b45c>  // b.none
   39c20:	mov	x0, #0x0                   	// #0
   39c24:	b	39cac <ZSTD_compress@@Base+0x2b460>
   39c28:	mov	x0, #0x6800                	// #26624
   39c2c:	add	x0, x19, x0
   39c30:	add	x1, sp, #0x30
   39c34:	ldp	x2, x3, [x0, #72]
   39c38:	stp	x2, x3, [sp, #48]
   39c3c:	ldr	x0, [x19, #26712]
   39c40:	str	x0, [sp, #64]
   39c44:	mov	x0, x20
   39c48:	bl	6b50 <ZSTD_getErrorString@@Base+0x4>
   39c4c:	stp	x0, x0, [x19]
   39c50:	cbz	x0, 39cbc <ZSTD_compress@@Base+0x2b470>
   39c54:	mov	x2, x20
   39c58:	mov	x1, x21
   39c5c:	bl	4460 <memcpy@plt>
   39c60:	b	39bf4 <ZSTD_compress@@Base+0x2b3a8>
   39c64:	ldr	x1, [x19, #8]
   39c68:	mov	w0, #0xa437                	// #42039
   39c6c:	movk	w0, #0xec30, lsl #16
   39c70:	ldr	w2, [x1]
   39c74:	cmp	w2, w0
   39c78:	b.ne	39c18 <ZSTD_compress@@Base+0x2b3cc>  // b.any
   39c7c:	add	x21, x19, #0x4, lsl #12
   39c80:	ldr	w0, [x1, #4]
   39c84:	mov	x2, x20
   39c88:	str	w0, [x21, #10304]
   39c8c:	add	x0, x19, #0x18
   39c90:	bl	3afac <ZSTD_decompressContinue@@Base+0x378>
   39c94:	cmn	x0, #0x78
   39c98:	b.hi	39ca8 <ZSTD_compress@@Base+0x2b45c>  // b.pmore
   39c9c:	mov	w0, #0x1                   	// #1
   39ca0:	str	w0, [x21, #10308]
   39ca4:	b	39c20 <ZSTD_compress@@Base+0x2b3d4>
   39ca8:	mov	x0, #0xffffffffffffffe2    	// #-30
   39cac:	ldp	x19, x20, [sp, #16]
   39cb0:	ldp	x21, x22, [sp, #32]
   39cb4:	ldp	x29, x30, [sp], #80
   39cb8:	ret
   39cbc:	mov	x0, #0xffffffffffffffc0    	// #-64
   39cc0:	b	39cac <ZSTD_compress@@Base+0x2b460>
   39cc4:	ldr	x0, [x0, #8]
   39cc8:	ret
   39ccc:	ldr	x0, [x0, #16]
   39cd0:	ret
   39cd4:	add	x3, x1, #0x4, lsl #12
   39cd8:	add	x4, x0, #0x4, lsl #12
   39cdc:	ldr	x5, [x1, #16]
   39ce0:	ldr	w2, [x3, #10304]
   39ce4:	str	w2, [x4, #12648]
   39ce8:	ldr	x2, [x1, #8]
   39cec:	str	x2, [x0, #28752]
   39cf0:	str	x2, [x0, #28760]
   39cf4:	add	x2, x2, x5
   39cf8:	str	x2, [x0, #28744]
   39cfc:	str	x2, [x0, #28768]
   39d00:	ldr	w2, [x3, #10308]
   39d04:	cbz	w2, 39d54 <ZSTD_compress@@Base+0x2b508>
   39d08:	mov	x2, #0x100000001           	// #4294967297
   39d0c:	str	x2, [x0, #28840]
   39d10:	add	x2, x1, #0x18
   39d14:	str	x2, [x0]
   39d18:	mov	x2, #0x1828                	// #6184
   39d1c:	add	x2, x1, x2
   39d20:	mov	x5, #0x1020                	// #4128
   39d24:	mov	x6, #0x2830                	// #10288
   39d28:	str	x2, [x0, #8]
   39d2c:	add	x2, x1, x5
   39d30:	add	x1, x1, x6
   39d34:	stp	x2, x1, [x0, #16]
   39d38:	ldr	w0, [x3, #10292]
   39d3c:	str	w0, [x4, #10300]
   39d40:	ldr	w0, [x3, #10296]
   39d44:	str	w0, [x4, #10304]
   39d48:	ldr	w0, [x3, #10300]
   39d4c:	str	w0, [x4, #10308]
   39d50:	ret
   39d54:	str	xzr, [x0, #28840]
   39d58:	b	39d50 <ZSTD_compress@@Base+0x2b504>

0000000000039d5c <ZSTD_initStaticDDict@@Base>:
   39d5c:	stp	x29, x30, [sp, #-48]!
   39d60:	cmp	w4, #0x1
   39d64:	mov	x29, sp
   39d68:	stp	x19, x20, [sp, #16]
   39d6c:	mov	x19, x0
   39d70:	mov	x20, x3
   39d74:	str	x21, [sp, #32]
   39d78:	mov	x0, #0x6860                	// #26720
   39d7c:	add	x3, x3, x0
   39d80:	csel	x3, x3, x0, ne  // ne = any
   39d84:	tst	x19, #0x7
   39d88:	b.ne	39dd0 <ZSTD_initStaticDDict@@Base+0x74>  // b.any
   39d8c:	cmp	x3, x1
   39d90:	b.hi	39dd0 <ZSTD_initStaticDDict@@Base+0x74>  // b.pmore
   39d94:	mov	x1, x2
   39d98:	mov	w21, w5
   39d9c:	cbnz	w4, 39db4 <ZSTD_initStaticDDict@@Base+0x58>
   39da0:	add	x6, x19, x0
   39da4:	mov	x2, x20
   39da8:	mov	x0, x6
   39dac:	bl	4460 <memcpy@plt>
   39db0:	mov	x1, x0
   39db4:	mov	w4, w21
   39db8:	mov	x2, x20
   39dbc:	mov	x0, x19
   39dc0:	mov	w3, #0x1                   	// #1
   39dc4:	bl	39bb8 <ZSTD_compress@@Base+0x2b36c>
   39dc8:	cmn	x0, #0x78
   39dcc:	b.ls	39dd4 <ZSTD_initStaticDDict@@Base+0x78>  // b.plast
   39dd0:	mov	x19, #0x0                   	// #0
   39dd4:	mov	x0, x19
   39dd8:	ldp	x19, x20, [sp, #16]
   39ddc:	ldr	x21, [sp, #32]
   39de0:	ldp	x29, x30, [sp], #48
   39de4:	ret

0000000000039de8 <ZSTD_freeDDict@@Base>:
   39de8:	cbz	x0, 39e58 <ZSTD_freeDDict@@Base+0x70>
   39dec:	stp	x29, x30, [sp, #-96]!
   39df0:	mov	x29, sp
   39df4:	stp	x19, x20, [sp, #16]
   39df8:	mov	x19, x0
   39dfc:	mov	x0, #0x6800                	// #26624
   39e00:	add	x0, x19, x0
   39e04:	add	x20, sp, #0x20
   39e08:	mov	x1, x20
   39e0c:	ldp	x2, x3, [x0, #72]
   39e10:	stp	x2, x3, [sp, #72]
   39e14:	ldr	x0, [x19, #26712]
   39e18:	stp	x2, x3, [sp, #32]
   39e1c:	str	x0, [sp, #48]
   39e20:	str	x0, [sp, #88]
   39e24:	ldr	x0, [x19]
   39e28:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   39e2c:	ldp	x0, x1, [sp, #72]
   39e30:	stp	x0, x1, [sp, #32]
   39e34:	ldr	x0, [sp, #88]
   39e38:	mov	x1, x20
   39e3c:	str	x0, [sp, #48]
   39e40:	mov	x0, x19
   39e44:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   39e48:	mov	x0, #0x0                   	// #0
   39e4c:	ldp	x19, x20, [sp, #16]
   39e50:	ldp	x29, x30, [sp], #96
   39e54:	ret
   39e58:	mov	x0, #0x0                   	// #0
   39e5c:	ret

0000000000039e60 <ZSTD_createDDict_advanced@@Base>:
   39e60:	stp	x29, x30, [sp, #-96]!
   39e64:	mov	x29, sp
   39e68:	stp	x21, x22, [sp, #32]
   39e6c:	mov	x21, x0
   39e70:	mov	x22, x1
   39e74:	ldr	x0, [x4]
   39e78:	stp	x19, x20, [sp, #16]
   39e7c:	cmp	x0, #0x0
   39e80:	stp	x23, x24, [sp, #48]
   39e84:	cset	w1, eq  // eq = none
   39e88:	ldr	x0, [x4, #8]
   39e8c:	cmp	x0, #0x0
   39e90:	cset	w0, eq  // eq = none
   39e94:	cmp	w1, w0
   39e98:	b.eq	39eb8 <ZSTD_createDDict_advanced@@Base+0x58>  // b.none
   39e9c:	mov	x19, #0x0                   	// #0
   39ea0:	mov	x0, x19
   39ea4:	ldp	x19, x20, [sp, #16]
   39ea8:	ldp	x21, x22, [sp, #32]
   39eac:	ldp	x23, x24, [sp, #48]
   39eb0:	ldp	x29, x30, [sp], #96
   39eb4:	ret
   39eb8:	ldp	x0, x1, [x4]
   39ebc:	stp	x0, x1, [sp, #64]
   39ec0:	mov	w23, w2
   39ec4:	ldr	x0, [x4, #16]
   39ec8:	mov	w24, w3
   39ecc:	mov	x20, x4
   39ed0:	add	x1, sp, #0x40
   39ed4:	str	x0, [sp, #80]
   39ed8:	mov	x0, #0x6860                	// #26720
   39edc:	bl	6b50 <ZSTD_getErrorString@@Base+0x4>
   39ee0:	mov	x19, x0
   39ee4:	cbz	x0, 39e9c <ZSTD_createDDict_advanced@@Base+0x3c>
   39ee8:	mov	x1, #0x6800                	// #26624
   39eec:	add	x1, x0, x1
   39ef0:	ldp	x2, x3, [x20]
   39ef4:	mov	w4, w24
   39ef8:	stp	x2, x3, [x1, #72]
   39efc:	mov	x1, x21
   39f00:	mov	w3, w23
   39f04:	ldr	x2, [x20, #16]
   39f08:	str	x2, [x0, #26712]
   39f0c:	mov	x2, x22
   39f10:	bl	39bb8 <ZSTD_compress@@Base+0x2b36c>
   39f14:	cmn	x0, #0x78
   39f18:	b.ls	39ea0 <ZSTD_createDDict_advanced@@Base+0x40>  // b.plast
   39f1c:	mov	x0, x19
   39f20:	bl	4a50 <ZSTD_freeDDict@plt>
   39f24:	b	39e9c <ZSTD_createDDict_advanced@@Base+0x3c>

0000000000039f28 <ZSTD_createDDict@@Base>:
   39f28:	stp	x29, x30, [sp, #-80]!
   39f2c:	mov	x29, sp
   39f30:	stp	xzr, xzr, [sp, #56]
   39f34:	add	x4, sp, #0x10
   39f38:	ldp	x2, x3, [sp, #56]
   39f3c:	stp	x2, x3, [sp, #16]
   39f40:	str	xzr, [sp, #32]
   39f44:	mov	w3, #0x0                   	// #0
   39f48:	mov	w2, #0x0                   	// #0
   39f4c:	bl	47c0 <ZSTD_createDDict_advanced@plt>
   39f50:	ldp	x29, x30, [sp], #80
   39f54:	ret

0000000000039f58 <ZSTD_createDDict_byReference@@Base>:
   39f58:	stp	x29, x30, [sp, #-80]!
   39f5c:	mov	x29, sp
   39f60:	stp	xzr, xzr, [sp, #56]
   39f64:	add	x4, sp, #0x10
   39f68:	ldp	x2, x3, [sp, #56]
   39f6c:	stp	x2, x3, [sp, #16]
   39f70:	str	xzr, [sp, #32]
   39f74:	mov	w3, #0x0                   	// #0
   39f78:	mov	w2, #0x1                   	// #1
   39f7c:	bl	47c0 <ZSTD_createDDict_advanced@plt>
   39f80:	ldp	x29, x30, [sp], #80
   39f84:	ret

0000000000039f88 <ZSTD_estimateDDictSize@@Base>:
   39f88:	mov	x2, #0x6860                	// #26720
   39f8c:	cmp	w1, #0x1
   39f90:	add	x0, x0, x2
   39f94:	csel	x0, x0, x2, ne  // ne = any
   39f98:	ret

0000000000039f9c <ZSTD_sizeof_DDict@@Base>:
   39f9c:	mov	x1, x0
   39fa0:	cbz	x0, 39fbc <ZSTD_sizeof_DDict@@Base+0x20>
   39fa4:	ldr	x2, [x1]
   39fa8:	mov	x0, #0x6860                	// #26720
   39fac:	cbz	x2, 39fb8 <ZSTD_sizeof_DDict@@Base+0x1c>
   39fb0:	ldr	x1, [x1, #16]
   39fb4:	add	x0, x1, x0
   39fb8:	ret
   39fbc:	mov	x0, #0x0                   	// #0
   39fc0:	b	39fb8 <ZSTD_sizeof_DDict@@Base+0x1c>

0000000000039fc4 <ZSTD_getDictID_fromDDict@@Base>:
   39fc4:	cbz	x0, 39fd4 <ZSTD_getDictID_fromDDict@@Base+0x10>
   39fc8:	ldr	x1, [x0, #16]
   39fcc:	ldr	x0, [x0, #8]
   39fd0:	b	4a30 <ZSTD_getDictID_fromDict@plt>
   39fd4:	mov	w0, #0x0                   	// #0
   39fd8:	ret
   39fdc:	cmp	w2, #0x0
   39fe0:	mov	x2, #0x5                   	// #5
   39fe4:	csinc	x3, x2, xzr, eq  // eq = none
   39fe8:	cmp	x3, x1
   39fec:	b.hi	3a040 <ZSTD_getDictID_fromDDict@@Base+0x7c>  // b.pmore
   39ff0:	add	x0, x0, x3
   39ff4:	ldurb	w1, [x0, #-1]
   39ff8:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   39ffc:	add	x0, x0, #0x8a0
   3a000:	add	x2, x0, #0x20
   3a004:	and	x5, x1, #0x3
   3a008:	ubfx	x4, x1, #6, #2
   3a00c:	cmp	wzr, w1, lsr #6
   3a010:	ldr	x0, [x0, x5, lsl #3]
   3a014:	ldr	x2, [x2, x4, lsl #3]
   3a018:	add	x0, x0, x2
   3a01c:	mvn	w2, w1, lsr #5
   3a020:	and	x2, x2, #0x1
   3a024:	add	x2, x2, x3
   3a028:	add	x2, x0, x2
   3a02c:	ubfx	x0, x1, #5, #1
   3a030:	csel	w0, w0, wzr, eq  // eq = none
   3a034:	and	x0, x0, #0xff
   3a038:	add	x0, x2, x0
   3a03c:	ret
   3a040:	mov	x0, #0xffffffffffffffb8    	// #-72
   3a044:	b	3a03c <ZSTD_getDictID_fromDDict@@Base+0x78>
   3a048:	cmp	x1, #0x7
   3a04c:	b.ls	3a074 <ZSTD_getDictID_fromDDict@@Base+0xb0>  // b.plast
   3a050:	ldr	w0, [x0, #4]
   3a054:	cmn	w0, #0x9
   3a058:	b.hi	3a07c <ZSTD_getDictID_fromDDict@@Base+0xb8>  // b.pmore
   3a05c:	mov	w0, w0
   3a060:	add	x0, x0, #0x8
   3a064:	cmp	x1, x0
   3a068:	mov	x1, #0xffffffffffffffb8    	// #-72
   3a06c:	csel	x0, x0, x1, cs  // cs = hs, nlast
   3a070:	ret
   3a074:	mov	x0, #0xffffffffffffffb8    	// #-72
   3a078:	b	3a070 <ZSTD_getDictID_fromDDict@@Base+0xac>
   3a07c:	mov	x0, #0xfffffffffffffff2    	// #-14
   3a080:	b	3a070 <ZSTD_getDictID_fromDDict@@Base+0xac>
   3a084:	stp	x29, x30, [sp, #-32]!
   3a088:	mov	x29, sp
   3a08c:	str	x19, [sp, #16]
   3a090:	mov	x19, x0
   3a094:	ldr	x0, [x0, #29016]
   3a098:	add	x19, x19, #0x4, lsl #12
   3a09c:	bl	4a50 <ZSTD_freeDDict@plt>
   3a0a0:	str	xzr, [x19, #12632]
   3a0a4:	str	xzr, [x19, #12640]
   3a0a8:	str	wzr, [x19, #12656]
   3a0ac:	ldr	x19, [sp, #16]
   3a0b0:	ldp	x29, x30, [sp], #32
   3a0b4:	ret
   3a0b8:	add	x2, x0, #0x4, lsl #12
   3a0bc:	mov	x1, x0
   3a0c0:	ldr	w3, [x2, #12656]
   3a0c4:	cmn	w3, #0x1
   3a0c8:	b.eq	3a0f0 <ZSTD_getDictID_fromDDict@@Base+0x12c>  // b.none
   3a0cc:	cmp	w3, #0x1
   3a0d0:	b.eq	3a0ec <ZSTD_getDictID_fromDDict@@Base+0x128>  // b.none
   3a0d4:	stp	x29, x30, [sp, #-16]!
   3a0d8:	mov	x29, sp
   3a0dc:	bl	3a084 <ZSTD_getDictID_fromDDict@@Base+0xc0>
   3a0e0:	mov	x0, #0x0                   	// #0
   3a0e4:	ldp	x29, x30, [sp], #16
   3a0e8:	ret
   3a0ec:	str	wzr, [x2, #12656]
   3a0f0:	ldr	x0, [x1, #29024]
   3a0f4:	ret
   3a0f8:	cmp	w1, #0x6
   3a0fc:	b.eq	3a114 <ZSTD_getDictID_fromDDict@@Base+0x150>  // b.none
   3a100:	cmp	w1, #0x7
   3a104:	b.eq	3a118 <ZSTD_getDictID_fromDDict@@Base+0x154>  // b.none
   3a108:	cmp	w1, #0x5
   3a10c:	b.ne	3a11c <ZSTD_getDictID_fromDDict@@Base+0x158>  // b.any
   3a110:	b	4aa74 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3554>
   3a114:	b	4e418 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ef8>
   3a118:	b	527c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb2a8>
   3a11c:	mov	x0, #0xfffffffffffffff4    	// #-12
   3a120:	ret
   3a124:	stp	x29, x30, [sp, #-48]!
   3a128:	cmp	w1, #0x6
   3a12c:	mov	x29, sp
   3a130:	stp	x19, x20, [sp, #16]
   3a134:	mov	x20, x2
   3a138:	mov	x19, x3
   3a13c:	b.eq	3a1b0 <ZSTD_getDictID_fromDDict@@Base+0x1ec>  // b.none
   3a140:	cmp	w1, #0x7
   3a144:	b.eq	3a1e8 <ZSTD_getDictID_fromDDict@@Base+0x224>  // b.none
   3a148:	cmp	w1, #0x5
   3a14c:	b.ne	3a220 <ZSTD_getDictID_fromDDict@@Base+0x25c>  // b.any
   3a150:	ldp	x6, x1, [x3]
   3a154:	add	x4, sp, #0x20
   3a158:	ldr	x3, [x3, #16]
   3a15c:	ldp	x5, x2, [x2]
   3a160:	sub	x1, x1, x3
   3a164:	str	x1, [sp, #32]
   3a168:	ldr	x1, [x20, #16]
   3a16c:	add	x3, x6, x3
   3a170:	sub	x2, x2, x1
   3a174:	add	x1, x5, x1
   3a178:	str	x2, [sp, #40]
   3a17c:	add	x2, sp, #0x28
   3a180:	bl	4aae8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x35c8>
   3a184:	ldr	x1, [x20, #16]
   3a188:	ldr	x2, [sp, #40]
   3a18c:	add	x1, x1, x2
   3a190:	ldr	x2, [sp, #32]
   3a194:	str	x1, [x20, #16]
   3a198:	ldr	x1, [x19, #16]
   3a19c:	add	x1, x1, x2
   3a1a0:	str	x1, [x19, #16]
   3a1a4:	ldp	x19, x20, [sp, #16]
   3a1a8:	ldp	x29, x30, [sp], #48
   3a1ac:	ret
   3a1b0:	ldp	x6, x1, [x3]
   3a1b4:	add	x4, sp, #0x20
   3a1b8:	ldr	x3, [x3, #16]
   3a1bc:	ldp	x5, x2, [x2]
   3a1c0:	sub	x1, x1, x3
   3a1c4:	str	x1, [sp, #32]
   3a1c8:	ldr	x1, [x20, #16]
   3a1cc:	add	x3, x6, x3
   3a1d0:	sub	x2, x2, x1
   3a1d4:	add	x1, x5, x1
   3a1d8:	str	x2, [sp, #40]
   3a1dc:	add	x2, sp, #0x28
   3a1e0:	bl	4e48c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6f6c>
   3a1e4:	b	3a184 <ZSTD_getDictID_fromDDict@@Base+0x1c0>
   3a1e8:	ldp	x6, x1, [x3]
   3a1ec:	add	x4, sp, #0x20
   3a1f0:	ldr	x3, [x3, #16]
   3a1f4:	ldp	x5, x2, [x2]
   3a1f8:	sub	x1, x1, x3
   3a1fc:	str	x1, [sp, #32]
   3a200:	ldr	x1, [x20, #16]
   3a204:	add	x3, x6, x3
   3a208:	sub	x2, x2, x1
   3a20c:	add	x1, x5, x1
   3a210:	str	x2, [sp, #40]
   3a214:	add	x2, sp, #0x28
   3a218:	bl	5293c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb41c>
   3a21c:	b	3a184 <ZSTD_getDictID_fromDDict@@Base+0x1c0>
   3a220:	mov	x0, #0xfffffffffffffff4    	// #-12
   3a224:	b	3a1a4 <ZSTD_getDictID_fromDDict@@Base+0x1e0>
   3a228:	cmp	x1, #0x3
   3a22c:	b.ls	3a258 <ZSTD_getDictID_fromDDict@@Base+0x294>  // b.plast
   3a230:	ldr	w0, [x0]
   3a234:	mov	w1, #0x4adb                	// #19163
   3a238:	movk	w1, #0x2d0, lsl #16
   3a23c:	mov	w2, #0x4ae0                	// #19168
   3a240:	add	w1, w0, w1
   3a244:	movk	w2, #0x2d0, lsl #16
   3a248:	cmp	w1, #0x3
   3a24c:	add	w0, w0, w2
   3a250:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   3a254:	ret
   3a258:	mov	w0, #0x0                   	// #0
   3a25c:	b	3a254 <ZSTD_getDictID_fromDDict@@Base+0x290>
   3a260:	stp	x29, x30, [sp, #-48]!
   3a264:	mov	x4, x0
   3a268:	mov	x29, sp
   3a26c:	str	x19, [sp, #16]
   3a270:	mov	x19, x1
   3a274:	bl	3a228 <ZSTD_getDictID_fromDDict@@Base+0x264>
   3a278:	cmp	w0, #0x6
   3a27c:	b.eq	3a2d8 <ZSTD_getDictID_fromDDict@@Base+0x314>  // b.none
   3a280:	cmp	w0, #0x7
   3a284:	b.eq	3a2f0 <ZSTD_getDictID_fromDDict@@Base+0x32c>  // b.none
   3a288:	cmp	w0, #0x5
   3a28c:	b.ne	3a308 <ZSTD_getDictID_fromDDict@@Base+0x344>  // b.any
   3a290:	add	x2, sp, #0x20
   3a294:	mov	x1, x19
   3a298:	add	x3, x2, #0x8
   3a29c:	mov	x0, x4
   3a2a0:	bl	4a600 <ZDICT_addEntropyTablesFromBuffer@@Base+0x30e0>
   3a2a4:	ldr	x0, [sp, #32]
   3a2a8:	cmn	x0, #0x78
   3a2ac:	b.hi	3a2c8 <ZSTD_getDictID_fromDDict@@Base+0x304>  // b.pmore
   3a2b0:	cmp	x0, x19
   3a2b4:	b.ls	3a2c8 <ZSTD_getDictID_fromDDict@@Base+0x304>  // b.plast
   3a2b8:	mov	x0, #0xffffffffffffffb8    	// #-72
   3a2bc:	str	x0, [sp, #32]
   3a2c0:	mov	x0, #0xfffffffffffffffe    	// #-2
   3a2c4:	str	x0, [sp, #40]
   3a2c8:	ldr	x19, [sp, #16]
   3a2cc:	ldp	x0, x1, [sp, #32]
   3a2d0:	ldp	x29, x30, [sp], #48
   3a2d4:	ret
   3a2d8:	add	x2, sp, #0x20
   3a2dc:	mov	x1, x19
   3a2e0:	add	x3, x2, #0x8
   3a2e4:	mov	x0, x4
   3a2e8:	bl	4df40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6a20>
   3a2ec:	b	3a2a4 <ZSTD_getDictID_fromDDict@@Base+0x2e0>
   3a2f0:	add	x2, sp, #0x20
   3a2f4:	mov	x1, x19
   3a2f8:	add	x3, x2, #0x8
   3a2fc:	mov	x0, x4
   3a300:	bl	520b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xab90>
   3a304:	b	3a2a4 <ZSTD_getDictID_fromDDict@@Base+0x2e0>
   3a308:	mov	x0, #0xfffffffffffffff6    	// #-10
   3a30c:	str	x0, [sp, #32]
   3a310:	mov	x0, #0xfffffffffffffffe    	// #-2
   3a314:	str	x0, [sp, #40]
   3a318:	b	3a2a4 <ZSTD_getDictID_fromDDict@@Base+0x2e0>

000000000003a31c <ZSTD_sizeof_DCtx@@Base>:
   3a31c:	cbz	x0, 3a35c <ZSTD_sizeof_DCtx@@Base+0x40>
   3a320:	stp	x29, x30, [sp, #-32]!
   3a324:	mov	x29, sp
   3a328:	str	x19, [sp, #16]
   3a32c:	mov	x19, x0
   3a330:	ldr	x0, [x0, #29016]
   3a334:	bl	4a00 <ZSTD_sizeof_DDict@plt>
   3a338:	add	x0, x0, #0x27, lsl #12
   3a33c:	ldr	x1, [x19, #29056]
   3a340:	add	x0, x0, #0x210
   3a344:	ldr	x2, [x19, #29088]
   3a348:	ldr	x19, [sp, #16]
   3a34c:	add	x1, x1, x2
   3a350:	add	x0, x1, x0
   3a354:	ldp	x29, x30, [sp], #32
   3a358:	ret
   3a35c:	mov	x0, #0x0                   	// #0
   3a360:	ret

000000000003a364 <ZSTD_estimateDCtxSize@@Base>:
   3a364:	mov	x0, #0x7210                	// #29200
   3a368:	movk	x0, #0x2, lsl #16
   3a36c:	ret

000000000003a370 <ZSTD_initStaticDCtx@@Base>:
   3a370:	tst	x0, #0x7
   3a374:	b.ne	3a3dc <ZSTD_initStaticDCtx@@Base+0x6c>  // b.any
   3a378:	mov	x2, #0x720f                	// #29199
   3a37c:	movk	x2, #0x2, lsl #16
   3a380:	cmp	x1, x2
   3a384:	b.ls	3a3dc <ZSTD_initStaticDCtx@@Base+0x6c>  // b.plast
   3a388:	add	x2, x0, #0x4, lsl #12
   3a38c:	mov	x3, #0x1                   	// #1
   3a390:	movk	x3, #0x800, lsl #16
   3a394:	str	wzr, [x2, #12560]
   3a398:	str	xzr, [x0, #28768]
   3a39c:	str	xzr, [x0, #29016]
   3a3a0:	str	xzr, [x0, #29024]
   3a3a4:	str	xzr, [x0, #29056]
   3a3a8:	str	x3, [x0, #29072]
   3a3ac:	str	xzr, [x0, #29088]
   3a3b0:	str	wzr, [x2, #12652]
   3a3b4:	str	xzr, [x0, #29040]
   3a3b8:	str	xzr, [x0, #29120]
   3a3bc:	str	wzr, [x2, #12624]
   3a3c0:	str	wzr, [x2, #12744]
   3a3c4:	str	wzr, [x2, #12756]
   3a3c8:	str	x1, [x0, #29000]
   3a3cc:	add	x1, x0, #0x27, lsl #12
   3a3d0:	add	x1, x1, #0x210
   3a3d4:	str	x1, [x0, #29048]
   3a3d8:	ret
   3a3dc:	mov	x0, #0x0                   	// #0
   3a3e0:	b	3a3d8 <ZSTD_initStaticDCtx@@Base+0x68>

000000000003a3e4 <ZSTD_createDCtx_advanced@@Base>:
   3a3e4:	stp	x29, x30, [sp, #-64]!
   3a3e8:	mov	x29, sp
   3a3ec:	str	x19, [sp, #16]
   3a3f0:	mov	x19, x0
   3a3f4:	ldr	x0, [x0]
   3a3f8:	cmp	x0, #0x0
   3a3fc:	ldr	x0, [x19, #8]
   3a400:	cset	w1, eq  // eq = none
   3a404:	cmp	x0, #0x0
   3a408:	cset	w0, eq  // eq = none
   3a40c:	cmp	w1, w0
   3a410:	b.ne	3a4a0 <ZSTD_createDCtx_advanced@@Base+0xbc>  // b.any
   3a414:	ldp	x0, x1, [x19]
   3a418:	stp	x0, x1, [sp, #32]
   3a41c:	ldr	x0, [x19, #16]
   3a420:	str	x0, [sp, #48]
   3a424:	mov	x0, #0x7210                	// #29200
   3a428:	add	x1, sp, #0x20
   3a42c:	movk	x0, #0x2, lsl #16
   3a430:	bl	6b50 <ZSTD_getErrorString@@Base+0x4>
   3a434:	cbz	x0, 3a494 <ZSTD_createDCtx_advanced@@Base+0xb0>
   3a438:	add	x1, x0, #0x7, lsl #12
   3a43c:	ldp	x2, x3, [x19]
   3a440:	stp	x2, x3, [x1, #288]
   3a444:	add	x1, x0, #0x4, lsl #12
   3a448:	ldr	x2, [x19, #16]
   3a44c:	str	x2, [x0, #28976]
   3a450:	mov	x2, #0x1                   	// #1
   3a454:	str	wzr, [x1, #12560]
   3a458:	movk	x2, #0x800, lsl #16
   3a45c:	str	xzr, [x0, #28768]
   3a460:	str	xzr, [x0, #29000]
   3a464:	str	xzr, [x0, #29016]
   3a468:	str	xzr, [x0, #29024]
   3a46c:	str	x2, [x0, #29072]
   3a470:	str	xzr, [x0, #29088]
   3a474:	str	wzr, [x1, #12652]
   3a478:	str	xzr, [x0, #29040]
   3a47c:	str	xzr, [x0, #29048]
   3a480:	str	xzr, [x0, #29056]
   3a484:	str	xzr, [x0, #29120]
   3a488:	str	wzr, [x1, #12624]
   3a48c:	str	wzr, [x1, #12744]
   3a490:	str	wzr, [x1, #12756]
   3a494:	ldr	x19, [sp, #16]
   3a498:	ldp	x29, x30, [sp], #64
   3a49c:	ret
   3a4a0:	mov	x0, #0x0                   	// #0
   3a4a4:	b	3a494 <ZSTD_createDCtx_advanced@@Base+0xb0>

000000000003a4a8 <ZSTD_createDCtx@@Base>:
   3a4a8:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   3a4ac:	add	x0, x0, #0x8a0
   3a4b0:	stp	x29, x30, [sp, #-48]!
   3a4b4:	mov	x29, sp
   3a4b8:	ldp	x2, x3, [x0, #64]
   3a4bc:	stp	x2, x3, [sp, #16]
   3a4c0:	ldr	x0, [x0, #80]
   3a4c4:	str	x0, [sp, #32]
   3a4c8:	add	x0, sp, #0x10
   3a4cc:	bl	4b30 <ZSTD_createDCtx_advanced@plt>
   3a4d0:	ldp	x29, x30, [sp], #48
   3a4d4:	ret

000000000003a4d8 <ZSTD_freeDCtx@@Base>:
   3a4d8:	stp	x29, x30, [sp, #-112]!
   3a4dc:	mov	x29, sp
   3a4e0:	stp	x19, x20, [sp, #16]
   3a4e4:	str	x21, [sp, #32]
   3a4e8:	cbz	x0, 3a578 <ZSTD_freeDCtx@@Base+0xa0>
   3a4ec:	ldr	x20, [x0, #29000]
   3a4f0:	mov	x19, x0
   3a4f4:	cbnz	x20, 3a580 <ZSTD_freeDCtx@@Base+0xa8>
   3a4f8:	add	x1, x0, #0x7, lsl #12
   3a4fc:	add	x21, sp, #0x30
   3a500:	ldp	x2, x3, [x1, #288]
   3a504:	stp	x2, x3, [sp, #88]
   3a508:	ldr	x1, [x0, #28976]
   3a50c:	str	x1, [sp, #104]
   3a510:	bl	3a084 <ZSTD_getDictID_fromDDict@@Base+0xc0>
   3a514:	ldp	x0, x1, [sp, #88]
   3a518:	stp	x0, x1, [sp, #48]
   3a51c:	ldr	x0, [sp, #104]
   3a520:	str	x0, [sp, #64]
   3a524:	mov	x1, x21
   3a528:	ldr	x0, [x19, #29048]
   3a52c:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   3a530:	str	xzr, [x19, #29048]
   3a534:	ldr	x0, [x19, #29120]
   3a538:	cbz	x0, 3a548 <ZSTD_freeDCtx@@Base+0x70>
   3a53c:	add	x1, x19, #0x4, lsl #12
   3a540:	ldr	w1, [x1, #12744]
   3a544:	bl	3a0f8 <ZSTD_getDictID_fromDDict@@Base+0x134>
   3a548:	ldp	x0, x1, [sp, #88]
   3a54c:	stp	x0, x1, [sp, #48]
   3a550:	ldr	x0, [sp, #104]
   3a554:	mov	x1, x21
   3a558:	str	x0, [sp, #64]
   3a55c:	mov	x0, x19
   3a560:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   3a564:	mov	x0, x20
   3a568:	ldp	x19, x20, [sp, #16]
   3a56c:	ldr	x21, [sp, #32]
   3a570:	ldp	x29, x30, [sp], #112
   3a574:	ret
   3a578:	mov	x20, #0x0                   	// #0
   3a57c:	b	3a564 <ZSTD_freeDCtx@@Base+0x8c>
   3a580:	mov	x20, #0xffffffffffffffc0    	// #-64
   3a584:	b	3a564 <ZSTD_freeDCtx@@Base+0x8c>

000000000003a588 <ZSTD_copyDCtx@@Base>:
   3a588:	mov	x2, #0x7178                	// #29048
   3a58c:	b	4460 <memcpy@plt>

000000000003a590 <ZSTD_isFrame@@Base>:
   3a590:	cmp	x1, #0x3
   3a594:	b.ls	3a5dc <ZSTD_isFrame@@Base+0x4c>  // b.plast
   3a598:	ldr	w2, [x0]
   3a59c:	mov	w3, #0xb528                	// #46376
   3a5a0:	movk	w3, #0xfd2f, lsl #16
   3a5a4:	cmp	w2, w3
   3a5a8:	b.eq	3a5e4 <ZSTD_isFrame@@Base+0x54>  // b.none
   3a5ac:	and	w2, w2, #0xfffffff0
   3a5b0:	mov	w3, #0x2a50                	// #10832
   3a5b4:	movk	w3, #0x184d, lsl #16
   3a5b8:	cmp	w2, w3
   3a5bc:	b.eq	3a5e4 <ZSTD_isFrame@@Base+0x54>  // b.none
   3a5c0:	stp	x29, x30, [sp, #-16]!
   3a5c4:	mov	x29, sp
   3a5c8:	bl	3a228 <ZSTD_getDictID_fromDDict@@Base+0x264>
   3a5cc:	cmp	w0, #0x0
   3a5d0:	cset	w0, ne  // ne = any
   3a5d4:	ldp	x29, x30, [sp], #16
   3a5d8:	ret
   3a5dc:	mov	w0, #0x0                   	// #0
   3a5e0:	ret
   3a5e4:	mov	w0, #0x1                   	// #1
   3a5e8:	ret

000000000003a5ec <ZSTD_frameHeaderSize@@Base>:
   3a5ec:	mov	w2, #0x0                   	// #0
   3a5f0:	b	39fdc <ZSTD_getDictID_fromDDict@@Base+0x18>

000000000003a5f4 <ZSTD_getFrameHeader_advanced@@Base>:
   3a5f4:	cmp	w3, #0x0
   3a5f8:	stp	xzr, xzr, [x0]
   3a5fc:	mov	x7, x1
   3a600:	stp	xzr, xzr, [x0, #16]
   3a604:	mov	x1, #0x1                   	// #1
   3a608:	mov	x6, #0x5                   	// #5
   3a60c:	str	xzr, [x0, #32]
   3a610:	csel	x6, x6, x1, eq  // eq = none
   3a614:	mov	x9, x2
   3a618:	cmp	x2, x6
   3a61c:	b.cc	3a7a8 <ZSTD_getFrameHeader_advanced@@Base+0x1b4>  // b.lo, b.ul, b.last
   3a620:	cbz	x7, 3a7b0 <ZSTD_getFrameHeader_advanced@@Base+0x1bc>
   3a624:	mov	x8, x0
   3a628:	mov	w2, w3
   3a62c:	cmp	w3, #0x1
   3a630:	b.eq	3a678 <ZSTD_getFrameHeader_advanced@@Base+0x84>  // b.none
   3a634:	ldr	w0, [x7]
   3a638:	mov	w3, #0xb528                	// #46376
   3a63c:	movk	w3, #0xfd2f, lsl #16
   3a640:	cmp	w0, w3
   3a644:	b.eq	3a678 <ZSTD_getFrameHeader_advanced@@Base+0x84>  // b.none
   3a648:	and	w0, w0, #0xfffffff0
   3a64c:	mov	w2, #0x2a50                	// #10832
   3a650:	movk	w2, #0x184d, lsl #16
   3a654:	cmp	w0, w2
   3a658:	b.ne	3a7b8 <ZSTD_getFrameHeader_advanced@@Base+0x1c4>  // b.any
   3a65c:	cmp	x9, #0x7
   3a660:	b.ls	3a7c0 <ZSTD_getFrameHeader_advanced@@Base+0x1cc>  // b.plast
   3a664:	ldr	w0, [x7, #4]
   3a668:	str	x0, [x8]
   3a66c:	mov	x0, #0x0                   	// #0
   3a670:	str	w1, [x8, #20]
   3a674:	ret
   3a678:	stp	x29, x30, [sp, #-16]!
   3a67c:	mov	x1, x9
   3a680:	mov	x0, x7
   3a684:	mov	x29, sp
   3a688:	bl	39fdc <ZSTD_getDictID_fromDDict@@Base+0x18>
   3a68c:	cmp	x9, x0
   3a690:	b.cc	3a74c <ZSTD_getFrameHeader_advanced@@Base+0x158>  // b.lo, b.ul, b.last
   3a694:	str	w0, [x8, #24]
   3a698:	add	x0, x7, x6
   3a69c:	ldurb	w2, [x0, #-1]
   3a6a0:	ubfx	x4, x2, #5, #1
   3a6a4:	tbnz	w2, #3, 3a7c8 <ZSTD_getFrameHeader_advanced@@Base+0x1d4>
   3a6a8:	cbnz	w4, 3a754 <ZSTD_getFrameHeader_advanced@@Base+0x160>
   3a6ac:	ldrb	w3, [x7, x6]
   3a6b0:	add	x5, x6, #0x1
   3a6b4:	lsr	w0, w3, #3
   3a6b8:	add	w0, w0, #0xa
   3a6bc:	cmp	w0, #0x1f
   3a6c0:	b.gt	3a7d0 <ZSTD_getFrameHeader_advanced@@Base+0x1dc>
   3a6c4:	mov	x1, #0x1                   	// #1
   3a6c8:	and	x3, x3, #0x7
   3a6cc:	lsl	x1, x1, x0
   3a6d0:	mov	x6, x5
   3a6d4:	lsr	x0, x1, #3
   3a6d8:	madd	x0, x0, x3, x1
   3a6dc:	and	w1, w2, #0x3
   3a6e0:	cmp	w1, #0x2
   3a6e4:	b.eq	3a75c <ZSTD_getFrameHeader_advanced@@Base+0x168>  // b.none
   3a6e8:	cmp	w1, #0x3
   3a6ec:	b.eq	3a768 <ZSTD_getFrameHeader_advanced@@Base+0x174>  // b.none
   3a6f0:	cmp	w1, #0x1
   3a6f4:	b.ne	3a774 <ZSTD_getFrameHeader_advanced@@Base+0x180>  // b.any
   3a6f8:	ldrb	w3, [x7, x6]
   3a6fc:	add	x6, x6, #0x1
   3a700:	lsr	w1, w2, #6
   3a704:	cmp	w1, #0x2
   3a708:	b.eq	3a790 <ZSTD_getFrameHeader_advanced@@Base+0x19c>  // b.none
   3a70c:	cmp	w1, #0x3
   3a710:	b.eq	3a798 <ZSTD_getFrameHeader_advanced@@Base+0x1a4>  // b.none
   3a714:	cmp	w1, #0x1
   3a718:	b.eq	3a77c <ZSTD_getFrameHeader_advanced@@Base+0x188>  // b.none
   3a71c:	cbz	w4, 3a7a0 <ZSTD_getFrameHeader_advanced@@Base+0x1ac>
   3a720:	ldrb	w0, [x7, x6]
   3a724:	mov	x1, x0
   3a728:	stp	x1, x0, [x8]
   3a72c:	mov	x1, #0x1ffff               	// #131071
   3a730:	cmp	x0, x1
   3a734:	mov	x1, #0x20000               	// #131072
   3a738:	csel	x0, x0, x1, ls  // ls = plast
   3a73c:	ubfx	x2, x2, #2, #1
   3a740:	str	w0, [x8, #16]
   3a744:	mov	x0, #0x0                   	// #0
   3a748:	stp	w3, w2, [x8, #28]
   3a74c:	ldp	x29, x30, [sp], #16
   3a750:	ret
   3a754:	mov	x0, #0x0                   	// #0
   3a758:	b	3a6dc <ZSTD_getFrameHeader_advanced@@Base+0xe8>
   3a75c:	ldrh	w3, [x7, x6]
   3a760:	add	x6, x6, #0x2
   3a764:	b	3a700 <ZSTD_getFrameHeader_advanced@@Base+0x10c>
   3a768:	ldr	w3, [x7, x6]
   3a76c:	add	x6, x6, #0x4
   3a770:	b	3a700 <ZSTD_getFrameHeader_advanced@@Base+0x10c>
   3a774:	mov	w3, #0x0                   	// #0
   3a778:	b	3a700 <ZSTD_getFrameHeader_advanced@@Base+0x10c>
   3a77c:	ldrh	w1, [x7, x6]
   3a780:	add	x1, x1, #0x100
   3a784:	cmp	w4, #0x0
   3a788:	csel	x0, x0, x1, eq  // eq = none
   3a78c:	b	3a728 <ZSTD_getFrameHeader_advanced@@Base+0x134>
   3a790:	ldr	w1, [x7, x6]
   3a794:	b	3a784 <ZSTD_getFrameHeader_advanced@@Base+0x190>
   3a798:	ldr	x1, [x7, x6]
   3a79c:	b	3a784 <ZSTD_getFrameHeader_advanced@@Base+0x190>
   3a7a0:	mov	x1, #0xffffffffffffffff    	// #-1
   3a7a4:	b	3a728 <ZSTD_getFrameHeader_advanced@@Base+0x134>
   3a7a8:	mov	x0, x6
   3a7ac:	ret
   3a7b0:	mov	x0, #0xffffffffffffffff    	// #-1
   3a7b4:	ret
   3a7b8:	mov	x0, #0xfffffffffffffff6    	// #-10
   3a7bc:	ret
   3a7c0:	mov	x0, #0x8                   	// #8
   3a7c4:	ret
   3a7c8:	mov	x0, #0xfffffffffffffff2    	// #-14
   3a7cc:	b	3a74c <ZSTD_getFrameHeader_advanced@@Base+0x158>
   3a7d0:	mov	x0, #0xfffffffffffffff0    	// #-16
   3a7d4:	b	3a74c <ZSTD_getFrameHeader_advanced@@Base+0x158>
   3a7d8:	stp	x29, x30, [sp, #-48]!
   3a7dc:	mov	x3, #0x7070                	// #28784
   3a7e0:	mov	x29, sp
   3a7e4:	str	x21, [sp, #32]
   3a7e8:	add	x21, x0, #0x4, lsl #12
   3a7ec:	stp	x19, x20, [sp, #16]
   3a7f0:	mov	x20, x0
   3a7f4:	add	x0, x0, x3
   3a7f8:	ldr	w3, [x21, #12560]
   3a7fc:	bl	4600 <ZSTD_getFrameHeader_advanced@plt>
   3a800:	mov	x19, x0
   3a804:	cmn	x0, #0x78
   3a808:	b.hi	3a83c <ZSTD_getFrameHeader_advanced@@Base+0x248>  // b.pmore
   3a80c:	cbnz	x0, 3a850 <ZSTD_getFrameHeader_advanced@@Base+0x25c>
   3a810:	ldr	w0, [x21, #12428]
   3a814:	cbz	w0, 3a824 <ZSTD_getFrameHeader_advanced@@Base+0x230>
   3a818:	ldr	w1, [x21, #12648]
   3a81c:	cmp	w0, w1
   3a820:	b.ne	3a858 <ZSTD_getFrameHeader_advanced@@Base+0x264>  // b.any
   3a824:	ldr	w0, [x21, #12432]
   3a828:	cbz	w0, 3a83c <ZSTD_getFrameHeader_advanced@@Base+0x248>
   3a82c:	mov	x0, #0x70b0                	// #28848
   3a830:	mov	x1, #0x0                   	// #0
   3a834:	add	x0, x20, x0
   3a838:	bl	63ec <ZSTD_initDStream_usingDDict@plt+0x186c>
   3a83c:	mov	x0, x19
   3a840:	ldp	x19, x20, [sp, #16]
   3a844:	ldr	x21, [sp, #32]
   3a848:	ldp	x29, x30, [sp], #48
   3a84c:	ret
   3a850:	mov	x19, #0xffffffffffffffb8    	// #-72
   3a854:	b	3a83c <ZSTD_getFrameHeader_advanced@@Base+0x248>
   3a858:	mov	x19, #0xffffffffffffffe0    	// #-32
   3a85c:	b	3a83c <ZSTD_getFrameHeader_advanced@@Base+0x248>

000000000003a860 <ZSTD_getFrameHeader@@Base>:
   3a860:	mov	w3, #0x0                   	// #0
   3a864:	b	4600 <ZSTD_getFrameHeader_advanced@plt>
   3a868:	stp	x29, x30, [sp, #-144]!
   3a86c:	mov	x29, sp
   3a870:	stp	x19, x20, [sp, #16]
   3a874:	mov	x19, x1
   3a878:	stp	x21, x22, [sp, #32]
   3a87c:	mov	x22, x0
   3a880:	stp	x23, x24, [sp, #48]
   3a884:	stp	xzr, xzr, [sp, #88]
   3a888:	bl	3a228 <ZSTD_getDictID_fromDDict@@Base+0x264>
   3a88c:	cbz	w0, 3a8b0 <ZSTD_getFrameHeader@@Base+0x50>
   3a890:	mov	x1, x19
   3a894:	mov	x0, x22
   3a898:	bl	3a260 <ZSTD_getDictID_fromDDict@@Base+0x29c>
   3a89c:	ldp	x19, x20, [sp, #16]
   3a8a0:	ldp	x21, x22, [sp, #32]
   3a8a4:	ldp	x23, x24, [sp, #48]
   3a8a8:	ldp	x29, x30, [sp], #144
   3a8ac:	ret
   3a8b0:	cmp	x19, #0x7
   3a8b4:	b.ls	3a8e4 <ZSTD_getFrameHeader@@Base+0x84>  // b.plast
   3a8b8:	ldr	w0, [x22]
   3a8bc:	mov	w1, #0x2a50                	// #10832
   3a8c0:	movk	w1, #0x184d, lsl #16
   3a8c4:	and	w0, w0, #0xfffffff0
   3a8c8:	cmp	w0, w1
   3a8cc:	b.ne	3a8e4 <ZSTD_getFrameHeader@@Base+0x84>  // b.any
   3a8d0:	mov	x1, x19
   3a8d4:	mov	x0, x22
   3a8d8:	bl	3a048 <ZSTD_getDictID_fromDDict@@Base+0x84>
   3a8dc:	ldr	x1, [sp, #96]
   3a8e0:	b	3a89c <ZSTD_getFrameHeader@@Base+0x3c>
   3a8e4:	mov	x2, x19
   3a8e8:	mov	x1, x22
   3a8ec:	add	x0, sp, #0x68
   3a8f0:	bl	48b0 <ZSTD_getFrameHeader@plt>
   3a8f4:	mov	x20, x0
   3a8f8:	cmn	x0, #0x78
   3a8fc:	b.ls	3a908 <ZSTD_getFrameHeader@@Base+0xa8>  // b.plast
   3a900:	mov	x1, #0xfffffffffffffffe    	// #-2
   3a904:	b	3a89c <ZSTD_getFrameHeader@@Base+0x3c>
   3a908:	cbz	x0, 3a914 <ZSTD_getFrameHeader@@Base+0xb4>
   3a90c:	mov	x0, #0xffffffffffffffb8    	// #-72
   3a910:	b	3a900 <ZSTD_getFrameHeader@@Base+0xa0>
   3a914:	ldr	w1, [sp, #128]
   3a918:	add	x24, sp, #0x48
   3a91c:	mov	x23, #0xfffffffffffffffd    	// #-3
   3a920:	add	x21, x22, x1
   3a924:	sub	x19, x19, x1
   3a928:	mov	x2, x24
   3a92c:	mov	x1, x19
   3a930:	mov	x0, x21
   3a934:	bl	3d810 <ZSTD_decompressStream_simpleArgs@@Base+0x1068>
   3a938:	cmn	x0, #0x78
   3a93c:	b.hi	3a900 <ZSTD_getFrameHeader@@Base+0xa0>  // b.pmore
   3a940:	add	x1, x0, #0x3
   3a944:	cmp	x1, x19
   3a948:	b.hi	3a90c <ZSTD_getFrameHeader@@Base+0xac>  // b.pmore
   3a94c:	sub	x3, x23, x0
   3a950:	ldr	w0, [sp, #76]
   3a954:	add	x21, x21, x1
   3a958:	add	x19, x19, x3
   3a95c:	add	x20, x20, #0x1
   3a960:	cbz	w0, 3a928 <ZSTD_getFrameHeader@@Base+0xc8>
   3a964:	ldr	w0, [sp, #136]
   3a968:	cbz	w0, 3a978 <ZSTD_getFrameHeader@@Base+0x118>
   3a96c:	cmp	x19, #0x3
   3a970:	b.ls	3a90c <ZSTD_getFrameHeader@@Base+0xac>  // b.plast
   3a974:	add	x21, x21, #0x4
   3a978:	ldr	x1, [sp, #104]
   3a97c:	sub	x21, x21, x22
   3a980:	str	x21, [sp, #88]
   3a984:	cmn	x1, #0x1
   3a988:	b.ne	3a994 <ZSTD_getFrameHeader@@Base+0x134>  // b.any
   3a98c:	ldr	w1, [sp, #120]
   3a990:	mul	x1, x1, x20
   3a994:	ldr	x0, [sp, #88]
   3a998:	b	3a89c <ZSTD_getFrameHeader@@Base+0x3c>

000000000003a99c <ZSTD_getFrameContentSize@@Base>:
   3a99c:	stp	x29, x30, [sp, #-80]!
   3a9a0:	mov	x3, x0
   3a9a4:	mov	x2, x1
   3a9a8:	mov	x29, sp
   3a9ac:	cmp	x1, #0x3
   3a9b0:	b.ls	3aa40 <ZSTD_getFrameContentSize@@Base+0xa4>  // b.plast
   3a9b4:	ldr	w4, [x0]
   3a9b8:	mov	w5, #0x4adb                	// #19163
   3a9bc:	movk	w5, #0x2d0, lsl #16
   3a9c0:	add	w4, w4, w5
   3a9c4:	cmp	w4, #0x2
   3a9c8:	b.hi	3aa40 <ZSTD_getFrameContentSize@@Base+0xa4>  // b.pmore
   3a9cc:	str	x1, [sp, #24]
   3a9d0:	bl	3a228 <ZSTD_getDictID_fromDDict@@Base+0x264>
   3a9d4:	cmp	w0, #0x4
   3a9d8:	b.ls	3a9f8 <ZSTD_getFrameContentSize@@Base+0x5c>  // b.plast
   3a9dc:	cmp	w0, #0x5
   3a9e0:	ldr	x2, [sp, #24]
   3a9e4:	b.ne	3aa00 <ZSTD_getFrameContentSize@@Base+0x64>  // b.any
   3a9e8:	mov	x1, x3
   3a9ec:	add	x0, sp, #0x28
   3a9f0:	bl	4a348 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2e28>
   3a9f4:	cbz	x0, 3aa30 <ZSTD_getFrameContentSize@@Base+0x94>
   3a9f8:	mov	x0, #0xffffffffffffffff    	// #-1
   3a9fc:	b	3aa38 <ZSTD_getFrameContentSize@@Base+0x9c>
   3aa00:	cmp	w0, #0x6
   3aa04:	b.ne	3aa18 <ZSTD_getFrameContentSize@@Base+0x7c>  // b.any
   3aa08:	mov	x1, x3
   3aa0c:	add	x0, sp, #0x28
   3aa10:	bl	4dc08 <ZDICT_addEntropyTablesFromBuffer@@Base+0x66e8>
   3aa14:	b	3a9f4 <ZSTD_getFrameContentSize@@Base+0x58>
   3aa18:	cmp	w0, #0x7
   3aa1c:	b.ne	3a9f8 <ZSTD_getFrameContentSize@@Base+0x5c>  // b.any
   3aa20:	mov	x1, x3
   3aa24:	add	x0, sp, #0x28
   3aa28:	bl	51be0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa6c0>
   3aa2c:	b	3a9f4 <ZSTD_getFrameContentSize@@Base+0x58>
   3aa30:	ldr	x0, [sp, #40]
   3aa34:	cbz	x0, 3a9f8 <ZSTD_getFrameContentSize@@Base+0x5c>
   3aa38:	ldp	x29, x30, [sp], #80
   3aa3c:	ret
   3aa40:	mov	x1, x3
   3aa44:	add	x0, sp, #0x28
   3aa48:	bl	48b0 <ZSTD_getFrameHeader@plt>
   3aa4c:	cbnz	x0, 3aa64 <ZSTD_getFrameContentSize@@Base+0xc8>
   3aa50:	ldr	w1, [sp, #60]
   3aa54:	cmp	w1, #0x1
   3aa58:	b.eq	3aa38 <ZSTD_getFrameContentSize@@Base+0x9c>  // b.none
   3aa5c:	ldr	x0, [sp, #40]
   3aa60:	b	3aa38 <ZSTD_getFrameContentSize@@Base+0x9c>
   3aa64:	mov	x0, #0xfffffffffffffffe    	// #-2
   3aa68:	b	3aa38 <ZSTD_getFrameContentSize@@Base+0x9c>

000000000003aa6c <ZSTD_getDecompressedSize@@Base>:
   3aa6c:	stp	x29, x30, [sp, #-16]!
   3aa70:	mov	x29, sp
   3aa74:	bl	4630 <ZSTD_getFrameContentSize@plt>
   3aa78:	cmn	x0, #0x3
   3aa7c:	b.ls	3aa84 <ZSTD_getDecompressedSize@@Base+0x18>  // b.plast
   3aa80:	mov	x0, #0x0                   	// #0
   3aa84:	ldp	x29, x30, [sp], #16
   3aa88:	ret

000000000003aa8c <ZSTD_findFrameCompressedSize@@Base>:
   3aa8c:	stp	x29, x30, [sp, #-16]!
   3aa90:	mov	x29, sp
   3aa94:	bl	3a868 <ZSTD_getFrameHeader@@Base+0x8>
   3aa98:	ldp	x29, x30, [sp], #16
   3aa9c:	ret

000000000003aaa0 <ZSTD_findDecompressedSize@@Base>:
   3aaa0:	stp	x29, x30, [sp, #-48]!
   3aaa4:	mov	x29, sp
   3aaa8:	stp	x19, x20, [sp, #16]
   3aaac:	mov	x20, x0
   3aab0:	mov	x19, x1
   3aab4:	stp	x21, x22, [sp, #32]
   3aab8:	mov	w22, #0x2a50                	// #10832
   3aabc:	mov	x21, #0x0                   	// #0
   3aac0:	movk	w22, #0x184d, lsl #16
   3aac4:	cmp	x19, #0x4
   3aac8:	b.hi	3aae4 <ZSTD_findDecompressedSize@@Base+0x44>  // b.pmore
   3aacc:	cbz	x19, 3ab3c <ZSTD_findDecompressedSize@@Base+0x9c>
   3aad0:	mov	x0, #0xfffffffffffffffe    	// #-2
   3aad4:	ldp	x19, x20, [sp, #16]
   3aad8:	ldp	x21, x22, [sp, #32]
   3aadc:	ldp	x29, x30, [sp], #48
   3aae0:	ret
   3aae4:	ldr	w0, [x20]
   3aae8:	mov	x1, x19
   3aaec:	and	w0, w0, #0xfffffff0
   3aaf0:	cmp	w0, w22
   3aaf4:	mov	x0, x20
   3aaf8:	b.ne	3ab14 <ZSTD_findDecompressedSize@@Base+0x74>  // b.any
   3aafc:	bl	3a048 <ZSTD_getDictID_fromDDict@@Base+0x84>
   3ab00:	cmn	x0, #0x78
   3ab04:	b.hi	3aad0 <ZSTD_findDecompressedSize@@Base+0x30>  // b.pmore
   3ab08:	add	x20, x20, x0
   3ab0c:	sub	x19, x19, x0
   3ab10:	b	3aac4 <ZSTD_findDecompressedSize@@Base+0x24>
   3ab14:	bl	4630 <ZSTD_getFrameContentSize@plt>
   3ab18:	cmn	x0, #0x3
   3ab1c:	b.hi	3aad4 <ZSTD_findDecompressedSize@@Base+0x34>  // b.pmore
   3ab20:	adds	x1, x21, x0
   3ab24:	mov	x21, x1
   3ab28:	b.cs	3aad0 <ZSTD_findDecompressedSize@@Base+0x30>  // b.hs, b.nlast
   3ab2c:	mov	x1, x19
   3ab30:	mov	x0, x20
   3ab34:	bl	4a40 <ZSTD_findFrameCompressedSize@plt>
   3ab38:	b	3ab00 <ZSTD_findDecompressedSize@@Base+0x60>
   3ab3c:	mov	x0, x21
   3ab40:	b	3aad4 <ZSTD_findDecompressedSize@@Base+0x34>

000000000003ab44 <ZSTD_decompressBound@@Base>:
   3ab44:	stp	x29, x30, [sp, #-48]!
   3ab48:	mov	x29, sp
   3ab4c:	stp	x19, x20, [sp, #16]
   3ab50:	mov	x20, x0
   3ab54:	mov	x19, x1
   3ab58:	str	x21, [sp, #32]
   3ab5c:	mov	x21, #0x0                   	// #0
   3ab60:	cbz	x19, 3ab84 <ZSTD_decompressBound@@Base+0x40>
   3ab64:	mov	x1, x19
   3ab68:	mov	x0, x20
   3ab6c:	bl	3a868 <ZSTD_getFrameHeader@@Base+0x8>
   3ab70:	cmn	x0, #0x78
   3ab74:	b.hi	3ab80 <ZSTD_decompressBound@@Base+0x3c>  // b.pmore
   3ab78:	cmn	x1, #0x2
   3ab7c:	b.ne	3ab98 <ZSTD_decompressBound@@Base+0x54>  // b.any
   3ab80:	mov	x21, #0xfffffffffffffffe    	// #-2
   3ab84:	mov	x0, x21
   3ab88:	ldp	x19, x20, [sp, #16]
   3ab8c:	ldr	x21, [sp, #32]
   3ab90:	ldp	x29, x30, [sp], #48
   3ab94:	ret
   3ab98:	add	x20, x20, x0
   3ab9c:	sub	x19, x19, x0
   3aba0:	add	x21, x21, x1
   3aba4:	b	3ab60 <ZSTD_decompressBound@@Base+0x1c>
   3aba8:	ldr	x2, [x0, #28744]
   3abac:	cmp	x2, x1
   3abb0:	b.eq	3abd0 <ZSTD_decompressBound@@Base+0x8c>  // b.none
   3abb4:	ldr	x3, [x0, #28752]
   3abb8:	str	x2, [x0, #28768]
   3abbc:	str	x1, [x0, #28744]
   3abc0:	sub	x2, x2, x3
   3abc4:	str	x1, [x0, #28752]
   3abc8:	sub	x2, x1, x2
   3abcc:	str	x2, [x0, #28760]
   3abd0:	ret

000000000003abd4 <ZSTD_insertBlock@@Base>:
   3abd4:	mov	x6, x0
   3abd8:	mov	x5, x2
   3abdc:	stp	x29, x30, [sp, #-16]!
   3abe0:	mov	x29, sp
   3abe4:	bl	3aba8 <ZSTD_decompressBound@@Base+0x64>
   3abe8:	add	x4, x1, x5
   3abec:	ldp	x29, x30, [sp], #16
   3abf0:	mov	x0, x5
   3abf4:	str	x4, [x6, #28744]
   3abf8:	ret

000000000003abfc <ZSTD_nextSrcSizeToDecompress@@Base>:
   3abfc:	ldr	x0, [x0, #28776]
   3ac00:	ret

000000000003ac04 <ZSTD_nextInputType@@Base>:
   3ac04:	add	x0, x0, #0x4, lsl #12
   3ac08:	ldr	w1, [x0, #12452]
   3ac0c:	sub	w1, w1, #0x2
   3ac10:	cmp	w1, #0x5
   3ac14:	b.hi	3ac2c <ZSTD_nextInputType@@Base+0x28>  // b.pmore
   3ac18:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   3ac1c:	add	x0, x0, #0x8a0
   3ac20:	add	x0, x0, #0x58
   3ac24:	ldrb	w0, [x0, w1, uxtw]
   3ac28:	ret
   3ac2c:	mov	w0, #0x0                   	// #0
   3ac30:	b	3ac28 <ZSTD_nextInputType@@Base+0x24>

000000000003ac34 <ZSTD_decompressContinue@@Base>:
   3ac34:	stp	x29, x30, [sp, #-80]!
   3ac38:	mov	x6, x2
   3ac3c:	mov	x29, sp
   3ac40:	ldr	x2, [x0, #28776]
   3ac44:	stp	x19, x20, [sp, #16]
   3ac48:	stp	x21, x22, [sp, #32]
   3ac4c:	cmp	x2, x4
   3ac50:	stp	x23, x24, [sp, #48]
   3ac54:	b.ne	3af8c <ZSTD_decompressContinue@@Base+0x358>  // b.any
   3ac58:	mov	x20, x0
   3ac5c:	mov	x24, x1
   3ac60:	mov	x23, x3
   3ac64:	mov	x22, x4
   3ac68:	cbz	x6, 3ac70 <ZSTD_decompressContinue@@Base+0x3c>
   3ac6c:	bl	3aba8 <ZSTD_decompressBound@@Base+0x64>
   3ac70:	add	x21, x20, #0x4, lsl #12
   3ac74:	ldr	w1, [x21, #12452]
   3ac78:	cmp	w1, #0x7
   3ac7c:	b.hi	3af94 <ZSTD_decompressContinue@@Base+0x360>  // b.pmore
   3ac80:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   3ac84:	add	x0, x0, #0x880
   3ac88:	ldrh	w0, [x0, w1, uxtw #1]
   3ac8c:	adr	x1, 3ac98 <ZSTD_decompressContinue@@Base+0x64>
   3ac90:	add	x0, x1, w0, sxth #2
   3ac94:	br	x0
   3ac98:	ldr	w2, [x21, #12560]
   3ac9c:	cbnz	w2, 3acfc <ZSTD_decompressContinue@@Base+0xc8>
   3aca0:	ldr	w0, [x23]
   3aca4:	mov	w1, #0x2a50                	// #10832
   3aca8:	movk	w1, #0x184d, lsl #16
   3acac:	and	w0, w0, #0xfffffff0
   3acb0:	cmp	w0, w1
   3acb4:	b.ne	3acfc <ZSTD_decompressContinue@@Base+0xc8>  // b.any
   3acb8:	add	x0, x20, #0x27, lsl #12
   3acbc:	mov	x2, x22
   3acc0:	mov	x1, x23
   3acc4:	add	x0, x0, #0x1f8
   3acc8:	bl	4460 <memcpy@plt>
   3accc:	mov	x4, #0x8                   	// #8
   3acd0:	mov	w0, #0x6                   	// #6
   3acd4:	sub	x4, x4, x22
   3acd8:	str	x4, [x20, #28776]
   3acdc:	str	w0, [x21, #12452]
   3ace0:	mov	x19, #0x0                   	// #0
   3ace4:	mov	x0, x19
   3ace8:	ldp	x19, x20, [sp, #16]
   3acec:	ldp	x21, x22, [sp, #32]
   3acf0:	ldp	x23, x24, [sp, #48]
   3acf4:	ldp	x29, x30, [sp], #80
   3acf8:	ret
   3acfc:	mov	x1, x22
   3ad00:	mov	x0, x23
   3ad04:	bl	39fdc <ZSTD_getDictID_fromDDict@@Base+0x18>
   3ad08:	str	x0, [x20, #28936]
   3ad0c:	mov	x19, x0
   3ad10:	cmn	x0, #0x78
   3ad14:	b.hi	3ace4 <ZSTD_decompressContinue@@Base+0xb0>  // b.pmore
   3ad18:	add	x0, x20, #0x27, lsl #12
   3ad1c:	mov	x2, x22
   3ad20:	mov	x1, x23
   3ad24:	add	x0, x0, #0x1f8
   3ad28:	bl	4460 <memcpy@plt>
   3ad2c:	sub	x0, x19, x22
   3ad30:	str	x0, [x20, #28776]
   3ad34:	mov	w0, #0x1                   	// #1
   3ad38:	b	3acdc <ZSTD_decompressContinue@@Base+0xa8>
   3ad3c:	ldr	x0, [x20, #28936]
   3ad40:	add	x19, x20, #0x27, lsl #12
   3ad44:	add	x19, x19, #0x1f8
   3ad48:	mov	x2, x22
   3ad4c:	sub	x0, x0, x22
   3ad50:	mov	x1, x23
   3ad54:	add	x0, x19, x0
   3ad58:	bl	4460 <memcpy@plt>
   3ad5c:	ldr	x2, [x20, #28936]
   3ad60:	mov	x1, x19
   3ad64:	mov	x0, x20
   3ad68:	bl	3a7d8 <ZSTD_getFrameHeader_advanced@@Base+0x1e4>
   3ad6c:	mov	x19, x0
   3ad70:	cmn	x0, #0x78
   3ad74:	b.hi	3ace4 <ZSTD_decompressContinue@@Base+0xb0>  // b.pmore
   3ad78:	mov	x0, #0x3                   	// #3
   3ad7c:	str	x0, [x20, #28776]
   3ad80:	mov	w0, #0x2                   	// #2
   3ad84:	b	3acdc <ZSTD_decompressContinue@@Base+0xa8>
   3ad88:	add	x2, sp, #0x40
   3ad8c:	mov	x0, x23
   3ad90:	mov	x1, #0x3                   	// #3
   3ad94:	bl	3d810 <ZSTD_decompressStream_simpleArgs@@Base+0x1068>
   3ad98:	mov	x19, x0
   3ad9c:	cmn	x0, #0x78
   3ada0:	b.hi	3ace4 <ZSTD_decompressContinue@@Base+0xb0>  // b.pmore
   3ada4:	ldr	w0, [x21, #12416]
   3ada8:	cmp	x19, x0
   3adac:	b.hi	3ae24 <ZSTD_decompressContinue@@Base+0x1f0>  // b.pmore
   3adb0:	ldr	w0, [sp, #64]
   3adb4:	str	x19, [x20, #28776]
   3adb8:	str	w0, [x21, #12448]
   3adbc:	ldr	w0, [sp, #72]
   3adc0:	str	x0, [x20, #28992]
   3adc4:	ldr	w0, [sp, #68]
   3adc8:	cbz	x19, 3addc <ZSTD_decompressContinue@@Base+0x1a8>
   3adcc:	cmp	w0, #0x0
   3add0:	cset	w0, ne  // ne = any
   3add4:	add	w0, w0, #0x3
   3add8:	b	3acdc <ZSTD_decompressContinue@@Base+0xa8>
   3addc:	cbz	w0, 3adf8 <ZSTD_decompressContinue@@Base+0x1c4>
   3ade0:	ldr	w0, [x21, #12432]
   3ade4:	cbz	w0, 3af14 <ZSTD_decompressContinue@@Base+0x2e0>
   3ade8:	mov	x0, #0x4                   	// #4
   3adec:	str	x0, [x20, #28776]
   3adf0:	mov	w0, #0x5                   	// #5
   3adf4:	b	3ae04 <ZSTD_decompressContinue@@Base+0x1d0>
   3adf8:	mov	x0, #0x3                   	// #3
   3adfc:	str	x0, [x20, #28776]
   3ae00:	mov	w0, #0x2                   	// #2
   3ae04:	str	w0, [x21, #12452]
   3ae08:	b	3ace4 <ZSTD_decompressContinue@@Base+0xb0>
   3ae0c:	ldr	w0, [x21, #12448]
   3ae10:	cmp	w0, #0x1
   3ae14:	b.eq	3ae88 <ZSTD_decompressContinue@@Base+0x254>  // b.none
   3ae18:	cmp	w0, #0x2
   3ae1c:	b.eq	3ae2c <ZSTD_decompressContinue@@Base+0x1f8>  // b.none
   3ae20:	cbz	w0, 3ae58 <ZSTD_decompressContinue@@Base+0x224>
   3ae24:	mov	x19, #0xffffffffffffffec    	// #-20
   3ae28:	b	3ace4 <ZSTD_decompressContinue@@Base+0xb0>
   3ae2c:	mov	x4, x22
   3ae30:	mov	x3, x23
   3ae34:	mov	x2, x6
   3ae38:	mov	x1, x24
   3ae3c:	mov	x0, x20
   3ae40:	mov	w5, #0x1                   	// #1
   3ae44:	bl	3dff0 <ZSTD_decompressStream_simpleArgs@@Base+0x1848>
   3ae48:	mov	x19, x0
   3ae4c:	cmn	x19, #0x78
   3ae50:	b.ls	3ae94 <ZSTD_decompressContinue@@Base+0x260>  // b.plast
   3ae54:	b	3ace4 <ZSTD_decompressContinue@@Base+0xb0>
   3ae58:	cbnz	x24, 3ae68 <ZSTD_decompressContinue@@Base+0x234>
   3ae5c:	cbz	x22, 3af0c <ZSTD_decompressContinue@@Base+0x2d8>
   3ae60:	mov	x19, #0xffffffffffffffb6    	// #-74
   3ae64:	b	3ace4 <ZSTD_decompressContinue@@Base+0xb0>
   3ae68:	cmp	x22, x6
   3ae6c:	b.hi	3af9c <ZSTD_decompressContinue@@Base+0x368>  // b.pmore
   3ae70:	mov	x2, x22
   3ae74:	mov	x1, x23
   3ae78:	mov	x0, x24
   3ae7c:	mov	x19, x22
   3ae80:	bl	4460 <memcpy@plt>
   3ae84:	b	3ae4c <ZSTD_decompressContinue@@Base+0x218>
   3ae88:	ldr	x19, [x20, #28992]
   3ae8c:	cbnz	x24, 3aef0 <ZSTD_decompressContinue@@Base+0x2bc>
   3ae90:	cbnz	x19, 3ae60 <ZSTD_decompressContinue@@Base+0x22c>
   3ae94:	ldr	w0, [x21, #12416]
   3ae98:	cmp	x19, x0
   3ae9c:	b.hi	3ae24 <ZSTD_decompressContinue@@Base+0x1f0>  // b.pmore
   3aea0:	ldr	x0, [x20, #28824]
   3aea4:	add	x0, x0, x19
   3aea8:	str	x0, [x20, #28824]
   3aeac:	ldr	w0, [x21, #12432]
   3aeb0:	cbz	w0, 3aec8 <ZSTD_decompressContinue@@Base+0x294>
   3aeb4:	mov	x3, #0x70b0                	// #28848
   3aeb8:	mov	x2, x19
   3aebc:	mov	x1, x24
   3aec0:	add	x0, x20, x3
   3aec4:	bl	6728 <ZSTD_initDStream_usingDDict@plt+0x1ba8>
   3aec8:	ldr	w0, [x21, #12452]
   3aecc:	cmp	w0, #0x4
   3aed0:	b.ne	3af20 <ZSTD_decompressContinue@@Base+0x2ec>  // b.any
   3aed4:	ldr	x0, [x20, #28784]
   3aed8:	cmn	x0, #0x1
   3aedc:	b.eq	3ade0 <ZSTD_decompressContinue@@Base+0x1ac>  // b.none
   3aee0:	ldr	x1, [x20, #28824]
   3aee4:	cmp	x0, x1
   3aee8:	b.eq	3ade0 <ZSTD_decompressContinue@@Base+0x1ac>  // b.none
   3aeec:	b	3ae24 <ZSTD_decompressContinue@@Base+0x1f0>
   3aef0:	cmp	x6, x19
   3aef4:	b.cc	3af9c <ZSTD_decompressContinue@@Base+0x368>  // b.lo, b.ul, b.last
   3aef8:	ldrb	w1, [x23]
   3aefc:	mov	x2, x19
   3af00:	mov	x0, x24
   3af04:	bl	4700 <memset@plt>
   3af08:	b	3ae4c <ZSTD_decompressContinue@@Base+0x218>
   3af0c:	mov	x19, #0x0                   	// #0
   3af10:	b	3ae94 <ZSTD_decompressContinue@@Base+0x260>
   3af14:	str	xzr, [x20, #28776]
   3af18:	str	wzr, [x21, #12452]
   3af1c:	b	3ace4 <ZSTD_decompressContinue@@Base+0xb0>
   3af20:	mov	w0, #0x2                   	// #2
   3af24:	str	w0, [x21, #12452]
   3af28:	add	x24, x24, x19
   3af2c:	mov	x0, #0x3                   	// #3
   3af30:	str	x24, [x20, #28744]
   3af34:	str	x0, [x20, #28776]
   3af38:	b	3ace4 <ZSTD_decompressContinue@@Base+0xb0>
   3af3c:	mov	x0, #0x70b0                	// #28848
   3af40:	add	x0, x20, x0
   3af44:	bl	68f8 <ZSTD_initDStream_usingDDict@plt+0x1d78>
   3af48:	ldr	w1, [x23]
   3af4c:	cmp	w1, w0
   3af50:	b.ne	3afa4 <ZSTD_decompressContinue@@Base+0x370>  // b.any
   3af54:	str	xzr, [x20, #28776]
   3af58:	str	wzr, [x21, #12452]
   3af5c:	b	3ace0 <ZSTD_decompressContinue@@Base+0xac>
   3af60:	sub	x0, x20, x22
   3af64:	mov	x2, x22
   3af68:	add	x0, x0, #0x27, lsl #12
   3af6c:	mov	x1, x23
   3af70:	add	x0, x0, #0x200
   3af74:	bl	4460 <memcpy@plt>
   3af78:	add	x0, x20, #0x24, lsl #12
   3af7c:	ldr	w0, [x0, #12796]
   3af80:	str	x0, [x20, #28776]
   3af84:	mov	w0, #0x7                   	// #7
   3af88:	b	3acdc <ZSTD_decompressContinue@@Base+0xa8>
   3af8c:	mov	x19, #0xffffffffffffffb8    	// #-72
   3af90:	b	3ace4 <ZSTD_decompressContinue@@Base+0xb0>
   3af94:	mov	x19, #0xffffffffffffffff    	// #-1
   3af98:	b	3ace4 <ZSTD_decompressContinue@@Base+0xb0>
   3af9c:	mov	x19, #0xffffffffffffffba    	// #-70
   3afa0:	b	3ace4 <ZSTD_decompressContinue@@Base+0xb0>
   3afa4:	mov	x19, #0xffffffffffffffea    	// #-22
   3afa8:	b	3ace4 <ZSTD_decompressContinue@@Base+0xb0>
   3afac:	cmp	x2, #0x8
   3afb0:	b.hi	3afbc <ZSTD_decompressContinue@@Base+0x388>  // b.pmore
   3afb4:	mov	x0, #0xffffffffffffffe2    	// #-30
   3afb8:	ret
   3afbc:	stp	x29, x30, [sp, #-224]!
   3afc0:	mov	x3, x0
   3afc4:	mov	x4, #0x2818                	// #10264
   3afc8:	mov	x29, sp
   3afcc:	stp	x21, x22, [sp, #32]
   3afd0:	add	x21, x1, #0x8
   3afd4:	stp	x19, x20, [sp, #16]
   3afd8:	stp	x23, x24, [sp, #48]
   3afdc:	mov	x24, x1
   3afe0:	mov	x23, x2
   3afe4:	mov	x1, x21
   3afe8:	sub	x2, x2, #0x8
   3afec:	stp	x25, x26, [sp, #64]
   3aff0:	mov	x25, x0
   3aff4:	add	x0, x0, x4
   3aff8:	stp	x27, x28, [sp, #80]
   3affc:	bl	39068 <ZSTD_compress@@Base+0x2a81c>
   3b000:	cmn	x0, #0x78
   3b004:	b.hi	3b0b0 <ZSTD_decompressContinue@@Base+0x47c>  // b.pmore
   3b008:	add	x21, x21, x0
   3b00c:	add	x23, x24, x23
   3b010:	mov	w0, #0x1f                  	// #31
   3b014:	add	x27, sp, #0x6c
   3b018:	add	x26, sp, #0x68
   3b01c:	add	x28, sp, #0x70
   3b020:	sub	x4, x23, x21
   3b024:	mov	x3, x21
   3b028:	mov	x2, x27
   3b02c:	mov	x1, x26
   3b030:	str	w0, [sp, #104]
   3b034:	mov	x0, x28
   3b038:	bl	4cb4 <ZSTD_initDStream_usingDDict@plt+0x134>
   3b03c:	mov	x19, x0
   3b040:	cmn	x0, #0x78
   3b044:	b.hi	3b0b0 <ZSTD_decompressContinue@@Base+0x47c>  // b.pmore
   3b048:	ldr	w2, [sp, #104]
   3b04c:	cmp	w2, #0x1f
   3b050:	b.hi	3b0b0 <ZSTD_decompressContinue@@Base+0x47c>  // b.pmore
   3b054:	ldr	w5, [sp, #108]
   3b058:	cmp	w5, #0x8
   3b05c:	b.hi	3b0b0 <ZSTD_decompressContinue@@Base+0x47c>  // b.pmore
   3b060:	mov	x7, #0x1008                	// #4104
   3b064:	adrp	x22, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   3b068:	add	x20, x22, #0x8a0
   3b06c:	add	x0, x25, x7
   3b070:	add	x4, x20, #0x60
   3b074:	add	x3, x20, #0xe0
   3b078:	mov	x1, x28
   3b07c:	bl	3db54 <ZSTD_decompressStream_simpleArgs@@Base+0x13ac>
   3b080:	add	x21, x21, x19
   3b084:	mov	w0, #0x34                  	// #52
   3b088:	sub	x4, x23, x21
   3b08c:	mov	x3, x21
   3b090:	mov	x2, x27
   3b094:	mov	x1, x26
   3b098:	str	w0, [sp, #104]
   3b09c:	mov	x0, x28
   3b0a0:	bl	4cb4 <ZSTD_initDStream_usingDDict@plt+0x134>
   3b0a4:	mov	x19, x0
   3b0a8:	cmn	x0, #0x78
   3b0ac:	b.ls	3b0d0 <ZSTD_decompressContinue@@Base+0x49c>  // b.plast
   3b0b0:	mov	x0, #0xffffffffffffffe2    	// #-30
   3b0b4:	ldp	x19, x20, [sp, #16]
   3b0b8:	ldp	x21, x22, [sp, #32]
   3b0bc:	ldp	x23, x24, [sp, #48]
   3b0c0:	ldp	x25, x26, [sp, #64]
   3b0c4:	ldp	x27, x28, [sp, #80]
   3b0c8:	ldp	x29, x30, [sp], #224
   3b0cc:	ret
   3b0d0:	ldr	w2, [sp, #104]
   3b0d4:	cmp	w2, #0x34
   3b0d8:	b.hi	3b0b0 <ZSTD_decompressContinue@@Base+0x47c>  // b.pmore
   3b0dc:	ldr	w5, [sp, #108]
   3b0e0:	cmp	w5, #0x9
   3b0e4:	b.hi	3b0b0 <ZSTD_decompressContinue@@Base+0x47c>  // b.pmore
   3b0e8:	mov	x6, #0x1810                	// #6160
   3b0ec:	add	x4, x20, #0x160
   3b0f0:	add	x3, x20, #0x234
   3b0f4:	add	x0, x25, x6
   3b0f8:	mov	x1, x28
   3b0fc:	bl	3db54 <ZSTD_decompressStream_simpleArgs@@Base+0x13ac>
   3b100:	add	x19, x21, x19
   3b104:	mov	w0, #0x23                  	// #35
   3b108:	sub	x4, x23, x19
   3b10c:	mov	x3, x19
   3b110:	mov	x2, x27
   3b114:	mov	x1, x26
   3b118:	str	w0, [sp, #104]
   3b11c:	mov	x0, x28
   3b120:	bl	4cb4 <ZSTD_initDStream_usingDDict@plt+0x134>
   3b124:	mov	x20, x0
   3b128:	cmn	x0, #0x78
   3b12c:	b.hi	3b0b0 <ZSTD_decompressContinue@@Base+0x47c>  // b.pmore
   3b130:	ldr	w2, [sp, #104]
   3b134:	cmp	w2, #0x23
   3b138:	b.hi	3b0b0 <ZSTD_decompressContinue@@Base+0x47c>  // b.pmore
   3b13c:	ldr	w5, [sp, #108]
   3b140:	cmp	w5, #0x9
   3b144:	b.hi	3b0b0 <ZSTD_decompressContinue@@Base+0x47c>  // b.pmore
   3b148:	add	x3, x22, #0x8a0
   3b14c:	mov	x1, x28
   3b150:	add	x4, x3, #0x308
   3b154:	mov	x0, x25
   3b158:	add	x3, x3, #0x398
   3b15c:	bl	3db54 <ZSTD_decompressStream_simpleArgs@@Base+0x13ac>
   3b160:	add	x3, x19, x20
   3b164:	add	x4, x3, #0xc
   3b168:	cmp	x4, x23
   3b16c:	b.hi	3b0b0 <ZSTD_decompressContinue@@Base+0x47c>  // b.pmore
   3b170:	mov	x0, #0x681c                	// #26652
   3b174:	sub	x23, x23, x4
   3b178:	add	x0, x25, x0
   3b17c:	ldr	w1, [x3], #4
   3b180:	cbz	w1, 3b0b0 <ZSTD_decompressContinue@@Base+0x47c>
   3b184:	cmp	x23, w1, uxtw
   3b188:	b.cc	3b0b0 <ZSTD_decompressContinue@@Base+0x47c>  // b.lo, b.ul, b.last
   3b18c:	str	w1, [x0], #4
   3b190:	cmp	x4, x3
   3b194:	b.ne	3b17c <ZSTD_decompressContinue@@Base+0x548>  // b.any
   3b198:	sub	x0, x4, x24
   3b19c:	b	3b0b4 <ZSTD_decompressContinue@@Base+0x480>

000000000003b1a0 <ZSTD_decompressBegin@@Base>:
   3b1a0:	add	x1, x0, #0x4, lsl #12
   3b1a4:	mov	x5, #0x1830                	// #6192
   3b1a8:	mov	x6, #0x1028                	// #4136
   3b1ac:	mov	x7, #0x2838                	// #10296
   3b1b0:	ldr	w2, [x1, #12560]
   3b1b4:	str	xzr, [x0, #28744]
   3b1b8:	cmp	w2, #0x0
   3b1bc:	mov	x2, #0x5                   	// #5
   3b1c0:	csinc	x2, x2, xzr, eq  // eq = none
   3b1c4:	str	x2, [x0, #28776]
   3b1c8:	mov	w2, #0xc                   	// #12
   3b1cc:	str	xzr, [x0, #28752]
   3b1d0:	movk	w2, #0xc00, lsl #16
   3b1d4:	str	w2, [x0, #10296]
   3b1d8:	str	xzr, [x0, #28760]
   3b1dc:	mov	x2, #0x683c                	// #26684
   3b1e0:	str	xzr, [x0, #28768]
   3b1e4:	add	x3, x0, x2
   3b1e8:	str	xzr, [x0, #28824]
   3b1ec:	str	wzr, [x1, #12452]
   3b1f0:	str	xzr, [x0, #28840]
   3b1f4:	str	wzr, [x1, #12648]
   3b1f8:	adrp	x1, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   3b1fc:	add	x1, x1, #0x8a0
   3b200:	ldr	x4, [x1, #1064]
   3b204:	str	x4, [x0, x2]
   3b208:	ldr	w1, [x1, #1072]
   3b20c:	str	w1, [x3, #8]
   3b210:	add	x1, x0, #0x20
   3b214:	str	x1, [x0]
   3b218:	add	x1, x0, x5
   3b21c:	str	x1, [x0, #8]
   3b220:	add	x1, x0, x6
   3b224:	str	x1, [x0, #16]
   3b228:	add	x1, x0, x7
   3b22c:	str	x1, [x0, #24]
   3b230:	mov	x0, #0x0                   	// #0
   3b234:	ret

000000000003b238 <ZSTD_decompressBegin_usingDict@@Base>:
   3b238:	stp	x29, x30, [sp, #-48]!
   3b23c:	mov	x29, sp
   3b240:	stp	x19, x20, [sp, #16]
   3b244:	mov	x19, x0
   3b248:	mov	x20, x1
   3b24c:	str	x21, [sp, #32]
   3b250:	mov	x21, x2
   3b254:	bl	4820 <ZSTD_decompressBegin@plt>
   3b258:	cmn	x0, #0x78
   3b25c:	b.hi	3b29c <ZSTD_decompressBegin_usingDict@@Base+0x64>  // b.pmore
   3b260:	cmp	x20, #0x0
   3b264:	ccmp	x21, #0x0, #0x4, ne  // ne = any
   3b268:	b.eq	3b298 <ZSTD_decompressBegin_usingDict@@Base+0x60>  // b.none
   3b26c:	cmp	x21, #0x7
   3b270:	b.hi	3b2ac <ZSTD_decompressBegin_usingDict@@Base+0x74>  // b.pmore
   3b274:	ldr	x0, [x19, #28744]
   3b278:	str	x0, [x19, #28768]
   3b27c:	ldr	x1, [x19, #28752]
   3b280:	str	x20, [x19, #28752]
   3b284:	sub	x0, x0, x1
   3b288:	sub	x0, x20, x0
   3b28c:	str	x0, [x19, #28760]
   3b290:	add	x20, x20, x21
   3b294:	str	x20, [x19, #28744]
   3b298:	mov	x0, #0x0                   	// #0
   3b29c:	ldp	x19, x20, [sp, #16]
   3b2a0:	ldr	x21, [sp, #32]
   3b2a4:	ldp	x29, x30, [sp], #48
   3b2a8:	ret
   3b2ac:	ldr	w1, [x20]
   3b2b0:	mov	w0, #0xa437                	// #42039
   3b2b4:	movk	w0, #0xec30, lsl #16
   3b2b8:	cmp	w1, w0
   3b2bc:	b.ne	3b274 <ZSTD_decompressBegin_usingDict@@Base+0x3c>  // b.any
   3b2c0:	add	x0, x19, #0x4, lsl #12
   3b2c4:	ldr	w1, [x20, #4]
   3b2c8:	mov	x2, x21
   3b2cc:	str	w1, [x0, #12648]
   3b2d0:	mov	x1, x20
   3b2d4:	add	x0, x19, #0x20
   3b2d8:	bl	3afac <ZSTD_decompressContinue@@Base+0x378>
   3b2dc:	cmn	x0, #0x78
   3b2e0:	b.hi	3b310 <ZSTD_decompressBegin_usingDict@@Base+0xd8>  // b.pmore
   3b2e4:	mov	x1, #0x100000001           	// #4294967297
   3b2e8:	str	x1, [x19, #28840]
   3b2ec:	ldr	x1, [x19, #28744]
   3b2f0:	add	x0, x20, x0
   3b2f4:	ldr	x2, [x19, #28752]
   3b2f8:	str	x1, [x19, #28768]
   3b2fc:	str	x0, [x19, #28752]
   3b300:	sub	x1, x1, x2
   3b304:	sub	x1, x0, x1
   3b308:	str	x1, [x19, #28760]
   3b30c:	b	3b290 <ZSTD_decompressBegin_usingDict@@Base+0x58>
   3b310:	mov	x0, #0xffffffffffffffe2    	// #-30
   3b314:	b	3b29c <ZSTD_decompressBegin_usingDict@@Base+0x64>

000000000003b318 <ZSTD_decompressBegin_usingDDict@@Base>:
   3b318:	stp	x29, x30, [sp, #-48]!
   3b31c:	mov	x29, sp
   3b320:	stp	x19, x20, [sp, #16]
   3b324:	mov	x20, x0
   3b328:	mov	x19, x1
   3b32c:	str	x21, [sp, #32]
   3b330:	cbz	x1, 3b360 <ZSTD_decompressBegin_usingDDict@@Base+0x48>
   3b334:	mov	x0, x1
   3b338:	bl	39cc4 <ZSTD_compress@@Base+0x2b478>
   3b33c:	mov	x21, x0
   3b340:	mov	x0, x19
   3b344:	bl	39ccc <ZSTD_compress@@Base+0x2b480>
   3b348:	add	x21, x21, x0
   3b34c:	ldr	x0, [x20, #28768]
   3b350:	add	x1, x20, #0x4, lsl #12
   3b354:	cmp	x0, x21
   3b358:	cset	w0, ne  // ne = any
   3b35c:	str	w0, [x1, #12652]
   3b360:	mov	x0, x20
   3b364:	bl	4820 <ZSTD_decompressBegin@plt>
   3b368:	cmn	x0, #0x78
   3b36c:	b.hi	3b384 <ZSTD_decompressBegin_usingDDict@@Base+0x6c>  // b.pmore
   3b370:	cbz	x19, 3b380 <ZSTD_decompressBegin_usingDDict@@Base+0x68>
   3b374:	mov	x1, x19
   3b378:	mov	x0, x20
   3b37c:	bl	39cd4 <ZSTD_compress@@Base+0x2b488>
   3b380:	mov	x0, #0x0                   	// #0
   3b384:	ldp	x19, x20, [sp, #16]
   3b388:	ldr	x21, [sp, #32]
   3b38c:	ldp	x29, x30, [sp], #48
   3b390:	ret
   3b394:	stp	x29, x30, [sp, #-192]!
   3b398:	mov	x29, sp
   3b39c:	stp	x19, x20, [sp, #16]
   3b3a0:	mov	x19, x3
   3b3a4:	mov	x20, x4
   3b3a8:	stp	x21, x22, [sp, #32]
   3b3ac:	mov	x22, x0
   3b3b0:	stp	x23, x24, [sp, #48]
   3b3b4:	mov	x23, x2
   3b3b8:	stp	x25, x26, [sp, #64]
   3b3bc:	stp	x27, x28, [sp, #80]
   3b3c0:	mov	x27, x7
   3b3c4:	str	x1, [sp, #144]
   3b3c8:	cbz	x7, 3b868 <ZSTD_decompressBegin_usingDDict@@Base+0x550>
   3b3cc:	mov	x0, x7
   3b3d0:	bl	39cc4 <ZSTD_compress@@Base+0x2b478>
   3b3d4:	mov	x25, x0
   3b3d8:	mov	x0, x27
   3b3dc:	bl	39ccc <ZSTD_compress@@Base+0x2b480>
   3b3e0:	mov	x26, x0
   3b3e4:	add	x0, x22, #0x4, lsl #12
   3b3e8:	str	x0, [sp, #104]
   3b3ec:	add	x0, sp, #0xb0
   3b3f0:	str	wzr, [sp, #132]
   3b3f4:	str	x0, [sp, #160]
   3b3f8:	mov	x0, #0x70b0                	// #28848
   3b3fc:	add	x0, x22, x0
   3b400:	str	x0, [sp, #152]
   3b404:	ldr	x21, [sp, #144]
   3b408:	b	3b4d4 <ZSTD_decompressBegin_usingDDict@@Base+0x1bc>
   3b40c:	mov	x1, x20
   3b410:	mov	x0, x19
   3b414:	bl	3a228 <ZSTD_getDictID_fromDDict@@Base+0x264>
   3b418:	cbz	w0, 3b578 <ZSTD_decompressBegin_usingDDict@@Base+0x260>
   3b41c:	mov	x1, x20
   3b420:	mov	x0, x19
   3b424:	bl	3a260 <ZSTD_getDictID_fromDDict@@Base+0x29c>
   3b428:	mov	x24, x0
   3b42c:	cmn	x0, #0x78
   3b430:	b.hi	3b874 <ZSTD_decompressBegin_usingDDict@@Base+0x55c>  // b.pmore
   3b434:	ldr	x0, [x22, #29000]
   3b438:	cbz	x0, 3b460 <ZSTD_decompressBegin_usingDDict@@Base+0x148>
   3b43c:	mov	x28, #0xffffffffffffffc0    	// #-64
   3b440:	mov	x0, x28
   3b444:	ldp	x19, x20, [sp, #16]
   3b448:	ldp	x21, x22, [sp, #32]
   3b44c:	ldp	x23, x24, [sp, #48]
   3b450:	ldp	x25, x26, [sp, #64]
   3b454:	ldp	x27, x28, [sp, #80]
   3b458:	ldp	x29, x30, [sp], #192
   3b45c:	ret
   3b460:	mov	x1, x24
   3b464:	mov	x0, x19
   3b468:	bl	3a228 <ZSTD_getDictID_fromDDict@@Base+0x264>
   3b46c:	cmp	w0, #0x6
   3b470:	b.eq	3b500 <ZSTD_decompressBegin_usingDDict@@Base+0x1e8>  // b.none
   3b474:	cmp	w0, #0x7
   3b478:	b.eq	3b53c <ZSTD_decompressBegin_usingDDict@@Base+0x224>  // b.none
   3b47c:	cmp	w0, #0x5
   3b480:	b.ne	3b87c <ZSTD_decompressBegin_usingDDict@@Base+0x564>  // b.any
   3b484:	bl	4a2fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ddc>
   3b488:	str	x0, [sp, #112]
   3b48c:	cbz	x0, 3b43c <ZSTD_decompressBegin_usingDDict@@Base+0x124>
   3b490:	mov	x6, x26
   3b494:	mov	x5, x25
   3b498:	mov	x4, x24
   3b49c:	mov	x3, x19
   3b4a0:	mov	x2, x23
   3b4a4:	mov	x1, x21
   3b4a8:	bl	4a954 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3434>
   3b4ac:	mov	x28, x0
   3b4b0:	ldr	x7, [sp, #112]
   3b4b4:	mov	x0, x7
   3b4b8:	bl	4a328 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2e08>
   3b4bc:	cmn	x28, #0x78
   3b4c0:	b.hi	3b440 <ZSTD_decompressBegin_usingDDict@@Base+0x128>  // b.pmore
   3b4c4:	add	x21, x21, x28
   3b4c8:	sub	x23, x23, x28
   3b4cc:	add	x19, x19, x24
   3b4d0:	sub	x20, x20, x24
   3b4d4:	ldr	x0, [sp, #104]
   3b4d8:	ldr	w0, [x0, #12560]
   3b4dc:	cmp	w0, #0x0
   3b4e0:	mov	x0, #0x5                   	// #5
   3b4e4:	csinc	x0, x0, xzr, eq  // eq = none
   3b4e8:	cmp	x0, x20
   3b4ec:	b.ls	3b40c <ZSTD_decompressBegin_usingDDict@@Base+0xf4>  // b.plast
   3b4f0:	cbnz	x20, 3b6f8 <ZSTD_decompressBegin_usingDDict@@Base+0x3e0>
   3b4f4:	ldr	x0, [sp, #144]
   3b4f8:	sub	x28, x21, x0
   3b4fc:	b	3b440 <ZSTD_decompressBegin_usingDDict@@Base+0x128>
   3b500:	bl	4dbbc <ZDICT_addEntropyTablesFromBuffer@@Base+0x669c>
   3b504:	str	x0, [sp, #112]
   3b508:	cbz	x0, 3b43c <ZSTD_decompressBegin_usingDDict@@Base+0x124>
   3b50c:	mov	x6, x26
   3b510:	mov	x5, x25
   3b514:	mov	x4, x24
   3b518:	mov	x3, x19
   3b51c:	mov	x2, x23
   3b520:	mov	x1, x21
   3b524:	bl	4e2f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6dd8>
   3b528:	mov	x28, x0
   3b52c:	ldr	x7, [sp, #112]
   3b530:	mov	x0, x7
   3b534:	bl	4dbe8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x66c8>
   3b538:	b	3b4bc <ZSTD_decompressBegin_usingDDict@@Base+0x1a4>
   3b53c:	bl	51b78 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa658>
   3b540:	str	x0, [sp, #112]
   3b544:	cbz	x0, 3b43c <ZSTD_decompressBegin_usingDDict@@Base+0x124>
   3b548:	mov	x6, x26
   3b54c:	mov	x5, x25
   3b550:	mov	x4, x24
   3b554:	mov	x3, x19
   3b558:	mov	x2, x23
   3b55c:	mov	x1, x21
   3b560:	bl	5254c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb02c>
   3b564:	mov	x28, x0
   3b568:	ldr	x7, [sp, #112]
   3b56c:	mov	x0, x7
   3b570:	bl	51ba8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa688>
   3b574:	b	3b4bc <ZSTD_decompressBegin_usingDDict@@Base+0x1a4>
   3b578:	ldr	w0, [x19]
   3b57c:	mov	w1, #0x2a50                	// #10832
   3b580:	movk	w1, #0x184d, lsl #16
   3b584:	and	w0, w0, #0xfffffff0
   3b588:	cmp	w0, w1
   3b58c:	b.ne	3b5b4 <ZSTD_decompressBegin_usingDDict@@Base+0x29c>  // b.any
   3b590:	mov	x1, x20
   3b594:	mov	x0, x19
   3b598:	bl	3a048 <ZSTD_getDictID_fromDDict@@Base+0x84>
   3b59c:	mov	x28, x0
   3b5a0:	cmn	x0, #0x78
   3b5a4:	b.hi	3b440 <ZSTD_decompressBegin_usingDDict@@Base+0x128>  // b.pmore
   3b5a8:	add	x19, x19, x0
   3b5ac:	sub	x20, x20, x0
   3b5b0:	b	3b4d4 <ZSTD_decompressBegin_usingDDict@@Base+0x1bc>
   3b5b4:	cbz	x27, 3b6a0 <ZSTD_decompressBegin_usingDDict@@Base+0x388>
   3b5b8:	mov	x1, x27
   3b5bc:	mov	x0, x22
   3b5c0:	bl	4640 <ZSTD_decompressBegin_usingDDict@plt>
   3b5c4:	mov	x28, x0
   3b5c8:	cmn	x0, #0x78
   3b5cc:	b.hi	3b440 <ZSTD_decompressBegin_usingDDict@@Base+0x128>  // b.pmore
   3b5d0:	mov	x0, x22
   3b5d4:	mov	x1, x21
   3b5d8:	bl	3aba8 <ZSTD_decompressBound@@Base+0x64>
   3b5dc:	ldr	x0, [sp, #104]
   3b5e0:	ldr	w2, [x0, #12560]
   3b5e4:	cbz	w2, 3b884 <ZSTD_decompressBegin_usingDDict@@Base+0x56c>
   3b5e8:	cmp	x20, #0x4
   3b5ec:	b.ls	3b844 <ZSTD_decompressBegin_usingDDict@@Base+0x52c>  // b.plast
   3b5f0:	mov	x1, #0x1                   	// #1
   3b5f4:	mov	x0, x19
   3b5f8:	bl	39fdc <ZSTD_getDictID_fromDDict@@Base+0x18>
   3b5fc:	mov	x28, x0
   3b600:	cmn	x0, #0x78
   3b604:	b.hi	3b6e0 <ZSTD_decompressBegin_usingDDict@@Base+0x3c8>  // b.pmore
   3b608:	add	x0, x0, #0x3
   3b60c:	cmp	x0, x20
   3b610:	b.hi	3b844 <ZSTD_decompressBegin_usingDDict@@Base+0x52c>  // b.pmore
   3b614:	mov	x2, x28
   3b618:	mov	x1, x19
   3b61c:	mov	x0, x22
   3b620:	bl	3a7d8 <ZSTD_getFrameHeader_advanced@@Base+0x1e4>
   3b624:	cmn	x0, #0x78
   3b628:	b.hi	3b834 <ZSTD_decompressBegin_usingDDict@@Base+0x51c>  // b.pmore
   3b62c:	add	x3, x19, x28
   3b630:	sub	x1, x20, x28
   3b634:	mov	x24, x21
   3b638:	add	x0, x21, x23
   3b63c:	str	x0, [sp, #112]
   3b640:	ldr	x2, [sp, #160]
   3b644:	mov	x0, x3
   3b648:	str	x3, [sp, #120]
   3b64c:	str	x1, [sp, #136]
   3b650:	bl	3d810 <ZSTD_decompressStream_simpleArgs@@Base+0x1068>
   3b654:	mov	x4, x0
   3b658:	cmn	x0, #0x78
   3b65c:	b.hi	3b824 <ZSTD_decompressBegin_usingDDict@@Base+0x50c>  // b.pmore
   3b660:	ldr	x3, [sp, #120]
   3b664:	ldr	x1, [sp, #136]
   3b668:	add	x0, x3, #0x3
   3b66c:	str	x0, [sp, #120]
   3b670:	sub	x0, x1, #0x3
   3b674:	str	x0, [sp, #136]
   3b678:	cmp	x4, x0
   3b67c:	b.hi	3b844 <ZSTD_decompressBegin_usingDDict@@Base+0x52c>  // b.pmore
   3b680:	ldr	w0, [sp, #176]
   3b684:	cmp	w0, #0x1
   3b688:	b.eq	3b7e0 <ZSTD_decompressBegin_usingDDict@@Base+0x4c8>  // b.none
   3b68c:	cmp	w0, #0x2
   3b690:	b.eq	3b6b4 <ZSTD_decompressBegin_usingDDict@@Base+0x39c>  // b.none
   3b694:	cbz	w0, 3b700 <ZSTD_decompressBegin_usingDDict@@Base+0x3e8>
   3b698:	mov	x28, #0xffffffffffffffec    	// #-20
   3b69c:	b	3b6e0 <ZSTD_decompressBegin_usingDDict@@Base+0x3c8>
   3b6a0:	mov	x2, x26
   3b6a4:	mov	x1, x25
   3b6a8:	mov	x0, x22
   3b6ac:	bl	4470 <ZSTD_decompressBegin_usingDict@plt>
   3b6b0:	b	3b5c4 <ZSTD_decompressBegin_usingDDict@@Base+0x2ac>
   3b6b4:	ldp	x0, x3, [sp, #112]
   3b6b8:	mov	x1, x24
   3b6bc:	mov	w5, #0x1                   	// #1
   3b6c0:	str	x4, [sp, #168]
   3b6c4:	sub	x2, x0, x24
   3b6c8:	mov	x0, x22
   3b6cc:	bl	3dff0 <ZSTD_decompressStream_simpleArgs@@Base+0x1848>
   3b6d0:	mov	x28, x0
   3b6d4:	cmn	x0, #0x78
   3b6d8:	ldr	x4, [sp, #168]
   3b6dc:	b.ls	3b73c <ZSTD_decompressBegin_usingDDict@@Base+0x424>  // b.plast
   3b6e0:	mov	x0, x28
   3b6e4:	bl	4b20 <ZSTD_getErrorCode@plt>
   3b6e8:	cmp	w0, #0xa
   3b6ec:	b.ne	3b84c <ZSTD_decompressBegin_usingDDict@@Base+0x534>  // b.any
   3b6f0:	ldr	w0, [sp, #132]
   3b6f4:	cbz	w0, 3b84c <ZSTD_decompressBegin_usingDDict@@Base+0x534>
   3b6f8:	mov	x28, #0xffffffffffffffb8    	// #-72
   3b6fc:	b	3b440 <ZSTD_decompressBegin_usingDDict@@Base+0x128>
   3b700:	cbnz	x24, 3b710 <ZSTD_decompressBegin_usingDDict@@Base+0x3f8>
   3b704:	cbz	x4, 3b81c <ZSTD_decompressBegin_usingDDict@@Base+0x504>
   3b708:	mov	x28, #0xffffffffffffffb6    	// #-74
   3b70c:	b	3b6e0 <ZSTD_decompressBegin_usingDDict@@Base+0x3c8>
   3b710:	ldr	x0, [sp, #112]
   3b714:	sub	x0, x0, x24
   3b718:	cmp	x4, x0
   3b71c:	b.hi	3b82c <ZSTD_decompressBegin_usingDDict@@Base+0x514>  // b.pmore
   3b720:	ldr	x1, [sp, #120]
   3b724:	mov	x2, x4
   3b728:	mov	x0, x24
   3b72c:	str	x4, [sp, #168]
   3b730:	bl	4460 <memcpy@plt>
   3b734:	ldr	x4, [sp, #168]
   3b738:	mov	x28, x4
   3b73c:	ldr	x0, [sp, #104]
   3b740:	ldr	w0, [x0, #12432]
   3b744:	cbz	w0, 3b760 <ZSTD_decompressBegin_usingDDict@@Base+0x448>
   3b748:	ldr	x0, [sp, #152]
   3b74c:	mov	x2, x28
   3b750:	mov	x1, x24
   3b754:	str	x4, [sp, #168]
   3b758:	bl	6728 <ZSTD_initDStream_usingDDict@plt+0x1ba8>
   3b75c:	ldr	x4, [sp, #168]
   3b760:	add	x24, x24, x28
   3b764:	ldr	x0, [sp, #120]
   3b768:	add	x3, x0, x4
   3b76c:	ldr	x0, [sp, #136]
   3b770:	sub	x1, x0, x4
   3b774:	ldr	w0, [sp, #180]
   3b778:	cbz	w0, 3b640 <ZSTD_decompressBegin_usingDDict@@Base+0x328>
   3b77c:	ldr	x0, [x22, #28784]
   3b780:	cmn	x0, #0x1
   3b784:	b.eq	3b794 <ZSTD_decompressBegin_usingDDict@@Base+0x47c>  // b.none
   3b788:	sub	x2, x24, x21
   3b78c:	cmp	x0, x2
   3b790:	b.ne	3b698 <ZSTD_decompressBegin_usingDDict@@Base+0x380>  // b.any
   3b794:	ldr	x0, [sp, #104]
   3b798:	ldr	w0, [x0, #12432]
   3b79c:	cbz	w0, 3b7d0 <ZSTD_decompressBegin_usingDDict@@Base+0x4b8>
   3b7a0:	ldr	x0, [sp, #152]
   3b7a4:	stp	x3, x1, [sp, #112]
   3b7a8:	bl	68f8 <ZSTD_initDStream_usingDDict@plt+0x1d78>
   3b7ac:	ldr	x1, [sp, #120]
   3b7b0:	cmp	x1, #0x3
   3b7b4:	b.ls	3b83c <ZSTD_decompressBegin_usingDDict@@Base+0x524>  // b.plast
   3b7b8:	ldr	x3, [sp, #112]
   3b7bc:	ldr	w2, [x3]
   3b7c0:	cmp	w0, w2
   3b7c4:	b.ne	3b83c <ZSTD_decompressBegin_usingDDict@@Base+0x524>  // b.any
   3b7c8:	add	x3, x3, #0x4
   3b7cc:	sub	x1, x1, #0x4
   3b7d0:	sub	x28, x24, x21
   3b7d4:	mov	x20, x1
   3b7d8:	mov	x19, x3
   3b7dc:	b	3b6e0 <ZSTD_decompressBegin_usingDDict@@Base+0x3c8>
   3b7e0:	ldr	w28, [sp, #184]
   3b7e4:	cbnz	x24, 3b7f0 <ZSTD_decompressBegin_usingDDict@@Base+0x4d8>
   3b7e8:	cbz	x28, 3b73c <ZSTD_decompressBegin_usingDDict@@Base+0x424>
   3b7ec:	b	3b708 <ZSTD_decompressBegin_usingDDict@@Base+0x3f0>
   3b7f0:	ldr	x0, [sp, #112]
   3b7f4:	str	x4, [sp, #168]
   3b7f8:	sub	x0, x0, x24
   3b7fc:	cmp	x0, x28
   3b800:	b.cc	3b82c <ZSTD_decompressBegin_usingDDict@@Base+0x514>  // b.lo, b.ul, b.last
   3b804:	ldrb	w1, [x3, #3]
   3b808:	mov	x2, x28
   3b80c:	mov	x0, x24
   3b810:	bl	4700 <memset@plt>
   3b814:	ldr	x4, [sp, #168]
   3b818:	b	3b73c <ZSTD_decompressBegin_usingDDict@@Base+0x424>
   3b81c:	mov	x28, #0x0                   	// #0
   3b820:	b	3b73c <ZSTD_decompressBegin_usingDDict@@Base+0x424>
   3b824:	mov	x28, x0
   3b828:	b	3b6e0 <ZSTD_decompressBegin_usingDDict@@Base+0x3c8>
   3b82c:	mov	x28, #0xffffffffffffffba    	// #-70
   3b830:	b	3b6e0 <ZSTD_decompressBegin_usingDDict@@Base+0x3c8>
   3b834:	mov	x28, x0
   3b838:	b	3b6e0 <ZSTD_decompressBegin_usingDDict@@Base+0x3c8>
   3b83c:	mov	x28, #0xffffffffffffffea    	// #-22
   3b840:	b	3b6e0 <ZSTD_decompressBegin_usingDDict@@Base+0x3c8>
   3b844:	mov	x28, #0xffffffffffffffb8    	// #-72
   3b848:	b	3b6e0 <ZSTD_decompressBegin_usingDDict@@Base+0x3c8>
   3b84c:	cmn	x28, #0x78
   3b850:	b.hi	3b440 <ZSTD_decompressBegin_usingDDict@@Base+0x128>  // b.pmore
   3b854:	mov	w0, #0x1                   	// #1
   3b858:	add	x21, x21, x28
   3b85c:	sub	x23, x23, x28
   3b860:	str	w0, [sp, #132]
   3b864:	b	3b4d4 <ZSTD_decompressBegin_usingDDict@@Base+0x1bc>
   3b868:	mov	x25, x5
   3b86c:	mov	x26, x6
   3b870:	b	3b3e4 <ZSTD_decompressBegin_usingDDict@@Base+0xcc>
   3b874:	mov	x28, x0
   3b878:	b	3b440 <ZSTD_decompressBegin_usingDDict@@Base+0x128>
   3b87c:	mov	x28, #0xfffffffffffffff6    	// #-10
   3b880:	b	3b440 <ZSTD_decompressBegin_usingDDict@@Base+0x128>
   3b884:	cmp	x20, #0x8
   3b888:	b.ls	3b844 <ZSTD_decompressBegin_usingDDict@@Base+0x52c>  // b.plast
   3b88c:	mov	x1, #0x5                   	// #5
   3b890:	b	3b5f4 <ZSTD_decompressBegin_usingDDict@@Base+0x2dc>

000000000003b894 <ZSTD_decompress_usingDict@@Base>:
   3b894:	mov	x7, #0x0                   	// #0
   3b898:	b	3b394 <ZSTD_decompressBegin_usingDDict@@Base+0x7c>

000000000003b89c <ZSTD_getDictID_fromDict@@Base>:
   3b89c:	cmp	x1, #0x7
   3b8a0:	b.ls	3b8c0 <ZSTD_getDictID_fromDict@@Base+0x24>  // b.plast
   3b8a4:	ldr	w2, [x0]
   3b8a8:	mov	w1, #0xa437                	// #42039
   3b8ac:	movk	w1, #0xec30, lsl #16
   3b8b0:	cmp	w2, w1
   3b8b4:	b.ne	3b8c0 <ZSTD_getDictID_fromDict@@Base+0x24>  // b.any
   3b8b8:	ldr	w0, [x0, #4]
   3b8bc:	ret
   3b8c0:	mov	w0, #0x0                   	// #0
   3b8c4:	b	3b8bc <ZSTD_getDictID_fromDict@@Base+0x20>

000000000003b8c8 <ZSTD_getDictID_fromFrame@@Base>:
   3b8c8:	stp	x29, x30, [sp, #-64]!
   3b8cc:	mov	x2, x1
   3b8d0:	mov	x1, x0
   3b8d4:	mov	x29, sp
   3b8d8:	add	x0, sp, #0x18
   3b8dc:	stp	xzr, xzr, [sp, #24]
   3b8e0:	stp	xzr, xzr, [sp, #40]
   3b8e4:	str	wzr, [sp, #56]
   3b8e8:	bl	48b0 <ZSTD_getFrameHeader@plt>
   3b8ec:	cmn	x0, #0x78
   3b8f0:	b.hi	3b900 <ZSTD_getDictID_fromFrame@@Base+0x38>  // b.pmore
   3b8f4:	ldr	w0, [sp, #52]
   3b8f8:	ldp	x29, x30, [sp], #64
   3b8fc:	ret
   3b900:	mov	w0, #0x0                   	// #0
   3b904:	b	3b8f8 <ZSTD_getDictID_fromFrame@@Base+0x30>

000000000003b908 <ZSTD_decompress_usingDDict@@Base>:
   3b908:	mov	x7, x5
   3b90c:	mov	x6, #0x0                   	// #0
   3b910:	mov	x5, #0x0                   	// #0
   3b914:	b	3b394 <ZSTD_decompressBegin_usingDDict@@Base+0x7c>

000000000003b918 <ZSTD_decompressDCtx@@Base>:
   3b918:	stp	x29, x30, [sp, #-64]!
   3b91c:	mov	x29, sp
   3b920:	stp	x19, x20, [sp, #16]
   3b924:	mov	x19, x0
   3b928:	mov	x20, x1
   3b92c:	stp	x21, x22, [sp, #32]
   3b930:	mov	x21, x2
   3b934:	mov	x22, x3
   3b938:	str	x23, [sp, #48]
   3b93c:	mov	x23, x4
   3b940:	bl	3a0b8 <ZSTD_getDictID_fromDDict@@Base+0xf4>
   3b944:	mov	x5, x0
   3b948:	mov	x4, x23
   3b94c:	mov	x3, x22
   3b950:	mov	x2, x21
   3b954:	mov	x1, x20
   3b958:	mov	x0, x19
   3b95c:	ldp	x19, x20, [sp, #16]
   3b960:	ldp	x21, x22, [sp, #32]
   3b964:	ldr	x23, [sp, #48]
   3b968:	ldp	x29, x30, [sp], #64
   3b96c:	b	4790 <ZSTD_decompress_usingDDict@plt>

000000000003b970 <ZSTD_decompress@@Base>:
   3b970:	stp	x29, x30, [sp, #-64]!
   3b974:	mov	x29, sp
   3b978:	stp	x19, x20, [sp, #16]
   3b97c:	mov	x19, x0
   3b980:	stp	x21, x22, [sp, #32]
   3b984:	mov	x21, x1
   3b988:	mov	x22, x2
   3b98c:	str	x23, [sp, #48]
   3b990:	mov	x23, x3
   3b994:	bl	4880 <ZSTD_createDCtx@plt>
   3b998:	cbz	x0, 3b9d8 <ZSTD_decompress@@Base+0x68>
   3b99c:	mov	x1, x19
   3b9a0:	mov	x4, x23
   3b9a4:	mov	x3, x22
   3b9a8:	mov	x2, x21
   3b9ac:	mov	x20, x0
   3b9b0:	bl	4510 <ZSTD_decompressDCtx@plt>
   3b9b4:	mov	x19, x0
   3b9b8:	mov	x0, x20
   3b9bc:	bl	4650 <ZSTD_freeDCtx@plt>
   3b9c0:	mov	x0, x19
   3b9c4:	ldp	x19, x20, [sp, #16]
   3b9c8:	ldp	x21, x22, [sp, #32]
   3b9cc:	ldr	x23, [sp, #48]
   3b9d0:	ldp	x29, x30, [sp], #64
   3b9d4:	ret
   3b9d8:	mov	x19, #0xffffffffffffffc0    	// #-64
   3b9dc:	b	3b9c0 <ZSTD_decompress@@Base+0x50>

000000000003b9e0 <ZSTD_initStaticDStream@@Base>:
   3b9e0:	b	4b00 <ZSTD_initStaticDCtx@plt>

000000000003b9e4 <ZSTD_createDStream_advanced@@Base>:
   3b9e4:	stp	x29, x30, [sp, #-48]!
   3b9e8:	mov	x29, sp
   3b9ec:	ldp	x2, x3, [x0]
   3b9f0:	stp	x2, x3, [sp, #16]
   3b9f4:	ldr	x0, [x0, #16]
   3b9f8:	str	x0, [sp, #32]
   3b9fc:	add	x0, sp, #0x10
   3ba00:	bl	4b30 <ZSTD_createDCtx_advanced@plt>
   3ba04:	ldp	x29, x30, [sp], #48
   3ba08:	ret

000000000003ba0c <ZSTD_createDStream@@Base>:
   3ba0c:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   3ba10:	add	x0, x0, #0x8a0
   3ba14:	stp	x29, x30, [sp, #-48]!
   3ba18:	mov	x29, sp
   3ba1c:	ldp	x2, x3, [x0, #64]
   3ba20:	stp	x2, x3, [sp, #16]
   3ba24:	ldr	x0, [x0, #80]
   3ba28:	str	x0, [sp, #32]
   3ba2c:	add	x0, sp, #0x10
   3ba30:	bl	4440 <ZSTD_createDStream_advanced@plt>
   3ba34:	ldp	x29, x30, [sp], #48
   3ba38:	ret

000000000003ba3c <ZSTD_freeDStream@@Base>:
   3ba3c:	b	4650 <ZSTD_freeDCtx@plt>

000000000003ba40 <ZSTD_DStreamInSize@@Base>:
   3ba40:	mov	x0, #0x3                   	// #3
   3ba44:	movk	x0, #0x2, lsl #16
   3ba48:	ret

000000000003ba4c <ZSTD_DStreamOutSize@@Base>:
   3ba4c:	mov	x0, #0x20000               	// #131072
   3ba50:	ret

000000000003ba54 <ZSTD_DCtx_loadDictionary_advanced@@Base>:
   3ba54:	stp	x29, x30, [sp, #-96]!
   3ba58:	mov	x29, sp
   3ba5c:	stp	x23, x24, [sp, #48]
   3ba60:	add	x24, x0, #0x4, lsl #12
   3ba64:	stp	x19, x20, [sp, #16]
   3ba68:	mov	x20, x1
   3ba6c:	ldr	w1, [x24, #12660]
   3ba70:	stp	x21, x22, [sp, #32]
   3ba74:	cbnz	w1, 3bae0 <ZSTD_DCtx_loadDictionary_advanced@@Base+0x8c>
   3ba78:	mov	x21, x2
   3ba7c:	mov	x19, x0
   3ba80:	mov	w22, w3
   3ba84:	mov	w23, w4
   3ba88:	bl	3a084 <ZSTD_getDictID_fromDDict@@Base+0xc0>
   3ba8c:	cmp	x20, #0x0
   3ba90:	ccmp	x21, #0x0, #0x4, ne  // ne = any
   3ba94:	b.eq	3bad8 <ZSTD_DCtx_loadDictionary_advanced@@Base+0x84>  // b.none
   3ba98:	add	x2, x19, #0x7, lsl #12
   3ba9c:	add	x4, sp, #0x40
   3baa0:	mov	w3, w23
   3baa4:	ldp	x0, x1, [x2, #288]
   3baa8:	stp	x0, x1, [sp, #64]
   3baac:	mov	w2, w22
   3bab0:	ldr	x0, [x19, #28976]
   3bab4:	mov	x1, x21
   3bab8:	str	x0, [sp, #80]
   3babc:	mov	x0, x20
   3bac0:	bl	47c0 <ZSTD_createDDict_advanced@plt>
   3bac4:	str	x0, [x19, #29016]
   3bac8:	cbz	x0, 3baf8 <ZSTD_DCtx_loadDictionary_advanced@@Base+0xa4>
   3bacc:	str	x0, [x19, #29024]
   3bad0:	mov	w0, #0xffffffff            	// #-1
   3bad4:	str	w0, [x24, #12656]
   3bad8:	mov	x0, #0x0                   	// #0
   3badc:	b	3bae4 <ZSTD_DCtx_loadDictionary_advanced@@Base+0x90>
   3bae0:	mov	x0, #0xffffffffffffffc4    	// #-60
   3bae4:	ldp	x19, x20, [sp, #16]
   3bae8:	ldp	x21, x22, [sp, #32]
   3baec:	ldp	x23, x24, [sp, #48]
   3baf0:	ldp	x29, x30, [sp], #96
   3baf4:	ret
   3baf8:	mov	x0, #0xffffffffffffffc0    	// #-64
   3bafc:	b	3bae4 <ZSTD_DCtx_loadDictionary_advanced@@Base+0x90>

000000000003bb00 <ZSTD_DCtx_loadDictionary_byReference@@Base>:
   3bb00:	mov	w4, #0x0                   	// #0
   3bb04:	mov	w3, #0x1                   	// #1
   3bb08:	b	47d0 <ZSTD_DCtx_loadDictionary_advanced@plt>

000000000003bb0c <ZSTD_DCtx_loadDictionary@@Base>:
   3bb0c:	mov	w4, #0x0                   	// #0
   3bb10:	mov	w3, #0x0                   	// #0
   3bb14:	b	47d0 <ZSTD_DCtx_loadDictionary_advanced@plt>

000000000003bb18 <ZSTD_DCtx_refPrefix_advanced@@Base>:
   3bb18:	stp	x29, x30, [sp, #-32]!
   3bb1c:	mov	w4, w3
   3bb20:	mov	w3, #0x1                   	// #1
   3bb24:	mov	x29, sp
   3bb28:	str	x19, [sp, #16]
   3bb2c:	mov	x19, x0
   3bb30:	bl	47d0 <ZSTD_DCtx_loadDictionary_advanced@plt>
   3bb34:	cmn	x0, #0x78
   3bb38:	b.hi	3bb4c <ZSTD_DCtx_refPrefix_advanced@@Base+0x34>  // b.pmore
   3bb3c:	add	x19, x19, #0x4, lsl #12
   3bb40:	mov	w0, #0x1                   	// #1
   3bb44:	str	w0, [x19, #12656]
   3bb48:	mov	x0, #0x0                   	// #0
   3bb4c:	ldr	x19, [sp, #16]
   3bb50:	ldp	x29, x30, [sp], #32
   3bb54:	ret

000000000003bb58 <ZSTD_DCtx_refPrefix@@Base>:
   3bb58:	mov	w3, #0x1                   	// #1
   3bb5c:	b	46d0 <ZSTD_DCtx_refPrefix_advanced@plt>

000000000003bb60 <ZSTD_DCtx_refDDict@@Base>:
   3bb60:	stp	x29, x30, [sp, #-48]!
   3bb64:	mov	x29, sp
   3bb68:	str	x21, [sp, #32]
   3bb6c:	add	x21, x0, #0x4, lsl #12
   3bb70:	stp	x19, x20, [sp, #16]
   3bb74:	mov	x20, x1
   3bb78:	ldr	w1, [x21, #12660]
   3bb7c:	cbnz	w1, 3bba0 <ZSTD_DCtx_refDDict@@Base+0x40>
   3bb80:	mov	x19, x0
   3bb84:	bl	3a084 <ZSTD_getDictID_fromDDict@@Base+0xc0>
   3bb88:	cbz	x20, 3bb98 <ZSTD_DCtx_refDDict@@Base+0x38>
   3bb8c:	str	x20, [x19, #29024]
   3bb90:	mov	w0, #0xffffffff            	// #-1
   3bb94:	str	w0, [x21, #12656]
   3bb98:	mov	x0, #0x0                   	// #0
   3bb9c:	b	3bba4 <ZSTD_DCtx_refDDict@@Base+0x44>
   3bba0:	mov	x0, #0xffffffffffffffc4    	// #-60
   3bba4:	ldp	x19, x20, [sp, #16]
   3bba8:	ldr	x21, [sp, #32]
   3bbac:	ldp	x29, x30, [sp], #48
   3bbb0:	ret

000000000003bbb4 <ZSTD_dParam_getBounds@@Base>:
   3bbb4:	cmp	w0, #0x64
   3bbb8:	b.eq	3bbd4 <ZSTD_dParam_getBounds@@Base+0x20>  // b.none
   3bbbc:	cmp	w0, #0x3e8
   3bbc0:	mov	x1, #0x100000000           	// #4294967296
   3bbc4:	mov	x0, #0xffffffffffffffd8    	// #-40
   3bbc8:	csel	x1, x1, xzr, eq  // eq = none
   3bbcc:	csel	x0, xzr, x0, eq  // eq = none
   3bbd0:	ret
   3bbd4:	mov	x1, #0xa                   	// #10
   3bbd8:	mov	x0, #0x0                   	// #0
   3bbdc:	movk	x1, #0x1f, lsl #32
   3bbe0:	b	3bbd0 <ZSTD_dParam_getBounds@@Base+0x1c>

000000000003bbe4 <ZSTD_DCtx_setMaxWindowSize@@Base>:
   3bbe4:	stp	x29, x30, [sp, #-32]!
   3bbe8:	mov	x29, sp
   3bbec:	stp	x19, x20, [sp, #16]
   3bbf0:	mov	x20, x0
   3bbf4:	mov	x19, x1
   3bbf8:	mov	w0, #0x64                  	// #100
   3bbfc:	bl	4660 <ZSTD_dParam_getBounds@plt>
   3bc00:	add	x3, x20, #0x4, lsl #12
   3bc04:	mov	x0, #0x1                   	// #1
   3bc08:	lsl	x2, x0, x1
   3bc0c:	ldr	w3, [x3, #12660]
   3bc10:	cbnz	w3, 3bc40 <ZSTD_DCtx_setMaxWindowSize@@Base+0x5c>
   3bc14:	cmp	x2, x19
   3bc18:	b.hi	3bc48 <ZSTD_DCtx_setMaxWindowSize@@Base+0x64>  // b.pmore
   3bc1c:	asr	x2, x1, #32
   3bc20:	lsl	x1, x0, x2
   3bc24:	cmp	x1, x19
   3bc28:	b.cc	3bc48 <ZSTD_DCtx_setMaxWindowSize@@Base+0x64>  // b.lo, b.ul, b.last
   3bc2c:	mov	x0, #0x0                   	// #0
   3bc30:	str	x19, [x20, #29072]
   3bc34:	ldp	x19, x20, [sp, #16]
   3bc38:	ldp	x29, x30, [sp], #32
   3bc3c:	ret
   3bc40:	mov	x0, #0xffffffffffffffc4    	// #-60
   3bc44:	b	3bc34 <ZSTD_DCtx_setMaxWindowSize@@Base+0x50>
   3bc48:	mov	x0, #0xffffffffffffffd6    	// #-42
   3bc4c:	b	3bc34 <ZSTD_DCtx_setMaxWindowSize@@Base+0x50>
   3bc50:	stp	x29, x30, [sp, #-32]!
   3bc54:	mov	x29, sp
   3bc58:	str	x19, [sp, #16]
   3bc5c:	mov	w19, w1
   3bc60:	bl	4660 <ZSTD_dParam_getBounds@plt>
   3bc64:	cmn	x0, #0x78
   3bc68:	b.hi	3bc8c <ZSTD_DCtx_setMaxWindowSize@@Base+0xa8>  // b.pmore
   3bc6c:	cmp	w19, w1
   3bc70:	b.lt	3bc8c <ZSTD_DCtx_setMaxWindowSize@@Base+0xa8>  // b.tstop
   3bc74:	asr	x0, x1, #32
   3bc78:	cmp	w19, w0
   3bc7c:	cset	w0, le
   3bc80:	ldr	x19, [sp, #16]
   3bc84:	ldp	x29, x30, [sp], #32
   3bc88:	ret
   3bc8c:	mov	w0, #0x0                   	// #0
   3bc90:	b	3bc80 <ZSTD_DCtx_setMaxWindowSize@@Base+0x9c>

000000000003bc94 <ZSTD_DCtx_setParameter@@Base>:
   3bc94:	stp	x29, x30, [sp, #-48]!
   3bc98:	mov	x29, sp
   3bc9c:	stp	x19, x20, [sp, #16]
   3bca0:	mov	x20, x0
   3bca4:	mov	w0, w1
   3bca8:	str	x21, [sp, #32]
   3bcac:	add	x21, x20, #0x4, lsl #12
   3bcb0:	ldr	w1, [x21, #12660]
   3bcb4:	cbnz	w1, 3bd28 <ZSTD_DCtx_setParameter@@Base+0x94>
   3bcb8:	mov	w19, w2
   3bcbc:	cmp	w0, #0x64
   3bcc0:	b.eq	3bce0 <ZSTD_DCtx_setParameter@@Base+0x4c>  // b.none
   3bcc4:	cmp	w0, #0x3e8
   3bcc8:	b.eq	3bd14 <ZSTD_DCtx_setParameter@@Base+0x80>  // b.none
   3bccc:	mov	x0, #0xffffffffffffffd8    	// #-40
   3bcd0:	ldp	x19, x20, [sp, #16]
   3bcd4:	ldr	x21, [sp, #32]
   3bcd8:	ldp	x29, x30, [sp], #48
   3bcdc:	ret
   3bce0:	cmp	w2, #0x0
   3bce4:	mov	w1, #0x1b                  	// #27
   3bce8:	csel	w19, w2, w1, ne  // ne = any
   3bcec:	mov	w1, w19
   3bcf0:	bl	3bc50 <ZSTD_DCtx_setMaxWindowSize@@Base+0x6c>
   3bcf4:	cbnz	w0, 3bd00 <ZSTD_DCtx_setParameter@@Base+0x6c>
   3bcf8:	mov	x0, #0xffffffffffffffd6    	// #-42
   3bcfc:	b	3bcd0 <ZSTD_DCtx_setParameter@@Base+0x3c>
   3bd00:	mov	x2, #0x1                   	// #1
   3bd04:	lsl	x2, x2, x19
   3bd08:	str	x2, [x20, #29072]
   3bd0c:	mov	x0, #0x0                   	// #0
   3bd10:	b	3bcd0 <ZSTD_DCtx_setParameter@@Base+0x3c>
   3bd14:	mov	w1, w2
   3bd18:	bl	3bc50 <ZSTD_DCtx_setMaxWindowSize@@Base+0x6c>
   3bd1c:	cbz	w0, 3bcf8 <ZSTD_DCtx_setParameter@@Base+0x64>
   3bd20:	str	w19, [x21, #12560]
   3bd24:	b	3bd0c <ZSTD_DCtx_setParameter@@Base+0x78>
   3bd28:	mov	x0, #0xffffffffffffffc4    	// #-60
   3bd2c:	b	3bcd0 <ZSTD_DCtx_setParameter@@Base+0x3c>

000000000003bd30 <ZSTD_DCtx_setFormat@@Base>:
   3bd30:	mov	w2, w1
   3bd34:	mov	w1, #0x3e8                 	// #1000
   3bd38:	b	4530 <ZSTD_DCtx_setParameter@plt>

000000000003bd3c <ZSTD_DCtx_reset@@Base>:
   3bd3c:	stp	x29, x30, [sp, #-32]!
   3bd40:	mov	x29, sp
   3bd44:	stp	x19, x20, [sp, #16]
   3bd48:	mov	x19, x0
   3bd4c:	and	w0, w1, #0xfffffffd
   3bd50:	cmp	w0, #0x1
   3bd54:	b.ne	3bd64 <ZSTD_DCtx_reset@@Base+0x28>  // b.any
   3bd58:	add	x0, x19, #0x4, lsl #12
   3bd5c:	str	wzr, [x0, #12660]
   3bd60:	str	wzr, [x0, #12756]
   3bd64:	sub	w1, w1, #0x2
   3bd68:	cmp	w1, #0x1
   3bd6c:	b.hi	3bd94 <ZSTD_DCtx_reset@@Base+0x58>  // b.pmore
   3bd70:	add	x20, x19, #0x4, lsl #12
   3bd74:	ldr	w0, [x20, #12660]
   3bd78:	cbnz	w0, 3bda4 <ZSTD_DCtx_reset@@Base+0x68>
   3bd7c:	mov	x0, x19
   3bd80:	bl	3a084 <ZSTD_getDictID_fromDDict@@Base+0xc0>
   3bd84:	mov	x0, #0x1                   	// #1
   3bd88:	str	wzr, [x20, #12560]
   3bd8c:	movk	x0, #0x800, lsl #16
   3bd90:	str	x0, [x19, #29072]
   3bd94:	mov	x0, #0x0                   	// #0
   3bd98:	ldp	x19, x20, [sp, #16]
   3bd9c:	ldp	x29, x30, [sp], #32
   3bda0:	ret
   3bda4:	mov	x0, #0xffffffffffffffc4    	// #-60
   3bda8:	b	3bd98 <ZSTD_DCtx_reset@@Base+0x5c>

000000000003bdac <ZSTD_initDStream_usingDict@@Base>:
   3bdac:	stp	x29, x30, [sp, #-48]!
   3bdb0:	mov	x29, sp
   3bdb4:	stp	x19, x20, [sp, #16]
   3bdb8:	mov	x19, x0
   3bdbc:	mov	x20, x1
   3bdc0:	mov	w1, #0x1                   	// #1
   3bdc4:	str	x21, [sp, #32]
   3bdc8:	mov	x21, x2
   3bdcc:	bl	48f0 <ZSTD_DCtx_reset@plt>
   3bdd0:	cmn	x0, #0x78
   3bdd4:	b.hi	3be04 <ZSTD_initDStream_usingDict@@Base+0x58>  // b.pmore
   3bdd8:	mov	x2, x21
   3bddc:	mov	x1, x20
   3bde0:	mov	x0, x19
   3bde4:	bl	4690 <ZSTD_DCtx_loadDictionary@plt>
   3bde8:	cmn	x0, #0x78
   3bdec:	b.hi	3be04 <ZSTD_initDStream_usingDict@@Base+0x58>  // b.pmore
   3bdf0:	add	x19, x19, #0x4, lsl #12
   3bdf4:	ldr	w0, [x19, #12560]
   3bdf8:	cmp	w0, #0x0
   3bdfc:	mov	x0, #0x5                   	// #5
   3be00:	csinc	x0, x0, xzr, eq  // eq = none
   3be04:	ldp	x19, x20, [sp, #16]
   3be08:	ldr	x21, [sp, #32]
   3be0c:	ldp	x29, x30, [sp], #48
   3be10:	ret

000000000003be14 <ZSTD_initDStream_usingDDict@@Base>:
   3be14:	stp	x29, x30, [sp, #-32]!
   3be18:	mov	x29, sp
   3be1c:	stp	x19, x20, [sp, #16]
   3be20:	mov	x19, x0
   3be24:	mov	x20, x1
   3be28:	mov	w1, #0x1                   	// #1
   3be2c:	bl	48f0 <ZSTD_DCtx_reset@plt>
   3be30:	cmn	x0, #0x78
   3be34:	b.hi	3be60 <ZSTD_initDStream_usingDDict@@Base+0x4c>  // b.pmore
   3be38:	mov	x1, x20
   3be3c:	mov	x0, x19
   3be40:	bl	4ac0 <ZSTD_DCtx_refDDict@plt>
   3be44:	cmn	x0, #0x78
   3be48:	b.hi	3be60 <ZSTD_initDStream_usingDDict@@Base+0x4c>  // b.pmore
   3be4c:	add	x19, x19, #0x4, lsl #12
   3be50:	ldr	w0, [x19, #12560]
   3be54:	cmp	w0, #0x0
   3be58:	mov	x0, #0x5                   	// #5
   3be5c:	csinc	x0, x0, xzr, eq  // eq = none
   3be60:	ldp	x19, x20, [sp, #16]
   3be64:	ldp	x29, x30, [sp], #32
   3be68:	ret

000000000003be6c <ZSTD_initDStream@@Base>:
   3be6c:	mov	x1, #0x0                   	// #0
   3be70:	b	4b80 <ZSTD_initDStream_usingDDict@plt>

000000000003be74 <ZSTD_resetDStream@@Base>:
   3be74:	stp	x29, x30, [sp, #-32]!
   3be78:	mov	w1, #0x1                   	// #1
   3be7c:	mov	x29, sp
   3be80:	str	x19, [sp, #16]
   3be84:	mov	x19, x0
   3be88:	bl	48f0 <ZSTD_DCtx_reset@plt>
   3be8c:	cmn	x0, #0x78
   3be90:	b.hi	3bea8 <ZSTD_resetDStream@@Base+0x34>  // b.pmore
   3be94:	add	x19, x19, #0x4, lsl #12
   3be98:	ldr	w0, [x19, #12560]
   3be9c:	cmp	w0, #0x0
   3bea0:	mov	x0, #0x5                   	// #5
   3bea4:	csinc	x0, x0, xzr, eq  // eq = none
   3bea8:	ldr	x19, [sp, #16]
   3beac:	ldp	x29, x30, [sp], #32
   3beb0:	ret

000000000003beb4 <ZSTD_sizeof_DStream@@Base>:
   3beb4:	b	4830 <ZSTD_sizeof_DCtx@plt>

000000000003beb8 <ZSTD_decodingBufferSize_min@@Base>:
   3beb8:	mov	x2, #0x1ffff               	// #131071
   3bebc:	cmp	x0, x2
   3bec0:	mov	x2, #0x20000               	// #131072
   3bec4:	csel	x2, x0, x2, ls  // ls = plast
   3bec8:	add	x0, x0, #0x40
   3becc:	add	x0, x0, x2
   3bed0:	cmp	x0, x1
   3bed4:	csel	x0, x0, x1, ls  // ls = plast
   3bed8:	ret

000000000003bedc <ZSTD_estimateDStreamSize@@Base>:
   3bedc:	stp	x29, x30, [sp, #-32]!
   3bee0:	mov	x1, #0xffffffffffffffff    	// #-1
   3bee4:	mov	x29, sp
   3bee8:	stp	x19, x20, [sp, #16]
   3beec:	mov	x19, x0
   3bef0:	bl	4840 <ZSTD_decodingBufferSize_min@plt>
   3bef4:	mov	x20, x0
   3bef8:	bl	4b10 <ZSTD_estimateDCtxSize@plt>
   3befc:	cmp	x19, #0x20, lsl #12
   3bf00:	add	x0, x0, x20
   3bf04:	mov	x1, #0x20000               	// #131072
   3bf08:	csel	x19, x19, x1, ls  // ls = plast
   3bf0c:	add	x0, x19, x0
   3bf10:	ldp	x19, x20, [sp, #16]
   3bf14:	ldp	x29, x30, [sp], #32
   3bf18:	ret

000000000003bf1c <ZSTD_estimateDStreamSize_fromFrame@@Base>:
   3bf1c:	stp	x29, x30, [sp, #-64]!
   3bf20:	mov	x2, x1
   3bf24:	mov	x1, x0
   3bf28:	mov	x29, sp
   3bf2c:	add	x0, sp, #0x18
   3bf30:	bl	48b0 <ZSTD_getFrameHeader@plt>
   3bf34:	cmn	x0, #0x78
   3bf38:	b.hi	3bf54 <ZSTD_estimateDStreamSize_fromFrame@@Base+0x38>  // b.pmore
   3bf3c:	cbnz	x0, 3bf5c <ZSTD_estimateDStreamSize_fromFrame@@Base+0x40>
   3bf40:	ldr	x0, [sp, #32]
   3bf44:	mov	x1, #0x80000000            	// #2147483648
   3bf48:	cmp	x0, x1
   3bf4c:	b.hi	3bf64 <ZSTD_estimateDStreamSize_fromFrame@@Base+0x48>  // b.pmore
   3bf50:	bl	4580 <ZSTD_estimateDStreamSize@plt>
   3bf54:	ldp	x29, x30, [sp], #64
   3bf58:	ret
   3bf5c:	mov	x0, #0xffffffffffffffb8    	// #-72
   3bf60:	b	3bf54 <ZSTD_estimateDStreamSize_fromFrame@@Base+0x38>
   3bf64:	mov	x0, #0xfffffffffffffff0    	// #-16
   3bf68:	b	3bf54 <ZSTD_estimateDStreamSize_fromFrame@@Base+0x38>

000000000003bf6c <ZSTD_decompressStream@@Base>:
   3bf6c:	stp	x29, x30, [sp, #-208]!
   3bf70:	mov	x29, sp
   3bf74:	stp	x27, x28, [sp, #80]
   3bf78:	mov	x27, x0
   3bf7c:	ldr	x0, [x2, #16]
   3bf80:	str	x0, [sp, #96]
   3bf84:	ldr	x0, [x2, #8]
   3bf88:	str	x0, [sp, #104]
   3bf8c:	stp	x23, x24, [sp, #48]
   3bf90:	mov	x23, x1
   3bf94:	ldp	x0, x1, [sp, #96]
   3bf98:	stp	x19, x20, [sp, #16]
   3bf9c:	stp	x21, x22, [sp, #32]
   3bfa0:	stp	x25, x26, [sp, #64]
   3bfa4:	cmp	x0, x1
   3bfa8:	b.hi	3c718 <ZSTD_decompressStream@@Base+0x7ac>  // b.pmore
   3bfac:	mov	x21, x2
   3bfb0:	ldp	x0, x2, [x23, #8]
   3bfb4:	cmp	x2, x0
   3bfb8:	b.hi	3c780 <ZSTD_decompressStream@@Base+0x814>  // b.pmore
   3bfbc:	ldr	x24, [x21]
   3bfc0:	add	x28, x27, #0x27, lsl #12
   3bfc4:	ldr	x1, [sp, #96]
   3bfc8:	add	x28, x28, #0x1f8
   3bfcc:	add	x25, x24, x1
   3bfd0:	ldr	x1, [sp, #104]
   3bfd4:	mov	x20, x25
   3bfd8:	add	x24, x24, x1
   3bfdc:	ldr	x1, [x23]
   3bfe0:	add	x2, x1, x2
   3bfe4:	add	x0, x1, x0
   3bfe8:	mov	x22, x2
   3bfec:	stp	x0, x2, [sp, #112]
   3bff0:	adrp	x0, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   3bff4:	add	x0, x0, #0x890
   3bff8:	str	x0, [sp, #136]
   3bffc:	add	x19, x27, #0x4, lsl #12
   3c000:	ldr	w0, [x19, #12660]
   3c004:	cmp	w0, #0x4
   3c008:	b.hi	3c768 <ZSTD_decompressStream@@Base+0x7fc>  // b.pmore
   3c00c:	ldr	x1, [sp, #136]
   3c010:	ldrh	w0, [x1, w0, uxtw #1]
   3c014:	adr	x1, 3c020 <ZSTD_decompressStream@@Base+0xb4>
   3c018:	add	x0, x1, w0, sxth #2
   3c01c:	br	x0
   3c020:	mov	w0, #0x1                   	// #1
   3c024:	mov	x1, #0x7200                	// #29184
   3c028:	str	w0, [x19, #12660]
   3c02c:	add	x0, x27, x1
   3c030:	str	xzr, [x27, #29064]
   3c034:	str	xzr, [x27, #29096]
   3c038:	str	xzr, [x27, #29104]
   3c03c:	str	xzr, [x27, #29112]
   3c040:	stur	xzr, [x0, #-52]
   3c044:	ldr	w1, [x19, #12748]
   3c048:	cbz	w1, 3c098 <ZSTD_decompressStream@@Base+0x12c>
   3c04c:	ldr	x0, [x27, #29000]
   3c050:	cbz	x0, 3c078 <ZSTD_decompressStream@@Base+0x10c>
   3c054:	mov	x26, #0xffffffffffffffc0    	// #-64
   3c058:	mov	x0, x26
   3c05c:	ldp	x19, x20, [sp, #16]
   3c060:	ldp	x21, x22, [sp, #32]
   3c064:	ldp	x23, x24, [sp, #48]
   3c068:	ldp	x25, x26, [sp, #64]
   3c06c:	ldp	x27, x28, [sp, #80]
   3c070:	ldp	x29, x30, [sp], #208
   3c074:	ret
   3c078:	mov	x3, x21
   3c07c:	mov	x2, x23
   3c080:	ldr	x0, [x27, #29120]
   3c084:	bl	3a124 <ZSTD_getDictID_fromDDict@@Base+0x160>
   3c088:	mov	x26, x0
   3c08c:	cbnz	x0, 3c058 <ZSTD_decompressStream@@Base+0xec>
   3c090:	str	wzr, [x19, #12660]
   3c094:	b	3c058 <ZSTD_decompressStream@@Base+0xec>
   3c098:	ldr	w3, [x19, #12560]
   3c09c:	mov	x1, x28
   3c0a0:	ldr	x2, [x27, #29112]
   3c0a4:	mov	x0, #0x7070                	// #28784
   3c0a8:	add	x0, x27, x0
   3c0ac:	bl	4600 <ZSTD_getFrameHeader_advanced@plt>
   3c0b0:	mov	x26, x0
   3c0b4:	cmn	x0, #0x78
   3c0b8:	b.ls	3c1dc <ZSTD_decompressStream@@Base+0x270>  // b.plast
   3c0bc:	ldp	x1, x0, [sp, #96]
   3c0c0:	sub	x1, x0, x1
   3c0c4:	mov	x0, x25
   3c0c8:	bl	3a228 <ZSTD_getDictID_fromDDict@@Base+0x264>
   3c0cc:	mov	w20, w0
   3c0d0:	cbz	w0, 3c058 <ZSTD_decompressStream@@Base+0xec>
   3c0d4:	mov	x0, x27
   3c0d8:	bl	3a0b8 <ZSTD_getDictID_fromDDict@@Base+0xf4>
   3c0dc:	mov	x22, x0
   3c0e0:	cbz	x0, 3c174 <ZSTD_decompressStream@@Base+0x208>
   3c0e4:	bl	39cc4 <ZSTD_compress@@Base+0x2b478>
   3c0e8:	mov	x25, x0
   3c0ec:	mov	x0, x22
   3c0f0:	mov	x22, x25
   3c0f4:	bl	39ccc <ZSTD_compress@@Base+0x2b480>
   3c0f8:	mov	x24, x0
   3c0fc:	ldr	x0, [x27, #29000]
   3c100:	cbnz	x0, 3c054 <ZSTD_decompressStream@@Base+0xe8>
   3c104:	ldr	w25, [x19, #12744]
   3c108:	cmp	w25, w20
   3c10c:	b.eq	3c788 <ZSTD_decompressStream@@Base+0x81c>  // b.none
   3c110:	ldr	x0, [x27, #29120]
   3c114:	mov	w1, w25
   3c118:	bl	3a0f8 <ZSTD_getDictID_fromDDict@@Base+0x134>
   3c11c:	cmp	w20, #0x6
   3c120:	b.eq	3c17c <ZSTD_decompressStream@@Base+0x210>  // b.none
   3c124:	cmp	w20, #0x7
   3c128:	b.eq	3c1ac <ZSTD_decompressStream@@Base+0x240>  // b.none
   3c12c:	cmp	w20, #0x5
   3c130:	b.ne	3c15c <ZSTD_decompressStream@@Base+0x1f0>  // b.any
   3c134:	cmp	w25, #0x5
   3c138:	b.eq	3c7a0 <ZSTD_decompressStream@@Base+0x834>  // b.none
   3c13c:	bl	4aa30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3510>
   3c140:	mov	x25, x0
   3c144:	cbz	x25, 3c054 <ZSTD_decompressStream@@Base+0xe8>
   3c148:	mov	x2, x24
   3c14c:	mov	x1, x22
   3c150:	mov	x0, x25
   3c154:	bl	4aac0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x35a0>
   3c158:	str	x25, [x27, #29120]
   3c15c:	mov	x3, x21
   3c160:	mov	x2, x23
   3c164:	mov	w1, w20
   3c168:	str	w20, [x19, #12744]
   3c16c:	str	w20, [x19, #12748]
   3c170:	b	3c080 <ZSTD_decompressStream@@Base+0x114>
   3c174:	mov	x24, #0x0                   	// #0
   3c178:	b	3c0fc <ZSTD_decompressStream@@Base+0x190>
   3c17c:	cmp	w25, #0x6
   3c180:	b.eq	3c1a4 <ZSTD_decompressStream@@Base+0x238>  // b.none
   3c184:	bl	4e3d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6eb4>
   3c188:	mov	x25, x0
   3c18c:	cbz	x25, 3c054 <ZSTD_decompressStream@@Base+0xe8>
   3c190:	mov	x2, x24
   3c194:	mov	x1, x22
   3c198:	mov	x0, x25
   3c19c:	bl	4e464 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6f44>
   3c1a0:	b	3c158 <ZSTD_decompressStream@@Base+0x1ec>
   3c1a4:	ldr	x25, [x27, #29120]
   3c1a8:	b	3c18c <ZSTD_decompressStream@@Base+0x220>
   3c1ac:	cmp	w25, #0x7
   3c1b0:	b.eq	3c1d4 <ZSTD_decompressStream@@Base+0x268>  // b.none
   3c1b4:	bl	528e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb3c4>
   3c1b8:	mov	x25, x0
   3c1bc:	cbz	x25, 3c054 <ZSTD_decompressStream@@Base+0xe8>
   3c1c0:	mov	x2, x24
   3c1c4:	mov	x1, x22
   3c1c8:	mov	x0, x25
   3c1cc:	bl	52914 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb3f4>
   3c1d0:	b	3c158 <ZSTD_decompressStream@@Base+0x1ec>
   3c1d4:	ldr	x25, [x27, #29120]
   3c1d8:	b	3c1bc <ZSTD_decompressStream@@Base+0x250>
   3c1dc:	cbz	x0, 3c274 <ZSTD_decompressStream@@Base+0x308>
   3c1e0:	ldr	x0, [x27, #29112]
   3c1e4:	sub	x4, x24, x20
   3c1e8:	sub	x2, x26, x0
   3c1ec:	cmp	x2, x4
   3c1f0:	b.ls	3c254 <ZSTD_decompressStream@@Base+0x2e8>  // b.plast
   3c1f4:	cbz	x4, 3c21c <ZSTD_decompressStream@@Base+0x2b0>
   3c1f8:	mov	x2, x4
   3c1fc:	mov	x1, x20
   3c200:	add	x0, x28, x0
   3c204:	str	x4, [sp, #96]
   3c208:	bl	4460 <memcpy@plt>
   3c20c:	ldr	x4, [sp, #96]
   3c210:	ldr	x2, [x27, #29112]
   3c214:	add	x2, x2, x4
   3c218:	str	x2, [x27, #29112]
   3c21c:	ldr	x0, [x21, #8]
   3c220:	mov	x1, #0x2                   	// #2
   3c224:	ldr	x2, [x27, #29112]
   3c228:	str	x0, [x21, #16]
   3c22c:	ldr	w0, [x19, #12560]
   3c230:	cmp	w0, #0x0
   3c234:	mov	x0, #0x6                   	// #6
   3c238:	csel	x0, x0, x1, eq  // eq = none
   3c23c:	mov	x1, #0x3                   	// #3
   3c240:	cmp	x0, x26
   3c244:	sub	x1, x1, x2
   3c248:	csel	x0, x0, x26, cs  // cs = hs, nlast
   3c24c:	add	x26, x1, x0
   3c250:	b	3c058 <ZSTD_decompressStream@@Base+0xec>
   3c254:	mov	x1, x20
   3c258:	add	x0, x28, x0
   3c25c:	str	x2, [sp, #128]
   3c260:	bl	4460 <memcpy@plt>
   3c264:	ldr	x2, [sp, #128]
   3c268:	str	x26, [x27, #29112]
   3c26c:	add	x20, x20, x2
   3c270:	b	3bffc <ZSTD_decompressStream@@Base+0x90>
   3c274:	ldr	x0, [x27, #28784]
   3c278:	cbz	x0, 3c370 <ZSTD_decompressStream@@Base+0x404>
   3c27c:	ldr	x1, [x27, #28792]
   3c280:	cbz	x1, 3c370 <ZSTD_decompressStream@@Base+0x404>
   3c284:	ldr	x1, [sp, #112]
   3c288:	sub	x26, x1, x22
   3c28c:	cmp	x0, x26
   3c290:	b.hi	3c370 <ZSTD_decompressStream@@Base+0x404>  // b.pmore
   3c294:	ldp	x1, x0, [sp, #96]
   3c298:	sub	x1, x0, x1
   3c29c:	mov	x0, x25
   3c2a0:	str	x1, [sp, #128]
   3c2a4:	bl	4a40 <ZSTD_findFrameCompressedSize@plt>
   3c2a8:	ldr	x1, [sp, #128]
   3c2ac:	mov	x4, x0
   3c2b0:	cmp	x1, x0
   3c2b4:	b.cc	3c370 <ZSTD_decompressStream@@Base+0x404>  // b.lo, b.ul, b.last
   3c2b8:	mov	x0, x27
   3c2bc:	str	x4, [sp, #96]
   3c2c0:	bl	3a0b8 <ZSTD_getDictID_fromDDict@@Base+0xf4>
   3c2c4:	mov	x5, x0
   3c2c8:	ldr	x4, [sp, #96]
   3c2cc:	mov	x2, x26
   3c2d0:	mov	x3, x25
   3c2d4:	mov	x1, x22
   3c2d8:	mov	x0, x27
   3c2dc:	bl	4790 <ZSTD_decompress_usingDDict@plt>
   3c2e0:	mov	x26, x0
   3c2e4:	cmn	x0, #0x78
   3c2e8:	b.hi	3c058 <ZSTD_decompressStream@@Base+0xec>  // b.pmore
   3c2ec:	ldr	x4, [sp, #96]
   3c2f0:	add	x22, x22, x0
   3c2f4:	str	xzr, [x27, #28776]
   3c2f8:	add	x20, x25, x4
   3c2fc:	str	wzr, [x19, #12660]
   3c300:	ldr	x0, [x21]
   3c304:	cmp	x25, x20
   3c308:	sub	x0, x20, x0
   3c30c:	str	x0, [x21, #16]
   3c310:	ldr	x0, [x23]
   3c314:	sub	x0, x22, x0
   3c318:	str	x0, [x23, #16]
   3c31c:	ldr	x0, [sp, #120]
   3c320:	ccmp	x22, x0, #0x0, eq  // eq = none
   3c324:	b.eq	3c6f0 <ZSTD_decompressStream@@Base+0x784>  // b.none
   3c328:	str	wzr, [x19, #12756]
   3c32c:	mov	x0, x27
   3c330:	bl	4a10 <ZSTD_nextSrcSizeToDecompress@plt>
   3c334:	mov	x26, x0
   3c338:	cbnz	x0, 3c748 <ZSTD_decompressStream@@Base+0x7dc>
   3c33c:	ldr	x1, [x27, #29096]
   3c340:	ldr	x2, [x27, #29104]
   3c344:	ldr	w0, [x19, #12752]
   3c348:	cmp	x2, x1
   3c34c:	b.ne	3c72c <ZSTD_decompressStream@@Base+0x7c0>  // b.any
   3c350:	cbz	w0, 3c058 <ZSTD_decompressStream@@Base+0xec>
   3c354:	ldp	x1, x0, [x21, #8]
   3c358:	cmp	x0, x1
   3c35c:	b.cc	3c720 <ZSTD_decompressStream@@Base+0x7b4>  // b.lo, b.ul, b.last
   3c360:	mov	w0, #0x2                   	// #2
   3c364:	str	w0, [x19, #12660]
   3c368:	mov	x26, #0x1                   	// #1
   3c36c:	b	3c058 <ZSTD_decompressStream@@Base+0xec>
   3c370:	mov	x0, x27
   3c374:	bl	3a0b8 <ZSTD_getDictID_fromDDict@@Base+0xf4>
   3c378:	mov	x1, x0
   3c37c:	mov	x0, x27
   3c380:	bl	4640 <ZSTD_decompressBegin_usingDDict@plt>
   3c384:	mov	x26, x0
   3c388:	cmn	x0, #0x78
   3c38c:	b.hi	3c058 <ZSTD_decompressStream@@Base+0xec>  // b.pmore
   3c390:	add	x1, x27, #0x24, lsl #12
   3c394:	mov	w2, #0x2a50                	// #10832
   3c398:	movk	w2, #0x184d, lsl #16
   3c39c:	ldr	w0, [x1, #12792]
   3c3a0:	and	w0, w0, #0xfffffff0
   3c3a4:	cmp	w0, w2
   3c3a8:	b.ne	3c4d4 <ZSTD_decompressStream@@Base+0x568>  // b.any
   3c3ac:	ldr	w0, [x1, #12796]
   3c3b0:	str	x0, [x27, #28776]
   3c3b4:	mov	w0, #0x7                   	// #7
   3c3b8:	str	w0, [x19, #12452]
   3c3bc:	mov	x1, #0x400                 	// #1024
   3c3c0:	ldr	x0, [x27, #28792]
   3c3c4:	cmp	x0, #0x400
   3c3c8:	csel	x0, x0, x1, cs  // cs = hs, nlast
   3c3cc:	str	x0, [x27, #28792]
   3c3d0:	ldr	x1, [x27, #29072]
   3c3d4:	cmp	x0, x1
   3c3d8:	b.hi	3c770 <ZSTD_decompressStream@@Base+0x804>  // b.pmore
   3c3dc:	ldr	w2, [x19, #12416]
   3c3e0:	mov	w1, #0x4                   	// #4
   3c3e4:	cmp	w2, #0x4
   3c3e8:	csel	w26, w2, w1, cs  // cs = hs, nlast
   3c3ec:	ldr	x1, [x27, #28784]
   3c3f0:	bl	4840 <ZSTD_decodingBufferSize_min@plt>
   3c3f4:	mov	x3, x0
   3c3f8:	ldr	x0, [x27, #29056]
   3c3fc:	cmp	x0, x26
   3c400:	b.cc	3c410 <ZSTD_decompressStream@@Base+0x4a4>  // b.lo, b.ul, b.last
   3c404:	ldr	x0, [x27, #29088]
   3c408:	cmp	x0, x3
   3c40c:	b.cs	3c440 <ZSTD_decompressStream@@Base+0x4d4>  // b.hs, b.nlast
   3c410:	ldr	x0, [x27, #29000]
   3c414:	add	x2, x26, x3
   3c418:	cbz	x0, 3c500 <ZSTD_decompressStream@@Base+0x594>
   3c41c:	sub	x0, x0, #0x27, lsl #12
   3c420:	sub	x0, x0, #0x210
   3c424:	cmp	x0, x2
   3c428:	b.cc	3c054 <ZSTD_decompressStream@@Base+0xe8>  // b.lo, b.ul, b.last
   3c42c:	ldr	x0, [x27, #29048]
   3c430:	str	x26, [x27, #29056]
   3c434:	str	x3, [x27, #29088]
   3c438:	add	x2, x0, x26
   3c43c:	str	x2, [x27, #29080]
   3c440:	mov	w0, #0x2                   	// #2
   3c444:	str	w0, [x19, #12660]
   3c448:	mov	x0, x27
   3c44c:	bl	4a10 <ZSTD_nextSrcSizeToDecompress@plt>
   3c450:	mov	x4, x0
   3c454:	cbz	x0, 3c2fc <ZSTD_decompressStream@@Base+0x390>
   3c458:	sub	x0, x24, x20
   3c45c:	cmp	x0, x4
   3c460:	b.cc	3c574 <ZSTD_decompressStream@@Base+0x608>  // b.lo, b.ul, b.last
   3c464:	ldr	x1, [x27, #29080]
   3c468:	ldr	x0, [x27, #29096]
   3c46c:	ldr	w5, [x19, #12452]
   3c470:	add	x1, x1, x0
   3c474:	cmp	w5, #0x7
   3c478:	b.eq	3c56c <ZSTD_decompressStream@@Base+0x600>  // b.none
   3c47c:	ldr	x2, [x27, #29088]
   3c480:	sub	x2, x2, x0
   3c484:	mov	x3, x20
   3c488:	mov	x0, x27
   3c48c:	str	x4, [sp, #128]
   3c490:	str	w5, [sp, #144]
   3c494:	bl	4930 <ZSTD_decompressContinue@plt>
   3c498:	mov	x26, x0
   3c49c:	cmn	x0, #0x78
   3c4a0:	b.hi	3c058 <ZSTD_decompressStream@@Base+0xec>  // b.pmore
   3c4a4:	ldr	x4, [sp, #128]
   3c4a8:	cmp	x0, #0x0
   3c4ac:	ldr	w5, [sp, #144]
   3c4b0:	add	x20, x20, x4
   3c4b4:	ccmp	w5, #0x7, #0x4, eq  // eq = none
   3c4b8:	b.ne	3bffc <ZSTD_decompressStream@@Base+0x90>  // b.any
   3c4bc:	ldr	x0, [x27, #29096]
   3c4c0:	add	x0, x0, x26
   3c4c4:	str	x0, [x27, #29104]
   3c4c8:	mov	w0, #0x4                   	// #4
   3c4cc:	str	w0, [x19, #12660]
   3c4d0:	b	3bffc <ZSTD_decompressStream@@Base+0x90>
   3c4d4:	ldr	x2, [x27, #29112]
   3c4d8:	mov	x1, x28
   3c4dc:	mov	x0, x27
   3c4e0:	bl	3a7d8 <ZSTD_getFrameHeader_advanced@@Base+0x1e4>
   3c4e4:	mov	x26, x0
   3c4e8:	cmn	x0, #0x78
   3c4ec:	b.hi	3c058 <ZSTD_decompressStream@@Base+0xec>  // b.pmore
   3c4f0:	mov	x0, #0x3                   	// #3
   3c4f4:	str	x0, [x27, #28776]
   3c4f8:	mov	w0, #0x2                   	// #2
   3c4fc:	b	3c3b8 <ZSTD_decompressStream@@Base+0x44c>
   3c500:	add	x7, x27, #0x7, lsl #12
   3c504:	add	x1, sp, #0xb0
   3c508:	add	x9, x7, #0x120
   3c50c:	str	x1, [sp, #128]
   3c510:	stp	x9, x7, [sp, #144]
   3c514:	ldp	x4, x5, [x7, #288]
   3c518:	stp	x4, x5, [sp, #176]
   3c51c:	ldr	x0, [x27, #28976]
   3c520:	str	x0, [sp, #192]
   3c524:	stp	x3, x2, [sp, #160]
   3c528:	ldr	x0, [x27, #29048]
   3c52c:	bl	6bcc <ZSTD_getErrorString@@Base+0x80>
   3c530:	ldp	x9, x7, [sp, #144]
   3c534:	ldr	x1, [sp, #128]
   3c538:	ldr	x2, [sp, #168]
   3c53c:	ldp	x4, x5, [x7, #288]
   3c540:	stp	x4, x5, [sp, #176]
   3c544:	ldr	x0, [x9, #16]
   3c548:	str	xzr, [x27, #29056]
   3c54c:	str	xzr, [x27, #29088]
   3c550:	str	x0, [sp, #192]
   3c554:	mov	x0, x2
   3c558:	bl	6b50 <ZSTD_getErrorString@@Base+0x4>
   3c55c:	str	x0, [x27, #29048]
   3c560:	ldr	x3, [sp, #160]
   3c564:	cbnz	x0, 3c42c <ZSTD_decompressStream@@Base+0x4c0>
   3c568:	b	3c054 <ZSTD_decompressStream@@Base+0xe8>
   3c56c:	mov	x2, #0x0                   	// #0
   3c570:	b	3c484 <ZSTD_decompressStream@@Base+0x518>
   3c574:	cmp	x24, x20
   3c578:	b.eq	3c300 <ZSTD_decompressStream@@Base+0x394>  // b.none
   3c57c:	mov	w0, #0x3                   	// #3
   3c580:	str	w0, [x19, #12660]
   3c584:	mov	x0, x27
   3c588:	bl	4a10 <ZSTD_nextSrcSizeToDecompress@plt>
   3c58c:	ldr	w1, [x19, #12452]
   3c590:	mov	x26, x0
   3c594:	ldr	x0, [x27, #29064]
   3c598:	str	w1, [sp, #128]
   3c59c:	mov	w1, w1
   3c5a0:	sub	x3, x26, x0
   3c5a4:	cmp	w1, #0x7
   3c5a8:	b.ne	3c61c <ZSTD_decompressStream@@Base+0x6b0>  // b.any
   3c5ac:	sub	x2, x24, x20
   3c5b0:	cmp	x2, x3
   3c5b4:	csel	x2, x2, x3, ls  // ls = plast
   3c5b8:	ldr	x0, [x27, #29064]
   3c5bc:	add	x20, x20, x2
   3c5c0:	cmp	x2, x3
   3c5c4:	add	x0, x0, x2
   3c5c8:	str	x0, [x27, #29064]
   3c5cc:	b.cc	3c300 <ZSTD_decompressStream@@Base+0x394>  // b.lo, b.ul, b.last
   3c5d0:	ldr	x3, [x27, #29048]
   3c5d4:	mov	x4, x26
   3c5d8:	ldr	x1, [x27, #29080]
   3c5dc:	ldr	x2, [x27, #29088]
   3c5e0:	ldr	x0, [x27, #29096]
   3c5e4:	sub	x2, x2, x0
   3c5e8:	add	x1, x1, x0
   3c5ec:	mov	x0, x27
   3c5f0:	bl	4930 <ZSTD_decompressContinue@plt>
   3c5f4:	mov	x26, x0
   3c5f8:	cmn	x0, #0x78
   3c5fc:	b.hi	3c058 <ZSTD_decompressStream@@Base+0xec>  // b.pmore
   3c600:	cmp	x0, #0x0
   3c604:	ldr	w0, [sp, #128]
   3c608:	str	xzr, [x27, #29064]
   3c60c:	ccmp	w0, #0x7, #0x4, eq  // eq = none
   3c610:	b.eq	3c654 <ZSTD_decompressStream@@Base+0x6e8>  // b.none
   3c614:	mov	w0, #0x2                   	// #2
   3c618:	b	3c4cc <ZSTD_decompressStream@@Base+0x560>
   3c61c:	ldr	x1, [x27, #29056]
   3c620:	sub	x1, x1, x0
   3c624:	cmp	x1, x3
   3c628:	b.cc	3c778 <ZSTD_decompressStream@@Base+0x80c>  // b.lo, b.ul, b.last
   3c62c:	sub	x2, x24, x20
   3c630:	mov	x1, x20
   3c634:	ldr	x5, [x27, #29048]
   3c638:	cmp	x2, x3
   3c63c:	csel	x2, x2, x3, ls  // ls = plast
   3c640:	stp	x2, x3, [sp, #144]
   3c644:	add	x0, x5, x0
   3c648:	bl	4460 <memcpy@plt>
   3c64c:	ldp	x2, x3, [sp, #144]
   3c650:	b	3c5b8 <ZSTD_decompressStream@@Base+0x64c>
   3c654:	ldr	x0, [x27, #29096]
   3c658:	add	x0, x0, x26
   3c65c:	str	x0, [x27, #29104]
   3c660:	mov	w0, #0x4                   	// #4
   3c664:	str	w0, [x19, #12660]
   3c668:	ldr	x1, [sp, #112]
   3c66c:	ldr	x0, [x27, #29096]
   3c670:	sub	x4, x1, x22
   3c674:	ldr	x3, [x27, #29104]
   3c678:	str	x4, [sp, #144]
   3c67c:	ldr	x1, [x27, #29080]
   3c680:	sub	x26, x3, x0
   3c684:	cmp	x4, x26
   3c688:	csel	x2, x4, x26, ls  // ls = plast
   3c68c:	add	x1, x1, x0
   3c690:	mov	x0, x22
   3c694:	str	x2, [sp, #128]
   3c698:	bl	4460 <memcpy@plt>
   3c69c:	ldr	x2, [sp, #128]
   3c6a0:	ldr	x0, [x27, #29096]
   3c6a4:	add	x22, x22, x2
   3c6a8:	ldr	x4, [sp, #144]
   3c6ac:	add	x2, x2, x0
   3c6b0:	str	x2, [x27, #29096]
   3c6b4:	cmp	x4, x26
   3c6b8:	b.cc	3c300 <ZSTD_decompressStream@@Base+0x394>  // b.lo, b.ul, b.last
   3c6bc:	mov	w0, #0x2                   	// #2
   3c6c0:	ldr	x1, [x27, #29088]
   3c6c4:	str	w0, [x19, #12660]
   3c6c8:	ldr	x0, [x27, #28784]
   3c6cc:	cmp	x1, x0
   3c6d0:	b.cs	3bffc <ZSTD_decompressStream@@Base+0x90>  // b.hs, b.nlast
   3c6d4:	ldr	w0, [x19, #12416]
   3c6d8:	add	x2, x0, x2
   3c6dc:	cmp	x1, x2
   3c6e0:	b.cs	3bffc <ZSTD_decompressStream@@Base+0x90>  // b.hs, b.nlast
   3c6e4:	str	xzr, [x27, #29096]
   3c6e8:	str	xzr, [x27, #29104]
   3c6ec:	b	3bffc <ZSTD_decompressStream@@Base+0x90>
   3c6f0:	ldr	w0, [x19, #12756]
   3c6f4:	add	w0, w0, #0x1
   3c6f8:	str	w0, [x19, #12756]
   3c6fc:	cmp	w0, #0xf
   3c700:	b.le	3c32c <ZSTD_decompressStream@@Base+0x3c0>
   3c704:	ldr	x0, [sp, #112]
   3c708:	cmp	x22, x0
   3c70c:	b.eq	3c780 <ZSTD_decompressStream@@Base+0x814>  // b.none
   3c710:	cmp	x24, x20
   3c714:	b.ne	3c32c <ZSTD_decompressStream@@Base+0x3c0>  // b.any
   3c718:	mov	x26, #0xffffffffffffffb8    	// #-72
   3c71c:	b	3c058 <ZSTD_decompressStream@@Base+0xec>
   3c720:	add	x0, x0, #0x1
   3c724:	str	x0, [x21, #16]
   3c728:	b	3c058 <ZSTD_decompressStream@@Base+0xec>
   3c72c:	cbnz	w0, 3c368 <ZSTD_decompressStream@@Base+0x3fc>
   3c730:	ldr	x0, [x21, #16]
   3c734:	sub	x0, x0, #0x1
   3c738:	str	x0, [x21, #16]
   3c73c:	mov	w0, #0x1                   	// #1
   3c740:	str	w0, [x19, #12752]
   3c744:	b	3c368 <ZSTD_decompressStream@@Base+0x3fc>
   3c748:	mov	x0, x27
   3c74c:	bl	4b70 <ZSTD_nextInputType@plt>
   3c750:	cmp	w0, #0x2
   3c754:	mov	x1, #0x3                   	// #3
   3c758:	ldr	x0, [x27, #29064]
   3c75c:	csel	x1, x1, xzr, eq  // eq = none
   3c760:	sub	x0, x26, x0
   3c764:	b	3c24c <ZSTD_decompressStream@@Base+0x2e0>
   3c768:	mov	x26, #0xffffffffffffffff    	// #-1
   3c76c:	b	3c058 <ZSTD_decompressStream@@Base+0xec>
   3c770:	mov	x26, #0xfffffffffffffff0    	// #-16
   3c774:	b	3c058 <ZSTD_decompressStream@@Base+0xec>
   3c778:	mov	x26, #0xffffffffffffffec    	// #-20
   3c77c:	b	3c058 <ZSTD_decompressStream@@Base+0xec>
   3c780:	mov	x26, #0xffffffffffffffba    	// #-70
   3c784:	b	3c058 <ZSTD_decompressStream@@Base+0xec>
   3c788:	cmp	w20, #0x6
   3c78c:	b.eq	3c1a4 <ZSTD_decompressStream@@Base+0x238>  // b.none
   3c790:	cmp	w20, #0x7
   3c794:	b.eq	3c1d4 <ZSTD_decompressStream@@Base+0x268>  // b.none
   3c798:	cmp	w20, #0x5
   3c79c:	b.ne	3c15c <ZSTD_decompressStream@@Base+0x1f0>  // b.any
   3c7a0:	ldr	x25, [x27, #29120]
   3c7a4:	b	3c144 <ZSTD_decompressStream@@Base+0x1d8>

000000000003c7a8 <ZSTD_decompressStream_simpleArgs@@Base>:
   3c7a8:	stp	x29, x30, [sp, #-80]!
   3c7ac:	mov	x29, sp
   3c7b0:	stp	x1, x2, [sp, #32]
   3c7b4:	add	x2, sp, #0x38
   3c7b8:	ldr	x1, [x3]
   3c7bc:	stp	x19, x20, [sp, #16]
   3c7c0:	mov	x20, x3
   3c7c4:	str	x1, [sp, #48]
   3c7c8:	mov	x19, x6
   3c7cc:	ldr	x1, [x6]
   3c7d0:	stp	x4, x5, [sp, #56]
   3c7d4:	str	x1, [sp, #72]
   3c7d8:	add	x1, sp, #0x20
   3c7dc:	bl	4940 <ZSTD_decompressStream@plt>
   3c7e0:	ldr	x1, [sp, #48]
   3c7e4:	str	x1, [x20]
   3c7e8:	ldr	x1, [sp, #72]
   3c7ec:	str	x1, [x19]
   3c7f0:	ldp	x19, x20, [sp, #16]
   3c7f4:	ldp	x29, x30, [sp], #80
   3c7f8:	ret
   3c7fc:	ldr	w2, [x0, #8]
   3c800:	ldr	x3, [x0]
   3c804:	add	w2, w1, w2
   3c808:	neg	w4, w2
   3c80c:	str	w2, [x0, #8]
   3c810:	lsr	x3, x3, x4
   3c814:	adrp	x4, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   3c818:	add	x4, x4, #0xcdc
   3c81c:	ldr	w1, [x4, w1, uxtw #2]
   3c820:	and	x0, x3, x1
   3c824:	ret
   3c828:	ldr	x2, [x0]
   3c82c:	neg	w4, w1
   3c830:	ldr	w3, [x0, #8]
   3c834:	add	w1, w1, w3
   3c838:	str	w1, [x0, #8]
   3c83c:	lsl	x2, x2, x3
   3c840:	lsr	x0, x2, x4
   3c844:	ret
   3c848:	ldr	w3, [x0, #8]
   3c84c:	mov	x1, x0
   3c850:	cmp	w3, #0x40
   3c854:	b.hi	3c8e8 <ZSTD_decompressStream_simpleArgs@@Base+0x140>  // b.pmore
   3c858:	ldr	x2, [x0, #16]
   3c85c:	ldr	x0, [x0, #32]
   3c860:	cmp	x2, x0
   3c864:	b.cc	3c88c <ZSTD_decompressStream_simpleArgs@@Base+0xe4>  // b.lo, b.ul, b.last
   3c868:	lsr	w0, w3, #3
   3c86c:	and	w3, w3, #0x7
   3c870:	sub	x2, x2, x0
   3c874:	ldr	x0, [x2]
   3c878:	str	x0, [x1]
   3c87c:	mov	w0, #0x0                   	// #0
   3c880:	str	w3, [x1, #8]
   3c884:	str	x2, [x1, #16]
   3c888:	ret
   3c88c:	ldr	x0, [x1, #24]
   3c890:	cmp	x2, x0
   3c894:	b.ne	3c8a8 <ZSTD_decompressStream_simpleArgs@@Base+0x100>  // b.any
   3c898:	cmp	w3, #0x40
   3c89c:	cset	w0, eq  // eq = none
   3c8a0:	add	w0, w0, #0x1
   3c8a4:	b	3c888 <ZSTD_decompressStream_simpleArgs@@Base+0xe0>
   3c8a8:	lsr	w5, w3, #3
   3c8ac:	lsr	w4, w3, #3
   3c8b0:	sub	x5, x2, x5
   3c8b4:	cmp	x0, x5
   3c8b8:	b.ls	3c8e0 <ZSTD_decompressStream_simpleArgs@@Base+0x138>  // b.plast
   3c8bc:	sub	w4, w2, w0
   3c8c0:	mov	w0, #0x1                   	// #1
   3c8c4:	sub	x2, x2, w4, uxtw
   3c8c8:	str	x2, [x1, #16]
   3c8cc:	sub	w3, w3, w4, lsl #3
   3c8d0:	str	w3, [x1, #8]
   3c8d4:	ldr	x2, [x2]
   3c8d8:	str	x2, [x1]
   3c8dc:	b	3c888 <ZSTD_decompressStream_simpleArgs@@Base+0xe0>
   3c8e0:	mov	w0, #0x0                   	// #0
   3c8e4:	b	3c8c4 <ZSTD_decompressStream_simpleArgs@@Base+0x11c>
   3c8e8:	mov	w0, #0x3                   	// #3
   3c8ec:	b	3c888 <ZSTD_decompressStream_simpleArgs@@Base+0xe0>
   3c8f0:	cmp	x2, #0x7
   3c8f4:	ldr	x4, [x0]
   3c8f8:	ldr	x5, [x1]
   3c8fc:	b.hi	3c990 <ZSTD_decompressStream_simpleArgs@@Base+0x1e8>  // b.pmore
   3c900:	ldrb	w5, [x5]
   3c904:	adrp	x3, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   3c908:	strb	w5, [x4]
   3c90c:	add	x3, x3, #0xcdc
   3c910:	add	x6, x3, #0x80
   3c914:	add	x3, x3, #0xa0
   3c918:	ldr	x5, [x1]
   3c91c:	ldr	x4, [x0]
   3c920:	ldrb	w5, [x5, #1]
   3c924:	ldr	w3, [x3, x2, lsl #2]
   3c928:	strb	w5, [x4, #1]
   3c92c:	ldr	x5, [x1]
   3c930:	ldr	x4, [x0]
   3c934:	ldrb	w5, [x5, #2]
   3c938:	strb	w5, [x4, #2]
   3c93c:	ldr	x5, [x1]
   3c940:	ldr	x4, [x0]
   3c944:	ldrb	w5, [x5, #3]
   3c948:	strb	w5, [x4, #3]
   3c94c:	ldr	x4, [x1]
   3c950:	add	x5, x4, x3
   3c954:	str	x5, [x1]
   3c958:	ldr	x5, [x0]
   3c95c:	ldr	w3, [x4, x3]
   3c960:	str	w3, [x5, #4]
   3c964:	ldrsw	x3, [x6, x2, lsl #2]
   3c968:	ldr	x2, [x1]
   3c96c:	sub	x2, x2, x3
   3c970:	str	x2, [x1]
   3c974:	ldr	x2, [x1]
   3c978:	add	x2, x2, #0x8
   3c97c:	str	x2, [x1]
   3c980:	ldr	x1, [x0]
   3c984:	add	x1, x1, #0x8
   3c988:	str	x1, [x0]
   3c98c:	ret
   3c990:	ldr	x2, [x5]
   3c994:	str	x2, [x4]
   3c998:	b	3c974 <ZSTD_decompressStream_simpleArgs@@Base+0x1cc>
   3c99c:	stp	x29, x30, [sp, #-32]!
   3c9a0:	add	x10, x0, x3
   3c9a4:	cmp	x3, #0x7
   3c9a8:	mov	x29, sp
   3c9ac:	stp	x2, x0, [sp, #16]
   3c9b0:	b.gt	3c9e8 <ZSTD_decompressStream_simpleArgs@@Base+0x240>
   3c9b4:	ldr	x0, [sp, #24]
   3c9b8:	cmp	x0, x10
   3c9bc:	b.cc	3c9c8 <ZSTD_decompressStream_simpleArgs@@Base+0x220>  // b.lo, b.ul, b.last
   3c9c0:	ldp	x29, x30, [sp], #32
   3c9c4:	ret
   3c9c8:	ldr	x1, [sp, #16]
   3c9cc:	add	x2, x1, #0x1
   3c9d0:	str	x2, [sp, #16]
   3c9d4:	add	x2, x0, #0x1
   3c9d8:	str	x2, [sp, #24]
   3c9dc:	ldrb	w1, [x1]
   3c9e0:	strb	w1, [x0]
   3c9e4:	b	3c9b4 <ZSTD_decompressStream_simpleArgs@@Base+0x20c>
   3c9e8:	mov	x7, x1
   3c9ec:	mov	x8, x3
   3c9f0:	mov	w9, w4
   3c9f4:	cmp	w4, #0x1
   3c9f8:	b.ne	3ca0c <ZSTD_decompressStream_simpleArgs@@Base+0x264>  // b.any
   3c9fc:	sub	x2, x0, x2
   3ca00:	add	x1, sp, #0x10
   3ca04:	add	x0, sp, #0x18
   3ca08:	bl	3c8f0 <ZSTD_decompressStream_simpleArgs@@Base+0x148>
   3ca0c:	cmp	x10, x7
   3ca10:	ldr	x0, [sp, #24]
   3ca14:	b.hi	3ca98 <ZSTD_decompressStream_simpleArgs@@Base+0x2f0>  // b.pmore
   3ca18:	ldr	x1, [sp, #16]
   3ca1c:	add	x8, x0, x8
   3ca20:	sub	x2, x0, x1
   3ca24:	cmp	x2, #0xf
   3ca28:	cset	w2, le
   3ca2c:	tst	w9, w2
   3ca30:	b.eq	3ca54 <ZSTD_decompressStream_simpleArgs@@Base+0x2ac>  // b.none
   3ca34:	mov	x2, #0x0                   	// #0
   3ca38:	ldr	x3, [x1, x2]
   3ca3c:	str	x3, [x0, x2]
   3ca40:	add	x2, x2, #0x8
   3ca44:	add	x3, x0, x2
   3ca48:	cmp	x8, x3
   3ca4c:	b.hi	3ca38 <ZSTD_decompressStream_simpleArgs@@Base+0x290>  // b.pmore
   3ca50:	b	3c9c0 <ZSTD_decompressStream_simpleArgs@@Base+0x218>
   3ca54:	ldp	x2, x3, [x1]
   3ca58:	stp	x2, x3, [x0]
   3ca5c:	add	x0, x0, #0x20
   3ca60:	ldp	x2, x3, [x1, #16]
   3ca64:	stp	x2, x3, [x0, #-16]
   3ca68:	cmp	x8, x0
   3ca6c:	b.ls	3c9c0 <ZSTD_decompressStream_simpleArgs@@Base+0x218>  // b.plast
   3ca70:	add	x1, x1, #0x20
   3ca74:	ldp	x2, x3, [x1]
   3ca78:	stp	x2, x3, [x0]
   3ca7c:	add	x0, x0, #0x20
   3ca80:	ldp	x2, x3, [x1, #16]
   3ca84:	stp	x2, x3, [x0, #-16]
   3ca88:	add	x1, x1, #0x20
   3ca8c:	cmp	x8, x0
   3ca90:	b.hi	3ca74 <ZSTD_decompressStream_simpleArgs@@Base+0x2cc>  // b.pmore
   3ca94:	b	3c9c0 <ZSTD_decompressStream_simpleArgs@@Base+0x218>
   3ca98:	cmp	x7, x0
   3ca9c:	b.cc	3cae8 <ZSTD_decompressStream_simpleArgs@@Base+0x340>  // b.lo, b.ul, b.last
   3caa0:	ldr	x2, [sp, #16]
   3caa4:	sub	x1, x0, x2
   3caa8:	cmp	x1, #0xf
   3caac:	cset	w1, le
   3cab0:	tst	w9, w1
   3cab4:	b.eq	3cb14 <ZSTD_decompressStream_simpleArgs@@Base+0x36c>  // b.none
   3cab8:	mov	x1, #0x0                   	// #0
   3cabc:	ldr	x3, [x2, x1]
   3cac0:	str	x3, [x0, x1]
   3cac4:	add	x1, x1, #0x8
   3cac8:	add	x3, x0, x1
   3cacc:	cmp	x7, x3
   3cad0:	b.hi	3cabc <ZSTD_decompressStream_simpleArgs@@Base+0x314>  // b.pmore
   3cad4:	ldr	x0, [sp, #24]
   3cad8:	sub	x1, x7, x0
   3cadc:	ldr	x0, [sp, #16]
   3cae0:	add	x0, x0, x1
   3cae4:	stp	x0, x7, [sp, #16]
   3cae8:	ldr	x0, [sp, #24]
   3caec:	cmp	x0, x10
   3caf0:	b.cs	3c9c0 <ZSTD_decompressStream_simpleArgs@@Base+0x218>  // b.hs, b.nlast
   3caf4:	ldr	x1, [sp, #16]
   3caf8:	add	x2, x1, #0x1
   3cafc:	str	x2, [sp, #16]
   3cb00:	add	x2, x0, #0x1
   3cb04:	str	x2, [sp, #24]
   3cb08:	ldrb	w1, [x1]
   3cb0c:	strb	w1, [x0]
   3cb10:	b	3cae8 <ZSTD_decompressStream_simpleArgs@@Base+0x340>
   3cb14:	ldp	x4, x5, [x2]
   3cb18:	stp	x4, x5, [x0]
   3cb1c:	add	x0, x0, #0x20
   3cb20:	ldp	x4, x5, [x2, #16]
   3cb24:	stp	x4, x5, [x0, #-16]
   3cb28:	cmp	x7, x0
   3cb2c:	b.ls	3cad4 <ZSTD_decompressStream_simpleArgs@@Base+0x32c>  // b.plast
   3cb30:	add	x2, x2, #0x20
   3cb34:	ldp	x4, x5, [x2]
   3cb38:	stp	x4, x5, [x0]
   3cb3c:	add	x0, x0, #0x20
   3cb40:	ldp	x4, x5, [x2, #16]
   3cb44:	stp	x4, x5, [x0, #-16]
   3cb48:	add	x2, x2, #0x20
   3cb4c:	cmp	x7, x0
   3cb50:	b.hi	3cb34 <ZSTD_decompressStream_simpleArgs@@Base+0x38c>  // b.pmore
   3cb54:	b	3cad4 <ZSTD_decompressStream_simpleArgs@@Base+0x32c>
   3cb58:	stp	x29, x30, [sp, #-16]!
   3cb5c:	mov	x7, x0
   3cb60:	mov	x5, x1
   3cb64:	mov	x29, sp
   3cb68:	mov	x0, x1
   3cb6c:	ldr	w1, [x2, #4]
   3cb70:	mov	x6, x2
   3cb74:	bl	3c7fc <ZSTD_decompressStream_simpleArgs@@Base+0x54>
   3cb78:	str	x0, [x7]
   3cb7c:	mov	x0, x5
   3cb80:	bl	3c848 <ZSTD_decompressStream_simpleArgs@@Base+0xa0>
   3cb84:	add	x6, x6, #0x8
   3cb88:	ldp	x29, x30, [sp], #16
   3cb8c:	str	x6, [x7, #8]
   3cb90:	ret
   3cb94:	mov	x3, x0
   3cb98:	mov	x0, x2
   3cb9c:	cbnz	x2, 3cbb4 <ZSTD_decompressStream_simpleArgs@@Base+0x40c>
   3cba0:	mov	x0, #0xffffffffffffffb8    	// #-72
   3cba4:	stp	xzr, xzr, [x3]
   3cba8:	stp	xzr, xzr, [x3, #16]
   3cbac:	str	xzr, [x3, #32]
   3cbb0:	ret
   3cbb4:	add	x2, x1, #0x8
   3cbb8:	stp	x1, x2, [x3, #24]
   3cbbc:	sub	x6, x0, #0x1
   3cbc0:	cmp	x0, #0x7
   3cbc4:	b.ls	3cc04 <ZSTD_decompressStream_simpleArgs@@Base+0x45c>  // b.plast
   3cbc8:	sub	x2, x0, #0x8
   3cbcc:	add	x4, x1, x2
   3cbd0:	ldr	x2, [x1, x2]
   3cbd4:	str	x2, [x3]
   3cbd8:	str	x4, [x3, #16]
   3cbdc:	ldrb	w2, [x1, x6]
   3cbe0:	clz	w1, w2
   3cbe4:	cmp	w2, #0x0
   3cbe8:	eor	w4, w1, #0x1f
   3cbec:	mov	w1, #0x8                   	// #8
   3cbf0:	sub	w1, w1, w4
   3cbf4:	csinv	x0, x0, xzr, ne  // ne = any
   3cbf8:	csel	w1, w1, wzr, ne  // ne = any
   3cbfc:	str	w1, [x3, #8]
   3cc00:	b	3cbb0 <ZSTD_decompressStream_simpleArgs@@Base+0x408>
   3cc04:	str	x1, [x3, #16]
   3cc08:	sub	x5, x0, #0x2
   3cc0c:	cmp	x5, #0x5
   3cc10:	ldrb	w7, [x1]
   3cc14:	str	x7, [x3]
   3cc18:	b.hi	3cc98 <ZSTD_decompressStream_simpleArgs@@Base+0x4f0>  // b.pmore
   3cc1c:	cmp	w5, #0x5
   3cc20:	b.hi	3cc98 <ZSTD_decompressStream_simpleArgs@@Base+0x4f0>  // b.pmore
   3cc24:	adrp	x4, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   3cc28:	add	x4, x4, #0xcd4
   3cc2c:	ldrb	w2, [x4, w5, uxtw]
   3cc30:	adr	x4, 3cc3c <ZSTD_decompressStream_simpleArgs@@Base+0x494>
   3cc34:	add	x2, x4, w2, sxtb #2
   3cc38:	br	x2
   3cc3c:	ldrb	w2, [x1, #6]
   3cc40:	add	x2, x7, x2, lsl #48
   3cc44:	str	x2, [x3]
   3cc48:	ldr	x4, [x3]
   3cc4c:	ldrb	w2, [x1, #5]
   3cc50:	add	x2, x4, x2, lsl #40
   3cc54:	str	x2, [x3]
   3cc58:	ldr	x4, [x3]
   3cc5c:	ldrb	w2, [x1, #4]
   3cc60:	add	x2, x4, x2, lsl #32
   3cc64:	str	x2, [x3]
   3cc68:	ldr	x4, [x3]
   3cc6c:	ldrb	w2, [x1, #3]
   3cc70:	add	x2, x4, x2, lsl #24
   3cc74:	str	x2, [x3]
   3cc78:	ldr	x4, [x3]
   3cc7c:	ldrb	w2, [x1, #2]
   3cc80:	add	x2, x4, x2, lsl #16
   3cc84:	str	x2, [x3]
   3cc88:	ldr	x4, [x3]
   3cc8c:	ldrb	w2, [x1, #1]
   3cc90:	add	x2, x4, x2, lsl #8
   3cc94:	str	x2, [x3]
   3cc98:	ldrb	w1, [x1, x6]
   3cc9c:	cbz	w1, 3ccc0 <ZSTD_decompressStream_simpleArgs@@Base+0x518>
   3cca0:	clz	w1, w1
   3cca4:	mov	w2, #0x8                   	// #8
   3cca8:	eor	w1, w1, #0x1f
   3ccac:	sub	w4, w2, w0
   3ccb0:	sub	w1, w2, w1
   3ccb4:	add	w1, w1, w4, lsl #3
   3ccb8:	str	w1, [x3, #8]
   3ccbc:	b	3cbb0 <ZSTD_decompressStream_simpleArgs@@Base+0x408>
   3ccc0:	mov	x0, #0xffffffffffffffec    	// #-20
   3ccc4:	str	wzr, [x3, #8]
   3ccc8:	b	3cbb0 <ZSTD_decompressStream_simpleArgs@@Base+0x408>
   3cccc:	stp	x29, x30, [sp, #-64]!
   3ccd0:	mov	x8, x2
   3ccd4:	mov	x29, sp
   3ccd8:	stp	x23, x24, [sp, #48]
   3ccdc:	add	x24, x2, x3
   3cce0:	ldr	x2, [x5]
   3cce4:	stp	x19, x20, [sp, #16]
   3cce8:	stp	x21, x22, [sp, #32]
   3ccec:	mov	x21, x3
   3ccf0:	add	x3, x0, x24
   3ccf4:	cmp	x1, x3
   3ccf8:	add	x14, x2, x8
   3ccfc:	ldr	x13, [sp, #72]
   3cd00:	b.cc	3cdc8 <ZSTD_decompressStream_simpleArgs@@Base+0x620>  // b.lo, b.ul, b.last
   3cd04:	cmp	x14, x6
   3cd08:	b.ls	3cd28 <ZSTD_decompressStream_simpleArgs@@Base+0x580>  // b.plast
   3cd0c:	mov	x24, #0xffffffffffffffec    	// #-20
   3cd10:	mov	x0, x24
   3cd14:	ldp	x19, x20, [sp, #16]
   3cd18:	ldp	x21, x22, [sp, #32]
   3cd1c:	ldp	x23, x24, [sp, #48]
   3cd20:	ldp	x29, x30, [sp], #64
   3cd24:	ret
   3cd28:	mov	x11, x4
   3cd2c:	mov	x12, x5
   3cd30:	add	x19, x0, x8
   3cd34:	sub	x22, x1, #0x20
   3cd38:	mov	x23, x7
   3cd3c:	sub	x20, x19, x4
   3cd40:	mov	x3, x8
   3cd44:	mov	x1, x22
   3cd48:	mov	w4, #0x0                   	// #0
   3cd4c:	bl	3c99c <ZSTD_decompressStream_simpleArgs@@Base+0x1f4>
   3cd50:	str	x14, [x12]
   3cd54:	sub	x0, x19, x23
   3cd58:	cmp	x0, x11
   3cd5c:	b.cs	3cdac <ZSTD_decompressStream_simpleArgs@@Base+0x604>  // b.hs, b.nlast
   3cd60:	ldr	x0, [sp, #64]
   3cd64:	sub	x0, x19, x0
   3cd68:	cmp	x0, x11
   3cd6c:	b.cc	3cd0c <ZSTD_decompressStream_simpleArgs@@Base+0x564>  // b.lo, b.ul, b.last
   3cd70:	sub	x20, x23, x20
   3cd74:	sub	x1, x13, x20
   3cd78:	add	x0, x1, x21
   3cd7c:	cmp	x13, x0
   3cd80:	b.cc	3cd94 <ZSTD_decompressStream_simpleArgs@@Base+0x5ec>  // b.lo, b.ul, b.last
   3cd84:	mov	x2, x21
   3cd88:	mov	x0, x19
   3cd8c:	bl	4490 <memmove@plt>
   3cd90:	b	3cd10 <ZSTD_decompressStream_simpleArgs@@Base+0x568>
   3cd94:	mov	x2, x20
   3cd98:	mov	x0, x19
   3cd9c:	sub	x21, x21, x20
   3cda0:	add	x19, x19, x20
   3cda4:	mov	x20, x23
   3cda8:	bl	4490 <memmove@plt>
   3cdac:	mov	x3, x21
   3cdb0:	mov	x2, x20
   3cdb4:	mov	x1, x22
   3cdb8:	mov	x0, x19
   3cdbc:	mov	w4, #0x1                   	// #1
   3cdc0:	bl	3c99c <ZSTD_decompressStream_simpleArgs@@Base+0x1f4>
   3cdc4:	b	3cd10 <ZSTD_decompressStream_simpleArgs@@Base+0x568>
   3cdc8:	mov	x24, #0xffffffffffffffba    	// #-70
   3cdcc:	b	3cd10 <ZSTD_decompressStream_simpleArgs@@Base+0x568>
   3cdd0:	sub	sp, sp, #0x220
   3cdd4:	mov	x8, x0
   3cdd8:	stp	x29, x30, [sp, #16]
   3cddc:	add	x29, sp, #0x10
   3cde0:	str	x1, [sp, #112]
   3cde4:	stp	x21, x22, [sp, #48]
   3cde8:	ldr	x21, [x0, #28952]
   3cdec:	stp	x19, x20, [sp, #32]
   3cdf0:	ldr	x0, [sp, #112]
   3cdf4:	stp	x23, x24, [sp, #64]
   3cdf8:	add	x0, x0, x2
   3cdfc:	stp	x25, x26, [sp, #80]
   3ce00:	ldr	x2, [x8, #28984]
   3ce04:	stp	x27, x28, [sp, #96]
   3ce08:	str	w5, [sp, #124]
   3ce0c:	str	x0, [sp, #128]
   3ce10:	add	x0, x21, x2
   3ce14:	str	x0, [sp, #136]
   3ce18:	mov	w0, w5
   3ce1c:	str	x21, [sp, #256]
   3ce20:	cbz	w0, 3d800 <ZSTD_decompressStream_simpleArgs@@Base+0x1058>
   3ce24:	add	x23, x8, #0x4, lsl #12
   3ce28:	add	x25, sp, #0x198
   3ce2c:	ldr	x0, [x8, #28760]
   3ce30:	str	x0, [sp, #152]
   3ce34:	mov	w0, #0x1                   	// #1
   3ce38:	mov	x1, x3
   3ce3c:	ldr	x22, [x8, #28752]
   3ce40:	mov	x2, x4
   3ce44:	ldr	x24, [x8, #28768]
   3ce48:	str	w0, [x23, #12460]
   3ce4c:	ldr	w0, [x23, #10300]
   3ce50:	str	x0, [sp, #496]
   3ce54:	ldr	w0, [x23, #10304]
   3ce58:	str	x0, [sp, #504]
   3ce5c:	ldr	w0, [x23, #10308]
   3ce60:	str	x0, [sp, #512]
   3ce64:	ldr	x0, [sp, #112]
   3ce68:	str	x22, [sp, #520]
   3ce6c:	str	x24, [sp, #528]
   3ce70:	sub	x0, x0, x22
   3ce74:	str	x0, [sp, #536]
   3ce78:	mov	x0, x25
   3ce7c:	bl	3cb94 <ZSTD_decompressStream_simpleArgs@@Base+0x3ec>
   3ce80:	cmn	x0, #0x78
   3ce84:	b.hi	3d190 <ZSTD_decompressStream_simpleArgs@@Base+0x9e8>  // b.pmore
   3ce88:	ldr	w0, [sp, #124]
   3ce8c:	mov	w20, #0x4                   	// #4
   3ce90:	ldr	x2, [x8]
   3ce94:	cmp	w0, #0x4
   3ce98:	csel	w0, w0, w20, le
   3ce9c:	mov	x1, x25
   3cea0:	str	w0, [sp, #160]
   3cea4:	add	x0, x25, #0x28
   3cea8:	bl	3cb58 <ZSTD_decompressStream_simpleArgs@@Base+0x3b0>
   3ceac:	mov	w20, #0x0                   	// #0
   3ceb0:	ldr	x2, [x8, #16]
   3ceb4:	mov	x1, x25
   3ceb8:	add	x0, x25, #0x38
   3cebc:	bl	3cb58 <ZSTD_decompressStream_simpleArgs@@Base+0x3b0>
   3cec0:	ldr	x2, [x8, #8]
   3cec4:	mov	x1, x25
   3cec8:	add	x0, x25, #0x48
   3cecc:	bl	3cb58 <ZSTD_decompressStream_simpleArgs@@Base+0x3b0>
   3ced0:	add	x10, sp, #0x1a0
   3ced4:	add	x8, sp, #0x118
   3ced8:	str	x8, [sp, #144]
   3cedc:	mov	x0, x25
   3cee0:	bl	3c848 <ZSTD_decompressStream_simpleArgs@@Base+0xa0>
   3cee4:	cmp	w0, #0x2
   3cee8:	ldr	w0, [sp, #160]
   3ceec:	b.hi	3d188 <ZSTD_decompressStream_simpleArgs@@Base+0x9e0>  // b.pmore
   3cef0:	cmp	w0, w20
   3cef4:	b.gt	3cfc4 <ZSTD_decompressStream_simpleArgs@@Base+0x81c>
   3cef8:	add	x0, sp, #0x1a0
   3cefc:	str	x0, [sp, #192]
   3cf00:	ldr	x0, [sp, #128]
   3cf04:	ldr	x19, [sp, #112]
   3cf08:	sub	x0, x0, #0x20
   3cf0c:	str	x0, [sp, #200]
   3cf10:	add	x0, sp, #0x110
   3cf14:	str	x0, [sp, #208]
   3cf18:	add	x0, sp, #0x108
   3cf1c:	str	x0, [sp, #216]
   3cf20:	add	x0, sp, #0x100
   3cf24:	str	x0, [sp, #224]
   3cf28:	mov	x0, x25
   3cf2c:	bl	3c848 <ZSTD_decompressStream_simpleArgs@@Base+0xa0>
   3cf30:	cmp	w0, #0x2
   3cf34:	ldr	w0, [sp, #124]
   3cf38:	b.hi	3d5d0 <ZSTD_decompressStream_simpleArgs@@Base+0xe28>  // b.pmore
   3cf3c:	cmp	w0, w20
   3cf40:	b.gt	3d1b8 <ZSTD_decompressStream_simpleArgs@@Base+0xa10>
   3cf44:	ldr	w0, [sp, #160]
   3cf48:	add	x26, sp, #0x110
   3cf4c:	add	x27, sp, #0x108
   3cf50:	add	x28, sp, #0x100
   3cf54:	sub	w20, w20, w0
   3cf58:	ldr	x0, [sp, #128]
   3cf5c:	sub	x0, x0, #0x20
   3cf60:	str	x0, [sp, #160]
   3cf64:	ldr	w0, [sp, #124]
   3cf68:	ldr	x7, [sp, #256]
   3cf6c:	cmp	w0, w20
   3cf70:	b.gt	3d5dc <ZSTD_decompressStream_simpleArgs@@Base+0xe34>
   3cf74:	ldr	x0, [sp, #496]
   3cf78:	str	w0, [x23, #10300]
   3cf7c:	ldr	x0, [sp, #504]
   3cf80:	str	w0, [x23, #10304]
   3cf84:	ldr	x0, [sp, #512]
   3cf88:	str	w0, [x23, #10308]
   3cf8c:	ldr	x0, [sp, #136]
   3cf90:	ldr	x1, [sp, #256]
   3cf94:	sub	x21, x0, x1
   3cf98:	ldr	x0, [sp, #128]
   3cf9c:	sub	x2, x0, x19
   3cfa0:	cmp	x21, x2
   3cfa4:	b.hi	3d808 <ZSTD_decompressStream_simpleArgs@@Base+0x1060>  // b.pmore
   3cfa8:	mov	x2, x21
   3cfac:	mov	x0, x19
   3cfb0:	bl	4460 <memcpy@plt>
   3cfb4:	ldr	x1, [sp, #112]
   3cfb8:	add	x0, x19, x21
   3cfbc:	sub	x21, x0, x1
   3cfc0:	b	3d194 <ZSTD_decompressStream_simpleArgs@@Base+0x9ec>
   3cfc4:	ldp	x2, x0, [sp, #448]
   3cfc8:	ldp	x3, x1, [sp, #472]
   3cfcc:	add	x2, x0, x2, lsl #3
   3cfd0:	ldr	x0, [sp, #488]
   3cfd4:	ldrb	w11, [x2, #2]
   3cfd8:	ldr	w9, [x2, #4]
   3cfdc:	add	x1, x0, x1, lsl #3
   3cfe0:	ldr	x0, [sp, #464]
   3cfe4:	ldrb	w13, [x1, #2]
   3cfe8:	ldr	w7, [x1, #4]
   3cfec:	add	x0, x3, x0, lsl #3
   3cff0:	add	w5, w11, w13
   3cff4:	ldrb	w12, [x0, #2]
   3cff8:	add	w5, w5, w12
   3cffc:	cbz	w12, 3d150 <ZSTD_decompressStream_simpleArgs@@Base+0x9a8>
   3d000:	ldr	w6, [x0, #4]
   3d004:	mov	w1, w12
   3d008:	mov	x0, x25
   3d00c:	bl	3c828 <ZSTD_decompressStream_simpleArgs@@Base+0x80>
   3d010:	add	x6, x6, x0
   3d014:	cmp	w12, #0x1
   3d018:	b.ne	3d164 <ZSTD_decompressStream_simpleArgs@@Base+0x9bc>  // b.any
   3d01c:	cmp	w9, #0x0
   3d020:	cinc	x1, x6, eq  // eq = none
   3d024:	ldr	x6, [sp, #496]
   3d028:	cbz	x1, 3d058 <ZSTD_decompressStream_simpleArgs@@Base+0x8b0>
   3d02c:	cmp	x1, #0x3
   3d030:	b.ne	3d158 <ZSTD_decompressStream_simpleArgs@@Base+0x9b0>  // b.any
   3d034:	sub	x0, x6, #0x1
   3d038:	cmp	x0, #0x0
   3d03c:	cinc	x0, x0, eq  // eq = none
   3d040:	cmp	x1, #0x1
   3d044:	b.eq	3d050 <ZSTD_decompressStream_simpleArgs@@Base+0x8a8>  // b.none
   3d048:	ldr	x1, [sp, #504]
   3d04c:	str	x1, [sp, #512]
   3d050:	stp	x0, x6, [sp, #496]
   3d054:	mov	x6, x0
   3d058:	mov	w7, w7
   3d05c:	cbz	w13, 3d178 <ZSTD_decompressStream_simpleArgs@@Base+0x9d0>
   3d060:	mov	w1, w13
   3d064:	mov	x0, x25
   3d068:	bl	3c828 <ZSTD_decompressStream_simpleArgs@@Base+0x80>
   3d06c:	add	x7, x7, x0
   3d070:	cmp	w5, #0x1e
   3d074:	b.ls	3d080 <ZSTD_decompressStream_simpleArgs@@Base+0x8d8>  // b.plast
   3d078:	mov	x0, x25
   3d07c:	bl	3c848 <ZSTD_decompressStream_simpleArgs@@Base+0xa0>
   3d080:	mov	w9, w9
   3d084:	cbz	w11, 3d180 <ZSTD_decompressStream_simpleArgs@@Base+0x9d8>
   3d088:	mov	w1, w11
   3d08c:	mov	x0, x25
   3d090:	bl	3c828 <ZSTD_decompressStream_simpleArgs@@Base+0x80>
   3d094:	add	x9, x9, x0
   3d098:	add	w20, w20, #0x1
   3d09c:	ldr	x0, [sp, #536]
   3d0a0:	ldr	x5, [sp, #520]
   3d0a4:	add	x0, x9, x0
   3d0a8:	ldr	x1, [sp, #528]
   3d0ac:	cmp	x0, x6
   3d0b0:	csel	x5, x5, x1, cs  // cs = hs, nlast
   3d0b4:	sub	x1, x0, x6
   3d0b8:	add	x0, x7, x0
   3d0bc:	add	x5, x5, x1
   3d0c0:	str	x0, [sp, #536]
   3d0c4:	ldr	x0, [sp, #448]
   3d0c8:	ldr	x1, [sp, #456]
   3d0cc:	lsl	x2, x0, #3
   3d0d0:	add	x0, x1, x0, lsl #3
   3d0d4:	ldrh	w11, [x1, x2]
   3d0d8:	ldrb	w1, [x0, #3]
   3d0dc:	mov	x0, x25
   3d0e0:	bl	3c7fc <ZSTD_decompressStream_simpleArgs@@Base+0x54>
   3d0e4:	add	x11, x0, w11, uxth
   3d0e8:	ldp	x0, x1, [sp, #480]
   3d0ec:	str	x11, [sp, #448]
   3d0f0:	lsl	x2, x0, #3
   3d0f4:	add	x0, x1, x0, lsl #3
   3d0f8:	ldrh	w11, [x1, x2]
   3d0fc:	ldrb	w1, [x0, #3]
   3d100:	mov	x0, x25
   3d104:	bl	3c7fc <ZSTD_decompressStream_simpleArgs@@Base+0x54>
   3d108:	add	x11, x0, w11, uxth
   3d10c:	ldp	x0, x1, [sp, #464]
   3d110:	str	x11, [sp, #480]
   3d114:	lsl	x2, x0, #3
   3d118:	add	x0, x1, x0, lsl #3
   3d11c:	ldrh	w11, [x1, x2]
   3d120:	ldrb	w1, [x0, #3]
   3d124:	mov	x0, x25
   3d128:	bl	3c7fc <ZSTD_decompressStream_simpleArgs@@Base+0x54>
   3d12c:	prfm	pldl1keep, [x5]
   3d130:	stp	x9, x7, [x8]
   3d134:	sub	x7, x7, #0x1
   3d138:	add	x11, x0, w11, uxth
   3d13c:	stp	x6, x5, [x8, #16]
   3d140:	add	x8, x8, #0x20
   3d144:	prfm	pldl1keep, [x5, x7]
   3d148:	str	x11, [sp, #464]
   3d14c:	b	3cedc <ZSTD_decompressStream_simpleArgs@@Base+0x734>
   3d150:	mov	x6, #0x0                   	// #0
   3d154:	b	3d01c <ZSTD_decompressStream_simpleArgs@@Base+0x874>
   3d158:	add	x0, x1, #0xa
   3d15c:	ldr	x0, [x10, x0, lsl #3]
   3d160:	b	3d038 <ZSTD_decompressStream_simpleArgs@@Base+0x890>
   3d164:	ldr	x0, [sp, #504]
   3d168:	str	x0, [sp, #512]
   3d16c:	ldr	x0, [sp, #496]
   3d170:	stp	x6, x0, [sp, #496]
   3d174:	b	3d058 <ZSTD_decompressStream_simpleArgs@@Base+0x8b0>
   3d178:	mov	x0, #0x0                   	// #0
   3d17c:	b	3d06c <ZSTD_decompressStream_simpleArgs@@Base+0x8c4>
   3d180:	mov	x0, #0x0                   	// #0
   3d184:	b	3d094 <ZSTD_decompressStream_simpleArgs@@Base+0x8ec>
   3d188:	cmp	w0, w20
   3d18c:	b.le	3cef8 <ZSTD_decompressStream_simpleArgs@@Base+0x750>
   3d190:	mov	x21, #0xffffffffffffffec    	// #-20
   3d194:	mov	x0, x21
   3d198:	ldp	x29, x30, [sp, #16]
   3d19c:	ldp	x19, x20, [sp, #32]
   3d1a0:	ldp	x21, x22, [sp, #48]
   3d1a4:	ldp	x23, x24, [sp, #64]
   3d1a8:	ldp	x25, x26, [sp, #80]
   3d1ac:	ldp	x27, x28, [sp, #96]
   3d1b0:	add	sp, sp, #0x220
   3d1b4:	ret
   3d1b8:	ldp	x2, x0, [sp, #448]
   3d1bc:	ldp	x3, x1, [sp, #472]
   3d1c0:	add	x2, x0, x2, lsl #3
   3d1c4:	ldr	x0, [sp, #488]
   3d1c8:	ldrb	w6, [x2, #2]
   3d1cc:	ldr	w7, [x2, #4]
   3d1d0:	add	x1, x0, x1, lsl #3
   3d1d4:	ldr	x0, [sp, #464]
   3d1d8:	ldrb	w10, [x1, #2]
   3d1dc:	ldr	w9, [x1, #4]
   3d1e0:	add	x0, x3, x0, lsl #3
   3d1e4:	add	w8, w6, w10
   3d1e8:	ldrb	w5, [x0, #2]
   3d1ec:	add	w8, w8, w5
   3d1f0:	cbz	w5, 3d3e0 <ZSTD_decompressStream_simpleArgs@@Base+0xc38>
   3d1f4:	ldr	w26, [x0, #4]
   3d1f8:	mov	w1, w5
   3d1fc:	mov	x0, x25
   3d200:	bl	3c828 <ZSTD_decompressStream_simpleArgs@@Base+0x80>
   3d204:	add	x26, x26, x0
   3d208:	cmp	w5, #0x1
   3d20c:	b.ne	3d3f8 <ZSTD_decompressStream_simpleArgs@@Base+0xc50>  // b.any
   3d210:	cmp	w7, #0x0
   3d214:	cinc	x1, x26, eq  // eq = none
   3d218:	ldr	x26, [sp, #496]
   3d21c:	cbz	x1, 3d24c <ZSTD_decompressStream_simpleArgs@@Base+0xaa4>
   3d220:	cmp	x1, #0x3
   3d224:	b.ne	3d3e8 <ZSTD_decompressStream_simpleArgs@@Base+0xc40>  // b.any
   3d228:	sub	x0, x26, #0x1
   3d22c:	cmp	x0, #0x0
   3d230:	cinc	x0, x0, eq  // eq = none
   3d234:	cmp	x1, #0x1
   3d238:	b.eq	3d244 <ZSTD_decompressStream_simpleArgs@@Base+0xa9c>  // b.none
   3d23c:	ldr	x1, [sp, #504]
   3d240:	str	x1, [sp, #512]
   3d244:	stp	x0, x26, [sp, #496]
   3d248:	mov	x26, x0
   3d24c:	mov	w9, w9
   3d250:	cbz	w10, 3d40c <ZSTD_decompressStream_simpleArgs@@Base+0xc64>
   3d254:	mov	w1, w10
   3d258:	mov	x0, x25
   3d25c:	bl	3c828 <ZSTD_decompressStream_simpleArgs@@Base+0x80>
   3d260:	add	x0, x9, x0
   3d264:	str	x0, [sp, #168]
   3d268:	cmp	w8, #0x1e
   3d26c:	b.ls	3d278 <ZSTD_decompressStream_simpleArgs@@Base+0xad0>  // b.plast
   3d270:	mov	x0, x25
   3d274:	bl	3c848 <ZSTD_decompressStream_simpleArgs@@Base+0xa0>
   3d278:	mov	w7, w7
   3d27c:	cbz	w6, 3d414 <ZSTD_decompressStream_simpleArgs@@Base+0xc6c>
   3d280:	mov	w1, w6
   3d284:	mov	x0, x25
   3d288:	bl	3c828 <ZSTD_decompressStream_simpleArgs@@Base+0x80>
   3d28c:	add	x0, x7, x0
   3d290:	str	x0, [sp, #176]
   3d294:	ldr	x0, [sp, #536]
   3d298:	ldr	x1, [sp, #176]
   3d29c:	ldr	x28, [sp, #520]
   3d2a0:	add	x0, x1, x0
   3d2a4:	ldr	x1, [sp, #528]
   3d2a8:	cmp	x0, x26
   3d2ac:	csel	x28, x28, x1, cs  // cs = hs, nlast
   3d2b0:	sub	x1, x0, x26
   3d2b4:	add	x28, x28, x1
   3d2b8:	ldr	x1, [sp, #168]
   3d2bc:	add	x0, x1, x0
   3d2c0:	str	x0, [sp, #536]
   3d2c4:	ldr	x0, [sp, #448]
   3d2c8:	ldr	x1, [sp, #456]
   3d2cc:	lsl	x2, x0, #3
   3d2d0:	add	x0, x1, x0, lsl #3
   3d2d4:	ldrh	w5, [x1, x2]
   3d2d8:	ldrb	w1, [x0, #3]
   3d2dc:	mov	x0, x25
   3d2e0:	bl	3c7fc <ZSTD_decompressStream_simpleArgs@@Base+0x54>
   3d2e4:	add	x5, x0, w5, uxth
   3d2e8:	ldp	x0, x1, [sp, #480]
   3d2ec:	str	x5, [sp, #448]
   3d2f0:	lsl	x2, x0, #3
   3d2f4:	add	x0, x1, x0, lsl #3
   3d2f8:	ldrh	w5, [x1, x2]
   3d2fc:	ldrb	w1, [x0, #3]
   3d300:	mov	x0, x25
   3d304:	bl	3c7fc <ZSTD_decompressStream_simpleArgs@@Base+0x54>
   3d308:	add	x5, x0, w5, uxth
   3d30c:	ldp	x0, x1, [sp, #464]
   3d310:	str	x5, [sp, #480]
   3d314:	lsl	x2, x0, #3
   3d318:	add	x0, x1, x0, lsl #3
   3d31c:	ldrh	w5, [x1, x2]
   3d320:	ldrb	w1, [x0, #3]
   3d324:	mov	x0, x25
   3d328:	bl	3c7fc <ZSTD_decompressStream_simpleArgs@@Base+0x54>
   3d32c:	add	x5, x0, w5, uxth
   3d330:	ubfiz	x0, x20, #5, #2
   3d334:	str	x0, [sp, #184]
   3d338:	ldr	x0, [sp, #144]
   3d33c:	ubfiz	x1, x20, #5, #2
   3d340:	ldr	x7, [sp, #256]
   3d344:	add	x27, x0, x1
   3d348:	ldr	x2, [x0, x1]
   3d34c:	str	x19, [sp, #264]
   3d350:	ldp	x3, x4, [x27, #8]
   3d354:	add	x6, x19, x2
   3d358:	ldr	x1, [sp, #200]
   3d35c:	str	x5, [sp, #464]
   3d360:	add	x9, x7, x2
   3d364:	add	x21, x2, x3
   3d368:	sub	x8, x6, x4
   3d36c:	add	x0, x19, x21
   3d370:	str	x8, [sp, #272]
   3d374:	cmp	x0, x1
   3d378:	ldr	x0, [sp, #136]
   3d37c:	ccmp	x0, x9, #0x0, ls  // ls = plast
   3d380:	b.cs	3d41c <ZSTD_decompressStream_simpleArgs@@Base+0xc74>  // b.hs, b.nlast
   3d384:	ldp	x1, x6, [sp, #128]
   3d388:	mov	x7, x22
   3d38c:	ldr	x5, [sp, #224]
   3d390:	ldr	x0, [sp, #152]
   3d394:	stp	x0, x24, [sp]
   3d398:	mov	x0, x19
   3d39c:	bl	3cccc <ZSTD_decompressStream_simpleArgs@@Base+0x524>
   3d3a0:	mov	x21, x0
   3d3a4:	cmn	x21, #0x78
   3d3a8:	b.hi	3d194 <ZSTD_decompressStream_simpleArgs@@Base+0x9ec>  // b.pmore
   3d3ac:	ldp	x0, x2, [sp, #168]
   3d3b0:	add	x19, x19, x21
   3d3b4:	ldr	x1, [sp, #184]
   3d3b8:	add	w20, w20, #0x1
   3d3bc:	prfm	pldl1keep, [x28]
   3d3c0:	sub	x0, x0, #0x1
   3d3c4:	prfm	pldl1keep, [x28, x0]
   3d3c8:	ldr	x0, [sp, #144]
   3d3cc:	str	x2, [x0, x1]
   3d3d0:	ldr	x0, [sp, #168]
   3d3d4:	stp	x0, x26, [x27, #8]
   3d3d8:	str	x28, [x27, #24]
   3d3dc:	b	3cf28 <ZSTD_decompressStream_simpleArgs@@Base+0x780>
   3d3e0:	mov	x26, #0x0                   	// #0
   3d3e4:	b	3d210 <ZSTD_decompressStream_simpleArgs@@Base+0xa68>
   3d3e8:	ldr	x2, [sp, #192]
   3d3ec:	add	x0, x1, #0xa
   3d3f0:	ldr	x0, [x2, x0, lsl #3]
   3d3f4:	b	3d22c <ZSTD_decompressStream_simpleArgs@@Base+0xa84>
   3d3f8:	ldr	x0, [sp, #504]
   3d3fc:	str	x0, [sp, #512]
   3d400:	ldr	x0, [sp, #496]
   3d404:	stp	x26, x0, [sp, #496]
   3d408:	b	3d24c <ZSTD_decompressStream_simpleArgs@@Base+0xaa4>
   3d40c:	mov	x0, #0x0                   	// #0
   3d410:	b	3d260 <ZSTD_decompressStream_simpleArgs@@Base+0xab8>
   3d414:	mov	x0, #0x0                   	// #0
   3d418:	b	3d28c <ZSTD_decompressStream_simpleArgs@@Base+0xae4>
   3d41c:	ldp	x0, x1, [x7]
   3d420:	stp	x0, x1, [x19]
   3d424:	cmp	x2, #0x10
   3d428:	b.hi	3d490 <ZSTD_decompressStream_simpleArgs@@Base+0xce8>  // b.pmore
   3d42c:	stp	x9, x6, [sp, #256]
   3d430:	sub	x0, x6, x22
   3d434:	cmp	x4, x0
   3d438:	b.hi	3d4d4 <ZSTD_decompressStream_simpleArgs@@Base+0xd2c>  // b.pmore
   3d43c:	cmp	x4, #0xf
   3d440:	b.ls	3d538 <ZSTD_decompressStream_simpleArgs@@Base+0xd90>  // b.plast
   3d444:	ldp	x0, x1, [sp, #264]
   3d448:	ldp	x6, x7, [x1]
   3d44c:	stp	x6, x7, [x0]
   3d450:	add	x3, x0, x3
   3d454:	ldp	x6, x7, [x1, #16]
   3d458:	stp	x6, x7, [x0, #16]
   3d45c:	add	x0, x0, #0x20
   3d460:	cmp	x3, x0
   3d464:	b.ls	3d3a4 <ZSTD_decompressStream_simpleArgs@@Base+0xbfc>  // b.plast
   3d468:	add	x1, x1, #0x20
   3d46c:	ldp	x6, x7, [x1]
   3d470:	stp	x6, x7, [x0]
   3d474:	add	x0, x0, #0x20
   3d478:	ldp	x6, x7, [x1, #16]
   3d47c:	stp	x6, x7, [x0, #-16]
   3d480:	add	x1, x1, #0x20
   3d484:	cmp	x3, x0
   3d488:	b.hi	3d46c <ZSTD_decompressStream_simpleArgs@@Base+0xcc4>  // b.pmore
   3d48c:	b	3d3a4 <ZSTD_decompressStream_simpleArgs@@Base+0xbfc>
   3d490:	ldp	x0, x1, [x7, #16]
   3d494:	stp	x0, x1, [x19, #16]
   3d498:	add	x2, x19, #0x30
   3d49c:	ldp	x0, x1, [x7, #32]
   3d4a0:	stp	x0, x1, [x19, #32]
   3d4a4:	cmp	x6, x2
   3d4a8:	b.ls	3d42c <ZSTD_decompressStream_simpleArgs@@Base+0xc84>  // b.plast
   3d4ac:	add	x7, x7, #0x30
   3d4b0:	ldp	x0, x1, [x7]
   3d4b4:	stp	x0, x1, [x2]
   3d4b8:	add	x2, x2, #0x20
   3d4bc:	ldp	x0, x1, [x7, #16]
   3d4c0:	stp	x0, x1, [x2, #-16]
   3d4c4:	add	x7, x7, #0x20
   3d4c8:	cmp	x2, x6
   3d4cc:	b.cc	3d4b0 <ZSTD_decompressStream_simpleArgs@@Base+0xd08>  // b.lo, b.ul, b.last
   3d4d0:	b	3d42c <ZSTD_decompressStream_simpleArgs@@Base+0xc84>
   3d4d4:	ldr	x0, [sp, #152]
   3d4d8:	sub	x0, x6, x0
   3d4dc:	cmp	x4, x0
   3d4e0:	b.hi	3d190 <ZSTD_decompressStream_simpleArgs@@Base+0x9e8>  // b.pmore
   3d4e4:	sub	x1, x8, x22
   3d4e8:	add	x1, x24, x1
   3d4ec:	str	x1, [sp, #272]
   3d4f0:	add	x0, x1, x3
   3d4f4:	cmp	x24, x0
   3d4f8:	b.cc	3d50c <ZSTD_decompressStream_simpleArgs@@Base+0xd64>  // b.lo, b.ul, b.last
   3d4fc:	mov	x2, x3
   3d500:	mov	x0, x6
   3d504:	bl	4490 <memmove@plt>
   3d508:	b	3d3a4 <ZSTD_decompressStream_simpleArgs@@Base+0xbfc>
   3d50c:	sub	x2, x22, x8
   3d510:	mov	x0, x6
   3d514:	stp	x2, x3, [sp, #232]
   3d518:	str	x4, [sp, #248]
   3d51c:	bl	4490 <memmove@plt>
   3d520:	ldp	x2, x3, [sp, #232]
   3d524:	ldr	x4, [sp, #248]
   3d528:	add	x6, x0, x2
   3d52c:	sub	x3, x3, x2
   3d530:	stp	x6, x22, [sp, #264]
   3d534:	b	3d43c <ZSTD_decompressStream_simpleArgs@@Base+0xc94>
   3d538:	ldp	x1, x0, [sp, #208]
   3d53c:	mov	x2, x4
   3d540:	str	x3, [sp, #232]
   3d544:	bl	3c8f0 <ZSTD_decompressStream_simpleArgs@@Base+0x148>
   3d548:	ldr	x3, [sp, #232]
   3d54c:	cmp	x3, #0x8
   3d550:	b.ls	3d3a4 <ZSTD_decompressStream_simpleArgs@@Base+0xbfc>  // b.plast
   3d554:	ldp	x0, x1, [sp, #264]
   3d558:	sub	x3, x3, #0x8
   3d55c:	sub	x2, x0, x1
   3d560:	add	x3, x0, x3
   3d564:	cmp	x2, #0xf
   3d568:	b.gt	3d58c <ZSTD_decompressStream_simpleArgs@@Base+0xde4>
   3d56c:	mov	x2, #0x0                   	// #0
   3d570:	ldr	x4, [x1, x2]
   3d574:	str	x4, [x0, x2]
   3d578:	add	x2, x2, #0x8
   3d57c:	add	x4, x0, x2
   3d580:	cmp	x3, x4
   3d584:	b.hi	3d570 <ZSTD_decompressStream_simpleArgs@@Base+0xdc8>  // b.pmore
   3d588:	b	3d3a4 <ZSTD_decompressStream_simpleArgs@@Base+0xbfc>
   3d58c:	ldp	x6, x7, [x1]
   3d590:	stp	x6, x7, [x0]
   3d594:	add	x0, x0, #0x20
   3d598:	ldp	x6, x7, [x1, #16]
   3d59c:	stp	x6, x7, [x0, #-16]
   3d5a0:	cmp	x3, x0
   3d5a4:	b.ls	3d3a4 <ZSTD_decompressStream_simpleArgs@@Base+0xbfc>  // b.plast
   3d5a8:	add	x1, x1, #0x20
   3d5ac:	ldp	x6, x7, [x1]
   3d5b0:	stp	x6, x7, [x0]
   3d5b4:	add	x0, x0, #0x20
   3d5b8:	ldp	x6, x7, [x1, #16]
   3d5bc:	stp	x6, x7, [x0, #-16]
   3d5c0:	add	x1, x1, #0x20
   3d5c4:	cmp	x3, x0
   3d5c8:	b.hi	3d5ac <ZSTD_decompressStream_simpleArgs@@Base+0xe04>  // b.pmore
   3d5cc:	b	3d3a4 <ZSTD_decompressStream_simpleArgs@@Base+0xbfc>
   3d5d0:	cmp	w0, w20
   3d5d4:	b.gt	3d190 <ZSTD_decompressStream_simpleArgs@@Base+0x9e8>
   3d5d8:	b	3cf44 <ZSTD_decompressStream_simpleArgs@@Base+0x79c>
   3d5dc:	ldr	x0, [sp, #144]
   3d5e0:	ubfiz	x1, x20, #5, #2
   3d5e4:	ldr	x2, [sp, #144]
   3d5e8:	add	x0, x0, x1
   3d5ec:	ldp	x25, x4, [x0, #8]
   3d5f0:	ldr	x2, [x2, x1]
   3d5f4:	ldr	x1, [sp, #160]
   3d5f8:	add	x6, x19, x2
   3d5fc:	add	x21, x2, x25
   3d600:	sub	x8, x6, x4
   3d604:	add	x0, x19, x21
   3d608:	stp	x19, x8, [sp, #264]
   3d60c:	cmp	x0, x1
   3d610:	ldr	x0, [sp, #136]
   3d614:	add	x9, x7, x2
   3d618:	ccmp	x0, x9, #0x0, ls  // ls = plast
   3d61c:	b.cs	3d658 <ZSTD_decompressStream_simpleArgs@@Base+0xeb0>  // b.hs, b.nlast
   3d620:	ldp	x1, x6, [sp, #128]
   3d624:	mov	x7, x22
   3d628:	ldr	x0, [sp, #152]
   3d62c:	stp	x0, x24, [sp]
   3d630:	mov	x5, x28
   3d634:	mov	x3, x25
   3d638:	mov	x0, x19
   3d63c:	bl	3cccc <ZSTD_decompressStream_simpleArgs@@Base+0x524>
   3d640:	mov	x21, x0
   3d644:	cmn	x21, #0x78
   3d648:	b.hi	3d194 <ZSTD_decompressStream_simpleArgs@@Base+0x9ec>  // b.pmore
   3d64c:	add	x19, x19, x21
   3d650:	add	w20, w20, #0x1
   3d654:	b	3cf64 <ZSTD_decompressStream_simpleArgs@@Base+0x7bc>
   3d658:	ldp	x0, x1, [x7]
   3d65c:	stp	x0, x1, [x19]
   3d660:	cmp	x2, #0x10
   3d664:	b.hi	3d6cc <ZSTD_decompressStream_simpleArgs@@Base+0xf24>  // b.pmore
   3d668:	stp	x9, x6, [sp, #256]
   3d66c:	sub	x0, x6, x22
   3d670:	cmp	x4, x0
   3d674:	b.hi	3d710 <ZSTD_decompressStream_simpleArgs@@Base+0xf68>  // b.pmore
   3d678:	cmp	x4, #0xf
   3d67c:	b.ls	3d76c <ZSTD_decompressStream_simpleArgs@@Base+0xfc4>  // b.plast
   3d680:	ldp	x0, x1, [sp, #264]
   3d684:	ldp	x6, x7, [x1]
   3d688:	stp	x6, x7, [x0]
   3d68c:	add	x3, x0, x25
   3d690:	ldp	x6, x7, [x1, #16]
   3d694:	stp	x6, x7, [x0, #16]
   3d698:	add	x0, x0, #0x20
   3d69c:	cmp	x3, x0
   3d6a0:	b.ls	3d644 <ZSTD_decompressStream_simpleArgs@@Base+0xe9c>  // b.plast
   3d6a4:	add	x1, x1, #0x20
   3d6a8:	ldp	x6, x7, [x1]
   3d6ac:	stp	x6, x7, [x0]
   3d6b0:	add	x0, x0, #0x20
   3d6b4:	ldp	x6, x7, [x1, #16]
   3d6b8:	stp	x6, x7, [x0, #-16]
   3d6bc:	add	x1, x1, #0x20
   3d6c0:	cmp	x3, x0
   3d6c4:	b.hi	3d6a8 <ZSTD_decompressStream_simpleArgs@@Base+0xf00>  // b.pmore
   3d6c8:	b	3d644 <ZSTD_decompressStream_simpleArgs@@Base+0xe9c>
   3d6cc:	ldp	x0, x1, [x7, #16]
   3d6d0:	stp	x0, x1, [x19, #16]
   3d6d4:	add	x2, x19, #0x30
   3d6d8:	ldp	x0, x1, [x7, #32]
   3d6dc:	stp	x0, x1, [x19, #32]
   3d6e0:	cmp	x6, x2
   3d6e4:	b.ls	3d668 <ZSTD_decompressStream_simpleArgs@@Base+0xec0>  // b.plast
   3d6e8:	add	x7, x7, #0x30
   3d6ec:	ldp	x0, x1, [x7]
   3d6f0:	stp	x0, x1, [x2]
   3d6f4:	add	x2, x2, #0x20
   3d6f8:	ldp	x0, x1, [x7, #16]
   3d6fc:	stp	x0, x1, [x2, #-16]
   3d700:	add	x7, x7, #0x20
   3d704:	cmp	x6, x2
   3d708:	b.hi	3d6ec <ZSTD_decompressStream_simpleArgs@@Base+0xf44>  // b.pmore
   3d70c:	b	3d668 <ZSTD_decompressStream_simpleArgs@@Base+0xec0>
   3d710:	ldr	x0, [sp, #152]
   3d714:	sub	x0, x6, x0
   3d718:	cmp	x4, x0
   3d71c:	b.hi	3d190 <ZSTD_decompressStream_simpleArgs@@Base+0x9e8>  // b.pmore
   3d720:	sub	x1, x8, x22
   3d724:	add	x1, x24, x1
   3d728:	str	x1, [sp, #272]
   3d72c:	add	x0, x1, x25
   3d730:	cmp	x24, x0
   3d734:	b.cc	3d748 <ZSTD_decompressStream_simpleArgs@@Base+0xfa0>  // b.lo, b.ul, b.last
   3d738:	mov	x2, x25
   3d73c:	mov	x0, x6
   3d740:	bl	4490 <memmove@plt>
   3d744:	b	3d644 <ZSTD_decompressStream_simpleArgs@@Base+0xe9c>
   3d748:	sub	x2, x22, x8
   3d74c:	mov	x0, x6
   3d750:	stp	x2, x4, [sp, #168]
   3d754:	bl	4490 <memmove@plt>
   3d758:	ldp	x2, x4, [sp, #168]
   3d75c:	add	x6, x0, x2
   3d760:	sub	x25, x25, x2
   3d764:	stp	x6, x22, [sp, #264]
   3d768:	b	3d678 <ZSTD_decompressStream_simpleArgs@@Base+0xed0>
   3d76c:	mov	x2, x4
   3d770:	mov	x1, x26
   3d774:	mov	x0, x27
   3d778:	bl	3c8f0 <ZSTD_decompressStream_simpleArgs@@Base+0x148>
   3d77c:	cmp	x25, #0x8
   3d780:	b.ls	3d644 <ZSTD_decompressStream_simpleArgs@@Base+0xe9c>  // b.plast
   3d784:	ldp	x0, x1, [sp, #264]
   3d788:	sub	x3, x25, #0x8
   3d78c:	sub	x2, x0, x1
   3d790:	add	x3, x0, x3
   3d794:	cmp	x2, #0xf
   3d798:	b.gt	3d7bc <ZSTD_decompressStream_simpleArgs@@Base+0x1014>
   3d79c:	mov	x2, #0x0                   	// #0
   3d7a0:	ldr	x4, [x1, x2]
   3d7a4:	str	x4, [x0, x2]
   3d7a8:	add	x2, x2, #0x8
   3d7ac:	add	x4, x0, x2
   3d7b0:	cmp	x3, x4
   3d7b4:	b.hi	3d7a0 <ZSTD_decompressStream_simpleArgs@@Base+0xff8>  // b.pmore
   3d7b8:	b	3d644 <ZSTD_decompressStream_simpleArgs@@Base+0xe9c>
   3d7bc:	ldp	x6, x7, [x1]
   3d7c0:	stp	x6, x7, [x0]
   3d7c4:	add	x0, x0, #0x20
   3d7c8:	ldp	x6, x7, [x1, #16]
   3d7cc:	stp	x6, x7, [x0, #-16]
   3d7d0:	cmp	x3, x0
   3d7d4:	b.ls	3d644 <ZSTD_decompressStream_simpleArgs@@Base+0xe9c>  // b.plast
   3d7d8:	add	x1, x1, #0x20
   3d7dc:	ldp	x6, x7, [x1]
   3d7e0:	stp	x6, x7, [x0]
   3d7e4:	add	x0, x0, #0x20
   3d7e8:	ldp	x6, x7, [x1, #16]
   3d7ec:	stp	x6, x7, [x0, #-16]
   3d7f0:	add	x1, x1, #0x20
   3d7f4:	cmp	x3, x0
   3d7f8:	b.hi	3d7dc <ZSTD_decompressStream_simpleArgs@@Base+0x1034>  // b.pmore
   3d7fc:	b	3d644 <ZSTD_decompressStream_simpleArgs@@Base+0xe9c>
   3d800:	ldr	x19, [sp, #112]
   3d804:	b	3cf8c <ZSTD_decompressStream_simpleArgs@@Base+0x7e4>
   3d808:	mov	x21, #0xffffffffffffffba    	// #-70
   3d80c:	b	3d194 <ZSTD_decompressStream_simpleArgs@@Base+0x9ec>
   3d810:	cmp	x1, #0x2
   3d814:	b.ls	3d850 <ZSTD_decompressStream_simpleArgs@@Base+0x10a8>  // b.plast
   3d818:	ldrb	w1, [x0, #2]
   3d81c:	ldrh	w0, [x0]
   3d820:	add	w1, w0, w1, lsl #16
   3d824:	and	w3, w1, #0x1
   3d828:	lsr	w0, w1, #3
   3d82c:	ubfx	x1, x1, #1, #2
   3d830:	stp	w1, w3, [x2]
   3d834:	cmp	w1, #0x1
   3d838:	str	w0, [x2, #8]
   3d83c:	b.eq	3d858 <ZSTD_decompressStream_simpleArgs@@Base+0x10b0>  // b.none
   3d840:	cmp	w1, #0x3
   3d844:	mov	x1, #0xffffffffffffffec    	// #-20
   3d848:	csel	x0, x0, x1, ne  // ne = any
   3d84c:	ret
   3d850:	mov	x0, #0xffffffffffffffb8    	// #-72
   3d854:	b	3d84c <ZSTD_decompressStream_simpleArgs@@Base+0x10a4>
   3d858:	mov	x0, #0x1                   	// #1
   3d85c:	b	3d84c <ZSTD_decompressStream_simpleArgs@@Base+0x10a4>
   3d860:	stp	x29, x30, [sp, #-80]!
   3d864:	cmp	x2, #0x2
   3d868:	mov	x29, sp
   3d86c:	stp	x19, x20, [sp, #16]
   3d870:	stp	x21, x22, [sp, #32]
   3d874:	stp	x23, x24, [sp, #48]
   3d878:	str	x25, [sp, #64]
   3d87c:	b.hi	3d8a0 <ZSTD_decompressStream_simpleArgs@@Base+0x10f8>  // b.pmore
   3d880:	mov	x23, #0xffffffffffffffec    	// #-20
   3d884:	mov	x0, x23
   3d888:	ldp	x19, x20, [sp, #16]
   3d88c:	ldp	x21, x22, [sp, #32]
   3d890:	ldp	x23, x24, [sp, #48]
   3d894:	ldr	x25, [sp, #64]
   3d898:	ldp	x29, x30, [sp], #80
   3d89c:	ret
   3d8a0:	ldrb	w19, [x1]
   3d8a4:	mov	x20, x0
   3d8a8:	and	w22, w19, #0x3
   3d8ac:	cmp	w22, #0x2
   3d8b0:	b.eq	3d918 <ZSTD_decompressStream_simpleArgs@@Base+0x1170>  // b.none
   3d8b4:	cmp	w22, #0x3
   3d8b8:	b.eq	3d90c <ZSTD_decompressStream_simpleArgs@@Base+0x1164>  // b.none
   3d8bc:	cmp	w22, #0x1
   3d8c0:	lsr	w0, w19, #2
   3d8c4:	b.ne	3da74 <ZSTD_decompressStream_simpleArgs@@Base+0x12cc>  // b.any
   3d8c8:	and	w0, w0, #0x3
   3d8cc:	cmp	w0, #0x1
   3d8d0:	b.eq	3db10 <ZSTD_decompressStream_simpleArgs@@Base+0x1368>  // b.none
   3d8d4:	cmp	w0, #0x3
   3d8d8:	b.eq	3db20 <ZSTD_decompressStream_simpleArgs@@Base+0x1378>  // b.none
   3d8dc:	ubfx	x19, x19, #3, #5
   3d8e0:	mov	x23, #0x1                   	// #1
   3d8e4:	ldrb	w1, [x1, x23]
   3d8e8:	mov	x0, #0x71d8                	// #29144
   3d8ec:	add	x3, x20, x0
   3d8f0:	add	x2, x19, #0x20
   3d8f4:	mov	x0, x3
   3d8f8:	add	x23, x23, #0x1
   3d8fc:	bl	4700 <memset@plt>
   3d900:	str	x0, [x20, #28952]
   3d904:	str	x19, [x20, #28984]
   3d908:	b	3d884 <ZSTD_decompressStream_simpleArgs@@Base+0x10dc>
   3d90c:	add	x0, x0, #0x4, lsl #12
   3d910:	ldr	w0, [x0, #12456]
   3d914:	cbz	w0, 3db4c <ZSTD_decompressStream_simpleArgs@@Base+0x13a4>
   3d918:	cmp	x2, #0x4
   3d91c:	b.ls	3d880 <ZSTD_decompressStream_simpleArgs@@Base+0x10d8>  // b.plast
   3d920:	ldr	w3, [x1]
   3d924:	ubfx	x19, x19, #2, #2
   3d928:	cmp	w19, #0x2
   3d92c:	lsr	w21, w3, #4
   3d930:	b.eq	3d9f4 <ZSTD_decompressStream_simpleArgs@@Base+0x124c>  // b.none
   3d934:	cmp	w19, #0x3
   3d938:	b.eq	3da08 <ZSTD_decompressStream_simpleArgs@@Base+0x1260>  // b.none
   3d93c:	eor	w19, w19, #0x1
   3d940:	and	x21, x21, #0x3ff
   3d944:	ubfx	x3, x3, #14, #10
   3d948:	mov	x0, #0x3                   	// #3
   3d94c:	add	x23, x0, x3
   3d950:	cmp	x23, x2
   3d954:	b.hi	3d880 <ZSTD_decompressStream_simpleArgs@@Base+0x10d8>  // b.pmore
   3d958:	add	x24, x20, #0x4, lsl #12
   3d95c:	ldr	w2, [x24, #12652]
   3d960:	cbz	w2, 3d988 <ZSTD_decompressStream_simpleArgs@@Base+0x11e0>
   3d964:	cmp	x21, #0x300
   3d968:	b.ls	3d988 <ZSTD_decompressStream_simpleArgs@@Base+0x11e0>  // b.plast
   3d96c:	ldr	x5, [x20, #24]
   3d970:	mov	x2, #0x0                   	// #0
   3d974:	mov	x4, #0x4040                	// #16448
   3d978:	prfm	pldl2keep, [x5, x2]
   3d97c:	add	x2, x2, #0x40
   3d980:	cmp	x2, x4
   3d984:	b.ne	3d978 <ZSTD_decompressStream_simpleArgs@@Base+0x11d0>  // b.any
   3d988:	mov	x6, #0x71d8                	// #29144
   3d98c:	ldr	w7, [x24, #12624]
   3d990:	add	x2, x1, x0
   3d994:	add	x25, x20, x6
   3d998:	cmp	w22, #0x3
   3d99c:	b.ne	3da3c <ZSTD_decompressStream_simpleArgs@@Base+0x1294>  // b.any
   3d9a0:	mov	w5, w7
   3d9a4:	mov	x1, x21
   3d9a8:	mov	x0, x25
   3d9ac:	ldr	x4, [x20, #24]
   3d9b0:	cbz	w19, 3da34 <ZSTD_decompressStream_simpleArgs@@Base+0x128c>
   3d9b4:	bl	39a84 <ZSTD_compress@@Base+0x2b238>
   3d9b8:	cmn	x0, #0x78
   3d9bc:	b.hi	3d880 <ZSTD_decompressStream_simpleArgs@@Base+0x10d8>  // b.pmore
   3d9c0:	str	x25, [x20, #28952]
   3d9c4:	mov	w0, #0x1                   	// #1
   3d9c8:	str	x21, [x20, #28984]
   3d9cc:	cmp	w22, #0x2
   3d9d0:	str	w0, [x24, #12456]
   3d9d4:	b.ne	3d9e4 <ZSTD_decompressStream_simpleArgs@@Base+0x123c>  // b.any
   3d9d8:	mov	x3, #0x2838                	// #10296
   3d9dc:	add	x0, x20, x3
   3d9e0:	str	x0, [x20, #24]
   3d9e4:	add	x21, x25, x21
   3d9e8:	stp	xzr, xzr, [x21]
   3d9ec:	stp	xzr, xzr, [x21, #16]
   3d9f0:	b	3d884 <ZSTD_decompressStream_simpleArgs@@Base+0x10dc>
   3d9f4:	and	x21, x21, #0x3fff
   3d9f8:	lsr	w3, w3, #18
   3d9fc:	mov	w19, #0x0                   	// #0
   3da00:	mov	x0, #0x4                   	// #4
   3da04:	b	3d94c <ZSTD_decompressStream_simpleArgs@@Base+0x11a4>
   3da08:	and	w4, w21, #0x3ffff
   3da0c:	ldrb	w0, [x1, #4]
   3da10:	and	x21, x21, #0x3ffff
   3da14:	cmp	w4, #0x20, lsl #12
   3da18:	b.hi	3d880 <ZSTD_decompressStream_simpleArgs@@Base+0x10d8>  // b.pmore
   3da1c:	ubfiz	x0, x0, #10, #8
   3da20:	lsr	w3, w3, #22
   3da24:	add	x3, x3, x0
   3da28:	mov	w19, #0x0                   	// #0
   3da2c:	mov	x0, #0x5                   	// #5
   3da30:	b	3d94c <ZSTD_decompressStream_simpleArgs@@Base+0x11a4>
   3da34:	bl	39b20 <ZSTD_compress@@Base+0x2b2d4>
   3da38:	b	3d9b8 <ZSTD_decompressStream_simpleArgs@@Base+0x1210>
   3da3c:	mov	x4, #0x2838                	// #10296
   3da40:	mov	x5, #0x6848                	// #26696
   3da44:	add	x0, x20, x4
   3da48:	add	x5, x20, x5
   3da4c:	mov	x4, x3
   3da50:	mov	x1, x25
   3da54:	mov	x3, x2
   3da58:	mov	x6, #0x800                 	// #2048
   3da5c:	mov	x2, x21
   3da60:	cbz	w19, 3da6c <ZSTD_decompressStream_simpleArgs@@Base+0x12c4>
   3da64:	bl	39a94 <ZSTD_compress@@Base+0x2b248>
   3da68:	b	3d9b8 <ZSTD_decompressStream_simpleArgs@@Base+0x1210>
   3da6c:	bl	39b44 <ZSTD_compress@@Base+0x2b2f8>
   3da70:	b	3d9b8 <ZSTD_decompressStream_simpleArgs@@Base+0x1210>
   3da74:	and	w0, w0, #0x3
   3da78:	cmp	w0, #0x1
   3da7c:	b.eq	3dad8 <ZSTD_decompressStream_simpleArgs@@Base+0x1330>  // b.none
   3da80:	cmp	w0, #0x3
   3da84:	b.eq	3dae8 <ZSTD_decompressStream_simpleArgs@@Base+0x1340>  // b.none
   3da88:	ubfx	x19, x19, #3, #5
   3da8c:	mov	x0, #0x1                   	// #1
   3da90:	add	x23, x19, x0
   3da94:	add	x3, x23, #0x20
   3da98:	cmp	x3, x2
   3da9c:	b.ls	3db00 <ZSTD_decompressStream_simpleArgs@@Base+0x1358>  // b.plast
   3daa0:	cmp	x23, x2
   3daa4:	b.hi	3d880 <ZSTD_decompressStream_simpleArgs@@Base+0x10d8>  // b.pmore
   3daa8:	mov	x2, #0x71d8                	// #29144
   3daac:	add	x3, x20, x2
   3dab0:	add	x1, x1, x0
   3dab4:	mov	x2, x19
   3dab8:	mov	x0, x3
   3dabc:	bl	4460 <memcpy@plt>
   3dac0:	str	x19, [x20, #28984]
   3dac4:	add	x19, x0, x19
   3dac8:	str	x0, [x20, #28952]
   3dacc:	stp	xzr, xzr, [x19]
   3dad0:	stp	xzr, xzr, [x19, #16]
   3dad4:	b	3d884 <ZSTD_decompressStream_simpleArgs@@Base+0x10dc>
   3dad8:	ldrh	w19, [x1]
   3dadc:	mov	x0, #0x2                   	// #2
   3dae0:	ubfx	x19, x19, #4, #12
   3dae4:	b	3da90 <ZSTD_decompressStream_simpleArgs@@Base+0x12e8>
   3dae8:	ldrh	w0, [x1]
   3daec:	ldrb	w19, [x1, #2]
   3daf0:	add	w19, w0, w19, lsl #16
   3daf4:	mov	x0, #0x3                   	// #3
   3daf8:	ubfx	x19, x19, #4, #21
   3dafc:	b	3da90 <ZSTD_decompressStream_simpleArgs@@Base+0x12e8>
   3db00:	add	x1, x1, x0
   3db04:	str	x1, [x20, #28952]
   3db08:	str	x19, [x20, #28984]
   3db0c:	b	3d884 <ZSTD_decompressStream_simpleArgs@@Base+0x10dc>
   3db10:	ldrh	w19, [x1]
   3db14:	mov	x23, #0x2                   	// #2
   3db18:	ubfx	x19, x19, #4, #12
   3db1c:	b	3d8e4 <ZSTD_decompressStream_simpleArgs@@Base+0x113c>
   3db20:	ldrh	w0, [x1]
   3db24:	cmp	x2, #0x3
   3db28:	ldrb	w19, [x1, #2]
   3db2c:	add	w19, w0, w19, lsl #16
   3db30:	lsr	w0, w19, #4
   3db34:	ubfx	x19, x19, #4, #21
   3db38:	b.eq	3d880 <ZSTD_decompressStream_simpleArgs@@Base+0x10d8>  // b.none
   3db3c:	cmp	w0, #0x20, lsl #12
   3db40:	b.hi	3d880 <ZSTD_decompressStream_simpleArgs@@Base+0x10d8>  // b.pmore
   3db44:	mov	x23, #0x3                   	// #3
   3db48:	b	3d8e4 <ZSTD_decompressStream_simpleArgs@@Base+0x113c>
   3db4c:	mov	x23, #0xffffffffffffffe2    	// #-30
   3db50:	b	3d884 <ZSTD_decompressStream_simpleArgs@@Base+0x10dc>
   3db54:	sub	w7, w5, #0x1
   3db58:	mov	x10, #0x0                   	// #0
   3db5c:	mov	w8, #0x1                   	// #1
   3db60:	bfi	x10, x5, #32, #32
   3db64:	mov	x6, #0x1                   	// #1
   3db68:	lsl	w9, w8, w5
   3db6c:	sub	sp, sp, #0x70
   3db70:	lsl	w8, w8, w7
   3db74:	sub	w13, w9, #0x1
   3db78:	add	x15, x0, #0x8
   3db7c:	add	w2, w2, #0x1
   3db80:	bfxil	x10, x6, #0, #32
   3db84:	sxth	w8, w8
   3db88:	mov	w11, w13
   3db8c:	mov	x16, sp
   3db90:	mov	w17, w6
   3db94:	mov	w18, w6
   3db98:	mov	x7, #0x0                   	// #0
   3db9c:	mov	w14, #0x0                   	// #0
   3dba0:	cmp	w2, w7
   3dba4:	b.hi	3dbf4 <ZSTD_decompressStream_simpleArgs@@Base+0x144c>  // b.pmore
   3dba8:	lsr	w7, w10, #0
   3dbac:	cmp	w14, #0x0
   3dbb0:	csel	x6, x6, x7, ne  // ne = any
   3dbb4:	lsr	w7, w9, #3
   3dbb8:	add	w7, w7, w9, lsr #1
   3dbbc:	mov	x8, #0x0                   	// #0
   3dbc0:	add	w7, w7, #0x3
   3dbc4:	bfxil	x10, x6, #0, #32
   3dbc8:	mov	w6, #0x0                   	// #0
   3dbcc:	str	x10, [x0]
   3dbd0:	mov	w14, w8
   3dbd4:	cmp	w2, w8
   3dbd8:	b.hi	3dc58 <ZSTD_decompressStream_simpleArgs@@Base+0x14b0>  // b.pmore
   3dbdc:	add	x8, x0, w9, uxtw #3
   3dbe0:	mov	x7, sp
   3dbe4:	cmp	x0, x8
   3dbe8:	b.ne	3dc64 <ZSTD_decompressStream_simpleArgs@@Base+0x14bc>  // b.any
   3dbec:	add	sp, sp, #0x70
   3dbf0:	ret
   3dbf4:	ldrsh	w12, [x1, x7, lsl #1]
   3dbf8:	cmn	w12, #0x1
   3dbfc:	b.ne	3dc18 <ZSTD_decompressStream_simpleArgs@@Base+0x1470>  // b.any
   3dc00:	add	x12, x15, w11, uxtw #3
   3dc04:	sub	w11, w11, #0x1
   3dc08:	strh	w18, [x16, x7, lsl #1]
   3dc0c:	str	w7, [x12, #4]
   3dc10:	add	x7, x7, #0x1
   3dc14:	b	3dba0 <ZSTD_decompressStream_simpleArgs@@Base+0x13f8>
   3dc18:	cmp	w12, w8
   3dc1c:	strh	w12, [x16, x7, lsl #1]
   3dc20:	csel	w14, w14, w17, lt  // lt = tstop
   3dc24:	csel	w6, w6, wzr, lt  // lt = tstop
   3dc28:	b	3dc10 <ZSTD_decompressStream_simpleArgs@@Base+0x1468>
   3dc2c:	add	x16, x15, w6, uxtw #3
   3dc30:	str	w14, [x16, #4]
   3dc34:	add	w6, w6, w7
   3dc38:	and	w6, w6, w13
   3dc3c:	cmp	w11, w6
   3dc40:	b.cc	3dc34 <ZSTD_decompressStream_simpleArgs@@Base+0x148c>  // b.lo, b.ul, b.last
   3dc44:	add	w10, w10, #0x1
   3dc48:	cmp	w12, w10
   3dc4c:	b.gt	3dc2c <ZSTD_decompressStream_simpleArgs@@Base+0x1484>
   3dc50:	add	x8, x8, #0x1
   3dc54:	b	3dbd0 <ZSTD_decompressStream_simpleArgs@@Base+0x1428>
   3dc58:	ldrsh	w12, [x1, x8, lsl #1]
   3dc5c:	mov	w10, #0x0                   	// #0
   3dc60:	b	3dc48 <ZSTD_decompressStream_simpleArgs@@Base+0x14a0>
   3dc64:	ldr	w6, [x0, #12]
   3dc68:	add	x0, x0, #0x8
   3dc6c:	ldrh	w2, [x7, x6, lsl #1]
   3dc70:	add	w1, w2, #0x1
   3dc74:	strh	w1, [x7, x6, lsl #1]
   3dc78:	clz	w1, w2
   3dc7c:	lsl	x6, x6, #2
   3dc80:	eor	w1, w1, #0x1f
   3dc84:	sub	w1, w5, w1
   3dc88:	and	w1, w1, #0xff
   3dc8c:	strb	w1, [x0, #3]
   3dc90:	lsl	w1, w2, w1
   3dc94:	sub	w1, w1, w9
   3dc98:	strh	w1, [x0]
   3dc9c:	ldr	w1, [x4, x6]
   3dca0:	strb	w1, [x0, #2]
   3dca4:	ldr	w1, [x3, x6]
   3dca8:	str	w1, [x0, #4]
   3dcac:	b	3dbe4 <ZSTD_decompressStream_simpleArgs@@Base+0x143c>
   3dcb0:	stp	x29, x30, [sp, #-224]!
   3dcb4:	cmp	w2, #0x2
   3dcb8:	mov	x29, sp
   3dcbc:	stp	x19, x20, [sp, #16]
   3dcc0:	mov	x20, x0
   3dcc4:	ldr	w0, [sp, #240]
   3dcc8:	stp	x21, x22, [sp, #32]
   3dccc:	mov	x21, x1
   3dcd0:	mov	x22, x7
   3dcd4:	stp	x23, x24, [sp, #48]
   3dcd8:	mov	w23, w4
   3dcdc:	mov	x4, x6
   3dce0:	str	x25, [sp, #64]
   3dce4:	str	w3, [sp, #92]
   3dce8:	ldr	x24, [sp, #224]
   3dcec:	b.eq	3dda8 <ZSTD_decompressStream_simpleArgs@@Base+0x1600>  // b.none
   3dcf0:	cmp	w2, #0x3
   3dcf4:	b.eq	3dd64 <ZSTD_decompressStream_simpleArgs@@Base+0x15bc>  // b.none
   3dcf8:	cmp	w2, #0x1
   3dcfc:	b.ne	3dd54 <ZSTD_decompressStream_simpleArgs@@Base+0x15ac>  // b.any
   3dd00:	cbz	x6, 3ddf8 <ZSTD_decompressStream_simpleArgs@@Base+0x1650>
   3dd04:	ldrb	w0, [x5]
   3dd08:	cmp	w0, w3
   3dd0c:	b.hi	3de00 <ZSTD_decompressStream_simpleArgs@@Base+0x1658>  // b.pmore
   3dd10:	ubfiz	x0, x0, #2, #8
   3dd14:	mov	x19, #0x1                   	// #1
   3dd18:	ldr	w1, [x7, x0]
   3dd1c:	ldr	w0, [x24, x0]
   3dd20:	str	xzr, [x20]
   3dd24:	strh	wzr, [x20, #8]
   3dd28:	strb	w0, [x20, #10]
   3dd2c:	strb	wzr, [x20, #11]
   3dd30:	str	w1, [x20, #12]
   3dd34:	str	x20, [x21]
   3dd38:	mov	x0, x19
   3dd3c:	ldp	x19, x20, [sp, #16]
   3dd40:	ldp	x21, x22, [sp, #32]
   3dd44:	ldp	x23, x24, [sp, #48]
   3dd48:	ldr	x25, [sp, #64]
   3dd4c:	ldp	x29, x30, [sp], #224
   3dd50:	ret
   3dd54:	ldr	x0, [sp, #232]
   3dd58:	str	x0, [x1]
   3dd5c:	mov	x19, #0x0                   	// #0
   3dd60:	b	3dd38 <ZSTD_decompressStream_simpleArgs@@Base+0x1590>
   3dd64:	cbz	w0, 3de00 <ZSTD_decompressStream_simpleArgs@@Base+0x1658>
   3dd68:	ldr	w0, [sp, #248]
   3dd6c:	cmp	w0, #0x0
   3dd70:	ldr	w0, [sp, #256]
   3dd74:	ccmp	w0, #0x18, #0x4, ne  // ne = any
   3dd78:	b.le	3dd5c <ZSTD_decompressStream_simpleArgs@@Base+0x15b4>
   3dd7c:	mov	w0, #0x1                   	// #1
   3dd80:	mov	x1, #0x0                   	// #0
   3dd84:	lsl	w0, w0, w23
   3dd88:	add	w0, w0, #0x1
   3dd8c:	ldr	x2, [x21]
   3dd90:	sbfiz	x0, x0, #3, #32
   3dd94:	prfm	pldl2keep, [x2, x1]
   3dd98:	add	x1, x1, #0x40
   3dd9c:	cmp	x0, x1
   3dda0:	b.hi	3dd94 <ZSTD_decompressStream_simpleArgs@@Base+0x15ec>  // b.pmore
   3dda4:	b	3dd5c <ZSTD_decompressStream_simpleArgs@@Base+0x15b4>
   3dda8:	add	x25, sp, #0x70
   3ddac:	mov	x3, x5
   3ddb0:	add	x2, sp, #0x6c
   3ddb4:	add	x1, sp, #0x5c
   3ddb8:	mov	x0, x25
   3ddbc:	bl	4cb4 <ZSTD_initDStream_usingDDict@plt+0x134>
   3ddc0:	mov	x19, x0
   3ddc4:	cmn	x0, #0x78
   3ddc8:	b.hi	3de00 <ZSTD_decompressStream_simpleArgs@@Base+0x1658>  // b.pmore
   3ddcc:	ldr	w5, [sp, #108]
   3ddd0:	cmp	w5, w23
   3ddd4:	b.hi	3de00 <ZSTD_decompressStream_simpleArgs@@Base+0x1658>  // b.pmore
   3ddd8:	ldr	w2, [sp, #92]
   3dddc:	mov	x4, x24
   3dde0:	mov	x3, x22
   3dde4:	mov	x1, x25
   3dde8:	mov	x0, x20
   3ddec:	bl	3db54 <ZSTD_decompressStream_simpleArgs@@Base+0x13ac>
   3ddf0:	str	x20, [x21]
   3ddf4:	b	3dd38 <ZSTD_decompressStream_simpleArgs@@Base+0x1590>
   3ddf8:	mov	x19, #0xffffffffffffffb8    	// #-72
   3ddfc:	b	3dd38 <ZSTD_decompressStream_simpleArgs@@Base+0x1590>
   3de00:	mov	x19, #0xffffffffffffffec    	// #-20
   3de04:	b	3dd38 <ZSTD_decompressStream_simpleArgs@@Base+0x1590>
   3de08:	cbnz	x3, 3de14 <ZSTD_decompressStream_simpleArgs@@Base+0x166c>
   3de0c:	mov	x0, #0xffffffffffffffb8    	// #-72
   3de10:	ret
   3de14:	sub	sp, sp, #0x80
   3de18:	stp	x29, x30, [sp, #48]
   3de1c:	add	x29, sp, #0x30
   3de20:	stp	x20, x21, [sp, #64]
   3de24:	stp	x22, x23, [sp, #80]
   3de28:	mov	x23, x2
   3de2c:	stp	x24, x25, [sp, #96]
   3de30:	mov	x24, x0
   3de34:	mov	x0, x3
   3de38:	stp	x26, x27, [sp, #112]
   3de3c:	ldrb	w21, [x2]
   3de40:	cbnz	w21, 3de70 <ZSTD_decompressStream_simpleArgs@@Base+0x16c8>
   3de44:	str	wzr, [x1]
   3de48:	cmp	x3, #0x1
   3de4c:	b.eq	3de54 <ZSTD_decompressStream_simpleArgs@@Base+0x16ac>  // b.none
   3de50:	mov	x0, #0xffffffffffffffb8    	// #-72
   3de54:	ldp	x29, x30, [sp, #48]
   3de58:	ldp	x20, x21, [sp, #64]
   3de5c:	ldp	x22, x23, [sp, #80]
   3de60:	ldp	x24, x25, [sp, #96]
   3de64:	ldp	x26, x27, [sp, #112]
   3de68:	add	sp, sp, #0x80
   3de6c:	ret
   3de70:	add	x25, x2, x3
   3de74:	add	x0, x2, #0x1
   3de78:	cmp	w21, #0x7f
   3de7c:	b.le	3dea0 <ZSTD_decompressStream_simpleArgs@@Base+0x16f8>
   3de80:	cmp	w21, #0xff
   3de84:	b.ne	3df18 <ZSTD_decompressStream_simpleArgs@@Base+0x1770>  // b.any
   3de88:	add	x0, x2, #0x3
   3de8c:	cmp	x0, x25
   3de90:	b.hi	3de50 <ZSTD_decompressStream_simpleArgs@@Base+0x16a8>  // b.pmore
   3de94:	ldurh	w21, [x2, #1]
   3de98:	mov	w9, #0x7f00                	// #32512
   3de9c:	add	w21, w21, w9
   3dea0:	str	w21, [x1]
   3dea4:	add	x20, x0, #0x1
   3dea8:	cmp	x20, x25
   3deac:	b.hi	3de50 <ZSTD_decompressStream_simpleArgs@@Base+0x16a8>  // b.pmore
   3deb0:	add	x26, x24, #0x4, lsl #12
   3deb4:	ldrb	w27, [x0]
   3deb8:	str	w21, [sp, #32]
   3debc:	adrp	x22, 54000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcae0>
   3dec0:	add	x22, x22, #0xcdc
   3dec4:	sub	x6, x25, x20
   3dec8:	ldr	w0, [x26, #12652]
   3decc:	add	x7, x22, #0xc0
   3ded0:	str	w0, [sp, #24]
   3ded4:	mov	x5, x20
   3ded8:	lsr	w2, w27, #6
   3dedc:	mov	x1, x24
   3dee0:	ldr	w0, [x26, #12460]
   3dee4:	mov	w4, #0x9                   	// #9
   3dee8:	str	w0, [sp, #16]
   3deec:	add	x0, x22, #0x150
   3def0:	str	x0, [sp, #8]
   3def4:	add	x0, x22, #0x358
   3def8:	str	x0, [sp]
   3defc:	mov	w3, #0x23                  	// #35
   3df00:	add	x0, x24, #0x20
   3df04:	bl	3dcb0 <ZSTD_decompressStream_simpleArgs@@Base+0x1508>
   3df08:	cmn	x0, #0x78
   3df0c:	b.ls	3df34 <ZSTD_decompressStream_simpleArgs@@Base+0x178c>  // b.plast
   3df10:	mov	x0, #0xffffffffffffffec    	// #-20
   3df14:	b	3de54 <ZSTD_decompressStream_simpleArgs@@Base+0x16ac>
   3df18:	cmp	x25, x0
   3df1c:	b.ls	3de50 <ZSTD_decompressStream_simpleArgs@@Base+0x16a8>  // b.plast
   3df20:	add	x0, x2, #0x2
   3df24:	ldrb	w2, [x2, #1]
   3df28:	sub	w21, w21, #0x80
   3df2c:	add	w21, w2, w21, lsl #8
   3df30:	b	3dea0 <ZSTD_decompressStream_simpleArgs@@Base+0x16f8>
   3df34:	str	w21, [sp, #32]
   3df38:	add	x20, x20, x0
   3df3c:	mov	x8, #0x1028                	// #4136
   3df40:	add	x7, x22, #0x3e8
   3df44:	ldr	w0, [x26, #12652]
   3df48:	sub	x6, x25, x20
   3df4c:	str	w0, [sp, #24]
   3df50:	mov	x5, x20
   3df54:	ubfx	x2, x27, #4, #2
   3df58:	add	x1, x24, #0x10
   3df5c:	ldr	w0, [x26, #12460]
   3df60:	mov	w4, #0x8                   	// #8
   3df64:	str	w0, [sp, #16]
   3df68:	add	x0, x22, #0x468
   3df6c:	str	x0, [sp, #8]
   3df70:	add	x0, x22, #0x570
   3df74:	str	x0, [sp]
   3df78:	mov	w3, #0x1f                  	// #31
   3df7c:	add	x0, x24, x8
   3df80:	bl	3dcb0 <ZSTD_decompressStream_simpleArgs@@Base+0x1508>
   3df84:	cmn	x0, #0x78
   3df88:	b.hi	3df10 <ZSTD_decompressStream_simpleArgs@@Base+0x1768>  // b.pmore
   3df8c:	str	w21, [sp, #32]
   3df90:	add	x20, x20, x0
   3df94:	add	x7, x22, #0x5f0
   3df98:	sub	x6, x25, x20
   3df9c:	ldr	w0, [x26, #12652]
   3dfa0:	mov	x5, x20
   3dfa4:	str	w0, [sp, #24]
   3dfa8:	ubfx	x2, x27, #2, #2
   3dfac:	add	x1, x24, #0x8
   3dfb0:	mov	w4, #0x9                   	// #9
   3dfb4:	ldr	w0, [x26, #12460]
   3dfb8:	mov	w3, #0x34                  	// #52
   3dfbc:	str	w0, [sp, #16]
   3dfc0:	add	x0, x22, #0x6c4
   3dfc4:	str	x0, [sp, #8]
   3dfc8:	add	x0, x22, #0x8cc
   3dfcc:	str	x0, [sp]
   3dfd0:	mov	x0, #0x1830                	// #6192
   3dfd4:	add	x0, x24, x0
   3dfd8:	bl	3dcb0 <ZSTD_decompressStream_simpleArgs@@Base+0x1508>
   3dfdc:	cmn	x0, #0x78
   3dfe0:	b.hi	3df10 <ZSTD_decompressStream_simpleArgs@@Base+0x1768>  // b.pmore
   3dfe4:	add	x0, x20, x0
   3dfe8:	sub	x0, x0, x23
   3dfec:	b	3de54 <ZSTD_decompressStream_simpleArgs@@Base+0x16ac>
   3dff0:	sub	sp, sp, #0x170
   3dff4:	stp	x29, x30, [sp, #16]
   3dff8:	add	x29, sp, #0x10
   3dffc:	stp	x19, x20, [sp, #32]
   3e000:	stp	x21, x22, [sp, #48]
   3e004:	stp	x23, x24, [sp, #64]
   3e008:	mov	x24, x1
   3e00c:	mov	x1, #0x1ffff               	// #131071
   3e010:	stp	x25, x26, [sp, #80]
   3e014:	cmp	x4, x1
   3e018:	stp	x27, x28, [sp, #96]
   3e01c:	b.hi	3e634 <ZSTD_decompressStream_simpleArgs@@Base+0x1e8c>  // b.pmore
   3e020:	mov	x19, x0
   3e024:	mov	x22, x2
   3e028:	mov	x26, x3
   3e02c:	mov	x20, x4
   3e030:	mov	w25, w5
   3e034:	mov	x2, x4
   3e038:	mov	x1, x3
   3e03c:	bl	3d860 <ZSTD_decompressStream_simpleArgs@@Base+0x10b8>
   3e040:	mov	x28, x0
   3e044:	cmn	x0, #0x78
   3e048:	b.hi	3e238 <ZSTD_decompressStream_simpleArgs@@Base+0x1a90>  // b.pmore
   3e04c:	add	x23, x19, #0x4, lsl #12
   3e050:	add	x26, x26, x0
   3e054:	sub	x20, x20, x0
   3e058:	mov	x2, x26
   3e05c:	mov	x3, x20
   3e060:	add	x1, sp, #0xcc
   3e064:	ldr	w27, [x23, #12652]
   3e068:	mov	x0, x19
   3e06c:	bl	3de08 <ZSTD_decompressStream_simpleArgs@@Base+0x1660>
   3e070:	mov	x28, x0
   3e074:	cmn	x0, #0x78
   3e078:	b.hi	3e238 <ZSTD_decompressStream_simpleArgs@@Base+0x1a90>  // b.pmore
   3e07c:	add	x1, x26, x0
   3e080:	sub	x4, x20, x0
   3e084:	cbnz	w27, 3e214 <ZSTD_decompressStream_simpleArgs@@Base+0x1a6c>
   3e088:	cbz	w25, 3e1d4 <ZSTD_decompressStream_simpleArgs@@Base+0x1a2c>
   3e08c:	ldr	x2, [x19, #28792]
   3e090:	mov	x0, #0x1000000             	// #16777216
   3e094:	cmp	x2, x0
   3e098:	b.hi	3e1d4 <ZSTD_decompressStream_simpleArgs@@Base+0x1a2c>  // b.pmore
   3e09c:	str	wzr, [x23, #12652]
   3e0a0:	ldr	x21, [x19, #28952]
   3e0a4:	str	x21, [sp, #208]
   3e0a8:	ldr	x2, [x19, #28984]
   3e0ac:	add	x22, x24, x22
   3e0b0:	ldr	w25, [sp, #204]
   3e0b4:	add	x0, x21, x2
   3e0b8:	str	x0, [sp, #120]
   3e0bc:	cbz	w25, 3e624 <ZSTD_decompressStream_simpleArgs@@Base+0x1e7c>
   3e0c0:	ldr	x0, [x19, #28760]
   3e0c4:	str	x0, [sp, #136]
   3e0c8:	ldr	x0, [x19, #28768]
   3e0cc:	str	x0, [sp, #128]
   3e0d0:	mov	w0, #0x1                   	// #1
   3e0d4:	add	x20, sp, #0xe8
   3e0d8:	ldr	x26, [x19, #28752]
   3e0dc:	str	w0, [x23, #12460]
   3e0e0:	ldr	w0, [x23, #10300]
   3e0e4:	mov	x2, x4
   3e0e8:	str	x0, [sp, #320]
   3e0ec:	ldr	w0, [x23, #10304]
   3e0f0:	str	x0, [sp, #328]
   3e0f4:	ldr	w0, [x23, #10308]
   3e0f8:	str	x0, [sp, #336]
   3e0fc:	mov	x0, x20
   3e100:	bl	3cb94 <ZSTD_decompressStream_simpleArgs@@Base+0x3ec>
   3e104:	cmn	x0, #0x78
   3e108:	b.hi	3e530 <ZSTD_decompressStream_simpleArgs@@Base+0x1d88>  // b.pmore
   3e10c:	ldr	x2, [x19]
   3e110:	mov	x1, x20
   3e114:	add	x0, x20, #0x28
   3e118:	bl	3cb58 <ZSTD_decompressStream_simpleArgs@@Base+0x3b0>
   3e11c:	ldr	x2, [x19, #16]
   3e120:	mov	x1, x20
   3e124:	add	x0, x20, #0x38
   3e128:	bl	3cb58 <ZSTD_decompressStream_simpleArgs@@Base+0x3b0>
   3e12c:	ldr	x2, [x19, #8]
   3e130:	add	x0, x20, #0x48
   3e134:	mov	x1, x20
   3e138:	mov	x19, x24
   3e13c:	bl	3cb58 <ZSTD_decompressStream_simpleArgs@@Base+0x3b0>
   3e140:	add	x0, sp, #0xf0
   3e144:	str	x0, [sp, #144]
   3e148:	sub	x0, x22, #0x20
   3e14c:	str	x0, [sp, #152]
   3e150:	add	x0, sp, #0xe0
   3e154:	str	x0, [sp, #160]
   3e158:	add	x0, sp, #0xd8
   3e15c:	str	x0, [sp, #168]
   3e160:	add	x0, sp, #0xd0
   3e164:	str	x0, [sp, #176]
   3e168:	mov	x0, x20
   3e16c:	bl	3c848 <ZSTD_decompressStream_simpleArgs@@Base+0xa0>
   3e170:	cmp	w0, #0x2
   3e174:	b.hi	3e61c <ZSTD_decompressStream_simpleArgs@@Base+0x1e74>  // b.pmore
   3e178:	cbnz	w25, 3e270 <ZSTD_decompressStream_simpleArgs@@Base+0x1ac8>
   3e17c:	mov	x0, x20
   3e180:	bl	3c848 <ZSTD_decompressStream_simpleArgs@@Base+0xa0>
   3e184:	cmp	w0, #0x1
   3e188:	b.ls	3e530 <ZSTD_decompressStream_simpleArgs@@Base+0x1d88>  // b.plast
   3e18c:	ldr	x0, [sp, #320]
   3e190:	str	w0, [x23, #10300]
   3e194:	ldr	x0, [sp, #328]
   3e198:	str	w0, [x23, #10304]
   3e19c:	ldr	x0, [sp, #336]
   3e1a0:	str	w0, [x23, #10308]
   3e1a4:	ldr	x0, [sp, #120]
   3e1a8:	sub	x22, x22, x19
   3e1ac:	ldr	x1, [sp, #208]
   3e1b0:	sub	x21, x0, x1
   3e1b4:	cmp	x21, x22
   3e1b8:	b.hi	3e62c <ZSTD_decompressStream_simpleArgs@@Base+0x1e84>  // b.pmore
   3e1bc:	mov	x0, x19
   3e1c0:	add	x19, x19, x21
   3e1c4:	mov	x2, x21
   3e1c8:	sub	x28, x19, x24
   3e1cc:	bl	4460 <memcpy@plt>
   3e1d0:	b	3e238 <ZSTD_decompressStream_simpleArgs@@Base+0x1a90>
   3e1d4:	ldr	w0, [sp, #204]
   3e1d8:	cmp	w0, #0x4
   3e1dc:	b.le	3e09c <ZSTD_decompressStream_simpleArgs@@Base+0x18f4>
   3e1e0:	ldr	x5, [x19, #16]
   3e1e4:	mov	w2, #0x1                   	// #1
   3e1e8:	mov	w0, #0x0                   	// #0
   3e1ec:	ldr	w3, [x5, #4]
   3e1f0:	lsl	w2, w2, w3
   3e1f4:	add	x2, x5, w2, uxtw #3
   3e1f8:	cmp	x2, x5
   3e1fc:	b.ne	3e25c <ZSTD_decompressStream_simpleArgs@@Base+0x1ab4>  // b.any
   3e200:	mov	w2, #0x8                   	// #8
   3e204:	sub	w2, w2, w3
   3e208:	lsl	w0, w0, w2
   3e20c:	cmp	w0, #0x6
   3e210:	cset	w27, hi  // hi = pmore
   3e214:	str	wzr, [x23, #12652]
   3e218:	cbz	w27, 3e0a0 <ZSTD_decompressStream_simpleArgs@@Base+0x18f8>
   3e21c:	ldr	w5, [sp, #204]
   3e220:	mov	x3, x1
   3e224:	mov	x2, x22
   3e228:	mov	x1, x24
   3e22c:	mov	x0, x19
   3e230:	bl	3cdd0 <ZSTD_decompressStream_simpleArgs@@Base+0x628>
   3e234:	mov	x28, x0
   3e238:	mov	x0, x28
   3e23c:	ldp	x29, x30, [sp, #16]
   3e240:	ldp	x19, x20, [sp, #32]
   3e244:	ldp	x21, x22, [sp, #48]
   3e248:	ldp	x23, x24, [sp, #64]
   3e24c:	ldp	x25, x26, [sp, #80]
   3e250:	ldp	x27, x28, [sp, #96]
   3e254:	add	sp, sp, #0x170
   3e258:	ret
   3e25c:	ldrb	w6, [x5, #10]
   3e260:	add	x5, x5, #0x8
   3e264:	cmp	w6, #0x16
   3e268:	cinc	w0, w0, hi  // hi = pmore
   3e26c:	b	3e1f8 <ZSTD_decompressStream_simpleArgs@@Base+0x1a50>
   3e270:	ldp	x2, x0, [sp, #272]
   3e274:	sub	w25, w25, #0x1
   3e278:	ldp	x3, x1, [sp, #296]
   3e27c:	add	x2, x0, x2, lsl #3
   3e280:	ldr	x0, [sp, #312]
   3e284:	ldrb	w6, [x2, #2]
   3e288:	ldr	w8, [x2, #4]
   3e28c:	add	x1, x0, x1, lsl #3
   3e290:	ldr	x0, [sp, #288]
   3e294:	ldrb	w10, [x1, #2]
   3e298:	ldr	w9, [x1, #4]
   3e29c:	add	x0, x3, x0, lsl #3
   3e2a0:	add	w7, w6, w10
   3e2a4:	ldrb	w5, [x0, #2]
   3e2a8:	add	w7, w7, w5
   3e2ac:	cbz	w5, 3e42c <ZSTD_decompressStream_simpleArgs@@Base+0x1c84>
   3e2b0:	ldr	w21, [x0, #4]
   3e2b4:	mov	w1, w5
   3e2b8:	mov	x0, x20
   3e2bc:	bl	3c828 <ZSTD_decompressStream_simpleArgs@@Base+0x80>
   3e2c0:	add	x21, x21, x0
   3e2c4:	cmp	w5, #0x1
   3e2c8:	b.ne	3e444 <ZSTD_decompressStream_simpleArgs@@Base+0x1c9c>  // b.any
   3e2cc:	cmp	w8, #0x0
   3e2d0:	cinc	x1, x21, eq  // eq = none
   3e2d4:	ldr	x21, [sp, #320]
   3e2d8:	cbz	x1, 3e308 <ZSTD_decompressStream_simpleArgs@@Base+0x1b60>
   3e2dc:	cmp	x1, #0x3
   3e2e0:	b.ne	3e434 <ZSTD_decompressStream_simpleArgs@@Base+0x1c8c>  // b.any
   3e2e4:	sub	x0, x21, #0x1
   3e2e8:	cmp	x0, #0x0
   3e2ec:	cinc	x0, x0, eq  // eq = none
   3e2f0:	cmp	x1, #0x1
   3e2f4:	b.eq	3e300 <ZSTD_decompressStream_simpleArgs@@Base+0x1b58>  // b.none
   3e2f8:	ldr	x1, [sp, #328]
   3e2fc:	str	x1, [sp, #336]
   3e300:	stp	x0, x21, [sp, #320]
   3e304:	mov	x21, x0
   3e308:	mov	w9, w9
   3e30c:	cbz	w10, 3e458 <ZSTD_decompressStream_simpleArgs@@Base+0x1cb0>
   3e310:	mov	w1, w10
   3e314:	mov	x0, x20
   3e318:	bl	3c828 <ZSTD_decompressStream_simpleArgs@@Base+0x80>
   3e31c:	add	x27, x9, x0
   3e320:	cmp	w7, #0x1e
   3e324:	b.ls	3e330 <ZSTD_decompressStream_simpleArgs@@Base+0x1b88>  // b.plast
   3e328:	mov	x0, x20
   3e32c:	bl	3c848 <ZSTD_decompressStream_simpleArgs@@Base+0xa0>
   3e330:	mov	w8, w8
   3e334:	cbz	w6, 3e460 <ZSTD_decompressStream_simpleArgs@@Base+0x1cb8>
   3e338:	mov	w1, w6
   3e33c:	mov	x0, x20
   3e340:	bl	3c828 <ZSTD_decompressStream_simpleArgs@@Base+0x80>
   3e344:	add	x8, x8, x0
   3e348:	ldp	x0, x1, [sp, #272]
   3e34c:	lsl	x2, x0, #3
   3e350:	add	x0, x1, x0, lsl #3
   3e354:	ldrh	w5, [x1, x2]
   3e358:	ldrb	w1, [x0, #3]
   3e35c:	mov	x0, x20
   3e360:	bl	3c7fc <ZSTD_decompressStream_simpleArgs@@Base+0x54>
   3e364:	add	x5, x0, w5, uxth
   3e368:	ldp	x0, x1, [sp, #304]
   3e36c:	str	x5, [sp, #272]
   3e370:	lsl	x2, x0, #3
   3e374:	add	x0, x1, x0, lsl #3
   3e378:	ldrh	w5, [x1, x2]
   3e37c:	ldrb	w1, [x0, #3]
   3e380:	mov	x0, x20
   3e384:	bl	3c7fc <ZSTD_decompressStream_simpleArgs@@Base+0x54>
   3e388:	add	x5, x0, w5, uxth
   3e38c:	ldp	x0, x1, [sp, #288]
   3e390:	str	x5, [sp, #304]
   3e394:	lsl	x2, x0, #3
   3e398:	add	x0, x1, x0, lsl #3
   3e39c:	ldrh	w5, [x1, x2]
   3e3a0:	ldrb	w1, [x0, #3]
   3e3a4:	mov	x0, x20
   3e3a8:	bl	3c7fc <ZSTD_decompressStream_simpleArgs@@Base+0x54>
   3e3ac:	add	x28, x27, x8
   3e3b0:	ldr	x1, [sp, #152]
   3e3b4:	add	x5, x0, w5, uxth
   3e3b8:	add	x0, x19, x28
   3e3bc:	str	x5, [sp, #288]
   3e3c0:	ldr	x7, [sp, #208]
   3e3c4:	cmp	x0, x1
   3e3c8:	add	x5, x19, x8
   3e3cc:	str	x19, [sp, #216]
   3e3d0:	ldr	x0, [sp, #120]
   3e3d4:	sub	x2, x5, x21
   3e3d8:	str	x2, [sp, #224]
   3e3dc:	add	x9, x7, x8
   3e3e0:	ccmp	x0, x9, #0x0, ls  // ls = plast
   3e3e4:	b.cs	3e468 <ZSTD_decompressStream_simpleArgs@@Base+0x1cc0>  // b.hs, b.nlast
   3e3e8:	ldp	x6, x0, [sp, #120]
   3e3ec:	str	x0, [sp, #8]
   3e3f0:	ldr	x5, [sp, #176]
   3e3f4:	mov	x7, x26
   3e3f8:	ldr	x0, [sp, #136]
   3e3fc:	str	x0, [sp]
   3e400:	mov	x4, x21
   3e404:	mov	x3, x27
   3e408:	mov	x2, x8
   3e40c:	mov	x1, x22
   3e410:	mov	x0, x19
   3e414:	bl	3cccc <ZSTD_decompressStream_simpleArgs@@Base+0x524>
   3e418:	mov	x28, x0
   3e41c:	cmn	x28, #0x78
   3e420:	b.hi	3e238 <ZSTD_decompressStream_simpleArgs@@Base+0x1a90>  // b.pmore
   3e424:	add	x19, x19, x28
   3e428:	b	3e168 <ZSTD_decompressStream_simpleArgs@@Base+0x19c0>
   3e42c:	mov	x21, #0x0                   	// #0
   3e430:	b	3e2cc <ZSTD_decompressStream_simpleArgs@@Base+0x1b24>
   3e434:	ldr	x2, [sp, #144]
   3e438:	add	x0, x1, #0xa
   3e43c:	ldr	x0, [x2, x0, lsl #3]
   3e440:	b	3e2e8 <ZSTD_decompressStream_simpleArgs@@Base+0x1b40>
   3e444:	ldr	x0, [sp, #328]
   3e448:	str	x0, [sp, #336]
   3e44c:	ldr	x0, [sp, #320]
   3e450:	stp	x21, x0, [sp, #320]
   3e454:	b	3e308 <ZSTD_decompressStream_simpleArgs@@Base+0x1b60>
   3e458:	mov	x0, #0x0                   	// #0
   3e45c:	b	3e31c <ZSTD_decompressStream_simpleArgs@@Base+0x1b74>
   3e460:	mov	x0, #0x0                   	// #0
   3e464:	b	3e344 <ZSTD_decompressStream_simpleArgs@@Base+0x1b9c>
   3e468:	ldp	x0, x1, [x7]
   3e46c:	stp	x0, x1, [x19]
   3e470:	cmp	x8, #0x10
   3e474:	b.hi	3e4dc <ZSTD_decompressStream_simpleArgs@@Base+0x1d34>  // b.pmore
   3e478:	stp	x9, x5, [sp, #208]
   3e47c:	sub	x0, x5, x26
   3e480:	cmp	x21, x0
   3e484:	b.hi	3e520 <ZSTD_decompressStream_simpleArgs@@Base+0x1d78>  // b.pmore
   3e488:	cmp	x21, #0xf
   3e48c:	b.ls	3e58c <ZSTD_decompressStream_simpleArgs@@Base+0x1de4>  // b.plast
   3e490:	ldp	x1, x2, [sp, #216]
   3e494:	ldp	x4, x5, [x2]
   3e498:	stp	x4, x5, [x1]
   3e49c:	add	x3, x1, x27
   3e4a0:	ldp	x4, x5, [x2, #16]
   3e4a4:	stp	x4, x5, [x1, #16]
   3e4a8:	add	x1, x1, #0x20
   3e4ac:	cmp	x3, x1
   3e4b0:	b.ls	3e41c <ZSTD_decompressStream_simpleArgs@@Base+0x1c74>  // b.plast
   3e4b4:	add	x2, x2, #0x20
   3e4b8:	ldp	x4, x5, [x2]
   3e4bc:	stp	x4, x5, [x1]
   3e4c0:	add	x1, x1, #0x20
   3e4c4:	ldp	x4, x5, [x2, #16]
   3e4c8:	stp	x4, x5, [x1, #-16]
   3e4cc:	add	x2, x2, #0x20
   3e4d0:	cmp	x3, x1
   3e4d4:	b.hi	3e4b8 <ZSTD_decompressStream_simpleArgs@@Base+0x1d10>  // b.pmore
   3e4d8:	b	3e41c <ZSTD_decompressStream_simpleArgs@@Base+0x1c74>
   3e4dc:	ldp	x0, x1, [x7, #16]
   3e4e0:	stp	x0, x1, [x19, #16]
   3e4e4:	add	x8, x19, #0x30
   3e4e8:	ldp	x0, x1, [x7, #32]
   3e4ec:	stp	x0, x1, [x19, #32]
   3e4f0:	cmp	x5, x8
   3e4f4:	b.ls	3e478 <ZSTD_decompressStream_simpleArgs@@Base+0x1cd0>  // b.plast
   3e4f8:	add	x7, x7, #0x30
   3e4fc:	ldp	x0, x1, [x7]
   3e500:	stp	x0, x1, [x8]
   3e504:	add	x8, x8, #0x20
   3e508:	ldp	x0, x1, [x7, #16]
   3e50c:	stp	x0, x1, [x8, #-16]
   3e510:	add	x7, x7, #0x20
   3e514:	cmp	x5, x8
   3e518:	b.hi	3e4fc <ZSTD_decompressStream_simpleArgs@@Base+0x1d54>  // b.pmore
   3e51c:	b	3e478 <ZSTD_decompressStream_simpleArgs@@Base+0x1cd0>
   3e520:	ldr	x0, [sp, #136]
   3e524:	sub	x0, x5, x0
   3e528:	cmp	x21, x0
   3e52c:	b.ls	3e538 <ZSTD_decompressStream_simpleArgs@@Base+0x1d90>  // b.plast
   3e530:	mov	x28, #0xffffffffffffffec    	// #-20
   3e534:	b	3e238 <ZSTD_decompressStream_simpleArgs@@Base+0x1a90>
   3e538:	ldr	x0, [sp, #128]
   3e53c:	sub	x1, x2, x26
   3e540:	ldr	x3, [sp, #128]
   3e544:	add	x1, x0, x1
   3e548:	str	x1, [sp, #224]
   3e54c:	add	x0, x1, x27
   3e550:	cmp	x3, x0
   3e554:	b.cc	3e568 <ZSTD_decompressStream_simpleArgs@@Base+0x1dc0>  // b.lo, b.ul, b.last
   3e558:	mov	x2, x27
   3e55c:	mov	x0, x5
   3e560:	bl	4490 <memmove@plt>
   3e564:	b	3e41c <ZSTD_decompressStream_simpleArgs@@Base+0x1c74>
   3e568:	sub	x2, x26, x2
   3e56c:	mov	x0, x5
   3e570:	str	x2, [sp, #184]
   3e574:	bl	4490 <memmove@plt>
   3e578:	ldr	x2, [sp, #184]
   3e57c:	add	x5, x0, x2
   3e580:	sub	x27, x27, x2
   3e584:	stp	x5, x26, [sp, #216]
   3e588:	b	3e488 <ZSTD_decompressStream_simpleArgs@@Base+0x1ce0>
   3e58c:	ldp	x1, x0, [sp, #160]
   3e590:	mov	x2, x21
   3e594:	bl	3c8f0 <ZSTD_decompressStream_simpleArgs@@Base+0x148>
   3e598:	cmp	x27, #0x8
   3e59c:	b.ls	3e41c <ZSTD_decompressStream_simpleArgs@@Base+0x1c74>  // b.plast
   3e5a0:	ldp	x0, x1, [sp, #216]
   3e5a4:	sub	x3, x27, #0x8
   3e5a8:	sub	x2, x0, x1
   3e5ac:	add	x3, x0, x3
   3e5b0:	cmp	x2, #0xf
   3e5b4:	b.gt	3e5d8 <ZSTD_decompressStream_simpleArgs@@Base+0x1e30>
   3e5b8:	mov	x2, #0x0                   	// #0
   3e5bc:	ldr	x4, [x1, x2]
   3e5c0:	str	x4, [x0, x2]
   3e5c4:	add	x2, x2, #0x8
   3e5c8:	add	x4, x0, x2
   3e5cc:	cmp	x3, x4
   3e5d0:	b.hi	3e5bc <ZSTD_decompressStream_simpleArgs@@Base+0x1e14>  // b.pmore
   3e5d4:	b	3e41c <ZSTD_decompressStream_simpleArgs@@Base+0x1c74>
   3e5d8:	ldp	x4, x5, [x1]
   3e5dc:	stp	x4, x5, [x0]
   3e5e0:	add	x0, x0, #0x20
   3e5e4:	ldp	x4, x5, [x1, #16]
   3e5e8:	stp	x4, x5, [x0, #-16]
   3e5ec:	cmp	x3, x0
   3e5f0:	b.ls	3e41c <ZSTD_decompressStream_simpleArgs@@Base+0x1c74>  // b.plast
   3e5f4:	add	x1, x1, #0x20
   3e5f8:	ldp	x4, x5, [x1]
   3e5fc:	stp	x4, x5, [x0]
   3e600:	add	x0, x0, #0x20
   3e604:	ldp	x4, x5, [x1, #16]
   3e608:	stp	x4, x5, [x0, #-16]
   3e60c:	add	x1, x1, #0x20
   3e610:	cmp	x3, x0
   3e614:	b.hi	3e5f8 <ZSTD_decompressStream_simpleArgs@@Base+0x1e50>  // b.pmore
   3e618:	b	3e41c <ZSTD_decompressStream_simpleArgs@@Base+0x1c74>
   3e61c:	cbnz	w25, 3e530 <ZSTD_decompressStream_simpleArgs@@Base+0x1d88>
   3e620:	b	3e17c <ZSTD_decompressStream_simpleArgs@@Base+0x19d4>
   3e624:	mov	x19, x24
   3e628:	b	3e1a4 <ZSTD_decompressStream_simpleArgs@@Base+0x19fc>
   3e62c:	mov	x28, #0xffffffffffffffba    	// #-70
   3e630:	b	3e238 <ZSTD_decompressStream_simpleArgs@@Base+0x1a90>
   3e634:	mov	x28, #0xffffffffffffffb8    	// #-72
   3e638:	b	3e238 <ZSTD_decompressStream_simpleArgs@@Base+0x1a90>

000000000003e63c <ZSTD_decompressBlock@@Base>:
   3e63c:	stp	x29, x30, [sp, #-64]!
   3e640:	mov	x29, sp
   3e644:	stp	x19, x20, [sp, #16]
   3e648:	mov	x20, x0
   3e64c:	mov	x19, x1
   3e650:	stp	x21, x22, [sp, #32]
   3e654:	mov	x21, x2
   3e658:	mov	x22, x3
   3e65c:	str	x23, [sp, #48]
   3e660:	mov	x23, x4
   3e664:	bl	3aba8 <ZSTD_decompressBound@@Base+0x64>
   3e668:	mov	x4, x23
   3e66c:	mov	x3, x22
   3e670:	mov	x2, x21
   3e674:	mov	x1, x19
   3e678:	mov	x0, x20
   3e67c:	mov	w5, #0x0                   	// #0
   3e680:	bl	3dff0 <ZSTD_decompressStream_simpleArgs@@Base+0x1848>
   3e684:	add	x19, x19, x0
   3e688:	ldp	x21, x22, [sp, #32]
   3e68c:	ldr	x23, [sp, #48]
   3e690:	str	x19, [x20, #28744]
   3e694:	ldp	x19, x20, [sp, #16]
   3e698:	ldp	x29, x30, [sp], #64
   3e69c:	ret

000000000003e6a0 <ZBUFF_isError@@Base>:
   3e6a0:	cmn	x0, #0x78
   3e6a4:	cset	w0, hi  // hi = pmore
   3e6a8:	ret

000000000003e6ac <ZBUFF_getErrorName@@Base>:
   3e6ac:	cmn	x0, #0x78
   3e6b0:	b.ls	3e6bc <ZBUFF_getErrorName@@Base+0x10>  // b.plast
   3e6b4:	neg	w0, w0
   3e6b8:	b	511c <ZSTD_initDStream_usingDDict@plt+0x59c>
   3e6bc:	mov	w0, #0x0                   	// #0
   3e6c0:	b	3e6b8 <ZBUFF_getErrorName@@Base+0xc>

000000000003e6c4 <ZBUFF_createCCtx@@Base>:
   3e6c4:	b	4a60 <ZSTD_createCStream@plt>

000000000003e6c8 <ZBUFF_createCCtx_advanced@@Base>:
   3e6c8:	stp	x29, x30, [sp, #-48]!
   3e6cc:	mov	x29, sp
   3e6d0:	ldp	x2, x3, [x0]
   3e6d4:	stp	x2, x3, [sp, #16]
   3e6d8:	ldr	x0, [x0, #16]
   3e6dc:	str	x0, [sp, #32]
   3e6e0:	add	x0, sp, #0x10
   3e6e4:	bl	4a20 <ZSTD_createCStream_advanced@plt>
   3e6e8:	ldp	x29, x30, [sp], #48
   3e6ec:	ret

000000000003e6f0 <ZBUFF_freeCCtx@@Base>:
   3e6f0:	b	4770 <ZSTD_freeCStream@plt>

000000000003e6f4 <ZBUFF_compressInit_advanced@@Base>:
   3e6f4:	stp	x29, x30, [sp, #-64]!
   3e6f8:	cmp	x4, #0x0
   3e6fc:	csinv	x4, x4, xzr, ne  // ne = any
   3e700:	mov	x29, sp
   3e704:	ldp	x6, x7, [x3]
   3e708:	stp	x6, x7, [sp, #16]
   3e70c:	ldp	x6, x7, [x3, #16]
   3e710:	stp	x6, x7, [sp, #32]
   3e714:	ldr	x3, [x3, #32]
   3e718:	str	x3, [sp, #48]
   3e71c:	add	x3, sp, #0x10
   3e720:	bl	45e0 <ZSTD_initCStream_advanced@plt>
   3e724:	ldp	x29, x30, [sp], #64
   3e728:	ret

000000000003e72c <ZBUFF_compressInitDictionary@@Base>:
   3e72c:	b	4730 <ZSTD_initCStream_usingDict@plt>

000000000003e730 <ZBUFF_compressInit@@Base>:
   3e730:	b	4550 <ZSTD_initCStream@plt>

000000000003e734 <ZBUFF_compressContinue@@Base>:
   3e734:	stp	x29, x30, [sp, #-80]!
   3e738:	mov	x29, sp
   3e73c:	stp	x19, x20, [sp, #16]
   3e740:	mov	x20, x2
   3e744:	mov	x19, x4
   3e748:	str	x1, [sp, #32]
   3e74c:	add	x2, sp, #0x38
   3e750:	ldr	x1, [x20]
   3e754:	str	x1, [sp, #40]
   3e758:	ldr	x1, [x4]
   3e75c:	stp	xzr, x3, [sp, #48]
   3e760:	str	x1, [sp, #64]
   3e764:	add	x1, sp, #0x20
   3e768:	str	xzr, [sp, #72]
   3e76c:	bl	44b0 <ZSTD_compressStream@plt>
   3e770:	ldr	x1, [sp, #48]
   3e774:	str	x1, [x20]
   3e778:	ldr	x1, [sp, #72]
   3e77c:	str	x1, [x19]
   3e780:	ldp	x19, x20, [sp, #16]
   3e784:	ldp	x29, x30, [sp], #80
   3e788:	ret

000000000003e78c <ZBUFF_compressFlush@@Base>:
   3e78c:	stp	x29, x30, [sp, #-64]!
   3e790:	mov	x29, sp
   3e794:	str	x19, [sp, #16]
   3e798:	mov	x19, x2
   3e79c:	str	x1, [sp, #40]
   3e7a0:	ldr	x1, [x2]
   3e7a4:	str	x1, [sp, #48]
   3e7a8:	add	x1, sp, #0x28
   3e7ac:	str	xzr, [sp, #56]
   3e7b0:	bl	4610 <ZSTD_flushStream@plt>
   3e7b4:	ldr	x1, [sp, #56]
   3e7b8:	str	x1, [x19]
   3e7bc:	ldr	x19, [sp, #16]
   3e7c0:	ldp	x29, x30, [sp], #64
   3e7c4:	ret

000000000003e7c8 <ZBUFF_compressEnd@@Base>:
   3e7c8:	stp	x29, x30, [sp, #-64]!
   3e7cc:	mov	x29, sp
   3e7d0:	str	x19, [sp, #16]
   3e7d4:	mov	x19, x2
   3e7d8:	str	x1, [sp, #40]
   3e7dc:	ldr	x1, [x2]
   3e7e0:	str	x1, [sp, #48]
   3e7e4:	add	x1, sp, #0x28
   3e7e8:	str	xzr, [sp, #56]
   3e7ec:	bl	49c0 <ZSTD_endStream@plt>
   3e7f0:	ldr	x1, [sp, #56]
   3e7f4:	str	x1, [x19]
   3e7f8:	ldr	x19, [sp, #16]
   3e7fc:	ldp	x29, x30, [sp], #64
   3e800:	ret

000000000003e804 <ZBUFF_recommendedCInSize@@Base>:
   3e804:	b	44a0 <ZSTD_CStreamInSize@plt>

000000000003e808 <ZBUFF_recommendedCOutSize@@Base>:
   3e808:	b	4910 <ZSTD_CStreamOutSize@plt>

000000000003e80c <ZBUFF_createDCtx@@Base>:
   3e80c:	b	44e0 <ZSTD_createDStream@plt>

000000000003e810 <ZBUFF_createDCtx_advanced@@Base>:
   3e810:	stp	x29, x30, [sp, #-48]!
   3e814:	mov	x29, sp
   3e818:	ldp	x2, x3, [x0]
   3e81c:	stp	x2, x3, [sp, #16]
   3e820:	ldr	x0, [x0, #16]
   3e824:	str	x0, [sp, #32]
   3e828:	add	x0, sp, #0x10
   3e82c:	bl	4440 <ZSTD_createDStream_advanced@plt>
   3e830:	ldp	x29, x30, [sp], #48
   3e834:	ret

000000000003e838 <ZBUFF_freeDCtx@@Base>:
   3e838:	b	4af0 <ZSTD_freeDStream@plt>

000000000003e83c <ZBUFF_decompressInitDictionary@@Base>:
   3e83c:	b	46e0 <ZSTD_initDStream_usingDict@plt>

000000000003e840 <ZBUFF_decompressInit@@Base>:
   3e840:	b	4870 <ZSTD_initDStream@plt>

000000000003e844 <ZBUFF_decompressContinue@@Base>:
   3e844:	stp	x29, x30, [sp, #-80]!
   3e848:	mov	x29, sp
   3e84c:	stp	x19, x20, [sp, #16]
   3e850:	mov	x20, x2
   3e854:	mov	x19, x4
   3e858:	str	x1, [sp, #32]
   3e85c:	add	x2, sp, #0x38
   3e860:	ldr	x1, [x20]
   3e864:	str	x1, [sp, #40]
   3e868:	ldr	x1, [x4]
   3e86c:	stp	xzr, x3, [sp, #48]
   3e870:	str	x1, [sp, #64]
   3e874:	add	x1, sp, #0x20
   3e878:	str	xzr, [sp, #72]
   3e87c:	bl	4940 <ZSTD_decompressStream@plt>
   3e880:	ldr	x1, [sp, #48]
   3e884:	str	x1, [x20]
   3e888:	ldr	x1, [sp, #72]
   3e88c:	str	x1, [x19]
   3e890:	ldp	x19, x20, [sp, #16]
   3e894:	ldp	x29, x30, [sp], #80
   3e898:	ret

000000000003e89c <ZBUFF_recommendedDInSize@@Base>:
   3e89c:	b	49d0 <ZSTD_DStreamInSize@plt>

000000000003e8a0 <ZBUFF_recommendedDOutSize@@Base>:
   3e8a0:	b	4750 <ZSTD_DStreamOutSize@plt>
   3e8a4:	mov	w2, #0x79b1                	// #31153
   3e8a8:	mov	x3, x0
   3e8ac:	movk	w2, #0x9e37, lsl #16
   3e8b0:	ldr	w0, [x0, #8]
   3e8b4:	mul	w2, w1, w2
   3e8b8:	neg	w0, w0
   3e8bc:	ldr	x4, [x3]
   3e8c0:	lsr	w0, w2, w0
   3e8c4:	ubfiz	x2, x0, #3, #32
   3e8c8:	add	x5, x4, x2
   3e8cc:	ldr	w5, [x5, #4]
   3e8d0:	cmn	w5, #0x1
   3e8d4:	b.eq	3e8f4 <ZBUFF_recommendedDOutSize@@Base+0x54>  // b.none
   3e8d8:	ldr	w2, [x4, x2]
   3e8dc:	cmp	w2, w1
   3e8e0:	b.eq	3e8f4 <ZBUFF_recommendedDOutSize@@Base+0x54>  // b.none
   3e8e4:	add	w2, w0, #0x1
   3e8e8:	ldr	w0, [x3, #16]
   3e8ec:	and	w0, w2, w0
   3e8f0:	b	3e8c4 <ZBUFF_recommendedDOutSize@@Base+0x24>
   3e8f4:	ret
   3e8f8:	mov	x7, x0
   3e8fc:	mov	w6, w1
   3e900:	stp	x29, x30, [sp, #-16]!
   3e904:	mov	x29, sp
   3e908:	bl	3e8a4 <ZBUFF_recommendedDOutSize@@Base+0x4>
   3e90c:	ubfiz	x2, x0, #3, #32
   3e910:	ldr	x1, [x7]
   3e914:	add	x0, x1, x2
   3e918:	ldr	w3, [x0, #4]
   3e91c:	cmn	w3, #0x1
   3e920:	b.ne	3e92c <ZBUFF_recommendedDOutSize@@Base+0x8c>  // b.any
   3e924:	str	w6, [x1, x2]
   3e928:	str	wzr, [x0, #4]
   3e92c:	add	x0, x0, #0x4
   3e930:	ldp	x29, x30, [sp], #16
   3e934:	ret
   3e938:	ldr	w5, [x0, #80]
   3e93c:	mov	x3, #0x1                   	// #1
   3e940:	ldr	w1, [x1]
   3e944:	mov	x4, #0xffffffffffffffff    	// #-1
   3e948:	ldr	w2, [x2]
   3e94c:	cmp	w5, #0x8
   3e950:	ldr	x0, [x0]
   3e954:	lsl	w6, w5, #3
   3e958:	lsl	x3, x3, x6
   3e95c:	add	x3, x3, x4
   3e960:	ldr	x1, [x0, x1]
   3e964:	csel	x3, x3, x4, ne  // ne = any
   3e968:	ldr	x0, [x0, x2]
   3e96c:	and	x1, x3, x1
   3e970:	and	x3, x3, x0
   3e974:	cmp	x1, x3
   3e978:	cset	w0, hi  // hi = pmore
   3e97c:	csel	w0, w0, w4, cs  // cs = hs, nlast
   3e980:	ret
   3e984:	stp	x29, x30, [sp, #-16]!
   3e988:	mov	x8, x0
   3e98c:	mov	x7, x1
   3e990:	mov	x2, x1
   3e994:	mov	x1, x0
   3e998:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3e99c:	mov	x29, sp
   3e9a0:	ldr	x0, [x0, #968]
   3e9a4:	bl	3e938 <ZBUFF_recommendedDOutSize@@Base+0x98>
   3e9a8:	cbnz	w0, 3e9b8 <ZBUFF_recommendedDOutSize@@Base+0x118>
   3e9ac:	cmp	x8, x7
   3e9b0:	mov	w0, #0x1                   	// #1
   3e9b4:	cneg	w0, w0, cc  // cc = lo, ul, last
   3e9b8:	ldp	x29, x30, [sp], #16
   3e9bc:	ret
   3e9c0:	ldr	w4, [x1]
   3e9c4:	ldr	w5, [x2]
   3e9c8:	ldr	w2, [x0, #80]
   3e9cc:	ldr	x3, [x0]
   3e9d0:	add	x1, x3, x5
   3e9d4:	add	x0, x3, x4
   3e9d8:	b	48a0 <memcmp@plt>
   3e9dc:	stp	x29, x30, [sp, #-32]!
   3e9e0:	mov	x2, x1
   3e9e4:	mov	x29, sp
   3e9e8:	stp	x19, x20, [sp, #16]
   3e9ec:	mov	x20, x0
   3e9f0:	mov	x19, x1
   3e9f4:	mov	x1, x0
   3e9f8:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3e9fc:	ldr	x0, [x0, #968]
   3ea00:	bl	3e9c0 <ZBUFF_recommendedDOutSize@@Base+0x120>
   3ea04:	cbnz	w0, 3ea14 <ZBUFF_recommendedDOutSize@@Base+0x174>
   3ea08:	cmp	x20, x19
   3ea0c:	mov	w0, #0x1                   	// #1
   3ea10:	cneg	w0, w0, cc  // cc = lo, ul, last
   3ea14:	ldp	x19, x20, [sp, #16]
   3ea18:	ldp	x29, x30, [sp], #32
   3ea1c:	ret
   3ea20:	stp	x29, x30, [sp, #-32]!
   3ea24:	mov	x29, sp
   3ea28:	str	x19, [sp, #16]
   3ea2c:	mov	x19, x0
   3ea30:	ldr	x0, [x0, #48]
   3ea34:	cbz	x0, 3ea40 <ZBUFF_recommendedDOutSize@@Base+0x1a0>
   3ea38:	bl	48e0 <free@plt>
   3ea3c:	str	xzr, [x19, #48]
   3ea40:	ldr	x0, [x19, #64]
   3ea44:	cbz	x0, 3ea50 <ZBUFF_recommendedDOutSize@@Base+0x1b0>
   3ea48:	bl	48e0 <free@plt>
   3ea4c:	str	xzr, [x19, #64]
   3ea50:	ldr	x0, [x19, #72]
   3ea54:	cbz	x0, 3ea60 <ZBUFF_recommendedDOutSize@@Base+0x1c0>
   3ea58:	bl	48e0 <free@plt>
   3ea5c:	str	xzr, [x19, #72]
   3ea60:	ldr	x0, [x19, #8]
   3ea64:	cbz	x0, 3ea70 <ZBUFF_recommendedDOutSize@@Base+0x1d0>
   3ea68:	bl	48e0 <free@plt>
   3ea6c:	str	xzr, [x19, #8]
   3ea70:	ldr	x19, [sp, #16]
   3ea74:	ldp	x29, x30, [sp], #32
   3ea78:	ret
   3ea7c:	stp	x29, x30, [sp, #-48]!
   3ea80:	clz	w2, w1
   3ea84:	eor	w2, w2, #0x1f
   3ea88:	mov	x29, sp
   3ea8c:	add	w2, w2, #0x2
   3ea90:	stp	x19, x20, [sp, #16]
   3ea94:	mov	x20, x0
   3ea98:	str	x21, [sp, #32]
   3ea9c:	mov	w21, #0x1                   	// #1
   3eaa0:	str	w2, [x0, #8]
   3eaa4:	lsl	w2, w21, w2
   3eaa8:	str	w2, [x0, #12]
   3eaac:	sub	w0, w2, #0x1
   3eab0:	str	w0, [x20, #16]
   3eab4:	ubfiz	x19, x2, #3, #32
   3eab8:	mov	x0, x19
   3eabc:	bl	46a0 <malloc@plt>
   3eac0:	str	x0, [x20]
   3eac4:	cbnz	x0, 3eae0 <ZBUFF_recommendedDOutSize@@Base+0x240>
   3eac8:	mov	w0, #0x0                   	// #0
   3eacc:	str	xzr, [x20, #8]
   3ead0:	ldp	x19, x20, [sp, #16]
   3ead4:	ldr	x21, [sp, #32]
   3ead8:	ldp	x29, x30, [sp], #48
   3eadc:	ret
   3eae0:	mov	x2, x19
   3eae4:	mov	w1, #0xffffffff            	// #-1
   3eae8:	bl	4700 <memset@plt>
   3eaec:	mov	w0, w21
   3eaf0:	b	3ead0 <ZBUFF_recommendedDOutSize@@Base+0x230>
   3eaf4:	mov	x3, x0
   3eaf8:	mov	x2, #0x0                   	// #0
   3eafc:	mov	x0, #0x0                   	// #0
   3eb00:	cmp	w1, w2
   3eb04:	b.hi	3eb0c <ZBUFF_recommendedDOutSize@@Base+0x26c>  // b.pmore
   3eb08:	ret
   3eb0c:	ldr	x4, [x3, x2, lsl #3]
   3eb10:	add	x2, x2, #0x1
   3eb14:	add	x0, x0, x4
   3eb18:	b	3eb00 <ZBUFF_recommendedDOutSize@@Base+0x260>
   3eb1c:	stp	x29, x30, [sp, #-112]!
   3eb20:	mov	x29, sp
   3eb24:	stp	x19, x20, [sp, #16]
   3eb28:	mov	x19, x0
   3eb2c:	mov	x0, x2
   3eb30:	stp	x21, x22, [sp, #32]
   3eb34:	mov	w21, w3
   3eb38:	stp	x23, x24, [sp, #48]
   3eb3c:	mov	x23, x2
   3eb40:	stp	x25, x26, [sp, #64]
   3eb44:	mov	w26, w4
   3eb48:	stp	x27, x28, [sp, #80]
   3eb4c:	str	x1, [sp, #96]
   3eb50:	mov	w1, w3
   3eb54:	bl	3eaf4 <ZBUFF_recommendedDOutSize@@Base+0x254>
   3eb58:	mov	x5, x0
   3eb5c:	fmov	d1, #1.000000000000000000e+00
   3eb60:	fcmpe	d0, d1
   3eb64:	b.pl	3ebf8 <ZBUFF_recommendedDOutSize@@Base+0x358>  // b.nfrst
   3eb68:	ucvtf	d1, w21
   3eb6c:	mov	x0, x23
   3eb70:	fmul	d0, d1, d0
   3eb74:	fcvtzu	w28, d0
   3eb78:	mov	w1, w28
   3eb7c:	sub	w24, w21, w28
   3eb80:	bl	3eaf4 <ZBUFF_recommendedDOutSize@@Base+0x254>
   3eb84:	mov	x27, x0
   3eb88:	mov	w1, w24
   3eb8c:	add	x0, x23, w28, uxtw #3
   3eb90:	bl	3eaf4 <ZBUFF_recommendedDOutSize@@Base+0x254>
   3eb94:	mov	x6, x0
   3eb98:	cmp	w26, #0x8
   3eb9c:	adrp	x22, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3eba0:	mov	w20, #0x8                   	// #8
   3eba4:	csel	w20, w26, w20, cs  // cs = hs, nlast
   3eba8:	ldr	w0, [x22, #944]
   3ebac:	cmp	x20, x5
   3ebb0:	b.hi	3ebc0 <ZBUFF_recommendedDOutSize@@Base+0x320>  // b.pmore
   3ebb4:	mov	x1, #0xfffffffe            	// #4294967294
   3ebb8:	cmp	x5, x1
   3ebbc:	b.ls	3ec0c <ZBUFF_recommendedDOutSize@@Base+0x36c>  // b.plast
   3ebc0:	cmp	w0, #0x0
   3ebc4:	b.le	3ebf0 <ZBUFF_recommendedDOutSize@@Base+0x350>
   3ebc8:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3ebcc:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3ebd0:	ubfx	x2, x5, #20, #32
   3ebd4:	add	x1, x1, #0x67c
   3ebd8:	ldr	x19, [x19, #4048]
   3ebdc:	mov	w3, #0xfff                 	// #4095
   3ebe0:	ldr	x0, [x19]
   3ebe4:	bl	4b40 <fprintf@plt>
   3ebe8:	ldr	x0, [x19]
   3ebec:	bl	4970 <fflush@plt>
   3ebf0:	mov	x0, #0xffffffffffffffb8    	// #-72
   3ebf4:	b	3ed80 <ZBUFF_recommendedDOutSize@@Base+0x4e0>
   3ebf8:	mov	x27, x0
   3ebfc:	mov	w24, w21
   3ec00:	mov	w28, w21
   3ec04:	mov	x6, x0
   3ec08:	b	3eb98 <ZBUFF_recommendedDOutSize@@Base+0x2f8>
   3ec0c:	cmp	w28, #0x4
   3ec10:	b.hi	3ec3c <ZBUFF_recommendedDOutSize@@Base+0x39c>  // b.pmore
   3ec14:	cmp	w0, #0x0
   3ec18:	b.le	3ebf0 <ZBUFF_recommendedDOutSize@@Base+0x350>
   3ec1c:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3ec20:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3ec24:	mov	w2, w28
   3ec28:	add	x1, x1, #0x6bc
   3ec2c:	ldr	x19, [x19, #4048]
   3ec30:	ldr	x0, [x19]
   3ec34:	bl	4b40 <fprintf@plt>
   3ec38:	b	3ebe8 <ZBUFF_recommendedDOutSize@@Base+0x348>
   3ec3c:	cbnz	w24, 3ec60 <ZBUFF_recommendedDOutSize@@Base+0x3c0>
   3ec40:	cmp	w0, #0x0
   3ec44:	b.le	3ebf0 <ZBUFF_recommendedDOutSize@@Base+0x350>
   3ec48:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3ec4c:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3ec50:	mov	w2, #0x0                   	// #0
   3ec54:	add	x1, x1, #0x6f3
   3ec58:	ldr	x19, [x19, #4048]
   3ec5c:	b	3ec30 <ZBUFF_recommendedDOutSize@@Base+0x390>
   3ec60:	stp	xzr, xzr, [x19]
   3ec64:	cmp	w0, #0x1
   3ec68:	stp	xzr, xzr, [x19, #16]
   3ec6c:	stp	xzr, xzr, [x19, #32]
   3ec70:	stp	xzr, xzr, [x19, #48]
   3ec74:	stp	xzr, xzr, [x19, #64]
   3ec78:	str	xzr, [x19, #80]
   3ec7c:	str	x6, [sp, #104]
   3ec80:	b.le	3ecdc <ZBUFF_recommendedDOutSize@@Base+0x43c>
   3ec84:	adrp	x25, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3ec88:	mov	w3, w27
   3ec8c:	mov	w2, w28
   3ec90:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3ec94:	ldr	x25, [x25, #4048]
   3ec98:	add	x1, x1, #0x729
   3ec9c:	ldr	x0, [x25]
   3eca0:	bl	4b40 <fprintf@plt>
   3eca4:	ldr	x0, [x25]
   3eca8:	bl	4970 <fflush@plt>
   3ecac:	ldr	w0, [x22, #944]
   3ecb0:	cmp	w0, #0x1
   3ecb4:	b.le	3ecdc <ZBUFF_recommendedDOutSize@@Base+0x43c>
   3ecb8:	ldr	x0, [x25]
   3ecbc:	mov	w2, w24
   3ecc0:	ldr	x6, [sp, #104]
   3ecc4:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3ecc8:	add	x1, x1, #0x752
   3eccc:	mov	w3, w6
   3ecd0:	bl	4b40 <fprintf@plt>
   3ecd4:	ldr	x0, [x25]
   3ecd8:	bl	4970 <fflush@plt>
   3ecdc:	mov	w4, w28
   3ece0:	stp	x4, x24, [x19, #32]
   3ece4:	mov	x24, #0x1                   	// #1
   3ece8:	sub	x20, x24, x20
   3ecec:	str	x23, [x19, #16]
   3ecf0:	add	x27, x20, x27
   3ecf4:	str	x27, [x19, #56]
   3ecf8:	ldr	x0, [sp, #96]
   3ecfc:	str	x0, [x19]
   3ed00:	mov	w0, w21
   3ed04:	str	x0, [x19, #24]
   3ed08:	lsl	x27, x27, #2
   3ed0c:	mov	x0, x27
   3ed10:	bl	46a0 <malloc@plt>
   3ed14:	mov	x25, x0
   3ed18:	str	x25, [x19, #48]
   3ed1c:	mov	x0, x27
   3ed20:	bl	46a0 <malloc@plt>
   3ed24:	mov	x20, x0
   3ed28:	add	w0, w21, #0x1
   3ed2c:	str	x20, [x19, #72]
   3ed30:	lsl	x0, x0, #3
   3ed34:	bl	46a0 <malloc@plt>
   3ed38:	str	x0, [x19, #8]
   3ed3c:	cbz	x25, 3ed48 <ZBUFF_recommendedDOutSize@@Base+0x4a8>
   3ed40:	cbz	x20, 3ed48 <ZBUFF_recommendedDOutSize@@Base+0x4a8>
   3ed44:	cbnz	x0, 3ed9c <ZBUFF_recommendedDOutSize@@Base+0x4fc>
   3ed48:	ldr	w0, [x22, #944]
   3ed4c:	cmp	w0, #0x0
   3ed50:	b.le	3ed74 <ZBUFF_recommendedDOutSize@@Base+0x4d4>
   3ed54:	adrp	x20, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3ed58:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3ed5c:	add	x0, x0, #0x77a
   3ed60:	ldr	x20, [x20, #4048]
   3ed64:	ldr	x1, [x20]
   3ed68:	bl	44d0 <fputs@plt>
   3ed6c:	ldr	x0, [x20]
   3ed70:	bl	4970 <fflush@plt>
   3ed74:	mov	x0, x19
   3ed78:	bl	3ea20 <ZBUFF_recommendedDOutSize@@Base+0x180>
   3ed7c:	mov	x0, #0xffffffffffffffc0    	// #-64
   3ed80:	ldp	x19, x20, [sp, #16]
   3ed84:	ldp	x21, x22, [sp, #32]
   3ed88:	ldp	x23, x24, [sp, #48]
   3ed8c:	ldp	x25, x26, [sp, #64]
   3ed90:	ldp	x27, x28, [sp, #80]
   3ed94:	ldp	x29, x30, [sp], #112
   3ed98:	ret
   3ed9c:	mov	w1, w24
   3eda0:	str	xzr, [x0]
   3eda4:	str	xzr, [x19, #64]
   3eda8:	str	w26, [x19, #80]
   3edac:	cmp	w1, w21
   3edb0:	b.ls	3ee8c <ZBUFF_recommendedDOutSize@@Base+0x5ec>  // b.plast
   3edb4:	ldr	w0, [x22, #944]
   3edb8:	cmp	w0, #0x1
   3edbc:	b.le	3ede0 <ZBUFF_recommendedDOutSize@@Base+0x540>
   3edc0:	adrp	x20, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3edc4:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3edc8:	add	x0, x0, #0x79e
   3edcc:	ldr	x20, [x20, #4048]
   3edd0:	ldr	x1, [x20]
   3edd4:	bl	44d0 <fputs@plt>
   3edd8:	ldr	x0, [x20]
   3eddc:	bl	4970 <fflush@plt>
   3ede0:	ldp	x0, x1, [x19, #48]
   3ede4:	mov	w2, #0x0                   	// #0
   3ede8:	mov	w3, w2
   3edec:	cmp	x1, w2, uxtw
   3edf0:	b.hi	3eeac <ZBUFF_recommendedDOutSize@@Base+0x60c>  // b.pmore
   3edf4:	ldr	w4, [x19, #80]
   3edf8:	adrp	x2, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3edfc:	adrp	x3, 3e000 <ZSTD_decompressStream_simpleArgs@@Base+0x1858>
   3ee00:	add	x3, x3, #0x984
   3ee04:	cmp	w4, #0x9
   3ee08:	str	x19, [x2, #968]
   3ee0c:	adrp	x2, 3e000 <ZSTD_decompressStream_simpleArgs@@Base+0x1858>
   3ee10:	add	x2, x2, #0x9dc
   3ee14:	csel	x3, x3, x2, cc  // cc = lo, ul, last
   3ee18:	mov	x2, #0x4                   	// #4
   3ee1c:	bl	45b0 <qsort@plt>
   3ee20:	ldr	w0, [x22, #944]
   3ee24:	cmp	w0, #0x1
   3ee28:	b.le	3ee4c <ZBUFF_recommendedDOutSize@@Base+0x5ac>
   3ee2c:	adrp	x20, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3ee30:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3ee34:	add	x0, x0, #0x7c1
   3ee38:	ldr	x20, [x20, #4048]
   3ee3c:	ldr	x1, [x20]
   3ee40:	bl	44d0 <fputs@plt>
   3ee44:	ldr	x0, [x20]
   3ee48:	bl	4970 <fflush@plt>
   3ee4c:	ldr	w1, [x19, #80]
   3ee50:	adrp	x0, 3e000 <ZSTD_decompressStream_simpleArgs@@Base+0x1858>
   3ee54:	ldp	x21, x24, [x19, #48]
   3ee58:	add	x0, x0, #0x9c0
   3ee5c:	cmp	w1, #0x9
   3ee60:	adrp	x2, 3e000 <ZSTD_decompressStream_simpleArgs@@Base+0x1858>
   3ee64:	add	x2, x2, #0x938
   3ee68:	mov	x22, #0x0                   	// #0
   3ee6c:	csel	x23, x2, x0, cc  // cc = lo, ul, last
   3ee70:	cmp	x24, x22
   3ee74:	b.hi	3eeb8 <ZBUFF_recommendedDOutSize@@Base+0x618>  // b.pmore
   3ee78:	ldr	x0, [x19, #48]
   3ee7c:	str	xzr, [x19, #48]
   3ee80:	str	x0, [x19, #64]
   3ee84:	mov	x0, #0x0                   	// #0
   3ee88:	b	3ed80 <ZBUFF_recommendedDOutSize@@Base+0x4e0>
   3ee8c:	sub	w2, w1, #0x1
   3ee90:	lsl	x2, x2, #3
   3ee94:	ldr	x3, [x0, x2]
   3ee98:	ldr	x2, [x23, x2]
   3ee9c:	add	x2, x3, x2
   3eea0:	str	x2, [x0, w1, uxtw #3]
   3eea4:	add	w1, w1, #0x1
   3eea8:	b	3edac <ZBUFF_recommendedDOutSize@@Base+0x50c>
   3eeac:	str	w2, [x0, x3, lsl #2]
   3eeb0:	add	w2, w2, #0x1
   3eeb4:	b	3ede8 <ZBUFF_recommendedDOutSize@@Base+0x548>
   3eeb8:	add	x20, x21, #0x4
   3eebc:	add	x22, x22, #0x1
   3eec0:	cmp	x24, x22
   3eec4:	b.ne	3eefc <ZBUFF_recommendedDOutSize@@Base+0x65c>  // b.any
   3eec8:	ldr	x1, [x19, #48]
   3eecc:	mov	w5, #0x0                   	// #0
   3eed0:	ldr	x3, [x19, #8]
   3eed4:	sub	x2, x21, x1
   3eed8:	ldr	x6, [x19, #24]
   3eedc:	asr	x2, x2, #2
   3eee0:	ldr	x0, [x3]
   3eee4:	mov	w8, w2
   3eee8:	add	x6, x3, x6, lsl #3
   3eeec:	cmp	x20, x21
   3eef0:	b.ne	3ef18 <ZBUFF_recommendedDOutSize@@Base+0x678>  // b.any
   3eef4:	str	w5, [x1, w2, uxtw #2]
   3eef8:	b	3ee70 <ZBUFF_recommendedDOutSize@@Base+0x5d0>
   3eefc:	mov	x2, x20
   3ef00:	mov	x1, x21
   3ef04:	mov	x0, x19
   3ef08:	blr	x23
   3ef0c:	cbnz	w0, 3eec8 <ZBUFF_recommendedDOutSize@@Base+0x628>
   3ef10:	add	x20, x20, #0x4
   3ef14:	b	3eebc <ZBUFF_recommendedDOutSize@@Base+0x61c>
   3ef18:	ldr	w7, [x21]
   3ef1c:	ldr	x4, [x19, #72]
   3ef20:	str	w8, [x4, x7, lsl #2]
   3ef24:	ldr	w7, [x21], #4
   3ef28:	cmp	x7, x0
   3ef2c:	b.cc	3eeec <ZBUFF_recommendedDOutSize@@Base+0x64c>  // b.lo, b.ul, b.last
   3ef30:	add	w5, w5, #0x1
   3ef34:	cmp	x20, x21
   3ef38:	b.eq	3eef4 <ZBUFF_recommendedDOutSize@@Base+0x654>  // b.none
   3ef3c:	sub	x0, x6, x3
   3ef40:	asr	x0, x0, #3
   3ef44:	cbnz	x0, 3ef50 <ZBUFF_recommendedDOutSize@@Base+0x6b0>
   3ef48:	ldr	x0, [x3], #8
   3ef4c:	b	3eeec <ZBUFF_recommendedDOutSize@@Base+0x64c>
   3ef50:	lsr	x4, x0, #1
   3ef54:	add	x9, x3, x4, lsl #3
   3ef58:	ldr	x10, [x3, x4, lsl #3]
   3ef5c:	cmp	x7, x10
   3ef60:	b.ls	3ef74 <ZBUFF_recommendedDOutSize@@Base+0x6d4>  // b.plast
   3ef64:	sub	x0, x0, #0x1
   3ef68:	add	x3, x9, #0x8
   3ef6c:	sub	x0, x0, x4
   3ef70:	b	3ef44 <ZBUFF_recommendedDOutSize@@Base+0x6a4>
   3ef74:	mov	x0, x4
   3ef78:	b	3ef44 <ZBUFF_recommendedDOutSize@@Base+0x6a4>
   3ef7c:	fmov	d1, x0
   3ef80:	fmov	d2, x1
   3ef84:	ucvtf	d3, d1
   3ef88:	ucvtf	d0, d2
   3ef8c:	fdiv	d0, d0, d3
   3ef90:	fmov	d3, #1.000000000000000000e+01
   3ef94:	fcmpe	d0, d3
   3ef98:	b.ge	3efe0 <ZBUFF_recommendedDOutSize@@Base+0x740>  // b.tcont
   3ef9c:	cmp	w2, #0x0
   3efa0:	b.le	3efe0 <ZBUFF_recommendedDOutSize@@Base+0x740>
   3efa4:	stp	x29, x30, [sp, #-32]!
   3efa8:	mov	w2, w0
   3efac:	mov	w3, w1
   3efb0:	mov	x29, sp
   3efb4:	str	x19, [sp, #16]
   3efb8:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3efbc:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3efc0:	add	x1, x1, #0x7d8
   3efc4:	ldr	x19, [x19, #4048]
   3efc8:	ldr	x0, [x19]
   3efcc:	bl	4b40 <fprintf@plt>
   3efd0:	ldr	x0, [x19]
   3efd4:	ldr	x19, [sp, #16]
   3efd8:	ldp	x29, x30, [sp], #32
   3efdc:	b	4970 <fflush@plt>
   3efe0:	ret
   3efe4:	udiv	w0, w0, w2
   3efe8:	mov	w4, #0xa                   	// #10
   3efec:	mul	w4, w2, w4
   3eff0:	cmp	w0, w3
   3eff4:	b.cc	3f018 <ZBUFF_recommendedDOutSize@@Base+0x778>  // b.lo, b.ul, b.last
   3eff8:	udiv	w3, w0, w3
   3effc:	udiv	w2, w1, w3
   3f000:	cmp	w2, w4
   3f004:	b.cc	3f020 <ZBUFF_recommendedDOutSize@@Base+0x780>  // b.lo, b.ul, b.last
   3f008:	mov	x0, #0x0                   	// #0
   3f00c:	bfxil	x0, x3, #0, #32
   3f010:	bfi	x0, x2, #32, #32
   3f014:	ret
   3f018:	mov	w3, #0x1                   	// #1
   3f01c:	b	3effc <ZBUFF_recommendedDOutSize@@Base+0x75c>
   3f020:	cmp	w4, w1
   3f024:	mov	x0, #0x0                   	// #0
   3f028:	csel	w4, w4, w1, ls  // ls = plast
   3f02c:	udiv	w1, w1, w4
   3f030:	bfxil	x0, x1, #0, #32
   3f034:	bfi	x0, x4, #32, #32
   3f038:	b	3f014 <ZBUFF_recommendedDOutSize@@Base+0x774>
   3f03c:	stp	x29, x30, [sp, #-128]!
   3f040:	mov	x29, sp
   3f044:	stp	x21, x22, [sp, #32]
   3f048:	mov	x21, x0
   3f04c:	sub	w0, w6, #0x1
   3f050:	stp	x23, x24, [sp, #48]
   3f054:	mov	x24, x1
   3f058:	ldr	w1, [x21, #56]
   3f05c:	str	x3, [sp, #112]
   3f060:	mov	w3, #0x4                   	// #4
   3f064:	stp	x19, x20, [sp, #16]
   3f068:	mov	x20, x2
   3f06c:	mov	w2, w5
   3f070:	stp	x25, x26, [sp, #64]
   3f074:	mov	x25, x4
   3f078:	mov	w26, w5
   3f07c:	stp	x27, x28, [sp, #80]
   3f080:	mov	w27, w6
   3f084:	str	w0, [sp, #120]
   3f088:	mov	w0, w4
   3f08c:	bl	3efe4 <ZBUFF_recommendedDOutSize@@Base+0x744>
   3f090:	lsr	x3, x0, #32
   3f094:	stp	w3, w0, [sp, #96]
   3f098:	mov	x2, x0
   3f09c:	cmp	w0, #0x4f
   3f0a0:	b.ls	3f158 <ZBUFF_recommendedDOutSize@@Base+0x8b8>  // b.plast
   3f0a4:	lsr	w22, w0, #3
   3f0a8:	mov	x0, #0x64                  	// #100
   3f0ac:	cmp	w22, #0x64
   3f0b0:	csel	x22, x22, x0, ls  // ls = plast
   3f0b4:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3f0b8:	ldr	w0, [x0, #944]
   3f0bc:	cmp	w0, #0x1
   3f0c0:	b.le	3f0e4 <ZBUFF_recommendedDOutSize@@Base+0x844>
   3f0c4:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3f0c8:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3f0cc:	add	x1, x1, #0x8f0
   3f0d0:	ldr	x19, [x19, #4048]
   3f0d4:	ldr	x0, [x19]
   3f0d8:	bl	4b40 <fprintf@plt>
   3f0dc:	ldr	x0, [x19]
   3f0e0:	bl	4970 <fflush@plt>
   3f0e4:	sub	w26, w26, w27
   3f0e8:	mov	x19, x25
   3f0ec:	add	w0, w26, #0x2
   3f0f0:	mov	x23, #0x0                   	// #0
   3f0f4:	mov	x28, #0x0                   	// #0
   3f0f8:	str	w0, [sp, #124]
   3f0fc:	cbnz	x19, 3f160 <ZBUFF_recommendedDOutSize@@Base+0x8c0>
   3f100:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3f104:	ldr	w0, [x0, #944]
   3f108:	cmp	w0, #0x1
   3f10c:	b.le	3f138 <ZBUFF_recommendedDOutSize@@Base+0x898>
   3f110:	adrp	x20, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3f114:	adrp	x2, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   3f118:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3f11c:	add	x2, x2, #0x605
   3f120:	ldr	x20, [x20, #4048]
   3f124:	add	x1, x1, #0x929
   3f128:	ldr	x0, [x20]
   3f12c:	bl	4b40 <fprintf@plt>
   3f130:	ldr	x0, [x20]
   3f134:	bl	4970 <fflush@plt>
   3f138:	mov	x0, x19
   3f13c:	ldp	x19, x20, [sp, #16]
   3f140:	ldp	x21, x22, [sp, #32]
   3f144:	ldp	x23, x24, [sp, #48]
   3f148:	ldp	x25, x26, [sp, #64]
   3f14c:	ldp	x27, x28, [sp, #80]
   3f150:	ldp	x29, x30, [sp], #128
   3f154:	ret
   3f158:	mov	x22, #0xa                   	// #10
   3f15c:	b	3f0b4 <ZBUFF_recommendedDOutSize@@Base+0x814>
   3f160:	ldr	w0, [sp, #96]
   3f164:	mov	w1, #0xffffffff            	// #-1
   3f168:	ldr	w2, [x20, #12]
   3f16c:	mul	w26, w0, w23
   3f170:	lsl	x2, x2, #3
   3f174:	add	w0, w0, w26
   3f178:	str	w0, [sp, #104]
   3f17c:	ldr	x0, [x20]
   3f180:	bl	4700 <memset@plt>
   3f184:	ubfiz	x11, x26, #2, #32
   3f188:	mov	w14, w26
   3f18c:	mov	w13, #0x0                   	// #0
   3f190:	mov	w9, #0x0                   	// #0
   3f194:	mov	w10, #0x0                   	// #0
   3f198:	mov	w8, #0x0                   	// #0
   3f19c:	mov	w12, #0x20                  	// #32
   3f1a0:	ldr	w0, [sp, #104]
   3f1a4:	cmp	w0, w26
   3f1a8:	b.hi	3f1ec <ZBUFF_recommendedDOutSize@@Base+0x94c>  // b.pmore
   3f1ac:	mov	w1, w8
   3f1b0:	mov	w0, w10
   3f1b4:	cmp	w8, w10
   3f1b8:	b.ne	3f310 <ZBUFF_recommendedDOutSize@@Base+0xa70>  // b.any
   3f1bc:	mov	w2, w0
   3f1c0:	cmp	w2, w1
   3f1c4:	b.ne	3f338 <ZBUFF_recommendedDOutSize@@Base+0xa98>  // b.any
   3f1c8:	cbnz	w9, 3f34c <ZBUFF_recommendedDOutSize@@Base+0xaac>
   3f1cc:	add	x28, x28, #0x1
   3f1d0:	cmp	x28, x22
   3f1d4:	b.cs	3f100 <ZBUFF_recommendedDOutSize@@Base+0x860>  // b.hs, b.nlast
   3f1d8:	ldr	w0, [sp, #100]
   3f1dc:	add	x23, x23, #0x1
   3f1e0:	udiv	x1, x23, x0
   3f1e4:	msub	x23, x1, x0, x23
   3f1e8:	b	3f0fc <ZBUFF_recommendedDOutSize@@Base+0x85c>
   3f1ec:	ldr	x0, [x21, #72]
   3f1f0:	ldr	w15, [x0, x11]
   3f1f4:	mov	x0, x20
   3f1f8:	mov	w1, w15
   3f1fc:	bl	3e8f8 <ZBUFF_recommendedDOutSize@@Base+0x58>
   3f200:	ldr	w2, [x0]
   3f204:	cbnz	w2, 3f210 <ZBUFF_recommendedDOutSize@@Base+0x970>
   3f208:	ldr	w1, [x24, w15, uxtw #2]
   3f20c:	add	w13, w13, w1
   3f210:	ldr	w1, [sp, #124]
   3f214:	add	w26, w26, #0x1
   3f218:	add	w2, w2, #0x1
   3f21c:	str	w2, [x0]
   3f220:	sub	w0, w26, w14
   3f224:	cmp	w0, w1
   3f228:	b.ne	3f2a4 <ZBUFF_recommendedDOutSize@@Base+0xa04>  // b.any
   3f22c:	ldr	x0, [x21, #72]
   3f230:	ldr	w15, [x0, w14, uxtw #2]
   3f234:	mov	x0, x20
   3f238:	mov	w1, w15
   3f23c:	bl	3e8f8 <ZBUFF_recommendedDOutSize@@Base+0x58>
   3f240:	ldr	w1, [x0]
   3f244:	add	w14, w14, #0x1
   3f248:	sub	w1, w1, #0x1
   3f24c:	str	w1, [x0]
   3f250:	cbnz	w1, 3f2a4 <ZBUFF_recommendedDOutSize@@Base+0xa04>
   3f254:	mov	w1, w15
   3f258:	mov	x0, x20
   3f25c:	bl	3e8a4 <ZBUFF_recommendedDOutSize@@Base+0x4>
   3f260:	ldr	x7, [x20]
   3f264:	add	x4, x7, w0, uxtw #3
   3f268:	ldr	w1, [x4, #4]
   3f26c:	cmn	w1, #0x1
   3f270:	b.eq	3f29c <ZBUFF_recommendedDOutSize@@Base+0x9fc>  // b.none
   3f274:	ldr	w6, [x20, #16]
   3f278:	add	w0, w0, #0x1
   3f27c:	mov	w5, #0x1                   	// #1
   3f280:	and	w0, w0, w6
   3f284:	ubfiz	x2, x0, #3, #32
   3f288:	add	x1, x7, x2
   3f28c:	ldr	w16, [x1, #4]
   3f290:	cmn	w16, #0x1
   3f294:	b.ne	3f2c0 <ZBUFF_recommendedDOutSize@@Base+0xa20>  // b.any
   3f298:	str	w16, [x4, #4]
   3f29c:	ldr	w0, [x24, w15, uxtw #2]
   3f2a0:	sub	w13, w13, w0
   3f2a4:	cmp	w9, w13
   3f2a8:	b.cs	3f2b8 <ZBUFF_recommendedDOutSize@@Base+0xa18>  // b.hs, b.nlast
   3f2ac:	mov	w9, w13
   3f2b0:	mov	w10, w26
   3f2b4:	mov	w8, w14
   3f2b8:	add	x11, x11, #0x4
   3f2bc:	b	3f1a0 <ZBUFF_recommendedDOutSize@@Base+0x900>
   3f2c0:	ldr	w17, [x7, x2]
   3f2c4:	mov	w2, #0x79b1                	// #31153
   3f2c8:	movk	w2, #0x9e37, lsl #16
   3f2cc:	ldr	w18, [x20, #8]
   3f2d0:	sub	w18, w12, w18
   3f2d4:	mul	w2, w17, w2
   3f2d8:	lsr	w2, w2, w18
   3f2dc:	sub	w2, w0, w2
   3f2e0:	and	w2, w2, w6
   3f2e4:	cmp	w2, w5
   3f2e8:	b.cc	3f304 <ZBUFF_recommendedDOutSize@@Base+0xa64>  // b.lo, b.ul, b.last
   3f2ec:	mov	w5, #0x1                   	// #1
   3f2f0:	stp	w17, w16, [x4]
   3f2f4:	add	w0, w0, #0x1
   3f2f8:	mov	x4, x1
   3f2fc:	and	w0, w6, w0
   3f300:	b	3f284 <ZBUFF_recommendedDOutSize@@Base+0x9e4>
   3f304:	add	w5, w5, #0x1
   3f308:	mov	x1, x4
   3f30c:	b	3f2f4 <ZBUFF_recommendedDOutSize@@Base+0xa54>
   3f310:	ldr	x3, [x21, #72]
   3f314:	add	w2, w8, #0x1
   3f318:	ldr	w3, [x3, w8, uxtw #2]
   3f31c:	ldr	w3, [x24, x3, lsl #2]
   3f320:	cbz	w3, 3f330 <ZBUFF_recommendedDOutSize@@Base+0xa90>
   3f324:	cmp	w0, w8
   3f328:	mov	w1, w2
   3f32c:	csel	w0, w0, w8, ls  // ls = plast
   3f330:	mov	w8, w2
   3f334:	b	3f1b4 <ZBUFF_recommendedDOutSize@@Base+0x914>
   3f338:	ldr	x3, [x21, #72]
   3f33c:	ldr	w3, [x3, w2, uxtw #2]
   3f340:	add	w2, w2, #0x1
   3f344:	str	wzr, [x24, x3, lsl #2]
   3f348:	b	3f1c0 <ZBUFF_recommendedDOutSize@@Base+0x920>
   3f34c:	ldr	w1, [sp, #120]
   3f350:	add	w2, w1, w2
   3f354:	sub	w2, w2, w0
   3f358:	cmp	x2, x19
   3f35c:	csel	x26, x2, x19, ls  // ls = plast
   3f360:	cmp	x26, w27, uxtw
   3f364:	b.cc	3f100 <ZBUFF_recommendedDOutSize@@Base+0x860>  // b.lo, b.ul, b.last
   3f368:	adrp	x1, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3f36c:	sub	x3, x19, x26
   3f370:	mov	x2, x26
   3f374:	ldr	w28, [x1, #944]
   3f378:	sub	x1, x19, x26
   3f37c:	str	x1, [sp, #104]
   3f380:	ldr	x1, [x21]
   3f384:	add	x1, x1, w0, uxtw
   3f388:	ldr	x0, [sp, #112]
   3f38c:	add	x0, x0, x3
   3f390:	bl	4460 <memcpy@plt>
   3f394:	cmp	w28, #0x1
   3f398:	b.le	3f40c <ZBUFF_recommendedDOutSize@@Base+0xb6c>
   3f39c:	bl	44c0 <clock@plt>
   3f3a0:	adrp	x1, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3f3a4:	add	x3, x1, #0x3c8
   3f3a8:	ldr	x3, [x3, #8]
   3f3ac:	sub	x0, x0, x3
   3f3b0:	mov	x3, #0x49f0                	// #18928
   3f3b4:	movk	x3, #0x2, lsl #16
   3f3b8:	cmp	x0, x3
   3f3bc:	b.gt	3f3c8 <ZBUFF_recommendedDOutSize@@Base+0xb28>
   3f3c0:	cmp	w28, #0x3
   3f3c4:	b.le	3f40c <ZBUFF_recommendedDOutSize@@Base+0xb6c>
   3f3c8:	bl	44c0 <clock@plt>
   3f3cc:	sub	x19, x25, x19
   3f3d0:	add	x2, x19, x26
   3f3d4:	mov	x19, #0x64                  	// #100
   3f3d8:	adrp	x1, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3f3dc:	add	x1, x1, #0x3c8
   3f3e0:	mul	x2, x2, x19
   3f3e4:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3f3e8:	str	x0, [x1, #8]
   3f3ec:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3f3f0:	ldr	x19, [x19, #4048]
   3f3f4:	add	x1, x1, #0x91c
   3f3f8:	udiv	x2, x2, x25
   3f3fc:	ldr	x0, [x19]
   3f400:	bl	4b40 <fprintf@plt>
   3f404:	ldr	x0, [x19]
   3f408:	bl	4970 <fflush@plt>
   3f40c:	mov	x28, #0x0                   	// #0
   3f410:	ldr	x19, [sp, #104]
   3f414:	b	3f1d8 <ZBUFF_recommendedDOutSize@@Base+0x938>

000000000003f418 <ZDICT_trainFromBuffer_cover@@Base>:
   3f418:	sub	sp, sp, #0xf0
   3f41c:	stp	x29, x30, [sp, #16]
   3f420:	add	x29, sp, #0x10
   3f424:	stp	x21, x22, [sp, #48]
   3f428:	mov	x21, x0
   3f42c:	ldr	w0, [x5, #36]
   3f430:	stp	x23, x24, [sp, #64]
   3f434:	stp	x25, x26, [sp, #80]
   3f438:	mov	x26, x5
   3f43c:	stp	x27, x28, [sp, #96]
   3f440:	ldp	w23, w28, [x5]
   3f444:	adrp	x5, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3f448:	stp	x19, x20, [sp, #32]
   3f44c:	str	w0, [x5, #944]
   3f450:	cbz	w28, 3f4a4 <ZDICT_trainFromBuffer_cover@@Base+0x8c>
   3f454:	cbz	w23, 3f4a4 <ZDICT_trainFromBuffer_cover@@Base+0x8c>
   3f458:	mov	x20, x1
   3f45c:	cmp	x1, w23, uxtw
   3f460:	b.cc	3f4a4 <ZDICT_trainFromBuffer_cover@@Base+0x8c>  // b.lo, b.ul, b.last
   3f464:	cmp	w23, w28
   3f468:	b.cc	3f4a4 <ZDICT_trainFromBuffer_cover@@Base+0x8c>  // b.lo, b.ul, b.last
   3f46c:	mov	w22, w4
   3f470:	cbnz	w4, 3f4d4 <ZDICT_trainFromBuffer_cover@@Base+0xbc>
   3f474:	cmp	w0, #0x0
   3f478:	b.le	3f49c <ZDICT_trainFromBuffer_cover@@Base+0x84>
   3f47c:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3f480:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3f484:	add	x0, x0, #0x94c
   3f488:	ldr	x19, [x19, #4048]
   3f48c:	ldr	x1, [x19]
   3f490:	bl	44d0 <fputs@plt>
   3f494:	ldr	x0, [x19]
   3f498:	bl	4970 <fflush@plt>
   3f49c:	mov	x19, #0xffffffffffffffb8    	// #-72
   3f4a0:	b	3f5b4 <ZDICT_trainFromBuffer_cover@@Base+0x19c>
   3f4a4:	cmp	w0, #0x0
   3f4a8:	b.le	3f4cc <ZDICT_trainFromBuffer_cover@@Base+0xb4>
   3f4ac:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3f4b0:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3f4b4:	add	x0, x0, #0x930
   3f4b8:	ldr	x19, [x19, #4048]
   3f4bc:	ldr	x1, [x19]
   3f4c0:	bl	44d0 <fputs@plt>
   3f4c4:	ldr	x0, [x19]
   3f4c8:	bl	4970 <fflush@plt>
   3f4cc:	mov	x19, #0xffffffffffffffd6    	// #-42
   3f4d0:	b	3f5b4 <ZDICT_trainFromBuffer_cover@@Base+0x19c>
   3f4d4:	cmp	x1, #0xff
   3f4d8:	b.hi	3f510 <ZDICT_trainFromBuffer_cover@@Base+0xf8>  // b.pmore
   3f4dc:	cmp	w0, #0x0
   3f4e0:	b.le	3f508 <ZDICT_trainFromBuffer_cover@@Base+0xf0>
   3f4e4:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3f4e8:	mov	w2, #0x100                 	// #256
   3f4ec:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3f4f0:	add	x1, x1, #0x975
   3f4f4:	ldr	x19, [x19, #4048]
   3f4f8:	ldr	x0, [x19]
   3f4fc:	bl	4b40 <fprintf@plt>
   3f500:	ldr	x0, [x19]
   3f504:	bl	4970 <fflush@plt>
   3f508:	mov	x19, #0xffffffffffffffba    	// #-70
   3f50c:	b	3f5b4 <ZDICT_trainFromBuffer_cover@@Base+0x19c>
   3f510:	fmov	d0, #1.000000000000000000e+00
   3f514:	mov	x25, x2
   3f518:	mov	x27, x3
   3f51c:	add	x24, sp, #0x98
   3f520:	mov	w4, w28
   3f524:	mov	w3, w22
   3f528:	mov	x2, x27
   3f52c:	mov	x1, x25
   3f530:	mov	x0, x24
   3f534:	bl	3eb1c <ZBUFF_recommendedDOutSize@@Base+0x27c>
   3f538:	mov	x19, x0
   3f53c:	cmn	x0, #0x78
   3f540:	b.hi	3f5b4 <ZDICT_trainFromBuffer_cover@@Base+0x19c>  // b.pmore
   3f544:	adrp	x5, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3f548:	mov	x0, x20
   3f54c:	ldr	x1, [sp, #208]
   3f550:	ldr	w2, [x5, #944]
   3f554:	bl	3ef7c <ZBUFF_recommendedDOutSize@@Base+0x6dc>
   3f558:	add	x2, sp, #0x80
   3f55c:	add	w1, w23, #0x1
   3f560:	mov	x0, x2
   3f564:	sub	w1, w1, w28
   3f568:	str	x2, [sp, #120]
   3f56c:	bl	3ea7c <ZBUFF_recommendedDOutSize@@Base+0x1dc>
   3f570:	adrp	x5, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3f574:	ldr	x2, [sp, #120]
   3f578:	cbnz	w0, 3f5d8 <ZDICT_trainFromBuffer_cover@@Base+0x1c0>
   3f57c:	ldr	w0, [x5, #944]
   3f580:	cmp	w0, #0x0
   3f584:	b.le	3f5a8 <ZDICT_trainFromBuffer_cover@@Base+0x190>
   3f588:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3f58c:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3f590:	add	x0, x0, #0x99d
   3f594:	ldr	x19, [x19, #4048]
   3f598:	ldr	x1, [x19]
   3f59c:	bl	44d0 <fputs@plt>
   3f5a0:	ldr	x0, [x19]
   3f5a4:	bl	4970 <fflush@plt>
   3f5a8:	mov	x19, #0xffffffffffffffc0    	// #-64
   3f5ac:	mov	x0, x24
   3f5b0:	bl	3ea20 <ZBUFF_recommendedDOutSize@@Base+0x180>
   3f5b4:	mov	x0, x19
   3f5b8:	ldp	x29, x30, [sp, #16]
   3f5bc:	ldp	x19, x20, [sp, #32]
   3f5c0:	ldp	x21, x22, [sp, #48]
   3f5c4:	ldp	x23, x24, [sp, #64]
   3f5c8:	ldp	x25, x26, [sp, #80]
   3f5cc:	ldp	x27, x28, [sp, #96]
   3f5d0:	add	sp, sp, #0xf0
   3f5d4:	ret
   3f5d8:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3f5dc:	ldr	w0, [x0, #944]
   3f5e0:	cmp	w0, #0x1
   3f5e4:	b.le	3f610 <ZDICT_trainFromBuffer_cover@@Base+0x1f8>
   3f5e8:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3f5ec:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3f5f0:	add	x0, x0, #0x9c9
   3f5f4:	str	x2, [sp, #120]
   3f5f8:	ldr	x19, [x19, #4048]
   3f5fc:	ldr	x1, [x19]
   3f600:	bl	44d0 <fputs@plt>
   3f604:	ldr	x0, [x19]
   3f608:	bl	4970 <fflush@plt>
   3f60c:	ldr	x2, [sp, #120]
   3f610:	mov	w6, w28
   3f614:	ldr	x1, [sp, #216]
   3f618:	mov	w5, w23
   3f61c:	mov	x4, x20
   3f620:	mov	x3, x21
   3f624:	mov	x0, x24
   3f628:	bl	3f03c <ZBUFF_recommendedDOutSize@@Base+0x79c>
   3f62c:	sub	x3, x20, x0
   3f630:	ldr	x1, [x26, #32]
   3f634:	str	x1, [sp]
   3f638:	add	x2, x21, x0
   3f63c:	mov	w6, w22
   3f640:	ldr	w1, [x26, #40]
   3f644:	mov	x5, x27
   3f648:	str	w1, [sp, #8]
   3f64c:	mov	x4, x25
   3f650:	mov	x0, x21
   3f654:	mov	x1, x20
   3f658:	bl	4710 <ZDICT_finalizeDictionary@plt>
   3f65c:	mov	x19, x0
   3f660:	cmn	x0, #0x78
   3f664:	b.hi	3f69c <ZDICT_trainFromBuffer_cover@@Base+0x284>  // b.pmore
   3f668:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3f66c:	ldr	w0, [x0, #944]
   3f670:	cmp	w0, #0x1
   3f674:	b.le	3f69c <ZDICT_trainFromBuffer_cover@@Base+0x284>
   3f678:	adrp	x20, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3f67c:	mov	w2, w19
   3f680:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3f684:	add	x1, x1, #0x9de
   3f688:	ldr	x20, [x20, #4048]
   3f68c:	ldr	x0, [x20]
   3f690:	bl	4b40 <fprintf@plt>
   3f694:	ldr	x0, [x20]
   3f698:	bl	4970 <fflush@plt>
   3f69c:	mov	x0, x24
   3f6a0:	bl	3ea20 <ZBUFF_recommendedDOutSize@@Base+0x180>
   3f6a4:	ldr	x0, [sp, #128]
   3f6a8:	cbz	x0, 3f5b4 <ZDICT_trainFromBuffer_cover@@Base+0x19c>
   3f6ac:	bl	48e0 <free@plt>
   3f6b0:	b	3f5b4 <ZDICT_trainFromBuffer_cover@@Base+0x19c>
   3f6b4:	stp	x29, x30, [sp, #-112]!
   3f6b8:	fmov	d0, #1.000000000000000000e+00
   3f6bc:	mov	x29, sp
   3f6c0:	ldr	d1, [x0, #16]
   3f6c4:	stp	x21, x22, [sp, #32]
   3f6c8:	mov	x21, x7
   3f6cc:	fcmpe	d1, d0
   3f6d0:	stp	x23, x24, [sp, #48]
   3f6d4:	mov	x23, x5
   3f6d8:	stp	x25, x26, [sp, #64]
   3f6dc:	mov	x25, x1
   3f6e0:	mov	x26, x3
   3f6e4:	csel	x22, x4, xzr, mi  // mi = first
   3f6e8:	stp	x27, x28, [sp, #80]
   3f6ec:	mov	x1, x22
   3f6f0:	mov	x27, x6
   3f6f4:	stp	x19, x20, [sp, #16]
   3f6f8:	mov	x19, x0
   3f6fc:	mov	x0, #0x0                   	// #0
   3f700:	str	x2, [sp, #104]
   3f704:	cmp	x1, x23
   3f708:	b.cc	3f750 <ZDICT_trainFromBuffer_cover@@Base+0x338>  // b.lo, b.ul, b.last
   3f70c:	bl	4980 <ZSTD_compressBound@plt>
   3f710:	mov	x24, x0
   3f714:	bl	46a0 <malloc@plt>
   3f718:	mov	x20, x0
   3f71c:	bl	4720 <ZSTD_createCCtx@plt>
   3f720:	mov	x28, x0
   3f724:	ldr	w2, [x19, #32]
   3f728:	mov	x0, x27
   3f72c:	mov	x1, x21
   3f730:	bl	48c0 <ZSTD_createCDict@plt>
   3f734:	mov	x27, x0
   3f738:	cmp	x20, #0x0
   3f73c:	ccmp	x28, #0x0, #0x4, ne  // ne = any
   3f740:	b.eq	3f748 <ZDICT_trainFromBuffer_cover@@Base+0x330>  // b.none
   3f744:	cbnz	x0, 3f79c <ZDICT_trainFromBuffer_cover@@Base+0x384>
   3f748:	mov	x19, #0xffffffffffffffff    	// #-1
   3f74c:	b	3f7a8 <ZDICT_trainFromBuffer_cover@@Base+0x390>
   3f750:	ldr	x2, [x25, x1, lsl #3]
   3f754:	add	x1, x1, #0x1
   3f758:	cmp	x0, x2
   3f75c:	csel	x0, x0, x2, cs  // cs = hs, nlast
   3f760:	b	3f704 <ZDICT_trainFromBuffer_cover@@Base+0x2ec>
   3f764:	ldr	x4, [x25, x22, lsl #3]
   3f768:	mov	x5, x27
   3f76c:	ldr	x3, [x26, x22, lsl #3]
   3f770:	mov	x2, x24
   3f774:	ldr	x0, [sp, #104]
   3f778:	mov	x1, x20
   3f77c:	add	x3, x0, x3
   3f780:	mov	x0, x28
   3f784:	bl	47b0 <ZSTD_compress_usingCDict@plt>
   3f788:	mov	x19, x0
   3f78c:	cmn	x0, #0x78
   3f790:	b.hi	3f7a8 <ZDICT_trainFromBuffer_cover@@Base+0x390>  // b.pmore
   3f794:	add	x21, x21, x0
   3f798:	add	x22, x22, #0x1
   3f79c:	cmp	x22, x23
   3f7a0:	b.cc	3f764 <ZDICT_trainFromBuffer_cover@@Base+0x34c>  // b.lo, b.ul, b.last
   3f7a4:	mov	x19, x21
   3f7a8:	mov	x0, x28
   3f7ac:	bl	45f0 <ZSTD_freeCCtx@plt>
   3f7b0:	mov	x0, x27
   3f7b4:	bl	45c0 <ZSTD_freeCDict@plt>
   3f7b8:	cbz	x20, 3f7c4 <ZDICT_trainFromBuffer_cover@@Base+0x3ac>
   3f7bc:	mov	x0, x20
   3f7c0:	bl	48e0 <free@plt>
   3f7c4:	mov	x0, x19
   3f7c8:	ldp	x19, x20, [sp, #16]
   3f7cc:	ldp	x21, x22, [sp, #32]
   3f7d0:	ldp	x23, x24, [sp, #48]
   3f7d4:	ldp	x25, x26, [sp, #64]
   3f7d8:	ldp	x27, x28, [sp, #80]
   3f7dc:	ldp	x29, x30, [sp], #112
   3f7e0:	ret
   3f7e4:	cbz	x0, 3f804 <ZDICT_trainFromBuffer_cover@@Base+0x3ec>
   3f7e8:	mov	x1, #0xffffffffffffffff    	// #-1
   3f7ec:	stp	xzr, xzr, [x0, #8]
   3f7f0:	str	xzr, [x0, #24]
   3f7f4:	stp	xzr, xzr, [x0, #32]
   3f7f8:	stp	xzr, xzr, [x0, #48]
   3f7fc:	stp	xzr, xzr, [x0, #64]
   3f800:	str	x1, [x0, #80]
   3f804:	ret
   3f808:	cbz	x0, 3f814 <ZDICT_trainFromBuffer_cover@@Base+0x3fc>
   3f80c:	ldr	x0, [x0, #8]
   3f810:	cbnz	x0, 3f810 <ZDICT_trainFromBuffer_cover@@Base+0x3f8>
   3f814:	ret
   3f818:	mov	x1, x0
   3f81c:	stp	x29, x30, [sp, #-16]!
   3f820:	mov	x29, sp
   3f824:	bl	3f808 <ZDICT_trainFromBuffer_cover@@Base+0x3f0>
   3f828:	ldr	x0, [x1, #16]
   3f82c:	cbz	x0, 3f838 <ZDICT_trainFromBuffer_cover@@Base+0x420>
   3f830:	ldp	x29, x30, [sp], #16
   3f834:	b	48e0 <free@plt>
   3f838:	ldp	x29, x30, [sp], #16
   3f83c:	ret
   3f840:	cbz	x0, 3f848 <ZDICT_trainFromBuffer_cover@@Base+0x430>
   3f844:	b	3f818 <ZDICT_trainFromBuffer_cover@@Base+0x400>
   3f848:	ret
   3f84c:	cbz	x0, 3f85c <ZDICT_trainFromBuffer_cover@@Base+0x444>
   3f850:	ldr	x1, [x0, #8]
   3f854:	add	x1, x1, #0x1
   3f858:	str	x1, [x0, #8]
   3f85c:	ret
   3f860:	cbz	x0, 3f920 <ZDICT_trainFromBuffer_cover@@Base+0x508>
   3f864:	stp	x29, x30, [sp, #-64]!
   3f868:	mov	x29, sp
   3f86c:	stp	x19, x20, [sp, #16]
   3f870:	mov	x19, x0
   3f874:	ldr	x0, [x0, #8]
   3f878:	stp	x21, x22, [sp, #32]
   3f87c:	ldp	x21, x22, [x2, #8]
   3f880:	sub	x0, x0, #0x1
   3f884:	str	x23, [sp, #48]
   3f888:	str	x0, [x19, #8]
   3f88c:	ldr	x0, [x19, #80]
   3f890:	ldr	x23, [x2]
   3f894:	cmp	x0, x22
   3f898:	b.ls	3f8d4 <ZDICT_trainFromBuffer_cover@@Base+0x4bc>  // b.plast
   3f89c:	ldr	x0, [x19, #16]
   3f8a0:	mov	x20, x1
   3f8a4:	cbz	x0, 3f8b8 <ZDICT_trainFromBuffer_cover@@Base+0x4a0>
   3f8a8:	ldr	x1, [x19, #24]
   3f8ac:	cmp	x1, x21
   3f8b0:	b.cs	3f8e8 <ZDICT_trainFromBuffer_cover@@Base+0x4d0>  // b.hs, b.nlast
   3f8b4:	bl	48e0 <free@plt>
   3f8b8:	mov	x0, x21
   3f8bc:	bl	46a0 <malloc@plt>
   3f8c0:	str	x0, [x19, #16]
   3f8c4:	cbnz	x0, 3f8e8 <ZDICT_trainFromBuffer_cover@@Base+0x4d0>
   3f8c8:	mov	x0, #0xffffffffffffffff    	// #-1
   3f8cc:	str	xzr, [x19, #24]
   3f8d0:	str	x0, [x19, #80]
   3f8d4:	ldp	x19, x20, [sp, #16]
   3f8d8:	ldp	x21, x22, [sp, #32]
   3f8dc:	ldr	x23, [sp, #48]
   3f8e0:	ldp	x29, x30, [sp], #64
   3f8e4:	ret
   3f8e8:	cbz	x23, 3f8d4 <ZDICT_trainFromBuffer_cover@@Base+0x4bc>
   3f8ec:	ldr	x0, [x19, #16]
   3f8f0:	mov	x2, x21
   3f8f4:	mov	x1, x23
   3f8f8:	bl	4460 <memcpy@plt>
   3f8fc:	str	x21, [x19, #24]
   3f900:	ldp	x2, x3, [x20]
   3f904:	stp	x2, x3, [x19, #32]
   3f908:	ldp	x2, x3, [x20, #16]
   3f90c:	stp	x2, x3, [x19, #48]
   3f910:	ldp	x2, x3, [x20, #32]
   3f914:	stp	x2, x3, [x19, #64]
   3f918:	str	x22, [x19, #80]
   3f91c:	b	3f8d4 <ZDICT_trainFromBuffer_cover@@Base+0x4bc>
   3f920:	ret
   3f924:	stp	xzr, xzr, [x8]
   3f928:	str	x0, [x8, #16]
   3f92c:	ret
   3f930:	ldr	x1, [x0, #16]
   3f934:	cmn	x1, #0x78
   3f938:	b.hi	3f94c <ZDICT_trainFromBuffer_cover@@Base+0x534>  // b.pmore
   3f93c:	ldr	x0, [x0]
   3f940:	cmp	x0, #0x0
   3f944:	cset	w0, eq  // eq = none
   3f948:	ret
   3f94c:	mov	w0, #0x1                   	// #1
   3f950:	b	3f948 <ZDICT_trainFromBuffer_cover@@Base+0x530>
   3f954:	ldr	x0, [x0]
   3f958:	b	48e0 <free@plt>
   3f95c:	sub	sp, sp, #0xe0
   3f960:	stp	x29, x30, [sp, #16]
   3f964:	add	x29, sp, #0x10
   3f968:	stp	x19, x20, [sp, #32]
   3f96c:	mov	x19, x8
   3f970:	stp	x21, x22, [sp, #48]
   3f974:	mov	x22, x1
   3f978:	stp	x23, x24, [sp, #64]
   3f97c:	mov	x24, x7
   3f980:	stp	x25, x26, [sp, #80]
   3f984:	mov	x25, x2
   3f988:	mov	x26, x3
   3f98c:	stp	x27, x28, [sp, #96]
   3f990:	stp	d8, d9, [sp, #112]
   3f994:	stp	x0, x5, [sp, #136]
   3f998:	mov	x0, x1
   3f99c:	str	x6, [sp, #152]
   3f9a0:	str	w4, [sp, #160]
   3f9a4:	bl	46a0 <malloc@plt>
   3f9a8:	mov	x27, x0
   3f9ac:	mov	x0, x22
   3f9b0:	bl	46a0 <malloc@plt>
   3f9b4:	mov	x20, x0
   3f9b8:	cmp	x27, #0x0
   3f9bc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   3f9c0:	ldr	w0, [x24, #28]
   3f9c4:	str	w0, [sp, #164]
   3f9c8:	b.ne	3fa08 <ZDICT_trainFromBuffer_cover@@Base+0x5f0>  // b.any
   3f9cc:	mov	x0, x27
   3f9d0:	bl	48e0 <free@plt>
   3f9d4:	mov	x0, x20
   3f9d8:	bl	48e0 <free@plt>
   3f9dc:	stp	xzr, xzr, [x19]
   3f9e0:	str	x22, [x19, #16]
   3f9e4:	ldp	x29, x30, [sp, #16]
   3f9e8:	ldp	x19, x20, [sp, #32]
   3f9ec:	ldp	x21, x22, [sp, #48]
   3f9f0:	ldp	x23, x24, [sp, #64]
   3f9f4:	ldp	x25, x26, [sp, #80]
   3f9f8:	ldp	x27, x28, [sp, #96]
   3f9fc:	ldp	d8, d9, [sp, #112]
   3fa00:	add	sp, sp, #0xe0
   3fa04:	ret
   3fa08:	ldr	x1, [sp, #136]
   3fa0c:	mov	x2, x22
   3fa10:	mov	x0, x27
   3fa14:	add	x28, x24, #0x20
   3fa18:	bl	4460 <memcpy@plt>
   3fa1c:	ldr	x0, [x24, #32]
   3fa20:	str	x0, [sp]
   3fa24:	ldr	w6, [sp, #160]
   3fa28:	mov	x5, x26
   3fa2c:	ldr	x2, [sp, #136]
   3fa30:	mov	x4, x25
   3fa34:	ldr	w0, [x28, #8]
   3fa38:	mov	x3, x22
   3fa3c:	mov	x1, x22
   3fa40:	str	w0, [sp, #8]
   3fa44:	mov	x0, x27
   3fa48:	bl	4710 <ZDICT_finalizeDictionary@plt>
   3fa4c:	mov	x23, x0
   3fa50:	bl	4b50 <ZDICT_isError@plt>
   3fa54:	cbz	w0, 3fa74 <ZDICT_trainFromBuffer_cover@@Base+0x65c>
   3fa58:	mov	x0, x27
   3fa5c:	bl	48e0 <free@plt>
   3fa60:	mov	x0, x20
   3fa64:	bl	48e0 <free@plt>
   3fa68:	stp	xzr, xzr, [x19]
   3fa6c:	str	x23, [x19, #16]
   3fa70:	b	3f9e4 <ZDICT_trainFromBuffer_cover@@Base+0x5cc>
   3fa74:	ldp	x0, x1, [x24]
   3fa78:	stp	x0, x1, [sp, #176]
   3fa7c:	add	x10, sp, #0xb0
   3fa80:	ldp	x0, x1, [x24, #16]
   3fa84:	stp	x0, x1, [sp, #192]
   3fa88:	mov	x7, x23
   3fa8c:	ldp	x4, x5, [sp, #144]
   3fa90:	mov	x6, x27
   3fa94:	ldr	x3, [sp, #224]
   3fa98:	mov	x2, x25
   3fa9c:	ldp	x0, x1, [x24, #32]
   3faa0:	str	x10, [sp, #168]
   3faa4:	stp	x0, x1, [sp, #208]
   3faa8:	mov	x0, x10
   3faac:	mov	x1, x26
   3fab0:	bl	3f6b4 <ZDICT_trainFromBuffer_cover@@Base+0x29c>
   3fab4:	str	x0, [sp, #128]
   3fab8:	cmn	x0, #0x78
   3fabc:	ldr	x10, [sp, #168]
   3fac0:	b.ls	3fae4 <ZDICT_trainFromBuffer_cover@@Base+0x6cc>  // b.plast
   3fac4:	mov	x0, x27
   3fac8:	bl	48e0 <free@plt>
   3facc:	mov	x0, x20
   3fad0:	bl	48e0 <free@plt>
   3fad4:	stp	xzr, xzr, [x19]
   3fad8:	ldr	x0, [sp, #128]
   3fadc:	str	x0, [x19, #16]
   3fae0:	b	3f9e4 <ZDICT_trainFromBuffer_cover@@Base+0x5cc>
   3fae4:	ldr	w0, [x24, #24]
   3fae8:	cbnz	w0, 3fc2c <ZDICT_trainFromBuffer_cover@@Base+0x814>
   3faec:	mov	x0, x20
   3faf0:	bl	48e0 <free@plt>
   3faf4:	stp	x27, x23, [x19]
   3faf8:	b	3fad8 <ZDICT_trainFromBuffer_cover@@Base+0x6c0>
   3fafc:	ldp	x0, x1, [x24]
   3fb00:	stp	x0, x1, [x10]
   3fb04:	mov	x7, x21
   3fb08:	ldp	x0, x1, [x24, #16]
   3fb0c:	stp	x0, x1, [x10, #16]
   3fb10:	mov	x6, x20
   3fb14:	ldp	x4, x5, [sp, #144]
   3fb18:	mov	x2, x25
   3fb1c:	ldr	x3, [sp, #224]
   3fb20:	ldp	x0, x1, [x24, #32]
   3fb24:	stp	x0, x1, [x10, #32]
   3fb28:	mov	x1, x26
   3fb2c:	mov	x0, x10
   3fb30:	str	x10, [sp, #168]
   3fb34:	bl	3f6b4 <ZDICT_trainFromBuffer_cover@@Base+0x29c>
   3fb38:	mov	x1, x0
   3fb3c:	cmn	x0, #0x78
   3fb40:	ldr	x10, [sp, #168]
   3fb44:	b.ls	3fb6c <ZDICT_trainFromBuffer_cover@@Base+0x754>  // b.plast
   3fb48:	mov	x0, x27
   3fb4c:	str	x1, [sp, #128]
   3fb50:	bl	48e0 <free@plt>
   3fb54:	mov	x0, x20
   3fb58:	bl	48e0 <free@plt>
   3fb5c:	stp	xzr, xzr, [x19]
   3fb60:	ldr	x1, [sp, #128]
   3fb64:	str	x1, [x19, #16]
   3fb68:	b	3f9e4 <ZDICT_trainFromBuffer_cover@@Base+0x5cc>
   3fb6c:	ldr	w0, [sp, #164]
   3fb70:	ldr	d1, [sp, #128]
   3fb74:	ucvtf	d0, w0
   3fb78:	ucvtf	d1, d1
   3fb7c:	fdiv	d0, d0, d8
   3fb80:	fadd	d0, d0, d9
   3fb84:	fmul	d0, d0, d1
   3fb88:	ucvtf	d1, x1
   3fb8c:	fcmpe	d1, d0
   3fb90:	b.hi	3fba8 <ZDICT_trainFromBuffer_cover@@Base+0x790>  // b.pmore
   3fb94:	mov	x0, x27
   3fb98:	str	x1, [sp, #128]
   3fb9c:	bl	48e0 <free@plt>
   3fba0:	stp	x20, x21, [x19]
   3fba4:	b	3fb60 <ZDICT_trainFromBuffer_cover@@Base+0x748>
   3fba8:	lsl	x21, x21, #1
   3fbac:	cmp	x21, x23
   3fbb0:	b.cs	3faec <ZDICT_trainFromBuffer_cover@@Base+0x6d4>  // b.hs, b.nlast
   3fbb4:	mov	x2, x23
   3fbb8:	mov	x1, x27
   3fbbc:	mov	x0, x20
   3fbc0:	str	x10, [sp, #168]
   3fbc4:	bl	4460 <memcpy@plt>
   3fbc8:	ldr	x0, [x28]
   3fbcc:	str	x0, [sp]
   3fbd0:	ldr	w6, [sp, #160]
   3fbd4:	sub	x2, x22, x21
   3fbd8:	ldr	w0, [x28, #8]
   3fbdc:	mov	x3, x21
   3fbe0:	str	w0, [sp, #8]
   3fbe4:	mov	x1, x21
   3fbe8:	ldr	x0, [sp, #136]
   3fbec:	mov	x5, x26
   3fbf0:	mov	x4, x25
   3fbf4:	add	x2, x0, x2
   3fbf8:	mov	x0, x20
   3fbfc:	bl	4710 <ZDICT_finalizeDictionary@plt>
   3fc00:	mov	x21, x0
   3fc04:	bl	4b50 <ZDICT_isError@plt>
   3fc08:	ldr	x10, [sp, #168]
   3fc0c:	cbz	w0, 3fafc <ZDICT_trainFromBuffer_cover@@Base+0x6e4>
   3fc10:	mov	x0, x27
   3fc14:	bl	48e0 <free@plt>
   3fc18:	mov	x0, x20
   3fc1c:	bl	48e0 <free@plt>
   3fc20:	stp	xzr, xzr, [x19]
   3fc24:	str	x21, [x19, #16]
   3fc28:	b	3f9e4 <ZDICT_trainFromBuffer_cover@@Base+0x5cc>
   3fc2c:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3fc30:	mov	x21, #0x100                 	// #256
   3fc34:	fmov	d9, #1.000000000000000000e+00
   3fc38:	ldr	d8, [x0, #2768]
   3fc3c:	b	3fbac <ZDICT_trainFromBuffer_cover@@Base+0x794>
   3fc40:	sub	sp, sp, #0x120
   3fc44:	stp	x29, x30, [sp, #16]
   3fc48:	add	x29, sp, #0x10
   3fc4c:	stp	x19, x20, [sp, #32]
   3fc50:	mov	x19, x0
   3fc54:	ldr	x20, [x0], #24
   3fc58:	stp	x21, x22, [sp, #48]
   3fc5c:	ldp	x2, x3, [x19, #24]
   3fc60:	stp	x2, x3, [sp, #240]
   3fc64:	ldp	x2, x3, [x0, #16]
   3fc68:	stp	x23, x24, [sp, #64]
   3fc6c:	ldp	x0, x1, [x0, #32]
   3fc70:	stp	x25, x26, [sp, #80]
   3fc74:	ldr	x22, [x19, #16]
   3fc78:	stp	x27, x28, [sp, #96]
   3fc7c:	add	x28, sp, #0xc0
   3fc80:	ldp	w26, w25, [x19, #24]
   3fc84:	stp	x2, x3, [sp, #256]
   3fc88:	add	x27, sp, #0x90
   3fc8c:	stp	x0, x1, [sp, #272]
   3fc90:	mov	x0, x22
   3fc94:	bl	46a0 <malloc@plt>
   3fc98:	mov	x23, x0
   3fc9c:	ldr	x0, [x20, #56]
   3fca0:	lsl	x0, x0, #2
   3fca4:	bl	46a0 <malloc@plt>
   3fca8:	add	w1, w26, #0x1
   3fcac:	mov	x21, x0
   3fcb0:	sub	w1, w1, w25
   3fcb4:	mov	x0, x28
   3fcb8:	bl	3ea7c <ZBUFF_recommendedDOutSize@@Base+0x1dc>
   3fcbc:	cbnz	w0, 3fd00 <ZDICT_trainFromBuffer_cover@@Base+0x8e8>
   3fcc0:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3fcc4:	ldr	w0, [x0, #944]
   3fcc8:	cmp	w0, #0x0
   3fccc:	b.le	3fcf0 <ZDICT_trainFromBuffer_cover@@Base+0x8d8>
   3fcd0:	adrp	x20, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3fcd4:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3fcd8:	add	x0, x0, #0x99d
   3fcdc:	ldr	x20, [x20, #4048]
   3fce0:	ldr	x1, [x20]
   3fce4:	bl	44d0 <fputs@plt>
   3fce8:	ldr	x0, [x20]
   3fcec:	bl	4970 <fflush@plt>
   3fcf0:	mov	x22, #0xffffffffffffffff    	// #-1
   3fcf4:	mov	x24, #0x0                   	// #0
   3fcf8:	mov	x20, #0x0                   	// #0
   3fcfc:	b	3fdf4 <ZDICT_trainFromBuffer_cover@@Base+0x9dc>
   3fd00:	cmp	x23, #0x0
   3fd04:	ccmp	x21, #0x0, #0x4, ne  // ne = any
   3fd08:	b.ne	3fd34 <ZDICT_trainFromBuffer_cover@@Base+0x91c>  // b.any
   3fd0c:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3fd10:	ldr	w0, [x0, #944]
   3fd14:	cmp	w0, #0x0
   3fd18:	b.le	3fcf0 <ZDICT_trainFromBuffer_cover@@Base+0x8d8>
   3fd1c:	adrp	x20, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3fd20:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3fd24:	add	x0, x0, #0xa01
   3fd28:	ldr	x20, [x20, #4048]
   3fd2c:	ldr	x1, [x20]
   3fd30:	b	3fce4 <ZDICT_trainFromBuffer_cover@@Base+0x8cc>
   3fd34:	ldp	x2, x1, [x20, #56]
   3fd38:	add	x24, sp, #0xf0
   3fd3c:	mov	x0, x21
   3fd40:	lsl	x2, x2, #2
   3fd44:	bl	4460 <memcpy@plt>
   3fd48:	mov	x4, x22
   3fd4c:	mov	w6, w25
   3fd50:	mov	w5, w26
   3fd54:	mov	x3, x23
   3fd58:	mov	x2, x28
   3fd5c:	mov	x1, x21
   3fd60:	mov	x0, x20
   3fd64:	bl	3f03c <ZBUFF_recommendedDOutSize@@Base+0x79c>
   3fd68:	stp	w26, w25, [sp, #240]
   3fd6c:	mov	x4, #0xffffffffffffffff    	// #-1
   3fd70:	ldp	x2, x7, [x20]
   3fd74:	sub	x1, x22, x0
   3fd78:	ldp	x8, x9, [x24]
   3fd7c:	add	x0, x23, x0
   3fd80:	ldp	x3, x6, [x20, #16]
   3fd84:	ldr	x5, [x20, #32]
   3fd88:	stp	x8, x9, [sp, #144]
   3fd8c:	ldp	x8, x9, [x24, #16]
   3fd90:	stp	x8, x9, [sp, #160]
   3fd94:	ldp	x8, x9, [x24, #32]
   3fd98:	stp	x7, x4, [sp]
   3fd9c:	mov	x7, x27
   3fda0:	mov	w4, w5
   3fda4:	stp	x8, x9, [sp, #176]
   3fda8:	add	x8, sp, #0xd8
   3fdac:	bl	3f95c <ZDICT_trainFromBuffer_cover@@Base+0x544>
   3fdb0:	ldr	x22, [sp, #232]
   3fdb4:	ldp	x20, x24, [sp, #216]
   3fdb8:	cmn	x22, #0x78
   3fdbc:	b.hi	3fdc4 <ZDICT_trainFromBuffer_cover@@Base+0x9ac>  // b.pmore
   3fdc0:	cbnz	x20, 3fdf4 <ZDICT_trainFromBuffer_cover@@Base+0x9dc>
   3fdc4:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3fdc8:	ldr	w0, [x0, #944]
   3fdcc:	cmp	w0, #0x0
   3fdd0:	b.le	3fdf4 <ZDICT_trainFromBuffer_cover@@Base+0x9dc>
   3fdd4:	adrp	x28, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3fdd8:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3fddc:	add	x0, x0, #0xa2c
   3fde0:	ldr	x28, [x28, #4048]
   3fde4:	ldr	x1, [x28]
   3fde8:	bl	44d0 <fputs@plt>
   3fdec:	ldr	x0, [x28]
   3fdf0:	bl	4970 <fflush@plt>
   3fdf4:	mov	x0, x23
   3fdf8:	bl	48e0 <free@plt>
   3fdfc:	stp	w26, w25, [sp, #240]
   3fe00:	add	x2, sp, #0x70
   3fe04:	stp	x20, x24, [sp, #216]
   3fe08:	ldp	x0, x1, [sp, #240]
   3fe0c:	stp	x0, x1, [sp, #144]
   3fe10:	ldp	x0, x1, [sp, #256]
   3fe14:	stp	x0, x1, [sp, #160]
   3fe18:	ldp	x0, x1, [sp, #272]
   3fe1c:	stp	x0, x1, [sp, #176]
   3fe20:	ldp	x0, x1, [sp, #216]
   3fe24:	stp	x0, x1, [sp, #112]
   3fe28:	ldr	x0, [x19, #8]
   3fe2c:	mov	x1, x27
   3fe30:	str	x22, [sp, #128]
   3fe34:	bl	3f860 <ZDICT_trainFromBuffer_cover@@Base+0x448>
   3fe38:	mov	x0, x19
   3fe3c:	bl	48e0 <free@plt>
   3fe40:	ldr	x0, [sp, #192]
   3fe44:	cbz	x0, 3fe4c <ZDICT_trainFromBuffer_cover@@Base+0xa34>
   3fe48:	bl	48e0 <free@plt>
   3fe4c:	mov	x0, x20
   3fe50:	bl	48e0 <free@plt>
   3fe54:	cbz	x21, 3fe7c <ZDICT_trainFromBuffer_cover@@Base+0xa64>
   3fe58:	mov	x0, x21
   3fe5c:	ldp	x29, x30, [sp, #16]
   3fe60:	ldp	x19, x20, [sp, #32]
   3fe64:	ldp	x21, x22, [sp, #48]
   3fe68:	ldp	x23, x24, [sp, #64]
   3fe6c:	ldp	x25, x26, [sp, #80]
   3fe70:	ldp	x27, x28, [sp, #96]
   3fe74:	add	sp, sp, #0x120
   3fe78:	b	48e0 <free@plt>
   3fe7c:	ldp	x29, x30, [sp, #16]
   3fe80:	ldp	x19, x20, [sp, #32]
   3fe84:	ldp	x21, x22, [sp, #48]
   3fe88:	ldp	x23, x24, [sp, #64]
   3fe8c:	ldp	x25, x26, [sp, #80]
   3fe90:	ldp	x27, x28, [sp, #96]
   3fe94:	add	sp, sp, #0x120
   3fe98:	ret

000000000003fe9c <ZDICT_optimizeTrainFromBuffer_cover@@Base>:
   3fe9c:	stp	x29, x30, [sp, #-384]!
   3fea0:	fmov	d0, #1.000000000000000000e+00
   3fea4:	mov	x29, sp
   3fea8:	stp	x21, x22, [sp, #32]
   3feac:	ldr	w21, [x5, #4]
   3feb0:	str	d8, [sp, #96]
   3feb4:	ldr	d8, [x5, #16]
   3feb8:	stp	x19, x20, [sp, #16]
   3febc:	mov	x19, x5
   3fec0:	fcmp	d8, #0.0
   3fec4:	stp	x23, x24, [sp, #48]
   3fec8:	stp	x25, x26, [sp, #64]
   3fecc:	stp	x27, x28, [sp, #80]
   3fed0:	fcsel	d8, d8, d0, hi  // hi = pmore
   3fed4:	str	x1, [sp, #120]
   3fed8:	str	w4, [sp, #148]
   3fedc:	stp	x0, x2, [sp, #152]
   3fee0:	str	x3, [sp, #168]
   3fee4:	cbz	w21, 3ff60 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xc4>
   3fee8:	str	w21, [sp, #128]
   3feec:	ldr	w25, [x19]
   3fef0:	cbz	w25, 3ff70 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd4>
   3fef4:	mov	w27, w25
   3fef8:	ldr	w0, [x19, #8]
   3fefc:	str	w0, [sp, #116]
   3ff00:	mov	w0, w0
   3ff04:	ldr	w20, [x19, #36]
   3ff08:	ldr	w1, [sp, #116]
   3ff0c:	cmp	w0, #0x0
   3ff10:	mov	w0, #0x28                  	// #40
   3ff14:	csel	w0, w1, w0, ne  // ne = any
   3ff18:	fcmpe	d8, #0.0
   3ff1c:	str	w0, [sp, #116]
   3ff20:	b.ls	3ff30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x94>  // b.plast
   3ff24:	fmov	d0, #1.000000000000000000e+00
   3ff28:	fcmpe	d8, d0
   3ff2c:	b.le	3ff7c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe0>
   3ff30:	cmp	w20, #0x0
   3ff34:	b.le	3ff58 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xbc>
   3ff38:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3ff3c:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3ff40:	add	x0, x0, #0xa49
   3ff44:	ldr	x19, [x19, #4048]
   3ff48:	ldr	x1, [x19]
   3ff4c:	bl	44d0 <fputs@plt>
   3ff50:	ldr	x0, [x19]
   3ff54:	bl	4970 <fflush@plt>
   3ff58:	mov	x23, #0xffffffffffffffd6    	// #-42
   3ff5c:	b	401e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x34c>
   3ff60:	mov	w0, #0x8                   	// #8
   3ff64:	mov	w21, #0x6                   	// #6
   3ff68:	str	w0, [sp, #128]
   3ff6c:	b	3feec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x50>
   3ff70:	mov	w27, #0x32                  	// #50
   3ff74:	mov	w25, #0x7d0                 	// #2000
   3ff78:	b	3fef8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5c>
   3ff7c:	ldr	w0, [sp, #128]
   3ff80:	cmp	w0, w27
   3ff84:	ccmp	w25, w27, #0x0, ls  // ls = plast
   3ff88:	b.cc	3ff30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x94>  // b.lo, b.ul, b.last
   3ff8c:	ldr	w0, [sp, #148]
   3ff90:	cbnz	w0, 3ffcc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x130>
   3ff94:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3ff98:	ldr	w0, [x0, #944]
   3ff9c:	cmp	w0, #0x0
   3ffa0:	b.le	3ffc4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x128>
   3ffa4:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3ffa8:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3ffac:	add	x0, x0, #0x94c
   3ffb0:	ldr	x19, [x19, #4048]
   3ffb4:	ldr	x1, [x19]
   3ffb8:	bl	44d0 <fputs@plt>
   3ffbc:	ldr	x0, [x19]
   3ffc0:	bl	4970 <fflush@plt>
   3ffc4:	mov	x23, #0xffffffffffffffb8    	// #-72
   3ffc8:	b	401e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x34c>
   3ffcc:	ldr	x0, [sp, #120]
   3ffd0:	cmp	x0, #0xff
   3ffd4:	b.hi	40014 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x178>  // b.pmore
   3ffd8:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   3ffdc:	ldr	w0, [x0, #944]
   3ffe0:	cmp	w0, #0x0
   3ffe4:	b.le	4000c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x170>
   3ffe8:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   3ffec:	mov	w2, #0x100                 	// #256
   3fff0:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   3fff4:	add	x1, x1, #0x975
   3fff8:	ldr	x19, [x19, #4048]
   3fffc:	ldr	x0, [x19]
   40000:	bl	4b40 <fprintf@plt>
   40004:	ldr	x0, [x19]
   40008:	bl	4970 <fflush@plt>
   4000c:	mov	x23, #0xffffffffffffffba    	// #-70
   40010:	b	401e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x34c>
   40014:	ldr	w0, [x19, #12]
   40018:	cmp	w0, #0x1
   4001c:	b.ls	4003c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a0>  // b.plast
   40020:	mov	w0, w0
   40024:	mov	x1, #0x1                   	// #1
   40028:	bl	5ad8 <ZSTD_initDStream_usingDDict@plt+0xf58>
   4002c:	mov	x22, x0
   40030:	cbnz	x0, 40040 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a4>
   40034:	mov	x23, #0xffffffffffffffc0    	// #-64
   40038:	b	401e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x34c>
   4003c:	mov	x22, #0x0                   	// #0
   40040:	ldr	w2, [sp, #116]
   40044:	mov	x0, #0xffffffffffffffff    	// #-1
   40048:	str	x0, [sp, #288]
   4004c:	sub	w0, w25, w27
   40050:	cmp	w20, #0x0
   40054:	sub	w1, w20, #0x1
   40058:	csel	w1, w1, wzr, ne  // ne = any
   4005c:	add	x24, sp, #0xd0
   40060:	udiv	w26, w0, w2
   40064:	ldr	w2, [sp, #128]
   40068:	stp	xzr, xzr, [sp, #240]
   4006c:	sub	w2, w2, w21
   40070:	stp	xzr, xzr, [x24, #48]
   40074:	cmp	w26, #0x0
   40078:	csinc	w26, w26, wzr, ne  // ne = any
   4007c:	lsr	w2, w2, #1
   40080:	stp	xzr, xzr, [x24, #64]
   40084:	cmp	w20, #0x1
   40088:	udiv	w0, w0, w26
   4008c:	stp	xzr, xzr, [sp, #216]
   40090:	str	xzr, [sp, #232]
   40094:	add	w0, w0, #0x1
   40098:	madd	w0, w2, w0, w0
   4009c:	str	w0, [sp, #144]
   400a0:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   400a4:	str	x0, [sp, #176]
   400a8:	str	w1, [x0, #944]
   400ac:	b.le	400d4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x238>
   400b0:	adrp	x23, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   400b4:	ldr	w2, [sp, #144]
   400b8:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   400bc:	add	x1, x1, #0xa5f
   400c0:	ldr	x23, [x23, #4048]
   400c4:	ldr	x0, [x23]
   400c8:	bl	4b40 <fprintf@plt>
   400cc:	ldr	x0, [x23]
   400d0:	bl	4970 <fflush@plt>
   400d4:	mov	w0, #0x1                   	// #1
   400d8:	add	x28, sp, #0x128
   400dc:	stp	w0, wzr, [sp, #132]
   400e0:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   400e4:	add	x0, x0, #0x3c8
   400e8:	str	x0, [sp, #184]
   400ec:	ldr	w0, [sp, #128]
   400f0:	cmp	w21, w0
   400f4:	b.ls	40160 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2c4>  // b.plast
   400f8:	cmp	w20, #0x1
   400fc:	b.le	40128 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x28c>
   40100:	adrp	x20, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   40104:	adrp	x2, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   40108:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   4010c:	add	x2, x2, #0x605
   40110:	ldr	x20, [x20, #4048]
   40114:	add	x1, x1, #0x929
   40118:	ldr	x0, [x20]
   4011c:	bl	4b40 <fprintf@plt>
   40120:	ldr	x0, [x20]
   40124:	bl	4970 <fflush@plt>
   40128:	ldr	x23, [sp, #288]
   4012c:	cmn	x23, #0x78
   40130:	b.hi	401d8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x33c>  // b.pmore
   40134:	ldp	x0, x1, [sp, #240]
   40138:	stp	x0, x1, [x19]
   4013c:	ldp	x0, x1, [sp, #256]
   40140:	stp	x0, x1, [x19, #16]
   40144:	ldp	x0, x1, [sp, #272]
   40148:	stp	x0, x1, [x19, #32]
   4014c:	ldp	x1, x23, [sp, #224]
   40150:	ldr	x0, [sp, #152]
   40154:	mov	x2, x23
   40158:	bl	4460 <memcpy@plt>
   4015c:	b	401d8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x33c>
   40160:	cmp	w20, #0x2
   40164:	b.le	4018c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2f0>
   40168:	adrp	x3, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   4016c:	mov	w2, w21
   40170:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40174:	add	x1, x1, #0xa87
   40178:	ldr	x23, [x3, #4048]
   4017c:	ldr	x0, [x23]
   40180:	bl	4b40 <fprintf@plt>
   40184:	ldr	x0, [x23]
   40188:	bl	4970 <fflush@plt>
   4018c:	ldp	x1, x2, [sp, #160]
   40190:	fmov	d0, d8
   40194:	ldr	w3, [sp, #148]
   40198:	mov	w4, w21
   4019c:	mov	x0, x28
   401a0:	bl	3eb1c <ZBUFF_recommendedDOutSize@@Base+0x27c>
   401a4:	mov	x23, x0
   401a8:	cmn	x0, #0x78
   401ac:	b.ls	4020c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x370>  // b.plast
   401b0:	cmp	w20, #0x0
   401b4:	b.le	401d8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x33c>
   401b8:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   401bc:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   401c0:	add	x0, x0, #0xa8d
   401c4:	ldr	x19, [x19, #4048]
   401c8:	ldr	x1, [x19]
   401cc:	bl	44d0 <fputs@plt>
   401d0:	ldr	x0, [x19]
   401d4:	bl	4970 <fflush@plt>
   401d8:	mov	x0, x24
   401dc:	bl	3f818 <ZDICT_trainFromBuffer_cover@@Base+0x400>
   401e0:	mov	x0, x22
   401e4:	bl	5af0 <ZSTD_initDStream_usingDDict@plt+0xf70>
   401e8:	mov	x0, x23
   401ec:	ldr	d8, [sp, #96]
   401f0:	ldp	x19, x20, [sp, #16]
   401f4:	ldp	x21, x22, [sp, #32]
   401f8:	ldp	x23, x24, [sp, #48]
   401fc:	ldp	x25, x26, [sp, #64]
   40200:	ldp	x27, x28, [sp, #80]
   40204:	ldp	x29, x30, [sp], #384
   40208:	ret
   4020c:	ldr	w0, [sp, #136]
   40210:	cbnz	w0, 40224 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x388>
   40214:	ldr	x0, [sp, #120]
   40218:	mov	w2, w20
   4021c:	ldr	x1, [sp, #352]
   40220:	bl	3ef7c <ZBUFF_recommendedDOutSize@@Base+0x6dc>
   40224:	mov	w23, w27
   40228:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   4022c:	add	x0, x0, #0xaab
   40230:	str	x0, [sp, #136]
   40234:	mov	x0, #0x48                  	// #72
   40238:	bl	46a0 <malloc@plt>
   4023c:	cmp	w20, #0x2
   40240:	mov	x3, x0
   40244:	b.le	40274 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3d8>
   40248:	adrp	x4, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   4024c:	mov	w2, w23
   40250:	ldr	x1, [sp, #136]
   40254:	ldr	x4, [x4, #4048]
   40258:	stp	x4, x3, [sp, #192]
   4025c:	ldr	x0, [x4]
   40260:	bl	4b40 <fprintf@plt>
   40264:	ldr	x4, [sp, #192]
   40268:	ldr	x0, [x4]
   4026c:	bl	4970 <fflush@plt>
   40270:	ldr	x3, [sp, #200]
   40274:	cbnz	x3, 402bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x420>
   40278:	cmp	w20, #0x0
   4027c:	b.le	402a0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x404>
   40280:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   40284:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40288:	add	x0, x0, #0xab1
   4028c:	ldr	x19, [x19, #4048]
   40290:	ldr	x1, [x19]
   40294:	bl	44d0 <fputs@plt>
   40298:	ldr	x0, [x19]
   4029c:	bl	4970 <fflush@plt>
   402a0:	mov	x0, x24
   402a4:	bl	3f818 <ZDICT_trainFromBuffer_cover@@Base+0x400>
   402a8:	mov	x0, x28
   402ac:	bl	3ea20 <ZBUFF_recommendedDOutSize@@Base+0x180>
   402b0:	mov	x0, x22
   402b4:	bl	5af0 <ZSTD_initDStream_usingDDict@plt+0xf70>
   402b8:	b	40034 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x198>
   402bc:	ldp	x4, x5, [x19]
   402c0:	stp	x4, x5, [x3, #24]
   402c4:	ldr	x0, [sp, #120]
   402c8:	str	x0, [x3, #16]
   402cc:	ldr	w0, [sp, #116]
   402d0:	str	w0, [x3, #32]
   402d4:	ldr	x0, [sp, #176]
   402d8:	stp	x28, x24, [x3]
   402dc:	ldp	x4, x5, [x19, #16]
   402e0:	stp	x4, x5, [x3, #40]
   402e4:	ldr	w0, [x0, #944]
   402e8:	ldp	x4, x5, [x19, #32]
   402ec:	stp	x4, x5, [x3, #56]
   402f0:	stp	w23, w21, [x3, #24]
   402f4:	str	wzr, [x3, #48]
   402f8:	str	w0, [x3, #60]
   402fc:	str	d8, [x3, #40]
   40300:	cbz	w21, 40338 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x49c>
   40304:	cbz	w23, 40338 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x49c>
   40308:	ldr	x1, [sp, #120]
   4030c:	cmp	x1, w23, uxtw
   40310:	b.cc	40338 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x49c>  // b.lo, b.ul, b.last
   40314:	cmp	w21, w23
   40318:	b.hi	40338 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x49c>  // b.pmore
   4031c:	ldr	x0, [sp, #216]
   40320:	add	x0, x0, #0x1
   40324:	str	x0, [sp, #216]
   40328:	cbnz	x22, 403a0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x504>
   4032c:	mov	x0, x3
   40330:	bl	3fc40 <ZDICT_trainFromBuffer_cover@@Base+0x828>
   40334:	b	403b4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x518>
   40338:	cmp	w0, #0x0
   4033c:	b.le	4036c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4d0>
   40340:	adrp	x2, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   40344:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40348:	add	x0, x0, #0x930
   4034c:	ldr	x2, [x2, #4048]
   40350:	stp	x2, x3, [sp, #192]
   40354:	ldr	x1, [x2]
   40358:	bl	44d0 <fputs@plt>
   4035c:	ldr	x2, [sp, #192]
   40360:	ldr	x0, [x2]
   40364:	bl	4970 <fflush@plt>
   40368:	ldr	x3, [sp, #200]
   4036c:	mov	x0, x3
   40370:	bl	48e0 <free@plt>
   40374:	add	w23, w23, w26
   40378:	cmp	w25, w23
   4037c:	b.cs	40234 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x398>  // b.hs, b.nlast
   40380:	mov	x0, x24
   40384:	bl	3f808 <ZDICT_trainFromBuffer_cover@@Base+0x3f0>
   40388:	mov	x0, x28
   4038c:	bl	3ea20 <ZBUFF_recommendedDOutSize@@Base+0x180>
   40390:	mov	w0, #0x1                   	// #1
   40394:	add	w21, w21, #0x2
   40398:	str	w0, [sp, #136]
   4039c:	b	400ec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x250>
   403a0:	adrp	x1, 3f000 <ZBUFF_recommendedDOutSize@@Base+0x760>
   403a4:	mov	x2, x3
   403a8:	add	x1, x1, #0xc40
   403ac:	mov	x0, x22
   403b0:	bl	5afc <ZSTD_initDStream_usingDDict@plt+0xf7c>
   403b4:	cmp	w20, #0x1
   403b8:	b.le	40430 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x594>
   403bc:	bl	44c0 <clock@plt>
   403c0:	adrp	x1, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   403c4:	add	x1, x1, #0x3c8
   403c8:	ldr	x1, [x1, #8]
   403cc:	sub	x0, x0, x1
   403d0:	mov	x1, #0x49f0                	// #18928
   403d4:	movk	x1, #0x2, lsl #16
   403d8:	cmp	x0, x1
   403dc:	b.gt	403e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x54c>
   403e0:	cmp	w20, #0x3
   403e4:	b.le	40430 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x594>
   403e8:	bl	44c0 <clock@plt>
   403ec:	ldr	x1, [sp, #184]
   403f0:	mov	w2, #0x64                  	// #100
   403f4:	adrp	x3, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   403f8:	str	x0, [x1, #8]
   403fc:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40400:	ldr	w0, [sp, #132]
   40404:	add	x1, x1, #0x91c
   40408:	ldr	x3, [x3, #4048]
   4040c:	str	x3, [sp, #192]
   40410:	mul	w2, w0, w2
   40414:	ldr	w0, [sp, #144]
   40418:	udiv	w2, w2, w0
   4041c:	ldr	x0, [x3]
   40420:	bl	4b40 <fprintf@plt>
   40424:	ldr	x3, [sp, #192]
   40428:	ldr	x0, [x3]
   4042c:	bl	4970 <fflush@plt>
   40430:	ldr	w0, [sp, #132]
   40434:	add	w0, w0, #0x1
   40438:	str	w0, [sp, #132]
   4043c:	b	40374 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4d8>
   40440:	ldrsw	x4, [x1]
   40444:	ldrsw	x5, [x2]
   40448:	add	x4, x4, w3, sxtw
   4044c:	add	x3, x5, w3, sxtw
   40450:	ldrsw	x5, [x1, #4]
   40454:	ldrsw	x1, [x2, #4]
   40458:	add	x4, x0, x4
   4045c:	add	x5, x5, #0x2
   40460:	add	x3, x0, x3
   40464:	add	x1, x1, #0x2
   40468:	add	x5, x0, x5
   4046c:	add	x1, x0, x1
   40470:	cmp	x3, x1
   40474:	cset	w0, cc  // cc = lo, ul, last
   40478:	cmp	w0, #0x0
   4047c:	ccmp	x4, x5, #0x2, ne  // ne = any
   40480:	b.cs	404a8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x60c>  // b.hs, b.nlast
   40484:	ldrb	w0, [x4]
   40488:	ldrb	w2, [x3]
   4048c:	cmp	w0, w2
   40490:	b.eq	4049c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x600>  // b.none
   40494:	sub	w0, w0, w2
   40498:	ret
   4049c:	add	x4, x4, #0x1
   404a0:	add	x3, x3, #0x1
   404a4:	b	40470 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5d4>
   404a8:	neg	w0, w0
   404ac:	cmp	x4, x5
   404b0:	csinc	w0, w0, wzr, cs  // cs = hs, nlast
   404b4:	b	40498 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5fc>
   404b8:	ldr	w8, [x2, w3, sxtw #2]
   404bc:	ldrsw	x5, [x1, w8, sxtw #2]
   404c0:	ldrb	w10, [x0, x5]
   404c4:	lsl	w6, w3, #1
   404c8:	sxtw	x3, w3
   404cc:	add	w5, w6, #0x1
   404d0:	cmp	w5, w4
   404d4:	b.lt	404e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x644>  // b.tstop
   404d8:	str	w8, [x2, x3, lsl #2]
   404dc:	ret
   404e0:	add	w6, w6, #0x2
   404e4:	ldrsw	x7, [x2, w5, sxtw #2]
   404e8:	ldrsw	x9, [x2, w6, sxtw #2]
   404ec:	ldrsw	x7, [x1, x7, lsl #2]
   404f0:	ldrsw	x9, [x1, x9, lsl #2]
   404f4:	ldrb	w7, [x0, x7]
   404f8:	ldrb	w9, [x0, x9]
   404fc:	cmp	w7, w9
   40500:	b.ge	4050c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x670>  // b.tcont
   40504:	mov	w7, w9
   40508:	mov	w5, w6
   4050c:	lsl	x6, x3, #2
   40510:	cmp	w7, w10
   40514:	b.le	404d8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x63c>
   40518:	ldr	w3, [x2, w5, sxtw #2]
   4051c:	str	w3, [x2, x6]
   40520:	mov	w3, w5
   40524:	b	404c4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x628>
   40528:	mov	x5, x0
   4052c:	mov	x0, x2
   40530:	ldrsw	x2, [x2]
   40534:	ldrsw	x6, [x1, x2, lsl #2]
   40538:	ldrsw	x2, [x3]
   4053c:	ldrb	w6, [x5, x6]
   40540:	ldrsw	x2, [x1, x2, lsl #2]
   40544:	ldrb	w2, [x5, x2]
   40548:	cmp	w6, w2
   4054c:	b.ls	4055c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x6c0>  // b.plast
   40550:	mov	x2, x0
   40554:	mov	x0, x3
   40558:	mov	x3, x2
   4055c:	ldrsw	x6, [x3]
   40560:	ldrsw	x2, [x4]
   40564:	ldrsw	x6, [x1, x6, lsl #2]
   40568:	ldrsw	x2, [x1, x2, lsl #2]
   4056c:	ldrb	w6, [x5, x6]
   40570:	ldrb	w2, [x5, x2]
   40574:	cmp	w6, w2
   40578:	b.ls	40594 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x6f8>  // b.plast
   4057c:	ldrsw	x3, [x0]
   40580:	ldrsw	x1, [x1, x3, lsl #2]
   40584:	ldrb	w1, [x5, x1]
   40588:	cmp	w1, w2
   4058c:	csel	x0, x0, x4, hi  // hi = pmore
   40590:	ret
   40594:	mov	x0, x3
   40598:	b	40590 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x6f4>
   4059c:	mov	x4, x0
   405a0:	sub	x0, x1, #0x4
   405a4:	add	x0, x0, #0x4
   405a8:	cmp	x2, x0
   405ac:	b.ls	405d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x734>  // b.plast
   405b0:	ldr	w5, [x0]
   405b4:	sxtw	x6, w5
   405b8:	add	x7, x6, #0x1
   405bc:	ldr	w6, [x4, x6, lsl #2]
   405c0:	ldr	w7, [x4, x7, lsl #2]
   405c4:	add	w6, w3, w6
   405c8:	cmp	w7, w6
   405cc:	b.lt	40604 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x768>  // b.tstop
   405d0:	sub	x2, x2, #0x4
   405d4:	cmp	x0, x2
   405d8:	b.cs	40610 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x774>  // b.hs, b.nlast
   405dc:	ldr	w5, [x2]
   405e0:	sxtw	x6, w5
   405e4:	add	x7, x6, #0x1
   405e8:	ldr	w6, [x4, x6, lsl #2]
   405ec:	ldr	w7, [x4, x7, lsl #2]
   405f0:	add	w6, w3, w6
   405f4:	cmp	w7, w6
   405f8:	b.ge	405d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x734>  // b.tcont
   405fc:	ldr	w6, [x0]
   40600:	str	w6, [x2]
   40604:	mvn	w5, w5
   40608:	str	w5, [x0]
   4060c:	b	405a4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x708>
   40610:	cmp	x1, x0
   40614:	b.cs	40624 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x788>  // b.hs, b.nlast
   40618:	ldr	w2, [x1]
   4061c:	mvn	w2, w2
   40620:	str	w2, [x1]
   40624:	ret
   40628:	mov	x3, #0x0                   	// #0
   4062c:	sub	w4, w2, w3
   40630:	cmp	w4, #0x0
   40634:	b.gt	4063c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x7a0>
   40638:	ret
   4063c:	ldr	w5, [x1, x3, lsl #2]
   40640:	ldr	w4, [x0, x3, lsl #2]
   40644:	str	w5, [x0, x3, lsl #2]
   40648:	str	w4, [x1, x3, lsl #2]
   4064c:	add	x3, x3, #0x1
   40650:	b	4062c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x790>
   40654:	ldr	w7, [x1, w2, sxtw #2]
   40658:	ldr	w9, [x0, w7, sxtw #2]
   4065c:	lsl	w5, w2, #1
   40660:	sxtw	x2, w2
   40664:	add	w4, w5, #0x1
   40668:	cmp	w4, w3
   4066c:	b.lt	40678 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x7dc>  // b.tstop
   40670:	str	w7, [x1, x2, lsl #2]
   40674:	ret
   40678:	add	w5, w5, #0x2
   4067c:	ldrsw	x6, [x1, w4, sxtw #2]
   40680:	ldrsw	x8, [x1, w5, sxtw #2]
   40684:	ldr	w6, [x0, x6, lsl #2]
   40688:	ldr	w8, [x0, x8, lsl #2]
   4068c:	cmp	w6, w8
   40690:	b.ge	4069c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x800>  // b.tcont
   40694:	mov	w6, w8
   40698:	mov	w4, w5
   4069c:	lsl	x5, x2, #2
   406a0:	cmp	w6, w9
   406a4:	b.le	40670 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x7d4>
   406a8:	ldr	w2, [x1, w4, sxtw #2]
   406ac:	str	w2, [x1, x5]
   406b0:	mov	w2, w4
   406b4:	b	4065c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x7c0>
   406b8:	mov	x4, x0
   406bc:	ldrsw	x5, [x1]
   406c0:	mov	x0, x1
   406c4:	ldrsw	x1, [x2]
   406c8:	ldr	w5, [x4, x5, lsl #2]
   406cc:	ldr	w1, [x4, x1, lsl #2]
   406d0:	cmp	w5, w1
   406d4:	b.le	406e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x848>
   406d8:	mov	x1, x0
   406dc:	mov	x0, x2
   406e0:	mov	x2, x1
   406e4:	ldrsw	x5, [x2]
   406e8:	ldrsw	x1, [x3]
   406ec:	ldr	w5, [x4, x5, lsl #2]
   406f0:	ldr	w1, [x4, x1, lsl #2]
   406f4:	cmp	w5, w1
   406f8:	b.le	40710 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x874>
   406fc:	ldrsw	x2, [x0]
   40700:	ldr	w2, [x4, x2, lsl #2]
   40704:	cmp	w1, w2
   40708:	csel	x0, x0, x3, lt  // lt = tstop
   4070c:	ret
   40710:	mov	x0, x2
   40714:	b	4070c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x870>
   40718:	ldr	w4, [x0, #4]
   4071c:	mov	x2, x0
   40720:	cmp	w4, w1
   40724:	b.lt	40738 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x89c>  // b.tstop
   40728:	sub	w1, w4, w1
   4072c:	str	w1, [x0, #4]
   40730:	mov	w0, #0x1                   	// #1
   40734:	b	4074c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x8b0>
   40738:	ldr	w0, [x0]
   4073c:	cbnz	w0, 40750 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x8b4>
   40740:	ldr	w3, [x2, #12]
   40744:	add	w1, w3, w1
   40748:	str	w1, [x2, #12]
   4074c:	ret
   40750:	ldr	w3, [x2, #8]
   40754:	sub	w0, w0, #0x1
   40758:	sub	w1, w3, w1
   4075c:	add	w1, w1, w4
   40760:	stp	w0, w1, [x2]
   40764:	b	40730 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x894>
   40768:	sub	x2, x2, #0x4
   4076c:	add	x2, x2, #0x4
   40770:	cmp	x2, x3
   40774:	b.cs	40874 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x9d8>  // b.hs, b.nlast
   40778:	ldrsw	x7, [x2]
   4077c:	ldr	w7, [x0, x7, lsl #2]
   40780:	cmp	w7, w6
   40784:	b.eq	4076c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x8d0>  // b.none
   40788:	mov	x8, x2
   4078c:	b.lt	40854 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x9b8>  // b.tstop
   40790:	mov	x7, x3
   40794:	sub	x7, x7, #0x4
   40798:	cmp	x8, x7
   4079c:	b.cs	407c8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x92c>  // b.hs, b.nlast
   407a0:	ldrsw	x9, [x7]
   407a4:	ldr	w9, [x0, x9, lsl #2]
   407a8:	cmp	w6, w9
   407ac:	b.eq	40794 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x8f8>  // b.none
   407b0:	mov	x10, x7
   407b4:	b.lt	4088c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x9f0>  // b.tstop
   407b8:	mov	x9, x7
   407bc:	mov	x7, x10
   407c0:	cmp	x8, x9
   407c4:	b.cc	408ac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xa10>  // b.lo, b.ul, b.last
   407c8:	cmp	x2, x7
   407cc:	b.hi	40838 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x99c>  // b.pmore
   407d0:	sub	x6, x2, x1
   407d4:	sub	x2, x8, x2
   407d8:	sub	x9, x8, #0x4
   407dc:	asr	x0, x2, #2
   407e0:	asr	x6, x6, #2
   407e4:	cmp	w6, w0
   407e8:	csel	w6, w6, w0, lt  // lt = tstop
   407ec:	mov	x0, #0x0                   	// #0
   407f0:	sub	x10, x8, w6, sxtw #2
   407f4:	sub	w11, w6, w0
   407f8:	cmp	w11, #0x0
   407fc:	b.gt	40924 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xa88>
   40800:	sub	x6, x7, x9
   40804:	sub	x7, x3, x7
   40808:	asr	x7, x7, #2
   4080c:	asr	x0, x6, #2
   40810:	sub	w7, w7, #0x1
   40814:	cmp	w7, w0
   40818:	csel	w7, w7, w0, le
   4081c:	mov	x0, #0x0                   	// #0
   40820:	sub	x9, x3, w7, sxtw #2
   40824:	sub	w10, w7, w0
   40828:	cmp	w10, #0x0
   4082c:	b.gt	4093c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xaa0>
   40830:	add	x1, x1, x2
   40834:	sub	x3, x3, x6
   40838:	str	x1, [x4]
   4083c:	str	x3, [x5]
   40840:	ret
   40844:	b.ne	40854 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x9b8>  // b.any
   40848:	ldr	w9, [x2]
   4084c:	str	w9, [x8]
   40850:	str	w7, [x2], #4
   40854:	add	x8, x8, #0x4
   40858:	cmp	x3, x8
   4085c:	b.ls	40790 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x8f4>  // b.plast
   40860:	ldr	w7, [x8]
   40864:	ldr	w9, [x0, w7, sxtw #2]
   40868:	cmp	w6, w9
   4086c:	b.ge	40844 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x9a8>  // b.tcont
   40870:	b	40790 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x8f4>
   40874:	mov	x8, x2
   40878:	b	40790 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x8f4>
   4087c:	b.ne	4088c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x9f0>  // b.any
   40880:	ldr	w11, [x10]
   40884:	str	w11, [x7]
   40888:	str	w9, [x10], #-4
   4088c:	sub	x7, x7, #0x4
   40890:	cmp	x8, x7
   40894:	b.cs	4091c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xa80>  // b.hs, b.nlast
   40898:	ldr	w9, [x7]
   4089c:	ldr	w11, [x0, w9, sxtw #2]
   408a0:	cmp	w6, w11
   408a4:	b.le	4087c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x9e0>
   408a8:	b	407b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x91c>
   408ac:	ldr	w11, [x9]
   408b0:	ldr	w10, [x8]
   408b4:	str	w11, [x8]
   408b8:	str	w10, [x9]
   408bc:	add	x8, x8, #0x4
   408c0:	cmp	x9, x8
   408c4:	b.ls	408d8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xa3c>  // b.plast
   408c8:	ldr	w10, [x8]
   408cc:	ldr	w11, [x0, w10, sxtw #2]
   408d0:	cmp	w6, w11
   408d4:	b.ge	40908 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xa6c>  // b.tcont
   408d8:	sub	x9, x9, #0x4
   408dc:	cmp	x8, x9
   408e0:	b.cs	407c8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x92c>  // b.hs, b.nlast
   408e4:	ldr	w10, [x9]
   408e8:	ldr	w11, [x0, w10, sxtw #2]
   408ec:	cmp	w6, w11
   408f0:	b.gt	407c0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x924>
   408f4:	b.ne	408d8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xa3c>  // b.any
   408f8:	ldr	w11, [x7]
   408fc:	str	w11, [x9]
   40900:	str	w10, [x7], #-4
   40904:	b	408d8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xa3c>
   40908:	b.ne	408bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xa20>  // b.any
   4090c:	ldr	w11, [x2]
   40910:	str	w11, [x8]
   40914:	str	w10, [x2], #4
   40918:	b	408bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xa20>
   4091c:	mov	x7, x10
   40920:	b	407c8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x92c>
   40924:	ldr	w12, [x10, x0, lsl #2]
   40928:	ldr	w11, [x1, x0, lsl #2]
   4092c:	str	w12, [x1, x0, lsl #2]
   40930:	str	w11, [x10, x0, lsl #2]
   40934:	add	x0, x0, #0x1
   40938:	b	407f4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x958>
   4093c:	ldr	w11, [x9, x0, lsl #2]
   40940:	ldr	w10, [x8, x0, lsl #2]
   40944:	str	w11, [x8, x0, lsl #2]
   40948:	str	w10, [x9, x0, lsl #2]
   4094c:	add	x0, x0, #0x1
   40950:	b	40824 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x988>
   40954:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40958:	tst	w0, #0xff00
   4095c:	add	x1, x1, #0xba4
   40960:	b.eq	40974 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xad8>  // b.none
   40964:	ubfx	x0, x0, #8, #8
   40968:	ldr	w0, [x1, x0, lsl #2]
   4096c:	add	w0, w0, #0x8
   40970:	ret
   40974:	and	x0, x0, #0xff
   40978:	ldr	w0, [x1, x0, lsl #2]
   4097c:	b	40970 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xad4>
   40980:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40984:	tst	w0, #0xffff0000
   40988:	add	x1, x1, #0xba4
   4098c:	b.eq	409b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xb1c>  // b.none
   40990:	tst	w0, #0xff000000
   40994:	b.eq	409a8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xb0c>  // b.none
   40998:	lsr	w0, w0, #24
   4099c:	ldr	w0, [x1, x0, lsl #2]
   409a0:	add	w0, w0, #0x18
   409a4:	ret
   409a8:	asr	w0, w0, #16
   409ac:	ldr	w0, [x1, w0, sxtw #2]
   409b0:	add	w0, w0, #0x10
   409b4:	b	409a4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xb08>
   409b8:	tst	w0, #0xff00
   409bc:	b.eq	409d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xb34>  // b.none
   409c0:	asr	w0, w0, #8
   409c4:	ldr	w0, [x1, w0, sxtw #2]
   409c8:	add	w0, w0, #0x8
   409cc:	b	409a4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xb08>
   409d0:	and	x0, x0, #0xff
   409d4:	ldr	w0, [x1, x0, lsl #2]
   409d8:	b	409a4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xb08>
   409dc:	sub	sp, sp, #0x890
   409e0:	mov	x15, x1
   409e4:	mov	x14, x3
   409e8:	mov	x18, x4
   409ec:	stp	x29, x30, [sp]
   409f0:	mov	x29, sp
   409f4:	stp	x21, x22, [sp, #32]
   409f8:	mov	x21, x0
   409fc:	sub	x0, x4, x3
   40a00:	mov	x22, x2
   40a04:	stp	x19, x20, [sp, #16]
   40a08:	ubfx	x0, x0, #2, #32
   40a0c:	stp	x23, x24, [sp, #48]
   40a10:	mov	x24, x5
   40a14:	add	x20, sp, #0x90
   40a18:	stp	x25, x26, [sp, #64]
   40a1c:	add	x26, sp, #0x98
   40a20:	add	x25, sp, #0xa0
   40a24:	stp	x27, x28, [sp, #80]
   40a28:	bl	40980 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xae4>
   40a2c:	sub	x23, x15, x21
   40a30:	mov	w19, w0
   40a34:	add	x28, sp, #0x80
   40a38:	sbfx	x23, x23, #2, #32
   40a3c:	mov	w13, #0x0                   	// #0
   40a40:	lsl	x0, x23, #2
   40a44:	str	x0, [sp, #96]
   40a48:	neg	x0, x23, lsl #2
   40a4c:	mov	w23, #0xffffffff            	// #-1
   40a50:	str	x0, [sp, #112]
   40a54:	add	x0, sp, #0x88
   40a58:	str	x0, [sp, #104]
   40a5c:	tbz	w19, #31, 40ff4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1158>
   40a60:	cmn	w19, #0x1
   40a64:	b.ne	40cc4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe28>  // b.any
   40a68:	ldp	x5, x0, [sp, #104]
   40a6c:	sub	x6, x18, x22
   40a70:	mov	x2, x14
   40a74:	mov	x4, x28
   40a78:	asr	x6, x6, #2
   40a7c:	mov	x3, x18
   40a80:	sub	w6, w6, #0x1
   40a84:	mov	x1, x14
   40a88:	add	x19, x15, x0
   40a8c:	mov	x0, x19
   40a90:	bl	40768 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x8cc>
   40a94:	ldr	x2, [sp, #128]
   40a98:	cmp	x18, x2
   40a9c:	b.hi	40b04 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xc68>  // b.pmore
   40aa0:	ldr	x3, [sp, #136]
   40aa4:	cmp	x18, x3
   40aa8:	b.ls	40ac4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xc28>  // b.plast
   40aac:	sub	x0, x3, x22
   40ab0:	mov	x1, x2
   40ab4:	asr	x0, x0, #2
   40ab8:	sub	w0, w0, #0x1
   40abc:	cmp	x3, x1
   40ac0:	b.hi	40b28 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xc8c>  // b.pmore
   40ac4:	sub	x0, x3, x2
   40ac8:	cmp	x0, #0x4
   40acc:	b.gt	40b34 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xc98>
   40ad0:	sub	x4, x2, x14
   40ad4:	sub	x5, x18, x3
   40ad8:	cmp	x4, x5
   40adc:	b.gt	40c4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xdb0>
   40ae0:	cmp	x4, #0x4
   40ae4:	b.le	40c04 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd68>
   40ae8:	cmp	w13, #0x3f
   40aec:	b.le	40bc4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd28>
   40af0:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40af4:	add	x3, x3, #0xba4
   40af8:	add	x3, x3, #0x400
   40afc:	mov	w2, #0x4ba                 	// #1210
   40b00:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   40b04:	sub	x0, x2, x22
   40b08:	mov	x1, x14
   40b0c:	asr	x0, x0, #2
   40b10:	sub	w0, w0, #0x1
   40b14:	cmp	x2, x1
   40b18:	b.ls	40aa0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xc04>  // b.plast
   40b1c:	ldrsw	x3, [x1], #4
   40b20:	str	w0, [x21, x3, lsl #2]
   40b24:	b	40b14 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xc78>
   40b28:	ldrsw	x4, [x1], #4
   40b2c:	str	w0, [x21, x4, lsl #2]
   40b30:	b	40abc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xc20>
   40b34:	cmp	w13, #0x3f
   40b38:	b.le	40b60 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcc4>
   40b3c:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40b40:	add	x3, x3, #0xba4
   40b44:	add	x3, x3, #0x400
   40b48:	mov	w2, #0x4b4                 	// #1204
   40b4c:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40b50:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40b54:	add	x1, x1, #0xad8
   40b58:	add	x0, x0, #0xaf1
   40b5c:	bl	4a90 <__assert_fail@plt>
   40b60:	sbfiz	x4, x13, #5, #32
   40b64:	add	w1, w13, #0x1
   40b68:	str	xzr, [x20, x4]
   40b6c:	str	x2, [x26, x4]
   40b70:	str	x3, [x25, x4]
   40b74:	add	x4, x4, x25
   40b78:	str	xzr, [x4, #8]
   40b7c:	b.ne	40b94 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcf8>  // b.any
   40b80:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40b84:	add	x3, x3, #0xba4
   40b88:	add	x3, x3, #0x400
   40b8c:	mov	w2, #0x4b5                 	// #1205
   40b90:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   40b94:	sbfiz	x1, x1, #5, #32
   40b98:	add	x0, sp, #0xa8
   40b9c:	mov	w4, #0xfffffffe            	// #-2
   40ba0:	str	w4, [x0, x1]
   40ba4:	add	x0, sp, #0xac
   40ba8:	str	x19, [x20, x1]
   40bac:	str	x14, [x26, x1]
   40bb0:	str	w23, [x0, x1]
   40bb4:	mov	w23, w13
   40bb8:	add	w13, w13, #0x2
   40bbc:	str	x18, [x25, x1]
   40bc0:	b	40ad0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xc34>
   40bc4:	sbfiz	x6, x13, #5, #32
   40bc8:	ubfx	x0, x5, #2, #32
   40bcc:	str	x15, [x20, x6]
   40bd0:	str	x3, [x26, x6]
   40bd4:	str	x18, [x25, x6]
   40bd8:	bl	40980 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xae4>
   40bdc:	add	x1, sp, #0xa8
   40be0:	add	w13, w13, #0x1
   40be4:	str	w0, [x1, x6]
   40be8:	add	x0, sp, #0xac
   40bec:	str	w23, [x0, x6]
   40bf0:	ubfx	x0, x4, #2, #32
   40bf4:	bl	40980 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xae4>
   40bf8:	mov	w19, w0
   40bfc:	mov	x18, x2
   40c00:	b	40a5c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xbc0>
   40c04:	cmp	x5, #0x4
   40c08:	b.le	40c20 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd84>
   40c0c:	ubfx	x0, x5, #2, #32
   40c10:	bl	40980 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xae4>
   40c14:	mov	w19, w0
   40c18:	mov	x14, x3
   40c1c:	b	40a5c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xbc0>
   40c20:	cmp	w13, #0x0
   40c24:	b.ge	41ad4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c38>  // b.tcont
   40c28:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40c2c:	add	x3, x3, #0xba4
   40c30:	add	x3, x3, #0x400
   40c34:	mov	w2, #0x4bf                 	// #1215
   40c38:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40c3c:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40c40:	add	x1, x1, #0xad8
   40c44:	add	x0, x0, #0xb04
   40c48:	b	40b5c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcc0>
   40c4c:	cmp	x5, #0x4
   40c50:	b.le	40ca0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe04>
   40c54:	cmp	w13, #0x3f
   40c58:	b.le	40c70 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xdd4>
   40c5c:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40c60:	add	x3, x3, #0xba4
   40c64:	add	x3, x3, #0x400
   40c68:	mov	w2, #0x4c3                 	// #1219
   40c6c:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   40c70:	sbfiz	x6, x13, #5, #32
   40c74:	ubfx	x0, x4, #2, #32
   40c78:	str	x15, [x20, x6]
   40c7c:	str	x14, [x26, x6]
   40c80:	str	x2, [x25, x6]
   40c84:	bl	40980 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xae4>
   40c88:	add	x1, sp, #0xa8
   40c8c:	add	w13, w13, #0x1
   40c90:	str	w0, [x1, x6]
   40c94:	add	x0, sp, #0xac
   40c98:	str	w23, [x0, x6]
   40c9c:	b	40c0c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd70>
   40ca0:	cmp	x4, #0x4
   40ca4:	b.gt	40bf0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd54>
   40ca8:	cmp	w13, #0x0
   40cac:	b.ge	41ad4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c38>  // b.tcont
   40cb0:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40cb4:	add	x3, x3, #0xba4
   40cb8:	add	x3, x3, #0x400
   40cbc:	mov	w2, #0x4c8                 	// #1224
   40cc0:	b	40c38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd9c>
   40cc4:	cmn	w19, #0x2
   40cc8:	b.ne	4111c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1280>  // b.any
   40ccc:	sub	w6, w13, #0x1
   40cd0:	add	x5, sp, #0xa8
   40cd4:	sub	x15, x15, x21
   40cd8:	sbfiz	x2, x6, #5, #32
   40cdc:	ubfx	x15, x15, #2, #32
   40ce0:	ldr	w1, [x5, x2]
   40ce4:	ldr	x0, [x26, x2]
   40ce8:	ldr	x3, [x25, x2]
   40cec:	stp	x0, x3, [sp, #128]
   40cf0:	sub	x0, x0, #0x4
   40cf4:	sub	x2, x3, x22
   40cf8:	cbnz	w1, 40da8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xf0c>
   40cfc:	asr	x2, x2, #2
   40d00:	sub	w2, w2, #0x1
   40d04:	add	x7, x0, #0x4
   40d08:	cmp	x14, x0
   40d0c:	b.ls	40d38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe9c>  // b.plast
   40d10:	sub	x18, x18, #0x4
   40d14:	cmp	x3, x7
   40d18:	b.hi	40d70 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xed4>  // b.pmore
   40d1c:	cmp	w6, #0x0
   40d20:	b.ge	40ebc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1020>  // b.tcont
   40d24:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40d28:	add	x3, x3, #0xba4
   40d2c:	add	x3, x3, #0x400
   40d30:	mov	w2, #0x4d4                 	// #1236
   40d34:	b	40c38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd9c>
   40d38:	ldr	w1, [x14]
   40d3c:	subs	w1, w1, w15
   40d40:	b.mi	40d68 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xecc>  // b.first
   40d44:	sbfiz	x4, x1, #2, #32
   40d48:	ldr	w10, [x21, x4]
   40d4c:	cmp	w2, w10
   40d50:	b.ne	40d68 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xecc>  // b.any
   40d54:	str	w1, [x0, #4]
   40d58:	sub	x0, x7, x22
   40d5c:	asr	x0, x0, #2
   40d60:	str	w0, [x21, x4]
   40d64:	mov	x0, x7
   40d68:	add	x14, x14, #0x4
   40d6c:	b	40d04 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe68>
   40d70:	ldr	w0, [x18]
   40d74:	subs	w0, w0, w15
   40d78:	b.mi	40d10 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe74>  // b.first
   40d7c:	sbfiz	x4, x0, #2, #32
   40d80:	ldr	w1, [x21, x4]
   40d84:	cmp	w2, w1
   40d88:	b.ne	40d10 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe74>  // b.any
   40d8c:	sub	x1, x3, #0x4
   40d90:	stur	w0, [x3, #-4]
   40d94:	sub	x0, x1, x22
   40d98:	mov	x3, x1
   40d9c:	asr	x0, x0, #2
   40da0:	str	w0, [x21, x4]
   40da4:	b	40d10 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe74>
   40da8:	tbnz	w23, #31, 40db8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xf1c>
   40dac:	sbfiz	x7, x23, #5, #32
   40db0:	mov	w1, #0xffffffff            	// #-1
   40db4:	str	w1, [x5, x7]
   40db8:	asr	x2, x2, #2
   40dbc:	mov	w7, #0xffffffff            	// #-1
   40dc0:	sub	w2, w2, #0x1
   40dc4:	mov	x1, x14
   40dc8:	mov	w11, w7
   40dcc:	add	x10, x0, #0x4
   40dd0:	cmp	x1, x0
   40dd4:	b.ls	40e40 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xfa4>  // b.plast
   40dd8:	mov	w12, #0xffffffff            	// #-1
   40ddc:	cmp	x14, x0
   40de0:	b.ls	40e88 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xfec>  // b.plast
   40de4:	sub	x18, x18, #0x4
   40de8:	mov	w1, #0xffffffff            	// #-1
   40dec:	cmp	x3, x10
   40df0:	b.ls	40d1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe80>  // b.plast
   40df4:	ldr	w0, [x18]
   40df8:	subs	w12, w0, w15
   40dfc:	b.mi	40e38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xf9c>  // b.first
   40e00:	sbfiz	x11, x12, #2, #32
   40e04:	ldr	w4, [x21, x11]
   40e08:	cmp	w2, w4
   40e0c:	b.ne	40e38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xf9c>  // b.any
   40e10:	stur	w12, [x3, #-4]
   40e14:	sub	x4, x3, #0x4
   40e18:	ldr	w3, [x21, w0, sxtw #2]
   40e1c:	sub	x0, x4, x22
   40e20:	cmp	w3, w1
   40e24:	asr	x0, x0, #2
   40e28:	mov	w1, w3
   40e2c:	mov	x3, x4
   40e30:	csel	w7, w7, w0, eq  // eq = none
   40e34:	str	w7, [x21, x11]
   40e38:	sub	x18, x18, #0x4
   40e3c:	b	40dec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xf50>
   40e40:	ldr	w4, [x1]
   40e44:	subs	w16, w4, w15
   40e48:	b.mi	40e80 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xfe4>  // b.first
   40e4c:	sbfiz	x12, x16, #2, #32
   40e50:	ldr	w17, [x21, x12]
   40e54:	cmp	w2, w17
   40e58:	b.ne	40e80 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xfe4>  // b.any
   40e5c:	str	w16, [x0, #4]
   40e60:	sub	x0, x10, x22
   40e64:	ldr	w4, [x21, w4, sxtw #2]
   40e68:	asr	x0, x0, #2
   40e6c:	cmp	w4, w11
   40e70:	mov	w11, w4
   40e74:	csel	w7, w7, w0, eq  // eq = none
   40e78:	mov	x0, x10
   40e7c:	str	w7, [x21, x12]
   40e80:	add	x1, x1, #0x4
   40e84:	b	40dcc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xf30>
   40e88:	ldrsw	x1, [x0]
   40e8c:	sub	x11, x0, x22
   40e90:	asr	x11, x11, #2
   40e94:	lsl	x1, x1, #2
   40e98:	ldr	w4, [x21, x1]
   40e9c:	cmp	w4, w12
   40ea0:	csel	w7, w7, w11, eq  // eq = none
   40ea4:	cmp	w4, w7
   40ea8:	b.eq	40eb0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1014>  // b.none
   40eac:	str	w7, [x21, x1]
   40eb0:	sub	x0, x0, #0x4
   40eb4:	mov	w12, w4
   40eb8:	b	40ddc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xf40>
   40ebc:	b.eq	41af8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c5c>  // b.none
   40ec0:	sub	w13, w13, #0x2
   40ec4:	sbfiz	x0, x13, #5, #32
   40ec8:	ldr	w19, [x5, x0]
   40ecc:	ldr	x15, [x20, x0]
   40ed0:	ldr	x14, [x26, x0]
   40ed4:	ldr	x18, [x25, x0]
   40ed8:	add	x1, sp, #0xac
   40edc:	ldr	w23, [x1, x0]
   40ee0:	b	40a5c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xbc0>
   40ee4:	cmp	x18, x14
   40ee8:	b.hi	41148 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x12ac>  // b.pmore
   40eec:	cmp	w13, #0x0
   40ef0:	b.ge	41ad4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c38>  // b.tcont
   40ef4:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40ef8:	add	x3, x3, #0xba4
   40efc:	add	x3, x3, #0x400
   40f00:	mov	w2, #0x4f7                 	// #1271
   40f04:	b	40c38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd9c>
   40f08:	mov	w19, #0xffffffff            	// #-1
   40f0c:	b	41190 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x12f4>
   40f10:	ldrsw	x4, [x3], #4
   40f14:	str	w0, [x21, x4, lsl #2]
   40f18:	mov	w4, #0x1                   	// #1
   40f1c:	b	411b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x131c>
   40f20:	sbfiz	x0, x13, #5, #32
   40f24:	add	x3, sp, #0xa8
   40f28:	mov	w4, #0xfffffffd            	// #-3
   40f2c:	str	w4, [x3, x0]
   40f30:	add	x3, sp, #0xac
   40f34:	str	x15, [x20, x0]
   40f38:	mov	x15, x2
   40f3c:	str	x1, [x26, x0]
   40f40:	str	x18, [x25, x0]
   40f44:	str	w23, [x3, x0]
   40f48:	add	w13, w13, #0x1
   40f4c:	b	40fa4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1108>
   40f50:	cmp	x0, #0x4
   40f54:	b.le	40fa0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1104>
   40f58:	cmp	w13, #0x3f
   40f5c:	b.le	40f74 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x10d8>
   40f60:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40f64:	add	x3, x3, #0xba4
   40f68:	add	x3, x3, #0x400
   40f6c:	mov	w2, #0x4e8                 	// #1256
   40f70:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   40f74:	sbfiz	x0, x13, #5, #32
   40f78:	add	w13, w13, #0x1
   40f7c:	str	x2, [x20, x0]
   40f80:	add	x2, sp, #0xa8
   40f84:	str	x14, [x26, x0]
   40f88:	mov	x14, x1
   40f8c:	str	x1, [x25, x0]
   40f90:	str	w19, [x2, x0]
   40f94:	add	x2, sp, #0xac
   40f98:	str	w23, [x2, x0]
   40f9c:	b	4111c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1280>
   40fa0:	mov	x15, x2
   40fa4:	mov	x18, x1
   40fa8:	b	40a5c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xbc0>
   40fac:	tbnz	w23, #31, 40fc0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1124>
   40fb0:	sbfiz	x0, x23, #5, #32
   40fb4:	add	x2, sp, #0xa8
   40fb8:	mov	w3, #0xffffffff            	// #-1
   40fbc:	str	w3, [x2, x0]
   40fc0:	sub	x0, x18, x1
   40fc4:	mov	x14, x1
   40fc8:	cmp	x0, #0x4
   40fcc:	b.gt	4111c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1280>
   40fd0:	cmp	w13, #0x0
   40fd4:	b.ge	41ad4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c38>  // b.tcont
   40fd8:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   40fdc:	add	x3, x3, #0xba4
   40fe0:	add	x3, x3, #0x400
   40fe4:	mov	w2, #0x4f3                 	// #1267
   40fe8:	b	40c38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd9c>
   40fec:	str	x14, [sp, #128]
   40ff0:	b	40eec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1050>
   40ff4:	sub	x0, x18, x14
   40ff8:	str	x0, [sp, #120]
   40ffc:	cmp	x0, #0x20
   41000:	b.gt	41068 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x11cc>
   41004:	add	x1, x14, #0x4
   41008:	cmp	x18, x1
   4100c:	b.ls	4111c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1280>  // b.plast
   41010:	mov	x0, x1
   41014:	ldr	w4, [x0], #-4
   41018:	add	x6, x15, w4, sxtw #2
   4101c:	ldr	w2, [x0]
   41020:	ldr	w3, [x6]
   41024:	ldr	w5, [x15, w2, sxtw #2]
   41028:	subs	w3, w3, w5
   4102c:	b.mi	41048 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x11ac>  // b.first
   41030:	b.ne	4103c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x11a0>  // b.any
   41034:	mvn	w2, w2
   41038:	str	w2, [x0]
   4103c:	add	x1, x1, #0x4
   41040:	str	w4, [x0, #4]
   41044:	b	41008 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x116c>
   41048:	ldr	w2, [x0]
   4104c:	sub	x0, x0, #0x4
   41050:	str	w2, [x0, #8]
   41054:	cmp	x14, x0
   41058:	b.hi	4103c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x11a0>  // b.pmore
   4105c:	ldr	w2, [x0]
   41060:	tbnz	w2, #31, 41048 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x11ac>
   41064:	b	4101c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1180>
   41068:	sub	x0, x18, x14
   4106c:	sub	x12, x18, #0x4
   41070:	asr	x27, x0, #2
   41074:	mov	w3, w27
   41078:	cbnz	w19, 412ac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1410>
   4107c:	and	w19, w27, #0x1
   41080:	tbnz	w27, #0, 410b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x121c>
   41084:	sub	w3, w27, #0x1
   41088:	mov	w0, #0x2                   	// #2
   4108c:	sbfiz	x2, x3, #2, #32
   41090:	sdiv	w0, w3, w0
   41094:	ldr	w1, [x14, x2]
   41098:	sbfiz	x0, x0, #2, #32
   4109c:	ldr	w5, [x15, w1, sxtw #2]
   410a0:	ldr	w4, [x14, x0]
   410a4:	ldr	w6, [x15, w4, sxtw #2]
   410a8:	cmp	w6, w5
   410ac:	b.ge	410b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x121c>  // b.tcont
   410b0:	str	w4, [x14, x2]
   410b4:	str	w1, [x14, x0]
   410b8:	mov	w10, #0x2                   	// #2
   410bc:	sdiv	w10, w3, w10
   410c0:	sub	w10, w10, #0x1
   410c4:	tbz	w10, #31, 41230 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1394>
   410c8:	cbnz	w19, 410f0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1254>
   410cc:	sbfiz	x0, x3, #2, #32
   410d0:	ldr	w1, [x14]
   410d4:	ldr	w2, [x14, x0]
   410d8:	str	w2, [x14]
   410dc:	str	w1, [x14, x0]
   410e0:	mov	w2, #0x0                   	// #0
   410e4:	mov	x1, x14
   410e8:	mov	x0, x15
   410ec:	bl	40654 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x7b8>
   410f0:	sub	w10, w3, #0x1
   410f4:	sxtw	x10, w10
   410f8:	cmp	w10, #0x0
   410fc:	b.gt	41244 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x13a8>
   41100:	ldr	x0, [sp, #136]
   41104:	mov	w1, #0x0                   	// #0
   41108:	str	x12, [sp, #128]
   4110c:	cmp	x14, x12
   41110:	b.cc	41270 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x13d4>  // b.lo, b.ul, b.last
   41114:	cbz	w1, 4111c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1280>
   41118:	stp	x12, x0, [sp, #128]
   4111c:	ldr	w0, [x14]
   41120:	tbnz	w0, #31, 40ee4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1048>
   41124:	ldrsw	x1, [x14]
   41128:	sub	x0, x14, x22
   4112c:	add	x14, x14, #0x4
   41130:	asr	x0, x0, #2
   41134:	cmp	x18, x14
   41138:	str	w0, [x21, x1, lsl #2]
   4113c:	b.ls	40fec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1150>  // b.plast
   41140:	ldr	w0, [x14]
   41144:	tbz	w0, #31, 41124 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1288>
   41148:	mov	x0, x14
   4114c:	ldr	w1, [x0]
   41150:	mov	x2, x0
   41154:	add	x0, x0, #0x4
   41158:	mvn	w1, w1
   4115c:	stur	w1, [x0, #-4]
   41160:	ldr	w1, [x2, #4]
   41164:	tbnz	w1, #31, 4114c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x12b0>
   41168:	sbfiz	x1, x1, #2, #32
   4116c:	ldr	w3, [x21, x1]
   41170:	ldr	w1, [x15, x1]
   41174:	cmp	w3, w1
   41178:	b.eq	40f08 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x106c>  // b.none
   4117c:	sub	x0, x0, x14
   41180:	asr	x0, x0, #2
   41184:	add	w0, w0, #0x1
   41188:	bl	40980 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xae4>
   4118c:	mov	w19, w0
   41190:	add	x1, x2, #0x8
   41194:	str	x1, [sp, #128]
   41198:	cmp	x18, x1
   4119c:	b.ls	411e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1348>  // b.plast
   411a0:	sub	x0, x1, x22
   411a4:	mov	x3, x14
   411a8:	mov	w4, #0x0                   	// #0
   411ac:	str	x14, [sp, #136]
   411b0:	asr	x0, x0, #2
   411b4:	sub	w0, w0, #0x1
   411b8:	cmp	x1, x3
   411bc:	b.hi	40f10 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1074>  // b.pmore
   411c0:	sub	x0, x2, x14
   411c4:	sub	x2, x14, #0x3
   411c8:	add	x0, x0, #0xb
   411cc:	cmp	x1, x2
   411d0:	and	x0, x0, #0xfffffffffffffffc
   411d4:	csel	x0, x0, xzr, cs  // cs = hs, nlast
   411d8:	add	x0, x14, x0
   411dc:	cbz	w4, 411e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1348>
   411e0:	str	x0, [sp, #136]
   411e4:	sub	x1, x1, x14
   411e8:	mov	x0, x24
   411ec:	ubfx	x1, x1, #2, #32
   411f0:	bl	40718 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x87c>
   411f4:	ldr	x1, [sp, #128]
   411f8:	cbz	w0, 40fac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1110>
   411fc:	sub	x2, x1, x14
   41200:	sub	x0, x18, x1
   41204:	cmp	x2, x0
   41208:	ldr	x2, [sp, #96]
   4120c:	add	x2, x15, x2
   41210:	b.gt	40f50 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x10b4>
   41214:	cmp	w13, #0x3f
   41218:	b.le	40f20 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1084>
   4121c:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   41220:	add	x3, x3, #0xba4
   41224:	add	x3, x3, #0x400
   41228:	mov	w2, #0x4e4                 	// #1252
   4122c:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   41230:	mov	w2, w10
   41234:	mov	x1, x14
   41238:	mov	x0, x15
   4123c:	bl	40654 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x7b8>
   41240:	b	410c0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1224>
   41244:	ldr	w11, [x14]
   41248:	mov	w3, w10
   4124c:	ldr	w0, [x14, x10, lsl #2]
   41250:	mov	x1, x14
   41254:	str	w0, [x14]
   41258:	mov	w2, #0x0                   	// #0
   4125c:	mov	x0, x15
   41260:	bl	40654 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x7b8>
   41264:	str	w11, [x14, x10, lsl #2]
   41268:	sub	x10, x10, #0x1
   4126c:	b	410f8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x125c>
   41270:	mov	x0, x12
   41274:	ldrsw	x1, [x0], #-4
   41278:	ldr	w3, [x15, x1, lsl #2]
   4127c:	cmp	x14, x0
   41280:	b.hi	41294 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x13f8>  // b.pmore
   41284:	ldr	w1, [x0]
   41288:	ldr	w2, [x15, w1, sxtw #2]
   4128c:	cmp	w3, w2
   41290:	b.eq	412a0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1404>  // b.none
   41294:	mov	x12, x0
   41298:	mov	w1, #0x1                   	// #1
   4129c:	b	4110c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1270>
   412a0:	mvn	w1, w1
   412a4:	str	w1, [x0], #-4
   412a8:	b	4127c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x13e0>
   412ac:	mov	w6, #0x2                   	// #2
   412b0:	cmp	w27, #0x200
   412b4:	sdiv	w6, w27, w6
   412b8:	add	x6, x14, w6, sxtw #2
   412bc:	b.gt	414bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1620>
   412c0:	cmp	w27, #0x20
   412c4:	b.gt	412e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1448>
   412c8:	mov	x3, x12
   412cc:	mov	x2, x6
   412d0:	mov	x1, x14
   412d4:	mov	x0, x15
   412d8:	bl	406b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x81c>
   412dc:	mov	x6, x0
   412e0:	b	413bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1520>
   412e4:	asr	w2, w27, #2
   412e8:	mov	x0, #0xfffffffffffffffc    	// #-4
   412ec:	sub	x0, x0, w2, sxtw #2
   412f0:	add	x1, x14, w2, sxtw #2
   412f4:	ldrsw	x3, [x14, w2, sxtw #2]
   412f8:	add	x0, x18, x0
   412fc:	ldrsw	x2, [x6]
   41300:	ldr	w3, [x15, x3, lsl #2]
   41304:	ldr	w2, [x15, x2, lsl #2]
   41308:	cmp	w3, w2
   4130c:	b.le	4131c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1480>
   41310:	mov	x2, x1
   41314:	mov	x1, x6
   41318:	mov	x6, x2
   4131c:	ldrsw	x3, [x0]
   41320:	ldursw	x2, [x18, #-4]
   41324:	ldr	w3, [x15, x3, lsl #2]
   41328:	ldr	w2, [x15, x2, lsl #2]
   4132c:	cmp	w3, w2
   41330:	b.le	41340 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x14a4>
   41334:	mov	x2, x0
   41338:	mov	x0, x12
   4133c:	mov	x12, x2
   41340:	ldrsw	x2, [x0]
   41344:	ldrsw	x3, [x1]
   41348:	ldr	w2, [x15, x2, lsl #2]
   4134c:	ldr	w3, [x15, x3, lsl #2]
   41350:	cmp	w3, w2
   41354:	b.le	41368 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x14cc>
   41358:	mov	x0, x1
   4135c:	mov	x1, x6
   41360:	mov	x6, x12
   41364:	mov	x12, x1
   41368:	ldrsw	x1, [x6]
   4136c:	ldrsw	x2, [x14]
   41370:	ldr	w1, [x15, x1, lsl #2]
   41374:	ldr	w2, [x15, x2, lsl #2]
   41378:	cmp	w2, w1
   4137c:	b.le	414b4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1618>
   41380:	mov	x1, x6
   41384:	mov	x6, x14
   41388:	ldrsw	x2, [x0]
   4138c:	ldrsw	x3, [x1]
   41390:	ldr	w2, [x15, x2, lsl #2]
   41394:	ldr	w3, [x15, x3, lsl #2]
   41398:	cmp	w3, w2
   4139c:	csel	x0, x0, x1, le
   413a0:	csel	x6, x6, x12, le
   413a4:	ldrsw	x1, [x0]
   413a8:	ldrsw	x2, [x6]
   413ac:	ldr	w1, [x15, x1, lsl #2]
   413b0:	ldr	w2, [x15, x2, lsl #2]
   413b4:	cmp	w2, w1
   413b8:	csel	x6, x6, x0, le
   413bc:	ldr	w1, [x6]
   413c0:	mov	x2, x14
   413c4:	ldr	w0, [x14]
   413c8:	mov	x4, x28
   413cc:	str	x6, [sp, #128]
   413d0:	mov	x3, x18
   413d4:	str	w1, [x14]
   413d8:	mov	x1, x14
   413dc:	str	w0, [x6]
   413e0:	ldr	x5, [sp, #104]
   413e4:	ldrsw	x0, [x2], #4
   413e8:	ldr	w6, [x15, x0, lsl #2]
   413ec:	mov	x0, x15
   413f0:	str	w6, [sp, #120]
   413f4:	bl	40768 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x8cc>
   413f8:	sub	x0, x18, x14
   413fc:	ldp	x2, x4, [sp, #128]
   41400:	sub	x3, x4, x2
   41404:	cmp	x0, x3
   41408:	b.eq	41a7c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1be0>  // b.none
   4140c:	ldrsw	x0, [x2]
   41410:	ldr	w6, [sp, #120]
   41414:	ldr	w0, [x21, x0, lsl #2]
   41418:	cmp	w6, w0
   4141c:	b.eq	4152c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1690>  // b.none
   41420:	ubfx	x0, x3, #2, #32
   41424:	bl	40980 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xae4>
   41428:	mov	w5, w0
   4142c:	sub	x0, x2, x22
   41430:	mov	x1, x14
   41434:	asr	x0, x0, #2
   41438:	sub	w0, w0, #0x1
   4143c:	cmp	x2, x1
   41440:	b.hi	41534 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1698>  // b.pmore
   41444:	cmp	x18, x4
   41448:	b.hi	41540 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x16a4>  // b.pmore
   4144c:	sub	w19, w19, #0x1
   41450:	cmp	x3, #0x4
   41454:	b.le	41964 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1ac8>
   41458:	ubfx	x1, x3, #2, #32
   4145c:	mov	x0, x24
   41460:	bl	40718 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x87c>
   41464:	cbz	w0, 41964 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1ac8>
   41468:	ldp	x1, x2, [sp, #128]
   4146c:	ldr	x3, [sp, #96]
   41470:	add	x4, x15, x3
   41474:	sub	x10, x1, x14
   41478:	sub	x6, x18, x2
   4147c:	sub	x0, x2, x1
   41480:	cmp	x10, x6
   41484:	b.gt	4175c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x18c0>
   41488:	cmp	x6, x0
   4148c:	b.gt	4160c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1770>
   41490:	cmp	x10, #0x4
   41494:	b.le	415bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1720>
   41498:	cmp	w13, #0x3f
   4149c:	b.le	41560 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x16c4>
   414a0:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   414a4:	add	x3, x3, #0xba4
   414a8:	add	x3, x3, #0x400
   414ac:	mov	w2, #0x51f                 	// #1311
   414b0:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   414b4:	mov	x1, x14
   414b8:	b	41388 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x14ec>
   414bc:	asr	w2, w27, #3
   414c0:	mov	x1, x14
   414c4:	mov	x0, x15
   414c8:	lsl	w3, w2, #1
   414cc:	sbfiz	x10, x2, #2, #32
   414d0:	add	x2, x14, w2, sxtw #2
   414d4:	sbfiz	x8, x3, #2, #32
   414d8:	add	x3, x14, w3, sxtw #2
   414dc:	bl	406b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x81c>
   414e0:	mov	x7, x0
   414e4:	add	x3, x6, x10
   414e8:	sub	x1, x6, x10
   414ec:	mov	x2, x6
   414f0:	mov	x0, x15
   414f4:	bl	406b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x81c>
   414f8:	mov	x6, x0
   414fc:	mov	x1, #0xfffffffffffffffc    	// #-4
   41500:	sub	x2, x1, x10
   41504:	sub	x1, x1, x8
   41508:	mov	x3, x12
   4150c:	add	x2, x18, x2
   41510:	add	x1, x18, x1
   41514:	mov	x0, x15
   41518:	bl	406b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x81c>
   4151c:	mov	x3, x0
   41520:	mov	x2, x6
   41524:	mov	x1, x7
   41528:	b	412d4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1438>
   4152c:	mov	w5, #0xffffffff            	// #-1
   41530:	b	4142c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1590>
   41534:	ldrsw	x6, [x1], #4
   41538:	str	w0, [x21, x6, lsl #2]
   4153c:	b	4143c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x15a0>
   41540:	sub	x0, x4, x22
   41544:	asr	x0, x0, #2
   41548:	sub	w0, w0, #0x1
   4154c:	cmp	x4, x2
   41550:	b.ls	4144c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x15b0>  // b.plast
   41554:	ldrsw	x1, [x2], #4
   41558:	str	w0, [x21, x1, lsl #2]
   4155c:	b	4154c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x16b0>
   41560:	sbfiz	x3, x13, #5, #32
   41564:	add	x6, sp, #0xa8
   41568:	add	w0, w13, #0x1
   4156c:	str	x4, [x20, x3]
   41570:	add	x4, sp, #0xac
   41574:	str	x1, [x26, x3]
   41578:	str	x2, [x25, x3]
   4157c:	str	w5, [x6, x3]
   41580:	str	w23, [x4, x3]
   41584:	b.ne	4159c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1700>  // b.any
   41588:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   4158c:	add	x3, x3, #0xba4
   41590:	add	x3, x3, #0x400
   41594:	mov	w2, #0x520                 	// #1312
   41598:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   4159c:	sbfiz	x0, x0, #5, #32
   415a0:	add	w13, w13, #0x2
   415a4:	str	x15, [x20, x0]
   415a8:	str	x2, [x26, x0]
   415ac:	str	x18, [x25, x0]
   415b0:	str	w19, [x6, x0]
   415b4:	str	w23, [x4, x0]
   415b8:	b	40fa4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1108>
   415bc:	cmp	x6, #0x4
   415c0:	b.le	41754 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x18b8>
   415c4:	cmp	w13, #0x3f
   415c8:	b.le	415e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1744>
   415cc:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   415d0:	add	x3, x3, #0xba4
   415d4:	add	x3, x3, #0x400
   415d8:	mov	w2, #0x523                 	// #1315
   415dc:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   415e0:	sbfiz	x0, x13, #5, #32
   415e4:	add	w13, w13, #0x1
   415e8:	str	x1, [x26, x0]
   415ec:	add	x1, sp, #0xa8
   415f0:	str	x4, [x20, x0]
   415f4:	str	x2, [x25, x0]
   415f8:	str	w5, [x1, x0]
   415fc:	add	x1, sp, #0xac
   41600:	str	w23, [x1, x0]
   41604:	mov	x14, x2
   41608:	b	40a5c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xbc0>
   4160c:	cmp	x10, x0
   41610:	sxtw	x3, w13
   41614:	add	w0, w13, #0x1
   41618:	add	x11, sp, #0xa8
   4161c:	add	x6, sp, #0xac
   41620:	b.gt	416e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x184c>
   41624:	cmp	x10, #0x4
   41628:	b.le	4169c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1800>
   4162c:	cmp	w13, #0x3f
   41630:	b.le	41648 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x17ac>
   41634:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   41638:	add	x3, x3, #0xba4
   4163c:	add	x3, x3, #0x400
   41640:	mov	w2, #0x52a                 	// #1322
   41644:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   41648:	lsl	x3, x3, #5
   4164c:	cmp	w0, #0x40
   41650:	str	x15, [x20, x3]
   41654:	str	x2, [x26, x3]
   41658:	str	x18, [x25, x3]
   4165c:	str	w19, [x11, x3]
   41660:	str	w23, [x6, x3]
   41664:	b.ne	4167c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x17e0>  // b.any
   41668:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   4166c:	add	x3, x3, #0xba4
   41670:	add	x3, x3, #0x400
   41674:	mov	w2, #0x52b                 	// #1323
   41678:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   4167c:	sbfiz	x0, x0, #5, #32
   41680:	add	w13, w13, #0x2
   41684:	str	x4, [x20, x0]
   41688:	str	x1, [x26, x0]
   4168c:	str	x2, [x25, x0]
   41690:	str	w5, [x11, x0]
   41694:	str	w23, [x6, x0]
   41698:	b	40fa4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1108>
   4169c:	cmp	w13, #0x3f
   416a0:	b.le	416b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x181c>
   416a4:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   416a8:	add	x3, x3, #0xba4
   416ac:	add	x3, x3, #0x400
   416b0:	mov	w2, #0x52e                 	// #1326
   416b4:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   416b8:	lsl	x3, x3, #5
   416bc:	str	x15, [x20, x3]
   416c0:	str	x2, [x26, x3]
   416c4:	str	x18, [x25, x3]
   416c8:	str	w19, [x11, x3]
   416cc:	str	w23, [x6, x3]
   416d0:	mov	x15, x4
   416d4:	mov	w13, w0
   416d8:	mov	w19, w5
   416dc:	mov	x18, x2
   416e0:	mov	x14, x1
   416e4:	b	40a5c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xbc0>
   416e8:	cmp	w13, #0x3f
   416ec:	b.le	41704 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1868>
   416f0:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   416f4:	add	x3, x3, #0xba4
   416f8:	add	x3, x3, #0x400
   416fc:	mov	w2, #0x532                 	// #1330
   41700:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   41704:	lsl	x3, x3, #5
   41708:	cmp	w0, #0x40
   4170c:	str	x15, [x20, x3]
   41710:	str	x2, [x26, x3]
   41714:	str	x18, [x25, x3]
   41718:	str	w19, [x11, x3]
   4171c:	str	w23, [x6, x3]
   41720:	b.ne	41738 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x189c>  // b.any
   41724:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   41728:	add	x3, x3, #0xba4
   4172c:	add	x3, x3, #0x400
   41730:	mov	w2, #0x533                 	// #1331
   41734:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   41738:	sbfiz	x0, x0, #5, #32
   4173c:	add	w13, w13, #0x2
   41740:	str	x15, [x20, x0]
   41744:	str	x14, [x26, x0]
   41748:	str	x1, [x25, x0]
   4174c:	str	w19, [x11, x0]
   41750:	str	w23, [x6, x0]
   41754:	mov	x15, x4
   41758:	b	416d8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x183c>
   4175c:	cmp	x10, x0
   41760:	b.gt	4182c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1990>
   41764:	cmp	x6, #0x4
   41768:	b.le	417e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1948>
   4176c:	cmp	w13, #0x3f
   41770:	b.le	41788 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x18ec>
   41774:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   41778:	add	x3, x3, #0xba4
   4177c:	add	x3, x3, #0x400
   41780:	mov	w2, #0x539                 	// #1337
   41784:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   41788:	sbfiz	x3, x13, #5, #32
   4178c:	add	x6, sp, #0xa8
   41790:	add	w0, w13, #0x1
   41794:	str	x4, [x20, x3]
   41798:	add	x4, sp, #0xac
   4179c:	str	x1, [x26, x3]
   417a0:	str	x2, [x25, x3]
   417a4:	str	w5, [x6, x3]
   417a8:	str	w23, [x4, x3]
   417ac:	b.ne	417c4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1928>  // b.any
   417b0:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   417b4:	add	x3, x3, #0xba4
   417b8:	add	x3, x3, #0x400
   417bc:	mov	w2, #0x53a                 	// #1338
   417c0:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   417c4:	sbfiz	x0, x0, #5, #32
   417c8:	add	w13, w13, #0x2
   417cc:	str	x15, [x20, x0]
   417d0:	str	x14, [x26, x0]
   417d4:	str	x1, [x25, x0]
   417d8:	str	w19, [x6, x0]
   417dc:	str	w23, [x4, x0]
   417e0:	b	41604 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1768>
   417e4:	cmp	x10, #0x4
   417e8:	b.le	41754 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x18b8>
   417ec:	cmp	w13, #0x3f
   417f0:	b.le	41808 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x196c>
   417f4:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   417f8:	add	x3, x3, #0xba4
   417fc:	add	x3, x3, #0x400
   41800:	mov	w2, #0x53d                 	// #1341
   41804:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   41808:	sbfiz	x0, x13, #5, #32
   4180c:	str	x2, [x25, x0]
   41810:	add	x2, sp, #0xa8
   41814:	str	x4, [x20, x0]
   41818:	str	x1, [x26, x0]
   4181c:	str	w5, [x2, x0]
   41820:	add	x2, sp, #0xac
   41824:	str	w23, [x2, x0]
   41828:	b	40f48 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x10ac>
   4182c:	cmp	x6, x0
   41830:	sxtw	x3, w13
   41834:	add	w0, w13, #0x1
   41838:	add	x11, sp, #0xa8
   4183c:	add	x10, sp, #0xac
   41840:	b.gt	418f4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a58>
   41844:	cmp	x6, #0x4
   41848:	b.le	418bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a20>
   4184c:	cmp	w13, #0x3f
   41850:	b.le	41868 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x19cc>
   41854:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   41858:	add	x3, x3, #0xba4
   4185c:	add	x3, x3, #0x400
   41860:	mov	w2, #0x544                 	// #1348
   41864:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   41868:	lsl	x3, x3, #5
   4186c:	cmp	w0, #0x40
   41870:	str	x15, [x20, x3]
   41874:	str	x14, [x26, x3]
   41878:	str	x1, [x25, x3]
   4187c:	str	w19, [x11, x3]
   41880:	str	w23, [x10, x3]
   41884:	b.ne	4189c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a00>  // b.any
   41888:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   4188c:	add	x3, x3, #0xba4
   41890:	add	x3, x3, #0x400
   41894:	mov	w2, #0x545                 	// #1349
   41898:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   4189c:	sbfiz	x0, x0, #5, #32
   418a0:	add	w13, w13, #0x2
   418a4:	str	x4, [x20, x0]
   418a8:	str	x1, [x26, x0]
   418ac:	str	x2, [x25, x0]
   418b0:	str	w5, [x11, x0]
   418b4:	str	w23, [x10, x0]
   418b8:	b	41604 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1768>
   418bc:	cmp	w13, #0x3f
   418c0:	b.le	418d8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a3c>
   418c4:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   418c8:	add	x3, x3, #0xba4
   418cc:	add	x3, x3, #0x400
   418d0:	mov	w2, #0x548                 	// #1352
   418d4:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   418d8:	lsl	x3, x3, #5
   418dc:	str	x15, [x20, x3]
   418e0:	str	x14, [x26, x3]
   418e4:	str	x1, [x25, x3]
   418e8:	str	w19, [x11, x3]
   418ec:	str	w23, [x10, x3]
   418f0:	b	416d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1834>
   418f4:	cmp	w13, #0x3f
   418f8:	b.le	41910 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a74>
   418fc:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   41900:	add	x3, x3, #0xba4
   41904:	add	x3, x3, #0x400
   41908:	mov	w2, #0x54c                 	// #1356
   4190c:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   41910:	lsl	x3, x3, #5
   41914:	cmp	w0, #0x40
   41918:	str	x15, [x20, x3]
   4191c:	str	x14, [x26, x3]
   41920:	str	x1, [x25, x3]
   41924:	str	w19, [x11, x3]
   41928:	str	w23, [x10, x3]
   4192c:	b.ne	41944 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1aa8>  // b.any
   41930:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   41934:	add	x3, x3, #0xba4
   41938:	add	x3, x3, #0x400
   4193c:	mov	w2, #0x54d                 	// #1357
   41940:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   41944:	sbfiz	x0, x0, #5, #32
   41948:	add	w13, w13, #0x2
   4194c:	str	x15, [x20, x0]
   41950:	str	x2, [x26, x0]
   41954:	str	x18, [x25, x0]
   41958:	str	w19, [x11, x0]
   4195c:	str	w23, [x10, x0]
   41960:	b	41754 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x18b8>
   41964:	ldp	x0, x1, [sp, #128]
   41968:	sub	x2, x1, x0
   4196c:	cmp	x2, #0x4
   41970:	b.le	41988 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1aec>
   41974:	tbnz	w23, #31, 41988 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1aec>
   41978:	sbfiz	x2, x23, #5, #32
   4197c:	add	x3, sp, #0xa8
   41980:	mov	w4, #0xffffffff            	// #-1
   41984:	str	w4, [x3, x2]
   41988:	sub	x2, x0, x14
   4198c:	sub	x3, x18, x1
   41990:	cmp	x2, x3
   41994:	b.gt	41a0c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1b70>
   41998:	cmp	x2, #0x4
   4199c:	b.le	419e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1b4c>
   419a0:	cmp	w13, #0x3f
   419a4:	b.le	419bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1b20>
   419a8:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   419ac:	add	x3, x3, #0xba4
   419b0:	add	x3, x3, #0x400
   419b4:	mov	w2, #0x555                 	// #1365
   419b8:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   419bc:	sbfiz	x2, x13, #5, #32
   419c0:	add	w13, w13, #0x1
   419c4:	str	x1, [x26, x2]
   419c8:	add	x1, sp, #0xa8
   419cc:	str	x15, [x20, x2]
   419d0:	str	x18, [x25, x2]
   419d4:	str	w19, [x1, x2]
   419d8:	add	x1, sp, #0xac
   419dc:	str	w23, [x1, x2]
   419e0:	mov	x18, x0
   419e4:	b	40a5c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xbc0>
   419e8:	cmp	x3, #0x4
   419ec:	b.gt	416e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1844>
   419f0:	cmp	w13, #0x0
   419f4:	b.ge	41ad4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c38>  // b.tcont
   419f8:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   419fc:	add	x3, x3, #0xba4
   41a00:	add	x3, x3, #0x400
   41a04:	mov	w2, #0x55a                 	// #1370
   41a08:	b	40c38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd9c>
   41a0c:	cmp	x3, #0x4
   41a10:	b.le	41a58 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1bbc>
   41a14:	cmp	w13, #0x3f
   41a18:	b.le	41a30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1b94>
   41a1c:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   41a20:	add	x3, x3, #0xba4
   41a24:	add	x3, x3, #0x400
   41a28:	mov	w2, #0x55e                 	// #1374
   41a2c:	b	40b4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb0>
   41a30:	sbfiz	x2, x13, #5, #32
   41a34:	add	w13, w13, #0x1
   41a38:	str	x0, [x25, x2]
   41a3c:	add	x0, sp, #0xa8
   41a40:	str	x15, [x20, x2]
   41a44:	str	x14, [x26, x2]
   41a48:	str	w19, [x0, x2]
   41a4c:	add	x0, sp, #0xac
   41a50:	str	w23, [x0, x2]
   41a54:	b	416e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1844>
   41a58:	cmp	x2, #0x4
   41a5c:	b.gt	419e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1b44>
   41a60:	cmp	w13, #0x0
   41a64:	b.ge	41ad4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c38>  // b.tcont
   41a68:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   41a6c:	add	x3, x3, #0xba4
   41a70:	add	x3, x3, #0x400
   41a74:	mov	w2, #0x563                 	// #1379
   41a78:	b	40c38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd9c>
   41a7c:	mov	w1, w27
   41a80:	mov	x0, x24
   41a84:	bl	40718 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x87c>
   41a88:	cbz	w0, 41aa4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c08>
   41a8c:	mov	w0, w27
   41a90:	bl	40980 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xae4>
   41a94:	mov	w19, w0
   41a98:	ldr	x0, [sp, #96]
   41a9c:	add	x15, x15, x0
   41aa0:	b	40a5c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xbc0>
   41aa4:	tbnz	w23, #31, 41ab8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c1c>
   41aa8:	sbfiz	x7, x23, #5, #32
   41aac:	add	x0, sp, #0xa8
   41ab0:	mov	w1, #0xffffffff            	// #-1
   41ab4:	str	w1, [x0, x7]
   41ab8:	cmp	w13, #0x0
   41abc:	b.ge	41ad4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c38>  // b.tcont
   41ac0:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   41ac4:	add	x3, x3, #0xba4
   41ac8:	add	x3, x3, #0x400
   41acc:	mov	w2, #0x56c                 	// #1388
   41ad0:	b	40c38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd9c>
   41ad4:	b.eq	41af8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c5c>  // b.none
   41ad8:	sub	w13, w13, #0x1
   41adc:	add	x1, sp, #0xa8
   41ae0:	sbfiz	x0, x13, #5, #32
   41ae4:	ldr	w19, [x1, x0]
   41ae8:	ldr	x15, [x20, x0]
   41aec:	ldr	x14, [x26, x0]
   41af0:	ldr	x18, [x25, x0]
   41af4:	b	40ed8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x103c>
   41af8:	ldp	x29, x30, [sp]
   41afc:	ldp	x19, x20, [sp, #16]
   41b00:	ldp	x21, x22, [sp, #32]
   41b04:	ldp	x23, x24, [sp, #48]
   41b08:	ldp	x25, x26, [sp, #64]
   41b0c:	ldp	x27, x28, [sp, #80]
   41b10:	add	sp, sp, #0x890
   41b14:	ret
   41b18:	sub	sp, sp, #0x450
   41b1c:	mov	x18, x0
   41b20:	mov	x8, x1
   41b24:	mov	x9, x2
   41b28:	mov	x7, x3
   41b2c:	mov	x12, x4
   41b30:	stp	x29, x30, [sp]
   41b34:	mov	x29, sp
   41b38:	mov	x14, x5
   41b3c:	sxtw	x6, w6
   41b40:	stp	x19, x20, [sp, #16]
   41b44:	add	x19, sp, #0x50
   41b48:	add	x20, sp, #0x58
   41b4c:	stp	x21, x22, [sp, #32]
   41b50:	add	x21, sp, #0x60
   41b54:	add	x22, sp, #0x68
   41b58:	mov	w13, #0x0                   	// #0
   41b5c:	mov	w15, #0x0                   	// #0
   41b60:	stp	x23, x24, [sp, #48]
   41b64:	stp	x25, x26, [sp, #64]
   41b68:	sub	x1, x12, x7
   41b6c:	asr	x3, x1, #2
   41b70:	cmp	x6, x1, asr #2
   41b74:	b.lt	41ed8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x203c>  // b.tstop
   41b78:	cmp	x7, x9
   41b7c:	ccmp	x12, x7, #0x0, hi  // hi = pmore
   41b80:	b.ls	41d00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1e64>  // b.plast
   41b84:	sub	x11, x1, #0x4
   41b88:	mov	x1, x7
   41b8c:	add	x10, x14, x11
   41b90:	mov	w2, w3
   41b94:	mov	x0, x14
   41b98:	bl	40628 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x78c>
   41b9c:	ldr	w1, [x14, x11]
   41ba0:	tbz	w1, #31, 41c2c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1d90>
   41ba4:	mvn	w1, w1
   41ba8:	mov	w24, #0x1                   	// #1
   41bac:	add	x25, x8, w1, sxtw #2
   41bb0:	ldur	w11, [x7, #-4]
   41bb4:	tbz	w11, #31, 41c38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1d9c>
   41bb8:	mvn	w11, w11
   41bbc:	orr	w24, w24, #0x2
   41bc0:	add	x11, x8, w11, sxtw #2
   41bc4:	ldur	w23, [x12, #-4]
   41bc8:	sub	x26, x12, #0x4
   41bcc:	sub	x7, x7, #0x4
   41bd0:	mov	x2, x11
   41bd4:	mov	x1, x25
   41bd8:	mov	x0, x18
   41bdc:	mov	w3, #0x2                   	// #2
   41be0:	bl	40440 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5a4>
   41be4:	cmp	w0, #0x0
   41be8:	b.le	41c70 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1dd4>
   41bec:	tbz	w24, #0, 41c0c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1d70>
   41bf0:	ldr	w0, [x10]
   41bf4:	str	w0, [x26], #-4
   41bf8:	ldr	w0, [x26]
   41bfc:	str	w0, [x10], #-4
   41c00:	ldr	w0, [x10]
   41c04:	tbnz	w0, #31, 41bf0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1d54>
   41c08:	eor	w24, w24, #0x1
   41c0c:	mov	x3, x26
   41c10:	ldr	w1, [x10]
   41c14:	mov	x0, x10
   41c18:	cmp	x14, x10
   41c1c:	str	w1, [x3], #-4
   41c20:	b.cc	41c40 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1da4>  // b.lo, b.ul, b.last
   41c24:	str	w23, [x14]
   41c28:	b	41d00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1e64>
   41c2c:	add	x25, x8, w1, sxtw #2
   41c30:	mov	w24, #0x0                   	// #0
   41c34:	b	41bb0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1d14>
   41c38:	add	x11, x8, w11, sxtw #2
   41c3c:	b	41bc4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1d28>
   41c40:	ldur	w1, [x26, #-4]
   41c44:	sub	x10, x10, #0x4
   41c48:	str	w1, [x0]
   41c4c:	ldur	w1, [x0, #-4]
   41c50:	tbz	w1, #31, 41c68 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1dcc>
   41c54:	mvn	w1, w1
   41c58:	orr	w24, w24, #0x1
   41c5c:	add	x25, x8, w1, sxtw #2
   41c60:	mov	x26, x3
   41c64:	b	41bd0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1d34>
   41c68:	add	x25, x8, w1, sxtw #2
   41c6c:	b	41c60 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1dc4>
   41c70:	b.eq	41dc4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1f28>  // b.none
   41c74:	tbz	w24, #1, 41c94 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1df8>
   41c78:	ldr	w0, [x7]
   41c7c:	str	w0, [x26], #-4
   41c80:	ldr	w0, [x26]
   41c84:	str	w0, [x7], #-4
   41c88:	ldr	w0, [x7]
   41c8c:	tbnz	w0, #31, 41c78 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1ddc>
   41c90:	eor	w24, w24, #0x2
   41c94:	mov	x3, x26
   41c98:	mov	x0, x7
   41c9c:	ldr	w1, [x7], #-4
   41ca0:	str	w1, [x3], #-4
   41ca4:	cmp	x9, x7
   41ca8:	ldur	w1, [x26, #-4]
   41cac:	str	w1, [x0]
   41cb0:	b.ls	41da4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1f08>  // b.plast
   41cb4:	mov	x0, x10
   41cb8:	mov	x1, x3
   41cbc:	b	41ccc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1e30>
   41cc0:	str	w2, [x1], #-4
   41cc4:	ldr	w2, [x1]
   41cc8:	str	w2, [x0], #-4
   41ccc:	ldr	w2, [x0]
   41cd0:	cmp	x14, x0
   41cd4:	b.cc	41cc0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1e24>  // b.lo, b.ul, b.last
   41cd8:	sub	x0, x10, x14
   41cdc:	mov	x1, #0xfffffffffffffffc    	// #-4
   41ce0:	add	x0, x0, #0x3
   41ce4:	lsr	x0, x0, #2
   41ce8:	mul	x0, x0, x1
   41cec:	add	x1, x10, #0x3
   41cf0:	cmp	x14, x1
   41cf4:	csel	x0, x0, xzr, ls  // ls = plast
   41cf8:	str	w2, [x3, x0]
   41cfc:	str	w23, [x10, x0]
   41d00:	tbnz	w13, #0, 41d3c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1ea0>
   41d04:	tbz	w13, #1, 41d48 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1eac>
   41d08:	ldur	w0, [x9, #-4]
   41d0c:	mov	w3, #0x2                   	// #2
   41d10:	mvn	w1, w0
   41d14:	cmp	w0, #0x0
   41d18:	sbfiz	x2, x0, #2, #32
   41d1c:	mov	x0, x18
   41d20:	sbfiz	x1, x1, #2, #32
   41d24:	csel	x1, x1, x2, lt  // lt = tstop
   41d28:	ldrsw	x2, [x9]
   41d2c:	add	x1, x8, x1
   41d30:	add	x2, x8, x2, lsl #2
   41d34:	bl	40440 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5a4>
   41d38:	cbnz	w0, 41d48 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1eac>
   41d3c:	ldr	w0, [x9]
   41d40:	mvn	w0, w0
   41d44:	str	w0, [x9]
   41d48:	tbz	w13, #2, 41d84 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1ee8>
   41d4c:	ldp	w0, w7, [x12, #-4]
   41d50:	mov	w3, #0x2                   	// #2
   41d54:	mvn	w1, w0
   41d58:	cmp	w0, #0x0
   41d5c:	sbfiz	x2, x0, #2, #32
   41d60:	mov	x0, x18
   41d64:	sbfiz	x1, x1, #2, #32
   41d68:	csel	x1, x1, x2, lt  // lt = tstop
   41d6c:	add	x2, x8, w7, sxtw #2
   41d70:	add	x1, x8, x1
   41d74:	bl	40440 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5a4>
   41d78:	cbnz	w0, 41d84 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1ee8>
   41d7c:	mvn	w7, w7
   41d80:	str	w7, [x12]
   41d84:	cbnz	w15, 42294 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x23f8>
   41d88:	ldp	x29, x30, [sp]
   41d8c:	ldp	x19, x20, [sp, #16]
   41d90:	ldp	x21, x22, [sp, #32]
   41d94:	ldp	x23, x24, [sp, #48]
   41d98:	ldp	x25, x26, [sp, #64]
   41d9c:	add	sp, sp, #0x450
   41da0:	ret
   41da4:	ldur	w11, [x0, #-4]
   41da8:	tbz	w11, #31, 41dbc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1f20>
   41dac:	mvn	w11, w11
   41db0:	orr	w24, w24, #0x2
   41db4:	add	x11, x8, w11, sxtw #2
   41db8:	b	41c60 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1dc4>
   41dbc:	add	x11, x8, w11, sxtw #2
   41dc0:	b	41c60 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1dc4>
   41dc4:	tbz	w24, #0, 41de4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1f48>
   41dc8:	ldr	w0, [x10]
   41dcc:	str	w0, [x26], #-4
   41dd0:	ldr	w0, [x26]
   41dd4:	str	w0, [x10], #-4
   41dd8:	ldr	w0, [x10]
   41ddc:	tbnz	w0, #31, 41dc8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1f2c>
   41de0:	eor	w24, w24, #0x1
   41de4:	mov	x0, x26
   41de8:	ldr	w1, [x10]
   41dec:	cmp	x14, x10
   41df0:	mvn	w1, w1
   41df4:	str	w1, [x0], #-4
   41df8:	b.cs	41c24 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1d88>  // b.hs, b.nlast
   41dfc:	mov	x2, x10
   41e00:	ldur	w1, [x26, #-4]
   41e04:	str	w1, [x2], #-4
   41e08:	tbz	w24, #1, 41e28 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1f8c>
   41e0c:	ldr	w1, [x7]
   41e10:	str	w1, [x0], #-4
   41e14:	ldr	w1, [x0]
   41e18:	str	w1, [x7], #-4
   41e1c:	ldr	w1, [x7]
   41e20:	tbnz	w1, #31, 41e0c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1f70>
   41e24:	eor	w24, w24, #0x2
   41e28:	mov	x3, x0
   41e2c:	mov	x4, x7
   41e30:	ldr	w1, [x7], #-4
   41e34:	str	w1, [x3], #-4
   41e38:	cmp	x9, x7
   41e3c:	ldur	w0, [x0, #-4]
   41e40:	str	w0, [x4]
   41e44:	b.ls	41e98 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1ffc>  // b.plast
   41e48:	mov	x0, x2
   41e4c:	mov	x1, x3
   41e50:	b	41e60 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1fc4>
   41e54:	str	w4, [x1], #-4
   41e58:	ldr	w4, [x1]
   41e5c:	str	w4, [x0], #-4
   41e60:	ldr	w4, [x0]
   41e64:	cmp	x14, x0
   41e68:	b.cc	41e54 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1fb8>  // b.lo, b.ul, b.last
   41e6c:	sub	x0, x2, x14
   41e70:	mov	x1, #0xfffffffffffffffc    	// #-4
   41e74:	add	x0, x0, #0x3
   41e78:	lsr	x0, x0, #2
   41e7c:	mul	x0, x0, x1
   41e80:	add	x1, x2, #0x3
   41e84:	cmp	x14, x1
   41e88:	csel	x0, x0, xzr, ls  // ls = plast
   41e8c:	str	w4, [x3, x0]
   41e90:	str	w23, [x2, x0]
   41e94:	b	41d00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1e64>
   41e98:	ldur	w1, [x10, #-4]
   41e9c:	tbz	w1, #31, 41ec8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x202c>
   41ea0:	mvn	w1, w1
   41ea4:	orr	w24, w24, #0x1
   41ea8:	add	x25, x8, w1, sxtw #2
   41eac:	ldur	w11, [x4, #-4]
   41eb0:	tbz	w11, #31, 41ed0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2034>
   41eb4:	mvn	w11, w11
   41eb8:	orr	w24, w24, #0x2
   41ebc:	add	x11, x8, w11, sxtw #2
   41ec0:	mov	x10, x2
   41ec4:	b	41c60 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1dc4>
   41ec8:	add	x25, x8, w1, sxtw #2
   41ecc:	b	41eac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2010>
   41ed0:	add	x11, x8, w11, sxtw #2
   41ed4:	b	41ec0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2024>
   41ed8:	sub	x0, x7, x9
   41edc:	asr	x2, x0, #2
   41ee0:	cmp	x6, x0, asr #2
   41ee4:	b.lt	42044 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x21a8>  // b.tstop
   41ee8:	cmp	x7, x9
   41eec:	b.ls	41d00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1e64>  // b.plast
   41ef0:	sub	x23, x0, #0x4
   41ef4:	mov	x1, x9
   41ef8:	add	x24, x14, x23
   41efc:	mov	x0, x14
   41f00:	bl	40628 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x78c>
   41f04:	ldr	w25, [x9]
   41f08:	mov	x10, x14
   41f0c:	mov	x11, x9
   41f10:	ldrsw	x1, [x10]
   41f14:	mov	x0, x18
   41f18:	ldr	w26, [x7]
   41f1c:	mov	w3, #0x2                   	// #2
   41f20:	add	x1, x8, x1, lsl #2
   41f24:	add	x2, x8, w26, sxtw #2
   41f28:	bl	40440 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5a4>
   41f2c:	cmp	w0, #0x0
   41f30:	b.ge	41f60 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x20c4>  // b.tcont
   41f34:	ldr	w0, [x10]
   41f38:	cmp	x24, x10
   41f3c:	str	w0, [x11], #4
   41f40:	b.hi	41f4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x20b0>  // b.pmore
   41f44:	str	w25, [x14, x23]
   41f48:	b	41d00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1e64>
   41f4c:	ldr	w0, [x11]
   41f50:	str	w0, [x10], #4
   41f54:	ldr	w0, [x10]
   41f58:	tbnz	w0, #31, 41f34 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2098>
   41f5c:	b	41f10 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2074>
   41f60:	b.eq	41fd0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2134>  // b.none
   41f64:	ldr	w0, [x7]
   41f68:	str	w0, [x11], #4
   41f6c:	ldr	w0, [x11]
   41f70:	str	w0, [x7], #4
   41f74:	cmp	x12, x7
   41f78:	b.hi	41fc4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2128>  // b.pmore
   41f7c:	mov	x0, x10
   41f80:	mov	x1, x11
   41f84:	b	41f94 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x20f8>
   41f88:	str	w2, [x1], #4
   41f8c:	ldr	w2, [x1]
   41f90:	str	w2, [x0], #4
   41f94:	ldr	w2, [x0]
   41f98:	cmp	x24, x0
   41f9c:	b.hi	41f88 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x20ec>  // b.pmore
   41fa0:	add	x0, x24, #0x3
   41fa4:	sub	x1, x10, #0x3
   41fa8:	sub	x0, x0, x10
   41fac:	cmp	x1, x24
   41fb0:	and	x0, x0, #0xfffffffffffffffc
   41fb4:	csel	x0, x0, xzr, ls  // ls = plast
   41fb8:	str	w2, [x11, x0]
   41fbc:	str	w25, [x10, x0]
   41fc0:	b	41d00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1e64>
   41fc4:	ldr	w0, [x7]
   41fc8:	tbnz	w0, #31, 41f64 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x20c8>
   41fcc:	b	41f10 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2074>
   41fd0:	mvn	w26, w26
   41fd4:	str	w26, [x7]
   41fd8:	ldr	w0, [x10]
   41fdc:	cmp	x24, x10
   41fe0:	str	w0, [x11], #4
   41fe4:	b.ls	41f44 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x20a8>  // b.plast
   41fe8:	ldr	w0, [x11]
   41fec:	str	w0, [x10], #4
   41ff0:	ldr	w0, [x10]
   41ff4:	tbnz	w0, #31, 41fd8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x213c>
   41ff8:	ldr	w0, [x7]
   41ffc:	str	w0, [x11], #4
   42000:	ldr	w0, [x11]
   42004:	str	w0, [x7], #4
   42008:	cmp	x12, x7
   4200c:	b.hi	42038 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x219c>  // b.pmore
   42010:	mov	x0, x10
   42014:	mov	x1, x11
   42018:	b	42028 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x218c>
   4201c:	str	w2, [x1], #4
   42020:	ldr	w2, [x1]
   42024:	str	w2, [x0], #4
   42028:	ldr	w2, [x0]
   4202c:	cmp	x24, x0
   42030:	b.hi	4201c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2180>  // b.pmore
   42034:	b	41fa0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2104>
   42038:	ldr	w0, [x7]
   4203c:	tbnz	w0, #31, 41ff8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x215c>
   42040:	b	41f10 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2074>
   42044:	cmp	x1, x0
   42048:	mov	w11, #0x0                   	// #0
   4204c:	csel	w10, w3, w2, le
   42050:	mov	x24, #0xfffffffffffffffc    	// #-4
   42054:	asr	w23, w10, #1
   42058:	cmp	w10, #0x0
   4205c:	b.gt	42104 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2268>
   42060:	cmp	w11, #0x0
   42064:	b.le	42258 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x23bc>
   42068:	add	x10, x7, w11, sxtw #2
   4206c:	sbfiz	x23, x11, #2, #32
   42070:	sub	x0, x7, w11, sxtw #2
   42074:	mov	w2, w11
   42078:	mov	x1, x7
   4207c:	bl	40628 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x78c>
   42080:	cmp	x12, x10
   42084:	b.ls	421b4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2318>  // b.plast
   42088:	ldr	w1, [x7, x23]
   4208c:	tbz	w1, #31, 42184 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x22e8>
   42090:	mvn	w1, w1
   42094:	str	w1, [x10]
   42098:	mov	x3, x7
   4209c:	cmp	x9, x0
   420a0:	b.cs	4217c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x22e0>  // b.hs, b.nlast
   420a4:	ldr	w1, [x3, #-4]!
   420a8:	tbnz	w1, #31, 420a4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2208>
   420ac:	mov	w1, #0x4                   	// #4
   420b0:	orr	w1, w1, #0x1
   420b4:	mov	x2, x7
   420b8:	sub	x4, x3, x9
   420bc:	sub	x5, x12, x2
   420c0:	cmp	x4, x5
   420c4:	and	w11, w13, #0x4
   420c8:	sxtw	x4, w15
   420cc:	add	w5, w15, #0x1
   420d0:	and	w13, w13, #0x3
   420d4:	b.gt	421f8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x235c>
   420d8:	cmp	w15, #0x1f
   420dc:	b.le	421bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2320>
   420e0:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   420e4:	add	x3, x3, #0xba4
   420e8:	add	x3, x3, #0x40d
   420ec:	mov	w2, #0x32a                 	// #810
   420f0:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   420f4:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   420f8:	add	x1, x1, #0xad8
   420fc:	add	x0, x0, #0xaf1
   42100:	bl	4a90 <__assert_fail@plt>
   42104:	sxtw	x0, w23
   42108:	add	x0, x0, w11, sxtw
   4210c:	lsl	x0, x0, #2
   42110:	ldr	w2, [x7, x0]
   42114:	sub	x0, x24, x0
   42118:	mvn	w1, w2
   4211c:	cmp	w2, #0x0
   42120:	ldr	w0, [x7, x0]
   42124:	sbfiz	x3, x2, #2, #32
   42128:	sbfiz	x1, x1, #2, #32
   4212c:	mvn	w2, w0
   42130:	csel	x1, x1, x3, lt  // lt = tstop
   42134:	cmp	w0, #0x0
   42138:	sbfiz	x3, x0, #2, #32
   4213c:	sbfiz	x2, x2, #2, #32
   42140:	add	x1, x8, x1
   42144:	csel	x2, x2, x3, lt  // lt = tstop
   42148:	mov	x0, x18
   4214c:	add	x2, x8, x2
   42150:	mov	w3, #0x2                   	// #2
   42154:	bl	40440 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5a4>
   42158:	tbz	w0, #31, 42170 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x22d4>
   4215c:	mvn	w10, w10
   42160:	add	w0, w23, #0x1
   42164:	and	w10, w10, #0x1
   42168:	add	w11, w11, w0
   4216c:	sub	w23, w23, w10
   42170:	mov	w10, w23
   42174:	asr	w23, w23, #1
   42178:	b	42058 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x21bc>
   4217c:	mov	w1, #0x0                   	// #0
   42180:	b	420b0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2214>
   42184:	mov	x2, x7
   42188:	cmp	x9, x0
   4218c:	b.cc	421a0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2304>  // b.lo, b.ul, b.last
   42190:	mov	x3, x7
   42194:	mov	w1, #0x0                   	// #0
   42198:	b	420b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x221c>
   4219c:	add	x2, x2, #0x4
   421a0:	ldr	w1, [x2]
   421a4:	tbnz	w1, #31, 4219c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2300>
   421a8:	mov	x3, x7
   421ac:	mov	w1, #0x2                   	// #2
   421b0:	b	420b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x221c>
   421b4:	mov	x2, x7
   421b8:	b	42190 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x22f4>
   421bc:	lsl	x4, x4, #5
   421c0:	mov	w15, w5
   421c4:	str	x2, [x19, x4]
   421c8:	and	w2, w1, #0x3
   421cc:	orr	w2, w2, w11
   421d0:	and	w1, w1, #0x4
   421d4:	orr	w13, w1, w13
   421d8:	str	w2, [x22, x4]
   421dc:	mov	x2, x9
   421e0:	str	x10, [x20, x4]
   421e4:	str	x12, [x21, x4]
   421e8:	mov	x12, x3
   421ec:	mov	x7, x0
   421f0:	mov	x9, x2
   421f4:	b	41b68 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1ccc>
   421f8:	tbz	w1, #1, 42208 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x236c>
   421fc:	cmp	x7, x2
   42200:	b.ne	42208 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x236c>  // b.any
   42204:	eor	w1, w1, #0x6
   42208:	cmp	w15, #0x1f
   4220c:	b.le	42224 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2388>
   42210:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   42214:	add	x3, x3, #0xba4
   42218:	add	x3, x3, #0x40d
   4221c:	mov	w2, #0x32e                 	// #814
   42220:	b	420f0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2254>
   42224:	lsl	x4, x4, #5
   42228:	mov	w15, w5
   4222c:	str	x0, [x20, x4]
   42230:	and	w0, w1, #0x4
   42234:	orr	w13, w13, w0
   42238:	str	w13, [x22, x4]
   4223c:	and	w13, w1, #0x3
   42240:	mov	x0, x10
   42244:	orr	w13, w13, w11
   42248:	str	x3, [x21, x4]
   4224c:	mov	x3, x12
   42250:	str	x9, [x19, x4]
   42254:	b	421e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x234c>
   42258:	ldp	w0, w10, [x7, #-4]
   4225c:	mov	w3, #0x2                   	// #2
   42260:	mvn	w1, w0
   42264:	cmp	w0, #0x0
   42268:	sbfiz	x2, x0, #2, #32
   4226c:	mov	x0, x18
   42270:	sbfiz	x1, x1, #2, #32
   42274:	csel	x1, x1, x2, lt  // lt = tstop
   42278:	add	x2, x8, w10, sxtw #2
   4227c:	add	x1, x8, x1
   42280:	bl	40440 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5a4>
   42284:	cbnz	w0, 41d00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1e64>
   42288:	mvn	w10, w10
   4228c:	str	w10, [x7]
   42290:	b	41d00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1e64>
   42294:	sub	w15, w15, #0x1
   42298:	sbfiz	x1, x15, #5, #32
   4229c:	ldr	w13, [x22, x1]
   422a0:	ldr	x2, [x19, x1]
   422a4:	ldr	x0, [x20, x1]
   422a8:	ldr	x3, [x21, x1]
   422ac:	b	421e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x234c>
   422b0:	stp	x29, x30, [sp, #-480]!
   422b4:	mov	x12, x1
   422b8:	mov	x11, x2
   422bc:	mov	x29, sp
   422c0:	stp	x21, x22, [sp, #32]
   422c4:	mov	x21, x0
   422c8:	sub	x0, x3, x2
   422cc:	stp	x19, x20, [sp, #16]
   422d0:	add	x19, sp, #0x70
   422d4:	ubfx	x0, x0, #2, #32
   422d8:	stp	x23, x24, [sp, #48]
   422dc:	mov	x23, x3
   422e0:	add	x20, sp, #0x74
   422e4:	stp	x25, x26, [sp, #64]
   422e8:	mov	w24, #0x0                   	// #0
   422ec:	str	x27, [sp, #80]
   422f0:	bl	40954 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xab8>
   422f4:	mov	w14, #0x2                   	// #2
   422f8:	mov	w10, w0
   422fc:	mov	w22, w14
   42300:	add	x15, sp, #0x60
   42304:	add	x18, sp, #0x68
   42308:	sub	x3, x23, x11
   4230c:	cmp	x3, #0x20
   42310:	b.gt	423d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2534>
   42314:	cmp	x3, #0x4
   42318:	b.le	42328 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x248c>
   4231c:	sub	x7, x23, #0x8
   42320:	cmp	x11, x7
   42324:	b.ls	42348 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x24ac>  // b.plast
   42328:	cbnz	w24, 423ac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2510>
   4232c:	ldp	x19, x20, [sp, #16]
   42330:	ldp	x21, x22, [sp, #32]
   42334:	ldp	x23, x24, [sp, #48]
   42338:	ldp	x25, x26, [sp, #64]
   4233c:	ldr	x27, [sp, #80]
   42340:	ldp	x29, x30, [sp], #480
   42344:	ret
   42348:	mov	x6, x7
   4234c:	ldr	w9, [x6], #4
   42350:	add	x10, x12, w9, sxtw #2
   42354:	ldr	w8, [x6]
   42358:	mov	w3, w14
   4235c:	mov	x1, x10
   42360:	mov	x0, x21
   42364:	add	x2, x12, w8, sxtw #2
   42368:	bl	40440 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5a4>
   4236c:	cmp	w0, #0x0
   42370:	b.gt	4238c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x24f0>
   42374:	b.ne	42380 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x24e4>  // b.any
   42378:	mvn	w8, w8
   4237c:	str	w8, [x6]
   42380:	sub	x7, x7, #0x4
   42384:	stur	w9, [x6, #-4]
   42388:	b	42320 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2484>
   4238c:	ldr	w0, [x6]
   42390:	add	x6, x6, #0x4
   42394:	stur	w0, [x6, #-8]
   42398:	cmp	x23, x6
   4239c:	b.ls	42380 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x24e4>  // b.plast
   423a0:	ldr	w0, [x6]
   423a4:	tbnz	w0, #31, 4238c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x24f0>
   423a8:	b	42354 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x24b8>
   423ac:	sub	w24, w24, #0x1
   423b0:	mov	x1, #0x18                  	// #24
   423b4:	sxtw	x0, w24
   423b8:	mul	x0, x0, x1
   423bc:	ldr	w14, [x19, x0]
   423c0:	ldr	w9, [x20, x0]
   423c4:	ldr	x8, [x15, x0]
   423c8:	ldr	x23, [x18, x0]
   423cc:	b	42648 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x27ac>
   423d0:	add	x13, x21, w14, sxtw
   423d4:	cbnz	w10, 4253c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x26a0>
   423d8:	asr	x3, x3, #2
   423dc:	mov	w4, w3
   423e0:	and	w26, w3, #0x1
   423e4:	tbnz	w3, #0, 42420 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2584>
   423e8:	sub	w4, w3, #0x1
   423ec:	sbfiz	x2, x4, #2, #32
   423f0:	sdiv	w0, w4, w22
   423f4:	ldr	w1, [x11, x2]
   423f8:	sbfiz	x0, x0, #2, #32
   423fc:	ldrsw	x5, [x12, w1, sxtw #2]
   42400:	ldr	w3, [x11, x0]
   42404:	ldrb	w5, [x13, x5]
   42408:	ldrsw	x6, [x12, w3, sxtw #2]
   4240c:	ldrb	w6, [x13, x6]
   42410:	cmp	w6, w5
   42414:	b.cs	42420 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2584>  // b.hs, b.nlast
   42418:	str	w3, [x11, x2]
   4241c:	str	w1, [x11, x0]
   42420:	sdiv	w25, w4, w22
   42424:	sub	w25, w25, #0x1
   42428:	tbz	w25, #31, 424f8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x265c>
   4242c:	cbnz	w26, 42458 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x25bc>
   42430:	sbfiz	x0, x4, #2, #32
   42434:	ldr	w1, [x11]
   42438:	mov	w3, #0x0                   	// #0
   4243c:	ldr	w2, [x11, x0]
   42440:	str	w2, [x11]
   42444:	mov	x2, x11
   42448:	str	w1, [x11, x0]
   4244c:	mov	x1, x12
   42450:	mov	x0, x13
   42454:	bl	404b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x61c>
   42458:	sub	w4, w4, #0x1
   4245c:	sxtw	x25, w4
   42460:	ldr	w26, [x11]
   42464:	cmp	w25, #0x0
   42468:	b.gt	42510 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2674>
   4246c:	mov	x8, x11
   42470:	ldrsw	x0, [x8], #4
   42474:	ldrsw	x0, [x12, x0, lsl #2]
   42478:	ldrb	w0, [x13, x0]
   4247c:	cmp	x23, x8
   42480:	b.hi	42584 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x26e8>  // b.pmore
   42484:	ldrsw	x1, [x11]
   42488:	ldrsw	x1, [x12, x1, lsl #2]
   4248c:	add	x13, x13, x1
   42490:	ldurb	w1, [x13, #-1]
   42494:	cmp	w0, w1
   42498:	b.le	424b4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2618>
   4249c:	mov	x1, x11
   424a0:	mov	w3, w14
   424a4:	mov	x2, x8
   424a8:	mov	x0, x12
   424ac:	bl	4059c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x700>
   424b0:	mov	x11, x0
   424b4:	sub	x0, x8, x11
   424b8:	sub	x1, x23, x8
   424bc:	cmp	x0, x1
   424c0:	b.gt	425f4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2758>
   424c4:	cmp	x0, #0x4
   424c8:	b.le	42644 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x27a8>
   424cc:	cmp	w24, #0xf
   424d0:	b.le	425b4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2718>
   424d4:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   424d8:	add	x3, x3, #0xba4
   424dc:	add	x3, x3, #0x41a
   424e0:	mov	w2, #0x1b5                 	// #437
   424e4:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   424e8:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   424ec:	add	x1, x1, #0xad8
   424f0:	add	x0, x0, #0xaf1
   424f4:	bl	4a90 <__assert_fail@plt>
   424f8:	mov	w3, w25
   424fc:	mov	x2, x11
   42500:	mov	x1, x12
   42504:	mov	x0, x13
   42508:	bl	404b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x61c>
   4250c:	b	42424 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2588>
   42510:	ldr	w0, [x11, x25, lsl #2]
   42514:	mov	w4, w25
   42518:	str	w0, [x11]
   4251c:	mov	x2, x11
   42520:	mov	x1, x12
   42524:	mov	x0, x13
   42528:	mov	w3, #0x0                   	// #0
   4252c:	bl	404b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x61c>
   42530:	str	w26, [x11, x25, lsl #2]
   42534:	sub	x25, x25, #0x1
   42538:	b	42460 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x25c4>
   4253c:	subs	w9, w10, #0x1
   42540:	b.mi	4246c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x25d0>  // b.first
   42544:	asr	x3, x3, #2
   42548:	sub	x8, x23, #0x4
   4254c:	cmp	w3, #0x200
   42550:	sdiv	w7, w3, w22
   42554:	add	x7, x11, w7, sxtw #2
   42558:	b.gt	42850 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x29b4>
   4255c:	cmp	w3, #0x20
   42560:	b.gt	4265c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x27c0>
   42564:	mov	x4, x8
   42568:	mov	x3, x7
   4256c:	mov	x2, x11
   42570:	mov	x1, x12
   42574:	mov	x0, x13
   42578:	bl	40528 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x68c>
   4257c:	mov	x7, x0
   42580:	b	42764 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x28c8>
   42584:	ldrsw	x1, [x8]
   42588:	ldrsw	x1, [x12, x1, lsl #2]
   4258c:	ldrb	w1, [x13, x1]
   42590:	cmp	w1, w0
   42594:	b.eq	425ac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2710>  // b.none
   42598:	sub	x2, x8, x11
   4259c:	cmp	x2, #0x4
   425a0:	b.gt	42484 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x25e8>
   425a4:	mov	w0, w1
   425a8:	mov	x11, x8
   425ac:	add	x8, x8, #0x4
   425b0:	b	4247c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x25e0>
   425b4:	sxtw	x1, w24
   425b8:	mov	x2, #0x18                  	// #24
   425bc:	add	w24, w24, #0x1
   425c0:	ubfx	x0, x0, #2, #32
   425c4:	mul	x1, x1, x2
   425c8:	mov	w2, #0xffffffff            	// #-1
   425cc:	str	w14, [x19, x1]
   425d0:	add	w14, w14, #0x1
   425d4:	str	x8, [x15, x1]
   425d8:	str	x23, [x18, x1]
   425dc:	str	w2, [x20, x1]
   425e0:	bl	40954 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xab8>
   425e4:	mov	w9, w0
   425e8:	mov	x23, x8
   425ec:	mov	x8, x11
   425f0:	b	42648 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x27ac>
   425f4:	cmp	x1, #0x4
   425f8:	asr	x0, x0, #2
   425fc:	add	w1, w14, #0x1
   42600:	b.le	42654 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x27b8>
   42604:	cmp	w24, #0xf
   42608:	b.le	42620 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2784>
   4260c:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   42610:	add	x3, x3, #0xba4
   42614:	add	x3, x3, #0x41a
   42618:	mov	w2, #0x1bc                 	// #444
   4261c:	b	424e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2648>
   42620:	sxtw	x2, w24
   42624:	mov	x3, #0x18                  	// #24
   42628:	add	w24, w24, #0x1
   4262c:	mul	x2, x2, x3
   42630:	str	x11, [x15, x2]
   42634:	str	x8, [x18, x2]
   42638:	str	w1, [x19, x2]
   4263c:	bl	40954 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xab8>
   42640:	str	w0, [x20, x2]
   42644:	mov	w9, #0xffffffff            	// #-1
   42648:	mov	w10, w9
   4264c:	mov	x11, x8
   42650:	b	42308 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x246c>
   42654:	mov	w14, w1
   42658:	b	425e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2744>
   4265c:	asr	w3, w3, #2
   42660:	mov	x0, #0xfffffffffffffffc    	// #-4
   42664:	sub	x0, x0, w3, sxtw #2
   42668:	add	x1, x11, w3, sxtw #2
   4266c:	ldrsw	x2, [x11, w3, sxtw #2]
   42670:	add	x0, x23, x0
   42674:	ldrsw	x3, [x12, x2, lsl #2]
   42678:	ldrsw	x2, [x7]
   4267c:	ldrb	w3, [x13, x3]
   42680:	ldrsw	x2, [x12, x2, lsl #2]
   42684:	ldrb	w2, [x13, x2]
   42688:	cmp	w3, w2
   4268c:	b.ls	4269c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2800>  // b.plast
   42690:	mov	x2, x1
   42694:	mov	x1, x7
   42698:	mov	x7, x2
   4269c:	ldrsw	x2, [x0]
   426a0:	ldrsw	x3, [x12, x2, lsl #2]
   426a4:	ldursw	x2, [x23, #-4]
   426a8:	ldrb	w3, [x13, x3]
   426ac:	ldrsw	x2, [x12, x2, lsl #2]
   426b0:	ldrb	w2, [x13, x2]
   426b4:	cmp	w3, w2
   426b8:	b.ls	426c8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x282c>  // b.plast
   426bc:	mov	x2, x0
   426c0:	mov	x0, x8
   426c4:	mov	x8, x2
   426c8:	ldrsw	x2, [x1]
   426cc:	ldrsw	x3, [x12, x2, lsl #2]
   426d0:	ldrsw	x2, [x0]
   426d4:	ldrb	w3, [x13, x3]
   426d8:	ldrsw	x2, [x12, x2, lsl #2]
   426dc:	ldrb	w2, [x13, x2]
   426e0:	cmp	w3, w2
   426e4:	b.ls	426f8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x285c>  // b.plast
   426e8:	mov	x0, x1
   426ec:	mov	x1, x7
   426f0:	mov	x7, x8
   426f4:	mov	x8, x1
   426f8:	ldrsw	x1, [x11]
   426fc:	ldrsw	x2, [x12, x1, lsl #2]
   42700:	ldrsw	x1, [x7]
   42704:	ldrb	w2, [x13, x2]
   42708:	ldrsw	x1, [x12, x1, lsl #2]
   4270c:	ldrb	w1, [x13, x1]
   42710:	cmp	w2, w1
   42714:	b.ls	42848 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x29ac>  // b.plast
   42718:	mov	x1, x7
   4271c:	mov	x7, x11
   42720:	ldrsw	x2, [x1]
   42724:	ldrsw	x3, [x12, x2, lsl #2]
   42728:	ldrsw	x2, [x0]
   4272c:	ldrb	w3, [x13, x3]
   42730:	ldrsw	x2, [x12, x2, lsl #2]
   42734:	ldrb	w2, [x13, x2]
   42738:	cmp	w3, w2
   4273c:	csel	x7, x7, x8, ls  // ls = plast
   42740:	csel	x0, x0, x1, ls  // ls = plast
   42744:	ldrsw	x1, [x7]
   42748:	ldrsw	x2, [x12, x1, lsl #2]
   4274c:	ldrsw	x1, [x0]
   42750:	ldrb	w2, [x13, x2]
   42754:	ldrsw	x1, [x12, x1, lsl #2]
   42758:	ldrb	w1, [x13, x1]
   4275c:	cmp	w2, w1
   42760:	csel	x7, x7, x0, ls  // ls = plast
   42764:	ldr	w0, [x7]
   42768:	mov	x26, x11
   4276c:	ldrsw	x1, [x12, w0, sxtw #2]
   42770:	ldrb	w3, [x13, x1]
   42774:	ldr	w1, [x11]
   42778:	str	w0, [x11]
   4277c:	str	w1, [x7]
   42780:	add	x26, x26, #0x4
   42784:	cmp	x23, x26
   42788:	b.ls	42900 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a64>  // b.plast
   4278c:	ldrsw	x0, [x26]
   42790:	ldrsw	x0, [x12, x0, lsl #2]
   42794:	ldrb	w0, [x13, x0]
   42798:	cmp	w3, w0
   4279c:	b.eq	42780 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x28e4>  // b.none
   427a0:	mov	x2, x26
   427a4:	b.gt	428dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a40>
   427a8:	mov	x1, x23
   427ac:	sub	x1, x1, #0x4
   427b0:	cmp	x1, x2
   427b4:	b.ls	4293c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2aa0>  // b.plast
   427b8:	ldrsw	x0, [x1]
   427bc:	ldrsw	x0, [x12, x0, lsl #2]
   427c0:	ldrb	w0, [x13, x0]
   427c4:	cmp	w3, w0
   427c8:	b.eq	427ac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2910>  // b.none
   427cc:	mov	x4, x1
   427d0:	b.lt	4292c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a90>  // b.tstop
   427d4:	mov	x0, x1
   427d8:	mov	x1, x4
   427dc:	cmp	x2, x0
   427e0:	b.cs	4293c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2aa0>  // b.hs, b.nlast
   427e4:	ldr	w5, [x0]
   427e8:	ldr	w4, [x2]
   427ec:	str	w5, [x2]
   427f0:	str	w4, [x0]
   427f4:	add	x2, x2, #0x4
   427f8:	cmp	x0, x2
   427fc:	b.ls	42814 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2978>  // b.plast
   42800:	ldr	w4, [x2]
   42804:	ldrsw	x5, [x12, w4, sxtw #2]
   42808:	ldrb	w5, [x13, x5]
   4280c:	cmp	w3, w5
   42810:	b.ge	42a20 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2b84>  // b.tcont
   42814:	sub	x0, x0, #0x4
   42818:	cmp	x2, x0
   4281c:	b.cs	4293c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2aa0>  // b.hs, b.nlast
   42820:	ldr	w4, [x0]
   42824:	ldrsw	x5, [x12, w4, sxtw #2]
   42828:	ldrb	w5, [x13, x5]
   4282c:	cmp	w3, w5
   42830:	b.gt	427dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2940>
   42834:	b.ne	42814 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2978>  // b.any
   42838:	ldr	w5, [x1]
   4283c:	str	w5, [x0]
   42840:	str	w4, [x1], #-4
   42844:	b	42814 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2978>
   42848:	mov	x1, x11
   4284c:	b	42720 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2884>
   42850:	asr	w3, w3, #3
   42854:	mov	x2, x11
   42858:	mov	x1, x12
   4285c:	mov	x0, x13
   42860:	lsl	w4, w3, #1
   42864:	sbfiz	x25, x3, #2, #32
   42868:	add	x3, x11, w3, sxtw #2
   4286c:	sbfiz	x27, x4, #2, #32
   42870:	add	x4, x11, w4, sxtw #2
   42874:	bl	40528 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x68c>
   42878:	add	x4, x7, x25
   4287c:	mov	x3, x7
   42880:	sub	x2, x7, x25
   42884:	mov	x1, x12
   42888:	mov	x26, x0
   4288c:	mov	x0, x13
   42890:	bl	40528 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x68c>
   42894:	mov	x7, x0
   42898:	mov	x2, #0xfffffffffffffffc    	// #-4
   4289c:	sub	x3, x2, x25
   428a0:	sub	x2, x2, x27
   428a4:	mov	x4, x8
   428a8:	add	x3, x23, x3
   428ac:	add	x2, x23, x2
   428b0:	mov	x1, x12
   428b4:	mov	x0, x13
   428b8:	bl	40528 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x68c>
   428bc:	mov	x2, x26
   428c0:	mov	x4, x0
   428c4:	mov	x3, x7
   428c8:	b	42570 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x26d4>
   428cc:	b.ne	428dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a40>  // b.any
   428d0:	ldr	w1, [x26]
   428d4:	str	w1, [x2]
   428d8:	str	w0, [x26], #4
   428dc:	add	x2, x2, #0x4
   428e0:	cmp	x23, x2
   428e4:	b.ls	427a8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x290c>  // b.plast
   428e8:	ldr	w0, [x2]
   428ec:	ldrsw	x1, [x12, w0, sxtw #2]
   428f0:	ldrb	w1, [x13, x1]
   428f4:	cmp	w3, w1
   428f8:	b.ge	428cc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a30>  // b.tcont
   428fc:	b	427a8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x290c>
   42900:	mov	x2, x26
   42904:	b	427a8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x290c>
   42908:	ldr	w0, [x1]
   4290c:	ldrsw	x5, [x12, w0, sxtw #2]
   42910:	ldrb	w5, [x13, x5]
   42914:	cmp	w3, w5
   42918:	b.gt	427d4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2938>
   4291c:	b.ne	4292c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a90>  // b.any
   42920:	ldr	w5, [x4]
   42924:	str	w5, [x1]
   42928:	str	w0, [x4], #-4
   4292c:	sub	x1, x1, #0x4
   42930:	cmp	x2, x1
   42934:	b.cc	42908 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a6c>  // b.lo, b.ul, b.last
   42938:	mov	x1, x4
   4293c:	cmp	x26, x1
   42940:	b.hi	42d1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2e80>  // b.pmore
   42944:	sub	x4, x26, x11
   42948:	sub	x26, x2, x26
   4294c:	sub	x27, x2, #0x4
   42950:	asr	x0, x26, #2
   42954:	asr	x4, x4, #2
   42958:	cmp	w4, w0
   4295c:	csel	w4, w4, w0, lt  // lt = tstop
   42960:	mov	x0, #0x0                   	// #0
   42964:	sub	x5, x2, w4, sxtw #2
   42968:	sub	w6, w4, w0
   4296c:	cmp	w6, #0x0
   42970:	b.gt	42a34 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2b98>
   42974:	sub	x27, x1, x27
   42978:	sub	x1, x23, x1
   4297c:	asr	x1, x1, #2
   42980:	asr	x0, x27, #2
   42984:	sub	w1, w1, #0x1
   42988:	cmp	w1, w0
   4298c:	csel	w1, w1, w0, le
   42990:	mov	x0, #0x0                   	// #0
   42994:	sub	x4, x23, w1, sxtw #2
   42998:	sub	w5, w1, w0
   4299c:	cmp	w5, #0x0
   429a0:	b.gt	42a4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2bb0>
   429a4:	ldrsw	x0, [x11, x26]
   429a8:	add	x25, x11, x26
   429ac:	sub	x10, x23, x27
   429b0:	ldrsw	x0, [x12, x0, lsl #2]
   429b4:	add	x13, x13, x0
   429b8:	ldurb	w0, [x13, #-1]
   429bc:	cmp	w0, w3
   429c0:	b.cs	42a64 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2bc8>  // b.hs, b.nlast
   429c4:	mov	w3, w14
   429c8:	mov	x2, x10
   429cc:	mov	x1, x25
   429d0:	mov	x0, x12
   429d4:	bl	4059c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x700>
   429d8:	mov	x8, x0
   429dc:	sub	x3, x10, x8
   429e0:	cmp	x26, x27
   429e4:	sxtw	x5, w24
   429e8:	add	w4, w24, #0x1
   429ec:	add	w1, w14, #0x1
   429f0:	asr	x0, x3, #2
   429f4:	add	w2, w24, #0x2
   429f8:	b.gt	42bc0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2d24>
   429fc:	cmp	x27, x3
   42a00:	b.gt	42ac8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2c2c>
   42a04:	cmp	w24, #0xf
   42a08:	b.le	42a6c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2bd0>
   42a0c:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   42a10:	add	x3, x3, #0xba4
   42a14:	add	x3, x3, #0x41a
   42a18:	mov	w2, #0x1ee                 	// #494
   42a1c:	b	424e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2648>
   42a20:	b.ne	427f4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2958>  // b.any
   42a24:	ldr	w5, [x26]
   42a28:	str	w5, [x2]
   42a2c:	str	w4, [x26], #4
   42a30:	b	427f4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2958>
   42a34:	ldr	w7, [x5, x0, lsl #2]
   42a38:	ldr	w6, [x11, x0, lsl #2]
   42a3c:	str	w7, [x11, x0, lsl #2]
   42a40:	str	w6, [x5, x0, lsl #2]
   42a44:	add	x0, x0, #0x1
   42a48:	b	42968 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2acc>
   42a4c:	ldr	w6, [x4, x0, lsl #2]
   42a50:	ldr	w5, [x2, x0, lsl #2]
   42a54:	str	w6, [x2, x0, lsl #2]
   42a58:	str	w5, [x4, x0, lsl #2]
   42a5c:	add	x0, x0, #0x1
   42a60:	b	42998 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2afc>
   42a64:	mov	x8, x25
   42a68:	b	429dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2b40>
   42a6c:	mov	x3, #0x18                  	// #24
   42a70:	mul	x5, x5, x3
   42a74:	str	x8, [x15, x5]
   42a78:	str	x10, [x18, x5]
   42a7c:	str	w1, [x19, x5]
   42a80:	bl	40954 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xab8>
   42a84:	str	w0, [x20, x5]
   42a88:	cmp	w4, #0x10
   42a8c:	b.ne	42aa4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2c08>  // b.any
   42a90:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   42a94:	add	x3, x3, #0xba4
   42a98:	add	x3, x3, #0x41a
   42a9c:	mov	w2, #0x1ef                 	// #495
   42aa0:	b	424e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2648>
   42aa4:	sxtw	x4, w4
   42aa8:	mov	w24, w2
   42aac:	mul	x4, x4, x3
   42ab0:	str	x10, [x15, x4]
   42ab4:	str	x23, [x18, x4]
   42ab8:	str	w14, [x19, x4]
   42abc:	str	w9, [x20, x4]
   42ac0:	mov	x23, x25
   42ac4:	b	425ec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2750>
   42ac8:	cmp	x26, x3
   42acc:	mov	x3, #0x18                  	// #24
   42ad0:	b.gt	42b44 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2ca8>
   42ad4:	cmp	w24, #0xf
   42ad8:	b.le	42af0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2c54>
   42adc:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   42ae0:	add	x3, x3, #0xba4
   42ae4:	add	x3, x3, #0x41a
   42ae8:	mov	w2, #0x1f2                 	// #498
   42aec:	b	424e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2648>
   42af0:	mul	x5, x5, x3
   42af4:	cmp	w4, #0x10
   42af8:	str	x10, [x15, x5]
   42afc:	str	x23, [x18, x5]
   42b00:	str	w14, [x19, x5]
   42b04:	str	w9, [x20, x5]
   42b08:	b.ne	42b20 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2c84>  // b.any
   42b0c:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   42b10:	add	x3, x3, #0xba4
   42b14:	add	x3, x3, #0x41a
   42b18:	mov	w2, #0x1f3                 	// #499
   42b1c:	b	424e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2648>
   42b20:	sxtw	x4, w4
   42b24:	mov	w24, w2
   42b28:	mul	x4, x4, x3
   42b2c:	str	x8, [x15, x4]
   42b30:	str	x10, [x18, x4]
   42b34:	str	w1, [x19, x4]
   42b38:	bl	40954 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xab8>
   42b3c:	str	w0, [x20, x4]
   42b40:	b	42ac0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2c24>
   42b44:	cmp	w24, #0xf
   42b48:	b.le	42b60 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2cc4>
   42b4c:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   42b50:	add	x3, x3, #0xba4
   42b54:	add	x3, x3, #0x41a
   42b58:	mov	w2, #0x1f6                 	// #502
   42b5c:	b	424e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2648>
   42b60:	mul	x5, x5, x3
   42b64:	cmp	w4, #0x10
   42b68:	str	x10, [x15, x5]
   42b6c:	str	x23, [x18, x5]
   42b70:	str	w14, [x19, x5]
   42b74:	str	w9, [x20, x5]
   42b78:	b.ne	42b90 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2cf4>  // b.any
   42b7c:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   42b80:	add	x3, x3, #0xba4
   42b84:	add	x3, x3, #0x41a
   42b88:	mov	w2, #0x1f7                 	// #503
   42b8c:	b	424e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2648>
   42b90:	sxtw	x4, w4
   42b94:	mul	x4, x4, x3
   42b98:	str	x11, [x15, x4]
   42b9c:	str	x25, [x18, x4]
   42ba0:	str	w14, [x19, x4]
   42ba4:	mov	w14, w1
   42ba8:	mov	w24, w2
   42bac:	str	w9, [x20, x4]
   42bb0:	bl	40954 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xab8>
   42bb4:	mov	w9, w0
   42bb8:	mov	x23, x10
   42bbc:	b	42648 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x27ac>
   42bc0:	cmp	x26, x3
   42bc4:	b.gt	42c40 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2da4>
   42bc8:	cmp	w24, #0xf
   42bcc:	b.le	42be4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2d48>
   42bd0:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   42bd4:	add	x3, x3, #0xba4
   42bd8:	add	x3, x3, #0x41a
   42bdc:	mov	w2, #0x1fc                 	// #508
   42be0:	b	424e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2648>
   42be4:	mov	x3, #0x18                  	// #24
   42be8:	mul	x5, x5, x3
   42bec:	str	x8, [x15, x5]
   42bf0:	str	x10, [x18, x5]
   42bf4:	str	w1, [x19, x5]
   42bf8:	bl	40954 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xab8>
   42bfc:	str	w0, [x20, x5]
   42c00:	cmp	w4, #0x10
   42c04:	b.ne	42c1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2d80>  // b.any
   42c08:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   42c0c:	add	x3, x3, #0xba4
   42c10:	add	x3, x3, #0x41a
   42c14:	mov	w2, #0x1fd                 	// #509
   42c18:	b	424e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2648>
   42c1c:	sxtw	x4, w4
   42c20:	mov	w24, w2
   42c24:	mul	x4, x4, x3
   42c28:	str	x11, [x15, x4]
   42c2c:	str	x25, [x18, x4]
   42c30:	str	w14, [x19, x4]
   42c34:	str	w9, [x20, x4]
   42c38:	mov	x8, x10
   42c3c:	b	42648 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x27ac>
   42c40:	cmp	x27, x3
   42c44:	mov	x3, #0x18                  	// #24
   42c48:	b.gt	42cbc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2e20>
   42c4c:	cmp	w24, #0xf
   42c50:	b.le	42c68 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2dcc>
   42c54:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   42c58:	add	x3, x3, #0xba4
   42c5c:	add	x3, x3, #0x41a
   42c60:	mov	w2, #0x200                 	// #512
   42c64:	b	424e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2648>
   42c68:	mul	x5, x5, x3
   42c6c:	cmp	w4, #0x10
   42c70:	str	x11, [x15, x5]
   42c74:	str	x25, [x18, x5]
   42c78:	str	w14, [x19, x5]
   42c7c:	str	w9, [x20, x5]
   42c80:	b.ne	42c98 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2dfc>  // b.any
   42c84:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   42c88:	add	x3, x3, #0xba4
   42c8c:	add	x3, x3, #0x41a
   42c90:	mov	w2, #0x201                 	// #513
   42c94:	b	424e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2648>
   42c98:	sxtw	x4, w4
   42c9c:	mov	w24, w2
   42ca0:	mul	x4, x4, x3
   42ca4:	str	x8, [x15, x4]
   42ca8:	str	x10, [x18, x4]
   42cac:	str	w1, [x19, x4]
   42cb0:	bl	40954 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xab8>
   42cb4:	str	w0, [x20, x4]
   42cb8:	b	42c38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2d9c>
   42cbc:	cmp	w24, #0xf
   42cc0:	b.le	42cd8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2e3c>
   42cc4:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   42cc8:	add	x3, x3, #0xba4
   42ccc:	add	x3, x3, #0x41a
   42cd0:	mov	w2, #0x204                 	// #516
   42cd4:	b	424e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2648>
   42cd8:	mul	x5, x5, x3
   42cdc:	cmp	w4, #0x10
   42ce0:	str	x11, [x15, x5]
   42ce4:	str	x25, [x18, x5]
   42ce8:	str	w14, [x19, x5]
   42cec:	str	w9, [x20, x5]
   42cf0:	b.ne	42d08 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2e6c>  // b.any
   42cf4:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   42cf8:	add	x3, x3, #0xba4
   42cfc:	add	x3, x3, #0x41a
   42d00:	mov	w2, #0x205                 	// #517
   42d04:	b	424e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2648>
   42d08:	sxtw	x4, w4
   42d0c:	mul	x4, x4, x3
   42d10:	str	x10, [x15, x4]
   42d14:	str	x23, [x18, x4]
   42d18:	b	42ba0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2d04>
   42d1c:	ldrsw	x0, [x11]
   42d20:	ldrsw	x0, [x12, x0, lsl #2]
   42d24:	add	x13, x13, x0
   42d28:	ldurb	w0, [x13, #-1]
   42d2c:	cmp	w0, w3
   42d30:	b.cs	42d5c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2ec0>  // b.hs, b.nlast
   42d34:	mov	x1, x11
   42d38:	mov	w3, w14
   42d3c:	mov	x2, x23
   42d40:	mov	x0, x12
   42d44:	bl	4059c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x700>
   42d48:	mov	x11, x0
   42d4c:	sub	x0, x23, x0
   42d50:	ubfx	x0, x0, #2, #32
   42d54:	bl	40954 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xab8>
   42d58:	mov	w10, w0
   42d5c:	add	w14, w14, #0x1
   42d60:	mov	w9, w10
   42d64:	b	425ec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2750>
   42d68:	stp	x29, x30, [sp, #-256]!
   42d6c:	mov	x29, sp
   42d70:	stp	x19, x20, [sp, #16]
   42d74:	mov	x20, x3
   42d78:	stp	x21, x22, [sp, #32]
   42d7c:	mov	x21, x1
   42d80:	stp	x23, x24, [sp, #48]
   42d84:	stp	x25, x26, [sp, #64]
   42d88:	mov	x26, x0
   42d8c:	mov	x0, #0x0                   	// #0
   42d90:	stp	x27, x28, [sp, #80]
   42d94:	str	w4, [sp, #108]
   42d98:	str	x2, [sp, #120]
   42d9c:	ldr	x1, [sp, #120]
   42da0:	str	wzr, [x1, x0, lsl #2]
   42da4:	add	x0, x0, #0x1
   42da8:	cmp	x0, #0x100
   42dac:	b.ne	42d9c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2f00>  // b.any
   42db0:	mov	x0, #0x0                   	// #0
   42db4:	str	wzr, [x20, x0, lsl #2]
   42db8:	add	x0, x0, #0x1
   42dbc:	cmp	x0, #0x10, lsl #12
   42dc0:	b.ne	42db4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2f18>  // b.any
   42dc4:	ldr	w0, [sp, #108]
   42dc8:	sub	x6, x21, #0x4
   42dcc:	ldrsw	x9, [sp, #108]
   42dd0:	sub	w0, w0, #0x1
   42dd4:	str	w0, [sp, #144]
   42dd8:	sub	x0, x9, #0x1
   42ddc:	str	x0, [sp, #176]
   42de0:	ldr	w1, [sp, #144]
   42de4:	mov	x4, x9
   42de8:	ldrb	w0, [x26, x0]
   42dec:	str	w4, [sp, #168]
   42df0:	tbz	w1, #31, 42ff0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3154>
   42df4:	ldr	w0, [sp, #108]
   42df8:	mov	w3, #0x0                   	// #0
   42dfc:	ldr	w1, [sp, #168]
   42e00:	sub	w24, w0, w1
   42e04:	mov	x0, #0x0                   	// #0
   42e08:	mov	w1, #0x0                   	// #0
   42e0c:	ldr	x2, [sp, #120]
   42e10:	mov	w6, w0
   42e14:	ldr	x4, [sp, #120]
   42e18:	lsl	w5, w0, #8
   42e1c:	ldr	w2, [x2, x0, lsl #2]
   42e20:	add	w2, w1, w2
   42e24:	add	w1, w1, w3
   42e28:	str	w1, [x4, x0, lsl #2]
   42e2c:	orr	w1, w0, w0, lsl #8
   42e30:	ldr	w1, [x20, w1, sxtw #2]
   42e34:	add	w1, w2, w1
   42e38:	add	w2, w0, #0x1
   42e3c:	cmp	w2, #0x100
   42e40:	b.ne	43090 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x31f4>  // b.any
   42e44:	add	x0, x0, #0x1
   42e48:	cmp	x0, #0x100
   42e4c:	b.ne	42e0c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2f70>  // b.any
   42e50:	cmp	w24, #0x0
   42e54:	b.le	43760 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x38c4>
   42e58:	sbfiz	x0, x24, #2, #32
   42e5c:	sub	x9, x9, w24, sxtw
   42e60:	str	x0, [sp, #152]
   42e64:	sub	w0, w24, #0x2
   42e68:	add	x28, x21, x9, lsl #2
   42e6c:	add	x22, x21, w24, sxtw #2
   42e70:	sxtw	x0, w0
   42e74:	str	w0, [sp, #216]
   42e78:	cmn	w0, #0x1
   42e7c:	b.ne	430b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x321c>  // b.any
   42e80:	ldr	x0, [sp, #152]
   42e84:	str	w24, [sp, #128]
   42e88:	add	x0, x28, x0
   42e8c:	ldursw	x1, [x0, #-4]
   42e90:	add	x0, x26, x1
   42e94:	ldrb	w2, [x0, #1]
   42e98:	ldrb	w0, [x26, x1]
   42e9c:	orr	w0, w2, w0, lsl #8
   42ea0:	sbfiz	x0, x0, #2, #32
   42ea4:	ldr	w1, [x20, x0]
   42ea8:	sub	w1, w1, #0x1
   42eac:	str	w1, [x20, x0]
   42eb0:	sub	w0, w24, #0x1
   42eb4:	str	w0, [sp, #104]
   42eb8:	str	w0, [x21, w1, sxtw #2]
   42ebc:	ldr	w0, [sp, #108]
   42ec0:	sub	w0, w0, w24, lsl #1
   42ec4:	str	w0, [sp, #112]
   42ec8:	mov	w0, #0xfe                  	// #254
   42ecc:	str	w0, [sp, #160]
   42ed0:	add	x0, sp, #0xf0
   42ed4:	str	x0, [sp, #184]
   42ed8:	ldr	w0, [sp, #160]
   42edc:	lsl	w0, w0, #8
   42ee0:	str	w0, [sp, #172]
   42ee4:	mov	w0, #0xff                  	// #255
   42ee8:	str	w0, [sp, #132]
   42eec:	ldp	w25, w1, [sp, #128]
   42ef0:	ldr	w0, [sp, #172]
   42ef4:	orr	w0, w0, w1
   42ef8:	ldr	w0, [x20, w0, sxtw #2]
   42efc:	str	w0, [sp, #128]
   42f00:	mov	w0, w0
   42f04:	sub	w0, w25, w0
   42f08:	cmp	w0, #0x1
   42f0c:	b.le	431cc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3330>
   42f10:	ldr	w0, [sp, #128]
   42f14:	add	x25, x21, w25, sxtw #2
   42f18:	add	x23, x21, w0, sxtw #2
   42f1c:	ldr	w0, [x21, w0, sxtw #2]
   42f20:	str	w0, [sp, #164]
   42f24:	ldr	w0, [sp, #104]
   42f28:	ldr	w1, [sp, #164]
   42f2c:	cmp	w0, w1
   42f30:	b.ne	42f38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x309c>  // b.any
   42f34:	add	x23, x23, #0x4
   42f38:	ldr	w0, [sp, #112]
   42f3c:	cmp	w0, #0x3ff
   42f40:	b.gt	43290 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x33f4>
   42f44:	ldrsw	x1, [sp, #112]
   42f48:	sub	x0, x25, x23
   42f4c:	asr	x2, x0, #2
   42f50:	cmp	x1, x0, asr #2
   42f54:	b.ge	43290 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x33f4>  // b.tcont
   42f58:	mov	w0, #0xfffff               	// #1048575
   42f5c:	cmp	w2, w0
   42f60:	b.gt	43288 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x33ec>
   42f64:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   42f68:	tst	w2, #0xffff0000
   42f6c:	add	x1, x0, #0xba4
   42f70:	b.eq	430f8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x325c>  // b.none
   42f74:	tst	w2, #0xff000000
   42f78:	b.eq	430e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x324c>  // b.none
   42f7c:	lsr	w3, w2, #24
   42f80:	ldr	w19, [x1, x3, lsl #2]
   42f84:	add	w19, w19, #0x18
   42f88:	add	x0, x0, #0xba4
   42f8c:	cmp	w19, #0xf
   42f90:	add	x0, x0, #0x428
   42f94:	b.le	4311c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3280>
   42f98:	and	w3, w19, #0xfffffffe
   42f9c:	asr	w4, w19, #1
   42fa0:	sub	w3, w3, #0x6
   42fa4:	sub	w4, w4, #0x7
   42fa8:	cmp	w19, #0x17
   42fac:	asr	w3, w2, w3
   42fb0:	ldr	w0, [x0, w3, sxtw #2]
   42fb4:	lsl	w0, w0, w4
   42fb8:	b.le	42fcc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3130>
   42fbc:	add	w19, w0, #0x1
   42fc0:	sdiv	w0, w2, w0
   42fc4:	add	w0, w19, w0
   42fc8:	asr	w0, w0, #1
   42fcc:	add	w19, w0, #0x1
   42fd0:	sdiv	w0, w2, w0
   42fd4:	add	w19, w19, w0
   42fd8:	asr	w19, w19, #1
   42fdc:	mul	w0, w19, w19
   42fe0:	cmp	w0, w2
   42fe4:	cset	w0, gt
   42fe8:	sub	w19, w19, w0
   42fec:	b	43150 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x32b4>
   42ff0:	sub	w1, w1, #0x1
   42ff4:	sxtw	x1, w1
   42ff8:	ldr	x5, [sp, #120]
   42ffc:	mov	w3, w0
   43000:	sbfiz	x0, x0, #2, #32
   43004:	mov	w2, w1
   43008:	ldr	x7, [sp, #120]
   4300c:	cmn	w1, #0x1
   43010:	ldr	w5, [x5, x0]
   43014:	add	w5, w5, #0x1
   43018:	str	w5, [x7, x0]
   4301c:	b.eq	42df4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2f58>  // b.none
   43020:	ldrb	w0, [x26, x1]
   43024:	sub	x1, x1, #0x1
   43028:	cmp	w3, w0
   4302c:	b.le	42ff8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x315c>
   43030:	orr	w3, w3, w0, lsl #8
   43034:	sbfiz	x3, x3, #2, #32
   43038:	ldr	w1, [x20, x3]
   4303c:	add	w1, w1, #0x1
   43040:	str	w1, [x20, x3]
   43044:	str	w2, [x6, x4, lsl #2]
   43048:	sub	w2, w2, #0x1
   4304c:	sxtw	x2, w2
   43050:	b	4306c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x31d0>
   43054:	orr	w0, w3, w0, lsl #8
   43058:	sbfiz	x0, x0, #2, #32
   4305c:	ldr	w1, [x20, x0]
   43060:	add	w1, w1, #0x1
   43064:	str	w1, [x20, x0]
   43068:	mov	w0, w3
   4306c:	mov	w1, w2
   43070:	tbnz	w2, #31, 43088 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x31ec>
   43074:	ldrb	w3, [x26, x2]
   43078:	sub	x2, x2, #0x1
   4307c:	cmp	w0, w3
   43080:	b.ge	43054 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x31b8>  // b.tcont
   43084:	mov	w0, w3
   43088:	sub	x4, x4, #0x1
   4308c:	b	42dec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2f50>
   43090:	orr	w4, w5, w2
   43094:	sbfiz	x4, x4, #2, #32
   43098:	ldr	w8, [x20, x4]
   4309c:	add	w3, w3, w8
   430a0:	str	w3, [x20, x4]
   430a4:	orr	w4, w6, w2, lsl #8
   430a8:	add	w2, w2, #0x1
   430ac:	ldr	w4, [x20, w4, sxtw #2]
   430b0:	add	w1, w1, w4
   430b4:	b	42e3c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2fa0>
   430b8:	ldrsw	x2, [x28, x0, lsl #2]
   430bc:	add	x1, x26, x2
   430c0:	ldrb	w3, [x1, #1]
   430c4:	ldrb	w1, [x26, x2]
   430c8:	orr	w1, w3, w1, lsl #8
   430cc:	sbfiz	x1, x1, #2, #32
   430d0:	ldr	w2, [x20, x1]
   430d4:	sub	w2, w2, #0x1
   430d8:	str	w2, [x20, x1]
   430dc:	str	w0, [x21, w2, sxtw #2]
   430e0:	sub	x0, x0, #0x1
   430e4:	b	42e74 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2fd8>
   430e8:	asr	w3, w2, #16
   430ec:	ldr	w19, [x1, w3, sxtw #2]
   430f0:	add	w19, w19, #0x10
   430f4:	b	42f88 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x30ec>
   430f8:	tst	x2, #0xff00
   430fc:	b.eq	43110 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3274>  // b.none
   43100:	asr	w3, w2, #8
   43104:	ldr	w19, [x1, w3, sxtw #2]
   43108:	add	w19, w19, #0x8
   4310c:	b	42f88 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x30ec>
   43110:	and	x3, x2, #0xff
   43114:	ldr	w19, [x1, x3, lsl #2]
   43118:	b	42f88 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x30ec>
   4311c:	cmp	w19, #0x7
   43120:	b.le	43148 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x32ac>
   43124:	and	w3, w19, #0xfffffffe
   43128:	mov	w1, #0x7                   	// #7
   4312c:	sub	w3, w3, #0x6
   43130:	sub	w1, w1, w19, asr #1
   43134:	asr	w3, w2, w3
   43138:	ldr	w19, [x0, w3, sxtw #2]
   4313c:	asr	w19, w19, w1
   43140:	add	w19, w19, #0x1
   43144:	b	42fdc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3140>
   43148:	ldr	w19, [x0, w2, sxtw #2]
   4314c:	asr	w19, w19, #4
   43150:	ldr	w0, [sp, #112]
   43154:	cmp	w0, w19
   43158:	b.ge	43290 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x33f4>  // b.tcont
   4315c:	cmp	w19, #0x400
   43160:	mov	w0, #0x400                 	// #1024
   43164:	csel	w19, w19, w0, le
   43168:	str	w19, [sp, #148]
   4316c:	sub	x0, x25, w19, sxtw #2
   43170:	str	x0, [sp, #136]
   43174:	mov	x27, x0
   43178:	mov	x2, x23
   4317c:	mov	w10, #0x0                   	// #0
   43180:	sub	x0, x27, x2
   43184:	cmp	x0, #0x1, lsl #12
   43188:	b.gt	432a4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3408>
   4318c:	mov	x3, x27
   43190:	mov	x1, x28
   43194:	mov	x0, x26
   43198:	str	x2, [sp, #192]
   4319c:	str	w10, [sp, #200]
   431a0:	bl	422b0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2414>
   431a4:	ldr	w10, [sp, #200]
   431a8:	mov	w11, #0x400                 	// #1024
   431ac:	ldr	x2, [sp, #192]
   431b0:	cbnz	w10, 43360 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x34c4>
   431b4:	ldr	w0, [sp, #148]
   431b8:	cbnz	w0, 433b0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3514>
   431bc:	ldr	w0, [sp, #104]
   431c0:	ldr	w1, [sp, #164]
   431c4:	cmp	w0, w1
   431c8:	b.eq	435cc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3730>  // b.none
   431cc:	ldr	w0, [sp, #132]
   431d0:	ldr	w1, [sp, #160]
   431d4:	sub	w0, w0, #0x1
   431d8:	str	w0, [sp, #132]
   431dc:	cmp	w0, w1
   431e0:	b.ne	42eec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3050>  // b.any
   431e4:	sub	w0, w0, #0x1
   431e8:	str	w0, [sp, #160]
   431ec:	ldr	w0, [sp, #128]
   431f0:	cmp	w0, #0x0
   431f4:	b.gt	42ed8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x303c>
   431f8:	ldr	w0, [sp, #104]
   431fc:	ldr	w1, [x21, w0, sxtw #2]
   43200:	add	x2, x21, w0, sxtw #2
   43204:	tbnz	w1, #31, 43624 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3788>
   43208:	mov	w1, w0
   4320c:	ldrsw	x3, [x2]
   43210:	str	w1, [x22, x3, lsl #2]
   43214:	sub	w1, w1, #0x1
   43218:	cmn	w1, #0x1
   4321c:	b.eq	43228 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x338c>  // b.none
   43220:	ldr	w3, [x2, #-4]!
   43224:	tbz	w3, #31, 4320c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3370>
   43228:	add	x2, x21, w1, sxtw #2
   4322c:	sub	w0, w1, w0
   43230:	cmp	w1, #0x0
   43234:	str	w0, [x2, #4]
   43238:	b.gt	43628 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x378c>
   4323c:	mov	w0, w24
   43240:	bl	40980 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xae4>
   43244:	lsl	w0, w0, #1
   43248:	mov	w1, #0x3                   	// #3
   4324c:	add	x23, x22, #0x4
   43250:	add	x28, sp, #0xf0
   43254:	str	w24, [sp, #248]
   43258:	sdiv	w0, w0, w1
   4325c:	ldr	w1, [sp, #108]
   43260:	stp	w0, w24, [sp, #240]
   43264:	ldr	w0, [sp, #168]
   43268:	sub	w27, w0, w1
   4326c:	ldr	w0, [x21]
   43270:	cmp	w27, w0
   43274:	b.ge	43688 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x37ec>  // b.tcont
   43278:	mov	x3, x21
   4327c:	mov	w25, #0x0                   	// #0
   43280:	mov	w0, #0x0                   	// #0
   43284:	b	43660 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x37c4>
   43288:	mov	w19, #0x400                 	// #1024
   4328c:	b	4315c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x32c0>
   43290:	ldr	w19, [sp, #112]
   43294:	mov	x27, x25
   43298:	str	x22, [sp, #136]
   4329c:	str	wzr, [sp, #148]
   432a0:	b	43178 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x32dc>
   432a4:	add	x11, x2, #0x1, lsl #12
   432a8:	mov	x0, x26
   432ac:	mov	x3, x11
   432b0:	mov	x1, x28
   432b4:	stp	x2, x11, [sp, #192]
   432b8:	str	w10, [sp, #208]
   432bc:	bl	422b0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2414>
   432c0:	ldp	x2, x11, [sp, #192]
   432c4:	ldr	w10, [sp, #208]
   432c8:	sub	x0, x25, x11
   432cc:	asr	x0, x0, #2
   432d0:	mov	w6, w0
   432d4:	cmp	w0, w19
   432d8:	b.gt	432fc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3460>
   432dc:	ldr	x5, [sp, #136]
   432e0:	mov	w6, w19
   432e4:	mov	w13, w10
   432e8:	mov	w12, #0x400                 	// #1024
   432ec:	tbnz	w13, #0, 43304 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3468>
   432f0:	add	w10, w10, #0x1
   432f4:	mov	x2, x11
   432f8:	b	43180 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x32e4>
   432fc:	mov	x5, x11
   43300:	b	432e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3448>
   43304:	sub	x14, x2, w12, sxtw #2
   43308:	add	x4, x2, w12, sxtw #2
   4330c:	mov	x3, x2
   43310:	mov	x1, x28
   43314:	mov	x2, x14
   43318:	mov	x0, x26
   4331c:	str	x14, [sp, #192]
   43320:	str	w12, [sp, #200]
   43324:	str	x5, [sp, #208]
   43328:	str	w6, [sp, #220]
   4332c:	str	x11, [sp, #224]
   43330:	stp	w13, w10, [sp, #232]
   43334:	bl	41b18 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c7c>
   43338:	ldp	w13, w10, [sp, #232]
   4333c:	ldr	w12, [sp, #200]
   43340:	ldr	x14, [sp, #192]
   43344:	asr	w13, w13, #1
   43348:	ldr	w6, [sp, #220]
   4334c:	lsl	w12, w12, #1
   43350:	mov	x2, x14
   43354:	ldr	x5, [sp, #208]
   43358:	ldr	x11, [sp, #224]
   4335c:	b	432ec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3450>
   43360:	tbz	w10, #0, 433a4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3508>
   43364:	ldr	x5, [sp, #136]
   43368:	sub	x12, x2, w11, sxtw #2
   4336c:	mov	x3, x2
   43370:	mov	w6, w19
   43374:	mov	x2, x12
   43378:	mov	x4, x27
   4337c:	mov	x1, x28
   43380:	mov	x0, x26
   43384:	str	x12, [sp, #192]
   43388:	str	w11, [sp, #200]
   4338c:	str	w10, [sp, #208]
   43390:	bl	41b18 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c7c>
   43394:	ldr	x12, [sp, #192]
   43398:	ldr	w11, [sp, #200]
   4339c:	ldr	w10, [sp, #208]
   433a0:	mov	x2, x12
   433a4:	lsl	w11, w11, #1
   433a8:	asr	w10, w10, #1
   433ac:	b	431b0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3314>
   433b0:	mov	x3, x25
   433b4:	mov	x2, x27
   433b8:	mov	x1, x28
   433bc:	mov	x0, x26
   433c0:	bl	422b0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2414>
   433c4:	mov	x6, x25
   433c8:	mov	x11, #0xfffffffffffffffc    	// #-4
   433cc:	ldur	w18, [x6, #-4]
   433d0:	tbz	w18, #31, 43488 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x35ec>
   433d4:	mvn	w18, w18
   433d8:	mov	w7, #0x1                   	// #1
   433dc:	add	x18, x28, w18, sxtw #2
   433e0:	sub	x12, x27, x23
   433e4:	ldr	w14, [sp, #216]
   433e8:	mov	x10, x23
   433ec:	asr	x12, x12, #2
   433f0:	mov	w13, w12
   433f4:	asr	w12, w12, #1
   433f8:	cmp	w13, #0x0
   433fc:	b.gt	43494 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x35f8>
   43400:	cmp	x27, x10
   43404:	b.ls	4346c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x35d0>  // b.plast
   43408:	cbnz	w14, 43418 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x357c>
   4340c:	ldr	w0, [x10]
   43410:	mvn	w0, w0
   43414:	str	w0, [x10]
   43418:	sub	x19, x27, x10
   4341c:	sub	x1, x6, x27
   43420:	mov	x4, x6
   43424:	mov	x0, x10
   43428:	ubfx	x2, x19, #2, #32
   4342c:	ubfx	x1, x1, #2, #32
   43430:	add	x13, x27, #0x1
   43434:	mvn	x8, x27
   43438:	sub	x14, x27, #0x4
   4343c:	sub	x15, x27, #0x5
   43440:	cmp	w2, #0x0
   43444:	ccmp	w1, #0x0, #0x4, gt
   43448:	b.le	4345c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x35c0>
   4344c:	cmp	w2, w1
   43450:	b.ne	434ec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3650>  // b.any
   43454:	mov	x1, x27
   43458:	bl	40628 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x78c>
   4345c:	sub	x6, x6, x19
   43460:	cmp	x23, x10
   43464:	b.eq	431bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3320>  // b.none
   43468:	mov	x27, x10
   4346c:	sub	x6, x6, #0x4
   43470:	cbz	w7, 4347c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x35e0>
   43474:	ldr	w0, [x6, #-4]!
   43478:	tbnz	w0, #31, 43474 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x35d8>
   4347c:	cmp	x27, x6
   43480:	b.ne	433cc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3530>  // b.any
   43484:	b	431bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3320>
   43488:	add	x18, x28, w18, sxtw #2
   4348c:	mov	w7, #0x0                   	// #0
   43490:	b	433e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3544>
   43494:	ldr	w0, [x10, w12, sxtw #2]
   43498:	add	x15, x10, w12, sxtw #2
   4349c:	mov	w3, #0x2                   	// #2
   434a0:	mvn	w1, w0
   434a4:	cmp	w0, #0x0
   434a8:	sbfiz	x2, x0, #2, #32
   434ac:	mov	x0, x26
   434b0:	sbfiz	x1, x1, #2, #32
   434b4:	csel	x1, x1, x2, lt  // lt = tstop
   434b8:	mov	x2, x18
   434bc:	add	x1, x28, x1
   434c0:	bl	40440 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5a4>
   434c4:	tbz	w0, #31, 434dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3640>
   434c8:	mvn	w13, w13
   434cc:	add	x10, x15, #0x4
   434d0:	and	w13, w13, #0x1
   434d4:	mov	w0, w14
   434d8:	sub	w12, w12, w13
   434dc:	mov	w13, w12
   434e0:	mov	w14, w0
   434e4:	asr	w12, w12, #1
   434e8:	b	433f8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x355c>
   434ec:	b.ge	43560 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x36c4>  // b.tcont
   434f0:	sub	x3, x14, x0
   434f4:	ldur	w16, [x4, #-4]
   434f8:	sub	x5, x4, #0x4
   434fc:	sub	x4, x0, #0x1
   43500:	lsr	x3, x3, #2
   43504:	cmp	x15, x4
   43508:	add	w17, w2, #0x1
   4350c:	mul	x12, x3, x11
   43510:	madd	x3, x3, x11, x11
   43514:	csel	x12, x12, xzr, cs  // cs = hs, nlast
   43518:	csel	x3, x3, x11, cs  // cs = hs, nlast
   4351c:	sub	x12, x12, #0x8
   43520:	mov	x4, x14
   43524:	mov	x18, x5
   43528:	ldr	w30, [x4]
   4352c:	str	w30, [x18], #-4
   43530:	ldr	w30, [x18]
   43534:	str	w30, [x4], #-4
   43538:	cmp	x4, x0
   4353c:	b.cs	43528 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x368c>  // b.hs, b.nlast
   43540:	str	w16, [x5, x3]
   43544:	sub	w1, w1, w17
   43548:	add	x4, x5, x3
   4354c:	cmp	w2, w1
   43550:	b.ge	43440 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x35a4>  // b.tcont
   43554:	ldur	w16, [x4, #-4]
   43558:	add	x5, x5, x12
   4355c:	b	43520 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3684>
   43560:	add	x3, x8, x4
   43564:	cmp	x4, x13
   43568:	and	x5, x3, #0xfffffffffffffffc
   4356c:	and	x3, x3, #0xfffffffffffffffc
   43570:	csel	x5, x5, xzr, cs  // cs = hs, nlast
   43574:	add	x3, x3, #0x4
   43578:	ldr	w17, [x0]
   4357c:	mov	x9, #0x4                   	// #4
   43580:	add	x5, x5, #0x8
   43584:	csel	x3, x3, x9, cs  // cs = hs, nlast
   43588:	add	w18, w1, #0x1
   4358c:	mov	x12, x27
   43590:	mov	x16, x0
   43594:	ldr	w30, [x12]
   43598:	str	w30, [x16], #4
   4359c:	ldr	w30, [x16]
   435a0:	str	w30, [x12], #4
   435a4:	cmp	x4, x12
   435a8:	b.hi	43594 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x36f8>  // b.pmore
   435ac:	str	w17, [x0, x3]
   435b0:	sub	w2, w2, w18
   435b4:	add	x12, x0, x3
   435b8:	cmp	w1, w2
   435bc:	add	x0, x0, x5
   435c0:	b.ge	43440 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x35a4>  // b.tcont
   435c4:	ldr	w17, [x12, #4]
   435c8:	b	4358c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x36f0>
   435cc:	ldur	w8, [x23, #-4]
   435d0:	ldr	w0, [x28, w8, sxtw #2]
   435d4:	str	w0, [sp, #240]
   435d8:	ldr	w0, [sp, #108]
   435dc:	sub	w0, w0, #0x2
   435e0:	str	w0, [sp, #244]
   435e4:	cmp	x25, x23
   435e8:	b.ls	43610 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3774>  // b.plast
   435ec:	ldr	w6, [x23]
   435f0:	tbnz	w6, #31, 43618 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x377c>
   435f4:	ldr	x1, [sp, #184]
   435f8:	add	x2, x28, w6, sxtw #2
   435fc:	mov	x0, x26
   43600:	mov	w3, #0x2                   	// #2
   43604:	bl	40440 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5a4>
   43608:	cmp	w0, #0x0
   4360c:	b.gt	43618 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x377c>
   43610:	stur	w8, [x23, #-4]
   43614:	b	431cc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3330>
   43618:	add	x23, x23, #0x4
   4361c:	stur	w6, [x23, #-8]
   43620:	b	435e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3748>
   43624:	mov	w1, w0
   43628:	sxtw	x2, w1
   4362c:	ldr	w3, [x21, x2, lsl #2]
   43630:	mov	w0, w2
   43634:	mvn	w3, w3
   43638:	str	w3, [x21, x2, lsl #2]
   4363c:	sub	x2, x2, #0x1
   43640:	str	w1, [x22, w3, sxtw #2]
   43644:	ldr	w3, [x21, x2, lsl #2]
   43648:	tbnz	w3, #31, 4362c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3790>
   4364c:	str	w1, [x22, w3, sxtw #2]
   43650:	subs	w0, w0, #0x2
   43654:	b.pl	431fc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3360>  // b.nfrst
   43658:	b	4323c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x33a0>
   4365c:	mov	x3, x19
   43660:	ldr	w2, [x3]
   43664:	sbfiz	x19, x2, #2, #32
   43668:	tbz	w2, #31, 43780 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x38e4>
   4366c:	sub	x19, x3, x19
   43670:	add	w0, w0, w2
   43674:	cmp	x22, x19
   43678:	b.hi	4365c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x37c0>  // b.pmore
   4367c:	cbz	w0, 43684 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x37e8>
   43680:	str	w0, [x19, w0, sxtw #2]
   43684:	cbnz	w25, 437ec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3950>
   43688:	ldr	x0, [sp, #176]
   4368c:	ldrb	w1, [x26, x0]
   43690:	ldr	x0, [sp, #152]
   43694:	add	x22, x22, x0
   43698:	ldr	w0, [sp, #144]
   4369c:	tbz	w0, #31, 437f8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x395c>
   436a0:	add	x0, x20, #0x3c, lsl #12
   436a4:	ldr	w1, [sp, #108]
   436a8:	mov	x9, #0xfe                  	// #254
   436ac:	str	w1, [x0, #16380]
   436b0:	ldr	x0, [sp, #120]
   436b4:	add	x2, x0, #0x4
   436b8:	ldr	w0, [x2, x9, lsl #2]
   436bc:	mov	w3, w9
   436c0:	mov	w1, w9
   436c4:	lsl	w7, w9, #8
   436c8:	sub	w0, w0, #0x1
   436cc:	mov	w4, #0xff                  	// #255
   436d0:	orr	w5, w1, w4, lsl #8
   436d4:	sbfiz	x5, x5, #2, #32
   436d8:	ldr	w6, [x20, x5]
   436dc:	str	w0, [x20, x5]
   436e0:	sub	w6, w0, w6
   436e4:	orr	w0, w7, w4
   436e8:	sxtw	x8, w6
   436ec:	ldr	w5, [x20, w0, sxtw #2]
   436f0:	ldrsw	x0, [sp, #104]
   436f4:	cmp	w5, w0
   436f8:	b.le	43870 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x39d4>
   436fc:	ldr	w0, [sp, #104]
   43700:	sub	w4, w4, #0x1
   43704:	ldr	w8, [sp, #104]
   43708:	add	w0, w0, #0x1
   4370c:	sub	w0, w5, w0
   43710:	sub	w5, w5, #0x1
   43714:	cmp	w5, w8
   43718:	csel	w0, w0, wzr, le
   4371c:	cmp	w4, w9
   43720:	add	w5, w8, w0
   43724:	str	w5, [sp, #104]
   43728:	add	w0, w6, w0
   4372c:	b.ne	436d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3834>  // b.any
   43730:	orr	w1, w7, w1
   43734:	add	w3, w3, #0x1
   43738:	orr	w3, w3, w7
   4373c:	sub	x9, x9, #0x1
   43740:	sbfiz	x1, x1, #2, #32
   43744:	cmn	x9, #0x1
   43748:	ldr	w4, [x20, x1]
   4374c:	sub	w4, w0, w4
   43750:	add	w4, w4, #0x1
   43754:	str	w4, [x20, w3, sxtw #2]
   43758:	str	w0, [x20, x1]
   4375c:	b.ne	436b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x381c>  // b.any
   43760:	mov	w0, w24
   43764:	ldp	x19, x20, [sp, #16]
   43768:	ldp	x21, x22, [sp, #32]
   4376c:	ldp	x23, x24, [sp, #48]
   43770:	ldp	x25, x26, [sp, #64]
   43774:	ldp	x27, x28, [sp, #80]
   43778:	ldp	x29, x30, [sp], #256
   4377c:	ret
   43780:	cbz	w0, 43788 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x38ec>
   43784:	str	w0, [x3, w0, sxtw #2]
   43788:	ldrsw	x19, [x22, x19]
   4378c:	add	x19, x19, #0x1
   43790:	add	x19, x21, x19, lsl #2
   43794:	sub	x0, x19, x3
   43798:	cmp	x0, #0x4
   4379c:	b.le	437e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3948>
   437a0:	mov	x0, x22
   437a4:	mov	x5, x28
   437a8:	mov	x4, x19
   437ac:	mov	x2, x21
   437b0:	mov	x1, x23
   437b4:	str	x3, [sp, #112]
   437b8:	str	wzr, [sp, #252]
   437bc:	bl	409dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xb40>
   437c0:	ldr	w0, [sp, #252]
   437c4:	ldr	x3, [sp, #112]
   437c8:	cbz	w0, 437d8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x393c>
   437cc:	add	w25, w25, w0
   437d0:	mov	w0, #0x0                   	// #0
   437d4:	b	43674 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x37d8>
   437d8:	sub	x0, x3, x19
   437dc:	ubfx	x0, x0, #2, #32
   437e0:	b	43674 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x37d8>
   437e4:	csetm	w0, eq  // eq = none
   437e8:	b	43674 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x37d8>
   437ec:	sub	x0, x23, x22
   437f0:	add	x23, x23, x0
   437f4:	b	4326c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x33d0>
   437f8:	ldr	w0, [sp, #144]
   437fc:	sub	w0, w0, #0x1
   43800:	sxtw	x0, w0
   43804:	mov	w4, w1
   43808:	mov	w3, w0
   4380c:	cmn	w0, #0x1
   43810:	b.eq	436a0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3804>  // b.none
   43814:	ldrb	w1, [x26, x0]
   43818:	sub	w2, w0, #0x1
   4381c:	sub	x0, x0, #0x1
   43820:	cmp	w1, w4
   43824:	b.ge	43804 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3968>  // b.tcont
   43828:	sxtw	x0, w2
   4382c:	str	w0, [sp, #144]
   43830:	cmn	w0, #0x1
   43834:	b.eq	4384c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x39b0>  // b.none
   43838:	ldrb	w2, [x26, x0]
   4383c:	sub	x0, x0, #0x1
   43840:	cmp	w2, w1
   43844:	mov	w1, w2
   43848:	b.le	4382c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3990>
   4384c:	cbz	w3, 43864 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x39c8>
   43850:	ldr	w0, [sp, #144]
   43854:	sub	w0, w3, w0
   43858:	cmp	w0, #0x1
   4385c:	b.gt	43864 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x39c8>
   43860:	mvn	w3, w3
   43864:	ldrsw	x0, [x22, #-4]!
   43868:	str	w3, [x21, x0, lsl #2]
   4386c:	b	43698 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x37fc>
   43870:	ldr	w10, [x21, x0, lsl #2]
   43874:	sub	x0, x0, #0x1
   43878:	str	w10, [x21, x8, lsl #2]
   4387c:	sub	x8, x8, #0x1
   43880:	b	436f4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3858>
   43884:	stp	x29, x30, [sp, #-64]!
   43888:	cmp	x0, #0x0
   4388c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   43890:	mov	x29, sp
   43894:	stp	x19, x20, [sp, #16]
   43898:	stp	x21, x22, [sp, #32]
   4389c:	str	x23, [sp, #48]
   438a0:	b.eq	43cac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3e10>  // b.none
   438a4:	mov	w19, w2
   438a8:	cmp	w2, #0x0
   438ac:	b.lt	43cac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3e10>  // b.tstop
   438b0:	b.eq	438c8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3a2c>  // b.none
   438b4:	mov	x20, x1
   438b8:	cmp	w2, #0x1
   438bc:	b.ne	438e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3a44>  // b.any
   438c0:	str	wzr, [x1]
   438c4:	mov	w19, #0x0                   	// #0
   438c8:	mov	w0, w19
   438cc:	ldp	x19, x20, [sp, #16]
   438d0:	ldp	x21, x22, [sp, #32]
   438d4:	ldr	x23, [sp, #48]
   438d8:	ldp	x29, x30, [sp], #64
   438dc:	ret
   438e0:	mov	x21, x0
   438e4:	cmp	w2, #0x2
   438e8:	b.ne	43914 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3a78>  // b.any
   438ec:	ldrb	w1, [x0, #1]
   438f0:	ldrb	w2, [x0]
   438f4:	mov	x0, #0x4                   	// #4
   438f8:	cmp	w2, w1
   438fc:	mov	w1, #0x1                   	// #1
   43900:	csel	x3, x0, xzr, cs  // cs = hs, nlast
   43904:	csel	x0, x0, xzr, cc  // cc = lo, ul, last
   43908:	str	wzr, [x20, x3]
   4390c:	str	w1, [x20, x0]
   43910:	b	438c4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3a28>
   43914:	mov	x0, #0x400                 	// #1024
   43918:	bl	46a0 <malloc@plt>
   4391c:	mov	x22, x0
   43920:	mov	x0, #0x40000               	// #262144
   43924:	bl	46a0 <malloc@plt>
   43928:	mov	x23, x0
   4392c:	cmp	x22, #0x0
   43930:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   43934:	b.eq	43ca4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3e08>  // b.none
   43938:	mov	x3, x0
   4393c:	mov	w4, w19
   43940:	mov	x2, x22
   43944:	mov	x1, x20
   43948:	mov	x0, x21
   4394c:	bl	42d68 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2ecc>
   43950:	cmp	w0, #0x0
   43954:	b.gt	439ac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b10>
   43958:	add	x0, x21, w19, sxtw
   4395c:	ldurb	w1, [x0, #-1]
   43960:	ldurb	w3, [x0, #-2]
   43964:	ldurb	w6, [x0, #-1]
   43968:	sub	w0, w19, #0x1
   4396c:	ldrsw	x2, [x22, x1, lsl #2]
   43970:	cmp	w3, w6
   43974:	csneg	w0, w0, w19, cs  // cs = hs, nlast
   43978:	mov	x3, x20
   4397c:	add	x19, x20, w19, sxtw #2
   43980:	add	x1, x20, x2, lsl #2
   43984:	add	x1, x1, #0x4
   43988:	str	w0, [x20, x2, lsl #2]
   4398c:	cmp	x19, x3
   43990:	b.hi	43ba4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3d08>  // b.pmore
   43994:	mov	w19, #0x0                   	// #0
   43998:	mov	x0, x23
   4399c:	bl	48e0 <free@plt>
   439a0:	mov	x0, x22
   439a4:	bl	48e0 <free@plt>
   439a8:	b	438c8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3a2c>
   439ac:	add	x10, x22, #0x4
   439b0:	mov	x7, #0xfe                  	// #254
   439b4:	mov	x11, #0xfffffffffffffffc    	// #-4
   439b8:	add	w0, w7, #0x1
   439bc:	ldr	w4, [x10, x7, lsl #2]
   439c0:	orr	w0, w0, w7, lsl #8
   439c4:	lsl	w9, w7, #8
   439c8:	mov	w2, #0xffffffff            	// #-1
   439cc:	mov	x1, #0x0                   	// #0
   439d0:	add	x4, x11, w4, sxtw #2
   439d4:	ldrsw	x8, [x23, w0, sxtw #2]
   439d8:	add	x4, x20, x4
   439dc:	add	x8, x20, x8, lsl #2
   439e0:	cmp	x8, x4
   439e4:	b.ls	439f8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b5c>  // b.plast
   439e8:	sub	x7, x7, #0x1
   439ec:	cmn	x7, #0x1
   439f0:	b.ne	439b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b1c>  // b.any
   439f4:	b	43958 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3abc>
   439f8:	ldr	w0, [x4]
   439fc:	cmp	w0, #0x0
   43a00:	mvn	w6, w0
   43a04:	b.le	43b68 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3ccc>
   43a08:	ldrb	w5, [x21, w0, sxtw]
   43a0c:	sxtw	x3, w0
   43a10:	cmp	w5, w7
   43a14:	b.eq	43a3c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3ba0>  // b.none
   43a18:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43a1c:	add	x3, x3, #0xba4
   43a20:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43a24:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43a28:	add	x3, x3, #0x828
   43a2c:	add	x1, x1, #0xad8
   43a30:	add	x0, x0, #0xb0f
   43a34:	mov	w2, #0x65e                 	// #1630
   43a38:	bl	4a90 <__assert_fail@plt>
   43a3c:	add	w12, w0, #0x1
   43a40:	cmp	w19, w12
   43a44:	b.le	43a58 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3bbc>
   43a48:	add	x3, x21, x3
   43a4c:	ldrb	w12, [x3, #1]
   43a50:	cmp	w12, w5
   43a54:	b.cs	43a7c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3be0>  // b.hs, b.nlast
   43a58:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43a5c:	add	x3, x3, #0xba4
   43a60:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43a64:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43a68:	add	x3, x3, #0x828
   43a6c:	add	x1, x1, #0xad8
   43a70:	add	x0, x0, #0xb1a
   43a74:	mov	w2, #0x65f                 	// #1631
   43a78:	b	43a38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b9c>
   43a7c:	ldurb	w3, [x3, #-1]
   43a80:	cmp	w3, w5
   43a84:	b.ls	43aac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3c10>  // b.plast
   43a88:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43a8c:	add	x3, x3, #0xba4
   43a90:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43a94:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43a98:	add	x3, x3, #0x828
   43a9c:	add	x1, x1, #0xad8
   43aa0:	add	x0, x0, #0xb3e
   43aa4:	mov	w2, #0x660                 	// #1632
   43aa8:	b	43a38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b9c>
   43aac:	sub	w3, w0, #0x1
   43ab0:	str	w6, [x4]
   43ab4:	sxtw	x6, w3
   43ab8:	ldrb	w5, [x21, w3, sxtw]
   43abc:	cbz	w3, 43ad4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3c38>
   43ac0:	add	x6, x21, x6
   43ac4:	ldurb	w6, [x6, #-1]
   43ac8:	cmp	w6, w5
   43acc:	b.ls	43ad4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3c38>  // b.plast
   43ad0:	neg	w3, w0
   43ad4:	cmp	w5, w2
   43ad8:	b.eq	43b28 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3c8c>  // b.none
   43adc:	tbnz	w2, #31, 43af0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3c54>
   43ae0:	orr	w2, w9, w2
   43ae4:	sub	x1, x1, x20
   43ae8:	asr	x1, x1, #2
   43aec:	str	w1, [x23, w2, sxtw #2]
   43af0:	orr	w0, w9, w5
   43af4:	ldrsw	x1, [x23, w0, sxtw #2]
   43af8:	add	x1, x20, x1, lsl #2
   43afc:	cmp	x4, x1
   43b00:	b.hi	43b58 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3cbc>  // b.pmore
   43b04:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43b08:	add	x3, x3, #0xba4
   43b0c:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43b10:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43b14:	add	x3, x3, #0x828
   43b18:	add	x1, x1, #0xad8
   43b1c:	add	x0, x0, #0xb4f
   43b20:	mov	w2, #0x668                 	// #1640
   43b24:	b	43a38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b9c>
   43b28:	cmp	x4, x1
   43b2c:	b.ls	43b04 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3c68>  // b.plast
   43b30:	cbnz	x1, 43b58 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3cbc>
   43b34:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43b38:	add	x3, x3, #0xba4
   43b3c:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43b40:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43b44:	add	x3, x3, #0x828
   43b48:	add	x1, x1, #0xad8
   43b4c:	add	x0, x0, #0xb55
   43b50:	mov	w2, #0x668                 	// #1640
   43b54:	b	43a38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b9c>
   43b58:	mov	w2, w5
   43b5c:	str	w3, [x1], #-4
   43b60:	sub	x4, x4, #0x4
   43b64:	b	439e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b44>
   43b68:	b.ne	43b9c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3d00>  // b.any
   43b6c:	ldrb	w0, [x21]
   43b70:	cmp	w0, w7
   43b74:	b.eq	43b9c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3d00>  // b.none
   43b78:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43b7c:	add	x3, x3, #0xba4
   43b80:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43b84:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43b88:	add	x3, x3, #0x828
   43b8c:	add	x1, x1, #0xad8
   43b90:	add	x0, x0, #0xb5f
   43b94:	mov	w2, #0x66b                 	// #1643
   43b98:	b	43a38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b9c>
   43b9c:	str	w6, [x4]
   43ba0:	b	43b60 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3cc4>
   43ba4:	ldr	w0, [x3]
   43ba8:	cmp	w0, #0x0
   43bac:	b.le	43c6c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3dd0>
   43bb0:	add	x2, x21, w0, sxtw
   43bb4:	ldurb	w4, [x2, #-1]
   43bb8:	ldrb	w2, [x21, w0, sxtw]
   43bbc:	cmp	w4, w2
   43bc0:	b.cs	43be8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3d4c>  // b.hs, b.nlast
   43bc4:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43bc8:	add	x3, x3, #0xba4
   43bcc:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43bd0:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43bd4:	add	x3, x3, #0x828
   43bd8:	add	x1, x1, #0xad8
   43bdc:	add	x0, x0, #0xb85
   43be0:	mov	w2, #0x679                 	// #1657
   43be4:	b	43a38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b9c>
   43be8:	sub	w7, w0, #0x1
   43bec:	sxtw	x8, w7
   43bf0:	ldrb	w5, [x21, w7, sxtw]
   43bf4:	mov	w9, w5
   43bf8:	cbz	w7, 43c0c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3d70>
   43bfc:	add	x8, x21, x8
   43c00:	ldurb	w2, [x8, #-1]
   43c04:	cmp	w2, w5
   43c08:	b.cs	43c10 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3d74>  // b.hs, b.nlast
   43c0c:	neg	w7, w0
   43c10:	cmp	w5, w6
   43c14:	b.eq	43c30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3d94>  // b.none
   43c18:	sub	x1, x1, x20
   43c1c:	ubfiz	x5, x5, #2, #8
   43c20:	asr	x1, x1, #2
   43c24:	str	w1, [x22, w6, sxtw #2]
   43c28:	ldrsw	x1, [x22, x5]
   43c2c:	add	x1, x20, x1, lsl #2
   43c30:	cmp	x3, x1
   43c34:	b.cc	43c5c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3dc0>  // b.lo, b.ul, b.last
   43c38:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43c3c:	add	x3, x3, #0xba4
   43c40:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43c44:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43c48:	add	x3, x3, #0x828
   43c4c:	add	x1, x1, #0xad8
   43c50:	add	x0, x0, #0xb96
   43c54:	mov	w2, #0x680                 	// #1664
   43c58:	b	43a38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b9c>
   43c5c:	str	w7, [x1], #4
   43c60:	add	x3, x3, #0x4
   43c64:	mov	w6, w9
   43c68:	b	4398c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3af0>
   43c6c:	b.ne	43c94 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3df8>  // b.any
   43c70:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43c74:	add	x3, x3, #0xba4
   43c78:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43c7c:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43c80:	add	x3, x3, #0x828
   43c84:	add	x1, x1, #0xad8
   43c88:	add	x0, x0, #0xb9c
   43c8c:	mov	w2, #0x683                 	// #1667
   43c90:	b	43a38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b9c>
   43c94:	mvn	w0, w0
   43c98:	mov	w9, w6
   43c9c:	str	w0, [x3]
   43ca0:	b	43c60 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3dc4>
   43ca4:	mov	w19, #0xfffffffe            	// #-2
   43ca8:	b	43998 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3afc>
   43cac:	mov	w19, #0xffffffff            	// #-1
   43cb0:	b	438c8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3a2c>
   43cb4:	stp	x29, x30, [sp, #-96]!
   43cb8:	cmp	x0, #0x0
   43cbc:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   43cc0:	mov	x29, sp
   43cc4:	stp	x19, x20, [sp, #16]
   43cc8:	stp	x21, x22, [sp, #32]
   43ccc:	stp	x23, x24, [sp, #48]
   43cd0:	stp	x25, x26, [sp, #64]
   43cd4:	str	x27, [sp, #80]
   43cd8:	b.eq	4449c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4600>  // b.none
   43cdc:	mov	w21, w3
   43ce0:	tbnz	w3, #31, 4449c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4600>
   43ce4:	mov	x20, x0
   43ce8:	mov	x22, x1
   43cec:	cmp	w3, #0x1
   43cf0:	b.gt	43d20 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3e84>
   43cf4:	b.ne	444a4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4608>  // b.any
   43cf8:	ldrb	w0, [x0]
   43cfc:	strb	w0, [x1]
   43d00:	mov	w0, w21
   43d04:	ldp	x19, x20, [sp, #16]
   43d08:	ldp	x21, x22, [sp, #32]
   43d0c:	ldp	x23, x24, [sp, #48]
   43d10:	ldp	x25, x26, [sp, #64]
   43d14:	ldr	x27, [sp, #80]
   43d18:	ldp	x29, x30, [sp], #96
   43d1c:	ret
   43d20:	mov	x23, x2
   43d24:	mov	x26, x4
   43d28:	mov	x27, x5
   43d2c:	cbnz	x2, 43e30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3f94>
   43d30:	add	w0, w3, #0x1
   43d34:	sbfiz	x0, x0, #2, #32
   43d38:	bl	46a0 <malloc@plt>
   43d3c:	mov	x19, x0
   43d40:	mov	x0, #0x400                 	// #1024
   43d44:	bl	46a0 <malloc@plt>
   43d48:	mov	x24, x0
   43d4c:	mov	x0, #0x40000               	// #262144
   43d50:	bl	46a0 <malloc@plt>
   43d54:	mov	x25, x0
   43d58:	cmp	x19, #0x0
   43d5c:	ccmp	x24, #0x0, #0x4, ne  // ne = any
   43d60:	b.eq	44494 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x45f8>  // b.none
   43d64:	cbz	x0, 44494 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x45f8>
   43d68:	mov	x3, x0
   43d6c:	mov	w4, w21
   43d70:	mov	x2, x24
   43d74:	mov	x1, x19
   43d78:	mov	x0, x20
   43d7c:	bl	42d68 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2ecc>
   43d80:	cmp	x26, #0x0
   43d84:	ccmp	x27, #0x0, #0x4, ne  // ne = any
   43d88:	b.ne	44104 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4268>  // b.any
   43d8c:	cmp	w0, #0x0
   43d90:	b.gt	43e38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3f9c>
   43d94:	add	x0, x20, w21, sxtw
   43d98:	sub	w2, w21, #0x1
   43d9c:	add	x7, x19, w21, sxtw #2
   43da0:	mov	x3, x19
   43da4:	ldurb	w1, [x0, #-1]
   43da8:	ldurb	w6, [x0, #-1]
   43dac:	ldurb	w0, [x0, #-2]
   43db0:	ldrsw	x1, [x24, x1, lsl #2]
   43db4:	cmp	w6, w0
   43db8:	csinv	w0, w2, w0, ls  // ls = plast
   43dbc:	add	x1, x19, x1, lsl #2
   43dc0:	str	w0, [x1], #4
   43dc4:	mov	x0, x19
   43dc8:	cmp	x7, x3
   43dcc:	b.hi	44024 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4188>  // b.pmore
   43dd0:	sub	x1, x0, x19
   43dd4:	add	x20, x20, w21, sxtw
   43dd8:	mov	x2, x22
   43ddc:	ubfx	x1, x1, #2, #32
   43de0:	ldurb	w0, [x20, #-1]
   43de4:	strb	w0, [x2], #1
   43de8:	mov	x0, #0x0                   	// #0
   43dec:	cmp	w1, w0
   43df0:	b.gt	44474 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x45d8>
   43df4:	cmp	w1, #0x0
   43df8:	csel	w0, w1, wzr, ge  // ge = tcont
   43dfc:	add	w0, w0, #0x1
   43e00:	sxtw	x0, w0
   43e04:	cmp	w21, w0
   43e08:	b.gt	44484 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x45e8>
   43e0c:	add	w21, w1, #0x1
   43e10:	mov	x0, x25
   43e14:	bl	48e0 <free@plt>
   43e18:	mov	x0, x24
   43e1c:	bl	48e0 <free@plt>
   43e20:	cbnz	x23, 43d00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3e64>
   43e24:	mov	x0, x19
   43e28:	bl	48e0 <free@plt>
   43e2c:	b	43d00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3e64>
   43e30:	mov	x19, x2
   43e34:	b	43d40 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3ea4>
   43e38:	add	x8, x24, #0x4
   43e3c:	mov	x6, #0xfe                  	// #254
   43e40:	mov	x9, #0xfffffffffffffffc    	// #-4
   43e44:	add	w0, w6, #0x1
   43e48:	lsl	w7, w6, #8
   43e4c:	orr	w0, w0, w6, lsl #8
   43e50:	mov	w2, #0xffffffff            	// #-1
   43e54:	mov	x1, #0x0                   	// #0
   43e58:	ldrsw	x10, [x25, w0, sxtw #2]
   43e5c:	ldr	w0, [x8, x6, lsl #2]
   43e60:	add	x10, x19, x10, lsl #2
   43e64:	add	x0, x9, w0, sxtw #2
   43e68:	add	x11, x19, x0
   43e6c:	cmp	x10, x11
   43e70:	b.ls	43e84 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3fe8>  // b.plast
   43e74:	sub	x6, x6, #0x1
   43e78:	cmn	x6, #0x1
   43e7c:	b.ne	43e44 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3fa8>  // b.any
   43e80:	b	43d94 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3ef8>
   43e84:	ldr	w0, [x11]
   43e88:	cmp	w0, #0x0
   43e8c:	b.le	43ff4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4158>
   43e90:	ldrb	w4, [x20, w0, sxtw]
   43e94:	sxtw	x3, w0
   43e98:	cmp	w4, w6
   43e9c:	b.eq	43ec4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4028>  // b.none
   43ea0:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43ea4:	add	x3, x3, #0xba4
   43ea8:	add	x3, x3, #0x835
   43eac:	mov	w2, #0x69e                 	// #1694
   43eb0:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43eb4:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43eb8:	add	x1, x1, #0xad8
   43ebc:	add	x0, x0, #0xb0f
   43ec0:	b	43f00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4064>
   43ec4:	add	w5, w0, #0x1
   43ec8:	cmp	w21, w5
   43ecc:	b.le	43ee0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4044>
   43ed0:	add	x3, x20, x3
   43ed4:	ldrb	w5, [x3, #1]
   43ed8:	cmp	w5, w4
   43edc:	b.cs	43f04 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4068>  // b.hs, b.nlast
   43ee0:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43ee4:	add	x3, x3, #0xba4
   43ee8:	add	x3, x3, #0x835
   43eec:	mov	w2, #0x69f                 	// #1695
   43ef0:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43ef4:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43ef8:	add	x1, x1, #0xad8
   43efc:	add	x0, x0, #0xb1a
   43f00:	bl	4a90 <__assert_fail@plt>
   43f04:	ldurb	w3, [x3, #-1]
   43f08:	cmp	w3, w4
   43f0c:	b.ls	43f34 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4098>  // b.plast
   43f10:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43f14:	add	x3, x3, #0xba4
   43f18:	add	x3, x3, #0x835
   43f1c:	mov	w2, #0x6a0                 	// #1696
   43f20:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43f24:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43f28:	add	x1, x1, #0xad8
   43f2c:	add	x0, x0, #0xb3e
   43f30:	b	43f00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4064>
   43f34:	sub	w4, w0, #0x1
   43f38:	sxtw	x5, w4
   43f3c:	ldrb	w3, [x20, w4, sxtw]
   43f40:	mvn	w12, w3
   43f44:	str	w12, [x11]
   43f48:	cbz	w4, 43f60 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x40c4>
   43f4c:	add	x5, x20, x5
   43f50:	ldurb	w5, [x5, #-1]
   43f54:	cmp	w5, w3
   43f58:	b.ls	43f60 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x40c4>  // b.plast
   43f5c:	neg	w4, w0
   43f60:	cmp	w3, w2
   43f64:	b.eq	43fb4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4118>  // b.none
   43f68:	tbnz	w2, #31, 43f7c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x40e0>
   43f6c:	orr	w2, w7, w2
   43f70:	sub	x1, x1, x19
   43f74:	asr	x1, x1, #2
   43f78:	str	w1, [x25, w2, sxtw #2]
   43f7c:	orr	w0, w7, w3
   43f80:	ldrsw	x1, [x25, w0, sxtw #2]
   43f84:	add	x1, x19, x1, lsl #2
   43f88:	cmp	x11, x1
   43f8c:	b.hi	43fe4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4148>  // b.pmore
   43f90:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43f94:	add	x3, x3, #0xba4
   43f98:	add	x3, x3, #0x835
   43f9c:	mov	w2, #0x6a8                 	// #1704
   43fa0:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43fa4:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43fa8:	add	x1, x1, #0xad8
   43fac:	add	x0, x0, #0xb4f
   43fb0:	b	43f00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4064>
   43fb4:	cmp	x11, x1
   43fb8:	b.ls	43f90 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x40f4>  // b.plast
   43fbc:	cbnz	x1, 43fe4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4148>
   43fc0:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43fc4:	add	x3, x3, #0xba4
   43fc8:	add	x3, x3, #0x835
   43fcc:	mov	w2, #0x6a8                 	// #1704
   43fd0:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43fd4:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   43fd8:	add	x1, x1, #0xad8
   43fdc:	add	x0, x0, #0xb55
   43fe0:	b	43f00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4064>
   43fe4:	mov	w2, w3
   43fe8:	str	w4, [x1], #-4
   43fec:	sub	x11, x11, #0x4
   43ff0:	b	43e6c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3fd0>
   43ff4:	b.eq	44004 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4168>  // b.none
   43ff8:	mvn	w0, w0
   43ffc:	str	w0, [x11]
   44000:	b	43fec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4150>
   44004:	ldrb	w3, [x20]
   44008:	cmp	w3, w6
   4400c:	b.eq	43fec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4150>  // b.none
   44010:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   44014:	add	x3, x3, #0xba4
   44018:	add	x3, x3, #0x835
   4401c:	mov	w2, #0x6ae                 	// #1710
   44020:	b	43eb0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4014>
   44024:	ldr	w2, [x3]
   44028:	cmp	w2, #0x0
   4402c:	b.le	440ec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4250>
   44030:	add	x4, x20, w2, sxtw
   44034:	ldurb	w5, [x4, #-1]
   44038:	ldrb	w4, [x20, w2, sxtw]
   4403c:	cmp	w5, w4
   44040:	b.cs	44068 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x41cc>  // b.hs, b.nlast
   44044:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   44048:	add	x3, x3, #0xba4
   4404c:	add	x3, x3, #0x835
   44050:	mov	w2, #0x6bc                 	// #1724
   44054:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   44058:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   4405c:	add	x1, x1, #0xad8
   44060:	add	x0, x0, #0xb85
   44064:	b	43f00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4064>
   44068:	sub	w2, w2, #0x1
   4406c:	sxtw	x5, w2
   44070:	ldrb	w4, [x20, w2, sxtw]
   44074:	str	w4, [x3]
   44078:	cbz	w2, 44090 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x41f4>
   4407c:	add	x5, x20, x5
   44080:	ldurb	w5, [x5, #-1]
   44084:	cmp	w4, w5
   44088:	b.ls	44090 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x41f4>  // b.plast
   4408c:	mvn	w2, w5
   44090:	cmp	w4, w6
   44094:	b.eq	440b0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4214>  // b.none
   44098:	sub	x1, x1, x19
   4409c:	asr	x1, x1, #2
   440a0:	str	w1, [x24, w6, sxtw #2]
   440a4:	ubfiz	x1, x4, #2, #8
   440a8:	ldrsw	x1, [x24, x1]
   440ac:	add	x1, x19, x1, lsl #2
   440b0:	cmp	x3, x1
   440b4:	b.cc	440dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4240>  // b.lo, b.ul, b.last
   440b8:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   440bc:	add	x3, x3, #0xba4
   440c0:	add	x3, x3, #0x835
   440c4:	mov	w2, #0x6c4                 	// #1732
   440c8:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   440cc:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   440d0:	add	x1, x1, #0xad8
   440d4:	add	x0, x0, #0xb96
   440d8:	b	43f00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4064>
   440dc:	mov	w6, w4
   440e0:	str	w2, [x1], #4
   440e4:	add	x3, x3, #0x4
   440e8:	b	43dc8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3f2c>
   440ec:	b.eq	440fc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4260>  // b.none
   440f0:	mvn	w2, w2
   440f4:	str	w2, [x3]
   440f8:	b	440e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4248>
   440fc:	mov	x0, x3
   44100:	b	440e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4248>
   44104:	asr	w6, w21, #4
   44108:	sub	w9, w21, #0x1
   4410c:	orr	w6, w6, w21, asr #3
   44110:	cmp	w0, #0x0
   44114:	orr	w6, w6, w6, asr #2
   44118:	orr	w6, w6, w6, asr #4
   4411c:	orr	w6, w6, w6, asr #8
   44120:	orr	w6, w6, w6, asr #16
   44124:	asr	w6, w6, #1
   44128:	add	w7, w6, #0x1
   4412c:	udiv	w4, w9, w7
   44130:	strb	w4, [x26]
   44134:	b.gt	44170 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x42d4>
   44138:	add	x0, x20, w21, sxtw
   4413c:	sxtw	x5, w21
   44140:	sub	x8, x5, #0x2
   44144:	ldurb	w3, [x0, #-1]
   44148:	ldurb	w0, [x0, #-1]
   4414c:	ldrb	w10, [x20, x8]
   44150:	cmp	w10, w3
   44154:	ldrsw	x1, [x24, x0, lsl #2]
   44158:	lsl	x2, x1, #2
   4415c:	add	x1, x19, x1, lsl #2
   44160:	add	x0, x1, #0x4
   44164:	b.cc	44328 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x448c>  // b.lo, b.ul, b.last
   44168:	str	w9, [x19, x2]
   4416c:	b	44348 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x44ac>
   44170:	add	x13, x24, #0x4
   44174:	mov	x5, #0xfe                  	// #254
   44178:	mov	x11, #0xfffffffffffffffc    	// #-4
   4417c:	add	w0, w5, #0x1
   44180:	ldr	w3, [x13, x5, lsl #2]
   44184:	orr	w0, w0, w5, lsl #8
   44188:	lsl	w12, w5, #8
   4418c:	mov	w8, #0xffffffff            	// #-1
   44190:	mov	x1, #0x0                   	// #0
   44194:	add	x3, x11, w3, sxtw #2
   44198:	ldrsw	x10, [x25, w0, sxtw #2]
   4419c:	add	x3, x19, x3
   441a0:	add	x10, x19, x10, lsl #2
   441a4:	cmp	x10, x3
   441a8:	b.ls	441bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4320>  // b.plast
   441ac:	sub	x5, x5, #0x1
   441b0:	cmn	x5, #0x1
   441b4:	b.ne	4417c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x42e0>  // b.any
   441b8:	b	44138 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x429c>
   441bc:	ldr	w0, [x3]
   441c0:	cmp	w0, #0x0
   441c4:	b.le	442f8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x445c>
   441c8:	ldrb	w14, [x20, w0, sxtw]
   441cc:	sxtw	x2, w0
   441d0:	cmp	w14, w5
   441d4:	b.eq	441ec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4350>  // b.none
   441d8:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   441dc:	add	x3, x3, #0xba4
   441e0:	add	x3, x3, #0x843
   441e4:	mov	w2, #0x6ef                 	// #1775
   441e8:	b	43eb0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4014>
   441ec:	add	w15, w0, #0x1
   441f0:	cmp	w21, w15
   441f4:	b.le	44208 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x436c>
   441f8:	add	x2, x20, x2
   441fc:	ldrb	w15, [x2, #1]
   44200:	cmp	w15, w14
   44204:	b.cs	4421c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4380>  // b.hs, b.nlast
   44208:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   4420c:	add	x3, x3, #0xba4
   44210:	add	x3, x3, #0x843
   44214:	mov	w2, #0x6f0                 	// #1776
   44218:	b	43ef0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4054>
   4421c:	ldurb	w2, [x2, #-1]
   44220:	cmp	w2, w14
   44224:	b.ls	4423c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x43a0>  // b.plast
   44228:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   4422c:	add	x3, x3, #0xba4
   44230:	add	x3, x3, #0x843
   44234:	mov	w2, #0x6f1                 	// #1777
   44238:	b	43f20 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4084>
   4423c:	tst	w6, w0
   44240:	b.ne	44258 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x43bc>  // b.any
   44244:	sdiv	w2, w0, w7
   44248:	sub	x14, x3, x19
   4424c:	asr	x14, x14, #2
   44250:	add	x2, x11, w2, sxtw #2
   44254:	str	w14, [x27, x2]
   44258:	sub	w15, w0, #0x1
   4425c:	sxtw	x2, w15
   44260:	ldrb	w14, [x20, w15, sxtw]
   44264:	mvn	w16, w14
   44268:	str	w16, [x3]
   4426c:	cbz	w15, 44284 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x43e8>
   44270:	add	x2, x20, x2
   44274:	ldurb	w2, [x2, #-1]
   44278:	cmp	w2, w14
   4427c:	b.ls	44284 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x43e8>  // b.plast
   44280:	neg	w15, w0
   44284:	cmp	w14, w8
   44288:	b.eq	442c8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x442c>  // b.none
   4428c:	tbnz	w8, #31, 442a0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   44290:	orr	w8, w12, w8
   44294:	sub	x1, x1, x19
   44298:	asr	x1, x1, #2
   4429c:	str	w1, [x25, w8, sxtw #2]
   442a0:	orr	w0, w12, w14
   442a4:	ldrsw	x1, [x25, w0, sxtw #2]
   442a8:	add	x1, x19, x1, lsl #2
   442ac:	cmp	x3, x1
   442b0:	b.hi	442e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x444c>  // b.pmore
   442b4:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   442b8:	add	x3, x3, #0xba4
   442bc:	add	x3, x3, #0x843
   442c0:	mov	w2, #0x6fc                 	// #1788
   442c4:	b	43fa0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4104>
   442c8:	cmp	x3, x1
   442cc:	b.ls	442b4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4418>  // b.plast
   442d0:	cbnz	x1, 442e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x444c>
   442d4:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   442d8:	add	x3, x3, #0xba4
   442dc:	add	x3, x3, #0x843
   442e0:	mov	w2, #0x6fc                 	// #1788
   442e4:	b	43fd0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4134>
   442e8:	mov	w8, w14
   442ec:	str	w15, [x1], #-4
   442f0:	sub	x3, x3, #0x4
   442f4:	b	441a4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4308>
   442f8:	b.eq	44308 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x446c>  // b.none
   442fc:	mvn	w0, w0
   44300:	str	w0, [x3]
   44304:	b	442f0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4454>
   44308:	ldrb	w0, [x20]
   4430c:	cmp	w0, w5
   44310:	b.eq	442f0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4454>  // b.none
   44314:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   44318:	add	x3, x3, #0xba4
   4431c:	add	x3, x3, #0x843
   44320:	mov	w2, #0x702                 	// #1794
   44324:	b	43eb0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4014>
   44328:	tst	w6, w9
   4432c:	b.ne	4433c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x44a0>  // b.any
   44330:	add	x4, x27, w4, sxtw #2
   44334:	asr	x2, x2, #2
   44338:	stur	w2, [x4, #-4]
   4433c:	ldrb	w2, [x20, x8]
   44340:	mvn	w2, w2
   44344:	str	w2, [x1]
   44348:	add	x5, x19, x5, lsl #2
   4434c:	mov	x1, x19
   44350:	mov	x2, x19
   44354:	mov	x9, #0xfffffffffffffffc    	// #-4
   44358:	cmp	x5, x2
   4435c:	b.hi	44368 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x44cc>  // b.pmore
   44360:	sub	x1, x1, x19
   44364:	b	43dd4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3f38>
   44368:	ldr	w4, [x2]
   4436c:	cmp	w4, #0x0
   44370:	b.le	4445c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x45c0>
   44374:	add	x8, x20, w4, sxtw
   44378:	ldurb	w10, [x8, #-1]
   4437c:	ldrb	w8, [x20, w4, sxtw]
   44380:	cmp	w10, w8
   44384:	b.cs	4439c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4500>  // b.hs, b.nlast
   44388:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   4438c:	add	x3, x3, #0xba4
   44390:	add	x3, x3, #0x843
   44394:	mov	w2, #0x717                 	// #1815
   44398:	b	44054 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x41b8>
   4439c:	tst	w6, w4
   443a0:	b.ne	443b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x451c>  // b.any
   443a4:	sdiv	w8, w4, w7
   443a8:	sub	x10, x2, x19
   443ac:	asr	x10, x10, #2
   443b0:	add	x8, x9, w8, sxtw #2
   443b4:	str	w10, [x27, x8]
   443b8:	sub	w4, w4, #0x1
   443bc:	sxtw	x8, w4
   443c0:	ldrb	w10, [x20, w4, sxtw]
   443c4:	str	w10, [x2]
   443c8:	cmp	w10, w3
   443cc:	b.eq	443e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x454c>  // b.none
   443d0:	sub	x0, x0, x19
   443d4:	asr	x0, x0, #2
   443d8:	str	w0, [x24, w3, sxtw #2]
   443dc:	ubfiz	x0, x10, #2, #8
   443e0:	ldrsw	x0, [x24, x0]
   443e4:	add	x0, x19, x0, lsl #2
   443e8:	cmp	x2, x0
   443ec:	b.cc	44404 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4568>  // b.lo, b.ul, b.last
   443f0:	adrp	x3, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   443f4:	add	x3, x3, #0xba4
   443f8:	add	x3, x3, #0x843
   443fc:	mov	w2, #0x721                 	// #1825
   44400:	b	440c8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x422c>
   44404:	add	x11, x0, #0x4
   44408:	cbz	w4, 44454 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x45b8>
   4440c:	sub	x3, x8, #0x1
   44410:	ldrb	w8, [x20, x3]
   44414:	cmp	w8, w10
   44418:	b.cs	44454 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x45b8>  // b.hs, b.nlast
   4441c:	tst	w6, w4
   44420:	b.ne	44438 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x459c>  // b.any
   44424:	udiv	w4, w4, w7
   44428:	sub	x8, x0, x19
   4442c:	asr	x8, x8, #2
   44430:	add	x4, x9, w4, sxtw #2
   44434:	str	w8, [x27, x4]
   44438:	ldrb	w3, [x20, x3]
   4443c:	mvn	w3, w3
   44440:	str	w3, [x0]
   44444:	mov	w3, w10
   44448:	mov	x0, x11
   4444c:	add	x2, x2, #0x4
   44450:	b	44358 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x44bc>
   44454:	str	w4, [x0]
   44458:	b	44444 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x45a8>
   4445c:	b.eq	4446c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x45d0>  // b.none
   44460:	mvn	w4, w4
   44464:	str	w4, [x2]
   44468:	b	4444c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x45b0>
   4446c:	mov	x1, x2
   44470:	b	4444c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x45b0>
   44474:	ldr	w3, [x19, x0, lsl #2]
   44478:	strb	w3, [x2, x0]
   4447c:	add	x0, x0, #0x1
   44480:	b	43dec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3f50>
   44484:	ldr	w2, [x19, x0, lsl #2]
   44488:	strb	w2, [x22, x0]
   4448c:	add	x0, x0, #0x1
   44490:	b	43e04 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3f68>
   44494:	mov	w21, #0xfffffffe            	// #-2
   44498:	b	43e10 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3f74>
   4449c:	mov	w21, #0xffffffff            	// #-1
   444a0:	b	43d00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3e64>
   444a4:	mov	w21, #0x0                   	// #0
   444a8:	b	43d00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3e64>
   444ac:	stp	x29, x30, [sp, #-32]!
   444b0:	mov	x29, sp
   444b4:	str	x19, [sp, #16]
   444b8:	mov	x19, x0
   444bc:	ldr	x0, [x0, #56]
   444c0:	bl	48e0 <free@plt>
   444c4:	str	xzr, [x19, #56]
   444c8:	ldr	x0, [x19, #8]
   444cc:	bl	48e0 <free@plt>
   444d0:	str	xzr, [x19, #8]
   444d4:	ldr	x19, [sp, #16]
   444d8:	ldp	x29, x30, [sp], #32
   444dc:	ret
   444e0:	mov	w3, #0x1                   	// #1
   444e4:	mov	x5, #0x6463                	// #25699
   444e8:	lsl	w3, w3, w1
   444ec:	sub	w3, w3, #0x1
   444f0:	movk	x5, #0xb7a5, lsl #16
   444f4:	cmp	w2, #0x6
   444f8:	sxtw	x4, w3
   444fc:	movk	x5, #0xbcdc, lsl #32
   44500:	ldr	x3, [x0]
   44504:	mov	w0, #0x40                  	// #64
   44508:	sub	w1, w0, w1
   4450c:	mov	x0, #0xbf9b0000            	// #3214606336
   44510:	movk	x0, #0xbcdc, lsl #32
   44514:	movk	x5, #0xcf1b, lsl #48
   44518:	movk	x0, #0xcf1b, lsl #48
   4451c:	mul	x0, x3, x0
   44520:	mul	x3, x3, x5
   44524:	lsr	x0, x0, x1
   44528:	and	x0, x0, x4
   4452c:	lsr	x3, x3, x1
   44530:	and	x3, x3, x4
   44534:	csel	x0, x3, x0, ne  // ne = any
   44538:	ret
   4453c:	stp	x29, x30, [sp, #-128]!
   44540:	mov	x29, sp
   44544:	stp	x21, x22, [sp, #32]
   44548:	mov	x21, x0
   4454c:	sub	w0, w5, #0x1
   44550:	stp	x25, x26, [sp, #64]
   44554:	mov	x25, x1
   44558:	ldr	w1, [x21, #48]
   4455c:	stp	x23, x24, [sp, #48]
   44560:	mov	x24, x3
   44564:	mov	x22, x6
   44568:	mov	w3, #0x1                   	// #1
   4456c:	stp	x19, x20, [sp, #16]
   44570:	mov	w20, w5
   44574:	stp	x27, x28, [sp, #80]
   44578:	mov	w27, w4
   4457c:	str	x2, [sp, #112]
   44580:	mov	w2, w4
   44584:	str	w0, [sp, #120]
   44588:	mov	w0, w24
   4458c:	bl	3efe4 <ZBUFF_recommendedDOutSize@@Base+0x744>
   44590:	lsr	x3, x0, #32
   44594:	mov	x2, x0
   44598:	stp	w3, w0, [sp, #104]
   4459c:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   445a0:	str	x0, [sp, #96]
   445a4:	ldr	w1, [x0, #948]
   445a8:	cmp	w1, #0x1
   445ac:	b.le	445d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4734>
   445b0:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   445b4:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   445b8:	add	x1, x1, #0x8f0
   445bc:	ldr	x19, [x19, #4048]
   445c0:	ldr	x0, [x19]
   445c4:	bl	4b40 <fprintf@plt>
   445c8:	ldr	x0, [x19]
   445cc:	bl	4970 <fflush@plt>
   445d0:	sub	w27, w27, w20
   445d4:	mov	x19, x24
   445d8:	add	w0, w27, #0x2
   445dc:	mov	x23, #0x0                   	// #0
   445e0:	mov	x9, #0x0                   	// #0
   445e4:	str	w0, [sp, #124]
   445e8:	cbnz	x19, 44644 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x47a8>
   445ec:	ldr	x0, [sp, #96]
   445f0:	ldr	w0, [x0, #948]
   445f4:	cmp	w0, #0x1
   445f8:	b.le	44624 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4788>
   445fc:	adrp	x20, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   44600:	adrp	x2, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   44604:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   44608:	add	x2, x2, #0x605
   4460c:	ldr	x20, [x20, #4048]
   44610:	add	x1, x1, #0x929
   44614:	ldr	x0, [x20]
   44618:	bl	4b40 <fprintf@plt>
   4461c:	ldr	x0, [x20]
   44620:	bl	4970 <fflush@plt>
   44624:	mov	x0, x19
   44628:	ldp	x19, x20, [sp, #16]
   4462c:	ldp	x21, x22, [sp, #32]
   44630:	ldp	x23, x24, [sp, #48]
   44634:	ldp	x25, x26, [sp, #64]
   44638:	ldp	x27, x28, [sp, #80]
   4463c:	ldp	x29, x30, [sp], #128
   44640:	ret
   44644:	ldr	w0, [sp, #104]
   44648:	mov	w7, #0x0                   	// #0
   4464c:	ldr	w14, [x21, #68]
   44650:	mov	w10, #0x0                   	// #0
   44654:	mov	w11, #0x0                   	// #0
   44658:	mov	w8, #0x0                   	// #0
   4465c:	mul	w13, w0, w23
   44660:	mov	x6, x13
   44664:	add	w12, w0, w13
   44668:	mov	w15, w13
   4466c:	cmp	w12, w13
   44670:	b.hi	446ac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4810>  // b.pmore
   44674:	cmp	w12, w6
   44678:	b.hi	44740 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x48a4>  // b.pmore
   4467c:	mov	w6, w8
   44680:	cmp	w6, w11
   44684:	b.ne	4476c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x48d0>  // b.any
   44688:	cbnz	w10, 4478c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x48f0>
   4468c:	add	x9, x9, #0x1
   44690:	cmp	x9, #0x9
   44694:	b.hi	445ec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4750>  // b.pmore
   44698:	ldr	w0, [sp, #108]
   4469c:	add	x23, x23, #0x1
   446a0:	udiv	x1, x23, x0
   446a4:	msub	x23, x1, x0, x23
   446a8:	b	445e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x474c>
   446ac:	ldr	x18, [x21]
   446b0:	mov	w1, w14
   446b4:	mov	w2, w20
   446b8:	add	x0, x18, x13
   446bc:	bl	444e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4644>
   446c0:	ldrh	w1, [x22, x0, lsl #1]
   446c4:	lsl	x2, x0, #1
   446c8:	cbnz	w1, 446d4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4838>
   446cc:	ldr	w0, [x25, x0, lsl #2]
   446d0:	add	w7, w7, w0
   446d4:	add	w1, w1, #0x1
   446d8:	add	w15, w15, #0x1
   446dc:	strh	w1, [x22, x2]
   446e0:	sub	w0, w15, w6
   446e4:	ldr	w1, [sp, #124]
   446e8:	cmp	w0, w1
   446ec:	b.ne	44724 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4888>  // b.any
   446f0:	mov	w1, w14
   446f4:	mov	w2, w20
   446f8:	add	x0, x18, w6, uxtw
   446fc:	bl	444e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4644>
   44700:	lsl	x1, x0, #1
   44704:	ldrh	w2, [x22, x1]
   44708:	sub	w2, w2, #0x1
   4470c:	and	w2, w2, #0xffff
   44710:	strh	w2, [x22, x1]
   44714:	cbnz	w2, 44720 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4884>
   44718:	ldr	w0, [x25, x0, lsl #2]
   4471c:	sub	w7, w7, w0
   44720:	add	w6, w6, #0x1
   44724:	cmp	w10, w7
   44728:	b.cs	44738 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x489c>  // b.hs, b.nlast
   4472c:	mov	w10, w7
   44730:	mov	w11, w15
   44734:	mov	w8, w6
   44738:	add	x13, x13, #0x1
   4473c:	b	44668 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x47cc>
   44740:	ldr	x0, [x21]
   44744:	mov	w1, w14
   44748:	mov	w2, w20
   4474c:	add	x0, x0, x6
   44750:	bl	444e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4644>
   44754:	lsl	x0, x0, #1
   44758:	add	x6, x6, #0x1
   4475c:	ldrh	w1, [x22, x0]
   44760:	sub	w1, w1, #0x1
   44764:	strh	w1, [x22, x0]
   44768:	b	44674 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x47d8>
   4476c:	ldr	x0, [x21]
   44770:	mov	w2, w20
   44774:	mov	w1, w14
   44778:	add	x0, x0, w6, uxtw
   4477c:	bl	444e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4644>
   44780:	add	w6, w6, #0x1
   44784:	str	wzr, [x25, x0, lsl #2]
   44788:	b	44680 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x47e4>
   4478c:	ldr	w0, [sp, #120]
   44790:	add	w2, w6, w0
   44794:	sub	w2, w2, w8
   44798:	cmp	x2, x19
   4479c:	csel	x26, x2, x19, ls  // ls = plast
   447a0:	cmp	x26, w20, uxtw
   447a4:	b.cc	445ec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4750>  // b.lo, b.ul, b.last
   447a8:	ldr	x0, [sp, #96]
   447ac:	sub	x27, x19, x26
   447b0:	ldr	x1, [x21]
   447b4:	mov	x2, x26
   447b8:	ldr	w28, [x0, #948]
   447bc:	ldr	x0, [sp, #112]
   447c0:	add	x1, x1, w8, uxtw
   447c4:	add	x0, x0, x27
   447c8:	bl	4460 <memcpy@plt>
   447cc:	cmp	w28, #0x1
   447d0:	b.le	4483c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x49a0>
   447d4:	bl	44c0 <clock@plt>
   447d8:	adrp	x1, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   447dc:	mov	x2, #0x49f0                	// #18928
   447e0:	movk	x2, #0x2, lsl #16
   447e4:	ldr	x3, [x1, #984]
   447e8:	sub	x0, x0, x3
   447ec:	cmp	x0, x2
   447f0:	b.gt	447fc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4960>
   447f4:	cmp	w28, #0x3
   447f8:	b.le	4483c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x49a0>
   447fc:	bl	44c0 <clock@plt>
   44800:	sub	x19, x24, x19
   44804:	add	x2, x19, x26
   44808:	mov	x19, #0x64                  	// #100
   4480c:	adrp	x1, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   44810:	mul	x2, x2, x19
   44814:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   44818:	str	x0, [x1, #984]
   4481c:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   44820:	ldr	x19, [x19, #4048]
   44824:	add	x1, x1, #0x91c
   44828:	udiv	x2, x2, x24
   4482c:	ldr	x0, [x19]
   44830:	bl	4b40 <fprintf@plt>
   44834:	ldr	x0, [x19]
   44838:	bl	4970 <fflush@plt>
   4483c:	mov	x19, x27
   44840:	mov	x9, #0x0                   	// #0
   44844:	b	44698 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x47fc>
   44848:	sub	sp, sp, #0x130
   4484c:	add	x7, sp, #0x100
   44850:	stp	x29, x30, [sp, #16]
   44854:	add	x29, sp, #0x10
   44858:	stp	x19, x20, [sp, #32]
   4485c:	mov	x20, x0
   44860:	ldr	x19, [x0], #24
   44864:	stp	x27, x28, [sp, #96]
   44868:	add	x27, sp, #0xe8
   4486c:	ldp	x2, x3, [x20, #24]
   44870:	stp	x2, x3, [sp, #256]
   44874:	ldp	x2, x3, [x0, #16]
   44878:	stp	x2, x3, [sp, #272]
   4487c:	ldp	x0, x1, [x0, #32]
   44880:	stp	x0, x1, [sp, #288]
   44884:	ldr	w0, [x19, #68]
   44888:	mov	x2, #0x1                   	// #1
   4488c:	stp	x21, x22, [sp, #48]
   44890:	mov	x1, #0x2                   	// #2
   44894:	ldr	x28, [x20, #16]
   44898:	lsl	x0, x2, x0
   4489c:	stp	x23, x24, [sp, #64]
   448a0:	add	x24, sp, #0x90
   448a4:	stp	x25, x26, [sp, #80]
   448a8:	ldp	w26, w25, [x20, #24]
   448ac:	str	x7, [sp, #136]
   448b0:	bl	4760 <calloc@plt>
   448b4:	mov	x23, x0
   448b8:	mov	x0, x28
   448bc:	bl	46a0 <malloc@plt>
   448c0:	mov	x8, x27
   448c4:	mov	x21, x0
   448c8:	mov	x0, #0xffffffffffffffff    	// #-1
   448cc:	bl	3f924 <ZDICT_trainFromBuffer_cover@@Base+0x50c>
   448d0:	ldr	w0, [x19, #68]
   448d4:	mov	x2, #0x4                   	// #4
   448d8:	lsl	x2, x2, x0
   448dc:	mov	x0, x2
   448e0:	str	x2, [sp, #128]
   448e4:	bl	46a0 <malloc@plt>
   448e8:	mov	x22, x0
   448ec:	add	x1, sp, #0xb0
   448f0:	str	x1, [sp, #120]
   448f4:	cmp	x23, #0x0
   448f8:	ccmp	x21, #0x0, #0x4, ne  // ne = any
   448fc:	b.eq	44908 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4a6c>  // b.none
   44900:	ldp	x2, x7, [sp, #128]
   44904:	cbnz	x0, 449cc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4b30>
   44908:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   4490c:	ldr	w0, [x0, #948]
   44910:	cmp	w0, #0x0
   44914:	b.le	44938 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4a9c>
   44918:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   4491c:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   44920:	add	x0, x0, #0xa01
   44924:	ldr	x19, [x19, #4048]
   44928:	ldr	x1, [x19]
   4492c:	bl	44d0 <fputs@plt>
   44930:	ldr	x0, [x19]
   44934:	bl	4970 <fflush@plt>
   44938:	mov	x0, x21
   4493c:	bl	48e0 <free@plt>
   44940:	str	w26, [sp, #256]
   44944:	mov	x2, x24
   44948:	str	w25, [sp, #260]
   4494c:	ldp	x0, x1, [sp, #256]
   44950:	stp	x0, x1, [sp, #176]
   44954:	ldp	x0, x1, [sp, #272]
   44958:	stp	x0, x1, [sp, #192]
   4495c:	ldp	x0, x1, [sp, #288]
   44960:	stp	x0, x1, [sp, #208]
   44964:	ldp	x0, x1, [sp, #232]
   44968:	stp	x0, x1, [sp, #144]
   4496c:	ldr	x0, [sp, #248]
   44970:	str	x0, [sp, #160]
   44974:	ldr	x0, [x20, #8]
   44978:	ldr	x1, [sp, #120]
   4497c:	bl	3f860 <ZDICT_trainFromBuffer_cover@@Base+0x448>
   44980:	mov	x0, x20
   44984:	bl	48e0 <free@plt>
   44988:	mov	x0, x23
   4498c:	bl	48e0 <free@plt>
   44990:	ldp	x0, x1, [sp, #232]
   44994:	stp	x0, x1, [sp, #144]
   44998:	ldr	x0, [sp, #248]
   4499c:	str	x0, [sp, #160]
   449a0:	mov	x0, x24
   449a4:	bl	3f954 <ZDICT_trainFromBuffer_cover@@Base+0x53c>
   449a8:	mov	x0, x22
   449ac:	ldp	x29, x30, [sp, #16]
   449b0:	ldp	x19, x20, [sp, #32]
   449b4:	ldp	x21, x22, [sp, #48]
   449b8:	ldp	x23, x24, [sp, #64]
   449bc:	ldp	x25, x26, [sp, #80]
   449c0:	ldp	x27, x28, [sp, #96]
   449c4:	add	sp, sp, #0x130
   449c8:	b	48e0 <free@plt>
   449cc:	ldr	x1, [x19, #56]
   449d0:	str	x7, [sp, #128]
   449d4:	bl	4460 <memcpy@plt>
   449d8:	mov	x6, x23
   449dc:	mov	w5, w25
   449e0:	mov	w4, w26
   449e4:	mov	x3, x28
   449e8:	mov	x2, x21
   449ec:	mov	x1, x22
   449f0:	mov	x0, x19
   449f4:	bl	4453c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x46a0>
   449f8:	ldr	x7, [sp, #128]
   449fc:	str	w26, [sp, #256]
   44a00:	str	w25, [sp, #260]
   44a04:	mov	x4, #0xffffffffffffffff    	// #-1
   44a08:	ldr	w1, [x19, #72]
   44a0c:	ldp	x8, x9, [x7]
   44a10:	ldr	x5, [x19, #32]
   44a14:	ldp	x2, x10, [x19]
   44a18:	ldp	x3, x6, [x19, #16]
   44a1c:	stp	x8, x9, [sp, #176]
   44a20:	mul	x1, x1, x5
   44a24:	ldp	x8, x9, [x7, #16]
   44a28:	stp	x8, x9, [sp, #192]
   44a2c:	ldp	x8, x9, [x7, #32]
   44a30:	stp	x10, x4, [sp]
   44a34:	mov	x4, #0x64                  	// #100
   44a38:	ldr	x7, [sp, #120]
   44a3c:	stp	x8, x9, [sp, #208]
   44a40:	mov	x8, x27
   44a44:	udiv	x4, x1, x4
   44a48:	sub	x1, x28, x0
   44a4c:	add	x0, x21, x0
   44a50:	bl	3f95c <ZDICT_trainFromBuffer_cover@@Base+0x544>
   44a54:	ldp	x0, x1, [x27]
   44a58:	stp	x0, x1, [sp, #144]
   44a5c:	ldr	x0, [x27, #16]
   44a60:	str	x0, [sp, #160]
   44a64:	mov	x0, x24
   44a68:	bl	3f930 <ZDICT_trainFromBuffer_cover@@Base+0x518>
   44a6c:	cbz	w0, 44938 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4a9c>
   44a70:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   44a74:	ldr	w0, [x0, #948]
   44a78:	cmp	w0, #0x0
   44a7c:	b.le	44938 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4a9c>
   44a80:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   44a84:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   44a88:	add	x0, x0, #0xa2c
   44a8c:	ldr	x19, [x19, #4048]
   44a90:	ldr	x1, [x19]
   44a94:	b	4492c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4a90>
   44a98:	stp	x29, x30, [sp, #-144]!
   44a9c:	mov	x29, sp
   44aa0:	str	d8, [sp, #96]
   44aa4:	fmov	d8, d0
   44aa8:	stp	x19, x20, [sp, #16]
   44aac:	mov	w19, w3
   44ab0:	stp	x21, x22, [sp, #32]
   44ab4:	mov	x21, x2
   44ab8:	stp	x23, x24, [sp, #48]
   44abc:	stp	x25, x26, [sp, #64]
   44ac0:	mov	w25, w4
   44ac4:	stp	x27, x28, [sp, #80]
   44ac8:	mov	x28, x0
   44acc:	mov	x0, x2
   44ad0:	str	w5, [sp, #116]
   44ad4:	stp	x1, x6, [sp, #120]
   44ad8:	mov	w1, w3
   44adc:	bl	3eaf4 <ZBUFF_recommendedDOutSize@@Base+0x254>
   44ae0:	fmov	d0, #1.000000000000000000e+00
   44ae4:	mov	x23, x0
   44ae8:	fcmpe	d8, d0
   44aec:	b.pl	44b80 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4ce4>  // b.nfrst
   44af0:	ucvtf	d0, w19
   44af4:	mov	x0, x21
   44af8:	fmul	d8, d0, d8
   44afc:	fcvtzu	w27, d8
   44b00:	mov	w1, w27
   44b04:	sub	w22, w19, w27
   44b08:	bl	3eaf4 <ZBUFF_recommendedDOutSize@@Base+0x254>
   44b0c:	mov	x26, x0
   44b10:	mov	w1, w22
   44b14:	add	x0, x21, w27, uxtw #3
   44b18:	bl	3eaf4 <ZBUFF_recommendedDOutSize@@Base+0x254>
   44b1c:	mov	x5, x0
   44b20:	cmp	w25, #0x8
   44b24:	adrp	x24, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   44b28:	mov	w20, #0x8                   	// #8
   44b2c:	csel	w20, w25, w20, cs  // cs = hs, nlast
   44b30:	ldr	w0, [x24, #948]
   44b34:	cmp	x20, x23
   44b38:	b.hi	44b48 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4cac>  // b.pmore
   44b3c:	mov	x1, #0xfffffffe            	// #4294967294
   44b40:	cmp	x23, x1
   44b44:	b.ls	44b94 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4cf8>  // b.plast
   44b48:	cmp	w0, #0x0
   44b4c:	b.le	44b78 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4cdc>
   44b50:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   44b54:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   44b58:	ubfx	x2, x23, #20, #32
   44b5c:	add	x1, x1, #0x67c
   44b60:	ldr	x19, [x19, #4048]
   44b64:	mov	w3, #0xfff                 	// #4095
   44b68:	ldr	x0, [x19]
   44b6c:	bl	4b40 <fprintf@plt>
   44b70:	ldr	x0, [x19]
   44b74:	bl	4970 <fflush@plt>
   44b78:	mov	x0, #0xffffffffffffffb8    	// #-72
   44b7c:	b	44db4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4f18>
   44b80:	mov	x26, x0
   44b84:	mov	w22, w19
   44b88:	mov	w27, w19
   44b8c:	mov	x5, x0
   44b90:	b	44b20 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4c84>
   44b94:	cmp	w27, #0x4
   44b98:	b.hi	44bc4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4d28>  // b.pmore
   44b9c:	cmp	w0, #0x0
   44ba0:	b.le	44b78 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4cdc>
   44ba4:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   44ba8:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   44bac:	mov	w2, w27
   44bb0:	add	x1, x1, #0x3fd
   44bb4:	ldr	x19, [x19, #4048]
   44bb8:	ldr	x0, [x19]
   44bbc:	bl	4b40 <fprintf@plt>
   44bc0:	b	44b70 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4cd4>
   44bc4:	cbnz	w22, 44be8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4d4c>
   44bc8:	cmp	w0, #0x0
   44bcc:	b.le	44b78 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4cdc>
   44bd0:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   44bd4:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   44bd8:	mov	w2, #0x0                   	// #0
   44bdc:	add	x1, x1, #0x434
   44be0:	ldr	x19, [x19, #4048]
   44be4:	b	44bb8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4d1c>
   44be8:	stp	xzr, xzr, [x28]
   44bec:	cmp	w0, #0x1
   44bf0:	stp	xzr, xzr, [x28, #16]
   44bf4:	stp	xzr, xzr, [x28, #32]
   44bf8:	stp	xzr, xzr, [x28, #48]
   44bfc:	stp	xzr, xzr, [x28, #64]
   44c00:	str	x5, [sp, #136]
   44c04:	b.le	44c60 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4dc4>
   44c08:	adrp	x23, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   44c0c:	mov	w3, w26
   44c10:	mov	w2, w27
   44c14:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   44c18:	ldr	x23, [x23, #4048]
   44c1c:	add	x1, x1, #0x729
   44c20:	ldr	x0, [x23]
   44c24:	bl	4b40 <fprintf@plt>
   44c28:	ldr	x0, [x23]
   44c2c:	bl	4970 <fflush@plt>
   44c30:	ldr	w0, [x24, #948]
   44c34:	cmp	w0, #0x1
   44c38:	b.le	44c60 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4dc4>
   44c3c:	ldr	x0, [x23]
   44c40:	mov	w2, w22
   44c44:	ldr	x5, [sp, #136]
   44c48:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   44c4c:	add	x1, x1, #0x752
   44c50:	mov	w3, w5
   44c54:	bl	4b40 <fprintf@plt>
   44c58:	ldr	x0, [x23]
   44c5c:	bl	4970 <fflush@plt>
   44c60:	ldr	x0, [sp, #120]
   44c64:	str	x0, [x28]
   44c68:	mov	w0, w19
   44c6c:	str	x0, [x28, #24]
   44c70:	ldr	w0, [sp, #116]
   44c74:	mov	w4, w27
   44c78:	stp	x4, x22, [x28, #32]
   44c7c:	mov	x22, #0x1                   	// #1
   44c80:	sub	x20, x22, x20
   44c84:	str	w0, [x28, #68]
   44c88:	add	x26, x20, x26
   44c8c:	ldr	x0, [sp, #128]
   44c90:	str	x21, [x28, #16]
   44c94:	str	x26, [x28, #48]
   44c98:	mov	x1, #0x8                   	// #8
   44c9c:	str	w25, [x28, #64]
   44ca0:	str	x0, [x28, #72]
   44ca4:	add	w0, w19, #0x1
   44ca8:	bl	4760 <calloc@plt>
   44cac:	str	x0, [x28, #8]
   44cb0:	ldr	w20, [x24, #948]
   44cb4:	cbnz	x0, 44cf0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4e54>
   44cb8:	cmp	w20, #0x0
   44cbc:	b.le	44ce0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4e44>
   44cc0:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   44cc4:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   44cc8:	add	x0, x0, #0x46b
   44ccc:	ldr	x19, [x19, #4048]
   44cd0:	ldr	x1, [x19]
   44cd4:	bl	44d0 <fputs@plt>
   44cd8:	ldr	x0, [x19]
   44cdc:	bl	4970 <fflush@plt>
   44ce0:	mov	x0, x28
   44ce4:	bl	444ac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4610>
   44ce8:	mov	x0, #0xffffffffffffffc0    	// #-64
   44cec:	b	44db4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4f18>
   44cf0:	mov	w1, w22
   44cf4:	str	xzr, [x0]
   44cf8:	cmp	w1, w19
   44cfc:	b.ls	44d3c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4ea0>  // b.plast
   44d00:	ldrb	w2, [sp, #116]
   44d04:	mov	x0, #0x1                   	// #1
   44d08:	mov	x1, #0x4                   	// #4
   44d0c:	lsl	x0, x0, x2
   44d10:	bl	4760 <calloc@plt>
   44d14:	str	x0, [x28, #56]
   44d18:	cbnz	x0, 44d5c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4ec0>
   44d1c:	cmp	w20, #0x0
   44d20:	b.le	44ce0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4e44>
   44d24:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   44d28:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   44d2c:	add	x0, x0, #0x490
   44d30:	ldr	x19, [x19, #4048]
   44d34:	ldr	x1, [x19]
   44d38:	b	44cd4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4e38>
   44d3c:	sub	w2, w1, #0x1
   44d40:	lsl	x2, x2, #3
   44d44:	ldr	x3, [x0, x2]
   44d48:	ldr	x2, [x21, x2]
   44d4c:	add	x2, x3, x2
   44d50:	str	x2, [x0, w1, uxtw #3]
   44d54:	add	w1, w1, #0x1
   44d58:	b	44cf8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4e5c>
   44d5c:	cmp	w20, #0x1
   44d60:	b.le	44d84 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4ee8>
   44d64:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   44d68:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   44d6c:	add	x0, x0, #0x7c1
   44d70:	ldr	x19, [x19, #4048]
   44d74:	ldr	x1, [x19]
   44d78:	bl	44d0 <fputs@plt>
   44d7c:	ldr	x0, [x19]
   44d80:	bl	4970 <fflush@plt>
   44d84:	ldp	w2, w13, [x28, #64]
   44d88:	mov	w9, #0x8                   	// #8
   44d8c:	ldr	w10, [x28, #76]
   44d90:	mov	x6, #0x0                   	// #0
   44d94:	cmp	w2, #0x8
   44d98:	ldr	x12, [x28, #32]
   44d9c:	csel	w9, w2, w9, cs  // cs = hs, nlast
   44da0:	ldr	x11, [x28, #56]
   44da4:	add	x10, x10, #0x1
   44da8:	cmp	x6, x12
   44dac:	b.ne	44dd4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4f38>  // b.any
   44db0:	mov	x0, #0x0                   	// #0
   44db4:	ldp	x19, x20, [sp, #16]
   44db8:	ldp	x21, x22, [sp, #32]
   44dbc:	ldp	x23, x24, [sp, #48]
   44dc0:	ldp	x25, x26, [sp, #64]
   44dc4:	ldp	x27, x28, [sp, #80]
   44dc8:	ldr	d8, [sp, #96]
   44dcc:	ldp	x29, x30, [sp], #144
   44dd0:	ret
   44dd4:	ldr	x0, [x28, #8]
   44dd8:	lsl	x3, x6, #3
   44ddc:	add	x6, x6, #0x1
   44de0:	ldr	x8, [x0, x3]
   44de4:	add	x0, x0, x3
   44de8:	ldr	x14, [x0, #8]
   44dec:	add	x0, x9, x8
   44df0:	cmp	x0, x14
   44df4:	b.hi	44da8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4f0c>  // b.pmore
   44df8:	ldr	x0, [x28]
   44dfc:	mov	w1, w13
   44e00:	add	x0, x0, x8
   44e04:	bl	444e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4644>
   44e08:	lsl	x0, x0, #2
   44e0c:	add	x8, x8, x10
   44e10:	ldr	w3, [x11, x0]
   44e14:	add	w3, w3, #0x1
   44e18:	str	w3, [x11, x0]
   44e1c:	b	44dec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4f50>

0000000000044e20 <ZDICT_trainFromBuffer_fastCover@@Base>:
   44e20:	sub	sp, sp, #0xf0
   44e24:	fmov	d0, #1.000000000000000000e+00
   44e28:	stp	x29, x30, [sp, #16]
   44e2c:	add	x29, sp, #0x10
   44e30:	ldur	x7, [x5, #12]
   44e34:	stp	x27, x28, [sp, #96]
   44e38:	ldr	w27, [x5, #8]
   44e3c:	stp	x23, x24, [sp, #64]
   44e40:	mov	x24, x2
   44e44:	cmp	w27, #0x0
   44e48:	ldp	w23, w28, [x5]
   44e4c:	mov	w2, #0x14                  	// #20
   44e50:	stp	x21, x22, [sp, #48]
   44e54:	adrp	x21, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   44e58:	mov	x22, x0
   44e5c:	csel	w27, w27, w2, ne  // ne = any
   44e60:	ldr	w0, [x5, #32]
   44e64:	ldr	w2, [x5, #36]
   44e68:	stp	x19, x20, [sp, #32]
   44e6c:	mov	x20, x1
   44e70:	ldr	w1, [x5, #48]
   44e74:	stp	x25, x26, [sp, #80]
   44e78:	mov	x25, x3
   44e7c:	mov	w3, w4
   44e80:	ldr	w4, [x5, #52]
   44e84:	ldr	w5, [x5, #44]
   44e88:	stp	xzr, xzr, [sp, #136]
   44e8c:	str	xzr, [sp, #152]
   44e90:	str	w1, [x21, #948]
   44e94:	stp	w23, w28, [sp, #112]
   44e98:	str	x7, [sp, #120]
   44e9c:	str	d0, [sp, #128]
   44ea0:	stp	w5, w1, [sp, #144]
   44ea4:	str	w4, [sp, #152]
   44ea8:	str	w2, [sp, #136]
   44eac:	cbz	w28, 44f24 <ZDICT_trainFromBuffer_fastCover@@Base+0x104>
   44eb0:	cbz	w23, 44f24 <ZDICT_trainFromBuffer_fastCover@@Base+0x104>
   44eb4:	cmp	w28, #0x6
   44eb8:	ccmp	w28, #0x8, #0x4, ne  // ne = any
   44ebc:	b.ne	44f24 <ZDICT_trainFromBuffer_fastCover@@Base+0x104>  // b.any
   44ec0:	cmp	x20, w23, uxtw
   44ec4:	b.cc	44f24 <ZDICT_trainFromBuffer_fastCover@@Base+0x104>  // b.lo, b.ul, b.last
   44ec8:	cmp	w23, w28
   44ecc:	b.cc	44f24 <ZDICT_trainFromBuffer_fastCover@@Base+0x104>  // b.lo, b.ul, b.last
   44ed0:	sub	w2, w27, #0x1
   44ed4:	cmp	w2, #0x1e
   44ed8:	b.hi	44f24 <ZDICT_trainFromBuffer_fastCover@@Base+0x104>  // b.pmore
   44edc:	cmp	w0, #0x0
   44ee0:	csinc	w0, w0, wzr, ne  // ne = any
   44ee4:	sub	w2, w0, #0x1
   44ee8:	cmp	w2, #0x9
   44eec:	b.hi	44f24 <ZDICT_trainFromBuffer_fastCover@@Base+0x104>  // b.pmore
   44ef0:	cbnz	w3, 44f54 <ZDICT_trainFromBuffer_fastCover@@Base+0x134>
   44ef4:	cmp	w1, #0x0
   44ef8:	b.le	44f1c <ZDICT_trainFromBuffer_fastCover@@Base+0xfc>
   44efc:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   44f00:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   44f04:	add	x0, x0, #0x4d5
   44f08:	ldr	x19, [x19, #4048]
   44f0c:	ldr	x1, [x19]
   44f10:	bl	44d0 <fputs@plt>
   44f14:	ldr	x0, [x19]
   44f18:	bl	4970 <fflush@plt>
   44f1c:	mov	x19, #0xffffffffffffffb8    	// #-72
   44f20:	b	44ff0 <ZDICT_trainFromBuffer_fastCover@@Base+0x1d0>
   44f24:	cmp	w1, #0x0
   44f28:	b.le	44f4c <ZDICT_trainFromBuffer_fastCover@@Base+0x12c>
   44f2c:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   44f30:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   44f34:	add	x0, x0, #0x4b5
   44f38:	ldr	x19, [x19, #4048]
   44f3c:	ldr	x1, [x19]
   44f40:	bl	44d0 <fputs@plt>
   44f44:	ldr	x0, [x19]
   44f48:	bl	4970 <fflush@plt>
   44f4c:	mov	x19, #0xffffffffffffffd6    	// #-42
   44f50:	b	44ff0 <ZDICT_trainFromBuffer_fastCover@@Base+0x1d0>
   44f54:	cmp	x20, #0xff
   44f58:	b.hi	44f90 <ZDICT_trainFromBuffer_fastCover@@Base+0x170>  // b.pmore
   44f5c:	cmp	w1, #0x0
   44f60:	b.le	44f88 <ZDICT_trainFromBuffer_fastCover@@Base+0x168>
   44f64:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   44f68:	mov	w2, #0x100                 	// #256
   44f6c:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   44f70:	add	x1, x1, #0x975
   44f74:	ldr	x19, [x19, #4048]
   44f78:	ldr	x0, [x19]
   44f7c:	bl	4b40 <fprintf@plt>
   44f80:	ldr	x0, [x19]
   44f84:	bl	4970 <fflush@plt>
   44f88:	mov	x19, #0xffffffffffffffba    	// #-70
   44f8c:	b	44ff0 <ZDICT_trainFromBuffer_fastCover@@Base+0x1d0>
   44f90:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   44f94:	add	x1, x1, #0x538
   44f98:	add	x26, sp, #0xa0
   44f9c:	mov	w5, w27
   44fa0:	mov	w4, w28
   44fa4:	mov	x2, x25
   44fa8:	ldr	x6, [x1, w0, uxtw #3]
   44fac:	mov	x1, x24
   44fb0:	mov	x0, x26
   44fb4:	bl	44a98 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4bfc>
   44fb8:	mov	x19, x0
   44fbc:	cmn	x0, #0x78
   44fc0:	b.ls	45014 <ZDICT_trainFromBuffer_fastCover@@Base+0x1f4>  // b.plast
   44fc4:	ldr	w0, [x21, #948]
   44fc8:	cmp	w0, #0x0
   44fcc:	b.le	44ff0 <ZDICT_trainFromBuffer_fastCover@@Base+0x1d0>
   44fd0:	adrp	x20, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   44fd4:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   44fd8:	add	x0, x0, #0xa8d
   44fdc:	ldr	x20, [x20, #4048]
   44fe0:	ldr	x1, [x20]
   44fe4:	bl	44d0 <fputs@plt>
   44fe8:	ldr	x0, [x20]
   44fec:	bl	4970 <fflush@plt>
   44ff0:	mov	x0, x19
   44ff4:	ldp	x29, x30, [sp, #16]
   44ff8:	ldp	x19, x20, [sp, #32]
   44ffc:	ldp	x21, x22, [sp, #48]
   45000:	ldp	x23, x24, [sp, #64]
   45004:	ldp	x25, x26, [sp, #80]
   45008:	ldp	x27, x28, [sp, #96]
   4500c:	add	sp, sp, #0xf0
   45010:	ret
   45014:	ldr	w2, [x21, #948]
   45018:	mov	x0, x20
   4501c:	ldr	x1, [sp, #208]
   45020:	bl	3ef7c <ZBUFF_recommendedDOutSize@@Base+0x6dc>
   45024:	ldr	w0, [x21, #948]
   45028:	cmp	w0, #0x1
   4502c:	b.le	45050 <ZDICT_trainFromBuffer_fastCover@@Base+0x230>
   45030:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   45034:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   45038:	add	x0, x0, #0x9c9
   4503c:	ldr	x19, [x19, #4048]
   45040:	ldr	x1, [x19]
   45044:	bl	44d0 <fputs@plt>
   45048:	ldr	x0, [x19]
   4504c:	bl	4970 <fflush@plt>
   45050:	mov	x0, #0x1                   	// #1
   45054:	mov	x1, #0x2                   	// #2
   45058:	lsl	x0, x0, x27
   4505c:	bl	4760 <calloc@plt>
   45060:	ldr	x1, [sp, #216]
   45064:	mov	x6, x0
   45068:	mov	w5, w28
   4506c:	mov	w4, w23
   45070:	mov	x3, x20
   45074:	mov	x2, x22
   45078:	mov	x27, x0
   4507c:	mov	x0, x26
   45080:	bl	4453c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x46a0>
   45084:	sub	x3, x20, x0
   45088:	ldr	w1, [sp, #232]
   4508c:	mov	x5, x25
   45090:	ldr	x6, [sp, #192]
   45094:	mov	x4, x24
   45098:	ldr	x2, [sp, #144]
   4509c:	str	x2, [sp]
   450a0:	mul	x1, x1, x6
   450a4:	mov	x6, #0x64                  	// #100
   450a8:	ldr	w2, [sp, #152]
   450ac:	str	w2, [sp, #8]
   450b0:	add	x2, x22, x0
   450b4:	mov	x0, x22
   450b8:	udiv	x6, x1, x6
   450bc:	mov	x1, x20
   450c0:	bl	4710 <ZDICT_finalizeDictionary@plt>
   450c4:	mov	x19, x0
   450c8:	cmn	x0, #0x78
   450cc:	b.hi	45100 <ZDICT_trainFromBuffer_fastCover@@Base+0x2e0>  // b.pmore
   450d0:	ldr	w0, [x21, #948]
   450d4:	cmp	w0, #0x1
   450d8:	b.le	45100 <ZDICT_trainFromBuffer_fastCover@@Base+0x2e0>
   450dc:	adrp	x20, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   450e0:	mov	w2, w19
   450e4:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   450e8:	add	x1, x1, #0x9de
   450ec:	ldr	x20, [x20, #4048]
   450f0:	ldr	x0, [x20]
   450f4:	bl	4b40 <fprintf@plt>
   450f8:	ldr	x0, [x20]
   450fc:	bl	4970 <fflush@plt>
   45100:	mov	x0, x26
   45104:	bl	444ac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4610>
   45108:	mov	x0, x27
   4510c:	bl	48e0 <free@plt>
   45110:	b	44ff0 <ZDICT_trainFromBuffer_fastCover@@Base+0x1d0>

0000000000045114 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base>:
   45114:	stp	x29, x30, [sp, #-448]!
   45118:	fmov	d0, #7.500000000000000000e-01
   4511c:	mov	x29, sp
   45120:	stp	x21, x22, [sp, #32]
   45124:	ldr	w21, [x5, #4]
   45128:	str	d8, [sp, #96]
   4512c:	ldr	d8, [x5, #24]
   45130:	stp	x19, x20, [sp, #16]
   45134:	mov	x19, x5
   45138:	fcmp	d8, #0.0
   4513c:	stp	x23, x24, [sp, #48]
   45140:	stp	x25, x26, [sp, #64]
   45144:	stp	x27, x28, [sp, #80]
   45148:	fcsel	d8, d8, d0, hi  // hi = pmore
   4514c:	str	x1, [sp, #128]
   45150:	str	w4, [sp, #156]
   45154:	stp	x0, x2, [sp, #168]
   45158:	str	x3, [sp, #184]
   4515c:	cbz	w21, 4520c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xf8>
   45160:	str	w21, [sp, #124]
   45164:	ldr	w25, [x19]
   45168:	cbnz	w25, 4521c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x108>
   4516c:	mov	w0, #0x32                  	// #50
   45170:	mov	w25, #0x7d0                 	// #2000
   45174:	str	w0, [sp, #120]
   45178:	ldp	w26, w0, [x19, #8]
   4517c:	str	w0, [sp, #112]
   45180:	ldr	w20, [x19, #48]
   45184:	ldr	w1, [sp, #112]
   45188:	mov	w0, w0
   4518c:	cmp	w0, #0x0
   45190:	mov	w0, #0x28                  	// #40
   45194:	csel	w0, w1, w0, ne  // ne = any
   45198:	cmp	w26, #0x0
   4519c:	str	w0, [sp, #112]
   451a0:	mov	w0, #0x14                  	// #20
   451a4:	csel	w26, w26, w0, ne  // ne = any
   451a8:	fcmpe	d8, #0.0
   451ac:	b.ls	451bc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa8>  // b.plast
   451b0:	fmov	d0, #1.000000000000000000e+00
   451b4:	fcmpe	d8, d0
   451b8:	b.le	45224 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x110>
   451bc:	cmp	w20, #0x0
   451c0:	b.le	451e4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xd0>
   451c4:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   451c8:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   451cc:	add	x0, x0, #0x502
   451d0:	ldr	x19, [x19, #4048]
   451d4:	ldr	x1, [x19]
   451d8:	bl	44d0 <fputs@plt>
   451dc:	ldr	x0, [x19]
   451e0:	bl	4970 <fflush@plt>
   451e4:	mov	x24, #0xffffffffffffffd6    	// #-42
   451e8:	mov	x0, x24
   451ec:	ldr	d8, [sp, #96]
   451f0:	ldp	x19, x20, [sp, #16]
   451f4:	ldp	x21, x22, [sp, #32]
   451f8:	ldp	x23, x24, [sp, #48]
   451fc:	ldp	x25, x26, [sp, #64]
   45200:	ldp	x27, x28, [sp, #80]
   45204:	ldp	x29, x30, [sp], #448
   45208:	ret
   4520c:	mov	w0, #0x8                   	// #8
   45210:	mov	w21, #0x6                   	// #6
   45214:	str	w0, [sp, #124]
   45218:	b	45164 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x50>
   4521c:	str	w25, [sp, #120]
   45220:	b	45178 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x64>
   45224:	ldr	w0, [x19, #32]
   45228:	cmp	w0, #0x0
   4522c:	csinc	w0, w0, wzr, ne  // ne = any
   45230:	str	w0, [sp, #140]
   45234:	sub	w0, w0, #0x1
   45238:	cmp	w0, #0x9
   4523c:	b.ls	45260 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x14c>  // b.plast
   45240:	cmp	w20, #0x0
   45244:	b.le	451e4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xd0>
   45248:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   4524c:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   45250:	add	x0, x0, #0x518
   45254:	ldr	x19, [x19, #4048]
   45258:	ldr	x1, [x19]
   4525c:	b	451d8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xc4>
   45260:	ldp	w1, w0, [sp, #120]
   45264:	cmp	w0, w1
   45268:	ccmp	w25, w1, #0x0, ls  // ls = plast
   4526c:	b.cs	45290 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x17c>  // b.hs, b.nlast
   45270:	cmp	w20, #0x0
   45274:	b.le	451e4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xd0>
   45278:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   4527c:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   45280:	add	x0, x0, #0x529
   45284:	ldr	x19, [x19, #4048]
   45288:	ldr	x1, [x19]
   4528c:	b	451d8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xc4>
   45290:	ldr	w0, [sp, #156]
   45294:	cbnz	w0, 452c8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1b4>
   45298:	cmp	w20, #0x0
   4529c:	b.le	452c0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1ac>
   452a0:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   452a4:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   452a8:	add	x0, x0, #0x4d5
   452ac:	ldr	x19, [x19, #4048]
   452b0:	ldr	x1, [x19]
   452b4:	bl	44d0 <fputs@plt>
   452b8:	ldr	x0, [x19]
   452bc:	bl	4970 <fflush@plt>
   452c0:	mov	x24, #0xffffffffffffffb8    	// #-72
   452c4:	b	451e8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xd4>
   452c8:	ldr	x0, [sp, #128]
   452cc:	cmp	x0, #0xff
   452d0:	b.hi	45308 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1f4>  // b.pmore
   452d4:	cmp	w20, #0x0
   452d8:	b.le	45300 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1ec>
   452dc:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   452e0:	mov	w2, #0x100                 	// #256
   452e4:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   452e8:	add	x1, x1, #0x975
   452ec:	ldr	x19, [x19, #4048]
   452f0:	ldr	x0, [x19]
   452f4:	bl	4b40 <fprintf@plt>
   452f8:	ldr	x0, [x19]
   452fc:	bl	4970 <fflush@plt>
   45300:	mov	x24, #0xffffffffffffffba    	// #-70
   45304:	b	451e8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xd4>
   45308:	ldr	w0, [x19, #16]
   4530c:	cmp	w0, #0x1
   45310:	b.ls	45330 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x21c>  // b.plast
   45314:	mov	w0, w0
   45318:	mov	x1, #0x1                   	// #1
   4531c:	bl	5ad8 <ZSTD_initDStream_usingDDict@plt+0xf58>
   45320:	mov	x22, x0
   45324:	cbnz	x0, 45334 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x220>
   45328:	mov	x24, #0xffffffffffffffc0    	// #-64
   4532c:	b	451e8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xd4>
   45330:	mov	x22, #0x0                   	// #0
   45334:	add	x27, sp, #0xe8
   45338:	add	x23, sp, #0x168
   4533c:	mov	x0, x23
   45340:	bl	3f7e4 <ZDICT_trainFromBuffer_cover@@Base+0x3cc>
   45344:	stp	xzr, xzr, [sp, #256]
   45348:	cmp	w20, #0x0
   4534c:	ldr	w0, [x19, #36]
   45350:	ldr	w1, [x19, #52]
   45354:	str	xzr, [x27, #40]
   45358:	str	w1, [sp, #272]
   4535c:	ldr	w1, [sp, #140]
   45360:	str	w0, [sp, #256]
   45364:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   45368:	add	x0, x0, #0x538
   4536c:	ldr	d0, [x19, #24]
   45370:	ldur	x2, [x19, #44]
   45374:	str	x2, [sp, #264]
   45378:	ldr	x0, [x0, w1, uxtw #3]
   4537c:	str	x0, [sp, #160]
   45380:	ldr	w0, [sp, #120]
   45384:	sub	w1, w20, #0x1
   45388:	ldr	w2, [sp, #112]
   4538c:	csel	w1, w1, wzr, ne  // ne = any
   45390:	sub	w0, w25, w0
   45394:	str	d0, [sp, #248]
   45398:	ldr	x4, [x19]
   4539c:	udiv	w2, w0, w2
   453a0:	ldur	x3, [x19, #12]
   453a4:	stp	x4, x3, [sp, #232]
   453a8:	cmp	w2, #0x0
   453ac:	csinc	w2, w2, wzr, ne  // ne = any
   453b0:	str	w2, [sp, #116]
   453b4:	ldr	w2, [sp, #124]
   453b8:	cmp	w20, #0x1
   453bc:	ldr	w3, [sp, #116]
   453c0:	sub	w2, w2, w21
   453c4:	lsr	w2, w2, #1
   453c8:	udiv	w0, w0, w3
   453cc:	add	w0, w0, #0x1
   453d0:	madd	w0, w2, w0, w0
   453d4:	str	w0, [sp, #152]
   453d8:	adrp	x0, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   453dc:	str	x0, [sp, #192]
   453e0:	str	w1, [x0, #948]
   453e4:	b.le	4540c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x2f8>
   453e8:	adrp	x24, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   453ec:	ldr	w2, [sp, #152]
   453f0:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   453f4:	add	x1, x1, #0xa5f
   453f8:	ldr	x24, [x24, #4048]
   453fc:	ldr	x0, [x24]
   45400:	bl	4b40 <fprintf@plt>
   45404:	ldr	x0, [x24]
   45408:	bl	4970 <fflush@plt>
   4540c:	mov	w0, #0x1                   	// #1
   45410:	str	w0, [sp, #136]
   45414:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   45418:	add	x0, x0, #0xaab
   4541c:	str	wzr, [sp, #144]
   45420:	str	x0, [sp, #200]
   45424:	ldr	w0, [sp, #124]
   45428:	cmp	w21, w0
   4542c:	b.ls	454c0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x3ac>  // b.plast
   45430:	cmp	w20, #0x1
   45434:	b.le	45460 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x34c>
   45438:	adrp	x20, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   4543c:	adrp	x2, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   45440:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   45444:	add	x2, x2, #0x605
   45448:	ldr	x20, [x20, #4048]
   4544c:	add	x1, x1, #0x929
   45450:	ldr	x0, [x20]
   45454:	bl	4b40 <fprintf@plt>
   45458:	ldr	x0, [x20]
   4545c:	bl	4970 <fflush@plt>
   45460:	ldr	x24, [sp, #440]
   45464:	cmn	x24, #0x78
   45468:	b.hi	45544 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x430>  // b.pmore
   4546c:	ldr	x0, [sp, #392]
   45470:	str	x0, [x19]
   45474:	ldr	x0, [sp, #400]
   45478:	stur	x0, [x19, #12]
   4547c:	ldr	w0, [sp, #140]
   45480:	str	w0, [x19, #32]
   45484:	ldr	w0, [sp, #424]
   45488:	str	w0, [x19, #44]
   4548c:	add	x0, sp, #0x270
   45490:	ldp	x1, x24, [sp, #376]
   45494:	str	w26, [x19, #8]
   45498:	ldur	x0, [x0, #-196]
   4549c:	str	x0, [x19, #48]
   454a0:	ldr	w0, [sp, #416]
   454a4:	str	w0, [x19, #36]
   454a8:	ldr	x0, [sp, #168]
   454ac:	mov	x2, x24
   454b0:	ldr	d0, [sp, #408]
   454b4:	str	d0, [x19, #24]
   454b8:	bl	4460 <memcpy@plt>
   454bc:	b	45544 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x430>
   454c0:	cmp	w20, #0x2
   454c4:	b.le	454ec <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x3d8>
   454c8:	adrp	x28, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   454cc:	mov	w2, w21
   454d0:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   454d4:	add	x1, x1, #0xa87
   454d8:	ldr	x28, [x28, #4048]
   454dc:	ldr	x0, [x28]
   454e0:	bl	4b40 <fprintf@plt>
   454e4:	ldr	x0, [x28]
   454e8:	bl	4970 <fflush@plt>
   454ec:	ldp	x1, x2, [sp, #176]
   454f0:	fmov	d0, d8
   454f4:	ldr	w3, [sp, #156]
   454f8:	add	x28, sp, #0x118
   454fc:	ldr	x6, [sp, #160]
   45500:	mov	w5, w26
   45504:	mov	w4, w21
   45508:	mov	x0, x28
   4550c:	bl	44a98 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4bfc>
   45510:	mov	x24, x0
   45514:	cmn	x0, #0x78
   45518:	b.ls	45558 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x444>  // b.plast
   4551c:	cmp	w20, #0x0
   45520:	b.le	45544 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x430>
   45524:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   45528:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   4552c:	add	x0, x0, #0xa8d
   45530:	ldr	x19, [x19, #4048]
   45534:	ldr	x1, [x19]
   45538:	bl	44d0 <fputs@plt>
   4553c:	ldr	x0, [x19]
   45540:	bl	4970 <fflush@plt>
   45544:	mov	x0, x23
   45548:	bl	3f840 <ZDICT_trainFromBuffer_cover@@Base+0x428>
   4554c:	mov	x0, x22
   45550:	bl	5af0 <ZSTD_initDStream_usingDDict@plt+0xf70>
   45554:	b	451e8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xd4>
   45558:	ldr	w0, [sp, #144]
   4555c:	cbnz	w0, 45570 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x45c>
   45560:	ldr	x0, [sp, #128]
   45564:	mov	w2, w20
   45568:	ldr	x1, [sp, #328]
   4556c:	bl	3ef7c <ZBUFF_recommendedDOutSize@@Base+0x6dc>
   45570:	adrp	x0, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   45574:	ldr	w24, [sp, #120]
   45578:	ldr	x0, [x0, #4048]
   4557c:	str	x0, [sp, #144]
   45580:	mov	x0, #0x48                  	// #72
   45584:	bl	46a0 <malloc@plt>
   45588:	cmp	w20, #0x2
   4558c:	mov	x3, x0
   45590:	b.le	455bc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x4a8>
   45594:	ldr	x0, [sp, #144]
   45598:	mov	w2, w24
   4559c:	ldr	x1, [sp, #200]
   455a0:	str	x3, [sp, #208]
   455a4:	ldr	x0, [x0]
   455a8:	bl	4b40 <fprintf@plt>
   455ac:	ldr	x0, [sp, #144]
   455b0:	ldr	x0, [x0]
   455b4:	bl	4970 <fflush@plt>
   455b8:	ldr	x3, [sp, #208]
   455bc:	cbnz	x3, 45604 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x4f0>
   455c0:	cmp	w20, #0x0
   455c4:	b.le	455e8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x4d4>
   455c8:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   455cc:	adrp	x0, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   455d0:	add	x0, x0, #0xab1
   455d4:	ldr	x19, [x19, #4048]
   455d8:	ldr	x1, [x19]
   455dc:	bl	44d0 <fputs@plt>
   455e0:	ldr	x0, [x19]
   455e4:	bl	4970 <fflush@plt>
   455e8:	mov	x0, x23
   455ec:	bl	3f840 <ZDICT_trainFromBuffer_cover@@Base+0x428>
   455f0:	mov	x0, x28
   455f4:	bl	444ac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4610>
   455f8:	mov	x0, x22
   455fc:	bl	5af0 <ZSTD_initDStream_usingDDict@plt+0xf70>
   45600:	b	45328 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x214>
   45604:	ldp	x4, x5, [x27]
   45608:	stp	x4, x5, [x3, #24]
   4560c:	ldr	x0, [sp, #128]
   45610:	str	x0, [x3, #16]
   45614:	ldr	w0, [sp, #112]
   45618:	str	w0, [x3, #32]
   4561c:	ldr	x0, [sp, #192]
   45620:	stp	x28, x23, [x3]
   45624:	ldp	x4, x5, [x27, #16]
   45628:	stp	x4, x5, [x3, #40]
   4562c:	ldr	w1, [x0, #948]
   45630:	ldp	x4, x5, [x27, #32]
   45634:	stp	x4, x5, [x3, #56]
   45638:	stp	w24, w21, [x3, #24]
   4563c:	str	wzr, [x3, #48]
   45640:	str	w1, [x3, #60]
   45644:	str	d8, [x3, #40]
   45648:	cbz	w21, 456a0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x58c>
   4564c:	cbz	w24, 456a0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x58c>
   45650:	cmp	w21, #0x6
   45654:	ccmp	w21, #0x8, #0x4, ne  // ne = any
   45658:	b.ne	456a0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x58c>  // b.any
   4565c:	ldr	x0, [sp, #128]
   45660:	cmp	x0, w24, uxtw
   45664:	b.cc	456a0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x58c>  // b.lo, b.ul, b.last
   45668:	cmp	w21, w24
   4566c:	b.hi	456a0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x58c>  // b.pmore
   45670:	ldr	w0, [sp, #348]
   45674:	sub	w0, w0, #0x1
   45678:	cmp	w0, #0x1e
   4567c:	b.hi	456a0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x58c>  // b.pmore
   45680:	mov	x0, x23
   45684:	str	x3, [sp, #208]
   45688:	bl	3f84c <ZDICT_trainFromBuffer_cover@@Base+0x434>
   4568c:	ldr	x3, [sp, #208]
   45690:	cbnz	x22, 4570c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x5f8>
   45694:	mov	x0, x3
   45698:	bl	44848 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x49ac>
   4569c:	b	45720 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x60c>
   456a0:	cmp	w1, #0x0
   456a4:	b.le	456d4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x5c0>
   456a8:	adrp	x0, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   456ac:	ldr	x2, [x0, #4048]
   456b0:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   456b4:	add	x0, x0, #0x4b5
   456b8:	stp	x2, x3, [sp, #208]
   456bc:	ldr	x1, [x2]
   456c0:	bl	44d0 <fputs@plt>
   456c4:	ldr	x2, [sp, #208]
   456c8:	ldr	x0, [x2]
   456cc:	bl	4970 <fflush@plt>
   456d0:	ldr	x3, [sp, #216]
   456d4:	mov	x0, x3
   456d8:	bl	48e0 <free@plt>
   456dc:	ldr	w0, [sp, #116]
   456e0:	add	w24, w24, w0
   456e4:	cmp	w25, w24
   456e8:	b.cs	45580 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x46c>  // b.hs, b.nlast
   456ec:	mov	x0, x23
   456f0:	bl	3f808 <ZDICT_trainFromBuffer_cover@@Base+0x3f0>
   456f4:	mov	x0, x28
   456f8:	bl	444ac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4610>
   456fc:	mov	w0, #0x1                   	// #1
   45700:	add	w21, w21, #0x2
   45704:	str	w0, [sp, #144]
   45708:	b	45424 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x310>
   4570c:	adrp	x1, 44000 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4164>
   45710:	mov	x2, x3
   45714:	add	x1, x1, #0x848
   45718:	mov	x0, x22
   4571c:	bl	5afc <ZSTD_initDStream_usingDDict@plt+0xf7c>
   45720:	cmp	w20, #0x1
   45724:	b.le	45798 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x684>
   45728:	bl	44c0 <clock@plt>
   4572c:	adrp	x1, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   45730:	ldr	x2, [x1, #984]
   45734:	sub	x0, x0, x2
   45738:	mov	x2, #0x49f0                	// #18928
   4573c:	movk	x2, #0x2, lsl #16
   45740:	cmp	x0, x2
   45744:	b.gt	45750 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x63c>
   45748:	cmp	w20, #0x3
   4574c:	b.le	45798 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x684>
   45750:	bl	44c0 <clock@plt>
   45754:	adrp	x1, 71000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29ae0>
   45758:	mov	w2, #0x64                  	// #100
   4575c:	str	x0, [x1, #984]
   45760:	adrp	x1, 55000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae0>
   45764:	ldr	w0, [sp, #136]
   45768:	add	x1, x1, #0x91c
   4576c:	mul	w2, w0, w2
   45770:	adrp	x0, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   45774:	ldr	x3, [x0, #4048]
   45778:	str	x3, [sp, #208]
   4577c:	ldr	w0, [sp, #152]
   45780:	udiv	w2, w2, w0
   45784:	ldr	x0, [x3]
   45788:	bl	4b40 <fprintf@plt>
   4578c:	ldr	x3, [sp, #208]
   45790:	ldr	x0, [x3]
   45794:	bl	4970 <fflush@plt>
   45798:	ldr	w0, [sp, #136]
   4579c:	add	w0, w0, #0x1
   457a0:	str	w0, [sp, #136]
   457a4:	b	456dc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x5c8>
   457a8:	sub	sp, sp, #0x10
   457ac:	mov	w7, w1
   457b0:	mov	x9, x0
   457b4:	ldr	w10, [sp, #8]
   457b8:	str	x1, [sp]
   457bc:	lsr	x1, x1, #32
   457c0:	add	w5, w7, w1
   457c4:	bfxil	w10, w2, #0, #32
   457c8:	mov	x2, x0
   457cc:	mov	w0, #0x1                   	// #1
   457d0:	str	w10, [sp, #8]
   457d4:	ldr	w12, [x2], #12
   457d8:	mov	x8, x2
   457dc:	cmp	w0, w12
   457e0:	b.cc	45804 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x6f0>  // b.lo, b.ul, b.last
   457e4:	mov	w8, w7
   457e8:	mov	w0, #0x1                   	// #1
   457ec:	add	x8, x8, #0x1
   457f0:	add	x8, x4, x8
   457f4:	cmp	w0, w12
   457f8:	b.cc	458a8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x794>  // b.lo, b.ul, b.last
   457fc:	mov	w0, #0x0                   	// #0
   45800:	b	45874 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x760>
   45804:	cmp	w0, w3
   45808:	b.eq	4589c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x788>  // b.none
   4580c:	ldr	w6, [x8]
   45810:	cmp	w6, w7
   45814:	b.ls	4589c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x788>  // b.plast
   45818:	cmp	w6, w5
   4581c:	b.hi	4589c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x788>  // b.pmore
   45820:	ldp	w4, w3, [x8, #4]
   45824:	sub	w6, w6, w7
   45828:	mov	w5, #0xc                   	// #12
   4582c:	add	w4, w6, w4
   45830:	stp	w7, w4, [x8]
   45834:	mul	w6, w10, w6
   45838:	add	w3, w3, w1, lsr #3
   4583c:	umaddl	x2, w0, w5, x9
   45840:	udiv	w1, w6, w1
   45844:	add	w1, w3, w1
   45848:	sub	w3, w0, #0x1
   4584c:	str	w1, [x8, #8]
   45850:	umaddl	x9, w3, w5, x9
   45854:	cmp	w0, #0x1
   45858:	b.eq	4586c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x758>  // b.none
   4585c:	ldr	w3, [x9, #8]
   45860:	sub	w5, w0, #0x1
   45864:	cmp	w1, w3
   45868:	b.hi	4587c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x768>  // b.pmore
   4586c:	stp	w7, w4, [x2]
   45870:	str	w1, [x2, #8]
   45874:	add	sp, sp, #0x10
   45878:	ret
   4587c:	ldr	x0, [x9]
   45880:	str	x0, [x2]
   45884:	sub	x9, x9, #0xc
   45888:	sub	x2, x2, #0xc
   4588c:	ldr	w0, [x9, #20]
   45890:	str	w0, [x2, #20]
   45894:	mov	w0, w5
   45898:	b	45854 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x740>
   4589c:	add	w0, w0, #0x1
   458a0:	add	x8, x8, #0xc
   458a4:	b	457dc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x6c8>
   458a8:	cmp	w0, w3
   458ac:	b.eq	459d0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x8bc>  // b.none
   458b0:	ldp	w11, w6, [x2]
   458b4:	add	w13, w11, w6
   458b8:	cmp	w13, w7
   458bc:	b.cc	45950 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x83c>  // b.lo, b.ul, b.last
   458c0:	cmp	w11, w7
   458c4:	b.cs	45950 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x83c>  // b.hs, b.nlast
   458c8:	ldr	w4, [x2, #8]
   458cc:	sub	w3, w5, w13
   458d0:	cmp	w3, #0x0
   458d4:	add	w4, w4, w1, lsr #3
   458d8:	str	w4, [x2, #8]
   458dc:	b.le	458f4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x7e0>
   458e0:	add	w6, w6, w3
   458e4:	mul	w3, w3, w10
   458e8:	udiv	w1, w3, w1
   458ec:	add	w1, w1, w4
   458f0:	stp	w6, w1, [x2, #4]
   458f4:	sub	w1, w0, #0x1
   458f8:	mov	w3, #0xc                   	// #12
   458fc:	ldr	w5, [x2, #8]
   45900:	ldur	x4, [x2, #4]
   45904:	umaddl	x2, w0, w3, x9
   45908:	umaddl	x9, w1, w3, x9
   4590c:	cmp	w0, #0x1
   45910:	b.eq	45924 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x810>  // b.none
   45914:	ldr	w1, [x9, #8]
   45918:	sub	w3, w0, #0x1
   4591c:	cmp	w5, w1
   45920:	b.hi	45930 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x81c>  // b.pmore
   45924:	str	w11, [x2]
   45928:	stur	x4, [x2, #4]
   4592c:	b	45874 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x760>
   45930:	ldr	x0, [x9]
   45934:	str	x0, [x2]
   45938:	sub	x9, x9, #0xc
   4593c:	sub	x2, x2, #0xc
   45940:	ldr	w0, [x9, #20]
   45944:	str	w0, [x2, #20]
   45948:	mov	w0, w3
   4594c:	b	4590c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x7f8>
   45950:	add	x14, x4, w11, uxtw
   45954:	ldr	x13, [x4, w11, uxtw]
   45958:	ldr	x11, [x8]
   4595c:	cmp	x13, x11
   45960:	b.ne	459d0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x8bc>  // b.any
   45964:	mov	w13, w6
   45968:	mov	x11, #0x0                   	// #0
   4596c:	cmp	x13, x11
   45970:	b.hi	459b8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x8a4>  // b.pmore
   45974:	b.ne	459d0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x8bc>  // b.any
   45978:	sub	w4, w1, w6
   4597c:	mov	w3, w10
   45980:	cmp	w4, #0x0
   45984:	add	w6, w6, #0x1
   45988:	csinc	w4, w4, wzr, gt
   4598c:	cmp	w6, w1
   45990:	csel	w6, w6, w1, ls  // ls = plast
   45994:	stp	w7, w6, [x2]
   45998:	sxtw	x4, w4
   4599c:	mul	x4, x4, x3
   459a0:	mov	w3, w1
   459a4:	udiv	x4, x4, x3
   459a8:	ldr	w3, [x2, #8]
   459ac:	add	w4, w3, w4
   459b0:	str	w4, [x2, #8]
   459b4:	b	45874 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x760>
   459b8:	ldrb	w16, [x14, x11]
   459bc:	ldrb	w15, [x8, x11]
   459c0:	cmp	w16, w15
   459c4:	b.ne	459d0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x8bc>  // b.any
   459c8:	add	x11, x11, #0x1
   459cc:	b	4596c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x858>
   459d0:	add	w0, w0, #0x1
   459d4:	add	x2, x2, #0xc
   459d8:	b	457f4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x6e0>
   459dc:	sub	x6, x0, #0x8
   459e0:	mov	x3, #0x0                   	// #0
   459e4:	add	x5, x0, x3
   459e8:	ldr	x2, [x1, x3]
   459ec:	add	x3, x3, #0x8
   459f0:	ldr	x4, [x6, x3]
   459f4:	cmp	x2, x4
   459f8:	b.eq	459e4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x8d0>  // b.none
   459fc:	eor	x2, x2, x4
   45a00:	rbit	x2, x2
   45a04:	clz	x2, x2
   45a08:	add	x2, x5, x2, lsr #3
   45a0c:	sub	x0, x2, x0
   45a10:	ret
   45a14:	sub	sp, sp, #0x390
   45a18:	stp	x29, x30, [sp]
   45a1c:	mov	x29, sp
   45a20:	stp	x19, x20, [sp, #16]
   45a24:	mov	x20, x1
   45a28:	mov	x19, x3
   45a2c:	stp	x21, x22, [sp, #32]
   45a30:	add	x21, sp, #0x90
   45a34:	mov	x22, x0
   45a38:	stp	x27, x28, [sp, #80]
   45a3c:	mov	w28, w2
   45a40:	mov	w1, #0x0                   	// #0
   45a44:	mov	x2, #0x100                 	// #256
   45a48:	mov	x0, x21
   45a4c:	stp	x23, x24, [sp, #48]
   45a50:	mov	w23, w4
   45a54:	stp	x25, x26, [sp, #64]
   45a58:	add	x25, sp, #0x190
   45a5c:	str	w5, [sp, #104]
   45a60:	bl	4700 <memset@plt>
   45a64:	mov	x2, #0x100                 	// #256
   45a68:	mov	w1, #0x0                   	// #0
   45a6c:	mov	x0, x25
   45a70:	bl	4700 <memset@plt>
   45a74:	add	x0, sp, #0x290
   45a78:	mov	x2, #0x100                 	// #256
   45a7c:	mov	w1, #0x0                   	// #0
   45a80:	str	x0, [sp, #96]
   45a84:	bl	4700 <memset@plt>
   45a88:	ldrsw	x27, [x20, w28, uxtw #2]
   45a8c:	mov	w0, #0x1                   	// #1
   45a90:	str	xzr, [sp, #112]
   45a94:	add	x8, x19, x27
   45a98:	add	x1, x27, #0x4
   45a9c:	str	wzr, [sp, #120]
   45aa0:	add	x4, x22, x27
   45aa4:	strb	w0, [x22, x27]
   45aa8:	ldrh	w2, [x19, x27]
   45aac:	ldrh	w0, [x8, #2]
   45ab0:	cmp	w2, w0
   45ab4:	ldrh	w2, [x19, x1]
   45ab8:	b.eq	45ad4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x9c0>  // b.none
   45abc:	ldurh	w3, [x8, #1]
   45ac0:	ldurh	w1, [x8, #3]
   45ac4:	cmp	w3, w1
   45ac8:	b.eq	45ad4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x9c0>  // b.none
   45acc:	cmp	w2, w0
   45ad0:	b.ne	45b50 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa3c>  // b.any
   45ad4:	mov	w0, #0x6                   	// #6
   45ad8:	add	x3, x27, w0, uxtw
   45adc:	add	x1, x19, x3
   45ae0:	ldrh	w3, [x19, x3]
   45ae4:	cmp	w3, w2
   45ae8:	b.eq	45b40 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa2c>  // b.none
   45aec:	ldrb	w2, [x1]
   45af0:	ldurb	w1, [x1, #-1]
   45af4:	cmp	w2, w1
   45af8:	mov	x1, #0x0                   	// #0
   45afc:	cinc	w0, w0, eq  // eq = none
   45b00:	mov	w2, #0x1                   	// #1
   45b04:	add	x1, x1, #0x1
   45b08:	cmp	w0, w1
   45b0c:	b.hi	45b48 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa34>  // b.pmore
   45b10:	ldr	w2, [sp, #120]
   45b14:	mov	x1, #0x0                   	// #0
   45b18:	ldp	x29, x30, [sp]
   45b1c:	bfxil	x1, x2, #0, #32
   45b20:	ldp	x19, x20, [sp, #16]
   45b24:	ldp	x21, x22, [sp, #32]
   45b28:	ldp	x23, x24, [sp, #48]
   45b2c:	ldp	x25, x26, [sp, #64]
   45b30:	ldp	x27, x28, [sp, #80]
   45b34:	ldr	x0, [sp, #112]
   45b38:	add	sp, sp, #0x390
   45b3c:	ret
   45b40:	add	w0, w0, #0x2
   45b44:	b	45ad8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x9c4>
   45b48:	strb	w2, [x4, x1]
   45b4c:	b	45b04 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x9f0>
   45b50:	mov	w26, w28
   45b54:	add	w26, w26, #0x1
   45b58:	mov	x0, x8
   45b5c:	ldrsw	x1, [x20, w26, uxtw #2]
   45b60:	add	x1, x19, x1
   45b64:	bl	459dc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x8c8>
   45b68:	cmp	x0, #0x6
   45b6c:	b.hi	45b54 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa40>  // b.pmore
   45b70:	add	x7, x20, w28, uxtw #2
   45b74:	mov	x0, x8
   45b78:	ldursw	x1, [x7, #-4]
   45b7c:	add	x1, x19, x1
   45b80:	bl	459dc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x8c8>
   45b84:	cmp	x0, #0x6
   45b88:	b.ls	45ecc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xdb8>  // b.plast
   45b8c:	sub	w28, w28, #0x1
   45b90:	b	45b70 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa5c>
   45b94:	ldrsw	x1, [x7], #4
   45b98:	add	w28, w28, #0x1
   45b9c:	strb	w0, [x22, x1]
   45ba0:	cmp	w28, w26
   45ba4:	b.cc	45b94 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa80>  // b.lo, b.ul, b.last
   45ba8:	b	45b10 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x9fc>
   45bac:	ldr	w0, [sp, #104]
   45bb0:	cmp	w0, #0x3
   45bb4:	b.ls	45c10 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xafc>  // b.plast
   45bb8:	adrp	x24, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   45bbc:	mov	w0, #0xa                   	// #10
   45bc0:	str	w2, [sp, #108]
   45bc4:	ldr	x24, [x24, #4048]
   45bc8:	ldr	x1, [x24]
   45bcc:	bl	45a0 <fputc@plt>
   45bd0:	ldr	x0, [x24]
   45bd4:	bl	4970 <fflush@plt>
   45bd8:	ldr	w2, [sp, #108]
   45bdc:	mov	w4, w27
   45be0:	ldr	x0, [x24]
   45be4:	mov	w3, #0x7                   	// #7
   45be8:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   45bec:	add	x1, x1, #0x590
   45bf0:	bl	4b40 <fprintf@plt>
   45bf4:	ldr	x0, [x24]
   45bf8:	bl	4970 <fflush@plt>
   45bfc:	ldr	x1, [x24]
   45c00:	mov	w0, #0xa                   	// #10
   45c04:	bl	45a0 <fputc@plt>
   45c08:	ldr	x0, [x24]
   45c0c:	bl	4970 <fflush@plt>
   45c10:	mov	w5, #0x7                   	// #7
   45c14:	add	x10, x20, w28, uxtw #2
   45c18:	mov	w3, w28
   45c1c:	mov	x8, x10
   45c20:	mov	w2, w28
   45c24:	mov	w4, w28
   45c28:	mov	w1, #0x0                   	// #0
   45c2c:	mov	w0, #0x0                   	// #0
   45c30:	mov	w7, #0x0                   	// #0
   45c34:	cmp	w26, w2
   45c38:	b.hi	45c64 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xb50>  // b.pmore
   45c3c:	cmp	w0, w1
   45c40:	b.ls	45c4c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xb38>  // b.plast
   45c44:	mov	w3, w4
   45c48:	mov	w1, w0
   45c4c:	cmp	w1, w23
   45c50:	b.cc	45cac <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xb98>  // b.lo, b.ul, b.last
   45c54:	add	w26, w1, w3
   45c58:	add	w5, w5, #0x1
   45c5c:	mov	w28, w3
   45c60:	b	45c14 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xb00>
   45c64:	ldr	w9, [x8]
   45c68:	add	w9, w5, w9
   45c6c:	ldrb	w9, [x19, x9]
   45c70:	cmp	w9, w7
   45c74:	b.eq	45c94 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xb80>  // b.none
   45c78:	cmp	w0, w1
   45c7c:	b.ls	45c88 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xb74>  // b.plast
   45c80:	mov	w3, w4
   45c84:	mov	w1, w0
   45c88:	mov	w4, w2
   45c8c:	mov	w0, #0x0                   	// #0
   45c90:	b	45c98 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xb84>
   45c94:	mov	w9, w7
   45c98:	add	w0, w0, #0x1
   45c9c:	add	w2, w2, #0x1
   45ca0:	add	x8, x8, #0x4
   45ca4:	mov	w7, w9
   45ca8:	b	45c34 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xb20>
   45cac:	ldrsw	x24, [x10]
   45cb0:	mov	x0, x21
   45cb4:	mov	x2, #0x100                 	// #256
   45cb8:	mov	w1, #0x0                   	// #0
   45cbc:	mov	w26, w28
   45cc0:	bl	4700 <memset@plt>
   45cc4:	add	x27, x19, x24
   45cc8:	mov	x7, #0x3f                  	// #63
   45ccc:	add	w26, w26, #0x1
   45cd0:	mov	x0, x27
   45cd4:	ldrsw	x1, [x20, w26, uxtw #2]
   45cd8:	add	x1, x19, x1
   45cdc:	bl	459dc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x8c8>
   45ce0:	cmp	x0, #0x3f
   45ce4:	csel	x1, x0, x7, ls  // ls = plast
   45ce8:	cmp	x0, #0x6
   45cec:	lsl	x1, x1, #2
   45cf0:	ldr	w2, [x21, x1]
   45cf4:	add	w2, w2, #0x1
   45cf8:	str	w2, [x21, x1]
   45cfc:	b.hi	45ccc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xbb8>  // b.pmore
   45d00:	mov	x1, #0x7                   	// #7
   45d04:	mov	x8, #0x3f                  	// #63
   45d08:	cmp	w28, #0x0
   45d0c:	ccmp	x1, #0x6, #0x0, ne  // ne = any
   45d10:	b.hi	45e5c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xd48>  // b.pmore
   45d14:	mov	w1, #0x0                   	// #0
   45d18:	mov	x0, x25
   45d1c:	mov	x2, #0xfc                  	// #252
   45d20:	bl	4700 <memset@plt>
   45d24:	ldr	w0, [sp, #396]
   45d28:	mov	x1, x25
   45d2c:	str	w0, [sp, #652]
   45d30:	mov	x0, #0xf8                  	// #248
   45d34:	ldr	w3, [x21, x0]
   45d38:	sub	x0, x0, #0x4
   45d3c:	ldr	w2, [x1, #252]
   45d40:	cmn	x0, #0x4
   45d44:	sub	x1, x1, #0x4
   45d48:	add	w2, w2, w3
   45d4c:	str	w2, [x1, #252]
   45d50:	b.ne	45d34 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xc20>  // b.any
   45d54:	mov	x0, #0x3f                  	// #63
   45d58:	ldr	w1, [x25, x0, lsl #2]
   45d5c:	mov	w3, w0
   45d60:	cmp	w1, w23
   45d64:	b.cs	45d78 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xc64>  // b.hs, b.nlast
   45d68:	sub	x0, x0, #0x1
   45d6c:	cmp	x0, #0x6
   45d70:	b.ne	45d58 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xc44>  // b.any
   45d74:	mov	w3, w0
   45d78:	add	x0, x27, w3, sxtw
   45d7c:	mov	w23, w3
   45d80:	ldurb	w1, [x0, #-1]
   45d84:	add	x0, x19, w23, uxtw
   45d88:	mov	w3, w23
   45d8c:	add	x0, x0, x24
   45d90:	ldurb	w0, [x0, #-2]
   45d94:	cmp	w0, w1
   45d98:	b.eq	45e94 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xd80>  // b.none
   45d9c:	cmp	x3, #0x6
   45da0:	b.ls	45b10 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x9fc>  // b.plast
   45da4:	ldr	x1, [sp, #96]
   45da8:	mov	x0, #0x7                   	// #7
   45dac:	add	x1, x1, #0x4
   45db0:	cmp	w23, w0
   45db4:	b.ge	45e9c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xd88>  // b.tcont
   45db8:	ldr	x0, [sp, #96]
   45dbc:	ldr	w25, [x0, x3, lsl #2]
   45dc0:	ldr	w0, [sp, #104]
   45dc4:	cmp	w0, #0x3
   45dc8:	b.ls	45e04 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xcf0>  // b.plast
   45dcc:	ucvtf	d1, w25
   45dd0:	ucvtf	d0, w23
   45dd4:	adrp	x21, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   45dd8:	mov	w4, w25
   45ddc:	mov	w3, w23
   45de0:	mov	w2, w24
   45de4:	ldr	x21, [x21, #4048]
   45de8:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   45dec:	fdiv	d0, d1, d0
   45df0:	add	x1, x1, #0x5bf
   45df4:	ldr	x0, [x21]
   45df8:	bl	4b40 <fprintf@plt>
   45dfc:	ldr	x0, [x21]
   45e00:	bl	4970 <fflush@plt>
   45e04:	add	x20, x20, w28, uxtw #2
   45e08:	mov	w9, #0x1                   	// #1
   45e0c:	stp	w24, w23, [sp, #112]
   45e10:	str	w25, [sp, #120]
   45e14:	cmp	w28, w26
   45e18:	b.cs	45b10 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x9fc>  // b.hs, b.nlast
   45e1c:	ldr	w7, [x20]
   45e20:	mov	w8, w7
   45e24:	cmp	x24, w7, uxtw
   45e28:	b.eq	45eb8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xda4>  // b.none
   45e2c:	add	x1, x19, x8
   45e30:	mov	x0, x27
   45e34:	bl	459dc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x8c8>
   45e38:	cmp	w23, w0
   45e3c:	csel	w0, w23, w0, cc  // cc = lo, ul, last
   45e40:	add	w0, w0, w7
   45e44:	add	x8, x22, x8
   45e48:	cmp	w7, w0
   45e4c:	b.cc	45ec0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xdac>  // b.lo, b.ul, b.last
   45e50:	add	w28, w28, #0x1
   45e54:	add	x20, x20, #0x4
   45e58:	b	45e14 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xd00>
   45e5c:	sub	w7, w28, #0x1
   45e60:	mov	x0, x27
   45e64:	ldrsw	x1, [x20, w7, uxtw #2]
   45e68:	add	x1, x19, x1
   45e6c:	bl	459dc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x8c8>
   45e70:	cmp	x0, #0x3f
   45e74:	csel	x1, x0, x8, ls  // ls = plast
   45e78:	cmp	x0, #0x7
   45e7c:	csel	w28, w28, w7, cc  // cc = lo, ul, last
   45e80:	lsl	x3, x1, #2
   45e84:	ldr	w2, [x21, x3]
   45e88:	add	w2, w2, #0x1
   45e8c:	str	w2, [x21, x3]
   45e90:	b	45d08 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xbf4>
   45e94:	sub	w23, w23, #0x1
   45e98:	b	45d84 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xc70>
   45e9c:	ldr	w5, [x21, x0, lsl #2]
   45ea0:	sub	w2, w0, #0x3
   45ea4:	ldr	w4, [x1, #20]
   45ea8:	add	x0, x0, #0x1
   45eac:	madd	w2, w2, w5, w4
   45eb0:	str	w2, [x1, #24]
   45eb4:	b	45dac <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xc98>
   45eb8:	mov	w0, w23
   45ebc:	b	45e40 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xd2c>
   45ec0:	add	w7, w7, #0x1
   45ec4:	strb	w9, [x8], #1
   45ec8:	b	45e48 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xd34>
   45ecc:	sub	w2, w26, w28
   45ed0:	cmp	w2, w23
   45ed4:	b.cs	45bac <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa98>  // b.hs, b.nlast
   45ed8:	mov	w0, #0x1                   	// #1
   45edc:	b	45ba0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa8c>
   45ee0:	mov	x12, #0x1c30                	// #7216
   45ee4:	sub	sp, sp, x12
   45ee8:	mov	w9, w5
   45eec:	stp	x29, x30, [sp]
   45ef0:	mov	x29, sp
   45ef4:	stp	x0, x1, [sp, #120]
   45ef8:	add	w0, w7, #0x20, lsl #12
   45efc:	clz	w0, w0
   45f00:	stp	x19, x20, [sp, #16]
   45f04:	eor	w0, w0, #0x1f
   45f08:	ldr	w19, [sp, #7216]
   45f0c:	mov	x20, x7
   45f10:	stp	x21, x22, [sp, #32]
   45f14:	mov	w21, w2
   45f18:	stp	x27, x28, [sp, #80]
   45f1c:	mov	x28, x4
   45f20:	mov	x1, #0x0                   	// #0
   45f24:	stp	x23, x24, [sp, #48]
   45f28:	stp	x25, x26, [sp, #64]
   45f2c:	str	w0, [sp, #112]
   45f30:	mov	x0, #0x0                   	// #0
   45f34:	str	x3, [sp, #152]
   45f38:	cmp	w9, w0
   45f3c:	b.hi	4615c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1048>  // b.pmore
   45f40:	cmp	w9, #0x0
   45f44:	cinc	w0, w9, eq  // eq = none
   45f48:	mov	w0, w0
   45f4c:	udiv	x3, x1, x0
   45f50:	ldr	w0, [sp, #112]
   45f54:	cmp	w0, #0x1e
   45f58:	b.gt	4673c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1628>
   45f5c:	add	x24, sp, #0x430
   45f60:	mov	x0, #0x0                   	// #0
   45f64:	mov	w1, #0x1                   	// #1
   45f68:	str	w1, [x24, x0, lsl #2]
   45f6c:	add	x0, x0, #0x1
   45f70:	cmp	x0, #0x100
   45f74:	b.ne	45f68 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xe54>  // b.any
   45f78:	add	x27, sp, #0x248
   45f7c:	mov	x0, #0x0                   	// #0
   45f80:	mov	w1, #0x1                   	// #1
   45f84:	ldr	w2, [sp, #112]
   45f88:	str	w1, [x27, x0, lsl #2]
   45f8c:	add	x0, x0, #0x1
   45f90:	cmp	w2, w0
   45f94:	b.cs	45f84 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xe70>  // b.hs, b.nlast
   45f98:	add	x26, sp, #0x358
   45f9c:	mov	x0, #0x0                   	// #0
   45fa0:	mov	w1, #0x1                   	// #1
   45fa4:	str	w1, [x26, x0, lsl #2]
   45fa8:	add	x0, x0, #0x1
   45fac:	cmp	x0, #0x35
   45fb0:	b.ne	45fa4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xe90>  // b.any
   45fb4:	add	x25, sp, #0x2c8
   45fb8:	mov	x0, #0x0                   	// #0
   45fbc:	mov	w22, #0x1                   	// #1
   45fc0:	str	w22, [x25, x0, lsl #2]
   45fc4:	add	x0, x0, #0x1
   45fc8:	cmp	x0, #0x24
   45fcc:	b.ne	45fc0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xeac>  // b.any
   45fd0:	add	x23, sp, #0xc30
   45fd4:	mov	x2, #0x1000                	// #4096
   45fd8:	mov	w1, #0x0                   	// #0
   45fdc:	mov	x0, x23
   45fe0:	str	x3, [sp, #104]
   45fe4:	str	w9, [sp, #136]
   45fe8:	str	x6, [sp, #144]
   45fec:	bl	4700 <memset@plt>
   45ff0:	add	x0, sp, #0x200
   45ff4:	cmp	w21, #0x0
   45ff8:	ldr	x3, [sp, #104]
   45ffc:	add	x8, sp, #0x128
   46000:	stp	xzr, xzr, [x0, #-248]
   46004:	mov	x2, x20
   46008:	mov	x1, x3
   4600c:	stp	xzr, xzr, [x0, #-232]
   46010:	mov	w0, #0x3                   	// #3
   46014:	csel	w0, w21, w0, ne  // ne = any
   46018:	str	w22, [sp, #3124]
   4601c:	str	w22, [sp, #3136]
   46020:	str	w22, [sp, #3152]
   46024:	bl	4a70 <ZSTD_getParams@plt>
   46028:	add	x0, sp, #0x200
   4602c:	add	x5, sp, #0xc0
   46030:	ldr	x6, [sp, #144]
   46034:	add	x4, sp, #0xe0
   46038:	ldp	x0, x1, [x0, #-216]
   4603c:	stp	x0, x1, [sp, #224]
   46040:	ldr	x0, [sp, #312]
   46044:	str	x0, [sp, #240]
   46048:	ldr	w0, [sp, #320]
   4604c:	mov	x1, x20
   46050:	str	w0, [sp, #248]
   46054:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46058:	add	x0, x0, #0xb70
   4605c:	ldp	x2, x3, [x0]
   46060:	stp	x2, x3, [sp, #192]
   46064:	ldr	x0, [x0, #16]
   46068:	mov	w3, #0x1                   	// #1
   4606c:	mov	w2, w3
   46070:	str	x0, [sp, #208]
   46074:	mov	x0, x6
   46078:	bl	4810 <ZSTD_createCDict_advanced@plt>
   4607c:	mov	x22, x0
   46080:	bl	4720 <ZSTD_createCCtx@plt>
   46084:	mov	x20, x0
   46088:	mov	x0, #0x20000               	// #131072
   4608c:	bl	46a0 <malloc@plt>
   46090:	str	x0, [sp, #104]
   46094:	cbz	x22, 4616c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1058>
   46098:	cbz	x20, 4616c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1058>
   4609c:	cbz	x0, 4616c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1058>
   460a0:	ldr	w9, [sp, #136]
   460a4:	mov	x21, #0x0                   	// #0
   460a8:	add	x0, x28, w9, uxtw #3
   460ac:	str	x0, [sp, #144]
   460b0:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   460b4:	add	x0, x0, #0x64b
   460b8:	str	x0, [sp, #160]
   460bc:	adrp	x0, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   460c0:	ldr	x0, [x0, #4048]
   460c4:	str	x0, [sp, #136]
   460c8:	ldr	x0, [sp, #144]
   460cc:	cmp	x0, x28
   460d0:	b.ne	46198 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1084>  // b.any
   460d4:	add	x28, sp, #0x830
   460d8:	mov	x1, x24
   460dc:	mov	x0, x28
   460e0:	mov	w3, #0xb                   	// #11
   460e4:	mov	w2, #0xff                  	// #255
   460e8:	bl	8fd4 <ZSTD_getErrorString@@Base+0x2488>
   460ec:	mov	x21, x0
   460f0:	cmn	x0, #0x78
   460f4:	b.ls	46398 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1284>  // b.plast
   460f8:	cbz	w19, 4611c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1008>
   460fc:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   46100:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46104:	add	x0, x0, #0x679
   46108:	ldr	x19, [x19, #4048]
   4610c:	ldr	x1, [x19]
   46110:	bl	44d0 <fputs@plt>
   46114:	ldr	x0, [x19]
   46118:	bl	4970 <fflush@plt>
   4611c:	mov	x0, x22
   46120:	bl	45c0 <ZSTD_freeCDict@plt>
   46124:	mov	x0, x20
   46128:	bl	45f0 <ZSTD_freeCCtx@plt>
   4612c:	ldr	x0, [sp, #104]
   46130:	bl	48e0 <free@plt>
   46134:	mov	x0, x21
   46138:	mov	x12, #0x1c30                	// #7216
   4613c:	ldp	x29, x30, [sp]
   46140:	ldp	x19, x20, [sp, #16]
   46144:	ldp	x21, x22, [sp, #32]
   46148:	ldp	x23, x24, [sp, #48]
   4614c:	ldp	x25, x26, [sp, #64]
   46150:	ldp	x27, x28, [sp, #80]
   46154:	add	sp, sp, x12
   46158:	ret
   4615c:	ldr	x2, [x28, x0, lsl #3]
   46160:	add	x0, x0, #0x1
   46164:	add	x1, x1, x2
   46168:	b	45f38 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xe24>
   4616c:	cbz	w19, 46190 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x107c>
   46170:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   46174:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46178:	add	x0, x0, #0x606
   4617c:	ldr	x19, [x19, #4048]
   46180:	ldr	x1, [x19]
   46184:	bl	44d0 <fputs@plt>
   46188:	ldr	x0, [x19]
   4618c:	bl	4970 <fflush@plt>
   46190:	mov	x21, #0xffffffffffffffc0    	// #-64
   46194:	b	4611c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1008>
   46198:	ldr	w3, [sp, #296]
   4619c:	mov	x1, x22
   461a0:	ldr	x2, [x28]
   461a4:	mov	x0, x20
   461a8:	str	w3, [sp, #168]
   461ac:	str	x2, [sp, #176]
   461b0:	bl	49e0 <ZSTD_compressBegin_usingCDict@plt>
   461b4:	cmn	x0, #0x78
   461b8:	ldr	w3, [sp, #168]
   461bc:	ldr	x2, [sp, #176]
   461c0:	b.ls	461fc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x10e8>  // b.plast
   461c4:	cbz	w19, 461f0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x10dc>
   461c8:	adrp	x0, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   461cc:	ldr	x2, [x0, #4048]
   461d0:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   461d4:	add	x0, x0, #0x61a
   461d8:	str	x2, [sp, #168]
   461dc:	ldr	x1, [x2]
   461e0:	bl	44d0 <fputs@plt>
   461e4:	ldr	x2, [sp, #168]
   461e8:	ldr	x0, [x2]
   461ec:	bl	4970 <fflush@plt>
   461f0:	ldr	x0, [x28], #8
   461f4:	add	x21, x21, x0
   461f8:	b	460c8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xfb4>
   461fc:	mov	w0, #0x1                   	// #1
   46200:	mov	w1, #0x20000               	// #131072
   46204:	lsl	w0, w0, w3
   46208:	cmp	w0, #0x20, lsl #12
   4620c:	csel	w0, w0, w1, le
   46210:	ldr	x1, [sp, #104]
   46214:	cmp	x2, w0, sxtw
   46218:	sxtw	x4, w0
   4621c:	ldr	x0, [sp, #152]
   46220:	csel	x4, x4, x2, cs  // cs = hs, nlast
   46224:	mov	x2, #0x20000               	// #131072
   46228:	str	x4, [sp, #168]
   4622c:	add	x3, x0, x21
   46230:	mov	x0, x20
   46234:	bl	4900 <ZSTD_compressBlock@plt>
   46238:	cmn	x0, #0x78
   4623c:	ldr	x4, [sp, #168]
   46240:	b.ls	4626c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1158>  // b.plast
   46244:	cmp	w19, #0x2
   46248:	b.ls	461f0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x10dc>  // b.plast
   4624c:	ldr	x0, [sp, #136]
   46250:	mov	w2, w4
   46254:	ldr	x1, [sp, #160]
   46258:	ldr	x0, [x0]
   4625c:	bl	4b40 <fprintf@plt>
   46260:	ldr	x0, [sp, #136]
   46264:	ldr	x0, [x0]
   46268:	b	461ec <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x10d8>
   4626c:	cbz	x0, 461f0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x10dc>
   46270:	mov	x0, x20
   46274:	bl	a254 <ZSTD_initStaticCCtx@@Base+0xf4>
   46278:	ldp	x2, x4, [x0, #16]
   4627c:	cmp	x2, x4
   46280:	b.cc	4632c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1218>  // b.lo, b.ul, b.last
   46284:	ldp	x2, x1, [x0]
   46288:	str	x0, [sp, #168]
   4628c:	sub	x1, x1, x2
   46290:	asr	x1, x1, #3
   46294:	str	w1, [sp, #176]
   46298:	str	x1, [sp, #184]
   4629c:	bl	a580 <ZSTD_toFlushNow@@Base+0x20>
   462a0:	ldr	x0, [sp, #168]
   462a4:	mov	x2, #0x0                   	// #0
   462a8:	ldr	w4, [sp, #176]
   462ac:	ldr	x1, [sp, #184]
   462b0:	ldr	x6, [x0, #48]
   462b4:	cmp	w4, w2
   462b8:	b.hi	46344 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1230>  // b.pmore
   462bc:	ldr	x6, [x0, #40]
   462c0:	mov	x2, #0x0                   	// #0
   462c4:	cmp	w4, w2
   462c8:	b.hi	46360 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x124c>  // b.pmore
   462cc:	ldr	x6, [x0, #32]
   462d0:	mov	x2, #0x0                   	// #0
   462d4:	cmp	w4, w2
   462d8:	b.hi	4637c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1268>  // b.pmore
   462dc:	cmp	w1, #0x1
   462e0:	b.ls	461f0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x10dc>  // b.plast
   462e4:	ldr	x0, [x0]
   462e8:	ldr	w1, [x0]
   462ec:	ldr	w0, [x0, #8]
   462f0:	sub	w1, w1, #0x3
   462f4:	cmp	w1, #0x400
   462f8:	sub	w0, w0, #0x3
   462fc:	csel	w1, w1, wzr, cc  // cc = lo, ul, last
   46300:	cmp	w0, #0x400
   46304:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
   46308:	ubfiz	x1, x1, #2, #32
   4630c:	lsl	x0, x0, #2
   46310:	ldr	w2, [x23, x1]
   46314:	add	w2, w2, #0x3
   46318:	str	w2, [x23, x1]
   4631c:	ldr	w1, [x23, x0]
   46320:	add	w1, w1, #0x1
   46324:	str	w1, [x23, x0]
   46328:	b	461f0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x10dc>
   4632c:	ldrb	w1, [x2], #1
   46330:	lsl	x1, x1, #2
   46334:	ldr	w3, [x24, x1]
   46338:	add	w3, w3, #0x1
   4633c:	str	w3, [x24, x1]
   46340:	b	4627c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1168>
   46344:	ldrb	w3, [x6, x2]
   46348:	add	x2, x2, #0x1
   4634c:	lsl	x3, x3, #2
   46350:	ldr	w5, [x27, x3]
   46354:	add	w5, w5, #0x1
   46358:	str	w5, [x27, x3]
   4635c:	b	462b4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x11a0>
   46360:	ldrb	w3, [x6, x2]
   46364:	add	x2, x2, #0x1
   46368:	lsl	x3, x3, #2
   4636c:	ldr	w5, [x26, x3]
   46370:	add	w5, w5, #0x1
   46374:	str	w5, [x26, x3]
   46378:	b	462c4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x11b0>
   4637c:	ldrb	w3, [x6, x2]
   46380:	add	x2, x2, #0x1
   46384:	lsl	x3, x3, #2
   46388:	ldr	w5, [x25, x3]
   4638c:	add	w5, w5, #0x1
   46390:	str	w5, [x25, x3]
   46394:	b	462d4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x11c0>
   46398:	cmp	x0, #0x8
   4639c:	b.ne	4640c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x12f8>  // b.any
   463a0:	cmp	w19, #0x1
   463a4:	b.ls	463c8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x12b4>  // b.plast
   463a8:	adrp	x2, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   463ac:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   463b0:	add	x0, x0, #0x692
   463b4:	ldr	x21, [x2, #4048]
   463b8:	ldr	x1, [x21]
   463bc:	bl	44d0 <fputs@plt>
   463c0:	ldr	x0, [x21]
   463c4:	bl	4970 <fflush@plt>
   463c8:	mov	x0, #0x1                   	// #1
   463cc:	mov	w1, #0x2                   	// #2
   463d0:	str	w1, [x24, x0, lsl #2]
   463d4:	add	x0, x0, #0x1
   463d8:	cmp	x0, #0x100
   463dc:	b.ne	463d0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x12bc>  // b.any
   463e0:	add	x1, sp, #0x860
   463e4:	mov	w0, #0x4                   	// #4
   463e8:	str	w0, [sp, #1072]
   463ec:	mov	x0, #0x100000001           	// #4294967297
   463f0:	mov	w3, #0xb                   	// #11
   463f4:	mov	w2, #0xff                  	// #255
   463f8:	stur	x0, [x1, #-60]
   463fc:	mov	x1, x24
   46400:	mov	x0, x28
   46404:	bl	8fd4 <ZSTD_getErrorString@@Base+0x2488>
   46408:	mov	x21, x0
   4640c:	mov	x0, #0x1                   	// #1
   46410:	ldr	w1, [x23, x0, lsl #2]
   46414:	ldr	w2, [sp, #284]
   46418:	str	w0, [sp, #288]
   4641c:	str	w1, [sp, #292]
   46420:	cmp	w1, w2
   46424:	b.ls	46458 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1344>  // b.plast
   46428:	ldp	x3, x2, [sp, #280]
   4642c:	stp	x2, x3, [sp, #280]
   46430:	ldr	w3, [sp, #276]
   46434:	cmp	w1, w3
   46438:	b.ls	46458 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1344>  // b.plast
   4643c:	ldr	x3, [sp, #272]
   46440:	stp	x2, x3, [sp, #272]
   46444:	ldr	w3, [sp, #268]
   46448:	cmp	w1, w3
   4644c:	b.ls	46458 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1344>  // b.plast
   46450:	ldr	x1, [sp, #264]
   46454:	stp	x2, x1, [sp, #264]
   46458:	add	x0, x0, #0x1
   4645c:	cmp	x0, #0x400
   46460:	b.ne	46410 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x12fc>  // b.any
   46464:	mov	x0, #0x0                   	// #0
   46468:	mov	w3, #0x0                   	// #0
   4646c:	ldr	w1, [x27, x0, lsl #2]
   46470:	add	x0, x0, #0x1
   46474:	add	w3, w3, w1
   46478:	ldr	w1, [sp, #112]
   4647c:	cmp	w1, w0
   46480:	b.cs	4646c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1358>  // b.hs, b.nlast
   46484:	add	x23, sp, #0x150
   46488:	mov	x4, x1
   4648c:	mov	x2, x27
   46490:	mov	x0, x23
   46494:	mov	w1, #0x8                   	// #8
   46498:	bl	742c <ZSTD_getErrorString@@Base+0x8e0>
   4649c:	mov	x24, x0
   464a0:	cmn	x0, #0x78
   464a4:	b.ls	464d4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x13c0>  // b.plast
   464a8:	cbz	w19, 464cc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x13b8>
   464ac:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   464b0:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   464b4:	add	x0, x0, #0x6f6
   464b8:	ldr	x19, [x19, #4048]
   464bc:	ldr	x1, [x19]
   464c0:	bl	44d0 <fputs@plt>
   464c4:	ldr	x0, [x19]
   464c8:	bl	4970 <fflush@plt>
   464cc:	mov	x21, x24
   464d0:	b	4611c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1008>
   464d4:	mov	x0, #0x0                   	// #0
   464d8:	mov	w3, #0x0                   	// #0
   464dc:	ldr	w1, [x26, x0, lsl #2]
   464e0:	add	x0, x0, #0x1
   464e4:	cmp	x0, #0x35
   464e8:	add	w3, w3, w1
   464ec:	b.ne	464dc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x13c8>  // b.any
   464f0:	add	x27, sp, #0x1d8
   464f4:	mov	x2, x26
   464f8:	mov	x0, x27
   464fc:	mov	w4, #0x34                  	// #52
   46500:	mov	w1, #0x9                   	// #9
   46504:	bl	742c <ZSTD_getErrorString@@Base+0x8e0>
   46508:	mov	x26, x0
   4650c:	cmn	x0, #0x78
   46510:	b.ls	46540 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x142c>  // b.plast
   46514:	cbz	w19, 46538 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1424>
   46518:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   4651c:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46520:	add	x0, x0, #0x723
   46524:	ldr	x19, [x19, #4048]
   46528:	ldr	x1, [x19]
   4652c:	bl	44d0 <fputs@plt>
   46530:	ldr	x0, [x19]
   46534:	bl	4970 <fflush@plt>
   46538:	mov	x21, x26
   4653c:	b	4611c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1008>
   46540:	mov	x0, #0x0                   	// #0
   46544:	mov	w3, #0x0                   	// #0
   46548:	ldr	w1, [x25, x0, lsl #2]
   4654c:	add	x0, x0, #0x1
   46550:	cmp	x0, #0x24
   46554:	add	w3, w3, w1
   46558:	b.ne	46548 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1434>  // b.any
   4655c:	add	x0, sp, #0x190
   46560:	mov	x2, x25
   46564:	mov	w4, #0x23                  	// #35
   46568:	mov	w1, #0x9                   	// #9
   4656c:	str	x0, [sp, #112]
   46570:	bl	742c <ZSTD_getErrorString@@Base+0x8e0>
   46574:	mov	x25, x0
   46578:	cmn	x0, #0x78
   4657c:	b.ls	465ac <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1498>  // b.plast
   46580:	cbz	w19, 465a4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1490>
   46584:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   46588:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   4658c:	add	x0, x0, #0x754
   46590:	ldr	x19, [x19, #4048]
   46594:	ldr	x1, [x19]
   46598:	bl	44d0 <fputs@plt>
   4659c:	ldr	x0, [x19]
   465a0:	bl	4970 <fflush@plt>
   465a4:	mov	x21, x25
   465a8:	b	4611c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1008>
   465ac:	ldp	x0, x1, [sp, #120]
   465b0:	mov	w4, w21
   465b4:	mov	x2, x28
   465b8:	mov	w3, #0xff                  	// #255
   465bc:	bl	82a4 <ZSTD_getErrorString@@Base+0x1758>
   465c0:	mov	x21, x0
   465c4:	add	x28, x0, #0xc
   465c8:	cmn	x0, #0x78
   465cc:	b.ls	465ec <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x14d8>  // b.plast
   465d0:	cbz	w19, 4611c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1008>
   465d4:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   465d8:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   465dc:	add	x0, x0, #0x783
   465e0:	ldr	x19, [x19, #4048]
   465e4:	ldr	x1, [x19]
   465e8:	b	46110 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xffc>
   465ec:	ldr	x0, [sp, #120]
   465f0:	mov	w4, w24
   465f4:	mov	x2, x23
   465f8:	mov	w3, #0x1e                  	// #30
   465fc:	add	x6, x0, x21
   46600:	str	x6, [sp, #120]
   46604:	ldr	x0, [sp, #128]
   46608:	sub	x21, x0, x21
   4660c:	mov	x0, x6
   46610:	mov	x1, x21
   46614:	bl	7330 <ZSTD_getErrorString@@Base+0x7e4>
   46618:	mov	x24, x0
   4661c:	cmn	x0, #0x78
   46620:	ldr	x6, [sp, #120]
   46624:	b.ls	46644 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1530>  // b.plast
   46628:	cbz	w19, 464cc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x13b8>
   4662c:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   46630:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46634:	add	x0, x0, #0x79b
   46638:	ldr	x19, [x19, #4048]
   4663c:	ldr	x1, [x19]
   46640:	b	464c0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x13ac>
   46644:	add	x6, x6, x0
   46648:	sub	x23, x21, x0
   4664c:	mov	w4, w26
   46650:	mov	x0, x6
   46654:	mov	x2, x27
   46658:	mov	x1, x23
   4665c:	mov	w3, #0x34                  	// #52
   46660:	str	x6, [sp, #120]
   46664:	bl	7330 <ZSTD_getErrorString@@Base+0x7e4>
   46668:	add	x24, x24, x0
   4666c:	mov	x21, x0
   46670:	add	x28, x24, x28
   46674:	cmn	x0, #0x78
   46678:	ldr	x6, [sp, #120]
   4667c:	b.ls	4669c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1588>  // b.plast
   46680:	cbz	w19, 4611c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1008>
   46684:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   46688:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   4668c:	add	x0, x0, #0x7c6
   46690:	ldr	x19, [x19, #4048]
   46694:	ldr	x1, [x19]
   46698:	b	46110 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xffc>
   4669c:	ldr	x2, [sp, #112]
   466a0:	add	x24, x6, x0
   466a4:	sub	x23, x23, x0
   466a8:	mov	w4, w25
   466ac:	mov	x1, x23
   466b0:	mov	x0, x24
   466b4:	mov	w3, #0x23                  	// #35
   466b8:	bl	7330 <ZSTD_getErrorString@@Base+0x7e4>
   466bc:	mov	x21, x0
   466c0:	cmn	x0, #0x78
   466c4:	b.ls	466e4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x15d0>  // b.plast
   466c8:	cbz	w19, 4611c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1008>
   466cc:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   466d0:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   466d4:	add	x0, x0, #0x7f5
   466d8:	ldr	x19, [x19, #4048]
   466dc:	ldr	x1, [x19]
   466e0:	b	46110 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xffc>
   466e4:	sub	x23, x23, x21
   466e8:	add	x0, x24, x0
   466ec:	cmp	x23, #0xb
   466f0:	b.hi	46720 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x160c>  // b.pmore
   466f4:	cbz	w19, 46718 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1604>
   466f8:	adrp	x19, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   466fc:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46700:	add	x0, x0, #0x822
   46704:	ldr	x19, [x19, #4048]
   46708:	ldr	x1, [x19]
   4670c:	bl	44d0 <fputs@plt>
   46710:	ldr	x0, [x19]
   46714:	bl	4970 <fflush@plt>
   46718:	mov	x21, #0xffffffffffffffba    	// #-70
   4671c:	b	4611c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1008>
   46720:	mov	x1, #0x1                   	// #1
   46724:	movk	x1, #0x4, lsl #32
   46728:	str	x1, [x24, x21]
   4672c:	mov	w1, #0x8                   	// #8
   46730:	add	x21, x21, x28
   46734:	str	w1, [x0, #8]
   46738:	b	4611c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1008>
   4673c:	mov	x20, #0x0                   	// #0
   46740:	mov	x22, #0x0                   	// #0
   46744:	mov	x21, #0xffffffffffffffde    	// #-34
   46748:	str	xzr, [sp, #104]
   4674c:	b	4611c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1008>

0000000000046750 <ZDICT_isError@@Base>:
   46750:	cmn	x0, #0x78
   46754:	cset	w0, hi  // hi = pmore
   46758:	ret
   4675c:	sub	sp, sp, #0x90
   46760:	cmp	w6, #0x0
   46764:	stp	x29, x30, [sp, #16]
   46768:	add	x29, sp, #0x10
   4676c:	stp	x25, x26, [sp, #80]
   46770:	ldr	w26, [sp, #136]
   46774:	stp	x19, x20, [sp, #32]
   46778:	lsr	x19, x6, #32
   4677c:	mov	x20, x2
   46780:	stp	x21, x22, [sp, #48]
   46784:	bfxil	w26, w7, #0, #32
   46788:	mov	x21, x0
   4678c:	stp	x23, x24, [sp, #64]
   46790:	mov	w0, #0x3                   	// #3
   46794:	mov	x22, x1
   46798:	stp	x27, x28, [sp, #96]
   4679c:	csel	w25, w6, w0, ne  // ne = any
   467a0:	mov	x27, x3
   467a4:	mov	x28, x4
   467a8:	cmp	w19, #0x1
   467ac:	mov	w23, w26
   467b0:	b.ls	467fc <ZDICT_isError@@Base+0xac>  // b.plast
   467b4:	adrp	x24, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   467b8:	adrp	x2, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   467bc:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   467c0:	add	x2, x2, #0x605
   467c4:	ldr	x24, [x24, #4048]
   467c8:	add	x1, x1, #0x849
   467cc:	str	w5, [sp, #124]
   467d0:	ldr	x0, [x24]
   467d4:	bl	4b40 <fprintf@plt>
   467d8:	ldr	x0, [x24]
   467dc:	bl	4970 <fflush@plt>
   467e0:	ldr	x1, [x24]
   467e4:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   467e8:	add	x0, x0, #0x850
   467ec:	bl	44d0 <fputs@plt>
   467f0:	ldr	x0, [x24]
   467f4:	bl	4970 <fflush@plt>
   467f8:	ldr	w5, [sp, #124]
   467fc:	sub	x24, x20, x22
   46800:	mov	x7, x22
   46804:	add	x24, x21, x24
   46808:	mov	x4, x28
   4680c:	mov	x6, x24
   46810:	mov	x3, x27
   46814:	mov	w2, w25
   46818:	sub	x1, x20, #0x8
   4681c:	str	w19, [sp]
   46820:	add	x0, x21, #0x8
   46824:	bl	45ee0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xdcc>
   46828:	mov	x19, x0
   4682c:	bl	4b50 <ZDICT_isError@plt>
   46830:	cbnz	w0, 46890 <ZDICT_isError@@Base+0x140>
   46834:	mov	w0, #0xa437                	// #42039
   46838:	add	x25, x19, #0x8
   4683c:	movk	w0, #0xec30, lsl #16
   46840:	str	w0, [x21]
   46844:	mov	x1, x22
   46848:	mov	x0, x24
   4684c:	mov	x2, #0x0                   	// #0
   46850:	bl	5e84 <ZSTD_initDStream_usingDDict@plt+0x1304>
   46854:	cbnz	w26, 46868 <ZDICT_isError@@Base+0x118>
   46858:	mov	x1, #0x7fff8000            	// #2147450880
   4685c:	udiv	x23, x0, x1
   46860:	msub	x0, x23, x1, x0
   46864:	add	w23, w0, #0x8, lsl #12
   46868:	str	w23, [x21, #4]
   4686c:	add	x19, x22, x25
   46870:	cmp	x19, x20
   46874:	b.cs	46888 <ZDICT_isError@@Base+0x138>  // b.hs, b.nlast
   46878:	mov	x2, x22
   4687c:	mov	x1, x24
   46880:	add	x0, x21, x25
   46884:	bl	4490 <memmove@plt>
   46888:	cmp	x19, x20
   4688c:	csel	x19, x19, x20, ls  // ls = plast
   46890:	mov	x0, x19
   46894:	ldp	x29, x30, [sp, #16]
   46898:	ldp	x19, x20, [sp, #32]
   4689c:	ldp	x21, x22, [sp, #48]
   468a0:	ldp	x23, x24, [sp, #64]
   468a4:	ldp	x25, x26, [sp, #80]
   468a8:	ldp	x27, x28, [sp, #96]
   468ac:	add	sp, sp, #0x90
   468b0:	ret

00000000000468b4 <ZDICT_getErrorName@@Base>:
   468b4:	cmn	x0, #0x78
   468b8:	b.ls	468c4 <ZDICT_getErrorName@@Base+0x10>  // b.plast
   468bc:	neg	w0, w0
   468c0:	b	511c <ZSTD_initDStream_usingDDict@plt+0x59c>
   468c4:	mov	w0, #0x0                   	// #0
   468c8:	b	468c0 <ZDICT_getErrorName@@Base+0xc>

00000000000468cc <ZDICT_getDictID@@Base>:
   468cc:	cmp	x1, #0x7
   468d0:	b.ls	468f0 <ZDICT_getDictID@@Base+0x24>  // b.plast
   468d4:	ldr	w2, [x0]
   468d8:	mov	w1, #0xa437                	// #42039
   468dc:	movk	w1, #0xec30, lsl #16
   468e0:	cmp	w2, w1
   468e4:	b.ne	468f0 <ZDICT_getDictID@@Base+0x24>  // b.any
   468e8:	ldr	w0, [x0, #4]
   468ec:	ret
   468f0:	mov	w0, #0x0                   	// #0
   468f4:	b	468ec <ZDICT_getDictID@@Base+0x20>

00000000000468f8 <ZDICT_finalizeDictionary@@Base>:
   468f8:	sub	sp, sp, #0x180
   468fc:	stp	x29, x30, [sp, #16]
   46900:	add	x29, sp, #0x10
   46904:	stp	x23, x24, [sp, #64]
   46908:	ldr	w23, [sp, #384]
   4690c:	stp	x19, x20, [sp, #32]
   46910:	cmp	w23, #0x0
   46914:	stp	x21, x22, [sp, #48]
   46918:	mov	x22, x0
   4691c:	mov	w0, #0x3                   	// #3
   46920:	stp	x25, x26, [sp, #80]
   46924:	csel	w23, w23, w0, ne  // ne = any
   46928:	cmp	x1, x3
   4692c:	stp	x27, x28, [sp, #96]
   46930:	str	x4, [sp, #120]
   46934:	b.cc	46a7c <ZDICT_finalizeDictionary@@Base+0x184>  // b.lo, b.ul, b.last
   46938:	mov	x19, x3
   4693c:	cmp	x3, #0x7f
   46940:	b.ls	46a74 <ZDICT_finalizeDictionary@@Base+0x17c>  // b.plast
   46944:	mov	x21, x1
   46948:	cmp	x1, #0xff
   4694c:	b.ls	46a7c <ZDICT_finalizeDictionary@@Base+0x184>  // b.plast
   46950:	ldr	w20, [sp, #392]
   46954:	mov	w0, #0xa437                	// #42039
   46958:	mov	x28, x2
   4695c:	movk	w0, #0xec30, lsl #16
   46960:	ldr	w26, [sp, #388]
   46964:	mov	x24, x5
   46968:	mov	w25, w6
   4696c:	mov	x1, x3
   46970:	mov	x2, #0x0                   	// #0
   46974:	str	w0, [sp, #128]
   46978:	mov	x0, x28
   4697c:	bl	5e84 <ZSTD_initDStream_usingDDict@plt+0x1304>
   46980:	cbnz	w20, 46994 <ZDICT_finalizeDictionary@@Base+0x9c>
   46984:	mov	x1, #0x7fff8000            	// #2147450880
   46988:	udiv	x20, x0, x1
   4698c:	msub	x20, x20, x1, x0
   46990:	add	w20, w20, #0x8, lsl #12
   46994:	str	w20, [sp, #132]
   46998:	cmp	w26, #0x1
   4699c:	b.ls	469e0 <ZDICT_finalizeDictionary@@Base+0xe8>  // b.plast
   469a0:	adrp	x20, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   469a4:	adrp	x2, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   469a8:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   469ac:	add	x2, x2, #0x605
   469b0:	ldr	x20, [x20, #4048]
   469b4:	add	x1, x1, #0x849
   469b8:	ldr	x0, [x20]
   469bc:	bl	4b40 <fprintf@plt>
   469c0:	ldr	x0, [x20]
   469c4:	bl	4970 <fflush@plt>
   469c8:	ldr	x1, [x20]
   469cc:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   469d0:	add	x0, x0, #0x850
   469d4:	bl	44d0 <fputs@plt>
   469d8:	ldr	x0, [x20]
   469dc:	bl	4970 <fflush@plt>
   469e0:	ldr	x3, [sp, #120]
   469e4:	mov	x7, x19
   469e8:	mov	x6, x28
   469ec:	mov	w5, w25
   469f0:	mov	x4, x24
   469f4:	mov	w2, w23
   469f8:	mov	x1, #0xf8                  	// #248
   469fc:	str	w26, [sp]
   46a00:	add	x27, sp, #0x80
   46a04:	add	x0, x27, #0x8
   46a08:	bl	45ee0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xdcc>
   46a0c:	mov	x20, x0
   46a10:	bl	4b50 <ZDICT_isError@plt>
   46a14:	cbnz	w0, 46a50 <ZDICT_finalizeDictionary@@Base+0x158>
   46a18:	add	x23, x20, #0x8
   46a1c:	add	x0, x19, x23
   46a20:	cmp	x0, x21
   46a24:	b.ls	46a2c <ZDICT_finalizeDictionary@@Base+0x134>  // b.plast
   46a28:	sub	x19, x21, x23
   46a2c:	mov	x2, x19
   46a30:	mov	x1, x28
   46a34:	add	x0, x22, x23
   46a38:	bl	4490 <memmove@plt>
   46a3c:	add	x20, x19, x23
   46a40:	mov	x2, x23
   46a44:	mov	x1, x27
   46a48:	mov	x0, x22
   46a4c:	bl	4460 <memcpy@plt>
   46a50:	mov	x0, x20
   46a54:	ldp	x29, x30, [sp, #16]
   46a58:	ldp	x19, x20, [sp, #32]
   46a5c:	ldp	x21, x22, [sp, #48]
   46a60:	ldp	x23, x24, [sp, #64]
   46a64:	ldp	x25, x26, [sp, #80]
   46a68:	ldp	x27, x28, [sp, #96]
   46a6c:	add	sp, sp, #0x180
   46a70:	ret
   46a74:	mov	x20, #0xffffffffffffffb8    	// #-72
   46a78:	b	46a50 <ZDICT_finalizeDictionary@@Base+0x158>
   46a7c:	mov	x20, #0xffffffffffffffba    	// #-70
   46a80:	b	46a50 <ZDICT_finalizeDictionary@@Base+0x158>
   46a84:	stp	x29, x30, [sp, #-240]!
   46a88:	mov	x29, sp
   46a8c:	str	x0, [sp, #152]
   46a90:	mov	w0, #0x2710                	// #10000
   46a94:	cmp	w4, w0
   46a98:	stp	x21, x22, [sp, #32]
   46a9c:	csel	w0, w4, w0, cs  // cs = hs, nlast
   46aa0:	mov	x21, x1
   46aa4:	lsr	x1, x1, #4
   46aa8:	cmp	w0, w1
   46aac:	stp	x19, x20, [sp, #16]
   46ab0:	csel	w0, w0, w1, hi  // hi = pmore
   46ab4:	str	w0, [sp, #144]
   46ab8:	mov	w0, #0xc                   	// #12
   46abc:	mov	x20, x6
   46ac0:	stp	x23, x24, [sp, #48]
   46ac4:	ldr	w1, [sp, #144]
   46ac8:	stp	x25, x26, [sp, #64]
   46acc:	stp	x27, x28, [sp, #80]
   46ad0:	mov	x28, x2
   46ad4:	umull	x0, w1, w0
   46ad8:	mov	w27, w4
   46adc:	str	w5, [sp, #100]
   46ae0:	str	x3, [sp, #136]
   46ae4:	stp	x5, x6, [sp, #192]
   46ae8:	bl	46a0 <malloc@plt>
   46aec:	mov	x19, x0
   46af0:	ldr	w0, [sp, #100]
   46af4:	cbz	w0, 46b54 <ZDICT_finalizeDictionary@@Base+0x25c>
   46af8:	cmp	w0, #0x1e
   46afc:	b.hi	46b60 <ZDICT_finalizeDictionary@@Base+0x268>  // b.pmore
   46b00:	ldrb	w0, [sp, #100]
   46b04:	lsr	w0, w27, w0
   46b08:	mov	x22, #0x0                   	// #0
   46b0c:	str	w0, [sp, #160]
   46b10:	mov	x0, #0x0                   	// #0
   46b14:	cmp	w27, w0
   46b18:	b.hi	46b68 <ZDICT_finalizeDictionary@@Base+0x270>  // b.pmore
   46b1c:	cbz	x19, 473e0 <ZDICT_finalizeDictionary@@Base+0xae8>
   46b20:	cmp	x21, #0xff
   46b24:	b.hi	46b7c <ZDICT_finalizeDictionary@@Base+0x284>  // b.pmore
   46b28:	mov	x20, #0xffffffffffffffba    	// #-70
   46b2c:	mov	x0, x19
   46b30:	bl	48e0 <free@plt>
   46b34:	mov	x0, x20
   46b38:	ldp	x19, x20, [sp, #16]
   46b3c:	ldp	x21, x22, [sp, #32]
   46b40:	ldp	x23, x24, [sp, #48]
   46b44:	ldp	x25, x26, [sp, #64]
   46b48:	ldp	x27, x28, [sp, #80]
   46b4c:	ldp	x29, x30, [sp], #240
   46b50:	ret
   46b54:	mov	w0, #0x9                   	// #9
   46b58:	str	w0, [sp, #100]
   46b5c:	b	46b00 <ZDICT_finalizeDictionary@@Base+0x208>
   46b60:	mov	w0, #0x4                   	// #4
   46b64:	b	46b08 <ZDICT_finalizeDictionary@@Base+0x210>
   46b68:	ldr	x1, [sp, #136]
   46b6c:	ldr	x1, [x1, x0, lsl #3]
   46b70:	add	x0, x0, #0x1
   46b74:	add	x22, x22, x1
   46b78:	b	46b14 <ZDICT_finalizeDictionary@@Base+0x21c>
   46b7c:	cmp	x22, #0x1ff
   46b80:	b.hi	46b94 <ZDICT_finalizeDictionary@@Base+0x29c>  // b.pmore
   46b84:	mov	x0, x19
   46b88:	mov	x20, #0xffffffffffffffde    	// #-34
   46b8c:	bl	48e0 <free@plt>
   46b90:	b	46b34 <ZDICT_finalizeDictionary@@Base+0x23c>
   46b94:	add	x23, x22, #0x2
   46b98:	mov	x0, #0x1                   	// #1
   46b9c:	str	x0, [x19]
   46ba0:	mov	w0, #0xffffffff            	// #-1
   46ba4:	lsl	x23, x23, #2
   46ba8:	str	w0, [x19, #8]
   46bac:	mov	x0, x23
   46bb0:	bl	46a0 <malloc@plt>
   46bb4:	str	x0, [sp, #104]
   46bb8:	add	x0, x0, #0x4
   46bbc:	add	x24, x22, #0x10
   46bc0:	str	x0, [sp, #112]
   46bc4:	sub	x0, x23, #0x8
   46bc8:	bl	46a0 <malloc@plt>
   46bcc:	str	x0, [sp, #120]
   46bd0:	mov	x0, x24
   46bd4:	bl	46a0 <malloc@plt>
   46bd8:	mov	x25, x0
   46bdc:	ubfiz	x0, x27, #2, #32
   46be0:	bl	46a0 <malloc@plt>
   46be4:	str	x0, [sp, #128]
   46be8:	cmp	w20, #0x1
   46bec:	b.ls	46c18 <ZDICT_finalizeDictionary@@Base+0x320>  // b.plast
   46bf0:	adrp	x23, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   46bf4:	adrp	x2, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46bf8:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46bfc:	add	x2, x2, #0x605
   46c00:	ldr	x23, [x23, #4048]
   46c04:	add	x1, x1, #0x849
   46c08:	ldr	x0, [x23]
   46c0c:	bl	4b40 <fprintf@plt>
   46c10:	ldr	x0, [x23]
   46c14:	bl	4970 <fflush@plt>
   46c18:	ldr	x0, [sp, #104]
   46c1c:	cmp	x0, #0x0
   46c20:	ldr	x0, [sp, #120]
   46c24:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   46c28:	b.ne	46e40 <ZDICT_finalizeDictionary@@Base+0x548>  // b.any
   46c2c:	ldr	x0, [sp, #104]
   46c30:	bl	48e0 <free@plt>
   46c34:	ldr	x0, [sp, #120]
   46c38:	bl	48e0 <free@plt>
   46c3c:	mov	x0, x25
   46c40:	bl	48e0 <free@plt>
   46c44:	ldr	x0, [sp, #128]
   46c48:	bl	48e0 <free@plt>
   46c4c:	cmp	w20, #0x2
   46c50:	b.hi	471e0 <ZDICT_finalizeDictionary@@Base+0x8e8>  // b.pmore
   46c54:	mov	x1, x19
   46c58:	mov	x0, #0x0                   	// #0
   46c5c:	mov	w24, #0x0                   	// #0
   46c60:	mov	x3, #0xc                   	// #12
   46c64:	ldr	w2, [x1], #4
   46c68:	add	x0, x0, #0x1
   46c6c:	cmp	w2, w0
   46c70:	b.hi	47368 <ZDICT_finalizeDictionary@@Base+0xa70>  // b.pmore
   46c74:	cmp	w24, #0x7f
   46c78:	b.ls	46b84 <ZDICT_finalizeDictionary@@Base+0x28c>  // b.plast
   46c7c:	lsr	x0, x21, #2
   46c80:	mov	w23, w24
   46c84:	cmp	x0, w24, uxtw
   46c88:	b.ls	46d44 <ZDICT_finalizeDictionary@@Base+0x44c>  // b.plast
   46c8c:	cmp	w20, #0x1
   46c90:	b.ls	46cbc <ZDICT_finalizeDictionary@@Base+0x3c4>  // b.plast
   46c94:	adrp	x25, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   46c98:	mov	w3, w21
   46c9c:	mov	w2, w24
   46ca0:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46ca4:	ldr	x25, [x25, #4048]
   46ca8:	add	x1, x1, #0x962
   46cac:	ldr	x0, [x25]
   46cb0:	bl	4b40 <fprintf@plt>
   46cb4:	ldr	x0, [x25]
   46cb8:	bl	4970 <fflush@plt>
   46cbc:	mov	x0, #0xa                   	// #10
   46cc0:	mul	x0, x21, x0
   46cc4:	cmp	x0, x22
   46cc8:	b.ls	47378 <ZDICT_finalizeDictionary@@Base+0xa80>  // b.plast
   46ccc:	cmp	w20, #0x1
   46cd0:	b.ls	46d44 <ZDICT_finalizeDictionary@@Base+0x44c>  // b.plast
   46cd4:	adrp	x25, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   46cd8:	ubfx	x2, x22, #20, #32
   46cdc:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46ce0:	add	x1, x1, #0x9b1
   46ce4:	ldr	x25, [x25, #4048]
   46ce8:	ldr	x0, [x25]
   46cec:	bl	4b40 <fprintf@plt>
   46cf0:	ldr	x0, [x25]
   46cf4:	bl	4970 <fflush@plt>
   46cf8:	ldr	w0, [sp, #160]
   46cfc:	cmp	w0, #0x4
   46d00:	b.ls	46d44 <ZDICT_finalizeDictionary@@Base+0x44c>  // b.plast
   46d04:	adrp	x22, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   46d08:	ldr	w0, [sp, #100]
   46d0c:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46d10:	add	x1, x1, #0x9f4
   46d14:	ldr	x22, [x22, #4048]
   46d18:	add	w2, w0, #0x1
   46d1c:	ldr	x0, [x22]
   46d20:	bl	4b40 <fprintf@plt>
   46d24:	ldr	x0, [x22]
   46d28:	bl	4970 <fflush@plt>
   46d2c:	ldr	x1, [x22]
   46d30:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46d34:	add	x0, x0, #0xa3d
   46d38:	bl	44d0 <fputs@plt>
   46d3c:	ldr	x0, [x22]
   46d40:	bl	4970 <fflush@plt>
   46d44:	add	x0, x21, x21, lsl #1
   46d48:	cmp	x23, x0
   46d4c:	b.ls	46dd4 <ZDICT_finalizeDictionary@@Base+0x4dc>  // b.plast
   46d50:	ldr	w0, [sp, #100]
   46d54:	cmp	w27, #0x8
   46d58:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
   46d5c:	b.ls	46dd4 <ZDICT_finalizeDictionary@@Base+0x4dc>  // b.plast
   46d60:	sub	w22, w0, #0x1
   46d64:	lsr	w0, w27, w22
   46d68:	cmp	w0, #0x4
   46d6c:	b.ls	4738c <ZDICT_finalizeDictionary@@Base+0xa94>  // b.plast
   46d70:	cmp	w20, #0x1
   46d74:	b.ls	46dd4 <ZDICT_finalizeDictionary@@Base+0x4dc>  // b.plast
   46d78:	adrp	x20, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   46d7c:	mov	w3, w21
   46d80:	mov	w2, w24
   46d84:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46d88:	ldr	x20, [x20, #4048]
   46d8c:	add	x1, x1, #0xa98
   46d90:	ldr	x0, [x20]
   46d94:	bl	4b40 <fprintf@plt>
   46d98:	ldr	x0, [x20]
   46d9c:	bl	4970 <fflush@plt>
   46da0:	ldr	x0, [x20]
   46da4:	mov	w2, w22
   46da8:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46dac:	add	x1, x1, #0xae8
   46db0:	bl	4b40 <fprintf@plt>
   46db4:	ldr	x0, [x20]
   46db8:	bl	4970 <fflush@plt>
   46dbc:	ldr	x1, [x20]
   46dc0:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46dc4:	add	x0, x0, #0xb36
   46dc8:	bl	44d0 <fputs@plt>
   46dcc:	ldr	x0, [x20]
   46dd0:	bl	4970 <fflush@plt>
   46dd4:	mov	x1, x19
   46dd8:	mov	w0, #0x1                   	// #1
   46ddc:	mov	w23, #0x0                   	// #0
   46de0:	ldr	w3, [x1], #16
   46de4:	cmp	w0, w3
   46de8:	b.cc	47394 <ZDICT_finalizeDictionary@@Base+0xa9c>  // b.lo, b.ul, b.last
   46dec:	mov	w20, #0xc                   	// #12
   46df0:	mov	x22, x19
   46df4:	ldr	x1, [sp, #152]
   46df8:	umaddl	x20, w0, w20, x19
   46dfc:	str	w0, [x22], #12
   46e00:	add	x3, x1, x21
   46e04:	cmp	x20, x22
   46e08:	b.ne	473b4 <ZDICT_finalizeDictionary@@Base+0xabc>  // b.any
   46e0c:	ldr	w7, [sp, #204]
   46e10:	mov	w5, w27
   46e14:	ldr	x4, [sp, #136]
   46e18:	mov	x3, x28
   46e1c:	ldr	x0, [sp, #152]
   46e20:	mov	x2, x21
   46e24:	ldur	x6, [sp, #196]
   46e28:	mov	w1, w23
   46e2c:	bl	4675c <ZDICT_isError@@Base+0xc>
   46e30:	mov	x20, x0
   46e34:	mov	x0, x19
   46e38:	bl	48e0 <free@plt>
   46e3c:	b	46b34 <ZDICT_finalizeDictionary@@Base+0x23c>
   46e40:	ldr	x0, [sp, #128]
   46e44:	cmp	x25, #0x0
   46e48:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   46e4c:	b.eq	46c2c <ZDICT_finalizeDictionary@@Base+0x334>  // b.none
   46e50:	ldr	w0, [sp, #160]
   46e54:	mov	x2, x24
   46e58:	ldr	w1, [sp, #160]
   46e5c:	cmp	w0, #0x4
   46e60:	mov	w0, #0x4                   	// #4
   46e64:	csel	w0, w1, w0, cs  // cs = hs, nlast
   46e68:	mov	w1, #0x0                   	// #0
   46e6c:	str	w0, [sp, #164]
   46e70:	mov	x0, x25
   46e74:	bl	4700 <memset@plt>
   46e78:	mov	x0, #0x7d000000            	// #2097152000
   46e7c:	cmp	x22, x0
   46e80:	b.ls	46fc4 <ZDICT_finalizeDictionary@@Base+0x6cc>  // b.plast
   46e84:	cmp	w20, #0x2
   46e88:	b.ls	46eb0 <ZDICT_finalizeDictionary@@Base+0x5b8>  // b.plast
   46e8c:	adrp	x23, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   46e90:	mov	w2, #0x7d0                 	// #2000
   46e94:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46e98:	add	x1, x1, #0x861
   46e9c:	ldr	x23, [x23, #4048]
   46ea0:	ldr	x0, [x23]
   46ea4:	bl	4b40 <fprintf@plt>
   46ea8:	ldr	x0, [x23]
   46eac:	bl	4970 <fflush@plt>
   46eb0:	mov	x23, x22
   46eb4:	mov	w24, w27
   46eb8:	mov	x0, #0x7d000000            	// #2097152000
   46ebc:	ldr	x1, [sp, #136]
   46ec0:	sub	w24, w24, #0x1
   46ec4:	ldr	x1, [x1, w24, uxtw #3]
   46ec8:	sub	x23, x23, x1
   46ecc:	cmp	x23, x0
   46ed0:	b.hi	46ebc <ZDICT_finalizeDictionary@@Base+0x5c4>  // b.pmore
   46ed4:	cmp	w20, #0x1
   46ed8:	b.ls	46f04 <ZDICT_finalizeDictionary@@Base+0x60c>  // b.plast
   46edc:	adrp	x26, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   46ee0:	ubfx	x3, x23, #20, #32
   46ee4:	mov	w2, w24
   46ee8:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46eec:	ldr	x26, [x26, #4048]
   46ef0:	add	x1, x1, #0x88e
   46ef4:	ldr	x0, [x26]
   46ef8:	bl	4b40 <fprintf@plt>
   46efc:	ldr	x0, [x26]
   46f00:	bl	4970 <fflush@plt>
   46f04:	ldr	x1, [sp, #112]
   46f08:	mov	w2, w23
   46f0c:	mov	x0, x28
   46f10:	mov	w3, #0x0                   	// #0
   46f14:	bl	43884 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x39e8>
   46f18:	cbnz	w0, 46c2c <ZDICT_finalizeDictionary@@Base+0x334>
   46f1c:	ldr	x0, [sp, #112]
   46f20:	str	w23, [x0, x23, lsl #2]
   46f24:	ldr	x0, [sp, #104]
   46f28:	str	w23, [x0]
   46f2c:	mov	x0, #0x0                   	// #0
   46f30:	cmp	x0, x23
   46f34:	b.ne	46fd0 <ZDICT_finalizeDictionary@@Base+0x6d8>  // b.any
   46f38:	ldp	x1, x2, [sp, #128]
   46f3c:	mov	x0, #0x1                   	// #1
   46f40:	str	wzr, [x1], #-4
   46f44:	sub	x3, x2, #0x8
   46f48:	cmp	x0, x24
   46f4c:	b.cc	46fe4 <ZDICT_finalizeDictionary@@Base+0x6ec>  // b.lo, b.ul, b.last
   46f50:	cmp	w20, #0x1
   46f54:	b.ls	46f9c <ZDICT_finalizeDictionary@@Base+0x6a4>  // b.plast
   46f58:	adrp	x24, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   46f5c:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46f60:	add	x0, x0, #0x8b8
   46f64:	ldr	x24, [x24, #4048]
   46f68:	ldr	x1, [x24]
   46f6c:	bl	44d0 <fputs@plt>
   46f70:	ldr	x0, [x24]
   46f74:	bl	4970 <fflush@plt>
   46f78:	cmp	w20, #0x2
   46f7c:	b.eq	46f9c <ZDICT_finalizeDictionary@@Base+0x6a4>  // b.none
   46f80:	ldr	w2, [sp, #164]
   46f84:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   46f88:	ldr	x0, [x24]
   46f8c:	add	x1, x1, #0x8cf
   46f90:	bl	4b40 <fprintf@plt>
   46f94:	ldr	x0, [x24]
   46f98:	bl	4970 <fflush@plt>
   46f9c:	add	x26, sp, #0xe0
   46fa0:	mov	w24, #0x0                   	// #0
   46fa4:	str	xzr, [sp, #168]
   46fa8:	mov	w0, w24
   46fac:	cmp	x23, w24, uxtw
   46fb0:	b.ls	46c2c <ZDICT_finalizeDictionary@@Base+0x334>  // b.plast
   46fb4:	ldrb	w1, [x25, x0]
   46fb8:	cbz	w1, 47000 <ZDICT_finalizeDictionary@@Base+0x708>
   46fbc:	add	w24, w24, #0x1
   46fc0:	b	46fa8 <ZDICT_finalizeDictionary@@Base+0x6b0>
   46fc4:	mov	x23, x22
   46fc8:	mov	w24, w27
   46fcc:	b	46ed4 <ZDICT_finalizeDictionary@@Base+0x5dc>
   46fd0:	ldp	x1, x2, [sp, #112]
   46fd4:	ldrsw	x1, [x1, x0, lsl #2]
   46fd8:	str	w0, [x2, x1, lsl #2]
   46fdc:	add	x0, x0, #0x1
   46fe0:	b	46f30 <ZDICT_finalizeDictionary@@Base+0x638>
   46fe4:	ldr	x4, [x3, x0, lsl #3]
   46fe8:	ldr	w2, [x1, x0, lsl #2]
   46fec:	add	w2, w2, w4
   46ff0:	ldr	x4, [sp, #128]
   46ff4:	str	w2, [x4, x0, lsl #2]
   46ff8:	add	x0, x0, #0x1
   46ffc:	b	46f48 <ZDICT_finalizeDictionary@@Base+0x650>
   47000:	ldr	x1, [sp, #120]
   47004:	mov	w5, w20
   47008:	ldr	w4, [sp, #164]
   4700c:	mov	x3, x28
   47010:	ldr	w2, [x1, x0, lsl #2]
   47014:	mov	x0, x25
   47018:	ldr	x1, [sp, #112]
   4701c:	bl	45a14 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x900>
   47020:	lsr	x5, x0, #32
   47024:	stp	w0, w5, [sp, #208]
   47028:	str	w1, [sp, #216]
   4702c:	cbz	x5, 46fbc <ZDICT_finalizeDictionary@@Base+0x6c4>
   47030:	mov	w6, w1
   47034:	ldr	w2, [sp, #216]
   47038:	ldr	x1, [sp, #208]
   4703c:	mov	x4, x28
   47040:	mov	x0, x19
   47044:	mov	w3, #0x0                   	// #0
   47048:	str	x1, [x26]
   4704c:	str	w2, [x26, #8]
   47050:	mov	w2, w2
   47054:	str	w6, [sp, #176]
   47058:	str	x5, [sp, #184]
   4705c:	bl	457a8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x694>
   47060:	ldr	w6, [sp, #176]
   47064:	mov	w18, w0
   47068:	ldr	x5, [sp, #184]
   4706c:	cbz	w0, 470f0 <ZDICT_finalizeDictionary@@Base+0x7f8>
   47070:	mov	w0, #0xc                   	// #12
   47074:	mov	x4, x28
   47078:	mov	w3, w18
   4707c:	umull	x0, w18, w0
   47080:	add	x6, x19, x0
   47084:	stp	x6, x5, [sp, #176]
   47088:	ldr	x1, [x19, x0]
   4708c:	mov	x0, x19
   47090:	ldr	w2, [x6, #8]
   47094:	bl	457a8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x694>
   47098:	ldp	x6, x5, [sp, #176]
   4709c:	cbz	w0, 47144 <ZDICT_finalizeDictionary@@Base+0x84c>
   470a0:	ldr	w2, [x19]
   470a4:	mov	x1, x6
   470a8:	sub	w2, w2, #0x1
   470ac:	cmp	w18, w2
   470b0:	b.cc	470c8 <ZDICT_finalizeDictionary@@Base+0x7d0>  // b.lo, b.ul, b.last
   470b4:	ldr	w1, [x19]
   470b8:	mov	w18, w0
   470bc:	sub	w1, w1, #0x1
   470c0:	str	w1, [x19]
   470c4:	b	47070 <ZDICT_finalizeDictionary@@Base+0x778>
   470c8:	add	w18, w18, #0x1
   470cc:	mov	w3, #0xc                   	// #12
   470d0:	add	x1, x1, #0xc
   470d4:	umull	x3, w18, w3
   470d8:	add	x4, x19, x3
   470dc:	ldr	x3, [x19, x3]
   470e0:	stur	x3, [x1, #-12]
   470e4:	ldr	w3, [x4, #8]
   470e8:	stur	w3, [x1, #-4]
   470ec:	b	470ac <ZDICT_finalizeDictionary@@Base+0x7b4>
   470f0:	ldr	w0, [x19]
   470f4:	ldr	w1, [sp, #144]
   470f8:	cmp	w1, w0
   470fc:	b.hi	47104 <ZDICT_finalizeDictionary@@Base+0x80c>  // b.pmore
   47100:	sub	w0, w1, #0x1
   47104:	sub	w3, w0, #0x1
   47108:	mov	w1, #0xc                   	// #12
   4710c:	add	w2, w3, #0x1
   47110:	umull	x7, w3, w1
   47114:	umull	x2, w2, w1
   47118:	add	x4, x19, x7
   4711c:	add	x1, x19, x2
   47120:	ldr	w8, [x4, #8]
   47124:	cmp	w8, w6
   47128:	b.cc	471c8 <ZDICT_finalizeDictionary@@Base+0x8d0>  // b.lo, b.ul, b.last
   4712c:	ldr	x2, [x26]
   47130:	str	x2, [x1]
   47134:	ldr	w2, [x26, #8]
   47138:	add	w0, w0, #0x1
   4713c:	str	w2, [x1, #8]
   47140:	str	w0, [x19]
   47144:	add	w24, w24, w5
   47148:	cmp	w20, #0x1
   4714c:	b.ls	46fa8 <ZDICT_finalizeDictionary@@Base+0x6b0>  // b.plast
   47150:	bl	44c0 <clock@plt>
   47154:	ldr	x1, [sp, #168]
   47158:	sub	x0, x0, x1
   4715c:	mov	x1, #0x93e0                	// #37856
   47160:	movk	x1, #0x4, lsl #16
   47164:	cmp	x0, x1
   47168:	b.le	46fa8 <ZDICT_finalizeDictionary@@Base+0x6b0>
   4716c:	bl	44c0 <clock@plt>
   47170:	scvtf	d1, x23
   47174:	ucvtf	d0, w24
   47178:	adrp	x2, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   4717c:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   47180:	add	x1, x1, #0x8e4
   47184:	ldr	x2, [x2, #4048]
   47188:	stp	x0, x2, [sp, #168]
   4718c:	mov	x0, #0x4059000000000000    	// #4636737291354636288
   47190:	fdiv	d0, d0, d1
   47194:	fmov	d1, x0
   47198:	ldr	x0, [x2]
   4719c:	fmul	d0, d0, d1
   471a0:	bl	4b40 <fprintf@plt>
   471a4:	ldr	x2, [sp, #176]
   471a8:	ldr	x0, [x2]
   471ac:	bl	4970 <fflush@plt>
   471b0:	cmp	w20, #0x3
   471b4:	ldr	x2, [sp, #176]
   471b8:	b.ls	46fa8 <ZDICT_finalizeDictionary@@Base+0x6b0>  // b.plast
   471bc:	ldr	x0, [x2]
   471c0:	bl	4970 <fflush@plt>
   471c4:	b	46fa8 <ZDICT_finalizeDictionary@@Base+0x6b0>
   471c8:	ldr	x7, [x19, x7]
   471cc:	str	x7, [x19, x2]
   471d0:	sub	w3, w3, #0x1
   471d4:	ldr	w2, [x4, #8]
   471d8:	str	w2, [x1, #8]
   471dc:	b	47108 <ZDICT_finalizeDictionary@@Base+0x810>
   471e0:	mov	x1, x19
   471e4:	mov	w25, #0x19                  	// #25
   471e8:	mov	w3, #0x0                   	// #0
   471ec:	mov	x4, #0xc                   	// #12
   471f0:	ldr	w2, [x1], #4
   471f4:	cmp	w2, #0x19
   471f8:	csel	w0, w2, w25, ls  // ls = plast
   471fc:	str	w0, [sp, #104]
   47200:	mov	x0, #0x0                   	// #0
   47204:	add	x0, x0, #0x1
   47208:	cmp	w2, w0
   4720c:	b.hi	472ac <ZDICT_finalizeDictionary@@Base+0x9b4>  // b.pmore
   47210:	adrp	x24, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   47214:	sub	w2, w2, #0x1
   47218:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   4721c:	add	x1, x1, #0x8f0
   47220:	ldr	x23, [x24, #4048]
   47224:	add	x26, x19, #0xc
   47228:	mov	w25, #0x1                   	// #1
   4722c:	ldr	x0, [x23]
   47230:	bl	4b40 <fprintf@plt>
   47234:	ldr	x0, [x23]
   47238:	bl	4970 <fflush@plt>
   4723c:	ldr	w0, [sp, #104]
   47240:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   47244:	add	x1, x1, #0x918
   47248:	sub	w2, w0, #0x1
   4724c:	ldr	x0, [x23]
   47250:	bl	4b40 <fprintf@plt>
   47254:	ldr	x0, [x23]
   47258:	bl	4970 <fflush@plt>
   4725c:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   47260:	add	x0, x0, #0x930
   47264:	str	x0, [sp, #112]
   47268:	ldr	w0, [sp, #104]
   4726c:	cmp	w25, w0
   47270:	b.cs	46c54 <ZDICT_finalizeDictionary@@Base+0x35c>  // b.hs, b.nlast
   47274:	ldp	w4, w3, [x26]
   47278:	mov	w0, #0x28                  	// #40
   4727c:	cmp	w3, #0x28
   47280:	mov	w8, w4
   47284:	csel	w7, w3, w0, ls  // ls = plast
   47288:	cmp	x22, w4, uxtw
   4728c:	b.cc	4729c <ZDICT_finalizeDictionary@@Base+0x9a4>  // b.lo, b.ul, b.last
   47290:	add	w0, w4, w3
   47294:	cmp	x0, x22
   47298:	b.ls	472bc <ZDICT_finalizeDictionary@@Base+0x9c4>  // b.plast
   4729c:	mov	x0, x19
   472a0:	mov	x20, #0xffffffffffffffff    	// #-1
   472a4:	bl	48e0 <free@plt>
   472a8:	b	46b34 <ZDICT_finalizeDictionary@@Base+0x23c>
   472ac:	mul	x5, x0, x4
   472b0:	ldr	w5, [x1, x5]
   472b4:	add	w3, w3, w5
   472b8:	b	47204 <ZDICT_finalizeDictionary@@Base+0x90c>
   472bc:	ldr	x23, [x24, #4048]
   472c0:	mov	w2, w25
   472c4:	ldr	w5, [x26, #8]
   472c8:	ldr	x1, [sp, #112]
   472cc:	str	x8, [sp, #120]
   472d0:	ldr	x0, [x23]
   472d4:	str	w7, [sp, #128]
   472d8:	bl	4b40 <fprintf@plt>
   472dc:	ldr	x0, [x23]
   472e0:	bl	4970 <fflush@plt>
   472e4:	ldr	x8, [sp, #120]
   472e8:	mov	x3, #0x0                   	// #0
   472ec:	ldr	w7, [sp, #128]
   472f0:	add	x8, x28, x8
   472f4:	mov	w7, w7
   472f8:	cmp	x7, x3
   472fc:	b.hi	47328 <ZDICT_finalizeDictionary@@Base+0xa30>  // b.pmore
   47300:	ldr	x23, [x24, #4048]
   47304:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   47308:	add	x0, x0, #0x95e
   4730c:	add	w25, w25, #0x1
   47310:	add	x26, x26, #0xc
   47314:	ldr	x1, [x23]
   47318:	bl	44d0 <fputs@plt>
   4731c:	ldr	x0, [x23]
   47320:	bl	4970 <fflush@plt>
   47324:	b	47268 <ZDICT_finalizeDictionary@@Base+0x970>
   47328:	ldrb	w0, [x8, x3]
   4732c:	mov	w2, #0x2e                  	// #46
   47330:	stp	x8, x3, [sp, #120]
   47334:	sub	w1, w0, #0x20
   47338:	and	w1, w1, #0xff
   4733c:	str	x7, [sp, #144]
   47340:	cmp	w1, #0x5f
   47344:	ldr	x1, [x23]
   47348:	csel	w0, w0, w2, cc  // cc = lo, ul, last
   4734c:	bl	45a0 <fputc@plt>
   47350:	ldr	x0, [x23]
   47354:	bl	4970 <fflush@plt>
   47358:	ldp	x8, x3, [sp, #120]
   4735c:	ldr	x7, [sp, #144]
   47360:	add	x3, x3, #0x1
   47364:	b	472f8 <ZDICT_finalizeDictionary@@Base+0xa00>
   47368:	mul	x4, x0, x3
   4736c:	ldr	w4, [x1, x4]
   47370:	add	w24, w24, w4
   47374:	b	46c68 <ZDICT_finalizeDictionary@@Base+0x370>
   47378:	ldr	w0, [sp, #160]
   4737c:	cmp	w0, #0x4
   47380:	b.ls	46d44 <ZDICT_finalizeDictionary@@Base+0x44c>  // b.plast
   47384:	cmp	w20, #0x1
   47388:	b	46d00 <ZDICT_finalizeDictionary@@Base+0x408>
   4738c:	sub	w22, w22, #0x1
   47390:	b	46d64 <ZDICT_finalizeDictionary@@Base+0x46c>
   47394:	ldr	w2, [x1], #12
   47398:	add	w4, w23, w2
   4739c:	add	w2, w23, w2
   473a0:	cmp	x2, x21
   473a4:	b.hi	46dec <ZDICT_finalizeDictionary@@Base+0x4f4>  // b.pmore
   473a8:	add	w0, w0, #0x1
   473ac:	mov	w23, w4
   473b0:	b	46de4 <ZDICT_finalizeDictionary@@Base+0x4ec>
   473b4:	ldr	w2, [x22, #4]
   473b8:	ldr	x0, [sp, #152]
   473bc:	sub	x3, x3, x2
   473c0:	cmp	x0, x3
   473c4:	b.hi	4729c <ZDICT_finalizeDictionary@@Base+0x9a4>  // b.pmore
   473c8:	ldr	w1, [x22], #12
   473cc:	mov	x0, x3
   473d0:	add	x1, x28, x1
   473d4:	bl	4460 <memcpy@plt>
   473d8:	mov	x3, x0
   473dc:	b	46e04 <ZDICT_finalizeDictionary@@Base+0x50c>
   473e0:	mov	x20, #0xffffffffffffffc0    	// #-64
   473e4:	b	46b34 <ZDICT_finalizeDictionary@@Base+0x23c>

00000000000473e8 <ZDICT_trainFromBuffer_legacy@@Base>:
   473e8:	stp	x29, x30, [sp, #-96]!
   473ec:	mov	x29, sp
   473f0:	stp	x21, x22, [sp, #32]
   473f4:	mov	x21, x3
   473f8:	mov	w22, w4
   473fc:	stp	x23, x24, [sp, #48]
   47400:	mov	x24, x1
   47404:	mov	x23, x0
   47408:	str	x25, [sp, #64]
   4740c:	mov	x25, x2
   47410:	mov	x0, #0x0                   	// #0
   47414:	stp	x19, x20, [sp, #16]
   47418:	mov	x19, #0x0                   	// #0
   4741c:	stp	x5, x6, [sp, #80]
   47420:	cmp	w22, w0
   47424:	b.hi	474c0 <ZDICT_trainFromBuffer_legacy@@Base+0xd8>  // b.pmore
   47428:	cmp	x19, #0x1ff
   4742c:	b.ls	474d0 <ZDICT_trainFromBuffer_legacy@@Base+0xe8>  // b.plast
   47430:	add	x0, x19, #0x20
   47434:	bl	46a0 <malloc@plt>
   47438:	mov	x20, x0
   4743c:	cbz	x0, 474d8 <ZDICT_trainFromBuffer_legacy@@Base+0xf0>
   47440:	mov	x2, x19
   47444:	mov	x1, x25
   47448:	bl	4460 <memcpy@plt>
   4744c:	add	x19, x20, x19
   47450:	mov	w0, #0x79b1                	// #31153
   47454:	mov	w3, #0xca77                	// #51831
   47458:	mov	x2, #0x0                   	// #0
   4745c:	movk	w0, #0x9e37, lsl #16
   47460:	movk	w3, #0x85eb, lsl #16
   47464:	mul	w0, w0, w3
   47468:	lsr	w1, w0, #21
   4746c:	strb	w1, [x19, x2]
   47470:	add	x2, x2, #0x1
   47474:	cmp	x2, #0x20
   47478:	b.ne	47464 <ZDICT_trainFromBuffer_legacy@@Base+0x7c>  // b.any
   4747c:	ldp	x5, x6, [sp, #80]
   47480:	mov	w4, w22
   47484:	mov	x3, x21
   47488:	mov	x2, x20
   4748c:	mov	x1, x24
   47490:	mov	x0, x23
   47494:	bl	46a84 <ZDICT_finalizeDictionary@@Base+0x18c>
   47498:	mov	x19, x0
   4749c:	mov	x0, x20
   474a0:	bl	48e0 <free@plt>
   474a4:	mov	x0, x19
   474a8:	ldp	x19, x20, [sp, #16]
   474ac:	ldp	x21, x22, [sp, #32]
   474b0:	ldp	x23, x24, [sp, #48]
   474b4:	ldr	x25, [sp, #64]
   474b8:	ldp	x29, x30, [sp], #96
   474bc:	ret
   474c0:	ldr	x1, [x21, x0, lsl #3]
   474c4:	add	x0, x0, #0x1
   474c8:	add	x19, x19, x1
   474cc:	b	47420 <ZDICT_trainFromBuffer_legacy@@Base+0x38>
   474d0:	mov	x19, #0x0                   	// #0
   474d4:	b	474a4 <ZDICT_trainFromBuffer_legacy@@Base+0xbc>
   474d8:	mov	x19, #0xffffffffffffffc0    	// #-64
   474dc:	b	474a4 <ZDICT_trainFromBuffer_legacy@@Base+0xbc>

00000000000474e0 <ZDICT_trainFromBuffer@@Base>:
   474e0:	stp	x29, x30, [sp, #-80]!
   474e4:	mov	w5, #0x8                   	// #8
   474e8:	mov	x29, sp
   474ec:	stp	xzr, xzr, [sp, #24]
   474f0:	str	w5, [sp, #28]
   474f4:	mov	w5, #0x4                   	// #4
   474f8:	str	w5, [sp, #36]
   474fc:	mov	w5, #0x3                   	// #3
   47500:	stp	xzr, xzr, [sp, #56]
   47504:	stp	xzr, xzr, [sp, #40]
   47508:	str	w5, [sp, #68]
   4750c:	add	x5, sp, #0x18
   47510:	str	xzr, [sp, #72]
   47514:	bl	4670 <ZDICT_optimizeTrainFromBuffer_fastCover@plt>
   47518:	ldp	x29, x30, [sp], #80
   4751c:	ret

0000000000047520 <ZDICT_addEntropyTablesFromBuffer@@Base>:
   47520:	stp	x29, x30, [sp, #-32]!
   47524:	mov	x6, #0x0                   	// #0
   47528:	mov	x7, #0x0                   	// #0
   4752c:	mov	x29, sp
   47530:	str	xzr, [sp, #16]
   47534:	str	wzr, [sp, #24]
   47538:	bl	4675c <ZDICT_isError@@Base+0xc>
   4753c:	ldp	x29, x30, [sp], #32
   47540:	ret
   47544:	ldr	w3, [x0, #8]
   47548:	mov	x2, x0
   4754c:	cmp	w3, #0x40
   47550:	b.hi	475e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc0>  // b.pmore
   47554:	ldp	x1, x0, [x0, #16]
   47558:	add	x4, x0, #0x8
   4755c:	cmp	x1, x4
   47560:	b.cc	47588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x68>  // b.lo, b.ul, b.last
   47564:	lsr	w0, w3, #3
   47568:	and	w3, w3, #0x7
   4756c:	sub	x1, x1, x0
   47570:	ldr	x0, [x1]
   47574:	str	x0, [x2]
   47578:	mov	w0, #0x0                   	// #0
   4757c:	str	w3, [x2, #8]
   47580:	str	x1, [x2, #16]
   47584:	ret
   47588:	cmp	x1, x0
   4758c:	b.ne	475a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x80>  // b.any
   47590:	cmp	w3, #0x40
   47594:	cset	w0, eq  // eq = none
   47598:	add	w0, w0, #0x1
   4759c:	b	47584 <ZDICT_addEntropyTablesFromBuffer@@Base+0x64>
   475a0:	lsr	w5, w3, #3
   475a4:	lsr	w4, w3, #3
   475a8:	sub	x5, x1, x5
   475ac:	cmp	x0, x5
   475b0:	b.ls	475d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb8>  // b.plast
   475b4:	sub	w4, w1, w0
   475b8:	mov	w0, #0x1                   	// #1
   475bc:	sub	x1, x1, w4, uxtw
   475c0:	str	x1, [x2, #16]
   475c4:	sub	w3, w3, w4, lsl #3
   475c8:	str	w3, [x2, #8]
   475cc:	ldr	x1, [x1]
   475d0:	str	x1, [x2]
   475d4:	b	47584 <ZDICT_addEntropyTablesFromBuffer@@Base+0x64>
   475d8:	mov	w0, #0x0                   	// #0
   475dc:	b	475bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9c>
   475e0:	mov	w0, #0x3                   	// #3
   475e4:	b	47584 <ZDICT_addEntropyTablesFromBuffer@@Base+0x64>
   475e8:	ldp	x2, x1, [x0, #16]
   475ec:	cmp	x2, x1
   475f0:	b.ne	47604 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe4>  // b.any
   475f4:	ldr	w0, [x0, #8]
   475f8:	cmp	w0, #0x40
   475fc:	cset	w0, eq  // eq = none
   47600:	ret
   47604:	mov	w0, #0x0                   	// #0
   47608:	b	47600 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe0>
   4760c:	cmp	x1, #0x2
   47610:	b.ls	47654 <ZDICT_addEntropyTablesFromBuffer@@Base+0x134>  // b.plast
   47614:	ldrb	w3, [x0]
   47618:	ldrb	w1, [x0, #1]
   4761c:	ldrb	w0, [x0, #2]
   47620:	add	w0, w0, w1, lsl #8
   47624:	ubfiz	w1, w3, #16, #3
   47628:	add	w0, w0, w1
   4762c:	lsr	w1, w3, #6
   47630:	cmp	w1, #0x2
   47634:	csel	w3, w0, wzr, eq  // eq = none
   47638:	stp	w1, w3, [x2]
   4763c:	cmp	w1, #0x3
   47640:	b.eq	4765c <ZDICT_addEntropyTablesFromBuffer@@Base+0x13c>  // b.none
   47644:	sxtw	x0, w0
   47648:	cmp	w1, #0x2
   4764c:	csinc	x0, x0, xzr, ne  // ne = any
   47650:	ret
   47654:	mov	x0, #0xffffffffffffffb8    	// #-72
   47658:	b	47650 <ZDICT_addEntropyTablesFromBuffer@@Base+0x130>
   4765c:	mov	x0, #0x0                   	// #0
   47660:	b	47650 <ZDICT_addEntropyTablesFromBuffer@@Base+0x130>
   47664:	ldr	x2, [x0, #26640]
   47668:	cmp	x2, x1
   4766c:	b.eq	4768c <ZDICT_addEntropyTablesFromBuffer@@Base+0x16c>  // b.none
   47670:	ldr	x3, [x0, #26648]
   47674:	str	x2, [x0, #26664]
   47678:	str	x1, [x0, #26640]
   4767c:	sub	x2, x2, x3
   47680:	str	x1, [x0, #26648]
   47684:	sub	x2, x1, x2
   47688:	str	x2, [x0, #26656]
   4768c:	ret
   47690:	cmn	x0, #0x78
   47694:	b.ls	476a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x180>  // b.plast
   47698:	neg	w0, w0
   4769c:	b	511c <ZSTD_initDStream_usingDDict@plt+0x59c>
   476a0:	mov	w0, #0x0                   	// #0
   476a4:	b	4769c <ZDICT_addEntropyTablesFromBuffer@@Base+0x17c>
   476a8:	mov	x3, x0
   476ac:	mov	x0, x2
   476b0:	cbnz	x2, 476c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1a4>
   476b4:	mov	x0, #0xffffffffffffffb8    	// #-72
   476b8:	stp	xzr, xzr, [x3]
   476bc:	stp	xzr, xzr, [x3, #16]
   476c0:	ret
   476c4:	str	x1, [x3, #24]
   476c8:	sub	x6, x2, #0x1
   476cc:	cmp	x2, #0x7
   476d0:	b.ls	47710 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1f0>  // b.plast
   476d4:	sub	x2, x2, #0x8
   476d8:	add	x4, x1, x2
   476dc:	ldr	x2, [x1, x2]
   476e0:	str	x2, [x3]
   476e4:	str	x4, [x3, #16]
   476e8:	ldrb	w1, [x1, x6]
   476ec:	cbnz	w1, 476f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1d8>
   476f0:	mov	x0, #0xffffffffffffffff    	// #-1
   476f4:	b	476c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1a0>
   476f8:	clz	w1, w1
   476fc:	mov	w2, #0x8                   	// #8
   47700:	eor	w1, w1, #0x1f
   47704:	sub	w1, w2, w1
   47708:	str	w1, [x3, #8]
   4770c:	b	476c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1a0>
   47710:	str	x1, [x3, #16]
   47714:	sub	x5, x2, #0x2
   47718:	cmp	x5, #0x5
   4771c:	ldrb	w7, [x1]
   47720:	str	x7, [x3]
   47724:	b.hi	477a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x284>  // b.pmore
   47728:	cmp	w5, #0x5
   4772c:	b.hi	477a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x284>  // b.pmore
   47730:	adrp	x4, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   47734:	add	x4, x4, #0xb88
   47738:	ldrb	w2, [x4, w5, uxtw]
   4773c:	adr	x4, 47748 <ZDICT_addEntropyTablesFromBuffer@@Base+0x228>
   47740:	add	x2, x4, w2, sxtb #2
   47744:	br	x2
   47748:	ldrb	w2, [x1, #6]
   4774c:	add	x2, x7, x2, lsl #48
   47750:	str	x2, [x3]
   47754:	ldr	x4, [x3]
   47758:	ldrb	w2, [x1, #5]
   4775c:	add	x2, x4, x2, lsl #40
   47760:	str	x2, [x3]
   47764:	ldr	x4, [x3]
   47768:	ldrb	w2, [x1, #4]
   4776c:	add	x2, x4, x2, lsl #32
   47770:	str	x2, [x3]
   47774:	ldr	x4, [x3]
   47778:	ldrb	w2, [x1, #3]
   4777c:	add	x2, x4, x2, lsl #24
   47780:	str	x2, [x3]
   47784:	ldr	x4, [x3]
   47788:	ldrb	w2, [x1, #2]
   4778c:	add	x2, x4, x2, lsl #16
   47790:	str	x2, [x3]
   47794:	ldr	x4, [x3]
   47798:	ldrb	w2, [x1, #1]
   4779c:	add	x2, x4, x2, lsl #8
   477a0:	str	x2, [x3]
   477a4:	ldrb	w1, [x1, x6]
   477a8:	cbz	w1, 476f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1d0>
   477ac:	clz	w2, w1
   477b0:	mov	w1, #0x9                   	// #9
   477b4:	sub	w1, w1, w0
   477b8:	eor	w2, w2, #0x1f
   477bc:	lsl	w1, w1, #3
   477c0:	sub	w1, w1, w2
   477c4:	b	47708 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1e8>
   477c8:	mov	x2, x0
   477cc:	ldr	w6, [x1, #8]
   477d0:	ldp	x4, x0, [x0]
   477d4:	lsl	x3, x4, #2
   477d8:	add	x4, x0, x4, lsl #2
   477dc:	ldrh	w5, [x0, x3]
   477e0:	ldr	x3, [x1]
   477e4:	ldrb	w0, [x4, #2]
   477e8:	ldrb	w4, [x4, #3]
   477ec:	lsl	x3, x3, x6
   477f0:	neg	w7, w4
   477f4:	add	w4, w4, w6
   477f8:	str	w4, [x1, #8]
   477fc:	lsr	x3, x3, x7
   47800:	add	x3, x3, w5, uxth
   47804:	str	x3, [x2]
   47808:	ret
   4780c:	ldr	x3, [x0]
   47810:	neg	w2, w2
   47814:	ldr	w5, [x0, #8]
   47818:	mov	x4, x0
   4781c:	lsl	x3, x3, x5
   47820:	lsr	x2, x3, x2
   47824:	lsl	x0, x2, #1
   47828:	add	x2, x1, x2, lsl #1
   4782c:	ldrb	w0, [x1, x0]
   47830:	ldrb	w1, [x2, #1]
   47834:	add	w1, w1, w5
   47838:	str	w1, [x4, #8]
   4783c:	ret
   47840:	mov	x11, x0
   47844:	mov	x7, x1
   47848:	mov	x8, x2
   4784c:	mov	x9, x3
   47850:	mov	w10, w4
   47854:	mov	x6, x0
   47858:	sub	x12, x2, #0x4
   4785c:	stp	x29, x30, [sp, #-16]!
   47860:	mov	x29, sp
   47864:	mov	x0, x7
   47868:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   4786c:	cbnz	w0, 47878 <ZDICT_addEntropyTablesFromBuffer@@Base+0x358>
   47870:	cmp	x6, x12
   47874:	b.ls	47898 <ZDICT_addEntropyTablesFromBuffer@@Base+0x378>  // b.plast
   47878:	mov	x0, x7
   4787c:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   47880:	cbnz	w0, 4791c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3fc>
   47884:	cmp	x6, x8
   47888:	b.cc	478f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d0>  // b.lo, b.ul, b.last
   4788c:	sub	x0, x8, x11
   47890:	ldp	x29, x30, [sp], #16
   47894:	ret
   47898:	mov	w2, w10
   4789c:	mov	x1, x9
   478a0:	mov	x0, x7
   478a4:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   478a8:	strb	w0, [x6]
   478ac:	mov	w2, w10
   478b0:	mov	x1, x9
   478b4:	mov	x0, x7
   478b8:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   478bc:	strb	w0, [x6, #1]
   478c0:	mov	w2, w10
   478c4:	mov	x1, x9
   478c8:	mov	x0, x7
   478cc:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   478d0:	add	x6, x6, #0x4
   478d4:	sturb	w0, [x6, #-2]
   478d8:	mov	w2, w10
   478dc:	mov	x1, x9
   478e0:	mov	x0, x7
   478e4:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   478e8:	sturb	w0, [x6, #-1]
   478ec:	b	47864 <ZDICT_addEntropyTablesFromBuffer@@Base+0x344>
   478f0:	mov	w2, w10
   478f4:	mov	x1, x9
   478f8:	mov	x0, x7
   478fc:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   47900:	strb	w0, [x6], #1
   47904:	b	47878 <ZDICT_addEntropyTablesFromBuffer@@Base+0x358>
   47908:	mov	w2, w10
   4790c:	mov	x1, x9
   47910:	mov	x0, x7
   47914:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   47918:	strb	w0, [x6], #1
   4791c:	cmp	x6, x8
   47920:	b.cc	47908 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e8>  // b.lo, b.ul, b.last
   47924:	b	4788c <ZDICT_addEntropyTablesFromBuffer@@Base+0x36c>
   47928:	ldr	x4, [x1]
   4792c:	neg	w3, w3
   47930:	ldr	w5, [x1, #8]
   47934:	lsl	x4, x4, x5
   47938:	lsr	x3, x4, x3
   4793c:	lsl	x4, x3, #2
   47940:	add	x3, x2, x3, lsl #2
   47944:	ldrh	w2, [x2, x4]
   47948:	strh	w2, [x0]
   4794c:	ldrb	w2, [x3, #2]
   47950:	ldr	w0, [x1, #8]
   47954:	add	w0, w0, w2
   47958:	str	w0, [x1, #8]
   4795c:	ldrb	w0, [x3, #3]
   47960:	ret
   47964:	mov	x11, x0
   47968:	mov	x7, x1
   4796c:	mov	x10, x2
   47970:	mov	x9, x3
   47974:	mov	w8, w4
   47978:	mov	x6, x0
   4797c:	sub	x12, x2, #0x7
   47980:	stp	x29, x30, [sp, #-16]!
   47984:	mov	x29, sp
   47988:	mov	x0, x7
   4798c:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   47990:	cbnz	w0, 4799c <ZDICT_addEntropyTablesFromBuffer@@Base+0x47c>
   47994:	cmp	x6, x12
   47998:	b.cc	479a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x484>  // b.lo, b.ul, b.last
   4799c:	sub	x12, x10, #0x2
   479a0:	b	47a14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4f4>
   479a4:	mov	w3, w8
   479a8:	mov	x2, x9
   479ac:	mov	x1, x7
   479b0:	mov	x0, x6
   479b4:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   479b8:	add	x6, x6, w0, uxtw
   479bc:	mov	w3, w8
   479c0:	mov	x2, x9
   479c4:	mov	x0, x6
   479c8:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   479cc:	add	x6, x6, w0, uxtw
   479d0:	mov	w3, w8
   479d4:	mov	x2, x9
   479d8:	mov	x0, x6
   479dc:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   479e0:	add	x6, x6, w0, uxtw
   479e4:	mov	x0, x6
   479e8:	mov	w3, w8
   479ec:	mov	x2, x9
   479f0:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   479f4:	add	x6, x6, w0, uxtw
   479f8:	b	47988 <ZDICT_addEntropyTablesFromBuffer@@Base+0x468>
   479fc:	mov	x0, x6
   47a00:	mov	w3, w8
   47a04:	mov	x2, x9
   47a08:	mov	x1, x7
   47a0c:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   47a10:	add	x6, x6, w0, uxtw
   47a14:	mov	x0, x7
   47a18:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   47a1c:	cbnz	w0, 47a98 <ZDICT_addEntropyTablesFromBuffer@@Base+0x578>
   47a20:	cmp	x6, x12
   47a24:	b.ls	479fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x4dc>  // b.plast
   47a28:	cmp	x10, x6
   47a2c:	b.ls	47a74 <ZDICT_addEntropyTablesFromBuffer@@Base+0x554>  // b.plast
   47a30:	ldr	x1, [x7]
   47a34:	neg	w8, w8
   47a38:	ldr	w0, [x7, #8]
   47a3c:	lsl	x1, x1, x0
   47a40:	lsr	x8, x1, x8
   47a44:	lsl	x0, x8, #2
   47a48:	add	x8, x9, x8, lsl #2
   47a4c:	ldrb	w0, [x9, x0]
   47a50:	strb	w0, [x6]
   47a54:	ldrb	w0, [x8, #3]
   47a58:	cmp	w0, #0x1
   47a5c:	b.ne	47aa4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x584>  // b.any
   47a60:	ldrb	w1, [x8, #2]
   47a64:	ldr	w0, [x7, #8]
   47a68:	add	w0, w0, w1
   47a6c:	str	w0, [x7, #8]
   47a70:	add	x6, x6, #0x1
   47a74:	sub	x0, x6, x11
   47a78:	ldp	x29, x30, [sp], #16
   47a7c:	ret
   47a80:	mov	x0, x6
   47a84:	mov	w3, w8
   47a88:	mov	x2, x9
   47a8c:	mov	x1, x7
   47a90:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   47a94:	add	x6, x6, w0, uxtw
   47a98:	cmp	x6, x12
   47a9c:	b.ls	47a80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x560>  // b.plast
   47aa0:	b	47a28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x508>
   47aa4:	ldr	w1, [x7, #8]
   47aa8:	cmp	w1, #0x3f
   47aac:	b.hi	47a70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x550>  // b.pmore
   47ab0:	ldrb	w0, [x8, #2]
   47ab4:	add	w0, w0, w1
   47ab8:	cmp	w0, #0x40
   47abc:	b.ls	47a6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x54c>  // b.plast
   47ac0:	mov	w0, #0x40                  	// #64
   47ac4:	b	47a6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x54c>
   47ac8:	mov	x3, x0
   47acc:	ldr	w6, [x1, #8]
   47ad0:	ldp	x4, x0, [x0]
   47ad4:	lsl	x2, x4, #2
   47ad8:	add	x4, x0, x4, lsl #2
   47adc:	ldrh	w5, [x0, x2]
   47ae0:	ldr	x2, [x1]
   47ae4:	ldrb	w0, [x4, #2]
   47ae8:	ldrb	w4, [x4, #3]
   47aec:	lsl	x2, x2, x6
   47af0:	mvn	w7, w4
   47af4:	lsr	x2, x2, #1
   47af8:	add	w4, w4, w6
   47afc:	str	w4, [x1, #8]
   47b00:	lsr	x2, x2, x7
   47b04:	add	x2, x2, w5, uxth
   47b08:	str	x2, [x3]
   47b0c:	ret
   47b10:	mov	x7, x0
   47b14:	mov	x0, x1
   47b18:	stp	x29, x30, [sp, #-16]!
   47b1c:	mov	x6, x2
   47b20:	mov	x29, sp
   47b24:	ldr	x3, [x0]
   47b28:	ldr	w2, [x0, #8]
   47b2c:	ldrh	w1, [x6], #4
   47b30:	lsl	x3, x3, x2
   47b34:	mvn	w4, w1
   47b38:	lsr	x3, x3, #1
   47b3c:	add	w1, w1, w2
   47b40:	str	w1, [x0, #8]
   47b44:	lsr	x3, x3, x4
   47b48:	str	x3, [x7]
   47b4c:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   47b50:	ldp	x29, x30, [sp], #16
   47b54:	str	x6, [x7, #8]
   47b58:	ret
   47b5c:	cmp	w0, #0xf
   47b60:	mov	w1, #0xf                   	// #15
   47b64:	csel	w0, w0, w1, ls  // ls = plast
   47b68:	mov	w1, #0x1                   	// #1
   47b6c:	lsl	w0, w1, w0
   47b70:	add	w0, w0, w1
   47b74:	sbfiz	x0, x0, #2, #32
   47b78:	b	46a0 <malloc@plt>
   47b7c:	b	48e0 <free@plt>
   47b80:	cmp	w2, #0xff
   47b84:	b.hi	47d08 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e8>  // b.pmore
   47b88:	sub	sp, sp, #0x250
   47b8c:	cmp	w3, #0xc
   47b90:	stp	x29, x30, [sp]
   47b94:	mov	x29, sp
   47b98:	stp	x19, x20, [sp, #16]
   47b9c:	mov	w20, w3
   47ba0:	stp	x21, x22, [sp, #32]
   47ba4:	stp	x23, x24, [sp, #48]
   47ba8:	str	x25, [sp, #64]
   47bac:	b.hi	47d10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7f0>  // b.pmore
   47bb0:	add	x9, x0, #0x4
   47bb4:	mov	w25, #0x1                   	// #1
   47bb8:	lsl	w23, w25, w3
   47bbc:	mov	x21, x0
   47bc0:	mov	x19, x1
   47bc4:	mov	x0, x9
   47bc8:	mov	w22, w2
   47bcc:	mov	w1, #0x0                   	// #0
   47bd0:	add	w2, w2, w25
   47bd4:	bl	4700 <memset@plt>
   47bd8:	mov	x9, x0
   47bdc:	sub	w0, w20, #0x1
   47be0:	sub	w24, w23, #0x1
   47be4:	mov	w7, #0x0                   	// #0
   47be8:	lsl	w0, w25, w0
   47bec:	bfxil	w7, w20, #0, #16
   47bf0:	sxth	w0, w0
   47bf4:	mov	w2, w24
   47bf8:	mov	w5, w25
   47bfc:	add	x3, sp, #0x50
   47c00:	mov	w6, w25
   47c04:	mov	x4, #0x0                   	// #0
   47c08:	ldrsh	w1, [x19, x4, lsl #1]
   47c0c:	cmn	w1, #0x1
   47c10:	b.ne	47c50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x730>  // b.any
   47c14:	add	x1, x9, w2, uxtw #2
   47c18:	sub	w2, w2, #0x1
   47c1c:	strh	w6, [x3, x4, lsl #1]
   47c20:	strb	w4, [x1, #2]
   47c24:	add	x4, x4, #0x1
   47c28:	cmp	w22, w4
   47c2c:	b.cs	47c08 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6e8>  // b.hs, b.nlast
   47c30:	lsr	w6, w23, #3
   47c34:	mov	x1, x19
   47c38:	add	w6, w6, w23, lsr #1
   47c3c:	mov	w0, #0x0                   	// #0
   47c40:	add	w6, w6, #0x3
   47c44:	mov	w4, #0x0                   	// #0
   47c48:	mov	w8, #0x0                   	// #0
   47c4c:	b	47c7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x75c>
   47c50:	cmp	w1, w0
   47c54:	strh	w1, [x3, x4, lsl #1]
   47c58:	csel	w5, w5, wzr, lt  // lt = tstop
   47c5c:	b	47c24 <ZDICT_addEntropyTablesFromBuffer@@Base+0x704>
   47c60:	add	x10, x9, w4, uxtw #2
   47c64:	strb	w0, [x10, #2]
   47c68:	add	w4, w4, w6
   47c6c:	and	w4, w4, w24
   47c70:	cmp	w4, w2
   47c74:	b.hi	47c68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x748>  // b.pmore
   47c78:	add	w8, w8, #0x1
   47c7c:	ldrsh	w10, [x1]
   47c80:	cmp	w10, w8
   47c84:	b.gt	47c60 <ZDICT_addEntropyTablesFromBuffer@@Base+0x740>
   47c88:	add	w0, w0, #0x1
   47c8c:	add	x1, x1, #0x2
   47c90:	cmp	w22, w0
   47c94:	b.cs	47c48 <ZDICT_addEntropyTablesFromBuffer@@Base+0x728>  // b.hs, b.nlast
   47c98:	cbnz	w4, 47d18 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7f8>
   47c9c:	mov	x0, x21
   47ca0:	add	x4, x21, w23, sxtw #2
   47ca4:	cmp	x4, x0
   47ca8:	b.ne	47cd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7b4>  // b.any
   47cac:	bfi	w7, w5, #16, #16
   47cb0:	mov	x0, #0x0                   	// #0
   47cb4:	str	w7, [x21]
   47cb8:	ldp	x29, x30, [sp]
   47cbc:	ldp	x19, x20, [sp, #16]
   47cc0:	ldp	x21, x22, [sp, #32]
   47cc4:	ldp	x23, x24, [sp, #48]
   47cc8:	ldr	x25, [sp, #64]
   47ccc:	add	sp, sp, #0x250
   47cd0:	ret
   47cd4:	ldrb	w1, [x0, #6]
   47cd8:	ldrh	w2, [x3, x1, lsl #1]
   47cdc:	add	w6, w2, #0x1
   47ce0:	strh	w6, [x3, x1, lsl #1]
   47ce4:	clz	w1, w2
   47ce8:	eor	w1, w1, #0x1f
   47cec:	sub	w1, w20, w1
   47cf0:	and	w1, w1, #0xff
   47cf4:	strb	w1, [x0, #7]
   47cf8:	lsl	w1, w2, w1
   47cfc:	sub	w1, w1, w23
   47d00:	strh	w1, [x0, #4]!
   47d04:	b	47ca4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x784>
   47d08:	mov	x0, #0xffffffffffffffd2    	// #-46
   47d0c:	ret
   47d10:	mov	x0, #0xffffffffffffffd4    	// #-44
   47d14:	b	47cb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x798>
   47d18:	mov	x0, #0xffffffffffffffff    	// #-1
   47d1c:	b	47cb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x798>
   47d20:	cmn	x0, #0x78
   47d24:	cset	w0, hi  // hi = pmore
   47d28:	ret
   47d2c:	b	47690 <ZDICT_addEntropyTablesFromBuffer@@Base+0x170>
   47d30:	cmp	x4, #0x3
   47d34:	b.ls	47f7c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa5c>  // b.plast
   47d38:	ldr	w5, [x3]
   47d3c:	mov	x13, x0
   47d40:	and	w9, w5, #0xf
   47d44:	add	w0, w9, #0x5
   47d48:	cmp	w0, #0xf
   47d4c:	b.hi	47f6c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa4c>  // b.pmore
   47d50:	stp	x29, x30, [sp, #-32]!
   47d54:	add	x10, x3, x4
   47d58:	mov	w8, #0x1                   	// #1
   47d5c:	mov	x29, sp
   47d60:	stp	x19, x20, [sp, #16]
   47d64:	sub	x16, x10, #0x7
   47d68:	sub	x14, x10, #0x4
   47d6c:	str	w0, [x2]
   47d70:	lsl	w8, w8, w0
   47d74:	lsr	w5, w5, #4
   47d78:	add	w12, w8, #0x1
   47d7c:	ldr	w15, [x1]
   47d80:	add	w9, w9, #0x6
   47d84:	mov	x11, x3
   47d88:	sub	x10, x10, #0x5
   47d8c:	mov	w18, #0x0                   	// #0
   47d90:	mov	w17, #0xffff                	// #65535
   47d94:	mov	w2, #0x4                   	// #4
   47d98:	ubfiz	w0, w8, #1, #15
   47d9c:	sub	w19, w8, #0x1
   47da0:	sub	w6, w0, w12
   47da4:	and	w7, w5, #0xffff
   47da8:	sub	w6, w6, #0x1
   47dac:	and	w5, w19, w5
   47db0:	and	w30, w8, #0xffff
   47db4:	and	w20, w6, #0xffff
   47db8:	cmp	w5, w6, sxth
   47dbc:	b.cs	47efc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dc>  // b.hs, b.nlast
   47dc0:	sub	w5, w30, #0x1
   47dc4:	and	w7, w7, w5
   47dc8:	sub	w5, w9, #0x1
   47dcc:	add	w2, w5, w2
   47dd0:	sxth	w7, w7
   47dd4:	sub	w7, w7, #0x1
   47dd8:	add	w19, w18, #0x1
   47ddc:	sxth	w7, w7
   47de0:	strh	w7, [x13, w18, uxtw #1]
   47de4:	cmp	w7, #0x0
   47de8:	cneg	w0, w7, lt  // lt = tstop
   47dec:	sub	w12, w12, w0, sxth
   47df0:	cmp	w8, w12
   47df4:	b.gt	47f20 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa00>
   47df8:	asr	w0, w2, #3
   47dfc:	cmp	x11, x16
   47e00:	add	x6, x11, w0, sxtw
   47e04:	b.ls	47e10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8f0>  // b.plast
   47e08:	cmp	x14, x6
   47e0c:	b.cc	47f2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa0c>  // b.lo, b.ul, b.last
   47e10:	and	w2, w2, #0x7
   47e14:	ldr	w5, [x6]
   47e18:	cmp	w12, #0x1
   47e1c:	lsr	w5, w5, w2
   47e20:	b.le	47f3c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa1c>
   47e24:	cmp	w15, w19
   47e28:	b.cs	47e34 <ZDICT_addEntropyTablesFromBuffer@@Base+0x914>  // b.hs, b.nlast
   47e2c:	mov	x0, #0xffffffffffffffff    	// #-1
   47e30:	b	47f60 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa40>
   47e34:	cbnz	w7, 47ec4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9a4>
   47e38:	mov	w0, w19
   47e3c:	b	47e58 <ZDICT_addEntropyTablesFromBuffer@@Base+0x938>
   47e40:	add	w0, w0, #0x18
   47e44:	cmp	x6, x10
   47e48:	b.cs	47ed0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b0>  // b.hs, b.nlast
   47e4c:	ldur	w5, [x6, #2]
   47e50:	add	x6, x6, #0x2
   47e54:	lsr	w5, w5, w2
   47e58:	cmp	w17, w5, uxth
   47e5c:	b.eq	47e40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x920>  // b.none
   47e60:	and	w7, w5, #0x3
   47e64:	add	w2, w2, #0x2
   47e68:	cmp	w7, #0x3
   47e6c:	b.eq	47edc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9bc>  // b.none
   47e70:	add	w7, w7, w0
   47e74:	cmp	w15, w7
   47e78:	b.cc	47f74 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa54>  // b.lo, b.ul, b.last
   47e7c:	add	x18, x13, w19, uxtw #1
   47e80:	mov	x0, #0x0                   	// #0
   47e84:	add	w11, w19, w0
   47e88:	cmp	w7, w11
   47e8c:	b.hi	47ee8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9c8>  // b.pmore
   47e90:	subs	w0, w7, w19
   47e94:	asr	w7, w2, #3
   47e98:	csel	w0, w0, wzr, cs  // cs = hs, nlast
   47e9c:	cmp	x6, x16
   47ea0:	add	w19, w19, w0
   47ea4:	add	x7, x6, w7, sxtw
   47ea8:	b.ls	47eb4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x994>  // b.plast
   47eac:	cmp	x7, x14
   47eb0:	b.hi	47ef4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d4>  // b.pmore
   47eb4:	ldr	w5, [x7]
   47eb8:	and	w2, w2, #0x7
   47ebc:	mov	x6, x7
   47ec0:	lsr	w5, w5, w2
   47ec4:	mov	w18, w19
   47ec8:	mov	x11, x6
   47ecc:	b	47d98 <ZDICT_addEntropyTablesFromBuffer@@Base+0x878>
   47ed0:	lsr	w5, w5, #16
   47ed4:	add	w2, w2, #0x10
   47ed8:	b	47e58 <ZDICT_addEntropyTablesFromBuffer@@Base+0x938>
   47edc:	add	w0, w0, #0x3
   47ee0:	lsr	w5, w5, #2
   47ee4:	b	47e60 <ZDICT_addEntropyTablesFromBuffer@@Base+0x940>
   47ee8:	strh	wzr, [x18, x0, lsl #1]
   47eec:	add	x0, x0, #0x1
   47ef0:	b	47e84 <ZDICT_addEntropyTablesFromBuffer@@Base+0x964>
   47ef4:	lsr	w5, w5, #2
   47ef8:	b	47ec4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9a4>
   47efc:	sub	w0, w0, #0x1
   47f00:	and	w5, w7, w0
   47f04:	sxth	w7, w5
   47f08:	cmp	w8, w5, sxth
   47f0c:	b.gt	47f18 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9f8>
   47f10:	sub	w7, w5, w20
   47f14:	sxth	w7, w7
   47f18:	add	w2, w2, w9
   47f1c:	b	47dd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b4>
   47f20:	sub	w9, w9, #0x1
   47f24:	asr	w8, w8, #1
   47f28:	b	47df0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8d0>
   47f2c:	sub	x11, x14, x11
   47f30:	mov	x6, x14
   47f34:	sub	w2, w2, w11, lsl #3
   47f38:	b	47e14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8f4>
   47f3c:	b.ne	47e2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x90c>  // b.any
   47f40:	add	w0, w2, #0x7
   47f44:	str	w18, [x1]
   47f48:	asr	w0, w0, #3
   47f4c:	add	x0, x6, w0, sxtw
   47f50:	sub	x0, x0, x3
   47f54:	cmp	x0, x4
   47f58:	b.ls	47f60 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa40>  // b.plast
   47f5c:	mov	x0, #0xffffffffffffffb8    	// #-72
   47f60:	ldp	x19, x20, [sp, #16]
   47f64:	ldp	x29, x30, [sp], #32
   47f68:	ret
   47f6c:	mov	x0, #0xffffffffffffffd4    	// #-44
   47f70:	ret
   47f74:	mov	x0, #0xffffffffffffffd0    	// #-48
   47f78:	b	47f60 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa40>
   47f7c:	mov	x0, #0xffffffffffffffb8    	// #-72
   47f80:	ret
   47f84:	str	wzr, [x0]
   47f88:	strh	wzr, [x0, #4]
   47f8c:	strb	w1, [x0, #6]
   47f90:	strb	wzr, [x0, #7]
   47f94:	mov	x0, #0x0                   	// #0
   47f98:	ret
   47f9c:	mov	w2, #0x1                   	// #1
   47fa0:	lsl	w4, w2, w1
   47fa4:	sub	w4, w4, #0x1
   47fa8:	cbz	w1, 47fe4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xac4>
   47fac:	strh	w1, [x0]
   47fb0:	strh	w2, [x0, #2]
   47fb4:	mov	w2, #0x0                   	// #0
   47fb8:	ubfiz	x3, x2, #2, #32
   47fbc:	add	x3, x3, #0x4
   47fc0:	add	x5, x0, x3
   47fc4:	strh	wzr, [x0, x3]
   47fc8:	strb	w2, [x5, #2]
   47fcc:	add	w2, w2, #0x1
   47fd0:	strb	w1, [x5, #3]
   47fd4:	cmp	w4, w2
   47fd8:	b.cs	47fb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa98>  // b.hs, b.nlast
   47fdc:	mov	x0, #0x0                   	// #0
   47fe0:	ret
   47fe4:	mov	x0, #0xffffffffffffffff    	// #-1
   47fe8:	b	47fe0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xac0>
   47fec:	stp	x29, x30, [sp, #-496]!
   47ff0:	mov	x5, #0x1808                	// #6152
   47ff4:	mov	x29, sp
   47ff8:	stp	x19, x20, [sp, #16]
   47ffc:	stp	x21, x22, [sp, #32]
   48000:	stp	x23, x24, [sp, #48]
   48004:	stp	x25, x26, [sp, #64]
   48008:	stp	x27, x28, [sp, #80]
   4800c:	mov	x27, x0
   48010:	add	x0, x0, x5
   48014:	str	x1, [sp, #120]
   48018:	str	x4, [sp, #136]
   4801c:	str	x0, [sp, #160]
   48020:	str	x2, [sp, #176]
   48024:	cbz	x4, 481e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcc8>
   48028:	mov	x22, x3
   4802c:	mov	x3, #0x1004                	// #4100
   48030:	ldr	x0, [x27, #26752]
   48034:	str	x0, [sp, #152]
   48038:	ldr	x0, [x27, #26648]
   4803c:	str	x0, [sp, #104]
   48040:	ldrb	w21, [x22]
   48044:	add	x28, x27, x3
   48048:	ldr	x0, [x27, #26656]
   4804c:	str	x0, [sp, #168]
   48050:	ldr	x0, [x27, #26664]
   48054:	str	x0, [sp, #144]
   48058:	ldr	x23, [x27, #26744]
   4805c:	cbz	w21, 487dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x12bc>
   48060:	add	x19, x22, x4
   48064:	add	x1, x22, #0x1
   48068:	cmp	w21, #0x7f
   4806c:	b.le	48088 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb68>
   48070:	cmp	x19, x1
   48074:	b.ls	481e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcc8>  // b.plast
   48078:	ldrb	w0, [x22, #1]
   4807c:	sub	w21, w21, #0x80
   48080:	add	x1, x22, #0x2
   48084:	add	w21, w0, w21, lsl #8
   48088:	cmp	x19, x1
   4808c:	b.ls	481e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcc8>  // b.plast
   48090:	ldrb	w0, [x1]
   48094:	tbz	w0, #1, 4810c <ZDICT_addEntropyTablesFromBuffer@@Base+0xbec>
   48098:	add	x24, x1, #0x3
   4809c:	cmp	x19, x24
   480a0:	b.cc	481e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcc8>  // b.lo, b.ul, b.last
   480a4:	ldrb	w20, [x1, #1]
   480a8:	ldrb	w2, [x1, #2]
   480ac:	ubfiz	x20, x20, #8, #8
   480b0:	add	x1, x20, x2
   480b4:	str	x1, [sp, #112]
   480b8:	ldr	x1, [sp, #112]
   480bc:	add	x26, x24, x1
   480c0:	sub	x1, x19, #0x3
   480c4:	cmp	x26, x1
   480c8:	b.hi	481e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcc8>  // b.pmore
   480cc:	add	x1, x27, #0x4, lsl #12
   480d0:	ubfx	x20, x0, #4, #2
   480d4:	ubfx	x25, x0, #2, #2
   480d8:	lsr	w0, w0, #6
   480dc:	cmp	w0, #0x1
   480e0:	ldr	w1, [x1, #10352]
   480e4:	str	w1, [sp, #128]
   480e8:	b.eq	48128 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc08>  // b.none
   480ec:	cmp	w0, #0x2
   480f0:	b.eq	48170 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc50>  // b.none
   480f4:	cbnz	w0, 48180 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc60>
   480f8:	mov	w1, #0x6                   	// #6
   480fc:	mov	x0, x27
   48100:	str	w1, [sp, #204]
   48104:	bl	47f9c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa7c>
   48108:	b	48148 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc28>
   4810c:	add	x24, x1, #0x2
   48110:	cmp	x19, x24
   48114:	b.cc	481e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcc8>  // b.lo, b.ul, b.last
   48118:	ldrb	w1, [x1, #1]
   4811c:	ubfiz	w20, w0, #8, #1
   48120:	add	x1, x1, w20, uxtw
   48124:	b	480b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb94>
   48128:	mov	x0, x26
   4812c:	str	wzr, [sp, #204]
   48130:	ldrb	w1, [x0], #1
   48134:	str	wzr, [x27]
   48138:	mov	x26, x0
   4813c:	strh	wzr, [x27, #4]
   48140:	strb	w1, [x27, #6]
   48144:	strb	wzr, [x27, #7]
   48148:	cmp	w20, #0x1
   4814c:	b.eq	481d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcb8>  // b.none
   48150:	cmp	w20, #0x2
   48154:	b.eq	48230 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd10>  // b.none
   48158:	cbnz	w20, 48264 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd44>
   4815c:	mov	w1, #0x5                   	// #5
   48160:	mov	x0, x28
   48164:	str	w1, [sp, #208]
   48168:	bl	47f9c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa7c>
   4816c:	b	48214 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcf4>
   48170:	ldr	w0, [sp, #128]
   48174:	cbnz	w0, 487ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x12cc>
   48178:	mov	x0, #0xffffffffffffffec    	// #-20
   4817c:	b	48428 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf08>
   48180:	add	x8, sp, #0xf0
   48184:	mov	w0, #0x3f                  	// #63
   48188:	sub	x4, x19, x26
   4818c:	mov	x3, x26
   48190:	add	x2, sp, #0xcc
   48194:	add	x1, sp, #0xd8
   48198:	str	x8, [sp, #184]
   4819c:	str	w0, [sp, #216]
   481a0:	mov	x0, x8
   481a4:	bl	47d30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x810>
   481a8:	cmn	x0, #0x78
   481ac:	b.hi	48424 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf04>  // b.pmore
   481b0:	ldr	w3, [sp, #204]
   481b4:	cmp	w3, #0xa
   481b8:	b.hi	48178 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc58>  // b.pmore
   481bc:	ldr	w2, [sp, #216]
   481c0:	add	x26, x26, x0
   481c4:	ldr	x8, [sp, #184]
   481c8:	mov	x0, x27
   481cc:	mov	x1, x8
   481d0:	bl	47b80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x660>
   481d4:	b	48148 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc28>
   481d8:	str	wzr, [sp, #208]
   481dc:	sub	x0, x19, #0x2
   481e0:	cmp	x26, x0
   481e4:	b.ls	481f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcd0>  // b.plast
   481e8:	mov	x0, #0xffffffffffffffb8    	// #-72
   481ec:	b	48428 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf08>
   481f0:	mov	x0, x26
   481f4:	add	x2, x27, #0x1, lsl #12
   481f8:	ldrb	w1, [x0], #1
   481fc:	str	wzr, [x27, #4100]
   48200:	mov	x26, x0
   48204:	strh	wzr, [x27, #4104]
   48208:	and	w1, w1, #0x1f
   4820c:	strb	w1, [x2, #10]
   48210:	strb	wzr, [x2, #11]
   48214:	cmp	w25, #0x1
   48218:	b.eq	482b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd94>  // b.none
   4821c:	cmp	w25, #0x2
   48220:	b.ne	48248 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd28>  // b.any
   48224:	ldr	w0, [sp, #128]
   48228:	cbnz	w0, 482e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc4>
   4822c:	b	48178 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc58>
   48230:	ldr	w0, [sp, #128]
   48234:	cbz	w0, 48178 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc58>
   48238:	cmp	w25, #0x1
   4823c:	b.eq	482b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd94>  // b.none
   48240:	cmp	w25, #0x2
   48244:	b.eq	482e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc4>  // b.none
   48248:	cbnz	w25, 483d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeb0>
   4824c:	mov	x2, #0x1808                	// #6152
   48250:	mov	w1, #0x7                   	// #7
   48254:	add	x0, x27, x2
   48258:	str	w1, [sp, #212]
   4825c:	bl	47f9c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa7c>
   48260:	b	482e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc4>
   48264:	mov	w0, #0x1f                  	// #31
   48268:	add	x20, sp, #0xf0
   4826c:	sub	x4, x19, x26
   48270:	mov	x3, x26
   48274:	add	x2, sp, #0xd0
   48278:	add	x1, sp, #0xd8
   4827c:	str	w0, [sp, #216]
   48280:	mov	x0, x20
   48284:	bl	47d30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x810>
   48288:	cmn	x0, #0x78
   4828c:	b.hi	48424 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf04>  // b.pmore
   48290:	ldr	w3, [sp, #208]
   48294:	cmp	w3, #0x9
   48298:	b.hi	48178 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc58>  // b.pmore
   4829c:	ldr	w2, [sp, #216]
   482a0:	add	x26, x26, x0
   482a4:	mov	x1, x20
   482a8:	mov	x0, x28
   482ac:	bl	47b80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x660>
   482b0:	b	48214 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcf4>
   482b4:	str	wzr, [sp, #212]
   482b8:	sub	x19, x19, #0x2
   482bc:	cmp	x26, x19
   482c0:	b.hi	481e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcc8>  // b.pmore
   482c4:	mov	x0, x26
   482c8:	add	x1, x27, #0x1, lsl #12
   482cc:	ldrb	w2, [x0], #1
   482d0:	str	wzr, [x27, #6152]
   482d4:	mov	x26, x0
   482d8:	strh	wzr, [x27, #6156]
   482dc:	strb	w2, [x1, #2062]
   482e0:	strb	wzr, [x1, #2063]
   482e4:	sub	x0, x26, x22
   482e8:	cmn	x0, #0x78
   482ec:	b.hi	48428 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf08>  // b.pmore
   482f0:	ldr	x1, [sp, #120]
   482f4:	ldr	x2, [sp, #176]
   482f8:	add	x19, x1, x2
   482fc:	ldr	x1, [sp, #152]
   48300:	add	x25, x23, x1
   48304:	cbz	w21, 487cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x12ac>
   48308:	mov	x1, #0x1                   	// #1
   4830c:	str	x1, [sp, #232]
   48310:	ldr	x2, [sp, #112]
   48314:	stp	x1, x24, [sp, #320]
   48318:	ldr	x1, [sp, #136]
   4831c:	add	x20, x24, x2
   48320:	add	x24, sp, #0xf0
   48324:	stp	xzr, xzr, [sp, #216]
   48328:	sub	x2, x1, x0
   4832c:	add	x1, x22, x0
   48330:	mov	x0, x24
   48334:	str	x20, [sp, #336]
   48338:	bl	476a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x188>
   4833c:	cmn	x0, #0x78
   48340:	b.hi	48178 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc58>  // b.pmore
   48344:	mov	x2, x27
   48348:	mov	x1, x24
   4834c:	add	x0, x24, #0x20
   48350:	bl	47b10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5f0>
   48354:	mov	x2, x28
   48358:	mov	x1, x24
   4835c:	add	x0, x24, #0x30
   48360:	bl	47b10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5f0>
   48364:	ldr	x2, [sp, #160]
   48368:	add	x0, x24, #0x40
   4836c:	mov	x1, x24
   48370:	adrp	x28, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   48374:	sub	x22, x19, #0x8
   48378:	bl	47b10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5f0>
   4837c:	ldr	x10, [sp, #120]
   48380:	add	x0, x28, #0xba4
   48384:	str	x0, [sp, #112]
   48388:	add	x0, x0, #0x80
   4838c:	str	x0, [sp, #128]
   48390:	mov	x0, x24
   48394:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   48398:	cmp	w0, #0x2
   4839c:	b.hi	487c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x12a4>  // b.pmore
   483a0:	cbnz	w21, 48444 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf24>
   483a4:	subs	x2, x25, x23
   483a8:	b.cc	48178 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc58>  // b.lo, b.ul, b.last
   483ac:	add	x20, x10, x2
   483b0:	cmp	x20, x19
   483b4:	b.hi	487d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x12b4>  // b.pmore
   483b8:	mov	x1, x23
   483bc:	mov	x0, x10
   483c0:	bl	4460 <memcpy@plt>
   483c4:	ldr	x0, [sp, #120]
   483c8:	sub	x0, x20, x0
   483cc:	b	48428 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf08>
   483d0:	mov	w0, #0x7f                  	// #127
   483d4:	add	x25, sp, #0xf0
   483d8:	sub	x4, x19, x26
   483dc:	mov	x3, x26
   483e0:	add	x2, sp, #0xd4
   483e4:	add	x1, sp, #0xd8
   483e8:	str	w0, [sp, #216]
   483ec:	mov	x0, x25
   483f0:	bl	47d30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x810>
   483f4:	cmn	x0, #0x78
   483f8:	b.hi	48424 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf04>  // b.pmore
   483fc:	ldr	w3, [sp, #212]
   48400:	cmp	w3, #0xa
   48404:	b.hi	48178 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc58>  // b.pmore
   48408:	ldr	w2, [sp, #216]
   4840c:	add	x26, x26, x0
   48410:	mov	x1, x25
   48414:	mov	x0, #0x1808                	// #6152
   48418:	add	x0, x27, x0
   4841c:	bl	47b80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x660>
   48420:	b	482e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc4>
   48424:	mov	x0, #0xffffffffffffffff    	// #-1
   48428:	ldp	x19, x20, [sp, #16]
   4842c:	ldp	x21, x22, [sp, #32]
   48430:	ldp	x23, x24, [sp, #48]
   48434:	ldp	x25, x26, [sp, #64]
   48438:	ldp	x27, x28, [sp, #80]
   4843c:	ldp	x29, x30, [sp], #496
   48440:	ret
   48444:	ldp	x0, x1, [sp, #272]
   48448:	sub	w21, w21, #0x1
   4844c:	ldp	x8, x9, [sp, #328]
   48450:	add	x0, x1, x0, lsl #2
   48454:	ldrb	w20, [x0, #2]
   48458:	cbz	x20, 484c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfa0>
   4845c:	cmp	x20, #0x3f
   48460:	ldr	x27, [sp, #232]
   48464:	b.eq	484c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfa8>  // b.none
   48468:	ldp	x0, x1, [sp, #288]
   4846c:	add	x0, x1, x0, lsl #2
   48470:	ldrb	w3, [x0, #2]
   48474:	add	x0, x28, #0xba4
   48478:	sub	w1, w3, #0x1
   4847c:	cmp	w3, #0x0
   48480:	mov	x2, x3
   48484:	csel	w1, w1, wzr, ne  // ne = any
   48488:	ldr	w6, [x0, x3, lsl #2]
   4848c:	ldr	w3, [sp, #248]
   48490:	ldr	x0, [sp, #240]
   48494:	add	w7, w1, w3
   48498:	str	w7, [sp, #248]
   4849c:	cbz	w2, 4852c <ZDICT_addEntropyTablesFromBuffer@@Base+0x100c>
   484a0:	lsl	x5, x0, x3
   484a4:	mvn	w1, w1
   484a8:	lsr	x5, x5, #1
   484ac:	lsr	x5, x5, x1
   484b0:	add	x27, x5, w6, uxtw
   484b4:	ldr	x0, [sp, #232]
   484b8:	str	x0, [sp, #320]
   484bc:	b	48530 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1010>
   484c0:	ldr	x27, [sp, #320]
   484c4:	b	48468 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf48>
   484c8:	mov	x0, x8
   484cc:	ldrb	w1, [x0], #1
   484d0:	cmp	w1, #0xff
   484d4:	b.eq	484f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfd0>  // b.none
   484d8:	and	x20, x1, #0xff
   484dc:	add	x20, x20, #0x3f
   484e0:	sub	x8, x9, #0x1
   484e4:	cmp	x9, x0
   484e8:	csel	x8, x8, x0, ls  // ls = plast
   484ec:	b	48468 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf48>
   484f0:	add	x1, x8, #0x3
   484f4:	cmp	x9, x1
   484f8:	b.cc	484e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfc0>  // b.lo, b.ul, b.last
   484fc:	ldurh	w0, [x8, #1]
   48500:	ldurh	w20, [x8, #1]
   48504:	tbz	w0, #0, 48520 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1000>
   48508:	cmp	x9, x1
   4850c:	b.ls	48520 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1000>  // b.plast
   48510:	ldrb	w0, [x8, #3]
   48514:	add	x1, x8, #0x4
   48518:	ubfiz	x0, x0, #16, #8
   4851c:	add	x20, x20, x0
   48520:	lsr	x20, x20, #1
   48524:	mov	x0, x1
   48528:	b	484e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfc0>
   4852c:	cbz	x20, 484b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf94>
   48530:	mov	x1, x24
   48534:	add	x0, x24, #0x30
   48538:	bl	47ac8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a8>
   4853c:	add	x0, x24, #0x20
   48540:	bl	47ac8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a8>
   48544:	add	x0, x24, #0x40
   48548:	bl	47ac8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a8>
   4854c:	and	x0, x0, #0xff
   48550:	cmp	x0, #0x7f
   48554:	b.ne	48680 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1160>  // b.any
   48558:	cmp	x9, x8
   4855c:	b.ls	4863c <ZDICT_addEntropyTablesFromBuffer@@Base+0x111c>  // b.plast
   48560:	mov	x1, x8
   48564:	ldrb	w2, [x1], #1
   48568:	cmp	w2, #0xff
   4856c:	b.eq	48644 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1124>  // b.none
   48570:	mov	x8, x1
   48574:	mov	w0, w2
   48578:	mov	x1, x8
   4857c:	add	x0, x0, #0x7f
   48580:	cmp	x9, x1
   48584:	b.hi	4858c <ZDICT_addEntropyTablesFromBuffer@@Base+0x106c>  // b.pmore
   48588:	sub	x1, x9, #0x1
   4858c:	add	x7, x0, #0x4
   48590:	stp	x20, x7, [sp, #216]
   48594:	add	x3, x10, x20
   48598:	str	x27, [sp, #232]
   4859c:	add	x6, x20, x7
   485a0:	str	x1, [sp, #328]
   485a4:	add	x26, x10, x6
   485a8:	cmp	x3, x22
   485ac:	b.hi	487d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x12b4>  // b.pmore
   485b0:	cmp	x19, x26
   485b4:	b.cc	487d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x12b4>  // b.lo, b.ul, b.last
   485b8:	add	x20, x23, x20
   485bc:	cmp	x25, x20
   485c0:	b.cc	48178 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc58>  // b.lo, b.ul, b.last
   485c4:	mov	x0, #0x0                   	// #0
   485c8:	ldr	x1, [x23, x0]
   485cc:	str	x1, [x10, x0]
   485d0:	add	x0, x0, #0x8
   485d4:	add	x1, x10, x0
   485d8:	cmp	x3, x1
   485dc:	b.hi	485c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x10a8>  // b.pmore
   485e0:	ldr	x0, [sp, #104]
   485e4:	sub	x2, x3, x27
   485e8:	sub	x0, x3, x0
   485ec:	cmp	x0, x27
   485f0:	b.cs	486b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1198>  // b.hs, b.nlast
   485f4:	ldr	x0, [sp, #168]
   485f8:	sub	x0, x3, x0
   485fc:	cmp	x0, x27
   48600:	b.cc	48178 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc58>  // b.lo, b.ul, b.last
   48604:	ldr	x0, [sp, #104]
   48608:	sub	x23, x0, x2
   4860c:	ldr	x0, [sp, #144]
   48610:	ldr	x2, [sp, #144]
   48614:	sub	x1, x0, x23
   48618:	add	x0, x1, x7
   4861c:	cmp	x2, x0
   48620:	b.cc	48688 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1168>  // b.lo, b.ul, b.last
   48624:	mov	x2, x7
   48628:	mov	x0, x3
   4862c:	bl	4490 <memmove@plt>
   48630:	mov	x23, x20
   48634:	mov	x10, x26
   48638:	b	48390 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe70>
   4863c:	mov	w2, #0x0                   	// #0
   48640:	b	48574 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1054>
   48644:	add	x2, x8, #0x3
   48648:	cmp	x9, x2
   4864c:	b.cc	48580 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1060>  // b.lo, b.ul, b.last
   48650:	ldurh	w1, [x8, #1]
   48654:	ldurh	w0, [x8, #1]
   48658:	tbz	w1, #0, 48674 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1154>
   4865c:	cmp	x9, x2
   48660:	b.ls	48674 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1154>  // b.plast
   48664:	ldrb	w1, [x8, #3]
   48668:	add	x2, x8, #0x4
   4866c:	ubfiz	x1, x1, #16, #8
   48670:	add	x0, x0, x1
   48674:	lsr	x0, x0, #1
   48678:	mov	x1, x2
   4867c:	b	48580 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1060>
   48680:	mov	x1, x8
   48684:	b	4858c <ZDICT_addEntropyTablesFromBuffer@@Base+0x106c>
   48688:	mov	x0, x3
   4868c:	mov	x2, x23
   48690:	str	x7, [sp, #136]
   48694:	bl	4490 <memmove@plt>
   48698:	add	x3, x0, x23
   4869c:	cmp	x22, x3
   486a0:	b.cc	4878c <ZDICT_addEntropyTablesFromBuffer@@Base+0x126c>  // b.lo, b.ul, b.last
   486a4:	ldr	x7, [sp, #136]
   486a8:	sub	x7, x7, x23
   486ac:	cmp	x7, #0x3
   486b0:	b.ls	4878c <ZDICT_addEntropyTablesFromBuffer@@Base+0x126c>  // b.plast
   486b4:	ldr	x2, [sp, #104]
   486b8:	cmp	x27, #0x7
   486bc:	b.hi	48794 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1274>  // b.pmore
   486c0:	ldrb	w0, [x2]
   486c4:	strb	w0, [x3]
   486c8:	ldrb	w0, [x2, #1]
   486cc:	strb	w0, [x3, #1]
   486d0:	ldrb	w0, [x2, #2]
   486d4:	strb	w0, [x3, #2]
   486d8:	ldrb	w0, [x2, #3]
   486dc:	strb	w0, [x3, #3]
   486e0:	ldr	x0, [sp, #112]
   486e4:	add	x0, x0, #0xa0
   486e8:	ldrsw	x0, [x0, x27, lsl #2]
   486ec:	add	x1, x2, x0
   486f0:	ldr	w0, [x2, x0]
   486f4:	str	w0, [x3, #4]
   486f8:	ldr	x0, [sp, #128]
   486fc:	ldrsw	x2, [x0, x27, lsl #2]
   48700:	sub	x2, x1, x2
   48704:	sub	x1, x19, #0xc
   48708:	add	x0, x3, #0x8
   4870c:	add	x5, x2, #0x8
   48710:	cmp	x26, x1
   48714:	b.ls	487a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1280>  // b.plast
   48718:	cmp	x22, x0
   4871c:	b.ls	4874c <ZDICT_addEntropyTablesFromBuffer@@Base+0x122c>  // b.plast
   48720:	sub	x0, x22, x0
   48724:	mov	x8, x22
   48728:	mov	x1, #0x8                   	// #8
   4872c:	ldr	x7, [x2, x1]
   48730:	str	x7, [x3, x1]
   48734:	add	x1, x1, #0x8
   48738:	add	x7, x3, x1
   4873c:	cmp	x8, x7
   48740:	b.hi	4872c <ZDICT_addEntropyTablesFromBuffer@@Base+0x120c>  // b.pmore
   48744:	add	x5, x5, x0
   48748:	mov	x0, x22
   4874c:	mov	x1, #0x0                   	// #0
   48750:	add	x2, x0, x1
   48754:	cmp	x26, x2
   48758:	b.ls	48630 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1110>  // b.plast
   4875c:	ldrb	w2, [x5, x1]
   48760:	strb	w2, [x0, x1]
   48764:	add	x1, x1, #0x1
   48768:	b	48750 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1230>
   4876c:	ldr	x1, [sp, #104]
   48770:	ldrb	w1, [x1, x0]
   48774:	strb	w1, [x3, x0]
   48778:	add	x0, x0, #0x1
   4877c:	add	x1, x3, x0
   48780:	cmp	x26, x1
   48784:	b.hi	4876c <ZDICT_addEntropyTablesFromBuffer@@Base+0x124c>  // b.pmore
   48788:	b	48630 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1110>
   4878c:	mov	x0, #0x0                   	// #0
   48790:	b	4877c <ZDICT_addEntropyTablesFromBuffer@@Base+0x125c>
   48794:	ldr	x0, [x2]
   48798:	str	x0, [x3]
   4879c:	b	48704 <ZDICT_addEntropyTablesFromBuffer@@Base+0x11e4>
   487a0:	add	x0, x3, x7
   487a4:	mov	x1, #0x8                   	// #8
   487a8:	ldr	x5, [x2, x1]
   487ac:	str	x5, [x3, x1]
   487b0:	add	x1, x1, #0x8
   487b4:	add	x5, x3, x1
   487b8:	cmp	x0, x5
   487bc:	b.hi	487a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1288>  // b.pmore
   487c0:	b	48630 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1110>
   487c4:	cbnz	w21, 48178 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc58>
   487c8:	b	483a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe84>
   487cc:	ldr	x10, [sp, #120]
   487d0:	b	483a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe84>
   487d4:	mov	x0, #0xffffffffffffffba    	// #-70
   487d8:	b	48428 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf08>
   487dc:	mov	x24, #0x0                   	// #0
   487e0:	mov	x0, #0x1                   	// #1
   487e4:	str	xzr, [sp, #112]
   487e8:	b	482f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdd0>
   487ec:	cmp	w20, #0x1
   487f0:	b.eq	481d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcb8>  // b.none
   487f4:	cmp	w20, #0x2
   487f8:	b.ne	48158 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc38>  // b.any
   487fc:	b	48238 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd18>
   48800:	stp	x29, x30, [sp, #-80]!
   48804:	mov	x10, x1
   48808:	add	x10, x0, x10
   4880c:	mov	x29, sp
   48810:	mov	x11, x0
   48814:	ldrh	w0, [x4, #2]
   48818:	mov	x1, x2
   4881c:	mov	x9, x4
   48820:	mov	x2, x3
   48824:	sub	x14, x10, #0x3
   48828:	add	x8, sp, #0x30
   4882c:	cbz	w0, 48930 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1410>
   48830:	mov	x0, x8
   48834:	bl	476a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x188>
   48838:	cmn	x0, #0x78
   4883c:	b.hi	48a64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1544>  // b.pmore
   48840:	add	x13, sp, #0x10
   48844:	mov	x2, x9
   48848:	mov	x1, x8
   4884c:	mov	x0, x13
   48850:	bl	47b10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5f0>
   48854:	mov	x2, x9
   48858:	add	x12, sp, #0x20
   4885c:	mov	x1, x8
   48860:	mov	x0, x12
   48864:	bl	47b10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5f0>
   48868:	mov	x9, x11
   4886c:	mov	x0, x8
   48870:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   48874:	cbnz	w0, 48880 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1360>
   48878:	cmp	x9, x14
   4887c:	b.cc	488f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x13d4>  // b.lo, b.ul, b.last
   48880:	mov	x0, x8
   48884:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   48888:	cmp	w0, #0x2
   4888c:	b.hi	48a6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x154c>  // b.pmore
   48890:	mov	x0, x8
   48894:	bl	475e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8>
   48898:	cmp	x9, x10
   4889c:	b.eq	48a40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1520>  // b.none
   488a0:	cbnz	w0, 48a6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x154c>
   488a4:	mov	x1, x8
   488a8:	mov	x0, x13
   488ac:	bl	477c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a8>
   488b0:	mov	x6, x9
   488b4:	strb	w0, [x6], #1
   488b8:	mov	x0, x8
   488bc:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   488c0:	cmp	w0, #0x2
   488c4:	b.hi	48a44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1524>  // b.pmore
   488c8:	mov	x0, x8
   488cc:	bl	475e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8>
   488d0:	cmp	x6, x10
   488d4:	b.eq	48a44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1524>  // b.none
   488d8:	cbnz	w0, 48a44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1524>
   488dc:	mov	x1, x8
   488e0:	mov	x0, x12
   488e4:	bl	477c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a8>
   488e8:	add	x9, x9, #0x2
   488ec:	sturb	w0, [x9, #-1]
   488f0:	b	48880 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1360>
   488f4:	mov	x1, x8
   488f8:	mov	x0, x13
   488fc:	bl	477c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a8>
   48900:	strb	w0, [x9]
   48904:	mov	x0, x12
   48908:	bl	477c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a8>
   4890c:	strb	w0, [x9, #1]
   48910:	mov	x0, x13
   48914:	bl	477c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a8>
   48918:	strb	w0, [x9, #2]
   4891c:	mov	x0, x12
   48920:	bl	477c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a8>
   48924:	add	x9, x9, #0x4
   48928:	sturb	w0, [x9, #-1]
   4892c:	b	4886c <ZDICT_addEntropyTablesFromBuffer@@Base+0x134c>
   48930:	mov	x0, x8
   48934:	bl	476a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x188>
   48938:	cmn	x0, #0x78
   4893c:	b.hi	48a64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1544>  // b.pmore
   48940:	add	x13, sp, #0x10
   48944:	mov	x2, x9
   48948:	mov	x1, x8
   4894c:	mov	x0, x13
   48950:	bl	47b10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5f0>
   48954:	mov	x2, x9
   48958:	add	x12, sp, #0x20
   4895c:	mov	x1, x8
   48960:	mov	x0, x12
   48964:	bl	47b10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5f0>
   48968:	mov	x9, x11
   4896c:	mov	x0, x8
   48970:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   48974:	cbnz	w0, 48980 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1460>
   48978:	cmp	x9, x14
   4897c:	b.cc	48a04 <ZDICT_addEntropyTablesFromBuffer@@Base+0x14e4>  // b.lo, b.ul, b.last
   48980:	mov	x0, x8
   48984:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   48988:	cmp	w0, #0x2
   4898c:	b.hi	48a6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x154c>  // b.pmore
   48990:	mov	x0, x8
   48994:	bl	475e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8>
   48998:	cmp	x9, x10
   4899c:	b.eq	48a40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1520>  // b.none
   489a0:	cbz	w0, 489ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x148c>
   489a4:	ldr	x0, [sp, #16]
   489a8:	cbz	x0, 48a6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x154c>
   489ac:	mov	x1, x8
   489b0:	mov	x0, x13
   489b4:	bl	47ac8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a8>
   489b8:	mov	x6, x9
   489bc:	strb	w0, [x6], #1
   489c0:	mov	x0, x8
   489c4:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   489c8:	cmp	w0, #0x2
   489cc:	b.hi	48a44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1524>  // b.pmore
   489d0:	mov	x0, x8
   489d4:	bl	475e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8>
   489d8:	cmp	x6, x10
   489dc:	b.eq	48a44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1524>  // b.none
   489e0:	cbz	w0, 489ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x14cc>
   489e4:	ldr	x0, [sp, #32]
   489e8:	cbz	x0, 48a44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1524>
   489ec:	mov	x1, x8
   489f0:	mov	x0, x12
   489f4:	bl	47ac8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a8>
   489f8:	add	x9, x9, #0x2
   489fc:	sturb	w0, [x9, #-1]
   48a00:	b	48980 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1460>
   48a04:	mov	x1, x8
   48a08:	mov	x0, x13
   48a0c:	bl	47ac8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a8>
   48a10:	strb	w0, [x9]
   48a14:	mov	x0, x12
   48a18:	bl	47ac8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a8>
   48a1c:	strb	w0, [x9, #1]
   48a20:	mov	x0, x13
   48a24:	bl	47ac8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a8>
   48a28:	strb	w0, [x9, #2]
   48a2c:	mov	x0, x12
   48a30:	bl	47ac8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a8>
   48a34:	add	x9, x9, #0x4
   48a38:	sturb	w0, [x9, #-1]
   48a3c:	b	4896c <ZDICT_addEntropyTablesFromBuffer@@Base+0x144c>
   48a40:	mov	x6, x10
   48a44:	mov	x0, x8
   48a48:	bl	475e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8>
   48a4c:	cbz	w0, 48a74 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1554>
   48a50:	ldr	x0, [sp, #16]
   48a54:	ldr	x1, [sp, #32]
   48a58:	orr	x0, x0, x1
   48a5c:	cbnz	x0, 48a74 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1554>
   48a60:	sub	x0, x6, x11
   48a64:	ldp	x29, x30, [sp], #80
   48a68:	ret
   48a6c:	mov	x6, x9
   48a70:	b	48a44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1524>
   48a74:	cmp	x6, x10
   48a78:	mov	x0, #0xffffffffffffffba    	// #-70
   48a7c:	mov	x6, #0xffffffffffffffec    	// #-20
   48a80:	csel	x0, x6, x0, ne  // ne = any
   48a84:	b	48a64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1544>
   48a88:	mov	x12, #0x4260                	// #16992
   48a8c:	sub	sp, sp, x12
   48a90:	cmp	x3, #0x1
   48a94:	stp	x29, x30, [sp]
   48a98:	mov	x29, sp
   48a9c:	stp	x19, x20, [sp, #16]
   48aa0:	stp	x21, x22, [sp, #32]
   48aa4:	mov	x22, x0
   48aa8:	mov	w0, #0xff                  	// #255
   48aac:	stp	x23, x24, [sp, #48]
   48ab0:	str	x25, [sp, #64]
   48ab4:	str	w0, [sp, #84]
   48ab8:	b.hi	48ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x15c4>  // b.pmore
   48abc:	mov	x19, #0xffffffffffffffb8    	// #-72
   48ac0:	mov	x0, x19
   48ac4:	mov	x12, #0x4260                	// #16992
   48ac8:	ldp	x29, x30, [sp]
   48acc:	ldp	x19, x20, [sp, #16]
   48ad0:	ldp	x21, x22, [sp, #32]
   48ad4:	ldp	x23, x24, [sp, #48]
   48ad8:	ldr	x25, [sp, #64]
   48adc:	add	sp, sp, x12
   48ae0:	ret
   48ae4:	add	x25, sp, #0x58
   48ae8:	mov	x4, x3
   48aec:	mov	x23, x1
   48af0:	mov	x21, x2
   48af4:	mov	x20, x3
   48af8:	add	x1, sp, #0x54
   48afc:	mov	x3, x2
   48b00:	mov	x0, x25
   48b04:	add	x2, sp, #0x50
   48b08:	bl	47d30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x810>
   48b0c:	mov	x19, x0
   48b10:	cmn	x0, #0x78
   48b14:	b.hi	48ac0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x15a0>  // b.pmore
   48b18:	cmp	x20, x0
   48b1c:	b.ls	48abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x159c>  // b.plast
   48b20:	ldp	w3, w2, [sp, #80]
   48b24:	add	x24, sp, #0x258
   48b28:	mov	x1, x25
   48b2c:	mov	x0, x24
   48b30:	bl	47b80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x660>
   48b34:	cmn	x0, #0x78
   48b38:	b.hi	48b54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1634>  // b.pmore
   48b3c:	mov	x4, x24
   48b40:	sub	x3, x20, x19
   48b44:	add	x2, x21, x19
   48b48:	mov	x1, x23
   48b4c:	mov	x0, x22
   48b50:	bl	48800 <ZDICT_addEntropyTablesFromBuffer@@Base+0x12e0>
   48b54:	mov	x19, x0
   48b58:	b	48ac0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x15a0>
   48b5c:	stp	x29, x30, [sp, #-64]!
   48b60:	mov	x29, sp
   48b64:	stp	x19, x20, [sp, #16]
   48b68:	stp	x21, x22, [sp, #32]
   48b6c:	stp	x23, x24, [sp, #48]
   48b70:	cbz	x5, 48d28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1808>
   48b74:	ldrb	w20, [x4]
   48b78:	mov	x24, x0
   48b7c:	mov	x21, x1
   48b80:	mov	x23, x2
   48b84:	mov	x22, x3
   48b88:	cmp	x20, #0x7f
   48b8c:	b.ls	48cb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1790>  // b.plast
   48b90:	cmp	x20, #0xf1
   48b94:	b.ls	48c5c <ZDICT_addEntropyTablesFromBuffer@@Base+0x173c>  // b.plast
   48b98:	adrp	x1, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   48b9c:	add	x1, x1, #0xba4
   48ba0:	sub	x20, x20, #0xf2
   48ba4:	add	x1, x1, #0xc0
   48ba8:	mov	x2, #0x100                 	// #256
   48bac:	ldrsw	x19, [x1, x20, lsl #2]
   48bb0:	mov	x20, #0x0                   	// #0
   48bb4:	mov	w1, #0x1                   	// #1
   48bb8:	bl	4700 <memset@plt>
   48bbc:	mov	w2, #0x0                   	// #0
   48bc0:	mov	w0, #0x0                   	// #0
   48bc4:	mov	w5, #0x1                   	// #1
   48bc8:	stp	xzr, xzr, [x21]
   48bcc:	stp	xzr, xzr, [x21, #16]
   48bd0:	stp	xzr, xzr, [x21, #32]
   48bd4:	stp	xzr, xzr, [x21, #48]
   48bd8:	str	wzr, [x21, #64]
   48bdc:	mov	w4, w2
   48be0:	cmp	x19, w2, uxtw
   48be4:	b.hi	48cf0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x17d0>  // b.pmore
   48be8:	cbz	w0, 48cfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x17dc>
   48bec:	clz	w1, w0
   48bf0:	eor	w1, w1, #0x1f
   48bf4:	add	w1, w1, #0x1
   48bf8:	cmp	w1, #0x10
   48bfc:	b.hi	48cfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x17dc>  // b.pmore
   48c00:	mov	w2, #0x1                   	// #1
   48c04:	lsl	w3, w2, w1
   48c08:	sub	w3, w3, w0
   48c0c:	clz	w0, w3
   48c10:	eor	w0, w0, #0x1f
   48c14:	lsl	w2, w2, w0
   48c18:	cmp	w3, w2
   48c1c:	b.ne	48cfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x17dc>  // b.any
   48c20:	add	w0, w0, #0x1
   48c24:	strb	w0, [x24, x19]
   48c28:	ubfiz	x0, x0, #2, #7
   48c2c:	ldr	w2, [x21, x0]
   48c30:	add	w2, w2, #0x1
   48c34:	str	w2, [x21, x0]
   48c38:	ldr	w0, [x21, #4]
   48c3c:	cmp	w0, #0x1
   48c40:	b.ls	48cfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x17dc>  // b.plast
   48c44:	tbnz	w0, #0, 48cfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x17dc>
   48c48:	add	w19, w19, #0x1
   48c4c:	str	w19, [x23]
   48c50:	add	x19, x20, #0x1
   48c54:	str	w1, [x22]
   48c58:	b	48cd8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x17b8>
   48c5c:	sub	x19, x20, #0x7f
   48c60:	sub	x20, x20, #0x7e
   48c64:	lsr	x20, x20, #1
   48c68:	add	x0, x20, #0x1
   48c6c:	cmp	x5, x0
   48c70:	b.cc	48d28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1808>  // b.lo, b.ul, b.last
   48c74:	mov	w0, #0x0                   	// #0
   48c78:	mov	w3, w0
   48c7c:	cmp	x19, w0, uxtw
   48c80:	b.ls	48bbc <ZDICT_addEntropyTablesFromBuffer@@Base+0x169c>  // b.plast
   48c84:	lsr	w1, w0, #1
   48c88:	add	x1, x1, #0x1
   48c8c:	ldrb	w2, [x4, x1]
   48c90:	lsr	w2, w2, #4
   48c94:	strb	w2, [x24, x3]
   48c98:	add	w2, w0, #0x1
   48c9c:	add	w0, w0, #0x2
   48ca0:	ldrb	w1, [x4, x1]
   48ca4:	and	w1, w1, #0xf
   48ca8:	strb	w1, [x24, x2]
   48cac:	b	48c78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1758>
   48cb0:	add	x1, x20, #0x1
   48cb4:	cmp	x5, x1
   48cb8:	b.cc	48d28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1808>  // b.lo, b.ul, b.last
   48cbc:	mov	x3, x20
   48cc0:	add	x2, x4, #0x1
   48cc4:	mov	x1, #0xff                  	// #255
   48cc8:	bl	48a88 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1568>
   48ccc:	mov	x19, x0
   48cd0:	cmn	x0, #0x78
   48cd4:	b.ls	48bbc <ZDICT_addEntropyTablesFromBuffer@@Base+0x169c>  // b.plast
   48cd8:	mov	x0, x19
   48cdc:	ldp	x19, x20, [sp, #16]
   48ce0:	ldp	x21, x22, [sp, #32]
   48ce4:	ldp	x23, x24, [sp, #48]
   48ce8:	ldp	x29, x30, [sp], #64
   48cec:	ret
   48cf0:	ldrb	w1, [x24, x4]
   48cf4:	cmp	w1, #0xf
   48cf8:	b.ls	48d04 <ZDICT_addEntropyTablesFromBuffer@@Base+0x17e4>  // b.plast
   48cfc:	mov	x19, #0xffffffffffffffec    	// #-20
   48d00:	b	48cd8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x17b8>
   48d04:	ubfiz	x1, x1, #2, #8
   48d08:	add	w2, w2, #0x1
   48d0c:	ldr	w3, [x21, x1]
   48d10:	add	w3, w3, #0x1
   48d14:	str	w3, [x21, x1]
   48d18:	ldrb	w1, [x24, x4]
   48d1c:	lsl	w1, w5, w1
   48d20:	add	w0, w0, w1, asr #1
   48d24:	b	48bdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x16bc>
   48d28:	mov	x19, #0xffffffffffffffb8    	// #-72
   48d2c:	b	48cd8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x17b8>
   48d30:	cmn	x0, #0x78
   48d34:	cset	w0, hi  // hi = pmore
   48d38:	ret
   48d3c:	b	47690 <ZDICT_addEntropyTablesFromBuffer@@Base+0x170>
   48d40:	stp	x29, x30, [sp, #-384]!
   48d44:	mov	x5, x2
   48d48:	mov	x4, x1
   48d4c:	mov	x29, sp
   48d50:	stp	x19, x20, [sp, #16]
   48d54:	add	x20, sp, #0x38
   48d58:	mov	x19, x0
   48d5c:	str	x21, [sp, #32]
   48d60:	add	x21, sp, #0x80
   48d64:	add	x3, sp, #0x30
   48d68:	add	x2, sp, #0x34
   48d6c:	mov	x1, x20
   48d70:	mov	x0, x21
   48d74:	stp	wzr, wzr, [sp, #48]
   48d78:	bl	48b5c <ZDICT_addEntropyTablesFromBuffer@@Base+0x163c>
   48d7c:	cmn	x0, #0x78
   48d80:	b.hi	48dc8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x18a8>  // b.pmore
   48d84:	ldrh	w1, [x19]
   48d88:	ldr	w2, [sp, #48]
   48d8c:	cmp	w1, w2
   48d90:	b.cc	48e3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x191c>  // b.lo, b.ul, b.last
   48d94:	mov	x3, x20
   48d98:	mov	w1, #0x0                   	// #0
   48d9c:	mov	w4, #0x0                   	// #0
   48da0:	strh	w2, [x19]
   48da4:	add	x3, x3, #0x4
   48da8:	cmp	w2, w1
   48dac:	b.ne	48dd8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x18b8>  // b.any
   48db0:	ldr	w7, [sp, #52]
   48db4:	mov	w8, #0x1                   	// #1
   48db8:	add	w3, w2, w8
   48dbc:	mov	x4, #0x0                   	// #0
   48dc0:	cmp	w7, w4
   48dc4:	b.hi	48df0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x18d0>  // b.pmore
   48dc8:	ldp	x19, x20, [sp, #16]
   48dcc:	ldr	x21, [sp, #32]
   48dd0:	ldp	x29, x30, [sp], #384
   48dd4:	ret
   48dd8:	ldr	w5, [x3]
   48ddc:	str	w4, [x3]
   48de0:	lsl	w5, w5, w1
   48de4:	add	w1, w1, #0x1
   48de8:	add	w4, w5, w4
   48dec:	b	48da4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1884>
   48df0:	ldrb	w9, [x21, x4]
   48df4:	and	w10, w4, #0xff
   48df8:	sub	w6, w3, w9
   48dfc:	ubfiz	x2, x9, #2, #8
   48e00:	lsl	w1, w8, w9
   48e04:	and	w6, w6, #0xff
   48e08:	ldr	w2, [x20, x2]
   48e0c:	add	x5, x19, w2, uxtw #1
   48e10:	add	w1, w2, w1, asr #1
   48e14:	add	x5, x5, #0x2
   48e18:	cmp	w1, w2
   48e1c:	b.hi	48e2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x190c>  // b.pmore
   48e20:	add	x4, x4, #0x1
   48e24:	str	w1, [x20, x9, lsl #2]
   48e28:	b	48dc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x18a0>
   48e2c:	add	w2, w2, #0x1
   48e30:	strb	w10, [x5]
   48e34:	strb	w6, [x5, #1]
   48e38:	b	48e14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x18f4>
   48e3c:	mov	x0, #0xffffffffffffffd4    	// #-44
   48e40:	b	48dc8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x18a8>
   48e44:	mov	x13, x1
   48e48:	cmp	x1, x3
   48e4c:	b.ls	48eb4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1994>  // b.plast
   48e50:	stp	x29, x30, [sp, #-48]!
   48e54:	mov	x8, x0
   48e58:	mov	x9, x4
   48e5c:	mov	x29, sp
   48e60:	ldrh	w10, [x4]
   48e64:	add	x14, sp, #0x10
   48e68:	mov	x1, x2
   48e6c:	mov	x0, x14
   48e70:	mov	x2, x3
   48e74:	bl	476a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x188>
   48e78:	cmn	x0, #0x78
   48e7c:	b.hi	48eac <ZDICT_addEntropyTablesFromBuffer@@Base+0x198c>  // b.pmore
   48e80:	mov	w4, w10
   48e84:	add	x3, x9, #0x2
   48e88:	add	x2, x8, x13
   48e8c:	mov	x1, x14
   48e90:	mov	x0, x8
   48e94:	bl	47840 <ZDICT_addEntropyTablesFromBuffer@@Base+0x320>
   48e98:	mov	x0, x14
   48e9c:	bl	475e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8>
   48ea0:	cmp	w0, #0x0
   48ea4:	mov	x0, #0xffffffffffffffec    	// #-20
   48ea8:	csel	x0, x13, x0, ne  // ne = any
   48eac:	ldp	x29, x30, [sp], #48
   48eb0:	ret
   48eb4:	mov	x0, #0xffffffffffffffba    	// #-70
   48eb8:	ret
   48ebc:	mov	x12, #0x2050                	// #8272
   48ec0:	sub	sp, sp, x12
   48ec4:	stp	x29, x30, [sp]
   48ec8:	mov	x29, sp
   48ecc:	str	x23, [sp, #48]
   48ed0:	add	x23, sp, #0x48
   48ed4:	stp	x19, x20, [sp, #16]
   48ed8:	mov	x19, x3
   48edc:	mov	x20, x2
   48ee0:	mov	x2, #0x2002                	// #8194
   48ee4:	stp	x21, x22, [sp, #32]
   48ee8:	mov	x21, x0
   48eec:	mov	x22, x1
   48ef0:	mov	x0, x23
   48ef4:	mov	w1, #0x0                   	// #0
   48ef8:	bl	4700 <memset@plt>
   48efc:	mov	w0, #0xc                   	// #12
   48f00:	mov	x2, x19
   48f04:	mov	x1, x20
   48f08:	strh	w0, [sp, #72]
   48f0c:	mov	x0, x23
   48f10:	bl	48d40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1820>
   48f14:	cmn	x0, #0x78
   48f18:	b.hi	48f3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1a1c>  // b.pmore
   48f1c:	cmp	x19, x0
   48f20:	b.ls	48f58 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1a38>  // b.plast
   48f24:	sub	x3, x19, x0
   48f28:	add	x2, x20, x0
   48f2c:	mov	x4, x23
   48f30:	mov	x1, x22
   48f34:	mov	x0, x21
   48f38:	bl	48e44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1924>
   48f3c:	mov	x12, #0x2050                	// #8272
   48f40:	ldp	x29, x30, [sp]
   48f44:	ldp	x19, x20, [sp, #16]
   48f48:	ldp	x21, x22, [sp, #32]
   48f4c:	ldr	x23, [sp, #48]
   48f50:	add	sp, sp, x12
   48f54:	ret
   48f58:	mov	x0, #0xffffffffffffffb8    	// #-72
   48f5c:	b	48f3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1a1c>
   48f60:	cmp	x3, #0x9
   48f64:	b.ls	492fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ddc>  // b.plast
   48f68:	ldrh	w18, [x2]
   48f6c:	mov	x9, x0
   48f70:	ldrh	w12, [x2, #2]
   48f74:	sub	x10, x3, #0x6
   48f78:	ldrh	w11, [x2, #4]
   48f7c:	add	x0, x18, x12
   48f80:	sub	x10, x10, x0
   48f84:	sub	x10, x10, x11
   48f88:	cmp	x3, x10
   48f8c:	b.cc	492fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ddc>  // b.lo, b.ul, b.last
   48f90:	stp	x29, x30, [sp, #-224]!
   48f94:	add	x8, x2, #0x6
   48f98:	mov	x15, x1
   48f9c:	mov	x29, sp
   48fa0:	ldrh	w14, [x4]
   48fa4:	mov	x13, x4
   48fa8:	stp	x19, x20, [sp, #16]
   48fac:	add	x19, sp, #0x60
   48fb0:	mov	x2, x18
   48fb4:	mov	x1, x8
   48fb8:	mov	x0, x19
   48fbc:	stp	x21, x22, [sp, #32]
   48fc0:	stp	x23, x24, [sp, #48]
   48fc4:	stp	x25, x26, [sp, #64]
   48fc8:	str	x27, [sp, #80]
   48fcc:	bl	476a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x188>
   48fd0:	cmn	x0, #0x78
   48fd4:	b.hi	490a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1b80>  // b.pmore
   48fd8:	add	x8, x8, x18
   48fdc:	add	x21, sp, #0x80
   48fe0:	mov	x2, x12
   48fe4:	mov	x1, x8
   48fe8:	mov	x0, x21
   48fec:	bl	476a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x188>
   48ff0:	cmn	x0, #0x78
   48ff4:	b.hi	490a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1b80>  // b.pmore
   48ff8:	add	x8, x8, x12
   48ffc:	add	x20, sp, #0xa0
   49000:	mov	x2, x11
   49004:	mov	x1, x8
   49008:	mov	x0, x20
   4900c:	bl	476a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x188>
   49010:	cmn	x0, #0x78
   49014:	b.hi	490a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1b80>  // b.pmore
   49018:	add	x18, sp, #0xc0
   4901c:	mov	x2, x10
   49020:	add	x1, x8, x11
   49024:	mov	x0, x18
   49028:	bl	476a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x188>
   4902c:	cmn	x0, #0x78
   49030:	b.hi	490a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1b80>  // b.pmore
   49034:	add	x25, x15, #0x3
   49038:	add	x13, x13, #0x2
   4903c:	add	x27, x9, x15
   49040:	mov	x0, x19
   49044:	add	x7, x9, x25, lsr #2
   49048:	add	x26, x7, x25, lsr #2
   4904c:	add	x25, x26, x25, lsr #2
   49050:	mov	x23, x26
   49054:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   49058:	mov	w8, w0
   4905c:	mov	x0, x21
   49060:	mov	x22, x25
   49064:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   49068:	orr	w8, w8, w0
   4906c:	mov	x0, x20
   49070:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   49074:	mov	w6, w0
   49078:	mov	x0, x18
   4907c:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   49080:	orr	w0, w6, w0
   49084:	orr	w0, w0, w8
   49088:	mov	x24, x7
   4908c:	sub	x10, x27, #0x7
   49090:	cbz	w0, 490bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x1b9c>
   49094:	cmp	x9, x7
   49098:	b.ls	4924c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1d2c>  // b.plast
   4909c:	mov	x0, #0xffffffffffffffec    	// #-20
   490a0:	ldp	x19, x20, [sp, #16]
   490a4:	ldp	x21, x22, [sp, #32]
   490a8:	ldp	x23, x24, [sp, #48]
   490ac:	ldp	x25, x26, [sp, #64]
   490b0:	ldr	x27, [sp, #80]
   490b4:	ldp	x29, x30, [sp], #224
   490b8:	ret
   490bc:	cmp	x22, x10
   490c0:	b.cs	49094 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1b74>  // b.hs, b.nlast
   490c4:	mov	w2, w14
   490c8:	mov	x1, x13
   490cc:	mov	x0, x19
   490d0:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   490d4:	strb	w0, [x9]
   490d8:	mov	w2, w14
   490dc:	mov	x1, x13
   490e0:	mov	x0, x21
   490e4:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   490e8:	strb	w0, [x24]
   490ec:	mov	w2, w14
   490f0:	mov	x1, x13
   490f4:	mov	x0, x20
   490f8:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   490fc:	strb	w0, [x23]
   49100:	mov	w2, w14
   49104:	mov	x1, x13
   49108:	mov	x0, x18
   4910c:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   49110:	strb	w0, [x22]
   49114:	mov	w2, w14
   49118:	mov	x1, x13
   4911c:	mov	x0, x19
   49120:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   49124:	strb	w0, [x9, #1]
   49128:	mov	w2, w14
   4912c:	mov	x1, x13
   49130:	mov	x0, x21
   49134:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   49138:	strb	w0, [x24, #1]
   4913c:	mov	w2, w14
   49140:	mov	x1, x13
   49144:	mov	x0, x20
   49148:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   4914c:	strb	w0, [x23, #1]
   49150:	mov	w2, w14
   49154:	mov	x1, x13
   49158:	mov	x0, x18
   4915c:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   49160:	strb	w0, [x22, #1]
   49164:	mov	w2, w14
   49168:	mov	x1, x13
   4916c:	mov	x0, x19
   49170:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   49174:	strb	w0, [x9, #2]
   49178:	mov	w2, w14
   4917c:	mov	x1, x13
   49180:	mov	x0, x21
   49184:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   49188:	strb	w0, [x24, #2]
   4918c:	mov	w2, w14
   49190:	mov	x1, x13
   49194:	mov	x0, x20
   49198:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   4919c:	strb	w0, [x23, #2]
   491a0:	mov	w2, w14
   491a4:	mov	x1, x13
   491a8:	mov	x0, x18
   491ac:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   491b0:	add	x9, x9, #0x4
   491b4:	strb	w0, [x22, #2]
   491b8:	add	x24, x24, #0x4
   491bc:	mov	w2, w14
   491c0:	mov	x1, x13
   491c4:	mov	x0, x19
   491c8:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   491cc:	sturb	w0, [x9, #-1]
   491d0:	add	x23, x23, #0x4
   491d4:	mov	w2, w14
   491d8:	mov	x1, x13
   491dc:	mov	x0, x21
   491e0:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   491e4:	sturb	w0, [x24, #-1]
   491e8:	add	x22, x22, #0x4
   491ec:	mov	w2, w14
   491f0:	mov	x1, x13
   491f4:	mov	x0, x20
   491f8:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   491fc:	sturb	w0, [x23, #-1]
   49200:	mov	w2, w14
   49204:	mov	x1, x13
   49208:	mov	x0, x18
   4920c:	bl	4780c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ec>
   49210:	sturb	w0, [x22, #-1]
   49214:	mov	x0, x19
   49218:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   4921c:	mov	w8, w0
   49220:	mov	x0, x21
   49224:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   49228:	orr	w8, w8, w0
   4922c:	mov	x0, x20
   49230:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   49234:	mov	w6, w0
   49238:	mov	x0, x18
   4923c:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   49240:	orr	w0, w6, w0
   49244:	orr	w0, w0, w8
   49248:	b	49090 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1b70>
   4924c:	cmp	x24, x26
   49250:	b.hi	4909c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1b7c>  // b.pmore
   49254:	cmp	x23, x25
   49258:	b.hi	4909c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1b7c>  // b.pmore
   4925c:	mov	w4, w14
   49260:	mov	x3, x13
   49264:	mov	x2, x7
   49268:	mov	x0, x9
   4926c:	mov	x1, x19
   49270:	bl	47840 <ZDICT_addEntropyTablesFromBuffer@@Base+0x320>
   49274:	mov	x2, x26
   49278:	mov	w4, w14
   4927c:	mov	x3, x13
   49280:	mov	x1, x21
   49284:	mov	x0, x24
   49288:	bl	47840 <ZDICT_addEntropyTablesFromBuffer@@Base+0x320>
   4928c:	mov	x2, x25
   49290:	mov	w4, w14
   49294:	mov	x3, x13
   49298:	mov	x1, x20
   4929c:	mov	x0, x23
   492a0:	bl	47840 <ZDICT_addEntropyTablesFromBuffer@@Base+0x320>
   492a4:	mov	x2, x27
   492a8:	mov	w4, w14
   492ac:	mov	x3, x13
   492b0:	mov	x1, x18
   492b4:	mov	x0, x22
   492b8:	bl	47840 <ZDICT_addEntropyTablesFromBuffer@@Base+0x320>
   492bc:	mov	x0, x19
   492c0:	bl	475e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8>
   492c4:	mov	w3, w0
   492c8:	mov	x0, x21
   492cc:	bl	475e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8>
   492d0:	and	w3, w3, w0
   492d4:	mov	x0, x20
   492d8:	bl	475e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8>
   492dc:	mov	w4, w0
   492e0:	mov	x0, x18
   492e4:	bl	475e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8>
   492e8:	and	w4, w4, w0
   492ec:	tst	w4, w3
   492f0:	b.eq	4909c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1b7c>  // b.none
   492f4:	mov	x0, x15
   492f8:	b	490a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1b80>
   492fc:	mov	x0, #0xffffffffffffffec    	// #-20
   49300:	ret
   49304:	mov	x12, #0x2050                	// #8272
   49308:	sub	sp, sp, x12
   4930c:	stp	x29, x30, [sp]
   49310:	mov	x29, sp
   49314:	str	x23, [sp, #48]
   49318:	add	x23, sp, #0x48
   4931c:	stp	x19, x20, [sp, #16]
   49320:	mov	x19, x3
   49324:	mov	x20, x2
   49328:	mov	x2, #0x2002                	// #8194
   4932c:	stp	x21, x22, [sp, #32]
   49330:	mov	x21, x0
   49334:	mov	x22, x1
   49338:	mov	x0, x23
   4933c:	mov	w1, #0x0                   	// #0
   49340:	bl	4700 <memset@plt>
   49344:	mov	w0, #0xc                   	// #12
   49348:	mov	x2, x19
   4934c:	mov	x1, x20
   49350:	strh	w0, [sp, #72]
   49354:	mov	x0, x23
   49358:	bl	48d40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1820>
   4935c:	cmn	x0, #0x78
   49360:	b.hi	49384 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1e64>  // b.pmore
   49364:	cmp	x19, x0
   49368:	b.ls	493a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1e80>  // b.plast
   4936c:	sub	x3, x19, x0
   49370:	add	x2, x20, x0
   49374:	mov	x4, x23
   49378:	mov	x1, x22
   4937c:	mov	x0, x21
   49380:	bl	48f60 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1a40>
   49384:	mov	x12, #0x2050                	// #8272
   49388:	ldp	x29, x30, [sp]
   4938c:	ldp	x19, x20, [sp, #16]
   49390:	ldp	x21, x22, [sp, #32]
   49394:	ldr	x23, [sp, #48]
   49398:	add	sp, sp, x12
   4939c:	ret
   493a0:	mov	x0, #0xffffffffffffffb8    	// #-72
   493a4:	b	49384 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1e64>
   493a8:	sub	sp, sp, #0x920
   493ac:	stp	x29, x30, [sp]
   493b0:	mov	x29, sp
   493b4:	stp	x23, x24, [sp, #48]
   493b8:	mov	x23, x0
   493bc:	add	x0, sp, #0x250
   493c0:	stp	x19, x20, [sp, #16]
   493c4:	ldr	w19, [x23]
   493c8:	stp	x21, x22, [sp, #32]
   493cc:	cmp	w19, #0x10
   493d0:	stp	x25, x26, [sp, #64]
   493d4:	stp	x27, x28, [sp, #80]
   493d8:	stp	xzr, xzr, [x0, #-184]
   493dc:	stp	xzr, xzr, [x0, #-168]
   493e0:	stp	xzr, xzr, [x0, #-152]
   493e4:	stp	xzr, xzr, [x0, #-136]
   493e8:	stp	xzr, xzr, [sp, #192]
   493ec:	stp	xzr, xzr, [sp, #208]
   493f0:	stp	xzr, xzr, [sp, #224]
   493f4:	stp	xzr, xzr, [sp, #240]
   493f8:	str	wzr, [sp, #256]
   493fc:	str	xzr, [sp, #472]
   49400:	b.ls	4942c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1f0c>  // b.plast
   49404:	mov	x26, #0xffffffffffffffd4    	// #-44
   49408:	mov	x0, x26
   4940c:	ldp	x29, x30, [sp]
   49410:	ldp	x19, x20, [sp, #16]
   49414:	ldp	x21, x22, [sp, #32]
   49418:	ldp	x23, x24, [sp, #48]
   4941c:	ldp	x25, x26, [sp, #64]
   49420:	ldp	x27, x28, [sp, #80]
   49424:	add	sp, sp, #0x920
   49428:	ret
   4942c:	add	x20, sp, #0xc0
   49430:	add	x22, sp, #0x1e0
   49434:	mov	x4, x1
   49438:	mov	x5, x2
   4943c:	add	x3, sp, #0xb8
   49440:	add	x2, sp, #0xbc
   49444:	mov	x1, x20
   49448:	mov	x0, x22
   4944c:	bl	48b5c <ZDICT_addEntropyTablesFromBuffer@@Base+0x163c>
   49450:	mov	x26, x0
   49454:	cmn	x0, #0x78
   49458:	b.hi	49408 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ee8>  // b.pmore
   4945c:	ldr	w2, [sp, #184]
   49460:	cmp	w2, w19
   49464:	b.hi	49404 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ee4>  // b.pmore
   49468:	mov	w0, w2
   4946c:	ldr	w1, [x20, w0, uxtw #2]
   49470:	cbz	w1, 49610 <ZDICT_addEntropyTablesFromBuffer@@Base+0x20f0>
   49474:	add	x1, sp, #0x198
   49478:	mov	x3, #0x0                   	// #0
   4947c:	mov	w21, #0x0                   	// #0
   49480:	add	x3, x3, #0x1
   49484:	cmp	w0, w3
   49488:	b.cs	49618 <ZDICT_addEntropyTablesFromBuffer@@Base+0x20f8>  // b.hs, b.nlast
   4948c:	ldr	w6, [sp, #188]
   49490:	add	x5, sp, #0x19c
   49494:	add	x7, sp, #0x2e0
   49498:	add	x8, sp, #0x2e1
   4949c:	mov	x3, #0x0                   	// #0
   494a0:	str	w21, [sp, #412]
   494a4:	cmp	w6, w3
   494a8:	b.hi	4962c <ZDICT_addEntropyTablesFromBuffer@@Base+0x210c>  // b.pmore
   494ac:	add	w22, w2, #0x1
   494b0:	mvn	w2, w2
   494b4:	sub	w1, w22, w0
   494b8:	add	w2, w2, w19
   494bc:	add	x28, sp, #0x4e0
   494c0:	mov	x3, #0x0                   	// #0
   494c4:	str	w1, [sp, #104]
   494c8:	mov	w1, #0x0                   	// #0
   494cc:	str	wzr, [sp, #412]
   494d0:	add	x3, x3, #0x1
   494d4:	cmp	w0, w3
   494d8:	b.cs	49658 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2138>  // b.hs, b.nlast
   494dc:	sub	w25, w19, w22
   494e0:	ldr	w1, [sp, #104]
   494e4:	add	w4, w0, w25
   494e8:	mov	w5, #0x44                  	// #68
   494ec:	cmp	w4, w1
   494f0:	b.cs	49670 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2150>  // b.hs, b.nlast
   494f4:	sub	w0, w22, w19
   494f8:	add	x24, sp, #0x108
   494fc:	mov	x1, x28
   49500:	mov	x2, #0x44                  	// #68
   49504:	str	w0, [sp, #108]
   49508:	mov	x0, x24
   4950c:	bl	4460 <memcpy@plt>
   49510:	add	x27, sp, #0x2e0
   49514:	mov	w5, #0x1                   	// #1
   49518:	add	x6, sp, #0x150
   4951c:	mov	w11, w5
   49520:	add	x0, sp, #0x198
   49524:	mov	w8, #0x0                   	// #0
   49528:	stp	x27, x0, [sp, #112]
   4952c:	cmp	w21, w8
   49530:	b.eq	49408 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ee8>  // b.none
   49534:	ldrb	w12, [x27, #1]
   49538:	ldr	w1, [sp, #104]
   4953c:	add	w3, w25, w12
   49540:	str	w3, [sp, #172]
   49544:	ubfiz	x0, x12, #2, #8
   49548:	ldrb	w10, [x27]
   4954c:	lsl	w7, w5, w3
   49550:	sub	w20, w22, w12
   49554:	cmp	w1, w3
   49558:	ldr	w0, [x24, x0]
   4955c:	add	w7, w7, w0
   49560:	mov	w19, w0
   49564:	b.hi	49734 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2214>  // b.pmore
   49568:	ldr	w0, [sp, #108]
   4956c:	mov	w1, #0x44                  	// #68
   49570:	mov	x2, #0x44                  	// #68
   49574:	stp	w10, w7, [sp, #152]
   49578:	add	w14, w0, w20
   4957c:	umaddl	x1, w20, w1, x28
   49580:	cmp	w14, #0x0
   49584:	stp	w14, w8, [sp, #144]
   49588:	csel	w4, w14, w5, gt
   4958c:	str	x12, [sp, #160]
   49590:	ldr	x0, [sp, #120]
   49594:	sbfiz	x4, x4, #2, #32
   49598:	str	x4, [sp, #136]
   4959c:	add	x19, x19, #0x1
   495a0:	str	w11, [sp, #168]
   495a4:	ldr	w15, [x0, x4]
   495a8:	mov	x0, x6
   495ac:	add	x19, x23, x19, lsl #2
   495b0:	sub	w13, w21, w15
   495b4:	stp	w13, w15, [sp, #128]
   495b8:	bl	4460 <memcpy@plt>
   495bc:	mov	x6, x0
   495c0:	ldp	w14, w8, [sp, #144]
   495c4:	mov	w5, #0x1                   	// #1
   495c8:	ldp	w13, w15, [sp, #128]
   495cc:	cmp	w14, #0x1
   495d0:	ldp	w10, w7, [sp, #152]
   495d4:	ldp	w11, w3, [sp, #168]
   495d8:	ldr	x4, [sp, #136]
   495dc:	ldr	x12, [sp, #160]
   495e0:	b.gt	4969c <ZDICT_addEntropyTablesFromBuffer@@Base+0x217c>
   495e4:	ldr	x0, [sp, #112]
   495e8:	sub	w1, w3, w22
   495ec:	mov	w17, #0x0                   	// #0
   495f0:	mov	w30, #0x2                   	// #2
   495f4:	add	x2, x0, w15, uxtw #1
   495f8:	cmp	w13, w17
   495fc:	b.ne	496c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x21a8>  // b.any
   49600:	add	w8, w8, #0x1
   49604:	add	x27, x27, #0x2
   49608:	str	w7, [x24, x12, lsl #2]
   4960c:	b	4952c <ZDICT_addEntropyTablesFromBuffer@@Base+0x200c>
   49610:	sub	w0, w0, #0x1
   49614:	b	4946c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1f4c>
   49618:	add	x5, x1, x3, lsl #2
   4961c:	ldr	w4, [x20, x3, lsl #2]
   49620:	str	w21, [x5, #4]
   49624:	add	w21, w21, w4
   49628:	b	49480 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1f60>
   4962c:	ldrb	w1, [x22, x3]
   49630:	ldrb	w9, [x22, x3]
   49634:	lsl	x1, x1, #2
   49638:	ldr	w4, [x5, x1]
   4963c:	add	w10, w4, #0x1
   49640:	str	w10, [x5, x1]
   49644:	ubfiz	x4, x4, #1, #32
   49648:	strb	w3, [x7, x4]
   4964c:	add	x3, x3, #0x1
   49650:	strb	w9, [x8, x4]
   49654:	b	494a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1f84>
   49658:	ldr	w5, [x20, x3, lsl #2]
   4965c:	add	w4, w2, w3
   49660:	str	w1, [x28, x3, lsl #2]
   49664:	lsl	w4, w5, w4
   49668:	add	w1, w4, w1
   4966c:	b	494d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1fb0>
   49670:	umaddl	x6, w1, w5, x28
   49674:	mov	x2, #0x0                   	// #0
   49678:	add	x2, x2, #0x1
   4967c:	cmp	w0, w2
   49680:	b.cs	4968c <ZDICT_addEntropyTablesFromBuffer@@Base+0x216c>  // b.hs, b.nlast
   49684:	add	w1, w1, #0x1
   49688:	b	494ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x1fcc>
   4968c:	ldr	w3, [x28, x2, lsl #2]
   49690:	lsr	w3, w3, w1
   49694:	str	w3, [x6, x2, lsl #2]
   49698:	b	49678 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2158>
   4969c:	ldr	w1, [x6, x4]
   496a0:	and	w2, w20, #0xff
   496a4:	mov	x0, x19
   496a8:	add	x1, x19, w1, uxtw #2
   496ac:	cmp	x1, x0
   496b0:	b.eq	495e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x20c4>  // b.none
   496b4:	add	x0, x0, #0x4
   496b8:	sturh	w10, [x0, #-4]
   496bc:	sturb	w2, [x0, #-2]
   496c0:	sturb	w11, [x0, #-1]
   496c4:	b	496ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x218c>
   496c8:	ldrb	w3, [x2, #1]
   496cc:	ldrb	w0, [x2, #1]
   496d0:	add	w4, w1, w0
   496d4:	sub	w15, w22, w0
   496d8:	ldr	w14, [x6, x3, lsl #2]
   496dc:	add	w15, w15, w20
   496e0:	ldrb	w3, [x2]
   496e4:	lsl	w4, w5, w4
   496e8:	and	w15, w15, #0xff
   496ec:	add	w4, w4, w14
   496f0:	ubfiz	w3, w3, #8, #8
   496f4:	add	w3, w10, w3
   496f8:	and	w3, w3, #0xffff
   496fc:	mov	w16, w14
   49700:	add	w14, w14, #0x1
   49704:	cmp	w4, w14
   49708:	ubfiz	x16, x16, #2, #32
   4970c:	add	x18, x19, x16
   49710:	strh	w3, [x19, x16]
   49714:	strb	w15, [x18, #2]
   49718:	strb	w30, [x18, #3]
   4971c:	b.hi	496fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x21dc>  // b.pmore
   49720:	ubfiz	x0, x0, #2, #8
   49724:	add	w17, w17, #0x1
   49728:	add	x2, x2, #0x2
   4972c:	str	w4, [x6, x0]
   49730:	b	495f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x20d8>
   49734:	and	w20, w20, #0xff
   49738:	add	x19, x23, x19, lsl #2
   4973c:	add	x19, x19, #0x4
   49740:	cmp	w0, w7
   49744:	b.cs	49600 <ZDICT_addEntropyTablesFromBuffer@@Base+0x20e0>  // b.hs, b.nlast
   49748:	add	w0, w0, #0x1
   4974c:	strh	w10, [x19]
   49750:	strb	w20, [x19, #2]
   49754:	strb	w11, [x19, #3]
   49758:	b	4973c <ZDICT_addEntropyTablesFromBuffer@@Base+0x221c>
   4975c:	sub	sp, sp, #0x220
   49760:	mov	x3, #0x280c                	// #10252
   49764:	stp	x29, x30, [sp]
   49768:	mov	x29, sp
   4976c:	stp	x19, x20, [sp, #16]
   49770:	mov	x20, x0
   49774:	mov	w0, #0x1f                  	// #31
   49778:	str	w0, [sp, #72]
   4977c:	mov	w0, #0x7f                  	// #127
   49780:	str	w0, [sp, #80]
   49784:	mov	w0, #0x3f                  	// #63
   49788:	stp	x21, x22, [sp, #32]
   4978c:	mov	x21, x1
   49790:	mov	x22, x2
   49794:	stp	x23, x24, [sp, #48]
   49798:	str	w0, [sp, #88]
   4979c:	add	x0, x20, x3
   497a0:	bl	493a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1e88>
   497a4:	cmn	x0, #0x78
   497a8:	b.ls	497c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x22a8>  // b.plast
   497ac:	mov	x0, #0xffffffffffffffe2    	// #-30
   497b0:	ldp	x29, x30, [sp]
   497b4:	ldp	x19, x20, [sp, #16]
   497b8:	ldp	x21, x22, [sp, #32]
   497bc:	ldp	x23, x24, [sp, #48]
   497c0:	add	sp, sp, #0x220
   497c4:	ret
   497c8:	sub	x23, x22, x0
   497cc:	mov	x19, x0
   497d0:	add	x21, x21, x0
   497d4:	add	x24, sp, #0x60
   497d8:	mov	x4, x23
   497dc:	mov	x3, x21
   497e0:	add	x2, sp, #0x4c
   497e4:	add	x1, sp, #0x48
   497e8:	mov	x0, x24
   497ec:	bl	47d30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x810>
   497f0:	mov	x22, x0
   497f4:	add	x19, x19, x0
   497f8:	cmn	x0, #0x78
   497fc:	b.hi	497ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x228c>  // b.pmore
   49800:	ldr	w3, [sp, #76]
   49804:	cmp	w3, #0x9
   49808:	b.hi	497ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x228c>  // b.pmore
   4980c:	mov	x2, #0x1004                	// #4100
   49810:	add	x0, x20, x2
   49814:	ldr	w2, [sp, #72]
   49818:	mov	x1, x24
   4981c:	bl	47b80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x660>
   49820:	cmn	x0, #0x78
   49824:	b.hi	497ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x228c>  // b.pmore
   49828:	add	x21, x21, x22
   4982c:	add	x24, sp, #0x120
   49830:	sub	x22, x23, x22
   49834:	mov	x3, x21
   49838:	mov	x4, x22
   4983c:	add	x2, sp, #0x54
   49840:	add	x1, sp, #0x50
   49844:	mov	x0, x24
   49848:	bl	47d30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x810>
   4984c:	mov	x23, x0
   49850:	cmn	x0, #0x78
   49854:	b.hi	497ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x228c>  // b.pmore
   49858:	ldr	w3, [sp, #84]
   4985c:	cmp	w3, #0xa
   49860:	b.hi	497ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x228c>  // b.pmore
   49864:	ldr	w2, [sp, #80]
   49868:	mov	x1, x24
   4986c:	mov	x0, #0x1808                	// #6152
   49870:	add	x0, x20, x0
   49874:	bl	47b80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x660>
   49878:	cmn	x0, #0x78
   4987c:	b.hi	497ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x228c>  // b.pmore
   49880:	add	x24, sp, #0xa0
   49884:	add	x3, x21, x23
   49888:	sub	x4, x22, x23
   4988c:	add	x2, sp, #0x5c
   49890:	add	x1, sp, #0x58
   49894:	mov	x0, x24
   49898:	bl	47d30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x810>
   4989c:	add	x23, x23, x0
   498a0:	ldr	w3, [sp, #92]
   498a4:	cmp	w3, #0xa
   498a8:	b.hi	497ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x228c>  // b.pmore
   498ac:	cmn	x0, #0x78
   498b0:	b.hi	497ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x228c>  // b.pmore
   498b4:	ldr	w2, [sp, #88]
   498b8:	mov	x1, x24
   498bc:	mov	x0, x20
   498c0:	bl	47b80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x660>
   498c4:	cmn	x0, #0x78
   498c8:	b.hi	497ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x228c>  // b.pmore
   498cc:	add	x20, x20, #0x4, lsl #12
   498d0:	mov	w0, #0x1                   	// #1
   498d4:	str	w0, [x20, #10352]
   498d8:	add	x0, x19, x23
   498dc:	b	497b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2290>
   498e0:	stp	x29, x30, [sp, #-48]!
   498e4:	mov	x8, x0
   498e8:	mov	x13, x1
   498ec:	mov	x29, sp
   498f0:	ldr	w10, [x4]
   498f4:	add	x14, sp, #0x10
   498f8:	mov	x9, x4
   498fc:	mov	x1, x2
   49900:	mov	x0, x14
   49904:	mov	x2, x3
   49908:	bl	476a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x188>
   4990c:	cmn	x0, #0x78
   49910:	b.hi	49940 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2420>  // b.pmore
   49914:	mov	w4, w10
   49918:	add	x3, x9, #0x4
   4991c:	add	x2, x8, x13
   49920:	mov	x1, x14
   49924:	mov	x0, x8
   49928:	bl	47964 <ZDICT_addEntropyTablesFromBuffer@@Base+0x444>
   4992c:	mov	x0, x14
   49930:	bl	475e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8>
   49934:	cmp	w0, #0x0
   49938:	mov	x0, #0xffffffffffffffec    	// #-20
   4993c:	csel	x0, x13, x0, ne  // ne = any
   49940:	ldp	x29, x30, [sp], #48
   49944:	ret
   49948:	mov	x12, #0x4050                	// #16464
   4994c:	sub	sp, sp, x12
   49950:	stp	x29, x30, [sp]
   49954:	mov	x29, sp
   49958:	str	x23, [sp, #48]
   4995c:	add	x23, sp, #0x48
   49960:	stp	x19, x20, [sp, #16]
   49964:	mov	x19, x3
   49968:	mov	x20, x2
   4996c:	mov	x2, #0x4004                	// #16388
   49970:	stp	x21, x22, [sp, #32]
   49974:	mov	x21, x0
   49978:	mov	x22, x1
   4997c:	mov	x0, x23
   49980:	mov	w1, #0x0                   	// #0
   49984:	bl	4700 <memset@plt>
   49988:	mov	w0, #0xc                   	// #12
   4998c:	mov	x2, x19
   49990:	mov	x1, x20
   49994:	str	w0, [sp, #72]
   49998:	mov	x0, x23
   4999c:	bl	493a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1e88>
   499a0:	cmn	x0, #0x78
   499a4:	b.hi	499c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24a8>  // b.pmore
   499a8:	cmp	x19, x0
   499ac:	b.ls	499e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24c4>  // b.plast
   499b0:	sub	x3, x19, x0
   499b4:	add	x2, x20, x0
   499b8:	mov	x4, x23
   499bc:	mov	x1, x22
   499c0:	mov	x0, x21
   499c4:	bl	498e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23c0>
   499c8:	mov	x12, #0x4050                	// #16464
   499cc:	ldp	x29, x30, [sp]
   499d0:	ldp	x19, x20, [sp, #16]
   499d4:	ldp	x21, x22, [sp, #32]
   499d8:	ldr	x23, [sp, #48]
   499dc:	add	sp, sp, x12
   499e0:	ret
   499e4:	mov	x0, #0xffffffffffffffb8    	// #-72
   499e8:	b	499c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24a8>
   499ec:	cmp	x3, #0x9
   499f0:	b.ls	49db8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2898>  // b.plast
   499f4:	ldrh	w18, [x2]
   499f8:	mov	x9, x0
   499fc:	ldrh	w12, [x2, #2]
   49a00:	sub	x10, x3, #0x6
   49a04:	ldrh	w11, [x2, #4]
   49a08:	add	x0, x18, x12
   49a0c:	sub	x10, x10, x0
   49a10:	sub	x10, x10, x11
   49a14:	cmp	x3, x10
   49a18:	b.cc	49db8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2898>  // b.lo, b.ul, b.last
   49a1c:	stp	x29, x30, [sp, #-224]!
   49a20:	add	x8, x2, #0x6
   49a24:	mov	x15, x1
   49a28:	mov	x29, sp
   49a2c:	ldr	w14, [x4]
   49a30:	mov	x13, x4
   49a34:	stp	x19, x20, [sp, #16]
   49a38:	add	x19, sp, #0x60
   49a3c:	mov	x2, x18
   49a40:	mov	x1, x8
   49a44:	mov	x0, x19
   49a48:	stp	x21, x22, [sp, #32]
   49a4c:	stp	x23, x24, [sp, #48]
   49a50:	stp	x25, x26, [sp, #64]
   49a54:	str	x27, [sp, #80]
   49a58:	bl	476a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x188>
   49a5c:	cmn	x0, #0x78
   49a60:	b.hi	49b2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x260c>  // b.pmore
   49a64:	add	x8, x8, x18
   49a68:	add	x21, sp, #0x80
   49a6c:	mov	x2, x12
   49a70:	mov	x1, x8
   49a74:	mov	x0, x21
   49a78:	bl	476a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x188>
   49a7c:	cmn	x0, #0x78
   49a80:	b.hi	49b2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x260c>  // b.pmore
   49a84:	add	x8, x8, x12
   49a88:	add	x20, sp, #0xa0
   49a8c:	mov	x2, x11
   49a90:	mov	x1, x8
   49a94:	mov	x0, x20
   49a98:	bl	476a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x188>
   49a9c:	cmn	x0, #0x78
   49aa0:	b.hi	49b2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x260c>  // b.pmore
   49aa4:	add	x18, sp, #0xc0
   49aa8:	mov	x2, x10
   49aac:	add	x1, x8, x11
   49ab0:	mov	x0, x18
   49ab4:	bl	476a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x188>
   49ab8:	cmn	x0, #0x78
   49abc:	b.hi	49b2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x260c>  // b.pmore
   49ac0:	add	x24, x15, #0x3
   49ac4:	add	x13, x13, #0x4
   49ac8:	add	x27, x9, x15
   49acc:	mov	x0, x19
   49ad0:	add	x7, x9, x24, lsr #2
   49ad4:	add	x26, x7, x24, lsr #2
   49ad8:	add	x24, x26, x24, lsr #2
   49adc:	mov	x23, x26
   49ae0:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   49ae4:	mov	w8, w0
   49ae8:	mov	x0, x21
   49aec:	mov	x22, x24
   49af0:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   49af4:	orr	w8, w8, w0
   49af8:	mov	x0, x20
   49afc:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   49b00:	mov	w6, w0
   49b04:	mov	x0, x18
   49b08:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   49b0c:	orr	w0, w6, w0
   49b10:	orr	w0, w0, w8
   49b14:	mov	x25, x7
   49b18:	sub	x10, x27, #0x7
   49b1c:	cbz	w0, 49b48 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2628>
   49b20:	cmp	x9, x7
   49b24:	b.ls	49d08 <ZDICT_addEntropyTablesFromBuffer@@Base+0x27e8>  // b.plast
   49b28:	mov	x0, #0xffffffffffffffec    	// #-20
   49b2c:	ldp	x19, x20, [sp, #16]
   49b30:	ldp	x21, x22, [sp, #32]
   49b34:	ldp	x23, x24, [sp, #48]
   49b38:	ldp	x25, x26, [sp, #64]
   49b3c:	ldr	x27, [sp, #80]
   49b40:	ldp	x29, x30, [sp], #224
   49b44:	ret
   49b48:	cmp	x22, x10
   49b4c:	b.cs	49b20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2600>  // b.hs, b.nlast
   49b50:	mov	w3, w14
   49b54:	mov	x2, x13
   49b58:	mov	x1, x19
   49b5c:	mov	x0, x9
   49b60:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   49b64:	add	x9, x9, w0, uxtw
   49b68:	mov	w3, w14
   49b6c:	mov	x2, x13
   49b70:	mov	x1, x21
   49b74:	mov	x0, x25
   49b78:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   49b7c:	mov	w3, w14
   49b80:	mov	x2, x13
   49b84:	add	x25, x25, w0, uxtw
   49b88:	mov	x1, x20
   49b8c:	mov	x0, x23
   49b90:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   49b94:	mov	w3, w14
   49b98:	mov	x2, x13
   49b9c:	mov	x1, x18
   49ba0:	add	x23, x23, w0, uxtw
   49ba4:	mov	x0, x22
   49ba8:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   49bac:	mov	w3, w14
   49bb0:	mov	x2, x13
   49bb4:	add	x22, x22, w0, uxtw
   49bb8:	mov	x1, x19
   49bbc:	mov	x0, x9
   49bc0:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   49bc4:	add	x9, x9, w0, uxtw
   49bc8:	mov	w3, w14
   49bcc:	mov	x2, x13
   49bd0:	mov	x1, x21
   49bd4:	mov	x0, x25
   49bd8:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   49bdc:	mov	w3, w14
   49be0:	mov	x2, x13
   49be4:	add	x25, x25, w0, uxtw
   49be8:	mov	x1, x20
   49bec:	mov	x0, x23
   49bf0:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   49bf4:	mov	w3, w14
   49bf8:	mov	x2, x13
   49bfc:	mov	x1, x18
   49c00:	add	x23, x23, w0, uxtw
   49c04:	mov	x0, x22
   49c08:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   49c0c:	mov	w3, w14
   49c10:	mov	x2, x13
   49c14:	add	x22, x22, w0, uxtw
   49c18:	mov	x1, x19
   49c1c:	mov	x0, x9
   49c20:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   49c24:	add	x9, x9, w0, uxtw
   49c28:	mov	w3, w14
   49c2c:	mov	x2, x13
   49c30:	mov	x1, x21
   49c34:	mov	x0, x25
   49c38:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   49c3c:	mov	w3, w14
   49c40:	mov	x2, x13
   49c44:	add	x25, x25, w0, uxtw
   49c48:	mov	x1, x20
   49c4c:	mov	x0, x23
   49c50:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   49c54:	mov	w3, w14
   49c58:	mov	x2, x13
   49c5c:	mov	x1, x18
   49c60:	add	x23, x23, w0, uxtw
   49c64:	mov	x0, x22
   49c68:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   49c6c:	mov	w3, w14
   49c70:	mov	x2, x13
   49c74:	add	x22, x22, w0, uxtw
   49c78:	mov	x1, x19
   49c7c:	mov	x0, x9
   49c80:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   49c84:	add	x9, x9, w0, uxtw
   49c88:	mov	w3, w14
   49c8c:	mov	x2, x13
   49c90:	mov	x1, x21
   49c94:	mov	x0, x25
   49c98:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   49c9c:	mov	w3, w14
   49ca0:	mov	x2, x13
   49ca4:	mov	x1, x20
   49ca8:	add	x25, x25, w0, uxtw
   49cac:	mov	x0, x23
   49cb0:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   49cb4:	mov	w3, w14
   49cb8:	mov	x2, x13
   49cbc:	mov	x1, x18
   49cc0:	add	x23, x23, w0, uxtw
   49cc4:	mov	x0, x22
   49cc8:	bl	47928 <ZDICT_addEntropyTablesFromBuffer@@Base+0x408>
   49ccc:	add	x22, x22, w0, uxtw
   49cd0:	mov	x0, x19
   49cd4:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   49cd8:	mov	w8, w0
   49cdc:	mov	x0, x21
   49ce0:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   49ce4:	orr	w8, w8, w0
   49ce8:	mov	x0, x20
   49cec:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   49cf0:	mov	w6, w0
   49cf4:	mov	x0, x18
   49cf8:	bl	47544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x24>
   49cfc:	orr	w0, w6, w0
   49d00:	orr	w0, w0, w8
   49d04:	b	49b1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x25fc>
   49d08:	cmp	x25, x26
   49d0c:	b.hi	49b28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2608>  // b.pmore
   49d10:	cmp	x23, x24
   49d14:	b.hi	49b28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2608>  // b.pmore
   49d18:	mov	w4, w14
   49d1c:	mov	x3, x13
   49d20:	mov	x2, x7
   49d24:	mov	x0, x9
   49d28:	mov	x1, x19
   49d2c:	bl	47964 <ZDICT_addEntropyTablesFromBuffer@@Base+0x444>
   49d30:	mov	x2, x26
   49d34:	mov	w4, w14
   49d38:	mov	x3, x13
   49d3c:	mov	x1, x21
   49d40:	mov	x0, x25
   49d44:	bl	47964 <ZDICT_addEntropyTablesFromBuffer@@Base+0x444>
   49d48:	mov	x2, x24
   49d4c:	mov	w4, w14
   49d50:	mov	x3, x13
   49d54:	mov	x1, x20
   49d58:	mov	x0, x23
   49d5c:	bl	47964 <ZDICT_addEntropyTablesFromBuffer@@Base+0x444>
   49d60:	mov	x2, x27
   49d64:	mov	w4, w14
   49d68:	mov	x3, x13
   49d6c:	mov	x1, x18
   49d70:	mov	x0, x22
   49d74:	bl	47964 <ZDICT_addEntropyTablesFromBuffer@@Base+0x444>
   49d78:	mov	x0, x19
   49d7c:	bl	475e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8>
   49d80:	mov	w3, w0
   49d84:	mov	x0, x21
   49d88:	bl	475e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8>
   49d8c:	and	w3, w3, w0
   49d90:	mov	x0, x20
   49d94:	bl	475e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8>
   49d98:	mov	w4, w0
   49d9c:	mov	x0, x18
   49da0:	bl	475e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8>
   49da4:	and	w4, w4, w0
   49da8:	tst	w4, w3
   49dac:	b.eq	49b28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2608>  // b.none
   49db0:	mov	x0, x15
   49db4:	b	49b2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x260c>
   49db8:	mov	x0, #0xffffffffffffffec    	// #-20
   49dbc:	ret
   49dc0:	mov	x12, #0x4050                	// #16464
   49dc4:	sub	sp, sp, x12
   49dc8:	stp	x29, x30, [sp]
   49dcc:	mov	x29, sp
   49dd0:	str	x23, [sp, #48]
   49dd4:	add	x23, sp, #0x48
   49dd8:	stp	x19, x20, [sp, #16]
   49ddc:	mov	x19, x3
   49de0:	mov	x20, x2
   49de4:	mov	x2, #0x4004                	// #16388
   49de8:	stp	x21, x22, [sp, #32]
   49dec:	mov	x21, x0
   49df0:	mov	x22, x1
   49df4:	mov	x0, x23
   49df8:	mov	w1, #0x0                   	// #0
   49dfc:	bl	4700 <memset@plt>
   49e00:	mov	w0, #0xc                   	// #12
   49e04:	mov	x2, x19
   49e08:	mov	x1, x20
   49e0c:	str	w0, [sp, #72]
   49e10:	mov	x0, x23
   49e14:	bl	493a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1e88>
   49e18:	cmn	x0, #0x78
   49e1c:	b.hi	49e40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2920>  // b.pmore
   49e20:	cmp	x19, x0
   49e24:	b.ls	49e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0x293c>  // b.plast
   49e28:	sub	x3, x19, x0
   49e2c:	add	x2, x20, x0
   49e30:	mov	x4, x23
   49e34:	mov	x1, x22
   49e38:	mov	x0, x21
   49e3c:	bl	499ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x24cc>
   49e40:	mov	x12, #0x4050                	// #16464
   49e44:	ldp	x29, x30, [sp]
   49e48:	ldp	x19, x20, [sp, #16]
   49e4c:	ldp	x21, x22, [sp, #32]
   49e50:	ldr	x23, [sp, #48]
   49e54:	add	sp, sp, x12
   49e58:	ret
   49e5c:	mov	x0, #0xffffffffffffffb8    	// #-72
   49e60:	b	49e40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2920>
   49e64:	stp	x29, x30, [sp, #-48]!
   49e68:	mov	x29, sp
   49e6c:	str	x19, [sp, #16]
   49e70:	cbz	x1, 49f28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a08>
   49e74:	mov	x19, x1
   49e78:	cmp	x1, x3
   49e7c:	b.ls	49f30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a10>  // b.plast
   49e80:	mov	x5, x2
   49e84:	cmp	x3, #0x1
   49e88:	b.ne	49ea8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2988>  // b.any
   49e8c:	mov	x2, x1
   49e90:	ldrb	w1, [x5]
   49e94:	bl	4700 <memset@plt>
   49e98:	mov	x0, x19
   49e9c:	ldr	x19, [sp, #16]
   49ea0:	ldp	x29, x30, [sp], #48
   49ea4:	ret
   49ea8:	lsl	x1, x3, #4
   49eac:	adrp	x4, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   49eb0:	add	x4, x4, #0xba4
   49eb4:	mov	x6, x0
   49eb8:	add	x4, x4, #0xf8
   49ebc:	mov	x0, #0x18                  	// #24
   49ec0:	udiv	x1, x1, x19
   49ec4:	ubfx	x8, x19, #8, #32
   49ec8:	mov	x2, #0x0                   	// #0
   49ecc:	and	x1, x1, #0xffffffff
   49ed0:	madd	x1, x1, x0, x4
   49ed4:	add	x4, sp, #0x20
   49ed8:	ldr	w0, [x1, #4]
   49edc:	ldr	w7, [x1], #8
   49ee0:	madd	w0, w8, w0, w7
   49ee4:	str	w0, [x4, x2, lsl #2]
   49ee8:	add	x2, x2, #0x1
   49eec:	cmp	x2, #0x3
   49ef0:	b.ne	49ed8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x29b8>  // b.any
   49ef4:	ldp	w0, w1, [sp, #32]
   49ef8:	mov	x2, x5
   49efc:	add	w1, w1, w1, lsr #4
   49f00:	cmp	w1, w0
   49f04:	adrp	x0, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   49f08:	cset	x1, cc  // cc = lo, ul, last
   49f0c:	add	x0, x0, #0xc90
   49f10:	ldr	x4, [x0, x1, lsl #3]
   49f14:	mov	x1, x19
   49f18:	mov	x0, x6
   49f1c:	blr	x4
   49f20:	mov	x19, x0
   49f24:	b	49e98 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2978>
   49f28:	mov	x19, #0xffffffffffffffba    	// #-70
   49f2c:	b	49e98 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2978>
   49f30:	mov	x19, #0xffffffffffffffec    	// #-20
   49f34:	b	49e98 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2978>
   49f38:	stp	x29, x30, [sp, #-48]!
   49f3c:	cmp	x2, #0x2
   49f40:	mov	x29, sp
   49f44:	stp	x19, x20, [sp, #16]
   49f48:	stp	x21, x22, [sp, #32]
   49f4c:	b.hi	49f68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a48>  // b.pmore
   49f50:	mov	x20, #0xffffffffffffffec    	// #-20
   49f54:	mov	x0, x20
   49f58:	ldp	x19, x20, [sp, #16]
   49f5c:	ldp	x21, x22, [sp, #32]
   49f60:	ldp	x29, x30, [sp], #48
   49f64:	ret
   49f68:	ldrb	w4, [x1]
   49f6c:	mov	x21, x0
   49f70:	mov	x6, x1
   49f74:	lsr	w0, w4, #6
   49f78:	ubfx	x5, x4, #4, #2
   49f7c:	cmp	w0, #0x2
   49f80:	b.eq	4a0fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x2bdc>  // b.none
   49f84:	cmp	w0, #0x3
   49f88:	b.eq	4a194 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2c74>  // b.none
   49f8c:	cmp	w0, #0x1
   49f90:	b.eq	4a084 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2b64>  // b.none
   49f94:	cmp	x2, #0x4
   49f98:	b.ls	49f50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a30>  // b.plast
   49f9c:	ldrb	w1, [x1, #1]
   49fa0:	cmp	w5, #0x2
   49fa4:	ldrb	w0, [x6, #2]
   49fa8:	b.eq	4a018 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2af8>  // b.none
   49fac:	cmp	w5, #0x3
   49fb0:	b.eq	4a044 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2b24>  // b.none
   49fb4:	ubfiz	w19, w4, #6, #4
   49fb8:	and	w7, w4, #0x10
   49fbc:	add	w19, w19, w1, lsr #2
   49fc0:	ubfiz	w1, w1, #8, #2
   49fc4:	add	w3, w1, w0
   49fc8:	and	x7, x7, #0xff
   49fcc:	sxtw	x19, w19
   49fd0:	mov	x5, #0x3                   	// #3
   49fd4:	sxtw	x3, w3
   49fd8:	add	x20, x5, x3
   49fdc:	cmp	x20, x2
   49fe0:	b.hi	49f50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a30>  // b.pmore
   49fe4:	add	x2, x6, x5
   49fe8:	mov	x5, #0x6888                	// #26760
   49fec:	add	x22, x21, x5
   49ff0:	mov	x1, x19
   49ff4:	mov	x0, x22
   49ff8:	cbz	x7, 4a07c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2b5c>
   49ffc:	bl	48ebc <ZDICT_addEntropyTablesFromBuffer@@Base+0x199c>
   4a000:	cmn	x0, #0x78
   4a004:	b.hi	49f50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a30>  // b.pmore
   4a008:	str	x22, [x21, #26744]
   4a00c:	str	x19, [x21, #26752]
   4a010:	str	xzr, [x22, x19]
   4a014:	b	49f54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a34>
   4a018:	ubfiz	w4, w4, #10, #4
   4a01c:	ubfiz	w3, w0, #8, #6
   4a020:	add	w4, w4, w1, lsl #2
   4a024:	mov	x5, #0x4                   	// #4
   4a028:	add	w19, w4, w0, lsr #6
   4a02c:	ldrb	w0, [x6, #3]
   4a030:	add	w3, w3, w0
   4a034:	sxtw	x19, w19
   4a038:	sxtw	x3, w3
   4a03c:	mov	x7, #0x0                   	// #0
   4a040:	b	49fd8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ab8>
   4a044:	ubfiz	w4, w4, #14, #4
   4a048:	ldrb	w3, [x6, #3]
   4a04c:	add	w4, w4, w1, lsl #6
   4a050:	ldrb	w1, [x6, #4]
   4a054:	add	w4, w4, w0, lsr #2
   4a058:	cmp	w4, #0x20, lsl #12
   4a05c:	sxtw	x19, w4
   4a060:	b.gt	49f50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a30>
   4a064:	ubfiz	w0, w0, #16, #2
   4a068:	mov	x5, #0x5                   	// #5
   4a06c:	add	w3, w0, w3, lsl #8
   4a070:	add	w3, w3, w1
   4a074:	sxtw	x3, w3
   4a078:	b	4a03c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2b1c>
   4a07c:	bl	49e64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2944>
   4a080:	b	4a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ae0>
   4a084:	cmp	w5, #0x1
   4a088:	b.ne	49f50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a30>  // b.any
   4a08c:	add	x0, x21, #0x4, lsl #12
   4a090:	ldr	w0, [x0, #10352]
   4a094:	cbz	w0, 4a21c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2cfc>
   4a098:	ldrb	w15, [x1, #1]
   4a09c:	ldrb	w0, [x1, #2]
   4a0a0:	ubfiz	w3, w15, #8, #2
   4a0a4:	add	w3, w3, w0
   4a0a8:	sxtw	x3, w3
   4a0ac:	add	x20, x3, #0x3
   4a0b0:	cmp	x20, x2
   4a0b4:	b.hi	49f50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a30>  // b.pmore
   4a0b8:	ubfiz	w4, w4, #6, #4
   4a0bc:	mov	x2, #0x6888                	// #26760
   4a0c0:	add	w4, w4, w15, lsr #2
   4a0c4:	add	x18, x21, x2
   4a0c8:	mov	x0, x18
   4a0cc:	add	x2, x1, #0x3
   4a0d0:	sxtw	x15, w4
   4a0d4:	mov	x4, #0x280c                	// #10252
   4a0d8:	mov	x1, x15
   4a0dc:	add	x4, x21, x4
   4a0e0:	bl	498e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23c0>
   4a0e4:	cmn	x0, #0x78
   4a0e8:	b.hi	49f50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a30>  // b.pmore
   4a0ec:	str	x18, [x21, #26744]
   4a0f0:	str	x15, [x21, #26752]
   4a0f4:	str	xzr, [x18, x15]
   4a0f8:	b	49f54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a34>
   4a0fc:	cmp	w5, #0x2
   4a100:	b.eq	4a158 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2c38>  // b.none
   4a104:	cmp	w5, #0x3
   4a108:	b.eq	4a16c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2c4c>  // b.none
   4a10c:	and	x19, x4, #0x1f
   4a110:	mov	w5, #0x1                   	// #1
   4a114:	mov	w5, w5
   4a118:	add	x20, x5, x19
   4a11c:	add	x0, x20, #0x8
   4a120:	cmp	x0, x2
   4a124:	b.ls	4a184 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2c64>  // b.plast
   4a128:	cmp	x20, x2
   4a12c:	b.hi	49f50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a30>  // b.pmore
   4a130:	mov	x1, #0x6888                	// #26760
   4a134:	add	x3, x21, x1
   4a138:	mov	x2, x19
   4a13c:	add	x1, x6, x5
   4a140:	mov	x0, x3
   4a144:	bl	4460 <memcpy@plt>
   4a148:	str	x0, [x21, #26744]
   4a14c:	str	x19, [x21, #26752]
   4a150:	str	xzr, [x0, x19]
   4a154:	b	49f54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a34>
   4a158:	ldrb	w0, [x1, #1]
   4a15c:	ubfiz	w4, w4, #8, #4
   4a160:	add	w4, w4, w0
   4a164:	sxtw	x19, w4
   4a168:	b	4a114 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2bf4>
   4a16c:	ldrb	w19, [x1, #1]
   4a170:	ubfiz	w4, w4, #16, #4
   4a174:	add	w4, w4, w19, lsl #8
   4a178:	ldrb	w19, [x1, #2]
   4a17c:	add	w4, w4, w19
   4a180:	b	4a164 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2c44>
   4a184:	add	x5, x6, x5
   4a188:	str	x5, [x21, #26744]
   4a18c:	str	x19, [x21, #26752]
   4a190:	b	49f54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a34>
   4a194:	cmp	w5, #0x2
   4a198:	b.eq	4a1d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2cb8>  // b.none
   4a19c:	cmp	w5, #0x3
   4a1a0:	b.eq	4a1f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2cd0>  // b.none
   4a1a4:	and	x19, x4, #0x1f
   4a1a8:	mov	w20, #0x1                   	// #1
   4a1ac:	mov	x0, #0x6888                	// #26760
   4a1b0:	add	x3, x21, x0
   4a1b4:	mov	w0, w20
   4a1b8:	add	x2, x19, #0x8
   4a1bc:	add	w20, w20, #0x1
   4a1c0:	ldrb	w1, [x6, x0]
   4a1c4:	mov	x0, x3
   4a1c8:	bl	4700 <memset@plt>
   4a1cc:	str	x0, [x21, #26744]
   4a1d0:	str	x19, [x21, #26752]
   4a1d4:	b	49f54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a34>
   4a1d8:	ldrb	w19, [x1, #1]
   4a1dc:	ubfiz	w4, w4, #8, #4
   4a1e0:	add	w4, w4, w19
   4a1e4:	sxtw	x19, w4
   4a1e8:	mov	w20, w5
   4a1ec:	b	4a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2c8c>
   4a1f0:	ldrb	w0, [x1, #1]
   4a1f4:	ubfiz	w4, w4, #16, #4
   4a1f8:	cmp	x2, #0x3
   4a1fc:	add	w4, w4, w0, lsl #8
   4a200:	ldrb	w0, [x1, #2]
   4a204:	add	w4, w4, w0
   4a208:	sxtw	x19, w4
   4a20c:	b.eq	49f50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a30>  // b.none
   4a210:	cmp	w4, #0x20, lsl #12
   4a214:	b.gt	49f50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a30>
   4a218:	b	4a1e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2cc8>
   4a21c:	mov	x20, #0xffffffffffffffe2    	// #-30
   4a220:	b	49f54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a34>
   4a224:	stp	x29, x30, [sp, #-64]!
   4a228:	mov	x29, sp
   4a22c:	stp	x19, x20, [sp, #16]
   4a230:	stp	x21, x22, [sp, #32]
   4a234:	mov	x22, x1
   4a238:	mov	x1, #0x1ffff               	// #131071
   4a23c:	str	x23, [sp, #48]
   4a240:	cmp	x4, x1
   4a244:	b.hi	4a294 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2d74>  // b.pmore
   4a248:	mov	x21, x0
   4a24c:	mov	x23, x2
   4a250:	mov	x20, x3
   4a254:	mov	x19, x4
   4a258:	mov	x2, x4
   4a25c:	mov	x1, x3
   4a260:	bl	49f38 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a18>
   4a264:	cmn	x0, #0x78
   4a268:	b.hi	4a298 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2d78>  // b.pmore
   4a26c:	sub	x4, x19, x0
   4a270:	add	x3, x20, x0
   4a274:	mov	x2, x23
   4a278:	mov	x1, x22
   4a27c:	mov	x0, x21
   4a280:	ldp	x19, x20, [sp, #16]
   4a284:	ldp	x21, x22, [sp, #32]
   4a288:	ldr	x23, [sp, #48]
   4a28c:	ldp	x29, x30, [sp], #64
   4a290:	b	47fec <ZDICT_addEntropyTablesFromBuffer@@Base+0xacc>
   4a294:	mov	x0, #0xffffffffffffffb8    	// #-72
   4a298:	ldp	x19, x20, [sp, #16]
   4a29c:	ldp	x21, x22, [sp, #32]
   4a2a0:	ldr	x23, [sp, #48]
   4a2a4:	ldp	x29, x30, [sp], #64
   4a2a8:	ret
   4a2ac:	cmn	x0, #0x78
   4a2b0:	cset	w0, hi  // hi = pmore
   4a2b4:	ret
   4a2b8:	b	47690 <ZDICT_addEntropyTablesFromBuffer@@Base+0x170>
   4a2bc:	mov	x0, #0x6898                	// #26776
   4a2c0:	movk	x0, #0x2, lsl #16
   4a2c4:	ret
   4a2c8:	mov	x1, #0x5                   	// #5
   4a2cc:	mov	x4, #0x6800                	// #26624
   4a2d0:	str	xzr, [x0, #26640]
   4a2d4:	str	xzr, [x0, #26648]
   4a2d8:	str	xzr, [x0, #26656]
   4a2dc:	str	xzr, [x0, #26664]
   4a2e0:	str	x1, [x0, #26672]
   4a2e4:	mov	w1, #0xc                   	// #12
   4a2e8:	str	w1, [x0, #10252]
   4a2ec:	add	x0, x0, x4
   4a2f0:	stur	xzr, [x0, #108]
   4a2f4:	mov	x0, #0x0                   	// #0
   4a2f8:	ret
   4a2fc:	stp	x29, x30, [sp, #-16]!
   4a300:	mov	x0, #0x6898                	// #26776
   4a304:	movk	x0, #0x2, lsl #16
   4a308:	mov	x29, sp
   4a30c:	bl	46a0 <malloc@plt>
   4a310:	mov	x2, x0
   4a314:	cbz	x0, 4a31c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2dfc>
   4a318:	bl	4a2c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2da8>
   4a31c:	mov	x0, x2
   4a320:	ldp	x29, x30, [sp], #16
   4a324:	ret
   4a328:	stp	x29, x30, [sp, #-16]!
   4a32c:	mov	x29, sp
   4a330:	bl	48e0 <free@plt>
   4a334:	mov	x0, #0x0                   	// #0
   4a338:	ldp	x29, x30, [sp], #16
   4a33c:	ret
   4a340:	mov	x2, #0x688b                	// #26763
   4a344:	b	4460 <memcpy@plt>
   4a348:	cmp	x2, #0x4
   4a34c:	b.ls	4a394 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2e74>  // b.plast
   4a350:	ldr	w3, [x1]
   4a354:	mov	w2, #0xb525                	// #46373
   4a358:	movk	w2, #0xfd2f, lsl #16
   4a35c:	cmp	w3, w2
   4a360:	b.ne	4a39c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2e7c>  // b.any
   4a364:	stp	xzr, xzr, [x0]
   4a368:	stp	xzr, xzr, [x0, #16]
   4a36c:	str	xzr, [x0, #32]
   4a370:	ldrb	w2, [x1, #4]
   4a374:	and	w2, w2, #0xf
   4a378:	add	w2, w2, #0xb
   4a37c:	str	w2, [x0, #8]
   4a380:	ldrb	w0, [x1, #4]
   4a384:	cmp	wzr, w0, lsr #4
   4a388:	mov	x0, #0xfffffffffffffff2    	// #-14
   4a38c:	csel	x0, xzr, x0, eq  // eq = none
   4a390:	ret
   4a394:	mov	x0, #0x5                   	// #5
   4a398:	b	4a390 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2e70>
   4a39c:	mov	x0, #0xfffffffffffffff6    	// #-10
   4a3a0:	b	4a390 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2e70>
   4a3a4:	stp	x29, x30, [sp, #-112]!
   4a3a8:	cmp	x4, #0x7
   4a3ac:	mov	x29, sp
   4a3b0:	stp	x19, x20, [sp, #16]
   4a3b4:	stp	x21, x22, [sp, #32]
   4a3b8:	stp	x23, x24, [sp, #48]
   4a3bc:	stp	x25, x26, [sp, #64]
   4a3c0:	str	x27, [sp, #80]
   4a3c4:	str	xzr, [sp, #104]
   4a3c8:	b.hi	4a3ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ecc>  // b.pmore
   4a3cc:	mov	x0, #0xffffffffffffffb8    	// #-72
   4a3d0:	ldp	x19, x20, [sp, #16]
   4a3d4:	ldp	x21, x22, [sp, #32]
   4a3d8:	ldp	x23, x24, [sp, #48]
   4a3dc:	ldp	x25, x26, [sp, #64]
   4a3e0:	ldr	x27, [sp, #80]
   4a3e4:	ldp	x29, x30, [sp], #112
   4a3e8:	ret
   4a3ec:	mov	x22, x2
   4a3f0:	ldr	w2, [x3]
   4a3f4:	mov	x24, x0
   4a3f8:	mov	w0, #0xb525                	// #46373
   4a3fc:	mov	x23, x1
   4a400:	movk	w0, #0xfd2f, lsl #16
   4a404:	mov	x1, x3
   4a408:	cmp	w2, w0
   4a40c:	b.ne	4a4fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fdc>  // b.any
   4a410:	mov	x2, #0x5                   	// #5
   4a414:	str	x2, [x24, #26680]
   4a418:	mov	x0, #0x6840                	// #26688
   4a41c:	add	x0, x24, x0
   4a420:	bl	4a348 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2e28>
   4a424:	cmn	x0, #0x78
   4a428:	b.hi	4a3d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2eb0>  // b.pmore
   4a42c:	add	x22, x23, x22
   4a430:	add	x26, x1, #0x5
   4a434:	sub	x27, x4, #0x5
   4a438:	mov	x20, x23
   4a43c:	add	x25, sp, #0x68
   4a440:	add	x21, x1, x4
   4a444:	mov	x2, x25
   4a448:	sub	x1, x21, x26
   4a44c:	mov	x0, x26
   4a450:	bl	4760c <ZDICT_addEntropyTablesFromBuffer@@Base+0xec>
   4a454:	mov	x19, x0
   4a458:	cmn	x0, #0x78
   4a45c:	b.hi	4a3d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2eb0>  // b.pmore
   4a460:	sub	x27, x27, #0x3
   4a464:	add	x26, x26, #0x3
   4a468:	cmp	x0, x27
   4a46c:	b.hi	4a3cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x2eac>  // b.pmore
   4a470:	ldr	w0, [sp, #104]
   4a474:	cmp	w0, #0x1
   4a478:	b.eq	4a4ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2f8c>  // b.none
   4a47c:	cmp	w0, #0x3
   4a480:	b.eq	4a4d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fb8>  // b.none
   4a484:	cbnz	w0, 4a504 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fe4>
   4a488:	mov	x4, x19
   4a48c:	mov	x3, x26
   4a490:	sub	x2, x22, x20
   4a494:	mov	x1, x20
   4a498:	mov	x0, x24
   4a49c:	bl	4a224 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2d04>
   4a4a0:	cbnz	x19, 4a4e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   4a4a4:	sub	x0, x20, x23
   4a4a8:	b	4a3d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2eb0>
   4a4ac:	sub	x0, x22, x20
   4a4b0:	cbz	x20, 4a50c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fec>
   4a4b4:	cmp	x0, x19
   4a4b8:	b.cc	4a50c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fec>  // b.lo, b.ul, b.last
   4a4bc:	mov	x2, x19
   4a4c0:	mov	x1, x26
   4a4c4:	mov	x0, x20
   4a4c8:	bl	4460 <memcpy@plt>
   4a4cc:	mov	x0, x19
   4a4d0:	cbnz	x19, 4a4ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fcc>
   4a4d4:	b	4a4a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2f84>
   4a4d8:	cbnz	x27, 4a3cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x2eac>
   4a4dc:	mov	x0, #0x0                   	// #0
   4a4e0:	b	4a4d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fb0>
   4a4e4:	cmn	x0, #0x78
   4a4e8:	b.hi	4a3d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2eb0>  // b.pmore
   4a4ec:	add	x20, x20, x0
   4a4f0:	add	x26, x26, x19
   4a4f4:	sub	x27, x27, x19
   4a4f8:	b	4a444 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2f24>
   4a4fc:	mov	x0, #0xfffffffffffffff6    	// #-10
   4a500:	b	4a3d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2eb0>
   4a504:	mov	x0, #0xffffffffffffffff    	// #-1
   4a508:	b	4a3d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2eb0>
   4a50c:	cbz	x19, 4a4a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2f84>
   4a510:	mov	x0, #0xffffffffffffffba    	// #-70
   4a514:	b	4a3d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2eb0>
   4a518:	stp	x29, x30, [sp, #-64]!
   4a51c:	mov	x29, sp
   4a520:	stp	x19, x20, [sp, #16]
   4a524:	mov	x20, x0
   4a528:	stp	x21, x22, [sp, #32]
   4a52c:	mov	x21, x3
   4a530:	str	x23, [sp, #48]
   4a534:	mov	x23, x2
   4a538:	bl	47664 <ZDICT_addEntropyTablesFromBuffer@@Base+0x144>
   4a53c:	mov	x0, #0x1ffff               	// #131071
   4a540:	cmp	x4, x0
   4a544:	b.hi	4a590 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3070>  // b.pmore
   4a548:	mov	x22, x1
   4a54c:	mov	x19, x4
   4a550:	mov	x2, x4
   4a554:	mov	x1, x21
   4a558:	mov	x0, x20
   4a55c:	bl	49f38 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a18>
   4a560:	cmn	x0, #0x78
   4a564:	b.hi	4a594 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3074>  // b.pmore
   4a568:	sub	x4, x19, x0
   4a56c:	add	x3, x21, x0
   4a570:	mov	x2, x23
   4a574:	mov	x1, x22
   4a578:	mov	x0, x20
   4a57c:	ldp	x19, x20, [sp, #16]
   4a580:	ldp	x21, x22, [sp, #32]
   4a584:	ldr	x23, [sp, #48]
   4a588:	ldp	x29, x30, [sp], #64
   4a58c:	b	47fec <ZDICT_addEntropyTablesFromBuffer@@Base+0xacc>
   4a590:	mov	x0, #0xffffffffffffffb8    	// #-72
   4a594:	ldp	x19, x20, [sp, #16]
   4a598:	ldp	x21, x22, [sp, #32]
   4a59c:	ldr	x23, [sp, #48]
   4a5a0:	ldp	x29, x30, [sp], #64
   4a5a4:	ret
   4a5a8:	stp	x29, x30, [sp, #-64]!
   4a5ac:	mov	x29, sp
   4a5b0:	stp	x19, x20, [sp, #16]
   4a5b4:	mov	x20, x2
   4a5b8:	mov	x19, x0
   4a5bc:	stp	x21, x22, [sp, #32]
   4a5c0:	mov	x21, x3
   4a5c4:	mov	x22, x4
   4a5c8:	str	x23, [sp, #48]
   4a5cc:	mov	x23, x5
   4a5d0:	bl	4a340 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2e20>
   4a5d4:	mov	x1, x20
   4a5d8:	mov	x0, x19
   4a5dc:	bl	47664 <ZDICT_addEntropyTablesFromBuffer@@Base+0x144>
   4a5e0:	mov	x4, x23
   4a5e4:	mov	x3, x22
   4a5e8:	mov	x2, x21
   4a5ec:	ldp	x19, x20, [sp, #16]
   4a5f0:	ldp	x21, x22, [sp, #32]
   4a5f4:	ldr	x23, [sp, #48]
   4a5f8:	ldp	x29, x30, [sp], #64
   4a5fc:	b	4a3a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2e84>
   4a600:	mov	x7, x2
   4a604:	mov	x6, x3
   4a608:	cmp	x1, #0x4
   4a60c:	b.hi	4a630 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3110>  // b.pmore
   4a610:	mov	x0, #0xffffffffffffffb8    	// #-72
   4a614:	b	4a64c <ZDICT_addEntropyTablesFromBuffer@@Base+0x312c>
   4a618:	mov	x0, #0xffffffffffffffb8    	// #-72
   4a61c:	str	x0, [x7]
   4a620:	mov	x0, #0xfffffffffffffffe    	// #-2
   4a624:	str	x0, [x6]
   4a628:	ldp	x29, x30, [sp], #32
   4a62c:	ret
   4a630:	mov	x9, x0
   4a634:	mov	w0, #0xb525                	// #46373
   4a638:	movk	w0, #0xfd2f, lsl #16
   4a63c:	ldr	w2, [x9]
   4a640:	cmp	w2, w0
   4a644:	b.eq	4a65c <ZDICT_addEntropyTablesFromBuffer@@Base+0x313c>  // b.none
   4a648:	mov	x0, #0xfffffffffffffff6    	// #-10
   4a64c:	str	x0, [x7]
   4a650:	mov	x0, #0xfffffffffffffffe    	// #-2
   4a654:	str	x0, [x6]
   4a658:	ret
   4a65c:	stp	x29, x30, [sp, #-32]!
   4a660:	add	x5, x9, #0x5
   4a664:	sub	x4, x1, #0x5
   4a668:	add	x2, sp, #0x18
   4a66c:	mov	x8, #0x0                   	// #0
   4a670:	mov	x29, sp
   4a674:	mov	x1, x4
   4a678:	mov	x0, x5
   4a67c:	bl	4760c <ZDICT_addEntropyTablesFromBuffer@@Base+0xec>
   4a680:	cmn	x0, #0x78
   4a684:	b.hi	4a61c <ZDICT_addEntropyTablesFromBuffer@@Base+0x30fc>  // b.pmore
   4a688:	sub	x4, x4, #0x3
   4a68c:	add	x5, x5, #0x3
   4a690:	cmp	x0, x4
   4a694:	b.hi	4a618 <ZDICT_addEntropyTablesFromBuffer@@Base+0x30f8>  // b.pmore
   4a698:	cbz	x0, 4a6ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x318c>
   4a69c:	add	x5, x5, x0
   4a6a0:	sub	x4, x4, x0
   4a6a4:	add	x8, x8, #0x1
   4a6a8:	b	4a674 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3154>
   4a6ac:	sub	x5, x5, x9
   4a6b0:	str	x5, [x7]
   4a6b4:	lsl	x8, x8, #17
   4a6b8:	str	x8, [x6]
   4a6bc:	b	4a628 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3108>
   4a6c0:	ldr	x0, [x0, #26672]
   4a6c4:	ret
   4a6c8:	stp	x29, x30, [sp, #-64]!
   4a6cc:	mov	x6, x2
   4a6d0:	mov	x29, sp
   4a6d4:	ldr	x2, [x0, #26672]
   4a6d8:	stp	x19, x20, [sp, #16]
   4a6dc:	stp	x21, x22, [sp, #32]
   4a6e0:	cmp	x2, x4
   4a6e4:	b.eq	4a700 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31e0>  // b.none
   4a6e8:	mov	x19, #0xffffffffffffffb8    	// #-72
   4a6ec:	mov	x0, x19
   4a6f0:	ldp	x19, x20, [sp, #16]
   4a6f4:	ldp	x21, x22, [sp, #32]
   4a6f8:	ldp	x29, x30, [sp], #64
   4a6fc:	ret
   4a700:	mov	x5, x3
   4a704:	mov	x21, x1
   4a708:	mov	x20, x0
   4a70c:	bl	47664 <ZDICT_addEntropyTablesFromBuffer@@Base+0x144>
   4a710:	add	x22, x0, #0x4, lsl #12
   4a714:	ldr	w1, [x22, #10348]
   4a718:	cmp	w1, #0x3
   4a71c:	b.hi	4a884 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3364>  // b.pmore
   4a720:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   4a724:	mov	x19, x4
   4a728:	add	x0, x0, #0xb90
   4a72c:	ldrb	w0, [x0, w1, uxtw]
   4a730:	adr	x1, 4a73c <ZDICT_addEntropyTablesFromBuffer@@Base+0x321c>
   4a734:	add	x0, x1, w0, sxtb #2
   4a738:	br	x0
   4a73c:	cmp	x4, #0x5
   4a740:	b.ne	4a6e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31c8>  // b.any
   4a744:	ldr	w1, [x5]
   4a748:	mov	w0, #0xb525                	// #46373
   4a74c:	movk	w0, #0xfd2f, lsl #16
   4a750:	cmp	w1, w0
   4a754:	b.eq	4a764 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3244>  // b.none
   4a758:	mov	x19, #0xfffffffffffffff6    	// #-10
   4a75c:	str	x19, [x20, #26680]
   4a760:	b	4a6ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x31cc>
   4a764:	mov	x0, #0x6890                	// #26768
   4a768:	str	x4, [x20, #26680]
   4a76c:	movk	x0, #0x2, lsl #16
   4a770:	add	x1, x20, x0
   4a774:	ldr	w2, [x5]
   4a778:	str	w2, [x20, x0]
   4a77c:	ldrb	w0, [x5, #4]
   4a780:	strb	w0, [x1, #4]
   4a784:	str	xzr, [x20, #26672]
   4a788:	ldr	x2, [x20, #26680]
   4a78c:	add	x1, x20, #0x26, lsl #12
   4a790:	add	x1, x1, #0x890
   4a794:	mov	x0, #0x6840                	// #26688
   4a798:	add	x0, x20, x0
   4a79c:	bl	4a348 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2e28>
   4a7a0:	mov	x19, x0
   4a7a4:	cmn	x0, #0x78
   4a7a8:	b.hi	4a6ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x31cc>  // b.pmore
   4a7ac:	mov	x0, #0x3                   	// #3
   4a7b0:	str	x0, [x20, #26672]
   4a7b4:	mov	w0, #0x2                   	// #2
   4a7b8:	str	w0, [x22, #10348]
   4a7bc:	b	4a7f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x32d0>
   4a7c0:	add	x2, sp, #0x38
   4a7c4:	mov	x0, x5
   4a7c8:	mov	x1, #0x3                   	// #3
   4a7cc:	bl	4760c <ZDICT_addEntropyTablesFromBuffer@@Base+0xec>
   4a7d0:	mov	x19, x0
   4a7d4:	cmn	x0, #0x78
   4a7d8:	b.hi	4a6ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x31cc>  // b.pmore
   4a7dc:	ldr	w0, [sp, #56]
   4a7e0:	cmp	w0, #0x3
   4a7e4:	b.ne	4a7f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x32d8>  // b.any
   4a7e8:	str	xzr, [x20, #26672]
   4a7ec:	str	wzr, [x22, #10348]
   4a7f0:	mov	x19, #0x0                   	// #0
   4a7f4:	b	4a6ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x31cc>
   4a7f8:	str	x19, [x20, #26672]
   4a7fc:	str	w0, [x22, #10344]
   4a800:	mov	w0, #0x3                   	// #3
   4a804:	b	4a7b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3298>
   4a808:	ldr	w0, [x22, #10344]
   4a80c:	cmp	w0, #0x1
   4a810:	b.eq	4a854 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3334>  // b.none
   4a814:	cmp	w0, #0x3
   4a818:	b.eq	4a874 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3354>  // b.none
   4a81c:	cbnz	w0, 4a884 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3364>
   4a820:	mov	x3, x5
   4a824:	mov	x2, x6
   4a828:	mov	x1, x21
   4a82c:	mov	x0, x20
   4a830:	bl	4a224 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2d04>
   4a834:	mov	x19, x0
   4a838:	mov	w0, #0x2                   	// #2
   4a83c:	str	w0, [x22, #10348]
   4a840:	add	x21, x21, x19
   4a844:	mov	x0, #0x3                   	// #3
   4a848:	str	x21, [x20, #26640]
   4a84c:	str	x0, [x20, #26672]
   4a850:	b	4a6ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x31cc>
   4a854:	cbz	x21, 4a87c <ZDICT_addEntropyTablesFromBuffer@@Base+0x335c>
   4a858:	cmp	x4, x6
   4a85c:	b.hi	4a87c <ZDICT_addEntropyTablesFromBuffer@@Base+0x335c>  // b.pmore
   4a860:	mov	x2, x4
   4a864:	mov	x1, x5
   4a868:	mov	x0, x21
   4a86c:	bl	4460 <memcpy@plt>
   4a870:	b	4a838 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3318>
   4a874:	mov	x19, #0x0                   	// #0
   4a878:	b	4a838 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3318>
   4a87c:	mov	x19, #0xffffffffffffffba    	// #-70
   4a880:	b	4a838 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3318>
   4a884:	mov	x19, #0xffffffffffffffff    	// #-1
   4a888:	b	4a6ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x31cc>
   4a88c:	stp	x29, x30, [sp, #-48]!
   4a890:	mov	x29, sp
   4a894:	stp	x19, x20, [sp, #16]
   4a898:	mov	x19, x0
   4a89c:	mov	x20, x1
   4a8a0:	stp	x21, x22, [sp, #32]
   4a8a4:	bl	4a2c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2da8>
   4a8a8:	cmn	x0, #0x78
   4a8ac:	b.hi	4a8fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x33dc>  // b.pmore
   4a8b0:	cmp	x20, #0x0
   4a8b4:	mov	x21, x2
   4a8b8:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   4a8bc:	b.eq	4a8f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x33d8>  // b.none
   4a8c0:	ldr	w1, [x20]
   4a8c4:	mov	w0, #0xa435                	// #42037
   4a8c8:	movk	w0, #0xec30, lsl #16
   4a8cc:	cmp	w1, w0
   4a8d0:	b.eq	4a90c <ZDICT_addEntropyTablesFromBuffer@@Base+0x33ec>  // b.none
   4a8d4:	ldr	x0, [x19, #26640]
   4a8d8:	str	x0, [x19, #26664]
   4a8dc:	ldr	x1, [x19, #26648]
   4a8e0:	str	x20, [x19, #26648]
   4a8e4:	sub	x0, x0, x1
   4a8e8:	sub	x0, x20, x0
   4a8ec:	str	x0, [x19, #26656]
   4a8f0:	add	x20, x20, x21
   4a8f4:	str	x20, [x19, #26640]
   4a8f8:	mov	x0, #0x0                   	// #0
   4a8fc:	ldp	x19, x20, [sp, #16]
   4a900:	ldp	x21, x22, [sp, #32]
   4a904:	ldp	x29, x30, [sp], #48
   4a908:	ret
   4a90c:	add	x22, x20, #0x4
   4a910:	sub	x2, x2, #0x4
   4a914:	mov	x1, x22
   4a918:	mov	x0, x19
   4a91c:	bl	4975c <ZDICT_addEntropyTablesFromBuffer@@Base+0x223c>
   4a920:	cmn	x0, #0x78
   4a924:	b.hi	4a94c <ZDICT_addEntropyTablesFromBuffer@@Base+0x342c>  // b.pmore
   4a928:	add	x22, x22, x0
   4a92c:	ldr	x2, [x19, #26640]
   4a930:	str	x2, [x19, #26664]
   4a934:	ldr	x0, [x19, #26648]
   4a938:	str	x22, [x19, #26648]
   4a93c:	sub	x2, x2, x0
   4a940:	sub	x2, x22, x2
   4a944:	str	x2, [x19, #26656]
   4a948:	b	4a8f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x33d0>
   4a94c:	mov	x0, #0xffffffffffffffe2    	// #-30
   4a950:	b	4a8fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x33dc>
   4a954:	stp	x29, x30, [sp, #-64]!
   4a958:	mov	x29, sp
   4a95c:	stp	x21, x22, [sp, #32]
   4a960:	mov	x21, x2
   4a964:	mov	x2, x6
   4a968:	mov	x22, x3
   4a96c:	stp	x19, x20, [sp, #16]
   4a970:	mov	x19, x0
   4a974:	mov	x20, x1
   4a978:	mov	x1, x5
   4a97c:	str	x23, [sp, #48]
   4a980:	mov	x23, x4
   4a984:	bl	4a88c <ZDICT_addEntropyTablesFromBuffer@@Base+0x336c>
   4a988:	mov	x1, x20
   4a98c:	mov	x0, x19
   4a990:	bl	47664 <ZDICT_addEntropyTablesFromBuffer@@Base+0x144>
   4a994:	mov	x4, x23
   4a998:	mov	x3, x22
   4a99c:	mov	x2, x21
   4a9a0:	ldp	x19, x20, [sp, #16]
   4a9a4:	ldp	x21, x22, [sp, #32]
   4a9a8:	ldr	x23, [sp, #48]
   4a9ac:	ldp	x29, x30, [sp], #64
   4a9b0:	b	4a3a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2e84>
   4a9b4:	mov	x6, #0x0                   	// #0
   4a9b8:	mov	x5, #0x0                   	// #0
   4a9bc:	b	4a954 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3434>
   4a9c0:	stp	x29, x30, [sp, #-64]!
   4a9c4:	mov	x29, sp
   4a9c8:	stp	x19, x20, [sp, #16]
   4a9cc:	mov	x19, x0
   4a9d0:	stp	x21, x22, [sp, #32]
   4a9d4:	mov	x21, x1
   4a9d8:	mov	x22, x2
   4a9dc:	str	x23, [sp, #48]
   4a9e0:	mov	x23, x3
   4a9e4:	bl	4a2fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ddc>
   4a9e8:	cbz	x0, 4aa28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3508>
   4a9ec:	mov	x1, x19
   4a9f0:	mov	x4, x23
   4a9f4:	mov	x3, x22
   4a9f8:	mov	x2, x21
   4a9fc:	mov	x20, x0
   4aa00:	bl	4a9b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3494>
   4aa04:	mov	x19, x0
   4aa08:	mov	x0, x20
   4aa0c:	bl	48e0 <free@plt>
   4aa10:	mov	x0, x19
   4aa14:	ldp	x19, x20, [sp, #16]
   4aa18:	ldp	x21, x22, [sp, #32]
   4aa1c:	ldr	x23, [sp, #48]
   4aa20:	ldp	x29, x30, [sp], #64
   4aa24:	ret
   4aa28:	mov	x19, #0xffffffffffffffc0    	// #-64
   4aa2c:	b	4aa10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x34f0>
   4aa30:	stp	x29, x30, [sp, #-32]!
   4aa34:	mov	x0, #0x80                  	// #128
   4aa38:	mov	x29, sp
   4aa3c:	str	x19, [sp, #16]
   4aa40:	bl	46a0 <malloc@plt>
   4aa44:	mov	x19, x0
   4aa48:	cbz	x0, 4aa64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3544>
   4aa4c:	mov	x2, #0x80                  	// #128
   4aa50:	mov	w1, #0x0                   	// #0
   4aa54:	bl	4700 <memset@plt>
   4aa58:	bl	4a2fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ddc>
   4aa5c:	str	x0, [x19]
   4aa60:	str	wzr, [x19, #112]
   4aa64:	mov	x0, x19
   4aa68:	ldr	x19, [sp, #16]
   4aa6c:	ldp	x29, x30, [sp], #32
   4aa70:	ret
   4aa74:	cbz	x0, 4aab8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3598>
   4aa78:	stp	x29, x30, [sp, #-32]!
   4aa7c:	mov	x29, sp
   4aa80:	str	x19, [sp, #16]
   4aa84:	mov	x19, x0
   4aa88:	ldr	x0, [x0]
   4aa8c:	bl	48e0 <free@plt>
   4aa90:	ldr	x0, [x19, #48]
   4aa94:	bl	48e0 <free@plt>
   4aa98:	ldr	x0, [x19, #72]
   4aa9c:	bl	48e0 <free@plt>
   4aaa0:	mov	x0, x19
   4aaa4:	bl	48e0 <free@plt>
   4aaa8:	mov	x0, #0x0                   	// #0
   4aaac:	ldr	x19, [sp, #16]
   4aab0:	ldp	x29, x30, [sp], #32
   4aab4:	ret
   4aab8:	mov	x0, #0x0                   	// #0
   4aabc:	ret
   4aac0:	mov	w3, #0x1                   	// #1
   4aac4:	str	xzr, [x0, #64]
   4aac8:	stp	xzr, xzr, [x0, #88]
   4aacc:	str	xzr, [x0, #104]
   4aad0:	str	w3, [x0, #112]
   4aad4:	ldr	x0, [x0]
   4aad8:	b	4a88c <ZDICT_addEntropyTablesFromBuffer@@Base+0x336c>
   4aadc:	mov	x2, #0x0                   	// #0
   4aae0:	mov	x1, #0x0                   	// #0
   4aae4:	b	4aac0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x35a0>
   4aae8:	stp	x29, x30, [sp, #-144]!
   4aaec:	mov	x29, sp
   4aaf0:	stp	x25, x26, [sp, #64]
   4aaf4:	mov	w26, #0x4                   	// #4
   4aaf8:	stp	x27, x28, [sp, #80]
   4aafc:	mov	x27, x0
   4ab00:	ldr	x25, [x4]
   4ab04:	stp	x19, x20, [sp, #16]
   4ab08:	mov	x20, x4
   4ab0c:	ldr	x0, [x2]
   4ab10:	mov	x19, x3
   4ab14:	add	x25, x3, x25
   4ab18:	stp	x21, x22, [sp, #32]
   4ab1c:	add	x0, x1, x0
   4ab20:	mov	x21, x3
   4ab24:	mov	x22, x1
   4ab28:	stp	x23, x24, [sp, #48]
   4ab2c:	mov	x24, x1
   4ab30:	mov	x23, x2
   4ab34:	str	x0, [sp, #104]
   4ab38:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   4ab3c:	add	x0, x0, #0xb94
   4ab40:	str	x0, [sp, #112]
   4ab44:	ldr	w0, [x27, #112]
   4ab48:	cmp	w0, #0x6
   4ab4c:	b.hi	4ab64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3644>  // b.pmore
   4ab50:	ldr	x1, [sp, #112]
   4ab54:	ldrh	w0, [x1, w0, uxtw #1]
   4ab58:	adr	x1, 4ab64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3644>
   4ab5c:	add	x0, x1, w0, sxth #2
   4ab60:	br	x0
   4ab64:	mov	x3, #0xffffffffffffffff    	// #-1
   4ab68:	mov	x0, x3
   4ab6c:	ldp	x19, x20, [sp, #16]
   4ab70:	ldp	x21, x22, [sp, #32]
   4ab74:	ldp	x23, x24, [sp, #48]
   4ab78:	ldp	x25, x26, [sp, #64]
   4ab7c:	ldp	x27, x28, [sp, #80]
   4ab80:	ldp	x29, x30, [sp], #144
   4ab84:	ret
   4ab88:	ldr	x2, [x20]
   4ab8c:	mov	x1, x21
   4ab90:	add	x0, x27, #0x8
   4ab94:	bl	4a348 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2e28>
   4ab98:	mov	x3, x0
   4ab9c:	cmn	x0, #0x78
   4aba0:	b.hi	4ab68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3648>  // b.pmore
   4aba4:	cbz	x0, 4abec <ZDICT_addEntropyTablesFromBuffer@@Base+0x36cc>
   4aba8:	ldr	x2, [x20]
   4abac:	add	x4, x27, #0x74
   4abb0:	ldr	x0, [x27, #104]
   4abb4:	str	x3, [sp, #104]
   4abb8:	add	x0, x4, x0
   4abbc:	bl	4460 <memcpy@plt>
   4abc0:	ldr	x1, [x20]
   4abc4:	ldr	x0, [x27, #104]
   4abc8:	ldr	x3, [sp, #104]
   4abcc:	add	x0, x0, x1
   4abd0:	str	x0, [x27, #104]
   4abd4:	mov	w0, #0x2                   	// #2
   4abd8:	str	xzr, [x23]
   4abdc:	str	w0, [x27, #112]
   4abe0:	ldr	x0, [x27, #104]
   4abe4:	sub	x3, x3, x0
   4abe8:	b	4ab68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3648>
   4abec:	mov	w0, #0x3                   	// #3
   4abf0:	str	w0, [x27, #112]
   4abf4:	b	4ab44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3624>
   4abf8:	ldr	x0, [x27, #104]
   4abfc:	mov	x3, #0x5                   	// #5
   4ac00:	ldr	x2, [x20]
   4ac04:	sub	x3, x3, x0
   4ac08:	add	x4, x27, #0x74
   4ac0c:	mov	x1, x21
   4ac10:	cmp	x3, x2
   4ac14:	mov	x28, x4
   4ac18:	csel	x3, x3, x2, ls  // ls = plast
   4ac1c:	add	x0, x4, x0
   4ac20:	mov	x2, x3
   4ac24:	str	x3, [sp, #120]
   4ac28:	bl	4460 <memcpy@plt>
   4ac2c:	ldr	x2, [x27, #104]
   4ac30:	mov	x1, x28
   4ac34:	ldr	x3, [sp, #120]
   4ac38:	add	x0, x27, #0x8
   4ac3c:	add	x2, x3, x2
   4ac40:	str	x2, [x27, #104]
   4ac44:	add	x19, x19, x3
   4ac48:	bl	4a348 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2e28>
   4ac4c:	mov	x3, x0
   4ac50:	cmn	x0, #0x78
   4ac54:	b.hi	4ab68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3648>  // b.pmore
   4ac58:	cbz	x0, 4ac68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3748>
   4ac5c:	str	xzr, [x23]
   4ac60:	ldr	x0, [x27, #104]
   4ac64:	b	4abe4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x36c4>
   4ac68:	ldr	w0, [x27, #16]
   4ac6c:	mov	x1, #0x1                   	// #1
   4ac70:	ldr	x2, [x27, #56]
   4ac74:	lsl	x28, x1, x0
   4ac78:	mov	x0, #0x1ffff               	// #131071
   4ac7c:	cmp	x2, x0
   4ac80:	b.ls	4acd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x37b4>  // b.plast
   4ac84:	ldr	x0, [x27, #80]
   4ac88:	cmp	x0, x28
   4ac8c:	b.cs	4acac <ZDICT_addEntropyTablesFromBuffer@@Base+0x378c>  // b.hs, b.nlast
   4ac90:	ldr	x0, [x27, #72]
   4ac94:	bl	48e0 <free@plt>
   4ac98:	str	x28, [x27, #80]
   4ac9c:	mov	x0, x28
   4aca0:	bl	46a0 <malloc@plt>
   4aca4:	str	x0, [x27, #72]
   4aca8:	cbz	x0, 4acf0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x37d0>
   4acac:	ldr	x2, [x27, #104]
   4acb0:	cbz	x2, 4acf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x37d8>
   4acb4:	ldr	x0, [x27, #48]
   4acb8:	add	x1, x27, #0x74
   4acbc:	bl	4460 <memcpy@plt>
   4acc0:	ldr	x0, [x27, #104]
   4acc4:	str	x0, [x27, #64]
   4acc8:	mov	w0, #0x5                   	// #5
   4accc:	str	xzr, [x27, #104]
   4acd0:	b	4abf0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x36d0>
   4acd4:	ldr	x0, [x27, #48]
   4acd8:	bl	48e0 <free@plt>
   4acdc:	mov	x0, #0x20000               	// #131072
   4ace0:	str	x0, [x27, #56]
   4ace4:	bl	46a0 <malloc@plt>
   4ace8:	str	x0, [x27, #48]
   4acec:	cbnz	x0, 4ac84 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3764>
   4acf0:	mov	x3, #0xffffffffffffffc0    	// #-64
   4acf4:	b	4ab68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3648>
   4acf8:	str	w26, [x27, #112]
   4acfc:	ldr	x0, [x27]
   4ad00:	ldr	x4, [x0, #26672]
   4ad04:	cbnz	x4, 4ad3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x381c>
   4ad08:	str	wzr, [x27, #112]
   4ad0c:	ldr	x0, [x27]
   4ad10:	sub	x19, x19, x21
   4ad14:	str	x19, [x20]
   4ad18:	sub	x22, x22, x24
   4ad1c:	str	x22, [x23]
   4ad20:	ldr	x0, [x0, #26672]
   4ad24:	cmp	x0, #0x3
   4ad28:	b.ls	4ad30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3810>  // b.plast
   4ad2c:	add	x0, x0, #0x3
   4ad30:	ldr	x3, [x27, #64]
   4ad34:	sub	x3, x0, x3
   4ad38:	b	4ab68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3648>
   4ad3c:	sub	x1, x25, x19
   4ad40:	cmp	x1, x4
   4ad44:	b.cc	4ad90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3870>  // b.lo, b.ul, b.last
   4ad48:	ldp	x6, x2, [x27, #72]
   4ad4c:	mov	x3, x19
   4ad50:	ldr	x1, [x27, #88]
   4ad54:	str	x4, [sp, #120]
   4ad58:	sub	x2, x2, x1
   4ad5c:	add	x1, x6, x1
   4ad60:	bl	4a6c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a8>
   4ad64:	mov	x3, x0
   4ad68:	cmn	x0, #0x78
   4ad6c:	b.hi	4ab68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3648>  // b.pmore
   4ad70:	ldr	x4, [sp, #120]
   4ad74:	add	x19, x19, x4
   4ad78:	cbz	x0, 4ab44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3624>
   4ad7c:	ldr	x0, [x27, #88]
   4ad80:	add	x0, x0, x3
   4ad84:	str	x0, [x27, #96]
   4ad88:	mov	w0, #0x6                   	// #6
   4ad8c:	b	4abf0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x36d0>
   4ad90:	cmp	x19, x25
   4ad94:	b.eq	4ad0c <ZDICT_addEntropyTablesFromBuffer@@Base+0x37ec>  // b.none
   4ad98:	mov	w0, #0x5                   	// #5
   4ad9c:	str	w0, [x27, #112]
   4ada0:	ldr	x0, [x27]
   4ada4:	ldr	x1, [x27, #56]
   4ada8:	ldr	x4, [x0, #26672]
   4adac:	str	x4, [sp, #136]
   4adb0:	ldr	x0, [x27, #64]
   4adb4:	sub	x3, x4, x0
   4adb8:	sub	x1, x1, x0
   4adbc:	cmp	x1, x3
   4adc0:	b.cc	4aec4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39a4>  // b.lo, b.ul, b.last
   4adc4:	sub	x2, x25, x19
   4adc8:	mov	x1, x19
   4adcc:	ldr	x6, [x27, #48]
   4add0:	cmp	x2, x3
   4add4:	csel	x2, x2, x3, ls  // ls = plast
   4add8:	stp	x2, x3, [sp, #120]
   4addc:	add	x0, x6, x0
   4ade0:	bl	4460 <memcpy@plt>
   4ade4:	ldp	x2, x3, [sp, #120]
   4ade8:	ldr	x0, [x27, #64]
   4adec:	ldr	x4, [sp, #136]
   4adf0:	add	x0, x0, x2
   4adf4:	str	x0, [x27, #64]
   4adf8:	add	x19, x19, x2
   4adfc:	cmp	x3, x2
   4ae00:	b.hi	4ad0c <ZDICT_addEntropyTablesFromBuffer@@Base+0x37ec>  // b.pmore
   4ae04:	ldp	x1, x2, [x27, #72]
   4ae08:	ldr	x0, [x27, #88]
   4ae0c:	ldr	x3, [x27, #48]
   4ae10:	sub	x2, x2, x0
   4ae14:	add	x1, x1, x0
   4ae18:	ldr	x0, [x27]
   4ae1c:	bl	4a6c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a8>
   4ae20:	mov	x3, x0
   4ae24:	cmn	x0, #0x78
   4ae28:	b.hi	4ab68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3648>  // b.pmore
   4ae2c:	str	xzr, [x27, #64]
   4ae30:	cbnz	x0, 4ae3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x391c>
   4ae34:	str	w26, [x27, #112]
   4ae38:	b	4ab44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3624>
   4ae3c:	ldr	x0, [x27, #88]
   4ae40:	add	x0, x0, x3
   4ae44:	str	x0, [x27, #96]
   4ae48:	mov	w0, #0x6                   	// #6
   4ae4c:	str	w0, [x27, #112]
   4ae50:	ldp	x0, x3, [x27, #88]
   4ae54:	ldr	x1, [sp, #104]
   4ae58:	sub	x4, x1, x22
   4ae5c:	sub	x3, x3, x0
   4ae60:	str	x3, [sp, #136]
   4ae64:	cmp	x4, x3
   4ae68:	ldr	x1, [x27, #72]
   4ae6c:	csel	x2, x4, x3, ls  // ls = plast
   4ae70:	stp	x2, x4, [sp, #120]
   4ae74:	add	x1, x1, x0
   4ae78:	mov	x0, x22
   4ae7c:	bl	4460 <memcpy@plt>
   4ae80:	ldp	x2, x4, [sp, #120]
   4ae84:	ldr	x0, [x27, #88]
   4ae88:	ldr	x3, [sp, #136]
   4ae8c:	add	x22, x22, x2
   4ae90:	add	x2, x2, x0
   4ae94:	str	x2, [x27, #88]
   4ae98:	cmp	x4, x3
   4ae9c:	b.cc	4ad0c <ZDICT_addEntropyTablesFromBuffer@@Base+0x37ec>  // b.lo, b.ul, b.last
   4aea0:	ldr	x0, [x27, #80]
   4aea4:	str	w26, [x27, #112]
   4aea8:	add	x2, x2, #0x20, lsl #12
   4aeac:	cmp	x2, x0
   4aeb0:	b.ls	4ab44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3624>  // b.plast
   4aeb4:	stp	xzr, xzr, [x27, #88]
   4aeb8:	b	4ab44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3624>
   4aebc:	mov	x3, #0xffffffffffffffc2    	// #-62
   4aec0:	b	4ab68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3648>
   4aec4:	mov	x3, #0xffffffffffffffec    	// #-20
   4aec8:	b	4ab68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3648>
   4aecc:	cmn	x0, #0x78
   4aed0:	cset	w0, hi  // hi = pmore
   4aed4:	ret
   4aed8:	b	47690 <ZDICT_addEntropyTablesFromBuffer@@Base+0x170>
   4aedc:	mov	x0, #0x3                   	// #3
   4aee0:	movk	x0, #0x2, lsl #16
   4aee4:	ret
   4aee8:	mov	x0, #0x20000               	// #131072
   4aeec:	ret
   4aef0:	ldr	x2, [x0]
   4aef4:	mvn	w4, w1
   4aef8:	ldr	w3, [x0, #8]
   4aefc:	add	w1, w1, w3
   4af00:	str	w1, [x0, #8]
   4af04:	lsl	x2, x2, x3
   4af08:	lsr	x2, x2, #1
   4af0c:	lsr	x0, x2, x4
   4af10:	ret
   4af14:	ldr	w3, [x0, #8]
   4af18:	mov	x2, x0
   4af1c:	cmp	w3, #0x40
   4af20:	b.hi	4afb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a90>  // b.pmore
   4af24:	ldp	x1, x0, [x0, #16]
   4af28:	add	x4, x0, #0x8
   4af2c:	cmp	x1, x4
   4af30:	b.cc	4af58 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a38>  // b.lo, b.ul, b.last
   4af34:	lsr	w0, w3, #3
   4af38:	and	w3, w3, #0x7
   4af3c:	sub	x1, x1, x0
   4af40:	str	w3, [x2, #8]
   4af44:	str	x1, [x2, #16]
   4af48:	ldr	x0, [x1]
   4af4c:	str	x0, [x2]
   4af50:	mov	w0, #0x0                   	// #0
   4af54:	ret
   4af58:	cmp	x1, x0
   4af5c:	b.ne	4af70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a50>  // b.any
   4af60:	cmp	w3, #0x40
   4af64:	cset	w0, eq  // eq = none
   4af68:	add	w0, w0, #0x1
   4af6c:	b	4af54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a34>
   4af70:	lsr	w5, w3, #3
   4af74:	lsr	w4, w3, #3
   4af78:	sub	x5, x1, x5
   4af7c:	cmp	x0, x5
   4af80:	b.ls	4afa8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a88>  // b.plast
   4af84:	sub	w4, w1, w0
   4af88:	mov	w0, #0x1                   	// #1
   4af8c:	sub	x1, x1, w4, uxtw
   4af90:	sub	w3, w3, w4, lsl #3
   4af94:	str	w3, [x2, #8]
   4af98:	str	x1, [x2, #16]
   4af9c:	ldr	x1, [x1]
   4afa0:	str	x1, [x2]
   4afa4:	b	4af54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a34>
   4afa8:	mov	w0, #0x0                   	// #0
   4afac:	b	4af8c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a6c>
   4afb0:	mov	w0, #0x3                   	// #3
   4afb4:	b	4af54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a34>
   4afb8:	ldp	x2, x1, [x0, #16]
   4afbc:	cmp	x2, x1
   4afc0:	b.ne	4afd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3ab4>  // b.any
   4afc4:	ldr	w0, [x0, #8]
   4afc8:	cmp	w0, #0x40
   4afcc:	cset	w0, eq  // eq = none
   4afd0:	ret
   4afd4:	mov	w0, #0x0                   	// #0
   4afd8:	b	4afd0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3ab0>
   4afdc:	mov	x6, x2
   4afe0:	stp	x29, x30, [sp, #-16]!
   4afe4:	mov	x5, x1
   4afe8:	mov	x29, sp
   4afec:	ldrh	w1, [x6], #4
   4aff0:	mov	x7, x0
   4aff4:	mov	x0, x5
   4aff8:	bl	4aef0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39d0>
   4affc:	str	x0, [x7]
   4b000:	mov	x0, x5
   4b004:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4b008:	ldp	x29, x30, [sp], #16
   4b00c:	str	x6, [x7, #8]
   4b010:	ret
   4b014:	mov	x5, x0
   4b018:	stp	x29, x30, [sp, #-16]!
   4b01c:	mov	x0, x1
   4b020:	mov	x29, sp
   4b024:	ldp	x1, x2, [x5]
   4b028:	lsl	x3, x1, #2
   4b02c:	add	x1, x2, x1, lsl #2
   4b030:	ldrh	w6, [x2, x3]
   4b034:	ldrb	w1, [x1, #3]
   4b038:	bl	4aef0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39d0>
   4b03c:	add	x6, x0, w6, uxth
   4b040:	ldp	x29, x30, [sp], #16
   4b044:	str	x6, [x5]
   4b048:	ret
   4b04c:	mov	x5, x0
   4b050:	stp	x29, x30, [sp, #-16]!
   4b054:	mov	x0, x1
   4b058:	mov	x29, sp
   4b05c:	ldp	x1, x2, [x5]
   4b060:	lsl	x3, x1, #2
   4b064:	add	x1, x2, x1, lsl #2
   4b068:	ldrh	w6, [x2, x3]
   4b06c:	ldrb	w7, [x1, #2]
   4b070:	ldrb	w1, [x1, #3]
   4b074:	bl	4aef0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39d0>
   4b078:	add	x6, x0, w6, uxth
   4b07c:	ldp	x29, x30, [sp], #16
   4b080:	mov	w0, w7
   4b084:	str	x6, [x5]
   4b088:	ret
   4b08c:	cmp	x1, #0x2
   4b090:	b.ls	4b0dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bbc>  // b.plast
   4b094:	ldrb	w3, [x0]
   4b098:	lsr	w3, w3, #6
   4b09c:	str	w3, [x2]
   4b0a0:	cmp	w3, #0x2
   4b0a4:	ldrb	w1, [x0, #1]
   4b0a8:	ldrb	w4, [x0, #2]
   4b0ac:	ldrb	w0, [x0]
   4b0b0:	add	w1, w4, w1, lsl #8
   4b0b4:	ubfiz	w0, w0, #16, #3
   4b0b8:	add	w0, w1, w0
   4b0bc:	csel	w1, w0, wzr, eq  // eq = none
   4b0c0:	str	w1, [x2, #4]
   4b0c4:	cmp	w3, #0x3
   4b0c8:	b.eq	4b0e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bc4>  // b.none
   4b0cc:	sxtw	x0, w0
   4b0d0:	cmp	w3, #0x2
   4b0d4:	csinc	x0, x0, xzr, ne  // ne = any
   4b0d8:	ret
   4b0dc:	mov	x0, #0xffffffffffffffb8    	// #-72
   4b0e0:	b	4b0d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bb8>
   4b0e4:	mov	x0, #0x0                   	// #0
   4b0e8:	b	4b0d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bb8>
   4b0ec:	ldr	x2, [x0, #21520]
   4b0f0:	cmp	x2, x1
   4b0f4:	b.eq	4b114 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bf4>  // b.none
   4b0f8:	ldr	x3, [x0, #21528]
   4b0fc:	str	x2, [x0, #21544]
   4b100:	str	x1, [x0, #21520]
   4b104:	sub	x2, x2, x3
   4b108:	str	x1, [x0, #21528]
   4b10c:	sub	x2, x1, x2
   4b110:	str	x2, [x0, #21536]
   4b114:	ret
   4b118:	mov	x3, x0
   4b11c:	mov	x0, x2
   4b120:	cbnz	x2, 4b134 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3c14>
   4b124:	mov	x0, #0xffffffffffffffb8    	// #-72
   4b128:	stp	xzr, xzr, [x3]
   4b12c:	stp	xzr, xzr, [x3, #16]
   4b130:	ret
   4b134:	str	x1, [x3, #24]
   4b138:	sub	x6, x2, #0x1
   4b13c:	cmp	x2, #0x7
   4b140:	b.ls	4b180 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3c60>  // b.plast
   4b144:	sub	x2, x2, #0x8
   4b148:	add	x4, x1, x2
   4b14c:	str	x4, [x3, #16]
   4b150:	ldr	x2, [x1, x2]
   4b154:	str	x2, [x3]
   4b158:	ldrb	w1, [x1, x6]
   4b15c:	cbnz	w1, 4b168 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3c48>
   4b160:	mov	x0, #0xffffffffffffffff    	// #-1
   4b164:	b	4b130 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3c10>
   4b168:	clz	w1, w1
   4b16c:	mov	w2, #0x8                   	// #8
   4b170:	eor	w1, w1, #0x1f
   4b174:	sub	w1, w2, w1
   4b178:	str	w1, [x3, #8]
   4b17c:	b	4b130 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3c10>
   4b180:	str	x1, [x3, #16]
   4b184:	sub	x5, x2, #0x2
   4b188:	cmp	x5, #0x5
   4b18c:	ldrb	w7, [x1]
   4b190:	str	x7, [x3]
   4b194:	b.hi	4b214 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3cf4>  // b.pmore
   4b198:	cmp	w5, #0x5
   4b19c:	b.hi	4b214 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3cf4>  // b.pmore
   4b1a0:	adrp	x4, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   4b1a4:	add	x4, x4, #0xe20
   4b1a8:	ldrb	w2, [x4, w5, uxtw]
   4b1ac:	adr	x4, 4b1b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3c98>
   4b1b0:	add	x2, x4, w2, sxtb #2
   4b1b4:	br	x2
   4b1b8:	ldrb	w2, [x1, #6]
   4b1bc:	add	x2, x7, x2, lsl #48
   4b1c0:	str	x2, [x3]
   4b1c4:	ldr	x4, [x3]
   4b1c8:	ldrb	w2, [x1, #5]
   4b1cc:	add	x2, x4, x2, lsl #40
   4b1d0:	str	x2, [x3]
   4b1d4:	ldr	x4, [x3]
   4b1d8:	ldrb	w2, [x1, #4]
   4b1dc:	add	x2, x4, x2, lsl #32
   4b1e0:	str	x2, [x3]
   4b1e4:	ldr	x4, [x3]
   4b1e8:	ldrb	w2, [x1, #3]
   4b1ec:	add	x2, x4, x2, lsl #24
   4b1f0:	str	x2, [x3]
   4b1f4:	ldr	x4, [x3]
   4b1f8:	ldrb	w2, [x1, #2]
   4b1fc:	add	x2, x4, x2, lsl #16
   4b200:	str	x2, [x3]
   4b204:	ldr	x4, [x3]
   4b208:	ldrb	w2, [x1, #1]
   4b20c:	add	x2, x4, x2, lsl #8
   4b210:	str	x2, [x3]
   4b214:	ldrb	w1, [x1, x6]
   4b218:	cbz	w1, 4b160 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3c40>
   4b21c:	clz	w2, w1
   4b220:	mov	w1, #0x9                   	// #9
   4b224:	sub	w1, w1, w0
   4b228:	eor	w2, w2, #0x1f
   4b22c:	lsl	w1, w1, #3
   4b230:	sub	w1, w1, w2
   4b234:	b	4b178 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3c58>
   4b238:	mov	x2, x0
   4b23c:	ldr	w6, [x1, #8]
   4b240:	ldp	x4, x0, [x0]
   4b244:	lsl	x3, x4, #2
   4b248:	add	x4, x0, x4, lsl #2
   4b24c:	ldrh	w5, [x0, x3]
   4b250:	ldr	x3, [x1]
   4b254:	ldrb	w0, [x4, #2]
   4b258:	ldrb	w4, [x4, #3]
   4b25c:	lsl	x3, x3, x6
   4b260:	neg	w7, w4
   4b264:	add	w4, w4, w6
   4b268:	str	w4, [x1, #8]
   4b26c:	lsr	x3, x3, x7
   4b270:	add	x3, x3, w5, uxth
   4b274:	str	x3, [x2]
   4b278:	ret
   4b27c:	ldr	x3, [x0]
   4b280:	neg	w2, w2
   4b284:	ldr	w5, [x0, #8]
   4b288:	mov	x4, x0
   4b28c:	lsl	x3, x3, x5
   4b290:	lsr	x2, x3, x2
   4b294:	lsl	x0, x2, #1
   4b298:	add	x2, x1, x2, lsl #1
   4b29c:	ldrb	w0, [x1, x0]
   4b2a0:	ldrb	w1, [x2, #1]
   4b2a4:	add	w1, w1, w5
   4b2a8:	str	w1, [x4, #8]
   4b2ac:	ret
   4b2b0:	mov	x11, x0
   4b2b4:	mov	x7, x1
   4b2b8:	mov	x8, x2
   4b2bc:	mov	x9, x3
   4b2c0:	mov	w10, w4
   4b2c4:	mov	x6, x0
   4b2c8:	sub	x12, x2, #0x4
   4b2cc:	stp	x29, x30, [sp, #-16]!
   4b2d0:	mov	x29, sp
   4b2d4:	mov	x0, x7
   4b2d8:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4b2dc:	cbnz	w0, 4b2e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3dc8>
   4b2e0:	cmp	x6, x12
   4b2e4:	b.ls	4b308 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3de8>  // b.plast
   4b2e8:	mov	x0, x7
   4b2ec:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4b2f0:	cbnz	w0, 4b38c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e6c>
   4b2f4:	cmp	x6, x8
   4b2f8:	b.cc	4b360 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e40>  // b.lo, b.ul, b.last
   4b2fc:	sub	x0, x8, x11
   4b300:	ldp	x29, x30, [sp], #16
   4b304:	ret
   4b308:	mov	w2, w10
   4b30c:	mov	x1, x9
   4b310:	mov	x0, x7
   4b314:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4b318:	strb	w0, [x6]
   4b31c:	mov	w2, w10
   4b320:	mov	x1, x9
   4b324:	mov	x0, x7
   4b328:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4b32c:	strb	w0, [x6, #1]
   4b330:	mov	w2, w10
   4b334:	mov	x1, x9
   4b338:	mov	x0, x7
   4b33c:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4b340:	add	x6, x6, #0x4
   4b344:	sturb	w0, [x6, #-2]
   4b348:	mov	w2, w10
   4b34c:	mov	x1, x9
   4b350:	mov	x0, x7
   4b354:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4b358:	sturb	w0, [x6, #-1]
   4b35c:	b	4b2d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3db4>
   4b360:	mov	w2, w10
   4b364:	mov	x1, x9
   4b368:	mov	x0, x7
   4b36c:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4b370:	strb	w0, [x6], #1
   4b374:	b	4b2e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3dc8>
   4b378:	mov	w2, w10
   4b37c:	mov	x1, x9
   4b380:	mov	x0, x7
   4b384:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4b388:	strb	w0, [x6], #1
   4b38c:	cmp	x6, x8
   4b390:	b.cc	4b378 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e58>  // b.lo, b.ul, b.last
   4b394:	b	4b2fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3ddc>
   4b398:	ldr	x4, [x1]
   4b39c:	neg	w3, w3
   4b3a0:	ldr	w5, [x1, #8]
   4b3a4:	lsl	x4, x4, x5
   4b3a8:	lsr	x3, x4, x3
   4b3ac:	lsl	x4, x3, #2
   4b3b0:	add	x3, x2, x3, lsl #2
   4b3b4:	ldrh	w2, [x2, x4]
   4b3b8:	strh	w2, [x0]
   4b3bc:	ldrb	w2, [x3, #2]
   4b3c0:	ldr	w0, [x1, #8]
   4b3c4:	add	w0, w0, w2
   4b3c8:	str	w0, [x1, #8]
   4b3cc:	ldrb	w0, [x3, #3]
   4b3d0:	ret
   4b3d4:	mov	x11, x0
   4b3d8:	mov	x7, x1
   4b3dc:	mov	x10, x2
   4b3e0:	mov	x9, x3
   4b3e4:	mov	w8, w4
   4b3e8:	mov	x6, x0
   4b3ec:	sub	x12, x2, #0x7
   4b3f0:	stp	x29, x30, [sp, #-16]!
   4b3f4:	mov	x29, sp
   4b3f8:	mov	x0, x7
   4b3fc:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4b400:	cbnz	w0, 4b40c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3eec>
   4b404:	cmp	x6, x12
   4b408:	b.cc	4b414 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3ef4>  // b.lo, b.ul, b.last
   4b40c:	sub	x12, x10, #0x2
   4b410:	b	4b484 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3f64>
   4b414:	mov	w3, w8
   4b418:	mov	x2, x9
   4b41c:	mov	x1, x7
   4b420:	mov	x0, x6
   4b424:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4b428:	add	x6, x6, w0, uxtw
   4b42c:	mov	w3, w8
   4b430:	mov	x2, x9
   4b434:	mov	x0, x6
   4b438:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4b43c:	add	x6, x6, w0, uxtw
   4b440:	mov	w3, w8
   4b444:	mov	x2, x9
   4b448:	mov	x0, x6
   4b44c:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4b450:	add	x6, x6, w0, uxtw
   4b454:	mov	x0, x6
   4b458:	mov	w3, w8
   4b45c:	mov	x2, x9
   4b460:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4b464:	add	x6, x6, w0, uxtw
   4b468:	b	4b3f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3ed8>
   4b46c:	mov	x0, x6
   4b470:	mov	w3, w8
   4b474:	mov	x2, x9
   4b478:	mov	x1, x7
   4b47c:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4b480:	add	x6, x6, w0, uxtw
   4b484:	mov	x0, x7
   4b488:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4b48c:	cbnz	w0, 4b508 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3fe8>
   4b490:	cmp	x6, x12
   4b494:	b.ls	4b46c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3f4c>  // b.plast
   4b498:	cmp	x10, x6
   4b49c:	b.ls	4b4e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3fc4>  // b.plast
   4b4a0:	ldr	x1, [x7]
   4b4a4:	neg	w8, w8
   4b4a8:	ldr	w0, [x7, #8]
   4b4ac:	lsl	x1, x1, x0
   4b4b0:	lsr	x8, x1, x8
   4b4b4:	lsl	x0, x8, #2
   4b4b8:	add	x8, x9, x8, lsl #2
   4b4bc:	ldrb	w0, [x9, x0]
   4b4c0:	strb	w0, [x6]
   4b4c4:	ldrb	w0, [x8, #3]
   4b4c8:	cmp	w0, #0x1
   4b4cc:	b.ne	4b514 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3ff4>  // b.any
   4b4d0:	ldrb	w1, [x8, #2]
   4b4d4:	ldr	w0, [x7, #8]
   4b4d8:	add	w0, w0, w1
   4b4dc:	str	w0, [x7, #8]
   4b4e0:	add	x6, x6, #0x1
   4b4e4:	sub	x0, x6, x11
   4b4e8:	ldp	x29, x30, [sp], #16
   4b4ec:	ret
   4b4f0:	mov	x0, x6
   4b4f4:	mov	w3, w8
   4b4f8:	mov	x2, x9
   4b4fc:	mov	x1, x7
   4b500:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4b504:	add	x6, x6, w0, uxtw
   4b508:	cmp	x6, x12
   4b50c:	b.ls	4b4f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3fd0>  // b.plast
   4b510:	b	4b498 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3f78>
   4b514:	ldr	w1, [x7, #8]
   4b518:	cmp	w1, #0x3f
   4b51c:	b.hi	4b4e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3fc0>  // b.pmore
   4b520:	ldrb	w0, [x8, #2]
   4b524:	add	w0, w0, w1
   4b528:	cmp	w0, #0x40
   4b52c:	b.ls	4b4dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3fbc>  // b.plast
   4b530:	mov	w0, #0x40                  	// #64
   4b534:	b	4b4dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3fbc>
   4b538:	cmn	x0, #0x78
   4b53c:	cset	w0, hi  // hi = pmore
   4b540:	ret
   4b544:	cmn	x0, #0x78
   4b548:	b.ls	4b554 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4034>  // b.plast
   4b54c:	neg	w0, w0
   4b550:	b	511c <ZSTD_initDStream_usingDDict@plt+0x59c>
   4b554:	mov	w0, #0x0                   	// #0
   4b558:	b	4b550 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4030>
   4b55c:	cmp	x4, #0x3
   4b560:	b.ls	4b7a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4288>  // b.plast
   4b564:	ldr	w5, [x3]
   4b568:	mov	x13, x0
   4b56c:	and	w9, w5, #0xf
   4b570:	add	w0, w9, #0x5
   4b574:	cmp	w0, #0xf
   4b578:	b.hi	4b798 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4278>  // b.pmore
   4b57c:	stp	x29, x30, [sp, #-32]!
   4b580:	add	x10, x3, x4
   4b584:	mov	w8, #0x1                   	// #1
   4b588:	mov	x29, sp
   4b58c:	stp	x19, x20, [sp, #16]
   4b590:	sub	x16, x10, #0x7
   4b594:	sub	x14, x10, #0x4
   4b598:	str	w0, [x2]
   4b59c:	lsl	w8, w8, w0
   4b5a0:	lsr	w5, w5, #4
   4b5a4:	add	w12, w8, #0x1
   4b5a8:	ldr	w15, [x1]
   4b5ac:	add	w9, w9, #0x6
   4b5b0:	mov	x11, x3
   4b5b4:	sub	x10, x10, #0x5
   4b5b8:	mov	w18, #0x0                   	// #0
   4b5bc:	mov	w17, #0xffff                	// #65535
   4b5c0:	mov	w2, #0x4                   	// #4
   4b5c4:	ubfiz	w0, w8, #1, #15
   4b5c8:	sub	w19, w8, #0x1
   4b5cc:	sub	w6, w0, w12
   4b5d0:	and	w7, w5, #0xffff
   4b5d4:	sub	w6, w6, #0x1
   4b5d8:	and	w5, w19, w5
   4b5dc:	and	w30, w8, #0xffff
   4b5e0:	and	w20, w6, #0xffff
   4b5e4:	cmp	w5, w6, sxth
   4b5e8:	b.cs	4b728 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4208>  // b.hs, b.nlast
   4b5ec:	sub	w5, w30, #0x1
   4b5f0:	and	w7, w7, w5
   4b5f4:	sub	w5, w9, #0x1
   4b5f8:	add	w2, w5, w2
   4b5fc:	sxth	w7, w7
   4b600:	sub	w7, w7, #0x1
   4b604:	add	w19, w18, #0x1
   4b608:	sxth	w7, w7
   4b60c:	strh	w7, [x13, w18, uxtw #1]
   4b610:	cmp	w7, #0x0
   4b614:	cneg	w0, w7, lt  // lt = tstop
   4b618:	sub	w12, w12, w0, sxth
   4b61c:	cmp	w8, w12
   4b620:	b.gt	4b74c <ZDICT_addEntropyTablesFromBuffer@@Base+0x422c>
   4b624:	asr	w0, w2, #3
   4b628:	cmp	x11, x16
   4b62c:	add	x6, x11, w0, sxtw
   4b630:	b.ls	4b63c <ZDICT_addEntropyTablesFromBuffer@@Base+0x411c>  // b.plast
   4b634:	cmp	x14, x6
   4b638:	b.cc	4b758 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4238>  // b.lo, b.ul, b.last
   4b63c:	and	w2, w2, #0x7
   4b640:	ldr	w5, [x6]
   4b644:	cmp	w12, #0x1
   4b648:	lsr	w5, w5, w2
   4b64c:	b.le	4b768 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4248>
   4b650:	cmp	w15, w19
   4b654:	b.cs	4b660 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4140>  // b.hs, b.nlast
   4b658:	mov	x0, #0xffffffffffffffff    	// #-1
   4b65c:	b	4b78c <ZDICT_addEntropyTablesFromBuffer@@Base+0x426c>
   4b660:	cbnz	w7, 4b6f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x41d0>
   4b664:	mov	w0, w19
   4b668:	b	4b684 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4164>
   4b66c:	add	w0, w0, #0x18
   4b670:	cmp	x6, x10
   4b674:	b.cs	4b6fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x41dc>  // b.hs, b.nlast
   4b678:	ldur	w5, [x6, #2]
   4b67c:	add	x6, x6, #0x2
   4b680:	lsr	w5, w5, w2
   4b684:	cmp	w17, w5, uxth
   4b688:	b.eq	4b66c <ZDICT_addEntropyTablesFromBuffer@@Base+0x414c>  // b.none
   4b68c:	and	w7, w5, #0x3
   4b690:	add	w2, w2, #0x2
   4b694:	cmp	w7, #0x3
   4b698:	b.eq	4b708 <ZDICT_addEntropyTablesFromBuffer@@Base+0x41e8>  // b.none
   4b69c:	add	w7, w7, w0
   4b6a0:	cmp	w15, w7
   4b6a4:	b.cc	4b7a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4280>  // b.lo, b.ul, b.last
   4b6a8:	add	x18, x13, w19, uxtw #1
   4b6ac:	mov	x0, #0x0                   	// #0
   4b6b0:	add	w11, w19, w0
   4b6b4:	cmp	w7, w11
   4b6b8:	b.hi	4b714 <ZDICT_addEntropyTablesFromBuffer@@Base+0x41f4>  // b.pmore
   4b6bc:	subs	w0, w7, w19
   4b6c0:	asr	w7, w2, #3
   4b6c4:	csel	w0, w0, wzr, cs  // cs = hs, nlast
   4b6c8:	cmp	x6, x16
   4b6cc:	add	w19, w19, w0
   4b6d0:	add	x7, x6, w7, sxtw
   4b6d4:	b.ls	4b6e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x41c0>  // b.plast
   4b6d8:	cmp	x7, x14
   4b6dc:	b.hi	4b720 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4200>  // b.pmore
   4b6e0:	ldr	w5, [x7]
   4b6e4:	and	w2, w2, #0x7
   4b6e8:	mov	x6, x7
   4b6ec:	lsr	w5, w5, w2
   4b6f0:	mov	w18, w19
   4b6f4:	mov	x11, x6
   4b6f8:	b	4b5c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x40a4>
   4b6fc:	lsr	w5, w5, #16
   4b700:	add	w2, w2, #0x10
   4b704:	b	4b684 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4164>
   4b708:	add	w0, w0, #0x3
   4b70c:	lsr	w5, w5, #2
   4b710:	b	4b68c <ZDICT_addEntropyTablesFromBuffer@@Base+0x416c>
   4b714:	strh	wzr, [x18, x0, lsl #1]
   4b718:	add	x0, x0, #0x1
   4b71c:	b	4b6b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4190>
   4b720:	lsr	w5, w5, #2
   4b724:	b	4b6f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x41d0>
   4b728:	sub	w0, w0, #0x1
   4b72c:	and	w5, w7, w0
   4b730:	sxth	w7, w5
   4b734:	cmp	w8, w5, sxth
   4b738:	b.gt	4b744 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4224>
   4b73c:	sub	w7, w5, w20
   4b740:	sxth	w7, w7
   4b744:	add	w2, w2, w9
   4b748:	b	4b600 <ZDICT_addEntropyTablesFromBuffer@@Base+0x40e0>
   4b74c:	sub	w9, w9, #0x1
   4b750:	asr	w8, w8, #1
   4b754:	b	4b61c <ZDICT_addEntropyTablesFromBuffer@@Base+0x40fc>
   4b758:	sub	x11, x14, x11
   4b75c:	mov	x6, x14
   4b760:	sub	w2, w2, w11, lsl #3
   4b764:	b	4b640 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4120>
   4b768:	b.ne	4b658 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4138>  // b.any
   4b76c:	add	w0, w2, #0x7
   4b770:	str	w18, [x1]
   4b774:	asr	w0, w0, #3
   4b778:	add	x0, x6, w0, sxtw
   4b77c:	sub	x0, x0, x3
   4b780:	cmp	x0, x4
   4b784:	b.ls	4b78c <ZDICT_addEntropyTablesFromBuffer@@Base+0x426c>  // b.plast
   4b788:	mov	x0, #0xffffffffffffffb8    	// #-72
   4b78c:	ldp	x19, x20, [sp, #16]
   4b790:	ldp	x29, x30, [sp], #32
   4b794:	ret
   4b798:	mov	x0, #0xffffffffffffffd4    	// #-44
   4b79c:	ret
   4b7a0:	mov	x0, #0xffffffffffffffd0    	// #-48
   4b7a4:	b	4b78c <ZDICT_addEntropyTablesFromBuffer@@Base+0x426c>
   4b7a8:	mov	x0, #0xffffffffffffffb8    	// #-72
   4b7ac:	ret
   4b7b0:	cmp	w0, #0xf
   4b7b4:	mov	w1, #0xf                   	// #15
   4b7b8:	csel	w0, w0, w1, ls  // ls = plast
   4b7bc:	mov	w1, #0x1                   	// #1
   4b7c0:	lsl	w0, w1, w0
   4b7c4:	add	w0, w0, w1
   4b7c8:	sbfiz	x0, x0, #2, #32
   4b7cc:	b	46a0 <malloc@plt>
   4b7d0:	b	48e0 <free@plt>
   4b7d4:	cmp	w2, #0xff
   4b7d8:	b.hi	4b91c <ZDICT_addEntropyTablesFromBuffer@@Base+0x43fc>  // b.pmore
   4b7dc:	cmp	w3, #0xc
   4b7e0:	b.hi	4b924 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4404>  // b.pmore
   4b7e4:	sub	w6, w3, #0x1
   4b7e8:	mov	w4, #0x1                   	// #1
   4b7ec:	sub	sp, sp, #0x200
   4b7f0:	and	w8, w3, #0xffff
   4b7f4:	lsl	w10, w4, w3
   4b7f8:	sub	w11, w10, #0x1
   4b7fc:	lsl	w6, w4, w6
   4b800:	add	x13, x0, #0x4
   4b804:	add	w2, w2, #0x1
   4b808:	orr	w8, w8, #0x10000
   4b80c:	sxth	w6, w6
   4b810:	mov	w7, w11
   4b814:	mov	x14, sp
   4b818:	mov	w15, w4
   4b81c:	mov	w16, w4
   4b820:	mov	x5, #0x0                   	// #0
   4b824:	mov	w12, #0x0                   	// #0
   4b828:	cmp	w2, w5
   4b82c:	b.hi	4b878 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4358>  // b.pmore
   4b830:	cbz	w12, 4b838 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4318>
   4b834:	bfi	w8, w4, #16, #16
   4b838:	lsr	w5, w10, #3
   4b83c:	mov	x6, #0x0                   	// #0
   4b840:	add	w5, w5, w10, lsr #1
   4b844:	mov	w4, #0x0                   	// #0
   4b848:	add	w5, w5, #0x3
   4b84c:	str	w8, [x0]
   4b850:	cmp	w2, w6
   4b854:	b.hi	4b8e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x43c0>  // b.pmore
   4b858:	cbnz	w4, 4b92c <ZDICT_addEntropyTablesFromBuffer@@Base+0x440c>
   4b85c:	add	x5, x0, w10, sxtw #2
   4b860:	mov	x4, sp
   4b864:	cmp	x0, x5
   4b868:	b.ne	4b8e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x43c8>  // b.any
   4b86c:	mov	x0, #0x0                   	// #0
   4b870:	add	sp, sp, #0x200
   4b874:	ret
   4b878:	ldrsh	w9, [x1, x5, lsl #1]
   4b87c:	cmn	w9, #0x1
   4b880:	b.ne	4b89c <ZDICT_addEntropyTablesFromBuffer@@Base+0x437c>  // b.any
   4b884:	add	x9, x13, w7, uxtw #2
   4b888:	sub	w7, w7, #0x1
   4b88c:	strh	w16, [x14, x5, lsl #1]
   4b890:	strb	w5, [x9, #2]
   4b894:	add	x5, x5, #0x1
   4b898:	b	4b828 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4308>
   4b89c:	cmp	w9, w6
   4b8a0:	strh	w9, [x14, x5, lsl #1]
   4b8a4:	csel	w12, w12, w15, lt  // lt = tstop
   4b8a8:	csel	w4, w4, wzr, lt  // lt = tstop
   4b8ac:	b	4b894 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4374>
   4b8b0:	add	x9, x13, w4, uxtw #2
   4b8b4:	strb	w6, [x9, #2]
   4b8b8:	add	w4, w4, w5
   4b8bc:	and	w4, w4, w11
   4b8c0:	cmp	w7, w4
   4b8c4:	b.cc	4b8b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4398>  // b.lo, b.ul, b.last
   4b8c8:	add	w8, w8, #0x1
   4b8cc:	ldrsh	w9, [x1, x6, lsl #1]
   4b8d0:	cmp	w9, w8
   4b8d4:	b.gt	4b8b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4390>
   4b8d8:	add	x6, x6, #0x1
   4b8dc:	b	4b850 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4330>
   4b8e0:	mov	w8, #0x0                   	// #0
   4b8e4:	b	4b8cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x43ac>
   4b8e8:	ldrb	w1, [x0, #6]
   4b8ec:	ldrh	w2, [x4, x1, lsl #1]
   4b8f0:	add	w6, w2, #0x1
   4b8f4:	strh	w6, [x4, x1, lsl #1]
   4b8f8:	clz	w1, w2
   4b8fc:	eor	w1, w1, #0x1f
   4b900:	sub	w1, w3, w1
   4b904:	and	w1, w1, #0xff
   4b908:	strb	w1, [x0, #7]
   4b90c:	lsl	w1, w2, w1
   4b910:	sub	w1, w1, w10
   4b914:	strh	w1, [x0, #4]!
   4b918:	b	4b864 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4344>
   4b91c:	mov	x0, #0xffffffffffffffd2    	// #-46
   4b920:	ret
   4b924:	mov	x0, #0xffffffffffffffd4    	// #-44
   4b928:	ret
   4b92c:	mov	x0, #0xffffffffffffffff    	// #-1
   4b930:	b	4b870 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4350>
   4b934:	stp	x29, x30, [sp, #-192]!
   4b938:	mov	x9, x4
   4b93c:	cmp	w1, #0x1
   4b940:	mov	x29, sp
   4b944:	stp	x19, x20, [sp, #16]
   4b948:	mov	x4, x5
   4b94c:	mov	x19, x0
   4b950:	str	x21, [sp, #32]
   4b954:	str	w2, [sp, #60]
   4b958:	b.eq	4b97c <ZDICT_addEntropyTablesFromBuffer@@Base+0x445c>  // b.none
   4b95c:	cmp	w1, #0x2
   4b960:	b.eq	4b9b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4494>  // b.none
   4b964:	cbnz	w1, 4b9c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x44a8>
   4b968:	mov	x1, x6
   4b96c:	mov	w3, w7
   4b970:	bl	4b7d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x42b4>
   4b974:	mov	x18, #0x0                   	// #0
   4b978:	b	4b9a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4480>
   4b97c:	cbz	x5, 4ba10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x44f0>
   4b980:	ldrb	w0, [x9]
   4b984:	cmp	w0, w2
   4b988:	b.hi	4ba18 <ZDICT_addEntropyTablesFromBuffer@@Base+0x44f8>  // b.pmore
   4b98c:	mov	x18, #0x1                   	// #1
   4b990:	str	wzr, [x19]
   4b994:	strh	wzr, [x19, #4]
   4b998:	strb	w0, [x19, #6]
   4b99c:	strb	wzr, [x19, #7]
   4b9a0:	mov	x0, x18
   4b9a4:	ldp	x19, x20, [sp, #16]
   4b9a8:	ldr	x21, [sp, #32]
   4b9ac:	ldp	x29, x30, [sp], #192
   4b9b0:	ret
   4b9b4:	ldr	w0, [sp, #192]
   4b9b8:	mov	x18, #0xffffffffffffffec    	// #-20
   4b9bc:	cmp	w0, #0x0
   4b9c0:	csel	x18, x18, xzr, eq  // eq = none
   4b9c4:	b	4b9a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4480>
   4b9c8:	add	x21, sp, #0x50
   4b9cc:	mov	w20, w3
   4b9d0:	add	x2, sp, #0x4c
   4b9d4:	mov	x3, x9
   4b9d8:	add	x1, sp, #0x3c
   4b9dc:	mov	x0, x21
   4b9e0:	bl	4b55c <ZDICT_addEntropyTablesFromBuffer@@Base+0x403c>
   4b9e4:	mov	x18, x0
   4b9e8:	cmn	x0, #0x78
   4b9ec:	b.hi	4ba18 <ZDICT_addEntropyTablesFromBuffer@@Base+0x44f8>  // b.pmore
   4b9f0:	ldr	w3, [sp, #76]
   4b9f4:	cmp	w3, w20
   4b9f8:	b.hi	4ba18 <ZDICT_addEntropyTablesFromBuffer@@Base+0x44f8>  // b.pmore
   4b9fc:	ldr	w2, [sp, #60]
   4ba00:	mov	x1, x21
   4ba04:	mov	x0, x19
   4ba08:	bl	4b7d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x42b4>
   4ba0c:	b	4b9a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4480>
   4ba10:	mov	x18, #0xffffffffffffffb8    	// #-72
   4ba14:	b	4b9a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4480>
   4ba18:	mov	x18, #0xffffffffffffffec    	// #-20
   4ba1c:	b	4b9a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4480>
   4ba20:	sub	sp, sp, #0x130
   4ba24:	stp	x29, x30, [sp, #16]
   4ba28:	add	x29, sp, #0x10
   4ba2c:	stp	x19, x20, [sp, #32]
   4ba30:	stp	x21, x22, [sp, #48]
   4ba34:	stp	x23, x24, [sp, #64]
   4ba38:	stp	x25, x26, [sp, #80]
   4ba3c:	stp	x27, x28, [sp, #96]
   4ba40:	str	x1, [sp, #120]
   4ba44:	str	x2, [sp, #152]
   4ba48:	cbz	x4, 4c038 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4b18>
   4ba4c:	mov	x23, x0
   4ba50:	add	x24, x0, #0xc08
   4ba54:	add	x27, x0, #0x804
   4ba58:	ldrb	w19, [x3]
   4ba5c:	ldr	x22, [x0, #21600]
   4ba60:	mov	x26, x3
   4ba64:	ldr	x0, [x0, #21608]
   4ba68:	str	x0, [sp, #128]
   4ba6c:	ldr	x0, [x23, #21528]
   4ba70:	str	x0, [sp, #112]
   4ba74:	ldr	x0, [x23, #21536]
   4ba78:	str	x0, [sp, #144]
   4ba7c:	ldr	x0, [x23, #21544]
   4ba80:	str	x0, [sp, #136]
   4ba84:	mov	x20, x4
   4ba88:	cbz	w19, 4bbf0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x46d0>
   4ba8c:	add	x21, x3, x4
   4ba90:	cmp	w19, #0x7f
   4ba94:	add	x4, x3, #0x1
   4ba98:	b.le	4babc <ZDICT_addEntropyTablesFromBuffer@@Base+0x459c>
   4ba9c:	cmp	w19, #0xff
   4baa0:	b.ne	4bb28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4608>  // b.any
   4baa4:	add	x4, x3, #0x3
   4baa8:	cmp	x21, x4
   4baac:	b.cc	4c038 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4b18>  // b.lo, b.ul, b.last
   4bab0:	ldurh	w19, [x3, #1]
   4bab4:	mov	w0, #0x7f00                	// #32512
   4bab8:	add	w19, w19, w0
   4babc:	add	x0, x4, #0x4
   4bac0:	cmp	x21, x0
   4bac4:	b.cc	4c038 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4b18>  // b.lo, b.ul, b.last
   4bac8:	add	x0, x23, #0x4, lsl #12
   4bacc:	mov	x28, x4
   4bad0:	adrp	x11, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   4bad4:	add	x11, x11, #0xe38
   4bad8:	mov	x6, x11
   4badc:	mov	w7, #0x6                   	// #6
   4bae0:	ldr	w12, [x0, #5208]
   4bae4:	mov	w3, #0x9                   	// #9
   4bae8:	ldrb	w25, [x28], #1
   4baec:	mov	x0, x23
   4baf0:	str	w12, [sp]
   4baf4:	mov	w2, #0x23                  	// #35
   4baf8:	sub	x5, x21, x28
   4bafc:	mov	x4, x28
   4bb00:	lsr	w1, w25, #6
   4bb04:	str	x11, [sp, #160]
   4bb08:	str	w12, [sp, #172]
   4bb0c:	bl	4b934 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4414>
   4bb10:	ldr	w12, [sp, #172]
   4bb14:	cmn	x0, #0x78
   4bb18:	ldr	x11, [sp, #160]
   4bb1c:	b.ls	4bb44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4624>  // b.plast
   4bb20:	mov	x28, #0xffffffffffffffec    	// #-20
   4bb24:	b	4bbcc <ZDICT_addEntropyTablesFromBuffer@@Base+0x46ac>
   4bb28:	cmp	x21, x4
   4bb2c:	b.ls	4c038 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4b18>  // b.plast
   4bb30:	ldrb	w0, [x3, #1]
   4bb34:	sub	w19, w19, #0x80
   4bb38:	add	x4, x3, #0x2
   4bb3c:	add	w19, w0, w19, lsl #8
   4bb40:	b	4babc <ZDICT_addEntropyTablesFromBuffer@@Base+0x459c>
   4bb44:	str	w12, [sp]
   4bb48:	add	x28, x28, x0
   4bb4c:	add	x6, x11, #0x48
   4bb50:	sub	x5, x21, x28
   4bb54:	mov	x4, x28
   4bb58:	ubfx	x1, x25, #4, #2
   4bb5c:	mov	x0, x27
   4bb60:	mov	w7, #0x5                   	// #5
   4bb64:	mov	w3, #0x8                   	// #8
   4bb68:	mov	w2, #0x1c                  	// #28
   4bb6c:	str	x11, [sp, #160]
   4bb70:	str	w12, [sp, #172]
   4bb74:	bl	4b934 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4414>
   4bb78:	cmn	x0, #0x78
   4bb7c:	b.hi	4bb20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4600>  // b.pmore
   4bb80:	ldr	w12, [sp, #172]
   4bb84:	add	x28, x28, x0
   4bb88:	ldr	x11, [sp, #160]
   4bb8c:	str	w12, [sp]
   4bb90:	sub	x5, x21, x28
   4bb94:	mov	x4, x28
   4bb98:	ubfx	x1, x25, #2, #2
   4bb9c:	mov	x0, x24
   4bba0:	add	x6, x11, #0x82
   4bba4:	mov	w7, #0x6                   	// #6
   4bba8:	mov	w3, #0x9                   	// #9
   4bbac:	mov	w2, #0x34                  	// #52
   4bbb0:	bl	4b934 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4414>
   4bbb4:	cmn	x0, #0x78
   4bbb8:	b.hi	4bb20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4600>  // b.pmore
   4bbbc:	add	x4, x28, x0
   4bbc0:	sub	x28, x4, x26
   4bbc4:	cmn	x28, #0x78
   4bbc8:	b.ls	4bbf4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x46d4>  // b.plast
   4bbcc:	mov	x0, x28
   4bbd0:	ldp	x29, x30, [sp, #16]
   4bbd4:	ldp	x19, x20, [sp, #32]
   4bbd8:	ldp	x21, x22, [sp, #48]
   4bbdc:	ldp	x23, x24, [sp, #64]
   4bbe0:	ldp	x25, x26, [sp, #80]
   4bbe4:	ldp	x27, x28, [sp, #96]
   4bbe8:	add	sp, sp, #0x130
   4bbec:	ret
   4bbf0:	mov	x28, #0x1                   	// #1
   4bbf4:	ldr	x0, [sp, #120]
   4bbf8:	ldr	x1, [sp, #152]
   4bbfc:	add	x21, x0, x1
   4bc00:	ldr	x0, [sp, #128]
   4bc04:	add	x0, x22, x0
   4bc08:	str	x0, [sp, #128]
   4bc0c:	add	x0, x23, #0x4, lsl #12
   4bc10:	str	wzr, [x0, #5208]
   4bc14:	cbz	w19, 4c030 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4b10>
   4bc18:	mov	x0, #0x1                   	// #1
   4bc1c:	add	x25, sp, #0xc8
   4bc20:	sub	x2, x20, x28
   4bc24:	add	x1, x26, x28
   4bc28:	stp	xzr, xzr, [sp, #176]
   4bc2c:	str	x0, [sp, #192]
   4bc30:	stp	x0, x0, [sp, #280]
   4bc34:	str	x0, [sp, #296]
   4bc38:	mov	x0, x25
   4bc3c:	bl	4b118 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bf8>
   4bc40:	cmn	x0, #0x78
   4bc44:	b.hi	4bb20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4600>  // b.pmore
   4bc48:	mov	x2, x23
   4bc4c:	mov	x1, x25
   4bc50:	add	x0, x25, #0x20
   4bc54:	bl	4afdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3abc>
   4bc58:	mov	x2, x27
   4bc5c:	mov	x1, x25
   4bc60:	add	x0, x25, #0x30
   4bc64:	bl	4afdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3abc>
   4bc68:	mov	x2, x24
   4bc6c:	add	x0, x25, #0x40
   4bc70:	mov	x1, x25
   4bc74:	bl	4afdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3abc>
   4bc78:	ldr	x8, [sp, #120]
   4bc7c:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   4bc80:	sub	x24, x21, #0x8
   4bc84:	add	x27, x0, #0xe38
   4bc88:	add	x0, x27, #0x2c4
   4bc8c:	str	x0, [sp, #152]
   4bc90:	mov	x0, x25
   4bc94:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4bc98:	cmp	w0, #0x2
   4bc9c:	b.hi	4c028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4b08>  // b.pmore
   4bca0:	cbnz	w19, 4bcd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x47b4>
   4bca4:	ldr	x0, [sp, #128]
   4bca8:	subs	x2, x0, x22
   4bcac:	b.cc	4bb20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4600>  // b.lo, b.ul, b.last
   4bcb0:	add	x28, x8, x2
   4bcb4:	cmp	x28, x21
   4bcb8:	b.hi	4c040 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4b20>  // b.pmore
   4bcbc:	mov	x1, x22
   4bcc0:	mov	x0, x8
   4bcc4:	bl	4460 <memcpy@plt>
   4bcc8:	ldr	x0, [sp, #120]
   4bccc:	sub	x28, x28, x0
   4bcd0:	b	4bbcc <ZDICT_addEntropyTablesFromBuffer@@Base+0x46ac>
   4bcd4:	ldp	x3, x0, [sp, #232]
   4bcd8:	sub	w19, w19, #0x1
   4bcdc:	ldp	x1, x2, [sp, #256]
   4bce0:	add	x3, x0, x3, lsl #2
   4bce4:	ldr	x0, [sp, #272]
   4bce8:	ldrb	w9, [x3, #2]
   4bcec:	ldrb	w12, [x3, #2]
   4bcf0:	add	x2, x0, x2, lsl #2
   4bcf4:	ldr	x0, [sp, #248]
   4bcf8:	ldrb	w14, [x2, #2]
   4bcfc:	ldrb	w15, [x2, #2]
   4bd00:	add	x0, x1, x0, lsl #2
   4bd04:	ldrb	w1, [x0, #2]
   4bd08:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   4bd0c:	add	x0, x0, #0xe38
   4bd10:	add	x4, x0, #0xec
   4bd14:	add	x3, x0, #0x17c
   4bd18:	ldr	w11, [x4, x9, lsl #2]
   4bd1c:	ldr	w13, [x3, x14, lsl #2]
   4bd20:	add	w10, w11, w13
   4bd24:	add	w10, w10, w1
   4bd28:	cbz	w1, 4bec4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x49a4>
   4bd2c:	add	x0, x0, #0x250
   4bd30:	mov	w2, w1
   4bd34:	ldr	w6, [x0, x2, lsl #2]
   4bd38:	mov	x0, x25
   4bd3c:	bl	4aef0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39d0>
   4bd40:	add	x0, x6, x0
   4bd44:	cmp	x0, #0x2
   4bd48:	b.hi	4becc <ZDICT_addEntropyTablesFromBuffer@@Base+0x49ac>  // b.pmore
   4bd4c:	cmp	w12, #0x0
   4bd50:	mov	x1, x0
   4bd54:	ccmp	x0, #0x1, #0x2, eq  // eq = none
   4bd58:	mov	x2, #0x1                   	// #1
   4bd5c:	sub	x0, x2, x0
   4bd60:	csel	x0, x0, x1, ls  // ls = plast
   4bd64:	ldr	x26, [sp, #280]
   4bd68:	cbz	x0, 4bd8c <ZDICT_addEntropyTablesFromBuffer@@Base+0x486c>
   4bd6c:	add	x1, x0, #0xa
   4bd70:	cmp	x0, x2
   4bd74:	ldr	x1, [x25, x1, lsl #3]
   4bd78:	b.eq	4bd84 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4864>  // b.none
   4bd7c:	ldr	x0, [sp, #288]
   4bd80:	str	x0, [sp, #296]
   4bd84:	stp	x1, x26, [sp, #280]
   4bd88:	mov	x26, x1
   4bd8c:	cmp	w15, #0x1f
   4bd90:	ldr	x0, [sp, #152]
   4bd94:	str	x26, [sp, #192]
   4bd98:	ldr	w6, [x0, x14, lsl #2]
   4bd9c:	add	w6, w6, #0x3
   4bda0:	b.ls	4bee4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x49c4>  // b.plast
   4bda4:	mov	w1, w13
   4bda8:	mov	x0, x25
   4bdac:	bl	4aef0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39d0>
   4bdb0:	add	x23, x6, x0
   4bdb4:	add	x0, x27, #0x398
   4bdb8:	str	x23, [sp, #184]
   4bdbc:	cmp	w12, #0xf
   4bdc0:	ldr	w20, [x0, x9, lsl #2]
   4bdc4:	b.ls	4beec <ZDICT_addEntropyTablesFromBuffer@@Base+0x49cc>  // b.plast
   4bdc8:	mov	w1, w11
   4bdcc:	mov	x0, x25
   4bdd0:	bl	4aef0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39d0>
   4bdd4:	add	x20, x20, x0
   4bdd8:	str	x20, [sp, #176]
   4bddc:	cmp	w10, #0x1f
   4bde0:	b.ls	4bdec <ZDICT_addEntropyTablesFromBuffer@@Base+0x48cc>  // b.plast
   4bde4:	mov	x0, x25
   4bde8:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4bdec:	mov	x1, x25
   4bdf0:	add	x0, x25, #0x20
   4bdf4:	bl	4b014 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3af4>
   4bdf8:	add	x28, x23, x20
   4bdfc:	mov	x1, x25
   4be00:	add	x0, x25, #0x40
   4be04:	bl	4b014 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3af4>
   4be08:	mov	x1, x25
   4be0c:	add	x0, x25, #0x30
   4be10:	bl	4b014 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3af4>
   4be14:	add	x3, x8, x20
   4be18:	add	x9, x8, x28
   4be1c:	cmp	x3, x24
   4be20:	b.hi	4c040 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4b20>  // b.pmore
   4be24:	cmp	x21, x9
   4be28:	b.cc	4c040 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4b20>  // b.lo, b.ul, b.last
   4be2c:	ldr	x0, [sp, #128]
   4be30:	add	x20, x22, x20
   4be34:	cmp	x0, x20
   4be38:	b.cc	4bb20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4600>  // b.lo, b.ul, b.last
   4be3c:	mov	x0, #0x0                   	// #0
   4be40:	ldr	x1, [x22, x0]
   4be44:	str	x1, [x8, x0]
   4be48:	add	x0, x0, #0x8
   4be4c:	add	x1, x8, x0
   4be50:	cmp	x3, x1
   4be54:	b.hi	4be40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4920>  // b.pmore
   4be58:	ldr	x0, [sp, #112]
   4be5c:	sub	x2, x3, x26
   4be60:	sub	x0, x3, x0
   4be64:	cmp	x0, x26
   4be68:	b.cs	4bf20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4a00>  // b.hs, b.nlast
   4be6c:	ldr	x0, [sp, #144]
   4be70:	sub	x0, x3, x0
   4be74:	cmp	x0, x26
   4be78:	b.cc	4bb20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4600>  // b.lo, b.ul, b.last
   4be7c:	ldr	x0, [sp, #112]
   4be80:	str	x9, [sp, #160]
   4be84:	sub	x22, x0, x2
   4be88:	ldr	x0, [sp, #136]
   4be8c:	ldr	x2, [sp, #136]
   4be90:	sub	x1, x0, x22
   4be94:	add	x0, x1, x23
   4be98:	cmp	x2, x0
   4be9c:	b.cc	4bef4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x49d4>  // b.lo, b.ul, b.last
   4bea0:	mov	x2, x23
   4bea4:	mov	x0, x3
   4bea8:	bl	4490 <memmove@plt>
   4beac:	ldr	x9, [sp, #160]
   4beb0:	cmn	x28, #0x78
   4beb4:	b.hi	4bbcc <ZDICT_addEntropyTablesFromBuffer@@Base+0x46ac>  // b.pmore
   4beb8:	mov	x22, x20
   4bebc:	mov	x8, x9
   4bec0:	b	4bc90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4770>
   4bec4:	mov	x0, #0x0                   	// #0
   4bec8:	b	4bd4c <ZDICT_addEntropyTablesFromBuffer@@Base+0x482c>
   4becc:	sub	x26, x0, #0x2
   4bed0:	ldr	x0, [sp, #288]
   4bed4:	str	x0, [sp, #296]
   4bed8:	ldr	x0, [sp, #280]
   4bedc:	stp	x26, x0, [sp, #280]
   4bee0:	b	4bd8c <ZDICT_addEntropyTablesFromBuffer@@Base+0x486c>
   4bee4:	mov	x0, #0x0                   	// #0
   4bee8:	b	4bdb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4890>
   4beec:	mov	x0, #0x0                   	// #0
   4bef0:	b	4bdd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x48b4>
   4bef4:	mov	x0, x3
   4bef8:	mov	x2, x22
   4befc:	bl	4490 <memmove@plt>
   4bf00:	add	x3, x0, x22
   4bf04:	cmp	x24, x3
   4bf08:	ldr	x9, [sp, #160]
   4bf0c:	b.cc	4bff0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ad0>  // b.lo, b.ul, b.last
   4bf10:	sub	x23, x23, x22
   4bf14:	cmp	x23, #0x2
   4bf18:	b.ls	4bff0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ad0>  // b.plast
   4bf1c:	ldr	x2, [sp, #112]
   4bf20:	cmp	x26, #0x7
   4bf24:	b.hi	4bff8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ad8>  // b.pmore
   4bf28:	ldrb	w1, [x2]
   4bf2c:	add	x0, x27, #0x428
   4bf30:	strb	w1, [x3]
   4bf34:	ldrb	w1, [x2, #1]
   4bf38:	strb	w1, [x3, #1]
   4bf3c:	ldrb	w1, [x2, #2]
   4bf40:	strb	w1, [x3, #2]
   4bf44:	ldrb	w1, [x2, #3]
   4bf48:	strb	w1, [x3, #3]
   4bf4c:	add	x1, x27, #0x448
   4bf50:	ldr	w1, [x1, x26, lsl #2]
   4bf54:	add	x8, x2, x1
   4bf58:	ldr	w1, [x2, x1]
   4bf5c:	ldrsw	x2, [x0, x26, lsl #2]
   4bf60:	str	w1, [x3, #4]
   4bf64:	sub	x2, x8, x2
   4bf68:	sub	x1, x21, #0xd
   4bf6c:	add	x0, x3, #0x8
   4bf70:	add	x7, x2, #0x8
   4bf74:	cmp	x9, x1
   4bf78:	b.ls	4c004 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ae4>  // b.plast
   4bf7c:	cmp	x24, x0
   4bf80:	b.ls	4bfb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4a90>  // b.plast
   4bf84:	sub	x0, x24, x0
   4bf88:	mov	x8, x24
   4bf8c:	mov	x1, #0x8                   	// #8
   4bf90:	ldr	x6, [x2, x1]
   4bf94:	str	x6, [x3, x1]
   4bf98:	add	x1, x1, #0x8
   4bf9c:	add	x6, x3, x1
   4bfa0:	cmp	x8, x6
   4bfa4:	b.hi	4bf90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4a70>  // b.pmore
   4bfa8:	add	x7, x7, x0
   4bfac:	mov	x0, x24
   4bfb0:	mov	x1, #0x0                   	// #0
   4bfb4:	add	x2, x0, x1
   4bfb8:	cmp	x9, x2
   4bfbc:	b.ls	4beb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4990>  // b.plast
   4bfc0:	ldrb	w2, [x7, x1]
   4bfc4:	strb	w2, [x0, x1]
   4bfc8:	add	x1, x1, #0x1
   4bfcc:	b	4bfb4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4a94>
   4bfd0:	ldr	x1, [sp, #112]
   4bfd4:	ldrb	w1, [x1, x0]
   4bfd8:	strb	w1, [x3, x0]
   4bfdc:	add	x0, x0, #0x1
   4bfe0:	add	x1, x3, x0
   4bfe4:	cmp	x9, x1
   4bfe8:	b.hi	4bfd0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ab0>  // b.pmore
   4bfec:	b	4beb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4990>
   4bff0:	mov	x0, #0x0                   	// #0
   4bff4:	b	4bfe0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ac0>
   4bff8:	ldr	x0, [x2]
   4bffc:	str	x0, [x3]
   4c000:	b	4bf68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4a48>
   4c004:	add	x6, x3, x23
   4c008:	mov	x0, #0x8                   	// #8
   4c00c:	ldr	x1, [x2, x0]
   4c010:	str	x1, [x3, x0]
   4c014:	add	x0, x0, #0x8
   4c018:	add	x1, x3, x0
   4c01c:	cmp	x6, x1
   4c020:	b.hi	4c00c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4aec>  // b.pmore
   4c024:	b	4beb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4990>
   4c028:	cbnz	w19, 4bb20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4600>
   4c02c:	b	4bca4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4784>
   4c030:	ldr	x8, [sp, #120]
   4c034:	b	4bca4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4784>
   4c038:	mov	x28, #0xffffffffffffffb8    	// #-72
   4c03c:	b	4bbcc <ZDICT_addEntropyTablesFromBuffer@@Base+0x46ac>
   4c040:	mov	x28, #0xffffffffffffffba    	// #-70
   4c044:	b	4bbcc <ZDICT_addEntropyTablesFromBuffer@@Base+0x46ac>
   4c048:	str	wzr, [x0]
   4c04c:	strh	wzr, [x0, #4]
   4c050:	strb	w1, [x0, #6]
   4c054:	strb	wzr, [x0, #7]
   4c058:	mov	x0, #0x0                   	// #0
   4c05c:	ret
   4c060:	mov	w2, #0x1                   	// #1
   4c064:	lsl	w3, w2, w1
   4c068:	cbz	w1, 4c0a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4b84>
   4c06c:	add	x0, x0, #0x4
   4c070:	sturh	w1, [x0, #-4]
   4c074:	sturh	w2, [x0, #-2]
   4c078:	mov	w2, #0x0                   	// #0
   4c07c:	cmp	w2, w3
   4c080:	b.ne	4c08c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4b6c>  // b.any
   4c084:	mov	x0, #0x0                   	// #0
   4c088:	ret
   4c08c:	add	x0, x0, #0x4
   4c090:	sturh	wzr, [x0, #-4]
   4c094:	sturb	w2, [x0, #-2]
   4c098:	add	w2, w2, #0x1
   4c09c:	sturb	w1, [x0, #-1]
   4c0a0:	b	4c07c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4b5c>
   4c0a4:	mov	x0, #0xffffffffffffffff    	// #-1
   4c0a8:	b	4c088 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4b68>
   4c0ac:	stp	x29, x30, [sp, #-80]!
   4c0b0:	mov	x10, x1
   4c0b4:	add	x10, x0, x10
   4c0b8:	mov	x29, sp
   4c0bc:	mov	x11, x0
   4c0c0:	ldrh	w0, [x4, #2]
   4c0c4:	mov	x1, x2
   4c0c8:	mov	x9, x4
   4c0cc:	mov	x2, x3
   4c0d0:	sub	x14, x10, #0x3
   4c0d4:	add	x8, sp, #0x30
   4c0d8:	cbz	w0, 4c20c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4cec>
   4c0dc:	mov	x0, x8
   4c0e0:	bl	4b118 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bf8>
   4c0e4:	cmn	x0, #0x78
   4c0e8:	b.hi	4c13c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4c1c>  // b.pmore
   4c0ec:	add	x12, sp, #0x10
   4c0f0:	mov	x2, x9
   4c0f4:	mov	x1, x8
   4c0f8:	mov	x0, x12
   4c0fc:	bl	4afdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3abc>
   4c100:	mov	x2, x9
   4c104:	add	x13, sp, #0x20
   4c108:	mov	x1, x8
   4c10c:	mov	x0, x13
   4c110:	bl	4afdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3abc>
   4c114:	mov	x9, x11
   4c118:	mov	x0, x8
   4c11c:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4c120:	cbnz	w0, 4c12c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4c0c>
   4c124:	cmp	x9, x14
   4c128:	b.cc	4c144 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4c24>  // b.lo, b.ul, b.last
   4c12c:	sub	x10, x10, #0x2
   4c130:	cmp	x10, x9
   4c134:	b.cs	4c188 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4c68>  // b.hs, b.nlast
   4c138:	mov	x0, #0xffffffffffffffba    	// #-70
   4c13c:	ldp	x29, x30, [sp], #80
   4c140:	ret
   4c144:	mov	x1, x8
   4c148:	mov	x0, x12
   4c14c:	bl	4b238 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d18>
   4c150:	strb	w0, [x9]
   4c154:	mov	x0, x13
   4c158:	bl	4b238 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d18>
   4c15c:	strb	w0, [x9, #1]
   4c160:	mov	x0, x12
   4c164:	bl	4b238 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d18>
   4c168:	strb	w0, [x9, #2]
   4c16c:	mov	x0, x13
   4c170:	bl	4b238 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d18>
   4c174:	add	x9, x9, #0x4
   4c178:	sturb	w0, [x9, #-1]
   4c17c:	b	4c118 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4bf8>
   4c180:	mov	x9, x6
   4c184:	b	4c130 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4c10>
   4c188:	mov	x1, x8
   4c18c:	mov	x0, x12
   4c190:	bl	4b238 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d18>
   4c194:	strb	w0, [x9]
   4c198:	mov	x0, x8
   4c19c:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4c1a0:	cmp	w0, #0x3
   4c1a4:	b.ne	4c1c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ca4>  // b.any
   4c1a8:	mov	x1, x8
   4c1ac:	mov	x0, x13
   4c1b0:	bl	4b238 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d18>
   4c1b4:	add	x1, x9, #0x2
   4c1b8:	strb	w0, [x9, #1]
   4c1bc:	sub	x0, x1, x11
   4c1c0:	b	4c13c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4c1c>
   4c1c4:	add	x0, x9, #0x1
   4c1c8:	cmp	x10, x0
   4c1cc:	b.cc	4c138 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4c18>  // b.lo, b.ul, b.last
   4c1d0:	mov	x1, x8
   4c1d4:	mov	x0, x13
   4c1d8:	bl	4b238 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d18>
   4c1dc:	add	x6, x9, #0x2
   4c1e0:	sturb	w0, [x6, #-1]
   4c1e4:	mov	x0, x8
   4c1e8:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4c1ec:	cmp	w0, #0x3
   4c1f0:	b.ne	4c180 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4c60>  // b.any
   4c1f4:	mov	x1, x8
   4c1f8:	mov	x0, x12
   4c1fc:	bl	4b238 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d18>
   4c200:	add	x1, x9, #0x3
   4c204:	strb	w0, [x9, #2]
   4c208:	b	4c1bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x4c9c>
   4c20c:	mov	x0, x8
   4c210:	bl	4b118 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bf8>
   4c214:	cmn	x0, #0x78
   4c218:	b.hi	4c13c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4c1c>  // b.pmore
   4c21c:	add	x12, sp, #0x10
   4c220:	mov	x2, x9
   4c224:	mov	x1, x8
   4c228:	mov	x0, x12
   4c22c:	bl	4afdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3abc>
   4c230:	mov	x2, x9
   4c234:	add	x13, sp, #0x20
   4c238:	mov	x1, x8
   4c23c:	mov	x0, x13
   4c240:	bl	4afdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3abc>
   4c244:	mov	x9, x11
   4c248:	mov	x0, x8
   4c24c:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4c250:	cbnz	w0, 4c25c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4d3c>
   4c254:	cmp	x9, x14
   4c258:	b.cc	4c298 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4d78>  // b.lo, b.ul, b.last
   4c25c:	sub	x10, x10, #0x2
   4c260:	cmp	x10, x9
   4c264:	b.cc	4c138 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4c18>  // b.lo, b.ul, b.last
   4c268:	mov	x1, x8
   4c26c:	mov	x0, x12
   4c270:	bl	4b04c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3b2c>
   4c274:	strb	w0, [x9]
   4c278:	mov	x0, x8
   4c27c:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4c280:	cmp	w0, #0x3
   4c284:	b.ne	4c2e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4dc8>  // b.any
   4c288:	mov	x1, x8
   4c28c:	mov	x0, x13
   4c290:	bl	4b04c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3b2c>
   4c294:	b	4c1b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4c94>
   4c298:	mov	x1, x8
   4c29c:	mov	x0, x12
   4c2a0:	bl	4b04c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3b2c>
   4c2a4:	strb	w0, [x9]
   4c2a8:	mov	x1, x8
   4c2ac:	mov	x0, x13
   4c2b0:	bl	4b04c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3b2c>
   4c2b4:	strb	w0, [x9, #1]
   4c2b8:	mov	x1, x8
   4c2bc:	mov	x0, x12
   4c2c0:	bl	4b04c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3b2c>
   4c2c4:	strb	w0, [x9, #2]
   4c2c8:	mov	x1, x8
   4c2cc:	mov	x0, x13
   4c2d0:	bl	4b04c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3b2c>
   4c2d4:	add	x9, x9, #0x4
   4c2d8:	sturb	w0, [x9, #-1]
   4c2dc:	b	4c248 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4d28>
   4c2e0:	mov	x9, x6
   4c2e4:	b	4c260 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4d40>
   4c2e8:	add	x0, x9, #0x1
   4c2ec:	cmp	x10, x0
   4c2f0:	b.cc	4c138 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4c18>  // b.lo, b.ul, b.last
   4c2f4:	mov	x1, x8
   4c2f8:	mov	x0, x13
   4c2fc:	bl	4b04c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3b2c>
   4c300:	add	x6, x9, #0x2
   4c304:	sturb	w0, [x6, #-1]
   4c308:	mov	x0, x8
   4c30c:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4c310:	cmp	w0, #0x3
   4c314:	b.ne	4c2e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4dc0>  // b.any
   4c318:	mov	x1, x8
   4c31c:	mov	x0, x12
   4c320:	bl	4b04c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3b2c>
   4c324:	b	4c200 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ce0>
   4c328:	mov	x12, #0x4250                	// #16976
   4c32c:	sub	sp, sp, x12
   4c330:	cmp	x3, #0x1
   4c334:	stp	x29, x30, [sp]
   4c338:	mov	x29, sp
   4c33c:	stp	x19, x20, [sp, #16]
   4c340:	stp	x21, x22, [sp, #32]
   4c344:	mov	x21, x0
   4c348:	mov	w0, #0xff                  	// #255
   4c34c:	stp	x23, x24, [sp, #48]
   4c350:	str	w0, [sp, #68]
   4c354:	b.hi	4c37c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4e5c>  // b.pmore
   4c358:	mov	x18, #0xffffffffffffffb8    	// #-72
   4c35c:	mov	x0, x18
   4c360:	mov	x12, #0x4250                	// #16976
   4c364:	ldp	x29, x30, [sp]
   4c368:	ldp	x19, x20, [sp, #16]
   4c36c:	ldp	x21, x22, [sp, #32]
   4c370:	ldp	x23, x24, [sp, #48]
   4c374:	add	sp, sp, x12
   4c378:	ret
   4c37c:	add	x24, sp, #0x48
   4c380:	mov	x4, x3
   4c384:	mov	x22, x1
   4c388:	mov	x20, x2
   4c38c:	mov	x19, x3
   4c390:	add	x1, sp, #0x44
   4c394:	mov	x3, x2
   4c398:	mov	x0, x24
   4c39c:	add	x2, sp, #0x40
   4c3a0:	bl	4b55c <ZDICT_addEntropyTablesFromBuffer@@Base+0x403c>
   4c3a4:	mov	x18, x0
   4c3a8:	cmn	x0, #0x78
   4c3ac:	b.hi	4c35c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4e3c>  // b.pmore
   4c3b0:	cmp	x19, x0
   4c3b4:	b.ls	4c358 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4e38>  // b.plast
   4c3b8:	ldp	w3, w2, [sp, #64]
   4c3bc:	add	x23, sp, #0x248
   4c3c0:	mov	x1, x24
   4c3c4:	mov	x0, x23
   4c3c8:	bl	4b7d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x42b4>
   4c3cc:	cmn	x0, #0x78
   4c3d0:	b.hi	4c3ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ecc>  // b.pmore
   4c3d4:	mov	x4, x23
   4c3d8:	sub	x3, x19, x18
   4c3dc:	add	x2, x20, x18
   4c3e0:	mov	x1, x22
   4c3e4:	mov	x0, x21
   4c3e8:	bl	4c0ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x4b8c>
   4c3ec:	mov	x18, x0
   4c3f0:	b	4c35c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4e3c>
   4c3f4:	stp	x29, x30, [sp, #-64]!
   4c3f8:	mov	x29, sp
   4c3fc:	stp	x19, x20, [sp, #16]
   4c400:	stp	x21, x22, [sp, #32]
   4c404:	stp	x23, x24, [sp, #48]
   4c408:	cbz	x5, 4c5bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x509c>
   4c40c:	ldrb	w20, [x4]
   4c410:	mov	x23, x0
   4c414:	mov	x21, x1
   4c418:	mov	x22, x2
   4c41c:	mov	x24, x3
   4c420:	cmp	x20, #0x7f
   4c424:	b.ls	4c544 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5024>  // b.plast
   4c428:	cmp	x20, #0xf1
   4c42c:	b.ls	4c4f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4fd0>  // b.plast
   4c430:	adrp	x3, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   4c434:	add	x3, x3, #0xe38
   4c438:	add	x3, x3, x20, lsl #2
   4c43c:	mov	x2, #0x100                 	// #256
   4c440:	mov	w1, #0x1                   	// #1
   4c444:	mov	x20, #0x0                   	// #0
   4c448:	ldr	w19, [x3, #160]
   4c44c:	bl	4700 <memset@plt>
   4c450:	mov	w2, #0x0                   	// #0
   4c454:	mov	w0, #0x0                   	// #0
   4c458:	mov	w5, #0x1                   	// #1
   4c45c:	stp	xzr, xzr, [x21]
   4c460:	stp	xzr, xzr, [x21, #16]
   4c464:	stp	xzr, xzr, [x21, #32]
   4c468:	stp	xzr, xzr, [x21, #48]
   4c46c:	str	wzr, [x21, #64]
   4c470:	mov	w4, w2
   4c474:	cmp	x19, w2, uxtw
   4c478:	b.hi	4c584 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5064>  // b.pmore
   4c47c:	cbz	w0, 4c590 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5070>
   4c480:	clz	w1, w0
   4c484:	eor	w1, w1, #0x1f
   4c488:	add	w1, w1, #0x1
   4c48c:	cmp	w1, #0x10
   4c490:	b.hi	4c590 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5070>  // b.pmore
   4c494:	mov	w2, #0x1                   	// #1
   4c498:	str	w1, [x24]
   4c49c:	lsl	w1, w2, w1
   4c4a0:	sub	w1, w1, w0
   4c4a4:	clz	w0, w1
   4c4a8:	eor	w0, w0, #0x1f
   4c4ac:	lsl	w2, w2, w0
   4c4b0:	cmp	w1, w2
   4c4b4:	b.ne	4c590 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5070>  // b.any
   4c4b8:	add	w0, w0, #0x1
   4c4bc:	strb	w0, [x23, x19]
   4c4c0:	ubfiz	x0, x0, #2, #7
   4c4c4:	ldr	w1, [x21, x0]
   4c4c8:	add	w1, w1, #0x1
   4c4cc:	str	w1, [x21, x0]
   4c4d0:	ldr	w0, [x21, #4]
   4c4d4:	cmp	w0, #0x1
   4c4d8:	b.ls	4c590 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5070>  // b.plast
   4c4dc:	tbnz	w0, #0, 4c590 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5070>
   4c4e0:	add	w19, w19, #0x1
   4c4e4:	str	w19, [x22]
   4c4e8:	add	x19, x20, #0x1
   4c4ec:	b	4c56c <ZDICT_addEntropyTablesFromBuffer@@Base+0x504c>
   4c4f0:	sub	x19, x20, #0x7f
   4c4f4:	sub	x20, x20, #0x7e
   4c4f8:	lsr	x20, x20, #1
   4c4fc:	add	x0, x20, #0x1
   4c500:	cmp	x5, x0
   4c504:	b.cc	4c5bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x509c>  // b.lo, b.ul, b.last
   4c508:	mov	w0, #0x0                   	// #0
   4c50c:	mov	w3, w0
   4c510:	cmp	x19, w0, uxtw
   4c514:	b.ls	4c450 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4f30>  // b.plast
   4c518:	lsr	w1, w0, #1
   4c51c:	add	x1, x1, #0x1
   4c520:	ldrb	w2, [x4, x1]
   4c524:	lsr	w2, w2, #4
   4c528:	strb	w2, [x23, x3]
   4c52c:	add	w2, w0, #0x1
   4c530:	add	w0, w0, #0x2
   4c534:	ldrb	w1, [x4, x1]
   4c538:	and	w1, w1, #0xf
   4c53c:	strb	w1, [x23, x2]
   4c540:	b	4c50c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4fec>
   4c544:	add	x1, x20, #0x1
   4c548:	cmp	x5, x1
   4c54c:	b.cc	4c5bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x509c>  // b.lo, b.ul, b.last
   4c550:	mov	x3, x20
   4c554:	add	x2, x4, #0x1
   4c558:	mov	x1, #0xff                  	// #255
   4c55c:	bl	4c328 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4e08>
   4c560:	mov	x19, x0
   4c564:	cmn	x0, #0x78
   4c568:	b.ls	4c450 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4f30>  // b.plast
   4c56c:	mov	x0, x19
   4c570:	ldp	x19, x20, [sp, #16]
   4c574:	ldp	x21, x22, [sp, #32]
   4c578:	ldp	x23, x24, [sp, #48]
   4c57c:	ldp	x29, x30, [sp], #64
   4c580:	ret
   4c584:	ldrb	w1, [x23, x4]
   4c588:	cmp	w1, #0xf
   4c58c:	b.ls	4c598 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5078>  // b.plast
   4c590:	mov	x19, #0xffffffffffffffec    	// #-20
   4c594:	b	4c56c <ZDICT_addEntropyTablesFromBuffer@@Base+0x504c>
   4c598:	ubfiz	x1, x1, #2, #8
   4c59c:	add	w2, w2, #0x1
   4c5a0:	ldr	w3, [x21, x1]
   4c5a4:	add	w3, w3, #0x1
   4c5a8:	str	w3, [x21, x1]
   4c5ac:	ldrb	w1, [x23, x4]
   4c5b0:	lsl	w1, w5, w1
   4c5b4:	add	w0, w0, w1, asr #1
   4c5b8:	b	4c470 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4f50>
   4c5bc:	mov	x19, #0xffffffffffffffb8    	// #-72
   4c5c0:	b	4c56c <ZDICT_addEntropyTablesFromBuffer@@Base+0x504c>
   4c5c4:	stp	x29, x30, [sp, #-384]!
   4c5c8:	mov	x5, x2
   4c5cc:	mov	x4, x1
   4c5d0:	mov	x29, sp
   4c5d4:	stp	x19, x20, [sp, #16]
   4c5d8:	add	x20, sp, #0x38
   4c5dc:	mov	x19, x0
   4c5e0:	str	x21, [sp, #32]
   4c5e4:	add	x21, sp, #0x80
   4c5e8:	add	x3, sp, #0x30
   4c5ec:	add	x2, sp, #0x34
   4c5f0:	mov	x1, x20
   4c5f4:	mov	x0, x21
   4c5f8:	stp	wzr, wzr, [sp, #48]
   4c5fc:	bl	4c3f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ed4>
   4c600:	cmn	x0, #0x78
   4c604:	b.hi	4c64c <ZDICT_addEntropyTablesFromBuffer@@Base+0x512c>  // b.pmore
   4c608:	ldrh	w1, [x19]
   4c60c:	ldr	w2, [sp, #48]
   4c610:	cmp	w1, w2
   4c614:	b.cc	4c6c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x51a0>  // b.lo, b.ul, b.last
   4c618:	mov	x3, x20
   4c61c:	mov	w1, #0x0                   	// #0
   4c620:	mov	w4, #0x0                   	// #0
   4c624:	strh	w2, [x19]
   4c628:	add	x3, x3, #0x4
   4c62c:	cmp	w2, w1
   4c630:	b.ne	4c65c <ZDICT_addEntropyTablesFromBuffer@@Base+0x513c>  // b.any
   4c634:	ldr	w7, [sp, #52]
   4c638:	mov	w8, #0x1                   	// #1
   4c63c:	add	w3, w2, w8
   4c640:	mov	x4, #0x0                   	// #0
   4c644:	cmp	w7, w4
   4c648:	b.hi	4c674 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5154>  // b.pmore
   4c64c:	ldp	x19, x20, [sp, #16]
   4c650:	ldr	x21, [sp, #32]
   4c654:	ldp	x29, x30, [sp], #384
   4c658:	ret
   4c65c:	ldr	w5, [x3]
   4c660:	str	w4, [x3]
   4c664:	lsl	w5, w5, w1
   4c668:	add	w1, w1, #0x1
   4c66c:	add	w4, w5, w4
   4c670:	b	4c628 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5108>
   4c674:	ldrb	w9, [x21, x4]
   4c678:	and	w10, w4, #0xff
   4c67c:	sub	w6, w3, w9
   4c680:	ubfiz	x2, x9, #2, #8
   4c684:	lsl	w1, w8, w9
   4c688:	and	w6, w6, #0xff
   4c68c:	ldr	w2, [x20, x2]
   4c690:	add	x5, x19, w2, uxtw #1
   4c694:	add	w1, w2, w1, asr #1
   4c698:	add	x5, x5, #0x2
   4c69c:	cmp	w1, w2
   4c6a0:	b.hi	4c6b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5190>  // b.pmore
   4c6a4:	add	x4, x4, #0x1
   4c6a8:	str	w1, [x20, x9, lsl #2]
   4c6ac:	b	4c644 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5124>
   4c6b0:	add	w2, w2, #0x1
   4c6b4:	strb	w10, [x5]
   4c6b8:	strb	w6, [x5, #1]
   4c6bc:	b	4c698 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5178>
   4c6c0:	mov	x0, #0xffffffffffffffd4    	// #-44
   4c6c4:	b	4c64c <ZDICT_addEntropyTablesFromBuffer@@Base+0x512c>
   4c6c8:	stp	x29, x30, [sp, #-48]!
   4c6cc:	mov	x8, x0
   4c6d0:	mov	x13, x1
   4c6d4:	mov	x29, sp
   4c6d8:	ldrh	w10, [x4]
   4c6dc:	add	x14, sp, #0x10
   4c6e0:	mov	x9, x4
   4c6e4:	mov	x1, x2
   4c6e8:	mov	x0, x14
   4c6ec:	mov	x2, x3
   4c6f0:	bl	4b118 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bf8>
   4c6f4:	cmn	x0, #0x78
   4c6f8:	b.hi	4c728 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5208>  // b.pmore
   4c6fc:	mov	w4, w10
   4c700:	add	x3, x9, #0x2
   4c704:	add	x2, x8, x13
   4c708:	mov	x1, x14
   4c70c:	mov	x0, x8
   4c710:	bl	4b2b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d90>
   4c714:	mov	x0, x14
   4c718:	bl	4afb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a98>
   4c71c:	cmp	w0, #0x0
   4c720:	mov	x0, #0xffffffffffffffec    	// #-20
   4c724:	csel	x0, x13, x0, ne  // ne = any
   4c728:	ldp	x29, x30, [sp], #48
   4c72c:	ret
   4c730:	mov	x12, #0x2050                	// #8272
   4c734:	sub	sp, sp, x12
   4c738:	stp	x29, x30, [sp]
   4c73c:	mov	x29, sp
   4c740:	str	x23, [sp, #48]
   4c744:	add	x23, sp, #0x48
   4c748:	stp	x19, x20, [sp, #16]
   4c74c:	mov	x19, x3
   4c750:	mov	x20, x2
   4c754:	mov	x2, #0x2002                	// #8194
   4c758:	stp	x21, x22, [sp, #32]
   4c75c:	mov	x21, x0
   4c760:	mov	x22, x1
   4c764:	mov	x0, x23
   4c768:	mov	w1, #0x0                   	// #0
   4c76c:	bl	4700 <memset@plt>
   4c770:	mov	w0, #0xc                   	// #12
   4c774:	mov	x2, x19
   4c778:	mov	x1, x20
   4c77c:	strh	w0, [sp, #72]
   4c780:	mov	x0, x23
   4c784:	bl	4c5c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x50a4>
   4c788:	cmn	x0, #0x78
   4c78c:	b.hi	4c7b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5290>  // b.pmore
   4c790:	cmp	x19, x0
   4c794:	b.ls	4c7cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x52ac>  // b.plast
   4c798:	sub	x3, x19, x0
   4c79c:	add	x2, x20, x0
   4c7a0:	mov	x4, x23
   4c7a4:	mov	x1, x22
   4c7a8:	mov	x0, x21
   4c7ac:	bl	4c6c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x51a8>
   4c7b0:	mov	x12, #0x2050                	// #8272
   4c7b4:	ldp	x29, x30, [sp]
   4c7b8:	ldp	x19, x20, [sp, #16]
   4c7bc:	ldp	x21, x22, [sp, #32]
   4c7c0:	ldr	x23, [sp, #48]
   4c7c4:	add	sp, sp, x12
   4c7c8:	ret
   4c7cc:	mov	x0, #0xffffffffffffffb8    	// #-72
   4c7d0:	b	4c7b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5290>
   4c7d4:	cmp	x3, #0x9
   4c7d8:	b.ls	4cb70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5650>  // b.plast
   4c7dc:	ldrh	w18, [x2]
   4c7e0:	mov	x9, x0
   4c7e4:	ldrh	w12, [x2, #2]
   4c7e8:	sub	x10, x3, #0x6
   4c7ec:	ldrh	w11, [x2, #4]
   4c7f0:	add	x0, x18, x12
   4c7f4:	sub	x10, x10, x0
   4c7f8:	sub	x10, x10, x11
   4c7fc:	cmp	x3, x10
   4c800:	b.cc	4cb70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5650>  // b.lo, b.ul, b.last
   4c804:	stp	x29, x30, [sp, #-224]!
   4c808:	add	x8, x2, #0x6
   4c80c:	mov	x15, x1
   4c810:	mov	x29, sp
   4c814:	ldrh	w14, [x4]
   4c818:	mov	x13, x4
   4c81c:	stp	x19, x20, [sp, #16]
   4c820:	add	x19, sp, #0x60
   4c824:	mov	x2, x18
   4c828:	mov	x1, x8
   4c82c:	mov	x0, x19
   4c830:	stp	x21, x22, [sp, #32]
   4c834:	stp	x23, x24, [sp, #48]
   4c838:	stp	x25, x26, [sp, #64]
   4c83c:	str	x27, [sp, #80]
   4c840:	bl	4b118 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bf8>
   4c844:	cmn	x0, #0x78
   4c848:	b.hi	4c914 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53f4>  // b.pmore
   4c84c:	add	x8, x8, x18
   4c850:	add	x21, sp, #0x80
   4c854:	mov	x2, x12
   4c858:	mov	x1, x8
   4c85c:	mov	x0, x21
   4c860:	bl	4b118 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bf8>
   4c864:	cmn	x0, #0x78
   4c868:	b.hi	4c914 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53f4>  // b.pmore
   4c86c:	add	x8, x8, x12
   4c870:	add	x20, sp, #0xa0
   4c874:	mov	x2, x11
   4c878:	mov	x1, x8
   4c87c:	mov	x0, x20
   4c880:	bl	4b118 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bf8>
   4c884:	cmn	x0, #0x78
   4c888:	b.hi	4c914 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53f4>  // b.pmore
   4c88c:	add	x18, sp, #0xc0
   4c890:	mov	x2, x10
   4c894:	add	x1, x8, x11
   4c898:	mov	x0, x18
   4c89c:	bl	4b118 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bf8>
   4c8a0:	cmn	x0, #0x78
   4c8a4:	b.hi	4c914 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53f4>  // b.pmore
   4c8a8:	add	x25, x15, #0x3
   4c8ac:	add	x13, x13, #0x2
   4c8b0:	add	x27, x9, x15
   4c8b4:	mov	x0, x19
   4c8b8:	add	x7, x9, x25, lsr #2
   4c8bc:	add	x26, x7, x25, lsr #2
   4c8c0:	add	x25, x26, x25, lsr #2
   4c8c4:	mov	x23, x26
   4c8c8:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4c8cc:	mov	w8, w0
   4c8d0:	mov	x0, x21
   4c8d4:	mov	x22, x25
   4c8d8:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4c8dc:	orr	w8, w8, w0
   4c8e0:	mov	x0, x20
   4c8e4:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4c8e8:	mov	w6, w0
   4c8ec:	mov	x0, x18
   4c8f0:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4c8f4:	orr	w0, w6, w0
   4c8f8:	orr	w0, w0, w8
   4c8fc:	mov	x24, x7
   4c900:	sub	x10, x27, #0x7
   4c904:	cbz	w0, 4c930 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5410>
   4c908:	cmp	x9, x7
   4c90c:	b.ls	4cac0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x55a0>  // b.plast
   4c910:	mov	x0, #0xffffffffffffffec    	// #-20
   4c914:	ldp	x19, x20, [sp, #16]
   4c918:	ldp	x21, x22, [sp, #32]
   4c91c:	ldp	x23, x24, [sp, #48]
   4c920:	ldp	x25, x26, [sp, #64]
   4c924:	ldr	x27, [sp, #80]
   4c928:	ldp	x29, x30, [sp], #224
   4c92c:	ret
   4c930:	cmp	x22, x10
   4c934:	b.cs	4c908 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53e8>  // b.hs, b.nlast
   4c938:	mov	w2, w14
   4c93c:	mov	x1, x13
   4c940:	mov	x0, x19
   4c944:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4c948:	strb	w0, [x9]
   4c94c:	mov	w2, w14
   4c950:	mov	x1, x13
   4c954:	mov	x0, x21
   4c958:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4c95c:	strb	w0, [x24]
   4c960:	mov	w2, w14
   4c964:	mov	x1, x13
   4c968:	mov	x0, x20
   4c96c:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4c970:	strb	w0, [x23]
   4c974:	mov	w2, w14
   4c978:	mov	x1, x13
   4c97c:	mov	x0, x18
   4c980:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4c984:	strb	w0, [x22]
   4c988:	mov	w2, w14
   4c98c:	mov	x1, x13
   4c990:	mov	x0, x19
   4c994:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4c998:	strb	w0, [x9, #1]
   4c99c:	mov	w2, w14
   4c9a0:	mov	x1, x13
   4c9a4:	mov	x0, x21
   4c9a8:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4c9ac:	strb	w0, [x24, #1]
   4c9b0:	mov	w2, w14
   4c9b4:	mov	x1, x13
   4c9b8:	mov	x0, x20
   4c9bc:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4c9c0:	strb	w0, [x23, #1]
   4c9c4:	mov	w2, w14
   4c9c8:	mov	x1, x13
   4c9cc:	mov	x0, x18
   4c9d0:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4c9d4:	strb	w0, [x22, #1]
   4c9d8:	mov	w2, w14
   4c9dc:	mov	x1, x13
   4c9e0:	mov	x0, x19
   4c9e4:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4c9e8:	strb	w0, [x9, #2]
   4c9ec:	mov	w2, w14
   4c9f0:	mov	x1, x13
   4c9f4:	mov	x0, x21
   4c9f8:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4c9fc:	strb	w0, [x24, #2]
   4ca00:	mov	w2, w14
   4ca04:	mov	x1, x13
   4ca08:	mov	x0, x20
   4ca0c:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4ca10:	strb	w0, [x23, #2]
   4ca14:	mov	w2, w14
   4ca18:	mov	x1, x13
   4ca1c:	mov	x0, x18
   4ca20:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4ca24:	add	x9, x9, #0x4
   4ca28:	strb	w0, [x22, #2]
   4ca2c:	add	x24, x24, #0x4
   4ca30:	mov	w2, w14
   4ca34:	mov	x1, x13
   4ca38:	mov	x0, x19
   4ca3c:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4ca40:	sturb	w0, [x9, #-1]
   4ca44:	add	x23, x23, #0x4
   4ca48:	mov	w2, w14
   4ca4c:	mov	x1, x13
   4ca50:	mov	x0, x21
   4ca54:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4ca58:	sturb	w0, [x24, #-1]
   4ca5c:	add	x22, x22, #0x4
   4ca60:	mov	w2, w14
   4ca64:	mov	x1, x13
   4ca68:	mov	x0, x20
   4ca6c:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4ca70:	sturb	w0, [x23, #-1]
   4ca74:	mov	w2, w14
   4ca78:	mov	x1, x13
   4ca7c:	mov	x0, x18
   4ca80:	bl	4b27c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d5c>
   4ca84:	sturb	w0, [x22, #-1]
   4ca88:	mov	x0, x19
   4ca8c:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4ca90:	mov	w8, w0
   4ca94:	mov	x0, x21
   4ca98:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4ca9c:	orr	w8, w8, w0
   4caa0:	mov	x0, x20
   4caa4:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4caa8:	mov	w6, w0
   4caac:	mov	x0, x18
   4cab0:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4cab4:	orr	w0, w6, w0
   4cab8:	orr	w0, w0, w8
   4cabc:	b	4c904 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53e4>
   4cac0:	cmp	x24, x26
   4cac4:	b.hi	4c910 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53f0>  // b.pmore
   4cac8:	cmp	x23, x25
   4cacc:	b.hi	4c910 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53f0>  // b.pmore
   4cad0:	mov	w4, w14
   4cad4:	mov	x3, x13
   4cad8:	mov	x2, x7
   4cadc:	mov	x0, x9
   4cae0:	mov	x1, x19
   4cae4:	bl	4b2b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d90>
   4cae8:	mov	x2, x26
   4caec:	mov	w4, w14
   4caf0:	mov	x3, x13
   4caf4:	mov	x1, x21
   4caf8:	mov	x0, x24
   4cafc:	bl	4b2b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d90>
   4cb00:	mov	x2, x25
   4cb04:	mov	w4, w14
   4cb08:	mov	x3, x13
   4cb0c:	mov	x1, x20
   4cb10:	mov	x0, x23
   4cb14:	bl	4b2b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d90>
   4cb18:	mov	x2, x27
   4cb1c:	mov	w4, w14
   4cb20:	mov	x3, x13
   4cb24:	mov	x1, x18
   4cb28:	mov	x0, x22
   4cb2c:	bl	4b2b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d90>
   4cb30:	mov	x0, x19
   4cb34:	bl	4afb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a98>
   4cb38:	mov	w3, w0
   4cb3c:	mov	x0, x21
   4cb40:	bl	4afb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a98>
   4cb44:	and	w3, w3, w0
   4cb48:	mov	x0, x20
   4cb4c:	bl	4afb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a98>
   4cb50:	mov	w4, w0
   4cb54:	mov	x0, x18
   4cb58:	bl	4afb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a98>
   4cb5c:	and	w4, w4, w0
   4cb60:	tst	w4, w3
   4cb64:	b.eq	4c910 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53f0>  // b.none
   4cb68:	mov	x0, x15
   4cb6c:	b	4c914 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53f4>
   4cb70:	mov	x0, #0xffffffffffffffec    	// #-20
   4cb74:	ret
   4cb78:	mov	x12, #0x2050                	// #8272
   4cb7c:	sub	sp, sp, x12
   4cb80:	stp	x29, x30, [sp]
   4cb84:	mov	x29, sp
   4cb88:	str	x23, [sp, #48]
   4cb8c:	add	x23, sp, #0x48
   4cb90:	stp	x19, x20, [sp, #16]
   4cb94:	mov	x19, x3
   4cb98:	mov	x20, x2
   4cb9c:	mov	x2, #0x2002                	// #8194
   4cba0:	stp	x21, x22, [sp, #32]
   4cba4:	mov	x21, x0
   4cba8:	mov	x22, x1
   4cbac:	mov	x0, x23
   4cbb0:	mov	w1, #0x0                   	// #0
   4cbb4:	bl	4700 <memset@plt>
   4cbb8:	mov	w0, #0xc                   	// #12
   4cbbc:	mov	x2, x19
   4cbc0:	mov	x1, x20
   4cbc4:	strh	w0, [sp, #72]
   4cbc8:	mov	x0, x23
   4cbcc:	bl	4c5c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x50a4>
   4cbd0:	cmn	x0, #0x78
   4cbd4:	b.hi	4cbf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x56d8>  // b.pmore
   4cbd8:	cmp	x19, x0
   4cbdc:	b.ls	4cc14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x56f4>  // b.plast
   4cbe0:	sub	x3, x19, x0
   4cbe4:	add	x2, x20, x0
   4cbe8:	mov	x4, x23
   4cbec:	mov	x1, x22
   4cbf0:	mov	x0, x21
   4cbf4:	bl	4c7d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x52b4>
   4cbf8:	mov	x12, #0x2050                	// #8272
   4cbfc:	ldp	x29, x30, [sp]
   4cc00:	ldp	x19, x20, [sp, #16]
   4cc04:	ldp	x21, x22, [sp, #32]
   4cc08:	ldr	x23, [sp, #48]
   4cc0c:	add	sp, sp, x12
   4cc10:	ret
   4cc14:	mov	x0, #0xffffffffffffffb8    	// #-72
   4cc18:	b	4cbf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x56d8>
   4cc1c:	sub	sp, sp, #0x920
   4cc20:	stp	x29, x30, [sp]
   4cc24:	mov	x29, sp
   4cc28:	stp	x23, x24, [sp, #48]
   4cc2c:	mov	x24, x0
   4cc30:	add	x0, sp, #0x250
   4cc34:	stp	x19, x20, [sp, #16]
   4cc38:	ldr	w19, [x24]
   4cc3c:	stp	x21, x22, [sp, #32]
   4cc40:	cmp	w19, #0x10
   4cc44:	stp	x25, x26, [sp, #64]
   4cc48:	stp	x27, x28, [sp, #80]
   4cc4c:	stp	xzr, xzr, [x0, #-184]
   4cc50:	stp	xzr, xzr, [x0, #-168]
   4cc54:	stp	xzr, xzr, [x0, #-152]
   4cc58:	stp	xzr, xzr, [x0, #-136]
   4cc5c:	stp	xzr, xzr, [sp, #192]
   4cc60:	stp	xzr, xzr, [sp, #208]
   4cc64:	stp	xzr, xzr, [sp, #224]
   4cc68:	stp	xzr, xzr, [sp, #240]
   4cc6c:	str	wzr, [sp, #256]
   4cc70:	str	xzr, [sp, #472]
   4cc74:	b.ls	4cca0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5780>  // b.plast
   4cc78:	mov	x25, #0xffffffffffffffd4    	// #-44
   4cc7c:	mov	x0, x25
   4cc80:	ldp	x29, x30, [sp]
   4cc84:	ldp	x19, x20, [sp, #16]
   4cc88:	ldp	x21, x22, [sp, #32]
   4cc8c:	ldp	x23, x24, [sp, #48]
   4cc90:	ldp	x25, x26, [sp, #64]
   4cc94:	ldp	x27, x28, [sp, #80]
   4cc98:	add	sp, sp, #0x920
   4cc9c:	ret
   4cca0:	add	x21, sp, #0xc0
   4cca4:	add	x23, sp, #0x1e0
   4cca8:	mov	x4, x1
   4ccac:	mov	x5, x2
   4ccb0:	add	x3, sp, #0xb8
   4ccb4:	add	x2, sp, #0xbc
   4ccb8:	mov	x1, x21
   4ccbc:	mov	x0, x23
   4ccc0:	bl	4c3f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ed4>
   4ccc4:	mov	x25, x0
   4ccc8:	cmn	x0, #0x78
   4cccc:	b.hi	4cc7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x575c>  // b.pmore
   4ccd0:	ldr	w2, [sp, #184]
   4ccd4:	cmp	w2, w19
   4ccd8:	b.hi	4cc78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5758>  // b.pmore
   4ccdc:	mov	w20, w2
   4cce0:	ldr	w0, [x21, w20, uxtw #2]
   4cce4:	cbz	w0, 4ce90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5970>
   4cce8:	add	w4, w20, w19
   4ccec:	add	w5, w20, #0x1
   4ccf0:	add	x1, sp, #0x198
   4ccf4:	mov	x0, #0x0                   	// #0
   4ccf8:	mov	w22, #0x0                   	// #0
   4ccfc:	add	x0, x0, #0x1
   4cd00:	cmp	w5, w0
   4cd04:	b.hi	4ce98 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5978>  // b.pmore
   4cd08:	ldr	w7, [sp, #188]
   4cd0c:	add	x6, sp, #0x19c
   4cd10:	add	x8, sp, #0x2e0
   4cd14:	add	x9, sp, #0x2e1
   4cd18:	mov	x0, #0x0                   	// #0
   4cd1c:	str	w22, [sp, #412]
   4cd20:	cmp	w7, w0
   4cd24:	b.hi	4ceac <ZDICT_addEntropyTablesFromBuffer@@Base+0x598c>  // b.pmore
   4cd28:	mvn	w1, w2
   4cd2c:	add	x27, sp, #0x4e0
   4cd30:	add	w1, w1, w19
   4cd34:	mov	x0, #0x0                   	// #0
   4cd38:	mov	w3, #0x0                   	// #0
   4cd3c:	str	wzr, [sp, #412]
   4cd40:	add	x0, x0, #0x1
   4cd44:	cmp	w5, w0
   4cd48:	b.hi	4ced8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x59b8>  // b.pmore
   4cd4c:	add	w23, w2, #0x1
   4cd50:	mov	w0, #0x44                  	// #68
   4cd54:	sub	w20, w23, w20
   4cd58:	sub	w2, w4, w2
   4cd5c:	mov	w3, w20
   4cd60:	umaddl	x0, w20, w0, x27
   4cd64:	cmp	w2, w3
   4cd68:	b.hi	4cef0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x59d0>  // b.pmore
   4cd6c:	add	x8, sp, #0x108
   4cd70:	sub	w0, w23, w19
   4cd74:	mov	x1, x27
   4cd78:	mov	x2, #0x44                  	// #68
   4cd7c:	str	w0, [sp, #100]
   4cd80:	mov	x0, x8
   4cd84:	bl	4460 <memcpy@plt>
   4cd88:	add	x26, sp, #0x2e0
   4cd8c:	add	x11, sp, #0x198
   4cd90:	add	x6, sp, #0x150
   4cd94:	mov	x8, x0
   4cd98:	mov	w7, #0x0                   	// #0
   4cd9c:	sub	w0, w19, w23
   4cda0:	mov	w10, #0x1                   	// #1
   4cda4:	str	x26, [sp, #104]
   4cda8:	str	w0, [sp, #112]
   4cdac:	cmp	w22, w7
   4cdb0:	b.eq	4cc7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x575c>  // b.none
   4cdb4:	ldrb	w12, [x26, #1]
   4cdb8:	mov	w4, #0x1                   	// #1
   4cdbc:	ldr	w2, [sp, #112]
   4cdc0:	ldrb	w9, [x26]
   4cdc4:	sub	w21, w23, w12
   4cdc8:	ubfiz	x0, x12, #2, #8
   4cdcc:	add	w3, w2, w12
   4cdd0:	str	w3, [sp, #172]
   4cdd4:	cmp	w20, w3
   4cdd8:	lsl	w28, w4, w3
   4cddc:	ldr	w0, [x8, x0]
   4cde0:	mov	w19, w0
   4cde4:	add	w28, w28, w0
   4cde8:	b.hi	4cfb4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a94>  // b.pmore
   4cdec:	ldr	w0, [sp, #100]
   4cdf0:	mov	w1, #0x44                  	// #68
   4cdf4:	mov	x2, #0x44                  	// #68
   4cdf8:	stp	w7, w9, [sp, #144]
   4cdfc:	add	w5, w0, w21
   4ce00:	umaddl	x1, w21, w1, x27
   4ce04:	cmp	w5, #0x0
   4ce08:	mov	x0, x6
   4ce0c:	csel	w4, w5, w4, gt
   4ce10:	stp	x8, x12, [sp, #152]
   4ce14:	add	x19, x19, #0x1
   4ce18:	sbfiz	x4, x4, #2, #32
   4ce1c:	stp	x11, x4, [sp, #120]
   4ce20:	add	x19, x24, x19, lsl #2
   4ce24:	str	w10, [sp, #168]
   4ce28:	ldr	w14, [x11, x4]
   4ce2c:	stp	w14, w5, [sp, #136]
   4ce30:	sub	w13, w22, w14
   4ce34:	str	w13, [sp, #116]
   4ce38:	bl	4460 <memcpy@plt>
   4ce3c:	mov	x6, x0
   4ce40:	ldp	w14, w5, [sp, #136]
   4ce44:	ldr	w13, [sp, #116]
   4ce48:	ldp	w7, w9, [sp, #144]
   4ce4c:	cmp	w5, #0x1
   4ce50:	ldp	w10, w3, [sp, #168]
   4ce54:	ldp	x11, x4, [sp, #120]
   4ce58:	ldp	x8, x12, [sp, #152]
   4ce5c:	b.gt	4cf1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x59fc>
   4ce60:	ldr	x0, [sp, #104]
   4ce64:	sub	w1, w3, w23
   4ce68:	mov	w16, #0x0                   	// #0
   4ce6c:	mov	w18, #0x1                   	// #1
   4ce70:	mov	w30, #0x2                   	// #2
   4ce74:	add	x2, x0, w14, uxtw #1
   4ce78:	cmp	w13, w16
   4ce7c:	b.ne	4cf48 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a28>  // b.any
   4ce80:	add	w7, w7, #0x1
   4ce84:	add	x26, x26, #0x2
   4ce88:	str	w28, [x8, x12, lsl #2]
   4ce8c:	b	4cdac <ZDICT_addEntropyTablesFromBuffer@@Base+0x588c>
   4ce90:	sub	w20, w20, #0x1
   4ce94:	b	4cce0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x57c0>
   4ce98:	add	x6, x1, x0, lsl #2
   4ce9c:	ldr	w3, [x21, x0, lsl #2]
   4cea0:	str	w22, [x6, #4]
   4cea4:	add	w22, w22, w3
   4cea8:	b	4ccfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x57dc>
   4ceac:	ldrb	w1, [x23, x0]
   4ceb0:	ldrb	w10, [x23, x0]
   4ceb4:	lsl	x1, x1, #2
   4ceb8:	ldr	w3, [x6, x1]
   4cebc:	add	w11, w3, #0x1
   4cec0:	str	w11, [x6, x1]
   4cec4:	ubfiz	x3, x3, #1, #32
   4cec8:	strb	w0, [x8, x3]
   4cecc:	add	x0, x0, #0x1
   4ced0:	strb	w10, [x9, x3]
   4ced4:	b	4cd20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5800>
   4ced8:	ldr	w7, [x21, x0, lsl #2]
   4cedc:	add	w6, w1, w0
   4cee0:	str	w3, [x27, x0, lsl #2]
   4cee4:	lsl	w6, w7, w6
   4cee8:	add	w3, w6, w3
   4ceec:	b	4cd40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5820>
   4cef0:	mov	x1, #0x0                   	// #0
   4cef4:	add	x1, x1, #0x1
   4cef8:	cmp	w5, w1
   4cefc:	b.hi	4cf0c <ZDICT_addEntropyTablesFromBuffer@@Base+0x59ec>  // b.pmore
   4cf00:	add	w3, w3, #0x1
   4cf04:	add	x0, x0, #0x44
   4cf08:	b	4cd64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5844>
   4cf0c:	ldr	w4, [x27, x1, lsl #2]
   4cf10:	lsr	w4, w4, w3
   4cf14:	str	w4, [x0, x1, lsl #2]
   4cf18:	b	4cef4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x59d4>
   4cf1c:	ldr	w1, [x6, x4]
   4cf20:	and	w2, w21, #0xff
   4cf24:	mov	x0, x19
   4cf28:	add	x1, x19, w1, uxtw #2
   4cf2c:	cmp	x1, x0
   4cf30:	b.eq	4ce60 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5940>  // b.none
   4cf34:	add	x0, x0, #0x4
   4cf38:	sturh	w9, [x0, #-4]
   4cf3c:	sturb	w2, [x0, #-2]
   4cf40:	sturb	w10, [x0, #-1]
   4cf44:	b	4cf2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a0c>
   4cf48:	ldrb	w3, [x2, #1]
   4cf4c:	ldrb	w0, [x2, #1]
   4cf50:	add	w4, w1, w0
   4cf54:	sub	w14, w23, w0
   4cf58:	ldr	w5, [x6, x3, lsl #2]
   4cf5c:	add	w14, w14, w21
   4cf60:	ldrb	w3, [x2]
   4cf64:	lsl	w4, w18, w4
   4cf68:	and	w14, w14, #0xff
   4cf6c:	add	w4, w4, w5
   4cf70:	ubfiz	w3, w3, #8, #8
   4cf74:	add	w3, w9, w3
   4cf78:	and	w3, w3, #0xffff
   4cf7c:	mov	w15, w5
   4cf80:	add	w5, w5, #0x1
   4cf84:	cmp	w4, w5
   4cf88:	ubfiz	x15, x15, #2, #32
   4cf8c:	add	x17, x19, x15
   4cf90:	strh	w3, [x19, x15]
   4cf94:	strb	w14, [x17, #2]
   4cf98:	strb	w30, [x17, #3]
   4cf9c:	b.hi	4cf7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a5c>  // b.pmore
   4cfa0:	ubfiz	x0, x0, #2, #8
   4cfa4:	add	w16, w16, #0x1
   4cfa8:	add	x2, x2, #0x2
   4cfac:	str	w4, [x6, x0]
   4cfb0:	b	4ce78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5958>
   4cfb4:	and	w21, w21, #0xff
   4cfb8:	add	x19, x24, x19, lsl #2
   4cfbc:	add	x19, x19, #0x4
   4cfc0:	cmp	w28, w0
   4cfc4:	b.ls	4ce80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5960>  // b.plast
   4cfc8:	add	w0, w0, #0x1
   4cfcc:	strh	w9, [x19]
   4cfd0:	strb	w21, [x19, #2]
   4cfd4:	strb	w10, [x19, #3]
   4cfd8:	b	4cfbc <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a9c>
   4cfdc:	stp	x29, x30, [sp, #-208]!
   4cfe0:	mov	x3, #0x140c                	// #5132
   4cfe4:	mov	x29, sp
   4cfe8:	stp	x19, x20, [sp, #16]
   4cfec:	mov	x19, x0
   4cff0:	mov	x20, x1
   4cff4:	add	x0, x0, x3
   4cff8:	stp	x21, x22, [sp, #32]
   4cffc:	stp	x23, x24, [sp, #48]
   4d000:	mov	x24, x2
   4d004:	stp	x25, x26, [sp, #64]
   4d008:	bl	4cc1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x56fc>
   4d00c:	cmn	x0, #0x78
   4d010:	b.hi	4d0b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b94>  // b.pmore
   4d014:	mov	x22, x0
   4d018:	add	x20, x20, x0
   4d01c:	sub	x24, x24, x0
   4d020:	add	x26, sp, #0x5c
   4d024:	mov	w0, #0x1c                  	// #28
   4d028:	add	x25, sp, #0x58
   4d02c:	add	x23, sp, #0x60
   4d030:	mov	x4, x24
   4d034:	mov	x3, x20
   4d038:	mov	x2, x26
   4d03c:	mov	x1, x25
   4d040:	str	w0, [sp, #88]
   4d044:	mov	x0, x23
   4d048:	bl	4b55c <ZDICT_addEntropyTablesFromBuffer@@Base+0x403c>
   4d04c:	mov	x18, x0
   4d050:	add	x22, x22, x0
   4d054:	cmn	x0, #0x78
   4d058:	b.hi	4d0b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b94>  // b.pmore
   4d05c:	ldr	w3, [sp, #92]
   4d060:	cmp	w3, #0x8
   4d064:	b.hi	4d0b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b94>  // b.pmore
   4d068:	ldr	w2, [sp, #88]
   4d06c:	mov	x1, x23
   4d070:	add	x0, x19, #0x804
   4d074:	bl	4b7d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x42b4>
   4d078:	cmn	x0, #0x78
   4d07c:	b.hi	4d0b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b94>  // b.pmore
   4d080:	add	x20, x20, x18
   4d084:	sub	x24, x24, x18
   4d088:	mov	w0, #0x34                  	// #52
   4d08c:	mov	x4, x24
   4d090:	mov	x3, x20
   4d094:	mov	x2, x26
   4d098:	mov	x1, x25
   4d09c:	str	w0, [sp, #88]
   4d0a0:	mov	x0, x23
   4d0a4:	bl	4b55c <ZDICT_addEntropyTablesFromBuffer@@Base+0x403c>
   4d0a8:	mov	x21, x0
   4d0ac:	cmn	x0, #0x78
   4d0b0:	b.ls	4d0bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b9c>  // b.plast
   4d0b4:	mov	x0, #0xffffffffffffffe2    	// #-30
   4d0b8:	b	4d140 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5c20>
   4d0bc:	ldr	w3, [sp, #92]
   4d0c0:	cmp	w3, #0x9
   4d0c4:	b.hi	4d0b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b94>  // b.pmore
   4d0c8:	ldr	w2, [sp, #88]
   4d0cc:	mov	x1, x23
   4d0d0:	add	x0, x19, #0xc08
   4d0d4:	bl	4b7d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x42b4>
   4d0d8:	cmn	x0, #0x78
   4d0dc:	b.hi	4d0b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b94>  // b.pmore
   4d0e0:	mov	w0, #0x23                  	// #35
   4d0e4:	sub	x4, x24, x21
   4d0e8:	add	x3, x20, x21
   4d0ec:	mov	x2, x26
   4d0f0:	mov	x1, x25
   4d0f4:	str	w0, [sp, #88]
   4d0f8:	mov	x0, x23
   4d0fc:	bl	4b55c <ZDICT_addEntropyTablesFromBuffer@@Base+0x403c>
   4d100:	add	x21, x21, x0
   4d104:	cmn	x0, #0x78
   4d108:	b.hi	4d0b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b94>  // b.pmore
   4d10c:	ldr	w3, [sp, #92]
   4d110:	cmp	w3, #0x9
   4d114:	b.hi	4d0b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b94>  // b.pmore
   4d118:	ldr	w2, [sp, #88]
   4d11c:	mov	x1, x23
   4d120:	mov	x0, x19
   4d124:	bl	4b7d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x42b4>
   4d128:	cmn	x0, #0x78
   4d12c:	b.hi	4d0b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b94>  // b.pmore
   4d130:	add	x19, x19, #0x4, lsl #12
   4d134:	mov	w0, #0x1                   	// #1
   4d138:	str	w0, [x19, #5208]
   4d13c:	add	x0, x22, x21
   4d140:	ldp	x19, x20, [sp, #16]
   4d144:	ldp	x21, x22, [sp, #32]
   4d148:	ldp	x23, x24, [sp, #48]
   4d14c:	ldp	x25, x26, [sp, #64]
   4d150:	ldp	x29, x30, [sp], #208
   4d154:	ret
   4d158:	stp	x29, x30, [sp, #-48]!
   4d15c:	mov	x8, x0
   4d160:	mov	x13, x1
   4d164:	mov	x29, sp
   4d168:	ldr	w10, [x4]
   4d16c:	add	x14, sp, #0x10
   4d170:	mov	x9, x4
   4d174:	mov	x1, x2
   4d178:	mov	x0, x14
   4d17c:	mov	x2, x3
   4d180:	bl	4b118 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bf8>
   4d184:	cmn	x0, #0x78
   4d188:	b.hi	4d1b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5c98>  // b.pmore
   4d18c:	mov	w4, w10
   4d190:	add	x3, x9, #0x4
   4d194:	add	x2, x8, x13
   4d198:	mov	x1, x14
   4d19c:	mov	x0, x8
   4d1a0:	bl	4b3d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3eb4>
   4d1a4:	mov	x0, x14
   4d1a8:	bl	4afb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a98>
   4d1ac:	cmp	w0, #0x0
   4d1b0:	mov	x0, #0xffffffffffffffec    	// #-20
   4d1b4:	csel	x0, x13, x0, ne  // ne = any
   4d1b8:	ldp	x29, x30, [sp], #48
   4d1bc:	ret
   4d1c0:	mov	x12, #0x4050                	// #16464
   4d1c4:	sub	sp, sp, x12
   4d1c8:	stp	x29, x30, [sp]
   4d1cc:	mov	x29, sp
   4d1d0:	str	x23, [sp, #48]
   4d1d4:	add	x23, sp, #0x48
   4d1d8:	stp	x19, x20, [sp, #16]
   4d1dc:	mov	x19, x3
   4d1e0:	mov	x20, x2
   4d1e4:	mov	x2, #0x4004                	// #16388
   4d1e8:	stp	x21, x22, [sp, #32]
   4d1ec:	mov	x21, x0
   4d1f0:	mov	x22, x1
   4d1f4:	mov	x0, x23
   4d1f8:	mov	w1, #0x0                   	// #0
   4d1fc:	bl	4700 <memset@plt>
   4d200:	mov	w0, #0xc                   	// #12
   4d204:	mov	x2, x19
   4d208:	mov	x1, x20
   4d20c:	str	w0, [sp, #72]
   4d210:	mov	x0, x23
   4d214:	bl	4cc1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x56fc>
   4d218:	cmn	x0, #0x78
   4d21c:	b.hi	4d240 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5d20>  // b.pmore
   4d220:	cmp	x19, x0
   4d224:	b.ls	4d25c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5d3c>  // b.plast
   4d228:	sub	x3, x19, x0
   4d22c:	add	x2, x20, x0
   4d230:	mov	x4, x23
   4d234:	mov	x1, x22
   4d238:	mov	x0, x21
   4d23c:	bl	4d158 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5c38>
   4d240:	mov	x12, #0x4050                	// #16464
   4d244:	ldp	x29, x30, [sp]
   4d248:	ldp	x19, x20, [sp, #16]
   4d24c:	ldp	x21, x22, [sp, #32]
   4d250:	ldr	x23, [sp, #48]
   4d254:	add	sp, sp, x12
   4d258:	ret
   4d25c:	mov	x0, #0xffffffffffffffb8    	// #-72
   4d260:	b	4d240 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5d20>
   4d264:	cmp	x3, #0x9
   4d268:	b.ls	4d630 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6110>  // b.plast
   4d26c:	ldrh	w18, [x2]
   4d270:	mov	x9, x0
   4d274:	ldrh	w12, [x2, #2]
   4d278:	sub	x10, x3, #0x6
   4d27c:	ldrh	w11, [x2, #4]
   4d280:	add	x0, x18, x12
   4d284:	sub	x10, x10, x0
   4d288:	sub	x10, x10, x11
   4d28c:	cmp	x3, x10
   4d290:	b.cc	4d630 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6110>  // b.lo, b.ul, b.last
   4d294:	stp	x29, x30, [sp, #-224]!
   4d298:	add	x8, x2, #0x6
   4d29c:	mov	x15, x1
   4d2a0:	mov	x29, sp
   4d2a4:	ldr	w14, [x4]
   4d2a8:	mov	x13, x4
   4d2ac:	stp	x19, x20, [sp, #16]
   4d2b0:	add	x19, sp, #0x60
   4d2b4:	mov	x2, x18
   4d2b8:	mov	x1, x8
   4d2bc:	mov	x0, x19
   4d2c0:	stp	x21, x22, [sp, #32]
   4d2c4:	stp	x23, x24, [sp, #48]
   4d2c8:	stp	x25, x26, [sp, #64]
   4d2cc:	str	x27, [sp, #80]
   4d2d0:	bl	4b118 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bf8>
   4d2d4:	cmn	x0, #0x78
   4d2d8:	b.hi	4d3a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e84>  // b.pmore
   4d2dc:	add	x8, x8, x18
   4d2e0:	add	x21, sp, #0x80
   4d2e4:	mov	x2, x12
   4d2e8:	mov	x1, x8
   4d2ec:	mov	x0, x21
   4d2f0:	bl	4b118 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bf8>
   4d2f4:	cmn	x0, #0x78
   4d2f8:	b.hi	4d3a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e84>  // b.pmore
   4d2fc:	add	x8, x8, x12
   4d300:	add	x20, sp, #0xa0
   4d304:	mov	x2, x11
   4d308:	mov	x1, x8
   4d30c:	mov	x0, x20
   4d310:	bl	4b118 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bf8>
   4d314:	cmn	x0, #0x78
   4d318:	b.hi	4d3a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e84>  // b.pmore
   4d31c:	add	x18, sp, #0xc0
   4d320:	mov	x2, x10
   4d324:	add	x1, x8, x11
   4d328:	mov	x0, x18
   4d32c:	bl	4b118 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bf8>
   4d330:	cmn	x0, #0x78
   4d334:	b.hi	4d3a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e84>  // b.pmore
   4d338:	add	x24, x15, #0x3
   4d33c:	add	x13, x13, #0x4
   4d340:	add	x27, x9, x15
   4d344:	mov	x0, x19
   4d348:	add	x7, x9, x24, lsr #2
   4d34c:	add	x26, x7, x24, lsr #2
   4d350:	add	x24, x26, x24, lsr #2
   4d354:	mov	x23, x26
   4d358:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4d35c:	mov	w8, w0
   4d360:	mov	x0, x21
   4d364:	mov	x22, x24
   4d368:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4d36c:	orr	w8, w8, w0
   4d370:	mov	x0, x20
   4d374:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4d378:	mov	w6, w0
   4d37c:	mov	x0, x18
   4d380:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4d384:	orr	w0, w6, w0
   4d388:	orr	w0, w0, w8
   4d38c:	mov	x25, x7
   4d390:	sub	x10, x27, #0x7
   4d394:	cbz	w0, 4d3c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5ea0>
   4d398:	cmp	x9, x7
   4d39c:	b.ls	4d580 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6060>  // b.plast
   4d3a0:	mov	x0, #0xffffffffffffffec    	// #-20
   4d3a4:	ldp	x19, x20, [sp, #16]
   4d3a8:	ldp	x21, x22, [sp, #32]
   4d3ac:	ldp	x23, x24, [sp, #48]
   4d3b0:	ldp	x25, x26, [sp, #64]
   4d3b4:	ldr	x27, [sp, #80]
   4d3b8:	ldp	x29, x30, [sp], #224
   4d3bc:	ret
   4d3c0:	cmp	x22, x10
   4d3c4:	b.cs	4d398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e78>  // b.hs, b.nlast
   4d3c8:	mov	w3, w14
   4d3cc:	mov	x2, x13
   4d3d0:	mov	x1, x19
   4d3d4:	mov	x0, x9
   4d3d8:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4d3dc:	add	x9, x9, w0, uxtw
   4d3e0:	mov	w3, w14
   4d3e4:	mov	x2, x13
   4d3e8:	mov	x1, x21
   4d3ec:	mov	x0, x25
   4d3f0:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4d3f4:	mov	w3, w14
   4d3f8:	mov	x2, x13
   4d3fc:	add	x25, x25, w0, uxtw
   4d400:	mov	x1, x20
   4d404:	mov	x0, x23
   4d408:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4d40c:	mov	w3, w14
   4d410:	mov	x2, x13
   4d414:	mov	x1, x18
   4d418:	add	x23, x23, w0, uxtw
   4d41c:	mov	x0, x22
   4d420:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4d424:	mov	w3, w14
   4d428:	mov	x2, x13
   4d42c:	add	x22, x22, w0, uxtw
   4d430:	mov	x1, x19
   4d434:	mov	x0, x9
   4d438:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4d43c:	add	x9, x9, w0, uxtw
   4d440:	mov	w3, w14
   4d444:	mov	x2, x13
   4d448:	mov	x1, x21
   4d44c:	mov	x0, x25
   4d450:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4d454:	mov	w3, w14
   4d458:	mov	x2, x13
   4d45c:	add	x25, x25, w0, uxtw
   4d460:	mov	x1, x20
   4d464:	mov	x0, x23
   4d468:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4d46c:	mov	w3, w14
   4d470:	mov	x2, x13
   4d474:	mov	x1, x18
   4d478:	add	x23, x23, w0, uxtw
   4d47c:	mov	x0, x22
   4d480:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4d484:	mov	w3, w14
   4d488:	mov	x2, x13
   4d48c:	add	x22, x22, w0, uxtw
   4d490:	mov	x1, x19
   4d494:	mov	x0, x9
   4d498:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4d49c:	add	x9, x9, w0, uxtw
   4d4a0:	mov	w3, w14
   4d4a4:	mov	x2, x13
   4d4a8:	mov	x1, x21
   4d4ac:	mov	x0, x25
   4d4b0:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4d4b4:	mov	w3, w14
   4d4b8:	mov	x2, x13
   4d4bc:	add	x25, x25, w0, uxtw
   4d4c0:	mov	x1, x20
   4d4c4:	mov	x0, x23
   4d4c8:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4d4cc:	mov	w3, w14
   4d4d0:	mov	x2, x13
   4d4d4:	mov	x1, x18
   4d4d8:	add	x23, x23, w0, uxtw
   4d4dc:	mov	x0, x22
   4d4e0:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4d4e4:	mov	w3, w14
   4d4e8:	mov	x2, x13
   4d4ec:	add	x22, x22, w0, uxtw
   4d4f0:	mov	x1, x19
   4d4f4:	mov	x0, x9
   4d4f8:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4d4fc:	add	x9, x9, w0, uxtw
   4d500:	mov	w3, w14
   4d504:	mov	x2, x13
   4d508:	mov	x1, x21
   4d50c:	mov	x0, x25
   4d510:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4d514:	mov	w3, w14
   4d518:	mov	x2, x13
   4d51c:	mov	x1, x20
   4d520:	add	x25, x25, w0, uxtw
   4d524:	mov	x0, x23
   4d528:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4d52c:	mov	w3, w14
   4d530:	mov	x2, x13
   4d534:	mov	x1, x18
   4d538:	add	x23, x23, w0, uxtw
   4d53c:	mov	x0, x22
   4d540:	bl	4b398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e78>
   4d544:	add	x22, x22, w0, uxtw
   4d548:	mov	x0, x19
   4d54c:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4d550:	mov	w8, w0
   4d554:	mov	x0, x21
   4d558:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4d55c:	orr	w8, w8, w0
   4d560:	mov	x0, x20
   4d564:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4d568:	mov	w6, w0
   4d56c:	mov	x0, x18
   4d570:	bl	4af14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x39f4>
   4d574:	orr	w0, w6, w0
   4d578:	orr	w0, w0, w8
   4d57c:	b	4d394 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e74>
   4d580:	cmp	x25, x26
   4d584:	b.hi	4d3a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e80>  // b.pmore
   4d588:	cmp	x23, x24
   4d58c:	b.hi	4d3a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e80>  // b.pmore
   4d590:	mov	w4, w14
   4d594:	mov	x3, x13
   4d598:	mov	x2, x7
   4d59c:	mov	x0, x9
   4d5a0:	mov	x1, x19
   4d5a4:	bl	4b3d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3eb4>
   4d5a8:	mov	x2, x26
   4d5ac:	mov	w4, w14
   4d5b0:	mov	x3, x13
   4d5b4:	mov	x1, x21
   4d5b8:	mov	x0, x25
   4d5bc:	bl	4b3d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3eb4>
   4d5c0:	mov	x2, x24
   4d5c4:	mov	w4, w14
   4d5c8:	mov	x3, x13
   4d5cc:	mov	x1, x20
   4d5d0:	mov	x0, x23
   4d5d4:	bl	4b3d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3eb4>
   4d5d8:	mov	x2, x27
   4d5dc:	mov	w4, w14
   4d5e0:	mov	x3, x13
   4d5e4:	mov	x1, x18
   4d5e8:	mov	x0, x22
   4d5ec:	bl	4b3d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3eb4>
   4d5f0:	mov	x0, x19
   4d5f4:	bl	4afb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a98>
   4d5f8:	mov	w3, w0
   4d5fc:	mov	x0, x21
   4d600:	bl	4afb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a98>
   4d604:	and	w3, w3, w0
   4d608:	mov	x0, x20
   4d60c:	bl	4afb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a98>
   4d610:	mov	w4, w0
   4d614:	mov	x0, x18
   4d618:	bl	4afb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a98>
   4d61c:	and	w4, w4, w0
   4d620:	tst	w4, w3
   4d624:	b.eq	4d3a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e80>  // b.none
   4d628:	mov	x0, x15
   4d62c:	b	4d3a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e84>
   4d630:	mov	x0, #0xffffffffffffffec    	// #-20
   4d634:	ret
   4d638:	mov	x12, #0x4050                	// #16464
   4d63c:	sub	sp, sp, x12
   4d640:	stp	x29, x30, [sp]
   4d644:	mov	x29, sp
   4d648:	str	x23, [sp, #48]
   4d64c:	add	x23, sp, #0x48
   4d650:	stp	x19, x20, [sp, #16]
   4d654:	mov	x19, x3
   4d658:	mov	x20, x2
   4d65c:	mov	x2, #0x4004                	// #16388
   4d660:	stp	x21, x22, [sp, #32]
   4d664:	mov	x21, x0
   4d668:	mov	x22, x1
   4d66c:	mov	x0, x23
   4d670:	mov	w1, #0x0                   	// #0
   4d674:	bl	4700 <memset@plt>
   4d678:	mov	w0, #0xc                   	// #12
   4d67c:	mov	x2, x19
   4d680:	mov	x1, x20
   4d684:	str	w0, [sp, #72]
   4d688:	mov	x0, x23
   4d68c:	bl	4cc1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x56fc>
   4d690:	cmn	x0, #0x78
   4d694:	b.hi	4d6b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6198>  // b.pmore
   4d698:	cmp	x19, x0
   4d69c:	b.ls	4d6d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x61b4>  // b.plast
   4d6a0:	sub	x3, x19, x0
   4d6a4:	add	x2, x20, x0
   4d6a8:	mov	x4, x23
   4d6ac:	mov	x1, x22
   4d6b0:	mov	x0, x21
   4d6b4:	bl	4d264 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5d44>
   4d6b8:	mov	x12, #0x4050                	// #16464
   4d6bc:	ldp	x29, x30, [sp]
   4d6c0:	ldp	x19, x20, [sp, #16]
   4d6c4:	ldp	x21, x22, [sp, #32]
   4d6c8:	ldr	x23, [sp, #48]
   4d6cc:	add	sp, sp, x12
   4d6d0:	ret
   4d6d4:	mov	x0, #0xffffffffffffffb8    	// #-72
   4d6d8:	b	4d6b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6198>
   4d6dc:	stp	x29, x30, [sp, #-48]!
   4d6e0:	mov	x29, sp
   4d6e4:	str	x19, [sp, #16]
   4d6e8:	mov	x19, x1
   4d6ec:	cbz	x1, 4d7b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6290>
   4d6f0:	cmp	x1, x3
   4d6f4:	b.cc	4d7b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6298>  // b.lo, b.ul, b.last
   4d6f8:	mov	x1, x2
   4d6fc:	b.ne	4d718 <ZDICT_addEntropyTablesFromBuffer@@Base+0x61f8>  // b.any
   4d700:	mov	x2, x19
   4d704:	bl	4460 <memcpy@plt>
   4d708:	mov	x0, x19
   4d70c:	ldr	x19, [sp, #16]
   4d710:	ldp	x29, x30, [sp], #48
   4d714:	ret
   4d718:	cmp	x3, #0x1
   4d71c:	b.ne	4d730 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6210>  // b.any
   4d720:	ldrb	w1, [x1]
   4d724:	mov	x2, x19
   4d728:	bl	4700 <memset@plt>
   4d72c:	b	4d708 <ZDICT_addEntropyTablesFromBuffer@@Base+0x61e8>
   4d730:	lsl	x4, x3, #4
   4d734:	adrp	x2, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   4d738:	add	x2, x2, #0xe38
   4d73c:	mov	x5, x0
   4d740:	add	x2, x2, #0x4a0
   4d744:	mov	x0, #0x18                  	// #24
   4d748:	udiv	x4, x4, x19
   4d74c:	ubfx	x8, x19, #8, #32
   4d750:	add	x6, sp, #0x20
   4d754:	and	x4, x4, #0xffffffff
   4d758:	madd	x4, x4, x0, x2
   4d75c:	mov	x2, #0x0                   	// #0
   4d760:	ldr	w0, [x4, #4]
   4d764:	ldr	w7, [x4], #8
   4d768:	madd	w0, w8, w0, w7
   4d76c:	str	w0, [x6, x2, lsl #2]
   4d770:	add	x2, x2, #0x1
   4d774:	cmp	x2, #0x3
   4d778:	b.ne	4d760 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6240>  // b.any
   4d77c:	ldp	w0, w2, [sp, #32]
   4d780:	add	w2, w2, w2, lsr #4
   4d784:	cmp	w2, w0
   4d788:	adrp	x0, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   4d78c:	cset	x2, cc  // cc = lo, ul, last
   4d790:	add	x0, x0, #0xca8
   4d794:	ldr	x4, [x0, x2, lsl #3]
   4d798:	mov	x2, x1
   4d79c:	mov	x0, x5
   4d7a0:	mov	x1, x19
   4d7a4:	blr	x4
   4d7a8:	mov	x19, x0
   4d7ac:	b	4d708 <ZDICT_addEntropyTablesFromBuffer@@Base+0x61e8>
   4d7b0:	mov	x19, #0xffffffffffffffba    	// #-70
   4d7b4:	b	4d708 <ZDICT_addEntropyTablesFromBuffer@@Base+0x61e8>
   4d7b8:	mov	x19, #0xffffffffffffffec    	// #-20
   4d7bc:	b	4d708 <ZDICT_addEntropyTablesFromBuffer@@Base+0x61e8>
   4d7c0:	stp	x29, x30, [sp, #-48]!
   4d7c4:	cmp	x2, #0x2
   4d7c8:	mov	x29, sp
   4d7cc:	stp	x19, x20, [sp, #16]
   4d7d0:	stp	x21, x22, [sp, #32]
   4d7d4:	b.hi	4d7f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62d0>  // b.pmore
   4d7d8:	mov	x20, #0xffffffffffffffec    	// #-20
   4d7dc:	mov	x0, x20
   4d7e0:	ldp	x19, x20, [sp, #16]
   4d7e4:	ldp	x21, x22, [sp, #32]
   4d7e8:	ldp	x29, x30, [sp], #48
   4d7ec:	ret
   4d7f0:	ldrb	w4, [x1]
   4d7f4:	mov	x21, x0
   4d7f8:	mov	x6, x1
   4d7fc:	lsr	w0, w4, #6
   4d800:	ubfx	x5, x4, #4, #2
   4d804:	cmp	w0, #0x2
   4d808:	b.eq	4d984 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6464>  // b.none
   4d80c:	cmp	w0, #0x3
   4d810:	b.eq	4da1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x64fc>  // b.none
   4d814:	cmp	w0, #0x1
   4d818:	b.eq	4d90c <ZDICT_addEntropyTablesFromBuffer@@Base+0x63ec>  // b.none
   4d81c:	cmp	x2, #0x4
   4d820:	b.ls	4d7d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62b8>  // b.plast
   4d824:	ldrb	w1, [x1, #1]
   4d828:	cmp	w5, #0x2
   4d82c:	ldrb	w0, [x6, #2]
   4d830:	b.eq	4d8a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6380>  // b.none
   4d834:	cmp	w5, #0x3
   4d838:	b.eq	4d8cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x63ac>  // b.none
   4d83c:	ubfiz	w19, w4, #6, #4
   4d840:	and	w7, w4, #0x10
   4d844:	add	w19, w19, w1, lsr #2
   4d848:	ubfiz	w1, w1, #8, #2
   4d84c:	add	w3, w1, w0
   4d850:	and	x7, x7, #0xff
   4d854:	sxtw	x19, w19
   4d858:	mov	x5, #0x3                   	// #3
   4d85c:	sxtw	x3, w3
   4d860:	add	x20, x5, x3
   4d864:	cmp	x20, x2
   4d868:	b.hi	4d7d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62b8>  // b.pmore
   4d86c:	add	x2, x6, x5
   4d870:	mov	x5, #0x5470                	// #21616
   4d874:	add	x22, x21, x5
   4d878:	mov	x1, x19
   4d87c:	mov	x0, x22
   4d880:	cbz	x7, 4d904 <ZDICT_addEntropyTablesFromBuffer@@Base+0x63e4>
   4d884:	bl	4c730 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5210>
   4d888:	cmn	x0, #0x78
   4d88c:	b.hi	4d7d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62b8>  // b.pmore
   4d890:	str	x22, [x21, #21600]
   4d894:	str	x19, [x21, #21608]
   4d898:	str	xzr, [x22, x19]
   4d89c:	b	4d7dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x62bc>
   4d8a0:	ubfiz	w4, w4, #10, #4
   4d8a4:	ubfiz	w3, w0, #8, #6
   4d8a8:	add	w4, w4, w1, lsl #2
   4d8ac:	mov	x5, #0x4                   	// #4
   4d8b0:	add	w19, w4, w0, lsr #6
   4d8b4:	ldrb	w0, [x6, #3]
   4d8b8:	add	w3, w3, w0
   4d8bc:	sxtw	x19, w19
   4d8c0:	sxtw	x3, w3
   4d8c4:	mov	x7, #0x0                   	// #0
   4d8c8:	b	4d860 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6340>
   4d8cc:	ubfiz	w4, w4, #14, #4
   4d8d0:	ldrb	w3, [x6, #3]
   4d8d4:	add	w4, w4, w1, lsl #6
   4d8d8:	ldrb	w1, [x6, #4]
   4d8dc:	add	w4, w4, w0, lsr #2
   4d8e0:	cmp	w4, #0x20, lsl #12
   4d8e4:	sxtw	x19, w4
   4d8e8:	b.gt	4d7d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62b8>
   4d8ec:	ubfiz	w0, w0, #16, #2
   4d8f0:	mov	x5, #0x5                   	// #5
   4d8f4:	add	w3, w0, w3, lsl #8
   4d8f8:	add	w3, w3, w1
   4d8fc:	sxtw	x3, w3
   4d900:	b	4d8c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x63a4>
   4d904:	bl	4d6dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x61bc>
   4d908:	b	4d888 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6368>
   4d90c:	cmp	w5, #0x1
   4d910:	b.ne	4d7d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62b8>  // b.any
   4d914:	add	x0, x21, #0x4, lsl #12
   4d918:	ldr	w0, [x0, #5208]
   4d91c:	cbz	w0, 4daa4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6584>
   4d920:	ldrb	w15, [x1, #1]
   4d924:	ldrb	w0, [x1, #2]
   4d928:	ubfiz	w3, w15, #8, #2
   4d92c:	add	w3, w3, w0
   4d930:	sxtw	x3, w3
   4d934:	add	x20, x3, #0x3
   4d938:	cmp	x20, x2
   4d93c:	b.hi	4d7d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62b8>  // b.pmore
   4d940:	ubfiz	w4, w4, #6, #4
   4d944:	mov	x2, #0x5470                	// #21616
   4d948:	add	w4, w4, w15, lsr #2
   4d94c:	add	x18, x21, x2
   4d950:	mov	x0, x18
   4d954:	add	x2, x1, #0x3
   4d958:	sxtw	x15, w4
   4d95c:	mov	x4, #0x140c                	// #5132
   4d960:	mov	x1, x15
   4d964:	add	x4, x21, x4
   4d968:	bl	4d158 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5c38>
   4d96c:	cmn	x0, #0x78
   4d970:	b.hi	4d7d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62b8>  // b.pmore
   4d974:	str	x18, [x21, #21600]
   4d978:	str	x15, [x21, #21608]
   4d97c:	str	xzr, [x18, x15]
   4d980:	b	4d7dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x62bc>
   4d984:	cmp	w5, #0x2
   4d988:	b.eq	4d9e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x64c0>  // b.none
   4d98c:	cmp	w5, #0x3
   4d990:	b.eq	4d9f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x64d4>  // b.none
   4d994:	and	x19, x4, #0x1f
   4d998:	mov	w5, #0x1                   	// #1
   4d99c:	mov	w5, w5
   4d9a0:	add	x20, x5, x19
   4d9a4:	add	x0, x20, #0x8
   4d9a8:	cmp	x0, x2
   4d9ac:	b.ls	4da0c <ZDICT_addEntropyTablesFromBuffer@@Base+0x64ec>  // b.plast
   4d9b0:	cmp	x20, x2
   4d9b4:	b.hi	4d7d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62b8>  // b.pmore
   4d9b8:	mov	x1, #0x5470                	// #21616
   4d9bc:	add	x3, x21, x1
   4d9c0:	mov	x2, x19
   4d9c4:	add	x1, x6, x5
   4d9c8:	mov	x0, x3
   4d9cc:	bl	4460 <memcpy@plt>
   4d9d0:	str	x0, [x21, #21600]
   4d9d4:	str	x19, [x21, #21608]
   4d9d8:	str	xzr, [x0, x19]
   4d9dc:	b	4d7dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x62bc>
   4d9e0:	ldrb	w0, [x1, #1]
   4d9e4:	ubfiz	w4, w4, #8, #4
   4d9e8:	add	w4, w4, w0
   4d9ec:	sxtw	x19, w4
   4d9f0:	b	4d99c <ZDICT_addEntropyTablesFromBuffer@@Base+0x647c>
   4d9f4:	ldrb	w19, [x1, #1]
   4d9f8:	ubfiz	w4, w4, #16, #4
   4d9fc:	add	w4, w4, w19, lsl #8
   4da00:	ldrb	w19, [x1, #2]
   4da04:	add	w4, w4, w19
   4da08:	b	4d9ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x64cc>
   4da0c:	add	x5, x6, x5
   4da10:	str	x5, [x21, #21600]
   4da14:	str	x19, [x21, #21608]
   4da18:	b	4d7dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x62bc>
   4da1c:	cmp	w5, #0x2
   4da20:	b.eq	4da60 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6540>  // b.none
   4da24:	cmp	w5, #0x3
   4da28:	b.eq	4da78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6558>  // b.none
   4da2c:	and	x19, x4, #0x1f
   4da30:	mov	w20, #0x1                   	// #1
   4da34:	mov	x0, #0x5470                	// #21616
   4da38:	add	x3, x21, x0
   4da3c:	mov	w0, w20
   4da40:	add	x2, x19, #0x8
   4da44:	add	w20, w20, #0x1
   4da48:	ldrb	w1, [x6, x0]
   4da4c:	mov	x0, x3
   4da50:	bl	4700 <memset@plt>
   4da54:	str	x0, [x21, #21600]
   4da58:	str	x19, [x21, #21608]
   4da5c:	b	4d7dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x62bc>
   4da60:	ldrb	w19, [x1, #1]
   4da64:	ubfiz	w4, w4, #8, #4
   4da68:	add	w4, w4, w19
   4da6c:	sxtw	x19, w4
   4da70:	mov	w20, w5
   4da74:	b	4da34 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6514>
   4da78:	ldrb	w0, [x1, #1]
   4da7c:	ubfiz	w4, w4, #16, #4
   4da80:	cmp	x2, #0x3
   4da84:	add	w4, w4, w0, lsl #8
   4da88:	ldrb	w0, [x1, #2]
   4da8c:	add	w4, w4, w0
   4da90:	sxtw	x19, w4
   4da94:	b.eq	4d7d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62b8>  // b.none
   4da98:	cmp	w4, #0x20, lsl #12
   4da9c:	b.gt	4d7d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62b8>
   4daa0:	b	4da70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6550>
   4daa4:	mov	x20, #0xffffffffffffffe2    	// #-30
   4daa8:	b	4d7dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x62bc>
   4daac:	stp	x29, x30, [sp, #-64]!
   4dab0:	mov	x29, sp
   4dab4:	stp	x19, x20, [sp, #16]
   4dab8:	stp	x21, x22, [sp, #32]
   4dabc:	mov	x22, x1
   4dac0:	mov	x1, #0x1ffff               	// #131071
   4dac4:	str	x23, [sp, #48]
   4dac8:	cmp	x4, x1
   4dacc:	b.hi	4db1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x65fc>  // b.pmore
   4dad0:	mov	x21, x0
   4dad4:	mov	x23, x2
   4dad8:	mov	x20, x3
   4dadc:	mov	x19, x4
   4dae0:	mov	x2, x4
   4dae4:	mov	x1, x3
   4dae8:	bl	4d7c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62a0>
   4daec:	cmn	x0, #0x78
   4daf0:	b.hi	4db20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6600>  // b.pmore
   4daf4:	sub	x4, x19, x0
   4daf8:	add	x3, x20, x0
   4dafc:	mov	x2, x23
   4db00:	mov	x1, x22
   4db04:	mov	x0, x21
   4db08:	ldp	x19, x20, [sp, #16]
   4db0c:	ldp	x21, x22, [sp, #32]
   4db10:	ldr	x23, [sp, #48]
   4db14:	ldp	x29, x30, [sp], #64
   4db18:	b	4ba20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4500>
   4db1c:	mov	x0, #0xffffffffffffffb8    	// #-72
   4db20:	ldp	x19, x20, [sp, #16]
   4db24:	ldp	x21, x22, [sp, #32]
   4db28:	ldr	x23, [sp, #48]
   4db2c:	ldp	x29, x30, [sp], #64
   4db30:	ret
   4db34:	cmn	x0, #0x78
   4db38:	cset	w0, hi  // hi = pmore
   4db3c:	ret
   4db40:	cmn	x0, #0x78
   4db44:	b.ls	4db50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6630>  // b.plast
   4db48:	neg	w0, w0
   4db4c:	b	511c <ZSTD_initDStream_usingDDict@plt+0x59c>
   4db50:	mov	w0, #0x0                   	// #0
   4db54:	b	4db4c <ZDICT_addEntropyTablesFromBuffer@@Base+0x662c>
   4db58:	cmn	x0, #0x78
   4db5c:	cset	w0, hi  // hi = pmore
   4db60:	ret
   4db64:	cmn	x0, #0x78
   4db68:	b.ls	4db74 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6654>  // b.plast
   4db6c:	neg	w0, w0
   4db70:	b	511c <ZSTD_initDStream_usingDDict@plt+0x59c>
   4db74:	mov	w0, #0x0                   	// #0
   4db78:	b	4db70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6650>
   4db7c:	mov	x0, #0x5488                	// #21640
   4db80:	movk	x0, #0x2, lsl #16
   4db84:	ret
   4db88:	mov	x1, #0x5                   	// #5
   4db8c:	mov	x4, #0x5400                	// #21504
   4db90:	str	xzr, [x0, #21520]
   4db94:	str	xzr, [x0, #21528]
   4db98:	str	xzr, [x0, #21536]
   4db9c:	str	xzr, [x0, #21544]
   4dba0:	str	x1, [x0, #21552]
   4dba4:	mov	w1, #0xc                   	// #12
   4dba8:	str	w1, [x0, #5132]
   4dbac:	add	x0, x0, x4
   4dbb0:	stur	xzr, [x0, #84]
   4dbb4:	mov	x0, #0x0                   	// #0
   4dbb8:	ret
   4dbbc:	stp	x29, x30, [sp, #-16]!
   4dbc0:	mov	x0, #0x5488                	// #21640
   4dbc4:	movk	x0, #0x2, lsl #16
   4dbc8:	mov	x29, sp
   4dbcc:	bl	46a0 <malloc@plt>
   4dbd0:	mov	x2, x0
   4dbd4:	cbz	x0, 4dbdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x66bc>
   4dbd8:	bl	4db88 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6668>
   4dbdc:	mov	x0, x2
   4dbe0:	ldp	x29, x30, [sp], #16
   4dbe4:	ret
   4dbe8:	stp	x29, x30, [sp, #-16]!
   4dbec:	mov	x29, sp
   4dbf0:	bl	48e0 <free@plt>
   4dbf4:	mov	x0, #0x0                   	// #0
   4dbf8:	ldp	x29, x30, [sp], #16
   4dbfc:	ret
   4dc00:	mov	x2, #0x5473                	// #21619
   4dc04:	b	4460 <memcpy@plt>
   4dc08:	mov	x4, x0
   4dc0c:	cmp	x2, #0x4
   4dc10:	b.ls	4dca4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6784>  // b.plast
   4dc14:	ldr	w3, [x1]
   4dc18:	mov	w0, #0xb526                	// #46374
   4dc1c:	movk	w0, #0xfd2f, lsl #16
   4dc20:	cmp	w3, w0
   4dc24:	b.ne	4dcac <ZDICT_addEntropyTablesFromBuffer@@Base+0x678c>  // b.any
   4dc28:	ldrb	w3, [x1, #4]
   4dc2c:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   4dc30:	add	x0, x0, #0xe38
   4dc34:	add	x0, x0, #0x620
   4dc38:	ubfx	x3, x3, #6, #2
   4dc3c:	ldr	x3, [x0, x3, lsl #3]
   4dc40:	add	x0, x3, #0x5
   4dc44:	cmp	x2, x0
   4dc48:	b.cc	4dca8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6788>  // b.lo, b.ul, b.last
   4dc4c:	stp	xzr, xzr, [x4]
   4dc50:	ldrb	w0, [x1, #4]
   4dc54:	and	w2, w0, #0xf
   4dc58:	add	w2, w2, #0xc
   4dc5c:	str	w2, [x4, #8]
   4dc60:	tbnz	w0, #5, 4dcb4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6794>
   4dc64:	lsr	w0, w0, #6
   4dc68:	cmp	w0, #0x2
   4dc6c:	b.eq	4dc90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6770>  // b.none
   4dc70:	cmp	w0, #0x3
   4dc74:	b.eq	4dc9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x677c>  // b.none
   4dc78:	cmp	w0, #0x1
   4dc7c:	b.ne	4dc88 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6768>  // b.any
   4dc80:	ldrb	w0, [x1, #5]
   4dc84:	str	x0, [x4]
   4dc88:	mov	x0, #0x0                   	// #0
   4dc8c:	b	4dca8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6788>
   4dc90:	ldurh	w0, [x1, #5]
   4dc94:	add	x0, x0, #0x100
   4dc98:	b	4dc84 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6764>
   4dc9c:	ldur	x0, [x1, #5]
   4dca0:	b	4dc84 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6764>
   4dca4:	mov	x0, #0x5                   	// #5
   4dca8:	ret
   4dcac:	mov	x0, #0xfffffffffffffff6    	// #-10
   4dcb0:	b	4dca8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6788>
   4dcb4:	mov	x0, #0xfffffffffffffff2    	// #-14
   4dcb8:	b	4dca8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6788>
   4dcbc:	stp	x29, x30, [sp, #-112]!
   4dcc0:	cmp	x4, #0x7
   4dcc4:	mov	x29, sp
   4dcc8:	stp	x19, x20, [sp, #16]
   4dccc:	stp	x21, x22, [sp, #32]
   4dcd0:	stp	x23, x24, [sp, #48]
   4dcd4:	stp	x25, x26, [sp, #64]
   4dcd8:	str	x27, [sp, #80]
   4dcdc:	str	xzr, [sp, #104]
   4dce0:	b.hi	4dd08 <ZDICT_addEntropyTablesFromBuffer@@Base+0x67e8>  // b.pmore
   4dce4:	mov	x5, #0xffffffffffffffb8    	// #-72
   4dce8:	mov	x0, x5
   4dcec:	ldp	x19, x20, [sp, #16]
   4dcf0:	ldp	x21, x22, [sp, #32]
   4dcf4:	ldp	x23, x24, [sp, #48]
   4dcf8:	ldp	x25, x26, [sp, #64]
   4dcfc:	ldr	x27, [sp, #80]
   4dd00:	ldp	x29, x30, [sp], #112
   4dd04:	ret
   4dd08:	mov	x22, x2
   4dd0c:	ldrb	w2, [x3, #4]
   4dd10:	mov	x24, x0
   4dd14:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   4dd18:	add	x0, x0, #0xe38
   4dd1c:	mov	x23, x1
   4dd20:	ubfx	x2, x2, #6, #2
   4dd24:	add	x0, x0, #0x620
   4dd28:	mov	x1, x3
   4dd2c:	ldr	x0, [x0, x2, lsl #3]
   4dd30:	add	x5, x0, #0x5
   4dd34:	cmn	x5, #0x78
   4dd38:	b.hi	4dce8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x67c8>  // b.pmore
   4dd3c:	add	x0, x0, #0x8
   4dd40:	mov	x21, x4
   4dd44:	cmp	x0, x4
   4dd48:	b.hi	4dce4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x67c4>  // b.pmore
   4dd4c:	mov	x0, #0x5440                	// #21568
   4dd50:	mov	x2, x5
   4dd54:	add	x0, x24, x0
   4dd58:	bl	4dc08 <ZDICT_addEntropyTablesFromBuffer@@Base+0x66e8>
   4dd5c:	cbnz	x0, 4de34 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6914>
   4dd60:	sub	x27, x21, x5
   4dd64:	add	x22, x23, x22
   4dd68:	add	x26, x1, x5
   4dd6c:	mov	x20, x23
   4dd70:	add	x25, sp, #0x68
   4dd74:	add	x21, x1, x21
   4dd78:	mov	x2, x25
   4dd7c:	sub	x1, x21, x26
   4dd80:	mov	x0, x26
   4dd84:	bl	4b08c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3b6c>
   4dd88:	mov	x19, x0
   4dd8c:	cmn	x0, #0x78
   4dd90:	b.hi	4de3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x691c>  // b.pmore
   4dd94:	sub	x27, x27, #0x3
   4dd98:	add	x26, x26, #0x3
   4dd9c:	cmp	x0, x27
   4dda0:	b.hi	4dce4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x67c4>  // b.pmore
   4dda4:	ldr	w0, [sp, #104]
   4dda8:	cmp	w0, #0x1
   4ddac:	b.eq	4dde4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x68c4>  // b.none
   4ddb0:	cmp	w0, #0x3
   4ddb4:	b.eq	4de10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x68f0>  // b.none
   4ddb8:	cbnz	w0, 4de44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6924>
   4ddbc:	mov	x4, x19
   4ddc0:	mov	x3, x26
   4ddc4:	sub	x2, x22, x20
   4ddc8:	mov	x1, x20
   4ddcc:	mov	x0, x24
   4ddd0:	bl	4daac <ZDICT_addEntropyTablesFromBuffer@@Base+0x658c>
   4ddd4:	mov	x5, x0
   4ddd8:	cbnz	x19, 4de1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x68fc>
   4dddc:	sub	x5, x20, x23
   4dde0:	b	4dce8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x67c8>
   4dde4:	sub	x0, x22, x20
   4dde8:	cbz	x20, 4de4c <ZDICT_addEntropyTablesFromBuffer@@Base+0x692c>
   4ddec:	cmp	x0, x19
   4ddf0:	b.cc	4de4c <ZDICT_addEntropyTablesFromBuffer@@Base+0x692c>  // b.lo, b.ul, b.last
   4ddf4:	mov	x2, x19
   4ddf8:	mov	x1, x26
   4ddfc:	mov	x0, x20
   4de00:	bl	4460 <memcpy@plt>
   4de04:	mov	x5, x19
   4de08:	cbnz	x19, 4de24 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6904>
   4de0c:	b	4dddc <ZDICT_addEntropyTablesFromBuffer@@Base+0x68bc>
   4de10:	cbnz	x27, 4dce4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x67c4>
   4de14:	mov	x5, #0x0                   	// #0
   4de18:	b	4de08 <ZDICT_addEntropyTablesFromBuffer@@Base+0x68e8>
   4de1c:	cmn	x0, #0x78
   4de20:	b.hi	4dce8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x67c8>  // b.pmore
   4de24:	add	x20, x20, x5
   4de28:	add	x26, x26, x19
   4de2c:	sub	x27, x27, x19
   4de30:	b	4dd78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6858>
   4de34:	mov	x5, #0xffffffffffffffec    	// #-20
   4de38:	b	4dce8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x67c8>
   4de3c:	mov	x5, x0
   4de40:	b	4dce8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x67c8>
   4de44:	mov	x5, #0xffffffffffffffff    	// #-1
   4de48:	b	4dce8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x67c8>
   4de4c:	cbz	x19, 4dddc <ZDICT_addEntropyTablesFromBuffer@@Base+0x68bc>
   4de50:	mov	x5, #0xffffffffffffffba    	// #-70
   4de54:	b	4dce8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x67c8>
   4de58:	stp	x29, x30, [sp, #-64]!
   4de5c:	mov	x29, sp
   4de60:	stp	x19, x20, [sp, #16]
   4de64:	mov	x20, x0
   4de68:	stp	x21, x22, [sp, #32]
   4de6c:	mov	x21, x3
   4de70:	str	x23, [sp, #48]
   4de74:	mov	x23, x2
   4de78:	bl	4b0ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bcc>
   4de7c:	mov	x0, #0x1ffff               	// #131071
   4de80:	cmp	x4, x0
   4de84:	b.hi	4ded0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x69b0>  // b.pmore
   4de88:	mov	x22, x1
   4de8c:	mov	x19, x4
   4de90:	mov	x2, x4
   4de94:	mov	x1, x21
   4de98:	mov	x0, x20
   4de9c:	bl	4d7c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62a0>
   4dea0:	cmn	x0, #0x78
   4dea4:	b.hi	4ded4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x69b4>  // b.pmore
   4dea8:	sub	x4, x19, x0
   4deac:	add	x3, x21, x0
   4deb0:	mov	x2, x23
   4deb4:	mov	x1, x22
   4deb8:	mov	x0, x20
   4debc:	ldp	x19, x20, [sp, #16]
   4dec0:	ldp	x21, x22, [sp, #32]
   4dec4:	ldr	x23, [sp, #48]
   4dec8:	ldp	x29, x30, [sp], #64
   4decc:	b	4ba20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4500>
   4ded0:	mov	x0, #0xffffffffffffffb8    	// #-72
   4ded4:	ldp	x19, x20, [sp, #16]
   4ded8:	ldp	x21, x22, [sp, #32]
   4dedc:	ldr	x23, [sp, #48]
   4dee0:	ldp	x29, x30, [sp], #64
   4dee4:	ret
   4dee8:	stp	x29, x30, [sp, #-64]!
   4deec:	mov	x29, sp
   4def0:	stp	x19, x20, [sp, #16]
   4def4:	mov	x20, x2
   4def8:	mov	x19, x0
   4defc:	stp	x21, x22, [sp, #32]
   4df00:	mov	x21, x3
   4df04:	mov	x22, x4
   4df08:	str	x23, [sp, #48]
   4df0c:	mov	x23, x5
   4df10:	bl	4dc00 <ZDICT_addEntropyTablesFromBuffer@@Base+0x66e0>
   4df14:	mov	x1, x20
   4df18:	mov	x0, x19
   4df1c:	bl	4b0ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bcc>
   4df20:	mov	x4, x23
   4df24:	mov	x3, x22
   4df28:	mov	x2, x21
   4df2c:	ldp	x19, x20, [sp, #16]
   4df30:	ldp	x21, x22, [sp, #32]
   4df34:	ldr	x23, [sp, #48]
   4df38:	ldp	x29, x30, [sp], #64
   4df3c:	b	4dcbc <ZDICT_addEntropyTablesFromBuffer@@Base+0x679c>
   4df40:	stp	x29, x30, [sp, #-32]!
   4df44:	mov	x8, x2
   4df48:	mov	x7, x3
   4df4c:	mov	x29, sp
   4df50:	str	xzr, [sp, #24]
   4df54:	cmp	x1, #0x4
   4df58:	b.ls	4df98 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6a78>  // b.plast
   4df5c:	mov	x9, x0
   4df60:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   4df64:	add	x0, x0, #0xe38
   4df68:	add	x0, x0, #0x620
   4df6c:	ldrb	w2, [x9, #4]
   4df70:	ubfx	x2, x2, #6, #2
   4df74:	ldr	x0, [x0, x2, lsl #3]
   4df78:	add	x5, x0, #0x5
   4df7c:	cmn	x5, #0x78
   4df80:	b.ls	4dfa0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6a80>  // b.plast
   4df84:	str	x5, [x8]
   4df88:	mov	x0, #0xfffffffffffffffe    	// #-2
   4df8c:	str	x0, [x7]
   4df90:	ldp	x29, x30, [sp], #32
   4df94:	ret
   4df98:	mov	x5, #0xffffffffffffffb8    	// #-72
   4df9c:	b	4df84 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6a64>
   4dfa0:	ldr	w3, [x9]
   4dfa4:	mov	w2, #0xb526                	// #46374
   4dfa8:	movk	w2, #0xfd2f, lsl #16
   4dfac:	cmp	w3, w2
   4dfb0:	b.eq	4dfc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6aa0>  // b.none
   4dfb4:	mov	x0, #0xfffffffffffffff6    	// #-10
   4dfb8:	str	x0, [x8]
   4dfbc:	b	4df88 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6a68>
   4dfc0:	add	x0, x0, #0x8
   4dfc4:	cmp	x0, x1
   4dfc8:	b.ls	4dfd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ab4>  // b.plast
   4dfcc:	mov	x0, #0xffffffffffffffb8    	// #-72
   4dfd0:	b	4dfb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6a98>
   4dfd4:	add	x6, x9, x5
   4dfd8:	add	x2, sp, #0x18
   4dfdc:	sub	x5, x1, x5
   4dfe0:	mov	x10, #0x0                   	// #0
   4dfe4:	mov	x1, x5
   4dfe8:	mov	x0, x6
   4dfec:	bl	4b08c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3b6c>
   4dff0:	cmn	x0, #0x78
   4dff4:	b.hi	4dfb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6a98>  // b.pmore
   4dff8:	sub	x5, x5, #0x3
   4dffc:	add	x6, x6, #0x3
   4e000:	cmp	x0, x5
   4e004:	b.hi	4dfcc <ZDICT_addEntropyTablesFromBuffer@@Base+0x6aac>  // b.pmore
   4e008:	cbz	x0, 4e01c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   4e00c:	add	x6, x6, x0
   4e010:	sub	x5, x5, x0
   4e014:	add	x10, x10, #0x1
   4e018:	b	4dfe4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ac4>
   4e01c:	sub	x6, x6, x9
   4e020:	str	x6, [x8]
   4e024:	lsl	x10, x10, #17
   4e028:	str	x10, [x7]
   4e02c:	b	4df90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6a70>
   4e030:	ldr	x0, [x0, #21552]
   4e034:	ret
   4e038:	stp	x29, x30, [sp, #-64]!
   4e03c:	mov	x6, x2
   4e040:	mov	x29, sp
   4e044:	ldr	x2, [x0, #21552]
   4e048:	stp	x19, x20, [sp, #16]
   4e04c:	stp	x21, x22, [sp, #32]
   4e050:	cmp	x2, x4
   4e054:	b.eq	4e070 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b50>  // b.none
   4e058:	mov	x19, #0xffffffffffffffb8    	// #-72
   4e05c:	mov	x0, x19
   4e060:	ldp	x19, x20, [sp, #16]
   4e064:	ldp	x21, x22, [sp, #32]
   4e068:	ldp	x29, x30, [sp], #64
   4e06c:	ret
   4e070:	mov	x20, x0
   4e074:	mov	x21, x1
   4e078:	mov	x5, x3
   4e07c:	mov	x19, x4
   4e080:	cbz	x6, 4e088 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b68>
   4e084:	bl	4b0ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bcc>
   4e088:	add	x22, x20, #0x4, lsl #12
   4e08c:	ldr	w1, [x22, #5204]
   4e090:	cmp	w1, #0x3
   4e094:	b.hi	4e228 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6d08>  // b.pmore
   4e098:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   4e09c:	add	x0, x0, #0xe28
   4e0a0:	ldrb	w0, [x0, w1, uxtw]
   4e0a4:	adr	x1, 4e0b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b90>
   4e0a8:	add	x0, x1, w0, sxtb #2
   4e0ac:	br	x0
   4e0b0:	cmp	x19, #0x5
   4e0b4:	b.ne	4e058 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b38>  // b.any
   4e0b8:	ldrb	w1, [x5, #4]
   4e0bc:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   4e0c0:	add	x0, x0, #0xe38
   4e0c4:	add	x0, x0, #0x620
   4e0c8:	ubfx	x1, x1, #6, #2
   4e0cc:	ldr	x0, [x0, x1, lsl #3]
   4e0d0:	add	x19, x0, #0x5
   4e0d4:	str	x19, [x20, #21560]
   4e0d8:	cmn	x19, #0x78
   4e0dc:	b.hi	4e05c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b3c>  // b.pmore
   4e0e0:	mov	x1, #0x5478                	// #21624
   4e0e4:	ldr	w3, [x5]
   4e0e8:	movk	x1, #0x2, lsl #16
   4e0ec:	add	x2, x20, x1
   4e0f0:	cmp	x19, #0x5
   4e0f4:	str	w3, [x20, x1]
   4e0f8:	ldrb	w1, [x5, #4]
   4e0fc:	strb	w1, [x2, #4]
   4e100:	b.ls	4e114 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6bf4>  // b.plast
   4e104:	str	x0, [x20, #21552]
   4e108:	mov	w0, #0x1                   	// #1
   4e10c:	str	w0, [x22, #5204]
   4e110:	b	4e190 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6c70>
   4e114:	str	xzr, [x20, #21552]
   4e118:	ldr	x2, [x20, #21552]
   4e11c:	add	x0, x20, #0x25, lsl #12
   4e120:	mov	x1, x5
   4e124:	add	x0, x0, #0x47d
   4e128:	bl	4460 <memcpy@plt>
   4e12c:	ldr	x2, [x20, #21560]
   4e130:	add	x1, x20, #0x25, lsl #12
   4e134:	add	x1, x1, #0x478
   4e138:	mov	x0, #0x5440                	// #21568
   4e13c:	add	x0, x20, x0
   4e140:	bl	4dc08 <ZDICT_addEntropyTablesFromBuffer@@Base+0x66e8>
   4e144:	mov	x19, x0
   4e148:	cmn	x0, #0x78
   4e14c:	b.hi	4e05c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b3c>  // b.pmore
   4e150:	mov	x0, #0x3                   	// #3
   4e154:	str	x0, [x20, #21552]
   4e158:	mov	w0, #0x2                   	// #2
   4e15c:	b	4e10c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6bec>
   4e160:	add	x2, sp, #0x38
   4e164:	mov	x0, x5
   4e168:	mov	x1, #0x3                   	// #3
   4e16c:	bl	4b08c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3b6c>
   4e170:	mov	x19, x0
   4e174:	cmn	x0, #0x78
   4e178:	b.hi	4e05c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b3c>  // b.pmore
   4e17c:	ldr	w0, [sp, #56]
   4e180:	cmp	w0, #0x3
   4e184:	b.ne	4e198 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6c78>  // b.any
   4e188:	str	xzr, [x20, #21552]
   4e18c:	str	wzr, [x22, #5204]
   4e190:	mov	x19, #0x0                   	// #0
   4e194:	b	4e05c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b3c>
   4e198:	str	x19, [x20, #21552]
   4e19c:	str	w0, [x22, #5200]
   4e1a0:	mov	w0, #0x3                   	// #3
   4e1a4:	b	4e10c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6bec>
   4e1a8:	ldr	w0, [x22, #5200]
   4e1ac:	cmp	w0, #0x1
   4e1b0:	b.eq	4e1f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6cd8>  // b.none
   4e1b4:	cmp	w0, #0x3
   4e1b8:	b.eq	4e218 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6cf8>  // b.none
   4e1bc:	cbnz	w0, 4e228 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6d08>
   4e1c0:	mov	x4, x19
   4e1c4:	mov	x3, x5
   4e1c8:	mov	x2, x6
   4e1cc:	mov	x1, x21
   4e1d0:	mov	x0, x20
   4e1d4:	bl	4daac <ZDICT_addEntropyTablesFromBuffer@@Base+0x658c>
   4e1d8:	mov	x19, x0
   4e1dc:	mov	w0, #0x2                   	// #2
   4e1e0:	str	w0, [x22, #5204]
   4e1e4:	add	x21, x21, x19
   4e1e8:	mov	x0, #0x3                   	// #3
   4e1ec:	str	x21, [x20, #21520]
   4e1f0:	str	x0, [x20, #21552]
   4e1f4:	b	4e05c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b3c>
   4e1f8:	cbz	x21, 4e220 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6d00>
   4e1fc:	cmp	x19, x6
   4e200:	b.hi	4e220 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6d00>  // b.pmore
   4e204:	mov	x2, x19
   4e208:	mov	x1, x5
   4e20c:	mov	x0, x21
   4e210:	bl	4460 <memcpy@plt>
   4e214:	b	4e1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x6cbc>
   4e218:	mov	x19, #0x0                   	// #0
   4e21c:	b	4e1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x6cbc>
   4e220:	mov	x19, #0xffffffffffffffba    	// #-70
   4e224:	b	4e1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x6cbc>
   4e228:	mov	x19, #0xffffffffffffffff    	// #-1
   4e22c:	b	4e05c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b3c>
   4e230:	stp	x29, x30, [sp, #-48]!
   4e234:	mov	x29, sp
   4e238:	stp	x19, x20, [sp, #16]
   4e23c:	mov	x19, x0
   4e240:	mov	x20, x1
   4e244:	stp	x21, x22, [sp, #32]
   4e248:	bl	4db88 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6668>
   4e24c:	cmn	x0, #0x78
   4e250:	b.hi	4e2a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6d80>  // b.pmore
   4e254:	cmp	x20, #0x0
   4e258:	mov	x21, x2
   4e25c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   4e260:	b.eq	4e29c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6d7c>  // b.none
   4e264:	ldr	w1, [x20]
   4e268:	mov	w0, #0xa436                	// #42038
   4e26c:	movk	w0, #0xec30, lsl #16
   4e270:	cmp	w1, w0
   4e274:	b.eq	4e2b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6d90>  // b.none
   4e278:	ldr	x0, [x19, #21520]
   4e27c:	str	x0, [x19, #21544]
   4e280:	ldr	x1, [x19, #21528]
   4e284:	str	x20, [x19, #21528]
   4e288:	sub	x0, x0, x1
   4e28c:	sub	x0, x20, x0
   4e290:	str	x0, [x19, #21536]
   4e294:	add	x20, x20, x21
   4e298:	str	x20, [x19, #21520]
   4e29c:	mov	x0, #0x0                   	// #0
   4e2a0:	ldp	x19, x20, [sp, #16]
   4e2a4:	ldp	x21, x22, [sp, #32]
   4e2a8:	ldp	x29, x30, [sp], #48
   4e2ac:	ret
   4e2b0:	add	x22, x20, #0x4
   4e2b4:	sub	x2, x2, #0x4
   4e2b8:	mov	x1, x22
   4e2bc:	mov	x0, x19
   4e2c0:	bl	4cfdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x5abc>
   4e2c4:	cmn	x0, #0x78
   4e2c8:	b.hi	4e2f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6dd0>  // b.pmore
   4e2cc:	add	x22, x22, x0
   4e2d0:	ldr	x2, [x19, #21520]
   4e2d4:	str	x2, [x19, #21544]
   4e2d8:	ldr	x0, [x19, #21528]
   4e2dc:	str	x22, [x19, #21528]
   4e2e0:	sub	x2, x2, x0
   4e2e4:	sub	x2, x22, x2
   4e2e8:	str	x2, [x19, #21536]
   4e2ec:	b	4e294 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6d74>
   4e2f0:	mov	x0, #0xffffffffffffffe2    	// #-30
   4e2f4:	b	4e2a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6d80>
   4e2f8:	stp	x29, x30, [sp, #-64]!
   4e2fc:	mov	x29, sp
   4e300:	stp	x21, x22, [sp, #32]
   4e304:	mov	x21, x2
   4e308:	mov	x2, x6
   4e30c:	mov	x22, x3
   4e310:	stp	x19, x20, [sp, #16]
   4e314:	mov	x19, x0
   4e318:	mov	x20, x1
   4e31c:	mov	x1, x5
   4e320:	str	x23, [sp, #48]
   4e324:	mov	x23, x4
   4e328:	bl	4e230 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6d10>
   4e32c:	mov	x1, x20
   4e330:	mov	x0, x19
   4e334:	bl	4b0ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bcc>
   4e338:	mov	x4, x23
   4e33c:	mov	x3, x22
   4e340:	mov	x2, x21
   4e344:	ldp	x19, x20, [sp, #16]
   4e348:	ldp	x21, x22, [sp, #32]
   4e34c:	ldr	x23, [sp, #48]
   4e350:	ldp	x29, x30, [sp], #64
   4e354:	b	4dcbc <ZDICT_addEntropyTablesFromBuffer@@Base+0x679c>
   4e358:	mov	x6, #0x0                   	// #0
   4e35c:	mov	x5, #0x0                   	// #0
   4e360:	b	4e2f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6dd8>
   4e364:	stp	x29, x30, [sp, #-64]!
   4e368:	mov	x29, sp
   4e36c:	stp	x19, x20, [sp, #16]
   4e370:	mov	x19, x0
   4e374:	stp	x21, x22, [sp, #32]
   4e378:	mov	x21, x1
   4e37c:	mov	x22, x2
   4e380:	str	x23, [sp, #48]
   4e384:	mov	x23, x3
   4e388:	bl	4dbbc <ZDICT_addEntropyTablesFromBuffer@@Base+0x669c>
   4e38c:	cbz	x0, 4e3cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x6eac>
   4e390:	mov	x1, x19
   4e394:	mov	x4, x23
   4e398:	mov	x3, x22
   4e39c:	mov	x2, x21
   4e3a0:	mov	x20, x0
   4e3a4:	bl	4e358 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6e38>
   4e3a8:	mov	x19, x0
   4e3ac:	mov	x0, x20
   4e3b0:	bl	48e0 <free@plt>
   4e3b4:	mov	x0, x19
   4e3b8:	ldp	x19, x20, [sp, #16]
   4e3bc:	ldp	x21, x22, [sp, #32]
   4e3c0:	ldr	x23, [sp, #48]
   4e3c4:	ldp	x29, x30, [sp], #64
   4e3c8:	ret
   4e3cc:	mov	x19, #0xffffffffffffffc0    	// #-64
   4e3d0:	b	4e3b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6e94>
   4e3d4:	stp	x29, x30, [sp, #-32]!
   4e3d8:	mov	x0, #0x78                  	// #120
   4e3dc:	mov	x29, sp
   4e3e0:	str	x19, [sp, #16]
   4e3e4:	bl	46a0 <malloc@plt>
   4e3e8:	mov	x19, x0
   4e3ec:	cbz	x0, 4e408 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ee8>
   4e3f0:	mov	x2, #0x78                  	// #120
   4e3f4:	mov	w1, #0x0                   	// #0
   4e3f8:	bl	4700 <memset@plt>
   4e3fc:	bl	4dbbc <ZDICT_addEntropyTablesFromBuffer@@Base+0x669c>
   4e400:	str	x0, [x19]
   4e404:	str	wzr, [x19, #24]
   4e408:	mov	x0, x19
   4e40c:	ldr	x19, [sp, #16]
   4e410:	ldp	x29, x30, [sp], #32
   4e414:	ret
   4e418:	cbz	x0, 4e45c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6f3c>
   4e41c:	stp	x29, x30, [sp, #-32]!
   4e420:	mov	x29, sp
   4e424:	str	x19, [sp, #16]
   4e428:	mov	x19, x0
   4e42c:	ldr	x0, [x0]
   4e430:	bl	48e0 <free@plt>
   4e434:	ldr	x0, [x19, #32]
   4e438:	bl	48e0 <free@plt>
   4e43c:	ldr	x0, [x19, #56]
   4e440:	bl	48e0 <free@plt>
   4e444:	mov	x0, x19
   4e448:	bl	48e0 <free@plt>
   4e44c:	mov	x0, #0x0                   	// #0
   4e450:	ldr	x19, [sp, #16]
   4e454:	ldp	x29, x30, [sp], #32
   4e458:	ret
   4e45c:	mov	x0, #0x0                   	// #0
   4e460:	ret
   4e464:	mov	w3, #0x1                   	// #1
   4e468:	str	w3, [x0, #24]
   4e46c:	str	xzr, [x0, #48]
   4e470:	stp	xzr, xzr, [x0, #72]
   4e474:	str	xzr, [x0, #112]
   4e478:	ldr	x0, [x0]
   4e47c:	b	4e230 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6d10>
   4e480:	mov	x2, #0x0                   	// #0
   4e484:	mov	x1, #0x0                   	// #0
   4e488:	b	4e464 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6f44>
   4e48c:	stp	x29, x30, [sp, #-128]!
   4e490:	mov	x29, sp
   4e494:	stp	x21, x22, [sp, #32]
   4e498:	mov	x22, x2
   4e49c:	stp	x27, x28, [sp, #80]
   4e4a0:	mov	x27, x0
   4e4a4:	ldr	x21, [x4]
   4e4a8:	stp	x19, x20, [sp, #16]
   4e4ac:	mov	x20, x1
   4e4b0:	ldr	x0, [x2]
   4e4b4:	mov	x19, x3
   4e4b8:	add	x21, x3, x21
   4e4bc:	stp	x23, x24, [sp, #48]
   4e4c0:	add	x0, x1, x0
   4e4c4:	mov	x23, x1
   4e4c8:	mov	x24, x3
   4e4cc:	stp	x25, x26, [sp, #64]
   4e4d0:	mov	x25, x4
   4e4d4:	mov	w26, #0x2                   	// #2
   4e4d8:	str	x0, [sp, #96]
   4e4dc:	adrp	x0, 56000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae0>
   4e4e0:	add	x0, x0, #0xe2c
   4e4e4:	str	x0, [sp, #104]
   4e4e8:	ldr	w0, [x27, #24]
   4e4ec:	cmp	w0, #0x4
   4e4f0:	b.hi	4e508 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6fe8>  // b.pmore
   4e4f4:	ldr	x1, [sp, #104]
   4e4f8:	ldrh	w0, [x1, w0, uxtw #1]
   4e4fc:	adr	x1, 4e508 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6fe8>
   4e500:	add	x0, x1, w0, sxth #2
   4e504:	br	x0
   4e508:	mov	x28, #0xffffffffffffffff    	// #-1
   4e50c:	mov	x0, x28
   4e510:	ldp	x19, x20, [sp, #16]
   4e514:	ldp	x21, x22, [sp, #32]
   4e518:	ldp	x23, x24, [sp, #48]
   4e51c:	ldp	x25, x26, [sp, #64]
   4e520:	ldp	x27, x28, [sp, #80]
   4e524:	ldp	x29, x30, [sp], #128
   4e528:	ret
   4e52c:	ldr	x2, [x27, #112]
   4e530:	add	x3, x27, #0x60
   4e534:	mov	x1, x3
   4e538:	add	x0, x27, #0x8
   4e53c:	str	x3, [sp, #112]
   4e540:	bl	4dc08 <ZDICT_addEntropyTablesFromBuffer@@Base+0x66e8>
   4e544:	mov	x28, x0
   4e548:	ldr	x3, [sp, #112]
   4e54c:	cbz	x0, 4e5c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x70a0>
   4e550:	cmn	x0, #0x78
   4e554:	ldr	x0, [x27, #112]
   4e558:	sub	x2, x28, x0
   4e55c:	b.hi	4e50c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6fec>  // b.pmore
   4e560:	sub	x4, x21, x19
   4e564:	add	x0, x3, x0
   4e568:	cmp	x4, x2
   4e56c:	b.cs	4e5a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7084>  // b.hs, b.nlast
   4e570:	mov	x2, x4
   4e574:	mov	x1, x19
   4e578:	str	x4, [sp, #96]
   4e57c:	bl	4460 <memcpy@plt>
   4e580:	ldr	x4, [sp, #96]
   4e584:	ldr	x0, [x27, #112]
   4e588:	add	x0, x0, x4
   4e58c:	str	x0, [x27, #112]
   4e590:	str	xzr, [x22]
   4e594:	ldr	x0, [x27, #112]
   4e598:	sub	x0, x28, x0
   4e59c:	add	x28, x0, #0x3
   4e5a0:	b	4e50c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6fec>
   4e5a4:	mov	x1, x19
   4e5a8:	str	x2, [sp, #112]
   4e5ac:	bl	4460 <memcpy@plt>
   4e5b0:	str	x28, [x27, #112]
   4e5b4:	ldr	x2, [sp, #112]
   4e5b8:	add	x19, x19, x2
   4e5bc:	b	4e4e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6fc8>
   4e5c0:	ldr	x0, [x27]
   4e5c4:	mov	x2, #0x0                   	// #0
   4e5c8:	mov	x1, #0x0                   	// #0
   4e5cc:	ldr	x7, [x0, #21552]
   4e5d0:	stp	x3, x7, [sp, #112]
   4e5d4:	mov	x4, x7
   4e5d8:	bl	4e038 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b18>
   4e5dc:	mov	x28, x0
   4e5e0:	cmn	x0, #0x78
   4e5e4:	b.hi	4e50c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6fec>  // b.pmore
   4e5e8:	ldp	x3, x7, [sp, #112]
   4e5ec:	ldr	x0, [x27, #112]
   4e5f0:	cmp	x0, x7
   4e5f4:	b.hi	4e648 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7128>  // b.pmore
   4e5f8:	ldr	w0, [x27, #16]
   4e5fc:	mov	w1, #0x1                   	// #1
   4e600:	lsl	w1, w1, w0
   4e604:	cmp	w1, #0x20, lsl #12
   4e608:	mov	w0, #0x20000               	// #131072
   4e60c:	csel	w1, w1, w0, le
   4e610:	ldr	x0, [x27, #40]
   4e614:	sxtw	x28, w1
   4e618:	str	x28, [x27, #88]
   4e61c:	cmp	x0, x28
   4e620:	b.cs	4e670 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7150>  // b.hs, b.nlast
   4e624:	ldr	x0, [x27, #32]
   4e628:	bl	48e0 <free@plt>
   4e62c:	str	x28, [x27, #40]
   4e630:	mov	x0, x28
   4e634:	bl	46a0 <malloc@plt>
   4e638:	str	x0, [x27, #32]
   4e63c:	cbnz	x0, 4e670 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7150>
   4e640:	mov	x28, #0xffffffffffffffc0    	// #-64
   4e644:	b	4e50c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6fec>
   4e648:	ldr	x0, [x27]
   4e64c:	add	x3, x3, x7
   4e650:	mov	x2, #0x0                   	// #0
   4e654:	mov	x1, #0x0                   	// #0
   4e658:	ldr	x4, [x0, #21552]
   4e65c:	bl	4e038 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b18>
   4e660:	mov	x28, x0
   4e664:	cmn	x0, #0x78
   4e668:	b.ls	4e5f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x70d8>  // b.plast
   4e66c:	b	4e50c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6fec>
   4e670:	ldr	w2, [x27, #16]
   4e674:	mov	x0, #0x1                   	// #1
   4e678:	lsl	x0, x0, x2
   4e67c:	add	x0, x0, #0x10
   4e680:	add	x28, x0, x28
   4e684:	ldr	x0, [x27, #64]
   4e688:	cmp	x0, x28
   4e68c:	b.cs	4e6ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x718c>  // b.hs, b.nlast
   4e690:	ldr	x0, [x27, #56]
   4e694:	bl	48e0 <free@plt>
   4e698:	str	x28, [x27, #64]
   4e69c:	mov	x0, x28
   4e6a0:	bl	46a0 <malloc@plt>
   4e6a4:	str	x0, [x27, #56]
   4e6a8:	cbz	x0, 4e640 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7120>
   4e6ac:	str	w26, [x27, #24]
   4e6b0:	ldr	x0, [x27]
   4e6b4:	ldr	x4, [x0, #21552]
   4e6b8:	cbnz	x4, 4e6f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x71d0>
   4e6bc:	str	wzr, [x27, #24]
   4e6c0:	ldr	x0, [x27]
   4e6c4:	sub	x19, x19, x24
   4e6c8:	str	x19, [x25]
   4e6cc:	sub	x20, x20, x23
   4e6d0:	str	x20, [x22]
   4e6d4:	ldr	x0, [x0, #21552]
   4e6d8:	cmp	x0, #0x3
   4e6dc:	b.ls	4e6e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x71c4>  // b.plast
   4e6e0:	add	x0, x0, #0x3
   4e6e4:	ldr	x6, [x27, #48]
   4e6e8:	sub	x28, x0, x6
   4e6ec:	b	4e50c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6fec>
   4e6f0:	sub	x1, x21, x19
   4e6f4:	cmp	x1, x4
   4e6f8:	b.cc	4e748 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7228>  // b.lo, b.ul, b.last
   4e6fc:	ldp	x6, x2, [x27, #56]
   4e700:	mov	x3, x19
   4e704:	ldr	x1, [x27, #72]
   4e708:	str	x4, [sp, #112]
   4e70c:	sub	x2, x2, x1
   4e710:	add	x1, x6, x1
   4e714:	bl	4e038 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b18>
   4e718:	mov	x28, x0
   4e71c:	cmn	x0, #0x78
   4e720:	b.hi	4e50c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6fec>  // b.pmore
   4e724:	ldr	x4, [sp, #112]
   4e728:	add	x19, x19, x4
   4e72c:	cbz	x0, 4e4e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6fc8>
   4e730:	ldr	x0, [x27, #72]
   4e734:	add	x0, x0, x28
   4e738:	str	x0, [x27, #80]
   4e73c:	mov	w0, #0x4                   	// #4
   4e740:	str	w0, [x27, #24]
   4e744:	b	4e4e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6fc8>
   4e748:	cmp	x21, x19
   4e74c:	b.eq	4e6c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x71a0>  // b.none
   4e750:	mov	w0, #0x3                   	// #3
   4e754:	str	w0, [x27, #24]
   4e758:	ldr	x0, [x27]
   4e75c:	ldr	x1, [x27, #40]
   4e760:	ldr	x28, [x0, #21552]
   4e764:	ldr	x0, [x27, #48]
   4e768:	sub	x3, x28, x0
   4e76c:	sub	x1, x1, x0
   4e770:	cmp	x1, x3
   4e774:	b.cc	4e874 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7354>  // b.lo, b.ul, b.last
   4e778:	sub	x2, x21, x19
   4e77c:	mov	x1, x19
   4e780:	ldr	x6, [x27, #32]
   4e784:	cmp	x2, x3
   4e788:	csel	x2, x2, x3, ls  // ls = plast
   4e78c:	stp	x2, x3, [sp, #112]
   4e790:	add	x0, x6, x0
   4e794:	bl	4460 <memcpy@plt>
   4e798:	ldp	x2, x3, [sp, #112]
   4e79c:	ldr	x0, [x27, #48]
   4e7a0:	add	x0, x0, x2
   4e7a4:	str	x0, [x27, #48]
   4e7a8:	add	x19, x19, x2
   4e7ac:	cmp	x3, x2
   4e7b0:	b.hi	4e6c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x71a0>  // b.pmore
   4e7b4:	ldp	x1, x2, [x27, #56]
   4e7b8:	mov	x4, x28
   4e7bc:	ldr	x0, [x27, #72]
   4e7c0:	ldr	x3, [x27, #32]
   4e7c4:	sub	x2, x2, x0
   4e7c8:	add	x1, x1, x0
   4e7cc:	ldr	x0, [x27]
   4e7d0:	bl	4e038 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b18>
   4e7d4:	mov	x28, x0
   4e7d8:	cmn	x0, #0x78
   4e7dc:	b.hi	4e50c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6fec>  // b.pmore
   4e7e0:	str	xzr, [x27, #48]
   4e7e4:	cbnz	x0, 4e7f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x72d0>
   4e7e8:	str	w26, [x27, #24]
   4e7ec:	b	4e4e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6fc8>
   4e7f0:	ldr	x0, [x27, #72]
   4e7f4:	add	x0, x0, x28
   4e7f8:	str	x0, [x27, #80]
   4e7fc:	mov	w0, #0x4                   	// #4
   4e800:	str	w0, [x27, #24]
   4e804:	ldp	x0, x3, [x27, #72]
   4e808:	ldr	x1, [sp, #96]
   4e80c:	sub	x4, x1, x20
   4e810:	sub	x28, x3, x0
   4e814:	cmp	x4, x28
   4e818:	ldr	x1, [x27, #56]
   4e81c:	csel	x2, x4, x28, ls  // ls = plast
   4e820:	stp	x2, x4, [sp, #112]
   4e824:	add	x1, x1, x0
   4e828:	mov	x0, x20
   4e82c:	bl	4460 <memcpy@plt>
   4e830:	ldp	x2, x4, [sp, #112]
   4e834:	ldr	x0, [x27, #72]
   4e838:	add	x20, x20, x2
   4e83c:	add	x2, x2, x0
   4e840:	str	x2, [x27, #72]
   4e844:	cmp	x4, x28
   4e848:	b.cc	4e6c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x71a0>  // b.lo, b.ul, b.last
   4e84c:	ldr	x0, [x27, #88]
   4e850:	str	w26, [x27, #24]
   4e854:	add	x2, x2, x0
   4e858:	ldr	x0, [x27, #64]
   4e85c:	cmp	x2, x0
   4e860:	b.ls	4e4e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6fc8>  // b.plast
   4e864:	stp	xzr, xzr, [x27, #72]
   4e868:	b	4e4e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6fc8>
   4e86c:	mov	x28, #0xffffffffffffffc2    	// #-62
   4e870:	b	4e50c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6fec>
   4e874:	mov	x28, #0xffffffffffffffec    	// #-20
   4e878:	b	4e50c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6fec>
   4e87c:	mov	x0, #0x3                   	// #3
   4e880:	movk	x0, #0x2, lsl #16
   4e884:	ret
   4e888:	mov	x0, #0x20000               	// #131072
   4e88c:	ret
   4e890:	ldr	x2, [x0]
   4e894:	mvn	w4, w1
   4e898:	ldr	w3, [x0, #8]
   4e89c:	add	w1, w1, w3
   4e8a0:	str	w1, [x0, #8]
   4e8a4:	lsl	x2, x2, x3
   4e8a8:	lsr	x2, x2, #1
   4e8ac:	lsr	x0, x2, x4
   4e8b0:	ret
   4e8b4:	ldr	w3, [x0, #8]
   4e8b8:	mov	x2, x0
   4e8bc:	cmp	w3, #0x40
   4e8c0:	b.hi	4e950 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7430>  // b.pmore
   4e8c4:	ldp	x1, x0, [x0, #16]
   4e8c8:	add	x4, x0, #0x8
   4e8cc:	cmp	x1, x4
   4e8d0:	b.cc	4e8f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x73d8>  // b.lo, b.ul, b.last
   4e8d4:	lsr	w0, w3, #3
   4e8d8:	and	w3, w3, #0x7
   4e8dc:	sub	x1, x1, x0
   4e8e0:	str	w3, [x2, #8]
   4e8e4:	str	x1, [x2, #16]
   4e8e8:	ldr	x0, [x1]
   4e8ec:	str	x0, [x2]
   4e8f0:	mov	w0, #0x0                   	// #0
   4e8f4:	ret
   4e8f8:	cmp	x1, x0
   4e8fc:	b.ne	4e910 <ZDICT_addEntropyTablesFromBuffer@@Base+0x73f0>  // b.any
   4e900:	cmp	w3, #0x40
   4e904:	cset	w0, eq  // eq = none
   4e908:	add	w0, w0, #0x1
   4e90c:	b	4e8f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x73d4>
   4e910:	lsr	w5, w3, #3
   4e914:	lsr	w4, w3, #3
   4e918:	sub	x5, x1, x5
   4e91c:	cmp	x0, x5
   4e920:	b.ls	4e948 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7428>  // b.plast
   4e924:	sub	w4, w1, w0
   4e928:	mov	w0, #0x1                   	// #1
   4e92c:	sub	x1, x1, w4, uxtw
   4e930:	sub	w3, w3, w4, lsl #3
   4e934:	str	w3, [x2, #8]
   4e938:	str	x1, [x2, #16]
   4e93c:	ldr	x1, [x1]
   4e940:	str	x1, [x2]
   4e944:	b	4e8f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x73d4>
   4e948:	mov	w0, #0x0                   	// #0
   4e94c:	b	4e92c <ZDICT_addEntropyTablesFromBuffer@@Base+0x740c>
   4e950:	mov	w0, #0x3                   	// #3
   4e954:	b	4e8f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x73d4>
   4e958:	ldp	x2, x1, [x0, #16]
   4e95c:	cmp	x2, x1
   4e960:	b.ne	4e974 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7454>  // b.any
   4e964:	ldr	w0, [x0, #8]
   4e968:	cmp	w0, #0x40
   4e96c:	cset	w0, eq  // eq = none
   4e970:	ret
   4e974:	mov	w0, #0x0                   	// #0
   4e978:	b	4e970 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7450>
   4e97c:	mov	x6, x2
   4e980:	stp	x29, x30, [sp, #-16]!
   4e984:	mov	x5, x1
   4e988:	mov	x29, sp
   4e98c:	ldrh	w1, [x6], #4
   4e990:	mov	x7, x0
   4e994:	mov	x0, x5
   4e998:	bl	4e890 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7370>
   4e99c:	str	x0, [x7]
   4e9a0:	mov	x0, x5
   4e9a4:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4e9a8:	ldp	x29, x30, [sp], #16
   4e9ac:	str	x6, [x7, #8]
   4e9b0:	ret
   4e9b4:	mov	x5, x0
   4e9b8:	stp	x29, x30, [sp, #-16]!
   4e9bc:	mov	x0, x1
   4e9c0:	mov	x29, sp
   4e9c4:	ldp	x1, x2, [x5]
   4e9c8:	lsl	x3, x1, #2
   4e9cc:	add	x1, x2, x1, lsl #2
   4e9d0:	ldrh	w6, [x2, x3]
   4e9d4:	ldrb	w1, [x1, #3]
   4e9d8:	bl	4e890 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7370>
   4e9dc:	add	x6, x0, w6, uxth
   4e9e0:	ldp	x29, x30, [sp], #16
   4e9e4:	str	x6, [x5]
   4e9e8:	ret
   4e9ec:	mov	x5, x0
   4e9f0:	stp	x29, x30, [sp, #-16]!
   4e9f4:	mov	x0, x1
   4e9f8:	mov	x29, sp
   4e9fc:	ldp	x1, x2, [x5]
   4ea00:	lsl	x3, x1, #2
   4ea04:	add	x1, x2, x1, lsl #2
   4ea08:	ldrh	w6, [x2, x3]
   4ea0c:	ldrb	w7, [x1, #2]
   4ea10:	ldrb	w1, [x1, #3]
   4ea14:	bl	4e890 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7370>
   4ea18:	add	x6, x0, w6, uxth
   4ea1c:	ldp	x29, x30, [sp], #16
   4ea20:	mov	w0, w7
   4ea24:	str	x6, [x5]
   4ea28:	ret
   4ea2c:	cmp	x1, #0x4
   4ea30:	b.ls	4ea80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7560>  // b.plast
   4ea34:	ldrb	w1, [x0, #4]
   4ea38:	adrp	x0, 57000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfae0>
   4ea3c:	add	x0, x0, #0x4a0
   4ea40:	and	x3, x1, #0x3
   4ea44:	ubfx	x2, x1, #6, #2
   4ea48:	ldr	x2, [x0, x2, lsl #3]
   4ea4c:	add	x0, x0, #0x20
   4ea50:	ldr	x0, [x0, x3, lsl #3]
   4ea54:	ubfx	x3, x1, #5, #1
   4ea58:	add	x0, x2, x0
   4ea5c:	sub	x0, x0, x3
   4ea60:	add	x0, x0, #0x6
   4ea64:	tbz	w1, #5, 4ea78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7558>
   4ea68:	cmp	x2, #0x0
   4ea6c:	cset	w1, eq  // eq = none
   4ea70:	add	x0, x0, w1, sxtw
   4ea74:	ret
   4ea78:	mov	w1, #0x0                   	// #0
   4ea7c:	b	4ea70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7550>
   4ea80:	mov	x0, #0xffffffffffffffb8    	// #-72
   4ea84:	b	4ea74 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7554>
   4ea88:	cmp	x1, #0x2
   4ea8c:	b.ls	4ead8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x75b8>  // b.plast
   4ea90:	ldrb	w3, [x0]
   4ea94:	lsr	w3, w3, #6
   4ea98:	str	w3, [x2]
   4ea9c:	cmp	w3, #0x2
   4eaa0:	ldrb	w1, [x0, #1]
   4eaa4:	ldrb	w4, [x0, #2]
   4eaa8:	ldrb	w0, [x0]
   4eaac:	add	w1, w4, w1, lsl #8
   4eab0:	ubfiz	w0, w0, #16, #3
   4eab4:	add	w0, w1, w0
   4eab8:	csel	w1, w0, wzr, eq  // eq = none
   4eabc:	str	w1, [x2, #4]
   4eac0:	cmp	w3, #0x3
   4eac4:	b.eq	4eae0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x75c0>  // b.none
   4eac8:	sxtw	x0, w0
   4eacc:	cmp	w3, #0x2
   4ead0:	csinc	x0, x0, xzr, ne  // ne = any
   4ead4:	ret
   4ead8:	mov	x0, #0xffffffffffffffb8    	// #-72
   4eadc:	b	4ead4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x75b4>
   4eae0:	mov	x0, #0x0                   	// #0
   4eae4:	b	4ead4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x75b4>
   4eae8:	ldr	x2, [x0, #21520]
   4eaec:	cmp	x2, x1
   4eaf0:	b.eq	4eb10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x75f0>  // b.none
   4eaf4:	ldr	x3, [x0, #21528]
   4eaf8:	str	x2, [x0, #21544]
   4eafc:	str	x1, [x0, #21520]
   4eb00:	sub	x2, x2, x3
   4eb04:	str	x1, [x0, #21528]
   4eb08:	sub	x2, x1, x2
   4eb0c:	str	x2, [x0, #21536]
   4eb10:	ret
   4eb14:	cmn	x0, #0x78
   4eb18:	b.ls	4eb24 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7604>  // b.plast
   4eb1c:	neg	w0, w0
   4eb20:	b	511c <ZSTD_initDStream_usingDDict@plt+0x59c>
   4eb24:	mov	w0, #0x0                   	// #0
   4eb28:	b	4eb20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7600>
   4eb2c:	mov	x0, x1
   4eb30:	b	46a0 <malloc@plt>
   4eb34:	mov	x0, x1
   4eb38:	b	48e0 <free@plt>
   4eb3c:	mov	x3, x0
   4eb40:	mov	x0, x2
   4eb44:	cbnz	x2, 4eb58 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7638>
   4eb48:	mov	x0, #0xffffffffffffffb8    	// #-72
   4eb4c:	stp	xzr, xzr, [x3]
   4eb50:	stp	xzr, xzr, [x3, #16]
   4eb54:	ret
   4eb58:	str	x1, [x3, #24]
   4eb5c:	sub	x6, x2, #0x1
   4eb60:	cmp	x2, #0x7
   4eb64:	b.ls	4eba8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7688>  // b.plast
   4eb68:	sub	x2, x2, #0x8
   4eb6c:	add	x4, x1, x2
   4eb70:	str	x4, [x3, #16]
   4eb74:	ldr	x2, [x1, x2]
   4eb78:	str	x2, [x3]
   4eb7c:	ldrb	w2, [x1, x6]
   4eb80:	clz	w1, w2
   4eb84:	cmp	w2, #0x0
   4eb88:	eor	w4, w1, #0x1f
   4eb8c:	mov	w1, #0x8                   	// #8
   4eb90:	sub	w1, w1, w4
   4eb94:	csel	w1, w1, wzr, ne  // ne = any
   4eb98:	str	w1, [x3, #8]
   4eb9c:	cbnz	w2, 4eb54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7634>
   4eba0:	mov	x0, #0xffffffffffffffff    	// #-1
   4eba4:	b	4eb54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7634>
   4eba8:	str	x1, [x3, #16]
   4ebac:	sub	x5, x2, #0x2
   4ebb0:	cmp	x5, #0x5
   4ebb4:	ldrb	w7, [x1]
   4ebb8:	str	x7, [x3]
   4ebbc:	b.hi	4ec3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x771c>  // b.pmore
   4ebc0:	cmp	w5, #0x5
   4ebc4:	b.hi	4ec3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x771c>  // b.pmore
   4ebc8:	adrp	x4, 57000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfae0>
   4ebcc:	add	x4, x4, #0x478
   4ebd0:	ldrb	w2, [x4, w5, uxtw]
   4ebd4:	adr	x4, 4ebe0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76c0>
   4ebd8:	add	x2, x4, w2, sxtb #2
   4ebdc:	br	x2
   4ebe0:	ldrb	w2, [x1, #6]
   4ebe4:	add	x2, x7, x2, lsl #48
   4ebe8:	str	x2, [x3]
   4ebec:	ldr	x4, [x3]
   4ebf0:	ldrb	w2, [x1, #5]
   4ebf4:	add	x2, x4, x2, lsl #40
   4ebf8:	str	x2, [x3]
   4ebfc:	ldr	x4, [x3]
   4ec00:	ldrb	w2, [x1, #4]
   4ec04:	add	x2, x4, x2, lsl #32
   4ec08:	str	x2, [x3]
   4ec0c:	ldr	x4, [x3]
   4ec10:	ldrb	w2, [x1, #3]
   4ec14:	add	x2, x4, x2, lsl #24
   4ec18:	str	x2, [x3]
   4ec1c:	ldr	x4, [x3]
   4ec20:	ldrb	w2, [x1, #2]
   4ec24:	add	x2, x4, x2, lsl #16
   4ec28:	str	x2, [x3]
   4ec2c:	ldr	x4, [x3]
   4ec30:	ldrb	w2, [x1, #1]
   4ec34:	add	x2, x4, x2, lsl #8
   4ec38:	str	x2, [x3]
   4ec3c:	ldrb	w1, [x1, x6]
   4ec40:	cbz	w1, 4ec64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7744>
   4ec44:	clz	w1, w1
   4ec48:	mov	w2, #0x8                   	// #8
   4ec4c:	eor	w1, w1, #0x1f
   4ec50:	sub	w1, w2, w1
   4ec54:	sub	w2, w2, w0
   4ec58:	add	w1, w1, w2, lsl #3
   4ec5c:	str	w1, [x3, #8]
   4ec60:	b	4eb54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7634>
   4ec64:	str	wzr, [x3, #8]
   4ec68:	b	4eba0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7680>
   4ec6c:	mov	x2, x0
   4ec70:	ldr	w6, [x1, #8]
   4ec74:	ldp	x4, x0, [x0]
   4ec78:	lsl	x3, x4, #2
   4ec7c:	add	x4, x0, x4, lsl #2
   4ec80:	ldrh	w5, [x0, x3]
   4ec84:	ldr	x3, [x1]
   4ec88:	ldrb	w0, [x4, #2]
   4ec8c:	ldrb	w4, [x4, #3]
   4ec90:	lsl	x3, x3, x6
   4ec94:	neg	w7, w4
   4ec98:	add	w4, w4, w6
   4ec9c:	str	w4, [x1, #8]
   4eca0:	lsr	x3, x3, x7
   4eca4:	add	x3, x3, w5, uxth
   4eca8:	str	x3, [x2]
   4ecac:	ret
   4ecb0:	ldr	x3, [x0]
   4ecb4:	neg	w2, w2
   4ecb8:	ldr	w5, [x0, #8]
   4ecbc:	mov	x4, x0
   4ecc0:	lsl	x3, x3, x5
   4ecc4:	lsr	x2, x3, x2
   4ecc8:	lsl	x0, x2, #1
   4eccc:	add	x2, x1, x2, lsl #1
   4ecd0:	ldrb	w0, [x1, x0]
   4ecd4:	ldrb	w1, [x2, #1]
   4ecd8:	add	w1, w1, w5
   4ecdc:	str	w1, [x4, #8]
   4ece0:	ret
   4ece4:	mov	x11, x0
   4ece8:	mov	x7, x1
   4ecec:	mov	x8, x2
   4ecf0:	mov	x9, x3
   4ecf4:	mov	w10, w4
   4ecf8:	mov	x6, x0
   4ecfc:	sub	x12, x2, #0x4
   4ed00:	stp	x29, x30, [sp, #-16]!
   4ed04:	mov	x29, sp
   4ed08:	mov	x0, x7
   4ed0c:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4ed10:	cbnz	w0, 4ed1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x77fc>
   4ed14:	cmp	x6, x12
   4ed18:	b.ls	4ed3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x781c>  // b.plast
   4ed1c:	mov	x0, x7
   4ed20:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4ed24:	cbnz	w0, 4edc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x78a0>
   4ed28:	cmp	x6, x8
   4ed2c:	b.cc	4ed94 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7874>  // b.lo, b.ul, b.last
   4ed30:	sub	x0, x8, x11
   4ed34:	ldp	x29, x30, [sp], #16
   4ed38:	ret
   4ed3c:	mov	w2, w10
   4ed40:	mov	x1, x9
   4ed44:	mov	x0, x7
   4ed48:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4ed4c:	strb	w0, [x6]
   4ed50:	mov	w2, w10
   4ed54:	mov	x1, x9
   4ed58:	mov	x0, x7
   4ed5c:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4ed60:	strb	w0, [x6, #1]
   4ed64:	mov	w2, w10
   4ed68:	mov	x1, x9
   4ed6c:	mov	x0, x7
   4ed70:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4ed74:	add	x6, x6, #0x4
   4ed78:	sturb	w0, [x6, #-2]
   4ed7c:	mov	w2, w10
   4ed80:	mov	x1, x9
   4ed84:	mov	x0, x7
   4ed88:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4ed8c:	sturb	w0, [x6, #-1]
   4ed90:	b	4ed08 <ZDICT_addEntropyTablesFromBuffer@@Base+0x77e8>
   4ed94:	mov	w2, w10
   4ed98:	mov	x1, x9
   4ed9c:	mov	x0, x7
   4eda0:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4eda4:	strb	w0, [x6], #1
   4eda8:	b	4ed1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x77fc>
   4edac:	mov	w2, w10
   4edb0:	mov	x1, x9
   4edb4:	mov	x0, x7
   4edb8:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4edbc:	strb	w0, [x6], #1
   4edc0:	cmp	x6, x8
   4edc4:	b.cc	4edac <ZDICT_addEntropyTablesFromBuffer@@Base+0x788c>  // b.lo, b.ul, b.last
   4edc8:	b	4ed30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7810>
   4edcc:	stp	x29, x30, [sp, #-48]!
   4edd0:	mov	x8, x0
   4edd4:	mov	x13, x1
   4edd8:	mov	x29, sp
   4eddc:	ldr	w10, [x4]
   4ede0:	add	x14, sp, #0x10
   4ede4:	mov	x9, x4
   4ede8:	mov	x1, x2
   4edec:	mov	x0, x14
   4edf0:	mov	x2, x3
   4edf4:	bl	4eb3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x761c>
   4edf8:	cmn	x0, #0x78
   4edfc:	b.hi	4ee2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x790c>  // b.pmore
   4ee00:	ubfx	x4, x10, #16, #8
   4ee04:	add	x3, x9, #0x4
   4ee08:	add	x2, x8, x13
   4ee0c:	mov	x1, x14
   4ee10:	mov	x0, x8
   4ee14:	bl	4ece4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x77c4>
   4ee18:	mov	x0, x14
   4ee1c:	bl	4e958 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7438>
   4ee20:	cmp	w0, #0x0
   4ee24:	mov	x0, #0xffffffffffffffec    	// #-20
   4ee28:	csel	x0, x13, x0, ne  // ne = any
   4ee2c:	ldp	x29, x30, [sp], #48
   4ee30:	ret
   4ee34:	cmp	x3, #0x9
   4ee38:	b.ls	4f1d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cb4>  // b.plast
   4ee3c:	ldrh	w18, [x2]
   4ee40:	mov	x9, x0
   4ee44:	ldrh	w12, [x2, #2]
   4ee48:	sub	x10, x3, #0x6
   4ee4c:	ldrh	w11, [x2, #4]
   4ee50:	add	x0, x18, x12
   4ee54:	sub	x10, x10, x0
   4ee58:	sub	x10, x10, x11
   4ee5c:	cmp	x3, x10
   4ee60:	b.cc	4f1d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cb4>  // b.lo, b.ul, b.last
   4ee64:	stp	x29, x30, [sp, #-224]!
   4ee68:	add	x8, x2, #0x6
   4ee6c:	mov	x15, x1
   4ee70:	mov	x29, sp
   4ee74:	stp	x19, x20, [sp, #16]
   4ee78:	mov	x13, x4
   4ee7c:	add	x19, sp, #0x60
   4ee80:	stp	x21, x22, [sp, #32]
   4ee84:	mov	x2, x18
   4ee88:	mov	x1, x8
   4ee8c:	stp	x23, x24, [sp, #48]
   4ee90:	mov	x0, x19
   4ee94:	stp	x25, x26, [sp, #64]
   4ee98:	str	x27, [sp, #80]
   4ee9c:	ldr	w14, [x4]
   4eea0:	bl	4eb3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x761c>
   4eea4:	cmn	x0, #0x78
   4eea8:	b.hi	4ef78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a58>  // b.pmore
   4eeac:	add	x8, x8, x18
   4eeb0:	add	x21, sp, #0x80
   4eeb4:	mov	x2, x12
   4eeb8:	mov	x1, x8
   4eebc:	mov	x0, x21
   4eec0:	bl	4eb3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x761c>
   4eec4:	cmn	x0, #0x78
   4eec8:	b.hi	4ef78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a58>  // b.pmore
   4eecc:	add	x8, x8, x12
   4eed0:	add	x20, sp, #0xa0
   4eed4:	mov	x2, x11
   4eed8:	mov	x1, x8
   4eedc:	mov	x0, x20
   4eee0:	bl	4eb3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x761c>
   4eee4:	cmn	x0, #0x78
   4eee8:	b.hi	4ef78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a58>  // b.pmore
   4eeec:	add	x18, sp, #0xc0
   4eef0:	mov	x2, x10
   4eef4:	add	x1, x8, x11
   4eef8:	mov	x0, x18
   4eefc:	bl	4eb3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x761c>
   4ef00:	cmn	x0, #0x78
   4ef04:	b.hi	4ef78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a58>  // b.pmore
   4ef08:	add	x25, x15, #0x3
   4ef0c:	add	x13, x13, #0x4
   4ef10:	ubfx	x14, x14, #16, #8
   4ef14:	add	x27, x9, x15
   4ef18:	add	x7, x9, x25, lsr #2
   4ef1c:	mov	x0, x19
   4ef20:	add	x26, x7, x25, lsr #2
   4ef24:	add	x25, x26, x25, lsr #2
   4ef28:	mov	x23, x26
   4ef2c:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4ef30:	mov	w8, w0
   4ef34:	mov	x0, x21
   4ef38:	mov	x22, x25
   4ef3c:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4ef40:	orr	w8, w8, w0
   4ef44:	mov	x0, x20
   4ef48:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4ef4c:	mov	w6, w0
   4ef50:	mov	x0, x18
   4ef54:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4ef58:	orr	w0, w6, w0
   4ef5c:	orr	w0, w0, w8
   4ef60:	mov	x24, x7
   4ef64:	sub	x10, x27, #0x7
   4ef68:	cbz	w0, 4ef94 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a74>
   4ef6c:	cmp	x9, x7
   4ef70:	b.ls	4f124 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7c04>  // b.plast
   4ef74:	mov	x0, #0xffffffffffffffec    	// #-20
   4ef78:	ldp	x19, x20, [sp, #16]
   4ef7c:	ldp	x21, x22, [sp, #32]
   4ef80:	ldp	x23, x24, [sp, #48]
   4ef84:	ldp	x25, x26, [sp, #64]
   4ef88:	ldr	x27, [sp, #80]
   4ef8c:	ldp	x29, x30, [sp], #224
   4ef90:	ret
   4ef94:	cmp	x22, x10
   4ef98:	b.cs	4ef6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a4c>  // b.hs, b.nlast
   4ef9c:	mov	w2, w14
   4efa0:	mov	x1, x13
   4efa4:	mov	x0, x19
   4efa8:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4efac:	strb	w0, [x9]
   4efb0:	mov	w2, w14
   4efb4:	mov	x1, x13
   4efb8:	mov	x0, x21
   4efbc:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4efc0:	strb	w0, [x24]
   4efc4:	mov	w2, w14
   4efc8:	mov	x1, x13
   4efcc:	mov	x0, x20
   4efd0:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4efd4:	strb	w0, [x23]
   4efd8:	mov	w2, w14
   4efdc:	mov	x1, x13
   4efe0:	mov	x0, x18
   4efe4:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4efe8:	strb	w0, [x22]
   4efec:	mov	w2, w14
   4eff0:	mov	x1, x13
   4eff4:	mov	x0, x19
   4eff8:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4effc:	strb	w0, [x9, #1]
   4f000:	mov	w2, w14
   4f004:	mov	x1, x13
   4f008:	mov	x0, x21
   4f00c:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4f010:	strb	w0, [x24, #1]
   4f014:	mov	w2, w14
   4f018:	mov	x1, x13
   4f01c:	mov	x0, x20
   4f020:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4f024:	strb	w0, [x23, #1]
   4f028:	mov	w2, w14
   4f02c:	mov	x1, x13
   4f030:	mov	x0, x18
   4f034:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4f038:	strb	w0, [x22, #1]
   4f03c:	mov	w2, w14
   4f040:	mov	x1, x13
   4f044:	mov	x0, x19
   4f048:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4f04c:	strb	w0, [x9, #2]
   4f050:	mov	w2, w14
   4f054:	mov	x1, x13
   4f058:	mov	x0, x21
   4f05c:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4f060:	strb	w0, [x24, #2]
   4f064:	mov	w2, w14
   4f068:	mov	x1, x13
   4f06c:	mov	x0, x20
   4f070:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4f074:	strb	w0, [x23, #2]
   4f078:	mov	w2, w14
   4f07c:	mov	x1, x13
   4f080:	mov	x0, x18
   4f084:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4f088:	add	x9, x9, #0x4
   4f08c:	strb	w0, [x22, #2]
   4f090:	add	x24, x24, #0x4
   4f094:	mov	w2, w14
   4f098:	mov	x1, x13
   4f09c:	mov	x0, x19
   4f0a0:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4f0a4:	sturb	w0, [x9, #-1]
   4f0a8:	add	x23, x23, #0x4
   4f0ac:	mov	w2, w14
   4f0b0:	mov	x1, x13
   4f0b4:	mov	x0, x21
   4f0b8:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4f0bc:	sturb	w0, [x24, #-1]
   4f0c0:	add	x22, x22, #0x4
   4f0c4:	mov	w2, w14
   4f0c8:	mov	x1, x13
   4f0cc:	mov	x0, x20
   4f0d0:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4f0d4:	sturb	w0, [x23, #-1]
   4f0d8:	mov	w2, w14
   4f0dc:	mov	x1, x13
   4f0e0:	mov	x0, x18
   4f0e4:	bl	4ecb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7790>
   4f0e8:	sturb	w0, [x22, #-1]
   4f0ec:	mov	x0, x19
   4f0f0:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4f0f4:	mov	w8, w0
   4f0f8:	mov	x0, x21
   4f0fc:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4f100:	orr	w8, w8, w0
   4f104:	mov	x0, x20
   4f108:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4f10c:	mov	w6, w0
   4f110:	mov	x0, x18
   4f114:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4f118:	orr	w0, w6, w0
   4f11c:	orr	w0, w0, w8
   4f120:	b	4ef68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a48>
   4f124:	cmp	x24, x26
   4f128:	b.hi	4ef74 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a54>  // b.pmore
   4f12c:	cmp	x23, x25
   4f130:	b.hi	4ef74 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a54>  // b.pmore
   4f134:	mov	w4, w14
   4f138:	mov	x3, x13
   4f13c:	mov	x2, x7
   4f140:	mov	x0, x9
   4f144:	mov	x1, x19
   4f148:	bl	4ece4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x77c4>
   4f14c:	mov	x2, x26
   4f150:	mov	w4, w14
   4f154:	mov	x3, x13
   4f158:	mov	x1, x21
   4f15c:	mov	x0, x24
   4f160:	bl	4ece4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x77c4>
   4f164:	mov	x2, x25
   4f168:	mov	w4, w14
   4f16c:	mov	x3, x13
   4f170:	mov	x1, x20
   4f174:	mov	x0, x23
   4f178:	bl	4ece4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x77c4>
   4f17c:	mov	x2, x27
   4f180:	mov	w4, w14
   4f184:	mov	x3, x13
   4f188:	mov	x1, x18
   4f18c:	mov	x0, x22
   4f190:	bl	4ece4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x77c4>
   4f194:	mov	x0, x19
   4f198:	bl	4e958 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7438>
   4f19c:	mov	w3, w0
   4f1a0:	mov	x0, x21
   4f1a4:	bl	4e958 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7438>
   4f1a8:	and	w3, w3, w0
   4f1ac:	mov	x0, x20
   4f1b0:	bl	4e958 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7438>
   4f1b4:	mov	w4, w0
   4f1b8:	mov	x0, x18
   4f1bc:	bl	4e958 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7438>
   4f1c0:	and	w4, w4, w0
   4f1c4:	tst	w4, w3
   4f1c8:	b.eq	4ef74 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a54>  // b.none
   4f1cc:	mov	x0, x15
   4f1d0:	b	4ef78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a58>
   4f1d4:	mov	x0, #0xffffffffffffffec    	// #-20
   4f1d8:	ret
   4f1dc:	ldr	x4, [x1]
   4f1e0:	neg	w3, w3
   4f1e4:	ldr	w5, [x1, #8]
   4f1e8:	lsl	x4, x4, x5
   4f1ec:	lsr	x3, x4, x3
   4f1f0:	lsl	x4, x3, #2
   4f1f4:	add	x3, x2, x3, lsl #2
   4f1f8:	ldrh	w2, [x2, x4]
   4f1fc:	strh	w2, [x0]
   4f200:	ldrb	w2, [x3, #2]
   4f204:	ldr	w0, [x1, #8]
   4f208:	add	w0, w0, w2
   4f20c:	str	w0, [x1, #8]
   4f210:	ldrb	w0, [x3, #3]
   4f214:	ret
   4f218:	mov	x11, x0
   4f21c:	mov	x7, x1
   4f220:	mov	x10, x2
   4f224:	mov	x9, x3
   4f228:	mov	w8, w4
   4f22c:	mov	x6, x0
   4f230:	sub	x12, x2, #0x7
   4f234:	stp	x29, x30, [sp, #-16]!
   4f238:	mov	x29, sp
   4f23c:	mov	x0, x7
   4f240:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4f244:	cbnz	w0, 4f250 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7d30>
   4f248:	cmp	x6, x12
   4f24c:	b.cc	4f258 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7d38>  // b.lo, b.ul, b.last
   4f250:	sub	x12, x10, #0x2
   4f254:	b	4f2c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7da8>
   4f258:	mov	w3, w8
   4f25c:	mov	x2, x9
   4f260:	mov	x1, x7
   4f264:	mov	x0, x6
   4f268:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f26c:	add	x6, x6, w0, uxtw
   4f270:	mov	w3, w8
   4f274:	mov	x2, x9
   4f278:	mov	x0, x6
   4f27c:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f280:	add	x6, x6, w0, uxtw
   4f284:	mov	w3, w8
   4f288:	mov	x2, x9
   4f28c:	mov	x0, x6
   4f290:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f294:	add	x6, x6, w0, uxtw
   4f298:	mov	x0, x6
   4f29c:	mov	w3, w8
   4f2a0:	mov	x2, x9
   4f2a4:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f2a8:	add	x6, x6, w0, uxtw
   4f2ac:	b	4f23c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7d1c>
   4f2b0:	mov	x0, x6
   4f2b4:	mov	w3, w8
   4f2b8:	mov	x2, x9
   4f2bc:	mov	x1, x7
   4f2c0:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f2c4:	add	x6, x6, w0, uxtw
   4f2c8:	mov	x0, x7
   4f2cc:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4f2d0:	cbnz	w0, 4f34c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e2c>
   4f2d4:	cmp	x6, x12
   4f2d8:	b.ls	4f2b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7d90>  // b.plast
   4f2dc:	cmp	x10, x6
   4f2e0:	b.ls	4f328 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e08>  // b.plast
   4f2e4:	ldr	x1, [x7]
   4f2e8:	neg	w8, w8
   4f2ec:	ldr	w0, [x7, #8]
   4f2f0:	lsl	x1, x1, x0
   4f2f4:	lsr	x8, x1, x8
   4f2f8:	lsl	x0, x8, #2
   4f2fc:	add	x8, x9, x8, lsl #2
   4f300:	ldrb	w0, [x9, x0]
   4f304:	strb	w0, [x6]
   4f308:	ldrb	w0, [x8, #3]
   4f30c:	cmp	w0, #0x1
   4f310:	b.ne	4f358 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e38>  // b.any
   4f314:	ldrb	w1, [x8, #2]
   4f318:	ldr	w0, [x7, #8]
   4f31c:	add	w0, w0, w1
   4f320:	str	w0, [x7, #8]
   4f324:	add	x6, x6, #0x1
   4f328:	sub	x0, x6, x11
   4f32c:	ldp	x29, x30, [sp], #16
   4f330:	ret
   4f334:	mov	x0, x6
   4f338:	mov	w3, w8
   4f33c:	mov	x2, x9
   4f340:	mov	x1, x7
   4f344:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f348:	add	x6, x6, w0, uxtw
   4f34c:	cmp	x6, x12
   4f350:	b.ls	4f334 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e14>  // b.plast
   4f354:	b	4f2dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7dbc>
   4f358:	ldr	w1, [x7, #8]
   4f35c:	cmp	w1, #0x3f
   4f360:	b.hi	4f324 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e04>  // b.pmore
   4f364:	ldrb	w0, [x8, #2]
   4f368:	add	w0, w0, w1
   4f36c:	cmp	w0, #0x40
   4f370:	b.ls	4f320 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e00>  // b.plast
   4f374:	mov	w0, #0x40                  	// #64
   4f378:	b	4f320 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e00>
   4f37c:	stp	x29, x30, [sp, #-48]!
   4f380:	mov	x8, x0
   4f384:	mov	x13, x1
   4f388:	add	x14, sp, #0x10
   4f38c:	mov	x9, x4
   4f390:	mov	x29, sp
   4f394:	mov	x1, x2
   4f398:	mov	x0, x14
   4f39c:	mov	x2, x3
   4f3a0:	bl	4eb3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x761c>
   4f3a4:	cmn	x0, #0x78
   4f3a8:	b.hi	4f3d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7eb8>  // b.pmore
   4f3ac:	ldrb	w4, [x9, #2]
   4f3b0:	add	x3, x9, #0x4
   4f3b4:	add	x2, x8, x13
   4f3b8:	mov	x1, x14
   4f3bc:	mov	x0, x8
   4f3c0:	bl	4f218 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cf8>
   4f3c4:	mov	x0, x14
   4f3c8:	bl	4e958 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7438>
   4f3cc:	cmp	w0, #0x0
   4f3d0:	mov	x0, #0xffffffffffffffec    	// #-20
   4f3d4:	csel	x0, x13, x0, ne  // ne = any
   4f3d8:	ldp	x29, x30, [sp], #48
   4f3dc:	ret
   4f3e0:	cmp	x3, #0x9
   4f3e4:	b.ls	4f7b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8290>  // b.plast
   4f3e8:	ldrh	w18, [x2]
   4f3ec:	mov	x9, x0
   4f3f0:	ldrh	w12, [x2, #2]
   4f3f4:	sub	x10, x3, #0x6
   4f3f8:	ldrh	w11, [x2, #4]
   4f3fc:	add	x0, x18, x12
   4f400:	sub	x10, x10, x0
   4f404:	sub	x10, x10, x11
   4f408:	cmp	x3, x10
   4f40c:	b.cc	4f7b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8290>  // b.lo, b.ul, b.last
   4f410:	stp	x29, x30, [sp, #-224]!
   4f414:	add	x8, x2, #0x6
   4f418:	mov	x15, x1
   4f41c:	mov	x29, sp
   4f420:	stp	x19, x20, [sp, #16]
   4f424:	mov	x13, x4
   4f428:	add	x19, sp, #0x60
   4f42c:	stp	x21, x22, [sp, #32]
   4f430:	mov	x2, x18
   4f434:	mov	x1, x8
   4f438:	stp	x23, x24, [sp, #48]
   4f43c:	mov	x0, x19
   4f440:	stp	x25, x26, [sp, #64]
   4f444:	str	x27, [sp, #80]
   4f448:	ldr	w14, [x4]
   4f44c:	bl	4eb3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x761c>
   4f450:	cmn	x0, #0x78
   4f454:	b.hi	4f524 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8004>  // b.pmore
   4f458:	add	x8, x8, x18
   4f45c:	add	x21, sp, #0x80
   4f460:	mov	x2, x12
   4f464:	mov	x1, x8
   4f468:	mov	x0, x21
   4f46c:	bl	4eb3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x761c>
   4f470:	cmn	x0, #0x78
   4f474:	b.hi	4f524 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8004>  // b.pmore
   4f478:	add	x8, x8, x12
   4f47c:	add	x20, sp, #0xa0
   4f480:	mov	x2, x11
   4f484:	mov	x1, x8
   4f488:	mov	x0, x20
   4f48c:	bl	4eb3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x761c>
   4f490:	cmn	x0, #0x78
   4f494:	b.hi	4f524 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8004>  // b.pmore
   4f498:	add	x18, sp, #0xc0
   4f49c:	mov	x2, x10
   4f4a0:	add	x1, x8, x11
   4f4a4:	mov	x0, x18
   4f4a8:	bl	4eb3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x761c>
   4f4ac:	cmn	x0, #0x78
   4f4b0:	b.hi	4f524 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8004>  // b.pmore
   4f4b4:	add	x24, x15, #0x3
   4f4b8:	add	x13, x13, #0x4
   4f4bc:	ubfx	x14, x14, #16, #8
   4f4c0:	add	x27, x9, x15
   4f4c4:	add	x7, x9, x24, lsr #2
   4f4c8:	mov	x0, x19
   4f4cc:	add	x26, x7, x24, lsr #2
   4f4d0:	add	x24, x26, x24, lsr #2
   4f4d4:	mov	x23, x26
   4f4d8:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4f4dc:	mov	w8, w0
   4f4e0:	mov	x0, x21
   4f4e4:	mov	x22, x24
   4f4e8:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4f4ec:	orr	w8, w8, w0
   4f4f0:	mov	x0, x20
   4f4f4:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4f4f8:	mov	w6, w0
   4f4fc:	mov	x0, x18
   4f500:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4f504:	orr	w0, w6, w0
   4f508:	orr	w0, w0, w8
   4f50c:	mov	x25, x7
   4f510:	sub	x10, x27, #0x7
   4f514:	cbz	w0, 4f540 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8020>
   4f518:	cmp	x9, x7
   4f51c:	b.ls	4f700 <ZDICT_addEntropyTablesFromBuffer@@Base+0x81e0>  // b.plast
   4f520:	mov	x0, #0xffffffffffffffec    	// #-20
   4f524:	ldp	x19, x20, [sp, #16]
   4f528:	ldp	x21, x22, [sp, #32]
   4f52c:	ldp	x23, x24, [sp, #48]
   4f530:	ldp	x25, x26, [sp, #64]
   4f534:	ldr	x27, [sp, #80]
   4f538:	ldp	x29, x30, [sp], #224
   4f53c:	ret
   4f540:	cmp	x22, x10
   4f544:	b.cs	4f518 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7ff8>  // b.hs, b.nlast
   4f548:	mov	w3, w14
   4f54c:	mov	x2, x13
   4f550:	mov	x1, x19
   4f554:	mov	x0, x9
   4f558:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f55c:	add	x9, x9, w0, uxtw
   4f560:	mov	w3, w14
   4f564:	mov	x2, x13
   4f568:	mov	x1, x21
   4f56c:	mov	x0, x25
   4f570:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f574:	mov	w3, w14
   4f578:	mov	x2, x13
   4f57c:	add	x25, x25, w0, uxtw
   4f580:	mov	x1, x20
   4f584:	mov	x0, x23
   4f588:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f58c:	mov	w3, w14
   4f590:	mov	x2, x13
   4f594:	mov	x1, x18
   4f598:	add	x23, x23, w0, uxtw
   4f59c:	mov	x0, x22
   4f5a0:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f5a4:	mov	w3, w14
   4f5a8:	mov	x2, x13
   4f5ac:	add	x22, x22, w0, uxtw
   4f5b0:	mov	x1, x19
   4f5b4:	mov	x0, x9
   4f5b8:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f5bc:	add	x9, x9, w0, uxtw
   4f5c0:	mov	w3, w14
   4f5c4:	mov	x2, x13
   4f5c8:	mov	x1, x21
   4f5cc:	mov	x0, x25
   4f5d0:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f5d4:	mov	w3, w14
   4f5d8:	mov	x2, x13
   4f5dc:	add	x25, x25, w0, uxtw
   4f5e0:	mov	x1, x20
   4f5e4:	mov	x0, x23
   4f5e8:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f5ec:	mov	w3, w14
   4f5f0:	mov	x2, x13
   4f5f4:	mov	x1, x18
   4f5f8:	add	x23, x23, w0, uxtw
   4f5fc:	mov	x0, x22
   4f600:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f604:	mov	w3, w14
   4f608:	mov	x2, x13
   4f60c:	add	x22, x22, w0, uxtw
   4f610:	mov	x1, x19
   4f614:	mov	x0, x9
   4f618:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f61c:	add	x9, x9, w0, uxtw
   4f620:	mov	w3, w14
   4f624:	mov	x2, x13
   4f628:	mov	x1, x21
   4f62c:	mov	x0, x25
   4f630:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f634:	mov	w3, w14
   4f638:	mov	x2, x13
   4f63c:	add	x25, x25, w0, uxtw
   4f640:	mov	x1, x20
   4f644:	mov	x0, x23
   4f648:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f64c:	mov	w3, w14
   4f650:	mov	x2, x13
   4f654:	mov	x1, x18
   4f658:	add	x23, x23, w0, uxtw
   4f65c:	mov	x0, x22
   4f660:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f664:	mov	w3, w14
   4f668:	mov	x2, x13
   4f66c:	add	x22, x22, w0, uxtw
   4f670:	mov	x1, x19
   4f674:	mov	x0, x9
   4f678:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f67c:	add	x9, x9, w0, uxtw
   4f680:	mov	w3, w14
   4f684:	mov	x2, x13
   4f688:	mov	x1, x21
   4f68c:	mov	x0, x25
   4f690:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f694:	mov	w3, w14
   4f698:	mov	x2, x13
   4f69c:	mov	x1, x20
   4f6a0:	add	x25, x25, w0, uxtw
   4f6a4:	mov	x0, x23
   4f6a8:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f6ac:	mov	w3, w14
   4f6b0:	mov	x2, x13
   4f6b4:	mov	x1, x18
   4f6b8:	add	x23, x23, w0, uxtw
   4f6bc:	mov	x0, x22
   4f6c0:	bl	4f1dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   4f6c4:	add	x22, x22, w0, uxtw
   4f6c8:	mov	x0, x19
   4f6cc:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4f6d0:	mov	w8, w0
   4f6d4:	mov	x0, x21
   4f6d8:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4f6dc:	orr	w8, w8, w0
   4f6e0:	mov	x0, x20
   4f6e4:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4f6e8:	mov	w6, w0
   4f6ec:	mov	x0, x18
   4f6f0:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4f6f4:	orr	w0, w6, w0
   4f6f8:	orr	w0, w0, w8
   4f6fc:	b	4f514 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7ff4>
   4f700:	cmp	x25, x26
   4f704:	b.hi	4f520 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8000>  // b.pmore
   4f708:	cmp	x23, x24
   4f70c:	b.hi	4f520 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8000>  // b.pmore
   4f710:	mov	w4, w14
   4f714:	mov	x3, x13
   4f718:	mov	x2, x7
   4f71c:	mov	x0, x9
   4f720:	mov	x1, x19
   4f724:	bl	4f218 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cf8>
   4f728:	mov	x2, x26
   4f72c:	mov	w4, w14
   4f730:	mov	x3, x13
   4f734:	mov	x1, x21
   4f738:	mov	x0, x25
   4f73c:	bl	4f218 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cf8>
   4f740:	mov	x2, x24
   4f744:	mov	w4, w14
   4f748:	mov	x3, x13
   4f74c:	mov	x1, x20
   4f750:	mov	x0, x23
   4f754:	bl	4f218 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cf8>
   4f758:	mov	x2, x27
   4f75c:	mov	w4, w14
   4f760:	mov	x3, x13
   4f764:	mov	x1, x18
   4f768:	mov	x0, x22
   4f76c:	bl	4f218 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cf8>
   4f770:	mov	x0, x19
   4f774:	bl	4e958 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7438>
   4f778:	mov	w3, w0
   4f77c:	mov	x0, x21
   4f780:	bl	4e958 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7438>
   4f784:	and	w3, w3, w0
   4f788:	mov	x0, x20
   4f78c:	bl	4e958 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7438>
   4f790:	mov	w4, w0
   4f794:	mov	x0, x18
   4f798:	bl	4e958 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7438>
   4f79c:	and	w4, w4, w0
   4f7a0:	tst	w4, w3
   4f7a4:	b.eq	4f520 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8000>  // b.none
   4f7a8:	mov	x0, x15
   4f7ac:	b	4f524 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8004>
   4f7b0:	mov	x0, #0xffffffffffffffec    	// #-20
   4f7b4:	ret
   4f7b8:	cmn	x0, #0x78
   4f7bc:	cset	w0, hi  // hi = pmore
   4f7c0:	ret
   4f7c4:	b	4eb14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x75f4>
   4f7c8:	cmn	x0, #0x78
   4f7cc:	cset	w0, hi  // hi = pmore
   4f7d0:	ret
   4f7d4:	b	4eb14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x75f4>
   4f7d8:	cmp	x4, #0x3
   4f7dc:	b.ls	4fa38 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8518>  // b.plast
   4f7e0:	ldr	w5, [x3]
   4f7e4:	and	w9, w5, #0xf
   4f7e8:	add	w7, w9, #0x5
   4f7ec:	cmp	w7, #0xf
   4f7f0:	b.hi	4fa28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8508>  // b.pmore
   4f7f4:	stp	x29, x30, [sp, #-48]!
   4f7f8:	add	x10, x3, x4
   4f7fc:	mov	w14, #0x1                   	// #1
   4f800:	mov	x29, sp
   4f804:	stp	x19, x20, [sp, #16]
   4f808:	sub	x17, x10, #0x7
   4f80c:	sub	x15, x10, #0x4
   4f810:	str	x21, [sp, #32]
   4f814:	mov	x13, x0
   4f818:	str	w7, [x2]
   4f81c:	lsr	w5, w5, #4
   4f820:	lsl	w7, w14, w7
   4f824:	add	w9, w9, #0x6
   4f828:	ldr	w16, [x1]
   4f82c:	mov	x30, x3
   4f830:	sub	x10, x10, #0x5
   4f834:	add	w12, w7, w14
   4f838:	mov	w19, #0x0                   	// #0
   4f83c:	mov	w18, #0xffff                	// #65535
   4f840:	mov	w2, #0x4                   	// #4
   4f844:	ubfiz	w0, w7, #1, #15
   4f848:	sub	w20, w7, #0x1
   4f84c:	sub	w8, w0, w12
   4f850:	and	w6, w5, #0xffff
   4f854:	sub	w8, w8, #0x1
   4f858:	and	w5, w20, w5
   4f85c:	and	w11, w7, #0xffff
   4f860:	and	w21, w8, #0xffff
   4f864:	cmp	w5, w8, sxth
   4f868:	b.cs	4f9b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8494>  // b.hs, b.nlast
   4f86c:	sub	w5, w11, #0x1
   4f870:	sub	w0, w9, #0x1
   4f874:	and	w6, w6, w5
   4f878:	add	w2, w0, w2
   4f87c:	sxth	w5, w6
   4f880:	and	w5, w5, #0xffff
   4f884:	add	w8, w19, #0x1
   4f888:	sub	w11, w5, #0x1
   4f88c:	sub	w5, w14, w5
   4f890:	sxth	w11, w11
   4f894:	sxth	w5, w5
   4f898:	cmp	w11, #0x0
   4f89c:	strh	w11, [x13, w19, uxtw #1]
   4f8a0:	csel	w5, w5, w11, lt  // lt = tstop
   4f8a4:	sub	w12, w12, w5
   4f8a8:	cmp	w7, w12
   4f8ac:	b.gt	4f9d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x84b8>
   4f8b0:	asr	w0, w2, #3
   4f8b4:	cmp	x30, x17
   4f8b8:	add	x6, x30, w0, sxtw
   4f8bc:	b.ls	4f8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x83a8>  // b.plast
   4f8c0:	cmp	x15, x6
   4f8c4:	b.cc	4f9e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x84c4>  // b.lo, b.ul, b.last
   4f8c8:	and	w2, w2, #0x7
   4f8cc:	ldr	w5, [x6]
   4f8d0:	cmp	w12, #0x1
   4f8d4:	lsr	w5, w5, w2
   4f8d8:	b.le	4f9f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x84d4>
   4f8dc:	cmp	w16, w8
   4f8e0:	b.cs	4f8ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x83cc>  // b.hs, b.nlast
   4f8e4:	mov	x0, #0xffffffffffffffff    	// #-1
   4f8e8:	b	4fa18 <ZDICT_addEntropyTablesFromBuffer@@Base+0x84f8>
   4f8ec:	cbnz	w11, 4f97c <ZDICT_addEntropyTablesFromBuffer@@Base+0x845c>
   4f8f0:	mov	w0, w8
   4f8f4:	b	4f910 <ZDICT_addEntropyTablesFromBuffer@@Base+0x83f0>
   4f8f8:	add	w0, w0, #0x18
   4f8fc:	cmp	x6, x10
   4f900:	b.cs	4f988 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8468>  // b.hs, b.nlast
   4f904:	ldur	w5, [x6, #2]
   4f908:	add	x6, x6, #0x2
   4f90c:	lsr	w5, w5, w2
   4f910:	cmp	w18, w5, uxth
   4f914:	b.eq	4f8f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x83d8>  // b.none
   4f918:	and	w11, w5, #0x3
   4f91c:	add	w2, w2, #0x2
   4f920:	cmp	w11, #0x3
   4f924:	b.eq	4f994 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8474>  // b.none
   4f928:	add	w11, w11, w0
   4f92c:	cmp	w16, w11
   4f930:	b.cc	4fa30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8510>  // b.lo, b.ul, b.last
   4f934:	add	x20, x13, w8, uxtw #1
   4f938:	mov	x0, #0x0                   	// #0
   4f93c:	add	w19, w8, w0
   4f940:	cmp	w19, w11
   4f944:	b.cc	4f9a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8480>  // b.lo, b.ul, b.last
   4f948:	subs	w0, w11, w8
   4f94c:	csel	w0, w0, wzr, cs  // cs = hs, nlast
   4f950:	cmp	x6, x17
   4f954:	add	w8, w8, w0
   4f958:	asr	w0, w2, #3
   4f95c:	add	x0, x6, w0, sxtw
   4f960:	b.ls	4f96c <ZDICT_addEntropyTablesFromBuffer@@Base+0x844c>  // b.plast
   4f964:	cmp	x0, x15
   4f968:	b.hi	4f9ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x848c>  // b.pmore
   4f96c:	ldr	w5, [x0]
   4f970:	and	w2, w2, #0x7
   4f974:	mov	x6, x0
   4f978:	lsr	w5, w5, w2
   4f97c:	mov	w19, w8
   4f980:	mov	x30, x6
   4f984:	b	4f844 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8324>
   4f988:	lsr	w5, w5, #16
   4f98c:	add	w2, w2, #0x10
   4f990:	b	4f910 <ZDICT_addEntropyTablesFromBuffer@@Base+0x83f0>
   4f994:	add	w0, w0, #0x3
   4f998:	lsr	w5, w5, #2
   4f99c:	b	4f918 <ZDICT_addEntropyTablesFromBuffer@@Base+0x83f8>
   4f9a0:	strh	wzr, [x20, x0, lsl #1]
   4f9a4:	add	x0, x0, #0x1
   4f9a8:	b	4f93c <ZDICT_addEntropyTablesFromBuffer@@Base+0x841c>
   4f9ac:	lsr	w5, w5, #2
   4f9b0:	b	4f97c <ZDICT_addEntropyTablesFromBuffer@@Base+0x845c>
   4f9b4:	sub	w0, w0, #0x1
   4f9b8:	and	w6, w6, w0
   4f9bc:	sxth	w5, w6
   4f9c0:	cmp	w7, w6, sxth
   4f9c4:	b.gt	4f9d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x84b0>
   4f9c8:	sub	w5, w6, w21
   4f9cc:	sxth	w5, w5
   4f9d0:	add	w2, w9, w2
   4f9d4:	b	4f880 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8360>
   4f9d8:	sub	w9, w9, #0x1
   4f9dc:	asr	w7, w7, #1
   4f9e0:	b	4f8a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8388>
   4f9e4:	sub	x30, x15, x30
   4f9e8:	mov	x6, x15
   4f9ec:	sub	w2, w2, w30, lsl #3
   4f9f0:	b	4f8cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x83ac>
   4f9f4:	b.ne	4f8e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x83c4>  // b.any
   4f9f8:	add	w0, w2, #0x7
   4f9fc:	str	w19, [x1]
   4fa00:	asr	w0, w0, #3
   4fa04:	add	x0, x6, w0, sxtw
   4fa08:	sub	x0, x0, x3
   4fa0c:	cmp	x0, x4
   4fa10:	b.ls	4fa18 <ZDICT_addEntropyTablesFromBuffer@@Base+0x84f8>  // b.plast
   4fa14:	mov	x0, #0xffffffffffffffb8    	// #-72
   4fa18:	ldp	x19, x20, [sp, #16]
   4fa1c:	ldr	x21, [sp, #32]
   4fa20:	ldp	x29, x30, [sp], #48
   4fa24:	ret
   4fa28:	mov	x0, #0xffffffffffffffd4    	// #-44
   4fa2c:	ret
   4fa30:	mov	x0, #0xffffffffffffffd0    	// #-48
   4fa34:	b	4fa18 <ZDICT_addEntropyTablesFromBuffer@@Base+0x84f8>
   4fa38:	mov	x0, #0xffffffffffffffb8    	// #-72
   4fa3c:	ret
   4fa40:	cmp	w0, #0xf
   4fa44:	mov	w1, #0xf                   	// #15
   4fa48:	csel	w0, w0, w1, ls  // ls = plast
   4fa4c:	mov	w1, #0x1                   	// #1
   4fa50:	lsl	w0, w1, w0
   4fa54:	add	w0, w0, w1
   4fa58:	sbfiz	x0, x0, #2, #32
   4fa5c:	b	46a0 <malloc@plt>
   4fa60:	b	48e0 <free@plt>
   4fa64:	cmp	w2, #0xff
   4fa68:	b.hi	4fbac <ZDICT_addEntropyTablesFromBuffer@@Base+0x868c>  // b.pmore
   4fa6c:	cmp	w3, #0xc
   4fa70:	b.hi	4fbb4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8694>  // b.pmore
   4fa74:	sub	w6, w3, #0x1
   4fa78:	mov	w4, #0x1                   	// #1
   4fa7c:	sub	sp, sp, #0x200
   4fa80:	and	w8, w3, #0xffff
   4fa84:	lsl	w10, w4, w3
   4fa88:	sub	w11, w10, #0x1
   4fa8c:	lsl	w6, w4, w6
   4fa90:	add	x13, x0, #0x4
   4fa94:	add	w2, w2, #0x1
   4fa98:	orr	w8, w8, #0x10000
   4fa9c:	sxth	w6, w6
   4faa0:	mov	w7, w11
   4faa4:	mov	x14, sp
   4faa8:	mov	w15, w4
   4faac:	mov	w16, w4
   4fab0:	mov	x5, #0x0                   	// #0
   4fab4:	mov	w12, #0x0                   	// #0
   4fab8:	cmp	w2, w5
   4fabc:	b.hi	4fb08 <ZDICT_addEntropyTablesFromBuffer@@Base+0x85e8>  // b.pmore
   4fac0:	cbz	w12, 4fac8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x85a8>
   4fac4:	bfi	w8, w4, #16, #16
   4fac8:	lsr	w5, w10, #3
   4facc:	mov	x6, #0x0                   	// #0
   4fad0:	add	w5, w5, w10, lsr #1
   4fad4:	mov	w4, #0x0                   	// #0
   4fad8:	add	w5, w5, #0x3
   4fadc:	str	w8, [x0]
   4fae0:	cmp	w2, w6
   4fae4:	b.hi	4fb70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8650>  // b.pmore
   4fae8:	cbnz	w4, 4fbbc <ZDICT_addEntropyTablesFromBuffer@@Base+0x869c>
   4faec:	add	x5, x0, w10, sxtw #2
   4faf0:	mov	x4, sp
   4faf4:	cmp	x0, x5
   4faf8:	b.ne	4fb78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8658>  // b.any
   4fafc:	mov	x0, #0x0                   	// #0
   4fb00:	add	sp, sp, #0x200
   4fb04:	ret
   4fb08:	ldrsh	w9, [x1, x5, lsl #1]
   4fb0c:	cmn	w9, #0x1
   4fb10:	b.ne	4fb2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x860c>  // b.any
   4fb14:	add	x9, x13, w7, uxtw #2
   4fb18:	sub	w7, w7, #0x1
   4fb1c:	strh	w16, [x14, x5, lsl #1]
   4fb20:	strb	w5, [x9, #2]
   4fb24:	add	x5, x5, #0x1
   4fb28:	b	4fab8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8598>
   4fb2c:	cmp	w9, w6
   4fb30:	strh	w9, [x14, x5, lsl #1]
   4fb34:	csel	w12, w12, w15, lt  // lt = tstop
   4fb38:	csel	w4, w4, wzr, lt  // lt = tstop
   4fb3c:	b	4fb24 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8604>
   4fb40:	add	x9, x13, w4, uxtw #2
   4fb44:	strb	w6, [x9, #2]
   4fb48:	add	w4, w4, w5
   4fb4c:	and	w4, w4, w11
   4fb50:	cmp	w7, w4
   4fb54:	b.cc	4fb48 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8628>  // b.lo, b.ul, b.last
   4fb58:	add	w8, w8, #0x1
   4fb5c:	ldrsh	w9, [x1, x6, lsl #1]
   4fb60:	cmp	w9, w8
   4fb64:	b.gt	4fb40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8620>
   4fb68:	add	x6, x6, #0x1
   4fb6c:	b	4fae0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x85c0>
   4fb70:	mov	w8, #0x0                   	// #0
   4fb74:	b	4fb5c <ZDICT_addEntropyTablesFromBuffer@@Base+0x863c>
   4fb78:	ldrb	w1, [x0, #6]
   4fb7c:	ldrh	w2, [x4, x1, lsl #1]
   4fb80:	add	w6, w2, #0x1
   4fb84:	strh	w6, [x4, x1, lsl #1]
   4fb88:	clz	w1, w2
   4fb8c:	eor	w1, w1, #0x1f
   4fb90:	sub	w1, w3, w1
   4fb94:	and	w1, w1, #0xff
   4fb98:	strb	w1, [x0, #7]
   4fb9c:	lsl	w1, w2, w1
   4fba0:	sub	w1, w1, w10
   4fba4:	strh	w1, [x0, #4]!
   4fba8:	b	4faf4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x85d4>
   4fbac:	mov	x0, #0xffffffffffffffd2    	// #-46
   4fbb0:	ret
   4fbb4:	mov	x0, #0xffffffffffffffd4    	// #-44
   4fbb8:	ret
   4fbbc:	mov	x0, #0xffffffffffffffff    	// #-1
   4fbc0:	b	4fb00 <ZDICT_addEntropyTablesFromBuffer@@Base+0x85e0>
   4fbc4:	stp	x29, x30, [sp, #-192]!
   4fbc8:	mov	x9, x4
   4fbcc:	cmp	w1, #0x1
   4fbd0:	mov	x29, sp
   4fbd4:	stp	x19, x20, [sp, #16]
   4fbd8:	mov	x4, x5
   4fbdc:	mov	x19, x0
   4fbe0:	str	x21, [sp, #32]
   4fbe4:	str	w2, [sp, #60]
   4fbe8:	b.eq	4fc0c <ZDICT_addEntropyTablesFromBuffer@@Base+0x86ec>  // b.none
   4fbec:	cmp	w1, #0x2
   4fbf0:	b.eq	4fc44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8724>  // b.none
   4fbf4:	cbnz	w1, 4fc58 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8738>
   4fbf8:	mov	x1, x6
   4fbfc:	mov	w3, w7
   4fc00:	bl	4fa64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8544>
   4fc04:	mov	x18, #0x0                   	// #0
   4fc08:	b	4fc30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8710>
   4fc0c:	cbz	x5, 4fca0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8780>
   4fc10:	ldrb	w0, [x9]
   4fc14:	cmp	w0, w2
   4fc18:	b.hi	4fca8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8788>  // b.pmore
   4fc1c:	mov	x18, #0x1                   	// #1
   4fc20:	str	wzr, [x19]
   4fc24:	strh	wzr, [x19, #4]
   4fc28:	strb	w0, [x19, #6]
   4fc2c:	strb	wzr, [x19, #7]
   4fc30:	mov	x0, x18
   4fc34:	ldp	x19, x20, [sp, #16]
   4fc38:	ldr	x21, [sp, #32]
   4fc3c:	ldp	x29, x30, [sp], #192
   4fc40:	ret
   4fc44:	ldr	w0, [sp, #192]
   4fc48:	mov	x18, #0xffffffffffffffec    	// #-20
   4fc4c:	cmp	w0, #0x0
   4fc50:	csel	x18, x18, xzr, eq  // eq = none
   4fc54:	b	4fc30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8710>
   4fc58:	add	x21, sp, #0x50
   4fc5c:	mov	w20, w3
   4fc60:	add	x2, sp, #0x4c
   4fc64:	mov	x3, x9
   4fc68:	add	x1, sp, #0x3c
   4fc6c:	mov	x0, x21
   4fc70:	bl	4f7d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x82b8>
   4fc74:	mov	x18, x0
   4fc78:	cmn	x0, #0x78
   4fc7c:	b.hi	4fca8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8788>  // b.pmore
   4fc80:	ldr	w3, [sp, #76]
   4fc84:	cmp	w3, w20
   4fc88:	b.hi	4fca8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8788>  // b.pmore
   4fc8c:	ldr	w2, [sp, #60]
   4fc90:	mov	x1, x21
   4fc94:	mov	x0, x19
   4fc98:	bl	4fa64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8544>
   4fc9c:	b	4fc30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8710>
   4fca0:	mov	x18, #0xffffffffffffffb8    	// #-72
   4fca4:	b	4fc30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8710>
   4fca8:	mov	x18, #0xffffffffffffffec    	// #-20
   4fcac:	b	4fc30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8710>
   4fcb0:	sub	sp, sp, #0x130
   4fcb4:	stp	x29, x30, [sp, #16]
   4fcb8:	add	x29, sp, #0x10
   4fcbc:	stp	x19, x20, [sp, #32]
   4fcc0:	stp	x21, x22, [sp, #48]
   4fcc4:	stp	x23, x24, [sp, #64]
   4fcc8:	stp	x25, x26, [sp, #80]
   4fccc:	add	x26, x0, #0xc08
   4fcd0:	stp	x27, x28, [sp, #96]
   4fcd4:	mov	x27, x0
   4fcd8:	add	x28, x0, #0x804
   4fcdc:	stp	x1, x4, [sp, #128]
   4fce0:	str	x2, [sp, #168]
   4fce4:	cbz	x4, 502dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8dbc>
   4fce8:	ldr	x25, [x0, #21720]
   4fcec:	mov	x22, x3
   4fcf0:	ldr	x0, [x0, #21752]
   4fcf4:	str	x0, [sp, #144]
   4fcf8:	ldr	x0, [x27, #21528]
   4fcfc:	str	x0, [sp, #120]
   4fd00:	ldrb	w19, [x3]
   4fd04:	ldr	x0, [x27, #21536]
   4fd08:	str	x0, [sp, #160]
   4fd0c:	ldr	x0, [x27, #21544]
   4fd10:	str	x0, [sp, #152]
   4fd14:	cbz	w19, 4fe6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x894c>
   4fd18:	add	x23, x3, x4
   4fd1c:	cmp	w19, #0x7f
   4fd20:	add	x4, x3, #0x1
   4fd24:	b.le	4fd48 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8828>
   4fd28:	cmp	w19, #0xff
   4fd2c:	b.ne	4fdac <ZDICT_addEntropyTablesFromBuffer@@Base+0x888c>  // b.any
   4fd30:	add	x4, x3, #0x3
   4fd34:	cmp	x23, x4
   4fd38:	b.cc	502dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8dbc>  // b.lo, b.ul, b.last
   4fd3c:	ldurh	w19, [x3, #1]
   4fd40:	mov	w0, #0x7f00                	// #32512
   4fd44:	add	w19, w19, w0
   4fd48:	add	x0, x4, #0x4
   4fd4c:	cmp	x23, x0
   4fd50:	b.cc	502dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8dbc>  // b.lo, b.ul, b.last
   4fd54:	add	x0, x27, #0x4, lsl #12
   4fd58:	mov	x20, x4
   4fd5c:	adrp	x11, 57000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfae0>
   4fd60:	add	x21, x11, #0x4a0
   4fd64:	add	x6, x21, #0x40
   4fd68:	mov	w7, #0x6                   	// #6
   4fd6c:	ldr	w12, [x0, #5228]
   4fd70:	mov	w3, #0x9                   	// #9
   4fd74:	ldrb	w24, [x20], #1
   4fd78:	mov	x0, x27
   4fd7c:	str	w12, [sp]
   4fd80:	mov	w2, #0x23                  	// #35
   4fd84:	sub	x5, x23, x20
   4fd88:	mov	x4, x20
   4fd8c:	lsr	w1, w24, #6
   4fd90:	str	w12, [sp, #176]
   4fd94:	bl	4fbc4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x86a4>
   4fd98:	cmn	x0, #0x78
   4fd9c:	ldr	w12, [sp, #176]
   4fda0:	b.ls	4fdc8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x88a8>  // b.plast
   4fda4:	mov	x4, #0xffffffffffffffec    	// #-20
   4fda8:	b	4fe48 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8928>
   4fdac:	cmp	x23, x4
   4fdb0:	b.ls	502dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8dbc>  // b.plast
   4fdb4:	ldrb	w0, [x3, #1]
   4fdb8:	sub	w19, w19, #0x80
   4fdbc:	add	x4, x3, #0x2
   4fdc0:	add	w19, w0, w19, lsl #8
   4fdc4:	b	4fd48 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8828>
   4fdc8:	str	w12, [sp]
   4fdcc:	add	x20, x20, x0
   4fdd0:	add	x6, x21, #0x88
   4fdd4:	sub	x5, x23, x20
   4fdd8:	mov	x4, x20
   4fddc:	ubfx	x1, x24, #4, #2
   4fde0:	mov	x0, x28
   4fde4:	mov	w7, #0x5                   	// #5
   4fde8:	mov	w3, #0x8                   	// #8
   4fdec:	mov	w2, #0x1c                  	// #28
   4fdf0:	str	w12, [sp, #176]
   4fdf4:	bl	4fbc4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x86a4>
   4fdf8:	cmn	x0, #0x78
   4fdfc:	b.hi	4fda4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8884>  // b.pmore
   4fe00:	ldr	w12, [sp, #176]
   4fe04:	add	x20, x20, x0
   4fe08:	str	w12, [sp]
   4fe0c:	add	x6, x21, #0xc2
   4fe10:	sub	x5, x23, x20
   4fe14:	mov	x4, x20
   4fe18:	ubfx	x1, x24, #2, #2
   4fe1c:	mov	x0, x26
   4fe20:	mov	w7, #0x6                   	// #6
   4fe24:	mov	w3, #0x9                   	// #9
   4fe28:	mov	w2, #0x34                  	// #52
   4fe2c:	bl	4fbc4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x86a4>
   4fe30:	cmn	x0, #0x78
   4fe34:	b.hi	4fda4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8884>  // b.pmore
   4fe38:	add	x4, x20, x0
   4fe3c:	sub	x4, x4, x22
   4fe40:	cmn	x4, #0x78
   4fe44:	b.ls	4fe70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8950>  // b.plast
   4fe48:	mov	x0, x4
   4fe4c:	ldp	x29, x30, [sp, #16]
   4fe50:	ldp	x19, x20, [sp, #32]
   4fe54:	ldp	x21, x22, [sp, #48]
   4fe58:	ldp	x23, x24, [sp, #64]
   4fe5c:	ldp	x25, x26, [sp, #80]
   4fe60:	ldp	x27, x28, [sp, #96]
   4fe64:	add	sp, sp, #0x130
   4fe68:	ret
   4fe6c:	mov	x4, #0x1                   	// #1
   4fe70:	ldr	x0, [sp, #128]
   4fe74:	ldr	x1, [sp, #168]
   4fe78:	add	x21, x0, x1
   4fe7c:	ldr	x0, [sp, #144]
   4fe80:	add	x0, x25, x0
   4fe84:	str	x0, [sp, #144]
   4fe88:	cbz	w19, 502d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8db4>
   4fe8c:	add	x23, x27, #0x4, lsl #12
   4fe90:	mov	w0, #0x1                   	// #1
   4fe94:	add	x24, sp, #0xc8
   4fe98:	add	x1, x22, x4
   4fe9c:	str	w0, [x23, #5228]
   4fea0:	ldr	w0, [x23, #5176]
   4fea4:	str	x0, [sp, #280]
   4fea8:	ldr	w0, [x23, #5180]
   4feac:	str	x0, [sp, #288]
   4feb0:	ldr	w0, [x23, #5184]
   4feb4:	str	x0, [sp, #296]
   4feb8:	ldr	x0, [sp, #136]
   4febc:	sub	x2, x0, x4
   4fec0:	mov	x0, x24
   4fec4:	bl	4eb3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x761c>
   4fec8:	cmn	x0, #0x78
   4fecc:	b.hi	4fda4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8884>  // b.pmore
   4fed0:	mov	x2, x27
   4fed4:	mov	x1, x24
   4fed8:	add	x0, x24, #0x20
   4fedc:	bl	4e97c <ZDICT_addEntropyTablesFromBuffer@@Base+0x745c>
   4fee0:	mov	x2, x28
   4fee4:	mov	x1, x24
   4fee8:	add	x0, x24, #0x30
   4feec:	bl	4e97c <ZDICT_addEntropyTablesFromBuffer@@Base+0x745c>
   4fef0:	mov	x2, x26
   4fef4:	add	x0, x24, #0x40
   4fef8:	mov	x1, x24
   4fefc:	bl	4e97c <ZDICT_addEntropyTablesFromBuffer@@Base+0x745c>
   4ff00:	ldr	x20, [sp, #128]
   4ff04:	adrp	x0, 57000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfae0>
   4ff08:	sub	x26, x21, #0x8
   4ff0c:	add	x0, x0, #0x4a0
   4ff10:	str	x0, [sp, #136]
   4ff14:	add	x0, x0, #0x304
   4ff18:	str	x0, [sp, #168]
   4ff1c:	mov	x0, x24
   4ff20:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   4ff24:	cmp	w0, #0x2
   4ff28:	b.hi	502cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8dac>  // b.pmore
   4ff2c:	cbnz	w19, 4ff7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8a5c>
   4ff30:	ldr	x0, [sp, #280]
   4ff34:	str	w0, [x23, #5176]
   4ff38:	ldr	x0, [sp, #288]
   4ff3c:	str	w0, [x23, #5180]
   4ff40:	ldr	x0, [sp, #296]
   4ff44:	str	w0, [x23, #5184]
   4ff48:	ldr	x0, [sp, #144]
   4ff4c:	sub	x21, x21, x20
   4ff50:	sub	x19, x0, x25
   4ff54:	cmp	x21, x19
   4ff58:	b.cc	502e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8dc4>  // b.lo, b.ul, b.last
   4ff5c:	mov	x0, x20
   4ff60:	mov	x2, x19
   4ff64:	mov	x1, x25
   4ff68:	bl	4460 <memcpy@plt>
   4ff6c:	ldr	x0, [sp, #128]
   4ff70:	add	x20, x20, x19
   4ff74:	sub	x4, x20, x0
   4ff78:	b	4fe48 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8928>
   4ff7c:	ldp	x2, x0, [sp, #232]
   4ff80:	sub	w19, w19, #0x1
   4ff84:	ldp	x3, x1, [sp, #256]
   4ff88:	add	x2, x0, x2, lsl #2
   4ff8c:	ldr	x0, [sp, #272]
   4ff90:	ldrb	w8, [x2, #2]
   4ff94:	ldrb	w11, [x2, #2]
   4ff98:	add	x1, x0, x1, lsl #2
   4ff9c:	ldr	x0, [sp, #248]
   4ffa0:	ldrb	w14, [x1, #2]
   4ffa4:	ldrb	w12, [x1, #2]
   4ffa8:	add	x0, x3, x0, lsl #2
   4ffac:	ldrb	w7, [x0, #2]
   4ffb0:	adrp	x0, 57000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfae0>
   4ffb4:	add	x0, x0, #0x4a0
   4ffb8:	add	x3, x0, #0x12c
   4ffbc:	add	x2, x0, #0x1bc
   4ffc0:	ldr	w10, [x3, x8, lsl #2]
   4ffc4:	ldr	w13, [x2, x14, lsl #2]
   4ffc8:	add	w9, w10, w13
   4ffcc:	add	w9, w9, w7
   4ffd0:	cbz	w7, 50160 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c40>
   4ffd4:	mov	w1, w7
   4ffd8:	add	x0, x0, #0x290
   4ffdc:	ldr	w6, [x0, x1, lsl #2]
   4ffe0:	mov	w1, w7
   4ffe4:	mov	x0, x24
   4ffe8:	bl	4e890 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7370>
   4ffec:	add	x0, x6, x0
   4fff0:	cmp	w7, #0x1
   4fff4:	b.ne	50168 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c48>  // b.any
   4fff8:	cmp	w11, #0x0
   4fffc:	mov	x1, x0
   50000:	ccmp	x0, #0x1, #0x2, eq  // eq = none
   50004:	mov	x2, #0x1                   	// #1
   50008:	sub	x0, x2, x0
   5000c:	csel	x0, x0, x1, ls  // ls = plast
   50010:	ldr	x28, [sp, #280]
   50014:	cbz	x0, 50038 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b18>
   50018:	add	x1, x0, #0xa
   5001c:	cmp	x0, x2
   50020:	ldr	x1, [x24, x1, lsl #3]
   50024:	b.eq	50030 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b10>  // b.none
   50028:	ldr	x0, [sp, #288]
   5002c:	str	x0, [sp, #296]
   50030:	stp	x1, x28, [sp, #280]
   50034:	mov	x28, x1
   50038:	cmp	w12, #0x1f
   5003c:	ldr	x0, [sp, #168]
   50040:	ldr	w27, [x0, x14, lsl #2]
   50044:	b.ls	50180 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c60>  // b.plast
   50048:	mov	w1, w13
   5004c:	mov	x0, x24
   50050:	bl	4e890 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7370>
   50054:	add	x27, x27, x0
   50058:	cmp	w11, #0xf
   5005c:	ldr	x0, [sp, #136]
   50060:	add	x0, x0, #0x3d8
   50064:	ldr	w22, [x0, x8, lsl #2]
   50068:	b.ls	50188 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c68>  // b.plast
   5006c:	mov	w1, w10
   50070:	mov	x0, x24
   50074:	bl	4e890 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7370>
   50078:	add	x22, x22, x0
   5007c:	cmp	w9, #0x1f
   50080:	b.ls	5008c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b6c>  // b.plast
   50084:	mov	x0, x24
   50088:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   5008c:	mov	x1, x24
   50090:	add	x0, x24, #0x20
   50094:	bl	4e9b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7494>
   50098:	mov	x1, x24
   5009c:	add	x0, x24, #0x40
   500a0:	bl	4e9b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7494>
   500a4:	mov	x1, x24
   500a8:	add	x0, x24, #0x30
   500ac:	bl	4e9b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7494>
   500b0:	add	x3, x20, x22
   500b4:	add	x4, x27, x22
   500b8:	add	x8, x20, x4
   500bc:	cmp	x3, x26
   500c0:	add	x22, x25, x22
   500c4:	ccmp	x21, x8, #0x0, ls  // ls = plast
   500c8:	b.cc	502e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8dc4>  // b.lo, b.ul, b.last
   500cc:	ldr	x0, [sp, #144]
   500d0:	cmp	x0, x22
   500d4:	b.cc	4fda4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8884>  // b.lo, b.ul, b.last
   500d8:	mov	x0, #0x0                   	// #0
   500dc:	ldr	x1, [x25, x0]
   500e0:	str	x1, [x20, x0]
   500e4:	add	x0, x0, #0x8
   500e8:	add	x1, x20, x0
   500ec:	cmp	x3, x1
   500f0:	b.hi	500dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8bbc>  // b.pmore
   500f4:	ldr	x0, [sp, #120]
   500f8:	sub	x2, x3, x28
   500fc:	sub	x0, x3, x0
   50100:	cmp	x0, x28
   50104:	b.cs	501bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c9c>  // b.hs, b.nlast
   50108:	ldr	x0, [sp, #160]
   5010c:	sub	x0, x3, x0
   50110:	cmp	x0, x28
   50114:	b.cc	4fda4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8884>  // b.lo, b.ul, b.last
   50118:	ldr	x0, [sp, #120]
   5011c:	stp	x8, x4, [sp, #176]
   50120:	sub	x20, x0, x2
   50124:	ldr	x0, [sp, #152]
   50128:	ldr	x2, [sp, #152]
   5012c:	sub	x1, x0, x20
   50130:	add	x0, x1, x27
   50134:	cmp	x2, x0
   50138:	b.cc	50190 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c70>  // b.lo, b.ul, b.last
   5013c:	mov	x2, x27
   50140:	mov	x0, x3
   50144:	bl	4490 <memmove@plt>
   50148:	ldp	x8, x4, [sp, #176]
   5014c:	cmn	x4, #0x78
   50150:	b.hi	4fe48 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8928>  // b.pmore
   50154:	mov	x25, x22
   50158:	mov	x20, x8
   5015c:	b	4ff1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x89fc>
   50160:	mov	x0, #0x0                   	// #0
   50164:	b	4fff8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ad8>
   50168:	ldr	x1, [sp, #288]
   5016c:	str	x1, [sp, #296]
   50170:	ldr	x1, [sp, #280]
   50174:	mov	x28, x0
   50178:	stp	x0, x1, [sp, #280]
   5017c:	b	50038 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b18>
   50180:	mov	x0, #0x0                   	// #0
   50184:	b	50054 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b34>
   50188:	mov	x0, #0x0                   	// #0
   5018c:	b	50078 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b58>
   50190:	mov	x0, x3
   50194:	mov	x2, x20
   50198:	bl	4490 <memmove@plt>
   5019c:	add	x3, x0, x20
   501a0:	cmp	x26, x3
   501a4:	ldp	x8, x4, [sp, #176]
   501a8:	b.cc	50294 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8d74>  // b.lo, b.ul, b.last
   501ac:	sub	x27, x27, x20
   501b0:	cmp	x27, #0x2
   501b4:	b.ls	50294 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8d74>  // b.plast
   501b8:	ldr	x2, [sp, #120]
   501bc:	cmp	x28, #0x7
   501c0:	b.hi	5029c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8d7c>  // b.pmore
   501c4:	ldrb	w1, [x2]
   501c8:	strb	w1, [x3]
   501cc:	ldr	x0, [sp, #136]
   501d0:	ldrb	w1, [x2, #1]
   501d4:	strb	w1, [x3, #1]
   501d8:	add	x0, x0, #0x468
   501dc:	ldrb	w1, [x2, #2]
   501e0:	strb	w1, [x3, #2]
   501e4:	ldrb	w1, [x2, #3]
   501e8:	strb	w1, [x3, #3]
   501ec:	ldr	x1, [sp, #136]
   501f0:	add	x1, x1, #0x488
   501f4:	ldr	w1, [x1, x28, lsl #2]
   501f8:	add	x9, x2, x1
   501fc:	ldr	w1, [x2, x1]
   50200:	ldrsw	x2, [x0, x28, lsl #2]
   50204:	str	w1, [x3, #4]
   50208:	sub	x2, x9, x2
   5020c:	sub	x1, x21, #0xd
   50210:	add	x0, x3, #0x8
   50214:	add	x7, x2, #0x8
   50218:	cmp	x8, x1
   5021c:	b.ls	502a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8d88>  // b.plast
   50220:	cmp	x26, x0
   50224:	b.ls	50254 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8d34>  // b.plast
   50228:	sub	x0, x26, x0
   5022c:	mov	x9, x26
   50230:	mov	x1, #0x8                   	// #8
   50234:	ldr	x6, [x2, x1]
   50238:	str	x6, [x3, x1]
   5023c:	add	x1, x1, #0x8
   50240:	add	x6, x3, x1
   50244:	cmp	x9, x6
   50248:	b.hi	50234 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8d14>  // b.pmore
   5024c:	add	x7, x7, x0
   50250:	mov	x0, x26
   50254:	mov	x1, #0x0                   	// #0
   50258:	add	x2, x0, x1
   5025c:	cmp	x8, x2
   50260:	b.ls	5014c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c2c>  // b.plast
   50264:	ldrb	w2, [x7, x1]
   50268:	strb	w2, [x0, x1]
   5026c:	add	x1, x1, #0x1
   50270:	b	50258 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8d38>
   50274:	ldr	x1, [sp, #120]
   50278:	ldrb	w1, [x1, x0]
   5027c:	strb	w1, [x3, x0]
   50280:	add	x0, x0, #0x1
   50284:	add	x1, x3, x0
   50288:	cmp	x8, x1
   5028c:	b.hi	50274 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8d54>  // b.pmore
   50290:	b	5014c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c2c>
   50294:	mov	x0, #0x0                   	// #0
   50298:	b	50284 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8d64>
   5029c:	ldr	x0, [x2]
   502a0:	str	x0, [x3]
   502a4:	b	5020c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8cec>
   502a8:	add	x6, x3, x27
   502ac:	mov	x0, #0x8                   	// #8
   502b0:	ldr	x1, [x2, x0]
   502b4:	str	x1, [x3, x0]
   502b8:	add	x0, x0, #0x8
   502bc:	add	x1, x3, x0
   502c0:	cmp	x6, x1
   502c4:	b.hi	502b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8d90>  // b.pmore
   502c8:	b	5014c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c2c>
   502cc:	cbnz	w19, 4fda4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8884>
   502d0:	b	4ff30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8a10>
   502d4:	ldr	x20, [sp, #128]
   502d8:	b	4ff48 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8a28>
   502dc:	mov	x4, #0xffffffffffffffb8    	// #-72
   502e0:	b	4fe48 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8928>
   502e4:	mov	x4, #0xffffffffffffffba    	// #-70
   502e8:	b	4fe48 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8928>
   502ec:	str	wzr, [x0]
   502f0:	strh	wzr, [x0, #4]
   502f4:	strb	w1, [x0, #6]
   502f8:	strb	wzr, [x0, #7]
   502fc:	mov	x0, #0x0                   	// #0
   50300:	ret
   50304:	mov	w2, #0x1                   	// #1
   50308:	lsl	w3, w2, w1
   5030c:	cbz	w1, 50348 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8e28>
   50310:	add	x0, x0, #0x4
   50314:	sturh	w1, [x0, #-4]
   50318:	sturh	w2, [x0, #-2]
   5031c:	mov	w2, #0x0                   	// #0
   50320:	cmp	w2, w3
   50324:	b.ne	50330 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8e10>  // b.any
   50328:	mov	x0, #0x0                   	// #0
   5032c:	ret
   50330:	add	x0, x0, #0x4
   50334:	sturh	wzr, [x0, #-4]
   50338:	sturb	w2, [x0, #-2]
   5033c:	add	w2, w2, #0x1
   50340:	sturb	w1, [x0, #-1]
   50344:	b	50320 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8e00>
   50348:	mov	x0, #0xffffffffffffffff    	// #-1
   5034c:	b	5032c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8e0c>
   50350:	stp	x29, x30, [sp, #-80]!
   50354:	mov	x10, x1
   50358:	add	x10, x0, x10
   5035c:	mov	x29, sp
   50360:	mov	x11, x0
   50364:	ldrh	w0, [x4, #2]
   50368:	mov	x1, x2
   5036c:	mov	x9, x4
   50370:	mov	x2, x3
   50374:	sub	x14, x10, #0x3
   50378:	add	x8, sp, #0x30
   5037c:	cbz	w0, 504b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8f90>
   50380:	mov	x0, x8
   50384:	bl	4eb3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x761c>
   50388:	cmn	x0, #0x78
   5038c:	b.hi	503e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ec0>  // b.pmore
   50390:	add	x12, sp, #0x10
   50394:	mov	x2, x9
   50398:	mov	x1, x8
   5039c:	mov	x0, x12
   503a0:	bl	4e97c <ZDICT_addEntropyTablesFromBuffer@@Base+0x745c>
   503a4:	mov	x2, x9
   503a8:	add	x13, sp, #0x20
   503ac:	mov	x1, x8
   503b0:	mov	x0, x13
   503b4:	bl	4e97c <ZDICT_addEntropyTablesFromBuffer@@Base+0x745c>
   503b8:	mov	x9, x11
   503bc:	mov	x0, x8
   503c0:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   503c4:	cbnz	w0, 503d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8eb0>
   503c8:	cmp	x9, x14
   503cc:	b.cc	503e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ec8>  // b.lo, b.ul, b.last
   503d0:	sub	x10, x10, #0x2
   503d4:	cmp	x10, x9
   503d8:	b.cs	5042c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8f0c>  // b.hs, b.nlast
   503dc:	mov	x0, #0xffffffffffffffba    	// #-70
   503e0:	ldp	x29, x30, [sp], #80
   503e4:	ret
   503e8:	mov	x1, x8
   503ec:	mov	x0, x12
   503f0:	bl	4ec6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x774c>
   503f4:	strb	w0, [x9]
   503f8:	mov	x0, x13
   503fc:	bl	4ec6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x774c>
   50400:	strb	w0, [x9, #1]
   50404:	mov	x0, x12
   50408:	bl	4ec6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x774c>
   5040c:	strb	w0, [x9, #2]
   50410:	mov	x0, x13
   50414:	bl	4ec6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x774c>
   50418:	add	x9, x9, #0x4
   5041c:	sturb	w0, [x9, #-1]
   50420:	b	503bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8e9c>
   50424:	mov	x9, x6
   50428:	b	503d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8eb4>
   5042c:	mov	x1, x8
   50430:	mov	x0, x12
   50434:	bl	4ec6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x774c>
   50438:	strb	w0, [x9]
   5043c:	mov	x0, x8
   50440:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   50444:	cmp	w0, #0x3
   50448:	b.ne	50468 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8f48>  // b.any
   5044c:	mov	x1, x8
   50450:	mov	x0, x13
   50454:	bl	4ec6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x774c>
   50458:	add	x1, x9, #0x2
   5045c:	strb	w0, [x9, #1]
   50460:	sub	x0, x1, x11
   50464:	b	503e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ec0>
   50468:	add	x0, x9, #0x1
   5046c:	cmp	x10, x0
   50470:	b.cc	503dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ebc>  // b.lo, b.ul, b.last
   50474:	mov	x1, x8
   50478:	mov	x0, x13
   5047c:	bl	4ec6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x774c>
   50480:	add	x6, x9, #0x2
   50484:	sturb	w0, [x6, #-1]
   50488:	mov	x0, x8
   5048c:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   50490:	cmp	w0, #0x3
   50494:	b.ne	50424 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8f04>  // b.any
   50498:	mov	x1, x8
   5049c:	mov	x0, x12
   504a0:	bl	4ec6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x774c>
   504a4:	add	x1, x9, #0x3
   504a8:	strb	w0, [x9, #2]
   504ac:	b	50460 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8f40>
   504b0:	mov	x0, x8
   504b4:	bl	4eb3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x761c>
   504b8:	cmn	x0, #0x78
   504bc:	b.hi	503e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ec0>  // b.pmore
   504c0:	add	x12, sp, #0x10
   504c4:	mov	x2, x9
   504c8:	mov	x1, x8
   504cc:	mov	x0, x12
   504d0:	bl	4e97c <ZDICT_addEntropyTablesFromBuffer@@Base+0x745c>
   504d4:	mov	x2, x9
   504d8:	add	x13, sp, #0x20
   504dc:	mov	x1, x8
   504e0:	mov	x0, x13
   504e4:	bl	4e97c <ZDICT_addEntropyTablesFromBuffer@@Base+0x745c>
   504e8:	mov	x9, x11
   504ec:	mov	x0, x8
   504f0:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   504f4:	cbnz	w0, 50500 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8fe0>
   504f8:	cmp	x9, x14
   504fc:	b.cc	5053c <ZDICT_addEntropyTablesFromBuffer@@Base+0x901c>  // b.lo, b.ul, b.last
   50500:	sub	x10, x10, #0x2
   50504:	cmp	x10, x9
   50508:	b.cc	503dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ebc>  // b.lo, b.ul, b.last
   5050c:	mov	x1, x8
   50510:	mov	x0, x12
   50514:	bl	4e9ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x74cc>
   50518:	strb	w0, [x9]
   5051c:	mov	x0, x8
   50520:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   50524:	cmp	w0, #0x3
   50528:	b.ne	5058c <ZDICT_addEntropyTablesFromBuffer@@Base+0x906c>  // b.any
   5052c:	mov	x1, x8
   50530:	mov	x0, x13
   50534:	bl	4e9ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x74cc>
   50538:	b	50458 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8f38>
   5053c:	mov	x1, x8
   50540:	mov	x0, x12
   50544:	bl	4e9ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x74cc>
   50548:	strb	w0, [x9]
   5054c:	mov	x1, x8
   50550:	mov	x0, x13
   50554:	bl	4e9ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x74cc>
   50558:	strb	w0, [x9, #1]
   5055c:	mov	x1, x8
   50560:	mov	x0, x12
   50564:	bl	4e9ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x74cc>
   50568:	strb	w0, [x9, #2]
   5056c:	mov	x1, x8
   50570:	mov	x0, x13
   50574:	bl	4e9ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x74cc>
   50578:	add	x9, x9, #0x4
   5057c:	sturb	w0, [x9, #-1]
   50580:	b	504ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x8fcc>
   50584:	mov	x9, x6
   50588:	b	50504 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8fe4>
   5058c:	add	x0, x9, #0x1
   50590:	cmp	x10, x0
   50594:	b.cc	503dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ebc>  // b.lo, b.ul, b.last
   50598:	mov	x1, x8
   5059c:	mov	x0, x13
   505a0:	bl	4e9ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x74cc>
   505a4:	add	x6, x9, #0x2
   505a8:	sturb	w0, [x6, #-1]
   505ac:	mov	x0, x8
   505b0:	bl	4e8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7394>
   505b4:	cmp	w0, #0x3
   505b8:	b.ne	50584 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9064>  // b.any
   505bc:	mov	x1, x8
   505c0:	mov	x0, x12
   505c4:	bl	4e9ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x74cc>
   505c8:	b	504a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8f84>
   505cc:	mov	x12, #0x4250                	// #16976
   505d0:	sub	sp, sp, x12
   505d4:	cmp	x3, #0x1
   505d8:	stp	x29, x30, [sp]
   505dc:	mov	x29, sp
   505e0:	stp	x19, x20, [sp, #16]
   505e4:	stp	x21, x22, [sp, #32]
   505e8:	mov	x21, x0
   505ec:	mov	w0, #0xff                  	// #255
   505f0:	stp	x23, x24, [sp, #48]
   505f4:	str	w0, [sp, #68]
   505f8:	b.hi	50620 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9100>  // b.pmore
   505fc:	mov	x18, #0xffffffffffffffb8    	// #-72
   50600:	mov	x0, x18
   50604:	mov	x12, #0x4250                	// #16976
   50608:	ldp	x29, x30, [sp]
   5060c:	ldp	x19, x20, [sp, #16]
   50610:	ldp	x21, x22, [sp, #32]
   50614:	ldp	x23, x24, [sp, #48]
   50618:	add	sp, sp, x12
   5061c:	ret
   50620:	add	x24, sp, #0x48
   50624:	mov	x4, x3
   50628:	mov	x22, x1
   5062c:	mov	x20, x2
   50630:	mov	x19, x3
   50634:	add	x1, sp, #0x44
   50638:	mov	x3, x2
   5063c:	mov	x0, x24
   50640:	add	x2, sp, #0x40
   50644:	bl	4f7d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x82b8>
   50648:	mov	x18, x0
   5064c:	cmn	x0, #0x78
   50650:	b.hi	50600 <ZDICT_addEntropyTablesFromBuffer@@Base+0x90e0>  // b.pmore
   50654:	cmp	x19, x0
   50658:	b.ls	505fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x90dc>  // b.plast
   5065c:	ldp	w3, w2, [sp, #64]
   50660:	add	x23, sp, #0x248
   50664:	mov	x1, x24
   50668:	mov	x0, x23
   5066c:	bl	4fa64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8544>
   50670:	cmn	x0, #0x78
   50674:	b.hi	50690 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9170>  // b.pmore
   50678:	mov	x4, x23
   5067c:	sub	x3, x19, x18
   50680:	add	x2, x20, x18
   50684:	mov	x1, x22
   50688:	mov	x0, x21
   5068c:	bl	50350 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8e30>
   50690:	mov	x18, x0
   50694:	b	50600 <ZDICT_addEntropyTablesFromBuffer@@Base+0x90e0>
   50698:	stp	x29, x30, [sp, #-64]!
   5069c:	mov	x29, sp
   506a0:	stp	x19, x20, [sp, #16]
   506a4:	stp	x21, x22, [sp, #32]
   506a8:	stp	x23, x24, [sp, #48]
   506ac:	cbz	x6, 5086c <ZDICT_addEntropyTablesFromBuffer@@Base+0x934c>
   506b0:	ldrb	w20, [x5]
   506b4:	mov	x23, x0
   506b8:	mov	x21, x2
   506bc:	mov	x22, x3
   506c0:	mov	x24, x4
   506c4:	cmp	x20, #0x7f
   506c8:	b.ls	50810 <ZDICT_addEntropyTablesFromBuffer@@Base+0x92f0>  // b.plast
   506cc:	cmp	x20, #0xf1
   506d0:	b.ls	50794 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9274>  // b.plast
   506d4:	adrp	x3, 57000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfae0>
   506d8:	add	x3, x3, #0x4a0
   506dc:	add	x3, x3, x20, lsl #2
   506e0:	mov	x2, x1
   506e4:	mov	x20, #0x0                   	// #0
   506e8:	mov	w1, #0x1                   	// #1
   506ec:	ldr	w19, [x3, #224]
   506f0:	bl	4700 <memset@plt>
   506f4:	mov	w2, #0x0                   	// #0
   506f8:	mov	w0, #0x0                   	// #0
   506fc:	mov	w5, #0x1                   	// #1
   50700:	stp	xzr, xzr, [x21]
   50704:	stp	xzr, xzr, [x21, #16]
   50708:	stp	xzr, xzr, [x21, #32]
   5070c:	stp	xzr, xzr, [x21, #48]
   50710:	str	wzr, [x21, #64]
   50714:	mov	w4, w2
   50718:	cmp	x19, w2, uxtw
   5071c:	b.hi	5083c <ZDICT_addEntropyTablesFromBuffer@@Base+0x931c>  // b.pmore
   50720:	cbz	w0, 507b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9294>
   50724:	clz	w1, w0
   50728:	eor	w1, w1, #0x1f
   5072c:	add	w1, w1, #0x1
   50730:	cmp	w1, #0x10
   50734:	b.hi	507b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9294>  // b.pmore
   50738:	mov	w2, #0x1                   	// #1
   5073c:	str	w1, [x24]
   50740:	lsl	w1, w2, w1
   50744:	sub	w1, w1, w0
   50748:	clz	w0, w1
   5074c:	eor	w0, w0, #0x1f
   50750:	lsl	w2, w2, w0
   50754:	cmp	w1, w2
   50758:	b.ne	507b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9294>  // b.any
   5075c:	add	w0, w0, #0x1
   50760:	strb	w0, [x23, x19]
   50764:	ubfiz	x0, x0, #2, #7
   50768:	ldr	w1, [x21, x0]
   5076c:	add	w1, w1, #0x1
   50770:	str	w1, [x21, x0]
   50774:	ldr	w0, [x21, #4]
   50778:	cmp	w0, #0x1
   5077c:	b.ls	507b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9294>  // b.plast
   50780:	tbnz	w0, #0, 507b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9294>
   50784:	add	w19, w19, #0x1
   50788:	str	w19, [x22]
   5078c:	add	x19, x20, #0x1
   50790:	b	507b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9298>
   50794:	sub	x19, x20, #0x7f
   50798:	sub	x20, x20, #0x7e
   5079c:	lsr	x20, x20, #1
   507a0:	add	x0, x20, #0x1
   507a4:	cmp	x0, x6
   507a8:	b.hi	5086c <ZDICT_addEntropyTablesFromBuffer@@Base+0x934c>  // b.pmore
   507ac:	cmp	x1, x19
   507b0:	b.hi	50808 <ZDICT_addEntropyTablesFromBuffer@@Base+0x92e8>  // b.pmore
   507b4:	mov	x19, #0xffffffffffffffec    	// #-20
   507b8:	mov	x0, x19
   507bc:	ldp	x19, x20, [sp, #16]
   507c0:	ldp	x21, x22, [sp, #32]
   507c4:	ldp	x23, x24, [sp, #48]
   507c8:	ldp	x29, x30, [sp], #64
   507cc:	ret
   507d0:	lsr	w1, w0, #1
   507d4:	add	x1, x1, #0x1
   507d8:	ldrb	w2, [x5, x1]
   507dc:	lsr	w2, w2, #4
   507e0:	strb	w2, [x23, x3]
   507e4:	add	w2, w0, #0x1
   507e8:	add	w0, w0, #0x2
   507ec:	ldrb	w1, [x5, x1]
   507f0:	and	w1, w1, #0xf
   507f4:	strb	w1, [x23, x2]
   507f8:	mov	w3, w0
   507fc:	cmp	x19, w0, uxtw
   50800:	b.hi	507d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x92b0>  // b.pmore
   50804:	b	506f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x91d4>
   50808:	mov	w0, #0x0                   	// #0
   5080c:	b	507f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x92d8>
   50810:	add	x2, x20, #0x1
   50814:	cmp	x2, x6
   50818:	b.hi	5086c <ZDICT_addEntropyTablesFromBuffer@@Base+0x934c>  // b.pmore
   5081c:	mov	x3, x20
   50820:	add	x2, x5, #0x1
   50824:	sub	x1, x1, #0x1
   50828:	bl	505cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x90ac>
   5082c:	mov	x19, x0
   50830:	cmn	x0, #0x78
   50834:	b.ls	506f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x91d4>  // b.plast
   50838:	b	507b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9298>
   5083c:	ldrb	w1, [x23, x4]
   50840:	cmp	w1, #0xf
   50844:	b.hi	507b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9294>  // b.pmore
   50848:	ubfiz	x1, x1, #2, #8
   5084c:	add	w2, w2, #0x1
   50850:	ldr	w3, [x21, x1]
   50854:	add	w3, w3, #0x1
   50858:	str	w3, [x21, x1]
   5085c:	ldrb	w1, [x23, x4]
   50860:	lsl	w1, w5, w1
   50864:	add	w0, w0, w1, asr #1
   50868:	b	50714 <ZDICT_addEntropyTablesFromBuffer@@Base+0x91f4>
   5086c:	mov	x19, #0xffffffffffffffb8    	// #-72
   50870:	b	507b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9298>
   50874:	stp	x29, x30, [sp, #-384]!
   50878:	mov	x6, x2
   5087c:	mov	x5, x1
   50880:	mov	x29, sp
   50884:	stp	x19, x20, [sp, #16]
   50888:	add	x20, sp, #0x38
   5088c:	mov	x19, x0
   50890:	str	x21, [sp, #32]
   50894:	add	x21, sp, #0x80
   50898:	add	x4, sp, #0x30
   5089c:	add	x3, sp, #0x34
   508a0:	mov	x2, x20
   508a4:	mov	x0, x21
   508a8:	mov	x1, #0x100                 	// #256
   508ac:	stp	wzr, wzr, [sp, #48]
   508b0:	bl	50698 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9178>
   508b4:	cmn	x0, #0x78
   508b8:	b.hi	508e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x93c8>  // b.pmore
   508bc:	ldr	w1, [x19]
   508c0:	mov	w3, #0x0                   	// #0
   508c4:	ldr	w4, [sp, #48]
   508c8:	bfxil	w3, w1, #0, #8
   508cc:	lsr	w2, w1, #24
   508d0:	and	w1, w1, #0xff
   508d4:	add	w1, w1, #0x1
   508d8:	bfi	w3, w2, #24, #8
   508dc:	cmp	w1, w4
   508e0:	b.cs	508f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x93d8>  // b.hs, b.nlast
   508e4:	mov	x0, #0xffffffffffffffd4    	// #-44
   508e8:	ldp	x19, x20, [sp, #16]
   508ec:	ldr	x21, [sp, #32]
   508f0:	ldp	x29, x30, [sp], #384
   508f4:	ret
   508f8:	and	w3, w3, #0xffff00ff
   508fc:	and	w1, w4, #0xff
   50900:	mov	w2, #0x0                   	// #0
   50904:	mov	w5, #0x0                   	// #0
   50908:	bfi	w3, w1, #16, #8
   5090c:	str	w3, [x19]
   50910:	mov	x3, x20
   50914:	add	x3, x3, #0x4
   50918:	cmp	w4, w2
   5091c:	b.ne	50974 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9454>  // b.any
   50920:	ldr	w7, [sp, #52]
   50924:	mov	w8, #0x1                   	// #1
   50928:	add	w2, w1, w8
   5092c:	mov	x3, #0x0                   	// #0
   50930:	cmp	w7, w3
   50934:	b.ls	508e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x93c8>  // b.plast
   50938:	ldrb	w9, [x21, x3]
   5093c:	and	w10, w3, #0xff
   50940:	sub	w6, w2, w9
   50944:	ubfiz	x1, x9, #2, #8
   50948:	lsl	w4, w8, w9
   5094c:	and	w6, w6, #0xff
   50950:	ldr	w1, [x20, x1]
   50954:	add	x5, x19, w1, uxtw #1
   50958:	add	w4, w1, w4, asr #1
   5095c:	add	x5, x5, #0x2
   50960:	cmp	w4, w1
   50964:	b.hi	5098c <ZDICT_addEntropyTablesFromBuffer@@Base+0x946c>  // b.pmore
   50968:	add	x3, x3, #0x1
   5096c:	str	w4, [x20, x9, lsl #2]
   50970:	b	50930 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9410>
   50974:	ldr	w6, [x3]
   50978:	str	w5, [x3]
   5097c:	lsl	w6, w6, w2
   50980:	add	w2, w2, #0x1
   50984:	add	w5, w6, w5
   50988:	b	50914 <ZDICT_addEntropyTablesFromBuffer@@Base+0x93f4>
   5098c:	add	w1, w1, #0x1
   50990:	strb	w10, [x5, #2]
   50994:	strb	w6, [x5, #3]
   50998:	b	5095c <ZDICT_addEntropyTablesFromBuffer@@Base+0x943c>
   5099c:	ldrb	w5, [x4, #1]
   509a0:	cbnz	w5, 509a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9488>
   509a4:	b	4edcc <ZDICT_addEntropyTablesFromBuffer@@Base+0x78ac>
   509a8:	mov	x0, #0xffffffffffffffff    	// #-1
   509ac:	ret
   509b0:	stp	x29, x30, [sp, #-64]!
   509b4:	mov	x29, sp
   509b8:	stp	x19, x20, [sp, #16]
   509bc:	mov	x20, x3
   509c0:	mov	x19, x4
   509c4:	stp	x21, x22, [sp, #32]
   509c8:	mov	x21, x1
   509cc:	mov	x22, x2
   509d0:	mov	x1, x3
   509d4:	mov	x2, x4
   509d8:	str	x23, [sp, #48]
   509dc:	mov	x23, x0
   509e0:	bl	50874 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9354>
   509e4:	cmn	x0, #0x78
   509e8:	b.hi	50a20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9500>  // b.pmore
   509ec:	cmp	x19, x0
   509f0:	b.ls	50a1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x94fc>  // b.plast
   509f4:	sub	x3, x19, x0
   509f8:	add	x2, x20, x0
   509fc:	mov	x4, x23
   50a00:	mov	x1, x22
   50a04:	mov	x0, x21
   50a08:	ldp	x19, x20, [sp, #16]
   50a0c:	ldp	x21, x22, [sp, #32]
   50a10:	ldr	x23, [sp, #48]
   50a14:	ldp	x29, x30, [sp], #64
   50a18:	b	4edcc <ZDICT_addEntropyTablesFromBuffer@@Base+0x78ac>
   50a1c:	mov	x0, #0xffffffffffffffb8    	// #-72
   50a20:	ldp	x19, x20, [sp, #16]
   50a24:	ldp	x21, x22, [sp, #32]
   50a28:	ldr	x23, [sp, #48]
   50a2c:	ldp	x29, x30, [sp], #64
   50a30:	ret
   50a34:	mov	x12, #0x2040                	// #8256
   50a38:	sub	sp, sp, x12
   50a3c:	add	x5, sp, #0x38
   50a40:	stp	x29, x30, [sp]
   50a44:	mov	x29, sp
   50a48:	stp	x19, x20, [sp, #16]
   50a4c:	mov	x19, x0
   50a50:	mov	x20, x1
   50a54:	mov	x0, x5
   50a58:	mov	w1, #0x0                   	// #0
   50a5c:	stp	x21, x22, [sp, #32]
   50a60:	mov	x22, x3
   50a64:	mov	x21, x2
   50a68:	mov	x2, #0x2004                	// #8196
   50a6c:	bl	4700 <memset@plt>
   50a70:	mov	x5, x0
   50a74:	mov	w0, #0xb                   	// #11
   50a78:	movk	w0, #0xb00, lsl #16
   50a7c:	mov	x4, x22
   50a80:	mov	x3, x21
   50a84:	mov	x2, x20
   50a88:	mov	x1, x19
   50a8c:	str	w0, [sp, #56]
   50a90:	mov	x0, x5
   50a94:	bl	509b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9490>
   50a98:	mov	x12, #0x2040                	// #8256
   50a9c:	ldp	x29, x30, [sp]
   50aa0:	ldp	x19, x20, [sp, #16]
   50aa4:	ldp	x21, x22, [sp, #32]
   50aa8:	add	sp, sp, x12
   50aac:	ret
   50ab0:	ldrb	w5, [x4, #1]
   50ab4:	cbnz	w5, 50abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x959c>
   50ab8:	b	4ee34 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7914>
   50abc:	mov	x0, #0xffffffffffffffff    	// #-1
   50ac0:	ret
   50ac4:	stp	x29, x30, [sp, #-64]!
   50ac8:	mov	x29, sp
   50acc:	stp	x19, x20, [sp, #16]
   50ad0:	mov	x20, x3
   50ad4:	mov	x19, x4
   50ad8:	stp	x21, x22, [sp, #32]
   50adc:	mov	x21, x1
   50ae0:	mov	x22, x2
   50ae4:	mov	x1, x3
   50ae8:	mov	x2, x4
   50aec:	str	x23, [sp, #48]
   50af0:	mov	x23, x0
   50af4:	bl	50874 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9354>
   50af8:	cmn	x0, #0x78
   50afc:	b.hi	50b34 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9614>  // b.pmore
   50b00:	cmp	x19, x0
   50b04:	b.ls	50b30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9610>  // b.plast
   50b08:	sub	x3, x19, x0
   50b0c:	add	x2, x20, x0
   50b10:	mov	x4, x23
   50b14:	mov	x1, x22
   50b18:	mov	x0, x21
   50b1c:	ldp	x19, x20, [sp, #16]
   50b20:	ldp	x21, x22, [sp, #32]
   50b24:	ldr	x23, [sp, #48]
   50b28:	ldp	x29, x30, [sp], #64
   50b2c:	b	4ee34 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7914>
   50b30:	mov	x0, #0xffffffffffffffb8    	// #-72
   50b34:	ldp	x19, x20, [sp, #16]
   50b38:	ldp	x21, x22, [sp, #32]
   50b3c:	ldr	x23, [sp, #48]
   50b40:	ldp	x29, x30, [sp], #64
   50b44:	ret
   50b48:	mov	x12, #0x2040                	// #8256
   50b4c:	sub	sp, sp, x12
   50b50:	add	x5, sp, #0x38
   50b54:	stp	x29, x30, [sp]
   50b58:	mov	x29, sp
   50b5c:	stp	x19, x20, [sp, #16]
   50b60:	mov	x19, x0
   50b64:	mov	x20, x1
   50b68:	mov	x0, x5
   50b6c:	mov	w1, #0x0                   	// #0
   50b70:	stp	x21, x22, [sp, #32]
   50b74:	mov	x22, x3
   50b78:	mov	x21, x2
   50b7c:	mov	x2, #0x2004                	// #8196
   50b80:	bl	4700 <memset@plt>
   50b84:	mov	x5, x0
   50b88:	mov	w0, #0xb                   	// #11
   50b8c:	movk	w0, #0xb00, lsl #16
   50b90:	mov	x4, x22
   50b94:	mov	x3, x21
   50b98:	mov	x2, x20
   50b9c:	mov	x1, x19
   50ba0:	str	w0, [sp, #56]
   50ba4:	mov	x0, x5
   50ba8:	bl	50ac4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x95a4>
   50bac:	mov	x12, #0x2040                	// #8256
   50bb0:	ldp	x29, x30, [sp]
   50bb4:	ldp	x19, x20, [sp, #16]
   50bb8:	ldp	x21, x22, [sp, #32]
   50bbc:	add	sp, sp, x12
   50bc0:	ret
   50bc4:	sub	sp, sp, #0x930
   50bc8:	stp	x29, x30, [sp]
   50bcc:	mov	x29, sp
   50bd0:	stp	x23, x24, [sp, #48]
   50bd4:	mov	x23, x0
   50bd8:	add	x0, sp, #0x260
   50bdc:	stp	x19, x20, [sp, #16]
   50be0:	stp	x21, x22, [sp, #32]
   50be4:	mov	w21, #0x0                   	// #0
   50be8:	stp	x25, x26, [sp, #64]
   50bec:	stp	x27, x28, [sp, #80]
   50bf0:	ldr	w19, [x23]
   50bf4:	stp	xzr, xzr, [x0, #-184]
   50bf8:	stp	xzr, xzr, [x0, #-168]
   50bfc:	stp	xzr, xzr, [x0, #-152]
   50c00:	stp	xzr, xzr, [x0, #-136]
   50c04:	and	w0, w19, #0xff
   50c08:	bfxil	w21, w0, #0, #8
   50c0c:	str	w0, [sp, #104]
   50c10:	ubfx	x0, x19, #8, #8
   50c14:	stp	xzr, xzr, [sp, #208]
   50c18:	bfi	w21, w0, #8, #8
   50c1c:	ubfx	x0, x19, #16, #8
   50c20:	stp	xzr, xzr, [sp, #224]
   50c24:	bfi	w21, w0, #16, #8
   50c28:	lsr	w0, w19, #24
   50c2c:	stp	xzr, xzr, [sp, #240]
   50c30:	and	w19, w19, #0xff
   50c34:	stp	xzr, xzr, [sp, #256]
   50c38:	bfi	w21, w0, #24, #8
   50c3c:	cmp	w19, #0x10
   50c40:	str	wzr, [sp, #272]
   50c44:	str	xzr, [sp, #488]
   50c48:	b.ls	50c74 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9754>  // b.plast
   50c4c:	mov	x28, #0xffffffffffffffd4    	// #-44
   50c50:	mov	x0, x28
   50c54:	ldp	x29, x30, [sp]
   50c58:	ldp	x19, x20, [sp, #16]
   50c5c:	ldp	x21, x22, [sp, #32]
   50c60:	ldp	x23, x24, [sp, #48]
   50c64:	ldp	x25, x26, [sp, #64]
   50c68:	ldp	x27, x28, [sp, #80]
   50c6c:	add	sp, sp, #0x930
   50c70:	ret
   50c74:	add	x22, sp, #0xd0
   50c78:	add	x25, sp, #0x1f0
   50c7c:	mov	x5, x1
   50c80:	mov	x6, x2
   50c84:	add	x4, sp, #0xc8
   50c88:	add	x3, sp, #0xcc
   50c8c:	mov	x2, x22
   50c90:	mov	x0, x25
   50c94:	mov	x1, #0x100                 	// #256
   50c98:	bl	50698 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9178>
   50c9c:	mov	x28, x0
   50ca0:	cmn	x0, #0x78
   50ca4:	b.hi	50c50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9730>  // b.pmore
   50ca8:	ldr	w1, [sp, #200]
   50cac:	cmp	w1, w19
   50cb0:	b.hi	50c4c <ZDICT_addEntropyTablesFromBuffer@@Base+0x972c>  // b.pmore
   50cb4:	mov	w20, w1
   50cb8:	ldr	w0, [x22, w20, uxtw #2]
   50cbc:	cbz	w0, 50dac <ZDICT_addEntropyTablesFromBuffer@@Base+0x988c>
   50cc0:	add	w4, w20, w19
   50cc4:	add	w6, w20, #0x1
   50cc8:	add	x2, sp, #0x1a8
   50ccc:	mov	x0, #0x0                   	// #0
   50cd0:	mov	w24, #0x0                   	// #0
   50cd4:	add	x0, x0, #0x1
   50cd8:	cmp	w6, w0
   50cdc:	b.hi	50db4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9894>  // b.pmore
   50ce0:	ldr	w7, [sp, #204]
   50ce4:	add	x5, sp, #0x1ac
   50ce8:	add	x8, sp, #0x2f0
   50cec:	add	x9, sp, #0x2f1
   50cf0:	mov	x0, #0x0                   	// #0
   50cf4:	str	w24, [sp, #428]
   50cf8:	cmp	w7, w0
   50cfc:	b.hi	50dc8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x98a8>  // b.pmore
   50d00:	mvn	w2, w1
   50d04:	add	x5, sp, #0x4f0
   50d08:	add	w2, w2, w19
   50d0c:	mov	x0, #0x0                   	// #0
   50d10:	mov	w3, #0x0                   	// #0
   50d14:	str	wzr, [sp, #428]
   50d18:	add	x0, x0, #0x1
   50d1c:	cmp	w6, w0
   50d20:	b.hi	50df4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x98d4>  // b.pmore
   50d24:	add	w25, w1, #0x1
   50d28:	mov	w0, #0x44                  	// #68
   50d2c:	sub	w20, w25, w20
   50d30:	sub	w4, w4, w1
   50d34:	mov	w2, w20
   50d38:	umaddl	x0, w20, w0, x5
   50d3c:	cmp	w2, w4
   50d40:	b.cc	50e0c <ZDICT_addEntropyTablesFromBuffer@@Base+0x98ec>  // b.lo, b.ul, b.last
   50d44:	sub	w0, w25, w19
   50d48:	add	x26, sp, #0x118
   50d4c:	mov	x1, x5
   50d50:	mov	x2, #0x44                  	// #68
   50d54:	str	w0, [sp, #108]
   50d58:	mov	x0, x26
   50d5c:	str	x5, [sp, #112]
   50d60:	bl	4460 <memcpy@plt>
   50d64:	ldr	x5, [sp, #112]
   50d68:	sub	w0, w19, w25
   50d6c:	add	x8, sp, #0x160
   50d70:	add	x4, sp, #0x2f0
   50d74:	mov	w10, #0x0                   	// #0
   50d78:	mov	w13, #0x1                   	// #1
   50d7c:	str	x4, [sp, #120]
   50d80:	str	w0, [sp, #144]
   50d84:	add	x0, sp, #0x1a8
   50d88:	str	x0, [sp, #128]
   50d8c:	cmp	w24, w10
   50d90:	b.ne	50e38 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9918>  // b.any
   50d94:	ldr	w0, [sp, #104]
   50d98:	bfi	w21, w0, #16, #8
   50d9c:	mov	w0, #0x1                   	// #1
   50da0:	bfi	w21, w0, #8, #8
   50da4:	str	w21, [x23]
   50da8:	b	50c50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9730>
   50dac:	sub	w20, w20, #0x1
   50db0:	b	50cb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9798>
   50db4:	add	x5, x2, x0, lsl #2
   50db8:	ldr	w3, [x22, x0, lsl #2]
   50dbc:	str	w24, [x5, #4]
   50dc0:	add	w24, w24, w3
   50dc4:	b	50cd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x97b4>
   50dc8:	ldrb	w2, [x25, x0]
   50dcc:	ldrb	w10, [x25, x0]
   50dd0:	lsl	x2, x2, #2
   50dd4:	ldr	w3, [x5, x2]
   50dd8:	add	w11, w3, #0x1
   50ddc:	str	w11, [x5, x2]
   50de0:	ubfiz	x3, x3, #1, #32
   50de4:	strb	w0, [x8, x3]
   50de8:	add	x0, x0, #0x1
   50dec:	strb	w10, [x9, x3]
   50df0:	b	50cf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x97d8>
   50df4:	ldr	w8, [x22, x0, lsl #2]
   50df8:	add	w7, w2, w0
   50dfc:	str	w3, [x5, x0, lsl #2]
   50e00:	lsl	w7, w8, w7
   50e04:	add	w3, w7, w3
   50e08:	b	50d18 <ZDICT_addEntropyTablesFromBuffer@@Base+0x97f8>
   50e0c:	mov	x1, #0x0                   	// #0
   50e10:	add	x1, x1, #0x1
   50e14:	cmp	w6, w1
   50e18:	b.hi	50e28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9908>  // b.pmore
   50e1c:	add	w2, w2, #0x1
   50e20:	add	x0, x0, #0x44
   50e24:	b	50d3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x981c>
   50e28:	ldr	w3, [x5, x1, lsl #2]
   50e2c:	lsr	w3, w3, w2
   50e30:	str	w3, [x0, x1, lsl #2]
   50e34:	b	50e10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x98f0>
   50e38:	ldrb	w27, [x4, #1]
   50e3c:	mov	w3, #0x1                   	// #1
   50e40:	ldr	w1, [sp, #144]
   50e44:	ldrb	w12, [x4]
   50e48:	sub	w22, w25, w27
   50e4c:	ubfiz	x0, x27, #2, #8
   50e50:	add	w6, w1, w27
   50e54:	str	w6, [sp, #188]
   50e58:	cmp	w20, w6
   50e5c:	lsl	w9, w3, w6
   50e60:	ldr	w0, [x26, x0]
   50e64:	mov	w19, w0
   50e68:	add	w9, w9, w0
   50e6c:	b.hi	50fc4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9aa4>  // b.pmore
   50e70:	ldr	w0, [sp, #108]
   50e74:	mov	w1, #0x44                  	// #68
   50e78:	mov	x2, #0x44                  	// #68
   50e7c:	str	x5, [sp, #136]
   50e80:	add	w7, w0, w22
   50e84:	umaddl	x1, w22, w1, x5
   50e88:	cmp	w7, #0x0
   50e8c:	stp	w7, w9, [sp, #160]
   50e90:	csel	w3, w7, w3, gt
   50e94:	stp	w10, w12, [sp, #168]
   50e98:	ldr	x0, [sp, #128]
   50e9c:	sbfiz	x3, x3, #2, #32
   50ea0:	str	x3, [sp, #152]
   50ea4:	add	x19, x19, #0x1
   50ea8:	str	x4, [sp, #176]
   50eac:	ldr	w14, [x0, x3]
   50eb0:	add	x19, x23, x19, lsl #2
   50eb4:	str	w14, [sp, #148]
   50eb8:	sub	w0, w24, w14
   50ebc:	str	w0, [sp, #112]
   50ec0:	mov	x0, x8
   50ec4:	str	w13, [sp, #184]
   50ec8:	bl	4460 <memcpy@plt>
   50ecc:	mov	x8, x0
   50ed0:	ldp	w7, w9, [sp, #160]
   50ed4:	ldr	w14, [sp, #148]
   50ed8:	ldp	w10, w12, [sp, #168]
   50edc:	cmp	w7, #0x1
   50ee0:	ldp	w13, w6, [sp, #184]
   50ee4:	ldr	x5, [sp, #136]
   50ee8:	ldr	x3, [sp, #152]
   50eec:	ldr	x4, [sp, #176]
   50ef0:	b.gt	50f2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9a0c>
   50ef4:	ldr	x0, [sp, #120]
   50ef8:	mov	w16, #0x0                   	// #0
   50efc:	mov	w18, #0x1                   	// #1
   50f00:	mov	w30, #0x2                   	// #2
   50f04:	add	x1, x0, w14, uxtw #1
   50f08:	sub	w0, w6, w25
   50f0c:	ldr	w2, [sp, #112]
   50f10:	cmp	w2, w16
   50f14:	b.ne	50f58 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9a38>  // b.any
   50f18:	ubfiz	x27, x27, #2, #8
   50f1c:	add	w10, w10, #0x1
   50f20:	add	x4, x4, #0x2
   50f24:	str	w9, [x26, x27]
   50f28:	b	50d8c <ZDICT_addEntropyTablesFromBuffer@@Base+0x986c>
   50f2c:	ldr	w1, [x8, x3]
   50f30:	and	w2, w22, #0xff
   50f34:	mov	x0, x19
   50f38:	add	x1, x19, w1, uxtw #2
   50f3c:	cmp	x1, x0
   50f40:	b.eq	50ef4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x99d4>  // b.none
   50f44:	add	x0, x0, #0x4
   50f48:	sturh	w12, [x0, #-4]
   50f4c:	sturb	w2, [x0, #-2]
   50f50:	sturb	w13, [x0, #-1]
   50f54:	b	50f3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9a1c>
   50f58:	ldrb	w2, [x1, #1]
   50f5c:	ldrb	w6, [x1, #1]
   50f60:	add	w3, w0, w6
   50f64:	sub	w14, w25, w6
   50f68:	ldr	w7, [x8, x2, lsl #2]
   50f6c:	add	w14, w14, w22
   50f70:	ldrb	w2, [x1]
   50f74:	lsl	w3, w18, w3
   50f78:	and	w14, w14, #0xff
   50f7c:	add	w3, w3, w7
   50f80:	ubfiz	w2, w2, #8, #8
   50f84:	add	w2, w12, w2
   50f88:	and	w2, w2, #0xffff
   50f8c:	mov	w15, w7
   50f90:	add	w7, w7, #0x1
   50f94:	cmp	w3, w7
   50f98:	ubfiz	x15, x15, #2, #32
   50f9c:	add	x17, x19, x15
   50fa0:	strh	w2, [x19, x15]
   50fa4:	strb	w14, [x17, #2]
   50fa8:	strb	w30, [x17, #3]
   50fac:	b.hi	50f8c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9a6c>  // b.pmore
   50fb0:	ubfiz	x6, x6, #2, #8
   50fb4:	add	w16, w16, #0x1
   50fb8:	add	x1, x1, #0x2
   50fbc:	str	w3, [x8, x6]
   50fc0:	b	50f0c <ZDICT_addEntropyTablesFromBuffer@@Base+0x99ec>
   50fc4:	and	w22, w22, #0xff
   50fc8:	add	x19, x23, x19, lsl #2
   50fcc:	add	x19, x19, #0x4
   50fd0:	cmp	w9, w0
   50fd4:	b.ls	50f18 <ZDICT_addEntropyTablesFromBuffer@@Base+0x99f8>  // b.plast
   50fd8:	add	w0, w0, #0x1
   50fdc:	strh	w12, [x19]
   50fe0:	strb	w22, [x19, #2]
   50fe4:	strb	w13, [x19, #3]
   50fe8:	b	50fcc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9aac>
   50fec:	stp	x29, x30, [sp, #-224]!
   50ff0:	mov	x3, #0x140c                	// #5132
   50ff4:	mov	x29, sp
   50ff8:	stp	x19, x21, [sp, #16]
   50ffc:	stp	x22, x23, [sp, #32]
   51000:	mov	x22, x0
   51004:	mov	x23, x2
   51008:	add	x0, x0, x3
   5100c:	stp	x24, x25, [sp, #48]
   51010:	mov	x25, x1
   51014:	stp	x26, x27, [sp, #64]
   51018:	str	x28, [sp, #80]
   5101c:	bl	50bc4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x96a4>
   51020:	cmn	x0, #0x78
   51024:	b.ls	51048 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b28>  // b.plast
   51028:	mov	x0, #0xffffffffffffffe2    	// #-30
   5102c:	ldp	x19, x21, [sp, #16]
   51030:	ldp	x22, x23, [sp, #32]
   51034:	ldp	x24, x25, [sp, #48]
   51038:	ldp	x26, x27, [sp, #64]
   5103c:	ldr	x28, [sp, #80]
   51040:	ldp	x29, x30, [sp], #224
   51044:	ret
   51048:	add	x21, x25, x0
   5104c:	mov	w1, #0x1c                  	// #28
   51050:	add	x28, sp, #0x6c
   51054:	add	x27, sp, #0x68
   51058:	add	x24, sp, #0x70
   5105c:	sub	x4, x23, x0
   51060:	mov	x3, x21
   51064:	mov	x2, x28
   51068:	mov	x0, x24
   5106c:	str	w1, [sp, #104]
   51070:	mov	x1, x27
   51074:	bl	4f7d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x82b8>
   51078:	mov	x19, x0
   5107c:	cmn	x0, #0x78
   51080:	b.hi	51028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b08>  // b.pmore
   51084:	ldr	w3, [sp, #108]
   51088:	cmp	w3, #0x8
   5108c:	b.hi	51028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b08>  // b.pmore
   51090:	ldr	w2, [sp, #104]
   51094:	mov	x1, x24
   51098:	add	x0, x22, #0x804
   5109c:	bl	4fa64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8544>
   510a0:	cmn	x0, #0x78
   510a4:	b.hi	51028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b08>  // b.pmore
   510a8:	add	x21, x21, x19
   510ac:	mov	w0, #0x34                  	// #52
   510b0:	add	x26, x25, x23
   510b4:	mov	x3, x21
   510b8:	sub	x4, x26, x21
   510bc:	mov	x2, x28
   510c0:	mov	x1, x27
   510c4:	str	w0, [sp, #104]
   510c8:	mov	x0, x24
   510cc:	bl	4f7d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x82b8>
   510d0:	mov	x19, x0
   510d4:	cmn	x0, #0x78
   510d8:	b.hi	51028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b08>  // b.pmore
   510dc:	ldr	w3, [sp, #108]
   510e0:	cmp	w3, #0x9
   510e4:	b.hi	51028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b08>  // b.pmore
   510e8:	ldr	w2, [sp, #104]
   510ec:	mov	x1, x24
   510f0:	add	x0, x22, #0xc08
   510f4:	bl	4fa64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8544>
   510f8:	cmn	x0, #0x78
   510fc:	b.hi	51028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b08>  // b.pmore
   51100:	add	x19, x21, x19
   51104:	mov	w0, #0x23                  	// #35
   51108:	sub	x4, x26, x19
   5110c:	mov	x3, x19
   51110:	mov	x2, x28
   51114:	mov	x1, x27
   51118:	str	w0, [sp, #104]
   5111c:	mov	x0, x24
   51120:	bl	4f7d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x82b8>
   51124:	mov	x18, x0
   51128:	cmn	x0, #0x78
   5112c:	b.hi	51028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b08>  // b.pmore
   51130:	ldr	w3, [sp, #108]
   51134:	cmp	w3, #0x9
   51138:	b.hi	51028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b08>  // b.pmore
   5113c:	ldr	w2, [sp, #104]
   51140:	mov	x1, x24
   51144:	mov	x0, x22
   51148:	bl	4fa64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8544>
   5114c:	cmn	x0, #0x78
   51150:	b.hi	51028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b08>  // b.pmore
   51154:	add	x0, x19, x18
   51158:	add	x3, x0, #0xc
   5115c:	cmp	x3, x26
   51160:	b.hi	51028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b08>  // b.pmore
   51164:	add	x1, x22, #0x4, lsl #12
   51168:	ldr	w2, [x19, x18]
   5116c:	str	w2, [x1, #5176]
   51170:	cbz	w2, 51028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b08>
   51174:	cmp	x23, w2, uxtw
   51178:	b.ls	51028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b08>  // b.plast
   5117c:	ldr	w2, [x0, #4]
   51180:	str	w2, [x1, #5180]
   51184:	cbz	w2, 51028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b08>
   51188:	cmp	x23, w2, uxtw
   5118c:	b.ls	51028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b08>  // b.plast
   51190:	ldr	w0, [x0, #8]
   51194:	str	w0, [x1, #5184]
   51198:	cbz	w0, 51028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b08>
   5119c:	cmp	x23, w0, uxtw
   511a0:	b.ls	51028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b08>  // b.plast
   511a4:	mov	x0, #0x100000001           	// #4294967297
   511a8:	str	x0, [x22, #21608]
   511ac:	sub	x0, x3, x25
   511b0:	b	5102c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b0c>
   511b4:	ldrb	w5, [x4, #1]
   511b8:	cmp	w5, #0x1
   511bc:	b.ne	511c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ca4>  // b.any
   511c0:	b	4f37c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e5c>
   511c4:	mov	x0, #0xffffffffffffffff    	// #-1
   511c8:	ret
   511cc:	stp	x29, x30, [sp, #-64]!
   511d0:	mov	x29, sp
   511d4:	stp	x19, x20, [sp, #16]
   511d8:	mov	x20, x3
   511dc:	mov	x19, x4
   511e0:	stp	x21, x22, [sp, #32]
   511e4:	mov	x21, x1
   511e8:	mov	x22, x2
   511ec:	mov	x1, x3
   511f0:	mov	x2, x4
   511f4:	str	x23, [sp, #48]
   511f8:	mov	x23, x0
   511fc:	bl	50bc4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x96a4>
   51200:	cmn	x0, #0x78
   51204:	b.hi	5123c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d1c>  // b.pmore
   51208:	cmp	x19, x0
   5120c:	b.ls	51238 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d18>  // b.plast
   51210:	sub	x3, x19, x0
   51214:	add	x2, x20, x0
   51218:	mov	x4, x23
   5121c:	mov	x1, x22
   51220:	mov	x0, x21
   51224:	ldp	x19, x20, [sp, #16]
   51228:	ldp	x21, x22, [sp, #32]
   5122c:	ldr	x23, [sp, #48]
   51230:	ldp	x29, x30, [sp], #64
   51234:	b	4f37c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e5c>
   51238:	mov	x0, #0xffffffffffffffb8    	// #-72
   5123c:	ldp	x19, x20, [sp, #16]
   51240:	ldp	x21, x22, [sp, #32]
   51244:	ldr	x23, [sp, #48]
   51248:	ldp	x29, x30, [sp], #64
   5124c:	ret
   51250:	mov	x12, #0x4040                	// #16448
   51254:	sub	sp, sp, x12
   51258:	add	x5, sp, #0x38
   5125c:	stp	x29, x30, [sp]
   51260:	mov	x29, sp
   51264:	stp	x19, x20, [sp, #16]
   51268:	mov	x19, x0
   5126c:	mov	x20, x1
   51270:	mov	x0, x5
   51274:	mov	w1, #0x0                   	// #0
   51278:	stp	x21, x22, [sp, #32]
   5127c:	mov	x22, x3
   51280:	mov	x21, x2
   51284:	mov	x2, #0x4004                	// #16388
   51288:	bl	4700 <memset@plt>
   5128c:	mov	x5, x0
   51290:	mov	w0, #0xc                   	// #12
   51294:	movk	w0, #0xc00, lsl #16
   51298:	mov	x4, x22
   5129c:	mov	x3, x21
   512a0:	mov	x2, x20
   512a4:	mov	x1, x19
   512a8:	str	w0, [sp, #56]
   512ac:	mov	x0, x5
   512b0:	bl	511cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9cac>
   512b4:	mov	x12, #0x4040                	// #16448
   512b8:	ldp	x29, x30, [sp]
   512bc:	ldp	x19, x20, [sp, #16]
   512c0:	ldp	x21, x22, [sp, #32]
   512c4:	add	sp, sp, x12
   512c8:	ret
   512cc:	ldrb	w5, [x4, #1]
   512d0:	cmp	w5, #0x1
   512d4:	b.ne	512dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dbc>  // b.any
   512d8:	b	4f3e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7ec0>
   512dc:	mov	x0, #0xffffffffffffffff    	// #-1
   512e0:	ret
   512e4:	stp	x29, x30, [sp, #-64]!
   512e8:	mov	x29, sp
   512ec:	stp	x19, x20, [sp, #16]
   512f0:	mov	x20, x3
   512f4:	mov	x19, x4
   512f8:	stp	x21, x22, [sp, #32]
   512fc:	mov	x21, x1
   51300:	mov	x22, x2
   51304:	mov	x1, x3
   51308:	mov	x2, x4
   5130c:	str	x23, [sp, #48]
   51310:	mov	x23, x0
   51314:	bl	50bc4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x96a4>
   51318:	cmn	x0, #0x78
   5131c:	b.hi	51354 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9e34>  // b.pmore
   51320:	cmp	x19, x0
   51324:	b.ls	51350 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9e30>  // b.plast
   51328:	sub	x3, x19, x0
   5132c:	add	x2, x20, x0
   51330:	mov	x4, x23
   51334:	mov	x1, x22
   51338:	mov	x0, x21
   5133c:	ldp	x19, x20, [sp, #16]
   51340:	ldp	x21, x22, [sp, #32]
   51344:	ldr	x23, [sp, #48]
   51348:	ldp	x29, x30, [sp], #64
   5134c:	b	4f3e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7ec0>
   51350:	mov	x0, #0xffffffffffffffb8    	// #-72
   51354:	ldp	x19, x20, [sp, #16]
   51358:	ldp	x21, x22, [sp, #32]
   5135c:	ldr	x23, [sp, #48]
   51360:	ldp	x29, x30, [sp], #64
   51364:	ret
   51368:	mov	x12, #0x4040                	// #16448
   5136c:	sub	sp, sp, x12
   51370:	add	x5, sp, #0x38
   51374:	stp	x29, x30, [sp]
   51378:	mov	x29, sp
   5137c:	stp	x19, x20, [sp, #16]
   51380:	mov	x19, x0
   51384:	mov	x20, x1
   51388:	mov	x0, x5
   5138c:	mov	w1, #0x0                   	// #0
   51390:	stp	x21, x22, [sp, #32]
   51394:	mov	x22, x3
   51398:	mov	x21, x2
   5139c:	mov	x2, #0x4004                	// #16388
   513a0:	bl	4700 <memset@plt>
   513a4:	mov	x5, x0
   513a8:	mov	w0, #0xc                   	// #12
   513ac:	movk	w0, #0xc00, lsl #16
   513b0:	mov	x4, x22
   513b4:	mov	x3, x21
   513b8:	mov	x2, x20
   513bc:	mov	x1, x19
   513c0:	str	w0, [sp, #56]
   513c4:	mov	x0, x5
   513c8:	bl	512e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dc4>
   513cc:	mov	x12, #0x4040                	// #16448
   513d0:	ldp	x29, x30, [sp]
   513d4:	ldp	x19, x20, [sp, #16]
   513d8:	ldp	x21, x22, [sp, #32]
   513dc:	add	sp, sp, x12
   513e0:	ret
   513e4:	ldrb	w5, [x4, #1]
   513e8:	cbz	w5, 513f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ed0>
   513ec:	b	4f37c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e5c>
   513f0:	b	4edcc <ZDICT_addEntropyTablesFromBuffer@@Base+0x78ac>
   513f4:	ldrb	w5, [x4, #1]
   513f8:	cbz	w5, 51400 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ee0>
   513fc:	b	4f3e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7ec0>
   51400:	b	4ee34 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7914>
   51404:	lsl	x1, x1, #4
   51408:	mov	x2, #0x18                  	// #24
   5140c:	adrp	x3, 57000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfae0>
   51410:	add	x3, x3, #0x4a0
   51414:	add	x3, x3, #0x4e0
   51418:	udiv	x1, x1, x0
   5141c:	lsr	x0, x0, #8
   51420:	mov	w1, w1
   51424:	mul	x1, x1, x2
   51428:	add	x4, x3, x1
   5142c:	ldr	w1, [x3, x1]
   51430:	ldp	w5, w2, [x4, #8]
   51434:	ldr	w4, [x4, #4]
   51438:	madd	w2, w2, w0, w5
   5143c:	madd	w0, w4, w0, w1
   51440:	add	w2, w2, w2, lsr #3
   51444:	cmp	w0, w2
   51448:	cset	w0, hi  // hi = pmore
   5144c:	ret
   51450:	stp	x29, x30, [sp, #-32]!
   51454:	mov	x29, sp
   51458:	str	x19, [sp, #16]
   5145c:	cbz	x1, 514e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9fc8>
   51460:	mov	x19, x1
   51464:	mov	x6, x3
   51468:	cmp	x1, x3
   5146c:	b.cc	514f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9fd0>  // b.lo, b.ul, b.last
   51470:	mov	x7, x2
   51474:	b.ne	51494 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9f74>  // b.any
   51478:	mov	x2, x1
   5147c:	mov	x1, x7
   51480:	bl	4460 <memcpy@plt>
   51484:	mov	x0, x19
   51488:	ldr	x19, [sp, #16]
   5148c:	ldp	x29, x30, [sp], #32
   51490:	ret
   51494:	cmp	x3, #0x1
   51498:	b.ne	514ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x9f8c>  // b.any
   5149c:	mov	x2, x1
   514a0:	ldrb	w1, [x7]
   514a4:	bl	4700 <memset@plt>
   514a8:	b	51484 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9f64>
   514ac:	mov	x8, x0
   514b0:	mov	x1, x3
   514b4:	mov	x0, x19
   514b8:	bl	51404 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ee4>
   514bc:	mov	x3, x6
   514c0:	adrp	x1, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   514c4:	add	x1, x1, #0xcc0
   514c8:	mov	x2, x7
   514cc:	ldr	x4, [x1, w0, uxtw #3]
   514d0:	mov	x1, x19
   514d4:	ldr	x19, [sp, #16]
   514d8:	mov	x0, x8
   514dc:	ldp	x29, x30, [sp], #32
   514e0:	mov	x16, x4
   514e4:	br	x16
   514e8:	mov	x19, #0xffffffffffffffba    	// #-70
   514ec:	b	51484 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9f64>
   514f0:	mov	x19, #0xffffffffffffffec    	// #-20
   514f4:	b	51484 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9f64>
   514f8:	stp	x29, x30, [sp, #-32]!
   514fc:	mov	x29, sp
   51500:	str	x19, [sp, #16]
   51504:	cbz	x2, 5159c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa07c>
   51508:	mov	x19, x2
   5150c:	mov	x6, x4
   51510:	cmp	x2, x4
   51514:	b.cc	515a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa084>  // b.lo, b.ul, b.last
   51518:	mov	x7, x1
   5151c:	mov	x8, x3
   51520:	b.ne	51540 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa020>  // b.any
   51524:	mov	x1, x3
   51528:	mov	x0, x7
   5152c:	bl	4460 <memcpy@plt>
   51530:	mov	x0, x19
   51534:	ldr	x19, [sp, #16]
   51538:	ldp	x29, x30, [sp], #32
   5153c:	ret
   51540:	cmp	x4, #0x1
   51544:	b.ne	51558 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa038>  // b.any
   51548:	ldrb	w1, [x3]
   5154c:	mov	x0, x7
   51550:	bl	4700 <memset@plt>
   51554:	b	51530 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa010>
   51558:	mov	x9, x0
   5155c:	mov	x1, x4
   51560:	mov	x0, x2
   51564:	bl	51404 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ee4>
   51568:	mov	x4, x6
   5156c:	mov	x3, x8
   51570:	mov	x2, x19
   51574:	mov	x1, x7
   51578:	cbz	w0, 5158c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa06c>
   5157c:	ldr	x19, [sp, #16]
   51580:	mov	x0, x9
   51584:	ldp	x29, x30, [sp], #32
   51588:	b	512e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dc4>
   5158c:	ldr	x19, [sp, #16]
   51590:	mov	x0, x9
   51594:	ldp	x29, x30, [sp], #32
   51598:	b	50ac4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x95a4>
   5159c:	mov	x19, #0xffffffffffffffba    	// #-70
   515a0:	b	51530 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa010>
   515a4:	mov	x19, #0xffffffffffffffec    	// #-20
   515a8:	b	51530 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa010>
   515ac:	cbz	x2, 51610 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa0f0>
   515b0:	cmp	x2, x4
   515b4:	mov	x6, x2
   515b8:	mov	x7, x4
   515bc:	ccmp	x4, #0x1, #0x0, hi  // hi = pmore
   515c0:	b.ls	51618 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa0f8>  // b.plast
   515c4:	mov	x9, x1
   515c8:	mov	x8, x0
   515cc:	mov	x10, x3
   515d0:	stp	x29, x30, [sp, #-16]!
   515d4:	mov	x1, x4
   515d8:	mov	x29, sp
   515dc:	mov	x0, x2
   515e0:	bl	51404 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ee4>
   515e4:	mov	x4, x7
   515e8:	mov	x3, x10
   515ec:	mov	x2, x6
   515f0:	mov	x1, x9
   515f4:	cbz	w0, 51604 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa0e4>
   515f8:	ldp	x29, x30, [sp], #16
   515fc:	mov	x0, x8
   51600:	b	512e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dc4>
   51604:	ldp	x29, x30, [sp], #16
   51608:	mov	x0, x8
   5160c:	b	50ac4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x95a4>
   51610:	mov	x0, #0xffffffffffffffba    	// #-70
   51614:	ret
   51618:	mov	x0, #0xffffffffffffffec    	// #-20
   5161c:	ret
   51620:	stp	x29, x30, [sp, #-48]!
   51624:	cmp	x2, #0x2
   51628:	mov	x29, sp
   5162c:	stp	x19, x20, [sp, #16]
   51630:	stp	x21, x22, [sp, #32]
   51634:	b.hi	51650 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa130>  // b.pmore
   51638:	mov	x20, #0xffffffffffffffec    	// #-20
   5163c:	mov	x0, x20
   51640:	ldp	x19, x20, [sp, #16]
   51644:	ldp	x21, x22, [sp, #32]
   51648:	ldp	x29, x30, [sp], #48
   5164c:	ret
   51650:	ldrb	w5, [x1]
   51654:	mov	x21, x0
   51658:	mov	x0, x1
   5165c:	lsr	w1, w5, #6
   51660:	ubfx	x6, x5, #4, #2
   51664:	cmp	w1, #0x2
   51668:	b.eq	517f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa2d8>  // b.none
   5166c:	cmp	w1, #0x3
   51670:	b.eq	51890 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa370>  // b.none
   51674:	cmp	w1, #0x1
   51678:	b.eq	51780 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa260>  // b.none
   5167c:	cmp	x2, #0x4
   51680:	b.ls	51638 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa118>  // b.plast
   51684:	ldrb	w1, [x0, #1]
   51688:	cmp	w6, #0x2
   5168c:	ldrb	w3, [x0, #2]
   51690:	b.eq	51714 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa1f4>  // b.none
   51694:	cmp	w6, #0x3
   51698:	b.eq	51740 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa220>  // b.none
   5169c:	ubfiz	w19, w5, #6, #4
   516a0:	and	w7, w5, #0x10
   516a4:	add	w19, w19, w1, lsr #2
   516a8:	ubfiz	w1, w1, #8, #2
   516ac:	add	w4, w1, w3
   516b0:	and	x7, x7, #0xff
   516b4:	sxtw	x19, w19
   516b8:	mov	x6, #0x3                   	// #3
   516bc:	sxtw	x4, w4
   516c0:	add	x20, x6, x4
   516c4:	cmp	x20, x2
   516c8:	b.hi	51638 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa118>  // b.pmore
   516cc:	mov	x8, #0x5500                	// #21760
   516d0:	add	x22, x21, x8
   516d4:	add	x3, x0, x6
   516d8:	mov	x2, x19
   516dc:	mov	x6, #0x140c                	// #5132
   516e0:	mov	x1, x22
   516e4:	add	x0, x21, x6
   516e8:	cbz	x7, 51778 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa258>
   516ec:	bl	509b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9490>
   516f0:	cmn	x0, #0x78
   516f4:	b.hi	51638 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa118>  // b.pmore
   516f8:	add	x21, x21, #0x4, lsl #12
   516fc:	mov	w0, #0x1                   	// #1
   51700:	str	x22, [x21, #5336]
   51704:	str	x19, [x21, #5368]
   51708:	str	w0, [x21, #5224]
   5170c:	str	xzr, [x22, x19]
   51710:	b	5163c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa11c>
   51714:	ubfiz	w5, w5, #10, #4
   51718:	ubfiz	w4, w3, #8, #6
   5171c:	add	w5, w5, w1, lsl #2
   51720:	mov	x6, #0x4                   	// #4
   51724:	add	w19, w5, w3, lsr #6
   51728:	ldrb	w3, [x0, #3]
   5172c:	add	w4, w4, w3
   51730:	sxtw	x19, w19
   51734:	sxtw	x4, w4
   51738:	mov	x7, #0x0                   	// #0
   5173c:	b	516c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa1a0>
   51740:	ubfiz	w5, w5, #14, #4
   51744:	ldrb	w4, [x0, #3]
   51748:	add	w5, w5, w1, lsl #6
   5174c:	ldrb	w1, [x0, #4]
   51750:	add	w5, w5, w3, lsr #2
   51754:	cmp	w5, #0x20, lsl #12
   51758:	sxtw	x19, w5
   5175c:	b.gt	51638 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa118>
   51760:	ubfiz	w3, w3, #16, #2
   51764:	mov	x6, #0x5                   	// #5
   51768:	add	w4, w3, w4, lsl #8
   5176c:	add	w4, w4, w1
   51770:	sxtw	x4, w4
   51774:	b	51738 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa218>
   51778:	bl	515ac <ZDICT_addEntropyTablesFromBuffer@@Base+0xa08c>
   5177c:	b	516f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa1d0>
   51780:	cmp	w6, #0x1
   51784:	b.ne	51638 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa118>  // b.any
   51788:	add	x1, x21, #0x4, lsl #12
   5178c:	ldr	w1, [x1, #5224]
   51790:	cbz	w1, 51918 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa3f8>
   51794:	ldrb	w15, [x0, #1]
   51798:	ldrb	w1, [x0, #2]
   5179c:	ubfiz	w3, w15, #8, #2
   517a0:	add	w3, w3, w1
   517a4:	sxtw	x3, w3
   517a8:	add	x20, x3, #0x3
   517ac:	cmp	x20, x2
   517b0:	b.hi	51638 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa118>  // b.pmore
   517b4:	ubfiz	w5, w5, #6, #4
   517b8:	mov	x4, #0x5500                	// #21760
   517bc:	add	w5, w5, w15, lsr #2
   517c0:	add	x18, x21, x4
   517c4:	add	x2, x0, #0x3
   517c8:	mov	x0, x18
   517cc:	sxtw	x15, w5
   517d0:	mov	x5, #0x140c                	// #5132
   517d4:	mov	x1, x15
   517d8:	add	x4, x21, x5
   517dc:	bl	511b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9c94>
   517e0:	cmn	x0, #0x78
   517e4:	b.hi	51638 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa118>  // b.pmore
   517e8:	str	x18, [x21, #21720]
   517ec:	str	x15, [x21, #21752]
   517f0:	str	xzr, [x18, x15]
   517f4:	b	5163c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa11c>
   517f8:	cmp	w6, #0x2
   517fc:	b.eq	51854 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa334>  // b.none
   51800:	cmp	w6, #0x3
   51804:	b.eq	51868 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa348>  // b.none
   51808:	and	x19, x5, #0x1f
   5180c:	mov	w6, #0x1                   	// #1
   51810:	mov	w6, w6
   51814:	add	x20, x6, x19
   51818:	add	x1, x20, #0x8
   5181c:	cmp	x1, x2
   51820:	b.ls	51880 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa360>  // b.plast
   51824:	cmp	x20, x2
   51828:	b.hi	51638 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa118>  // b.pmore
   5182c:	mov	x2, #0x5500                	// #21760
   51830:	add	x3, x21, x2
   51834:	add	x1, x0, x6
   51838:	mov	x2, x19
   5183c:	mov	x0, x3
   51840:	bl	4460 <memcpy@plt>
   51844:	str	x0, [x21, #21720]
   51848:	str	x19, [x21, #21752]
   5184c:	str	xzr, [x0, x19]
   51850:	b	5163c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa11c>
   51854:	ldrb	w1, [x0, #1]
   51858:	ubfiz	w5, w5, #8, #4
   5185c:	add	w5, w5, w1
   51860:	sxtw	x19, w5
   51864:	b	51810 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa2f0>
   51868:	ldrb	w19, [x0, #1]
   5186c:	ubfiz	w5, w5, #16, #4
   51870:	add	w5, w5, w19, lsl #8
   51874:	ldrb	w19, [x0, #2]
   51878:	add	w5, w5, w19
   5187c:	b	51860 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa340>
   51880:	add	x6, x0, x6
   51884:	str	x6, [x21, #21720]
   51888:	str	x19, [x21, #21752]
   5188c:	b	5163c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa11c>
   51890:	cmp	w6, #0x2
   51894:	b.eq	518d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa3b4>  // b.none
   51898:	cmp	w6, #0x3
   5189c:	b.eq	518ec <ZDICT_addEntropyTablesFromBuffer@@Base+0xa3cc>  // b.none
   518a0:	and	x19, x5, #0x1f
   518a4:	mov	w20, #0x1                   	// #1
   518a8:	mov	x1, #0x5500                	// #21760
   518ac:	add	x3, x21, x1
   518b0:	mov	w1, w20
   518b4:	add	x2, x19, #0x8
   518b8:	add	w20, w20, #0x1
   518bc:	ldrb	w1, [x0, x1]
   518c0:	mov	x0, x3
   518c4:	bl	4700 <memset@plt>
   518c8:	str	x0, [x21, #21720]
   518cc:	str	x19, [x21, #21752]
   518d0:	b	5163c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa11c>
   518d4:	ldrb	w19, [x0, #1]
   518d8:	ubfiz	w5, w5, #8, #4
   518dc:	add	w5, w5, w19
   518e0:	sxtw	x19, w5
   518e4:	mov	w20, w6
   518e8:	b	518a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa388>
   518ec:	ldrb	w1, [x0, #1]
   518f0:	ubfiz	w5, w5, #16, #4
   518f4:	cmp	x2, #0x3
   518f8:	add	w5, w5, w1, lsl #8
   518fc:	ldrb	w1, [x0, #2]
   51900:	add	w5, w5, w1
   51904:	sxtw	x19, w5
   51908:	b.eq	51638 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa118>  // b.none
   5190c:	cmp	w5, #0x20, lsl #12
   51910:	b.gt	51638 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa118>
   51914:	b	518e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa3c4>
   51918:	mov	x20, #0xffffffffffffffe2    	// #-30
   5191c:	b	5163c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa11c>
   51920:	stp	x29, x30, [sp, #-64]!
   51924:	mov	x29, sp
   51928:	stp	x19, x20, [sp, #16]
   5192c:	stp	x21, x22, [sp, #32]
   51930:	mov	x22, x1
   51934:	mov	x1, #0x1ffff               	// #131071
   51938:	str	x23, [sp, #48]
   5193c:	cmp	x4, x1
   51940:	b.hi	51990 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa470>  // b.pmore
   51944:	mov	x21, x0
   51948:	mov	x23, x2
   5194c:	mov	x20, x3
   51950:	mov	x19, x4
   51954:	mov	x2, x4
   51958:	mov	x1, x3
   5195c:	bl	51620 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa100>
   51960:	cmn	x0, #0x78
   51964:	b.hi	51994 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa474>  // b.pmore
   51968:	sub	x4, x19, x0
   5196c:	add	x3, x20, x0
   51970:	mov	x2, x23
   51974:	mov	x1, x22
   51978:	mov	x0, x21
   5197c:	ldp	x19, x20, [sp, #16]
   51980:	ldp	x21, x22, [sp, #32]
   51984:	ldr	x23, [sp, #48]
   51988:	ldp	x29, x30, [sp], #64
   5198c:	b	4fcb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8790>
   51990:	mov	x0, #0xffffffffffffffb8    	// #-72
   51994:	ldp	x19, x20, [sp, #16]
   51998:	ldp	x21, x22, [sp, #32]
   5199c:	ldr	x23, [sp, #48]
   519a0:	ldp	x29, x30, [sp], #64
   519a4:	ret
   519a8:	stp	x29, x30, [sp, #-32]!
   519ac:	mov	x29, sp
   519b0:	str	x19, [sp, #16]
   519b4:	cbz	x2, 51a4c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa52c>
   519b8:	mov	x19, x2
   519bc:	mov	x6, x4
   519c0:	cmp	x2, x4
   519c4:	b.cc	51a54 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa534>  // b.lo, b.ul, b.last
   519c8:	mov	x7, x1
   519cc:	mov	x8, x3
   519d0:	b.ne	519f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa4d0>  // b.any
   519d4:	mov	x1, x3
   519d8:	mov	x0, x7
   519dc:	bl	4460 <memcpy@plt>
   519e0:	mov	x0, x19
   519e4:	ldr	x19, [sp, #16]
   519e8:	ldp	x29, x30, [sp], #32
   519ec:	ret
   519f0:	cmp	x4, #0x1
   519f4:	b.ne	51a08 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa4e8>  // b.any
   519f8:	ldrb	w1, [x3]
   519fc:	mov	x0, x7
   51a00:	bl	4700 <memset@plt>
   51a04:	b	519e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa4c0>
   51a08:	mov	x9, x0
   51a0c:	mov	x1, x4
   51a10:	mov	x0, x2
   51a14:	bl	51404 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ee4>
   51a18:	mov	x4, x6
   51a1c:	mov	x3, x8
   51a20:	mov	x2, x19
   51a24:	mov	x1, x7
   51a28:	cbz	w0, 51a3c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa51c>
   51a2c:	ldr	x19, [sp, #16]
   51a30:	mov	x0, x9
   51a34:	ldp	x29, x30, [sp], #32
   51a38:	b	511cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9cac>
   51a3c:	ldr	x19, [sp, #16]
   51a40:	mov	x0, x9
   51a44:	ldp	x29, x30, [sp], #32
   51a48:	b	509b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9490>
   51a4c:	mov	x19, #0xffffffffffffffba    	// #-70
   51a50:	b	519e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa4c0>
   51a54:	mov	x19, #0xffffffffffffffec    	// #-20
   51a58:	b	519e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa4c0>
   51a5c:	cmn	x0, #0x78
   51a60:	cset	w0, hi  // hi = pmore
   51a64:	ret
   51a68:	b	4eb14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x75f4>
   51a6c:	cmn	x0, #0x78
   51a70:	cset	w0, hi  // hi = pmore
   51a74:	ret
   51a78:	b	4eb14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x75f4>
   51a7c:	mov	x0, #0x5520                	// #21792
   51a80:	movk	x0, #0x2, lsl #16
   51a84:	ret
   51a88:	mov	x0, #0x5520                	// #21792
   51a8c:	movk	x0, #0x2, lsl #16
   51a90:	ret
   51a94:	mov	w1, #0xc                   	// #12
   51a98:	mov	x2, #0x5                   	// #5
   51a9c:	movk	w1, #0xc00, lsl #16
   51aa0:	str	w1, [x0, #5132]
   51aa4:	add	x1, x0, #0x4, lsl #12
   51aa8:	str	wzr, [x1, #5220]
   51aac:	str	xzr, [x0, #21608]
   51ab0:	str	wzr, [x1, #5328]
   51ab4:	str	x2, [x0, #21552]
   51ab8:	mov	x2, #0x1                   	// #1
   51abc:	movk	x2, #0x4, lsl #32
   51ac0:	str	xzr, [x0, #21520]
   51ac4:	str	xzr, [x0, #21528]
   51ac8:	str	xzr, [x0, #21536]
   51acc:	str	xzr, [x0, #21544]
   51ad0:	str	x2, [x0, #21560]
   51ad4:	mov	w0, #0x8                   	// #8
   51ad8:	str	w0, [x1, #5184]
   51adc:	mov	x0, #0x0                   	// #0
   51ae0:	ret
   51ae4:	stp	x29, x30, [sp, #-32]!
   51ae8:	mov	x29, sp
   51aec:	str	x19, [sp, #16]
   51af0:	mov	x19, x0
   51af4:	ldr	x0, [x0]
   51af8:	cbnz	x0, 51b1c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa5fc>
   51afc:	ldr	x0, [x19, #8]
   51b00:	cbnz	x0, 51b1c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa5fc>
   51b04:	adrp	x0, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   51b08:	add	x0, x0, #0xcc0
   51b0c:	ldp	x2, x3, [x0, #16]
   51b10:	stp	x2, x3, [x19]
   51b14:	ldr	x0, [x0, #32]
   51b18:	str	x0, [x19, #16]
   51b1c:	ldr	x2, [x19]
   51b20:	cbz	x2, 51b70 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa650>
   51b24:	ldr	x0, [x19, #8]
   51b28:	cbz	x0, 51b70 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa650>
   51b2c:	ldr	x0, [x19, #16]
   51b30:	mov	x1, #0x5520                	// #21792
   51b34:	movk	x1, #0x2, lsl #16
   51b38:	blr	x2
   51b3c:	mov	x3, x0
   51b40:	cbz	x0, 51b60 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa640>
   51b44:	mov	x1, #0x54e0                	// #21728
   51b48:	add	x1, x0, x1
   51b4c:	ldp	x4, x5, [x19]
   51b50:	ldr	x2, [x19, #16]
   51b54:	stp	x4, x5, [x1]
   51b58:	str	x2, [x0, #21744]
   51b5c:	bl	51a94 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa574>
   51b60:	mov	x0, x3
   51b64:	ldr	x19, [sp, #16]
   51b68:	ldp	x29, x30, [sp], #32
   51b6c:	ret
   51b70:	mov	x3, #0x0                   	// #0
   51b74:	b	51b60 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa640>
   51b78:	adrp	x0, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   51b7c:	add	x0, x0, #0xcc0
   51b80:	stp	x29, x30, [sp, #-48]!
   51b84:	mov	x29, sp
   51b88:	ldp	x2, x3, [x0, #16]
   51b8c:	stp	x2, x3, [sp, #16]
   51b90:	ldr	x0, [x0, #32]
   51b94:	str	x0, [sp, #32]
   51b98:	add	x0, sp, #0x10
   51b9c:	bl	51ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa5c4>
   51ba0:	ldp	x29, x30, [sp], #48
   51ba4:	ret
   51ba8:	cbz	x0, 51bd0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa6b0>
   51bac:	stp	x29, x30, [sp, #-16]!
   51bb0:	mov	x1, x0
   51bb4:	mov	x29, sp
   51bb8:	ldr	x2, [x0, #21736]
   51bbc:	ldr	x0, [x0, #21744]
   51bc0:	blr	x2
   51bc4:	mov	x0, #0x0                   	// #0
   51bc8:	ldp	x29, x30, [sp], #16
   51bcc:	ret
   51bd0:	mov	x0, #0x0                   	// #0
   51bd4:	ret
   51bd8:	mov	x2, #0x5506                	// #21766
   51bdc:	b	4460 <memcpy@plt>
   51be0:	cmp	x2, #0x4
   51be4:	b.ls	51d5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa83c>  // b.plast
   51be8:	mov	x4, x1
   51bec:	stp	xzr, xzr, [x0]
   51bf0:	mov	x5, x0
   51bf4:	str	xzr, [x0, #16]
   51bf8:	mov	w1, #0xb527                	// #46375
   51bfc:	movk	w1, #0xfd2f, lsl #16
   51c00:	mov	x6, x2
   51c04:	ldr	w0, [x4]
   51c08:	cmp	w0, w1
   51c0c:	b.eq	51c3c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa71c>  // b.none
   51c10:	and	w0, w0, #0xfffffff0
   51c14:	mov	w1, #0x2a50                	// #10832
   51c18:	movk	w1, #0x184d, lsl #16
   51c1c:	cmp	w0, w1
   51c20:	b.ne	51d64 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa844>  // b.any
   51c24:	cmp	x2, #0x7
   51c28:	b.ls	51d6c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa84c>  // b.plast
   51c2c:	ldr	w0, [x4, #4]
   51c30:	str	x0, [x5]
   51c34:	mov	x0, #0x0                   	// #0
   51c38:	ret
   51c3c:	stp	x29, x30, [sp, #-16]!
   51c40:	mov	x1, x2
   51c44:	mov	x0, x4
   51c48:	mov	x29, sp
   51c4c:	bl	4ea2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x750c>
   51c50:	cmp	x6, x0
   51c54:	b.cc	51d04 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa7e4>  // b.lo, b.ul, b.last
   51c58:	ldrb	w3, [x4, #4]
   51c5c:	ubfx	x7, x3, #5, #1
   51c60:	tbnz	w3, #3, 51d74 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa854>
   51c64:	cbnz	w7, 51d0c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa7ec>
   51c68:	ldrb	w2, [x4, #5]
   51c6c:	lsr	w0, w2, #3
   51c70:	add	w0, w0, #0xa
   51c74:	cmp	w0, #0x1b
   51c78:	b.gt	51d74 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa854>
   51c7c:	mov	w1, #0x1                   	// #1
   51c80:	and	w2, w2, #0x7
   51c84:	lsl	w1, w1, w0
   51c88:	lsr	w0, w1, #3
   51c8c:	madd	w0, w0, w2, w1
   51c90:	mov	x2, #0x6                   	// #6
   51c94:	and	w1, w3, #0x3
   51c98:	cmp	w1, #0x2
   51c9c:	b.eq	51d18 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa7f8>  // b.none
   51ca0:	cmp	w1, #0x3
   51ca4:	b.eq	51d24 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa804>  // b.none
   51ca8:	cmp	w1, #0x1
   51cac:	b.ne	51d30 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa810>  // b.any
   51cb0:	ldrb	w6, [x4, x2]
   51cb4:	add	x2, x2, #0x1
   51cb8:	lsr	w1, w3, #6
   51cbc:	cmp	w1, #0x2
   51cc0:	b.eq	51d44 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa824>  // b.none
   51cc4:	cmp	w1, #0x3
   51cc8:	b.eq	51d4c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa82c>  // b.none
   51ccc:	cmp	w1, #0x1
   51cd0:	b.eq	51d38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa818>  // b.none
   51cd4:	cbz	w7, 51d54 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa834>
   51cd8:	ldrb	w1, [x4, x2]
   51cdc:	cmp	w0, #0x0
   51ce0:	mov	w2, #0x8000000             	// #134217728
   51ce4:	csel	w0, w0, w1, ne  // ne = any
   51ce8:	cmp	w0, w2
   51cec:	b.hi	51d74 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa854>  // b.pmore
   51cf0:	ubfx	x3, x3, #2, #1
   51cf4:	str	x1, [x5]
   51cf8:	stp	w0, w6, [x5, #8]
   51cfc:	mov	x0, #0x0                   	// #0
   51d00:	str	w3, [x5, #16]
   51d04:	ldp	x29, x30, [sp], #16
   51d08:	ret
   51d0c:	mov	w0, #0x0                   	// #0
   51d10:	mov	x2, #0x5                   	// #5
   51d14:	b	51c94 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa774>
   51d18:	ldrh	w6, [x4, x2]
   51d1c:	add	x2, x2, #0x2
   51d20:	b	51cb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa798>
   51d24:	ldr	w6, [x4, x2]
   51d28:	add	x2, x2, #0x4
   51d2c:	b	51cb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa798>
   51d30:	mov	w6, #0x0                   	// #0
   51d34:	b	51cb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa798>
   51d38:	ldrh	w1, [x4, x2]
   51d3c:	add	x1, x1, #0x100
   51d40:	b	51cdc <ZDICT_addEntropyTablesFromBuffer@@Base+0xa7bc>
   51d44:	ldr	w1, [x4, x2]
   51d48:	b	51cdc <ZDICT_addEntropyTablesFromBuffer@@Base+0xa7bc>
   51d4c:	ldr	x1, [x4, x2]
   51d50:	b	51cdc <ZDICT_addEntropyTablesFromBuffer@@Base+0xa7bc>
   51d54:	mov	x1, #0x0                   	// #0
   51d58:	b	51cdc <ZDICT_addEntropyTablesFromBuffer@@Base+0xa7bc>
   51d5c:	mov	x0, #0x5                   	// #5
   51d60:	ret
   51d64:	mov	x0, #0xfffffffffffffff6    	// #-10
   51d68:	ret
   51d6c:	mov	x0, #0x8                   	// #8
   51d70:	ret
   51d74:	mov	x0, #0xfffffffffffffff2    	// #-14
   51d78:	b	51d04 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa7e4>
   51d7c:	stp	x29, x30, [sp, #-32]!
   51d80:	mov	x8, x0
   51d84:	mov	x3, #0x5448                	// #21576
   51d88:	mov	x29, sp
   51d8c:	add	x0, x0, x3
   51d90:	str	x19, [sp, #16]
   51d94:	bl	51be0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa6c0>
   51d98:	mov	x19, x0
   51d9c:	add	x0, x8, #0x4, lsl #12
   51da0:	ldr	w1, [x0, #5204]
   51da4:	cbz	w1, 51db4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa894>
   51da8:	ldr	w2, [x0, #5328]
   51dac:	cmp	w1, w2
   51db0:	b.ne	51ddc <ZDICT_addEntropyTablesFromBuffer@@Base+0xa8bc>  // b.any
   51db4:	ldr	w0, [x0, #5208]
   51db8:	cbz	w0, 51dcc <ZDICT_addEntropyTablesFromBuffer@@Base+0xa8ac>
   51dbc:	mov	x0, #0x5470                	// #21616
   51dc0:	mov	x1, #0x0                   	// #0
   51dc4:	add	x0, x8, x0
   51dc8:	bl	63ec <ZSTD_initDStream_usingDDict@plt+0x186c>
   51dcc:	mov	x0, x19
   51dd0:	ldr	x19, [sp, #16]
   51dd4:	ldp	x29, x30, [sp], #32
   51dd8:	ret
   51ddc:	mov	x19, #0xffffffffffffffe0    	// #-32
   51de0:	b	51dcc <ZDICT_addEntropyTablesFromBuffer@@Base+0xa8ac>
   51de4:	stp	x29, x30, [sp, #-144]!
   51de8:	cmp	x4, #0x7
   51dec:	mov	x29, sp
   51df0:	stp	x19, x20, [sp, #16]
   51df4:	stp	x21, x22, [sp, #32]
   51df8:	stp	x23, x24, [sp, #48]
   51dfc:	stp	x25, x26, [sp, #64]
   51e00:	stp	x27, x28, [sp, #80]
   51e04:	b.ls	51fc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaaa0>  // b.plast
   51e08:	mov	x21, x0
   51e0c:	mov	x24, x1
   51e10:	mov	x19, x2
   51e14:	mov	x22, x3
   51e18:	mov	x0, x3
   51e1c:	mov	x1, #0x5                   	// #5
   51e20:	bl	4ea2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x750c>
   51e24:	mov	x26, x0
   51e28:	cmn	x0, #0x78
   51e2c:	b.hi	51f90 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa70>  // b.pmore
   51e30:	add	x0, x0, #0x3
   51e34:	mov	x23, x4
   51e38:	cmp	x0, x4
   51e3c:	b.hi	51fc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaaa0>  // b.pmore
   51e40:	mov	x2, x26
   51e44:	mov	x1, x22
   51e48:	mov	x0, x21
   51e4c:	bl	51d7c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa85c>
   51e50:	cbnz	x0, 51fc8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaaa8>
   51e54:	add	x0, sp, #0x88
   51e58:	add	x6, x22, x26
   51e5c:	sub	x20, x23, x26
   51e60:	add	x19, x24, x19
   51e64:	adrp	x26, 57000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfae0>
   51e68:	mov	x27, x24
   51e6c:	str	x0, [sp, #104]
   51e70:	add	x0, x26, #0x480
   51e74:	str	x0, [sp, #112]
   51e78:	mov	x0, #0x5470                	// #21616
   51e7c:	add	x0, x21, x0
   51e80:	str	x0, [sp, #120]
   51e84:	ldr	x2, [sp, #104]
   51e88:	add	x1, x22, x23
   51e8c:	sub	x1, x1, x6
   51e90:	mov	x0, x6
   51e94:	bl	4ea88 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7568>
   51e98:	mov	x28, x0
   51e9c:	cmn	x0, #0x78
   51ea0:	b.hi	51f8c <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa6c>  // b.pmore
   51ea4:	sub	x20, x20, #0x3
   51ea8:	add	x25, x6, #0x3
   51eac:	cmp	x0, x20
   51eb0:	b.hi	51fc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaaa0>  // b.pmore
   51eb4:	ldr	w0, [sp, #136]
   51eb8:	cmp	w0, #0x3
   51ebc:	b.hi	51fb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa90>  // b.pmore
   51ec0:	ldr	x1, [sp, #112]
   51ec4:	ldrb	w0, [x1, w0, uxtw]
   51ec8:	adr	x1, 51ed4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa9b4>
   51ecc:	add	x0, x1, w0, sxtb #2
   51ed0:	br	x0
   51ed4:	mov	x4, x28
   51ed8:	mov	x3, x25
   51edc:	sub	x2, x19, x27
   51ee0:	mov	x1, x27
   51ee4:	mov	x0, x21
   51ee8:	bl	51920 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa400>
   51eec:	mov	x26, x0
   51ef0:	ldr	w0, [sp, #136]
   51ef4:	cmp	w0, #0x3
   51ef8:	b.eq	51fb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa98>  // b.none
   51efc:	cmn	x26, #0x78
   51f00:	b.hi	51f90 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa70>  // b.pmore
   51f04:	add	x0, x21, #0x4, lsl #12
   51f08:	ldr	w0, [x0, #5208]
   51f0c:	cbz	w0, 51f20 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa00>
   51f10:	ldr	x0, [sp, #120]
   51f14:	mov	x2, x26
   51f18:	mov	x1, x27
   51f1c:	bl	6728 <ZSTD_initDStream_usingDDict@plt+0x1ba8>
   51f20:	add	x27, x27, x26
   51f24:	add	x6, x25, x28
   51f28:	sub	x20, x20, x28
   51f2c:	b	51e84 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa964>
   51f30:	sub	x0, x19, x27
   51f34:	cmp	x0, x28
   51f38:	b.cc	51f84 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa64>  // b.lo, b.ul, b.last
   51f3c:	mov	x2, x28
   51f40:	mov	x1, x25
   51f44:	mov	x0, x27
   51f48:	mov	x26, x28
   51f4c:	bl	4460 <memcpy@plt>
   51f50:	b	51ef0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa9d0>
   51f54:	ldr	w26, [sp, #140]
   51f58:	sub	x0, x19, x27
   51f5c:	cmp	x0, x26
   51f60:	b.cc	51f84 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa64>  // b.lo, b.ul, b.last
   51f64:	ldrb	w1, [x6, #3]
   51f68:	mov	x2, x26
   51f6c:	mov	x0, x27
   51f70:	bl	4700 <memset@plt>
   51f74:	b	51ef0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa9d0>
   51f78:	cbnz	x20, 51fc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaaa0>
   51f7c:	mov	x26, #0x0                   	// #0
   51f80:	b	51ef0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa9d0>
   51f84:	mov	x26, #0xffffffffffffffba    	// #-70
   51f88:	b	51ef0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa9d0>
   51f8c:	mov	x26, x0
   51f90:	mov	x0, x26
   51f94:	ldp	x19, x20, [sp, #16]
   51f98:	ldp	x21, x22, [sp, #32]
   51f9c:	ldp	x23, x24, [sp, #48]
   51fa0:	ldp	x25, x26, [sp, #64]
   51fa4:	ldp	x27, x28, [sp, #80]
   51fa8:	ldp	x29, x30, [sp], #144
   51fac:	ret
   51fb0:	mov	x26, #0xffffffffffffffff    	// #-1
   51fb4:	b	51f90 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa70>
   51fb8:	sub	x26, x27, x24
   51fbc:	b	51f90 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa70>
   51fc0:	mov	x26, #0xffffffffffffffb8    	// #-72
   51fc4:	b	51f90 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa70>
   51fc8:	mov	x26, #0xffffffffffffffec    	// #-20
   51fcc:	b	51f90 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa70>
   51fd0:	stp	x29, x30, [sp, #-48]!
   51fd4:	mov	x2, x1
   51fd8:	mov	x1, x0
   51fdc:	mov	x29, sp
   51fe0:	add	x0, sp, #0x18
   51fe4:	bl	51be0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa6c0>
   51fe8:	cmp	x0, #0x0
   51fec:	ldr	x0, [sp, #24]
   51ff0:	ldp	x29, x30, [sp], #48
   51ff4:	csel	x0, x0, xzr, eq  // eq = none
   51ff8:	ret
   51ffc:	stp	x29, x30, [sp, #-64]!
   52000:	mov	x29, sp
   52004:	stp	x19, x20, [sp, #16]
   52008:	mov	x19, x1
   5200c:	stp	x21, x22, [sp, #32]
   52010:	mov	x21, x0
   52014:	mov	x22, x3
   52018:	str	x23, [sp, #48]
   5201c:	mov	x23, x2
   52020:	bl	4eae8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x75c8>
   52024:	mov	x0, #0x1ffff               	// #131071
   52028:	cmp	x4, x0
   5202c:	b.hi	52080 <ZDICT_addEntropyTablesFromBuffer@@Base+0xab60>  // b.pmore
   52030:	mov	x20, x4
   52034:	mov	x2, x4
   52038:	mov	x1, x22
   5203c:	mov	x0, x21
   52040:	bl	51620 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa100>
   52044:	cmn	x0, #0x78
   52048:	b.hi	52064 <ZDICT_addEntropyTablesFromBuffer@@Base+0xab44>  // b.pmore
   5204c:	sub	x4, x20, x0
   52050:	add	x3, x22, x0
   52054:	mov	x2, x23
   52058:	mov	x1, x19
   5205c:	mov	x0, x21
   52060:	bl	4fcb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8790>
   52064:	add	x19, x19, x0
   52068:	ldr	x23, [sp, #48]
   5206c:	str	x19, [x21, #21520]
   52070:	ldp	x19, x20, [sp, #16]
   52074:	ldp	x21, x22, [sp, #32]
   52078:	ldp	x29, x30, [sp], #64
   5207c:	ret
   52080:	mov	x0, #0xffffffffffffffb8    	// #-72
   52084:	b	52064 <ZDICT_addEntropyTablesFromBuffer@@Base+0xab44>
   52088:	mov	x6, x0
   5208c:	mov	x5, x2
   52090:	stp	x29, x30, [sp, #-16]!
   52094:	mov	x29, sp
   52098:	bl	4eae8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x75c8>
   5209c:	add	x4, x1, x5
   520a0:	ldp	x29, x30, [sp], #16
   520a4:	mov	x0, x5
   520a8:	str	x4, [x6, #21520]
   520ac:	ret
   520b0:	mov	x7, x2
   520b4:	mov	x6, x3
   520b8:	cmp	x1, #0x7
   520bc:	b.hi	520d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xabb4>  // b.pmore
   520c0:	mov	x0, #0xffffffffffffffb8    	// #-72
   520c4:	str	x0, [x2]
   520c8:	mov	x0, #0xfffffffffffffffe    	// #-2
   520cc:	str	x0, [x3]
   520d0:	ret
   520d4:	mov	x10, x0
   520d8:	mov	x5, x1
   520dc:	stp	x29, x30, [sp, #-32]!
   520e0:	mov	x29, sp
   520e4:	bl	4ea2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x750c>
   520e8:	cmn	x0, #0x78
   520ec:	b.ls	52104 <ZDICT_addEntropyTablesFromBuffer@@Base+0xabe4>  // b.plast
   520f0:	str	x0, [x7]
   520f4:	mov	x0, #0xfffffffffffffffe    	// #-2
   520f8:	str	x0, [x6]
   520fc:	ldp	x29, x30, [sp], #32
   52100:	ret
   52104:	ldr	w2, [x10]
   52108:	mov	w1, #0xb527                	// #46375
   5210c:	movk	w1, #0xfd2f, lsl #16
   52110:	cmp	w2, w1
   52114:	b.eq	52120 <ZDICT_addEntropyTablesFromBuffer@@Base+0xac00>  // b.none
   52118:	mov	x0, #0xfffffffffffffff6    	// #-10
   5211c:	b	520f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xabd0>
   52120:	add	x1, x0, #0x3
   52124:	cmp	x1, x5
   52128:	b.hi	5216c <ZDICT_addEntropyTablesFromBuffer@@Base+0xac4c>  // b.pmore
   5212c:	add	x8, x10, x0
   52130:	sub	x5, x5, x0
   52134:	add	x2, sp, #0x18
   52138:	mov	x9, #0x0                   	// #0
   5213c:	mov	x1, x5
   52140:	mov	x0, x8
   52144:	bl	4ea88 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7568>
   52148:	cmn	x0, #0x78
   5214c:	b.hi	520f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xabd0>  // b.pmore
   52150:	ldr	w1, [sp, #24]
   52154:	add	x8, x8, #0x3
   52158:	sub	x4, x5, #0x3
   5215c:	cmp	w1, #0x3
   52160:	b.eq	52184 <ZDICT_addEntropyTablesFromBuffer@@Base+0xac64>  // b.none
   52164:	cmp	x0, x4
   52168:	b.ls	52174 <ZDICT_addEntropyTablesFromBuffer@@Base+0xac54>  // b.plast
   5216c:	mov	x0, #0xffffffffffffffb8    	// #-72
   52170:	b	520f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xabd0>
   52174:	add	x8, x8, x0
   52178:	sub	x5, x4, x0
   5217c:	add	x9, x9, #0x1
   52180:	b	5213c <ZDICT_addEntropyTablesFromBuffer@@Base+0xac1c>
   52184:	sub	x8, x8, x10
   52188:	str	x8, [x7]
   5218c:	lsl	x9, x9, #17
   52190:	str	x9, [x6]
   52194:	b	520fc <ZDICT_addEntropyTablesFromBuffer@@Base+0xabdc>
   52198:	ldr	x0, [x0, #21552]
   5219c:	ret
   521a0:	add	x0, x0, #0x4, lsl #12
   521a4:	ldr	w0, [x0, #5220]
   521a8:	cmp	w0, #0x5
   521ac:	cset	w0, eq  // eq = none
   521b0:	ret
   521b4:	stp	x29, x30, [sp, #-80]!
   521b8:	mov	x5, x2
   521bc:	mov	x29, sp
   521c0:	ldr	x2, [x0, #21552]
   521c4:	stp	x19, x20, [sp, #16]
   521c8:	stp	x21, x22, [sp, #32]
   521cc:	cmp	x2, x4
   521d0:	str	x23, [sp, #48]
   521d4:	b.eq	521f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xacd4>  // b.none
   521d8:	mov	x19, #0xffffffffffffffb8    	// #-72
   521dc:	mov	x0, x19
   521e0:	ldp	x19, x20, [sp, #16]
   521e4:	ldp	x21, x22, [sp, #32]
   521e8:	ldr	x23, [sp, #48]
   521ec:	ldp	x29, x30, [sp], #80
   521f0:	ret
   521f4:	mov	x20, x0
   521f8:	mov	x23, x1
   521fc:	mov	x21, x3
   52200:	mov	x19, x4
   52204:	cbz	x5, 5220c <ZDICT_addEntropyTablesFromBuffer@@Base+0xacec>
   52208:	bl	4eae8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x75c8>
   5220c:	add	x22, x20, #0x4, lsl #12
   52210:	ldr	w1, [x22, #5220]
   52214:	cmp	w1, #0x5
   52218:	b.hi	52468 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaf48>  // b.pmore
   5221c:	adrp	x0, 57000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfae0>
   52220:	add	x0, x0, #0x484
   52224:	ldrh	w0, [x0, w1, uxtw #1]
   52228:	adr	x1, 52234 <ZDICT_addEntropyTablesFromBuffer@@Base+0xad14>
   5222c:	add	x0, x1, w0, sxth #2
   52230:	br	x0
   52234:	cmp	x19, #0x5
   52238:	b.ne	521d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xacb8>  // b.any
   5223c:	ldr	w1, [x21]
   52240:	mov	w0, #0x2a50                	// #10832
   52244:	movk	w0, #0x184d, lsl #16
   52248:	and	w2, w1, #0xfffffff0
   5224c:	cmp	w2, w0
   52250:	b.ne	52284 <ZDICT_addEntropyTablesFromBuffer@@Base+0xad64>  // b.any
   52254:	mov	x0, #0x5508                	// #21768
   52258:	movk	x0, #0x2, lsl #16
   5225c:	add	x2, x20, x0
   52260:	str	w1, [x20, x0]
   52264:	ldrb	w0, [x21, #4]
   52268:	strb	w0, [x2, #4]
   5226c:	mov	x0, #0x3                   	// #3
   52270:	str	x0, [x20, #21552]
   52274:	mov	w0, #0x4                   	// #4
   52278:	str	w0, [x22, #5220]
   5227c:	mov	x19, #0x0                   	// #0
   52280:	b	521dc <ZDICT_addEntropyTablesFromBuffer@@Base+0xacbc>
   52284:	mov	x1, x19
   52288:	mov	x0, x21
   5228c:	bl	4ea2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x750c>
   52290:	str	x0, [x20, #21704]
   52294:	mov	x19, x0
   52298:	cmn	x0, #0x78
   5229c:	b.hi	521dc <ZDICT_addEntropyTablesFromBuffer@@Base+0xacbc>  // b.pmore
   522a0:	mov	x0, #0x5508                	// #21768
   522a4:	ldr	w2, [x21]
   522a8:	movk	x0, #0x2, lsl #16
   522ac:	add	x1, x20, x0
   522b0:	cmp	x19, #0x5
   522b4:	str	w2, [x20, x0]
   522b8:	ldrb	w0, [x21, #4]
   522bc:	strb	w0, [x1, #4]
   522c0:	b.ls	522d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xadb4>  // b.plast
   522c4:	sub	x19, x19, #0x5
   522c8:	mov	w0, #0x1                   	// #1
   522cc:	str	x19, [x20, #21552]
   522d0:	b	52278 <ZDICT_addEntropyTablesFromBuffer@@Base+0xad58>
   522d4:	str	xzr, [x20, #21552]
   522d8:	ldr	x2, [x20, #21552]
   522dc:	add	x0, x20, #0x25, lsl #12
   522e0:	mov	x1, x21
   522e4:	add	x0, x0, #0x50d
   522e8:	bl	4460 <memcpy@plt>
   522ec:	ldr	x2, [x20, #21704]
   522f0:	add	x1, x20, #0x25, lsl #12
   522f4:	add	x1, x1, #0x508
   522f8:	mov	x0, x20
   522fc:	bl	51d7c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa85c>
   52300:	mov	x19, x0
   52304:	cmn	x0, #0x78
   52308:	b.hi	521dc <ZDICT_addEntropyTablesFromBuffer@@Base+0xacbc>  // b.pmore
   5230c:	mov	x0, #0x3                   	// #3
   52310:	str	x0, [x20, #21552]
   52314:	mov	w0, #0x2                   	// #2
   52318:	b	52278 <ZDICT_addEntropyTablesFromBuffer@@Base+0xad58>
   5231c:	add	x2, sp, #0x48
   52320:	mov	x0, x21
   52324:	mov	x1, #0x3                   	// #3
   52328:	bl	4ea88 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7568>
   5232c:	mov	x19, x0
   52330:	cmn	x0, #0x78
   52334:	b.hi	521dc <ZDICT_addEntropyTablesFromBuffer@@Base+0xacbc>  // b.pmore
   52338:	ldr	w0, [sp, #72]
   5233c:	cmp	w0, #0x3
   52340:	b.ne	52390 <ZDICT_addEntropyTablesFromBuffer@@Base+0xae70>  // b.any
   52344:	ldr	w0, [x22, #5208]
   52348:	cbnz	w0, 52358 <ZDICT_addEntropyTablesFromBuffer@@Base+0xae38>
   5234c:	str	xzr, [x20, #21552]
   52350:	str	wzr, [x22, #5220]
   52354:	b	5227c <ZDICT_addEntropyTablesFromBuffer@@Base+0xad5c>
   52358:	mov	x1, #0x5470                	// #21616
   5235c:	add	x0, x20, x1
   52360:	bl	68f8 <ZSTD_initDStream_usingDDict@plt+0x1d78>
   52364:	ubfx	x0, x0, #11, #22
   52368:	ldrb	w2, [x21, #2]
   5236c:	ldrb	w1, [x21, #1]
   52370:	add	w1, w2, w1, lsl #8
   52374:	ldrb	w2, [x21]
   52378:	ubfiz	w2, w2, #16, #6
   5237c:	add	w1, w1, w2
   52380:	cmp	w0, w1
   52384:	b.eq	5234c <ZDICT_addEntropyTablesFromBuffer@@Base+0xae2c>  // b.none
   52388:	mov	x19, #0xffffffffffffffea    	// #-22
   5238c:	b	521dc <ZDICT_addEntropyTablesFromBuffer@@Base+0xacbc>
   52390:	str	x19, [x20, #21552]
   52394:	str	w0, [x22, #5216]
   52398:	mov	w0, #0x3                   	// #3
   5239c:	b	52278 <ZDICT_addEntropyTablesFromBuffer@@Base+0xad58>
   523a0:	ldr	w0, [x22, #5216]
   523a4:	cmp	w0, #0x1
   523a8:	b.eq	52414 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaef4>  // b.none
   523ac:	cmp	w0, #0x3
   523b0:	b.eq	52430 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaf10>  // b.none
   523b4:	cbnz	w0, 52468 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaf48>
   523b8:	mov	x4, x19
   523bc:	mov	x3, x21
   523c0:	mov	x2, x5
   523c4:	mov	x1, x23
   523c8:	mov	x0, x20
   523cc:	bl	51920 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa400>
   523d0:	mov	x19, x0
   523d4:	mov	w0, #0x2                   	// #2
   523d8:	str	w0, [x22, #5220]
   523dc:	mov	x0, #0x3                   	// #3
   523e0:	str	x0, [x20, #21552]
   523e4:	add	x0, x23, x19
   523e8:	str	x0, [x20, #21520]
   523ec:	cmn	x19, #0x78
   523f0:	b.hi	521dc <ZDICT_addEntropyTablesFromBuffer@@Base+0xacbc>  // b.pmore
   523f4:	ldr	w0, [x22, #5208]
   523f8:	cbz	w0, 521dc <ZDICT_addEntropyTablesFromBuffer@@Base+0xacbc>
   523fc:	mov	x2, x19
   52400:	mov	x1, x23
   52404:	mov	x0, #0x5470                	// #21616
   52408:	add	x0, x20, x0
   5240c:	bl	6728 <ZSTD_initDStream_usingDDict@plt+0x1ba8>
   52410:	b	521dc <ZDICT_addEntropyTablesFromBuffer@@Base+0xacbc>
   52414:	cmp	x19, x5
   52418:	b.hi	52438 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaf18>  // b.pmore
   5241c:	mov	x2, x19
   52420:	mov	x1, x21
   52424:	mov	x0, x23
   52428:	bl	4460 <memcpy@plt>
   5242c:	b	523d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaeb4>
   52430:	mov	x19, #0x0                   	// #0
   52434:	b	523d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaeb4>
   52438:	mov	x19, #0xffffffffffffffba    	// #-70
   5243c:	b	523d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaeb4>
   52440:	ldr	x2, [x20, #21552]
   52444:	add	x0, x20, #0x25, lsl #12
   52448:	mov	x1, x21
   5244c:	add	x0, x0, #0x50d
   52450:	bl	4460 <memcpy@plt>
   52454:	add	x0, x20, #0x24, lsl #12
   52458:	ldr	w0, [x0, #5388]
   5245c:	str	x0, [x20, #21552]
   52460:	mov	w0, #0x5                   	// #5
   52464:	b	52278 <ZDICT_addEntropyTablesFromBuffer@@Base+0xad58>
   52468:	mov	x19, #0xffffffffffffffff    	// #-1
   5246c:	b	521dc <ZDICT_addEntropyTablesFromBuffer@@Base+0xacbc>
   52470:	stp	x29, x30, [sp, #-48]!
   52474:	mov	x29, sp
   52478:	stp	x19, x20, [sp, #16]
   5247c:	mov	x19, x0
   52480:	mov	x20, x1
   52484:	stp	x21, x22, [sp, #32]
   52488:	mov	x21, x2
   5248c:	bl	51a94 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa574>
   52490:	cmn	x0, #0x78
   52494:	b.hi	524d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xafb4>  // b.pmore
   52498:	cmp	x20, #0x0
   5249c:	ccmp	x21, #0x0, #0x4, ne  // ne = any
   524a0:	b.eq	524d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xafb0>  // b.none
   524a4:	cmp	x21, #0x7
   524a8:	b.hi	524e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xafc4>  // b.pmore
   524ac:	ldr	x0, [x19, #21520]
   524b0:	str	x0, [x19, #21544]
   524b4:	ldr	x1, [x19, #21528]
   524b8:	str	x20, [x19, #21528]
   524bc:	sub	x0, x0, x1
   524c0:	sub	x0, x20, x0
   524c4:	str	x0, [x19, #21536]
   524c8:	add	x20, x20, x21
   524cc:	str	x20, [x19, #21520]
   524d0:	mov	x0, #0x0                   	// #0
   524d4:	ldp	x19, x20, [sp, #16]
   524d8:	ldp	x21, x22, [sp, #32]
   524dc:	ldp	x29, x30, [sp], #48
   524e0:	ret
   524e4:	ldr	w1, [x20]
   524e8:	mov	w0, #0xa437                	// #42039
   524ec:	movk	w0, #0xec30, lsl #16
   524f0:	cmp	w1, w0
   524f4:	b.ne	524ac <ZDICT_addEntropyTablesFromBuffer@@Base+0xaf8c>  // b.any
   524f8:	add	x0, x19, #0x4, lsl #12
   524fc:	ldr	w1, [x20, #4]
   52500:	add	x22, x20, #0x8
   52504:	sub	x2, x21, #0x8
   52508:	str	w1, [x0, #5328]
   5250c:	mov	x1, x22
   52510:	mov	x0, x19
   52514:	bl	50fec <ZDICT_addEntropyTablesFromBuffer@@Base+0x9acc>
   52518:	cmn	x0, #0x78
   5251c:	b.hi	52544 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb024>  // b.pmore
   52520:	add	x22, x22, x0
   52524:	ldr	x2, [x19, #21520]
   52528:	str	x2, [x19, #21544]
   5252c:	ldr	x0, [x19, #21528]
   52530:	str	x22, [x19, #21528]
   52534:	sub	x2, x2, x0
   52538:	sub	x2, x22, x2
   5253c:	str	x2, [x19, #21536]
   52540:	b	524c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xafa8>
   52544:	mov	x0, #0xffffffffffffffe2    	// #-30
   52548:	b	524d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xafb4>
   5254c:	stp	x29, x30, [sp, #-64]!
   52550:	mov	x29, sp
   52554:	stp	x21, x22, [sp, #32]
   52558:	mov	x21, x2
   5255c:	mov	x2, x6
   52560:	mov	x22, x3
   52564:	stp	x19, x20, [sp, #16]
   52568:	mov	x19, x0
   5256c:	mov	x20, x1
   52570:	mov	x1, x5
   52574:	str	x23, [sp, #48]
   52578:	mov	x23, x4
   5257c:	bl	52470 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaf50>
   52580:	mov	x1, x20
   52584:	mov	x0, x19
   52588:	bl	4eae8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x75c8>
   5258c:	mov	x4, x23
   52590:	mov	x3, x22
   52594:	mov	x2, x21
   52598:	ldp	x19, x20, [sp, #16]
   5259c:	ldp	x21, x22, [sp, #32]
   525a0:	ldr	x23, [sp, #48]
   525a4:	ldp	x29, x30, [sp], #64
   525a8:	b	51de4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa8c4>
   525ac:	mov	x6, #0x0                   	// #0
   525b0:	mov	x5, #0x0                   	// #0
   525b4:	b	5254c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb02c>
   525b8:	stp	x29, x30, [sp, #-64]!
   525bc:	mov	x29, sp
   525c0:	stp	x19, x20, [sp, #16]
   525c4:	mov	x19, x0
   525c8:	stp	x21, x22, [sp, #32]
   525cc:	mov	x21, x1
   525d0:	mov	x22, x2
   525d4:	str	x23, [sp, #48]
   525d8:	mov	x23, x3
   525dc:	bl	51b78 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa658>
   525e0:	cbz	x0, 52620 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb100>
   525e4:	mov	x1, x19
   525e8:	mov	x4, x23
   525ec:	mov	x3, x22
   525f0:	mov	x2, x21
   525f4:	mov	x20, x0
   525f8:	bl	525ac <ZDICT_addEntropyTablesFromBuffer@@Base+0xb08c>
   525fc:	mov	x19, x0
   52600:	mov	x0, x20
   52604:	bl	51ba8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa688>
   52608:	mov	x0, x19
   5260c:	ldp	x19, x20, [sp, #16]
   52610:	ldp	x21, x22, [sp, #32]
   52614:	ldr	x23, [sp, #48]
   52618:	ldp	x29, x30, [sp], #64
   5261c:	ret
   52620:	mov	x19, #0xffffffffffffffc0    	// #-64
   52624:	b	52608 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb0e8>
   52628:	stp	x29, x30, [sp, #-128]!
   5262c:	mov	x29, sp
   52630:	stp	x21, x22, [sp, #32]
   52634:	mov	x22, x1
   52638:	adrp	x1, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   5263c:	add	x1, x1, #0xcc0
   52640:	str	x23, [sp, #48]
   52644:	mov	x23, x0
   52648:	stp	x19, x20, [sp, #16]
   5264c:	ldp	x2, x3, [x1, #16]
   52650:	stp	x2, x3, [sp, #104]
   52654:	ldr	x0, [x1, #32]
   52658:	mov	x1, #0x18                  	// #24
   5265c:	str	x0, [sp, #120]
   52660:	mov	x0, #0x0                   	// #0
   52664:	bl	4eb2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x760c>
   52668:	mov	x19, x0
   5266c:	mov	x1, x22
   52670:	mov	x0, #0x0                   	// #0
   52674:	bl	4eb2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x760c>
   52678:	mov	x20, x0
   5267c:	ldp	x0, x1, [sp, #104]
   52680:	stp	x0, x1, [sp, #64]
   52684:	ldr	x0, [sp, #120]
   52688:	str	x0, [sp, #80]
   5268c:	add	x0, sp, #0x40
   52690:	bl	51ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa5c4>
   52694:	mov	x21, x0
   52698:	cmp	x20, #0x0
   5269c:	ccmp	x19, #0x0, #0x4, ne  // ne = any
   526a0:	b.eq	526a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb188>  // b.none
   526a4:	cbnz	x0, 526e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb1c8>
   526a8:	mov	x1, x20
   526ac:	mov	x0, #0x0                   	// #0
   526b0:	bl	4eb34 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7614>
   526b4:	mov	x1, x19
   526b8:	mov	x19, #0x0                   	// #0
   526bc:	mov	x0, #0x0                   	// #0
   526c0:	bl	4eb34 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7614>
   526c4:	mov	x1, x21
   526c8:	mov	x0, #0x0                   	// #0
   526cc:	bl	4eb34 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7614>
   526d0:	mov	x0, x19
   526d4:	ldp	x19, x20, [sp, #16]
   526d8:	ldp	x21, x22, [sp, #32]
   526dc:	ldr	x23, [sp, #48]
   526e0:	ldp	x29, x30, [sp], #128
   526e4:	ret
   526e8:	mov	x2, x22
   526ec:	mov	x1, x23
   526f0:	mov	x0, x20
   526f4:	bl	4460 <memcpy@plt>
   526f8:	mov	x2, x22
   526fc:	mov	x1, x20
   52700:	mov	x0, x21
   52704:	bl	52470 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaf50>
   52708:	cmn	x0, #0x78
   5270c:	b.hi	526a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb188>  // b.pmore
   52710:	stp	x20, x22, [x19]
   52714:	str	x21, [x19, #16]
   52718:	b	526d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb1b0>
   5271c:	stp	x29, x30, [sp, #-48]!
   52720:	mov	x29, sp
   52724:	stp	x19, x20, [sp, #16]
   52728:	mov	x19, x0
   5272c:	ldr	x0, [x0, #16]
   52730:	ldr	x20, [x0, #21736]
   52734:	str	x21, [sp, #32]
   52738:	ldr	x21, [x0, #21744]
   5273c:	bl	51ba8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa688>
   52740:	ldr	x1, [x19]
   52744:	mov	x0, x21
   52748:	blr	x20
   5274c:	mov	x1, x19
   52750:	mov	x0, x21
   52754:	blr	x20
   52758:	mov	x0, #0x0                   	// #0
   5275c:	ldp	x19, x20, [sp, #16]
   52760:	ldr	x21, [sp, #32]
   52764:	ldp	x29, x30, [sp], #48
   52768:	ret
   5276c:	stp	x29, x30, [sp, #-64]!
   52770:	mov	x29, sp
   52774:	stp	x19, x20, [sp, #16]
   52778:	mov	x20, x1
   5277c:	mov	x19, x0
   52780:	ldr	x1, [x5, #16]
   52784:	stp	x21, x22, [sp, #32]
   52788:	mov	x21, x2
   5278c:	mov	x22, x3
   52790:	str	x23, [sp, #48]
   52794:	mov	x23, x4
   52798:	bl	51bd8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa6b8>
   5279c:	mov	x1, x20
   527a0:	mov	x0, x19
   527a4:	bl	4eae8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x75c8>
   527a8:	mov	x4, x23
   527ac:	mov	x3, x22
   527b0:	mov	x2, x21
   527b4:	ldp	x19, x20, [sp, #16]
   527b8:	ldp	x21, x22, [sp, #32]
   527bc:	ldr	x23, [sp, #48]
   527c0:	ldp	x29, x30, [sp], #64
   527c4:	b	51de4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa8c4>
   527c8:	cbz	x0, 52824 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb304>
   527cc:	stp	x29, x30, [sp, #-32]!
   527d0:	mov	x29, sp
   527d4:	str	x19, [sp, #16]
   527d8:	mov	x19, x0
   527dc:	ldr	x0, [x0]
   527e0:	bl	51ba8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa688>
   527e4:	ldr	x1, [x19, #40]
   527e8:	cbz	x1, 527f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb2d4>
   527ec:	ldp	x2, x0, [x19, #144]
   527f0:	blr	x2
   527f4:	ldr	x1, [x19, #64]
   527f8:	cbz	x1, 52804 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb2e4>
   527fc:	ldp	x2, x0, [x19, #144]
   52800:	blr	x2
   52804:	ldr	x2, [x19, #144]
   52808:	mov	x1, x19
   5280c:	ldr	x0, [x19, #152]
   52810:	blr	x2
   52814:	mov	x0, #0x0                   	// #0
   52818:	ldr	x19, [sp, #16]
   5281c:	ldp	x29, x30, [sp], #32
   52820:	ret
   52824:	mov	x0, #0x0                   	// #0
   52828:	ret
   5282c:	stp	x29, x30, [sp, #-64]!
   52830:	mov	x29, sp
   52834:	stp	x19, x20, [sp, #16]
   52838:	mov	x20, x0
   5283c:	ldr	x0, [x0]
   52840:	cbnz	x0, 52864 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb344>
   52844:	ldr	x0, [x20, #8]
   52848:	cbnz	x0, 52864 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb344>
   5284c:	adrp	x0, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   52850:	add	x0, x0, #0xcc0
   52854:	ldp	x2, x3, [x0, #16]
   52858:	stp	x2, x3, [x20]
   5285c:	ldr	x0, [x0, #32]
   52860:	str	x0, [x20, #16]
   52864:	ldr	x2, [x20]
   52868:	cbnz	x2, 52880 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb360>
   5286c:	mov	x19, #0x0                   	// #0
   52870:	mov	x0, x19
   52874:	ldp	x19, x20, [sp, #16]
   52878:	ldp	x29, x30, [sp], #64
   5287c:	ret
   52880:	ldr	x0, [x20, #8]
   52884:	cbz	x0, 5286c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb34c>
   52888:	ldr	x0, [x20, #16]
   5288c:	mov	x1, #0xa0                  	// #160
   52890:	blr	x2
   52894:	mov	x19, x0
   52898:	cbz	x0, 5286c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb34c>
   5289c:	mov	x2, #0xa0                  	// #160
   528a0:	mov	w1, #0x0                   	// #0
   528a4:	bl	4700 <memset@plt>
   528a8:	ldp	x2, x3, [x20]
   528ac:	stp	x2, x3, [x19, #136]
   528b0:	ldr	x0, [x20, #16]
   528b4:	str	x0, [x19, #152]
   528b8:	stp	x2, x3, [sp, #32]
   528bc:	str	x0, [sp, #48]
   528c0:	add	x0, sp, #0x20
   528c4:	bl	51ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa5c4>
   528c8:	str	x0, [x19]
   528cc:	cbnz	x0, 528dc <ZDICT_addEntropyTablesFromBuffer@@Base+0xb3bc>
   528d0:	mov	x0, x19
   528d4:	bl	527c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb2a8>
   528d8:	b	5286c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb34c>
   528dc:	str	wzr, [x19, #32]
   528e0:	b	52870 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb350>
   528e4:	adrp	x0, 70000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28ae0>
   528e8:	add	x0, x0, #0xcc0
   528ec:	stp	x29, x30, [sp, #-48]!
   528f0:	mov	x29, sp
   528f4:	ldp	x2, x3, [x0, #16]
   528f8:	stp	x2, x3, [sp, #16]
   528fc:	ldr	x0, [x0, #32]
   52900:	str	x0, [sp, #32]
   52904:	add	x0, sp, #0x10
   52908:	bl	5282c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb30c>
   5290c:	ldp	x29, x30, [sp], #48
   52910:	ret
   52914:	mov	w3, #0x1                   	// #1
   52918:	str	w3, [x0, #32]
   5291c:	str	xzr, [x0, #56]
   52920:	stp	xzr, xzr, [x0, #80]
   52924:	str	xzr, [x0, #128]
   52928:	ldr	x0, [x0]
   5292c:	b	52470 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaf50>
   52930:	mov	x2, #0x0                   	// #0
   52934:	mov	x1, #0x0                   	// #0
   52938:	b	52914 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb3f4>
   5293c:	stp	x29, x30, [sp, #-128]!
   52940:	mov	x29, sp
   52944:	stp	x21, x22, [sp, #32]
   52948:	mov	x22, x2
   5294c:	stp	x27, x28, [sp, #80]
   52950:	mov	x27, x0
   52954:	ldr	x21, [x4]
   52958:	stp	x19, x20, [sp, #16]
   5295c:	mov	x20, x1
   52960:	ldr	x0, [x2]
   52964:	mov	x19, x3
   52968:	add	x21, x3, x21
   5296c:	stp	x23, x24, [sp, #48]
   52970:	add	x0, x1, x0
   52974:	mov	x23, x1
   52978:	mov	x24, x3
   5297c:	stp	x25, x26, [sp, #64]
   52980:	mov	x25, x4
   52984:	mov	w26, #0x2                   	// #2
   52988:	str	x0, [sp, #96]
   5298c:	adrp	x0, 57000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfae0>
   52990:	add	x0, x0, #0x490
   52994:	str	x0, [sp, #104]
   52998:	ldr	w0, [x27, #32]
   5299c:	cmp	w0, #0x4
   529a0:	b.hi	52d64 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb844>  // b.pmore
   529a4:	ldr	x1, [sp, #104]
   529a8:	ldrh	w0, [x1, w0, uxtw #1]
   529ac:	adr	x1, 529b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb498>
   529b0:	add	x0, x1, w0, sxth #2
   529b4:	br	x0
   529b8:	ldr	x2, [x27, #128]
   529bc:	add	x3, x27, #0x68
   529c0:	mov	x1, x3
   529c4:	add	x0, x27, #0x8
   529c8:	str	x3, [sp, #112]
   529cc:	bl	51be0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa6c0>
   529d0:	mov	x28, x0
   529d4:	cmn	x0, #0x78
   529d8:	b.hi	52a2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb50c>  // b.pmore
   529dc:	ldr	x3, [sp, #112]
   529e0:	cbz	x0, 52a68 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb548>
   529e4:	ldr	x0, [x27, #128]
   529e8:	sub	x4, x21, x19
   529ec:	sub	x2, x28, x0
   529f0:	add	x0, x3, x0
   529f4:	cmp	x4, x2
   529f8:	b.cs	52a4c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb52c>  // b.hs, b.nlast
   529fc:	mov	x2, x4
   52a00:	mov	x1, x19
   52a04:	str	x4, [sp, #96]
   52a08:	bl	4460 <memcpy@plt>
   52a0c:	ldr	x4, [sp, #96]
   52a10:	ldr	x0, [x27, #128]
   52a14:	add	x0, x0, x4
   52a18:	str	x0, [x27, #128]
   52a1c:	str	xzr, [x22]
   52a20:	ldr	x0, [x27, #128]
   52a24:	sub	x0, x28, x0
   52a28:	add	x28, x0, #0x3
   52a2c:	mov	x0, x28
   52a30:	ldp	x19, x20, [sp, #16]
   52a34:	ldp	x21, x22, [sp, #32]
   52a38:	ldp	x23, x24, [sp, #48]
   52a3c:	ldp	x25, x26, [sp, #64]
   52a40:	ldp	x27, x28, [sp, #80]
   52a44:	ldp	x29, x30, [sp], #128
   52a48:	ret
   52a4c:	mov	x1, x19
   52a50:	str	x2, [sp, #112]
   52a54:	bl	4460 <memcpy@plt>
   52a58:	str	x28, [x27, #128]
   52a5c:	ldr	x2, [sp, #112]
   52a60:	add	x19, x19, x2
   52a64:	b	52998 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb478>
   52a68:	ldr	x0, [x27]
   52a6c:	mov	x2, #0x0                   	// #0
   52a70:	mov	x1, #0x0                   	// #0
   52a74:	ldr	x7, [x0, #21552]
   52a78:	stp	x3, x7, [sp, #112]
   52a7c:	mov	x4, x7
   52a80:	bl	521b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xac94>
   52a84:	mov	x28, x0
   52a88:	cmn	x0, #0x78
   52a8c:	b.hi	52a2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb50c>  // b.pmore
   52a90:	ldp	x3, x7, [sp, #112]
   52a94:	ldr	x0, [x27, #128]
   52a98:	cmp	x0, x7
   52a9c:	b.hi	52b20 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb600>  // b.pmore
   52aa0:	ldr	w2, [x27, #16]
   52aa4:	mov	w0, #0x400                 	// #1024
   52aa8:	cmp	w2, #0x400
   52aac:	csel	w2, w2, w0, cs  // cs = hs, nlast
   52ab0:	mov	w0, #0x20000               	// #131072
   52ab4:	cmp	w2, #0x20, lsl #12
   52ab8:	str	w2, [x27, #16]
   52abc:	csel	w28, w2, w0, ls  // ls = plast
   52ac0:	str	x28, [x27, #96]
   52ac4:	ldr	x0, [x27, #48]
   52ac8:	cmp	x0, x28
   52acc:	b.cc	52b48 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb628>  // b.lo, b.ul, b.last
   52ad0:	ldr	w0, [x27, #16]
   52ad4:	add	x0, x0, #0x10
   52ad8:	add	x28, x0, x28
   52adc:	ldr	x0, [x27, #72]
   52ae0:	cmp	x0, x28
   52ae4:	b.cc	52b78 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb658>  // b.lo, b.ul, b.last
   52ae8:	str	w26, [x27, #32]
   52aec:	ldr	x0, [x27]
   52af0:	ldr	x4, [x0, #21552]
   52af4:	cbnz	x4, 52ba4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb684>
   52af8:	str	wzr, [x27, #32]
   52afc:	ldr	x0, [x27]
   52b00:	sub	x19, x19, x24
   52b04:	str	x19, [x25]
   52b08:	sub	x20, x20, x23
   52b0c:	str	x20, [x22]
   52b10:	ldr	x6, [x0, #21552]
   52b14:	ldr	x0, [x27, #56]
   52b18:	sub	x28, x6, x0
   52b1c:	b	52a2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb50c>
   52b20:	ldr	x0, [x27]
   52b24:	add	x3, x3, x7
   52b28:	mov	x2, #0x0                   	// #0
   52b2c:	mov	x1, #0x0                   	// #0
   52b30:	ldr	x4, [x0, #21552]
   52b34:	bl	521b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xac94>
   52b38:	mov	x28, x0
   52b3c:	cmn	x0, #0x78
   52b40:	b.ls	52aa0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb580>  // b.plast
   52b44:	b	52a2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb50c>
   52b48:	ldp	x3, x0, [x27, #144]
   52b4c:	ldr	x1, [x27, #40]
   52b50:	blr	x3
   52b54:	str	x28, [x27, #48]
   52b58:	ldr	x3, [x27, #136]
   52b5c:	mov	x1, x28
   52b60:	ldr	x0, [x27, #152]
   52b64:	blr	x3
   52b68:	str	x0, [x27, #40]
   52b6c:	cbnz	x0, 52ad0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb5b0>
   52b70:	mov	x28, #0xffffffffffffffc0    	// #-64
   52b74:	b	52a2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb50c>
   52b78:	ldp	x3, x0, [x27, #144]
   52b7c:	ldr	x1, [x27, #64]
   52b80:	blr	x3
   52b84:	str	x28, [x27, #72]
   52b88:	ldr	x3, [x27, #136]
   52b8c:	mov	x1, x28
   52b90:	ldr	x0, [x27, #152]
   52b94:	blr	x3
   52b98:	str	x0, [x27, #64]
   52b9c:	cbnz	x0, 52ae8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb5c8>
   52ba0:	b	52b70 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb650>
   52ba4:	sub	x1, x21, x19
   52ba8:	cmp	x1, x4
   52bac:	b.cc	52c28 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb708>  // b.lo, b.ul, b.last
   52bb0:	add	x1, x0, #0x4, lsl #12
   52bb4:	ldr	x3, [x27, #80]
   52bb8:	ldr	w7, [x1, #5220]
   52bbc:	ldr	x1, [x27, #64]
   52bc0:	cmp	w7, #0x5
   52bc4:	add	x1, x1, x3
   52bc8:	b.eq	52c20 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb700>  // b.none
   52bcc:	ldr	x2, [x27, #72]
   52bd0:	sub	x2, x2, x3
   52bd4:	mov	x3, x19
   52bd8:	str	x4, [sp, #112]
   52bdc:	str	w7, [sp, #120]
   52be0:	bl	521b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xac94>
   52be4:	mov	x28, x0
   52be8:	cmn	x0, #0x78
   52bec:	b.hi	52a2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb50c>  // b.pmore
   52bf0:	ldr	x4, [sp, #112]
   52bf4:	cmp	x0, #0x0
   52bf8:	ldr	w7, [sp, #120]
   52bfc:	add	x19, x19, x4
   52c00:	ccmp	w7, #0x5, #0x4, eq  // eq = none
   52c04:	b.ne	52998 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb478>  // b.any
   52c08:	ldr	x0, [x27, #80]
   52c0c:	add	x0, x0, x28
   52c10:	str	x0, [x27, #88]
   52c14:	mov	w0, #0x4                   	// #4
   52c18:	str	w0, [x27, #32]
   52c1c:	b	52998 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb478>
   52c20:	mov	x2, #0x0                   	// #0
   52c24:	b	52bd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb6b4>
   52c28:	cmp	x21, x19
   52c2c:	b.eq	52afc <ZDICT_addEntropyTablesFromBuffer@@Base+0xb5dc>  // b.none
   52c30:	mov	w0, #0x3                   	// #3
   52c34:	str	w0, [x27, #32]
   52c38:	ldr	x0, [x27]
   52c3c:	ldr	x1, [x27, #48]
   52c40:	ldr	x28, [x0, #21552]
   52c44:	ldr	x0, [x27, #56]
   52c48:	sub	x3, x28, x0
   52c4c:	sub	x1, x1, x0
   52c50:	cmp	x1, x3
   52c54:	b.cc	52d74 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb854>  // b.lo, b.ul, b.last
   52c58:	sub	x2, x21, x19
   52c5c:	mov	x1, x19
   52c60:	ldr	x6, [x27, #40]
   52c64:	cmp	x2, x3
   52c68:	csel	x2, x2, x3, ls  // ls = plast
   52c6c:	stp	x2, x3, [sp, #112]
   52c70:	add	x0, x6, x0
   52c74:	bl	4460 <memcpy@plt>
   52c78:	ldp	x2, x3, [sp, #112]
   52c7c:	ldr	x0, [x27, #56]
   52c80:	add	x0, x0, x2
   52c84:	str	x0, [x27, #56]
   52c88:	add	x19, x19, x2
   52c8c:	cmp	x3, x2
   52c90:	b.hi	52afc <ZDICT_addEntropyTablesFromBuffer@@Base+0xb5dc>  // b.pmore
   52c94:	ldr	x0, [x27]
   52c98:	mov	x4, x28
   52c9c:	ldp	x6, x2, [x27, #64]
   52ca0:	add	x1, x0, #0x4, lsl #12
   52ca4:	ldr	x3, [x27, #40]
   52ca8:	ldr	w7, [x1, #5220]
   52cac:	ldr	x1, [x27, #80]
   52cb0:	str	w7, [sp, #112]
   52cb4:	sub	x2, x2, x1
   52cb8:	add	x1, x6, x1
   52cbc:	bl	521b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xac94>
   52cc0:	mov	x28, x0
   52cc4:	cmn	x0, #0x78
   52cc8:	b.hi	52a2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb50c>  // b.pmore
   52ccc:	ldr	w7, [sp, #112]
   52cd0:	cmp	x0, #0x0
   52cd4:	str	xzr, [x27, #56]
   52cd8:	ccmp	w7, #0x5, #0x4, eq  // eq = none
   52cdc:	b.eq	52ce8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb7c8>  // b.none
   52ce0:	str	w26, [x27, #32]
   52ce4:	b	52998 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb478>
   52ce8:	ldr	x0, [x27, #80]
   52cec:	add	x0, x0, x28
   52cf0:	str	x0, [x27, #88]
   52cf4:	mov	w0, #0x4                   	// #4
   52cf8:	str	w0, [x27, #32]
   52cfc:	ldp	x0, x3, [x27, #80]
   52d00:	ldr	x1, [sp, #96]
   52d04:	sub	x4, x1, x20
   52d08:	sub	x28, x3, x0
   52d0c:	cmp	x4, x28
   52d10:	ldr	x1, [x27, #64]
   52d14:	csel	x2, x4, x28, ls  // ls = plast
   52d18:	stp	x2, x4, [sp, #112]
   52d1c:	add	x1, x1, x0
   52d20:	mov	x0, x20
   52d24:	bl	4460 <memcpy@plt>
   52d28:	ldp	x2, x4, [sp, #112]
   52d2c:	ldr	x0, [x27, #80]
   52d30:	add	x20, x20, x2
   52d34:	add	x2, x2, x0
   52d38:	str	x2, [x27, #80]
   52d3c:	cmp	x4, x28
   52d40:	b.cc	52afc <ZDICT_addEntropyTablesFromBuffer@@Base+0xb5dc>  // b.lo, b.ul, b.last
   52d44:	ldr	x0, [x27, #96]
   52d48:	str	w26, [x27, #32]
   52d4c:	add	x2, x2, x0
   52d50:	ldr	x0, [x27, #72]
   52d54:	cmp	x2, x0
   52d58:	b.ls	52998 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb478>  // b.plast
   52d5c:	stp	xzr, xzr, [x27, #80]
   52d60:	b	52998 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb478>
   52d64:	mov	x28, #0xffffffffffffffff    	// #-1
   52d68:	b	52a2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb50c>
   52d6c:	mov	x28, #0xffffffffffffffc2    	// #-62
   52d70:	b	52a2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb50c>
   52d74:	mov	x28, #0xffffffffffffffec    	// #-20
   52d78:	b	52a2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb50c>
   52d7c:	mov	x0, #0x3                   	// #3
   52d80:	movk	x0, #0x2, lsl #16
   52d84:	ret
   52d88:	mov	x0, #0x20000               	// #131072
   52d8c:	ret

Disassembly of section .fini:

0000000000052d90 <.fini>:
   52d90:	stp	x29, x30, [sp, #-16]!
   52d94:	mov	x29, sp
   52d98:	ldp	x29, x30, [sp], #16
   52d9c:	ret
