
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//vdir_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402490 <.init>:
  402490:	stp	x29, x30, [sp, #-16]!
  402494:	mov	x29, sp
  402498:	bl	402c10 <__fxstatat@plt+0x60>
  40249c:	ldp	x29, x30, [sp], #16
  4024a0:	ret

Disassembly of section .plt:

00000000004024b0 <mbrtowc@plt-0x20>:
  4024b0:	stp	x16, x30, [sp, #-16]!
  4024b4:	adrp	x16, 42a000 <_obstack_memory_used@@Base+0x174b8>
  4024b8:	ldr	x17, [x16, #4088]
  4024bc:	add	x16, x16, #0xff8
  4024c0:	br	x17
  4024c4:	nop
  4024c8:	nop
  4024cc:	nop

00000000004024d0 <mbrtowc@plt>:
  4024d0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16]
  4024d8:	add	x16, x16, #0x0
  4024dc:	br	x17

00000000004024e0 <memcpy@plt>:
  4024e0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #8]
  4024e8:	add	x16, x16, #0x8
  4024ec:	br	x17

00000000004024f0 <memmove@plt>:
  4024f0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #16]
  4024f8:	add	x16, x16, #0x10
  4024fc:	br	x17

0000000000402500 <cap_to_text@plt>:
  402500:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #24]
  402508:	add	x16, x16, #0x18
  40250c:	br	x17

0000000000402510 <_exit@plt>:
  402510:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #32]
  402518:	add	x16, x16, #0x20
  40251c:	br	x17

0000000000402520 <getcwd@plt>:
  402520:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #40]
  402528:	add	x16, x16, #0x28
  40252c:	br	x17

0000000000402530 <fwrite_unlocked@plt>:
  402530:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #48]
  402538:	add	x16, x16, #0x30
  40253c:	br	x17

0000000000402540 <strtoul@plt>:
  402540:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #56]
  402548:	add	x16, x16, #0x38
  40254c:	br	x17

0000000000402550 <strlen@plt>:
  402550:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #64]
  402558:	add	x16, x16, #0x40
  40255c:	br	x17

0000000000402560 <__sprintf_chk@plt>:
  402560:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #72]
  402568:	add	x16, x16, #0x48
  40256c:	br	x17

0000000000402570 <mbstowcs@plt>:
  402570:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #80]
  402578:	add	x16, x16, #0x50
  40257c:	br	x17

0000000000402580 <exit@plt>:
  402580:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #88]
  402588:	add	x16, x16, #0x58
  40258c:	br	x17

0000000000402590 <_setjmp@plt>:
  402590:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #96]
  402598:	add	x16, x16, #0x60
  40259c:	br	x17

00000000004025a0 <raise@plt>:
  4025a0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #104]
  4025a8:	add	x16, x16, #0x68
  4025ac:	br	x17

00000000004025b0 <error@plt>:
  4025b0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #112]
  4025b8:	add	x16, x16, #0x70
  4025bc:	br	x17

00000000004025c0 <sigprocmask@plt>:
  4025c0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #120]
  4025c8:	add	x16, x16, #0x78
  4025cc:	br	x17

00000000004025d0 <localtime_r@plt>:
  4025d0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #128]
  4025d8:	add	x16, x16, #0x80
  4025dc:	br	x17

00000000004025e0 <setenv@plt>:
  4025e0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #136]
  4025e8:	add	x16, x16, #0x88
  4025ec:	br	x17

00000000004025f0 <readlink@plt>:
  4025f0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #144]
  4025f8:	add	x16, x16, #0x90
  4025fc:	br	x17

0000000000402600 <getgrnam@plt>:
  402600:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #152]
  402608:	add	x16, x16, #0x98
  40260c:	br	x17

0000000000402610 <ferror_unlocked@plt>:
  402610:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #160]
  402618:	add	x16, x16, #0xa0
  40261c:	br	x17

0000000000402620 <opendir@plt>:
  402620:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #168]
  402628:	add	x16, x16, #0xa8
  40262c:	br	x17

0000000000402630 <strftime@plt>:
  402630:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #176]
  402638:	add	x16, x16, #0xb0
  40263c:	br	x17

0000000000402640 <__cxa_atexit@plt>:
  402640:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #184]
  402648:	add	x16, x16, #0xb8
  40264c:	br	x17

0000000000402650 <iswcntrl@plt>:
  402650:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #192]
  402658:	add	x16, x16, #0xc0
  40265c:	br	x17

0000000000402660 <clock_gettime@plt>:
  402660:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #200]
  402668:	add	x16, x16, #0xc8
  40266c:	br	x17

0000000000402670 <lseek@plt>:
  402670:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #208]
  402678:	add	x16, x16, #0xd0
  40267c:	br	x17

0000000000402680 <__fpending@plt>:
  402680:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #216]
  402688:	add	x16, x16, #0xd8
  40268c:	br	x17

0000000000402690 <__ctype_tolower_loc@plt>:
  402690:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #224]
  402698:	add	x16, x16, #0xe0
  40269c:	br	x17

00000000004026a0 <localeconv@plt>:
  4026a0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #232]
  4026a8:	add	x16, x16, #0xe8
  4026ac:	br	x17

00000000004026b0 <stpcpy@plt>:
  4026b0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #240]
  4026b8:	add	x16, x16, #0xf0
  4026bc:	br	x17

00000000004026c0 <fileno@plt>:
  4026c0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #248]
  4026c8:	add	x16, x16, #0xf8
  4026cc:	br	x17

00000000004026d0 <putc_unlocked@plt>:
  4026d0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #256]
  4026d8:	add	x16, x16, #0x100
  4026dc:	br	x17

00000000004026e0 <__memcpy_chk@plt>:
  4026e0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #264]
  4026e8:	add	x16, x16, #0x108
  4026ec:	br	x17

00000000004026f0 <signal@plt>:
  4026f0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #272]
  4026f8:	add	x16, x16, #0x110
  4026fc:	br	x17

0000000000402700 <__snprintf_chk@plt>:
  402700:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #280]
  402708:	add	x16, x16, #0x118
  40270c:	br	x17

0000000000402710 <fclose@plt>:
  402710:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #288]
  402718:	add	x16, x16, #0x120
  40271c:	br	x17

0000000000402720 <nl_langinfo@plt>:
  402720:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #296]
  402728:	add	x16, x16, #0x128
  40272c:	br	x17

0000000000402730 <malloc@plt>:
  402730:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #304]
  402738:	add	x16, x16, #0x130
  40273c:	br	x17

0000000000402740 <wcwidth@plt>:
  402740:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #312]
  402748:	add	x16, x16, #0x138
  40274c:	br	x17

0000000000402750 <tzset@plt>:
  402750:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #320]
  402758:	add	x16, x16, #0x140
  40275c:	br	x17

0000000000402760 <wcswidth@plt>:
  402760:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #328]
  402768:	add	x16, x16, #0x148
  40276c:	br	x17

0000000000402770 <sigemptyset@plt>:
  402770:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #336]
  402778:	add	x16, x16, #0x150
  40277c:	br	x17

0000000000402780 <strncmp@plt>:
  402780:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #344]
  402788:	add	x16, x16, #0x158
  40278c:	br	x17

0000000000402790 <bindtextdomain@plt>:
  402790:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #352]
  402798:	add	x16, x16, #0x160
  40279c:	br	x17

00000000004027a0 <__libc_start_main@plt>:
  4027a0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #360]
  4027a8:	add	x16, x16, #0x168
  4027ac:	br	x17

00000000004027b0 <__printf_chk@plt>:
  4027b0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #368]
  4027b8:	add	x16, x16, #0x170
  4027bc:	br	x17

00000000004027c0 <memset@plt>:
  4027c0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #376]
  4027c8:	add	x16, x16, #0x178
  4027cc:	br	x17

00000000004027d0 <getpwnam@plt>:
  4027d0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #384]
  4027d8:	add	x16, x16, #0x180
  4027dc:	br	x17

00000000004027e0 <gmtime_r@plt>:
  4027e0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #392]
  4027e8:	add	x16, x16, #0x188
  4027ec:	br	x17

00000000004027f0 <putchar_unlocked@plt>:
  4027f0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #400]
  4027f8:	add	x16, x16, #0x190
  4027fc:	br	x17

0000000000402800 <calloc@plt>:
  402800:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #408]
  402808:	add	x16, x16, #0x198
  40280c:	br	x17

0000000000402810 <bcmp@plt>:
  402810:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #416]
  402818:	add	x16, x16, #0x1a0
  40281c:	br	x17

0000000000402820 <readdir@plt>:
  402820:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #424]
  402828:	add	x16, x16, #0x1a8
  40282c:	br	x17

0000000000402830 <realloc@plt>:
  402830:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #432]
  402838:	add	x16, x16, #0x1b0
  40283c:	br	x17

0000000000402840 <__ctype_toupper_loc@plt>:
  402840:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #440]
  402848:	add	x16, x16, #0x1b8
  40284c:	br	x17

0000000000402850 <closedir@plt>:
  402850:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #448]
  402858:	add	x16, x16, #0x1c0
  40285c:	br	x17

0000000000402860 <sigaction@plt>:
  402860:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #456]
  402868:	add	x16, x16, #0x1c8
  40286c:	br	x17

0000000000402870 <strrchr@plt>:
  402870:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #464]
  402878:	add	x16, x16, #0x1d0
  40287c:	br	x17

0000000000402880 <tcgetpgrp@plt>:
  402880:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #472]
  402888:	add	x16, x16, #0x1d8
  40288c:	br	x17

0000000000402890 <__gmon_start__@plt>:
  402890:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #480]
  402898:	add	x16, x16, #0x1e0
  40289c:	br	x17

00000000004028a0 <mktime@plt>:
  4028a0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #488]
  4028a8:	add	x16, x16, #0x1e8
  4028ac:	br	x17

00000000004028b0 <strtoumax@plt>:
  4028b0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #496]
  4028b8:	add	x16, x16, #0x1f0
  4028bc:	br	x17

00000000004028c0 <abort@plt>:
  4028c0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #504]
  4028c8:	add	x16, x16, #0x1f8
  4028cc:	br	x17

00000000004028d0 <mbsinit@plt>:
  4028d0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #512]
  4028d8:	add	x16, x16, #0x200
  4028dc:	br	x17

00000000004028e0 <gnu_dev_major@plt>:
  4028e0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #520]
  4028e8:	add	x16, x16, #0x208
  4028ec:	br	x17

00000000004028f0 <getxattr@plt>:
  4028f0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #528]
  4028f8:	add	x16, x16, #0x210
  4028fc:	br	x17

0000000000402900 <textdomain@plt>:
  402900:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #536]
  402908:	add	x16, x16, #0x218
  40290c:	br	x17

0000000000402910 <stpncpy@plt>:
  402910:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #544]
  402918:	add	x16, x16, #0x220
  40291c:	br	x17

0000000000402920 <getopt_long@plt>:
  402920:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #552]
  402928:	add	x16, x16, #0x228
  40292c:	br	x17

0000000000402930 <__fprintf_chk@plt>:
  402930:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #560]
  402938:	add	x16, x16, #0x230
  40293c:	br	x17

0000000000402940 <sigismember@plt>:
  402940:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #568]
  402948:	add	x16, x16, #0x238
  40294c:	br	x17

0000000000402950 <strcmp@plt>:
  402950:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #576]
  402958:	add	x16, x16, #0x240
  40295c:	br	x17

0000000000402960 <getpwuid@plt>:
  402960:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #584]
  402968:	add	x16, x16, #0x248
  40296c:	br	x17

0000000000402970 <__ctype_b_loc@plt>:
  402970:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #592]
  402978:	add	x16, x16, #0x250
  40297c:	br	x17

0000000000402980 <fseeko@plt>:
  402980:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #600]
  402988:	add	x16, x16, #0x258
  40298c:	br	x17

0000000000402990 <free@plt>:
  402990:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #608]
  402998:	add	x16, x16, #0x260
  40299c:	br	x17

00000000004029a0 <__ctype_get_mb_cur_max@plt>:
  4029a0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #616]
  4029a8:	add	x16, x16, #0x268
  4029ac:	br	x17

00000000004029b0 <strspn@plt>:
  4029b0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #624]
  4029b8:	add	x16, x16, #0x270
  4029bc:	br	x17

00000000004029c0 <strchr@plt>:
  4029c0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #632]
  4029c8:	add	x16, x16, #0x278
  4029cc:	br	x17

00000000004029d0 <fwrite@plt>:
  4029d0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #640]
  4029d8:	add	x16, x16, #0x280
  4029dc:	br	x17

00000000004029e0 <fnmatch@plt>:
  4029e0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #648]
  4029e8:	add	x16, x16, #0x288
  4029ec:	br	x17

00000000004029f0 <fflush_unlocked@plt>:
  4029f0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #656]
  4029f8:	add	x16, x16, #0x290
  4029fc:	br	x17

0000000000402a00 <fflush@plt>:
  402a00:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #664]
  402a08:	add	x16, x16, #0x298
  402a0c:	br	x17

0000000000402a10 <gnu_dev_minor@plt>:
  402a10:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #672]
  402a18:	add	x16, x16, #0x2a0
  402a1c:	br	x17

0000000000402a20 <strcpy@plt>:
  402a20:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #680]
  402a28:	add	x16, x16, #0x2a8
  402a2c:	br	x17

0000000000402a30 <dirfd@plt>:
  402a30:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #688]
  402a38:	add	x16, x16, #0x2b0
  402a3c:	br	x17

0000000000402a40 <unsetenv@plt>:
  402a40:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #696]
  402a48:	add	x16, x16, #0x2b8
  402a4c:	br	x17

0000000000402a50 <__lxstat@plt>:
  402a50:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #704]
  402a58:	add	x16, x16, #0x2c0
  402a5c:	br	x17

0000000000402a60 <cap_get_file@plt>:
  402a60:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #712]
  402a68:	add	x16, x16, #0x2c8
  402a6c:	br	x17

0000000000402a70 <isatty@plt>:
  402a70:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #720]
  402a78:	add	x16, x16, #0x2d0
  402a7c:	br	x17

0000000000402a80 <wcstombs@plt>:
  402a80:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #728]
  402a88:	add	x16, x16, #0x2d8
  402a8c:	br	x17

0000000000402a90 <gethostname@plt>:
  402a90:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #736]
  402a98:	add	x16, x16, #0x2e0
  402a9c:	br	x17

0000000000402aa0 <__mempcpy_chk@plt>:
  402aa0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #744]
  402aa8:	add	x16, x16, #0x2e8
  402aac:	br	x17

0000000000402ab0 <cap_free@plt>:
  402ab0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #752]
  402ab8:	add	x16, x16, #0x2f0
  402abc:	br	x17

0000000000402ac0 <__fxstat@plt>:
  402ac0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #760]
  402ac8:	add	x16, x16, #0x2f8
  402acc:	br	x17

0000000000402ad0 <dcgettext@plt>:
  402ad0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #768]
  402ad8:	add	x16, x16, #0x300
  402adc:	br	x17

0000000000402ae0 <fputs_unlocked@plt>:
  402ae0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #776]
  402ae8:	add	x16, x16, #0x308
  402aec:	br	x17

0000000000402af0 <strcoll@plt>:
  402af0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #784]
  402af8:	add	x16, x16, #0x310
  402afc:	br	x17

0000000000402b00 <__freading@plt>:
  402b00:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #792]
  402b08:	add	x16, x16, #0x318
  402b0c:	br	x17

0000000000402b10 <sigaddset@plt>:
  402b10:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #800]
  402b18:	add	x16, x16, #0x320
  402b1c:	br	x17

0000000000402b20 <iswprint@plt>:
  402b20:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #808]
  402b28:	add	x16, x16, #0x328
  402b2c:	br	x17

0000000000402b30 <__assert_fail@plt>:
  402b30:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #816]
  402b38:	add	x16, x16, #0x330
  402b3c:	br	x17

0000000000402b40 <__errno_location@plt>:
  402b40:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #824]
  402b48:	add	x16, x16, #0x338
  402b4c:	br	x17

0000000000402b50 <getenv@plt>:
  402b50:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #832]
  402b58:	add	x16, x16, #0x340
  402b5c:	br	x17

0000000000402b60 <__xstat@plt>:
  402b60:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #840]
  402b68:	add	x16, x16, #0x348
  402b6c:	br	x17

0000000000402b70 <getgrgid@plt>:
  402b70:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #848]
  402b78:	add	x16, x16, #0x350
  402b7c:	br	x17

0000000000402b80 <timegm@plt>:
  402b80:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #856]
  402b88:	add	x16, x16, #0x358
  402b8c:	br	x17

0000000000402b90 <ioctl@plt>:
  402b90:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #864]
  402b98:	add	x16, x16, #0x360
  402b9c:	br	x17

0000000000402ba0 <setlocale@plt>:
  402ba0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #872]
  402ba8:	add	x16, x16, #0x368
  402bac:	br	x17

0000000000402bb0 <__fxstatat@plt>:
  402bb0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #880]
  402bb8:	add	x16, x16, #0x370
  402bbc:	br	x17

Disassembly of section .text:

0000000000402bc0 <_obstack_begin@@Base-0xfc68>:
  402bc0:	mov	x29, #0x0                   	// #0
  402bc4:	mov	x30, #0x0                   	// #0
  402bc8:	mov	x5, x0
  402bcc:	ldr	x1, [sp]
  402bd0:	add	x2, sp, #0x8
  402bd4:	mov	x6, sp
  402bd8:	movz	x0, #0x0, lsl #48
  402bdc:	movk	x0, #0x0, lsl #32
  402be0:	movk	x0, #0x40, lsl #16
  402be4:	movk	x0, #0x2ccc
  402be8:	movz	x3, #0x0, lsl #48
  402bec:	movk	x3, #0x0, lsl #32
  402bf0:	movk	x3, #0x41, lsl #16
  402bf4:	movk	x3, #0x4ac8
  402bf8:	movz	x4, #0x0, lsl #48
  402bfc:	movk	x4, #0x0, lsl #32
  402c00:	movk	x4, #0x41, lsl #16
  402c04:	movk	x4, #0x4b48
  402c08:	bl	4027a0 <__libc_start_main@plt>
  402c0c:	bl	4028c0 <abort@plt>
  402c10:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x174b8>
  402c14:	ldr	x0, [x0, #4064]
  402c18:	cbz	x0, 402c20 <__fxstatat@plt+0x70>
  402c1c:	b	402890 <__gmon_start__@plt>
  402c20:	ret
  402c24:	nop
  402c28:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402c2c:	add	x0, x0, #0x5a8
  402c30:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402c34:	add	x1, x1, #0x5a8
  402c38:	cmp	x1, x0
  402c3c:	b.eq	402c54 <__fxstatat@plt+0xa4>  // b.none
  402c40:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x14b8>
  402c44:	ldr	x1, [x1, #3016]
  402c48:	cbz	x1, 402c54 <__fxstatat@plt+0xa4>
  402c4c:	mov	x16, x1
  402c50:	br	x16
  402c54:	ret
  402c58:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402c5c:	add	x0, x0, #0x5a8
  402c60:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402c64:	add	x1, x1, #0x5a8
  402c68:	sub	x1, x1, x0
  402c6c:	lsr	x2, x1, #63
  402c70:	add	x1, x2, x1, asr #3
  402c74:	cmp	xzr, x1, asr #1
  402c78:	asr	x1, x1, #1
  402c7c:	b.eq	402c94 <__fxstatat@plt+0xe4>  // b.none
  402c80:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x14b8>
  402c84:	ldr	x2, [x2, #3024]
  402c88:	cbz	x2, 402c94 <__fxstatat@plt+0xe4>
  402c8c:	mov	x16, x2
  402c90:	br	x16
  402c94:	ret
  402c98:	stp	x29, x30, [sp, #-32]!
  402c9c:	mov	x29, sp
  402ca0:	str	x19, [sp, #16]
  402ca4:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402ca8:	ldrb	w0, [x19, #1496]
  402cac:	cbnz	w0, 402cbc <__fxstatat@plt+0x10c>
  402cb0:	bl	402c28 <__fxstatat@plt+0x78>
  402cb4:	mov	w0, #0x1                   	// #1
  402cb8:	strb	w0, [x19, #1496]
  402cbc:	ldr	x19, [sp, #16]
  402cc0:	ldp	x29, x30, [sp], #32
  402cc4:	ret
  402cc8:	b	402c58 <__fxstatat@plt+0xa8>
  402ccc:	sub	sp, sp, #0x70
  402cd0:	stp	x29, x30, [sp, #16]
  402cd4:	stp	x28, x27, [sp, #32]
  402cd8:	stp	x26, x25, [sp, #48]
  402cdc:	stp	x24, x23, [sp, #64]
  402ce0:	stp	x22, x21, [sp, #80]
  402ce4:	stp	x20, x19, [sp, #96]
  402ce8:	ldr	x8, [x1]
  402cec:	mov	w20, w0
  402cf0:	add	x29, sp, #0x10
  402cf4:	mov	x19, x1
  402cf8:	mov	x0, x8
  402cfc:	bl	40f7e4 <__fxstatat@plt+0xcc34>
  402d00:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  402d04:	add	x1, x1, #0xe71
  402d08:	mov	w0, #0x6                   	// #6
  402d0c:	bl	402ba0 <setlocale@plt>
  402d10:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x54b8>
  402d14:	add	x22, x22, #0x992
  402d18:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x34b8>
  402d1c:	add	x1, x1, #0xad0
  402d20:	mov	x0, x22
  402d24:	bl	402790 <bindtextdomain@plt>
  402d28:	mov	x0, x22
  402d2c:	bl	402900 <textdomain@plt>
  402d30:	bl	403310 <__fxstatat@plt+0x760>
  402d34:	adrp	x0, 40a000 <__fxstatat@plt+0x7450>
  402d38:	add	x0, x0, #0xe08
  402d3c:	bl	414b50 <_obstack_memory_used@@Base+0x2008>
  402d40:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402d44:	adrp	x12, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402d48:	adrp	x26, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402d4c:	mov	w8, #0x1                   	// #1
  402d50:	adrp	x28, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402d54:	add	x9, x9, #0x5f0
  402d58:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  402d5c:	mov	x11, #0xffffffffffffffff    	// #-1
  402d60:	mov	w0, w20
  402d64:	mov	x1, x19
  402d68:	str	wzr, [x12, #1504]
  402d6c:	strb	w8, [x26, #1508]
  402d70:	str	xzr, [x28, #1512]
  402d74:	stp	x10, x11, [x9]
  402d78:	bl	403320 <__fxstatat@plt+0x770>
  402d7c:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402d80:	ldrb	w8, [x21, #1536]
  402d84:	mov	w22, w0
  402d88:	cbz	w8, 402d90 <__fxstatat@plt+0x1e0>
  402d8c:	bl	4040dc <__fxstatat@plt+0x152c>
  402d90:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402d94:	ldrb	w8, [x23, #1537]
  402d98:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402d9c:	cmp	w8, #0x1
  402da0:	b.eq	402de4 <__fxstatat@plt+0x234>  // b.none
  402da4:	ldrb	w8, [x21, #1536]
  402da8:	cbz	w8, 402df0 <__fxstatat@plt+0x240>
  402dac:	mov	w0, #0xd                   	// #13
  402db0:	bl	40440c <__fxstatat@plt+0x185c>
  402db4:	tbnz	w0, #0, 402de4 <__fxstatat@plt+0x234>
  402db8:	mov	w0, #0xe                   	// #14
  402dbc:	bl	40440c <__fxstatat@plt+0x185c>
  402dc0:	tbz	w0, #0, 402dd0 <__fxstatat@plt+0x220>
  402dc4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402dc8:	ldrb	w8, [x8, #1539]
  402dcc:	tbnz	w8, #0, 402de4 <__fxstatat@plt+0x234>
  402dd0:	mov	w0, #0xc                   	// #12
  402dd4:	bl	40440c <__fxstatat@plt+0x185c>
  402dd8:	tbz	w0, #0, 402df0 <__fxstatat@plt+0x240>
  402ddc:	ldr	w8, [x24, #1540]
  402de0:	cbnz	w8, 402df0 <__fxstatat@plt+0x240>
  402de4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402de8:	mov	w9, #0x1                   	// #1
  402dec:	strb	w9, [x8, #1538]
  402df0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402df4:	ldr	w9, [x8, #1544]
  402df8:	cmp	w9, #0x1
  402dfc:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402e00:	b.ne	402e40 <__fxstatat@plt+0x290>  // b.any
  402e04:	ldrb	w10, [x9, #1548]
  402e08:	mov	w9, #0x1                   	// #1
  402e0c:	tbnz	w10, #0, 402e2c <__fxstatat@plt+0x27c>
  402e10:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402e14:	ldr	w10, [x10, #1552]
  402e18:	cmp	w10, #0x3
  402e1c:	b.eq	402e2c <__fxstatat@plt+0x27c>  // b.none
  402e20:	ldr	w9, [x24, #1540]
  402e24:	cmp	w9, #0x0
  402e28:	cset	w9, eq  // eq = none
  402e2c:	cmp	w9, #0x0
  402e30:	mov	w9, #0x4                   	// #4
  402e34:	mov	w10, #0x2                   	// #2
  402e38:	csel	w9, w10, w9, ne  // ne = any
  402e3c:	str	w9, [x8, #1544]
  402e40:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402e44:	ldrb	w8, [x25, #1556]
  402e48:	adrp	x27, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402e4c:	cmp	w8, #0x1
  402e50:	b.ne	402ea4 <__fxstatat@plt+0x2f4>  // b.any
  402e54:	adrp	x2, 404000 <__fxstatat@plt+0x1450>
  402e58:	adrp	x3, 404000 <__fxstatat@plt+0x1450>
  402e5c:	adrp	x4, 404000 <__fxstatat@plt+0x1450>
  402e60:	add	x2, x2, #0x488
  402e64:	add	x3, x3, #0x498
  402e68:	add	x4, x4, #0x4c4
  402e6c:	mov	w0, #0x1e                  	// #30
  402e70:	mov	x1, xzr
  402e74:	bl	40bdd0 <__fxstatat@plt+0x9220>
  402e78:	str	x0, [x27, #1560]
  402e7c:	cbz	x0, 40330c <__fxstatat@plt+0x75c>
  402e80:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402e84:	adrp	x3, 402000 <mbrtowc@plt-0x4d0>
  402e88:	adrp	x4, 402000 <mbrtowc@plt-0x4d0>
  402e8c:	add	x0, x0, #0x620
  402e90:	add	x3, x3, #0x730
  402e94:	add	x4, x4, #0x990
  402e98:	mov	x1, xzr
  402e9c:	mov	x2, xzr
  402ea0:	bl	412828 <_obstack_begin@@Base>
  402ea4:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x34b8>
  402ea8:	add	x0, x0, #0xae2
  402eac:	bl	402b50 <getenv@plt>
  402eb0:	bl	412bbc <_obstack_memory_used@@Base+0x74>
  402eb4:	ldr	w8, [x24, #1540]
  402eb8:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402ebc:	str	x0, [x9, #1656]
  402ec0:	cbz	w8, 402ef8 <__fxstatat@plt+0x348>
  402ec4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402ec8:	ldr	w9, [x8, #1664]
  402ecc:	mov	w8, #0x1                   	// #1
  402ed0:	cmp	w9, #0x2
  402ed4:	b.eq	402efc <__fxstatat@plt+0x34c>  // b.none
  402ed8:	cmp	w9, #0x4
  402edc:	b.eq	402efc <__fxstatat@plt+0x34c>  // b.none
  402ee0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402ee4:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402ee8:	ldrb	w8, [x8, #1668]
  402eec:	ldrb	w9, [x9, #1669]
  402ef0:	orr	w8, w8, w9
  402ef4:	b	402efc <__fxstatat@plt+0x34c>
  402ef8:	mov	w8, #0x1                   	// #1
  402efc:	and	w9, w8, #0x1
  402f00:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402f04:	strb	w9, [x10, #1672]
  402f08:	tbz	w8, #0, 402f14 <__fxstatat@plt+0x364>
  402f0c:	mov	w8, wzr
  402f10:	b	402f44 <__fxstatat@plt+0x394>
  402f14:	ldrb	w8, [x25, #1556]
  402f18:	tbz	w8, #0, 402f24 <__fxstatat@plt+0x374>
  402f1c:	mov	w8, #0x1                   	// #1
  402f20:	b	402f44 <__fxstatat@plt+0x394>
  402f24:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402f28:	ldrb	w8, [x21, #1536]
  402f2c:	ldr	w9, [x9, #1552]
  402f30:	ldrb	w10, [x23, #1537]
  402f34:	orr	w8, w8, w9
  402f38:	cmp	w8, #0x0
  402f3c:	cset	w8, ne  // ne = any
  402f40:	orr	w8, w10, w8
  402f44:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402f48:	ldrb	w9, [x9, #1677]
  402f4c:	and	w8, w8, #0x1
  402f50:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402f54:	strb	w8, [x10, #1676]
  402f58:	cmp	w9, #0x1
  402f5c:	b.ne	402fa8 <__fxstatat@plt+0x3f8>  // b.any
  402f60:	adrp	x23, 402000 <mbrtowc@plt-0x4d0>
  402f64:	adrp	x24, 402000 <mbrtowc@plt-0x4d0>
  402f68:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402f6c:	add	x23, x23, #0x730
  402f70:	add	x24, x24, #0x990
  402f74:	add	x0, x0, #0x690
  402f78:	mov	x1, xzr
  402f7c:	mov	x2, xzr
  402f80:	mov	x3, x23
  402f84:	mov	x4, x24
  402f88:	bl	412828 <_obstack_begin@@Base>
  402f8c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402f90:	add	x0, x0, #0x6e8
  402f94:	mov	x1, xzr
  402f98:	mov	x2, xzr
  402f9c:	mov	x3, x23
  402fa0:	mov	x4, x24
  402fa4:	bl	412828 <_obstack_begin@@Base>
  402fa8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402fac:	ldrb	w8, [x8, #1856]
  402fb0:	cbz	w8, 402fd4 <__fxstatat@plt+0x424>
  402fb4:	bl	4044d8 <__fxstatat@plt+0x1928>
  402fb8:	bl	411ee4 <__fxstatat@plt+0xf334>
  402fbc:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x54b8>
  402fc0:	cmp	x0, #0x0
  402fc4:	add	x8, x8, #0xe71
  402fc8:	csel	x8, x8, x0, eq  // eq = none
  402fcc:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402fd0:	str	x8, [x9, #1864]
  402fd4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402fd8:	mov	w9, #0x64                  	// #100
  402fdc:	mov	w0, #0x64                  	// #100
  402fe0:	mov	w1, #0xb8                  	// #184
  402fe4:	str	x9, [x8, #1872]
  402fe8:	bl	411b18 <__fxstatat@plt+0xef68>
  402fec:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402ff0:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x184b8>
  402ff4:	str	x0, [x8, #1880]
  402ff8:	str	xzr, [x23, #1888]
  402ffc:	bl	404550 <__fxstatat@plt+0x19a0>
  403000:	sub	w24, w20, w22
  403004:	mov	x25, x21
  403008:	cmp	w24, #0x1
  40300c:	b.lt	403044 <__fxstatat@plt+0x494>  // b.tstop
  403010:	sxtw	x21, w22
  403014:	sxtw	x22, w20
  403018:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x54b8>
  40301c:	add	x20, x20, #0xe71
  403020:	ldr	x0, [x19, x21, lsl #3]
  403024:	mov	w2, #0x1                   	// #1
  403028:	mov	w1, wzr
  40302c:	mov	x3, x20
  403030:	add	x21, x21, #0x1
  403034:	bl	404604 <__fxstatat@plt+0x1a54>
  403038:	cmp	x21, x22
  40303c:	b.lt	403020 <__fxstatat@plt+0x470>  // b.tstop
  403040:	b	403070 <__fxstatat@plt+0x4c0>
  403044:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403048:	ldrb	w8, [x8, #1548]
  40304c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x64b8>
  403050:	add	x0, x0, #0x264
  403054:	cmp	w8, #0x1
  403058:	b.ne	4032a4 <__fxstatat@plt+0x6f4>  // b.any
  40305c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x54b8>
  403060:	add	x3, x3, #0xe71
  403064:	mov	w1, #0x3                   	// #3
  403068:	mov	w2, #0x1                   	// #1
  40306c:	bl	404604 <__fxstatat@plt+0x1a54>
  403070:	ldr	x8, [x23, #1888]
  403074:	cbz	x8, 403094 <__fxstatat@plt+0x4e4>
  403078:	bl	405024 <__fxstatat@plt+0x2474>
  40307c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403080:	ldrb	w8, [x8, #1548]
  403084:	tbnz	w8, #0, 403094 <__fxstatat@plt+0x4e4>
  403088:	mov	w1, #0x1                   	// #1
  40308c:	mov	x0, xzr
  403090:	bl	405134 <__fxstatat@plt+0x2584>
  403094:	ldr	x8, [x23, #1888]
  403098:	cbz	x8, 4030cc <__fxstatat@plt+0x51c>
  40309c:	bl	405278 <__fxstatat@plt+0x26c8>
  4030a0:	ldr	x8, [x28, #1512]
  4030a4:	cbz	x8, 4030e4 <__fxstatat@plt+0x534>
  4030a8:	mov	w0, #0xa                   	// #10
  4030ac:	bl	4027f0 <putchar_unlocked@plt>
  4030b0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4030b4:	ldr	x9, [x8, #1896]
  4030b8:	add	x9, x9, #0x1
  4030bc:	str	x9, [x8, #1896]
  4030c0:	ldr	x19, [x28, #1512]
  4030c4:	cbnz	x19, 4030ec <__fxstatat@plt+0x53c>
  4030c8:	b	40315c <__fxstatat@plt+0x5ac>
  4030cc:	cmp	w24, #0x1
  4030d0:	b.gt	4030e4 <__fxstatat@plt+0x534>
  4030d4:	ldr	x8, [x28, #1512]
  4030d8:	cbz	x8, 4030e4 <__fxstatat@plt+0x534>
  4030dc:	ldr	x8, [x8, #24]
  4030e0:	cbz	x8, 4032bc <__fxstatat@plt+0x70c>
  4030e4:	ldr	x19, [x28, #1512]
  4030e8:	cbz	x19, 40315c <__fxstatat@plt+0x5ac>
  4030ec:	mov	w20, #0x1                   	// #1
  4030f0:	b	403114 <__fxstatat@plt+0x564>
  4030f4:	ldp	x0, x1, [x19]
  4030f8:	ldrb	w2, [x19, #16]
  4030fc:	bl	405418 <__fxstatat@plt+0x2868>
  403100:	mov	x0, x19
  403104:	bl	4053e4 <__fxstatat@plt+0x2834>
  403108:	strb	w20, [x26, #1508]
  40310c:	ldr	x19, [x28, #1512]
  403110:	cbz	x19, 40315c <__fxstatat@plt+0x5ac>
  403114:	ldr	x8, [x19, #24]
  403118:	ldr	x9, [x27, #1560]
  40311c:	str	x8, [x28, #1512]
  403120:	cbz	x9, 4030f4 <__fxstatat@plt+0x544>
  403124:	ldr	x8, [x19]
  403128:	cbnz	x8, 4030f4 <__fxstatat@plt+0x544>
  40312c:	bl	405388 <__fxstatat@plt+0x27d8>
  403130:	ldr	x8, [x27, #1560]
  403134:	stp	x0, x1, [sp]
  403138:	mov	x1, sp
  40313c:	mov	x0, x8
  403140:	bl	40c674 <__fxstatat@plt+0x9ac4>
  403144:	cbz	x0, 4032cc <__fxstatat@plt+0x71c>
  403148:	bl	4044c4 <__fxstatat@plt+0x1914>
  40314c:	mov	x0, x19
  403150:	bl	4053e4 <__fxstatat@plt+0x2834>
  403154:	ldr	x19, [x28, #1512]
  403158:	cbnz	x19, 403114 <__fxstatat@plt+0x564>
  40315c:	ldrb	w8, [x25, #1536]
  403160:	cbz	w8, 403200 <__fxstatat@plt+0x650>
  403164:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403168:	ldrb	w8, [x8, #1904]
  40316c:	cmp	w8, #0x1
  403170:	b.ne	403200 <__fxstatat@plt+0x650>  // b.any
  403174:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403178:	ldr	x8, [x8, #904]
  40317c:	cmp	x8, #0x2
  403180:	b.ne	4031c0 <__fxstatat@plt+0x610>  // b.any
  403184:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403188:	add	x8, x8, #0x390
  40318c:	ldr	x9, [x8]
  403190:	mov	w10, #0x5b1b                	// #23323
  403194:	ldrh	w9, [x9]
  403198:	cmp	w9, w10
  40319c:	b.ne	4031c0 <__fxstatat@plt+0x610>  // b.any
  4031a0:	ldr	x8, [x8, #8]
  4031a4:	cmp	x8, #0x1
  4031a8:	b.ne	4031c0 <__fxstatat@plt+0x610>  // b.any
  4031ac:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4031b0:	ldr	x8, [x8, #928]
  4031b4:	ldrb	w8, [x8]
  4031b8:	cmp	w8, #0x6d
  4031bc:	b.eq	4031c4 <__fxstatat@plt+0x614>  // b.none
  4031c0:	bl	4058c0 <__fxstatat@plt+0x2d10>
  4031c4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4031c8:	ldr	x0, [x8, #1480]
  4031cc:	bl	4029f0 <fflush_unlocked@plt>
  4031d0:	bl	4058f0 <__fxstatat@plt+0x2d40>
  4031d4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4031d8:	ldr	w19, [x8, #1908]
  4031dc:	cbz	w19, 4031f0 <__fxstatat@plt+0x640>
  4031e0:	mov	w0, #0x13                  	// #19
  4031e4:	bl	4025a0 <raise@plt>
  4031e8:	subs	w19, w19, #0x1
  4031ec:	b.ne	4031e0 <__fxstatat@plt+0x630>  // b.any
  4031f0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4031f4:	ldr	w0, [x8, #1912]
  4031f8:	cbz	w0, 403200 <__fxstatat@plt+0x650>
  4031fc:	bl	4025a0 <raise@plt>
  403200:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403204:	ldrb	w8, [x8, #1677]
  403208:	cmp	w8, #0x1
  40320c:	b.ne	403260 <__fxstatat@plt+0x6b0>  // b.any
  403210:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x34b8>
  403214:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403218:	add	x0, x0, #0xb0e
  40321c:	add	x1, x1, #0x690
  403220:	bl	405908 <__fxstatat@plt+0x2d58>
  403224:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x34b8>
  403228:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40322c:	add	x0, x0, #0xb18
  403230:	add	x1, x1, #0x6e8
  403234:	bl	405908 <__fxstatat@plt+0x2d58>
  403238:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40323c:	ldr	x0, [x8, #1920]
  403240:	bl	40f8dc <__fxstatat@plt+0xcd2c>
  403244:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x64b8>
  403248:	add	x8, x8, #0x5e8
  40324c:	ldr	x2, [x8, w0, uxtw #3]
  403250:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x34b8>
  403254:	add	x1, x1, #0xb25
  403258:	mov	w0, #0x1                   	// #1
  40325c:	bl	4027b0 <__printf_chk@plt>
  403260:	ldr	x19, [x27, #1560]
  403264:	cbz	x19, 40327c <__fxstatat@plt+0x6cc>
  403268:	mov	x0, x19
  40326c:	bl	40b96c <__fxstatat@plt+0x8dbc>
  403270:	cbnz	x0, 4032ec <__fxstatat@plt+0x73c>
  403274:	mov	x0, x19
  403278:	bl	40c084 <__fxstatat@plt+0x94d4>
  40327c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403280:	ldr	w0, [x8, #1504]
  403284:	ldp	x20, x19, [sp, #96]
  403288:	ldp	x22, x21, [sp, #80]
  40328c:	ldp	x24, x23, [sp, #64]
  403290:	ldp	x26, x25, [sp, #48]
  403294:	ldp	x28, x27, [sp, #32]
  403298:	ldp	x29, x30, [sp, #16]
  40329c:	add	sp, sp, #0x70
  4032a0:	ret
  4032a4:	mov	w2, #0x1                   	// #1
  4032a8:	mov	x1, xzr
  4032ac:	bl	404fa4 <__fxstatat@plt+0x23f4>
  4032b0:	ldr	x8, [x23, #1888]
  4032b4:	cbnz	x8, 403078 <__fxstatat@plt+0x4c8>
  4032b8:	b	403094 <__fxstatat@plt+0x4e4>
  4032bc:	strb	wzr, [x26, #1508]
  4032c0:	ldr	x19, [x28, #1512]
  4032c4:	cbnz	x19, 4030ec <__fxstatat@plt+0x53c>
  4032c8:	b	40315c <__fxstatat@plt+0x5ac>
  4032cc:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x34b8>
  4032d0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x34b8>
  4032d4:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x34b8>
  4032d8:	add	x0, x0, #0xae5
  4032dc:	add	x1, x1, #0xaeb
  4032e0:	add	x3, x3, #0xaf4
  4032e4:	mov	w2, #0x640                 	// #1600
  4032e8:	bl	402b30 <__assert_fail@plt>
  4032ec:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x34b8>
  4032f0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x34b8>
  4032f4:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x34b8>
  4032f8:	add	x0, x0, #0xb4b
  4032fc:	add	x1, x1, #0xaeb
  403300:	add	x3, x3, #0xaf4
  403304:	mov	w2, #0x674                 	// #1652
  403308:	bl	402b30 <__assert_fail@plt>
  40330c:	bl	411d48 <__fxstatat@plt+0xf198>
  403310:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403314:	mov	w9, #0x2                   	// #2
  403318:	str	w9, [x8, #1344]
  40331c:	ret
  403320:	sub	sp, sp, #0x70
  403324:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403328:	ldr	w8, [x8, #1320]
  40332c:	stp	x22, x21, [sp, #80]
  403330:	stp	x20, x19, [sp, #96]
  403334:	mov	x20, x1
  403338:	mov	w21, w0
  40333c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403340:	cmp	w8, #0x1
  403344:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403348:	stp	x29, x30, [sp, #16]
  40334c:	stp	x28, x27, [sp, #32]
  403350:	stp	x26, x25, [sp, #48]
  403354:	stp	x24, x23, [sp, #64]
  403358:	add	x29, sp, #0x10
  40335c:	strb	wzr, [x9, #2312]
  403360:	b.eq	403390 <__fxstatat@plt+0x7e0>  // b.none
  403364:	cmp	w8, #0x3
  403368:	b.eq	40337c <__fxstatat@plt+0x7cc>  // b.none
  40336c:	cmp	w8, #0x2
  403370:	b.ne	404020 <__fxstatat@plt+0x1470>  // b.any
  403374:	str	w8, [x22, #1540]
  403378:	b	403380 <__fxstatat@plt+0x7d0>
  40337c:	str	wzr, [x22, #1540]
  403380:	mov	w1, #0x7                   	// #7
  403384:	mov	x0, xzr
  403388:	bl	40f8f4 <__fxstatat@plt+0xcd44>
  40338c:	b	4033cc <__fxstatat@plt+0x81c>
  403390:	mov	w0, #0x1                   	// #1
  403394:	mov	w19, #0x1                   	// #1
  403398:	bl	402a70 <isatty@plt>
  40339c:	cbz	w0, 4033c0 <__fxstatat@plt+0x810>
  4033a0:	mov	w8, #0x2                   	// #2
  4033a4:	mov	w1, #0x3                   	// #3
  4033a8:	mov	x0, xzr
  4033ac:	str	w8, [x22, #1540]
  4033b0:	bl	40f8f4 <__fxstatat@plt+0xcd44>
  4033b4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4033b8:	strb	w19, [x8, #2312]
  4033bc:	b	4033cc <__fxstatat@plt+0x81c>
  4033c0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4033c4:	str	w19, [x22, #1540]
  4033c8:	strb	wzr, [x8, #2312]
  4033cc:	adrp	x17, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4033d0:	mov	w8, #0x1                   	// #1
  4033d4:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4033d8:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4033dc:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4033e0:	adrp	x13, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4033e4:	adrp	x14, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4033e8:	adrp	x15, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4033ec:	adrp	x12, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4033f0:	adrp	x16, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4033f4:	adrp	x18, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4033f8:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4033fc:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403400:	str	w8, [x17, #1544]
  403404:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403408:	str	xzr, [x9, #2328]
  40340c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403410:	str	wzr, [x11, #2316]
  403414:	str	wzr, [x10, #1664]
  403418:	strb	wzr, [x13, #2320]
  40341c:	strb	wzr, [x14, #2321]
  403420:	strb	wzr, [x15, #1669]
  403424:	str	wzr, [x12, #1552]
  403428:	strb	wzr, [x16, #2322]
  40342c:	strb	wzr, [x18, #1556]
  403430:	strb	wzr, [x0, #1548]
  403434:	str	wzr, [x1, #2324]
  403438:	str	xzr, [x8, #2336]
  40343c:	strb	wzr, [x9, #1668]
  403440:	bl	406190 <__fxstatat@plt+0x35e0>
  403444:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  403448:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40344c:	mov	w8, #0x50                  	// #80
  403450:	add	x0, x0, #0x854
  403454:	str	x8, [x23, #2344]
  403458:	bl	402b50 <getenv@plt>
  40345c:	cbz	x0, 4034ac <__fxstatat@plt+0x8fc>
  403460:	ldrb	w8, [x0]
  403464:	mov	x19, x0
  403468:	cbz	w8, 4034ac <__fxstatat@plt+0x8fc>
  40346c:	mov	x0, x19
  403470:	bl	406224 <__fxstatat@plt+0x3674>
  403474:	tbnz	w0, #0, 4034ac <__fxstatat@plt+0x8fc>
  403478:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  40347c:	add	x1, x1, #0x85c
  403480:	mov	w2, #0x5                   	// #5
  403484:	mov	x0, xzr
  403488:	bl	402ad0 <dcgettext@plt>
  40348c:	mov	x22, x0
  403490:	mov	x0, x19
  403494:	bl	410d7c <__fxstatat@plt+0xe1cc>
  403498:	mov	x3, x0
  40349c:	mov	w0, wzr
  4034a0:	mov	w1, wzr
  4034a4:	mov	x2, x22
  4034a8:	bl	4025b0 <error@plt>
  4034ac:	add	x2, sp, #0x8
  4034b0:	mov	w0, #0x1                   	// #1
  4034b4:	mov	w1, #0x5413                	// #21523
  4034b8:	bl	402b90 <ioctl@plt>
  4034bc:	cmn	w0, #0x1
  4034c0:	b.eq	4034d0 <__fxstatat@plt+0x920>  // b.none
  4034c4:	ldrh	w8, [sp, #10]
  4034c8:	cbz	x8, 4034d0 <__fxstatat@plt+0x920>
  4034cc:	str	x8, [x23, #2344]
  4034d0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  4034d4:	add	x0, x0, #0x897
  4034d8:	bl	402b50 <getenv@plt>
  4034dc:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4034e0:	mov	w8, #0x8                   	// #8
  4034e4:	str	x8, [x9, #2352]
  4034e8:	cbz	x0, 40354c <__fxstatat@plt+0x99c>
  4034ec:	add	x3, sp, #0x8
  4034f0:	mov	x1, xzr
  4034f4:	mov	w2, wzr
  4034f8:	mov	x4, xzr
  4034fc:	mov	x19, x0
  403500:	bl	411fc4 <__fxstatat@plt+0xf414>
  403504:	cbz	w0, 403540 <__fxstatat@plt+0x990>
  403508:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  40350c:	add	x1, x1, #0x89f
  403510:	mov	w2, #0x5                   	// #5
  403514:	mov	x0, xzr
  403518:	bl	402ad0 <dcgettext@plt>
  40351c:	mov	x22, x0
  403520:	mov	x0, x19
  403524:	bl	410d7c <__fxstatat@plt+0xe1cc>
  403528:	mov	x3, x0
  40352c:	mov	w0, wzr
  403530:	mov	w1, wzr
  403534:	mov	x2, x22
  403538:	bl	4025b0 <error@plt>
  40353c:	b	40354c <__fxstatat@plt+0x99c>
  403540:	ldr	x8, [sp, #8]
  403544:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403548:	str	x8, [x9, #2352]
  40354c:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x54b8>
  403550:	adrp	x23, 414000 <_obstack_memory_used@@Base+0x14b8>
  403554:	adrp	x26, 414000 <_obstack_memory_used@@Base+0x14b8>
  403558:	mov	w25, wzr
  40355c:	mov	w27, wzr
  403560:	mov	x19, xzr
  403564:	mov	w28, #0xffffffff            	// #-1
  403568:	add	x22, x22, #0x8dd
  40356c:	add	x23, x23, #0xf50
  403570:	add	x26, x26, #0xbd8
  403574:	add	x4, sp, #0x8
  403578:	mov	w0, w21
  40357c:	mov	x1, x20
  403580:	mov	x2, x22
  403584:	mov	x3, x23
  403588:	str	w28, [sp, #8]
  40358c:	bl	402920 <getopt_long@plt>
  403590:	add	w8, w0, #0x3
  403594:	cmp	w8, #0x113
  403598:	b.hi	403f50 <__fxstatat@plt+0x13a0>  // b.pmore
  40359c:	adr	x10, 4035b4 <__fxstatat@plt+0xa04>
  4035a0:	ldrh	w11, [x26, x8, lsl #1]
  4035a4:	add	x10, x10, x11, lsl #2
  4035a8:	mov	w9, wzr
  4035ac:	mov	w8, #0x1                   	// #1
  4035b0:	br	x10
  4035b4:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4035b8:	ldr	w8, [x9, #1540]
  4035bc:	cbz	w8, 403adc <__fxstatat@plt+0xf2c>
  4035c0:	mov	w8, #0x1                   	// #1
  4035c4:	str	w8, [x9, #1540]
  4035c8:	b	403adc <__fxstatat@plt+0xf2c>
  4035cc:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x54b8>
  4035d0:	add	x19, x19, #0x94f
  4035d4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4035d8:	mov	x0, x19
  4035dc:	str	wzr, [x8, #1540]
  4035e0:	bl	4062b4 <__fxstatat@plt+0x3704>
  4035e4:	b	403adc <__fxstatat@plt+0xf2c>
  4035e8:	mov	w8, #0x1                   	// #1
  4035ec:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4035f0:	strb	w8, [x9, #2320]
  4035f4:	b	403adc <__fxstatat@plt+0xf2c>
  4035f8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4035fc:	strb	wzr, [x8, #2312]
  403600:	b	403adc <__fxstatat@plt+0xf2c>
  403604:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403608:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40360c:	ldr	x1, [x8, #1464]
  403610:	ldr	x5, [x9, #1336]
  403614:	adrp	x24, 415000 <_obstack_memory_used@@Base+0x24b8>
  403618:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  40361c:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x24b8>
  403620:	add	x24, x24, #0x518
  403624:	add	x0, x0, #0x93f
  403628:	add	x2, x2, #0x530
  40362c:	mov	w4, #0x4                   	// #4
  403630:	mov	x3, x24
  403634:	bl	40a4ec <__fxstatat@plt+0x793c>
  403638:	ldr	w8, [x24, x0, lsl #2]
  40363c:	b	4039c0 <__fxstatat@plt+0xe10>
  403640:	mov	w8, #0x1                   	// #1
  403644:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403648:	strb	w8, [x9, #2312]
  40364c:	b	403adc <__fxstatat@plt+0xf2c>
  403650:	mov	w8, #0x4                   	// #4
  403654:	b	403914 <__fxstatat@plt+0xd64>
  403658:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40365c:	str	wzr, [x8, #1540]
  403660:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403664:	mov	w9, #0x1                   	// #1
  403668:	strb	w9, [x8, #2360]
  40366c:	b	403adc <__fxstatat@plt+0xf2c>
  403670:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403674:	ldr	w8, [x8, #1540]
  403678:	mov	w9, #0x2                   	// #2
  40367c:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403680:	str	w9, [x10, #2324]
  403684:	mov	w9, #0xffffffff            	// #-1
  403688:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40368c:	str	w9, [x10, #1664]
  403690:	cbnz	w8, 4036b0 <__fxstatat@plt+0xb00>
  403694:	mov	w0, #0x1                   	// #1
  403698:	mov	w24, #0x1                   	// #1
  40369c:	bl	402a70 <isatty@plt>
  4036a0:	cmp	w0, #0x0
  4036a4:	cinc	w8, w24, ne  // ne = any
  4036a8:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4036ac:	str	w8, [x9, #1540]
  4036b0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4036b4:	strb	wzr, [x8, #1669]
  4036b8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4036bc:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4036c0:	strb	wzr, [x8, #1536]
  4036c4:	strb	wzr, [x9, #1856]
  4036c8:	mov	w27, #0x1                   	// #1
  4036cc:	b	403adc <__fxstatat@plt+0xf2c>
  4036d0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4036d4:	mov	w9, #0x1                   	// #1
  4036d8:	strb	w9, [x8, #1537]
  4036dc:	b	403adc <__fxstatat@plt+0xf2c>
  4036e0:	mov	w8, #0xffffffff            	// #-1
  4036e4:	b	4039ac <__fxstatat@plt+0xdfc>
  4036e8:	mov	w8, #0x3                   	// #3
  4036ec:	b	403a04 <__fxstatat@plt+0xe54>
  4036f0:	mov	w8, #0x2                   	// #2
  4036f4:	b	403868 <__fxstatat@plt+0xcb8>
  4036f8:	mov	w1, #0x7                   	// #7
  4036fc:	b	403a48 <__fxstatat@plt+0xe98>
  403700:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403704:	str	wzr, [x8, #1540]
  403708:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40370c:	mov	w9, #0x1                   	// #1
  403710:	strb	w9, [x8, #2384]
  403714:	b	403adc <__fxstatat@plt+0xf2c>
  403718:	mov	w27, #0x1                   	// #1
  40371c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403720:	str	w27, [x8, #1664]
  403724:	b	403adc <__fxstatat@plt+0xf2c>
  403728:	mov	w0, #0x10                  	// #16
  40372c:	bl	411b44 <__fxstatat@plt+0xef94>
  403730:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403734:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403738:	ldr	x8, [x8, #1464]
  40373c:	ldr	x9, [x10, #2336]
  403740:	str	x0, [x10, #2336]
  403744:	stp	x8, x9, [x0]
  403748:	b	403adc <__fxstatat@plt+0xf2c>
  40374c:	mov	w8, #0x1                   	// #1
  403750:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403754:	strb	w8, [x9, #2321]
  403758:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40375c:	str	wzr, [x8, #1540]
  403760:	b	403adc <__fxstatat@plt+0xf2c>
  403764:	mov	w8, #0x1                   	// #1
  403768:	b	403ad4 <__fxstatat@plt+0xf24>
  40376c:	mov	w8, #0x1                   	// #1
  403770:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403774:	strb	w8, [x9, #1556]
  403778:	b	403adc <__fxstatat@plt+0xf2c>
  40377c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403780:	mov	w9, #0x1                   	// #1
  403784:	strb	w9, [x8, #2385]
  403788:	b	403adc <__fxstatat@plt+0xf2c>
  40378c:	mov	w8, #0x2                   	// #2
  403790:	b	403a04 <__fxstatat@plt+0xe54>
  403794:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403798:	ldr	x0, [x8, #1464]
  40379c:	bl	406280 <__fxstatat@plt+0x36d0>
  4037a0:	b	403adc <__fxstatat@plt+0xf2c>
  4037a4:	mov	w8, #0x1                   	// #1
  4037a8:	b	4039c0 <__fxstatat@plt+0xe10>
  4037ac:	mov	x0, xzr
  4037b0:	mov	w1, wzr
  4037b4:	bl	40f8f4 <__fxstatat@plt+0xcd44>
  4037b8:	b	403adc <__fxstatat@plt+0xf2c>
  4037bc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4037c0:	mov	w9, #0x1                   	// #1
  4037c4:	strb	w9, [x8, #1677]
  4037c8:	b	403adc <__fxstatat@plt+0xf2c>
  4037cc:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  4037d0:	add	x0, x0, #0x924
  4037d4:	bl	406280 <__fxstatat@plt+0x36d0>
  4037d8:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  4037dc:	add	x0, x0, #0x923
  4037e0:	bl	406280 <__fxstatat@plt+0x36d0>
  4037e4:	b	403adc <__fxstatat@plt+0xf2c>
  4037e8:	mov	w8, #0x1                   	// #1
  4037ec:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4037f0:	strb	w8, [x9, #1668]
  4037f4:	b	403adc <__fxstatat@plt+0xf2c>
  4037f8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4037fc:	ldr	x24, [x8, #1464]
  403800:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  403804:	add	x1, x1, #0x927
  403808:	mov	w2, #0x5                   	// #5
  40380c:	mov	x0, xzr
  403810:	bl	402ad0 <dcgettext@plt>
  403814:	adrp	x4, 418000 <_obstack_memory_used@@Base+0x54b8>
  403818:	mov	x5, x0
  40381c:	add	x4, x4, #0xe71
  403820:	mov	x3, #0xffffffffffffffff    	// #-1
  403824:	mov	w6, #0x2                   	// #2
  403828:	mov	x0, x24
  40382c:	mov	w1, wzr
  403830:	mov	x2, xzr
  403834:	bl	411d8c <__fxstatat@plt+0xf1dc>
  403838:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40383c:	str	x0, [x8, #2352]
  403840:	b	403adc <__fxstatat@plt+0xf2c>
  403844:	mov	w8, #0x1                   	// #1
  403848:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40384c:	strb	w8, [x9, #1548]
  403850:	b	403adc <__fxstatat@plt+0xf2c>
  403854:	mov	w8, #0x3                   	// #3
  403858:	b	403914 <__fxstatat@plt+0xd64>
  40385c:	mov	w8, #0x4                   	// #4
  403860:	b	403a04 <__fxstatat@plt+0xe54>
  403864:	mov	w8, #0x1                   	// #1
  403868:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40386c:	str	w8, [x9, #2324]
  403870:	b	403adc <__fxstatat@plt+0xf2c>
  403874:	mov	w8, #0x2                   	// #2
  403878:	b	403ad4 <__fxstatat@plt+0xf24>
  40387c:	mov	w8, #0x3                   	// #3
  403880:	b	403ad4 <__fxstatat@plt+0xf24>
  403884:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403888:	ldr	x0, [x24, #1464]
  40388c:	bl	406224 <__fxstatat@plt+0x3674>
  403890:	mov	w8, w25
  403894:	tbnz	w0, #0, 403ae0 <__fxstatat@plt+0xf30>
  403898:	b	403fc8 <__fxstatat@plt+0x1418>
  40389c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4038a0:	mov	w9, #0xb0                  	// #176
  4038a4:	b	403938 <__fxstatat@plt+0xd88>
  4038a8:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4038ac:	ldr	x0, [x24, #1464]
  4038b0:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4038b4:	adrp	x2, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4038b8:	add	x1, x1, #0x93c
  4038bc:	add	x2, x2, #0x948
  4038c0:	bl	40cfdc <__fxstatat@plt+0xa42c>
  4038c4:	cbnz	w0, 404008 <__fxstatat@plt+0x1458>
  4038c8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4038cc:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4038d0:	ldr	w8, [x8, #2364]
  4038d4:	ldr	x9, [x9, #2376]
  4038d8:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4038dc:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4038e0:	str	w8, [x10, #2368]
  4038e4:	str	x9, [x11, #1288]
  4038e8:	b	403adc <__fxstatat@plt+0xf2c>
  4038ec:	mov	w1, #0x5                   	// #5
  4038f0:	b	403a48 <__fxstatat@plt+0xe98>
  4038f4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4038f8:	ldr	x19, [x8, #1464]
  4038fc:	b	403adc <__fxstatat@plt+0xf2c>
  403900:	mov	w8, #0x2                   	// #2
  403904:	b	4039ac <__fxstatat@plt+0xdfc>
  403908:	mov	w8, #0x3                   	// #3
  40390c:	b	4039ac <__fxstatat@plt+0xdfc>
  403910:	mov	w8, #0x5                   	// #5
  403914:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403918:	str	w8, [x9, #1544]
  40391c:	b	403adc <__fxstatat@plt+0xf2c>
  403920:	mov	w8, #0x1                   	// #1
  403924:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403928:	strb	w8, [x9, #2322]
  40392c:	b	403adc <__fxstatat@plt+0xf2c>
  403930:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403934:	mov	w9, #0x90                  	// #144
  403938:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40393c:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403940:	mov	w12, #0x1                   	// #1
  403944:	adrp	x13, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403948:	str	w9, [x8, #2364]
  40394c:	str	w9, [x10, #2368]
  403950:	str	x12, [x11, #2376]
  403954:	str	x12, [x13, #1288]
  403958:	b	403adc <__fxstatat@plt+0xf2c>
  40395c:	mov	w8, #0x1                   	// #1
  403960:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403964:	strb	w8, [x9, #1669]
  403968:	b	403adc <__fxstatat@plt+0xf2c>
  40396c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403970:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403974:	ldr	x1, [x8, #1464]
  403978:	ldr	x5, [x9, #1336]
  40397c:	adrp	x24, 415000 <_obstack_memory_used@@Base+0x24b8>
  403980:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  403984:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x24b8>
  403988:	add	x24, x24, #0x4d0
  40398c:	add	x0, x0, #0x938
  403990:	add	x2, x2, #0x4e8
  403994:	mov	w4, #0x4                   	// #4
  403998:	mov	x3, x24
  40399c:	bl	40a4ec <__fxstatat@plt+0x793c>
  4039a0:	ldr	w8, [x24, x0, lsl #2]
  4039a4:	b	4039ac <__fxstatat@plt+0xdfc>
  4039a8:	mov	w8, #0x4                   	// #4
  4039ac:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4039b0:	str	w8, [x9, #1664]
  4039b4:	mov	w27, #0x1                   	// #1
  4039b8:	b	403adc <__fxstatat@plt+0xf2c>
  4039bc:	mov	w8, #0x2                   	// #2
  4039c0:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4039c4:	str	w8, [x9, #2316]
  4039c8:	b	403adc <__fxstatat@plt+0xf2c>
  4039cc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4039d0:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4039d4:	ldr	x1, [x8, #1464]
  4039d8:	ldr	x5, [x9, #1336]
  4039dc:	adrp	x24, 415000 <_obstack_memory_used@@Base+0x24b8>
  4039e0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  4039e4:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x24b8>
  4039e8:	add	x24, x24, #0x560
  4039ec:	add	x0, x0, #0x946
  4039f0:	add	x2, x2, #0x580
  4039f4:	mov	w4, #0x4                   	// #4
  4039f8:	mov	x3, x24
  4039fc:	bl	40a4ec <__fxstatat@plt+0x793c>
  403a00:	ldr	w8, [x24, x0, lsl #2]
  403a04:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403a08:	str	w8, [x9, #1540]
  403a0c:	b	403adc <__fxstatat@plt+0xf2c>
  403a10:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403a14:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403a18:	ldr	x1, [x8, #1464]
  403a1c:	ldr	x5, [x9, #1336]
  403a20:	adrp	x24, 419000 <_obstack_memory_used@@Base+0x64b8>
  403a24:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  403a28:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x64b8>
  403a2c:	add	x24, x24, #0x640
  403a30:	add	x0, x0, #0x97e
  403a34:	add	x2, x2, #0x5e8
  403a38:	mov	w4, #0x4                   	// #4
  403a3c:	mov	x3, x24
  403a40:	bl	40a4ec <__fxstatat@plt+0x793c>
  403a44:	ldr	w1, [x24, x0, lsl #2]
  403a48:	mov	x0, xzr
  403a4c:	bl	40f8f4 <__fxstatat@plt+0xcd44>
  403a50:	b	403adc <__fxstatat@plt+0xf2c>
  403a54:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403a58:	ldr	x1, [x8, #1464]
  403a5c:	cbz	x1, 403b38 <__fxstatat@plt+0xf88>
  403a60:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403a64:	ldr	x5, [x8, #1336]
  403a68:	adrp	x24, 415000 <_obstack_memory_used@@Base+0x24b8>
  403a6c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  403a70:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x24b8>
  403a74:	add	x24, x24, #0x5c0
  403a78:	add	x0, x0, #0x958
  403a7c:	add	x2, x2, #0x5e8
  403a80:	mov	w4, #0x4                   	// #4
  403a84:	mov	x3, x24
  403a88:	bl	40a4ec <__fxstatat@plt+0x793c>
  403a8c:	ldr	w8, [x24, x0, lsl #2]
  403a90:	cmp	w8, #0x1
  403a94:	b.ne	403b44 <__fxstatat@plt+0xf94>  // b.any
  403a98:	b	403b8c <__fxstatat@plt+0xfdc>
  403a9c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403aa0:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403aa4:	ldr	x1, [x8, #1464]
  403aa8:	ldr	x5, [x9, #1336]
  403aac:	adrp	x24, 415000 <_obstack_memory_used@@Base+0x24b8>
  403ab0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  403ab4:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x24b8>
  403ab8:	add	x24, x24, #0x638
  403abc:	add	x0, x0, #0x96c
  403ac0:	add	x2, x2, #0x648
  403ac4:	mov	w4, #0x4                   	// #4
  403ac8:	mov	x3, x24
  403acc:	bl	40a4ec <__fxstatat@plt+0x793c>
  403ad0:	ldr	w8, [x24, x0, lsl #2]
  403ad4:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403ad8:	str	w8, [x9, #1552]
  403adc:	mov	w8, w25
  403ae0:	mov	w9, #0x1                   	// #1
  403ae4:	mov	w25, w8
  403ae8:	tbnz	w9, #0, 403574 <__fxstatat@plt+0x9c4>
  403aec:	b	403bb4 <__fxstatat@plt+0x1004>
  403af0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403af4:	ldr	x1, [x8, #1464]
  403af8:	cbz	x1, 403b60 <__fxstatat@plt+0xfb0>
  403afc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403b00:	ldr	x5, [x8, #1336]
  403b04:	adrp	x24, 415000 <_obstack_memory_used@@Base+0x24b8>
  403b08:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  403b0c:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x24b8>
  403b10:	add	x24, x24, #0x5c0
  403b14:	add	x0, x0, #0x960
  403b18:	add	x2, x2, #0x5e8
  403b1c:	mov	w4, #0x4                   	// #4
  403b20:	mov	x3, x24
  403b24:	bl	40a4ec <__fxstatat@plt+0x793c>
  403b28:	ldr	w8, [x24, x0, lsl #2]
  403b2c:	cmp	w8, #0x1
  403b30:	b.ne	403b6c <__fxstatat@plt+0xfbc>  // b.any
  403b34:	b	403ba8 <__fxstatat@plt+0xff8>
  403b38:	mov	w8, #0x1                   	// #1
  403b3c:	cmp	w8, #0x1
  403b40:	b.eq	403b8c <__fxstatat@plt+0xfdc>  // b.none
  403b44:	cmp	w8, #0x2
  403b48:	b.ne	403b88 <__fxstatat@plt+0xfd8>  // b.any
  403b4c:	mov	w0, #0x1                   	// #1
  403b50:	bl	402a70 <isatty@plt>
  403b54:	cmp	w0, #0x0
  403b58:	cset	w8, ne  // ne = any
  403b5c:	b	403b8c <__fxstatat@plt+0xfdc>
  403b60:	mov	w8, #0x1                   	// #1
  403b64:	cmp	w8, #0x1
  403b68:	b.eq	403ba8 <__fxstatat@plt+0xff8>  // b.none
  403b6c:	cmp	w8, #0x2
  403b70:	b.ne	403ba4 <__fxstatat@plt+0xff4>  // b.any
  403b74:	mov	w0, #0x1                   	// #1
  403b78:	bl	402a70 <isatty@plt>
  403b7c:	cmp	w0, #0x0
  403b80:	cset	w8, ne  // ne = any
  403b84:	b	403ba8 <__fxstatat@plt+0xff8>
  403b88:	mov	w8, wzr
  403b8c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403b90:	strb	w8, [x9, #1536]
  403b94:	cbz	w8, 403adc <__fxstatat@plt+0xf2c>
  403b98:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403b9c:	str	xzr, [x8, #2352]
  403ba0:	b	403adc <__fxstatat@plt+0xf2c>
  403ba4:	mov	w8, wzr
  403ba8:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403bac:	strb	w8, [x9, #1856]
  403bb0:	b	403adc <__fxstatat@plt+0xf2c>
  403bb4:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403bb8:	ldr	x8, [x21, #2376]
  403bbc:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403bc0:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403bc4:	cbnz	x8, 403c30 <__fxstatat@plt+0x1080>
  403bc8:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  403bcc:	add	x0, x0, #0x9c0
  403bd0:	bl	402b50 <getenv@plt>
  403bd4:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403bd8:	adrp	x2, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403bdc:	add	x1, x1, #0x93c
  403be0:	add	x2, x2, #0x948
  403be4:	mov	x20, x0
  403be8:	bl	40cfdc <__fxstatat@plt+0xa42c>
  403bec:	cbnz	x20, 403c00 <__fxstatat@plt+0x1050>
  403bf0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  403bf4:	add	x0, x0, #0x9c3
  403bf8:	bl	402b50 <getenv@plt>
  403bfc:	cbz	x0, 403c1c <__fxstatat@plt+0x106c>
  403c00:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403c04:	ldr	w8, [x8, #2364]
  403c08:	ldr	x9, [x21, #2376]
  403c0c:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403c10:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403c14:	str	w8, [x10, #2368]
  403c18:	str	x9, [x11, #1288]
  403c1c:	tbz	w25, #0, 403c30 <__fxstatat@plt+0x1080>
  403c20:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403c24:	mov	w9, #0x400                 	// #1024
  403c28:	str	wzr, [x8, #2364]
  403c2c:	str	x9, [x21, #2376]
  403c30:	ldr	x8, [x23, #2344]
  403c34:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  403c38:	movk	x9, #0xaaab
  403c3c:	mov	x0, xzr
  403c40:	umulh	x9, x8, x9
  403c44:	lsr	x9, x9, #1
  403c48:	add	x10, x9, x9, lsl #1
  403c4c:	cmp	x8, x10
  403c50:	cinc	x8, x9, ne  // ne = any
  403c54:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403c58:	str	x8, [x9, #2392]
  403c5c:	bl	40f8dc <__fxstatat@plt+0xcd2c>
  403c60:	ldr	w9, [x22, #1540]
  403c64:	mov	w20, w0
  403c68:	mov	w8, wzr
  403c6c:	cmp	w9, #0x1
  403c70:	b.eq	403ca0 <__fxstatat@plt+0x10f0>  // b.none
  403c74:	cmp	w9, #0x4
  403c78:	b.eq	403ca0 <__fxstatat@plt+0x10f0>  // b.none
  403c7c:	cbz	w9, 403c88 <__fxstatat@plt+0x10d8>
  403c80:	ldr	x8, [x23, #2344]
  403c84:	cbz	x8, 403ca0 <__fxstatat@plt+0x10f0>
  403c88:	orr	w8, w20, #0x2
  403c8c:	cmp	w8, #0x3
  403c90:	cset	w8, eq  // eq = none
  403c94:	cmp	w20, #0x6
  403c98:	cset	w9, eq  // eq = none
  403c9c:	orr	w8, w9, w8
  403ca0:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403ca4:	mov	x0, xzr
  403ca8:	strb	w8, [x9, #2400]
  403cac:	bl	40f890 <__fxstatat@plt+0xcce0>
  403cb0:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403cb4:	cmp	w20, #0x7
  403cb8:	str	x0, [x21, #1920]
  403cbc:	b.ne	403ccc <__fxstatat@plt+0x111c>  // b.any
  403cc0:	mov	w1, #0x20                  	// #32
  403cc4:	mov	w2, #0x1                   	// #1
  403cc8:	bl	40f90c <__fxstatat@plt+0xcd5c>
  403ccc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403cd0:	ldr	w8, [x8, #1552]
  403cd4:	subs	w8, w8, #0x2
  403cd8:	b.cc	403d08 <__fxstatat@plt+0x1158>  // b.lo, b.ul, b.last
  403cdc:	cmp	w8, #0x5
  403ce0:	b.eq	403d08 <__fxstatat@plt+0x1158>  // b.none
  403ce4:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x54b8>
  403ce8:	add	x9, x9, #0x9ce
  403cec:	add	x20, x9, x8
  403cf0:	ldrb	w1, [x20], #1
  403cf4:	ldr	x0, [x21, #1920]
  403cf8:	mov	w2, #0x1                   	// #1
  403cfc:	bl	40f90c <__fxstatat@plt+0xcd5c>
  403d00:	ldrb	w1, [x20], #1
  403d04:	cbnz	w1, 403cf4 <__fxstatat@plt+0x1144>
  403d08:	mov	x0, xzr
  403d0c:	bl	40f890 <__fxstatat@plt+0xcce0>
  403d10:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403d14:	mov	w1, #0x3a                  	// #58
  403d18:	mov	w2, #0x1                   	// #1
  403d1c:	str	x0, [x8, #2408]
  403d20:	bl	40f90c <__fxstatat@plt+0xcd5c>
  403d24:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403d28:	ldrb	w9, [x8, #1677]
  403d2c:	cmp	w9, #0x1
  403d30:	b.ne	403d4c <__fxstatat@plt+0x119c>  // b.any
  403d34:	ldr	w9, [x22, #1540]
  403d38:	cbnz	w9, 403d48 <__fxstatat@plt+0x1198>
  403d3c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403d40:	ldrb	w9, [x9, #1856]
  403d44:	cbz	w9, 403d4c <__fxstatat@plt+0x119c>
  403d48:	strb	wzr, [x8, #1677]
  403d4c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403d50:	ldr	w8, [x8, #2316]
  403d54:	sub	w8, w8, #0x1
  403d58:	cmp	w8, #0x1
  403d5c:	b.hi	403d7c <__fxstatat@plt+0x11cc>  // b.pmore
  403d60:	ldr	w8, [x22, #1540]
  403d64:	cbz	w8, 403d7c <__fxstatat@plt+0x11cc>
  403d68:	eor	w8, w27, #0x1
  403d6c:	tbz	w8, #0, 403d7c <__fxstatat@plt+0x11cc>
  403d70:	mov	w8, #0x4                   	// #4
  403d74:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403d78:	str	w8, [x9, #1664]
  403d7c:	ldr	w8, [x22, #1540]
  403d80:	cbnz	w8, 403f28 <__fxstatat@plt+0x1378>
  403d84:	cbnz	x19, 403dac <__fxstatat@plt+0x11fc>
  403d88:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  403d8c:	add	x0, x0, #0x9d4
  403d90:	bl	402b50 <getenv@plt>
  403d94:	mov	x19, x0
  403d98:	cbnz	x0, 403dac <__fxstatat@plt+0x11fc>
  403d9c:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x34b8>
  403da0:	add	x19, x19, #0xadb
  403da4:	mov	x0, x19
  403da8:	bl	4062b4 <__fxstatat@plt+0x3704>
  403dac:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x24b8>
  403db0:	add	x1, x1, #0x670
  403db4:	mov	w2, #0x6                   	// #6
  403db8:	mov	x0, x19
  403dbc:	bl	402780 <strncmp@plt>
  403dc0:	cbnz	w0, 403df0 <__fxstatat@plt+0x1240>
  403dc4:	adrp	x20, 415000 <_obstack_memory_used@@Base+0x24b8>
  403dc8:	add	x20, x20, #0x670
  403dcc:	mov	w0, #0x2                   	// #2
  403dd0:	bl	40b904 <__fxstatat@plt+0x8d54>
  403dd4:	tbz	w0, #0, 403e98 <__fxstatat@plt+0x12e8>
  403dd8:	add	x19, x19, #0x6
  403ddc:	mov	w2, #0x6                   	// #6
  403de0:	mov	x0, x19
  403de4:	mov	x1, x20
  403de8:	bl	402780 <strncmp@plt>
  403dec:	cbz	w0, 403dcc <__fxstatat@plt+0x121c>
  403df0:	ldrb	w8, [x19]
  403df4:	cmp	w8, #0x2b
  403df8:	b.ne	403e40 <__fxstatat@plt+0x1290>  // b.any
  403dfc:	add	x19, x19, #0x1
  403e00:	mov	w1, #0xa                   	// #10
  403e04:	mov	x0, x19
  403e08:	bl	4029c0 <strchr@plt>
  403e0c:	mov	x20, x19
  403e10:	cbz	x0, 403e30 <__fxstatat@plt+0x1280>
  403e14:	add	x20, x0, #0x1
  403e18:	mov	x21, x0
  403e1c:	mov	w1, #0xa                   	// #10
  403e20:	mov	x0, x20
  403e24:	bl	4029c0 <strchr@plt>
  403e28:	cbnz	x0, 4040a8 <__fxstatat@plt+0x14f8>
  403e2c:	strb	wzr, [x21]
  403e30:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403e34:	add	x8, x8, #0x510
  403e38:	stp	x19, x20, [x8]
  403e3c:	b	403f1c <__fxstatat@plt+0x136c>
  403e40:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x24b8>
  403e44:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x24b8>
  403e48:	add	x1, x1, #0x678
  403e4c:	add	x2, x2, #0x6a0
  403e50:	mov	w3, #0x4                   	// #4
  403e54:	mov	x0, x19
  403e58:	bl	40a274 <__fxstatat@plt+0x76c4>
  403e5c:	mov	x2, x0
  403e60:	tbnz	x0, #63, 404024 <__fxstatat@plt+0x1474>
  403e64:	cmp	x2, #0x3
  403e68:	b.hi	403f1c <__fxstatat@plt+0x136c>  // b.pmore
  403e6c:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x14b8>
  403e70:	add	x8, x8, #0xe00
  403e74:	adr	x9, 403e84 <__fxstatat@plt+0x12d4>
  403e78:	ldrb	w10, [x8, x2]
  403e7c:	add	x9, x9, x10, lsl #2
  403e80:	br	x9
  403e84:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403e88:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x54b8>
  403e8c:	add	x8, x8, #0x510
  403e90:	add	x9, x9, #0xa63
  403e94:	b	403f18 <__fxstatat@plt+0x1368>
  403e98:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403e9c:	ldr	w0, [x8, #1472]
  403ea0:	mov	w8, wzr
  403ea4:	cbnz	w8, 403f28 <__fxstatat@plt+0x1378>
  403ea8:	b	403f30 <__fxstatat@plt+0x1380>
  403eac:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403eb0:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x54b8>
  403eb4:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x54b8>
  403eb8:	add	x8, x8, #0x510
  403ebc:	add	x9, x9, #0xa8a
  403ec0:	add	x10, x10, #0xa7e
  403ec4:	stp	x9, x10, [x8]
  403ec8:	b	403f1c <__fxstatat@plt+0x136c>
  403ecc:	mov	w0, #0x2                   	// #2
  403ed0:	bl	40b904 <__fxstatat@plt+0x8d54>
  403ed4:	tbz	w0, #0, 403f1c <__fxstatat@plt+0x136c>
  403ed8:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403edc:	mov	x19, xzr
  403ee0:	add	x20, x20, #0x510
  403ee4:	ldr	x1, [x20, x19]
  403ee8:	mov	w2, #0x2                   	// #2
  403eec:	mov	x0, xzr
  403ef0:	bl	402ad0 <dcgettext@plt>
  403ef4:	str	x0, [x20, x19]
  403ef8:	add	x19, x19, #0x8
  403efc:	cmp	x19, #0x8
  403f00:	b.eq	403ee4 <__fxstatat@plt+0x1334>  // b.none
  403f04:	b	403f1c <__fxstatat@plt+0x136c>
  403f08:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403f0c:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x54b8>
  403f10:	add	x8, x8, #0x510
  403f14:	add	x9, x9, #0xa7b
  403f18:	stp	x9, x9, [x8]
  403f1c:	bl	4062b8 <__fxstatat@plt+0x3708>
  403f20:	mov	w8, #0x1                   	// #1
  403f24:	cbz	w8, 403f30 <__fxstatat@plt+0x1380>
  403f28:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403f2c:	ldr	w0, [x8, #1472]
  403f30:	ldp	x20, x19, [sp, #96]
  403f34:	ldp	x22, x21, [sp, #80]
  403f38:	ldp	x24, x23, [sp, #64]
  403f3c:	ldp	x26, x25, [sp, #48]
  403f40:	ldp	x28, x27, [sp, #32]
  403f44:	ldp	x29, x30, [sp, #16]
  403f48:	add	sp, sp, #0x70
  403f4c:	ret
  403f50:	mov	w0, #0x2                   	// #2
  403f54:	bl	4059b8 <__fxstatat@plt+0x2e08>
  403f58:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403f5c:	ldr	w9, [x9, #1320]
  403f60:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403f64:	adrp	x13, 42b000 <_obstack_memory_used@@Base+0x184b8>
  403f68:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x54b8>
  403f6c:	adrp	x11, 418000 <_obstack_memory_used@@Base+0x54b8>
  403f70:	ldr	x0, [x8, #1480]
  403f74:	ldr	x3, [x13, #1328]
  403f78:	add	x10, x10, #0x7a9
  403f7c:	add	x11, x11, #0xbcb
  403f80:	adrp	x12, 418000 <_obstack_memory_used@@Base+0x54b8>
  403f84:	cmp	w9, #0x2
  403f88:	add	x12, x12, #0x999
  403f8c:	csel	x8, x11, x10, eq  // eq = none
  403f90:	cmp	w9, #0x1
  403f94:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x54b8>
  403f98:	adrp	x4, 418000 <_obstack_memory_used@@Base+0x54b8>
  403f9c:	adrp	x5, 418000 <_obstack_memory_used@@Base+0x54b8>
  403fa0:	csel	x1, x12, x8, eq  // eq = none
  403fa4:	add	x2, x2, #0x98e
  403fa8:	add	x4, x4, #0x99c
  403fac:	add	x5, x5, #0x9b0
  403fb0:	mov	x6, xzr
  403fb4:	bl	411a2c <__fxstatat@plt+0xee7c>
  403fb8:	mov	w0, wzr
  403fbc:	bl	402580 <exit@plt>
  403fc0:	mov	w0, wzr
  403fc4:	bl	4059b8 <__fxstatat@plt+0x2e08>
  403fc8:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  403fcc:	add	x1, x1, #0x910
  403fd0:	mov	w2, #0x5                   	// #5
  403fd4:	mov	x0, xzr
  403fd8:	bl	402ad0 <dcgettext@plt>
  403fdc:	ldr	x8, [x24, #1464]
  403fe0:	mov	x19, x0
  403fe4:	mov	x0, x8
  403fe8:	bl	410d7c <__fxstatat@plt+0xe1cc>
  403fec:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x54b8>
  403ff0:	mov	x4, x0
  403ff4:	add	x2, x2, #0x909
  403ff8:	mov	w0, #0x2                   	// #2
  403ffc:	mov	w1, wzr
  404000:	mov	x3, x19
  404004:	bl	4025b0 <error@plt>
  404008:	ldr	w1, [sp, #8]
  40400c:	ldr	x4, [x24, #1464]
  404010:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x14b8>
  404014:	add	x3, x3, #0xf50
  404018:	mov	w2, wzr
  40401c:	bl	412330 <__fxstatat@plt+0xf780>
  404020:	bl	4028c0 <abort@plt>
  404024:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  404028:	add	x0, x0, #0x9fc
  40402c:	mov	x1, x19
  404030:	bl	40a35c <__fxstatat@plt+0x77ac>
  404034:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  404038:	add	x1, x1, #0xa07
  40403c:	mov	w2, #0x5                   	// #5
  404040:	mov	x0, xzr
  404044:	bl	402ad0 <dcgettext@plt>
  404048:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40404c:	ldr	x1, [x20, #1456]
  404050:	bl	402ae0 <fputs_unlocked@plt>
  404054:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x54b8>
  404058:	adrp	x21, 415000 <_obstack_memory_used@@Base+0x24b8>
  40405c:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x54b8>
  404060:	add	x3, x3, #0x94f
  404064:	add	x21, x21, #0x680
  404068:	add	x19, x19, #0xa1d
  40406c:	ldr	x0, [x20, #1456]
  404070:	mov	w1, #0x1                   	// #1
  404074:	mov	x2, x19
  404078:	bl	402930 <__fprintf_chk@plt>
  40407c:	ldr	x3, [x21], #8
  404080:	cbnz	x3, 40406c <__fxstatat@plt+0x14bc>
  404084:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  404088:	add	x1, x1, #0xa2d
  40408c:	mov	w2, #0x5                   	// #5
  404090:	mov	x0, xzr
  404094:	bl	402ad0 <dcgettext@plt>
  404098:	ldr	x1, [x20, #1456]
  40409c:	bl	402ae0 <fputs_unlocked@plt>
  4040a0:	mov	w0, #0x2                   	// #2
  4040a4:	bl	4059b8 <__fxstatat@plt+0x2e08>
  4040a8:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  4040ac:	add	x1, x1, #0x9df
  4040b0:	mov	w2, #0x5                   	// #5
  4040b4:	mov	x0, xzr
  4040b8:	bl	402ad0 <dcgettext@plt>
  4040bc:	mov	x20, x0
  4040c0:	mov	x0, x19
  4040c4:	bl	410d7c <__fxstatat@plt+0xe1cc>
  4040c8:	mov	x3, x0
  4040cc:	mov	w0, #0x2                   	// #2
  4040d0:	mov	w1, wzr
  4040d4:	mov	x2, x20
  4040d8:	bl	4025b0 <error@plt>
  4040dc:	sub	sp, sp, #0x80
  4040e0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  4040e4:	add	x0, x0, #0xcf9
  4040e8:	stp	x29, x30, [sp, #32]
  4040ec:	stp	x28, x27, [sp, #48]
  4040f0:	stp	x26, x25, [sp, #64]
  4040f4:	stp	x24, x23, [sp, #80]
  4040f8:	stp	x22, x21, [sp, #96]
  4040fc:	stp	x20, x19, [sp, #112]
  404100:	add	x29, sp, #0x20
  404104:	bl	402b50 <getenv@plt>
  404108:	stur	x0, [x29, #-8]
  40410c:	cbz	x0, 40432c <__fxstatat@plt+0x177c>
  404110:	ldrb	w8, [x0]
  404114:	cbz	w8, 40432c <__fxstatat@plt+0x177c>
  404118:	mov	w8, #0x3f3f                	// #16191
  40411c:	strb	wzr, [sp, #14]
  404120:	strh	w8, [sp, #12]
  404124:	bl	411d1c <__fxstatat@plt+0xf16c>
  404128:	adrp	x24, 414000 <_obstack_memory_used@@Base+0x14b8>
  40412c:	adrp	x27, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404130:	adrp	x28, 415000 <_obstack_memory_used@@Base+0x24b8>
  404134:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x54b8>
  404138:	mov	x19, xzr
  40413c:	adrp	x22, 42c000 <__progname@@GLIBC_2.17+0xa30>
  404140:	mov	w8, #0x1                   	// #1
  404144:	add	x24, x24, #0xe04
  404148:	adrp	x23, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40414c:	mov	w25, #0x6                   	// #6
  404150:	mov	w26, #0x4                   	// #4
  404154:	add	x27, x27, #0x388
  404158:	add	x28, x28, #0x6b0
  40415c:	add	x20, x20, #0xd10
  404160:	str	x0, [sp, #16]
  404164:	str	x0, [x22, #1400]
  404168:	sub	w9, w8, #0x1
  40416c:	cmp	w9, #0x5
  404170:	b.hi	404408 <__fxstatat@plt+0x1858>  // b.pmore
  404174:	adr	x10, 404184 <__fxstatat@plt+0x15d4>
  404178:	ldrb	w11, [x24, x9]
  40417c:	add	x10, x10, x11, lsl #2
  404180:	br	x10
  404184:	ldur	x21, [x29, #-8]
  404188:	ldrb	w9, [x21]
  40418c:	cmp	w9, #0x2a
  404190:	b.eq	40426c <__fxstatat@plt+0x16bc>  // b.none
  404194:	cmp	w9, #0x3a
  404198:	b.eq	4042b4 <__fxstatat@plt+0x1704>  // b.none
  40419c:	cbz	w9, 404358 <__fxstatat@plt+0x17a8>
  4041a0:	add	x8, x21, #0x1
  4041a4:	strb	w9, [sp, #12]
  4041a8:	stur	x8, [x29, #-8]
  4041ac:	mov	w8, #0x2                   	// #2
  4041b0:	b	404168 <__fxstatat@plt+0x15b8>
  4041b4:	ldur	x8, [x29, #-8]
  4041b8:	add	x9, x8, #0x1
  4041bc:	stur	x9, [x29, #-8]
  4041c0:	ldrb	w8, [x8]
  4041c4:	cmp	w8, #0x3d
  4041c8:	mov	w8, #0x6                   	// #6
  4041cc:	b.ne	404168 <__fxstatat@plt+0x15b8>  // b.any
  4041d0:	mov	x26, x20
  4041d4:	mov	x20, xzr
  4041d8:	mov	x21, x27
  4041dc:	ldr	x1, [x28, x20]
  4041e0:	add	x0, sp, #0xc
  4041e4:	bl	402950 <strcmp@plt>
  4041e8:	cbz	w0, 4042c0 <__fxstatat@plt+0x1710>
  4041ec:	add	x20, x20, #0x8
  4041f0:	cmp	x20, #0xc0
  4041f4:	add	x21, x21, #0x10
  4041f8:	b.ne	4041dc <__fxstatat@plt+0x162c>  // b.any
  4041fc:	mov	w8, #0x6                   	// #6
  404200:	b	4042e4 <__fxstatat@plt+0x1734>
  404204:	ldur	x10, [x29, #-8]
  404208:	mov	w8, #0x6                   	// #6
  40420c:	ldrb	w9, [x10]
  404210:	cbz	w9, 404168 <__fxstatat@plt+0x15b8>
  404214:	add	x8, x10, #0x1
  404218:	strb	w9, [sp, #13]
  40421c:	stur	x8, [x29, #-8]
  404220:	mov	w8, #0x3                   	// #3
  404224:	b	404168 <__fxstatat@plt+0x15b8>
  404228:	ldur	x8, [x29, #-8]
  40422c:	add	x9, x8, #0x1
  404230:	stur	x9, [x29, #-8]
  404234:	ldrb	w8, [x8]
  404238:	cmp	w8, #0x3d
  40423c:	mov	w8, #0x6                   	// #6
  404240:	b.ne	404168 <__fxstatat@plt+0x15b8>  // b.any
  404244:	ldr	x8, [sp, #16]
  404248:	add	x3, x19, #0x10
  40424c:	add	x0, sp, #0x10
  404250:	sub	x1, x29, #0x8
  404254:	mov	w2, wzr
  404258:	str	x8, [x19, #24]
  40425c:	bl	406620 <__fxstatat@plt+0x3a70>
  404260:	tst	w0, #0x1
  404264:	csinc	w8, w25, wzr, eq  // eq = none
  404268:	b	404168 <__fxstatat@plt+0x15b8>
  40426c:	mov	w0, #0x28                  	// #40
  404270:	bl	411b44 <__fxstatat@plt+0xef94>
  404274:	ldr	x8, [x23, #1408]
  404278:	ldr	x9, [sp, #16]
  40427c:	mov	x19, x0
  404280:	str	x0, [x23, #1408]
  404284:	add	x10, x21, #0x1
  404288:	str	x8, [x0, #32]
  40428c:	str	x9, [x0, #8]
  404290:	add	x0, sp, #0x10
  404294:	sub	x1, x29, #0x8
  404298:	mov	w2, #0x1                   	// #1
  40429c:	mov	x3, x19
  4042a0:	stur	x10, [x29, #-8]
  4042a4:	bl	406620 <__fxstatat@plt+0x3a70>
  4042a8:	tst	w0, #0x1
  4042ac:	csel	w8, w26, w25, ne  // ne = any
  4042b0:	b	404168 <__fxstatat@plt+0x15b8>
  4042b4:	add	x9, x21, #0x1
  4042b8:	stur	x9, [x29, #-8]
  4042bc:	b	404168 <__fxstatat@plt+0x15b8>
  4042c0:	ldr	x8, [sp, #16]
  4042c4:	add	x0, sp, #0x10
  4042c8:	sub	x1, x29, #0x8
  4042cc:	mov	w2, wzr
  4042d0:	mov	x3, x21
  4042d4:	str	x8, [x21, #8]
  4042d8:	bl	406620 <__fxstatat@plt+0x3a70>
  4042dc:	tst	w0, #0x1
  4042e0:	csinc	w8, w25, wzr, eq  // eq = none
  4042e4:	cmp	w8, #0x6
  4042e8:	mov	x20, x26
  4042ec:	mov	w26, #0x4                   	// #4
  4042f0:	b.ne	404168 <__fxstatat@plt+0x15b8>  // b.any
  4042f4:	mov	w2, #0x5                   	// #5
  4042f8:	mov	x0, xzr
  4042fc:	mov	x1, x20
  404300:	bl	402ad0 <dcgettext@plt>
  404304:	mov	x21, x0
  404308:	add	x0, sp, #0xc
  40430c:	bl	410d7c <__fxstatat@plt+0xe1cc>
  404310:	mov	x3, x0
  404314:	mov	w0, wzr
  404318:	mov	w1, wzr
  40431c:	mov	x2, x21
  404320:	bl	4025b0 <error@plt>
  404324:	mov	w8, #0x6                   	// #6
  404328:	b	404168 <__fxstatat@plt+0x15b8>
  40432c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  404330:	add	x0, x0, #0xd03
  404334:	bl	402b50 <getenv@plt>
  404338:	cbz	x0, 404344 <__fxstatat@plt+0x1794>
  40433c:	ldrb	w8, [x0]
  404340:	cbnz	w8, 4043e8 <__fxstatat@plt+0x1838>
  404344:	bl	406578 <__fxstatat@plt+0x39c8>
  404348:	tbnz	w0, #0, 4043e8 <__fxstatat@plt+0x1838>
  40434c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404350:	strb	wzr, [x8, #1536]
  404354:	b	4043e8 <__fxstatat@plt+0x1838>
  404358:	mov	w8, #0x5                   	// #5
  40435c:	cmp	w8, #0x6
  404360:	b.ne	4043b0 <__fxstatat@plt+0x1800>  // b.any
  404364:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  404368:	add	x1, x1, #0xd28
  40436c:	mov	w2, #0x5                   	// #5
  404370:	mov	x0, xzr
  404374:	bl	402ad0 <dcgettext@plt>
  404378:	mov	x2, x0
  40437c:	mov	w0, wzr
  404380:	mov	w1, wzr
  404384:	bl	4025b0 <error@plt>
  404388:	ldr	x0, [x22, #1400]
  40438c:	bl	402990 <free@plt>
  404390:	ldr	x0, [x23, #1408]
  404394:	cbz	x0, 4043a8 <__fxstatat@plt+0x17f8>
  404398:	ldr	x19, [x0, #32]
  40439c:	bl	402990 <free@plt>
  4043a0:	mov	x0, x19
  4043a4:	cbnz	x19, 404398 <__fxstatat@plt+0x17e8>
  4043a8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4043ac:	strb	wzr, [x8, #1536]
  4043b0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4043b4:	ldr	x8, [x8, #1016]
  4043b8:	cmp	x8, #0x6
  4043bc:	b.ne	4043e8 <__fxstatat@plt+0x1838>  // b.any
  4043c0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4043c4:	ldr	x0, [x8, #1024]
  4043c8:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  4043cc:	add	x1, x1, #0xd5c
  4043d0:	mov	w2, #0x6                   	// #6
  4043d4:	bl	402780 <strncmp@plt>
  4043d8:	cbnz	w0, 4043e8 <__fxstatat@plt+0x1838>
  4043dc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4043e0:	mov	w9, #0x1                   	// #1
  4043e4:	strb	w9, [x8, #1539]
  4043e8:	ldp	x20, x19, [sp, #112]
  4043ec:	ldp	x22, x21, [sp, #96]
  4043f0:	ldp	x24, x23, [sp, #80]
  4043f4:	ldp	x26, x25, [sp, #64]
  4043f8:	ldp	x28, x27, [sp, #48]
  4043fc:	ldp	x29, x30, [sp, #32]
  404400:	add	sp, sp, #0x80
  404404:	ret
  404408:	bl	4028c0 <abort@plt>
  40440c:	stp	x29, x30, [sp, #-16]!
  404410:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404414:	add	x8, x8, #0x388
  404418:	add	x9, x8, w0, uxtw #4
  40441c:	ldr	x8, [x9]
  404420:	mov	x29, sp
  404424:	cbz	x8, 404448 <__fxstatat@plt+0x1898>
  404428:	ldr	x0, [x9, #8]
  40442c:	cmp	x8, #0x2
  404430:	b.eq	40445c <__fxstatat@plt+0x18ac>  // b.none
  404434:	cmp	x8, #0x1
  404438:	b.ne	40447c <__fxstatat@plt+0x18cc>  // b.any
  40443c:	ldrb	w9, [x0]
  404440:	cmp	w9, #0x30
  404444:	b.ne	404454 <__fxstatat@plt+0x18a4>  // b.any
  404448:	mov	w0, wzr
  40444c:	ldp	x29, x30, [sp], #16
  404450:	ret
  404454:	cmp	x8, #0x2
  404458:	b.ne	40447c <__fxstatat@plt+0x18cc>  // b.any
  40445c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  404460:	add	x1, x1, #0x7ae
  404464:	mov	w2, #0x2                   	// #2
  404468:	bl	402780 <strncmp@plt>
  40446c:	cmp	w0, #0x0
  404470:	cset	w0, ne  // ne = any
  404474:	ldp	x29, x30, [sp], #16
  404478:	ret
  40447c:	mov	w0, #0x1                   	// #1
  404480:	ldp	x29, x30, [sp], #16
  404484:	ret
  404488:	ldr	x8, [x0]
  40448c:	udiv	x9, x8, x1
  404490:	msub	x0, x9, x1, x8
  404494:	ret
  404498:	ldr	x8, [x0]
  40449c:	ldr	x9, [x1]
  4044a0:	cmp	x8, x9
  4044a4:	b.ne	4044bc <__fxstatat@plt+0x190c>  // b.any
  4044a8:	ldr	x8, [x0, #8]
  4044ac:	ldr	x9, [x1, #8]
  4044b0:	cmp	x8, x9
  4044b4:	cset	w0, eq  // eq = none
  4044b8:	ret
  4044bc:	mov	w0, wzr
  4044c0:	ret
  4044c4:	stp	x29, x30, [sp, #-16]!
  4044c8:	mov	x29, sp
  4044cc:	bl	402990 <free@plt>
  4044d0:	ldp	x29, x30, [sp], #16
  4044d4:	ret
  4044d8:	stp	x29, x30, [sp, #-32]!
  4044dc:	stp	x20, x19, [sp, #16]
  4044e0:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4044e4:	mov	x19, xzr
  4044e8:	add	x20, x20, #0x788
  4044ec:	mov	x29, sp
  4044f0:	b	404510 <__fxstatat@plt+0x1960>
  4044f4:	mov	w8, #0x1                   	// #1
  4044f8:	ldrb	w9, [x20, x19]
  4044fc:	orr	w8, w9, w8
  404500:	strb	w8, [x20, x19]
  404504:	add	x19, x19, #0x1
  404508:	cmp	x19, #0x100
  40450c:	b.eq	404544 <__fxstatat@plt+0x1994>  // b.none
  404510:	mov	w0, w19
  404514:	bl	40a5f0 <__fxstatat@plt+0x7a40>
  404518:	tbnz	w0, #0, 4044f4 <__fxstatat@plt+0x1944>
  40451c:	sub	w8, w19, #0x2d
  404520:	cmp	w8, #0x2
  404524:	mov	w8, #0x1                   	// #1
  404528:	b.cc	4044f8 <__fxstatat@plt+0x1948>  // b.lo, b.ul, b.last
  40452c:	cmp	w19, #0x5f
  404530:	b.eq	4044f8 <__fxstatat@plt+0x1948>  // b.none
  404534:	cmp	w19, #0x7e
  404538:	b.eq	4044f8 <__fxstatat@plt+0x1948>  // b.none
  40453c:	mov	w8, wzr
  404540:	b	4044f8 <__fxstatat@plt+0x1948>
  404544:	ldp	x20, x19, [sp, #16]
  404548:	ldp	x29, x30, [sp], #32
  40454c:	ret
  404550:	stp	x29, x30, [sp, #-48]!
  404554:	stp	x20, x19, [sp, #32]
  404558:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40455c:	ldr	x8, [x19, #1888]
  404560:	str	x21, [sp, #16]
  404564:	mov	x29, sp
  404568:	cbz	x8, 404590 <__fxstatat@plt+0x19e0>
  40456c:	mov	x20, xzr
  404570:	adrp	x21, 42c000 <__progname@@GLIBC_2.17+0xa30>
  404574:	ldr	x8, [x21, #1424]
  404578:	ldr	x0, [x8, x20, lsl #3]
  40457c:	bl	4072a0 <__fxstatat@plt+0x46f0>
  404580:	ldr	x8, [x19, #1888]
  404584:	add	x20, x20, #0x1
  404588:	cmp	x20, x8
  40458c:	b.cc	404574 <__fxstatat@plt+0x19c4>  // b.lo, b.ul, b.last
  404590:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  404594:	strb	wzr, [x8, #1417]
  404598:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40459c:	strb	wzr, [x8, #1432]
  4045a0:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4045a4:	str	wzr, [x8, #1436]
  4045a8:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4045ac:	str	wzr, [x8, #1440]
  4045b0:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4045b4:	str	wzr, [x8, #1444]
  4045b8:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4045bc:	str	wzr, [x8, #1448]
  4045c0:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4045c4:	str	wzr, [x8, #1452]
  4045c8:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4045cc:	str	wzr, [x8, #1456]
  4045d0:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4045d4:	str	xzr, [x19, #1888]
  4045d8:	str	wzr, [x8, #1460]
  4045dc:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4045e0:	ldp	x20, x19, [sp, #32]
  4045e4:	ldr	x21, [sp, #16]
  4045e8:	str	wzr, [x8, #1464]
  4045ec:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4045f0:	str	wzr, [x8, #1468]
  4045f4:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4045f8:	str	wzr, [x8, #1472]
  4045fc:	ldp	x29, x30, [sp], #48
  404600:	ret
  404604:	stp	x29, x30, [sp, #-96]!
  404608:	stp	x28, x27, [sp, #16]
  40460c:	stp	x26, x25, [sp, #32]
  404610:	stp	x24, x23, [sp, #48]
  404614:	stp	x22, x21, [sp, #64]
  404618:	stp	x20, x19, [sp, #80]
  40461c:	mov	x29, sp
  404620:	sub	sp, sp, #0x2d0
  404624:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404628:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40462c:	mov	w23, w1
  404630:	ldr	x8, [x24, #1888]
  404634:	ldr	x1, [x20, #1872]
  404638:	mov	x19, sp
  40463c:	mov	x25, x3
  404640:	mov	x26, x0
  404644:	cmp	x8, x1
  404648:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40464c:	str	w2, [x19, #28]
  404650:	b.ne	404670 <__fxstatat@plt+0x1ac0>  // b.any
  404654:	ldr	x0, [x21, #1880]
  404658:	mov	w2, #0x170                 	// #368
  40465c:	bl	411b70 <__fxstatat@plt+0xefc0>
  404660:	ldr	x8, [x20, #1872]
  404664:	str	x0, [x21, #1880]
  404668:	lsl	x8, x8, #1
  40466c:	str	x8, [x20, #1872]
  404670:	ldr	x27, [x21, #1880]
  404674:	ldr	x28, [x24, #1888]
  404678:	mov	w8, #0xb8                  	// #184
  40467c:	movi	v0.2d, #0x0
  404680:	mov	w9, #0xffffffff            	// #-1
  404684:	madd	x21, x28, x8, x27
  404688:	mov	x22, x21
  40468c:	stp	q0, q0, [x21, #144]
  404690:	stp	q0, q0, [x21, #112]
  404694:	stp	q0, q0, [x21, #80]
  404698:	stp	q0, q0, [x21, #48]
  40469c:	stp	q0, q0, [x21]
  4046a0:	mov	x8, x21
  4046a4:	mov	x20, x21
  4046a8:	str	q0, [x22, #32]!
  4046ac:	str	xzr, [x21, #176]
  4046b0:	str	xzr, [x22]
  4046b4:	str	w23, [x8, #152]!
  4046b8:	str	w9, [x20, #180]!
  4046bc:	adrp	x24, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4046c0:	str	x8, [x19, #8]
  4046c4:	ldrb	w8, [x24, #1417]
  4046c8:	tbnz	w8, #0, 4046f4 <__fxstatat@plt+0x1b44>
  4046cc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4046d0:	ldrb	w8, [x8, #2400]
  4046d4:	cbz	w8, 4046f4 <__fxstatat@plt+0x1b44>
  4046d8:	mov	x0, x26
  4046dc:	bl	4072ec <__fxstatat@plt+0x473c>
  4046e0:	and	w8, w0, #0x1
  4046e4:	str	w8, [x20]
  4046e8:	tbz	w0, #0, 4046f4 <__fxstatat@plt+0x1b44>
  4046ec:	mov	w8, #0x1                   	// #1
  4046f0:	strb	w8, [x24, #1417]
  4046f4:	str	x26, [x19, #16]
  4046f8:	adrp	x26, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4046fc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404700:	ldrb	w9, [x26, #1856]
  404704:	ldrb	w8, [x8, #1672]
  404708:	str	x22, [x19]
  40470c:	orr	w8, w8, w9
  404710:	cbnz	w8, 404800 <__fxstatat@plt+0x1c50>
  404714:	ldr	w8, [x19, #28]
  404718:	tbnz	w8, #0, 404800 <__fxstatat@plt+0x1c50>
  40471c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404720:	ldrb	w24, [x8, #1536]
  404724:	cmp	w23, #0x3
  404728:	b.ne	404754 <__fxstatat@plt+0x1ba4>  // b.any
  40472c:	cbz	w24, 404754 <__fxstatat@plt+0x1ba4>
  404730:	mov	w0, #0x13                  	// #19
  404734:	bl	40440c <__fxstatat@plt+0x185c>
  404738:	tbnz	w0, #0, 404800 <__fxstatat@plt+0x1c50>
  40473c:	mov	w0, #0x12                  	// #18
  404740:	bl	40440c <__fxstatat@plt+0x185c>
  404744:	tbnz	w0, #0, 404800 <__fxstatat@plt+0x1c50>
  404748:	mov	w0, #0x14                  	// #20
  40474c:	bl	40440c <__fxstatat@plt+0x185c>
  404750:	tbnz	w0, #0, 404800 <__fxstatat@plt+0x1c50>
  404754:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404758:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40475c:	ldrb	w8, [x8, #1676]
  404760:	ldrb	w9, [x9, #2322]
  404764:	cbnz	w8, 40476c <__fxstatat@plt+0x1bbc>
  404768:	cbz	w9, 4047a0 <__fxstatat@plt+0x1bf0>
  40476c:	cmp	w23, #0x6
  404770:	b.eq	404778 <__fxstatat@plt+0x1bc8>  // b.none
  404774:	cbnz	w23, 4047a0 <__fxstatat@plt+0x1bf0>
  404778:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40477c:	ldr	w10, [x10, #1544]
  404780:	cmp	w10, #0x5
  404784:	b.eq	404800 <__fxstatat@plt+0x1c50>  // b.none
  404788:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40478c:	ldrb	w10, [x10, #1539]
  404790:	tbnz	w10, #0, 404800 <__fxstatat@plt+0x1c50>
  404794:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404798:	ldrb	w10, [x10, #1538]
  40479c:	orr	w9, w9, w10
  4047a0:	tbnz	w9, #0, 404800 <__fxstatat@plt+0x1c50>
  4047a4:	cbz	w8, 404e14 <__fxstatat@plt+0x2264>
  4047a8:	cbz	w23, 404800 <__fxstatat@plt+0x1c50>
  4047ac:	ldr	w8, [x19, #28]
  4047b0:	tbnz	w8, #0, 404800 <__fxstatat@plt+0x1c50>
  4047b4:	cmp	w23, #0x5
  4047b8:	b.ne	404e14 <__fxstatat@plt+0x2264>  // b.any
  4047bc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4047c0:	ldr	w8, [x8, #1552]
  4047c4:	cmp	w8, #0x3
  4047c8:	b.eq	404800 <__fxstatat@plt+0x1c50>  // b.none
  4047cc:	cbz	w24, 404e14 <__fxstatat@plt+0x2264>
  4047d0:	mov	w0, #0xe                   	// #14
  4047d4:	bl	40440c <__fxstatat@plt+0x185c>
  4047d8:	tbnz	w0, #0, 404800 <__fxstatat@plt+0x1c50>
  4047dc:	mov	w0, #0x10                  	// #16
  4047e0:	bl	40440c <__fxstatat@plt+0x185c>
  4047e4:	tbnz	w0, #0, 404800 <__fxstatat@plt+0x1c50>
  4047e8:	mov	w0, #0x11                  	// #17
  4047ec:	bl	40440c <__fxstatat@plt+0x185c>
  4047f0:	tbnz	w0, #0, 404800 <__fxstatat@plt+0x1c50>
  4047f4:	mov	w0, #0x15                  	// #21
  4047f8:	bl	40440c <__fxstatat@plt+0x185c>
  4047fc:	tbz	w0, #0, 404e14 <__fxstatat@plt+0x2264>
  404800:	ldr	x24, [x19, #16]
  404804:	ldrb	w8, [x24]
  404808:	mov	x22, x24
  40480c:	cmp	w8, #0x2f
  404810:	b.eq	40485c <__fxstatat@plt+0x1cac>  // b.none
  404814:	ldrb	w8, [x25]
  404818:	mov	x22, x24
  40481c:	cbz	w8, 40485c <__fxstatat@plt+0x1cac>
  404820:	mov	x0, x24
  404824:	bl	402550 <strlen@plt>
  404828:	mov	x22, x0
  40482c:	mov	x0, x25
  404830:	bl	402550 <strlen@plt>
  404834:	add	x8, x22, x0
  404838:	add	x8, x8, #0x11
  40483c:	and	x8, x8, #0xfffffffffffffff0
  404840:	mov	x9, sp
  404844:	sub	x22, x9, x8
  404848:	mov	sp, x22
  40484c:	mov	x0, x22
  404850:	mov	x1, x25
  404854:	mov	x2, x24
  404858:	bl	407358 <__fxstatat@plt+0x47a8>
  40485c:	ldrb	w8, [x26, #1856]
  404860:	add	x25, x21, #0x18
  404864:	cbz	w8, 4048a8 <__fxstatat@plt+0x1cf8>
  404868:	mov	w1, #0x2                   	// #2
  40486c:	mov	x0, x22
  404870:	bl	40a810 <__fxstatat@plt+0x7c60>
  404874:	mov	w8, #0xb8                  	// #184
  404878:	madd	x8, x28, x8, x27
  40487c:	str	x0, [x8, #16]
  404880:	cbnz	x0, 4048a8 <__fxstatat@plt+0x1cf8>
  404884:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  404888:	add	x1, x1, #0xe0f
  40488c:	mov	w2, #0x5                   	// #5
  404890:	bl	402ad0 <dcgettext@plt>
  404894:	ldr	w8, [x19, #28]
  404898:	mov	x1, x0
  40489c:	mov	x2, x22
  4048a0:	and	w0, w8, #0x1
  4048a4:	bl	4068a0 <__fxstatat@plt+0x3cf0>
  4048a8:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4048ac:	ldr	w8, [x24, #1544]
  4048b0:	sub	w9, w8, #0x3
  4048b4:	cmp	w9, #0x2
  4048b8:	b.cs	404904 <__fxstatat@plt+0x1d54>  // b.hs, b.nlast
  4048bc:	ldr	w8, [x19, #28]
  4048c0:	tbz	w8, #0, 404e38 <__fxstatat@plt+0x2288>
  4048c4:	mov	x0, x22
  4048c8:	mov	x1, x25
  4048cc:	bl	414b60 <_obstack_memory_used@@Base+0x2018>
  4048d0:	ldr	w8, [x24, #1544]
  4048d4:	mov	w26, w0
  4048d8:	cmp	w8, #0x3
  4048dc:	b.eq	404f38 <__fxstatat@plt+0x2388>  // b.none
  4048e0:	tbnz	w26, #31, 404e24 <__fxstatat@plt+0x2274>
  4048e4:	mov	w8, #0xb8                  	// #184
  4048e8:	madd	x8, x28, x8, x27
  4048ec:	ldr	w8, [x8, #40]
  4048f0:	and	w8, w8, #0xf000
  4048f4:	cmp	w8, #0x4, lsl #12
  4048f8:	cset	w8, ne  // ne = any
  4048fc:	cbz	w8, 404f38 <__fxstatat@plt+0x2388>
  404900:	b	404e38 <__fxstatat@plt+0x2288>
  404904:	cmp	w8, #0x5
  404908:	b.ne	404e38 <__fxstatat@plt+0x2288>  // b.any
  40490c:	mov	x0, x22
  404910:	mov	x1, x25
  404914:	bl	414b60 <_obstack_memory_used@@Base+0x2018>
  404918:	mov	w26, w0
  40491c:	mov	w25, #0x1                   	// #1
  404920:	cbnz	w26, 404e50 <__fxstatat@plt+0x22a0>
  404924:	mov	w8, #0xb8                  	// #184
  404928:	mov	w9, #0x1                   	// #1
  40492c:	madd	x8, x28, x8, x27
  404930:	cmp	w23, #0x5
  404934:	strb	w9, [x8, #168]
  404938:	b.eq	404954 <__fxstatat@plt+0x1da4>  // b.none
  40493c:	mov	w8, #0xb8                  	// #184
  404940:	madd	x8, x28, x8, x27
  404944:	ldr	w8, [x8, #40]
  404948:	and	w8, w8, #0xf000
  40494c:	cmp	w8, #0x8, lsl #12
  404950:	b.ne	404988 <__fxstatat@plt+0x1dd8>  // b.any
  404954:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404958:	ldrb	w8, [x8, #1536]
  40495c:	cbz	w8, 404988 <__fxstatat@plt+0x1dd8>
  404960:	mov	w0, #0x15                  	// #21
  404964:	bl	40440c <__fxstatat@plt+0x185c>
  404968:	tbz	w0, #0, 404988 <__fxstatat@plt+0x1dd8>
  40496c:	mov	x0, x22
  404970:	mov	x1, x21
  404974:	bl	4073d0 <__fxstatat@plt+0x4820>
  404978:	mov	w8, #0xb8                  	// #184
  40497c:	madd	x8, x28, x8, x27
  404980:	and	w9, w0, #0x1
  404984:	strb	w9, [x8, #176]
  404988:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40498c:	ldr	w8, [x24, #1540]
  404990:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404994:	cbz	w8, 4049a4 <__fxstatat@plt+0x1df4>
  404998:	ldrb	w8, [x23, #1668]
  40499c:	cmp	w8, #0x1
  4049a0:	b.ne	404ad0 <__fxstatat@plt+0x1f20>  // b.any
  4049a4:	mov	x0, x22
  4049a8:	mov	x1, x21
  4049ac:	mov	w2, w25
  4049b0:	bl	407444 <__fxstatat@plt+0x4894>
  4049b4:	mov	w8, #0xb8                  	// #184
  4049b8:	madd	x8, x28, x8, x27
  4049bc:	add	x8, x8, #0xa0
  4049c0:	tbnz	w0, #31, 4049e4 <__fxstatat@plt+0x1e34>
  4049c4:	ldr	x1, [x8]
  4049c8:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  4049cc:	add	x0, x0, #0xe8a
  4049d0:	bl	402950 <strcmp@plt>
  4049d4:	cmp	w0, #0x0
  4049d8:	mov	w8, wzr
  4049dc:	cset	w25, ne  // ne = any
  4049e0:	b	404a28 <__fxstatat@plt+0x1e78>
  4049e4:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4049e8:	add	x9, x9, #0x520
  4049ec:	lsr	w26, w0, #31
  4049f0:	str	x9, [x8]
  4049f4:	bl	402b40 <__errno_location@plt>
  4049f8:	mov	x24, x23
  4049fc:	ldr	w23, [x0]
  404a00:	mov	w0, w23
  404a04:	bl	4074d0 <__fxstatat@plt+0x4920>
  404a08:	cmp	w23, #0x3d
  404a0c:	cset	w8, eq  // eq = none
  404a10:	orr	w8, w0, w8
  404a14:	tst	w8, #0x1
  404a18:	mov	w25, wzr
  404a1c:	mov	x23, x24
  404a20:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404a24:	csel	w8, wzr, w26, ne  // ne = any
  404a28:	ldr	w9, [x24, #1540]
  404a2c:	orr	w9, w9, w8
  404a30:	cbz	w9, 404a3c <__fxstatat@plt+0x1e8c>
  404a34:	mov	w9, wzr
  404a38:	b	404a54 <__fxstatat@plt+0x1ea4>
  404a3c:	mov	x0, x22
  404a40:	mov	x1, x21
  404a44:	bl	4074dc <__fxstatat@plt+0x492c>
  404a48:	cmp	w0, #0x0
  404a4c:	lsr	w8, w0, #31
  404a50:	cset	w9, gt
  404a54:	orr	w10, w25, w9
  404a58:	eor	w9, w9, #0x1
  404a5c:	mov	w11, #0x1                   	// #1
  404a60:	tst	w25, w9
  404a64:	mov	w12, #0xb8                  	// #184
  404a68:	cinc	w11, w11, eq  // eq = none
  404a6c:	cmp	w10, #0x0
  404a70:	madd	x9, x28, x12, x27
  404a74:	csel	w11, w11, wzr, ne  // ne = any
  404a78:	str	w11, [x9, #172]
  404a7c:	adrp	x9, 42c000 <__progname@@GLIBC_2.17+0xa30>
  404a80:	ldrb	w11, [x9, #1432]
  404a84:	orr	w10, w11, w10
  404a88:	strb	w10, [x9, #1432]
  404a8c:	cbz	w8, 404ad0 <__fxstatat@plt+0x1f20>
  404a90:	bl	402b40 <__errno_location@plt>
  404a94:	mov	x25, x24
  404a98:	mov	x24, x23
  404a9c:	ldr	w23, [x0]
  404aa0:	mov	w1, #0x3                   	// #3
  404aa4:	mov	w0, wzr
  404aa8:	mov	x2, x22
  404aac:	bl	410bfc <__fxstatat@plt+0xe04c>
  404ab0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x64b8>
  404ab4:	mov	x3, x0
  404ab8:	add	x2, x2, #0x1b9
  404abc:	mov	w0, wzr
  404ac0:	mov	w1, w23
  404ac4:	mov	x23, x24
  404ac8:	mov	x24, x25
  404acc:	bl	4025b0 <error@plt>
  404ad0:	mov	w8, #0xb8                  	// #184
  404ad4:	madd	x25, x28, x8, x27
  404ad8:	ldr	w8, [x25, #40]!
  404adc:	ldr	x26, [x19, #16]
  404ae0:	and	w8, w8, #0xf000
  404ae4:	cmp	w8, #0xa, lsl #12
  404ae8:	b.ne	404bb0 <__fxstatat@plt+0x2000>  // b.any
  404aec:	ldr	w8, [x24, #1540]
  404af0:	cbz	w8, 404b04 <__fxstatat@plt+0x1f54>
  404af4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404af8:	ldrb	w8, [x8, #1538]
  404afc:	cmp	w8, #0x1
  404b00:	b.ne	404bb0 <__fxstatat@plt+0x2000>  // b.any
  404b04:	ldr	w8, [x19, #28]
  404b08:	mov	x0, x22
  404b0c:	mov	x1, x21
  404b10:	mov	x24, x23
  404b14:	and	w2, w8, #0x1
  404b18:	bl	40756c <__fxstatat@plt+0x49bc>
  404b1c:	mov	w8, #0xb8                  	// #184
  404b20:	madd	x26, x28, x8, x27
  404b24:	ldr	x1, [x26, #8]!
  404b28:	mov	x0, x22
  404b2c:	bl	4075c8 <__fxstatat@plt+0x4a18>
  404b30:	mov	x23, x0
  404b34:	cbz	x0, 404b9c <__fxstatat@plt+0x1fec>
  404b38:	ldr	w8, [x20]
  404b3c:	cbnz	w8, 404b54 <__fxstatat@plt+0x1fa4>
  404b40:	ldr	x0, [x26]
  404b44:	bl	4072ec <__fxstatat@plt+0x473c>
  404b48:	tbz	w0, #0, 404b54 <__fxstatat@plt+0x1fa4>
  404b4c:	mov	w8, #0xffffffff            	// #-1
  404b50:	str	w8, [x20]
  404b54:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404b58:	ldr	w8, [x8, #1552]
  404b5c:	cmp	w8, #0x1
  404b60:	b.hi	404b74 <__fxstatat@plt+0x1fc4>  // b.pmore
  404b64:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404b68:	ldrb	w8, [x8, #1538]
  404b6c:	cmp	w8, #0x1
  404b70:	b.ne	404b9c <__fxstatat@plt+0x1fec>  // b.any
  404b74:	add	x1, x19, #0x38
  404b78:	mov	x0, x23
  404b7c:	bl	414b60 <_obstack_memory_used@@Base+0x2018>
  404b80:	cbnz	w0, 404b9c <__fxstatat@plt+0x1fec>
  404b84:	mov	w8, #0xb8                  	// #184
  404b88:	madd	x8, x28, x8, x27
  404b8c:	mov	w9, #0x1                   	// #1
  404b90:	strb	w9, [x8, #169]
  404b94:	ldr	w9, [x19, #72]
  404b98:	str	w9, [x8, #156]
  404b9c:	mov	x0, x23
  404ba0:	bl	402990 <free@plt>
  404ba4:	ldr	x26, [x19, #16]
  404ba8:	mov	x23, x24
  404bac:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404bb0:	ldr	w8, [x25]
  404bb4:	and	w8, w8, #0xf000
  404bb8:	cmp	w8, #0xa, lsl #12
  404bbc:	b.eq	404be8 <__fxstatat@plt+0x2038>  // b.none
  404bc0:	cmp	w8, #0x4, lsl #12
  404bc4:	b.ne	404bf0 <__fxstatat@plt+0x2040>  // b.any
  404bc8:	ldr	w8, [x19, #28]
  404bcc:	tbz	w8, #0, 404be0 <__fxstatat@plt+0x2030>
  404bd0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404bd4:	ldrb	w8, [x8, #1548]
  404bd8:	cmp	w8, #0x1
  404bdc:	b.ne	404f9c <__fxstatat@plt+0x23ec>  // b.any
  404be0:	mov	w8, #0x3                   	// #3
  404be4:	b	404bf4 <__fxstatat@plt+0x2044>
  404be8:	mov	w8, #0x6                   	// #6
  404bec:	b	404bf4 <__fxstatat@plt+0x2044>
  404bf0:	mov	w8, #0x5                   	// #5
  404bf4:	ldr	x9, [x19, #8]
  404bf8:	str	w8, [x9]
  404bfc:	mov	w8, #0xb8                  	// #184
  404c00:	madd	x8, x28, x8, x27
  404c04:	ldr	w9, [x24, #1540]
  404c08:	ldr	x22, [x8, #88]
  404c0c:	cbz	w9, 404c20 <__fxstatat@plt+0x2070>
  404c10:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404c14:	ldrb	w8, [x8, #1669]
  404c18:	cmp	w8, #0x1
  404c1c:	b.ne	404c5c <__fxstatat@plt+0x20ac>  // b.any
  404c20:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404c24:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404c28:	ldr	w2, [x8, #2364]
  404c2c:	ldr	x4, [x9, #2376]
  404c30:	add	x1, x19, #0x38
  404c34:	mov	w3, #0x200                 	// #512
  404c38:	mov	x0, x22
  404c3c:	bl	40c910 <__fxstatat@plt+0x9d60>
  404c40:	mov	w1, wzr
  404c44:	bl	40da50 <__fxstatat@plt+0xaea0>
  404c48:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  404c4c:	ldr	w9, [x8, #1440]
  404c50:	cmp	w9, w0
  404c54:	b.ge	404c5c <__fxstatat@plt+0x20ac>  // b.tcont
  404c58:	str	w0, [x8, #1440]
  404c5c:	ldr	w8, [x24, #1540]
  404c60:	cbnz	w8, 404cf8 <__fxstatat@plt+0x2148>
  404c64:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404c68:	ldrb	w8, [x8, #2360]
  404c6c:	tbnz	w8, #0, 404c94 <__fxstatat@plt+0x20e4>
  404c70:	mov	w8, #0xb8                  	// #184
  404c74:	madd	x8, x28, x8, x27
  404c78:	ldr	w0, [x8, #48]
  404c7c:	bl	407660 <__fxstatat@plt+0x4ab0>
  404c80:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  404c84:	ldr	w9, [x8, #1448]
  404c88:	cmp	w9, w0
  404c8c:	b.ge	404c94 <__fxstatat@plt+0x20e4>  // b.tcont
  404c90:	str	w0, [x8, #1448]
  404c94:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404c98:	ldrb	w8, [x8, #2384]
  404c9c:	tbnz	w8, #0, 404cc4 <__fxstatat@plt+0x2114>
  404ca0:	mov	w8, #0xb8                  	// #184
  404ca4:	madd	x8, x28, x8, x27
  404ca8:	ldr	w0, [x8, #52]
  404cac:	bl	4076a0 <__fxstatat@plt+0x4af0>
  404cb0:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  404cb4:	ldr	w9, [x8, #1452]
  404cb8:	cmp	w9, w0
  404cbc:	b.ge	404cc4 <__fxstatat@plt+0x2114>  // b.tcont
  404cc0:	str	w0, [x8, #1452]
  404cc4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404cc8:	ldrb	w8, [x8, #2385]
  404ccc:	cmp	w8, #0x1
  404cd0:	b.ne	404cf8 <__fxstatat@plt+0x2148>  // b.any
  404cd4:	mov	w8, #0xb8                  	// #184
  404cd8:	madd	x8, x28, x8, x27
  404cdc:	ldr	w0, [x8, #48]
  404ce0:	bl	407660 <__fxstatat@plt+0x4ab0>
  404ce4:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  404ce8:	ldr	w9, [x8, #1456]
  404cec:	cmp	w9, w0
  404cf0:	b.ge	404cf8 <__fxstatat@plt+0x2148>  // b.tcont
  404cf4:	str	w0, [x8, #1456]
  404cf8:	ldrb	w8, [x23, #1668]
  404cfc:	cmp	w8, #0x1
  404d00:	b.ne	404d28 <__fxstatat@plt+0x2178>  // b.any
  404d04:	mov	w8, #0xb8                  	// #184
  404d08:	madd	x8, x28, x8, x27
  404d0c:	ldr	x0, [x8, #160]
  404d10:	bl	402550 <strlen@plt>
  404d14:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  404d18:	ldr	w9, [x8, #1460]
  404d1c:	cmp	w9, w0
  404d20:	b.ge	404d28 <__fxstatat@plt+0x2178>  // b.tcont
  404d24:	str	w0, [x8, #1460]
  404d28:	ldr	w8, [x24, #1540]
  404d2c:	cbz	w8, 404d40 <__fxstatat@plt+0x2190>
  404d30:	mov	w8, #0x1                   	// #1
  404d34:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404d38:	cbz	w8, 404e90 <__fxstatat@plt+0x22e0>
  404d3c:	b	404ec4 <__fxstatat@plt+0x2314>
  404d40:	mov	w8, #0xb8                  	// #184
  404d44:	madd	x8, x28, x8, x27
  404d48:	ldr	w0, [x8, #44]
  404d4c:	add	x1, x19, #0x20
  404d50:	bl	40d570 <__fxstatat@plt+0xa9c0>
  404d54:	bl	402550 <strlen@plt>
  404d58:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  404d5c:	ldr	w9, [x8, #1444]
  404d60:	cmp	w9, w0
  404d64:	b.ge	404d6c <__fxstatat@plt+0x21bc>  // b.tcont
  404d68:	str	w0, [x8, #1444]
  404d6c:	ldr	w8, [x25]
  404d70:	and	w8, w8, #0xf000
  404d74:	orr	w8, w8, #0x4000
  404d78:	cmp	w8, #0x6, lsl #12
  404d7c:	b.ne	404f44 <__fxstatat@plt+0x2394>  // b.any
  404d80:	mov	w8, #0xb8                  	// #184
  404d84:	madd	x23, x28, x8, x27
  404d88:	ldr	x0, [x23, #56]!
  404d8c:	bl	4028e0 <gnu_dev_major@plt>
  404d90:	mov	w0, w0
  404d94:	add	x1, x19, #0x38
  404d98:	bl	40d570 <__fxstatat@plt+0xa9c0>
  404d9c:	bl	402550 <strlen@plt>
  404da0:	adrp	x20, 42c000 <__progname@@GLIBC_2.17+0xa30>
  404da4:	ldr	w8, [x20, #1464]
  404da8:	cmp	w8, w0
  404dac:	b.ge	404db4 <__fxstatat@plt+0x2204>  // b.tcont
  404db0:	str	w0, [x20, #1464]
  404db4:	ldr	x0, [x23]
  404db8:	bl	402a10 <gnu_dev_minor@plt>
  404dbc:	mov	w0, w0
  404dc0:	add	x1, x19, #0x38
  404dc4:	bl	40d570 <__fxstatat@plt+0xa9c0>
  404dc8:	bl	402550 <strlen@plt>
  404dcc:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  404dd0:	ldr	w9, [x8, #1468]
  404dd4:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404dd8:	cmp	w9, w0
  404ddc:	b.ge	404de4 <__fxstatat@plt+0x2234>  // b.tcont
  404de0:	str	w0, [x8, #1468]
  404de4:	ldr	w9, [x20, #1464]
  404de8:	ldr	w10, [x8, #1468]
  404dec:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  404df0:	ldr	w11, [x8, #1472]
  404df4:	add	w9, w9, w10
  404df8:	add	w9, w9, #0x2
  404dfc:	cmp	w11, w9
  404e00:	b.ge	404e08 <__fxstatat@plt+0x2258>  // b.tcont
  404e04:	str	w9, [x8, #1472]
  404e08:	mov	w8, #0x1                   	// #1
  404e0c:	cbnz	w8, 404ec4 <__fxstatat@plt+0x2314>
  404e10:	b	404e90 <__fxstatat@plt+0x22e0>
  404e14:	ldr	x26, [x19, #16]
  404e18:	mov	x22, xzr
  404e1c:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404e20:	b	404ec4 <__fxstatat@plt+0x2314>
  404e24:	bl	402b40 <__errno_location@plt>
  404e28:	ldr	w8, [x0]
  404e2c:	cmp	w8, #0x2
  404e30:	cset	w8, eq  // eq = none
  404e34:	cbz	w8, 404f38 <__fxstatat@plt+0x2388>
  404e38:	mov	x0, x22
  404e3c:	mov	x1, x25
  404e40:	bl	414b80 <_obstack_memory_used@@Base+0x2038>
  404e44:	mov	w26, w0
  404e48:	mov	w25, wzr
  404e4c:	cbz	w26, 404924 <__fxstatat@plt+0x1d74>
  404e50:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  404e54:	add	x1, x1, #0xe79
  404e58:	mov	w2, #0x5                   	// #5
  404e5c:	mov	x0, xzr
  404e60:	bl	402ad0 <dcgettext@plt>
  404e64:	ldr	w20, [x19, #28]
  404e68:	mov	x1, x0
  404e6c:	mov	x2, x22
  404e70:	and	w0, w20, #0x1
  404e74:	bl	4068a0 <__fxstatat@plt+0x3cf0>
  404e78:	tbz	w20, #0, 404e98 <__fxstatat@plt+0x22e8>
  404e7c:	ldr	x26, [x19, #16]
  404e80:	mov	w8, wzr
  404e84:	mov	x22, xzr
  404e88:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404e8c:	cbnz	w8, 404ec4 <__fxstatat@plt+0x2314>
  404e90:	mov	x22, xzr
  404e94:	b	404f14 <__fxstatat@plt+0x2364>
  404e98:	ldr	x26, [x19, #16]
  404e9c:	mov	x0, x26
  404ea0:	bl	411d1c <__fxstatat@plt+0xf16c>
  404ea4:	str	x0, [x21]
  404ea8:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404eac:	ldr	x9, [x23, #1888]
  404eb0:	mov	w8, wzr
  404eb4:	mov	x22, xzr
  404eb8:	add	x9, x9, #0x1
  404ebc:	str	x9, [x23, #1888]
  404ec0:	cbz	w8, 404e90 <__fxstatat@plt+0x22e0>
  404ec4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404ec8:	ldrb	w8, [x8, #2322]
  404ecc:	cmp	w8, #0x1
  404ed0:	b.ne	404efc <__fxstatat@plt+0x234c>  // b.any
  404ed4:	ldr	x8, [x19]
  404ed8:	add	x1, x19, #0x38
  404edc:	ldr	x0, [x8]
  404ee0:	bl	40d570 <__fxstatat@plt+0xa9c0>
  404ee4:	bl	402550 <strlen@plt>
  404ee8:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  404eec:	ldr	w9, [x8, #1436]
  404ef0:	cmp	w9, w0
  404ef4:	b.ge	404efc <__fxstatat@plt+0x234c>  // b.tcont
  404ef8:	str	w0, [x8, #1436]
  404efc:	mov	x0, x26
  404f00:	bl	411d1c <__fxstatat@plt+0xf16c>
  404f04:	str	x0, [x21]
  404f08:	ldr	x8, [x23, #1888]
  404f0c:	add	x8, x8, #0x1
  404f10:	str	x8, [x23, #1888]
  404f14:	mov	x0, x22
  404f18:	mov	sp, x29
  404f1c:	ldp	x20, x19, [sp, #80]
  404f20:	ldp	x22, x21, [sp, #64]
  404f24:	ldp	x24, x23, [sp, #48]
  404f28:	ldp	x26, x25, [sp, #32]
  404f2c:	ldp	x28, x27, [sp, #16]
  404f30:	ldp	x29, x30, [sp], #96
  404f34:	ret
  404f38:	mov	w25, #0x1                   	// #1
  404f3c:	cbnz	w26, 404e50 <__fxstatat@plt+0x22a0>
  404f40:	b	404924 <__fxstatat@plt+0x1d74>
  404f44:	mov	w8, #0xb8                  	// #184
  404f48:	madd	x8, x28, x8, x27
  404f4c:	ldr	x0, [x8, #72]
  404f50:	bl	4076e0 <__fxstatat@plt+0x4b30>
  404f54:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404f58:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404f5c:	ldr	w2, [x8, #2368]
  404f60:	ldr	x4, [x9, #1288]
  404f64:	add	x1, x19, #0x38
  404f68:	mov	w3, #0x1                   	// #1
  404f6c:	bl	40c910 <__fxstatat@plt+0x9d60>
  404f70:	mov	w1, wzr
  404f74:	bl	40da50 <__fxstatat@plt+0xaea0>
  404f78:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  404f7c:	ldr	w9, [x8, #1472]
  404f80:	cmp	w9, w0
  404f84:	b.ge	404f8c <__fxstatat@plt+0x23dc>  // b.tcont
  404f88:	str	w0, [x8, #1472]
  404f8c:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x184b8>
  404f90:	mov	w8, #0x1                   	// #1
  404f94:	cbnz	w8, 404ec4 <__fxstatat@plt+0x2314>
  404f98:	b	404e90 <__fxstatat@plt+0x22e0>
  404f9c:	mov	w8, #0x9                   	// #9
  404fa0:	b	404bf4 <__fxstatat@plt+0x2044>
  404fa4:	stp	x29, x30, [sp, #-48]!
  404fa8:	stp	x20, x19, [sp, #32]
  404fac:	mov	x20, x0
  404fb0:	mov	w0, #0x20                  	// #32
  404fb4:	stp	x22, x21, [sp, #16]
  404fb8:	mov	x29, sp
  404fbc:	mov	x21, x1
  404fc0:	and	w22, w2, #0x1
  404fc4:	bl	411b44 <__fxstatat@plt+0xef94>
  404fc8:	mov	x19, x0
  404fcc:	cbz	x21, 404fec <__fxstatat@plt+0x243c>
  404fd0:	mov	x0, x21
  404fd4:	bl	411d1c <__fxstatat@plt+0xf16c>
  404fd8:	str	x0, [x19, #8]
  404fdc:	cbz	x20, 404ff8 <__fxstatat@plt+0x2448>
  404fe0:	mov	x0, x20
  404fe4:	bl	411d1c <__fxstatat@plt+0xf16c>
  404fe8:	b	404ffc <__fxstatat@plt+0x244c>
  404fec:	mov	x0, xzr
  404ff0:	str	x0, [x19, #8]
  404ff4:	cbnz	x20, 404fe0 <__fxstatat@plt+0x2430>
  404ff8:	mov	x0, xzr
  404ffc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405000:	ldr	x9, [x8, #1512]
  405004:	str	x0, [x19]
  405008:	strb	w22, [x19, #16]
  40500c:	str	x19, [x8, #1512]
  405010:	str	x9, [x19, #24]
  405014:	ldp	x20, x19, [sp, #32]
  405018:	ldp	x22, x21, [sp, #16]
  40501c:	ldp	x29, x30, [sp], #48
  405020:	ret
  405024:	stp	x29, x30, [sp, #-48]!
  405028:	stp	x20, x19, [sp, #32]
  40502c:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405030:	str	x21, [sp, #16]
  405034:	adrp	x21, 42c000 <__progname@@GLIBC_2.17+0xa30>
  405038:	ldr	x8, [x19, #1888]
  40503c:	ldr	x9, [x21, #1504]
  405040:	adrp	x20, 42c000 <__progname@@GLIBC_2.17+0xa30>
  405044:	mov	x29, sp
  405048:	add	x8, x8, x8, lsr #1
  40504c:	cmp	x9, x8
  405050:	b.cs	405078 <__fxstatat@plt+0x24c8>  // b.hs, b.nlast
  405054:	ldr	x0, [x20, #1424]
  405058:	bl	402990 <free@plt>
  40505c:	ldr	x0, [x19, #1888]
  405060:	mov	w1, #0x18                  	// #24
  405064:	bl	411b18 <__fxstatat@plt+0xef68>
  405068:	ldr	x8, [x19, #1888]
  40506c:	str	x0, [x20, #1424]
  405070:	add	x8, x8, x8, lsl #1
  405074:	str	x8, [x21, #1504]
  405078:	bl	407848 <__fxstatat@plt+0x4c98>
  40507c:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405080:	ldr	w8, [x21, #1664]
  405084:	cmn	w8, #0x1
  405088:	b.eq	405104 <__fxstatat@plt+0x2554>  // b.none
  40508c:	adrp	x0, 42c000 <__progname@@GLIBC_2.17+0xa30>
  405090:	add	x0, x0, #0x5e8
  405094:	bl	402590 <_setjmp@plt>
  405098:	cbz	w0, 4050b4 <__fxstatat@plt+0x2504>
  40509c:	ldr	w8, [x21, #1664]
  4050a0:	cmp	w8, #0x3
  4050a4:	b.eq	405114 <__fxstatat@plt+0x2564>  // b.none
  4050a8:	bl	407848 <__fxstatat@plt+0x4c98>
  4050ac:	mov	w8, #0x1                   	// #1
  4050b0:	b	4050b8 <__fxstatat@plt+0x2508>
  4050b4:	mov	x8, xzr
  4050b8:	ldr	w9, [x21, #1664]
  4050bc:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4050c0:	ldr	w10, [x10, #2316]
  4050c4:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4050c8:	cmp	w9, #0x4
  4050cc:	adrp	x12, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4050d0:	csel	w10, w10, wzr, eq  // eq = none
  4050d4:	ldrb	w11, [x11, #2320]
  4050d8:	add	w9, w10, w9
  4050dc:	adrp	x10, 416000 <_obstack_memory_used@@Base+0x34b8>
  4050e0:	ldrb	w12, [x12, #1537]
  4050e4:	add	x10, x10, #0x840
  4050e8:	add	x9, x10, x9, lsl #6
  4050ec:	add	x8, x9, x8, lsl #5
  4050f0:	add	x8, x8, x11, lsl #4
  4050f4:	ldr	x0, [x20, #1424]
  4050f8:	ldr	x1, [x19, #1888]
  4050fc:	ldr	x2, [x8, x12, lsl #3]
  405100:	bl	40dcac <__fxstatat@plt+0xb0fc>
  405104:	ldp	x20, x19, [sp, #32]
  405108:	ldr	x21, [sp, #16]
  40510c:	ldp	x29, x30, [sp], #48
  405110:	ret
  405114:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  405118:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x34b8>
  40511c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x54b8>
  405120:	add	x0, x0, #0xeb1
  405124:	add	x1, x1, #0xaeb
  405128:	add	x3, x3, #0xecb
  40512c:	mov	w2, #0xeea                 	// #3818
  405130:	bl	402b30 <__assert_fail@plt>
  405134:	stp	x29, x30, [sp, #-80]!
  405138:	stp	x20, x19, [sp, #64]
  40513c:	mov	w19, w1
  405140:	mov	x20, x0
  405144:	str	x25, [sp, #16]
  405148:	stp	x24, x23, [sp, #32]
  40514c:	stp	x22, x21, [sp, #48]
  405150:	mov	x29, sp
  405154:	cbz	x0, 405174 <__fxstatat@plt+0x25c4>
  405158:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40515c:	ldr	x8, [x8, #1560]
  405160:	cbz	x8, 405174 <__fxstatat@plt+0x25c4>
  405164:	mov	x0, xzr
  405168:	mov	x1, x20
  40516c:	mov	w2, wzr
  405170:	bl	404fa4 <__fxstatat@plt+0x23f4>
  405174:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405178:	ldr	x8, [x23, #1888]
  40517c:	adrp	x24, 42c000 <__progname@@GLIBC_2.17+0xa30>
  405180:	cbz	x8, 40521c <__fxstatat@plt+0x266c>
  405184:	sub	x25, x8, #0x1
  405188:	b	405198 <__fxstatat@plt+0x25e8>
  40518c:	sub	x25, x25, #0x1
  405190:	cmn	x25, #0x1
  405194:	b.eq	40521c <__fxstatat@plt+0x266c>  // b.none
  405198:	ldr	x8, [x24, #1424]
  40519c:	ldr	x21, [x8, x25, lsl #3]
  4051a0:	mov	x0, x21
  4051a4:	bl	4077d0 <__fxstatat@plt+0x4c20>
  4051a8:	tbz	w0, #0, 40518c <__fxstatat@plt+0x25dc>
  4051ac:	cbz	x20, 4051cc <__fxstatat@plt+0x261c>
  4051b0:	ldr	x22, [x21]
  4051b4:	mov	x0, x22
  4051b8:	bl	4077ec <__fxstatat@plt+0x4c3c>
  4051bc:	tbnz	w0, #0, 40518c <__fxstatat@plt+0x25dc>
  4051c0:	ldrb	w8, [x22]
  4051c4:	cmp	w8, #0x2f
  4051c8:	b.ne	4051dc <__fxstatat@plt+0x262c>  // b.any
  4051cc:	ldp	x0, x1, [x21]
  4051d0:	and	w2, w19, #0x1
  4051d4:	bl	404fa4 <__fxstatat@plt+0x23f4>
  4051d8:	b	405204 <__fxstatat@plt+0x2654>
  4051dc:	mov	x0, x20
  4051e0:	mov	x1, x22
  4051e4:	mov	x2, xzr
  4051e8:	bl	40b334 <__fxstatat@plt+0x8784>
  4051ec:	ldr	x1, [x21, #8]
  4051f0:	and	w2, w19, #0x1
  4051f4:	mov	x22, x0
  4051f8:	bl	404fa4 <__fxstatat@plt+0x23f4>
  4051fc:	mov	x0, x22
  405200:	bl	402990 <free@plt>
  405204:	ldr	w8, [x21, #152]
  405208:	cmp	w8, #0x9
  40520c:	b.ne	40518c <__fxstatat@plt+0x25dc>  // b.any
  405210:	mov	x0, x21
  405214:	bl	4072a0 <__fxstatat@plt+0x46f0>
  405218:	b	40518c <__fxstatat@plt+0x25dc>
  40521c:	ldr	x8, [x23, #1888]
  405220:	cbz	x8, 405258 <__fxstatat@plt+0x26a8>
  405224:	ldr	x9, [x24, #1424]
  405228:	ldr	x10, [x23, #1888]
  40522c:	mov	x8, xzr
  405230:	mov	x11, xzr
  405234:	ldr	x12, [x9, x8, lsl #3]
  405238:	add	x8, x8, #0x1
  40523c:	str	x12, [x9, x11, lsl #3]
  405240:	ldr	w12, [x12, #152]
  405244:	cmp	w12, #0x9
  405248:	cinc	x11, x11, ne  // ne = any
  40524c:	cmp	x8, x10
  405250:	b.cc	405234 <__fxstatat@plt+0x2684>  // b.lo, b.ul, b.last
  405254:	b	40525c <__fxstatat@plt+0x26ac>
  405258:	mov	x11, xzr
  40525c:	str	x11, [x23, #1888]
  405260:	ldp	x20, x19, [sp, #64]
  405264:	ldp	x22, x21, [sp, #48]
  405268:	ldp	x24, x23, [sp, #32]
  40526c:	ldr	x25, [sp, #16]
  405270:	ldp	x29, x30, [sp], #80
  405274:	ret
  405278:	stp	x29, x30, [sp, #-48]!
  40527c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405280:	ldr	w8, [x8, #1540]
  405284:	stp	x22, x21, [sp, #16]
  405288:	stp	x20, x19, [sp, #32]
  40528c:	mov	x29, sp
  405290:	cmp	w8, #0x4
  405294:	b.hi	405378 <__fxstatat@plt+0x27c8>  // b.pmore
  405298:	adrp	x9, 414000 <_obstack_memory_used@@Base+0x14b8>
  40529c:	add	x9, x9, #0xe0a
  4052a0:	adr	x10, 4052b0 <__fxstatat@plt+0x2700>
  4052a4:	ldrb	w11, [x9, x8]
  4052a8:	add	x10, x10, x11, lsl #2
  4052ac:	br	x10
  4052b0:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4052b4:	ldr	x8, [x19, #1888]
  4052b8:	cbz	x8, 405378 <__fxstatat@plt+0x27c8>
  4052bc:	mov	x20, xzr
  4052c0:	adrp	x21, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4052c4:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4052c8:	bl	408df0 <__fxstatat@plt+0x6240>
  4052cc:	ldr	x8, [x21, #1424]
  4052d0:	ldr	x0, [x8, x20, lsl #3]
  4052d4:	bl	408e40 <__fxstatat@plt+0x6290>
  4052d8:	mov	w0, #0xa                   	// #10
  4052dc:	bl	4027f0 <putchar_unlocked@plt>
  4052e0:	ldr	x8, [x22, #1896]
  4052e4:	ldr	x9, [x19, #1888]
  4052e8:	add	x20, x20, #0x1
  4052ec:	add	x8, x8, #0x1
  4052f0:	cmp	x20, x9
  4052f4:	str	x8, [x22, #1896]
  4052f8:	b.cc	4052c8 <__fxstatat@plt+0x2718>  // b.lo, b.ul, b.last
  4052fc:	b	405378 <__fxstatat@plt+0x27c8>
  405300:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405304:	ldr	x8, [x19, #1888]
  405308:	cbz	x8, 405378 <__fxstatat@plt+0x27c8>
  40530c:	mov	x20, xzr
  405310:	adrp	x21, 42c000 <__progname@@GLIBC_2.17+0xa30>
  405314:	ldr	x8, [x21, #1424]
  405318:	mov	x1, xzr
  40531c:	ldr	x0, [x8, x20, lsl #3]
  405320:	bl	408978 <__fxstatat@plt+0x5dc8>
  405324:	mov	w0, #0xa                   	// #10
  405328:	bl	4027f0 <putchar_unlocked@plt>
  40532c:	ldr	x8, [x19, #1888]
  405330:	add	x20, x20, #0x1
  405334:	cmp	x20, x8
  405338:	b.cc	405314 <__fxstatat@plt+0x2764>  // b.lo, b.ul, b.last
  40533c:	b	405378 <__fxstatat@plt+0x27c8>
  405340:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405344:	ldr	x8, [x8, #2344]
  405348:	cbz	x8, 405370 <__fxstatat@plt+0x27c0>
  40534c:	bl	408bd8 <__fxstatat@plt+0x6028>
  405350:	b	405378 <__fxstatat@plt+0x27c8>
  405354:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405358:	ldr	x8, [x8, #2344]
  40535c:	cbz	x8, 405370 <__fxstatat@plt+0x27c0>
  405360:	bl	408ce8 <__fxstatat@plt+0x6138>
  405364:	b	405378 <__fxstatat@plt+0x27c8>
  405368:	mov	w0, #0x2c                  	// #44
  40536c:	b	405374 <__fxstatat@plt+0x27c4>
  405370:	mov	w0, #0x20                  	// #32
  405374:	bl	408ad8 <__fxstatat@plt+0x5f28>
  405378:	ldp	x20, x19, [sp, #32]
  40537c:	ldp	x22, x21, [sp, #16]
  405380:	ldp	x29, x30, [sp], #48
  405384:	ret
  405388:	stp	x29, x30, [sp, #-16]!
  40538c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405390:	add	x8, x8, #0x630
  405394:	ldp	x8, x9, [x8]
  405398:	mov	x29, sp
  40539c:	sub	x8, x9, x8
  4053a0:	cmp	x8, #0xf
  4053a4:	b.ls	4053c4 <__fxstatat@plt+0x2814>  // b.plast
  4053a8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4053ac:	ldr	x9, [x8, #1592]
  4053b0:	sub	x10, x9, #0x10
  4053b4:	str	x10, [x8, #1592]
  4053b8:	ldp	x0, x1, [x9, #-16]
  4053bc:	ldp	x29, x30, [sp], #16
  4053c0:	ret
  4053c4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  4053c8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x34b8>
  4053cc:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x54b8>
  4053d0:	add	x0, x0, #0x7b1
  4053d4:	add	x1, x1, #0xaeb
  4053d8:	add	x3, x3, #0x7e8
  4053dc:	mov	w2, #0x403                 	// #1027
  4053e0:	bl	402b30 <__assert_fail@plt>
  4053e4:	stp	x29, x30, [sp, #-32]!
  4053e8:	str	x19, [sp, #16]
  4053ec:	mov	x19, x0
  4053f0:	ldr	x0, [x0]
  4053f4:	mov	x29, sp
  4053f8:	bl	402990 <free@plt>
  4053fc:	ldr	x0, [x19, #8]
  405400:	bl	402990 <free@plt>
  405404:	mov	x0, x19
  405408:	bl	402990 <free@plt>
  40540c:	ldr	x19, [sp, #16]
  405410:	ldp	x29, x30, [sp], #32
  405414:	ret
  405418:	stp	x29, x30, [sp, #-96]!
  40541c:	stp	x28, x27, [sp, #16]
  405420:	stp	x26, x25, [sp, #32]
  405424:	stp	x24, x23, [sp, #48]
  405428:	stp	x22, x21, [sp, #64]
  40542c:	stp	x20, x19, [sp, #80]
  405430:	mov	x29, sp
  405434:	sub	sp, sp, #0x2a0
  405438:	mov	w20, w2
  40543c:	mov	x23, x1
  405440:	mov	x19, x0
  405444:	bl	402b40 <__errno_location@plt>
  405448:	mov	x22, x0
  40544c:	str	wzr, [x0]
  405450:	mov	x0, x19
  405454:	bl	402620 <opendir@plt>
  405458:	cbz	x0, 4054e0 <__fxstatat@plt+0x2930>
  40545c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405460:	ldr	x8, [x8, #1560]
  405464:	mov	x21, x0
  405468:	cbz	x8, 405548 <__fxstatat@plt+0x2998>
  40546c:	mov	x0, x21
  405470:	bl	402a30 <dirfd@plt>
  405474:	add	x1, sp, #0x8
  405478:	tbnz	w0, #31, 405504 <__fxstatat@plt+0x2954>
  40547c:	bl	414b70 <_obstack_memory_used@@Base+0x2028>
  405480:	tbnz	w0, #31, 405510 <__fxstatat@plt+0x2960>
  405484:	ldp	x0, x1, [sp, #8]
  405488:	bl	4068fc <__fxstatat@plt+0x3d4c>
  40548c:	tbz	w0, #0, 405540 <__fxstatat@plt+0x2990>
  405490:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  405494:	add	x1, x1, #0xde3
  405498:	mov	w2, #0x5                   	// #5
  40549c:	mov	x0, xzr
  4054a0:	bl	402ad0 <dcgettext@plt>
  4054a4:	mov	x20, x0
  4054a8:	mov	w1, #0x3                   	// #3
  4054ac:	mov	w0, wzr
  4054b0:	mov	x2, x19
  4054b4:	bl	410bfc <__fxstatat@plt+0xe04c>
  4054b8:	mov	x3, x0
  4054bc:	mov	w0, wzr
  4054c0:	mov	w1, wzr
  4054c4:	mov	x2, x20
  4054c8:	bl	4025b0 <error@plt>
  4054cc:	mov	x0, x21
  4054d0:	bl	402850 <closedir@plt>
  4054d4:	mov	w0, #0x1                   	// #1
  4054d8:	bl	406968 <__fxstatat@plt+0x3db8>
  4054dc:	b	4058a0 <__fxstatat@plt+0x2cf0>
  4054e0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  4054e4:	add	x1, x1, #0xda2
  4054e8:	mov	w2, #0x5                   	// #5
  4054ec:	bl	402ad0 <dcgettext@plt>
  4054f0:	mov	x1, x0
  4054f4:	and	w0, w20, #0x1
  4054f8:	mov	x2, x19
  4054fc:	bl	4068a0 <__fxstatat@plt+0x3cf0>
  405500:	b	4058a0 <__fxstatat@plt+0x2cf0>
  405504:	mov	x0, x19
  405508:	bl	414b60 <_obstack_memory_used@@Base+0x2018>
  40550c:	tbz	w0, #31, 405484 <__fxstatat@plt+0x28d4>
  405510:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  405514:	add	x1, x1, #0xdbb
  405518:	mov	w2, #0x5                   	// #5
  40551c:	mov	x0, xzr
  405520:	bl	402ad0 <dcgettext@plt>
  405524:	mov	x1, x0
  405528:	and	w0, w20, #0x1
  40552c:	mov	x2, x19
  405530:	bl	4068a0 <__fxstatat@plt+0x3cf0>
  405534:	mov	x0, x21
  405538:	bl	402850 <closedir@plt>
  40553c:	b	4058a0 <__fxstatat@plt+0x2cf0>
  405540:	ldp	x0, x1, [sp, #8]
  405544:	bl	406990 <__fxstatat@plt+0x3de0>
  405548:	bl	404550 <__fxstatat@plt+0x19a0>
  40554c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405550:	ldrb	w8, [x8, #1556]
  405554:	adrp	x27, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405558:	adrp	x26, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40555c:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405560:	tbnz	w8, #0, 405574 <__fxstatat@plt+0x29c4>
  405564:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405568:	ldrb	w8, [x8, #1508]
  40556c:	cmp	w8, #0x1
  405570:	b.ne	405660 <__fxstatat@plt+0x2ab0>  // b.any
  405574:	adrp	x24, 42c000 <__progname@@GLIBC_2.17+0xa30>
  405578:	ldrb	w8, [x24, #1416]
  40557c:	cmp	w8, #0x1
  405580:	b.ne	405598 <__fxstatat@plt+0x29e8>  // b.any
  405584:	mov	w0, #0xa                   	// #10
  405588:	bl	4027f0 <putchar_unlocked@plt>
  40558c:	ldr	x8, [x25, #1896]
  405590:	add	x8, x8, #0x1
  405594:	str	x8, [x25, #1896]
  405598:	ldrb	w8, [x27, #1677]
  40559c:	mov	w9, #0x1                   	// #1
  4055a0:	strb	w9, [x24, #1416]
  4055a4:	cmp	w8, #0x1
  4055a8:	b.ne	4055c8 <__fxstatat@plt+0x2a18>  // b.any
  4055ac:	ldr	x1, [x26, #1480]
  4055b0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  4055b4:	add	x0, x0, #0xe0c
  4055b8:	bl	402ae0 <fputs_unlocked@plt>
  4055bc:	ldr	x8, [x25, #1896]
  4055c0:	add	x8, x8, #0x2
  4055c4:	str	x8, [x25, #1896]
  4055c8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4055cc:	ldrb	w8, [x8, #1856]
  4055d0:	cbz	w8, 40560c <__fxstatat@plt+0x2a5c>
  4055d4:	mov	w1, #0x2                   	// #2
  4055d8:	mov	x0, x19
  4055dc:	bl	40a810 <__fxstatat@plt+0x7c60>
  4055e0:	mov	x24, x0
  4055e4:	cbnz	x0, 405610 <__fxstatat@plt+0x2a60>
  4055e8:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  4055ec:	add	x1, x1, #0xe0f
  4055f0:	mov	w2, #0x5                   	// #5
  4055f4:	bl	402ad0 <dcgettext@plt>
  4055f8:	mov	x1, x0
  4055fc:	and	w0, w20, #0x1
  405600:	mov	x2, x19
  405604:	bl	4068a0 <__fxstatat@plt+0x3cf0>
  405608:	b	405610 <__fxstatat@plt+0x2a60>
  40560c:	mov	x24, xzr
  405610:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405614:	ldr	x1, [x8, #2408]
  405618:	cmp	x23, #0x0
  40561c:	adrp	x5, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405620:	csel	x0, x19, x23, eq  // eq = none
  405624:	add	x5, x5, #0x6e8
  405628:	mov	w2, #0xffffffff            	// #-1
  40562c:	mov	w4, #0x1                   	// #1
  405630:	mov	x3, xzr
  405634:	mov	x6, x24
  405638:	bl	4069ec <__fxstatat@plt+0x3e3c>
  40563c:	mov	x0, x24
  405640:	bl	402990 <free@plt>
  405644:	ldr	x1, [x26, #1480]
  405648:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  40564c:	add	x0, x0, #0xa1a
  405650:	bl	402ae0 <fputs_unlocked@plt>
  405654:	ldr	x8, [x25, #1896]
  405658:	add	x8, x8, #0x2
  40565c:	str	x8, [x25, #1896]
  405660:	adrp	x24, 418000 <_obstack_memory_used@@Base+0x54b8>
  405664:	mov	x23, xzr
  405668:	add	x24, x24, #0xe27
  40566c:	adrp	x27, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405670:	adrp	x28, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405674:	b	40567c <__fxstatat@plt+0x2acc>
  405678:	bl	406ce4 <__fxstatat@plt+0x4134>
  40567c:	mov	x0, x21
  405680:	str	wzr, [x22]
  405684:	bl	402820 <readdir@plt>
  405688:	cbz	x0, 4056c4 <__fxstatat@plt+0x2b14>
  40568c:	add	x25, x0, #0x13
  405690:	mov	x26, x0
  405694:	mov	x0, x25
  405698:	bl	406c5c <__fxstatat@plt+0x40ac>
  40569c:	tbnz	w0, #0, 405678 <__fxstatat@plt+0x2ac8>
  4056a0:	ldrb	w8, [x26, #18]
  4056a4:	sub	w8, w8, #0x1
  4056a8:	cmp	w8, #0xd
  4056ac:	b.hi	4056fc <__fxstatat@plt+0x2b4c>  // b.pmore
  4056b0:	adrp	x9, 416000 <_obstack_memory_used@@Base+0x34b8>
  4056b4:	sxtb	x8, w8
  4056b8:	add	x9, x9, #0xa98
  4056bc:	ldr	w1, [x9, x8, lsl #2]
  4056c0:	b	405700 <__fxstatat@plt+0x2b50>
  4056c4:	ldr	w8, [x22]
  4056c8:	cbz	w8, 405758 <__fxstatat@plt+0x2ba8>
  4056cc:	mov	w2, #0x5                   	// #5
  4056d0:	mov	x0, xzr
  4056d4:	mov	x1, x24
  4056d8:	bl	402ad0 <dcgettext@plt>
  4056dc:	mov	x1, x0
  4056e0:	and	w0, w20, #0x1
  4056e4:	mov	x2, x19
  4056e8:	bl	4068a0 <__fxstatat@plt+0x3cf0>
  4056ec:	ldr	w8, [x22]
  4056f0:	cmp	w8, #0x4b
  4056f4:	b.eq	405678 <__fxstatat@plt+0x2ac8>  // b.none
  4056f8:	b	405758 <__fxstatat@plt+0x2ba8>
  4056fc:	mov	w1, wzr
  405700:	mov	x0, x25
  405704:	mov	w2, wzr
  405708:	mov	x3, x19
  40570c:	bl	404604 <__fxstatat@plt+0x1a54>
  405710:	ldr	w8, [x27, #1540]
  405714:	add	x23, x0, x23
  405718:	cmp	w8, #0x1
  40571c:	b.ne	405678 <__fxstatat@plt+0x2ac8>  // b.any
  405720:	ldr	w8, [x28, #1664]
  405724:	cmn	w8, #0x1
  405728:	b.ne	405678 <__fxstatat@plt+0x2ac8>  // b.any
  40572c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405730:	ldrb	w8, [x8, #1669]
  405734:	tbnz	w8, #0, 405678 <__fxstatat@plt+0x2ac8>
  405738:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40573c:	ldrb	w8, [x8, #1556]
  405740:	tbnz	w8, #0, 405678 <__fxstatat@plt+0x2ac8>
  405744:	bl	405024 <__fxstatat@plt+0x2474>
  405748:	bl	405278 <__fxstatat@plt+0x26c8>
  40574c:	bl	404550 <__fxstatat@plt+0x19a0>
  405750:	bl	406ce4 <__fxstatat@plt+0x4134>
  405754:	b	40567c <__fxstatat@plt+0x2acc>
  405758:	mov	x0, x21
  40575c:	bl	402850 <closedir@plt>
  405760:	cbz	w0, 405788 <__fxstatat@plt+0x2bd8>
  405764:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  405768:	add	x1, x1, #0xe3c
  40576c:	mov	w2, #0x5                   	// #5
  405770:	mov	x0, xzr
  405774:	bl	402ad0 <dcgettext@plt>
  405778:	mov	x1, x0
  40577c:	and	w0, w20, #0x1
  405780:	mov	x2, x19
  405784:	bl	4068a0 <__fxstatat@plt+0x3cf0>
  405788:	bl	405024 <__fxstatat@plt+0x2474>
  40578c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405790:	ldrb	w8, [x8, #1556]
  405794:	cmp	w8, #0x1
  405798:	b.ne	4057a8 <__fxstatat@plt+0x2bf8>  // b.any
  40579c:	mov	x0, x19
  4057a0:	mov	w1, wzr
  4057a4:	bl	405134 <__fxstatat@plt+0x2584>
  4057a8:	ldr	w8, [x27, #1540]
  4057ac:	cbz	w8, 4057c0 <__fxstatat@plt+0x2c10>
  4057b0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4057b4:	ldrb	w8, [x8, #1669]
  4057b8:	cmp	w8, #0x1
  4057bc:	b.ne	405890 <__fxstatat@plt+0x2ce0>  // b.any
  4057c0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4057c4:	ldrb	w8, [x8, #1677]
  4057c8:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4057cc:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4057d0:	cmp	w8, #0x1
  4057d4:	b.ne	4057f4 <__fxstatat@plt+0x2c44>  // b.any
  4057d8:	ldr	x1, [x21, #1480]
  4057dc:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  4057e0:	add	x0, x0, #0xe0c
  4057e4:	bl	402ae0 <fputs_unlocked@plt>
  4057e8:	ldr	x8, [x20, #1896]
  4057ec:	add	x8, x8, #0x2
  4057f0:	str	x8, [x20, #1896]
  4057f4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  4057f8:	add	x1, x1, #0xe51
  4057fc:	mov	w2, #0x5                   	// #5
  405800:	mov	x0, xzr
  405804:	bl	402ad0 <dcgettext@plt>
  405808:	ldr	x1, [x21, #1480]
  40580c:	mov	x19, x0
  405810:	bl	402ae0 <fputs_unlocked@plt>
  405814:	mov	x0, x19
  405818:	bl	402550 <strlen@plt>
  40581c:	ldr	x8, [x20, #1896]
  405820:	add	x8, x8, x0
  405824:	mov	w0, #0x20                  	// #32
  405828:	str	x8, [x20, #1896]
  40582c:	bl	4027f0 <putchar_unlocked@plt>
  405830:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405834:	ldr	x8, [x20, #1896]
  405838:	ldr	w2, [x9, #2364]
  40583c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405840:	ldr	x4, [x9, #2376]
  405844:	add	x8, x8, #0x1
  405848:	add	x1, sp, #0x8
  40584c:	mov	w3, #0x200                 	// #512
  405850:	mov	x0, x23
  405854:	str	x8, [x20, #1896]
  405858:	bl	40c910 <__fxstatat@plt+0x9d60>
  40585c:	ldr	x1, [x21, #1480]
  405860:	mov	x19, x0
  405864:	bl	402ae0 <fputs_unlocked@plt>
  405868:	mov	x0, x19
  40586c:	bl	402550 <strlen@plt>
  405870:	ldr	x8, [x20, #1896]
  405874:	add	x8, x8, x0
  405878:	mov	w0, #0xa                   	// #10
  40587c:	str	x8, [x20, #1896]
  405880:	bl	4027f0 <putchar_unlocked@plt>
  405884:	ldr	x8, [x20, #1896]
  405888:	add	x8, x8, #0x1
  40588c:	str	x8, [x20, #1896]
  405890:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405894:	ldr	x8, [x8, #1888]
  405898:	cbz	x8, 4058a0 <__fxstatat@plt+0x2cf0>
  40589c:	bl	405278 <__fxstatat@plt+0x26c8>
  4058a0:	add	sp, sp, #0x2a0
  4058a4:	ldp	x20, x19, [sp, #80]
  4058a8:	ldp	x22, x21, [sp, #64]
  4058ac:	ldp	x24, x23, [sp, #48]
  4058b0:	ldp	x26, x25, [sp, #32]
  4058b4:	ldp	x28, x27, [sp, #16]
  4058b8:	ldp	x29, x30, [sp], #96
  4058bc:	ret
  4058c0:	stp	x29, x30, [sp, #-32]!
  4058c4:	str	x19, [sp, #16]
  4058c8:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4058cc:	add	x19, x19, #0x388
  4058d0:	mov	x0, x19
  4058d4:	mov	x29, sp
  4058d8:	bl	405f40 <__fxstatat@plt+0x3390>
  4058dc:	add	x0, x19, #0x10
  4058e0:	bl	405f40 <__fxstatat@plt+0x3390>
  4058e4:	ldr	x19, [sp, #16]
  4058e8:	ldp	x29, x30, [sp], #32
  4058ec:	ret
  4058f0:	stp	x29, x30, [sp, #-16]!
  4058f4:	mov	w0, wzr
  4058f8:	mov	x29, sp
  4058fc:	bl	405ff8 <__fxstatat@plt+0x3448>
  405900:	ldp	x29, x30, [sp], #16
  405904:	ret
  405908:	stp	x29, x30, [sp, #-48]!
  40590c:	stp	x22, x21, [sp, #16]
  405910:	stp	x20, x19, [sp, #32]
  405914:	ldp	x20, x8, [x1, #16]
  405918:	mov	x29, sp
  40591c:	subs	x8, x8, x20
  405920:	lsr	x21, x8, #3
  405924:	cbz	x21, 4059a8 <__fxstatat@plt+0x2df8>
  405928:	b.ne	405938 <__fxstatat@plt+0x2d88>  // b.any
  40592c:	ldrb	w8, [x1, #80]
  405930:	orr	w8, w8, #0x2
  405934:	strb	w8, [x1, #80]
  405938:	ldr	x9, [x1, #48]
  40593c:	ldp	x10, x8, [x1, #24]
  405940:	ldr	x11, [x1, #8]
  405944:	add	x10, x9, x10
  405948:	bic	x9, x10, x9
  40594c:	sub	x10, x9, x11
  405950:	sub	x11, x8, x11
  405954:	cmp	x10, x11
  405958:	str	x9, [x1, #24]
  40595c:	b.ls	405964 <__fxstatat@plt+0x2db4>  // b.plast
  405960:	str	x8, [x1, #24]
  405964:	ldr	x8, [x1, #24]
  405968:	str	x8, [x1, #16]
  40596c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405970:	ldr	x1, [x8, #1480]
  405974:	bl	402ae0 <fputs_unlocked@plt>
  405978:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x54b8>
  40597c:	mov	x22, xzr
  405980:	add	x19, x19, #0x84f
  405984:	ldr	x2, [x20, x22, lsl #3]
  405988:	mov	w0, #0x1                   	// #1
  40598c:	mov	x1, x19
  405990:	bl	4027b0 <__printf_chk@plt>
  405994:	add	x22, x22, #0x1
  405998:	cmp	x22, x21
  40599c:	b.cc	405984 <__fxstatat@plt+0x2dd4>  // b.lo, b.ul, b.last
  4059a0:	mov	w0, #0xa                   	// #10
  4059a4:	bl	4027f0 <putchar_unlocked@plt>
  4059a8:	ldp	x20, x19, [sp, #32]
  4059ac:	ldp	x22, x21, [sp, #16]
  4059b0:	ldp	x29, x30, [sp], #48
  4059b4:	ret
  4059b8:	stp	x29, x30, [sp, #-32]!
  4059bc:	stp	x20, x19, [sp, #16]
  4059c0:	mov	w19, w0
  4059c4:	mov	x29, sp
  4059c8:	cbnz	w0, 405d4c <__fxstatat@plt+0x319c>
  4059cc:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x34b8>
  4059d0:	add	x1, x1, #0xb9b
  4059d4:	mov	w2, #0x5                   	// #5
  4059d8:	mov	x0, xzr
  4059dc:	bl	402ad0 <dcgettext@plt>
  4059e0:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4059e4:	ldr	x2, [x8, #1888]
  4059e8:	mov	x1, x0
  4059ec:	mov	w0, #0x1                   	// #1
  4059f0:	bl	4027b0 <__printf_chk@plt>
  4059f4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x34b8>
  4059f8:	add	x1, x1, #0xbbc
  4059fc:	mov	w2, #0x5                   	// #5
  405a00:	mov	x0, xzr
  405a04:	bl	402ad0 <dcgettext@plt>
  405a08:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405a0c:	ldr	x1, [x20, #1480]
  405a10:	bl	402ae0 <fputs_unlocked@plt>
  405a14:	bl	405d88 <__fxstatat@plt+0x31d8>
  405a18:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x34b8>
  405a1c:	add	x1, x1, #0xc4c
  405a20:	mov	w2, #0x5                   	// #5
  405a24:	mov	x0, xzr
  405a28:	bl	402ad0 <dcgettext@plt>
  405a2c:	ldr	x1, [x20, #1480]
  405a30:	bl	402ae0 <fputs_unlocked@plt>
  405a34:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x34b8>
  405a38:	add	x1, x1, #0xd5b
  405a3c:	mov	w2, #0x5                   	// #5
  405a40:	mov	x0, xzr
  405a44:	bl	402ad0 <dcgettext@plt>
  405a48:	ldr	x1, [x20, #1480]
  405a4c:	bl	402ae0 <fputs_unlocked@plt>
  405a50:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x34b8>
  405a54:	add	x1, x1, #0xdf7
  405a58:	mov	w2, #0x5                   	// #5
  405a5c:	mov	x0, xzr
  405a60:	bl	402ad0 <dcgettext@plt>
  405a64:	ldr	x1, [x20, #1480]
  405a68:	bl	402ae0 <fputs_unlocked@plt>
  405a6c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x34b8>
  405a70:	add	x1, x1, #0xf61
  405a74:	mov	w2, #0x5                   	// #5
  405a78:	mov	x0, xzr
  405a7c:	bl	402ad0 <dcgettext@plt>
  405a80:	ldr	x1, [x20, #1480]
  405a84:	bl	402ae0 <fputs_unlocked@plt>
  405a88:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x44b8>
  405a8c:	add	x1, x1, #0xd0
  405a90:	mov	w2, #0x5                   	// #5
  405a94:	mov	x0, xzr
  405a98:	bl	402ad0 <dcgettext@plt>
  405a9c:	ldr	x1, [x20, #1480]
  405aa0:	bl	402ae0 <fputs_unlocked@plt>
  405aa4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x44b8>
  405aa8:	add	x1, x1, #0x273
  405aac:	mov	w2, #0x5                   	// #5
  405ab0:	mov	x0, xzr
  405ab4:	bl	402ad0 <dcgettext@plt>
  405ab8:	ldr	x1, [x20, #1480]
  405abc:	bl	402ae0 <fputs_unlocked@plt>
  405ac0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x44b8>
  405ac4:	add	x1, x1, #0x2b0
  405ac8:	mov	w2, #0x5                   	// #5
  405acc:	mov	x0, xzr
  405ad0:	bl	402ad0 <dcgettext@plt>
  405ad4:	ldr	x1, [x20, #1480]
  405ad8:	bl	402ae0 <fputs_unlocked@plt>
  405adc:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x44b8>
  405ae0:	add	x1, x1, #0x3a5
  405ae4:	mov	w2, #0x5                   	// #5
  405ae8:	mov	x0, xzr
  405aec:	bl	402ad0 <dcgettext@plt>
  405af0:	ldr	x1, [x20, #1480]
  405af4:	bl	402ae0 <fputs_unlocked@plt>
  405af8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x44b8>
  405afc:	add	x1, x1, #0x3ee
  405b00:	mov	w2, #0x5                   	// #5
  405b04:	mov	x0, xzr
  405b08:	bl	402ad0 <dcgettext@plt>
  405b0c:	ldr	x1, [x20, #1480]
  405b10:	bl	402ae0 <fputs_unlocked@plt>
  405b14:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x44b8>
  405b18:	add	x1, x1, #0x484
  405b1c:	mov	w2, #0x5                   	// #5
  405b20:	mov	x0, xzr
  405b24:	bl	402ad0 <dcgettext@plt>
  405b28:	ldr	x1, [x20, #1480]
  405b2c:	bl	402ae0 <fputs_unlocked@plt>
  405b30:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x44b8>
  405b34:	add	x1, x1, #0x62a
  405b38:	mov	w2, #0x5                   	// #5
  405b3c:	mov	x0, xzr
  405b40:	bl	402ad0 <dcgettext@plt>
  405b44:	ldr	x1, [x20, #1480]
  405b48:	bl	402ae0 <fputs_unlocked@plt>
  405b4c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x44b8>
  405b50:	add	x1, x1, #0x6bb
  405b54:	mov	w2, #0x5                   	// #5
  405b58:	mov	x0, xzr
  405b5c:	bl	402ad0 <dcgettext@plt>
  405b60:	ldr	x1, [x20, #1480]
  405b64:	bl	402ae0 <fputs_unlocked@plt>
  405b68:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x44b8>
  405b6c:	add	x1, x1, #0x81d
  405b70:	mov	w2, #0x5                   	// #5
  405b74:	mov	x0, xzr
  405b78:	bl	402ad0 <dcgettext@plt>
  405b7c:	ldr	x1, [x20, #1480]
  405b80:	bl	402ae0 <fputs_unlocked@plt>
  405b84:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x44b8>
  405b88:	add	x1, x1, #0x8b1
  405b8c:	mov	w2, #0x5                   	// #5
  405b90:	mov	x0, xzr
  405b94:	bl	402ad0 <dcgettext@plt>
  405b98:	ldr	x1, [x20, #1480]
  405b9c:	bl	402ae0 <fputs_unlocked@plt>
  405ba0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x44b8>
  405ba4:	add	x1, x1, #0xa18
  405ba8:	mov	w2, #0x5                   	// #5
  405bac:	mov	x0, xzr
  405bb0:	bl	402ad0 <dcgettext@plt>
  405bb4:	ldr	x1, [x20, #1480]
  405bb8:	bl	402ae0 <fputs_unlocked@plt>
  405bbc:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x44b8>
  405bc0:	add	x1, x1, #0xb47
  405bc4:	mov	w2, #0x5                   	// #5
  405bc8:	mov	x0, xzr
  405bcc:	bl	402ad0 <dcgettext@plt>
  405bd0:	ldr	x1, [x20, #1480]
  405bd4:	bl	402ae0 <fputs_unlocked@plt>
  405bd8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x44b8>
  405bdc:	add	x1, x1, #0xd90
  405be0:	mov	w2, #0x5                   	// #5
  405be4:	mov	x0, xzr
  405be8:	bl	402ad0 <dcgettext@plt>
  405bec:	ldr	x1, [x20, #1480]
  405bf0:	bl	402ae0 <fputs_unlocked@plt>
  405bf4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x44b8>
  405bf8:	add	x1, x1, #0xe55
  405bfc:	mov	w2, #0x5                   	// #5
  405c00:	mov	x0, xzr
  405c04:	bl	402ad0 <dcgettext@plt>
  405c08:	ldr	x1, [x20, #1480]
  405c0c:	bl	402ae0 <fputs_unlocked@plt>
  405c10:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  405c14:	add	x1, x1, #0x5c
  405c18:	mov	w2, #0x5                   	// #5
  405c1c:	mov	x0, xzr
  405c20:	bl	402ad0 <dcgettext@plt>
  405c24:	ldr	x1, [x20, #1480]
  405c28:	bl	402ae0 <fputs_unlocked@plt>
  405c2c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  405c30:	add	x1, x1, #0xab
  405c34:	mov	w2, #0x5                   	// #5
  405c38:	mov	x0, xzr
  405c3c:	bl	402ad0 <dcgettext@plt>
  405c40:	ldr	x1, [x20, #1480]
  405c44:	bl	402ae0 <fputs_unlocked@plt>
  405c48:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  405c4c:	add	x1, x1, #0x139
  405c50:	mov	w2, #0x5                   	// #5
  405c54:	mov	x0, xzr
  405c58:	bl	402ad0 <dcgettext@plt>
  405c5c:	ldr	x1, [x20, #1480]
  405c60:	bl	402ae0 <fputs_unlocked@plt>
  405c64:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  405c68:	add	x1, x1, #0x2ad
  405c6c:	mov	w2, #0x5                   	// #5
  405c70:	mov	x0, xzr
  405c74:	bl	402ad0 <dcgettext@plt>
  405c78:	ldr	x1, [x20, #1480]
  405c7c:	bl	402ae0 <fputs_unlocked@plt>
  405c80:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  405c84:	add	x1, x1, #0x418
  405c88:	mov	w2, #0x5                   	// #5
  405c8c:	mov	x0, xzr
  405c90:	bl	402ad0 <dcgettext@plt>
  405c94:	ldr	x1, [x20, #1480]
  405c98:	bl	402ae0 <fputs_unlocked@plt>
  405c9c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  405ca0:	add	x1, x1, #0x445
  405ca4:	mov	w2, #0x5                   	// #5
  405ca8:	mov	x0, xzr
  405cac:	bl	402ad0 <dcgettext@plt>
  405cb0:	ldr	x1, [x20, #1480]
  405cb4:	bl	402ae0 <fputs_unlocked@plt>
  405cb8:	bl	405db8 <__fxstatat@plt+0x3208>
  405cbc:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  405cc0:	add	x1, x1, #0x47b
  405cc4:	mov	w2, #0x5                   	// #5
  405cc8:	mov	x0, xzr
  405ccc:	bl	402ad0 <dcgettext@plt>
  405cd0:	ldr	x1, [x20, #1480]
  405cd4:	bl	402ae0 <fputs_unlocked@plt>
  405cd8:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  405cdc:	add	x1, x1, #0x5f3
  405ce0:	mov	w2, #0x5                   	// #5
  405ce4:	mov	x0, xzr
  405ce8:	bl	402ad0 <dcgettext@plt>
  405cec:	ldr	x1, [x20, #1480]
  405cf0:	bl	402ae0 <fputs_unlocked@plt>
  405cf4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  405cf8:	add	x1, x1, #0x711
  405cfc:	mov	w2, #0x5                   	// #5
  405d00:	mov	x0, xzr
  405d04:	bl	402ad0 <dcgettext@plt>
  405d08:	ldr	x1, [x20, #1480]
  405d0c:	bl	402ae0 <fputs_unlocked@plt>
  405d10:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405d14:	ldr	w8, [x8, #1320]
  405d18:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x54b8>
  405d1c:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x54b8>
  405d20:	add	x9, x9, #0x7a9
  405d24:	add	x10, x10, #0xbcb
  405d28:	adrp	x11, 418000 <_obstack_memory_used@@Base+0x54b8>
  405d2c:	cmp	w8, #0x2
  405d30:	add	x11, x11, #0x999
  405d34:	csel	x9, x10, x9, eq  // eq = none
  405d38:	cmp	w8, #0x1
  405d3c:	csel	x0, x11, x9, eq  // eq = none
  405d40:	bl	405de8 <__fxstatat@plt+0x3238>
  405d44:	mov	w0, w19
  405d48:	bl	402580 <exit@plt>
  405d4c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405d50:	ldr	x20, [x8, #1456]
  405d54:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x34b8>
  405d58:	add	x1, x1, #0xb74
  405d5c:	mov	w2, #0x5                   	// #5
  405d60:	mov	x0, xzr
  405d64:	bl	402ad0 <dcgettext@plt>
  405d68:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  405d6c:	ldr	x3, [x8, #1888]
  405d70:	mov	x2, x0
  405d74:	mov	w1, #0x1                   	// #1
  405d78:	mov	x0, x20
  405d7c:	bl	402930 <__fprintf_chk@plt>
  405d80:	mov	w0, w19
  405d84:	bl	402580 <exit@plt>
  405d88:	stp	x29, x30, [sp, #-16]!
  405d8c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  405d90:	add	x1, x1, #0xf09
  405d94:	mov	w2, #0x5                   	// #5
  405d98:	mov	x0, xzr
  405d9c:	mov	x29, sp
  405da0:	bl	402ad0 <dcgettext@plt>
  405da4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405da8:	ldr	x1, [x8, #1480]
  405dac:	bl	402ae0 <fputs_unlocked@plt>
  405db0:	ldp	x29, x30, [sp], #16
  405db4:	ret
  405db8:	stp	x29, x30, [sp, #-16]!
  405dbc:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  405dc0:	add	x1, x1, #0xf54
  405dc4:	mov	w2, #0x5                   	// #5
  405dc8:	mov	x0, xzr
  405dcc:	mov	x29, sp
  405dd0:	bl	402ad0 <dcgettext@plt>
  405dd4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405dd8:	ldr	x1, [x8, #1480]
  405ddc:	bl	402ae0 <fputs_unlocked@plt>
  405de0:	ldp	x29, x30, [sp], #16
  405de4:	ret
  405de8:	sub	sp, sp, #0x90
  405dec:	adrp	x8, 416000 <_obstack_memory_used@@Base+0x34b8>
  405df0:	add	x8, x8, #0xa28
  405df4:	ldp	q0, q4, [x8]
  405df8:	ldp	q1, q2, [x8, #48]
  405dfc:	stp	x20, x19, [sp, #128]
  405e00:	mov	x19, x0
  405e04:	str	q0, [sp]
  405e08:	ldr	q0, [x8, #32]
  405e0c:	str	q1, [sp, #48]
  405e10:	ldp	q3, q1, [x8, #80]
  405e14:	ldr	x1, [sp]
  405e18:	mov	x20, sp
  405e1c:	stp	x29, x30, [sp, #112]
  405e20:	add	x29, sp, #0x70
  405e24:	stp	q2, q3, [sp, #64]
  405e28:	str	q1, [sp, #96]
  405e2c:	stp	q4, q0, [sp, #16]
  405e30:	cbz	x1, 405e48 <__fxstatat@plt+0x3298>
  405e34:	mov	x0, x19
  405e38:	bl	402950 <strcmp@plt>
  405e3c:	cbz	w0, 405e48 <__fxstatat@plt+0x3298>
  405e40:	ldr	x1, [x20, #16]!
  405e44:	cbnz	x1, 405e34 <__fxstatat@plt+0x3284>
  405e48:	ldr	x8, [x20, #8]
  405e4c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  405e50:	add	x1, x1, #0x85
  405e54:	mov	w2, #0x5                   	// #5
  405e58:	cmp	x8, #0x0
  405e5c:	mov	x0, xzr
  405e60:	csel	x20, x19, x8, eq  // eq = none
  405e64:	bl	402ad0 <dcgettext@plt>
  405e68:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x54b8>
  405e6c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x64b8>
  405e70:	mov	x1, x0
  405e74:	add	x2, x2, #0x98e
  405e78:	add	x3, x3, #0x9c
  405e7c:	mov	w0, #0x1                   	// #1
  405e80:	bl	4027b0 <__printf_chk@plt>
  405e84:	mov	w0, #0x5                   	// #5
  405e88:	mov	x1, xzr
  405e8c:	bl	402ba0 <setlocale@plt>
  405e90:	cbz	x0, 405ec8 <__fxstatat@plt+0x3318>
  405e94:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  405e98:	add	x1, x1, #0xc4
  405e9c:	mov	w2, #0x3                   	// #3
  405ea0:	bl	402780 <strncmp@plt>
  405ea4:	cbz	w0, 405ec8 <__fxstatat@plt+0x3318>
  405ea8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  405eac:	add	x1, x1, #0xc8
  405eb0:	mov	w2, #0x5                   	// #5
  405eb4:	mov	x0, xzr
  405eb8:	bl	402ad0 <dcgettext@plt>
  405ebc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405ec0:	ldr	x1, [x8, #1480]
  405ec4:	bl	402ae0 <fputs_unlocked@plt>
  405ec8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  405ecc:	add	x1, x1, #0x10f
  405ed0:	mov	w2, #0x5                   	// #5
  405ed4:	mov	x0, xzr
  405ed8:	bl	402ad0 <dcgettext@plt>
  405edc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x64b8>
  405ee0:	mov	x1, x0
  405ee4:	add	x2, x2, #0x9c
  405ee8:	mov	w0, #0x1                   	// #1
  405eec:	mov	x3, x19
  405ef0:	bl	4027b0 <__printf_chk@plt>
  405ef4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  405ef8:	add	x1, x1, #0x12a
  405efc:	mov	w2, #0x5                   	// #5
  405f00:	mov	x0, xzr
  405f04:	bl	402ad0 <dcgettext@plt>
  405f08:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x54b8>
  405f0c:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x64b8>
  405f10:	add	x8, x8, #0xe71
  405f14:	add	x9, x9, #0x42
  405f18:	cmp	x20, x19
  405f1c:	mov	x1, x0
  405f20:	csel	x3, x9, x8, eq  // eq = none
  405f24:	mov	w0, #0x1                   	// #1
  405f28:	mov	x2, x20
  405f2c:	bl	4027b0 <__printf_chk@plt>
  405f30:	ldp	x20, x19, [sp, #128]
  405f34:	ldp	x29, x30, [sp, #112]
  405f38:	add	sp, sp, #0x90
  405f3c:	ret
  405f40:	stp	x29, x30, [sp, #-32]!
  405f44:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405f48:	ldrb	w9, [x8, #1904]
  405f4c:	str	x19, [sp, #16]
  405f50:	mov	x19, x0
  405f54:	mov	x29, sp
  405f58:	tbnz	w9, #0, 405f78 <__fxstatat@plt+0x33c8>
  405f5c:	mov	w9, #0x1                   	// #1
  405f60:	mov	w0, #0x1                   	// #1
  405f64:	strb	w9, [x8, #1904]
  405f68:	bl	402880 <tcgetpgrp@plt>
  405f6c:	tbnz	w0, #31, 405f74 <__fxstatat@plt+0x33c4>
  405f70:	bl	405f98 <__fxstatat@plt+0x33e8>
  405f74:	bl	405fb0 <__fxstatat@plt+0x3400>
  405f78:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405f7c:	ldp	x1, x0, [x19]
  405f80:	ldr	x3, [x8, #1480]
  405f84:	mov	w2, #0x1                   	// #1
  405f88:	bl	402530 <fwrite_unlocked@plt>
  405f8c:	ldr	x19, [sp, #16]
  405f90:	ldp	x29, x30, [sp], #32
  405f94:	ret
  405f98:	stp	x29, x30, [sp, #-16]!
  405f9c:	mov	w0, #0x1                   	// #1
  405fa0:	mov	x29, sp
  405fa4:	bl	405ff8 <__fxstatat@plt+0x3448>
  405fa8:	ldp	x29, x30, [sp], #16
  405fac:	ret
  405fb0:	stp	x29, x30, [sp, #-32]!
  405fb4:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405fb8:	add	x0, x0, #0x3a8
  405fbc:	ldr	x8, [x0, #8]
  405fc0:	str	x19, [sp, #16]
  405fc4:	mov	x29, sp
  405fc8:	cbnz	x8, 405fe8 <__fxstatat@plt+0x3438>
  405fcc:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x184b8>
  405fd0:	add	x19, x19, #0x388
  405fd4:	mov	x0, x19
  405fd8:	bl	405f40 <__fxstatat@plt+0x3390>
  405fdc:	add	x0, x19, #0x30
  405fe0:	bl	405f40 <__fxstatat@plt+0x3390>
  405fe4:	add	x0, x19, #0x10
  405fe8:	bl	405f40 <__fxstatat@plt+0x3390>
  405fec:	ldr	x19, [sp, #16]
  405ff0:	ldp	x29, x30, [sp], #32
  405ff4:	ret
  405ff8:	sub	sp, sp, #0xe0
  405ffc:	stp	x29, x30, [sp, #160]
  406000:	stp	x24, x23, [sp, #176]
  406004:	stp	x22, x21, [sp, #192]
  406008:	stp	x20, x19, [sp, #208]
  40600c:	add	x29, sp, #0xa0
  406010:	tbz	w0, #0, 406070 <__fxstatat@plt+0x34c0>
  406014:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406018:	add	x19, x19, #0x888
  40601c:	mov	x0, x19
  406020:	bl	402770 <sigemptyset@plt>
  406024:	adrp	x21, 414000 <_obstack_memory_used@@Base+0x14b8>
  406028:	mov	x22, xzr
  40602c:	add	x21, x21, #0xf20
  406030:	b	406040 <__fxstatat@plt+0x3490>
  406034:	add	x22, x22, #0x4
  406038:	cmp	x22, #0x30
  40603c:	b.eq	4060b8 <__fxstatat@plt+0x3508>  // b.none
  406040:	ldr	w20, [x21, x22]
  406044:	add	x2, sp, #0x8
  406048:	mov	x1, xzr
  40604c:	mov	w0, w20
  406050:	bl	402860 <sigaction@plt>
  406054:	ldr	x8, [sp, #8]
  406058:	cmp	x8, #0x1
  40605c:	b.eq	406034 <__fxstatat@plt+0x3484>  // b.none
  406060:	mov	x0, x19
  406064:	mov	w1, w20
  406068:	bl	402b10 <sigaddset@plt>
  40606c:	b	406034 <__fxstatat@plt+0x3484>
  406070:	adrp	x22, 414000 <_obstack_memory_used@@Base+0x14b8>
  406074:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406078:	mov	x21, xzr
  40607c:	add	x22, x22, #0xf20
  406080:	add	x19, x19, #0x888
  406084:	b	406094 <__fxstatat@plt+0x34e4>
  406088:	add	x21, x21, #0x4
  40608c:	cmp	x21, #0x30
  406090:	b.eq	40613c <__fxstatat@plt+0x358c>  // b.none
  406094:	ldr	w20, [x22, x21]
  406098:	mov	x0, x19
  40609c:	mov	w1, w20
  4060a0:	bl	402940 <sigismember@plt>
  4060a4:	cbz	w0, 406088 <__fxstatat@plt+0x34d8>
  4060a8:	mov	w0, w20
  4060ac:	mov	x1, xzr
  4060b0:	bl	4026f0 <signal@plt>
  4060b4:	b	406088 <__fxstatat@plt+0x34d8>
  4060b8:	ldp	q0, q1, [x19, #64]
  4060bc:	adrp	x23, 406000 <__fxstatat@plt+0x3450>
  4060c0:	adrp	x24, 406000 <__fxstatat@plt+0x3450>
  4060c4:	mov	x22, xzr
  4060c8:	stur	q0, [sp, #80]
  4060cc:	ldp	q2, q0, [x19, #96]
  4060d0:	mov	w8, #0x10000000            	// #268435456
  4060d4:	add	x23, x23, #0x178
  4060d8:	add	x24, x24, #0x154
  4060dc:	stp	q1, q2, [sp, #96]
  4060e0:	ldp	q1, q2, [x19]
  4060e4:	stur	q0, [sp, #128]
  4060e8:	str	w8, [sp, #144]
  4060ec:	stp	q1, q2, [sp, #16]
  4060f0:	ldp	q0, q1, [x19, #32]
  4060f4:	stp	q0, q1, [sp, #48]
  4060f8:	b	406108 <__fxstatat@plt+0x3558>
  4060fc:	add	x22, x22, #0x4
  406100:	cmp	x22, #0x30
  406104:	b.eq	40613c <__fxstatat@plt+0x358c>  // b.none
  406108:	ldr	w20, [x21, x22]
  40610c:	mov	x0, x19
  406110:	mov	w1, w20
  406114:	bl	402940 <sigismember@plt>
  406118:	cbz	w0, 4060fc <__fxstatat@plt+0x354c>
  40611c:	cmp	x22, #0x0
  406120:	csel	x8, x24, x23, eq  // eq = none
  406124:	add	x1, sp, #0x8
  406128:	mov	w0, w20
  40612c:	mov	x2, xzr
  406130:	str	x8, [sp, #8]
  406134:	bl	402860 <sigaction@plt>
  406138:	b	4060fc <__fxstatat@plt+0x354c>
  40613c:	ldp	x20, x19, [sp, #208]
  406140:	ldp	x22, x21, [sp, #192]
  406144:	ldp	x24, x23, [sp, #176]
  406148:	ldp	x29, x30, [sp, #160]
  40614c:	add	sp, sp, #0xe0
  406150:	ret
  406154:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406158:	ldr	w8, [x8, #1912]
  40615c:	cbz	w8, 406164 <__fxstatat@plt+0x35b4>
  406160:	ret
  406164:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406168:	ldr	w9, [x8, #1908]
  40616c:	add	w9, w9, #0x1
  406170:	str	w9, [x8, #1908]
  406174:	ret
  406178:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40617c:	ldr	w9, [x8, #1912]
  406180:	cbz	w9, 406188 <__fxstatat@plt+0x35d8>
  406184:	ret
  406188:	str	w0, [x8, #1912]
  40618c:	ret
  406190:	stp	x29, x30, [sp, #-32]!
  406194:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  406198:	add	x0, x0, #0xa94
  40619c:	stp	x20, x19, [sp, #16]
  4061a0:	mov	x29, sp
  4061a4:	bl	402b50 <getenv@plt>
  4061a8:	cbz	x0, 406218 <__fxstatat@plt+0x3668>
  4061ac:	adrp	x20, 419000 <_obstack_memory_used@@Base+0x64b8>
  4061b0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  4061b4:	add	x20, x20, #0x640
  4061b8:	add	x1, x1, #0x5e8
  4061bc:	mov	w3, #0x4                   	// #4
  4061c0:	mov	x2, x20
  4061c4:	mov	x19, x0
  4061c8:	bl	40a274 <__fxstatat@plt+0x76c4>
  4061cc:	tbnz	w0, #31, 4061e4 <__fxstatat@plt+0x3634>
  4061d0:	sbfiz	x8, x0, #2, #32
  4061d4:	ldr	w1, [x20, x8]
  4061d8:	mov	x0, xzr
  4061dc:	bl	40f8f4 <__fxstatat@plt+0xcd44>
  4061e0:	b	406218 <__fxstatat@plt+0x3668>
  4061e4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  4061e8:	add	x1, x1, #0xaa2
  4061ec:	mov	w2, #0x5                   	// #5
  4061f0:	mov	x0, xzr
  4061f4:	bl	402ad0 <dcgettext@plt>
  4061f8:	mov	x20, x0
  4061fc:	mov	x0, x19
  406200:	bl	410d7c <__fxstatat@plt+0xe1cc>
  406204:	mov	x3, x0
  406208:	mov	w0, wzr
  40620c:	mov	w1, wzr
  406210:	mov	x2, x20
  406214:	bl	4025b0 <error@plt>
  406218:	ldp	x20, x19, [sp, #16]
  40621c:	ldp	x29, x30, [sp], #32
  406220:	ret
  406224:	sub	sp, sp, #0x20
  406228:	adrp	x4, 418000 <_obstack_memory_used@@Base+0x54b8>
  40622c:	add	x4, x4, #0xe71
  406230:	add	x3, sp, #0x8
  406234:	mov	x1, xzr
  406238:	mov	w2, wzr
  40623c:	stp	x29, x30, [sp, #16]
  406240:	add	x29, sp, #0x10
  406244:	bl	4123f4 <__fxstatat@plt+0xf844>
  406248:	cmp	w0, #0x1
  40624c:	b.eq	406264 <__fxstatat@plt+0x36b4>  // b.none
  406250:	mov	w8, w0
  406254:	mov	w0, wzr
  406258:	cbnz	w8, 406274 <__fxstatat@plt+0x36c4>
  40625c:	ldr	x8, [sp, #8]
  406260:	b	406268 <__fxstatat@plt+0x36b8>
  406264:	mov	x8, #0xffffffffffffffff    	// #-1
  406268:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40626c:	mov	w0, #0x1                   	// #1
  406270:	str	x8, [x9, #2344]
  406274:	ldp	x29, x30, [sp, #16]
  406278:	add	sp, sp, #0x20
  40627c:	ret
  406280:	stp	x29, x30, [sp, #-32]!
  406284:	str	x19, [sp, #16]
  406288:	mov	x19, x0
  40628c:	mov	w0, #0x10                  	// #16
  406290:	mov	x29, sp
  406294:	bl	411b44 <__fxstatat@plt+0xef94>
  406298:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40629c:	ldr	x9, [x8, #2328]
  4062a0:	str	x0, [x8, #2328]
  4062a4:	stp	x19, x9, [x0]
  4062a8:	ldr	x19, [sp, #16]
  4062ac:	ldp	x29, x30, [sp], #32
  4062b0:	ret
  4062b4:	ret
  4062b8:	stp	x29, x30, [sp, #-96]!
  4062bc:	stp	x28, x27, [sp, #16]
  4062c0:	stp	x26, x25, [sp, #32]
  4062c4:	stp	x24, x23, [sp, #48]
  4062c8:	stp	x22, x21, [sp, #64]
  4062cc:	stp	x20, x19, [sp, #80]
  4062d0:	mov	x29, sp
  4062d4:	sub	sp, sp, #0x620
  4062d8:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4062dc:	mov	x19, xzr
  4062e0:	add	x21, x21, #0x510
  4062e4:	sub	x20, x29, #0x18
  4062e8:	ldr	x0, [x21, x19]
  4062ec:	bl	40642c <__fxstatat@plt+0x387c>
  4062f0:	str	x0, [x20, x19]
  4062f4:	add	x19, x19, #0x8
  4062f8:	cmp	x19, #0x8
  4062fc:	b.eq	4062e8 <__fxstatat@plt+0x3738>  // b.none
  406300:	ldur	x8, [x29, #-24]
  406304:	cbnz	x8, 406310 <__fxstatat@plt+0x3760>
  406308:	ldur	x8, [x29, #-16]
  40630c:	cbz	x8, 40640c <__fxstatat@plt+0x385c>
  406310:	add	x0, sp, #0x8
  406314:	add	x24, sp, #0x8
  406318:	bl	406470 <__fxstatat@plt+0x38c0>
  40631c:	tbz	w0, #0, 40640c <__fxstatat@plt+0x385c>
  406320:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406324:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x64b8>
  406328:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x54b8>
  40632c:	mov	x8, xzr
  406330:	add	x25, x25, #0x970
  406334:	add	x19, x19, #0x1b9
  406338:	add	x20, x20, #0xcf0
  40633c:	mov	x27, x8
  406340:	lsl	x8, x8, #3
  406344:	sub	x9, x29, #0x18
  406348:	ldr	x21, [x21, x8]
  40634c:	ldr	x26, [x9, x8]
  406350:	mov	x28, xzr
  406354:	sub	x22, x26, x21
  406358:	add	x23, x26, #0x2
  40635c:	add	x0, x25, x28
  406360:	cbz	x26, 406394 <__fxstatat@plt+0x37e4>
  406364:	cmp	x22, #0x80
  406368:	b.gt	4063bc <__fxstatat@plt+0x380c>
  40636c:	add	x7, x24, x28
  406370:	mov	w1, #0x80                  	// #128
  406374:	mov	w2, #0x1                   	// #1
  406378:	mov	x3, #0xffffffffffffffff    	// #-1
  40637c:	mov	x4, x20
  406380:	mov	w5, w22
  406384:	mov	x6, x21
  406388:	str	x23, [sp]
  40638c:	bl	402700 <__snprintf_chk@plt>
  406390:	b	4063ac <__fxstatat@plt+0x37fc>
  406394:	mov	w1, #0x80                  	// #128
  406398:	mov	w2, #0x1                   	// #1
  40639c:	mov	x3, #0xffffffffffffffff    	// #-1
  4063a0:	mov	x4, x19
  4063a4:	mov	x5, x21
  4063a8:	bl	402700 <__snprintf_chk@plt>
  4063ac:	cmp	w0, #0x7f
  4063b0:	cset	w8, hi  // hi = pmore
  4063b4:	cbz	w8, 4063c4 <__fxstatat@plt+0x3814>
  4063b8:	b	4063d4 <__fxstatat@plt+0x3824>
  4063bc:	mov	w8, #0x1                   	// #1
  4063c0:	cbnz	w8, 4063d4 <__fxstatat@plt+0x3824>
  4063c4:	add	x28, x28, #0x80
  4063c8:	cmp	x28, #0x600
  4063cc:	b.ne	40635c <__fxstatat@plt+0x37ac>  // b.any
  4063d0:	mov	w8, #0x8                   	// #8
  4063d4:	cmp	w8, #0x8
  4063d8:	csel	w8, wzr, w8, eq  // eq = none
  4063dc:	cbnz	w8, 4063f8 <__fxstatat@plt+0x3848>
  4063e0:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4063e4:	add	x8, x27, #0x1
  4063e8:	add	x25, x25, #0x600
  4063ec:	add	x21, x21, #0x510
  4063f0:	cbz	x27, 40633c <__fxstatat@plt+0x378c>
  4063f4:	mov	w8, #0x5                   	// #5
  4063f8:	cmp	w8, #0x5
  4063fc:	b.ne	40640c <__fxstatat@plt+0x385c>  // b.any
  406400:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  406404:	mov	w9, #0x1                   	// #1
  406408:	strb	w9, [x8, #1392]
  40640c:	add	sp, sp, #0x620
  406410:	ldp	x20, x19, [sp, #80]
  406414:	ldp	x22, x21, [sp, #64]
  406418:	ldp	x24, x23, [sp, #48]
  40641c:	ldp	x26, x25, [sp, #32]
  406420:	ldp	x28, x27, [sp, #16]
  406424:	ldp	x29, x30, [sp], #96
  406428:	ret
  40642c:	b	406438 <__fxstatat@plt+0x3888>
  406430:	cbz	w8, 406468 <__fxstatat@plt+0x38b8>
  406434:	add	x0, x0, #0x1
  406438:	ldrb	w8, [x0]
  40643c:	cmp	w8, #0x25
  406440:	b.ne	406430 <__fxstatat@plt+0x3880>  // b.any
  406444:	mov	x8, x0
  406448:	ldrb	w9, [x8, #1]!
  40644c:	cmp	w9, #0x25
  406450:	b.eq	406460 <__fxstatat@plt+0x38b0>  // b.none
  406454:	cmp	w9, #0x62
  406458:	b.ne	406434 <__fxstatat@plt+0x3884>  // b.any
  40645c:	b	40646c <__fxstatat@plt+0x38bc>
  406460:	mov	x0, x8
  406464:	b	406434 <__fxstatat@plt+0x3884>
  406468:	mov	x0, xzr
  40646c:	ret
  406470:	sub	sp, sp, #0x60
  406474:	stp	x24, x23, [sp, #48]
  406478:	mov	w23, #0xe                   	// #14
  40647c:	stp	x22, x21, [sp, #64]
  406480:	stp	x20, x19, [sp, #80]
  406484:	mov	x19, x0
  406488:	mov	w22, #0xc                   	// #12
  40648c:	movk	w23, #0x2, lsl #16
  406490:	stp	x29, x30, [sp, #16]
  406494:	stp	x26, x25, [sp, #32]
  406498:	add	x29, sp, #0x10
  40649c:	mov	x25, xzr
  4064a0:	mov	x24, xzr
  4064a4:	mov	x20, x19
  4064a8:	add	w0, w25, w23
  4064ac:	str	x22, [sp, #8]
  4064b0:	bl	402720 <nl_langinfo@plt>
  4064b4:	mov	w1, #0x25                  	// #37
  4064b8:	mov	x21, x0
  4064bc:	bl	4029c0 <strchr@plt>
  4064c0:	cbz	x0, 4064d0 <__fxstatat@plt+0x3920>
  4064c4:	mov	w8, #0x1                   	// #1
  4064c8:	cbz	w8, 406524 <__fxstatat@plt+0x3974>
  4064cc:	b	406538 <__fxstatat@plt+0x3988>
  4064d0:	bl	402970 <__ctype_b_loc@plt>
  4064d4:	ldr	x26, [x0]
  4064d8:	ldrb	w0, [x21]
  4064dc:	bl	406574 <__fxstatat@plt+0x39c4>
  4064e0:	and	x8, x0, #0xff
  4064e4:	ldrh	w8, [x26, x8, lsl #1]
  4064e8:	add	x3, sp, #0x8
  4064ec:	mov	w2, #0x80                  	// #128
  4064f0:	mov	x0, x21
  4064f4:	ubfx	w4, w8, #11, #1
  4064f8:	mov	x1, x20
  4064fc:	mov	w5, wzr
  406500:	bl	40d5a8 <__fxstatat@plt+0xa9f8>
  406504:	ldr	x9, [sp, #8]
  406508:	cmp	x0, #0x7f
  40650c:	cset	w8, hi  // hi = pmore
  406510:	cmp	x24, x9
  406514:	csel	x9, x24, x9, hi  // hi = pmore
  406518:	cmp	x0, #0x80
  40651c:	csel	x24, x9, x24, cc  // cc = lo, ul, last
  406520:	cbnz	w8, 406538 <__fxstatat@plt+0x3988>
  406524:	add	x25, x25, #0x1
  406528:	cmp	x25, #0xc
  40652c:	add	x20, x20, #0x80
  406530:	b.ne	4064a8 <__fxstatat@plt+0x38f8>  // b.any
  406534:	mov	w8, #0x4                   	// #4
  406538:	cmp	w8, #0x4
  40653c:	b.ne	406554 <__fxstatat@plt+0x39a4>  // b.any
  406540:	cmp	x22, x24
  406544:	mov	x22, x24
  406548:	b.hi	40649c <__fxstatat@plt+0x38ec>  // b.pmore
  40654c:	mov	w0, #0x1                   	// #1
  406550:	b	406558 <__fxstatat@plt+0x39a8>
  406554:	mov	w0, wzr
  406558:	ldp	x20, x19, [sp, #80]
  40655c:	ldp	x22, x21, [sp, #64]
  406560:	ldp	x24, x23, [sp, #48]
  406564:	ldp	x26, x25, [sp, #32]
  406568:	ldp	x29, x30, [sp, #16]
  40656c:	add	sp, sp, #0x60
  406570:	ret
  406574:	ret
  406578:	stp	x29, x30, [sp, #-48]!
  40657c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  406580:	add	x0, x0, #0xd08
  406584:	stp	x22, x21, [sp, #16]
  406588:	stp	x20, x19, [sp, #32]
  40658c:	mov	x29, sp
  406590:	bl	402b50 <getenv@plt>
  406594:	cbz	x0, 406610 <__fxstatat@plt+0x3a60>
  406598:	ldrb	w8, [x0]
  40659c:	mov	x19, x0
  4065a0:	cbz	w8, 40660c <__fxstatat@plt+0x3a5c>
  4065a4:	adrp	x22, 415000 <_obstack_memory_used@@Base+0x24b8>
  4065a8:	add	x22, x22, #0x778
  4065ac:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x54b8>
  4065b0:	add	x20, x20, #0xd63
  4065b4:	mov	x21, x22
  4065b8:	b	4065dc <__fxstatat@plt+0x3a2c>
  4065bc:	mov	x0, x21
  4065c0:	bl	402550 <strlen@plt>
  4065c4:	add	x8, x0, x21
  4065c8:	add	x21, x8, #0x1
  4065cc:	sub	x8, x21, x22
  4065d0:	lsr	x8, x8, #2
  4065d4:	cmp	x8, #0x431
  4065d8:	b.cs	40660c <__fxstatat@plt+0x3a5c>  // b.hs, b.nlast
  4065dc:	mov	w2, #0x5                   	// #5
  4065e0:	mov	x0, x21
  4065e4:	mov	x1, x20
  4065e8:	bl	402780 <strncmp@plt>
  4065ec:	cbnz	w0, 4065bc <__fxstatat@plt+0x3a0c>
  4065f0:	add	x0, x21, #0x5
  4065f4:	mov	x1, x19
  4065f8:	mov	w2, wzr
  4065fc:	bl	4029e0 <fnmatch@plt>
  406600:	cbnz	w0, 4065bc <__fxstatat@plt+0x3a0c>
  406604:	mov	w0, #0x1                   	// #1
  406608:	b	406610 <__fxstatat@plt+0x3a60>
  40660c:	mov	w0, wzr
  406610:	ldp	x20, x19, [sp, #32]
  406614:	ldp	x22, x21, [sp, #16]
  406618:	ldp	x29, x30, [sp], #48
  40661c:	ret
  406620:	stp	x29, x30, [sp, #-16]!
  406624:	ldr	x9, [x1]
  406628:	ldr	x10, [x0]
  40662c:	adrp	x11, 414000 <_obstack_memory_used@@Base+0x14b8>
  406630:	adrp	x12, 414000 <_obstack_memory_used@@Base+0x14b8>
  406634:	adrp	x13, 414000 <_obstack_memory_used@@Base+0x14b8>
  406638:	mov	w17, wzr
  40663c:	mov	x8, xzr
  406640:	mov	w16, wzr
  406644:	add	x11, x11, #0xe0f
  406648:	add	x12, x12, #0xe8d
  40664c:	add	x13, x13, #0xe14
  406650:	mov	w14, #0x1                   	// #1
  406654:	mov	w15, #0x7f                  	// #127
  406658:	mov	x29, sp
  40665c:	b	406670 <__fxstatat@plt+0x3ac0>
  406660:	add	x9, x9, #0x1
  406664:	mov	w16, w4
  406668:	cmp	w17, #0x5
  40666c:	b.cs	406880 <__fxstatat@plt+0x3cd0>  // b.hs, b.nlast
  406670:	cmp	w17, #0x4
  406674:	b.hi	40689c <__fxstatat@plt+0x3cec>  // b.pmore
  406678:	mov	w18, w17
  40667c:	mov	w17, w17
  406680:	adr	x4, 406690 <__fxstatat@plt+0x3ae0>
  406684:	ldrb	w5, [x11, x17]
  406688:	add	x4, x4, x5, lsl #2
  40668c:	br	x4
  406690:	ldrb	w4, [x9]
  406694:	mov	w17, #0x5                   	// #5
  406698:	sub	w5, w4, #0x3a
  40669c:	cmp	w5, #0x24
  4066a0:	b.hi	4067cc <__fxstatat@plt+0x3c1c>  // b.pmore
  4066a4:	adr	x6, 406668 <__fxstatat@plt+0x3ab8>
  4066a8:	ldrb	w7, [x12, x5]
  4066ac:	add	x6, x6, x7, lsl #2
  4066b0:	br	x6
  4066b4:	tbz	w2, #0, 4067d0 <__fxstatat@plt+0x3c20>
  4066b8:	mov	w17, #0x5                   	// #5
  4066bc:	b	406668 <__fxstatat@plt+0x3ab8>
  4066c0:	ldrb	w18, [x9]
  4066c4:	sub	w17, w18, #0x40
  4066c8:	cmp	w17, #0x3e
  4066cc:	b.hi	40678c <__fxstatat@plt+0x3bdc>  // b.pmore
  4066d0:	and	w18, w18, #0x1f
  4066d4:	mov	w17, wzr
  4066d8:	add	x9, x9, #0x1
  4066dc:	strb	w18, [x10], #1
  4066e0:	add	x8, x8, #0x1
  4066e4:	b	406668 <__fxstatat@plt+0x3ab8>
  4066e8:	ldrb	w17, [x9]
  4066ec:	and	w4, w17, #0xf8
  4066f0:	cmp	w4, #0x30
  4066f4:	b.ne	40677c <__fxstatat@plt+0x3bcc>  // b.any
  4066f8:	add	x9, x9, #0x1
  4066fc:	add	w16, w17, w16, lsl #3
  406700:	b	4067ac <__fxstatat@plt+0x3bfc>
  406704:	ldrb	w17, [x9]
  406708:	sub	w4, w17, #0x30
  40670c:	cmp	w4, #0x36
  406710:	b.hi	40677c <__fxstatat@plt+0x3bcc>  // b.pmore
  406714:	lsl	x5, x14, x4
  406718:	tst	x5, #0x3ff
  40671c:	b.ne	4067a4 <__fxstatat@plt+0x3bf4>  // b.any
  406720:	lsl	x5, x14, x4
  406724:	tst	x5, #0x7e0000
  406728:	b.ne	4067b8 <__fxstatat@plt+0x3c08>  // b.any
  40672c:	lsl	x4, x14, x4
  406730:	tst	x4, #0x7e000000000000
  406734:	b.eq	40677c <__fxstatat@plt+0x3bcc>  // b.none
  406738:	add	w16, w17, w16, lsl #4
  40673c:	add	x9, x9, #0x1
  406740:	sub	w16, w16, #0x57
  406744:	mov	w17, w18
  406748:	b	406668 <__fxstatat@plt+0x3ab8>
  40674c:	ldrb	w5, [x9]
  406750:	cmp	w5, #0x78
  406754:	b.hi	406804 <__fxstatat@plt+0x3c54>  // b.pmore
  406758:	adr	x6, 406770 <__fxstatat@plt+0x3bc0>
  40675c:	ldrb	w17, [x13, x5]
  406760:	add	x6, x6, x17, lsl #2
  406764:	mov	w4, wzr
  406768:	mov	w17, #0x3                   	// #3
  40676c:	br	x6
  406770:	sub	w4, w5, #0x30
  406774:	mov	w17, #0x2                   	// #2
  406778:	b	406868 <__fxstatat@plt+0x3cb8>
  40677c:	mov	w17, wzr
  406780:	strb	w16, [x10], #1
  406784:	add	x8, x8, #0x1
  406788:	b	406668 <__fxstatat@plt+0x3ab8>
  40678c:	cmp	w18, #0x3f
  406790:	b.ne	4067e4 <__fxstatat@plt+0x3c34>  // b.any
  406794:	mov	w17, wzr
  406798:	strb	w15, [x10], #1
  40679c:	add	x8, x8, #0x1
  4067a0:	b	406668 <__fxstatat@plt+0x3ab8>
  4067a4:	add	x9, x9, #0x1
  4067a8:	add	w16, w17, w16, lsl #4
  4067ac:	sub	w16, w16, #0x30
  4067b0:	mov	w17, w18
  4067b4:	b	406668 <__fxstatat@plt+0x3ab8>
  4067b8:	add	w16, w17, w16, lsl #4
  4067bc:	add	x9, x9, #0x1
  4067c0:	sub	w16, w16, #0x37
  4067c4:	mov	w17, w18
  4067c8:	b	406668 <__fxstatat@plt+0x3ab8>
  4067cc:	cbz	w4, 406668 <__fxstatat@plt+0x3ab8>
  4067d0:	add	x9, x9, #0x1
  4067d4:	strb	w4, [x10], #1
  4067d8:	add	x8, x8, #0x1
  4067dc:	mov	w17, w18
  4067e0:	b	406668 <__fxstatat@plt+0x3ab8>
  4067e4:	mov	w17, #0x6                   	// #6
  4067e8:	b	406668 <__fxstatat@plt+0x3ab8>
  4067ec:	add	x9, x9, #0x1
  4067f0:	mov	w17, #0x1                   	// #1
  4067f4:	b	406668 <__fxstatat@plt+0x3ab8>
  4067f8:	add	x9, x9, #0x1
  4067fc:	mov	w17, #0x4                   	// #4
  406800:	b	406668 <__fxstatat@plt+0x3ab8>
  406804:	mov	w4, w5
  406808:	b	406864 <__fxstatat@plt+0x3cb4>
  40680c:	mov	w17, #0x6                   	// #6
  406810:	mov	w4, w16
  406814:	b	406868 <__fxstatat@plt+0x3cb8>
  406818:	mov	w4, #0x7                   	// #7
  40681c:	b	406864 <__fxstatat@plt+0x3cb4>
  406820:	mov	w4, #0x8                   	// #8
  406824:	b	406864 <__fxstatat@plt+0x3cb4>
  406828:	mov	w4, #0x1b                  	// #27
  40682c:	b	406864 <__fxstatat@plt+0x3cb4>
  406830:	mov	w4, #0xc                   	// #12
  406834:	b	406864 <__fxstatat@plt+0x3cb4>
  406838:	mov	w4, #0xa                   	// #10
  40683c:	b	406864 <__fxstatat@plt+0x3cb4>
  406840:	mov	w4, #0x9                   	// #9
  406844:	b	406864 <__fxstatat@plt+0x3cb4>
  406848:	mov	w4, #0x7f                  	// #127
  40684c:	b	406864 <__fxstatat@plt+0x3cb4>
  406850:	mov	w4, #0x20                  	// #32
  406854:	b	406864 <__fxstatat@plt+0x3cb4>
  406858:	mov	w4, #0xd                   	// #13
  40685c:	b	406864 <__fxstatat@plt+0x3cb4>
  406860:	mov	w4, #0xb                   	// #11
  406864:	mov	w17, w18
  406868:	cmp	w17, #0x1
  40686c:	b.ne	406660 <__fxstatat@plt+0x3ab0>  // b.any
  406870:	mov	w17, wzr
  406874:	strb	w4, [x10], #1
  406878:	add	x8, x8, #0x1
  40687c:	b	406660 <__fxstatat@plt+0x3ab0>
  406880:	cmp	w17, #0x6
  406884:	str	x10, [x0]
  406888:	str	x9, [x1]
  40688c:	cset	w0, ne  // ne = any
  406890:	str	x8, [x3]
  406894:	ldp	x29, x30, [sp], #16
  406898:	ret
  40689c:	bl	4028c0 <abort@plt>
  4068a0:	stp	x29, x30, [sp, #-48]!
  4068a4:	stp	x22, x21, [sp, #16]
  4068a8:	stp	x20, x19, [sp, #32]
  4068ac:	mov	x29, sp
  4068b0:	mov	x19, x2
  4068b4:	mov	x20, x1
  4068b8:	mov	w21, w0
  4068bc:	bl	402b40 <__errno_location@plt>
  4068c0:	ldr	w22, [x0]
  4068c4:	mov	w0, #0x4                   	// #4
  4068c8:	mov	x1, x19
  4068cc:	bl	410afc <__fxstatat@plt+0xdf4c>
  4068d0:	mov	x3, x0
  4068d4:	mov	w0, wzr
  4068d8:	mov	w1, w22
  4068dc:	mov	x2, x20
  4068e0:	bl	4025b0 <error@plt>
  4068e4:	and	w0, w21, #0x1
  4068e8:	bl	406968 <__fxstatat@plt+0x3db8>
  4068ec:	ldp	x20, x19, [sp, #32]
  4068f0:	ldp	x22, x21, [sp, #16]
  4068f4:	ldp	x29, x30, [sp], #48
  4068f8:	ret
  4068fc:	stp	x29, x30, [sp, #-48]!
  406900:	str	x21, [sp, #16]
  406904:	mov	x21, x0
  406908:	mov	w0, #0x10                  	// #16
  40690c:	stp	x20, x19, [sp, #32]
  406910:	mov	x29, sp
  406914:	mov	x20, x1
  406918:	bl	411b44 <__fxstatat@plt+0xef94>
  40691c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406920:	mov	x19, x0
  406924:	ldr	x0, [x8, #1560]
  406928:	mov	x1, x19
  40692c:	stp	x20, x21, [x19]
  406930:	bl	40c63c <__fxstatat@plt+0x9a8c>
  406934:	cbz	x0, 406964 <__fxstatat@plt+0x3db4>
  406938:	mov	x20, x0
  40693c:	cmp	x0, x19
  406940:	b.eq	40694c <__fxstatat@plt+0x3d9c>  // b.none
  406944:	mov	x0, x19
  406948:	bl	402990 <free@plt>
  40694c:	cmp	x20, x19
  406950:	ldp	x20, x19, [sp, #32]
  406954:	ldr	x21, [sp, #16]
  406958:	cset	w0, ne  // ne = any
  40695c:	ldp	x29, x30, [sp], #48
  406960:	ret
  406964:	bl	411d48 <__fxstatat@plt+0xf198>
  406968:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40696c:	tbz	w0, #0, 406978 <__fxstatat@plt+0x3dc8>
  406970:	mov	w9, #0x2                   	// #2
  406974:	b	406988 <__fxstatat@plt+0x3dd8>
  406978:	ldr	w9, [x8, #1504]
  40697c:	cbz	w9, 406984 <__fxstatat@plt+0x3dd4>
  406980:	ret
  406984:	mov	w9, #0x1                   	// #1
  406988:	str	w9, [x8, #1504]
  40698c:	ret
  406990:	stp	x29, x30, [sp, #-32]!
  406994:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406998:	add	x8, x8, #0x638
  40699c:	ldp	x8, x9, [x8]
  4069a0:	stp	x20, x19, [sp, #16]
  4069a4:	mov	x19, x1
  4069a8:	mov	x20, x0
  4069ac:	sub	x8, x9, x8
  4069b0:	cmp	x8, #0xf
  4069b4:	mov	x29, sp
  4069b8:	b.hi	4069cc <__fxstatat@plt+0x3e1c>  // b.pmore
  4069bc:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4069c0:	add	x0, x0, #0x620
  4069c4:	mov	w1, #0x10                  	// #16
  4069c8:	bl	412910 <_obstack_newchunk@@Base>
  4069cc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4069d0:	ldr	x9, [x8, #1592]
  4069d4:	add	x10, x9, #0x10
  4069d8:	str	x10, [x8, #1592]
  4069dc:	stp	x19, x20, [x9]
  4069e0:	ldp	x20, x19, [sp, #16]
  4069e4:	ldp	x29, x30, [sp], #32
  4069e8:	ret
  4069ec:	stp	x29, x30, [sp, #-96]!
  4069f0:	stp	x28, x27, [sp, #16]
  4069f4:	stp	x26, x25, [sp, #32]
  4069f8:	stp	x24, x23, [sp, #48]
  4069fc:	stp	x22, x21, [sp, #64]
  406a00:	stp	x20, x19, [sp, #80]
  406a04:	mov	x29, sp
  406a08:	sub	sp, sp, #0x2, lsl #12
  406a0c:	sub	sp, sp, #0x20
  406a10:	mov	x19, x0
  406a14:	mov	x22, x5
  406a18:	mov	w24, w4
  406a1c:	mov	x23, x3
  406a20:	mov	w3, w2
  406a24:	mov	x2, x1
  406a28:	add	x8, sp, #0x18
  406a2c:	add	x0, sp, #0x10
  406a30:	add	x5, sp, #0xc
  406a34:	mov	x1, x19
  406a38:	mov	x4, xzr
  406a3c:	mov	x21, x6
  406a40:	str	x8, [sp, #16]
  406a44:	bl	406da8 <__fxstatat@plt+0x41f8>
  406a48:	ldrb	w25, [sp, #12]
  406a4c:	mov	x20, x0
  406a50:	adrp	x26, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406a54:	cbz	x25, 406a70 <__fxstatat@plt+0x3ec0>
  406a58:	tbz	w24, #0, 406a70 <__fxstatat@plt+0x3ec0>
  406a5c:	mov	w0, #0x20                  	// #32
  406a60:	bl	4027f0 <putchar_unlocked@plt>
  406a64:	ldr	x8, [x26, #1896]
  406a68:	add	x8, x8, #0x1
  406a6c:	str	x8, [x26, #1896]
  406a70:	cbz	x23, 406a7c <__fxstatat@plt+0x3ecc>
  406a74:	mov	x0, x23
  406a78:	bl	407134 <__fxstatat@plt+0x4584>
  406a7c:	cbz	x21, 406b1c <__fxstatat@plt+0x3f6c>
  406a80:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406a84:	ldrb	w8, [x8, #2400]
  406a88:	mov	w27, wzr
  406a8c:	cbz	w8, 406ab0 <__fxstatat@plt+0x3f00>
  406a90:	cbnz	w25, 406ab0 <__fxstatat@plt+0x3f00>
  406a94:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  406a98:	ldrb	w8, [x8, #1417]
  406a9c:	cbz	w8, 406ab0 <__fxstatat@plt+0x3f00>
  406aa0:	ldr	x8, [sp, #16]
  406aa4:	ldrb	w0, [x8]
  406aa8:	bl	4027f0 <putchar_unlocked@plt>
  406aac:	mov	w27, #0x1                   	// #1
  406ab0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406ab4:	ldr	x0, [x8, #1864]
  406ab8:	mov	w1, wzr
  406abc:	bl	407184 <__fxstatat@plt+0x45d4>
  406ac0:	mov	x23, x0
  406ac4:	mov	w1, #0x1                   	// #1
  406ac8:	mov	x0, x21
  406acc:	bl	407184 <__fxstatat@plt+0x45d4>
  406ad0:	ldrb	w8, [x0]
  406ad4:	adrp	x9, 416000 <_obstack_memory_used@@Base+0x34b8>
  406ad8:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x54b8>
  406adc:	mov	x24, x0
  406ae0:	add	x9, x9, #0xb16
  406ae4:	add	x10, x10, #0xe71
  406ae8:	cmp	w8, #0x2f
  406aec:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  406af0:	csel	x3, x10, x9, eq  // eq = none
  406af4:	add	x1, x1, #0xe57
  406af8:	mov	w0, #0x1                   	// #1
  406afc:	mov	x2, x23
  406b00:	mov	x4, x24
  406b04:	bl	4027b0 <__printf_chk@plt>
  406b08:	mov	x0, x23
  406b0c:	bl	402990 <free@plt>
  406b10:	mov	x0, x24
  406b14:	bl	402990 <free@plt>
  406b18:	b	406b20 <__fxstatat@plt+0x3f70>
  406b1c:	mov	w27, wzr
  406b20:	cmp	x22, #0x0
  406b24:	cset	w24, ne  // ne = any
  406b28:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406b2c:	cbz	x22, 406b74 <__fxstatat@plt+0x3fc4>
  406b30:	ldrb	w8, [x23, #1677]
  406b34:	cmp	w8, #0x1
  406b38:	b.ne	406b78 <__fxstatat@plt+0x3fc8>  // b.any
  406b3c:	ldp	x9, x8, [x22, #24]
  406b40:	sub	x8, x8, x9
  406b44:	cmp	x8, #0x7
  406b48:	b.hi	406b58 <__fxstatat@plt+0x3fa8>  // b.pmore
  406b4c:	mov	w1, #0x8                   	// #8
  406b50:	mov	x0, x22
  406b54:	bl	412910 <_obstack_newchunk@@Base>
  406b58:	ldr	x8, [x22, #24]
  406b5c:	ldr	x9, [x26, #1896]
  406b60:	str	x9, [x8]
  406b64:	ldr	x8, [x22, #24]
  406b68:	add	x8, x8, #0x8
  406b6c:	str	x8, [x22, #24]
  406b70:	b	406b78 <__fxstatat@plt+0x3fc8>
  406b74:	mov	w24, wzr
  406b78:	ldr	x9, [sp, #16]
  406b7c:	adrp	x28, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406b80:	ldr	x3, [x28, #1480]
  406b84:	cmp	w27, #0x0
  406b88:	mov	w8, #0x2                   	// #2
  406b8c:	csel	x8, x8, xzr, ne  // ne = any
  406b90:	sub	x2, x20, x8
  406b94:	add	x0, x9, x27
  406b98:	mov	w1, #0x1                   	// #1
  406b9c:	bl	402530 <fwrite_unlocked@plt>
  406ba0:	ldr	x8, [x26, #1896]
  406ba4:	add	x8, x8, x20
  406ba8:	str	x8, [x26, #1896]
  406bac:	cbz	w24, 406bf0 <__fxstatat@plt+0x4040>
  406bb0:	ldrb	w8, [x23, #1677]
  406bb4:	cmp	w8, #0x1
  406bb8:	b.ne	406bf0 <__fxstatat@plt+0x4040>  // b.any
  406bbc:	ldp	x9, x8, [x22, #24]
  406bc0:	sub	x8, x8, x9
  406bc4:	cmp	x8, #0x7
  406bc8:	b.hi	406bd8 <__fxstatat@plt+0x4028>  // b.pmore
  406bcc:	mov	w1, #0x8                   	// #8
  406bd0:	mov	x0, x22
  406bd4:	bl	412910 <_obstack_newchunk@@Base>
  406bd8:	ldr	x8, [x22, #24]
  406bdc:	ldr	x9, [x26, #1896]
  406be0:	str	x9, [x8]
  406be4:	ldr	x8, [x22, #24]
  406be8:	add	x8, x8, #0x8
  406bec:	str	x8, [x22, #24]
  406bf0:	cbz	x21, 406c18 <__fxstatat@plt+0x4068>
  406bf4:	ldr	x1, [x28, #1480]
  406bf8:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  406bfc:	add	x0, x0, #0xe6b
  406c00:	bl	402ae0 <fputs_unlocked@plt>
  406c04:	cbz	w27, 406c18 <__fxstatat@plt+0x4068>
  406c08:	ldr	x8, [sp, #16]
  406c0c:	add	x8, x8, x20
  406c10:	ldurb	w0, [x8, #-1]
  406c14:	bl	4027f0 <putchar_unlocked@plt>
  406c18:	ldr	x0, [sp, #16]
  406c1c:	add	x8, sp, #0x18
  406c20:	cmp	x0, x8
  406c24:	b.eq	406c34 <__fxstatat@plt+0x4084>  // b.none
  406c28:	cmp	x0, x19
  406c2c:	b.eq	406c34 <__fxstatat@plt+0x4084>  // b.none
  406c30:	bl	402990 <free@plt>
  406c34:	add	x0, x20, x25
  406c38:	add	sp, sp, #0x2, lsl #12
  406c3c:	add	sp, sp, #0x20
  406c40:	ldp	x20, x19, [sp, #80]
  406c44:	ldp	x22, x21, [sp, #64]
  406c48:	ldp	x24, x23, [sp, #48]
  406c4c:	ldp	x26, x25, [sp, #32]
  406c50:	ldp	x28, x27, [sp, #16]
  406c54:	ldp	x29, x30, [sp], #96
  406c58:	ret
  406c5c:	stp	x29, x30, [sp, #-32]!
  406c60:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406c64:	ldr	w8, [x8, #2324]
  406c68:	str	x19, [sp, #16]
  406c6c:	mov	x19, x0
  406c70:	mov	x29, sp
  406c74:	cmp	w8, #0x2
  406c78:	b.eq	406cc4 <__fxstatat@plt+0x4114>  // b.none
  406c7c:	ldrb	w9, [x19]
  406c80:	cmp	w9, #0x2e
  406c84:	b.ne	406ca4 <__fxstatat@plt+0x40f4>  // b.any
  406c88:	cbz	w8, 406cbc <__fxstatat@plt+0x410c>
  406c8c:	ldrb	w9, [x19, #1]
  406c90:	mov	w0, #0x1                   	// #1
  406c94:	cmp	w9, #0x2e
  406c98:	cinc	x9, x0, eq  // eq = none
  406c9c:	ldrb	w9, [x19, x9]
  406ca0:	cbz	w9, 406cd4 <__fxstatat@plt+0x4124>
  406ca4:	cbnz	w8, 406cc4 <__fxstatat@plt+0x4114>
  406ca8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406cac:	ldr	x0, [x8, #2336]
  406cb0:	mov	x1, x19
  406cb4:	bl	407254 <__fxstatat@plt+0x46a4>
  406cb8:	tbz	w0, #0, 406cc4 <__fxstatat@plt+0x4114>
  406cbc:	mov	w0, #0x1                   	// #1
  406cc0:	b	406cd4 <__fxstatat@plt+0x4124>
  406cc4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406cc8:	ldr	x0, [x8, #2328]
  406ccc:	mov	x1, x19
  406cd0:	bl	407254 <__fxstatat@plt+0x46a4>
  406cd4:	ldr	x19, [sp, #16]
  406cd8:	and	w0, w0, #0x1
  406cdc:	ldp	x29, x30, [sp], #32
  406ce0:	ret
  406ce4:	sub	sp, sp, #0xc0
  406ce8:	stp	x20, x19, [sp, #176]
  406cec:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406cf0:	stp	x24, x23, [sp, #144]
  406cf4:	stp	x22, x21, [sp, #160]
  406cf8:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406cfc:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406d00:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406d04:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406d08:	add	x19, x19, #0x888
  406d0c:	stp	x29, x30, [sp, #128]
  406d10:	add	x29, sp, #0x80
  406d14:	b	406d3c <__fxstatat@plt+0x418c>
  406d18:	mov	w0, w20
  406d1c:	mov	x1, xzr
  406d20:	bl	4026f0 <signal@plt>
  406d24:	mov	w0, w20
  406d28:	bl	4025a0 <raise@plt>
  406d2c:	mov	x1, sp
  406d30:	mov	w0, #0x2                   	// #2
  406d34:	mov	x2, xzr
  406d38:	bl	4025c0 <sigprocmask@plt>
  406d3c:	ldr	w8, [x21, #1912]
  406d40:	cbnz	w8, 406d4c <__fxstatat@plt+0x419c>
  406d44:	ldr	w8, [x22, #1908]
  406d48:	cbz	w8, 406d90 <__fxstatat@plt+0x41e0>
  406d4c:	ldrb	w8, [x23, #1904]
  406d50:	cmp	w8, #0x1
  406d54:	b.ne	406d5c <__fxstatat@plt+0x41ac>  // b.any
  406d58:	bl	4058c0 <__fxstatat@plt+0x2d10>
  406d5c:	ldr	x0, [x24, #1480]
  406d60:	bl	4029f0 <fflush_unlocked@plt>
  406d64:	mov	x2, sp
  406d68:	mov	w0, wzr
  406d6c:	mov	x1, x19
  406d70:	bl	4025c0 <sigprocmask@plt>
  406d74:	ldr	w20, [x21, #1912]
  406d78:	ldr	w8, [x22, #1908]
  406d7c:	cbz	w8, 406d18 <__fxstatat@plt+0x4168>
  406d80:	sub	w8, w8, #0x1
  406d84:	str	w8, [x22, #1908]
  406d88:	mov	w20, #0x13                  	// #19
  406d8c:	b	406d24 <__fxstatat@plt+0x4174>
  406d90:	ldp	x20, x19, [sp, #176]
  406d94:	ldp	x22, x21, [sp, #160]
  406d98:	ldp	x24, x23, [sp, #144]
  406d9c:	ldp	x29, x30, [sp, #128]
  406da0:	add	sp, sp, #0xc0
  406da4:	ret
  406da8:	sub	sp, sp, #0x80
  406dac:	stp	x29, x30, [sp, #32]
  406db0:	stp	x28, x27, [sp, #48]
  406db4:	stp	x26, x25, [sp, #64]
  406db8:	stp	x24, x23, [sp, #80]
  406dbc:	stp	x22, x21, [sp, #96]
  406dc0:	stp	x20, x19, [sp, #112]
  406dc4:	ldr	x22, [x0]
  406dc8:	mov	x20, x0
  406dcc:	mov	x0, x2
  406dd0:	add	x29, sp, #0x20
  406dd4:	mov	x28, x5
  406dd8:	mov	x19, x4
  406ddc:	mov	w23, w3
  406de0:	mov	x25, x2
  406de4:	mov	x24, x1
  406de8:	bl	40f8dc <__fxstatat@plt+0xcd2c>
  406dec:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  406df0:	sub	w9, w0, #0x1
  406df4:	ldrb	w8, [x8, #2312]
  406df8:	cmp	w9, #0x2
  406dfc:	cset	w9, cc  // cc = lo, ul, last
  406e00:	cmp	w0, #0x0
  406e04:	cset	w10, eq  // eq = none
  406e08:	orr	w9, w10, w9
  406e0c:	and	w21, w8, w9
  406e10:	cbz	w23, 406e84 <__fxstatat@plt+0x42d4>
  406e14:	mov	w1, #0x2000                	// #8192
  406e18:	mov	x3, #0xffffffffffffffff    	// #-1
  406e1c:	mov	x0, x22
  406e20:	mov	x2, x24
  406e24:	mov	x4, x25
  406e28:	bl	40f99c <__fxstatat@plt+0xcdec>
  406e2c:	mov	x23, x0
  406e30:	cmp	x0, #0x2, lsl #12
  406e34:	b.cc	406e5c <__fxstatat@plt+0x42ac>  // b.lo, b.ul, b.last
  406e38:	add	x26, x23, #0x1
  406e3c:	mov	x0, x26
  406e40:	bl	411b44 <__fxstatat@plt+0xef94>
  406e44:	mov	x3, #0xffffffffffffffff    	// #-1
  406e48:	mov	x1, x26
  406e4c:	mov	x2, x24
  406e50:	mov	x4, x25
  406e54:	mov	x22, x0
  406e58:	bl	40f99c <__fxstatat@plt+0xcdec>
  406e5c:	ldrb	w8, [x24]
  406e60:	ldrb	w9, [x22]
  406e64:	cmp	w8, w9
  406e68:	b.ne	406ec4 <__fxstatat@plt+0x4314>  // b.any
  406e6c:	mov	x0, x24
  406e70:	bl	402550 <strlen@plt>
  406e74:	cmp	x0, x23
  406e78:	cset	w25, eq  // eq = none
  406e7c:	cbnz	w21, 406ecc <__fxstatat@plt+0x431c>
  406e80:	b	407048 <__fxstatat@plt+0x4498>
  406e84:	mov	x0, x24
  406e88:	bl	402550 <strlen@plt>
  406e8c:	mov	x23, x0
  406e90:	cbz	w21, 40703c <__fxstatat@plt+0x448c>
  406e94:	cmp	x23, #0x2, lsl #12
  406e98:	b.cc	406ea8 <__fxstatat@plt+0x42f8>  // b.lo, b.ul, b.last
  406e9c:	add	x0, x23, #0x1
  406ea0:	bl	411b44 <__fxstatat@plt+0xef94>
  406ea4:	mov	x22, x0
  406ea8:	add	x2, x23, #0x1
  406eac:	mov	x0, x22
  406eb0:	mov	x1, x24
  406eb4:	bl	4024e0 <memcpy@plt>
  406eb8:	mov	w25, #0x1                   	// #1
  406ebc:	cbnz	w21, 406ecc <__fxstatat@plt+0x431c>
  406ec0:	b	407048 <__fxstatat@plt+0x4498>
  406ec4:	mov	w25, wzr
  406ec8:	cbz	w21, 407048 <__fxstatat@plt+0x4498>
  406ecc:	bl	4029a0 <__ctype_get_mb_cur_max@plt>
  406ed0:	cmp	x0, #0x1
  406ed4:	add	x27, x22, x23
  406ed8:	b.ls	406fec <__fxstatat@plt+0x443c>  // b.plast
  406edc:	cmp	x23, #0x1
  406ee0:	mov	x26, xzr
  406ee4:	str	x28, [sp, #8]
  406ee8:	b.lt	4070c4 <__fxstatat@plt+0x4514>  // b.tstop
  406eec:	adrp	x21, 414000 <_obstack_memory_used@@Base+0x14b8>
  406ef0:	add	x21, x21, #0xeb2
  406ef4:	mov	x28, x22
  406ef8:	mov	x23, x22
  406efc:	ldrb	w8, [x23]
  406f00:	sub	w9, w8, #0x20
  406f04:	cmp	w9, #0x5e
  406f08:	b.hi	406f34 <__fxstatat@plt+0x4384>  // b.pmore
  406f0c:	adr	x10, 406f1c <__fxstatat@plt+0x436c>
  406f10:	ldrb	w11, [x21, x9]
  406f14:	add	x10, x10, x11, lsl #2
  406f18:	br	x10
  406f1c:	add	x23, x23, #0x1
  406f20:	strb	w8, [x28], #1
  406f24:	add	x26, x26, #0x1
  406f28:	cmp	x23, x27
  406f2c:	b.cc	406efc <__fxstatat@plt+0x434c>  // b.lo, b.ul, b.last
  406f30:	b	4070c8 <__fxstatat@plt+0x4518>
  406f34:	stur	xzr, [x29, #-8]
  406f38:	sub	x2, x27, x23
  406f3c:	sub	x0, x29, #0xc
  406f40:	sub	x3, x29, #0x8
  406f44:	mov	x1, x23
  406f48:	bl	4127b8 <__fxstatat@plt+0xfc08>
  406f4c:	cmn	x0, #0x2
  406f50:	b.eq	406f7c <__fxstatat@plt+0x43cc>  // b.none
  406f54:	mov	x24, x0
  406f58:	cbz	x0, 406f94 <__fxstatat@plt+0x43e4>
  406f5c:	cmn	x24, #0x1
  406f60:	b.ne	406f98 <__fxstatat@plt+0x43e8>  // b.any
  406f64:	mov	w9, #0x3f                  	// #63
  406f68:	mov	w8, wzr
  406f6c:	add	x23, x23, #0x1
  406f70:	strb	w9, [x28], #1
  406f74:	add	x26, x26, #0x1
  406f78:	b	406fd8 <__fxstatat@plt+0x4428>
  406f7c:	mov	w9, #0x3f                  	// #63
  406f80:	mov	w8, wzr
  406f84:	strb	w9, [x28], #1
  406f88:	add	x26, x26, #0x1
  406f8c:	mov	x23, x27
  406f90:	b	406fd8 <__fxstatat@plt+0x4428>
  406f94:	mov	w24, #0x1                   	// #1
  406f98:	ldur	w0, [x29, #-12]
  406f9c:	bl	402740 <wcwidth@plt>
  406fa0:	tbnz	w0, #31, 406fc0 <__fxstatat@plt+0x4410>
  406fa4:	cbz	x24, 406fb8 <__fxstatat@plt+0x4408>
  406fa8:	ldrb	w8, [x23], #1
  406fac:	subs	x24, x24, #0x1
  406fb0:	strb	w8, [x28], #1
  406fb4:	b.ne	406fa8 <__fxstatat@plt+0x43f8>  // b.any
  406fb8:	sxtw	x8, w0
  406fbc:	b	406fd0 <__fxstatat@plt+0x4420>
  406fc0:	mov	w8, #0x3f                  	// #63
  406fc4:	add	x23, x23, x24
  406fc8:	strb	w8, [x28], #1
  406fcc:	mov	w8, #0x1                   	// #1
  406fd0:	add	x26, x8, x26
  406fd4:	mov	w8, #0x1                   	// #1
  406fd8:	cbz	w8, 406f28 <__fxstatat@plt+0x4378>
  406fdc:	sub	x0, x29, #0x8
  406fe0:	bl	4028d0 <mbsinit@plt>
  406fe4:	cbz	w0, 406f38 <__fxstatat@plt+0x4388>
  406fe8:	b	406f28 <__fxstatat@plt+0x4378>
  406fec:	cmp	x23, #0x1
  406ff0:	b.lt	4070d4 <__fxstatat@plt+0x4524>  // b.tstop
  406ff4:	str	w25, [sp, #4]
  406ff8:	mov	x25, x28
  406ffc:	bl	402970 <__ctype_b_loc@plt>
  407000:	mov	x24, x0
  407004:	mov	w21, #0x3f                  	// #63
  407008:	mov	x26, x22
  40700c:	b	40701c <__fxstatat@plt+0x446c>
  407010:	add	x26, x26, #0x1
  407014:	cmp	x26, x27
  407018:	b.cs	407074 <__fxstatat@plt+0x44c4>  // b.hs, b.nlast
  40701c:	ldrb	w0, [x26]
  407020:	ldr	x28, [x24]
  407024:	bl	406574 <__fxstatat@plt+0x39c4>
  407028:	and	x8, x0, #0xff
  40702c:	ldrh	w8, [x28, x8, lsl #1]
  407030:	tbnz	w8, #14, 407010 <__fxstatat@plt+0x4460>
  407034:	strb	w21, [x26]
  407038:	b	407010 <__fxstatat@plt+0x4460>
  40703c:	mov	w25, #0x1                   	// #1
  407040:	mov	x22, x24
  407044:	cbnz	w21, 406ecc <__fxstatat@plt+0x431c>
  407048:	cbz	x19, 407070 <__fxstatat@plt+0x44c0>
  40704c:	bl	4029a0 <__ctype_get_mb_cur_max@plt>
  407050:	cmp	x0, #0x2
  407054:	b.cc	407084 <__fxstatat@plt+0x44d4>  // b.lo, b.ul, b.last
  407058:	mov	x0, x22
  40705c:	mov	x1, x23
  407060:	mov	w2, wzr
  407064:	bl	40da84 <__fxstatat@plt+0xaed4>
  407068:	sxtw	x26, w0
  40706c:	b	4070e0 <__fxstatat@plt+0x4530>
  407070:	b	4070e0 <__fxstatat@plt+0x4530>
  407074:	mov	x28, x25
  407078:	ldr	w25, [sp, #4]
  40707c:	mov	x26, x23
  407080:	b	4070e0 <__fxstatat@plt+0x4530>
  407084:	cmp	x23, #0x1
  407088:	b.lt	4070dc <__fxstatat@plt+0x452c>  // b.tstop
  40708c:	add	x21, x22, x23
  407090:	bl	402970 <__ctype_b_loc@plt>
  407094:	ldr	x24, [x0]
  407098:	mov	x26, xzr
  40709c:	mov	x27, x22
  4070a0:	ldrb	w0, [x27], #1
  4070a4:	bl	406574 <__fxstatat@plt+0x39c4>
  4070a8:	and	x8, x0, #0xff
  4070ac:	ldrh	w8, [x24, x8, lsl #1]
  4070b0:	cmp	x27, x21
  4070b4:	ubfx	x8, x8, #14, #1
  4070b8:	add	x26, x26, x8
  4070bc:	b.cc	4070a0 <__fxstatat@plt+0x44f0>  // b.lo, b.ul, b.last
  4070c0:	b	4070e0 <__fxstatat@plt+0x4530>
  4070c4:	mov	x28, x22
  4070c8:	sub	x23, x28, x22
  4070cc:	ldr	x28, [sp, #8]
  4070d0:	b	4070e0 <__fxstatat@plt+0x4530>
  4070d4:	mov	x26, x23
  4070d8:	b	4070e0 <__fxstatat@plt+0x4530>
  4070dc:	mov	x26, xzr
  4070e0:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4070e4:	ldrb	w8, [x8, #1417]
  4070e8:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4070ec:	ldrb	w9, [x9, #2400]
  4070f0:	cmp	w8, #0x0
  4070f4:	csel	w8, w25, wzr, ne  // ne = any
  4070f8:	cmp	w9, #0x0
  4070fc:	csel	w8, wzr, w8, eq  // eq = none
  407100:	strb	w8, [x28]
  407104:	cbz	x19, 40710c <__fxstatat@plt+0x455c>
  407108:	str	x26, [x19]
  40710c:	str	x22, [x20]
  407110:	mov	x0, x23
  407114:	ldp	x20, x19, [sp, #112]
  407118:	ldp	x22, x21, [sp, #96]
  40711c:	ldp	x24, x23, [sp, #80]
  407120:	ldp	x26, x25, [sp, #64]
  407124:	ldp	x28, x27, [sp, #48]
  407128:	ldp	x29, x30, [sp, #32]
  40712c:	add	sp, sp, #0x80
  407130:	ret
  407134:	cbz	x0, 407180 <__fxstatat@plt+0x45d0>
  407138:	stp	x29, x30, [sp, #-32]!
  40713c:	stp	x20, x19, [sp, #16]
  407140:	mov	x19, x0
  407144:	mov	w0, #0x4                   	// #4
  407148:	mov	x29, sp
  40714c:	bl	40440c <__fxstatat@plt+0x185c>
  407150:	tbz	w0, #0, 407158 <__fxstatat@plt+0x45a8>
  407154:	bl	4058c0 <__fxstatat@plt+0x2d10>
  407158:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40715c:	add	x20, x20, #0x388
  407160:	mov	x0, x20
  407164:	bl	405f40 <__fxstatat@plt+0x3390>
  407168:	mov	x0, x19
  40716c:	bl	405f40 <__fxstatat@plt+0x3390>
  407170:	add	x0, x20, #0x10
  407174:	bl	405f40 <__fxstatat@plt+0x3390>
  407178:	ldp	x20, x19, [sp, #16]
  40717c:	ldp	x29, x30, [sp], #32
  407180:	ret
  407184:	stp	x29, x30, [sp, #-80]!
  407188:	str	x25, [sp, #16]
  40718c:	stp	x24, x23, [sp, #32]
  407190:	stp	x22, x21, [sp, #48]
  407194:	stp	x20, x19, [sp, #64]
  407198:	mov	x29, sp
  40719c:	mov	w19, w1
  4071a0:	mov	x22, x0
  4071a4:	bl	402550 <strlen@plt>
  4071a8:	add	x1, x0, #0x1
  4071ac:	mov	w0, #0x3                   	// #3
  4071b0:	bl	411b18 <__fxstatat@plt+0xef68>
  4071b4:	ldrb	w8, [x22]
  4071b8:	mov	x20, x0
  4071bc:	mov	x21, x0
  4071c0:	cbz	w8, 407234 <__fxstatat@plt+0x4684>
  4071c4:	add	x23, x22, #0x1
  4071c8:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4071cc:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x54b8>
  4071d0:	mov	w24, #0x2f                  	// #47
  4071d4:	add	x25, x25, #0x788
  4071d8:	add	x22, x22, #0xe72
  4071dc:	mov	x21, x20
  4071e0:	b	4071f0 <__fxstatat@plt+0x4640>
  4071e4:	strb	w24, [x21], #1
  4071e8:	ldrb	w8, [x23], #1
  4071ec:	cbz	w8, 407234 <__fxstatat@plt+0x4684>
  4071f0:	and	w9, w8, #0xff
  4071f4:	cmp	w9, #0x2f
  4071f8:	b.ne	407200 <__fxstatat@plt+0x4650>  // b.any
  4071fc:	tbnz	w19, #0, 4071e4 <__fxstatat@plt+0x4634>
  407200:	and	x9, x8, #0xff
  407204:	ldrb	w9, [x25, x9]
  407208:	cbz	w9, 407214 <__fxstatat@plt+0x4664>
  40720c:	strb	w8, [x21], #1
  407210:	b	4071e8 <__fxstatat@plt+0x4638>
  407214:	and	w4, w8, #0xff
  407218:	mov	w1, #0x1                   	// #1
  40721c:	mov	x2, #0xffffffffffffffff    	// #-1
  407220:	mov	x0, x21
  407224:	mov	x3, x22
  407228:	bl	402560 <__sprintf_chk@plt>
  40722c:	add	x21, x21, w0, sxtw
  407230:	b	4071e8 <__fxstatat@plt+0x4638>
  407234:	strb	wzr, [x21]
  407238:	mov	x0, x20
  40723c:	ldp	x20, x19, [sp, #64]
  407240:	ldp	x22, x21, [sp, #48]
  407244:	ldp	x24, x23, [sp, #32]
  407248:	ldr	x25, [sp, #16]
  40724c:	ldp	x29, x30, [sp], #80
  407250:	ret
  407254:	stp	x29, x30, [sp, #-32]!
  407258:	stp	x20, x19, [sp, #16]
  40725c:	mov	x29, sp
  407260:	cbz	x0, 407294 <__fxstatat@plt+0x46e4>
  407264:	mov	x19, x1
  407268:	mov	x20, x0
  40726c:	ldr	x0, [x20]
  407270:	mov	w2, #0x4                   	// #4
  407274:	mov	x1, x19
  407278:	bl	4029e0 <fnmatch@plt>
  40727c:	cbz	w0, 407290 <__fxstatat@plt+0x46e0>
  407280:	ldr	x20, [x20, #8]
  407284:	cbnz	x20, 40726c <__fxstatat@plt+0x46bc>
  407288:	mov	w0, wzr
  40728c:	b	407294 <__fxstatat@plt+0x46e4>
  407290:	mov	w0, #0x1                   	// #1
  407294:	ldp	x20, x19, [sp, #16]
  407298:	ldp	x29, x30, [sp], #32
  40729c:	ret
  4072a0:	stp	x29, x30, [sp, #-32]!
  4072a4:	str	x19, [sp, #16]
  4072a8:	mov	x19, x0
  4072ac:	ldr	x0, [x0]
  4072b0:	mov	x29, sp
  4072b4:	bl	402990 <free@plt>
  4072b8:	ldr	x0, [x19, #8]
  4072bc:	bl	402990 <free@plt>
  4072c0:	ldr	x0, [x19, #16]
  4072c4:	bl	402990 <free@plt>
  4072c8:	ldr	x0, [x19, #160]
  4072cc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4072d0:	add	x8, x8, #0x520
  4072d4:	cmp	x0, x8
  4072d8:	b.eq	4072e0 <__fxstatat@plt+0x4730>  // b.none
  4072dc:	bl	411418 <__fxstatat@plt+0xe868>
  4072e0:	ldr	x19, [sp, #16]
  4072e4:	ldp	x29, x30, [sp], #32
  4072e8:	ret
  4072ec:	sub	sp, sp, #0x30
  4072f0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4072f4:	ldr	x4, [x8, #1920]
  4072f8:	stp	x29, x30, [sp, #16]
  4072fc:	stp	x20, x19, [sp, #32]
  407300:	add	x29, sp, #0x10
  407304:	mov	x19, x0
  407308:	sub	x0, x29, #0x4
  40730c:	mov	w1, #0x2                   	// #2
  407310:	mov	x3, #0xffffffffffffffff    	// #-1
  407314:	mov	x2, x19
  407318:	bl	40f99c <__fxstatat@plt+0xcdec>
  40731c:	ldrb	w8, [x19]
  407320:	ldurb	w9, [x29, #-4]
  407324:	cmp	w8, w9
  407328:	b.ne	407344 <__fxstatat@plt+0x4794>  // b.any
  40732c:	mov	x20, x0
  407330:	mov	x0, x19
  407334:	bl	402550 <strlen@plt>
  407338:	cmp	x0, x20
  40733c:	cset	w0, ne  // ne = any
  407340:	b	407348 <__fxstatat@plt+0x4798>
  407344:	mov	w0, #0x1                   	// #1
  407348:	ldp	x20, x19, [sp, #32]
  40734c:	ldp	x29, x30, [sp, #16]
  407350:	add	sp, sp, #0x30
  407354:	ret
  407358:	ldrb	w8, [x1]
  40735c:	cmp	w8, #0x2e
  407360:	b.ne	40736c <__fxstatat@plt+0x47bc>  // b.any
  407364:	ldrb	w8, [x1, #1]
  407368:	cbz	w8, 4073b0 <__fxstatat@plt+0x4800>
  40736c:	ldrb	w9, [x1]
  407370:	cbz	w9, 407390 <__fxstatat@plt+0x47e0>
  407374:	mov	x8, x1
  407378:	strb	w9, [x0], #1
  40737c:	ldrb	w9, [x8, #1]!
  407380:	cbnz	w9, 407378 <__fxstatat@plt+0x47c8>
  407384:	cmp	x8, x1
  407388:	b.hi	40739c <__fxstatat@plt+0x47ec>  // b.pmore
  40738c:	b	4073b0 <__fxstatat@plt+0x4800>
  407390:	mov	x8, x1
  407394:	cmp	x8, x1
  407398:	b.ls	4073b0 <__fxstatat@plt+0x4800>  // b.plast
  40739c:	ldurb	w8, [x8, #-1]
  4073a0:	cmp	w8, #0x2f
  4073a4:	b.eq	4073b0 <__fxstatat@plt+0x4800>  // b.none
  4073a8:	mov	w8, #0x2f                  	// #47
  4073ac:	strb	w8, [x0], #1
  4073b0:	ldrb	w8, [x2]
  4073b4:	cbz	w8, 4073c8 <__fxstatat@plt+0x4818>
  4073b8:	add	x9, x2, #0x1
  4073bc:	strb	w8, [x0], #1
  4073c0:	ldrb	w8, [x9], #1
  4073c4:	cbnz	w8, 4073bc <__fxstatat@plt+0x480c>
  4073c8:	strb	wzr, [x0]
  4073cc:	ret
  4073d0:	stp	x29, x30, [sp, #-48]!
  4073d4:	str	x21, [sp, #16]
  4073d8:	stp	x20, x19, [sp, #32]
  4073dc:	adrp	x21, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4073e0:	ldr	x8, [x1, #24]
  4073e4:	ldr	x9, [x21, #1480]
  4073e8:	mov	x29, sp
  4073ec:	cmp	x8, x9
  4073f0:	b.ne	407408 <__fxstatat@plt+0x4858>  // b.any
  4073f4:	bl	402b40 <__errno_location@plt>
  4073f8:	mov	w8, #0x5f                  	// #95
  4073fc:	mov	w19, wzr
  407400:	str	w8, [x0]
  407404:	b	407430 <__fxstatat@plt+0x4880>
  407408:	mov	x20, x1
  40740c:	bl	4076e4 <__fxstatat@plt+0x4b34>
  407410:	mov	w19, w0
  407414:	tbnz	w0, #0, 407430 <__fxstatat@plt+0x4880>
  407418:	bl	402b40 <__errno_location@plt>
  40741c:	ldr	w0, [x0]
  407420:	bl	407744 <__fxstatat@plt+0x4b94>
  407424:	tbz	w0, #0, 407430 <__fxstatat@plt+0x4880>
  407428:	ldr	x8, [x20, #24]
  40742c:	str	x8, [x21, #1480]
  407430:	and	w0, w19, #0x1
  407434:	ldp	x20, x19, [sp, #32]
  407438:	ldr	x21, [sp, #16]
  40743c:	ldp	x29, x30, [sp], #48
  407440:	ret
  407444:	stp	x29, x30, [sp, #-48]!
  407448:	str	x21, [sp, #16]
  40744c:	stp	x20, x19, [sp, #32]
  407450:	adrp	x21, 42c000 <__progname@@GLIBC_2.17+0xa30>
  407454:	ldr	x8, [x1, #24]
  407458:	ldr	x9, [x21, #1488]
  40745c:	mov	x29, sp
  407460:	cmp	x8, x9
  407464:	b.ne	40747c <__fxstatat@plt+0x48cc>  // b.any
  407468:	bl	402b40 <__errno_location@plt>
  40746c:	mov	w8, #0x5f                  	// #95
  407470:	str	w8, [x0]
  407474:	mov	w20, #0xffffffff            	// #-1
  407478:	b	4074bc <__fxstatat@plt+0x490c>
  40747c:	mov	x19, x1
  407480:	add	x1, x1, #0xa0
  407484:	tbz	w2, #0, 407498 <__fxstatat@plt+0x48e8>
  407488:	bl	411488 <__fxstatat@plt+0xe8d8>
  40748c:	mov	w20, w0
  407490:	tbz	w0, #31, 4074bc <__fxstatat@plt+0x490c>
  407494:	b	4074a4 <__fxstatat@plt+0x48f4>
  407498:	bl	4114ac <__fxstatat@plt+0xe8fc>
  40749c:	mov	w20, w0
  4074a0:	tbz	w0, #31, 4074bc <__fxstatat@plt+0x490c>
  4074a4:	bl	402b40 <__errno_location@plt>
  4074a8:	ldr	w0, [x0]
  4074ac:	bl	407744 <__fxstatat@plt+0x4b94>
  4074b0:	tbz	w0, #0, 4074bc <__fxstatat@plt+0x490c>
  4074b4:	ldr	x8, [x19, #24]
  4074b8:	str	x8, [x21, #1488]
  4074bc:	mov	w0, w20
  4074c0:	ldp	x20, x19, [sp, #32]
  4074c4:	ldr	x21, [sp, #16]
  4074c8:	ldp	x29, x30, [sp], #48
  4074cc:	ret
  4074d0:	cmp	w0, #0x5f
  4074d4:	cset	w0, eq  // eq = none
  4074d8:	ret
  4074dc:	stp	x29, x30, [sp, #-64]!
  4074e0:	str	x23, [sp, #16]
  4074e4:	stp	x22, x21, [sp, #32]
  4074e8:	stp	x20, x19, [sp, #48]
  4074ec:	mov	x19, x1
  4074f0:	adrp	x22, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4074f4:	ldr	x21, [x19, #24]!
  4074f8:	ldr	x23, [x22, #1496]
  4074fc:	mov	x29, sp
  407500:	mov	x20, x0
  407504:	bl	402b40 <__errno_location@plt>
  407508:	cmp	x21, x23
  40750c:	mov	x21, x0
  407510:	b.ne	407524 <__fxstatat@plt+0x4974>  // b.any
  407514:	mov	w8, #0x5f                  	// #95
  407518:	mov	w20, wzr
  40751c:	str	w8, [x21]
  407520:	b	407554 <__fxstatat@plt+0x49a4>
  407524:	mov	x0, x20
  407528:	mov	x1, x19
  40752c:	str	wzr, [x21]
  407530:	bl	40b030 <__fxstatat@plt+0x8480>
  407534:	mov	w20, w0
  407538:	cmp	w0, #0x0
  40753c:	b.gt	407554 <__fxstatat@plt+0x49a4>
  407540:	ldr	w0, [x21]
  407544:	bl	407744 <__fxstatat@plt+0x4b94>
  407548:	tbz	w0, #0, 407554 <__fxstatat@plt+0x49a4>
  40754c:	ldr	x8, [x19]
  407550:	str	x8, [x22, #1496]
  407554:	mov	w0, w20
  407558:	ldp	x20, x19, [sp, #48]
  40755c:	ldp	x22, x21, [sp, #32]
  407560:	ldr	x23, [sp, #16]
  407564:	ldp	x29, x30, [sp], #64
  407568:	ret
  40756c:	stp	x29, x30, [sp, #-48]!
  407570:	stp	x20, x19, [sp, #32]
  407574:	str	x21, [sp, #16]
  407578:	mov	x21, x1
  40757c:	ldr	x1, [x1, #72]
  407580:	mov	x29, sp
  407584:	mov	w20, w2
  407588:	mov	x19, x0
  40758c:	bl	40a150 <__fxstatat@plt+0x75a0>
  407590:	str	x0, [x21, #8]
  407594:	cbnz	x0, 4075b8 <__fxstatat@plt+0x4a08>
  407598:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  40759c:	add	x1, x1, #0xe94
  4075a0:	mov	w2, #0x5                   	// #5
  4075a4:	bl	402ad0 <dcgettext@plt>
  4075a8:	mov	x1, x0
  4075ac:	and	w0, w20, #0x1
  4075b0:	mov	x2, x19
  4075b4:	bl	4068a0 <__fxstatat@plt+0x3cf0>
  4075b8:	ldp	x20, x19, [sp, #32]
  4075bc:	ldr	x21, [sp, #16]
  4075c0:	ldp	x29, x30, [sp], #48
  4075c4:	ret
  4075c8:	stp	x29, x30, [sp, #-48]!
  4075cc:	stp	x22, x21, [sp, #16]
  4075d0:	stp	x20, x19, [sp, #32]
  4075d4:	mov	x29, sp
  4075d8:	cbz	x1, 407648 <__fxstatat@plt+0x4a98>
  4075dc:	ldrb	w8, [x1]
  4075e0:	mov	x19, x1
  4075e4:	cmp	w8, #0x2f
  4075e8:	b.eq	407638 <__fxstatat@plt+0x4a88>  // b.none
  4075ec:	mov	x20, x0
  4075f0:	bl	40aedc <__fxstatat@plt+0x832c>
  4075f4:	cbz	x0, 407638 <__fxstatat@plt+0x4a88>
  4075f8:	mov	x22, x0
  4075fc:	mov	x0, x19
  407600:	bl	402550 <strlen@plt>
  407604:	add	x8, x22, x0
  407608:	add	x0, x8, #0x2
  40760c:	bl	411b44 <__fxstatat@plt+0xef94>
  407610:	add	x8, x22, x20
  407614:	ldurb	w8, [x8, #-1]
  407618:	mov	x1, x20
  40761c:	mov	x21, x0
  407620:	cmp	w8, #0x2f
  407624:	cinc	x2, x22, ne  // ne = any
  407628:	bl	402910 <stpncpy@plt>
  40762c:	mov	x1, x19
  407630:	bl	4026b0 <stpcpy@plt>
  407634:	b	40764c <__fxstatat@plt+0x4a9c>
  407638:	mov	x0, x19
  40763c:	bl	411d1c <__fxstatat@plt+0xf16c>
  407640:	mov	x21, x0
  407644:	b	40764c <__fxstatat@plt+0x4a9c>
  407648:	mov	x21, xzr
  40764c:	mov	x0, x21
  407650:	ldp	x20, x19, [sp, #32]
  407654:	ldp	x22, x21, [sp, #16]
  407658:	ldp	x29, x30, [sp], #48
  40765c:	ret
  407660:	stp	x29, x30, [sp, #-32]!
  407664:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  407668:	ldrb	w8, [x8, #2321]
  40766c:	str	x19, [sp, #16]
  407670:	mov	w19, w0
  407674:	mov	x29, sp
  407678:	tbz	w8, #0, 407684 <__fxstatat@plt+0x4ad4>
  40767c:	mov	x0, xzr
  407680:	b	40768c <__fxstatat@plt+0x4adc>
  407684:	mov	w0, w19
  407688:	bl	40d198 <__fxstatat@plt+0xa5e8>
  40768c:	mov	w1, w19
  407690:	bl	407780 <__fxstatat@plt+0x4bd0>
  407694:	ldr	x19, [sp, #16]
  407698:	ldp	x29, x30, [sp], #32
  40769c:	ret
  4076a0:	stp	x29, x30, [sp, #-32]!
  4076a4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4076a8:	ldrb	w8, [x8, #2321]
  4076ac:	str	x19, [sp, #16]
  4076b0:	mov	w19, w0
  4076b4:	mov	x29, sp
  4076b8:	tbz	w8, #0, 4076c4 <__fxstatat@plt+0x4b14>
  4076bc:	mov	x0, xzr
  4076c0:	b	4076cc <__fxstatat@plt+0x4b1c>
  4076c4:	mov	w0, w19
  4076c8:	bl	40d33c <__fxstatat@plt+0xa78c>
  4076cc:	mov	w1, w19
  4076d0:	bl	407780 <__fxstatat@plt+0x4bd0>
  4076d4:	ldr	x19, [sp, #16]
  4076d8:	ldp	x29, x30, [sp], #32
  4076dc:	ret
  4076e0:	ret
  4076e4:	stp	x29, x30, [sp, #-32]!
  4076e8:	stp	x20, x19, [sp, #16]
  4076ec:	mov	x29, sp
  4076f0:	bl	402a60 <cap_get_file@plt>
  4076f4:	mov	x20, x0
  4076f8:	cbz	x0, 407734 <__fxstatat@plt+0x4b84>
  4076fc:	mov	x0, x20
  407700:	mov	x1, xzr
  407704:	bl	402500 <cap_to_text@plt>
  407708:	mov	x19, x0
  40770c:	mov	x0, x20
  407710:	bl	402ab0 <cap_free@plt>
  407714:	cbz	x19, 407730 <__fxstatat@plt+0x4b80>
  407718:	ldrb	w8, [x19]
  40771c:	mov	x0, x19
  407720:	cmp	w8, #0x0
  407724:	cset	w20, ne  // ne = any
  407728:	bl	402ab0 <cap_free@plt>
  40772c:	b	407734 <__fxstatat@plt+0x4b84>
  407730:	mov	w20, wzr
  407734:	mov	w0, w20
  407738:	ldp	x20, x19, [sp, #16]
  40773c:	ldp	x29, x30, [sp], #32
  407740:	ret
  407744:	mov	w8, w0
  407748:	cmp	w0, #0x16
  40774c:	mov	w0, #0x1                   	// #1
  407750:	b.eq	40775c <__fxstatat@plt+0x4bac>  // b.none
  407754:	cmp	w8, #0x26
  407758:	b.ne	407764 <__fxstatat@plt+0x4bb4>  // b.any
  40775c:	and	w0, w0, #0x1
  407760:	ret
  407764:	stp	x29, x30, [sp, #-16]!
  407768:	mov	w0, w8
  40776c:	mov	x29, sp
  407770:	bl	4074d0 <__fxstatat@plt+0x4920>
  407774:	ldp	x29, x30, [sp], #16
  407778:	and	w0, w0, #0x1
  40777c:	ret
  407780:	sub	sp, sp, #0x30
  407784:	stp	x29, x30, [sp, #32]
  407788:	add	x29, sp, #0x20
  40778c:	cbz	x0, 4077a0 <__fxstatat@plt+0x4bf0>
  407790:	mov	w1, wzr
  407794:	bl	40da50 <__fxstatat@plt+0xaea0>
  407798:	bic	w0, w0, w0, asr #31
  40779c:	b	4077c4 <__fxstatat@plt+0x4c14>
  4077a0:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x54b8>
  4077a4:	mov	x4, x1
  4077a8:	add	x3, x3, #0x850
  4077ac:	add	x0, sp, #0x8
  4077b0:	mov	w1, #0x1                   	// #1
  4077b4:	mov	w2, #0x15                  	// #21
  4077b8:	bl	402560 <__sprintf_chk@plt>
  4077bc:	add	x0, sp, #0x8
  4077c0:	bl	402550 <strlen@plt>
  4077c4:	ldp	x29, x30, [sp, #32]
  4077c8:	add	sp, sp, #0x30
  4077cc:	ret
  4077d0:	ldr	w8, [x0, #152]
  4077d4:	cmp	w8, #0x3
  4077d8:	cset	w9, eq  // eq = none
  4077dc:	cmp	w8, #0x9
  4077e0:	cset	w8, eq  // eq = none
  4077e4:	orr	w0, w9, w8
  4077e8:	ret
  4077ec:	stp	x29, x30, [sp, #-16]!
  4077f0:	mov	x29, sp
  4077f4:	bl	40afa0 <__fxstatat@plt+0x83f0>
  4077f8:	bl	407808 <__fxstatat@plt+0x4c58>
  4077fc:	and	w0, w0, #0x1
  407800:	ldp	x29, x30, [sp], #16
  407804:	ret
  407808:	ldrb	w8, [x0]
  40780c:	cmp	w8, #0x2e
  407810:	b.ne	407840 <__fxstatat@plt+0x4c90>  // b.any
  407814:	ldrb	w8, [x0, #1]
  407818:	mov	w9, #0x1                   	// #1
  40781c:	cmp	w8, #0x2e
  407820:	cinc	x8, x9, eq  // eq = none
  407824:	ldrb	w8, [x0, x8]
  407828:	cmp	w8, #0x0
  40782c:	cset	w9, eq  // eq = none
  407830:	cmp	w8, #0x2f
  407834:	cset	w8, eq  // eq = none
  407838:	orr	w0, w9, w8
  40783c:	ret
  407840:	mov	w0, wzr
  407844:	ret
  407848:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40784c:	ldr	x8, [x10, #1888]
  407850:	cbz	x8, 407880 <__fxstatat@plt+0x4cd0>
  407854:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  407858:	adrp	x9, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40785c:	ldr	x8, [x8, #1880]
  407860:	ldr	x9, [x9, #1424]
  407864:	ldr	x10, [x10, #1888]
  407868:	mov	x11, xzr
  40786c:	str	x8, [x9, x11, lsl #3]
  407870:	add	x11, x11, #0x1
  407874:	cmp	x11, x10
  407878:	add	x8, x8, #0xb8
  40787c:	b.cc	40786c <__fxstatat@plt+0x4cbc>  // b.lo, b.ul, b.last
  407880:	ret
  407884:	stp	x29, x30, [sp, #-16]!
  407888:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  40788c:	add	x2, x2, #0x6ec
  407890:	mov	x29, sp
  407894:	bl	4086d0 <__fxstatat@plt+0x5b20>
  407898:	ldp	x29, x30, [sp], #16
  40789c:	ret
  4078a0:	stp	x29, x30, [sp, #-48]!
  4078a4:	stp	x22, x21, [sp, #16]
  4078a8:	stp	x20, x19, [sp, #32]
  4078ac:	mov	x29, sp
  4078b0:	mov	x19, x1
  4078b4:	mov	x20, x0
  4078b8:	bl	408720 <__fxstatat@plt+0x5b70>
  4078bc:	mov	w21, w0
  4078c0:	and	w22, w0, #0x1
  4078c4:	mov	x0, x19
  4078c8:	bl	408720 <__fxstatat@plt+0x5b70>
  4078cc:	orn	w9, w0, w21
  4078d0:	and	w8, w0, #0x1
  4078d4:	mov	w10, #0x1                   	// #1
  4078d8:	tst	w9, #0x1
  4078dc:	cneg	w0, w10, eq  // eq = none
  4078e0:	cmp	w22, w8
  4078e4:	b.ne	4078fc <__fxstatat@plt+0x4d4c>  // b.any
  4078e8:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  4078ec:	add	x2, x2, #0x6ec
  4078f0:	mov	x0, x20
  4078f4:	mov	x1, x19
  4078f8:	bl	4086d0 <__fxstatat@plt+0x5b20>
  4078fc:	ldp	x20, x19, [sp, #32]
  407900:	ldp	x22, x21, [sp, #16]
  407904:	ldp	x29, x30, [sp], #48
  407908:	ret
  40790c:	stp	x29, x30, [sp, #-16]!
  407910:	mov	x8, x0
  407914:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  407918:	add	x2, x2, #0x6ec
  40791c:	mov	x0, x1
  407920:	mov	x1, x8
  407924:	mov	x29, sp
  407928:	bl	4086d0 <__fxstatat@plt+0x5b20>
  40792c:	ldp	x29, x30, [sp], #16
  407930:	ret
  407934:	stp	x29, x30, [sp, #-48]!
  407938:	stp	x22, x21, [sp, #16]
  40793c:	stp	x20, x19, [sp, #32]
  407940:	mov	x29, sp
  407944:	mov	x20, x1
  407948:	mov	x19, x0
  40794c:	bl	408720 <__fxstatat@plt+0x5b70>
  407950:	mov	w21, w0
  407954:	and	w22, w0, #0x1
  407958:	mov	x0, x20
  40795c:	bl	408720 <__fxstatat@plt+0x5b70>
  407960:	orn	w9, w0, w21
  407964:	and	w8, w0, #0x1
  407968:	mov	w10, #0x1                   	// #1
  40796c:	tst	w9, #0x1
  407970:	cneg	w0, w10, eq  // eq = none
  407974:	cmp	w22, w8
  407978:	b.ne	407990 <__fxstatat@plt+0x4de0>  // b.any
  40797c:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  407980:	add	x2, x2, #0x6ec
  407984:	mov	x0, x20
  407988:	mov	x1, x19
  40798c:	bl	4086d0 <__fxstatat@plt+0x5b20>
  407990:	ldp	x20, x19, [sp, #32]
  407994:	ldp	x22, x21, [sp, #16]
  407998:	ldp	x29, x30, [sp], #48
  40799c:	ret
  4079a0:	stp	x29, x30, [sp, #-16]!
  4079a4:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  4079a8:	add	x2, x2, #0x950
  4079ac:	mov	x29, sp
  4079b0:	bl	4086d0 <__fxstatat@plt+0x5b20>
  4079b4:	ldp	x29, x30, [sp], #16
  4079b8:	ret
  4079bc:	stp	x29, x30, [sp, #-48]!
  4079c0:	stp	x22, x21, [sp, #16]
  4079c4:	stp	x20, x19, [sp, #32]
  4079c8:	mov	x29, sp
  4079cc:	mov	x19, x1
  4079d0:	mov	x20, x0
  4079d4:	bl	408720 <__fxstatat@plt+0x5b70>
  4079d8:	mov	w21, w0
  4079dc:	and	w22, w0, #0x1
  4079e0:	mov	x0, x19
  4079e4:	bl	408720 <__fxstatat@plt+0x5b70>
  4079e8:	orn	w9, w0, w21
  4079ec:	and	w8, w0, #0x1
  4079f0:	mov	w10, #0x1                   	// #1
  4079f4:	tst	w9, #0x1
  4079f8:	cneg	w0, w10, eq  // eq = none
  4079fc:	cmp	w22, w8
  407a00:	b.ne	407a18 <__fxstatat@plt+0x4e68>  // b.any
  407a04:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  407a08:	add	x2, x2, #0x950
  407a0c:	mov	x0, x20
  407a10:	mov	x1, x19
  407a14:	bl	4086d0 <__fxstatat@plt+0x5b20>
  407a18:	ldp	x20, x19, [sp, #32]
  407a1c:	ldp	x22, x21, [sp, #16]
  407a20:	ldp	x29, x30, [sp], #48
  407a24:	ret
  407a28:	stp	x29, x30, [sp, #-16]!
  407a2c:	mov	x8, x0
  407a30:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  407a34:	add	x2, x2, #0x950
  407a38:	mov	x0, x1
  407a3c:	mov	x1, x8
  407a40:	mov	x29, sp
  407a44:	bl	4086d0 <__fxstatat@plt+0x5b20>
  407a48:	ldp	x29, x30, [sp], #16
  407a4c:	ret
  407a50:	stp	x29, x30, [sp, #-48]!
  407a54:	stp	x22, x21, [sp, #16]
  407a58:	stp	x20, x19, [sp, #32]
  407a5c:	mov	x29, sp
  407a60:	mov	x20, x1
  407a64:	mov	x19, x0
  407a68:	bl	408720 <__fxstatat@plt+0x5b70>
  407a6c:	mov	w21, w0
  407a70:	and	w22, w0, #0x1
  407a74:	mov	x0, x20
  407a78:	bl	408720 <__fxstatat@plt+0x5b70>
  407a7c:	orn	w9, w0, w21
  407a80:	and	w8, w0, #0x1
  407a84:	mov	w10, #0x1                   	// #1
  407a88:	tst	w9, #0x1
  407a8c:	cneg	w0, w10, eq  // eq = none
  407a90:	cmp	w22, w8
  407a94:	b.ne	407aac <__fxstatat@plt+0x4efc>  // b.any
  407a98:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  407a9c:	add	x2, x2, #0x950
  407aa0:	mov	x0, x20
  407aa4:	mov	x1, x19
  407aa8:	bl	4086d0 <__fxstatat@plt+0x5b20>
  407aac:	ldp	x20, x19, [sp, #32]
  407ab0:	ldp	x22, x21, [sp, #16]
  407ab4:	ldp	x29, x30, [sp], #48
  407ab8:	ret
  407abc:	stp	x29, x30, [sp, #-16]!
  407ac0:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  407ac4:	add	x2, x2, #0x6ec
  407ac8:	mov	x29, sp
  407acc:	bl	408754 <__fxstatat@plt+0x5ba4>
  407ad0:	ldp	x29, x30, [sp], #16
  407ad4:	ret
  407ad8:	stp	x29, x30, [sp, #-48]!
  407adc:	stp	x22, x21, [sp, #16]
  407ae0:	stp	x20, x19, [sp, #32]
  407ae4:	mov	x29, sp
  407ae8:	mov	x19, x1
  407aec:	mov	x20, x0
  407af0:	bl	408720 <__fxstatat@plt+0x5b70>
  407af4:	mov	w21, w0
  407af8:	and	w22, w0, #0x1
  407afc:	mov	x0, x19
  407b00:	bl	408720 <__fxstatat@plt+0x5b70>
  407b04:	orn	w9, w0, w21
  407b08:	and	w8, w0, #0x1
  407b0c:	mov	w10, #0x1                   	// #1
  407b10:	tst	w9, #0x1
  407b14:	cneg	w0, w10, eq  // eq = none
  407b18:	cmp	w22, w8
  407b1c:	b.ne	407b34 <__fxstatat@plt+0x4f84>  // b.any
  407b20:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  407b24:	add	x2, x2, #0x6ec
  407b28:	mov	x0, x20
  407b2c:	mov	x1, x19
  407b30:	bl	408754 <__fxstatat@plt+0x5ba4>
  407b34:	ldp	x20, x19, [sp, #32]
  407b38:	ldp	x22, x21, [sp, #16]
  407b3c:	ldp	x29, x30, [sp], #48
  407b40:	ret
  407b44:	stp	x29, x30, [sp, #-16]!
  407b48:	mov	x8, x0
  407b4c:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  407b50:	add	x2, x2, #0x6ec
  407b54:	mov	x0, x1
  407b58:	mov	x1, x8
  407b5c:	mov	x29, sp
  407b60:	bl	408754 <__fxstatat@plt+0x5ba4>
  407b64:	ldp	x29, x30, [sp], #16
  407b68:	ret
  407b6c:	stp	x29, x30, [sp, #-48]!
  407b70:	stp	x22, x21, [sp, #16]
  407b74:	stp	x20, x19, [sp, #32]
  407b78:	mov	x29, sp
  407b7c:	mov	x20, x1
  407b80:	mov	x19, x0
  407b84:	bl	408720 <__fxstatat@plt+0x5b70>
  407b88:	mov	w21, w0
  407b8c:	and	w22, w0, #0x1
  407b90:	mov	x0, x20
  407b94:	bl	408720 <__fxstatat@plt+0x5b70>
  407b98:	orn	w9, w0, w21
  407b9c:	and	w8, w0, #0x1
  407ba0:	mov	w10, #0x1                   	// #1
  407ba4:	tst	w9, #0x1
  407ba8:	cneg	w0, w10, eq  // eq = none
  407bac:	cmp	w22, w8
  407bb0:	b.ne	407bc8 <__fxstatat@plt+0x5018>  // b.any
  407bb4:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  407bb8:	add	x2, x2, #0x6ec
  407bbc:	mov	x0, x20
  407bc0:	mov	x1, x19
  407bc4:	bl	408754 <__fxstatat@plt+0x5ba4>
  407bc8:	ldp	x20, x19, [sp, #32]
  407bcc:	ldp	x22, x21, [sp, #16]
  407bd0:	ldp	x29, x30, [sp], #48
  407bd4:	ret
  407bd8:	stp	x29, x30, [sp, #-16]!
  407bdc:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  407be0:	add	x2, x2, #0x950
  407be4:	mov	x29, sp
  407be8:	bl	408754 <__fxstatat@plt+0x5ba4>
  407bec:	ldp	x29, x30, [sp], #16
  407bf0:	ret
  407bf4:	stp	x29, x30, [sp, #-48]!
  407bf8:	stp	x22, x21, [sp, #16]
  407bfc:	stp	x20, x19, [sp, #32]
  407c00:	mov	x29, sp
  407c04:	mov	x19, x1
  407c08:	mov	x20, x0
  407c0c:	bl	408720 <__fxstatat@plt+0x5b70>
  407c10:	mov	w21, w0
  407c14:	and	w22, w0, #0x1
  407c18:	mov	x0, x19
  407c1c:	bl	408720 <__fxstatat@plt+0x5b70>
  407c20:	orn	w9, w0, w21
  407c24:	and	w8, w0, #0x1
  407c28:	mov	w10, #0x1                   	// #1
  407c2c:	tst	w9, #0x1
  407c30:	cneg	w0, w10, eq  // eq = none
  407c34:	cmp	w22, w8
  407c38:	b.ne	407c50 <__fxstatat@plt+0x50a0>  // b.any
  407c3c:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  407c40:	add	x2, x2, #0x950
  407c44:	mov	x0, x20
  407c48:	mov	x1, x19
  407c4c:	bl	408754 <__fxstatat@plt+0x5ba4>
  407c50:	ldp	x20, x19, [sp, #32]
  407c54:	ldp	x22, x21, [sp, #16]
  407c58:	ldp	x29, x30, [sp], #48
  407c5c:	ret
  407c60:	stp	x29, x30, [sp, #-16]!
  407c64:	mov	x8, x0
  407c68:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  407c6c:	add	x2, x2, #0x950
  407c70:	mov	x0, x1
  407c74:	mov	x1, x8
  407c78:	mov	x29, sp
  407c7c:	bl	408754 <__fxstatat@plt+0x5ba4>
  407c80:	ldp	x29, x30, [sp], #16
  407c84:	ret
  407c88:	stp	x29, x30, [sp, #-48]!
  407c8c:	stp	x22, x21, [sp, #16]
  407c90:	stp	x20, x19, [sp, #32]
  407c94:	mov	x29, sp
  407c98:	mov	x20, x1
  407c9c:	mov	x19, x0
  407ca0:	bl	408720 <__fxstatat@plt+0x5b70>
  407ca4:	mov	w21, w0
  407ca8:	and	w22, w0, #0x1
  407cac:	mov	x0, x20
  407cb0:	bl	408720 <__fxstatat@plt+0x5b70>
  407cb4:	orn	w9, w0, w21
  407cb8:	and	w8, w0, #0x1
  407cbc:	mov	w10, #0x1                   	// #1
  407cc0:	tst	w9, #0x1
  407cc4:	cneg	w0, w10, eq  // eq = none
  407cc8:	cmp	w22, w8
  407ccc:	b.ne	407ce4 <__fxstatat@plt+0x5134>  // b.any
  407cd0:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  407cd4:	add	x2, x2, #0x950
  407cd8:	mov	x0, x20
  407cdc:	mov	x1, x19
  407ce0:	bl	408754 <__fxstatat@plt+0x5ba4>
  407ce4:	ldp	x20, x19, [sp, #32]
  407ce8:	ldp	x22, x21, [sp, #16]
  407cec:	ldp	x29, x30, [sp], #48
  407cf0:	ret
  407cf4:	stp	x29, x30, [sp, #-16]!
  407cf8:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  407cfc:	add	x2, x2, #0x6ec
  407d00:	mov	x29, sp
  407d04:	bl	4087d0 <__fxstatat@plt+0x5c20>
  407d08:	ldp	x29, x30, [sp], #16
  407d0c:	ret
  407d10:	stp	x29, x30, [sp, #-48]!
  407d14:	stp	x22, x21, [sp, #16]
  407d18:	stp	x20, x19, [sp, #32]
  407d1c:	mov	x29, sp
  407d20:	mov	x19, x1
  407d24:	mov	x20, x0
  407d28:	bl	408720 <__fxstatat@plt+0x5b70>
  407d2c:	mov	w21, w0
  407d30:	and	w22, w0, #0x1
  407d34:	mov	x0, x19
  407d38:	bl	408720 <__fxstatat@plt+0x5b70>
  407d3c:	orn	w9, w0, w21
  407d40:	and	w8, w0, #0x1
  407d44:	mov	w10, #0x1                   	// #1
  407d48:	tst	w9, #0x1
  407d4c:	cneg	w0, w10, eq  // eq = none
  407d50:	cmp	w22, w8
  407d54:	b.ne	407d6c <__fxstatat@plt+0x51bc>  // b.any
  407d58:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  407d5c:	add	x2, x2, #0x6ec
  407d60:	mov	x0, x20
  407d64:	mov	x1, x19
  407d68:	bl	4087d0 <__fxstatat@plt+0x5c20>
  407d6c:	ldp	x20, x19, [sp, #32]
  407d70:	ldp	x22, x21, [sp, #16]
  407d74:	ldp	x29, x30, [sp], #48
  407d78:	ret
  407d7c:	stp	x29, x30, [sp, #-16]!
  407d80:	mov	x8, x0
  407d84:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  407d88:	add	x2, x2, #0x6ec
  407d8c:	mov	x0, x1
  407d90:	mov	x1, x8
  407d94:	mov	x29, sp
  407d98:	bl	4087d0 <__fxstatat@plt+0x5c20>
  407d9c:	ldp	x29, x30, [sp], #16
  407da0:	ret
  407da4:	stp	x29, x30, [sp, #-48]!
  407da8:	stp	x22, x21, [sp, #16]
  407dac:	stp	x20, x19, [sp, #32]
  407db0:	mov	x29, sp
  407db4:	mov	x20, x1
  407db8:	mov	x19, x0
  407dbc:	bl	408720 <__fxstatat@plt+0x5b70>
  407dc0:	mov	w21, w0
  407dc4:	and	w22, w0, #0x1
  407dc8:	mov	x0, x20
  407dcc:	bl	408720 <__fxstatat@plt+0x5b70>
  407dd0:	orn	w9, w0, w21
  407dd4:	and	w8, w0, #0x1
  407dd8:	mov	w10, #0x1                   	// #1
  407ddc:	tst	w9, #0x1
  407de0:	cneg	w0, w10, eq  // eq = none
  407de4:	cmp	w22, w8
  407de8:	b.ne	407e00 <__fxstatat@plt+0x5250>  // b.any
  407dec:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  407df0:	add	x2, x2, #0x6ec
  407df4:	mov	x0, x20
  407df8:	mov	x1, x19
  407dfc:	bl	4087d0 <__fxstatat@plt+0x5c20>
  407e00:	ldp	x20, x19, [sp, #32]
  407e04:	ldp	x22, x21, [sp, #16]
  407e08:	ldp	x29, x30, [sp], #48
  407e0c:	ret
  407e10:	stp	x29, x30, [sp, #-16]!
  407e14:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  407e18:	add	x2, x2, #0x950
  407e1c:	mov	x29, sp
  407e20:	bl	4087d0 <__fxstatat@plt+0x5c20>
  407e24:	ldp	x29, x30, [sp], #16
  407e28:	ret
  407e2c:	stp	x29, x30, [sp, #-48]!
  407e30:	stp	x22, x21, [sp, #16]
  407e34:	stp	x20, x19, [sp, #32]
  407e38:	mov	x29, sp
  407e3c:	mov	x19, x1
  407e40:	mov	x20, x0
  407e44:	bl	408720 <__fxstatat@plt+0x5b70>
  407e48:	mov	w21, w0
  407e4c:	and	w22, w0, #0x1
  407e50:	mov	x0, x19
  407e54:	bl	408720 <__fxstatat@plt+0x5b70>
  407e58:	orn	w9, w0, w21
  407e5c:	and	w8, w0, #0x1
  407e60:	mov	w10, #0x1                   	// #1
  407e64:	tst	w9, #0x1
  407e68:	cneg	w0, w10, eq  // eq = none
  407e6c:	cmp	w22, w8
  407e70:	b.ne	407e88 <__fxstatat@plt+0x52d8>  // b.any
  407e74:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  407e78:	add	x2, x2, #0x950
  407e7c:	mov	x0, x20
  407e80:	mov	x1, x19
  407e84:	bl	4087d0 <__fxstatat@plt+0x5c20>
  407e88:	ldp	x20, x19, [sp, #32]
  407e8c:	ldp	x22, x21, [sp, #16]
  407e90:	ldp	x29, x30, [sp], #48
  407e94:	ret
  407e98:	stp	x29, x30, [sp, #-16]!
  407e9c:	mov	x8, x0
  407ea0:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  407ea4:	add	x2, x2, #0x950
  407ea8:	mov	x0, x1
  407eac:	mov	x1, x8
  407eb0:	mov	x29, sp
  407eb4:	bl	4087d0 <__fxstatat@plt+0x5c20>
  407eb8:	ldp	x29, x30, [sp], #16
  407ebc:	ret
  407ec0:	stp	x29, x30, [sp, #-48]!
  407ec4:	stp	x22, x21, [sp, #16]
  407ec8:	stp	x20, x19, [sp, #32]
  407ecc:	mov	x29, sp
  407ed0:	mov	x20, x1
  407ed4:	mov	x19, x0
  407ed8:	bl	408720 <__fxstatat@plt+0x5b70>
  407edc:	mov	w21, w0
  407ee0:	and	w22, w0, #0x1
  407ee4:	mov	x0, x20
  407ee8:	bl	408720 <__fxstatat@plt+0x5b70>
  407eec:	orn	w9, w0, w21
  407ef0:	and	w8, w0, #0x1
  407ef4:	mov	w10, #0x1                   	// #1
  407ef8:	tst	w9, #0x1
  407efc:	cneg	w0, w10, eq  // eq = none
  407f00:	cmp	w22, w8
  407f04:	b.ne	407f1c <__fxstatat@plt+0x536c>  // b.any
  407f08:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  407f0c:	add	x2, x2, #0x950
  407f10:	mov	x0, x20
  407f14:	mov	x1, x19
  407f18:	bl	4087d0 <__fxstatat@plt+0x5c20>
  407f1c:	ldp	x20, x19, [sp, #32]
  407f20:	ldp	x22, x21, [sp, #16]
  407f24:	ldp	x29, x30, [sp], #48
  407f28:	ret
  407f2c:	stp	x29, x30, [sp, #-16]!
  407f30:	mov	x29, sp
  407f34:	bl	40880c <__fxstatat@plt+0x5c5c>
  407f38:	ldp	x29, x30, [sp], #16
  407f3c:	ret
  407f40:	stp	x29, x30, [sp, #-48]!
  407f44:	stp	x22, x21, [sp, #16]
  407f48:	stp	x20, x19, [sp, #32]
  407f4c:	mov	x29, sp
  407f50:	mov	x19, x1
  407f54:	mov	x20, x0
  407f58:	bl	408720 <__fxstatat@plt+0x5b70>
  407f5c:	mov	w21, w0
  407f60:	and	w22, w0, #0x1
  407f64:	mov	x0, x19
  407f68:	bl	408720 <__fxstatat@plt+0x5b70>
  407f6c:	orn	w9, w0, w21
  407f70:	and	w8, w0, #0x1
  407f74:	mov	w10, #0x1                   	// #1
  407f78:	tst	w9, #0x1
  407f7c:	cneg	w0, w10, eq  // eq = none
  407f80:	cmp	w22, w8
  407f84:	b.ne	407f94 <__fxstatat@plt+0x53e4>  // b.any
  407f88:	mov	x0, x20
  407f8c:	mov	x1, x19
  407f90:	bl	40880c <__fxstatat@plt+0x5c5c>
  407f94:	ldp	x20, x19, [sp, #32]
  407f98:	ldp	x22, x21, [sp, #16]
  407f9c:	ldp	x29, x30, [sp], #48
  407fa0:	ret
  407fa4:	stp	x29, x30, [sp, #-16]!
  407fa8:	mov	x8, x0
  407fac:	mov	x0, x1
  407fb0:	mov	x1, x8
  407fb4:	mov	x29, sp
  407fb8:	bl	40880c <__fxstatat@plt+0x5c5c>
  407fbc:	ldp	x29, x30, [sp], #16
  407fc0:	ret
  407fc4:	stp	x29, x30, [sp, #-48]!
  407fc8:	stp	x22, x21, [sp, #16]
  407fcc:	stp	x20, x19, [sp, #32]
  407fd0:	mov	x29, sp
  407fd4:	mov	x20, x1
  407fd8:	mov	x19, x0
  407fdc:	bl	408720 <__fxstatat@plt+0x5b70>
  407fe0:	mov	w21, w0
  407fe4:	and	w22, w0, #0x1
  407fe8:	mov	x0, x20
  407fec:	bl	408720 <__fxstatat@plt+0x5b70>
  407ff0:	orn	w9, w0, w21
  407ff4:	and	w8, w0, #0x1
  407ff8:	mov	w10, #0x1                   	// #1
  407ffc:	tst	w9, #0x1
  408000:	cneg	w0, w10, eq  // eq = none
  408004:	cmp	w22, w8
  408008:	b.ne	408018 <__fxstatat@plt+0x5468>  // b.any
  40800c:	mov	x0, x20
  408010:	mov	x1, x19
  408014:	bl	40880c <__fxstatat@plt+0x5c5c>
  408018:	ldp	x20, x19, [sp, #32]
  40801c:	ldp	x22, x21, [sp, #16]
  408020:	ldp	x29, x30, [sp], #48
  408024:	ret
  408028:	stp	x29, x30, [sp, #-16]!
  40802c:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  408030:	add	x2, x2, #0x6ec
  408034:	mov	x29, sp
  408038:	bl	408828 <__fxstatat@plt+0x5c78>
  40803c:	ldp	x29, x30, [sp], #16
  408040:	ret
  408044:	stp	x29, x30, [sp, #-48]!
  408048:	stp	x22, x21, [sp, #16]
  40804c:	stp	x20, x19, [sp, #32]
  408050:	mov	x29, sp
  408054:	mov	x19, x1
  408058:	mov	x20, x0
  40805c:	bl	408720 <__fxstatat@plt+0x5b70>
  408060:	mov	w21, w0
  408064:	and	w22, w0, #0x1
  408068:	mov	x0, x19
  40806c:	bl	408720 <__fxstatat@plt+0x5b70>
  408070:	orn	w9, w0, w21
  408074:	and	w8, w0, #0x1
  408078:	mov	w10, #0x1                   	// #1
  40807c:	tst	w9, #0x1
  408080:	cneg	w0, w10, eq  // eq = none
  408084:	cmp	w22, w8
  408088:	b.ne	4080a0 <__fxstatat@plt+0x54f0>  // b.any
  40808c:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  408090:	add	x2, x2, #0x6ec
  408094:	mov	x0, x20
  408098:	mov	x1, x19
  40809c:	bl	408828 <__fxstatat@plt+0x5c78>
  4080a0:	ldp	x20, x19, [sp, #32]
  4080a4:	ldp	x22, x21, [sp, #16]
  4080a8:	ldp	x29, x30, [sp], #48
  4080ac:	ret
  4080b0:	stp	x29, x30, [sp, #-16]!
  4080b4:	mov	x8, x0
  4080b8:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  4080bc:	add	x2, x2, #0x6ec
  4080c0:	mov	x0, x1
  4080c4:	mov	x1, x8
  4080c8:	mov	x29, sp
  4080cc:	bl	408828 <__fxstatat@plt+0x5c78>
  4080d0:	ldp	x29, x30, [sp], #16
  4080d4:	ret
  4080d8:	stp	x29, x30, [sp, #-48]!
  4080dc:	stp	x22, x21, [sp, #16]
  4080e0:	stp	x20, x19, [sp, #32]
  4080e4:	mov	x29, sp
  4080e8:	mov	x20, x1
  4080ec:	mov	x19, x0
  4080f0:	bl	408720 <__fxstatat@plt+0x5b70>
  4080f4:	mov	w21, w0
  4080f8:	and	w22, w0, #0x1
  4080fc:	mov	x0, x20
  408100:	bl	408720 <__fxstatat@plt+0x5b70>
  408104:	orn	w9, w0, w21
  408108:	and	w8, w0, #0x1
  40810c:	mov	w10, #0x1                   	// #1
  408110:	tst	w9, #0x1
  408114:	cneg	w0, w10, eq  // eq = none
  408118:	cmp	w22, w8
  40811c:	b.ne	408134 <__fxstatat@plt+0x5584>  // b.any
  408120:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  408124:	add	x2, x2, #0x6ec
  408128:	mov	x0, x20
  40812c:	mov	x1, x19
  408130:	bl	408828 <__fxstatat@plt+0x5c78>
  408134:	ldp	x20, x19, [sp, #32]
  408138:	ldp	x22, x21, [sp, #16]
  40813c:	ldp	x29, x30, [sp], #48
  408140:	ret
  408144:	stp	x29, x30, [sp, #-16]!
  408148:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  40814c:	add	x2, x2, #0x950
  408150:	mov	x29, sp
  408154:	bl	408828 <__fxstatat@plt+0x5c78>
  408158:	ldp	x29, x30, [sp], #16
  40815c:	ret
  408160:	stp	x29, x30, [sp, #-48]!
  408164:	stp	x22, x21, [sp, #16]
  408168:	stp	x20, x19, [sp, #32]
  40816c:	mov	x29, sp
  408170:	mov	x19, x1
  408174:	mov	x20, x0
  408178:	bl	408720 <__fxstatat@plt+0x5b70>
  40817c:	mov	w21, w0
  408180:	and	w22, w0, #0x1
  408184:	mov	x0, x19
  408188:	bl	408720 <__fxstatat@plt+0x5b70>
  40818c:	orn	w9, w0, w21
  408190:	and	w8, w0, #0x1
  408194:	mov	w10, #0x1                   	// #1
  408198:	tst	w9, #0x1
  40819c:	cneg	w0, w10, eq  // eq = none
  4081a0:	cmp	w22, w8
  4081a4:	b.ne	4081bc <__fxstatat@plt+0x560c>  // b.any
  4081a8:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  4081ac:	add	x2, x2, #0x950
  4081b0:	mov	x0, x20
  4081b4:	mov	x1, x19
  4081b8:	bl	408828 <__fxstatat@plt+0x5c78>
  4081bc:	ldp	x20, x19, [sp, #32]
  4081c0:	ldp	x22, x21, [sp, #16]
  4081c4:	ldp	x29, x30, [sp], #48
  4081c8:	ret
  4081cc:	stp	x29, x30, [sp, #-16]!
  4081d0:	mov	x8, x0
  4081d4:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  4081d8:	add	x2, x2, #0x950
  4081dc:	mov	x0, x1
  4081e0:	mov	x1, x8
  4081e4:	mov	x29, sp
  4081e8:	bl	408828 <__fxstatat@plt+0x5c78>
  4081ec:	ldp	x29, x30, [sp], #16
  4081f0:	ret
  4081f4:	stp	x29, x30, [sp, #-48]!
  4081f8:	stp	x22, x21, [sp, #16]
  4081fc:	stp	x20, x19, [sp, #32]
  408200:	mov	x29, sp
  408204:	mov	x20, x1
  408208:	mov	x19, x0
  40820c:	bl	408720 <__fxstatat@plt+0x5b70>
  408210:	mov	w21, w0
  408214:	and	w22, w0, #0x1
  408218:	mov	x0, x20
  40821c:	bl	408720 <__fxstatat@plt+0x5b70>
  408220:	orn	w9, w0, w21
  408224:	and	w8, w0, #0x1
  408228:	mov	w10, #0x1                   	// #1
  40822c:	tst	w9, #0x1
  408230:	cneg	w0, w10, eq  // eq = none
  408234:	cmp	w22, w8
  408238:	b.ne	408250 <__fxstatat@plt+0x56a0>  // b.any
  40823c:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  408240:	add	x2, x2, #0x950
  408244:	mov	x0, x20
  408248:	mov	x1, x19
  40824c:	bl	408828 <__fxstatat@plt+0x5c78>
  408250:	ldp	x20, x19, [sp, #32]
  408254:	ldp	x22, x21, [sp, #16]
  408258:	ldp	x29, x30, [sp], #48
  40825c:	ret
  408260:	stp	x29, x30, [sp, #-16]!
  408264:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  408268:	add	x2, x2, #0x6ec
  40826c:	mov	x29, sp
  408270:	bl	408898 <__fxstatat@plt+0x5ce8>
  408274:	ldp	x29, x30, [sp], #16
  408278:	ret
  40827c:	stp	x29, x30, [sp, #-48]!
  408280:	stp	x22, x21, [sp, #16]
  408284:	stp	x20, x19, [sp, #32]
  408288:	mov	x29, sp
  40828c:	mov	x19, x1
  408290:	mov	x20, x0
  408294:	bl	408720 <__fxstatat@plt+0x5b70>
  408298:	mov	w21, w0
  40829c:	and	w22, w0, #0x1
  4082a0:	mov	x0, x19
  4082a4:	bl	408720 <__fxstatat@plt+0x5b70>
  4082a8:	orn	w9, w0, w21
  4082ac:	and	w8, w0, #0x1
  4082b0:	mov	w10, #0x1                   	// #1
  4082b4:	tst	w9, #0x1
  4082b8:	cneg	w0, w10, eq  // eq = none
  4082bc:	cmp	w22, w8
  4082c0:	b.ne	4082d8 <__fxstatat@plt+0x5728>  // b.any
  4082c4:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  4082c8:	add	x2, x2, #0x6ec
  4082cc:	mov	x0, x20
  4082d0:	mov	x1, x19
  4082d4:	bl	408898 <__fxstatat@plt+0x5ce8>
  4082d8:	ldp	x20, x19, [sp, #32]
  4082dc:	ldp	x22, x21, [sp, #16]
  4082e0:	ldp	x29, x30, [sp], #48
  4082e4:	ret
  4082e8:	stp	x29, x30, [sp, #-16]!
  4082ec:	mov	x8, x0
  4082f0:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  4082f4:	add	x2, x2, #0x6ec
  4082f8:	mov	x0, x1
  4082fc:	mov	x1, x8
  408300:	mov	x29, sp
  408304:	bl	408898 <__fxstatat@plt+0x5ce8>
  408308:	ldp	x29, x30, [sp], #16
  40830c:	ret
  408310:	stp	x29, x30, [sp, #-48]!
  408314:	stp	x22, x21, [sp, #16]
  408318:	stp	x20, x19, [sp, #32]
  40831c:	mov	x29, sp
  408320:	mov	x20, x1
  408324:	mov	x19, x0
  408328:	bl	408720 <__fxstatat@plt+0x5b70>
  40832c:	mov	w21, w0
  408330:	and	w22, w0, #0x1
  408334:	mov	x0, x20
  408338:	bl	408720 <__fxstatat@plt+0x5b70>
  40833c:	orn	w9, w0, w21
  408340:	and	w8, w0, #0x1
  408344:	mov	w10, #0x1                   	// #1
  408348:	tst	w9, #0x1
  40834c:	cneg	w0, w10, eq  // eq = none
  408350:	cmp	w22, w8
  408354:	b.ne	40836c <__fxstatat@plt+0x57bc>  // b.any
  408358:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  40835c:	add	x2, x2, #0x6ec
  408360:	mov	x0, x20
  408364:	mov	x1, x19
  408368:	bl	408898 <__fxstatat@plt+0x5ce8>
  40836c:	ldp	x20, x19, [sp, #32]
  408370:	ldp	x22, x21, [sp, #16]
  408374:	ldp	x29, x30, [sp], #48
  408378:	ret
  40837c:	stp	x29, x30, [sp, #-16]!
  408380:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  408384:	add	x2, x2, #0x950
  408388:	mov	x29, sp
  40838c:	bl	408898 <__fxstatat@plt+0x5ce8>
  408390:	ldp	x29, x30, [sp], #16
  408394:	ret
  408398:	stp	x29, x30, [sp, #-48]!
  40839c:	stp	x22, x21, [sp, #16]
  4083a0:	stp	x20, x19, [sp, #32]
  4083a4:	mov	x29, sp
  4083a8:	mov	x19, x1
  4083ac:	mov	x20, x0
  4083b0:	bl	408720 <__fxstatat@plt+0x5b70>
  4083b4:	mov	w21, w0
  4083b8:	and	w22, w0, #0x1
  4083bc:	mov	x0, x19
  4083c0:	bl	408720 <__fxstatat@plt+0x5b70>
  4083c4:	orn	w9, w0, w21
  4083c8:	and	w8, w0, #0x1
  4083cc:	mov	w10, #0x1                   	// #1
  4083d0:	tst	w9, #0x1
  4083d4:	cneg	w0, w10, eq  // eq = none
  4083d8:	cmp	w22, w8
  4083dc:	b.ne	4083f4 <__fxstatat@plt+0x5844>  // b.any
  4083e0:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  4083e4:	add	x2, x2, #0x950
  4083e8:	mov	x0, x20
  4083ec:	mov	x1, x19
  4083f0:	bl	408898 <__fxstatat@plt+0x5ce8>
  4083f4:	ldp	x20, x19, [sp, #32]
  4083f8:	ldp	x22, x21, [sp, #16]
  4083fc:	ldp	x29, x30, [sp], #48
  408400:	ret
  408404:	stp	x29, x30, [sp, #-16]!
  408408:	mov	x8, x0
  40840c:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  408410:	add	x2, x2, #0x950
  408414:	mov	x0, x1
  408418:	mov	x1, x8
  40841c:	mov	x29, sp
  408420:	bl	408898 <__fxstatat@plt+0x5ce8>
  408424:	ldp	x29, x30, [sp], #16
  408428:	ret
  40842c:	stp	x29, x30, [sp, #-48]!
  408430:	stp	x22, x21, [sp, #16]
  408434:	stp	x20, x19, [sp, #32]
  408438:	mov	x29, sp
  40843c:	mov	x20, x1
  408440:	mov	x19, x0
  408444:	bl	408720 <__fxstatat@plt+0x5b70>
  408448:	mov	w21, w0
  40844c:	and	w22, w0, #0x1
  408450:	mov	x0, x20
  408454:	bl	408720 <__fxstatat@plt+0x5b70>
  408458:	orn	w9, w0, w21
  40845c:	and	w8, w0, #0x1
  408460:	mov	w10, #0x1                   	// #1
  408464:	tst	w9, #0x1
  408468:	cneg	w0, w10, eq  // eq = none
  40846c:	cmp	w22, w8
  408470:	b.ne	408488 <__fxstatat@plt+0x58d8>  // b.any
  408474:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  408478:	add	x2, x2, #0x950
  40847c:	mov	x0, x20
  408480:	mov	x1, x19
  408484:	bl	408898 <__fxstatat@plt+0x5ce8>
  408488:	ldp	x20, x19, [sp, #32]
  40848c:	ldp	x22, x21, [sp, #16]
  408490:	ldp	x29, x30, [sp], #48
  408494:	ret
  408498:	stp	x29, x30, [sp, #-16]!
  40849c:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  4084a0:	add	x2, x2, #0x6ec
  4084a4:	mov	x29, sp
  4084a8:	bl	408908 <__fxstatat@plt+0x5d58>
  4084ac:	ldp	x29, x30, [sp], #16
  4084b0:	ret
  4084b4:	stp	x29, x30, [sp, #-48]!
  4084b8:	stp	x22, x21, [sp, #16]
  4084bc:	stp	x20, x19, [sp, #32]
  4084c0:	mov	x29, sp
  4084c4:	mov	x19, x1
  4084c8:	mov	x20, x0
  4084cc:	bl	408720 <__fxstatat@plt+0x5b70>
  4084d0:	mov	w21, w0
  4084d4:	and	w22, w0, #0x1
  4084d8:	mov	x0, x19
  4084dc:	bl	408720 <__fxstatat@plt+0x5b70>
  4084e0:	orn	w9, w0, w21
  4084e4:	and	w8, w0, #0x1
  4084e8:	mov	w10, #0x1                   	// #1
  4084ec:	tst	w9, #0x1
  4084f0:	cneg	w0, w10, eq  // eq = none
  4084f4:	cmp	w22, w8
  4084f8:	b.ne	408510 <__fxstatat@plt+0x5960>  // b.any
  4084fc:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  408500:	add	x2, x2, #0x6ec
  408504:	mov	x0, x20
  408508:	mov	x1, x19
  40850c:	bl	408908 <__fxstatat@plt+0x5d58>
  408510:	ldp	x20, x19, [sp, #32]
  408514:	ldp	x22, x21, [sp, #16]
  408518:	ldp	x29, x30, [sp], #48
  40851c:	ret
  408520:	stp	x29, x30, [sp, #-16]!
  408524:	mov	x8, x0
  408528:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  40852c:	add	x2, x2, #0x6ec
  408530:	mov	x0, x1
  408534:	mov	x1, x8
  408538:	mov	x29, sp
  40853c:	bl	408908 <__fxstatat@plt+0x5d58>
  408540:	ldp	x29, x30, [sp], #16
  408544:	ret
  408548:	stp	x29, x30, [sp, #-48]!
  40854c:	stp	x22, x21, [sp, #16]
  408550:	stp	x20, x19, [sp, #32]
  408554:	mov	x29, sp
  408558:	mov	x20, x1
  40855c:	mov	x19, x0
  408560:	bl	408720 <__fxstatat@plt+0x5b70>
  408564:	mov	w21, w0
  408568:	and	w22, w0, #0x1
  40856c:	mov	x0, x20
  408570:	bl	408720 <__fxstatat@plt+0x5b70>
  408574:	orn	w9, w0, w21
  408578:	and	w8, w0, #0x1
  40857c:	mov	w10, #0x1                   	// #1
  408580:	tst	w9, #0x1
  408584:	cneg	w0, w10, eq  // eq = none
  408588:	cmp	w22, w8
  40858c:	b.ne	4085a4 <__fxstatat@plt+0x59f4>  // b.any
  408590:	adrp	x2, 408000 <__fxstatat@plt+0x5450>
  408594:	add	x2, x2, #0x6ec
  408598:	mov	x0, x20
  40859c:	mov	x1, x19
  4085a0:	bl	408908 <__fxstatat@plt+0x5d58>
  4085a4:	ldp	x20, x19, [sp, #32]
  4085a8:	ldp	x22, x21, [sp, #16]
  4085ac:	ldp	x29, x30, [sp], #48
  4085b0:	ret
  4085b4:	stp	x29, x30, [sp, #-16]!
  4085b8:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  4085bc:	add	x2, x2, #0x950
  4085c0:	mov	x29, sp
  4085c4:	bl	408908 <__fxstatat@plt+0x5d58>
  4085c8:	ldp	x29, x30, [sp], #16
  4085cc:	ret
  4085d0:	stp	x29, x30, [sp, #-48]!
  4085d4:	stp	x22, x21, [sp, #16]
  4085d8:	stp	x20, x19, [sp, #32]
  4085dc:	mov	x29, sp
  4085e0:	mov	x19, x1
  4085e4:	mov	x20, x0
  4085e8:	bl	408720 <__fxstatat@plt+0x5b70>
  4085ec:	mov	w21, w0
  4085f0:	and	w22, w0, #0x1
  4085f4:	mov	x0, x19
  4085f8:	bl	408720 <__fxstatat@plt+0x5b70>
  4085fc:	orn	w9, w0, w21
  408600:	and	w8, w0, #0x1
  408604:	mov	w10, #0x1                   	// #1
  408608:	tst	w9, #0x1
  40860c:	cneg	w0, w10, eq  // eq = none
  408610:	cmp	w22, w8
  408614:	b.ne	40862c <__fxstatat@plt+0x5a7c>  // b.any
  408618:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  40861c:	add	x2, x2, #0x950
  408620:	mov	x0, x20
  408624:	mov	x1, x19
  408628:	bl	408908 <__fxstatat@plt+0x5d58>
  40862c:	ldp	x20, x19, [sp, #32]
  408630:	ldp	x22, x21, [sp, #16]
  408634:	ldp	x29, x30, [sp], #48
  408638:	ret
  40863c:	stp	x29, x30, [sp, #-16]!
  408640:	mov	x8, x0
  408644:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  408648:	add	x2, x2, #0x950
  40864c:	mov	x0, x1
  408650:	mov	x1, x8
  408654:	mov	x29, sp
  408658:	bl	408908 <__fxstatat@plt+0x5d58>
  40865c:	ldp	x29, x30, [sp], #16
  408660:	ret
  408664:	stp	x29, x30, [sp, #-48]!
  408668:	stp	x22, x21, [sp, #16]
  40866c:	stp	x20, x19, [sp, #32]
  408670:	mov	x29, sp
  408674:	mov	x20, x1
  408678:	mov	x19, x0
  40867c:	bl	408720 <__fxstatat@plt+0x5b70>
  408680:	mov	w21, w0
  408684:	and	w22, w0, #0x1
  408688:	mov	x0, x20
  40868c:	bl	408720 <__fxstatat@plt+0x5b70>
  408690:	orn	w9, w0, w21
  408694:	and	w8, w0, #0x1
  408698:	mov	w10, #0x1                   	// #1
  40869c:	tst	w9, #0x1
  4086a0:	cneg	w0, w10, eq  // eq = none
  4086a4:	cmp	w22, w8
  4086a8:	b.ne	4086c0 <__fxstatat@plt+0x5b10>  // b.any
  4086ac:	adrp	x2, 402000 <mbrtowc@plt-0x4d0>
  4086b0:	add	x2, x2, #0x950
  4086b4:	mov	x0, x20
  4086b8:	mov	x1, x19
  4086bc:	bl	408908 <__fxstatat@plt+0x5d58>
  4086c0:	ldp	x20, x19, [sp, #32]
  4086c4:	ldp	x22, x21, [sp, #16]
  4086c8:	ldp	x29, x30, [sp], #48
  4086cc:	ret
  4086d0:	stp	x29, x30, [sp, #-16]!
  4086d4:	ldr	x0, [x0]
  4086d8:	ldr	x1, [x1]
  4086dc:	mov	x29, sp
  4086e0:	blr	x2
  4086e4:	ldp	x29, x30, [sp], #16
  4086e8:	ret
  4086ec:	stp	x29, x30, [sp, #-32]!
  4086f0:	stp	x20, x19, [sp, #16]
  4086f4:	mov	x29, sp
  4086f8:	mov	x19, x1
  4086fc:	mov	x20, x0
  408700:	bl	402b40 <__errno_location@plt>
  408704:	str	wzr, [x0]
  408708:	mov	x0, x20
  40870c:	mov	x1, x19
  408710:	bl	402af0 <strcoll@plt>
  408714:	ldp	x20, x19, [sp, #16]
  408718:	ldp	x29, x30, [sp], #32
  40871c:	ret
  408720:	ldr	w9, [x0, #152]
  408724:	mov	x8, x0
  408728:	mov	w0, #0x1                   	// #1
  40872c:	cmp	w9, #0x3
  408730:	b.eq	40873c <__fxstatat@plt+0x5b8c>  // b.none
  408734:	cmp	w9, #0x9
  408738:	b.ne	408740 <__fxstatat@plt+0x5b90>  // b.any
  40873c:	ret
  408740:	ldr	w8, [x8, #156]
  408744:	and	w8, w8, #0xf000
  408748:	cmp	w8, #0x4, lsl #12
  40874c:	cset	w0, eq  // eq = none
  408750:	ret
  408754:	stp	x29, x30, [sp, #-48]!
  408758:	stp	x22, x21, [sp, #16]
  40875c:	stp	x20, x19, [sp, #32]
  408760:	mov	x20, x0
  408764:	ldr	x0, [x0]
  408768:	mov	x21, x1
  40876c:	mov	w1, #0x2e                  	// #46
  408770:	mov	x29, sp
  408774:	mov	x19, x2
  408778:	bl	402870 <strrchr@plt>
  40877c:	ldr	x8, [x21]
  408780:	mov	x22, x0
  408784:	mov	w1, #0x2e                  	// #46
  408788:	mov	x0, x8
  40878c:	bl	402870 <strrchr@plt>
  408790:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x54b8>
  408794:	add	x9, x9, #0xe71
  408798:	cmp	x22, #0x0
  40879c:	csel	x8, x9, x22, eq  // eq = none
  4087a0:	cmp	x0, #0x0
  4087a4:	csel	x1, x9, x0, eq  // eq = none
  4087a8:	mov	x0, x8
  4087ac:	blr	x19
  4087b0:	cbnz	w0, 4087c0 <__fxstatat@plt+0x5c10>
  4087b4:	ldr	x0, [x20]
  4087b8:	ldr	x1, [x21]
  4087bc:	blr	x19
  4087c0:	ldp	x20, x19, [sp, #32]
  4087c4:	ldp	x22, x21, [sp, #16]
  4087c8:	ldp	x29, x30, [sp], #48
  4087cc:	ret
  4087d0:	stp	x29, x30, [sp, #-16]!
  4087d4:	ldr	x8, [x1, #72]
  4087d8:	ldr	x9, [x0, #72]
  4087dc:	mov	x29, sp
  4087e0:	cmp	x8, x9
  4087e4:	cset	w8, gt
  4087e8:	csinv	w8, w8, wzr, ge  // ge = tcont
  4087ec:	cbnz	w8, 408800 <__fxstatat@plt+0x5c50>
  4087f0:	ldr	x0, [x0]
  4087f4:	ldr	x1, [x1]
  4087f8:	blr	x2
  4087fc:	mov	w8, w0
  408800:	mov	w0, w8
  408804:	ldp	x29, x30, [sp], #16
  408808:	ret
  40880c:	stp	x29, x30, [sp, #-16]!
  408810:	ldr	x0, [x0]
  408814:	ldr	x1, [x1]
  408818:	mov	x29, sp
  40881c:	bl	40b44c <__fxstatat@plt+0x889c>
  408820:	ldp	x29, x30, [sp], #16
  408824:	ret
  408828:	stp	x29, x30, [sp, #-64]!
  40882c:	stp	x22, x21, [sp, #32]
  408830:	mov	x21, x0
  408834:	add	x0, x1, #0x18
  408838:	str	x23, [sp, #16]
  40883c:	stp	x20, x19, [sp, #48]
  408840:	mov	x29, sp
  408844:	mov	x19, x2
  408848:	mov	x20, x1
  40884c:	bl	41166c <__fxstatat@plt+0xeabc>
  408850:	mov	x22, x0
  408854:	add	x0, x21, #0x18
  408858:	mov	x23, x1
  40885c:	bl	41166c <__fxstatat@plt+0xeabc>
  408860:	mov	x2, x0
  408864:	mov	x3, x1
  408868:	mov	x0, x22
  40886c:	mov	x1, x23
  408870:	bl	41168c <__fxstatat@plt+0xeadc>
  408874:	cbnz	w0, 408884 <__fxstatat@plt+0x5cd4>
  408878:	ldr	x0, [x21]
  40887c:	ldr	x1, [x20]
  408880:	blr	x19
  408884:	ldp	x20, x19, [sp, #48]
  408888:	ldp	x22, x21, [sp, #32]
  40888c:	ldr	x23, [sp, #16]
  408890:	ldp	x29, x30, [sp], #64
  408894:	ret
  408898:	stp	x29, x30, [sp, #-64]!
  40889c:	stp	x22, x21, [sp, #32]
  4088a0:	mov	x21, x0
  4088a4:	add	x0, x1, #0x18
  4088a8:	str	x23, [sp, #16]
  4088ac:	stp	x20, x19, [sp, #48]
  4088b0:	mov	x29, sp
  4088b4:	mov	x19, x2
  4088b8:	mov	x20, x1
  4088bc:	bl	411660 <__fxstatat@plt+0xeab0>
  4088c0:	mov	x22, x0
  4088c4:	add	x0, x21, #0x18
  4088c8:	mov	x23, x1
  4088cc:	bl	411660 <__fxstatat@plt+0xeab0>
  4088d0:	mov	x2, x0
  4088d4:	mov	x3, x1
  4088d8:	mov	x0, x22
  4088dc:	mov	x1, x23
  4088e0:	bl	41168c <__fxstatat@plt+0xeadc>
  4088e4:	cbnz	w0, 4088f4 <__fxstatat@plt+0x5d44>
  4088e8:	ldr	x0, [x21]
  4088ec:	ldr	x1, [x20]
  4088f0:	blr	x19
  4088f4:	ldp	x20, x19, [sp, #48]
  4088f8:	ldp	x22, x21, [sp, #32]
  4088fc:	ldr	x23, [sp, #16]
  408900:	ldp	x29, x30, [sp], #64
  408904:	ret
  408908:	stp	x29, x30, [sp, #-64]!
  40890c:	stp	x22, x21, [sp, #32]
  408910:	mov	x21, x0
  408914:	add	x0, x1, #0x18
  408918:	str	x23, [sp, #16]
  40891c:	stp	x20, x19, [sp, #48]
  408920:	mov	x29, sp
  408924:	mov	x19, x2
  408928:	mov	x20, x1
  40892c:	bl	411654 <__fxstatat@plt+0xeaa4>
  408930:	mov	x22, x0
  408934:	add	x0, x21, #0x18
  408938:	mov	x23, x1
  40893c:	bl	411654 <__fxstatat@plt+0xeaa4>
  408940:	mov	x2, x0
  408944:	mov	x3, x1
  408948:	mov	x0, x22
  40894c:	mov	x1, x23
  408950:	bl	41168c <__fxstatat@plt+0xeadc>
  408954:	cbnz	w0, 408964 <__fxstatat@plt+0x5db4>
  408958:	ldr	x0, [x21]
  40895c:	ldr	x1, [x20]
  408960:	blr	x19
  408964:	ldp	x20, x19, [sp, #48]
  408968:	ldp	x22, x21, [sp, #32]
  40896c:	ldr	x23, [sp, #16]
  408970:	ldp	x29, x30, [sp], #64
  408974:	ret
  408978:	stp	x29, x30, [sp, #-48]!
  40897c:	stp	x28, x21, [sp, #16]
  408980:	stp	x20, x19, [sp, #32]
  408984:	mov	x29, sp
  408988:	sub	sp, sp, #0x290
  40898c:	mov	x20, x1
  408990:	mov	x19, x0
  408994:	bl	408df0 <__fxstatat@plt+0x6240>
  408998:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40899c:	ldrb	w8, [x8, #2322]
  4089a0:	cmp	w8, #0x1
  4089a4:	b.ne	4089e4 <__fxstatat@plt+0x5e34>  // b.any
  4089a8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4089ac:	ldr	w8, [x8, #1540]
  4089b0:	adrp	x9, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4089b4:	ldr	w9, [x9, #1436]
  4089b8:	add	x0, sp, #0x4
  4089bc:	cmp	w8, #0x4
  4089c0:	mov	x1, x19
  4089c4:	csel	w21, wzr, w9, eq  // eq = none
  4089c8:	bl	4094e8 <__fxstatat@plt+0x6938>
  4089cc:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  4089d0:	mov	x3, x0
  4089d4:	add	x1, x1, #0xef9
  4089d8:	mov	w0, #0x1                   	// #1
  4089dc:	mov	w2, w21
  4089e0:	bl	4027b0 <__printf_chk@plt>
  4089e4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4089e8:	ldrb	w8, [x8, #1669]
  4089ec:	cmp	w8, #0x1
  4089f0:	b.ne	408a58 <__fxstatat@plt+0x5ea8>  // b.any
  4089f4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4089f8:	adrp	x9, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4089fc:	ldr	w8, [x8, #1540]
  408a00:	ldr	w9, [x9, #1440]
  408a04:	ldrb	w10, [x19, #168]
  408a08:	cmp	w8, #0x4
  408a0c:	csel	w21, wzr, w9, eq  // eq = none
  408a10:	cbz	w10, 408a3c <__fxstatat@plt+0x5e8c>
  408a14:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  408a18:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  408a1c:	ldr	x0, [x19, #88]
  408a20:	ldr	w2, [x8, #2364]
  408a24:	ldr	x4, [x9, #2376]
  408a28:	add	x1, sp, #0x4
  408a2c:	mov	w3, #0x200                 	// #512
  408a30:	bl	40c910 <__fxstatat@plt+0x9d60>
  408a34:	mov	x3, x0
  408a38:	b	408a44 <__fxstatat@plt+0x5e94>
  408a3c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x54b8>
  408a40:	add	x3, x3, #0xd0e
  408a44:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  408a48:	add	x1, x1, #0xef9
  408a4c:	mov	w0, #0x1                   	// #1
  408a50:	mov	w2, w21
  408a54:	bl	4027b0 <__printf_chk@plt>
  408a58:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  408a5c:	ldrb	w8, [x8, #1668]
  408a60:	cmp	w8, #0x1
  408a64:	b.ne	408a94 <__fxstatat@plt+0x5ee4>  // b.any
  408a68:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  408a6c:	ldr	w8, [x8, #1540]
  408a70:	adrp	x9, 42c000 <__progname@@GLIBC_2.17+0xa30>
  408a74:	ldr	w9, [x9, #1460]
  408a78:	ldr	x3, [x19, #160]
  408a7c:	cmp	w8, #0x4
  408a80:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  408a84:	csel	w2, wzr, w9, eq  // eq = none
  408a88:	add	x1, x1, #0xef9
  408a8c:	mov	w0, #0x1                   	// #1
  408a90:	bl	4027b0 <__printf_chk@plt>
  408a94:	mov	x0, x19
  408a98:	mov	w1, wzr
  408a9c:	mov	x2, xzr
  408aa0:	mov	x3, x20
  408aa4:	bl	409524 <__fxstatat@plt+0x6974>
  408aa8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  408aac:	ldr	w8, [x8, #1552]
  408ab0:	cbz	w8, 408ac4 <__fxstatat@plt+0x5f14>
  408ab4:	ldrb	w0, [x19, #168]
  408ab8:	ldr	w1, [x19, #40]
  408abc:	ldr	w2, [x19, #152]
  408ac0:	bl	409624 <__fxstatat@plt+0x6a74>
  408ac4:	add	sp, sp, #0x290
  408ac8:	ldp	x20, x19, [sp, #32]
  408acc:	ldp	x28, x21, [sp, #16]
  408ad0:	ldp	x29, x30, [sp], #48
  408ad4:	ret
  408ad8:	stp	x29, x30, [sp, #-96]!
  408adc:	stp	x24, x23, [sp, #48]
  408ae0:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x184b8>
  408ae4:	ldr	x8, [x24, #1888]
  408ae8:	stp	x28, x27, [sp, #16]
  408aec:	stp	x26, x25, [sp, #32]
  408af0:	stp	x22, x21, [sp, #64]
  408af4:	stp	x20, x19, [sp, #80]
  408af8:	mov	x29, sp
  408afc:	cbz	x8, 408bb4 <__fxstatat@plt+0x6004>
  408b00:	mov	x25, xzr
  408b04:	mov	x20, xzr
  408b08:	and	w19, w0, #0xff
  408b0c:	adrp	x26, 42c000 <__progname@@GLIBC_2.17+0xa30>
  408b10:	adrp	x27, 42b000 <_obstack_memory_used@@Base+0x184b8>
  408b14:	b	408b54 <__fxstatat@plt+0x5fa4>
  408b18:	add	x28, x20, #0x2
  408b1c:	mov	w23, #0x20                  	// #32
  408b20:	mov	w0, w19
  408b24:	bl	4027f0 <putchar_unlocked@plt>
  408b28:	mov	w0, w23
  408b2c:	bl	4027f0 <putchar_unlocked@plt>
  408b30:	mov	x20, x28
  408b34:	mov	x0, x21
  408b38:	mov	x1, x20
  408b3c:	bl	408978 <__fxstatat@plt+0x5dc8>
  408b40:	ldr	x8, [x24, #1888]
  408b44:	add	x25, x25, #0x1
  408b48:	add	x20, x20, x22
  408b4c:	cmp	x25, x8
  408b50:	b.cs	408bb4 <__fxstatat@plt+0x6004>  // b.hs, b.nlast
  408b54:	ldr	x8, [x26, #1424]
  408b58:	ldr	x9, [x27, #2344]
  408b5c:	ldr	x21, [x8, x25, lsl #3]
  408b60:	cbz	x9, 408b78 <__fxstatat@plt+0x5fc8>
  408b64:	mov	x0, x21
  408b68:	bl	409a08 <__fxstatat@plt+0x6e58>
  408b6c:	mov	x22, x0
  408b70:	cbnz	x25, 408b80 <__fxstatat@plt+0x5fd0>
  408b74:	b	408b34 <__fxstatat@plt+0x5f84>
  408b78:	mov	x22, xzr
  408b7c:	cbz	x25, 408b34 <__fxstatat@plt+0x5f84>
  408b80:	ldr	x8, [x27, #2344]
  408b84:	cbz	x8, 408b18 <__fxstatat@plt+0x5f68>
  408b88:	mov	x9, #0xfffffffffffffffd    	// #-3
  408b8c:	sub	x9, x9, x22
  408b90:	mov	x28, xzr
  408b94:	cmp	x20, x9
  408b98:	mov	w23, #0xa                   	// #10
  408b9c:	b.hi	408b20 <__fxstatat@plt+0x5f70>  // b.pmore
  408ba0:	add	x9, x20, x22
  408ba4:	add	x9, x9, #0x2
  408ba8:	cmp	x9, x8
  408bac:	b.cc	408b18 <__fxstatat@plt+0x5f68>  // b.lo, b.ul, b.last
  408bb0:	b	408b20 <__fxstatat@plt+0x5f70>
  408bb4:	mov	w0, #0xa                   	// #10
  408bb8:	bl	4027f0 <putchar_unlocked@plt>
  408bbc:	ldp	x20, x19, [sp, #80]
  408bc0:	ldp	x22, x21, [sp, #64]
  408bc4:	ldp	x24, x23, [sp, #48]
  408bc8:	ldp	x26, x25, [sp, #32]
  408bcc:	ldp	x28, x27, [sp, #16]
  408bd0:	ldp	x29, x30, [sp], #96
  408bd4:	ret
  408bd8:	sub	sp, sp, #0x70
  408bdc:	mov	w0, #0x1                   	// #1
  408be0:	stp	x29, x30, [sp, #16]
  408be4:	stp	x28, x27, [sp, #32]
  408be8:	stp	x26, x25, [sp, #48]
  408bec:	stp	x24, x23, [sp, #64]
  408bf0:	stp	x22, x21, [sp, #80]
  408bf4:	stp	x20, x19, [sp, #96]
  408bf8:	add	x29, sp, #0x10
  408bfc:	bl	409be0 <__fxstatat@plt+0x7030>
  408c00:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x184b8>
  408c04:	ldr	x8, [x22, #1888]
  408c08:	udiv	x9, x8, x0
  408c0c:	msub	x8, x9, x0, x8
  408c10:	cmp	x8, #0x0
  408c14:	cinc	x23, x9, ne  // ne = any
  408c18:	cbz	x23, 408cc8 <__fxstatat@plt+0x6118>
  408c1c:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  408c20:	ldr	x8, [x8, #1824]
  408c24:	mov	w9, #0x18                  	// #24
  408c28:	mov	x28, xzr
  408c2c:	adrp	x26, 42c000 <__progname@@GLIBC_2.17+0xa30>
  408c30:	madd	x8, x0, x9, x8
  408c34:	sub	x25, x8, #0x8
  408c38:	b	408c54 <__fxstatat@plt+0x60a4>
  408c3c:	mov	w0, #0xa                   	// #10
  408c40:	bl	4027f0 <putchar_unlocked@plt>
  408c44:	ldr	x28, [sp, #8]
  408c48:	add	x28, x28, #0x1
  408c4c:	cmp	x28, x23
  408c50:	b.cs	408cc8 <__fxstatat@plt+0x6118>  // b.hs, b.nlast
  408c54:	mov	x27, xzr
  408c58:	mov	x19, xzr
  408c5c:	str	x28, [sp, #8]
  408c60:	b	408c80 <__fxstatat@plt+0x60d0>
  408c64:	add	x0, x20, x19
  408c68:	add	x19, x24, x19
  408c6c:	mov	x1, x19
  408c70:	bl	409d28 <__fxstatat@plt+0x7178>
  408c74:	mov	w8, #0x1                   	// #1
  408c78:	add	x27, x27, #0x8
  408c7c:	tbz	w8, #0, 408c3c <__fxstatat@plt+0x608c>
  408c80:	ldr	x8, [x26, #1424]
  408c84:	ldr	x21, [x8, x28, lsl #3]
  408c88:	mov	x0, x21
  408c8c:	bl	409a08 <__fxstatat@plt+0x6e58>
  408c90:	ldr	x8, [x25]
  408c94:	mov	x20, x0
  408c98:	mov	x0, x21
  408c9c:	mov	x1, x19
  408ca0:	ldr	x24, [x8, x27]
  408ca4:	bl	408978 <__fxstatat@plt+0x5dc8>
  408ca8:	ldr	x8, [x22, #1888]
  408cac:	add	x28, x28, x23
  408cb0:	cmp	x28, x8
  408cb4:	b.cc	408c64 <__fxstatat@plt+0x60b4>  // b.lo, b.ul, b.last
  408cb8:	mov	w8, wzr
  408cbc:	add	x27, x27, #0x8
  408cc0:	tbnz	w8, #0, 408c80 <__fxstatat@plt+0x60d0>
  408cc4:	b	408c3c <__fxstatat@plt+0x608c>
  408cc8:	ldp	x20, x19, [sp, #96]
  408ccc:	ldp	x22, x21, [sp, #80]
  408cd0:	ldp	x24, x23, [sp, #64]
  408cd4:	ldp	x26, x25, [sp, #48]
  408cd8:	ldp	x28, x27, [sp, #32]
  408cdc:	ldp	x29, x30, [sp, #16]
  408ce0:	add	sp, sp, #0x70
  408ce4:	ret
  408ce8:	stp	x29, x30, [sp, #-96]!
  408cec:	mov	w0, wzr
  408cf0:	str	x27, [sp, #16]
  408cf4:	stp	x26, x25, [sp, #32]
  408cf8:	stp	x24, x23, [sp, #48]
  408cfc:	stp	x22, x21, [sp, #64]
  408d00:	stp	x20, x19, [sp, #80]
  408d04:	mov	x29, sp
  408d08:	bl	409be0 <__fxstatat@plt+0x7030>
  408d0c:	adrp	x22, 42c000 <__progname@@GLIBC_2.17+0xa30>
  408d10:	ldr	x8, [x22, #1424]
  408d14:	adrp	x9, 42c000 <__progname@@GLIBC_2.17+0xa30>
  408d18:	ldr	x21, [x9, #1824]
  408d1c:	mov	x19, x0
  408d20:	ldr	x20, [x8]
  408d24:	mov	w23, #0x18                  	// #24
  408d28:	mov	x0, x20
  408d2c:	bl	409a08 <__fxstatat@plt+0x6e58>
  408d30:	madd	x23, x19, x23, x21
  408d34:	ldr	x8, [x23, #-8]!
  408d38:	mov	x21, x0
  408d3c:	mov	x0, x20
  408d40:	mov	x1, xzr
  408d44:	ldr	x26, [x8]
  408d48:	bl	408978 <__fxstatat@plt+0x5dc8>
  408d4c:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x184b8>
  408d50:	ldr	x8, [x24, #1888]
  408d54:	cmp	x8, #0x2
  408d58:	b.cc	408dcc <__fxstatat@plt+0x621c>  // b.lo, b.ul, b.last
  408d5c:	mov	x20, xzr
  408d60:	mov	w25, #0x1                   	// #1
  408d64:	b	408db0 <__fxstatat@plt+0x6200>
  408d68:	add	x0, x21, x20
  408d6c:	add	x20, x26, x20
  408d70:	mov	x1, x20
  408d74:	bl	409d28 <__fxstatat@plt+0x7178>
  408d78:	ldr	x8, [x22, #1424]
  408d7c:	mov	x1, x20
  408d80:	ldr	x21, [x8, x25, lsl #3]
  408d84:	mov	x0, x21
  408d88:	bl	408978 <__fxstatat@plt+0x5dc8>
  408d8c:	mov	x0, x21
  408d90:	bl	409a08 <__fxstatat@plt+0x6e58>
  408d94:	ldr	x8, [x23]
  408d98:	ldr	x9, [x24, #1888]
  408d9c:	add	x25, x25, #0x1
  408da0:	mov	x21, x0
  408da4:	ldr	x26, [x8, x27, lsl #3]
  408da8:	cmp	x25, x9
  408dac:	b.cs	408dcc <__fxstatat@plt+0x621c>  // b.hs, b.nlast
  408db0:	udiv	x8, x25, x19
  408db4:	msub	x27, x8, x19, x25
  408db8:	cbnz	x27, 408d68 <__fxstatat@plt+0x61b8>
  408dbc:	mov	w0, #0xa                   	// #10
  408dc0:	bl	4027f0 <putchar_unlocked@plt>
  408dc4:	mov	x20, xzr
  408dc8:	b	408d78 <__fxstatat@plt+0x61c8>
  408dcc:	mov	w0, #0xa                   	// #10
  408dd0:	bl	4027f0 <putchar_unlocked@plt>
  408dd4:	ldp	x20, x19, [sp, #80]
  408dd8:	ldp	x22, x21, [sp, #64]
  408ddc:	ldp	x24, x23, [sp, #48]
  408de0:	ldp	x26, x25, [sp, #32]
  408de4:	ldr	x27, [sp, #16]
  408de8:	ldp	x29, x30, [sp], #96
  408dec:	ret
  408df0:	stp	x29, x30, [sp, #-32]!
  408df4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  408df8:	ldrb	w8, [x8, #1536]
  408dfc:	str	x19, [sp, #16]
  408e00:	mov	x29, sp
  408e04:	cbz	w8, 408e34 <__fxstatat@plt+0x6284>
  408e08:	mov	w0, #0x4                   	// #4
  408e0c:	bl	40440c <__fxstatat@plt+0x185c>
  408e10:	tbz	w0, #0, 408e34 <__fxstatat@plt+0x6284>
  408e14:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x184b8>
  408e18:	add	x19, x19, #0x388
  408e1c:	mov	x0, x19
  408e20:	bl	405f40 <__fxstatat@plt+0x3390>
  408e24:	add	x0, x19, #0x40
  408e28:	bl	405f40 <__fxstatat@plt+0x3390>
  408e2c:	add	x0, x19, #0x10
  408e30:	bl	405f40 <__fxstatat@plt+0x3390>
  408e34:	ldr	x19, [sp, #16]
  408e38:	ldp	x29, x30, [sp], #32
  408e3c:	ret
  408e40:	stp	x29, x30, [sp, #-96]!
  408e44:	stp	x28, x27, [sp, #16]
  408e48:	stp	x26, x25, [sp, #32]
  408e4c:	stp	x24, x23, [sp, #48]
  408e50:	stp	x22, x21, [sp, #64]
  408e54:	stp	x20, x19, [sp, #80]
  408e58:	mov	x29, sp
  408e5c:	sub	sp, sp, #0x1, lsl #12
  408e60:	sub	sp, sp, #0x100
  408e64:	ldrb	w8, [x0, #168]
  408e68:	mov	x19, x0
  408e6c:	sub	x20, x29, #0xc
  408e70:	cbz	w8, 408e84 <__fxstatat@plt+0x62d4>
  408e74:	add	x0, x19, #0x18
  408e78:	sub	x1, x29, #0xc
  408e7c:	bl	40b31c <__fxstatat@plt+0x876c>
  408e80:	b	408ea8 <__fxstatat@plt+0x62f8>
  408e84:	ldr	w8, [x19, #152]
  408e88:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x54b8>
  408e8c:	add	x9, x9, #0xee1
  408e90:	strb	wzr, [x20, #11]
  408e94:	ldrb	w8, [x9, x8]
  408e98:	mov	x9, #0x3f3f3f3f3f3f3f3f    	// #4557430888798830399
  408e9c:	stur	x9, [x20, #1]
  408ea0:	sturh	w9, [x20, #9]
  408ea4:	strb	w8, [x20]
  408ea8:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  408eac:	ldrb	w8, [x8, #1432]
  408eb0:	cbz	w8, 408ed4 <__fxstatat@plt+0x6324>
  408eb4:	ldr	w8, [x19, #172]
  408eb8:	cmp	w8, #0x1
  408ebc:	b.eq	408ed0 <__fxstatat@plt+0x6320>  // b.none
  408ec0:	cmp	w8, #0x2
  408ec4:	b.ne	408ed8 <__fxstatat@plt+0x6328>  // b.any
  408ec8:	mov	w8, #0x2b                  	// #43
  408ecc:	b	408ed4 <__fxstatat@plt+0x6324>
  408ed0:	mov	w8, #0x2e                  	// #46
  408ed4:	strb	w8, [x20, #10]
  408ed8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  408edc:	ldr	w8, [x8, #2316]
  408ee0:	cbz	w8, 408f0c <__fxstatat@plt+0x635c>
  408ee4:	cmp	w8, #0x2
  408ee8:	b.eq	408f00 <__fxstatat@plt+0x6350>  // b.none
  408eec:	cmp	w8, #0x1
  408ef0:	b.ne	4094e4 <__fxstatat@plt+0x6934>  // b.any
  408ef4:	add	x0, x19, #0x18
  408ef8:	bl	411660 <__fxstatat@plt+0xeab0>
  408efc:	b	408f14 <__fxstatat@plt+0x6364>
  408f00:	add	x0, x19, #0x18
  408f04:	bl	411654 <__fxstatat@plt+0xeaa4>
  408f08:	b	408f14 <__fxstatat@plt+0x6364>
  408f0c:	add	x0, x19, #0x18
  408f10:	bl	41166c <__fxstatat@plt+0xeabc>
  408f14:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  408f18:	ldrb	w8, [x8, #2322]
  408f1c:	add	x20, sp, #0x2b8
  408f20:	str	x0, [sp, #680]
  408f24:	str	x1, [sp, #688]
  408f28:	cmp	w8, #0x1
  408f2c:	b.ne	408f70 <__fxstatat@plt+0x63c0>  // b.any
  408f30:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  408f34:	ldr	w21, [x8, #1436]
  408f38:	add	x0, sp, #0x18
  408f3c:	mov	x1, x19
  408f40:	bl	4094e8 <__fxstatat@plt+0x6938>
  408f44:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x54b8>
  408f48:	mov	x5, x0
  408f4c:	add	x3, x3, #0xef9
  408f50:	add	x0, sp, #0x2b8
  408f54:	mov	w1, #0x1                   	// #1
  408f58:	mov	w2, #0xe3b                 	// #3643
  408f5c:	mov	w4, w21
  408f60:	bl	402560 <__sprintf_chk@plt>
  408f64:	add	x0, sp, #0x2b8
  408f68:	bl	402550 <strlen@plt>
  408f6c:	add	x20, x20, x0
  408f70:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  408f74:	ldrb	w8, [x8, #1669]
  408f78:	cmp	w8, #0x1
  408f7c:	b.ne	409018 <__fxstatat@plt+0x6468>  // b.any
  408f80:	ldrb	w8, [x19, #168]
  408f84:	cbz	w8, 408fb0 <__fxstatat@plt+0x6400>
  408f88:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  408f8c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  408f90:	ldr	x0, [x19, #88]
  408f94:	ldr	w2, [x8, #2364]
  408f98:	ldr	x4, [x9, #2376]
  408f9c:	add	x1, sp, #0x18
  408fa0:	mov	w3, #0x200                 	// #512
  408fa4:	bl	40c910 <__fxstatat@plt+0x9d60>
  408fa8:	mov	x21, x0
  408fac:	b	408fb8 <__fxstatat@plt+0x6408>
  408fb0:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x54b8>
  408fb4:	add	x21, x21, #0xd0e
  408fb8:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  408fbc:	ldr	w22, [x8, #1440]
  408fc0:	mov	x0, x21
  408fc4:	mov	w1, wzr
  408fc8:	bl	40da50 <__fxstatat@plt+0xaea0>
  408fcc:	sub	w22, w22, w0
  408fd0:	subs	w8, w22, #0x1
  408fd4:	b.lt	409004 <__fxstatat@plt+0x6454>  // b.tstop
  408fd8:	cmp	w22, #0x0
  408fdc:	csel	w8, w8, wzr, gt
  408fe0:	add	x2, x8, #0x1
  408fe4:	mov	w1, #0x20                  	// #32
  408fe8:	mov	x0, x20
  408fec:	bl	4027c0 <memset@plt>
  408ff0:	add	w8, w22, #0x1
  408ff4:	sub	w8, w8, #0x1
  408ff8:	cmp	w8, #0x1
  408ffc:	add	x20, x20, #0x1
  409000:	b.gt	408ff4 <__fxstatat@plt+0x6444>
  409004:	ldrb	w8, [x21], #1
  409008:	strb	w8, [x20], #1
  40900c:	cbnz	w8, 409004 <__fxstatat@plt+0x6454>
  409010:	mov	w8, #0x20                  	// #32
  409014:	sturb	w8, [x20, #-1]
  409018:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40901c:	ldrb	w9, [x19, #168]
  409020:	ldr	w21, [x8, #1444]
  409024:	cbz	w9, 40903c <__fxstatat@plt+0x648c>
  409028:	ldr	w0, [x19, #44]
  40902c:	add	x1, sp, #0x18
  409030:	bl	40d570 <__fxstatat@plt+0xa9c0>
  409034:	mov	x6, x0
  409038:	b	409044 <__fxstatat@plt+0x6494>
  40903c:	adrp	x6, 418000 <_obstack_memory_used@@Base+0x54b8>
  409040:	add	x6, x6, #0xd0e
  409044:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x54b8>
  409048:	add	x3, x3, #0xeec
  40904c:	sub	x4, x29, #0xc
  409050:	mov	w1, #0x1                   	// #1
  409054:	mov	x2, #0xffffffffffffffff    	// #-1
  409058:	mov	x0, x20
  40905c:	mov	w5, w21
  409060:	bl	402560 <__sprintf_chk@plt>
  409064:	mov	x0, x20
  409068:	bl	402550 <strlen@plt>
  40906c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409070:	ldrb	w8, [x8, #1677]
  409074:	mov	x21, x0
  409078:	adrp	x26, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40907c:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409080:	cmp	w8, #0x1
  409084:	b.ne	4090a4 <__fxstatat@plt+0x64f4>  // b.any
  409088:	ldr	x1, [x26, #1480]
  40908c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  409090:	add	x0, x0, #0xe0c
  409094:	bl	402ae0 <fputs_unlocked@plt>
  409098:	ldr	x8, [x25, #1896]
  40909c:	add	x8, x8, #0x2
  4090a0:	str	x8, [x25, #1896]
  4090a4:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4090a8:	ldrb	w8, [x24, #2360]
  4090ac:	add	x20, x20, x21
  4090b0:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4090b4:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4090b8:	cmp	w8, #0x1
  4090bc:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4090c0:	b.ne	4090e4 <__fxstatat@plt+0x6534>  // b.any
  4090c4:	ldrb	w8, [x23, #2384]
  4090c8:	cmp	w8, #0x1
  4090cc:	b.ne	4090e4 <__fxstatat@plt+0x6534>  // b.any
  4090d0:	ldrb	w8, [x22, #2385]
  4090d4:	tbnz	w8, #0, 4090e4 <__fxstatat@plt+0x6534>
  4090d8:	ldrb	w8, [x21, #1668]
  4090dc:	cmp	w8, #0x1
  4090e0:	b.ne	409180 <__fxstatat@plt+0x65d0>  // b.any
  4090e4:	ldr	x1, [x26, #1480]
  4090e8:	add	x0, sp, #0x2b8
  4090ec:	add	x27, sp, #0x2b8
  4090f0:	bl	402ae0 <fputs_unlocked@plt>
  4090f4:	ldr	x8, [x25, #1896]
  4090f8:	ldrb	w9, [x24, #2360]
  4090fc:	sub	x10, x20, x27
  409100:	add	x8, x10, x8
  409104:	str	x8, [x25, #1896]
  409108:	tbnz	w9, #0, 409120 <__fxstatat@plt+0x6570>
  40910c:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  409110:	ldr	w0, [x19, #48]
  409114:	ldr	w1, [x8, #1448]
  409118:	ldrb	w2, [x19, #168]
  40911c:	bl	409ef8 <__fxstatat@plt+0x7348>
  409120:	ldrb	w8, [x23, #2384]
  409124:	tbnz	w8, #0, 40913c <__fxstatat@plt+0x658c>
  409128:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40912c:	ldr	w0, [x19, #52]
  409130:	ldr	w1, [x8, #1452]
  409134:	ldrb	w2, [x19, #168]
  409138:	bl	409f50 <__fxstatat@plt+0x73a0>
  40913c:	ldrb	w8, [x22, #2385]
  409140:	cmp	w8, #0x1
  409144:	b.ne	40915c <__fxstatat@plt+0x65ac>  // b.any
  409148:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40914c:	ldr	w0, [x19, #48]
  409150:	ldr	w1, [x8, #1456]
  409154:	ldrb	w2, [x19, #168]
  409158:	bl	409ef8 <__fxstatat@plt+0x7348>
  40915c:	ldrb	w8, [x21, #1668]
  409160:	cmp	w8, #0x1
  409164:	b.ne	40918c <__fxstatat@plt+0x65dc>  // b.any
  409168:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40916c:	ldr	x0, [x19, #160]
  409170:	ldr	w2, [x8, #1460]
  409174:	mov	x1, xzr
  409178:	add	x20, sp, #0x2b8
  40917c:	bl	409fa8 <__fxstatat@plt+0x73f8>
  409180:	ldrb	w8, [x19, #168]
  409184:	cbnz	w8, 409198 <__fxstatat@plt+0x65e8>
  409188:	b	409244 <__fxstatat@plt+0x6694>
  40918c:	add	x20, sp, #0x2b8
  409190:	ldrb	w8, [x19, #168]
  409194:	cbz	w8, 409244 <__fxstatat@plt+0x6694>
  409198:	ldr	w9, [x19, #40]
  40919c:	and	w9, w9, #0xf000
  4091a0:	orr	w9, w9, #0x4000
  4091a4:	cmp	w9, #0x6, lsl #12
  4091a8:	b.ne	409244 <__fxstatat@plt+0x6694>  // b.any
  4091ac:	adrp	x24, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4091b0:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4091b4:	adrp	x22, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4091b8:	ldr	w9, [x24, #1472]
  4091bc:	ldr	w8, [x8, #1464]
  4091c0:	ldr	w10, [x22, #1468]
  4091c4:	ldr	x0, [x19, #56]
  4091c8:	sub	w9, w9, w8
  4091cc:	sub	w9, w9, w10
  4091d0:	sub	w9, w9, #0x2
  4091d4:	bic	w9, w9, w9, asr #31
  4091d8:	add	w21, w9, w8
  4091dc:	bl	4028e0 <gnu_dev_major@plt>
  4091e0:	mov	w0, w0
  4091e4:	add	x1, sp, #0x18
  4091e8:	bl	40d570 <__fxstatat@plt+0xa9c0>
  4091ec:	ldr	x8, [x19, #56]
  4091f0:	ldr	w22, [x22, #1468]
  4091f4:	mov	x23, x0
  4091f8:	mov	x0, x8
  4091fc:	bl	402a10 <gnu_dev_minor@plt>
  409200:	mov	w0, w0
  409204:	mov	x1, sp
  409208:	bl	40d570 <__fxstatat@plt+0xa9c0>
  40920c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x54b8>
  409210:	mov	x7, x0
  409214:	add	x3, x3, #0xef4
  409218:	mov	w1, #0x1                   	// #1
  40921c:	mov	x2, #0xffffffffffffffff    	// #-1
  409220:	mov	x0, x20
  409224:	mov	w4, w21
  409228:	mov	x5, x23
  40922c:	mov	w6, w22
  409230:	bl	402560 <__sprintf_chk@plt>
  409234:	ldrsw	x8, [x24, #1472]
  409238:	add	x8, x8, x20
  40923c:	add	x20, x8, #0x1
  409240:	b	4092dc <__fxstatat@plt+0x672c>
  409244:	cbz	w8, 409274 <__fxstatat@plt+0x66c4>
  409248:	ldr	x0, [x19, #72]
  40924c:	bl	4076e0 <__fxstatat@plt+0x4b30>
  409250:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409254:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409258:	ldr	w2, [x8, #2368]
  40925c:	ldr	x4, [x9, #1288]
  409260:	add	x1, sp, #0x18
  409264:	mov	w3, #0x1                   	// #1
  409268:	bl	40c910 <__fxstatat@plt+0x9d60>
  40926c:	mov	x21, x0
  409270:	b	40927c <__fxstatat@plt+0x66cc>
  409274:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x54b8>
  409278:	add	x21, x21, #0xd0e
  40927c:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  409280:	ldr	w22, [x8, #1472]
  409284:	mov	x0, x21
  409288:	mov	w1, wzr
  40928c:	bl	40da50 <__fxstatat@plt+0xaea0>
  409290:	sub	w22, w22, w0
  409294:	subs	w8, w22, #0x1
  409298:	b.lt	4092c8 <__fxstatat@plt+0x6718>  // b.tstop
  40929c:	cmp	w22, #0x0
  4092a0:	csel	w8, w8, wzr, gt
  4092a4:	add	x2, x8, #0x1
  4092a8:	mov	w1, #0x20                  	// #32
  4092ac:	mov	x0, x20
  4092b0:	bl	4027c0 <memset@plt>
  4092b4:	add	w8, w22, #0x1
  4092b8:	sub	w8, w8, #0x1
  4092bc:	cmp	w8, #0x1
  4092c0:	add	x20, x20, #0x1
  4092c4:	b.gt	4092b8 <__fxstatat@plt+0x6708>
  4092c8:	ldrb	w8, [x21], #1
  4092cc:	strb	w8, [x20], #1
  4092d0:	cbnz	w8, 4092c8 <__fxstatat@plt+0x6718>
  4092d4:	mov	w8, #0x20                  	// #32
  4092d8:	sturb	w8, [x20, #-1]
  4092dc:	mov	w8, #0x1                   	// #1
  4092e0:	strb	w8, [x20]
  4092e4:	ldrb	w8, [x19, #168]
  4092e8:	cbz	w8, 409360 <__fxstatat@plt+0x67b0>
  4092ec:	adrp	x27, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4092f0:	ldr	x0, [x27, #1656]
  4092f4:	add	x1, sp, #0x2a8
  4092f8:	add	x2, sp, #0x18
  4092fc:	bl	412c9c <_obstack_memory_used@@Base+0x154>
  409300:	cbz	x0, 409364 <__fxstatat@plt+0x67b4>
  409304:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409308:	add	x21, x21, #0x5f0
  40930c:	ldp	x0, x1, [x21]
  409310:	ldr	x2, [sp, #680]
  409314:	ldr	x3, [sp, #688]
  409318:	bl	41168c <__fxstatat@plt+0xeadc>
  40931c:	tbz	w0, #31, 40932c <__fxstatat@plt+0x677c>
  409320:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409324:	add	x0, x0, #0x5f0
  409328:	bl	40b8c4 <__fxstatat@plt+0x8d14>
  40932c:	ldp	x22, x23, [x21]
  409330:	ldr	x24, [sp, #680]
  409334:	ldr	x21, [sp, #688]
  409338:	mov	x8, #0xffffffffffff3d54    	// #-49836
  40933c:	movk	x8, #0xff0f, lsl #16
  409340:	add	x0, x22, x8
  409344:	mov	x1, x23
  409348:	mov	x2, x24
  40934c:	mov	x3, x21
  409350:	bl	41168c <__fxstatat@plt+0xeadc>
  409354:	tbnz	w0, #31, 40936c <__fxstatat@plt+0x67bc>
  409358:	mov	w1, wzr
  40935c:	b	409384 <__fxstatat@plt+0x67d4>
  409360:	mov	x0, xzr
  409364:	cbnz	x0, 4093c8 <__fxstatat@plt+0x6818>
  409368:	b	40939c <__fxstatat@plt+0x67ec>
  40936c:	mov	x0, x24
  409370:	mov	x1, x21
  409374:	mov	x2, x22
  409378:	mov	x3, x23
  40937c:	bl	41168c <__fxstatat@plt+0xeadc>
  409380:	lsr	w1, w0, #31
  409384:	ldr	x3, [x27, #1656]
  409388:	add	x2, sp, #0x18
  40938c:	mov	x0, x20
  409390:	mov	w4, w21
  409394:	bl	40a04c <__fxstatat@plt+0x749c>
  409398:	cbnz	x0, 4093c8 <__fxstatat@plt+0x6818>
  40939c:	ldrb	w8, [x20]
  4093a0:	cbz	w8, 4093c8 <__fxstatat@plt+0x6818>
  4093a4:	bl	40a0ac <__fxstatat@plt+0x74fc>
  4093a8:	ldrb	w8, [x19, #168]
  4093ac:	mov	w21, w0
  4093b0:	cbz	w8, 4093d8 <__fxstatat@plt+0x6828>
  4093b4:	ldr	x0, [sp, #680]
  4093b8:	mov	x1, sp
  4093bc:	bl	40a13c <__fxstatat@plt+0x758c>
  4093c0:	mov	x5, x0
  4093c4:	b	4093e0 <__fxstatat@plt+0x6830>
  4093c8:	add	x20, x20, x0
  4093cc:	mov	w8, #0x20                  	// #32
  4093d0:	strh	w8, [x20], #1
  4093d4:	b	409408 <__fxstatat@plt+0x6858>
  4093d8:	adrp	x5, 418000 <_obstack_memory_used@@Base+0x54b8>
  4093dc:	add	x5, x5, #0xd0e
  4093e0:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x54b8>
  4093e4:	add	x3, x3, #0xef9
  4093e8:	mov	w1, #0x1                   	// #1
  4093ec:	mov	x2, #0xffffffffffffffff    	// #-1
  4093f0:	mov	x0, x20
  4093f4:	mov	w4, w21
  4093f8:	bl	402560 <__sprintf_chk@plt>
  4093fc:	mov	x0, x20
  409400:	bl	402550 <strlen@plt>
  409404:	add	x20, x20, x0
  409408:	ldr	x1, [x26, #1480]
  40940c:	add	x0, sp, #0x2b8
  409410:	add	x21, sp, #0x2b8
  409414:	bl	402ae0 <fputs_unlocked@plt>
  409418:	ldr	x8, [x25, #1896]
  40941c:	sub	x20, x20, x21
  409420:	adrp	x2, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409424:	add	x2, x2, #0x690
  409428:	add	x8, x8, x20
  40942c:	mov	x0, x19
  409430:	mov	w1, wzr
  409434:	mov	x3, x20
  409438:	str	x8, [x25, #1896]
  40943c:	bl	409524 <__fxstatat@plt+0x6974>
  409440:	ldr	w2, [x19, #152]
  409444:	cmp	w2, #0x6
  409448:	b.ne	4094a8 <__fxstatat@plt+0x68f8>  // b.any
  40944c:	ldr	x8, [x19, #8]
  409450:	cbz	x8, 4094c0 <__fxstatat@plt+0x6910>
  409454:	ldr	x1, [x26, #1480]
  409458:	mov	x21, x0
  40945c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  409460:	add	x0, x0, #0xefe
  409464:	bl	402ae0 <fputs_unlocked@plt>
  409468:	ldr	x8, [x25, #1896]
  40946c:	add	x9, x20, x21
  409470:	add	x3, x9, #0x4
  409474:	mov	w1, #0x1                   	// #1
  409478:	add	x8, x8, #0x4
  40947c:	mov	x0, x19
  409480:	mov	x2, xzr
  409484:	str	x8, [x25, #1896]
  409488:	bl	409524 <__fxstatat@plt+0x6974>
  40948c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409490:	ldr	w8, [x8, #1552]
  409494:	cbz	w8, 4094c0 <__fxstatat@plt+0x6910>
  409498:	ldr	w1, [x19, #156]
  40949c:	mov	w0, #0x1                   	// #1
  4094a0:	mov	w2, wzr
  4094a4:	b	4094bc <__fxstatat@plt+0x690c>
  4094a8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4094ac:	ldr	w8, [x8, #1552]
  4094b0:	cbz	w8, 4094c0 <__fxstatat@plt+0x6910>
  4094b4:	ldrb	w0, [x19, #168]
  4094b8:	ldr	w1, [x19, #40]
  4094bc:	bl	409624 <__fxstatat@plt+0x6a74>
  4094c0:	add	sp, sp, #0x1, lsl #12
  4094c4:	add	sp, sp, #0x100
  4094c8:	ldp	x20, x19, [sp, #80]
  4094cc:	ldp	x22, x21, [sp, #64]
  4094d0:	ldp	x24, x23, [sp, #48]
  4094d4:	ldp	x26, x25, [sp, #32]
  4094d8:	ldp	x28, x27, [sp, #16]
  4094dc:	ldp	x29, x30, [sp], #96
  4094e0:	ret
  4094e4:	bl	4028c0 <abort@plt>
  4094e8:	stp	x29, x30, [sp, #-16]!
  4094ec:	ldrb	w9, [x1, #168]
  4094f0:	mov	x29, sp
  4094f4:	cbz	w9, 409514 <__fxstatat@plt+0x6964>
  4094f8:	mov	x8, x0
  4094fc:	ldr	x0, [x1, #32]
  409500:	cbz	x0, 409514 <__fxstatat@plt+0x6964>
  409504:	mov	x1, x8
  409508:	bl	40d570 <__fxstatat@plt+0xa9c0>
  40950c:	ldp	x29, x30, [sp], #16
  409510:	ret
  409514:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  409518:	add	x0, x0, #0xd0e
  40951c:	ldp	x29, x30, [sp], #16
  409520:	ret
  409524:	stp	x29, x30, [sp, #-80]!
  409528:	tst	w1, #0x1
  40952c:	mov	w8, #0x8                   	// #8
  409530:	stp	x24, x23, [sp, #32]
  409534:	stp	x22, x21, [sp, #48]
  409538:	stp	x20, x19, [sp, #64]
  40953c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409540:	csel	x8, x8, xzr, ne  // ne = any
  409544:	str	x25, [sp, #16]
  409548:	ldrb	w25, [x9, #1536]
  40954c:	ldr	x23, [x0, x8]
  409550:	mov	x19, x3
  409554:	mov	w20, w1
  409558:	mov	x21, x0
  40955c:	mov	x22, x2
  409560:	mov	x29, sp
  409564:	cbz	w25, 409580 <__fxstatat@plt+0x69d0>
  409568:	and	w1, w20, #0x1
  40956c:	mov	x0, x21
  409570:	bl	409670 <__fxstatat@plt+0x6ac0>
  409574:	mov	x24, x0
  409578:	cbnz	w25, 409588 <__fxstatat@plt+0x69d8>
  40957c:	b	4095a0 <__fxstatat@plt+0x69f0>
  409580:	mov	x24, xzr
  409584:	cbz	w25, 4095a0 <__fxstatat@plt+0x69f0>
  409588:	cbz	x24, 409594 <__fxstatat@plt+0x69e4>
  40958c:	mov	w25, #0x1                   	// #1
  409590:	b	4095a0 <__fxstatat@plt+0x69f0>
  409594:	mov	w0, #0x4                   	// #4
  409598:	bl	40440c <__fxstatat@plt+0x185c>
  40959c:	mov	w25, w0
  4095a0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4095a4:	ldr	w2, [x21, #180]
  4095a8:	ldr	x1, [x8, #1920]
  4095ac:	ldr	x6, [x21, #16]
  4095b0:	mvn	w8, w20
  4095b4:	and	w4, w8, #0x1
  4095b8:	mov	x0, x23
  4095bc:	mov	x3, x24
  4095c0:	mov	x5, x22
  4095c4:	bl	4069ec <__fxstatat@plt+0x3e3c>
  4095c8:	mov	x20, x0
  4095cc:	bl	406ce4 <__fxstatat@plt+0x4134>
  4095d0:	tbz	w25, #0, 409608 <__fxstatat@plt+0x6a58>
  4095d4:	bl	405fb0 <__fxstatat@plt+0x3400>
  4095d8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4095dc:	ldr	x8, [x8, #2344]
  4095e0:	cbz	x8, 409608 <__fxstatat@plt+0x6a58>
  4095e4:	add	x10, x19, x20
  4095e8:	sub	x10, x10, #0x1
  4095ec:	udiv	x9, x19, x8
  4095f0:	udiv	x8, x10, x8
  4095f4:	cmp	x9, x8
  4095f8:	b.eq	409608 <__fxstatat@plt+0x6a58>  // b.none
  4095fc:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409600:	add	x0, x0, #0x4f8
  409604:	bl	405f40 <__fxstatat@plt+0x3390>
  409608:	mov	x0, x20
  40960c:	ldp	x20, x19, [sp, #64]
  409610:	ldp	x22, x21, [sp, #48]
  409614:	ldp	x24, x23, [sp, #32]
  409618:	ldr	x25, [sp, #16]
  40961c:	ldp	x29, x30, [sp], #80
  409620:	ret
  409624:	stp	x29, x30, [sp, #-32]!
  409628:	and	w0, w0, #0x1
  40962c:	str	x19, [sp, #16]
  409630:	mov	x29, sp
  409634:	bl	4098fc <__fxstatat@plt+0x6d4c>
  409638:	mov	w19, w0
  40963c:	tst	w0, #0xff
  409640:	b.eq	40965c <__fxstatat@plt+0x6aac>  // b.none
  409644:	and	w0, w19, #0xff
  409648:	bl	4027f0 <putchar_unlocked@plt>
  40964c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409650:	ldr	x9, [x8, #1896]
  409654:	add	x9, x9, #0x1
  409658:	str	x9, [x8, #1896]
  40965c:	tst	w19, #0xff
  409660:	ldr	x19, [sp, #16]
  409664:	cset	w0, ne  // ne = any
  409668:	ldp	x29, x30, [sp], #32
  40966c:	ret
  409670:	stp	x29, x30, [sp, #-64]!
  409674:	stp	x22, x21, [sp, #32]
  409678:	stp	x20, x19, [sp, #48]
  40967c:	mov	x20, x0
  409680:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409684:	stp	x24, x23, [sp, #16]
  409688:	mov	x29, sp
  40968c:	tbz	w1, #0, 4096a4 <__fxstatat@plt+0x6af4>
  409690:	ldrsb	w9, [x20, #169]
  409694:	ldr	x19, [x20, #8]
  409698:	add	x8, x20, #0x9c
  40969c:	sub	w22, w9, #0x1
  4096a0:	b	4096cc <__fxstatat@plt+0x6b1c>
  4096a4:	ldrb	w8, [x21, #1539]
  4096a8:	ldr	x19, [x20]
  4096ac:	cmp	w8, #0x1
  4096b0:	b.ne	4096c4 <__fxstatat@plt+0x6b14>  // b.any
  4096b4:	ldrb	w8, [x20, #169]
  4096b8:	cbz	w8, 4096c4 <__fxstatat@plt+0x6b14>
  4096bc:	add	x8, x20, #0x9c
  4096c0:	b	4096c8 <__fxstatat@plt+0x6b18>
  4096c4:	add	x8, x20, #0x28
  4096c8:	ldrb	w22, [x20, #169]
  4096cc:	ldr	w24, [x8]
  4096d0:	cmn	w22, #0x1
  4096d4:	b.ne	4096e8 <__fxstatat@plt+0x6b38>  // b.any
  4096d8:	mov	w0, #0xc                   	// #12
  4096dc:	mov	w23, #0xc                   	// #12
  4096e0:	bl	40440c <__fxstatat@plt+0x185c>
  4096e4:	tbnz	w0, #0, 409738 <__fxstatat@plt+0x6b88>
  4096e8:	ldrb	w8, [x20, #168]
  4096ec:	cbz	w8, 409728 <__fxstatat@plt+0x6b78>
  4096f0:	and	w8, w24, #0xf000
  4096f4:	sub	w8, w8, #0x1, lsl #12
  4096f8:	lsr	w8, w8, #12
  4096fc:	cmp	w8, #0xb
  409700:	b.hi	4097f0 <__fxstatat@plt+0x6c40>  // b.pmore
  409704:	adrp	x9, 414000 <_obstack_memory_used@@Base+0x14b8>
  409708:	add	x9, x9, #0xf11
  40970c:	adr	x10, 409720 <__fxstatat@plt+0x6b70>
  409710:	ldrb	w11, [x9, x8]
  409714:	add	x10, x10, x11, lsl #2
  409718:	mov	w23, #0x7                   	// #7
  40971c:	br	x10
  409720:	mov	w23, #0x8                   	// #8
  409724:	b	409738 <__fxstatat@plt+0x6b88>
  409728:	ldr	w8, [x20, #152]
  40972c:	adrp	x9, 416000 <_obstack_memory_used@@Base+0x34b8>
  409730:	add	x9, x9, #0xa00
  409734:	ldr	w23, [x9, x8, lsl #2]
  409738:	cmp	w23, #0x5
  40973c:	b.ne	409788 <__fxstatat@plt+0x6bd8>  // b.any
  409740:	mov	x0, x19
  409744:	bl	402550 <strlen@plt>
  409748:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40974c:	ldr	x24, [x8, #1408]
  409750:	cbz	x24, 40978c <__fxstatat@plt+0x6bdc>
  409754:	mov	x20, x0
  409758:	add	x19, x19, x0
  40975c:	b	409768 <__fxstatat@plt+0x6bb8>
  409760:	ldr	x24, [x24, #32]
  409764:	cbz	x24, 40978c <__fxstatat@plt+0x6bdc>
  409768:	ldr	x2, [x24]
  40976c:	cmp	x2, x20
  409770:	b.hi	409760 <__fxstatat@plt+0x6bb0>  // b.pmore
  409774:	ldr	x1, [x24, #8]
  409778:	sub	x0, x19, x2
  40977c:	bl	40a794 <__fxstatat@plt+0x7be4>
  409780:	cbnz	w0, 409760 <__fxstatat@plt+0x6bb0>
  409784:	b	40978c <__fxstatat@plt+0x6bdc>
  409788:	mov	x24, xzr
  40978c:	cbnz	w22, 4097b0 <__fxstatat@plt+0x6c00>
  409790:	cmp	w23, #0x7
  409794:	b.ne	4097b0 <__fxstatat@plt+0x6c00>  // b.any
  409798:	ldrb	w8, [x21, #1539]
  40979c:	tbnz	w8, #0, 4097ac <__fxstatat@plt+0x6bfc>
  4097a0:	mov	w0, #0xd                   	// #13
  4097a4:	bl	40440c <__fxstatat@plt+0x185c>
  4097a8:	tbz	w0, #0, 4097b0 <__fxstatat@plt+0x6c00>
  4097ac:	mov	w23, #0xd                   	// #13
  4097b0:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4097b4:	add	x9, x9, #0x388
  4097b8:	add	x8, x24, #0x10
  4097bc:	add	x9, x9, w23, uxtw #4
  4097c0:	cmp	x24, #0x0
  4097c4:	csel	x8, x9, x8, eq  // eq = none
  4097c8:	ldr	x9, [x8, #8]
  4097cc:	ldp	x20, x19, [sp, #48]
  4097d0:	ldp	x22, x21, [sp, #32]
  4097d4:	ldp	x24, x23, [sp, #16]
  4097d8:	cmp	x9, #0x0
  4097dc:	csel	x0, xzr, x8, eq  // eq = none
  4097e0:	ldp	x29, x30, [sp], #64
  4097e4:	ret
  4097e8:	mov	w23, #0xb                   	// #11
  4097ec:	b	409738 <__fxstatat@plt+0x6b88>
  4097f0:	mov	w23, #0xd                   	// #13
  4097f4:	b	409738 <__fxstatat@plt+0x6b88>
  4097f8:	tst	w24, #0x200
  4097fc:	cset	w20, eq  // eq = none
  409800:	tbz	w24, #1, 409818 <__fxstatat@plt+0x6c68>
  409804:	tbnz	w20, #0, 409818 <__fxstatat@plt+0x6c68>
  409808:	mov	w0, #0x14                  	// #20
  40980c:	mov	w23, #0x14                  	// #20
  409810:	bl	40440c <__fxstatat@plt+0x185c>
  409814:	tbnz	w0, #0, 409738 <__fxstatat@plt+0x6b88>
  409818:	tbnz	w24, #1, 4098c0 <__fxstatat@plt+0x6d10>
  40981c:	tbnz	w24, #9, 4098e0 <__fxstatat@plt+0x6d30>
  409820:	mov	w23, #0x6                   	// #6
  409824:	b	409738 <__fxstatat@plt+0x6b88>
  409828:	mov	w23, #0xa                   	// #10
  40982c:	b	409738 <__fxstatat@plt+0x6b88>
  409830:	tbz	w24, #11, 409844 <__fxstatat@plt+0x6c94>
  409834:	mov	w0, #0x10                  	// #16
  409838:	mov	w23, #0x10                  	// #16
  40983c:	bl	40440c <__fxstatat@plt+0x185c>
  409840:	tbnz	w0, #0, 409738 <__fxstatat@plt+0x6b88>
  409844:	tbz	w24, #10, 409858 <__fxstatat@plt+0x6ca8>
  409848:	mov	w0, #0x11                  	// #17
  40984c:	mov	w23, #0x11                  	// #17
  409850:	bl	40440c <__fxstatat@plt+0x185c>
  409854:	tbnz	w0, #0, 409738 <__fxstatat@plt+0x6b88>
  409858:	mov	w0, #0x15                  	// #21
  40985c:	bl	40440c <__fxstatat@plt+0x185c>
  409860:	tbz	w0, #0, 40987c <__fxstatat@plt+0x6ccc>
  409864:	ldrb	w8, [x20, #176]
  409868:	cbz	w8, 40987c <__fxstatat@plt+0x6ccc>
  40986c:	mov	w23, #0x15                  	// #21
  409870:	b	409738 <__fxstatat@plt+0x6b88>
  409874:	mov	w23, #0x9                   	// #9
  409878:	b	409738 <__fxstatat@plt+0x6b88>
  40987c:	mov	w8, #0x49                  	// #73
  409880:	tst	w24, w8
  409884:	b.eq	409898 <__fxstatat@plt+0x6ce8>  // b.none
  409888:	mov	w0, #0xe                   	// #14
  40988c:	mov	w23, #0xe                   	// #14
  409890:	bl	40440c <__fxstatat@plt+0x185c>
  409894:	tbnz	w0, #0, 409738 <__fxstatat@plt+0x6b88>
  409898:	ldr	w8, [x20, #44]
  40989c:	mov	w23, #0x5                   	// #5
  4098a0:	cmp	w8, #0x2
  4098a4:	b.cc	409738 <__fxstatat@plt+0x6b88>  // b.lo, b.ul, b.last
  4098a8:	mov	w0, #0x16                  	// #22
  4098ac:	mov	w20, #0x16                  	// #22
  4098b0:	bl	40440c <__fxstatat@plt+0x185c>
  4098b4:	tst	w0, #0x1
  4098b8:	csel	w23, w20, w23, ne  // ne = any
  4098bc:	b	409738 <__fxstatat@plt+0x6b88>
  4098c0:	mov	w0, #0x13                  	// #19
  4098c4:	mov	w23, #0x13                  	// #19
  4098c8:	bl	40440c <__fxstatat@plt+0x185c>
  4098cc:	tst	w0, #0x1
  4098d0:	mov	w9, #0x6                   	// #6
  4098d4:	orr	w8, w0, w20
  4098d8:	csel	w23, w23, w9, ne  // ne = any
  4098dc:	tbnz	w8, #0, 409738 <__fxstatat@plt+0x6b88>
  4098e0:	mov	w0, #0x12                  	// #18
  4098e4:	mov	w20, #0x12                  	// #18
  4098e8:	bl	40440c <__fxstatat@plt+0x185c>
  4098ec:	tst	w0, #0x1
  4098f0:	mov	w8, #0x6                   	// #6
  4098f4:	csel	w23, w20, w8, ne  // ne = any
  4098f8:	b	409738 <__fxstatat@plt+0x6b88>
  4098fc:	tbz	w0, #0, 409924 <__fxstatat@plt+0x6d74>
  409900:	and	w8, w1, #0xf000
  409904:	cmp	w8, #0x8, lsl #12
  409908:	b.eq	40992c <__fxstatat@plt+0x6d7c>  // b.none
  40990c:	tbz	w0, #0, 409960 <__fxstatat@plt+0x6db0>
  409910:	and	w8, w1, #0xf000
  409914:	cmp	w8, #0x4, lsl #12
  409918:	b.ne	409974 <__fxstatat@plt+0x6dc4>  // b.any
  40991c:	mov	w0, #0x2f                  	// #47
  409920:	ret
  409924:	cmp	w2, #0x5
  409928:	b.ne	40990c <__fxstatat@plt+0x6d5c>  // b.any
  40992c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409930:	ldr	w8, [x8, #1552]
  409934:	mov	w9, #0x49                  	// #73
  409938:	cmp	w8, #0x3
  40993c:	cset	w8, ne  // ne = any
  409940:	tst	w1, w9
  409944:	orn	w8, w8, w0
  409948:	cset	w9, eq  // eq = none
  40994c:	orr	w8, w9, w8
  409950:	tst	w8, #0x1
  409954:	mov	w8, #0x2a                  	// #42
  409958:	csel	w0, wzr, w8, ne  // ne = any
  40995c:	ret
  409960:	cmp	w2, #0x3
  409964:	mov	w8, #0x2f                  	// #47
  409968:	b.eq	409988 <__fxstatat@plt+0x6dd8>  // b.none
  40996c:	cmp	w2, #0x9
  409970:	b.eq	409988 <__fxstatat@plt+0x6dd8>  // b.none
  409974:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409978:	ldr	w8, [x8, #1552]
  40997c:	cmp	w8, #0x1
  409980:	b.ne	409990 <__fxstatat@plt+0x6de0>  // b.any
  409984:	mov	w8, wzr
  409988:	mov	w0, w8
  40998c:	ret
  409990:	tbz	w0, #0, 4099a8 <__fxstatat@plt+0x6df8>
  409994:	and	w8, w1, #0xf000
  409998:	cmp	w8, #0xa, lsl #12
  40999c:	b.ne	4099b8 <__fxstatat@plt+0x6e08>  // b.any
  4099a0:	mov	w0, #0x40                  	// #64
  4099a4:	ret
  4099a8:	cmp	w2, #0x6
  4099ac:	b.ne	4099b8 <__fxstatat@plt+0x6e08>  // b.any
  4099b0:	mov	w0, #0x40                  	// #64
  4099b4:	ret
  4099b8:	tbz	w0, #0, 4099d0 <__fxstatat@plt+0x6e20>
  4099bc:	and	w8, w1, #0xf000
  4099c0:	cmp	w8, #0x1, lsl #12
  4099c4:	b.ne	4099e0 <__fxstatat@plt+0x6e30>  // b.any
  4099c8:	mov	w0, #0x7c                  	// #124
  4099cc:	ret
  4099d0:	cmp	w2, #0x1
  4099d4:	b.ne	4099e0 <__fxstatat@plt+0x6e30>  // b.any
  4099d8:	mov	w0, #0x7c                  	// #124
  4099dc:	ret
  4099e0:	tbz	w0, #0, 4099f8 <__fxstatat@plt+0x6e48>
  4099e4:	and	w8, w1, #0xf000
  4099e8:	cmp	w8, #0xc, lsl #12
  4099ec:	b.ne	409984 <__fxstatat@plt+0x6dd4>  // b.any
  4099f0:	mov	w0, #0x3d                  	// #61
  4099f4:	ret
  4099f8:	cmp	w2, #0x7
  4099fc:	b.ne	409984 <__fxstatat@plt+0x6dd4>  // b.any
  409a00:	mov	w0, #0x3d                  	// #61
  409a04:	ret
  409a08:	stp	x29, x30, [sp, #-48]!
  409a0c:	str	x28, [sp, #16]
  409a10:	stp	x20, x19, [sp, #32]
  409a14:	mov	x29, sp
  409a18:	sub	sp, sp, #0x290
  409a1c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409a20:	ldrb	w8, [x8, #2322]
  409a24:	mov	x19, x0
  409a28:	cmp	w8, #0x1
  409a2c:	b.ne	409a54 <__fxstatat@plt+0x6ea4>  // b.any
  409a30:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409a34:	ldr	w8, [x8, #1540]
  409a38:	cmp	w8, #0x4
  409a3c:	b.ne	409a5c <__fxstatat@plt+0x6eac>  // b.any
  409a40:	ldr	x0, [x19, #32]
  409a44:	add	x1, sp, #0x4
  409a48:	bl	40d570 <__fxstatat@plt+0xa9c0>
  409a4c:	bl	402550 <strlen@plt>
  409a50:	b	409a64 <__fxstatat@plt+0x6eb4>
  409a54:	mov	x20, xzr
  409a58:	b	409a68 <__fxstatat@plt+0x6eb8>
  409a5c:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  409a60:	ldrsw	x0, [x8, #1436]
  409a64:	add	x20, x0, #0x1
  409a68:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409a6c:	ldrb	w8, [x8, #1669]
  409a70:	cmp	w8, #0x1
  409a74:	b.ne	409ad4 <__fxstatat@plt+0x6f24>  // b.any
  409a78:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409a7c:	ldr	w8, [x8, #1540]
  409a80:	cmp	w8, #0x4
  409a84:	b.ne	409ab4 <__fxstatat@plt+0x6f04>  // b.any
  409a88:	ldrb	w8, [x19, #168]
  409a8c:	cbz	w8, 409ac0 <__fxstatat@plt+0x6f10>
  409a90:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409a94:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409a98:	ldr	x0, [x19, #88]
  409a9c:	ldr	w2, [x8, #2364]
  409aa0:	ldr	x4, [x9, #2376]
  409aa4:	add	x1, sp, #0x4
  409aa8:	mov	w3, #0x200                 	// #512
  409aac:	bl	40c910 <__fxstatat@plt+0x9d60>
  409ab0:	b	409ac8 <__fxstatat@plt+0x6f18>
  409ab4:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  409ab8:	ldrsw	x0, [x8, #1440]
  409abc:	b	409acc <__fxstatat@plt+0x6f1c>
  409ac0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  409ac4:	add	x0, x0, #0xd0e
  409ac8:	bl	402550 <strlen@plt>
  409acc:	add	x8, x20, x0
  409ad0:	add	x20, x8, #0x1
  409ad4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409ad8:	ldrb	w8, [x8, #1668]
  409adc:	cmp	w8, #0x1
  409ae0:	b.ne	409b10 <__fxstatat@plt+0x6f60>  // b.any
  409ae4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409ae8:	ldr	w8, [x8, #1540]
  409aec:	cmp	w8, #0x4
  409af0:	b.ne	409b00 <__fxstatat@plt+0x6f50>  // b.any
  409af4:	ldr	x0, [x19, #160]
  409af8:	bl	402550 <strlen@plt>
  409afc:	b	409b08 <__fxstatat@plt+0x6f58>
  409b00:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  409b04:	ldrsw	x0, [x8, #1460]
  409b08:	add	x8, x20, x0
  409b0c:	add	x20, x8, #0x1
  409b10:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409b14:	ldr	x0, [x19]
  409b18:	ldr	x1, [x8, #1920]
  409b1c:	ldr	w2, [x19, #180]
  409b20:	bl	409b64 <__fxstatat@plt+0x6fb4>
  409b24:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409b28:	ldr	w8, [x8, #1552]
  409b2c:	add	x20, x0, x20
  409b30:	cbz	w8, 409b4c <__fxstatat@plt+0x6f9c>
  409b34:	ldrb	w0, [x19, #168]
  409b38:	ldr	w1, [x19, #40]
  409b3c:	ldr	w2, [x19, #152]
  409b40:	bl	4098fc <__fxstatat@plt+0x6d4c>
  409b44:	tst	w0, #0xff
  409b48:	cinc	x20, x20, ne  // ne = any
  409b4c:	mov	x0, x20
  409b50:	add	sp, sp, #0x290
  409b54:	ldp	x20, x19, [sp, #32]
  409b58:	ldr	x28, [sp, #16]
  409b5c:	ldp	x29, x30, [sp], #48
  409b60:	ret
  409b64:	stp	x29, x30, [sp, #-48]!
  409b68:	str	x28, [sp, #16]
  409b6c:	stp	x20, x19, [sp, #32]
  409b70:	mov	x29, sp
  409b74:	sub	sp, sp, #0x2, lsl #12
  409b78:	sub	sp, sp, #0x10
  409b7c:	mov	x19, x0
  409b80:	mov	w3, w2
  409b84:	mov	x2, x1
  409b88:	add	x20, sp, #0x10
  409b8c:	add	x0, x29, #0x18
  409b90:	add	x4, sp, #0x8
  409b94:	add	x5, sp, #0x4
  409b98:	mov	x1, x19
  409b9c:	str	x20, [x29, #24]
  409ba0:	bl	406da8 <__fxstatat@plt+0x41f8>
  409ba4:	ldr	x0, [x29, #24]
  409ba8:	cmp	x0, x20
  409bac:	b.eq	409bbc <__fxstatat@plt+0x700c>  // b.none
  409bb0:	cmp	x0, x19
  409bb4:	b.eq	409bbc <__fxstatat@plt+0x700c>  // b.none
  409bb8:	bl	402990 <free@plt>
  409bbc:	ldrb	w8, [sp, #4]
  409bc0:	ldr	x9, [sp, #8]
  409bc4:	add	x0, x9, x8
  409bc8:	add	sp, sp, #0x2, lsl #12
  409bcc:	add	sp, sp, #0x10
  409bd0:	ldp	x20, x19, [sp, #32]
  409bd4:	ldr	x28, [sp, #16]
  409bd8:	ldp	x29, x30, [sp], #48
  409bdc:	ret
  409be0:	stp	x29, x30, [sp, #-80]!
  409be4:	stp	x22, x21, [sp, #48]
  409be8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409bec:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409bf0:	ldr	x8, [x8, #2392]
  409bf4:	ldr	x9, [x21, #1888]
  409bf8:	str	x25, [sp, #16]
  409bfc:	stp	x24, x23, [sp, #32]
  409c00:	stp	x20, x19, [sp, #64]
  409c04:	cmp	x8, x9
  409c08:	mov	x29, sp
  409c0c:	mov	w19, w0
  409c10:	csel	x20, x8, x9, cc  // cc = lo, ul, last
  409c14:	bl	409db4 <__fxstatat@plt+0x7204>
  409c18:	ldr	x8, [x21, #1888]
  409c1c:	adrp	x22, 42c000 <__progname@@GLIBC_2.17+0xa30>
  409c20:	cbz	x8, 409ce8 <__fxstatat@plt+0x7138>
  409c24:	mov	x23, xzr
  409c28:	adrp	x24, 42c000 <__progname@@GLIBC_2.17+0xa30>
  409c2c:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409c30:	b	409c44 <__fxstatat@plt+0x7094>
  409c34:	ldr	x8, [x21, #1888]
  409c38:	add	x23, x23, #0x1
  409c3c:	cmp	x23, x8
  409c40:	b.cs	409ce8 <__fxstatat@plt+0x7138>  // b.hs, b.nlast
  409c44:	ldr	x8, [x24, #1424]
  409c48:	ldr	x0, [x8, x23, lsl #3]
  409c4c:	bl	409a08 <__fxstatat@plt+0x6e58>
  409c50:	cbz	x20, 409c34 <__fxstatat@plt+0x7084>
  409c54:	ldr	x11, [x22, #1824]
  409c58:	ldr	x9, [x21, #1888]
  409c5c:	ldr	x10, [x25, #2344]
  409c60:	mov	x8, xzr
  409c64:	add	x11, x11, #0x8
  409c68:	b	409c7c <__fxstatat@plt+0x70cc>
  409c6c:	add	x8, x8, #0x1
  409c70:	cmp	x8, x20
  409c74:	add	x11, x11, #0x18
  409c78:	b.cs	409c34 <__fxstatat@plt+0x7084>  // b.hs, b.nlast
  409c7c:	ldurb	w12, [x11, #-8]
  409c80:	cbz	w12, 409c6c <__fxstatat@plt+0x70bc>
  409c84:	tbz	w19, #0, 409c9c <__fxstatat@plt+0x70ec>
  409c88:	add	x12, x9, x8
  409c8c:	add	x13, x8, #0x1
  409c90:	udiv	x12, x12, x13
  409c94:	udiv	x12, x23, x12
  409c98:	b	409ca8 <__fxstatat@plt+0x70f8>
  409c9c:	add	x12, x8, #0x1
  409ca0:	udiv	x13, x23, x12
  409ca4:	msub	x12, x13, x12, x23
  409ca8:	ldr	x13, [x11, #8]
  409cac:	cmp	x8, x12
  409cb0:	cset	w14, ne  // ne = any
  409cb4:	add	x14, x0, w14, uxtw #1
  409cb8:	ldr	x15, [x13, x12, lsl #3]
  409cbc:	subs	x15, x14, x15
  409cc0:	b.ls	409c6c <__fxstatat@plt+0x70bc>  // b.plast
  409cc4:	ldr	x16, [x11]
  409cc8:	add	x15, x15, x16
  409ccc:	str	x15, [x11]
  409cd0:	str	x14, [x13, x12, lsl #3]
  409cd4:	ldr	x12, [x11]
  409cd8:	cmp	x12, x10
  409cdc:	cset	w12, cc  // cc = lo, ul, last
  409ce0:	sturb	w12, [x11, #-8]
  409ce4:	b	409c6c <__fxstatat@plt+0x70bc>
  409ce8:	ldr	x8, [x22, #1824]
  409cec:	mov	w9, #0x18                  	// #24
  409cf0:	madd	x8, x20, x9, x8
  409cf4:	sub	x8, x8, #0x18
  409cf8:	mov	x0, x20
  409cfc:	cmp	x20, #0x2
  409d00:	b.cc	409d10 <__fxstatat@plt+0x7160>  // b.lo, b.ul, b.last
  409d04:	ldrb	w9, [x8], #-24
  409d08:	sub	x20, x0, #0x1
  409d0c:	cbz	w9, 409cf8 <__fxstatat@plt+0x7148>
  409d10:	ldp	x20, x19, [sp, #64]
  409d14:	ldp	x22, x21, [sp, #48]
  409d18:	ldp	x24, x23, [sp, #32]
  409d1c:	ldr	x25, [sp, #16]
  409d20:	ldp	x29, x30, [sp], #80
  409d24:	ret
  409d28:	stp	x29, x30, [sp, #-48]!
  409d2c:	cmp	x0, x1
  409d30:	str	x21, [sp, #16]
  409d34:	stp	x20, x19, [sp, #32]
  409d38:	mov	x29, sp
  409d3c:	b.cs	409da4 <__fxstatat@plt+0x71f4>  // b.hs, b.nlast
  409d40:	mov	x19, x1
  409d44:	mov	x20, x0
  409d48:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409d4c:	b	409d68 <__fxstatat@plt+0x71b8>
  409d50:	mov	w0, #0x20                  	// #32
  409d54:	bl	4027f0 <putchar_unlocked@plt>
  409d58:	mov	w8, #0x1                   	// #1
  409d5c:	add	x20, x8, x20
  409d60:	cmp	x20, x19
  409d64:	b.cs	409da4 <__fxstatat@plt+0x71f4>  // b.hs, b.nlast
  409d68:	ldr	x8, [x21, #2352]
  409d6c:	cbz	x8, 409d50 <__fxstatat@plt+0x71a0>
  409d70:	add	x10, x20, #0x1
  409d74:	udiv	x9, x19, x8
  409d78:	udiv	x8, x10, x8
  409d7c:	cmp	x9, x8
  409d80:	b.ls	409d50 <__fxstatat@plt+0x71a0>  // b.plast
  409d84:	mov	w0, #0x9                   	// #9
  409d88:	bl	4027f0 <putchar_unlocked@plt>
  409d8c:	ldr	x8, [x21, #2352]
  409d90:	neg	x10, x20
  409d94:	udiv	x9, x20, x8
  409d98:	madd	x9, x9, x8, x10
  409d9c:	add	x8, x8, x9
  409da0:	b	409d5c <__fxstatat@plt+0x71ac>
  409da4:	ldp	x20, x19, [sp, #32]
  409da8:	ldr	x21, [sp, #16]
  409dac:	ldp	x29, x30, [sp], #48
  409db0:	ret
  409db4:	stp	x29, x30, [sp, #-48]!
  409db8:	stp	x22, x21, [sp, #16]
  409dbc:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409dc0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409dc4:	ldr	x1, [x22, #2392]
  409dc8:	ldr	x8, [x8, #1888]
  409dcc:	adrp	x21, 42c000 <__progname@@GLIBC_2.17+0xa30>
  409dd0:	ldr	x9, [x21, #1832]
  409dd4:	stp	x20, x19, [sp, #32]
  409dd8:	cmp	x1, x8
  409ddc:	csel	x19, x1, x8, cc  // cc = lo, ul, last
  409de0:	cmp	x9, x19
  409de4:	adrp	x20, 42c000 <__progname@@GLIBC_2.17+0xa30>
  409de8:	mov	x29, sp
  409dec:	b.cs	409e90 <__fxstatat@plt+0x72e0>  // b.hs, b.nlast
  409df0:	ldr	x0, [x20, #1824]
  409df4:	cmp	x19, x1, lsr #1
  409df8:	b.cs	409e14 <__fxstatat@plt+0x7264>  // b.hs, b.nlast
  409dfc:	mov	w2, #0x30                  	// #48
  409e00:	mov	x1, x19
  409e04:	bl	411b70 <__fxstatat@plt+0xefc0>
  409e08:	str	x0, [x20, #1824]
  409e0c:	lsl	x22, x19, #1
  409e10:	b	409e24 <__fxstatat@plt+0x7274>
  409e14:	mov	w2, #0x18                  	// #24
  409e18:	bl	411b70 <__fxstatat@plt+0xefc0>
  409e1c:	ldr	x22, [x22, #2392]
  409e20:	str	x0, [x20, #1824]
  409e24:	ldr	x9, [x21, #1832]
  409e28:	sub	x8, x22, x9
  409e2c:	add	x9, x22, x9
  409e30:	add	x9, x9, #0x1
  409e34:	umulh	x10, x8, x9
  409e38:	cmp	xzr, x10
  409e3c:	cset	w10, ne  // ne = any
  409e40:	cmp	x9, x22
  409e44:	b.cc	409ef4 <__fxstatat@plt+0x7344>  // b.lo, b.ul, b.last
  409e48:	cbnz	w10, 409ef4 <__fxstatat@plt+0x7344>
  409e4c:	mul	x8, x8, x9
  409e50:	lsr	x0, x8, #1
  409e54:	mov	w1, #0x8                   	// #8
  409e58:	bl	411b18 <__fxstatat@plt+0xef68>
  409e5c:	ldr	x8, [x21, #1832]
  409e60:	cmp	x8, x22
  409e64:	b.cs	409e8c <__fxstatat@plt+0x72dc>  // b.hs, b.nlast
  409e68:	ldr	x9, [x20, #1824]
  409e6c:	mov	w10, #0x18                  	// #24
  409e70:	madd	x9, x8, x10, x9
  409e74:	add	x9, x9, #0x10
  409e78:	add	x8, x8, #0x1
  409e7c:	str	x0, [x9], #24
  409e80:	cmp	x22, x8
  409e84:	add	x0, x0, x8, lsl #3
  409e88:	b.ne	409e78 <__fxstatat@plt+0x72c8>  // b.any
  409e8c:	str	x22, [x21, #1832]
  409e90:	cbz	x19, 409ee4 <__fxstatat@plt+0x7334>
  409e94:	ldr	x9, [x20, #1824]
  409e98:	mov	x8, xzr
  409e9c:	mov	w10, #0x1                   	// #1
  409ea0:	mov	w11, #0x18                  	// #24
  409ea4:	mov	w12, #0x3                   	// #3
  409ea8:	mov	w13, #0x1                   	// #1
  409eac:	madd	x16, x8, x11, x9
  409eb0:	ldr	x15, [x16, #16]
  409eb4:	add	x8, x8, #0x1
  409eb8:	mov	x14, xzr
  409ebc:	add	x17, x8, x8, lsl #1
  409ec0:	strb	w10, [x16]
  409ec4:	str	x17, [x16, #8]
  409ec8:	str	x12, [x15, x14, lsl #3]
  409ecc:	add	x14, x14, #0x1
  409ed0:	cmp	x13, x14
  409ed4:	b.ne	409ec8 <__fxstatat@plt+0x7318>  // b.any
  409ed8:	cmp	x8, x19
  409edc:	add	x13, x13, #0x1
  409ee0:	b.cc	409eac <__fxstatat@plt+0x72fc>  // b.lo, b.ul, b.last
  409ee4:	ldp	x20, x19, [sp, #32]
  409ee8:	ldp	x22, x21, [sp, #16]
  409eec:	ldp	x29, x30, [sp], #48
  409ef0:	ret
  409ef4:	bl	411d48 <__fxstatat@plt+0xf198>
  409ef8:	stp	x29, x30, [sp, #-32]!
  409efc:	stp	x20, x19, [sp, #16]
  409f00:	mov	w19, w1
  409f04:	mov	w20, w0
  409f08:	mov	x29, sp
  409f0c:	tbz	w2, #0, 409f24 <__fxstatat@plt+0x7374>
  409f10:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409f14:	ldrb	w8, [x8, #2321]
  409f18:	tbz	w8, #0, 409f30 <__fxstatat@plt+0x7380>
  409f1c:	mov	x0, xzr
  409f20:	b	409f38 <__fxstatat@plt+0x7388>
  409f24:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  409f28:	add	x0, x0, #0xd0e
  409f2c:	b	409f38 <__fxstatat@plt+0x7388>
  409f30:	mov	w0, w20
  409f34:	bl	40d198 <__fxstatat@plt+0xa5e8>
  409f38:	mov	w1, w20
  409f3c:	mov	w2, w19
  409f40:	bl	409fa8 <__fxstatat@plt+0x73f8>
  409f44:	ldp	x20, x19, [sp, #16]
  409f48:	ldp	x29, x30, [sp], #32
  409f4c:	ret
  409f50:	stp	x29, x30, [sp, #-32]!
  409f54:	stp	x20, x19, [sp, #16]
  409f58:	mov	w19, w1
  409f5c:	mov	w20, w0
  409f60:	mov	x29, sp
  409f64:	tbz	w2, #0, 409f7c <__fxstatat@plt+0x73cc>
  409f68:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409f6c:	ldrb	w8, [x8, #2321]
  409f70:	tbz	w8, #0, 409f88 <__fxstatat@plt+0x73d8>
  409f74:	mov	x0, xzr
  409f78:	b	409f90 <__fxstatat@plt+0x73e0>
  409f7c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  409f80:	add	x0, x0, #0xd0e
  409f84:	b	409f90 <__fxstatat@plt+0x73e0>
  409f88:	mov	w0, w20
  409f8c:	bl	40d33c <__fxstatat@plt+0xa78c>
  409f90:	mov	w1, w20
  409f94:	mov	w2, w19
  409f98:	bl	409fa8 <__fxstatat@plt+0x73f8>
  409f9c:	ldp	x20, x19, [sp, #16]
  409fa0:	ldp	x29, x30, [sp], #32
  409fa4:	ret
  409fa8:	stp	x29, x30, [sp, #-48]!
  409fac:	stp	x20, x19, [sp, #32]
  409fb0:	mov	w19, w2
  409fb4:	str	x21, [sp, #16]
  409fb8:	mov	x29, sp
  409fbc:	cbz	x0, 40a00c <__fxstatat@plt+0x745c>
  409fc0:	mov	w1, wzr
  409fc4:	mov	x20, x0
  409fc8:	bl	40da50 <__fxstatat@plt+0xaea0>
  409fcc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  409fd0:	ldr	x1, [x8, #1480]
  409fd4:	sub	w8, w19, w0
  409fd8:	mov	x0, x20
  409fdc:	bic	w21, w8, w8, asr #31
  409fe0:	bl	402ae0 <fputs_unlocked@plt>
  409fe4:	mov	x0, x20
  409fe8:	bl	402550 <strlen@plt>
  409fec:	mov	x19, x0
  409ff0:	add	w20, w21, #0x1
  409ff4:	mov	w0, #0x20                  	// #32
  409ff8:	bl	4027f0 <putchar_unlocked@plt>
  409ffc:	subs	w20, w20, #0x1
  40a000:	b.ne	409ff4 <__fxstatat@plt+0x7444>  // b.any
  40a004:	add	x8, x19, x21
  40a008:	b	40a028 <__fxstatat@plt+0x7478>
  40a00c:	mov	x3, x1
  40a010:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x54b8>
  40a014:	add	x1, x1, #0xf03
  40a018:	mov	w0, #0x1                   	// #1
  40a01c:	mov	w2, w19
  40a020:	bl	4027b0 <__printf_chk@plt>
  40a024:	sxtw	x8, w19
  40a028:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40a02c:	ldr	x10, [x9, #1896]
  40a030:	ldp	x20, x19, [sp, #32]
  40a034:	ldr	x21, [sp, #16]
  40a038:	add	x8, x8, x10
  40a03c:	add	x8, x8, #0x1
  40a040:	str	x8, [x9, #1896]
  40a044:	ldp	x29, x30, [sp], #48
  40a048:	ret
  40a04c:	stp	x29, x30, [sp, #-16]!
  40a050:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40a054:	ldrb	w8, [x8, #1392]
  40a058:	mov	w5, w4
  40a05c:	mov	x4, x3
  40a060:	mov	x3, x2
  40a064:	cmp	w8, #0x1
  40a068:	and	x8, x1, #0x1
  40a06c:	mov	x29, sp
  40a070:	b.ne	40a090 <__fxstatat@plt+0x74e0>  // b.any
  40a074:	ldrsw	x9, [x3, #16]
  40a078:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40a07c:	mov	w10, #0x600                 	// #1536
  40a080:	add	x11, x11, #0x970
  40a084:	madd	x8, x8, x10, x11
  40a088:	add	x2, x8, x9, lsl #7
  40a08c:	b	40a09c <__fxstatat@plt+0x74ec>
  40a090:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40a094:	add	x9, x9, #0x510
  40a098:	ldr	x2, [x9, x8, lsl #3]
  40a09c:	mov	w1, #0x3e9                 	// #1001
  40a0a0:	bl	40df80 <__fxstatat@plt+0xb3d0>
  40a0a4:	ldp	x29, x30, [sp], #16
  40a0a8:	ret
  40a0ac:	stp	x29, x30, [sp, #-48]!
  40a0b0:	str	x28, [sp, #16]
  40a0b4:	stp	x20, x19, [sp, #32]
  40a0b8:	mov	x29, sp
  40a0bc:	sub	sp, sp, #0x430
  40a0c0:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40a0c4:	ldr	w8, [x19, #1316]
  40a0c8:	tbz	w8, #31, 40a124 <__fxstatat@plt+0x7574>
  40a0cc:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40a0d0:	ldr	x0, [x20, #1656]
  40a0d4:	add	x1, x29, #0x18
  40a0d8:	sub	x2, x29, #0x38
  40a0dc:	str	xzr, [x29, #24]
  40a0e0:	bl	412c9c <_obstack_memory_used@@Base+0x154>
  40a0e4:	cbz	x0, 40a118 <__fxstatat@plt+0x7568>
  40a0e8:	ldr	x3, [x20, #1656]
  40a0ec:	add	x0, sp, #0xc
  40a0f0:	sub	x2, x29, #0x38
  40a0f4:	mov	w1, wzr
  40a0f8:	mov	w4, wzr
  40a0fc:	bl	40a04c <__fxstatat@plt+0x749c>
  40a100:	cbz	x0, 40a118 <__fxstatat@plt+0x7568>
  40a104:	mov	x1, x0
  40a108:	add	x0, sp, #0xc
  40a10c:	mov	w2, wzr
  40a110:	bl	40da84 <__fxstatat@plt+0xaed4>
  40a114:	str	w0, [x19, #1316]
  40a118:	ldr	w8, [x19, #1316]
  40a11c:	tbz	w8, #31, 40a124 <__fxstatat@plt+0x7574>
  40a120:	str	wzr, [x19, #1316]
  40a124:	ldr	w0, [x19, #1316]
  40a128:	add	sp, sp, #0x430
  40a12c:	ldp	x20, x19, [sp, #32]
  40a130:	ldr	x28, [sp, #16]
  40a134:	ldp	x29, x30, [sp], #48
  40a138:	ret
  40a13c:	stp	x29, x30, [sp, #-16]!
  40a140:	mov	x29, sp
  40a144:	bl	40d4e0 <__fxstatat@plt+0xa930>
  40a148:	ldp	x29, x30, [sp], #16
  40a14c:	ret
  40a150:	stp	x29, x30, [sp, #-80]!
  40a154:	cmp	x1, #0x401
  40a158:	mov	w8, #0x401                 	// #1025
  40a15c:	stp	x26, x25, [sp, #16]
  40a160:	stp	x20, x19, [sp, #64]
  40a164:	mov	x19, x0
  40a168:	csinc	x20, x8, x1, cs  // cs = hs, nlast
  40a16c:	mov	w25, #0xc                   	// #12
  40a170:	stp	x24, x23, [sp, #32]
  40a174:	stp	x22, x21, [sp, #48]
  40a178:	mov	x29, sp
  40a17c:	b	40a18c <__fxstatat@plt+0x75dc>
  40a180:	mov	w8, wzr
  40a184:	mov	x21, xzr
  40a188:	tbz	w8, #0, 40a240 <__fxstatat@plt+0x7690>
  40a18c:	mov	x0, x20
  40a190:	bl	402730 <malloc@plt>
  40a194:	cbz	x0, 40a180 <__fxstatat@plt+0x75d0>
  40a198:	mov	x22, x0
  40a19c:	mov	x0, x19
  40a1a0:	mov	x1, x22
  40a1a4:	mov	x2, x20
  40a1a8:	bl	4025f0 <readlink@plt>
  40a1ac:	mov	x23, x0
  40a1b0:	tbz	x0, #63, 40a1c4 <__fxstatat@plt+0x7614>
  40a1b4:	bl	402b40 <__errno_location@plt>
  40a1b8:	ldr	w26, [x0]
  40a1bc:	cmp	w26, #0x22
  40a1c0:	b.ne	40a210 <__fxstatat@plt+0x7660>  // b.any
  40a1c4:	cmp	x23, x20
  40a1c8:	b.cs	40a1dc <__fxstatat@plt+0x762c>  // b.hs, b.nlast
  40a1cc:	mov	w8, wzr
  40a1d0:	strb	wzr, [x22, x23]
  40a1d4:	mov	x21, x22
  40a1d8:	b	40a188 <__fxstatat@plt+0x75d8>
  40a1dc:	mov	x0, x22
  40a1e0:	bl	402990 <free@plt>
  40a1e4:	lsr	x8, x20, #62
  40a1e8:	cbnz	x8, 40a1f8 <__fxstatat@plt+0x7648>
  40a1ec:	lsl	x20, x20, #1
  40a1f0:	mov	w8, #0x1                   	// #1
  40a1f4:	b	40a188 <__fxstatat@plt+0x75d8>
  40a1f8:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40a1fc:	cmp	x20, x8
  40a200:	b.cs	40a22c <__fxstatat@plt+0x767c>  // b.hs, b.nlast
  40a204:	mov	w8, #0x1                   	// #1
  40a208:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
  40a20c:	b	40a188 <__fxstatat@plt+0x75d8>
  40a210:	mov	x24, x0
  40a214:	mov	x0, x22
  40a218:	bl	402990 <free@plt>
  40a21c:	mov	w8, wzr
  40a220:	mov	x21, xzr
  40a224:	str	w26, [x24]
  40a228:	b	40a188 <__fxstatat@plt+0x75d8>
  40a22c:	bl	402b40 <__errno_location@plt>
  40a230:	mov	w8, wzr
  40a234:	mov	x21, xzr
  40a238:	str	w25, [x0]
  40a23c:	b	40a188 <__fxstatat@plt+0x75d8>
  40a240:	mov	x0, x21
  40a244:	ldp	x20, x19, [sp, #64]
  40a248:	ldp	x22, x21, [sp, #48]
  40a24c:	ldp	x24, x23, [sp, #32]
  40a250:	ldp	x26, x25, [sp, #16]
  40a254:	ldp	x29, x30, [sp], #80
  40a258:	ret
  40a25c:	stp	x29, x30, [sp, #-16]!
  40a260:	mov	w0, #0x1                   	// #1
  40a264:	mov	x29, sp
  40a268:	bl	4059b8 <__fxstatat@plt+0x2e08>
  40a26c:	ldp	x29, x30, [sp], #16
  40a270:	ret
  40a274:	stp	x29, x30, [sp, #-96]!
  40a278:	stp	x28, x27, [sp, #16]
  40a27c:	stp	x26, x25, [sp, #32]
  40a280:	stp	x24, x23, [sp, #48]
  40a284:	stp	x22, x21, [sp, #64]
  40a288:	stp	x20, x19, [sp, #80]
  40a28c:	mov	x29, sp
  40a290:	mov	x19, x3
  40a294:	mov	x20, x2
  40a298:	mov	x24, x1
  40a29c:	mov	x21, x0
  40a2a0:	bl	402550 <strlen@plt>
  40a2a4:	ldr	x25, [x24]
  40a2a8:	cbz	x25, 40a328 <__fxstatat@plt+0x7778>
  40a2ac:	mov	x22, x0
  40a2b0:	mov	w26, wzr
  40a2b4:	mov	x23, xzr
  40a2b8:	add	x28, x24, #0x8
  40a2bc:	mov	x27, #0xffffffffffffffff    	// #-1
  40a2c0:	mov	x24, x20
  40a2c4:	b	40a2dc <__fxstatat@plt+0x772c>
  40a2c8:	mov	x27, x23
  40a2cc:	ldr	x25, [x28, x23, lsl #3]
  40a2d0:	add	x23, x23, #0x1
  40a2d4:	add	x24, x24, x19
  40a2d8:	cbz	x25, 40a330 <__fxstatat@plt+0x7780>
  40a2dc:	mov	x0, x25
  40a2e0:	mov	x1, x21
  40a2e4:	mov	x2, x22
  40a2e8:	bl	402780 <strncmp@plt>
  40a2ec:	cbnz	w0, 40a2cc <__fxstatat@plt+0x771c>
  40a2f0:	mov	x0, x25
  40a2f4:	bl	402550 <strlen@plt>
  40a2f8:	cmp	x0, x22
  40a2fc:	b.eq	40a33c <__fxstatat@plt+0x778c>  // b.none
  40a300:	cmn	x27, #0x1
  40a304:	b.eq	40a2c8 <__fxstatat@plt+0x7718>  // b.none
  40a308:	cbz	x20, 40a320 <__fxstatat@plt+0x7770>
  40a30c:	madd	x0, x27, x19, x20
  40a310:	mov	x1, x24
  40a314:	mov	x2, x19
  40a318:	bl	402810 <bcmp@plt>
  40a31c:	cbz	w0, 40a2cc <__fxstatat@plt+0x771c>
  40a320:	mov	w26, #0x1                   	// #1
  40a324:	b	40a2cc <__fxstatat@plt+0x771c>
  40a328:	mov	w26, wzr
  40a32c:	mov	x27, #0xffffffffffffffff    	// #-1
  40a330:	tst	w26, #0x1
  40a334:	mov	x8, #0xfffffffffffffffe    	// #-2
  40a338:	csel	x23, x8, x27, ne  // ne = any
  40a33c:	mov	x0, x23
  40a340:	ldp	x20, x19, [sp, #80]
  40a344:	ldp	x22, x21, [sp, #64]
  40a348:	ldp	x24, x23, [sp, #48]
  40a34c:	ldp	x26, x25, [sp, #32]
  40a350:	ldp	x28, x27, [sp, #16]
  40a354:	ldp	x29, x30, [sp], #96
  40a358:	ret
  40a35c:	stp	x29, x30, [sp, #-48]!
  40a360:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x64b8>
  40a364:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x64b8>
  40a368:	add	x8, x8, #0x17d
  40a36c:	add	x9, x9, #0x162
  40a370:	cmn	x2, #0x1
  40a374:	stp	x20, x19, [sp, #32]
  40a378:	mov	x19, x1
  40a37c:	mov	x20, x0
  40a380:	csel	x1, x9, x8, eq  // eq = none
  40a384:	mov	w2, #0x5                   	// #5
  40a388:	mov	x0, xzr
  40a38c:	str	x21, [sp, #16]
  40a390:	mov	x29, sp
  40a394:	bl	402ad0 <dcgettext@plt>
  40a398:	mov	x21, x0
  40a39c:	mov	w1, #0x8                   	// #8
  40a3a0:	mov	w0, wzr
  40a3a4:	mov	x2, x19
  40a3a8:	bl	410a30 <__fxstatat@plt+0xde80>
  40a3ac:	mov	x19, x0
  40a3b0:	mov	w0, #0x1                   	// #1
  40a3b4:	mov	x1, x20
  40a3b8:	bl	410d64 <__fxstatat@plt+0xe1b4>
  40a3bc:	mov	x4, x0
  40a3c0:	mov	w0, wzr
  40a3c4:	mov	w1, wzr
  40a3c8:	mov	x2, x21
  40a3cc:	mov	x3, x19
  40a3d0:	bl	4025b0 <error@plt>
  40a3d4:	ldp	x20, x19, [sp, #32]
  40a3d8:	ldr	x21, [sp, #16]
  40a3dc:	ldp	x29, x30, [sp], #48
  40a3e0:	ret
  40a3e4:	stp	x29, x30, [sp, #-96]!
  40a3e8:	stp	x20, x19, [sp, #80]
  40a3ec:	mov	x20, x1
  40a3f0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  40a3f4:	stp	x22, x21, [sp, #64]
  40a3f8:	mov	x19, x2
  40a3fc:	mov	x21, x0
  40a400:	add	x1, x1, #0x19a
  40a404:	mov	w2, #0x5                   	// #5
  40a408:	mov	x0, xzr
  40a40c:	stp	x28, x27, [sp, #16]
  40a410:	stp	x26, x25, [sp, #32]
  40a414:	stp	x24, x23, [sp, #48]
  40a418:	mov	x29, sp
  40a41c:	bl	402ad0 <dcgettext@plt>
  40a420:	adrp	x26, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40a424:	ldr	x1, [x26, #1456]
  40a428:	bl	402ae0 <fputs_unlocked@plt>
  40a42c:	ldr	x24, [x21]
  40a430:	cbz	x24, 40a4c4 <__fxstatat@plt+0x7914>
  40a434:	add	x27, x21, #0x8
  40a438:	adrp	x21, 419000 <_obstack_memory_used@@Base+0x64b8>
  40a43c:	adrp	x22, 419000 <_obstack_memory_used@@Base+0x64b8>
  40a440:	mov	x23, xzr
  40a444:	mov	x28, xzr
  40a448:	add	x21, x21, #0x1af
  40a44c:	add	x22, x22, #0x1b7
  40a450:	b	40a488 <__fxstatat@plt+0x78d8>
  40a454:	ldr	x23, [x26, #1456]
  40a458:	mov	x0, x24
  40a45c:	bl	410d7c <__fxstatat@plt+0xe1cc>
  40a460:	mov	x3, x0
  40a464:	mov	w1, #0x1                   	// #1
  40a468:	mov	x0, x23
  40a46c:	mov	x2, x21
  40a470:	bl	402930 <__fprintf_chk@plt>
  40a474:	mov	x23, x20
  40a478:	ldr	x24, [x27, x28, lsl #3]
  40a47c:	add	x28, x28, #0x1
  40a480:	add	x20, x20, x19
  40a484:	cbz	x24, 40a4c4 <__fxstatat@plt+0x7914>
  40a488:	cbz	x28, 40a454 <__fxstatat@plt+0x78a4>
  40a48c:	mov	x0, x23
  40a490:	mov	x1, x20
  40a494:	mov	x2, x19
  40a498:	bl	402810 <bcmp@plt>
  40a49c:	cbnz	w0, 40a454 <__fxstatat@plt+0x78a4>
  40a4a0:	ldr	x25, [x26, #1456]
  40a4a4:	mov	x0, x24
  40a4a8:	bl	410d7c <__fxstatat@plt+0xe1cc>
  40a4ac:	mov	x3, x0
  40a4b0:	mov	w1, #0x1                   	// #1
  40a4b4:	mov	x0, x25
  40a4b8:	mov	x2, x22
  40a4bc:	bl	402930 <__fprintf_chk@plt>
  40a4c0:	b	40a478 <__fxstatat@plt+0x78c8>
  40a4c4:	ldr	x1, [x26, #1456]
  40a4c8:	mov	w0, #0xa                   	// #10
  40a4cc:	bl	4026d0 <putc_unlocked@plt>
  40a4d0:	ldp	x20, x19, [sp, #80]
  40a4d4:	ldp	x22, x21, [sp, #64]
  40a4d8:	ldp	x24, x23, [sp, #48]
  40a4dc:	ldp	x26, x25, [sp, #32]
  40a4e0:	ldp	x28, x27, [sp, #16]
  40a4e4:	ldp	x29, x30, [sp], #96
  40a4e8:	ret
  40a4ec:	stp	x29, x30, [sp, #-64]!
  40a4f0:	stp	x24, x23, [sp, #16]
  40a4f4:	stp	x22, x21, [sp, #32]
  40a4f8:	mov	x21, x3
  40a4fc:	mov	x22, x2
  40a500:	mov	x23, x1
  40a504:	mov	x24, x0
  40a508:	mov	x0, x1
  40a50c:	mov	x1, x2
  40a510:	mov	x2, x3
  40a514:	mov	x3, x4
  40a518:	stp	x20, x19, [sp, #48]
  40a51c:	mov	x29, sp
  40a520:	mov	x19, x5
  40a524:	mov	x20, x4
  40a528:	bl	40a274 <__fxstatat@plt+0x76c4>
  40a52c:	mov	x2, x0
  40a530:	tbz	x0, #63, 40a558 <__fxstatat@plt+0x79a8>
  40a534:	mov	x0, x24
  40a538:	mov	x1, x23
  40a53c:	bl	40a35c <__fxstatat@plt+0x77ac>
  40a540:	mov	x0, x22
  40a544:	mov	x1, x21
  40a548:	mov	x2, x20
  40a54c:	bl	40a3e4 <__fxstatat@plt+0x7834>
  40a550:	blr	x19
  40a554:	mov	x2, #0xffffffffffffffff    	// #-1
  40a558:	ldp	x20, x19, [sp, #48]
  40a55c:	ldp	x22, x21, [sp, #32]
  40a560:	ldp	x24, x23, [sp, #16]
  40a564:	mov	x0, x2
  40a568:	ldp	x29, x30, [sp], #64
  40a56c:	ret
  40a570:	stp	x29, x30, [sp, #-64]!
  40a574:	stp	x22, x21, [sp, #32]
  40a578:	stp	x20, x19, [sp, #48]
  40a57c:	ldr	x20, [x1]
  40a580:	str	x23, [sp, #16]
  40a584:	mov	x29, sp
  40a588:	cbz	x20, 40a5d8 <__fxstatat@plt+0x7a28>
  40a58c:	mov	x22, x2
  40a590:	mov	x23, x1
  40a594:	mov	x1, x2
  40a598:	mov	x2, x3
  40a59c:	mov	x19, x3
  40a5a0:	mov	x21, x0
  40a5a4:	bl	402810 <bcmp@plt>
  40a5a8:	cbz	w0, 40a5d8 <__fxstatat@plt+0x7a28>
  40a5ac:	add	x22, x22, x19
  40a5b0:	add	x23, x23, #0x8
  40a5b4:	ldr	x20, [x23]
  40a5b8:	cbz	x20, 40a5d8 <__fxstatat@plt+0x7a28>
  40a5bc:	mov	x0, x21
  40a5c0:	mov	x1, x22
  40a5c4:	mov	x2, x19
  40a5c8:	bl	402810 <bcmp@plt>
  40a5cc:	add	x22, x22, x19
  40a5d0:	add	x23, x23, #0x8
  40a5d4:	cbnz	w0, 40a5b4 <__fxstatat@plt+0x7a04>
  40a5d8:	mov	x0, x20
  40a5dc:	ldp	x20, x19, [sp, #48]
  40a5e0:	ldp	x22, x21, [sp, #32]
  40a5e4:	ldr	x23, [sp, #16]
  40a5e8:	ldp	x29, x30, [sp], #64
  40a5ec:	ret
  40a5f0:	sub	w9, w0, #0x41
  40a5f4:	mov	w8, w0
  40a5f8:	cmp	w9, #0x39
  40a5fc:	mov	w0, #0x1                   	// #1
  40a600:	b.hi	40a618 <__fxstatat@plt+0x7a68>  // b.pmore
  40a604:	mov	w10, #0x1                   	// #1
  40a608:	lsl	x9, x10, x9
  40a60c:	tst	x9, #0x3ffffff03ffffff
  40a610:	b.eq	40a618 <__fxstatat@plt+0x7a68>  // b.none
  40a614:	ret
  40a618:	sub	w8, w8, #0x30
  40a61c:	cmp	w8, #0xa
  40a620:	b.cc	40a614 <__fxstatat@plt+0x7a64>  // b.lo, b.ul, b.last
  40a624:	mov	w0, wzr
  40a628:	ret
  40a62c:	sub	w8, w0, #0x41
  40a630:	cmp	w8, #0x39
  40a634:	b.hi	40a648 <__fxstatat@plt+0x7a98>  // b.pmore
  40a638:	mov	x9, #0x3ffffff03ffffff     	// #288230371923853311
  40a63c:	lsr	x8, x9, x8
  40a640:	and	w0, w8, #0x1
  40a644:	ret
  40a648:	mov	w0, wzr
  40a64c:	ret
  40a650:	cmp	w0, #0x80
  40a654:	cset	w0, cc  // cc = lo, ul, last
  40a658:	ret
  40a65c:	cmp	w0, #0x20
  40a660:	cset	w8, eq  // eq = none
  40a664:	cmp	w0, #0x9
  40a668:	cset	w9, eq  // eq = none
  40a66c:	orr	w0, w8, w9
  40a670:	ret
  40a674:	mov	w8, w0
  40a678:	cmp	w0, #0x20
  40a67c:	mov	w0, #0x1                   	// #1
  40a680:	b.cs	40a688 <__fxstatat@plt+0x7ad8>  // b.hs, b.nlast
  40a684:	ret
  40a688:	cmp	w8, #0x7f
  40a68c:	b.eq	40a684 <__fxstatat@plt+0x7ad4>  // b.none
  40a690:	mov	w0, wzr
  40a694:	ret
  40a698:	sub	w8, w0, #0x30
  40a69c:	cmp	w8, #0xa
  40a6a0:	cset	w0, cc  // cc = lo, ul, last
  40a6a4:	ret
  40a6a8:	sub	w8, w0, #0x21
  40a6ac:	cmp	w8, #0x5e
  40a6b0:	cset	w0, cc  // cc = lo, ul, last
  40a6b4:	ret
  40a6b8:	sub	w8, w0, #0x61
  40a6bc:	cmp	w8, #0x1a
  40a6c0:	cset	w0, cc  // cc = lo, ul, last
  40a6c4:	ret
  40a6c8:	sub	w8, w0, #0x20
  40a6cc:	cmp	w8, #0x5f
  40a6d0:	cset	w0, cc  // cc = lo, ul, last
  40a6d4:	ret
  40a6d8:	sub	w8, w0, #0x21
  40a6dc:	cmp	w8, #0x5d
  40a6e0:	b.hi	40a704 <__fxstatat@plt+0x7b54>  // b.pmore
  40a6e4:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x64b8>
  40a6e8:	add	x9, x9, #0x1bc
  40a6ec:	adr	x10, 40a700 <__fxstatat@plt+0x7b50>
  40a6f0:	ldrb	w11, [x9, x8]
  40a6f4:	add	x10, x10, x11, lsl #2
  40a6f8:	mov	w0, #0x1                   	// #1
  40a6fc:	br	x10
  40a700:	ret
  40a704:	mov	w0, wzr
  40a708:	ret
  40a70c:	sub	w8, w0, #0x9
  40a710:	cmp	w8, #0x17
  40a714:	b.hi	40a72c <__fxstatat@plt+0x7b7c>  // b.pmore
  40a718:	mov	w9, #0x1f                  	// #31
  40a71c:	movk	w9, #0x80, lsl #16
  40a720:	lsr	w8, w9, w8
  40a724:	and	w0, w8, #0x1
  40a728:	ret
  40a72c:	mov	w0, wzr
  40a730:	ret
  40a734:	sub	w8, w0, #0x41
  40a738:	cmp	w8, #0x1a
  40a73c:	cset	w0, cc  // cc = lo, ul, last
  40a740:	ret
  40a744:	sub	w8, w0, #0x30
  40a748:	cmp	w8, #0x36
  40a74c:	b.hi	40a764 <__fxstatat@plt+0x7bb4>  // b.pmore
  40a750:	mov	x9, #0x7e0000007e0000      	// #35465847073800192
  40a754:	movk	x9, #0x3ff
  40a758:	lsr	x8, x9, x8
  40a75c:	and	w0, w8, #0x1
  40a760:	ret
  40a764:	mov	w0, wzr
  40a768:	ret
  40a76c:	sub	w8, w0, #0x41
  40a770:	add	w9, w0, #0x20
  40a774:	cmp	w8, #0x1a
  40a778:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  40a77c:	ret
  40a780:	sub	w8, w0, #0x61
  40a784:	sub	w9, w0, #0x20
  40a788:	cmp	w8, #0x1a
  40a78c:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  40a790:	ret
  40a794:	stp	x29, x30, [sp, #-48]!
  40a798:	stp	x20, x19, [sp, #32]
  40a79c:	mov	x20, x0
  40a7a0:	cmp	x0, x1
  40a7a4:	mov	w0, wzr
  40a7a8:	stp	x22, x21, [sp, #16]
  40a7ac:	mov	x29, sp
  40a7b0:	b.eq	40a800 <__fxstatat@plt+0x7c50>  // b.none
  40a7b4:	cbz	x2, 40a800 <__fxstatat@plt+0x7c50>
  40a7b8:	mov	x19, x1
  40a7bc:	sub	x22, x2, #0x1
  40a7c0:	ldrb	w0, [x20]
  40a7c4:	bl	40a76c <__fxstatat@plt+0x7bbc>
  40a7c8:	ldrb	w8, [x19]
  40a7cc:	mov	w21, w0
  40a7d0:	mov	w0, w8
  40a7d4:	bl	40a76c <__fxstatat@plt+0x7bbc>
  40a7d8:	cbz	x22, 40a7f8 <__fxstatat@plt+0x7c48>
  40a7dc:	ands	w8, w21, #0xff
  40a7e0:	b.eq	40a7f8 <__fxstatat@plt+0x7c48>  // b.none
  40a7e4:	add	x20, x20, #0x1
  40a7e8:	add	x19, x19, #0x1
  40a7ec:	cmp	w8, w0, uxtb
  40a7f0:	sub	x22, x22, #0x1
  40a7f4:	b.eq	40a7c0 <__fxstatat@plt+0x7c10>  // b.none
  40a7f8:	and	w8, w21, #0xff
  40a7fc:	sub	w0, w8, w0, uxtb
  40a800:	ldp	x20, x19, [sp, #32]
  40a804:	ldp	x22, x21, [sp, #16]
  40a808:	ldp	x29, x30, [sp], #48
  40a80c:	ret
  40a810:	sub	sp, sp, #0x120
  40a814:	stp	x20, x19, [sp, #272]
  40a818:	and	w20, w1, #0x3
  40a81c:	sub	w8, w20, #0x1
  40a820:	stp	x29, x30, [sp, #192]
  40a824:	add	x29, sp, #0xc0
  40a828:	tst	w20, w8
  40a82c:	stp	x28, x27, [sp, #208]
  40a830:	stp	x26, x25, [sp, #224]
  40a834:	stp	x24, x23, [sp, #240]
  40a838:	stp	x22, x21, [sp, #256]
  40a83c:	stur	xzr, [x29, #-16]
  40a840:	b.ne	40a86c <__fxstatat@plt+0x7cbc>  // b.any
  40a844:	mov	x25, x0
  40a848:	cbz	x0, 40a86c <__fxstatat@plt+0x7cbc>
  40a84c:	ldrb	w8, [x25]
  40a850:	mov	w28, w1
  40a854:	cmp	w8, #0x2f
  40a858:	b.eq	40a8a0 <__fxstatat@plt+0x7cf0>  // b.none
  40a85c:	cbnz	w8, 40ac74 <__fxstatat@plt+0x80c4>
  40a860:	bl	402b40 <__errno_location@plt>
  40a864:	mov	w8, #0x2                   	// #2
  40a868:	b	40a874 <__fxstatat@plt+0x7cc4>
  40a86c:	bl	402b40 <__errno_location@plt>
  40a870:	mov	w8, #0x16                  	// #22
  40a874:	mov	x19, xzr
  40a878:	str	w8, [x0]
  40a87c:	mov	x0, x19
  40a880:	ldp	x20, x19, [sp, #272]
  40a884:	ldp	x22, x21, [sp, #256]
  40a888:	ldp	x24, x23, [sp, #240]
  40a88c:	ldp	x26, x25, [sp, #224]
  40a890:	ldp	x28, x27, [sp, #208]
  40a894:	ldp	x29, x30, [sp, #192]
  40a898:	add	sp, sp, #0x120
  40a89c:	ret
  40a8a0:	mov	w0, #0x1000                	// #4096
  40a8a4:	bl	411b44 <__fxstatat@plt+0xef94>
  40a8a8:	mov	w8, #0x2f                  	// #47
  40a8ac:	mov	x26, x0
  40a8b0:	mov	x19, x0
  40a8b4:	add	x24, x0, #0x1, lsl #12
  40a8b8:	strb	w8, [x26], #1
  40a8bc:	ldrb	w8, [x25]
  40a8c0:	cbz	w8, 40acc8 <__fxstatat@plt+0x8118>
  40a8c4:	and	w8, w28, #0x7
  40a8c8:	str	w8, [sp, #44]
  40a8cc:	cmp	w20, #0x2
  40a8d0:	mov	w8, #0xd                   	// #13
  40a8d4:	mov	w9, #0x4                   	// #4
  40a8d8:	csel	w8, w9, w8, eq  // eq = none
  40a8dc:	stp	x25, xzr, [sp, #24]
  40a8e0:	str	xzr, [sp, #16]
  40a8e4:	stp	w28, w8, [sp, #8]
  40a8e8:	b	40a8f8 <__fxstatat@plt+0x7d48>
  40a8ec:	mov	x26, x21
  40a8f0:	ldrb	w8, [x25]
  40a8f4:	cbz	w8, 40accc <__fxstatat@plt+0x811c>
  40a8f8:	sub	x23, x25, #0x1
  40a8fc:	ldrb	w8, [x23, #1]!
  40a900:	cmp	w8, #0x2f
  40a904:	b.eq	40a8fc <__fxstatat@plt+0x7d4c>  // b.none
  40a908:	mov	x25, x23
  40a90c:	ldrb	w9, [x25]
  40a910:	cbz	w9, 40a928 <__fxstatat@plt+0x7d78>
  40a914:	cmp	w9, #0x2f
  40a918:	b.eq	40a928 <__fxstatat@plt+0x7d78>  // b.none
  40a91c:	add	x25, x25, #0x1
  40a920:	ldrb	w9, [x25]
  40a924:	cbnz	w9, 40a914 <__fxstatat@plt+0x7d64>
  40a928:	sub	x27, x25, x23
  40a92c:	cmp	x27, #0x1
  40a930:	b.eq	40a944 <__fxstatat@plt+0x7d94>  // b.none
  40a934:	cmp	x27, #0x2
  40a938:	b.eq	40a950 <__fxstatat@plt+0x7da0>  // b.none
  40a93c:	cbnz	x27, 40a994 <__fxstatat@plt+0x7de4>
  40a940:	b	40accc <__fxstatat@plt+0x811c>
  40a944:	cmp	w8, #0x2e
  40a948:	b.eq	40a8f0 <__fxstatat@plt+0x7d40>  // b.none
  40a94c:	b	40a994 <__fxstatat@plt+0x7de4>
  40a950:	cmp	w8, #0x2e
  40a954:	b.ne	40a994 <__fxstatat@plt+0x7de4>  // b.any
  40a958:	ldrb	w8, [x23, #1]
  40a95c:	cmp	w8, #0x2e
  40a960:	b.ne	40a994 <__fxstatat@plt+0x7de4>  // b.any
  40a964:	add	x8, x19, #0x1
  40a968:	cmp	x26, x8
  40a96c:	b.ls	40a8f0 <__fxstatat@plt+0x7d40>  // b.plast
  40a970:	sub	x8, x26, #0x1
  40a974:	mov	x26, x8
  40a978:	cmp	x8, x19
  40a97c:	b.ls	40a8f0 <__fxstatat@plt+0x7d40>  // b.plast
  40a980:	mov	x8, x26
  40a984:	ldrb	w9, [x8, #-1]!
  40a988:	cmp	w9, #0x2f
  40a98c:	b.ne	40a974 <__fxstatat@plt+0x7dc4>  // b.any
  40a990:	b	40a8f0 <__fxstatat@plt+0x7d40>
  40a994:	ldurb	w8, [x26, #-1]
  40a998:	cmp	w8, #0x2f
  40a99c:	b.eq	40a9a8 <__fxstatat@plt+0x7df8>  // b.none
  40a9a0:	mov	w8, #0x2f                  	// #47
  40a9a4:	strb	w8, [x26], #1
  40a9a8:	add	x8, x26, x27
  40a9ac:	cmp	x8, x24
  40a9b0:	b.cc	40a9e4 <__fxstatat@plt+0x7e34>  // b.lo, b.ul, b.last
  40a9b4:	cmp	x27, #0x1, lsl #12
  40a9b8:	mov	w9, #0x1000                	// #4096
  40a9bc:	sub	x8, x24, x19
  40a9c0:	csinc	x9, x9, x27, lt  // lt = tstop
  40a9c4:	add	x21, x9, x8
  40a9c8:	mov	x0, x19
  40a9cc:	mov	x1, x21
  40a9d0:	sub	x22, x26, x19
  40a9d4:	bl	411b9c <__fxstatat@plt+0xefec>
  40a9d8:	mov	x19, x0
  40a9dc:	add	x24, x0, x21
  40a9e0:	add	x26, x0, x22
  40a9e4:	mov	x0, x26
  40a9e8:	mov	x1, x23
  40a9ec:	mov	x2, x27
  40a9f0:	bl	4024e0 <memcpy@plt>
  40a9f4:	ldr	w8, [sp, #44]
  40a9f8:	add	x21, x26, x27
  40a9fc:	strb	wzr, [x21]
  40aa00:	cmp	w8, #0x6
  40aa04:	b.ne	40aa44 <__fxstatat@plt+0x7e94>  // b.any
  40aa08:	str	wzr, [sp, #64]
  40aa0c:	ldr	w8, [sp, #64]
  40aa10:	and	w8, w8, #0xf000
  40aa14:	cmp	w8, #0xa, lsl #12
  40aa18:	b.eq	40aa5c <__fxstatat@plt+0x7eac>  // b.none
  40aa1c:	cmp	w8, #0x4, lsl #12
  40aa20:	b.eq	40ac54 <__fxstatat@plt+0x80a4>  // b.none
  40aa24:	cmp	w20, #0x2
  40aa28:	b.eq	40ac54 <__fxstatat@plt+0x80a4>  // b.none
  40aa2c:	ldrb	w8, [x25]
  40aa30:	cbz	w8, 40ac54 <__fxstatat@plt+0x80a4>
  40aa34:	mov	w9, #0x14                  	// #20
  40aa38:	mov	w8, #0xd                   	// #13
  40aa3c:	str	w9, [sp, #40]
  40aa40:	b	40ac58 <__fxstatat@plt+0x80a8>
  40aa44:	add	x1, sp, #0x30
  40aa48:	mov	x0, x19
  40aa4c:	tbnz	w28, #2, 40aa98 <__fxstatat@plt+0x7ee8>
  40aa50:	bl	414b80 <_obstack_memory_used@@Base+0x2038>
  40aa54:	cbnz	w0, 40aaa0 <__fxstatat@plt+0x7ef0>
  40aa58:	b	40aa0c <__fxstatat@plt+0x7e5c>
  40aa5c:	ldr	x1, [sp, #24]
  40aa60:	sub	x0, x29, #0x10
  40aa64:	add	x2, sp, #0x30
  40aa68:	bl	40ad58 <__fxstatat@plt+0x81a8>
  40aa6c:	tbz	w0, #0, 40aac0 <__fxstatat@plt+0x7f10>
  40aa70:	ldr	w8, [sp, #40]
  40aa74:	cmp	w20, #0x2
  40aa78:	mov	w9, #0x28                  	// #40
  40aa7c:	mov	x23, x25
  40aa80:	csel	w8, w8, w9, eq  // eq = none
  40aa84:	str	w8, [sp, #40]
  40aa88:	ldr	w8, [sp, #12]
  40aa8c:	mov	x25, x23
  40aa90:	cbnz	w8, 40ac58 <__fxstatat@plt+0x80a8>
  40aa94:	b	40ac54 <__fxstatat@plt+0x80a4>
  40aa98:	bl	414b60 <_obstack_memory_used@@Base+0x2018>
  40aa9c:	cbz	w0, 40aa0c <__fxstatat@plt+0x7e5c>
  40aaa0:	bl	402b40 <__errno_location@plt>
  40aaa4:	ldr	w8, [x0]
  40aaa8:	cmp	w20, #0x1
  40aaac:	str	w8, [sp, #40]
  40aab0:	b.eq	40ab24 <__fxstatat@plt+0x7f74>  // b.none
  40aab4:	cbnz	w20, 40aa08 <__fxstatat@plt+0x7e58>
  40aab8:	mov	w8, #0xd                   	// #13
  40aabc:	b	40ac58 <__fxstatat@plt+0x80a8>
  40aac0:	ldr	x1, [sp, #96]
  40aac4:	mov	x0, x19
  40aac8:	bl	40a150 <__fxstatat@plt+0x75a0>
  40aacc:	cbz	x0, 40ab70 <__fxstatat@plt+0x7fc0>
  40aad0:	mov	x28, x0
  40aad4:	bl	402550 <strlen@plt>
  40aad8:	mov	x22, x0
  40aadc:	mov	x0, x25
  40aae0:	bl	402550 <strlen@plt>
  40aae4:	add	x8, x0, x22
  40aae8:	str	x22, [sp, #24]
  40aaec:	add	x22, x8, #0x1
  40aaf0:	ldr	x8, [sp, #16]
  40aaf4:	mov	x9, x0
  40aaf8:	cbz	x8, 40aba0 <__fxstatat@plt+0x7ff0>
  40aafc:	cmp	x22, x8
  40ab00:	b.ls	40abc4 <__fxstatat@plt+0x8014>  // b.plast
  40ab04:	ldr	x0, [sp, #32]
  40ab08:	mov	x1, x22
  40ab0c:	mov	x23, x9
  40ab10:	bl	411b9c <__fxstatat@plt+0xefec>
  40ab14:	mov	x9, x23
  40ab18:	mov	x23, x0
  40ab1c:	str	x22, [sp, #16]
  40ab20:	b	40abc8 <__fxstatat@plt+0x8018>
  40ab24:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x34b8>
  40ab28:	mov	x0, x25
  40ab2c:	add	x1, x1, #0xb16
  40ab30:	bl	4029b0 <strspn@plt>
  40ab34:	ldrb	w8, [x25, x0]
  40ab38:	ldr	w10, [sp, #40]
  40ab3c:	cmp	w8, #0x0
  40ab40:	cset	w8, ne  // ne = any
  40ab44:	cmp	w10, #0x2
  40ab48:	cset	w9, ne  // ne = any
  40ab4c:	orr	w8, w9, w8
  40ab50:	cmp	w8, #0x0
  40ab54:	mov	w8, #0x2                   	// #2
  40ab58:	csel	w10, w10, w8, ne  // ne = any
  40ab5c:	mov	w8, #0xd                   	// #13
  40ab60:	mov	w9, #0x4                   	// #4
  40ab64:	str	w10, [sp, #40]
  40ab68:	csel	w8, w8, w9, ne  // ne = any
  40ab6c:	b	40ac58 <__fxstatat@plt+0x80a8>
  40ab70:	cmp	w20, #0x2
  40ab74:	b.ne	40ab88 <__fxstatat@plt+0x7fd8>  // b.any
  40ab78:	bl	402b40 <__errno_location@plt>
  40ab7c:	ldr	w8, [x0]
  40ab80:	cmp	w8, #0xc
  40ab84:	b.ne	40ac68 <__fxstatat@plt+0x80b8>  // b.any
  40ab88:	bl	402b40 <__errno_location@plt>
  40ab8c:	ldr	w8, [x0]
  40ab90:	mov	x23, x25
  40ab94:	str	w8, [sp, #40]
  40ab98:	mov	w8, #0xd                   	// #13
  40ab9c:	b	40ac48 <__fxstatat@plt+0x8098>
  40aba0:	cmp	x22, #0x1, lsl #12
  40aba4:	mov	w8, #0x1000                	// #4096
  40aba8:	csel	x0, x22, x8, hi  // hi = pmore
  40abac:	str	x0, [sp, #16]
  40abb0:	mov	x22, x9
  40abb4:	bl	411b44 <__fxstatat@plt+0xef94>
  40abb8:	mov	x9, x22
  40abbc:	mov	x23, x0
  40abc0:	b	40abc8 <__fxstatat@plt+0x8018>
  40abc4:	ldr	x23, [sp, #32]
  40abc8:	ldr	x22, [sp, #24]
  40abcc:	add	x2, x9, #0x1
  40abd0:	mov	x1, x25
  40abd4:	add	x0, x23, x22
  40abd8:	bl	4024f0 <memmove@plt>
  40abdc:	mov	x0, x23
  40abe0:	mov	x1, x28
  40abe4:	mov	x2, x22
  40abe8:	bl	4024e0 <memcpy@plt>
  40abec:	ldrb	w8, [x28]
  40abf0:	cmp	w8, #0x2f
  40abf4:	add	x8, x19, #0x1
  40abf8:	b.ne	40ac0c <__fxstatat@plt+0x805c>  // b.any
  40abfc:	mov	w9, #0x2f                  	// #47
  40ac00:	strb	w9, [x19]
  40ac04:	mov	x21, x8
  40ac08:	b	40ac38 <__fxstatat@plt+0x8088>
  40ac0c:	cmp	x21, x8
  40ac10:	b.ls	40ac38 <__fxstatat@plt+0x8088>  // b.plast
  40ac14:	add	x8, x26, x27
  40ac18:	sub	x8, x8, #0x1
  40ac1c:	mov	x21, x8
  40ac20:	cmp	x8, x19
  40ac24:	b.ls	40ac38 <__fxstatat@plt+0x8088>  // b.plast
  40ac28:	mov	x8, x21
  40ac2c:	ldrb	w9, [x8, #-1]!
  40ac30:	cmp	w9, #0x2f
  40ac34:	b.ne	40ac1c <__fxstatat@plt+0x806c>  // b.any
  40ac38:	mov	x0, x28
  40ac3c:	bl	402990 <free@plt>
  40ac40:	mov	w8, wzr
  40ac44:	stp	x23, x23, [sp, #24]
  40ac48:	ldr	w28, [sp, #8]
  40ac4c:	mov	x25, x23
  40ac50:	cbnz	w8, 40ac58 <__fxstatat@plt+0x80a8>
  40ac54:	mov	w8, wzr
  40ac58:	cbz	w8, 40a8ec <__fxstatat@plt+0x7d3c>
  40ac5c:	cmp	w8, #0x4
  40ac60:	b.eq	40a8ec <__fxstatat@plt+0x7d3c>  // b.none
  40ac64:	b	40ad24 <__fxstatat@plt+0x8174>
  40ac68:	mov	w8, #0x4                   	// #4
  40ac6c:	mov	x23, x25
  40ac70:	b	40ac48 <__fxstatat@plt+0x8098>
  40ac74:	bl	411ea0 <__fxstatat@plt+0xf2f0>
  40ac78:	mov	x19, x0
  40ac7c:	cbz	x0, 40a87c <__fxstatat@plt+0x7ccc>
  40ac80:	mov	x0, x19
  40ac84:	bl	402550 <strlen@plt>
  40ac88:	mov	x21, x0
  40ac8c:	cmp	x0, #0xfff
  40ac90:	b.gt	40acb8 <__fxstatat@plt+0x8108>
  40ac94:	mov	w1, #0x1000                	// #4096
  40ac98:	mov	x0, x19
  40ac9c:	bl	411b9c <__fxstatat@plt+0xefec>
  40aca0:	mov	x19, x0
  40aca4:	add	x26, x0, x21
  40aca8:	add	x24, x0, #0x1, lsl #12
  40acac:	ldrb	w8, [x25]
  40acb0:	cbnz	w8, 40a8c4 <__fxstatat@plt+0x7d14>
  40acb4:	b	40acc8 <__fxstatat@plt+0x8118>
  40acb8:	add	x24, x19, x21
  40acbc:	mov	x26, x24
  40acc0:	ldrb	w8, [x25]
  40acc4:	cbnz	w8, 40a8c4 <__fxstatat@plt+0x7d14>
  40acc8:	str	xzr, [sp, #32]
  40accc:	add	x8, x19, #0x1
  40acd0:	cmp	x26, x8
  40acd4:	b.ls	40ace8 <__fxstatat@plt+0x8138>  // b.plast
  40acd8:	mov	x8, x26
  40acdc:	ldrb	w9, [x8, #-1]!
  40ace0:	cmp	w9, #0x2f
  40ace4:	csel	x26, x8, x26, eq  // eq = none
  40ace8:	mov	x8, x26
  40acec:	strb	wzr, [x8], #1
  40acf0:	cmp	x24, x8
  40acf4:	b.eq	40ad0c <__fxstatat@plt+0x815c>  // b.none
  40acf8:	sub	x8, x26, x19
  40acfc:	add	x1, x8, #0x1
  40ad00:	mov	x0, x19
  40ad04:	bl	411b9c <__fxstatat@plt+0xefec>
  40ad08:	mov	x19, x0
  40ad0c:	ldr	x0, [sp, #32]
  40ad10:	bl	402990 <free@plt>
  40ad14:	ldur	x0, [x29, #-16]
  40ad18:	cbz	x0, 40a87c <__fxstatat@plt+0x7ccc>
  40ad1c:	bl	40c084 <__fxstatat@plt+0x94d4>
  40ad20:	b	40a87c <__fxstatat@plt+0x7ccc>
  40ad24:	cmp	w8, #0xd
  40ad28:	b.ne	40ad54 <__fxstatat@plt+0x81a4>  // b.any
  40ad2c:	ldr	x0, [sp, #32]
  40ad30:	bl	402990 <free@plt>
  40ad34:	mov	x0, x19
  40ad38:	bl	402990 <free@plt>
  40ad3c:	ldur	x0, [x29, #-16]
  40ad40:	cbz	x0, 40ad48 <__fxstatat@plt+0x8198>
  40ad44:	bl	40c084 <__fxstatat@plt+0x94d4>
  40ad48:	bl	402b40 <__errno_location@plt>
  40ad4c:	ldr	w8, [sp, #40]
  40ad50:	b	40a874 <__fxstatat@plt+0x7cc4>
  40ad54:	b	40a87c <__fxstatat@plt+0x7ccc>
  40ad58:	stp	x29, x30, [sp, #-48]!
  40ad5c:	stp	x20, x19, [sp, #32]
  40ad60:	ldr	x8, [x0]
  40ad64:	str	x21, [sp, #16]
  40ad68:	mov	x19, x2
  40ad6c:	mov	x21, x0
  40ad70:	mov	x20, x1
  40ad74:	mov	x29, sp
  40ad78:	cbnz	x8, 40ada8 <__fxstatat@plt+0x81f8>
  40ad7c:	adrp	x2, 40c000 <__fxstatat@plt+0x9450>
  40ad80:	adrp	x3, 40c000 <__fxstatat@plt+0x9450>
  40ad84:	adrp	x4, 40c000 <__fxstatat@plt+0x9450>
  40ad88:	add	x2, x2, #0x804
  40ad8c:	add	x3, x3, #0x894
  40ad90:	add	x4, x4, #0x8e4
  40ad94:	mov	w0, #0x7                   	// #7
  40ad98:	mov	x1, xzr
  40ad9c:	bl	40bdd0 <__fxstatat@plt+0x9220>
  40ada0:	str	x0, [x21]
  40ada4:	cbz	x0, 40ade8 <__fxstatat@plt+0x8238>
  40ada8:	ldr	x0, [x21]
  40adac:	mov	x1, x20
  40adb0:	mov	x2, x19
  40adb4:	bl	40b198 <__fxstatat@plt+0x85e8>
  40adb8:	tbz	w0, #0, 40adc4 <__fxstatat@plt+0x8214>
  40adbc:	mov	w0, #0x1                   	// #1
  40adc0:	b	40add8 <__fxstatat@plt+0x8228>
  40adc4:	ldr	x0, [x21]
  40adc8:	mov	x1, x20
  40adcc:	mov	x2, x19
  40add0:	bl	40b120 <__fxstatat@plt+0x8570>
  40add4:	mov	w0, wzr
  40add8:	ldp	x20, x19, [sp, #32]
  40addc:	ldr	x21, [sp, #16]
  40ade0:	ldp	x29, x30, [sp], #48
  40ade4:	ret
  40ade8:	bl	411d48 <__fxstatat@plt+0xf198>
  40adec:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40adf0:	str	x0, [x8, #1840]
  40adf4:	ret
  40adf8:	and	w8, w0, #0x1
  40adfc:	adrp	x9, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40ae00:	strb	w8, [x9, #1848]
  40ae04:	ret
  40ae08:	stp	x29, x30, [sp, #-48]!
  40ae0c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40ae10:	ldr	x0, [x8, #1480]
  40ae14:	str	x21, [sp, #16]
  40ae18:	stp	x20, x19, [sp, #32]
  40ae1c:	mov	x29, sp
  40ae20:	bl	413260 <_obstack_memory_used@@Base+0x718>
  40ae24:	cbz	w0, 40ae44 <__fxstatat@plt+0x8294>
  40ae28:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40ae2c:	ldrb	w8, [x8, #1848]
  40ae30:	cbz	w8, 40ae64 <__fxstatat@plt+0x82b4>
  40ae34:	bl	402b40 <__errno_location@plt>
  40ae38:	ldr	w8, [x0]
  40ae3c:	cmp	w8, #0x20
  40ae40:	b.ne	40ae64 <__fxstatat@plt+0x82b4>  // b.any
  40ae44:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40ae48:	ldr	x0, [x8, #1456]
  40ae4c:	bl	413260 <_obstack_memory_used@@Base+0x718>
  40ae50:	cbnz	w0, 40aed0 <__fxstatat@plt+0x8320>
  40ae54:	ldp	x20, x19, [sp, #32]
  40ae58:	ldr	x21, [sp, #16]
  40ae5c:	ldp	x29, x30, [sp], #48
  40ae60:	ret
  40ae64:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  40ae68:	add	x1, x1, #0x21a
  40ae6c:	mov	w2, #0x5                   	// #5
  40ae70:	mov	x0, xzr
  40ae74:	bl	402ad0 <dcgettext@plt>
  40ae78:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40ae7c:	ldr	x21, [x8, #1840]
  40ae80:	mov	x19, x0
  40ae84:	bl	402b40 <__errno_location@plt>
  40ae88:	ldr	w20, [x0]
  40ae8c:	cbnz	x21, 40aeac <__fxstatat@plt+0x82fc>
  40ae90:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x64b8>
  40ae94:	add	x2, x2, #0x1b9
  40ae98:	mov	w0, wzr
  40ae9c:	mov	w1, w20
  40aea0:	mov	x3, x19
  40aea4:	bl	4025b0 <error@plt>
  40aea8:	b	40aed0 <__fxstatat@plt+0x8320>
  40aeac:	mov	x0, x21
  40aeb0:	bl	410bcc <__fxstatat@plt+0xe01c>
  40aeb4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x54b8>
  40aeb8:	mov	x3, x0
  40aebc:	add	x2, x2, #0x909
  40aec0:	mov	w0, wzr
  40aec4:	mov	w1, w20
  40aec8:	mov	x4, x19
  40aecc:	bl	4025b0 <error@plt>
  40aed0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40aed4:	ldr	w0, [x8, #1344]
  40aed8:	bl	402510 <_exit@plt>
  40aedc:	stp	x29, x30, [sp, #-48]!
  40aee0:	str	x21, [sp, #16]
  40aee4:	stp	x20, x19, [sp, #32]
  40aee8:	mov	x20, x0
  40aeec:	ldrb	w8, [x20], #-1
  40aef0:	mov	x29, sp
  40aef4:	mov	x19, x0
  40aef8:	cmp	w8, #0x2f
  40aefc:	cset	w21, eq  // eq = none
  40af00:	bl	40afa0 <__fxstatat@plt+0x83f0>
  40af04:	sub	x8, x0, x19
  40af08:	mov	x0, x8
  40af0c:	cmp	x8, x21
  40af10:	b.ls	40af24 <__fxstatat@plt+0x8374>  // b.plast
  40af14:	ldrb	w8, [x20, x0]
  40af18:	cmp	w8, #0x2f
  40af1c:	sub	x8, x0, #0x1
  40af20:	b.eq	40af08 <__fxstatat@plt+0x8358>  // b.none
  40af24:	ldp	x20, x19, [sp, #32]
  40af28:	ldr	x21, [sp, #16]
  40af2c:	ldp	x29, x30, [sp], #48
  40af30:	ret
  40af34:	stp	x29, x30, [sp, #-48]!
  40af38:	str	x21, [sp, #16]
  40af3c:	stp	x20, x19, [sp, #32]
  40af40:	mov	x29, sp
  40af44:	mov	x21, x0
  40af48:	bl	40aedc <__fxstatat@plt+0x832c>
  40af4c:	cmp	x0, #0x0
  40af50:	cinc	x8, x0, eq  // eq = none
  40af54:	mov	x20, x0
  40af58:	add	x0, x8, #0x1
  40af5c:	bl	402730 <malloc@plt>
  40af60:	mov	x19, x0
  40af64:	cbz	x0, 40af8c <__fxstatat@plt+0x83dc>
  40af68:	mov	x0, x19
  40af6c:	mov	x1, x21
  40af70:	mov	x2, x20
  40af74:	bl	4024e0 <memcpy@plt>
  40af78:	cbnz	x20, 40af88 <__fxstatat@plt+0x83d8>
  40af7c:	mov	w8, #0x2e                  	// #46
  40af80:	mov	w20, #0x1                   	// #1
  40af84:	strb	w8, [x19]
  40af88:	strb	wzr, [x19, x20]
  40af8c:	mov	x0, x19
  40af90:	ldp	x20, x19, [sp, #32]
  40af94:	ldr	x21, [sp, #16]
  40af98:	ldp	x29, x30, [sp], #48
  40af9c:	ret
  40afa0:	sub	x0, x0, #0x1
  40afa4:	ldrb	w8, [x0, #1]!
  40afa8:	cmp	w8, #0x2f
  40afac:	b.eq	40afa4 <__fxstatat@plt+0x83f4>  // b.none
  40afb0:	mov	w8, wzr
  40afb4:	mov	x9, x0
  40afb8:	b	40afc4 <__fxstatat@plt+0x8414>
  40afbc:	mov	w8, #0x1                   	// #1
  40afc0:	add	x9, x9, #0x1
  40afc4:	ldrb	w10, [x9]
  40afc8:	cmp	w10, #0x2f
  40afcc:	b.eq	40afbc <__fxstatat@plt+0x840c>  // b.none
  40afd0:	cbz	w10, 40afe8 <__fxstatat@plt+0x8438>
  40afd4:	tst	w8, #0x1
  40afd8:	mov	w8, wzr
  40afdc:	csel	x0, x9, x0, ne  // ne = any
  40afe0:	add	x9, x9, #0x1
  40afe4:	b	40afc4 <__fxstatat@plt+0x8414>
  40afe8:	ret
  40afec:	stp	x29, x30, [sp, #-32]!
  40aff0:	str	x19, [sp, #16]
  40aff4:	mov	x29, sp
  40aff8:	mov	x19, x0
  40affc:	bl	402550 <strlen@plt>
  40b000:	mov	x8, x0
  40b004:	sub	x9, x19, #0x1
  40b008:	mov	x0, x8
  40b00c:	cmp	x8, #0x2
  40b010:	b.cc	40b024 <__fxstatat@plt+0x8474>  // b.lo, b.ul, b.last
  40b014:	ldrb	w8, [x9, x0]
  40b018:	cmp	w8, #0x2f
  40b01c:	sub	x8, x0, #0x1
  40b020:	b.eq	40b008 <__fxstatat@plt+0x8458>  // b.none
  40b024:	ldr	x19, [sp, #16]
  40b028:	ldp	x29, x30, [sp], #32
  40b02c:	ret
  40b030:	stp	x29, x30, [sp, #-48]!
  40b034:	stp	x20, x19, [sp, #32]
  40b038:	ldr	w8, [x1, #16]
  40b03c:	str	x21, [sp, #16]
  40b040:	mov	x29, sp
  40b044:	and	w8, w8, #0xf000
  40b048:	cmp	w8, #0xa, lsl #12
  40b04c:	b.ne	40b058 <__fxstatat@plt+0x84a8>  // b.any
  40b050:	mov	w19, wzr
  40b054:	b	40b100 <__fxstatat@plt+0x8550>
  40b058:	mov	x21, x1
  40b05c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  40b060:	add	x1, x1, #0x226
  40b064:	mov	x2, xzr
  40b068:	mov	x3, xzr
  40b06c:	mov	x20, x0
  40b070:	bl	4028f0 <getxattr@plt>
  40b074:	mov	x19, x0
  40b078:	tbz	x0, #63, 40b094 <__fxstatat@plt+0x84e4>
  40b07c:	bl	402b40 <__errno_location@plt>
  40b080:	ldr	w8, [x0]
  40b084:	cmp	w8, #0x3d
  40b088:	b.ne	40b094 <__fxstatat@plt+0x84e4>  // b.any
  40b08c:	mov	x19, xzr
  40b090:	b	40b0a4 <__fxstatat@plt+0x84f4>
  40b094:	cmp	x19, #0x0
  40b098:	b.le	40b0a4 <__fxstatat@plt+0x84f4>
  40b09c:	mov	w19, #0x1                   	// #1
  40b0a0:	b	40b100 <__fxstatat@plt+0x8550>
  40b0a4:	cbnz	x19, 40b0ec <__fxstatat@plt+0x853c>
  40b0a8:	ldr	w8, [x21, #16]
  40b0ac:	and	w8, w8, #0xf000
  40b0b0:	cmp	w8, #0x4, lsl #12
  40b0b4:	b.ne	40b0e8 <__fxstatat@plt+0x8538>  // b.any
  40b0b8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  40b0bc:	add	x1, x1, #0x23e
  40b0c0:	mov	x0, x20
  40b0c4:	mov	x2, xzr
  40b0c8:	mov	x3, xzr
  40b0cc:	bl	4028f0 <getxattr@plt>
  40b0d0:	mov	x19, x0
  40b0d4:	tbz	x0, #63, 40b114 <__fxstatat@plt+0x8564>
  40b0d8:	bl	402b40 <__errno_location@plt>
  40b0dc:	ldr	w8, [x0]
  40b0e0:	cmp	w8, #0x3d
  40b0e4:	b.ne	40b114 <__fxstatat@plt+0x8564>  // b.any
  40b0e8:	mov	x19, xzr
  40b0ec:	tbz	x19, #63, 40b100 <__fxstatat@plt+0x8550>
  40b0f0:	bl	402b40 <__errno_location@plt>
  40b0f4:	ldr	w0, [x0]
  40b0f8:	bl	413148 <_obstack_memory_used@@Base+0x600>
  40b0fc:	sbfx	w19, w0, #0, #1
  40b100:	mov	w0, w19
  40b104:	ldp	x20, x19, [sp, #32]
  40b108:	ldr	x21, [sp, #16]
  40b10c:	ldp	x29, x30, [sp], #48
  40b110:	ret
  40b114:	cmp	x19, #0x0
  40b118:	b.gt	40b09c <__fxstatat@plt+0x84ec>
  40b11c:	b	40b0ec <__fxstatat@plt+0x853c>
  40b120:	stp	x29, x30, [sp, #-48]!
  40b124:	stp	x22, x21, [sp, #16]
  40b128:	stp	x20, x19, [sp, #32]
  40b12c:	mov	x29, sp
  40b130:	cbz	x0, 40b184 <__fxstatat@plt+0x85d4>
  40b134:	mov	x20, x0
  40b138:	mov	w0, #0x18                  	// #24
  40b13c:	mov	x21, x2
  40b140:	mov	x22, x1
  40b144:	bl	411b44 <__fxstatat@plt+0xef94>
  40b148:	mov	x19, x0
  40b14c:	mov	x0, x22
  40b150:	bl	411d1c <__fxstatat@plt+0xf16c>
  40b154:	ldr	x8, [x21, #8]
  40b158:	mov	x1, x19
  40b15c:	stp	x0, x8, [x19]
  40b160:	ldr	x8, [x21]
  40b164:	mov	x0, x20
  40b168:	str	x8, [x19, #16]
  40b16c:	bl	40c63c <__fxstatat@plt+0x9a8c>
  40b170:	cbz	x0, 40b194 <__fxstatat@plt+0x85e4>
  40b174:	cmp	x0, x19
  40b178:	b.eq	40b184 <__fxstatat@plt+0x85d4>  // b.none
  40b17c:	mov	x0, x19
  40b180:	bl	40c8e4 <__fxstatat@plt+0x9d34>
  40b184:	ldp	x20, x19, [sp, #32]
  40b188:	ldp	x22, x21, [sp, #16]
  40b18c:	ldp	x29, x30, [sp], #48
  40b190:	ret
  40b194:	bl	411d48 <__fxstatat@plt+0xf198>
  40b198:	cbz	x0, 40b1d0 <__fxstatat@plt+0x8620>
  40b19c:	sub	sp, sp, #0x30
  40b1a0:	stp	x29, x30, [sp, #32]
  40b1a4:	ldr	x8, [x2, #8]
  40b1a8:	add	x29, sp, #0x20
  40b1ac:	stp	x1, x8, [sp, #8]
  40b1b0:	ldr	x8, [x2]
  40b1b4:	add	x1, sp, #0x8
  40b1b8:	str	x8, [sp, #24]
  40b1bc:	bl	40bb14 <__fxstatat@plt+0x8f64>
  40b1c0:	ldp	x29, x30, [sp, #32]
  40b1c4:	cmp	x0, #0x0
  40b1c8:	cset	w0, ne  // ne = any
  40b1cc:	add	sp, sp, #0x30
  40b1d0:	ret
  40b1d4:	stp	x29, x30, [sp, #-32]!
  40b1d8:	stp	x20, x19, [sp, #16]
  40b1dc:	mov	x29, sp
  40b1e0:	mov	x19, x1
  40b1e4:	mov	w20, w0
  40b1e8:	bl	40b2b4 <__fxstatat@plt+0x8704>
  40b1ec:	tst	w20, #0x100
  40b1f0:	mov	w8, #0x72                  	// #114
  40b1f4:	mov	w9, #0x2d                  	// #45
  40b1f8:	mov	w10, #0x77                  	// #119
  40b1fc:	csel	w14, w9, w8, eq  // eq = none
  40b200:	tst	w20, #0x80
  40b204:	mov	w11, #0x53                  	// #83
  40b208:	mov	w12, #0x73                  	// #115
  40b20c:	mov	w13, #0x78                  	// #120
  40b210:	strb	w14, [x19, #1]
  40b214:	csel	w14, w9, w10, eq  // eq = none
  40b218:	tst	w20, #0x40
  40b21c:	strb	w14, [x19, #2]
  40b220:	csel	w14, w12, w11, ne  // ne = any
  40b224:	csel	w15, w13, w9, ne  // ne = any
  40b228:	tst	w20, #0x800
  40b22c:	csel	w14, w15, w14, eq  // eq = none
  40b230:	tst	w20, #0x20
  40b234:	strb	w14, [x19, #3]
  40b238:	csel	w14, w9, w8, eq  // eq = none
  40b23c:	tst	w20, #0x10
  40b240:	strb	w14, [x19, #4]
  40b244:	csel	w14, w9, w10, eq  // eq = none
  40b248:	tst	w20, #0x8
  40b24c:	csel	w11, w12, w11, ne  // ne = any
  40b250:	csel	w12, w13, w9, ne  // ne = any
  40b254:	tst	w20, #0x400
  40b258:	csel	w11, w12, w11, eq  // eq = none
  40b25c:	tst	w20, #0x4
  40b260:	csel	w8, w9, w8, eq  // eq = none
  40b264:	tst	w20, #0x2
  40b268:	mov	w15, #0x54                  	// #84
  40b26c:	strb	w14, [x19, #5]
  40b270:	mov	w14, #0x74                  	// #116
  40b274:	strb	w8, [x19, #7]
  40b278:	csel	w8, w9, w10, eq  // eq = none
  40b27c:	tst	w20, #0x1
  40b280:	strb	w8, [x19, #8]
  40b284:	csel	w8, w14, w15, ne  // ne = any
  40b288:	csel	w9, w13, w9, ne  // ne = any
  40b28c:	tst	w20, #0x200
  40b290:	mov	w12, #0x20                  	// #32
  40b294:	csel	w8, w9, w8, eq  // eq = none
  40b298:	strb	w0, [x19]
  40b29c:	strb	w11, [x19, #6]
  40b2a0:	strb	w8, [x19, #9]
  40b2a4:	strh	w12, [x19, #10]
  40b2a8:	ldp	x20, x19, [sp, #16]
  40b2ac:	ldp	x29, x30, [sp], #32
  40b2b0:	ret
  40b2b4:	and	w8, w0, #0xf000
  40b2b8:	sub	w8, w8, #0x1, lsl #12
  40b2bc:	lsr	w8, w8, #12
  40b2c0:	cmp	w8, #0xb
  40b2c4:	b.hi	40b2f4 <__fxstatat@plt+0x8744>  // b.pmore
  40b2c8:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x64b8>
  40b2cc:	add	x9, x9, #0x257
  40b2d0:	adr	x10, 40b2e4 <__fxstatat@plt+0x8734>
  40b2d4:	ldrb	w11, [x9, x8]
  40b2d8:	add	x10, x10, x11, lsl #2
  40b2dc:	mov	w0, #0x2d                  	// #45
  40b2e0:	br	x10
  40b2e4:	mov	w0, #0x70                  	// #112
  40b2e8:	ret
  40b2ec:	mov	w0, #0x63                  	// #99
  40b2f0:	ret
  40b2f4:	mov	w0, #0x3f                  	// #63
  40b2f8:	ret
  40b2fc:	mov	w0, #0x64                  	// #100
  40b300:	ret
  40b304:	mov	w0, #0x6c                  	// #108
  40b308:	ret
  40b30c:	mov	w0, #0x73                  	// #115
  40b310:	ret
  40b314:	mov	w0, #0x62                  	// #98
  40b318:	ret
  40b31c:	stp	x29, x30, [sp, #-16]!
  40b320:	ldr	w0, [x0, #16]
  40b324:	mov	x29, sp
  40b328:	bl	40b1d4 <__fxstatat@plt+0x8624>
  40b32c:	ldp	x29, x30, [sp], #16
  40b330:	ret
  40b334:	stp	x29, x30, [sp, #-16]!
  40b338:	mov	x29, sp
  40b33c:	bl	40b350 <__fxstatat@plt+0x87a0>
  40b340:	cbz	x0, 40b34c <__fxstatat@plt+0x879c>
  40b344:	ldp	x29, x30, [sp], #16
  40b348:	ret
  40b34c:	bl	411d48 <__fxstatat@plt+0xf198>
  40b350:	stp	x29, x30, [sp, #-80]!
  40b354:	stp	x26, x25, [sp, #16]
  40b358:	stp	x24, x23, [sp, #32]
  40b35c:	stp	x22, x21, [sp, #48]
  40b360:	stp	x20, x19, [sp, #64]
  40b364:	mov	x29, sp
  40b368:	mov	x20, x2
  40b36c:	mov	x19, x1
  40b370:	mov	x21, x0
  40b374:	bl	40afa0 <__fxstatat@plt+0x83f0>
  40b378:	mov	x22, x0
  40b37c:	bl	40afec <__fxstatat@plt+0x843c>
  40b380:	sub	x8, x22, x21
  40b384:	mov	x24, x0
  40b388:	add	x23, x8, x0
  40b38c:	mov	x0, x19
  40b390:	bl	402550 <strlen@plt>
  40b394:	mov	x22, x0
  40b398:	cbz	x24, 40b3b4 <__fxstatat@plt+0x8804>
  40b39c:	add	x8, x23, x21
  40b3a0:	ldurb	w8, [x8, #-1]
  40b3a4:	cmp	w8, #0x2f
  40b3a8:	b.ne	40b3c8 <__fxstatat@plt+0x8818>  // b.any
  40b3ac:	mov	w25, wzr
  40b3b0:	b	40b3d8 <__fxstatat@plt+0x8828>
  40b3b4:	ldrb	w8, [x19]
  40b3b8:	cmp	w8, #0x2f
  40b3bc:	mov	w8, #0x2e                  	// #46
  40b3c0:	csel	w25, w8, wzr, eq  // eq = none
  40b3c4:	b	40b3d8 <__fxstatat@plt+0x8828>
  40b3c8:	ldrb	w8, [x19]
  40b3cc:	cmp	w8, #0x2f
  40b3d0:	mov	w8, #0x2f                  	// #47
  40b3d4:	csel	w25, wzr, w8, eq  // eq = none
  40b3d8:	cmp	w25, #0x0
  40b3dc:	add	x8, x22, x23
  40b3e0:	cinc	x8, x8, ne  // ne = any
  40b3e4:	add	x0, x8, #0x1
  40b3e8:	cset	w26, ne  // ne = any
  40b3ec:	bl	402730 <malloc@plt>
  40b3f0:	mov	x24, x0
  40b3f4:	cbz	x0, 40b430 <__fxstatat@plt+0x8880>
  40b3f8:	mov	x3, #0xffffffffffffffff    	// #-1
  40b3fc:	mov	x0, x24
  40b400:	mov	x1, x21
  40b404:	mov	x2, x23
  40b408:	bl	402aa0 <__mempcpy_chk@plt>
  40b40c:	strb	w25, [x0]
  40b410:	add	x0, x0, x26
  40b414:	cbz	x20, 40b41c <__fxstatat@plt+0x886c>
  40b418:	str	x0, [x20]
  40b41c:	mov	x3, #0xffffffffffffffff    	// #-1
  40b420:	mov	x1, x19
  40b424:	mov	x2, x22
  40b428:	bl	402aa0 <__mempcpy_chk@plt>
  40b42c:	strb	wzr, [x0]
  40b430:	mov	x0, x24
  40b434:	ldp	x20, x19, [sp, #64]
  40b438:	ldp	x22, x21, [sp, #48]
  40b43c:	ldp	x24, x23, [sp, #32]
  40b440:	ldp	x26, x25, [sp, #16]
  40b444:	ldp	x29, x30, [sp], #80
  40b448:	ret
  40b44c:	sub	sp, sp, #0x60
  40b450:	stp	x29, x30, [sp, #16]
  40b454:	str	x25, [sp, #32]
  40b458:	stp	x24, x23, [sp, #48]
  40b45c:	stp	x22, x21, [sp, #64]
  40b460:	stp	x20, x19, [sp, #80]
  40b464:	add	x29, sp, #0x10
  40b468:	mov	x21, x1
  40b46c:	mov	x20, x0
  40b470:	bl	402950 <strcmp@plt>
  40b474:	cbz	w0, 40b508 <__fxstatat@plt+0x8958>
  40b478:	ldrb	w22, [x20]
  40b47c:	cbz	w22, 40b4ec <__fxstatat@plt+0x893c>
  40b480:	ldrb	w23, [x21]
  40b484:	cbz	w23, 40b504 <__fxstatat@plt+0x8954>
  40b488:	mov	w19, w0
  40b48c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x64b8>
  40b490:	add	x0, x0, #0x264
  40b494:	mov	x1, x20
  40b498:	bl	402950 <strcmp@plt>
  40b49c:	cbz	w0, 40b4ec <__fxstatat@plt+0x893c>
  40b4a0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x64b8>
  40b4a4:	add	x0, x0, #0x264
  40b4a8:	mov	x1, x21
  40b4ac:	bl	402950 <strcmp@plt>
  40b4b0:	cbz	w0, 40b504 <__fxstatat@plt+0x8954>
  40b4b4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x64b8>
  40b4b8:	add	x0, x0, #0x263
  40b4bc:	mov	x1, x20
  40b4c0:	bl	402950 <strcmp@plt>
  40b4c4:	cbz	w0, 40b4ec <__fxstatat@plt+0x893c>
  40b4c8:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x64b8>
  40b4cc:	add	x0, x0, #0x263
  40b4d0:	mov	x1, x21
  40b4d4:	bl	402950 <strcmp@plt>
  40b4d8:	cbz	w0, 40b504 <__fxstatat@plt+0x8954>
  40b4dc:	cmp	w22, #0x2e
  40b4e0:	b.ne	40b4f4 <__fxstatat@plt+0x8944>  // b.any
  40b4e4:	cmp	w23, #0x2e
  40b4e8:	b.eq	40b4f4 <__fxstatat@plt+0x8944>  // b.none
  40b4ec:	mov	w0, #0xffffffff            	// #-1
  40b4f0:	b	40b508 <__fxstatat@plt+0x8958>
  40b4f4:	cmp	w22, #0x2e
  40b4f8:	b.eq	40b524 <__fxstatat@plt+0x8974>  // b.none
  40b4fc:	cmp	w23, #0x2e
  40b500:	b.ne	40b524 <__fxstatat@plt+0x8974>  // b.any
  40b504:	mov	w0, #0x1                   	// #1
  40b508:	ldp	x20, x19, [sp, #80]
  40b50c:	ldp	x22, x21, [sp, #64]
  40b510:	ldp	x24, x23, [sp, #48]
  40b514:	ldr	x25, [sp, #32]
  40b518:	ldp	x29, x30, [sp, #16]
  40b51c:	add	sp, sp, #0x60
  40b520:	ret
  40b524:	cmp	w22, #0x2e
  40b528:	cset	w8, eq  // eq = none
  40b52c:	cmp	w23, #0x2e
  40b530:	cset	w9, eq  // eq = none
  40b534:	tst	w8, w9
  40b538:	cinc	x21, x21, ne  // ne = any
  40b53c:	cinc	x20, x20, ne  // ne = any
  40b540:	add	x0, x29, #0x18
  40b544:	str	x20, [x29, #24]
  40b548:	str	x21, [sp, #8]
  40b54c:	bl	40b5c8 <__fxstatat@plt+0x8a18>
  40b550:	mov	x22, x0
  40b554:	add	x0, sp, #0x8
  40b558:	bl	40b5c8 <__fxstatat@plt+0x8a18>
  40b55c:	ldr	x24, [x29, #24]
  40b560:	ldr	x25, [sp, #8]
  40b564:	cmp	x22, #0x0
  40b568:	orr	x8, x22, x0
  40b56c:	csel	x9, x22, x24, ne  // ne = any
  40b570:	cmp	x0, #0x0
  40b574:	sub	x22, x9, x20
  40b578:	csel	x9, x0, x25, ne  // ne = any
  40b57c:	sub	x23, x9, x21
  40b580:	cbz	x8, 40b5a8 <__fxstatat@plt+0x89f8>
  40b584:	cmp	x22, x23
  40b588:	b.ne	40b5a8 <__fxstatat@plt+0x89f8>  // b.any
  40b58c:	mov	x0, x20
  40b590:	mov	x1, x21
  40b594:	mov	x2, x22
  40b598:	bl	402780 <strncmp@plt>
  40b59c:	cbnz	w0, 40b5a8 <__fxstatat@plt+0x89f8>
  40b5a0:	sub	x22, x24, x20
  40b5a4:	sub	x23, x25, x21
  40b5a8:	mov	x0, x20
  40b5ac:	mov	x1, x22
  40b5b0:	mov	x2, x21
  40b5b4:	mov	x3, x23
  40b5b8:	bl	40b668 <__fxstatat@plt+0x8ab8>
  40b5bc:	cmp	w0, #0x0
  40b5c0:	csel	w0, w19, w0, eq  // eq = none
  40b5c4:	b	40b508 <__fxstatat@plt+0x8958>
  40b5c8:	stp	x29, x30, [sp, #-48]!
  40b5cc:	stp	x20, x19, [sp, #32]
  40b5d0:	ldr	x8, [x0]
  40b5d4:	str	x21, [sp, #16]
  40b5d8:	mov	x29, sp
  40b5dc:	ldrb	w9, [x8]
  40b5e0:	cbz	w9, 40b650 <__fxstatat@plt+0x8aa0>
  40b5e4:	mov	x19, x0
  40b5e8:	mov	w21, wzr
  40b5ec:	mov	x20, xzr
  40b5f0:	b	40b614 <__fxstatat@plt+0x8a64>
  40b5f4:	cmp	x20, #0x0
  40b5f8:	csel	x20, x8, x20, eq  // eq = none
  40b5fc:	mov	w21, #0x1                   	// #1
  40b600:	ldr	x9, [x19]
  40b604:	add	x8, x9, #0x1
  40b608:	str	x8, [x19]
  40b60c:	ldrb	w9, [x9, #1]
  40b610:	cbz	w9, 40b654 <__fxstatat@plt+0x8aa4>
  40b614:	and	w0, w9, #0xff
  40b618:	tbz	w21, #0, 40b62c <__fxstatat@plt+0x8a7c>
  40b61c:	bl	40a62c <__fxstatat@plt+0x7a7c>
  40b620:	mov	w21, wzr
  40b624:	tbnz	w0, #0, 40b600 <__fxstatat@plt+0x8a50>
  40b628:	b	40b63c <__fxstatat@plt+0x8a8c>
  40b62c:	cmp	w0, #0x2e
  40b630:	b.eq	40b5f4 <__fxstatat@plt+0x8a44>  // b.none
  40b634:	bl	40a5f0 <__fxstatat@plt+0x7a40>
  40b638:	tbnz	w0, #0, 40b600 <__fxstatat@plt+0x8a50>
  40b63c:	ldr	x8, [x19]
  40b640:	ldrb	w8, [x8]
  40b644:	cmp	w8, #0x7e
  40b648:	csel	x20, x20, xzr, eq  // eq = none
  40b64c:	b	40b600 <__fxstatat@plt+0x8a50>
  40b650:	mov	x20, xzr
  40b654:	mov	x0, x20
  40b658:	ldp	x20, x19, [sp, #32]
  40b65c:	ldr	x21, [sp, #16]
  40b660:	ldp	x29, x30, [sp], #48
  40b664:	ret
  40b668:	sub	sp, sp, #0x70
  40b66c:	stp	x26, x25, [sp, #48]
  40b670:	stp	x22, x21, [sp, #80]
  40b674:	stp	x20, x19, [sp, #96]
  40b678:	mov	x19, x3
  40b67c:	mov	x20, x2
  40b680:	mov	x21, x1
  40b684:	mov	x22, x0
  40b688:	mov	x25, xzr
  40b68c:	mov	x26, xzr
  40b690:	stp	x29, x30, [sp, #16]
  40b694:	stp	x28, x27, [sp, #32]
  40b698:	stp	x24, x23, [sp, #64]
  40b69c:	add	x29, sp, #0x10
  40b6a0:	b	40b6b0 <__fxstatat@plt+0x8b00>
  40b6a4:	mov	w27, #0x1                   	// #1
  40b6a8:	mov	w8, #0x1                   	// #1
  40b6ac:	cbnz	w8, 40b848 <__fxstatat@plt+0x8c98>
  40b6b0:	cmp	x25, x19
  40b6b4:	b.cc	40b6d4 <__fxstatat@plt+0x8b24>  // b.lo, b.ul, b.last
  40b6b8:	cmp	x26, x21
  40b6bc:	b.cc	40b6d4 <__fxstatat@plt+0x8b24>  // b.lo, b.ul, b.last
  40b6c0:	b	40b844 <__fxstatat@plt+0x8c94>
  40b6c4:	add	x26, x26, #0x1
  40b6c8:	add	x25, x25, #0x1
  40b6cc:	mov	w8, #0x1                   	// #1
  40b6d0:	tbz	w8, #0, 40b6a8 <__fxstatat@plt+0x8af8>
  40b6d4:	cmp	x26, x21
  40b6d8:	b.cs	40b6e8 <__fxstatat@plt+0x8b38>  // b.hs, b.nlast
  40b6dc:	ldrb	w0, [x22, x26]
  40b6e0:	bl	40a698 <__fxstatat@plt+0x7ae8>
  40b6e4:	tbz	w0, #0, 40b6fc <__fxstatat@plt+0x8b4c>
  40b6e8:	cmp	x25, x19
  40b6ec:	b.cs	40b754 <__fxstatat@plt+0x8ba4>  // b.hs, b.nlast
  40b6f0:	ldrb	w0, [x20, x25]
  40b6f4:	bl	40a698 <__fxstatat@plt+0x7ae8>
  40b6f8:	tbnz	w0, #0, 40b754 <__fxstatat@plt+0x8ba4>
  40b6fc:	cmp	x26, x21
  40b700:	b.ne	40b724 <__fxstatat@plt+0x8b74>  // b.any
  40b704:	mov	w24, wzr
  40b708:	cmp	x25, x19
  40b70c:	b.eq	40b738 <__fxstatat@plt+0x8b88>  // b.none
  40b710:	ldrb	w0, [x20, x25]
  40b714:	bl	40b86c <__fxstatat@plt+0x8cbc>
  40b718:	subs	w9, w24, w0
  40b71c:	b.eq	40b6c4 <__fxstatat@plt+0x8b14>  // b.none
  40b720:	b	40b744 <__fxstatat@plt+0x8b94>
  40b724:	ldrb	w0, [x22, x26]
  40b728:	bl	40b86c <__fxstatat@plt+0x8cbc>
  40b72c:	mov	w24, w0
  40b730:	cmp	x25, x19
  40b734:	b.ne	40b710 <__fxstatat@plt+0x8b60>  // b.any
  40b738:	mov	w0, wzr
  40b73c:	subs	w9, w24, w0
  40b740:	b.eq	40b6c4 <__fxstatat@plt+0x8b14>  // b.none
  40b744:	mov	w8, wzr
  40b748:	mov	w27, w9
  40b74c:	tbnz	w8, #0, 40b6d4 <__fxstatat@plt+0x8b24>
  40b750:	b	40b6a8 <__fxstatat@plt+0x8af8>
  40b754:	sub	x9, x26, #0x1
  40b758:	add	x8, x22, x26
  40b75c:	mov	x26, x9
  40b760:	add	x9, x22, x26
  40b764:	ldrb	w9, [x9, #1]
  40b768:	mov	x24, x8
  40b76c:	add	x26, x26, #0x1
  40b770:	add	x8, x8, #0x1
  40b774:	cmp	w9, #0x30
  40b778:	b.eq	40b760 <__fxstatat@plt+0x8bb0>  // b.none
  40b77c:	ldrb	w8, [x20, x25]
  40b780:	add	x25, x25, #0x1
  40b784:	cmp	w8, #0x30
  40b788:	b.eq	40b77c <__fxstatat@plt+0x8bcc>  // b.none
  40b78c:	add	x23, x22, x26
  40b790:	ldrb	w0, [x23]
  40b794:	bl	40a698 <__fxstatat@plt+0x7ae8>
  40b798:	tbz	w0, #0, 40b7ec <__fxstatat@plt+0x8c3c>
  40b79c:	mov	x28, xzr
  40b7a0:	add	x23, x20, x25
  40b7a4:	str	w27, [sp, #8]
  40b7a8:	stur	wzr, [x29, #-4]
  40b7ac:	b	40b7c0 <__fxstatat@plt+0x8c10>
  40b7b0:	ldrb	w0, [x24, #1]!
  40b7b4:	bl	40a698 <__fxstatat@plt+0x7ae8>
  40b7b8:	add	x28, x28, #0x1
  40b7bc:	tbz	w0, #0, 40b7fc <__fxstatat@plt+0x8c4c>
  40b7c0:	add	x27, x23, x28
  40b7c4:	ldurb	w0, [x27, #-1]
  40b7c8:	bl	40a698 <__fxstatat@plt+0x7ae8>
  40b7cc:	tbz	w0, #0, 40b7fc <__fxstatat@plt+0x8c4c>
  40b7d0:	ldur	w8, [x29, #-4]
  40b7d4:	cbnz	w8, 40b7b0 <__fxstatat@plt+0x8c00>
  40b7d8:	ldrb	w8, [x24]
  40b7dc:	ldurb	w9, [x27, #-1]
  40b7e0:	sub	w8, w8, w9
  40b7e4:	stur	w8, [x29, #-4]
  40b7e8:	b	40b7b0 <__fxstatat@plt+0x8c00>
  40b7ec:	stur	wzr, [x29, #-4]
  40b7f0:	sub	x25, x25, #0x1
  40b7f4:	mov	x24, x23
  40b7f8:	b	40b80c <__fxstatat@plt+0x8c5c>
  40b7fc:	ldr	w27, [sp, #8]
  40b800:	add	x8, x25, x28
  40b804:	add	x26, x26, x28
  40b808:	sub	x25, x8, #0x1
  40b80c:	ldrb	w0, [x24]
  40b810:	bl	40a698 <__fxstatat@plt+0x7ae8>
  40b814:	tbnz	w0, #0, 40b6a4 <__fxstatat@plt+0x8af4>
  40b818:	ldrb	w0, [x20, x25]
  40b81c:	bl	40a698 <__fxstatat@plt+0x7ae8>
  40b820:	tbz	w0, #0, 40b830 <__fxstatat@plt+0x8c80>
  40b824:	mov	w8, #0x1                   	// #1
  40b828:	mov	w27, #0xffffffff            	// #-1
  40b82c:	b	40b6ac <__fxstatat@plt+0x8afc>
  40b830:	ldur	w9, [x29, #-4]
  40b834:	cmp	w9, #0x0
  40b838:	cset	w8, ne  // ne = any
  40b83c:	csel	w27, w27, w9, eq  // eq = none
  40b840:	b	40b6ac <__fxstatat@plt+0x8afc>
  40b844:	mov	w27, wzr
  40b848:	mov	w0, w27
  40b84c:	ldp	x20, x19, [sp, #96]
  40b850:	ldp	x22, x21, [sp, #80]
  40b854:	ldp	x24, x23, [sp, #64]
  40b858:	ldp	x26, x25, [sp, #48]
  40b85c:	ldp	x28, x27, [sp, #32]
  40b860:	ldp	x29, x30, [sp, #16]
  40b864:	add	sp, sp, #0x70
  40b868:	ret
  40b86c:	stp	x29, x30, [sp, #-32]!
  40b870:	stp	x20, x19, [sp, #16]
  40b874:	and	w19, w0, #0xff
  40b878:	mov	w20, w0
  40b87c:	mov	w0, w19
  40b880:	mov	x29, sp
  40b884:	bl	40a698 <__fxstatat@plt+0x7ae8>
  40b888:	tbz	w0, #0, 40b894 <__fxstatat@plt+0x8ce4>
  40b88c:	mov	w19, wzr
  40b890:	b	40b8a0 <__fxstatat@plt+0x8cf0>
  40b894:	mov	w0, w19
  40b898:	bl	40a62c <__fxstatat@plt+0x7a7c>
  40b89c:	tbz	w0, #0, 40b8a8 <__fxstatat@plt+0x8cf8>
  40b8a0:	mov	w0, w19
  40b8a4:	b	40b8b8 <__fxstatat@plt+0x8d08>
  40b8a8:	and	w8, w20, #0xff
  40b8ac:	orr	w9, w19, #0x100
  40b8b0:	cmp	w8, #0x7e
  40b8b4:	csinv	w0, w9, wzr, ne  // ne = any
  40b8b8:	ldp	x20, x19, [sp, #16]
  40b8bc:	ldp	x29, x30, [sp], #32
  40b8c0:	ret
  40b8c4:	stp	x29, x30, [sp, #-16]!
  40b8c8:	mov	x1, x0
  40b8cc:	mov	w0, wzr
  40b8d0:	mov	x29, sp
  40b8d4:	bl	402660 <clock_gettime@plt>
  40b8d8:	ldp	x29, x30, [sp], #16
  40b8dc:	ret
  40b8e0:	sub	sp, sp, #0x20
  40b8e4:	mov	x0, sp
  40b8e8:	stp	x29, x30, [sp, #16]
  40b8ec:	add	x29, sp, #0x10
  40b8f0:	bl	40b8c4 <__fxstatat@plt+0x8d14>
  40b8f4:	ldp	x0, x1, [sp]
  40b8f8:	ldp	x29, x30, [sp, #16]
  40b8fc:	add	sp, sp, #0x20
  40b900:	ret
  40b904:	stp	x29, x30, [sp, #-32]!
  40b908:	mov	x1, xzr
  40b90c:	str	x19, [sp, #16]
  40b910:	mov	x29, sp
  40b914:	bl	402ba0 <setlocale@plt>
  40b918:	cbz	x0, 40b944 <__fxstatat@plt+0x8d94>
  40b91c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  40b920:	add	x1, x1, #0x266
  40b924:	mov	x19, x0
  40b928:	bl	402950 <strcmp@plt>
  40b92c:	cbz	w0, 40b94c <__fxstatat@plt+0x8d9c>
  40b930:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  40b934:	add	x1, x1, #0x268
  40b938:	mov	x0, x19
  40b93c:	bl	402950 <strcmp@plt>
  40b940:	cbz	w0, 40b94c <__fxstatat@plt+0x8d9c>
  40b944:	mov	w0, #0x1                   	// #1
  40b948:	b	40b950 <__fxstatat@plt+0x8da0>
  40b94c:	mov	w0, wzr
  40b950:	ldr	x19, [sp, #16]
  40b954:	ldp	x29, x30, [sp], #32
  40b958:	ret
  40b95c:	ldr	x0, [x0, #16]
  40b960:	ret
  40b964:	ldr	x0, [x0, #24]
  40b968:	ret
  40b96c:	ldr	x0, [x0, #32]
  40b970:	ret
  40b974:	ldp	x8, x9, [x0]
  40b978:	cmp	x8, x9
  40b97c:	b.cs	40b9c0 <__fxstatat@plt+0x8e10>  // b.hs, b.nlast
  40b980:	ldr	x9, [x0, #8]
  40b984:	mov	x0, xzr
  40b988:	b	40b998 <__fxstatat@plt+0x8de8>
  40b98c:	add	x8, x8, #0x10
  40b990:	cmp	x8, x9
  40b994:	b.cs	40b9c4 <__fxstatat@plt+0x8e14>  // b.hs, b.nlast
  40b998:	ldr	x10, [x8]
  40b99c:	cbz	x10, 40b98c <__fxstatat@plt+0x8ddc>
  40b9a0:	mov	x10, xzr
  40b9a4:	mov	x11, x8
  40b9a8:	ldr	x11, [x11, #8]
  40b9ac:	add	x10, x10, #0x1
  40b9b0:	cbnz	x11, 40b9a8 <__fxstatat@plt+0x8df8>
  40b9b4:	cmp	x10, x0
  40b9b8:	csel	x0, x10, x0, hi  // hi = pmore
  40b9bc:	b	40b98c <__fxstatat@plt+0x8ddc>
  40b9c0:	mov	x0, xzr
  40b9c4:	ret
  40b9c8:	ldp	x9, x8, [x0]
  40b9cc:	cmp	x9, x8
  40b9d0:	b.cs	40ba10 <__fxstatat@plt+0x8e60>  // b.hs, b.nlast
  40b9d4:	ldr	x11, [x0, #8]
  40b9d8:	mov	x8, xzr
  40b9dc:	mov	x10, xzr
  40b9e0:	b	40b9f0 <__fxstatat@plt+0x8e40>
  40b9e4:	add	x9, x9, #0x10
  40b9e8:	cmp	x9, x11
  40b9ec:	b.cs	40ba18 <__fxstatat@plt+0x8e68>  // b.hs, b.nlast
  40b9f0:	ldr	x12, [x9]
  40b9f4:	cbz	x12, 40b9e4 <__fxstatat@plt+0x8e34>
  40b9f8:	mov	x12, x9
  40b9fc:	ldr	x12, [x12, #8]
  40ba00:	add	x8, x8, #0x1
  40ba04:	cbnz	x12, 40b9fc <__fxstatat@plt+0x8e4c>
  40ba08:	add	x10, x10, #0x1
  40ba0c:	b	40b9e4 <__fxstatat@plt+0x8e34>
  40ba10:	mov	x10, xzr
  40ba14:	mov	x8, xzr
  40ba18:	ldr	x9, [x0, #24]
  40ba1c:	cmp	x10, x9
  40ba20:	b.ne	40ba38 <__fxstatat@plt+0x8e88>  // b.any
  40ba24:	ldr	x9, [x0, #32]
  40ba28:	cmp	x8, x9
  40ba2c:	b.ne	40ba38 <__fxstatat@plt+0x8e88>  // b.any
  40ba30:	mov	w0, #0x1                   	// #1
  40ba34:	ret
  40ba38:	mov	w0, wzr
  40ba3c:	ret
  40ba40:	stp	x29, x30, [sp, #-64]!
  40ba44:	str	x23, [sp, #16]
  40ba48:	stp	x22, x21, [sp, #32]
  40ba4c:	stp	x20, x19, [sp, #48]
  40ba50:	mov	x29, sp
  40ba54:	mov	x19, x1
  40ba58:	mov	x20, x0
  40ba5c:	bl	40b96c <__fxstatat@plt+0x8dbc>
  40ba60:	mov	x21, x0
  40ba64:	mov	x0, x20
  40ba68:	bl	40b95c <__fxstatat@plt+0x8dac>
  40ba6c:	mov	x22, x0
  40ba70:	mov	x0, x20
  40ba74:	bl	40b964 <__fxstatat@plt+0x8db4>
  40ba78:	mov	x23, x0
  40ba7c:	mov	x0, x20
  40ba80:	bl	40b974 <__fxstatat@plt+0x8dc4>
  40ba84:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x64b8>
  40ba88:	mov	x20, x0
  40ba8c:	add	x2, x2, #0x26e
  40ba90:	mov	w1, #0x1                   	// #1
  40ba94:	mov	x0, x19
  40ba98:	mov	x3, x21
  40ba9c:	bl	402930 <__fprintf_chk@plt>
  40baa0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x64b8>
  40baa4:	add	x2, x2, #0x286
  40baa8:	mov	w1, #0x1                   	// #1
  40baac:	mov	x0, x19
  40bab0:	mov	x3, x22
  40bab4:	bl	402930 <__fprintf_chk@plt>
  40bab8:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  40babc:	ucvtf	d0, x23
  40bac0:	fmov	d1, x8
  40bac4:	fmul	d0, d0, d1
  40bac8:	ucvtf	d1, x22
  40bacc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x64b8>
  40bad0:	fdiv	d0, d0, d1
  40bad4:	add	x2, x2, #0x29e
  40bad8:	mov	w1, #0x1                   	// #1
  40badc:	mov	x0, x19
  40bae0:	mov	x3, x23
  40bae4:	bl	402930 <__fprintf_chk@plt>
  40bae8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x64b8>
  40baec:	add	x2, x2, #0x2bf
  40baf0:	mov	w1, #0x1                   	// #1
  40baf4:	mov	x0, x19
  40baf8:	mov	x3, x20
  40bafc:	bl	402930 <__fprintf_chk@plt>
  40bb00:	ldp	x20, x19, [sp, #48]
  40bb04:	ldp	x22, x21, [sp, #32]
  40bb08:	ldr	x23, [sp, #16]
  40bb0c:	ldp	x29, x30, [sp], #64
  40bb10:	ret
  40bb14:	stp	x29, x30, [sp, #-48]!
  40bb18:	str	x21, [sp, #16]
  40bb1c:	stp	x20, x19, [sp, #32]
  40bb20:	mov	x29, sp
  40bb24:	mov	x19, x1
  40bb28:	mov	x20, x0
  40bb2c:	bl	40bb84 <__fxstatat@plt+0x8fd4>
  40bb30:	ldr	x8, [x0]
  40bb34:	mov	x21, x0
  40bb38:	mov	x0, xzr
  40bb3c:	cbz	x8, 40bb74 <__fxstatat@plt+0x8fc4>
  40bb40:	cbz	x21, 40bb74 <__fxstatat@plt+0x8fc4>
  40bb44:	ldr	x1, [x21]
  40bb48:	cmp	x1, x19
  40bb4c:	b.eq	40bb70 <__fxstatat@plt+0x8fc0>  // b.none
  40bb50:	ldr	x8, [x20, #56]
  40bb54:	mov	x0, x19
  40bb58:	blr	x8
  40bb5c:	tbnz	w0, #0, 40bb70 <__fxstatat@plt+0x8fc0>
  40bb60:	ldr	x21, [x21, #8]
  40bb64:	cbnz	x21, 40bb44 <__fxstatat@plt+0x8f94>
  40bb68:	mov	x0, xzr
  40bb6c:	b	40bb74 <__fxstatat@plt+0x8fc4>
  40bb70:	ldr	x0, [x21]
  40bb74:	ldp	x20, x19, [sp, #32]
  40bb78:	ldr	x21, [sp, #16]
  40bb7c:	ldp	x29, x30, [sp], #48
  40bb80:	ret
  40bb84:	stp	x29, x30, [sp, #-32]!
  40bb88:	ldr	x8, [x0, #16]
  40bb8c:	ldr	x9, [x0, #48]
  40bb90:	str	x19, [sp, #16]
  40bb94:	mov	x19, x0
  40bb98:	mov	x0, x1
  40bb9c:	mov	x1, x8
  40bba0:	mov	x29, sp
  40bba4:	blr	x9
  40bba8:	ldr	x8, [x19, #16]
  40bbac:	cmp	x0, x8
  40bbb0:	b.cs	40bbc8 <__fxstatat@plt+0x9018>  // b.hs, b.nlast
  40bbb4:	ldr	x8, [x19]
  40bbb8:	ldr	x19, [sp, #16]
  40bbbc:	add	x0, x8, x0, lsl #4
  40bbc0:	ldp	x29, x30, [sp], #32
  40bbc4:	ret
  40bbc8:	bl	4028c0 <abort@plt>
  40bbcc:	stp	x29, x30, [sp, #-16]!
  40bbd0:	ldr	x8, [x0, #32]
  40bbd4:	mov	x29, sp
  40bbd8:	cbz	x8, 40bbf4 <__fxstatat@plt+0x9044>
  40bbdc:	ldr	x9, [x0]
  40bbe0:	ldr	x8, [x0, #8]
  40bbe4:	cmp	x9, x8
  40bbe8:	b.cs	40bc00 <__fxstatat@plt+0x9050>  // b.hs, b.nlast
  40bbec:	ldr	x8, [x9], #16
  40bbf0:	cbz	x8, 40bbe0 <__fxstatat@plt+0x9030>
  40bbf4:	mov	x0, x8
  40bbf8:	ldp	x29, x30, [sp], #16
  40bbfc:	ret
  40bc00:	bl	4028c0 <abort@plt>
  40bc04:	stp	x29, x30, [sp, #-32]!
  40bc08:	stp	x20, x19, [sp, #16]
  40bc0c:	mov	x29, sp
  40bc10:	mov	x20, x1
  40bc14:	mov	x19, x0
  40bc18:	bl	40bb84 <__fxstatat@plt+0x8fd4>
  40bc1c:	mov	x8, x0
  40bc20:	b	40bc2c <__fxstatat@plt+0x907c>
  40bc24:	ldr	x8, [x8, #8]
  40bc28:	cbz	x8, 40bc48 <__fxstatat@plt+0x9098>
  40bc2c:	ldr	x9, [x8]
  40bc30:	cmp	x9, x20
  40bc34:	b.ne	40bc24 <__fxstatat@plt+0x9074>  // b.any
  40bc38:	ldr	x9, [x8, #8]
  40bc3c:	cbz	x9, 40bc24 <__fxstatat@plt+0x9074>
  40bc40:	ldr	x0, [x9]
  40bc44:	b	40bc68 <__fxstatat@plt+0x90b8>
  40bc48:	ldr	x8, [x19, #8]
  40bc4c:	add	x9, x0, #0x10
  40bc50:	cmp	x9, x8
  40bc54:	b.cs	40bc64 <__fxstatat@plt+0x90b4>  // b.hs, b.nlast
  40bc58:	ldr	x0, [x9], #16
  40bc5c:	cbz	x0, 40bc50 <__fxstatat@plt+0x90a0>
  40bc60:	b	40bc68 <__fxstatat@plt+0x90b8>
  40bc64:	mov	x0, xzr
  40bc68:	ldp	x20, x19, [sp, #16]
  40bc6c:	ldp	x29, x30, [sp], #32
  40bc70:	ret
  40bc74:	ldp	x9, x8, [x0]
  40bc78:	cmp	x9, x8
  40bc7c:	b.cs	40bcd8 <__fxstatat@plt+0x9128>  // b.hs, b.nlast
  40bc80:	mov	x10, xzr
  40bc84:	ldr	x8, [x9]
  40bc88:	cbz	x8, 40bcb8 <__fxstatat@plt+0x9108>
  40bc8c:	cbz	x9, 40bcb8 <__fxstatat@plt+0x9108>
  40bc90:	mov	x11, x9
  40bc94:	cmp	x10, x2
  40bc98:	b.cs	40bce0 <__fxstatat@plt+0x9130>  // b.hs, b.nlast
  40bc9c:	ldr	x8, [x11]
  40bca0:	str	x8, [x1, x10, lsl #3]
  40bca4:	ldr	x11, [x11, #8]
  40bca8:	add	x8, x10, #0x1
  40bcac:	mov	x10, x8
  40bcb0:	cbnz	x11, 40bc94 <__fxstatat@plt+0x90e4>
  40bcb4:	b	40bcbc <__fxstatat@plt+0x910c>
  40bcb8:	mov	x8, x10
  40bcbc:	ldr	x10, [x0, #8]
  40bcc0:	add	x9, x9, #0x10
  40bcc4:	cmp	x9, x10
  40bcc8:	mov	x10, x8
  40bccc:	b.cc	40bc84 <__fxstatat@plt+0x90d4>  // b.lo, b.ul, b.last
  40bcd0:	mov	x0, x8
  40bcd4:	ret
  40bcd8:	mov	x0, xzr
  40bcdc:	ret
  40bce0:	mov	x0, x10
  40bce4:	ret
  40bce8:	stp	x29, x30, [sp, #-64]!
  40bcec:	stp	x24, x23, [sp, #16]
  40bcf0:	stp	x22, x21, [sp, #32]
  40bcf4:	stp	x20, x19, [sp, #48]
  40bcf8:	ldp	x23, x8, [x0]
  40bcfc:	mov	x29, sp
  40bd00:	cmp	x23, x8
  40bd04:	b.cs	40bd5c <__fxstatat@plt+0x91ac>  // b.hs, b.nlast
  40bd08:	mov	x19, x2
  40bd0c:	mov	x20, x0
  40bd10:	mov	x22, x1
  40bd14:	mov	x21, xzr
  40bd18:	b	40bd2c <__fxstatat@plt+0x917c>
  40bd1c:	ldr	x8, [x20, #8]
  40bd20:	add	x23, x23, #0x10
  40bd24:	cmp	x23, x8
  40bd28:	b.cs	40bd60 <__fxstatat@plt+0x91b0>  // b.hs, b.nlast
  40bd2c:	ldr	x8, [x23]
  40bd30:	cbz	x8, 40bd1c <__fxstatat@plt+0x916c>
  40bd34:	cbz	x23, 40bd1c <__fxstatat@plt+0x916c>
  40bd38:	mov	x24, x23
  40bd3c:	ldr	x0, [x24]
  40bd40:	mov	x1, x19
  40bd44:	blr	x22
  40bd48:	tbz	w0, #0, 40bd60 <__fxstatat@plt+0x91b0>
  40bd4c:	ldr	x24, [x24, #8]
  40bd50:	add	x21, x21, #0x1
  40bd54:	cbnz	x24, 40bd3c <__fxstatat@plt+0x918c>
  40bd58:	b	40bd1c <__fxstatat@plt+0x916c>
  40bd5c:	mov	x21, xzr
  40bd60:	mov	x0, x21
  40bd64:	ldp	x20, x19, [sp, #48]
  40bd68:	ldp	x22, x21, [sp, #32]
  40bd6c:	ldp	x24, x23, [sp, #16]
  40bd70:	ldp	x29, x30, [sp], #64
  40bd74:	ret
  40bd78:	ldrb	w9, [x0]
  40bd7c:	cbz	w9, 40bdac <__fxstatat@plt+0x91fc>
  40bd80:	mov	x8, x0
  40bd84:	mov	x0, xzr
  40bd88:	add	x8, x8, #0x1
  40bd8c:	lsl	x10, x0, #5
  40bd90:	sub	x10, x10, x0
  40bd94:	add	x10, x10, w9, uxtb
  40bd98:	ldrb	w9, [x8], #1
  40bd9c:	udiv	x11, x10, x1
  40bda0:	msub	x0, x11, x1, x10
  40bda4:	cbnz	w9, 40bd8c <__fxstatat@plt+0x91dc>
  40bda8:	ret
  40bdac:	mov	x0, xzr
  40bdb0:	ret
  40bdb4:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x64b8>
  40bdb8:	add	x8, x8, #0x2d8
  40bdbc:	ldr	w9, [x8, #16]
  40bdc0:	ldr	q0, [x8]
  40bdc4:	str	w9, [x0, #16]
  40bdc8:	str	q0, [x0]
  40bdcc:	ret
  40bdd0:	stp	x29, x30, [sp, #-64]!
  40bdd4:	adrp	x8, 40b000 <__fxstatat@plt+0x8450>
  40bdd8:	add	x8, x8, #0xea4
  40bddc:	cmp	x2, #0x0
  40bde0:	adrp	x9, 40b000 <__fxstatat@plt+0x8450>
  40bde4:	stp	x24, x23, [sp, #16]
  40bde8:	stp	x22, x21, [sp, #32]
  40bdec:	mov	x21, x0
  40bdf0:	add	x9, x9, #0xed0
  40bdf4:	csel	x23, x8, x2, eq  // eq = none
  40bdf8:	cmp	x3, #0x0
  40bdfc:	mov	w0, #0x50                  	// #80
  40be00:	stp	x20, x19, [sp, #48]
  40be04:	mov	x29, sp
  40be08:	mov	x19, x4
  40be0c:	mov	x22, x1
  40be10:	csel	x24, x9, x3, eq  // eq = none
  40be14:	bl	402730 <malloc@plt>
  40be18:	mov	x20, x0
  40be1c:	cbz	x0, 40be8c <__fxstatat@plt+0x92dc>
  40be20:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x64b8>
  40be24:	add	x8, x8, #0x2d8
  40be28:	cmp	x22, #0x0
  40be2c:	csel	x22, x8, x22, eq  // eq = none
  40be30:	mov	x0, x20
  40be34:	str	x22, [x20, #40]
  40be38:	bl	40bedc <__fxstatat@plt+0x932c>
  40be3c:	tbz	w0, #0, 40be80 <__fxstatat@plt+0x92d0>
  40be40:	mov	x0, x21
  40be44:	mov	x1, x22
  40be48:	bl	40bf84 <__fxstatat@plt+0x93d4>
  40be4c:	str	x0, [x20, #16]
  40be50:	cbz	x0, 40be80 <__fxstatat@plt+0x92d0>
  40be54:	mov	w1, #0x10                  	// #16
  40be58:	mov	x21, x0
  40be5c:	bl	412760 <__fxstatat@plt+0xfbb0>
  40be60:	str	x0, [x20]
  40be64:	cbz	x0, 40be80 <__fxstatat@plt+0x92d0>
  40be68:	add	x8, x0, x21, lsl #4
  40be6c:	stp	xzr, xzr, [x20, #24]
  40be70:	stp	x23, x24, [x20, #48]
  40be74:	str	x8, [x20, #8]
  40be78:	stp	x19, xzr, [x20, #64]
  40be7c:	b	40be8c <__fxstatat@plt+0x92dc>
  40be80:	mov	x0, x20
  40be84:	bl	402990 <free@plt>
  40be88:	mov	x20, xzr
  40be8c:	mov	x0, x20
  40be90:	ldp	x20, x19, [sp, #48]
  40be94:	ldp	x22, x21, [sp, #32]
  40be98:	ldp	x24, x23, [sp, #16]
  40be9c:	ldp	x29, x30, [sp], #64
  40bea0:	ret
  40bea4:	stp	x29, x30, [sp, #-32]!
  40bea8:	str	x19, [sp, #16]
  40beac:	mov	x19, x1
  40beb0:	mov	w1, #0x3                   	// #3
  40beb4:	mov	x29, sp
  40beb8:	bl	4131c8 <_obstack_memory_used@@Base+0x680>
  40bebc:	udiv	x8, x0, x19
  40bec0:	msub	x0, x8, x19, x0
  40bec4:	ldr	x19, [sp, #16]
  40bec8:	ldp	x29, x30, [sp], #32
  40becc:	ret
  40bed0:	cmp	x0, x1
  40bed4:	cset	w0, eq  // eq = none
  40bed8:	ret
  40bedc:	ldr	x8, [x0, #40]
  40bee0:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x64b8>
  40bee4:	add	x9, x9, #0x2d8
  40bee8:	cmp	x8, x9
  40beec:	b.eq	40bf7c <__fxstatat@plt+0x93cc>  // b.none
  40bef0:	ldr	s0, [x8, #8]
  40bef4:	mov	w10, #0xcccd                	// #52429
  40bef8:	movk	w10, #0x3dcc, lsl #16
  40befc:	fmov	s1, w10
  40bf00:	fcmp	s0, s1
  40bf04:	b.le	40bf40 <__fxstatat@plt+0x9390>
  40bf08:	mov	w10, #0x6666                	// #26214
  40bf0c:	movk	w10, #0x3f66, lsl #16
  40bf10:	fmov	s1, w10
  40bf14:	fcmp	s0, s1
  40bf18:	b.pl	40bf40 <__fxstatat@plt+0x9390>  // b.nfrst
  40bf1c:	ldr	s1, [x8, #12]
  40bf20:	mov	w10, #0xcccd                	// #52429
  40bf24:	movk	w10, #0x3f8c, lsl #16
  40bf28:	fmov	s2, w10
  40bf2c:	fcmp	s1, s2
  40bf30:	b.le	40bf40 <__fxstatat@plt+0x9390>
  40bf34:	ldr	s1, [x8]
  40bf38:	fcmp	s1, #0.0
  40bf3c:	b.ge	40bf4c <__fxstatat@plt+0x939c>  // b.tcont
  40bf40:	str	x9, [x0, #40]
  40bf44:	mov	w0, wzr
  40bf48:	ret
  40bf4c:	mov	w10, #0xcccd                	// #52429
  40bf50:	movk	w10, #0x3dcc, lsl #16
  40bf54:	fmov	s2, w10
  40bf58:	fadd	s1, s1, s2
  40bf5c:	fcmp	s1, s0
  40bf60:	b.pl	40bf40 <__fxstatat@plt+0x9390>  // b.nfrst
  40bf64:	ldr	s0, [x8, #4]
  40bf68:	fmov	s2, #1.000000000000000000e+00
  40bf6c:	fcmp	s0, s2
  40bf70:	b.hi	40bf40 <__fxstatat@plt+0x9390>  // b.pmore
  40bf74:	fcmp	s1, s0
  40bf78:	b.pl	40bf40 <__fxstatat@plt+0x9390>  // b.nfrst
  40bf7c:	mov	w0, #0x1                   	// #1
  40bf80:	ret
  40bf84:	stp	x29, x30, [sp, #-16]!
  40bf88:	ldrb	w8, [x1, #16]
  40bf8c:	mov	x29, sp
  40bf90:	cbnz	w8, 40bfb8 <__fxstatat@plt+0x9408>
  40bf94:	ldr	s0, [x1, #8]
  40bf98:	mov	w8, #0x5f800000            	// #1602224128
  40bf9c:	ucvtf	s1, x0
  40bfa0:	fmov	s2, w8
  40bfa4:	fdiv	s0, s1, s0
  40bfa8:	fcvtzu	x8, s0
  40bfac:	fcmp	s0, s2
  40bfb0:	csel	x0, x8, x0, lt  // lt = tstop
  40bfb4:	b.ge	40bfd0 <__fxstatat@plt+0x9420>  // b.tcont
  40bfb8:	bl	40c75c <__fxstatat@plt+0x9bac>
  40bfbc:	lsr	x8, x0, #60
  40bfc0:	cmp	x8, #0x0
  40bfc4:	csel	x0, xzr, x0, ne  // ne = any
  40bfc8:	ldp	x29, x30, [sp], #16
  40bfcc:	ret
  40bfd0:	mov	x0, xzr
  40bfd4:	ldp	x29, x30, [sp], #16
  40bfd8:	ret
  40bfdc:	stp	x29, x30, [sp, #-48]!
  40bfe0:	str	x21, [sp, #16]
  40bfe4:	stp	x20, x19, [sp, #32]
  40bfe8:	ldp	x20, x8, [x0]
  40bfec:	mov	x19, x0
  40bff0:	mov	x29, sp
  40bff4:	b	40c004 <__fxstatat@plt+0x9454>
  40bff8:	stp	xzr, xzr, [x20]
  40bffc:	ldr	x8, [x19, #8]
  40c000:	add	x20, x20, #0x10
  40c004:	cmp	x20, x8
  40c008:	b.cs	40c070 <__fxstatat@plt+0x94c0>  // b.hs, b.nlast
  40c00c:	ldr	x8, [x20]
  40c010:	cbz	x8, 40bffc <__fxstatat@plt+0x944c>
  40c014:	ldr	x8, [x19, #64]
  40c018:	ldr	x21, [x20, #8]
  40c01c:	cmp	x8, #0x0
  40c020:	cset	w9, ne  // ne = any
  40c024:	cbnz	x21, 40c060 <__fxstatat@plt+0x94b0>
  40c028:	cbz	w9, 40bff8 <__fxstatat@plt+0x9448>
  40c02c:	ldr	x0, [x20]
  40c030:	blr	x8
  40c034:	b	40bff8 <__fxstatat@plt+0x9448>
  40c038:	str	xzr, [x21]
  40c03c:	ldr	x8, [x19, #72]
  40c040:	ldr	x10, [x21, #8]
  40c044:	str	x8, [x21, #8]
  40c048:	ldr	x8, [x19, #64]
  40c04c:	str	x21, [x19, #72]
  40c050:	mov	x21, x10
  40c054:	cmp	x8, #0x0
  40c058:	cset	w9, ne  // ne = any
  40c05c:	cbz	x10, 40c028 <__fxstatat@plt+0x9478>
  40c060:	tbz	w9, #0, 40c038 <__fxstatat@plt+0x9488>
  40c064:	ldr	x0, [x21]
  40c068:	blr	x8
  40c06c:	b	40c038 <__fxstatat@plt+0x9488>
  40c070:	stp	xzr, xzr, [x19, #24]
  40c074:	ldp	x20, x19, [sp, #32]
  40c078:	ldr	x21, [sp, #16]
  40c07c:	ldp	x29, x30, [sp], #48
  40c080:	ret
  40c084:	stp	x29, x30, [sp, #-48]!
  40c088:	stp	x20, x19, [sp, #32]
  40c08c:	ldr	x8, [x0, #64]
  40c090:	mov	x19, x0
  40c094:	str	x21, [sp, #16]
  40c098:	mov	x29, sp
  40c09c:	cbz	x8, 40c0e8 <__fxstatat@plt+0x9538>
  40c0a0:	ldr	x8, [x19, #32]
  40c0a4:	cbz	x8, 40c0e8 <__fxstatat@plt+0x9538>
  40c0a8:	ldp	x20, x8, [x19]
  40c0ac:	b	40c0b8 <__fxstatat@plt+0x9508>
  40c0b0:	ldr	x8, [x19, #8]
  40c0b4:	add	x20, x20, #0x10
  40c0b8:	cmp	x20, x8
  40c0bc:	b.cs	40c0e8 <__fxstatat@plt+0x9538>  // b.hs, b.nlast
  40c0c0:	ldr	x8, [x20]
  40c0c4:	cbz	x8, 40c0b0 <__fxstatat@plt+0x9500>
  40c0c8:	cbz	x20, 40c0b0 <__fxstatat@plt+0x9500>
  40c0cc:	mov	x21, x20
  40c0d0:	ldr	x8, [x19, #64]
  40c0d4:	ldr	x0, [x21]
  40c0d8:	blr	x8
  40c0dc:	ldr	x21, [x21, #8]
  40c0e0:	cbnz	x21, 40c0d0 <__fxstatat@plt+0x9520>
  40c0e4:	b	40c0b0 <__fxstatat@plt+0x9500>
  40c0e8:	ldp	x20, x8, [x19]
  40c0ec:	b	40c0f8 <__fxstatat@plt+0x9548>
  40c0f0:	ldr	x8, [x19, #8]
  40c0f4:	add	x20, x20, #0x10
  40c0f8:	cmp	x20, x8
  40c0fc:	b.cs	40c11c <__fxstatat@plt+0x956c>  // b.hs, b.nlast
  40c100:	ldr	x0, [x20, #8]
  40c104:	cbz	x0, 40c0f0 <__fxstatat@plt+0x9540>
  40c108:	ldr	x21, [x0, #8]
  40c10c:	bl	402990 <free@plt>
  40c110:	mov	x0, x21
  40c114:	cbnz	x21, 40c108 <__fxstatat@plt+0x9558>
  40c118:	b	40c0f0 <__fxstatat@plt+0x9540>
  40c11c:	ldr	x0, [x19, #72]
  40c120:	cbz	x0, 40c134 <__fxstatat@plt+0x9584>
  40c124:	ldr	x20, [x0, #8]
  40c128:	bl	402990 <free@plt>
  40c12c:	mov	x0, x20
  40c130:	cbnz	x20, 40c124 <__fxstatat@plt+0x9574>
  40c134:	ldr	x0, [x19]
  40c138:	bl	402990 <free@plt>
  40c13c:	mov	x0, x19
  40c140:	bl	402990 <free@plt>
  40c144:	ldp	x20, x19, [sp, #32]
  40c148:	ldr	x21, [sp, #16]
  40c14c:	ldp	x29, x30, [sp], #48
  40c150:	ret
  40c154:	sub	sp, sp, #0x70
  40c158:	stp	x29, x30, [sp, #80]
  40c15c:	stp	x20, x19, [sp, #96]
  40c160:	ldr	x8, [x0, #40]
  40c164:	mov	x19, x0
  40c168:	mov	x0, x1
  40c16c:	add	x29, sp, #0x50
  40c170:	mov	x1, x8
  40c174:	bl	40bf84 <__fxstatat@plt+0x93d4>
  40c178:	cbz	x0, 40c268 <__fxstatat@plt+0x96b8>
  40c17c:	ldr	x8, [x19, #16]
  40c180:	mov	x20, x0
  40c184:	cmp	x0, x8
  40c188:	b.ne	40c194 <__fxstatat@plt+0x95e4>  // b.any
  40c18c:	mov	w0, #0x1                   	// #1
  40c190:	b	40c268 <__fxstatat@plt+0x96b8>
  40c194:	mov	w1, #0x10                  	// #16
  40c198:	mov	x0, x20
  40c19c:	bl	412760 <__fxstatat@plt+0xfbb0>
  40c1a0:	str	x0, [sp]
  40c1a4:	cbz	x0, 40c268 <__fxstatat@plt+0x96b8>
  40c1a8:	ldr	x8, [sp]
  40c1ac:	stp	xzr, xzr, [sp, #24]
  40c1b0:	mov	x0, sp
  40c1b4:	mov	x1, x19
  40c1b8:	add	x8, x8, x20, lsl #4
  40c1bc:	stp	x8, x20, [sp, #8]
  40c1c0:	ldr	x8, [x19, #40]
  40c1c4:	mov	w2, wzr
  40c1c8:	str	x8, [sp, #40]
  40c1cc:	ldr	x8, [x19, #48]
  40c1d0:	str	x8, [sp, #48]
  40c1d4:	ldr	x8, [x19, #56]
  40c1d8:	str	x8, [sp, #56]
  40c1dc:	ldr	x8, [x19, #64]
  40c1e0:	str	x8, [sp, #64]
  40c1e4:	ldr	x8, [x19, #72]
  40c1e8:	str	x8, [sp, #72]
  40c1ec:	bl	40c27c <__fxstatat@plt+0x96cc>
  40c1f0:	tbz	w0, #0, 40c22c <__fxstatat@plt+0x967c>
  40c1f4:	ldr	x0, [x19]
  40c1f8:	bl	402990 <free@plt>
  40c1fc:	ldr	x8, [sp]
  40c200:	mov	w0, #0x1                   	// #1
  40c204:	str	x8, [x19]
  40c208:	ldr	x8, [sp, #8]
  40c20c:	str	x8, [x19, #8]
  40c210:	ldr	x8, [sp, #16]
  40c214:	str	x8, [x19, #16]
  40c218:	ldr	x8, [sp, #24]
  40c21c:	str	x8, [x19, #24]
  40c220:	ldr	x8, [sp, #72]
  40c224:	str	x8, [x19, #72]
  40c228:	b	40c268 <__fxstatat@plt+0x96b8>
  40c22c:	ldr	x8, [sp, #72]
  40c230:	mov	x1, sp
  40c234:	mov	w2, #0x1                   	// #1
  40c238:	mov	x0, x19
  40c23c:	str	x8, [x19, #72]
  40c240:	bl	40c27c <__fxstatat@plt+0x96cc>
  40c244:	tbz	w0, #0, 40c278 <__fxstatat@plt+0x96c8>
  40c248:	mov	x1, sp
  40c24c:	mov	x0, x19
  40c250:	mov	w2, wzr
  40c254:	bl	40c27c <__fxstatat@plt+0x96cc>
  40c258:	tbz	w0, #0, 40c278 <__fxstatat@plt+0x96c8>
  40c25c:	ldr	x0, [sp]
  40c260:	bl	402990 <free@plt>
  40c264:	mov	w0, wzr
  40c268:	ldp	x20, x19, [sp, #96]
  40c26c:	ldp	x29, x30, [sp, #80]
  40c270:	add	sp, sp, #0x70
  40c274:	ret
  40c278:	bl	4028c0 <abort@plt>
  40c27c:	stp	x29, x30, [sp, #-80]!
  40c280:	str	x25, [sp, #16]
  40c284:	stp	x24, x23, [sp, #32]
  40c288:	stp	x22, x21, [sp, #48]
  40c28c:	stp	x20, x19, [sp, #64]
  40c290:	ldp	x24, x8, [x1]
  40c294:	mov	x29, sp
  40c298:	cmp	x24, x8
  40c29c:	b.cs	40c3b8 <__fxstatat@plt+0x9808>  // b.hs, b.nlast
  40c2a0:	mov	w19, w2
  40c2a4:	mov	x20, x1
  40c2a8:	mov	x21, x0
  40c2ac:	b	40c2d0 <__fxstatat@plt+0x9720>
  40c2b0:	mov	w8, #0x4                   	// #4
  40c2b4:	orr	w8, w8, #0x4
  40c2b8:	cmp	w8, #0x4
  40c2bc:	b.ne	40c3c0 <__fxstatat@plt+0x9810>  // b.any
  40c2c0:	ldr	x8, [x20, #8]
  40c2c4:	add	x24, x24, #0x10
  40c2c8:	cmp	x24, x8
  40c2cc:	b.cs	40c3b8 <__fxstatat@plt+0x9808>  // b.hs, b.nlast
  40c2d0:	ldr	x8, [x24]
  40c2d4:	cbz	x8, 40c2c0 <__fxstatat@plt+0x9710>
  40c2d8:	ldr	x22, [x24, #8]
  40c2dc:	cbnz	x22, 40c308 <__fxstatat@plt+0x9758>
  40c2e0:	b	40c338 <__fxstatat@plt+0x9788>
  40c2e4:	str	x23, [x0]
  40c2e8:	ldr	x8, [x21, #24]
  40c2ec:	mov	x0, x21
  40c2f0:	mov	x1, x22
  40c2f4:	add	x8, x8, #0x1
  40c2f8:	str	x8, [x21, #24]
  40c2fc:	bl	40c7f0 <__fxstatat@plt+0x9c40>
  40c300:	mov	x22, x25
  40c304:	cbz	x25, 40c338 <__fxstatat@plt+0x9788>
  40c308:	ldr	x23, [x22]
  40c30c:	mov	x0, x21
  40c310:	mov	x1, x23
  40c314:	bl	40bb84 <__fxstatat@plt+0x8fd4>
  40c318:	ldr	x8, [x0]
  40c31c:	ldr	x25, [x22, #8]
  40c320:	cbz	x8, 40c2e4 <__fxstatat@plt+0x9734>
  40c324:	ldr	x8, [x0, #8]
  40c328:	str	x8, [x22, #8]
  40c32c:	str	x22, [x0, #8]
  40c330:	mov	x22, x25
  40c334:	cbnz	x25, 40c308 <__fxstatat@plt+0x9758>
  40c338:	ldr	x22, [x24]
  40c33c:	str	xzr, [x24, #8]
  40c340:	tbnz	w19, #0, 40c2b0 <__fxstatat@plt+0x9700>
  40c344:	mov	x0, x21
  40c348:	mov	x1, x22
  40c34c:	bl	40bb84 <__fxstatat@plt+0x8fd4>
  40c350:	ldr	x8, [x0]
  40c354:	mov	x23, x0
  40c358:	cbz	x8, 40c384 <__fxstatat@plt+0x97d4>
  40c35c:	mov	x0, x21
  40c360:	bl	40c608 <__fxstatat@plt+0x9a58>
  40c364:	cbz	x0, 40c3ac <__fxstatat@plt+0x97fc>
  40c368:	str	x22, [x0]
  40c36c:	ldr	x9, [x23, #8]
  40c370:	mov	w8, wzr
  40c374:	str	x9, [x0, #8]
  40c378:	str	x0, [x23, #8]
  40c37c:	cbnz	wzr, 40c2b4 <__fxstatat@plt+0x9704>
  40c380:	b	40c394 <__fxstatat@plt+0x97e4>
  40c384:	str	x22, [x23]
  40c388:	ldr	x8, [x21, #24]
  40c38c:	add	x8, x8, #0x1
  40c390:	str	x8, [x21, #24]
  40c394:	str	xzr, [x24]
  40c398:	ldr	x9, [x20, #24]
  40c39c:	mov	w8, wzr
  40c3a0:	sub	x9, x9, #0x1
  40c3a4:	str	x9, [x20, #24]
  40c3a8:	b	40c2b4 <__fxstatat@plt+0x9704>
  40c3ac:	mov	w8, #0x1                   	// #1
  40c3b0:	cbnz	w8, 40c2b4 <__fxstatat@plt+0x9704>
  40c3b4:	b	40c394 <__fxstatat@plt+0x97e4>
  40c3b8:	mov	w0, #0x1                   	// #1
  40c3bc:	b	40c3c4 <__fxstatat@plt+0x9814>
  40c3c0:	mov	w0, wzr
  40c3c4:	ldp	x20, x19, [sp, #64]
  40c3c8:	ldp	x22, x21, [sp, #48]
  40c3cc:	ldp	x24, x23, [sp, #32]
  40c3d0:	ldr	x25, [sp, #16]
  40c3d4:	ldp	x29, x30, [sp], #80
  40c3d8:	ret
  40c3dc:	stp	x29, x30, [sp, #-48]!
  40c3e0:	str	x21, [sp, #16]
  40c3e4:	stp	x20, x19, [sp, #32]
  40c3e8:	mov	x29, sp
  40c3ec:	cbz	x1, 40c528 <__fxstatat@plt+0x9978>
  40c3f0:	mov	x21, x2
  40c3f4:	add	x2, x29, #0x18
  40c3f8:	mov	w3, wzr
  40c3fc:	mov	x20, x1
  40c400:	mov	x19, x0
  40c404:	bl	40c52c <__fxstatat@plt+0x997c>
  40c408:	cbz	x0, 40c420 <__fxstatat@plt+0x9870>
  40c40c:	cbz	x21, 40c4f0 <__fxstatat@plt+0x9940>
  40c410:	mov	x8, x0
  40c414:	mov	w0, wzr
  40c418:	str	x8, [x21]
  40c41c:	b	40c518 <__fxstatat@plt+0x9968>
  40c420:	ldr	x8, [x19, #40]
  40c424:	ldp	x10, x9, [x19, #16]
  40c428:	ldr	s0, [x8, #8]
  40c42c:	ucvtf	s2, x10
  40c430:	ucvtf	s1, x9
  40c434:	fmul	s0, s0, s2
  40c438:	fcmp	s0, s1
  40c43c:	b.pl	40c4b8 <__fxstatat@plt+0x9908>  // b.nfrst
  40c440:	mov	x0, x19
  40c444:	bl	40bedc <__fxstatat@plt+0x932c>
  40c448:	ldr	x8, [x19, #40]
  40c44c:	ldp	x10, x9, [x19, #16]
  40c450:	ldr	s0, [x8, #8]
  40c454:	ucvtf	s1, x10
  40c458:	ucvtf	s2, x9
  40c45c:	fmul	s3, s0, s1
  40c460:	fcmp	s3, s2
  40c464:	b.pl	40c4b8 <__fxstatat@plt+0x9908>  // b.nfrst
  40c468:	ldr	s2, [x8, #12]
  40c46c:	ldrb	w8, [x8, #16]
  40c470:	fmul	s1, s2, s1
  40c474:	cmp	w8, #0x0
  40c478:	fmul	s0, s0, s1
  40c47c:	mov	w8, #0x5f800000            	// #1602224128
  40c480:	fcsel	s0, s0, s1, eq  // eq = none
  40c484:	fmov	s1, w8
  40c488:	fcmp	s0, s1
  40c48c:	b.ge	40c4f8 <__fxstatat@plt+0x9948>  // b.tcont
  40c490:	fcvtzu	x1, s0
  40c494:	mov	x0, x19
  40c498:	bl	40c154 <__fxstatat@plt+0x95a4>
  40c49c:	tbz	w0, #0, 40c4f8 <__fxstatat@plt+0x9948>
  40c4a0:	add	x2, x29, #0x18
  40c4a4:	mov	x0, x19
  40c4a8:	mov	x1, x20
  40c4ac:	mov	w3, wzr
  40c4b0:	bl	40c52c <__fxstatat@plt+0x997c>
  40c4b4:	cbnz	x0, 40c528 <__fxstatat@plt+0x9978>
  40c4b8:	ldr	x21, [x29, #24]
  40c4bc:	ldr	x8, [x21]
  40c4c0:	cbz	x8, 40c500 <__fxstatat@plt+0x9950>
  40c4c4:	mov	x0, x19
  40c4c8:	bl	40c608 <__fxstatat@plt+0x9a58>
  40c4cc:	cbz	x0, 40c4f8 <__fxstatat@plt+0x9948>
  40c4d0:	str	x20, [x0]
  40c4d4:	ldr	x8, [x21, #8]
  40c4d8:	str	x8, [x0, #8]
  40c4dc:	str	x0, [x21, #8]
  40c4e0:	ldr	x8, [x19, #32]
  40c4e4:	add	x8, x8, #0x1
  40c4e8:	str	x8, [x19, #32]
  40c4ec:	b	40c514 <__fxstatat@plt+0x9964>
  40c4f0:	mov	w0, wzr
  40c4f4:	b	40c518 <__fxstatat@plt+0x9968>
  40c4f8:	mov	w0, #0xffffffff            	// #-1
  40c4fc:	b	40c518 <__fxstatat@plt+0x9968>
  40c500:	str	x20, [x21]
  40c504:	ldp	x9, x8, [x19, #24]
  40c508:	add	x8, x8, #0x1
  40c50c:	add	x9, x9, #0x1
  40c510:	stp	x9, x8, [x19, #24]
  40c514:	mov	w0, #0x1                   	// #1
  40c518:	ldp	x20, x19, [sp, #32]
  40c51c:	ldr	x21, [sp, #16]
  40c520:	ldp	x29, x30, [sp], #48
  40c524:	ret
  40c528:	bl	4028c0 <abort@plt>
  40c52c:	stp	x29, x30, [sp, #-64]!
  40c530:	str	x23, [sp, #16]
  40c534:	stp	x22, x21, [sp, #32]
  40c538:	stp	x20, x19, [sp, #48]
  40c53c:	mov	x29, sp
  40c540:	mov	w21, w3
  40c544:	mov	x23, x2
  40c548:	mov	x22, x1
  40c54c:	mov	x19, x0
  40c550:	bl	40bb84 <__fxstatat@plt+0x8fd4>
  40c554:	str	x0, [x23]
  40c558:	ldr	x1, [x0]
  40c55c:	cbz	x1, 40c5c4 <__fxstatat@plt+0x9a14>
  40c560:	mov	x20, x0
  40c564:	cmp	x1, x22
  40c568:	b.eq	40c57c <__fxstatat@plt+0x99cc>  // b.none
  40c56c:	ldr	x8, [x19, #56]
  40c570:	mov	x0, x22
  40c574:	blr	x8
  40c578:	tbz	w0, #0, 40c598 <__fxstatat@plt+0x99e8>
  40c57c:	ldr	x22, [x20]
  40c580:	tbz	w21, #0, 40c5f0 <__fxstatat@plt+0x9a40>
  40c584:	ldr	x1, [x20, #8]
  40c588:	cbz	x1, 40c5ec <__fxstatat@plt+0x9a3c>
  40c58c:	ldr	q0, [x1]
  40c590:	str	q0, [x20]
  40c594:	b	40c5e0 <__fxstatat@plt+0x9a30>
  40c598:	ldr	x8, [x20, #8]!
  40c59c:	cbz	x8, 40c5c4 <__fxstatat@plt+0x9a14>
  40c5a0:	ldr	x1, [x8]
  40c5a4:	cmp	x1, x22
  40c5a8:	b.eq	40c5cc <__fxstatat@plt+0x9a1c>  // b.none
  40c5ac:	ldr	x8, [x19, #56]
  40c5b0:	mov	x0, x22
  40c5b4:	blr	x8
  40c5b8:	tbnz	w0, #0, 40c5cc <__fxstatat@plt+0x9a1c>
  40c5bc:	ldr	x20, [x20]
  40c5c0:	b	40c598 <__fxstatat@plt+0x99e8>
  40c5c4:	mov	x22, xzr
  40c5c8:	b	40c5f0 <__fxstatat@plt+0x9a40>
  40c5cc:	ldr	x1, [x20]
  40c5d0:	ldr	x22, [x1]
  40c5d4:	tbz	w21, #0, 40c5f0 <__fxstatat@plt+0x9a40>
  40c5d8:	ldr	x8, [x1, #8]
  40c5dc:	str	x8, [x20]
  40c5e0:	mov	x0, x19
  40c5e4:	bl	40c7f0 <__fxstatat@plt+0x9c40>
  40c5e8:	b	40c5f0 <__fxstatat@plt+0x9a40>
  40c5ec:	str	xzr, [x20]
  40c5f0:	mov	x0, x22
  40c5f4:	ldp	x20, x19, [sp, #48]
  40c5f8:	ldp	x22, x21, [sp, #32]
  40c5fc:	ldr	x23, [sp, #16]
  40c600:	ldp	x29, x30, [sp], #64
  40c604:	ret
  40c608:	stp	x29, x30, [sp, #-16]!
  40c60c:	mov	x8, x0
  40c610:	ldr	x0, [x0, #72]
  40c614:	mov	x29, sp
  40c618:	cbz	x0, 40c62c <__fxstatat@plt+0x9a7c>
  40c61c:	ldr	x9, [x0, #8]
  40c620:	str	x9, [x8, #72]
  40c624:	ldp	x29, x30, [sp], #16
  40c628:	ret
  40c62c:	mov	w0, #0x10                  	// #16
  40c630:	bl	402730 <malloc@plt>
  40c634:	ldp	x29, x30, [sp], #16
  40c638:	ret
  40c63c:	stp	x29, x30, [sp, #-32]!
  40c640:	mov	x29, sp
  40c644:	add	x2, x29, #0x18
  40c648:	str	x19, [sp, #16]
  40c64c:	mov	x19, x1
  40c650:	bl	40c3dc <__fxstatat@plt+0x982c>
  40c654:	ldr	x8, [x29, #24]
  40c658:	cmp	w0, #0x0
  40c65c:	csel	x8, x8, x19, eq  // eq = none
  40c660:	ldr	x19, [sp, #16]
  40c664:	cmn	w0, #0x1
  40c668:	csel	x0, xzr, x8, eq  // eq = none
  40c66c:	ldp	x29, x30, [sp], #32
  40c670:	ret
  40c674:	stp	x29, x30, [sp, #-48]!
  40c678:	mov	x29, sp
  40c67c:	add	x2, x29, #0x18
  40c680:	mov	w3, #0x1                   	// #1
  40c684:	str	x21, [sp, #16]
  40c688:	stp	x20, x19, [sp, #32]
  40c68c:	mov	x20, x0
  40c690:	bl	40c52c <__fxstatat@plt+0x997c>
  40c694:	mov	x19, x0
  40c698:	cbz	x0, 40c748 <__fxstatat@plt+0x9b98>
  40c69c:	ldr	x8, [x20, #32]
  40c6a0:	sub	x8, x8, #0x1
  40c6a4:	str	x8, [x20, #32]
  40c6a8:	ldr	x8, [x29, #24]
  40c6ac:	ldr	x8, [x8]
  40c6b0:	cbnz	x8, 40c748 <__fxstatat@plt+0x9b98>
  40c6b4:	ldp	x10, x8, [x20, #16]
  40c6b8:	ldr	x9, [x20, #40]
  40c6bc:	sub	x8, x8, #0x1
  40c6c0:	str	x8, [x20, #24]
  40c6c4:	ldr	s0, [x9]
  40c6c8:	ucvtf	s2, x10
  40c6cc:	ucvtf	s1, x8
  40c6d0:	fmul	s0, s0, s2
  40c6d4:	fcmp	s0, s1
  40c6d8:	b.le	40c748 <__fxstatat@plt+0x9b98>
  40c6dc:	mov	x0, x20
  40c6e0:	bl	40bedc <__fxstatat@plt+0x932c>
  40c6e4:	ldr	x8, [x20, #40]
  40c6e8:	ldp	x10, x9, [x20, #16]
  40c6ec:	ldr	s1, [x8]
  40c6f0:	ucvtf	s0, x10
  40c6f4:	ucvtf	s2, x9
  40c6f8:	fmul	s1, s1, s0
  40c6fc:	fcmp	s1, s2
  40c700:	b.le	40c748 <__fxstatat@plt+0x9b98>
  40c704:	ldr	s1, [x8, #4]
  40c708:	ldrb	w9, [x8, #16]
  40c70c:	fmul	s0, s1, s0
  40c710:	cbnz	w9, 40c71c <__fxstatat@plt+0x9b6c>
  40c714:	ldr	s1, [x8, #8]
  40c718:	fmul	s0, s0, s1
  40c71c:	fcvtzu	x1, s0
  40c720:	mov	x0, x20
  40c724:	bl	40c154 <__fxstatat@plt+0x95a4>
  40c728:	tbnz	w0, #0, 40c748 <__fxstatat@plt+0x9b98>
  40c72c:	ldr	x0, [x20, #72]
  40c730:	cbz	x0, 40c744 <__fxstatat@plt+0x9b94>
  40c734:	ldr	x21, [x0, #8]
  40c738:	bl	402990 <free@plt>
  40c73c:	mov	x0, x21
  40c740:	cbnz	x21, 40c734 <__fxstatat@plt+0x9b84>
  40c744:	str	xzr, [x20, #72]
  40c748:	mov	x0, x19
  40c74c:	ldp	x20, x19, [sp, #32]
  40c750:	ldr	x21, [sp, #16]
  40c754:	ldp	x29, x30, [sp], #48
  40c758:	ret
  40c75c:	stp	x29, x30, [sp, #-32]!
  40c760:	cmp	x0, #0xa
  40c764:	mov	w8, #0xa                   	// #10
  40c768:	csel	x8, x0, x8, hi  // hi = pmore
  40c76c:	str	x19, [sp, #16]
  40c770:	orr	x19, x8, #0x1
  40c774:	mov	x29, sp
  40c778:	cmn	x19, #0x1
  40c77c:	b.eq	40c798 <__fxstatat@plt+0x9be8>  // b.none
  40c780:	mov	x0, x19
  40c784:	bl	40c7a8 <__fxstatat@plt+0x9bf8>
  40c788:	tbnz	w0, #0, 40c798 <__fxstatat@plt+0x9be8>
  40c78c:	add	x19, x19, #0x2
  40c790:	cmn	x19, #0x1
  40c794:	b.ne	40c780 <__fxstatat@plt+0x9bd0>  // b.any
  40c798:	mov	x0, x19
  40c79c:	ldr	x19, [sp, #16]
  40c7a0:	ldp	x29, x30, [sp], #32
  40c7a4:	ret
  40c7a8:	mov	w8, #0x3                   	// #3
  40c7ac:	cmp	x0, #0xa
  40c7b0:	b.cc	40c7dc <__fxstatat@plt+0x9c2c>  // b.lo, b.ul, b.last
  40c7b4:	mov	w9, #0x9                   	// #9
  40c7b8:	mov	w10, #0x10                  	// #16
  40c7bc:	udiv	x11, x0, x8
  40c7c0:	msub	x11, x11, x8, x0
  40c7c4:	cbz	x11, 40c7dc <__fxstatat@plt+0x9c2c>
  40c7c8:	add	x9, x10, x9
  40c7cc:	add	x8, x8, #0x2
  40c7d0:	cmp	x9, x0
  40c7d4:	add	x10, x10, #0x8
  40c7d8:	b.cc	40c7bc <__fxstatat@plt+0x9c0c>  // b.lo, b.ul, b.last
  40c7dc:	udiv	x9, x0, x8
  40c7e0:	msub	x8, x9, x8, x0
  40c7e4:	cmp	x8, #0x0
  40c7e8:	cset	w0, ne  // ne = any
  40c7ec:	ret
  40c7f0:	str	xzr, [x1]
  40c7f4:	ldr	x8, [x0, #72]
  40c7f8:	str	x8, [x1, #8]
  40c7fc:	str	x1, [x0, #72]
  40c800:	ret
  40c804:	stp	x29, x30, [sp, #-32]!
  40c808:	stp	x20, x19, [sp, #16]
  40c80c:	mov	x19, x0
  40c810:	ldr	x0, [x0]
  40c814:	mov	x29, sp
  40c818:	mov	x20, x1
  40c81c:	bl	4132ec <_obstack_memory_used@@Base+0x7a4>
  40c820:	ldr	x8, [x19, #8]
  40c824:	eor	x8, x8, x0
  40c828:	udiv	x9, x8, x20
  40c82c:	msub	x0, x9, x20, x8
  40c830:	ldp	x20, x19, [sp, #16]
  40c834:	ldp	x29, x30, [sp], #32
  40c838:	ret
  40c83c:	ldr	x8, [x0, #8]
  40c840:	udiv	x9, x8, x1
  40c844:	msub	x0, x9, x1, x8
  40c848:	ret
  40c84c:	stp	x29, x30, [sp, #-16]!
  40c850:	ldr	x8, [x0, #8]
  40c854:	ldr	x9, [x1, #8]
  40c858:	mov	x29, sp
  40c85c:	cmp	x8, x9
  40c860:	b.ne	40c884 <__fxstatat@plt+0x9cd4>  // b.any
  40c864:	ldr	x8, [x0, #16]
  40c868:	ldr	x9, [x1, #16]
  40c86c:	cmp	x8, x9
  40c870:	b.ne	40c884 <__fxstatat@plt+0x9cd4>  // b.any
  40c874:	ldr	x0, [x0]
  40c878:	ldr	x1, [x1]
  40c87c:	bl	411284 <__fxstatat@plt+0xe6d4>
  40c880:	b	40c888 <__fxstatat@plt+0x9cd8>
  40c884:	mov	w0, wzr
  40c888:	and	w0, w0, #0x1
  40c88c:	ldp	x29, x30, [sp], #16
  40c890:	ret
  40c894:	stp	x29, x30, [sp, #-16]!
  40c898:	ldr	x8, [x0, #8]
  40c89c:	ldr	x9, [x1, #8]
  40c8a0:	mov	x29, sp
  40c8a4:	cmp	x8, x9
  40c8a8:	b.ne	40c8d8 <__fxstatat@plt+0x9d28>  // b.any
  40c8ac:	ldr	x8, [x0, #16]
  40c8b0:	ldr	x9, [x1, #16]
  40c8b4:	cmp	x8, x9
  40c8b8:	b.ne	40c8d8 <__fxstatat@plt+0x9d28>  // b.any
  40c8bc:	ldr	x0, [x0]
  40c8c0:	ldr	x1, [x1]
  40c8c4:	bl	402950 <strcmp@plt>
  40c8c8:	cmp	w0, #0x0
  40c8cc:	cset	w0, eq  // eq = none
  40c8d0:	ldp	x29, x30, [sp], #16
  40c8d4:	ret
  40c8d8:	mov	w0, wzr
  40c8dc:	ldp	x29, x30, [sp], #16
  40c8e0:	ret
  40c8e4:	stp	x29, x30, [sp, #-32]!
  40c8e8:	str	x19, [sp, #16]
  40c8ec:	mov	x19, x0
  40c8f0:	ldr	x0, [x0]
  40c8f4:	mov	x29, sp
  40c8f8:	bl	402990 <free@plt>
  40c8fc:	mov	x0, x19
  40c900:	bl	402990 <free@plt>
  40c904:	ldr	x19, [sp, #16]
  40c908:	ldp	x29, x30, [sp], #32
  40c90c:	ret
  40c910:	sub	sp, sp, #0xa0
  40c914:	tst	w2, #0x20
  40c918:	mov	w8, #0x3e8                 	// #1000
  40c91c:	mov	w9, #0x400                 	// #1024
  40c920:	stp	x29, x30, [sp, #64]
  40c924:	stp	x28, x27, [sp, #80]
  40c928:	stp	x26, x25, [sp, #96]
  40c92c:	stp	x24, x23, [sp, #112]
  40c930:	stp	x22, x21, [sp, #128]
  40c934:	stp	x20, x19, [sp, #144]
  40c938:	add	x29, sp, #0x40
  40c93c:	mov	x21, x4
  40c940:	mov	x23, x3
  40c944:	mov	w19, w2
  40c948:	mov	x20, x1
  40c94c:	mov	x28, x0
  40c950:	and	w25, w2, #0x3
  40c954:	csel	w22, w9, w8, ne  // ne = any
  40c958:	bl	4026a0 <localeconv@plt>
  40c95c:	ldr	x27, [x0]
  40c960:	mov	x24, x0
  40c964:	mov	x0, x27
  40c968:	bl	402550 <strlen@plt>
  40c96c:	ldp	x24, x9, [x24, #8]
  40c970:	sub	x8, x0, #0x1
  40c974:	cmp	x8, #0x10
  40c978:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x64b8>
  40c97c:	add	x8, x8, #0x264
  40c980:	csinc	x26, x0, xzr, cc  // cc = lo, ul, last
  40c984:	csel	x8, x27, x8, cc  // cc = lo, ul, last
  40c988:	mov	x0, x24
  40c98c:	str	x9, [sp, #8]
  40c990:	stur	x8, [x29, #-16]
  40c994:	bl	402550 <strlen@plt>
  40c998:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x54b8>
  40c99c:	add	x8, x8, #0xe71
  40c9a0:	cmp	x0, #0x11
  40c9a4:	csel	x27, x24, x8, cc  // cc = lo, ul, last
  40c9a8:	cmp	x21, x23
  40c9ac:	add	x24, x20, #0x287
  40c9b0:	b.ls	40ca1c <__fxstatat@plt+0x9e6c>  // b.plast
  40c9b4:	cbz	x23, 40ca34 <__fxstatat@plt+0x9e84>
  40c9b8:	udiv	x9, x21, x23
  40c9bc:	msub	x8, x9, x23, x21
  40c9c0:	cbnz	x8, 40ca34 <__fxstatat@plt+0x9e84>
  40c9c4:	str	x27, [sp, #32]
  40c9c8:	udiv	x27, x28, x9
  40c9cc:	msub	x8, x27, x9, x28
  40c9d0:	add	x8, x8, x8, lsl #2
  40c9d4:	lsl	x11, x8, #1
  40c9d8:	udiv	x8, x11, x9
  40c9dc:	msub	x11, x8, x9, x11
  40c9e0:	lsl	x11, x11, #1
  40c9e4:	cmp	x11, #0x0
  40c9e8:	mov	w10, #0x2                   	// #2
  40c9ec:	cset	w12, ne  // ne = any
  40c9f0:	cmp	x9, x11
  40c9f4:	cinc	w10, w10, cc  // cc = lo, ul, last
  40c9f8:	cmp	x11, x9
  40c9fc:	csel	w9, w12, w10, cc  // cc = lo, ul, last
  40ca00:	tbz	w19, #4, 40cc30 <__fxstatat@plt+0xa080>
  40ca04:	cmp	x27, x22
  40ca08:	b.cs	40cccc <__fxstatat@plt+0xa11c>  // b.hs, b.nlast
  40ca0c:	mov	w23, wzr
  40ca10:	mov	x28, x24
  40ca14:	cbnz	w25, 40cd98 <__fxstatat@plt+0xa1e8>
  40ca18:	b	40cde4 <__fxstatat@plt+0xa234>
  40ca1c:	udiv	x10, x23, x21
  40ca20:	msub	x8, x10, x21, x23
  40ca24:	cbnz	x8, 40ca34 <__fxstatat@plt+0x9e84>
  40ca28:	umulh	x8, x10, x28
  40ca2c:	cmp	xzr, x8
  40ca30:	b.eq	40cc1c <__fxstatat@plt+0xa06c>  // b.none
  40ca34:	mov	x0, x21
  40ca38:	bl	4149b8 <_obstack_memory_used@@Base+0x1e70>
  40ca3c:	mov	x0, x28
  40ca40:	str	q0, [sp, #32]
  40ca44:	bl	4149b8 <_obstack_memory_used@@Base+0x1e70>
  40ca48:	mov	x0, x23
  40ca4c:	stur	q0, [x29, #-16]
  40ca50:	bl	4149b8 <_obstack_memory_used@@Base+0x1e70>
  40ca54:	ldr	q1, [sp, #32]
  40ca58:	bl	4134e0 <_obstack_memory_used@@Base+0x998>
  40ca5c:	ldur	q1, [x29, #-16]
  40ca60:	bl	414048 <_obstack_memory_used@@Base+0x1500>
  40ca64:	tbnz	w19, #4, 40caa0 <__fxstatat@plt+0x9ef0>
  40ca68:	mov	w0, w25
  40ca6c:	bl	40ce6c <__fxstatat@plt+0xa2bc>
  40ca70:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x64b8>
  40ca74:	add	x3, x3, #0x320
  40ca78:	mov	w1, #0x1                   	// #1
  40ca7c:	mov	x2, #0xffffffffffffffff    	// #-1
  40ca80:	mov	x0, x20
  40ca84:	bl	402560 <__sprintf_chk@plt>
  40ca88:	mov	x0, x20
  40ca8c:	bl	402550 <strlen@plt>
  40ca90:	mov	x2, x0
  40ca94:	mov	x26, xzr
  40ca98:	mov	w23, #0xffffffff            	// #-1
  40ca9c:	b	40cbb8 <__fxstatat@plt+0xa008>
  40caa0:	mov	w0, w22
  40caa4:	str	q0, [sp, #16]
  40caa8:	mov	x28, x27
  40caac:	bl	414830 <_obstack_memory_used@@Base+0x1ce8>
  40cab0:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x64b8>
  40cab4:	str	q0, [sp, #32]
  40cab8:	ldr	q0, [x8, #752]
  40cabc:	mov	w23, wzr
  40cac0:	stur	q0, [x29, #-16]
  40cac4:	ldur	q0, [x29, #-16]
  40cac8:	ldr	q1, [sp, #32]
  40cacc:	mov	w27, w23
  40cad0:	bl	414048 <_obstack_memory_used@@Base+0x1500>
  40cad4:	ldr	q1, [sp, #32]
  40cad8:	add	w23, w23, #0x1
  40cadc:	stur	q0, [x29, #-16]
  40cae0:	bl	414048 <_obstack_memory_used@@Base+0x1500>
  40cae4:	cmp	w27, #0x6
  40cae8:	b.hi	40cafc <__fxstatat@plt+0x9f4c>  // b.pmore
  40caec:	ldr	q1, [sp, #16]
  40caf0:	bl	413f08 <_obstack_memory_used@@Base+0x13c0>
  40caf4:	cmp	w0, #0x0
  40caf8:	b.le	40cac4 <__fxstatat@plt+0x9f14>
  40cafc:	ldr	q0, [sp, #16]
  40cb00:	ldur	q1, [x29, #-16]
  40cb04:	bl	4134e0 <_obstack_memory_used@@Base+0x998>
  40cb08:	mov	w0, w25
  40cb0c:	stur	q0, [x29, #-16]
  40cb10:	bl	40ce6c <__fxstatat@plt+0xa2bc>
  40cb14:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x64b8>
  40cb18:	add	x3, x3, #0x326
  40cb1c:	mov	w1, #0x1                   	// #1
  40cb20:	mov	x2, #0xffffffffffffffff    	// #-1
  40cb24:	mov	x0, x20
  40cb28:	bl	402560 <__sprintf_chk@plt>
  40cb2c:	mov	x0, x20
  40cb30:	bl	402550 <strlen@plt>
  40cb34:	tst	w19, #0x20
  40cb38:	mov	w8, #0x2                   	// #2
  40cb3c:	cinc	x8, x8, eq  // eq = none
  40cb40:	add	x8, x8, x26
  40cb44:	cmp	x8, x0
  40cb48:	mov	x27, x28
  40cb4c:	b.cc	40cb6c <__fxstatat@plt+0x9fbc>  // b.lo, b.ul, b.last
  40cb50:	mov	x2, x0
  40cb54:	add	x26, x26, #0x1
  40cb58:	tbz	w19, #3, 40cbb8 <__fxstatat@plt+0xa008>
  40cb5c:	add	x8, x2, x20
  40cb60:	ldurb	w8, [x8, #-1]
  40cb64:	cmp	w8, #0x30
  40cb68:	b.ne	40cbb8 <__fxstatat@plt+0xa008>  // b.any
  40cb6c:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x64b8>
  40cb70:	ldr	q1, [x8, #768]
  40cb74:	ldur	q0, [x29, #-16]
  40cb78:	str	q1, [sp, #32]
  40cb7c:	bl	414048 <_obstack_memory_used@@Base+0x1500>
  40cb80:	mov	w0, w25
  40cb84:	bl	40ce6c <__fxstatat@plt+0xa2bc>
  40cb88:	ldr	q1, [sp, #32]
  40cb8c:	bl	4134e0 <_obstack_memory_used@@Base+0x998>
  40cb90:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x64b8>
  40cb94:	add	x3, x3, #0x320
  40cb98:	mov	w1, #0x1                   	// #1
  40cb9c:	mov	x2, #0xffffffffffffffff    	// #-1
  40cba0:	mov	x0, x20
  40cba4:	bl	402560 <__sprintf_chk@plt>
  40cba8:	mov	x0, x20
  40cbac:	bl	402550 <strlen@plt>
  40cbb0:	mov	x2, x0
  40cbb4:	mov	x26, xzr
  40cbb8:	sub	x25, x24, x2
  40cbbc:	mov	x0, x25
  40cbc0:	mov	x1, x20
  40cbc4:	bl	4024f0 <memmove@plt>
  40cbc8:	sub	x28, x24, x26
  40cbcc:	tbz	w19, #2, 40cbe8 <__fxstatat@plt+0xa038>
  40cbd0:	ldr	x2, [sp, #8]
  40cbd4:	sub	x1, x28, x25
  40cbd8:	mov	x0, x25
  40cbdc:	mov	x3, x27
  40cbe0:	bl	40ceec <__fxstatat@plt+0xa33c>
  40cbe4:	mov	x25, x0
  40cbe8:	tbz	w19, #7, 40cca4 <__fxstatat@plt+0xa0f4>
  40cbec:	tbz	w23, #31, 40cc44 <__fxstatat@plt+0xa094>
  40cbf0:	cmp	x21, #0x2
  40cbf4:	b.cc	40cc40 <__fxstatat@plt+0xa090>  // b.lo, b.ul, b.last
  40cbf8:	mov	w23, wzr
  40cbfc:	mov	w8, #0x1                   	// #1
  40cc00:	cmp	w23, #0x7
  40cc04:	b.eq	40cd54 <__fxstatat@plt+0xa1a4>  // b.none
  40cc08:	mul	x8, x8, x22
  40cc0c:	cmp	x8, x21
  40cc10:	add	w23, w23, #0x1
  40cc14:	b.cc	40cc00 <__fxstatat@plt+0xa050>  // b.lo, b.ul, b.last
  40cc18:	b	40cc44 <__fxstatat@plt+0xa094>
  40cc1c:	str	x27, [sp, #32]
  40cc20:	mov	w9, wzr
  40cc24:	mov	w8, wzr
  40cc28:	mul	x27, x10, x28
  40cc2c:	tbnz	w19, #4, 40ca04 <__fxstatat@plt+0x9e54>
  40cc30:	mov	w23, #0xffffffff            	// #-1
  40cc34:	mov	x28, x24
  40cc38:	cbnz	w25, 40cd98 <__fxstatat@plt+0xa1e8>
  40cc3c:	b	40cde4 <__fxstatat@plt+0xa234>
  40cc40:	mov	w23, wzr
  40cc44:	and	w8, w19, #0x100
  40cc48:	tbz	w19, #6, 40cc60 <__fxstatat@plt+0xa0b0>
  40cc4c:	orr	w9, w23, w8
  40cc50:	cbz	w9, 40cc60 <__fxstatat@plt+0xa0b0>
  40cc54:	add	x24, x20, #0x288
  40cc58:	mov	w9, #0x20                  	// #32
  40cc5c:	strb	w9, [x20, #647]
  40cc60:	cbz	w23, 40cc88 <__fxstatat@plt+0xa0d8>
  40cc64:	tbnz	w19, #5, 40cc78 <__fxstatat@plt+0xa0c8>
  40cc68:	cmp	w23, #0x1
  40cc6c:	b.ne	40cc78 <__fxstatat@plt+0xa0c8>  // b.any
  40cc70:	mov	w9, #0x6b                  	// #107
  40cc74:	b	40cc84 <__fxstatat@plt+0xa0d4>
  40cc78:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x64b8>
  40cc7c:	add	x9, x9, #0x358
  40cc80:	ldrb	w9, [x9, w23, sxtw]
  40cc84:	strb	w9, [x24], #1
  40cc88:	cbz	w8, 40cca4 <__fxstatat@plt+0xa0f4>
  40cc8c:	tbz	w19, #5, 40cc9c <__fxstatat@plt+0xa0ec>
  40cc90:	cbz	w23, 40cc9c <__fxstatat@plt+0xa0ec>
  40cc94:	mov	w8, #0x69                  	// #105
  40cc98:	strb	w8, [x24], #1
  40cc9c:	mov	w8, #0x42                  	// #66
  40cca0:	strb	w8, [x24], #1
  40cca4:	strb	wzr, [x24]
  40cca8:	mov	x0, x25
  40ccac:	ldp	x20, x19, [sp, #144]
  40ccb0:	ldp	x22, x21, [sp, #128]
  40ccb4:	ldp	x24, x23, [sp, #112]
  40ccb8:	ldp	x26, x25, [sp, #96]
  40ccbc:	ldp	x28, x27, [sp, #80]
  40ccc0:	ldp	x29, x30, [sp, #64]
  40ccc4:	add	sp, sp, #0xa0
  40ccc8:	ret
  40cccc:	mov	w12, wzr
  40ccd0:	mov	w10, #0xa                   	// #10
  40ccd4:	mov	w11, #0x2                   	// #2
  40ccd8:	mov	x13, x27
  40ccdc:	udiv	x27, x27, x22
  40cce0:	msub	w13, w27, w22, w13
  40cce4:	madd	w13, w13, w10, w8
  40cce8:	udiv	w8, w13, w22
  40ccec:	msub	w13, w8, w22, w13
  40ccf0:	lsl	w13, w13, #1
  40ccf4:	add	w13, w13, w9, asr #1
  40ccf8:	cmp	w13, w22
  40ccfc:	b.cs	40cd0c <__fxstatat@plt+0xa15c>  // b.hs, b.nlast
  40cd00:	cmn	w13, w9
  40cd04:	cset	w9, ne  // ne = any
  40cd08:	b	40cd18 <__fxstatat@plt+0xa168>
  40cd0c:	add	w9, w13, w9
  40cd10:	cmp	w22, w9
  40cd14:	cinc	w9, w11, cc  // cc = lo, ul, last
  40cd18:	cmp	w12, #0x6
  40cd1c:	add	w23, w12, #0x1
  40cd20:	b.hi	40cd30 <__fxstatat@plt+0xa180>  // b.pmore
  40cd24:	cmp	x27, x22
  40cd28:	mov	w12, w23
  40cd2c:	b.cs	40ccd8 <__fxstatat@plt+0xa128>  // b.hs, b.nlast
  40cd30:	cmp	x27, #0x9
  40cd34:	b.hi	40cd90 <__fxstatat@plt+0xa1e0>  // b.pmore
  40cd38:	cmp	w25, #0x1
  40cd3c:	b.ne	40cd64 <__fxstatat@plt+0xa1b4>  // b.any
  40cd40:	and	w10, w8, #0x1
  40cd44:	add	w10, w9, w10
  40cd48:	cmp	w10, #0x2
  40cd4c:	b.hi	40cd6c <__fxstatat@plt+0xa1bc>  // b.pmore
  40cd50:	b	40cd80 <__fxstatat@plt+0xa1d0>
  40cd54:	mov	w23, #0x8                   	// #8
  40cd58:	and	w8, w19, #0x100
  40cd5c:	tbnz	w19, #6, 40cc4c <__fxstatat@plt+0xa09c>
  40cd60:	b	40cc60 <__fxstatat@plt+0xa0b0>
  40cd64:	cbnz	w25, 40cd80 <__fxstatat@plt+0xa1d0>
  40cd68:	cbz	w9, 40cd80 <__fxstatat@plt+0xa1d0>
  40cd6c:	add	w10, w8, #0x1
  40cd70:	cmp	w10, #0xa
  40cd74:	mov	w9, wzr
  40cd78:	csinc	w8, wzr, w8, eq  // eq = none
  40cd7c:	cinc	x27, x27, eq  // eq = none
  40cd80:	cmp	x27, #0x9
  40cd84:	b.hi	40cd90 <__fxstatat@plt+0xa1e0>  // b.pmore
  40cd88:	tbz	w19, #3, 40cdb8 <__fxstatat@plt+0xa208>
  40cd8c:	cbnz	w8, 40cdb8 <__fxstatat@plt+0xa208>
  40cd90:	mov	x28, x24
  40cd94:	cbz	w25, 40cde4 <__fxstatat@plt+0xa234>
  40cd98:	cmp	w25, #0x1
  40cd9c:	b.ne	40ce30 <__fxstatat@plt+0xa280>  // b.any
  40cda0:	and	x10, x27, #0x1
  40cda4:	cmn	x10, w9, sxtw
  40cda8:	cinc	w8, w8, ne  // ne = any
  40cdac:	cmp	w8, #0x5
  40cdb0:	b.gt	40cdf0 <__fxstatat@plt+0xa240>
  40cdb4:	b	40ce30 <__fxstatat@plt+0xa280>
  40cdb8:	ldur	x1, [x29, #-16]
  40cdbc:	add	x9, x20, #0x286
  40cdc0:	sub	x28, x9, x26
  40cdc4:	add	w8, w8, #0x30
  40cdc8:	mov	x0, x28
  40cdcc:	mov	x2, x26
  40cdd0:	strb	w8, [x20, #646]
  40cdd4:	bl	4024e0 <memcpy@plt>
  40cdd8:	mov	w9, wzr
  40cddc:	mov	w8, wzr
  40cde0:	cbnz	w25, 40cd98 <__fxstatat@plt+0xa1e8>
  40cde4:	add	w8, w8, w9
  40cde8:	cmp	w8, #0x1
  40cdec:	b.lt	40ce30 <__fxstatat@plt+0xa280>  // b.tstop
  40cdf0:	cmp	w23, #0x7
  40cdf4:	add	x27, x27, #0x1
  40cdf8:	b.gt	40ce30 <__fxstatat@plt+0xa280>
  40cdfc:	tbz	w19, #4, 40ce30 <__fxstatat@plt+0xa280>
  40ce00:	cmp	x27, x22
  40ce04:	b.ne	40ce30 <__fxstatat@plt+0xa280>  // b.any
  40ce08:	add	w23, w23, #0x1
  40ce0c:	tbnz	w19, #3, 40ce2c <__fxstatat@plt+0xa27c>
  40ce10:	mov	w8, #0x30                  	// #48
  40ce14:	ldur	x1, [x29, #-16]
  40ce18:	strb	w8, [x28, #-1]!
  40ce1c:	sub	x28, x28, x26
  40ce20:	mov	x0, x28
  40ce24:	mov	x2, x26
  40ce28:	bl	4024e0 <memcpy@plt>
  40ce2c:	mov	w27, #0x1                   	// #1
  40ce30:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  40ce34:	movk	x8, #0xcccd
  40ce38:	mov	w9, #0xa                   	// #10
  40ce3c:	mov	x25, x28
  40ce40:	umulh	x10, x27, x8
  40ce44:	lsr	x10, x10, #3
  40ce48:	msub	w11, w10, w9, w27
  40ce4c:	orr	w11, w11, #0x30
  40ce50:	cmp	x27, #0x9
  40ce54:	strb	w11, [x25, #-1]!
  40ce58:	mov	x27, x10
  40ce5c:	b.hi	40ce40 <__fxstatat@plt+0xa290>  // b.pmore
  40ce60:	ldr	x27, [sp, #32]
  40ce64:	tbnz	w19, #2, 40cbd0 <__fxstatat@plt+0xa020>
  40ce68:	b	40cbe8 <__fxstatat@plt+0xa038>
  40ce6c:	sub	sp, sp, #0x30
  40ce70:	cmp	w0, #0x1
  40ce74:	stp	x29, x30, [sp, #16]
  40ce78:	stp	x20, x19, [sp, #32]
  40ce7c:	add	x29, sp, #0x10
  40ce80:	b.eq	40cedc <__fxstatat@plt+0xa32c>  // b.none
  40ce84:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x64b8>
  40ce88:	ldr	q1, [x8, #784]
  40ce8c:	mov	w19, w0
  40ce90:	str	q0, [sp]
  40ce94:	bl	413f08 <_obstack_memory_used@@Base+0x13c0>
  40ce98:	cmp	w0, #0x0
  40ce9c:	b.ge	40ced8 <__fxstatat@plt+0xa328>  // b.tcont
  40cea0:	ldr	q0, [sp]
  40cea4:	bl	414898 <_obstack_memory_used@@Base+0x1d50>
  40cea8:	cmp	w19, #0x0
  40ceac:	mov	x20, x0
  40ceb0:	cset	w19, eq  // eq = none
  40ceb4:	bl	4149b8 <_obstack_memory_used@@Base+0x1e70>
  40ceb8:	ldr	q1, [sp]
  40cebc:	bl	413e00 <_obstack_memory_used@@Base+0x12b8>
  40cec0:	cmp	w0, #0x0
  40cec4:	cset	w8, ne  // ne = any
  40cec8:	and	w8, w19, w8
  40cecc:	add	x0, x8, x20
  40ced0:	bl	4149b8 <_obstack_memory_used@@Base+0x1e70>
  40ced4:	b	40cedc <__fxstatat@plt+0xa32c>
  40ced8:	ldr	q0, [sp]
  40cedc:	ldp	x20, x19, [sp, #32]
  40cee0:	ldp	x29, x30, [sp, #16]
  40cee4:	add	sp, sp, #0x30
  40cee8:	ret
  40ceec:	sub	sp, sp, #0x90
  40cef0:	stp	x24, x23, [sp, #96]
  40cef4:	mov	x23, x0
  40cef8:	mov	x0, x3
  40cefc:	stp	x29, x30, [sp, #48]
  40cf00:	str	x27, [sp, #64]
  40cf04:	stp	x26, x25, [sp, #80]
  40cf08:	stp	x22, x21, [sp, #112]
  40cf0c:	stp	x20, x19, [sp, #128]
  40cf10:	add	x29, sp, #0x30
  40cf14:	mov	x19, x3
  40cf18:	mov	x20, x2
  40cf1c:	mov	x21, x1
  40cf20:	bl	402550 <strlen@plt>
  40cf24:	mov	x22, x0
  40cf28:	add	x0, sp, #0x4
  40cf2c:	mov	w3, #0x29                  	// #41
  40cf30:	mov	x1, x23
  40cf34:	mov	x2, x21
  40cf38:	add	x26, sp, #0x4
  40cf3c:	bl	4026e0 <__memcpy_chk@plt>
  40cf40:	add	x23, x23, x21
  40cf44:	neg	x27, x22
  40cf48:	mov	x24, #0xffffffffffffffff    	// #-1
  40cf4c:	b	40cf6c <__fxstatat@plt+0xa3bc>
  40cf50:	add	x23, x23, x27
  40cf54:	mov	x0, x23
  40cf58:	mov	x1, x19
  40cf5c:	mov	x2, x22
  40cf60:	bl	4024e0 <memcpy@plt>
  40cf64:	mov	w8, #0x1                   	// #1
  40cf68:	tbz	w8, #0, 40cfb8 <__fxstatat@plt+0xa408>
  40cf6c:	mov	x8, x20
  40cf70:	ldrb	w9, [x8], #1
  40cf74:	cmp	w9, #0xff
  40cf78:	csel	x10, x21, x9, eq  // eq = none
  40cf7c:	cmp	w9, #0x0
  40cf80:	csel	x9, x24, x10, eq  // eq = none
  40cf84:	csel	x20, x20, x8, eq  // eq = none
  40cf88:	cmp	x21, x9
  40cf8c:	csel	x24, x21, x9, cc  // cc = lo, ul, last
  40cf90:	sub	x23, x23, x24
  40cf94:	sub	x21, x21, x24
  40cf98:	add	x1, x26, x21
  40cf9c:	mov	x0, x23
  40cfa0:	mov	x2, x24
  40cfa4:	bl	4024e0 <memcpy@plt>
  40cfa8:	cbnz	x21, 40cf50 <__fxstatat@plt+0xa3a0>
  40cfac:	mov	w8, wzr
  40cfb0:	mov	x25, x23
  40cfb4:	tbnz	w8, #0, 40cf6c <__fxstatat@plt+0xa3bc>
  40cfb8:	mov	x0, x25
  40cfbc:	ldp	x20, x19, [sp, #128]
  40cfc0:	ldp	x22, x21, [sp, #112]
  40cfc4:	ldp	x24, x23, [sp, #96]
  40cfc8:	ldp	x26, x25, [sp, #80]
  40cfcc:	ldr	x27, [sp, #64]
  40cfd0:	ldp	x29, x30, [sp, #48]
  40cfd4:	add	sp, sp, #0x90
  40cfd8:	ret
  40cfdc:	stp	x29, x30, [sp, #-32]!
  40cfe0:	str	x19, [sp, #16]
  40cfe4:	mov	x19, x2
  40cfe8:	mov	x2, x1
  40cfec:	mov	x1, x19
  40cff0:	mov	x29, sp
  40cff4:	bl	40d018 <__fxstatat@plt+0xa468>
  40cff8:	ldr	x8, [x19]
  40cffc:	cbnz	x8, 40d00c <__fxstatat@plt+0xa45c>
  40d000:	bl	40d16c <__fxstatat@plt+0xa5bc>
  40d004:	str	x0, [x19]
  40d008:	mov	w0, #0x4                   	// #4
  40d00c:	ldr	x19, [sp, #16]
  40d010:	ldp	x29, x30, [sp], #32
  40d014:	ret
  40d018:	stp	x29, x30, [sp, #-64]!
  40d01c:	stp	x20, x19, [sp, #48]
  40d020:	mov	x19, x2
  40d024:	mov	x20, x1
  40d028:	str	x23, [sp, #16]
  40d02c:	stp	x22, x21, [sp, #32]
  40d030:	mov	x29, sp
  40d034:	cbnz	x0, 40d058 <__fxstatat@plt+0xa4a8>
  40d038:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x54b8>
  40d03c:	add	x0, x0, #0x9c3
  40d040:	bl	402b50 <getenv@plt>
  40d044:	cbnz	x0, 40d058 <__fxstatat@plt+0xa4a8>
  40d048:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x64b8>
  40d04c:	add	x0, x0, #0x32c
  40d050:	bl	402b50 <getenv@plt>
  40d054:	cbz	x0, 40d10c <__fxstatat@plt+0xa55c>
  40d058:	mov	x8, x0
  40d05c:	ldrb	w9, [x8], #1
  40d060:	adrp	x22, 419000 <_obstack_memory_used@@Base+0x64b8>
  40d064:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  40d068:	add	x22, x22, #0x380
  40d06c:	cmp	w9, #0x27
  40d070:	csel	x21, x8, x0, eq  // eq = none
  40d074:	cset	w9, eq  // eq = none
  40d078:	add	x1, x1, #0x368
  40d07c:	mov	w3, #0x4                   	// #4
  40d080:	mov	x0, x21
  40d084:	mov	x2, x22
  40d088:	lsl	w23, w9, #2
  40d08c:	bl	40a274 <__fxstatat@plt+0x76c4>
  40d090:	tbnz	w0, #31, 40d0ac <__fxstatat@plt+0xa4fc>
  40d094:	sbfiz	x8, x0, #2, #32
  40d098:	ldr	w8, [x22, x8]
  40d09c:	mov	w0, #0x1                   	// #1
  40d0a0:	str	x0, [x20]
  40d0a4:	orr	w23, w8, w23
  40d0a8:	b	40d150 <__fxstatat@plt+0xa5a0>
  40d0ac:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x64b8>
  40d0b0:	add	x4, x4, #0x336
  40d0b4:	add	x1, x29, #0x18
  40d0b8:	mov	x0, x21
  40d0bc:	mov	w2, wzr
  40d0c0:	mov	x3, x20
  40d0c4:	bl	4123f4 <__fxstatat@plt+0xf844>
  40d0c8:	cbz	w0, 40d0dc <__fxstatat@plt+0xa52c>
  40d0cc:	mov	w8, wzr
  40d0d0:	str	wzr, [x19]
  40d0d4:	tbnz	w8, #0, 40d150 <__fxstatat@plt+0xa5a0>
  40d0d8:	b	40d158 <__fxstatat@plt+0xa5a8>
  40d0dc:	ldrb	w8, [x21]
  40d0e0:	sub	w8, w8, #0x30
  40d0e4:	cmp	w8, #0xa
  40d0e8:	b.cc	40d148 <__fxstatat@plt+0xa598>  // b.lo, b.ul, b.last
  40d0ec:	ldr	x8, [x29, #24]
  40d0f0:	cmp	x8, x21
  40d0f4:	b.eq	40d11c <__fxstatat@plt+0xa56c>  // b.none
  40d0f8:	ldrb	w9, [x21, #1]!
  40d0fc:	sub	w9, w9, #0x30
  40d100:	cmp	w9, #0xa
  40d104:	b.cs	40d0f0 <__fxstatat@plt+0xa540>  // b.hs, b.nlast
  40d108:	b	40d148 <__fxstatat@plt+0xa598>
  40d10c:	bl	40d16c <__fxstatat@plt+0xa5bc>
  40d110:	mov	w23, wzr
  40d114:	str	x0, [x20]
  40d118:	b	40d150 <__fxstatat@plt+0xa5a0>
  40d11c:	ldurb	w9, [x8, #-1]
  40d120:	mov	w10, #0x80                  	// #128
  40d124:	cmp	w9, #0x42
  40d128:	mov	w9, #0x180                 	// #384
  40d12c:	csel	w9, w9, w10, eq  // eq = none
  40d130:	orr	w23, w9, w23
  40d134:	b.ne	40d144 <__fxstatat@plt+0xa594>  // b.any
  40d138:	ldurb	w8, [x8, #-2]
  40d13c:	cmp	w8, #0x69
  40d140:	b.ne	40d148 <__fxstatat@plt+0xa598>  // b.any
  40d144:	orr	w23, w23, #0x20
  40d148:	mov	w8, #0x1                   	// #1
  40d14c:	tbz	w8, #0, 40d158 <__fxstatat@plt+0xa5a8>
  40d150:	mov	w0, wzr
  40d154:	str	w23, [x19]
  40d158:	ldp	x20, x19, [sp, #48]
  40d15c:	ldp	x22, x21, [sp, #32]
  40d160:	ldr	x23, [sp, #16]
  40d164:	ldp	x29, x30, [sp], #64
  40d168:	ret
  40d16c:	stp	x29, x30, [sp, #-16]!
  40d170:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x64b8>
  40d174:	add	x0, x0, #0x348
  40d178:	mov	x29, sp
  40d17c:	bl	402b50 <getenv@plt>
  40d180:	cmp	x0, #0x0
  40d184:	mov	w8, #0x200                 	// #512
  40d188:	mov	w9, #0x400                 	// #1024
  40d18c:	csel	x0, x9, x8, eq  // eq = none
  40d190:	ldp	x29, x30, [sp], #16
  40d194:	ret
  40d198:	stp	x29, x30, [sp, #-48]!
  40d19c:	stp	x22, x21, [sp, #16]
  40d1a0:	adrp	x22, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40d1a4:	stp	x20, x19, [sp, #32]
  40d1a8:	ldr	x20, [x22, #1856]
  40d1ac:	mov	w19, w0
  40d1b0:	mov	x29, sp
  40d1b4:	cbz	x20, 40d1cc <__fxstatat@plt+0xa61c>
  40d1b8:	ldr	w8, [x20]
  40d1bc:	cmp	w8, w19
  40d1c0:	b.eq	40d1cc <__fxstatat@plt+0xa61c>  // b.none
  40d1c4:	ldr	x20, [x20, #8]
  40d1c8:	cbnz	x20, 40d1b8 <__fxstatat@plt+0xa608>
  40d1cc:	cbnz	x20, 40d21c <__fxstatat@plt+0xa66c>
  40d1d0:	mov	w0, w19
  40d1d4:	bl	402960 <getpwuid@plt>
  40d1d8:	cbz	x0, 40d1e4 <__fxstatat@plt+0xa634>
  40d1dc:	ldr	x21, [x0]
  40d1e0:	b	40d1ec <__fxstatat@plt+0xa63c>
  40d1e4:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x54b8>
  40d1e8:	add	x21, x21, #0xe71
  40d1ec:	mov	x0, x21
  40d1f0:	bl	402550 <strlen@plt>
  40d1f4:	add	x8, x0, #0x18
  40d1f8:	and	x0, x8, #0xfffffffffffffff8
  40d1fc:	bl	411b44 <__fxstatat@plt+0xef94>
  40d200:	mov	x20, x0
  40d204:	str	w19, [x0], #16
  40d208:	mov	x1, x21
  40d20c:	bl	402a20 <strcpy@plt>
  40d210:	ldr	x8, [x22, #1856]
  40d214:	str	x20, [x22, #1856]
  40d218:	str	x8, [x20, #8]
  40d21c:	ldrb	w8, [x20, #16]!
  40d220:	ldp	x22, x21, [sp, #16]
  40d224:	cmp	w8, #0x0
  40d228:	csel	x0, xzr, x20, eq  // eq = none
  40d22c:	ldp	x20, x19, [sp, #32]
  40d230:	ldp	x29, x30, [sp], #48
  40d234:	ret
  40d238:	stp	x29, x30, [sp, #-64]!
  40d23c:	stp	x22, x21, [sp, #32]
  40d240:	adrp	x22, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40d244:	stp	x20, x19, [sp, #48]
  40d248:	ldr	x20, [x22, #1856]
  40d24c:	mov	x19, x0
  40d250:	str	x23, [sp, #16]
  40d254:	mov	x29, sp
  40d258:	cbz	x20, 40d28c <__fxstatat@plt+0xa6dc>
  40d25c:	ldrb	w21, [x19]
  40d260:	b	40d26c <__fxstatat@plt+0xa6bc>
  40d264:	ldr	x20, [x20, #8]
  40d268:	cbz	x20, 40d28c <__fxstatat@plt+0xa6dc>
  40d26c:	mov	x0, x20
  40d270:	ldrb	w8, [x0, #16]!
  40d274:	cmp	w8, w21
  40d278:	b.ne	40d264 <__fxstatat@plt+0xa6b4>  // b.any
  40d27c:	mov	x1, x19
  40d280:	bl	402950 <strcmp@plt>
  40d284:	cbnz	w0, 40d264 <__fxstatat@plt+0xa6b4>
  40d288:	b	40d324 <__fxstatat@plt+0xa774>
  40d28c:	adrp	x23, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40d290:	ldr	x20, [x23, #1864]
  40d294:	cbz	x20, 40d2c8 <__fxstatat@plt+0xa718>
  40d298:	ldrb	w21, [x19]
  40d29c:	b	40d2a8 <__fxstatat@plt+0xa6f8>
  40d2a0:	ldr	x20, [x20, #8]
  40d2a4:	cbz	x20, 40d2c8 <__fxstatat@plt+0xa718>
  40d2a8:	mov	x0, x20
  40d2ac:	ldrb	w8, [x0, #16]!
  40d2b0:	cmp	w8, w21
  40d2b4:	b.ne	40d2a0 <__fxstatat@plt+0xa6f0>  // b.any
  40d2b8:	mov	x1, x19
  40d2bc:	bl	402950 <strcmp@plt>
  40d2c0:	cbnz	w0, 40d2a0 <__fxstatat@plt+0xa6f0>
  40d2c4:	b	40d320 <__fxstatat@plt+0xa770>
  40d2c8:	mov	x0, x19
  40d2cc:	bl	4027d0 <getpwnam@plt>
  40d2d0:	mov	x21, x0
  40d2d4:	mov	x0, x19
  40d2d8:	bl	402550 <strlen@plt>
  40d2dc:	add	x8, x0, #0x18
  40d2e0:	and	x0, x8, #0xfffffffffffffff8
  40d2e4:	bl	411b44 <__fxstatat@plt+0xef94>
  40d2e8:	mov	x20, x0
  40d2ec:	add	x0, x0, #0x10
  40d2f0:	mov	x1, x19
  40d2f4:	bl	402a20 <strcpy@plt>
  40d2f8:	cbz	x21, 40d314 <__fxstatat@plt+0xa764>
  40d2fc:	ldr	w8, [x21, #16]
  40d300:	ldr	x9, [x22, #1856]
  40d304:	str	x20, [x22, #1856]
  40d308:	str	w8, [x20]
  40d30c:	str	x9, [x20, #8]
  40d310:	b	40d324 <__fxstatat@plt+0xa774>
  40d314:	ldr	x8, [x23, #1864]
  40d318:	str	x20, [x23, #1864]
  40d31c:	str	x8, [x20, #8]
  40d320:	mov	x20, xzr
  40d324:	mov	x0, x20
  40d328:	ldp	x20, x19, [sp, #48]
  40d32c:	ldp	x22, x21, [sp, #32]
  40d330:	ldr	x23, [sp, #16]
  40d334:	ldp	x29, x30, [sp], #64
  40d338:	ret
  40d33c:	stp	x29, x30, [sp, #-48]!
  40d340:	stp	x22, x21, [sp, #16]
  40d344:	adrp	x22, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40d348:	stp	x20, x19, [sp, #32]
  40d34c:	ldr	x20, [x22, #1872]
  40d350:	mov	w19, w0
  40d354:	mov	x29, sp
  40d358:	cbz	x20, 40d370 <__fxstatat@plt+0xa7c0>
  40d35c:	ldr	w8, [x20]
  40d360:	cmp	w8, w19
  40d364:	b.eq	40d370 <__fxstatat@plt+0xa7c0>  // b.none
  40d368:	ldr	x20, [x20, #8]
  40d36c:	cbnz	x20, 40d35c <__fxstatat@plt+0xa7ac>
  40d370:	cbnz	x20, 40d3c0 <__fxstatat@plt+0xa810>
  40d374:	mov	w0, w19
  40d378:	bl	402b70 <getgrgid@plt>
  40d37c:	cbz	x0, 40d388 <__fxstatat@plt+0xa7d8>
  40d380:	ldr	x21, [x0]
  40d384:	b	40d390 <__fxstatat@plt+0xa7e0>
  40d388:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x54b8>
  40d38c:	add	x21, x21, #0xe71
  40d390:	mov	x0, x21
  40d394:	bl	402550 <strlen@plt>
  40d398:	add	x8, x0, #0x18
  40d39c:	and	x0, x8, #0xfffffffffffffff8
  40d3a0:	bl	411b44 <__fxstatat@plt+0xef94>
  40d3a4:	mov	x20, x0
  40d3a8:	str	w19, [x0], #16
  40d3ac:	mov	x1, x21
  40d3b0:	bl	402a20 <strcpy@plt>
  40d3b4:	ldr	x8, [x22, #1872]
  40d3b8:	str	x20, [x22, #1872]
  40d3bc:	str	x8, [x20, #8]
  40d3c0:	ldrb	w8, [x20, #16]!
  40d3c4:	ldp	x22, x21, [sp, #16]
  40d3c8:	cmp	w8, #0x0
  40d3cc:	csel	x0, xzr, x20, eq  // eq = none
  40d3d0:	ldp	x20, x19, [sp, #32]
  40d3d4:	ldp	x29, x30, [sp], #48
  40d3d8:	ret
  40d3dc:	stp	x29, x30, [sp, #-64]!
  40d3e0:	stp	x22, x21, [sp, #32]
  40d3e4:	adrp	x22, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40d3e8:	stp	x20, x19, [sp, #48]
  40d3ec:	ldr	x20, [x22, #1872]
  40d3f0:	mov	x19, x0
  40d3f4:	str	x23, [sp, #16]
  40d3f8:	mov	x29, sp
  40d3fc:	cbz	x20, 40d430 <__fxstatat@plt+0xa880>
  40d400:	ldrb	w21, [x19]
  40d404:	b	40d410 <__fxstatat@plt+0xa860>
  40d408:	ldr	x20, [x20, #8]
  40d40c:	cbz	x20, 40d430 <__fxstatat@plt+0xa880>
  40d410:	mov	x0, x20
  40d414:	ldrb	w8, [x0, #16]!
  40d418:	cmp	w8, w21
  40d41c:	b.ne	40d408 <__fxstatat@plt+0xa858>  // b.any
  40d420:	mov	x1, x19
  40d424:	bl	402950 <strcmp@plt>
  40d428:	cbnz	w0, 40d408 <__fxstatat@plt+0xa858>
  40d42c:	b	40d4c8 <__fxstatat@plt+0xa918>
  40d430:	adrp	x23, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40d434:	ldr	x20, [x23, #1880]
  40d438:	cbz	x20, 40d46c <__fxstatat@plt+0xa8bc>
  40d43c:	ldrb	w21, [x19]
  40d440:	b	40d44c <__fxstatat@plt+0xa89c>
  40d444:	ldr	x20, [x20, #8]
  40d448:	cbz	x20, 40d46c <__fxstatat@plt+0xa8bc>
  40d44c:	mov	x0, x20
  40d450:	ldrb	w8, [x0, #16]!
  40d454:	cmp	w8, w21
  40d458:	b.ne	40d444 <__fxstatat@plt+0xa894>  // b.any
  40d45c:	mov	x1, x19
  40d460:	bl	402950 <strcmp@plt>
  40d464:	cbnz	w0, 40d444 <__fxstatat@plt+0xa894>
  40d468:	b	40d4c4 <__fxstatat@plt+0xa914>
  40d46c:	mov	x0, x19
  40d470:	bl	402600 <getgrnam@plt>
  40d474:	mov	x21, x0
  40d478:	mov	x0, x19
  40d47c:	bl	402550 <strlen@plt>
  40d480:	add	x8, x0, #0x18
  40d484:	and	x0, x8, #0xfffffffffffffff8
  40d488:	bl	411b44 <__fxstatat@plt+0xef94>
  40d48c:	mov	x20, x0
  40d490:	add	x0, x0, #0x10
  40d494:	mov	x1, x19
  40d498:	bl	402a20 <strcpy@plt>
  40d49c:	cbz	x21, 40d4b8 <__fxstatat@plt+0xa908>
  40d4a0:	ldr	w8, [x21, #16]
  40d4a4:	ldr	x9, [x22, #1872]
  40d4a8:	str	x20, [x22, #1872]
  40d4ac:	str	w8, [x20]
  40d4b0:	str	x9, [x20, #8]
  40d4b4:	b	40d4c8 <__fxstatat@plt+0xa918>
  40d4b8:	ldr	x8, [x23, #1880]
  40d4bc:	str	x20, [x23, #1880]
  40d4c0:	str	x8, [x20, #8]
  40d4c4:	mov	x20, xzr
  40d4c8:	mov	x0, x20
  40d4cc:	ldp	x20, x19, [sp, #48]
  40d4d0:	ldp	x22, x21, [sp, #32]
  40d4d4:	ldr	x23, [sp, #16]
  40d4d8:	ldp	x29, x30, [sp], #64
  40d4dc:	ret
  40d4e0:	mov	x8, x0
  40d4e4:	mov	x0, x1
  40d4e8:	strb	wzr, [x0, #20]!
  40d4ec:	tbnz	x8, #63, 40d528 <__fxstatat@plt+0xa978>
  40d4f0:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  40d4f4:	movk	x9, #0x6667
  40d4f8:	mov	w10, #0xa                   	// #10
  40d4fc:	smulh	x11, x8, x9
  40d500:	asr	x13, x11, #2
  40d504:	add	x11, x13, x11, lsr #63
  40d508:	add	x12, x8, #0x9
  40d50c:	msub	w8, w11, w10, w8
  40d510:	add	w8, w8, #0x30
  40d514:	cmp	x12, #0x12
  40d518:	strb	w8, [x0, #-1]!
  40d51c:	mov	x8, x11
  40d520:	b.hi	40d4fc <__fxstatat@plt+0xa94c>  // b.pmore
  40d524:	ret
  40d528:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  40d52c:	add	x0, x1, #0x13
  40d530:	movk	x9, #0x6667
  40d534:	mov	w10, #0xa                   	// #10
  40d538:	smulh	x11, x8, x9
  40d53c:	asr	x13, x11, #2
  40d540:	neg	w12, w8
  40d544:	add	x11, x13, x11, lsr #63
  40d548:	madd	w12, w11, w10, w12
  40d54c:	add	x8, x8, #0x9
  40d550:	add	w12, w12, #0x30
  40d554:	cmp	x8, #0x12
  40d558:	strb	w12, [x0], #-1
  40d55c:	mov	x8, x11
  40d560:	b.hi	40d538 <__fxstatat@plt+0xa988>  // b.pmore
  40d564:	mov	w8, #0x2d                  	// #45
  40d568:	strb	w8, [x0]
  40d56c:	ret
  40d570:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  40d574:	movk	x8, #0xcccd
  40d578:	strb	wzr, [x1, #20]!
  40d57c:	mov	w9, #0xa                   	// #10
  40d580:	umulh	x10, x0, x8
  40d584:	lsr	x10, x10, #3
  40d588:	msub	w11, w10, w9, w0
  40d58c:	orr	w11, w11, #0x30
  40d590:	cmp	x0, #0x9
  40d594:	strb	w11, [x1, #-1]!
  40d598:	mov	x0, x10
  40d59c:	b.hi	40d580 <__fxstatat@plt+0xa9d0>  // b.pmore
  40d5a0:	mov	x0, x1
  40d5a4:	ret
  40d5a8:	sub	sp, sp, #0x70
  40d5ac:	stp	x29, x30, [sp, #16]
  40d5b0:	stp	x28, x27, [sp, #32]
  40d5b4:	stp	x26, x25, [sp, #48]
  40d5b8:	stp	x24, x23, [sp, #64]
  40d5bc:	stp	x22, x21, [sp, #80]
  40d5c0:	stp	x20, x19, [sp, #96]
  40d5c4:	add	x29, sp, #0x10
  40d5c8:	mov	w22, w5
  40d5cc:	mov	w24, w4
  40d5d0:	mov	x25, x3
  40d5d4:	mov	x27, x2
  40d5d8:	mov	x19, x1
  40d5dc:	mov	x23, x0
  40d5e0:	bl	402550 <strlen@plt>
  40d5e4:	mov	x26, x0
  40d5e8:	stp	x19, x27, [sp]
  40d5ec:	tbnz	w22, #1, 40d66c <__fxstatat@plt+0xaabc>
  40d5f0:	bl	4029a0 <__ctype_get_mb_cur_max@plt>
  40d5f4:	cmp	x0, #0x2
  40d5f8:	b.cc	40d66c <__fxstatat@plt+0xaabc>  // b.lo, b.ul, b.last
  40d5fc:	mov	x0, xzr
  40d600:	mov	x1, x23
  40d604:	mov	x2, xzr
  40d608:	bl	402570 <mbstowcs@plt>
  40d60c:	cmn	x0, #0x1
  40d610:	b.eq	40d7d4 <__fxstatat@plt+0xac24>  // b.none
  40d614:	add	x21, x0, #0x1
  40d618:	mov	x20, x0
  40d61c:	lsl	x0, x21, #2
  40d620:	bl	402730 <malloc@plt>
  40d624:	mov	x19, x0
  40d628:	cbz	x0, 40d7d8 <__fxstatat@plt+0xac28>
  40d62c:	mov	x0, x19
  40d630:	mov	x1, x23
  40d634:	mov	x2, x21
  40d638:	bl	402570 <mbstowcs@plt>
  40d63c:	cbz	x0, 40d7ec <__fxstatat@plt+0xac3c>
  40d640:	mov	x0, x19
  40d644:	str	wzr, [x19, x20, lsl #2]
  40d648:	bl	40d820 <__fxstatat@plt+0xac70>
  40d64c:	mov	w20, w0
  40d650:	mov	x0, x19
  40d654:	mov	x1, x21
  40d658:	bl	402760 <wcswidth@plt>
  40d65c:	mov	w9, wzr
  40d660:	sxtw	x28, w0
  40d664:	mov	w8, #0x1                   	// #1
  40d668:	b	40d7fc <__fxstatat@plt+0xac4c>
  40d66c:	mov	x19, xzr
  40d670:	mov	w20, wzr
  40d674:	mov	w8, wzr
  40d678:	mov	x28, x26
  40d67c:	cbz	w8, 40d6e8 <__fxstatat@plt+0xab38>
  40d680:	tbnz	w20, #0, 40d698 <__fxstatat@plt+0xaae8>
  40d684:	ldr	x8, [x25]
  40d688:	cmp	x28, x8
  40d68c:	b.ls	40d6e8 <__fxstatat@plt+0xab38>  // b.plast
  40d690:	mov	x0, x26
  40d694:	tbz	w20, #0, 40d6a8 <__fxstatat@plt+0xaaf8>
  40d698:	mov	x0, xzr
  40d69c:	mov	x1, x19
  40d6a0:	mov	x2, xzr
  40d6a4:	bl	402a80 <wcstombs@plt>
  40d6a8:	add	x20, x0, #0x1
  40d6ac:	mov	x0, x20
  40d6b0:	bl	402730 <malloc@plt>
  40d6b4:	mov	x27, x0
  40d6b8:	cbz	x0, 40d7cc <__fxstatat@plt+0xac1c>
  40d6bc:	ldr	x1, [x25]
  40d6c0:	mov	x0, x19
  40d6c4:	bl	40d880 <__fxstatat@plt+0xacd0>
  40d6c8:	mov	x28, x0
  40d6cc:	mov	x0, x27
  40d6d0:	mov	x1, x19
  40d6d4:	mov	x2, x20
  40d6d8:	bl	402a80 <wcstombs@plt>
  40d6dc:	mov	x26, x0
  40d6e0:	mov	x23, x27
  40d6e4:	b	40d6ec <__fxstatat@plt+0xab3c>
  40d6e8:	mov	x27, xzr
  40d6ec:	ldr	x8, [x25]
  40d6f0:	cmp	x28, x8
  40d6f4:	csel	x9, x8, x28, hi  // hi = pmore
  40d6f8:	csel	x26, x8, x26, hi  // hi = pmore
  40d6fc:	cmp	x8, x28
  40d700:	sub	x8, x8, x9
  40d704:	csel	x8, x8, xzr, hi  // hi = pmore
  40d708:	str	x9, [x25]
  40d70c:	cbz	w24, 40d728 <__fxstatat@plt+0xab78>
  40d710:	ldr	x10, [sp, #8]
  40d714:	cmp	w24, #0x1
  40d718:	b.ne	40d734 <__fxstatat@plt+0xab84>  // b.any
  40d71c:	mov	x9, x8
  40d720:	mov	x8, xzr
  40d724:	b	40d740 <__fxstatat@plt+0xab90>
  40d728:	ldr	x10, [sp, #8]
  40d72c:	mov	x9, xzr
  40d730:	b	40d740 <__fxstatat@plt+0xab90>
  40d734:	and	x9, x8, #0x1
  40d738:	lsr	x8, x8, #1
  40d73c:	add	x9, x8, x9
  40d740:	tst	w22, #0x4
  40d744:	csel	x20, x9, xzr, eq  // eq = none
  40d748:	tst	w22, #0x8
  40d74c:	csel	x22, x8, xzr, eq  // eq = none
  40d750:	cbz	x10, 40d790 <__fxstatat@plt+0xabe0>
  40d754:	ldr	x0, [sp]
  40d758:	mov	x2, x20
  40d75c:	add	x8, x0, x10
  40d760:	sub	x21, x8, #0x1
  40d764:	mov	x1, x21
  40d768:	bl	40d8fc <__fxstatat@plt+0xad4c>
  40d76c:	sub	x8, x21, x0
  40d770:	cmp	x26, x8
  40d774:	csel	x2, x26, x8, cc  // cc = lo, ul, last
  40d778:	mov	x3, #0xffffffffffffffff    	// #-1
  40d77c:	mov	x1, x23
  40d780:	bl	402aa0 <__mempcpy_chk@plt>
  40d784:	mov	x1, x21
  40d788:	mov	x2, x22
  40d78c:	bl	40d8fc <__fxstatat@plt+0xad4c>
  40d790:	add	x8, x20, x26
  40d794:	add	x21, x8, x22
  40d798:	mov	x0, x19
  40d79c:	bl	402990 <free@plt>
  40d7a0:	mov	x0, x27
  40d7a4:	bl	402990 <free@plt>
  40d7a8:	mov	x0, x21
  40d7ac:	ldp	x20, x19, [sp, #96]
  40d7b0:	ldp	x22, x21, [sp, #80]
  40d7b4:	ldp	x24, x23, [sp, #64]
  40d7b8:	ldp	x26, x25, [sp, #48]
  40d7bc:	ldp	x28, x27, [sp, #32]
  40d7c0:	ldp	x29, x30, [sp, #16]
  40d7c4:	add	sp, sp, #0x70
  40d7c8:	ret
  40d7cc:	tbnz	w22, #0, 40d6ec <__fxstatat@plt+0xab3c>
  40d7d0:	b	40d818 <__fxstatat@plt+0xac68>
  40d7d4:	mov	x19, xzr
  40d7d8:	and	w9, w22, #0x1
  40d7dc:	mov	w20, wzr
  40d7e0:	mov	w8, wzr
  40d7e4:	eor	w9, w9, #0x3
  40d7e8:	b	40d7f8 <__fxstatat@plt+0xac48>
  40d7ec:	mov	w20, wzr
  40d7f0:	mov	w8, wzr
  40d7f4:	mov	w9, wzr
  40d7f8:	mov	x28, x26
  40d7fc:	cmp	w9, #0x3
  40d800:	mov	x27, xzr
  40d804:	b.eq	40d818 <__fxstatat@plt+0xac68>  // b.none
  40d808:	cmp	w9, #0x2
  40d80c:	b.eq	40d6ec <__fxstatat@plt+0xab3c>  // b.none
  40d810:	cbz	w9, 40d67c <__fxstatat@plt+0xaacc>
  40d814:	b	40d7a8 <__fxstatat@plt+0xabf8>
  40d818:	mov	x21, #0xffffffffffffffff    	// #-1
  40d81c:	b	40d798 <__fxstatat@plt+0xabe8>
  40d820:	stp	x29, x30, [sp, #-48]!
  40d824:	stp	x20, x19, [sp, #32]
  40d828:	mov	x8, x0
  40d82c:	ldr	w0, [x0]
  40d830:	str	x21, [sp, #16]
  40d834:	mov	x29, sp
  40d838:	cbz	w0, 40d868 <__fxstatat@plt+0xacb8>
  40d83c:	mov	w19, wzr
  40d840:	add	x20, x8, #0x4
  40d844:	mov	w21, #0xfffd                	// #65533
  40d848:	b	40d854 <__fxstatat@plt+0xaca4>
  40d84c:	ldr	w0, [x20], #4
  40d850:	cbz	w0, 40d86c <__fxstatat@plt+0xacbc>
  40d854:	bl	402b20 <iswprint@plt>
  40d858:	cbnz	w0, 40d84c <__fxstatat@plt+0xac9c>
  40d85c:	mov	w19, #0x1                   	// #1
  40d860:	stur	w21, [x20, #-4]
  40d864:	b	40d84c <__fxstatat@plt+0xac9c>
  40d868:	mov	w19, wzr
  40d86c:	and	w0, w19, #0x1
  40d870:	ldp	x20, x19, [sp, #32]
  40d874:	ldr	x21, [sp, #16]
  40d878:	ldp	x29, x30, [sp], #48
  40d87c:	ret
  40d880:	stp	x29, x30, [sp, #-48]!
  40d884:	stp	x22, x21, [sp, #16]
  40d888:	stp	x20, x19, [sp, #32]
  40d88c:	mov	x19, x0
  40d890:	ldr	w0, [x0]
  40d894:	mov	x29, sp
  40d898:	cbz	w0, 40d8d8 <__fxstatat@plt+0xad28>
  40d89c:	mov	x20, x1
  40d8a0:	mov	x22, xzr
  40d8a4:	mov	w21, #0xfffd                	// #65533
  40d8a8:	bl	402740 <wcwidth@plt>
  40d8ac:	cmn	w0, #0x1
  40d8b0:	b.ne	40d8bc <__fxstatat@plt+0xad0c>  // b.any
  40d8b4:	mov	w0, #0x1                   	// #1
  40d8b8:	str	w21, [x19]
  40d8bc:	add	x8, x22, w0, sxtw
  40d8c0:	cmp	x8, x20
  40d8c4:	b.hi	40d8e0 <__fxstatat@plt+0xad30>  // b.pmore
  40d8c8:	ldr	w0, [x19, #4]!
  40d8cc:	mov	x22, x8
  40d8d0:	cbnz	w0, 40d8a8 <__fxstatat@plt+0xacf8>
  40d8d4:	b	40d8e4 <__fxstatat@plt+0xad34>
  40d8d8:	mov	x8, xzr
  40d8dc:	b	40d8e4 <__fxstatat@plt+0xad34>
  40d8e0:	mov	x8, x22
  40d8e4:	str	wzr, [x19]
  40d8e8:	ldp	x20, x19, [sp, #32]
  40d8ec:	ldp	x22, x21, [sp, #16]
  40d8f0:	mov	x0, x8
  40d8f4:	ldp	x29, x30, [sp], #48
  40d8f8:	ret
  40d8fc:	stp	x29, x30, [sp, #-48]!
  40d900:	stp	x20, x19, [sp, #32]
  40d904:	mov	x19, x0
  40d908:	cmp	x0, x1
  40d90c:	str	x21, [sp, #16]
  40d910:	mov	x29, sp
  40d914:	b.cs	40d95c <__fxstatat@plt+0xadac>  // b.hs, b.nlast
  40d918:	cbz	x2, 40d95c <__fxstatat@plt+0xadac>
  40d91c:	mvn	x8, x19
  40d920:	add	x8, x1, x8
  40d924:	sub	x21, x2, #0x1
  40d928:	cmp	x21, x8
  40d92c:	csel	x8, x8, x21, hi  // hi = pmore
  40d930:	mov	x20, x1
  40d934:	add	x2, x8, #0x1
  40d938:	mov	w1, #0x20                  	// #32
  40d93c:	mov	x0, x19
  40d940:	bl	4027c0 <memset@plt>
  40d944:	add	x19, x19, #0x1
  40d948:	subs	x21, x21, #0x1
  40d94c:	cset	w8, cs  // cs = hs, nlast
  40d950:	cmp	x19, x20
  40d954:	b.cs	40d95c <__fxstatat@plt+0xadac>  // b.hs, b.nlast
  40d958:	tbnz	w8, #0, 40d944 <__fxstatat@plt+0xad94>
  40d95c:	strb	wzr, [x19]
  40d960:	mov	x0, x19
  40d964:	ldp	x20, x19, [sp, #32]
  40d968:	ldr	x21, [sp, #16]
  40d96c:	ldp	x29, x30, [sp], #48
  40d970:	ret
  40d974:	stp	x29, x30, [sp, #-96]!
  40d978:	stp	x26, x25, [sp, #32]
  40d97c:	stp	x24, x23, [sp, #48]
  40d980:	stp	x22, x21, [sp, #64]
  40d984:	stp	x20, x19, [sp, #80]
  40d988:	str	x27, [sp, #16]
  40d98c:	ldr	x27, [x1]
  40d990:	mov	w19, w3
  40d994:	mov	w20, w2
  40d998:	mov	x21, x1
  40d99c:	mov	x22, x0
  40d9a0:	mov	x26, xzr
  40d9a4:	mov	x24, x27
  40d9a8:	mov	x23, x27
  40d9ac:	mov	x29, sp
  40d9b0:	b	40d9d0 <__fxstatat@plt+0xae20>
  40d9b4:	mov	x26, x25
  40d9b8:	mov	x0, x26
  40d9bc:	bl	402990 <free@plt>
  40d9c0:	mov	x25, xzr
  40d9c4:	mov	w8, wzr
  40d9c8:	mov	x26, x25
  40d9cc:	tbz	w8, #0, 40da30 <__fxstatat@plt+0xae80>
  40d9d0:	cmp	x24, x23
  40d9d4:	b.cc	40da2c <__fxstatat@plt+0xae7c>  // b.lo, b.ul, b.last
  40d9d8:	add	x23, x24, #0x1
  40d9dc:	mov	x0, x26
  40d9e0:	mov	x1, x23
  40d9e4:	bl	402830 <realloc@plt>
  40d9e8:	cbz	x0, 40d9b8 <__fxstatat@plt+0xae08>
  40d9ec:	mov	x25, x0
  40d9f0:	mov	x0, x22
  40d9f4:	mov	x1, x25
  40d9f8:	mov	x2, x23
  40d9fc:	mov	x3, x21
  40da00:	mov	w4, w20
  40da04:	mov	w5, w19
  40da08:	str	x27, [x21]
  40da0c:	bl	40d5a8 <__fxstatat@plt+0xa9f8>
  40da10:	mov	x24, x0
  40da14:	cmn	x0, #0x1
  40da18:	b.eq	40d9b4 <__fxstatat@plt+0xae04>  // b.none
  40da1c:	mov	w8, #0x1                   	// #1
  40da20:	mov	x26, x25
  40da24:	tbnz	w8, #0, 40d9d0 <__fxstatat@plt+0xae20>
  40da28:	b	40da30 <__fxstatat@plt+0xae80>
  40da2c:	mov	x25, x26
  40da30:	mov	x0, x25
  40da34:	ldp	x20, x19, [sp, #80]
  40da38:	ldp	x22, x21, [sp, #64]
  40da3c:	ldp	x24, x23, [sp, #48]
  40da40:	ldp	x26, x25, [sp, #32]
  40da44:	ldr	x27, [sp, #16]
  40da48:	ldp	x29, x30, [sp], #96
  40da4c:	ret
  40da50:	stp	x29, x30, [sp, #-32]!
  40da54:	stp	x20, x19, [sp, #16]
  40da58:	mov	x29, sp
  40da5c:	mov	w19, w1
  40da60:	mov	x20, x0
  40da64:	bl	402550 <strlen@plt>
  40da68:	mov	x1, x0
  40da6c:	mov	x0, x20
  40da70:	mov	w2, w19
  40da74:	bl	40da84 <__fxstatat@plt+0xaed4>
  40da78:	ldp	x20, x19, [sp, #16]
  40da7c:	ldp	x29, x30, [sp], #32
  40da80:	ret
  40da84:	sub	sp, sp, #0x70
  40da88:	stp	x29, x30, [sp, #16]
  40da8c:	stp	x28, x27, [sp, #32]
  40da90:	stp	x26, x25, [sp, #48]
  40da94:	stp	x24, x23, [sp, #64]
  40da98:	stp	x22, x21, [sp, #80]
  40da9c:	stp	x20, x19, [sp, #96]
  40daa0:	add	x29, sp, #0x10
  40daa4:	mov	w20, w2
  40daa8:	mov	x19, x1
  40daac:	mov	x21, x0
  40dab0:	add	x23, x0, x1
  40dab4:	bl	4029a0 <__ctype_get_mb_cur_max@plt>
  40dab8:	cmp	x0, #0x1
  40dabc:	b.ls	40dc28 <__fxstatat@plt+0xb078>  // b.plast
  40dac0:	cmp	x19, #0x1
  40dac4:	b.lt	40dc7c <__fxstatat@plt+0xb0cc>  // b.tstop
  40dac8:	and	w24, w20, #0x1
  40dacc:	tst	w20, #0x1
  40dad0:	mov	w8, #0x5                   	// #5
  40dad4:	adrp	x28, 419000 <_obstack_memory_used@@Base+0x64b8>
  40dad8:	mov	w19, wzr
  40dadc:	mov	w25, #0x7fffffff            	// #2147483647
  40dae0:	eor	w26, w24, #0x1
  40dae4:	csinc	w27, w8, wzr, eq  // eq = none
  40dae8:	add	x28, x28, #0x388
  40daec:	ldrb	w8, [x21]
  40daf0:	sub	w8, w8, #0x20
  40daf4:	cmp	w8, #0x5e
  40daf8:	b.hi	40db20 <__fxstatat@plt+0xaf70>  // b.pmore
  40dafc:	adr	x9, 40db0c <__fxstatat@plt+0xaf5c>
  40db00:	ldrb	w10, [x28, x8]
  40db04:	add	x9, x9, x10, lsl #2
  40db08:	br	x9
  40db0c:	add	x21, x21, #0x1
  40db10:	add	w19, w19, #0x1
  40db14:	cmp	x21, x23
  40db18:	b.cc	40daec <__fxstatat@plt+0xaf3c>  // b.lo, b.ul, b.last
  40db1c:	b	40dc88 <__fxstatat@plt+0xb0d8>
  40db20:	str	xzr, [sp, #8]
  40db24:	b	40db48 <__fxstatat@plt+0xaf98>
  40db28:	cmp	w24, #0x0
  40db2c:	add	w19, w19, w26
  40db30:	csel	x21, x23, x21, eq  // eq = none
  40db34:	mov	w8, w27
  40db38:	cbnz	w8, 40dc08 <__fxstatat@plt+0xb058>
  40db3c:	add	x0, sp, #0x8
  40db40:	bl	4028d0 <mbsinit@plt>
  40db44:	cbnz	w0, 40dc10 <__fxstatat@plt+0xb060>
  40db48:	sub	x2, x23, x21
  40db4c:	add	x0, sp, #0x4
  40db50:	add	x3, sp, #0x8
  40db54:	mov	x1, x21
  40db58:	bl	4127b8 <__fxstatat@plt+0xfc08>
  40db5c:	cmn	x0, #0x2
  40db60:	b.eq	40db28 <__fxstatat@plt+0xaf78>  // b.none
  40db64:	mov	x22, x0
  40db68:	cbz	x0, 40db8c <__fxstatat@plt+0xafdc>
  40db6c:	cmn	x22, #0x1
  40db70:	b.ne	40db90 <__fxstatat@plt+0xafe0>  // b.any
  40db74:	tbnz	w20, #0, 40dbe0 <__fxstatat@plt+0xb030>
  40db78:	add	x21, x21, #0x1
  40db7c:	add	w19, w19, #0x1
  40db80:	mov	w8, #0x5                   	// #5
  40db84:	cbz	w8, 40db3c <__fxstatat@plt+0xaf8c>
  40db88:	b	40dc08 <__fxstatat@plt+0xb058>
  40db8c:	mov	w22, #0x1                   	// #1
  40db90:	ldr	w0, [sp, #4]
  40db94:	bl	402740 <wcwidth@plt>
  40db98:	tbnz	w0, #31, 40dbb4 <__fxstatat@plt+0xb004>
  40db9c:	sub	w8, w25, w19
  40dba0:	cmp	w0, w8
  40dba4:	b.le	40dbec <__fxstatat@plt+0xb03c>
  40dba8:	mov	w8, #0x7                   	// #7
  40dbac:	cbz	w8, 40db3c <__fxstatat@plt+0xaf8c>
  40dbb0:	b	40dc08 <__fxstatat@plt+0xb058>
  40dbb4:	tbnz	w20, #1, 40dbe0 <__fxstatat@plt+0xb030>
  40dbb8:	ldr	w0, [sp, #4]
  40dbbc:	bl	402650 <iswcntrl@plt>
  40dbc0:	cbnz	w0, 40dbf0 <__fxstatat@plt+0xb040>
  40dbc4:	mov	w8, #0x7fffffff            	// #2147483647
  40dbc8:	cmp	w19, w8
  40dbcc:	b.ne	40dc00 <__fxstatat@plt+0xb050>  // b.any
  40dbd0:	mov	w8, #0x7                   	// #7
  40dbd4:	mov	w19, #0x7fffffff            	// #2147483647
  40dbd8:	cbz	w8, 40db3c <__fxstatat@plt+0xaf8c>
  40dbdc:	b	40dc08 <__fxstatat@plt+0xb058>
  40dbe0:	mov	w8, #0x1                   	// #1
  40dbe4:	cbz	w8, 40db3c <__fxstatat@plt+0xaf8c>
  40dbe8:	b	40dc08 <__fxstatat@plt+0xb058>
  40dbec:	add	w19, w0, w19
  40dbf0:	mov	w8, wzr
  40dbf4:	add	x21, x21, x22
  40dbf8:	cbz	w8, 40db3c <__fxstatat@plt+0xaf8c>
  40dbfc:	b	40dc08 <__fxstatat@plt+0xb058>
  40dc00:	add	w19, w19, #0x1
  40dc04:	b	40dbf0 <__fxstatat@plt+0xb040>
  40dc08:	cmp	w8, #0x5
  40dc0c:	b.ne	40dc14 <__fxstatat@plt+0xb064>  // b.any
  40dc10:	mov	w8, wzr
  40dc14:	cbz	w8, 40db14 <__fxstatat@plt+0xaf64>
  40dc18:	cmp	w8, #0x7
  40dc1c:	b.ne	40dc84 <__fxstatat@plt+0xb0d4>  // b.any
  40dc20:	mov	w19, #0x7fffffff            	// #2147483647
  40dc24:	b	40dc88 <__fxstatat@plt+0xb0d8>
  40dc28:	mov	w19, wzr
  40dc2c:	mov	w22, #0x7fffffff            	// #2147483647
  40dc30:	mov	w24, #0x7                   	// #7
  40dc34:	b	40dc48 <__fxstatat@plt+0xb098>
  40dc38:	cmp	w19, w22
  40dc3c:	cinc	w19, w19, ne  // ne = any
  40dc40:	csel	w8, w24, wzr, eq  // eq = none
  40dc44:	cbnz	w8, 40dc18 <__fxstatat@plt+0xb068>
  40dc48:	cmp	x21, x23
  40dc4c:	b.cs	40dc88 <__fxstatat@plt+0xb0d8>  // b.hs, b.nlast
  40dc50:	ldrb	w25, [x21], #1
  40dc54:	bl	402970 <__ctype_b_loc@plt>
  40dc58:	ldr	x8, [x0]
  40dc5c:	ldrh	w8, [x8, x25, lsl #1]
  40dc60:	tbnz	w8, #14, 40dc38 <__fxstatat@plt+0xb088>
  40dc64:	tbnz	w20, #1, 40dc74 <__fxstatat@plt+0xb0c4>
  40dc68:	tbz	w8, #1, 40dc38 <__fxstatat@plt+0xb088>
  40dc6c:	mov	w8, wzr
  40dc70:	b	40dc44 <__fxstatat@plt+0xb094>
  40dc74:	mov	w8, #0x1                   	// #1
  40dc78:	b	40dc44 <__fxstatat@plt+0xb094>
  40dc7c:	mov	w19, wzr
  40dc80:	b	40dc88 <__fxstatat@plt+0xb0d8>
  40dc84:	mov	w19, #0xffffffff            	// #-1
  40dc88:	mov	w0, w19
  40dc8c:	ldp	x20, x19, [sp, #96]
  40dc90:	ldp	x22, x21, [sp, #80]
  40dc94:	ldp	x24, x23, [sp, #64]
  40dc98:	ldp	x26, x25, [sp, #48]
  40dc9c:	ldp	x28, x27, [sp, #32]
  40dca0:	ldp	x29, x30, [sp, #16]
  40dca4:	add	sp, sp, #0x70
  40dca8:	ret
  40dcac:	stp	x29, x30, [sp, #-16]!
  40dcb0:	mov	x3, x2
  40dcb4:	add	x2, x0, x1, lsl #3
  40dcb8:	mov	x29, sp
  40dcbc:	bl	40dcc8 <__fxstatat@plt+0xb118>
  40dcc0:	ldp	x29, x30, [sp], #16
  40dcc4:	ret
  40dcc8:	sub	sp, sp, #0x90
  40dccc:	stp	x20, x19, [sp, #128]
  40dcd0:	mov	x20, x3
  40dcd4:	cmp	x1, #0x2
  40dcd8:	mov	x19, x0
  40dcdc:	stp	x29, x30, [sp, #48]
  40dce0:	stp	x28, x27, [sp, #64]
  40dce4:	stp	x26, x25, [sp, #80]
  40dce8:	stp	x24, x23, [sp, #96]
  40dcec:	stp	x22, x21, [sp, #112]
  40dcf0:	add	x29, sp, #0x30
  40dcf4:	b.hi	40dd1c <__fxstatat@plt+0xb16c>  // b.pmore
  40dcf8:	b.ne	40de28 <__fxstatat@plt+0xb278>  // b.any
  40dcfc:	ldp	x21, x22, [x19]
  40dd00:	mov	x0, x21
  40dd04:	mov	x1, x22
  40dd08:	blr	x20
  40dd0c:	cmp	w0, #0x1
  40dd10:	b.lt	40de28 <__fxstatat@plt+0xb278>  // b.tstop
  40dd14:	stp	x22, x21, [x19]
  40dd18:	b	40de28 <__fxstatat@plt+0xb278>
  40dd1c:	lsr	x22, x1, #1
  40dd20:	add	x23, x19, x22, lsl #3
  40dd24:	mov	x25, x1
  40dd28:	sub	x1, x1, x22
  40dd2c:	mov	x0, x23
  40dd30:	mov	x3, x20
  40dd34:	mov	x21, x2
  40dd38:	bl	40dcc8 <__fxstatat@plt+0xb118>
  40dd3c:	cmp	x25, #0x3
  40dd40:	b.ne	40dd50 <__fxstatat@plt+0xb1a0>  // b.any
  40dd44:	ldr	x8, [x19]
  40dd48:	str	x8, [x21]
  40dd4c:	b	40dd64 <__fxstatat@plt+0xb1b4>
  40dd50:	mov	x0, x19
  40dd54:	mov	x1, x22
  40dd58:	mov	x2, x21
  40dd5c:	mov	x3, x20
  40dd60:	bl	40de48 <__fxstatat@plt+0xb298>
  40dd64:	ldr	x24, [x21]
  40dd68:	ldr	x23, [x23]
  40dd6c:	mov	w8, #0x1                   	// #1
  40dd70:	mov	x26, xzr
  40dd74:	mov	x9, xzr
  40dd78:	add	x10, x19, #0x8
  40dd7c:	sub	x8, x8, x25
  40dd80:	str	x21, [sp, #24]
  40dd84:	stur	x22, [x29, #-16]
  40dd88:	stp	x8, x10, [sp, #8]
  40dd8c:	mov	x25, xzr
  40dd90:	add	x28, x10, x22, lsl #3
  40dd94:	add	x21, x8, x22
  40dd98:	add	x27, x19, x9, lsl #3
  40dd9c:	stur	x9, [x29, #-8]
  40dda0:	mov	x0, x24
  40dda4:	mov	x1, x23
  40dda8:	blr	x20
  40ddac:	cmp	w0, #0x0
  40ddb0:	b.le	40ddcc <__fxstatat@plt+0xb21c>
  40ddb4:	cmn	x21, x25
  40ddb8:	str	x23, [x27, x25, lsl #3]
  40ddbc:	b.eq	40de00 <__fxstatat@plt+0xb250>  // b.none
  40ddc0:	ldr	x23, [x28, x25, lsl #3]
  40ddc4:	add	x25, x25, #0x1
  40ddc8:	b	40dda0 <__fxstatat@plt+0xb1f0>
  40ddcc:	ldp	x9, x10, [x29, #-16]
  40ddd0:	add	x26, x26, #0x1
  40ddd4:	add	x8, x19, x10, lsl #3
  40ddd8:	cmp	x26, x9
  40dddc:	str	x24, [x8, x25, lsl #3]
  40dde0:	b.eq	40de28 <__fxstatat@plt+0xb278>  // b.none
  40dde4:	ldr	x8, [sp, #24]
  40dde8:	add	x22, x22, x25
  40ddec:	ldr	x24, [x8, x26, lsl #3]
  40ddf0:	add	x8, x10, x25
  40ddf4:	add	x9, x8, #0x1
  40ddf8:	ldp	x8, x10, [sp, #8]
  40ddfc:	b	40dd8c <__fxstatat@plt+0xb1dc>
  40de00:	ldr	x9, [sp, #24]
  40de04:	ldur	x8, [x29, #-8]
  40de08:	add	x1, x9, x26, lsl #3
  40de0c:	ldur	x9, [x29, #-16]
  40de10:	add	x8, x19, x8, lsl #3
  40de14:	add	x8, x8, x25, lsl #3
  40de18:	add	x0, x8, #0x8
  40de1c:	sub	x9, x9, x26
  40de20:	lsl	x2, x9, #3
  40de24:	bl	4024e0 <memcpy@plt>
  40de28:	ldp	x20, x19, [sp, #128]
  40de2c:	ldp	x22, x21, [sp, #112]
  40de30:	ldp	x24, x23, [sp, #96]
  40de34:	ldp	x26, x25, [sp, #80]
  40de38:	ldp	x28, x27, [sp, #64]
  40de3c:	ldp	x29, x30, [sp, #48]
  40de40:	add	sp, sp, #0x90
  40de44:	ret
  40de48:	sub	sp, sp, #0x90
  40de4c:	stp	x24, x23, [sp, #96]
  40de50:	lsr	x23, x1, #1
  40de54:	add	x24, x0, x23, lsl #3
  40de58:	stp	x22, x21, [sp, #112]
  40de5c:	stp	x20, x19, [sp, #128]
  40de60:	mov	x21, x1
  40de64:	mov	x19, x0
  40de68:	sub	x1, x1, x23
  40de6c:	mov	x0, x24
  40de70:	stp	x29, x30, [sp, #48]
  40de74:	stp	x28, x27, [sp, #64]
  40de78:	stp	x26, x25, [sp, #80]
  40de7c:	add	x29, sp, #0x30
  40de80:	mov	x22, x3
  40de84:	mov	x20, x2
  40de88:	bl	40dcc8 <__fxstatat@plt+0xb118>
  40de8c:	mov	x0, x19
  40de90:	mov	x1, x23
  40de94:	mov	x2, x20
  40de98:	mov	x3, x22
  40de9c:	bl	40dcc8 <__fxstatat@plt+0xb118>
  40dea0:	stur	x19, [x29, #-8]
  40dea4:	mov	x9, x19
  40dea8:	ldr	x25, [x9], #8
  40deac:	ldr	x24, [x24]
  40deb0:	mov	w8, #0x1                   	// #1
  40deb4:	mov	x26, xzr
  40deb8:	sub	x8, x8, x21
  40debc:	str	x21, [sp, #8]
  40dec0:	stur	x23, [x29, #-16]
  40dec4:	stp	x8, x9, [sp, #16]
  40dec8:	mov	x19, xzr
  40decc:	add	x27, x9, x23, lsl #3
  40ded0:	add	x21, x8, x23
  40ded4:	mov	x28, #0xfffffffffffffff8    	// #-8
  40ded8:	mov	x0, x25
  40dedc:	mov	x1, x24
  40dee0:	blr	x22
  40dee4:	cmp	w0, #0x0
  40dee8:	b.le	40df08 <__fxstatat@plt+0xb358>
  40deec:	cmn	x21, x19
  40def0:	str	x24, [x20, x19, lsl #3]
  40def4:	b.eq	40df34 <__fxstatat@plt+0xb384>  // b.none
  40def8:	ldr	x24, [x27, x19, lsl #3]
  40defc:	add	x19, x19, #0x1
  40df00:	sub	x28, x28, #0x8
  40df04:	b	40ded8 <__fxstatat@plt+0xb328>
  40df08:	ldur	x8, [x29, #-16]
  40df0c:	add	x26, x26, #0x1
  40df10:	add	x23, x23, x19
  40df14:	str	x25, [x20, x19, lsl #3]
  40df18:	cmp	x26, x8
  40df1c:	b.eq	40df74 <__fxstatat@plt+0xb3c4>  // b.none
  40df20:	ldur	x8, [x29, #-8]
  40df24:	sub	x20, x20, x28
  40df28:	ldr	x25, [x8, x26, lsl #3]
  40df2c:	ldp	x8, x9, [sp, #16]
  40df30:	b	40dec8 <__fxstatat@plt+0xb318>
  40df34:	ldur	x10, [x29, #-16]
  40df38:	ldur	x9, [x29, #-8]
  40df3c:	add	x8, x20, x19, lsl #3
  40df40:	add	x0, x8, #0x8
  40df44:	add	x1, x9, x26, lsl #3
  40df48:	sub	x9, x10, x26
  40df4c:	lsl	x2, x9, #3
  40df50:	bl	4024e0 <memcpy@plt>
  40df54:	ldp	x20, x19, [sp, #128]
  40df58:	ldp	x22, x21, [sp, #112]
  40df5c:	ldp	x24, x23, [sp, #96]
  40df60:	ldp	x26, x25, [sp, #80]
  40df64:	ldp	x28, x27, [sp, #64]
  40df68:	ldp	x29, x30, [sp, #48]
  40df6c:	add	sp, sp, #0x90
  40df70:	ret
  40df74:	ldr	x10, [sp, #8]
  40df78:	mov	x26, x23
  40df7c:	b	40df38 <__fxstatat@plt+0xb388>
  40df80:	sub	sp, sp, #0x20
  40df84:	mov	x7, x4
  40df88:	mov	w6, #0xffffffff            	// #-1
  40df8c:	str	w5, [sp]
  40df90:	mov	w4, wzr
  40df94:	mov	w5, wzr
  40df98:	stp	x29, x30, [sp, #16]
  40df9c:	add	x29, sp, #0x10
  40dfa0:	bl	40dfb0 <__fxstatat@plt+0xb400>
  40dfa4:	ldp	x29, x30, [sp, #16]
  40dfa8:	add	sp, sp, #0x20
  40dfac:	ret
  40dfb0:	stp	x29, x30, [sp, #-96]!
  40dfb4:	stp	x28, x27, [sp, #16]
  40dfb8:	stp	x26, x25, [sp, #32]
  40dfbc:	stp	x24, x23, [sp, #48]
  40dfc0:	stp	x22, x21, [sp, #64]
  40dfc4:	stp	x20, x19, [sp, #80]
  40dfc8:	mov	x29, sp
  40dfcc:	sub	sp, sp, #0x4d0
  40dfd0:	ldr	x8, [x3, #48]
  40dfd4:	ldr	w9, [x3, #8]
  40dfd8:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x54b8>
  40dfdc:	add	x10, x10, #0xe71
  40dfe0:	cmp	x8, #0x0
  40dfe4:	csel	x12, x10, x8, eq  // eq = none
  40dfe8:	ldrb	w8, [x2]
  40dfec:	mov	w11, #0xc                   	// #12
  40dff0:	cmp	w9, #0x0
  40dff4:	csel	w10, w11, w9, eq  // eq = none
  40dff8:	subs	w9, w9, #0xc
  40dffc:	mov	x18, x0
  40e000:	csel	w9, w9, w10, gt
  40e004:	str	x7, [sp, #80]
  40e008:	str	w4, [sp, #156]
  40e00c:	cbz	w8, 40f6c0 <__fxstatat@plt+0xcb10>
  40e010:	ldr	w8, [x29, #96]
  40e014:	str	w9, [sp, #36]
  40e018:	sub	x9, x29, #0x28
  40e01c:	add	x10, sp, #0xa0
  40e020:	str	w8, [sp, #68]
  40e024:	sub	x8, x29, #0x20
  40e028:	add	x8, x8, #0x17
  40e02c:	str	x8, [sp, #104]
  40e030:	orr	x8, x9, #0x2
  40e034:	str	x8, [sp, #112]
  40e038:	orr	x8, x9, #0x3
  40e03c:	mov	w16, #0xcccc                	// #52428
  40e040:	str	x8, [sp, #88]
  40e044:	orr	x8, x10, #0x1
  40e048:	adrp	x27, 419000 <_obstack_memory_used@@Base+0x64b8>
  40e04c:	mov	w26, w6
  40e050:	mov	x25, x2
  40e054:	mov	x0, xzr
  40e058:	movk	w16, #0xccc, lsl #16
  40e05c:	mov	w17, #0xa                   	// #10
  40e060:	str	x8, [sp, #56]
  40e064:	add	x27, x27, #0x3e8
  40e068:	str	x12, [sp, #40]
  40e06c:	str	x3, [sp, #128]
  40e070:	str	w5, [sp, #52]
  40e074:	stp	x8, x1, [sp, #136]
  40e078:	ldrb	w8, [x25]
  40e07c:	cmp	w8, #0x25
  40e080:	b.ne	40e0e8 <__fxstatat@plt+0xb538>  // b.any
  40e084:	ldr	w2, [sp, #156]
  40e088:	mov	w23, wzr
  40e08c:	mov	w28, wzr
  40e090:	add	x25, x25, #0x1
  40e094:	b	40e0a8 <__fxstatat@plt+0xb4f8>
  40e098:	cmp	w8, #0x5f
  40e09c:	b.ne	40e0d4 <__fxstatat@plt+0xb524>  // b.any
  40e0a0:	add	x25, x25, #0x1
  40e0a4:	mov	w28, w8
  40e0a8:	ldrb	w8, [x25]
  40e0ac:	sub	w9, w8, #0x23
  40e0b0:	cmp	w9, #0xd
  40e0b4:	b.hi	40e098 <__fxstatat@plt+0xb4e8>  // b.pmore
  40e0b8:	adr	x10, 40e0a0 <__fxstatat@plt+0xb4f0>
  40e0bc:	ldrb	w11, [x27, x9]
  40e0c0:	add	x10, x10, x11, lsl #2
  40e0c4:	br	x10
  40e0c8:	mov	w23, #0x1                   	// #1
  40e0cc:	add	x25, x25, #0x1
  40e0d0:	b	40e0a8 <__fxstatat@plt+0xb4f8>
  40e0d4:	cmp	w8, #0x5e
  40e0d8:	b.ne	40e15c <__fxstatat@plt+0xb5ac>  // b.any
  40e0dc:	mov	w2, #0x1                   	// #1
  40e0e0:	add	x25, x25, #0x1
  40e0e4:	b	40e0a8 <__fxstatat@plt+0xb4f8>
  40e0e8:	bic	w8, w26, w26, asr #31
  40e0ec:	cmp	w8, #0x1
  40e0f0:	csinc	w19, w8, wzr, hi  // hi = pmore
  40e0f4:	sub	x9, x1, x0
  40e0f8:	cmp	x9, x19
  40e0fc:	b.ls	40e1c8 <__fxstatat@plt+0xb618>  // b.plast
  40e100:	cbz	x18, 40e150 <__fxstatat@plt+0xb5a0>
  40e104:	cmp	w8, #0x2
  40e108:	b.cc	40e148 <__fxstatat@plt+0xb598>  // b.lo, b.ul, b.last
  40e10c:	sxtw	x8, w26
  40e110:	sub	x21, x8, #0x1
  40e114:	mov	w1, #0x20                  	// #32
  40e118:	mov	x22, x0
  40e11c:	mov	x0, x18
  40e120:	mov	x2, x21
  40e124:	mov	x23, x18
  40e128:	bl	4027c0 <memset@plt>
  40e12c:	ldr	x1, [sp, #144]
  40e130:	mov	x18, x23
  40e134:	mov	w16, #0xcccc                	// #52428
  40e138:	mov	w17, #0xa                   	// #10
  40e13c:	movk	w16, #0xccc, lsl #16
  40e140:	mov	x0, x22
  40e144:	add	x18, x23, x21
  40e148:	ldrb	w8, [x25]
  40e14c:	strb	w8, [x18], #1
  40e150:	mov	w8, wzr
  40e154:	add	x0, x0, x19
  40e158:	b	40e1cc <__fxstatat@plt+0xb61c>
  40e15c:	sub	w8, w8, #0x30
  40e160:	cmp	w8, #0x9
  40e164:	b.hi	40e1ac <__fxstatat@plt+0xb5fc>  // b.pmore
  40e168:	mov	w26, wzr
  40e16c:	b	40e184 <__fxstatat@plt+0xb5d4>
  40e170:	mov	w26, #0x7fffffff            	// #2147483647
  40e174:	ldrb	w8, [x25, #1]!
  40e178:	sub	w8, w8, #0x30
  40e17c:	cmp	w8, #0xa
  40e180:	b.cs	40e1ac <__fxstatat@plt+0xb5fc>  // b.hs, b.nlast
  40e184:	cmp	w26, w16
  40e188:	b.gt	40e170 <__fxstatat@plt+0xb5c0>
  40e18c:	b.ne	40e19c <__fxstatat@plt+0xb5ec>  // b.any
  40e190:	ldrb	w8, [x25]
  40e194:	cmp	w8, #0x37
  40e198:	b.hi	40e170 <__fxstatat@plt+0xb5c0>  // b.pmore
  40e19c:	ldrb	w8, [x25]
  40e1a0:	madd	w8, w26, w17, w8
  40e1a4:	sub	w26, w8, #0x30
  40e1a8:	b	40e174 <__fxstatat@plt+0xb5c4>
  40e1ac:	ldrb	w3, [x25]
  40e1b0:	cmp	w3, #0x4f
  40e1b4:	b.eq	40e1c0 <__fxstatat@plt+0xb610>  // b.none
  40e1b8:	cmp	w3, #0x45
  40e1bc:	b.ne	40e1dc <__fxstatat@plt+0xb62c>  // b.any
  40e1c0:	add	x25, x25, #0x1
  40e1c4:	b	40e1e0 <__fxstatat@plt+0xb630>
  40e1c8:	mov	w8, #0x1                   	// #1
  40e1cc:	cmp	w8, #0x0
  40e1d0:	mov	w9, #0x4                   	// #4
  40e1d4:	csel	w8, w9, w8, eq  // eq = none
  40e1d8:	b	40f62c <__fxstatat@plt+0xca7c>
  40e1dc:	mov	w3, wzr
  40e1e0:	ldrb	w4, [x25]
  40e1e4:	cmp	w4, #0x7a
  40e1e8:	b.hi	40e920 <__fxstatat@plt+0xbd70>  // b.pmore
  40e1ec:	adrp	x12, 419000 <_obstack_memory_used@@Base+0x64b8>
  40e1f0:	add	x12, x12, #0x3f6
  40e1f4:	adr	x10, 40e220 <__fxstatat@plt+0xb670>
  40e1f8:	ldrh	w11, [x12, x4, lsl #1]
  40e1fc:	add	x10, x10, x11, lsl #2
  40e200:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x54b8>
  40e204:	mov	w14, wzr
  40e208:	mov	w13, wzr
  40e20c:	mov	w9, wzr
  40e210:	mov	x8, xzr
  40e214:	mov	w22, #0xffffffff            	// #-1
  40e218:	add	x21, x21, #0xa84
  40e21c:	br	x10
  40e220:	cmp	w3, #0x4f
  40e224:	mov	w14, wzr
  40e228:	b.ne	40e2a4 <__fxstatat@plt+0xb6f4>  // b.any
  40e22c:	mov	w13, w14
  40e230:	b	40e924 <__fxstatat@plt+0xbd74>
  40e234:	cmp	w3, #0x45
  40e238:	b.eq	40e920 <__fxstatat@plt+0xbd70>  // b.none
  40e23c:	ldr	x9, [sp, #128]
  40e240:	str	x4, [sp, #16]
  40e244:	str	w3, [sp, #24]
  40e248:	str	w2, [sp, #124]
  40e24c:	str	x18, [sp, #72]
  40e250:	str	x0, [sp, #96]
  40e254:	ldp	w19, w21, [x9, #20]
  40e258:	ldr	w22, [x9, #28]
  40e25c:	mov	w8, #0xffffff9c            	// #-100
  40e260:	mov	w9, #0x12c                 	// #300
  40e264:	cmp	w19, #0x0
  40e268:	csel	w8, w9, w8, lt  // lt = tstop
  40e26c:	mov	w0, w22
  40e270:	mov	w1, w21
  40e274:	add	w23, w8, w19
  40e278:	bl	40f7a8 <__fxstatat@plt+0xcbf8>
  40e27c:	tbnz	w0, #31, 40ea10 <__fxstatat@plt+0xbe60>
  40e280:	mov	w24, w0
  40e284:	tst	w23, #0x3
  40e288:	b.eq	40eaa8 <__fxstatat@plt+0xbef8>  // b.none
  40e28c:	mov	w8, wzr
  40e290:	b	40eca8 <__fxstatat@plt+0xc0f8>
  40e294:	mov	w14, wzr
  40e298:	cmp	w3, #0x45
  40e29c:	orr	w2, w23, w2
  40e2a0:	b.eq	40e22c <__fxstatat@plt+0xb67c>  // b.none
  40e2a4:	mov	w13, w14
  40e2a8:	b	40ede0 <__fxstatat@plt+0xc230>
  40e2ac:	cbnz	w3, 40e920 <__fxstatat@plt+0xbd70>
  40e2b0:	b	40e32c <__fxstatat@plt+0xb77c>
  40e2b4:	mov	w13, wzr
  40e2b8:	sub	x25, x25, #0x1
  40e2bc:	b	40e924 <__fxstatat@plt+0xbd74>
  40e2c0:	cbnz	w3, 40e920 <__fxstatat@plt+0xbd70>
  40e2c4:	bic	w8, w26, w26, asr #31
  40e2c8:	cmp	w8, #0x1
  40e2cc:	csinc	w19, w8, wzr, hi  // hi = pmore
  40e2d0:	sub	x9, x1, x0
  40e2d4:	cmp	x9, x19
  40e2d8:	b.ls	40f620 <__fxstatat@plt+0xca70>  // b.plast
  40e2dc:	cbz	x18, 40f518 <__fxstatat@plt+0xc968>
  40e2e0:	cmp	w8, #0x2
  40e2e4:	b.cc	40f510 <__fxstatat@plt+0xc960>  // b.lo, b.ul, b.last
  40e2e8:	sxtw	x9, w26
  40e2ec:	and	w8, w28, #0xff
  40e2f0:	cmp	w8, #0x30
  40e2f4:	sub	x21, x9, #0x1
  40e2f8:	b.eq	40e304 <__fxstatat@plt+0xb754>  // b.none
  40e2fc:	cmp	w8, #0x2b
  40e300:	b.ne	40f4dc <__fxstatat@plt+0xc92c>  // b.any
  40e304:	mov	w1, #0x30                  	// #48
  40e308:	b	40f4e0 <__fxstatat@plt+0xc930>
  40e30c:	mov	w8, #0x1                   	// #1
  40e310:	ldrb	w9, [x25, x8]
  40e314:	cmp	w9, #0x3a
  40e318:	b.ne	40e8f4 <__fxstatat@plt+0xbd44>  // b.any
  40e31c:	add	x8, x8, #0x1
  40e320:	b	40e310 <__fxstatat@plt+0xb760>
  40e324:	cmp	w3, #0x45
  40e328:	b.eq	40e920 <__fxstatat@plt+0xbd70>  // b.none
  40e32c:	mov	w14, wzr
  40e330:	mov	w13, wzr
  40e334:	orr	w2, w23, w2
  40e338:	b	40ede0 <__fxstatat@plt+0xc230>
  40e33c:	cmp	w3, #0x45
  40e340:	b.eq	40e8e8 <__fxstatat@plt+0xbd38>  // b.none
  40e344:	ldr	x8, [sp, #128]
  40e348:	mov	w9, #0x851f                	// #34079
  40e34c:	movk	w9, #0x51eb, lsl #16
  40e350:	mov	w10, #0x64                  	// #100
  40e354:	ldrsw	x8, [x8, #20]
  40e358:	cmn	x8, #0x76c
  40e35c:	mul	x9, x8, x9
  40e360:	cset	w11, lt  // lt = tstop
  40e364:	str	x11, [sp, #136]
  40e368:	lsr	x11, x9, #63
  40e36c:	asr	x9, x9, #37
  40e370:	add	w9, w9, w11
  40e374:	msub	w8, w9, w10, w8
  40e378:	cset	w11, gt
  40e37c:	cmp	w8, #0x0
  40e380:	cset	w8, lt  // lt = tstop
  40e384:	and	w8, w11, w8
  40e388:	sub	w8, w9, w8
  40e38c:	add	w20, w8, #0x13
  40e390:	b	40ea94 <__fxstatat@plt+0xbee4>
  40e394:	cbnz	w3, 40e920 <__fxstatat@plt+0xbd70>
  40e398:	adrp	x21, 419000 <_obstack_memory_used@@Base+0x64b8>
  40e39c:	add	x21, x21, #0x4f4
  40e3a0:	b	40e4b4 <__fxstatat@plt+0xb904>
  40e3a4:	cbnz	w3, 40e920 <__fxstatat@plt+0xbd70>
  40e3a8:	cmp	w28, #0x0
  40e3ac:	cset	w11, eq  // eq = none
  40e3b0:	cmp	w26, #0x0
  40e3b4:	mov	w8, #0x6                   	// #6
  40e3b8:	cset	w12, lt  // lt = tstop
  40e3bc:	cmp	w26, #0x6
  40e3c0:	csel	w8, w26, w8, gt
  40e3c4:	mov	w9, #0x4                   	// #4
  40e3c8:	mov	w10, #0x2b                  	// #43
  40e3cc:	tst	w11, w12
  40e3d0:	sub	w8, w8, #0x6
  40e3d4:	adrp	x21, 419000 <_obstack_memory_used@@Base+0x64b8>
  40e3d8:	csel	w28, w10, w28, ne  // ne = any
  40e3dc:	csel	w22, w9, w8, ne  // ne = any
  40e3e0:	add	x21, x21, #0x4fd
  40e3e4:	b	40e4b8 <__fxstatat@plt+0xb908>
  40e3e8:	cmp	w3, #0x45
  40e3ec:	b.eq	40e920 <__fxstatat@plt+0xbd70>  // b.none
  40e3f0:	ldr	x8, [sp, #128]
  40e3f4:	mov	w13, #0x2                   	// #2
  40e3f8:	ldr	w10, [x8, #8]
  40e3fc:	b	40edac <__fxstatat@plt+0xc1fc>
  40e400:	cmp	w3, #0x45
  40e404:	b.eq	40e920 <__fxstatat@plt+0xbd70>  // b.none
  40e408:	ldr	w10, [sp, #36]
  40e40c:	mov	w13, #0x2                   	// #2
  40e410:	b	40edac <__fxstatat@plt+0xc1fc>
  40e414:	cmp	w3, #0x45
  40e418:	b.eq	40e920 <__fxstatat@plt+0xbd70>  // b.none
  40e41c:	ldr	x8, [sp, #128]
  40e420:	mov	w13, #0x2                   	// #2
  40e424:	ldr	w10, [x8, #4]
  40e428:	b	40edac <__fxstatat@plt+0xc1fc>
  40e42c:	cmp	w3, #0x45
  40e430:	b.eq	40e920 <__fxstatat@plt+0xbd70>  // b.none
  40e434:	cmn	w26, #0x1
  40e438:	b.eq	40ebac <__fxstatat@plt+0xbffc>  // b.none
  40e43c:	cmp	w26, #0x8
  40e440:	b.gt	40ebfc <__fxstatat@plt+0xc04c>
  40e444:	ldr	w10, [sp, #68]
  40e448:	sub	w8, w26, #0x1
  40e44c:	mov	w9, #0x6667                	// #26215
  40e450:	movk	w9, #0x6666, lsl #16
  40e454:	smull	x9, w10, w9
  40e458:	add	w8, w8, #0x1
  40e45c:	lsr	x10, x9, #63
  40e460:	asr	x9, x9, #34
  40e464:	cmp	w8, #0x8
  40e468:	add	w10, w9, w10
  40e46c:	b.lt	40e44c <__fxstatat@plt+0xb89c>  // b.tstop
  40e470:	mov	w13, w26
  40e474:	b	40edac <__fxstatat@plt+0xc1fc>
  40e478:	mov	w9, #0x1                   	// #1
  40e47c:	mov	w4, #0x70                  	// #112
  40e480:	eor	w8, w23, #0x1
  40e484:	mov	w13, wzr
  40e488:	and	w2, w2, w8
  40e48c:	orr	w14, w23, w9
  40e490:	b	40ede0 <__fxstatat@plt+0xc230>
  40e494:	cmp	w3, #0x45
  40e498:	b.eq	40e920 <__fxstatat@plt+0xbd70>  // b.none
  40e49c:	ldr	x8, [sp, #128]
  40e4a0:	mov	w13, #0x2                   	// #2
  40e4a4:	ldr	w10, [x8]
  40e4a8:	b	40edac <__fxstatat@plt+0xc1fc>
  40e4ac:	adrp	x21, 419000 <_obstack_memory_used@@Base+0x64b8>
  40e4b0:	add	x21, x21, #0x506
  40e4b4:	mov	w22, #0xffffffff            	// #-1
  40e4b8:	ldr	w8, [sp, #68]
  40e4bc:	ldr	x3, [sp, #128]
  40e4c0:	ldr	x7, [sp, #80]
  40e4c4:	and	w4, w2, #0x1
  40e4c8:	mov	x1, #0xffffffffffffffff    	// #-1
  40e4cc:	str	x0, [sp, #96]
  40e4d0:	mov	x0, xzr
  40e4d4:	mov	w19, w2
  40e4d8:	mov	x2, x21
  40e4dc:	mov	w5, w28
  40e4e0:	mov	w6, w22
  40e4e4:	str	x18, [sp, #72]
  40e4e8:	str	w8, [sp]
  40e4ec:	bl	40dfb0 <__fxstatat@plt+0xb400>
  40e4f0:	ldr	x1, [sp, #144]
  40e4f4:	mov	x23, x0
  40e4f8:	ldr	x0, [sp, #96]
  40e4fc:	bic	w8, w26, w26, asr #31
  40e500:	cmp	x23, x8
  40e504:	csel	x10, x8, x23, cc  // cc = lo, ul, last
  40e508:	sub	x11, x1, x0
  40e50c:	cmp	x10, x11
  40e510:	b.cs	40e550 <__fxstatat@plt+0xb9a0>  // b.hs, b.nlast
  40e514:	ldr	x9, [sp, #72]
  40e518:	str	w19, [sp, #124]
  40e51c:	cbz	x9, 40ea24 <__fxstatat@plt+0xbe74>
  40e520:	cmp	x23, x8
  40e524:	b.cs	40ea9c <__fxstatat@plt+0xbeec>  // b.hs, b.nlast
  40e528:	sxtw	x8, w26
  40e52c:	cmp	w28, #0x30
  40e530:	sub	x26, x8, x23
  40e534:	str	x11, [sp, #24]
  40e538:	b.eq	40e544 <__fxstatat@plt+0xb994>  // b.none
  40e53c:	cmp	w28, #0x2b
  40e540:	b.ne	40ec10 <__fxstatat@plt+0xc060>  // b.any
  40e544:	mov	x19, x10
  40e548:	mov	w1, #0x30                  	// #48
  40e54c:	b	40ec18 <__fxstatat@plt+0xc068>
  40e550:	ldr	x18, [sp, #72]
  40e554:	mov	w16, #0xcccc                	// #52428
  40e558:	mov	w8, #0x1                   	// #1
  40e55c:	movk	w16, #0xccc, lsl #16
  40e560:	mov	w17, #0xa                   	// #10
  40e564:	cbnz	w8, 40f62c <__fxstatat@plt+0xca7c>
  40e568:	b	40f628 <__fxstatat@plt+0xca78>
  40e56c:	cmp	w3, #0x45
  40e570:	b.eq	40e920 <__fxstatat@plt+0xbd70>  // b.none
  40e574:	ldr	x9, [sp, #128]
  40e578:	mov	w10, #0x2493                	// #9363
  40e57c:	movk	w10, #0x9249, lsl #16
  40e580:	ldp	w9, w8, [x9, #24]
  40e584:	sub	w8, w8, w9
  40e588:	b	40e5cc <__fxstatat@plt+0xba1c>
  40e58c:	cmp	w3, #0x45
  40e590:	b.eq	40e920 <__fxstatat@plt+0xbd70>  // b.none
  40e594:	ldr	x9, [sp, #128]
  40e598:	mov	w10, #0x2493                	// #9363
  40e59c:	movk	w10, #0x9249, lsl #16
  40e5a0:	ldp	w8, w9, [x9, #24]
  40e5a4:	add	w8, w8, #0x6
  40e5a8:	smull	x11, w8, w10
  40e5ac:	lsr	x11, x11, #32
  40e5b0:	add	w11, w11, w8
  40e5b4:	asr	w12, w11, #2
  40e5b8:	add	w11, w12, w11, lsr #31
  40e5bc:	lsl	w12, w11, #3
  40e5c0:	sub	w11, w12, w11
  40e5c4:	sub	w8, w11, w8
  40e5c8:	add	w8, w9, w8
  40e5cc:	add	w8, w8, #0x7
  40e5d0:	smull	x9, w8, w10
  40e5d4:	lsr	x9, x9, #32
  40e5d8:	add	w8, w9, w8
  40e5dc:	asr	w9, w8, #2
  40e5e0:	add	w10, w9, w8, lsr #31
  40e5e4:	mov	w13, #0x2                   	// #2
  40e5e8:	b	40edac <__fxstatat@plt+0xc1fc>
  40e5ec:	cmp	w3, #0x45
  40e5f0:	b.eq	40e8e8 <__fxstatat@plt+0xbd38>  // b.none
  40e5f4:	cmp	w3, #0x4f
  40e5f8:	b.eq	40e920 <__fxstatat@plt+0xbd70>  // b.none
  40e5fc:	ldr	x8, [sp, #128]
  40e600:	mov	w13, #0x4                   	// #4
  40e604:	ldr	w8, [x8, #20]
  40e608:	cmn	w8, #0x76c
  40e60c:	add	w20, w8, #0x76c
  40e610:	cset	w8, lt  // lt = tstop
  40e614:	str	x8, [sp, #136]
  40e618:	b	40f260 <__fxstatat@plt+0xc6b0>
  40e61c:	mov	x22, x0
  40e620:	ldr	x0, [sp, #40]
  40e624:	str	w2, [sp, #124]
  40e628:	mov	x19, x18
  40e62c:	bl	402550 <strlen@plt>
  40e630:	ldr	x1, [sp, #144]
  40e634:	mov	x21, x0
  40e638:	bic	w8, w26, w26, asr #31
  40e63c:	cmp	x21, x8
  40e640:	csel	x11, x8, x21, cc  // cc = lo, ul, last
  40e644:	sub	x9, x1, x22
  40e648:	mov	x0, x22
  40e64c:	cmp	x11, x9
  40e650:	b.cs	40ea38 <__fxstatat@plt+0xbe88>  // b.hs, b.nlast
  40e654:	cbz	x19, 40ebbc <__fxstatat@plt+0xc00c>
  40e658:	cmp	x21, x8
  40e65c:	b.cs	40ec08 <__fxstatat@plt+0xc058>  // b.hs, b.nlast
  40e660:	sxtw	x9, w26
  40e664:	and	w8, w28, #0xff
  40e668:	cmp	w8, #0x30
  40e66c:	sub	x26, x9, x21
  40e670:	str	x11, [sp, #96]
  40e674:	b.eq	40e680 <__fxstatat@plt+0xbad0>  // b.none
  40e678:	cmp	w8, #0x2b
  40e67c:	b.ne	40f384 <__fxstatat@plt+0xc7d4>  // b.any
  40e680:	mov	w1, #0x30                  	// #48
  40e684:	b	40f388 <__fxstatat@plt+0xc7d8>
  40e688:	cmp	w3, #0x45
  40e68c:	b.eq	40e920 <__fxstatat@plt+0xbd70>  // b.none
  40e690:	ldr	x8, [sp, #128]
  40e694:	mov	w13, #0x2                   	// #2
  40e698:	ldr	w10, [x8, #12]
  40e69c:	b	40edac <__fxstatat@plt+0xc1fc>
  40e6a0:	cmp	w3, #0x45
  40e6a4:	b.eq	40e920 <__fxstatat@plt+0xbd70>  // b.none
  40e6a8:	ldr	x8, [sp, #128]
  40e6ac:	ldr	w8, [x8, #12]
  40e6b0:	b	40e6ec <__fxstatat@plt+0xbb3c>
  40e6b4:	cmp	w3, #0x45
  40e6b8:	b.eq	40e920 <__fxstatat@plt+0xbd70>  // b.none
  40e6bc:	ldr	x8, [sp, #128]
  40e6c0:	mov	w13, #0x3                   	// #3
  40e6c4:	ldr	w8, [x8, #28]
  40e6c8:	b	40e718 <__fxstatat@plt+0xbb68>
  40e6cc:	cmp	w3, #0x45
  40e6d0:	b.eq	40e920 <__fxstatat@plt+0xbd70>  // b.none
  40e6d4:	ldr	x8, [sp, #128]
  40e6d8:	ldr	w8, [x8, #8]
  40e6dc:	b	40e6ec <__fxstatat@plt+0xbb3c>
  40e6e0:	ldr	w8, [sp, #36]
  40e6e4:	cmp	w3, #0x45
  40e6e8:	b.eq	40e920 <__fxstatat@plt+0xbd70>  // b.none
  40e6ec:	cmp	w28, #0x0
  40e6f0:	mov	w9, #0x5f                  	// #95
  40e6f4:	csel	w28, w9, w28, eq  // eq = none
  40e6f8:	mov	w13, #0x2                   	// #2
  40e6fc:	mov	w10, w8
  40e700:	b	40edac <__fxstatat@plt+0xc1fc>
  40e704:	cmp	w3, #0x45
  40e708:	b.eq	40e920 <__fxstatat@plt+0xbd70>  // b.none
  40e70c:	ldr	x8, [sp, #128]
  40e710:	mov	w13, #0x2                   	// #2
  40e714:	ldr	w8, [x8, #16]
  40e718:	cmn	w8, #0x1
  40e71c:	add	w20, w8, #0x1
  40e720:	cset	w9, lt  // lt = tstop
  40e724:	b	40edb8 <__fxstatat@plt+0xc208>
  40e728:	bic	w8, w26, w26, asr #31
  40e72c:	cmp	w8, #0x1
  40e730:	csinc	w19, w8, wzr, hi  // hi = pmore
  40e734:	sub	x9, x1, x0
  40e738:	cmp	x9, x19
  40e73c:	b.ls	40f620 <__fxstatat@plt+0xca70>  // b.plast
  40e740:	cbz	x18, 40f518 <__fxstatat@plt+0xc968>
  40e744:	cmp	w8, #0x2
  40e748:	b.cc	40f44c <__fxstatat@plt+0xc89c>  // b.lo, b.ul, b.last
  40e74c:	sxtw	x9, w26
  40e750:	and	w8, w28, #0xff
  40e754:	mov	x22, x0
  40e758:	cmp	w8, #0x30
  40e75c:	sub	x21, x9, #0x1
  40e760:	b.eq	40e76c <__fxstatat@plt+0xbbbc>  // b.none
  40e764:	cmp	w8, #0x2b
  40e768:	b.ne	40f420 <__fxstatat@plt+0xc870>  // b.any
  40e76c:	mov	w1, #0x30                  	// #48
  40e770:	b	40f424 <__fxstatat@plt+0xc874>
  40e774:	ldr	x8, [sp, #128]
  40e778:	mov	w10, #0xb                   	// #11
  40e77c:	mov	w9, wzr
  40e780:	mov	w13, #0x1                   	// #1
  40e784:	ldr	w8, [x8, #16]
  40e788:	mul	w8, w8, w10
  40e78c:	asr	w8, w8, #5
  40e790:	add	w20, w8, #0x1
  40e794:	b	40edb8 <__fxstatat@plt+0xc208>
  40e798:	ldr	x9, [sp, #128]
  40e79c:	mov	x19, x0
  40e7a0:	ldr	x0, [sp, #80]
  40e7a4:	add	x1, sp, #0xa0
  40e7a8:	ldr	x8, [x9, #48]
  40e7ac:	ldp	q1, q0, [x9, #16]
  40e7b0:	ldr	q2, [x9]
  40e7b4:	mov	w23, w2
  40e7b8:	mov	x21, x18
  40e7bc:	str	x8, [sp, #208]
  40e7c0:	stp	q1, q0, [sp, #176]
  40e7c4:	str	q2, [sp, #160]
  40e7c8:	bl	412f60 <_obstack_memory_used@@Base+0x418>
  40e7cc:	ldr	x22, [sp, #104]
  40e7d0:	lsr	x8, x0, #63
  40e7d4:	str	x8, [sp, #136]
  40e7d8:	mov	x8, x0
  40e7dc:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  40e7e0:	movk	x9, #0x6667
  40e7e4:	smulh	x9, x8, x9
  40e7e8:	asr	x12, x9, #2
  40e7ec:	mov	w10, #0xa                   	// #10
  40e7f0:	add	x9, x12, x9, lsr #63
  40e7f4:	cmp	x0, #0x0
  40e7f8:	add	x11, x8, #0x9
  40e7fc:	msub	w8, w9, w10, w8
  40e800:	cneg	w8, w8, lt  // lt = tstop
  40e804:	add	w8, w8, #0x30
  40e808:	cmp	x11, #0x12
  40e80c:	strb	w8, [x22, #-1]!
  40e810:	mov	x8, x9
  40e814:	b.hi	40e7dc <__fxstatat@plt+0xbc2c>  // b.pmore
  40e818:	ldr	x1, [sp, #144]
  40e81c:	mov	w16, #0xcccc                	// #52428
  40e820:	mov	w8, wzr
  40e824:	mov	w13, #0x1                   	// #1
  40e828:	mov	x0, x19
  40e82c:	movk	w16, #0xccc, lsl #16
  40e830:	mov	w17, #0xa                   	// #10
  40e834:	mov	x18, x21
  40e838:	mov	w2, w23
  40e83c:	b	40eeec <__fxstatat@plt+0xc33c>
  40e840:	bic	w8, w26, w26, asr #31
  40e844:	cmp	w8, #0x1
  40e848:	csinc	w19, w8, wzr, hi  // hi = pmore
  40e84c:	sub	x9, x1, x0
  40e850:	cmp	x9, x19
  40e854:	b.ls	40f620 <__fxstatat@plt+0xca70>  // b.plast
  40e858:	cbz	x18, 40f518 <__fxstatat@plt+0xc968>
  40e85c:	cmp	w8, #0x2
  40e860:	b.cc	40f480 <__fxstatat@plt+0xc8d0>  // b.lo, b.ul, b.last
  40e864:	sxtw	x9, w26
  40e868:	and	w8, w28, #0xff
  40e86c:	mov	x22, x0
  40e870:	cmp	w8, #0x30
  40e874:	sub	x21, x9, #0x1
  40e878:	b.eq	40e884 <__fxstatat@plt+0xbcd4>  // b.none
  40e87c:	cmp	w8, #0x2b
  40e880:	b.ne	40f454 <__fxstatat@plt+0xc8a4>  // b.any
  40e884:	mov	w1, #0x30                  	// #48
  40e888:	b	40f458 <__fxstatat@plt+0xc8a8>
  40e88c:	ldr	x8, [sp, #128]
  40e890:	mov	w9, #0x2493                	// #9363
  40e894:	movk	w9, #0x9249, lsl #16
  40e898:	mov	w13, #0x1                   	// #1
  40e89c:	ldr	w8, [x8, #24]
  40e8a0:	add	w8, w8, #0x6
  40e8a4:	smull	x9, w8, w9
  40e8a8:	lsr	x9, x9, #32
  40e8ac:	add	w9, w9, w8
  40e8b0:	asr	w10, w9, #2
  40e8b4:	add	w9, w10, w9, lsr #31
  40e8b8:	sub	w9, w9, w9, lsl #3
  40e8bc:	add	w8, w8, w9
  40e8c0:	add	w10, w8, #0x1
  40e8c4:	b	40edac <__fxstatat@plt+0xc1fc>
  40e8c8:	cmp	w3, #0x45
  40e8cc:	b.eq	40e920 <__fxstatat@plt+0xbd70>  // b.none
  40e8d0:	ldr	x8, [sp, #128]
  40e8d4:	mov	w13, #0x1                   	// #1
  40e8d8:	ldr	w10, [x8, #24]
  40e8dc:	b	40edac <__fxstatat@plt+0xc1fc>
  40e8e0:	cmp	w3, #0x45
  40e8e4:	b.ne	40ea54 <__fxstatat@plt+0xbea4>  // b.any
  40e8e8:	mov	w14, wzr
  40e8ec:	mov	w13, wzr
  40e8f0:	b	40ede0 <__fxstatat@plt+0xc230>
  40e8f4:	cmp	w9, #0x7a
  40e8f8:	b.ne	40e920 <__fxstatat@plt+0xbd70>  // b.any
  40e8fc:	add	x25, x25, x8
  40e900:	ldr	x10, [sp, #128]
  40e904:	ldr	w9, [x10, #32]
  40e908:	tbnz	w9, #31, 40f628 <__fxstatat@plt+0xca78>
  40e90c:	ldr	w9, [x10, #40]
  40e910:	tbnz	w9, #31, 40ead8 <__fxstatat@plt+0xbf28>
  40e914:	cbz	w9, 40eae0 <__fxstatat@plt+0xbf30>
  40e918:	str	xzr, [sp, #136]
  40e91c:	b	40eaf4 <__fxstatat@plt+0xbf44>
  40e920:	mov	w13, wzr
  40e924:	mov	x8, xzr
  40e928:	ldrb	w9, [x25, x8]
  40e92c:	sub	x8, x8, #0x1
  40e930:	cmp	w9, #0x25
  40e934:	b.ne	40e928 <__fxstatat@plt+0xbd78>  // b.any
  40e938:	neg	x9, x8
  40e93c:	bic	w10, w26, w26, asr #31
  40e940:	cmp	w10, w9
  40e944:	csel	w19, w9, w10, cc  // cc = lo, ul, last
  40e948:	sub	x11, x1, x0
  40e94c:	cmp	x11, x19
  40e950:	b.ls	40f620 <__fxstatat@plt+0xca70>  // b.plast
  40e954:	cbz	x18, 40ea00 <__fxstatat@plt+0xbe50>
  40e958:	add	x23, x25, x8
  40e95c:	and	x21, x9, #0xffffffff
  40e960:	cbnz	w13, 40e9b8 <__fxstatat@plt+0xbe08>
  40e964:	cmp	w10, w9
  40e968:	b.ls	40e9b8 <__fxstatat@plt+0xbe08>  // b.plast
  40e96c:	sxtw	x9, w26
  40e970:	and	w8, w28, #0xff
  40e974:	cmp	w8, #0x30
  40e978:	sub	x22, x9, x21
  40e97c:	str	w2, [sp, #124]
  40e980:	str	x0, [sp, #96]
  40e984:	b.eq	40e990 <__fxstatat@plt+0xbde0>  // b.none
  40e988:	cmp	w8, #0x2b
  40e98c:	b.ne	40e998 <__fxstatat@plt+0xbde8>  // b.any
  40e990:	mov	w1, #0x30                  	// #48
  40e994:	b	40e99c <__fxstatat@plt+0xbdec>
  40e998:	mov	w1, #0x20                  	// #32
  40e99c:	mov	x0, x18
  40e9a0:	mov	x2, x22
  40e9a4:	mov	x26, x18
  40e9a8:	bl	4027c0 <memset@plt>
  40e9ac:	ldr	x0, [sp, #96]
  40e9b0:	ldr	w2, [sp, #124]
  40e9b4:	add	x18, x26, x22
  40e9b8:	add	x1, x23, #0x1
  40e9bc:	mov	x22, x0
  40e9c0:	mov	x0, x18
  40e9c4:	tbz	w2, #0, 40e9d8 <__fxstatat@plt+0xbe28>
  40e9c8:	mov	x2, x21
  40e9cc:	mov	x23, x18
  40e9d0:	bl	40f750 <__fxstatat@plt+0xcba0>
  40e9d4:	b	40e9e4 <__fxstatat@plt+0xbe34>
  40e9d8:	mov	x2, x21
  40e9dc:	mov	x23, x18
  40e9e0:	bl	4024e0 <memcpy@plt>
  40e9e4:	ldr	x1, [sp, #144]
  40e9e8:	mov	x18, x23
  40e9ec:	mov	w16, #0xcccc                	// #52428
  40e9f0:	mov	w17, #0xa                   	// #10
  40e9f4:	movk	w16, #0xccc, lsl #16
  40e9f8:	mov	x0, x22
  40e9fc:	add	x18, x23, x21
  40ea00:	mov	w8, wzr
  40ea04:	add	x0, x0, x19
  40ea08:	cbnz	w8, 40f62c <__fxstatat@plt+0xca7c>
  40ea0c:	b	40f628 <__fxstatat@plt+0xca78>
  40ea10:	sub	w8, w23, #0x1
  40ea14:	tst	w8, #0x3
  40ea18:	b.eq	40eb7c <__fxstatat@plt+0xbfcc>  // b.none
  40ea1c:	mov	w8, wzr
  40ea20:	b	40ece8 <__fxstatat@plt+0xc138>
  40ea24:	mov	w16, #0xcccc                	// #52428
  40ea28:	mov	x18, xzr
  40ea2c:	movk	w16, #0xccc, lsl #16
  40ea30:	mov	w17, #0xa                   	// #10
  40ea34:	b	40ec84 <__fxstatat@plt+0xc0d4>
  40ea38:	mov	w16, #0xcccc                	// #52428
  40ea3c:	mov	w8, #0x1                   	// #1
  40ea40:	movk	w16, #0xccc, lsl #16
  40ea44:	mov	w17, #0xa                   	// #10
  40ea48:	mov	x18, x19
  40ea4c:	cbnz	w8, 40f62c <__fxstatat@plt+0xca7c>
  40ea50:	b	40f628 <__fxstatat@plt+0xca78>
  40ea54:	ldr	x8, [sp, #128]
  40ea58:	mov	w9, #0x851f                	// #34079
  40ea5c:	movk	w9, #0x51eb, lsl #16
  40ea60:	mov	w10, #0x64                  	// #100
  40ea64:	ldrsw	x8, [x8, #20]
  40ea68:	str	xzr, [sp, #136]
  40ea6c:	mul	x9, x8, x9
  40ea70:	lsr	x11, x9, #63
  40ea74:	asr	x9, x9, #37
  40ea78:	add	w9, w9, w11
  40ea7c:	cmn	w8, #0x76c
  40ea80:	msub	w8, w9, w10, w8
  40ea84:	add	w9, w8, #0x64
  40ea88:	csneg	w9, w9, w8, ge  // ge = tcont
  40ea8c:	cmp	w8, #0x0
  40ea90:	csel	w20, w9, w8, lt  // lt = tstop
  40ea94:	mov	w13, #0x2                   	// #2
  40ea98:	b	40f260 <__fxstatat@plt+0xc6b0>
  40ea9c:	ldr	w8, [sp, #124]
  40eaa0:	mov	x19, x10
  40eaa4:	b	40ec34 <__fxstatat@plt+0xc084>
  40eaa8:	mov	w8, #0x5c29                	// #23593
  40eaac:	mov	w9, #0xb850                	// #47184
  40eab0:	movk	w8, #0xc28f, lsl #16
  40eab4:	movk	w9, #0x51e, lsl #16
  40eab8:	madd	w8, w23, w8, w9
  40eabc:	mov	w10, #0x5c28                	// #23592
  40eac0:	ror	w9, w8, #2
  40eac4:	movk	w10, #0x28f, lsl #16
  40eac8:	cmp	w9, w10
  40eacc:	b.ls	40ec94 <__fxstatat@plt+0xc0e4>  // b.plast
  40ead0:	mov	w8, #0x1                   	// #1
  40ead4:	b	40eca8 <__fxstatat@plt+0xc0f8>
  40ead8:	mov	w10, #0x1                   	// #1
  40eadc:	b	40eaf0 <__fxstatat@plt+0xbf40>
  40eae0:	ldr	x10, [sp, #40]
  40eae4:	ldrb	w10, [x10]
  40eae8:	cmp	w10, #0x2d
  40eaec:	cset	w10, eq  // eq = none
  40eaf0:	str	x10, [sp, #136]
  40eaf4:	cmp	x8, #0x3
  40eaf8:	b.hi	40ebd0 <__fxstatat@plt+0xc020>  // b.pmore
  40eafc:	mov	w10, #0x8889                	// #34953
  40eb00:	movk	w10, #0x8888, lsl #16
  40eb04:	mov	w11, #0xb3c5                	// #46021
  40eb08:	adrp	x12, 419000 <_obstack_memory_used@@Base+0x64b8>
  40eb0c:	movk	w11, #0x91a2, lsl #16
  40eb10:	add	x12, x12, #0x4ec
  40eb14:	smull	x13, w9, w10
  40eb18:	smull	x11, w9, w11
  40eb1c:	adr	x14, 40eb6c <__fxstatat@plt+0xbfbc>
  40eb20:	ldrh	w15, [x12, x8, lsl #1]
  40eb24:	add	x14, x14, x15, lsl #2
  40eb28:	lsr	x8, x13, #32
  40eb2c:	lsr	x11, x11, #32
  40eb30:	add	w8, w8, w9
  40eb34:	add	w11, w11, w9
  40eb38:	asr	w12, w8, #5
  40eb3c:	add	w12, w12, w8, lsr #31
  40eb40:	asr	w8, w11, #11
  40eb44:	add	w20, w8, w11, lsr #31
  40eb48:	smull	x8, w12, w10
  40eb4c:	lsr	x8, x8, #32
  40eb50:	add	w8, w8, w12
  40eb54:	asr	w10, w8, #5
  40eb58:	add	w8, w10, w8, lsr #31
  40eb5c:	mov	w10, #0x3c                  	// #60
  40eb60:	msub	w8, w8, w10, w12
  40eb64:	msub	w9, w12, w10, w9
  40eb68:	br	x14
  40eb6c:	mov	w9, #0x64                  	// #100
  40eb70:	mov	w24, wzr
  40eb74:	mov	w13, #0x5                   	// #5
  40eb78:	b	40f364 <__fxstatat@plt+0xc7b4>
  40eb7c:	mov	w9, #0x5c29                	// #23593
  40eb80:	mov	w10, #0xb850                	// #47184
  40eb84:	movk	w9, #0xc28f, lsl #16
  40eb88:	movk	w10, #0x51e, lsl #16
  40eb8c:	madd	w8, w8, w9, w10
  40eb90:	mov	w10, #0x5c28                	// #23592
  40eb94:	ror	w9, w8, #2
  40eb98:	movk	w10, #0x28f, lsl #16
  40eb9c:	cmp	w9, w10
  40eba0:	b.ls	40ecd4 <__fxstatat@plt+0xc124>  // b.plast
  40eba4:	mov	w8, #0x1                   	// #1
  40eba8:	b	40ece8 <__fxstatat@plt+0xc138>
  40ebac:	ldr	w10, [sp, #68]
  40ebb0:	mov	w13, #0x9                   	// #9
  40ebb4:	mov	w26, #0x9                   	// #9
  40ebb8:	b	40edac <__fxstatat@plt+0xc1fc>
  40ebbc:	mov	w16, #0xcccc                	// #52428
  40ebc0:	mov	x18, xzr
  40ebc4:	movk	w16, #0xccc, lsl #16
  40ebc8:	mov	w17, #0xa                   	// #10
  40ebcc:	b	40f410 <__fxstatat@plt+0xc860>
  40ebd0:	mov	w13, wzr
  40ebd4:	mov	w8, #0xe                   	// #14
  40ebd8:	b	40f36c <__fxstatat@plt+0xc7bc>
  40ebdc:	cbz	w9, 40f354 <__fxstatat@plt+0xc7a4>
  40ebe0:	mov	w10, #0x2710                	// #10000
  40ebe4:	mov	w11, #0x64                  	// #100
  40ebe8:	madd	w9, w20, w10, w9
  40ebec:	mov	w13, #0x9                   	// #9
  40ebf0:	mov	w24, #0x14                  	// #20
  40ebf4:	madd	w20, w8, w11, w9
  40ebf8:	b	40f368 <__fxstatat@plt+0xc7b8>
  40ebfc:	ldr	w10, [sp, #68]
  40ec00:	mov	w13, w26
  40ec04:	b	40edac <__fxstatat@plt+0xc1fc>
  40ec08:	ldr	w9, [sp, #124]
  40ec0c:	b	40f3a0 <__fxstatat@plt+0xc7f0>
  40ec10:	mov	x19, x10
  40ec14:	mov	w1, #0x20                  	// #32
  40ec18:	mov	x0, x9
  40ec1c:	mov	x2, x26
  40ec20:	bl	4027c0 <memset@plt>
  40ec24:	ldr	x9, [sp, #72]
  40ec28:	ldr	x11, [sp, #24]
  40ec2c:	ldr	w8, [sp, #124]
  40ec30:	add	x9, x9, x26
  40ec34:	and	w4, w8, #0x1
  40ec38:	ldr	w8, [sp, #68]
  40ec3c:	ldr	x3, [sp, #128]
  40ec40:	ldr	x7, [sp, #80]
  40ec44:	mov	x0, x9
  40ec48:	mov	x1, x11
  40ec4c:	mov	x2, x21
  40ec50:	mov	w5, w28
  40ec54:	mov	w6, w22
  40ec58:	str	w8, [sp]
  40ec5c:	mov	x21, x9
  40ec60:	bl	40dfb0 <__fxstatat@plt+0xb400>
  40ec64:	ldr	x1, [sp, #144]
  40ec68:	ldr	x0, [sp, #96]
  40ec6c:	mov	x18, x21
  40ec70:	mov	w16, #0xcccc                	// #52428
  40ec74:	add	x18, x21, x23
  40ec78:	movk	w16, #0xccc, lsl #16
  40ec7c:	mov	w17, #0xa                   	// #10
  40ec80:	mov	x10, x19
  40ec84:	mov	w8, wzr
  40ec88:	add	x0, x10, x0
  40ec8c:	cbnz	wzr, 40f62c <__fxstatat@plt+0xca7c>
  40ec90:	b	40f628 <__fxstatat@plt+0xca78>
  40ec94:	mov	w9, #0xd70b                	// #55051
  40ec98:	ror	w8, w8, #4
  40ec9c:	movk	w9, #0xa3, lsl #16
  40eca0:	cmp	w8, w9
  40eca4:	cset	w8, cc  // cc = lo, ul, last
  40eca8:	cmp	w8, #0x0
  40ecac:	mov	w8, #0x16d                 	// #365
  40ecb0:	cinc	w8, w8, ne  // ne = any
  40ecb4:	sub	w0, w22, w8
  40ecb8:	mov	w1, w21
  40ecbc:	bl	40f7a8 <__fxstatat@plt+0xcbf8>
  40ecc0:	mvn	w8, w0
  40ecc4:	cmp	w0, #0x0
  40ecc8:	lsr	w9, w8, #31
  40eccc:	csel	w0, w0, w24, ge  // ge = tcont
  40ecd0:	b	40ed04 <__fxstatat@plt+0xc154>
  40ecd4:	mov	w9, #0xd70b                	// #55051
  40ecd8:	ror	w8, w8, #4
  40ecdc:	movk	w9, #0xa3, lsl #16
  40ece0:	cmp	w8, w9
  40ece4:	cset	w8, cc  // cc = lo, ul, last
  40ece8:	cmp	w8, #0x0
  40ecec:	mov	w8, #0x16d                 	// #365
  40ecf0:	cinc	w8, w8, ne  // ne = any
  40ecf4:	add	w0, w8, w22
  40ecf8:	mov	w1, w21
  40ecfc:	bl	40f7a8 <__fxstatat@plt+0xcbf8>
  40ed00:	mov	w9, #0xffffffff            	// #-1
  40ed04:	ldr	x4, [sp, #16]
  40ed08:	ldr	x1, [sp, #144]
  40ed0c:	ldr	x18, [sp, #72]
  40ed10:	ldr	w2, [sp, #124]
  40ed14:	ldr	w3, [sp, #24]
  40ed18:	mov	w16, #0xcccc                	// #52428
  40ed1c:	movk	w16, #0xccc, lsl #16
  40ed20:	mov	w17, #0xa                   	// #10
  40ed24:	cmp	w4, #0x47
  40ed28:	b.eq	40ed7c <__fxstatat@plt+0xc1cc>  // b.none
  40ed2c:	cmp	w4, #0x67
  40ed30:	b.ne	40f22c <__fxstatat@plt+0xc67c>  // b.any
  40ed34:	mov	w8, #0x851f                	// #34079
  40ed38:	movk	w8, #0x51eb, lsl #16
  40ed3c:	smull	x11, w19, w8
  40ed40:	lsr	x12, x11, #63
  40ed44:	asr	x11, x11, #37
  40ed48:	mov	w10, #0x64                  	// #100
  40ed4c:	add	w11, w11, w12
  40ed50:	msub	w11, w11, w10, w19
  40ed54:	add	w11, w9, w11
  40ed58:	smull	x8, w11, w8
  40ed5c:	lsr	x12, x8, #63
  40ed60:	asr	x8, x8, #37
  40ed64:	add	w8, w8, w12
  40ed68:	msub	w20, w8, w10, w11
  40ed6c:	tbnz	w20, #31, 40f320 <__fxstatat@plt+0xc770>
  40ed70:	mov	w8, wzr
  40ed74:	str	xzr, [sp, #136]
  40ed78:	b	40f33c <__fxstatat@plt+0xc78c>
  40ed7c:	mov	w10, #0xfffff894            	// #-1900
  40ed80:	add	w11, w19, w9
  40ed84:	sub	w9, w10, w9
  40ed88:	cmp	w19, w9
  40ed8c:	cset	w9, lt  // lt = tstop
  40ed90:	mov	w8, wzr
  40ed94:	add	w20, w11, #0x76c
  40ed98:	str	x9, [sp, #136]
  40ed9c:	mov	w13, #0x4                   	// #4
  40eda0:	ldr	x0, [sp, #96]
  40eda4:	tbz	w8, #0, 40f260 <__fxstatat@plt+0xc6b0>
  40eda8:	ldr	w10, [sp, #64]
  40edac:	lsr	w9, w10, #31
  40edb0:	mov	w20, w10
  40edb4:	str	w10, [sp, #64]
  40edb8:	cmp	w9, #0x0
  40edbc:	cset	w9, ne  // ne = any
  40edc0:	mov	w24, wzr
  40edc4:	mov	w8, wzr
  40edc8:	str	x9, [sp, #136]
  40edcc:	cmp	w3, #0x4f
  40edd0:	b.ne	40ee98 <__fxstatat@plt+0xc2e8>  // b.any
  40edd4:	ldr	x9, [sp, #136]
  40edd8:	tbnz	w9, #0, 40ee98 <__fxstatat@plt+0xc2e8>
  40eddc:	mov	w14, wzr
  40ede0:	mov	w8, #0x2520                	// #9504
  40ede4:	sturh	w8, [x29, #-40]
  40ede8:	ldr	x8, [sp, #112]
  40edec:	mov	w19, w13
  40edf0:	mov	x23, x18
  40edf4:	mov	x22, x0
  40edf8:	str	w14, [sp, #96]
  40edfc:	str	w2, [sp, #124]
  40ee00:	cbz	w3, 40ee0c <__fxstatat@plt+0xc25c>
  40ee04:	ldr	x8, [sp, #88]
  40ee08:	sturb	w3, [x29, #-38]
  40ee0c:	ldr	x3, [sp, #128]
  40ee10:	add	x0, sp, #0xa0
  40ee14:	sub	x2, x29, #0x28
  40ee18:	mov	w1, #0x400                 	// #1024
  40ee1c:	strb	w4, [x8]
  40ee20:	strb	wzr, [x8, #1]
  40ee24:	bl	402630 <strftime@plt>
  40ee28:	cbz	x0, 40efa4 <__fxstatat@plt+0xc3f4>
  40ee2c:	ldr	x1, [sp, #144]
  40ee30:	sub	x21, x0, #0x1
  40ee34:	bic	w8, w26, w26, asr #31
  40ee38:	cmp	x21, x8
  40ee3c:	csel	x10, x8, x21, cc  // cc = lo, ul, last
  40ee40:	sub	x9, x1, x22
  40ee44:	mov	w16, #0xcccc                	// #52428
  40ee48:	mov	x0, x22
  40ee4c:	cmp	x10, x9
  40ee50:	movk	w16, #0xccc, lsl #16
  40ee54:	mov	w17, #0xa                   	// #10
  40ee58:	b.cs	40efc0 <__fxstatat@plt+0xc410>  // b.hs, b.nlast
  40ee5c:	cbz	x23, 40f0e8 <__fxstatat@plt+0xc538>
  40ee60:	mov	x9, x23
  40ee64:	cbnz	w19, 40f1c0 <__fxstatat@plt+0xc610>
  40ee68:	cmp	x21, x8
  40ee6c:	ldr	w8, [sp, #124]
  40ee70:	b.cs	40f1cc <__fxstatat@plt+0xc61c>  // b.hs, b.nlast
  40ee74:	sxtw	x8, w26
  40ee78:	cmp	w28, #0x30
  40ee7c:	sub	x26, x8, x21
  40ee80:	b.eq	40ee8c <__fxstatat@plt+0xc2dc>  // b.none
  40ee84:	cmp	w28, #0x2b
  40ee88:	b.ne	40f2ac <__fxstatat@plt+0xc6fc>  // b.any
  40ee8c:	mov	x28, x10
  40ee90:	mov	w1, #0x30                  	// #48
  40ee94:	b	40f2b4 <__fxstatat@plt+0xc704>
  40ee98:	ldr	x9, [sp, #136]
  40ee9c:	ldr	x22, [sp, #104]
  40eea0:	tst	w9, #0x1
  40eea4:	cneg	w9, w20, ne  // ne = any
  40eea8:	tbz	w24, #0, 40eeb4 <__fxstatat@plt+0xc304>
  40eeac:	mov	w10, #0x3a                  	// #58
  40eeb0:	strb	w10, [x22, #-1]!
  40eeb4:	mov	w10, #0xcccd                	// #52429
  40eeb8:	movk	w10, #0xcccc, lsl #16
  40eebc:	umull	x10, w9, w10
  40eec0:	mov	w11, #0xa                   	// #10
  40eec4:	lsr	x20, x10, #35
  40eec8:	msub	w10, w20, w11, w9
  40eecc:	orr	w10, w10, #0x30
  40eed0:	asr	w24, w24, #1
  40eed4:	cmp	w9, #0x9
  40eed8:	strb	w10, [x22, #-1]!
  40eedc:	mov	w9, w20
  40eee0:	b.hi	40eea8 <__fxstatat@plt+0xc2f8>  // b.pmore
  40eee4:	mov	w9, w20
  40eee8:	cbnz	w24, 40eea8 <__fxstatat@plt+0xc2f8>
  40eeec:	cmp	w13, w26
  40eef0:	mov	w9, #0x2b                  	// #43
  40eef4:	csel	w11, w26, w13, lt  // lt = tstop
  40eef8:	cmp	w8, #0x0
  40eefc:	csel	w8, w9, wzr, ne  // ne = any
  40ef00:	ldr	x9, [sp, #136]
  40ef04:	mov	w10, #0x2d                  	// #45
  40ef08:	tst	w9, #0x1
  40ef0c:	csel	w23, w10, w8, ne  // ne = any
  40ef10:	cmp	w28, #0x2d
  40ef14:	b.ne	40efd0 <__fxstatat@plt+0xc420>  // b.any
  40ef18:	cbz	w23, 40f5c8 <__fxstatat@plt+0xca18>
  40ef1c:	bic	w8, w26, w26, asr #31
  40ef20:	cmp	w8, #0x1
  40ef24:	csinc	w19, w8, wzr, hi  // hi = pmore
  40ef28:	sub	x9, x1, x0
  40ef2c:	cmp	x9, x19
  40ef30:	b.ls	40f148 <__fxstatat@plt+0xc598>  // b.plast
  40ef34:	cbz	x18, 40ef94 <__fxstatat@plt+0xc3e4>
  40ef38:	cbnz	w11, 40ef90 <__fxstatat@plt+0xc3e0>
  40ef3c:	cmp	w8, #0x2
  40ef40:	b.cc	40ef90 <__fxstatat@plt+0xc3e0>  // b.lo, b.ul, b.last
  40ef44:	sxtw	x8, w26
  40ef48:	sub	x21, x8, #0x1
  40ef4c:	mov	w1, #0x20                  	// #32
  40ef50:	str	x0, [sp, #96]
  40ef54:	mov	x0, x18
  40ef58:	str	w2, [sp, #124]
  40ef5c:	mov	x2, x21
  40ef60:	str	x18, [sp, #72]
  40ef64:	str	x11, [sp, #24]
  40ef68:	bl	4027c0 <memset@plt>
  40ef6c:	ldr	x18, [sp, #72]
  40ef70:	ldr	x11, [sp, #24]
  40ef74:	ldr	w2, [sp, #124]
  40ef78:	ldr	x0, [sp, #96]
  40ef7c:	ldr	x1, [sp, #144]
  40ef80:	mov	w16, #0xcccc                	// #52428
  40ef84:	mov	w17, #0xa                   	// #10
  40ef88:	movk	w16, #0xccc, lsl #16
  40ef8c:	add	x18, x18, x21
  40ef90:	strb	w23, [x18], #1
  40ef94:	mov	w8, wzr
  40ef98:	add	x0, x0, x19
  40ef9c:	cbnz	wzr, 40f62c <__fxstatat@plt+0xca7c>
  40efa0:	b	40f5c8 <__fxstatat@plt+0xca18>
  40efa4:	ldr	x1, [sp, #144]
  40efa8:	mov	w16, #0xcccc                	// #52428
  40efac:	mov	x0, x22
  40efb0:	movk	w16, #0xccc, lsl #16
  40efb4:	mov	w17, #0xa                   	// #10
  40efb8:	mov	x18, x23
  40efbc:	b	40f314 <__fxstatat@plt+0xc764>
  40efc0:	mov	w8, #0x1                   	// #1
  40efc4:	mov	x18, x23
  40efc8:	cbnz	w8, 40f318 <__fxstatat@plt+0xc768>
  40efcc:	b	40f314 <__fxstatat@plt+0xc764>
  40efd0:	ldr	x9, [sp, #104]
  40efd4:	cmp	w23, #0x0
  40efd8:	cset	w10, ne  // ne = any
  40efdc:	sxtw	x8, w11
  40efe0:	sub	x9, x22, x9
  40efe4:	sub	x9, x9, x10
  40efe8:	add	x19, x9, x8
  40efec:	cmp	w19, #0x1
  40eff0:	b.lt	40f0f0 <__fxstatat@plt+0xc540>  // b.tstop
  40eff4:	cmp	w28, #0x5f
  40eff8:	b.ne	40f154 <__fxstatat@plt+0xc5a4>  // b.any
  40effc:	sxtw	x21, w19
  40f000:	sub	x8, x1, x0
  40f004:	cmp	x21, x8
  40f008:	b.cs	40f1b8 <__fxstatat@plt+0xc608>  // b.hs, b.nlast
  40f00c:	cbz	x18, 40f054 <__fxstatat@plt+0xc4a4>
  40f010:	mov	w1, #0x20                  	// #32
  40f014:	str	x0, [sp, #96]
  40f018:	mov	x0, x18
  40f01c:	str	w2, [sp, #124]
  40f020:	mov	x2, x21
  40f024:	str	x18, [sp, #72]
  40f028:	str	x11, [sp, #24]
  40f02c:	bl	4027c0 <memset@plt>
  40f030:	ldr	x18, [sp, #72]
  40f034:	ldr	x11, [sp, #24]
  40f038:	ldr	w2, [sp, #124]
  40f03c:	ldr	x0, [sp, #96]
  40f040:	ldr	x1, [sp, #144]
  40f044:	mov	w16, #0xcccc                	// #52428
  40f048:	mov	w17, #0xa                   	// #10
  40f04c:	movk	w16, #0xccc, lsl #16
  40f050:	add	x18, x18, x21
  40f054:	subs	w8, w26, w19
  40f058:	add	x0, x21, x0
  40f05c:	csel	w26, w8, wzr, gt
  40f060:	cbz	w23, 40f5c0 <__fxstatat@plt+0xca10>
  40f064:	cmp	w26, #0x1
  40f068:	csinc	w19, w26, wzr, hi  // hi = pmore
  40f06c:	sub	x8, x1, x0
  40f070:	cmp	x8, x19
  40f074:	b.ls	40f220 <__fxstatat@plt+0xc670>  // b.plast
  40f078:	cbz	x18, 40f0d8 <__fxstatat@plt+0xc528>
  40f07c:	cbnz	w11, 40f0d4 <__fxstatat@plt+0xc524>
  40f080:	cmp	w26, #0x2
  40f084:	b.cc	40f0d4 <__fxstatat@plt+0xc524>  // b.lo, b.ul, b.last
  40f088:	mov	w8, w26
  40f08c:	sub	x21, x8, #0x1
  40f090:	mov	w1, #0x20                  	// #32
  40f094:	str	x0, [sp, #96]
  40f098:	mov	x0, x18
  40f09c:	str	w2, [sp, #124]
  40f0a0:	mov	x2, x21
  40f0a4:	str	x18, [sp, #72]
  40f0a8:	str	x11, [sp, #24]
  40f0ac:	bl	4027c0 <memset@plt>
  40f0b0:	ldr	x18, [sp, #72]
  40f0b4:	ldr	x11, [sp, #24]
  40f0b8:	ldr	w2, [sp, #124]
  40f0bc:	ldr	x0, [sp, #96]
  40f0c0:	ldr	x1, [sp, #144]
  40f0c4:	mov	w16, #0xcccc                	// #52428
  40f0c8:	mov	w17, #0xa                   	// #10
  40f0cc:	movk	w16, #0xccc, lsl #16
  40f0d0:	add	x18, x18, x21
  40f0d4:	strb	w23, [x18], #1
  40f0d8:	mov	w8, wzr
  40f0dc:	add	x0, x0, x19
  40f0e0:	cbnz	wzr, 40f5c4 <__fxstatat@plt+0xca14>
  40f0e4:	b	40f5c0 <__fxstatat@plt+0xca10>
  40f0e8:	mov	x18, xzr
  40f0ec:	b	40f308 <__fxstatat@plt+0xc758>
  40f0f0:	cbz	w23, 40f5c0 <__fxstatat@plt+0xca10>
  40f0f4:	bic	w8, w26, w26, asr #31
  40f0f8:	cmp	w8, #0x1
  40f0fc:	csinc	w19, w8, wzr, hi  // hi = pmore
  40f100:	sub	x9, x1, x0
  40f104:	cmp	x9, x19
  40f108:	b.ls	40f220 <__fxstatat@plt+0xc670>  // b.plast
  40f10c:	cbz	x18, 40f4c0 <__fxstatat@plt+0xc910>
  40f110:	cbnz	w11, 40f4bc <__fxstatat@plt+0xc90c>
  40f114:	cmp	w8, #0x2
  40f118:	b.cc	40f4bc <__fxstatat@plt+0xc90c>  // b.lo, b.ul, b.last
  40f11c:	sxtw	x8, w26
  40f120:	cmp	w28, #0x30
  40f124:	sub	x8, x8, #0x1
  40f128:	str	w2, [sp, #124]
  40f12c:	str	x0, [sp, #96]
  40f130:	stp	x8, x11, [sp, #16]
  40f134:	b.eq	40f140 <__fxstatat@plt+0xc590>  // b.none
  40f138:	cmp	w28, #0x2b
  40f13c:	b.ne	40f488 <__fxstatat@plt+0xc8d8>  // b.any
  40f140:	mov	w1, #0x30                  	// #48
  40f144:	b	40f48c <__fxstatat@plt+0xc8dc>
  40f148:	mov	w8, #0x1                   	// #1
  40f14c:	cbnz	w8, 40f62c <__fxstatat@plt+0xca7c>
  40f150:	b	40f5c8 <__fxstatat@plt+0xca18>
  40f154:	sub	x9, x1, x0
  40f158:	cmp	x9, x8
  40f15c:	b.ls	40f1b8 <__fxstatat@plt+0xc608>  // b.plast
  40f160:	cbz	w23, 40f56c <__fxstatat@plt+0xc9bc>
  40f164:	bic	w8, w26, w26, asr #31
  40f168:	cmp	w8, #0x1
  40f16c:	csinc	w21, w8, wzr, hi  // hi = pmore
  40f170:	cmp	x9, x21
  40f174:	b.ls	40f34c <__fxstatat@plt+0xc79c>  // b.plast
  40f178:	cbz	x18, 40f560 <__fxstatat@plt+0xc9b0>
  40f17c:	cbnz	w11, 40f55c <__fxstatat@plt+0xc9ac>
  40f180:	cmp	w8, #0x2
  40f184:	b.cc	40f55c <__fxstatat@plt+0xc9ac>  // b.lo, b.ul, b.last
  40f188:	sxtw	x8, w26
  40f18c:	cmp	w28, #0x30
  40f190:	sub	x8, x8, #0x1
  40f194:	str	w2, [sp, #124]
  40f198:	str	x0, [sp, #96]
  40f19c:	str	x18, [sp, #72]
  40f1a0:	stp	x8, x11, [sp, #16]
  40f1a4:	b.eq	40f1b0 <__fxstatat@plt+0xc600>  // b.none
  40f1a8:	cmp	w28, #0x2b
  40f1ac:	b.ne	40f528 <__fxstatat@plt+0xc978>  // b.any
  40f1b0:	mov	w1, #0x30                  	// #48
  40f1b4:	b	40f52c <__fxstatat@plt+0xc97c>
  40f1b8:	mov	w8, #0x1                   	// #1
  40f1bc:	b	40f5c4 <__fxstatat@plt+0xca14>
  40f1c0:	mov	x28, x10
  40f1c4:	ldr	w8, [sp, #124]
  40f1c8:	b	40f1d0 <__fxstatat@plt+0xc620>
  40f1cc:	mov	x28, x10
  40f1d0:	ldr	w10, [sp, #96]
  40f1d4:	mov	x0, x9
  40f1d8:	tbnz	w10, #0, 40f2d8 <__fxstatat@plt+0xc728>
  40f1dc:	tbz	w8, #0, 40f1f4 <__fxstatat@plt+0xc644>
  40f1e0:	ldr	x1, [sp, #56]
  40f1e4:	mov	x2, x21
  40f1e8:	mov	x19, x9
  40f1ec:	bl	40f750 <__fxstatat@plt+0xcba0>
  40f1f0:	b	40f204 <__fxstatat@plt+0xc654>
  40f1f4:	ldr	x1, [sp, #56]
  40f1f8:	mov	x2, x21
  40f1fc:	mov	x19, x9
  40f200:	bl	4024e0 <memcpy@plt>
  40f204:	ldr	x1, [sp, #144]
  40f208:	mov	w16, #0xcccc                	// #52428
  40f20c:	mov	x18, x19
  40f210:	mov	x0, x22
  40f214:	movk	w16, #0xccc, lsl #16
  40f218:	mov	w17, #0xa                   	// #10
  40f21c:	b	40f300 <__fxstatat@plt+0xc750>
  40f220:	mov	w8, #0x1                   	// #1
  40f224:	cbnz	w8, 40f5c4 <__fxstatat@plt+0xca14>
  40f228:	b	40f5c0 <__fxstatat@plt+0xca10>
  40f22c:	mov	w8, #0x2493                	// #9363
  40f230:	movk	w8, #0x9249, lsl #16
  40f234:	smull	x8, w0, w8
  40f238:	lsr	x8, x8, #32
  40f23c:	add	w8, w8, w0
  40f240:	asr	w9, w8, #2
  40f244:	add	w8, w9, w8, lsr #31
  40f248:	add	w8, w8, #0x1
  40f24c:	mov	w13, #0x2                   	// #2
  40f250:	str	w8, [sp, #64]
  40f254:	mov	w8, #0x1                   	// #1
  40f258:	ldr	x0, [sp, #96]
  40f25c:	tbnz	w8, #0, 40eda8 <__fxstatat@plt+0xc1f8>
  40f260:	ldr	w8, [sp, #52]
  40f264:	cmp	w28, #0x0
  40f268:	csel	w28, w8, w28, eq  // eq = none
  40f26c:	cmp	w28, #0x2b
  40f270:	b.ne	40f2a0 <__fxstatat@plt+0xc6f0>  // b.any
  40f274:	cmp	w13, #0x2
  40f278:	mov	w8, #0x270f                	// #9999
  40f27c:	mov	w9, #0x63                  	// #99
  40f280:	csel	w8, w9, w8, eq  // eq = none
  40f284:	cmp	w8, w20
  40f288:	cset	w8, cc  // cc = lo, ul, last
  40f28c:	cmp	w13, w26
  40f290:	cset	w9, lt  // lt = tstop
  40f294:	mov	w24, wzr
  40f298:	orr	w8, w9, w8
  40f29c:	b	40edcc <__fxstatat@plt+0xc21c>
  40f2a0:	mov	w24, wzr
  40f2a4:	mov	w8, wzr
  40f2a8:	b	40edcc <__fxstatat@plt+0xc21c>
  40f2ac:	mov	x28, x10
  40f2b0:	mov	w1, #0x20                  	// #32
  40f2b4:	mov	x0, x9
  40f2b8:	mov	x2, x26
  40f2bc:	bl	4027c0 <memset@plt>
  40f2c0:	ldr	w8, [sp, #124]
  40f2c4:	ldr	w10, [sp, #96]
  40f2c8:	mov	x9, x23
  40f2cc:	add	x9, x23, x26
  40f2d0:	mov	x0, x9
  40f2d4:	tbz	w10, #0, 40f1dc <__fxstatat@plt+0xc62c>
  40f2d8:	ldr	x1, [sp, #56]
  40f2dc:	mov	x2, x21
  40f2e0:	mov	x19, x9
  40f2e4:	bl	40f6f8 <__fxstatat@plt+0xcb48>
  40f2e8:	ldr	x1, [sp, #144]
  40f2ec:	mov	w16, #0xcccc                	// #52428
  40f2f0:	mov	x18, x19
  40f2f4:	mov	w17, #0xa                   	// #10
  40f2f8:	movk	w16, #0xccc, lsl #16
  40f2fc:	mov	x0, x22
  40f300:	mov	x10, x28
  40f304:	add	x18, x18, x21
  40f308:	mov	w8, wzr
  40f30c:	add	x0, x10, x0
  40f310:	cbnz	w8, 40f318 <__fxstatat@plt+0xc768>
  40f314:	mov	w8, wzr
  40f318:	cbnz	w8, 40f62c <__fxstatat@plt+0xca7c>
  40f31c:	b	40f628 <__fxstatat@plt+0xca78>
  40f320:	mov	w10, #0xfffff894            	// #-1900
  40f324:	sub	w9, w10, w9
  40f328:	add	w11, w20, #0x64
  40f32c:	cmp	w19, w9
  40f330:	mov	w8, wzr
  40f334:	str	xzr, [sp, #136]
  40f338:	csneg	w20, w11, w20, ge  // ge = tcont
  40f33c:	mov	w13, #0x2                   	// #2
  40f340:	ldr	x0, [sp, #96]
  40f344:	tbnz	w8, #0, 40eda8 <__fxstatat@plt+0xc1f8>
  40f348:	b	40f260 <__fxstatat@plt+0xc6b0>
  40f34c:	mov	w8, #0x1                   	// #1
  40f350:	b	40f568 <__fxstatat@plt+0xc9b8>
  40f354:	cbz	w8, 40f4d0 <__fxstatat@plt+0xc920>
  40f358:	mov	w9, #0x64                  	// #100
  40f35c:	mov	w13, #0x6                   	// #6
  40f360:	mov	w24, #0x4                   	// #4
  40f364:	madd	w20, w20, w9, w8
  40f368:	mov	w8, #0x21                  	// #33
  40f36c:	cmp	w8, #0xe
  40f370:	b.eq	40e924 <__fxstatat@plt+0xbd74>  // b.none
  40f374:	cmp	w8, #0x21
  40f378:	b.ne	40f62c <__fxstatat@plt+0xca7c>  // b.any
  40f37c:	mov	w8, #0x1                   	// #1
  40f380:	b	40edcc <__fxstatat@plt+0xc21c>
  40f384:	mov	w1, #0x20                  	// #32
  40f388:	mov	x0, x19
  40f38c:	mov	x2, x26
  40f390:	bl	4027c0 <memset@plt>
  40f394:	ldr	w9, [sp, #124]
  40f398:	ldr	x11, [sp, #96]
  40f39c:	add	x19, x19, x26
  40f3a0:	tbz	w23, #0, 40f3bc <__fxstatat@plt+0xc80c>
  40f3a4:	ldr	x1, [sp, #40]
  40f3a8:	mov	x0, x19
  40f3ac:	mov	x2, x21
  40f3b0:	mov	x23, x11
  40f3b4:	bl	40f6f8 <__fxstatat@plt+0xcb48>
  40f3b8:	b	40f3f0 <__fxstatat@plt+0xc840>
  40f3bc:	eor	w8, w23, #0x1
  40f3c0:	mov	x0, x19
  40f3c4:	and	w8, w9, w8
  40f3c8:	tbz	w8, #0, 40f3e0 <__fxstatat@plt+0xc830>
  40f3cc:	ldr	x1, [sp, #40]
  40f3d0:	mov	x2, x21
  40f3d4:	mov	x23, x11
  40f3d8:	bl	40f750 <__fxstatat@plt+0xcba0>
  40f3dc:	b	40f3f0 <__fxstatat@plt+0xc840>
  40f3e0:	ldr	x1, [sp, #40]
  40f3e4:	mov	x2, x21
  40f3e8:	mov	x23, x11
  40f3ec:	bl	4024e0 <memcpy@plt>
  40f3f0:	ldr	x1, [sp, #144]
  40f3f4:	mov	x18, x19
  40f3f8:	mov	w16, #0xcccc                	// #52428
  40f3fc:	mov	x11, x23
  40f400:	mov	x0, x22
  40f404:	movk	w16, #0xccc, lsl #16
  40f408:	mov	w17, #0xa                   	// #10
  40f40c:	add	x18, x19, x21
  40f410:	mov	w8, wzr
  40f414:	add	x0, x11, x0
  40f418:	cbnz	wzr, 40f62c <__fxstatat@plt+0xca7c>
  40f41c:	b	40f628 <__fxstatat@plt+0xca78>
  40f420:	mov	w1, #0x20                  	// #32
  40f424:	mov	x0, x18
  40f428:	mov	x2, x21
  40f42c:	mov	x23, x18
  40f430:	bl	4027c0 <memset@plt>
  40f434:	ldr	x1, [sp, #144]
  40f438:	mov	w16, #0xcccc                	// #52428
  40f43c:	add	x18, x23, x21
  40f440:	mov	x0, x22
  40f444:	movk	w16, #0xccc, lsl #16
  40f448:	mov	w17, #0xa                   	// #10
  40f44c:	mov	w8, #0xa                   	// #10
  40f450:	b	40f514 <__fxstatat@plt+0xc964>
  40f454:	mov	w1, #0x20                  	// #32
  40f458:	mov	x0, x18
  40f45c:	mov	x2, x21
  40f460:	mov	x23, x18
  40f464:	bl	4027c0 <memset@plt>
  40f468:	ldr	x1, [sp, #144]
  40f46c:	mov	w16, #0xcccc                	// #52428
  40f470:	add	x18, x23, x21
  40f474:	mov	x0, x22
  40f478:	movk	w16, #0xccc, lsl #16
  40f47c:	mov	w17, #0xa                   	// #10
  40f480:	mov	w8, #0x9                   	// #9
  40f484:	b	40f514 <__fxstatat@plt+0xc964>
  40f488:	mov	w1, #0x20                  	// #32
  40f48c:	mov	x0, x18
  40f490:	mov	x2, x8
  40f494:	mov	x21, x18
  40f498:	bl	4027c0 <memset@plt>
  40f49c:	ldp	x8, x11, [sp, #16]
  40f4a0:	ldr	x1, [sp, #144]
  40f4a4:	ldr	x0, [sp, #96]
  40f4a8:	ldr	w2, [sp, #124]
  40f4ac:	mov	w16, #0xcccc                	// #52428
  40f4b0:	add	x18, x21, x8
  40f4b4:	movk	w16, #0xccc, lsl #16
  40f4b8:	mov	w17, #0xa                   	// #10
  40f4bc:	strb	w23, [x18], #1
  40f4c0:	mov	w8, wzr
  40f4c4:	add	x0, x0, x19
  40f4c8:	cbnz	w8, 40f5c4 <__fxstatat@plt+0xca14>
  40f4cc:	b	40f5c0 <__fxstatat@plt+0xca10>
  40f4d0:	mov	w24, wzr
  40f4d4:	mov	w13, #0x3                   	// #3
  40f4d8:	b	40f368 <__fxstatat@plt+0xc7b8>
  40f4dc:	mov	w1, #0x20                  	// #32
  40f4e0:	mov	x22, x0
  40f4e4:	mov	x0, x18
  40f4e8:	mov	x2, x21
  40f4ec:	mov	x23, x18
  40f4f0:	bl	4027c0 <memset@plt>
  40f4f4:	ldr	x1, [sp, #144]
  40f4f8:	mov	x18, x23
  40f4fc:	mov	w16, #0xcccc                	// #52428
  40f500:	mov	w17, #0xa                   	// #10
  40f504:	movk	w16, #0xccc, lsl #16
  40f508:	mov	x0, x22
  40f50c:	add	x18, x23, x21
  40f510:	ldrb	w8, [x25]
  40f514:	strb	w8, [x18], #1
  40f518:	mov	w8, wzr
  40f51c:	add	x0, x0, x19
  40f520:	cbnz	wzr, 40f62c <__fxstatat@plt+0xca7c>
  40f524:	b	40f628 <__fxstatat@plt+0xca78>
  40f528:	mov	w1, #0x20                  	// #32
  40f52c:	mov	x0, x18
  40f530:	mov	x2, x8
  40f534:	bl	4027c0 <memset@plt>
  40f538:	ldr	x18, [sp, #72]
  40f53c:	ldp	x8, x11, [sp, #16]
  40f540:	ldr	x1, [sp, #144]
  40f544:	ldr	x0, [sp, #96]
  40f548:	ldr	w2, [sp, #124]
  40f54c:	mov	w16, #0xcccc                	// #52428
  40f550:	add	x18, x18, x8
  40f554:	movk	w16, #0xccc, lsl #16
  40f558:	mov	w17, #0xa                   	// #10
  40f55c:	strb	w23, [x18], #1
  40f560:	mov	w8, wzr
  40f564:	add	x0, x0, x21
  40f568:	cbnz	w8, 40f5c4 <__fxstatat@plt+0xca14>
  40f56c:	cbz	x18, 40f5b8 <__fxstatat@plt+0xca08>
  40f570:	sxtw	x21, w19
  40f574:	mov	w1, #0x30                  	// #48
  40f578:	str	x0, [sp, #96]
  40f57c:	mov	x0, x18
  40f580:	str	w2, [sp, #124]
  40f584:	mov	x2, x21
  40f588:	mov	x26, x18
  40f58c:	mov	x23, x11
  40f590:	bl	4027c0 <memset@plt>
  40f594:	ldr	w2, [sp, #124]
  40f598:	ldr	x0, [sp, #96]
  40f59c:	ldr	x1, [sp, #144]
  40f5a0:	mov	x18, x26
  40f5a4:	mov	w16, #0xcccc                	// #52428
  40f5a8:	mov	x11, x23
  40f5ac:	mov	w17, #0xa                   	// #10
  40f5b0:	movk	w16, #0xccc, lsl #16
  40f5b4:	add	x18, x26, x21
  40f5b8:	mov	w26, wzr
  40f5bc:	add	x0, x0, w19, sxtw
  40f5c0:	mov	w8, wzr
  40f5c4:	cbnz	w8, 40f62c <__fxstatat@plt+0xca7c>
  40f5c8:	ldr	x8, [sp, #104]
  40f5cc:	sub	x9, x1, x0
  40f5d0:	sub	x21, x8, x22
  40f5d4:	bic	w8, w26, w26, asr #31
  40f5d8:	cmp	x21, x8
  40f5dc:	csel	x19, x8, x21, cc  // cc = lo, ul, last
  40f5e0:	cmp	x19, x9
  40f5e4:	b.cs	40f620 <__fxstatat@plt+0xca70>  // b.hs, b.nlast
  40f5e8:	cbz	x18, 40f6b0 <__fxstatat@plt+0xcb00>
  40f5ec:	cbnz	w11, 40f668 <__fxstatat@plt+0xcab8>
  40f5f0:	cmp	x21, x8
  40f5f4:	b.cs	40f668 <__fxstatat@plt+0xcab8>  // b.hs, b.nlast
  40f5f8:	sxtw	x8, w26
  40f5fc:	cmp	w28, #0x30
  40f600:	sub	x23, x8, x21
  40f604:	str	w2, [sp, #124]
  40f608:	str	x0, [sp, #96]
  40f60c:	b.eq	40f618 <__fxstatat@plt+0xca68>  // b.none
  40f610:	cmp	w28, #0x2b
  40f614:	b.ne	40f648 <__fxstatat@plt+0xca98>  // b.any
  40f618:	mov	w1, #0x30                  	// #48
  40f61c:	b	40f64c <__fxstatat@plt+0xca9c>
  40f620:	mov	w8, #0x1                   	// #1
  40f624:	cbnz	w8, 40f62c <__fxstatat@plt+0xca7c>
  40f628:	mov	w8, wzr
  40f62c:	orr	w8, w8, #0x4
  40f630:	cmp	w8, #0x4
  40f634:	b.ne	40f6d4 <__fxstatat@plt+0xcb24>  // b.any
  40f638:	ldrb	w8, [x25, #1]!
  40f63c:	mov	w26, #0xffffffff            	// #-1
  40f640:	cbnz	w8, 40e078 <__fxstatat@plt+0xb4c8>
  40f644:	b	40f6c4 <__fxstatat@plt+0xcb14>
  40f648:	mov	w1, #0x20                  	// #32
  40f64c:	mov	x0, x18
  40f650:	mov	x2, x23
  40f654:	mov	x26, x18
  40f658:	bl	4027c0 <memset@plt>
  40f65c:	ldr	x0, [sp, #96]
  40f660:	ldr	w2, [sp, #124]
  40f664:	add	x18, x26, x23
  40f668:	mov	x23, x0
  40f66c:	mov	x0, x18
  40f670:	mov	x1, x22
  40f674:	tbz	w2, #0, 40f688 <__fxstatat@plt+0xcad8>
  40f678:	mov	x2, x21
  40f67c:	mov	x22, x18
  40f680:	bl	40f750 <__fxstatat@plt+0xcba0>
  40f684:	b	40f694 <__fxstatat@plt+0xcae4>
  40f688:	mov	x2, x21
  40f68c:	mov	x22, x18
  40f690:	bl	4024e0 <memcpy@plt>
  40f694:	ldr	x1, [sp, #144]
  40f698:	mov	x18, x22
  40f69c:	mov	w16, #0xcccc                	// #52428
  40f6a0:	mov	w17, #0xa                   	// #10
  40f6a4:	movk	w16, #0xccc, lsl #16
  40f6a8:	mov	x0, x23
  40f6ac:	add	x18, x22, x21
  40f6b0:	mov	w8, wzr
  40f6b4:	add	x0, x19, x0
  40f6b8:	cbnz	wzr, 40f62c <__fxstatat@plt+0xca7c>
  40f6bc:	b	40f628 <__fxstatat@plt+0xca78>
  40f6c0:	mov	x0, xzr
  40f6c4:	cbz	x1, 40f6d8 <__fxstatat@plt+0xcb28>
  40f6c8:	cbz	x18, 40f6d8 <__fxstatat@plt+0xcb28>
  40f6cc:	strb	wzr, [x18]
  40f6d0:	b	40f6d8 <__fxstatat@plt+0xcb28>
  40f6d4:	mov	x0, xzr
  40f6d8:	add	sp, sp, #0x4d0
  40f6dc:	ldp	x20, x19, [sp, #80]
  40f6e0:	ldp	x22, x21, [sp, #64]
  40f6e4:	ldp	x24, x23, [sp, #48]
  40f6e8:	ldp	x26, x25, [sp, #32]
  40f6ec:	ldp	x28, x27, [sp, #16]
  40f6f0:	ldp	x29, x30, [sp], #96
  40f6f4:	ret
  40f6f8:	stp	x29, x30, [sp, #-48]!
  40f6fc:	str	x21, [sp, #16]
  40f700:	stp	x20, x19, [sp, #32]
  40f704:	mov	x29, sp
  40f708:	cbz	x2, 40f740 <__fxstatat@plt+0xcb90>
  40f70c:	mov	x19, x2
  40f710:	mov	x20, x1
  40f714:	mov	x21, x0
  40f718:	bl	402690 <__ctype_tolower_loc@plt>
  40f71c:	sub	x8, x21, #0x1
  40f720:	sub	x9, x20, #0x1
  40f724:	ldr	x10, [x0]
  40f728:	ldrb	w11, [x9, x19]
  40f72c:	ldr	w10, [x10, x11, lsl #2]
  40f730:	subs	x11, x19, #0x1
  40f734:	strb	w10, [x8, x19]
  40f738:	mov	x19, x11
  40f73c:	b.ne	40f724 <__fxstatat@plt+0xcb74>  // b.any
  40f740:	ldp	x20, x19, [sp, #32]
  40f744:	ldr	x21, [sp, #16]
  40f748:	ldp	x29, x30, [sp], #48
  40f74c:	ret
  40f750:	stp	x29, x30, [sp, #-48]!
  40f754:	str	x21, [sp, #16]
  40f758:	stp	x20, x19, [sp, #32]
  40f75c:	mov	x29, sp
  40f760:	cbz	x2, 40f798 <__fxstatat@plt+0xcbe8>
  40f764:	mov	x19, x2
  40f768:	mov	x20, x1
  40f76c:	mov	x21, x0
  40f770:	bl	402840 <__ctype_toupper_loc@plt>
  40f774:	sub	x8, x21, #0x1
  40f778:	sub	x9, x20, #0x1
  40f77c:	ldr	x10, [x0]
  40f780:	ldrb	w11, [x9, x19]
  40f784:	ldr	w10, [x10, x11, lsl #2]
  40f788:	subs	x11, x19, #0x1
  40f78c:	strb	w10, [x8, x19]
  40f790:	mov	x19, x11
  40f794:	b.ne	40f77c <__fxstatat@plt+0xcbcc>  // b.any
  40f798:	ldp	x20, x19, [sp, #32]
  40f79c:	ldr	x21, [sp, #16]
  40f7a0:	ldp	x29, x30, [sp], #48
  40f7a4:	ret
  40f7a8:	sub	w8, w0, w1
  40f7ac:	mov	w9, #0x2493                	// #9363
  40f7b0:	add	w8, w8, #0x17e
  40f7b4:	movk	w9, #0x9249, lsl #16
  40f7b8:	smull	x9, w8, w9
  40f7bc:	lsr	x9, x9, #32
  40f7c0:	add	w9, w9, w8
  40f7c4:	asr	w10, w9, #2
  40f7c8:	add	w9, w10, w9, lsr #31
  40f7cc:	lsl	w10, w9, #3
  40f7d0:	sub	w9, w10, w9
  40f7d4:	sub	w8, w9, w8
  40f7d8:	add	w8, w0, w8
  40f7dc:	add	w0, w8, #0x3
  40f7e0:	ret
  40f7e4:	stp	x29, x30, [sp, #-32]!
  40f7e8:	stp	x20, x19, [sp, #16]
  40f7ec:	mov	x29, sp
  40f7f0:	cbz	x0, 40f870 <__fxstatat@plt+0xccc0>
  40f7f4:	mov	w1, #0x2f                  	// #47
  40f7f8:	mov	x19, x0
  40f7fc:	bl	402870 <strrchr@plt>
  40f800:	cmp	x0, #0x0
  40f804:	csinc	x20, x19, x0, eq  // eq = none
  40f808:	sub	x8, x20, x19
  40f80c:	cmp	x8, #0x7
  40f810:	b.lt	40f854 <__fxstatat@plt+0xcca4>  // b.tstop
  40f814:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  40f818:	sub	x0, x20, #0x7
  40f81c:	add	x1, x1, #0x547
  40f820:	mov	w2, #0x7                   	// #7
  40f824:	bl	402780 <strncmp@plt>
  40f828:	cbnz	w0, 40f854 <__fxstatat@plt+0xcca4>
  40f82c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  40f830:	add	x1, x1, #0x54f
  40f834:	mov	w2, #0x3                   	// #3
  40f838:	mov	x0, x20
  40f83c:	bl	402780 <strncmp@plt>
  40f840:	mov	x19, x20
  40f844:	cbnz	w0, 40f854 <__fxstatat@plt+0xcca4>
  40f848:	add	x19, x20, #0x3
  40f84c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40f850:	str	x19, [x8, #1488]
  40f854:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40f858:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40f85c:	str	x19, [x8, #1888]
  40f860:	str	x19, [x9, #1448]
  40f864:	ldp	x20, x19, [sp, #16]
  40f868:	ldp	x29, x30, [sp], #32
  40f86c:	ret
  40f870:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  40f874:	ldr	x3, [x8, #1456]
  40f878:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x64b8>
  40f87c:	add	x0, x0, #0x50f
  40f880:	mov	w1, #0x37                  	// #55
  40f884:	mov	w2, #0x1                   	// #1
  40f888:	bl	4029d0 <fwrite@plt>
  40f88c:	bl	4028c0 <abort@plt>
  40f890:	stp	x29, x30, [sp, #-48]!
  40f894:	str	x21, [sp, #16]
  40f898:	stp	x20, x19, [sp, #32]
  40f89c:	mov	x29, sp
  40f8a0:	mov	x19, x0
  40f8a4:	bl	402b40 <__errno_location@plt>
  40f8a8:	ldr	w21, [x0]
  40f8ac:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40f8b0:	add	x8, x8, #0x768
  40f8b4:	cmp	x19, #0x0
  40f8b8:	mov	x20, x0
  40f8bc:	csel	x0, x8, x19, eq  // eq = none
  40f8c0:	mov	w1, #0x38                  	// #56
  40f8c4:	bl	411cd8 <__fxstatat@plt+0xf128>
  40f8c8:	str	w21, [x20]
  40f8cc:	ldp	x20, x19, [sp, #32]
  40f8d0:	ldr	x21, [sp, #16]
  40f8d4:	ldp	x29, x30, [sp], #48
  40f8d8:	ret
  40f8dc:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40f8e0:	add	x8, x8, #0x768
  40f8e4:	cmp	x0, #0x0
  40f8e8:	csel	x8, x8, x0, eq  // eq = none
  40f8ec:	ldr	w0, [x8]
  40f8f0:	ret
  40f8f4:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40f8f8:	add	x8, x8, #0x768
  40f8fc:	cmp	x0, #0x0
  40f900:	csel	x8, x8, x0, eq  // eq = none
  40f904:	str	w1, [x8]
  40f908:	ret
  40f90c:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40f910:	add	x8, x8, #0x768
  40f914:	cmp	x0, #0x0
  40f918:	ubfx	w9, w1, #5, #3
  40f91c:	csel	x8, x8, x0, eq  // eq = none
  40f920:	add	x8, x8, w9, uxtw #2
  40f924:	ldr	w9, [x8, #8]
  40f928:	lsr	w10, w9, w1
  40f92c:	and	w0, w10, #0x1
  40f930:	and	w10, w2, #0x1
  40f934:	eor	w10, w0, w10
  40f938:	lsl	w10, w10, w1
  40f93c:	eor	w9, w10, w9
  40f940:	str	w9, [x8, #8]
  40f944:	ret
  40f948:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40f94c:	add	x8, x8, #0x768
  40f950:	cmp	x0, #0x0
  40f954:	csel	x8, x8, x0, eq  // eq = none
  40f958:	ldr	w0, [x8, #4]
  40f95c:	str	w1, [x8, #4]
  40f960:	ret
  40f964:	stp	x29, x30, [sp, #-16]!
  40f968:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40f96c:	add	x8, x8, #0x768
  40f970:	cmp	x0, #0x0
  40f974:	csel	x8, x8, x0, eq  // eq = none
  40f978:	mov	w9, #0xa                   	// #10
  40f97c:	mov	x29, sp
  40f980:	str	w9, [x8]
  40f984:	cbz	x1, 40f998 <__fxstatat@plt+0xcde8>
  40f988:	cbz	x2, 40f998 <__fxstatat@plt+0xcde8>
  40f98c:	stp	x1, x2, [x8, #40]
  40f990:	ldp	x29, x30, [sp], #16
  40f994:	ret
  40f998:	bl	4028c0 <abort@plt>
  40f99c:	sub	sp, sp, #0x60
  40f9a0:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  40f9a4:	add	x8, x8, #0x768
  40f9a8:	cmp	x4, #0x0
  40f9ac:	stp	x29, x30, [sp, #16]
  40f9b0:	str	x25, [sp, #32]
  40f9b4:	stp	x24, x23, [sp, #48]
  40f9b8:	stp	x22, x21, [sp, #64]
  40f9bc:	stp	x20, x19, [sp, #80]
  40f9c0:	add	x29, sp, #0x10
  40f9c4:	mov	x19, x3
  40f9c8:	mov	x20, x2
  40f9cc:	mov	x21, x1
  40f9d0:	mov	x22, x0
  40f9d4:	csel	x24, x8, x4, eq  // eq = none
  40f9d8:	bl	402b40 <__errno_location@plt>
  40f9dc:	ldp	w4, w5, [x24]
  40f9e0:	ldp	x7, x8, [x24, #40]
  40f9e4:	ldr	w25, [x0]
  40f9e8:	mov	x23, x0
  40f9ec:	add	x6, x24, #0x8
  40f9f0:	mov	x0, x22
  40f9f4:	mov	x1, x21
  40f9f8:	mov	x2, x20
  40f9fc:	mov	x3, x19
  40fa00:	str	x8, [sp]
  40fa04:	bl	40fa28 <__fxstatat@plt+0xce78>
  40fa08:	str	w25, [x23]
  40fa0c:	ldp	x20, x19, [sp, #80]
  40fa10:	ldp	x22, x21, [sp, #64]
  40fa14:	ldp	x24, x23, [sp, #48]
  40fa18:	ldr	x25, [sp, #32]
  40fa1c:	ldp	x29, x30, [sp, #16]
  40fa20:	add	sp, sp, #0x60
  40fa24:	ret
  40fa28:	sub	sp, sp, #0x120
  40fa2c:	stp	x29, x30, [sp, #192]
  40fa30:	add	x29, sp, #0xc0
  40fa34:	ldr	x8, [x29, #96]
  40fa38:	stp	x28, x27, [sp, #208]
  40fa3c:	stp	x26, x25, [sp, #224]
  40fa40:	stp	x24, x23, [sp, #240]
  40fa44:	stp	x22, x21, [sp, #256]
  40fa48:	stp	x20, x19, [sp, #272]
  40fa4c:	str	x7, [sp, #80]
  40fa50:	stur	x6, [x29, #-48]
  40fa54:	mov	w19, w5
  40fa58:	mov	w20, w4
  40fa5c:	mov	x23, x3
  40fa60:	mov	x21, x2
  40fa64:	mov	x27, x1
  40fa68:	str	x8, [sp, #96]
  40fa6c:	mov	x24, x0
  40fa70:	bl	4029a0 <__ctype_get_mb_cur_max@plt>
  40fa74:	mov	w1, w20
  40fa78:	mov	x22, xzr
  40fa7c:	mov	w8, wzr
  40fa80:	mov	w28, wzr
  40fa84:	str	w19, [sp, #64]
  40fa88:	ubfx	w19, w19, #1, #1
  40fa8c:	add	x9, x21, #0x1
  40fa90:	mov	w15, #0x1                   	// #1
  40fa94:	str	x0, [sp, #56]
  40fa98:	stur	xzr, [x29, #-80]
  40fa9c:	stur	xzr, [x29, #-56]
  40faa0:	str	wzr, [sp, #88]
  40faa4:	stur	x9, [x29, #-72]
  40faa8:	cmp	w1, #0xa
  40faac:	b.hi	410680 <__fxstatat@plt+0xdad0>  // b.pmore
  40fab0:	adrp	x12, 419000 <_obstack_memory_used@@Base+0x64b8>
  40fab4:	mov	w9, w1
  40fab8:	add	x12, x12, #0x558
  40fabc:	adr	x10, 40fae0 <__fxstatat@plt+0xcf30>
  40fac0:	ldrb	w11, [x12, x9]
  40fac4:	add	x10, x10, x11, lsl #2
  40fac8:	mov	x26, x27
  40facc:	mov	x20, xzr
  40fad0:	mov	w16, wzr
  40fad4:	mov	w9, #0x1                   	// #1
  40fad8:	mov	w27, w28
  40fadc:	br	x10
  40fae0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x64b8>
  40fae4:	add	x0, x0, #0x6ae
  40fae8:	mov	w20, w1
  40faec:	mov	w22, w15
  40faf0:	bl	410d98 <__fxstatat@plt+0xe1e8>
  40faf4:	str	x0, [sp, #80]
  40faf8:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x64b8>
  40fafc:	add	x0, x0, #0xac0
  40fb00:	mov	w1, w20
  40fb04:	bl	410d98 <__fxstatat@plt+0xe1e8>
  40fb08:	mov	w15, w22
  40fb0c:	mov	w1, w20
  40fb10:	str	x0, [sp, #96]
  40fb14:	stur	w1, [x29, #-28]
  40fb18:	tbnz	w19, #0, 40fb58 <__fxstatat@plt+0xcfa8>
  40fb1c:	ldr	x8, [sp, #80]
  40fb20:	ldrb	w9, [x8]
  40fb24:	cbz	w9, 40fb58 <__fxstatat@plt+0xcfa8>
  40fb28:	mov	w27, w15
  40fb2c:	mov	x10, xzr
  40fb30:	add	x8, x8, #0x1
  40fb34:	b	40fb48 <__fxstatat@plt+0xcf98>
  40fb38:	ldrb	w9, [x8, x10]
  40fb3c:	add	x20, x10, #0x1
  40fb40:	mov	x10, x20
  40fb44:	cbz	w9, 40fb60 <__fxstatat@plt+0xcfb0>
  40fb48:	cmp	x10, x26
  40fb4c:	b.cs	40fb38 <__fxstatat@plt+0xcf88>  // b.hs, b.nlast
  40fb50:	strb	w9, [x24, x10]
  40fb54:	b	40fb38 <__fxstatat@plt+0xcf88>
  40fb58:	mov	w27, w15
  40fb5c:	mov	x20, xzr
  40fb60:	ldr	x25, [sp, #96]
  40fb64:	mov	x0, x25
  40fb68:	bl	402550 <strlen@plt>
  40fb6c:	ldur	w1, [x29, #-28]
  40fb70:	mov	x22, x0
  40fb74:	stur	x25, [x29, #-56]
  40fb78:	mov	w9, #0x1                   	// #1
  40fb7c:	mov	w16, w19
  40fb80:	mov	w15, w27
  40fb84:	mov	w27, w28
  40fb88:	b	40fc34 <__fxstatat@plt+0xd084>
  40fb8c:	mov	w19, #0x1                   	// #1
  40fb90:	mov	w1, #0x5                   	// #5
  40fb94:	tbz	w19, #0, 40fbc0 <__fxstatat@plt+0xd010>
  40fb98:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x64b8>
  40fb9c:	mov	x20, xzr
  40fba0:	mov	w22, #0x1                   	// #1
  40fba4:	add	x8, x8, #0x6ac
  40fba8:	stur	x8, [x29, #-56]
  40fbac:	b	40fbe0 <__fxstatat@plt+0xd030>
  40fbb0:	mov	x20, xzr
  40fbb4:	mov	w16, wzr
  40fbb8:	mov	w9, w8
  40fbbc:	b	40fc34 <__fxstatat@plt+0xd084>
  40fbc0:	cbz	x26, 40fbcc <__fxstatat@plt+0xd01c>
  40fbc4:	mov	w8, #0x22                  	// #34
  40fbc8:	strb	w8, [x24]
  40fbcc:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x64b8>
  40fbd0:	add	x8, x8, #0x6ac
  40fbd4:	mov	w20, #0x1                   	// #1
  40fbd8:	stur	x8, [x29, #-56]
  40fbdc:	mov	w22, #0x1                   	// #1
  40fbe0:	mov	w9, #0x1                   	// #1
  40fbe4:	b	40fc30 <__fxstatat@plt+0xd080>
  40fbe8:	mov	w8, #0x1                   	// #1
  40fbec:	mov	w19, #0x1                   	// #1
  40fbf0:	eor	w9, w19, #0x1
  40fbf4:	orr	w8, w8, w9
  40fbf8:	tbz	w19, #0, 40fc08 <__fxstatat@plt+0xd058>
  40fbfc:	mov	x20, xzr
  40fc00:	mov	w1, #0x2                   	// #2
  40fc04:	b	40fc1c <__fxstatat@plt+0xd06c>
  40fc08:	cbz	x26, 40fc14 <__fxstatat@plt+0xd064>
  40fc0c:	mov	w9, #0x27                  	// #39
  40fc10:	strb	w9, [x24]
  40fc14:	mov	w1, #0x2                   	// #2
  40fc18:	mov	w20, #0x1                   	// #1
  40fc1c:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x64b8>
  40fc20:	add	x9, x9, #0xac0
  40fc24:	stur	x9, [x29, #-56]
  40fc28:	mov	w22, #0x1                   	// #1
  40fc2c:	mov	w9, w8
  40fc30:	mov	w16, w19
  40fc34:	ldur	x8, [x29, #-48]
  40fc38:	mov	w14, w9
  40fc3c:	eor	w17, w16, #0x1
  40fc40:	stur	w17, [x29, #-60]
  40fc44:	cmp	x8, #0x0
  40fc48:	cset	w8, eq  // eq = none
  40fc4c:	cmp	x22, #0x0
  40fc50:	cset	w9, ne  // ne = any
  40fc54:	cmp	w1, #0x2
  40fc58:	cset	w10, ne  // ne = any
  40fc5c:	and	w13, w10, w14
  40fc60:	and	w11, w9, w16
  40fc64:	orr	w10, w10, w17
  40fc68:	and	w17, w9, w13
  40fc6c:	orr	w9, w13, w16
  40fc70:	eor	w9, w9, #0x1
  40fc74:	cset	w12, eq  // eq = none
  40fc78:	orr	w8, w8, w9
  40fc7c:	mov	x25, xzr
  40fc80:	and	w11, w14, w11
  40fc84:	stur	w10, [x29, #-84]
  40fc88:	and	w10, w12, w16
  40fc8c:	stur	w8, [x29, #-24]
  40fc90:	eor	w8, w14, #0x1
  40fc94:	str	w11, [sp, #72]
  40fc98:	str	w10, [sp, #92]
  40fc9c:	stur	w14, [x29, #-64]
  40fca0:	str	w8, [sp, #76]
  40fca4:	stp	w16, w1, [x29, #-32]
  40fca8:	stur	w17, [x29, #-36]
  40fcac:	b	40fcb4 <__fxstatat@plt+0xd104>
  40fcb0:	add	x25, x25, #0x1
  40fcb4:	cmn	x23, #0x1
  40fcb8:	b.eq	40fccc <__fxstatat@plt+0xd11c>  // b.none
  40fcbc:	cmp	x25, x23
  40fcc0:	cset	w8, eq  // eq = none
  40fcc4:	tbz	w8, #0, 40fcdc <__fxstatat@plt+0xd12c>
  40fcc8:	b	410530 <__fxstatat@plt+0xd980>
  40fccc:	ldrb	w8, [x21, x25]
  40fcd0:	cmp	w8, #0x0
  40fcd4:	cset	w8, eq  // eq = none
  40fcd8:	tbnz	w8, #0, 410530 <__fxstatat@plt+0xd980>
  40fcdc:	cbz	w17, 40fd18 <__fxstatat@plt+0xd168>
  40fce0:	cmp	x22, #0x2
  40fce4:	add	x19, x25, x22
  40fce8:	b.cc	40fd10 <__fxstatat@plt+0xd160>  // b.lo, b.ul, b.last
  40fcec:	cmn	x23, #0x1
  40fcf0:	b.ne	40fd10 <__fxstatat@plt+0xd160>  // b.any
  40fcf4:	mov	x0, x21
  40fcf8:	mov	w23, w15
  40fcfc:	bl	402550 <strlen@plt>
  40fd00:	ldp	w17, w16, [x29, #-36]
  40fd04:	ldur	w1, [x29, #-28]
  40fd08:	mov	w15, w23
  40fd0c:	mov	x23, x0
  40fd10:	cmp	x19, x23
  40fd14:	b.ls	40fe54 <__fxstatat@plt+0xd2a4>  // b.plast
  40fd18:	mov	w28, wzr
  40fd1c:	ldrb	w19, [x21, x25]
  40fd20:	cmp	w19, #0x7e
  40fd24:	b.hi	40ff88 <__fxstatat@plt+0xd3d8>  // b.pmore
  40fd28:	adrp	x14, 419000 <_obstack_memory_used@@Base+0x64b8>
  40fd2c:	add	x14, x14, #0x563
  40fd30:	adr	x13, 40fd54 <__fxstatat@plt+0xd1a4>
  40fd34:	ldrb	w10, [x14, x19]
  40fd38:	add	x13, x13, x10, lsl #2
  40fd3c:	mov	w11, wzr
  40fd40:	mov	w9, wzr
  40fd44:	mov	w8, #0x1                   	// #1
  40fd48:	mov	w12, #0x6e                  	// #110
  40fd4c:	mov	w10, #0x61                  	// #97
  40fd50:	br	x13
  40fd54:	ldur	w10, [x29, #-24]
  40fd58:	tbnz	w10, #0, 40fd78 <__fxstatat@plt+0xd1c8>
  40fd5c:	ldur	x11, [x29, #-48]
  40fd60:	ubfx	w10, w19, #5, #3
  40fd64:	ldr	w10, [x11, w10, uxtw #2]
  40fd68:	lsr	w10, w10, w19
  40fd6c:	tbz	w10, #0, 40fd78 <__fxstatat@plt+0xd1c8>
  40fd70:	mov	w10, w19
  40fd74:	b	40fd80 <__fxstatat@plt+0xd1d0>
  40fd78:	mov	w10, w19
  40fd7c:	tbz	w28, #0, 40fdf8 <__fxstatat@plt+0xd248>
  40fd80:	tbz	w16, #0, 40fd8c <__fxstatat@plt+0xd1dc>
  40fd84:	mov	w10, #0x10                  	// #16
  40fd88:	b	40fe44 <__fxstatat@plt+0xd294>
  40fd8c:	cmp	w1, #0x2
  40fd90:	cset	w9, ne  // ne = any
  40fd94:	orr	w9, w9, w27
  40fd98:	tbnz	w9, #0, 40fddc <__fxstatat@plt+0xd22c>
  40fd9c:	cmp	x20, x26
  40fda0:	b.cs	40fdac <__fxstatat@plt+0xd1fc>  // b.hs, b.nlast
  40fda4:	mov	w9, #0x27                  	// #39
  40fda8:	strb	w9, [x24, x20]
  40fdac:	add	x9, x20, #0x1
  40fdb0:	cmp	x9, x26
  40fdb4:	b.cs	40fdc0 <__fxstatat@plt+0xd210>  // b.hs, b.nlast
  40fdb8:	mov	w11, #0x24                  	// #36
  40fdbc:	strb	w11, [x24, x9]
  40fdc0:	add	x9, x20, #0x2
  40fdc4:	cmp	x9, x26
  40fdc8:	b.cs	40fdd4 <__fxstatat@plt+0xd224>  // b.hs, b.nlast
  40fdcc:	mov	w11, #0x27                  	// #39
  40fdd0:	strb	w11, [x24, x9]
  40fdd4:	add	x20, x20, #0x3
  40fdd8:	mov	w27, #0x1                   	// #1
  40fddc:	cmp	x20, x26
  40fde0:	b.cs	40fdec <__fxstatat@plt+0xd23c>  // b.hs, b.nlast
  40fde4:	mov	w9, #0x5c                  	// #92
  40fde8:	strb	w9, [x24, x20]
  40fdec:	add	x20, x20, #0x1
  40fdf0:	mov	w9, #0x1                   	// #1
  40fdf4:	mov	w19, w10
  40fdf8:	tbnz	w9, #0, 40fe2c <__fxstatat@plt+0xd27c>
  40fdfc:	tbz	w27, #0, 40fe2c <__fxstatat@plt+0xd27c>
  40fe00:	cmp	x20, x26
  40fe04:	b.cs	40fe10 <__fxstatat@plt+0xd260>  // b.hs, b.nlast
  40fe08:	mov	w9, #0x27                  	// #39
  40fe0c:	strb	w9, [x24, x20]
  40fe10:	add	x9, x20, #0x1
  40fe14:	cmp	x9, x26
  40fe18:	b.cs	40fe24 <__fxstatat@plt+0xd274>  // b.hs, b.nlast
  40fe1c:	mov	w10, #0x27                  	// #39
  40fe20:	strb	w10, [x24, x9]
  40fe24:	mov	w27, wzr
  40fe28:	add	x20, x20, #0x2
  40fe2c:	cmp	x20, x26
  40fe30:	b.cs	40fe38 <__fxstatat@plt+0xd288>  // b.hs, b.nlast
  40fe34:	strb	w19, [x24, x20]
  40fe38:	mov	w10, wzr
  40fe3c:	add	x20, x20, #0x1
  40fe40:	and	w15, w15, w8
  40fe44:	cbz	w10, 40fcb0 <__fxstatat@plt+0xd100>
  40fe48:	cmp	w10, #0xf
  40fe4c:	b.eq	40fcb0 <__fxstatat@plt+0xd100>  // b.none
  40fe50:	b	4105b4 <__fxstatat@plt+0xda04>
  40fe54:	ldur	x1, [x29, #-56]
  40fe58:	add	x0, x21, x25
  40fe5c:	mov	x2, x22
  40fe60:	mov	w19, w15
  40fe64:	bl	402810 <bcmp@plt>
  40fe68:	ldur	w9, [x29, #-60]
  40fe6c:	cmp	w0, #0x0
  40fe70:	cset	w8, ne  // ne = any
  40fe74:	cset	w28, eq  // eq = none
  40fe78:	orr	w8, w8, w9
  40fe7c:	tbz	w8, #0, 40fe90 <__fxstatat@plt+0xd2e0>
  40fe80:	ldp	w16, w1, [x29, #-32]
  40fe84:	ldur	w17, [x29, #-36]
  40fe88:	mov	w15, w19
  40fe8c:	b	40fd1c <__fxstatat@plt+0xd16c>
  40fe90:	ldp	w16, w1, [x29, #-32]
  40fe94:	ldur	w17, [x29, #-36]
  40fe98:	mov	w10, #0x10                  	// #16
  40fe9c:	mov	w15, w19
  40fea0:	b	40fe44 <__fxstatat@plt+0xd294>
  40fea4:	cmp	x23, #0x1
  40fea8:	b.eq	40fecc <__fxstatat@plt+0xd31c>  // b.none
  40feac:	cmn	x23, #0x1
  40feb0:	b.ne	40fed0 <__fxstatat@plt+0xd320>  // b.any
  40feb4:	ldrb	w8, [x21, #1]
  40feb8:	cbz	w8, 40fecc <__fxstatat@plt+0xd31c>
  40febc:	mov	w9, wzr
  40fec0:	mov	w8, wzr
  40fec4:	mov	x23, #0xffffffffffffffff    	// #-1
  40fec8:	b	40fd54 <__fxstatat@plt+0xd1a4>
  40fecc:	cbz	x25, 40fedc <__fxstatat@plt+0xd32c>
  40fed0:	mov	w9, wzr
  40fed4:	mov	w8, wzr
  40fed8:	b	40fd54 <__fxstatat@plt+0xd1a4>
  40fedc:	mov	w11, #0x1                   	// #1
  40fee0:	cmp	w1, #0x2
  40fee4:	b.ne	40feec <__fxstatat@plt+0xd33c>  // b.any
  40fee8:	tbnz	w16, #0, 40fd84 <__fxstatat@plt+0xd1d4>
  40feec:	mov	w9, wzr
  40fef0:	mov	w8, w11
  40fef4:	b	40fd54 <__fxstatat@plt+0xd1a4>
  40fef8:	cmp	w1, #0x2
  40fefc:	b.ne	40ffb8 <__fxstatat@plt+0xd408>  // b.any
  40ff00:	tbnz	w16, #0, 40fd84 <__fxstatat@plt+0xd1d4>
  40ff04:	b	40ffc4 <__fxstatat@plt+0xd414>
  40ff08:	mov	w10, #0x66                  	// #102
  40ff0c:	b	40ffdc <__fxstatat@plt+0xd42c>
  40ff10:	mov	w12, #0x74                  	// #116
  40ff14:	b	40ffd0 <__fxstatat@plt+0xd420>
  40ff18:	mov	w10, #0x62                  	// #98
  40ff1c:	b	40ffdc <__fxstatat@plt+0xd42c>
  40ff20:	mov	w12, #0x72                  	// #114
  40ff24:	b	40ffd0 <__fxstatat@plt+0xd420>
  40ff28:	ldur	w8, [x29, #-64]
  40ff2c:	tbz	w8, #0, 40fff0 <__fxstatat@plt+0xd440>
  40ff30:	tbnz	w16, #0, 40fd84 <__fxstatat@plt+0xd1d4>
  40ff34:	cmp	w1, #0x2
  40ff38:	cset	w8, ne  // ne = any
  40ff3c:	orr	w8, w8, w27
  40ff40:	tbz	w8, #0, 410450 <__fxstatat@plt+0xd8a0>
  40ff44:	mov	x9, x20
  40ff48:	b	410490 <__fxstatat@plt+0xd8e0>
  40ff4c:	cmp	w1, #0x5
  40ff50:	b.eq	41016c <__fxstatat@plt+0xd5bc>  // b.none
  40ff54:	cmp	w1, #0x2
  40ff58:	b.ne	40fed0 <__fxstatat@plt+0xd320>  // b.any
  40ff5c:	tbz	w16, #0, 40fed0 <__fxstatat@plt+0xd320>
  40ff60:	b	40fd84 <__fxstatat@plt+0xd1d4>
  40ff64:	mov	w10, #0x76                  	// #118
  40ff68:	b	40ffdc <__fxstatat@plt+0xd42c>
  40ff6c:	cmp	w1, #0x2
  40ff70:	b.ne	410000 <__fxstatat@plt+0xd450>  // b.any
  40ff74:	tbz	w16, #0, 410250 <__fxstatat@plt+0xd6a0>
  40ff78:	mov	w8, #0x1                   	// #1
  40ff7c:	mov	w10, #0x10                  	// #16
  40ff80:	str	w8, [sp, #88]
  40ff84:	b	40fe44 <__fxstatat@plt+0xd294>
  40ff88:	ldr	x8, [sp, #56]
  40ff8c:	str	w15, [sp, #52]
  40ff90:	str	x24, [sp, #40]
  40ff94:	cmp	x8, #0x1
  40ff98:	b.ne	410008 <__fxstatat@plt+0xd458>  // b.any
  40ff9c:	bl	402970 <__ctype_b_loc@plt>
  40ffa0:	ldr	x8, [x0]
  40ffa4:	ldur	w1, [x29, #-28]
  40ffa8:	mov	w24, #0x1                   	// #1
  40ffac:	ldrh	w8, [x8, x19, lsl #1]
  40ffb0:	ubfx	w10, w8, #14, #1
  40ffb4:	b	4102d0 <__fxstatat@plt+0xd720>
  40ffb8:	ldr	w8, [sp, #72]
  40ffbc:	mov	w12, w19
  40ffc0:	tbz	w8, #0, 40ffd0 <__fxstatat@plt+0xd420>
  40ffc4:	mov	w9, wzr
  40ffc8:	mov	w8, wzr
  40ffcc:	b	40fdf8 <__fxstatat@plt+0xd248>
  40ffd0:	ldur	w8, [x29, #-84]
  40ffd4:	mov	w10, w12
  40ffd8:	tbz	w8, #0, 40fd84 <__fxstatat@plt+0xd1d4>
  40ffdc:	ldur	w11, [x29, #-64]
  40ffe0:	mov	w9, wzr
  40ffe4:	mov	w8, wzr
  40ffe8:	tbz	w11, #0, 40fd54 <__fxstatat@plt+0xd1a4>
  40ffec:	b	40fd80 <__fxstatat@plt+0xd1d0>
  40fff0:	ldr	w8, [sp, #64]
  40fff4:	tbz	w8, #0, 40fed0 <__fxstatat@plt+0xd320>
  40fff8:	mov	w10, #0xf                   	// #15
  40fffc:	b	40fe44 <__fxstatat@plt+0xd294>
  410000:	mov	w9, wzr
  410004:	b	4102bc <__fxstatat@plt+0xd70c>
  410008:	cmn	x23, #0x1
  41000c:	str	x22, [sp, #16]
  410010:	stur	xzr, [x29, #-16]
  410014:	b.ne	410024 <__fxstatat@plt+0xd474>  // b.any
  410018:	mov	x0, x21
  41001c:	bl	402550 <strlen@plt>
  410020:	mov	x23, x0
  410024:	sub	x8, x23, x25
  410028:	str	x8, [sp, #8]
  41002c:	add	x8, x21, x25
  410030:	str	x8, [sp, #32]
  410034:	ldur	x8, [x29, #-72]
  410038:	mov	x24, xzr
  41003c:	add	x8, x8, x25
  410040:	str	x8, [sp, #24]
  410044:	mov	w8, #0x1                   	// #1
  410048:	str	w8, [sp, #68]
  41004c:	add	x8, x24, x25
  410050:	add	x1, x21, x8
  410054:	sub	x2, x23, x8
  410058:	sub	x0, x29, #0x14
  41005c:	sub	x3, x29, #0x10
  410060:	mov	w22, w27
  410064:	bl	4127b8 <__fxstatat@plt+0xfc08>
  410068:	cbz	x0, 4100c0 <__fxstatat@plt+0xd510>
  41006c:	mov	x27, x0
  410070:	cmn	x0, #0x1
  410074:	b.eq	4100bc <__fxstatat@plt+0xd50c>  // b.none
  410078:	cmn	x27, #0x2
  41007c:	b.ne	4100c8 <__fxstatat@plt+0xd518>  // b.any
  410080:	add	x8, x24, x25
  410084:	cmp	x8, x23
  410088:	mov	w27, w22
  41008c:	b.cs	4100b0 <__fxstatat@plt+0xd500>  // b.hs, b.nlast
  410090:	ldr	x9, [sp, #32]
  410094:	ldrb	w8, [x9, x24]
  410098:	cbz	w8, 4100b0 <__fxstatat@plt+0xd500>
  41009c:	add	x24, x24, #0x1
  4100a0:	add	x8, x25, x24
  4100a4:	cmp	x8, x23
  4100a8:	b.cc	410094 <__fxstatat@plt+0xd4e4>  // b.lo, b.ul, b.last
  4100ac:	ldr	x24, [sp, #8]
  4100b0:	str	wzr, [sp, #68]
  4100b4:	mov	w10, #0x34                  	// #52
  4100b8:	b	410158 <__fxstatat@plt+0xd5a8>
  4100bc:	str	wzr, [sp, #68]
  4100c0:	mov	w10, #0x34                  	// #52
  4100c4:	b	410154 <__fxstatat@plt+0xd5a4>
  4100c8:	ldr	w8, [sp, #92]
  4100cc:	cbz	w8, 410130 <__fxstatat@plt+0xd580>
  4100d0:	cmp	x27, #0x2
  4100d4:	b.cc	410128 <__fxstatat@plt+0xd578>  // b.lo, b.ul, b.last
  4100d8:	ldr	x9, [sp, #24]
  4100dc:	sub	x8, x27, #0x1
  4100e0:	add	x9, x9, x24
  4100e4:	b	4100f4 <__fxstatat@plt+0xd544>
  4100e8:	subs	x8, x8, #0x1
  4100ec:	add	x9, x9, #0x1
  4100f0:	b.eq	410128 <__fxstatat@plt+0xd578>  // b.none
  4100f4:	ldrb	w10, [x9]
  4100f8:	sub	w10, w10, #0x5b
  4100fc:	cmp	w10, #0x21
  410100:	b.hi	4100e8 <__fxstatat@plt+0xd538>  // b.pmore
  410104:	mov	w11, #0x1                   	// #1
  410108:	lsl	x10, x11, x10
  41010c:	mov	x11, #0x2b                  	// #43
  410110:	movk	x11, #0x2, lsl #32
  410114:	tst	x10, x11
  410118:	b.eq	4100e8 <__fxstatat@plt+0xd538>  // b.none
  41011c:	mov	w10, #0x10                  	// #16
  410120:	cbnz	w10, 410154 <__fxstatat@plt+0xd5a4>
  410124:	b	410130 <__fxstatat@plt+0xd580>
  410128:	mov	w10, wzr
  41012c:	cbnz	w10, 410154 <__fxstatat@plt+0xd5a4>
  410130:	ldur	w0, [x29, #-20]
  410134:	bl	402b20 <iswprint@plt>
  410138:	ldr	w9, [sp, #68]
  41013c:	cmp	w0, #0x0
  410140:	cset	w8, ne  // ne = any
  410144:	mov	w10, wzr
  410148:	and	w9, w9, w8
  41014c:	add	x24, x27, x24
  410150:	str	w9, [sp, #68]
  410154:	mov	w27, w22
  410158:	cbnz	w10, 410220 <__fxstatat@plt+0xd670>
  41015c:	sub	x0, x29, #0x10
  410160:	bl	4028d0 <mbsinit@plt>
  410164:	cbz	w0, 41004c <__fxstatat@plt+0xd49c>
  410168:	b	410228 <__fxstatat@plt+0xd678>
  41016c:	ldr	w8, [sp, #64]
  410170:	tbz	w8, #2, 40fed0 <__fxstatat@plt+0xd320>
  410174:	add	x10, x25, #0x2
  410178:	cmp	x10, x23
  41017c:	b.cs	40fed0 <__fxstatat@plt+0xd320>  // b.hs, b.nlast
  410180:	add	x8, x25, x21
  410184:	ldrb	w8, [x8, #1]
  410188:	cmp	w8, #0x3f
  41018c:	b.ne	40fed0 <__fxstatat@plt+0xd320>  // b.any
  410190:	ldrb	w11, [x21, x10]
  410194:	mov	w9, wzr
  410198:	cmp	w11, #0x3e
  41019c:	b.hi	410528 <__fxstatat@plt+0xd978>  // b.pmore
  4101a0:	mov	w8, #0x1                   	// #1
  4101a4:	mov	x12, #0xa38200000000        	// #179778741075968
  4101a8:	lsl	x8, x8, x11
  4101ac:	movk	x12, #0x7000, lsl #48
  4101b0:	tst	x8, x12
  4101b4:	b.eq	410528 <__fxstatat@plt+0xd978>  // b.none
  4101b8:	tbnz	w16, #0, 40fd84 <__fxstatat@plt+0xd1d4>
  4101bc:	cmp	x20, x26
  4101c0:	b.cs	4101cc <__fxstatat@plt+0xd61c>  // b.hs, b.nlast
  4101c4:	mov	w8, #0x3f                  	// #63
  4101c8:	strb	w8, [x24, x20]
  4101cc:	add	x8, x20, #0x1
  4101d0:	cmp	x8, x26
  4101d4:	b.cs	4101e0 <__fxstatat@plt+0xd630>  // b.hs, b.nlast
  4101d8:	mov	w9, #0x22                  	// #34
  4101dc:	strb	w9, [x24, x8]
  4101e0:	add	x8, x20, #0x2
  4101e4:	cmp	x8, x26
  4101e8:	b.cs	4101f4 <__fxstatat@plt+0xd644>  // b.hs, b.nlast
  4101ec:	mov	w9, #0x22                  	// #34
  4101f0:	strb	w9, [x24, x8]
  4101f4:	add	x8, x20, #0x3
  4101f8:	cmp	x8, x26
  4101fc:	b.cs	410208 <__fxstatat@plt+0xd658>  // b.hs, b.nlast
  410200:	mov	w9, #0x3f                  	// #63
  410204:	strb	w9, [x24, x8]
  410208:	mov	w9, wzr
  41020c:	mov	w8, wzr
  410210:	add	x20, x20, #0x4
  410214:	mov	x25, x10
  410218:	mov	w19, w11
  41021c:	b	40fd54 <__fxstatat@plt+0xd1a4>
  410220:	cmp	w10, #0x34
  410224:	b.ne	41022c <__fxstatat@plt+0xd67c>  // b.any
  410228:	mov	w10, wzr
  41022c:	ldp	w16, w1, [x29, #-32]
  410230:	ldr	w15, [sp, #52]
  410234:	ldr	x22, [sp, #16]
  410238:	ldur	w17, [x29, #-36]
  41023c:	cbz	w10, 4102cc <__fxstatat@plt+0xd71c>
  410240:	ldr	x24, [sp, #40]
  410244:	mov	w11, wzr
  410248:	mov	w8, wzr
  41024c:	b	41050c <__fxstatat@plt+0xd95c>
  410250:	ldur	x10, [x29, #-80]
  410254:	cmp	x26, #0x0
  410258:	cset	w8, eq  // eq = none
  41025c:	cmp	x10, #0x0
  410260:	cset	w9, ne  // ne = any
  410264:	orr	w8, w9, w8
  410268:	cmp	w8, #0x0
  41026c:	csel	x10, x10, x26, ne  // ne = any
  410270:	csel	x26, x26, xzr, ne  // ne = any
  410274:	cmp	x20, x26
  410278:	stur	x10, [x29, #-80]
  41027c:	b.cs	410288 <__fxstatat@plt+0xd6d8>  // b.hs, b.nlast
  410280:	mov	w8, #0x27                  	// #39
  410284:	strb	w8, [x24, x20]
  410288:	add	x8, x20, #0x1
  41028c:	cmp	x8, x26
  410290:	b.cs	41029c <__fxstatat@plt+0xd6ec>  // b.hs, b.nlast
  410294:	mov	w9, #0x5c                  	// #92
  410298:	strb	w9, [x24, x8]
  41029c:	add	x8, x20, #0x2
  4102a0:	cmp	x8, x26
  4102a4:	b.cs	4102b0 <__fxstatat@plt+0xd700>  // b.hs, b.nlast
  4102a8:	mov	w9, #0x27                  	// #39
  4102ac:	strb	w9, [x24, x8]
  4102b0:	mov	w27, wzr
  4102b4:	mov	w9, wzr
  4102b8:	add	x20, x20, #0x3
  4102bc:	mov	w8, #0x1                   	// #1
  4102c0:	str	w8, [sp, #88]
  4102c4:	mov	w8, #0x1                   	// #1
  4102c8:	b	40fd54 <__fxstatat@plt+0xd1a4>
  4102cc:	ldr	w10, [sp, #68]
  4102d0:	ldr	w9, [sp, #76]
  4102d4:	and	w8, w10, #0x1
  4102d8:	cmp	x24, #0x1
  4102dc:	orr	w9, w10, w9
  4102e0:	b.hi	410300 <__fxstatat@plt+0xd750>  // b.pmore
  4102e4:	tbz	w9, #0, 410300 <__fxstatat@plt+0xd750>
  4102e8:	ldr	x24, [sp, #40]
  4102ec:	ldr	w15, [sp, #52]
  4102f0:	ldp	w17, w16, [x29, #-36]
  4102f4:	mov	w11, wzr
  4102f8:	mov	w10, wzr
  4102fc:	b	41050c <__fxstatat@plt+0xd95c>
  410300:	add	x10, x24, x25
  410304:	ldr	x24, [sp, #40]
  410308:	ldr	w15, [sp, #52]
  41030c:	ldp	w17, w16, [x29, #-36]
  410310:	mov	w11, wzr
  410314:	b	410328 <__fxstatat@plt+0xd778>
  410318:	ldur	x13, [x29, #-72]
  41031c:	add	x20, x20, #0x1
  410320:	ldrb	w19, [x13, x25]
  410324:	mov	x25, x12
  410328:	tbz	w9, #0, 41034c <__fxstatat@plt+0xd79c>
  41032c:	tbz	w28, #0, 4103f4 <__fxstatat@plt+0xd844>
  410330:	cmp	x20, x26
  410334:	b.cs	410340 <__fxstatat@plt+0xd790>  // b.hs, b.nlast
  410338:	mov	w12, #0x5c                  	// #92
  41033c:	strb	w12, [x24, x20]
  410340:	mov	w28, wzr
  410344:	add	x20, x20, #0x1
  410348:	b	4103f4 <__fxstatat@plt+0xd844>
  41034c:	tbnz	w16, #0, 410508 <__fxstatat@plt+0xd958>
  410350:	cmp	w1, #0x2
  410354:	cset	w11, ne  // ne = any
  410358:	orr	w11, w11, w27
  41035c:	tbnz	w11, #0, 4103a0 <__fxstatat@plt+0xd7f0>
  410360:	cmp	x20, x26
  410364:	b.cs	410370 <__fxstatat@plt+0xd7c0>  // b.hs, b.nlast
  410368:	mov	w11, #0x27                  	// #39
  41036c:	strb	w11, [x24, x20]
  410370:	add	x11, x20, #0x1
  410374:	cmp	x11, x26
  410378:	b.cs	410384 <__fxstatat@plt+0xd7d4>  // b.hs, b.nlast
  41037c:	mov	w12, #0x24                  	// #36
  410380:	strb	w12, [x24, x11]
  410384:	add	x11, x20, #0x2
  410388:	cmp	x11, x26
  41038c:	b.cs	410398 <__fxstatat@plt+0xd7e8>  // b.hs, b.nlast
  410390:	mov	w12, #0x27                  	// #39
  410394:	strb	w12, [x24, x11]
  410398:	add	x20, x20, #0x3
  41039c:	mov	w27, #0x1                   	// #1
  4103a0:	cmp	x20, x26
  4103a4:	b.cs	4103b0 <__fxstatat@plt+0xd800>  // b.hs, b.nlast
  4103a8:	mov	w11, #0x5c                  	// #92
  4103ac:	strb	w11, [x24, x20]
  4103b0:	add	x11, x20, #0x1
  4103b4:	cmp	x11, x26
  4103b8:	b.cs	4103c8 <__fxstatat@plt+0xd818>  // b.hs, b.nlast
  4103bc:	mov	w12, #0x30                  	// #48
  4103c0:	bfxil	w12, w19, #6, #2
  4103c4:	strb	w12, [x24, x11]
  4103c8:	add	x11, x20, #0x2
  4103cc:	cmp	x11, x26
  4103d0:	b.cs	4103e0 <__fxstatat@plt+0xd830>  // b.hs, b.nlast
  4103d4:	mov	w12, #0x30                  	// #48
  4103d8:	bfxil	w12, w19, #3, #3
  4103dc:	strb	w12, [x24, x11]
  4103e0:	mov	w12, #0x30                  	// #48
  4103e4:	bfxil	w12, w19, #0, #3
  4103e8:	add	x20, x20, #0x3
  4103ec:	mov	w11, #0x1                   	// #1
  4103f0:	mov	w19, w12
  4103f4:	add	x12, x25, #0x1
  4103f8:	cmp	x10, x12
  4103fc:	b.ls	410448 <__fxstatat@plt+0xd898>  // b.plast
  410400:	and	w13, w11, #0x1
  410404:	orn	w13, w13, w27
  410408:	tbnz	w13, #0, 410438 <__fxstatat@plt+0xd888>
  41040c:	cmp	x20, x26
  410410:	b.cs	41041c <__fxstatat@plt+0xd86c>  // b.hs, b.nlast
  410414:	mov	w13, #0x27                  	// #39
  410418:	strb	w13, [x24, x20]
  41041c:	add	x13, x20, #0x1
  410420:	cmp	x13, x26
  410424:	b.cs	410430 <__fxstatat@plt+0xd880>  // b.hs, b.nlast
  410428:	mov	w14, #0x27                  	// #39
  41042c:	strb	w14, [x24, x13]
  410430:	mov	w27, wzr
  410434:	add	x20, x20, #0x2
  410438:	cmp	x20, x26
  41043c:	b.cs	410318 <__fxstatat@plt+0xd768>  // b.hs, b.nlast
  410440:	strb	w19, [x24, x20]
  410444:	b	410318 <__fxstatat@plt+0xd768>
  410448:	mov	w10, #0x2c                  	// #44
  41044c:	b	41050c <__fxstatat@plt+0xd95c>
  410450:	cmp	x20, x26
  410454:	b.cs	410460 <__fxstatat@plt+0xd8b0>  // b.hs, b.nlast
  410458:	mov	w8, #0x27                  	// #39
  41045c:	strb	w8, [x24, x20]
  410460:	add	x8, x20, #0x1
  410464:	cmp	x8, x26
  410468:	b.cs	410474 <__fxstatat@plt+0xd8c4>  // b.hs, b.nlast
  41046c:	mov	w9, #0x24                  	// #36
  410470:	strb	w9, [x24, x8]
  410474:	add	x8, x20, #0x2
  410478:	cmp	x8, x26
  41047c:	b.cs	410488 <__fxstatat@plt+0xd8d8>  // b.hs, b.nlast
  410480:	mov	w9, #0x27                  	// #39
  410484:	strb	w9, [x24, x8]
  410488:	add	x9, x20, #0x3
  41048c:	mov	w27, #0x1                   	// #1
  410490:	cmp	x9, x26
  410494:	b.cs	4104a0 <__fxstatat@plt+0xd8f0>  // b.hs, b.nlast
  410498:	mov	w8, #0x5c                  	// #92
  41049c:	strb	w8, [x24, x9]
  4104a0:	cmp	w1, #0x2
  4104a4:	add	x20, x9, #0x1
  4104a8:	b.eq	4104f8 <__fxstatat@plt+0xd948>  // b.none
  4104ac:	add	x8, x25, #0x1
  4104b0:	cmp	x8, x23
  4104b4:	b.cs	4104f8 <__fxstatat@plt+0xd948>  // b.hs, b.nlast
  4104b8:	ldrb	w8, [x21, x8]
  4104bc:	sub	w8, w8, #0x30
  4104c0:	cmp	w8, #0x9
  4104c4:	b.hi	4104f8 <__fxstatat@plt+0xd948>  // b.pmore
  4104c8:	cmp	x20, x26
  4104cc:	b.cs	4104d8 <__fxstatat@plt+0xd928>  // b.hs, b.nlast
  4104d0:	mov	w8, #0x30                  	// #48
  4104d4:	strb	w8, [x24, x20]
  4104d8:	add	x8, x9, #0x2
  4104dc:	cmp	x8, x26
  4104e0:	b.cs	4104ec <__fxstatat@plt+0xd93c>  // b.hs, b.nlast
  4104e4:	mov	w10, #0x30                  	// #48
  4104e8:	strb	w10, [x24, x8]
  4104ec:	mov	w8, wzr
  4104f0:	add	x20, x9, #0x3
  4104f4:	b	4104fc <__fxstatat@plt+0xd94c>
  4104f8:	mov	w8, wzr
  4104fc:	mov	w9, #0x1                   	// #1
  410500:	mov	w19, #0x30                  	// #48
  410504:	b	40fd54 <__fxstatat@plt+0xd1a4>
  410508:	mov	w10, #0x10                  	// #16
  41050c:	cmp	w8, #0x0
  410510:	cset	w8, ne  // ne = any
  410514:	cmp	w10, #0x2c
  410518:	and	w9, w11, #0x1
  41051c:	b.eq	40fdf8 <__fxstatat@plt+0xd248>  // b.none
  410520:	cbz	w10, 40fd54 <__fxstatat@plt+0xd1a4>
  410524:	b	40fe44 <__fxstatat@plt+0xd294>
  410528:	mov	w8, w9
  41052c:	b	40fd54 <__fxstatat@plt+0xd1a4>
  410530:	cmp	x20, #0x0
  410534:	cset	w8, eq  // eq = none
  410538:	cmp	w1, #0x2
  41053c:	cset	w9, eq  // eq = none
  410540:	and	w8, w9, w8
  410544:	and	w8, w16, w8
  410548:	tbnz	w8, #0, 4105bc <__fxstatat@plt+0xda0c>
  41054c:	ldur	w9, [x29, #-64]
  410550:	cmp	w1, #0x2
  410554:	cset	w8, ne  // ne = any
  410558:	orr	w8, w16, w8
  41055c:	tbnz	w8, #0, 410590 <__fxstatat@plt+0xd9e0>
  410560:	ldr	w8, [sp, #88]
  410564:	eor	w8, w8, #0x1
  410568:	tbnz	w8, #0, 410590 <__fxstatat@plt+0xd9e0>
  41056c:	tbnz	w15, #0, 41065c <__fxstatat@plt+0xdaac>
  410570:	ldur	x8, [x29, #-80]
  410574:	cbz	x8, 410590 <__fxstatat@plt+0xd9e0>
  410578:	mov	w28, w27
  41057c:	ldur	x27, [x29, #-80]
  410580:	mov	w1, #0x2                   	// #2
  410584:	mov	w8, w9
  410588:	mov	w19, w16
  41058c:	cbz	x26, 40faa8 <__fxstatat@plt+0xcef8>
  410590:	ldur	x10, [x29, #-56]
  410594:	cmp	x10, #0x0
  410598:	cset	w8, eq  // eq = none
  41059c:	orr	w8, w8, w16
  4105a0:	tbnz	w8, #0, 41064c <__fxstatat@plt+0xda9c>
  4105a4:	ldrb	w9, [x10]
  4105a8:	cbz	w9, 41064c <__fxstatat@plt+0xda9c>
  4105ac:	add	x8, x10, #0x1
  4105b0:	b	410618 <__fxstatat@plt+0xda68>
  4105b4:	cmp	w10, #0x10
  4105b8:	b.ne	410628 <__fxstatat@plt+0xda78>  // b.any
  4105bc:	ldur	w8, [x29, #-64]
  4105c0:	mov	w9, #0x4                   	// #4
  4105c4:	mov	x0, x24
  4105c8:	mov	x2, x21
  4105cc:	tst	w8, #0x1
  4105d0:	mov	w8, #0x2                   	// #2
  4105d4:	csel	w8, w9, w8, ne  // ne = any
  4105d8:	cmp	w1, #0x2
  4105dc:	csel	w4, w8, w1, eq  // eq = none
  4105e0:	ldr	w8, [sp, #64]
  4105e4:	mov	x1, x26
  4105e8:	mov	x3, x23
  4105ec:	mov	x6, xzr
  4105f0:	and	w5, w8, #0xfffffffd
  4105f4:	ldr	x8, [sp, #96]
  4105f8:	str	x8, [sp]
  4105fc:	ldr	x7, [sp, #80]
  410600:	bl	40fa28 <__fxstatat@plt+0xce78>
  410604:	mov	x20, x0
  410608:	b	410628 <__fxstatat@plt+0xda78>
  41060c:	ldrb	w9, [x8], #1
  410610:	add	x20, x20, #0x1
  410614:	cbz	w9, 41064c <__fxstatat@plt+0xda9c>
  410618:	cmp	x20, x26
  41061c:	b.cs	41060c <__fxstatat@plt+0xda5c>  // b.hs, b.nlast
  410620:	strb	w9, [x24, x20]
  410624:	b	41060c <__fxstatat@plt+0xda5c>
  410628:	mov	x0, x20
  41062c:	ldp	x20, x19, [sp, #272]
  410630:	ldp	x22, x21, [sp, #256]
  410634:	ldp	x24, x23, [sp, #240]
  410638:	ldp	x26, x25, [sp, #224]
  41063c:	ldp	x28, x27, [sp, #208]
  410640:	ldp	x29, x30, [sp, #192]
  410644:	add	sp, sp, #0x120
  410648:	ret
  41064c:	cmp	x20, x26
  410650:	b.cs	410628 <__fxstatat@plt+0xda78>  // b.hs, b.nlast
  410654:	strb	wzr, [x24, x20]
  410658:	b	410628 <__fxstatat@plt+0xda78>
  41065c:	ldr	x8, [sp, #96]
  410660:	ldur	x1, [x29, #-80]
  410664:	ldr	w5, [sp, #64]
  410668:	ldur	x6, [x29, #-48]
  41066c:	mov	w4, #0x5                   	// #5
  410670:	mov	x0, x24
  410674:	mov	x2, x21
  410678:	mov	x3, x23
  41067c:	b	4105f8 <__fxstatat@plt+0xda48>
  410680:	bl	4028c0 <abort@plt>
  410684:	stp	x29, x30, [sp, #-16]!
  410688:	mov	x3, x2
  41068c:	mov	x2, xzr
  410690:	mov	x29, sp
  410694:	bl	4106a0 <__fxstatat@plt+0xdaf0>
  410698:	ldp	x29, x30, [sp], #16
  41069c:	ret
  4106a0:	sub	sp, sp, #0x70
  4106a4:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4106a8:	add	x8, x8, #0x768
  4106ac:	cmp	x3, #0x0
  4106b0:	stp	x29, x30, [sp, #16]
  4106b4:	stp	x28, x27, [sp, #32]
  4106b8:	stp	x26, x25, [sp, #48]
  4106bc:	stp	x24, x23, [sp, #64]
  4106c0:	stp	x22, x21, [sp, #80]
  4106c4:	stp	x20, x19, [sp, #96]
  4106c8:	add	x29, sp, #0x10
  4106cc:	mov	x19, x2
  4106d0:	mov	x22, x1
  4106d4:	mov	x23, x0
  4106d8:	csel	x21, x8, x3, eq  // eq = none
  4106dc:	bl	402b40 <__errno_location@plt>
  4106e0:	ldp	w4, w8, [x21]
  4106e4:	cmp	x19, #0x0
  4106e8:	ldp	x7, x9, [x21, #40]
  4106ec:	ldr	w28, [x0]
  4106f0:	cset	w10, eq  // eq = none
  4106f4:	orr	w25, w8, w10
  4106f8:	add	x26, x21, #0x8
  4106fc:	mov	x24, x0
  410700:	mov	x0, xzr
  410704:	mov	x1, xzr
  410708:	mov	x2, x23
  41070c:	mov	x3, x22
  410710:	mov	w5, w25
  410714:	mov	x6, x26
  410718:	str	x9, [sp]
  41071c:	bl	40fa28 <__fxstatat@plt+0xce78>
  410720:	add	x27, x0, #0x1
  410724:	mov	x20, x0
  410728:	mov	x0, x27
  41072c:	bl	411c4c <__fxstatat@plt+0xf09c>
  410730:	ldr	w4, [x21]
  410734:	ldp	x7, x8, [x21, #40]
  410738:	mov	x1, x27
  41073c:	mov	x2, x23
  410740:	mov	x3, x22
  410744:	mov	w5, w25
  410748:	mov	x6, x26
  41074c:	mov	x21, x0
  410750:	str	x8, [sp]
  410754:	bl	40fa28 <__fxstatat@plt+0xce78>
  410758:	str	w28, [x24]
  41075c:	cbz	x19, 410764 <__fxstatat@plt+0xdbb4>
  410760:	str	x20, [x19]
  410764:	mov	x0, x21
  410768:	ldp	x20, x19, [sp, #96]
  41076c:	ldp	x22, x21, [sp, #80]
  410770:	ldp	x24, x23, [sp, #64]
  410774:	ldp	x26, x25, [sp, #48]
  410778:	ldp	x28, x27, [sp, #32]
  41077c:	ldp	x29, x30, [sp, #16]
  410780:	add	sp, sp, #0x70
  410784:	ret
  410788:	stp	x29, x30, [sp, #-64]!
  41078c:	stp	x20, x19, [sp, #48]
  410790:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x184b8>
  410794:	stp	x22, x21, [sp, #32]
  410798:	ldr	w8, [x20, #1360]
  41079c:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4107a0:	ldr	x19, [x21, #1352]
  4107a4:	str	x23, [sp, #16]
  4107a8:	cmp	w8, #0x2
  4107ac:	mov	x29, sp
  4107b0:	b.lt	4107d4 <__fxstatat@plt+0xdc24>  // b.tstop
  4107b4:	add	x22, x19, #0x18
  4107b8:	mov	w23, #0x1                   	// #1
  4107bc:	ldr	x0, [x22], #16
  4107c0:	bl	402990 <free@plt>
  4107c4:	ldrsw	x8, [x20, #1360]
  4107c8:	add	x23, x23, #0x1
  4107cc:	cmp	x23, x8
  4107d0:	b.lt	4107bc <__fxstatat@plt+0xdc0c>  // b.tstop
  4107d4:	ldr	x0, [x19, #8]
  4107d8:	adrp	x23, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4107dc:	add	x23, x23, #0x7a0
  4107e0:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4107e4:	cmp	x0, x23
  4107e8:	add	x22, x22, #0x558
  4107ec:	b.eq	4107fc <__fxstatat@plt+0xdc4c>  // b.none
  4107f0:	bl	402990 <free@plt>
  4107f4:	mov	w8, #0x100                 	// #256
  4107f8:	stp	x8, x23, [x22]
  4107fc:	cmp	x19, x22
  410800:	b.eq	410810 <__fxstatat@plt+0xdc60>  // b.none
  410804:	mov	x0, x19
  410808:	bl	402990 <free@plt>
  41080c:	str	x22, [x21, #1352]
  410810:	mov	w8, #0x1                   	// #1
  410814:	str	w8, [x20, #1360]
  410818:	ldp	x20, x19, [sp, #48]
  41081c:	ldp	x22, x21, [sp, #32]
  410820:	ldr	x23, [sp, #16]
  410824:	ldp	x29, x30, [sp], #64
  410828:	ret
  41082c:	stp	x29, x30, [sp, #-16]!
  410830:	adrp	x3, 42c000 <__progname@@GLIBC_2.17+0xa30>
  410834:	add	x3, x3, #0x768
  410838:	mov	x2, #0xffffffffffffffff    	// #-1
  41083c:	mov	x29, sp
  410840:	bl	41084c <__fxstatat@plt+0xdc9c>
  410844:	ldp	x29, x30, [sp], #16
  410848:	ret
  41084c:	sub	sp, sp, #0x80
  410850:	stp	x29, x30, [sp, #32]
  410854:	add	x29, sp, #0x20
  410858:	stp	x28, x27, [sp, #48]
  41085c:	stp	x26, x25, [sp, #64]
  410860:	stp	x24, x23, [sp, #80]
  410864:	stp	x22, x21, [sp, #96]
  410868:	stp	x20, x19, [sp, #112]
  41086c:	mov	x22, x3
  410870:	stur	x2, [x29, #-8]
  410874:	mov	x21, x1
  410878:	mov	w23, w0
  41087c:	bl	402b40 <__errno_location@plt>
  410880:	tbnz	w23, #31, 4109d0 <__fxstatat@plt+0xde20>
  410884:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x184b8>
  410888:	ldr	w8, [x25, #1360]
  41088c:	adrp	x28, 42b000 <_obstack_memory_used@@Base+0x184b8>
  410890:	ldr	w20, [x0]
  410894:	ldr	x27, [x28, #1352]
  410898:	mov	x19, x0
  41089c:	cmp	w8, w23
  4108a0:	b.gt	41090c <__fxstatat@plt+0xdd5c>
  4108a4:	mov	w8, #0x7fffffff            	// #2147483647
  4108a8:	cmp	w23, w8
  4108ac:	stur	w20, [x29, #-12]
  4108b0:	b.eq	4109d4 <__fxstatat@plt+0xde24>  // b.none
  4108b4:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4108b8:	add	x20, x20, #0x558
  4108bc:	add	w26, w23, #0x1
  4108c0:	cmp	x27, x20
  4108c4:	csel	x0, xzr, x27, eq  // eq = none
  4108c8:	sbfiz	x1, x26, #4, #32
  4108cc:	bl	411b9c <__fxstatat@plt+0xefec>
  4108d0:	mov	x24, x0
  4108d4:	cmp	x27, x20
  4108d8:	str	x0, [x28, #1352]
  4108dc:	b.ne	4108e8 <__fxstatat@plt+0xdd38>  // b.any
  4108e0:	ldr	q0, [x20]
  4108e4:	str	q0, [x24]
  4108e8:	ldrsw	x8, [x25, #1360]
  4108ec:	mov	w1, wzr
  4108f0:	add	x0, x24, x8, lsl #4
  4108f4:	sub	w8, w26, w8
  4108f8:	sbfiz	x2, x8, #4, #32
  4108fc:	bl	4027c0 <memset@plt>
  410900:	ldur	w20, [x29, #-12]
  410904:	mov	x27, x24
  410908:	str	w26, [x25, #1360]
  41090c:	add	x28, x27, w23, sxtw #4
  410910:	mov	x27, x28
  410914:	ldr	x26, [x28]
  410918:	ldr	x23, [x27, #8]!
  41091c:	ldp	w4, w8, [x22]
  410920:	ldp	x7, x9, [x22, #40]
  410924:	ldur	x3, [x29, #-8]
  410928:	add	x24, x22, #0x8
  41092c:	orr	w25, w8, #0x1
  410930:	mov	x0, x23
  410934:	mov	x1, x26
  410938:	mov	x2, x21
  41093c:	mov	w5, w25
  410940:	mov	x6, x24
  410944:	str	x9, [sp]
  410948:	bl	40fa28 <__fxstatat@plt+0xce78>
  41094c:	cmp	x26, x0
  410950:	b.hi	4109a8 <__fxstatat@plt+0xddf8>  // b.pmore
  410954:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  410958:	add	x8, x8, #0x7a0
  41095c:	add	x26, x0, #0x1
  410960:	cmp	x23, x8
  410964:	str	x26, [x28]
  410968:	b.eq	410974 <__fxstatat@plt+0xddc4>  // b.none
  41096c:	mov	x0, x23
  410970:	bl	402990 <free@plt>
  410974:	mov	x0, x26
  410978:	bl	411c4c <__fxstatat@plt+0xf09c>
  41097c:	str	x0, [x27]
  410980:	ldr	w4, [x22]
  410984:	ldp	x7, x8, [x22, #40]
  410988:	ldur	x3, [x29, #-8]
  41098c:	mov	x1, x26
  410990:	mov	x2, x21
  410994:	mov	w5, w25
  410998:	mov	x6, x24
  41099c:	mov	x23, x0
  4109a0:	str	x8, [sp]
  4109a4:	bl	40fa28 <__fxstatat@plt+0xce78>
  4109a8:	str	w20, [x19]
  4109ac:	mov	x0, x23
  4109b0:	ldp	x20, x19, [sp, #112]
  4109b4:	ldp	x22, x21, [sp, #96]
  4109b8:	ldp	x24, x23, [sp, #80]
  4109bc:	ldp	x26, x25, [sp, #64]
  4109c0:	ldp	x28, x27, [sp, #48]
  4109c4:	ldp	x29, x30, [sp, #32]
  4109c8:	add	sp, sp, #0x80
  4109cc:	ret
  4109d0:	bl	4028c0 <abort@plt>
  4109d4:	bl	411d48 <__fxstatat@plt+0xf198>
  4109d8:	stp	x29, x30, [sp, #-16]!
  4109dc:	adrp	x3, 42c000 <__progname@@GLIBC_2.17+0xa30>
  4109e0:	add	x3, x3, #0x768
  4109e4:	mov	x29, sp
  4109e8:	bl	41084c <__fxstatat@plt+0xdc9c>
  4109ec:	ldp	x29, x30, [sp], #16
  4109f0:	ret
  4109f4:	stp	x29, x30, [sp, #-16]!
  4109f8:	mov	x1, x0
  4109fc:	mov	w0, wzr
  410a00:	mov	x29, sp
  410a04:	bl	41082c <__fxstatat@plt+0xdc7c>
  410a08:	ldp	x29, x30, [sp], #16
  410a0c:	ret
  410a10:	stp	x29, x30, [sp, #-16]!
  410a14:	mov	x2, x1
  410a18:	mov	x1, x0
  410a1c:	mov	w0, wzr
  410a20:	mov	x29, sp
  410a24:	bl	4109d8 <__fxstatat@plt+0xde28>
  410a28:	ldp	x29, x30, [sp], #16
  410a2c:	ret
  410a30:	sub	sp, sp, #0x60
  410a34:	stp	x20, x19, [sp, #80]
  410a38:	mov	w20, w0
  410a3c:	add	x8, sp, #0x8
  410a40:	mov	w0, w1
  410a44:	stp	x29, x30, [sp, #64]
  410a48:	add	x29, sp, #0x40
  410a4c:	mov	x19, x2
  410a50:	bl	410a78 <__fxstatat@plt+0xdec8>
  410a54:	add	x3, sp, #0x8
  410a58:	mov	x2, #0xffffffffffffffff    	// #-1
  410a5c:	mov	w0, w20
  410a60:	mov	x1, x19
  410a64:	bl	41084c <__fxstatat@plt+0xdc9c>
  410a68:	ldp	x20, x19, [sp, #80]
  410a6c:	ldp	x29, x30, [sp, #64]
  410a70:	add	sp, sp, #0x60
  410a74:	ret
  410a78:	stp	x29, x30, [sp, #-16]!
  410a7c:	movi	v0.2d, #0x0
  410a80:	cmp	w0, #0xa
  410a84:	mov	x29, sp
  410a88:	str	xzr, [x8, #48]
  410a8c:	stp	q0, q0, [x8, #16]
  410a90:	str	q0, [x8]
  410a94:	b.eq	410aa4 <__fxstatat@plt+0xdef4>  // b.none
  410a98:	str	w0, [x8]
  410a9c:	ldp	x29, x30, [sp], #16
  410aa0:	ret
  410aa4:	bl	4028c0 <abort@plt>
  410aa8:	sub	sp, sp, #0x70
  410aac:	str	x21, [sp, #80]
  410ab0:	mov	w21, w0
  410ab4:	add	x8, sp, #0x8
  410ab8:	mov	w0, w1
  410abc:	stp	x29, x30, [sp, #64]
  410ac0:	stp	x20, x19, [sp, #96]
  410ac4:	add	x29, sp, #0x40
  410ac8:	mov	x19, x3
  410acc:	mov	x20, x2
  410ad0:	bl	410a78 <__fxstatat@plt+0xdec8>
  410ad4:	add	x3, sp, #0x8
  410ad8:	mov	w0, w21
  410adc:	mov	x1, x20
  410ae0:	mov	x2, x19
  410ae4:	bl	41084c <__fxstatat@plt+0xdc9c>
  410ae8:	ldp	x20, x19, [sp, #96]
  410aec:	ldr	x21, [sp, #80]
  410af0:	ldp	x29, x30, [sp, #64]
  410af4:	add	sp, sp, #0x70
  410af8:	ret
  410afc:	stp	x29, x30, [sp, #-16]!
  410b00:	mov	x2, x1
  410b04:	mov	w1, w0
  410b08:	mov	w0, wzr
  410b0c:	mov	x29, sp
  410b10:	bl	410a30 <__fxstatat@plt+0xde80>
  410b14:	ldp	x29, x30, [sp], #16
  410b18:	ret
  410b1c:	stp	x29, x30, [sp, #-16]!
  410b20:	mov	x3, x2
  410b24:	mov	x2, x1
  410b28:	mov	w1, w0
  410b2c:	mov	w0, wzr
  410b30:	mov	x29, sp
  410b34:	bl	410aa8 <__fxstatat@plt+0xdef8>
  410b38:	ldp	x29, x30, [sp], #16
  410b3c:	ret
  410b40:	sub	sp, sp, #0x60
  410b44:	adrp	x9, 42c000 <__progname@@GLIBC_2.17+0xa30>
  410b48:	add	x9, x9, #0x768
  410b4c:	ldp	q0, q1, [x9]
  410b50:	ldr	q2, [x9, #32]
  410b54:	ldr	x9, [x9, #48]
  410b58:	mov	w8, w2
  410b5c:	stp	x20, x19, [sp, #80]
  410b60:	mov	x19, x1
  410b64:	mov	x20, x0
  410b68:	mov	x0, sp
  410b6c:	mov	w2, #0x1                   	// #1
  410b70:	mov	w1, w8
  410b74:	stp	x29, x30, [sp, #64]
  410b78:	add	x29, sp, #0x40
  410b7c:	stp	q0, q1, [sp]
  410b80:	str	q2, [sp, #32]
  410b84:	str	x9, [sp, #48]
  410b88:	bl	40f90c <__fxstatat@plt+0xcd5c>
  410b8c:	mov	x3, sp
  410b90:	mov	w0, wzr
  410b94:	mov	x1, x20
  410b98:	mov	x2, x19
  410b9c:	bl	41084c <__fxstatat@plt+0xdc9c>
  410ba0:	ldp	x20, x19, [sp, #80]
  410ba4:	ldp	x29, x30, [sp, #64]
  410ba8:	add	sp, sp, #0x60
  410bac:	ret
  410bb0:	stp	x29, x30, [sp, #-16]!
  410bb4:	mov	w2, w1
  410bb8:	mov	x1, #0xffffffffffffffff    	// #-1
  410bbc:	mov	x29, sp
  410bc0:	bl	410b40 <__fxstatat@plt+0xdf90>
  410bc4:	ldp	x29, x30, [sp], #16
  410bc8:	ret
  410bcc:	stp	x29, x30, [sp, #-16]!
  410bd0:	mov	w1, #0x3a                  	// #58
  410bd4:	mov	x29, sp
  410bd8:	bl	410bb0 <__fxstatat@plt+0xe000>
  410bdc:	ldp	x29, x30, [sp], #16
  410be0:	ret
  410be4:	stp	x29, x30, [sp, #-16]!
  410be8:	mov	w2, #0x3a                  	// #58
  410bec:	mov	x29, sp
  410bf0:	bl	410b40 <__fxstatat@plt+0xdf90>
  410bf4:	ldp	x29, x30, [sp], #16
  410bf8:	ret
  410bfc:	sub	sp, sp, #0x60
  410c00:	stp	x20, x19, [sp, #80]
  410c04:	mov	w20, w0
  410c08:	add	x8, sp, #0x8
  410c0c:	mov	w0, w1
  410c10:	stp	x29, x30, [sp, #64]
  410c14:	add	x29, sp, #0x40
  410c18:	mov	x19, x2
  410c1c:	bl	410a78 <__fxstatat@plt+0xdec8>
  410c20:	add	x0, sp, #0x8
  410c24:	mov	w1, #0x3a                  	// #58
  410c28:	mov	w2, #0x1                   	// #1
  410c2c:	bl	40f90c <__fxstatat@plt+0xcd5c>
  410c30:	add	x3, sp, #0x8
  410c34:	mov	x2, #0xffffffffffffffff    	// #-1
  410c38:	mov	w0, w20
  410c3c:	mov	x1, x19
  410c40:	bl	41084c <__fxstatat@plt+0xdc9c>
  410c44:	ldp	x20, x19, [sp, #80]
  410c48:	ldp	x29, x30, [sp, #64]
  410c4c:	add	sp, sp, #0x60
  410c50:	ret
  410c54:	stp	x29, x30, [sp, #-16]!
  410c58:	mov	x4, #0xffffffffffffffff    	// #-1
  410c5c:	mov	x29, sp
  410c60:	bl	410c6c <__fxstatat@plt+0xe0bc>
  410c64:	ldp	x29, x30, [sp], #16
  410c68:	ret
  410c6c:	sub	sp, sp, #0x70
  410c70:	adrp	x8, 42c000 <__progname@@GLIBC_2.17+0xa30>
  410c74:	add	x8, x8, #0x768
  410c78:	ldp	q0, q1, [x8]
  410c7c:	ldr	q2, [x8, #32]
  410c80:	ldr	x8, [x8, #48]
  410c84:	str	x21, [sp, #80]
  410c88:	mov	w21, w0
  410c8c:	mov	x0, sp
  410c90:	stp	x29, x30, [sp, #64]
  410c94:	stp	x20, x19, [sp, #96]
  410c98:	add	x29, sp, #0x40
  410c9c:	mov	x19, x4
  410ca0:	mov	x20, x3
  410ca4:	stp	q0, q1, [sp]
  410ca8:	str	q2, [sp, #32]
  410cac:	str	x8, [sp, #48]
  410cb0:	bl	40f964 <__fxstatat@plt+0xcdb4>
  410cb4:	mov	x3, sp
  410cb8:	mov	w0, w21
  410cbc:	mov	x1, x20
  410cc0:	mov	x2, x19
  410cc4:	bl	41084c <__fxstatat@plt+0xdc9c>
  410cc8:	ldp	x20, x19, [sp, #96]
  410ccc:	ldr	x21, [sp, #80]
  410cd0:	ldp	x29, x30, [sp, #64]
  410cd4:	add	sp, sp, #0x70
  410cd8:	ret
  410cdc:	stp	x29, x30, [sp, #-16]!
  410ce0:	mov	x3, x2
  410ce4:	mov	x2, x1
  410ce8:	mov	x1, x0
  410cec:	mov	w0, wzr
  410cf0:	mov	x29, sp
  410cf4:	bl	410c54 <__fxstatat@plt+0xe0a4>
  410cf8:	ldp	x29, x30, [sp], #16
  410cfc:	ret
  410d00:	stp	x29, x30, [sp, #-16]!
  410d04:	mov	x4, x3
  410d08:	mov	x3, x2
  410d0c:	mov	x2, x1
  410d10:	mov	x1, x0
  410d14:	mov	w0, wzr
  410d18:	mov	x29, sp
  410d1c:	bl	410c6c <__fxstatat@plt+0xe0bc>
  410d20:	ldp	x29, x30, [sp], #16
  410d24:	ret
  410d28:	stp	x29, x30, [sp, #-16]!
  410d2c:	adrp	x3, 42b000 <_obstack_memory_used@@Base+0x184b8>
  410d30:	add	x3, x3, #0x568
  410d34:	mov	x29, sp
  410d38:	bl	41084c <__fxstatat@plt+0xdc9c>
  410d3c:	ldp	x29, x30, [sp], #16
  410d40:	ret
  410d44:	stp	x29, x30, [sp, #-16]!
  410d48:	mov	x2, x1
  410d4c:	mov	x1, x0
  410d50:	mov	w0, wzr
  410d54:	mov	x29, sp
  410d58:	bl	410d28 <__fxstatat@plt+0xe178>
  410d5c:	ldp	x29, x30, [sp], #16
  410d60:	ret
  410d64:	stp	x29, x30, [sp, #-16]!
  410d68:	mov	x2, #0xffffffffffffffff    	// #-1
  410d6c:	mov	x29, sp
  410d70:	bl	410d28 <__fxstatat@plt+0xe178>
  410d74:	ldp	x29, x30, [sp], #16
  410d78:	ret
  410d7c:	stp	x29, x30, [sp, #-16]!
  410d80:	mov	x1, x0
  410d84:	mov	w0, wzr
  410d88:	mov	x29, sp
  410d8c:	bl	410d64 <__fxstatat@plt+0xe1b4>
  410d90:	ldp	x29, x30, [sp], #16
  410d94:	ret
  410d98:	stp	x29, x30, [sp, #-48]!
  410d9c:	stp	x20, x19, [sp, #32]
  410da0:	mov	x20, x0
  410da4:	mov	w19, w1
  410da8:	mov	w2, #0x5                   	// #5
  410dac:	mov	x0, xzr
  410db0:	mov	x1, x20
  410db4:	str	x21, [sp, #16]
  410db8:	mov	x29, sp
  410dbc:	bl	402ad0 <dcgettext@plt>
  410dc0:	cmp	x0, x20
  410dc4:	b.ne	410e50 <__fxstatat@plt+0xe2a0>  // b.any
  410dc8:	bl	413320 <_obstack_memory_used@@Base+0x7d8>
  410dcc:	mov	w1, #0x55                  	// #85
  410dd0:	mov	w2, #0x54                  	// #84
  410dd4:	mov	w3, #0x46                  	// #70
  410dd8:	mov	w4, #0x2d                  	// #45
  410ddc:	mov	w5, #0x38                  	// #56
  410de0:	mov	w6, wzr
  410de4:	mov	w7, wzr
  410de8:	mov	x21, x0
  410dec:	bl	410e7c <__fxstatat@plt+0xe2cc>
  410df0:	cbz	w0, 410e0c <__fxstatat@plt+0xe25c>
  410df4:	ldrb	w8, [x20]
  410df8:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x64b8>
  410dfc:	adrp	x10, 419000 <_obstack_memory_used@@Base+0x64b8>
  410e00:	add	x9, x9, #0x6b4
  410e04:	add	x10, x10, #0x6b0
  410e08:	b	410e48 <__fxstatat@plt+0xe298>
  410e0c:	mov	w1, #0x47                  	// #71
  410e10:	mov	w2, #0x42                  	// #66
  410e14:	mov	w3, #0x31                  	// #49
  410e18:	mov	w4, #0x38                  	// #56
  410e1c:	mov	w5, #0x30                  	// #48
  410e20:	mov	w6, #0x33                  	// #51
  410e24:	mov	w7, #0x30                  	// #48
  410e28:	mov	x0, x21
  410e2c:	bl	410e7c <__fxstatat@plt+0xe2cc>
  410e30:	cbz	w0, 410e60 <__fxstatat@plt+0xe2b0>
  410e34:	ldrb	w8, [x20]
  410e38:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x64b8>
  410e3c:	adrp	x10, 419000 <_obstack_memory_used@@Base+0x64b8>
  410e40:	add	x9, x9, #0x6bc
  410e44:	add	x10, x10, #0x6b8
  410e48:	cmp	w8, #0x60
  410e4c:	csel	x0, x10, x9, eq  // eq = none
  410e50:	ldp	x20, x19, [sp, #32]
  410e54:	ldr	x21, [sp, #16]
  410e58:	ldp	x29, x30, [sp], #48
  410e5c:	ret
  410e60:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x64b8>
  410e64:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x64b8>
  410e68:	add	x8, x8, #0xac0
  410e6c:	add	x9, x9, #0x6ac
  410e70:	cmp	w19, #0x9
  410e74:	csel	x0, x9, x8, eq  // eq = none
  410e78:	b	410e50 <__fxstatat@plt+0xe2a0>
  410e7c:	stp	x29, x30, [sp, #-80]!
  410e80:	stp	x26, x25, [sp, #16]
  410e84:	mov	x25, x0
  410e88:	and	w0, w1, #0xff
  410e8c:	stp	x24, x23, [sp, #32]
  410e90:	stp	x22, x21, [sp, #48]
  410e94:	stp	x20, x19, [sp, #64]
  410e98:	mov	x29, sp
  410e9c:	mov	w19, w7
  410ea0:	mov	w20, w6
  410ea4:	mov	w21, w5
  410ea8:	mov	w22, w4
  410eac:	mov	w23, w3
  410eb0:	mov	w24, w2
  410eb4:	mov	w26, w1
  410eb8:	bl	40a734 <__fxstatat@plt+0x7b84>
  410ebc:	ldrb	w8, [x25]
  410ec0:	tbz	w0, #0, 410ed8 <__fxstatat@plt+0xe328>
  410ec4:	and	w8, w8, #0xffffffdf
  410ec8:	cmp	w8, w26, uxtb
  410ecc:	b.eq	410ee0 <__fxstatat@plt+0xe330>  // b.none
  410ed0:	mov	w0, wzr
  410ed4:	b	410f10 <__fxstatat@plt+0xe360>
  410ed8:	cmp	w8, w26, uxtb
  410edc:	b.ne	410ed0 <__fxstatat@plt+0xe320>  // b.any
  410ee0:	tst	w26, #0xff
  410ee4:	b.eq	410f0c <__fxstatat@plt+0xe35c>  // b.none
  410ee8:	mov	x0, x25
  410eec:	mov	w1, w24
  410ef0:	mov	w2, w23
  410ef4:	mov	w3, w22
  410ef8:	mov	w4, w21
  410efc:	mov	w5, w20
  410f00:	mov	w6, w19
  410f04:	bl	410f28 <__fxstatat@plt+0xe378>
  410f08:	b	410f10 <__fxstatat@plt+0xe360>
  410f0c:	mov	w0, #0x1                   	// #1
  410f10:	ldp	x20, x19, [sp, #64]
  410f14:	ldp	x22, x21, [sp, #48]
  410f18:	ldp	x24, x23, [sp, #32]
  410f1c:	ldp	x26, x25, [sp, #16]
  410f20:	ldp	x29, x30, [sp], #80
  410f24:	ret
  410f28:	stp	x29, x30, [sp, #-80]!
  410f2c:	stp	x24, x23, [sp, #32]
  410f30:	mov	x24, x0
  410f34:	and	w0, w1, #0xff
  410f38:	str	x25, [sp, #16]
  410f3c:	stp	x22, x21, [sp, #48]
  410f40:	stp	x20, x19, [sp, #64]
  410f44:	mov	x29, sp
  410f48:	mov	w19, w6
  410f4c:	mov	w20, w5
  410f50:	mov	w21, w4
  410f54:	mov	w22, w3
  410f58:	mov	w23, w2
  410f5c:	mov	w25, w1
  410f60:	bl	40a734 <__fxstatat@plt+0x7b84>
  410f64:	ldrb	w8, [x24, #1]
  410f68:	tbz	w0, #0, 410f80 <__fxstatat@plt+0xe3d0>
  410f6c:	and	w8, w8, #0xffffffdf
  410f70:	cmp	w8, w25, uxtb
  410f74:	b.eq	410f88 <__fxstatat@plt+0xe3d8>  // b.none
  410f78:	mov	w0, wzr
  410f7c:	b	410fb4 <__fxstatat@plt+0xe404>
  410f80:	cmp	w8, w25, uxtb
  410f84:	b.ne	410f78 <__fxstatat@plt+0xe3c8>  // b.any
  410f88:	tst	w25, #0xff
  410f8c:	b.eq	410fb0 <__fxstatat@plt+0xe400>  // b.none
  410f90:	mov	x0, x24
  410f94:	mov	w1, w23
  410f98:	mov	w2, w22
  410f9c:	mov	w3, w21
  410fa0:	mov	w4, w20
  410fa4:	mov	w5, w19
  410fa8:	bl	410fcc <__fxstatat@plt+0xe41c>
  410fac:	b	410fb4 <__fxstatat@plt+0xe404>
  410fb0:	mov	w0, #0x1                   	// #1
  410fb4:	ldp	x20, x19, [sp, #64]
  410fb8:	ldp	x22, x21, [sp, #48]
  410fbc:	ldp	x24, x23, [sp, #32]
  410fc0:	ldr	x25, [sp, #16]
  410fc4:	ldp	x29, x30, [sp], #80
  410fc8:	ret
  410fcc:	stp	x29, x30, [sp, #-64]!
  410fd0:	stp	x24, x23, [sp, #16]
  410fd4:	mov	x23, x0
  410fd8:	and	w0, w1, #0xff
  410fdc:	stp	x22, x21, [sp, #32]
  410fe0:	stp	x20, x19, [sp, #48]
  410fe4:	mov	x29, sp
  410fe8:	mov	w19, w5
  410fec:	mov	w20, w4
  410ff0:	mov	w21, w3
  410ff4:	mov	w22, w2
  410ff8:	mov	w24, w1
  410ffc:	bl	40a734 <__fxstatat@plt+0x7b84>
  411000:	ldrb	w8, [x23, #2]
  411004:	tbz	w0, #0, 41101c <__fxstatat@plt+0xe46c>
  411008:	and	w8, w8, #0xffffffdf
  41100c:	cmp	w8, w24, uxtb
  411010:	b.eq	411024 <__fxstatat@plt+0xe474>  // b.none
  411014:	mov	w0, wzr
  411018:	b	41104c <__fxstatat@plt+0xe49c>
  41101c:	cmp	w8, w24, uxtb
  411020:	b.ne	411014 <__fxstatat@plt+0xe464>  // b.any
  411024:	tst	w24, #0xff
  411028:	b.eq	411048 <__fxstatat@plt+0xe498>  // b.none
  41102c:	mov	x0, x23
  411030:	mov	w1, w22
  411034:	mov	w2, w21
  411038:	mov	w3, w20
  41103c:	mov	w4, w19
  411040:	bl	411060 <__fxstatat@plt+0xe4b0>
  411044:	b	41104c <__fxstatat@plt+0xe49c>
  411048:	mov	w0, #0x1                   	// #1
  41104c:	ldp	x20, x19, [sp, #48]
  411050:	ldp	x22, x21, [sp, #32]
  411054:	ldp	x24, x23, [sp, #16]
  411058:	ldp	x29, x30, [sp], #64
  41105c:	ret
  411060:	stp	x29, x30, [sp, #-64]!
  411064:	stp	x22, x21, [sp, #32]
  411068:	mov	x22, x0
  41106c:	and	w0, w1, #0xff
  411070:	str	x23, [sp, #16]
  411074:	stp	x20, x19, [sp, #48]
  411078:	mov	x29, sp
  41107c:	mov	w19, w4
  411080:	mov	w20, w3
  411084:	mov	w21, w2
  411088:	mov	w23, w1
  41108c:	bl	40a734 <__fxstatat@plt+0x7b84>
  411090:	ldrb	w8, [x22, #3]
  411094:	tbz	w0, #0, 4110ac <__fxstatat@plt+0xe4fc>
  411098:	and	w8, w8, #0xffffffdf
  41109c:	cmp	w8, w23, uxtb
  4110a0:	b.eq	4110b4 <__fxstatat@plt+0xe504>  // b.none
  4110a4:	mov	w0, wzr
  4110a8:	b	4110d8 <__fxstatat@plt+0xe528>
  4110ac:	cmp	w8, w23, uxtb
  4110b0:	b.ne	4110a4 <__fxstatat@plt+0xe4f4>  // b.any
  4110b4:	tst	w23, #0xff
  4110b8:	b.eq	4110d4 <__fxstatat@plt+0xe524>  // b.none
  4110bc:	mov	x0, x22
  4110c0:	mov	w1, w21
  4110c4:	mov	w2, w20
  4110c8:	mov	w3, w19
  4110cc:	bl	4110ec <__fxstatat@plt+0xe53c>
  4110d0:	b	4110d8 <__fxstatat@plt+0xe528>
  4110d4:	mov	w0, #0x1                   	// #1
  4110d8:	ldp	x20, x19, [sp, #48]
  4110dc:	ldp	x22, x21, [sp, #32]
  4110e0:	ldr	x23, [sp, #16]
  4110e4:	ldp	x29, x30, [sp], #64
  4110e8:	ret
  4110ec:	stp	x29, x30, [sp, #-48]!
  4110f0:	stp	x22, x21, [sp, #16]
  4110f4:	mov	x21, x0
  4110f8:	and	w0, w1, #0xff
  4110fc:	stp	x20, x19, [sp, #32]
  411100:	mov	x29, sp
  411104:	mov	w19, w3
  411108:	mov	w20, w2
  41110c:	mov	w22, w1
  411110:	bl	40a734 <__fxstatat@plt+0x7b84>
  411114:	ldrb	w8, [x21, #4]
  411118:	tbz	w0, #0, 411130 <__fxstatat@plt+0xe580>
  41111c:	and	w8, w8, #0xffffffdf
  411120:	cmp	w8, w22, uxtb
  411124:	b.eq	411138 <__fxstatat@plt+0xe588>  // b.none
  411128:	mov	w0, wzr
  41112c:	b	411158 <__fxstatat@plt+0xe5a8>
  411130:	cmp	w8, w22, uxtb
  411134:	b.ne	411128 <__fxstatat@plt+0xe578>  // b.any
  411138:	tst	w22, #0xff
  41113c:	b.eq	411154 <__fxstatat@plt+0xe5a4>  // b.none
  411140:	mov	x0, x21
  411144:	mov	w1, w20
  411148:	mov	w2, w19
  41114c:	bl	411168 <__fxstatat@plt+0xe5b8>
  411150:	b	411158 <__fxstatat@plt+0xe5a8>
  411154:	mov	w0, #0x1                   	// #1
  411158:	ldp	x20, x19, [sp, #32]
  41115c:	ldp	x22, x21, [sp, #16]
  411160:	ldp	x29, x30, [sp], #48
  411164:	ret
  411168:	stp	x29, x30, [sp, #-48]!
  41116c:	stp	x20, x19, [sp, #32]
  411170:	mov	x20, x0
  411174:	and	w0, w1, #0xff
  411178:	str	x21, [sp, #16]
  41117c:	mov	x29, sp
  411180:	mov	w19, w2
  411184:	mov	w21, w1
  411188:	bl	40a734 <__fxstatat@plt+0x7b84>
  41118c:	ldrb	w8, [x20, #5]
  411190:	tbz	w0, #0, 4111a8 <__fxstatat@plt+0xe5f8>
  411194:	and	w8, w8, #0xffffffdf
  411198:	cmp	w8, w21, uxtb
  41119c:	b.eq	4111b0 <__fxstatat@plt+0xe600>  // b.none
  4111a0:	mov	w0, wzr
  4111a4:	b	4111cc <__fxstatat@plt+0xe61c>
  4111a8:	cmp	w8, w21, uxtb
  4111ac:	b.ne	4111a0 <__fxstatat@plt+0xe5f0>  // b.any
  4111b0:	tst	w21, #0xff
  4111b4:	b.eq	4111c8 <__fxstatat@plt+0xe618>  // b.none
  4111b8:	mov	x0, x20
  4111bc:	mov	w1, w19
  4111c0:	bl	4111dc <__fxstatat@plt+0xe62c>
  4111c4:	b	4111cc <__fxstatat@plt+0xe61c>
  4111c8:	mov	w0, #0x1                   	// #1
  4111cc:	ldp	x20, x19, [sp, #32]
  4111d0:	ldr	x21, [sp, #16]
  4111d4:	ldp	x29, x30, [sp], #48
  4111d8:	ret
  4111dc:	stp	x29, x30, [sp, #-32]!
  4111e0:	stp	x20, x19, [sp, #16]
  4111e4:	mov	x19, x0
  4111e8:	and	w0, w1, #0xff
  4111ec:	mov	x29, sp
  4111f0:	mov	w20, w1
  4111f4:	bl	40a734 <__fxstatat@plt+0x7b84>
  4111f8:	ldrb	w8, [x19, #6]
  4111fc:	tbz	w0, #0, 411214 <__fxstatat@plt+0xe664>
  411200:	and	w8, w8, #0xffffffdf
  411204:	cmp	w8, w20, uxtb
  411208:	b.eq	41121c <__fxstatat@plt+0xe66c>  // b.none
  41120c:	mov	w0, wzr
  411210:	b	411234 <__fxstatat@plt+0xe684>
  411214:	cmp	w8, w20, uxtb
  411218:	b.ne	41120c <__fxstatat@plt+0xe65c>  // b.any
  41121c:	tst	w20, #0xff
  411220:	b.eq	411230 <__fxstatat@plt+0xe680>  // b.none
  411224:	mov	x0, x19
  411228:	bl	411240 <__fxstatat@plt+0xe690>
  41122c:	b	411234 <__fxstatat@plt+0xe684>
  411230:	mov	w0, #0x1                   	// #1
  411234:	ldp	x20, x19, [sp, #16]
  411238:	ldp	x29, x30, [sp], #32
  41123c:	ret
  411240:	stp	x29, x30, [sp, #-32]!
  411244:	str	x19, [sp, #16]
  411248:	mov	x19, x0
  41124c:	mov	w0, wzr
  411250:	mov	x29, sp
  411254:	bl	40a734 <__fxstatat@plt+0x7b84>
  411258:	ldrb	w8, [x19, #7]
  41125c:	tbz	w0, #0, 411270 <__fxstatat@plt+0xe6c0>
  411260:	tst	w8, #0xffffffdf
  411264:	b.eq	411274 <__fxstatat@plt+0xe6c4>  // b.none
  411268:	mov	w0, wzr
  41126c:	b	411278 <__fxstatat@plt+0xe6c8>
  411270:	cbnz	w8, 411268 <__fxstatat@plt+0xe6b8>
  411274:	mov	w0, #0x1                   	// #1
  411278:	ldr	x19, [sp, #16]
  41127c:	ldp	x29, x30, [sp], #32
  411280:	ret
  411284:	stp	x29, x30, [sp, #-16]!
  411288:	mov	x3, x1
  41128c:	mov	x1, x0
  411290:	mov	w0, #0xffffff9c            	// #-100
  411294:	mov	w2, #0xffffff9c            	// #-100
  411298:	mov	x29, sp
  41129c:	bl	4112ac <__fxstatat@plt+0xe6fc>
  4112a0:	and	w0, w0, #0x1
  4112a4:	ldp	x29, x30, [sp], #16
  4112a8:	ret
  4112ac:	sub	sp, sp, #0x150
  4112b0:	stp	x22, x21, [sp, #304]
  4112b4:	mov	w21, w0
  4112b8:	mov	x0, x1
  4112bc:	stp	x29, x30, [sp, #256]
  4112c0:	stp	x28, x25, [sp, #272]
  4112c4:	stp	x24, x23, [sp, #288]
  4112c8:	stp	x20, x19, [sp, #320]
  4112cc:	add	x29, sp, #0x100
  4112d0:	mov	x20, x3
  4112d4:	mov	w19, w2
  4112d8:	mov	x22, x1
  4112dc:	bl	40afa0 <__fxstatat@plt+0x83f0>
  4112e0:	mov	x23, x0
  4112e4:	mov	x0, x20
  4112e8:	bl	40afa0 <__fxstatat@plt+0x83f0>
  4112ec:	mov	x24, x0
  4112f0:	mov	x0, x23
  4112f4:	bl	40afec <__fxstatat@plt+0x843c>
  4112f8:	mov	x25, x0
  4112fc:	mov	x0, x24
  411300:	bl	40afec <__fxstatat@plt+0x843c>
  411304:	cmp	x25, x0
  411308:	b.ne	411320 <__fxstatat@plt+0xe770>  // b.any
  41130c:	mov	x2, x0
  411310:	mov	x0, x23
  411314:	mov	x1, x24
  411318:	bl	402810 <bcmp@plt>
  41131c:	cbz	w0, 411344 <__fxstatat@plt+0xe794>
  411320:	mov	w19, wzr
  411324:	mov	w0, w19
  411328:	ldp	x20, x19, [sp, #320]
  41132c:	ldp	x22, x21, [sp, #304]
  411330:	ldp	x24, x23, [sp, #288]
  411334:	ldp	x28, x25, [sp, #272]
  411338:	ldp	x29, x30, [sp, #256]
  41133c:	add	sp, sp, #0x150
  411340:	ret
  411344:	mov	x0, x22
  411348:	bl	4132d0 <_obstack_memory_used@@Base+0x788>
  41134c:	mov	x22, x0
  411350:	add	x2, sp, #0x80
  411354:	mov	w3, #0x100                 	// #256
  411358:	mov	w0, w21
  41135c:	mov	x1, x22
  411360:	bl	414b90 <_obstack_memory_used@@Base+0x2048>
  411364:	cbz	w0, 411384 <__fxstatat@plt+0xe7d4>
  411368:	bl	402b40 <__errno_location@plt>
  41136c:	ldr	w1, [x0]
  411370:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x64b8>
  411374:	add	x2, x2, #0x1b9
  411378:	mov	w0, #0x1                   	// #1
  41137c:	mov	x3, x22
  411380:	bl	4025b0 <error@plt>
  411384:	mov	x0, x22
  411388:	bl	402990 <free@plt>
  41138c:	mov	x0, x20
  411390:	bl	4132d0 <_obstack_memory_used@@Base+0x788>
  411394:	mov	x20, x0
  411398:	mov	x2, sp
  41139c:	mov	w3, #0x100                 	// #256
  4113a0:	mov	w0, w19
  4113a4:	mov	x1, x20
  4113a8:	bl	414b90 <_obstack_memory_used@@Base+0x2048>
  4113ac:	cbz	w0, 4113cc <__fxstatat@plt+0xe81c>
  4113b0:	bl	402b40 <__errno_location@plt>
  4113b4:	ldr	w1, [x0]
  4113b8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x64b8>
  4113bc:	add	x2, x2, #0x1b9
  4113c0:	mov	w0, #0x1                   	// #1
  4113c4:	mov	x3, x20
  4113c8:	bl	4025b0 <error@plt>
  4113cc:	ldp	x11, x8, [sp]
  4113d0:	ldp	x10, x9, [sp, #128]
  4113d4:	mov	x0, x20
  4113d8:	cmp	x9, x8
  4113dc:	cset	w8, eq  // eq = none
  4113e0:	cmp	x10, x11
  4113e4:	cset	w9, eq  // eq = none
  4113e8:	and	w19, w8, w9
  4113ec:	bl	402990 <free@plt>
  4113f0:	b	411324 <__fxstatat@plt+0xe774>
  4113f4:	stp	x29, x30, [sp, #-16]!
  4113f8:	mov	x29, sp
  4113fc:	bl	402b40 <__errno_location@plt>
  411400:	mov	x8, x0
  411404:	mov	w9, #0x5f                  	// #95
  411408:	mov	w0, #0xffffffff            	// #-1
  41140c:	str	w9, [x8]
  411410:	ldp	x29, x30, [sp], #16
  411414:	ret
  411418:	ret
  41141c:	stp	x29, x30, [sp, #-16]!
  411420:	mov	x29, sp
  411424:	bl	402b40 <__errno_location@plt>
  411428:	mov	x8, x0
  41142c:	mov	w9, #0x5f                  	// #95
  411430:	mov	w0, #0xffffffff            	// #-1
  411434:	str	w9, [x8]
  411438:	ldp	x29, x30, [sp], #16
  41143c:	ret
  411440:	stp	x29, x30, [sp, #-16]!
  411444:	mov	x29, sp
  411448:	bl	402b40 <__errno_location@plt>
  41144c:	mov	x8, x0
  411450:	mov	w9, #0x5f                  	// #95
  411454:	mov	w0, #0xffffffff            	// #-1
  411458:	str	w9, [x8]
  41145c:	ldp	x29, x30, [sp], #16
  411460:	ret
  411464:	stp	x29, x30, [sp, #-16]!
  411468:	mov	x29, sp
  41146c:	bl	402b40 <__errno_location@plt>
  411470:	mov	x8, x0
  411474:	mov	w9, #0x5f                  	// #95
  411478:	mov	w0, #0xffffffff            	// #-1
  41147c:	str	w9, [x8]
  411480:	ldp	x29, x30, [sp], #16
  411484:	ret
  411488:	stp	x29, x30, [sp, #-16]!
  41148c:	mov	x29, sp
  411490:	bl	402b40 <__errno_location@plt>
  411494:	mov	x8, x0
  411498:	mov	w9, #0x5f                  	// #95
  41149c:	mov	w0, #0xffffffff            	// #-1
  4114a0:	str	w9, [x8]
  4114a4:	ldp	x29, x30, [sp], #16
  4114a8:	ret
  4114ac:	stp	x29, x30, [sp, #-16]!
  4114b0:	mov	x29, sp
  4114b4:	bl	402b40 <__errno_location@plt>
  4114b8:	mov	x8, x0
  4114bc:	mov	w9, #0x5f                  	// #95
  4114c0:	mov	w0, #0xffffffff            	// #-1
  4114c4:	str	w9, [x8]
  4114c8:	ldp	x29, x30, [sp], #16
  4114cc:	ret
  4114d0:	stp	x29, x30, [sp, #-16]!
  4114d4:	mov	x29, sp
  4114d8:	bl	402b40 <__errno_location@plt>
  4114dc:	mov	x8, x0
  4114e0:	mov	w9, #0x5f                  	// #95
  4114e4:	mov	w0, #0xffffffff            	// #-1
  4114e8:	str	w9, [x8]
  4114ec:	ldp	x29, x30, [sp], #16
  4114f0:	ret
  4114f4:	stp	x29, x30, [sp, #-16]!
  4114f8:	mov	x29, sp
  4114fc:	bl	402b40 <__errno_location@plt>
  411500:	mov	x8, x0
  411504:	mov	w9, #0x5f                  	// #95
  411508:	mov	w0, #0xffffffff            	// #-1
  41150c:	str	w9, [x8]
  411510:	ldp	x29, x30, [sp], #16
  411514:	ret
  411518:	stp	x29, x30, [sp, #-16]!
  41151c:	mov	x29, sp
  411520:	bl	402b40 <__errno_location@plt>
  411524:	mov	x8, x0
  411528:	mov	w9, #0x5f                  	// #95
  41152c:	mov	w0, #0xffffffff            	// #-1
  411530:	str	w9, [x8]
  411534:	ldp	x29, x30, [sp], #16
  411538:	ret
  41153c:	stp	x29, x30, [sp, #-16]!
  411540:	mov	x29, sp
  411544:	bl	402b40 <__errno_location@plt>
  411548:	mov	x8, x0
  41154c:	mov	w9, #0x5f                  	// #95
  411550:	mov	w0, #0xffffffff            	// #-1
  411554:	str	w9, [x8]
  411558:	ldp	x29, x30, [sp], #16
  41155c:	ret
  411560:	stp	x29, x30, [sp, #-16]!
  411564:	mov	x29, sp
  411568:	bl	402b40 <__errno_location@plt>
  41156c:	mov	x8, x0
  411570:	mov	w9, #0x5f                  	// #95
  411574:	mov	w0, #0xffffffff            	// #-1
  411578:	str	w9, [x8]
  41157c:	ldp	x29, x30, [sp], #16
  411580:	ret
  411584:	stp	x29, x30, [sp, #-16]!
  411588:	mov	x29, sp
  41158c:	bl	402b40 <__errno_location@plt>
  411590:	mov	x8, x0
  411594:	mov	w9, #0x5f                  	// #95
  411598:	mov	w0, #0xffffffff            	// #-1
  41159c:	str	w9, [x8]
  4115a0:	ldp	x29, x30, [sp], #16
  4115a4:	ret
  4115a8:	stp	x29, x30, [sp, #-16]!
  4115ac:	mov	x29, sp
  4115b0:	bl	402b40 <__errno_location@plt>
  4115b4:	mov	x8, x0
  4115b8:	mov	w9, #0x5f                  	// #95
  4115bc:	mov	w0, #0xffffffff            	// #-1
  4115c0:	str	w9, [x8]
  4115c4:	ldp	x29, x30, [sp], #16
  4115c8:	ret
  4115cc:	stp	x29, x30, [sp, #-16]!
  4115d0:	mov	x29, sp
  4115d4:	bl	402b40 <__errno_location@plt>
  4115d8:	mov	x8, x0
  4115dc:	mov	w9, #0x5f                  	// #95
  4115e0:	mov	w0, #0xffffffff            	// #-1
  4115e4:	str	w9, [x8]
  4115e8:	ldp	x29, x30, [sp], #16
  4115ec:	ret
  4115f0:	stp	x29, x30, [sp, #-16]!
  4115f4:	mov	x29, sp
  4115f8:	bl	402b40 <__errno_location@plt>
  4115fc:	mov	w8, #0x5f                  	// #95
  411600:	str	w8, [x0]
  411604:	mov	w0, wzr
  411608:	ldp	x29, x30, [sp], #16
  41160c:	ret
  411610:	stp	x29, x30, [sp, #-16]!
  411614:	mov	x29, sp
  411618:	bl	402b40 <__errno_location@plt>
  41161c:	mov	x8, x0
  411620:	mov	w9, #0x5f                  	// #95
  411624:	mov	w0, #0xffffffff            	// #-1
  411628:	str	w9, [x8]
  41162c:	ldp	x29, x30, [sp], #16
  411630:	ret
  411634:	ldr	x0, [x0, #80]
  411638:	ret
  41163c:	ldr	x0, [x0, #112]
  411640:	ret
  411644:	ldr	x0, [x0, #96]
  411648:	ret
  41164c:	mov	x0, xzr
  411650:	ret
  411654:	ldp	x8, x1, [x0, #72]
  411658:	mov	x0, x8
  41165c:	ret
  411660:	ldp	x8, x1, [x0, #104]
  411664:	mov	x0, x8
  411668:	ret
  41166c:	ldp	x8, x1, [x0, #88]
  411670:	mov	x0, x8
  411674:	ret
  411678:	mov	x0, #0xffffffffffffffff    	// #-1
  41167c:	mov	x1, #0xffffffffffffffff    	// #-1
  411680:	ret
  411684:	ret
  411688:	ret
  41168c:	cmp	x0, x2
  411690:	b.ge	41169c <__fxstatat@plt+0xeaec>  // b.tcont
  411694:	mov	w0, #0xffffffff            	// #-1
  411698:	ret
  41169c:	b.le	4116a8 <__fxstatat@plt+0xeaf8>
  4116a0:	mov	w0, #0x1                   	// #1
  4116a4:	ret
  4116a8:	sub	w0, w1, w3
  4116ac:	ret
  4116b0:	orr	x8, x1, x0
  4116b4:	cmp	x8, #0x0
  4116b8:	cset	w8, ne  // ne = any
  4116bc:	cmp	x0, #0x0
  4116c0:	csinv	w0, w8, wzr, ge  // ge = tcont
  4116c4:	ret
  4116c8:	mov	x8, #0xcd6500000000        	// #225833675390976
  4116cc:	movk	x8, #0x41cd, lsl #48
  4116d0:	scvtf	d1, x1
  4116d4:	fmov	d2, x8
  4116d8:	scvtf	d0, x0
  4116dc:	fdiv	d1, d1, d2
  4116e0:	fadd	d0, d1, d0
  4116e4:	ret
  4116e8:	sub	sp, sp, #0x50
  4116ec:	str	x21, [sp, #48]
  4116f0:	stp	x20, x19, [sp, #64]
  4116f4:	mov	x21, x5
  4116f8:	mov	x20, x4
  4116fc:	mov	x5, x3
  411700:	mov	x4, x2
  411704:	mov	x19, x0
  411708:	stp	x29, x30, [sp, #32]
  41170c:	add	x29, sp, #0x20
  411710:	cbz	x1, 411730 <__fxstatat@plt+0xeb80>
  411714:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x64b8>
  411718:	mov	x3, x1
  41171c:	add	x2, x2, #0x6c9
  411720:	mov	w1, #0x1                   	// #1
  411724:	mov	x0, x19
  411728:	bl	402930 <__fprintf_chk@plt>
  41172c:	b	41174c <__fxstatat@plt+0xeb9c>
  411730:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x64b8>
  411734:	add	x2, x2, #0x6d5
  411738:	mov	w1, #0x1                   	// #1
  41173c:	mov	x0, x19
  411740:	mov	x3, x4
  411744:	mov	x4, x5
  411748:	bl	402930 <__fprintf_chk@plt>
  41174c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  411750:	add	x1, x1, #0x6dc
  411754:	mov	w2, #0x5                   	// #5
  411758:	mov	x0, xzr
  41175c:	bl	402ad0 <dcgettext@plt>
  411760:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x64b8>
  411764:	mov	x3, x0
  411768:	add	x2, x2, #0x9a7
  41176c:	mov	w1, #0x1                   	// #1
  411770:	mov	w4, #0x7e3                 	// #2019
  411774:	mov	x0, x19
  411778:	bl	402930 <__fprintf_chk@plt>
  41177c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  411780:	add	x1, x1, #0x6e0
  411784:	mov	w2, #0x5                   	// #5
  411788:	mov	x0, xzr
  41178c:	bl	402ad0 <dcgettext@plt>
  411790:	mov	x1, x19
  411794:	bl	402ae0 <fputs_unlocked@plt>
  411798:	cmp	x21, #0x9
  41179c:	b.hi	4117e4 <__fxstatat@plt+0xec34>  // b.pmore
  4117a0:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x64b8>
  4117a4:	add	x8, x8, #0x6bf
  4117a8:	adr	x9, 4117b8 <__fxstatat@plt+0xec08>
  4117ac:	ldrb	w10, [x8, x21]
  4117b0:	add	x9, x9, x10, lsl #2
  4117b4:	br	x9
  4117b8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  4117bc:	add	x1, x1, #0x7ac
  4117c0:	mov	w2, #0x5                   	// #5
  4117c4:	mov	x0, xzr
  4117c8:	bl	402ad0 <dcgettext@plt>
  4117cc:	ldr	x3, [x20]
  4117d0:	mov	x2, x0
  4117d4:	mov	w1, #0x1                   	// #1
  4117d8:	mov	x0, x19
  4117dc:	bl	402930 <__fprintf_chk@plt>
  4117e0:	b	41197c <__fxstatat@plt+0xedcc>
  4117e4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  4117e8:	add	x1, x1, #0x8eb
  4117ec:	b	411910 <__fxstatat@plt+0xed60>
  4117f0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  4117f4:	add	x1, x1, #0x7bc
  4117f8:	mov	w2, #0x5                   	// #5
  4117fc:	mov	x0, xzr
  411800:	bl	402ad0 <dcgettext@plt>
  411804:	ldp	x3, x4, [x20]
  411808:	mov	x2, x0
  41180c:	mov	w1, #0x1                   	// #1
  411810:	mov	x0, x19
  411814:	bl	402930 <__fprintf_chk@plt>
  411818:	b	41197c <__fxstatat@plt+0xedcc>
  41181c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  411820:	add	x1, x1, #0x7d3
  411824:	mov	w2, #0x5                   	// #5
  411828:	mov	x0, xzr
  41182c:	bl	402ad0 <dcgettext@plt>
  411830:	ldp	x3, x4, [x20]
  411834:	ldr	x5, [x20, #16]
  411838:	mov	x2, x0
  41183c:	mov	w1, #0x1                   	// #1
  411840:	mov	x0, x19
  411844:	bl	402930 <__fprintf_chk@plt>
  411848:	b	41197c <__fxstatat@plt+0xedcc>
  41184c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  411850:	add	x1, x1, #0x7ef
  411854:	mov	w2, #0x5                   	// #5
  411858:	mov	x0, xzr
  41185c:	bl	402ad0 <dcgettext@plt>
  411860:	ldp	x3, x4, [x20]
  411864:	ldp	x5, x6, [x20, #16]
  411868:	mov	x2, x0
  41186c:	mov	w1, #0x1                   	// #1
  411870:	mov	x0, x19
  411874:	bl	402930 <__fprintf_chk@plt>
  411878:	b	41197c <__fxstatat@plt+0xedcc>
  41187c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  411880:	add	x1, x1, #0x80f
  411884:	mov	w2, #0x5                   	// #5
  411888:	mov	x0, xzr
  41188c:	bl	402ad0 <dcgettext@plt>
  411890:	ldp	x3, x4, [x20]
  411894:	ldp	x5, x6, [x20, #16]
  411898:	ldr	x7, [x20, #32]
  41189c:	mov	x2, x0
  4118a0:	mov	w1, #0x1                   	// #1
  4118a4:	b	411974 <__fxstatat@plt+0xedc4>
  4118a8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  4118ac:	add	x1, x1, #0x833
  4118b0:	mov	w2, #0x5                   	// #5
  4118b4:	mov	x0, xzr
  4118b8:	bl	402ad0 <dcgettext@plt>
  4118bc:	ldp	x3, x4, [x20]
  4118c0:	ldp	x5, x6, [x20, #16]
  4118c4:	ldp	x7, x8, [x20, #32]
  4118c8:	mov	x2, x0
  4118cc:	b	4118fc <__fxstatat@plt+0xed4c>
  4118d0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  4118d4:	add	x1, x1, #0x85b
  4118d8:	mov	w2, #0x5                   	// #5
  4118dc:	mov	x0, xzr
  4118e0:	bl	402ad0 <dcgettext@plt>
  4118e4:	ldr	x9, [x20, #48]
  4118e8:	ldp	x3, x4, [x20]
  4118ec:	ldp	x5, x6, [x20, #16]
  4118f0:	ldp	x7, x8, [x20, #32]
  4118f4:	mov	x2, x0
  4118f8:	str	x9, [sp, #8]
  4118fc:	mov	w1, #0x1                   	// #1
  411900:	str	x8, [sp]
  411904:	b	411974 <__fxstatat@plt+0xedc4>
  411908:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  41190c:	add	x1, x1, #0x8b7
  411910:	mov	w2, #0x5                   	// #5
  411914:	mov	x0, xzr
  411918:	bl	402ad0 <dcgettext@plt>
  41191c:	ldp	x3, x4, [x20]
  411920:	ldp	x5, x6, [x20, #16]
  411924:	ldr	x7, [x20, #32]
  411928:	ldur	q0, [x20, #40]
  41192c:	ldp	x8, x9, [x20, #56]
  411930:	mov	x2, x0
  411934:	str	x9, [sp, #24]
  411938:	b	411968 <__fxstatat@plt+0xedb8>
  41193c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  411940:	add	x1, x1, #0x887
  411944:	mov	w2, #0x5                   	// #5
  411948:	mov	x0, xzr
  41194c:	bl	402ad0 <dcgettext@plt>
  411950:	ldp	x3, x4, [x20]
  411954:	ldp	x5, x6, [x20, #16]
  411958:	ldr	x7, [x20, #32]
  41195c:	ldur	q0, [x20, #40]
  411960:	ldr	x8, [x20, #56]
  411964:	mov	x2, x0
  411968:	mov	w1, #0x1                   	// #1
  41196c:	str	x8, [sp, #16]
  411970:	str	q0, [sp]
  411974:	mov	x0, x19
  411978:	bl	402930 <__fprintf_chk@plt>
  41197c:	ldp	x20, x19, [sp, #64]
  411980:	ldr	x21, [sp, #48]
  411984:	ldp	x29, x30, [sp, #32]
  411988:	add	sp, sp, #0x50
  41198c:	ret
  411990:	stp	x29, x30, [sp, #-16]!
  411994:	mov	x8, xzr
  411998:	mov	x29, sp
  41199c:	ldr	x9, [x4, x8, lsl #3]
  4119a0:	add	x8, x8, #0x1
  4119a4:	cbnz	x9, 41199c <__fxstatat@plt+0xedec>
  4119a8:	sub	x5, x8, #0x1
  4119ac:	bl	4116e8 <__fxstatat@plt+0xeb38>
  4119b0:	ldp	x29, x30, [sp], #16
  4119b4:	ret
  4119b8:	sub	sp, sp, #0x60
  4119bc:	mov	x5, xzr
  4119c0:	mov	x8, sp
  4119c4:	stp	x29, x30, [sp, #80]
  4119c8:	add	x29, sp, #0x50
  4119cc:	ldrsw	x9, [x4, #24]
  4119d0:	tbz	w9, #31, 4119e4 <__fxstatat@plt+0xee34>
  4119d4:	add	w10, w9, #0x8
  4119d8:	cmp	w10, #0x0
  4119dc:	str	w10, [x4, #24]
  4119e0:	b.le	411a0c <__fxstatat@plt+0xee5c>
  4119e4:	ldr	x9, [x4]
  4119e8:	add	x10, x9, #0x8
  4119ec:	str	x10, [x4]
  4119f0:	ldr	x9, [x9]
  4119f4:	str	x9, [x8, x5, lsl #3]
  4119f8:	cbz	x9, 411a18 <__fxstatat@plt+0xee68>
  4119fc:	add	x5, x5, #0x1
  411a00:	cmp	x5, #0xa
  411a04:	b.ne	4119cc <__fxstatat@plt+0xee1c>  // b.any
  411a08:	b	411a18 <__fxstatat@plt+0xee68>
  411a0c:	ldr	x10, [x4, #8]
  411a10:	add	x9, x10, x9
  411a14:	b	4119f0 <__fxstatat@plt+0xee40>
  411a18:	mov	x4, sp
  411a1c:	bl	4116e8 <__fxstatat@plt+0xeb38>
  411a20:	ldp	x29, x30, [sp, #80]
  411a24:	add	sp, sp, #0x60
  411a28:	ret
  411a2c:	sub	sp, sp, #0xf0
  411a30:	stp	x29, x30, [sp, #224]
  411a34:	add	x29, sp, #0xe0
  411a38:	mov	x8, #0xffffffffffffffe0    	// #-32
  411a3c:	mov	x9, sp
  411a40:	sub	x10, x29, #0x60
  411a44:	movk	x8, #0xff80, lsl #32
  411a48:	add	x11, x29, #0x10
  411a4c:	add	x9, x9, #0x80
  411a50:	add	x10, x10, #0x20
  411a54:	stp	x9, x8, [x29, #-16]
  411a58:	stp	x11, x10, [x29, #-32]
  411a5c:	stp	x4, x5, [x29, #-96]
  411a60:	stp	x6, x7, [x29, #-80]
  411a64:	stp	q0, q1, [sp]
  411a68:	ldp	q0, q1, [x29, #-32]
  411a6c:	sub	x4, x29, #0x40
  411a70:	stp	q2, q3, [sp, #32]
  411a74:	stp	q4, q5, [sp, #64]
  411a78:	stp	q6, q7, [sp, #96]
  411a7c:	stp	q0, q1, [x29, #-64]
  411a80:	bl	4119b8 <__fxstatat@plt+0xee08>
  411a84:	ldp	x29, x30, [sp, #224]
  411a88:	add	sp, sp, #0xf0
  411a8c:	ret
  411a90:	stp	x29, x30, [sp, #-16]!
  411a94:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  411a98:	add	x1, x1, #0x927
  411a9c:	mov	w2, #0x5                   	// #5
  411aa0:	mov	x0, xzr
  411aa4:	mov	x29, sp
  411aa8:	bl	402ad0 <dcgettext@plt>
  411aac:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x64b8>
  411ab0:	mov	x1, x0
  411ab4:	add	x2, x2, #0x93c
  411ab8:	mov	w0, #0x1                   	// #1
  411abc:	bl	4027b0 <__printf_chk@plt>
  411ac0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  411ac4:	add	x1, x1, #0x952
  411ac8:	mov	w2, #0x5                   	// #5
  411acc:	mov	x0, xzr
  411ad0:	bl	402ad0 <dcgettext@plt>
  411ad4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x54b8>
  411ad8:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x64b8>
  411adc:	mov	x1, x0
  411ae0:	add	x2, x2, #0x98e
  411ae4:	add	x3, x3, #0x9c
  411ae8:	mov	w0, #0x1                   	// #1
  411aec:	bl	4027b0 <__printf_chk@plt>
  411af0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  411af4:	add	x1, x1, #0x966
  411af8:	mov	w2, #0x5                   	// #5
  411afc:	mov	x0, xzr
  411b00:	bl	402ad0 <dcgettext@plt>
  411b04:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  411b08:	ldr	x1, [x8, #1480]
  411b0c:	bl	402ae0 <fputs_unlocked@plt>
  411b10:	ldp	x29, x30, [sp], #16
  411b14:	ret
  411b18:	stp	x29, x30, [sp, #-16]!
  411b1c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  411b20:	udiv	x8, x8, x1
  411b24:	cmp	x8, x0
  411b28:	mov	x29, sp
  411b2c:	b.cc	411b40 <__fxstatat@plt+0xef90>  // b.lo, b.ul, b.last
  411b30:	mul	x0, x1, x0
  411b34:	bl	411b44 <__fxstatat@plt+0xef94>
  411b38:	ldp	x29, x30, [sp], #16
  411b3c:	ret
  411b40:	bl	411d48 <__fxstatat@plt+0xf198>
  411b44:	stp	x29, x30, [sp, #-32]!
  411b48:	str	x19, [sp, #16]
  411b4c:	mov	x29, sp
  411b50:	mov	x19, x0
  411b54:	bl	402730 <malloc@plt>
  411b58:	cbz	x19, 411b60 <__fxstatat@plt+0xefb0>
  411b5c:	cbz	x0, 411b6c <__fxstatat@plt+0xefbc>
  411b60:	ldr	x19, [sp, #16]
  411b64:	ldp	x29, x30, [sp], #32
  411b68:	ret
  411b6c:	bl	411d48 <__fxstatat@plt+0xf198>
  411b70:	stp	x29, x30, [sp, #-16]!
  411b74:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  411b78:	udiv	x8, x8, x2
  411b7c:	cmp	x8, x1
  411b80:	mov	x29, sp
  411b84:	b.cc	411b98 <__fxstatat@plt+0xefe8>  // b.lo, b.ul, b.last
  411b88:	mul	x1, x2, x1
  411b8c:	bl	411b9c <__fxstatat@plt+0xefec>
  411b90:	ldp	x29, x30, [sp], #16
  411b94:	ret
  411b98:	bl	411d48 <__fxstatat@plt+0xf198>
  411b9c:	stp	x29, x30, [sp, #-32]!
  411ba0:	str	x19, [sp, #16]
  411ba4:	mov	x19, x1
  411ba8:	mov	x29, sp
  411bac:	cbz	x0, 411bc0 <__fxstatat@plt+0xf010>
  411bb0:	cbnz	x19, 411bc0 <__fxstatat@plt+0xf010>
  411bb4:	bl	402990 <free@plt>
  411bb8:	mov	x0, xzr
  411bbc:	b	411bd0 <__fxstatat@plt+0xf020>
  411bc0:	mov	x1, x19
  411bc4:	bl	402830 <realloc@plt>
  411bc8:	cbz	x19, 411bd0 <__fxstatat@plt+0xf020>
  411bcc:	cbz	x0, 411bdc <__fxstatat@plt+0xf02c>
  411bd0:	ldr	x19, [sp, #16]
  411bd4:	ldp	x29, x30, [sp], #32
  411bd8:	ret
  411bdc:	bl	411d48 <__fxstatat@plt+0xf198>
  411be0:	stp	x29, x30, [sp, #-16]!
  411be4:	ldr	x8, [x1]
  411be8:	mov	x29, sp
  411bec:	cbz	x0, 411c10 <__fxstatat@plt+0xf060>
  411bf0:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  411bf4:	movk	x9, #0x5554
  411bf8:	udiv	x9, x9, x2
  411bfc:	cmp	x9, x8
  411c00:	b.ls	411c48 <__fxstatat@plt+0xf098>  // b.plast
  411c04:	add	x8, x8, x8, lsr #1
  411c08:	add	x8, x8, #0x1
  411c0c:	b	411c34 <__fxstatat@plt+0xf084>
  411c10:	cbnz	x8, 411c24 <__fxstatat@plt+0xf074>
  411c14:	mov	w8, #0x80                  	// #128
  411c18:	udiv	x8, x8, x2
  411c1c:	cmp	x2, #0x80
  411c20:	cinc	x8, x8, hi  // hi = pmore
  411c24:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  411c28:	udiv	x9, x9, x2
  411c2c:	cmp	x9, x8
  411c30:	b.cc	411c48 <__fxstatat@plt+0xf098>  // b.lo, b.ul, b.last
  411c34:	str	x8, [x1]
  411c38:	mul	x1, x8, x2
  411c3c:	bl	411b9c <__fxstatat@plt+0xefec>
  411c40:	ldp	x29, x30, [sp], #16
  411c44:	ret
  411c48:	bl	411d48 <__fxstatat@plt+0xf198>
  411c4c:	stp	x29, x30, [sp, #-16]!
  411c50:	mov	x29, sp
  411c54:	bl	411b44 <__fxstatat@plt+0xef94>
  411c58:	ldp	x29, x30, [sp], #16
  411c5c:	ret
  411c60:	stp	x29, x30, [sp, #-16]!
  411c64:	mov	w2, #0x1                   	// #1
  411c68:	mov	x29, sp
  411c6c:	bl	411be0 <__fxstatat@plt+0xf030>
  411c70:	ldp	x29, x30, [sp], #16
  411c74:	ret
  411c78:	stp	x29, x30, [sp, #-32]!
  411c7c:	stp	x20, x19, [sp, #16]
  411c80:	mov	x29, sp
  411c84:	mov	x19, x0
  411c88:	bl	411b44 <__fxstatat@plt+0xef94>
  411c8c:	mov	w1, wzr
  411c90:	mov	x2, x19
  411c94:	mov	x20, x0
  411c98:	bl	4027c0 <memset@plt>
  411c9c:	mov	x0, x20
  411ca0:	ldp	x20, x19, [sp, #16]
  411ca4:	ldp	x29, x30, [sp], #32
  411ca8:	ret
  411cac:	stp	x29, x30, [sp, #-16]!
  411cb0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  411cb4:	udiv	x8, x8, x1
  411cb8:	cmp	x8, x0
  411cbc:	mov	x29, sp
  411cc0:	b.cc	411cd4 <__fxstatat@plt+0xf124>  // b.lo, b.ul, b.last
  411cc4:	bl	412760 <__fxstatat@plt+0xfbb0>
  411cc8:	cbz	x0, 411cd4 <__fxstatat@plt+0xf124>
  411ccc:	ldp	x29, x30, [sp], #16
  411cd0:	ret
  411cd4:	bl	411d48 <__fxstatat@plt+0xf198>
  411cd8:	stp	x29, x30, [sp, #-48]!
  411cdc:	stp	x20, x19, [sp, #32]
  411ce0:	mov	x20, x0
  411ce4:	mov	x0, x1
  411ce8:	str	x21, [sp, #16]
  411cec:	mov	x29, sp
  411cf0:	mov	x19, x1
  411cf4:	bl	411b44 <__fxstatat@plt+0xef94>
  411cf8:	mov	x1, x20
  411cfc:	mov	x2, x19
  411d00:	mov	x21, x0
  411d04:	bl	4024e0 <memcpy@plt>
  411d08:	mov	x0, x21
  411d0c:	ldp	x20, x19, [sp, #32]
  411d10:	ldr	x21, [sp, #16]
  411d14:	ldp	x29, x30, [sp], #48
  411d18:	ret
  411d1c:	stp	x29, x30, [sp, #-32]!
  411d20:	str	x19, [sp, #16]
  411d24:	mov	x29, sp
  411d28:	mov	x19, x0
  411d2c:	bl	402550 <strlen@plt>
  411d30:	add	x1, x0, #0x1
  411d34:	mov	x0, x19
  411d38:	bl	411cd8 <__fxstatat@plt+0xf128>
  411d3c:	ldr	x19, [sp, #16]
  411d40:	ldp	x29, x30, [sp], #32
  411d44:	ret
  411d48:	stp	x29, x30, [sp, #-32]!
  411d4c:	str	x19, [sp, #16]
  411d50:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  411d54:	ldr	w19, [x8, #1344]
  411d58:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  411d5c:	add	x1, x1, #0x9d6
  411d60:	mov	w2, #0x5                   	// #5
  411d64:	mov	x0, xzr
  411d68:	mov	x29, sp
  411d6c:	bl	402ad0 <dcgettext@plt>
  411d70:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x64b8>
  411d74:	mov	x3, x0
  411d78:	add	x2, x2, #0x1b9
  411d7c:	mov	w0, w19
  411d80:	mov	w1, wzr
  411d84:	bl	4025b0 <error@plt>
  411d88:	bl	4028c0 <abort@plt>
  411d8c:	sub	sp, sp, #0x50
  411d90:	stp	x24, x23, [sp, #32]
  411d94:	stp	x22, x21, [sp, #48]
  411d98:	mov	x22, x3
  411d9c:	mov	x23, x2
  411da0:	mov	w2, w1
  411da4:	add	x3, sp, #0x8
  411da8:	mov	x1, xzr
  411dac:	stp	x29, x30, [sp, #16]
  411db0:	stp	x20, x19, [sp, #64]
  411db4:	add	x29, sp, #0x10
  411db8:	mov	w21, w6
  411dbc:	mov	x19, x5
  411dc0:	mov	x20, x0
  411dc4:	bl	4123f4 <__fxstatat@plt+0xf844>
  411dc8:	cmp	w0, #0x3
  411dcc:	b.eq	411e04 <__fxstatat@plt+0xf254>  // b.none
  411dd0:	cmp	w0, #0x1
  411dd4:	b.eq	411e10 <__fxstatat@plt+0xf260>  // b.none
  411dd8:	cbnz	w0, 411e1c <__fxstatat@plt+0xf26c>
  411ddc:	ldr	x24, [sp, #8]
  411de0:	cmp	x24, x23
  411de4:	b.cc	411df0 <__fxstatat@plt+0xf240>  // b.lo, b.ul, b.last
  411de8:	cmp	x24, x22
  411dec:	b.ls	411e58 <__fxstatat@plt+0xf2a8>  // b.plast
  411df0:	bl	402b40 <__errno_location@plt>
  411df4:	lsr	x8, x24, #30
  411df8:	cbnz	x8, 411e14 <__fxstatat@plt+0xf264>
  411dfc:	mov	w8, #0x22                  	// #34
  411e00:	b	411e18 <__fxstatat@plt+0xf268>
  411e04:	bl	402b40 <__errno_location@plt>
  411e08:	str	wzr, [x0]
  411e0c:	b	411e1c <__fxstatat@plt+0xf26c>
  411e10:	bl	402b40 <__errno_location@plt>
  411e14:	mov	w8, #0x4b                  	// #75
  411e18:	str	w8, [x0]
  411e1c:	cmp	w21, #0x0
  411e20:	csinc	w21, w21, wzr, ne  // ne = any
  411e24:	bl	402b40 <__errno_location@plt>
  411e28:	ldr	w8, [x0]
  411e2c:	mov	x0, x20
  411e30:	cmp	w8, #0x16
  411e34:	csel	w22, wzr, w8, eq  // eq = none
  411e38:	bl	410d7c <__fxstatat@plt+0xe1cc>
  411e3c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x54b8>
  411e40:	mov	x4, x0
  411e44:	add	x2, x2, #0x909
  411e48:	mov	w0, w21
  411e4c:	mov	w1, w22
  411e50:	mov	x3, x19
  411e54:	bl	4025b0 <error@plt>
  411e58:	ldr	x0, [sp, #8]
  411e5c:	ldp	x20, x19, [sp, #64]
  411e60:	ldp	x22, x21, [sp, #48]
  411e64:	ldp	x24, x23, [sp, #32]
  411e68:	ldp	x29, x30, [sp, #16]
  411e6c:	add	sp, sp, #0x50
  411e70:	ret
  411e74:	stp	x29, x30, [sp, #-16]!
  411e78:	mov	w6, w5
  411e7c:	mov	x5, x4
  411e80:	mov	x4, x3
  411e84:	mov	x3, x2
  411e88:	mov	x2, x1
  411e8c:	mov	w1, #0xa                   	// #10
  411e90:	mov	x29, sp
  411e94:	bl	411d8c <__fxstatat@plt+0xf1dc>
  411e98:	ldp	x29, x30, [sp], #16
  411e9c:	ret
  411ea0:	stp	x29, x30, [sp, #-32]!
  411ea4:	mov	x0, xzr
  411ea8:	mov	x1, xzr
  411eac:	str	x19, [sp, #16]
  411eb0:	mov	x29, sp
  411eb4:	bl	402520 <getcwd@plt>
  411eb8:	mov	x19, x0
  411ebc:	cbnz	x0, 411ed0 <__fxstatat@plt+0xf320>
  411ec0:	bl	402b40 <__errno_location@plt>
  411ec4:	ldr	w8, [x0]
  411ec8:	cmp	w8, #0xc
  411ecc:	b.eq	411ee0 <__fxstatat@plt+0xf330>  // b.none
  411ed0:	mov	x0, x19
  411ed4:	ldr	x19, [sp, #16]
  411ed8:	ldp	x29, x30, [sp], #32
  411edc:	ret
  411ee0:	bl	411d48 <__fxstatat@plt+0xf198>
  411ee4:	sub	sp, sp, #0x50
  411ee8:	stp	x24, x23, [sp, #32]
  411eec:	mov	x23, #0x1001                	// #4097
  411ef0:	movk	x23, #0x40, lsl #16
  411ef4:	stp	x22, x21, [sp, #48]
  411ef8:	stp	x20, x19, [sp, #64]
  411efc:	mov	x19, xzr
  411f00:	mov	w8, #0x22                  	// #34
  411f04:	mov	w22, #0x1                   	// #1
  411f08:	movk	x23, #0x10, lsl #32
  411f0c:	stp	x29, x30, [sp, #16]
  411f10:	add	x29, sp, #0x10
  411f14:	str	x8, [sp, #8]
  411f18:	b	411f2c <__fxstatat@plt+0xf37c>
  411f1c:	ldrb	w8, [x19, x24]
  411f20:	cbz	w8, 411f94 <__fxstatat@plt+0xf3e4>
  411f24:	mov	w8, wzr
  411f28:	cbnz	w8, 411f9c <__fxstatat@plt+0xf3ec>
  411f2c:	add	x1, sp, #0x8
  411f30:	mov	x0, x19
  411f34:	bl	411c60 <__fxstatat@plt+0xf0b0>
  411f38:	ldr	x8, [sp, #8]
  411f3c:	mov	x19, x0
  411f40:	sub	x24, x8, #0x2
  411f44:	sub	x21, x8, #0x1
  411f48:	strb	wzr, [x0, x24]
  411f4c:	bl	402b40 <__errno_location@plt>
  411f50:	mov	x20, x0
  411f54:	str	wzr, [x0]
  411f58:	mov	x0, x19
  411f5c:	mov	x1, x21
  411f60:	bl	402a90 <gethostname@plt>
  411f64:	cbz	w0, 411f1c <__fxstatat@plt+0xf36c>
  411f68:	ldr	w21, [x20]
  411f6c:	cmp	w21, #0x24
  411f70:	b.hi	411f80 <__fxstatat@plt+0xf3d0>  // b.pmore
  411f74:	lsl	x8, x22, x21
  411f78:	tst	x8, x23
  411f7c:	b.ne	411f24 <__fxstatat@plt+0xf374>  // b.any
  411f80:	mov	x0, x19
  411f84:	bl	402990 <free@plt>
  411f88:	str	w21, [x20]
  411f8c:	mov	w8, #0x1                   	// #1
  411f90:	b	411f28 <__fxstatat@plt+0xf378>
  411f94:	mov	w8, #0x3                   	// #3
  411f98:	b	411f28 <__fxstatat@plt+0xf378>
  411f9c:	cmp	w8, #0x3
  411fa0:	b.eq	411fa8 <__fxstatat@plt+0xf3f8>  // b.none
  411fa4:	mov	x19, xzr
  411fa8:	mov	x0, x19
  411fac:	ldp	x20, x19, [sp, #64]
  411fb0:	ldp	x22, x21, [sp, #48]
  411fb4:	ldp	x24, x23, [sp, #32]
  411fb8:	ldp	x29, x30, [sp, #16]
  411fbc:	add	sp, sp, #0x50
  411fc0:	ret
  411fc4:	sub	sp, sp, #0x60
  411fc8:	cmp	w2, #0x25
  411fcc:	stp	x29, x30, [sp, #16]
  411fd0:	str	x25, [sp, #32]
  411fd4:	stp	x24, x23, [sp, #48]
  411fd8:	stp	x22, x21, [sp, #64]
  411fdc:	stp	x20, x19, [sp, #80]
  411fe0:	add	x29, sp, #0x10
  411fe4:	b.cs	412290 <__fxstatat@plt+0xf6e0>  // b.hs, b.nlast
  411fe8:	mov	x22, x4
  411fec:	mov	x19, x3
  411ff0:	mov	w24, w2
  411ff4:	mov	x21, x1
  411ff8:	mov	x20, x0
  411ffc:	bl	402b40 <__errno_location@plt>
  412000:	mov	x23, x0
  412004:	str	wzr, [x0]
  412008:	bl	402970 <__ctype_b_loc@plt>
  41200c:	ldr	x8, [x0]
  412010:	mov	x10, x20
  412014:	ldrb	w9, [x10], #1
  412018:	ldrh	w11, [x8, x9, lsl #1]
  41201c:	tbnz	w11, #13, 412014 <__fxstatat@plt+0xf464>
  412020:	cmp	x21, #0x0
  412024:	add	x8, x29, #0x18
  412028:	csel	x21, x8, x21, eq  // eq = none
  41202c:	cmp	w9, #0x2d
  412030:	b.ne	412058 <__fxstatat@plt+0xf4a8>  // b.any
  412034:	mov	w20, #0x4                   	// #4
  412038:	mov	w0, w20
  41203c:	ldp	x20, x19, [sp, #80]
  412040:	ldp	x22, x21, [sp, #64]
  412044:	ldp	x24, x23, [sp, #48]
  412048:	ldr	x25, [sp, #32]
  41204c:	ldp	x29, x30, [sp, #16]
  412050:	add	sp, sp, #0x60
  412054:	ret
  412058:	mov	x0, x20
  41205c:	mov	x1, x21
  412060:	mov	w2, w24
  412064:	bl	402540 <strtoul@plt>
  412068:	str	x0, [sp, #8]
  41206c:	ldr	x25, [x21]
  412070:	cmp	x25, x20
  412074:	b.eq	41211c <__fxstatat@plt+0xf56c>  // b.none
  412078:	ldr	w20, [x23]
  41207c:	cbz	w20, 41208c <__fxstatat@plt+0xf4dc>
  412080:	cmp	w20, #0x22
  412084:	b.ne	412034 <__fxstatat@plt+0xf484>  // b.any
  412088:	mov	w20, #0x1                   	// #1
  41208c:	cbz	x22, 412144 <__fxstatat@plt+0xf594>
  412090:	ldrb	w23, [x25]
  412094:	cbz	w23, 412150 <__fxstatat@plt+0xf5a0>
  412098:	mov	x0, x22
  41209c:	mov	w1, w23
  4120a0:	bl	4029c0 <strchr@plt>
  4120a4:	cbz	x0, 4121a4 <__fxstatat@plt+0xf5f4>
  4120a8:	sub	w8, w23, #0x45
  4120ac:	mov	w1, #0x400                 	// #1024
  4120b0:	cmp	w8, #0x2f
  4120b4:	mov	w24, #0x1                   	// #1
  4120b8:	b.hi	41216c <__fxstatat@plt+0xf5bc>  // b.pmore
  4120bc:	mov	w9, #0x1                   	// #1
  4120c0:	lsl	x8, x9, x8
  4120c4:	mov	x9, #0x8945                	// #35141
  4120c8:	movk	x9, #0x30, lsl #16
  4120cc:	movk	x9, #0x8144, lsl #32
  4120d0:	tst	x8, x9
  4120d4:	b.eq	41216c <__fxstatat@plt+0xf5bc>  // b.none
  4120d8:	mov	w1, #0x30                  	// #48
  4120dc:	mov	x0, x22
  4120e0:	bl	4029c0 <strchr@plt>
  4120e4:	cbz	x0, 412158 <__fxstatat@plt+0xf5a8>
  4120e8:	ldrb	w8, [x25, #1]
  4120ec:	cmp	w8, #0x42
  4120f0:	b.eq	412164 <__fxstatat@plt+0xf5b4>  // b.none
  4120f4:	cmp	w8, #0x44
  4120f8:	b.eq	412164 <__fxstatat@plt+0xf5b4>  // b.none
  4120fc:	cmp	w8, #0x69
  412100:	b.ne	412158 <__fxstatat@plt+0xf5a8>  // b.any
  412104:	ldrb	w8, [x25, #2]
  412108:	mov	w9, #0x3                   	// #3
  41210c:	mov	w1, #0x400                 	// #1024
  412110:	cmp	w8, #0x42
  412114:	csinc	x24, x9, xzr, eq  // eq = none
  412118:	b	41216c <__fxstatat@plt+0xf5bc>
  41211c:	cbz	x22, 412034 <__fxstatat@plt+0xf484>
  412120:	ldrb	w1, [x25]
  412124:	cbz	w1, 412034 <__fxstatat@plt+0xf484>
  412128:	mov	x0, x22
  41212c:	bl	4029c0 <strchr@plt>
  412130:	cbz	x0, 412034 <__fxstatat@plt+0xf484>
  412134:	mov	w8, #0x1                   	// #1
  412138:	mov	w20, wzr
  41213c:	str	x8, [sp, #8]
  412140:	cbnz	x22, 412090 <__fxstatat@plt+0xf4e0>
  412144:	ldr	x8, [sp, #8]
  412148:	str	x8, [x19]
  41214c:	b	412038 <__fxstatat@plt+0xf488>
  412150:	mov	w0, w20
  412154:	b	412280 <__fxstatat@plt+0xf6d0>
  412158:	mov	w1, #0x400                 	// #1024
  41215c:	mov	w24, #0x1                   	// #1
  412160:	b	41216c <__fxstatat@plt+0xf5bc>
  412164:	mov	w1, #0x3e8                 	// #1000
  412168:	mov	w24, #0x2                   	// #2
  41216c:	sub	w8, w23, #0x42
  412170:	cmp	w8, #0x35
  412174:	b.hi	4121a4 <__fxstatat@plt+0xf5f4>  // b.pmore
  412178:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x64b8>
  41217c:	add	x9, x9, #0x9e7
  412180:	adr	x10, 412194 <__fxstatat@plt+0xf5e4>
  412184:	ldrb	w11, [x9, x8]
  412188:	add	x10, x10, x11, lsl #2
  41218c:	mov	w0, wzr
  412190:	br	x10
  412194:	add	x0, sp, #0x8
  412198:	mov	w2, #0x3                   	// #3
  41219c:	bl	4122d8 <__fxstatat@plt+0xf728>
  4121a0:	b	41224c <__fxstatat@plt+0xf69c>
  4121a4:	ldr	x9, [sp, #8]
  4121a8:	mov	w8, wzr
  4121ac:	str	x9, [x19]
  4121b0:	orr	w9, w20, #0x2
  4121b4:	b	412274 <__fxstatat@plt+0xf6c4>
  4121b8:	add	x0, sp, #0x8
  4121bc:	mov	w2, #0x1                   	// #1
  4121c0:	bl	4122d8 <__fxstatat@plt+0xf728>
  4121c4:	b	41224c <__fxstatat@plt+0xf69c>
  4121c8:	add	x0, sp, #0x8
  4121cc:	mov	w2, #0x2                   	// #2
  4121d0:	bl	4122d8 <__fxstatat@plt+0xf728>
  4121d4:	b	41224c <__fxstatat@plt+0xf69c>
  4121d8:	add	x0, sp, #0x8
  4121dc:	mov	w2, #0x4                   	// #4
  4121e0:	bl	4122d8 <__fxstatat@plt+0xf728>
  4121e4:	b	41224c <__fxstatat@plt+0xf69c>
  4121e8:	add	x0, sp, #0x8
  4121ec:	mov	w1, #0x400                 	// #1024
  4121f0:	b	412248 <__fxstatat@plt+0xf698>
  4121f4:	add	x0, sp, #0x8
  4121f8:	mov	w2, #0x6                   	// #6
  4121fc:	bl	4122d8 <__fxstatat@plt+0xf728>
  412200:	b	41224c <__fxstatat@plt+0xf69c>
  412204:	add	x0, sp, #0x8
  412208:	mov	w2, #0x5                   	// #5
  41220c:	bl	4122d8 <__fxstatat@plt+0xf728>
  412210:	b	41224c <__fxstatat@plt+0xf69c>
  412214:	add	x0, sp, #0x8
  412218:	mov	w2, #0x8                   	// #8
  41221c:	bl	4122d8 <__fxstatat@plt+0xf728>
  412220:	b	41224c <__fxstatat@plt+0xf69c>
  412224:	add	x0, sp, #0x8
  412228:	mov	w2, #0x7                   	// #7
  41222c:	bl	4122d8 <__fxstatat@plt+0xf728>
  412230:	b	41224c <__fxstatat@plt+0xf69c>
  412234:	add	x0, sp, #0x8
  412238:	mov	w1, #0x200                 	// #512
  41223c:	b	412248 <__fxstatat@plt+0xf698>
  412240:	add	x0, sp, #0x8
  412244:	mov	w1, #0x2                   	// #2
  412248:	bl	4122b0 <__fxstatat@plt+0xf700>
  41224c:	ldr	x8, [x21]
  412250:	orr	w10, w0, w20
  412254:	orr	w11, w10, #0x2
  412258:	add	x9, x8, x24
  41225c:	str	x9, [x21]
  412260:	ldrb	w9, [x8, x24]
  412264:	mov	w8, #0x1                   	// #1
  412268:	cmp	w9, #0x0
  41226c:	csel	w20, w10, w11, eq  // eq = none
  412270:	mov	w9, #0x4                   	// #4
  412274:	mov	w0, w20
  412278:	mov	w20, w9
  41227c:	cbz	w8, 412038 <__fxstatat@plt+0xf488>
  412280:	ldr	x8, [sp, #8]
  412284:	mov	w20, w0
  412288:	str	x8, [x19]
  41228c:	b	412038 <__fxstatat@plt+0xf488>
  412290:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x64b8>
  412294:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  412298:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x64b8>
  41229c:	add	x0, x0, #0xa1d
  4122a0:	add	x1, x1, #0xa43
  4122a4:	add	x3, x3, #0xa53
  4122a8:	mov	w2, #0x54                  	// #84
  4122ac:	bl	402b30 <__assert_fail@plt>
  4122b0:	ldr	x8, [x0]
  4122b4:	sxtw	x9, w1
  4122b8:	umulh	x10, x9, x8
  4122bc:	mul	x9, x8, x9
  4122c0:	cmp	xzr, x10
  4122c4:	cset	w8, ne  // ne = any
  4122c8:	csinv	x9, x9, xzr, eq  // eq = none
  4122cc:	str	x9, [x0]
  4122d0:	mov	w0, w8
  4122d4:	ret
  4122d8:	stp	x29, x30, [sp, #-48]!
  4122dc:	stp	x22, x21, [sp, #16]
  4122e0:	stp	x20, x19, [sp, #32]
  4122e4:	mov	x29, sp
  4122e8:	cbz	w2, 412318 <__fxstatat@plt+0xf768>
  4122ec:	mov	w19, w2
  4122f0:	mov	w20, w1
  4122f4:	mov	x21, x0
  4122f8:	mov	w22, wzr
  4122fc:	mov	x0, x21
  412300:	mov	w1, w20
  412304:	sub	w19, w19, #0x1
  412308:	bl	4122b0 <__fxstatat@plt+0xf700>
  41230c:	orr	w22, w0, w22
  412310:	cbnz	w19, 4122fc <__fxstatat@plt+0xf74c>
  412314:	b	41231c <__fxstatat@plt+0xf76c>
  412318:	mov	w22, wzr
  41231c:	mov	w0, w22
  412320:	ldp	x20, x19, [sp, #32]
  412324:	ldp	x22, x21, [sp, #16]
  412328:	ldp	x29, x30, [sp], #48
  41232c:	ret
  412330:	stp	x29, x30, [sp, #-16]!
  412334:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  412338:	ldr	w5, [x8, #1344]
  41233c:	mov	x29, sp
  412340:	bl	412348 <__fxstatat@plt+0xf798>
  412344:	bl	4028c0 <abort@plt>
  412348:	sub	sp, sp, #0x40
  41234c:	sub	w9, w0, #0x1
  412350:	cmp	w9, #0x4
  412354:	stp	x29, x30, [sp, #16]
  412358:	stp	x22, x21, [sp, #32]
  41235c:	stp	x20, x19, [sp, #48]
  412360:	add	x29, sp, #0x10
  412364:	b.cs	4123f0 <__fxstatat@plt+0xf840>  // b.hs, b.nlast
  412368:	adrp	x10, 419000 <_obstack_memory_used@@Base+0x64b8>
  41236c:	add	x10, x10, #0xb08
  412370:	mov	w8, w1
  412374:	ldr	x1, [x10, w9, sxtw #3]
  412378:	mov	w20, w5
  41237c:	mov	x19, x4
  412380:	sxtw	x9, w8
  412384:	tbnz	w8, #31, 41239c <__fxstatat@plt+0xf7ec>
  412388:	lsl	x8, x9, #5
  41238c:	ldr	x21, [x3, x8]
  412390:	adrp	x22, 419000 <_obstack_memory_used@@Base+0x64b8>
  412394:	add	x22, x22, #0xaa4
  412398:	b	4123b4 <__fxstatat@plt+0xf804>
  41239c:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x64b8>
  4123a0:	add	x8, x8, #0xaa4
  4123a4:	sub	x21, x29, #0x4
  4123a8:	sturb	w2, [x29, #-4]
  4123ac:	sub	x22, x8, x9
  4123b0:	sturb	wzr, [x29, #-3]
  4123b4:	mov	w2, #0x5                   	// #5
  4123b8:	mov	x0, xzr
  4123bc:	bl	402ad0 <dcgettext@plt>
  4123c0:	mov	x2, x0
  4123c4:	mov	w0, w20
  4123c8:	mov	w1, wzr
  4123cc:	mov	x3, x22
  4123d0:	mov	x4, x21
  4123d4:	mov	x5, x19
  4123d8:	bl	4025b0 <error@plt>
  4123dc:	ldp	x20, x19, [sp, #48]
  4123e0:	ldp	x22, x21, [sp, #32]
  4123e4:	ldp	x29, x30, [sp, #16]
  4123e8:	add	sp, sp, #0x40
  4123ec:	ret
  4123f0:	bl	4028c0 <abort@plt>
  4123f4:	sub	sp, sp, #0x60
  4123f8:	cmp	w2, #0x25
  4123fc:	stp	x29, x30, [sp, #16]
  412400:	str	x25, [sp, #32]
  412404:	stp	x24, x23, [sp, #48]
  412408:	stp	x22, x21, [sp, #64]
  41240c:	stp	x20, x19, [sp, #80]
  412410:	add	x29, sp, #0x10
  412414:	b.cs	4126c0 <__fxstatat@plt+0xfb10>  // b.hs, b.nlast
  412418:	mov	x22, x4
  41241c:	mov	x19, x3
  412420:	mov	w24, w2
  412424:	mov	x21, x1
  412428:	mov	x20, x0
  41242c:	bl	402b40 <__errno_location@plt>
  412430:	mov	x23, x0
  412434:	str	wzr, [x0]
  412438:	bl	402970 <__ctype_b_loc@plt>
  41243c:	ldr	x8, [x0]
  412440:	mov	x10, x20
  412444:	ldrb	w9, [x10], #1
  412448:	ldrh	w11, [x8, x9, lsl #1]
  41244c:	tbnz	w11, #13, 412444 <__fxstatat@plt+0xf894>
  412450:	cmp	x21, #0x0
  412454:	add	x8, x29, #0x18
  412458:	csel	x21, x8, x21, eq  // eq = none
  41245c:	cmp	w9, #0x2d
  412460:	b.ne	412488 <__fxstatat@plt+0xf8d8>  // b.any
  412464:	mov	w20, #0x4                   	// #4
  412468:	mov	w0, w20
  41246c:	ldp	x20, x19, [sp, #80]
  412470:	ldp	x22, x21, [sp, #64]
  412474:	ldp	x24, x23, [sp, #48]
  412478:	ldr	x25, [sp, #32]
  41247c:	ldp	x29, x30, [sp, #16]
  412480:	add	sp, sp, #0x60
  412484:	ret
  412488:	mov	x0, x20
  41248c:	mov	x1, x21
  412490:	mov	w2, w24
  412494:	bl	4028b0 <strtoumax@plt>
  412498:	str	x0, [sp, #8]
  41249c:	ldr	x25, [x21]
  4124a0:	cmp	x25, x20
  4124a4:	b.eq	41254c <__fxstatat@plt+0xf99c>  // b.none
  4124a8:	ldr	w20, [x23]
  4124ac:	cbz	w20, 4124bc <__fxstatat@plt+0xf90c>
  4124b0:	cmp	w20, #0x22
  4124b4:	b.ne	412464 <__fxstatat@plt+0xf8b4>  // b.any
  4124b8:	mov	w20, #0x1                   	// #1
  4124bc:	cbz	x22, 412574 <__fxstatat@plt+0xf9c4>
  4124c0:	ldrb	w23, [x25]
  4124c4:	cbz	w23, 412580 <__fxstatat@plt+0xf9d0>
  4124c8:	mov	x0, x22
  4124cc:	mov	w1, w23
  4124d0:	bl	4029c0 <strchr@plt>
  4124d4:	cbz	x0, 4125d4 <__fxstatat@plt+0xfa24>
  4124d8:	sub	w8, w23, #0x45
  4124dc:	mov	w1, #0x400                 	// #1024
  4124e0:	cmp	w8, #0x2f
  4124e4:	mov	w24, #0x1                   	// #1
  4124e8:	b.hi	41259c <__fxstatat@plt+0xf9ec>  // b.pmore
  4124ec:	mov	w9, #0x1                   	// #1
  4124f0:	lsl	x8, x9, x8
  4124f4:	mov	x9, #0x8945                	// #35141
  4124f8:	movk	x9, #0x30, lsl #16
  4124fc:	movk	x9, #0x8144, lsl #32
  412500:	tst	x8, x9
  412504:	b.eq	41259c <__fxstatat@plt+0xf9ec>  // b.none
  412508:	mov	w1, #0x30                  	// #48
  41250c:	mov	x0, x22
  412510:	bl	4029c0 <strchr@plt>
  412514:	cbz	x0, 412588 <__fxstatat@plt+0xf9d8>
  412518:	ldrb	w8, [x25, #1]
  41251c:	cmp	w8, #0x42
  412520:	b.eq	412594 <__fxstatat@plt+0xf9e4>  // b.none
  412524:	cmp	w8, #0x44
  412528:	b.eq	412594 <__fxstatat@plt+0xf9e4>  // b.none
  41252c:	cmp	w8, #0x69
  412530:	b.ne	412588 <__fxstatat@plt+0xf9d8>  // b.any
  412534:	ldrb	w8, [x25, #2]
  412538:	mov	w9, #0x3                   	// #3
  41253c:	mov	w1, #0x400                 	// #1024
  412540:	cmp	w8, #0x42
  412544:	csinc	x24, x9, xzr, eq  // eq = none
  412548:	b	41259c <__fxstatat@plt+0xf9ec>
  41254c:	cbz	x22, 412464 <__fxstatat@plt+0xf8b4>
  412550:	ldrb	w1, [x25]
  412554:	cbz	w1, 412464 <__fxstatat@plt+0xf8b4>
  412558:	mov	x0, x22
  41255c:	bl	4029c0 <strchr@plt>
  412560:	cbz	x0, 412464 <__fxstatat@plt+0xf8b4>
  412564:	mov	w8, #0x1                   	// #1
  412568:	mov	w20, wzr
  41256c:	str	x8, [sp, #8]
  412570:	cbnz	x22, 4124c0 <__fxstatat@plt+0xf910>
  412574:	ldr	x8, [sp, #8]
  412578:	str	x8, [x19]
  41257c:	b	412468 <__fxstatat@plt+0xf8b8>
  412580:	mov	w0, w20
  412584:	b	4126b0 <__fxstatat@plt+0xfb00>
  412588:	mov	w1, #0x400                 	// #1024
  41258c:	mov	w24, #0x1                   	// #1
  412590:	b	41259c <__fxstatat@plt+0xf9ec>
  412594:	mov	w1, #0x3e8                 	// #1000
  412598:	mov	w24, #0x2                   	// #2
  41259c:	sub	w8, w23, #0x42
  4125a0:	cmp	w8, #0x35
  4125a4:	b.hi	4125d4 <__fxstatat@plt+0xfa24>  // b.pmore
  4125a8:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x64b8>
  4125ac:	add	x9, x9, #0xb28
  4125b0:	adr	x10, 4125c4 <__fxstatat@plt+0xfa14>
  4125b4:	ldrb	w11, [x9, x8]
  4125b8:	add	x10, x10, x11, lsl #2
  4125bc:	mov	w0, wzr
  4125c0:	br	x10
  4125c4:	add	x0, sp, #0x8
  4125c8:	mov	w2, #0x3                   	// #3
  4125cc:	bl	412708 <__fxstatat@plt+0xfb58>
  4125d0:	b	41267c <__fxstatat@plt+0xfacc>
  4125d4:	ldr	x9, [sp, #8]
  4125d8:	mov	w8, wzr
  4125dc:	str	x9, [x19]
  4125e0:	orr	w9, w20, #0x2
  4125e4:	b	4126a4 <__fxstatat@plt+0xfaf4>
  4125e8:	add	x0, sp, #0x8
  4125ec:	mov	w2, #0x1                   	// #1
  4125f0:	bl	412708 <__fxstatat@plt+0xfb58>
  4125f4:	b	41267c <__fxstatat@plt+0xfacc>
  4125f8:	add	x0, sp, #0x8
  4125fc:	mov	w2, #0x2                   	// #2
  412600:	bl	412708 <__fxstatat@plt+0xfb58>
  412604:	b	41267c <__fxstatat@plt+0xfacc>
  412608:	add	x0, sp, #0x8
  41260c:	mov	w2, #0x4                   	// #4
  412610:	bl	412708 <__fxstatat@plt+0xfb58>
  412614:	b	41267c <__fxstatat@plt+0xfacc>
  412618:	add	x0, sp, #0x8
  41261c:	mov	w1, #0x400                 	// #1024
  412620:	b	412678 <__fxstatat@plt+0xfac8>
  412624:	add	x0, sp, #0x8
  412628:	mov	w2, #0x6                   	// #6
  41262c:	bl	412708 <__fxstatat@plt+0xfb58>
  412630:	b	41267c <__fxstatat@plt+0xfacc>
  412634:	add	x0, sp, #0x8
  412638:	mov	w2, #0x5                   	// #5
  41263c:	bl	412708 <__fxstatat@plt+0xfb58>
  412640:	b	41267c <__fxstatat@plt+0xfacc>
  412644:	add	x0, sp, #0x8
  412648:	mov	w2, #0x8                   	// #8
  41264c:	bl	412708 <__fxstatat@plt+0xfb58>
  412650:	b	41267c <__fxstatat@plt+0xfacc>
  412654:	add	x0, sp, #0x8
  412658:	mov	w2, #0x7                   	// #7
  41265c:	bl	412708 <__fxstatat@plt+0xfb58>
  412660:	b	41267c <__fxstatat@plt+0xfacc>
  412664:	add	x0, sp, #0x8
  412668:	mov	w1, #0x200                 	// #512
  41266c:	b	412678 <__fxstatat@plt+0xfac8>
  412670:	add	x0, sp, #0x8
  412674:	mov	w1, #0x2                   	// #2
  412678:	bl	4126e0 <__fxstatat@plt+0xfb30>
  41267c:	ldr	x8, [x21]
  412680:	orr	w10, w0, w20
  412684:	orr	w11, w10, #0x2
  412688:	add	x9, x8, x24
  41268c:	str	x9, [x21]
  412690:	ldrb	w9, [x8, x24]
  412694:	mov	w8, #0x1                   	// #1
  412698:	cmp	w9, #0x0
  41269c:	csel	w20, w10, w11, eq  // eq = none
  4126a0:	mov	w9, #0x4                   	// #4
  4126a4:	mov	w0, w20
  4126a8:	mov	w20, w9
  4126ac:	cbz	w8, 412468 <__fxstatat@plt+0xf8b8>
  4126b0:	ldr	x8, [sp, #8]
  4126b4:	mov	w20, w0
  4126b8:	str	x8, [x19]
  4126bc:	b	412468 <__fxstatat@plt+0xf8b8>
  4126c0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x64b8>
  4126c4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  4126c8:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x64b8>
  4126cc:	add	x0, x0, #0xa1d
  4126d0:	add	x1, x1, #0xa43
  4126d4:	add	x3, x3, #0xb5e
  4126d8:	mov	w2, #0x54                  	// #84
  4126dc:	bl	402b30 <__assert_fail@plt>
  4126e0:	ldr	x8, [x0]
  4126e4:	sxtw	x9, w1
  4126e8:	umulh	x10, x9, x8
  4126ec:	mul	x9, x8, x9
  4126f0:	cmp	xzr, x10
  4126f4:	cset	w8, ne  // ne = any
  4126f8:	csinv	x9, x9, xzr, eq  // eq = none
  4126fc:	str	x9, [x0]
  412700:	mov	w0, w8
  412704:	ret
  412708:	stp	x29, x30, [sp, #-48]!
  41270c:	stp	x22, x21, [sp, #16]
  412710:	stp	x20, x19, [sp, #32]
  412714:	mov	x29, sp
  412718:	cbz	w2, 412748 <__fxstatat@plt+0xfb98>
  41271c:	mov	w19, w2
  412720:	mov	w20, w1
  412724:	mov	x21, x0
  412728:	mov	w22, wzr
  41272c:	mov	x0, x21
  412730:	mov	w1, w20
  412734:	sub	w19, w19, #0x1
  412738:	bl	4126e0 <__fxstatat@plt+0xfb30>
  41273c:	orr	w22, w0, w22
  412740:	cbnz	w19, 41272c <__fxstatat@plt+0xfb7c>
  412744:	b	41274c <__fxstatat@plt+0xfb9c>
  412748:	mov	w22, wzr
  41274c:	mov	w0, w22
  412750:	ldp	x20, x19, [sp, #32]
  412754:	ldp	x22, x21, [sp, #16]
  412758:	ldp	x29, x30, [sp], #48
  41275c:	ret
  412760:	stp	x29, x30, [sp, #-16]!
  412764:	mov	x8, x1
  412768:	mov	w1, #0x1                   	// #1
  41276c:	mov	w9, #0x1                   	// #1
  412770:	mov	x29, sp
  412774:	cbz	x0, 4127a8 <__fxstatat@plt+0xfbf8>
  412778:	cbz	x8, 4127a8 <__fxstatat@plt+0xfbf8>
  41277c:	umulh	x10, x8, x0
  412780:	mov	x1, x8
  412784:	mov	x9, x0
  412788:	cbz	x10, 4127a8 <__fxstatat@plt+0xfbf8>
  41278c:	bl	402b40 <__errno_location@plt>
  412790:	mov	x8, x0
  412794:	mov	w9, #0xc                   	// #12
  412798:	mov	x0, xzr
  41279c:	str	w9, [x8]
  4127a0:	ldp	x29, x30, [sp], #16
  4127a4:	ret
  4127a8:	mov	x0, x9
  4127ac:	bl	402800 <calloc@plt>
  4127b0:	ldp	x29, x30, [sp], #16
  4127b4:	ret
  4127b8:	sub	sp, sp, #0x40
  4127bc:	stp	x29, x30, [sp, #16]
  4127c0:	add	x29, sp, #0x10
  4127c4:	cmp	x0, #0x0
  4127c8:	sub	x8, x29, #0x4
  4127cc:	stp	x20, x19, [sp, #48]
  4127d0:	csel	x20, x8, x0, eq  // eq = none
  4127d4:	mov	x0, x20
  4127d8:	stp	x22, x21, [sp, #32]
  4127dc:	mov	x22, x2
  4127e0:	mov	x19, x1
  4127e4:	bl	4024d0 <mbrtowc@plt>
  4127e8:	mov	x21, x0
  4127ec:	cbz	x22, 412810 <__fxstatat@plt+0xfc60>
  4127f0:	cmn	x21, #0x2
  4127f4:	b.cc	412810 <__fxstatat@plt+0xfc60>  // b.lo, b.ul, b.last
  4127f8:	mov	w0, wzr
  4127fc:	bl	40b904 <__fxstatat@plt+0x8d54>
  412800:	tbnz	w0, #0, 412810 <__fxstatat@plt+0xfc60>
  412804:	ldrb	w8, [x19]
  412808:	mov	w21, #0x1                   	// #1
  41280c:	str	w8, [x20]
  412810:	mov	x0, x21
  412814:	ldp	x20, x19, [sp, #48]
  412818:	ldp	x22, x21, [sp, #32]
  41281c:	ldp	x29, x30, [sp, #16]
  412820:	add	sp, sp, #0x40
  412824:	ret

0000000000412828 <_obstack_begin@@Base>:
  412828:	stp	x29, x30, [sp, #-16]!
  41282c:	ldrb	w8, [x0, #80]
  412830:	mov	x29, sp
  412834:	stp	x3, x4, [x0, #56]
  412838:	and	w8, w8, #0xfe
  41283c:	strb	w8, [x0, #80]
  412840:	bl	412850 <_obstack_begin@@Base+0x28>
  412844:	mov	w0, #0x1                   	// #1
  412848:	ldp	x29, x30, [sp], #16
  41284c:	ret
  412850:	stp	x29, x30, [sp, #-48]!
  412854:	cmp	x2, #0x0
  412858:	mov	w8, #0x10                  	// #16
  41285c:	stp	x20, x19, [sp, #32]
  412860:	mov	w9, #0xfe0                 	// #4064
  412864:	csel	x20, x8, x2, eq  // eq = none
  412868:	cmp	x1, #0x0
  41286c:	str	x21, [sp, #16]
  412870:	csel	x1, x9, x1, eq  // eq = none
  412874:	sub	x21, x20, #0x1
  412878:	mov	x29, sp
  41287c:	mov	x19, x0
  412880:	str	x1, [x0]
  412884:	str	x21, [x0, #48]
  412888:	bl	412a20 <_obstack_newchunk@@Base+0x110>
  41288c:	str	x0, [x19, #8]
  412890:	cbz	x0, 4128d8 <_obstack_begin@@Base+0xb0>
  412894:	ldr	x10, [x19]
  412898:	add	x8, x0, x21
  41289c:	neg	x9, x20
  4128a0:	add	x8, x8, #0x10
  4128a4:	and	x8, x8, x9
  4128a8:	stp	x8, x8, [x19, #16]
  4128ac:	add	x8, x0, x10
  4128b0:	str	x8, [x0]
  4128b4:	str	x8, [x19, #32]
  4128b8:	str	xzr, [x0, #8]
  4128bc:	ldrb	w8, [x19, #80]
  4128c0:	ldr	x21, [sp, #16]
  4128c4:	and	w8, w8, #0xfffffff9
  4128c8:	strb	w8, [x19, #80]
  4128cc:	ldp	x20, x19, [sp, #32]
  4128d0:	ldp	x29, x30, [sp], #48
  4128d4:	ret
  4128d8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  4128dc:	ldr	x8, [x8, #1440]
  4128e0:	blr	x8

00000000004128e4 <_obstack_begin_1@@Base>:
  4128e4:	stp	x29, x30, [sp, #-16]!
  4128e8:	ldrb	w8, [x0, #80]
  4128ec:	mov	x29, sp
  4128f0:	stp	x3, x4, [x0, #56]
  4128f4:	str	x5, [x0, #72]
  4128f8:	orr	w8, w8, #0x1
  4128fc:	strb	w8, [x0, #80]
  412900:	bl	412850 <_obstack_begin@@Base+0x28>
  412904:	mov	w0, #0x1                   	// #1
  412908:	ldp	x29, x30, [sp], #16
  41290c:	ret

0000000000412910 <_obstack_newchunk@@Base>:
  412910:	stp	x29, x30, [sp, #-64]!
  412914:	str	x23, [sp, #16]
  412918:	stp	x22, x21, [sp, #32]
  41291c:	stp	x20, x19, [sp, #48]
  412920:	ldp	x9, x8, [x0, #16]
  412924:	ldr	x10, [x0, #48]
  412928:	ldp	x11, x21, [x0]
  41292c:	mov	x19, x0
  412930:	sub	x20, x8, x9
  412934:	adds	x8, x20, x1
  412938:	lsr	x9, x20, #3
  41293c:	cset	w12, cs  // cs = hs, nlast
  412940:	adds	x10, x8, x10
  412944:	add	x9, x9, #0x64
  412948:	cset	w8, cs  // cs = hs, nlast
  41294c:	adds	x9, x9, x10
  412950:	csel	x9, x10, x9, cs  // cs = hs, nlast
  412954:	cmp	x9, x11
  412958:	mov	x22, xzr
  41295c:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  412960:	mov	x29, sp
  412964:	tbnz	w12, #0, 41297c <_obstack_newchunk@@Base+0x6c>
  412968:	tbnz	w8, #0, 41297c <_obstack_newchunk@@Base+0x6c>
  41296c:	mov	x0, x19
  412970:	mov	x1, x23
  412974:	bl	412a20 <_obstack_newchunk@@Base+0x110>
  412978:	mov	x22, x0
  41297c:	cbz	x22, 412a14 <_obstack_newchunk@@Base+0x104>
  412980:	add	x8, x22, x23
  412984:	str	x22, [x19, #8]
  412988:	str	x21, [x22, #8]
  41298c:	str	x8, [x19, #32]
  412990:	str	x8, [x22]
  412994:	ldr	x8, [x19, #48]
  412998:	ldr	x1, [x19, #16]
  41299c:	mov	x2, x20
  4129a0:	add	x9, x22, x8
  4129a4:	add	x9, x9, #0x10
  4129a8:	bic	x23, x9, x8
  4129ac:	mov	x0, x23
  4129b0:	bl	4024e0 <memcpy@plt>
  4129b4:	ldrb	w8, [x19, #80]
  4129b8:	tbnz	w8, #1, 4129ec <_obstack_newchunk@@Base+0xdc>
  4129bc:	ldr	x8, [x19, #48]
  4129c0:	ldr	x9, [x19, #16]
  4129c4:	add	x10, x21, x8
  4129c8:	add	x10, x10, #0x10
  4129cc:	bic	x8, x10, x8
  4129d0:	cmp	x9, x8
  4129d4:	b.ne	4129ec <_obstack_newchunk@@Base+0xdc>  // b.any
  4129d8:	ldr	x8, [x21, #8]
  4129dc:	mov	x0, x19
  4129e0:	mov	x1, x21
  4129e4:	str	x8, [x22, #8]
  4129e8:	bl	412a58 <_obstack_newchunk@@Base+0x148>
  4129ec:	ldrb	w8, [x19, #80]
  4129f0:	add	x9, x23, x20
  4129f4:	stp	x23, x9, [x19, #16]
  4129f8:	ldr	x23, [sp, #16]
  4129fc:	and	w8, w8, #0xfffffffd
  412a00:	strb	w8, [x19, #80]
  412a04:	ldp	x20, x19, [sp, #48]
  412a08:	ldp	x22, x21, [sp, #32]
  412a0c:	ldp	x29, x30, [sp], #64
  412a10:	ret
  412a14:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  412a18:	ldr	x8, [x8, #1440]
  412a1c:	blr	x8
  412a20:	stp	x29, x30, [sp, #-16]!
  412a24:	ldrb	w8, [x0, #80]
  412a28:	mov	x29, sp
  412a2c:	tbnz	w8, #0, 412a44 <_obstack_newchunk@@Base+0x134>
  412a30:	ldr	x8, [x0, #56]
  412a34:	mov	x0, x1
  412a38:	blr	x8
  412a3c:	ldp	x29, x30, [sp], #16
  412a40:	ret
  412a44:	ldr	x8, [x0, #56]
  412a48:	ldr	x0, [x0, #72]
  412a4c:	blr	x8
  412a50:	ldp	x29, x30, [sp], #16
  412a54:	ret
  412a58:	stp	x29, x30, [sp, #-16]!
  412a5c:	ldrb	w8, [x0, #80]
  412a60:	mov	x29, sp
  412a64:	tbnz	w8, #0, 412a7c <_obstack_newchunk@@Base+0x16c>
  412a68:	ldr	x8, [x0, #64]
  412a6c:	mov	x0, x1
  412a70:	blr	x8
  412a74:	ldp	x29, x30, [sp], #16
  412a78:	ret
  412a7c:	ldp	x8, x0, [x0, #64]
  412a80:	blr	x8
  412a84:	ldp	x29, x30, [sp], #16
  412a88:	ret

0000000000412a8c <_obstack_allocated_p@@Base>:
  412a8c:	ldr	x8, [x0, #8]
  412a90:	b	412a98 <_obstack_allocated_p@@Base+0xc>
  412a94:	ldr	x8, [x8, #8]
  412a98:	cmp	x8, #0x0
  412a9c:	cset	w9, ne  // ne = any
  412aa0:	cbz	x8, 412ab8 <_obstack_allocated_p@@Base+0x2c>
  412aa4:	cmp	x8, x1
  412aa8:	b.cs	412a94 <_obstack_allocated_p@@Base+0x8>  // b.hs, b.nlast
  412aac:	ldr	x10, [x8]
  412ab0:	cmp	x10, x1
  412ab4:	b.cc	412a94 <_obstack_allocated_p@@Base+0x8>  // b.lo, b.ul, b.last
  412ab8:	and	w0, w9, #0x1
  412abc:	ret

0000000000412ac0 <_obstack_free@@Base>:
  412ac0:	stp	x29, x30, [sp, #-48]!
  412ac4:	stp	x20, x19, [sp, #32]
  412ac8:	ldr	x8, [x0, #8]
  412acc:	mov	x20, x1
  412ad0:	str	x21, [sp, #16]
  412ad4:	mov	x29, sp
  412ad8:	cbz	x8, 412b30 <_obstack_free@@Base+0x70>
  412adc:	mov	x19, x0
  412ae0:	b	412b08 <_obstack_free@@Base+0x48>
  412ae4:	ldr	x21, [x8, #8]
  412ae8:	mov	x0, x19
  412aec:	mov	x1, x8
  412af0:	bl	412a58 <_obstack_newchunk@@Base+0x148>
  412af4:	ldrb	w8, [x19, #80]
  412af8:	orr	w8, w8, #0x2
  412afc:	strb	w8, [x19, #80]
  412b00:	mov	x8, x21
  412b04:	cbz	x21, 412b30 <_obstack_free@@Base+0x70>
  412b08:	cmp	x8, x20
  412b0c:	b.cs	412ae4 <_obstack_free@@Base+0x24>  // b.hs, b.nlast
  412b10:	ldr	x9, [x8]
  412b14:	cmp	x9, x20
  412b18:	b.cc	412ae4 <_obstack_free@@Base+0x24>  // b.lo, b.ul, b.last
  412b1c:	stp	x20, x20, [x19, #16]
  412b20:	ldr	x9, [x8]
  412b24:	str	x8, [x19, #8]
  412b28:	str	x9, [x19, #32]
  412b2c:	b	412b34 <_obstack_free@@Base+0x74>
  412b30:	cbnz	x20, 412b44 <_obstack_free@@Base+0x84>
  412b34:	ldp	x20, x19, [sp, #32]
  412b38:	ldr	x21, [sp, #16]
  412b3c:	ldp	x29, x30, [sp], #48
  412b40:	ret
  412b44:	bl	4028c0 <abort@plt>

0000000000412b48 <_obstack_memory_used@@Base>:
  412b48:	ldr	x8, [x0, #8]
  412b4c:	cbz	x8, 412b68 <_obstack_memory_used@@Base+0x20>
  412b50:	mov	x0, xzr
  412b54:	sub	x10, x0, x8
  412b58:	ldp	x9, x8, [x8]
  412b5c:	add	x0, x10, x9
  412b60:	cbnz	x8, 412b54 <_obstack_memory_used@@Base+0xc>
  412b64:	ret
  412b68:	mov	x0, xzr
  412b6c:	ret
  412b70:	stp	x29, x30, [sp, #-32]!
  412b74:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  412b78:	str	x19, [sp, #16]
  412b7c:	ldr	x19, [x8, #1456]
  412b80:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x64b8>
  412b84:	add	x1, x1, #0x9d6
  412b88:	mov	w2, #0x5                   	// #5
  412b8c:	mov	x0, xzr
  412b90:	mov	x29, sp
  412b94:	bl	402ad0 <dcgettext@plt>
  412b98:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x64b8>
  412b9c:	mov	x3, x0
  412ba0:	add	x2, x2, #0x6d1
  412ba4:	mov	w1, #0x1                   	// #1
  412ba8:	mov	x0, x19
  412bac:	bl	402930 <__fprintf_chk@plt>
  412bb0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x184b8>
  412bb4:	ldr	w0, [x8, #1344]
  412bb8:	bl	402580 <exit@plt>
  412bbc:	stp	x29, x30, [sp, #-48]!
  412bc0:	stp	x20, x19, [sp, #32]
  412bc4:	mov	x19, x0
  412bc8:	str	x21, [sp, #16]
  412bcc:	mov	x29, sp
  412bd0:	cbz	x0, 412be4 <_obstack_memory_used@@Base+0x9c>
  412bd4:	mov	x0, x19
  412bd8:	bl	402550 <strlen@plt>
  412bdc:	add	x20, x0, #0x1
  412be0:	b	412be8 <_obstack_memory_used@@Base+0xa0>
  412be4:	mov	x20, xzr
  412be8:	add	x8, x20, #0x11
  412bec:	cmp	x20, #0x77
  412bf0:	and	x8, x8, #0xfffffffffffffff8
  412bf4:	mov	w9, #0x80                  	// #128
  412bf8:	csel	x0, x9, x8, cc  // cc = lo, ul, last
  412bfc:	bl	402730 <malloc@plt>
  412c00:	mov	x21, x0
  412c04:	cbz	x0, 412c30 <_obstack_memory_used@@Base+0xe8>
  412c08:	cmp	x19, #0x0
  412c0c:	mov	x0, x21
  412c10:	cset	w8, ne  // ne = any
  412c14:	str	xzr, [x21]
  412c18:	strb	w8, [x21, #8]
  412c1c:	strb	wzr, [x0, #9]!
  412c20:	cbz	x19, 412c30 <_obstack_memory_used@@Base+0xe8>
  412c24:	mov	x1, x19
  412c28:	mov	x2, x20
  412c2c:	bl	412c44 <_obstack_memory_used@@Base+0xfc>
  412c30:	mov	x0, x21
  412c34:	ldp	x20, x19, [sp, #32]
  412c38:	ldr	x21, [sp, #16]
  412c3c:	ldp	x29, x30, [sp], #48
  412c40:	ret
  412c44:	stp	x29, x30, [sp, #-32]!
  412c48:	stp	x20, x19, [sp, #16]
  412c4c:	mov	x29, sp
  412c50:	mov	x19, x2
  412c54:	mov	x20, x0
  412c58:	bl	4024e0 <memcpy@plt>
  412c5c:	strb	wzr, [x20, x19]
  412c60:	ldp	x20, x19, [sp, #16]
  412c64:	ldp	x29, x30, [sp], #32
  412c68:	ret
  412c6c:	stp	x29, x30, [sp, #-32]!
  412c70:	cmp	x0, #0x2
  412c74:	str	x19, [sp, #16]
  412c78:	mov	x29, sp
  412c7c:	b.cc	412c90 <_obstack_memory_used@@Base+0x148>  // b.lo, b.ul, b.last
  412c80:	ldr	x19, [x0]
  412c84:	bl	402990 <free@plt>
  412c88:	mov	x0, x19
  412c8c:	cbnz	x19, 412c80 <_obstack_memory_used@@Base+0x138>
  412c90:	ldr	x19, [sp, #16]
  412c94:	ldp	x29, x30, [sp], #32
  412c98:	ret
  412c9c:	stp	x29, x30, [sp, #-48]!
  412ca0:	stp	x22, x21, [sp, #16]
  412ca4:	stp	x20, x19, [sp, #32]
  412ca8:	mov	x19, x2
  412cac:	mov	x22, x1
  412cb0:	mov	x29, sp
  412cb4:	cbz	x0, 412cec <_obstack_memory_used@@Base+0x1a4>
  412cb8:	mov	x21, x0
  412cbc:	bl	412d24 <_obstack_memory_used@@Base+0x1dc>
  412cc0:	cbz	x0, 412d14 <_obstack_memory_used@@Base+0x1cc>
  412cc4:	mov	x20, x0
  412cc8:	mov	x0, x22
  412ccc:	mov	x1, x19
  412cd0:	bl	4025d0 <localtime_r@plt>
  412cd4:	cbz	x0, 412cfc <_obstack_memory_used@@Base+0x1b4>
  412cd8:	mov	x0, x21
  412cdc:	mov	x1, x19
  412ce0:	bl	412db4 <_obstack_memory_used@@Base+0x26c>
  412ce4:	eor	w21, w0, #0x1
  412ce8:	b	412d00 <_obstack_memory_used@@Base+0x1b8>
  412cec:	mov	x0, x22
  412cf0:	mov	x1, x19
  412cf4:	bl	4027e0 <gmtime_r@plt>
  412cf8:	b	412d14 <_obstack_memory_used@@Base+0x1cc>
  412cfc:	mov	w21, #0x1                   	// #1
  412d00:	mov	x0, x20
  412d04:	bl	412efc <_obstack_memory_used@@Base+0x3b4>
  412d08:	orn	w8, w21, w0
  412d0c:	tst	w8, #0x1
  412d10:	csel	x0, xzr, x19, ne  // ne = any
  412d14:	ldp	x20, x19, [sp, #32]
  412d18:	ldp	x22, x21, [sp, #16]
  412d1c:	ldp	x29, x30, [sp], #48
  412d20:	ret
  412d24:	stp	x29, x30, [sp, #-48]!
  412d28:	str	x21, [sp, #16]
  412d2c:	stp	x20, x19, [sp, #32]
  412d30:	mov	x29, sp
  412d34:	mov	x20, x0
  412d38:	bl	41308c <_obstack_memory_used@@Base+0x544>
  412d3c:	ldrb	w8, [x20, #8]
  412d40:	mov	x19, x0
  412d44:	cbz	x0, 412d64 <_obstack_memory_used@@Base+0x21c>
  412d48:	cbz	w8, 412d68 <_obstack_memory_used@@Base+0x220>
  412d4c:	add	x0, x20, #0x9
  412d50:	mov	x1, x19
  412d54:	bl	402950 <strcmp@plt>
  412d58:	cbnz	w0, 412d68 <_obstack_memory_used@@Base+0x220>
  412d5c:	mov	w19, #0x1                   	// #1
  412d60:	b	412da0 <_obstack_memory_used@@Base+0x258>
  412d64:	cbz	w8, 412d5c <_obstack_memory_used@@Base+0x214>
  412d68:	mov	x0, x19
  412d6c:	bl	412bbc <_obstack_memory_used@@Base+0x74>
  412d70:	mov	x19, x0
  412d74:	cbz	x0, 412da0 <_obstack_memory_used@@Base+0x258>
  412d78:	mov	x0, x20
  412d7c:	bl	4130a8 <_obstack_memory_used@@Base+0x560>
  412d80:	tbnz	w0, #0, 412da0 <_obstack_memory_used@@Base+0x258>
  412d84:	bl	402b40 <__errno_location@plt>
  412d88:	ldr	w21, [x0]
  412d8c:	mov	x20, x0
  412d90:	mov	x0, x19
  412d94:	bl	412c6c <_obstack_memory_used@@Base+0x124>
  412d98:	mov	x19, xzr
  412d9c:	str	w21, [x20]
  412da0:	mov	x0, x19
  412da4:	ldp	x20, x19, [sp, #32]
  412da8:	ldr	x21, [sp, #16]
  412dac:	ldp	x29, x30, [sp], #48
  412db0:	ret
  412db4:	stp	x29, x30, [sp, #-64]!
  412db8:	stp	x22, x21, [sp, #32]
  412dbc:	stp	x20, x19, [sp, #48]
  412dc0:	ldr	x21, [x1, #48]
  412dc4:	str	x23, [sp, #16]
  412dc8:	mov	x29, sp
  412dcc:	cbz	x21, 412e5c <_obstack_memory_used@@Base+0x314>
  412dd0:	mov	x19, x1
  412dd4:	mov	x22, x0
  412dd8:	cmp	x21, x1
  412ddc:	b.cc	412dec <_obstack_memory_used@@Base+0x2a4>  // b.lo, b.ul, b.last
  412de0:	add	x8, x19, #0x38
  412de4:	cmp	x21, x8
  412de8:	b.cc	412e5c <_obstack_memory_used@@Base+0x314>  // b.lo, b.ul, b.last
  412dec:	ldrb	w8, [x21]
  412df0:	cbz	w8, 412e50 <_obstack_memory_used@@Base+0x308>
  412df4:	add	x20, x22, #0x9
  412df8:	mov	x0, x20
  412dfc:	mov	x1, x21
  412e00:	bl	402950 <strcmp@plt>
  412e04:	cbz	w0, 412e58 <_obstack_memory_used@@Base+0x310>
  412e08:	ldrb	w8, [x20]
  412e0c:	cbnz	w8, 412e24 <_obstack_memory_used@@Base+0x2dc>
  412e10:	add	x8, x22, #0x9
  412e14:	subs	x23, x20, x8
  412e18:	b.ne	412e74 <_obstack_memory_used@@Base+0x32c>  // b.any
  412e1c:	ldrb	w8, [x22, #8]
  412e20:	cbz	w8, 412e74 <_obstack_memory_used@@Base+0x32c>
  412e24:	mov	x0, x20
  412e28:	bl	402550 <strlen@plt>
  412e2c:	add	x20, x0, x20
  412e30:	ldrb	w8, [x20, #1]!
  412e34:	cbnz	w8, 412df8 <_obstack_memory_used@@Base+0x2b0>
  412e38:	ldr	x8, [x22]
  412e3c:	add	x9, x8, #0x9
  412e40:	cmp	x8, #0x0
  412e44:	csel	x20, x20, x9, eq  // eq = none
  412e48:	csel	x22, x22, x8, eq  // eq = none
  412e4c:	b	412df8 <_obstack_memory_used@@Base+0x2b0>
  412e50:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x54b8>
  412e54:	add	x20, x20, #0xe71
  412e58:	str	x20, [x19, #48]
  412e5c:	mov	w0, #0x1                   	// #1
  412e60:	ldp	x20, x19, [sp, #48]
  412e64:	ldp	x22, x21, [sp, #32]
  412e68:	ldr	x23, [sp, #16]
  412e6c:	ldp	x29, x30, [sp], #64
  412e70:	ret
  412e74:	mov	x0, x21
  412e78:	bl	402550 <strlen@plt>
  412e7c:	add	x2, x0, #0x1
  412e80:	mvn	x8, x23
  412e84:	cmp	x2, x8
  412e88:	b.ls	412ea4 <_obstack_memory_used@@Base+0x35c>  // b.plast
  412e8c:	bl	402b40 <__errno_location@plt>
  412e90:	mov	w9, #0xc                   	// #12
  412e94:	mov	w8, wzr
  412e98:	str	w9, [x0]
  412e9c:	tbnz	w8, #0, 412e58 <_obstack_memory_used@@Base+0x310>
  412ea0:	b	412ef4 <_obstack_memory_used@@Base+0x3ac>
  412ea4:	add	x8, x2, x23
  412ea8:	cmp	x8, #0x76
  412eac:	b.hi	412ec8 <_obstack_memory_used@@Base+0x380>  // b.pmore
  412eb0:	mov	x0, x20
  412eb4:	mov	x1, x21
  412eb8:	bl	412c44 <_obstack_memory_used@@Base+0xfc>
  412ebc:	mov	w8, #0x1                   	// #1
  412ec0:	tbnz	w8, #0, 412e58 <_obstack_memory_used@@Base+0x310>
  412ec4:	b	412ef4 <_obstack_memory_used@@Base+0x3ac>
  412ec8:	mov	x0, x21
  412ecc:	bl	412bbc <_obstack_memory_used@@Base+0x74>
  412ed0:	str	x0, [x22]
  412ed4:	cbz	x0, 412eec <_obstack_memory_used@@Base+0x3a4>
  412ed8:	add	x20, x0, #0x9
  412edc:	strb	wzr, [x0, #8]
  412ee0:	mov	w8, #0x1                   	// #1
  412ee4:	tbnz	w8, #0, 412e58 <_obstack_memory_used@@Base+0x310>
  412ee8:	b	412ef4 <_obstack_memory_used@@Base+0x3ac>
  412eec:	mov	w8, wzr
  412ef0:	tbnz	w8, #0, 412e58 <_obstack_memory_used@@Base+0x310>
  412ef4:	mov	w0, wzr
  412ef8:	b	412e60 <_obstack_memory_used@@Base+0x318>
  412efc:	stp	x29, x30, [sp, #-48]!
  412f00:	cmp	x0, #0x1
  412f04:	stp	x22, x21, [sp, #16]
  412f08:	stp	x20, x19, [sp, #32]
  412f0c:	mov	x29, sp
  412f10:	b.eq	412f48 <_obstack_memory_used@@Base+0x400>  // b.none
  412f14:	mov	x19, x0
  412f18:	bl	402b40 <__errno_location@plt>
  412f1c:	ldr	w22, [x0]
  412f20:	mov	x21, x0
  412f24:	mov	x0, x19
  412f28:	bl	4130a8 <_obstack_memory_used@@Base+0x560>
  412f2c:	mov	w20, w0
  412f30:	tbnz	w0, #0, 412f38 <_obstack_memory_used@@Base+0x3f0>
  412f34:	ldr	w22, [x21]
  412f38:	mov	x0, x19
  412f3c:	bl	412c6c <_obstack_memory_used@@Base+0x124>
  412f40:	str	w22, [x21]
  412f44:	b	412f4c <_obstack_memory_used@@Base+0x404>
  412f48:	mov	w20, #0x1                   	// #1
  412f4c:	and	w0, w20, #0x1
  412f50:	ldp	x20, x19, [sp, #32]
  412f54:	ldp	x22, x21, [sp, #16]
  412f58:	ldp	x29, x30, [sp], #48
  412f5c:	ret
  412f60:	sub	sp, sp, #0x70
  412f64:	stp	x20, x19, [sp, #96]
  412f68:	mov	x19, x1
  412f6c:	stp	x29, x30, [sp, #64]
  412f70:	str	x21, [sp, #80]
  412f74:	add	x29, sp, #0x40
  412f78:	cbz	x0, 412fbc <_obstack_memory_used@@Base+0x474>
  412f7c:	mov	x21, x0
  412f80:	bl	412d24 <_obstack_memory_used@@Base+0x1dc>
  412f84:	cbz	x0, 412ffc <_obstack_memory_used@@Base+0x4b4>
  412f88:	mov	x20, x0
  412f8c:	mov	x0, x19
  412f90:	bl	4028a0 <mktime@plt>
  412f94:	cmn	x0, #0x1
  412f98:	str	x0, [x29, #24]
  412f9c:	b.eq	412fc8 <_obstack_memory_used@@Base+0x480>  // b.none
  412fa0:	mov	x0, x21
  412fa4:	mov	x1, x19
  412fa8:	bl	412db4 <_obstack_memory_used@@Base+0x26c>
  412fac:	tbnz	w0, #0, 412fe8 <_obstack_memory_used@@Base+0x4a0>
  412fb0:	mov	x8, #0xffffffffffffffff    	// #-1
  412fb4:	str	x8, [x29, #24]
  412fb8:	b	412fe8 <_obstack_memory_used@@Base+0x4a0>
  412fbc:	mov	x0, x19
  412fc0:	bl	402b80 <timegm@plt>
  412fc4:	b	413000 <_obstack_memory_used@@Base+0x4b8>
  412fc8:	add	x0, x29, #0x18
  412fcc:	add	x1, sp, #0x8
  412fd0:	bl	4025d0 <localtime_r@plt>
  412fd4:	cbz	x0, 412fe8 <_obstack_memory_used@@Base+0x4a0>
  412fd8:	add	x1, sp, #0x8
  412fdc:	mov	x0, x19
  412fe0:	bl	413014 <_obstack_memory_used@@Base+0x4cc>
  412fe4:	cbnz	w0, 412fa0 <_obstack_memory_used@@Base+0x458>
  412fe8:	mov	x0, x20
  412fec:	bl	412efc <_obstack_memory_used@@Base+0x3b4>
  412ff0:	tbz	w0, #0, 412ffc <_obstack_memory_used@@Base+0x4b4>
  412ff4:	ldr	x0, [x29, #24]
  412ff8:	b	413000 <_obstack_memory_used@@Base+0x4b8>
  412ffc:	mov	x0, #0xffffffffffffffff    	// #-1
  413000:	ldp	x20, x19, [sp, #96]
  413004:	ldr	x21, [sp, #80]
  413008:	ldp	x29, x30, [sp, #64]
  41300c:	add	sp, sp, #0x70
  413010:	ret
  413014:	stp	x29, x30, [sp, #-32]!
  413018:	str	x19, [sp, #16]
  41301c:	ldp	w8, w9, [x0]
  413020:	ldp	w10, w11, [x1]
  413024:	ldp	w12, w13, [x0, #8]
  413028:	ldp	w14, w15, [x1, #8]
  41302c:	mov	x29, sp
  413030:	eor	w8, w10, w8
  413034:	eor	w9, w11, w9
  413038:	eor	w11, w14, w12
  41303c:	ldp	w12, w14, [x0, #16]
  413040:	eor	w13, w15, w13
  413044:	ldp	w10, w15, [x1, #16]
  413048:	orr	w8, w9, w8
  41304c:	ldr	w0, [x0, #32]
  413050:	ldr	w1, [x1, #32]
  413054:	orr	w8, w8, w11
  413058:	eor	w10, w10, w12
  41305c:	orr	w8, w8, w13
  413060:	orr	w8, w8, w10
  413064:	eor	w9, w15, w14
  413068:	orr	w19, w8, w9
  41306c:	bl	413120 <_obstack_memory_used@@Base+0x5d8>
  413070:	and	w8, w0, #0x1
  413074:	orr	w8, w19, w8
  413078:	ldr	x19, [sp, #16]
  41307c:	cmp	w8, #0x0
  413080:	cset	w0, eq  // eq = none
  413084:	ldp	x29, x30, [sp], #32
  413088:	ret
  41308c:	stp	x29, x30, [sp, #-16]!
  413090:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x34b8>
  413094:	add	x0, x0, #0xae2
  413098:	mov	x29, sp
  41309c:	bl	402b50 <getenv@plt>
  4130a0:	ldp	x29, x30, [sp], #16
  4130a4:	ret
  4130a8:	stp	x29, x30, [sp, #-16]!
  4130ac:	ldrb	w8, [x0, #8]
  4130b0:	add	x9, x0, #0x9
  4130b4:	mov	x29, sp
  4130b8:	cmp	w8, #0x0
  4130bc:	csel	x0, xzr, x9, eq  // eq = none
  4130c0:	bl	4130e4 <_obstack_memory_used@@Base+0x59c>
  4130c4:	cbz	w0, 4130d4 <_obstack_memory_used@@Base+0x58c>
  4130c8:	mov	w0, wzr
  4130cc:	ldp	x29, x30, [sp], #16
  4130d0:	ret
  4130d4:	bl	402750 <tzset@plt>
  4130d8:	mov	w0, #0x1                   	// #1
  4130dc:	ldp	x29, x30, [sp], #16
  4130e0:	ret
  4130e4:	stp	x29, x30, [sp, #-16]!
  4130e8:	mov	x29, sp
  4130ec:	cbz	x0, 41310c <_obstack_memory_used@@Base+0x5c4>
  4130f0:	mov	x1, x0
  4130f4:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x34b8>
  4130f8:	add	x0, x0, #0xae2
  4130fc:	mov	w2, #0x1                   	// #1
  413100:	bl	4025e0 <setenv@plt>
  413104:	ldp	x29, x30, [sp], #16
  413108:	ret
  41310c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x34b8>
  413110:	add	x0, x0, #0xae2
  413114:	bl	402a40 <unsetenv@plt>
  413118:	ldp	x29, x30, [sp], #16
  41311c:	ret
  413120:	cmp	w0, #0x0
  413124:	orr	w8, w1, w0
  413128:	cset	w9, eq  // eq = none
  41312c:	cmp	w1, #0x0
  413130:	cset	w10, eq  // eq = none
  413134:	cmp	w8, #0x0
  413138:	eor	w8, w9, w10
  41313c:	cset	w9, ge  // ge = tcont
  413140:	and	w0, w9, w8
  413144:	ret
  413148:	mov	w8, w0
  41314c:	cmp	w0, #0x26
  413150:	mov	w0, wzr
  413154:	b.hi	413174 <_obstack_memory_used@@Base+0x62c>  // b.pmore
  413158:	mov	w9, w8
  41315c:	mov	w10, #0x1                   	// #1
  413160:	lsl	x9, x10, x9
  413164:	mov	x10, #0x410000              	// #4259840
  413168:	movk	x10, #0x40, lsl #32
  41316c:	tst	x9, x10
  413170:	b.ne	41317c <_obstack_memory_used@@Base+0x634>  // b.any
  413174:	cmp	w8, #0x5f
  413178:	b.ne	413180 <_obstack_memory_used@@Base+0x638>  // b.any
  41317c:	ret
  413180:	mov	w0, #0x1                   	// #1
  413184:	ret
  413188:	neg	w8, w1
  41318c:	ror	x0, x0, x8
  413190:	ret
  413194:	ror	x0, x0, x1
  413198:	ret
  41319c:	neg	w8, w1
  4131a0:	ror	w0, w0, w8
  4131a4:	ret
  4131a8:	ror	w0, w0, w1
  4131ac:	ret
  4131b0:	sxtw	x9, w1
  4131b4:	neg	x9, x9
  4131b8:	lsl	x8, x0, x1
  4131bc:	lsr	x9, x0, x9
  4131c0:	orr	x0, x9, x8
  4131c4:	ret
  4131c8:	sxtw	x9, w1
  4131cc:	neg	x9, x9
  4131d0:	lsr	x8, x0, x1
  4131d4:	lsl	x9, x0, x9
  4131d8:	orr	x0, x9, x8
  4131dc:	ret
  4131e0:	neg	w10, w1
  4131e4:	and	w8, w0, #0xffff
  4131e8:	and	w9, w1, #0xf
  4131ec:	and	w10, w10, #0xf
  4131f0:	lsl	w9, w0, w9
  4131f4:	lsr	w8, w8, w10
  4131f8:	orr	w0, w9, w8
  4131fc:	ret
  413200:	and	w8, w0, #0xffff
  413204:	and	w9, w1, #0xf
  413208:	neg	w10, w1
  41320c:	lsr	w8, w8, w9
  413210:	and	w9, w10, #0xf
  413214:	lsl	w9, w0, w9
  413218:	orr	w0, w9, w8
  41321c:	ret
  413220:	neg	w10, w1
  413224:	and	w8, w0, #0xff
  413228:	and	w9, w1, #0x7
  41322c:	and	w10, w10, #0x7
  413230:	lsl	w9, w0, w9
  413234:	lsr	w8, w8, w10
  413238:	orr	w0, w9, w8
  41323c:	ret
  413240:	and	w8, w0, #0xff
  413244:	and	w9, w1, #0x7
  413248:	neg	w10, w1
  41324c:	lsr	w8, w8, w9
  413250:	and	w9, w10, #0x7
  413254:	lsl	w9, w0, w9
  413258:	orr	w0, w9, w8
  41325c:	ret
  413260:	stp	x29, x30, [sp, #-48]!
  413264:	str	x21, [sp, #16]
  413268:	stp	x20, x19, [sp, #32]
  41326c:	mov	x29, sp
  413270:	mov	x20, x0
  413274:	bl	402680 <__fpending@plt>
  413278:	mov	x19, x0
  41327c:	mov	x0, x20
  413280:	bl	402610 <ferror_unlocked@plt>
  413284:	mov	w21, w0
  413288:	mov	x0, x20
  41328c:	bl	41335c <_obstack_memory_used@@Base+0x814>
  413290:	cbz	w21, 4132b4 <_obstack_memory_used@@Base+0x76c>
  413294:	cbnz	w0, 4132a0 <_obstack_memory_used@@Base+0x758>
  413298:	bl	402b40 <__errno_location@plt>
  41329c:	str	wzr, [x0]
  4132a0:	mov	w0, #0xffffffff            	// #-1
  4132a4:	ldp	x20, x19, [sp, #32]
  4132a8:	ldr	x21, [sp, #16]
  4132ac:	ldp	x29, x30, [sp], #48
  4132b0:	ret
  4132b4:	cbz	w0, 4132a4 <_obstack_memory_used@@Base+0x75c>
  4132b8:	cbnz	x19, 413294 <_obstack_memory_used@@Base+0x74c>
  4132bc:	bl	402b40 <__errno_location@plt>
  4132c0:	ldr	w8, [x0]
  4132c4:	cmp	w8, #0x9
  4132c8:	csetm	w0, ne  // ne = any
  4132cc:	b	4132a4 <_obstack_memory_used@@Base+0x75c>
  4132d0:	stp	x29, x30, [sp, #-16]!
  4132d4:	mov	x29, sp
  4132d8:	bl	40af34 <__fxstatat@plt+0x8384>
  4132dc:	cbz	x0, 4132e8 <_obstack_memory_used@@Base+0x7a0>
  4132e0:	ldp	x29, x30, [sp], #16
  4132e4:	ret
  4132e8:	bl	411d48 <__fxstatat@plt+0xf198>
  4132ec:	ldrb	w9, [x0]
  4132f0:	cbz	w9, 413310 <_obstack_memory_used@@Base+0x7c8>
  4132f4:	mov	x8, xzr
  4132f8:	add	x10, x0, #0x1
  4132fc:	ror	x8, x8, #55
  413300:	add	x8, x8, w9, uxtb
  413304:	ldrb	w9, [x10], #1
  413308:	cbnz	w9, 4132fc <_obstack_memory_used@@Base+0x7b4>
  41330c:	b	413314 <_obstack_memory_used@@Base+0x7cc>
  413310:	mov	x8, xzr
  413314:	udiv	x9, x8, x1
  413318:	msub	x0, x9, x1, x8
  41331c:	ret
  413320:	stp	x29, x30, [sp, #-16]!
  413324:	mov	w0, #0xe                   	// #14
  413328:	mov	x29, sp
  41332c:	bl	402720 <nl_langinfo@plt>
  413330:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x54b8>
  413334:	add	x8, x8, #0xe71
  413338:	cmp	x0, #0x0
  41333c:	csel	x8, x8, x0, eq  // eq = none
  413340:	ldrb	w9, [x8]
  413344:	adrp	x10, 419000 <_obstack_memory_used@@Base+0x64b8>
  413348:	add	x10, x10, #0xbad
  41334c:	cmp	w9, #0x0
  413350:	csel	x0, x10, x8, eq  // eq = none
  413354:	ldp	x29, x30, [sp], #16
  413358:	ret
  41335c:	stp	x29, x30, [sp, #-32]!
  413360:	stp	x20, x19, [sp, #16]
  413364:	mov	x29, sp
  413368:	mov	x19, x0
  41336c:	bl	4026c0 <fileno@plt>
  413370:	tbnz	w0, #31, 4133b4 <_obstack_memory_used@@Base+0x86c>
  413374:	mov	x0, x19
  413378:	bl	402b00 <__freading@plt>
  41337c:	cbz	w0, 41339c <_obstack_memory_used@@Base+0x854>
  413380:	mov	x0, x19
  413384:	bl	4026c0 <fileno@plt>
  413388:	mov	w2, #0x1                   	// #1
  41338c:	mov	x1, xzr
  413390:	bl	402670 <lseek@plt>
  413394:	cmn	x0, #0x1
  413398:	b.eq	4133c0 <_obstack_memory_used@@Base+0x878>  // b.none
  41339c:	mov	x0, x19
  4133a0:	bl	4133e8 <_obstack_memory_used@@Base+0x8a0>
  4133a4:	cbz	w0, 4133c0 <_obstack_memory_used@@Base+0x878>
  4133a8:	bl	402b40 <__errno_location@plt>
  4133ac:	ldr	w20, [x0]
  4133b0:	b	4133c4 <_obstack_memory_used@@Base+0x87c>
  4133b4:	mov	x0, x19
  4133b8:	bl	402710 <fclose@plt>
  4133bc:	b	4133dc <_obstack_memory_used@@Base+0x894>
  4133c0:	mov	w20, wzr
  4133c4:	mov	x0, x19
  4133c8:	bl	402710 <fclose@plt>
  4133cc:	cbz	w20, 4133dc <_obstack_memory_used@@Base+0x894>
  4133d0:	bl	402b40 <__errno_location@plt>
  4133d4:	str	w20, [x0]
  4133d8:	mov	w0, #0xffffffff            	// #-1
  4133dc:	ldp	x20, x19, [sp, #16]
  4133e0:	ldp	x29, x30, [sp], #32
  4133e4:	ret
  4133e8:	stp	x29, x30, [sp, #-32]!
  4133ec:	str	x19, [sp, #16]
  4133f0:	mov	x19, x0
  4133f4:	mov	x29, sp
  4133f8:	cbz	x0, 413410 <_obstack_memory_used@@Base+0x8c8>
  4133fc:	mov	x0, x19
  413400:	bl	402b00 <__freading@plt>
  413404:	cbz	w0, 413410 <_obstack_memory_used@@Base+0x8c8>
  413408:	mov	x0, x19
  41340c:	bl	413424 <_obstack_memory_used@@Base+0x8dc>
  413410:	mov	x0, x19
  413414:	bl	402a00 <fflush@plt>
  413418:	ldr	x19, [sp, #16]
  41341c:	ldp	x29, x30, [sp], #32
  413420:	ret
  413424:	stp	x29, x30, [sp, #-16]!
  413428:	ldrb	w8, [x0, #1]
  41342c:	mov	x29, sp
  413430:	tbz	w8, #0, 413440 <_obstack_memory_used@@Base+0x8f8>
  413434:	mov	w2, #0x1                   	// #1
  413438:	mov	x1, xzr
  41343c:	bl	413448 <_obstack_memory_used@@Base+0x900>
  413440:	ldp	x29, x30, [sp], #16
  413444:	ret
  413448:	stp	x29, x30, [sp, #-48]!
  41344c:	str	x21, [sp, #16]
  413450:	stp	x20, x19, [sp, #32]
  413454:	ldp	x9, x8, [x0, #8]
  413458:	mov	w20, w2
  41345c:	mov	x19, x0
  413460:	mov	x21, x1
  413464:	cmp	x8, x9
  413468:	mov	x29, sp
  41346c:	b.ne	413484 <_obstack_memory_used@@Base+0x93c>  // b.any
  413470:	ldp	x9, x8, [x19, #32]
  413474:	cmp	x8, x9
  413478:	b.ne	413484 <_obstack_memory_used@@Base+0x93c>  // b.any
  41347c:	ldr	x8, [x19, #72]
  413480:	cbz	x8, 4134a4 <_obstack_memory_used@@Base+0x95c>
  413484:	mov	x0, x19
  413488:	mov	x1, x21
  41348c:	mov	w2, w20
  413490:	bl	402980 <fseeko@plt>
  413494:	ldp	x20, x19, [sp, #32]
  413498:	ldr	x21, [sp, #16]
  41349c:	ldp	x29, x30, [sp], #48
  4134a0:	ret
  4134a4:	mov	x0, x19
  4134a8:	bl	4026c0 <fileno@plt>
  4134ac:	mov	x1, x21
  4134b0:	mov	w2, w20
  4134b4:	bl	402670 <lseek@plt>
  4134b8:	cmn	x0, #0x1
  4134bc:	b.eq	413494 <_obstack_memory_used@@Base+0x94c>  // b.none
  4134c0:	ldr	w9, [x19]
  4134c4:	mov	x8, x0
  4134c8:	mov	w0, wzr
  4134cc:	str	x8, [x19, #144]
  4134d0:	and	w9, w9, #0xffffffef
  4134d4:	str	w9, [x19]
  4134d8:	b	413494 <_obstack_memory_used@@Base+0x94c>
  4134dc:	nop
  4134e0:	stp	x29, x30, [sp, #-48]!
  4134e4:	mov	x29, sp
  4134e8:	str	q0, [sp, #16]
  4134ec:	str	q1, [sp, #32]
  4134f0:	ldp	x2, x0, [sp, #16]
  4134f4:	ldp	x5, x3, [sp, #32]
  4134f8:	mrs	x10, fpcr
  4134fc:	lsr	x1, x0, #63
  413500:	ubfx	x6, x0, #0, #48
  413504:	and	w13, w1, #0xff
  413508:	mov	x14, x1
  41350c:	ubfx	x7, x0, #48, #15
  413510:	cbz	w7, 413930 <_obstack_memory_used@@Base+0xde8>
  413514:	mov	w4, #0x7fff                	// #32767
  413518:	cmp	w7, w4
  41351c:	b.eq	413978 <_obstack_memory_used@@Base+0xe30>  // b.none
  413520:	and	x7, x7, #0xffff
  413524:	extr	x6, x6, x2, #61
  413528:	mov	x15, #0xffffffffffffc001    	// #-16383
  41352c:	orr	x4, x6, #0x8000000000000
  413530:	add	x7, x7, x15
  413534:	lsl	x2, x2, #3
  413538:	mov	x1, #0x0                   	// #0
  41353c:	mov	x16, #0x0                   	// #0
  413540:	mov	w0, #0x0                   	// #0
  413544:	lsr	x8, x3, #63
  413548:	ubfx	x6, x3, #0, #48
  41354c:	and	w15, w8, #0xff
  413550:	ubfx	x9, x3, #48, #15
  413554:	cbz	w9, 4138ec <_obstack_memory_used@@Base+0xda4>
  413558:	mov	w11, #0x7fff                	// #32767
  41355c:	cmp	w9, w11
  413560:	b.eq	413624 <_obstack_memory_used@@Base+0xadc>  // b.none
  413564:	and	x9, x9, #0xffff
  413568:	extr	x6, x6, x5, #61
  41356c:	mov	x12, #0xffffffffffffc001    	// #-16383
  413570:	orr	x6, x6, #0x8000000000000
  413574:	add	x9, x9, x12
  413578:	lsl	x5, x5, #3
  41357c:	sub	x7, x7, x9
  413580:	mov	x9, #0x0                   	// #0
  413584:	eor	w11, w13, w15
  413588:	cmp	x1, #0x9
  41358c:	and	x3, x11, #0xff
  413590:	mov	x12, x3
  413594:	b.gt	4138c4 <_obstack_memory_used@@Base+0xd7c>
  413598:	cmp	x1, #0x7
  41359c:	b.gt	413a84 <_obstack_memory_used@@Base+0xf3c>
  4135a0:	cmp	x1, #0x3
  4135a4:	b.eq	4135c0 <_obstack_memory_used@@Base+0xa78>  // b.none
  4135a8:	b.le	413894 <_obstack_memory_used@@Base+0xd4c>
  4135ac:	cmp	x1, #0x5
  4135b0:	b.eq	4138d4 <_obstack_memory_used@@Base+0xd8c>  // b.none
  4135b4:	b.le	4136b8 <_obstack_memory_used@@Base+0xb70>
  4135b8:	cmp	x1, #0x6
  4135bc:	b.eq	413688 <_obstack_memory_used@@Base+0xb40>  // b.none
  4135c0:	cmp	x9, #0x1
  4135c4:	b.eq	413a08 <_obstack_memory_used@@Base+0xec0>  // b.none
  4135c8:	cbz	x9, 4135dc <_obstack_memory_used@@Base+0xa94>
  4135cc:	cmp	x9, #0x2
  4135d0:	b.eq	413c0c <_obstack_memory_used@@Base+0x10c4>  // b.none
  4135d4:	cmp	x9, #0x3
  4135d8:	b.eq	413bf4 <_obstack_memory_used@@Base+0x10ac>  // b.none
  4135dc:	mov	x1, #0x3fff                	// #16383
  4135e0:	mov	x12, x8
  4135e4:	add	x3, x7, x1
  4135e8:	cmp	x3, #0x0
  4135ec:	b.le	413ac8 <_obstack_memory_used@@Base+0xf80>
  4135f0:	tst	x5, #0x7
  4135f4:	b.ne	413a38 <_obstack_memory_used@@Base+0xef0>  // b.any
  4135f8:	and	w11, w12, #0x1
  4135fc:	tbz	x6, #52, 413608 <_obstack_memory_used@@Base+0xac0>
  413600:	and	x6, x6, #0xffefffffffffffff
  413604:	add	x3, x7, #0x4, lsl #12
  413608:	mov	x1, #0x7ffe                	// #32766
  41360c:	cmp	x3, x1
  413610:	b.gt	413bb0 <_obstack_memory_used@@Base+0x1068>
  413614:	and	w1, w3, #0x7fff
  413618:	extr	x2, x6, x5, #3
  41361c:	ubfx	x6, x6, #3, #48
  413620:	b	413694 <_obstack_memory_used@@Base+0xb4c>
  413624:	mov	x9, #0xffffffffffff8001    	// #-32767
  413628:	orr	x3, x6, x5
  41362c:	add	x7, x7, x9
  413630:	cbz	x3, 4139ac <_obstack_memory_used@@Base+0xe64>
  413634:	tst	x6, #0x800000000000
  413638:	orr	x1, x1, #0x3
  41363c:	csinc	w0, w0, wzr, ne  // ne = any
  413640:	mov	x9, #0x3                   	// #3
  413644:	eor	w11, w13, w15
  413648:	cmp	x1, #0x9
  41364c:	and	x3, x11, #0xff
  413650:	mov	x12, x3
  413654:	b.le	413598 <_obstack_memory_used@@Base+0xa50>
  413658:	cmp	x1, #0xf
  41365c:	b.ne	4138c4 <_obstack_memory_used@@Base+0xd7c>  // b.any
  413660:	tbz	x4, #47, 413a70 <_obstack_memory_used@@Base+0xf28>
  413664:	tbnz	x6, #47, 413a70 <_obstack_memory_used@@Base+0xf28>
  413668:	orr	x6, x6, #0x800000000000
  41366c:	mov	w11, w15
  413670:	and	x6, x6, #0xffffffffffff
  413674:	mov	x2, x5
  413678:	mov	w1, #0x7fff                	// #32767
  41367c:	b	413694 <_obstack_memory_used@@Base+0xb4c>
  413680:	cmp	x1, #0x2
  413684:	b.ne	4136c0 <_obstack_memory_used@@Base+0xb78>  // b.any
  413688:	mov	w1, #0x0                   	// #0
  41368c:	mov	x6, #0x0                   	// #0
  413690:	mov	x2, #0x0                   	// #0
  413694:	mov	x5, #0x0                   	// #0
  413698:	orr	w1, w1, w11, lsl #15
  41369c:	bfxil	x5, x6, #0, #48
  4136a0:	fmov	d0, x2
  4136a4:	bfi	x5, x1, #48, #16
  4136a8:	fmov	v0.d[1], x5
  4136ac:	cbnz	w0, 4138b4 <_obstack_memory_used@@Base+0xd6c>
  4136b0:	ldp	x29, x30, [sp], #48
  4136b4:	ret
  4136b8:	cmp	x1, #0x4
  4136bc:	b.eq	413688 <_obstack_memory_used@@Base+0xb40>  // b.none
  4136c0:	cmp	x4, x6
  4136c4:	b.ls	413a1c <_obstack_memory_used@@Base+0xed4>  // b.plast
  4136c8:	lsr	x3, x4, #1
  4136cc:	extr	x8, x4, x2, #1
  4136d0:	lsl	x2, x2, #63
  4136d4:	ubfx	x14, x6, #20, #32
  4136d8:	extr	x9, x6, x5, #52
  4136dc:	lsl	x13, x5, #12
  4136e0:	and	x15, x9, #0xffffffff
  4136e4:	udiv	x5, x3, x14
  4136e8:	msub	x3, x5, x14, x3
  4136ec:	mul	x1, x15, x5
  4136f0:	extr	x3, x3, x8, #32
  4136f4:	cmp	x1, x3
  4136f8:	b.ls	41370c <_obstack_memory_used@@Base+0xbc4>  // b.plast
  4136fc:	adds	x3, x9, x3
  413700:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
  413704:	b.hi	413cec <_obstack_memory_used@@Base+0x11a4>  // b.pmore
  413708:	sub	x5, x5, #0x1
  41370c:	sub	x3, x3, x1
  413710:	mov	x4, x8
  413714:	udiv	x1, x3, x14
  413718:	msub	x3, x1, x14, x3
  41371c:	mul	x6, x15, x1
  413720:	bfi	x4, x3, #32, #32
  413724:	cmp	x6, x4
  413728:	b.ls	41373c <_obstack_memory_used@@Base+0xbf4>  // b.plast
  41372c:	adds	x4, x9, x4
  413730:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
  413734:	b.hi	413ce0 <_obstack_memory_used@@Base+0x1198>  // b.pmore
  413738:	sub	x1, x1, #0x1
  41373c:	orr	x8, x1, x5, lsl #32
  413740:	and	x17, x13, #0xffffffff
  413744:	and	x1, x8, #0xffffffff
  413748:	lsr	x16, x13, #32
  41374c:	lsr	x5, x8, #32
  413750:	sub	x4, x4, x6
  413754:	mov	x18, #0x100000000           	// #4294967296
  413758:	mul	x3, x1, x17
  41375c:	mul	x30, x5, x17
  413760:	madd	x6, x16, x1, x30
  413764:	and	x1, x3, #0xffffffff
  413768:	mul	x5, x5, x16
  41376c:	add	x3, x6, x3, lsr #32
  413770:	add	x6, x5, x18
  413774:	cmp	x30, x3
  413778:	csel	x5, x6, x5, hi  // hi = pmore
  41377c:	add	x1, x1, x3, lsl #32
  413780:	add	x5, x5, x3, lsr #32
  413784:	cmp	x4, x5
  413788:	b.cc	413a94 <_obstack_memory_used@@Base+0xf4c>  // b.lo, b.ul, b.last
  41378c:	ccmp	x2, x1, #0x2, eq  // eq = none
  413790:	mov	x6, x8
  413794:	b.cc	413a94 <_obstack_memory_used@@Base+0xf4c>  // b.lo, b.ul, b.last
  413798:	subs	x8, x2, x1
  41379c:	mov	x3, #0x3fff                	// #16383
  4137a0:	cmp	x2, x1
  4137a4:	add	x3, x7, x3
  4137a8:	sbc	x4, x4, x5
  4137ac:	cmp	x9, x4
  4137b0:	b.eq	413cf8 <_obstack_memory_used@@Base+0x11b0>  // b.none
  4137b4:	udiv	x5, x4, x14
  4137b8:	msub	x4, x5, x14, x4
  4137bc:	mul	x2, x15, x5
  4137c0:	extr	x1, x4, x8, #32
  4137c4:	cmp	x2, x1
  4137c8:	b.ls	4137dc <_obstack_memory_used@@Base+0xc94>  // b.plast
  4137cc:	adds	x1, x9, x1
  4137d0:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
  4137d4:	b.hi	413db0 <_obstack_memory_used@@Base+0x1268>  // b.pmore
  4137d8:	sub	x5, x5, #0x1
  4137dc:	sub	x1, x1, x2
  4137e0:	udiv	x2, x1, x14
  4137e4:	msub	x1, x2, x14, x1
  4137e8:	mul	x15, x15, x2
  4137ec:	bfi	x8, x1, #32, #32
  4137f0:	mov	x1, x8
  4137f4:	cmp	x15, x8
  4137f8:	b.ls	41380c <_obstack_memory_used@@Base+0xcc4>  // b.plast
  4137fc:	adds	x1, x9, x8
  413800:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
  413804:	b.hi	413dbc <_obstack_memory_used@@Base+0x1274>  // b.pmore
  413808:	sub	x2, x2, #0x1
  41380c:	orr	x5, x2, x5, lsl #32
  413810:	mov	x11, #0x100000000           	// #4294967296
  413814:	and	x4, x5, #0xffffffff
  413818:	sub	x1, x1, x15
  41381c:	lsr	x14, x5, #32
  413820:	mul	x2, x17, x4
  413824:	mul	x17, x14, x17
  413828:	madd	x4, x16, x4, x17
  41382c:	and	x8, x2, #0xffffffff
  413830:	mul	x16, x16, x14
  413834:	add	x2, x4, x2, lsr #32
  413838:	add	x4, x16, x11
  41383c:	cmp	x17, x2
  413840:	csel	x16, x4, x16, hi  // hi = pmore
  413844:	add	x4, x8, x2, lsl #32
  413848:	add	x16, x16, x2, lsr #32
  41384c:	cmp	x1, x16
  413850:	b.cs	413c30 <_obstack_memory_used@@Base+0x10e8>  // b.hs, b.nlast
  413854:	adds	x2, x9, x1
  413858:	sub	x8, x5, #0x1
  41385c:	mov	x1, x2
  413860:	b.cs	413874 <_obstack_memory_used@@Base+0xd2c>  // b.hs, b.nlast
  413864:	cmp	x2, x16
  413868:	b.cc	413d30 <_obstack_memory_used@@Base+0x11e8>  // b.lo, b.ul, b.last
  41386c:	ccmp	x13, x4, #0x2, eq  // eq = none
  413870:	b.cc	413d30 <_obstack_memory_used@@Base+0x11e8>  // b.lo, b.ul, b.last
  413874:	cmp	x13, x4
  413878:	mov	x5, x8
  41387c:	cset	w2, ne  // ne = any
  413880:	cmp	w2, #0x0
  413884:	orr	x2, x5, #0x1
  413888:	ccmp	x1, x16, #0x0, eq  // eq = none
  41388c:	csel	x5, x2, x5, ne  // ne = any
  413890:	b	4135e8 <_obstack_memory_used@@Base+0xaa0>
  413894:	cmp	x1, #0x1
  413898:	b.ne	413680 <_obstack_memory_used@@Base+0xb38>  // b.any
  41389c:	mov	x4, #0x0                   	// #0
  4138a0:	fmov	d0, x4
  4138a4:	lsl	x3, x3, #63
  4138a8:	orr	w0, w0, #0x2
  4138ac:	orr	x5, x3, #0x7fff000000000000
  4138b0:	fmov	v0.d[1], x5
  4138b4:	str	q0, [sp, #16]
  4138b8:	bl	414a58 <_obstack_memory_used@@Base+0x1f10>
  4138bc:	ldr	q0, [sp, #16]
  4138c0:	b	4136b0 <_obstack_memory_used@@Base+0xb68>
  4138c4:	cmp	x1, #0xb
  4138c8:	b.gt	413998 <_obstack_memory_used@@Base+0xe50>
  4138cc:	cmp	x1, #0xa
  4138d0:	b.ne	4135c0 <_obstack_memory_used@@Base+0xa78>  // b.any
  4138d4:	mov	w11, #0x0                   	// #0
  4138d8:	mov	x6, #0xffffffffffff        	// #281474976710655
  4138dc:	mov	x2, #0xffffffffffffffff    	// #-1
  4138e0:	mov	w0, #0x1                   	// #1
  4138e4:	mov	w1, #0x7fff                	// #32767
  4138e8:	b	413694 <_obstack_memory_used@@Base+0xb4c>
  4138ec:	orr	x3, x6, x5
  4138f0:	cbz	x3, 4139d8 <_obstack_memory_used@@Base+0xe90>
  4138f4:	cbz	x6, 413b8c <_obstack_memory_used@@Base+0x1044>
  4138f8:	clz	x3, x6
  4138fc:	sub	x9, x3, #0xf
  413900:	add	w12, w9, #0x3
  413904:	mov	w11, #0x3d                  	// #61
  413908:	sub	w9, w11, w9
  41390c:	lsl	x6, x6, x12
  413910:	lsr	x9, x5, x9
  413914:	orr	x6, x9, x6
  413918:	lsl	x5, x5, x12
  41391c:	add	x7, x3, x7
  413920:	mov	x11, #0x3fef                	// #16367
  413924:	mov	x9, #0x0                   	// #0
  413928:	add	x7, x7, x11
  41392c:	b	413584 <_obstack_memory_used@@Base+0xa3c>
  413930:	orr	x4, x6, x2
  413934:	cbz	x4, 4139c0 <_obstack_memory_used@@Base+0xe78>
  413938:	cbz	x6, 413b68 <_obstack_memory_used@@Base+0x1020>
  41393c:	clz	x0, x6
  413940:	sub	x4, x0, #0xf
  413944:	add	w7, w4, #0x3
  413948:	mov	w1, #0x3d                  	// #61
  41394c:	sub	w4, w1, w4
  413950:	lsl	x6, x6, x7
  413954:	lsr	x4, x2, x4
  413958:	orr	x4, x4, x6
  41395c:	lsl	x2, x2, x7
  413960:	mov	x7, #0xffffffffffffc011    	// #-16367
  413964:	mov	x1, #0x0                   	// #0
  413968:	sub	x7, x7, x0
  41396c:	mov	x16, #0x0                   	// #0
  413970:	mov	w0, #0x0                   	// #0
  413974:	b	413544 <_obstack_memory_used@@Base+0x9fc>
  413978:	orr	x4, x6, x2
  41397c:	cbnz	x4, 4139ec <_obstack_memory_used@@Base+0xea4>
  413980:	mov	x2, #0x0                   	// #0
  413984:	mov	x1, #0x8                   	// #8
  413988:	mov	x7, #0x7fff                	// #32767
  41398c:	mov	x16, #0x2                   	// #2
  413990:	mov	w0, #0x0                   	// #0
  413994:	b	413544 <_obstack_memory_used@@Base+0x9fc>
  413998:	mov	x6, x4
  41399c:	mov	x5, x2
  4139a0:	mov	x8, x14
  4139a4:	mov	x9, x16
  4139a8:	b	4135c0 <_obstack_memory_used@@Base+0xa78>
  4139ac:	orr	x1, x1, #0x2
  4139b0:	mov	x6, #0x0                   	// #0
  4139b4:	mov	x5, #0x0                   	// #0
  4139b8:	mov	x9, #0x2                   	// #2
  4139bc:	b	413644 <_obstack_memory_used@@Base+0xafc>
  4139c0:	mov	x2, #0x0                   	// #0
  4139c4:	mov	x1, #0x4                   	// #4
  4139c8:	mov	x7, #0x0                   	// #0
  4139cc:	mov	x16, #0x1                   	// #1
  4139d0:	mov	w0, #0x0                   	// #0
  4139d4:	b	413544 <_obstack_memory_used@@Base+0x9fc>
  4139d8:	orr	x1, x1, #0x1
  4139dc:	mov	x6, #0x0                   	// #0
  4139e0:	mov	x5, #0x0                   	// #0
  4139e4:	mov	x9, #0x1                   	// #1
  4139e8:	b	413584 <_obstack_memory_used@@Base+0xa3c>
  4139ec:	lsr	x0, x6, #47
  4139f0:	mov	x4, x6
  4139f4:	eor	w0, w0, #0x1
  4139f8:	mov	x1, #0xc                   	// #12
  4139fc:	mov	x7, #0x7fff                	// #32767
  413a00:	mov	x16, #0x3                   	// #3
  413a04:	b	413544 <_obstack_memory_used@@Base+0x9fc>
  413a08:	mov	w11, w8
  413a0c:	mov	w1, #0x0                   	// #0
  413a10:	mov	x6, #0x0                   	// #0
  413a14:	mov	x2, #0x0                   	// #0
  413a18:	b	413694 <_obstack_memory_used@@Base+0xb4c>
  413a1c:	ccmp	x5, x2, #0x2, eq  // eq = none
  413a20:	b.ls	4136c8 <_obstack_memory_used@@Base+0xb80>  // b.plast
  413a24:	mov	x8, x2
  413a28:	sub	x7, x7, #0x1
  413a2c:	mov	x3, x4
  413a30:	mov	x2, #0x0                   	// #0
  413a34:	b	4136d4 <_obstack_memory_used@@Base+0xb8c>
  413a38:	and	x1, x10, #0xc00000
  413a3c:	orr	w0, w0, #0x10
  413a40:	cmp	x1, #0x400, lsl #12
  413a44:	b.eq	413d98 <_obstack_memory_used@@Base+0x1250>  // b.none
  413a48:	cmp	x1, #0x800, lsl #12
  413a4c:	b.eq	413cac <_obstack_memory_used@@Base+0x1164>  // b.none
  413a50:	cbnz	x1, 4135f8 <_obstack_memory_used@@Base+0xab0>
  413a54:	and	x1, x5, #0xf
  413a58:	and	w11, w12, #0x1
  413a5c:	cmp	x1, #0x4
  413a60:	b.eq	4135fc <_obstack_memory_used@@Base+0xab4>  // b.none
  413a64:	adds	x5, x5, #0x4
  413a68:	cinc	x6, x6, cs  // cs = hs, nlast
  413a6c:	b	4135fc <_obstack_memory_used@@Base+0xab4>
  413a70:	orr	x6, x4, #0x800000000000
  413a74:	mov	w11, w13
  413a78:	and	x6, x6, #0xffffffffffff
  413a7c:	mov	w1, #0x7fff                	// #32767
  413a80:	b	413694 <_obstack_memory_used@@Base+0xb4c>
  413a84:	mov	w1, #0x7fff                	// #32767
  413a88:	mov	x6, #0x0                   	// #0
  413a8c:	mov	x2, #0x0                   	// #0
  413a90:	b	413694 <_obstack_memory_used@@Base+0xb4c>
  413a94:	adds	x3, x2, x13
  413a98:	sub	x6, x8, #0x1
  413a9c:	adc	x4, x4, x9
  413aa0:	cset	x18, cs  // cs = hs, nlast
  413aa4:	mov	x2, x3
  413aa8:	cmp	x9, x4
  413aac:	b.cs	413c20 <_obstack_memory_used@@Base+0x10d8>  // b.hs, b.nlast
  413ab0:	cmp	x5, x4
  413ab4:	b.ls	413c48 <_obstack_memory_used@@Base+0x1100>  // b.plast
  413ab8:	adds	x2, x13, x3
  413abc:	sub	x6, x8, #0x2
  413ac0:	adc	x4, x4, x9
  413ac4:	b	413798 <_obstack_memory_used@@Base+0xc50>
  413ac8:	mov	x1, #0x1                   	// #1
  413acc:	sub	x1, x1, x3
  413ad0:	cmp	x1, #0x74
  413ad4:	and	w11, w12, #0x1
  413ad8:	b.le	413af4 <_obstack_memory_used@@Base+0xfac>
  413adc:	orr	x2, x5, x6
  413ae0:	cbnz	x2, 413d14 <_obstack_memory_used@@Base+0x11cc>
  413ae4:	orr	w0, w0, #0x8
  413ae8:	mov	w1, #0x0                   	// #0
  413aec:	mov	x6, #0x0                   	// #0
  413af0:	b	413bd8 <_obstack_memory_used@@Base+0x1090>
  413af4:	cmp	x1, #0x3f
  413af8:	b.le	413c54 <_obstack_memory_used@@Base+0x110c>
  413afc:	mov	w2, #0x80                  	// #128
  413b00:	sub	w2, w2, w1
  413b04:	cmp	x1, #0x40
  413b08:	sub	w1, w1, #0x40
  413b0c:	lsl	x2, x6, x2
  413b10:	orr	x2, x5, x2
  413b14:	csel	x5, x2, x5, ne  // ne = any
  413b18:	lsr	x6, x6, x1
  413b1c:	cmp	x5, #0x0
  413b20:	cset	x2, ne  // ne = any
  413b24:	orr	x2, x2, x6
  413b28:	ands	x6, x2, #0x7
  413b2c:	b.eq	413c88 <_obstack_memory_used@@Base+0x1140>  // b.none
  413b30:	mov	x6, #0x0                   	// #0
  413b34:	and	x10, x10, #0xc00000
  413b38:	orr	w0, w0, #0x10
  413b3c:	cmp	x10, #0x400, lsl #12
  413b40:	b.eq	413dd4 <_obstack_memory_used@@Base+0x128c>  // b.none
  413b44:	cmp	x10, #0x800, lsl #12
  413b48:	b.eq	413de8 <_obstack_memory_used@@Base+0x12a0>  // b.none
  413b4c:	cbz	x10, 413d50 <_obstack_memory_used@@Base+0x1208>
  413b50:	tbnz	x6, #51, 413d68 <_obstack_memory_used@@Base+0x1220>
  413b54:	orr	w0, w0, #0x8
  413b58:	extr	x2, x6, x2, #3
  413b5c:	mov	w1, #0x0                   	// #0
  413b60:	ubfx	x6, x6, #3, #48
  413b64:	b	413bd8 <_obstack_memory_used@@Base+0x1090>
  413b68:	clz	x7, x2
  413b6c:	add	x4, x7, #0x31
  413b70:	add	x0, x7, #0x40
  413b74:	cmp	x4, #0x3c
  413b78:	b.le	413944 <_obstack_memory_used@@Base+0xdfc>
  413b7c:	sub	w4, w4, #0x3d
  413b80:	lsl	x4, x2, x4
  413b84:	mov	x2, #0x0                   	// #0
  413b88:	b	413960 <_obstack_memory_used@@Base+0xe18>
  413b8c:	clz	x3, x5
  413b90:	add	x9, x3, #0x31
  413b94:	add	x3, x3, #0x40
  413b98:	cmp	x9, #0x3c
  413b9c:	b.le	413900 <_obstack_memory_used@@Base+0xdb8>
  413ba0:	sub	w6, w9, #0x3d
  413ba4:	lsl	x6, x5, x6
  413ba8:	mov	x5, #0x0                   	// #0
  413bac:	b	41391c <_obstack_memory_used@@Base+0xdd4>
  413bb0:	and	x2, x10, #0xc00000
  413bb4:	cmp	x2, #0x400, lsl #12
  413bb8:	b.eq	413d7c <_obstack_memory_used@@Base+0x1234>  // b.none
  413bbc:	cmp	x2, #0x800, lsl #12
  413bc0:	b.eq	413cc4 <_obstack_memory_used@@Base+0x117c>  // b.none
  413bc4:	cbz	x2, 413ca0 <_obstack_memory_used@@Base+0x1158>
  413bc8:	mov	x6, #0xffffffffffff        	// #281474976710655
  413bcc:	mov	x2, #0xffffffffffffffff    	// #-1
  413bd0:	mov	w3, #0x14                  	// #20
  413bd4:	orr	w0, w0, w3
  413bd8:	mov	x5, #0x0                   	// #0
  413bdc:	orr	w1, w1, w11, lsl #15
  413be0:	bfxil	x5, x6, #0, #48
  413be4:	fmov	d0, x2
  413be8:	bfi	x5, x1, #48, #16
  413bec:	fmov	v0.d[1], x5
  413bf0:	b	4138b4 <_obstack_memory_used@@Base+0xd6c>
  413bf4:	orr	x6, x6, #0x800000000000
  413bf8:	mov	w11, w8
  413bfc:	and	x6, x6, #0xffffffffffff
  413c00:	mov	x2, x5
  413c04:	mov	w1, #0x7fff                	// #32767
  413c08:	b	413694 <_obstack_memory_used@@Base+0xb4c>
  413c0c:	mov	w11, w8
  413c10:	mov	w1, #0x7fff                	// #32767
  413c14:	mov	x6, #0x0                   	// #0
  413c18:	mov	x2, #0x0                   	// #0
  413c1c:	b	413694 <_obstack_memory_used@@Base+0xb4c>
  413c20:	cmp	x18, #0x0
  413c24:	ccmp	x9, x4, #0x0, eq  // eq = none
  413c28:	b.ne	413798 <_obstack_memory_used@@Base+0xc50>  // b.any
  413c2c:	b	413ab0 <_obstack_memory_used@@Base+0xf68>
  413c30:	cmp	x4, #0x0
  413c34:	cset	w2, ne  // ne = any
  413c38:	cmp	w2, #0x0
  413c3c:	ccmp	x1, x16, #0x0, ne  // ne = any
  413c40:	b.ne	413880 <_obstack_memory_used@@Base+0xd38>  // b.any
  413c44:	b	413854 <_obstack_memory_used@@Base+0xd0c>
  413c48:	ccmp	x1, x3, #0x0, eq  // eq = none
  413c4c:	b.ls	413798 <_obstack_memory_used@@Base+0xc50>  // b.plast
  413c50:	b	413ab8 <_obstack_memory_used@@Base+0xf70>
  413c54:	mov	w2, #0x40                  	// #64
  413c58:	sub	w2, w2, w1
  413c5c:	lsr	x4, x5, x1
  413c60:	lsl	x5, x5, x2
  413c64:	cmp	x5, #0x0
  413c68:	cset	x3, ne  // ne = any
  413c6c:	lsl	x2, x6, x2
  413c70:	orr	x2, x2, x4
  413c74:	lsr	x6, x6, x1
  413c78:	orr	x2, x2, x3
  413c7c:	tst	x2, #0x7
  413c80:	b.ne	413b34 <_obstack_memory_used@@Base+0xfec>  // b.any
  413c84:	tbnz	x6, #51, 413df4 <_obstack_memory_used@@Base+0x12ac>
  413c88:	mov	w1, #0x0                   	// #0
  413c8c:	extr	x2, x6, x2, #3
  413c90:	ubfx	x6, x6, #3, #48
  413c94:	tbz	w10, #11, 413694 <_obstack_memory_used@@Base+0xb4c>
  413c98:	orr	w0, w0, #0x8
  413c9c:	b	413bd8 <_obstack_memory_used@@Base+0x1090>
  413ca0:	mov	w1, #0x7fff                	// #32767
  413ca4:	mov	x6, #0x0                   	// #0
  413ca8:	b	413bd0 <_obstack_memory_used@@Base+0x1088>
  413cac:	mov	w11, #0x0                   	// #0
  413cb0:	cbz	x12, 4135fc <_obstack_memory_used@@Base+0xab4>
  413cb4:	adds	x5, x5, #0x8
  413cb8:	mov	w11, #0x1                   	// #1
  413cbc:	cinc	x6, x6, cs  // cs = hs, nlast
  413cc0:	b	4135fc <_obstack_memory_used@@Base+0xab4>
  413cc4:	cmp	x12, #0x0
  413cc8:	mov	w2, #0x7fff                	// #32767
  413ccc:	mov	x6, #0xffffffffffff        	// #281474976710655
  413cd0:	csel	w1, w1, w2, eq  // eq = none
  413cd4:	csel	x6, x6, xzr, eq  // eq = none
  413cd8:	csetm	x2, eq  // eq = none
  413cdc:	b	413bd0 <_obstack_memory_used@@Base+0x1088>
  413ce0:	sub	x1, x1, #0x2
  413ce4:	add	x4, x4, x9
  413ce8:	b	41373c <_obstack_memory_used@@Base+0xbf4>
  413cec:	sub	x5, x5, #0x2
  413cf0:	add	x3, x3, x9
  413cf4:	b	41370c <_obstack_memory_used@@Base+0xbc4>
  413cf8:	cmp	x3, #0x0
  413cfc:	mov	x5, #0xffffffffffffffff    	// #-1
  413d00:	b.gt	413a38 <_obstack_memory_used@@Base+0xef0>
  413d04:	mov	x1, #0x1                   	// #1
  413d08:	sub	x1, x1, x3
  413d0c:	cmp	x1, #0x74
  413d10:	b.le	413af4 <_obstack_memory_used@@Base+0xfac>
  413d14:	and	x10, x10, #0xc00000
  413d18:	orr	w0, w0, #0x10
  413d1c:	cmp	x10, #0x400, lsl #12
  413d20:	b.eq	413dc8 <_obstack_memory_used@@Base+0x1280>  // b.none
  413d24:	cmp	x10, #0x800, lsl #12
  413d28:	csel	x2, x12, xzr, eq  // eq = none
  413d2c:	b	413ae4 <_obstack_memory_used@@Base+0xf9c>
  413d30:	lsl	x8, x13, #1
  413d34:	sub	x5, x5, #0x2
  413d38:	cmp	x13, x8
  413d3c:	cinc	x1, x9, hi  // hi = pmore
  413d40:	cmp	x4, x8
  413d44:	add	x1, x2, x1
  413d48:	cset	w2, ne  // ne = any
  413d4c:	b	413880 <_obstack_memory_used@@Base+0xd38>
  413d50:	and	x1, x2, #0xf
  413d54:	cmp	x1, #0x4
  413d58:	b.eq	413d64 <_obstack_memory_used@@Base+0x121c>  // b.none
  413d5c:	adds	x2, x2, #0x4
  413d60:	cinc	x6, x6, cs  // cs = hs, nlast
  413d64:	tbz	x6, #51, 413b54 <_obstack_memory_used@@Base+0x100c>
  413d68:	orr	w0, w0, #0x8
  413d6c:	mov	w1, #0x1                   	// #1
  413d70:	mov	x6, #0x0                   	// #0
  413d74:	mov	x2, #0x0                   	// #0
  413d78:	b	413bd8 <_obstack_memory_used@@Base+0x1090>
  413d7c:	cmp	x12, #0x0
  413d80:	mov	w2, #0x7fff                	// #32767
  413d84:	mov	x6, #0xffffffffffff        	// #281474976710655
  413d88:	csel	w1, w1, w2, ne  // ne = any
  413d8c:	csel	x6, x6, xzr, ne  // ne = any
  413d90:	csetm	x2, ne  // ne = any
  413d94:	b	413bd0 <_obstack_memory_used@@Base+0x1088>
  413d98:	mov	w11, #0x1                   	// #1
  413d9c:	cbnz	x12, 4135fc <_obstack_memory_used@@Base+0xab4>
  413da0:	adds	x5, x5, #0x8
  413da4:	mov	w11, #0x0                   	// #0
  413da8:	cinc	x6, x6, cs  // cs = hs, nlast
  413dac:	b	4135fc <_obstack_memory_used@@Base+0xab4>
  413db0:	sub	x5, x5, #0x2
  413db4:	add	x1, x1, x9
  413db8:	b	4137dc <_obstack_memory_used@@Base+0xc94>
  413dbc:	sub	x2, x2, #0x2
  413dc0:	add	x1, x1, x9
  413dc4:	b	41380c <_obstack_memory_used@@Base+0xcc4>
  413dc8:	mov	x2, #0x1                   	// #1
  413dcc:	sub	x2, x2, x12
  413dd0:	b	413ae4 <_obstack_memory_used@@Base+0xf9c>
  413dd4:	cbnz	x12, 413d64 <_obstack_memory_used@@Base+0x121c>
  413dd8:	adds	x2, x2, #0x8
  413ddc:	cinc	x6, x6, cs  // cs = hs, nlast
  413de0:	tbnz	x6, #51, 413d68 <_obstack_memory_used@@Base+0x1220>
  413de4:	b	413b54 <_obstack_memory_used@@Base+0x100c>
  413de8:	cbnz	x12, 413dd8 <_obstack_memory_used@@Base+0x1290>
  413dec:	tbnz	x6, #51, 413d68 <_obstack_memory_used@@Base+0x1220>
  413df0:	b	413b54 <_obstack_memory_used@@Base+0x100c>
  413df4:	orr	w0, w0, #0x10
  413df8:	b	413d68 <_obstack_memory_used@@Base+0x1220>
  413dfc:	nop
  413e00:	stp	x29, x30, [sp, #-48]!
  413e04:	mov	x29, sp
  413e08:	str	q0, [sp, #16]
  413e0c:	str	q1, [sp, #32]
  413e10:	ldp	x6, x1, [sp, #16]
  413e14:	ldp	x7, x0, [sp, #32]
  413e18:	mrs	x2, fpcr
  413e1c:	ubfx	x4, x1, #48, #15
  413e20:	lsr	x2, x1, #63
  413e24:	lsr	x3, x0, #63
  413e28:	ubfx	x9, x0, #0, #48
  413e2c:	mov	x5, #0x7fff                	// #32767
  413e30:	mov	x10, x6
  413e34:	cmp	x4, x5
  413e38:	and	w2, w2, #0xff
  413e3c:	ubfx	x1, x1, #0, #48
  413e40:	and	w3, w3, #0xff
  413e44:	ubfx	x0, x0, #48, #15
  413e48:	b.eq	413e7c <_obstack_memory_used@@Base+0x1334>  // b.none
  413e4c:	cmp	x0, x5
  413e50:	b.eq	413e68 <_obstack_memory_used@@Base+0x1320>  // b.none
  413e54:	cmp	x4, x0
  413e58:	mov	w0, #0x1                   	// #1
  413e5c:	b.eq	413e94 <_obstack_memory_used@@Base+0x134c>  // b.none
  413e60:	ldp	x29, x30, [sp], #48
  413e64:	ret
  413e68:	orr	x8, x9, x7
  413e6c:	cbnz	x8, 413ef8 <_obstack_memory_used@@Base+0x13b0>
  413e70:	mov	w0, #0x1                   	// #1
  413e74:	ldp	x29, x30, [sp], #48
  413e78:	ret
  413e7c:	orr	x5, x1, x6
  413e80:	cbnz	x5, 413ec8 <_obstack_memory_used@@Base+0x1380>
  413e84:	cmp	x0, x4
  413e88:	b.ne	413e70 <_obstack_memory_used@@Base+0x1328>  // b.any
  413e8c:	orr	x8, x9, x7
  413e90:	cbnz	x8, 413ef8 <_obstack_memory_used@@Base+0x13b0>
  413e94:	cmp	x1, x9
  413e98:	mov	w0, #0x1                   	// #1
  413e9c:	ccmp	x6, x7, #0x0, eq  // eq = none
  413ea0:	b.ne	413e60 <_obstack_memory_used@@Base+0x1318>  // b.any
  413ea4:	cmp	w2, w3
  413ea8:	mov	w0, #0x0                   	// #0
  413eac:	b.eq	413e60 <_obstack_memory_used@@Base+0x1318>  // b.none
  413eb0:	mov	w0, #0x1                   	// #1
  413eb4:	cbnz	x4, 413e60 <_obstack_memory_used@@Base+0x1318>
  413eb8:	orr	x1, x1, x10
  413ebc:	cmp	x1, #0x0
  413ec0:	cset	w0, ne  // ne = any
  413ec4:	b	413e60 <_obstack_memory_used@@Base+0x1318>
  413ec8:	tst	x1, #0x800000000000
  413ecc:	b.ne	413ee4 <_obstack_memory_used@@Base+0x139c>  // b.any
  413ed0:	mov	w0, #0x1                   	// #1
  413ed4:	bl	414a58 <_obstack_memory_used@@Base+0x1f10>
  413ed8:	mov	w0, #0x1                   	// #1
  413edc:	ldp	x29, x30, [sp], #48
  413ee0:	ret
  413ee4:	cmp	x0, x4
  413ee8:	mov	w0, #0x1                   	// #1
  413eec:	b.ne	413e60 <_obstack_memory_used@@Base+0x1318>  // b.any
  413ef0:	orr	x8, x9, x7
  413ef4:	cbz	x8, 413e60 <_obstack_memory_used@@Base+0x1318>
  413ef8:	tst	x9, #0x800000000000
  413efc:	b.eq	413ed0 <_obstack_memory_used@@Base+0x1388>  // b.none
  413f00:	b	413e70 <_obstack_memory_used@@Base+0x1328>
  413f04:	nop
  413f08:	stp	x29, x30, [sp, #-48]!
  413f0c:	mov	x29, sp
  413f10:	str	q0, [sp, #16]
  413f14:	str	q1, [sp, #32]
  413f18:	ldp	x8, x1, [sp, #16]
  413f1c:	ldp	x9, x0, [sp, #32]
  413f20:	mrs	x2, fpcr
  413f24:	ubfx	x4, x1, #48, #15
  413f28:	ubfx	x10, x1, #0, #48
  413f2c:	lsr	x2, x1, #63
  413f30:	mov	x5, #0x7fff                	// #32767
  413f34:	mov	x6, x8
  413f38:	cmp	x4, x5
  413f3c:	ubfx	x11, x0, #0, #48
  413f40:	ubfx	x7, x0, #48, #15
  413f44:	lsr	x1, x0, #63
  413f48:	mov	x3, x9
  413f4c:	b.eq	413f84 <_obstack_memory_used@@Base+0x143c>  // b.none
  413f50:	cmp	x7, x5
  413f54:	b.eq	413f94 <_obstack_memory_used@@Base+0x144c>  // b.none
  413f58:	cbnz	x4, 413fc0 <_obstack_memory_used@@Base+0x1478>
  413f5c:	orr	x6, x10, x8
  413f60:	cmp	x6, #0x0
  413f64:	cset	w0, eq  // eq = none
  413f68:	cbnz	x7, 413fac <_obstack_memory_used@@Base+0x1464>
  413f6c:	orr	x3, x11, x9
  413f70:	cbnz	x3, 413fac <_obstack_memory_used@@Base+0x1464>
  413f74:	mov	w0, #0x0                   	// #0
  413f78:	cbnz	x6, 413fd4 <_obstack_memory_used@@Base+0x148c>
  413f7c:	ldp	x29, x30, [sp], #48
  413f80:	ret
  413f84:	orr	x0, x10, x8
  413f88:	cbnz	x0, 413fe8 <_obstack_memory_used@@Base+0x14a0>
  413f8c:	cmp	x7, x4
  413f90:	b.ne	413fc0 <_obstack_memory_used@@Base+0x1478>  // b.any
  413f94:	orr	x3, x11, x3
  413f98:	cbnz	x3, 413fe8 <_obstack_memory_used@@Base+0x14a0>
  413f9c:	cbnz	x4, 413fcc <_obstack_memory_used@@Base+0x1484>
  413fa0:	orr	x6, x10, x6
  413fa4:	cmp	x6, #0x0
  413fa8:	cset	w0, eq  // eq = none
  413fac:	cbz	w0, 413fcc <_obstack_memory_used@@Base+0x1484>
  413fb0:	cmp	x1, #0x0
  413fb4:	csinv	w0, w0, wzr, ne  // ne = any
  413fb8:	ldp	x29, x30, [sp], #48
  413fbc:	ret
  413fc0:	cbnz	x7, 413fcc <_obstack_memory_used@@Base+0x1484>
  413fc4:	orr	x3, x11, x3
  413fc8:	cbz	x3, 413fd4 <_obstack_memory_used@@Base+0x148c>
  413fcc:	cmp	x2, x1
  413fd0:	b.eq	413ffc <_obstack_memory_used@@Base+0x14b4>  // b.none
  413fd4:	cmp	x2, #0x0
  413fd8:	mov	w0, #0xffffffff            	// #-1
  413fdc:	cneg	w0, w0, eq  // eq = none
  413fe0:	ldp	x29, x30, [sp], #48
  413fe4:	ret
  413fe8:	mov	w0, #0x1                   	// #1
  413fec:	bl	414a58 <_obstack_memory_used@@Base+0x1f10>
  413ff0:	mov	w0, #0x2                   	// #2
  413ff4:	ldp	x29, x30, [sp], #48
  413ff8:	ret
  413ffc:	cmp	x4, x7
  414000:	b.gt	413fd4 <_obstack_memory_used@@Base+0x148c>
  414004:	b.lt	414038 <_obstack_memory_used@@Base+0x14f0>  // b.tstop
  414008:	cmp	x10, x11
  41400c:	b.hi	413fd4 <_obstack_memory_used@@Base+0x148c>  // b.pmore
  414010:	cset	w0, eq  // eq = none
  414014:	cmp	w0, #0x0
  414018:	ccmp	x8, x9, #0x0, ne  // ne = any
  41401c:	b.hi	413fd4 <_obstack_memory_used@@Base+0x148c>  // b.pmore
  414020:	cmp	x10, x11
  414024:	b.cc	414038 <_obstack_memory_used@@Base+0x14f0>  // b.lo, b.ul, b.last
  414028:	cmp	w0, #0x0
  41402c:	mov	w0, #0x0                   	// #0
  414030:	ccmp	x8, x9, #0x2, ne  // ne = any
  414034:	b.cs	413f7c <_obstack_memory_used@@Base+0x1434>  // b.hs, b.nlast
  414038:	cmp	x2, #0x0
  41403c:	mov	w0, #0x1                   	// #1
  414040:	cneg	w0, w0, eq  // eq = none
  414044:	b	413f7c <_obstack_memory_used@@Base+0x1434>
  414048:	stp	x29, x30, [sp, #-80]!
  41404c:	mov	x29, sp
  414050:	str	q0, [sp, #48]
  414054:	str	q1, [sp, #64]
  414058:	ldp	x1, x0, [sp, #48]
  41405c:	ldp	x6, x2, [sp, #64]
  414060:	mrs	x11, fpcr
  414064:	lsr	x3, x0, #63
  414068:	ubfx	x7, x0, #0, #48
  41406c:	and	w12, w3, #0xff
  414070:	mov	x14, x3
  414074:	ubfx	x3, x0, #48, #15
  414078:	cbz	w3, 414420 <_obstack_memory_used@@Base+0x18d8>
  41407c:	mov	w4, #0x7fff                	// #32767
  414080:	cmp	w3, w4
  414084:	b.eq	4144c4 <_obstack_memory_used@@Base+0x197c>  // b.none
  414088:	and	x3, x3, #0xffff
  41408c:	extr	x4, x7, x1, #61
  414090:	mov	x18, #0xffffffffffffc001    	// #-16383
  414094:	orr	x7, x4, #0x8000000000000
  414098:	add	x3, x3, x18
  41409c:	lsl	x5, x1, #3
  4140a0:	mov	x16, #0x0                   	// #0
  4140a4:	mov	x1, #0x0                   	// #0
  4140a8:	mov	w0, #0x0                   	// #0
  4140ac:	lsr	x8, x2, #63
  4140b0:	ubfx	x4, x2, #0, #48
  4140b4:	and	w15, w8, #0xff
  4140b8:	mov	x13, x8
  4140bc:	ubfx	x9, x2, #48, #15
  4140c0:	cbz	w9, 414480 <_obstack_memory_used@@Base+0x1938>
  4140c4:	mov	w8, #0x7fff                	// #32767
  4140c8:	cmp	w9, w8
  4140cc:	b.eq	414150 <_obstack_memory_used@@Base+0x1608>  // b.none
  4140d0:	and	x9, x9, #0xffff
  4140d4:	mov	x17, #0xffffffffffffc001    	// #-16383
  4140d8:	add	x9, x9, x17
  4140dc:	extr	x2, x4, x6, #61
  4140e0:	add	x9, x9, x3
  4140e4:	lsl	x6, x6, #3
  4140e8:	orr	x4, x2, #0x8000000000000
  4140ec:	mov	x2, #0x0                   	// #0
  4140f0:	eor	w8, w12, w15
  4140f4:	cmp	x1, #0xa
  4140f8:	and	w10, w8, #0xff
  4140fc:	add	x3, x9, #0x1
  414100:	and	x8, x8, #0xff
  414104:	b.le	414188 <_obstack_memory_used@@Base+0x1640>
  414108:	cmp	x1, #0xb
  41410c:	b.eq	414820 <_obstack_memory_used@@Base+0x1cd8>  // b.none
  414110:	mov	w15, w12
  414114:	mov	x13, x14
  414118:	mov	w10, w15
  41411c:	cmp	x16, #0x2
  414120:	b.eq	4144e4 <_obstack_memory_used@@Base+0x199c>  // b.none
  414124:	mov	x4, x7
  414128:	mov	x6, x5
  41412c:	mov	x2, x16
  414130:	mov	x8, x13
  414134:	cmp	x2, #0x3
  414138:	b.ne	4141a4 <_obstack_memory_used@@Base+0x165c>  // b.any
  41413c:	orr	x4, x4, #0x800000000000
  414140:	mov	x5, x6
  414144:	and	x4, x4, #0xffffffffffff
  414148:	mov	w1, #0x7fff                	// #32767
  41414c:	b	4141b8 <_obstack_memory_used@@Base+0x1670>
  414150:	mov	x8, #0x7fff                	// #32767
  414154:	orr	x2, x4, x6
  414158:	add	x9, x3, x8
  41415c:	cbnz	x2, 4141dc <_obstack_memory_used@@Base+0x1694>
  414160:	eor	w8, w12, w15
  414164:	orr	x1, x1, #0x2
  414168:	and	w10, w8, #0xff
  41416c:	cmp	x1, #0xa
  414170:	add	x3, x3, #0x8, lsl #12
  414174:	and	x8, x8, #0xff
  414178:	mov	x6, #0x0                   	// #0
  41417c:	b.gt	414794 <_obstack_memory_used@@Base+0x1c4c>
  414180:	mov	x4, #0x0                   	// #0
  414184:	mov	x2, #0x2                   	// #2
  414188:	cmp	x1, #0x2
  41418c:	b.gt	414204 <_obstack_memory_used@@Base+0x16bc>
  414190:	sub	x1, x1, #0x1
  414194:	cmp	x1, #0x1
  414198:	b.hi	414240 <_obstack_memory_used@@Base+0x16f8>  // b.pmore
  41419c:	cmp	x2, #0x2
  4141a0:	b.eq	4144e4 <_obstack_memory_used@@Base+0x199c>  // b.none
  4141a4:	cmp	x2, #0x1
  4141a8:	b.ne	4143a0 <_obstack_memory_used@@Base+0x1858>  // b.any
  4141ac:	mov	w1, #0x0                   	// #0
  4141b0:	mov	x4, #0x0                   	// #0
  4141b4:	mov	x5, #0x0                   	// #0
  4141b8:	mov	x3, #0x0                   	// #0
  4141bc:	orr	w1, w1, w10, lsl #15
  4141c0:	bfxil	x3, x4, #0, #48
  4141c4:	fmov	d0, x5
  4141c8:	bfi	x3, x1, #48, #16
  4141cc:	fmov	v0.d[1], x3
  4141d0:	cbnz	w0, 414610 <_obstack_memory_used@@Base+0x1ac8>
  4141d4:	ldp	x29, x30, [sp], #80
  4141d8:	ret
  4141dc:	tst	x4, #0x800000000000
  4141e0:	eor	w8, w12, w15
  4141e4:	orr	x1, x1, #0x3
  4141e8:	csinc	w0, w0, wzr, ne  // ne = any
  4141ec:	and	w10, w8, #0xff
  4141f0:	add	x3, x3, #0x8, lsl #12
  4141f4:	cmp	x1, #0xa
  4141f8:	and	x8, x8, #0xff
  4141fc:	mov	x2, #0x3                   	// #3
  414200:	b.gt	414814 <_obstack_memory_used@@Base+0x1ccc>
  414204:	mov	x12, #0x1                   	// #1
  414208:	mov	x14, #0x530                 	// #1328
  41420c:	lsl	x1, x12, x1
  414210:	tst	x1, x14
  414214:	b.ne	414414 <_obstack_memory_used@@Base+0x18cc>  // b.any
  414218:	mov	x14, #0x240                 	// #576
  41421c:	tst	x1, x14
  414220:	b.ne	4143fc <_obstack_memory_used@@Base+0x18b4>  // b.any
  414224:	mov	x12, #0x88                  	// #136
  414228:	tst	x1, x12
  41422c:	b.eq	414240 <_obstack_memory_used@@Base+0x16f8>  // b.none
  414230:	mov	x7, x4
  414234:	mov	x5, x6
  414238:	mov	x16, x2
  41423c:	b	414118 <_obstack_memory_used@@Base+0x15d0>
  414240:	lsr	x13, x5, #32
  414244:	and	x12, x6, #0xffffffff
  414248:	and	x15, x5, #0xffffffff
  41424c:	lsr	x6, x6, #32
  414250:	and	x18, x4, #0xffffffff
  414254:	lsr	x2, x4, #32
  414258:	mul	x4, x13, x12
  41425c:	stp	x21, x22, [sp, #32]
  414260:	lsr	x22, x7, #32
  414264:	and	x5, x7, #0xffffffff
  414268:	mul	x16, x12, x15
  41426c:	madd	x7, x6, x15, x4
  414270:	stp	x19, x20, [sp, #16]
  414274:	mul	x1, x13, x18
  414278:	mul	x17, x15, x18
  41427c:	and	x30, x16, #0xffffffff
  414280:	madd	x15, x2, x15, x1
  414284:	add	x16, x7, x16, lsr #32
  414288:	mul	x21, x22, x12
  41428c:	cmp	x4, x16
  414290:	mul	x20, x22, x18
  414294:	mov	x14, #0x100000000           	// #4294967296
  414298:	mul	x19, x13, x6
  41429c:	add	x15, x15, x17, lsr #32
  4142a0:	mul	x12, x12, x5
  4142a4:	and	x17, x17, #0xffffffff
  4142a8:	mul	x18, x5, x18
  4142ac:	add	x4, x19, x14
  4142b0:	madd	x7, x6, x5, x21
  4142b4:	csel	x19, x4, x19, hi  // hi = pmore
  4142b8:	madd	x5, x2, x5, x20
  4142bc:	cmp	x1, x15
  4142c0:	mul	x13, x13, x2
  4142c4:	add	x17, x17, x15, lsl #32
  4142c8:	mul	x6, x6, x22
  4142cc:	add	x7, x7, x12, lsr #32
  4142d0:	add	x5, x5, x18, lsr #32
  4142d4:	add	x4, x13, x14
  4142d8:	mul	x2, x2, x22
  4142dc:	csel	x13, x4, x13, hi  // hi = pmore
  4142e0:	and	x1, x18, #0xffffffff
  4142e4:	cmp	x21, x7
  4142e8:	add	x4, x6, x14
  4142ec:	add	x30, x30, x16, lsl #32
  4142f0:	csel	x6, x4, x6, hi  // hi = pmore
  4142f4:	add	x13, x13, x15, lsr #32
  4142f8:	cmp	x20, x5
  4142fc:	add	x1, x1, x5, lsl #32
  414300:	add	x16, x17, x16, lsr #32
  414304:	add	x14, x2, x14
  414308:	csel	x2, x14, x2, hi  // hi = pmore
  41430c:	add	x16, x19, x16
  414310:	adds	x1, x1, x13
  414314:	and	x12, x12, #0xffffffff
  414318:	cset	x13, cs  // cs = hs, nlast
  41431c:	cmp	x16, x17
  414320:	cset	x4, cc  // cc = lo, ul, last
  414324:	add	x12, x12, x7, lsl #32
  414328:	adds	x1, x1, x4
  41432c:	lsr	x5, x5, #32
  414330:	cset	x4, cs  // cs = hs, nlast
  414334:	cmp	x13, #0x0
  414338:	ccmp	x4, #0x0, #0x0, eq  // eq = none
  41433c:	add	x7, x6, x7, lsr #32
  414340:	cinc	x5, x5, ne  // ne = any
  414344:	adds	x6, x16, x12
  414348:	cset	x4, cs  // cs = hs, nlast
  41434c:	adds	x1, x1, x7
  414350:	cset	x7, cs  // cs = hs, nlast
  414354:	adds	x4, x1, x4
  414358:	cset	x1, cs  // cs = hs, nlast
  41435c:	cmp	x7, #0x0
  414360:	orr	x30, x30, x6, lsl #13
  414364:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  414368:	cinc	x1, x2, ne  // ne = any
  41436c:	cmp	x30, #0x0
  414370:	add	x1, x1, x5
  414374:	cset	x2, ne  // ne = any
  414378:	orr	x6, x2, x6, lsr #51
  41437c:	orr	x6, x6, x4, lsl #13
  414380:	extr	x4, x1, x4, #51
  414384:	tbz	x1, #39, 414698 <_obstack_memory_used@@Base+0x1b50>
  414388:	ldp	x19, x20, [sp, #16]
  41438c:	and	x1, x6, #0x1
  414390:	ldp	x21, x22, [sp, #32]
  414394:	orr	x6, x1, x6, lsr #1
  414398:	orr	x6, x6, x4, lsl #63
  41439c:	lsr	x4, x4, #1
  4143a0:	mov	x1, #0x3fff                	// #16383
  4143a4:	add	x2, x3, x1
  4143a8:	cmp	x2, #0x0
  4143ac:	b.le	414544 <_obstack_memory_used@@Base+0x19fc>
  4143b0:	tst	x6, #0x7
  4143b4:	b.eq	4143d4 <_obstack_memory_used@@Base+0x188c>  // b.none
  4143b8:	and	x1, x11, #0xc00000
  4143bc:	orr	w0, w0, #0x10
  4143c0:	cmp	x1, #0x400, lsl #12
  4143c4:	b.eq	41478c <_obstack_memory_used@@Base+0x1c44>  // b.none
  4143c8:	cmp	x1, #0x800, lsl #12
  4143cc:	b.eq	414734 <_obstack_memory_used@@Base+0x1bec>  // b.none
  4143d0:	cbz	x1, 41471c <_obstack_memory_used@@Base+0x1bd4>
  4143d4:	tbz	x4, #52, 4143e0 <_obstack_memory_used@@Base+0x1898>
  4143d8:	and	x4, x4, #0xffefffffffffffff
  4143dc:	add	x2, x3, #0x4, lsl #12
  4143e0:	mov	x1, #0x7ffe                	// #32766
  4143e4:	cmp	x2, x1
  4143e8:	b.gt	41466c <_obstack_memory_used@@Base+0x1b24>
  4143ec:	and	w1, w2, #0x7fff
  4143f0:	extr	x5, x4, x6, #3
  4143f4:	ubfx	x4, x4, #3, #48
  4143f8:	b	4141b8 <_obstack_memory_used@@Base+0x1670>
  4143fc:	mov	w0, w12
  414400:	mov	w10, #0x0                   	// #0
  414404:	mov	x4, #0xffffffffffff        	// #281474976710655
  414408:	mov	x5, #0xffffffffffffffff    	// #-1
  41440c:	mov	w1, #0x7fff                	// #32767
  414410:	b	4141b8 <_obstack_memory_used@@Base+0x1670>
  414414:	mov	w15, w10
  414418:	mov	x13, x8
  41441c:	b	414118 <_obstack_memory_used@@Base+0x15d0>
  414420:	orr	x5, x7, x1
  414424:	cbz	x5, 41452c <_obstack_memory_used@@Base+0x19e4>
  414428:	cbz	x7, 414648 <_obstack_memory_used@@Base+0x1b00>
  41442c:	clz	x0, x7
  414430:	sub	x4, x0, #0xf
  414434:	add	w5, w4, #0x3
  414438:	mov	w3, #0x3d                  	// #61
  41443c:	sub	w3, w3, w4
  414440:	lsl	x4, x7, x5
  414444:	lsr	x3, x1, x3
  414448:	orr	x7, x3, x4
  41444c:	lsl	x5, x1, x5
  414450:	lsr	x8, x2, #63
  414454:	mov	x3, #0xffffffffffffc011    	// #-16367
  414458:	ubfx	x4, x2, #0, #48
  41445c:	sub	x3, x3, x0
  414460:	and	w15, w8, #0xff
  414464:	mov	x13, x8
  414468:	ubfx	x9, x2, #48, #15
  41446c:	mov	x1, #0x0                   	// #0
  414470:	mov	x16, #0x0                   	// #0
  414474:	mov	w0, #0x0                   	// #0
  414478:	cbnz	w9, 4140c4 <_obstack_memory_used@@Base+0x157c>
  41447c:	nop
  414480:	orr	x2, x4, x6
  414484:	cbz	x2, 4144f4 <_obstack_memory_used@@Base+0x19ac>
  414488:	cbz	x4, 414624 <_obstack_memory_used@@Base+0x1adc>
  41448c:	clz	x9, x4
  414490:	sub	x2, x9, #0xf
  414494:	add	w10, w2, #0x3
  414498:	mov	w8, #0x3d                  	// #61
  41449c:	sub	w8, w8, w2
  4144a0:	lsl	x2, x4, x10
  4144a4:	lsr	x8, x6, x8
  4144a8:	orr	x4, x8, x2
  4144ac:	lsl	x6, x6, x10
  4144b0:	sub	x9, x3, x9
  4144b4:	mov	x10, #0xffffffffffffc011    	// #-16367
  4144b8:	mov	x2, #0x0                   	// #0
  4144bc:	add	x9, x9, x10
  4144c0:	b	4140f0 <_obstack_memory_used@@Base+0x15a8>
  4144c4:	orr	x5, x7, x1
  4144c8:	cbnz	x5, 41450c <_obstack_memory_used@@Base+0x19c4>
  4144cc:	mov	x7, #0x0                   	// #0
  4144d0:	mov	x1, #0x8                   	// #8
  4144d4:	mov	x3, #0x7fff                	// #32767
  4144d8:	mov	x16, #0x2                   	// #2
  4144dc:	mov	w0, #0x0                   	// #0
  4144e0:	b	4140ac <_obstack_memory_used@@Base+0x1564>
  4144e4:	mov	w1, #0x7fff                	// #32767
  4144e8:	mov	x4, #0x0                   	// #0
  4144ec:	mov	x5, #0x0                   	// #0
  4144f0:	b	4141b8 <_obstack_memory_used@@Base+0x1670>
  4144f4:	orr	x1, x1, #0x1
  4144f8:	mov	x9, x3
  4144fc:	mov	x4, #0x0                   	// #0
  414500:	mov	x6, #0x0                   	// #0
  414504:	mov	x2, #0x1                   	// #1
  414508:	b	4140f0 <_obstack_memory_used@@Base+0x15a8>
  41450c:	lsr	x0, x7, #47
  414510:	mov	x5, x1
  414514:	eor	x0, x0, #0x1
  414518:	mov	x1, #0xc                   	// #12
  41451c:	and	w0, w0, #0x1
  414520:	mov	x3, #0x7fff                	// #32767
  414524:	mov	x16, #0x3                   	// #3
  414528:	b	4140ac <_obstack_memory_used@@Base+0x1564>
  41452c:	mov	x7, #0x0                   	// #0
  414530:	mov	x1, #0x4                   	// #4
  414534:	mov	x3, #0x0                   	// #0
  414538:	mov	x16, #0x1                   	// #1
  41453c:	mov	w0, #0x0                   	// #0
  414540:	b	4140ac <_obstack_memory_used@@Base+0x1564>
  414544:	mov	x1, #0x1                   	// #1
  414548:	sub	x2, x1, x2
  41454c:	cmp	x2, #0x74
  414550:	b.gt	4145c8 <_obstack_memory_used@@Base+0x1a80>
  414554:	cmp	x2, #0x3f
  414558:	b.le	4146a8 <_obstack_memory_used@@Base+0x1b60>
  41455c:	mov	w1, #0x80                  	// #128
  414560:	sub	w1, w1, w2
  414564:	cmp	x2, #0x40
  414568:	sub	w2, w2, #0x40
  41456c:	lsl	x1, x4, x1
  414570:	orr	x1, x6, x1
  414574:	csel	x6, x1, x6, ne  // ne = any
  414578:	lsr	x2, x4, x2
  41457c:	cmp	x6, #0x0
  414580:	cset	x5, ne  // ne = any
  414584:	orr	x5, x5, x2
  414588:	ands	x2, x5, #0x7
  41458c:	b.eq	4146dc <_obstack_memory_used@@Base+0x1b94>  // b.none
  414590:	mov	x2, #0x0                   	// #0
  414594:	and	x11, x11, #0xc00000
  414598:	orr	w0, w0, #0x10
  41459c:	cmp	x11, #0x400, lsl #12
  4145a0:	b.eq	4147ec <_obstack_memory_used@@Base+0x1ca4>  // b.none
  4145a4:	cmp	x11, #0x800, lsl #12
  4145a8:	b.eq	414800 <_obstack_memory_used@@Base+0x1cb8>  // b.none
  4145ac:	cbz	x11, 414744 <_obstack_memory_used@@Base+0x1bfc>
  4145b0:	tbnz	x2, #51, 41475c <_obstack_memory_used@@Base+0x1c14>
  4145b4:	ubfx	x4, x2, #3, #48
  4145b8:	extr	x5, x2, x5, #3
  4145bc:	orr	w0, w0, #0x8
  4145c0:	mov	w1, #0x0                   	// #0
  4145c4:	b	4145f8 <_obstack_memory_used@@Base+0x1ab0>
  4145c8:	orr	x5, x6, x4
  4145cc:	cbz	x5, 4145ec <_obstack_memory_used@@Base+0x1aa4>
  4145d0:	and	x11, x11, #0xc00000
  4145d4:	orr	w0, w0, #0x10
  4145d8:	cmp	x11, #0x400, lsl #12
  4145dc:	sub	x5, x1, x8
  4145e0:	b.eq	4145ec <_obstack_memory_used@@Base+0x1aa4>  // b.none
  4145e4:	cmp	x11, #0x800, lsl #12
  4145e8:	csel	x5, x8, xzr, eq  // eq = none
  4145ec:	orr	w0, w0, #0x8
  4145f0:	mov	w1, #0x0                   	// #0
  4145f4:	mov	x4, #0x0                   	// #0
  4145f8:	mov	x3, #0x0                   	// #0
  4145fc:	fmov	d0, x5
  414600:	bfxil	x3, x4, #0, #48
  414604:	bfi	x3, x1, #48, #15
  414608:	bfi	x3, x10, #63, #1
  41460c:	fmov	v0.d[1], x3
  414610:	str	q0, [sp, #48]
  414614:	bl	414a58 <_obstack_memory_used@@Base+0x1f10>
  414618:	ldr	q0, [sp, #48]
  41461c:	ldp	x29, x30, [sp], #80
  414620:	ret
  414624:	clz	x9, x6
  414628:	add	x2, x9, #0x31
  41462c:	add	x9, x9, #0x40
  414630:	cmp	x2, #0x3c
  414634:	b.le	414494 <_obstack_memory_used@@Base+0x194c>
  414638:	sub	w2, w2, #0x3d
  41463c:	lsl	x4, x6, x2
  414640:	mov	x6, #0x0                   	// #0
  414644:	b	4144b0 <_obstack_memory_used@@Base+0x1968>
  414648:	clz	x3, x1
  41464c:	add	x4, x3, #0x31
  414650:	add	x0, x3, #0x40
  414654:	cmp	x4, #0x3c
  414658:	b.le	414434 <_obstack_memory_used@@Base+0x18ec>
  41465c:	sub	w4, w4, #0x3d
  414660:	mov	x5, #0x0                   	// #0
  414664:	lsl	x7, x1, x4
  414668:	b	414450 <_obstack_memory_used@@Base+0x1908>
  41466c:	and	x5, x11, #0xc00000
  414670:	cmp	x5, #0x400, lsl #12
  414674:	b.eq	414770 <_obstack_memory_used@@Base+0x1c28>  // b.none
  414678:	cmp	x5, #0x800, lsl #12
  41467c:	b.eq	414700 <_obstack_memory_used@@Base+0x1bb8>  // b.none
  414680:	cbz	x5, 4146f4 <_obstack_memory_used@@Base+0x1bac>
  414684:	mov	x4, #0xffffffffffff        	// #281474976710655
  414688:	mov	x5, #0xffffffffffffffff    	// #-1
  41468c:	mov	w2, #0x14                  	// #20
  414690:	orr	w0, w0, w2
  414694:	b	4145f8 <_obstack_memory_used@@Base+0x1ab0>
  414698:	mov	x3, x9
  41469c:	ldp	x19, x20, [sp, #16]
  4146a0:	ldp	x21, x22, [sp, #32]
  4146a4:	b	4143a0 <_obstack_memory_used@@Base+0x1858>
  4146a8:	mov	w1, #0x40                  	// #64
  4146ac:	sub	w1, w1, w2
  4146b0:	lsr	x3, x6, x2
  4146b4:	lsl	x6, x6, x1
  4146b8:	cmp	x6, #0x0
  4146bc:	lsl	x5, x4, x1
  4146c0:	cset	x1, ne  // ne = any
  4146c4:	orr	x5, x5, x3
  4146c8:	lsr	x2, x4, x2
  4146cc:	orr	x5, x5, x1
  4146d0:	tst	x5, #0x7
  4146d4:	b.ne	414594 <_obstack_memory_used@@Base+0x1a4c>  // b.any
  4146d8:	tbnz	x2, #51, 41480c <_obstack_memory_used@@Base+0x1cc4>
  4146dc:	ubfx	x4, x2, #3, #48
  4146e0:	extr	x5, x2, x5, #3
  4146e4:	mov	w1, #0x0                   	// #0
  4146e8:	tbz	w11, #11, 4141b8 <_obstack_memory_used@@Base+0x1670>
  4146ec:	orr	w0, w0, #0x8
  4146f0:	b	4145f8 <_obstack_memory_used@@Base+0x1ab0>
  4146f4:	mov	w1, #0x7fff                	// #32767
  4146f8:	mov	x4, #0x0                   	// #0
  4146fc:	b	41468c <_obstack_memory_used@@Base+0x1b44>
  414700:	cmp	x8, #0x0
  414704:	mov	w2, #0x7fff                	// #32767
  414708:	mov	x4, #0xffffffffffff        	// #281474976710655
  41470c:	csel	w1, w1, w2, eq  // eq = none
  414710:	csel	x4, x4, xzr, eq  // eq = none
  414714:	csetm	x5, eq  // eq = none
  414718:	b	41468c <_obstack_memory_used@@Base+0x1b44>
  41471c:	and	x1, x6, #0xf
  414720:	cmp	x1, #0x4
  414724:	b.eq	4143d4 <_obstack_memory_used@@Base+0x188c>  // b.none
  414728:	adds	x6, x6, #0x4
  41472c:	cinc	x4, x4, cs  // cs = hs, nlast
  414730:	b	4143d4 <_obstack_memory_used@@Base+0x188c>
  414734:	cbz	x8, 4143d4 <_obstack_memory_used@@Base+0x188c>
  414738:	adds	x6, x6, #0x8
  41473c:	cinc	x4, x4, cs  // cs = hs, nlast
  414740:	b	4143d4 <_obstack_memory_used@@Base+0x188c>
  414744:	and	x1, x5, #0xf
  414748:	cmp	x1, #0x4
  41474c:	b.eq	414758 <_obstack_memory_used@@Base+0x1c10>  // b.none
  414750:	adds	x5, x5, #0x4
  414754:	cinc	x2, x2, cs  // cs = hs, nlast
  414758:	tbz	x2, #51, 4145b4 <_obstack_memory_used@@Base+0x1a6c>
  41475c:	orr	w0, w0, #0x8
  414760:	mov	w1, #0x1                   	// #1
  414764:	mov	x4, #0x0                   	// #0
  414768:	mov	x5, #0x0                   	// #0
  41476c:	b	4145f8 <_obstack_memory_used@@Base+0x1ab0>
  414770:	cmp	x8, #0x0
  414774:	mov	w2, #0x7fff                	// #32767
  414778:	mov	x4, #0xffffffffffff        	// #281474976710655
  41477c:	csel	w1, w1, w2, ne  // ne = any
  414780:	csel	x4, x4, xzr, ne  // ne = any
  414784:	csetm	x5, ne  // ne = any
  414788:	b	41468c <_obstack_memory_used@@Base+0x1b44>
  41478c:	cbnz	x8, 4143d4 <_obstack_memory_used@@Base+0x188c>
  414790:	b	414738 <_obstack_memory_used@@Base+0x1bf0>
  414794:	mov	x4, #0x2                   	// #2
  414798:	cmp	x1, #0xf
  41479c:	b.ne	4147c0 <_obstack_memory_used@@Base+0x1c78>  // b.any
  4147a0:	tbz	x7, #47, 4147d8 <_obstack_memory_used@@Base+0x1c90>
  4147a4:	tbnz	x2, #47, 4147d8 <_obstack_memory_used@@Base+0x1c90>
  4147a8:	orr	x4, x2, #0x800000000000
  4147ac:	mov	w10, w15
  4147b0:	and	x4, x4, #0xffffffffffff
  4147b4:	mov	x5, x6
  4147b8:	mov	w1, #0x7fff                	// #32767
  4147bc:	b	4141b8 <_obstack_memory_used@@Base+0x1670>
  4147c0:	cmp	x1, #0xb
  4147c4:	b.ne	414110 <_obstack_memory_used@@Base+0x15c8>  // b.any
  4147c8:	mov	x7, x2
  4147cc:	mov	x5, x6
  4147d0:	mov	x16, x4
  4147d4:	b	414118 <_obstack_memory_used@@Base+0x15d0>
  4147d8:	orr	x4, x7, #0x800000000000
  4147dc:	mov	w10, w12
  4147e0:	and	x4, x4, #0xffffffffffff
  4147e4:	mov	w1, #0x7fff                	// #32767
  4147e8:	b	4141b8 <_obstack_memory_used@@Base+0x1670>
  4147ec:	cbnz	x8, 414758 <_obstack_memory_used@@Base+0x1c10>
  4147f0:	adds	x5, x5, #0x8
  4147f4:	cinc	x2, x2, cs  // cs = hs, nlast
  4147f8:	tbnz	x2, #51, 41475c <_obstack_memory_used@@Base+0x1c14>
  4147fc:	b	4145b4 <_obstack_memory_used@@Base+0x1a6c>
  414800:	cbnz	x8, 4147f0 <_obstack_memory_used@@Base+0x1ca8>
  414804:	tbnz	x2, #51, 41475c <_obstack_memory_used@@Base+0x1c14>
  414808:	b	4145b4 <_obstack_memory_used@@Base+0x1a6c>
  41480c:	orr	w0, w0, #0x10
  414810:	b	41475c <_obstack_memory_used@@Base+0x1c14>
  414814:	mov	x2, x4
  414818:	mov	x4, #0x3                   	// #3
  41481c:	b	414798 <_obstack_memory_used@@Base+0x1c50>
  414820:	mov	w10, w15
  414824:	mov	x8, x13
  414828:	b	414134 <_obstack_memory_used@@Base+0x15ec>
  41482c:	nop
  414830:	cbz	w0, 414874 <_obstack_memory_used@@Base+0x1d2c>
  414834:	mov	w0, w0
  414838:	mov	w1, #0x403e                	// #16446
  41483c:	clz	x3, x0
  414840:	mov	w2, #0x402f                	// #16431
  414844:	sub	w1, w1, w3
  414848:	mov	x3, #0x0                   	// #0
  41484c:	sub	w2, w2, w1
  414850:	and	w1, w1, #0x7fff
  414854:	lsl	x0, x0, x2
  414858:	and	x0, x0, #0xffffffffffff
  41485c:	mov	x2, #0x0                   	// #0
  414860:	fmov	d0, x2
  414864:	bfxil	x3, x0, #0, #48
  414868:	bfi	x3, x1, #48, #16
  41486c:	fmov	v0.d[1], x3
  414870:	ret
  414874:	mov	x0, #0x0                   	// #0
  414878:	mov	x3, #0x0                   	// #0
  41487c:	bfxil	x3, x0, #0, #48
  414880:	mov	x2, #0x0                   	// #0
  414884:	fmov	d0, x2
  414888:	mov	w1, #0x0                   	// #0
  41488c:	bfi	x3, x1, #48, #16
  414890:	fmov	v0.d[1], x3
  414894:	ret
  414898:	stp	x29, x30, [sp, #-48]!
  41489c:	mov	x29, sp
  4148a0:	str	x19, [sp, #16]
  4148a4:	str	q0, [sp, #32]
  4148a8:	ldr	x19, [sp, #32]
  4148ac:	ldr	x1, [sp, #40]
  4148b0:	mrs	x0, fpcr
  4148b4:	ubfx	x3, x1, #48, #15
  4148b8:	mov	x2, x19
  4148bc:	mov	x4, #0x3ffe                	// #16382
  4148c0:	ubfx	x19, x1, #0, #48
  4148c4:	cmp	x3, x4
  4148c8:	b.gt	4148f4 <_obstack_memory_used@@Base+0x1dac>
  4148cc:	cbnz	x3, 4148d8 <_obstack_memory_used@@Base+0x1d90>
  4148d0:	orr	x19, x2, x19
  4148d4:	cbz	x19, 4148e4 <_obstack_memory_used@@Base+0x1d9c>
  4148d8:	mov	w0, #0x10                  	// #16
  4148dc:	mov	x19, #0x0                   	// #0
  4148e0:	bl	414a58 <_obstack_memory_used@@Base+0x1f10>
  4148e4:	mov	x0, x19
  4148e8:	ldr	x19, [sp, #16]
  4148ec:	ldp	x29, x30, [sp], #48
  4148f0:	ret
  4148f4:	lsr	x0, x1, #63
  4148f8:	mov	x4, #0x403f                	// #16447
  4148fc:	and	w0, w0, #0xff
  414900:	and	x5, x0, #0xff
  414904:	sub	x4, x4, x5
  414908:	cmp	x4, x3
  41490c:	b.le	414960 <_obstack_memory_used@@Base+0x1e18>
  414910:	cbnz	x5, 414974 <_obstack_memory_used@@Base+0x1e2c>
  414914:	mov	x1, x3
  414918:	mov	x0, #0x406f                	// #16495
  41491c:	sub	x3, x0, x3
  414920:	orr	x4, x19, #0x1000000000000
  414924:	cmp	x3, #0x3f
  414928:	b.gt	414984 <_obstack_memory_used@@Base+0x1e3c>
  41492c:	mov	w3, #0xffffbfd1            	// #-16431
  414930:	add	w3, w1, w3
  414934:	sub	w1, w0, w1
  414938:	lsl	x0, x2, x3
  41493c:	cmp	x0, #0x0
  414940:	lsr	x19, x2, x1
  414944:	cset	w0, ne  // ne = any
  414948:	lsl	x4, x4, x3
  41494c:	orr	x19, x19, x4
  414950:	cbz	w0, 4148e4 <_obstack_memory_used@@Base+0x1d9c>
  414954:	mov	w0, #0x10                  	// #16
  414958:	bl	414a58 <_obstack_memory_used@@Base+0x1f10>
  41495c:	b	4148e4 <_obstack_memory_used@@Base+0x1d9c>
  414960:	eor	w19, w0, #0x1
  414964:	mov	w0, #0x1                   	// #1
  414968:	sbfx	x19, x19, #0, #1
  41496c:	bl	414a58 <_obstack_memory_used@@Base+0x1f10>
  414970:	b	4148e4 <_obstack_memory_used@@Base+0x1d9c>
  414974:	mov	w0, #0x1                   	// #1
  414978:	mov	x19, #0x0                   	// #0
  41497c:	bl	414a58 <_obstack_memory_used@@Base+0x1f10>
  414980:	b	4148e4 <_obstack_memory_used@@Base+0x1d9c>
  414984:	mov	w0, #0xffffc011            	// #-16367
  414988:	add	w5, w1, w0
  41498c:	mov	w0, #0x402f                	// #16431
  414990:	cmp	x3, #0x40
  414994:	sub	w1, w0, w1
  414998:	lsl	x0, x4, x5
  41499c:	orr	x0, x2, x0
  4149a0:	csel	x2, x0, x2, ne  // ne = any
  4149a4:	lsr	x19, x4, x1
  4149a8:	cmp	x2, #0x0
  4149ac:	cset	w0, ne  // ne = any
  4149b0:	b	414950 <_obstack_memory_used@@Base+0x1e08>
  4149b4:	nop
  4149b8:	cbz	x0, 414a0c <_obstack_memory_used@@Base+0x1ec4>
  4149bc:	clz	x2, x0
  4149c0:	mov	w1, #0x403e                	// #16446
  4149c4:	sub	w1, w1, w2
  4149c8:	mov	x2, #0x406f                	// #16495
  4149cc:	and	w4, w1, #0x7fff
  4149d0:	sub	x3, x2, w1, sxtw
  4149d4:	cmp	x3, #0x3f
  4149d8:	b.gt	414a2c <_obstack_memory_used@@Base+0x1ee4>
  4149dc:	sub	w2, w2, w1
  4149e0:	mov	w3, #0xffffbfd1            	// #-16431
  4149e4:	add	w1, w1, w3
  4149e8:	mov	x3, #0x0                   	// #0
  4149ec:	lsr	x1, x0, x1
  4149f0:	and	x1, x1, #0xffffffffffff
  4149f4:	lsl	x0, x0, x2
  4149f8:	fmov	d0, x0
  4149fc:	bfxil	x3, x1, #0, #48
  414a00:	bfi	x3, x4, #48, #16
  414a04:	fmov	v0.d[1], x3
  414a08:	ret
  414a0c:	mov	x1, #0x0                   	// #0
  414a10:	mov	x3, #0x0                   	// #0
  414a14:	bfxil	x3, x1, #0, #48
  414a18:	fmov	d0, x0
  414a1c:	mov	w4, #0x0                   	// #0
  414a20:	bfi	x3, x4, #48, #16
  414a24:	fmov	v0.d[1], x3
  414a28:	ret
  414a2c:	mov	w2, #0x402f                	// #16431
  414a30:	sub	w1, w2, w1
  414a34:	mov	x3, #0x0                   	// #0
  414a38:	lsl	x1, x0, x1
  414a3c:	and	x1, x1, #0xffffffffffff
  414a40:	mov	x0, #0x0                   	// #0
  414a44:	fmov	d0, x0
  414a48:	bfxil	x3, x1, #0, #48
  414a4c:	bfi	x3, x4, #48, #16
  414a50:	fmov	v0.d[1], x3
  414a54:	ret
  414a58:	tbz	w0, #0, 414a68 <_obstack_memory_used@@Base+0x1f20>
  414a5c:	movi	v1.2s, #0x0
  414a60:	fdiv	s0, s1, s1
  414a64:	mrs	x1, fpsr
  414a68:	tbz	w0, #1, 414a7c <_obstack_memory_used@@Base+0x1f34>
  414a6c:	fmov	s1, #1.000000000000000000e+00
  414a70:	movi	v2.2s, #0x0
  414a74:	fdiv	s0, s1, s2
  414a78:	mrs	x1, fpsr
  414a7c:	tbz	w0, #2, 414a9c <_obstack_memory_used@@Base+0x1f54>
  414a80:	mov	w2, #0xc5ae                	// #50606
  414a84:	mov	w1, #0x7f7fffff            	// #2139095039
  414a88:	movk	w2, #0x749d, lsl #16
  414a8c:	fmov	s1, w1
  414a90:	fmov	s2, w2
  414a94:	fadd	s0, s1, s2
  414a98:	mrs	x1, fpsr
  414a9c:	tbz	w0, #3, 414aac <_obstack_memory_used@@Base+0x1f64>
  414aa0:	movi	v1.2s, #0x80, lsl #16
  414aa4:	fmul	s0, s1, s1
  414aa8:	mrs	x1, fpsr
  414aac:	tbz	w0, #4, 414ac4 <_obstack_memory_used@@Base+0x1f7c>
  414ab0:	mov	w0, #0x7f7fffff            	// #2139095039
  414ab4:	fmov	s2, #1.000000000000000000e+00
  414ab8:	fmov	s1, w0
  414abc:	fsub	s0, s1, s2
  414ac0:	mrs	x0, fpsr
  414ac4:	ret
  414ac8:	stp	x29, x30, [sp, #-64]!
  414acc:	mov	x29, sp
  414ad0:	stp	x19, x20, [sp, #16]
  414ad4:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x174b8>
  414ad8:	add	x20, x20, #0xde0
  414adc:	stp	x21, x22, [sp, #32]
  414ae0:	adrp	x21, 42a000 <_obstack_memory_used@@Base+0x174b8>
  414ae4:	add	x21, x21, #0xdd8
  414ae8:	sub	x20, x20, x21
  414aec:	mov	w22, w0
  414af0:	stp	x23, x24, [sp, #48]
  414af4:	mov	x23, x1
  414af8:	mov	x24, x2
  414afc:	bl	402490 <mbrtowc@plt-0x40>
  414b00:	cmp	xzr, x20, asr #3
  414b04:	b.eq	414b30 <_obstack_memory_used@@Base+0x1fe8>  // b.none
  414b08:	asr	x20, x20, #3
  414b0c:	mov	x19, #0x0                   	// #0
  414b10:	ldr	x3, [x21, x19, lsl #3]
  414b14:	mov	x2, x24
  414b18:	add	x19, x19, #0x1
  414b1c:	mov	x1, x23
  414b20:	mov	w0, w22
  414b24:	blr	x3
  414b28:	cmp	x20, x19
  414b2c:	b.ne	414b10 <_obstack_memory_used@@Base+0x1fc8>  // b.any
  414b30:	ldp	x19, x20, [sp, #16]
  414b34:	ldp	x21, x22, [sp, #32]
  414b38:	ldp	x23, x24, [sp, #48]
  414b3c:	ldp	x29, x30, [sp], #64
  414b40:	ret
  414b44:	nop
  414b48:	ret
  414b4c:	nop
  414b50:	adrp	x2, 42b000 <_obstack_memory_used@@Base+0x184b8>
  414b54:	mov	x1, #0x0                   	// #0
  414b58:	ldr	x2, [x2, #896]
  414b5c:	b	402640 <__cxa_atexit@plt>
  414b60:	mov	x2, x1
  414b64:	mov	x1, x0
  414b68:	mov	w0, #0x0                   	// #0
  414b6c:	b	402b60 <__xstat@plt>
  414b70:	mov	x2, x1
  414b74:	mov	w1, w0
  414b78:	mov	w0, #0x0                   	// #0
  414b7c:	b	402ac0 <__fxstat@plt>
  414b80:	mov	x2, x1
  414b84:	mov	x1, x0
  414b88:	mov	w0, #0x0                   	// #0
  414b8c:	b	402a50 <__lxstat@plt>
  414b90:	mov	x4, x1
  414b94:	mov	x5, x2
  414b98:	mov	w1, w0
  414b9c:	mov	x2, x4
  414ba0:	mov	w0, #0x0                   	// #0
  414ba4:	mov	w4, w3
  414ba8:	mov	x3, x5
  414bac:	b	402bb0 <__fxstatat@plt>

Disassembly of section .fini:

0000000000414bb0 <.fini>:
  414bb0:	stp	x29, x30, [sp, #-16]!
  414bb4:	mov	x29, sp
  414bb8:	ldp	x29, x30, [sp], #16
  414bbc:	ret
