
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//30-systemd-environment-d-generator_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400ac0 <_init>:
  400ac0:	stp	x29, x30, [sp, #-16]!
  400ac4:	mov	x29, sp
  400ac8:	bl	400ca0 <call_weak_fn>
  400acc:	ldp	x29, x30, [sp], #16
  400ad0:	ret

Disassembly of section .plt:

0000000000400ae0 <.plt>:
  400ae0:	stp	x16, x30, [sp, #-16]!
  400ae4:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400ae8:	ldr	x17, [x16, #3904]
  400aec:	add	x16, x16, #0xf40
  400af0:	br	x17
  400af4:	nop
  400af8:	nop
  400afc:	nop

0000000000400b00 <__libc_start_main@plt>:
  400b00:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400b04:	ldr	x17, [x16, #3912]
  400b08:	add	x16, x16, #0xf48
  400b0c:	br	x17

0000000000400b10 <__gmon_start__@plt>:
  400b10:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400b14:	ldr	x17, [x16, #3920]
  400b18:	add	x16, x16, #0xf50
  400b1c:	br	x17

0000000000400b20 <log_parse_environment_realm@plt>:
  400b20:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400b24:	ldr	x17, [x16, #3928]
  400b28:	add	x16, x16, #0xf58
  400b2c:	br	x17

0000000000400b30 <log_assert_failed_realm@plt>:
  400b30:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400b34:	ldr	x17, [x16, #3936]
  400b38:	add	x16, x16, #0xf60
  400b3c:	br	x17

0000000000400b40 <abort@plt>:
  400b40:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400b44:	ldr	x17, [x16, #3944]
  400b48:	add	x16, x16, #0xf68
  400b4c:	br	x17

0000000000400b50 <strv_new_internal@plt>:
  400b50:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400b54:	ldr	x17, [x16, #3952]
  400b58:	add	x16, x16, #0xf70
  400b5c:	br	x17

0000000000400b60 <strv_free@plt>:
  400b60:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400b64:	ldr	x17, [x16, #3960]
  400b68:	add	x16, x16, #0xf78
  400b6c:	br	x17

0000000000400b70 <sd_path_home@plt>:
  400b70:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400b74:	ldr	x17, [x16, #3968]
  400b78:	add	x16, x16, #0xf80
  400b7c:	br	x17

0000000000400b80 <__stack_chk_fail@plt>:
  400b80:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400b84:	ldr	x17, [x16, #3976]
  400b88:	add	x16, x16, #0xf88
  400b8c:	br	x17

0000000000400b90 <merge_env_file@plt>:
  400b90:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400b94:	ldr	x17, [x16, #3984]
  400b98:	add	x16, x16, #0xf90
  400b9c:	br	x17

0000000000400ba0 <strv_extend_front@plt>:
  400ba0:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400ba4:	ldr	x17, [x16, #3992]
  400ba8:	add	x16, x16, #0xf98
  400bac:	br	x17

0000000000400bb0 <log_internal_realm@plt>:
  400bb0:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400bb4:	ldr	x17, [x16, #4000]
  400bb8:	add	x16, x16, #0xfa0
  400bbc:	br	x17

0000000000400bc0 <strv_join_prefix@plt>:
  400bc0:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400bc4:	ldr	x17, [x16, #4008]
  400bc8:	add	x16, x16, #0xfa8
  400bcc:	br	x17

0000000000400bd0 <shell_maybe_quote@plt>:
  400bd0:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400bd4:	ldr	x17, [x16, #4016]
  400bd8:	add	x16, x16, #0xfb0
  400bdc:	br	x17

0000000000400be0 <strchr@plt>:
  400be0:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400be4:	ldr	x17, [x16, #4024]
  400be8:	add	x16, x16, #0xfb8
  400bec:	br	x17

0000000000400bf0 <free@plt>:
  400bf0:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400bf4:	ldr	x17, [x16, #4032]
  400bf8:	add	x16, x16, #0xfc0
  400bfc:	br	x17

0000000000400c00 <printf@plt>:
  400c00:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400c04:	ldr	x17, [x16, #4040]
  400c08:	add	x16, x16, #0xfc8
  400c0c:	br	x17

0000000000400c10 <conf_files_list_strv@plt>:
  400c10:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400c14:	ldr	x17, [x16, #4048]
  400c18:	add	x16, x16, #0xfd0
  400c1c:	br	x17

0000000000400c20 <log_open@plt>:
  400c20:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400c24:	ldr	x17, [x16, #4056]
  400c28:	add	x16, x16, #0xfd8
  400c2c:	br	x17

0000000000400c30 <log_oom_internal@plt>:
  400c30:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400c34:	ldr	x17, [x16, #4064]
  400c38:	add	x16, x16, #0xfe0
  400c3c:	br	x17

0000000000400c40 <log_get_max_level_realm@plt>:
  400c40:	adrp	x16, 411000 <__FRAME_END__+0xfa70>
  400c44:	ldr	x17, [x16, #4072]
  400c48:	add	x16, x16, #0xfe8
  400c4c:	br	x17

Disassembly of section .text:

0000000000400c50 <_start>:
  400c50:	mov	x29, #0x0                   	// #0
  400c54:	mov	x30, #0x0                   	// #0
  400c58:	mov	x5, x0
  400c5c:	ldr	x1, [sp]
  400c60:	add	x2, sp, #0x8
  400c64:	mov	x6, sp
  400c68:	movz	x0, #0x0, lsl #48
  400c6c:	movk	x0, #0x0, lsl #32
  400c70:	movk	x0, #0x40, lsl #16
  400c74:	movk	x0, #0xda0
  400c78:	movz	x3, #0x0, lsl #48
  400c7c:	movk	x3, #0x0, lsl #32
  400c80:	movk	x3, #0x40, lsl #16
  400c84:	movk	x3, #0x1188
  400c88:	movz	x4, #0x0, lsl #48
  400c8c:	movk	x4, #0x0, lsl #32
  400c90:	movk	x4, #0x40, lsl #16
  400c94:	movk	x4, #0x1208
  400c98:	bl	400b00 <__libc_start_main@plt>
  400c9c:	bl	400b40 <abort@plt>

0000000000400ca0 <call_weak_fn>:
  400ca0:	adrp	x0, 411000 <__FRAME_END__+0xfa70>
  400ca4:	ldr	x0, [x0, #4088]
  400ca8:	cbz	x0, 400cb0 <call_weak_fn+0x10>
  400cac:	b	400b10 <__gmon_start__@plt>
  400cb0:	ret

0000000000400cb4 <deregister_tm_clones>:
  400cb4:	adrp	x0, 412000 <__TMC_END__>
  400cb8:	add	x0, x0, #0x0
  400cbc:	adrp	x1, 412000 <__TMC_END__>
  400cc0:	add	x1, x1, #0x0
  400cc4:	cmp	x0, x1
  400cc8:	b.eq	400cfc <deregister_tm_clones+0x48>  // b.none
  400ccc:	stp	x29, x30, [sp, #-32]!
  400cd0:	mov	x29, sp
  400cd4:	adrp	x0, 401000 <main+0x260>
  400cd8:	ldr	x0, [x0, #544]
  400cdc:	str	x0, [sp, #24]
  400ce0:	mov	x1, x0
  400ce4:	cbz	x1, 400cf4 <deregister_tm_clones+0x40>
  400ce8:	adrp	x0, 412000 <__TMC_END__>
  400cec:	add	x0, x0, #0x0
  400cf0:	blr	x1
  400cf4:	ldp	x29, x30, [sp], #32
  400cf8:	ret
  400cfc:	ret

0000000000400d00 <register_tm_clones>:
  400d00:	adrp	x0, 412000 <__TMC_END__>
  400d04:	add	x0, x0, #0x0
  400d08:	adrp	x1, 412000 <__TMC_END__>
  400d0c:	add	x1, x1, #0x0
  400d10:	sub	x0, x0, x1
  400d14:	lsr	x1, x0, #63
  400d18:	add	x0, x1, x0, asr #3
  400d1c:	cmp	xzr, x0, asr #1
  400d20:	b.eq	400d58 <register_tm_clones+0x58>  // b.none
  400d24:	stp	x29, x30, [sp, #-32]!
  400d28:	mov	x29, sp
  400d2c:	asr	x1, x0, #1
  400d30:	adrp	x0, 401000 <main+0x260>
  400d34:	ldr	x0, [x0, #552]
  400d38:	str	x0, [sp, #24]
  400d3c:	mov	x2, x0
  400d40:	cbz	x2, 400d50 <register_tm_clones+0x50>
  400d44:	adrp	x0, 412000 <__TMC_END__>
  400d48:	add	x0, x0, #0x0
  400d4c:	blr	x2
  400d50:	ldp	x29, x30, [sp], #32
  400d54:	ret
  400d58:	ret

0000000000400d5c <__do_global_dtors_aux>:
  400d5c:	adrp	x0, 412000 <__TMC_END__>
  400d60:	ldrb	w0, [x0]
  400d64:	cbnz	w0, 400d88 <__do_global_dtors_aux+0x2c>
  400d68:	stp	x29, x30, [sp, #-16]!
  400d6c:	mov	x29, sp
  400d70:	bl	400cb4 <deregister_tm_clones>
  400d74:	adrp	x0, 412000 <__TMC_END__>
  400d78:	mov	w1, #0x1                   	// #1
  400d7c:	strb	w1, [x0]
  400d80:	ldp	x29, x30, [sp], #16
  400d84:	ret
  400d88:	ret

0000000000400d8c <frame_dummy>:
  400d8c:	stp	x29, x30, [sp, #-16]!
  400d90:	mov	x29, sp
  400d94:	bl	400d00 <register_tm_clones>
  400d98:	ldp	x29, x30, [sp], #16
  400d9c:	ret

0000000000400da0 <main>:
  400da0:	stp	x29, x30, [sp, #-128]!
  400da4:	mov	x29, sp
  400da8:	stp	x19, x20, [sp, #16]
  400dac:	mov	w19, w0
  400db0:	adrp	x0, 411000 <__FRAME_END__+0xfa70>
  400db4:	ldr	x1, [x0, #3320]
  400db8:	str	x1, [sp, #120]
  400dbc:	mov	x1, #0x0                   	// #0
  400dc0:	mov	w0, #0x0                   	// #0
  400dc4:	bl	400b20 <log_parse_environment_realm@plt>
  400dc8:	bl	400c20 <log_open@plt>
  400dcc:	cmp	w19, #0x1
  400dd0:	b.le	400e38 <main+0x98>
  400dd4:	mov	w0, #0x0                   	// #0
  400dd8:	bl	400c40 <log_get_max_level_realm@plt>
  400ddc:	cmp	w0, #0x2
  400de0:	b.gt	400e08 <main+0x68>
  400de4:	mov	w0, #0x1                   	// #1
  400de8:	adrp	x1, 411000 <__FRAME_END__+0xfa70>
  400dec:	ldr	x2, [sp, #120]
  400df0:	ldr	x1, [x1, #3320]
  400df4:	eor	x1, x2, x1
  400df8:	cbnz	x1, 401178 <main+0x3d8>
  400dfc:	ldp	x19, x20, [sp, #16]
  400e00:	ldp	x29, x30, [sp], #128
  400e04:	ret
  400e08:	adrp	x5, 401000 <main+0x260>
  400e0c:	add	x5, x5, #0x238
  400e10:	adrp	x4, 401000 <main+0x260>
  400e14:	add	x4, x4, #0x3f0
  400e18:	mov	w3, #0x5a                  	// #90
  400e1c:	adrp	x2, 401000 <main+0x260>
  400e20:	add	x2, x2, #0x263
  400e24:	mov	w1, #0x0                   	// #0
  400e28:	mov	w0, #0x3                   	// #3
  400e2c:	bl	400bb0 <log_internal_realm@plt>
  400e30:	mov	w0, #0x1                   	// #1
  400e34:	b	400de8 <main+0x48>
  400e38:	stp	x21, x22, [sp, #32]
  400e3c:	str	xzr, [sp, #88]
  400e40:	str	xzr, [sp, #96]
  400e44:	str	xzr, [sp, #104]
  400e48:	str	xzr, [sp, #112]
  400e4c:	mov	x5, #0x0                   	// #0
  400e50:	mov	x4, #0x0                   	// #0
  400e54:	adrp	x3, 401000 <main+0x260>
  400e58:	add	x3, x3, #0x2a0
  400e5c:	adrp	x2, 401000 <main+0x260>
  400e60:	add	x2, x2, #0x2b8
  400e64:	adrp	x1, 401000 <main+0x260>
  400e68:	add	x1, x1, #0x2d8
  400e6c:	adrp	x0, 401000 <main+0x260>
  400e70:	add	x0, x0, #0x2f0
  400e74:	bl	400b50 <strv_new_internal@plt>
  400e78:	str	x0, [sp, #104]
  400e7c:	cbz	x0, 401130 <main+0x390>
  400e80:	add	x2, sp, #0x70
  400e84:	adrp	x1, 401000 <main+0x260>
  400e88:	add	x1, x1, #0x308
  400e8c:	mov	x0, #0x14                  	// #20
  400e90:	bl	400b70 <sd_path_home@plt>
  400e94:	mov	w19, w0
  400e98:	tbnz	w0, #31, 401134 <main+0x394>
  400e9c:	ldr	x1, [sp, #112]
  400ea0:	add	x0, sp, #0x68
  400ea4:	bl	400ba0 <strv_extend_front@plt>
  400ea8:	mov	w19, w0
  400eac:	tbnz	w0, #31, 401134 <main+0x394>
  400eb0:	stp	x23, x24, [sp, #48]
  400eb4:	mov	w0, #0x0                   	// #0
  400eb8:	bl	400c40 <log_get_max_level_realm@plt>
  400ebc:	cmp	w0, #0x6
  400ec0:	b.gt	400f20 <main+0x180>
  400ec4:	ldr	x21, [sp, #104]
  400ec8:	str	xzr, [sp, #104]
  400ecc:	ldr	x0, [sp, #112]
  400ed0:	bl	400bf0 <free@plt>
  400ed4:	ldr	x0, [sp, #104]
  400ed8:	cbz	x0, 400ee0 <main+0x140>
  400edc:	bl	400b60 <strv_free@plt>
  400ee0:	mov	x4, x21
  400ee4:	mov	w3, #0x0                   	// #0
  400ee8:	mov	x2, #0x0                   	// #0
  400eec:	adrp	x1, 401000 <main+0x260>
  400ef0:	add	x1, x1, #0x360
  400ef4:	add	x0, sp, #0x58
  400ef8:	bl	400c10 <conf_files_list_strv@plt>
  400efc:	mov	w19, w0
  400f00:	tbnz	w0, #31, 4010b4 <main+0x314>
  400f04:	ldr	x20, [sp, #88]
  400f08:	cbz	x20, 40110c <main+0x36c>
  400f0c:	adrp	x23, 401000 <main+0x260>
  400f10:	add	x23, x23, #0x368
  400f14:	adrp	x22, 401000 <main+0x260>
  400f18:	add	x22, x22, #0x3e0
  400f1c:	b	400fd0 <main+0x230>
  400f20:	mov	x2, #0x0                   	// #0
  400f24:	adrp	x1, 401000 <main+0x260>
  400f28:	add	x1, x1, #0x318
  400f2c:	ldr	x0, [sp, #104]
  400f30:	bl	400bc0 <strv_join_prefix@plt>
  400f34:	mov	x19, x0
  400f38:	mov	w0, #0x0                   	// #0
  400f3c:	bl	400c40 <log_get_max_level_realm@plt>
  400f40:	cmp	w0, #0x6
  400f44:	b.le	400f80 <main+0x1e0>
  400f48:	adrp	x6, 401000 <main+0x260>
  400f4c:	add	x6, x6, #0x230
  400f50:	cmp	x19, #0x0
  400f54:	csel	x6, x6, x19, eq  // eq = none
  400f58:	adrp	x5, 401000 <main+0x260>
  400f5c:	add	x5, x5, #0x320
  400f60:	adrp	x4, 401000 <main+0x260>
  400f64:	add	x4, x4, #0x3c8
  400f68:	mov	w3, #0x23                  	// #35
  400f6c:	adrp	x2, 401000 <main+0x260>
  400f70:	add	x2, x2, #0x263
  400f74:	mov	w1, #0x0                   	// #0
  400f78:	mov	w0, #0x7                   	// #7
  400f7c:	bl	400bb0 <log_internal_realm@plt>
  400f80:	mov	x0, x19
  400f84:	bl	400bf0 <free@plt>
  400f88:	b	400ec4 <main+0x124>
  400f8c:	mov	x6, x19
  400f90:	mov	x5, x23
  400f94:	mov	x4, x22
  400f98:	mov	w3, #0x3b                  	// #59
  400f9c:	adrp	x2, 401000 <main+0x260>
  400fa0:	add	x2, x2, #0x263
  400fa4:	mov	w1, #0x0                   	// #0
  400fa8:	mov	w0, #0x7                   	// #7
  400fac:	bl	400bb0 <log_internal_realm@plt>
  400fb0:	ldr	x2, [x20]
  400fb4:	mov	x1, #0x0                   	// #0
  400fb8:	add	x0, sp, #0x60
  400fbc:	bl	400b90 <merge_env_file@plt>
  400fc0:	mov	w19, w0
  400fc4:	cmn	w0, #0xc
  400fc8:	b.eq	4010bc <main+0x31c>  // b.none
  400fcc:	add	x20, x20, #0x8
  400fd0:	ldr	x19, [x20]
  400fd4:	cbz	x19, 400fec <main+0x24c>
  400fd8:	mov	w0, #0x0                   	// #0
  400fdc:	bl	400c40 <log_get_max_level_realm@plt>
  400fe0:	cmp	w0, #0x6
  400fe4:	b.le	400fb0 <main+0x210>
  400fe8:	b	400f8c <main+0x1ec>
  400fec:	ldr	x22, [sp, #96]
  400ff0:	cbz	x22, 4010c4 <main+0x324>
  400ff4:	str	x25, [sp, #64]
  400ff8:	mov	w24, #0x3d                  	// #61
  400ffc:	mov	w25, #0x1                   	// #1
  401000:	adrp	x23, 401000 <main+0x260>
  401004:	add	x23, x23, #0x380
  401008:	b	40104c <main+0x2ac>
  40100c:	adrp	x4, 401000 <main+0x260>
  401010:	add	x4, x4, #0x3b8
  401014:	mov	w3, #0x47                  	// #71
  401018:	adrp	x2, 401000 <main+0x260>
  40101c:	add	x2, x2, #0x263
  401020:	adrp	x1, 401000 <main+0x260>
  401024:	add	x1, x1, #0x378
  401028:	mov	w0, #0x0                   	// #0
  40102c:	bl	400b30 <log_assert_failed_realm@plt>
  401030:	ldr	x2, [x22], #8
  401034:	mov	x3, x0
  401038:	sub	w1, w19, w2
  40103c:	mov	x0, x23
  401040:	bl	400c00 <printf@plt>
  401044:	mov	x0, x20
  401048:	bl	400bf0 <free@plt>
  40104c:	ldr	x0, [x22]
  401050:	cbz	x0, 4010a4 <main+0x304>
  401054:	mov	w1, w24
  401058:	bl	400be0 <strchr@plt>
  40105c:	mov	x19, x0
  401060:	cbz	x0, 40100c <main+0x26c>
  401064:	mov	w1, w25
  401068:	add	x0, x0, #0x1
  40106c:	bl	400bd0 <shell_maybe_quote@plt>
  401070:	mov	x20, x0
  401074:	cbnz	x0, 401030 <main+0x290>
  401078:	adrp	x3, 401000 <main+0x260>
  40107c:	add	x3, x3, #0x3e0
  401080:	mov	w2, #0x4b                  	// #75
  401084:	adrp	x1, 401000 <main+0x260>
  401088:	add	x1, x1, #0x263
  40108c:	mov	w0, #0x0                   	// #0
  401090:	bl	400c30 <log_oom_internal@plt>
  401094:	mov	w19, w0
  401098:	ldp	x23, x24, [sp, #48]
  40109c:	ldr	x25, [sp, #64]
  4010a0:	b	401144 <main+0x3a4>
  4010a4:	mov	w19, #0x0                   	// #0
  4010a8:	ldp	x23, x24, [sp, #48]
  4010ac:	ldr	x25, [sp, #64]
  4010b0:	b	401144 <main+0x3a4>
  4010b4:	ldp	x23, x24, [sp, #48]
  4010b8:	b	401144 <main+0x3a4>
  4010bc:	ldp	x23, x24, [sp, #48]
  4010c0:	b	401144 <main+0x3a4>
  4010c4:	mov	w19, #0x0                   	// #0
  4010c8:	ldp	x23, x24, [sp, #48]
  4010cc:	b	401150 <main+0x3b0>
  4010d0:	mov	w0, #0x0                   	// #0
  4010d4:	bl	400c40 <log_get_max_level_realm@plt>
  4010d8:	cmp	w0, #0x2
  4010dc:	b.le	40116c <main+0x3cc>
  4010e0:	adrp	x5, 401000 <main+0x260>
  4010e4:	add	x5, x5, #0x390
  4010e8:	adrp	x4, 401000 <main+0x260>
  4010ec:	add	x4, x4, #0x3f0
  4010f0:	mov	w3, #0x60                  	// #96
  4010f4:	adrp	x2, 401000 <main+0x260>
  4010f8:	add	x2, x2, #0x263
  4010fc:	mov	w1, w19
  401100:	mov	w0, #0x3                   	// #3
  401104:	bl	400bb0 <log_internal_realm@plt>
  401108:	b	40116c <main+0x3cc>
  40110c:	ldr	x22, [sp, #96]
  401110:	cbnz	x22, 400ff4 <main+0x254>
  401114:	mov	w19, #0x0                   	// #0
  401118:	ldp	x23, x24, [sp, #48]
  40111c:	b	40115c <main+0x3bc>
  401120:	mov	x0, x21
  401124:	bl	400b60 <strv_free@plt>
  401128:	mov	x21, #0x0                   	// #0
  40112c:	b	401144 <main+0x3a4>
  401130:	mov	w19, #0xfffffff4            	// #-12
  401134:	ldr	x0, [sp, #112]
  401138:	bl	400bf0 <free@plt>
  40113c:	ldr	x21, [sp, #104]
  401140:	cbnz	x21, 401120 <main+0x380>
  401144:	ldr	x0, [sp, #96]
  401148:	cbz	x0, 401150 <main+0x3b0>
  40114c:	bl	400b60 <strv_free@plt>
  401150:	ldr	x0, [sp, #88]
  401154:	cbz	x0, 40115c <main+0x3bc>
  401158:	bl	400b60 <strv_free@plt>
  40115c:	cbz	x21, 401168 <main+0x3c8>
  401160:	mov	x0, x21
  401164:	bl	400b60 <strv_free@plt>
  401168:	tbnz	w19, #31, 4010d0 <main+0x330>
  40116c:	lsr	w0, w19, #31
  401170:	ldp	x21, x22, [sp, #32]
  401174:	b	400de8 <main+0x48>
  401178:	stp	x21, x22, [sp, #32]
  40117c:	stp	x23, x24, [sp, #48]
  401180:	str	x25, [sp, #64]
  401184:	bl	400b80 <__stack_chk_fail@plt>

0000000000401188 <__libc_csu_init>:
  401188:	stp	x29, x30, [sp, #-64]!
  40118c:	mov	x29, sp
  401190:	stp	x19, x20, [sp, #16]
  401194:	adrp	x20, 411000 <__FRAME_END__+0xfa70>
  401198:	add	x20, x20, #0xcf0
  40119c:	stp	x21, x22, [sp, #32]
  4011a0:	adrp	x21, 411000 <__FRAME_END__+0xfa70>
  4011a4:	add	x21, x21, #0xce8
  4011a8:	sub	x20, x20, x21
  4011ac:	mov	w22, w0
  4011b0:	stp	x23, x24, [sp, #48]
  4011b4:	mov	x23, x1
  4011b8:	mov	x24, x2
  4011bc:	bl	400ac0 <_init>
  4011c0:	cmp	xzr, x20, asr #3
  4011c4:	b.eq	4011f0 <__libc_csu_init+0x68>  // b.none
  4011c8:	asr	x20, x20, #3
  4011cc:	mov	x19, #0x0                   	// #0
  4011d0:	ldr	x3, [x21, x19, lsl #3]
  4011d4:	mov	x2, x24
  4011d8:	add	x19, x19, #0x1
  4011dc:	mov	x1, x23
  4011e0:	mov	w0, w22
  4011e4:	blr	x3
  4011e8:	cmp	x20, x19
  4011ec:	b.ne	4011d0 <__libc_csu_init+0x48>  // b.any
  4011f0:	ldp	x19, x20, [sp, #16]
  4011f4:	ldp	x21, x22, [sp, #32]
  4011f8:	ldp	x23, x24, [sp, #48]
  4011fc:	ldp	x29, x30, [sp], #64
  401200:	ret
  401204:	nop

0000000000401208 <__libc_csu_fini>:
  401208:	ret

Disassembly of section .fini:

000000000040120c <_fini>:
  40120c:	stp	x29, x30, [sp, #-16]!
  401210:	mov	x29, sp
  401214:	ldp	x29, x30, [sp], #16
  401218:	ret
