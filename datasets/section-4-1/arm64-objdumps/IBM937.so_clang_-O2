
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//IBM937.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 2a000 <gconv@@Base+0x29740>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 2b000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 2b000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 2b000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 2b000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 2b000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 2b000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 2b000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0xd8>:
     760:	adrp	x0, 2a000 <gconv@@Base+0x29740>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 2b000 <gconv@@Base+0x2a740>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 2b000 <gconv@@Base+0x2a740>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 2a000 <gconv@@Base+0x29740>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 2b000 <gconv@@Base+0x2a740>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 2b000 <gconv@@Base+0x2a740>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 2a000 <gconv@@Base+0x29740>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 2b000 <gconv@@Base+0x2a740>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 2a000 <gconv@@Base+0x29740>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 2b000 <gconv@@Base+0x2a740>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop

0000000000000838 <gconv_init@@Base>:
     838:	stp	x29, x30, [sp, #-32]!
     83c:	mov	x29, sp
     840:	stp	x19, x20, [sp, #16]
     844:	mov	x19, x0
     848:	adrp	x20, 1000 <gconv@@Base+0x740>
     84c:	ldr	x0, [x0, #24]
     850:	add	x20, x20, #0xfe8
     854:	mov	x1, x20
     858:	bl	730 <strcmp@plt>
     85c:	cbnz	w0, 88c <gconv_init@@Base+0x54>
     860:	mov	x1, #0x1                   	// #1
     864:	mov	x0, #0x400000004           	// #17179869188
     868:	movk	x1, #0x2, lsl #32
     86c:	stp	x1, x0, [x19, #72]
     870:	str	xzr, [x19, #96]
     874:	mov	w1, #0x1                   	// #1
     878:	mov	w0, #0x0                   	// #0
     87c:	str	w1, [x19, #88]
     880:	ldp	x19, x20, [sp, #16]
     884:	ldp	x29, x30, [sp], #32
     888:	ret
     88c:	ldr	x0, [x19, #32]
     890:	mov	x1, x20
     894:	bl	730 <strcmp@plt>
     898:	cbnz	w0, 8b8 <gconv_init@@Base+0x80>
     89c:	mov	x1, #0x1                   	// #1
     8a0:	mov	x0, #0xffffffffffffffff    	// #-1
     8a4:	mov	x2, #0x400000004           	// #17179869188
     8a8:	movk	x1, #0x3, lsl #32
     8ac:	stp	x2, x1, [x19, #72]
     8b0:	str	x0, [x19, #96]
     8b4:	b	874 <gconv_init@@Base+0x3c>
     8b8:	mov	w0, #0x1                   	// #1
     8bc:	b	880 <gconv_init@@Base+0x48>

00000000000008c0 <gconv@@Base>:
     8c0:	stp	x29, x30, [sp, #-256]!
     8c4:	mov	x14, x0
     8c8:	mov	x10, x2
     8cc:	mov	x29, sp
     8d0:	stp	x21, x22, [sp, #32]
     8d4:	mov	x21, x1
     8d8:	adrp	x1, 2a000 <gconv@@Base+0x29740>
     8dc:	stp	x19, x20, [sp, #16]
     8e0:	mov	x15, x4
     8e4:	ldr	w19, [x21, #16]
     8e8:	ldr	x1, [x1, #4056]
     8ec:	stp	x23, x24, [sp, #48]
     8f0:	mov	x20, x3
     8f4:	ldr	x0, [x1]
     8f8:	str	x0, [sp, #248]
     8fc:	mov	x0, #0x0                   	// #0
     900:	stp	x25, x26, [sp, #64]
     904:	add	x0, x21, #0x30
     908:	stp	x27, x28, [sp, #80]
     90c:	mov	w26, w7
     910:	mov	x25, x5
     914:	str	x0, [sp, #152]
     918:	add	x27, x14, #0x68
     91c:	mov	w7, w19
     920:	and	w1, w19, #0x1
     924:	mov	x24, #0x0                   	// #0
     928:	tbnz	w19, #0, 948 <gconv@@Base+0x88>
     92c:	ldr	x0, [x14, #104]
     930:	ldr	x24, [x27, #40]
     934:	cbz	x0, 948 <gconv@@Base+0x88>
     938:	adrp	x0, 2a000 <gconv@@Base+0x29740>
     93c:	ldr	x0, [x0, #4040]
     940:	ldr	x0, [x0]
     944:	eor	x24, x24, x0
     948:	cbnz	w6, 1410 <gconv@@Base+0xb50>
     94c:	cmp	x15, #0x0
     950:	add	x0, sp, #0xd0
     954:	ldr	x28, [x21, #32]
     958:	csel	x1, x21, x15, eq  // eq = none
     95c:	cmp	x25, #0x0
     960:	csel	x0, x0, xzr, ne  // ne = any
     964:	ldr	w12, [x28]
     968:	ldr	x8, [x1]
     96c:	str	x0, [sp, #176]
     970:	str	xzr, [sp, #208]
     974:	ldr	x23, [x10]
     978:	ldr	x22, [x21, #8]
     97c:	cbnz	w26, de4 <gconv@@Base+0x524>
     980:	str	w26, [sp, #144]
     984:	mov	x26, x14
     988:	adrp	x0, 2000 <gconv@@Base+0x1740>
     98c:	add	x0, x0, #0x1b8
     990:	add	x18, x0, #0x670
     994:	str	x0, [sp, #184]
     998:	add	x0, sp, #0xe8
     99c:	str	x0, [sp, #192]
     9a0:	ldr	x0, [x26, #96]
     9a4:	str	x15, [sp, #128]
     9a8:	stp	x25, x27, [sp, #160]
     9ac:	mov	x25, x23
     9b0:	mov	x23, x28
     9b4:	mov	w28, w12
     9b8:	mov	x27, x8
     9bc:	and	w13, w28, #0xfffffff8
     9c0:	cbz	x0, b00 <gconv@@Base+0x240>
     9c4:	nop
     9c8:	stp	x25, x27, [sp, #224]
     9cc:	mov	x19, x27
     9d0:	cmp	x20, x25
     9d4:	b.eq	1518 <gconv@@Base+0xc58>  // b.none
     9d8:	mov	w4, w13
     9dc:	mov	x0, x25
     9e0:	add	x3, sp, #0xe0
     9e4:	mov	w9, #0x4                   	// #4
     9e8:	add	x2, x0, #0x4
     9ec:	cmp	x20, x2
     9f0:	b.cc	cac <gconv@@Base+0x3ec>  // b.lo, b.ul, b.last
     9f4:	cmp	x22, x19
     9f8:	b.ls	c90 <gconv@@Base+0x3d0>  // b.plast
     9fc:	ldr	w0, [x0]
     a00:	mov	w1, #0xfffe                	// #65534
     a04:	cmp	w0, w1
     a08:	b.hi	cb8 <gconv@@Base+0x3f8>  // b.pmore
     a0c:	cmp	w0, #0xff
     a10:	b.ls	ce8 <gconv@@Base+0x428>  // b.plast
     a14:	cmp	w0, w1
     a18:	b.ls	d10 <gconv@@Base+0x450>  // b.plast
     a1c:	ldrb	w1, [x18, w0, uxtw]
     a20:	cbz	w1, 14fc <gconv@@Base+0xc3c>
     a24:	cmp	w4, #0x40
     a28:	add	x0, x19, #0x1
     a2c:	b.eq	c64 <gconv@@Base+0x3a4>  // b.none
     a30:	cmp	x22, x0
     a34:	b.cc	c90 <gconv@@Base+0x3d0>  // b.lo, b.ul, b.last
     a38:	str	x0, [sp, #232]
     a3c:	strb	w1, [x19]
     a40:	ldp	x0, x19, [sp, #224]
     a44:	add	x0, x0, #0x4
     a48:	str	x0, [sp, #224]
     a4c:	cmp	x20, x0
     a50:	b.ne	9e8 <gconv@@Base+0x128>  // b.any
     a54:	nop
     a58:	str	x0, [x10]
     a5c:	ldr	x0, [sp, #128]
     a60:	str	w4, [x23]
     a64:	cbnz	x0, c28 <gconv@@Base+0x368>
     a68:	ldp	w1, w0, [x21, #16]
     a6c:	add	w0, w0, #0x1
     a70:	str	w0, [x21, #20]
     a74:	tbnz	w1, #0, 1034 <gconv@@Base+0x774>
     a78:	str	w13, [sp, #136]
     a7c:	cmp	x27, x19
     a80:	b.cs	10ac <gconv@@Base+0x7ec>  // b.hs, b.nlast
     a84:	ldr	x1, [x21]
     a88:	mov	x0, x24
     a8c:	stp	x10, x18, [sp, #104]
     a90:	str	w9, [sp, #120]
     a94:	str	x1, [sp, #216]
     a98:	bl	740 <_dl_mcount_wrapper_check@plt>
     a9c:	ldp	x1, x5, [sp, #152]
     aa0:	mov	x3, x19
     aa4:	ldr	w7, [sp, #144]
     aa8:	add	x2, sp, #0xd8
     aac:	ldr	x0, [sp, #168]
     ab0:	mov	w6, #0x0                   	// #0
     ab4:	mov	x4, #0x0                   	// #0
     ab8:	blr	x24
     abc:	mov	w7, w0
     ac0:	ldr	w9, [sp, #120]
     ac4:	cmp	w0, #0x4
     ac8:	ldp	x10, x18, [sp, #104]
     acc:	b.eq	c9c <gconv@@Base+0x3dc>  // b.none
     ad0:	ldr	x9, [sp, #216]
     ad4:	ldr	w13, [sp, #136]
     ad8:	cmp	x9, x19
     adc:	b.ne	f2c <gconv@@Base+0x66c>  // b.any
     ae0:	cbnz	w7, 150c <gconv@@Base+0xc4c>
     ae4:	ldr	x0, [x26, #96]
     ae8:	ldr	w28, [x23]
     aec:	ldr	w7, [x21, #16]
     af0:	and	w13, w28, #0xfffffff8
     af4:	ldr	x25, [x10]
     af8:	ldr	x27, [x21]
     afc:	cbnz	x0, 9c8 <gconv@@Base+0x108>
     b00:	cmp	x20, x25
     b04:	b.eq	17f0 <gconv@@Base+0xf30>  // b.none
     b08:	add	x4, x27, #0x4
     b0c:	cmp	x22, x4
     b10:	b.cc	1380 <gconv@@Base+0xac0>  // b.lo, b.ul, b.last
     b14:	ldr	x0, [sp, #184]
     b18:	and	w30, w7, #0x2
     b1c:	mov	w5, w13
     b20:	adrp	x7, 10000 <gconv@@Base+0xf740>
     b24:	mov	x2, x25
     b28:	add	x7, x7, #0x3f8
     b2c:	mov	x19, x27
     b30:	add	x6, x0, #0x470
     b34:	mov	w9, #0x4                   	// #4
     b38:	mov	w16, #0x4040                	// #16448
     b3c:	mov	w17, #0xffff                	// #65535
     b40:	b	b78 <gconv@@Base+0x2b8>
     b44:	mov	w1, w0
     b48:	ldrh	w1, [x6, x1, lsl #1]
     b4c:	cmp	w1, #0x0
     b50:	ccmp	w0, #0x0, #0x4, eq  // eq = none
     b54:	b.ne	1338 <gconv@@Base+0xa78>  // b.any
     b58:	add	x2, x2, #0x1
     b5c:	str	w1, [x19]
     b60:	mov	x19, x4
     b64:	cmp	x20, x2
     b68:	b.eq	c14 <gconv@@Base+0x354>  // b.none
     b6c:	add	x4, x19, #0x4
     b70:	cmp	x22, x4
     b74:	b.cc	dc8 <gconv@@Base+0x508>  // b.lo, b.ul, b.last
     b78:	ldrb	w0, [x2]
     b7c:	cmp	w0, #0xe
     b80:	b.eq	dbc <gconv@@Base+0x4fc>  // b.none
     b84:	cmp	w0, #0xf
     b88:	b.eq	dd8 <gconv@@Base+0x518>  // b.none
     b8c:	cbz	w5, b44 <gconv@@Base+0x284>
     b90:	cmp	w5, #0x40
     b94:	b.ne	1c90 <gconv@@Base+0x13d0>  // b.any
     b98:	add	x1, x2, #0x1
     b9c:	cmp	x20, x1
     ba0:	b.ls	1368 <gconv@@Base+0xaa8>  // b.plast
     ba4:	ldrb	w1, [x2, #1]
     ba8:	add	w0, w1, w0, lsl #8
     bac:	adrp	x1, 2000 <gconv@@Base+0x1740>
     bb0:	cmp	w0, w16
     bb4:	add	x1, x1, #0x1b8
     bb8:	b.ls	1378 <gconv@@Base+0xab8>  // b.plast
     bbc:	mov	w3, #0x41fa                	// #16890
     bc0:	b	bc8 <gconv@@Base+0x308>
     bc4:	ldrh	w3, [x1, #10]
     bc8:	add	x1, x1, #0x8
     bcc:	cmp	w0, w3
     bd0:	b.hi	bc4 <gconv@@Base+0x304>  // b.pmore
     bd4:	ldrh	w3, [x1]
     bd8:	cmp	w3, w17
     bdc:	b.eq	10b4 <gconv@@Base+0x7f4>  // b.none
     be0:	cmp	w0, w3
     be4:	b.cc	10b4 <gconv@@Base+0x7f4>  // b.lo, b.ul, b.last
     be8:	ldr	w1, [x1, #4]
     bec:	add	w1, w0, w1
     bf0:	ldrh	w1, [x7, x1, lsl #1]
     bf4:	cmp	w1, #0x0
     bf8:	ccmp	w0, #0x0, #0x4, eq  // eq = none
     bfc:	b.ne	10b4 <gconv@@Base+0x7f4>  // b.any
     c00:	str	w1, [x19]
     c04:	add	x2, x2, #0x2
     c08:	mov	x19, x4
     c0c:	cmp	x20, x2
     c10:	b.ne	b6c <gconv@@Base+0x2ac>  // b.any
     c14:	str	x2, [x10]
     c18:	str	w5, [x23]
     c1c:	nop
     c20:	ldr	x0, [sp, #128]
     c24:	cbz	x0, a68 <gconv@@Base+0x1a8>
     c28:	str	x19, [x0]
     c2c:	adrp	x0, 2a000 <gconv@@Base+0x29740>
     c30:	ldr	x0, [x0, #4056]
     c34:	ldr	x1, [sp, #248]
     c38:	ldr	x0, [x0]
     c3c:	eor	x0, x1, x0
     c40:	cbnz	x0, 1c38 <gconv@@Base+0x1378>
     c44:	mov	w0, w9
     c48:	ldp	x19, x20, [sp, #16]
     c4c:	ldp	x21, x22, [sp, #32]
     c50:	ldp	x23, x24, [sp, #48]
     c54:	ldp	x25, x26, [sp, #64]
     c58:	ldp	x27, x28, [sp, #80]
     c5c:	ldp	x29, x30, [sp], #256
     c60:	ret
     c64:	cmp	x22, x0
     c68:	b.cc	c90 <gconv@@Base+0x3d0>  // b.lo, b.ul, b.last
     c6c:	str	x0, [sp, #232]
     c70:	mov	w0, #0xf                   	// #15
     c74:	strb	w0, [x19]
     c78:	mov	w4, #0x0                   	// #0
     c7c:	ldr	x19, [sp, #232]
     c80:	add	x0, x19, #0x1
     c84:	cmp	x22, x0
     c88:	b.cs	a38 <gconv@@Base+0x178>  // b.hs, b.nlast
     c8c:	nop
     c90:	mov	w9, #0x5                   	// #5
     c94:	ldr	x0, [sp, #224]
     c98:	b	a58 <gconv@@Base+0x198>
     c9c:	mov	w7, w9
     ca0:	cmp	w9, #0x5
     ca4:	b.ne	ae0 <gconv@@Base+0x220>  // b.any
     ca8:	b	ae4 <gconv@@Base+0x224>
     cac:	mov	w9, #0x7                   	// #7
     cb0:	ldr	x0, [sp, #224]
     cb4:	b	a58 <gconv@@Base+0x198>
     cb8:	mov	w1, #0x1c00                	// #7168
     cbc:	cmp	w1, w0, lsr #7
     cc0:	b.eq	135c <gconv@@Base+0xa9c>  // b.none
     cc4:	ldr	x0, [sp, #176]
     cc8:	cbz	x0, 1934 <gconv@@Base+0x1074>
     ccc:	str	w4, [x23]
     cd0:	ldr	w0, [x21, #16]
     cd4:	tbnz	w0, #3, 10d0 <gconv@@Base+0x810>
     cd8:	ldr	x0, [sp, #224]
     cdc:	tbnz	w7, #1, 1148 <gconv@@Base+0x888>
     ce0:	mov	w9, #0x6                   	// #6
     ce4:	b	a58 <gconv@@Base+0x198>
     ce8:	ldrb	w1, [x18, w0, uxtw]
     cec:	cmp	w0, #0x0
     cf0:	ccmp	w1, #0x0, #0x0, ne  // ne = any
     cf4:	b.ne	a24 <gconv@@Base+0x164>  // b.any
     cf8:	cmp	w0, #0xf7
     cfc:	b.hi	14fc <gconv@@Base+0xc3c>  // b.pmore
     d00:	ldr	x1, [sp, #184]
     d04:	mov	w2, #0xa7                  	// #167
     d08:	add	x1, x1, #0x390
     d0c:	b	d38 <gconv@@Base+0x478>
     d10:	ldr	x1, [sp, #184]
     d14:	mov	w5, #0x2d9                 	// #729
     d18:	add	x2, x1, #0x390
     d1c:	b	d28 <gconv@@Base+0x468>
     d20:	ldrh	w5, [x1, #10]
     d24:	mov	x2, x1
     d28:	cmp	w0, w5
     d2c:	add	x1, x2, #0x8
     d30:	b.hi	d20 <gconv@@Base+0x460>  // b.pmore
     d34:	ldrh	w2, [x2, #8]
     d38:	cmp	w0, w2
     d3c:	b.cc	139c <gconv@@Base+0xadc>  // b.lo, b.ul, b.last
     d40:	ldr	w2, [x1, #4]
     d44:	cmp	w0, #0x0
     d48:	adrp	x1, 2000 <gconv@@Base+0x1740>
     d4c:	add	x1, x1, #0x928
     d50:	add	w0, w0, w2
     d54:	lsl	x0, x0, #1
     d58:	add	x2, x0, x1
     d5c:	ldrb	w0, [x0, x1]
     d60:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     d64:	b.eq	139c <gconv@@Base+0xadc>  // b.none
     d68:	cbnz	w4, d8c <gconv@@Base+0x4cc>
     d6c:	add	x1, x19, #0x1
     d70:	cmp	x22, x1
     d74:	b.cc	c90 <gconv@@Base+0x3d0>  // b.lo, b.ul, b.last
     d78:	str	x1, [sp, #232]
     d7c:	mov	w1, #0xe                   	// #14
     d80:	strb	w1, [x19]
     d84:	mov	w4, #0x40                  	// #64
     d88:	ldr	x19, [sp, #232]
     d8c:	add	x1, x19, #0x2
     d90:	cmp	x22, x1
     d94:	b.cc	c90 <gconv@@Base+0x3d0>  // b.lo, b.ul, b.last
     d98:	add	x1, x19, #0x1
     d9c:	str	x1, [sp, #232]
     da0:	strb	w0, [x19]
     da4:	ldr	x0, [sp, #232]
     da8:	ldrb	w1, [x2, #1]
     dac:	add	x2, x0, #0x1
     db0:	str	x2, [sp, #232]
     db4:	strb	w1, [x0]
     db8:	b	a40 <gconv@@Base+0x180>
     dbc:	add	x2, x2, #0x1
     dc0:	mov	w5, #0x40                  	// #64
     dc4:	b	b64 <gconv@@Base+0x2a4>
     dc8:	str	x2, [x10]
     dcc:	mov	w9, #0x5                   	// #5
     dd0:	str	w5, [x23]
     dd4:	b	c20 <gconv@@Base+0x360>
     dd8:	add	x2, x2, #0x1
     ddc:	mov	w5, #0x0                   	// #0
     de0:	b	b64 <gconv@@Base+0x2a4>
     de4:	ands	w0, w12, #0x7
     de8:	b.eq	980 <gconv@@Base+0xc0>  // b.none
     dec:	cbnz	x15, 1cb0 <gconv@@Base+0x13f0>
     df0:	ldr	x1, [x14, #96]
     df4:	and	w5, w12, #0xfffffff8
     df8:	mov	w3, w0
     dfc:	cbz	x1, 1168 <gconv@@Base+0x8a8>
     e00:	stp	x23, x8, [sp, #224]
     e04:	cmp	w0, #0x4
     e08:	b.hi	1ddc <gconv@@Base+0x151c>  // b.pmore
     e0c:	mov	w11, w0
     e10:	cbz	w0, 17e4 <gconv@@Base+0xf24>
     e14:	add	x7, sp, #0xf0
     e18:	add	x6, x28, #0x3
     e1c:	mov	x0, #0x1                   	// #1
     e20:	add	x1, x7, x0
     e24:	ldrb	w4, [x6, x0]
     e28:	cmp	x0, x11
     e2c:	add	x0, x0, #0x1
     e30:	sturb	w4, [x1, #-1]
     e34:	b.ne	e20 <gconv@@Base+0x560>  // b.any
     e38:	mov	x0, #0x4                   	// #4
     e3c:	sub	x0, x0, x11
     e40:	add	x0, x23, x0
     e44:	cmp	x20, x0
     e48:	b.cc	1818 <gconv@@Base+0xf58>  // b.lo, b.ul, b.last
     e4c:	add	x0, x23, #0x1
     e50:	add	x7, sp, #0xf0
     e54:	cmp	x8, x22
     e58:	b.cs	1578 <gconv@@Base+0xcb8>  // b.hs, b.nlast
     e5c:	add	x11, x11, #0x1
     e60:	str	x0, [sp, #224]
     e64:	add	x4, x7, x11
     e68:	cmp	x11, #0x3
     e6c:	ldurb	w1, [x0, #-1]
     e70:	ccmp	x20, x0, #0x0, ls  // ls = plast
     e74:	add	x0, x0, #0x1
     e78:	sturb	w1, [x4, #-1]
     e7c:	b.hi	e5c <gconv@@Base+0x59c>  // b.pmore
     e80:	ldr	w1, [sp, #240]
     e84:	mov	w0, #0xfffe                	// #65534
     e88:	str	x7, [sp, #224]
     e8c:	cmp	w1, w0
     e90:	b.hi	1a3c <gconv@@Base+0x117c>  // b.pmore
     e94:	cmp	w1, #0xff
     e98:	b.ls	1a0c <gconv@@Base+0x114c>  // b.plast
     e9c:	cmp	w1, w0
     ea0:	b.ls	1960 <gconv@@Base+0x10a0>  // b.plast
     ea4:	adrp	x0, 2000 <gconv@@Base+0x1740>
     ea8:	add	x0, x0, #0x1b8
     eac:	add	x2, x0, #0x670
     eb0:	ldrb	w2, [x2, w1, uxtw]
     eb4:	cbz	w2, 1968 <gconv@@Base+0x10a8>
     eb8:	cmp	w5, #0x40
     ebc:	add	x0, x8, #0x1
     ec0:	b.eq	1548 <gconv@@Base+0xc88>  // b.none
     ec4:	cmp	x22, x0
     ec8:	b.cc	1578 <gconv@@Base+0xcb8>  // b.lo, b.ul, b.last
     ecc:	mov	x1, x8
     ed0:	str	x0, [sp, #232]
     ed4:	strb	w2, [x1]
     ed8:	ldr	x0, [sp, #224]
     edc:	add	x0, x0, #0x4
     ee0:	str	x0, [sp, #224]
     ee4:	cmp	x0, x7
     ee8:	b.eq	1808 <gconv@@Base+0xf48>  // b.none
     eec:	ldr	w12, [x28]
     ef0:	sub	x7, x0, x7
     ef4:	and	w3, w12, #0x7
     ef8:	mov	w0, w3
     efc:	cmp	x0, x7
     f00:	b.ge	1f20 <gconv@@Base+0x1660>  // b.tcont
     f04:	ldr	x23, [x10]
     f08:	sub	x0, x7, x0
     f0c:	and	w1, w12, #0xfffffff8
     f10:	ldr	w7, [x21, #16]
     f14:	add	x23, x23, x0
     f18:	str	x23, [x10]
     f1c:	mov	w12, w1
     f20:	ldr	x8, [sp, #232]
     f24:	str	w1, [x28]
     f28:	b	980 <gconv@@Base+0xc0>
     f2c:	str	x25, [x10]
     f30:	ldr	x0, [x26, #96]
     f34:	str	w28, [x23]
     f38:	cbz	x0, 122c <gconv@@Base+0x96c>
     f3c:	stp	x25, x27, [sp, #224]
     f40:	cmp	x20, x25
     f44:	ldr	w19, [x21, #16]
     f48:	b.eq	1b50 <gconv@@Base+0x1290>  // b.none
     f4c:	add	x28, sp, #0xe0
     f50:	mov	x0, x27
     f54:	mov	x3, x28
     f58:	str	x24, [sp, #104]
     f5c:	ldr	x28, [sp, #176]
     f60:	mov	x24, x21
     f64:	mov	x21, x20
     f68:	mov	w20, w19
     f6c:	mov	x19, x23
     f70:	mov	x23, x18
     f74:	str	x27, [sp, #120]
     f78:	mov	x27, x10
     f7c:	str	x22, [sp, #136]
     f80:	mov	x22, x26
     f84:	mov	x26, x9
     f88:	mov	x2, #0x4                   	// #4
     f8c:	str	w7, [sp, #112]
     f90:	add	x4, x25, #0x4
     f94:	cmp	x21, x4
     f98:	b.cc	1660 <gconv@@Base+0xda0>  // b.lo, b.ul, b.last
     f9c:	cmp	x26, x0
     fa0:	b.ls	149c <gconv@@Base+0xbdc>  // b.plast
     fa4:	ldr	w5, [x25]
     fa8:	mov	w6, #0xfffe                	// #65534
     fac:	cmp	w5, w6
     fb0:	b.hi	1740 <gconv@@Base+0xe80>  // b.pmore
     fb4:	cmp	w5, #0xff
     fb8:	b.ls	1698 <gconv@@Base+0xdd8>  // b.plast
     fbc:	cmp	w5, w6
     fc0:	b.ls	1798 <gconv@@Base+0xed8>  // b.plast
     fc4:	ldrb	w6, [x23, w5, uxtw]
     fc8:	cbz	w6, 1b10 <gconv@@Base+0x1250>
     fcc:	cmp	w13, #0x40
     fd0:	add	x4, x0, #0x1
     fd4:	b.eq	1478 <gconv@@Base+0xbb8>  // b.none
     fd8:	cmp	x26, x4
     fdc:	b.cc	149c <gconv@@Base+0xbdc>  // b.lo, b.ul, b.last
     fe0:	str	x4, [sp, #232]
     fe4:	strb	w6, [x0]
     fe8:	ldp	x25, x0, [sp, #224]
     fec:	add	x25, x25, #0x4
     ff0:	str	x25, [sp, #224]
     ff4:	cmp	x21, x25
     ff8:	b.ne	f90 <gconv@@Base+0x6d0>  // b.any
     ffc:	mov	x10, x27
    1000:	mov	x20, x21
    1004:	mov	x26, x22
    1008:	mov	x21, x24
    100c:	mov	x18, x23
    1010:	ldr	w7, [sp, #112]
    1014:	str	x20, [x10]
    1018:	mov	x23, x19
    101c:	ldr	x24, [sp, #104]
    1020:	ldr	x27, [sp, #120]
    1024:	ldr	x22, [sp, #136]
    1028:	ldr	x9, [sp, #216]
    102c:	str	w13, [x19]
    1030:	b	1534 <gconv@@Base+0xc74>
    1034:	ldr	x25, [sp, #160]
    1038:	ldr	x1, [sp, #208]
    103c:	ldr	x0, [x25]
    1040:	str	x19, [x21]
    1044:	ldr	w26, [sp, #144]
    1048:	add	x0, x0, x1
    104c:	str	x0, [x25]
    1050:	cmp	w26, #0x0
    1054:	ccmp	w9, #0x7, #0x0, ne  // ne = any
    1058:	b.ne	c2c <gconv@@Base+0x36c>  // b.any
    105c:	ldr	x0, [x10]
    1060:	sub	x1, x20, x0
    1064:	cmp	x1, #0x3
    1068:	b.gt	1c44 <gconv@@Base+0x1384>
    106c:	ldr	x2, [x21, #32]
    1070:	cmp	x0, x20
    1074:	add	x0, x0, #0x1
    1078:	add	x3, x2, #0x4
    107c:	b.cs	1c3c <gconv@@Base+0x137c>  // b.hs, b.nlast
    1080:	str	x0, [x10]
    1084:	cmp	x20, x0
    1088:	add	x0, x0, #0x1
    108c:	ldurb	w4, [x0, #-2]
    1090:	strb	w4, [x3], #1
    1094:	b.ne	1080 <gconv@@Base+0x7c0>  // b.any
    1098:	ldr	w0, [x2]
    109c:	and	w0, w0, #0xfffffff8
    10a0:	orr	w0, w0, w1
    10a4:	str	w0, [x2]
    10a8:	b	c2c <gconv@@Base+0x36c>
    10ac:	mov	w7, w9
    10b0:	b	ae0 <gconv@@Base+0x220>
    10b4:	ldr	x1, [sp, #176]
    10b8:	cbz	x1, 10c0 <gconv@@Base+0x800>
    10bc:	cbnz	w30, 1130 <gconv@@Base+0x870>
    10c0:	str	x2, [x10]
    10c4:	mov	w9, #0x6                   	// #6
    10c8:	str	w5, [x23]
    10cc:	b	c20 <gconv@@Base+0x360>
    10d0:	ldr	x2, [x10]
    10d4:	mov	x4, x20
    10d8:	ldr	x6, [sp, #176]
    10dc:	mov	x1, x21
    10e0:	ldr	x5, [sp, #192]
    10e4:	mov	x0, x26
    10e8:	stp	x3, x10, [sp, #104]
    10ec:	str	w7, [sp, #120]
    10f0:	str	w13, [sp, #136]
    10f4:	str	x18, [sp, #200]
    10f8:	bl	700 <__gconv_transliterate@plt>
    10fc:	ldr	w4, [x23]
    1100:	mov	w9, w0
    1104:	ldr	w7, [sp, #120]
    1108:	cmp	w0, #0x6
    110c:	ldr	w13, [sp, #136]
    1110:	and	w4, w4, #0xfffffff8
    1114:	ldp	x3, x10, [sp, #104]
    1118:	ldr	x18, [sp, #200]
    111c:	b.eq	14f4 <gconv@@Base+0xc34>  // b.none
    1120:	cmp	w0, #0x5
    1124:	ldp	x0, x19, [sp, #224]
    1128:	b.ne	a4c <gconv@@Base+0x18c>  // b.any
    112c:	b	a58 <gconv@@Base+0x198>
    1130:	ldr	x0, [x1]
    1134:	add	x2, x2, #0x2
    1138:	mov	w9, #0x6                   	// #6
    113c:	add	x0, x0, #0x1
    1140:	str	x0, [x1]
    1144:	b	b64 <gconv@@Base+0x2a4>
    1148:	ldr	x2, [sp, #176]
    114c:	add	x0, x0, #0x4
    1150:	mov	w9, #0x6                   	// #6
    1154:	str	x0, [sp, #224]
    1158:	ldr	x1, [x2]
    115c:	add	x1, x1, #0x1
    1160:	str	x1, [x2]
    1164:	b	a4c <gconv@@Base+0x18c>
    1168:	cmp	w0, #0x4
    116c:	b.hi	1f10 <gconv@@Base+0x1650>  // b.pmore
    1170:	add	x4, x8, #0x4
    1174:	cbz	w0, 15c0 <gconv@@Base+0xd00>
    1178:	ldrb	w1, [x28, #4]
    117c:	tst	w12, #0x6
    1180:	strb	w1, [sp, #240]
    1184:	mov	x1, #0x1                   	// #1
    1188:	b.eq	1198 <gconv@@Base+0x8d8>  // b.none
    118c:	ldrb	w2, [x28, #5]
    1190:	mov	x1, #0x2                   	// #2
    1194:	strb	w2, [sp, #241]
    1198:	cmp	x22, x4
    119c:	b.cc	1578 <gconv@@Base+0xcb8>  // b.lo, b.ul, b.last
    11a0:	add	x7, sp, #0xf0
    11a4:	ldrb	w2, [x23]
    11a8:	add	x9, x1, #0x1
    11ac:	strb	w2, [x7, x1]
    11b0:	ldrb	w6, [sp, #240]
    11b4:	sub	w1, w6, #0xe
    11b8:	and	w1, w1, #0xff
    11bc:	cmp	w1, #0x1
    11c0:	b.ls	1f40 <gconv@@Base+0x1680>  // b.plast
    11c4:	cbnz	w5, 1850 <gconv@@Base+0xf90>
    11c8:	adrp	x0, 2000 <gconv@@Base+0x1740>
    11cc:	add	x0, x0, #0x1b8
    11d0:	add	x0, x0, #0x470
    11d4:	mov	w1, w6
    11d8:	cmp	w6, #0x0
    11dc:	ldrh	w0, [x0, x1, lsl #1]
    11e0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    11e4:	b.eq	1d14 <gconv@@Base+0x1454>  // b.none
    11e8:	str	w0, [x8]
    11ec:	mov	x8, x4
    11f0:	mov	x1, #0x1                   	// #1
    11f4:	ldr	w12, [x28]
    11f8:	and	w3, w12, #0x7
    11fc:	mov	w2, w3
    1200:	cmp	x2, x1
    1204:	b.ge	1f40 <gconv@@Base+0x1680>  // b.tcont
    1208:	ldr	w19, [x21, #16]
    120c:	and	w5, w12, #0xfffffff8
    1210:	sub	x1, x1, x2
    1214:	mov	w12, w5
    1218:	add	x23, x23, x1
    121c:	str	x23, [x10]
    1220:	mov	w7, w19
    1224:	str	w5, [x28]
    1228:	b	980 <gconv@@Base+0xc0>
    122c:	ldr	w6, [x21, #16]
    1230:	cmp	x20, x25
    1234:	b.eq	1b50 <gconv@@Base+0x1290>  // b.none
    1238:	add	x5, x27, #0x4
    123c:	mov	x0, x27
    1240:	cmp	x9, x5
    1244:	mov	x2, #0x4                   	// #4
    1248:	b.cc	1ad8 <gconv@@Base+0x1218>  // b.lo, b.ul, b.last
    124c:	ldp	x8, x1, [sp, #176]
    1250:	adrp	x16, 10000 <gconv@@Base+0xf740>
    1254:	and	w6, w6, #0x2
    1258:	add	x16, x16, #0x3f8
    125c:	mov	w17, #0x4040                	// #16448
    1260:	mov	w19, #0xffff                	// #65535
    1264:	add	x12, x1, #0x470
    1268:	b	12a0 <gconv@@Base+0x9e0>
    126c:	mov	w3, w1
    1270:	cmp	w1, #0x0
    1274:	ldrh	w1, [x12, x3, lsl #1]
    1278:	ccmp	w1, #0x0, #0x0, ne  // ne = any
    127c:	b.eq	1940 <gconv@@Base+0x1080>  // b.none
    1280:	add	x25, x25, #0x1
    1284:	str	w1, [x0]
    1288:	mov	x0, x5
    128c:	cmp	x20, x25
    1290:	b.eq	152c <gconv@@Base+0xc6c>  // b.none
    1294:	add	x5, x0, #0x4
    1298:	cmp	x9, x5
    129c:	b.cc	17d0 <gconv@@Base+0xf10>  // b.lo, b.ul, b.last
    12a0:	ldrb	w1, [x25]
    12a4:	cmp	w1, #0xe
    12a8:	b.eq	17c4 <gconv@@Base+0xf04>  // b.none
    12ac:	cmp	w1, #0xf
    12b0:	b.eq	17d8 <gconv@@Base+0xf18>  // b.none
    12b4:	cbz	w13, 126c <gconv@@Base+0x9ac>
    12b8:	cmp	w13, #0x40
    12bc:	b.ne	1c90 <gconv@@Base+0x13d0>  // b.any
    12c0:	add	x3, x25, #0x1
    12c4:	cmp	x20, x3
    12c8:	b.ls	1aec <gconv@@Base+0x122c>  // b.plast
    12cc:	ldrb	w3, [x25, #1]
    12d0:	add	w1, w3, w1, lsl #8
    12d4:	adrp	x3, 2000 <gconv@@Base+0x1740>
    12d8:	cmp	w1, w17
    12dc:	add	x3, x3, #0x1b8
    12e0:	b.ls	1bec <gconv@@Base+0x132c>  // b.plast
    12e4:	mov	w4, #0x41fa                	// #16890
    12e8:	b	12f0 <gconv@@Base+0xa30>
    12ec:	ldrh	w4, [x3, #10]
    12f0:	add	x3, x3, #0x8
    12f4:	cmp	w1, w4
    12f8:	b.hi	12ec <gconv@@Base+0xa2c>  // b.pmore
    12fc:	ldrh	w4, [x3]
    1300:	cmp	w4, w19
    1304:	b.eq	160c <gconv@@Base+0xd4c>  // b.none
    1308:	cmp	w1, w4
    130c:	b.cc	160c <gconv@@Base+0xd4c>  // b.lo, b.ul, b.last
    1310:	ldr	w3, [x3, #4]
    1314:	add	w3, w1, w3
    1318:	ldrh	w3, [x16, x3, lsl #1]
    131c:	cmp	w3, #0x0
    1320:	ccmp	w1, #0x0, #0x4, eq  // eq = none
    1324:	b.ne	160c <gconv@@Base+0xd4c>  // b.any
    1328:	add	x25, x25, #0x2
    132c:	str	w3, [x0]
    1330:	mov	x0, x5
    1334:	b	128c <gconv@@Base+0x9cc>
    1338:	ldr	x1, [sp, #176]
    133c:	cbz	x1, 10c0 <gconv@@Base+0x800>
    1340:	cbz	w30, 10c0 <gconv@@Base+0x800>
    1344:	ldr	x0, [x1]
    1348:	add	x2, x2, #0x1
    134c:	mov	w9, #0x6                   	// #6
    1350:	add	x0, x0, #0x1
    1354:	str	x0, [x1]
    1358:	b	b64 <gconv@@Base+0x2a4>
    135c:	mov	x0, x2
    1360:	str	x2, [sp, #224]
    1364:	b	a4c <gconv@@Base+0x18c>
    1368:	str	x2, [x10]
    136c:	mov	w9, #0x7                   	// #7
    1370:	str	w5, [x23]
    1374:	b	c20 <gconv@@Base+0x360>
    1378:	mov	w3, #0x4040                	// #16448
    137c:	b	be0 <gconv@@Base+0x320>
    1380:	mov	x2, x25
    1384:	str	x2, [x10]
    1388:	mov	w5, w13
    138c:	mov	x19, x27
    1390:	mov	w9, #0x5                   	// #5
    1394:	str	w5, [x23]
    1398:	b	c20 <gconv@@Base+0x360>
    139c:	ldr	x0, [sp, #176]
    13a0:	cbz	x0, 1934 <gconv@@Base+0x1074>
    13a4:	str	w4, [x23]
    13a8:	ldr	w0, [x21, #16]
    13ac:	tbz	w0, #3, cd8 <gconv@@Base+0x418>
    13b0:	ldr	x2, [x10]
    13b4:	mov	x4, x20
    13b8:	ldr	x6, [sp, #176]
    13bc:	mov	x1, x21
    13c0:	ldr	x5, [sp, #192]
    13c4:	mov	x0, x26
    13c8:	stp	x3, x10, [sp, #104]
    13cc:	str	w7, [sp, #120]
    13d0:	str	w13, [sp, #136]
    13d4:	str	x18, [sp, #200]
    13d8:	bl	700 <__gconv_transliterate@plt>
    13dc:	ldr	w4, [x23]
    13e0:	mov	w9, w0
    13e4:	ldr	w7, [sp, #120]
    13e8:	cmp	w0, #0x6
    13ec:	ldr	w13, [sp, #136]
    13f0:	and	w4, w4, #0xfffffff8
    13f4:	ldp	x3, x10, [sp, #104]
    13f8:	ldr	x18, [sp, #200]
    13fc:	b.eq	14f4 <gconv@@Base+0xc34>  // b.none
    1400:	cmp	w0, #0x5
    1404:	ldp	x0, x19, [sp, #224]
    1408:	b.ne	a4c <gconv@@Base+0x18c>  // b.any
    140c:	b	a58 <gconv@@Base+0x198>
    1410:	cbnz	x15, 1c70 <gconv@@Base+0x13b0>
    1414:	cmp	w6, #0x1
    1418:	ldr	x22, [x21, #32]
    141c:	b.ne	162c <gconv@@Base+0xd6c>  // b.any
    1420:	ldr	w19, [x22]
    1424:	ldr	x2, [x21]
    1428:	tst	w19, #0xfffffff8
    142c:	b.eq	1588 <gconv@@Base+0xcc8>  // b.none
    1430:	ldr	x0, [x14, #96]
    1434:	cbz	x0, 1580 <gconv@@Base+0xcc0>
    1438:	ldr	x0, [x21, #8]
    143c:	cmp	x2, x0
    1440:	b.cs	1578 <gconv@@Base+0xcb8>  // b.hs, b.nlast
    1444:	mov	x20, x2
    1448:	mov	w0, #0xf                   	// #15
    144c:	strb	w0, [x20], #1
    1450:	ldr	x1, [x21, #32]
    1454:	ldr	w3, [x21, #16]
    1458:	ldr	w0, [x1]
    145c:	and	w0, w0, #0x7
    1460:	str	w0, [x1]
    1464:	tbz	w3, #0, 1b9c <gconv@@Base+0x12dc>
    1468:	mov	x2, x20
    146c:	mov	w9, #0x0                   	// #0
    1470:	str	x2, [x21]
    1474:	b	c2c <gconv@@Base+0x36c>
    1478:	cmp	x26, x4
    147c:	b.cc	149c <gconv@@Base+0xbdc>  // b.lo, b.ul, b.last
    1480:	str	x4, [sp, #232]
    1484:	mov	w4, #0xf                   	// #15
    1488:	strb	w4, [x0]
    148c:	mov	w13, #0x0                   	// #0
    1490:	ldr	x0, [sp, #232]
    1494:	add	x4, x0, #0x1
    1498:	b	fd8 <gconv@@Base+0x718>
    149c:	mov	x10, x27
    14a0:	mov	x26, x22
    14a4:	ldr	x1, [sp, #224]
    14a8:	mov	x20, x21
    14ac:	str	x1, [x10]
    14b0:	mov	x21, x24
    14b4:	ldr	x1, [sp, #216]
    14b8:	str	w13, [x19]
    14bc:	mov	x18, x23
    14c0:	ldr	w7, [sp, #112]
    14c4:	mov	x23, x19
    14c8:	cmp	x1, x0
    14cc:	ldr	x24, [sp, #104]
    14d0:	ldr	x27, [sp, #120]
    14d4:	ldr	x22, [sp, #136]
    14d8:	b.ne	1778 <gconv@@Base+0xeb8>  // b.any
    14dc:	cmp	x27, x0
    14e0:	b.ne	ae0 <gconv@@Base+0x220>  // b.any
    14e4:	ldr	w0, [x21, #20]
    14e8:	sub	w0, w0, #0x1
    14ec:	str	w0, [x21, #20]
    14f0:	b	ae0 <gconv@@Base+0x220>
    14f4:	ldr	x19, [sp, #232]
    14f8:	b	cd8 <gconv@@Base+0x418>
    14fc:	ldr	x1, [sp, #184]
    1500:	mov	w5, #0x2d9                 	// #729
    1504:	add	x2, x1, #0x390
    1508:	b	d28 <gconv@@Base+0x468>
    150c:	ldr	w26, [sp, #144]
    1510:	mov	w9, w7
    1514:	b	1050 <gconv@@Base+0x790>
    1518:	mov	x0, x20
    151c:	mov	w4, w13
    1520:	mov	w9, #0x4                   	// #4
    1524:	b	a58 <gconv@@Base+0x198>
    1528:	mov	x2, #0x6                   	// #6
    152c:	str	x25, [x10]
    1530:	str	w13, [x23]
    1534:	cmp	x0, x9
    1538:	b.ne	1778 <gconv@@Base+0xeb8>  // b.any
    153c:	cmp	x2, #0x5
    1540:	b.eq	14dc <gconv@@Base+0xc1c>  // b.none
    1544:	b	1678 <gconv@@Base+0xdb8>
    1548:	cmp	x22, x0
    154c:	b.cc	1578 <gconv@@Base+0xcb8>  // b.lo, b.ul, b.last
    1550:	str	x0, [sp, #232]
    1554:	mov	w0, #0xf                   	// #15
    1558:	strb	w0, [x8]
    155c:	ldr	x1, [sp, #232]
    1560:	add	x0, x1, #0x1
    1564:	cmp	x22, x0
    1568:	b.cs	ed0 <gconv@@Base+0x610>  // b.hs, b.nlast
    156c:	ldr	x0, [sp, #224]
    1570:	cmp	x0, x7
    1574:	b.ne	eec <gconv@@Base+0x62c>  // b.any
    1578:	mov	w9, #0x5                   	// #5
    157c:	b	c2c <gconv@@Base+0x36c>
    1580:	and	w19, w19, #0x7
    1584:	str	w19, [x22]
    1588:	cbnz	w1, 146c <gconv@@Base+0xbac>
    158c:	mov	x0, x24
    1590:	bl	740 <_dl_mcount_wrapper_check@plt>
    1594:	ldr	x1, [sp, #152]
    1598:	mov	w7, w26
    159c:	mov	x5, x25
    15a0:	mov	x0, x27
    15a4:	mov	w6, #0x1                   	// #1
    15a8:	mov	x4, #0x0                   	// #0
    15ac:	mov	x3, #0x0                   	// #0
    15b0:	mov	x2, #0x0                   	// #0
    15b4:	blr	x24
    15b8:	mov	w9, w0
    15bc:	b	c2c <gconv@@Base+0x36c>
    15c0:	cmp	x22, x4
    15c4:	b.cc	1578 <gconv@@Base+0xcb8>  // b.lo, b.ul, b.last
    15c8:	mov	x2, x23
    15cc:	add	x7, sp, #0xf0
    15d0:	mov	x1, #0x0                   	// #0
    15d4:	ldrb	w6, [x2], #1
    15d8:	add	x9, x1, #0x1
    15dc:	strb	w6, [x7, x1]
    15e0:	cmp	x9, #0x1
    15e4:	ccmp	x20, x2, #0x0, ls  // ls = plast
    15e8:	mov	x1, #0x1                   	// #1
    15ec:	b.hi	15d4 <gconv@@Base+0xd14>  // b.pmore
    15f0:	ldrb	w6, [sp, #240]
    15f4:	mov	x2, #0x0                   	// #0
    15f8:	sub	w13, w6, #0xe
    15fc:	and	w13, w13, #0xff
    1600:	cmp	w13, #0x1
    1604:	b.ls	1210 <gconv@@Base+0x950>  // b.plast
    1608:	b	11c4 <gconv@@Base+0x904>
    160c:	cbz	x8, 1528 <gconv@@Base+0xc68>
    1610:	cbz	w6, 1528 <gconv@@Base+0xc68>
    1614:	ldr	x1, [x8]
    1618:	add	x25, x25, #0x2
    161c:	mov	x2, #0x6                   	// #6
    1620:	add	x1, x1, #0x1
    1624:	str	x1, [x8]
    1628:	b	128c <gconv@@Base+0x9cc>
    162c:	str	xzr, [x22]
    1630:	mov	w9, #0x0                   	// #0
    1634:	ldr	w0, [x21, #16]
    1638:	tbnz	w0, #0, c2c <gconv@@Base+0x36c>
    163c:	mov	x0, x24
    1640:	str	w6, [sp, #104]
    1644:	bl	740 <_dl_mcount_wrapper_check@plt>
    1648:	ldr	w6, [sp, #104]
    164c:	mov	w7, w26
    1650:	mov	x5, x25
    1654:	mov	x0, x27
    1658:	ldr	x1, [sp, #152]
    165c:	b	15a8 <gconv@@Base+0xce8>
    1660:	ldr	x1, [sp, #224]
    1664:	str	x1, [x27]
    1668:	ldr	x1, [sp, #216]
    166c:	str	w13, [x19]
    1670:	cmp	x1, x0
    1674:	b.ne	1778 <gconv@@Base+0xeb8>  // b.any
    1678:	adrp	x3, 2000 <gconv@@Base+0x1740>
    167c:	adrp	x1, 1000 <gconv@@Base+0x740>
    1680:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1684:	add	x3, x3, #0x1b0
    1688:	add	x1, x1, #0xff8
    168c:	add	x0, x0, #0x138
    1690:	mov	w2, #0x2eb                 	// #747
    1694:	bl	750 <__assert_fail@plt>
    1698:	ldrb	w6, [x23, w5, uxtw]
    169c:	cmp	w6, #0x0
    16a0:	ccmp	w5, #0x0, #0x4, eq  // eq = none
    16a4:	b.eq	fcc <gconv@@Base+0x70c>  // b.none
    16a8:	cmp	w5, #0xf7
    16ac:	b.hi	1b10 <gconv@@Base+0x1250>  // b.pmore
    16b0:	ldr	x1, [sp, #184]
    16b4:	mov	w6, #0xa7                  	// #167
    16b8:	add	x4, x1, #0x390
    16bc:	cmp	w5, w6
    16c0:	b.cc	1b20 <gconv@@Base+0x1260>  // b.lo, b.ul, b.last
    16c4:	ldr	w4, [x4, #4]
    16c8:	adrp	x6, 2000 <gconv@@Base+0x1740>
    16cc:	add	x6, x6, #0x928
    16d0:	cmp	w5, #0x0
    16d4:	add	w4, w5, w4
    16d8:	lsl	x4, x4, #1
    16dc:	add	x11, x4, x6
    16e0:	ldrb	w4, [x4, x6]
    16e4:	ccmp	w4, #0x0, #0x0, ne  // ne = any
    16e8:	b.eq	1b20 <gconv@@Base+0x1260>  // b.none
    16ec:	cbnz	w13, 1710 <gconv@@Base+0xe50>
    16f0:	add	x5, x0, #0x1
    16f4:	cmp	x26, x5
    16f8:	b.cc	1bf4 <gconv@@Base+0x1334>  // b.lo, b.ul, b.last
    16fc:	str	x5, [sp, #232]
    1700:	mov	w5, #0xe                   	// #14
    1704:	strb	w5, [x0]
    1708:	mov	w13, #0x40                  	// #64
    170c:	ldr	x0, [sp, #232]
    1710:	add	x5, x0, #0x2
    1714:	cmp	x26, x5
    1718:	b.cc	149c <gconv@@Base+0xbdc>  // b.lo, b.ul, b.last
    171c:	add	x5, x0, #0x1
    1720:	str	x5, [sp, #232]
    1724:	strb	w4, [x0]
    1728:	ldr	x0, [sp, #232]
    172c:	ldrb	w4, [x11, #1]
    1730:	add	x5, x0, #0x1
    1734:	str	x5, [sp, #232]
    1738:	strb	w4, [x0]
    173c:	b	fe8 <gconv@@Base+0x728>
    1740:	mov	w6, #0x1c00                	// #7168
    1744:	cmp	w6, w5, lsr #7
    1748:	b.eq	1b64 <gconv@@Base+0x12a4>  // b.none
    174c:	cbz	x28, 1660 <gconv@@Base+0xda0>
    1750:	str	w13, [x19]
    1754:	ldr	w2, [x24, #16]
    1758:	tbnz	w2, #3, 18ec <gconv@@Base+0x102c>
    175c:	ldr	x11, [sp, #224]
    1760:	tbnz	w20, #1, 1af4 <gconv@@Base+0x1234>
    1764:	str	x11, [x27]
    1768:	ldr	x1, [sp, #216]
    176c:	str	w13, [x19]
    1770:	cmp	x1, x0
    1774:	b.eq	1678 <gconv@@Base+0xdb8>  // b.none
    1778:	adrp	x3, 2000 <gconv@@Base+0x1740>
    177c:	adrp	x1, 1000 <gconv@@Base+0x740>
    1780:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1784:	add	x3, x3, #0x1b0
    1788:	add	x1, x1, #0xff8
    178c:	add	x0, x0, #0x120
    1790:	mov	w2, #0x2ea                 	// #746
    1794:	bl	750 <__assert_fail@plt>
    1798:	ldr	x1, [sp, #184]
    179c:	mov	w11, #0x2d9                 	// #729
    17a0:	add	x6, x1, #0x390
    17a4:	b	17b0 <gconv@@Base+0xef0>
    17a8:	ldrh	w11, [x4, #10]
    17ac:	mov	x6, x4
    17b0:	cmp	w5, w11
    17b4:	add	x4, x6, #0x8
    17b8:	b.hi	17a8 <gconv@@Base+0xee8>  // b.pmore
    17bc:	ldrh	w6, [x6, #8]
    17c0:	b	16bc <gconv@@Base+0xdfc>
    17c4:	add	x25, x25, #0x1
    17c8:	mov	w13, #0x40                  	// #64
    17cc:	b	128c <gconv@@Base+0x9cc>
    17d0:	mov	x2, #0x5                   	// #5
    17d4:	b	152c <gconv@@Base+0xc6c>
    17d8:	add	x25, x25, #0x1
    17dc:	mov	w13, #0x0                   	// #0
    17e0:	b	128c <gconv@@Base+0x9cc>
    17e4:	mov	x0, #0x4                   	// #4
    17e8:	mov	x11, #0x0                   	// #0
    17ec:	b	e40 <gconv@@Base+0x580>
    17f0:	mov	x2, x20
    17f4:	mov	x19, x27
    17f8:	mov	w5, w13
    17fc:	mov	w9, #0x4                   	// #4
    1800:	b	c14 <gconv@@Base+0x354>
    1804:	cbnz	w9, c2c <gconv@@Base+0x36c>
    1808:	ldr	w7, [x21, #16]
    180c:	ldr	w12, [x28]
    1810:	ldr	x23, [x10]
    1814:	b	980 <gconv@@Base+0xc0>
    1818:	str	x20, [x10]
    181c:	cmp	x23, x20
    1820:	b.cs	1848 <gconv@@Base+0xf88>  // b.hs, b.nlast
    1824:	add	x23, x23, #0x1
    1828:	add	x11, x28, x11
    182c:	str	x23, [sp, #224]
    1830:	cmp	x20, x23
    1834:	add	x11, x11, #0x1
    1838:	add	x23, x23, #0x1
    183c:	ldurb	w0, [x23, #-2]
    1840:	strb	w0, [x11, #3]
    1844:	b.ne	182c <gconv@@Base+0xf6c>  // b.any
    1848:	mov	w9, #0x7                   	// #7
    184c:	b	c2c <gconv@@Base+0x36c>
    1850:	cmp	w5, #0x40
    1854:	b.ne	1d7c <gconv@@Base+0x14bc>  // b.any
    1858:	add	x1, x7, x9
    185c:	add	x2, x7, #0x1
    1860:	cmp	x1, x2
    1864:	b.ls	1d38 <gconv@@Base+0x1478>  // b.plast
    1868:	ldrb	w1, [sp, #241]
    186c:	mov	w2, #0x4040                	// #16448
    1870:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1874:	add	x0, x0, #0x1b8
    1878:	add	w1, w1, w6, lsl #8
    187c:	cmp	w1, w2
    1880:	b.ls	18ac <gconv@@Base+0xfec>  // b.plast
    1884:	mov	w2, #0x41fa                	// #16890
    1888:	b	1890 <gconv@@Base+0xfd0>
    188c:	ldrh	w2, [x0, #10]
    1890:	add	x0, x0, #0x8
    1894:	cmp	w1, w2
    1898:	b.hi	188c <gconv@@Base+0xfcc>  // b.pmore
    189c:	ldrh	w2, [x0]
    18a0:	mov	w5, #0xffff                	// #65535
    18a4:	cmp	w2, w5
    18a8:	b.eq	1b78 <gconv@@Base+0x12b8>  // b.none
    18ac:	cmp	w1, w2
    18b0:	b.cc	1b78 <gconv@@Base+0x12b8>  // b.lo, b.ul, b.last
    18b4:	ldr	w2, [x0, #4]
    18b8:	cmp	w1, #0x0
    18bc:	adrp	x0, 10000 <gconv@@Base+0xf740>
    18c0:	add	x0, x0, #0x3f8
    18c4:	add	w1, w1, w2
    18c8:	ldrh	w0, [x0, x1, lsl #1]
    18cc:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    18d0:	b.eq	1b78 <gconv@@Base+0x12b8>  // b.none
    18d4:	str	w0, [x8]
    18d8:	mov	x1, #0x2                   	// #2
    18dc:	mov	x8, x4
    18e0:	ldr	w12, [x28]
    18e4:	and	w3, w12, #0x7
    18e8:	b	11fc <gconv@@Base+0x93c>
    18ec:	ldr	x2, [x27]
    18f0:	mov	x6, x28
    18f4:	ldr	x5, [sp, #192]
    18f8:	mov	x4, x21
    18fc:	mov	x1, x24
    1900:	mov	x0, x22
    1904:	str	x3, [sp, #200]
    1908:	bl	700 <__gconv_transliterate@plt>
    190c:	sxtw	x2, w0
    1910:	ldr	w13, [x19]
    1914:	cmp	w2, #0x6
    1918:	ldr	x3, [sp, #200]
    191c:	and	w13, w13, #0xfffffff8
    1920:	b.eq	1b70 <gconv@@Base+0x12b0>  // b.none
    1924:	cmp	w2, #0x5
    1928:	b.eq	1cd0 <gconv@@Base+0x1410>  // b.none
    192c:	ldp	x25, x0, [sp, #224]
    1930:	b	ff4 <gconv@@Base+0x734>
    1934:	mov	w9, #0x6                   	// #6
    1938:	ldr	x0, [sp, #224]
    193c:	b	a58 <gconv@@Base+0x198>
    1940:	cbz	x8, 1528 <gconv@@Base+0xc68>
    1944:	cbz	w6, 1528 <gconv@@Base+0xc68>
    1948:	ldr	x1, [x8]
    194c:	add	x25, x25, #0x1
    1950:	mov	x2, #0x6                   	// #6
    1954:	add	x1, x1, #0x1
    1958:	str	x1, [x8]
    195c:	b	128c <gconv@@Base+0x9cc>
    1960:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1964:	add	x0, x0, #0x1b8
    1968:	add	x0, x0, #0x390
    196c:	mov	w3, #0x2d9                 	// #729
    1970:	b	197c <gconv@@Base+0x10bc>
    1974:	ldrh	w3, [x2, #10]
    1978:	mov	x0, x2
    197c:	cmp	w1, w3
    1980:	add	x2, x0, #0x8
    1984:	b.hi	1974 <gconv@@Base+0x10b4>  // b.pmore
    1988:	ldrh	w0, [x0, #8]
    198c:	cmp	w1, w0
    1990:	b.cc	1a94 <gconv@@Base+0x11d4>  // b.lo, b.ul, b.last
    1994:	ldr	w0, [x2, #4]
    1998:	adrp	x2, 2000 <gconv@@Base+0x1740>
    199c:	add	x2, x2, #0x928
    19a0:	add	w0, w1, w0
    19a4:	lsl	x0, x0, #1
    19a8:	add	x3, x0, x2
    19ac:	ldrb	w2, [x0, x2]
    19b0:	cmp	w2, #0x0
    19b4:	ccmp	w1, #0x0, #0x4, eq  // eq = none
    19b8:	b.ne	1a94 <gconv@@Base+0x11d4>  // b.any
    19bc:	cbnz	w5, 1a80 <gconv@@Base+0x11c0>
    19c0:	add	x0, x8, #0x1
    19c4:	cmp	x22, x0
    19c8:	b.cc	1578 <gconv@@Base+0xcb8>  // b.lo, b.ul, b.last
    19cc:	str	x0, [sp, #232]
    19d0:	mov	w0, #0xe                   	// #14
    19d4:	strb	w0, [x8]
    19d8:	ldr	x0, [sp, #232]
    19dc:	add	x1, x0, #0x2
    19e0:	cmp	x22, x1
    19e4:	b.cc	156c <gconv@@Base+0xcac>  // b.lo, b.ul, b.last
    19e8:	add	x1, x0, #0x1
    19ec:	str	x1, [sp, #232]
    19f0:	strb	w2, [x0]
    19f4:	ldr	x0, [sp, #232]
    19f8:	ldrb	w1, [x3, #1]
    19fc:	add	x2, x0, #0x1
    1a00:	str	x2, [sp, #232]
    1a04:	strb	w1, [x0]
    1a08:	b	ed8 <gconv@@Base+0x618>
    1a0c:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1a10:	add	x0, x0, #0x1b8
    1a14:	add	x2, x0, #0x670
    1a18:	ldrb	w2, [x2, w1, uxtw]
    1a1c:	cmp	w2, #0x0
    1a20:	ccmp	w1, #0x0, #0x4, eq  // eq = none
    1a24:	b.eq	eb8 <gconv@@Base+0x5f8>  // b.none
    1a28:	cmp	w1, #0xf7
    1a2c:	b.hi	1968 <gconv@@Base+0x10a8>  // b.pmore
    1a30:	add	x2, x0, #0x390
    1a34:	mov	w0, #0xa7                  	// #167
    1a38:	b	198c <gconv@@Base+0x10cc>
    1a3c:	mov	w0, #0x1c00                	// #7168
    1a40:	cmp	w0, w1, lsr #7
    1a44:	b.eq	1dfc <gconv@@Base+0x153c>  // b.none
    1a48:	ldr	x0, [sp, #176]
    1a4c:	cbz	x0, 1ad0 <gconv@@Base+0x1210>
    1a50:	str	w5, [x28]
    1a54:	ldr	w0, [x21, #16]
    1a58:	tbnz	w0, #3, 1e0c <gconv@@Base+0x154c>
    1a5c:	tbz	w19, #1, 1ad0 <gconv@@Base+0x1210>
    1a60:	ldr	x3, [sp, #176]
    1a64:	add	x2, x7, #0x4
    1a68:	mov	x0, x2
    1a6c:	str	x2, [sp, #224]
    1a70:	ldr	x1, [x3]
    1a74:	add	x1, x1, #0x1
    1a78:	str	x1, [x3]
    1a7c:	b	eec <gconv@@Base+0x62c>
    1a80:	add	x0, x8, #0x2
    1a84:	cmp	x22, x0
    1a88:	b.cc	1578 <gconv@@Base+0xcb8>  // b.lo, b.ul, b.last
    1a8c:	mov	x0, x8
    1a90:	b	19e8 <gconv@@Base+0x1128>
    1a94:	ldr	x0, [sp, #176]
    1a98:	cbz	x0, 1ad0 <gconv@@Base+0x1210>
    1a9c:	str	w5, [x28]
    1aa0:	ldr	w0, [x21, #16]
    1aa4:	tbnz	w0, #3, 1e0c <gconv@@Base+0x154c>
    1aa8:	tbz	w19, #1, 1ad0 <gconv@@Base+0x1210>
    1aac:	ldr	x0, [sp, #224]
    1ab0:	add	x0, x0, #0x4
    1ab4:	ldr	x2, [sp, #176]
    1ab8:	str	x0, [sp, #224]
    1abc:	cmp	x0, x7
    1ac0:	ldr	x1, [x2]
    1ac4:	add	x1, x1, #0x1
    1ac8:	str	x1, [x2]
    1acc:	b.ne	eec <gconv@@Base+0x62c>  // b.any
    1ad0:	mov	w9, #0x6                   	// #6
    1ad4:	b	c2c <gconv@@Base+0x36c>
    1ad8:	str	x25, [x10]
    1adc:	cmp	x9, x27
    1ae0:	str	w13, [x23]
    1ae4:	b.eq	14e4 <gconv@@Base+0xc24>  // b.none
    1ae8:	b	1778 <gconv@@Base+0xeb8>
    1aec:	mov	x2, #0x7                   	// #7
    1af0:	b	152c <gconv@@Base+0xc6c>
    1af4:	ldr	x4, [x28]
    1af8:	add	x25, x11, #0x4
    1afc:	mov	x2, #0x6                   	// #6
    1b00:	str	x25, [sp, #224]
    1b04:	add	x4, x4, #0x1
    1b08:	str	x4, [x28]
    1b0c:	b	ff4 <gconv@@Base+0x734>
    1b10:	ldr	x1, [sp, #184]
    1b14:	mov	w11, #0x2d9                 	// #729
    1b18:	add	x6, x1, #0x390
    1b1c:	b	17b0 <gconv@@Base+0xef0>
    1b20:	cbz	x28, 1660 <gconv@@Base+0xda0>
    1b24:	str	w13, [x19]
    1b28:	ldr	w2, [x24, #16]
    1b2c:	tbnz	w2, #3, 1f50 <gconv@@Base+0x1690>
    1b30:	ldr	x11, [sp, #224]
    1b34:	tbnz	w20, #1, 1af4 <gconv@@Base+0x1234>
    1b38:	str	x11, [x27]
    1b3c:	ldr	x1, [sp, #216]
    1b40:	str	w13, [x19]
    1b44:	cmp	x0, x1
    1b48:	b.eq	1678 <gconv@@Base+0xdb8>  // b.none
    1b4c:	b	1778 <gconv@@Base+0xeb8>
    1b50:	str	x20, [x10]
    1b54:	cmp	x9, x27
    1b58:	str	w13, [x23]
    1b5c:	b.eq	1678 <gconv@@Base+0xdb8>  // b.none
    1b60:	b	1778 <gconv@@Base+0xeb8>
    1b64:	mov	x25, x4
    1b68:	str	x4, [sp, #224]
    1b6c:	b	ff4 <gconv@@Base+0x734>
    1b70:	ldr	x0, [sp, #232]
    1b74:	b	175c <gconv@@Base+0xe9c>
    1b78:	ldr	x0, [sp, #176]
    1b7c:	cbz	x0, 1ad0 <gconv@@Base+0x1210>
    1b80:	tbz	w19, #1, 1ad0 <gconv@@Base+0x1210>
    1b84:	mov	x2, x0
    1b88:	mov	x1, #0x2                   	// #2
    1b8c:	ldr	x0, [x0]
    1b90:	add	x0, x0, #0x1
    1b94:	str	x0, [x2]
    1b98:	b	11fc <gconv@@Base+0x93c>
    1b9c:	mov	x0, x24
    1ba0:	str	x2, [sp, #232]
    1ba4:	bl	740 <_dl_mcount_wrapper_check@plt>
    1ba8:	ldr	x1, [sp, #152]
    1bac:	mov	w7, w26
    1bb0:	mov	x5, x25
    1bb4:	mov	x3, x20
    1bb8:	add	x2, sp, #0xe8
    1bbc:	mov	x0, x27
    1bc0:	mov	w6, #0x0                   	// #0
    1bc4:	mov	x4, #0x0                   	// #0
    1bc8:	blr	x24
    1bcc:	mov	w9, w0
    1bd0:	cmp	w0, #0x4
    1bd4:	b.eq	158c <gconv@@Base+0xccc>  // b.none
    1bd8:	ldr	x0, [sp, #232]
    1bdc:	cmp	x0, x20
    1be0:	b.ne	1c64 <gconv@@Base+0x13a4>  // b.any
    1be4:	cbnz	w9, c2c <gconv@@Base+0x36c>
    1be8:	b	158c <gconv@@Base+0xccc>
    1bec:	mov	w4, #0x4040                	// #16448
    1bf0:	b	1308 <gconv@@Base+0xa48>
    1bf4:	mov	x10, x27
    1bf8:	mov	x26, x22
    1bfc:	ldr	x1, [sp, #224]
    1c00:	mov	x20, x21
    1c04:	str	x1, [x10]
    1c08:	mov	x21, x24
    1c0c:	ldr	x1, [sp, #216]
    1c10:	str	wzr, [x19]
    1c14:	mov	x18, x23
    1c18:	ldr	w7, [sp, #112]
    1c1c:	mov	x23, x19
    1c20:	cmp	x1, x0
    1c24:	ldr	x24, [sp, #104]
    1c28:	ldr	x27, [sp, #120]
    1c2c:	ldr	x22, [sp, #136]
    1c30:	b.eq	14dc <gconv@@Base+0xc1c>  // b.none
    1c34:	b	1778 <gconv@@Base+0xeb8>
    1c38:	bl	710 <__stack_chk_fail@plt>
    1c3c:	mov	w1, #0x0                   	// #0
    1c40:	b	1098 <gconv@@Base+0x7d8>
    1c44:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1c48:	adrp	x1, 1000 <gconv@@Base+0x740>
    1c4c:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1c50:	add	x3, x3, #0x1b0
    1c54:	add	x1, x1, #0xff8
    1c58:	add	x0, x0, #0x158
    1c5c:	mov	w2, #0x31e                 	// #798
    1c60:	bl	750 <__assert_fail@plt>
    1c64:	str	w19, [x22]
    1c68:	cbnz	w9, c2c <gconv@@Base+0x36c>
    1c6c:	b	158c <gconv@@Base+0xccc>
    1c70:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1c74:	adrp	x1, 1000 <gconv@@Base+0x740>
    1c78:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1c7c:	add	x3, x3, #0x1b0
    1c80:	add	x1, x1, #0xff8
    1c84:	add	x0, x0, #0x10
    1c88:	mov	w2, #0x1a4                 	// #420
    1c8c:	bl	750 <__assert_fail@plt>
    1c90:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1c94:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1c98:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1c9c:	add	x3, x3, #0x170
    1ca0:	add	x1, x1, #0x28
    1ca4:	add	x0, x0, #0x68
    1ca8:	mov	w2, #0x150                 	// #336
    1cac:	bl	750 <__assert_fail@plt>
    1cb0:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1cb4:	adrp	x1, 1000 <gconv@@Base+0x740>
    1cb8:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1cbc:	add	x3, x3, #0x1b0
    1cc0:	add	x1, x1, #0xff8
    1cc4:	add	x0, x0, #0x10
    1cc8:	mov	w2, #0x234                 	// #564
    1ccc:	bl	750 <__assert_fail@plt>
    1cd0:	mov	x10, x27
    1cd4:	mov	x26, x22
    1cd8:	ldp	x1, x0, [sp, #216]
    1cdc:	mov	x20, x21
    1ce0:	str	x0, [x10]
    1ce4:	mov	x21, x24
    1ce8:	ldr	x0, [sp, #232]
    1cec:	str	w13, [x19]
    1cf0:	mov	x18, x23
    1cf4:	ldr	w7, [sp, #112]
    1cf8:	mov	x23, x19
    1cfc:	cmp	x1, x0
    1d00:	ldr	x24, [sp, #104]
    1d04:	ldr	x27, [sp, #120]
    1d08:	ldr	x22, [sp, #136]
    1d0c:	b.eq	14dc <gconv@@Base+0xc1c>  // b.none
    1d10:	b	1778 <gconv@@Base+0xeb8>
    1d14:	ldr	x0, [sp, #176]
    1d18:	cbz	x0, 1ad0 <gconv@@Base+0x1210>
    1d1c:	tbz	w19, #1, 1ad0 <gconv@@Base+0x1210>
    1d20:	mov	x2, x0
    1d24:	mov	x1, #0x1                   	// #1
    1d28:	ldr	x0, [x0]
    1d2c:	add	x0, x0, x1
    1d30:	str	x0, [x2]
    1d34:	b	11fc <gconv@@Base+0x93c>
    1d38:	add	x7, x7, #0x2
    1d3c:	cmp	x1, x7
    1d40:	b.eq	1dbc <gconv@@Base+0x14fc>  // b.none
    1d44:	mov	w0, w0
    1d48:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1d4c:	sub	x0, x9, x0
    1d50:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1d54:	add	x23, x23, x0
    1d58:	str	x23, [x10]
    1d5c:	add	x3, x3, #0x198
    1d60:	add	x1, x1, #0x28
    1d64:	cmp	x9, #0x40
    1d68:	b.le	1dac <gconv@@Base+0x14ec>
    1d6c:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1d70:	mov	w2, #0x1e6                 	// #486
    1d74:	add	x0, x0, #0xf0
    1d78:	bl	750 <__assert_fail@plt>
    1d7c:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1d80:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1d84:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1d88:	add	x3, x3, #0x198
    1d8c:	add	x1, x1, #0x28
    1d90:	add	x0, x0, #0x68
    1d94:	mov	w2, #0x1be                 	// #446
    1d98:	bl	750 <__assert_fail@plt>
    1d9c:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1da0:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1da4:	add	x3, x3, #0x180
    1da8:	add	x1, x1, #0x28
    1dac:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1db0:	mov	w2, #0x1e5                 	// #485
    1db4:	add	x0, x0, #0xc8
    1db8:	bl	750 <__assert_fail@plt>
    1dbc:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1dc0:	add	x3, x3, #0x198
    1dc4:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1dc8:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1dcc:	add	x1, x1, #0x28
    1dd0:	add	x0, x0, #0xa0
    1dd4:	mov	w2, #0x1db                 	// #475
    1dd8:	bl	750 <__assert_fail@plt>
    1ddc:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1de0:	add	x3, x3, #0x180
    1de4:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1de8:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1dec:	add	x1, x1, #0x28
    1df0:	add	x0, x0, #0x38
    1df4:	mov	w2, #0x18b                 	// #395
    1df8:	bl	750 <__assert_fail@plt>
    1dfc:	add	x0, x7, #0x4
    1e00:	mov	x7, #0x4                   	// #4
    1e04:	str	x0, [sp, #224]
    1e08:	b	ef8 <gconv@@Base+0x638>
    1e0c:	ldr	x6, [sp, #176]
    1e10:	mov	x0, x14
    1e14:	mov	x2, x23
    1e18:	add	x5, sp, #0xe8
    1e1c:	add	x3, sp, #0xe0
    1e20:	mov	x1, x21
    1e24:	stp	x14, x4, [sp, #104]
    1e28:	stp	x8, x11, [sp, #120]
    1e2c:	stp	x10, x15, [sp, #136]
    1e30:	str	x7, [sp, #160]
    1e34:	bl	700 <__gconv_transliterate@plt>
    1e38:	mov	w9, w0
    1e3c:	cmp	w0, #0x6
    1e40:	ldp	x14, x4, [sp, #104]
    1e44:	ldp	x8, x11, [sp, #120]
    1e48:	ldp	x10, x15, [sp, #136]
    1e4c:	ldr	x7, [sp, #160]
    1e50:	ldr	x0, [sp, #224]
    1e54:	b.eq	1ed8 <gconv@@Base+0x1618>  // b.none
    1e58:	cmp	x0, x7
    1e5c:	b.ne	eec <gconv@@Base+0x62c>  // b.any
    1e60:	cmp	w9, #0x7
    1e64:	b.ne	1804 <gconv@@Base+0xf44>  // b.any
    1e68:	add	x0, x7, #0x4
    1e6c:	cmp	x4, x0
    1e70:	b.eq	1f00 <gconv@@Base+0x1640>  // b.none
    1e74:	ldr	w0, [x28]
    1e78:	ldr	x1, [x10]
    1e7c:	and	x2, x0, #0x7
    1e80:	sub	x2, x11, x2
    1e84:	and	w0, w0, #0xfffffff8
    1e88:	add	x1, x1, x2
    1e8c:	str	x1, [x10]
    1e90:	cmp	x11, w0, sxtw
    1e94:	b.le	1d9c <gconv@@Base+0x14dc>
    1e98:	cmp	x11, #0x4
    1e9c:	b.hi	1eec <gconv@@Base+0x162c>  // b.pmore
    1ea0:	orr	w0, w0, w11
    1ea4:	str	w0, [x28]
    1ea8:	cmp	x4, x7
    1eac:	b.ls	1848 <gconv@@Base+0xf88>  // b.plast
    1eb0:	add	x7, x7, #0x1
    1eb4:	add	x11, x28, #0x4
    1eb8:	str	x7, [sp, #224]
    1ebc:	cmp	x4, x7
    1ec0:	add	x7, x7, #0x1
    1ec4:	ldurb	w0, [x7, #-2]
    1ec8:	strb	w0, [x11], #1
    1ecc:	b.ne	1eb8 <gconv@@Base+0x15f8>  // b.any
    1ed0:	mov	w9, #0x7                   	// #7
    1ed4:	b	c2c <gconv@@Base+0x36c>
    1ed8:	tbnz	w19, #1, 1ab0 <gconv@@Base+0x11f0>
    1edc:	cmp	x0, x7
    1ee0:	b.ne	eec <gconv@@Base+0x62c>  // b.any
    1ee4:	mov	w9, #0x6                   	// #6
    1ee8:	b	c2c <gconv@@Base+0x36c>
    1eec:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1ef0:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1ef4:	add	x3, x3, #0x180
    1ef8:	add	x1, x1, #0x28
    1efc:	b	1d6c <gconv@@Base+0x14ac>
    1f00:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1f04:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1f08:	add	x3, x3, #0x180
    1f0c:	b	1dc8 <gconv@@Base+0x1508>
    1f10:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1f14:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1f18:	add	x3, x3, #0x198
    1f1c:	b	1de8 <gconv@@Base+0x1528>
    1f20:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1f24:	add	x3, x3, #0x180
    1f28:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1f2c:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1f30:	add	x1, x1, #0x28
    1f34:	add	x0, x0, #0x78
    1f38:	mov	w2, #0x1c9                 	// #457
    1f3c:	bl	750 <__assert_fail@plt>
    1f40:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1f44:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1f48:	add	x3, x3, #0x198
    1f4c:	b	1f2c <gconv@@Base+0x166c>
    1f50:	ldr	x2, [x27]
    1f54:	mov	x6, x28
    1f58:	ldr	x5, [sp, #192]
    1f5c:	mov	x4, x21
    1f60:	mov	x1, x24
    1f64:	mov	x0, x22
    1f68:	str	x3, [sp, #200]
    1f6c:	bl	700 <__gconv_transliterate@plt>
    1f70:	sxtw	x2, w0
    1f74:	ldr	w13, [x19]
    1f78:	cmp	w2, #0x6
    1f7c:	ldr	x3, [sp, #200]
    1f80:	and	w13, w13, #0xfffffff8
    1f84:	ldr	x0, [sp, #232]
    1f88:	b.eq	1b30 <gconv@@Base+0x1270>  // b.none
    1f8c:	cmp	w2, #0x5
    1f90:	ldp	x25, x0, [sp, #224]
    1f94:	b.ne	ff4 <gconv@@Base+0x734>  // b.any
    1f98:	mov	x10, x27
    1f9c:	mov	x26, x22
    1fa0:	ldr	x1, [sp, #216]
    1fa4:	mov	x20, x21
    1fa8:	str	x25, [x10]
    1fac:	mov	x21, x24
    1fb0:	str	w13, [x19]
    1fb4:	mov	x18, x23
    1fb8:	ldr	w7, [sp, #112]
    1fbc:	mov	x23, x19
    1fc0:	cmp	x0, x1
    1fc4:	ldr	x24, [sp, #104]
    1fc8:	ldr	x27, [sp, #120]
    1fcc:	ldr	x22, [sp, #136]
    1fd0:	b.eq	14dc <gconv@@Base+0xc1c>  // b.none
    1fd4:	b	1778 <gconv@@Base+0xeb8>

Disassembly of section .fini:

0000000000001fd8 <.fini>:
    1fd8:	stp	x29, x30, [sp, #-16]!
    1fdc:	mov	x29, sp
    1fe0:	ldp	x29, x30, [sp], #16
    1fe4:	ret
