
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcap.so.2.31_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001a20 <.init>:
    1a20:	stp	x29, x30, [sp, #-16]!
    1a24:	mov	x29, sp
    1a28:	bl	1d80 <cap_to_name@plt+0x10>
    1a2c:	ldp	x29, x30, [sp], #16
    1a30:	ret

Disassembly of section .plt:

0000000000001a40 <memcpy@plt-0x20>:
    1a40:	stp	x16, x30, [sp, #-16]!
    1a44:	adrp	x16, 15000 <cap_set_nsowner@@Base+0xf9e0>
    1a48:	ldr	x17, [x16, #4088]
    1a4c:	add	x16, x16, #0xff8
    1a50:	br	x17
    1a54:	nop
    1a58:	nop
    1a5c:	nop

0000000000001a60 <memcpy@plt>:
    1a60:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a64:	ldr	x17, [x16]
    1a68:	add	x16, x16, #0x0
    1a6c:	br	x17

0000000000001a70 <removexattr@plt>:
    1a70:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a74:	ldr	x17, [x16, #8]
    1a78:	add	x16, x16, #0x8
    1a7c:	br	x17

0000000000001a80 <setuid@plt>:
    1a80:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a84:	ldr	x17, [x16, #16]
    1a88:	add	x16, x16, #0x10
    1a8c:	br	x17

0000000000001a90 <strtoul@plt>:
    1a90:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a94:	ldr	x17, [x16, #24]
    1a98:	add	x16, x16, #0x18
    1a9c:	br	x17

0000000000001aa0 <strlen@plt>:
    1aa0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1aa4:	ldr	x17, [x16, #32]
    1aa8:	add	x16, x16, #0x20
    1aac:	br	x17

0000000000001ab0 <psx_load_syscalls@plt>:
    1ab0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ab4:	ldr	x17, [x16, #40]
    1ab8:	add	x16, x16, #0x28
    1abc:	br	x17

0000000000001ac0 <cap_get_secbits@plt>:
    1ac0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ac4:	ldr	x17, [x16, #48]
    1ac8:	add	x16, x16, #0x30
    1acc:	br	x17

0000000000001ad0 <cap_clear_flag@plt>:
    1ad0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ad4:	ldr	x17, [x16, #56]
    1ad8:	add	x16, x16, #0x38
    1adc:	br	x17

0000000000001ae0 <cap_max_bits@plt>:
    1ae0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ae4:	ldr	x17, [x16, #64]
    1ae8:	add	x16, x16, #0x40
    1aec:	br	x17

0000000000001af0 <_libcap_strdup@plt>:
    1af0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1af4:	ldr	x17, [x16, #72]
    1af8:	add	x16, x16, #0x48
    1afc:	br	x17

0000000000001b00 <cap_get_ambient@plt>:
    1b00:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b04:	ldr	x17, [x16, #80]
    1b08:	add	x16, x16, #0x50
    1b0c:	br	x17

0000000000001b10 <__cxa_finalize@plt>:
    1b10:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b14:	ldr	x17, [x16, #88]
    1b18:	add	x16, x16, #0x58
    1b1c:	br	x17

0000000000001b20 <sprintf@plt>:
    1b20:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b24:	ldr	x17, [x16, #96]
    1b28:	add	x16, x16, #0x60
    1b2c:	br	x17

0000000000001b30 <asprintf@plt>:
    1b30:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b34:	ldr	x17, [x16, #104]
    1b38:	add	x16, x16, #0x68
    1b3c:	br	x17

0000000000001b40 <capset@plt>:
    1b40:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b44:	ldr	x17, [x16, #112]
    1b48:	add	x16, x16, #0x70
    1b4c:	br	x17

0000000000001b50 <malloc@plt>:
    1b50:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b54:	ldr	x17, [x16, #120]
    1b58:	add	x16, x16, #0x78
    1b5c:	br	x17

0000000000001b60 <cap_set_syscall@plt>:
    1b60:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b64:	ldr	x17, [x16, #128]
    1b68:	add	x16, x16, #0x80
    1b6c:	br	x17

0000000000001b70 <setxattr@plt>:
    1b70:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b74:	ldr	x17, [x16, #136]
    1b78:	add	x16, x16, #0x88
    1b7c:	br	x17

0000000000001b80 <cap_reset_ambient@plt>:
    1b80:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b84:	ldr	x17, [x16, #144]
    1b88:	add	x16, x16, #0x90
    1b8c:	br	x17

0000000000001b90 <cap_get_bound@plt>:
    1b90:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b94:	ldr	x17, [x16, #152]
    1b98:	add	x16, x16, #0x98
    1b9c:	br	x17

0000000000001ba0 <memset@plt>:
    1ba0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ba4:	ldr	x17, [x16, #160]
    1ba8:	add	x16, x16, #0xa0
    1bac:	br	x17

0000000000001bb0 <calloc@plt>:
    1bb0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1bb4:	ldr	x17, [x16, #168]
    1bb8:	add	x16, x16, #0xa8
    1bbc:	br	x17

0000000000001bc0 <cap_set_proc@plt>:
    1bc0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1bc4:	ldr	x17, [x16, #176]
    1bc8:	add	x16, x16, #0xb0
    1bcc:	br	x17

0000000000001bd0 <__gmon_start__@plt>:
    1bd0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1bd4:	ldr	x17, [x16, #184]
    1bd8:	add	x16, x16, #0xb8
    1bdc:	br	x17

0000000000001be0 <fremovexattr@plt>:
    1be0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1be4:	ldr	x17, [x16, #192]
    1be8:	add	x16, x16, #0xc0
    1bec:	br	x17

0000000000001bf0 <setgid@plt>:
    1bf0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1bf4:	ldr	x17, [x16, #200]
    1bf8:	add	x16, x16, #0xc8
    1bfc:	br	x17

0000000000001c00 <cap_init@plt>:
    1c00:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c04:	ldr	x17, [x16, #208]
    1c08:	add	x16, x16, #0xd0
    1c0c:	br	x17

0000000000001c10 <getxattr@plt>:
    1c10:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c14:	ldr	x17, [x16, #216]
    1c18:	add	x16, x16, #0xd8
    1c1c:	br	x17

0000000000001c20 <memcmp@plt>:
    1c20:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c24:	ldr	x17, [x16, #224]
    1c28:	add	x16, x16, #0xe0
    1c2c:	br	x17

0000000000001c30 <__ctype_b_loc@plt>:
    1c30:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c34:	ldr	x17, [x16, #232]
    1c38:	add	x16, x16, #0xe8
    1c3c:	br	x17

0000000000001c40 <cap_get_proc@plt>:
    1c40:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c44:	ldr	x17, [x16, #240]
    1c48:	add	x16, x16, #0xf0
    1c4c:	br	x17

0000000000001c50 <__lxstat64@plt>:
    1c50:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c54:	ldr	x17, [x16, #248]
    1c58:	add	x16, x16, #0xf8
    1c5c:	br	x17

0000000000001c60 <cap_drop_bound@plt>:
    1c60:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c64:	ldr	x17, [x16, #256]
    1c68:	add	x16, x16, #0x100
    1c6c:	br	x17

0000000000001c70 <free@plt>:
    1c70:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c74:	ldr	x17, [x16, #264]
    1c78:	add	x16, x16, #0x108
    1c7c:	br	x17

0000000000001c80 <__fxstat64@plt>:
    1c80:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c84:	ldr	x17, [x16, #272]
    1c88:	add	x16, x16, #0x110
    1c8c:	br	x17

0000000000001c90 <fgetxattr@plt>:
    1c90:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c94:	ldr	x17, [x16, #280]
    1c98:	add	x16, x16, #0x118
    1c9c:	br	x17

0000000000001ca0 <setgroups@plt>:
    1ca0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ca4:	ldr	x17, [x16, #288]
    1ca8:	add	x16, x16, #0x120
    1cac:	br	x17

0000000000001cb0 <strcpy@plt>:
    1cb0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1cb4:	ldr	x17, [x16, #296]
    1cb8:	add	x16, x16, #0x128
    1cbc:	br	x17

0000000000001cc0 <fsetxattr@plt>:
    1cc0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1cc4:	ldr	x17, [x16, #304]
    1cc8:	add	x16, x16, #0x130
    1ccc:	br	x17

0000000000001cd0 <capgetp@plt>:
    1cd0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1cd4:	ldr	x17, [x16, #312]
    1cd8:	add	x16, x16, #0x138
    1cdc:	br	x17

0000000000001ce0 <cap_free@plt>:
    1ce0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #320]
    1ce8:	add	x16, x16, #0x140
    1cec:	br	x17

0000000000001cf0 <cap_set_flag@plt>:
    1cf0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1cf4:	ldr	x17, [x16, #328]
    1cf8:	add	x16, x16, #0x148
    1cfc:	br	x17

0000000000001d00 <cap_compare@plt>:
    1d00:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1d04:	ldr	x17, [x16, #336]
    1d08:	add	x16, x16, #0x150
    1d0c:	br	x17

0000000000001d10 <capget@plt>:
    1d10:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1d14:	ldr	x17, [x16, #344]
    1d18:	add	x16, x16, #0x158
    1d1c:	br	x17

0000000000001d20 <cap_set_secbits@plt>:
    1d20:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1d24:	ldr	x17, [x16, #352]
    1d28:	add	x16, x16, #0x160
    1d2c:	br	x17

0000000000001d30 <__errno_location@plt>:
    1d30:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1d34:	ldr	x17, [x16, #360]
    1d38:	add	x16, x16, #0x168
    1d3c:	br	x17

0000000000001d40 <tolower@plt>:
    1d40:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1d44:	ldr	x17, [x16, #368]
    1d48:	add	x16, x16, #0x170
    1d4c:	br	x17

0000000000001d50 <prctl@plt>:
    1d50:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1d54:	ldr	x17, [x16, #376]
    1d58:	add	x16, x16, #0x178
    1d5c:	br	x17

0000000000001d60 <syscall@plt>:
    1d60:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1d64:	ldr	x17, [x16, #384]
    1d68:	add	x16, x16, #0x180
    1d6c:	br	x17

0000000000001d70 <cap_to_name@plt>:
    1d70:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1d74:	ldr	x17, [x16, #392]
    1d78:	add	x16, x16, #0x188
    1d7c:	br	x17

Disassembly of section .text:

0000000000001d80 <cap_max_bits@@Base-0x1a4>:
    1d80:	adrp	x0, 15000 <cap_set_nsowner@@Base+0xf9e0>
    1d84:	ldr	x0, [x0, #4056]
    1d88:	cbz	x0, 1d90 <cap_to_name@plt+0x20>
    1d8c:	b	1bd0 <__gmon_start__@plt>
    1d90:	ret
    1d94:	nop
    1d98:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x109e0>
    1d9c:	add	x0, x0, #0x2e0
    1da0:	adrp	x1, 16000 <cap_set_nsowner@@Base+0x109e0>
    1da4:	add	x1, x1, #0x2e0
    1da8:	cmp	x1, x0
    1dac:	b.eq	1dc4 <cap_to_name@plt+0x54>  // b.none
    1db0:	adrp	x1, 15000 <cap_set_nsowner@@Base+0xf9e0>
    1db4:	ldr	x1, [x1, #4040]
    1db8:	cbz	x1, 1dc4 <cap_to_name@plt+0x54>
    1dbc:	mov	x16, x1
    1dc0:	br	x16
    1dc4:	ret
    1dc8:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x109e0>
    1dcc:	add	x0, x0, #0x2e0
    1dd0:	adrp	x1, 16000 <cap_set_nsowner@@Base+0x109e0>
    1dd4:	add	x1, x1, #0x2e0
    1dd8:	sub	x1, x1, x0
    1ddc:	lsr	x2, x1, #63
    1de0:	add	x1, x2, x1, asr #3
    1de4:	cmp	xzr, x1, asr #1
    1de8:	asr	x1, x1, #1
    1dec:	b.eq	1e04 <cap_to_name@plt+0x94>  // b.none
    1df0:	adrp	x2, 15000 <cap_set_nsowner@@Base+0xf9e0>
    1df4:	ldr	x2, [x2, #4064]
    1df8:	cbz	x2, 1e04 <cap_to_name@plt+0x94>
    1dfc:	mov	x16, x2
    1e00:	br	x16
    1e04:	ret
    1e08:	stp	x29, x30, [sp, #-32]!
    1e0c:	mov	x29, sp
    1e10:	str	x19, [sp, #16]
    1e14:	adrp	x19, 16000 <cap_set_nsowner@@Base+0x109e0>
    1e18:	ldrb	w0, [x19, #736]
    1e1c:	cbnz	w0, 1e44 <cap_to_name@plt+0xd4>
    1e20:	adrp	x0, 15000 <cap_set_nsowner@@Base+0xf9e0>
    1e24:	ldr	x0, [x0, #4048]
    1e28:	cbz	x0, 1e38 <cap_to_name@plt+0xc8>
    1e2c:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x109e0>
    1e30:	ldr	x0, [x0, #400]
    1e34:	bl	1b10 <__cxa_finalize@plt>
    1e38:	bl	1d98 <cap_to_name@plt+0x28>
    1e3c:	mov	w0, #0x1                   	// #1
    1e40:	strb	w0, [x19, #736]
    1e44:	ldr	x19, [sp, #16]
    1e48:	ldp	x29, x30, [sp], #32
    1e4c:	ret
    1e50:	b	1dc8 <cap_to_name@plt+0x58>
    1e54:	sub	sp, sp, #0x20
    1e58:	stp	x29, x30, [sp, #16]
    1e5c:	add	x29, sp, #0x10
    1e60:	adrp	x8, 16000 <cap_set_nsowner@@Base+0x109e0>
    1e64:	add	x8, x8, #0x2e4
    1e68:	ldr	w9, [x8]
    1e6c:	cbz	w9, 1e74 <cap_to_name@plt+0x104>
    1e70:	b	1f18 <cap_to_name@plt+0x1a8>
    1e74:	mov	x8, xzr
    1e78:	mov	x0, x8
    1e7c:	mov	x1, x8
    1e80:	bl	1b60 <cap_set_syscall@plt>
    1e84:	stur	wzr, [x29, #-4]
    1e88:	mov	w8, #0x40                  	// #64
    1e8c:	str	w8, [sp, #8]
    1e90:	ldur	w8, [x29, #-4]
    1e94:	ldr	w9, [sp, #8]
    1e98:	cmp	w8, w9
    1e9c:	b.gt	1eec <cap_to_name@plt+0x17c>
    1ea0:	ldur	w8, [x29, #-4]
    1ea4:	ldr	w9, [sp, #8]
    1ea8:	add	w8, w8, w9
    1eac:	mov	w9, #0x2                   	// #2
    1eb0:	sdiv	w8, w8, w9
    1eb4:	str	w8, [sp, #4]
    1eb8:	ldr	w0, [sp, #4]
    1ebc:	bl	1b90 <cap_get_bound@plt>
    1ec0:	cmp	w0, #0x0
    1ec4:	cset	w8, ge  // ge = tcont
    1ec8:	tbnz	w8, #0, 1edc <cap_to_name@plt+0x16c>
    1ecc:	ldr	w8, [sp, #4]
    1ed0:	subs	w8, w8, #0x1
    1ed4:	str	w8, [sp, #8]
    1ed8:	b	1ee8 <cap_to_name@plt+0x178>
    1edc:	ldr	w8, [sp, #4]
    1ee0:	add	w8, w8, #0x1
    1ee4:	stur	w8, [x29, #-4]
    1ee8:	b	1e90 <cap_to_name@plt+0x120>
    1eec:	ldur	w8, [x29, #-4]
    1ef0:	cbz	w8, 1f00 <cap_to_name@plt+0x190>
    1ef4:	ldur	w8, [x29, #-4]
    1ef8:	str	w8, [sp]
    1efc:	b	1f08 <cap_to_name@plt+0x198>
    1f00:	mov	w8, #0x26                  	// #38
    1f04:	str	w8, [sp]
    1f08:	ldr	w8, [sp]
    1f0c:	adrp	x9, 16000 <cap_set_nsowner@@Base+0x109e0>
    1f10:	add	x9, x9, #0x2e4
    1f14:	str	w8, [x9]
    1f18:	ldp	x29, x30, [sp, #16]
    1f1c:	add	sp, sp, #0x20
    1f20:	ret

0000000000001f24 <cap_max_bits@@Base>:
    1f24:	adrp	x8, 16000 <cap_set_nsowner@@Base+0x109e0>
    1f28:	add	x8, x8, #0x2e4
    1f2c:	ldr	w0, [x8]
    1f30:	ret

0000000000001f34 <cap_init@@Base>:
    1f34:	sub	sp, sp, #0x30
    1f38:	stp	x29, x30, [sp, #32]
    1f3c:	add	x29, sp, #0x20
    1f40:	mov	x0, #0x1                   	// #1
    1f44:	mov	x1, #0x28                  	// #40
    1f48:	bl	1bb0 <calloc@plt>
    1f4c:	str	x0, [sp, #16]
    1f50:	ldr	x8, [sp, #16]
    1f54:	cbnz	x8, 1f70 <cap_init@@Base+0x3c>
    1f58:	bl	1d30 <__errno_location@plt>
    1f5c:	mov	w8, #0xc                   	// #12
    1f60:	str	w8, [x0]
    1f64:	mov	x9, xzr
    1f68:	stur	x9, [x29, #-8]
    1f6c:	b	2020 <cap_init@@Base+0xec>
    1f70:	ldr	x8, [sp, #16]
    1f74:	mov	w9, #0x90d0                	// #37072
    1f78:	movk	w9, #0xca, lsl #16
    1f7c:	str	w9, [x8]
    1f80:	ldr	x8, [sp, #16]
    1f84:	add	x8, x8, #0x4
    1f88:	str	x8, [sp, #8]
    1f8c:	ldr	x8, [sp, #8]
    1f90:	mov	w9, #0x522                 	// #1314
    1f94:	movk	w9, #0x2008, lsl #16
    1f98:	str	w9, [x8]
    1f9c:	ldr	x0, [sp, #8]
    1fa0:	mov	x8, xzr
    1fa4:	mov	x1, x8
    1fa8:	bl	1d10 <capget@plt>
    1fac:	ldr	x8, [sp, #8]
    1fb0:	ldr	w9, [x8]
    1fb4:	mov	w10, #0x330                 	// #816
    1fb8:	movk	w10, #0x1998, lsl #16
    1fbc:	cmp	w9, w10
    1fc0:	str	w9, [sp, #4]
    1fc4:	b.eq	1ffc <cap_init@@Base+0xc8>  // b.none
    1fc8:	b	1fcc <cap_init@@Base+0x98>
    1fcc:	mov	w8, #0x1026                	// #4134
    1fd0:	movk	w8, #0x2007, lsl #16
    1fd4:	ldr	w9, [sp, #4]
    1fd8:	cmp	w9, w8
    1fdc:	b.eq	2000 <cap_init@@Base+0xcc>  // b.none
    1fe0:	b	1fe4 <cap_init@@Base+0xb0>
    1fe4:	mov	w8, #0x522                 	// #1314
    1fe8:	movk	w8, #0x2008, lsl #16
    1fec:	ldr	w9, [sp, #4]
    1ff0:	cmp	w9, w8
    1ff4:	b.eq	2004 <cap_init@@Base+0xd0>  // b.none
    1ff8:	b	2008 <cap_init@@Base+0xd4>
    1ffc:	b	2018 <cap_init@@Base+0xe4>
    2000:	b	2018 <cap_init@@Base+0xe4>
    2004:	b	2018 <cap_init@@Base+0xe4>
    2008:	ldr	x0, [sp, #8]
    200c:	bl	1ce0 <cap_free@plt>
    2010:	mov	x8, xzr
    2014:	str	x8, [sp, #8]
    2018:	ldr	x8, [sp, #8]
    201c:	stur	x8, [x29, #-8]
    2020:	ldur	x0, [x29, #-8]
    2024:	ldp	x29, x30, [sp, #32]
    2028:	add	sp, sp, #0x30
    202c:	ret

0000000000002030 <cap_free@@Base>:
    2030:	sub	sp, sp, #0x30
    2034:	stp	x29, x30, [sp, #32]
    2038:	add	x29, sp, #0x20
    203c:	str	x0, [sp, #16]
    2040:	ldr	x8, [sp, #16]
    2044:	cbnz	x8, 2050 <cap_free@@Base+0x20>
    2048:	stur	wzr, [x29, #-4]
    204c:	b	212c <cap_free@@Base+0xfc>
    2050:	ldr	x8, [sp, #16]
    2054:	cbz	x8, 20ac <cap_free@@Base+0x7c>
    2058:	ldr	x8, [sp, #16]
    205c:	ldur	w9, [x8, #-4]
    2060:	mov	w10, #0x90d0                	// #37072
    2064:	movk	w10, #0xca, lsl #16
    2068:	cmp	w9, w10
    206c:	b.ne	20ac <cap_free@@Base+0x7c>  // b.any
    2070:	ldr	x8, [sp, #16]
    2074:	mov	x9, #0xfffffffffffffffc    	// #-4
    2078:	add	x8, x8, x9
    207c:	str	x8, [sp, #16]
    2080:	ldr	x0, [sp, #16]
    2084:	mov	w10, wzr
    2088:	mov	w1, w10
    208c:	mov	x2, #0x28                  	// #40
    2090:	bl	1ba0 <memset@plt>
    2094:	ldr	x0, [sp, #16]
    2098:	bl	1c70 <free@plt>
    209c:	mov	x8, xzr
    20a0:	str	x8, [sp, #16]
    20a4:	stur	wzr, [x29, #-4]
    20a8:	b	212c <cap_free@@Base+0xfc>
    20ac:	ldr	x8, [sp, #16]
    20b0:	cbz	x8, 2118 <cap_free@@Base+0xe8>
    20b4:	ldr	x8, [sp, #16]
    20b8:	ldur	w9, [x8, #-4]
    20bc:	mov	w10, #0x95d0                	// #38352
    20c0:	movk	w10, #0xca, lsl #16
    20c4:	cmp	w9, w10
    20c8:	b.ne	2118 <cap_free@@Base+0xe8>  // b.any
    20cc:	ldr	x0, [sp, #16]
    20d0:	bl	1aa0 <strlen@plt>
    20d4:	add	x8, x0, #0x4
    20d8:	str	x8, [sp, #8]
    20dc:	ldr	x8, [sp, #16]
    20e0:	mov	x9, #0xfffffffffffffffc    	// #-4
    20e4:	add	x8, x8, x9
    20e8:	str	x8, [sp, #16]
    20ec:	ldr	x0, [sp, #16]
    20f0:	ldr	x2, [sp, #8]
    20f4:	mov	w10, wzr
    20f8:	mov	w1, w10
    20fc:	bl	1ba0 <memset@plt>
    2100:	ldr	x0, [sp, #16]
    2104:	bl	1c70 <free@plt>
    2108:	mov	x8, xzr
    210c:	str	x8, [sp, #16]
    2110:	stur	wzr, [x29, #-4]
    2114:	b	212c <cap_free@@Base+0xfc>
    2118:	bl	1d30 <__errno_location@plt>
    211c:	mov	w8, #0x16                  	// #22
    2120:	str	w8, [x0]
    2124:	mov	w8, #0xffffffff            	// #-1
    2128:	stur	w8, [x29, #-4]
    212c:	ldur	w0, [x29, #-4]
    2130:	ldp	x29, x30, [sp, #32]
    2134:	add	sp, sp, #0x30
    2138:	ret

000000000000213c <_libcap_strdup@@Base>:
    213c:	sub	sp, sp, #0x30
    2140:	stp	x29, x30, [sp, #32]
    2144:	add	x29, sp, #0x20
    2148:	str	x0, [sp, #16]
    214c:	ldr	x8, [sp, #16]
    2150:	cbnz	x8, 216c <_libcap_strdup@@Base+0x30>
    2154:	bl	1d30 <__errno_location@plt>
    2158:	mov	w8, #0x16                  	// #22
    215c:	str	w8, [x0]
    2160:	mov	x9, xzr
    2164:	stur	x9, [x29, #-8]
    2168:	b	21d0 <_libcap_strdup@@Base+0x94>
    216c:	ldr	x0, [sp, #16]
    2170:	bl	1aa0 <strlen@plt>
    2174:	add	x8, x0, #0x4
    2178:	add	x0, x8, #0x1
    217c:	bl	1b50 <malloc@plt>
    2180:	str	x0, [sp, #8]
    2184:	ldr	x8, [sp, #8]
    2188:	cbnz	x8, 21a4 <_libcap_strdup@@Base+0x68>
    218c:	bl	1d30 <__errno_location@plt>
    2190:	mov	w8, #0xc                   	// #12
    2194:	str	w8, [x0]
    2198:	mov	x9, xzr
    219c:	stur	x9, [x29, #-8]
    21a0:	b	21d0 <_libcap_strdup@@Base+0x94>
    21a4:	ldr	x8, [sp, #8]
    21a8:	add	x9, x8, #0x4
    21ac:	str	x9, [sp, #8]
    21b0:	mov	w10, #0x95d0                	// #38352
    21b4:	movk	w10, #0xca, lsl #16
    21b8:	str	w10, [x8]
    21bc:	ldr	x0, [sp, #8]
    21c0:	ldr	x1, [sp, #16]
    21c4:	bl	1cb0 <strcpy@plt>
    21c8:	ldr	x8, [sp, #8]
    21cc:	stur	x8, [x29, #-8]
    21d0:	ldur	x0, [x29, #-8]
    21d4:	ldp	x29, x30, [sp, #32]
    21d8:	add	sp, sp, #0x30
    21dc:	ret

00000000000021e0 <cap_dup@@Base>:
    21e0:	sub	sp, sp, #0x30
    21e4:	stp	x29, x30, [sp, #32]
    21e8:	add	x29, sp, #0x20
    21ec:	str	x0, [sp, #16]
    21f0:	ldr	x8, [sp, #16]
    21f4:	cbz	x8, 2210 <cap_dup@@Base+0x30>
    21f8:	ldr	x8, [sp, #16]
    21fc:	ldur	w9, [x8, #-4]
    2200:	mov	w10, #0x90d0                	// #37072
    2204:	movk	w10, #0xca, lsl #16
    2208:	cmp	w9, w10
    220c:	b.eq	2228 <cap_dup@@Base+0x48>  // b.none
    2210:	bl	1d30 <__errno_location@plt>
    2214:	mov	w8, #0x16                  	// #22
    2218:	str	w8, [x0]
    221c:	mov	x9, xzr
    2220:	stur	x9, [x29, #-8]
    2224:	b	225c <cap_dup@@Base+0x7c>
    2228:	bl	1c00 <cap_init@plt>
    222c:	str	x0, [sp, #8]
    2230:	ldr	x8, [sp, #8]
    2234:	cbnz	x8, 2244 <cap_dup@@Base+0x64>
    2238:	mov	x8, xzr
    223c:	stur	x8, [x29, #-8]
    2240:	b	225c <cap_dup@@Base+0x7c>
    2244:	ldr	x0, [sp, #8]
    2248:	ldr	x1, [sp, #16]
    224c:	mov	x2, #0x24                  	// #36
    2250:	bl	1a60 <memcpy@plt>
    2254:	ldr	x8, [sp, #8]
    2258:	stur	x8, [x29, #-8]
    225c:	ldur	x0, [x29, #-8]
    2260:	ldp	x29, x30, [sp, #32]
    2264:	add	sp, sp, #0x30
    2268:	ret

000000000000226c <psx_load_syscalls@@Base>:
    226c:	sub	sp, sp, #0x10
    2270:	adrp	x8, 16000 <cap_set_nsowner@@Base+0x109e0>
    2274:	add	x8, x8, #0x198
    2278:	str	x0, [sp, #8]
    227c:	str	x1, [sp]
    2280:	str	wzr, [x8]
    2284:	add	sp, sp, #0x10
    2288:	ret

000000000000228c <cap_set_syscall@@Base>:
    228c:	sub	sp, sp, #0x20
    2290:	stp	x29, x30, [sp, #16]
    2294:	add	x29, sp, #0x10
    2298:	str	x0, [sp, #8]
    229c:	str	x1, [sp]
    22a0:	ldr	x8, [sp, #8]
    22a4:	cbnz	x8, 22c0 <cap_set_syscall@@Base+0x34>
    22a8:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x109e0>
    22ac:	add	x0, x0, #0x1a0
    22b0:	adrp	x1, 16000 <cap_set_nsowner@@Base+0x109e0>
    22b4:	add	x1, x1, #0x1a8
    22b8:	bl	1ab0 <psx_load_syscalls@plt>
    22bc:	b	22e0 <cap_set_syscall@@Base+0x54>
    22c0:	ldr	x8, [sp, #8]
    22c4:	adrp	x9, 16000 <cap_set_nsowner@@Base+0x109e0>
    22c8:	add	x9, x9, #0x1a0
    22cc:	str	x8, [x9]
    22d0:	ldr	x8, [sp]
    22d4:	adrp	x9, 16000 <cap_set_nsowner@@Base+0x109e0>
    22d8:	add	x9, x9, #0x1a8
    22dc:	str	x8, [x9]
    22e0:	ldp	x29, x30, [sp, #16]
    22e4:	add	sp, sp, #0x20
    22e8:	ret

00000000000022ec <cap_get_proc@@Base>:
    22ec:	sub	sp, sp, #0x20
    22f0:	stp	x29, x30, [sp, #16]
    22f4:	add	x29, sp, #0x10
    22f8:	bl	1c00 <cap_init@plt>
    22fc:	str	x0, [sp, #8]
    2300:	ldr	x8, [sp, #8]
    2304:	cbz	x8, 232c <cap_get_proc@@Base+0x40>
    2308:	ldr	x0, [sp, #8]
    230c:	ldr	x8, [sp, #8]
    2310:	add	x1, x8, #0x8
    2314:	bl	1d10 <capget@plt>
    2318:	cbz	w0, 232c <cap_get_proc@@Base+0x40>
    231c:	ldr	x0, [sp, #8]
    2320:	bl	1ce0 <cap_free@plt>
    2324:	mov	x8, xzr
    2328:	str	x8, [sp, #8]
    232c:	ldr	x0, [sp, #8]
    2330:	ldp	x29, x30, [sp, #16]
    2334:	add	sp, sp, #0x20
    2338:	ret

000000000000233c <cap_set_proc@@Base>:
    233c:	sub	sp, sp, #0x30
    2340:	stp	x29, x30, [sp, #32]
    2344:	add	x29, sp, #0x20
    2348:	str	x0, [sp, #16]
    234c:	ldr	x8, [sp, #16]
    2350:	cbz	x8, 236c <cap_set_proc@@Base+0x30>
    2354:	ldr	x8, [sp, #16]
    2358:	ldur	w9, [x8, #-4]
    235c:	mov	w10, #0x90d0                	// #37072
    2360:	movk	w10, #0xca, lsl #16
    2364:	cmp	w9, w10
    2368:	b.eq	2384 <cap_set_proc@@Base+0x48>  // b.none
    236c:	bl	1d30 <__errno_location@plt>
    2370:	mov	w8, #0x16                  	// #22
    2374:	str	w8, [x0]
    2378:	mov	w8, #0xffffffff            	// #-1
    237c:	stur	w8, [x29, #-4]
    2380:	b	23a0 <cap_set_proc@@Base+0x64>
    2384:	ldr	x0, [sp, #16]
    2388:	ldr	x8, [sp, #16]
    238c:	add	x1, x8, #0x8
    2390:	bl	23b0 <cap_set_proc@@Base+0x74>
    2394:	str	w0, [sp, #12]
    2398:	ldr	w9, [sp, #12]
    239c:	stur	w9, [x29, #-4]
    23a0:	ldur	w0, [x29, #-4]
    23a4:	ldp	x29, x30, [sp, #32]
    23a8:	add	sp, sp, #0x30
    23ac:	ret
    23b0:	sub	sp, sp, #0x20
    23b4:	stp	x29, x30, [sp, #16]
    23b8:	add	x29, sp, #0x10
    23bc:	adrp	x8, 16000 <cap_set_nsowner@@Base+0x109e0>
    23c0:	add	x8, x8, #0x1a0
    23c4:	mov	x9, #0x5b                  	// #91
    23c8:	mov	x10, xzr
    23cc:	str	x0, [sp, #8]
    23d0:	str	x1, [sp]
    23d4:	ldr	x8, [x8]
    23d8:	ldr	x1, [sp, #8]
    23dc:	ldr	x2, [sp]
    23e0:	mov	x0, x9
    23e4:	mov	x3, x10
    23e8:	blr	x8
    23ec:	ldp	x29, x30, [sp, #16]
    23f0:	add	sp, sp, #0x20
    23f4:	ret

00000000000023f8 <capgetp@@Base>:
    23f8:	sub	sp, sp, #0x30
    23fc:	stp	x29, x30, [sp, #32]
    2400:	add	x29, sp, #0x20
    2404:	stur	w0, [x29, #-8]
    2408:	str	x1, [sp, #16]
    240c:	ldr	x8, [sp, #16]
    2410:	cbz	x8, 242c <capgetp@@Base+0x34>
    2414:	ldr	x8, [sp, #16]
    2418:	ldur	w9, [x8, #-4]
    241c:	mov	w10, #0x90d0                	// #37072
    2420:	movk	w10, #0xca, lsl #16
    2424:	cmp	w9, w10
    2428:	b.eq	2444 <capgetp@@Base+0x4c>  // b.none
    242c:	bl	1d30 <__errno_location@plt>
    2430:	mov	w8, #0x16                  	// #22
    2434:	str	w8, [x0]
    2438:	mov	w8, #0xffffffff            	// #-1
    243c:	stur	w8, [x29, #-4]
    2440:	b	2474 <capgetp@@Base+0x7c>
    2444:	ldur	w8, [x29, #-8]
    2448:	ldr	x9, [sp, #16]
    244c:	str	w8, [x9, #4]
    2450:	ldr	x0, [sp, #16]
    2454:	ldr	x9, [sp, #16]
    2458:	add	x1, x9, #0x8
    245c:	bl	1d10 <capget@plt>
    2460:	str	w0, [sp, #12]
    2464:	ldr	x9, [sp, #16]
    2468:	str	wzr, [x9, #4]
    246c:	ldr	w8, [sp, #12]
    2470:	stur	w8, [x29, #-4]
    2474:	ldur	w0, [x29, #-4]
    2478:	ldp	x29, x30, [sp, #32]
    247c:	add	sp, sp, #0x30
    2480:	ret

0000000000002484 <cap_get_pid@@Base>:
    2484:	sub	sp, sp, #0x30
    2488:	stp	x29, x30, [sp, #32]
    248c:	add	x29, sp, #0x20
    2490:	stur	w0, [x29, #-4]
    2494:	bl	1c00 <cap_init@plt>
    2498:	str	x0, [sp, #16]
    249c:	ldr	x8, [sp, #16]
    24a0:	cbz	x8, 24e4 <cap_get_pid@@Base+0x60>
    24a4:	ldur	w0, [x29, #-4]
    24a8:	ldr	x1, [sp, #16]
    24ac:	bl	1cd0 <capgetp@plt>
    24b0:	cbz	w0, 24e4 <cap_get_pid@@Base+0x60>
    24b4:	bl	1d30 <__errno_location@plt>
    24b8:	ldr	w8, [x0]
    24bc:	str	w8, [sp, #12]
    24c0:	ldr	x0, [sp, #16]
    24c4:	bl	1ce0 <cap_free@plt>
    24c8:	ldr	w8, [sp, #12]
    24cc:	str	w8, [sp, #8]
    24d0:	bl	1d30 <__errno_location@plt>
    24d4:	ldr	w8, [sp, #8]
    24d8:	str	w8, [x0]
    24dc:	mov	x9, xzr
    24e0:	str	x9, [sp, #16]
    24e4:	ldr	x0, [sp, #16]
    24e8:	ldp	x29, x30, [sp, #32]
    24ec:	add	sp, sp, #0x30
    24f0:	ret

00000000000024f4 <capsetp@@Base>:
    24f4:	sub	sp, sp, #0x30
    24f8:	stp	x29, x30, [sp, #32]
    24fc:	add	x29, sp, #0x20
    2500:	stur	w0, [x29, #-8]
    2504:	str	x1, [sp, #16]
    2508:	ldr	x8, [sp, #16]
    250c:	cbz	x8, 2528 <capsetp@@Base+0x34>
    2510:	ldr	x8, [sp, #16]
    2514:	ldur	w9, [x8, #-4]
    2518:	mov	w10, #0x90d0                	// #37072
    251c:	movk	w10, #0xca, lsl #16
    2520:	cmp	w9, w10
    2524:	b.eq	2540 <capsetp@@Base+0x4c>  // b.none
    2528:	bl	1d30 <__errno_location@plt>
    252c:	mov	w8, #0x16                  	// #22
    2530:	str	w8, [x0]
    2534:	mov	w8, #0xffffffff            	// #-1
    2538:	stur	w8, [x29, #-4]
    253c:	b	2580 <capsetp@@Base+0x8c>
    2540:	ldur	w8, [x29, #-8]
    2544:	ldr	x9, [sp, #16]
    2548:	str	w8, [x9, #4]
    254c:	ldr	x0, [sp, #16]
    2550:	ldr	x9, [sp, #16]
    2554:	add	x1, x9, #0x8
    2558:	bl	1b40 <capset@plt>
    255c:	str	w0, [sp, #12]
    2560:	ldr	x9, [sp, #16]
    2564:	mov	w8, #0x522                 	// #1314
    2568:	movk	w8, #0x2008, lsl #16
    256c:	str	w8, [x9]
    2570:	ldr	x9, [sp, #16]
    2574:	str	wzr, [x9, #4]
    2578:	ldr	w8, [sp, #12]
    257c:	stur	w8, [x29, #-4]
    2580:	ldur	w0, [x29, #-4]
    2584:	ldp	x29, x30, [sp, #32]
    2588:	add	sp, sp, #0x30
    258c:	ret

0000000000002590 <cap_get_bound@@Base>:
    2590:	sub	sp, sp, #0x20
    2594:	stp	x29, x30, [sp, #16]
    2598:	add	x29, sp, #0x10
    259c:	mov	x8, #0x17                  	// #23
    25a0:	mov	x9, xzr
    25a4:	str	w0, [sp, #8]
    25a8:	ldrsw	x1, [sp, #8]
    25ac:	mov	x0, x8
    25b0:	mov	x2, x9
    25b4:	bl	260c <cap_get_bound@@Base+0x7c>
    25b8:	str	w0, [sp, #4]
    25bc:	ldr	w10, [sp, #4]
    25c0:	cmp	w10, #0x0
    25c4:	cset	w10, ge  // ge = tcont
    25c8:	tbnz	w10, #0, 25f4 <cap_get_bound@@Base+0x64>
    25cc:	ldr	w8, [sp, #4]
    25d0:	mov	w9, wzr
    25d4:	subs	w8, w9, w8
    25d8:	str	w8, [sp]
    25dc:	bl	1d30 <__errno_location@plt>
    25e0:	ldr	w8, [sp]
    25e4:	str	w8, [x0]
    25e8:	mov	w9, #0xffffffff            	// #-1
    25ec:	stur	w9, [x29, #-4]
    25f0:	b	25fc <cap_get_bound@@Base+0x6c>
    25f4:	ldr	w8, [sp, #4]
    25f8:	stur	w8, [x29, #-4]
    25fc:	ldur	w0, [x29, #-4]
    2600:	ldp	x29, x30, [sp, #16]
    2604:	add	sp, sp, #0x20
    2608:	ret
    260c:	sub	sp, sp, #0x30
    2610:	stp	x29, x30, [sp, #32]
    2614:	add	x29, sp, #0x20
    2618:	adrp	x8, 16000 <cap_set_nsowner@@Base+0x109e0>
    261c:	add	x8, x8, #0x1a0
    2620:	mov	x9, #0xa7                  	// #167
    2624:	stur	x0, [x29, #-8]
    2628:	str	x1, [sp, #16]
    262c:	str	x2, [sp, #8]
    2630:	ldr	x8, [x8]
    2634:	ldur	x1, [x29, #-8]
    2638:	ldr	x2, [sp, #16]
    263c:	ldr	x3, [sp, #8]
    2640:	mov	x0, x9
    2644:	blr	x8
    2648:	ldp	x29, x30, [sp, #32]
    264c:	add	sp, sp, #0x30
    2650:	ret

0000000000002654 <cap_drop_bound@@Base>:
    2654:	sub	sp, sp, #0x20
    2658:	stp	x29, x30, [sp, #16]
    265c:	add	x29, sp, #0x10
    2660:	mov	x8, #0x18                  	// #24
    2664:	mov	x9, xzr
    2668:	str	w0, [sp, #8]
    266c:	ldrsw	x1, [sp, #8]
    2670:	mov	x0, x8
    2674:	mov	x2, x9
    2678:	bl	260c <cap_get_bound@@Base+0x7c>
    267c:	str	w0, [sp, #4]
    2680:	ldr	w10, [sp, #4]
    2684:	cmp	w10, #0x0
    2688:	cset	w10, ge  // ge = tcont
    268c:	tbnz	w10, #0, 26b8 <cap_drop_bound@@Base+0x64>
    2690:	ldr	w8, [sp, #4]
    2694:	mov	w9, wzr
    2698:	subs	w8, w9, w8
    269c:	str	w8, [sp]
    26a0:	bl	1d30 <__errno_location@plt>
    26a4:	ldr	w8, [sp]
    26a8:	str	w8, [x0]
    26ac:	mov	w9, #0xffffffff            	// #-1
    26b0:	stur	w9, [x29, #-4]
    26b4:	b	26c0 <cap_drop_bound@@Base+0x6c>
    26b8:	ldr	w8, [sp, #4]
    26bc:	stur	w8, [x29, #-4]
    26c0:	ldur	w0, [x29, #-4]
    26c4:	ldp	x29, x30, [sp, #16]
    26c8:	add	sp, sp, #0x20
    26cc:	ret

00000000000026d0 <cap_get_ambient@@Base>:
    26d0:	sub	sp, sp, #0x20
    26d4:	stp	x29, x30, [sp, #16]
    26d8:	add	x29, sp, #0x10
    26dc:	mov	w8, #0x2f                  	// #47
    26e0:	mov	x1, #0x1                   	// #1
    26e4:	mov	x9, xzr
    26e8:	str	w0, [sp, #8]
    26ec:	ldrsw	x2, [sp, #8]
    26f0:	mov	w0, w8
    26f4:	mov	x3, x9
    26f8:	mov	x4, x9
    26fc:	bl	1d50 <prctl@plt>
    2700:	str	w0, [sp, #4]
    2704:	ldr	w8, [sp, #4]
    2708:	cmp	w8, #0x0
    270c:	cset	w8, ge  // ge = tcont
    2710:	tbnz	w8, #0, 273c <cap_get_ambient@@Base+0x6c>
    2714:	ldr	w8, [sp, #4]
    2718:	mov	w9, wzr
    271c:	subs	w8, w9, w8
    2720:	str	w8, [sp]
    2724:	bl	1d30 <__errno_location@plt>
    2728:	ldr	w8, [sp]
    272c:	str	w8, [x0]
    2730:	mov	w9, #0xffffffff            	// #-1
    2734:	stur	w9, [x29, #-4]
    2738:	b	2744 <cap_get_ambient@@Base+0x74>
    273c:	ldr	w8, [sp, #4]
    2740:	stur	w8, [x29, #-4]
    2744:	ldur	w0, [x29, #-4]
    2748:	ldp	x29, x30, [sp, #16]
    274c:	add	sp, sp, #0x20
    2750:	ret

0000000000002754 <cap_set_ambient@@Base>:
    2754:	sub	sp, sp, #0x30
    2758:	stp	x29, x30, [sp, #32]
    275c:	add	x29, sp, #0x20
    2760:	stur	w0, [x29, #-8]
    2764:	stur	w1, [x29, #-12]
    2768:	ldur	w8, [x29, #-12]
    276c:	str	w8, [sp, #8]
    2770:	cbz	w8, 279c <cap_set_ambient@@Base+0x48>
    2774:	b	2778 <cap_set_ambient@@Base+0x24>
    2778:	ldr	w8, [sp, #8]
    277c:	cmp	w8, #0x1
    2780:	cset	w9, eq  // eq = none
    2784:	eor	w9, w9, #0x1
    2788:	tbnz	w9, #0, 27a8 <cap_set_ambient@@Base+0x54>
    278c:	b	2790 <cap_set_ambient@@Base+0x3c>
    2790:	mov	w8, #0x2                   	// #2
    2794:	str	w8, [sp, #12]
    2798:	b	27c0 <cap_set_ambient@@Base+0x6c>
    279c:	mov	w8, #0x3                   	// #3
    27a0:	str	w8, [sp, #12]
    27a4:	b	27c0 <cap_set_ambient@@Base+0x6c>
    27a8:	bl	1d30 <__errno_location@plt>
    27ac:	mov	w8, #0x16                  	// #22
    27b0:	str	w8, [x0]
    27b4:	mov	w8, #0xffffffff            	// #-1
    27b8:	stur	w8, [x29, #-4]
    27bc:	b	2824 <cap_set_ambient@@Base+0xd0>
    27c0:	ldrsw	x1, [sp, #12]
    27c4:	ldursw	x2, [x29, #-8]
    27c8:	mov	x0, #0x2f                  	// #47
    27cc:	mov	x8, xzr
    27d0:	mov	x3, x8
    27d4:	mov	x4, x8
    27d8:	mov	x5, x8
    27dc:	bl	2834 <cap_set_ambient@@Base+0xe0>
    27e0:	str	w0, [sp, #16]
    27e4:	ldr	w9, [sp, #16]
    27e8:	cmp	w9, #0x0
    27ec:	cset	w9, ge  // ge = tcont
    27f0:	tbnz	w9, #0, 281c <cap_set_ambient@@Base+0xc8>
    27f4:	ldr	w8, [sp, #16]
    27f8:	mov	w9, wzr
    27fc:	subs	w8, w9, w8
    2800:	str	w8, [sp, #4]
    2804:	bl	1d30 <__errno_location@plt>
    2808:	ldr	w8, [sp, #4]
    280c:	str	w8, [x0]
    2810:	mov	w9, #0xffffffff            	// #-1
    2814:	stur	w9, [x29, #-4]
    2818:	b	2824 <cap_set_ambient@@Base+0xd0>
    281c:	ldr	w8, [sp, #16]
    2820:	stur	w8, [x29, #-4]
    2824:	ldur	w0, [x29, #-4]
    2828:	ldp	x29, x30, [sp, #32]
    282c:	add	sp, sp, #0x30
    2830:	ret
    2834:	sub	sp, sp, #0x40
    2838:	stp	x29, x30, [sp, #48]
    283c:	add	x29, sp, #0x30
    2840:	adrp	x8, 16000 <cap_set_nsowner@@Base+0x109e0>
    2844:	add	x8, x8, #0x1a8
    2848:	mov	x9, #0xa7                  	// #167
    284c:	stur	x0, [x29, #-8]
    2850:	stur	x1, [x29, #-16]
    2854:	str	x2, [sp, #24]
    2858:	str	x3, [sp, #16]
    285c:	str	x4, [sp, #8]
    2860:	str	x5, [sp]
    2864:	ldr	x8, [x8]
    2868:	ldur	x1, [x29, #-8]
    286c:	ldur	x2, [x29, #-16]
    2870:	ldr	x3, [sp, #24]
    2874:	ldr	x4, [sp, #16]
    2878:	ldr	x5, [sp, #8]
    287c:	ldr	x6, [sp]
    2880:	mov	x0, x9
    2884:	blr	x8
    2888:	ldp	x29, x30, [sp, #48]
    288c:	add	sp, sp, #0x40
    2890:	ret

0000000000002894 <cap_reset_ambient@@Base>:
    2894:	sub	sp, sp, #0x30
    2898:	stp	x29, x30, [sp, #32]
    289c:	add	x29, sp, #0x20
    28a0:	bl	1d30 <__errno_location@plt>
    28a4:	ldr	w8, [x0]
    28a8:	stur	w8, [x29, #-8]
    28ac:	str	wzr, [sp, #16]
    28b0:	stur	wzr, [x29, #-12]
    28b4:	ldr	w8, [sp, #16]
    28b8:	cmp	w8, #0x0
    28bc:	cset	w8, ne  // ne = any
    28c0:	eor	w8, w8, #0x1
    28c4:	tbnz	w8, #0, 28cc <cap_reset_ambient@@Base+0x38>
    28c8:	b	2914 <cap_reset_ambient@@Base+0x80>
    28cc:	ldur	w0, [x29, #-12]
    28d0:	bl	1b00 <cap_get_ambient@plt>
    28d4:	str	w0, [sp, #16]
    28d8:	ldr	w8, [sp, #16]
    28dc:	mov	w9, #0xffffffff            	// #-1
    28e0:	cmp	w8, w9
    28e4:	b.ne	2904 <cap_reset_ambient@@Base+0x70>  // b.any
    28e8:	ldur	w8, [x29, #-8]
    28ec:	str	w8, [sp, #12]
    28f0:	bl	1d30 <__errno_location@plt>
    28f4:	ldr	w8, [sp, #12]
    28f8:	str	w8, [x0]
    28fc:	stur	wzr, [x29, #-4]
    2900:	b	2978 <cap_reset_ambient@@Base+0xe4>
    2904:	ldur	w8, [x29, #-12]
    2908:	add	w8, w8, #0x1
    290c:	stur	w8, [x29, #-12]
    2910:	b	28b4 <cap_reset_ambient@@Base+0x20>
    2914:	mov	x0, #0x2f                  	// #47
    2918:	mov	x1, #0x4                   	// #4
    291c:	mov	x8, xzr
    2920:	mov	x2, x8
    2924:	mov	x3, x8
    2928:	mov	x4, x8
    292c:	mov	x5, x8
    2930:	bl	2834 <cap_set_ambient@@Base+0xe0>
    2934:	str	w0, [sp, #16]
    2938:	ldr	w9, [sp, #16]
    293c:	cmp	w9, #0x0
    2940:	cset	w9, ge  // ge = tcont
    2944:	tbnz	w9, #0, 2970 <cap_reset_ambient@@Base+0xdc>
    2948:	ldr	w8, [sp, #16]
    294c:	mov	w9, wzr
    2950:	subs	w8, w9, w8
    2954:	str	w8, [sp, #8]
    2958:	bl	1d30 <__errno_location@plt>
    295c:	ldr	w8, [sp, #8]
    2960:	str	w8, [x0]
    2964:	mov	w9, #0xffffffff            	// #-1
    2968:	stur	w9, [x29, #-4]
    296c:	b	2978 <cap_reset_ambient@@Base+0xe4>
    2970:	ldr	w8, [sp, #16]
    2974:	stur	w8, [x29, #-4]
    2978:	ldur	w0, [x29, #-4]
    297c:	ldp	x29, x30, [sp, #32]
    2980:	add	sp, sp, #0x30
    2984:	ret

0000000000002988 <cap_get_secbits@@Base>:
    2988:	stp	x29, x30, [sp, #-16]!
    298c:	mov	x29, sp
    2990:	mov	w0, #0x1b                  	// #27
    2994:	mov	x8, xzr
    2998:	mov	x1, x8
    299c:	mov	x2, x8
    29a0:	bl	1d50 <prctl@plt>
    29a4:	ldp	x29, x30, [sp], #16
    29a8:	ret

00000000000029ac <cap_set_secbits@@Base>:
    29ac:	sub	sp, sp, #0x20
    29b0:	stp	x29, x30, [sp, #16]
    29b4:	add	x29, sp, #0x10
    29b8:	mov	x8, #0x1c                  	// #28
    29bc:	mov	x9, xzr
    29c0:	stur	w0, [x29, #-4]
    29c4:	ldur	w10, [x29, #-4]
    29c8:	mov	w1, w10
    29cc:	mov	x0, x8
    29d0:	mov	x2, x9
    29d4:	bl	260c <cap_get_bound@@Base+0x7c>
    29d8:	ldp	x29, x30, [sp, #16]
    29dc:	add	sp, sp, #0x20
    29e0:	ret

00000000000029e4 <cap_set_mode@@Base>:
    29e4:	sub	sp, sp, #0x50
    29e8:	stp	x29, x30, [sp, #64]
    29ec:	add	x29, sp, #0x40
    29f0:	adrp	x8, 5000 <cap_get_fd@@Base+0x2e0>
    29f4:	add	x8, x8, #0x678
    29f8:	mov	w9, #0xef                  	// #239
    29fc:	mov	w10, wzr
    2a00:	mov	w11, #0x1                   	// #1
    2a04:	sub	x3, x29, #0x8
    2a08:	stur	w0, [x29, #-4]
    2a0c:	ldr	w12, [x8]
    2a10:	stur	w12, [x29, #-8]
    2a14:	str	w9, [sp, #32]
    2a18:	str	w10, [sp, #28]
    2a1c:	str	w11, [sp, #24]
    2a20:	str	x3, [sp, #16]
    2a24:	bl	1c40 <cap_get_proc@plt>
    2a28:	stur	x0, [x29, #-16]
    2a2c:	ldr	w9, [sp, #32]
    2a30:	stur	w9, [x29, #-20]
    2a34:	ldur	x0, [x29, #-16]
    2a38:	ldr	w1, [sp, #28]
    2a3c:	ldr	w2, [sp, #24]
    2a40:	ldr	x3, [sp, #16]
    2a44:	ldr	w4, [sp, #24]
    2a48:	bl	1cf0 <cap_set_flag@plt>
    2a4c:	stur	w0, [x29, #-24]
    2a50:	ldur	w9, [x29, #-24]
    2a54:	ldur	x0, [x29, #-16]
    2a58:	str	w9, [sp, #12]
    2a5c:	bl	1bc0 <cap_set_proc@plt>
    2a60:	ldr	w9, [sp, #12]
    2a64:	orr	w10, w9, w0
    2a68:	stur	w10, [x29, #-24]
    2a6c:	ldur	w10, [x29, #-24]
    2a70:	cbnz	w10, 2b50 <cap_set_mode@@Base+0x16c>
    2a74:	ldur	w8, [x29, #-4]
    2a78:	subs	w9, w8, #0x1
    2a7c:	cmp	w9, #0x1
    2a80:	str	w8, [sp, #8]
    2a84:	b.ls	2a9c <cap_set_mode@@Base+0xb8>  // b.plast
    2a88:	b	2a8c <cap_set_mode@@Base+0xa8>
    2a8c:	ldr	w8, [sp, #8]
    2a90:	cmp	w8, #0x3
    2a94:	b.eq	2aa8 <cap_set_mode@@Base+0xc4>  // b.none
    2a98:	b	2b3c <cap_set_mode@@Base+0x158>
    2a9c:	ldur	x0, [x29, #-16]
    2aa0:	mov	w1, #0x2                   	// #2
    2aa4:	bl	1ad0 <cap_clear_flag@plt>
    2aa8:	mov	w8, wzr
    2aac:	mov	w0, w8
    2ab0:	bl	1b00 <cap_get_ambient@plt>
    2ab4:	cmp	w0, #0x0
    2ab8:	cset	w8, ge  // ge = tcont
    2abc:	tbnz	w8, #0, 2acc <cap_set_mode@@Base+0xe8>
    2ac0:	mov	w8, #0x2f                  	// #47
    2ac4:	stur	w8, [x29, #-20]
    2ac8:	b	2ae0 <cap_set_mode@@Base+0xfc>
    2acc:	bl	1b80 <cap_reset_ambient@plt>
    2ad0:	stur	w0, [x29, #-24]
    2ad4:	ldur	w8, [x29, #-24]
    2ad8:	cbz	w8, 2ae0 <cap_set_mode@@Base+0xfc>
    2adc:	b	2b50 <cap_set_mode@@Base+0x16c>
    2ae0:	ldur	w0, [x29, #-20]
    2ae4:	bl	1d20 <cap_set_secbits@plt>
    2ae8:	stur	w0, [x29, #-24]
    2aec:	ldur	w8, [x29, #-4]
    2af0:	cmp	w8, #0x1
    2af4:	b.eq	2afc <cap_set_mode@@Base+0x118>  // b.none
    2af8:	b	2b50 <cap_set_mode@@Base+0x16c>
    2afc:	stur	wzr, [x29, #-28]
    2b00:	ldur	w0, [x29, #-28]
    2b04:	bl	1b90 <cap_get_bound@plt>
    2b08:	cmp	w0, #0x0
    2b0c:	cset	w8, lt  // lt = tstop
    2b10:	tbnz	w8, #0, 2b2c <cap_set_mode@@Base+0x148>
    2b14:	ldur	w0, [x29, #-28]
    2b18:	bl	1c60 <cap_drop_bound@plt>
    2b1c:	ldur	w8, [x29, #-28]
    2b20:	add	w8, w8, #0x1
    2b24:	stur	w8, [x29, #-28]
    2b28:	b	2b00 <cap_set_mode@@Base+0x11c>
    2b2c:	ldur	x0, [x29, #-16]
    2b30:	mov	w1, #0x1                   	// #1
    2b34:	bl	1ad0 <cap_clear_flag@plt>
    2b38:	b	2b50 <cap_set_mode@@Base+0x16c>
    2b3c:	bl	1d30 <__errno_location@plt>
    2b40:	mov	w8, #0x16                  	// #22
    2b44:	str	w8, [x0]
    2b48:	mov	w8, #0xffffffff            	// #-1
    2b4c:	stur	w8, [x29, #-24]
    2b50:	ldur	x0, [x29, #-16]
    2b54:	mov	w8, wzr
    2b58:	mov	w1, w8
    2b5c:	bl	1ad0 <cap_clear_flag@plt>
    2b60:	ldur	x9, [x29, #-16]
    2b64:	mov	x0, x9
    2b68:	bl	1bc0 <cap_set_proc@plt>
    2b6c:	ldur	w8, [x29, #-24]
    2b70:	orr	w8, w0, w8
    2b74:	stur	w8, [x29, #-24]
    2b78:	ldur	x0, [x29, #-16]
    2b7c:	bl	1ce0 <cap_free@plt>
    2b80:	ldur	w8, [x29, #-24]
    2b84:	mov	w0, w8
    2b88:	ldp	x29, x30, [sp, #64]
    2b8c:	add	sp, sp, #0x50
    2b90:	ret

0000000000002b94 <cap_get_mode@@Base>:
    2b94:	sub	sp, sp, #0x50
    2b98:	stp	x29, x30, [sp, #64]
    2b9c:	add	x29, sp, #0x40
    2ba0:	mov	w8, #0x2f                  	// #47
    2ba4:	str	w8, [sp, #12]
    2ba8:	bl	1ac0 <cap_get_secbits@plt>
    2bac:	stur	w0, [x29, #-8]
    2bb0:	ldur	w8, [x29, #-8]
    2bb4:	ldr	w9, [sp, #12]
    2bb8:	and	w8, w8, w9
    2bbc:	cmp	w8, #0x2f
    2bc0:	b.eq	2bcc <cap_get_mode@@Base+0x38>  // b.none
    2bc4:	stur	wzr, [x29, #-4]
    2bc8:	b	2d28 <cap_get_mode@@Base+0x194>
    2bcc:	bl	1d30 <__errno_location@plt>
    2bd0:	ldr	w8, [x0]
    2bd4:	stur	w8, [x29, #-12]
    2bd8:	stur	wzr, [x29, #-16]
    2bdc:	stur	wzr, [x29, #-20]
    2be0:	ldur	w8, [x29, #-16]
    2be4:	cmp	w8, #0x0
    2be8:	cset	w8, ne  // ne = any
    2bec:	eor	w8, w8, #0x1
    2bf0:	tbnz	w8, #0, 2bf8 <cap_get_mode@@Base+0x64>
    2bf4:	b	2c68 <cap_get_mode@@Base+0xd4>
    2bf8:	ldur	w0, [x29, #-20]
    2bfc:	bl	1b00 <cap_get_ambient@plt>
    2c00:	stur	w0, [x29, #-16]
    2c04:	ldur	w8, [x29, #-16]
    2c08:	mov	w9, #0xffffffff            	// #-1
    2c0c:	cmp	w8, w9
    2c10:	b.ne	2c48 <cap_get_mode@@Base+0xb4>  // b.any
    2c14:	ldur	w8, [x29, #-12]
    2c18:	str	w8, [sp, #8]
    2c1c:	bl	1d30 <__errno_location@plt>
    2c20:	ldr	w8, [sp, #8]
    2c24:	str	w8, [x0]
    2c28:	ldur	w9, [x29, #-20]
    2c2c:	cbz	w9, 2c44 <cap_get_mode@@Base+0xb0>
    2c30:	ldur	w8, [x29, #-8]
    2c34:	cmp	w8, #0xef
    2c38:	b.eq	2c44 <cap_get_mode@@Base+0xb0>  // b.none
    2c3c:	stur	wzr, [x29, #-4]
    2c40:	b	2d28 <cap_get_mode@@Base+0x194>
    2c44:	b	2c68 <cap_get_mode@@Base+0xd4>
    2c48:	ldur	w8, [x29, #-16]
    2c4c:	cbz	w8, 2c58 <cap_get_mode@@Base+0xc4>
    2c50:	stur	wzr, [x29, #-4]
    2c54:	b	2d28 <cap_get_mode@@Base+0x194>
    2c58:	ldur	w8, [x29, #-20]
    2c5c:	add	w8, w8, #0x1
    2c60:	stur	w8, [x29, #-20]
    2c64:	b	2be0 <cap_get_mode@@Base+0x4c>
    2c68:	bl	1c40 <cap_get_proc@plt>
    2c6c:	str	x0, [sp, #32]
    2c70:	bl	1c00 <cap_init@plt>
    2c74:	str	x0, [sp, #24]
    2c78:	ldr	x0, [sp, #24]
    2c7c:	ldr	x1, [sp, #32]
    2c80:	bl	1d00 <cap_compare@plt>
    2c84:	str	w0, [sp, #20]
    2c88:	ldr	x0, [sp, #24]
    2c8c:	bl	1ce0 <cap_free@plt>
    2c90:	ldr	x8, [sp, #32]
    2c94:	mov	x0, x8
    2c98:	bl	1ce0 <cap_free@plt>
    2c9c:	ldr	w9, [sp, #20]
    2ca0:	and	w9, w9, #0x4
    2ca4:	cbz	w9, 2cb4 <cap_get_mode@@Base+0x120>
    2ca8:	mov	w8, #0x3                   	// #3
    2cac:	stur	w8, [x29, #-4]
    2cb0:	b	2d28 <cap_get_mode@@Base+0x194>
    2cb4:	ldr	w8, [sp, #20]
    2cb8:	and	w8, w8, #0x2
    2cbc:	cbnz	w8, 2ccc <cap_get_mode@@Base+0x138>
    2cc0:	ldr	w8, [sp, #20]
    2cc4:	and	w8, w8, #0x1
    2cc8:	cbz	w8, 2cd8 <cap_get_mode@@Base+0x144>
    2ccc:	mov	w8, #0x2                   	// #2
    2cd0:	stur	w8, [x29, #-4]
    2cd4:	b	2d28 <cap_get_mode@@Base+0x194>
    2cd8:	stur	wzr, [x29, #-20]
    2cdc:	ldur	w0, [x29, #-20]
    2ce0:	bl	1b90 <cap_get_bound@plt>
    2ce4:	str	w0, [sp, #16]
    2ce8:	ldr	w8, [sp, #16]
    2cec:	mov	w9, #0xffffffff            	// #-1
    2cf0:	cmp	w8, w9
    2cf4:	b.ne	2cfc <cap_get_mode@@Base+0x168>  // b.any
    2cf8:	b	2d20 <cap_get_mode@@Base+0x18c>
    2cfc:	ldr	w8, [sp, #16]
    2d00:	cbz	w8, 2d10 <cap_get_mode@@Base+0x17c>
    2d04:	mov	w8, #0x2                   	// #2
    2d08:	stur	w8, [x29, #-4]
    2d0c:	b	2d28 <cap_get_mode@@Base+0x194>
    2d10:	ldur	w8, [x29, #-20]
    2d14:	add	w8, w8, #0x1
    2d18:	stur	w8, [x29, #-20]
    2d1c:	b	2cdc <cap_get_mode@@Base+0x148>
    2d20:	mov	w8, #0x1                   	// #1
    2d24:	stur	w8, [x29, #-4]
    2d28:	ldur	w0, [x29, #-4]
    2d2c:	ldp	x29, x30, [sp, #64]
    2d30:	add	sp, sp, #0x50
    2d34:	ret

0000000000002d38 <cap_setuid@@Base>:
    2d38:	sub	sp, sp, #0x60
    2d3c:	stp	x29, x30, [sp, #80]
    2d40:	add	x29, sp, #0x50
    2d44:	adrp	x8, 5000 <cap_get_fd@@Base+0x2e0>
    2d48:	add	x8, x8, #0x67c
    2d4c:	mov	w9, wzr
    2d50:	mov	w10, #0x1                   	// #1
    2d54:	mov	x11, #0x8                   	// #8
    2d58:	mov	x1, #0x1                   	// #1
    2d5c:	mov	x12, xzr
    2d60:	sub	x3, x29, #0x8
    2d64:	stur	w0, [x29, #-4]
    2d68:	ldr	w13, [x8]
    2d6c:	stur	w13, [x29, #-8]
    2d70:	stur	w9, [x29, #-28]
    2d74:	stur	w10, [x29, #-32]
    2d78:	str	x11, [sp, #40]
    2d7c:	str	x1, [sp, #32]
    2d80:	str	x12, [sp, #24]
    2d84:	str	x3, [sp, #16]
    2d88:	bl	1c40 <cap_get_proc@plt>
    2d8c:	stur	x0, [x29, #-16]
    2d90:	ldur	x0, [x29, #-16]
    2d94:	ldur	w1, [x29, #-28]
    2d98:	ldur	w2, [x29, #-32]
    2d9c:	ldr	x3, [sp, #16]
    2da0:	ldur	w4, [x29, #-32]
    2da4:	bl	1cf0 <cap_set_flag@plt>
    2da8:	ldr	x8, [sp, #40]
    2dac:	mov	x0, x8
    2db0:	ldr	x1, [sp, #32]
    2db4:	ldr	x2, [sp, #24]
    2db8:	bl	260c <cap_get_bound@@Base+0x7c>
    2dbc:	ldur	x8, [x29, #-16]
    2dc0:	mov	x0, x8
    2dc4:	bl	1bc0 <cap_set_proc@plt>
    2dc8:	stur	w0, [x29, #-20]
    2dcc:	ldur	w9, [x29, #-20]
    2dd0:	cbnz	w9, 2e54 <cap_setuid@@Base+0x11c>
    2dd4:	adrp	x8, 16000 <cap_set_nsowner@@Base+0x109e0>
    2dd8:	add	x8, x8, #0x198
    2ddc:	ldr	w9, [x8]
    2de0:	cbz	w9, 2e48 <cap_setuid@@Base+0x110>
    2de4:	adrp	x8, 16000 <cap_set_nsowner@@Base+0x109e0>
    2de8:	add	x8, x8, #0x1a0
    2dec:	ldr	x8, [x8]
    2df0:	ldur	w9, [x29, #-4]
    2df4:	mov	w1, w9
    2df8:	mov	x0, #0x92                  	// #146
    2dfc:	mov	x10, xzr
    2e00:	mov	x2, x10
    2e04:	mov	x3, x10
    2e08:	blr	x8
    2e0c:	stur	w0, [x29, #-20]
    2e10:	ldur	w9, [x29, #-20]
    2e14:	cmp	w9, #0x0
    2e18:	cset	w9, ge  // ge = tcont
    2e1c:	tbnz	w9, #0, 2e44 <cap_setuid@@Base+0x10c>
    2e20:	ldur	w8, [x29, #-20]
    2e24:	mov	w9, wzr
    2e28:	subs	w8, w9, w8
    2e2c:	str	w8, [sp, #12]
    2e30:	bl	1d30 <__errno_location@plt>
    2e34:	ldr	w8, [sp, #12]
    2e38:	str	w8, [x0]
    2e3c:	mov	w9, #0xffffffff            	// #-1
    2e40:	stur	w9, [x29, #-20]
    2e44:	b	2e54 <cap_setuid@@Base+0x11c>
    2e48:	ldur	w0, [x29, #-4]
    2e4c:	bl	1a80 <setuid@plt>
    2e50:	stur	w0, [x29, #-20]
    2e54:	bl	1d30 <__errno_location@plt>
    2e58:	ldr	w8, [x0]
    2e5c:	stur	w8, [x29, #-24]
    2e60:	mov	x0, #0x8                   	// #8
    2e64:	mov	x9, xzr
    2e68:	mov	x1, x9
    2e6c:	mov	x2, x9
    2e70:	bl	260c <cap_get_bound@@Base+0x7c>
    2e74:	ldur	x9, [x29, #-16]
    2e78:	mov	x0, x9
    2e7c:	mov	w8, wzr
    2e80:	mov	w1, w8
    2e84:	bl	1ad0 <cap_clear_flag@plt>
    2e88:	ldur	x9, [x29, #-16]
    2e8c:	mov	x0, x9
    2e90:	bl	1bc0 <cap_set_proc@plt>
    2e94:	ldur	x9, [x29, #-16]
    2e98:	mov	x0, x9
    2e9c:	bl	1ce0 <cap_free@plt>
    2ea0:	ldur	w8, [x29, #-24]
    2ea4:	str	w8, [sp, #8]
    2ea8:	bl	1d30 <__errno_location@plt>
    2eac:	ldr	w8, [sp, #8]
    2eb0:	str	w8, [x0]
    2eb4:	ldur	w0, [x29, #-20]
    2eb8:	ldp	x29, x30, [sp, #80]
    2ebc:	add	sp, sp, #0x60
    2ec0:	ret

0000000000002ec4 <cap_setgroups@@Base>:
    2ec4:	sub	sp, sp, #0x60
    2ec8:	stp	x29, x30, [sp, #80]
    2ecc:	add	x29, sp, #0x50
    2ed0:	adrp	x8, 5000 <cap_get_fd@@Base+0x2e0>
    2ed4:	add	x8, x8, #0x680
    2ed8:	mov	w9, wzr
    2edc:	mov	w10, #0x1                   	// #1
    2ee0:	adrp	x11, 16000 <cap_set_nsowner@@Base+0x109e0>
    2ee4:	add	x11, x11, #0x198
    2ee8:	sub	x3, x29, #0x1c
    2eec:	stur	w0, [x29, #-4]
    2ef0:	stur	x1, [x29, #-16]
    2ef4:	stur	x2, [x29, #-24]
    2ef8:	ldr	w12, [x8]
    2efc:	stur	w12, [x29, #-28]
    2f00:	str	w9, [sp, #28]
    2f04:	str	w10, [sp, #24]
    2f08:	str	x11, [sp, #16]
    2f0c:	str	x3, [sp, #8]
    2f10:	bl	1c40 <cap_get_proc@plt>
    2f14:	str	x0, [sp, #40]
    2f18:	ldr	x0, [sp, #40]
    2f1c:	ldr	w1, [sp, #28]
    2f20:	ldr	w2, [sp, #24]
    2f24:	ldr	x3, [sp, #8]
    2f28:	ldr	w4, [sp, #24]
    2f2c:	bl	1cf0 <cap_set_flag@plt>
    2f30:	ldr	x8, [sp, #40]
    2f34:	mov	x0, x8
    2f38:	bl	1bc0 <cap_set_proc@plt>
    2f3c:	str	w0, [sp, #36]
    2f40:	ldr	x8, [sp, #16]
    2f44:	ldr	w9, [x8]
    2f48:	cbz	w9, 2fe8 <cap_setgroups@@Base+0x124>
    2f4c:	ldr	w8, [sp, #36]
    2f50:	cbnz	w8, 2f80 <cap_setgroups@@Base+0xbc>
    2f54:	adrp	x8, 16000 <cap_set_nsowner@@Base+0x109e0>
    2f58:	add	x8, x8, #0x1a0
    2f5c:	ldr	x8, [x8]
    2f60:	ldur	w9, [x29, #-4]
    2f64:	mov	w1, w9
    2f68:	mov	x0, #0x90                  	// #144
    2f6c:	mov	x10, xzr
    2f70:	mov	x2, x10
    2f74:	mov	x3, x10
    2f78:	blr	x8
    2f7c:	str	w0, [sp, #36]
    2f80:	ldr	w8, [sp, #36]
    2f84:	cbnz	w8, 2fb0 <cap_setgroups@@Base+0xec>
    2f88:	adrp	x8, 16000 <cap_set_nsowner@@Base+0x109e0>
    2f8c:	add	x8, x8, #0x1a0
    2f90:	ldr	x8, [x8]
    2f94:	ldur	x1, [x29, #-16]
    2f98:	ldur	x2, [x29, #-24]
    2f9c:	mov	x0, #0x9f                  	// #159
    2fa0:	mov	x9, xzr
    2fa4:	mov	x3, x9
    2fa8:	blr	x8
    2fac:	str	w0, [sp, #36]
    2fb0:	ldr	w8, [sp, #36]
    2fb4:	cmp	w8, #0x0
    2fb8:	cset	w8, ge  // ge = tcont
    2fbc:	tbnz	w8, #0, 2fe4 <cap_setgroups@@Base+0x120>
    2fc0:	ldr	w8, [sp, #36]
    2fc4:	mov	w9, wzr
    2fc8:	subs	w8, w9, w8
    2fcc:	str	w8, [sp, #4]
    2fd0:	bl	1d30 <__errno_location@plt>
    2fd4:	ldr	w8, [sp, #4]
    2fd8:	str	w8, [x0]
    2fdc:	mov	w9, #0xffffffff            	// #-1
    2fe0:	str	w9, [sp, #36]
    2fe4:	b	3014 <cap_setgroups@@Base+0x150>
    2fe8:	ldr	w8, [sp, #36]
    2fec:	cbnz	w8, 2ffc <cap_setgroups@@Base+0x138>
    2ff0:	ldur	w0, [x29, #-4]
    2ff4:	bl	1bf0 <setgid@plt>
    2ff8:	str	w0, [sp, #36]
    2ffc:	ldr	w8, [sp, #36]
    3000:	cbnz	w8, 3014 <cap_setgroups@@Base+0x150>
    3004:	ldur	x0, [x29, #-16]
    3008:	ldur	x1, [x29, #-24]
    300c:	bl	1ca0 <setgroups@plt>
    3010:	str	w0, [sp, #36]
    3014:	bl	1d30 <__errno_location@plt>
    3018:	ldr	w8, [x0]
    301c:	str	w8, [sp, #32]
    3020:	ldr	x0, [sp, #40]
    3024:	mov	w8, wzr
    3028:	mov	w1, w8
    302c:	bl	1ad0 <cap_clear_flag@plt>
    3030:	ldr	x9, [sp, #40]
    3034:	mov	x0, x9
    3038:	bl	1bc0 <cap_set_proc@plt>
    303c:	ldr	x9, [sp, #40]
    3040:	mov	x0, x9
    3044:	bl	1ce0 <cap_free@plt>
    3048:	ldr	w8, [sp, #32]
    304c:	str	w8, [sp]
    3050:	bl	1d30 <__errno_location@plt>
    3054:	ldr	w8, [sp]
    3058:	str	w8, [x0]
    305c:	ldr	w0, [sp, #36]
    3060:	ldp	x29, x30, [sp, #80]
    3064:	add	sp, sp, #0x60
    3068:	ret
    306c:	sub	sp, sp, #0x30
    3070:	stp	x29, x30, [sp, #32]
    3074:	add	x29, sp, #0x20
    3078:	stur	x0, [x29, #-8]
    307c:	str	x1, [sp, #16]
    3080:	str	x2, [sp, #8]
    3084:	str	x3, [sp]
    3088:	ldur	x0, [x29, #-8]
    308c:	ldr	x1, [sp, #16]
    3090:	ldr	x2, [sp, #8]
    3094:	ldr	x3, [sp]
    3098:	bl	1d60 <syscall@plt>
    309c:	ldp	x29, x30, [sp, #32]
    30a0:	add	sp, sp, #0x30
    30a4:	ret
    30a8:	sub	sp, sp, #0x50
    30ac:	stp	x29, x30, [sp, #64]
    30b0:	add	x29, sp, #0x40
    30b4:	stur	x0, [x29, #-8]
    30b8:	stur	x1, [x29, #-16]
    30bc:	stur	x2, [x29, #-24]
    30c0:	str	x3, [sp, #32]
    30c4:	str	x4, [sp, #24]
    30c8:	str	x5, [sp, #16]
    30cc:	str	x6, [sp, #8]
    30d0:	ldur	x0, [x29, #-8]
    30d4:	ldur	x1, [x29, #-16]
    30d8:	ldur	x2, [x29, #-24]
    30dc:	ldr	x3, [sp, #32]
    30e0:	ldr	x4, [sp, #24]
    30e4:	ldr	x5, [sp, #16]
    30e8:	ldr	x6, [sp, #8]
    30ec:	bl	1d60 <syscall@plt>
    30f0:	ldp	x29, x30, [sp, #64]
    30f4:	add	sp, sp, #0x50
    30f8:	ret

00000000000030fc <cap_size@@Base>:
    30fc:	sub	sp, sp, #0x10
    3100:	mov	x8, #0x1d                  	// #29
    3104:	str	x0, [sp, #8]
    3108:	mov	x0, x8
    310c:	add	sp, sp, #0x10
    3110:	ret

0000000000003114 <cap_copy_ext@@Base>:
    3114:	sub	sp, sp, #0x50
    3118:	stp	x29, x30, [sp, #64]
    311c:	add	x29, sp, #0x40
    3120:	stur	x0, [x29, #-16]
    3124:	stur	x1, [x29, #-24]
    3128:	str	x2, [sp, #32]
    312c:	ldur	x8, [x29, #-16]
    3130:	str	x8, [sp, #24]
    3134:	ldur	x8, [x29, #-24]
    3138:	cbz	x8, 3168 <cap_copy_ext@@Base+0x54>
    313c:	ldur	x8, [x29, #-24]
    3140:	ldur	w9, [x8, #-4]
    3144:	mov	w10, #0x90d0                	// #37072
    3148:	movk	w10, #0xca, lsl #16
    314c:	cmp	w9, w10
    3150:	b.ne	3168 <cap_copy_ext@@Base+0x54>  // b.any
    3154:	ldr	x8, [sp, #32]
    3158:	cmp	x8, #0x1d
    315c:	b.lt	3168 <cap_copy_ext@@Base+0x54>  // b.tstop
    3160:	ldur	x8, [x29, #-16]
    3164:	cbnz	x8, 3180 <cap_copy_ext@@Base+0x6c>
    3168:	bl	1d30 <__errno_location@plt>
    316c:	mov	w8, #0x16                  	// #22
    3170:	str	w8, [x0]
    3174:	mov	x9, #0xffffffffffffffff    	// #-1
    3178:	stur	x9, [x29, #-8]
    317c:	b	32ec <cap_copy_ext@@Base+0x1d8>
    3180:	ldr	x8, [sp, #24]
    3184:	adrp	x9, 5000 <cap_get_fd@@Base+0x2e0>
    3188:	add	x9, x9, #0x684
    318c:	ldr	w10, [x9]
    3190:	str	w10, [x8]
    3194:	ldr	x8, [sp, #24]
    3198:	mov	w10, #0x8                   	// #8
    319c:	strb	w10, [x8, #4]
    31a0:	str	wzr, [sp, #20]
    31a4:	ldr	w8, [sp, #20]
    31a8:	cmp	w8, #0x3
    31ac:	b.ge	32e4 <cap_copy_ext@@Base+0x1d0>  // b.tcont
    31b0:	str	xzr, [sp, #8]
    31b4:	ldr	x8, [sp, #8]
    31b8:	cmp	x8, #0x8
    31bc:	b.cs	32d4 <cap_copy_ext@@Base+0x1c0>  // b.hs, b.nlast
    31c0:	ldur	x8, [x29, #-24]
    31c4:	mov	x9, #0x8                   	// #8
    31c8:	add	x8, x8, #0x8
    31cc:	ldr	x10, [sp, #8]
    31d0:	mov	x11, #0x4                   	// #4
    31d4:	udiv	x10, x10, x11
    31d8:	mov	x11, #0xc                   	// #12
    31dc:	mul	x10, x11, x10
    31e0:	add	x8, x8, x10
    31e4:	ldrsw	x10, [sp, #20]
    31e8:	ldr	w12, [x8, x10, lsl #2]
    31ec:	str	w12, [sp, #4]
    31f0:	ldr	w12, [sp, #4]
    31f4:	and	w12, w12, #0xff
    31f8:	ldr	x8, [sp, #24]
    31fc:	add	x8, x8, #0x5
    3200:	ldr	x10, [sp, #8]
    3204:	add	x11, x10, #0x1
    3208:	str	x11, [sp, #8]
    320c:	mov	x11, #0x3                   	// #3
    3210:	mul	x10, x11, x10
    3214:	add	x8, x8, x10
    3218:	ldrsw	x10, [sp, #20]
    321c:	add	x8, x8, x10
    3220:	strb	w12, [x8]
    3224:	ldr	w12, [sp, #4]
    3228:	mov	x0, x9
    322c:	lsr	w12, w12, w0
    3230:	str	w12, [sp, #4]
    3234:	and	w12, w12, #0xff
    3238:	ldr	x8, [sp, #24]
    323c:	add	x8, x8, #0x5
    3240:	ldr	x10, [sp, #8]
    3244:	add	x13, x10, #0x1
    3248:	str	x13, [sp, #8]
    324c:	mul	x10, x11, x10
    3250:	add	x8, x8, x10
    3254:	ldrsw	x10, [sp, #20]
    3258:	add	x8, x8, x10
    325c:	strb	w12, [x8]
    3260:	ldr	w12, [sp, #4]
    3264:	mov	x1, x9
    3268:	lsr	w12, w12, w1
    326c:	str	w12, [sp, #4]
    3270:	and	w12, w12, #0xff
    3274:	ldr	x8, [sp, #24]
    3278:	add	x8, x8, #0x5
    327c:	ldr	x10, [sp, #8]
    3280:	add	x13, x10, #0x1
    3284:	str	x13, [sp, #8]
    3288:	mul	x10, x11, x10
    328c:	add	x8, x8, x10
    3290:	ldrsw	x10, [sp, #20]
    3294:	add	x8, x8, x10
    3298:	strb	w12, [x8]
    329c:	ldr	w12, [sp, #4]
    32a0:	lsr	w9, w12, w9
    32a4:	and	w9, w9, #0xff
    32a8:	ldr	x8, [sp, #24]
    32ac:	add	x8, x8, #0x5
    32b0:	ldr	x10, [sp, #8]
    32b4:	add	x13, x10, #0x1
    32b8:	str	x13, [sp, #8]
    32bc:	mul	x10, x11, x10
    32c0:	add	x8, x8, x10
    32c4:	ldrsw	x10, [sp, #20]
    32c8:	add	x8, x8, x10
    32cc:	strb	w9, [x8]
    32d0:	b	31b4 <cap_copy_ext@@Base+0xa0>
    32d4:	ldr	w8, [sp, #20]
    32d8:	add	w8, w8, #0x1
    32dc:	str	w8, [sp, #20]
    32e0:	b	31a4 <cap_copy_ext@@Base+0x90>
    32e4:	mov	x8, #0x1d                  	// #29
    32e8:	stur	x8, [x29, #-8]
    32ec:	ldur	x0, [x29, #-8]
    32f0:	ldp	x29, x30, [sp, #64]
    32f4:	add	sp, sp, #0x50
    32f8:	ret

00000000000032fc <cap_copy_int@@Base>:
    32fc:	sub	sp, sp, #0x50
    3300:	stp	x29, x30, [sp, #64]
    3304:	add	x29, sp, #0x40
    3308:	stur	x0, [x29, #-16]
    330c:	ldur	x8, [x29, #-16]
    3310:	stur	x8, [x29, #-24]
    3314:	ldur	x8, [x29, #-24]
    3318:	cbz	x8, 3334 <cap_copy_int@@Base+0x38>
    331c:	ldur	x0, [x29, #-24]
    3320:	adrp	x1, 5000 <cap_get_fd@@Base+0x2e0>
    3324:	add	x1, x1, #0x684
    3328:	mov	x2, #0x4                   	// #4
    332c:	bl	1c20 <memcmp@plt>
    3330:	cbz	w0, 334c <cap_copy_int@@Base+0x50>
    3334:	bl	1d30 <__errno_location@plt>
    3338:	mov	w8, #0x16                  	// #22
    333c:	str	w8, [x0]
    3340:	mov	x9, xzr
    3344:	stur	x9, [x29, #-8]
    3348:	b	3504 <cap_copy_int@@Base+0x208>
    334c:	bl	1c00 <cap_init@plt>
    3350:	str	x0, [sp, #32]
    3354:	cbnz	x0, 3364 <cap_copy_int@@Base+0x68>
    3358:	mov	x8, xzr
    335c:	stur	x8, [x29, #-8]
    3360:	b	3504 <cap_copy_int@@Base+0x208>
    3364:	ldur	x8, [x29, #-24]
    3368:	ldrb	w9, [x8, #4]
    336c:	str	w9, [sp, #24]
    3370:	str	wzr, [sp, #28]
    3374:	ldr	w8, [sp, #28]
    3378:	cmp	w8, #0x3
    337c:	b.ge	34fc <cap_copy_int@@Base+0x200>  // b.tcont
    3380:	str	wzr, [sp, #16]
    3384:	str	wzr, [sp, #20]
    3388:	ldr	w8, [sp, #20]
    338c:	mov	w9, w8
    3390:	cmp	x9, #0x2
    3394:	b.cs	34ec <cap_copy_int@@Base+0x1f0>  // b.hs, b.nlast
    3398:	str	wzr, [sp, #12]
    339c:	ldr	w8, [sp, #16]
    33a0:	ldr	w9, [sp, #24]
    33a4:	cmp	w8, w9
    33a8:	b.eq	33dc <cap_copy_int@@Base+0xe0>  // b.none
    33ac:	ldur	x8, [x29, #-24]
    33b0:	add	x8, x8, #0x5
    33b4:	ldrsw	x9, [sp, #16]
    33b8:	mov	w10, w9
    33bc:	add	w10, w10, #0x1
    33c0:	str	w10, [sp, #16]
    33c4:	mov	x11, #0x3                   	// #3
    33c8:	mul	x9, x11, x9
    33cc:	add	x8, x8, x9
    33d0:	ldrsw	x9, [sp, #28]
    33d4:	ldrb	w10, [x8, x9]
    33d8:	str	w10, [sp, #12]
    33dc:	ldr	w8, [sp, #16]
    33e0:	ldr	w9, [sp, #24]
    33e4:	cmp	w8, w9
    33e8:	b.eq	3424 <cap_copy_int@@Base+0x128>  // b.none
    33ec:	ldur	x8, [x29, #-24]
    33f0:	add	x8, x8, #0x5
    33f4:	ldrsw	x9, [sp, #16]
    33f8:	mov	w10, w9
    33fc:	add	w10, w10, #0x1
    3400:	str	w10, [sp, #16]
    3404:	mov	x11, #0x3                   	// #3
    3408:	mul	x9, x11, x9
    340c:	add	x8, x8, x9
    3410:	ldrsw	x9, [sp, #28]
    3414:	ldrb	w10, [x8, x9]
    3418:	ldr	w12, [sp, #12]
    341c:	orr	w10, w12, w10, lsl #8
    3420:	str	w10, [sp, #12]
    3424:	ldr	w8, [sp, #16]
    3428:	ldr	w9, [sp, #24]
    342c:	cmp	w8, w9
    3430:	b.eq	346c <cap_copy_int@@Base+0x170>  // b.none
    3434:	ldur	x8, [x29, #-24]
    3438:	add	x8, x8, #0x5
    343c:	ldrsw	x9, [sp, #16]
    3440:	mov	w10, w9
    3444:	add	w10, w10, #0x1
    3448:	str	w10, [sp, #16]
    344c:	mov	x11, #0x3                   	// #3
    3450:	mul	x9, x11, x9
    3454:	add	x8, x8, x9
    3458:	ldrsw	x9, [sp, #28]
    345c:	ldrb	w10, [x8, x9]
    3460:	ldr	w12, [sp, #12]
    3464:	orr	w10, w12, w10, lsl #16
    3468:	str	w10, [sp, #12]
    346c:	ldr	w8, [sp, #16]
    3470:	ldr	w9, [sp, #24]
    3474:	cmp	w8, w9
    3478:	b.eq	34b4 <cap_copy_int@@Base+0x1b8>  // b.none
    347c:	ldur	x8, [x29, #-24]
    3480:	add	x8, x8, #0x5
    3484:	ldrsw	x9, [sp, #16]
    3488:	mov	w10, w9
    348c:	add	w10, w10, #0x1
    3490:	str	w10, [sp, #16]
    3494:	mov	x11, #0x3                   	// #3
    3498:	mul	x9, x11, x9
    349c:	add	x8, x8, x9
    34a0:	ldrsw	x9, [sp, #28]
    34a4:	ldrb	w10, [x8, x9]
    34a8:	ldr	w12, [sp, #12]
    34ac:	orr	w10, w12, w10, lsl #24
    34b0:	str	w10, [sp, #12]
    34b4:	ldr	w8, [sp, #12]
    34b8:	ldr	x9, [sp, #32]
    34bc:	add	x9, x9, #0x8
    34c0:	ldr	w10, [sp, #20]
    34c4:	mov	w11, w10
    34c8:	mov	x12, #0xc                   	// #12
    34cc:	mul	x11, x12, x11
    34d0:	add	x9, x9, x11
    34d4:	ldrsw	x11, [sp, #28]
    34d8:	str	w8, [x9, x11, lsl #2]
    34dc:	ldr	w8, [sp, #20]
    34e0:	add	w8, w8, #0x1
    34e4:	str	w8, [sp, #20]
    34e8:	b	3388 <cap_copy_int@@Base+0x8c>
    34ec:	ldr	w8, [sp, #28]
    34f0:	add	w8, w8, #0x1
    34f4:	str	w8, [sp, #28]
    34f8:	b	3374 <cap_copy_int@@Base+0x78>
    34fc:	ldr	x8, [sp, #32]
    3500:	stur	x8, [x29, #-8]
    3504:	ldur	x0, [x29, #-8]
    3508:	ldp	x29, x30, [sp, #64]
    350c:	add	sp, sp, #0x50
    3510:	ret

0000000000003514 <cap_get_flag@@Base>:
    3514:	sub	sp, sp, #0x30
    3518:	stp	x29, x30, [sp, #32]
    351c:	add	x29, sp, #0x20
    3520:	str	x0, [sp, #16]
    3524:	str	w1, [sp, #12]
    3528:	str	w2, [sp, #8]
    352c:	str	x3, [sp]
    3530:	ldr	x8, [sp]
    3534:	cbz	x8, 35ec <cap_get_flag@@Base+0xd8>
    3538:	ldr	x8, [sp, #16]
    353c:	cbz	x8, 35ec <cap_get_flag@@Base+0xd8>
    3540:	ldr	x8, [sp, #16]
    3544:	ldur	w9, [x8, #-4]
    3548:	mov	w10, #0x90d0                	// #37072
    354c:	movk	w10, #0xca, lsl #16
    3550:	cmp	w9, w10
    3554:	b.ne	35ec <cap_get_flag@@Base+0xd8>  // b.any
    3558:	ldr	w8, [sp, #12]
    355c:	cmp	w8, #0x0
    3560:	cset	w8, lt  // lt = tstop
    3564:	tbnz	w8, #0, 35ec <cap_get_flag@@Base+0xd8>
    3568:	ldr	w8, [sp, #12]
    356c:	cmp	w8, #0x40
    3570:	b.ge	35ec <cap_get_flag@@Base+0xd8>  // b.tcont
    3574:	ldr	w8, [sp, #8]
    3578:	cmp	w8, #0x0
    357c:	cset	w8, cc  // cc = lo, ul, last
    3580:	tbnz	w8, #0, 35ec <cap_get_flag@@Base+0xd8>
    3584:	ldr	w8, [sp, #8]
    3588:	cmp	w8, #0x3
    358c:	b.cs	35ec <cap_get_flag@@Base+0xd8>  // b.hs, b.nlast
    3590:	ldr	x8, [sp, #16]
    3594:	add	x8, x8, #0x8
    3598:	ldr	w9, [sp, #12]
    359c:	asr	w9, w9, #5
    35a0:	mov	w0, w9
    35a4:	sxtw	x10, w0
    35a8:	mov	x11, #0xc                   	// #12
    35ac:	mul	x10, x11, x10
    35b0:	add	x8, x8, x10
    35b4:	ldr	w9, [sp, #8]
    35b8:	mov	w10, w9
    35bc:	ldr	w9, [x8, x10, lsl #2]
    35c0:	ldr	w12, [sp, #12]
    35c4:	and	w12, w12, #0x1f
    35c8:	mov	w13, #0x1                   	// #1
    35cc:	lsl	w12, w13, w12
    35d0:	mov	w14, wzr
    35d4:	tst	w9, w12
    35d8:	csel	w9, w13, w14, ne  // ne = any
    35dc:	ldr	x8, [sp]
    35e0:	str	w9, [x8]
    35e4:	stur	wzr, [x29, #-4]
    35e8:	b	3600 <cap_get_flag@@Base+0xec>
    35ec:	bl	1d30 <__errno_location@plt>
    35f0:	mov	w8, #0x16                  	// #22
    35f4:	str	w8, [x0]
    35f8:	mov	w8, #0xffffffff            	// #-1
    35fc:	stur	w8, [x29, #-4]
    3600:	ldur	w0, [x29, #-4]
    3604:	ldp	x29, x30, [sp, #32]
    3608:	add	sp, sp, #0x30
    360c:	ret

0000000000003610 <cap_set_flag@@Base>:
    3610:	sub	sp, sp, #0x40
    3614:	stp	x29, x30, [sp, #48]
    3618:	add	x29, sp, #0x30
    361c:	stur	x0, [x29, #-16]
    3620:	stur	w1, [x29, #-20]
    3624:	str	w2, [sp, #24]
    3628:	str	x3, [sp, #16]
    362c:	str	w4, [sp, #12]
    3630:	ldur	x8, [x29, #-16]
    3634:	cbz	x8, 37c0 <cap_set_flag@@Base+0x1b0>
    3638:	ldur	x8, [x29, #-16]
    363c:	ldur	w9, [x8, #-4]
    3640:	mov	w10, #0x90d0                	// #37072
    3644:	movk	w10, #0xca, lsl #16
    3648:	cmp	w9, w10
    364c:	b.ne	37c0 <cap_set_flag@@Base+0x1b0>  // b.any
    3650:	ldr	w8, [sp, #24]
    3654:	cmp	w8, #0x0
    3658:	cset	w8, le
    365c:	tbnz	w8, #0, 37c0 <cap_set_flag@@Base+0x1b0>
    3660:	ldr	w8, [sp, #24]
    3664:	cmp	w8, #0x40
    3668:	b.ge	37c0 <cap_set_flag@@Base+0x1b0>  // b.tcont
    366c:	ldur	w8, [x29, #-20]
    3670:	cmp	w8, #0x0
    3674:	cset	w8, cc  // cc = lo, ul, last
    3678:	tbnz	w8, #0, 37c0 <cap_set_flag@@Base+0x1b0>
    367c:	ldur	w8, [x29, #-20]
    3680:	cmp	w8, #0x3
    3684:	b.cs	37c0 <cap_set_flag@@Base+0x1b0>  // b.hs, b.nlast
    3688:	ldr	w8, [sp, #12]
    368c:	cmp	w8, #0x1
    3690:	b.eq	369c <cap_set_flag@@Base+0x8c>  // b.none
    3694:	ldr	w8, [sp, #12]
    3698:	cbnz	w8, 37c0 <cap_set_flag@@Base+0x1b0>
    369c:	str	wzr, [sp, #8]
    36a0:	ldr	w8, [sp, #8]
    36a4:	ldr	w9, [sp, #24]
    36a8:	cmp	w8, w9
    36ac:	b.ge	37b8 <cap_set_flag@@Base+0x1a8>  // b.tcont
    36b0:	ldr	x8, [sp, #16]
    36b4:	ldrsw	x9, [sp, #8]
    36b8:	ldr	w10, [x8, x9, lsl #2]
    36bc:	cmp	w10, #0x0
    36c0:	cset	w10, lt  // lt = tstop
    36c4:	tbnz	w10, #0, 36dc <cap_set_flag@@Base+0xcc>
    36c8:	ldr	x8, [sp, #16]
    36cc:	ldrsw	x9, [sp, #8]
    36d0:	ldr	w10, [x8, x9, lsl #2]
    36d4:	cmp	w10, #0x40
    36d8:	b.lt	36e0 <cap_set_flag@@Base+0xd0>  // b.tstop
    36dc:	b	37a8 <cap_set_flag@@Base+0x198>
    36e0:	ldr	x8, [sp, #16]
    36e4:	ldrsw	x9, [sp, #8]
    36e8:	ldr	w10, [x8, x9, lsl #2]
    36ec:	str	w10, [sp, #4]
    36f0:	ldr	w10, [sp, #12]
    36f4:	cmp	w10, #0x1
    36f8:	b.ne	3754 <cap_set_flag@@Base+0x144>  // b.any
    36fc:	ldr	w8, [sp, #4]
    3700:	and	w8, w8, #0x1f
    3704:	mov	w9, #0x1                   	// #1
    3708:	lsl	w8, w9, w8
    370c:	ldur	x10, [x29, #-16]
    3710:	add	x10, x10, #0x8
    3714:	ldr	w9, [sp, #4]
    3718:	asr	w9, w9, #5
    371c:	mov	w0, w9
    3720:	sxtw	x11, w0
    3724:	mov	x12, #0xc                   	// #12
    3728:	mul	x11, x12, x11
    372c:	add	x10, x10, x11
    3730:	ldur	w9, [x29, #-20]
    3734:	mov	w11, w9
    3738:	mov	x12, #0x4                   	// #4
    373c:	mul	x11, x12, x11
    3740:	add	x10, x10, x11
    3744:	ldr	w9, [x10]
    3748:	orr	w8, w9, w8
    374c:	str	w8, [x10]
    3750:	b	37a8 <cap_set_flag@@Base+0x198>
    3754:	ldr	w8, [sp, #4]
    3758:	and	w8, w8, #0x1f
    375c:	mov	w9, #0x1                   	// #1
    3760:	lsl	w8, w9, w8
    3764:	ldur	x10, [x29, #-16]
    3768:	add	x10, x10, #0x8
    376c:	ldr	w9, [sp, #4]
    3770:	asr	w9, w9, #5
    3774:	mov	w0, w9
    3778:	sxtw	x11, w0
    377c:	mov	x12, #0xc                   	// #12
    3780:	mul	x11, x12, x11
    3784:	add	x10, x10, x11
    3788:	ldur	w9, [x29, #-20]
    378c:	mov	w11, w9
    3790:	mov	x12, #0x4                   	// #4
    3794:	mul	x11, x12, x11
    3798:	add	x10, x10, x11
    379c:	ldr	w9, [x10]
    37a0:	bic	w8, w9, w8
    37a4:	str	w8, [x10]
    37a8:	ldr	w8, [sp, #8]
    37ac:	add	w8, w8, #0x1
    37b0:	str	w8, [sp, #8]
    37b4:	b	36a0 <cap_set_flag@@Base+0x90>
    37b8:	stur	wzr, [x29, #-4]
    37bc:	b	37d4 <cap_set_flag@@Base+0x1c4>
    37c0:	bl	1d30 <__errno_location@plt>
    37c4:	mov	w8, #0x16                  	// #22
    37c8:	str	w8, [x0]
    37cc:	mov	w8, #0xffffffff            	// #-1
    37d0:	stur	w8, [x29, #-4]
    37d4:	ldur	w0, [x29, #-4]
    37d8:	ldp	x29, x30, [sp, #48]
    37dc:	add	sp, sp, #0x40
    37e0:	ret

00000000000037e4 <cap_clear@@Base>:
    37e4:	sub	sp, sp, #0x20
    37e8:	stp	x29, x30, [sp, #16]
    37ec:	add	x29, sp, #0x10
    37f0:	str	x0, [sp]
    37f4:	ldr	x8, [sp]
    37f8:	cbz	x8, 382c <cap_clear@@Base+0x48>
    37fc:	ldr	x8, [sp]
    3800:	ldur	w9, [x8, #-4]
    3804:	mov	w10, #0x90d0                	// #37072
    3808:	movk	w10, #0xca, lsl #16
    380c:	cmp	w9, w10
    3810:	b.ne	382c <cap_clear@@Base+0x48>  // b.any
    3814:	ldr	x8, [sp]
    3818:	str	xzr, [x8, #8]
    381c:	str	xzr, [x8, #16]
    3820:	str	xzr, [x8, #24]
    3824:	stur	wzr, [x29, #-4]
    3828:	b	3840 <cap_clear@@Base+0x5c>
    382c:	bl	1d30 <__errno_location@plt>
    3830:	mov	w8, #0x16                  	// #22
    3834:	str	w8, [x0]
    3838:	mov	w8, #0xffffffff            	// #-1
    383c:	stur	w8, [x29, #-4]
    3840:	ldur	w0, [x29, #-4]
    3844:	ldp	x29, x30, [sp, #16]
    3848:	add	sp, sp, #0x20
    384c:	ret

0000000000003850 <cap_clear_flag@@Base>:
    3850:	sub	sp, sp, #0x30
    3854:	stp	x29, x30, [sp, #32]
    3858:	add	x29, sp, #0x20
    385c:	mov	w8, #0x1                   	// #1
    3860:	str	x0, [sp, #16]
    3864:	str	w1, [sp, #12]
    3868:	ldr	w9, [sp, #12]
    386c:	subs	w9, w9, #0x0
    3870:	cmp	w9, #0x2
    3874:	cset	w9, ls  // ls = plast
    3878:	eor	w8, w9, w8
    387c:	tbnz	w8, #0, 38f8 <cap_clear_flag@@Base+0xa8>
    3880:	b	3884 <cap_clear_flag@@Base+0x34>
    3884:	ldr	x8, [sp, #16]
    3888:	cbz	x8, 38f8 <cap_clear_flag@@Base+0xa8>
    388c:	ldr	x8, [sp, #16]
    3890:	ldur	w9, [x8, #-4]
    3894:	mov	w10, #0x90d0                	// #37072
    3898:	movk	w10, #0xca, lsl #16
    389c:	cmp	w9, w10
    38a0:	b.ne	38f8 <cap_clear_flag@@Base+0xa8>  // b.any
    38a4:	str	wzr, [sp, #8]
    38a8:	ldr	w8, [sp, #8]
    38ac:	cmp	w8, #0x2
    38b0:	b.cs	38f0 <cap_clear_flag@@Base+0xa0>  // b.hs, b.nlast
    38b4:	ldr	x8, [sp, #16]
    38b8:	add	x8, x8, #0x8
    38bc:	ldr	w9, [sp, #8]
    38c0:	mov	w10, w9
    38c4:	mov	x11, #0xc                   	// #12
    38c8:	mul	x10, x11, x10
    38cc:	add	x8, x8, x10
    38d0:	ldr	w9, [sp, #12]
    38d4:	mov	w10, w9
    38d8:	mov	w9, wzr
    38dc:	str	w9, [x8, x10, lsl #2]
    38e0:	ldr	w8, [sp, #8]
    38e4:	add	w8, w8, #0x1
    38e8:	str	w8, [sp, #8]
    38ec:	b	38a8 <cap_clear_flag@@Base+0x58>
    38f0:	stur	wzr, [x29, #-4]
    38f4:	b	390c <cap_clear_flag@@Base+0xbc>
    38f8:	bl	1d30 <__errno_location@plt>
    38fc:	mov	w8, #0x16                  	// #22
    3900:	str	w8, [x0]
    3904:	mov	w8, #0xffffffff            	// #-1
    3908:	stur	w8, [x29, #-4]
    390c:	ldur	w0, [x29, #-4]
    3910:	ldp	x29, x30, [sp, #32]
    3914:	add	sp, sp, #0x30
    3918:	ret

000000000000391c <cap_compare@@Base>:
    391c:	sub	sp, sp, #0x30
    3920:	stp	x29, x30, [sp, #32]
    3924:	add	x29, sp, #0x20
    3928:	str	x0, [sp, #16]
    392c:	str	x1, [sp, #8]
    3930:	ldr	x8, [sp, #16]
    3934:	cbz	x8, 3970 <cap_compare@@Base+0x54>
    3938:	ldr	x8, [sp, #16]
    393c:	ldur	w9, [x8, #-4]
    3940:	mov	w10, #0x90d0                	// #37072
    3944:	movk	w10, #0xca, lsl #16
    3948:	cmp	w9, w10
    394c:	b.ne	3970 <cap_compare@@Base+0x54>  // b.any
    3950:	ldr	x8, [sp, #8]
    3954:	cbz	x8, 3970 <cap_compare@@Base+0x54>
    3958:	ldr	x8, [sp, #8]
    395c:	ldur	w9, [x8, #-4]
    3960:	mov	w10, #0x90d0                	// #37072
    3964:	movk	w10, #0xca, lsl #16
    3968:	cmp	w9, w10
    396c:	b.eq	3988 <cap_compare@@Base+0x6c>  // b.none
    3970:	bl	1d30 <__errno_location@plt>
    3974:	mov	w8, #0x16                  	// #22
    3978:	str	w8, [x0]
    397c:	mov	w8, #0xffffffff            	// #-1
    3980:	stur	w8, [x29, #-4]
    3984:	b	3a94 <cap_compare@@Base+0x178>
    3988:	str	wzr, [sp, #4]
    398c:	str	wzr, [sp]
    3990:	ldr	w8, [sp, #4]
    3994:	cmp	w8, #0x2
    3998:	b.cs	3a8c <cap_compare@@Base+0x170>  // b.hs, b.nlast
    399c:	ldr	x8, [sp, #16]
    39a0:	add	x8, x8, #0x8
    39a4:	ldr	w9, [sp, #4]
    39a8:	mov	w10, w9
    39ac:	mov	x11, #0xc                   	// #12
    39b0:	mul	x10, x11, x10
    39b4:	ldr	w9, [x8, x10]
    39b8:	ldr	x8, [sp, #8]
    39bc:	add	x8, x8, #0x8
    39c0:	ldr	w12, [sp, #4]
    39c4:	mov	w10, w12
    39c8:	mul	x10, x11, x10
    39cc:	ldr	w12, [x8, x10]
    39d0:	mov	w13, #0x1                   	// #1
    39d4:	mov	w14, wzr
    39d8:	cmp	w9, w12
    39dc:	csel	w9, w13, w14, ne  // ne = any
    39e0:	ldr	x8, [sp, #16]
    39e4:	add	x8, x8, #0x8
    39e8:	ldr	w12, [sp, #4]
    39ec:	mov	w10, w12
    39f0:	mul	x10, x11, x10
    39f4:	add	x8, x8, x10
    39f8:	ldr	w12, [x8, #8]
    39fc:	ldr	x8, [sp, #8]
    3a00:	add	x8, x8, #0x8
    3a04:	ldr	w13, [sp, #4]
    3a08:	mov	w10, w13
    3a0c:	mul	x10, x11, x10
    3a10:	add	x8, x8, x10
    3a14:	ldr	w13, [x8, #8]
    3a18:	mov	w15, #0x4                   	// #4
    3a1c:	cmp	w12, w13
    3a20:	csel	w12, w15, w14, ne  // ne = any
    3a24:	orr	w9, w9, w12
    3a28:	ldr	x8, [sp, #16]
    3a2c:	add	x8, x8, #0x8
    3a30:	ldr	w12, [sp, #4]
    3a34:	mov	w10, w12
    3a38:	mul	x10, x11, x10
    3a3c:	add	x8, x8, x10
    3a40:	ldr	w12, [x8, #4]
    3a44:	ldr	x8, [sp, #8]
    3a48:	add	x8, x8, #0x8
    3a4c:	ldr	w13, [sp, #4]
    3a50:	mov	w10, w13
    3a54:	mul	x10, x11, x10
    3a58:	add	x8, x8, x10
    3a5c:	ldr	w13, [x8, #4]
    3a60:	mov	w15, #0x2                   	// #2
    3a64:	cmp	w12, w13
    3a68:	csel	w12, w15, w14, ne  // ne = any
    3a6c:	orr	w9, w9, w12
    3a70:	ldr	w12, [sp]
    3a74:	orr	w9, w12, w9
    3a78:	str	w9, [sp]
    3a7c:	ldr	w8, [sp, #4]
    3a80:	add	w8, w8, #0x1
    3a84:	str	w8, [sp, #4]
    3a88:	b	3990 <cap_compare@@Base+0x74>
    3a8c:	ldr	w8, [sp]
    3a90:	stur	w8, [x29, #-4]
    3a94:	ldur	w0, [x29, #-4]
    3a98:	ldp	x29, x30, [sp, #32]
    3a9c:	add	sp, sp, #0x30
    3aa0:	ret

0000000000003aa4 <cap_from_text@@Base>:
    3aa4:	sub	sp, sp, #0x70
    3aa8:	stp	x29, x30, [sp, #96]
    3aac:	add	x29, sp, #0x60
    3ab0:	stur	x0, [x29, #-16]
    3ab4:	ldur	x8, [x29, #-16]
    3ab8:	cbnz	x8, 3ad4 <cap_from_text@@Base+0x30>
    3abc:	bl	1d30 <__errno_location@plt>
    3ac0:	mov	w8, #0x16                  	// #22
    3ac4:	str	w8, [x0]
    3ac8:	mov	x9, xzr
    3acc:	stur	x9, [x29, #-8]
    3ad0:	b	4084 <cap_from_text@@Base+0x5e0>
    3ad4:	bl	1c00 <cap_init@plt>
    3ad8:	stur	x0, [x29, #-24]
    3adc:	cbnz	x0, 3aec <cap_from_text@@Base+0x48>
    3ae0:	mov	x8, xzr
    3ae4:	stur	x8, [x29, #-8]
    3ae8:	b	4084 <cap_from_text@@Base+0x5e0>
    3aec:	ldur	x8, [x29, #-24]
    3af0:	ldr	w9, [x8]
    3af4:	mov	w10, #0x330                 	// #816
    3af8:	movk	w10, #0x1998, lsl #16
    3afc:	cmp	w9, w10
    3b00:	str	w9, [sp, #40]
    3b04:	b.eq	3b3c <cap_from_text@@Base+0x98>  // b.none
    3b08:	b	3b0c <cap_from_text@@Base+0x68>
    3b0c:	mov	w8, #0x1026                	// #4134
    3b10:	movk	w8, #0x2007, lsl #16
    3b14:	ldr	w9, [sp, #40]
    3b18:	cmp	w9, w8
    3b1c:	b.eq	3b48 <cap_from_text@@Base+0xa4>  // b.none
    3b20:	b	3b24 <cap_from_text@@Base+0x80>
    3b24:	mov	w8, #0x522                 	// #1314
    3b28:	movk	w8, #0x2008, lsl #16
    3b2c:	ldr	w9, [sp, #40]
    3b30:	cmp	w9, w8
    3b34:	b.eq	3b54 <cap_from_text@@Base+0xb0>  // b.none
    3b38:	b	3b60 <cap_from_text@@Base+0xbc>
    3b3c:	mov	w8, #0x1                   	// #1
    3b40:	stur	w8, [x29, #-32]
    3b44:	b	3b78 <cap_from_text@@Base+0xd4>
    3b48:	mov	w8, #0x2                   	// #2
    3b4c:	stur	w8, [x29, #-32]
    3b50:	b	3b78 <cap_from_text@@Base+0xd4>
    3b54:	mov	w8, #0x2                   	// #2
    3b58:	stur	w8, [x29, #-32]
    3b5c:	b	3b78 <cap_from_text@@Base+0xd4>
    3b60:	bl	1d30 <__errno_location@plt>
    3b64:	mov	w8, #0x16                  	// #22
    3b68:	str	w8, [x0]
    3b6c:	mov	x9, xzr
    3b70:	stur	x9, [x29, #-8]
    3b74:	b	4084 <cap_from_text@@Base+0x5e0>
    3b78:	str	wzr, [sp, #48]
    3b7c:	str	wzr, [sp, #44]
    3b80:	stur	xzr, [x29, #-40]
    3b84:	bl	1c30 <__ctype_b_loc@plt>
    3b88:	ldr	x8, [x0]
    3b8c:	ldur	x9, [x29, #-16]
    3b90:	ldrb	w10, [x9]
    3b94:	ldrh	w10, [x8, w10, sxtw #1]
    3b98:	and	w10, w10, #0x2000
    3b9c:	cbz	w10, 3bb0 <cap_from_text@@Base+0x10c>
    3ba0:	ldur	x8, [x29, #-16]
    3ba4:	add	x8, x8, #0x1
    3ba8:	stur	x8, [x29, #-16]
    3bac:	b	3b84 <cap_from_text@@Base+0xe0>
    3bb0:	ldur	x8, [x29, #-16]
    3bb4:	ldrb	w9, [x8]
    3bb8:	cbnz	w9, 3bc8 <cap_from_text@@Base+0x124>
    3bbc:	ldur	x8, [x29, #-24]
    3bc0:	stur	x8, [x29, #-8]
    3bc4:	b	4084 <cap_from_text@@Base+0x5e0>
    3bc8:	bl	1c30 <__ctype_b_loc@plt>
    3bcc:	ldr	x8, [x0]
    3bd0:	ldur	x9, [x29, #-16]
    3bd4:	ldrb	w10, [x9]
    3bd8:	ldrh	w10, [x8, w10, sxtw #1]
    3bdc:	and	w10, w10, #0x8
    3be0:	cbnz	w10, 3bf4 <cap_from_text@@Base+0x150>
    3be4:	ldur	x8, [x29, #-16]
    3be8:	ldrb	w9, [x8]
    3bec:	cmp	w9, #0x5f
    3bf0:	b.ne	3ce0 <cap_from_text@@Base+0x23c>  // b.any
    3bf4:	ldur	x0, [x29, #-16]
    3bf8:	adrp	x1, 5000 <cap_get_fd@@Base+0x2e0>
    3bfc:	add	x1, x1, #0x952
    3c00:	bl	4094 <cap_from_text@@Base+0x5f0>
    3c04:	cbz	x0, 3c28 <cap_from_text@@Base+0x184>
    3c08:	ldur	x8, [x29, #-16]
    3c0c:	add	x8, x8, #0x3
    3c10:	stur	x8, [x29, #-16]
    3c14:	ldur	w2, [x29, #-32]
    3c18:	sub	x0, x29, #0x28
    3c1c:	mov	w1, #0xffffffff            	// #-1
    3c20:	bl	4160 <cap_from_text@@Base+0x6bc>
    3c24:	b	3c84 <cap_from_text@@Base+0x1e0>
    3c28:	sub	x0, x29, #0x10
    3c2c:	bl	4230 <cap_from_text@@Base+0x78c>
    3c30:	stur	w0, [x29, #-28]
    3c34:	ldur	w8, [x29, #-28]
    3c38:	mov	w9, #0xffffffff            	// #-1
    3c3c:	cmp	w8, w9
    3c40:	b.ne	3c48 <cap_from_text@@Base+0x1a4>  // b.any
    3c44:	b	4060 <cap_from_text@@Base+0x5bc>
    3c48:	ldur	w8, [x29, #-28]
    3c4c:	and	w8, w8, #0x1f
    3c50:	mov	w9, #0x1                   	// #1
    3c54:	lsl	w8, w9, w8
    3c58:	ldur	w9, [x29, #-28]
    3c5c:	asr	w9, w9, #5
    3c60:	mov	w0, w9
    3c64:	sxtw	x10, w0
    3c68:	mov	x11, #0x4                   	// #4
    3c6c:	mul	x10, x11, x10
    3c70:	sub	x11, x29, #0x28
    3c74:	add	x10, x11, x10
    3c78:	ldr	w9, [x10]
    3c7c:	orr	w8, w9, w8
    3c80:	str	w8, [x10]
    3c84:	ldur	x8, [x29, #-16]
    3c88:	ldrb	w9, [x8]
    3c8c:	cmp	w9, #0x2c
    3c90:	b.eq	3c98 <cap_from_text@@Base+0x1f4>  // b.none
    3c94:	b	3cd4 <cap_from_text@@Base+0x230>
    3c98:	bl	1c30 <__ctype_b_loc@plt>
    3c9c:	ldr	x8, [x0]
    3ca0:	ldur	x9, [x29, #-16]
    3ca4:	add	x10, x9, #0x1
    3ca8:	stur	x10, [x29, #-16]
    3cac:	ldrb	w11, [x9, #1]
    3cb0:	ldrh	w11, [x8, w11, sxtw #1]
    3cb4:	and	w11, w11, #0x8
    3cb8:	cbnz	w11, 3cd0 <cap_from_text@@Base+0x22c>
    3cbc:	ldur	x8, [x29, #-16]
    3cc0:	ldrb	w9, [x8]
    3cc4:	cmp	w9, #0x5f
    3cc8:	b.eq	3cd0 <cap_from_text@@Base+0x22c>  // b.none
    3ccc:	b	4060 <cap_from_text@@Base+0x5bc>
    3cd0:	b	3bf4 <cap_from_text@@Base+0x150>
    3cd4:	mov	w8, #0x1                   	// #1
    3cd8:	str	w8, [sp, #44]
    3cdc:	b	3d14 <cap_from_text@@Base+0x270>
    3ce0:	ldur	x8, [x29, #-16]
    3ce4:	ldrb	w9, [x8]
    3ce8:	cmp	w9, #0x2b
    3cec:	b.eq	3d00 <cap_from_text@@Base+0x25c>  // b.none
    3cf0:	ldur	x8, [x29, #-16]
    3cf4:	ldrb	w9, [x8]
    3cf8:	cmp	w9, #0x2d
    3cfc:	b.ne	3d04 <cap_from_text@@Base+0x260>  // b.any
    3d00:	b	4060 <cap_from_text@@Base+0x5bc>
    3d04:	ldur	w2, [x29, #-32]
    3d08:	sub	x0, x29, #0x28
    3d0c:	mov	w1, #0xffffffff            	// #-1
    3d10:	bl	4160 <cap_from_text@@Base+0x6bc>
    3d14:	ldur	x8, [x29, #-16]
    3d18:	add	x9, x8, #0x1
    3d1c:	stur	x9, [x29, #-16]
    3d20:	ldrb	w10, [x8]
    3d24:	sturb	w10, [x29, #-41]
    3d28:	ldurb	w10, [x29, #-41]
    3d2c:	cmp	w10, #0x3d
    3d30:	b.ne	3d88 <cap_from_text@@Base+0x2e4>  // b.any
    3d34:	ldur	x8, [x29, #-16]
    3d38:	ldrb	w9, [x8]
    3d3c:	cmp	w9, #0x2b
    3d40:	b.eq	3d54 <cap_from_text@@Base+0x2b0>  // b.none
    3d44:	ldur	x8, [x29, #-16]
    3d48:	ldrb	w9, [x8]
    3d4c:	cmp	w9, #0x2d
    3d50:	b.ne	3d88 <cap_from_text@@Base+0x2e4>  // b.any
    3d54:	ldr	w8, [sp, #44]
    3d58:	cbnz	w8, 3d60 <cap_from_text@@Base+0x2bc>
    3d5c:	b	4060 <cap_from_text@@Base+0x5bc>
    3d60:	ldur	x8, [x29, #-16]
    3d64:	add	x9, x8, #0x1
    3d68:	stur	x9, [x29, #-16]
    3d6c:	ldrb	w10, [x8]
    3d70:	mov	w11, #0x4d                  	// #77
    3d74:	mov	w12, #0x50                  	// #80
    3d78:	cmp	w10, #0x2b
    3d7c:	csel	w10, w12, w11, eq  // eq = none
    3d80:	sturb	w10, [x29, #-41]
    3d84:	b	3db0 <cap_from_text@@Base+0x30c>
    3d88:	ldurb	w8, [x29, #-41]
    3d8c:	cmp	w8, #0x2b
    3d90:	b.eq	3db0 <cap_from_text@@Base+0x30c>  // b.none
    3d94:	ldurb	w8, [x29, #-41]
    3d98:	cmp	w8, #0x2d
    3d9c:	b.eq	3db0 <cap_from_text@@Base+0x30c>  // b.none
    3da0:	ldurb	w8, [x29, #-41]
    3da4:	cmp	w8, #0x3d
    3da8:	b.eq	3db0 <cap_from_text@@Base+0x30c>  // b.none
    3dac:	b	4060 <cap_from_text@@Base+0x5bc>
    3db0:	ldur	x8, [x29, #-16]
    3db4:	ldrb	w9, [x8]
    3db8:	cbz	w9, 3e50 <cap_from_text@@Base+0x3ac>
    3dbc:	bl	1c30 <__ctype_b_loc@plt>
    3dc0:	ldr	x8, [x0]
    3dc4:	ldur	x9, [x29, #-16]
    3dc8:	ldrb	w10, [x9]
    3dcc:	ldrh	w10, [x8, w10, sxtw #1]
    3dd0:	and	w10, w10, #0x2000
    3dd4:	cbnz	w10, 3e50 <cap_from_text@@Base+0x3ac>
    3dd8:	ldur	x8, [x29, #-16]
    3ddc:	add	x9, x8, #0x1
    3de0:	stur	x9, [x29, #-16]
    3de4:	ldrb	w10, [x8]
    3de8:	cmp	w10, #0x65
    3dec:	str	w10, [sp, #36]
    3df0:	b.eq	3e18 <cap_from_text@@Base+0x374>  // b.none
    3df4:	b	3df8 <cap_from_text@@Base+0x354>
    3df8:	ldr	w8, [sp, #36]
    3dfc:	cmp	w8, #0x69
    3e00:	b.eq	3e28 <cap_from_text@@Base+0x384>  // b.none
    3e04:	b	3e08 <cap_from_text@@Base+0x364>
    3e08:	ldr	w8, [sp, #36]
    3e0c:	cmp	w8, #0x70
    3e10:	b.eq	3e38 <cap_from_text@@Base+0x394>  // b.none
    3e14:	b	3e48 <cap_from_text@@Base+0x3a4>
    3e18:	ldr	w8, [sp, #48]
    3e1c:	orr	w8, w8, #0x1
    3e20:	str	w8, [sp, #48]
    3e24:	b	3e4c <cap_from_text@@Base+0x3a8>
    3e28:	ldr	w8, [sp, #48]
    3e2c:	orr	w8, w8, #0x4
    3e30:	str	w8, [sp, #48]
    3e34:	b	3e4c <cap_from_text@@Base+0x3a8>
    3e38:	ldr	w8, [sp, #48]
    3e3c:	orr	w8, w8, #0x2
    3e40:	str	w8, [sp, #48]
    3e44:	b	3e4c <cap_from_text@@Base+0x3a8>
    3e48:	b	4060 <cap_from_text@@Base+0x5bc>
    3e4c:	b	3e60 <cap_from_text@@Base+0x3bc>
    3e50:	ldurb	w8, [x29, #-41]
    3e54:	cmp	w8, #0x3d
    3e58:	b.eq	3e60 <cap_from_text@@Base+0x3bc>  // b.none
    3e5c:	b	4060 <cap_from_text@@Base+0x5bc>
    3e60:	ldurb	w8, [x29, #-41]
    3e64:	subs	w8, w8, #0x2b
    3e68:	mov	w9, w8
    3e6c:	ubfx	x9, x9, #0, #32
    3e70:	cmp	x9, #0x25
    3e74:	str	x9, [sp, #24]
    3e78:	b.hi	3fb8 <cap_from_text@@Base+0x514>  // b.pmore
    3e7c:	adrp	x8, 5000 <cap_get_fd@@Base+0x2e0>
    3e80:	add	x8, x8, #0x68c
    3e84:	ldr	x11, [sp, #24]
    3e88:	ldrsw	x10, [x8, x11, lsl #2]
    3e8c:	add	x9, x8, x10
    3e90:	br	x9
    3e94:	ldur	x0, [x29, #-24]
    3e98:	ldur	w3, [x29, #-32]
    3e9c:	sub	x8, x29, #0x28
    3ea0:	mov	x1, x8
    3ea4:	mov	w9, wzr
    3ea8:	mov	w2, w9
    3eac:	str	x8, [sp, #16]
    3eb0:	bl	43a4 <cap_from_text@@Base+0x900>
    3eb4:	ldur	x0, [x29, #-24]
    3eb8:	ldur	w3, [x29, #-32]
    3ebc:	ldr	x1, [sp, #16]
    3ec0:	mov	w2, #0x1                   	// #1
    3ec4:	bl	43a4 <cap_from_text@@Base+0x900>
    3ec8:	ldur	x0, [x29, #-24]
    3ecc:	ldur	w3, [x29, #-32]
    3ed0:	ldr	x1, [sp, #16]
    3ed4:	mov	w2, #0x2                   	// #2
    3ed8:	bl	43a4 <cap_from_text@@Base+0x900>
    3edc:	ldurb	w9, [x29, #-41]
    3ee0:	cmp	w9, #0x4d
    3ee4:	b.ne	3eec <cap_from_text@@Base+0x448>  // b.any
    3ee8:	b	3f54 <cap_from_text@@Base+0x4b0>
    3eec:	ldr	w8, [sp, #48]
    3ef0:	and	w8, w8, #0x1
    3ef4:	cbz	w8, 3f10 <cap_from_text@@Base+0x46c>
    3ef8:	ldur	x0, [x29, #-24]
    3efc:	ldur	w3, [x29, #-32]
    3f00:	sub	x1, x29, #0x28
    3f04:	mov	w8, wzr
    3f08:	mov	w2, w8
    3f0c:	bl	4420 <cap_from_text@@Base+0x97c>
    3f10:	ldr	w8, [sp, #48]
    3f14:	and	w8, w8, #0x2
    3f18:	cbz	w8, 3f30 <cap_from_text@@Base+0x48c>
    3f1c:	ldur	x0, [x29, #-24]
    3f20:	ldur	w3, [x29, #-32]
    3f24:	sub	x1, x29, #0x28
    3f28:	mov	w2, #0x1                   	// #1
    3f2c:	bl	4420 <cap_from_text@@Base+0x97c>
    3f30:	ldr	w8, [sp, #48]
    3f34:	and	w8, w8, #0x4
    3f38:	cbz	w8, 3f50 <cap_from_text@@Base+0x4ac>
    3f3c:	ldur	x0, [x29, #-24]
    3f40:	ldur	w3, [x29, #-32]
    3f44:	sub	x1, x29, #0x28
    3f48:	mov	w2, #0x2                   	// #2
    3f4c:	bl	4420 <cap_from_text@@Base+0x97c>
    3f50:	b	3fb8 <cap_from_text@@Base+0x514>
    3f54:	ldr	w8, [sp, #48]
    3f58:	and	w8, w8, #0x1
    3f5c:	cbz	w8, 3f78 <cap_from_text@@Base+0x4d4>
    3f60:	ldur	x0, [x29, #-24]
    3f64:	ldur	w3, [x29, #-32]
    3f68:	sub	x1, x29, #0x28
    3f6c:	mov	w8, wzr
    3f70:	mov	w2, w8
    3f74:	bl	43a4 <cap_from_text@@Base+0x900>
    3f78:	ldr	w8, [sp, #48]
    3f7c:	and	w8, w8, #0x2
    3f80:	cbz	w8, 3f98 <cap_from_text@@Base+0x4f4>
    3f84:	ldur	x0, [x29, #-24]
    3f88:	ldur	w3, [x29, #-32]
    3f8c:	sub	x1, x29, #0x28
    3f90:	mov	w2, #0x1                   	// #1
    3f94:	bl	43a4 <cap_from_text@@Base+0x900>
    3f98:	ldr	w8, [sp, #48]
    3f9c:	and	w8, w8, #0x4
    3fa0:	cbz	w8, 3fb8 <cap_from_text@@Base+0x514>
    3fa4:	ldur	x0, [x29, #-24]
    3fa8:	ldur	w3, [x29, #-32]
    3fac:	sub	x1, x29, #0x28
    3fb0:	mov	w2, #0x2                   	// #2
    3fb4:	bl	43a4 <cap_from_text@@Base+0x900>
    3fb8:	ldur	x8, [x29, #-16]
    3fbc:	ldrb	w9, [x8]
    3fc0:	cmp	w9, #0x2b
    3fc4:	b.eq	3fd8 <cap_from_text@@Base+0x534>  // b.none
    3fc8:	ldur	x8, [x29, #-16]
    3fcc:	ldrb	w9, [x8]
    3fd0:	cmp	w9, #0x2d
    3fd4:	b.ne	401c <cap_from_text@@Base+0x578>  // b.any
    3fd8:	ldr	w8, [sp, #44]
    3fdc:	cbnz	w8, 3fe4 <cap_from_text@@Base+0x540>
    3fe0:	b	4060 <cap_from_text@@Base+0x5bc>
    3fe4:	str	wzr, [sp, #48]
    3fe8:	ldur	x8, [x29, #-16]
    3fec:	add	x9, x8, #0x1
    3ff0:	stur	x9, [x29, #-16]
    3ff4:	ldrb	w10, [x8]
    3ff8:	sturb	w10, [x29, #-41]
    3ffc:	bl	1c30 <__ctype_b_loc@plt>
    4000:	ldr	x8, [x0]
    4004:	ldur	x9, [x29, #-16]
    4008:	ldrb	w10, [x9]
    400c:	ldrh	w10, [x8, w10, sxtw #1]
    4010:	and	w10, w10, #0x400
    4014:	cbnz	w10, 401c <cap_from_text@@Base+0x578>
    4018:	b	4060 <cap_from_text@@Base+0x5bc>
    401c:	ldur	x8, [x29, #-16]
    4020:	ldrb	w9, [x8]
    4024:	mov	w10, #0x0                   	// #0
    4028:	str	w10, [sp, #12]
    402c:	cbz	w9, 4054 <cap_from_text@@Base+0x5b0>
    4030:	bl	1c30 <__ctype_b_loc@plt>
    4034:	ldr	x8, [x0]
    4038:	ldur	x9, [x29, #-16]
    403c:	ldrb	w10, [x9]
    4040:	ldrh	w10, [x8, w10, sxtw #1]
    4044:	tst	w10, #0x2000
    4048:	cset	w10, ne  // ne = any
    404c:	eor	w10, w10, #0x1
    4050:	str	w10, [sp, #12]
    4054:	ldr	w8, [sp, #12]
    4058:	tbnz	w8, #0, 3db0 <cap_from_text@@Base+0x30c>
    405c:	b	3b78 <cap_from_text@@Base+0xd4>
    4060:	ldur	x0, [x29, #-24]
    4064:	bl	1ce0 <cap_free@plt>
    4068:	mov	x8, xzr
    406c:	stur	x8, [x29, #-24]
    4070:	bl	1d30 <__errno_location@plt>
    4074:	mov	w9, #0x16                  	// #22
    4078:	str	w9, [x0]
    407c:	ldur	x8, [x29, #-24]
    4080:	stur	x8, [x29, #-8]
    4084:	ldur	x0, [x29, #-8]
    4088:	ldp	x29, x30, [sp, #96]
    408c:	add	sp, sp, #0x70
    4090:	ret
    4094:	sub	sp, sp, #0x30
    4098:	stp	x29, x30, [sp, #32]
    409c:	add	x29, sp, #0x20
    40a0:	str	x0, [sp, #16]
    40a4:	str	x1, [sp, #8]
    40a8:	ldr	x8, [sp, #8]
    40ac:	ldrb	w9, [x8]
    40b0:	mov	w10, #0x0                   	// #0
    40b4:	str	w10, [sp, #4]
    40b8:	cbz	w9, 40dc <cap_from_text@@Base+0x638>
    40bc:	ldr	x8, [sp, #16]
    40c0:	ldrb	w0, [x8]
    40c4:	bl	1d40 <tolower@plt>
    40c8:	ldr	x8, [sp, #8]
    40cc:	ldrb	w9, [x8]
    40d0:	cmp	w0, w9
    40d4:	cset	w9, eq  // eq = none
    40d8:	str	w9, [sp, #4]
    40dc:	ldr	w8, [sp, #4]
    40e0:	tbnz	w8, #0, 40e8 <cap_from_text@@Base+0x644>
    40e4:	b	4104 <cap_from_text@@Base+0x660>
    40e8:	ldr	x8, [sp, #16]
    40ec:	add	x8, x8, #0x1
    40f0:	str	x8, [sp, #16]
    40f4:	ldr	x8, [sp, #8]
    40f8:	add	x8, x8, #0x1
    40fc:	str	x8, [sp, #8]
    4100:	b	40a8 <cap_from_text@@Base+0x604>
    4104:	ldr	x8, [sp, #8]
    4108:	ldrb	w9, [x8]
    410c:	cbnz	w9, 413c <cap_from_text@@Base+0x698>
    4110:	bl	1c30 <__ctype_b_loc@plt>
    4114:	ldr	x8, [x0]
    4118:	ldr	x9, [sp, #16]
    411c:	ldrb	w10, [x9]
    4120:	ldrh	w10, [x8, w10, sxtw #1]
    4124:	and	w10, w10, #0x8
    4128:	cbnz	w10, 413c <cap_from_text@@Base+0x698>
    412c:	ldr	x8, [sp, #16]
    4130:	ldrb	w9, [x8]
    4134:	cmp	w9, #0x5f
    4138:	b.ne	4148 <cap_from_text@@Base+0x6a4>  // b.any
    413c:	mov	x8, xzr
    4140:	stur	x8, [x29, #-8]
    4144:	b	4150 <cap_from_text@@Base+0x6ac>
    4148:	ldr	x8, [sp, #16]
    414c:	stur	x8, [x29, #-8]
    4150:	ldur	x0, [x29, #-8]
    4154:	ldp	x29, x30, [sp, #32]
    4158:	add	sp, sp, #0x30
    415c:	ret
    4160:	sub	sp, sp, #0x30
    4164:	stp	x29, x30, [sp, #32]
    4168:	add	x29, sp, #0x20
    416c:	stur	x0, [x29, #-8]
    4170:	stur	w1, [x29, #-12]
    4174:	str	w2, [sp, #16]
    4178:	bl	1ae0 <cap_max_bits@plt>
    417c:	str	w0, [sp, #8]
    4180:	ldr	w8, [sp, #16]
    4184:	str	w8, [sp, #12]
    4188:	ldr	w8, [sp, #12]
    418c:	subs	w9, w8, #0x1
    4190:	str	w9, [sp, #12]
    4194:	cbz	w8, 4224 <cap_from_text@@Base+0x780>
    4198:	ldr	w8, [sp, #12]
    419c:	mov	w9, #0x20                  	// #32
    41a0:	mul	w8, w9, w8
    41a4:	str	w8, [sp, #4]
    41a8:	str	wzr, [sp]
    41ac:	ldr	w8, [sp, #8]
    41b0:	ldr	w9, [sp, #4]
    41b4:	add	w9, w9, #0x20
    41b8:	cmp	w8, w9
    41bc:	b.cc	41cc <cap_from_text@@Base+0x728>  // b.lo, b.ul, b.last
    41c0:	mov	w8, #0xffffffff            	// #-1
    41c4:	str	w8, [sp]
    41c8:	b	4204 <cap_from_text@@Base+0x760>
    41cc:	ldr	w8, [sp, #8]
    41d0:	ldr	w9, [sp, #4]
    41d4:	cmp	w8, w9
    41d8:	b.ls	4204 <cap_from_text@@Base+0x760>  // b.plast
    41dc:	ldr	w8, [sp, #8]
    41e0:	mov	w9, #0x20                  	// #32
    41e4:	sdiv	w10, w8, w9
    41e8:	mul	w9, w10, w9
    41ec:	subs	w8, w8, w9
    41f0:	mov	x11, #0x1                   	// #1
    41f4:	mov	w12, w8
    41f8:	lsl	x11, x11, x12
    41fc:	subs	x11, x11, #0x1
    4200:	str	w11, [sp]
    4204:	ldur	w8, [x29, #-12]
    4208:	ldr	w9, [sp]
    420c:	and	w8, w8, w9
    4210:	ldur	x10, [x29, #-8]
    4214:	ldr	w9, [sp, #12]
    4218:	mov	w11, w9
    421c:	str	w8, [x10, x11, lsl #2]
    4220:	b	4188 <cap_from_text@@Base+0x6e4>
    4224:	ldp	x29, x30, [sp, #32]
    4228:	add	sp, sp, #0x30
    422c:	ret
    4230:	sub	sp, sp, #0x50
    4234:	stp	x29, x30, [sp, #64]
    4238:	add	x29, sp, #0x40
    423c:	stur	x0, [x29, #-16]
    4240:	ldur	x8, [x29, #-16]
    4244:	ldr	x8, [x8]
    4248:	stur	x8, [x29, #-24]
    424c:	bl	1c30 <__ctype_b_loc@plt>
    4250:	ldr	x8, [x0]
    4254:	ldur	x9, [x29, #-24]
    4258:	ldrb	w10, [x9]
    425c:	ldrh	w10, [x8, w10, sxtw #1]
    4260:	and	w10, w10, #0x800
    4264:	cbz	w10, 42b0 <cap_from_text@@Base+0x80c>
    4268:	sub	x1, x29, #0x18
    426c:	ldur	x0, [x29, #-24]
    4270:	mov	w8, wzr
    4274:	mov	w2, w8
    4278:	bl	1a90 <strtoul@plt>
    427c:	str	x0, [sp, #32]
    4280:	ldr	x9, [sp, #32]
    4284:	cmp	x9, #0x40
    4288:	b.cc	4298 <cap_from_text@@Base+0x7f4>  // b.lo, b.ul, b.last
    428c:	mov	w8, #0xffffffff            	// #-1
    4290:	stur	w8, [x29, #-4]
    4294:	b	4394 <cap_from_text@@Base+0x8f0>
    4298:	ldur	x8, [x29, #-24]
    429c:	ldur	x9, [x29, #-16]
    42a0:	str	x8, [x9]
    42a4:	ldr	x8, [sp, #32]
    42a8:	stur	w8, [x29, #-4]
    42ac:	b	4394 <cap_from_text@@Base+0x8f0>
    42b0:	str	wzr, [sp, #24]
    42b4:	ldur	x8, [x29, #-24]
    42b8:	ldr	w9, [sp, #24]
    42bc:	mov	w10, w9
    42c0:	ldrb	w9, [x8, x10]
    42c4:	str	w9, [sp, #28]
    42c8:	cbz	w9, 4304 <cap_from_text@@Base+0x860>
    42cc:	bl	1c30 <__ctype_b_loc@plt>
    42d0:	ldr	x8, [x0]
    42d4:	ldrsw	x9, [sp, #28]
    42d8:	ldrh	w10, [x8, x9, lsl #1]
    42dc:	and	w10, w10, #0x400
    42e0:	cbnz	w10, 42f4 <cap_from_text@@Base+0x850>
    42e4:	ldr	w8, [sp, #28]
    42e8:	cmp	w8, #0x5f
    42ec:	b.eq	42f4 <cap_from_text@@Base+0x850>  // b.none
    42f0:	b	4304 <cap_from_text@@Base+0x860>
    42f4:	ldr	w8, [sp, #24]
    42f8:	add	w8, w8, #0x1
    42fc:	str	w8, [sp, #24]
    4300:	b	42b4 <cap_from_text@@Base+0x810>
    4304:	bl	1ae0 <cap_max_bits@plt>
    4308:	str	w0, [sp, #12]
    430c:	ldr	w8, [sp, #12]
    4310:	subs	w9, w8, #0x1
    4314:	str	w9, [sp, #12]
    4318:	cbz	w8, 438c <cap_from_text@@Base+0x8e8>
    431c:	ldr	w8, [sp, #12]
    4320:	mov	w9, w8
    4324:	mov	x10, #0x8                   	// #8
    4328:	mul	x9, x10, x9
    432c:	adrp	x10, 15000 <cap_set_nsowner@@Base+0xf9e0>
    4330:	ldr	x10, [x10, #4032]
    4334:	add	x9, x10, x9
    4338:	ldr	x9, [x9]
    433c:	cbz	x9, 4388 <cap_from_text@@Base+0x8e4>
    4340:	ldur	x0, [x29, #-24]
    4344:	ldr	w8, [sp, #12]
    4348:	mov	w9, w8
    434c:	mov	x10, #0x8                   	// #8
    4350:	mul	x9, x10, x9
    4354:	adrp	x10, 15000 <cap_set_nsowner@@Base+0xf9e0>
    4358:	ldr	x10, [x10, #4032]
    435c:	add	x9, x10, x9
    4360:	ldr	x1, [x9]
    4364:	bl	4094 <cap_from_text@@Base+0x5f0>
    4368:	str	x0, [sp, #16]
    436c:	cbz	x0, 4388 <cap_from_text@@Base+0x8e4>
    4370:	ldr	x8, [sp, #16]
    4374:	ldur	x9, [x29, #-16]
    4378:	str	x8, [x9]
    437c:	ldr	w10, [sp, #12]
    4380:	stur	w10, [x29, #-4]
    4384:	b	4394 <cap_from_text@@Base+0x8f0>
    4388:	b	430c <cap_from_text@@Base+0x868>
    438c:	mov	w8, #0xffffffff            	// #-1
    4390:	stur	w8, [x29, #-4]
    4394:	ldur	w0, [x29, #-4]
    4398:	ldp	x29, x30, [sp, #64]
    439c:	add	sp, sp, #0x50
    43a0:	ret
    43a4:	sub	sp, sp, #0x20
    43a8:	str	x0, [sp, #24]
    43ac:	str	x1, [sp, #16]
    43b0:	str	w2, [sp, #12]
    43b4:	str	w3, [sp, #8]
    43b8:	ldr	w8, [sp, #8]
    43bc:	str	w8, [sp, #4]
    43c0:	ldr	w8, [sp, #4]
    43c4:	subs	w9, w8, #0x1
    43c8:	str	w9, [sp, #4]
    43cc:	cbz	w8, 4418 <cap_from_text@@Base+0x974>
    43d0:	ldr	x8, [sp, #16]
    43d4:	ldrsw	x9, [sp, #4]
    43d8:	mov	x10, #0x4                   	// #4
    43dc:	ldr	w11, [x8, x9, lsl #2]
    43e0:	ldr	x8, [sp, #24]
    43e4:	add	x8, x8, #0x8
    43e8:	ldrsw	x9, [sp, #4]
    43ec:	mov	x12, #0xc                   	// #12
    43f0:	mul	x9, x12, x9
    43f4:	add	x8, x8, x9
    43f8:	ldr	w13, [sp, #12]
    43fc:	mov	w9, w13
    4400:	mul	x9, x10, x9
    4404:	add	x8, x8, x9
    4408:	ldr	w13, [x8]
    440c:	bic	w11, w13, w11
    4410:	str	w11, [x8]
    4414:	b	43c0 <cap_from_text@@Base+0x91c>
    4418:	add	sp, sp, #0x20
    441c:	ret
    4420:	sub	sp, sp, #0x20
    4424:	str	x0, [sp, #24]
    4428:	str	x1, [sp, #16]
    442c:	str	w2, [sp, #12]
    4430:	str	w3, [sp, #8]
    4434:	ldr	w8, [sp, #8]
    4438:	str	w8, [sp, #4]
    443c:	ldr	w8, [sp, #4]
    4440:	subs	w9, w8, #0x1
    4444:	str	w9, [sp, #4]
    4448:	cbz	w8, 4494 <cap_from_text@@Base+0x9f0>
    444c:	ldr	x8, [sp, #16]
    4450:	ldrsw	x9, [sp, #4]
    4454:	mov	x10, #0x4                   	// #4
    4458:	ldr	w11, [x8, x9, lsl #2]
    445c:	ldr	x8, [sp, #24]
    4460:	add	x8, x8, #0x8
    4464:	ldrsw	x9, [sp, #4]
    4468:	mov	x12, #0xc                   	// #12
    446c:	mul	x9, x12, x9
    4470:	add	x8, x8, x9
    4474:	ldr	w13, [sp, #12]
    4478:	mov	w9, w13
    447c:	mul	x9, x10, x9
    4480:	add	x8, x8, x9
    4484:	ldr	w13, [x8]
    4488:	orr	w11, w13, w11
    448c:	str	w11, [x8]
    4490:	b	443c <cap_from_text@@Base+0x998>
    4494:	add	sp, sp, #0x20
    4498:	ret

000000000000449c <cap_from_name@@Base>:
    449c:	sub	sp, sp, #0x30
    44a0:	stp	x29, x30, [sp, #32]
    44a4:	add	x29, sp, #0x20
    44a8:	sub	x8, x29, #0x8
    44ac:	stur	x0, [x29, #-8]
    44b0:	str	x1, [sp, #16]
    44b4:	mov	x0, x8
    44b8:	bl	4230 <cap_from_text@@Base+0x78c>
    44bc:	str	w0, [sp, #12]
    44c0:	cmp	w0, #0x0
    44c4:	cset	w9, lt  // lt = tstop
    44c8:	tbnz	w9, #0, 44e0 <cap_from_name@@Base+0x44>
    44cc:	ldr	x8, [sp, #16]
    44d0:	cbz	x8, 44e0 <cap_from_name@@Base+0x44>
    44d4:	ldr	w8, [sp, #12]
    44d8:	ldr	x9, [sp, #16]
    44dc:	str	w8, [x9]
    44e0:	ldr	w8, [sp, #12]
    44e4:	mov	w9, wzr
    44e8:	cmp	w8, #0x0
    44ec:	cset	w8, lt  // lt = tstop
    44f0:	and	w8, w8, #0x1
    44f4:	subs	w0, w9, w8
    44f8:	ldp	x29, x30, [sp, #32]
    44fc:	add	sp, sp, #0x30
    4500:	ret

0000000000004504 <cap_to_name@@Base>:
    4504:	sub	sp, sp, #0x30
    4508:	stp	x29, x30, [sp, #32]
    450c:	add	x29, sp, #0x20
    4510:	stur	w0, [x29, #-12]
    4514:	ldur	w8, [x29, #-12]
    4518:	cmp	w8, #0x0
    451c:	cset	w8, lt  // lt = tstop
    4520:	tbnz	w8, #0, 4530 <cap_to_name@@Base+0x2c>
    4524:	ldur	w8, [x29, #-12]
    4528:	cmp	w8, #0x26
    452c:	b.lt	4568 <cap_to_name@@Base+0x64>  // b.tstop
    4530:	ldur	w2, [x29, #-12]
    4534:	add	x0, sp, #0x8
    4538:	adrp	x1, 5000 <cap_get_fd@@Base+0x2e0>
    453c:	add	x1, x1, #0x956
    4540:	bl	1b30 <asprintf@plt>
    4544:	ldr	x8, [sp, #8]
    4548:	mov	x0, x8
    454c:	bl	1af0 <_libcap_strdup@plt>
    4550:	str	x0, [sp]
    4554:	ldr	x0, [sp, #8]
    4558:	bl	1c70 <free@plt>
    455c:	ldr	x8, [sp]
    4560:	stur	x8, [x29, #-8]
    4564:	b	458c <cap_to_name@@Base+0x88>
    4568:	ldursw	x8, [x29, #-12]
    456c:	mov	x9, #0x8                   	// #8
    4570:	mul	x8, x9, x8
    4574:	adrp	x9, 15000 <cap_set_nsowner@@Base+0xf9e0>
    4578:	ldr	x9, [x9, #4032]
    457c:	add	x8, x9, x8
    4580:	ldr	x0, [x8]
    4584:	bl	1af0 <_libcap_strdup@plt>
    4588:	stur	x0, [x29, #-8]
    458c:	ldur	x0, [x29, #-8]
    4590:	ldp	x29, x30, [sp, #32]
    4594:	add	sp, sp, #0x30
    4598:	ret

000000000000459c <cap_to_text@@Base>:
    459c:	stp	x29, x30, [sp, #-32]!
    45a0:	str	x28, [sp, #16]
    45a4:	mov	x29, sp
    45a8:	sub	sp, sp, #0x640
    45ac:	adrp	x8, 5000 <cap_get_fd@@Base+0x2e0>
    45b0:	add	x8, x8, #0x84d
    45b4:	adrp	x9, 5000 <cap_get_fd@@Base+0x2e0>
    45b8:	add	x9, x9, #0x966
    45bc:	adrp	x10, 5000 <cap_get_fd@@Base+0x2e0>
    45c0:	add	x10, x10, #0x961
    45c4:	adrp	x11, 5000 <cap_get_fd@@Base+0x2e0>
    45c8:	add	x11, x11, #0x8f6
    45cc:	stur	x0, [x29, #-16]
    45d0:	stur	x1, [x29, #-24]
    45d4:	ldur	x12, [x29, #-16]
    45d8:	str	x8, [sp, #40]
    45dc:	str	x9, [sp, #32]
    45e0:	str	x10, [sp, #24]
    45e4:	str	x11, [sp, #16]
    45e8:	cbz	x12, 4604 <cap_to_text@@Base+0x68>
    45ec:	ldur	x8, [x29, #-16]
    45f0:	ldur	w9, [x8, #-4]
    45f4:	mov	w10, #0x90d0                	// #37072
    45f8:	movk	w10, #0xca, lsl #16
    45fc:	cmp	w9, w10
    4600:	b.eq	461c <cap_to_text@@Base+0x80>  // b.none
    4604:	bl	1d30 <__errno_location@plt>
    4608:	mov	w8, #0x16                  	// #22
    460c:	str	w8, [x0]
    4610:	mov	x9, xzr
    4614:	stur	x9, [x29, #-8]
    4618:	b	4b7c <cap_to_text@@Base+0x5e0>
    461c:	add	x0, sp, #0x50
    4620:	mov	w8, wzr
    4624:	mov	w1, w8
    4628:	mov	x2, #0x20                  	// #32
    462c:	bl	1ba0 <memset@plt>
    4630:	bl	1ae0 <cap_max_bits@plt>
    4634:	str	w0, [sp, #64]
    4638:	str	wzr, [sp, #68]
    463c:	ldr	w8, [sp, #68]
    4640:	ldr	w9, [sp, #64]
    4644:	cmp	w8, w9
    4648:	b.cs	468c <cap_to_text@@Base+0xf0>  // b.hs, b.nlast
    464c:	ldur	x0, [x29, #-16]
    4650:	ldr	w1, [sp, #68]
    4654:	bl	4b90 <cap_to_text@@Base+0x5f4>
    4658:	mov	w2, w0
    465c:	sxtw	x8, w2
    4660:	mov	x9, #0x4                   	// #4
    4664:	mul	x8, x9, x8
    4668:	add	x9, sp, #0x50
    466c:	add	x8, x9, x8
    4670:	ldr	w10, [x8]
    4674:	add	w10, w10, #0x1
    4678:	str	w10, [x8]
    467c:	ldr	w8, [sp, #68]
    4680:	add	w8, w8, #0x1
    4684:	str	w8, [sp, #68]
    4688:	b	463c <cap_to_text@@Base+0xa0>
    468c:	mov	w8, #0x7                   	// #7
    4690:	str	w8, [sp, #72]
    4694:	str	w8, [sp, #76]
    4698:	ldr	w8, [sp, #72]
    469c:	subs	w9, w8, #0x1
    46a0:	str	w9, [sp, #72]
    46a4:	cbz	w8, 46d0 <cap_to_text@@Base+0x134>
    46a8:	ldrsw	x8, [sp, #72]
    46ac:	add	x9, sp, #0x50
    46b0:	ldr	w10, [x9, x8, lsl #2]
    46b4:	ldrsw	x8, [sp, #76]
    46b8:	ldr	w11, [x9, x8, lsl #2]
    46bc:	cmp	w10, w11
    46c0:	b.lt	46cc <cap_to_text@@Base+0x130>  // b.tstop
    46c4:	ldr	w8, [sp, #72]
    46c8:	str	w8, [sp, #76]
    46cc:	b	4698 <cap_to_text@@Base+0xfc>
    46d0:	ldr	w8, [sp, #76]
    46d4:	tst	w8, #0x1
    46d8:	ldr	x9, [sp, #40]
    46dc:	ldr	x10, [sp, #32]
    46e0:	csel	x2, x9, x10, ne  // ne = any
    46e4:	ldr	w8, [sp, #76]
    46e8:	tst	w8, #0x4
    46ec:	ldr	x11, [sp, #24]
    46f0:	csel	x3, x11, x10, ne  // ne = any
    46f4:	ldr	w8, [sp, #76]
    46f8:	tst	w8, #0x2
    46fc:	ldr	x12, [sp, #16]
    4700:	csel	x4, x12, x10, ne  // ne = any
    4704:	add	x13, sp, #0x84
    4708:	mov	x0, x13
    470c:	adrp	x1, 5000 <cap_get_fd@@Base+0x2e0>
    4710:	add	x1, x1, #0x959
    4714:	str	x13, [sp, #8]
    4718:	bl	1b20 <sprintf@plt>
    471c:	mov	w1, w0
    4720:	sxtw	x9, w1
    4724:	ldr	x10, [sp, #8]
    4728:	add	x9, x10, x9
    472c:	str	x9, [sp, #120]
    4730:	mov	w8, #0x8                   	// #8
    4734:	str	w8, [sp, #72]
    4738:	ldr	w8, [sp, #72]
    473c:	subs	w9, w8, #0x1
    4740:	str	w9, [sp, #72]
    4744:	cbz	w8, 4958 <cap_to_text@@Base+0x3bc>
    4748:	ldr	w8, [sp, #72]
    474c:	ldr	w9, [sp, #76]
    4750:	cmp	w8, w9
    4754:	b.eq	4768 <cap_to_text@@Base+0x1cc>  // b.none
    4758:	ldrsw	x8, [sp, #72]
    475c:	add	x9, sp, #0x50
    4760:	ldr	w10, [x9, x8, lsl #2]
    4764:	cbnz	w10, 476c <cap_to_text@@Base+0x1d0>
    4768:	b	4738 <cap_to_text@@Base+0x19c>
    476c:	ldr	x8, [sp, #120]
    4770:	add	x9, x8, #0x1
    4774:	str	x9, [sp, #120]
    4778:	mov	w10, #0x20                  	// #32
    477c:	strb	w10, [x8]
    4780:	str	wzr, [sp, #68]
    4784:	ldr	w8, [sp, #68]
    4788:	ldr	w9, [sp, #64]
    478c:	cmp	w8, w9
    4790:	b.cs	4838 <cap_to_text@@Base+0x29c>  // b.hs, b.nlast
    4794:	ldur	x0, [x29, #-16]
    4798:	ldr	w1, [sp, #68]
    479c:	bl	4b90 <cap_to_text@@Base+0x5f4>
    47a0:	ldr	w8, [sp, #72]
    47a4:	cmp	w0, w8
    47a8:	b.ne	4828 <cap_to_text@@Base+0x28c>  // b.any
    47ac:	ldr	w0, [sp, #68]
    47b0:	bl	1d70 <cap_to_name@plt>
    47b4:	str	x0, [sp, #56]
    47b8:	ldr	x0, [sp, #56]
    47bc:	bl	1aa0 <strlen@plt>
    47c0:	ldr	x8, [sp, #120]
    47c4:	add	x9, sp, #0x84
    47c8:	subs	x8, x8, x9
    47cc:	add	x8, x0, x8
    47d0:	cmp	x8, #0x540
    47d4:	b.ls	47f8 <cap_to_text@@Base+0x25c>  // b.plast
    47d8:	ldr	x0, [sp, #56]
    47dc:	bl	1ce0 <cap_free@plt>
    47e0:	bl	1d30 <__errno_location@plt>
    47e4:	mov	w8, #0x22                  	// #34
    47e8:	str	w8, [x0]
    47ec:	mov	x9, xzr
    47f0:	stur	x9, [x29, #-8]
    47f4:	b	4b7c <cap_to_text@@Base+0x5e0>
    47f8:	ldr	x0, [sp, #120]
    47fc:	ldr	x2, [sp, #56]
    4800:	adrp	x1, 5000 <cap_get_fd@@Base+0x2e0>
    4804:	add	x1, x1, #0x963
    4808:	bl	1b20 <sprintf@plt>
    480c:	ldr	x8, [sp, #120]
    4810:	mov	w1, w0
    4814:	sxtw	x9, w1
    4818:	add	x8, x8, x9
    481c:	str	x8, [sp, #120]
    4820:	ldr	x0, [sp, #56]
    4824:	bl	1ce0 <cap_free@plt>
    4828:	ldr	w8, [sp, #68]
    482c:	add	w8, w8, #0x1
    4830:	str	w8, [sp, #68]
    4834:	b	4784 <cap_to_text@@Base+0x1e8>
    4838:	ldr	x8, [sp, #120]
    483c:	mov	x9, #0xffffffffffffffff    	// #-1
    4840:	add	x8, x8, x9
    4844:	str	x8, [sp, #120]
    4848:	ldr	w10, [sp, #72]
    484c:	ldr	w11, [sp, #76]
    4850:	bic	w10, w10, w11
    4854:	str	w10, [sp, #68]
    4858:	ldr	w10, [sp, #68]
    485c:	cbz	w10, 48b8 <cap_to_text@@Base+0x31c>
    4860:	ldr	x0, [sp, #120]
    4864:	ldr	w8, [sp, #68]
    4868:	tst	w8, #0x1
    486c:	ldr	x9, [sp, #40]
    4870:	ldr	x10, [sp, #32]
    4874:	csel	x2, x9, x10, ne  // ne = any
    4878:	ldr	w8, [sp, #68]
    487c:	tst	w8, #0x4
    4880:	ldr	x11, [sp, #24]
    4884:	csel	x3, x11, x10, ne  // ne = any
    4888:	ldr	w8, [sp, #68]
    488c:	tst	w8, #0x2
    4890:	ldr	x12, [sp, #16]
    4894:	csel	x4, x12, x10, ne  // ne = any
    4898:	adrp	x1, 5000 <cap_get_fd@@Base+0x2e0>
    489c:	add	x1, x1, #0x967
    48a0:	bl	1b20 <sprintf@plt>
    48a4:	ldr	x9, [sp, #120]
    48a8:	mov	w1, w0
    48ac:	sxtw	x10, w1
    48b0:	add	x9, x9, x10
    48b4:	str	x9, [sp, #120]
    48b8:	ldr	w8, [sp, #72]
    48bc:	ldr	w9, [sp, #76]
    48c0:	bic	w8, w9, w8
    48c4:	str	w8, [sp, #68]
    48c8:	ldr	w8, [sp, #68]
    48cc:	cbz	w8, 4928 <cap_to_text@@Base+0x38c>
    48d0:	ldr	x0, [sp, #120]
    48d4:	ldr	w8, [sp, #68]
    48d8:	tst	w8, #0x1
    48dc:	ldr	x9, [sp, #40]
    48e0:	ldr	x10, [sp, #32]
    48e4:	csel	x2, x9, x10, ne  // ne = any
    48e8:	ldr	w8, [sp, #68]
    48ec:	tst	w8, #0x4
    48f0:	ldr	x11, [sp, #24]
    48f4:	csel	x3, x11, x10, ne  // ne = any
    48f8:	ldr	w8, [sp, #68]
    48fc:	tst	w8, #0x2
    4900:	ldr	x12, [sp, #16]
    4904:	csel	x4, x12, x10, ne  // ne = any
    4908:	adrp	x1, 5000 <cap_get_fd@@Base+0x2e0>
    490c:	add	x1, x1, #0x96f
    4910:	bl	1b20 <sprintf@plt>
    4914:	ldr	x9, [sp, #120]
    4918:	mov	w1, w0
    491c:	sxtw	x10, w1
    4920:	add	x9, x9, x10
    4924:	str	x9, [sp, #120]
    4928:	ldr	x8, [sp, #120]
    492c:	add	x9, sp, #0x84
    4930:	subs	x8, x8, x9
    4934:	cmp	x8, #0x540
    4938:	b.le	4954 <cap_to_text@@Base+0x3b8>
    493c:	bl	1d30 <__errno_location@plt>
    4940:	mov	w8, #0x22                  	// #34
    4944:	str	w8, [x0]
    4948:	mov	x9, xzr
    494c:	stur	x9, [x29, #-8]
    4950:	b	4b7c <cap_to_text@@Base+0x5e0>
    4954:	b	4738 <cap_to_text@@Base+0x19c>
    4958:	add	x0, sp, #0x50
    495c:	mov	w8, wzr
    4960:	mov	w1, w8
    4964:	mov	x2, #0x20                  	// #32
    4968:	bl	1ba0 <memset@plt>
    496c:	ldr	w8, [sp, #64]
    4970:	str	w8, [sp, #68]
    4974:	ldr	w8, [sp, #68]
    4978:	cmp	w8, #0x40
    497c:	b.cs	49c0 <cap_to_text@@Base+0x424>  // b.hs, b.nlast
    4980:	ldur	x0, [x29, #-16]
    4984:	ldr	w1, [sp, #68]
    4988:	bl	4b90 <cap_to_text@@Base+0x5f4>
    498c:	mov	w2, w0
    4990:	sxtw	x8, w2
    4994:	mov	x9, #0x4                   	// #4
    4998:	mul	x8, x9, x8
    499c:	add	x9, sp, #0x50
    49a0:	add	x8, x9, x8
    49a4:	ldr	w10, [x8]
    49a8:	add	w10, w10, #0x1
    49ac:	str	w10, [x8]
    49b0:	ldr	w8, [sp, #68]
    49b4:	add	w8, w8, #0x1
    49b8:	str	w8, [sp, #68]
    49bc:	b	4974 <cap_to_text@@Base+0x3d8>
    49c0:	mov	w8, #0x8                   	// #8
    49c4:	str	w8, [sp, #72]
    49c8:	ldr	w8, [sp, #72]
    49cc:	subs	w9, w8, #0x1
    49d0:	str	w9, [sp, #72]
    49d4:	cmp	w8, #0x1
    49d8:	b.le	4b54 <cap_to_text@@Base+0x5b8>
    49dc:	ldrsw	x8, [sp, #72]
    49e0:	add	x9, sp, #0x50
    49e4:	ldr	w10, [x9, x8, lsl #2]
    49e8:	cbnz	w10, 49f0 <cap_to_text@@Base+0x454>
    49ec:	b	49c8 <cap_to_text@@Base+0x42c>
    49f0:	ldr	x8, [sp, #120]
    49f4:	add	x9, x8, #0x1
    49f8:	str	x9, [sp, #120]
    49fc:	mov	w10, #0x20                  	// #32
    4a00:	strb	w10, [x8]
    4a04:	ldr	w10, [sp, #64]
    4a08:	str	w10, [sp, #68]
    4a0c:	ldr	w8, [sp, #68]
    4a10:	cmp	w8, #0x40
    4a14:	b.cs	4abc <cap_to_text@@Base+0x520>  // b.hs, b.nlast
    4a18:	ldur	x0, [x29, #-16]
    4a1c:	ldr	w1, [sp, #68]
    4a20:	bl	4b90 <cap_to_text@@Base+0x5f4>
    4a24:	ldr	w8, [sp, #72]
    4a28:	cmp	w0, w8
    4a2c:	b.ne	4aac <cap_to_text@@Base+0x510>  // b.any
    4a30:	ldr	w0, [sp, #68]
    4a34:	bl	1d70 <cap_to_name@plt>
    4a38:	str	x0, [sp, #48]
    4a3c:	ldr	x0, [sp, #48]
    4a40:	bl	1aa0 <strlen@plt>
    4a44:	ldr	x8, [sp, #120]
    4a48:	add	x9, sp, #0x84
    4a4c:	subs	x8, x8, x9
    4a50:	add	x8, x0, x8
    4a54:	cmp	x8, #0x540
    4a58:	b.ls	4a7c <cap_to_text@@Base+0x4e0>  // b.plast
    4a5c:	ldr	x0, [sp, #48]
    4a60:	bl	1ce0 <cap_free@plt>
    4a64:	bl	1d30 <__errno_location@plt>
    4a68:	mov	w8, #0x22                  	// #34
    4a6c:	str	w8, [x0]
    4a70:	mov	x9, xzr
    4a74:	stur	x9, [x29, #-8]
    4a78:	b	4b7c <cap_to_text@@Base+0x5e0>
    4a7c:	ldr	x0, [sp, #120]
    4a80:	ldr	x2, [sp, #48]
    4a84:	adrp	x1, 5000 <cap_get_fd@@Base+0x2e0>
    4a88:	add	x1, x1, #0x963
    4a8c:	bl	1b20 <sprintf@plt>
    4a90:	ldr	x8, [sp, #120]
    4a94:	mov	w1, w0
    4a98:	sxtw	x9, w1
    4a9c:	add	x8, x8, x9
    4aa0:	str	x8, [sp, #120]
    4aa4:	ldr	x0, [sp, #48]
    4aa8:	bl	1ce0 <cap_free@plt>
    4aac:	ldr	w8, [sp, #68]
    4ab0:	add	w8, w8, #0x1
    4ab4:	str	w8, [sp, #68]
    4ab8:	b	4a0c <cap_to_text@@Base+0x470>
    4abc:	ldr	x8, [sp, #120]
    4ac0:	mov	x9, #0xffffffffffffffff    	// #-1
    4ac4:	add	x8, x8, x9
    4ac8:	str	x8, [sp, #120]
    4acc:	ldr	x0, [sp, #120]
    4ad0:	ldr	w10, [sp, #72]
    4ad4:	tst	w10, #0x1
    4ad8:	ldr	x8, [sp, #40]
    4adc:	ldr	x9, [sp, #32]
    4ae0:	csel	x2, x8, x9, ne  // ne = any
    4ae4:	ldr	w10, [sp, #72]
    4ae8:	tst	w10, #0x4
    4aec:	ldr	x11, [sp, #24]
    4af0:	csel	x3, x11, x9, ne  // ne = any
    4af4:	ldr	w10, [sp, #72]
    4af8:	tst	w10, #0x2
    4afc:	ldr	x12, [sp, #16]
    4b00:	csel	x4, x12, x9, ne  // ne = any
    4b04:	adrp	x1, 5000 <cap_get_fd@@Base+0x2e0>
    4b08:	add	x1, x1, #0x967
    4b0c:	bl	1b20 <sprintf@plt>
    4b10:	ldr	x8, [sp, #120]
    4b14:	mov	w1, w0
    4b18:	sxtw	x9, w1
    4b1c:	add	x8, x8, x9
    4b20:	str	x8, [sp, #120]
    4b24:	ldr	x8, [sp, #120]
    4b28:	add	x9, sp, #0x84
    4b2c:	subs	x8, x8, x9
    4b30:	cmp	x8, #0x540
    4b34:	b.le	4b50 <cap_to_text@@Base+0x5b4>
    4b38:	bl	1d30 <__errno_location@plt>
    4b3c:	mov	w8, #0x22                  	// #34
    4b40:	str	w8, [x0]
    4b44:	mov	x9, xzr
    4b48:	stur	x9, [x29, #-8]
    4b4c:	b	4b7c <cap_to_text@@Base+0x5e0>
    4b50:	b	49c8 <cap_to_text@@Base+0x42c>
    4b54:	ldur	x8, [x29, #-24]
    4b58:	cbz	x8, 4b70 <cap_to_text@@Base+0x5d4>
    4b5c:	ldr	x8, [sp, #120]
    4b60:	add	x9, sp, #0x84
    4b64:	subs	x8, x8, x9
    4b68:	ldur	x9, [x29, #-24]
    4b6c:	str	x8, [x9]
    4b70:	add	x0, sp, #0x84
    4b74:	bl	1af0 <_libcap_strdup@plt>
    4b78:	stur	x0, [x29, #-8]
    4b7c:	ldur	x0, [x29, #-8]
    4b80:	add	sp, sp, #0x640
    4b84:	ldr	x28, [sp, #16]
    4b88:	ldp	x29, x30, [sp], #32
    4b8c:	ret
    4b90:	sub	sp, sp, #0x10
    4b94:	mov	w8, #0x1                   	// #1
    4b98:	str	x0, [sp, #8]
    4b9c:	str	w1, [sp, #4]
    4ba0:	str	wzr, [sp]
    4ba4:	ldr	x9, [sp, #8]
    4ba8:	add	x9, x9, #0x8
    4bac:	ldr	w10, [sp, #4]
    4bb0:	asr	w10, w10, #5
    4bb4:	mov	w0, w10
    4bb8:	sxtw	x11, w0
    4bbc:	mov	x12, #0xc                   	// #12
    4bc0:	mul	x11, x12, x11
    4bc4:	ldr	w10, [x9, x11]
    4bc8:	ldr	w13, [sp, #4]
    4bcc:	and	w13, w13, #0x1f
    4bd0:	lsl	w8, w8, w13
    4bd4:	and	w8, w10, w8
    4bd8:	cbz	w8, 4be8 <cap_to_text@@Base+0x64c>
    4bdc:	ldr	w8, [sp]
    4be0:	orr	w8, w8, #0x1
    4be4:	str	w8, [sp]
    4be8:	ldr	x8, [sp, #8]
    4bec:	add	x8, x8, #0x8
    4bf0:	ldr	w9, [sp, #4]
    4bf4:	asr	w9, w9, #5
    4bf8:	mov	w0, w9
    4bfc:	sxtw	x10, w0
    4c00:	mov	x11, #0xc                   	// #12
    4c04:	mul	x10, x11, x10
    4c08:	add	x8, x8, x10
    4c0c:	ldr	w9, [x8, #4]
    4c10:	ldr	w12, [sp, #4]
    4c14:	and	w12, w12, #0x1f
    4c18:	mov	w13, #0x1                   	// #1
    4c1c:	lsl	w12, w13, w12
    4c20:	and	w9, w9, w12
    4c24:	cbz	w9, 4c34 <cap_to_text@@Base+0x698>
    4c28:	ldr	w8, [sp]
    4c2c:	orr	w8, w8, #0x2
    4c30:	str	w8, [sp]
    4c34:	ldr	x8, [sp, #8]
    4c38:	add	x8, x8, #0x8
    4c3c:	ldr	w9, [sp, #4]
    4c40:	asr	w9, w9, #5
    4c44:	mov	w0, w9
    4c48:	sxtw	x10, w0
    4c4c:	mov	x11, #0xc                   	// #12
    4c50:	mul	x10, x11, x10
    4c54:	add	x8, x8, x10
    4c58:	ldr	w9, [x8, #8]
    4c5c:	ldr	w12, [sp, #4]
    4c60:	and	w12, w12, #0x1f
    4c64:	mov	w13, #0x1                   	// #1
    4c68:	lsl	w12, w13, w12
    4c6c:	and	w9, w9, w12
    4c70:	cbz	w9, 4c80 <cap_to_text@@Base+0x6e4>
    4c74:	ldr	w8, [sp]
    4c78:	orr	w8, w8, #0x4
    4c7c:	str	w8, [sp]
    4c80:	ldr	w0, [sp]
    4c84:	add	sp, sp, #0x10
    4c88:	ret

0000000000004c8c <cap_mode_name@@Base>:
    4c8c:	sub	sp, sp, #0x20
    4c90:	str	w0, [sp, #20]
    4c94:	ldr	w8, [sp, #20]
    4c98:	subs	w8, w8, #0x0
    4c9c:	mov	w9, w8
    4ca0:	ubfx	x9, x9, #0, #32
    4ca4:	cmp	x9, #0x3
    4ca8:	str	x9, [sp, #8]
    4cac:	b.hi	4d08 <cap_mode_name@@Base+0x7c>  // b.pmore
    4cb0:	adrp	x8, 5000 <cap_get_fd@@Base+0x2e0>
    4cb4:	add	x8, x8, #0x724
    4cb8:	ldr	x11, [sp, #8]
    4cbc:	ldrsw	x10, [x8, x11, lsl #2]
    4cc0:	add	x9, x8, x10
    4cc4:	br	x9
    4cc8:	adrp	x8, 5000 <cap_get_fd@@Base+0x2e0>
    4ccc:	add	x8, x8, #0x977
    4cd0:	str	x8, [sp, #24]
    4cd4:	b	4d14 <cap_mode_name@@Base+0x88>
    4cd8:	adrp	x8, 5000 <cap_get_fd@@Base+0x2e0>
    4cdc:	add	x8, x8, #0x97e
    4ce0:	str	x8, [sp, #24]
    4ce4:	b	4d14 <cap_mode_name@@Base+0x88>
    4ce8:	adrp	x8, 5000 <cap_get_fd@@Base+0x2e0>
    4cec:	add	x8, x8, #0x98a
    4cf0:	str	x8, [sp, #24]
    4cf4:	b	4d14 <cap_mode_name@@Base+0x88>
    4cf8:	adrp	x8, 5000 <cap_get_fd@@Base+0x2e0>
    4cfc:	add	x8, x8, #0x991
    4d00:	str	x8, [sp, #24]
    4d04:	b	4d14 <cap_mode_name@@Base+0x88>
    4d08:	adrp	x8, 5000 <cap_get_fd@@Base+0x2e0>
    4d0c:	add	x8, x8, #0x99b
    4d10:	str	x8, [sp, #24]
    4d14:	ldr	x0, [sp, #24]
    4d18:	add	sp, sp, #0x20
    4d1c:	ret

0000000000004d20 <cap_get_fd@@Base>:
    4d20:	sub	sp, sp, #0x40
    4d24:	stp	x29, x30, [sp, #48]
    4d28:	add	x29, sp, #0x30
    4d2c:	stur	w0, [x29, #-4]
    4d30:	bl	1c00 <cap_init@plt>
    4d34:	stur	x0, [x29, #-16]
    4d38:	ldur	x8, [x29, #-16]
    4d3c:	cbz	x8, 4d90 <cap_get_fd@@Base+0x70>
    4d40:	ldur	w0, [x29, #-4]
    4d44:	adrp	x1, 5000 <cap_get_fd@@Base+0x2e0>
    4d48:	add	x1, x1, #0x9a3
    4d4c:	add	x2, sp, #0x8
    4d50:	mov	x3, #0x18                  	// #24
    4d54:	bl	1c90 <fgetxattr@plt>
    4d58:	str	w0, [sp, #4]
    4d5c:	ldrsw	x8, [sp, #4]
    4d60:	cmp	x8, #0x4
    4d64:	b.ge	4d7c <cap_get_fd@@Base+0x5c>  // b.tcont
    4d68:	ldur	x0, [x29, #-16]
    4d6c:	bl	1ce0 <cap_free@plt>
    4d70:	mov	x8, xzr
    4d74:	stur	x8, [x29, #-16]
    4d78:	b	4d90 <cap_get_fd@@Base+0x70>
    4d7c:	ldur	x1, [x29, #-16]
    4d80:	ldr	w2, [sp, #4]
    4d84:	add	x0, sp, #0x8
    4d88:	bl	4da0 <cap_get_fd@@Base+0x80>
    4d8c:	stur	x0, [x29, #-16]
    4d90:	ldur	x0, [x29, #-16]
    4d94:	ldp	x29, x30, [sp, #48]
    4d98:	add	sp, sp, #0x40
    4d9c:	ret
    4da0:	sub	sp, sp, #0x40
    4da4:	stp	x29, x30, [sp, #48]
    4da8:	add	x29, sp, #0x30
    4dac:	mov	w8, #0x1000000             	// #16777216
    4db0:	stur	x0, [x29, #-16]
    4db4:	str	x1, [sp, #24]
    4db8:	str	w2, [sp, #20]
    4dbc:	ldur	x9, [x29, #-16]
    4dc0:	ldr	w10, [x9]
    4dc4:	str	w10, [sp, #16]
    4dc8:	ldr	w10, [sp, #16]
    4dcc:	and	w10, w10, #0xff000000
    4dd0:	cmp	w10, w8
    4dd4:	str	w10, [sp, #4]
    4dd8:	b.eq	4e08 <cap_get_fd@@Base+0xe8>  // b.none
    4ddc:	b	4de0 <cap_get_fd@@Base+0xc0>
    4de0:	mov	w8, #0x2000000             	// #33554432
    4de4:	ldr	w9, [sp, #4]
    4de8:	cmp	w9, w8
    4dec:	b.eq	4e20 <cap_get_fd@@Base+0x100>  // b.none
    4df0:	b	4df4 <cap_get_fd@@Base+0xd4>
    4df4:	mov	w8, #0x3000000             	// #50331648
    4df8:	ldr	w9, [sp, #4]
    4dfc:	cmp	w9, w8
    4e00:	b.eq	4e38 <cap_get_fd@@Base+0x118>  // b.none
    4e04:	b	4e60 <cap_get_fd@@Base+0x140>
    4e08:	mov	w8, #0x1                   	// #1
    4e0c:	str	w8, [sp, #12]
    4e10:	ldrsw	x9, [sp, #20]
    4e14:	subs	x9, x9, #0xc
    4e18:	str	w9, [sp, #20]
    4e1c:	b	4e7c <cap_get_fd@@Base+0x15c>
    4e20:	mov	w8, #0x2                   	// #2
    4e24:	str	w8, [sp, #12]
    4e28:	ldrsw	x9, [sp, #20]
    4e2c:	subs	x9, x9, #0x14
    4e30:	str	w9, [sp, #20]
    4e34:	b	4e7c <cap_get_fd@@Base+0x15c>
    4e38:	mov	w8, #0x2                   	// #2
    4e3c:	str	w8, [sp, #12]
    4e40:	ldrsw	x9, [sp, #20]
    4e44:	subs	x9, x9, #0x18
    4e48:	str	w9, [sp, #20]
    4e4c:	ldur	x10, [x29, #-16]
    4e50:	ldr	w8, [x10, #20]
    4e54:	ldr	x10, [sp, #24]
    4e58:	str	w8, [x10, #32]
    4e5c:	b	4e7c <cap_get_fd@@Base+0x15c>
    4e60:	ldr	x0, [sp, #24]
    4e64:	bl	1ce0 <cap_free@plt>
    4e68:	mov	x8, xzr
    4e6c:	str	x8, [sp, #24]
    4e70:	ldr	x8, [sp, #24]
    4e74:	stur	x8, [x29, #-8]
    4e78:	b	5018 <cap_get_fd@@Base+0x2f8>
    4e7c:	ldr	w8, [sp, #20]
    4e80:	cbz	w8, 4ea0 <cap_get_fd@@Base+0x180>
    4e84:	ldr	x0, [sp, #24]
    4e88:	bl	1ce0 <cap_free@plt>
    4e8c:	mov	x8, xzr
    4e90:	str	x8, [sp, #24]
    4e94:	ldr	x8, [sp, #24]
    4e98:	stur	x8, [x29, #-8]
    4e9c:	b	5018 <cap_get_fd@@Base+0x2f8>
    4ea0:	str	wzr, [sp, #8]
    4ea4:	ldr	w8, [sp, #8]
    4ea8:	ldr	w9, [sp, #12]
    4eac:	cmp	w8, w9
    4eb0:	b.cs	4f9c <cap_get_fd@@Base+0x27c>  // b.hs, b.nlast
    4eb4:	ldur	x8, [x29, #-16]
    4eb8:	add	x8, x8, #0x4
    4ebc:	ldr	w9, [sp, #8]
    4ec0:	mov	w10, w9
    4ec4:	mov	x11, #0x8                   	// #8
    4ec8:	mul	x10, x11, x10
    4ecc:	add	x8, x8, x10
    4ed0:	ldr	w9, [x8, #4]
    4ed4:	ldr	x8, [sp, #24]
    4ed8:	add	x8, x8, #0x8
    4edc:	ldr	w12, [sp, #8]
    4ee0:	mov	w10, w12
    4ee4:	mov	x13, #0xc                   	// #12
    4ee8:	mul	x10, x13, x10
    4eec:	add	x8, x8, x10
    4ef0:	str	w9, [x8, #8]
    4ef4:	ldur	x8, [x29, #-16]
    4ef8:	add	x8, x8, #0x4
    4efc:	ldr	w9, [sp, #8]
    4f00:	mov	w10, w9
    4f04:	mul	x10, x11, x10
    4f08:	ldr	w9, [x8, x10]
    4f0c:	ldr	x8, [sp, #24]
    4f10:	add	x8, x8, #0x8
    4f14:	ldr	w12, [sp, #8]
    4f18:	mov	w10, w12
    4f1c:	mul	x10, x13, x10
    4f20:	add	x8, x8, x10
    4f24:	str	w9, [x8, #4]
    4f28:	ldr	w9, [sp, #16]
    4f2c:	and	w9, w9, #0x1
    4f30:	cbz	w9, 4f8c <cap_get_fd@@Base+0x26c>
    4f34:	ldr	x8, [sp, #24]
    4f38:	add	x8, x8, #0x8
    4f3c:	ldr	w9, [sp, #8]
    4f40:	mov	w10, w9
    4f44:	mov	x11, #0xc                   	// #12
    4f48:	mul	x10, x11, x10
    4f4c:	add	x8, x8, x10
    4f50:	ldr	w9, [x8, #8]
    4f54:	ldr	x8, [sp, #24]
    4f58:	add	x8, x8, #0x8
    4f5c:	ldr	w12, [sp, #8]
    4f60:	mov	w10, w12
    4f64:	mul	x10, x11, x10
    4f68:	add	x8, x8, x10
    4f6c:	ldr	w12, [x8, #4]
    4f70:	orr	w9, w9, w12
    4f74:	ldr	x8, [sp, #24]
    4f78:	add	x8, x8, #0x8
    4f7c:	ldr	w12, [sp, #8]
    4f80:	mov	w10, w12
    4f84:	mul	x10, x11, x10
    4f88:	str	w9, [x8, x10]
    4f8c:	ldr	w8, [sp, #8]
    4f90:	add	w8, w8, #0x1
    4f94:	str	w8, [sp, #8]
    4f98:	b	4ea4 <cap_get_fd@@Base+0x184>
    4f9c:	ldr	w8, [sp, #8]
    4fa0:	cmp	w8, #0x2
    4fa4:	b.cs	5010 <cap_get_fd@@Base+0x2f0>  // b.hs, b.nlast
    4fa8:	ldr	x8, [sp, #24]
    4fac:	add	x8, x8, #0x8
    4fb0:	ldr	w9, [sp, #8]
    4fb4:	mov	w10, w9
    4fb8:	mov	x11, #0xc                   	// #12
    4fbc:	mul	x10, x11, x10
    4fc0:	mov	w9, wzr
    4fc4:	str	w9, [x8, x10]
    4fc8:	ldr	x8, [sp, #24]
    4fcc:	add	x8, x8, #0x8
    4fd0:	ldr	w9, [sp, #8]
    4fd4:	mov	w10, w9
    4fd8:	mul	x10, x11, x10
    4fdc:	add	x8, x8, x10
    4fe0:	str	wzr, [x8, #4]
    4fe4:	ldr	x8, [sp, #24]
    4fe8:	add	x8, x8, #0x8
    4fec:	ldr	w9, [sp, #8]
    4ff0:	mov	w10, w9
    4ff4:	mul	x10, x11, x10
    4ff8:	add	x8, x8, x10
    4ffc:	str	wzr, [x8, #8]
    5000:	ldr	w9, [sp, #8]
    5004:	add	w9, w9, #0x1
    5008:	str	w9, [sp, #8]
    500c:	b	4f9c <cap_get_fd@@Base+0x27c>
    5010:	ldr	x8, [sp, #24]
    5014:	stur	x8, [x29, #-8]
    5018:	ldur	x0, [x29, #-8]
    501c:	ldp	x29, x30, [sp, #48]
    5020:	add	sp, sp, #0x40
    5024:	ret

0000000000005028 <cap_get_file@@Base>:
    5028:	sub	sp, sp, #0x40
    502c:	stp	x29, x30, [sp, #48]
    5030:	add	x29, sp, #0x30
    5034:	stur	x0, [x29, #-8]
    5038:	bl	1c00 <cap_init@plt>
    503c:	stur	x0, [x29, #-16]
    5040:	ldur	x8, [x29, #-16]
    5044:	cbz	x8, 5098 <cap_get_file@@Base+0x70>
    5048:	ldur	x0, [x29, #-8]
    504c:	adrp	x1, 5000 <cap_get_fd@@Base+0x2e0>
    5050:	add	x1, x1, #0x9a3
    5054:	add	x2, sp, #0x8
    5058:	mov	x3, #0x18                  	// #24
    505c:	bl	1c10 <getxattr@plt>
    5060:	str	w0, [sp, #4]
    5064:	ldrsw	x8, [sp, #4]
    5068:	cmp	x8, #0x4
    506c:	b.ge	5084 <cap_get_file@@Base+0x5c>  // b.tcont
    5070:	ldur	x0, [x29, #-16]
    5074:	bl	1ce0 <cap_free@plt>
    5078:	mov	x8, xzr
    507c:	stur	x8, [x29, #-16]
    5080:	b	5098 <cap_get_file@@Base+0x70>
    5084:	ldur	x1, [x29, #-16]
    5088:	ldr	w2, [sp, #4]
    508c:	add	x0, sp, #0x8
    5090:	bl	4da0 <cap_get_fd@@Base+0x80>
    5094:	stur	x0, [x29, #-16]
    5098:	ldur	x0, [x29, #-16]
    509c:	ldp	x29, x30, [sp, #48]
    50a0:	add	sp, sp, #0x40
    50a4:	ret

00000000000050a8 <cap_get_nsowner@@Base>:
    50a8:	sub	sp, sp, #0x10
    50ac:	str	x0, [sp, #8]
    50b0:	ldr	x8, [sp, #8]
    50b4:	ldr	w0, [x8, #32]
    50b8:	add	sp, sp, #0x10
    50bc:	ret

00000000000050c0 <cap_set_fd@@Base>:
    50c0:	sub	sp, sp, #0xc0
    50c4:	stp	x29, x30, [sp, #176]
    50c8:	add	x29, sp, #0xb0
    50cc:	mov	x8, sp
    50d0:	stur	w0, [x29, #-8]
    50d4:	stur	x1, [x29, #-16]
    50d8:	ldur	w0, [x29, #-8]
    50dc:	mov	x1, x8
    50e0:	bl	5648 <cap_set_nsowner@@Base+0x28>
    50e4:	cbz	w0, 50f4 <cap_set_fd@@Base+0x34>
    50e8:	mov	w8, #0xffffffff            	// #-1
    50ec:	stur	w8, [x29, #-4]
    50f0:	b	5190 <cap_set_fd@@Base+0xd0>
    50f4:	ldr	w8, [sp, #16]
    50f8:	and	w8, w8, #0xf000
    50fc:	cmp	w8, #0xa, lsl #12
    5100:	b.eq	5114 <cap_set_fd@@Base+0x54>  // b.none
    5104:	ldr	w8, [sp, #16]
    5108:	and	w8, w8, #0xf000
    510c:	cmp	w8, #0x8, lsl #12
    5110:	b.eq	512c <cap_set_fd@@Base+0x6c>  // b.none
    5114:	bl	1d30 <__errno_location@plt>
    5118:	mov	w8, #0x16                  	// #22
    511c:	str	w8, [x0]
    5120:	mov	w8, #0xffffffff            	// #-1
    5124:	stur	w8, [x29, #-4]
    5128:	b	5190 <cap_set_fd@@Base+0xd0>
    512c:	ldur	x8, [x29, #-16]
    5130:	cbnz	x8, 514c <cap_set_fd@@Base+0x8c>
    5134:	ldur	w0, [x29, #-8]
    5138:	adrp	x1, 5000 <cap_get_fd@@Base+0x2e0>
    513c:	add	x1, x1, #0x9a3
    5140:	bl	1be0 <fremovexattr@plt>
    5144:	stur	w0, [x29, #-4]
    5148:	b	5190 <cap_set_fd@@Base+0xd0>
    514c:	ldur	x1, [x29, #-16]
    5150:	sub	x0, x29, #0x28
    5154:	sub	x2, x29, #0x2c
    5158:	bl	51a0 <cap_set_fd@@Base+0xe0>
    515c:	cbz	w0, 516c <cap_set_fd@@Base+0xac>
    5160:	mov	w8, #0xffffffff            	// #-1
    5164:	stur	w8, [x29, #-4]
    5168:	b	5190 <cap_set_fd@@Base+0xd0>
    516c:	ldur	w0, [x29, #-8]
    5170:	ldursw	x3, [x29, #-44]
    5174:	adrp	x1, 5000 <cap_get_fd@@Base+0x2e0>
    5178:	add	x1, x1, #0x9a3
    517c:	sub	x2, x29, #0x28
    5180:	mov	w8, wzr
    5184:	mov	w4, w8
    5188:	bl	1cc0 <fsetxattr@plt>
    518c:	stur	w0, [x29, #-4]
    5190:	ldur	w0, [x29, #-4]
    5194:	ldp	x29, x30, [sp, #176]
    5198:	add	sp, sp, #0xc0
    519c:	ret
    51a0:	sub	sp, sp, #0x50
    51a4:	stp	x29, x30, [sp, #64]
    51a8:	add	x29, sp, #0x40
    51ac:	stur	x0, [x29, #-16]
    51b0:	stur	x1, [x29, #-24]
    51b4:	str	x2, [sp, #32]
    51b8:	ldur	x8, [x29, #-24]
    51bc:	cbz	x8, 51d8 <cap_set_fd@@Base+0x118>
    51c0:	ldur	x8, [x29, #-24]
    51c4:	ldur	w9, [x8, #-4]
    51c8:	mov	w10, #0x90d0                	// #37072
    51cc:	movk	w10, #0xca, lsl #16
    51d0:	cmp	w9, w10
    51d4:	b.eq	51f0 <cap_set_fd@@Base+0x130>  // b.none
    51d8:	bl	1d30 <__errno_location@plt>
    51dc:	mov	w8, #0x16                  	// #22
    51e0:	str	w8, [x0]
    51e4:	mov	w8, #0xffffffff            	// #-1
    51e8:	stur	w8, [x29, #-4]
    51ec:	b	5530 <cap_set_fd@@Base+0x470>
    51f0:	ldur	x8, [x29, #-24]
    51f4:	ldr	w9, [x8]
    51f8:	mov	w10, #0x330                 	// #816
    51fc:	movk	w10, #0x1998, lsl #16
    5200:	cmp	w9, w10
    5204:	str	w9, [sp, #12]
    5208:	b.eq	5240 <cap_set_fd@@Base+0x180>  // b.none
    520c:	b	5210 <cap_set_fd@@Base+0x150>
    5210:	mov	w8, #0x1026                	// #4134
    5214:	movk	w8, #0x2007, lsl #16
    5218:	ldr	w9, [sp, #12]
    521c:	cmp	w9, w8
    5220:	b.eq	5260 <cap_set_fd@@Base+0x1a0>  // b.none
    5224:	b	5228 <cap_set_fd@@Base+0x168>
    5228:	mov	w8, #0x522                 	// #1314
    522c:	movk	w8, #0x2008, lsl #16
    5230:	ldr	w9, [sp, #12]
    5234:	cmp	w9, w8
    5238:	b.eq	5260 <cap_set_fd@@Base+0x1a0>  // b.none
    523c:	b	5280 <cap_set_fd@@Base+0x1c0>
    5240:	mov	w8, #0x1000000             	// #16777216
    5244:	str	w8, [sp, #24]
    5248:	mov	w8, #0x1                   	// #1
    524c:	str	w8, [sp, #20]
    5250:	ldr	x9, [sp, #32]
    5254:	mov	w8, #0xc                   	// #12
    5258:	str	w8, [x9]
    525c:	b	5298 <cap_set_fd@@Base+0x1d8>
    5260:	mov	w8, #0x2000000             	// #33554432
    5264:	str	w8, [sp, #24]
    5268:	mov	w8, #0x2                   	// #2
    526c:	str	w8, [sp, #20]
    5270:	ldr	x9, [sp, #32]
    5274:	mov	w8, #0x14                  	// #20
    5278:	str	w8, [x9]
    527c:	b	5298 <cap_set_fd@@Base+0x1d8>
    5280:	bl	1d30 <__errno_location@plt>
    5284:	mov	w8, #0x16                  	// #22
    5288:	str	w8, [x0]
    528c:	mov	w8, #0xffffffff            	// #-1
    5290:	stur	w8, [x29, #-4]
    5294:	b	5530 <cap_set_fd@@Base+0x470>
    5298:	ldur	x8, [x29, #-24]
    529c:	ldr	w9, [x8, #32]
    52a0:	cbz	w9, 5300 <cap_set_fd@@Base+0x240>
    52a4:	ldur	x8, [x29, #-24]
    52a8:	ldr	w9, [x8]
    52ac:	mov	w10, #0x522                 	// #1314
    52b0:	movk	w10, #0x2008, lsl #16
    52b4:	cmp	w9, w10
    52b8:	b.cs	52d4 <cap_set_fd@@Base+0x214>  // b.hs, b.nlast
    52bc:	bl	1d30 <__errno_location@plt>
    52c0:	mov	w8, #0x16                  	// #22
    52c4:	str	w8, [x0]
    52c8:	mov	w8, #0xffffffff            	// #-1
    52cc:	stur	w8, [x29, #-4]
    52d0:	b	5530 <cap_set_fd@@Base+0x470>
    52d4:	mov	w8, #0x3000000             	// #50331648
    52d8:	str	w8, [sp, #24]
    52dc:	mov	w8, #0x2                   	// #2
    52e0:	str	w8, [sp, #20]
    52e4:	ldr	x9, [sp, #32]
    52e8:	mov	w8, #0x18                  	// #24
    52ec:	str	w8, [x9]
    52f0:	ldur	x9, [x29, #-24]
    52f4:	ldr	w8, [x9, #32]
    52f8:	ldur	x9, [x29, #-16]
    52fc:	str	w8, [x9, #20]
    5300:	str	wzr, [sp, #28]
    5304:	str	wzr, [sp, #16]
    5308:	ldr	w8, [sp, #16]
    530c:	ldr	w9, [sp, #20]
    5310:	cmp	w8, w9
    5314:	b.cs	5350 <cap_set_fd@@Base+0x290>  // b.hs, b.nlast
    5318:	ldur	x8, [x29, #-24]
    531c:	add	x8, x8, #0x8
    5320:	ldr	w9, [sp, #16]
    5324:	mov	w10, w9
    5328:	mov	x11, #0xc                   	// #12
    532c:	mul	x10, x11, x10
    5330:	ldr	w9, [x8, x10]
    5334:	ldr	w12, [sp, #28]
    5338:	orr	w9, w12, w9
    533c:	str	w9, [sp, #28]
    5340:	ldr	w8, [sp, #16]
    5344:	add	w8, w8, #0x1
    5348:	str	w8, [sp, #16]
    534c:	b	5308 <cap_set_fd@@Base+0x248>
    5350:	ldr	w8, [sp, #16]
    5354:	cmp	w8, #0x2
    5358:	b.cs	53ec <cap_set_fd@@Base+0x32c>  // b.hs, b.nlast
    535c:	ldur	x8, [x29, #-24]
    5360:	add	x8, x8, #0x8
    5364:	ldr	w9, [sp, #16]
    5368:	mov	w10, w9
    536c:	mov	x11, #0xc                   	// #12
    5370:	mul	x10, x11, x10
    5374:	ldr	w9, [x8, x10]
    5378:	cbnz	w9, 53c4 <cap_set_fd@@Base+0x304>
    537c:	ldur	x8, [x29, #-24]
    5380:	add	x8, x8, #0x8
    5384:	ldr	w9, [sp, #16]
    5388:	mov	w10, w9
    538c:	mov	x11, #0xc                   	// #12
    5390:	mul	x10, x11, x10
    5394:	add	x8, x8, x10
    5398:	ldr	w9, [x8, #8]
    539c:	cbnz	w9, 53c4 <cap_set_fd@@Base+0x304>
    53a0:	ldur	x8, [x29, #-24]
    53a4:	add	x8, x8, #0x8
    53a8:	ldr	w9, [sp, #16]
    53ac:	mov	w10, w9
    53b0:	mov	x11, #0xc                   	// #12
    53b4:	mul	x10, x11, x10
    53b8:	add	x8, x8, x10
    53bc:	ldr	w9, [x8, #4]
    53c0:	cbz	w9, 53dc <cap_set_fd@@Base+0x31c>
    53c4:	bl	1d30 <__errno_location@plt>
    53c8:	mov	w8, #0x16                  	// #22
    53cc:	str	w8, [x0]
    53d0:	mov	w8, #0xffffffff            	// #-1
    53d4:	stur	w8, [x29, #-4]
    53d8:	b	5530 <cap_set_fd@@Base+0x470>
    53dc:	ldr	w8, [sp, #16]
    53e0:	add	w8, w8, #0x1
    53e4:	str	w8, [sp, #16]
    53e8:	b	5350 <cap_set_fd@@Base+0x290>
    53ec:	str	wzr, [sp, #16]
    53f0:	ldr	w8, [sp, #16]
    53f4:	ldr	w9, [sp, #20]
    53f8:	cmp	w8, w9
    53fc:	b.cs	5504 <cap_set_fd@@Base+0x444>  // b.hs, b.nlast
    5400:	ldur	x8, [x29, #-24]
    5404:	mov	x9, #0x8                   	// #8
    5408:	add	x8, x8, #0x8
    540c:	ldr	w10, [sp, #16]
    5410:	mov	w11, w10
    5414:	mov	x12, #0xc                   	// #12
    5418:	mul	x11, x12, x11
    541c:	add	x8, x8, x11
    5420:	ldr	w10, [x8, #4]
    5424:	ldur	x8, [x29, #-16]
    5428:	add	x8, x8, #0x4
    542c:	ldr	w13, [sp, #16]
    5430:	mov	w11, w13
    5434:	mul	x11, x9, x11
    5438:	str	w10, [x8, x11]
    543c:	ldur	x8, [x29, #-24]
    5440:	add	x8, x8, #0x8
    5444:	ldr	w10, [sp, #16]
    5448:	mov	w11, w10
    544c:	mul	x11, x12, x11
    5450:	add	x8, x8, x11
    5454:	ldr	w10, [x8, #8]
    5458:	ldur	x8, [x29, #-16]
    545c:	add	x8, x8, #0x4
    5460:	ldr	w13, [sp, #16]
    5464:	mov	w11, w13
    5468:	mul	x9, x9, x11
    546c:	add	x8, x8, x9
    5470:	str	w10, [x8, #4]
    5474:	ldr	w10, [sp, #28]
    5478:	cbz	w10, 54f4 <cap_set_fd@@Base+0x434>
    547c:	ldur	x8, [x29, #-24]
    5480:	add	x8, x8, #0x8
    5484:	ldr	w9, [sp, #16]
    5488:	mov	w10, w9
    548c:	mov	x11, #0xc                   	// #12
    5490:	mul	x10, x11, x10
    5494:	ldr	w9, [x8, x10]
    5498:	ldur	x8, [x29, #-24]
    549c:	add	x8, x8, #0x8
    54a0:	ldr	w12, [sp, #16]
    54a4:	mov	w10, w12
    54a8:	mul	x10, x11, x10
    54ac:	add	x8, x8, x10
    54b0:	ldr	w12, [x8, #4]
    54b4:	ldur	x8, [x29, #-24]
    54b8:	add	x8, x8, #0x8
    54bc:	ldr	w13, [sp, #16]
    54c0:	mov	w10, w13
    54c4:	mul	x10, x11, x10
    54c8:	add	x8, x8, x10
    54cc:	ldr	w13, [x8, #8]
    54d0:	orr	w12, w12, w13
    54d4:	bic	w9, w12, w9
    54d8:	cbz	w9, 54f4 <cap_set_fd@@Base+0x434>
    54dc:	bl	1d30 <__errno_location@plt>
    54e0:	mov	w8, #0x16                  	// #22
    54e4:	str	w8, [x0]
    54e8:	mov	w8, #0xffffffff            	// #-1
    54ec:	stur	w8, [x29, #-4]
    54f0:	b	5530 <cap_set_fd@@Base+0x470>
    54f4:	ldr	w8, [sp, #16]
    54f8:	add	w8, w8, #0x1
    54fc:	str	w8, [sp, #16]
    5500:	b	53f0 <cap_set_fd@@Base+0x330>
    5504:	ldr	w8, [sp, #28]
    5508:	cbnz	w8, 551c <cap_set_fd@@Base+0x45c>
    550c:	ldr	w8, [sp, #24]
    5510:	ldur	x9, [x29, #-16]
    5514:	str	w8, [x9]
    5518:	b	552c <cap_set_fd@@Base+0x46c>
    551c:	ldr	w8, [sp, #24]
    5520:	orr	w8, w8, #0x1
    5524:	ldur	x9, [x29, #-16]
    5528:	str	w8, [x9]
    552c:	stur	wzr, [x29, #-4]
    5530:	ldur	w0, [x29, #-4]
    5534:	ldp	x29, x30, [sp, #64]
    5538:	add	sp, sp, #0x50
    553c:	ret

0000000000005540 <cap_set_file@@Base>:
    5540:	sub	sp, sp, #0xd0
    5544:	stp	x29, x30, [sp, #192]
    5548:	add	x29, sp, #0xc0
    554c:	add	x8, sp, #0x8
    5550:	stur	x0, [x29, #-16]
    5554:	stur	x1, [x29, #-24]
    5558:	ldur	x0, [x29, #-16]
    555c:	mov	x1, x8
    5560:	bl	5658 <cap_set_nsowner@@Base+0x38>
    5564:	cbz	w0, 5574 <cap_set_file@@Base+0x34>
    5568:	mov	w8, #0xffffffff            	// #-1
    556c:	stur	w8, [x29, #-4]
    5570:	b	5610 <cap_set_file@@Base+0xd0>
    5574:	ldr	w8, [sp, #24]
    5578:	and	w8, w8, #0xf000
    557c:	cmp	w8, #0xa, lsl #12
    5580:	b.eq	5594 <cap_set_file@@Base+0x54>  // b.none
    5584:	ldr	w8, [sp, #24]
    5588:	and	w8, w8, #0xf000
    558c:	cmp	w8, #0x8, lsl #12
    5590:	b.eq	55ac <cap_set_file@@Base+0x6c>  // b.none
    5594:	bl	1d30 <__errno_location@plt>
    5598:	mov	w8, #0x16                  	// #22
    559c:	str	w8, [x0]
    55a0:	mov	w8, #0xffffffff            	// #-1
    55a4:	stur	w8, [x29, #-4]
    55a8:	b	5610 <cap_set_file@@Base+0xd0>
    55ac:	ldur	x8, [x29, #-24]
    55b0:	cbnz	x8, 55cc <cap_set_file@@Base+0x8c>
    55b4:	ldur	x0, [x29, #-16]
    55b8:	adrp	x1, 5000 <cap_get_fd@@Base+0x2e0>
    55bc:	add	x1, x1, #0x9a3
    55c0:	bl	1a70 <removexattr@plt>
    55c4:	stur	w0, [x29, #-4]
    55c8:	b	5610 <cap_set_file@@Base+0xd0>
    55cc:	ldur	x1, [x29, #-24]
    55d0:	sub	x0, x29, #0x30
    55d4:	sub	x2, x29, #0x34
    55d8:	bl	51a0 <cap_set_fd@@Base+0xe0>
    55dc:	cbz	w0, 55ec <cap_set_file@@Base+0xac>
    55e0:	mov	w8, #0xffffffff            	// #-1
    55e4:	stur	w8, [x29, #-4]
    55e8:	b	5610 <cap_set_file@@Base+0xd0>
    55ec:	ldur	x0, [x29, #-16]
    55f0:	ldursw	x3, [x29, #-52]
    55f4:	adrp	x1, 5000 <cap_get_fd@@Base+0x2e0>
    55f8:	add	x1, x1, #0x9a3
    55fc:	sub	x2, x29, #0x30
    5600:	mov	w8, wzr
    5604:	mov	w4, w8
    5608:	bl	1b70 <setxattr@plt>
    560c:	stur	w0, [x29, #-4]
    5610:	ldur	w0, [x29, #-4]
    5614:	ldp	x29, x30, [sp, #192]
    5618:	add	sp, sp, #0xd0
    561c:	ret

0000000000005620 <cap_set_nsowner@@Base>:
    5620:	sub	sp, sp, #0x10
    5624:	mov	w8, wzr
    5628:	str	x0, [sp, #8]
    562c:	str	w1, [sp, #4]
    5630:	ldr	w9, [sp, #4]
    5634:	ldr	x10, [sp, #8]
    5638:	str	w9, [x10, #32]
    563c:	mov	w0, w8
    5640:	add	sp, sp, #0x10
    5644:	ret
    5648:	mov	x2, x1
    564c:	mov	w1, w0
    5650:	mov	w0, #0x0                   	// #0
    5654:	b	1c80 <__fxstat64@plt>
    5658:	mov	x2, x1
    565c:	mov	x1, x0
    5660:	mov	w0, #0x0                   	// #0
    5664:	b	1c50 <__lxstat64@plt>

Disassembly of section .fini:

0000000000005668 <.fini>:
    5668:	stp	x29, x30, [sp, #-16]!
    566c:	mov	x29, sp
    5670:	ldp	x29, x30, [sp], #16
    5674:	ret
