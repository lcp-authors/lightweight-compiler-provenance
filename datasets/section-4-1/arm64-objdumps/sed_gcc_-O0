
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sed_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402688 <.init>:
  402688:	stp	x29, x30, [sp, #-16]!
  40268c:	mov	x29, sp
  402690:	bl	402e50 <wcrtomb@plt+0x60>
  402694:	ldp	x29, x30, [sp], #16
  402698:	ret

Disassembly of section .plt:

00000000004026a0 <mbrtowc@plt-0x20>:
  4026a0:	stp	x16, x30, [sp, #-16]!
  4026a4:	adrp	x16, 44c000 <_obstack_memory_used@@Base+0x2fe20>
  4026a8:	ldr	x17, [x16, #4088]
  4026ac:	add	x16, x16, #0xff8
  4026b0:	br	x17
  4026b4:	nop
  4026b8:	nop
  4026bc:	nop

00000000004026c0 <mbrtowc@plt>:
  4026c0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16]
  4026c8:	add	x16, x16, #0x0
  4026cc:	br	x17

00000000004026d0 <memcpy@plt>:
  4026d0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #8]
  4026d8:	add	x16, x16, #0x8
  4026dc:	br	x17

00000000004026e0 <memmove@plt>:
  4026e0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #16]
  4026e8:	add	x16, x16, #0x10
  4026ec:	br	x17

00000000004026f0 <isalpha@plt>:
  4026f0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #24]
  4026f8:	add	x16, x16, #0x18
  4026fc:	br	x17

0000000000402700 <ngettext@plt>:
  402700:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #32]
  402708:	add	x16, x16, #0x20
  40270c:	br	x17

0000000000402710 <fwrite_unlocked@plt>:
  402710:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #40]
  402718:	add	x16, x16, #0x28
  40271c:	br	x17

0000000000402720 <strlen@plt>:
  402720:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #48]
  402728:	add	x16, x16, #0x30
  40272c:	br	x17

0000000000402730 <acl_set_fd@plt>:
  402730:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #56]
  402738:	add	x16, x16, #0x38
  40273c:	br	x17

0000000000402740 <exit@plt>:
  402740:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #64]
  402748:	add	x16, x16, #0x40
  40274c:	br	x17

0000000000402750 <error@plt>:
  402750:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #72]
  402758:	add	x16, x16, #0x48
  40275c:	br	x17

0000000000402760 <acl_entries@plt>:
  402760:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #80]
  402768:	add	x16, x16, #0x50
  40276c:	br	x17

0000000000402770 <wctype@plt>:
  402770:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #88]
  402778:	add	x16, x16, #0x58
  40277c:	br	x17

0000000000402780 <readlink@plt>:
  402780:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #96]
  402788:	add	x16, x16, #0x60
  40278c:	br	x17

0000000000402790 <ferror_unlocked@plt>:
  402790:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #104]
  402798:	add	x16, x16, #0x68
  40279c:	br	x17

00000000004027a0 <ftell@plt>:
  4027a0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #112]
  4027a8:	add	x16, x16, #0x70
  4027ac:	br	x17

00000000004027b0 <sprintf@plt>:
  4027b0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #120]
  4027b8:	add	x16, x16, #0x78
  4027bc:	br	x17

00000000004027c0 <__cxa_atexit@plt>:
  4027c0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #128]
  4027c8:	add	x16, x16, #0x80
  4027cc:	br	x17

00000000004027d0 <qsort@plt>:
  4027d0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #136]
  4027d8:	add	x16, x16, #0x88
  4027dc:	br	x17

00000000004027e0 <setvbuf@plt>:
  4027e0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #144]
  4027e8:	add	x16, x16, #0x90
  4027ec:	br	x17

00000000004027f0 <isblank@plt>:
  4027f0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #152]
  4027f8:	add	x16, x16, #0x98
  4027fc:	br	x17

0000000000402800 <__fwriting@plt>:
  402800:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #160]
  402808:	add	x16, x16, #0xa0
  40280c:	br	x17

0000000000402810 <fileno@plt>:
  402810:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #168]
  402818:	add	x16, x16, #0xa8
  40281c:	br	x17

0000000000402820 <putc_unlocked@plt>:
  402820:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #176]
  402828:	add	x16, x16, #0xb0
  40282c:	br	x17

0000000000402830 <acl_delete_def_file@plt>:
  402830:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #184]
  402838:	add	x16, x16, #0xb8
  40283c:	br	x17

0000000000402840 <fclose@plt>:
  402840:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #192]
  402848:	add	x16, x16, #0xc0
  40284c:	br	x17

0000000000402850 <atoi@plt>:
  402850:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #200]
  402858:	add	x16, x16, #0xc8
  40285c:	br	x17

0000000000402860 <wctob@plt>:
  402860:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #208]
  402868:	add	x16, x16, #0xd0
  40286c:	br	x17

0000000000402870 <nl_langinfo@plt>:
  402870:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #216]
  402878:	add	x16, x16, #0xd8
  40287c:	br	x17

0000000000402880 <fopen@plt>:
  402880:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #224]
  402888:	add	x16, x16, #0xe0
  40288c:	br	x17

0000000000402890 <isspace@plt>:
  402890:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #232]
  402898:	add	x16, x16, #0xe8
  40289c:	br	x17

00000000004028a0 <iswctype@plt>:
  4028a0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #240]
  4028a8:	add	x16, x16, #0xf0
  4028ac:	br	x17

00000000004028b0 <malloc@plt>:
  4028b0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #248]
  4028b8:	add	x16, x16, #0xf8
  4028bc:	br	x17

00000000004028c0 <toupper@plt>:
  4028c0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #256]
  4028c8:	add	x16, x16, #0x100
  4028cc:	br	x17

00000000004028d0 <chmod@plt>:
  4028d0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #264]
  4028d8:	add	x16, x16, #0x108
  4028dc:	br	x17

00000000004028e0 <getdelim@plt>:
  4028e0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #272]
  4028e8:	add	x16, x16, #0x110
  4028ec:	br	x17

00000000004028f0 <islower@plt>:
  4028f0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #280]
  4028f8:	add	x16, x16, #0x118
  4028fc:	br	x17

0000000000402900 <isxdigit@plt>:
  402900:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #288]
  402908:	add	x16, x16, #0x120
  40290c:	br	x17

0000000000402910 <popen@plt>:
  402910:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #296]
  402918:	add	x16, x16, #0x128
  40291c:	br	x17

0000000000402920 <strncmp@plt>:
  402920:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #304]
  402928:	add	x16, x16, #0x130
  40292c:	br	x17

0000000000402930 <bindtextdomain@plt>:
  402930:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #312]
  402938:	add	x16, x16, #0x138
  40293c:	br	x17

0000000000402940 <isdigit@plt>:
  402940:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #320]
  402948:	add	x16, x16, #0x140
  40294c:	br	x17

0000000000402950 <__libc_start_main@plt>:
  402950:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #328]
  402958:	add	x16, x16, #0x148
  40295c:	br	x17

0000000000402960 <strverscmp@plt>:
  402960:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #336]
  402968:	add	x16, x16, #0x150
  40296c:	br	x17

0000000000402970 <acl_get_tag_type@plt>:
  402970:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #344]
  402978:	add	x16, x16, #0x158
  40297c:	br	x17

0000000000402980 <memset@plt>:
  402980:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #352]
  402988:	add	x16, x16, #0x160
  40298c:	br	x17

0000000000402990 <fdopen@plt>:
  402990:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #360]
  402998:	add	x16, x16, #0x168
  40299c:	br	x17

00000000004029a0 <fchmod@plt>:
  4029a0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #368]
  4029a8:	add	x16, x16, #0x170
  4029ac:	br	x17

00000000004029b0 <putchar_unlocked@plt>:
  4029b0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #376]
  4029b8:	add	x16, x16, #0x178
  4029bc:	br	x17

00000000004029c0 <calloc@plt>:
  4029c0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #384]
  4029c8:	add	x16, x16, #0x180
  4029cc:	br	x17

00000000004029d0 <isupper@plt>:
  4029d0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #392]
  4029d8:	add	x16, x16, #0x188
  4029dc:	br	x17

00000000004029e0 <realloc@plt>:
  4029e0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #400]
  4029e8:	add	x16, x16, #0x190
  4029ec:	br	x17

00000000004029f0 <acl_set_file@plt>:
  4029f0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #408]
  4029f8:	add	x16, x16, #0x198
  4029fc:	br	x17

0000000000402a00 <rewind@plt>:
  402a00:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #416]
  402a08:	add	x16, x16, #0x1a0
  402a0c:	br	x17

0000000000402a10 <acl_from_mode@plt>:
  402a10:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #424]
  402a18:	add	x16, x16, #0x1a8
  402a1c:	br	x17

0000000000402a20 <acl_get_fd@plt>:
  402a20:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #432]
  402a28:	add	x16, x16, #0x1b0
  402a2c:	br	x17

0000000000402a30 <strdup@plt>:
  402a30:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #440]
  402a38:	add	x16, x16, #0x1b8
  402a3c:	br	x17

0000000000402a40 <getc_unlocked@plt>:
  402a40:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #448]
  402a48:	add	x16, x16, #0x1c0
  402a4c:	br	x17

0000000000402a50 <strerror@plt>:
  402a50:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #456]
  402a58:	add	x16, x16, #0x1c8
  402a5c:	br	x17

0000000000402a60 <strrchr@plt>:
  402a60:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #464]
  402a68:	add	x16, x16, #0x1d0
  402a6c:	br	x17

0000000000402a70 <__gmon_start__@plt>:
  402a70:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #472]
  402a78:	add	x16, x16, #0x1d8
  402a7c:	br	x17

0000000000402a80 <btowc@plt>:
  402a80:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #480]
  402a88:	add	x16, x16, #0x1e0
  402a8c:	br	x17

0000000000402a90 <abort@plt>:
  402a90:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #488]
  402a98:	add	x16, x16, #0x1e8
  402a9c:	br	x17

0000000000402aa0 <mkostemp@plt>:
  402aa0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #496]
  402aa8:	add	x16, x16, #0x1f0
  402aac:	br	x17

0000000000402ab0 <iscntrl@plt>:
  402ab0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #504]
  402ab8:	add	x16, x16, #0x1f8
  402abc:	br	x17

0000000000402ac0 <mbsinit@plt>:
  402ac0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #512]
  402ac8:	add	x16, x16, #0x200
  402acc:	br	x17

0000000000402ad0 <ispunct@plt>:
  402ad0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #520]
  402ad8:	add	x16, x16, #0x208
  402adc:	br	x17

0000000000402ae0 <puts@plt>:
  402ae0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #528]
  402ae8:	add	x16, x16, #0x210
  402aec:	br	x17

0000000000402af0 <fread_unlocked@plt>:
  402af0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #536]
  402af8:	add	x16, x16, #0x218
  402afc:	br	x17

0000000000402b00 <memcmp@plt>:
  402b00:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #544]
  402b08:	add	x16, x16, #0x220
  402b0c:	br	x17

0000000000402b10 <textdomain@plt>:
  402b10:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #552]
  402b18:	add	x16, x16, #0x228
  402b1c:	br	x17

0000000000402b20 <getopt_long@plt>:
  402b20:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #560]
  402b28:	add	x16, x16, #0x230
  402b2c:	br	x17

0000000000402b30 <strcmp@plt>:
  402b30:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #568]
  402b38:	add	x16, x16, #0x238
  402b3c:	br	x17

0000000000402b40 <__ctype_b_loc@plt>:
  402b40:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #576]
  402b48:	add	x16, x16, #0x240
  402b4c:	br	x17

0000000000402b50 <acl_get_file@plt>:
  402b50:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #584]
  402b58:	add	x16, x16, #0x248
  402b5c:	br	x17

0000000000402b60 <free@plt>:
  402b60:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #592]
  402b68:	add	x16, x16, #0x250
  402b6c:	br	x17

0000000000402b70 <ungetc@plt>:
  402b70:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #600]
  402b78:	add	x16, x16, #0x258
  402b7c:	br	x17

0000000000402b80 <__ctype_get_mb_cur_max@plt>:
  402b80:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #608]
  402b88:	add	x16, x16, #0x260
  402b8c:	br	x17

0000000000402b90 <acl_get_entry@plt>:
  402b90:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #616]
  402b98:	add	x16, x16, #0x268
  402b9c:	br	x17

0000000000402ba0 <strchr@plt>:
  402ba0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #624]
  402ba8:	add	x16, x16, #0x270
  402bac:	br	x17

0000000000402bb0 <feof_unlocked@plt>:
  402bb0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #632]
  402bb8:	add	x16, x16, #0x278
  402bbc:	br	x17

0000000000402bc0 <memrchr@plt>:
  402bc0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #640]
  402bc8:	add	x16, x16, #0x280
  402bcc:	br	x17

0000000000402bd0 <rename@plt>:
  402bd0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #648]
  402bd8:	add	x16, x16, #0x288
  402bdc:	br	x17

0000000000402be0 <fwrite@plt>:
  402be0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #656]
  402be8:	add	x16, x16, #0x290
  402bec:	br	x17

0000000000402bf0 <fflush_unlocked@plt>:
  402bf0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #664]
  402bf8:	add	x16, x16, #0x298
  402bfc:	br	x17

0000000000402c00 <strcpy@plt>:
  402c00:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #672]
  402c08:	add	x16, x16, #0x2a0
  402c0c:	br	x17

0000000000402c10 <clearerr_unlocked@plt>:
  402c10:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #680]
  402c18:	add	x16, x16, #0x2a8
  402c1c:	br	x17

0000000000402c20 <__lxstat@plt>:
  402c20:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #688]
  402c28:	add	x16, x16, #0x2b0
  402c2c:	br	x17

0000000000402c30 <memchr@plt>:
  402c30:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #696]
  402c38:	add	x16, x16, #0x2b8
  402c3c:	br	x17

0000000000402c40 <isatty@plt>:
  402c40:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #704]
  402c48:	add	x16, x16, #0x2c0
  402c4c:	br	x17

0000000000402c50 <fputc_unlocked@plt>:
  402c50:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #712]
  402c58:	add	x16, x16, #0x2c8
  402c5c:	br	x17

0000000000402c60 <isgraph@plt>:
  402c60:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #720]
  402c68:	add	x16, x16, #0x2d0
  402c6c:	br	x17

0000000000402c70 <iswalnum@plt>:
  402c70:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402c74:	ldr	x17, [x16, #728]
  402c78:	add	x16, x16, #0x2d8
  402c7c:	br	x17

0000000000402c80 <__fxstat@plt>:
  402c80:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402c84:	ldr	x17, [x16, #736]
  402c88:	add	x16, x16, #0x2e0
  402c8c:	br	x17

0000000000402c90 <strstr@plt>:
  402c90:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402c94:	ldr	x17, [x16, #744]
  402c98:	add	x16, x16, #0x2e8
  402c9c:	br	x17

0000000000402ca0 <fputs_unlocked@plt>:
  402ca0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402ca4:	ldr	x17, [x16, #752]
  402ca8:	add	x16, x16, #0x2f0
  402cac:	br	x17

0000000000402cb0 <strcoll@plt>:
  402cb0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402cb4:	ldr	x17, [x16, #760]
  402cb8:	add	x16, x16, #0x2f8
  402cbc:	br	x17

0000000000402cc0 <isalnum@plt>:
  402cc0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402cc4:	ldr	x17, [x16, #768]
  402cc8:	add	x16, x16, #0x300
  402ccc:	br	x17

0000000000402cd0 <pclose@plt>:
  402cd0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402cd4:	ldr	x17, [x16, #776]
  402cd8:	add	x16, x16, #0x308
  402cdc:	br	x17

0000000000402ce0 <towupper@plt>:
  402ce0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402ce4:	ldr	x17, [x16, #784]
  402ce8:	add	x16, x16, #0x310
  402cec:	br	x17

0000000000402cf0 <iswprint@plt>:
  402cf0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402cf4:	ldr	x17, [x16, #792]
  402cf8:	add	x16, x16, #0x318
  402cfc:	br	x17

0000000000402d00 <umask@plt>:
  402d00:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402d04:	ldr	x17, [x16, #800]
  402d08:	add	x16, x16, #0x320
  402d0c:	br	x17

0000000000402d10 <vfprintf@plt>:
  402d10:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402d14:	ldr	x17, [x16, #808]
  402d18:	add	x16, x16, #0x328
  402d1c:	br	x17

0000000000402d20 <printf@plt>:
  402d20:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402d24:	ldr	x17, [x16, #816]
  402d28:	add	x16, x16, #0x330
  402d2c:	br	x17

0000000000402d30 <__assert_fail@plt>:
  402d30:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402d34:	ldr	x17, [x16, #824]
  402d38:	add	x16, x16, #0x338
  402d3c:	br	x17

0000000000402d40 <__errno_location@plt>:
  402d40:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402d44:	ldr	x17, [x16, #832]
  402d48:	add	x16, x16, #0x340
  402d4c:	br	x17

0000000000402d50 <tolower@plt>:
  402d50:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402d54:	ldr	x17, [x16, #840]
  402d58:	add	x16, x16, #0x348
  402d5c:	br	x17

0000000000402d60 <getenv@plt>:
  402d60:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402d64:	ldr	x17, [x16, #848]
  402d68:	add	x16, x16, #0x350
  402d6c:	br	x17

0000000000402d70 <unlink@plt>:
  402d70:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402d74:	ldr	x17, [x16, #856]
  402d78:	add	x16, x16, #0x358
  402d7c:	br	x17

0000000000402d80 <gettext@plt>:
  402d80:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402d84:	ldr	x17, [x16, #864]
  402d88:	add	x16, x16, #0x360
  402d8c:	br	x17

0000000000402d90 <fchown@plt>:
  402d90:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402d94:	ldr	x17, [x16, #872]
  402d98:	add	x16, x16, #0x368
  402d9c:	br	x17

0000000000402da0 <towlower@plt>:
  402da0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402da4:	ldr	x17, [x16, #880]
  402da8:	add	x16, x16, #0x370
  402dac:	br	x17

0000000000402db0 <fprintf@plt>:
  402db0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402db4:	ldr	x17, [x16, #888]
  402db8:	add	x16, x16, #0x378
  402dbc:	br	x17

0000000000402dc0 <isprint@plt>:
  402dc0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402dc4:	ldr	x17, [x16, #896]
  402dc8:	add	x16, x16, #0x380
  402dcc:	br	x17

0000000000402dd0 <setlocale@plt>:
  402dd0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402dd4:	ldr	x17, [x16, #904]
  402dd8:	add	x16, x16, #0x388
  402ddc:	br	x17

0000000000402de0 <acl_free@plt>:
  402de0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402de4:	ldr	x17, [x16, #912]
  402de8:	add	x16, x16, #0x390
  402dec:	br	x17

0000000000402df0 <wcrtomb@plt>:
  402df0:	adrp	x16, 44d000 <mbrtowc@GLIBC_2.17>
  402df4:	ldr	x17, [x16, #920]
  402df8:	add	x16, x16, #0x398
  402dfc:	br	x17

Disassembly of section .text:

0000000000402e00 <_obstack_begin@@Base-0x18f98>:
  402e00:	mov	x29, #0x0                   	// #0
  402e04:	mov	x30, #0x0                   	// #0
  402e08:	mov	x5, x0
  402e0c:	ldr	x1, [sp]
  402e10:	add	x2, sp, #0x8
  402e14:	mov	x6, sp
  402e18:	movz	x0, #0x0, lsl #48
  402e1c:	movk	x0, #0x0, lsl #32
  402e20:	movk	x0, #0x40, lsl #16
  402e24:	movk	x0, #0xcb60
  402e28:	movz	x3, #0x0, lsl #48
  402e2c:	movk	x3, #0x0, lsl #32
  402e30:	movk	x3, #0x43, lsl #16
  402e34:	movk	x3, #0x47d8
  402e38:	movz	x4, #0x0, lsl #48
  402e3c:	movk	x4, #0x0, lsl #32
  402e40:	movk	x4, #0x43, lsl #16
  402e44:	movk	x4, #0x4858
  402e48:	bl	402950 <__libc_start_main@plt>
  402e4c:	bl	402a90 <abort@plt>
  402e50:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x2fe20>
  402e54:	ldr	x0, [x0, #4064]
  402e58:	cbz	x0, 402e60 <wcrtomb@plt+0x70>
  402e5c:	b	402a70 <__gmon_start__@plt>
  402e60:	ret
  402e64:	stp	x29, x30, [sp, #-32]!
  402e68:	mov	x29, sp
  402e6c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  402e70:	add	x0, x0, #0x500
  402e74:	str	x0, [sp, #24]
  402e78:	ldr	x0, [sp, #24]
  402e7c:	str	x0, [sp, #24]
  402e80:	ldr	x1, [sp, #24]
  402e84:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  402e88:	add	x0, x0, #0x500
  402e8c:	cmp	x1, x0
  402e90:	b.eq	402ecc <wcrtomb@plt+0xdc>  // b.none
  402e94:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  402e98:	add	x0, x0, #0x8a8
  402e9c:	ldr	x0, [x0]
  402ea0:	str	x0, [sp, #16]
  402ea4:	ldr	x0, [sp, #16]
  402ea8:	str	x0, [sp, #16]
  402eac:	ldr	x0, [sp, #16]
  402eb0:	cmp	x0, #0x0
  402eb4:	b.eq	402ed0 <wcrtomb@plt+0xe0>  // b.none
  402eb8:	ldr	x1, [sp, #16]
  402ebc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  402ec0:	add	x0, x0, #0x500
  402ec4:	blr	x1
  402ec8:	b	402ed0 <wcrtomb@plt+0xe0>
  402ecc:	nop
  402ed0:	ldp	x29, x30, [sp], #32
  402ed4:	ret
  402ed8:	stp	x29, x30, [sp, #-48]!
  402edc:	mov	x29, sp
  402ee0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  402ee4:	add	x0, x0, #0x500
  402ee8:	str	x0, [sp, #40]
  402eec:	ldr	x0, [sp, #40]
  402ef0:	str	x0, [sp, #40]
  402ef4:	ldr	x1, [sp, #40]
  402ef8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  402efc:	add	x0, x0, #0x500
  402f00:	sub	x0, x1, x0
  402f04:	asr	x0, x0, #3
  402f08:	lsr	x1, x0, #63
  402f0c:	add	x0, x1, x0
  402f10:	asr	x0, x0, #1
  402f14:	str	x0, [sp, #32]
  402f18:	ldr	x0, [sp, #32]
  402f1c:	cmp	x0, #0x0
  402f20:	b.eq	402f60 <wcrtomb@plt+0x170>  // b.none
  402f24:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  402f28:	add	x0, x0, #0x8b0
  402f2c:	ldr	x0, [x0]
  402f30:	str	x0, [sp, #24]
  402f34:	ldr	x0, [sp, #24]
  402f38:	str	x0, [sp, #24]
  402f3c:	ldr	x0, [sp, #24]
  402f40:	cmp	x0, #0x0
  402f44:	b.eq	402f64 <wcrtomb@plt+0x174>  // b.none
  402f48:	ldr	x2, [sp, #24]
  402f4c:	ldr	x1, [sp, #32]
  402f50:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  402f54:	add	x0, x0, #0x500
  402f58:	blr	x2
  402f5c:	b	402f64 <wcrtomb@plt+0x174>
  402f60:	nop
  402f64:	ldp	x29, x30, [sp], #48
  402f68:	ret
  402f6c:	stp	x29, x30, [sp, #-16]!
  402f70:	mov	x29, sp
  402f74:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  402f78:	add	x0, x0, #0x538
  402f7c:	ldrb	w0, [x0]
  402f80:	and	x0, x0, #0xff
  402f84:	cmp	x0, #0x0
  402f88:	b.ne	402fa4 <wcrtomb@plt+0x1b4>  // b.any
  402f8c:	bl	402e64 <wcrtomb@plt+0x74>
  402f90:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  402f94:	add	x0, x0, #0x538
  402f98:	mov	w1, #0x1                   	// #1
  402f9c:	strb	w1, [x0]
  402fa0:	b	402fa8 <wcrtomb@plt+0x1b8>
  402fa4:	nop
  402fa8:	ldp	x29, x30, [sp], #16
  402fac:	ret
  402fb0:	stp	x29, x30, [sp, #-16]!
  402fb4:	mov	x29, sp
  402fb8:	bl	402ed8 <wcrtomb@plt+0xe8>
  402fbc:	nop
  402fc0:	ldp	x29, x30, [sp], #16
  402fc4:	ret
  402fc8:	stp	x29, x30, [sp, #-48]!
  402fcc:	mov	x29, sp
  402fd0:	strb	w0, [sp, #31]
  402fd4:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  402fd8:	add	x0, x0, #0xbb9
  402fdc:	bl	402d80 <gettext@plt>
  402fe0:	str	x0, [sp, #40]
  402fe4:	ldr	x0, [sp, #40]
  402fe8:	bl	402720 <strlen@plt>
  402fec:	bl	41b8d0 <wcrtomb@plt+0x18ae0>
  402ff0:	str	x0, [sp, #32]
  402ff4:	ldrb	w0, [sp, #31]
  402ff8:	mov	w2, w0
  402ffc:	ldr	x1, [sp, #40]
  403000:	ldr	x0, [sp, #32]
  403004:	bl	4027b0 <sprintf@plt>
  403008:	ldr	x0, [sp, #32]
  40300c:	bl	403010 <wcrtomb@plt+0x220>
  403010:	stp	x29, x30, [sp, #-48]!
  403014:	mov	x29, sp
  403018:	str	x19, [sp, #16]
  40301c:	str	x0, [sp, #40]
  403020:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403024:	add	x0, x0, #0x578
  403028:	ldr	x0, [x0]
  40302c:	cmp	x0, #0x0
  403030:	b.eq	403094 <wcrtomb@plt+0x2a4>  // b.none
  403034:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403038:	add	x0, x0, #0x508
  40303c:	ldr	x19, [x0]
  403040:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  403044:	add	x0, x0, #0xc70
  403048:	bl	402d80 <gettext@plt>
  40304c:	mov	x6, x0
  403050:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403054:	add	x0, x0, #0x7a0
  403058:	ldr	x1, [x0]
  40305c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403060:	add	x0, x0, #0x578
  403064:	ldr	x2, [x0]
  403068:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40306c:	add	x0, x0, #0x578
  403070:	ldr	x0, [x0, #8]
  403074:	ldr	x5, [sp, #40]
  403078:	mov	x4, x0
  40307c:	mov	x3, x2
  403080:	mov	x2, x1
  403084:	mov	x1, x6
  403088:	mov	x0, x19
  40308c:	bl	402db0 <fprintf@plt>
  403090:	b	4030f8 <wcrtomb@plt+0x308>
  403094:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403098:	add	x0, x0, #0x508
  40309c:	ldr	x19, [x0]
  4030a0:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  4030a4:	add	x0, x0, #0xc90
  4030a8:	bl	402d80 <gettext@plt>
  4030ac:	mov	x6, x0
  4030b0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4030b4:	add	x0, x0, #0x7a0
  4030b8:	ldr	x2, [x0]
  4030bc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4030c0:	add	x0, x0, #0x578
  4030c4:	ldr	x3, [x0, #16]
  4030c8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4030cc:	add	x0, x0, #0x558
  4030d0:	ldr	x1, [x0, #8]
  4030d4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4030d8:	add	x0, x0, #0x558
  4030dc:	ldr	x0, [x0]
  4030e0:	sub	x0, x1, x0
  4030e4:	ldr	x5, [sp, #40]
  4030e8:	mov	x4, x0
  4030ec:	mov	x1, x6
  4030f0:	mov	x0, x19
  4030f4:	bl	402db0 <fprintf@plt>
  4030f8:	mov	w0, #0x1                   	// #1
  4030fc:	bl	402740 <exit@plt>
  403100:	stp	x29, x30, [sp, #-32]!
  403104:	mov	x29, sp
  403108:	mov	w0, #0xffffffff            	// #-1
  40310c:	str	w0, [sp, #28]
  403110:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403114:	add	x0, x0, #0x558
  403118:	ldr	x0, [x0, #8]
  40311c:	cmp	x0, #0x0
  403120:	b.eq	40316c <wcrtomb@plt+0x37c>  // b.none
  403124:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403128:	add	x0, x0, #0x558
  40312c:	ldr	x1, [x0, #8]
  403130:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403134:	add	x0, x0, #0x558
  403138:	ldr	x0, [x0, #16]
  40313c:	cmp	x1, x0
  403140:	b.cs	4031ac <wcrtomb@plt+0x3bc>  // b.hs, b.nlast
  403144:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403148:	add	x0, x0, #0x558
  40314c:	ldr	x0, [x0, #8]
  403150:	add	x2, x0, #0x1
  403154:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403158:	add	x1, x1, #0x558
  40315c:	str	x2, [x1, #8]
  403160:	ldrb	w0, [x0]
  403164:	str	w0, [sp, #28]
  403168:	b	4031ac <wcrtomb@plt+0x3bc>
  40316c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403170:	add	x0, x0, #0x558
  403174:	ldr	x0, [x0, #24]
  403178:	cmp	x0, #0x0
  40317c:	b.eq	4031ac <wcrtomb@plt+0x3bc>  // b.none
  403180:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403184:	add	x0, x0, #0x558
  403188:	ldr	x0, [x0, #24]
  40318c:	bl	402bb0 <feof_unlocked@plt>
  403190:	cmp	w0, #0x0
  403194:	b.ne	4031ac <wcrtomb@plt+0x3bc>  // b.any
  403198:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40319c:	add	x0, x0, #0x558
  4031a0:	ldr	x0, [x0, #24]
  4031a4:	bl	402a40 <getc_unlocked@plt>
  4031a8:	str	w0, [sp, #28]
  4031ac:	ldr	w0, [sp, #28]
  4031b0:	cmp	w0, #0xa
  4031b4:	b.ne	4031d4 <wcrtomb@plt+0x3e4>  // b.any
  4031b8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4031bc:	add	x0, x0, #0x578
  4031c0:	ldr	x0, [x0, #8]
  4031c4:	add	x1, x0, #0x1
  4031c8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4031cc:	add	x0, x0, #0x578
  4031d0:	str	x1, [x0, #8]
  4031d4:	ldr	w0, [sp, #28]
  4031d8:	ldp	x29, x30, [sp], #32
  4031dc:	ret
  4031e0:	stp	x29, x30, [sp, #-32]!
  4031e4:	mov	x29, sp
  4031e8:	str	w0, [sp, #28]
  4031ec:	ldr	w0, [sp, #28]
  4031f0:	cmn	w0, #0x1
  4031f4:	b.eq	4032d4 <wcrtomb@plt+0x4e4>  // b.none
  4031f8:	ldr	w0, [sp, #28]
  4031fc:	cmp	w0, #0xa
  403200:	b.ne	403234 <wcrtomb@plt+0x444>  // b.any
  403204:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403208:	add	x0, x0, #0x578
  40320c:	ldr	x0, [x0, #8]
  403210:	cmp	x0, #0x0
  403214:	b.eq	403234 <wcrtomb@plt+0x444>  // b.none
  403218:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40321c:	add	x0, x0, #0x578
  403220:	ldr	x0, [x0, #8]
  403224:	sub	x1, x0, #0x1
  403228:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40322c:	add	x0, x0, #0x578
  403230:	str	x1, [x0, #8]
  403234:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403238:	add	x0, x0, #0x558
  40323c:	ldr	x0, [x0, #8]
  403240:	cmp	x0, #0x0
  403244:	b.eq	4032b8 <wcrtomb@plt+0x4c8>  // b.none
  403248:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40324c:	add	x0, x0, #0x558
  403250:	ldr	x1, [x0, #8]
  403254:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403258:	add	x0, x0, #0x558
  40325c:	ldr	x0, [x0]
  403260:	cmp	x1, x0
  403264:	b.ls	4032a4 <wcrtomb@plt+0x4b4>  // b.plast
  403268:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40326c:	add	x0, x0, #0x558
  403270:	ldr	x0, [x0, #8]
  403274:	sub	x1, x0, #0x1
  403278:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40327c:	add	x0, x0, #0x558
  403280:	str	x1, [x0, #8]
  403284:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403288:	add	x0, x0, #0x558
  40328c:	ldr	x0, [x0, #8]
  403290:	ldrb	w0, [x0]
  403294:	mov	w1, w0
  403298:	ldr	w0, [sp, #28]
  40329c:	cmp	w0, w1
  4032a0:	b.eq	4032d8 <wcrtomb@plt+0x4e8>  // b.none
  4032a4:	ldr	w0, [sp, #28]
  4032a8:	mov	w1, w0
  4032ac:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  4032b0:	add	x0, x0, #0xcb8
  4032b4:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  4032b8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4032bc:	add	x0, x0, #0x558
  4032c0:	ldr	x0, [x0, #24]
  4032c4:	mov	x1, x0
  4032c8:	ldr	w0, [sp, #28]
  4032cc:	bl	402b70 <ungetc@plt>
  4032d0:	b	4032d8 <wcrtomb@plt+0x4e8>
  4032d4:	nop
  4032d8:	ldp	x29, x30, [sp], #32
  4032dc:	ret
  4032e0:	stp	x29, x30, [sp, #-32]!
  4032e4:	mov	x29, sp
  4032e8:	bl	403100 <wcrtomb@plt+0x310>
  4032ec:	str	w0, [sp, #28]
  4032f0:	bl	402b40 <__ctype_b_loc@plt>
  4032f4:	ldr	x1, [x0]
  4032f8:	ldrsw	x0, [sp, #28]
  4032fc:	lsl	x0, x0, #1
  403300:	add	x0, x1, x0
  403304:	ldrh	w0, [x0]
  403308:	and	w0, w0, #0x1
  40330c:	cmp	w0, #0x0
  403310:	b.ne	4032e8 <wcrtomb@plt+0x4f8>  // b.any
  403314:	ldr	w0, [sp, #28]
  403318:	ldp	x29, x30, [sp], #32
  40331c:	ret
  403320:	stp	x29, x30, [sp, #-32]!
  403324:	mov	x29, sp
  403328:	bl	4032e0 <wcrtomb@plt+0x4f0>
  40332c:	str	w0, [sp, #28]
  403330:	ldr	w0, [sp, #28]
  403334:	cmp	w0, #0x7d
  403338:	b.eq	403348 <wcrtomb@plt+0x558>  // b.none
  40333c:	ldr	w0, [sp, #28]
  403340:	cmp	w0, #0x23
  403344:	b.ne	403354 <wcrtomb@plt+0x564>  // b.any
  403348:	ldr	w0, [sp, #28]
  40334c:	bl	4031e0 <wcrtomb@plt+0x3f0>
  403350:	b	403388 <wcrtomb@plt+0x598>
  403354:	ldr	w0, [sp, #28]
  403358:	cmn	w0, #0x1
  40335c:	b.eq	403388 <wcrtomb@plt+0x598>  // b.none
  403360:	ldr	w0, [sp, #28]
  403364:	cmp	w0, #0xa
  403368:	b.eq	403388 <wcrtomb@plt+0x598>  // b.none
  40336c:	ldr	w0, [sp, #28]
  403370:	cmp	w0, #0x3b
  403374:	b.eq	403388 <wcrtomb@plt+0x598>  // b.none
  403378:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  40337c:	add	x0, x0, #0x94d
  403380:	bl	402d80 <gettext@plt>
  403384:	bl	403010 <wcrtomb@plt+0x220>
  403388:	nop
  40338c:	ldp	x29, x30, [sp], #32
  403390:	ret
  403394:	stp	x29, x30, [sp, #-48]!
  403398:	mov	x29, sp
  40339c:	str	w0, [sp, #28]
  4033a0:	str	xzr, [sp, #40]
  4033a4:	b	4033d8 <wcrtomb@plt+0x5e8>
  4033a8:	ldr	x1, [sp, #40]
  4033ac:	mov	x0, x1
  4033b0:	lsl	x0, x0, #2
  4033b4:	add	x0, x0, x1
  4033b8:	lsl	x0, x0, #1
  4033bc:	mov	x1, x0
  4033c0:	ldrsw	x0, [sp, #28]
  4033c4:	add	x0, x1, x0
  4033c8:	sub	x0, x0, #0x30
  4033cc:	str	x0, [sp, #40]
  4033d0:	bl	403100 <wcrtomb@plt+0x310>
  4033d4:	str	w0, [sp, #28]
  4033d8:	bl	402b40 <__ctype_b_loc@plt>
  4033dc:	ldr	x1, [x0]
  4033e0:	ldr	w0, [sp, #28]
  4033e4:	and	w0, w0, #0xff
  4033e8:	and	x0, x0, #0xff
  4033ec:	lsl	x0, x0, #1
  4033f0:	add	x0, x1, x0
  4033f4:	ldrh	w0, [x0]
  4033f8:	and	w0, w0, #0x800
  4033fc:	cmp	w0, #0x0
  403400:	b.ne	4033a8 <wcrtomb@plt+0x5b8>  // b.any
  403404:	ldr	w0, [sp, #28]
  403408:	bl	4031e0 <wcrtomb@plt+0x3f0>
  40340c:	ldr	x0, [sp, #40]
  403410:	ldp	x29, x30, [sp], #48
  403414:	ret
  403418:	stp	x29, x30, [sp, #-32]!
  40341c:	mov	x29, sp
  403420:	str	x0, [sp, #24]
  403424:	str	w1, [sp, #20]
  403428:	ldr	w1, [sp, #20]
  40342c:	ldr	x0, [sp, #24]
  403430:	bl	40e2b0 <wcrtomb@plt+0xb4c0>
  403434:	bl	403100 <wcrtomb@plt+0x310>
  403438:	ldp	x29, x30, [sp], #32
  40343c:	ret
  403440:	sub	sp, sp, #0x40
  403444:	str	x0, [sp, #24]
  403448:	str	x1, [sp, #16]
  40344c:	str	x2, [sp, #8]
  403450:	str	w3, [sp, #4]
  403454:	str	wzr, [sp, #60]
  403458:	mov	w0, #0x1                   	// #1
  40345c:	str	w0, [sp, #56]
  403460:	ldr	x0, [sp, #16]
  403464:	add	x0, x0, #0x1
  403468:	str	x0, [sp, #48]
  40346c:	b	4035b0 <wcrtomb@plt+0x7c0>
  403470:	mov	w0, #0xffffffff            	// #-1
  403474:	str	w0, [sp, #44]
  403478:	ldr	x0, [sp, #48]
  40347c:	ldrb	w0, [x0]
  403480:	sub	w0, w0, #0x30
  403484:	cmp	w0, #0x36
  403488:	b.hi	403560 <wcrtomb@plt+0x770>  // b.pmore
  40348c:	adrp	x1, 434000 <_obstack_memory_used@@Base+0x17e20>
  403490:	add	x1, x1, #0xce8
  403494:	ldr	w0, [x1, w0, uxtw #2]
  403498:	adr	x1, 4034a4 <wcrtomb@plt+0x6b4>
  40349c:	add	x0, x1, w0, sxtw #2
  4034a0:	br	x0
  4034a4:	str	wzr, [sp, #44]
  4034a8:	b	403560 <wcrtomb@plt+0x770>
  4034ac:	mov	w0, #0x1                   	// #1
  4034b0:	str	w0, [sp, #44]
  4034b4:	b	403560 <wcrtomb@plt+0x770>
  4034b8:	mov	w0, #0x2                   	// #2
  4034bc:	str	w0, [sp, #44]
  4034c0:	b	403560 <wcrtomb@plt+0x770>
  4034c4:	mov	w0, #0x3                   	// #3
  4034c8:	str	w0, [sp, #44]
  4034cc:	b	403560 <wcrtomb@plt+0x770>
  4034d0:	mov	w0, #0x4                   	// #4
  4034d4:	str	w0, [sp, #44]
  4034d8:	b	403560 <wcrtomb@plt+0x770>
  4034dc:	mov	w0, #0x5                   	// #5
  4034e0:	str	w0, [sp, #44]
  4034e4:	b	403560 <wcrtomb@plt+0x770>
  4034e8:	mov	w0, #0x6                   	// #6
  4034ec:	str	w0, [sp, #44]
  4034f0:	b	403560 <wcrtomb@plt+0x770>
  4034f4:	mov	w0, #0x7                   	// #7
  4034f8:	str	w0, [sp, #44]
  4034fc:	b	403560 <wcrtomb@plt+0x770>
  403500:	mov	w0, #0x8                   	// #8
  403504:	str	w0, [sp, #44]
  403508:	b	403560 <wcrtomb@plt+0x770>
  40350c:	mov	w0, #0x9                   	// #9
  403510:	str	w0, [sp, #44]
  403514:	b	403560 <wcrtomb@plt+0x770>
  403518:	mov	w0, #0xa                   	// #10
  40351c:	str	w0, [sp, #44]
  403520:	b	403560 <wcrtomb@plt+0x770>
  403524:	mov	w0, #0xb                   	// #11
  403528:	str	w0, [sp, #44]
  40352c:	b	403560 <wcrtomb@plt+0x770>
  403530:	mov	w0, #0xc                   	// #12
  403534:	str	w0, [sp, #44]
  403538:	b	403560 <wcrtomb@plt+0x770>
  40353c:	mov	w0, #0xd                   	// #13
  403540:	str	w0, [sp, #44]
  403544:	b	403560 <wcrtomb@plt+0x770>
  403548:	mov	w0, #0xe                   	// #14
  40354c:	str	w0, [sp, #44]
  403550:	b	403560 <wcrtomb@plt+0x770>
  403554:	mov	w0, #0xf                   	// #15
  403558:	str	w0, [sp, #44]
  40355c:	nop
  403560:	ldr	w0, [sp, #44]
  403564:	cmp	w0, #0x0
  403568:	b.lt	4035cc <wcrtomb@plt+0x7dc>  // b.tstop
  40356c:	ldr	w1, [sp, #4]
  403570:	ldr	w0, [sp, #44]
  403574:	cmp	w1, w0
  403578:	b.le	4035cc <wcrtomb@plt+0x7dc>
  40357c:	ldr	w1, [sp, #60]
  403580:	ldr	w0, [sp, #4]
  403584:	mul	w0, w1, w0
  403588:	ldr	w1, [sp, #44]
  40358c:	add	w0, w1, w0
  403590:	str	w0, [sp, #60]
  403594:	ldr	x0, [sp, #48]
  403598:	add	x0, x0, #0x1
  40359c:	str	x0, [sp, #48]
  4035a0:	ldr	w1, [sp, #56]
  4035a4:	ldr	w0, [sp, #4]
  4035a8:	mul	w0, w1, w0
  4035ac:	str	w0, [sp, #56]
  4035b0:	ldr	x1, [sp, #48]
  4035b4:	ldr	x0, [sp, #8]
  4035b8:	cmp	x1, x0
  4035bc:	b.cs	4035cc <wcrtomb@plt+0x7dc>  // b.hs, b.nlast
  4035c0:	ldr	w0, [sp, #56]
  4035c4:	cmp	w0, #0xff
  4035c8:	b.le	403470 <wcrtomb@plt+0x680>
  4035cc:	ldr	x0, [sp, #16]
  4035d0:	add	x0, x0, #0x1
  4035d4:	ldr	x1, [sp, #48]
  4035d8:	cmp	x1, x0
  4035dc:	b.ne	4035f4 <wcrtomb@plt+0x804>  // b.any
  4035e0:	ldr	x0, [sp, #16]
  4035e4:	ldrb	w1, [x0]
  4035e8:	ldr	x0, [sp, #24]
  4035ec:	strb	w1, [x0]
  4035f0:	b	403604 <wcrtomb@plt+0x814>
  4035f4:	ldr	w0, [sp, #60]
  4035f8:	and	w1, w0, #0xff
  4035fc:	ldr	x0, [sp, #24]
  403600:	strb	w1, [x0]
  403604:	ldr	x0, [sp, #48]
  403608:	add	sp, sp, #0x40
  40360c:	ret
  403610:	stp	x29, x30, [sp, #-32]!
  403614:	mov	x29, sp
  403618:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40361c:	add	x0, x0, #0x760
  403620:	ldrb	w0, [x0]
  403624:	cmp	w0, #0x0
  403628:	b.eq	40363c <wcrtomb@plt+0x84c>  // b.none
  40362c:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  403630:	add	x0, x0, #0xc1c
  403634:	bl	402d80 <gettext@plt>
  403638:	bl	403010 <wcrtomb@plt+0x220>
  40363c:	bl	40e0e8 <wcrtomb@plt+0xb2f8>
  403640:	str	x0, [sp, #16]
  403644:	bl	4032e0 <wcrtomb@plt+0x4f0>
  403648:	str	w0, [sp, #28]
  40364c:	b	403660 <wcrtomb@plt+0x870>
  403650:	ldr	w1, [sp, #28]
  403654:	ldr	x0, [sp, #16]
  403658:	bl	403418 <wcrtomb@plt+0x628>
  40365c:	str	w0, [sp, #28]
  403660:	ldr	w0, [sp, #28]
  403664:	cmn	w0, #0x1
  403668:	b.eq	403678 <wcrtomb@plt+0x888>  // b.none
  40366c:	ldr	w0, [sp, #28]
  403670:	cmp	w0, #0xa
  403674:	b.ne	403650 <wcrtomb@plt+0x860>  // b.any
  403678:	mov	w1, #0x0                   	// #0
  40367c:	ldr	x0, [sp, #16]
  403680:	bl	40e2b0 <wcrtomb@plt+0xb4c0>
  403684:	ldr	x0, [sp, #16]
  403688:	ldp	x29, x30, [sp], #32
  40368c:	ret
  403690:	stp	x29, x30, [sp, #-128]!
  403694:	mov	x29, sp
  403698:	str	x0, [sp, #40]
  40369c:	str	x1, [sp, #32]
  4036a0:	str	w2, [sp, #28]
  4036a4:	bl	403610 <wcrtomb@plt+0x820>
  4036a8:	str	x0, [sp, #104]
  4036ac:	ldr	x0, [sp, #104]
  4036b0:	bl	40e134 <wcrtomb@plt+0xb344>
  4036b4:	str	x0, [sp, #96]
  4036b8:	ldr	x0, [sp, #96]
  4036bc:	ldrb	w0, [x0]
  4036c0:	cmp	w0, #0x0
  4036c4:	b.ne	4036d8 <wcrtomb@plt+0x8e8>  // b.any
  4036c8:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  4036cc:	add	x0, x0, #0xc44
  4036d0:	bl	402d80 <gettext@plt>
  4036d4:	bl	403010 <wcrtomb@plt+0x220>
  4036d8:	ldr	x0, [sp, #40]
  4036dc:	ldr	x0, [x0]
  4036e0:	str	x0, [sp, #120]
  4036e4:	b	40370c <wcrtomb@plt+0x91c>
  4036e8:	ldr	x0, [sp, #120]
  4036ec:	ldr	x0, [x0]
  4036f0:	ldr	x1, [sp, #96]
  4036f4:	bl	402b30 <strcmp@plt>
  4036f8:	cmp	w0, #0x0
  4036fc:	b.eq	40371c <wcrtomb@plt+0x92c>  // b.none
  403700:	ldr	x0, [sp, #120]
  403704:	ldr	x0, [x0, #24]
  403708:	str	x0, [sp, #120]
  40370c:	ldr	x0, [sp, #120]
  403710:	cmp	x0, #0x0
  403714:	b.ne	4036e8 <wcrtomb@plt+0x8f8>  // b.any
  403718:	b	403720 <wcrtomb@plt+0x930>
  40371c:	nop
  403720:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403724:	add	x0, x0, #0x8e8
  403728:	ldr	w0, [x0]
  40372c:	cmp	w0, #0x0
  403730:	b.ne	4037f0 <wcrtomb@plt+0xa00>  // b.any
  403734:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403738:	add	x0, x0, #0x3b0
  40373c:	str	x0, [sp, #112]
  403740:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403744:	add	x0, x0, #0x528
  403748:	ldr	x1, [x0]
  40374c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403750:	add	x0, x0, #0x540
  403754:	str	x1, [x0]
  403758:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40375c:	add	x0, x0, #0x520
  403760:	ldr	x1, [x0]
  403764:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403768:	add	x0, x0, #0x548
  40376c:	str	x1, [x0]
  403770:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403774:	add	x0, x0, #0x508
  403778:	ldr	x1, [x0]
  40377c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403780:	add	x0, x0, #0x550
  403784:	str	x1, [x0]
  403788:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40378c:	add	x0, x0, #0x3b0
  403790:	str	x0, [sp, #112]
  403794:	b	4037e0 <wcrtomb@plt+0x9f0>
  403798:	ldr	x0, [sp, #112]
  40379c:	ldr	x0, [x0]
  4037a0:	ldr	x1, [sp, #96]
  4037a4:	bl	402b30 <strcmp@plt>
  4037a8:	cmp	w0, #0x0
  4037ac:	b.ne	4037d4 <wcrtomb@plt+0x9e4>  // b.any
  4037b0:	ldr	x0, [sp, #112]
  4037b4:	ldr	x0, [x0, #32]
  4037b8:	ldr	x1, [x0]
  4037bc:	ldr	x0, [sp, #112]
  4037c0:	str	x1, [x0, #16]
  4037c4:	ldr	x0, [sp, #104]
  4037c8:	bl	40e344 <wcrtomb@plt+0xb554>
  4037cc:	ldr	x0, [sp, #112]
  4037d0:	b	403994 <wcrtomb@plt+0xba4>
  4037d4:	ldr	x0, [sp, #112]
  4037d8:	add	x0, x0, #0x28
  4037dc:	str	x0, [sp, #112]
  4037e0:	ldr	x0, [sp, #112]
  4037e4:	ldr	x0, [x0]
  4037e8:	cmp	x0, #0x0
  4037ec:	b.ne	403798 <wcrtomb@plt+0x9a8>  // b.any
  4037f0:	ldr	x0, [sp, #120]
  4037f4:	cmp	x0, #0x0
  4037f8:	b.ne	403988 <wcrtomb@plt+0xb98>  // b.any
  4037fc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403800:	add	x0, x0, #0x5b8
  403804:	str	x0, [sp, #88]
  403808:	ldr	x0, [sp, #88]
  40380c:	str	x0, [sp, #80]
  403810:	mov	x0, #0x20                  	// #32
  403814:	str	x0, [sp, #72]
  403818:	ldr	x0, [sp, #80]
  40381c:	str	x0, [sp, #64]
  403820:	ldr	x0, [sp, #64]
  403824:	ldr	x1, [x0, #32]
  403828:	ldr	x0, [sp, #64]
  40382c:	ldr	x0, [x0, #24]
  403830:	sub	x0, x1, x0
  403834:	mov	x1, x0
  403838:	ldr	x0, [sp, #72]
  40383c:	cmp	x1, x0
  403840:	b.cs	403850 <wcrtomb@plt+0xa60>  // b.hs, b.nlast
  403844:	ldr	x1, [sp, #72]
  403848:	ldr	x0, [sp, #80]
  40384c:	bl	41be60 <_obstack_newchunk@@Base>
  403850:	ldr	x0, [sp, #80]
  403854:	ldr	x1, [x0, #24]
  403858:	ldr	x0, [sp, #72]
  40385c:	add	x1, x1, x0
  403860:	ldr	x0, [sp, #80]
  403864:	str	x1, [x0, #24]
  403868:	ldr	x0, [sp, #88]
  40386c:	str	x0, [sp, #56]
  403870:	ldr	x0, [sp, #56]
  403874:	ldr	x0, [x0, #16]
  403878:	str	x0, [sp, #48]
  40387c:	ldr	x0, [sp, #56]
  403880:	ldr	x0, [x0, #24]
  403884:	ldr	x1, [sp, #48]
  403888:	cmp	x1, x0
  40388c:	b.ne	4038a0 <wcrtomb@plt+0xab0>  // b.any
  403890:	ldr	x0, [sp, #56]
  403894:	ldrb	w1, [x0, #80]
  403898:	orr	w1, w1, #0x2
  40389c:	strb	w1, [x0, #80]
  4038a0:	ldr	x0, [sp, #56]
  4038a4:	ldr	x0, [x0, #24]
  4038a8:	mov	x1, x0
  4038ac:	ldr	x0, [sp, #56]
  4038b0:	ldr	x0, [x0, #48]
  4038b4:	add	x1, x1, x0
  4038b8:	ldr	x0, [sp, #56]
  4038bc:	ldr	x0, [x0, #48]
  4038c0:	mvn	x0, x0
  4038c4:	and	x0, x1, x0
  4038c8:	mov	x1, x0
  4038cc:	ldr	x0, [sp, #56]
  4038d0:	str	x1, [x0, #24]
  4038d4:	ldr	x0, [sp, #56]
  4038d8:	ldr	x1, [x0, #24]
  4038dc:	ldr	x0, [sp, #56]
  4038e0:	ldr	x0, [x0, #8]
  4038e4:	sub	x0, x1, x0
  4038e8:	mov	x2, x0
  4038ec:	ldr	x0, [sp, #56]
  4038f0:	ldr	x1, [x0, #32]
  4038f4:	ldr	x0, [sp, #56]
  4038f8:	ldr	x0, [x0, #8]
  4038fc:	sub	x0, x1, x0
  403900:	cmp	x2, x0
  403904:	b.ls	403918 <wcrtomb@plt+0xb28>  // b.plast
  403908:	ldr	x0, [sp, #56]
  40390c:	ldr	x1, [x0, #32]
  403910:	ldr	x0, [sp, #56]
  403914:	str	x1, [x0, #24]
  403918:	ldr	x0, [sp, #56]
  40391c:	ldr	x1, [x0, #24]
  403920:	ldr	x0, [sp, #56]
  403924:	str	x1, [x0, #16]
  403928:	ldr	x0, [sp, #48]
  40392c:	str	x0, [sp, #120]
  403930:	ldr	x0, [sp, #96]
  403934:	bl	41ba7c <wcrtomb@plt+0x18c8c>
  403938:	mov	x1, x0
  40393c:	ldr	x0, [sp, #120]
  403940:	str	x1, [x0]
  403944:	ldr	x0, [sp, #120]
  403948:	ldr	x0, [x0]
  40394c:	ldr	w2, [sp, #28]
  403950:	ldr	x1, [sp, #32]
  403954:	bl	40d630 <wcrtomb@plt+0xa840>
  403958:	mov	x1, x0
  40395c:	ldr	x0, [sp, #120]
  403960:	str	x1, [x0, #16]
  403964:	ldr	x0, [sp, #120]
  403968:	strb	wzr, [x0, #8]
  40396c:	ldr	x0, [sp, #40]
  403970:	ldr	x1, [x0]
  403974:	ldr	x0, [sp, #120]
  403978:	str	x1, [x0, #24]
  40397c:	ldr	x0, [sp, #40]
  403980:	ldr	x1, [sp, #120]
  403984:	str	x1, [x0]
  403988:	ldr	x0, [sp, #104]
  40398c:	bl	40e344 <wcrtomb@plt+0xb554>
  403990:	ldr	x0, [sp, #120]
  403994:	ldp	x29, x30, [sp], #128
  403998:	ret
  40399c:	stp	x29, x30, [sp, #-48]!
  4039a0:	mov	x29, sp
  4039a4:	str	x0, [sp, #24]
  4039a8:	ldr	x0, [sp, #24]
  4039ac:	ldr	x0, [x0]
  4039b0:	str	x0, [sp, #40]
  4039b4:	ldr	x0, [sp, #40]
  4039b8:	ldr	x1, [x0, #16]
  4039bc:	ldr	x0, [sp, #40]
  4039c0:	ldr	x0, [x0, #8]
  4039c4:	cmp	x1, x0
  4039c8:	b.ne	403a0c <wcrtomb@plt+0xc1c>  // b.any
  4039cc:	ldr	x0, [sp, #40]
  4039d0:	ldr	x0, [x0, #8]
  4039d4:	add	x1, x0, #0x28
  4039d8:	ldr	x0, [sp, #40]
  4039dc:	str	x1, [x0, #8]
  4039e0:	ldr	x0, [sp, #40]
  4039e4:	ldr	x3, [x0]
  4039e8:	ldr	x0, [sp, #40]
  4039ec:	ldr	x0, [x0, #8]
  4039f0:	mov	x2, #0x28                  	// #40
  4039f4:	mov	x1, x0
  4039f8:	mov	x0, x3
  4039fc:	bl	41b714 <wcrtomb@plt+0x18924>
  403a00:	mov	x1, x0
  403a04:	ldr	x0, [sp, #40]
  403a08:	str	x1, [x0]
  403a0c:	ldr	x0, [sp, #40]
  403a10:	ldr	x2, [x0]
  403a14:	ldr	x0, [sp, #40]
  403a18:	ldr	x1, [x0, #16]
  403a1c:	mov	x0, x1
  403a20:	lsl	x0, x0, #2
  403a24:	add	x0, x0, x1
  403a28:	lsl	x0, x0, #3
  403a2c:	add	x0, x2, x0
  403a30:	str	x0, [sp, #32]
  403a34:	ldr	x0, [sp, #32]
  403a38:	str	xzr, [x0]
  403a3c:	ldr	x0, [sp, #32]
  403a40:	str	xzr, [x0, #8]
  403a44:	ldr	x0, [sp, #32]
  403a48:	str	wzr, [x0, #16]
  403a4c:	ldr	x0, [sp, #32]
  403a50:	strb	wzr, [x0, #20]
  403a54:	ldr	x0, [sp, #32]
  403a58:	strb	wzr, [x0, #21]
  403a5c:	ldr	x0, [sp, #24]
  403a60:	ldr	x1, [sp, #40]
  403a64:	str	x1, [x0]
  403a68:	ldr	x0, [sp, #32]
  403a6c:	ldp	x29, x30, [sp], #48
  403a70:	ret
  403a74:	stp	x29, x30, [sp, #-48]!
  403a78:	mov	x29, sp
  403a7c:	str	x0, [sp, #24]
  403a80:	str	x1, [sp, #16]
  403a84:	str	wzr, [sp, #40]
  403a88:	bl	403100 <wcrtomb@plt+0x310>
  403a8c:	str	w0, [sp, #44]
  403a90:	ldr	w0, [sp, #44]
  403a94:	cmp	w0, #0x5e
  403a98:	b.ne	403aac <wcrtomb@plt+0xcbc>  // b.any
  403a9c:	ldr	w1, [sp, #44]
  403aa0:	ldr	x0, [sp, #24]
  403aa4:	bl	403418 <wcrtomb@plt+0x628>
  403aa8:	str	w0, [sp, #44]
  403aac:	ldr	w0, [sp, #44]
  403ab0:	cmp	w0, #0x5d
  403ab4:	b.ne	403ac8 <wcrtomb@plt+0xcd8>  // b.any
  403ab8:	ldr	w1, [sp, #44]
  403abc:	ldr	x0, [sp, #24]
  403ac0:	bl	403418 <wcrtomb@plt+0x628>
  403ac4:	str	w0, [sp, #44]
  403ac8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403acc:	add	x0, x0, #0x8e4
  403ad0:	ldr	w0, [x0]
  403ad4:	cmp	w0, #0x1
  403ad8:	b.eq	403aec <wcrtomb@plt+0xcfc>  // b.none
  403adc:	ldr	x1, [sp, #16]
  403ae0:	ldr	w0, [sp, #44]
  403ae4:	bl	40bb14 <wcrtomb@plt+0x8d24>
  403ae8:	b	403af0 <wcrtomb@plt+0xd00>
  403aec:	mov	w0, #0x0                   	// #0
  403af0:	str	w0, [sp, #32]
  403af4:	ldr	w0, [sp, #44]
  403af8:	cmp	w0, #0x5d
  403afc:	b.eq	403c04 <wcrtomb@plt+0xe14>  // b.none
  403b00:	ldr	w0, [sp, #44]
  403b04:	cmp	w0, #0x5d
  403b08:	b.gt	403c44 <wcrtomb@plt+0xe54>
  403b0c:	ldr	w0, [sp, #44]
  403b10:	cmp	w0, #0x5b
  403b14:	b.eq	403be0 <wcrtomb@plt+0xdf0>  // b.none
  403b18:	ldr	w0, [sp, #44]
  403b1c:	cmp	w0, #0x5b
  403b20:	b.gt	403c44 <wcrtomb@plt+0xe54>
  403b24:	ldr	w0, [sp, #44]
  403b28:	cmp	w0, #0x3d
  403b2c:	b.eq	403b8c <wcrtomb@plt+0xd9c>  // b.none
  403b30:	ldr	w0, [sp, #44]
  403b34:	cmp	w0, #0x3d
  403b38:	b.gt	403c44 <wcrtomb@plt+0xe54>
  403b3c:	ldr	w0, [sp, #44]
  403b40:	cmp	w0, #0x3a
  403b44:	b.eq	403b8c <wcrtomb@plt+0xd9c>  // b.none
  403b48:	ldr	w0, [sp, #44]
  403b4c:	cmp	w0, #0x3a
  403b50:	b.gt	403c44 <wcrtomb@plt+0xe54>
  403b54:	ldr	w0, [sp, #44]
  403b58:	cmp	w0, #0x2e
  403b5c:	b.eq	403b8c <wcrtomb@plt+0xd9c>  // b.none
  403b60:	ldr	w0, [sp, #44]
  403b64:	cmp	w0, #0x2e
  403b68:	b.gt	403c44 <wcrtomb@plt+0xe54>
  403b6c:	ldr	w0, [sp, #44]
  403b70:	cmn	w0, #0x1
  403b74:	b.eq	403b84 <wcrtomb@plt+0xd94>  // b.none
  403b78:	ldr	w0, [sp, #44]
  403b7c:	cmp	w0, #0xa
  403b80:	b.ne	403c44 <wcrtomb@plt+0xe54>  // b.any
  403b84:	ldr	w0, [sp, #44]
  403b88:	b	403c98 <wcrtomb@plt+0xea8>
  403b8c:	ldr	w0, [sp, #32]
  403b90:	cmp	w0, #0x0
  403b94:	b.ne	403c68 <wcrtomb@plt+0xe78>  // b.any
  403b98:	ldr	w0, [sp, #40]
  403b9c:	cmp	w0, #0x1
  403ba0:	b.ne	403bb8 <wcrtomb@plt+0xdc8>  // b.any
  403ba4:	ldr	w0, [sp, #44]
  403ba8:	str	w0, [sp, #36]
  403bac:	mov	w0, #0x2                   	// #2
  403bb0:	str	w0, [sp, #40]
  403bb4:	b	403c84 <wcrtomb@plt+0xe94>
  403bb8:	ldr	w0, [sp, #40]
  403bbc:	cmp	w0, #0x2
  403bc0:	b.ne	403c4c <wcrtomb@plt+0xe5c>  // b.any
  403bc4:	ldr	w1, [sp, #44]
  403bc8:	ldr	w0, [sp, #36]
  403bcc:	cmp	w1, w0
  403bd0:	b.ne	403c4c <wcrtomb@plt+0xe5c>  // b.any
  403bd4:	mov	w0, #0x3                   	// #3
  403bd8:	str	w0, [sp, #40]
  403bdc:	b	403c84 <wcrtomb@plt+0xe94>
  403be0:	ldr	w0, [sp, #32]
  403be4:	cmp	w0, #0x0
  403be8:	b.ne	403c70 <wcrtomb@plt+0xe80>  // b.any
  403bec:	ldr	w0, [sp, #40]
  403bf0:	cmp	w0, #0x0
  403bf4:	b.ne	403c78 <wcrtomb@plt+0xe88>  // b.any
  403bf8:	mov	w0, #0x1                   	// #1
  403bfc:	str	w0, [sp, #40]
  403c00:	b	403c78 <wcrtomb@plt+0xe88>
  403c04:	ldr	w0, [sp, #32]
  403c08:	cmp	w0, #0x0
  403c0c:	b.ne	403c80 <wcrtomb@plt+0xe90>  // b.any
  403c10:	ldr	w0, [sp, #40]
  403c14:	cmp	w0, #0x0
  403c18:	b.eq	403c28 <wcrtomb@plt+0xe38>  // b.none
  403c1c:	ldr	w0, [sp, #40]
  403c20:	cmp	w0, #0x1
  403c24:	b.ne	403c30 <wcrtomb@plt+0xe40>  // b.any
  403c28:	ldr	w0, [sp, #44]
  403c2c:	b	403c98 <wcrtomb@plt+0xea8>
  403c30:	ldr	w0, [sp, #40]
  403c34:	cmp	w0, #0x3
  403c38:	b.ne	403c54 <wcrtomb@plt+0xe64>  // b.any
  403c3c:	str	wzr, [sp, #40]
  403c40:	b	403c54 <wcrtomb@plt+0xe64>
  403c44:	nop
  403c48:	b	403c58 <wcrtomb@plt+0xe68>
  403c4c:	nop
  403c50:	b	403c58 <wcrtomb@plt+0xe68>
  403c54:	nop
  403c58:	ldr	w0, [sp, #40]
  403c5c:	and	w0, w0, #0xfffffffe
  403c60:	str	w0, [sp, #40]
  403c64:	b	403c84 <wcrtomb@plt+0xe94>
  403c68:	nop
  403c6c:	b	403c84 <wcrtomb@plt+0xe94>
  403c70:	nop
  403c74:	b	403c84 <wcrtomb@plt+0xe94>
  403c78:	nop
  403c7c:	b	403c84 <wcrtomb@plt+0xe94>
  403c80:	nop
  403c84:	ldr	w1, [sp, #44]
  403c88:	ldr	x0, [sp, #24]
  403c8c:	bl	403418 <wcrtomb@plt+0x628>
  403c90:	str	w0, [sp, #44]
  403c94:	b	403ac8 <wcrtomb@plt+0xcd8>
  403c98:	ldp	x29, x30, [sp], #48
  403c9c:	ret
  403ca0:	stp	x29, x30, [sp, #-64]!
  403ca4:	mov	x29, sp
  403ca8:	str	w0, [sp, #28]
  403cac:	str	w1, [sp, #24]
  403cb0:	str	xzr, [sp, #32]
  403cb4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403cb8:	add	x0, x0, #0x8e4
  403cbc:	ldr	w0, [x0]
  403cc0:	cmp	w0, #0x1
  403cc4:	b.eq	403cec <wcrtomb@plt+0xefc>  // b.none
  403cc8:	add	x0, sp, #0x20
  403ccc:	mov	x1, x0
  403cd0:	ldr	w0, [sp, #28]
  403cd4:	bl	40bb14 <wcrtomb@plt+0x8d24>
  403cd8:	cmp	w0, #0x0
  403cdc:	b.eq	403cec <wcrtomb@plt+0xefc>  // b.none
  403ce0:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  403ce4:	add	x0, x0, #0xb48
  403ce8:	bl	403010 <wcrtomb@plt+0x220>
  403cec:	add	x0, sp, #0x20
  403cf0:	mov	x2, #0x8                   	// #8
  403cf4:	mov	w1, #0x0                   	// #0
  403cf8:	bl	402980 <memset@plt>
  403cfc:	bl	40e0e8 <wcrtomb@plt+0xb2f8>
  403d00:	str	x0, [sp, #48]
  403d04:	b	403e34 <wcrtomb@plt+0x1044>
  403d08:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  403d0c:	add	x0, x0, #0x8e4
  403d10:	ldr	w0, [x0]
  403d14:	cmp	w0, #0x1
  403d18:	b.eq	403d30 <wcrtomb@plt+0xf40>  // b.none
  403d1c:	add	x0, sp, #0x20
  403d20:	mov	x1, x0
  403d24:	ldr	w0, [sp, #60]
  403d28:	bl	40bb14 <wcrtomb@plt+0x8d24>
  403d2c:	b	403d34 <wcrtomb@plt+0xf44>
  403d30:	mov	w0, #0x0                   	// #0
  403d34:	str	w0, [sp, #44]
  403d38:	ldr	w0, [sp, #44]
  403d3c:	cmp	w0, #0x0
  403d40:	b.ne	403e28 <wcrtomb@plt+0x1038>  // b.any
  403d44:	ldr	w1, [sp, #60]
  403d48:	ldr	w0, [sp, #28]
  403d4c:	cmp	w1, w0
  403d50:	b.ne	403d5c <wcrtomb@plt+0xf6c>  // b.any
  403d54:	ldr	x0, [sp, #48]
  403d58:	b	403e84 <wcrtomb@plt+0x1094>
  403d5c:	ldr	w0, [sp, #60]
  403d60:	cmp	w0, #0x5c
  403d64:	b.ne	403de4 <wcrtomb@plt+0xff4>  // b.any
  403d68:	bl	403100 <wcrtomb@plt+0x310>
  403d6c:	str	w0, [sp, #60]
  403d70:	ldr	w0, [sp, #60]
  403d74:	cmn	w0, #0x1
  403d78:	b.eq	403e58 <wcrtomb@plt+0x1068>  // b.none
  403d7c:	ldr	w0, [sp, #60]
  403d80:	cmp	w0, #0x6e
  403d84:	b.ne	403da0 <wcrtomb@plt+0xfb0>  // b.any
  403d88:	ldr	w0, [sp, #24]
  403d8c:	cmp	w0, #0x0
  403d90:	b.eq	403da0 <wcrtomb@plt+0xfb0>  // b.none
  403d94:	mov	w0, #0xa                   	// #10
  403d98:	str	w0, [sp, #60]
  403d9c:	b	403e28 <wcrtomb@plt+0x1038>
  403da0:	ldr	w0, [sp, #60]
  403da4:	cmp	w0, #0xa
  403da8:	b.eq	403e28 <wcrtomb@plt+0x1038>  // b.none
  403dac:	ldr	w1, [sp, #60]
  403db0:	ldr	w0, [sp, #28]
  403db4:	cmp	w1, w0
  403db8:	b.ne	403dd4 <wcrtomb@plt+0xfe4>  // b.any
  403dbc:	ldr	w0, [sp, #24]
  403dc0:	cmp	w0, #0x0
  403dc4:	b.ne	403e28 <wcrtomb@plt+0x1038>  // b.any
  403dc8:	ldr	w0, [sp, #60]
  403dcc:	cmp	w0, #0x26
  403dd0:	b.ne	403e28 <wcrtomb@plt+0x1038>  // b.any
  403dd4:	mov	w1, #0x5c                  	// #92
  403dd8:	ldr	x0, [sp, #48]
  403ddc:	bl	40e2b0 <wcrtomb@plt+0xb4c0>
  403de0:	b	403e28 <wcrtomb@plt+0x1038>
  403de4:	ldr	w0, [sp, #60]
  403de8:	cmp	w0, #0x5b
  403dec:	b.ne	403e28 <wcrtomb@plt+0x1038>  // b.any
  403df0:	ldr	w0, [sp, #24]
  403df4:	cmp	w0, #0x0
  403df8:	b.eq	403e28 <wcrtomb@plt+0x1038>  // b.none
  403dfc:	ldr	w1, [sp, #60]
  403e00:	ldr	x0, [sp, #48]
  403e04:	bl	40e2b0 <wcrtomb@plt+0xb4c0>
  403e08:	add	x0, sp, #0x20
  403e0c:	mov	x1, x0
  403e10:	ldr	x0, [sp, #48]
  403e14:	bl	403a74 <wcrtomb@plt+0xc84>
  403e18:	str	w0, [sp, #60]
  403e1c:	ldr	w0, [sp, #60]
  403e20:	cmp	w0, #0x5d
  403e24:	b.ne	403e60 <wcrtomb@plt+0x1070>  // b.any
  403e28:	ldr	w1, [sp, #60]
  403e2c:	ldr	x0, [sp, #48]
  403e30:	bl	40e2b0 <wcrtomb@plt+0xb4c0>
  403e34:	bl	403100 <wcrtomb@plt+0x310>
  403e38:	str	w0, [sp, #60]
  403e3c:	ldr	w0, [sp, #60]
  403e40:	cmn	w0, #0x1
  403e44:	b.eq	403e64 <wcrtomb@plt+0x1074>  // b.none
  403e48:	ldr	w0, [sp, #60]
  403e4c:	cmp	w0, #0xa
  403e50:	b.ne	403d08 <wcrtomb@plt+0xf18>  // b.any
  403e54:	b	403e64 <wcrtomb@plt+0x1074>
  403e58:	nop
  403e5c:	b	403e64 <wcrtomb@plt+0x1074>
  403e60:	nop
  403e64:	ldr	w0, [sp, #60]
  403e68:	cmp	w0, #0xa
  403e6c:	b.ne	403e78 <wcrtomb@plt+0x1088>  // b.any
  403e70:	ldr	w0, [sp, #60]
  403e74:	bl	4031e0 <wcrtomb@plt+0x3f0>
  403e78:	ldr	x0, [sp, #48]
  403e7c:	bl	40e344 <wcrtomb@plt+0xb554>
  403e80:	mov	x0, #0x0                   	// #0
  403e84:	ldp	x29, x30, [sp], #64
  403e88:	ret
  403e8c:	stp	x29, x30, [sp, #-48]!
  403e90:	mov	x29, sp
  403e94:	str	x0, [sp, #24]
  403e98:	str	wzr, [sp, #44]
  403e9c:	ldr	x0, [sp, #24]
  403ea0:	ldrb	w1, [x0, #32]
  403ea4:	and	w1, w1, #0xfffffffe
  403ea8:	strb	w1, [x0, #32]
  403eac:	ldr	x0, [sp, #24]
  403eb0:	ldrb	w1, [x0, #32]
  403eb4:	and	w1, w1, #0xfffffff9
  403eb8:	strb	w1, [x0, #32]
  403ebc:	ldr	x0, [sp, #24]
  403ec0:	ldrb	w1, [x0, #32]
  403ec4:	and	w1, w1, #0xfffffff7
  403ec8:	strb	w1, [x0, #32]
  403ecc:	ldr	x0, [sp, #24]
  403ed0:	str	xzr, [x0, #16]
  403ed4:	ldr	x0, [sp, #24]
  403ed8:	str	xzr, [x0, #24]
  403edc:	bl	4032e0 <wcrtomb@plt+0x4f0>
  403ee0:	str	w0, [sp, #40]
  403ee4:	ldr	w0, [sp, #40]
  403ee8:	cmp	w0, #0x7d
  403eec:	b.eq	40421c <wcrtomb@plt+0x142c>  // b.none
  403ef0:	ldr	w0, [sp, #40]
  403ef4:	cmp	w0, #0x7d
  403ef8:	b.gt	404240 <wcrtomb@plt+0x1450>
  403efc:	ldr	w0, [sp, #40]
  403f00:	cmp	w0, #0x77
  403f04:	b.eq	404194 <wcrtomb@plt+0x13a4>  // b.none
  403f08:	ldr	w0, [sp, #40]
  403f0c:	cmp	w0, #0x77
  403f10:	b.gt	404240 <wcrtomb@plt+0x1450>
  403f14:	ldr	w0, [sp, #40]
  403f18:	cmp	w0, #0x70
  403f1c:	b.eq	4040d8 <wcrtomb@plt+0x12e8>  // b.none
  403f20:	ldr	w0, [sp, #40]
  403f24:	cmp	w0, #0x70
  403f28:	b.gt	404240 <wcrtomb@plt+0x1450>
  403f2c:	ldr	w0, [sp, #40]
  403f30:	cmp	w0, #0x6d
  403f34:	b.eq	40406c <wcrtomb@plt+0x127c>  // b.none
  403f38:	ldr	w0, [sp, #40]
  403f3c:	cmp	w0, #0x6d
  403f40:	b.gt	404240 <wcrtomb@plt+0x1450>
  403f44:	ldr	w0, [sp, #40]
  403f48:	cmp	w0, #0x69
  403f4c:	b.eq	404038 <wcrtomb@plt+0x1248>  // b.none
  403f50:	ldr	w0, [sp, #40]
  403f54:	cmp	w0, #0x69
  403f58:	b.gt	404240 <wcrtomb@plt+0x1450>
  403f5c:	ldr	w0, [sp, #40]
  403f60:	cmp	w0, #0x67
  403f64:	b.eq	404158 <wcrtomb@plt+0x1368>  // b.none
  403f68:	ldr	w0, [sp, #40]
  403f6c:	cmp	w0, #0x67
  403f70:	b.gt	404240 <wcrtomb@plt+0x1450>
  403f74:	ldr	w0, [sp, #40]
  403f78:	cmp	w0, #0x65
  403f7c:	b.eq	4040a0 <wcrtomb@plt+0x12b0>  // b.none
  403f80:	ldr	w0, [sp, #40]
  403f84:	cmp	w0, #0x65
  403f88:	b.gt	404240 <wcrtomb@plt+0x1450>
  403f8c:	ldr	w0, [sp, #40]
  403f90:	cmp	w0, #0x4d
  403f94:	b.eq	40406c <wcrtomb@plt+0x127c>  // b.none
  403f98:	ldr	w0, [sp, #40]
  403f9c:	cmp	w0, #0x4d
  403fa0:	b.gt	404240 <wcrtomb@plt+0x1450>
  403fa4:	ldr	w0, [sp, #40]
  403fa8:	cmp	w0, #0x49
  403fac:	b.eq	404038 <wcrtomb@plt+0x1248>  // b.none
  403fb0:	ldr	w0, [sp, #40]
  403fb4:	cmp	w0, #0x49
  403fb8:	b.gt	404240 <wcrtomb@plt+0x1450>
  403fbc:	ldr	w0, [sp, #40]
  403fc0:	cmp	w0, #0x3b
  403fc4:	b.eq	404224 <wcrtomb@plt+0x1434>  // b.none
  403fc8:	ldr	w0, [sp, #40]
  403fcc:	cmp	w0, #0x3b
  403fd0:	b.gt	404240 <wcrtomb@plt+0x1450>
  403fd4:	ldr	w0, [sp, #40]
  403fd8:	cmp	w0, #0x39
  403fdc:	b.gt	404240 <wcrtomb@plt+0x1450>
  403fe0:	ldr	w0, [sp, #40]
  403fe4:	cmp	w0, #0x30
  403fe8:	b.ge	4041c8 <wcrtomb@plt+0x13d8>  // b.tcont
  403fec:	ldr	w0, [sp, #40]
  403ff0:	cmp	w0, #0x23
  403ff4:	b.eq	40421c <wcrtomb@plt+0x142c>  // b.none
  403ff8:	ldr	w0, [sp, #40]
  403ffc:	cmp	w0, #0x23
  404000:	b.gt	404240 <wcrtomb@plt+0x1450>
  404004:	ldr	w0, [sp, #40]
  404008:	cmp	w0, #0xd
  40400c:	b.eq	40422c <wcrtomb@plt+0x143c>  // b.none
  404010:	ldr	w0, [sp, #40]
  404014:	cmp	w0, #0xd
  404018:	b.gt	404240 <wcrtomb@plt+0x1450>
  40401c:	ldr	w0, [sp, #40]
  404020:	cmn	w0, #0x1
  404024:	b.eq	404224 <wcrtomb@plt+0x1434>  // b.none
  404028:	ldr	w0, [sp, #40]
  40402c:	cmp	w0, #0xa
  404030:	b.eq	404224 <wcrtomb@plt+0x1434>  // b.none
  404034:	b	404240 <wcrtomb@plt+0x1450>
  404038:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40403c:	add	x0, x0, #0x8e8
  404040:	ldr	w0, [x0]
  404044:	cmp	w0, #0x2
  404048:	b.ne	40405c <wcrtomb@plt+0x126c>  // b.any
  40404c:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  404050:	add	x0, x0, #0xa68
  404054:	bl	402d80 <gettext@plt>
  404058:	bl	403010 <wcrtomb@plt+0x220>
  40405c:	ldr	w0, [sp, #44]
  404060:	orr	w0, w0, #0x2
  404064:	str	w0, [sp, #44]
  404068:	b	404254 <wcrtomb@plt+0x1464>
  40406c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404070:	add	x0, x0, #0x8e8
  404074:	ldr	w0, [x0]
  404078:	cmp	w0, #0x2
  40407c:	b.ne	404090 <wcrtomb@plt+0x12a0>  // b.any
  404080:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  404084:	add	x0, x0, #0xa68
  404088:	bl	402d80 <gettext@plt>
  40408c:	bl	403010 <wcrtomb@plt+0x220>
  404090:	ldr	w0, [sp, #44]
  404094:	orr	w0, w0, #0x4
  404098:	str	w0, [sp, #44]
  40409c:	b	404254 <wcrtomb@plt+0x1464>
  4040a0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4040a4:	add	x0, x0, #0x8e8
  4040a8:	ldr	w0, [x0]
  4040ac:	cmp	w0, #0x2
  4040b0:	b.ne	4040c4 <wcrtomb@plt+0x12d4>  // b.any
  4040b4:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  4040b8:	add	x0, x0, #0xa68
  4040bc:	bl	402d80 <gettext@plt>
  4040c0:	bl	403010 <wcrtomb@plt+0x220>
  4040c4:	ldr	x0, [sp, #24]
  4040c8:	ldrb	w1, [x0, #32]
  4040cc:	orr	w1, w1, #0x8
  4040d0:	strb	w1, [x0, #32]
  4040d4:	b	404254 <wcrtomb@plt+0x1464>
  4040d8:	ldr	x0, [sp, #24]
  4040dc:	ldrb	w0, [x0, #32]
  4040e0:	and	w0, w0, #0x6
  4040e4:	and	w0, w0, #0xff
  4040e8:	cmp	w0, #0x0
  4040ec:	b.eq	404100 <wcrtomb@plt+0x1310>  // b.none
  4040f0:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  4040f4:	add	x0, x0, #0xa7e
  4040f8:	bl	402d80 <gettext@plt>
  4040fc:	bl	403010 <wcrtomb@plt+0x220>
  404100:	ldr	x0, [sp, #24]
  404104:	ldrb	w0, [x0, #32]
  404108:	ubfx	x0, x0, #1, #2
  40410c:	and	w0, w0, #0xff
  404110:	sxtb	w1, w0
  404114:	ldr	x0, [sp, #24]
  404118:	ldrb	w0, [x0, #32]
  40411c:	ubfx	x0, x0, #3, #1
  404120:	and	w0, w0, #0xff
  404124:	mov	w2, w0
  404128:	mov	w0, #0x1                   	// #1
  40412c:	lsl	w0, w0, w2
  404130:	sxtb	w0, w0
  404134:	orr	w0, w1, w0
  404138:	sxtb	w0, w0
  40413c:	and	w0, w0, #0x3
  404140:	and	w2, w0, #0xff
  404144:	ldr	x1, [sp, #24]
  404148:	ldrb	w0, [x1, #32]
  40414c:	bfi	w0, w2, #1, #2
  404150:	strb	w0, [x1, #32]
  404154:	b	404254 <wcrtomb@plt+0x1464>
  404158:	ldr	x0, [sp, #24]
  40415c:	ldrb	w0, [x0, #32]
  404160:	and	w0, w0, #0x1
  404164:	and	w0, w0, #0xff
  404168:	cmp	w0, #0x0
  40416c:	b.eq	404180 <wcrtomb@plt+0x1390>  // b.none
  404170:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  404174:	add	x0, x0, #0xaa2
  404178:	bl	402d80 <gettext@plt>
  40417c:	bl	403010 <wcrtomb@plt+0x220>
  404180:	ldr	x0, [sp, #24]
  404184:	ldrb	w1, [x0, #32]
  404188:	orr	w1, w1, #0x1
  40418c:	strb	w1, [x0, #32]
  404190:	b	404254 <wcrtomb@plt+0x1464>
  404194:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404198:	add	x0, x0, #0x480
  40419c:	ldr	x0, [x0]
  4041a0:	mov	w2, #0x1                   	// #1
  4041a4:	mov	x1, x0
  4041a8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4041ac:	add	x0, x0, #0x618
  4041b0:	bl	403690 <wcrtomb@plt+0x8a0>
  4041b4:	mov	x1, x0
  4041b8:	ldr	x0, [sp, #24]
  4041bc:	str	x1, [x0, #24]
  4041c0:	ldr	w0, [sp, #44]
  4041c4:	b	404258 <wcrtomb@plt+0x1468>
  4041c8:	ldr	x0, [sp, #24]
  4041cc:	ldr	x0, [x0, #16]
  4041d0:	cmp	x0, #0x0
  4041d4:	b.eq	4041e8 <wcrtomb@plt+0x13f8>  // b.none
  4041d8:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  4041dc:	add	x0, x0, #0xac6
  4041e0:	bl	402d80 <gettext@plt>
  4041e4:	bl	403010 <wcrtomb@plt+0x220>
  4041e8:	ldr	w0, [sp, #40]
  4041ec:	bl	403394 <wcrtomb@plt+0x5a4>
  4041f0:	mov	x1, x0
  4041f4:	ldr	x0, [sp, #24]
  4041f8:	str	x1, [x0, #16]
  4041fc:	ldr	x0, [sp, #24]
  404200:	ldr	x0, [x0, #16]
  404204:	cmp	x0, #0x0
  404208:	b.ne	404250 <wcrtomb@plt+0x1460>  // b.any
  40420c:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  404210:	add	x0, x0, #0xaed
  404214:	bl	402d80 <gettext@plt>
  404218:	bl	403010 <wcrtomb@plt+0x220>
  40421c:	ldr	w0, [sp, #40]
  404220:	bl	4031e0 <wcrtomb@plt+0x3f0>
  404224:	ldr	w0, [sp, #44]
  404228:	b	404258 <wcrtomb@plt+0x1468>
  40422c:	bl	403100 <wcrtomb@plt+0x310>
  404230:	cmp	w0, #0xa
  404234:	b.ne	404240 <wcrtomb@plt+0x1450>  // b.any
  404238:	ldr	w0, [sp, #44]
  40423c:	b	404258 <wcrtomb@plt+0x1468>
  404240:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  404244:	add	x0, x0, #0xa68
  404248:	bl	402d80 <gettext@plt>
  40424c:	bl	403010 <wcrtomb@plt+0x220>
  404250:	nop
  404254:	b	403edc <wcrtomb@plt+0x10ec>
  404258:	ldp	x29, x30, [sp], #48
  40425c:	ret
  404260:	stp	x29, x30, [sp, #-48]!
  404264:	mov	x29, sp
  404268:	bl	40e0e8 <wcrtomb@plt+0xb2f8>
  40426c:	str	x0, [sp, #32]
  404270:	bl	4032e0 <wcrtomb@plt+0x4f0>
  404274:	str	w0, [sp, #44]
  404278:	b	40428c <wcrtomb@plt+0x149c>
  40427c:	ldr	w1, [sp, #44]
  404280:	ldr	x0, [sp, #32]
  404284:	bl	403418 <wcrtomb@plt+0x628>
  404288:	str	w0, [sp, #44]
  40428c:	ldr	w0, [sp, #44]
  404290:	cmn	w0, #0x1
  404294:	b.eq	4042ec <wcrtomb@plt+0x14fc>  // b.none
  404298:	ldr	w0, [sp, #44]
  40429c:	cmp	w0, #0xa
  4042a0:	b.eq	4042ec <wcrtomb@plt+0x14fc>  // b.none
  4042a4:	bl	402b40 <__ctype_b_loc@plt>
  4042a8:	ldr	x1, [x0]
  4042ac:	ldrsw	x0, [sp, #44]
  4042b0:	lsl	x0, x0, #1
  4042b4:	add	x0, x1, x0
  4042b8:	ldrh	w0, [x0]
  4042bc:	and	w0, w0, #0x1
  4042c0:	cmp	w0, #0x0
  4042c4:	b.ne	4042ec <wcrtomb@plt+0x14fc>  // b.any
  4042c8:	ldr	w0, [sp, #44]
  4042cc:	cmp	w0, #0x3b
  4042d0:	b.eq	4042ec <wcrtomb@plt+0x14fc>  // b.none
  4042d4:	ldr	w0, [sp, #44]
  4042d8:	cmp	w0, #0x7d
  4042dc:	b.eq	4042ec <wcrtomb@plt+0x14fc>  // b.none
  4042e0:	ldr	w0, [sp, #44]
  4042e4:	cmp	w0, #0x23
  4042e8:	b.ne	40427c <wcrtomb@plt+0x148c>  // b.any
  4042ec:	ldr	w0, [sp, #44]
  4042f0:	bl	4031e0 <wcrtomb@plt+0x3f0>
  4042f4:	mov	w1, #0x0                   	// #0
  4042f8:	ldr	x0, [sp, #32]
  4042fc:	bl	40e2b0 <wcrtomb@plt+0xb4c0>
  404300:	ldr	x0, [sp, #32]
  404304:	bl	40e134 <wcrtomb@plt+0xb344>
  404308:	bl	41ba7c <wcrtomb@plt+0x18c8c>
  40430c:	str	x0, [sp, #24]
  404310:	ldr	x0, [sp, #32]
  404314:	bl	40e344 <wcrtomb@plt+0xb554>
  404318:	ldr	x0, [sp, #24]
  40431c:	ldp	x29, x30, [sp], #48
  404320:	ret
  404324:	stp	x29, x30, [sp, #-112]!
  404328:	mov	x29, sp
  40432c:	str	x0, [sp, #40]
  404330:	str	x1, [sp, #32]
  404334:	str	x2, [sp, #24]
  404338:	str	x3, [sp, #16]
  40433c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404340:	add	x0, x0, #0x5b8
  404344:	str	x0, [sp, #104]
  404348:	ldr	x0, [sp, #104]
  40434c:	str	x0, [sp, #96]
  404350:	mov	x0, #0x30                  	// #48
  404354:	str	x0, [sp, #88]
  404358:	ldr	x0, [sp, #96]
  40435c:	str	x0, [sp, #80]
  404360:	ldr	x0, [sp, #80]
  404364:	ldr	x1, [x0, #32]
  404368:	ldr	x0, [sp, #80]
  40436c:	ldr	x0, [x0, #24]
  404370:	sub	x0, x1, x0
  404374:	mov	x1, x0
  404378:	ldr	x0, [sp, #88]
  40437c:	cmp	x1, x0
  404380:	b.cs	404390 <wcrtomb@plt+0x15a0>  // b.hs, b.nlast
  404384:	ldr	x1, [sp, #88]
  404388:	ldr	x0, [sp, #96]
  40438c:	bl	41be60 <_obstack_newchunk@@Base>
  404390:	ldr	x0, [sp, #96]
  404394:	ldr	x1, [x0, #24]
  404398:	ldr	x0, [sp, #88]
  40439c:	add	x1, x1, x0
  4043a0:	ldr	x0, [sp, #96]
  4043a4:	str	x1, [x0, #24]
  4043a8:	ldr	x0, [sp, #104]
  4043ac:	str	x0, [sp, #72]
  4043b0:	ldr	x0, [sp, #72]
  4043b4:	ldr	x0, [x0, #16]
  4043b8:	str	x0, [sp, #64]
  4043bc:	ldr	x0, [sp, #72]
  4043c0:	ldr	x0, [x0, #24]
  4043c4:	ldr	x1, [sp, #64]
  4043c8:	cmp	x1, x0
  4043cc:	b.ne	4043e0 <wcrtomb@plt+0x15f0>  // b.any
  4043d0:	ldr	x0, [sp, #72]
  4043d4:	ldrb	w1, [x0, #80]
  4043d8:	orr	w1, w1, #0x2
  4043dc:	strb	w1, [x0, #80]
  4043e0:	ldr	x0, [sp, #72]
  4043e4:	ldr	x0, [x0, #24]
  4043e8:	mov	x1, x0
  4043ec:	ldr	x0, [sp, #72]
  4043f0:	ldr	x0, [x0, #48]
  4043f4:	add	x1, x1, x0
  4043f8:	ldr	x0, [sp, #72]
  4043fc:	ldr	x0, [x0, #48]
  404400:	mvn	x0, x0
  404404:	and	x0, x1, x0
  404408:	mov	x1, x0
  40440c:	ldr	x0, [sp, #72]
  404410:	str	x1, [x0, #24]
  404414:	ldr	x0, [sp, #72]
  404418:	ldr	x1, [x0, #24]
  40441c:	ldr	x0, [sp, #72]
  404420:	ldr	x0, [x0, #8]
  404424:	sub	x0, x1, x0
  404428:	mov	x2, x0
  40442c:	ldr	x0, [sp, #72]
  404430:	ldr	x1, [x0, #32]
  404434:	ldr	x0, [sp, #72]
  404438:	ldr	x0, [x0, #8]
  40443c:	sub	x0, x1, x0
  404440:	cmp	x2, x0
  404444:	b.ls	404458 <wcrtomb@plt+0x1668>  // b.plast
  404448:	ldr	x0, [sp, #72]
  40444c:	ldr	x1, [x0, #32]
  404450:	ldr	x0, [sp, #72]
  404454:	str	x1, [x0, #24]
  404458:	ldr	x0, [sp, #72]
  40445c:	ldr	x1, [x0, #24]
  404460:	ldr	x0, [sp, #72]
  404464:	str	x1, [x0, #16]
  404468:	ldr	x0, [sp, #64]
  40446c:	str	x0, [sp, #56]
  404470:	ldr	x0, [sp, #56]
  404474:	ldr	x1, [sp, #32]
  404478:	str	x1, [x0]
  40447c:	ldr	x0, [sp, #56]
  404480:	ldr	x1, [sp, #24]
  404484:	str	x1, [x0, #8]
  404488:	ldr	x0, [sp, #16]
  40448c:	cmp	x0, #0x0
  404490:	b.eq	4044a8 <wcrtomb@plt+0x16b8>  // b.none
  404494:	ldr	x0, [sp, #56]
  404498:	add	x0, x0, #0x10
  40449c:	mov	x2, #0x18                  	// #24
  4044a0:	ldr	x1, [sp, #16]
  4044a4:	bl	4026d0 <memcpy@plt>
  4044a8:	ldr	x0, [sp, #56]
  4044ac:	ldr	x1, [sp, #40]
  4044b0:	str	x1, [x0, #40]
  4044b4:	ldr	x0, [sp, #56]
  4044b8:	ldp	x29, x30, [sp], #112
  4044bc:	ret
  4044c0:	stp	x29, x30, [sp, #-48]!
  4044c4:	mov	x29, sp
  4044c8:	str	x0, [sp, #24]
  4044cc:	ldr	x0, [sp, #24]
  4044d0:	cmp	x0, #0x0
  4044d4:	b.ne	4044e0 <wcrtomb@plt+0x16f0>  // b.any
  4044d8:	mov	x0, #0x0                   	// #0
  4044dc:	b	4044fc <wcrtomb@plt+0x170c>
  4044e0:	ldr	x0, [sp, #24]
  4044e4:	ldr	x0, [x0, #40]
  4044e8:	str	x0, [sp, #40]
  4044ec:	ldr	x0, [sp, #24]
  4044f0:	ldr	x0, [x0, #8]
  4044f4:	bl	402b60 <free@plt>
  4044f8:	ldr	x0, [sp, #40]
  4044fc:	ldp	x29, x30, [sp], #48
  404500:	ret
  404504:	stp	x29, x30, [sp, #-112]!
  404508:	mov	x29, sp
  40450c:	str	x0, [sp, #40]
  404510:	str	x1, [sp, #32]
  404514:	str	w2, [sp, #28]
  404518:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40451c:	add	x0, x0, #0x5b8
  404520:	str	x0, [sp, #104]
  404524:	ldr	x0, [sp, #104]
  404528:	str	x0, [sp, #96]
  40452c:	mov	x0, #0x20                  	// #32
  404530:	str	x0, [sp, #88]
  404534:	ldr	x0, [sp, #96]
  404538:	str	x0, [sp, #80]
  40453c:	ldr	x0, [sp, #80]
  404540:	ldr	x1, [x0, #32]
  404544:	ldr	x0, [sp, #80]
  404548:	ldr	x0, [x0, #24]
  40454c:	sub	x0, x1, x0
  404550:	mov	x1, x0
  404554:	ldr	x0, [sp, #88]
  404558:	cmp	x1, x0
  40455c:	b.cs	40456c <wcrtomb@plt+0x177c>  // b.hs, b.nlast
  404560:	ldr	x1, [sp, #88]
  404564:	ldr	x0, [sp, #96]
  404568:	bl	41be60 <_obstack_newchunk@@Base>
  40456c:	ldr	x0, [sp, #96]
  404570:	ldr	x1, [x0, #24]
  404574:	ldr	x0, [sp, #88]
  404578:	add	x1, x1, x0
  40457c:	ldr	x0, [sp, #96]
  404580:	str	x1, [x0, #24]
  404584:	ldr	x0, [sp, #104]
  404588:	str	x0, [sp, #72]
  40458c:	ldr	x0, [sp, #72]
  404590:	ldr	x0, [x0, #16]
  404594:	str	x0, [sp, #64]
  404598:	ldr	x0, [sp, #72]
  40459c:	ldr	x0, [x0, #24]
  4045a0:	ldr	x1, [sp, #64]
  4045a4:	cmp	x1, x0
  4045a8:	b.ne	4045bc <wcrtomb@plt+0x17cc>  // b.any
  4045ac:	ldr	x0, [sp, #72]
  4045b0:	ldrb	w1, [x0, #80]
  4045b4:	orr	w1, w1, #0x2
  4045b8:	strb	w1, [x0, #80]
  4045bc:	ldr	x0, [sp, #72]
  4045c0:	ldr	x0, [x0, #24]
  4045c4:	mov	x1, x0
  4045c8:	ldr	x0, [sp, #72]
  4045cc:	ldr	x0, [x0, #48]
  4045d0:	add	x1, x1, x0
  4045d4:	ldr	x0, [sp, #72]
  4045d8:	ldr	x0, [x0, #48]
  4045dc:	mvn	x0, x0
  4045e0:	and	x0, x1, x0
  4045e4:	mov	x1, x0
  4045e8:	ldr	x0, [sp, #72]
  4045ec:	str	x1, [x0, #24]
  4045f0:	ldr	x0, [sp, #72]
  4045f4:	ldr	x1, [x0, #24]
  4045f8:	ldr	x0, [sp, #72]
  4045fc:	ldr	x0, [x0, #8]
  404600:	sub	x0, x1, x0
  404604:	mov	x2, x0
  404608:	ldr	x0, [sp, #72]
  40460c:	ldr	x1, [x0, #32]
  404610:	ldr	x0, [sp, #72]
  404614:	ldr	x0, [x0, #8]
  404618:	sub	x0, x1, x0
  40461c:	cmp	x2, x0
  404620:	b.ls	404634 <wcrtomb@plt+0x1844>  // b.plast
  404624:	ldr	x0, [sp, #72]
  404628:	ldr	x1, [x0, #32]
  40462c:	ldr	x0, [sp, #72]
  404630:	str	x1, [x0, #24]
  404634:	ldr	x0, [sp, #72]
  404638:	ldr	x1, [x0, #24]
  40463c:	ldr	x0, [sp, #72]
  404640:	str	x1, [x0, #16]
  404644:	ldr	x0, [sp, #64]
  404648:	str	x0, [sp, #56]
  40464c:	ldr	x0, [sp, #56]
  404650:	ldr	x1, [sp, #40]
  404654:	str	x1, [x0]
  404658:	ldr	x0, [sp, #56]
  40465c:	ldr	x1, [sp, #32]
  404660:	str	x1, [x0, #8]
  404664:	ldr	x0, [sp, #56]
  404668:	mov	w1, #0xffffffff            	// #-1
  40466c:	str	w1, [x0, #16]
  404670:	ldr	x0, [sp, #56]
  404674:	ldr	w1, [sp, #28]
  404678:	str	w1, [x0, #20]
  40467c:	ldr	x0, [sp, #56]
  404680:	ldp	x29, x30, [sp], #112
  404684:	ret
  404688:	stp	x29, x30, [sp, #-128]!
  40468c:	mov	x29, sp
  404690:	str	x0, [sp, #40]
  404694:	str	x1, [sp, #32]
  404698:	str	x2, [sp, #24]
  40469c:	str	wzr, [sp, #108]
  4046a0:	str	wzr, [sp, #104]
  4046a4:	ldr	x0, [sp, #40]
  4046a8:	ldrb	w1, [x0, #32]
  4046ac:	and	w1, w1, #0xf
  4046b0:	strb	w1, [x0, #32]
  4046b4:	ldr	x1, [sp, #24]
  4046b8:	ldr	x0, [sp, #32]
  4046bc:	bl	41ba50 <wcrtomb@plt+0x18c60>
  4046c0:	str	x0, [sp, #120]
  4046c4:	mov	w2, #0x1                   	// #1
  4046c8:	ldr	x1, [sp, #24]
  4046cc:	ldr	x0, [sp, #120]
  4046d0:	bl	4060a0 <wcrtomb@plt+0x32b0>
  4046d4:	str	x0, [sp, #24]
  4046d8:	ldr	x1, [sp, #120]
  4046dc:	ldr	x0, [sp, #24]
  4046e0:	add	x0, x1, x0
  4046e4:	str	x0, [sp, #88]
  4046e8:	add	x0, sp, #0x38
  4046ec:	str	x0, [sp, #96]
  4046f0:	ldr	x0, [sp, #120]
  4046f4:	str	x0, [sp, #112]
  4046f8:	b	4049bc <wcrtomb@plt+0x1bcc>
  4046fc:	ldr	x0, [sp, #112]
  404700:	ldrb	w0, [x0]
  404704:	cmp	w0, #0x5c
  404708:	b.ne	404950 <wcrtomb@plt+0x1b60>  // b.any
  40470c:	ldr	x1, [sp, #112]
  404710:	ldr	x0, [sp, #120]
  404714:	sub	x0, x1, x0
  404718:	ldr	w2, [sp, #108]
  40471c:	mov	x1, x0
  404720:	ldr	x0, [sp, #120]
  404724:	bl	404504 <wcrtomb@plt+0x1714>
  404728:	mov	x1, x0
  40472c:	ldr	x0, [sp, #96]
  404730:	str	x1, [x0, #24]
  404734:	ldr	x0, [sp, #96]
  404738:	ldr	x0, [x0, #24]
  40473c:	str	x0, [sp, #96]
  404740:	ldr	w0, [sp, #104]
  404744:	str	w0, [sp, #108]
  404748:	ldr	x0, [sp, #112]
  40474c:	add	x0, x0, #0x1
  404750:	str	x0, [sp, #112]
  404754:	ldr	x1, [sp, #112]
  404758:	ldr	x0, [sp, #88]
  40475c:	cmp	x1, x0
  404760:	b.ne	40477c <wcrtomb@plt+0x198c>  // b.any
  404764:	ldr	x0, [sp, #96]
  404768:	ldr	x0, [x0, #8]
  40476c:	add	x1, x0, #0x1
  404770:	ldr	x0, [sp, #96]
  404774:	str	x1, [x0, #8]
  404778:	b	404940 <wcrtomb@plt+0x1b50>
  40477c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404780:	add	x0, x0, #0x8e8
  404784:	ldr	w0, [x0]
  404788:	cmp	w0, #0x2
  40478c:	b.ne	4047e8 <wcrtomb@plt+0x19f8>  // b.any
  404790:	bl	402b40 <__ctype_b_loc@plt>
  404794:	ldr	x1, [x0]
  404798:	ldr	x0, [sp, #112]
  40479c:	ldrb	w0, [x0]
  4047a0:	and	x0, x0, #0xff
  4047a4:	lsl	x0, x0, #1
  4047a8:	add	x0, x1, x0
  4047ac:	ldrh	w0, [x0]
  4047b0:	and	w0, w0, #0x800
  4047b4:	cmp	w0, #0x0
  4047b8:	b.ne	4047e8 <wcrtomb@plt+0x19f8>  // b.any
  4047bc:	ldr	x0, [sp, #112]
  4047c0:	sub	x0, x0, #0x1
  4047c4:	ldr	x1, [sp, #112]
  4047c8:	ldrb	w1, [x1]
  4047cc:	strb	w1, [x0]
  4047d0:	ldr	x0, [sp, #96]
  4047d4:	ldr	x0, [x0, #8]
  4047d8:	add	x1, x0, #0x1
  4047dc:	ldr	x0, [sp, #96]
  4047e0:	str	x1, [x0, #8]
  4047e4:	b	404940 <wcrtomb@plt+0x1b50>
  4047e8:	ldr	x0, [sp, #112]
  4047ec:	ldrb	w0, [x0]
  4047f0:	cmp	w0, #0x75
  4047f4:	b.eq	4048f8 <wcrtomb@plt+0x1b08>  // b.none
  4047f8:	cmp	w0, #0x75
  4047fc:	b.gt	404910 <wcrtomb@plt+0x1b20>
  404800:	cmp	w0, #0x6c
  404804:	b.eq	4048e0 <wcrtomb@plt+0x1af0>  // b.none
  404808:	cmp	w0, #0x6c
  40480c:	b.gt	404910 <wcrtomb@plt+0x1b20>
  404810:	cmp	w0, #0x55
  404814:	b.eq	4048c0 <wcrtomb@plt+0x1ad0>  // b.none
  404818:	cmp	w0, #0x55
  40481c:	b.gt	404910 <wcrtomb@plt+0x1b20>
  404820:	cmp	w0, #0x4c
  404824:	b.eq	4048ac <wcrtomb@plt+0x1abc>  // b.none
  404828:	cmp	w0, #0x4c
  40482c:	b.gt	404910 <wcrtomb@plt+0x1b20>
  404830:	cmp	w0, #0x39
  404834:	b.gt	404844 <wcrtomb@plt+0x1a54>
  404838:	cmp	w0, #0x30
  40483c:	b.ge	404850 <wcrtomb@plt+0x1a60>  // b.tcont
  404840:	b	404910 <wcrtomb@plt+0x1b20>
  404844:	cmp	w0, #0x45
  404848:	b.eq	4048d4 <wcrtomb@plt+0x1ae4>  // b.none
  40484c:	b	404910 <wcrtomb@plt+0x1b20>
  404850:	ldr	x0, [sp, #112]
  404854:	ldrb	w0, [x0]
  404858:	sub	w1, w0, #0x30
  40485c:	ldr	x0, [sp, #96]
  404860:	str	w1, [x0, #16]
  404864:	ldr	x0, [sp, #40]
  404868:	ldrb	w0, [x0, #32]
  40486c:	ubfx	x0, x0, #4, #4
  404870:	and	w0, w0, #0xff
  404874:	mov	w1, w0
  404878:	ldr	x0, [sp, #96]
  40487c:	ldr	w0, [x0, #16]
  404880:	cmp	w1, w0
  404884:	b.ge	40493c <wcrtomb@plt+0x1b4c>  // b.tcont
  404888:	ldr	x0, [sp, #96]
  40488c:	ldr	w0, [x0, #16]
  404890:	and	w0, w0, #0xf
  404894:	and	w2, w0, #0xff
  404898:	ldr	x1, [sp, #40]
  40489c:	ldrb	w0, [x1, #32]
  4048a0:	bfi	w0, w2, #4, #4
  4048a4:	strb	w0, [x1, #32]
  4048a8:	b	40493c <wcrtomb@plt+0x1b4c>
  4048ac:	mov	w0, #0x2                   	// #2
  4048b0:	str	w0, [sp, #108]
  4048b4:	mov	w0, #0x2                   	// #2
  4048b8:	str	w0, [sp, #104]
  4048bc:	b	404940 <wcrtomb@plt+0x1b50>
  4048c0:	mov	w0, #0x1                   	// #1
  4048c4:	str	w0, [sp, #108]
  4048c8:	mov	w0, #0x1                   	// #1
  4048cc:	str	w0, [sp, #104]
  4048d0:	b	404940 <wcrtomb@plt+0x1b50>
  4048d4:	str	wzr, [sp, #108]
  4048d8:	str	wzr, [sp, #104]
  4048dc:	b	404940 <wcrtomb@plt+0x1b50>
  4048e0:	ldr	w0, [sp, #108]
  4048e4:	str	w0, [sp, #104]
  4048e8:	ldr	w0, [sp, #108]
  4048ec:	orr	w0, w0, #0x8
  4048f0:	str	w0, [sp, #108]
  4048f4:	b	404940 <wcrtomb@plt+0x1b50>
  4048f8:	ldr	w0, [sp, #108]
  4048fc:	str	w0, [sp, #104]
  404900:	ldr	w0, [sp, #108]
  404904:	orr	w0, w0, #0x4
  404908:	str	w0, [sp, #108]
  40490c:	b	404940 <wcrtomb@plt+0x1b50>
  404910:	ldr	x0, [sp, #112]
  404914:	sub	x0, x0, #0x1
  404918:	ldr	x1, [sp, #112]
  40491c:	ldrb	w1, [x1]
  404920:	strb	w1, [x0]
  404924:	ldr	x0, [sp, #96]
  404928:	ldr	x0, [x0, #8]
  40492c:	add	x1, x0, #0x1
  404930:	ldr	x0, [sp, #96]
  404934:	str	x1, [x0, #8]
  404938:	b	404940 <wcrtomb@plt+0x1b50>
  40493c:	nop
  404940:	ldr	x0, [sp, #112]
  404944:	add	x0, x0, #0x1
  404948:	str	x0, [sp, #120]
  40494c:	b	4049b0 <wcrtomb@plt+0x1bc0>
  404950:	ldr	x0, [sp, #112]
  404954:	ldrb	w0, [x0]
  404958:	cmp	w0, #0x26
  40495c:	b.ne	4049b0 <wcrtomb@plt+0x1bc0>  // b.any
  404960:	ldr	x1, [sp, #112]
  404964:	ldr	x0, [sp, #120]
  404968:	sub	x0, x1, x0
  40496c:	ldr	w2, [sp, #108]
  404970:	mov	x1, x0
  404974:	ldr	x0, [sp, #120]
  404978:	bl	404504 <wcrtomb@plt+0x1714>
  40497c:	mov	x1, x0
  404980:	ldr	x0, [sp, #96]
  404984:	str	x1, [x0, #24]
  404988:	ldr	x0, [sp, #96]
  40498c:	ldr	x0, [x0, #24]
  404990:	str	x0, [sp, #96]
  404994:	ldr	w0, [sp, #104]
  404998:	str	w0, [sp, #108]
  40499c:	ldr	x0, [sp, #96]
  4049a0:	str	wzr, [x0, #16]
  4049a4:	ldr	x0, [sp, #112]
  4049a8:	add	x0, x0, #0x1
  4049ac:	str	x0, [sp, #120]
  4049b0:	ldr	x0, [sp, #112]
  4049b4:	add	x0, x0, #0x1
  4049b8:	str	x0, [sp, #112]
  4049bc:	ldr	x1, [sp, #112]
  4049c0:	ldr	x0, [sp, #88]
  4049c4:	cmp	x1, x0
  4049c8:	b.cc	4046fc <wcrtomb@plt+0x190c>  // b.lo, b.ul, b.last
  4049cc:	ldr	x1, [sp, #120]
  4049d0:	ldr	x0, [sp, #88]
  4049d4:	cmp	x1, x0
  4049d8:	b.cs	404a10 <wcrtomb@plt+0x1c20>  // b.hs, b.nlast
  4049dc:	ldr	x1, [sp, #88]
  4049e0:	ldr	x0, [sp, #120]
  4049e4:	sub	x0, x1, x0
  4049e8:	ldr	w2, [sp, #108]
  4049ec:	mov	x1, x0
  4049f0:	ldr	x0, [sp, #120]
  4049f4:	bl	404504 <wcrtomb@plt+0x1714>
  4049f8:	mov	x1, x0
  4049fc:	ldr	x0, [sp, #96]
  404a00:	str	x1, [x0, #24]
  404a04:	ldr	x0, [sp, #96]
  404a08:	ldr	x0, [x0, #24]
  404a0c:	str	x0, [sp, #96]
  404a10:	ldr	x0, [sp, #96]
  404a14:	str	xzr, [x0, #24]
  404a18:	ldr	x1, [sp, #80]
  404a1c:	ldr	x0, [sp, #40]
  404a20:	str	x1, [x0, #8]
  404a24:	nop
  404a28:	ldp	x29, x30, [sp], #128
  404a2c:	ret
  404a30:	stp	x29, x30, [sp, #-64]!
  404a34:	mov	x29, sp
  404a38:	str	x19, [sp, #16]
  404a3c:	str	x0, [sp, #40]
  404a40:	str	w1, [sp, #36]
  404a44:	ldr	x0, [sp, #40]
  404a48:	cmp	x0, #0x0
  404a4c:	b.eq	404aa8 <wcrtomb@plt+0x1cb8>  // b.none
  404a50:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404a54:	add	x0, x0, #0x5a0
  404a58:	ldr	x0, [x0]
  404a5c:	cmp	x0, #0x0
  404a60:	b.eq	404a74 <wcrtomb@plt+0x1c84>  // b.none
  404a64:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404a68:	add	x0, x0, #0x5a0
  404a6c:	ldr	x0, [x0]
  404a70:	bl	40e344 <wcrtomb@plt+0xb554>
  404a74:	bl	40e0e8 <wcrtomb@plt+0xb2f8>
  404a78:	mov	x1, x0
  404a7c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404a80:	add	x0, x0, #0x5a0
  404a84:	str	x1, [x0]
  404a88:	ldr	x0, [sp, #40]
  404a8c:	str	xzr, [x0]
  404a90:	ldr	x0, [sp, #40]
  404a94:	str	xzr, [x0, #8]
  404a98:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404a9c:	add	x0, x0, #0x5a8
  404aa0:	ldr	x1, [sp, #40]
  404aa4:	str	x1, [x0]
  404aa8:	ldr	w0, [sp, #36]
  404aac:	cmn	w0, #0x1
  404ab0:	b.eq	404c2c <wcrtomb@plt+0x1e3c>  // b.none
  404ab4:	ldr	w0, [sp, #36]
  404ab8:	cmp	w0, #0xa
  404abc:	b.eq	404ad4 <wcrtomb@plt+0x1ce4>  // b.none
  404ac0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404ac4:	add	x0, x0, #0x5a0
  404ac8:	ldr	x0, [x0]
  404acc:	ldr	w1, [sp, #36]
  404ad0:	bl	40e2b0 <wcrtomb@plt+0xb4c0>
  404ad4:	bl	403100 <wcrtomb@plt+0x310>
  404ad8:	str	w0, [sp, #60]
  404adc:	b	404b50 <wcrtomb@plt+0x1d60>
  404ae0:	ldr	w0, [sp, #60]
  404ae4:	cmp	w0, #0x5c
  404ae8:	b.ne	404b14 <wcrtomb@plt+0x1d24>  // b.any
  404aec:	bl	403100 <wcrtomb@plt+0x310>
  404af0:	str	w0, [sp, #60]
  404af4:	ldr	w0, [sp, #60]
  404af8:	cmn	w0, #0x1
  404afc:	b.eq	404b14 <wcrtomb@plt+0x1d24>  // b.none
  404b00:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404b04:	add	x0, x0, #0x5a0
  404b08:	ldr	x0, [x0]
  404b0c:	mov	w1, #0x5c                  	// #92
  404b10:	bl	40e2b0 <wcrtomb@plt+0xb4c0>
  404b14:	ldr	w0, [sp, #60]
  404b18:	cmn	w0, #0x1
  404b1c:	b.ne	404b38 <wcrtomb@plt+0x1d48>  // b.any
  404b20:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404b24:	add	x0, x0, #0x5a0
  404b28:	ldr	x0, [x0]
  404b2c:	mov	w1, #0xa                   	// #10
  404b30:	bl	40e2b0 <wcrtomb@plt+0xb4c0>
  404b34:	b	404c30 <wcrtomb@plt+0x1e40>
  404b38:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404b3c:	add	x0, x0, #0x5a0
  404b40:	ldr	x0, [x0]
  404b44:	ldr	w1, [sp, #60]
  404b48:	bl	403418 <wcrtomb@plt+0x628>
  404b4c:	str	w0, [sp, #60]
  404b50:	ldr	w0, [sp, #60]
  404b54:	cmn	w0, #0x1
  404b58:	b.eq	404b68 <wcrtomb@plt+0x1d78>  // b.none
  404b5c:	ldr	w0, [sp, #60]
  404b60:	cmp	w0, #0xa
  404b64:	b.ne	404ae0 <wcrtomb@plt+0x1cf0>  // b.any
  404b68:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404b6c:	add	x0, x0, #0x5a0
  404b70:	ldr	x0, [x0]
  404b74:	mov	w1, #0xa                   	// #10
  404b78:	bl	40e2b0 <wcrtomb@plt+0xb4c0>
  404b7c:	ldr	x0, [sp, #40]
  404b80:	cmp	x0, #0x0
  404b84:	b.ne	404b98 <wcrtomb@plt+0x1da8>  // b.any
  404b88:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404b8c:	add	x0, x0, #0x5a8
  404b90:	ldr	x0, [x0]
  404b94:	str	x0, [sp, #40]
  404b98:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404b9c:	add	x0, x0, #0x5a0
  404ba0:	ldr	x0, [x0]
  404ba4:	bl	40e134 <wcrtomb@plt+0xb344>
  404ba8:	mov	x19, x0
  404bac:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404bb0:	add	x0, x0, #0x5a0
  404bb4:	ldr	x0, [x0]
  404bb8:	bl	40e14c <wcrtomb@plt+0xb35c>
  404bbc:	mov	w2, #0x0                   	// #0
  404bc0:	mov	x1, x0
  404bc4:	mov	x0, x19
  404bc8:	bl	4060a0 <wcrtomb@plt+0x32b0>
  404bcc:	mov	x1, x0
  404bd0:	ldr	x0, [sp, #40]
  404bd4:	str	x1, [x0, #8]
  404bd8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404bdc:	add	x0, x0, #0x5a0
  404be0:	ldr	x0, [x0]
  404be4:	bl	40e134 <wcrtomb@plt+0xb344>
  404be8:	mov	x2, x0
  404bec:	ldr	x0, [sp, #40]
  404bf0:	ldr	x0, [x0, #8]
  404bf4:	mov	x1, x0
  404bf8:	mov	x0, x2
  404bfc:	bl	41ba50 <wcrtomb@plt+0x18c60>
  404c00:	mov	x1, x0
  404c04:	ldr	x0, [sp, #40]
  404c08:	str	x1, [x0]
  404c0c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404c10:	add	x0, x0, #0x5a0
  404c14:	ldr	x0, [x0]
  404c18:	bl	40e344 <wcrtomb@plt+0xb554>
  404c1c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404c20:	add	x0, x0, #0x5a0
  404c24:	str	xzr, [x0]
  404c28:	b	404c30 <wcrtomb@plt+0x1e40>
  404c2c:	nop
  404c30:	ldr	x19, [sp, #16]
  404c34:	ldp	x29, x30, [sp], #64
  404c38:	ret
  404c3c:	stp	x29, x30, [sp, #-64]!
  404c40:	mov	x29, sp
  404c44:	str	x0, [sp, #24]
  404c48:	str	w1, [sp, #20]
  404c4c:	ldr	x0, [sp, #24]
  404c50:	str	wzr, [x0]
  404c54:	ldr	x0, [sp, #24]
  404c58:	str	xzr, [x0, #16]
  404c5c:	ldr	x0, [sp, #24]
  404c60:	mov	x1, #0xffffffffffffffff    	// #-1
  404c64:	str	x1, [x0, #8]
  404c68:	ldr	x0, [sp, #24]
  404c6c:	str	xzr, [x0, #24]
  404c70:	ldr	w0, [sp, #20]
  404c74:	cmp	w0, #0x2f
  404c78:	b.eq	404c88 <wcrtomb@plt+0x1e98>  // b.none
  404c7c:	ldr	w0, [sp, #20]
  404c80:	cmp	w0, #0x5c
  404c84:	b.ne	404d6c <wcrtomb@plt+0x1f7c>  // b.any
  404c88:	str	wzr, [sp, #60]
  404c8c:	ldr	x0, [sp, #24]
  404c90:	mov	w1, #0x1                   	// #1
  404c94:	str	w1, [x0]
  404c98:	ldr	w0, [sp, #20]
  404c9c:	cmp	w0, #0x5c
  404ca0:	b.ne	404cac <wcrtomb@plt+0x1ebc>  // b.any
  404ca4:	bl	403100 <wcrtomb@plt+0x310>
  404ca8:	str	w0, [sp, #20]
  404cac:	mov	w1, #0x1                   	// #1
  404cb0:	ldr	w0, [sp, #20]
  404cb4:	bl	403ca0 <wcrtomb@plt+0xeb0>
  404cb8:	str	x0, [sp, #40]
  404cbc:	ldr	x0, [sp, #40]
  404cc0:	cmp	x0, #0x0
  404cc4:	b.ne	404cd8 <wcrtomb@plt+0x1ee8>  // b.any
  404cc8:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  404ccc:	add	x0, x0, #0xa1b
  404cd0:	bl	402d80 <gettext@plt>
  404cd4:	bl	403010 <wcrtomb@plt+0x220>
  404cd8:	bl	4032e0 <wcrtomb@plt+0x4f0>
  404cdc:	str	w0, [sp, #20]
  404ce0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404ce4:	add	x0, x0, #0x8e8
  404ce8:	ldr	w0, [x0]
  404cec:	cmp	w0, #0x2
  404cf0:	b.eq	404d30 <wcrtomb@plt+0x1f40>  // b.none
  404cf4:	ldr	w0, [sp, #20]
  404cf8:	cmp	w0, #0x49
  404cfc:	b.eq	404d10 <wcrtomb@plt+0x1f20>  // b.none
  404d00:	ldr	w0, [sp, #20]
  404d04:	cmp	w0, #0x4d
  404d08:	b.eq	404d20 <wcrtomb@plt+0x1f30>  // b.none
  404d0c:	b	404d34 <wcrtomb@plt+0x1f44>
  404d10:	ldr	w0, [sp, #60]
  404d14:	orr	w0, w0, #0x2
  404d18:	str	w0, [sp, #60]
  404d1c:	b	404d68 <wcrtomb@plt+0x1f78>
  404d20:	ldr	w0, [sp, #60]
  404d24:	orr	w0, w0, #0x4
  404d28:	str	w0, [sp, #60]
  404d2c:	b	404d68 <wcrtomb@plt+0x1f78>
  404d30:	nop
  404d34:	ldr	w0, [sp, #20]
  404d38:	bl	4031e0 <wcrtomb@plt+0x3f0>
  404d3c:	mov	w2, #0x0                   	// #0
  404d40:	ldr	w1, [sp, #60]
  404d44:	ldr	x0, [sp, #40]
  404d48:	bl	40bfec <wcrtomb@plt+0x91fc>
  404d4c:	mov	x1, x0
  404d50:	ldr	x0, [sp, #24]
  404d54:	str	x1, [x0, #24]
  404d58:	ldr	x0, [sp, #40]
  404d5c:	bl	40e344 <wcrtomb@plt+0xb554>
  404d60:	mov	w0, #0x1                   	// #1
  404d64:	b	404ec4 <wcrtomb@plt+0x20d4>
  404d68:	b	404cd8 <wcrtomb@plt+0x1ee8>
  404d6c:	bl	402b40 <__ctype_b_loc@plt>
  404d70:	ldr	x1, [x0]
  404d74:	ldr	w0, [sp, #20]
  404d78:	and	w0, w0, #0xff
  404d7c:	and	x0, x0, #0xff
  404d80:	lsl	x0, x0, #1
  404d84:	add	x0, x1, x0
  404d88:	ldrh	w0, [x0]
  404d8c:	and	w0, w0, #0x800
  404d90:	cmp	w0, #0x0
  404d94:	b.eq	404e20 <wcrtomb@plt+0x2030>  // b.none
  404d98:	ldr	w0, [sp, #20]
  404d9c:	bl	403394 <wcrtomb@plt+0x5a4>
  404da0:	mov	x1, x0
  404da4:	ldr	x0, [sp, #24]
  404da8:	str	x1, [x0, #8]
  404dac:	ldr	x0, [sp, #24]
  404db0:	mov	w1, #0x2                   	// #2
  404db4:	str	w1, [x0]
  404db8:	bl	4032e0 <wcrtomb@plt+0x4f0>
  404dbc:	str	w0, [sp, #20]
  404dc0:	ldr	w0, [sp, #20]
  404dc4:	cmp	w0, #0x7e
  404dc8:	b.ne	404de0 <wcrtomb@plt+0x1ff0>  // b.any
  404dcc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404dd0:	add	x0, x0, #0x8e8
  404dd4:	ldr	w0, [x0]
  404dd8:	cmp	w0, #0x2
  404ddc:	b.ne	404dec <wcrtomb@plt+0x1ffc>  // b.any
  404de0:	ldr	w0, [sp, #20]
  404de4:	bl	4031e0 <wcrtomb@plt+0x3f0>
  404de8:	b	404ec0 <wcrtomb@plt+0x20d0>
  404dec:	bl	4032e0 <wcrtomb@plt+0x4f0>
  404df0:	bl	403394 <wcrtomb@plt+0x5a4>
  404df4:	str	x0, [sp, #48]
  404df8:	ldr	x0, [sp, #48]
  404dfc:	cmp	x0, #0x0
  404e00:	b.eq	404ec0 <wcrtomb@plt+0x20d0>  // b.none
  404e04:	ldr	x0, [sp, #24]
  404e08:	ldr	x1, [sp, #48]
  404e0c:	str	x1, [x0, #16]
  404e10:	ldr	x0, [sp, #24]
  404e14:	mov	w1, #0x3                   	// #3
  404e18:	str	w1, [x0]
  404e1c:	b	404ec0 <wcrtomb@plt+0x20d0>
  404e20:	ldr	w0, [sp, #20]
  404e24:	cmp	w0, #0x2b
  404e28:	b.eq	404e38 <wcrtomb@plt+0x2048>  // b.none
  404e2c:	ldr	w0, [sp, #20]
  404e30:	cmp	w0, #0x7e
  404e34:	b.ne	404e9c <wcrtomb@plt+0x20ac>  // b.any
  404e38:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404e3c:	add	x0, x0, #0x8e8
  404e40:	ldr	w0, [x0]
  404e44:	cmp	w0, #0x2
  404e48:	b.eq	404e9c <wcrtomb@plt+0x20ac>  // b.none
  404e4c:	bl	4032e0 <wcrtomb@plt+0x4f0>
  404e50:	bl	403394 <wcrtomb@plt+0x5a4>
  404e54:	mov	x1, x0
  404e58:	ldr	x0, [sp, #24]
  404e5c:	str	x1, [x0, #16]
  404e60:	ldr	x0, [sp, #24]
  404e64:	ldr	x0, [x0, #16]
  404e68:	cmp	x0, #0x0
  404e6c:	b.eq	404ec0 <wcrtomb@plt+0x20d0>  // b.none
  404e70:	ldr	w0, [sp, #20]
  404e74:	cmp	w0, #0x2b
  404e78:	b.ne	404e8c <wcrtomb@plt+0x209c>  // b.any
  404e7c:	ldr	x0, [sp, #24]
  404e80:	mov	w1, #0x4                   	// #4
  404e84:	str	w1, [x0]
  404e88:	b	404ec0 <wcrtomb@plt+0x20d0>
  404e8c:	ldr	x0, [sp, #24]
  404e90:	mov	w1, #0x5                   	// #5
  404e94:	str	w1, [x0]
  404e98:	b	404ec0 <wcrtomb@plt+0x20d0>
  404e9c:	ldr	w0, [sp, #20]
  404ea0:	cmp	w0, #0x24
  404ea4:	b.ne	404eb8 <wcrtomb@plt+0x20c8>  // b.any
  404ea8:	ldr	x0, [sp, #24]
  404eac:	mov	w1, #0x6                   	// #6
  404eb0:	str	w1, [x0]
  404eb4:	b	404ec0 <wcrtomb@plt+0x20d0>
  404eb8:	mov	w0, #0x0                   	// #0
  404ebc:	b	404ec4 <wcrtomb@plt+0x20d4>
  404ec0:	mov	w0, #0x1                   	// #1
  404ec4:	ldp	x29, x30, [sp], #64
  404ec8:	ret
  404ecc:	stp	x29, x30, [sp, #-384]!
  404ed0:	mov	x29, sp
  404ed4:	stp	x19, x20, [sp, #16]
  404ed8:	str	x0, [sp, #40]
  404edc:	ldr	x0, [sp, #40]
  404ee0:	cmp	x0, #0x0
  404ee4:	b.ne	404f34 <wcrtomb@plt+0x2144>  // b.any
  404ee8:	mov	x1, #0x18                  	// #24
  404eec:	mov	x0, #0x1                   	// #1
  404ef0:	bl	41b9c8 <wcrtomb@plt+0x18bd8>
  404ef4:	str	x0, [sp, #40]
  404ef8:	ldr	x0, [sp, #40]
  404efc:	str	xzr, [x0]
  404f00:	ldr	x0, [sp, #40]
  404f04:	str	xzr, [x0, #8]
  404f08:	ldr	x0, [sp, #40]
  404f0c:	str	xzr, [x0, #16]
  404f10:	adrp	x0, 402000 <mbrtowc@plt-0x6c0>
  404f14:	add	x4, x0, #0xb60
  404f18:	adrp	x0, 41b000 <wcrtomb@plt+0x18210>
  404f1c:	add	x3, x0, #0x9a8
  404f20:	mov	x2, #0x0                   	// #0
  404f24:	mov	x1, #0x0                   	// #0
  404f28:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404f2c:	add	x0, x0, #0x5b8
  404f30:	bl	41bd98 <_obstack_begin@@Base>
  404f34:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404f38:	add	x0, x0, #0x5a0
  404f3c:	ldr	x0, [x0]
  404f40:	cmp	x0, #0x0
  404f44:	b.eq	404f54 <wcrtomb@plt+0x2164>  // b.none
  404f48:	mov	w1, #0xa                   	// #10
  404f4c:	mov	x0, #0x0                   	// #0
  404f50:	bl	404a30 <wcrtomb@plt+0x1c40>
  404f54:	nop
  404f58:	bl	403100 <wcrtomb@plt+0x310>
  404f5c:	str	w0, [sp, #380]
  404f60:	ldr	w0, [sp, #380]
  404f64:	cmp	w0, #0x3b
  404f68:	b.eq	404f58 <wcrtomb@plt+0x2168>  // b.none
  404f6c:	bl	402b40 <__ctype_b_loc@plt>
  404f70:	ldr	x1, [x0]
  404f74:	ldrsw	x0, [sp, #380]
  404f78:	lsl	x0, x0, #1
  404f7c:	add	x0, x1, x0
  404f80:	ldrh	w0, [x0]
  404f84:	and	w0, w0, #0x2000
  404f88:	cmp	w0, #0x0
  404f8c:	b.ne	404f58 <wcrtomb@plt+0x2168>  // b.any
  404f90:	ldr	w0, [sp, #380]
  404f94:	cmn	w0, #0x1
  404f98:	b.ne	404fb4 <wcrtomb@plt+0x21c4>  // b.any
  404f9c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  404fa0:	add	x0, x0, #0x8e8
  404fa4:	ldr	w0, [x0]
  404fa8:	cmp	w0, #0x2
  404fac:	b.eq	40606c <wcrtomb@plt+0x327c>  // b.none
  404fb0:	b	406090 <wcrtomb@plt+0x32a0>
  404fb4:	add	x0, sp, #0x28
  404fb8:	bl	40399c <wcrtomb@plt+0xbac>
  404fbc:	str	x0, [sp, #296]
  404fc0:	add	x0, sp, #0x38
  404fc4:	ldr	w1, [sp, #380]
  404fc8:	bl	404c3c <wcrtomb@plt+0x1e4c>
  404fcc:	and	w0, w0, #0xff
  404fd0:	cmp	w0, #0x0
  404fd4:	b.eq	4050f0 <wcrtomb@plt+0x2300>  // b.none
  404fd8:	ldr	w0, [sp, #56]
  404fdc:	cmp	w0, #0x4
  404fe0:	b.eq	404ff0 <wcrtomb@plt+0x2200>  // b.none
  404fe4:	ldr	w0, [sp, #56]
  404fe8:	cmp	w0, #0x5
  404fec:	b.ne	405000 <wcrtomb@plt+0x2210>  // b.any
  404ff0:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  404ff4:	add	x0, x0, #0x905
  404ff8:	bl	402d80 <gettext@plt>
  404ffc:	bl	403010 <wcrtomb@plt+0x220>
  405000:	add	x0, sp, #0x38
  405004:	mov	x1, #0x20                  	// #32
  405008:	bl	41ba50 <wcrtomb@plt+0x18c60>
  40500c:	mov	x1, x0
  405010:	ldr	x0, [sp, #296]
  405014:	str	x1, [x0]
  405018:	bl	4032e0 <wcrtomb@plt+0x4f0>
  40501c:	str	w0, [sp, #380]
  405020:	ldr	w0, [sp, #380]
  405024:	cmp	w0, #0x2c
  405028:	b.ne	405080 <wcrtomb@plt+0x2290>  // b.any
  40502c:	bl	4032e0 <wcrtomb@plt+0x4f0>
  405030:	mov	w1, w0
  405034:	add	x0, sp, #0x38
  405038:	bl	404c3c <wcrtomb@plt+0x1e4c>
  40503c:	and	w0, w0, #0xff
  405040:	eor	w0, w0, #0x1
  405044:	and	w0, w0, #0xff
  405048:	cmp	w0, #0x0
  40504c:	b.eq	405060 <wcrtomb@plt+0x2270>  // b.none
  405050:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  405054:	add	x0, x0, #0x8f6
  405058:	bl	402d80 <gettext@plt>
  40505c:	bl	403010 <wcrtomb@plt+0x220>
  405060:	add	x0, sp, #0x38
  405064:	mov	x1, #0x20                  	// #32
  405068:	bl	41ba50 <wcrtomb@plt+0x18c60>
  40506c:	mov	x1, x0
  405070:	ldr	x0, [sp, #296]
  405074:	str	x1, [x0, #8]
  405078:	bl	4032e0 <wcrtomb@plt+0x4f0>
  40507c:	str	w0, [sp, #380]
  405080:	ldr	x0, [sp, #296]
  405084:	ldr	x0, [x0]
  405088:	ldr	w0, [x0]
  40508c:	cmp	w0, #0x2
  405090:	b.ne	4050f0 <wcrtomb@plt+0x2300>  // b.any
  405094:	ldr	x0, [sp, #296]
  405098:	ldr	x0, [x0]
  40509c:	ldr	x0, [x0, #8]
  4050a0:	cmp	x0, #0x0
  4050a4:	b.ne	4050f0 <wcrtomb@plt+0x2300>  // b.any
  4050a8:	ldr	x0, [sp, #296]
  4050ac:	ldr	x0, [x0, #8]
  4050b0:	cmp	x0, #0x0
  4050b4:	b.eq	4050e0 <wcrtomb@plt+0x22f0>  // b.none
  4050b8:	ldr	x0, [sp, #296]
  4050bc:	ldr	x0, [x0, #8]
  4050c0:	ldr	w0, [x0]
  4050c4:	cmp	w0, #0x1
  4050c8:	b.ne	4050e0 <wcrtomb@plt+0x22f0>  // b.any
  4050cc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4050d0:	add	x0, x0, #0x8e8
  4050d4:	ldr	w0, [x0]
  4050d8:	cmp	w0, #0x2
  4050dc:	b.ne	4050f0 <wcrtomb@plt+0x2300>  // b.any
  4050e0:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  4050e4:	add	x0, x0, #0xb99
  4050e8:	bl	402d80 <gettext@plt>
  4050ec:	bl	403010 <wcrtomb@plt+0x220>
  4050f0:	ldr	w0, [sp, #380]
  4050f4:	cmp	w0, #0x21
  4050f8:	b.ne	40512c <wcrtomb@plt+0x233c>  // b.any
  4050fc:	ldr	x0, [sp, #296]
  405100:	mov	w1, #0x1                   	// #1
  405104:	strb	w1, [x0, #20]
  405108:	bl	4032e0 <wcrtomb@plt+0x4f0>
  40510c:	str	w0, [sp, #380]
  405110:	ldr	w0, [sp, #380]
  405114:	cmp	w0, #0x21
  405118:	b.ne	40512c <wcrtomb@plt+0x233c>  // b.any
  40511c:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  405120:	add	x0, x0, #0x8e8
  405124:	bl	402d80 <gettext@plt>
  405128:	bl	403010 <wcrtomb@plt+0x220>
  40512c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405130:	add	x0, x0, #0x8e8
  405134:	ldr	w0, [x0]
  405138:	cmp	w0, #0x2
  40513c:	b.ne	4051e0 <wcrtomb@plt+0x23f0>  // b.any
  405140:	ldr	w0, [sp, #380]
  405144:	sub	w0, w0, #0x3d
  405148:	cmp	w0, #0x3d
  40514c:	cset	w1, hi  // hi = pmore
  405150:	and	w1, w1, #0xff
  405154:	cmp	w1, #0x0
  405158:	b.ne	4051e0 <wcrtomb@plt+0x23f0>  // b.any
  40515c:	mov	x1, #0x1                   	// #1
  405160:	lsl	x0, x1, x0
  405164:	mov	x1, #0x8200                	// #33280
  405168:	movk	x1, #0x4b0, lsl #16
  40516c:	movk	x1, #0x100, lsl #32
  405170:	movk	x1, #0x2200, lsl #48
  405174:	and	x1, x0, x1
  405178:	cmp	x1, #0x0
  40517c:	cset	w1, ne  // ne = any
  405180:	and	w1, w1, #0xff
  405184:	cmp	w1, #0x0
  405188:	b.ne	4051b4 <wcrtomb@plt+0x23c4>  // b.any
  40518c:	mov	x1, #0x1                   	// #1
  405190:	movk	x1, #0x9010, lsl #32
  405194:	movk	x1, #0x20, lsl #48
  405198:	and	x0, x0, x1
  40519c:	cmp	x0, #0x0
  4051a0:	cset	w0, ne  // ne = any
  4051a4:	and	w0, w0, #0xff
  4051a8:	cmp	w0, #0x0
  4051ac:	b.ne	4051c0 <wcrtomb@plt+0x23d0>  // b.any
  4051b0:	b	4051e0 <wcrtomb@plt+0x23f0>
  4051b4:	ldr	w0, [sp, #380]
  4051b8:	and	w0, w0, #0xff
  4051bc:	bl	402fc8 <wcrtomb@plt+0x1d8>
  4051c0:	ldr	x0, [sp, #296]
  4051c4:	ldr	x0, [x0, #8]
  4051c8:	cmp	x0, #0x0
  4051cc:	b.eq	4051e0 <wcrtomb@plt+0x23f0>  // b.none
  4051d0:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  4051d4:	add	x0, x0, #0x9fd
  4051d8:	bl	402d80 <gettext@plt>
  4051dc:	bl	403010 <wcrtomb@plt+0x220>
  4051e0:	ldr	w0, [sp, #380]
  4051e4:	and	w1, w0, #0xff
  4051e8:	ldr	x0, [sp, #296]
  4051ec:	strb	w1, [x0, #21]
  4051f0:	ldr	w0, [sp, #380]
  4051f4:	add	w0, w0, #0x1
  4051f8:	cmp	w0, #0x7e
  4051fc:	b.hi	406034 <wcrtomb@plt+0x3244>  // b.pmore
  405200:	adrp	x1, 434000 <_obstack_memory_used@@Base+0x17e20>
  405204:	add	x1, x1, #0xdd4
  405208:	ldr	w0, [x1, w0, uxtw #2]
  40520c:	adr	x1, 405218 <wcrtomb@plt+0x2428>
  405210:	add	x0, x1, w0, sxtw #2
  405214:	br	x0
  405218:	ldr	x0, [sp, #296]
  40521c:	ldr	x0, [x0]
  405220:	cmp	x0, #0x0
  405224:	b.eq	405238 <wcrtomb@plt+0x2448>  // b.none
  405228:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  40522c:	add	x0, x0, #0x9c9
  405230:	bl	402d80 <gettext@plt>
  405234:	bl	403010 <wcrtomb@plt+0x220>
  405238:	bl	403100 <wcrtomb@plt+0x310>
  40523c:	str	w0, [sp, #380]
  405240:	ldr	w0, [sp, #380]
  405244:	cmp	w0, #0x6e
  405248:	b.ne	405308 <wcrtomb@plt+0x2518>  // b.any
  40524c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405250:	add	x0, x0, #0x450
  405254:	ldrb	w0, [x0]
  405258:	cmp	w0, #0x0
  40525c:	b.eq	405308 <wcrtomb@plt+0x2518>  // b.none
  405260:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405264:	add	x0, x0, #0x578
  405268:	ldr	x0, [x0, #8]
  40526c:	cmp	x0, #0x1
  405270:	b.hi	405308 <wcrtomb@plt+0x2518>  // b.pmore
  405274:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405278:	add	x0, x0, #0x558
  40527c:	ldr	x0, [x0]
  405280:	cmp	x0, #0x0
  405284:	b.eq	4052ac <wcrtomb@plt+0x24bc>  // b.none
  405288:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40528c:	add	x0, x0, #0x558
  405290:	ldr	x1, [x0, #8]
  405294:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405298:	add	x0, x0, #0x558
  40529c:	ldr	x0, [x0]
  4052a0:	add	x0, x0, #0x2
  4052a4:	cmp	x1, x0
  4052a8:	b.eq	4052ec <wcrtomb@plt+0x24fc>  // b.none
  4052ac:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4052b0:	add	x0, x0, #0x558
  4052b4:	ldr	x0, [x0, #24]
  4052b8:	cmp	x0, #0x0
  4052bc:	b.eq	405308 <wcrtomb@plt+0x2518>  // b.none
  4052c0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4052c4:	add	x0, x0, #0x558
  4052c8:	ldr	x0, [x0]
  4052cc:	cmp	x0, #0x0
  4052d0:	b.ne	405308 <wcrtomb@plt+0x2518>  // b.any
  4052d4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4052d8:	add	x0, x0, #0x558
  4052dc:	ldr	x0, [x0, #24]
  4052e0:	bl	4027a0 <ftell@plt>
  4052e4:	cmp	x0, #0x2
  4052e8:	b.ne	405308 <wcrtomb@plt+0x2518>  // b.any
  4052ec:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4052f0:	add	x0, x0, #0x75d
  4052f4:	mov	w1, #0x1                   	// #1
  4052f8:	strb	w1, [x0]
  4052fc:	b	405308 <wcrtomb@plt+0x2518>
  405300:	bl	403100 <wcrtomb@plt+0x310>
  405304:	str	w0, [sp, #380]
  405308:	ldr	w0, [sp, #380]
  40530c:	cmn	w0, #0x1
  405310:	b.eq	406064 <wcrtomb@plt+0x3274>  // b.none
  405314:	ldr	w0, [sp, #380]
  405318:	cmp	w0, #0xa
  40531c:	b.ne	405300 <wcrtomb@plt+0x2510>  // b.any
  405320:	b	406064 <wcrtomb@plt+0x3274>
  405324:	bl	404260 <wcrtomb@plt+0x1470>
  405328:	str	x0, [sp, #184]
  40532c:	ldr	x0, [sp, #184]
  405330:	ldrb	w0, [x0]
  405334:	cmp	w0, #0x0
  405338:	b.eq	405344 <wcrtomb@plt+0x2554>  // b.none
  40533c:	ldr	x0, [sp, #184]
  405340:	b	40534c <wcrtomb@plt+0x255c>
  405344:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  405348:	add	x0, x0, #0xdc8
  40534c:	str	x0, [sp, #176]
  405350:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  405354:	add	x1, x0, #0xdd0
  405358:	ldr	x0, [sp, #176]
  40535c:	bl	402960 <strverscmp@plt>
  405360:	cmp	w0, #0x0
  405364:	b.le	405378 <wcrtomb@plt+0x2588>
  405368:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  40536c:	add	x0, x0, #0xb7b
  405370:	bl	402d80 <gettext@plt>
  405374:	bl	403010 <wcrtomb@plt+0x220>
  405378:	ldr	x0, [sp, #184]
  40537c:	bl	402b60 <free@plt>
  405380:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405384:	add	x0, x0, #0x8e8
  405388:	str	wzr, [x0]
  40538c:	b	406068 <wcrtomb@plt+0x3278>
  405390:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405394:	add	x0, x0, #0x5b0
  405398:	ldr	x4, [x0]
  40539c:	ldr	x0, [sp, #40]
  4053a0:	ldr	x1, [x0, #16]
  4053a4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4053a8:	add	x3, x0, #0x578
  4053ac:	mov	x2, #0x0                   	// #0
  4053b0:	mov	x0, x4
  4053b4:	bl	404324 <wcrtomb@plt+0x1534>
  4053b8:	mov	x1, x0
  4053bc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4053c0:	add	x0, x0, #0x5b0
  4053c4:	str	x1, [x0]
  4053c8:	ldr	x0, [sp, #296]
  4053cc:	ldrb	w0, [x0, #20]
  4053d0:	cmp	w0, #0x0
  4053d4:	cset	w0, eq  // eq = none
  4053d8:	and	w0, w0, #0xff
  4053dc:	mov	w1, w0
  4053e0:	ldr	x0, [sp, #296]
  4053e4:	strb	w1, [x0, #20]
  4053e8:	b	406050 <wcrtomb@plt+0x3260>
  4053ec:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4053f0:	add	x0, x0, #0x5b0
  4053f4:	ldr	x0, [x0]
  4053f8:	cmp	x0, #0x0
  4053fc:	b.ne	405410 <wcrtomb@plt+0x2620>  // b.any
  405400:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  405404:	add	x0, x0, #0x93e
  405408:	bl	402d80 <gettext@plt>
  40540c:	bl	403010 <wcrtomb@plt+0x220>
  405410:	ldr	x0, [sp, #296]
  405414:	ldr	x0, [x0]
  405418:	cmp	x0, #0x0
  40541c:	b.eq	405430 <wcrtomb@plt+0x2640>  // b.none
  405420:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  405424:	add	x0, x0, #0x98d
  405428:	bl	402d80 <gettext@plt>
  40542c:	bl	403010 <wcrtomb@plt+0x220>
  405430:	bl	403320 <wcrtomb@plt+0x530>
  405434:	ldr	x2, [sp, #40]
  405438:	ldr	x0, [sp, #40]
  40543c:	ldr	x3, [x0]
  405440:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405444:	add	x0, x0, #0x5b0
  405448:	ldr	x0, [x0]
  40544c:	ldr	x1, [x0]
  405450:	mov	x0, x1
  405454:	lsl	x0, x0, #2
  405458:	add	x0, x0, x1
  40545c:	lsl	x0, x0, #3
  405460:	add	x0, x3, x0
  405464:	ldr	x1, [x2, #16]
  405468:	str	x1, [x0, #24]
  40546c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405470:	add	x0, x0, #0x5b0
  405474:	ldr	x0, [x0]
  405478:	bl	4044c0 <wcrtomb@plt+0x16d0>
  40547c:	mov	x1, x0
  405480:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405484:	add	x0, x0, #0x5b0
  405488:	str	x1, [x0]
  40548c:	b	406050 <wcrtomb@plt+0x3260>
  405490:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405494:	add	x0, x0, #0x760
  405498:	ldrb	w0, [x0]
  40549c:	cmp	w0, #0x0
  4054a0:	b.eq	4054b4 <wcrtomb@plt+0x26c4>  // b.none
  4054a4:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  4054a8:	add	x0, x0, #0xc1c
  4054ac:	bl	402d80 <gettext@plt>
  4054b0:	bl	403010 <wcrtomb@plt+0x220>
  4054b4:	bl	4032e0 <wcrtomb@plt+0x4f0>
  4054b8:	str	w0, [sp, #380]
  4054bc:	ldr	w0, [sp, #380]
  4054c0:	cmn	w0, #0x1
  4054c4:	b.eq	4054d4 <wcrtomb@plt+0x26e4>  // b.none
  4054c8:	ldr	w0, [sp, #380]
  4054cc:	cmp	w0, #0xa
  4054d0:	b.ne	4054ec <wcrtomb@plt+0x26fc>  // b.any
  4054d4:	ldr	x0, [sp, #296]
  4054d8:	str	xzr, [x0, #32]
  4054dc:	b	406050 <wcrtomb@plt+0x3260>
  4054e0:	bl	4032e0 <wcrtomb@plt+0x4f0>
  4054e4:	str	w0, [sp, #380]
  4054e8:	b	4054f0 <wcrtomb@plt+0x2700>
  4054ec:	nop
  4054f0:	ldr	w0, [sp, #380]
  4054f4:	cmn	w0, #0x1
  4054f8:	b.ne	40550c <wcrtomb@plt+0x271c>  // b.any
  4054fc:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  405500:	add	x0, x0, #0x96c
  405504:	bl	402d80 <gettext@plt>
  405508:	bl	403010 <wcrtomb@plt+0x220>
  40550c:	ldr	w0, [sp, #380]
  405510:	cmp	w0, #0x5c
  405514:	b.ne	405524 <wcrtomb@plt+0x2734>  // b.any
  405518:	bl	403100 <wcrtomb@plt+0x310>
  40551c:	str	w0, [sp, #380]
  405520:	b	405558 <wcrtomb@plt+0x2768>
  405524:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405528:	add	x0, x0, #0x8e8
  40552c:	ldr	w0, [x0]
  405530:	cmp	w0, #0x2
  405534:	b.ne	405548 <wcrtomb@plt+0x2758>  // b.any
  405538:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  40553c:	add	x0, x0, #0x96c
  405540:	bl	402d80 <gettext@plt>
  405544:	bl	403010 <wcrtomb@plt+0x220>
  405548:	ldr	w0, [sp, #380]
  40554c:	bl	4031e0 <wcrtomb@plt+0x3f0>
  405550:	mov	w0, #0xa                   	// #10
  405554:	str	w0, [sp, #380]
  405558:	ldr	x0, [sp, #296]
  40555c:	add	x0, x0, #0x18
  405560:	ldr	w1, [sp, #380]
  405564:	bl	404a30 <wcrtomb@plt+0x1c40>
  405568:	b	406050 <wcrtomb@plt+0x3260>
  40556c:	ldr	x0, [sp, #296]
  405570:	ldr	x0, [x0]
  405574:	cmp	x0, #0x0
  405578:	b.eq	40558c <wcrtomb@plt+0x279c>  // b.none
  40557c:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  405580:	add	x0, x0, #0x9ac
  405584:	bl	402d80 <gettext@plt>
  405588:	bl	403010 <wcrtomb@plt+0x220>
  40558c:	bl	404260 <wcrtomb@plt+0x1470>
  405590:	str	x0, [sp, #96]
  405594:	ldr	x0, [sp, #96]
  405598:	ldrb	w0, [x0]
  40559c:	cmp	w0, #0x0
  4055a0:	b.ne	4055b4 <wcrtomb@plt+0x27c4>  // b.any
  4055a4:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  4055a8:	add	x0, x0, #0xbe2
  4055ac:	bl	402d80 <gettext@plt>
  4055b0:	bl	403010 <wcrtomb@plt+0x220>
  4055b4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4055b8:	add	x0, x0, #0x598
  4055bc:	ldr	x4, [x0]
  4055c0:	ldr	x0, [sp, #40]
  4055c4:	ldr	x0, [x0, #16]
  4055c8:	mov	x3, #0x0                   	// #0
  4055cc:	ldr	x2, [sp, #96]
  4055d0:	mov	x1, x0
  4055d4:	mov	x0, x4
  4055d8:	bl	404324 <wcrtomb@plt+0x1534>
  4055dc:	mov	x1, x0
  4055e0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4055e4:	add	x0, x0, #0x598
  4055e8:	str	x1, [x0]
  4055ec:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4055f0:	add	x0, x0, #0x761
  4055f4:	ldrb	w0, [x0]
  4055f8:	cmp	w0, #0x0
  4055fc:	b.eq	406044 <wcrtomb@plt+0x3254>  // b.none
  405600:	ldr	x0, [sp, #96]
  405604:	bl	402a30 <strdup@plt>
  405608:	mov	x1, x0
  40560c:	ldr	x0, [sp, #296]
  405610:	str	x1, [x0, #24]
  405614:	b	406044 <wcrtomb@plt+0x3254>
  405618:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40561c:	add	x0, x0, #0x590
  405620:	ldr	x19, [x0]
  405624:	ldr	x0, [sp, #40]
  405628:	ldr	x20, [x0, #16]
  40562c:	bl	404260 <wcrtomb@plt+0x1470>
  405630:	mov	x3, #0x0                   	// #0
  405634:	mov	x2, x0
  405638:	mov	x1, x20
  40563c:	mov	x0, x19
  405640:	bl	404324 <wcrtomb@plt+0x1534>
  405644:	mov	x1, x0
  405648:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40564c:	add	x0, x0, #0x590
  405650:	str	x1, [x0]
  405654:	b	406050 <wcrtomb@plt+0x3260>
  405658:	ldr	x0, [sp, #296]
  40565c:	ldr	x0, [x0, #8]
  405660:	cmp	x0, #0x0
  405664:	b.eq	405678 <wcrtomb@plt+0x2888>  // b.none
  405668:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  40566c:	add	x0, x0, #0x9fd
  405670:	bl	402d80 <gettext@plt>
  405674:	bl	403010 <wcrtomb@plt+0x220>
  405678:	bl	4032e0 <wcrtomb@plt+0x4f0>
  40567c:	str	w0, [sp, #380]
  405680:	bl	402b40 <__ctype_b_loc@plt>
  405684:	ldr	x1, [x0]
  405688:	ldr	w0, [sp, #380]
  40568c:	and	w0, w0, #0xff
  405690:	and	x0, x0, #0xff
  405694:	lsl	x0, x0, #1
  405698:	add	x0, x1, x0
  40569c:	ldrh	w0, [x0]
  4056a0:	and	w0, w0, #0x800
  4056a4:	cmp	w0, #0x0
  4056a8:	b.eq	4056d8 <wcrtomb@plt+0x28e8>  // b.none
  4056ac:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4056b0:	add	x0, x0, #0x8e8
  4056b4:	ldr	w0, [x0]
  4056b8:	cmp	w0, #0x2
  4056bc:	b.eq	4056d8 <wcrtomb@plt+0x28e8>  // b.none
  4056c0:	ldr	w0, [sp, #380]
  4056c4:	bl	403394 <wcrtomb@plt+0x5a4>
  4056c8:	mov	w1, w0
  4056cc:	ldr	x0, [sp, #296]
  4056d0:	str	w1, [x0, #24]
  4056d4:	b	4056ec <wcrtomb@plt+0x28fc>
  4056d8:	ldr	x0, [sp, #296]
  4056dc:	mov	w1, #0xffffffff            	// #-1
  4056e0:	str	w1, [x0, #24]
  4056e4:	ldr	w0, [sp, #380]
  4056e8:	bl	4031e0 <wcrtomb@plt+0x3f0>
  4056ec:	bl	403320 <wcrtomb@plt+0x530>
  4056f0:	b	406050 <wcrtomb@plt+0x3260>
  4056f4:	bl	403320 <wcrtomb@plt+0x530>
  4056f8:	b	406050 <wcrtomb@plt+0x3260>
  4056fc:	bl	403610 <wcrtomb@plt+0x820>
  405700:	str	x0, [sp, #280]
  405704:	ldr	x0, [sp, #280]
  405708:	bl	40e134 <wcrtomb@plt+0xb344>
  40570c:	ldrb	w0, [x0]
  405710:	cmp	w0, #0x0
  405714:	b.ne	405728 <wcrtomb@plt+0x2938>  // b.any
  405718:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  40571c:	add	x0, x0, #0xc44
  405720:	bl	402d80 <gettext@plt>
  405724:	bl	403010 <wcrtomb@plt+0x220>
  405728:	ldr	x0, [sp, #280]
  40572c:	bl	40e134 <wcrtomb@plt+0xb344>
  405730:	bl	41ba7c <wcrtomb@plt+0x18c8c>
  405734:	mov	x1, x0
  405738:	ldr	x0, [sp, #296]
  40573c:	str	x1, [x0, #24]
  405740:	ldr	x0, [sp, #280]
  405744:	bl	40e344 <wcrtomb@plt+0xb554>
  405748:	b	406050 <wcrtomb@plt+0x3260>
  40574c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405750:	add	x0, x0, #0x478
  405754:	ldr	x0, [x0]
  405758:	mov	w2, #0x0                   	// #0
  40575c:	mov	x1, x0
  405760:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405764:	add	x0, x0, #0x610
  405768:	bl	403690 <wcrtomb@plt+0x8a0>
  40576c:	mov	x1, x0
  405770:	ldr	x0, [sp, #296]
  405774:	str	x1, [x0, #24]
  405778:	b	406050 <wcrtomb@plt+0x3260>
  40577c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405780:	add	x0, x0, #0x480
  405784:	ldr	x0, [x0]
  405788:	mov	w2, #0x1                   	// #1
  40578c:	mov	x1, x0
  405790:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405794:	add	x0, x0, #0x618
  405798:	bl	403690 <wcrtomb@plt+0x8a0>
  40579c:	mov	x1, x0
  4057a0:	ldr	x0, [sp, #296]
  4057a4:	str	x1, [x0, #24]
  4057a8:	b	406050 <wcrtomb@plt+0x3260>
  4057ac:	bl	403100 <wcrtomb@plt+0x310>
  4057b0:	str	w0, [sp, #172]
  4057b4:	mov	w1, #0x1                   	// #1
  4057b8:	ldr	w0, [sp, #172]
  4057bc:	bl	403ca0 <wcrtomb@plt+0xeb0>
  4057c0:	str	x0, [sp, #280]
  4057c4:	ldr	x0, [sp, #280]
  4057c8:	cmp	x0, #0x0
  4057cc:	b.ne	4057e0 <wcrtomb@plt+0x29f0>  // b.any
  4057d0:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  4057d4:	add	x0, x0, #0xa36
  4057d8:	bl	402d80 <gettext@plt>
  4057dc:	bl	403010 <wcrtomb@plt+0x220>
  4057e0:	mov	w1, #0x0                   	// #0
  4057e4:	ldr	w0, [sp, #172]
  4057e8:	bl	403ca0 <wcrtomb@plt+0xeb0>
  4057ec:	str	x0, [sp, #160]
  4057f0:	ldr	x0, [sp, #160]
  4057f4:	cmp	x0, #0x0
  4057f8:	b.ne	40580c <wcrtomb@plt+0x2a1c>  // b.any
  4057fc:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  405800:	add	x0, x0, #0xa36
  405804:	bl	402d80 <gettext@plt>
  405808:	bl	403010 <wcrtomb@plt+0x220>
  40580c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405810:	add	x0, x0, #0x5b8
  405814:	str	x0, [sp, #152]
  405818:	ldr	x0, [sp, #152]
  40581c:	str	x0, [sp, #144]
  405820:	mov	x0, #0x28                  	// #40
  405824:	str	x0, [sp, #136]
  405828:	ldr	x0, [sp, #144]
  40582c:	str	x0, [sp, #128]
  405830:	ldr	x0, [sp, #128]
  405834:	ldr	x1, [x0, #32]
  405838:	ldr	x0, [sp, #128]
  40583c:	ldr	x0, [x0, #24]
  405840:	sub	x0, x1, x0
  405844:	mov	x1, x0
  405848:	ldr	x0, [sp, #136]
  40584c:	cmp	x1, x0
  405850:	b.cs	405860 <wcrtomb@plt+0x2a70>  // b.hs, b.nlast
  405854:	ldr	x1, [sp, #136]
  405858:	ldr	x0, [sp, #144]
  40585c:	bl	41be60 <_obstack_newchunk@@Base>
  405860:	ldr	x0, [sp, #144]
  405864:	ldr	x1, [x0, #24]
  405868:	ldr	x0, [sp, #136]
  40586c:	add	x1, x1, x0
  405870:	ldr	x0, [sp, #144]
  405874:	str	x1, [x0, #24]
  405878:	ldr	x0, [sp, #152]
  40587c:	str	x0, [sp, #120]
  405880:	ldr	x0, [sp, #120]
  405884:	ldr	x0, [x0, #16]
  405888:	str	x0, [sp, #112]
  40588c:	ldr	x0, [sp, #120]
  405890:	ldr	x0, [x0, #24]
  405894:	ldr	x1, [sp, #112]
  405898:	cmp	x1, x0
  40589c:	b.ne	4058b0 <wcrtomb@plt+0x2ac0>  // b.any
  4058a0:	ldr	x0, [sp, #120]
  4058a4:	ldrb	w1, [x0, #80]
  4058a8:	orr	w1, w1, #0x2
  4058ac:	strb	w1, [x0, #80]
  4058b0:	ldr	x0, [sp, #120]
  4058b4:	ldr	x0, [x0, #24]
  4058b8:	mov	x1, x0
  4058bc:	ldr	x0, [sp, #120]
  4058c0:	ldr	x0, [x0, #48]
  4058c4:	add	x1, x1, x0
  4058c8:	ldr	x0, [sp, #120]
  4058cc:	ldr	x0, [x0, #48]
  4058d0:	mvn	x0, x0
  4058d4:	and	x0, x1, x0
  4058d8:	mov	x1, x0
  4058dc:	ldr	x0, [sp, #120]
  4058e0:	str	x1, [x0, #24]
  4058e4:	ldr	x0, [sp, #120]
  4058e8:	ldr	x1, [x0, #24]
  4058ec:	ldr	x0, [sp, #120]
  4058f0:	ldr	x0, [x0, #8]
  4058f4:	sub	x0, x1, x0
  4058f8:	mov	x2, x0
  4058fc:	ldr	x0, [sp, #120]
  405900:	ldr	x1, [x0, #32]
  405904:	ldr	x0, [sp, #120]
  405908:	ldr	x0, [x0, #8]
  40590c:	sub	x0, x1, x0
  405910:	cmp	x2, x0
  405914:	b.ls	405928 <wcrtomb@plt+0x2b38>  // b.plast
  405918:	ldr	x0, [sp, #120]
  40591c:	ldr	x1, [x0, #32]
  405920:	ldr	x0, [sp, #120]
  405924:	str	x1, [x0, #24]
  405928:	ldr	x0, [sp, #120]
  40592c:	ldr	x1, [x0, #24]
  405930:	ldr	x0, [sp, #120]
  405934:	str	x1, [x0, #16]
  405938:	ldr	x1, [sp, #112]
  40593c:	ldr	x0, [sp, #296]
  405940:	str	x1, [x0, #24]
  405944:	ldr	x0, [sp, #296]
  405948:	ldr	x19, [x0, #24]
  40594c:	ldr	x0, [sp, #160]
  405950:	bl	40e134 <wcrtomb@plt+0xb344>
  405954:	mov	x20, x0
  405958:	ldr	x0, [sp, #160]
  40595c:	bl	40e14c <wcrtomb@plt+0xb35c>
  405960:	mov	x2, x0
  405964:	mov	x1, x20
  405968:	mov	x0, x19
  40596c:	bl	404688 <wcrtomb@plt+0x1898>
  405970:	ldr	x0, [sp, #160]
  405974:	bl	40e344 <wcrtomb@plt+0xb554>
  405978:	ldr	x0, [sp, #296]
  40597c:	ldr	x0, [x0, #24]
  405980:	bl	403e8c <wcrtomb@plt+0x109c>
  405984:	str	w0, [sp, #108]
  405988:	ldr	x0, [sp, #296]
  40598c:	ldr	x0, [x0, #24]
  405990:	ldrb	w0, [x0, #32]
  405994:	ubfx	x0, x0, #4, #4
  405998:	and	w0, w0, #0xff
  40599c:	add	w1, w0, #0x1
  4059a0:	ldr	x0, [sp, #296]
  4059a4:	ldr	x19, [x0, #24]
  4059a8:	mov	w2, w1
  4059ac:	ldr	w1, [sp, #108]
  4059b0:	ldr	x0, [sp, #280]
  4059b4:	bl	40bfec <wcrtomb@plt+0x91fc>
  4059b8:	str	x0, [x19]
  4059bc:	ldr	x0, [sp, #280]
  4059c0:	bl	40e344 <wcrtomb@plt+0xb554>
  4059c4:	ldr	x0, [sp, #296]
  4059c8:	ldr	x0, [x0, #24]
  4059cc:	ldrb	w0, [x0, #32]
  4059d0:	and	w0, w0, #0x8
  4059d4:	and	w0, w0, #0xff
  4059d8:	cmp	w0, #0x0
  4059dc:	b.eq	40604c <wcrtomb@plt+0x325c>  // b.none
  4059e0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4059e4:	add	x0, x0, #0x760
  4059e8:	ldrb	w0, [x0]
  4059ec:	cmp	w0, #0x0
  4059f0:	b.eq	40604c <wcrtomb@plt+0x325c>  // b.none
  4059f4:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  4059f8:	add	x0, x0, #0xc1c
  4059fc:	bl	402d80 <gettext@plt>
  405a00:	bl	403010 <wcrtomb@plt+0x220>
  405a04:	bl	403100 <wcrtomb@plt+0x310>
  405a08:	str	w0, [sp, #292]
  405a0c:	mov	w1, #0x0                   	// #0
  405a10:	ldr	w0, [sp, #292]
  405a14:	bl	403ca0 <wcrtomb@plt+0xeb0>
  405a18:	str	x0, [sp, #280]
  405a1c:	ldr	x0, [sp, #280]
  405a20:	cmp	x0, #0x0
  405a24:	b.ne	405a38 <wcrtomb@plt+0x2c48>  // b.any
  405a28:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  405a2c:	add	x0, x0, #0xa4f
  405a30:	bl	402d80 <gettext@plt>
  405a34:	bl	403010 <wcrtomb@plt+0x220>
  405a38:	ldr	x0, [sp, #280]
  405a3c:	bl	40e134 <wcrtomb@plt+0xb344>
  405a40:	str	x0, [sp, #352]
  405a44:	ldr	x0, [sp, #280]
  405a48:	bl	40e14c <wcrtomb@plt+0xb35c>
  405a4c:	mov	w2, #0x0                   	// #0
  405a50:	mov	x1, x0
  405a54:	ldr	x0, [sp, #352]
  405a58:	bl	4060a0 <wcrtomb@plt+0x32b0>
  405a5c:	str	x0, [sp, #368]
  405a60:	mov	w1, #0x0                   	// #0
  405a64:	ldr	w0, [sp, #292]
  405a68:	bl	403ca0 <wcrtomb@plt+0xeb0>
  405a6c:	str	x0, [sp, #272]
  405a70:	ldr	x0, [sp, #272]
  405a74:	cmp	x0, #0x0
  405a78:	b.ne	405a8c <wcrtomb@plt+0x2c9c>  // b.any
  405a7c:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  405a80:	add	x0, x0, #0xa4f
  405a84:	bl	402d80 <gettext@plt>
  405a88:	bl	403010 <wcrtomb@plt+0x220>
  405a8c:	ldr	x0, [sp, #272]
  405a90:	bl	40e134 <wcrtomb@plt+0xb344>
  405a94:	str	x0, [sp, #344]
  405a98:	ldr	x0, [sp, #272]
  405a9c:	bl	40e14c <wcrtomb@plt+0xb35c>
  405aa0:	mov	w2, #0x0                   	// #0
  405aa4:	mov	x1, x0
  405aa8:	ldr	x0, [sp, #344]
  405aac:	bl	4060a0 <wcrtomb@plt+0x32b0>
  405ab0:	str	x0, [sp, #360]
  405ab4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405ab8:	add	x0, x0, #0x8e4
  405abc:	ldr	w0, [x0]
  405ac0:	cmp	w0, #0x1
  405ac4:	b.le	405e24 <wcrtomb@plt+0x3034>
  405ac8:	mov	x1, #0x8                   	// #8
  405acc:	ldr	x0, [sp, #368]
  405ad0:	bl	41b9c8 <wcrtomb@plt+0x18bd8>
  405ad4:	str	x0, [sp, #208]
  405ad8:	str	xzr, [sp, #88]
  405adc:	str	xzr, [sp, #336]
  405ae0:	str	xzr, [sp, #328]
  405ae4:	b	405b94 <wcrtomb@plt+0x2da4>
  405ae8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405aec:	add	x0, x0, #0x8e4
  405af0:	ldr	w0, [x0]
  405af4:	cmp	w0, #0x1
  405af8:	b.eq	405b30 <wcrtomb@plt+0x2d40>  // b.none
  405afc:	ldr	x1, [sp, #352]
  405b00:	ldr	x0, [sp, #336]
  405b04:	add	x4, x1, x0
  405b08:	ldr	x1, [sp, #368]
  405b0c:	ldr	x0, [sp, #336]
  405b10:	sub	x0, x1, x0
  405b14:	add	x1, sp, #0x58
  405b18:	mov	x3, x1
  405b1c:	mov	x2, x0
  405b20:	mov	x1, x4
  405b24:	mov	x0, #0x0                   	// #0
  405b28:	bl	41bae8 <wcrtomb@plt+0x18cf8>
  405b2c:	b	405b34 <wcrtomb@plt+0x2d44>
  405b30:	mov	x0, #0x1                   	// #1
  405b34:	str	x0, [sp, #312]
  405b38:	ldr	x0, [sp, #312]
  405b3c:	cmn	x0, #0x1
  405b40:	b.eq	405b5c <wcrtomb@plt+0x2d6c>  // b.none
  405b44:	ldr	x0, [sp, #312]
  405b48:	cmn	x0, #0x2
  405b4c:	b.eq	405b5c <wcrtomb@plt+0x2d6c>  // b.none
  405b50:	ldr	x0, [sp, #312]
  405b54:	cmp	x0, #0x0
  405b58:	b.ne	405b64 <wcrtomb@plt+0x2d74>  // b.any
  405b5c:	mov	x0, #0x1                   	// #1
  405b60:	str	x0, [sp, #312]
  405b64:	ldr	x0, [sp, #328]
  405b68:	add	x1, x0, #0x1
  405b6c:	str	x1, [sp, #328]
  405b70:	lsl	x0, x0, #3
  405b74:	ldr	x1, [sp, #208]
  405b78:	add	x0, x1, x0
  405b7c:	ldr	x1, [sp, #312]
  405b80:	str	x1, [x0]
  405b84:	ldr	x1, [sp, #336]
  405b88:	ldr	x0, [sp, #312]
  405b8c:	add	x0, x1, x0
  405b90:	str	x0, [sp, #336]
  405b94:	ldr	x1, [sp, #336]
  405b98:	ldr	x0, [sp, #368]
  405b9c:	cmp	x1, x0
  405ba0:	b.cc	405ae8 <wcrtomb@plt+0x2cf8>  // b.lo, b.ul, b.last
  405ba4:	ldr	x0, [sp, #328]
  405ba8:	str	x0, [sp, #200]
  405bac:	add	x0, sp, #0x58
  405bb0:	mov	x2, #0x8                   	// #8
  405bb4:	mov	w1, #0x0                   	// #0
  405bb8:	bl	402980 <memset@plt>
  405bbc:	str	xzr, [sp, #320]
  405bc0:	ldr	x0, [sp, #200]
  405bc4:	lsl	x0, x0, #1
  405bc8:	add	x0, x0, #0x1
  405bcc:	mov	x1, #0x8                   	// #8
  405bd0:	bl	41b9c8 <wcrtomb@plt+0x18bd8>
  405bd4:	str	x0, [sp, #192]
  405bd8:	ldr	x0, [sp, #296]
  405bdc:	ldr	x1, [sp, #192]
  405be0:	str	x1, [x0, #24]
  405be4:	str	xzr, [sp, #336]
  405be8:	b	405de0 <wcrtomb@plt+0x2ff0>
  405bec:	ldr	x1, [sp, #320]
  405bf0:	ldr	x0, [sp, #360]
  405bf4:	cmp	x1, x0
  405bf8:	b.cc	405c0c <wcrtomb@plt+0x2e1c>  // b.lo, b.ul, b.last
  405bfc:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  405c00:	add	x0, x0, #0xb1a
  405c04:	bl	402d80 <gettext@plt>
  405c08:	bl	403010 <wcrtomb@plt+0x220>
  405c0c:	ldr	x0, [sp, #336]
  405c10:	lsl	x0, x0, #3
  405c14:	ldr	x1, [sp, #208]
  405c18:	add	x0, x1, x0
  405c1c:	ldr	x0, [x0]
  405c20:	add	x2, x0, #0x1
  405c24:	ldr	x0, [sp, #336]
  405c28:	lsl	x0, x0, #4
  405c2c:	ldr	x1, [sp, #192]
  405c30:	add	x19, x1, x0
  405c34:	mov	x0, x2
  405c38:	bl	41b9a8 <wcrtomb@plt+0x18bb8>
  405c3c:	str	x0, [x19]
  405c40:	ldr	x0, [sp, #336]
  405c44:	lsl	x0, x0, #4
  405c48:	ldr	x1, [sp, #192]
  405c4c:	add	x0, x1, x0
  405c50:	ldr	x3, [x0]
  405c54:	ldr	x0, [sp, #336]
  405c58:	lsl	x0, x0, #3
  405c5c:	ldr	x1, [sp, #208]
  405c60:	add	x0, x1, x0
  405c64:	ldr	x0, [x0]
  405c68:	mov	x2, x0
  405c6c:	ldr	x1, [sp, #352]
  405c70:	mov	x0, x3
  405c74:	bl	4026d0 <memcpy@plt>
  405c78:	ldr	x0, [sp, #336]
  405c7c:	lsl	x0, x0, #4
  405c80:	ldr	x1, [sp, #192]
  405c84:	add	x0, x1, x0
  405c88:	ldr	x1, [x0]
  405c8c:	ldr	x0, [sp, #336]
  405c90:	lsl	x0, x0, #3
  405c94:	ldr	x2, [sp, #208]
  405c98:	add	x0, x2, x0
  405c9c:	ldr	x0, [x0]
  405ca0:	add	x0, x1, x0
  405ca4:	strb	wzr, [x0]
  405ca8:	ldr	x0, [sp, #336]
  405cac:	lsl	x0, x0, #3
  405cb0:	ldr	x1, [sp, #208]
  405cb4:	add	x0, x1, x0
  405cb8:	ldr	x0, [x0]
  405cbc:	ldr	x1, [sp, #352]
  405cc0:	add	x0, x1, x0
  405cc4:	str	x0, [sp, #352]
  405cc8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405ccc:	add	x0, x0, #0x8e4
  405cd0:	ldr	w0, [x0]
  405cd4:	cmp	w0, #0x1
  405cd8:	b.eq	405d10 <wcrtomb@plt+0x2f20>  // b.none
  405cdc:	ldr	x1, [sp, #344]
  405ce0:	ldr	x0, [sp, #320]
  405ce4:	add	x4, x1, x0
  405ce8:	ldr	x1, [sp, #360]
  405cec:	ldr	x0, [sp, #320]
  405cf0:	sub	x0, x1, x0
  405cf4:	add	x1, sp, #0x58
  405cf8:	mov	x3, x1
  405cfc:	mov	x2, x0
  405d00:	mov	x1, x4
  405d04:	mov	x0, #0x0                   	// #0
  405d08:	bl	41bae8 <wcrtomb@plt+0x18cf8>
  405d0c:	b	405d14 <wcrtomb@plt+0x2f24>
  405d10:	mov	x0, #0x1                   	// #1
  405d14:	str	x0, [sp, #312]
  405d18:	ldr	x0, [sp, #312]
  405d1c:	cmn	x0, #0x1
  405d20:	b.eq	405d3c <wcrtomb@plt+0x2f4c>  // b.none
  405d24:	ldr	x0, [sp, #312]
  405d28:	cmn	x0, #0x2
  405d2c:	b.eq	405d3c <wcrtomb@plt+0x2f4c>  // b.none
  405d30:	ldr	x0, [sp, #312]
  405d34:	cmp	x0, #0x0
  405d38:	b.ne	405d44 <wcrtomb@plt+0x2f54>  // b.any
  405d3c:	mov	x0, #0x1                   	// #1
  405d40:	str	x0, [sp, #312]
  405d44:	ldr	x0, [sp, #312]
  405d48:	add	x2, x0, #0x1
  405d4c:	ldr	x0, [sp, #336]
  405d50:	lsl	x0, x0, #4
  405d54:	add	x0, x0, #0x8
  405d58:	ldr	x1, [sp, #192]
  405d5c:	add	x19, x1, x0
  405d60:	mov	x0, x2
  405d64:	bl	41b9a8 <wcrtomb@plt+0x18bb8>
  405d68:	str	x0, [x19]
  405d6c:	ldr	x0, [sp, #336]
  405d70:	lsl	x0, x0, #4
  405d74:	add	x0, x0, #0x8
  405d78:	ldr	x1, [sp, #192]
  405d7c:	add	x0, x1, x0
  405d80:	ldr	x3, [x0]
  405d84:	ldr	x1, [sp, #344]
  405d88:	ldr	x0, [sp, #320]
  405d8c:	add	x0, x1, x0
  405d90:	ldr	x2, [sp, #312]
  405d94:	mov	x1, x0
  405d98:	mov	x0, x3
  405d9c:	bl	4026d0 <memcpy@plt>
  405da0:	ldr	x0, [sp, #336]
  405da4:	lsl	x0, x0, #4
  405da8:	add	x0, x0, #0x8
  405dac:	ldr	x1, [sp, #192]
  405db0:	add	x0, x1, x0
  405db4:	ldr	x1, [x0]
  405db8:	ldr	x0, [sp, #312]
  405dbc:	add	x0, x1, x0
  405dc0:	strb	wzr, [x0]
  405dc4:	ldr	x1, [sp, #320]
  405dc8:	ldr	x0, [sp, #312]
  405dcc:	add	x0, x1, x0
  405dd0:	str	x0, [sp, #320]
  405dd4:	ldr	x0, [sp, #336]
  405dd8:	add	x0, x0, #0x1
  405ddc:	str	x0, [sp, #336]
  405de0:	ldr	x1, [sp, #336]
  405de4:	ldr	x0, [sp, #200]
  405de8:	cmp	x1, x0
  405dec:	b.cc	405bec <wcrtomb@plt+0x2dfc>  // b.lo, b.ul, b.last
  405df0:	ldr	x0, [sp, #336]
  405df4:	lsl	x0, x0, #4
  405df8:	ldr	x1, [sp, #192]
  405dfc:	add	x0, x1, x0
  405e00:	str	xzr, [x0]
  405e04:	ldr	x1, [sp, #320]
  405e08:	ldr	x0, [sp, #360]
  405e0c:	cmp	x1, x0
  405e10:	b.eq	40600c <wcrtomb@plt+0x321c>  // b.none
  405e14:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  405e18:	add	x0, x0, #0xb1a
  405e1c:	bl	402d80 <gettext@plt>
  405e20:	bl	403010 <wcrtomb@plt+0x220>
  405e24:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  405e28:	add	x0, x0, #0x5b8
  405e2c:	str	x0, [sp, #264]
  405e30:	ldr	x0, [sp, #264]
  405e34:	str	x0, [sp, #256]
  405e38:	mov	x0, #0x100                 	// #256
  405e3c:	str	x0, [sp, #248]
  405e40:	ldr	x0, [sp, #256]
  405e44:	str	x0, [sp, #240]
  405e48:	ldr	x0, [sp, #240]
  405e4c:	ldr	x1, [x0, #32]
  405e50:	ldr	x0, [sp, #240]
  405e54:	ldr	x0, [x0, #24]
  405e58:	sub	x0, x1, x0
  405e5c:	mov	x1, x0
  405e60:	ldr	x0, [sp, #248]
  405e64:	cmp	x1, x0
  405e68:	b.cs	405e78 <wcrtomb@plt+0x3088>  // b.hs, b.nlast
  405e6c:	ldr	x1, [sp, #248]
  405e70:	ldr	x0, [sp, #256]
  405e74:	bl	41be60 <_obstack_newchunk@@Base>
  405e78:	ldr	x0, [sp, #256]
  405e7c:	ldr	x1, [x0, #24]
  405e80:	ldr	x0, [sp, #248]
  405e84:	add	x1, x1, x0
  405e88:	ldr	x0, [sp, #256]
  405e8c:	str	x1, [x0, #24]
  405e90:	ldr	x0, [sp, #264]
  405e94:	str	x0, [sp, #232]
  405e98:	ldr	x0, [sp, #232]
  405e9c:	ldr	x0, [x0, #16]
  405ea0:	str	x0, [sp, #224]
  405ea4:	ldr	x0, [sp, #232]
  405ea8:	ldr	x0, [x0, #24]
  405eac:	ldr	x1, [sp, #224]
  405eb0:	cmp	x1, x0
  405eb4:	b.ne	405ec8 <wcrtomb@plt+0x30d8>  // b.any
  405eb8:	ldr	x0, [sp, #232]
  405ebc:	ldrb	w1, [x0, #80]
  405ec0:	orr	w1, w1, #0x2
  405ec4:	strb	w1, [x0, #80]
  405ec8:	ldr	x0, [sp, #232]
  405ecc:	ldr	x0, [x0, #24]
  405ed0:	mov	x1, x0
  405ed4:	ldr	x0, [sp, #232]
  405ed8:	ldr	x0, [x0, #48]
  405edc:	add	x1, x1, x0
  405ee0:	ldr	x0, [sp, #232]
  405ee4:	ldr	x0, [x0, #48]
  405ee8:	mvn	x0, x0
  405eec:	and	x0, x1, x0
  405ef0:	mov	x1, x0
  405ef4:	ldr	x0, [sp, #232]
  405ef8:	str	x1, [x0, #24]
  405efc:	ldr	x0, [sp, #232]
  405f00:	ldr	x1, [x0, #24]
  405f04:	ldr	x0, [sp, #232]
  405f08:	ldr	x0, [x0, #8]
  405f0c:	sub	x0, x1, x0
  405f10:	mov	x2, x0
  405f14:	ldr	x0, [sp, #232]
  405f18:	ldr	x1, [x0, #32]
  405f1c:	ldr	x0, [sp, #232]
  405f20:	ldr	x0, [x0, #8]
  405f24:	sub	x0, x1, x0
  405f28:	cmp	x2, x0
  405f2c:	b.ls	405f40 <wcrtomb@plt+0x3150>  // b.plast
  405f30:	ldr	x0, [sp, #232]
  405f34:	ldr	x1, [x0, #32]
  405f38:	ldr	x0, [sp, #232]
  405f3c:	str	x1, [x0, #24]
  405f40:	ldr	x0, [sp, #232]
  405f44:	ldr	x1, [x0, #24]
  405f48:	ldr	x0, [sp, #232]
  405f4c:	str	x1, [x0, #16]
  405f50:	ldr	x0, [sp, #224]
  405f54:	str	x0, [sp, #216]
  405f58:	ldr	x0, [sp, #352]
  405f5c:	str	x0, [sp, #304]
  405f60:	ldr	x1, [sp, #368]
  405f64:	ldr	x0, [sp, #360]
  405f68:	cmp	x1, x0
  405f6c:	b.eq	405f80 <wcrtomb@plt+0x3190>  // b.none
  405f70:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  405f74:	add	x0, x0, #0xb1a
  405f78:	bl	402d80 <gettext@plt>
  405f7c:	bl	403010 <wcrtomb@plt+0x220>
  405f80:	str	xzr, [sp, #368]
  405f84:	b	405fac <wcrtomb@plt+0x31bc>
  405f88:	ldr	x1, [sp, #216]
  405f8c:	ldr	x0, [sp, #368]
  405f90:	add	x0, x1, x0
  405f94:	ldr	x1, [sp, #368]
  405f98:	and	w1, w1, #0xff
  405f9c:	strb	w1, [x0]
  405fa0:	ldr	x0, [sp, #368]
  405fa4:	add	x0, x0, #0x1
  405fa8:	str	x0, [sp, #368]
  405fac:	ldr	x0, [sp, #368]
  405fb0:	cmp	x0, #0xff
  405fb4:	b.ls	405f88 <wcrtomb@plt+0x3198>  // b.plast
  405fb8:	b	405fec <wcrtomb@plt+0x31fc>
  405fbc:	ldr	x0, [sp, #344]
  405fc0:	add	x1, x0, #0x1
  405fc4:	str	x1, [sp, #344]
  405fc8:	ldr	x1, [sp, #304]
  405fcc:	add	x2, x1, #0x1
  405fd0:	str	x2, [sp, #304]
  405fd4:	ldrb	w1, [x1]
  405fd8:	and	x1, x1, #0xff
  405fdc:	ldr	x2, [sp, #216]
  405fe0:	add	x1, x2, x1
  405fe4:	ldrb	w0, [x0]
  405fe8:	strb	w0, [x1]
  405fec:	ldr	x0, [sp, #360]
  405ff0:	sub	x1, x0, #0x1
  405ff4:	str	x1, [sp, #360]
  405ff8:	cmp	x0, #0x0
  405ffc:	b.ne	405fbc <wcrtomb@plt+0x31cc>  // b.any
  406000:	ldr	x0, [sp, #296]
  406004:	ldr	x1, [sp, #216]
  406008:	str	x1, [x0, #24]
  40600c:	bl	403320 <wcrtomb@plt+0x530>
  406010:	ldr	x0, [sp, #280]
  406014:	bl	40e344 <wcrtomb@plt+0xb554>
  406018:	ldr	x0, [sp, #272]
  40601c:	bl	40e344 <wcrtomb@plt+0xb554>
  406020:	b	406050 <wcrtomb@plt+0x3260>
  406024:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  406028:	add	x0, x0, #0x9ed
  40602c:	bl	402d80 <gettext@plt>
  406030:	bl	403010 <wcrtomb@plt+0x220>
  406034:	ldr	w0, [sp, #380]
  406038:	and	w0, w0, #0xff
  40603c:	bl	402fc8 <wcrtomb@plt+0x1d8>
  406040:	b	406050 <wcrtomb@plt+0x3260>
  406044:	nop
  406048:	b	406050 <wcrtomb@plt+0x3260>
  40604c:	nop
  406050:	ldr	x0, [sp, #40]
  406054:	ldr	x1, [x0, #16]
  406058:	add	x1, x1, #0x1
  40605c:	str	x1, [x0, #16]
  406060:	b	404f54 <wcrtomb@plt+0x2164>
  406064:	nop
  406068:	b	404f54 <wcrtomb@plt+0x2164>
  40606c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406070:	add	x0, x0, #0x5a0
  406074:	ldr	x0, [x0]
  406078:	cmp	x0, #0x0
  40607c:	b.eq	406090 <wcrtomb@plt+0x32a0>  // b.none
  406080:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  406084:	add	x0, x0, #0xbcf
  406088:	bl	402d80 <gettext@plt>
  40608c:	bl	403010 <wcrtomb@plt+0x220>
  406090:	ldr	x0, [sp, #40]
  406094:	ldp	x19, x20, [sp, #16]
  406098:	ldp	x29, x30, [sp], #384
  40609c:	ret
  4060a0:	stp	x29, x30, [sp, #-112]!
  4060a4:	mov	x29, sp
  4060a8:	str	x0, [sp, #40]
  4060ac:	str	x1, [sp, #32]
  4060b0:	str	w2, [sp, #28]
  4060b4:	ldr	x1, [sp, #40]
  4060b8:	ldr	x0, [sp, #32]
  4060bc:	add	x0, x1, x0
  4060c0:	str	x0, [sp, #72]
  4060c4:	ldr	x0, [sp, #40]
  4060c8:	str	x0, [sp, #104]
  4060cc:	ldr	x0, [sp, #40]
  4060d0:	str	x0, [sp, #96]
  4060d4:	str	wzr, [sp, #88]
  4060d8:	str	xzr, [sp, #56]
  4060dc:	b	40660c <wcrtomb@plt+0x381c>
  4060e0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4060e4:	add	x0, x0, #0x8e4
  4060e8:	ldr	w0, [x0]
  4060ec:	cmp	w0, #0x1
  4060f0:	b.eq	406120 <wcrtomb@plt+0x3330>  // b.none
  4060f4:	ldr	x1, [sp, #72]
  4060f8:	ldr	x0, [sp, #104]
  4060fc:	sub	x0, x1, x0
  406100:	mov	x1, x0
  406104:	add	x0, sp, #0x38
  406108:	mov	x3, x0
  40610c:	mov	x2, x1
  406110:	ldr	x1, [sp, #104]
  406114:	mov	x0, #0x0                   	// #0
  406118:	bl	41bae8 <wcrtomb@plt+0x18cf8>
  40611c:	b	406124 <wcrtomb@plt+0x3334>
  406120:	mov	w0, #0x1                   	// #1
  406124:	str	w0, [sp, #84]
  406128:	ldr	w0, [sp, #84]
  40612c:	cmp	w0, #0x1
  406130:	b.eq	406198 <wcrtomb@plt+0x33a8>  // b.none
  406134:	ldr	w0, [sp, #84]
  406138:	cmn	w0, #0x1
  40613c:	b.eq	406158 <wcrtomb@plt+0x3368>  // b.none
  406140:	ldr	w0, [sp, #84]
  406144:	cmn	w0, #0x2
  406148:	b.eq	406158 <wcrtomb@plt+0x3368>  // b.none
  40614c:	ldr	w0, [sp, #84]
  406150:	cmp	w0, #0x0
  406154:	b.ne	406160 <wcrtomb@plt+0x3370>  // b.any
  406158:	mov	w0, #0x1                   	// #1
  40615c:	str	w0, [sp, #84]
  406160:	ldrsw	x0, [sp, #84]
  406164:	mov	x2, x0
  406168:	ldr	x1, [sp, #104]
  40616c:	ldr	x0, [sp, #96]
  406170:	bl	4026e0 <memmove@plt>
  406174:	ldrsw	x0, [sp, #84]
  406178:	ldr	x1, [sp, #96]
  40617c:	add	x0, x1, x0
  406180:	str	x0, [sp, #96]
  406184:	ldrsw	x0, [sp, #84]
  406188:	ldr	x1, [sp, #104]
  40618c:	add	x0, x1, x0
  406190:	str	x0, [sp, #104]
  406194:	b	40660c <wcrtomb@plt+0x381c>
  406198:	ldr	x0, [sp, #104]
  40619c:	ldrb	w0, [x0]
  4061a0:	cmp	w0, #0x5c
  4061a4:	b.ne	4064b8 <wcrtomb@plt+0x36c8>  // b.any
  4061a8:	ldr	x0, [sp, #104]
  4061ac:	add	x0, x0, #0x1
  4061b0:	ldr	x1, [sp, #72]
  4061b4:	cmp	x1, x0
  4061b8:	b.ls	4064b8 <wcrtomb@plt+0x36c8>  // b.plast
  4061bc:	ldr	w0, [sp, #88]
  4061c0:	cmp	w0, #0x0
  4061c4:	b.ne	4064b8 <wcrtomb@plt+0x36c8>  // b.any
  4061c8:	ldr	x0, [sp, #104]
  4061cc:	add	x0, x0, #0x1
  4061d0:	str	x0, [sp, #104]
  4061d4:	ldr	x0, [sp, #104]
  4061d8:	ldrb	w0, [x0]
  4061dc:	cmp	w0, #0x78
  4061e0:	b.eq	406360 <wcrtomb@plt+0x3570>  // b.none
  4061e4:	cmp	w0, #0x78
  4061e8:	b.gt	406490 <wcrtomb@plt+0x36a0>
  4061ec:	cmp	w0, #0x76
  4061f0:	b.eq	406330 <wcrtomb@plt+0x3540>  // b.none
  4061f4:	cmp	w0, #0x76
  4061f8:	b.gt	406490 <wcrtomb@plt+0x36a0>
  4061fc:	cmp	w0, #0x74
  406200:	b.eq	40630c <wcrtomb@plt+0x351c>  // b.none
  406204:	cmp	w0, #0x74
  406208:	b.gt	406490 <wcrtomb@plt+0x36a0>
  40620c:	cmp	w0, #0x72
  406210:	b.eq	4062e8 <wcrtomb@plt+0x34f8>  // b.none
  406214:	cmp	w0, #0x72
  406218:	b.gt	406490 <wcrtomb@plt+0x36a0>
  40621c:	cmp	w0, #0x6f
  406220:	b.eq	40636c <wcrtomb@plt+0x357c>  // b.none
  406224:	cmp	w0, #0x6f
  406228:	b.gt	406490 <wcrtomb@plt+0x36a0>
  40622c:	cmp	w0, #0x6e
  406230:	b.eq	4062c4 <wcrtomb@plt+0x34d4>  // b.none
  406234:	cmp	w0, #0x6e
  406238:	b.gt	406490 <wcrtomb@plt+0x36a0>
  40623c:	cmp	w0, #0x66
  406240:	b.eq	4062a0 <wcrtomb@plt+0x34b0>  // b.none
  406244:	cmp	w0, #0x66
  406248:	b.gt	406490 <wcrtomb@plt+0x36a0>
  40624c:	cmp	w0, #0x64
  406250:	b.eq	406354 <wcrtomb@plt+0x3564>  // b.none
  406254:	cmp	w0, #0x64
  406258:	b.gt	406490 <wcrtomb@plt+0x36a0>
  40625c:	cmp	w0, #0x63
  406260:	b.eq	4063dc <wcrtomb@plt+0x35ec>  // b.none
  406264:	cmp	w0, #0x63
  406268:	b.gt	406490 <wcrtomb@plt+0x36a0>
  40626c:	cmp	w0, #0xa
  406270:	b.eq	4062c4 <wcrtomb@plt+0x34d4>  // b.none
  406274:	cmp	w0, #0x61
  406278:	b.ne	406490 <wcrtomb@plt+0x36a0>  // b.any
  40627c:	ldr	x0, [sp, #96]
  406280:	add	x1, x0, #0x1
  406284:	str	x1, [sp, #96]
  406288:	mov	w1, #0x7                   	// #7
  40628c:	strb	w1, [x0]
  406290:	ldr	x0, [sp, #104]
  406294:	add	x0, x0, #0x1
  406298:	str	x0, [sp, #104]
  40629c:	b	40660c <wcrtomb@plt+0x381c>
  4062a0:	ldr	x0, [sp, #96]
  4062a4:	add	x1, x0, #0x1
  4062a8:	str	x1, [sp, #96]
  4062ac:	mov	w1, #0xc                   	// #12
  4062b0:	strb	w1, [x0]
  4062b4:	ldr	x0, [sp, #104]
  4062b8:	add	x0, x0, #0x1
  4062bc:	str	x0, [sp, #104]
  4062c0:	b	40660c <wcrtomb@plt+0x381c>
  4062c4:	ldr	x0, [sp, #96]
  4062c8:	add	x1, x0, #0x1
  4062cc:	str	x1, [sp, #96]
  4062d0:	mov	w1, #0xa                   	// #10
  4062d4:	strb	w1, [x0]
  4062d8:	ldr	x0, [sp, #104]
  4062dc:	add	x0, x0, #0x1
  4062e0:	str	x0, [sp, #104]
  4062e4:	b	40660c <wcrtomb@plt+0x381c>
  4062e8:	ldr	x0, [sp, #96]
  4062ec:	add	x1, x0, #0x1
  4062f0:	str	x1, [sp, #96]
  4062f4:	mov	w1, #0xd                   	// #13
  4062f8:	strb	w1, [x0]
  4062fc:	ldr	x0, [sp, #104]
  406300:	add	x0, x0, #0x1
  406304:	str	x0, [sp, #104]
  406308:	b	40660c <wcrtomb@plt+0x381c>
  40630c:	ldr	x0, [sp, #96]
  406310:	add	x1, x0, #0x1
  406314:	str	x1, [sp, #96]
  406318:	mov	w1, #0x9                   	// #9
  40631c:	strb	w1, [x0]
  406320:	ldr	x0, [sp, #104]
  406324:	add	x0, x0, #0x1
  406328:	str	x0, [sp, #104]
  40632c:	b	40660c <wcrtomb@plt+0x381c>
  406330:	ldr	x0, [sp, #96]
  406334:	add	x1, x0, #0x1
  406338:	str	x1, [sp, #96]
  40633c:	mov	w1, #0xb                   	// #11
  406340:	strb	w1, [x0]
  406344:	ldr	x0, [sp, #104]
  406348:	add	x0, x0, #0x1
  40634c:	str	x0, [sp, #104]
  406350:	b	40660c <wcrtomb@plt+0x381c>
  406354:	mov	w0, #0xa                   	// #10
  406358:	str	w0, [sp, #92]
  40635c:	b	406374 <wcrtomb@plt+0x3584>
  406360:	mov	w0, #0x10                  	// #16
  406364:	str	w0, [sp, #92]
  406368:	b	406374 <wcrtomb@plt+0x3584>
  40636c:	mov	w0, #0x8                   	// #8
  406370:	str	w0, [sp, #92]
  406374:	add	x0, sp, #0x47
  406378:	ldr	w3, [sp, #92]
  40637c:	ldr	x2, [sp, #72]
  406380:	ldr	x1, [sp, #104]
  406384:	bl	403440 <wcrtomb@plt+0x650>
  406388:	str	x0, [sp, #104]
  40638c:	ldr	w0, [sp, #28]
  406390:	cmp	w0, #0x1
  406394:	b.ne	4063c4 <wcrtomb@plt+0x35d4>  // b.any
  406398:	ldrb	w0, [sp, #71]
  40639c:	cmp	w0, #0x26
  4063a0:	b.eq	4063b0 <wcrtomb@plt+0x35c0>  // b.none
  4063a4:	ldrb	w0, [sp, #71]
  4063a8:	cmp	w0, #0x5c
  4063ac:	b.ne	4063c4 <wcrtomb@plt+0x35d4>  // b.any
  4063b0:	ldr	x0, [sp, #96]
  4063b4:	add	x1, x0, #0x1
  4063b8:	str	x1, [sp, #96]
  4063bc:	mov	w1, #0x5c                  	// #92
  4063c0:	strb	w1, [x0]
  4063c4:	ldr	x0, [sp, #96]
  4063c8:	add	x1, x0, #0x1
  4063cc:	str	x1, [sp, #96]
  4063d0:	ldrb	w1, [sp, #71]
  4063d4:	strb	w1, [x0]
  4063d8:	b	40660c <wcrtomb@plt+0x381c>
  4063dc:	ldr	x0, [sp, #104]
  4063e0:	add	x0, x0, #0x1
  4063e4:	str	x0, [sp, #104]
  4063e8:	ldr	x1, [sp, #104]
  4063ec:	ldr	x0, [sp, #72]
  4063f0:	cmp	x1, x0
  4063f4:	b.cs	40646c <wcrtomb@plt+0x367c>  // b.hs, b.nlast
  4063f8:	ldr	x0, [sp, #104]
  4063fc:	ldrb	w0, [x0]
  406400:	bl	4028c0 <toupper@plt>
  406404:	sxtb	w0, w0
  406408:	eor	w0, w0, #0x40
  40640c:	sxtb	w2, w0
  406410:	ldr	x0, [sp, #96]
  406414:	add	x1, x0, #0x1
  406418:	str	x1, [sp, #96]
  40641c:	and	w1, w2, #0xff
  406420:	strb	w1, [x0]
  406424:	ldr	x0, [sp, #104]
  406428:	ldrb	w0, [x0]
  40642c:	cmp	w0, #0x5c
  406430:	b.ne	40645c <wcrtomb@plt+0x366c>  // b.any
  406434:	ldr	x0, [sp, #104]
  406438:	add	x0, x0, #0x1
  40643c:	str	x0, [sp, #104]
  406440:	ldr	x0, [sp, #104]
  406444:	ldrb	w0, [x0]
  406448:	cmp	w0, #0x5c
  40644c:	b.eq	40645c <wcrtomb@plt+0x366c>  // b.none
  406450:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  406454:	add	x0, x0, #0xbf4
  406458:	bl	403010 <wcrtomb@plt+0x220>
  40645c:	ldr	x0, [sp, #104]
  406460:	add	x0, x0, #0x1
  406464:	str	x0, [sp, #104]
  406468:	b	40660c <wcrtomb@plt+0x381c>
  40646c:	ldr	w0, [sp, #28]
  406470:	cmp	w0, #0x0
  406474:	b.eq	40660c <wcrtomb@plt+0x381c>  // b.none
  406478:	ldr	x0, [sp, #96]
  40647c:	add	x1, x0, #0x1
  406480:	str	x1, [sp, #96]
  406484:	mov	w1, #0x5c                  	// #92
  406488:	strb	w1, [x0]
  40648c:	b	40660c <wcrtomb@plt+0x381c>
  406490:	ldr	w0, [sp, #28]
  406494:	cmp	w0, #0x0
  406498:	b.eq	4064b0 <wcrtomb@plt+0x36c0>  // b.none
  40649c:	ldr	x0, [sp, #96]
  4064a0:	add	x1, x0, #0x1
  4064a4:	str	x1, [sp, #96]
  4064a8:	mov	w1, #0x5c                  	// #92
  4064ac:	strb	w1, [x0]
  4064b0:	nop
  4064b4:	b	4065ec <wcrtomb@plt+0x37fc>
  4064b8:	ldr	w0, [sp, #28]
  4064bc:	cmp	w0, #0x2
  4064c0:	b.ne	4065d0 <wcrtomb@plt+0x37e0>  // b.any
  4064c4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4064c8:	add	x0, x0, #0x8e8
  4064cc:	ldr	w0, [x0]
  4064d0:	cmp	w0, #0x0
  4064d4:	b.eq	4065d0 <wcrtomb@plt+0x37e0>  // b.none
  4064d8:	ldr	x0, [sp, #104]
  4064dc:	ldrb	w0, [x0]
  4064e0:	cmp	w0, #0x5d
  4064e4:	b.eq	40656c <wcrtomb@plt+0x377c>  // b.none
  4064e8:	cmp	w0, #0x5d
  4064ec:	b.gt	4065ec <wcrtomb@plt+0x37fc>
  4064f0:	cmp	w0, #0x5b
  4064f4:	b.eq	406524 <wcrtomb@plt+0x3734>  // b.none
  4064f8:	cmp	w0, #0x5b
  4064fc:	b.gt	4065ec <wcrtomb@plt+0x37fc>
  406500:	cmp	w0, #0x3d
  406504:	b.eq	40653c <wcrtomb@plt+0x374c>  // b.none
  406508:	cmp	w0, #0x3d
  40650c:	b.gt	4065ec <wcrtomb@plt+0x37fc>
  406510:	cmp	w0, #0x2e
  406514:	b.eq	40653c <wcrtomb@plt+0x374c>  // b.none
  406518:	cmp	w0, #0x3a
  40651c:	b.eq	40653c <wcrtomb@plt+0x374c>  // b.none
  406520:	b	4065ec <wcrtomb@plt+0x37fc>
  406524:	ldr	w0, [sp, #88]
  406528:	cmp	w0, #0x0
  40652c:	b.ne	4065d8 <wcrtomb@plt+0x37e8>  // b.any
  406530:	mov	w0, #0xffffffff            	// #-1
  406534:	str	w0, [sp, #88]
  406538:	b	4065d8 <wcrtomb@plt+0x37e8>
  40653c:	ldr	w0, [sp, #88]
  406540:	cmn	w0, #0x1
  406544:	b.ne	4065e0 <wcrtomb@plt+0x37f0>  // b.any
  406548:	ldr	x0, [sp, #104]
  40654c:	sub	x0, x0, #0x1
  406550:	ldrb	w0, [x0]
  406554:	cmp	w0, #0x5b
  406558:	b.ne	4065e0 <wcrtomb@plt+0x37f0>  // b.any
  40655c:	ldr	x0, [sp, #104]
  406560:	ldrb	w0, [x0]
  406564:	str	w0, [sp, #88]
  406568:	b	4065e0 <wcrtomb@plt+0x37f0>
  40656c:	ldr	w0, [sp, #88]
  406570:	cmp	w0, #0x0
  406574:	b.eq	4065e8 <wcrtomb@plt+0x37f8>  // b.none
  406578:	ldr	w0, [sp, #88]
  40657c:	cmn	w0, #0x1
  406580:	b.ne	40658c <wcrtomb@plt+0x379c>  // b.any
  406584:	str	wzr, [sp, #88]
  406588:	b	4065e8 <wcrtomb@plt+0x37f8>
  40658c:	ldr	x0, [sp, #104]
  406590:	sub	x0, x0, #0x2
  406594:	ldrb	w0, [x0]
  406598:	mov	w1, w0
  40659c:	ldr	w0, [sp, #88]
  4065a0:	cmp	w0, w1
  4065a4:	b.eq	4065e8 <wcrtomb@plt+0x37f8>  // b.none
  4065a8:	ldr	x0, [sp, #104]
  4065ac:	sub	x0, x0, #0x1
  4065b0:	ldrb	w0, [x0]
  4065b4:	mov	w1, w0
  4065b8:	ldr	w0, [sp, #88]
  4065bc:	cmp	w0, w1
  4065c0:	b.ne	4065e8 <wcrtomb@plt+0x37f8>  // b.any
  4065c4:	mov	w0, #0xffffffff            	// #-1
  4065c8:	str	w0, [sp, #88]
  4065cc:	b	4065e8 <wcrtomb@plt+0x37f8>
  4065d0:	nop
  4065d4:	b	4065ec <wcrtomb@plt+0x37fc>
  4065d8:	nop
  4065dc:	b	4065ec <wcrtomb@plt+0x37fc>
  4065e0:	nop
  4065e4:	b	4065ec <wcrtomb@plt+0x37fc>
  4065e8:	nop
  4065ec:	ldr	x1, [sp, #104]
  4065f0:	add	x0, x1, #0x1
  4065f4:	str	x0, [sp, #104]
  4065f8:	ldr	x0, [sp, #96]
  4065fc:	add	x2, x0, #0x1
  406600:	str	x2, [sp, #96]
  406604:	ldrb	w1, [x1]
  406608:	strb	w1, [x0]
  40660c:	ldr	x1, [sp, #104]
  406610:	ldr	x0, [sp, #72]
  406614:	cmp	x1, x0
  406618:	b.cc	4060e0 <wcrtomb@plt+0x32f0>  // b.lo, b.ul, b.last
  40661c:	ldr	x1, [sp, #96]
  406620:	ldr	x0, [sp, #40]
  406624:	sub	x0, x1, x0
  406628:	ldp	x29, x30, [sp], #112
  40662c:	ret
  406630:	stp	x29, x30, [sp, #-64]!
  406634:	mov	x29, sp
  406638:	str	x0, [sp, #40]
  40663c:	str	x1, [sp, #32]
  406640:	str	x2, [sp, #24]
  406644:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406648:	add	x0, x0, #0x558
  40664c:	str	xzr, [x0, #24]
  406650:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406654:	add	x0, x0, #0x558
  406658:	ldr	x1, [sp, #32]
  40665c:	str	x1, [x0]
  406660:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406664:	add	x0, x0, #0x558
  406668:	ldr	x1, [x0]
  40666c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406670:	add	x0, x0, #0x558
  406674:	str	x1, [x0, #8]
  406678:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40667c:	add	x0, x0, #0x558
  406680:	ldr	x1, [x0, #8]
  406684:	ldr	x0, [sp, #24]
  406688:	add	x1, x1, x0
  40668c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406690:	add	x0, x0, #0x558
  406694:	str	x1, [x0, #16]
  406698:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40669c:	add	x0, x0, #0x578
  4066a0:	str	xzr, [x0, #8]
  4066a4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4066a8:	add	x0, x0, #0x578
  4066ac:	str	xzr, [x0]
  4066b0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4066b4:	add	x0, x0, #0x620
  4066b8:	ldr	x0, [x0]
  4066bc:	add	x1, x0, #0x1
  4066c0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4066c4:	add	x0, x0, #0x620
  4066c8:	str	x1, [x0]
  4066cc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4066d0:	add	x0, x0, #0x620
  4066d4:	ldr	x1, [x0]
  4066d8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4066dc:	add	x0, x0, #0x578
  4066e0:	str	x1, [x0, #16]
  4066e4:	ldr	x0, [sp, #40]
  4066e8:	bl	404ecc <wcrtomb@plt+0x20dc>
  4066ec:	str	x0, [sp, #56]
  4066f0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4066f4:	add	x0, x0, #0x558
  4066f8:	str	xzr, [x0]
  4066fc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406700:	add	x0, x0, #0x558
  406704:	str	xzr, [x0, #8]
  406708:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40670c:	add	x0, x0, #0x558
  406710:	str	xzr, [x0, #16]
  406714:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406718:	add	x0, x0, #0x450
  40671c:	strb	wzr, [x0]
  406720:	ldr	x0, [sp, #56]
  406724:	ldp	x29, x30, [sp], #64
  406728:	ret
  40672c:	stp	x29, x30, [sp, #-48]!
  406730:	mov	x29, sp
  406734:	str	x0, [sp, #24]
  406738:	str	x1, [sp, #16]
  40673c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406740:	add	x0, x0, #0x528
  406744:	ldr	x1, [x0]
  406748:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40674c:	add	x0, x0, #0x558
  406750:	str	x1, [x0, #24]
  406754:	ldr	x0, [sp, #16]
  406758:	ldrb	w0, [x0]
  40675c:	cmp	w0, #0x2d
  406760:	b.ne	406778 <wcrtomb@plt+0x3988>  // b.any
  406764:	ldr	x0, [sp, #16]
  406768:	add	x0, x0, #0x1
  40676c:	ldrb	w0, [x0]
  406770:	cmp	w0, #0x0
  406774:	b.eq	40679c <wcrtomb@plt+0x39ac>  // b.none
  406778:	mov	w2, #0x1                   	// #1
  40677c:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  406780:	add	x1, x0, #0xfd0
  406784:	ldr	x0, [sp, #16]
  406788:	bl	40d630 <wcrtomb@plt+0xa840>
  40678c:	mov	x1, x0
  406790:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406794:	add	x0, x0, #0x558
  406798:	str	x1, [x0, #24]
  40679c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4067a0:	add	x0, x0, #0x578
  4067a4:	mov	x1, #0x1                   	// #1
  4067a8:	str	x1, [x0, #8]
  4067ac:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4067b0:	add	x0, x0, #0x578
  4067b4:	ldr	x1, [sp, #16]
  4067b8:	str	x1, [x0]
  4067bc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4067c0:	add	x0, x0, #0x578
  4067c4:	str	xzr, [x0, #16]
  4067c8:	ldr	x0, [sp, #24]
  4067cc:	bl	404ecc <wcrtomb@plt+0x20dc>
  4067d0:	str	x0, [sp, #40]
  4067d4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4067d8:	add	x0, x0, #0x558
  4067dc:	ldr	x1, [x0, #24]
  4067e0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4067e4:	add	x0, x0, #0x528
  4067e8:	ldr	x0, [x0]
  4067ec:	cmp	x1, x0
  4067f0:	b.eq	406804 <wcrtomb@plt+0x3a14>  // b.none
  4067f4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4067f8:	add	x0, x0, #0x558
  4067fc:	ldr	x0, [x0, #24]
  406800:	bl	40dae4 <wcrtomb@plt+0xacf4>
  406804:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406808:	add	x0, x0, #0x558
  40680c:	str	xzr, [x0, #24]
  406810:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406814:	add	x0, x0, #0x450
  406818:	strb	wzr, [x0]
  40681c:	ldr	x0, [sp, #40]
  406820:	ldp	x29, x30, [sp], #48
  406824:	ret
  406828:	stp	x29, x30, [sp, #-32]!
  40682c:	mov	x29, sp
  406830:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406834:	add	x0, x0, #0x610
  406838:	ldr	x0, [x0]
  40683c:	str	x0, [sp, #24]
  406840:	b	406874 <wcrtomb@plt+0x3a84>
  406844:	ldr	x0, [sp, #24]
  406848:	ldr	x0, [x0]
  40684c:	cmp	x0, #0x0
  406850:	b.eq	406868 <wcrtomb@plt+0x3a78>  // b.none
  406854:	ldr	x0, [sp, #24]
  406858:	ldr	x0, [x0]
  40685c:	bl	402b60 <free@plt>
  406860:	ldr	x0, [sp, #24]
  406864:	str	xzr, [x0]
  406868:	ldr	x0, [sp, #24]
  40686c:	ldr	x0, [x0, #24]
  406870:	str	x0, [sp, #24]
  406874:	ldr	x0, [sp, #24]
  406878:	cmp	x0, #0x0
  40687c:	b.ne	406844 <wcrtomb@plt+0x3a54>  // b.any
  406880:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406884:	add	x0, x0, #0x618
  406888:	ldr	x0, [x0]
  40688c:	str	x0, [sp, #24]
  406890:	b	4068c4 <wcrtomb@plt+0x3ad4>
  406894:	ldr	x0, [sp, #24]
  406898:	ldr	x0, [x0]
  40689c:	cmp	x0, #0x0
  4068a0:	b.eq	4068b8 <wcrtomb@plt+0x3ac8>  // b.none
  4068a4:	ldr	x0, [sp, #24]
  4068a8:	ldr	x0, [x0]
  4068ac:	bl	402b60 <free@plt>
  4068b0:	ldr	x0, [sp, #24]
  4068b4:	str	xzr, [x0]
  4068b8:	ldr	x0, [sp, #24]
  4068bc:	ldr	x0, [x0, #24]
  4068c0:	str	x0, [sp, #24]
  4068c4:	ldr	x0, [sp, #24]
  4068c8:	cmp	x0, #0x0
  4068cc:	b.ne	406894 <wcrtomb@plt+0x3aa4>  // b.any
  4068d0:	nop
  4068d4:	nop
  4068d8:	ldp	x29, x30, [sp], #32
  4068dc:	ret
  4068e0:	stp	x29, x30, [sp, #-64]!
  4068e4:	mov	x29, sp
  4068e8:	str	x19, [sp, #16]
  4068ec:	str	x0, [sp, #40]
  4068f0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4068f4:	add	x0, x0, #0x5b0
  4068f8:	ldr	x0, [x0]
  4068fc:	cmp	x0, #0x0
  406900:	b.eq	406938 <wcrtomb@plt+0x3b48>  // b.none
  406904:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406908:	add	x0, x0, #0x5b0
  40690c:	ldr	x0, [x0]
  406910:	add	x0, x0, #0x10
  406914:	mov	x2, #0x18                  	// #24
  406918:	mov	x1, x0
  40691c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406920:	add	x0, x0, #0x578
  406924:	bl	4026d0 <memcpy@plt>
  406928:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  40692c:	add	x0, x0, #0x930
  406930:	bl	402d80 <gettext@plt>
  406934:	bl	403010 <wcrtomb@plt+0x220>
  406938:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40693c:	add	x0, x0, #0x5a0
  406940:	ldr	x0, [x0]
  406944:	cmp	x0, #0x0
  406948:	b.eq	4069e0 <wcrtomb@plt+0x3bf0>  // b.none
  40694c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406950:	add	x0, x0, #0x5a0
  406954:	ldr	x1, [x0]
  406958:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40695c:	add	x0, x0, #0x5a8
  406960:	ldr	x19, [x0]
  406964:	mov	x0, x1
  406968:	bl	40e14c <wcrtomb@plt+0xb35c>
  40696c:	str	x0, [x19, #8]
  406970:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406974:	add	x0, x0, #0x5a8
  406978:	ldr	x0, [x0]
  40697c:	ldr	x0, [x0, #8]
  406980:	cmp	x0, #0x0
  406984:	b.eq	4069c4 <wcrtomb@plt+0x3bd4>  // b.none
  406988:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40698c:	add	x0, x0, #0x5a0
  406990:	ldr	x0, [x0]
  406994:	bl	40e134 <wcrtomb@plt+0xb344>
  406998:	mov	x2, x0
  40699c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4069a0:	add	x0, x0, #0x5a8
  4069a4:	ldr	x0, [x0]
  4069a8:	ldr	x1, [x0, #8]
  4069ac:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4069b0:	add	x0, x0, #0x5a8
  4069b4:	ldr	x19, [x0]
  4069b8:	mov	x0, x2
  4069bc:	bl	41ba50 <wcrtomb@plt+0x18c60>
  4069c0:	str	x0, [x19]
  4069c4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4069c8:	add	x0, x0, #0x5a0
  4069cc:	ldr	x0, [x0]
  4069d0:	bl	40e344 <wcrtomb@plt+0xb554>
  4069d4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4069d8:	add	x0, x0, #0x5a0
  4069dc:	str	xzr, [x0]
  4069e0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4069e4:	add	x0, x0, #0x590
  4069e8:	ldr	x0, [x0]
  4069ec:	str	x0, [sp, #56]
  4069f0:	b	406b00 <wcrtomb@plt+0x3d10>
  4069f4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4069f8:	add	x0, x0, #0x598
  4069fc:	ldr	x0, [x0]
  406a00:	str	x0, [sp, #48]
  406a04:	b	406a38 <wcrtomb@plt+0x3c48>
  406a08:	ldr	x0, [sp, #48]
  406a0c:	ldr	x2, [x0, #8]
  406a10:	ldr	x0, [sp, #56]
  406a14:	ldr	x0, [x0, #8]
  406a18:	mov	x1, x0
  406a1c:	mov	x0, x2
  406a20:	bl	402b30 <strcmp@plt>
  406a24:	cmp	w0, #0x0
  406a28:	b.eq	406a48 <wcrtomb@plt+0x3c58>  // b.none
  406a2c:	ldr	x0, [sp, #48]
  406a30:	ldr	x0, [x0, #40]
  406a34:	str	x0, [sp, #48]
  406a38:	ldr	x0, [sp, #48]
  406a3c:	cmp	x0, #0x0
  406a40:	b.ne	406a08 <wcrtomb@plt+0x3c18>  // b.any
  406a44:	b	406a4c <wcrtomb@plt+0x3c5c>
  406a48:	nop
  406a4c:	ldr	x0, [sp, #48]
  406a50:	cmp	x0, #0x0
  406a54:	b.eq	406a8c <wcrtomb@plt+0x3c9c>  // b.none
  406a58:	ldr	x0, [sp, #40]
  406a5c:	ldr	x2, [x0]
  406a60:	ldr	x0, [sp, #56]
  406a64:	ldr	x1, [x0]
  406a68:	mov	x0, x1
  406a6c:	lsl	x0, x0, #2
  406a70:	add	x0, x0, x1
  406a74:	lsl	x0, x0, #3
  406a78:	add	x0, x2, x0
  406a7c:	ldr	x1, [sp, #48]
  406a80:	ldr	x1, [x1]
  406a84:	str	x1, [x0, #24]
  406a88:	b	406af4 <wcrtomb@plt+0x3d04>
  406a8c:	ldr	x0, [sp, #56]
  406a90:	ldr	x0, [x0, #8]
  406a94:	ldrb	w0, [x0]
  406a98:	cmp	w0, #0x0
  406a9c:	b.eq	406ac4 <wcrtomb@plt+0x3cd4>  // b.none
  406aa0:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x17e20>
  406aa4:	add	x0, x0, #0xfd8
  406aa8:	bl	402d80 <gettext@plt>
  406aac:	mov	x2, x0
  406ab0:	ldr	x0, [sp, #56]
  406ab4:	ldr	x0, [x0, #8]
  406ab8:	mov	x1, x0
  406abc:	mov	x0, x2
  406ac0:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  406ac4:	ldr	x0, [sp, #40]
  406ac8:	ldr	x2, [x0]
  406acc:	ldr	x0, [sp, #56]
  406ad0:	ldr	x1, [x0]
  406ad4:	mov	x0, x1
  406ad8:	lsl	x0, x0, #2
  406adc:	add	x0, x0, x1
  406ae0:	lsl	x0, x0, #3
  406ae4:	add	x0, x2, x0
  406ae8:	ldr	x1, [sp, #40]
  406aec:	ldr	x1, [x1, #16]
  406af0:	str	x1, [x0, #24]
  406af4:	ldr	x0, [sp, #56]
  406af8:	bl	4044c0 <wcrtomb@plt+0x16d0>
  406afc:	str	x0, [sp, #56]
  406b00:	ldr	x0, [sp, #56]
  406b04:	cmp	x0, #0x0
  406b08:	b.ne	4069f4 <wcrtomb@plt+0x3c04>  // b.any
  406b0c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406b10:	add	x0, x0, #0x590
  406b14:	str	xzr, [x0]
  406b18:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406b1c:	add	x0, x0, #0x598
  406b20:	ldr	x0, [x0]
  406b24:	str	x0, [sp, #48]
  406b28:	b	406b38 <wcrtomb@plt+0x3d48>
  406b2c:	ldr	x0, [sp, #48]
  406b30:	bl	4044c0 <wcrtomb@plt+0x16d0>
  406b34:	str	x0, [sp, #48]
  406b38:	ldr	x0, [sp, #48]
  406b3c:	cmp	x0, #0x0
  406b40:	b.ne	406b2c <wcrtomb@plt+0x3d3c>  // b.any
  406b44:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406b48:	add	x0, x0, #0x598
  406b4c:	str	xzr, [x0]
  406b50:	nop
  406b54:	ldr	x19, [sp, #16]
  406b58:	ldp	x29, x30, [sp], #64
  406b5c:	ret
  406b60:	stp	x29, x30, [sp, #-32]!
  406b64:	mov	x29, sp
  406b68:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406b6c:	add	x0, x0, #0x610
  406b70:	ldr	x0, [x0]
  406b74:	str	x0, [sp, #24]
  406b78:	b	406ba4 <wcrtomb@plt+0x3db4>
  406b7c:	ldr	x0, [sp, #24]
  406b80:	ldr	x0, [x0, #16]
  406b84:	cmp	x0, #0x0
  406b88:	b.eq	406b98 <wcrtomb@plt+0x3da8>  // b.none
  406b8c:	ldr	x0, [sp, #24]
  406b90:	ldr	x0, [x0, #16]
  406b94:	bl	402a00 <rewind@plt>
  406b98:	ldr	x0, [sp, #24]
  406b9c:	ldr	x0, [x0, #24]
  406ba0:	str	x0, [sp, #24]
  406ba4:	ldr	x0, [sp, #24]
  406ba8:	cmp	x0, #0x0
  406bac:	b.ne	406b7c <wcrtomb@plt+0x3d8c>  // b.any
  406bb0:	nop
  406bb4:	nop
  406bb8:	ldp	x29, x30, [sp], #32
  406bbc:	ret
  406bc0:	stp	x29, x30, [sp, #-48]!
  406bc4:	mov	x29, sp
  406bc8:	str	x0, [sp, #24]
  406bcc:	bl	406828 <wcrtomb@plt+0x3a38>
  406bd0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406bd4:	add	x0, x0, #0x610
  406bd8:	ldr	x0, [x0]
  406bdc:	str	x0, [sp, #40]
  406be0:	b	406c14 <wcrtomb@plt+0x3e24>
  406be4:	ldr	x0, [sp, #40]
  406be8:	ldr	x0, [x0, #16]
  406bec:	cmp	x0, #0x0
  406bf0:	b.eq	406c00 <wcrtomb@plt+0x3e10>  // b.none
  406bf4:	ldr	x0, [sp, #40]
  406bf8:	ldr	x0, [x0, #16]
  406bfc:	bl	40dae4 <wcrtomb@plt+0xacf4>
  406c00:	ldr	x0, [sp, #40]
  406c04:	ldr	x0, [x0, #24]
  406c08:	str	x0, [sp, #32]
  406c0c:	ldr	x0, [sp, #32]
  406c10:	str	x0, [sp, #40]
  406c14:	ldr	x0, [sp, #40]
  406c18:	cmp	x0, #0x0
  406c1c:	b.ne	406be4 <wcrtomb@plt+0x3df4>  // b.any
  406c20:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406c24:	add	x0, x0, #0x618
  406c28:	ldr	x0, [x0]
  406c2c:	str	x0, [sp, #40]
  406c30:	b	406c64 <wcrtomb@plt+0x3e74>
  406c34:	ldr	x0, [sp, #40]
  406c38:	ldr	x0, [x0, #16]
  406c3c:	cmp	x0, #0x0
  406c40:	b.eq	406c50 <wcrtomb@plt+0x3e60>  // b.none
  406c44:	ldr	x0, [sp, #40]
  406c48:	ldr	x0, [x0, #16]
  406c4c:	bl	40dae4 <wcrtomb@plt+0xacf4>
  406c50:	ldr	x0, [sp, #40]
  406c54:	ldr	x0, [x0, #24]
  406c58:	str	x0, [sp, #32]
  406c5c:	ldr	x0, [sp, #32]
  406c60:	str	x0, [sp, #40]
  406c64:	ldr	x0, [sp, #40]
  406c68:	cmp	x0, #0x0
  406c6c:	b.ne	406c34 <wcrtomb@plt+0x3e44>  // b.any
  406c70:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406c74:	add	x0, x0, #0x618
  406c78:	str	xzr, [x0]
  406c7c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406c80:	add	x0, x0, #0x618
  406c84:	ldr	x1, [x0]
  406c88:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406c8c:	add	x0, x0, #0x610
  406c90:	str	x1, [x0]
  406c94:	nop
  406c98:	ldp	x29, x30, [sp], #48
  406c9c:	ret
  406ca0:	stp	x29, x30, [sp, #-32]!
  406ca4:	mov	x29, sp
  406ca8:	strb	w0, [sp, #31]
  406cac:	bl	402b40 <__ctype_b_loc@plt>
  406cb0:	ldr	x1, [x0]
  406cb4:	ldrb	w0, [sp, #31]
  406cb8:	lsl	x0, x0, #1
  406cbc:	add	x0, x1, x0
  406cc0:	ldrh	w0, [x0]
  406cc4:	and	w0, w0, #0x4000
  406cc8:	cmp	w0, #0x0
  406ccc:	b.eq	406ce8 <wcrtomb@plt+0x3ef8>  // b.none
  406cd0:	ldrb	w0, [sp, #31]
  406cd4:	cmp	w0, #0x5c
  406cd8:	b.eq	406ce8 <wcrtomb@plt+0x3ef8>  // b.none
  406cdc:	ldrb	w0, [sp, #31]
  406ce0:	bl	4029b0 <putchar_unlocked@plt>
  406ce4:	b	406dc0 <wcrtomb@plt+0x3fd0>
  406ce8:	mov	w0, #0x5c                  	// #92
  406cec:	bl	4029b0 <putchar_unlocked@plt>
  406cf0:	ldrb	w0, [sp, #31]
  406cf4:	cmp	w0, #0x5c
  406cf8:	b.eq	406da0 <wcrtomb@plt+0x3fb0>  // b.none
  406cfc:	cmp	w0, #0x5c
  406d00:	b.gt	406dac <wcrtomb@plt+0x3fbc>
  406d04:	cmp	w0, #0xd
  406d08:	b.eq	406d70 <wcrtomb@plt+0x3f80>  // b.none
  406d0c:	cmp	w0, #0xd
  406d10:	b.gt	406dac <wcrtomb@plt+0x3fbc>
  406d14:	cmp	w0, #0xc
  406d18:	b.eq	406d64 <wcrtomb@plt+0x3f74>  // b.none
  406d1c:	cmp	w0, #0xc
  406d20:	b.gt	406dac <wcrtomb@plt+0x3fbc>
  406d24:	cmp	w0, #0xb
  406d28:	b.eq	406d88 <wcrtomb@plt+0x3f98>  // b.none
  406d2c:	cmp	w0, #0xb
  406d30:	b.gt	406dac <wcrtomb@plt+0x3fbc>
  406d34:	cmp	w0, #0xa
  406d38:	b.eq	406d94 <wcrtomb@plt+0x3fa4>  // b.none
  406d3c:	cmp	w0, #0xa
  406d40:	b.gt	406dac <wcrtomb@plt+0x3fbc>
  406d44:	cmp	w0, #0x7
  406d48:	b.eq	406d58 <wcrtomb@plt+0x3f68>  // b.none
  406d4c:	cmp	w0, #0x9
  406d50:	b.eq	406d7c <wcrtomb@plt+0x3f8c>  // b.none
  406d54:	b	406dac <wcrtomb@plt+0x3fbc>
  406d58:	mov	w0, #0x61                  	// #97
  406d5c:	bl	4029b0 <putchar_unlocked@plt>
  406d60:	b	406dc0 <wcrtomb@plt+0x3fd0>
  406d64:	mov	w0, #0x66                  	// #102
  406d68:	bl	4029b0 <putchar_unlocked@plt>
  406d6c:	b	406dc0 <wcrtomb@plt+0x3fd0>
  406d70:	mov	w0, #0x72                  	// #114
  406d74:	bl	4029b0 <putchar_unlocked@plt>
  406d78:	b	406dc0 <wcrtomb@plt+0x3fd0>
  406d7c:	mov	w0, #0x74                  	// #116
  406d80:	bl	4029b0 <putchar_unlocked@plt>
  406d84:	b	406dc0 <wcrtomb@plt+0x3fd0>
  406d88:	mov	w0, #0x76                  	// #118
  406d8c:	bl	4029b0 <putchar_unlocked@plt>
  406d90:	b	406dc0 <wcrtomb@plt+0x3fd0>
  406d94:	mov	w0, #0x6e                  	// #110
  406d98:	bl	4029b0 <putchar_unlocked@plt>
  406d9c:	b	406dc0 <wcrtomb@plt+0x3fd0>
  406da0:	mov	w0, #0x5c                  	// #92
  406da4:	bl	4029b0 <putchar_unlocked@plt>
  406da8:	b	406dc0 <wcrtomb@plt+0x3fd0>
  406dac:	ldrb	w0, [sp, #31]
  406db0:	mov	w1, w0
  406db4:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  406db8:	add	x0, x0, #0x0
  406dbc:	bl	402d20 <printf@plt>
  406dc0:	ldp	x29, x30, [sp], #32
  406dc4:	ret
  406dc8:	stp	x29, x30, [sp, #-48]!
  406dcc:	mov	x29, sp
  406dd0:	str	x0, [sp, #24]
  406dd4:	str	x1, [sp, #16]
  406dd8:	ldr	x0, [sp, #24]
  406ddc:	str	x0, [sp, #40]
  406de0:	b	406e34 <wcrtomb@plt+0x4044>
  406de4:	ldr	x0, [sp, #40]
  406de8:	ldrb	w0, [x0]
  406dec:	cmp	w0, #0x2f
  406df0:	b.ne	406e1c <wcrtomb@plt+0x402c>  // b.any
  406df4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406df8:	add	x0, x0, #0x520
  406dfc:	ldr	x0, [x0]
  406e00:	mov	x3, x0
  406e04:	mov	x2, #0x2                   	// #2
  406e08:	mov	x1, #0x1                   	// #1
  406e0c:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  406e10:	add	x0, x0, #0x8
  406e14:	bl	402710 <fwrite_unlocked@plt>
  406e18:	b	406e28 <wcrtomb@plt+0x4038>
  406e1c:	ldr	x0, [sp, #40]
  406e20:	ldrb	w0, [x0]
  406e24:	bl	406ca0 <wcrtomb@plt+0x3eb0>
  406e28:	ldr	x0, [sp, #40]
  406e2c:	add	x0, x0, #0x1
  406e30:	str	x0, [sp, #40]
  406e34:	ldr	x0, [sp, #16]
  406e38:	sub	x1, x0, #0x1
  406e3c:	str	x1, [sp, #16]
  406e40:	cmp	x0, #0x0
  406e44:	b.ne	406de4 <wcrtomb@plt+0x3ff4>  // b.any
  406e48:	nop
  406e4c:	nop
  406e50:	ldp	x29, x30, [sp], #48
  406e54:	ret
  406e58:	stp	x29, x30, [sp, #-32]!
  406e5c:	mov	x29, sp
  406e60:	str	x0, [sp, #24]
  406e64:	strb	w1, [sp, #23]
  406e68:	ldr	x0, [sp, #24]
  406e6c:	cmp	x0, #0x0
  406e70:	b.eq	406ed8 <wcrtomb@plt+0x40e8>  // b.none
  406e74:	ldr	x0, [sp, #24]
  406e78:	ldr	w0, [x0, #64]
  406e7c:	and	w0, w0, #0x2
  406e80:	cmp	w0, #0x0
  406e84:	b.eq	406ea4 <wcrtomb@plt+0x40b4>  // b.none
  406e88:	ldrb	w0, [sp, #23]
  406e8c:	cmp	w0, #0x0
  406e90:	b.eq	406e9c <wcrtomb@plt+0x40ac>  // b.none
  406e94:	mov	w0, #0x49                  	// #73
  406e98:	b	406ea0 <wcrtomb@plt+0x40b0>
  406e9c:	mov	w0, #0x69                  	// #105
  406ea0:	bl	4029b0 <putchar_unlocked@plt>
  406ea4:	ldr	x0, [sp, #24]
  406ea8:	ldr	w0, [x0, #64]
  406eac:	and	w0, w0, #0x4
  406eb0:	cmp	w0, #0x0
  406eb4:	b.eq	406edc <wcrtomb@plt+0x40ec>  // b.none
  406eb8:	ldrb	w0, [sp, #23]
  406ebc:	cmp	w0, #0x0
  406ec0:	b.eq	406ecc <wcrtomb@plt+0x40dc>  // b.none
  406ec4:	mov	w0, #0x4d                  	// #77
  406ec8:	b	406ed0 <wcrtomb@plt+0x40e0>
  406ecc:	mov	w0, #0x6d                  	// #109
  406ed0:	bl	4029b0 <putchar_unlocked@plt>
  406ed4:	b	406edc <wcrtomb@plt+0x40ec>
  406ed8:	nop
  406edc:	ldp	x29, x30, [sp], #32
  406ee0:	ret
  406ee4:	stp	x29, x30, [sp, #-32]!
  406ee8:	mov	x29, sp
  406eec:	str	x0, [sp, #24]
  406ef0:	ldr	x0, [sp, #24]
  406ef4:	cmp	x0, #0x0
  406ef8:	b.ne	406f24 <wcrtomb@plt+0x4134>  // b.any
  406efc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406f00:	add	x0, x0, #0x520
  406f04:	ldr	x0, [x0]
  406f08:	mov	x3, x0
  406f0c:	mov	x2, #0x2                   	// #2
  406f10:	mov	x1, #0x1                   	// #1
  406f14:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  406f18:	add	x0, x0, #0x10
  406f1c:	bl	402710 <fwrite_unlocked@plt>
  406f20:	b	406f50 <wcrtomb@plt+0x4160>
  406f24:	mov	w0, #0x2f                  	// #47
  406f28:	bl	4029b0 <putchar_unlocked@plt>
  406f2c:	ldr	x0, [sp, #24]
  406f30:	add	x2, x0, #0x5a
  406f34:	ldr	x0, [sp, #24]
  406f38:	ldr	x0, [x0, #72]
  406f3c:	mov	x1, x0
  406f40:	mov	x0, x2
  406f44:	bl	406dc8 <wcrtomb@plt+0x3fd8>
  406f48:	mov	w0, #0x2f                  	// #47
  406f4c:	bl	4029b0 <putchar_unlocked@plt>
  406f50:	ldp	x29, x30, [sp], #32
  406f54:	ret
  406f58:	stp	x29, x30, [sp, #-32]!
  406f5c:	mov	x29, sp
  406f60:	str	x0, [sp, #24]
  406f64:	ldr	x0, [sp, #24]
  406f68:	cmp	x0, #0x0
  406f6c:	b.eq	4070a8 <wcrtomb@plt+0x42b8>  // b.none
  406f70:	ldr	x0, [sp, #24]
  406f74:	ldr	w0, [x0]
  406f78:	cmp	w0, #0x6
  406f7c:	b.eq	40709c <wcrtomb@plt+0x42ac>  // b.none
  406f80:	cmp	w0, #0x6
  406f84:	b.hi	4070ac <wcrtomb@plt+0x42bc>  // b.pmore
  406f88:	cmp	w0, #0x5
  406f8c:	b.eq	407080 <wcrtomb@plt+0x4290>  // b.none
  406f90:	cmp	w0, #0x5
  406f94:	b.hi	4070ac <wcrtomb@plt+0x42bc>  // b.pmore
  406f98:	cmp	w0, #0x4
  406f9c:	b.eq	407064 <wcrtomb@plt+0x4274>  // b.none
  406fa0:	cmp	w0, #0x4
  406fa4:	b.hi	4070ac <wcrtomb@plt+0x42bc>  // b.pmore
  406fa8:	cmp	w0, #0x3
  406fac:	b.eq	407040 <wcrtomb@plt+0x4250>  // b.none
  406fb0:	cmp	w0, #0x3
  406fb4:	b.hi	4070ac <wcrtomb@plt+0x42bc>  // b.pmore
  406fb8:	cmp	w0, #0x2
  406fbc:	b.eq	407024 <wcrtomb@plt+0x4234>  // b.none
  406fc0:	cmp	w0, #0x2
  406fc4:	b.hi	4070ac <wcrtomb@plt+0x42bc>  // b.pmore
  406fc8:	cmp	w0, #0x0
  406fcc:	b.eq	406fdc <wcrtomb@plt+0x41ec>  // b.none
  406fd0:	cmp	w0, #0x1
  406fd4:	b.eq	407004 <wcrtomb@plt+0x4214>  // b.none
  406fd8:	b	4070ac <wcrtomb@plt+0x42bc>
  406fdc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  406fe0:	add	x0, x0, #0x520
  406fe4:	ldr	x0, [x0]
  406fe8:	mov	x3, x0
  406fec:	mov	x2, #0xb                   	// #11
  406ff0:	mov	x1, #0x1                   	// #1
  406ff4:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  406ff8:	add	x0, x0, #0x18
  406ffc:	bl	402710 <fwrite_unlocked@plt>
  407000:	b	4070ac <wcrtomb@plt+0x42bc>
  407004:	ldr	x0, [sp, #24]
  407008:	ldr	x0, [x0, #24]
  40700c:	bl	406ee4 <wcrtomb@plt+0x40f4>
  407010:	ldr	x0, [sp, #24]
  407014:	ldr	x0, [x0, #24]
  407018:	mov	w1, #0x1                   	// #1
  40701c:	bl	406e58 <wcrtomb@plt+0x4068>
  407020:	b	4070ac <wcrtomb@plt+0x42bc>
  407024:	ldr	x0, [sp, #24]
  407028:	ldr	x0, [x0, #8]
  40702c:	mov	x1, x0
  407030:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  407034:	add	x0, x0, #0x28
  407038:	bl	402d20 <printf@plt>
  40703c:	b	4070ac <wcrtomb@plt+0x42bc>
  407040:	ldr	x0, [sp, #24]
  407044:	ldr	x1, [x0, #8]
  407048:	ldr	x0, [sp, #24]
  40704c:	ldr	x0, [x0, #16]
  407050:	mov	x2, x0
  407054:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  407058:	add	x0, x0, #0x30
  40705c:	bl	402d20 <printf@plt>
  407060:	b	4070ac <wcrtomb@plt+0x42bc>
  407064:	ldr	x0, [sp, #24]
  407068:	ldr	x0, [x0, #16]
  40706c:	mov	x1, x0
  407070:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  407074:	add	x0, x0, #0x38
  407078:	bl	402d20 <printf@plt>
  40707c:	b	4070ac <wcrtomb@plt+0x42bc>
  407080:	ldr	x0, [sp, #24]
  407084:	ldr	x0, [x0, #16]
  407088:	mov	x1, x0
  40708c:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  407090:	add	x0, x0, #0x40
  407094:	bl	402d20 <printf@plt>
  407098:	b	4070ac <wcrtomb@plt+0x42bc>
  40709c:	mov	w0, #0x24                  	// #36
  4070a0:	bl	4029b0 <putchar_unlocked@plt>
  4070a4:	b	4070ac <wcrtomb@plt+0x42bc>
  4070a8:	nop
  4070ac:	ldp	x29, x30, [sp], #32
  4070b0:	ret
  4070b4:	stp	x29, x30, [sp, #-48]!
  4070b8:	mov	x29, sp
  4070bc:	str	x0, [sp, #24]
  4070c0:	str	wzr, [sp, #44]
  4070c4:	ldr	x0, [sp, #24]
  4070c8:	cmp	x0, #0x0
  4070cc:	b.eq	407234 <wcrtomb@plt+0x4444>  // b.none
  4070d0:	ldr	x0, [sp, #24]
  4070d4:	str	x0, [sp, #32]
  4070d8:	b	407224 <wcrtomb@plt+0x4434>
  4070dc:	ldr	x0, [sp, #32]
  4070e0:	ldr	w0, [x0, #20]
  4070e4:	ldr	w1, [sp, #44]
  4070e8:	cmp	w1, w0
  4070ec:	b.eq	407194 <wcrtomb@plt+0x43a4>  // b.none
  4070f0:	mov	w0, #0x5c                  	// #92
  4070f4:	bl	4029b0 <putchar_unlocked@plt>
  4070f8:	ldr	x0, [sp, #32]
  4070fc:	ldr	w0, [x0, #20]
  407100:	cmp	w0, #0x0
  407104:	b.ne	407114 <wcrtomb@plt+0x4324>  // b.any
  407108:	mov	w0, #0x45                  	// #69
  40710c:	bl	4029b0 <putchar_unlocked@plt>
  407110:	b	407188 <wcrtomb@plt+0x4398>
  407114:	ldr	x0, [sp, #32]
  407118:	ldr	w0, [x0, #20]
  40711c:	cmp	w0, #0x1
  407120:	b.ne	407130 <wcrtomb@plt+0x4340>  // b.any
  407124:	mov	w0, #0x55                  	// #85
  407128:	bl	4029b0 <putchar_unlocked@plt>
  40712c:	b	407188 <wcrtomb@plt+0x4398>
  407130:	ldr	x0, [sp, #32]
  407134:	ldr	w0, [x0, #20]
  407138:	cmp	w0, #0x2
  40713c:	b.ne	40714c <wcrtomb@plt+0x435c>  // b.any
  407140:	mov	w0, #0x4c                  	// #76
  407144:	bl	4029b0 <putchar_unlocked@plt>
  407148:	b	407188 <wcrtomb@plt+0x4398>
  40714c:	ldr	x0, [sp, #32]
  407150:	ldr	w0, [x0, #20]
  407154:	and	w0, w0, #0xc
  407158:	cmp	w0, #0x4
  40715c:	b.ne	40716c <wcrtomb@plt+0x437c>  // b.any
  407160:	mov	w0, #0x75                  	// #117
  407164:	bl	4029b0 <putchar_unlocked@plt>
  407168:	b	407188 <wcrtomb@plt+0x4398>
  40716c:	ldr	x0, [sp, #32]
  407170:	ldr	w0, [x0, #20]
  407174:	and	w0, w0, #0xc
  407178:	cmp	w0, #0x8
  40717c:	b.ne	407188 <wcrtomb@plt+0x4398>  // b.any
  407180:	mov	w0, #0x6c                  	// #108
  407184:	bl	4029b0 <putchar_unlocked@plt>
  407188:	ldr	x0, [sp, #32]
  40718c:	ldr	w0, [x0, #20]
  407190:	str	w0, [sp, #44]
  407194:	ldr	x0, [sp, #32]
  407198:	ldr	x0, [x0, #8]
  40719c:	cmp	x0, #0x0
  4071a0:	b.eq	4071d4 <wcrtomb@plt+0x43e4>  // b.none
  4071a4:	ldr	x0, [sp, #32]
  4071a8:	ldr	x4, [x0]
  4071ac:	ldr	x0, [sp, #32]
  4071b0:	ldr	x1, [x0, #8]
  4071b4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4071b8:	add	x0, x0, #0x520
  4071bc:	ldr	x0, [x0]
  4071c0:	mov	x3, x0
  4071c4:	mov	x2, x1
  4071c8:	mov	x1, #0x1                   	// #1
  4071cc:	mov	x0, x4
  4071d0:	bl	402710 <fwrite_unlocked@plt>
  4071d4:	ldr	x0, [sp, #32]
  4071d8:	ldr	w0, [x0, #16]
  4071dc:	cmn	w0, #0x1
  4071e0:	b.eq	407218 <wcrtomb@plt+0x4428>  // b.none
  4071e4:	ldr	x0, [sp, #32]
  4071e8:	ldr	w0, [x0, #16]
  4071ec:	cmp	w0, #0x0
  4071f0:	b.ne	407200 <wcrtomb@plt+0x4410>  // b.any
  4071f4:	mov	w0, #0x26                  	// #38
  4071f8:	bl	4029b0 <putchar_unlocked@plt>
  4071fc:	b	407218 <wcrtomb@plt+0x4428>
  407200:	ldr	x0, [sp, #32]
  407204:	ldr	w0, [x0, #16]
  407208:	mov	w1, w0
  40720c:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  407210:	add	x0, x0, #0x48
  407214:	bl	402d20 <printf@plt>
  407218:	ldr	x0, [sp, #32]
  40721c:	ldr	x0, [x0, #24]
  407220:	str	x0, [sp, #32]
  407224:	ldr	x0, [sp, #32]
  407228:	cmp	x0, #0x0
  40722c:	b.ne	4070dc <wcrtomb@plt+0x42ec>  // b.any
  407230:	b	407238 <wcrtomb@plt+0x4448>
  407234:	nop
  407238:	ldp	x29, x30, [sp], #48
  40723c:	ret
  407240:	stp	x29, x30, [sp, #-32]!
  407244:	mov	x29, sp
  407248:	str	x0, [sp, #24]
  40724c:	ldr	x0, [sp, #24]
  407250:	cmp	x0, #0x0
  407254:	b.eq	40727c <wcrtomb@plt+0x448c>  // b.none
  407258:	ldr	x0, [sp, #24]
  40725c:	ldr	x2, [x0]
  407260:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  407264:	add	x0, x0, #0x520
  407268:	ldr	x0, [x0]
  40726c:	mov	x1, x0
  407270:	mov	x0, x2
  407274:	bl	402ca0 <fputs_unlocked@plt>
  407278:	b	407280 <wcrtomb@plt+0x4490>
  40727c:	nop
  407280:	ldp	x29, x30, [sp], #32
  407284:	ret
  407288:	stp	x29, x30, [sp, #-32]!
  40728c:	mov	x29, sp
  407290:	str	x0, [sp, #24]
  407294:	ldr	x0, [sp, #24]
  407298:	cmp	x0, #0x0
  40729c:	b.eq	407380 <wcrtomb@plt+0x4590>  // b.none
  4072a0:	ldr	x0, [sp, #24]
  4072a4:	ldr	x0, [x0]
  4072a8:	bl	406ee4 <wcrtomb@plt+0x40f4>
  4072ac:	ldr	x0, [sp, #24]
  4072b0:	ldr	x0, [x0, #8]
  4072b4:	bl	4070b4 <wcrtomb@plt+0x42c4>
  4072b8:	mov	w0, #0x2f                  	// #47
  4072bc:	bl	4029b0 <putchar_unlocked@plt>
  4072c0:	ldr	x0, [sp, #24]
  4072c4:	ldr	x0, [x0]
  4072c8:	mov	w1, #0x0                   	// #0
  4072cc:	bl	406e58 <wcrtomb@plt+0x4068>
  4072d0:	ldr	x0, [sp, #24]
  4072d4:	ldrb	w0, [x0, #32]
  4072d8:	and	w0, w0, #0x1
  4072dc:	and	w0, w0, #0xff
  4072e0:	cmp	w0, #0x0
  4072e4:	b.eq	4072f0 <wcrtomb@plt+0x4500>  // b.none
  4072e8:	mov	w0, #0x67                  	// #103
  4072ec:	bl	4029b0 <putchar_unlocked@plt>
  4072f0:	ldr	x0, [sp, #24]
  4072f4:	ldrb	w0, [x0, #32]
  4072f8:	and	w0, w0, #0x8
  4072fc:	and	w0, w0, #0xff
  407300:	cmp	w0, #0x0
  407304:	b.eq	407310 <wcrtomb@plt+0x4520>  // b.none
  407308:	mov	w0, #0x65                  	// #101
  40730c:	bl	4029b0 <putchar_unlocked@plt>
  407310:	ldr	x0, [sp, #24]
  407314:	ldrb	w0, [x0, #32]
  407318:	and	w0, w0, #0x6
  40731c:	and	w0, w0, #0xff
  407320:	cmp	w0, #0x0
  407324:	b.eq	407330 <wcrtomb@plt+0x4540>  // b.none
  407328:	mov	w0, #0x70                  	// #112
  40732c:	bl	4029b0 <putchar_unlocked@plt>
  407330:	ldr	x0, [sp, #24]
  407334:	ldr	x0, [x0, #16]
  407338:	cmp	x0, #0x0
  40733c:	b.eq	407358 <wcrtomb@plt+0x4568>  // b.none
  407340:	ldr	x0, [sp, #24]
  407344:	ldr	x0, [x0, #16]
  407348:	mov	x1, x0
  40734c:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  407350:	add	x0, x0, #0x28
  407354:	bl	402d20 <printf@plt>
  407358:	ldr	x0, [sp, #24]
  40735c:	ldr	x0, [x0, #24]
  407360:	cmp	x0, #0x0
  407364:	b.eq	407384 <wcrtomb@plt+0x4594>  // b.none
  407368:	mov	w0, #0x77                  	// #119
  40736c:	bl	4029b0 <putchar_unlocked@plt>
  407370:	ldr	x0, [sp, #24]
  407374:	ldr	x0, [x0, #24]
  407378:	bl	407240 <wcrtomb@plt+0x4450>
  40737c:	b	407384 <wcrtomb@plt+0x4594>
  407380:	nop
  407384:	ldp	x29, x30, [sp], #32
  407388:	ret
  40738c:	stp	x29, x30, [sp, #-48]!
  407390:	mov	x29, sp
  407394:	str	x0, [sp, #24]
  407398:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40739c:	add	x0, x0, #0x8e4
  4073a0:	ldr	w0, [x0]
  4073a4:	cmp	w0, #0x1
  4073a8:	b.le	4074b4 <wcrtomb@plt+0x46c4>
  4073ac:	mov	w0, #0x2f                  	// #47
  4073b0:	bl	4029b0 <putchar_unlocked@plt>
  4073b4:	str	wzr, [sp, #44]
  4073b8:	b	407400 <wcrtomb@plt+0x4610>
  4073bc:	ldr	x0, [sp, #24]
  4073c0:	ldr	x1, [x0, #24]
  4073c4:	ldr	w0, [sp, #44]
  4073c8:	lsl	w0, w0, #1
  4073cc:	mov	w0, w0
  4073d0:	lsl	x0, x0, #3
  4073d4:	add	x0, x1, x0
  4073d8:	ldr	x2, [x0]
  4073dc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4073e0:	add	x0, x0, #0x520
  4073e4:	ldr	x0, [x0]
  4073e8:	mov	x1, x0
  4073ec:	mov	x0, x2
  4073f0:	bl	402ca0 <fputs_unlocked@plt>
  4073f4:	ldr	w0, [sp, #44]
  4073f8:	add	w0, w0, #0x1
  4073fc:	str	w0, [sp, #44]
  407400:	ldr	x0, [sp, #24]
  407404:	ldr	x1, [x0, #24]
  407408:	ldr	w0, [sp, #44]
  40740c:	lsl	w0, w0, #1
  407410:	mov	w0, w0
  407414:	lsl	x0, x0, #3
  407418:	add	x0, x1, x0
  40741c:	ldr	x0, [x0]
  407420:	cmp	x0, #0x0
  407424:	b.ne	4073bc <wcrtomb@plt+0x45cc>  // b.any
  407428:	mov	w0, #0x2f                  	// #47
  40742c:	bl	4029b0 <putchar_unlocked@plt>
  407430:	str	wzr, [sp, #44]
  407434:	b	407480 <wcrtomb@plt+0x4690>
  407438:	ldr	x0, [sp, #24]
  40743c:	ldr	x1, [x0, #24]
  407440:	ldr	w0, [sp, #44]
  407444:	lsl	w0, w0, #1
  407448:	add	w0, w0, #0x1
  40744c:	mov	w0, w0
  407450:	lsl	x0, x0, #3
  407454:	add	x0, x1, x0
  407458:	ldr	x2, [x0]
  40745c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  407460:	add	x0, x0, #0x520
  407464:	ldr	x0, [x0]
  407468:	mov	x1, x0
  40746c:	mov	x0, x2
  407470:	bl	402ca0 <fputs_unlocked@plt>
  407474:	ldr	w0, [sp, #44]
  407478:	add	w0, w0, #0x1
  40747c:	str	w0, [sp, #44]
  407480:	ldr	x0, [sp, #24]
  407484:	ldr	x1, [x0, #24]
  407488:	ldr	w0, [sp, #44]
  40748c:	lsl	w0, w0, #1
  407490:	mov	w0, w0
  407494:	lsl	x0, x0, #3
  407498:	add	x0, x1, x0
  40749c:	ldr	x0, [x0]
  4074a0:	cmp	x0, #0x0
  4074a4:	b.ne	407438 <wcrtomb@plt+0x4648>  // b.any
  4074a8:	mov	w0, #0x2f                  	// #47
  4074ac:	bl	4029b0 <putchar_unlocked@plt>
  4074b0:	b	407578 <wcrtomb@plt+0x4788>
  4074b4:	mov	w0, #0x2f                  	// #47
  4074b8:	bl	4029b0 <putchar_unlocked@plt>
  4074bc:	str	wzr, [sp, #44]
  4074c0:	b	407500 <wcrtomb@plt+0x4710>
  4074c4:	ldr	x0, [sp, #24]
  4074c8:	ldr	x1, [x0, #24]
  4074cc:	ldr	w0, [sp, #44]
  4074d0:	add	x0, x1, x0
  4074d4:	ldrb	w1, [x0]
  4074d8:	ldr	w0, [sp, #44]
  4074dc:	and	w0, w0, #0xff
  4074e0:	cmp	w1, w0
  4074e4:	b.eq	4074f4 <wcrtomb@plt+0x4704>  // b.none
  4074e8:	ldr	w0, [sp, #44]
  4074ec:	and	w0, w0, #0xff
  4074f0:	bl	4029b0 <putchar_unlocked@plt>
  4074f4:	ldr	w0, [sp, #44]
  4074f8:	add	w0, w0, #0x1
  4074fc:	str	w0, [sp, #44]
  407500:	ldr	w0, [sp, #44]
  407504:	cmp	w0, #0xff
  407508:	b.ls	4074c4 <wcrtomb@plt+0x46d4>  // b.plast
  40750c:	mov	w0, #0x2f                  	// #47
  407510:	bl	4029b0 <putchar_unlocked@plt>
  407514:	str	wzr, [sp, #44]
  407518:	b	407564 <wcrtomb@plt+0x4774>
  40751c:	ldr	x0, [sp, #24]
  407520:	ldr	x1, [x0, #24]
  407524:	ldr	w0, [sp, #44]
  407528:	add	x0, x1, x0
  40752c:	ldrb	w1, [x0]
  407530:	ldr	w0, [sp, #44]
  407534:	and	w0, w0, #0xff
  407538:	cmp	w1, w0
  40753c:	b.eq	407558 <wcrtomb@plt+0x4768>  // b.none
  407540:	ldr	x0, [sp, #24]
  407544:	ldr	x1, [x0, #24]
  407548:	ldr	w0, [sp, #44]
  40754c:	add	x0, x1, x0
  407550:	ldrb	w0, [x0]
  407554:	bl	4029b0 <putchar_unlocked@plt>
  407558:	ldr	w0, [sp, #44]
  40755c:	add	w0, w0, #0x1
  407560:	str	w0, [sp, #44]
  407564:	ldr	w0, [sp, #44]
  407568:	cmp	w0, #0xff
  40756c:	b.ls	40751c <wcrtomb@plt+0x472c>  // b.plast
  407570:	mov	w0, #0x2f                  	// #47
  407574:	bl	4029b0 <putchar_unlocked@plt>
  407578:	nop
  40757c:	ldp	x29, x30, [sp], #48
  407580:	ret
  407584:	stp	x29, x30, [sp, #-48]!
  407588:	mov	x29, sp
  40758c:	str	x0, [sp, #24]
  407590:	str	x1, [sp, #16]
  407594:	ldr	x0, [sp, #16]
  407598:	cmp	x0, #0x0
  40759c:	b.eq	407814 <wcrtomb@plt+0x4a24>  // b.none
  4075a0:	ldr	x0, [sp, #16]
  4075a4:	ldrb	w0, [x0, #21]
  4075a8:	bl	4029b0 <putchar_unlocked@plt>
  4075ac:	ldr	x0, [sp, #16]
  4075b0:	ldrb	w0, [x0, #21]
  4075b4:	sub	w0, w0, #0x23
  4075b8:	cmp	w0, #0x5a
  4075bc:	b.hi	4077f4 <wcrtomb@plt+0x4a04>  // b.pmore
  4075c0:	adrp	x1, 435000 <_obstack_memory_used@@Base+0x18e20>
  4075c4:	add	x1, x1, #0x7c
  4075c8:	ldr	w0, [x1, w0, uxtw #2]
  4075cc:	adr	x1, 4075d8 <wcrtomb@plt+0x47e8>
  4075d0:	add	x0, x1, w0, sxtw #2
  4075d4:	br	x0
  4075d8:	ldr	x0, [sp, #16]
  4075dc:	ldr	x0, [x0, #24]
  4075e0:	mov	x1, x0
  4075e4:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  4075e8:	add	x0, x0, #0x50
  4075ec:	bl	402d20 <printf@plt>
  4075f0:	b	407838 <wcrtomb@plt+0x4a48>
  4075f4:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  4075f8:	add	x3, x0, #0x200
  4075fc:	mov	w2, #0x123                 	// #291
  407600:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  407604:	add	x1, x0, #0x58
  407608:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40760c:	add	x0, x0, #0x68
  407610:	bl	402d30 <__assert_fail@plt>
  407614:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  407618:	add	x0, x0, #0x520
  40761c:	ldr	x0, [x0]
  407620:	mov	x1, x0
  407624:	mov	w0, #0x5c                  	// #92
  407628:	bl	402c50 <fputc_unlocked@plt>
  40762c:	ldr	x0, [sp, #16]
  407630:	ldr	x0, [x0, #32]
  407634:	cmp	x0, #0x0
  407638:	b.eq	407824 <wcrtomb@plt+0x4a34>  // b.none
  40763c:	ldr	x0, [sp, #16]
  407640:	ldr	x4, [x0, #24]
  407644:	ldr	x0, [sp, #16]
  407648:	ldr	x1, [x0, #32]
  40764c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  407650:	add	x0, x0, #0x520
  407654:	ldr	x0, [x0]
  407658:	mov	x3, x0
  40765c:	mov	x2, x1
  407660:	mov	x1, #0x1                   	// #1
  407664:	mov	x0, x4
  407668:	bl	402710 <fwrite_unlocked@plt>
  40766c:	b	407824 <wcrtomb@plt+0x4a34>
  407670:	ldr	x0, [sp, #16]
  407674:	ldr	x1, [x0, #24]
  407678:	ldr	x0, [sp, #24]
  40767c:	ldr	x0, [x0, #16]
  407680:	cmp	x1, x0
  407684:	b.cs	40782c <wcrtomb@plt+0x4a3c>  // b.hs, b.nlast
  407688:	ldr	x0, [sp, #24]
  40768c:	ldr	x2, [x0]
  407690:	ldr	x0, [sp, #16]
  407694:	ldr	x1, [x0, #24]
  407698:	mov	x0, x1
  40769c:	lsl	x0, x0, #2
  4076a0:	add	x0, x0, x1
  4076a4:	lsl	x0, x0, #3
  4076a8:	add	x0, x2, x0
  4076ac:	ldr	x0, [x0, #24]
  4076b0:	str	x0, [sp, #40]
  4076b4:	ldr	x0, [sp, #40]
  4076b8:	cmp	x0, #0x0
  4076bc:	b.eq	40782c <wcrtomb@plt+0x4a3c>  // b.none
  4076c0:	ldr	x1, [sp, #40]
  4076c4:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  4076c8:	add	x0, x0, #0x70
  4076cc:	bl	402d20 <printf@plt>
  4076d0:	b	40782c <wcrtomb@plt+0x4a3c>
  4076d4:	mov	w0, #0x20                  	// #32
  4076d8:	bl	4029b0 <putchar_unlocked@plt>
  4076dc:	ldr	x0, [sp, #16]
  4076e0:	ldr	x4, [x0, #24]
  4076e4:	ldr	x0, [sp, #16]
  4076e8:	ldr	x1, [x0, #32]
  4076ec:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4076f0:	add	x0, x0, #0x520
  4076f4:	ldr	x0, [x0]
  4076f8:	mov	x3, x0
  4076fc:	mov	x2, x1
  407700:	mov	x1, #0x1                   	// #1
  407704:	mov	x0, x4
  407708:	bl	402710 <fwrite_unlocked@plt>
  40770c:	b	407838 <wcrtomb@plt+0x4a48>
  407710:	ldr	x0, [sp, #16]
  407714:	ldr	w0, [x0, #24]
  407718:	cmn	w0, #0x1
  40771c:	b.eq	407834 <wcrtomb@plt+0x4a44>  // b.none
  407720:	ldr	x0, [sp, #16]
  407724:	ldr	w0, [x0, #24]
  407728:	mov	w1, w0
  40772c:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  407730:	add	x0, x0, #0x78
  407734:	bl	402d20 <printf@plt>
  407738:	b	407834 <wcrtomb@plt+0x4a44>
  40773c:	mov	w0, #0x20                  	// #32
  407740:	bl	4029b0 <putchar_unlocked@plt>
  407744:	ldr	x0, [sp, #16]
  407748:	ldr	x2, [x0, #24]
  40774c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  407750:	add	x0, x0, #0x520
  407754:	ldr	x0, [x0]
  407758:	mov	x1, x0
  40775c:	mov	x0, x2
  407760:	bl	402ca0 <fputs_unlocked@plt>
  407764:	b	407838 <wcrtomb@plt+0x4a48>
  407768:	mov	w0, #0x20                  	// #32
  40776c:	bl	4029b0 <putchar_unlocked@plt>
  407770:	ldr	x0, [sp, #16]
  407774:	ldr	x0, [x0, #24]
  407778:	ldr	x2, [x0]
  40777c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  407780:	add	x0, x0, #0x520
  407784:	ldr	x0, [x0]
  407788:	mov	x1, x0
  40778c:	mov	x0, x2
  407790:	bl	402ca0 <fputs_unlocked@plt>
  407794:	b	407838 <wcrtomb@plt+0x4a48>
  407798:	ldr	x0, [sp, #16]
  40779c:	ldr	x0, [x0, #24]
  4077a0:	bl	407288 <wcrtomb@plt+0x4498>
  4077a4:	b	407838 <wcrtomb@plt+0x4a48>
  4077a8:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  4077ac:	add	x3, x0, #0x200
  4077b0:	mov	w2, #0x17e                 	// #382
  4077b4:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  4077b8:	add	x1, x0, #0x58
  4077bc:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  4077c0:	add	x0, x0, #0x68
  4077c4:	bl	402d30 <__assert_fail@plt>
  4077c8:	ldr	x0, [sp, #16]
  4077cc:	ldr	x0, [x0, #24]
  4077d0:	bl	407240 <wcrtomb@plt+0x4450>
  4077d4:	b	407838 <wcrtomb@plt+0x4a48>
  4077d8:	ldr	x0, [sp, #16]
  4077dc:	ldr	x0, [x0, #24]
  4077e0:	bl	407240 <wcrtomb@plt+0x4450>
  4077e4:	b	407838 <wcrtomb@plt+0x4a48>
  4077e8:	ldr	x0, [sp, #16]
  4077ec:	bl	40738c <wcrtomb@plt+0x459c>
  4077f0:	b	407838 <wcrtomb@plt+0x4a48>
  4077f4:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  4077f8:	add	x3, x0, #0x200
  4077fc:	mov	w2, #0x194                 	// #404
  407800:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  407804:	add	x1, x0, #0x58
  407808:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40780c:	add	x0, x0, #0x68
  407810:	bl	402d30 <__assert_fail@plt>
  407814:	nop
  407818:	b	407838 <wcrtomb@plt+0x4a48>
  40781c:	nop
  407820:	b	407838 <wcrtomb@plt+0x4a48>
  407824:	nop
  407828:	b	407838 <wcrtomb@plt+0x4a48>
  40782c:	nop
  407830:	b	407838 <wcrtomb@plt+0x4a48>
  407834:	nop
  407838:	ldp	x29, x30, [sp], #48
  40783c:	ret
  407840:	stp	x29, x30, [sp, #-48]!
  407844:	mov	x29, sp
  407848:	str	x0, [sp, #24]
  40784c:	str	x1, [sp, #16]
  407850:	ldr	x0, [sp, #24]
  407854:	cmp	x0, #0x0
  407858:	b.eq	4079d4 <wcrtomb@plt+0x4be4>  // b.none
  40785c:	ldr	x0, [sp, #16]
  407860:	ldrb	w0, [x0, #21]
  407864:	cmp	w0, #0x7d
  407868:	b.ne	407888 <wcrtomb@plt+0x4a98>  // b.any
  40786c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  407870:	add	x0, x0, #0x628
  407874:	ldr	w0, [x0]
  407878:	sub	w1, w0, #0x1
  40787c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  407880:	add	x0, x0, #0x628
  407884:	str	w1, [x0]
  407888:	str	wzr, [sp, #40]
  40788c:	b	4078c0 <wcrtomb@plt+0x4ad0>
  407890:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  407894:	add	x0, x0, #0x520
  407898:	ldr	x0, [x0]
  40789c:	mov	x3, x0
  4078a0:	mov	x2, #0x2                   	// #2
  4078a4:	mov	x1, #0x1                   	// #1
  4078a8:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  4078ac:	add	x0, x0, #0x1e8
  4078b0:	bl	402710 <fwrite_unlocked@plt>
  4078b4:	ldr	w0, [sp, #40]
  4078b8:	add	w0, w0, #0x1
  4078bc:	str	w0, [sp, #40]
  4078c0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4078c4:	add	x0, x0, #0x628
  4078c8:	ldr	w0, [x0]
  4078cc:	ldr	w1, [sp, #40]
  4078d0:	cmp	w1, w0
  4078d4:	b.lt	407890 <wcrtomb@plt+0x4aa0>  // b.tstop
  4078d8:	ldr	x0, [sp, #16]
  4078dc:	ldr	x0, [x0]
  4078e0:	bl	406f58 <wcrtomb@plt+0x4168>
  4078e4:	ldr	x0, [sp, #16]
  4078e8:	ldr	x0, [x0, #8]
  4078ec:	cmp	x0, #0x0
  4078f0:	b.eq	4078fc <wcrtomb@plt+0x4b0c>  // b.none
  4078f4:	mov	w0, #0x2c                  	// #44
  4078f8:	bl	4029b0 <putchar_unlocked@plt>
  4078fc:	ldr	x0, [sp, #16]
  407900:	ldr	x0, [x0, #8]
  407904:	bl	406f58 <wcrtomb@plt+0x4168>
  407908:	ldr	x0, [sp, #16]
  40790c:	ldrb	w0, [x0, #20]
  407910:	cmp	w0, #0x0
  407914:	cset	w0, ne  // ne = any
  407918:	strb	w0, [sp, #47]
  40791c:	ldr	x0, [sp, #16]
  407920:	ldrb	w0, [x0, #21]
  407924:	cmp	w0, #0x7b
  407928:	b.ne	407954 <wcrtomb@plt+0x4b64>  // b.any
  40792c:	ldrb	w0, [sp, #47]
  407930:	cmp	w0, #0x0
  407934:	cset	w0, ne  // ne = any
  407938:	and	w0, w0, #0xff
  40793c:	eor	w0, w0, #0x1
  407940:	and	w0, w0, #0xff
  407944:	strb	w0, [sp, #47]
  407948:	ldrb	w0, [sp, #47]
  40794c:	and	w0, w0, #0x1
  407950:	strb	w0, [sp, #47]
  407954:	ldrb	w0, [sp, #47]
  407958:	cmp	w0, #0x0
  40795c:	b.eq	407968 <wcrtomb@plt+0x4b78>  // b.none
  407960:	mov	w0, #0x21                  	// #33
  407964:	bl	4029b0 <putchar_unlocked@plt>
  407968:	ldr	x0, [sp, #16]
  40796c:	ldr	x0, [x0]
  407970:	cmp	x0, #0x0
  407974:	b.ne	407988 <wcrtomb@plt+0x4b98>  // b.any
  407978:	ldr	x0, [sp, #16]
  40797c:	ldr	x0, [x0, #8]
  407980:	cmp	x0, #0x0
  407984:	b.eq	407990 <wcrtomb@plt+0x4ba0>  // b.none
  407988:	mov	w0, #0x20                  	// #32
  40798c:	bl	4029b0 <putchar_unlocked@plt>
  407990:	ldr	x1, [sp, #16]
  407994:	ldr	x0, [sp, #24]
  407998:	bl	407584 <wcrtomb@plt+0x4794>
  40799c:	mov	w0, #0xa                   	// #10
  4079a0:	bl	4029b0 <putchar_unlocked@plt>
  4079a4:	ldr	x0, [sp, #16]
  4079a8:	ldrb	w0, [x0, #21]
  4079ac:	cmp	w0, #0x7b
  4079b0:	b.ne	4079d8 <wcrtomb@plt+0x4be8>  // b.any
  4079b4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4079b8:	add	x0, x0, #0x628
  4079bc:	ldr	w0, [x0]
  4079c0:	add	w1, w0, #0x1
  4079c4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4079c8:	add	x0, x0, #0x628
  4079cc:	str	w1, [x0]
  4079d0:	b	4079d8 <wcrtomb@plt+0x4be8>
  4079d4:	nop
  4079d8:	ldp	x29, x30, [sp], #48
  4079dc:	ret
  4079e0:	stp	x29, x30, [sp, #-48]!
  4079e4:	mov	x29, sp
  4079e8:	str	x0, [sp, #24]
  4079ec:	ldr	x0, [sp, #24]
  4079f0:	cmp	x0, #0x0
  4079f4:	b.eq	407a78 <wcrtomb@plt+0x4c88>  // b.none
  4079f8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4079fc:	add	x0, x0, #0x628
  407a00:	mov	w1, #0x1                   	// #1
  407a04:	str	w1, [x0]
  407a08:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  407a0c:	add	x0, x0, #0x1f0
  407a10:	bl	402ae0 <puts@plt>
  407a14:	str	xzr, [sp, #40]
  407a18:	b	407a54 <wcrtomb@plt+0x4c64>
  407a1c:	ldr	x0, [sp, #24]
  407a20:	ldr	x2, [x0]
  407a24:	ldr	x1, [sp, #40]
  407a28:	mov	x0, x1
  407a2c:	lsl	x0, x0, #2
  407a30:	add	x0, x0, x1
  407a34:	lsl	x0, x0, #3
  407a38:	add	x0, x2, x0
  407a3c:	mov	x1, x0
  407a40:	ldr	x0, [sp, #24]
  407a44:	bl	407840 <wcrtomb@plt+0x4a50>
  407a48:	ldr	x0, [sp, #40]
  407a4c:	add	x0, x0, #0x1
  407a50:	str	x0, [sp, #40]
  407a54:	ldr	x0, [sp, #24]
  407a58:	ldr	x0, [x0, #16]
  407a5c:	ldr	x1, [sp, #40]
  407a60:	cmp	x1, x0
  407a64:	b.cc	407a1c <wcrtomb@plt+0x4c2c>  // b.lo, b.ul, b.last
  407a68:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  407a6c:	add	x0, x0, #0x628
  407a70:	str	wzr, [x0]
  407a74:	b	407a7c <wcrtomb@plt+0x4c8c>
  407a78:	nop
  407a7c:	ldp	x29, x30, [sp], #48
  407a80:	ret
  407a84:	stp	x29, x30, [sp, #-48]!
  407a88:	mov	x29, sp
  407a8c:	str	x0, [sp, #24]
  407a90:	str	x1, [sp, #16]
  407a94:	ldr	x0, [sp, #24]
  407a98:	ldr	x1, [x0, #8]
  407a9c:	ldr	x0, [sp, #24]
  407aa0:	ldr	x0, [x0]
  407aa4:	sub	x0, x1, x0
  407aa8:	str	w0, [sp, #44]
  407aac:	ldrsw	x1, [sp, #44]
  407ab0:	ldr	x0, [sp, #24]
  407ab4:	ldr	x0, [x0, #24]
  407ab8:	lsl	x0, x0, #1
  407abc:	cmp	x1, x0
  407ac0:	b.ls	407b38 <wcrtomb@plt+0x4d48>  // b.plast
  407ac4:	ldr	x0, [sp, #24]
  407ac8:	ldr	x3, [x0]
  407acc:	ldr	x0, [sp, #24]
  407ad0:	ldr	x1, [x0, #8]
  407ad4:	ldr	x0, [sp, #24]
  407ad8:	ldr	x0, [x0, #16]
  407adc:	mov	x2, x0
  407ae0:	mov	x0, x3
  407ae4:	bl	4026e0 <memmove@plt>
  407ae8:	ldr	x0, [sp, #24]
  407aec:	ldr	x0, [x0, #24]
  407af0:	ldr	x1, [sp, #24]
  407af4:	ldr	x2, [x1, #8]
  407af8:	ldr	x1, [sp, #24]
  407afc:	ldr	x1, [x1]
  407b00:	sub	x1, x2, x1
  407b04:	add	x1, x0, x1
  407b08:	ldr	x0, [sp, #24]
  407b0c:	str	x1, [x0, #24]
  407b10:	ldr	x0, [sp, #24]
  407b14:	ldr	x1, [x0]
  407b18:	ldr	x0, [sp, #24]
  407b1c:	str	x1, [x0, #8]
  407b20:	str	wzr, [sp, #44]
  407b24:	ldr	x0, [sp, #24]
  407b28:	ldr	x0, [x0, #24]
  407b2c:	ldr	x1, [sp, #16]
  407b30:	cmp	x1, x0
  407b34:	b.cc	407bdc <wcrtomb@plt+0x4dec>  // b.lo, b.ul, b.last
  407b38:	ldr	x0, [sp, #24]
  407b3c:	ldr	x0, [x0, #24]
  407b40:	lsl	x1, x0, #1
  407b44:	ldr	x0, [sp, #24]
  407b48:	str	x1, [x0, #24]
  407b4c:	ldr	x0, [sp, #24]
  407b50:	ldr	x0, [x0, #24]
  407b54:	ldr	x1, [sp, #16]
  407b58:	cmp	x1, x0
  407b5c:	b.ls	407b6c <wcrtomb@plt+0x4d7c>  // b.plast
  407b60:	ldr	x0, [sp, #24]
  407b64:	ldr	x1, [sp, #16]
  407b68:	str	x1, [x0, #24]
  407b6c:	ldr	x0, [sp, #24]
  407b70:	ldr	x0, [x0, #24]
  407b74:	cmp	x0, #0x31
  407b78:	b.hi	407b88 <wcrtomb@plt+0x4d98>  // b.pmore
  407b7c:	ldr	x0, [sp, #24]
  407b80:	mov	x1, #0x32                  	// #50
  407b84:	str	x1, [x0, #24]
  407b88:	ldr	x0, [sp, #24]
  407b8c:	ldr	x3, [x0]
  407b90:	ldrsw	x1, [sp, #44]
  407b94:	ldr	x0, [sp, #24]
  407b98:	ldr	x0, [x0, #24]
  407b9c:	add	x0, x1, x0
  407ba0:	add	x0, x0, #0x1
  407ba4:	mov	x2, #0x1                   	// #1
  407ba8:	mov	x1, x0
  407bac:	mov	x0, x3
  407bb0:	bl	41b714 <wcrtomb@plt+0x18924>
  407bb4:	mov	x1, x0
  407bb8:	ldr	x0, [sp, #24]
  407bbc:	str	x1, [x0]
  407bc0:	ldr	x0, [sp, #24]
  407bc4:	ldr	x1, [x0]
  407bc8:	ldrsw	x0, [sp, #44]
  407bcc:	add	x1, x1, x0
  407bd0:	ldr	x0, [sp, #24]
  407bd4:	str	x1, [x0, #8]
  407bd8:	b	407be0 <wcrtomb@plt+0x4df0>
  407bdc:	nop
  407be0:	ldp	x29, x30, [sp], #48
  407be4:	ret
  407be8:	stp	x29, x30, [sp, #-64]!
  407bec:	mov	x29, sp
  407bf0:	str	x0, [sp, #40]
  407bf4:	str	x1, [sp, #32]
  407bf8:	str	x2, [sp, #24]
  407bfc:	ldr	x0, [sp, #40]
  407c00:	ldr	x0, [x0, #16]
  407c04:	ldr	x1, [sp, #24]
  407c08:	add	x0, x1, x0
  407c0c:	str	x0, [sp, #48]
  407c10:	ldr	x0, [sp, #40]
  407c14:	ldr	x0, [x0, #24]
  407c18:	ldr	x1, [sp, #48]
  407c1c:	cmp	x1, x0
  407c20:	b.ls	407c30 <wcrtomb@plt+0x4e40>  // b.plast
  407c24:	ldr	x1, [sp, #48]
  407c28:	ldr	x0, [sp, #40]
  407c2c:	bl	407a84 <wcrtomb@plt+0x4c94>
  407c30:	ldr	x0, [sp, #40]
  407c34:	ldr	x1, [x0, #8]
  407c38:	ldr	x0, [sp, #40]
  407c3c:	ldr	x0, [x0, #16]
  407c40:	add	x0, x1, x0
  407c44:	ldr	x2, [sp, #24]
  407c48:	ldr	x1, [sp, #32]
  407c4c:	bl	4026d0 <memcpy@plt>
  407c50:	ldr	x0, [sp, #40]
  407c54:	ldr	x1, [sp, #48]
  407c58:	str	x1, [x0, #16]
  407c5c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  407c60:	add	x0, x0, #0x8e4
  407c64:	ldr	w0, [x0]
  407c68:	cmp	w0, #0x1
  407c6c:	b.le	407d40 <wcrtomb@plt+0x4f50>
  407c70:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  407c74:	add	x0, x0, #0x8e0
  407c78:	ldrb	w0, [x0]
  407c7c:	eor	w0, w0, #0x1
  407c80:	and	w0, w0, #0xff
  407c84:	cmp	w0, #0x0
  407c88:	b.eq	407d40 <wcrtomb@plt+0x4f50>  // b.none
  407c8c:	b	407d2c <wcrtomb@plt+0x4f3c>
  407c90:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  407c94:	add	x0, x0, #0x8e4
  407c98:	ldr	w0, [x0]
  407c9c:	cmp	w0, #0x1
  407ca0:	b.eq	407cc4 <wcrtomb@plt+0x4ed4>  // b.none
  407ca4:	ldr	x0, [sp, #40]
  407ca8:	add	x0, x0, #0x24
  407cac:	mov	x3, x0
  407cb0:	ldr	x2, [sp, #24]
  407cb4:	ldr	x1, [sp, #32]
  407cb8:	mov	x0, #0x0                   	// #0
  407cbc:	bl	41bae8 <wcrtomb@plt+0x18cf8>
  407cc0:	b	407cc8 <wcrtomb@plt+0x4ed8>
  407cc4:	mov	x0, #0x1                   	// #1
  407cc8:	str	x0, [sp, #56]
  407ccc:	ldr	x0, [sp, #56]
  407cd0:	cmn	x0, #0x1
  407cd4:	b.eq	407ce4 <wcrtomb@plt+0x4ef4>  // b.none
  407cd8:	ldr	x0, [sp, #56]
  407cdc:	cmn	x0, #0x2
  407ce0:	b.ne	407d00 <wcrtomb@plt+0x4f10>  // b.any
  407ce4:	ldr	x0, [sp, #40]
  407ce8:	add	x0, x0, #0x24
  407cec:	mov	x2, #0x8                   	// #8
  407cf0:	mov	w1, #0x0                   	// #0
  407cf4:	bl	402980 <memset@plt>
  407cf8:	mov	x0, #0x1                   	// #1
  407cfc:	str	x0, [sp, #56]
  407d00:	ldr	x0, [sp, #56]
  407d04:	cmp	x0, #0x0
  407d08:	b.eq	407d3c <wcrtomb@plt+0x4f4c>  // b.none
  407d0c:	ldr	x1, [sp, #32]
  407d10:	ldr	x0, [sp, #56]
  407d14:	add	x0, x1, x0
  407d18:	str	x0, [sp, #32]
  407d1c:	ldr	x1, [sp, #24]
  407d20:	ldr	x0, [sp, #56]
  407d24:	sub	x0, x1, x0
  407d28:	str	x0, [sp, #24]
  407d2c:	ldr	x0, [sp, #24]
  407d30:	cmp	x0, #0x0
  407d34:	b.ne	407c90 <wcrtomb@plt+0x4ea0>  // b.any
  407d38:	b	407d40 <wcrtomb@plt+0x4f50>
  407d3c:	nop
  407d40:	nop
  407d44:	ldp	x29, x30, [sp], #64
  407d48:	ret
  407d4c:	stp	x29, x30, [sp, #-96]!
  407d50:	mov	x29, sp
  407d54:	str	x19, [sp, #16]
  407d58:	str	x0, [sp, #56]
  407d5c:	str	x1, [sp, #48]
  407d60:	str	x2, [sp, #40]
  407d64:	str	w3, [sp, #36]
  407d68:	ldr	w0, [sp, #36]
  407d6c:	cmp	w0, #0x0
  407d70:	b.ne	407d88 <wcrtomb@plt+0x4f98>  // b.any
  407d74:	ldr	x2, [sp, #40]
  407d78:	ldr	x1, [sp, #48]
  407d7c:	ldr	x0, [sp, #56]
  407d80:	bl	407be8 <wcrtomb@plt+0x4df8>
  407d84:	b	408154 <wcrtomb@plt+0x5364>
  407d88:	ldr	x0, [sp, #56]
  407d8c:	ldr	x1, [x0, #24]
  407d90:	ldr	x0, [sp, #56]
  407d94:	ldr	x0, [x0, #16]
  407d98:	sub	x1, x1, x0
  407d9c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  407da0:	add	x0, x0, #0x8e4
  407da4:	ldr	w0, [x0]
  407da8:	sxtw	x2, w0
  407dac:	ldr	x0, [sp, #40]
  407db0:	mul	x0, x2, x0
  407db4:	cmp	x1, x0
  407db8:	b.cs	407dec <wcrtomb@plt+0x4ffc>  // b.hs, b.nlast
  407dbc:	ldr	x0, [sp, #56]
  407dc0:	ldr	x1, [x0, #16]
  407dc4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  407dc8:	add	x0, x0, #0x8e4
  407dcc:	ldr	w0, [x0]
  407dd0:	sxtw	x2, w0
  407dd4:	ldr	x0, [sp, #40]
  407dd8:	mul	x0, x2, x0
  407ddc:	add	x0, x1, x0
  407de0:	mov	x1, x0
  407de4:	ldr	x0, [sp, #56]
  407de8:	bl	407a84 <wcrtomb@plt+0x4c94>
  407dec:	ldr	x0, [sp, #56]
  407df0:	add	x0, x0, #0x24
  407df4:	ldr	x0, [x0]
  407df8:	str	x0, [sp, #80]
  407dfc:	b	408148 <wcrtomb@plt+0x5358>
  407e00:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  407e04:	add	x0, x0, #0x8e4
  407e08:	ldr	w0, [x0]
  407e0c:	cmp	w0, #0x1
  407e10:	b.ne	407e2c <wcrtomb@plt+0x503c>  // b.any
  407e14:	ldr	x0, [sp, #48]
  407e18:	ldrb	w0, [x0]
  407e1c:	bl	402a80 <btowc@plt>
  407e20:	str	w0, [sp, #76]
  407e24:	mov	x0, #0x1                   	// #1
  407e28:	b	407e44 <wcrtomb@plt+0x5054>
  407e2c:	add	x1, sp, #0x50
  407e30:	add	x0, sp, #0x4c
  407e34:	mov	x3, x1
  407e38:	ldr	x2, [sp, #40]
  407e3c:	ldr	x1, [sp, #48]
  407e40:	bl	41bae8 <wcrtomb@plt+0x18cf8>
  407e44:	str	x0, [sp, #88]
  407e48:	ldr	x0, [sp, #88]
  407e4c:	cmn	x0, #0x1
  407e50:	b.ne	407ed0 <wcrtomb@plt+0x50e0>  // b.any
  407e54:	ldr	w0, [sp, #36]
  407e58:	and	w0, w0, #0xfffffff3
  407e5c:	str	w0, [sp, #36]
  407e60:	ldr	w0, [sp, #36]
  407e64:	cmp	w0, #0x0
  407e68:	b.ne	407e80 <wcrtomb@plt+0x5090>  // b.any
  407e6c:	ldr	x2, [sp, #40]
  407e70:	ldr	x1, [sp, #48]
  407e74:	ldr	x0, [sp, #56]
  407e78:	bl	407be8 <wcrtomb@plt+0x4df8>
  407e7c:	b	408154 <wcrtomb@plt+0x5364>
  407e80:	mov	x2, #0x1                   	// #1
  407e84:	ldr	x1, [sp, #48]
  407e88:	ldr	x0, [sp, #56]
  407e8c:	bl	407be8 <wcrtomb@plt+0x4df8>
  407e90:	ldr	x0, [sp, #56]
  407e94:	add	x0, x0, #0x24
  407e98:	mov	x2, #0x8                   	// #8
  407e9c:	mov	w1, #0x0                   	// #0
  407ea0:	bl	402980 <memset@plt>
  407ea4:	mov	x0, #0x1                   	// #1
  407ea8:	str	x0, [sp, #88]
  407eac:	ldr	x1, [sp, #48]
  407eb0:	ldr	x0, [sp, #88]
  407eb4:	add	x0, x1, x0
  407eb8:	str	x0, [sp, #48]
  407ebc:	ldr	x1, [sp, #40]
  407ec0:	ldr	x0, [sp, #88]
  407ec4:	sub	x0, x1, x0
  407ec8:	str	x0, [sp, #40]
  407ecc:	b	408148 <wcrtomb@plt+0x5358>
  407ed0:	ldr	x0, [sp, #88]
  407ed4:	cmp	x0, #0x0
  407ed8:	b.eq	407ee8 <wcrtomb@plt+0x50f8>  // b.none
  407edc:	ldr	x0, [sp, #88]
  407ee0:	cmn	x0, #0x2
  407ee4:	b.ne	407efc <wcrtomb@plt+0x510c>  // b.any
  407ee8:	ldr	x2, [sp, #40]
  407eec:	ldr	x1, [sp, #48]
  407ef0:	ldr	x0, [sp, #56]
  407ef4:	bl	407be8 <wcrtomb@plt+0x4df8>
  407ef8:	b	408154 <wcrtomb@plt+0x5364>
  407efc:	ldr	x1, [sp, #48]
  407f00:	ldr	x0, [sp, #88]
  407f04:	add	x0, x1, x0
  407f08:	str	x0, [sp, #48]
  407f0c:	ldr	x1, [sp, #40]
  407f10:	ldr	x0, [sp, #88]
  407f14:	sub	x0, x1, x0
  407f18:	str	x0, [sp, #40]
  407f1c:	ldr	w0, [sp, #36]
  407f20:	and	w0, w0, #0xc
  407f24:	cmp	w0, #0x0
  407f28:	b.eq	408050 <wcrtomb@plt+0x5260>  // b.none
  407f2c:	ldr	w0, [sp, #36]
  407f30:	and	w0, w0, #0x4
  407f34:	cmp	w0, #0x0
  407f38:	b.eq	407f4c <wcrtomb@plt+0x515c>  // b.none
  407f3c:	ldr	w0, [sp, #76]
  407f40:	bl	402ce0 <towupper@plt>
  407f44:	str	w0, [sp, #76]
  407f48:	b	407f58 <wcrtomb@plt+0x5168>
  407f4c:	ldr	w0, [sp, #76]
  407f50:	bl	402da0 <towlower@plt>
  407f54:	str	w0, [sp, #76]
  407f58:	ldr	w0, [sp, #36]
  407f5c:	and	w0, w0, #0xfffffff3
  407f60:	str	w0, [sp, #36]
  407f64:	ldr	w0, [sp, #36]
  407f68:	cmp	w0, #0x0
  407f6c:	b.ne	40807c <wcrtomb@plt+0x528c>  // b.any
  407f70:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  407f74:	add	x0, x0, #0x8e4
  407f78:	ldr	w0, [x0]
  407f7c:	cmp	w0, #0x1
  407f80:	b.ne	407fb4 <wcrtomb@plt+0x51c4>  // b.any
  407f84:	ldr	w0, [sp, #76]
  407f88:	bl	402860 <wctob@plt>
  407f8c:	mov	w2, w0
  407f90:	ldr	x0, [sp, #56]
  407f94:	ldr	x1, [x0, #8]
  407f98:	ldr	x0, [sp, #56]
  407f9c:	ldr	x0, [x0, #16]
  407fa0:	add	x0, x1, x0
  407fa4:	and	w1, w2, #0xff
  407fa8:	strb	w1, [x0]
  407fac:	mov	x0, #0x1                   	// #1
  407fb0:	b	407fe0 <wcrtomb@plt+0x51f0>
  407fb4:	ldr	x0, [sp, #56]
  407fb8:	ldr	x1, [x0, #8]
  407fbc:	ldr	x0, [sp, #56]
  407fc0:	ldr	x0, [x0, #16]
  407fc4:	add	x3, x1, x0
  407fc8:	ldr	w1, [sp, #76]
  407fcc:	ldr	x0, [sp, #56]
  407fd0:	add	x0, x0, #0x24
  407fd4:	mov	x2, x0
  407fd8:	mov	x0, x3
  407fdc:	bl	402df0 <wcrtomb@plt>
  407fe0:	str	x0, [sp, #88]
  407fe4:	ldr	x0, [sp, #56]
  407fe8:	ldr	x1, [x0, #16]
  407fec:	ldr	x0, [sp, #88]
  407ff0:	add	x1, x1, x0
  407ff4:	ldr	x0, [sp, #56]
  407ff8:	str	x1, [x0, #16]
  407ffc:	ldr	x0, [sp, #88]
  408000:	cmn	x0, #0x1
  408004:	b.eq	408014 <wcrtomb@plt+0x5224>  // b.none
  408008:	ldr	x0, [sp, #88]
  40800c:	cmn	x0, #0x2
  408010:	b.ne	40803c <wcrtomb@plt+0x524c>  // b.any
  408014:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408018:	add	x0, x0, #0x508
  40801c:	ldr	x19, [x0]
  408020:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  408024:	add	x0, x0, #0x218
  408028:	bl	402d80 <gettext@plt>
  40802c:	mov	x1, x0
  408030:	mov	x0, x19
  408034:	bl	402db0 <fprintf@plt>
  408038:	bl	402a90 <abort@plt>
  40803c:	ldr	x2, [sp, #40]
  408040:	ldr	x1, [sp, #48]
  408044:	ldr	x0, [sp, #56]
  408048:	bl	407be8 <wcrtomb@plt+0x4df8>
  40804c:	b	408154 <wcrtomb@plt+0x5364>
  408050:	ldr	w0, [sp, #36]
  408054:	and	w0, w0, #0x1
  408058:	cmp	w0, #0x0
  40805c:	b.eq	408070 <wcrtomb@plt+0x5280>  // b.none
  408060:	ldr	w0, [sp, #76]
  408064:	bl	402ce0 <towupper@plt>
  408068:	str	w0, [sp, #76]
  40806c:	b	40807c <wcrtomb@plt+0x528c>
  408070:	ldr	w0, [sp, #76]
  408074:	bl	402da0 <towlower@plt>
  408078:	str	w0, [sp, #76]
  40807c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408080:	add	x0, x0, #0x8e4
  408084:	ldr	w0, [x0]
  408088:	cmp	w0, #0x1
  40808c:	b.ne	4080c0 <wcrtomb@plt+0x52d0>  // b.any
  408090:	ldr	w0, [sp, #76]
  408094:	bl	402860 <wctob@plt>
  408098:	mov	w2, w0
  40809c:	ldr	x0, [sp, #56]
  4080a0:	ldr	x1, [x0, #8]
  4080a4:	ldr	x0, [sp, #56]
  4080a8:	ldr	x0, [x0, #16]
  4080ac:	add	x0, x1, x0
  4080b0:	and	w1, w2, #0xff
  4080b4:	strb	w1, [x0]
  4080b8:	mov	x0, #0x1                   	// #1
  4080bc:	b	4080ec <wcrtomb@plt+0x52fc>
  4080c0:	ldr	x0, [sp, #56]
  4080c4:	ldr	x1, [x0, #8]
  4080c8:	ldr	x0, [sp, #56]
  4080cc:	ldr	x0, [x0, #16]
  4080d0:	add	x3, x1, x0
  4080d4:	ldr	w1, [sp, #76]
  4080d8:	ldr	x0, [sp, #56]
  4080dc:	add	x0, x0, #0x24
  4080e0:	mov	x2, x0
  4080e4:	mov	x0, x3
  4080e8:	bl	402df0 <wcrtomb@plt>
  4080ec:	str	x0, [sp, #88]
  4080f0:	ldr	x0, [sp, #56]
  4080f4:	ldr	x1, [x0, #16]
  4080f8:	ldr	x0, [sp, #88]
  4080fc:	add	x1, x1, x0
  408100:	ldr	x0, [sp, #56]
  408104:	str	x1, [x0, #16]
  408108:	ldr	x0, [sp, #88]
  40810c:	cmn	x0, #0x1
  408110:	b.eq	408120 <wcrtomb@plt+0x5330>  // b.none
  408114:	ldr	x0, [sp, #88]
  408118:	cmn	x0, #0x2
  40811c:	b.ne	408148 <wcrtomb@plt+0x5358>  // b.any
  408120:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408124:	add	x0, x0, #0x508
  408128:	ldr	x19, [x0]
  40812c:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  408130:	add	x0, x0, #0x218
  408134:	bl	402d80 <gettext@plt>
  408138:	mov	x1, x0
  40813c:	mov	x0, x19
  408140:	bl	402db0 <fprintf@plt>
  408144:	bl	402a90 <abort@plt>
  408148:	ldr	x0, [sp, #40]
  40814c:	cmp	x0, #0x0
  408150:	b.ne	407e00 <wcrtomb@plt+0x5010>  // b.any
  408154:	ldr	x19, [sp, #16]
  408158:	ldp	x29, x30, [sp], #96
  40815c:	ret
  408160:	stp	x29, x30, [sp, #-48]!
  408164:	mov	x29, sp
  408168:	str	x0, [sp, #40]
  40816c:	str	x1, [sp, #32]
  408170:	str	x2, [sp, #24]
  408174:	ldr	x0, [sp, #24]
  408178:	add	x0, x0, #0x1
  40817c:	bl	41b9a8 <wcrtomb@plt+0x18bb8>
  408180:	mov	x1, x0
  408184:	ldr	x0, [sp, #40]
  408188:	str	x1, [x0]
  40818c:	ldr	x0, [sp, #40]
  408190:	ldr	x1, [x0]
  408194:	ldr	x0, [sp, #40]
  408198:	str	x1, [x0, #8]
  40819c:	ldr	x0, [sp, #40]
  4081a0:	ldr	x1, [sp, #24]
  4081a4:	str	x1, [x0, #24]
  4081a8:	ldr	x0, [sp, #40]
  4081ac:	str	xzr, [x0, #16]
  4081b0:	ldr	x0, [sp, #40]
  4081b4:	mov	w1, #0x1                   	// #1
  4081b8:	strb	w1, [x0, #32]
  4081bc:	ldr	x0, [sp, #32]
  4081c0:	cmp	x0, #0x0
  4081c4:	b.eq	4081e4 <wcrtomb@plt+0x53f4>  // b.none
  4081c8:	ldr	x0, [sp, #40]
  4081cc:	add	x0, x0, #0x24
  4081d0:	ldr	x1, [sp, #32]
  4081d4:	add	x1, x1, #0x24
  4081d8:	ldr	x1, [x1]
  4081dc:	str	x1, [x0]
  4081e0:	b	4081f8 <wcrtomb@plt+0x5408>
  4081e4:	ldr	x0, [sp, #40]
  4081e8:	add	x0, x0, #0x24
  4081ec:	mov	x2, #0x8                   	// #8
  4081f0:	mov	w1, #0x0                   	// #0
  4081f4:	bl	402980 <memset@plt>
  4081f8:	nop
  4081fc:	ldp	x29, x30, [sp], #48
  408200:	ret
  408204:	stp	x29, x30, [sp, #-32]!
  408208:	mov	x29, sp
  40820c:	str	x0, [sp, #24]
  408210:	str	x1, [sp, #16]
  408214:	ldr	x0, [sp, #24]
  408218:	ldr	x0, [x0, #24]
  40821c:	cmp	x0, #0x0
  408220:	b.ne	408238 <wcrtomb@plt+0x5448>  // b.any
  408224:	mov	x2, #0x32                  	// #50
  408228:	ldr	x1, [sp, #16]
  40822c:	ldr	x0, [sp, #24]
  408230:	bl	408160 <wcrtomb@plt+0x5370>
  408234:	b	40827c <wcrtomb@plt+0x548c>
  408238:	ldr	x0, [sp, #24]
  40823c:	str	xzr, [x0, #16]
  408240:	ldr	x0, [sp, #16]
  408244:	cmp	x0, #0x0
  408248:	b.eq	408268 <wcrtomb@plt+0x5478>  // b.none
  40824c:	ldr	x0, [sp, #24]
  408250:	add	x0, x0, #0x24
  408254:	ldr	x1, [sp, #16]
  408258:	add	x1, x1, #0x24
  40825c:	ldr	x1, [x1]
  408260:	str	x1, [x0]
  408264:	b	40827c <wcrtomb@plt+0x548c>
  408268:	ldr	x0, [sp, #24]
  40826c:	add	x0, x0, #0x24
  408270:	mov	x2, #0x8                   	// #8
  408274:	mov	w1, #0x0                   	// #0
  408278:	bl	402980 <memset@plt>
  40827c:	nop
  408280:	ldp	x29, x30, [sp], #32
  408284:	ret
  408288:	stp	x29, x30, [sp, #-48]!
  40828c:	mov	x29, sp
  408290:	str	x0, [sp, #40]
  408294:	str	x1, [sp, #32]
  408298:	str	w2, [sp, #28]
  40829c:	ldr	x0, [sp, #32]
  4082a0:	ldr	x0, [x0, #24]
  4082a4:	ldr	x1, [sp, #32]
  4082a8:	ldr	x2, [x1, #8]
  4082ac:	ldr	x1, [sp, #32]
  4082b0:	ldr	x1, [x1]
  4082b4:	sub	x1, x2, x1
  4082b8:	add	x1, x0, x1
  4082bc:	ldr	x0, [sp, #32]
  4082c0:	str	x1, [x0, #24]
  4082c4:	ldr	x0, [sp, #32]
  4082c8:	ldr	x1, [x0, #24]
  4082cc:	ldr	x0, [sp, #40]
  4082d0:	ldr	x0, [x0, #16]
  4082d4:	cmp	x1, x0
  4082d8:	b.cs	40835c <wcrtomb@plt+0x556c>  // b.hs, b.nlast
  4082dc:	ldr	x0, [sp, #32]
  4082e0:	ldr	x0, [x0, #24]
  4082e4:	lsl	x1, x0, #1
  4082e8:	ldr	x0, [sp, #32]
  4082ec:	str	x1, [x0, #24]
  4082f0:	ldr	x0, [sp, #32]
  4082f4:	ldr	x1, [x0, #24]
  4082f8:	ldr	x0, [sp, #40]
  4082fc:	ldr	x0, [x0, #16]
  408300:	cmp	x1, x0
  408304:	b.cs	408318 <wcrtomb@plt+0x5528>  // b.hs, b.nlast
  408308:	ldr	x0, [sp, #40]
  40830c:	ldr	x1, [x0, #16]
  408310:	ldr	x0, [sp, #32]
  408314:	str	x1, [x0, #24]
  408318:	ldr	x0, [sp, #32]
  40831c:	ldr	x0, [x0, #24]
  408320:	cmp	x0, #0x31
  408324:	b.hi	408334 <wcrtomb@plt+0x5544>  // b.pmore
  408328:	ldr	x0, [sp, #32]
  40832c:	mov	x1, #0x32                  	// #50
  408330:	str	x1, [x0, #24]
  408334:	ldr	x0, [sp, #32]
  408338:	ldr	x0, [x0]
  40833c:	bl	402b60 <free@plt>
  408340:	ldr	x0, [sp, #32]
  408344:	ldr	x0, [x0, #24]
  408348:	add	x0, x0, #0x1
  40834c:	bl	41b9a8 <wcrtomb@plt+0x18bb8>
  408350:	mov	x1, x0
  408354:	ldr	x0, [sp, #32]
  408358:	str	x1, [x0]
  40835c:	ldr	x0, [sp, #32]
  408360:	ldr	x1, [x0]
  408364:	ldr	x0, [sp, #32]
  408368:	str	x1, [x0, #8]
  40836c:	ldr	x0, [sp, #40]
  408370:	ldr	x1, [x0, #16]
  408374:	ldr	x0, [sp, #32]
  408378:	str	x1, [x0, #16]
  40837c:	ldr	x0, [sp, #40]
  408380:	ldrb	w1, [x0, #32]
  408384:	ldr	x0, [sp, #32]
  408388:	strb	w1, [x0, #32]
  40838c:	ldr	x0, [sp, #32]
  408390:	ldr	x3, [x0, #8]
  408394:	ldr	x0, [sp, #40]
  408398:	ldr	x1, [x0, #8]
  40839c:	ldr	x0, [sp, #40]
  4083a0:	ldr	x0, [x0, #16]
  4083a4:	mov	x2, x0
  4083a8:	mov	x0, x3
  4083ac:	bl	4026d0 <memcpy@plt>
  4083b0:	ldr	w0, [sp, #28]
  4083b4:	cmp	w0, #0x0
  4083b8:	b.eq	4083d4 <wcrtomb@plt+0x55e4>  // b.none
  4083bc:	ldr	x0, [sp, #32]
  4083c0:	add	x0, x0, #0x24
  4083c4:	ldr	x1, [sp, #40]
  4083c8:	add	x1, x1, #0x24
  4083cc:	ldr	x1, [x1]
  4083d0:	str	x1, [x0]
  4083d4:	nop
  4083d8:	ldp	x29, x30, [sp], #48
  4083dc:	ret
  4083e0:	stp	x29, x30, [sp, #-48]!
  4083e4:	mov	x29, sp
  4083e8:	str	x0, [sp, #40]
  4083ec:	str	x1, [sp, #32]
  4083f0:	str	w2, [sp, #28]
  4083f4:	mov	x2, #0x1                   	// #1
  4083f8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4083fc:	add	x1, x0, #0x470
  408400:	ldr	x0, [sp, #32]
  408404:	bl	407be8 <wcrtomb@plt+0x4df8>
  408408:	ldr	x0, [sp, #40]
  40840c:	ldr	x1, [x0, #8]
  408410:	ldr	x0, [sp, #40]
  408414:	ldr	x0, [x0, #16]
  408418:	mov	x2, x0
  40841c:	ldr	x0, [sp, #32]
  408420:	bl	407be8 <wcrtomb@plt+0x4df8>
  408424:	ldr	x0, [sp, #40]
  408428:	ldrb	w1, [x0, #32]
  40842c:	ldr	x0, [sp, #32]
  408430:	strb	w1, [x0, #32]
  408434:	ldr	w0, [sp, #28]
  408438:	cmp	w0, #0x0
  40843c:	b.eq	408458 <wcrtomb@plt+0x5668>  // b.none
  408440:	ldr	x0, [sp, #32]
  408444:	add	x0, x0, #0x24
  408448:	ldr	x1, [sp, #40]
  40844c:	add	x1, x1, #0x24
  408450:	ldr	x1, [x1]
  408454:	str	x1, [x0]
  408458:	nop
  40845c:	ldp	x29, x30, [sp], #48
  408460:	ret
  408464:	stp	x29, x30, [sp, #-96]!
  408468:	mov	x29, sp
  40846c:	str	x0, [sp, #40]
  408470:	str	x1, [sp, #32]
  408474:	str	w2, [sp, #28]
  408478:	ldr	w0, [sp, #28]
  40847c:	cmp	w0, #0x0
  408480:	b.eq	4084bc <wcrtomb@plt+0x56cc>  // b.none
  408484:	add	x0, sp, #0x30
  408488:	mov	x2, #0x30                  	// #48
  40848c:	ldr	x1, [sp, #40]
  408490:	bl	4026d0 <memcpy@plt>
  408494:	mov	x2, #0x30                  	// #48
  408498:	ldr	x1, [sp, #32]
  40849c:	ldr	x0, [sp, #40]
  4084a0:	bl	4026d0 <memcpy@plt>
  4084a4:	add	x0, sp, #0x30
  4084a8:	mov	x2, #0x30                  	// #48
  4084ac:	mov	x1, x0
  4084b0:	ldr	x0, [sp, #32]
  4084b4:	bl	4026d0 <memcpy@plt>
  4084b8:	b	4084f0 <wcrtomb@plt+0x5700>
  4084bc:	add	x0, sp, #0x30
  4084c0:	mov	x2, #0x24                  	// #36
  4084c4:	ldr	x1, [sp, #40]
  4084c8:	bl	4026d0 <memcpy@plt>
  4084cc:	mov	x2, #0x24                  	// #36
  4084d0:	ldr	x1, [sp, #32]
  4084d4:	ldr	x0, [sp, #40]
  4084d8:	bl	4026d0 <memcpy@plt>
  4084dc:	add	x0, sp, #0x30
  4084e0:	mov	x2, #0x24                  	// #36
  4084e4:	mov	x1, x0
  4084e8:	ldr	x0, [sp, #32]
  4084ec:	bl	4026d0 <memcpy@plt>
  4084f0:	nop
  4084f4:	ldp	x29, x30, [sp], #96
  4084f8:	ret
  4084fc:	sub	sp, sp, #0x10
  408500:	str	x0, [sp, #8]
  408504:	mov	w0, #0x0                   	// #0
  408508:	add	sp, sp, #0x10
  40850c:	ret
  408510:	stp	x29, x30, [sp, #-48]!
  408514:	mov	x29, sp
  408518:	str	x0, [sp, #24]
  40851c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408520:	add	x0, x0, #0x470
  408524:	ldrb	w1, [x0]
  408528:	ldr	x0, [sp, #24]
  40852c:	ldr	x0, [x0, #184]
  408530:	mov	x3, x0
  408534:	mov	w2, w1
  408538:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40853c:	add	x1, x0, #0x730
  408540:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408544:	add	x0, x0, #0x728
  408548:	bl	40d998 <wcrtomb@plt+0xaba8>
  40854c:	str	x0, [sp, #40]
  408550:	ldr	x0, [sp, #40]
  408554:	cmp	x0, #0x0
  408558:	b.gt	408564 <wcrtomb@plt+0x5774>
  40855c:	mov	w0, #0x0                   	// #0
  408560:	b	4085d8 <wcrtomb@plt+0x57e8>
  408564:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408568:	add	x0, x0, #0x728
  40856c:	ldr	x1, [x0]
  408570:	ldr	x0, [sp, #40]
  408574:	sub	x0, x0, #0x1
  408578:	add	x0, x1, x0
  40857c:	ldrb	w1, [x0]
  408580:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408584:	add	x0, x0, #0x470
  408588:	ldrb	w0, [x0]
  40858c:	cmp	w1, w0
  408590:	b.ne	4085a4 <wcrtomb@plt+0x57b4>  // b.any
  408594:	ldr	x0, [sp, #40]
  408598:	sub	x0, x0, #0x1
  40859c:	str	x0, [sp, #40]
  4085a0:	b	4085b0 <wcrtomb@plt+0x57c0>
  4085a4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4085a8:	add	x0, x0, #0x658
  4085ac:	strb	wzr, [x0, #32]
  4085b0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4085b4:	add	x0, x0, #0x728
  4085b8:	ldr	x0, [x0]
  4085bc:	ldr	x1, [sp, #40]
  4085c0:	mov	x2, x1
  4085c4:	mov	x1, x0
  4085c8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4085cc:	add	x0, x0, #0x658
  4085d0:	bl	407be8 <wcrtomb@plt+0x4df8>
  4085d4:	mov	w0, #0x1                   	// #1
  4085d8:	ldp	x29, x30, [sp], #48
  4085dc:	ret
  4085e0:	stp	x29, x30, [sp, #-32]!
  4085e4:	mov	x29, sp
  4085e8:	str	x0, [sp, #24]
  4085ec:	ldr	x0, [sp, #24]
  4085f0:	ldrb	w0, [x0, #8]
  4085f4:	cmp	w0, #0x0
  4085f8:	b.eq	408624 <wcrtomb@plt+0x5834>  // b.none
  4085fc:	ldr	x0, [sp, #24]
  408600:	ldr	x0, [x0, #16]
  408604:	mov	x3, x0
  408608:	mov	x2, #0x1                   	// #1
  40860c:	mov	x1, #0x1                   	// #1
  408610:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408614:	add	x0, x0, #0x470
  408618:	bl	40d840 <wcrtomb@plt+0xaa50>
  40861c:	ldr	x0, [sp, #24]
  408620:	strb	wzr, [x0, #8]
  408624:	nop
  408628:	ldp	x29, x30, [sp], #32
  40862c:	ret
  408630:	stp	x29, x30, [sp, #-32]!
  408634:	mov	x29, sp
  408638:	str	x0, [sp, #24]
  40863c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408640:	add	x0, x0, #0x75c
  408644:	ldrb	w0, [x0]
  408648:	cmp	w0, #0x0
  40864c:	b.eq	408658 <wcrtomb@plt+0x5868>  // b.none
  408650:	ldr	x0, [sp, #24]
  408654:	bl	40da60 <wcrtomb@plt+0xac70>
  408658:	nop
  40865c:	ldp	x29, x30, [sp], #32
  408660:	ret
  408664:	stp	x29, x30, [sp, #-48]!
  408668:	mov	x29, sp
  40866c:	str	x0, [sp, #40]
  408670:	str	x1, [sp, #32]
  408674:	str	w2, [sp, #28]
  408678:	str	x3, [sp, #16]
  40867c:	ldr	x0, [sp, #40]
  408680:	cmp	x0, #0x0
  408684:	b.eq	408704 <wcrtomb@plt+0x5914>  // b.none
  408688:	ldr	x0, [sp, #16]
  40868c:	bl	4085e0 <wcrtomb@plt+0x57f0>
  408690:	ldr	x0, [sp, #32]
  408694:	cmp	x0, #0x0
  408698:	b.eq	4086b8 <wcrtomb@plt+0x58c8>  // b.none
  40869c:	ldr	x0, [sp, #16]
  4086a0:	ldr	x0, [x0, #16]
  4086a4:	mov	x3, x0
  4086a8:	ldr	x2, [sp, #32]
  4086ac:	mov	x1, #0x1                   	// #1
  4086b0:	ldr	x0, [sp, #40]
  4086b4:	bl	40d840 <wcrtomb@plt+0xaa50>
  4086b8:	ldr	w0, [sp, #28]
  4086bc:	cmp	w0, #0x0
  4086c0:	b.eq	4086e8 <wcrtomb@plt+0x58f8>  // b.none
  4086c4:	ldr	x0, [sp, #16]
  4086c8:	ldr	x0, [x0, #16]
  4086cc:	mov	x3, x0
  4086d0:	mov	x2, #0x1                   	// #1
  4086d4:	mov	x1, #0x1                   	// #1
  4086d8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4086dc:	add	x0, x0, #0x470
  4086e0:	bl	40d840 <wcrtomb@plt+0xaa50>
  4086e4:	b	4086f4 <wcrtomb@plt+0x5904>
  4086e8:	ldr	x0, [sp, #16]
  4086ec:	mov	w1, #0x1                   	// #1
  4086f0:	strb	w1, [x0, #8]
  4086f4:	ldr	x0, [sp, #16]
  4086f8:	ldr	x0, [x0, #16]
  4086fc:	bl	408630 <wcrtomb@plt+0x5840>
  408700:	b	408708 <wcrtomb@plt+0x5918>
  408704:	nop
  408708:	ldp	x29, x30, [sp], #48
  40870c:	ret
  408710:	stp	x29, x30, [sp, #-32]!
  408714:	mov	x29, sp
  408718:	mov	x1, #0x28                  	// #40
  40871c:	mov	x0, #0x1                   	// #1
  408720:	bl	41b9c8 <wcrtomb@plt+0x18bd8>
  408724:	str	x0, [sp, #24]
  408728:	ldr	x0, [sp, #24]
  40872c:	str	xzr, [x0]
  408730:	ldr	x0, [sp, #24]
  408734:	str	xzr, [x0, #8]
  408738:	ldr	x0, [sp, #24]
  40873c:	str	xzr, [x0, #16]
  408740:	ldr	x0, [sp, #24]
  408744:	str	xzr, [x0, #24]
  408748:	ldr	x0, [sp, #24]
  40874c:	strb	wzr, [x0, #32]
  408750:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408754:	add	x0, x0, #0x720
  408758:	ldr	x0, [x0]
  40875c:	cmp	x0, #0x0
  408760:	b.eq	40877c <wcrtomb@plt+0x598c>  // b.none
  408764:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408768:	add	x0, x0, #0x720
  40876c:	ldr	x0, [x0]
  408770:	ldr	x1, [sp, #24]
  408774:	str	x1, [x0, #24]
  408778:	b	40878c <wcrtomb@plt+0x599c>
  40877c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408780:	add	x0, x0, #0x718
  408784:	ldr	x1, [sp, #24]
  408788:	str	x1, [x0]
  40878c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408790:	add	x0, x0, #0x720
  408794:	ldr	x1, [sp, #24]
  408798:	str	x1, [x0]
  40879c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4087a0:	add	x0, x0, #0x720
  4087a4:	ldr	x0, [x0]
  4087a8:	ldp	x29, x30, [sp], #32
  4087ac:	ret
  4087b0:	stp	x29, x30, [sp, #-32]!
  4087b4:	mov	x29, sp
  4087b8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4087bc:	add	x0, x0, #0x718
  4087c0:	ldr	x0, [x0]
  4087c4:	str	x0, [sp, #24]
  4087c8:	b	408804 <wcrtomb@plt+0x5a14>
  4087cc:	ldr	x0, [sp, #24]
  4087d0:	ldrb	w0, [x0, #32]
  4087d4:	cmp	w0, #0x0
  4087d8:	b.eq	4087e8 <wcrtomb@plt+0x59f8>  // b.none
  4087dc:	ldr	x0, [sp, #24]
  4087e0:	ldr	x0, [x0, #8]
  4087e4:	bl	402b60 <free@plt>
  4087e8:	ldr	x0, [sp, #24]
  4087ec:	ldr	x0, [x0, #24]
  4087f0:	str	x0, [sp, #16]
  4087f4:	ldr	x0, [sp, #24]
  4087f8:	bl	402b60 <free@plt>
  4087fc:	ldr	x0, [sp, #16]
  408800:	str	x0, [sp, #24]
  408804:	ldr	x0, [sp, #24]
  408808:	cmp	x0, #0x0
  40880c:	b.ne	4087cc <wcrtomb@plt+0x59dc>  // b.any
  408810:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408814:	add	x0, x0, #0x720
  408818:	str	xzr, [x0]
  40881c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408820:	add	x0, x0, #0x720
  408824:	ldr	x1, [x0]
  408828:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40882c:	add	x0, x0, #0x718
  408830:	str	x1, [x0]
  408834:	nop
  408838:	ldp	x29, x30, [sp], #32
  40883c:	ret
  408840:	mov	x12, #0x2030                	// #8240
  408844:	sub	sp, sp, x12
  408848:	stp	x29, x30, [sp]
  40884c:	mov	x29, sp
  408850:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408854:	add	x0, x0, #0x638
  408858:	bl	4085e0 <wcrtomb@plt+0x57f0>
  40885c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408860:	add	x0, x0, #0x718
  408864:	ldr	x0, [x0]
  408868:	str	x0, [sp, #8232]
  40886c:	b	408950 <wcrtomb@plt+0x5b60>
  408870:	ldr	x0, [sp, #8232]
  408874:	ldr	x0, [x0, #8]
  408878:	cmp	x0, #0x0
  40887c:	b.eq	4088b0 <wcrtomb@plt+0x5ac0>  // b.none
  408880:	ldr	x0, [sp, #8232]
  408884:	ldr	x4, [x0, #8]
  408888:	ldr	x0, [sp, #8232]
  40888c:	ldr	x1, [x0, #16]
  408890:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408894:	add	x0, x0, #0x638
  408898:	ldr	x0, [x0, #16]
  40889c:	mov	x3, x0
  4088a0:	mov	x2, x1
  4088a4:	mov	x1, #0x1                   	// #1
  4088a8:	mov	x0, x4
  4088ac:	bl	40d840 <wcrtomb@plt+0xaa50>
  4088b0:	ldr	x0, [sp, #8232]
  4088b4:	ldr	x0, [x0]
  4088b8:	cmp	x0, #0x0
  4088bc:	b.eq	408944 <wcrtomb@plt+0x5b54>  // b.none
  4088c0:	ldr	x0, [sp, #8232]
  4088c4:	ldr	x3, [x0]
  4088c8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4088cc:	add	x0, x0, #0x478
  4088d0:	ldr	x0, [x0]
  4088d4:	mov	w2, #0x0                   	// #0
  4088d8:	mov	x1, x0
  4088dc:	mov	x0, x3
  4088e0:	bl	40d630 <wcrtomb@plt+0xa840>
  4088e4:	str	x0, [sp, #8224]
  4088e8:	ldr	x0, [sp, #8224]
  4088ec:	cmp	x0, #0x0
  4088f0:	b.eq	408944 <wcrtomb@plt+0x5b54>  // b.none
  4088f4:	b	408918 <wcrtomb@plt+0x5b28>
  4088f8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4088fc:	add	x0, x0, #0x638
  408900:	ldr	x1, [x0, #16]
  408904:	add	x0, sp, #0x18
  408908:	mov	x3, x1
  40890c:	ldr	x2, [sp, #8216]
  408910:	mov	x1, #0x1                   	// #1
  408914:	bl	40d840 <wcrtomb@plt+0xaa50>
  408918:	add	x0, sp, #0x18
  40891c:	ldr	x3, [sp, #8224]
  408920:	mov	x2, #0x2000                	// #8192
  408924:	mov	x1, #0x1                   	// #1
  408928:	bl	40d8ec <wcrtomb@plt+0xaafc>
  40892c:	str	x0, [sp, #8216]
  408930:	ldr	x0, [sp, #8216]
  408934:	cmp	x0, #0x0
  408938:	b.ne	4088f8 <wcrtomb@plt+0x5b08>  // b.any
  40893c:	ldr	x0, [sp, #8224]
  408940:	bl	40dae4 <wcrtomb@plt+0xacf4>
  408944:	ldr	x0, [sp, #8232]
  408948:	ldr	x0, [x0, #24]
  40894c:	str	x0, [sp, #8232]
  408950:	ldr	x0, [sp, #8232]
  408954:	cmp	x0, #0x0
  408958:	b.ne	408870 <wcrtomb@plt+0x5a80>  // b.any
  40895c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408960:	add	x0, x0, #0x638
  408964:	ldr	x0, [x0, #16]
  408968:	bl	408630 <wcrtomb@plt+0x5840>
  40896c:	bl	4087b0 <wcrtomb@plt+0x59c0>
  408970:	nop
  408974:	ldp	x29, x30, [sp]
  408978:	mov	x12, #0x2030                	// #8240
  40897c:	add	sp, sp, x12
  408980:	ret
  408984:	stp	x29, x30, [sp, #-80]!
  408988:	mov	x29, sp
  40898c:	str	x0, [sp, #24]
  408990:	ldr	x0, [sp, #24]
  408994:	bl	402720 <strlen@plt>
  408998:	str	w0, [sp, #56]
  40899c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4089a0:	add	x0, x0, #0x768
  4089a4:	ldr	x0, [x0]
  4089a8:	bl	402720 <strlen@plt>
  4089ac:	str	w0, [sp, #60]
  4089b0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4089b4:	add	x0, x0, #0x768
  4089b8:	ldr	x0, [x0]
  4089bc:	sub	x0, x0, #0x1
  4089c0:	str	x0, [sp, #48]
  4089c4:	ldr	x0, [sp, #48]
  4089c8:	add	x0, x0, #0x1
  4089cc:	str	x0, [sp, #72]
  4089d0:	b	4089f4 <wcrtomb@plt+0x5c04>
  4089d4:	ldr	w0, [sp, #56]
  4089d8:	sub	w0, w0, #0x1
  4089dc:	ldr	w1, [sp, #60]
  4089e0:	add	w0, w1, w0
  4089e4:	str	w0, [sp, #60]
  4089e8:	ldr	x0, [sp, #48]
  4089ec:	add	x0, x0, #0x1
  4089f0:	str	x0, [sp, #72]
  4089f4:	mov	w1, #0x2a                  	// #42
  4089f8:	ldr	x0, [sp, #72]
  4089fc:	bl	402ba0 <strchr@plt>
  408a00:	str	x0, [sp, #48]
  408a04:	ldr	x0, [sp, #48]
  408a08:	cmp	x0, #0x0
  408a0c:	b.ne	4089d4 <wcrtomb@plt+0x5be4>  // b.any
  408a10:	ldr	w0, [sp, #60]
  408a14:	add	w0, w0, #0x1
  408a18:	sxtw	x0, w0
  408a1c:	bl	41b8d0 <wcrtomb@plt+0x18ae0>
  408a20:	str	x0, [sp, #40]
  408a24:	ldr	x0, [sp, #40]
  408a28:	str	x0, [sp, #64]
  408a2c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408a30:	add	x0, x0, #0x768
  408a34:	ldr	x0, [x0]
  408a38:	sub	x0, x0, #0x1
  408a3c:	str	x0, [sp, #48]
  408a40:	ldr	x0, [sp, #48]
  408a44:	add	x0, x0, #0x1
  408a48:	str	x0, [sp, #72]
  408a4c:	b	408ab0 <wcrtomb@plt+0x5cc0>
  408a50:	ldr	x1, [sp, #48]
  408a54:	ldr	x0, [sp, #72]
  408a58:	sub	x0, x1, x0
  408a5c:	mov	x2, x0
  408a60:	ldr	x1, [sp, #72]
  408a64:	ldr	x0, [sp, #64]
  408a68:	bl	4026d0 <memcpy@plt>
  408a6c:	ldr	x1, [sp, #48]
  408a70:	ldr	x0, [sp, #72]
  408a74:	sub	x0, x1, x0
  408a78:	mov	x1, x0
  408a7c:	ldr	x0, [sp, #64]
  408a80:	add	x0, x0, x1
  408a84:	str	x0, [sp, #64]
  408a88:	ldr	x1, [sp, #24]
  408a8c:	ldr	x0, [sp, #64]
  408a90:	bl	402c00 <strcpy@plt>
  408a94:	ldrsw	x0, [sp, #56]
  408a98:	ldr	x1, [sp, #64]
  408a9c:	add	x0, x1, x0
  408aa0:	str	x0, [sp, #64]
  408aa4:	ldr	x0, [sp, #48]
  408aa8:	add	x0, x0, #0x1
  408aac:	str	x0, [sp, #72]
  408ab0:	mov	w1, #0x2a                  	// #42
  408ab4:	ldr	x0, [sp, #72]
  408ab8:	bl	402ba0 <strchr@plt>
  408abc:	str	x0, [sp, #48]
  408ac0:	ldr	x0, [sp, #48]
  408ac4:	cmp	x0, #0x0
  408ac8:	b.ne	408a50 <wcrtomb@plt+0x5c60>  // b.any
  408acc:	ldr	x1, [sp, #72]
  408ad0:	ldr	x0, [sp, #64]
  408ad4:	bl	402c00 <strcpy@plt>
  408ad8:	ldr	x0, [sp, #40]
  408adc:	ldp	x29, x30, [sp], #80
  408ae0:	ret
  408ae4:	stp	x29, x30, [sp, #-112]!
  408ae8:	mov	x29, sp
  408aec:	stp	x19, x20, [sp, #16]
  408af0:	str	x0, [sp, #40]
  408af4:	str	x1, [sp, #32]
  408af8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408afc:	add	x0, x0, #0x6e8
  408b00:	str	xzr, [x0, #16]
  408b04:	ldr	x0, [sp, #32]
  408b08:	ldr	x1, [sp, #40]
  408b0c:	str	x1, [x0, #48]
  408b10:	ldr	x0, [sp, #40]
  408b14:	ldrb	w0, [x0]
  408b18:	cmp	w0, #0x2d
  408b1c:	b.ne	408b70 <wcrtomb@plt+0x5d80>  // b.any
  408b20:	ldr	x0, [sp, #40]
  408b24:	add	x0, x0, #0x1
  408b28:	ldrb	w0, [x0]
  408b2c:	cmp	w0, #0x0
  408b30:	b.ne	408b70 <wcrtomb@plt+0x5d80>  // b.any
  408b34:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408b38:	add	x0, x0, #0x768
  408b3c:	ldr	x0, [x0]
  408b40:	cmp	x0, #0x0
  408b44:	b.ne	408b70 <wcrtomb@plt+0x5d80>  // b.any
  408b48:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408b4c:	add	x0, x0, #0x528
  408b50:	ldr	x0, [x0]
  408b54:	bl	402c10 <clearerr_unlocked@plt>
  408b58:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408b5c:	add	x0, x0, #0x528
  408b60:	ldr	x1, [x0]
  408b64:	ldr	x0, [sp, #32]
  408b68:	str	x1, [x0, #184]
  408b6c:	b	408c44 <wcrtomb@plt+0x5e54>
  408b70:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408b74:	add	x0, x0, #0x75f
  408b78:	ldrb	w0, [x0]
  408b7c:	cmp	w0, #0x0
  408b80:	b.eq	408b98 <wcrtomb@plt+0x5da8>  // b.none
  408b84:	ldr	x0, [sp, #40]
  408b88:	bl	40dc24 <wcrtomb@plt+0xae34>
  408b8c:	mov	x1, x0
  408b90:	ldr	x0, [sp, #32]
  408b94:	str	x1, [x0, #48]
  408b98:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408b9c:	add	x0, x0, #0x478
  408ba0:	ldr	x0, [x0]
  408ba4:	mov	w2, #0x0                   	// #0
  408ba8:	mov	x1, x0
  408bac:	ldr	x0, [sp, #40]
  408bb0:	bl	40d630 <wcrtomb@plt+0xa840>
  408bb4:	mov	x1, x0
  408bb8:	ldr	x0, [sp, #32]
  408bbc:	str	x1, [x0, #184]
  408bc0:	ldr	x0, [sp, #32]
  408bc4:	ldr	x0, [x0, #184]
  408bc8:	cmp	x0, #0x0
  408bcc:	b.ne	408c44 <wcrtomb@plt+0x5e54>  // b.any
  408bd0:	bl	402d40 <__errno_location@plt>
  408bd4:	ldr	w0, [x0]
  408bd8:	bl	402a50 <strerror@plt>
  408bdc:	str	x0, [sp, #104]
  408be0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408be4:	add	x0, x0, #0x508
  408be8:	ldr	x19, [x0]
  408bec:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  408bf0:	add	x0, x0, #0x248
  408bf4:	bl	402d80 <gettext@plt>
  408bf8:	mov	x1, x0
  408bfc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408c00:	add	x0, x0, #0x7a0
  408c04:	ldr	x0, [x0]
  408c08:	ldr	x4, [sp, #104]
  408c0c:	ldr	x3, [sp, #40]
  408c10:	mov	x2, x0
  408c14:	mov	x0, x19
  408c18:	bl	402db0 <fprintf@plt>
  408c1c:	ldr	x0, [sp, #32]
  408c20:	adrp	x1, 408000 <wcrtomb@plt+0x5210>
  408c24:	add	x1, x1, #0x4fc
  408c28:	str	x1, [x0, #32]
  408c2c:	ldr	x0, [sp, #32]
  408c30:	ldr	x0, [x0, #8]
  408c34:	add	x1, x0, #0x1
  408c38:	ldr	x0, [sp, #32]
  408c3c:	str	x1, [x0, #8]
  408c40:	b	408e60 <wcrtomb@plt+0x6070>
  408c44:	ldr	x0, [sp, #32]
  408c48:	adrp	x1, 408000 <wcrtomb@plt+0x5210>
  408c4c:	add	x1, x1, #0x510
  408c50:	str	x1, [x0, #32]
  408c54:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408c58:	add	x0, x0, #0x768
  408c5c:	ldr	x0, [x0]
  408c60:	cmp	x0, #0x0
  408c64:	b.eq	408e0c <wcrtomb@plt+0x601c>  // b.none
  408c68:	str	wzr, [sp, #100]
  408c6c:	str	xzr, [sp, #64]
  408c70:	ldr	x0, [sp, #32]
  408c74:	ldr	x0, [x0, #48]
  408c78:	bl	41ba7c <wcrtomb@plt+0x18c8c>
  408c7c:	str	x0, [sp, #88]
  408c80:	mov	w1, #0x2f                  	// #47
  408c84:	ldr	x0, [sp, #88]
  408c88:	bl	402a60 <strrchr@plt>
  408c8c:	str	x0, [sp, #80]
  408c90:	ldr	x0, [sp, #80]
  408c94:	cmp	x0, #0x0
  408c98:	b.eq	408ca8 <wcrtomb@plt+0x5eb8>  // b.none
  408c9c:	ldr	x0, [sp, #80]
  408ca0:	strb	wzr, [x0]
  408ca4:	b	408cb4 <wcrtomb@plt+0x5ec4>
  408ca8:	ldr	x0, [sp, #88]
  408cac:	mov	w1, #0x2e                  	// #46
  408cb0:	strh	w1, [x0]
  408cb4:	ldr	x0, [sp, #32]
  408cb8:	ldr	x0, [x0, #184]
  408cbc:	bl	402810 <fileno@plt>
  408cc0:	bl	402c40 <isatty@plt>
  408cc4:	cmp	w0, #0x0
  408cc8:	b.eq	408cf0 <wcrtomb@plt+0x5f00>  // b.none
  408ccc:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  408cd0:	add	x0, x0, #0x260
  408cd4:	bl	402d80 <gettext@plt>
  408cd8:	mov	x2, x0
  408cdc:	ldr	x0, [sp, #32]
  408ce0:	ldr	x0, [x0, #48]
  408ce4:	mov	x1, x0
  408ce8:	mov	x0, x2
  408cec:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  408cf0:	ldr	x0, [sp, #32]
  408cf4:	ldr	x0, [x0, #184]
  408cf8:	bl	402810 <fileno@plt>
  408cfc:	str	w0, [sp, #76]
  408d00:	ldr	x0, [sp, #32]
  408d04:	add	x0, x0, #0x38
  408d08:	mov	x1, x0
  408d0c:	ldr	w0, [sp, #76]
  408d10:	bl	434870 <_obstack_memory_used@@Base+0x18690>
  408d14:	ldr	x0, [sp, #32]
  408d18:	ldr	w0, [x0, #72]
  408d1c:	and	w0, w0, #0xf000
  408d20:	cmp	w0, #0x8, lsl #12
  408d24:	b.eq	408d4c <wcrtomb@plt+0x5f5c>  // b.none
  408d28:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  408d2c:	add	x0, x0, #0x280
  408d30:	bl	402d80 <gettext@plt>
  408d34:	mov	x2, x0
  408d38:	ldr	x0, [sp, #32]
  408d3c:	ldr	x0, [x0, #48]
  408d40:	mov	x1, x0
  408d44:	mov	x0, x2
  408d48:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  408d4c:	ldr	x0, [sp, #32]
  408d50:	add	x4, x0, #0x28
  408d54:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408d58:	add	x0, x0, #0x480
  408d5c:	ldr	x0, [x0]
  408d60:	mov	x3, x0
  408d64:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  408d68:	add	x2, x0, #0x2a8
  408d6c:	ldr	x1, [sp, #88]
  408d70:	mov	x0, x4
  408d74:	bl	40d754 <wcrtomb@plt+0xa964>
  408d78:	mov	x1, x0
  408d7c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408d80:	add	x0, x0, #0x638
  408d84:	str	x1, [x0, #16]
  408d88:	ldr	x0, [sp, #32]
  408d8c:	ldr	x0, [x0, #40]
  408d90:	bl	40c874 <wcrtomb@plt+0x9a84>
  408d94:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408d98:	add	x0, x0, #0x638
  408d9c:	strb	wzr, [x0, #8]
  408da0:	ldr	x0, [sp, #88]
  408da4:	bl	402b60 <free@plt>
  408da8:	ldr	w0, [sp, #100]
  408dac:	cmp	w0, #0x0
  408db0:	b.eq	408dc4 <wcrtomb@plt+0x5fd4>  // b.none
  408db4:	ldr	x0, [sp, #64]
  408db8:	bl	41abb4 <wcrtomb@plt+0x17dc4>
  408dbc:	ldr	x0, [sp, #64]
  408dc0:	bl	41ab78 <wcrtomb@plt+0x17d88>
  408dc4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408dc8:	add	x0, x0, #0x638
  408dcc:	ldr	x0, [x0, #16]
  408dd0:	cmp	x0, #0x0
  408dd4:	b.ne	408e60 <wcrtomb@plt+0x6070>  // b.any
  408dd8:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  408ddc:	add	x0, x0, #0x2b0
  408de0:	bl	402d80 <gettext@plt>
  408de4:	mov	x20, x0
  408de8:	ldr	x0, [sp, #32]
  408dec:	ldr	x19, [x0, #40]
  408df0:	bl	402d40 <__errno_location@plt>
  408df4:	ldr	w0, [x0]
  408df8:	bl	402a50 <strerror@plt>
  408dfc:	mov	x2, x0
  408e00:	mov	x1, x19
  408e04:	mov	x0, x20
  408e08:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  408e0c:	ldr	x0, [sp, #32]
  408e10:	ldr	x0, [x0, #184]
  408e14:	cmp	x0, #0x0
  408e18:	b.eq	408e48 <wcrtomb@plt+0x6058>  // b.none
  408e1c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408e20:	add	x0, x0, #0x75c
  408e24:	ldrb	w0, [x0]
  408e28:	cmp	w0, #0x0
  408e2c:	b.eq	408e48 <wcrtomb@plt+0x6058>  // b.none
  408e30:	ldr	x0, [sp, #32]
  408e34:	ldr	x0, [x0, #184]
  408e38:	mov	x3, #0x0                   	// #0
  408e3c:	mov	w2, #0x2                   	// #2
  408e40:	mov	x1, #0x0                   	// #0
  408e44:	bl	4027e0 <setvbuf@plt>
  408e48:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408e4c:	add	x0, x0, #0x520
  408e50:	ldr	x1, [x0]
  408e54:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408e58:	add	x0, x0, #0x638
  408e5c:	str	x1, [x0, #16]
  408e60:	ldp	x19, x20, [sp, #16]
  408e64:	ldp	x29, x30, [sp], #112
  408e68:	ret
  408e6c:	stp	x29, x30, [sp, #-64]!
  408e70:	mov	x29, sp
  408e74:	str	x0, [sp, #24]
  408e78:	ldr	x0, [sp, #24]
  408e7c:	adrp	x1, 408000 <wcrtomb@plt+0x5210>
  408e80:	add	x1, x1, #0x4fc
  408e84:	str	x1, [x0, #32]
  408e88:	ldr	x0, [sp, #24]
  408e8c:	ldr	x0, [x0, #184]
  408e90:	cmp	x0, #0x0
  408e94:	b.eq	409018 <wcrtomb@plt+0x6228>  // b.none
  408e98:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408e9c:	add	x0, x0, #0x768
  408ea0:	ldr	x0, [x0]
  408ea4:	cmp	x0, #0x0
  408ea8:	b.eq	409000 <wcrtomb@plt+0x6210>  // b.none
  408eac:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408eb0:	add	x0, x0, #0x638
  408eb4:	ldr	x0, [x0, #16]
  408eb8:	cmp	x0, #0x0
  408ebc:	b.eq	409000 <wcrtomb@plt+0x6210>  // b.none
  408ec0:	ldr	x0, [sp, #24]
  408ec4:	ldr	x0, [x0, #48]
  408ec8:	str	x0, [sp, #56]
  408ecc:	ldr	x0, [sp, #24]
  408ed0:	ldr	x0, [x0, #184]
  408ed4:	bl	402810 <fileno@plt>
  408ed8:	str	w0, [sp, #52]
  408edc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408ee0:	add	x0, x0, #0x638
  408ee4:	ldr	x0, [x0, #16]
  408ee8:	bl	402810 <fileno@plt>
  408eec:	str	w0, [sp, #48]
  408ef0:	ldr	x0, [sp, #24]
  408ef4:	ldr	w1, [x0, #80]
  408ef8:	ldr	x0, [sp, #24]
  408efc:	ldr	w0, [x0, #84]
  408f00:	mov	w2, w0
  408f04:	ldr	w0, [sp, #48]
  408f08:	bl	402d90 <fchown@plt>
  408f0c:	cmn	w0, #0x1
  408f10:	b.ne	408f30 <wcrtomb@plt+0x6140>  // b.any
  408f14:	ldr	x0, [sp, #24]
  408f18:	ldr	w0, [x0, #84]
  408f1c:	mov	w2, w0
  408f20:	mov	w1, #0xffffffff            	// #-1
  408f24:	ldr	w0, [sp, #48]
  408f28:	bl	402d90 <fchown@plt>
  408f2c:	str	w0, [sp, #44]
  408f30:	ldr	x0, [sp, #24]
  408f34:	ldr	x5, [x0, #48]
  408f38:	ldr	x0, [sp, #24]
  408f3c:	ldr	x1, [x0, #40]
  408f40:	ldr	x0, [sp, #24]
  408f44:	ldr	w0, [x0, #72]
  408f48:	mov	w4, w0
  408f4c:	ldr	w3, [sp, #48]
  408f50:	mov	x2, x1
  408f54:	ldr	w1, [sp, #52]
  408f58:	mov	x0, x5
  408f5c:	bl	40e37c <wcrtomb@plt+0xb58c>
  408f60:	ldr	x0, [sp, #24]
  408f64:	ldr	x0, [x0, #184]
  408f68:	bl	40dae4 <wcrtomb@plt+0xacf4>
  408f6c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408f70:	add	x0, x0, #0x638
  408f74:	ldr	x0, [x0, #16]
  408f78:	bl	40dae4 <wcrtomb@plt+0xacf4>
  408f7c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  408f80:	add	x0, x0, #0x768
  408f84:	ldr	x2, [x0]
  408f88:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  408f8c:	add	x1, x0, #0x2d8
  408f90:	mov	x0, x2
  408f94:	bl	402b30 <strcmp@plt>
  408f98:	cmp	w0, #0x0
  408f9c:	b.eq	408fcc <wcrtomb@plt+0x61dc>  // b.none
  408fa0:	ldr	x0, [sp, #56]
  408fa4:	bl	408984 <wcrtomb@plt+0x5b94>
  408fa8:	str	x0, [sp, #32]
  408fac:	ldr	x0, [sp, #24]
  408fb0:	ldr	x0, [x0, #40]
  408fb4:	mov	x2, x0
  408fb8:	ldr	x1, [sp, #32]
  408fbc:	ldr	x0, [sp, #56]
  408fc0:	bl	40e004 <wcrtomb@plt+0xb214>
  408fc4:	ldr	x0, [sp, #32]
  408fc8:	bl	402b60 <free@plt>
  408fcc:	ldr	x0, [sp, #24]
  408fd0:	ldr	x3, [x0, #40]
  408fd4:	ldr	x0, [sp, #24]
  408fd8:	ldr	x0, [x0, #40]
  408fdc:	mov	x2, x0
  408fe0:	ldr	x1, [sp, #56]
  408fe4:	mov	x0, x3
  408fe8:	bl	40e004 <wcrtomb@plt+0xb214>
  408fec:	bl	40c898 <wcrtomb@plt+0x9aa8>
  408ff0:	ldr	x0, [sp, #24]
  408ff4:	ldr	x0, [x0, #40]
  408ff8:	bl	402b60 <free@plt>
  408ffc:	b	40900c <wcrtomb@plt+0x621c>
  409000:	ldr	x0, [sp, #24]
  409004:	ldr	x0, [x0, #184]
  409008:	bl	40dae4 <wcrtomb@plt+0xacf4>
  40900c:	ldr	x0, [sp, #24]
  409010:	str	xzr, [x0, #184]
  409014:	b	40901c <wcrtomb@plt+0x622c>
  409018:	nop
  40901c:	ldp	x29, x30, [sp], #64
  409020:	ret
  409024:	sub	sp, sp, #0x20
  409028:	str	x0, [sp, #8]
  40902c:	ldr	x0, [sp, #8]
  409030:	ldr	x0, [x0]
  409034:	str	x0, [sp, #24]
  409038:	ldr	x0, [sp, #8]
  40903c:	ldr	x0, [x0, #16]
  409040:	str	w0, [sp, #20]
  409044:	b	4090a4 <wcrtomb@plt+0x62b4>
  409048:	ldr	x0, [sp, #24]
  40904c:	ldr	x0, [x0]
  409050:	cmp	x0, #0x0
  409054:	b.eq	409090 <wcrtomb@plt+0x62a0>  // b.none
  409058:	ldr	x0, [sp, #24]
  40905c:	ldr	x0, [x0]
  409060:	ldr	w0, [x0]
  409064:	cmp	w0, #0x2
  409068:	b.ne	409090 <wcrtomb@plt+0x62a0>  // b.any
  40906c:	ldr	x0, [sp, #24]
  409070:	ldr	x0, [x0]
  409074:	ldr	x0, [x0, #8]
  409078:	cmp	x0, #0x0
  40907c:	b.ne	409090 <wcrtomb@plt+0x62a0>  // b.any
  409080:	ldr	x0, [sp, #24]
  409084:	mov	w1, #0x1                   	// #1
  409088:	str	w1, [x0, #16]
  40908c:	b	409098 <wcrtomb@plt+0x62a8>
  409090:	ldr	x0, [sp, #24]
  409094:	str	wzr, [x0, #16]
  409098:	ldr	x0, [sp, #24]
  40909c:	add	x0, x0, #0x28
  4090a0:	str	x0, [sp, #24]
  4090a4:	ldr	w0, [sp, #20]
  4090a8:	sub	w1, w0, #0x1
  4090ac:	str	w1, [sp, #20]
  4090b0:	cmp	w0, #0x0
  4090b4:	b.ne	409048 <wcrtomb@plt+0x6258>  // b.any
  4090b8:	nop
  4090bc:	nop
  4090c0:	add	sp, sp, #0x20
  4090c4:	ret
  4090c8:	stp	x29, x30, [sp, #-48]!
  4090cc:	mov	x29, sp
  4090d0:	str	x0, [sp, #40]
  4090d4:	str	x1, [sp, #32]
  4090d8:	str	w2, [sp, #28]
  4090dc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4090e0:	add	x0, x0, #0x718
  4090e4:	ldr	x0, [x0]
  4090e8:	cmp	x0, #0x0
  4090ec:	b.eq	4090f4 <wcrtomb@plt+0x6304>  // b.none
  4090f0:	bl	408840 <wcrtomb@plt+0x5a50>
  4090f4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4090f8:	add	x0, x0, #0x630
  4090fc:	strb	wzr, [x0]
  409100:	ldr	w0, [sp, #28]
  409104:	cmp	w0, #0x0
  409108:	b.ne	409118 <wcrtomb@plt+0x6328>  // b.any
  40910c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409110:	add	x0, x0, #0x658
  409114:	str	xzr, [x0, #16]
  409118:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40911c:	add	x0, x0, #0x658
  409120:	mov	w1, #0x1                   	// #1
  409124:	strb	w1, [x0, #32]
  409128:	b	4091d4 <wcrtomb@plt+0x63e4>
  40912c:	ldr	x0, [sp, #40]
  409130:	bl	408e6c <wcrtomb@plt+0x607c>
  409134:	ldr	x0, [sp, #40]
  409138:	ldr	x0, [x0]
  40913c:	ldr	x0, [x0]
  409140:	cmp	x0, #0x0
  409144:	b.ne	409150 <wcrtomb@plt+0x6360>  // b.any
  409148:	mov	w0, #0x0                   	// #0
  40914c:	b	409210 <wcrtomb@plt+0x6420>
  409150:	ldr	x0, [sp, #40]
  409154:	ldrb	w0, [x0, #24]
  409158:	cmp	w0, #0x0
  40915c:	b.eq	4091b4 <wcrtomb@plt+0x63c4>  // b.none
  409160:	ldr	x0, [sp, #40]
  409164:	str	xzr, [x0, #16]
  409168:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40916c:	add	x0, x0, #0x6b8
  409170:	str	xzr, [x0, #16]
  409174:	ldr	x0, [sp, #32]
  409178:	bl	409024 <wcrtomb@plt+0x6234>
  40917c:	bl	406b60 <wcrtomb@plt+0x3d70>
  409180:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409184:	add	x0, x0, #0x768
  409188:	ldr	x0, [x0]
  40918c:	cmp	x0, #0x0
  409190:	b.eq	4091a0 <wcrtomb@plt+0x63b0>  // b.none
  409194:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409198:	add	x0, x0, #0x638
  40919c:	strb	wzr, [x0, #8]
  4091a0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4091a4:	add	x0, x0, #0x75e
  4091a8:	ldrb	w1, [x0]
  4091ac:	ldr	x0, [sp, #40]
  4091b0:	strb	w1, [x0, #24]
  4091b4:	ldr	x0, [sp, #40]
  4091b8:	ldr	x0, [x0]
  4091bc:	add	x2, x0, #0x8
  4091c0:	ldr	x1, [sp, #40]
  4091c4:	str	x2, [x1]
  4091c8:	ldr	x0, [x0]
  4091cc:	ldr	x1, [sp, #40]
  4091d0:	bl	408ae4 <wcrtomb@plt+0x5cf4>
  4091d4:	ldr	x0, [sp, #40]
  4091d8:	ldr	x1, [x0, #32]
  4091dc:	ldr	x0, [sp, #40]
  4091e0:	blr	x1
  4091e4:	and	w0, w0, #0xff
  4091e8:	eor	w0, w0, #0x1
  4091ec:	and	w0, w0, #0xff
  4091f0:	cmp	w0, #0x0
  4091f4:	b.ne	40912c <wcrtomb@plt+0x633c>  // b.any
  4091f8:	ldr	x0, [sp, #40]
  4091fc:	ldr	x0, [x0, #16]
  409200:	add	x1, x0, #0x1
  409204:	ldr	x0, [sp, #40]
  409208:	str	x1, [x0, #16]
  40920c:	mov	w0, #0x1                   	// #1
  409210:	ldp	x29, x30, [sp], #48
  409214:	ret
  409218:	stp	x29, x30, [sp, #-48]!
  40921c:	mov	x29, sp
  409220:	str	x0, [sp, #24]
  409224:	ldr	x0, [sp, #24]
  409228:	bl	408e6c <wcrtomb@plt+0x607c>
  40922c:	ldr	x0, [sp, #24]
  409230:	ldr	x0, [x0]
  409234:	ldr	x0, [x0]
  409238:	cmp	x0, #0x0
  40923c:	b.ne	409248 <wcrtomb@plt+0x6458>  // b.any
  409240:	mov	w0, #0x1                   	// #1
  409244:	b	4092ac <wcrtomb@plt+0x64bc>
  409248:	ldr	x0, [sp, #24]
  40924c:	ldr	x0, [x0]
  409250:	add	x2, x0, #0x8
  409254:	ldr	x1, [sp, #24]
  409258:	str	x2, [x1]
  40925c:	ldr	x0, [x0]
  409260:	ldr	x1, [sp, #24]
  409264:	bl	408ae4 <wcrtomb@plt+0x5cf4>
  409268:	ldr	x0, [sp, #24]
  40926c:	ldr	x0, [x0, #184]
  409270:	cmp	x0, #0x0
  409274:	b.eq	409224 <wcrtomb@plt+0x6434>  // b.none
  409278:	ldr	x0, [sp, #24]
  40927c:	ldr	x0, [x0, #184]
  409280:	bl	402a40 <getc_unlocked@plt>
  409284:	str	w0, [sp, #44]
  409288:	ldr	w0, [sp, #44]
  40928c:	cmn	w0, #0x1
  409290:	b.eq	409224 <wcrtomb@plt+0x6434>  // b.none
  409294:	ldr	x0, [sp, #24]
  409298:	ldr	x0, [x0, #184]
  40929c:	mov	x1, x0
  4092a0:	ldr	w0, [sp, #44]
  4092a4:	bl	402b70 <ungetc@plt>
  4092a8:	mov	w0, #0x0                   	// #0
  4092ac:	ldp	x29, x30, [sp], #48
  4092b0:	ret
  4092b4:	stp	x29, x30, [sp, #-48]!
  4092b8:	mov	x29, sp
  4092bc:	str	x0, [sp, #24]
  4092c0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4092c4:	add	x0, x0, #0x6e8
  4092c8:	ldr	x0, [x0, #16]
  4092cc:	cmp	x0, #0x0
  4092d0:	b.eq	4092dc <wcrtomb@plt+0x64ec>  // b.none
  4092d4:	mov	w0, #0x0                   	// #0
  4092d8:	b	4093f4 <wcrtomb@plt+0x6604>
  4092dc:	ldr	x0, [sp, #24]
  4092e0:	ldr	x0, [x0, #184]
  4092e4:	cmp	x0, #0x0
  4092e8:	b.ne	40932c <wcrtomb@plt+0x653c>  // b.any
  4092ec:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4092f0:	add	x0, x0, #0x75e
  4092f4:	ldrb	w0, [x0]
  4092f8:	cmp	w0, #0x0
  4092fc:	b.ne	409314 <wcrtomb@plt+0x6524>  // b.any
  409300:	ldr	x0, [sp, #24]
  409304:	bl	409218 <wcrtomb@plt+0x6428>
  409308:	and	w0, w0, #0xff
  40930c:	cmp	w0, #0x0
  409310:	b.eq	40931c <wcrtomb@plt+0x652c>  // b.none
  409314:	mov	w0, #0x1                   	// #1
  409318:	b	409320 <wcrtomb@plt+0x6530>
  40931c:	mov	w0, #0x0                   	// #0
  409320:	and	w0, w0, #0x1
  409324:	and	w0, w0, #0xff
  409328:	b	4093f4 <wcrtomb@plt+0x6604>
  40932c:	ldr	x0, [sp, #24]
  409330:	ldr	x0, [x0, #184]
  409334:	bl	402bb0 <feof_unlocked@plt>
  409338:	cmp	w0, #0x0
  40933c:	b.eq	409380 <wcrtomb@plt+0x6590>  // b.none
  409340:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409344:	add	x0, x0, #0x75e
  409348:	ldrb	w0, [x0]
  40934c:	cmp	w0, #0x0
  409350:	b.ne	409368 <wcrtomb@plt+0x6578>  // b.any
  409354:	ldr	x0, [sp, #24]
  409358:	bl	409218 <wcrtomb@plt+0x6428>
  40935c:	and	w0, w0, #0xff
  409360:	cmp	w0, #0x0
  409364:	b.eq	409370 <wcrtomb@plt+0x6580>  // b.none
  409368:	mov	w0, #0x1                   	// #1
  40936c:	b	409374 <wcrtomb@plt+0x6584>
  409370:	mov	w0, #0x0                   	// #0
  409374:	and	w0, w0, #0x1
  409378:	and	w0, w0, #0xff
  40937c:	b	4093f4 <wcrtomb@plt+0x6604>
  409380:	ldr	x0, [sp, #24]
  409384:	ldr	x0, [x0, #184]
  409388:	bl	402a40 <getc_unlocked@plt>
  40938c:	str	w0, [sp, #44]
  409390:	ldr	w0, [sp, #44]
  409394:	cmn	w0, #0x1
  409398:	b.ne	4093dc <wcrtomb@plt+0x65ec>  // b.any
  40939c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4093a0:	add	x0, x0, #0x75e
  4093a4:	ldrb	w0, [x0]
  4093a8:	cmp	w0, #0x0
  4093ac:	b.ne	4093c4 <wcrtomb@plt+0x65d4>  // b.any
  4093b0:	ldr	x0, [sp, #24]
  4093b4:	bl	409218 <wcrtomb@plt+0x6428>
  4093b8:	and	w0, w0, #0xff
  4093bc:	cmp	w0, #0x0
  4093c0:	b.eq	4093cc <wcrtomb@plt+0x65dc>  // b.none
  4093c4:	mov	w0, #0x1                   	// #1
  4093c8:	b	4093d0 <wcrtomb@plt+0x65e0>
  4093cc:	mov	w0, #0x0                   	// #0
  4093d0:	and	w0, w0, #0x1
  4093d4:	and	w0, w0, #0xff
  4093d8:	b	4093f4 <wcrtomb@plt+0x6604>
  4093dc:	ldr	x0, [sp, #24]
  4093e0:	ldr	x0, [x0, #184]
  4093e4:	mov	x1, x0
  4093e8:	ldr	w0, [sp, #44]
  4093ec:	bl	402b70 <ungetc@plt>
  4093f0:	mov	w0, #0x0                   	// #0
  4093f4:	ldp	x29, x30, [sp], #48
  4093f8:	ret
  4093fc:	stp	x29, x30, [sp, #-32]!
  409400:	mov	x29, sp
  409404:	str	x0, [sp, #24]
  409408:	str	x1, [sp, #16]
  40940c:	ldr	x0, [sp, #24]
  409410:	ldr	w0, [x0]
  409414:	cmp	w0, #0x6
  409418:	b.eq	409538 <wcrtomb@plt+0x6748>  // b.none
  40941c:	cmp	w0, #0x6
  409420:	b.hi	409568 <wcrtomb@plt+0x6778>  // b.pmore
  409424:	cmp	w0, #0x5
  409428:	b.hi	409568 <wcrtomb@plt+0x6778>  // b.pmore
  40942c:	cmp	w0, #0x4
  409430:	b.cs	409518 <wcrtomb@plt+0x6728>  // b.hs, b.nlast
  409434:	cmp	w0, #0x3
  409438:	b.eq	4094b8 <wcrtomb@plt+0x66c8>  // b.none
  40943c:	cmp	w0, #0x3
  409440:	b.hi	409568 <wcrtomb@plt+0x6778>  // b.pmore
  409444:	cmp	w0, #0x2
  409448:	b.eq	409548 <wcrtomb@plt+0x6758>  // b.none
  40944c:	cmp	w0, #0x2
  409450:	b.hi	409568 <wcrtomb@plt+0x6778>  // b.pmore
  409454:	cmp	w0, #0x0
  409458:	b.eq	409468 <wcrtomb@plt+0x6678>  // b.none
  40945c:	cmp	w0, #0x1
  409460:	b.eq	409470 <wcrtomb@plt+0x6680>  // b.none
  409464:	b	409568 <wcrtomb@plt+0x6778>
  409468:	mov	w0, #0x1                   	// #1
  40946c:	b	409574 <wcrtomb@plt+0x6784>
  409470:	ldr	x0, [sp, #24]
  409474:	ldr	x6, [x0, #24]
  409478:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40947c:	add	x0, x0, #0x658
  409480:	ldr	x1, [x0, #8]
  409484:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409488:	add	x0, x0, #0x658
  40948c:	ldr	x0, [x0, #16]
  409490:	mov	w5, #0x0                   	// #0
  409494:	mov	x4, #0x0                   	// #0
  409498:	mov	x3, #0x0                   	// #0
  40949c:	mov	x2, x0
  4094a0:	mov	x0, x6
  4094a4:	bl	40c0bc <wcrtomb@plt+0x92cc>
  4094a8:	cmp	w0, #0x0
  4094ac:	cset	w0, ne  // ne = any
  4094b0:	and	w0, w0, #0xff
  4094b4:	b	409574 <wcrtomb@plt+0x6784>
  4094b8:	ldr	x0, [sp, #16]
  4094bc:	ldr	x1, [x0, #16]
  4094c0:	ldr	x0, [sp, #24]
  4094c4:	ldr	x0, [x0, #8]
  4094c8:	cmp	x1, x0
  4094cc:	b.cc	409508 <wcrtomb@plt+0x6718>  // b.lo, b.ul, b.last
  4094d0:	ldr	x0, [sp, #16]
  4094d4:	ldr	x1, [x0, #16]
  4094d8:	ldr	x0, [sp, #24]
  4094dc:	ldr	x0, [x0, #8]
  4094e0:	sub	x0, x1, x0
  4094e4:	ldr	x1, [sp, #24]
  4094e8:	ldr	x1, [x1, #16]
  4094ec:	udiv	x2, x0, x1
  4094f0:	mul	x1, x2, x1
  4094f4:	sub	x0, x0, x1
  4094f8:	cmp	x0, #0x0
  4094fc:	b.ne	409508 <wcrtomb@plt+0x6718>  // b.any
  409500:	mov	w0, #0x1                   	// #1
  409504:	b	40950c <wcrtomb@plt+0x671c>
  409508:	mov	w0, #0x0                   	// #0
  40950c:	and	w0, w0, #0x1
  409510:	and	w0, w0, #0xff
  409514:	b	409574 <wcrtomb@plt+0x6784>
  409518:	ldr	x0, [sp, #24]
  40951c:	ldr	x1, [x0, #8]
  409520:	ldr	x0, [sp, #16]
  409524:	ldr	x0, [x0, #16]
  409528:	cmp	x1, x0
  40952c:	cset	w0, ls  // ls = plast
  409530:	and	w0, w0, #0xff
  409534:	b	409574 <wcrtomb@plt+0x6784>
  409538:	ldr	x0, [sp, #16]
  40953c:	bl	4092b4 <wcrtomb@plt+0x64c4>
  409540:	and	w0, w0, #0xff
  409544:	b	409574 <wcrtomb@plt+0x6784>
  409548:	ldr	x0, [sp, #24]
  40954c:	ldr	x1, [x0, #8]
  409550:	ldr	x0, [sp, #16]
  409554:	ldr	x0, [x0, #16]
  409558:	cmp	x1, x0
  40955c:	cset	w0, eq  // eq = none
  409560:	and	w0, w0, #0xff
  409564:	b	409574 <wcrtomb@plt+0x6784>
  409568:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40956c:	add	x0, x0, #0x2e0
  409570:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  409574:	ldp	x29, x30, [sp], #32
  409578:	ret
  40957c:	stp	x29, x30, [sp, #-32]!
  409580:	mov	x29, sp
  409584:	str	x0, [sp, #24]
  409588:	str	x1, [sp, #16]
  40958c:	ldr	x0, [sp, #24]
  409590:	ldr	x0, [x0]
  409594:	cmp	x0, #0x0
  409598:	b.ne	4095a4 <wcrtomb@plt+0x67b4>  // b.any
  40959c:	mov	w0, #0x1                   	// #1
  4095a0:	b	409830 <wcrtomb@plt+0x6a40>
  4095a4:	ldr	x0, [sp, #24]
  4095a8:	ldr	w0, [x0, #16]
  4095ac:	cmp	w0, #0x1
  4095b0:	b.eq	409798 <wcrtomb@plt+0x69a8>  // b.none
  4095b4:	ldr	x0, [sp, #24]
  4095b8:	ldr	x0, [x0, #8]
  4095bc:	cmp	x0, #0x0
  4095c0:	b.ne	4095dc <wcrtomb@plt+0x67ec>  // b.any
  4095c4:	ldr	x0, [sp, #24]
  4095c8:	ldr	x0, [x0]
  4095cc:	ldr	x1, [sp, #16]
  4095d0:	bl	4093fc <wcrtomb@plt+0x660c>
  4095d4:	and	w0, w0, #0xff
  4095d8:	b	409830 <wcrtomb@plt+0x6a40>
  4095dc:	ldr	x0, [sp, #24]
  4095e0:	ldr	x0, [x0]
  4095e4:	ldr	w0, [x0]
  4095e8:	cmp	w0, #0x2
  4095ec:	b.ne	409624 <wcrtomb@plt+0x6834>  // b.any
  4095f0:	ldr	x0, [sp, #24]
  4095f4:	ldr	w0, [x0, #16]
  4095f8:	cmp	w0, #0x2
  4095fc:	b.eq	40961c <wcrtomb@plt+0x682c>  // b.none
  409600:	ldr	x0, [sp, #16]
  409604:	ldr	x1, [x0, #16]
  409608:	ldr	x0, [sp, #24]
  40960c:	ldr	x0, [x0]
  409610:	ldr	x0, [x0, #8]
  409614:	cmp	x1, x0
  409618:	b.cs	409650 <wcrtomb@plt+0x6860>  // b.hs, b.nlast
  40961c:	mov	w0, #0x0                   	// #0
  409620:	b	409830 <wcrtomb@plt+0x6a40>
  409624:	ldr	x0, [sp, #24]
  409628:	ldr	x0, [x0]
  40962c:	ldr	x1, [sp, #16]
  409630:	bl	4093fc <wcrtomb@plt+0x660c>
  409634:	and	w0, w0, #0xff
  409638:	eor	w0, w0, #0x1
  40963c:	and	w0, w0, #0xff
  409640:	cmp	w0, #0x0
  409644:	b.eq	409650 <wcrtomb@plt+0x6860>  // b.none
  409648:	mov	w0, #0x0                   	// #0
  40964c:	b	409830 <wcrtomb@plt+0x6a40>
  409650:	ldr	x0, [sp, #24]
  409654:	mov	w1, #0x1                   	// #1
  409658:	str	w1, [x0, #16]
  40965c:	ldr	x0, [sp, #24]
  409660:	ldr	x0, [x0, #8]
  409664:	ldr	w0, [x0]
  409668:	cmp	w0, #0x5
  40966c:	b.eq	409748 <wcrtomb@plt+0x6958>  // b.none
  409670:	cmp	w0, #0x5
  409674:	b.hi	4097a0 <wcrtomb@plt+0x69b0>  // b.pmore
  409678:	cmp	w0, #0x4
  40967c:	b.eq	40971c <wcrtomb@plt+0x692c>  // b.none
  409680:	cmp	w0, #0x4
  409684:	b.hi	4097a0 <wcrtomb@plt+0x69b0>  // b.pmore
  409688:	cmp	w0, #0x1
  40968c:	b.eq	40969c <wcrtomb@plt+0x68ac>  // b.none
  409690:	cmp	w0, #0x2
  409694:	b.eq	4096a4 <wcrtomb@plt+0x68b4>  // b.none
  409698:	b	4097a0 <wcrtomb@plt+0x69b0>
  40969c:	mov	w0, #0x1                   	// #1
  4096a0:	b	409830 <wcrtomb@plt+0x6a40>
  4096a4:	ldr	x0, [sp, #16]
  4096a8:	ldr	x1, [x0, #16]
  4096ac:	ldr	x0, [sp, #24]
  4096b0:	ldr	x0, [x0, #8]
  4096b4:	ldr	x0, [x0, #8]
  4096b8:	cmp	x1, x0
  4096bc:	b.cc	4096cc <wcrtomb@plt+0x68dc>  // b.lo, b.ul, b.last
  4096c0:	ldr	x0, [sp, #24]
  4096c4:	mov	w1, #0x2                   	// #2
  4096c8:	str	w1, [x0, #16]
  4096cc:	ldr	x0, [sp, #16]
  4096d0:	ldr	x1, [x0, #16]
  4096d4:	ldr	x0, [sp, #24]
  4096d8:	ldr	x0, [x0, #8]
  4096dc:	ldr	x0, [x0, #8]
  4096e0:	cmp	x1, x0
  4096e4:	b.ls	409704 <wcrtomb@plt+0x6914>  // b.plast
  4096e8:	ldr	x0, [sp, #24]
  4096ec:	ldr	x0, [x0]
  4096f0:	ldr	x1, [sp, #16]
  4096f4:	bl	4093fc <wcrtomb@plt+0x660c>
  4096f8:	and	w0, w0, #0xff
  4096fc:	cmp	w0, #0x0
  409700:	b.eq	40970c <wcrtomb@plt+0x691c>  // b.none
  409704:	mov	w0, #0x1                   	// #1
  409708:	b	409710 <wcrtomb@plt+0x6920>
  40970c:	mov	w0, #0x0                   	// #0
  409710:	and	w0, w0, #0x1
  409714:	and	w0, w0, #0xff
  409718:	b	409830 <wcrtomb@plt+0x6a40>
  40971c:	ldr	x0, [sp, #16]
  409720:	ldr	x2, [x0, #16]
  409724:	ldr	x0, [sp, #24]
  409728:	ldr	x0, [x0, #8]
  40972c:	ldr	x1, [x0, #16]
  409730:	ldr	x0, [sp, #24]
  409734:	ldr	x0, [x0, #8]
  409738:	add	x1, x2, x1
  40973c:	str	x1, [x0, #8]
  409740:	mov	w0, #0x1                   	// #1
  409744:	b	409830 <wcrtomb@plt+0x6a40>
  409748:	ldr	x0, [sp, #16]
  40974c:	ldr	x1, [x0, #16]
  409750:	ldr	x0, [sp, #24]
  409754:	ldr	x0, [x0, #8]
  409758:	ldr	x0, [x0, #16]
  40975c:	add	x2, x1, x0
  409760:	ldr	x0, [sp, #16]
  409764:	ldr	x0, [x0, #16]
  409768:	ldr	x1, [sp, #24]
  40976c:	ldr	x1, [x1, #8]
  409770:	ldr	x1, [x1, #16]
  409774:	udiv	x3, x0, x1
  409778:	mul	x1, x3, x1
  40977c:	sub	x1, x0, x1
  409780:	ldr	x0, [sp, #24]
  409784:	ldr	x0, [x0, #8]
  409788:	sub	x1, x2, x1
  40978c:	str	x1, [x0, #8]
  409790:	mov	w0, #0x1                   	// #1
  409794:	b	409830 <wcrtomb@plt+0x6a40>
  409798:	nop
  40979c:	b	4097a4 <wcrtomb@plt+0x69b4>
  4097a0:	nop
  4097a4:	ldr	x0, [sp, #24]
  4097a8:	ldr	x0, [x0, #8]
  4097ac:	ldr	w0, [x0]
  4097b0:	cmp	w0, #0x2
  4097b4:	b.ne	409804 <wcrtomb@plt+0x6a14>  // b.any
  4097b8:	ldr	x0, [sp, #16]
  4097bc:	ldr	x1, [x0, #16]
  4097c0:	ldr	x0, [sp, #24]
  4097c4:	ldr	x0, [x0, #8]
  4097c8:	ldr	x0, [x0, #8]
  4097cc:	cmp	x1, x0
  4097d0:	b.cc	4097e0 <wcrtomb@plt+0x69f0>  // b.lo, b.ul, b.last
  4097d4:	ldr	x0, [sp, #24]
  4097d8:	mov	w1, #0x2                   	// #2
  4097dc:	str	w1, [x0, #16]
  4097e0:	ldr	x0, [sp, #16]
  4097e4:	ldr	x1, [x0, #16]
  4097e8:	ldr	x0, [sp, #24]
  4097ec:	ldr	x0, [x0, #8]
  4097f0:	ldr	x0, [x0, #8]
  4097f4:	cmp	x1, x0
  4097f8:	cset	w0, ls  // ls = plast
  4097fc:	and	w0, w0, #0xff
  409800:	b	409830 <wcrtomb@plt+0x6a40>
  409804:	ldr	x0, [sp, #24]
  409808:	ldr	x0, [x0, #8]
  40980c:	ldr	x1, [sp, #16]
  409810:	bl	4093fc <wcrtomb@plt+0x660c>
  409814:	and	w0, w0, #0xff
  409818:	cmp	w0, #0x0
  40981c:	b.eq	40982c <wcrtomb@plt+0x6a3c>  // b.none
  409820:	ldr	x0, [sp, #24]
  409824:	mov	w1, #0x2                   	// #2
  409828:	str	w1, [x0, #16]
  40982c:	mov	w0, #0x1                   	// #1
  409830:	ldp	x29, x30, [sp], #32
  409834:	ret
  409838:	stp	x29, x30, [sp, #-272]!
  40983c:	mov	x29, sp
  409840:	str	w0, [sp, #28]
  409844:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409848:	add	x0, x0, #0x658
  40984c:	ldr	x0, [x0, #8]
  409850:	str	x0, [sp, #264]
  409854:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409858:	add	x0, x0, #0x658
  40985c:	ldr	x0, [x0, #16]
  409860:	str	x0, [sp, #256]
  409864:	str	xzr, [sp, #248]
  409868:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40986c:	add	x0, x0, #0x638
  409870:	ldr	x0, [x0, #16]
  409874:	str	x0, [sp, #232]
  409878:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40987c:	add	x0, x0, #0x638
  409880:	bl	4085e0 <wcrtomb@plt+0x57f0>
  409884:	b	409b08 <wcrtomb@plt+0x6d18>
  409888:	add	x0, sp, #0x28
  40988c:	str	x0, [sp, #240]
  409890:	ldr	x0, [sp, #264]
  409894:	ldrb	w0, [x0]
  409898:	and	w0, w0, #0xffffff80
  40989c:	cmp	w0, #0x0
  4098a0:	b.ne	409910 <wcrtomb@plt+0x6b20>  // b.any
  4098a4:	bl	402b40 <__ctype_b_loc@plt>
  4098a8:	ldr	x1, [x0]
  4098ac:	ldr	x0, [sp, #264]
  4098b0:	ldrb	w0, [x0]
  4098b4:	and	x0, x0, #0xff
  4098b8:	lsl	x0, x0, #1
  4098bc:	add	x0, x1, x0
  4098c0:	ldrh	w0, [x0]
  4098c4:	and	w0, w0, #0x4000
  4098c8:	cmp	w0, #0x0
  4098cc:	b.eq	409910 <wcrtomb@plt+0x6b20>  // b.none
  4098d0:	ldr	x0, [sp, #240]
  4098d4:	add	x1, x0, #0x1
  4098d8:	str	x1, [sp, #240]
  4098dc:	ldr	x1, [sp, #264]
  4098e0:	ldrb	w1, [x1]
  4098e4:	strb	w1, [x0]
  4098e8:	ldr	x0, [sp, #264]
  4098ec:	ldrb	w0, [x0]
  4098f0:	cmp	w0, #0x5c
  4098f4:	b.ne	409a70 <wcrtomb@plt+0x6c80>  // b.any
  4098f8:	ldr	x0, [sp, #240]
  4098fc:	add	x1, x0, #0x1
  409900:	str	x1, [sp, #240]
  409904:	mov	w1, #0x5c                  	// #92
  409908:	strb	w1, [x0]
  40990c:	b	409a70 <wcrtomb@plt+0x6c80>
  409910:	ldr	x0, [sp, #240]
  409914:	add	x1, x0, #0x1
  409918:	str	x1, [sp, #240]
  40991c:	mov	w1, #0x5c                  	// #92
  409920:	strb	w1, [x0]
  409924:	ldr	x0, [sp, #264]
  409928:	ldrb	w0, [x0]
  40992c:	cmp	w0, #0xd
  409930:	b.eq	4099f0 <wcrtomb@plt+0x6c00>  // b.none
  409934:	cmp	w0, #0xd
  409938:	b.gt	409a38 <wcrtomb@plt+0x6c48>
  40993c:	cmp	w0, #0xc
  409940:	b.eq	4099c0 <wcrtomb@plt+0x6bd0>  // b.none
  409944:	cmp	w0, #0xc
  409948:	b.gt	409a38 <wcrtomb@plt+0x6c48>
  40994c:	cmp	w0, #0xb
  409950:	b.eq	409a20 <wcrtomb@plt+0x6c30>  // b.none
  409954:	cmp	w0, #0xb
  409958:	b.gt	409a38 <wcrtomb@plt+0x6c48>
  40995c:	cmp	w0, #0xa
  409960:	b.eq	4099d8 <wcrtomb@plt+0x6be8>  // b.none
  409964:	cmp	w0, #0xa
  409968:	b.gt	409a38 <wcrtomb@plt+0x6c48>
  40996c:	cmp	w0, #0x9
  409970:	b.eq	409a08 <wcrtomb@plt+0x6c18>  // b.none
  409974:	cmp	w0, #0x9
  409978:	b.gt	409a38 <wcrtomb@plt+0x6c48>
  40997c:	cmp	w0, #0x7
  409980:	b.eq	409990 <wcrtomb@plt+0x6ba0>  // b.none
  409984:	cmp	w0, #0x8
  409988:	b.eq	4099a8 <wcrtomb@plt+0x6bb8>  // b.none
  40998c:	b	409a38 <wcrtomb@plt+0x6c48>
  409990:	ldr	x0, [sp, #240]
  409994:	add	x1, x0, #0x1
  409998:	str	x1, [sp, #240]
  40999c:	mov	w1, #0x61                  	// #97
  4099a0:	strb	w1, [x0]
  4099a4:	b	409a70 <wcrtomb@plt+0x6c80>
  4099a8:	ldr	x0, [sp, #240]
  4099ac:	add	x1, x0, #0x1
  4099b0:	str	x1, [sp, #240]
  4099b4:	mov	w1, #0x62                  	// #98
  4099b8:	strb	w1, [x0]
  4099bc:	b	409a70 <wcrtomb@plt+0x6c80>
  4099c0:	ldr	x0, [sp, #240]
  4099c4:	add	x1, x0, #0x1
  4099c8:	str	x1, [sp, #240]
  4099cc:	mov	w1, #0x66                  	// #102
  4099d0:	strb	w1, [x0]
  4099d4:	b	409a70 <wcrtomb@plt+0x6c80>
  4099d8:	ldr	x0, [sp, #240]
  4099dc:	add	x1, x0, #0x1
  4099e0:	str	x1, [sp, #240]
  4099e4:	mov	w1, #0x6e                  	// #110
  4099e8:	strb	w1, [x0]
  4099ec:	b	409a70 <wcrtomb@plt+0x6c80>
  4099f0:	ldr	x0, [sp, #240]
  4099f4:	add	x1, x0, #0x1
  4099f8:	str	x1, [sp, #240]
  4099fc:	mov	w1, #0x72                  	// #114
  409a00:	strb	w1, [x0]
  409a04:	b	409a70 <wcrtomb@plt+0x6c80>
  409a08:	ldr	x0, [sp, #240]
  409a0c:	add	x1, x0, #0x1
  409a10:	str	x1, [sp, #240]
  409a14:	mov	w1, #0x74                  	// #116
  409a18:	strb	w1, [x0]
  409a1c:	b	409a70 <wcrtomb@plt+0x6c80>
  409a20:	ldr	x0, [sp, #240]
  409a24:	add	x1, x0, #0x1
  409a28:	str	x1, [sp, #240]
  409a2c:	mov	w1, #0x76                  	// #118
  409a30:	strb	w1, [x0]
  409a34:	b	409a70 <wcrtomb@plt+0x6c80>
  409a38:	ldr	x0, [sp, #264]
  409a3c:	ldrb	w0, [x0]
  409a40:	mov	w2, w0
  409a44:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  409a48:	add	x1, x0, #0x308
  409a4c:	ldr	x0, [sp, #240]
  409a50:	bl	4027b0 <sprintf@plt>
  409a54:	ldr	x0, [sp, #240]
  409a58:	bl	402720 <strlen@plt>
  409a5c:	mov	x1, x0
  409a60:	ldr	x0, [sp, #240]
  409a64:	add	x0, x0, x1
  409a68:	str	x0, [sp, #240]
  409a6c:	nop
  409a70:	add	x0, sp, #0x28
  409a74:	ldr	x1, [sp, #240]
  409a78:	sub	x0, x1, x0
  409a7c:	str	x0, [sp, #224]
  409a80:	ldr	x1, [sp, #248]
  409a84:	ldr	x0, [sp, #224]
  409a88:	add	x1, x1, x0
  409a8c:	ldrsw	x0, [sp, #28]
  409a90:	cmp	x1, x0
  409a94:	b.cc	409ad8 <wcrtomb@plt+0x6ce8>  // b.lo, b.ul, b.last
  409a98:	ldr	w0, [sp, #28]
  409a9c:	cmp	w0, #0x0
  409aa0:	b.le	409ad8 <wcrtomb@plt+0x6ce8>
  409aa4:	ldr	x3, [sp, #232]
  409aa8:	mov	x2, #0x1                   	// #1
  409aac:	mov	x1, #0x1                   	// #1
  409ab0:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  409ab4:	add	x0, x0, #0x310
  409ab8:	bl	40d840 <wcrtomb@plt+0xaa50>
  409abc:	ldr	x3, [sp, #232]
  409ac0:	mov	x2, #0x1                   	// #1
  409ac4:	mov	x1, #0x1                   	// #1
  409ac8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409acc:	add	x0, x0, #0x470
  409ad0:	bl	40d840 <wcrtomb@plt+0xaa50>
  409ad4:	str	xzr, [sp, #248]
  409ad8:	add	x0, sp, #0x28
  409adc:	ldr	x3, [sp, #232]
  409ae0:	ldr	x2, [sp, #224]
  409ae4:	mov	x1, #0x1                   	// #1
  409ae8:	bl	40d840 <wcrtomb@plt+0xaa50>
  409aec:	ldr	x1, [sp, #248]
  409af0:	ldr	x0, [sp, #224]
  409af4:	add	x0, x1, x0
  409af8:	str	x0, [sp, #248]
  409afc:	ldr	x0, [sp, #264]
  409b00:	add	x0, x0, #0x1
  409b04:	str	x0, [sp, #264]
  409b08:	ldr	x0, [sp, #256]
  409b0c:	sub	x1, x0, #0x1
  409b10:	str	x1, [sp, #256]
  409b14:	cmp	x0, #0x0
  409b18:	b.ne	409888 <wcrtomb@plt+0x6a98>  // b.any
  409b1c:	ldr	x3, [sp, #232]
  409b20:	mov	x2, #0x1                   	// #1
  409b24:	mov	x1, #0x1                   	// #1
  409b28:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  409b2c:	add	x0, x0, #0x318
  409b30:	bl	40d840 <wcrtomb@plt+0xaa50>
  409b34:	ldr	x3, [sp, #232]
  409b38:	mov	x2, #0x1                   	// #1
  409b3c:	mov	x1, #0x1                   	// #1
  409b40:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409b44:	add	x0, x0, #0x470
  409b48:	bl	40d840 <wcrtomb@plt+0xaa50>
  409b4c:	ldr	x0, [sp, #232]
  409b50:	bl	408630 <wcrtomb@plt+0x5840>
  409b54:	nop
  409b58:	ldp	x29, x30, [sp], #272
  409b5c:	ret
  409b60:	stp	x29, x30, [sp, #-64]!
  409b64:	mov	x29, sp
  409b68:	str	x0, [sp, #40]
  409b6c:	str	x1, [sp, #32]
  409b70:	str	x2, [sp, #24]
  409b74:	str	wzr, [sp, #60]
  409b78:	b	409d2c <wcrtomb@plt+0x6f3c>
  409b7c:	ldr	x0, [sp, #32]
  409b80:	ldr	w0, [x0, #16]
  409b84:	str	w0, [sp, #52]
  409b88:	ldr	x0, [sp, #32]
  409b8c:	ldr	w0, [x0, #20]
  409b90:	and	w0, w0, #0xc
  409b94:	cmp	w0, #0x0
  409b98:	b.eq	409ba8 <wcrtomb@plt+0x6db8>  // b.none
  409b9c:	ldr	x0, [sp, #32]
  409ba0:	ldr	w0, [x0, #20]
  409ba4:	b	409bb8 <wcrtomb@plt+0x6dc8>
  409ba8:	ldr	x0, [sp, #32]
  409bac:	ldr	w1, [x0, #20]
  409bb0:	ldr	w0, [sp, #60]
  409bb4:	orr	w0, w1, w0
  409bb8:	str	w0, [sp, #56]
  409bbc:	str	wzr, [sp, #60]
  409bc0:	ldr	x0, [sp, #32]
  409bc4:	ldr	x0, [x0, #8]
  409bc8:	cmp	x0, #0x0
  409bcc:	b.eq	409bfc <wcrtomb@plt+0x6e0c>  // b.none
  409bd0:	ldr	x0, [sp, #32]
  409bd4:	ldr	x1, [x0]
  409bd8:	ldr	x0, [sp, #32]
  409bdc:	ldr	x0, [x0, #8]
  409be0:	ldr	w3, [sp, #56]
  409be4:	mov	x2, x0
  409be8:	ldr	x0, [sp, #40]
  409bec:	bl	407d4c <wcrtomb@plt+0x4f5c>
  409bf0:	ldr	w0, [sp, #56]
  409bf4:	and	w0, w0, #0xfffffff3
  409bf8:	str	w0, [sp, #56]
  409bfc:	ldr	w0, [sp, #52]
  409c00:	cmp	w0, #0x0
  409c04:	b.lt	409d20 <wcrtomb@plt+0x6f30>  // b.tstop
  409c08:	ldrsw	x1, [sp, #52]
  409c0c:	ldr	x0, [sp, #24]
  409c10:	ldr	x0, [x0]
  409c14:	cmp	x1, x0
  409c18:	b.cs	409d20 <wcrtomb@plt+0x6f30>  // b.hs, b.nlast
  409c1c:	ldr	x0, [sp, #24]
  409c20:	ldr	x1, [x0, #16]
  409c24:	ldrsw	x0, [sp, #52]
  409c28:	lsl	x0, x0, #3
  409c2c:	add	x0, x1, x0
  409c30:	ldr	x1, [x0]
  409c34:	ldr	x0, [sp, #24]
  409c38:	ldr	x2, [x0, #8]
  409c3c:	ldrsw	x0, [sp, #52]
  409c40:	lsl	x0, x0, #3
  409c44:	add	x0, x2, x0
  409c48:	ldr	x0, [x0]
  409c4c:	cmp	x1, x0
  409c50:	b.ne	409c78 <wcrtomb@plt+0x6e88>  // b.any
  409c54:	ldr	x0, [sp, #32]
  409c58:	ldr	w0, [x0, #20]
  409c5c:	and	w0, w0, #0xc
  409c60:	cmp	w0, #0x0
  409c64:	b.eq	409c78 <wcrtomb@plt+0x6e88>  // b.none
  409c68:	ldr	w0, [sp, #56]
  409c6c:	and	w0, w0, #0xc
  409c70:	str	w0, [sp, #60]
  409c74:	b	409d20 <wcrtomb@plt+0x6f30>
  409c78:	ldr	x0, [sp, #24]
  409c7c:	ldr	x1, [x0, #16]
  409c80:	ldrsw	x0, [sp, #52]
  409c84:	lsl	x0, x0, #3
  409c88:	add	x0, x1, x0
  409c8c:	ldr	x1, [x0]
  409c90:	ldr	x0, [sp, #24]
  409c94:	ldr	x2, [x0, #8]
  409c98:	ldrsw	x0, [sp, #52]
  409c9c:	lsl	x0, x0, #3
  409ca0:	add	x0, x2, x0
  409ca4:	ldr	x0, [x0]
  409ca8:	cmp	x1, x0
  409cac:	b.eq	409d20 <wcrtomb@plt+0x6f30>  // b.none
  409cb0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409cb4:	add	x0, x0, #0x658
  409cb8:	ldr	x0, [x0, #8]
  409cbc:	ldr	x1, [sp, #24]
  409cc0:	ldr	x2, [x1, #8]
  409cc4:	ldrsw	x1, [sp, #52]
  409cc8:	lsl	x1, x1, #3
  409ccc:	add	x1, x2, x1
  409cd0:	ldr	x1, [x1]
  409cd4:	add	x4, x0, x1
  409cd8:	ldr	x0, [sp, #24]
  409cdc:	ldr	x1, [x0, #16]
  409ce0:	ldrsw	x0, [sp, #52]
  409ce4:	lsl	x0, x0, #3
  409ce8:	add	x0, x1, x0
  409cec:	ldr	x1, [x0]
  409cf0:	ldr	x0, [sp, #24]
  409cf4:	ldr	x2, [x0, #8]
  409cf8:	ldrsw	x0, [sp, #52]
  409cfc:	lsl	x0, x0, #3
  409d00:	add	x0, x2, x0
  409d04:	ldr	x0, [x0]
  409d08:	sub	x0, x1, x0
  409d0c:	ldr	w3, [sp, #56]
  409d10:	mov	x2, x0
  409d14:	mov	x1, x4
  409d18:	ldr	x0, [sp, #40]
  409d1c:	bl	407d4c <wcrtomb@plt+0x4f5c>
  409d20:	ldr	x0, [sp, #32]
  409d24:	ldr	x0, [x0, #24]
  409d28:	str	x0, [sp, #32]
  409d2c:	ldr	x0, [sp, #32]
  409d30:	cmp	x0, #0x0
  409d34:	b.ne	409b7c <wcrtomb@plt+0x6d8c>  // b.any
  409d38:	nop
  409d3c:	nop
  409d40:	ldp	x29, x30, [sp], #64
  409d44:	ret
  409d48:	mov	x12, #0x1060                	// #4192
  409d4c:	sub	sp, sp, x12
  409d50:	stp	x29, x30, [sp]
  409d54:	mov	x29, sp
  409d58:	str	x0, [sp, #24]
  409d5c:	str	xzr, [sp, #4184]
  409d60:	str	xzr, [sp, #4176]
  409d64:	str	xzr, [sp, #4168]
  409d68:	mov	w0, #0x1                   	// #1
  409d6c:	add	x1, sp, #0x1, lsl #12
  409d70:	strb	w0, [x1, #71]
  409d74:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409d78:	add	x1, x0, #0x658
  409d7c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409d80:	add	x0, x0, #0x688
  409d84:	bl	408204 <wcrtomb@plt+0x5414>
  409d88:	ldr	x0, [sp, #24]
  409d8c:	ldr	x6, [x0]
  409d90:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409d94:	add	x0, x0, #0x658
  409d98:	ldr	x1, [x0, #8]
  409d9c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409da0:	add	x0, x0, #0x658
  409da4:	ldr	x2, [x0, #16]
  409da8:	ldr	x0, [sp, #24]
  409dac:	ldrb	w0, [x0, #32]
  409db0:	ubfx	x0, x0, #4, #4
  409db4:	and	w0, w0, #0xff
  409db8:	add	w0, w0, #0x1
  409dbc:	mov	w5, w0
  409dc0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409dc4:	add	x4, x0, #0x738
  409dc8:	ldr	x3, [sp, #4184]
  409dcc:	mov	x0, x6
  409dd0:	bl	40c0bc <wcrtomb@plt+0x92cc>
  409dd4:	cmp	w0, #0x0
  409dd8:	b.eq	40a5f0 <wcrtomb@plt+0x7800>  // b.none
  409ddc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409de0:	add	x0, x0, #0x761
  409de4:	ldrb	w0, [x0]
  409de8:	cmp	w0, #0x0
  409dec:	b.eq	409fa4 <wcrtomb@plt+0x71b4>  // b.none
  409df0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409df4:	add	x0, x0, #0x738
  409df8:	ldr	x0, [x0]
  409dfc:	cmp	x0, #0x0
  409e00:	b.eq	409e28 <wcrtomb@plt+0x7038>  // b.none
  409e04:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409e08:	add	x0, x0, #0x738
  409e0c:	ldr	x0, [x0, #8]
  409e10:	ldr	x0, [x0]
  409e14:	cmn	x0, #0x1
  409e18:	b.eq	409e28 <wcrtomb@plt+0x7038>  // b.none
  409e1c:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  409e20:	add	x0, x0, #0x320
  409e24:	bl	402ae0 <puts@plt>
  409e28:	str	wzr, [sp, #4160]
  409e2c:	b	409f84 <wcrtomb@plt+0x7194>
  409e30:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409e34:	add	x0, x0, #0x738
  409e38:	ldr	x1, [x0, #8]
  409e3c:	ldrsw	x0, [sp, #4160]
  409e40:	lsl	x0, x0, #3
  409e44:	add	x0, x1, x0
  409e48:	ldr	x0, [x0]
  409e4c:	cmn	x0, #0x1
  409e50:	b.eq	409fa0 <wcrtomb@plt+0x71b0>  // b.none
  409e54:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409e58:	add	x0, x0, #0x738
  409e5c:	ldr	x1, [x0, #8]
  409e60:	ldrsw	x0, [sp, #4160]
  409e64:	lsl	x0, x0, #3
  409e68:	add	x0, x1, x0
  409e6c:	ldr	x0, [x0]
  409e70:	mov	w2, w0
  409e74:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409e78:	add	x0, x0, #0x738
  409e7c:	ldr	x1, [x0, #16]
  409e80:	ldrsw	x0, [sp, #4160]
  409e84:	lsl	x0, x0, #3
  409e88:	add	x0, x1, x0
  409e8c:	ldr	x0, [x0]
  409e90:	mov	w3, w0
  409e94:	ldr	w1, [sp, #4160]
  409e98:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  409e9c:	add	x0, x0, #0x338
  409ea0:	bl	402d20 <printf@plt>
  409ea4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409ea8:	add	x0, x0, #0x738
  409eac:	ldr	x1, [x0, #8]
  409eb0:	ldrsw	x0, [sp, #4160]
  409eb4:	lsl	x0, x0, #3
  409eb8:	add	x0, x1, x0
  409ebc:	ldr	x1, [x0]
  409ec0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409ec4:	add	x0, x0, #0x738
  409ec8:	ldr	x2, [x0, #16]
  409ecc:	ldrsw	x0, [sp, #4160]
  409ed0:	lsl	x0, x0, #3
  409ed4:	add	x0, x2, x0
  409ed8:	ldr	x0, [x0]
  409edc:	cmp	x1, x0
  409ee0:	b.eq	409f6c <wcrtomb@plt+0x717c>  // b.none
  409ee4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409ee8:	add	x0, x0, #0x658
  409eec:	ldr	x0, [x0, #8]
  409ef0:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409ef4:	add	x1, x1, #0x738
  409ef8:	ldr	x2, [x1, #8]
  409efc:	ldrsw	x1, [sp, #4160]
  409f00:	lsl	x1, x1, #3
  409f04:	add	x1, x2, x1
  409f08:	ldr	x1, [x1]
  409f0c:	add	x4, x0, x1
  409f10:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409f14:	add	x0, x0, #0x738
  409f18:	ldr	x1, [x0, #16]
  409f1c:	ldrsw	x0, [sp, #4160]
  409f20:	lsl	x0, x0, #3
  409f24:	add	x0, x1, x0
  409f28:	ldr	x1, [x0]
  409f2c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409f30:	add	x0, x0, #0x738
  409f34:	ldr	x2, [x0, #8]
  409f38:	ldrsw	x0, [sp, #4160]
  409f3c:	lsl	x0, x0, #3
  409f40:	add	x0, x2, x0
  409f44:	ldr	x0, [x0]
  409f48:	sub	x0, x1, x0
  409f4c:	mov	x1, x0
  409f50:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409f54:	add	x0, x0, #0x520
  409f58:	ldr	x0, [x0]
  409f5c:	mov	x3, x0
  409f60:	mov	x2, #0x1                   	// #1
  409f64:	mov	x0, x4
  409f68:	bl	402710 <fwrite_unlocked@plt>
  409f6c:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  409f70:	add	x0, x0, #0x350
  409f74:	bl	402ae0 <puts@plt>
  409f78:	ldr	w0, [sp, #4160]
  409f7c:	add	w0, w0, #0x1
  409f80:	str	w0, [sp, #4160]
  409f84:	ldrsw	x1, [sp, #4160]
  409f88:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409f8c:	add	x0, x0, #0x738
  409f90:	ldr	x0, [x0]
  409f94:	cmp	x1, x0
  409f98:	b.cc	409e30 <wcrtomb@plt+0x7040>  // b.lo, b.ul, b.last
  409f9c:	b	409fa4 <wcrtomb@plt+0x71b4>
  409fa0:	nop
  409fa4:	ldr	x0, [sp, #24]
  409fa8:	ldr	x0, [x0, #8]
  409fac:	cmp	x0, #0x0
  409fb0:	b.ne	40a0e4 <wcrtomb@plt+0x72f4>  // b.any
  409fb4:	ldr	x0, [sp, #24]
  409fb8:	ldr	x0, [x0, #16]
  409fbc:	cmp	x0, #0x1
  409fc0:	b.hi	40a0e4 <wcrtomb@plt+0x72f4>  // b.pmore
  409fc4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409fc8:	add	x0, x0, #0x738
  409fcc:	ldr	x0, [x0, #8]
  409fd0:	ldr	x0, [x0]
  409fd4:	cmp	x0, #0x0
  409fd8:	b.ne	40a08c <wcrtomb@plt+0x729c>  // b.any
  409fdc:	ldr	x0, [sp, #24]
  409fe0:	ldrb	w0, [x0, #32]
  409fe4:	and	w0, w0, #0x1
  409fe8:	and	w0, w0, #0xff
  409fec:	cmp	w0, #0x0
  409ff0:	b.ne	40a08c <wcrtomb@plt+0x729c>  // b.any
  409ff4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  409ff8:	add	x0, x0, #0x630
  409ffc:	mov	w1, #0x1                   	// #1
  40a000:	strb	w1, [x0]
  40a004:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a008:	add	x0, x0, #0x658
  40a00c:	ldr	x0, [x0, #8]
  40a010:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a014:	add	x1, x1, #0x738
  40a018:	ldr	x1, [x1, #16]
  40a01c:	ldr	x1, [x1]
  40a020:	add	x1, x0, x1
  40a024:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a028:	add	x0, x0, #0x658
  40a02c:	str	x1, [x0, #8]
  40a030:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a034:	add	x0, x0, #0x658
  40a038:	ldr	x0, [x0, #16]
  40a03c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a040:	add	x1, x1, #0x738
  40a044:	ldr	x1, [x1, #16]
  40a048:	ldr	x1, [x1]
  40a04c:	sub	x1, x0, x1
  40a050:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a054:	add	x0, x0, #0x658
  40a058:	str	x1, [x0, #16]
  40a05c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a060:	add	x0, x0, #0x658
  40a064:	ldr	x0, [x0, #24]
  40a068:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a06c:	add	x1, x1, #0x738
  40a070:	ldr	x1, [x1, #16]
  40a074:	ldr	x1, [x1]
  40a078:	sub	x1, x0, x1
  40a07c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a080:	add	x0, x0, #0x658
  40a084:	str	x1, [x0, #24]
  40a088:	b	40a39c <wcrtomb@plt+0x75ac>
  40a08c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a090:	add	x0, x0, #0x738
  40a094:	ldr	x0, [x0, #16]
  40a098:	ldr	x0, [x0]
  40a09c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a0a0:	add	x1, x1, #0x658
  40a0a4:	ldr	x1, [x1, #16]
  40a0a8:	cmp	x0, x1
  40a0ac:	b.ne	40a0e4 <wcrtomb@plt+0x72f4>  // b.any
  40a0b0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a0b4:	add	x0, x0, #0x630
  40a0b8:	mov	w1, #0x1                   	// #1
  40a0bc:	strb	w1, [x0]
  40a0c0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a0c4:	add	x0, x0, #0x738
  40a0c8:	ldr	x0, [x0, #8]
  40a0cc:	ldr	x0, [x0]
  40a0d0:	mov	x1, x0
  40a0d4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a0d8:	add	x0, x0, #0x658
  40a0dc:	str	x1, [x0, #16]
  40a0e0:	b	40a39c <wcrtomb@plt+0x75ac>
  40a0e4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a0e8:	add	x0, x0, #0x738
  40a0ec:	ldr	x0, [x0, #8]
  40a0f0:	ldr	x0, [x0]
  40a0f4:	str	x0, [sp, #4144]
  40a0f8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a0fc:	add	x0, x0, #0x738
  40a100:	ldr	x0, [x0, #16]
  40a104:	ldr	x1, [x0]
  40a108:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a10c:	add	x0, x0, #0x738
  40a110:	ldr	x0, [x0, #8]
  40a114:	ldr	x0, [x0]
  40a118:	sub	x0, x1, x0
  40a11c:	str	x0, [sp, #4152]
  40a120:	ldr	x1, [sp, #4184]
  40a124:	ldr	x0, [sp, #4144]
  40a128:	cmp	x1, x0
  40a12c:	b.cs	40a16c <wcrtomb@plt+0x737c>  // b.hs, b.nlast
  40a130:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a134:	add	x0, x0, #0x658
  40a138:	ldr	x1, [x0, #8]
  40a13c:	ldr	x0, [sp, #4184]
  40a140:	add	x3, x1, x0
  40a144:	ldr	x1, [sp, #4144]
  40a148:	ldr	x0, [sp, #4184]
  40a14c:	sub	x0, x1, x0
  40a150:	mov	x2, x0
  40a154:	mov	x1, x3
  40a158:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a15c:	add	x0, x0, #0x688
  40a160:	bl	407be8 <wcrtomb@plt+0x4df8>
  40a164:	ldr	x0, [sp, #4144]
  40a168:	str	x0, [sp, #4184]
  40a16c:	ldr	x0, [sp, #4152]
  40a170:	cmp	x0, #0x0
  40a174:	b.ne	40a194 <wcrtomb@plt+0x73a4>  // b.any
  40a178:	ldr	x0, [sp, #4168]
  40a17c:	cmp	x0, #0x0
  40a180:	b.eq	40a194 <wcrtomb@plt+0x73a4>  // b.none
  40a184:	ldr	x1, [sp, #4144]
  40a188:	ldr	x0, [sp, #4176]
  40a18c:	cmp	x1, x0
  40a190:	b.ls	40a204 <wcrtomb@plt+0x7414>  // b.plast
  40a194:	ldr	x0, [sp, #4168]
  40a198:	add	x0, x0, #0x1
  40a19c:	str	x0, [sp, #4168]
  40a1a0:	ldr	x0, [sp, #24]
  40a1a4:	ldr	x0, [x0, #16]
  40a1a8:	ldr	x1, [sp, #4168]
  40a1ac:	cmp	x1, x0
  40a1b0:	b.cc	40a204 <wcrtomb@plt+0x7414>  // b.lo, b.ul, b.last
  40a1b4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a1b8:	add	x0, x0, #0x630
  40a1bc:	mov	w1, #0x1                   	// #1
  40a1c0:	strb	w1, [x0]
  40a1c4:	ldr	x0, [sp, #24]
  40a1c8:	ldr	x1, [x0, #8]
  40a1cc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a1d0:	add	x2, x0, #0x738
  40a1d4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a1d8:	add	x0, x0, #0x688
  40a1dc:	bl	409b60 <wcrtomb@plt+0x6d70>
  40a1e0:	ldr	x0, [sp, #24]
  40a1e4:	ldrb	w0, [x0, #32]
  40a1e8:	ubfx	x0, x0, #0, #1
  40a1ec:	and	w0, w0, #0xff
  40a1f0:	cmp	w0, #0x0
  40a1f4:	cset	w0, ne  // ne = any
  40a1f8:	add	x1, sp, #0x1, lsl #12
  40a1fc:	strb	w0, [x1, #71]
  40a200:	b	40a258 <wcrtomb@plt+0x7468>
  40a204:	ldr	x0, [sp, #4152]
  40a208:	cmp	x0, #0x0
  40a20c:	b.ne	40a230 <wcrtomb@plt+0x7440>  // b.any
  40a210:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a214:	add	x0, x0, #0x658
  40a218:	ldr	x0, [x0, #16]
  40a21c:	ldr	x1, [sp, #4184]
  40a220:	cmp	x1, x0
  40a224:	b.cs	40a2fc <wcrtomb@plt+0x750c>  // b.hs, b.nlast
  40a228:	mov	x0, #0x1                   	// #1
  40a22c:	str	x0, [sp, #4152]
  40a230:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a234:	add	x0, x0, #0x658
  40a238:	ldr	x1, [x0, #8]
  40a23c:	ldr	x0, [sp, #4144]
  40a240:	add	x0, x1, x0
  40a244:	ldr	x2, [sp, #4152]
  40a248:	mov	x1, x0
  40a24c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a250:	add	x0, x0, #0x688
  40a254:	bl	407be8 <wcrtomb@plt+0x4df8>
  40a258:	ldr	x1, [sp, #4144]
  40a25c:	ldr	x0, [sp, #4152]
  40a260:	add	x0, x1, x0
  40a264:	str	x0, [sp, #4184]
  40a268:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a26c:	add	x0, x0, #0x738
  40a270:	ldr	x0, [x0, #16]
  40a274:	ldr	x0, [x0]
  40a278:	str	x0, [sp, #4176]
  40a27c:	add	x0, sp, #0x1, lsl #12
  40a280:	ldrb	w0, [x0, #71]
  40a284:	cmp	w0, #0x0
  40a288:	b.eq	40a300 <wcrtomb@plt+0x7510>  // b.none
  40a28c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a290:	add	x0, x0, #0x658
  40a294:	ldr	x0, [x0, #16]
  40a298:	ldr	x1, [sp, #4184]
  40a29c:	cmp	x1, x0
  40a2a0:	b.hi	40a300 <wcrtomb@plt+0x7510>  // b.pmore
  40a2a4:	ldr	x0, [sp, #24]
  40a2a8:	ldr	x6, [x0]
  40a2ac:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a2b0:	add	x0, x0, #0x658
  40a2b4:	ldr	x1, [x0, #8]
  40a2b8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a2bc:	add	x0, x0, #0x658
  40a2c0:	ldr	x2, [x0, #16]
  40a2c4:	ldr	x0, [sp, #24]
  40a2c8:	ldrb	w0, [x0, #32]
  40a2cc:	ubfx	x0, x0, #4, #4
  40a2d0:	and	w0, w0, #0xff
  40a2d4:	add	w0, w0, #0x1
  40a2d8:	mov	w5, w0
  40a2dc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a2e0:	add	x4, x0, #0x738
  40a2e4:	ldr	x3, [sp, #4184]
  40a2e8:	mov	x0, x6
  40a2ec:	bl	40c0bc <wcrtomb@plt+0x92cc>
  40a2f0:	cmp	w0, #0x0
  40a2f4:	b.ne	40a0e4 <wcrtomb@plt+0x72f4>  // b.any
  40a2f8:	b	40a300 <wcrtomb@plt+0x7510>
  40a2fc:	nop
  40a300:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a304:	add	x0, x0, #0x658
  40a308:	ldr	x0, [x0, #16]
  40a30c:	ldr	x1, [sp, #4184]
  40a310:	cmp	x1, x0
  40a314:	b.cs	40a354 <wcrtomb@plt+0x7564>  // b.hs, b.nlast
  40a318:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a31c:	add	x0, x0, #0x658
  40a320:	ldr	x1, [x0, #8]
  40a324:	ldr	x0, [sp, #4184]
  40a328:	add	x3, x1, x0
  40a32c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a330:	add	x0, x0, #0x658
  40a334:	ldr	x1, [x0, #16]
  40a338:	ldr	x0, [sp, #4184]
  40a33c:	sub	x0, x1, x0
  40a340:	mov	x2, x0
  40a344:	mov	x1, x3
  40a348:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a34c:	add	x0, x0, #0x688
  40a350:	bl	407be8 <wcrtomb@plt+0x4df8>
  40a354:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a358:	add	x0, x0, #0x658
  40a35c:	ldrb	w1, [x0, #32]
  40a360:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a364:	add	x0, x0, #0x688
  40a368:	strb	w1, [x0, #32]
  40a36c:	mov	w2, #0x0                   	// #0
  40a370:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a374:	add	x1, x0, #0x688
  40a378:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a37c:	add	x0, x0, #0x658
  40a380:	bl	408464 <wcrtomb@plt+0x5674>
  40a384:	ldr	x0, [sp, #24]
  40a388:	ldr	x0, [x0, #16]
  40a38c:	ldr	x1, [sp, #4168]
  40a390:	cmp	x1, x0
  40a394:	b.cc	40a5f8 <wcrtomb@plt+0x7808>  // b.lo, b.ul, b.last
  40a398:	nop
  40a39c:	ldr	x0, [sp, #24]
  40a3a0:	ldrb	w0, [x0, #32]
  40a3a4:	ubfx	x0, x0, #1, #2
  40a3a8:	and	w0, w0, #0xff
  40a3ac:	and	w0, w0, #0x1
  40a3b0:	cmp	w0, #0x0
  40a3b4:	b.eq	40a3f0 <wcrtomb@plt+0x7600>  // b.none
  40a3b8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a3bc:	add	x0, x0, #0x658
  40a3c0:	ldr	x4, [x0, #8]
  40a3c4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a3c8:	add	x0, x0, #0x658
  40a3cc:	ldr	x1, [x0, #16]
  40a3d0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a3d4:	add	x0, x0, #0x658
  40a3d8:	ldrb	w0, [x0, #32]
  40a3dc:	mov	w2, w0
  40a3e0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a3e4:	add	x3, x0, #0x638
  40a3e8:	mov	x0, x4
  40a3ec:	bl	408664 <wcrtomb@plt+0x5874>
  40a3f0:	ldr	x0, [sp, #24]
  40a3f4:	ldrb	w0, [x0, #32]
  40a3f8:	and	w0, w0, #0x8
  40a3fc:	and	w0, w0, #0xff
  40a400:	cmp	w0, #0x0
  40a404:	b.eq	40a54c <wcrtomb@plt+0x775c>  // b.none
  40a408:	mov	x1, #0x0                   	// #0
  40a40c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a410:	add	x0, x0, #0x688
  40a414:	bl	408204 <wcrtomb@plt+0x5414>
  40a418:	mov	x2, #0x1                   	// #1
  40a41c:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40a420:	add	x1, x0, #0x358
  40a424:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a428:	add	x0, x0, #0x658
  40a42c:	bl	407be8 <wcrtomb@plt+0x4df8>
  40a430:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a434:	add	x0, x0, #0x658
  40a438:	ldr	x2, [x0, #8]
  40a43c:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40a440:	add	x1, x0, #0x360
  40a444:	mov	x0, x2
  40a448:	bl	402910 <popen@plt>
  40a44c:	str	x0, [sp, #4136]
  40a450:	ldr	x0, [sp, #4136]
  40a454:	cmp	x0, #0x0
  40a458:	b.eq	40a53c <wcrtomb@plt+0x774c>  // b.none
  40a45c:	b	40a4a0 <wcrtomb@plt+0x76b0>
  40a460:	add	x0, sp, #0x20
  40a464:	ldr	x3, [sp, #4136]
  40a468:	mov	x2, #0x1000                	// #4096
  40a46c:	mov	x1, #0x1                   	// #1
  40a470:	bl	402af0 <fread_unlocked@plt>
  40a474:	str	w0, [sp, #4132]
  40a478:	ldr	w0, [sp, #4132]
  40a47c:	cmp	w0, #0x0
  40a480:	b.le	40a4a0 <wcrtomb@plt+0x76b0>
  40a484:	ldrsw	x1, [sp, #4132]
  40a488:	add	x0, sp, #0x20
  40a48c:	mov	x2, x1
  40a490:	mov	x1, x0
  40a494:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a498:	add	x0, x0, #0x688
  40a49c:	bl	407be8 <wcrtomb@plt+0x4df8>
  40a4a0:	ldr	x0, [sp, #4136]
  40a4a4:	bl	402bb0 <feof_unlocked@plt>
  40a4a8:	cmp	w0, #0x0
  40a4ac:	b.eq	40a460 <wcrtomb@plt+0x7670>  // b.none
  40a4b0:	ldr	x0, [sp, #4136]
  40a4b4:	bl	402cd0 <pclose@plt>
  40a4b8:	mov	w2, #0x1                   	// #1
  40a4bc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a4c0:	add	x1, x0, #0x688
  40a4c4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a4c8:	add	x0, x0, #0x658
  40a4cc:	bl	408464 <wcrtomb@plt+0x5674>
  40a4d0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a4d4:	add	x0, x0, #0x658
  40a4d8:	ldr	x0, [x0, #16]
  40a4dc:	cmp	x0, #0x0
  40a4e0:	b.eq	40a54c <wcrtomb@plt+0x775c>  // b.none
  40a4e4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a4e8:	add	x0, x0, #0x658
  40a4ec:	ldr	x1, [x0, #8]
  40a4f0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a4f4:	add	x0, x0, #0x658
  40a4f8:	ldr	x0, [x0, #16]
  40a4fc:	sub	x0, x0, #0x1
  40a500:	add	x0, x1, x0
  40a504:	ldrb	w1, [x0]
  40a508:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a50c:	add	x0, x0, #0x470
  40a510:	ldrb	w0, [x0]
  40a514:	cmp	w1, w0
  40a518:	b.ne	40a54c <wcrtomb@plt+0x775c>  // b.any
  40a51c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a520:	add	x0, x0, #0x658
  40a524:	ldr	x0, [x0, #16]
  40a528:	sub	x1, x0, #0x1
  40a52c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a530:	add	x0, x0, #0x658
  40a534:	str	x1, [x0, #16]
  40a538:	b	40a54c <wcrtomb@plt+0x775c>
  40a53c:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40a540:	add	x0, x0, #0x368
  40a544:	bl	402d80 <gettext@plt>
  40a548:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40a54c:	ldr	x0, [sp, #24]
  40a550:	ldrb	w0, [x0, #32]
  40a554:	ubfx	x0, x0, #1, #2
  40a558:	and	w0, w0, #0xff
  40a55c:	and	w0, w0, #0x2
  40a560:	cmp	w0, #0x0
  40a564:	b.eq	40a5a0 <wcrtomb@plt+0x77b0>  // b.none
  40a568:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a56c:	add	x0, x0, #0x658
  40a570:	ldr	x4, [x0, #8]
  40a574:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a578:	add	x0, x0, #0x658
  40a57c:	ldr	x1, [x0, #16]
  40a580:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a584:	add	x0, x0, #0x658
  40a588:	ldrb	w0, [x0, #32]
  40a58c:	mov	w2, w0
  40a590:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a594:	add	x3, x0, #0x638
  40a598:	mov	x0, x4
  40a59c:	bl	408664 <wcrtomb@plt+0x5874>
  40a5a0:	ldr	x0, [sp, #24]
  40a5a4:	ldr	x0, [x0, #24]
  40a5a8:	cmp	x0, #0x0
  40a5ac:	b.eq	40a5fc <wcrtomb@plt+0x780c>  // b.none
  40a5b0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a5b4:	add	x0, x0, #0x658
  40a5b8:	ldr	x4, [x0, #8]
  40a5bc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a5c0:	add	x0, x0, #0x658
  40a5c4:	ldr	x1, [x0, #16]
  40a5c8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a5cc:	add	x0, x0, #0x658
  40a5d0:	ldrb	w0, [x0, #32]
  40a5d4:	mov	w2, w0
  40a5d8:	ldr	x0, [sp, #24]
  40a5dc:	ldr	x0, [x0, #24]
  40a5e0:	mov	x3, x0
  40a5e4:	mov	x0, x4
  40a5e8:	bl	408664 <wcrtomb@plt+0x5874>
  40a5ec:	b	40a5fc <wcrtomb@plt+0x780c>
  40a5f0:	nop
  40a5f4:	b	40a5fc <wcrtomb@plt+0x780c>
  40a5f8:	nop
  40a5fc:	ldp	x29, x30, [sp]
  40a600:	mov	x12, #0x1060                	// #4192
  40a604:	add	sp, sp, x12
  40a608:	ret
  40a60c:	stp	x29, x30, [sp, #-144]!
  40a610:	mov	x29, sp
  40a614:	str	x0, [sp, #24]
  40a618:	str	xzr, [sp, #40]
  40a61c:	str	xzr, [sp, #136]
  40a620:	b	40a91c <wcrtomb@plt+0x7b2c>
  40a624:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a628:	add	x0, x0, #0x8e4
  40a62c:	ldr	w0, [x0]
  40a630:	cmp	w0, #0x1
  40a634:	b.eq	40a67c <wcrtomb@plt+0x788c>  // b.none
  40a638:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a63c:	add	x0, x0, #0x658
  40a640:	ldr	x1, [x0, #8]
  40a644:	ldr	x0, [sp, #136]
  40a648:	add	x4, x1, x0
  40a64c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a650:	add	x0, x0, #0x658
  40a654:	ldr	x1, [x0, #16]
  40a658:	ldr	x0, [sp, #136]
  40a65c:	sub	x0, x1, x0
  40a660:	add	x1, sp, #0x28
  40a664:	mov	x3, x1
  40a668:	mov	x2, x0
  40a66c:	mov	x1, x4
  40a670:	mov	x0, #0x0                   	// #0
  40a674:	bl	41bae8 <wcrtomb@plt+0x18cf8>
  40a678:	b	40a680 <wcrtomb@plt+0x7890>
  40a67c:	mov	x0, #0x1                   	// #1
  40a680:	str	x0, [sp, #120]
  40a684:	ldr	x0, [sp, #120]
  40a688:	cmn	x0, #0x1
  40a68c:	b.eq	40a6a8 <wcrtomb@plt+0x78b8>  // b.none
  40a690:	ldr	x0, [sp, #120]
  40a694:	cmn	x0, #0x2
  40a698:	b.eq	40a6a8 <wcrtomb@plt+0x78b8>  // b.none
  40a69c:	ldr	x0, [sp, #120]
  40a6a0:	cmp	x0, #0x0
  40a6a4:	b.ne	40a6b0 <wcrtomb@plt+0x78c0>  // b.any
  40a6a8:	mov	x0, #0x1                   	// #1
  40a6ac:	str	x0, [sp, #120]
  40a6b0:	str	wzr, [sp, #132]
  40a6b4:	b	40a8e8 <wcrtomb@plt+0x7af8>
  40a6b8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a6bc:	add	x0, x0, #0x658
  40a6c0:	ldr	x1, [x0, #8]
  40a6c4:	ldr	x0, [sp, #136]
  40a6c8:	add	x3, x1, x0
  40a6cc:	ldr	w0, [sp, #132]
  40a6d0:	lsl	w0, w0, #1
  40a6d4:	mov	w0, w0
  40a6d8:	lsl	x0, x0, #3
  40a6dc:	ldr	x1, [sp, #24]
  40a6e0:	add	x0, x1, x0
  40a6e4:	ldr	x0, [x0]
  40a6e8:	ldr	x2, [sp, #120]
  40a6ec:	mov	x1, x0
  40a6f0:	mov	x0, x3
  40a6f4:	bl	402920 <strncmp@plt>
  40a6f8:	cmp	w0, #0x0
  40a6fc:	b.ne	40a8dc <wcrtomb@plt+0x7aec>  // b.any
  40a700:	strb	wzr, [sp, #119]
  40a704:	ldr	w0, [sp, #132]
  40a708:	lsl	w0, w0, #1
  40a70c:	add	w0, w0, #0x1
  40a710:	mov	w0, w0
  40a714:	lsl	x0, x0, #3
  40a718:	ldr	x1, [sp, #24]
  40a71c:	add	x0, x1, x0
  40a720:	ldr	x0, [x0]
  40a724:	str	x0, [sp, #104]
  40a728:	ldr	x0, [sp, #104]
  40a72c:	ldrb	w0, [x0]
  40a730:	cmp	w0, #0x0
  40a734:	b.eq	40a744 <wcrtomb@plt+0x7954>  // b.none
  40a738:	ldr	x0, [sp, #104]
  40a73c:	bl	402720 <strlen@plt>
  40a740:	b	40a748 <wcrtomb@plt+0x7958>
  40a744:	mov	x0, #0x1                   	// #1
  40a748:	str	x0, [sp, #96]
  40a74c:	ldr	x1, [sp, #120]
  40a750:	ldr	x0, [sp, #96]
  40a754:	cmp	x1, x0
  40a758:	b.cs	40a7b4 <wcrtomb@plt+0x79c4>  // b.hs, b.nlast
  40a75c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a760:	add	x0, x0, #0x658
  40a764:	ldr	x1, [x0, #16]
  40a768:	ldr	x0, [sp, #96]
  40a76c:	add	x1, x1, x0
  40a770:	ldr	x0, [sp, #120]
  40a774:	sub	x0, x1, x0
  40a778:	add	x0, x0, #0x1
  40a77c:	str	x0, [sp, #88]
  40a780:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a784:	add	x0, x0, #0x658
  40a788:	ldr	x0, [x0, #24]
  40a78c:	ldr	x1, [sp, #88]
  40a790:	cmp	x1, x0
  40a794:	b.ls	40a7a8 <wcrtomb@plt+0x79b8>  // b.plast
  40a798:	ldr	x1, [sp, #88]
  40a79c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a7a0:	add	x0, x0, #0x658
  40a7a4:	bl	407a84 <wcrtomb@plt+0x4c94>
  40a7a8:	mov	w0, #0x1                   	// #1
  40a7ac:	strb	w0, [sp, #119]
  40a7b0:	b	40a7cc <wcrtomb@plt+0x79dc>
  40a7b4:	ldr	x1, [sp, #120]
  40a7b8:	ldr	x0, [sp, #96]
  40a7bc:	cmp	x1, x0
  40a7c0:	b.ls	40a7cc <wcrtomb@plt+0x79dc>  // b.plast
  40a7c4:	mov	w0, #0x1                   	// #1
  40a7c8:	strb	w0, [sp, #119]
  40a7cc:	ldr	x0, [sp, #136]
  40a7d0:	str	x0, [sp, #80]
  40a7d4:	ldrb	w0, [sp, #119]
  40a7d8:	cmp	w0, #0x0
  40a7dc:	b.eq	40a894 <wcrtomb@plt+0x7aa4>  // b.none
  40a7e0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a7e4:	add	x0, x0, #0x658
  40a7e8:	ldr	x1, [x0, #8]
  40a7ec:	ldr	x2, [sp, #136]
  40a7f0:	ldr	x0, [sp, #120]
  40a7f4:	add	x0, x2, x0
  40a7f8:	add	x0, x1, x0
  40a7fc:	str	x0, [sp, #72]
  40a800:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a804:	add	x0, x0, #0x658
  40a808:	ldr	x1, [x0, #8]
  40a80c:	ldr	x2, [sp, #136]
  40a810:	ldr	x0, [sp, #96]
  40a814:	add	x0, x2, x0
  40a818:	add	x0, x1, x0
  40a81c:	str	x0, [sp, #64]
  40a820:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a824:	add	x0, x0, #0x658
  40a828:	ldr	x1, [x0, #16]
  40a82c:	ldr	x0, [sp, #136]
  40a830:	sub	x1, x1, x0
  40a834:	ldr	x0, [sp, #120]
  40a838:	sub	x0, x1, x0
  40a83c:	add	x0, x0, #0x1
  40a840:	str	x0, [sp, #56]
  40a844:	ldr	x1, [sp, #96]
  40a848:	ldr	x0, [sp, #120]
  40a84c:	sub	x0, x1, x0
  40a850:	str	x0, [sp, #48]
  40a854:	ldr	x2, [sp, #56]
  40a858:	ldr	x1, [sp, #72]
  40a85c:	ldr	x0, [sp, #64]
  40a860:	bl	4026e0 <memmove@plt>
  40a864:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a868:	add	x0, x0, #0x658
  40a86c:	ldr	x1, [x0, #16]
  40a870:	ldr	x0, [sp, #48]
  40a874:	add	x1, x1, x0
  40a878:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a87c:	add	x0, x0, #0x658
  40a880:	str	x1, [x0, #16]
  40a884:	ldr	x1, [sp, #136]
  40a888:	ldr	x0, [sp, #48]
  40a88c:	add	x0, x1, x0
  40a890:	str	x0, [sp, #136]
  40a894:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a898:	add	x0, x0, #0x658
  40a89c:	ldr	x1, [x0, #8]
  40a8a0:	ldr	x0, [sp, #80]
  40a8a4:	add	x3, x1, x0
  40a8a8:	ldr	w0, [sp, #132]
  40a8ac:	lsl	w0, w0, #1
  40a8b0:	add	w0, w0, #0x1
  40a8b4:	mov	w0, w0
  40a8b8:	lsl	x0, x0, #3
  40a8bc:	ldr	x1, [sp, #24]
  40a8c0:	add	x0, x1, x0
  40a8c4:	ldr	x0, [x0]
  40a8c8:	ldr	x2, [sp, #96]
  40a8cc:	mov	x1, x0
  40a8d0:	mov	x0, x3
  40a8d4:	bl	4026d0 <memcpy@plt>
  40a8d8:	b	40a90c <wcrtomb@plt+0x7b1c>
  40a8dc:	ldr	w0, [sp, #132]
  40a8e0:	add	w0, w0, #0x1
  40a8e4:	str	w0, [sp, #132]
  40a8e8:	ldr	w0, [sp, #132]
  40a8ec:	lsl	w0, w0, #1
  40a8f0:	mov	w0, w0
  40a8f4:	lsl	x0, x0, #3
  40a8f8:	ldr	x1, [sp, #24]
  40a8fc:	add	x0, x1, x0
  40a900:	ldr	x0, [x0]
  40a904:	cmp	x0, #0x0
  40a908:	b.ne	40a6b8 <wcrtomb@plt+0x78c8>  // b.any
  40a90c:	ldr	x1, [sp, #136]
  40a910:	ldr	x0, [sp, #120]
  40a914:	add	x0, x1, x0
  40a918:	str	x0, [sp, #136]
  40a91c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40a920:	add	x0, x0, #0x658
  40a924:	ldr	x0, [x0, #16]
  40a928:	ldr	x1, [sp, #136]
  40a92c:	cmp	x1, x0
  40a930:	b.cc	40a624 <wcrtomb@plt+0x7834>  // b.lo, b.ul, b.last
  40a934:	nop
  40a938:	nop
  40a93c:	ldp	x29, x30, [sp], #144
  40a940:	ret
  40a944:	stp	x29, x30, [sp, #-16]!
  40a948:	mov	x29, sp
  40a94c:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40a950:	add	x0, x0, #0x380
  40a954:	bl	402ae0 <puts@plt>
  40a958:	nop
  40a95c:	ldp	x29, x30, [sp], #16
  40a960:	ret
  40a964:	stp	x29, x30, [sp, #-48]!
  40a968:	mov	x29, sp
  40a96c:	str	x0, [sp, #24]
  40a970:	ldr	x0, [sp, #24]
  40a974:	ldr	x0, [x0, #184]
  40a978:	cmp	x0, #0x0
  40a97c:	b.eq	40a99c <wcrtomb@plt+0x7bac>  // b.none
  40a980:	ldr	x0, [sp, #24]
  40a984:	ldr	x0, [x0, #184]
  40a988:	bl	402810 <fileno@plt>
  40a98c:	cmp	w0, #0x0
  40a990:	b.ne	40a99c <wcrtomb@plt+0x7bac>  // b.any
  40a994:	mov	w0, #0x1                   	// #1
  40a998:	b	40a9a0 <wcrtomb@plt+0x7bb0>
  40a99c:	mov	w0, #0x0                   	// #0
  40a9a0:	strb	w0, [sp, #47]
  40a9a4:	ldrb	w0, [sp, #47]
  40a9a8:	and	w0, w0, #0x1
  40a9ac:	strb	w0, [sp, #47]
  40a9b0:	ldrb	w0, [sp, #47]
  40a9b4:	cmp	w0, #0x0
  40a9b8:	b.eq	40a9c8 <wcrtomb@plt+0x7bd8>  // b.none
  40a9bc:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40a9c0:	add	x0, x0, #0x390
  40a9c4:	b	40a9d0 <wcrtomb@plt+0x7be0>
  40a9c8:	ldr	x0, [sp, #24]
  40a9cc:	ldr	x0, [x0, #48]
  40a9d0:	ldr	x1, [sp, #24]
  40a9d4:	ldr	x1, [x1, #16]
  40a9d8:	mov	x2, x1
  40a9dc:	mov	x1, x0
  40a9e0:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40a9e4:	add	x0, x0, #0x398
  40a9e8:	bl	402d20 <printf@plt>
  40a9ec:	nop
  40a9f0:	ldp	x29, x30, [sp], #48
  40a9f4:	ret
  40a9f8:	stp	x29, x30, [sp, #-64]!
  40a9fc:	mov	x29, sp
  40aa00:	str	x0, [sp, #24]
  40aa04:	ldr	x0, [sp, #24]
  40aa08:	ldr	x0, [x0, #8]
  40aa0c:	cmp	x0, #0x0
  40aa10:	b.eq	40aa20 <wcrtomb@plt+0x7c30>  // b.none
  40aa14:	ldr	x0, [sp, #24]
  40aa18:	ldr	x0, [x0, #8]
  40aa1c:	b	40aa28 <wcrtomb@plt+0x7c38>
  40aa20:	ldr	x0, [sp, #24]
  40aa24:	ldr	x0, [x0]
  40aa28:	str	x0, [sp, #40]
  40aa2c:	ldr	x0, [sp, #24]
  40aa30:	ldr	x0, [x0, #16]
  40aa34:	str	x0, [sp, #56]
  40aa38:	ldr	x0, [sp, #40]
  40aa3c:	str	x0, [sp, #48]
  40aa40:	ldr	x1, [sp, #24]
  40aa44:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40aa48:	add	x0, x0, #0x6b8
  40aa4c:	cmp	x1, x0
  40aa50:	b.ne	40aa60 <wcrtomb@plt+0x7c70>  // b.any
  40aa54:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40aa58:	add	x0, x0, #0x3b0
  40aa5c:	b	40aa68 <wcrtomb@plt+0x7c78>
  40aa60:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40aa64:	add	x0, x0, #0x3c0
  40aa68:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40aa6c:	add	x1, x1, #0x520
  40aa70:	ldr	x1, [x1]
  40aa74:	bl	402ca0 <fputs_unlocked@plt>
  40aa78:	b	40aa90 <wcrtomb@plt+0x7ca0>
  40aa7c:	ldr	x0, [sp, #48]
  40aa80:	add	x1, x0, #0x1
  40aa84:	str	x1, [sp, #48]
  40aa88:	ldrb	w0, [x0]
  40aa8c:	bl	406ca0 <wcrtomb@plt+0x3eb0>
  40aa90:	ldr	x0, [sp, #56]
  40aa94:	sub	x1, x0, #0x1
  40aa98:	str	x1, [sp, #56]
  40aa9c:	cmp	x0, #0x0
  40aaa0:	b.ne	40aa7c <wcrtomb@plt+0x7c8c>  // b.any
  40aaa4:	mov	w0, #0xa                   	// #10
  40aaa8:	bl	4029b0 <putchar_unlocked@plt>
  40aaac:	nop
  40aab0:	ldp	x29, x30, [sp], #64
  40aab4:	ret
  40aab8:	mov	x12, #0x10a0                	// #4256
  40aabc:	sub	sp, sp, x12
  40aac0:	stp	x29, x30, [sp]
  40aac4:	mov	x29, sp
  40aac8:	str	x0, [sp, #24]
  40aacc:	str	x1, [sp, #16]
  40aad0:	ldr	x0, [sp, #24]
  40aad4:	ldr	x0, [x0]
  40aad8:	str	x0, [sp, #4248]
  40aadc:	ldr	x0, [sp, #24]
  40aae0:	ldr	x2, [x0]
  40aae4:	ldr	x0, [sp, #24]
  40aae8:	ldr	x1, [x0, #16]
  40aaec:	mov	x0, x1
  40aaf0:	lsl	x0, x0, #2
  40aaf4:	add	x0, x0, x1
  40aaf8:	lsl	x0, x0, #3
  40aafc:	add	x0, x2, x0
  40ab00:	str	x0, [sp, #4224]
  40ab04:	b	40b920 <wcrtomb@plt+0x8b30>
  40ab08:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ab0c:	add	x0, x0, #0x761
  40ab10:	ldrb	w0, [x0]
  40ab14:	cmp	w0, #0x0
  40ab18:	b.eq	40ab4c <wcrtomb@plt+0x7d5c>  // b.none
  40ab1c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ab20:	add	x0, x0, #0x520
  40ab24:	ldr	x0, [x0]
  40ab28:	mov	x3, x0
  40ab2c:	mov	x2, #0x9                   	// #9
  40ab30:	mov	x1, #0x1                   	// #1
  40ab34:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40ab38:	add	x0, x0, #0x3d0
  40ab3c:	bl	402710 <fwrite_unlocked@plt>
  40ab40:	ldr	x1, [sp, #4248]
  40ab44:	ldr	x0, [sp, #24]
  40ab48:	bl	407840 <wcrtomb@plt+0x4a50>
  40ab4c:	ldr	x1, [sp, #16]
  40ab50:	ldr	x0, [sp, #4248]
  40ab54:	bl	40957c <wcrtomb@plt+0x678c>
  40ab58:	and	w0, w0, #0xff
  40ab5c:	mov	w1, w0
  40ab60:	ldr	x0, [sp, #4248]
  40ab64:	ldrb	w0, [x0, #20]
  40ab68:	cmp	w1, w0
  40ab6c:	b.eq	40b890 <wcrtomb@plt+0x8aa0>  // b.none
  40ab70:	ldr	x0, [sp, #4248]
  40ab74:	ldrb	w0, [x0, #21]
  40ab78:	sub	w0, w0, #0x23
  40ab7c:	cmp	w0, #0x5a
  40ab80:	b.hi	40b878 <wcrtomb@plt+0x8a88>  // b.pmore
  40ab84:	adrp	x1, 435000 <_obstack_memory_used@@Base+0x18e20>
  40ab88:	add	x1, x1, #0x40c
  40ab8c:	ldr	w0, [x1, w0, uxtw #2]
  40ab90:	adr	x1, 40ab9c <wcrtomb@plt+0x7dac>
  40ab94:	add	x0, x1, w0, sxtw #2
  40ab98:	br	x0
  40ab9c:	bl	408710 <wcrtomb@plt+0x5920>
  40aba0:	str	x0, [sp, #4192]
  40aba4:	ldr	x0, [sp, #4248]
  40aba8:	ldr	x1, [x0, #24]
  40abac:	ldr	x0, [sp, #4192]
  40abb0:	str	x1, [x0, #8]
  40abb4:	ldr	x0, [sp, #4248]
  40abb8:	ldr	x1, [x0, #32]
  40abbc:	ldr	x0, [sp, #4192]
  40abc0:	str	x1, [x0, #16]
  40abc4:	b	40b914 <wcrtomb@plt+0x8b24>
  40abc8:	ldr	x0, [sp, #24]
  40abcc:	ldr	x2, [x0]
  40abd0:	ldr	x0, [sp, #4248]
  40abd4:	ldr	x1, [x0, #24]
  40abd8:	mov	x0, x1
  40abdc:	lsl	x0, x0, #2
  40abe0:	add	x0, x0, x1
  40abe4:	lsl	x0, x0, #3
  40abe8:	add	x0, x2, x0
  40abec:	str	x0, [sp, #4248]
  40abf0:	b	40b920 <wcrtomb@plt+0x8b30>
  40abf4:	ldr	x0, [sp, #4248]
  40abf8:	ldr	w0, [x0, #16]
  40abfc:	cmp	w0, #0x1
  40ac00:	b.eq	40ac2c <wcrtomb@plt+0x7e3c>  // b.none
  40ac04:	ldr	x0, [sp, #4248]
  40ac08:	ldr	x4, [x0, #24]
  40ac0c:	ldr	x0, [sp, #4248]
  40ac10:	ldr	x0, [x0, #32]
  40ac14:	sub	x1, x0, #0x1
  40ac18:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ac1c:	add	x3, x0, #0x638
  40ac20:	mov	w2, #0x1                   	// #1
  40ac24:	mov	x0, x4
  40ac28:	bl	408664 <wcrtomb@plt+0x5874>
  40ac2c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ac30:	add	x0, x0, #0x761
  40ac34:	ldrb	w0, [x0]
  40ac38:	cmp	w0, #0x0
  40ac3c:	b.eq	40ac44 <wcrtomb@plt+0x7e54>  // b.none
  40ac40:	bl	40a944 <wcrtomb@plt+0x7b54>
  40ac44:	mov	w0, #0xffffffff            	// #-1
  40ac48:	b	40b9a0 <wcrtomb@plt+0x8bb0>
  40ac4c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ac50:	add	x0, x0, #0x658
  40ac54:	ldr	x3, [x0, #8]
  40ac58:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ac5c:	add	x0, x0, #0x470
  40ac60:	ldrb	w0, [x0]
  40ac64:	mov	w1, w0
  40ac68:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ac6c:	add	x0, x0, #0x658
  40ac70:	ldr	x0, [x0, #16]
  40ac74:	mov	x2, x0
  40ac78:	mov	x0, x3
  40ac7c:	bl	402c30 <memchr@plt>
  40ac80:	str	x0, [sp, #4152]
  40ac84:	ldr	x0, [sp, #4152]
  40ac88:	cmp	x0, #0x0
  40ac8c:	b.ne	40ac98 <wcrtomb@plt+0x7ea8>  // b.any
  40ac90:	mov	w0, #0xffffffff            	// #-1
  40ac94:	b	40b9a0 <wcrtomb@plt+0x8bb0>
  40ac98:	ldr	x0, [sp, #4152]
  40ac9c:	add	x0, x0, #0x1
  40aca0:	str	x0, [sp, #4152]
  40aca4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40aca8:	add	x0, x0, #0x658
  40acac:	ldr	x0, [x0, #24]
  40acb0:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40acb4:	add	x1, x1, #0x658
  40acb8:	ldr	x1, [x1, #8]
  40acbc:	ldr	x2, [sp, #4152]
  40acc0:	sub	x1, x2, x1
  40acc4:	sub	x1, x0, x1
  40acc8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40accc:	add	x0, x0, #0x658
  40acd0:	str	x1, [x0, #24]
  40acd4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40acd8:	add	x0, x0, #0x658
  40acdc:	ldr	x0, [x0, #16]
  40ace0:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ace4:	add	x1, x1, #0x658
  40ace8:	ldr	x1, [x1, #8]
  40acec:	ldr	x2, [sp, #4152]
  40acf0:	sub	x1, x2, x1
  40acf4:	sub	x1, x0, x1
  40acf8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40acfc:	add	x0, x0, #0x658
  40ad00:	str	x1, [x0, #16]
  40ad04:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ad08:	add	x0, x0, #0x658
  40ad0c:	ldr	x1, [sp, #4152]
  40ad10:	str	x1, [x0, #8]
  40ad14:	ldr	x0, [sp, #24]
  40ad18:	ldr	x0, [x0]
  40ad1c:	str	x0, [sp, #4248]
  40ad20:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ad24:	add	x0, x0, #0x761
  40ad28:	ldrb	w0, [x0]
  40ad2c:	cmp	w0, #0x0
  40ad30:	b.eq	40b920 <wcrtomb@plt+0x8b30>  // b.none
  40ad34:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ad38:	add	x0, x0, #0x658
  40ad3c:	bl	40a9f8 <wcrtomb@plt+0x7c08>
  40ad40:	b	40b920 <wcrtomb@plt+0x8b30>
  40ad44:	ldr	x0, [sp, #4248]
  40ad48:	ldr	x0, [x0, #32]
  40ad4c:	str	w0, [sp, #4204]
  40ad50:	mov	x1, #0x0                   	// #0
  40ad54:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ad58:	add	x0, x0, #0x688
  40ad5c:	bl	408204 <wcrtomb@plt+0x5414>
  40ad60:	ldr	w0, [sp, #4204]
  40ad64:	cmp	w0, #0x0
  40ad68:	b.ne	40ada8 <wcrtomb@plt+0x7fb8>  // b.any
  40ad6c:	mov	x2, #0x1                   	// #1
  40ad70:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40ad74:	add	x1, x0, #0x358
  40ad78:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ad7c:	add	x0, x0, #0x658
  40ad80:	bl	407be8 <wcrtomb@plt+0x4df8>
  40ad84:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ad88:	add	x0, x0, #0x658
  40ad8c:	ldr	x2, [x0, #8]
  40ad90:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40ad94:	add	x1, x0, #0x360
  40ad98:	mov	x0, x2
  40ad9c:	bl	402910 <popen@plt>
  40ada0:	str	x0, [sp, #4240]
  40ada4:	b	40ade8 <wcrtomb@plt+0x7ff8>
  40ada8:	ldr	x0, [sp, #4248]
  40adac:	ldr	x1, [x0, #24]
  40adb0:	ldrsw	x0, [sp, #4204]
  40adb4:	sub	x0, x0, #0x1
  40adb8:	add	x0, x1, x0
  40adbc:	strb	wzr, [x0]
  40adc0:	ldr	x0, [sp, #4248]
  40adc4:	ldr	x2, [x0, #24]
  40adc8:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40adcc:	add	x1, x0, #0x360
  40add0:	mov	x0, x2
  40add4:	bl	402910 <popen@plt>
  40add8:	str	x0, [sp, #4240]
  40addc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ade0:	add	x0, x0, #0x638
  40ade4:	bl	4085e0 <wcrtomb@plt+0x57f0>
  40ade8:	ldr	x0, [sp, #4240]
  40adec:	cmp	x0, #0x0
  40adf0:	b.ne	40ae78 <wcrtomb@plt+0x8088>  // b.any
  40adf4:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40adf8:	add	x0, x0, #0x368
  40adfc:	bl	402d80 <gettext@plt>
  40ae00:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40ae04:	add	x0, sp, #0x28
  40ae08:	ldr	x3, [sp, #4240]
  40ae0c:	mov	x2, #0x1000                	// #4096
  40ae10:	mov	x1, #0x1                   	// #1
  40ae14:	bl	402af0 <fread_unlocked@plt>
  40ae18:	str	w0, [sp, #4200]
  40ae1c:	ldr	w0, [sp, #4200]
  40ae20:	cmp	w0, #0x0
  40ae24:	b.le	40ae78 <wcrtomb@plt+0x8088>
  40ae28:	ldr	w0, [sp, #4204]
  40ae2c:	cmp	w0, #0x0
  40ae30:	b.ne	40ae54 <wcrtomb@plt+0x8064>  // b.any
  40ae34:	ldrsw	x1, [sp, #4200]
  40ae38:	add	x0, sp, #0x28
  40ae3c:	mov	x2, x1
  40ae40:	mov	x1, x0
  40ae44:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ae48:	add	x0, x0, #0x688
  40ae4c:	bl	407be8 <wcrtomb@plt+0x4df8>
  40ae50:	b	40ae78 <wcrtomb@plt+0x8088>
  40ae54:	ldrsw	x1, [sp, #4200]
  40ae58:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ae5c:	add	x0, x0, #0x638
  40ae60:	ldr	x2, [x0, #16]
  40ae64:	add	x0, sp, #0x28
  40ae68:	mov	x3, x2
  40ae6c:	mov	x2, x1
  40ae70:	mov	x1, #0x1                   	// #1
  40ae74:	bl	40d840 <wcrtomb@plt+0xaa50>
  40ae78:	ldr	x0, [sp, #4240]
  40ae7c:	bl	402bb0 <feof_unlocked@plt>
  40ae80:	cmp	w0, #0x0
  40ae84:	b.eq	40ae04 <wcrtomb@plt+0x8014>  // b.none
  40ae88:	ldr	x0, [sp, #4240]
  40ae8c:	bl	402cd0 <pclose@plt>
  40ae90:	ldr	w0, [sp, #4204]
  40ae94:	cmp	w0, #0x0
  40ae98:	b.ne	40af20 <wcrtomb@plt+0x8130>  // b.any
  40ae9c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40aea0:	add	x0, x0, #0x688
  40aea4:	ldr	x0, [x0, #16]
  40aea8:	cmp	x0, #0x0
  40aeac:	b.eq	40af04 <wcrtomb@plt+0x8114>  // b.none
  40aeb0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40aeb4:	add	x0, x0, #0x688
  40aeb8:	ldr	x1, [x0, #8]
  40aebc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40aec0:	add	x0, x0, #0x688
  40aec4:	ldr	x0, [x0, #16]
  40aec8:	sub	x0, x0, #0x1
  40aecc:	add	x0, x1, x0
  40aed0:	ldrb	w1, [x0]
  40aed4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40aed8:	add	x0, x0, #0x470
  40aedc:	ldrb	w0, [x0]
  40aee0:	cmp	w1, w0
  40aee4:	b.ne	40af04 <wcrtomb@plt+0x8114>  // b.any
  40aee8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40aeec:	add	x0, x0, #0x688
  40aef0:	ldr	x0, [x0, #16]
  40aef4:	sub	x1, x0, #0x1
  40aef8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40aefc:	add	x0, x0, #0x688
  40af00:	str	x1, [x0, #16]
  40af04:	mov	w2, #0x1                   	// #1
  40af08:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40af0c:	add	x1, x0, #0x688
  40af10:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40af14:	add	x0, x0, #0x658
  40af18:	bl	408464 <wcrtomb@plt+0x5674>
  40af1c:	b	40b914 <wcrtomb@plt+0x8b24>
  40af20:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40af24:	add	x0, x0, #0x638
  40af28:	ldr	x0, [x0, #16]
  40af2c:	bl	408630 <wcrtomb@plt+0x5840>
  40af30:	b	40b914 <wcrtomb@plt+0x8b24>
  40af34:	mov	w2, #0x1                   	// #1
  40af38:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40af3c:	add	x1, x0, #0x658
  40af40:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40af44:	add	x0, x0, #0x6b8
  40af48:	bl	408288 <wcrtomb@plt+0x5498>
  40af4c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40af50:	add	x0, x0, #0x761
  40af54:	ldrb	w0, [x0]
  40af58:	cmp	w0, #0x0
  40af5c:	b.eq	40b8a0 <wcrtomb@plt+0x8ab0>  // b.none
  40af60:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40af64:	add	x0, x0, #0x6b8
  40af68:	bl	40a9f8 <wcrtomb@plt+0x7c08>
  40af6c:	b	40b8a0 <wcrtomb@plt+0x8ab0>
  40af70:	mov	w2, #0x1                   	// #1
  40af74:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40af78:	add	x1, x0, #0x658
  40af7c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40af80:	add	x0, x0, #0x6b8
  40af84:	bl	4083e0 <wcrtomb@plt+0x55f0>
  40af88:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40af8c:	add	x0, x0, #0x761
  40af90:	ldrb	w0, [x0]
  40af94:	cmp	w0, #0x0
  40af98:	b.eq	40b8a8 <wcrtomb@plt+0x8ab8>  // b.none
  40af9c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40afa0:	add	x0, x0, #0x658
  40afa4:	bl	40a9f8 <wcrtomb@plt+0x7c08>
  40afa8:	b	40b8a8 <wcrtomb@plt+0x8ab8>
  40afac:	mov	w2, #0x1                   	// #1
  40afb0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40afb4:	add	x1, x0, #0x6b8
  40afb8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40afbc:	add	x0, x0, #0x658
  40afc0:	bl	408288 <wcrtomb@plt+0x5498>
  40afc4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40afc8:	add	x0, x0, #0x761
  40afcc:	ldrb	w0, [x0]
  40afd0:	cmp	w0, #0x0
  40afd4:	b.eq	40b8b0 <wcrtomb@plt+0x8ac0>  // b.none
  40afd8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40afdc:	add	x0, x0, #0x6b8
  40afe0:	bl	40a9f8 <wcrtomb@plt+0x7c08>
  40afe4:	b	40b8b0 <wcrtomb@plt+0x8ac0>
  40afe8:	mov	w2, #0x1                   	// #1
  40afec:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40aff0:	add	x1, x0, #0x6b8
  40aff4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40aff8:	add	x0, x0, #0x658
  40affc:	bl	4083e0 <wcrtomb@plt+0x55f0>
  40b000:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b004:	add	x0, x0, #0x761
  40b008:	ldrb	w0, [x0]
  40b00c:	cmp	w0, #0x0
  40b010:	b.eq	40b8b8 <wcrtomb@plt+0x8ac8>  // b.none
  40b014:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b018:	add	x0, x0, #0x6b8
  40b01c:	bl	40a9f8 <wcrtomb@plt+0x7c08>
  40b020:	b	40b8b8 <wcrtomb@plt+0x8ac8>
  40b024:	ldr	x0, [sp, #4248]
  40b028:	ldr	x4, [x0, #24]
  40b02c:	ldr	x0, [sp, #4248]
  40b030:	ldr	x0, [x0, #32]
  40b034:	sub	x1, x0, #0x1
  40b038:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b03c:	add	x3, x0, #0x638
  40b040:	mov	w2, #0x1                   	// #1
  40b044:	mov	x0, x4
  40b048:	bl	408664 <wcrtomb@plt+0x5874>
  40b04c:	b	40b914 <wcrtomb@plt+0x8b24>
  40b050:	ldr	x0, [sp, #4248]
  40b054:	ldr	w0, [x0, #24]
  40b058:	cmn	w0, #0x1
  40b05c:	b.eq	40b06c <wcrtomb@plt+0x827c>  // b.none
  40b060:	ldr	x0, [sp, #4248]
  40b064:	ldr	w0, [x0, #24]
  40b068:	b	40b078 <wcrtomb@plt+0x8288>
  40b06c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b070:	add	x0, x0, #0x488
  40b074:	ldr	x0, [x0]
  40b078:	bl	409838 <wcrtomb@plt+0x6a48>
  40b07c:	b	40b914 <wcrtomb@plt+0x8b24>
  40b080:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b084:	add	x0, x0, #0x75d
  40b088:	ldrb	w0, [x0]
  40b08c:	eor	w0, w0, #0x1
  40b090:	and	w0, w0, #0xff
  40b094:	cmp	w0, #0x0
  40b098:	b.eq	40b0d4 <wcrtomb@plt+0x82e4>  // b.none
  40b09c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b0a0:	add	x0, x0, #0x658
  40b0a4:	ldr	x4, [x0, #8]
  40b0a8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b0ac:	add	x0, x0, #0x658
  40b0b0:	ldr	x1, [x0, #16]
  40b0b4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b0b8:	add	x0, x0, #0x658
  40b0bc:	ldrb	w0, [x0, #32]
  40b0c0:	mov	w2, w0
  40b0c4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b0c8:	add	x3, x0, #0x638
  40b0cc:	mov	x0, x4
  40b0d0:	bl	408664 <wcrtomb@plt+0x5874>
  40b0d4:	ldr	x0, [sp, #16]
  40b0d8:	bl	4092b4 <wcrtomb@plt+0x64c4>
  40b0dc:	and	w0, w0, #0xff
  40b0e0:	cmp	w0, #0x0
  40b0e4:	b.ne	40b10c <wcrtomb@plt+0x831c>  // b.any
  40b0e8:	mov	w2, #0x0                   	// #0
  40b0ec:	ldr	x1, [sp, #24]
  40b0f0:	ldr	x0, [sp, #16]
  40b0f4:	bl	4090c8 <wcrtomb@plt+0x62d8>
  40b0f8:	and	w0, w0, #0xff
  40b0fc:	eor	w0, w0, #0x1
  40b100:	and	w0, w0, #0xff
  40b104:	cmp	w0, #0x0
  40b108:	b.eq	40b12c <wcrtomb@plt+0x833c>  // b.none
  40b10c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b110:	add	x0, x0, #0x761
  40b114:	ldrb	w0, [x0]
  40b118:	cmp	w0, #0x0
  40b11c:	b.eq	40b124 <wcrtomb@plt+0x8334>  // b.none
  40b120:	bl	40a944 <wcrtomb@plt+0x7b54>
  40b124:	mov	w0, #0xffffffff            	// #-1
  40b128:	b	40b9a0 <wcrtomb@plt+0x8bb0>
  40b12c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b130:	add	x0, x0, #0x761
  40b134:	ldrb	w0, [x0]
  40b138:	cmp	w0, #0x0
  40b13c:	b.eq	40b8c0 <wcrtomb@plt+0x8ad0>  // b.none
  40b140:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b144:	add	x0, x0, #0x658
  40b148:	bl	40a9f8 <wcrtomb@plt+0x7c08>
  40b14c:	b	40b8c0 <wcrtomb@plt+0x8ad0>
  40b150:	mov	x2, #0x1                   	// #1
  40b154:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b158:	add	x1, x0, #0x470
  40b15c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b160:	add	x0, x0, #0x658
  40b164:	bl	407be8 <wcrtomb@plt+0x4df8>
  40b168:	ldr	x0, [sp, #16]
  40b16c:	bl	4092b4 <wcrtomb@plt+0x64c4>
  40b170:	and	w0, w0, #0xff
  40b174:	cmp	w0, #0x0
  40b178:	b.ne	40b1a0 <wcrtomb@plt+0x83b0>  // b.any
  40b17c:	mov	w2, #0x1                   	// #1
  40b180:	ldr	x1, [sp, #24]
  40b184:	ldr	x0, [sp, #16]
  40b188:	bl	4090c8 <wcrtomb@plt+0x62d8>
  40b18c:	and	w0, w0, #0xff
  40b190:	eor	w0, w0, #0x1
  40b194:	and	w0, w0, #0xff
  40b198:	cmp	w0, #0x0
  40b19c:	b.eq	40b244 <wcrtomb@plt+0x8454>  // b.none
  40b1a0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b1a4:	add	x0, x0, #0x761
  40b1a8:	ldrb	w0, [x0]
  40b1ac:	cmp	w0, #0x0
  40b1b0:	b.eq	40b1b8 <wcrtomb@plt+0x83c8>  // b.none
  40b1b4:	bl	40a944 <wcrtomb@plt+0x7b54>
  40b1b8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b1bc:	add	x0, x0, #0x658
  40b1c0:	ldr	x0, [x0, #16]
  40b1c4:	sub	x1, x0, #0x1
  40b1c8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b1cc:	add	x0, x0, #0x658
  40b1d0:	str	x1, [x0, #16]
  40b1d4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b1d8:	add	x0, x0, #0x8e8
  40b1dc:	ldr	w0, [x0]
  40b1e0:	cmp	w0, #0x0
  40b1e4:	b.ne	40b23c <wcrtomb@plt+0x844c>  // b.any
  40b1e8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b1ec:	add	x0, x0, #0x75d
  40b1f0:	ldrb	w0, [x0]
  40b1f4:	eor	w0, w0, #0x1
  40b1f8:	and	w0, w0, #0xff
  40b1fc:	cmp	w0, #0x0
  40b200:	b.eq	40b23c <wcrtomb@plt+0x844c>  // b.none
  40b204:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b208:	add	x0, x0, #0x658
  40b20c:	ldr	x4, [x0, #8]
  40b210:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b214:	add	x0, x0, #0x658
  40b218:	ldr	x1, [x0, #16]
  40b21c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b220:	add	x0, x0, #0x658
  40b224:	ldrb	w0, [x0, #32]
  40b228:	mov	w2, w0
  40b22c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b230:	add	x3, x0, #0x638
  40b234:	mov	x0, x4
  40b238:	bl	408664 <wcrtomb@plt+0x5874>
  40b23c:	mov	w0, #0xffffffff            	// #-1
  40b240:	b	40b9a0 <wcrtomb@plt+0x8bb0>
  40b244:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b248:	add	x0, x0, #0x761
  40b24c:	ldrb	w0, [x0]
  40b250:	cmp	w0, #0x0
  40b254:	b.eq	40b8c8 <wcrtomb@plt+0x8ad8>  // b.none
  40b258:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b25c:	add	x0, x0, #0x658
  40b260:	bl	40a9f8 <wcrtomb@plt+0x7c08>
  40b264:	b	40b8c8 <wcrtomb@plt+0x8ad8>
  40b268:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b26c:	add	x0, x0, #0x658
  40b270:	ldr	x4, [x0, #8]
  40b274:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b278:	add	x0, x0, #0x658
  40b27c:	ldr	x1, [x0, #16]
  40b280:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b284:	add	x0, x0, #0x658
  40b288:	ldrb	w0, [x0, #32]
  40b28c:	mov	w2, w0
  40b290:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b294:	add	x3, x0, #0x638
  40b298:	mov	x0, x4
  40b29c:	bl	408664 <wcrtomb@plt+0x5874>
  40b2a0:	b	40b914 <wcrtomb@plt+0x8b24>
  40b2a4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b2a8:	add	x0, x0, #0x658
  40b2ac:	ldr	x3, [x0, #8]
  40b2b0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b2b4:	add	x0, x0, #0x470
  40b2b8:	ldrb	w0, [x0]
  40b2bc:	mov	w1, w0
  40b2c0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b2c4:	add	x0, x0, #0x658
  40b2c8:	ldr	x0, [x0, #16]
  40b2cc:	mov	x2, x0
  40b2d0:	mov	x0, x3
  40b2d4:	bl	402c30 <memchr@plt>
  40b2d8:	str	x0, [sp, #4160]
  40b2dc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b2e0:	add	x0, x0, #0x658
  40b2e4:	ldr	x4, [x0, #8]
  40b2e8:	ldr	x0, [sp, #4160]
  40b2ec:	cmp	x0, #0x0
  40b2f0:	b.eq	40b30c <wcrtomb@plt+0x851c>  // b.none
  40b2f4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b2f8:	add	x0, x0, #0x658
  40b2fc:	ldr	x0, [x0, #8]
  40b300:	ldr	x1, [sp, #4160]
  40b304:	sub	x0, x1, x0
  40b308:	b	40b318 <wcrtomb@plt+0x8528>
  40b30c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b310:	add	x0, x0, #0x658
  40b314:	ldr	x0, [x0, #16]
  40b318:	ldr	x1, [sp, #4160]
  40b31c:	cmp	x1, #0x0
  40b320:	b.ne	40b334 <wcrtomb@plt+0x8544>  // b.any
  40b324:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b328:	add	x1, x1, #0x658
  40b32c:	ldrb	w1, [x1, #32]
  40b330:	b	40b338 <wcrtomb@plt+0x8548>
  40b334:	mov	w1, #0x1                   	// #1
  40b338:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b33c:	add	x3, x2, #0x638
  40b340:	mov	w2, w1
  40b344:	mov	x1, x0
  40b348:	mov	x0, x4
  40b34c:	bl	408664 <wcrtomb@plt+0x5874>
  40b350:	b	40b914 <wcrtomb@plt+0x8b24>
  40b354:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b358:	add	x0, x0, #0x75d
  40b35c:	ldrb	w0, [x0]
  40b360:	eor	w0, w0, #0x1
  40b364:	and	w0, w0, #0xff
  40b368:	cmp	w0, #0x0
  40b36c:	b.eq	40b3a8 <wcrtomb@plt+0x85b8>  // b.none
  40b370:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b374:	add	x0, x0, #0x658
  40b378:	ldr	x4, [x0, #8]
  40b37c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b380:	add	x0, x0, #0x658
  40b384:	ldr	x1, [x0, #16]
  40b388:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b38c:	add	x0, x0, #0x658
  40b390:	ldrb	w0, [x0, #32]
  40b394:	mov	w2, w0
  40b398:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b39c:	add	x3, x0, #0x638
  40b3a0:	mov	x0, x4
  40b3a4:	bl	408664 <wcrtomb@plt+0x5874>
  40b3a8:	bl	408840 <wcrtomb@plt+0x5a50>
  40b3ac:	ldr	x0, [sp, #4248]
  40b3b0:	ldr	w0, [x0, #24]
  40b3b4:	cmn	w0, #0x1
  40b3b8:	b.eq	40b3c8 <wcrtomb@plt+0x85d8>  // b.none
  40b3bc:	ldr	x0, [sp, #4248]
  40b3c0:	ldr	w0, [x0, #24]
  40b3c4:	b	40b9a0 <wcrtomb@plt+0x8bb0>
  40b3c8:	mov	w0, #0x0                   	// #0
  40b3cc:	b	40b9a0 <wcrtomb@plt+0x8bb0>
  40b3d0:	ldr	x0, [sp, #4248]
  40b3d4:	ldr	x0, [x0, #24]
  40b3d8:	cmp	x0, #0x0
  40b3dc:	b.eq	40b8d0 <wcrtomb@plt+0x8ae0>  // b.none
  40b3e0:	bl	408710 <wcrtomb@plt+0x5920>
  40b3e4:	str	x0, [sp, #4208]
  40b3e8:	ldr	x0, [sp, #4248]
  40b3ec:	ldr	x1, [x0, #24]
  40b3f0:	ldr	x0, [sp, #4208]
  40b3f4:	str	x1, [x0]
  40b3f8:	b	40b8d0 <wcrtomb@plt+0x8ae0>
  40b3fc:	ldr	x0, [sp, #4248]
  40b400:	ldr	x0, [x0, #24]
  40b404:	ldr	x0, [x0, #16]
  40b408:	cmp	x0, #0x0
  40b40c:	b.eq	40b8d8 <wcrtomb@plt+0x8ae8>  // b.none
  40b410:	ldr	x0, [sp, #4248]
  40b414:	ldr	x0, [x0, #24]
  40b418:	ldr	x0, [x0, #16]
  40b41c:	bl	402bb0 <feof_unlocked@plt>
  40b420:	cmp	w0, #0x0
  40b424:	b.ne	40b8d8 <wcrtomb@plt+0x8ae8>  // b.any
  40b428:	str	xzr, [sp, #4136]
  40b42c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b430:	add	x0, x0, #0x470
  40b434:	ldrb	w4, [x0]
  40b438:	ldr	x0, [sp, #4248]
  40b43c:	ldr	x0, [x0, #24]
  40b440:	ldr	x2, [x0, #16]
  40b444:	add	x1, sp, #0x1, lsl #12
  40b448:	add	x1, x1, #0x30
  40b44c:	add	x0, sp, #0x1, lsl #12
  40b450:	add	x0, x0, #0x28
  40b454:	mov	x3, x2
  40b458:	mov	w2, w4
  40b45c:	bl	40d998 <wcrtomb@plt+0xaba8>
  40b460:	str	w0, [sp, #4180]
  40b464:	ldr	w0, [sp, #4180]
  40b468:	cmn	w0, #0x1
  40b46c:	b.eq	40b4a0 <wcrtomb@plt+0x86b0>  // b.none
  40b470:	bl	408710 <wcrtomb@plt+0x5920>
  40b474:	str	x0, [sp, #4168]
  40b478:	ldr	x0, [sp, #4168]
  40b47c:	mov	w1, #0x1                   	// #1
  40b480:	strb	w1, [x0, #32]
  40b484:	ldr	x1, [sp, #4136]
  40b488:	ldr	x0, [sp, #4168]
  40b48c:	str	x1, [x0, #8]
  40b490:	ldrsw	x1, [sp, #4180]
  40b494:	ldr	x0, [sp, #4168]
  40b498:	str	x1, [x0, #16]
  40b49c:	b	40b8d8 <wcrtomb@plt+0x8ae8>
  40b4a0:	ldr	x0, [sp, #4136]
  40b4a4:	bl	402b60 <free@plt>
  40b4a8:	b	40b8d8 <wcrtomb@plt+0x8ae8>
  40b4ac:	ldr	x0, [sp, #4248]
  40b4b0:	ldr	x0, [x0, #24]
  40b4b4:	bl	409d48 <wcrtomb@plt+0x6f58>
  40b4b8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b4bc:	add	x0, x0, #0x761
  40b4c0:	ldrb	w0, [x0]
  40b4c4:	cmp	w0, #0x0
  40b4c8:	b.eq	40b8e0 <wcrtomb@plt+0x8af0>  // b.none
  40b4cc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b4d0:	add	x0, x0, #0x658
  40b4d4:	bl	40a9f8 <wcrtomb@plt+0x7c08>
  40b4d8:	b	40b8e0 <wcrtomb@plt+0x8af0>
  40b4dc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b4e0:	add	x0, x0, #0x630
  40b4e4:	ldrb	w0, [x0]
  40b4e8:	cmp	w0, #0x0
  40b4ec:	b.eq	40b8e8 <wcrtomb@plt+0x8af8>  // b.none
  40b4f0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b4f4:	add	x0, x0, #0x630
  40b4f8:	strb	wzr, [x0]
  40b4fc:	ldr	x0, [sp, #24]
  40b500:	ldr	x2, [x0]
  40b504:	ldr	x0, [sp, #4248]
  40b508:	ldr	x1, [x0, #24]
  40b50c:	mov	x0, x1
  40b510:	lsl	x0, x0, #2
  40b514:	add	x0, x0, x1
  40b518:	lsl	x0, x0, #3
  40b51c:	add	x0, x2, x0
  40b520:	str	x0, [sp, #4248]
  40b524:	b	40b920 <wcrtomb@plt+0x8b30>
  40b528:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b52c:	add	x0, x0, #0x630
  40b530:	ldrb	w0, [x0]
  40b534:	eor	w0, w0, #0x1
  40b538:	and	w0, w0, #0xff
  40b53c:	cmp	w0, #0x0
  40b540:	b.eq	40b570 <wcrtomb@plt+0x8780>  // b.none
  40b544:	ldr	x0, [sp, #24]
  40b548:	ldr	x2, [x0]
  40b54c:	ldr	x0, [sp, #4248]
  40b550:	ldr	x1, [x0, #24]
  40b554:	mov	x0, x1
  40b558:	lsl	x0, x0, #2
  40b55c:	add	x0, x0, x1
  40b560:	lsl	x0, x0, #3
  40b564:	add	x0, x2, x0
  40b568:	str	x0, [sp, #4248]
  40b56c:	b	40b920 <wcrtomb@plt+0x8b30>
  40b570:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b574:	add	x0, x0, #0x630
  40b578:	strb	wzr, [x0]
  40b57c:	b	40b914 <wcrtomb@plt+0x8b24>
  40b580:	ldr	x0, [sp, #4248]
  40b584:	ldr	x0, [x0, #24]
  40b588:	ldr	x0, [x0, #16]
  40b58c:	cmp	x0, #0x0
  40b590:	b.eq	40b8f0 <wcrtomb@plt+0x8b00>  // b.none
  40b594:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b598:	add	x0, x0, #0x658
  40b59c:	ldr	x4, [x0, #8]
  40b5a0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b5a4:	add	x0, x0, #0x658
  40b5a8:	ldr	x1, [x0, #16]
  40b5ac:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b5b0:	add	x0, x0, #0x658
  40b5b4:	ldrb	w0, [x0, #32]
  40b5b8:	mov	w2, w0
  40b5bc:	ldr	x0, [sp, #4248]
  40b5c0:	ldr	x0, [x0, #24]
  40b5c4:	mov	x3, x0
  40b5c8:	mov	x0, x4
  40b5cc:	bl	408664 <wcrtomb@plt+0x5874>
  40b5d0:	b	40b8f0 <wcrtomb@plt+0x8b00>
  40b5d4:	ldr	x0, [sp, #4248]
  40b5d8:	ldr	x0, [x0, #24]
  40b5dc:	ldr	x0, [x0, #16]
  40b5e0:	cmp	x0, #0x0
  40b5e4:	b.eq	40b8f8 <wcrtomb@plt+0x8b08>  // b.none
  40b5e8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b5ec:	add	x0, x0, #0x658
  40b5f0:	ldr	x3, [x0, #8]
  40b5f4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b5f8:	add	x0, x0, #0x470
  40b5fc:	ldrb	w0, [x0]
  40b600:	mov	w1, w0
  40b604:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b608:	add	x0, x0, #0x658
  40b60c:	ldr	x0, [x0, #16]
  40b610:	mov	x2, x0
  40b614:	mov	x0, x3
  40b618:	bl	402c30 <memchr@plt>
  40b61c:	str	x0, [sp, #4184]
  40b620:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b624:	add	x0, x0, #0x658
  40b628:	ldr	x4, [x0, #8]
  40b62c:	ldr	x0, [sp, #4184]
  40b630:	cmp	x0, #0x0
  40b634:	b.eq	40b650 <wcrtomb@plt+0x8860>  // b.none
  40b638:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b63c:	add	x0, x0, #0x658
  40b640:	ldr	x0, [x0, #8]
  40b644:	ldr	x1, [sp, #4184]
  40b648:	sub	x0, x1, x0
  40b64c:	b	40b65c <wcrtomb@plt+0x886c>
  40b650:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b654:	add	x0, x0, #0x658
  40b658:	ldr	x0, [x0, #16]
  40b65c:	ldr	x1, [sp, #4184]
  40b660:	cmp	x1, #0x0
  40b664:	b.ne	40b678 <wcrtomb@plt+0x8888>  // b.any
  40b668:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b66c:	add	x1, x1, #0x658
  40b670:	ldrb	w1, [x1, #32]
  40b674:	b	40b67c <wcrtomb@plt+0x888c>
  40b678:	mov	w1, #0x1                   	// #1
  40b67c:	ldr	x2, [sp, #4248]
  40b680:	ldr	x2, [x2, #24]
  40b684:	mov	x3, x2
  40b688:	mov	w2, w1
  40b68c:	mov	x1, x0
  40b690:	mov	x0, x4
  40b694:	bl	408664 <wcrtomb@plt+0x5874>
  40b698:	b	40b8f8 <wcrtomb@plt+0x8b08>
  40b69c:	mov	w2, #0x0                   	// #0
  40b6a0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b6a4:	add	x1, x0, #0x6b8
  40b6a8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b6ac:	add	x0, x0, #0x658
  40b6b0:	bl	408464 <wcrtomb@plt+0x5674>
  40b6b4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b6b8:	add	x0, x0, #0x761
  40b6bc:	ldrb	w0, [x0]
  40b6c0:	cmp	w0, #0x0
  40b6c4:	b.eq	40b900 <wcrtomb@plt+0x8b10>  // b.none
  40b6c8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b6cc:	add	x0, x0, #0x658
  40b6d0:	bl	40a9f8 <wcrtomb@plt+0x7c08>
  40b6d4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b6d8:	add	x0, x0, #0x6b8
  40b6dc:	bl	40a9f8 <wcrtomb@plt+0x7c08>
  40b6e0:	b	40b900 <wcrtomb@plt+0x8b10>
  40b6e4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b6e8:	add	x0, x0, #0x8e4
  40b6ec:	ldr	w0, [x0]
  40b6f0:	cmp	w0, #0x1
  40b6f4:	b.le	40b708 <wcrtomb@plt+0x8918>
  40b6f8:	ldr	x0, [sp, #4248]
  40b6fc:	ldr	x0, [x0, #24]
  40b700:	bl	40a60c <wcrtomb@plt+0x781c>
  40b704:	b	40b774 <wcrtomb@plt+0x8984>
  40b708:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b70c:	add	x0, x0, #0x658
  40b710:	ldr	x0, [x0, #8]
  40b714:	str	x0, [sp, #4232]
  40b718:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b71c:	add	x0, x0, #0x658
  40b720:	ldr	x0, [x0, #16]
  40b724:	ldr	x1, [sp, #4232]
  40b728:	add	x0, x1, x0
  40b72c:	str	x0, [sp, #4216]
  40b730:	b	40b764 <wcrtomb@plt+0x8974>
  40b734:	ldr	x0, [sp, #4248]
  40b738:	ldr	x1, [x0, #24]
  40b73c:	ldr	x0, [sp, #4232]
  40b740:	ldrb	w0, [x0]
  40b744:	and	x0, x0, #0xff
  40b748:	add	x0, x1, x0
  40b74c:	ldrb	w1, [x0]
  40b750:	ldr	x0, [sp, #4232]
  40b754:	strb	w1, [x0]
  40b758:	ldr	x0, [sp, #4232]
  40b75c:	add	x0, x0, #0x1
  40b760:	str	x0, [sp, #4232]
  40b764:	ldr	x1, [sp, #4232]
  40b768:	ldr	x0, [sp, #4216]
  40b76c:	cmp	x1, x0
  40b770:	b.cc	40b734 <wcrtomb@plt+0x8944>  // b.lo, b.ul, b.last
  40b774:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b778:	add	x0, x0, #0x761
  40b77c:	ldrb	w0, [x0]
  40b780:	cmp	w0, #0x0
  40b784:	b.eq	40b908 <wcrtomb@plt+0x8b18>  // b.none
  40b788:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b78c:	add	x0, x0, #0x658
  40b790:	bl	40a9f8 <wcrtomb@plt+0x7c08>
  40b794:	b	40b908 <wcrtomb@plt+0x8b18>
  40b798:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b79c:	add	x0, x0, #0x658
  40b7a0:	str	xzr, [x0, #16]
  40b7a4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b7a8:	add	x0, x0, #0x761
  40b7ac:	ldrb	w0, [x0]
  40b7b0:	cmp	w0, #0x0
  40b7b4:	b.eq	40b910 <wcrtomb@plt+0x8b20>  // b.none
  40b7b8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b7bc:	add	x0, x0, #0x658
  40b7c0:	bl	40a9f8 <wcrtomb@plt+0x7c08>
  40b7c4:	b	40b910 <wcrtomb@plt+0x8b20>
  40b7c8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b7cc:	add	x0, x0, #0x638
  40b7d0:	bl	4085e0 <wcrtomb@plt+0x57f0>
  40b7d4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b7d8:	add	x0, x0, #0x638
  40b7dc:	ldr	x4, [x0, #16]
  40b7e0:	ldr	x0, [sp, #16]
  40b7e4:	ldr	x1, [x0, #16]
  40b7e8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b7ec:	add	x0, x0, #0x470
  40b7f0:	ldrb	w0, [x0]
  40b7f4:	mov	w3, w0
  40b7f8:	mov	x2, x1
  40b7fc:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40b800:	add	x1, x0, #0x3e0
  40b804:	mov	x0, x4
  40b808:	bl	402db0 <fprintf@plt>
  40b80c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b810:	add	x0, x0, #0x638
  40b814:	ldr	x0, [x0, #16]
  40b818:	bl	408630 <wcrtomb@plt+0x5840>
  40b81c:	b	40b914 <wcrtomb@plt+0x8b24>
  40b820:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b824:	add	x0, x0, #0x638
  40b828:	bl	4085e0 <wcrtomb@plt+0x57f0>
  40b82c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b830:	add	x0, x0, #0x638
  40b834:	ldr	x4, [x0, #16]
  40b838:	ldr	x0, [sp, #16]
  40b83c:	ldr	x1, [x0, #48]
  40b840:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b844:	add	x0, x0, #0x470
  40b848:	ldrb	w0, [x0]
  40b84c:	mov	w3, w0
  40b850:	mov	x2, x1
  40b854:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40b858:	add	x1, x0, #0x3e8
  40b85c:	mov	x0, x4
  40b860:	bl	402db0 <fprintf@plt>
  40b864:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b868:	add	x0, x0, #0x638
  40b86c:	ldr	x0, [x0, #16]
  40b870:	bl	408630 <wcrtomb@plt+0x5840>
  40b874:	b	40b914 <wcrtomb@plt+0x8b24>
  40b878:	ldr	x0, [sp, #4248]
  40b87c:	ldrb	w0, [x0, #21]
  40b880:	mov	w1, w0
  40b884:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40b888:	add	x0, x0, #0x3f0
  40b88c:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40b890:	nop
  40b894:	b	40b914 <wcrtomb@plt+0x8b24>
  40b898:	nop
  40b89c:	b	40b914 <wcrtomb@plt+0x8b24>
  40b8a0:	nop
  40b8a4:	b	40b914 <wcrtomb@plt+0x8b24>
  40b8a8:	nop
  40b8ac:	b	40b914 <wcrtomb@plt+0x8b24>
  40b8b0:	nop
  40b8b4:	b	40b914 <wcrtomb@plt+0x8b24>
  40b8b8:	nop
  40b8bc:	b	40b914 <wcrtomb@plt+0x8b24>
  40b8c0:	nop
  40b8c4:	b	40b914 <wcrtomb@plt+0x8b24>
  40b8c8:	nop
  40b8cc:	b	40b914 <wcrtomb@plt+0x8b24>
  40b8d0:	nop
  40b8d4:	b	40b914 <wcrtomb@plt+0x8b24>
  40b8d8:	nop
  40b8dc:	b	40b914 <wcrtomb@plt+0x8b24>
  40b8e0:	nop
  40b8e4:	b	40b914 <wcrtomb@plt+0x8b24>
  40b8e8:	nop
  40b8ec:	b	40b914 <wcrtomb@plt+0x8b24>
  40b8f0:	nop
  40b8f4:	b	40b914 <wcrtomb@plt+0x8b24>
  40b8f8:	nop
  40b8fc:	b	40b914 <wcrtomb@plt+0x8b24>
  40b900:	nop
  40b904:	b	40b914 <wcrtomb@plt+0x8b24>
  40b908:	nop
  40b90c:	b	40b914 <wcrtomb@plt+0x8b24>
  40b910:	nop
  40b914:	ldr	x0, [sp, #4248]
  40b918:	add	x0, x0, #0x28
  40b91c:	str	x0, [sp, #4248]
  40b920:	ldr	x1, [sp, #4248]
  40b924:	ldr	x0, [sp, #4224]
  40b928:	cmp	x1, x0
  40b92c:	b.cc	40ab08 <wcrtomb@plt+0x7d18>  // b.lo, b.ul, b.last
  40b930:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b934:	add	x0, x0, #0x761
  40b938:	ldrb	w0, [x0]
  40b93c:	cmp	w0, #0x0
  40b940:	b.eq	40b948 <wcrtomb@plt+0x8b58>  // b.none
  40b944:	bl	40a944 <wcrtomb@plt+0x7b54>
  40b948:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b94c:	add	x0, x0, #0x75d
  40b950:	ldrb	w0, [x0]
  40b954:	eor	w0, w0, #0x1
  40b958:	and	w0, w0, #0xff
  40b95c:	cmp	w0, #0x0
  40b960:	b.eq	40b99c <wcrtomb@plt+0x8bac>  // b.none
  40b964:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b968:	add	x0, x0, #0x658
  40b96c:	ldr	x4, [x0, #8]
  40b970:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b974:	add	x0, x0, #0x658
  40b978:	ldr	x1, [x0, #16]
  40b97c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b980:	add	x0, x0, #0x658
  40b984:	ldrb	w0, [x0, #32]
  40b988:	mov	w2, w0
  40b98c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b990:	add	x3, x0, #0x638
  40b994:	mov	x0, x4
  40b998:	bl	408664 <wcrtomb@plt+0x5874>
  40b99c:	mov	w0, #0xffffffff            	// #-1
  40b9a0:	ldp	x29, x30, [sp]
  40b9a4:	mov	x12, #0x10a0                	// #4256
  40b9a8:	add	sp, sp, x12
  40b9ac:	ret
  40b9b0:	stp	x29, x30, [sp, #-240]!
  40b9b4:	mov	x29, sp
  40b9b8:	str	x0, [sp, #24]
  40b9bc:	str	x1, [sp, #16]
  40b9c0:	mov	x2, #0x32                  	// #50
  40b9c4:	mov	x1, #0x0                   	// #0
  40b9c8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b9cc:	add	x0, x0, #0x658
  40b9d0:	bl	408160 <wcrtomb@plt+0x5370>
  40b9d4:	mov	x2, #0x0                   	// #0
  40b9d8:	mov	x1, #0x0                   	// #0
  40b9dc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b9e0:	add	x0, x0, #0x6b8
  40b9e4:	bl	408160 <wcrtomb@plt+0x5370>
  40b9e8:	mov	x2, #0x0                   	// #0
  40b9ec:	mov	x1, #0x0                   	// #0
  40b9f0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40b9f4:	add	x0, x0, #0x6e8
  40b9f8:	bl	408160 <wcrtomb@plt+0x5370>
  40b9fc:	mov	w0, #0x1                   	// #1
  40ba00:	strb	w0, [sp, #56]
  40ba04:	ldr	x0, [sp, #16]
  40ba08:	cmp	x0, #0x0
  40ba0c:	b.eq	40ba2c <wcrtomb@plt+0x8c3c>  // b.none
  40ba10:	ldr	x0, [sp, #16]
  40ba14:	ldr	x0, [x0]
  40ba18:	cmp	x0, #0x0
  40ba1c:	b.eq	40ba2c <wcrtomb@plt+0x8c3c>  // b.none
  40ba20:	ldr	x0, [sp, #16]
  40ba24:	str	x0, [sp, #32]
  40ba28:	b	40ba5c <wcrtomb@plt+0x8c6c>
  40ba2c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ba30:	add	x0, x0, #0x768
  40ba34:	ldr	x0, [x0]
  40ba38:	cmp	x0, #0x0
  40ba3c:	b.eq	40ba50 <wcrtomb@plt+0x8c60>  // b.none
  40ba40:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40ba44:	add	x0, x0, #0x578
  40ba48:	bl	402d80 <gettext@plt>
  40ba4c:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40ba50:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ba54:	add	x0, x0, #0x458
  40ba58:	str	x0, [sp, #32]
  40ba5c:	str	xzr, [sp, #40]
  40ba60:	str	xzr, [sp, #48]
  40ba64:	adrp	x0, 408000 <wcrtomb@plt+0x5210>
  40ba68:	add	x0, x0, #0x4fc
  40ba6c:	str	x0, [sp, #64]
  40ba70:	str	xzr, [sp, #216]
  40ba74:	str	wzr, [sp, #236]
  40ba78:	b	40bac8 <wcrtomb@plt+0x8cd8>
  40ba7c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ba80:	add	x0, x0, #0x761
  40ba84:	ldrb	w0, [x0]
  40ba88:	cmp	w0, #0x0
  40ba8c:	b.eq	40baa4 <wcrtomb@plt+0x8cb4>  // b.none
  40ba90:	add	x0, sp, #0x20
  40ba94:	bl	40a964 <wcrtomb@plt+0x7b74>
  40ba98:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ba9c:	add	x0, x0, #0x658
  40baa0:	bl	40a9f8 <wcrtomb@plt+0x7c08>
  40baa4:	add	x0, sp, #0x20
  40baa8:	mov	x1, x0
  40baac:	ldr	x0, [sp, #24]
  40bab0:	bl	40aab8 <wcrtomb@plt+0x7cc8>
  40bab4:	str	w0, [sp, #236]
  40bab8:	ldr	w0, [sp, #236]
  40babc:	cmn	w0, #0x1
  40bac0:	b.ne	40bae8 <wcrtomb@plt+0x8cf8>  // b.any
  40bac4:	str	wzr, [sp, #236]
  40bac8:	add	x0, sp, #0x20
  40bacc:	mov	w2, #0x0                   	// #0
  40bad0:	ldr	x1, [sp, #24]
  40bad4:	bl	4090c8 <wcrtomb@plt+0x62d8>
  40bad8:	and	w0, w0, #0xff
  40badc:	cmp	w0, #0x0
  40bae0:	b.ne	40ba7c <wcrtomb@plt+0x8c8c>  // b.any
  40bae4:	b	40baec <wcrtomb@plt+0x8cfc>
  40bae8:	nop
  40baec:	add	x0, sp, #0x20
  40baf0:	bl	408e6c <wcrtomb@plt+0x607c>
  40baf4:	ldr	x0, [sp, #40]
  40baf8:	cmp	x0, #0x0
  40bafc:	b.eq	40bb08 <wcrtomb@plt+0x8d18>  // b.none
  40bb00:	mov	w0, #0x2                   	// #2
  40bb04:	str	w0, [sp, #236]
  40bb08:	ldr	w0, [sp, #236]
  40bb0c:	ldp	x29, x30, [sp], #240
  40bb10:	ret
  40bb14:	stp	x29, x30, [sp, #-48]!
  40bb18:	mov	x29, sp
  40bb1c:	str	w0, [sp, #28]
  40bb20:	str	x1, [sp, #16]
  40bb24:	ldr	w0, [sp, #28]
  40bb28:	and	w0, w0, #0xff
  40bb2c:	strb	w0, [sp, #39]
  40bb30:	ldr	x0, [sp, #16]
  40bb34:	bl	402ac0 <mbsinit@plt>
  40bb38:	cmp	w0, #0x0
  40bb3c:	cset	w0, eq  // eq = none
  40bb40:	and	w0, w0, #0xff
  40bb44:	str	w0, [sp, #44]
  40bb48:	add	x0, sp, #0x27
  40bb4c:	ldr	x3, [sp, #16]
  40bb50:	mov	x2, #0x1                   	// #1
  40bb54:	mov	x1, x0
  40bb58:	mov	x0, #0x0                   	// #0
  40bb5c:	bl	41bae8 <wcrtomb@plt+0x18cf8>
  40bb60:	str	w0, [sp, #40]
  40bb64:	ldr	w0, [sp, #40]
  40bb68:	cmp	w0, #0x1
  40bb6c:	b.eq	40bbd0 <wcrtomb@plt+0x8de0>  // b.none
  40bb70:	ldr	w0, [sp, #40]
  40bb74:	cmp	w0, #0x1
  40bb78:	b.gt	40bbe0 <wcrtomb@plt+0x8df0>
  40bb7c:	ldr	w0, [sp, #40]
  40bb80:	cmp	w0, #0x0
  40bb84:	b.eq	40bbd8 <wcrtomb@plt+0x8de8>  // b.none
  40bb88:	ldr	w0, [sp, #40]
  40bb8c:	cmp	w0, #0x0
  40bb90:	b.gt	40bbe0 <wcrtomb@plt+0x8df0>
  40bb94:	ldr	w0, [sp, #40]
  40bb98:	cmn	w0, #0x2
  40bb9c:	b.eq	40bbb0 <wcrtomb@plt+0x8dc0>  // b.none
  40bba0:	ldr	w0, [sp, #40]
  40bba4:	cmn	w0, #0x1
  40bba8:	b.eq	40bbb8 <wcrtomb@plt+0x8dc8>  // b.none
  40bbac:	b	40bbe0 <wcrtomb@plt+0x8df0>
  40bbb0:	mov	w0, #0x1                   	// #1
  40bbb4:	b	40bbf8 <wcrtomb@plt+0x8e08>
  40bbb8:	mov	x2, #0x8                   	// #8
  40bbbc:	mov	w1, #0x0                   	// #0
  40bbc0:	ldr	x0, [sp, #16]
  40bbc4:	bl	402980 <memset@plt>
  40bbc8:	mov	w0, #0x0                   	// #0
  40bbcc:	b	40bbf8 <wcrtomb@plt+0x8e08>
  40bbd0:	ldr	w0, [sp, #44]
  40bbd4:	b	40bbf8 <wcrtomb@plt+0x8e08>
  40bbd8:	mov	w0, #0x1                   	// #1
  40bbdc:	b	40bbf8 <wcrtomb@plt+0x8e08>
  40bbe0:	ldr	w0, [sp, #28]
  40bbe4:	ldr	w2, [sp, #40]
  40bbe8:	mov	w1, w0
  40bbec:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40bbf0:	add	x0, x0, #0x588
  40bbf4:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40bbf8:	ldp	x29, x30, [sp], #48
  40bbfc:	ret
  40bc00:	stp	x29, x30, [sp, #-32]!
  40bc04:	mov	x29, sp
  40bc08:	bl	418750 <wcrtomb@plt+0x15960>
  40bc0c:	str	x0, [sp, #24]
  40bc10:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40bc14:	add	x1, x0, #0x5b0
  40bc18:	ldr	x0, [sp, #24]
  40bc1c:	bl	402b30 <strcmp@plt>
  40bc20:	cmp	w0, #0x0
  40bc24:	cset	w0, eq  // eq = none
  40bc28:	and	w1, w0, #0xff
  40bc2c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40bc30:	add	x0, x0, #0x8e0
  40bc34:	strb	w1, [x0]
  40bc38:	bl	402b80 <__ctype_get_mb_cur_max@plt>
  40bc3c:	mov	w1, w0
  40bc40:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40bc44:	add	x0, x0, #0x8e4
  40bc48:	str	w1, [x0]
  40bc4c:	nop
  40bc50:	ldp	x29, x30, [sp], #32
  40bc54:	ret
  40bc58:	stp	x29, x30, [sp, #-32]!
  40bc5c:	mov	x29, sp
  40bc60:	str	x0, [sp, #24]
  40bc64:	ldr	x1, [sp, #24]
  40bc68:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40bc6c:	add	x0, x0, #0x600
  40bc70:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40bc74:	stp	x29, x30, [sp, #-32]!
  40bc78:	mov	x29, sp
  40bc7c:	str	x0, [sp, #24]
  40bc80:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40bc84:	add	x0, x0, #0x608
  40bc88:	bl	402d60 <getenv@plt>
  40bc8c:	cmp	x0, #0x0
  40bc90:	b.ne	40bc9c <wcrtomb@plt+0x8eac>  // b.any
  40bc94:	ldr	x0, [sp, #24]
  40bc98:	bl	40bc58 <wcrtomb@plt+0x8e68>
  40bc9c:	nop
  40bca0:	ldp	x29, x30, [sp], #32
  40bca4:	ret
  40bca8:	stp	x29, x30, [sp, #-256]!
  40bcac:	mov	x29, sp
  40bcb0:	str	x0, [sp, #24]
  40bcb4:	str	w1, [sp, #20]
  40bcb8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40bcbc:	add	x0, x0, #0x758
  40bcc0:	ldr	w0, [x0]
  40bcc4:	and	w0, w0, #0x1
  40bcc8:	cmp	w0, #0x0
  40bccc:	b.eq	40bcdc <wcrtomb@plt+0x8eec>  // b.none
  40bcd0:	mov	w0, #0xb2fc                	// #45820
  40bcd4:	movk	w0, #0x3, lsl #16
  40bcd8:	b	40bce4 <wcrtomb@plt+0x8ef4>
  40bcdc:	mov	w0, #0x2c6                 	// #710
  40bce0:	movk	w0, #0x101, lsl #16
  40bce4:	str	w0, [sp, #252]
  40bce8:	ldr	w0, [sp, #252]
  40bcec:	and	w0, w0, #0xffffff7f
  40bcf0:	str	w0, [sp, #252]
  40bcf4:	ldr	w0, [sp, #252]
  40bcf8:	orr	w0, w0, #0x40000
  40bcfc:	str	w0, [sp, #252]
  40bd00:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40bd04:	add	x0, x0, #0x8e8
  40bd08:	ldr	w0, [x0]
  40bd0c:	cmp	w0, #0x2
  40bd10:	b.eq	40bd50 <wcrtomb@plt+0x8f60>  // b.none
  40bd14:	cmp	w0, #0x2
  40bd18:	b.hi	40bd88 <wcrtomb@plt+0x8f98>  // b.pmore
  40bd1c:	cmp	w0, #0x0
  40bd20:	b.eq	40bd30 <wcrtomb@plt+0x8f40>  // b.none
  40bd24:	cmp	w0, #0x1
  40bd28:	b.eq	40bd40 <wcrtomb@plt+0x8f50>  // b.none
  40bd2c:	b	40bd88 <wcrtomb@plt+0x8f98>
  40bd30:	ldr	w0, [sp, #252]
  40bd34:	and	w0, w0, #0xfffdffff
  40bd38:	str	w0, [sp, #252]
  40bd3c:	b	40bd88 <wcrtomb@plt+0x8f98>
  40bd40:	ldr	w0, [sp, #252]
  40bd44:	orr	w0, w0, #0x20000
  40bd48:	str	w0, [sp, #252]
  40bd4c:	b	40bd88 <wcrtomb@plt+0x8f98>
  40bd50:	ldr	w1, [sp, #252]
  40bd54:	mov	w0, #0xa0000               	// #655360
  40bd58:	orr	w0, w1, w0
  40bd5c:	str	w0, [sp, #252]
  40bd60:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40bd64:	add	x0, x0, #0x758
  40bd68:	ldr	w0, [x0]
  40bd6c:	and	w0, w0, #0x1
  40bd70:	cmp	w0, #0x0
  40bd74:	b.ne	40bd84 <wcrtomb@plt+0x8f94>  // b.any
  40bd78:	ldr	w0, [sp, #252]
  40bd7c:	orr	w0, w0, #0x400
  40bd80:	str	w0, [sp, #252]
  40bd84:	nop
  40bd88:	ldr	x0, [sp, #24]
  40bd8c:	ldr	w0, [x0, #64]
  40bd90:	and	w0, w0, #0x2
  40bd94:	cmp	w0, #0x0
  40bd98:	b.eq	40bdac <wcrtomb@plt+0x8fbc>  // b.none
  40bd9c:	ldr	w0, [sp, #252]
  40bda0:	orr	w0, w0, #0x400000
  40bda4:	str	w0, [sp, #252]
  40bda8:	b	40bdc0 <wcrtomb@plt+0x8fd0>
  40bdac:	mov	x0, #0x100                 	// #256
  40bdb0:	bl	4028b0 <malloc@plt>
  40bdb4:	mov	x1, x0
  40bdb8:	ldr	x0, [sp, #24]
  40bdbc:	str	x1, [x0, #32]
  40bdc0:	ldr	w0, [sp, #20]
  40bdc4:	cmp	w0, #0x0
  40bdc8:	b.eq	40bdd4 <wcrtomb@plt+0x8fe4>  // b.none
  40bdcc:	mov	w0, #0x0                   	// #0
  40bdd0:	b	40bdd8 <wcrtomb@plt+0x8fe8>
  40bdd4:	mov	w0, #0x2000000             	// #33554432
  40bdd8:	ldr	w1, [sp, #252]
  40bddc:	orr	w0, w0, w1
  40bde0:	str	w0, [sp, #252]
  40bde4:	ldr	x0, [sp, #24]
  40bde8:	ldr	w0, [x0, #64]
  40bdec:	and	w0, w0, #0x4
  40bdf0:	cmp	w0, #0x0
  40bdf4:	b.eq	40be10 <wcrtomb@plt+0x9020>  // b.none
  40bdf8:	ldr	w0, [sp, #252]
  40bdfc:	and	w0, w0, #0xffffffbf
  40be00:	str	w0, [sp, #252]
  40be04:	ldr	w0, [sp, #252]
  40be08:	orr	w0, w0, #0x100
  40be0c:	str	w0, [sp, #252]
  40be10:	ldrsw	x0, [sp, #252]
  40be14:	bl	421414 <_obstack_memory_used@@Base+0x5234>
  40be18:	ldr	x0, [sp, #24]
  40be1c:	add	x3, x0, #0x5a
  40be20:	ldr	x0, [sp, #24]
  40be24:	ldr	x0, [x0, #72]
  40be28:	ldr	x1, [sp, #24]
  40be2c:	mov	x2, x1
  40be30:	mov	x1, x0
  40be34:	mov	x0, x3
  40be38:	bl	421364 <_obstack_memory_used@@Base+0x5184>
  40be3c:	str	x0, [sp, #240]
  40be40:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40be44:	add	x0, x0, #0x470
  40be48:	ldrb	w0, [x0]
  40be4c:	cmp	w0, #0xa
  40be50:	b.ne	40be70 <wcrtomb@plt+0x9080>  // b.any
  40be54:	ldr	x0, [sp, #24]
  40be58:	ldr	w0, [x0, #64]
  40be5c:	and	w0, w0, #0x4
  40be60:	cmp	w0, #0x0
  40be64:	b.eq	40be70 <wcrtomb@plt+0x9080>  // b.none
  40be68:	mov	w0, #0x1                   	// #1
  40be6c:	b	40be74 <wcrtomb@plt+0x9084>
  40be70:	mov	w0, #0x0                   	// #0
  40be74:	and	w0, w0, #0x1
  40be78:	and	w2, w0, #0xff
  40be7c:	ldr	x1, [sp, #24]
  40be80:	ldrb	w0, [x1, #56]
  40be84:	bfi	w0, w2, #7, #1
  40be88:	strb	w0, [x1, #56]
  40be8c:	ldr	x0, [sp, #24]
  40be90:	str	xzr, [x0, #40]
  40be94:	ldr	x0, [sp, #240]
  40be98:	cmp	x0, #0x0
  40be9c:	b.eq	40bea8 <wcrtomb@plt+0x90b8>  // b.none
  40bea0:	ldr	x0, [sp, #240]
  40bea4:	bl	403010 <wcrtomb@plt+0x220>
  40bea8:	ldr	w0, [sp, #20]
  40beac:	cmp	w0, #0x0
  40beb0:	b.eq	40bf14 <wcrtomb@plt+0x9124>  // b.none
  40beb4:	ldr	x0, [sp, #24]
  40beb8:	ldr	x1, [x0, #48]
  40bebc:	ldr	w0, [sp, #20]
  40bec0:	sub	w0, w0, #0x1
  40bec4:	sxtw	x0, w0
  40bec8:	cmp	x1, x0
  40becc:	b.cs	40bf14 <wcrtomb@plt+0x9124>  // b.hs, b.nlast
  40bed0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40bed4:	add	x0, x0, #0x8e8
  40bed8:	ldr	w0, [x0]
  40bedc:	cmp	w0, #0x0
  40bee0:	b.ne	40bf14 <wcrtomb@plt+0x9124>  // b.any
  40bee4:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40bee8:	add	x0, x0, #0x618
  40beec:	bl	402d80 <gettext@plt>
  40bef0:	mov	x3, x0
  40bef4:	ldr	w0, [sp, #20]
  40bef8:	sub	w1, w0, #0x1
  40befc:	add	x0, sp, #0x20
  40bf00:	mov	w2, w1
  40bf04:	mov	x1, x3
  40bf08:	bl	4027b0 <sprintf@plt>
  40bf0c:	add	x0, sp, #0x20
  40bf10:	bl	403010 <wcrtomb@plt+0x220>
  40bf14:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40bf18:	add	x0, x0, #0x470
  40bf1c:	ldrb	w0, [x0]
  40bf20:	cmp	w0, #0xa
  40bf24:	b.ne	40bf30 <wcrtomb@plt+0x9140>  // b.any
  40bf28:	mov	w0, #0x0                   	// #0
  40bf2c:	b	40bf34 <wcrtomb@plt+0x9144>
  40bf30:	mov	w0, #0x2                   	// #2
  40bf34:	str	w0, [sp, #236]
  40bf38:	bl	4180d8 <wcrtomb@plt+0x152e8>
  40bf3c:	mov	x1, x0
  40bf40:	ldr	x0, [sp, #24]
  40bf44:	str	x1, [x0, #80]
  40bf48:	ldr	x0, [sp, #24]
  40bf4c:	ldr	x4, [x0, #80]
  40bf50:	ldrsw	x0, [sp, #252]
  40bf54:	ldr	w3, [sp, #236]
  40bf58:	mov	x2, x0
  40bf5c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40bf60:	add	x1, x0, #0x8f0
  40bf64:	mov	x0, x4
  40bf68:	bl	4180f0 <wcrtomb@plt+0x15300>
  40bf6c:	ldr	x0, [sp, #24]
  40bf70:	add	x4, x0, #0x5a
  40bf74:	ldr	x0, [sp, #24]
  40bf78:	ldr	x0, [x0, #72]
  40bf7c:	mov	x1, x0
  40bf80:	ldr	x0, [sp, #24]
  40bf84:	ldr	x0, [x0, #80]
  40bf88:	mov	w3, #0x1                   	// #1
  40bf8c:	mov	x2, x0
  40bf90:	mov	x0, x4
  40bf94:	bl	416ab8 <wcrtomb@plt+0x13cc8>
  40bf98:	ldr	x0, [sp, #24]
  40bf9c:	ldr	x0, [x0, #72]
  40bfa0:	cmp	x0, #0x1
  40bfa4:	b.ne	40bfe0 <wcrtomb@plt+0x91f0>  // b.any
  40bfa8:	ldr	x0, [sp, #24]
  40bfac:	ldrb	w0, [x0, #90]
  40bfb0:	cmp	w0, #0x5e
  40bfb4:	b.ne	40bfc4 <wcrtomb@plt+0x91d4>  // b.any
  40bfb8:	ldr	x0, [sp, #24]
  40bfbc:	mov	w1, #0x1                   	// #1
  40bfc0:	strb	w1, [x0, #88]
  40bfc4:	ldr	x0, [sp, #24]
  40bfc8:	ldrb	w0, [x0, #90]
  40bfcc:	cmp	w0, #0x24
  40bfd0:	b.ne	40bfe0 <wcrtomb@plt+0x91f0>  // b.any
  40bfd4:	ldr	x0, [sp, #24]
  40bfd8:	mov	w1, #0x1                   	// #1
  40bfdc:	strb	w1, [x0, #89]
  40bfe0:	nop
  40bfe4:	ldp	x29, x30, [sp], #256
  40bfe8:	ret
  40bfec:	stp	x29, x30, [sp, #-64]!
  40bff0:	mov	x29, sp
  40bff4:	str	x19, [sp, #16]
  40bff8:	str	x0, [sp, #40]
  40bffc:	str	w1, [sp, #36]
  40c000:	str	w2, [sp, #32]
  40c004:	ldr	x0, [sp, #40]
  40c008:	bl	40e14c <wcrtomb@plt+0xb35c>
  40c00c:	cmp	x0, #0x0
  40c010:	b.ne	40c038 <wcrtomb@plt+0x9248>  // b.any
  40c014:	ldr	w0, [sp, #36]
  40c018:	cmp	w0, #0x0
  40c01c:	b.le	40c030 <wcrtomb@plt+0x9240>
  40c020:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40c024:	add	x0, x0, #0x5d7
  40c028:	bl	402d80 <gettext@plt>
  40c02c:	bl	403010 <wcrtomb@plt+0x220>
  40c030:	mov	x0, #0x0                   	// #0
  40c034:	b	40c0b0 <wcrtomb@plt+0x92c0>
  40c038:	ldr	x0, [sp, #40]
  40c03c:	bl	40e14c <wcrtomb@plt+0xb35c>
  40c040:	str	x0, [sp, #56]
  40c044:	ldr	x0, [sp, #56]
  40c048:	add	x0, x0, #0x5f
  40c04c:	bl	41b9a8 <wcrtomb@plt+0x18bb8>
  40c050:	str	x0, [sp, #48]
  40c054:	ldr	x0, [sp, #48]
  40c058:	ldr	w1, [sp, #36]
  40c05c:	str	w1, [x0, #64]
  40c060:	ldr	x0, [sp, #48]
  40c064:	add	x19, x0, #0x5a
  40c068:	ldr	x0, [sp, #40]
  40c06c:	bl	40e134 <wcrtomb@plt+0xb344>
  40c070:	ldr	x2, [sp, #56]
  40c074:	mov	x1, x0
  40c078:	mov	x0, x19
  40c07c:	bl	4026d0 <memcpy@plt>
  40c080:	ldr	x0, [sp, #48]
  40c084:	add	x0, x0, #0x5a
  40c088:	mov	w2, #0x2                   	// #2
  40c08c:	ldr	x1, [sp, #56]
  40c090:	bl	4060a0 <wcrtomb@plt+0x32b0>
  40c094:	mov	x1, x0
  40c098:	ldr	x0, [sp, #48]
  40c09c:	str	x1, [x0, #72]
  40c0a0:	ldr	w1, [sp, #32]
  40c0a4:	ldr	x0, [sp, #48]
  40c0a8:	bl	40bca8 <wcrtomb@plt+0x8eb8>
  40c0ac:	ldr	x0, [sp, #48]
  40c0b0:	ldr	x19, [sp, #16]
  40c0b4:	ldp	x29, x30, [sp], #64
  40c0b8:	ret
  40c0bc:	stp	x29, x30, [sp, #-160]!
  40c0c0:	mov	x29, sp
  40c0c4:	str	x0, [sp, #56]
  40c0c8:	str	x1, [sp, #48]
  40c0cc:	str	x2, [sp, #40]
  40c0d0:	str	x3, [sp, #32]
  40c0d4:	str	x4, [sp, #24]
  40c0d8:	str	w5, [sp, #20]
  40c0dc:	ldr	x0, [sp, #56]
  40c0e0:	cmp	x0, #0x0
  40c0e4:	b.ne	40c11c <wcrtomb@plt+0x932c>  // b.any
  40c0e8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40c0ec:	add	x0, x0, #0x750
  40c0f0:	ldr	x0, [x0]
  40c0f4:	str	x0, [sp, #56]
  40c0f8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40c0fc:	add	x0, x0, #0x750
  40c100:	ldr	x0, [x0]
  40c104:	cmp	x0, #0x0
  40c108:	b.ne	40c12c <wcrtomb@plt+0x933c>  // b.any
  40c10c:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40c110:	add	x0, x0, #0x5b8
  40c114:	bl	402d80 <gettext@plt>
  40c118:	bl	403010 <wcrtomb@plt+0x220>
  40c11c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40c120:	add	x0, x0, #0x750
  40c124:	ldr	x1, [sp, #56]
  40c128:	str	x1, [x0]
  40c12c:	ldr	x1, [sp, #40]
  40c130:	mov	x0, #0x7ffffffe            	// #2147483646
  40c134:	cmp	x1, x0
  40c138:	b.ls	40c14c <wcrtomb@plt+0x935c>  // b.plast
  40c13c:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40c140:	add	x0, x0, #0x648
  40c144:	bl	402d80 <gettext@plt>
  40c148:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40c14c:	ldr	x0, [sp, #56]
  40c150:	ldrb	w0, [x0, #56]
  40c154:	and	w0, w0, #0x10
  40c158:	and	w0, w0, #0xff
  40c15c:	cmp	w0, #0x0
  40c160:	b.eq	40c1b4 <wcrtomb@plt+0x93c4>  // b.none
  40c164:	ldr	w0, [sp, #20]
  40c168:	cmp	w0, #0x0
  40c16c:	b.eq	40c1b4 <wcrtomb@plt+0x93c4>  // b.none
  40c170:	ldr	x0, [sp, #56]
  40c174:	ldr	x0, [x0, #80]
  40c178:	cmp	x0, #0x0
  40c17c:	b.eq	40c1a0 <wcrtomb@plt+0x93b0>  // b.none
  40c180:	ldr	x0, [sp, #56]
  40c184:	ldr	x0, [x0, #80]
  40c188:	bl	416b68 <wcrtomb@plt+0x13d78>
  40c18c:	ldr	x0, [sp, #56]
  40c190:	ldr	x0, [x0, #80]
  40c194:	bl	402b60 <free@plt>
  40c198:	ldr	x0, [sp, #56]
  40c19c:	str	xzr, [x0, #80]
  40c1a0:	ldr	x0, [sp, #56]
  40c1a4:	bl	422158 <_obstack_memory_used@@Base+0x5f78>
  40c1a8:	ldr	w1, [sp, #20]
  40c1ac:	ldr	x0, [sp, #56]
  40c1b0:	bl	40bca8 <wcrtomb@plt+0x8eb8>
  40c1b4:	ldr	x1, [sp, #56]
  40c1b8:	ldrb	w0, [x1, #56]
  40c1bc:	mov	w2, #0x1                   	// #1
  40c1c0:	bfi	w0, w2, #1, #2
  40c1c4:	strb	w0, [x1, #56]
  40c1c8:	ldr	x0, [sp, #56]
  40c1cc:	ldrb	w0, [x0, #88]
  40c1d0:	cmp	w0, #0x0
  40c1d4:	b.ne	40c1e8 <wcrtomb@plt+0x93f8>  // b.any
  40c1d8:	ldr	x0, [sp, #56]
  40c1dc:	ldrb	w0, [x0, #89]
  40c1e0:	cmp	w0, #0x0
  40c1e4:	b.eq	40c420 <wcrtomb@plt+0x9630>  // b.none
  40c1e8:	ldr	x0, [sp, #56]
  40c1ec:	ldrb	w0, [x0, #89]
  40c1f0:	cmp	w0, #0x0
  40c1f4:	b.eq	40c274 <wcrtomb@plt+0x9484>  // b.none
  40c1f8:	str	xzr, [sp, #136]
  40c1fc:	ldr	x0, [sp, #56]
  40c200:	ldr	w0, [x0, #64]
  40c204:	and	w0, w0, #0x4
  40c208:	cmp	w0, #0x0
  40c20c:	b.eq	40c24c <wcrtomb@plt+0x945c>  // b.none
  40c210:	ldr	x1, [sp, #48]
  40c214:	ldr	x0, [sp, #32]
  40c218:	add	x3, x1, x0
  40c21c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40c220:	add	x0, x0, #0x470
  40c224:	ldrb	w0, [x0]
  40c228:	mov	w4, w0
  40c22c:	ldr	x1, [sp, #40]
  40c230:	ldr	x0, [sp, #32]
  40c234:	sub	x0, x1, x0
  40c238:	mov	x2, x0
  40c23c:	mov	w1, w4
  40c240:	mov	x0, x3
  40c244:	bl	402c30 <memchr@plt>
  40c248:	str	x0, [sp, #136]
  40c24c:	ldr	x0, [sp, #136]
  40c250:	cmp	x0, #0x0
  40c254:	b.eq	40c268 <wcrtomb@plt+0x9478>  // b.none
  40c258:	ldr	x1, [sp, #136]
  40c25c:	ldr	x0, [sp, #48]
  40c260:	sub	x0, x1, x0
  40c264:	b	40c26c <wcrtomb@plt+0x947c>
  40c268:	ldr	x0, [sp, #40]
  40c26c:	str	x0, [sp, #144]
  40c270:	b	40c33c <wcrtomb@plt+0x954c>
  40c274:	ldr	x0, [sp, #32]
  40c278:	cmp	x0, #0x0
  40c27c:	b.ne	40c288 <wcrtomb@plt+0x9498>  // b.any
  40c280:	str	xzr, [sp, #144]
  40c284:	b	40c33c <wcrtomb@plt+0x954c>
  40c288:	ldr	x0, [sp, #56]
  40c28c:	ldr	w0, [x0, #64]
  40c290:	and	w0, w0, #0x4
  40c294:	cmp	w0, #0x0
  40c298:	b.ne	40c2a4 <wcrtomb@plt+0x94b4>  // b.any
  40c29c:	mov	w0, #0x0                   	// #0
  40c2a0:	b	40c834 <wcrtomb@plt+0x9a44>
  40c2a4:	ldr	x0, [sp, #32]
  40c2a8:	sub	x0, x0, #0x1
  40c2ac:	ldr	x1, [sp, #48]
  40c2b0:	add	x0, x1, x0
  40c2b4:	ldrb	w1, [x0]
  40c2b8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40c2bc:	add	x0, x0, #0x470
  40c2c0:	ldrb	w0, [x0]
  40c2c4:	cmp	w1, w0
  40c2c8:	b.ne	40c2d8 <wcrtomb@plt+0x94e8>  // b.any
  40c2cc:	ldr	x0, [sp, #32]
  40c2d0:	str	x0, [sp, #144]
  40c2d4:	b	40c33c <wcrtomb@plt+0x954c>
  40c2d8:	ldr	x1, [sp, #48]
  40c2dc:	ldr	x0, [sp, #32]
  40c2e0:	add	x3, x1, x0
  40c2e4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40c2e8:	add	x0, x0, #0x470
  40c2ec:	ldrb	w0, [x0]
  40c2f0:	mov	w4, w0
  40c2f4:	ldr	x1, [sp, #40]
  40c2f8:	ldr	x0, [sp, #32]
  40c2fc:	sub	x0, x1, x0
  40c300:	mov	x2, x0
  40c304:	mov	w1, w4
  40c308:	mov	x0, x3
  40c30c:	bl	402c30 <memchr@plt>
  40c310:	str	x0, [sp, #72]
  40c314:	ldr	x0, [sp, #72]
  40c318:	cmp	x0, #0x0
  40c31c:	b.ne	40c328 <wcrtomb@plt+0x9538>  // b.any
  40c320:	mov	w0, #0x0                   	// #0
  40c324:	b	40c834 <wcrtomb@plt+0x9a44>
  40c328:	ldr	x1, [sp, #72]
  40c32c:	ldr	x0, [sp, #48]
  40c330:	sub	x0, x1, x0
  40c334:	add	x0, x0, #0x1
  40c338:	str	x0, [sp, #144]
  40c33c:	ldr	w0, [sp, #20]
  40c340:	cmp	w0, #0x0
  40c344:	b.eq	40c418 <wcrtomb@plt+0x9628>  // b.none
  40c348:	ldr	x0, [sp, #24]
  40c34c:	ldr	x0, [x0, #8]
  40c350:	cmp	x0, #0x0
  40c354:	b.ne	40c394 <wcrtomb@plt+0x95a4>  // b.any
  40c358:	mov	x1, #0x8                   	// #8
  40c35c:	mov	x0, #0x1                   	// #1
  40c360:	bl	41b9c8 <wcrtomb@plt+0x18bd8>
  40c364:	mov	x1, x0
  40c368:	ldr	x0, [sp, #24]
  40c36c:	str	x1, [x0, #8]
  40c370:	mov	x1, #0x8                   	// #8
  40c374:	mov	x0, #0x1                   	// #1
  40c378:	bl	41b9c8 <wcrtomb@plt+0x18bd8>
  40c37c:	mov	x1, x0
  40c380:	ldr	x0, [sp, #24]
  40c384:	str	x1, [x0, #16]
  40c388:	ldr	x0, [sp, #24]
  40c38c:	mov	x1, #0x1                   	// #1
  40c390:	str	x1, [x0]
  40c394:	ldr	x0, [sp, #24]
  40c398:	ldr	x0, [x0, #8]
  40c39c:	ldr	x1, [sp, #144]
  40c3a0:	str	x1, [x0]
  40c3a4:	ldr	x0, [sp, #24]
  40c3a8:	ldr	x0, [x0, #16]
  40c3ac:	ldr	x1, [sp, #144]
  40c3b0:	str	x1, [x0]
  40c3b4:	mov	x0, #0x1                   	// #1
  40c3b8:	str	x0, [sp, #128]
  40c3bc:	b	40c404 <wcrtomb@plt+0x9614>
  40c3c0:	ldr	x0, [sp, #24]
  40c3c4:	ldr	x1, [x0, #16]
  40c3c8:	ldr	x0, [sp, #128]
  40c3cc:	lsl	x0, x0, #3
  40c3d0:	add	x0, x1, x0
  40c3d4:	mov	x1, #0xffffffffffffffff    	// #-1
  40c3d8:	str	x1, [x0]
  40c3dc:	ldr	x1, [sp, #24]
  40c3e0:	ldr	x2, [x1, #8]
  40c3e4:	ldr	x1, [sp, #128]
  40c3e8:	lsl	x1, x1, #3
  40c3ec:	add	x1, x2, x1
  40c3f0:	ldr	x0, [x0]
  40c3f4:	str	x0, [x1]
  40c3f8:	ldr	x0, [sp, #128]
  40c3fc:	add	x0, x0, #0x1
  40c400:	str	x0, [sp, #128]
  40c404:	ldr	x0, [sp, #24]
  40c408:	ldr	x0, [x0]
  40c40c:	ldr	x1, [sp, #128]
  40c410:	cmp	x1, x0
  40c414:	b.cc	40c3c0 <wcrtomb@plt+0x95d0>  // b.lo, b.ul, b.last
  40c418:	mov	w0, #0x1                   	// #1
  40c41c:	b	40c834 <wcrtomb@plt+0x9a44>
  40c420:	ldr	x0, [sp, #32]
  40c424:	cmp	x0, #0x0
  40c428:	b.ne	40c548 <wcrtomb@plt+0x9758>  // b.any
  40c42c:	ldr	x0, [sp, #56]
  40c430:	ldr	x0, [x0, #80]
  40c434:	bl	416448 <wcrtomb@plt+0x13658>
  40c438:	str	x0, [sp, #88]
  40c43c:	ldr	x0, [sp, #88]
  40c440:	cmp	x0, #0x0
  40c444:	b.eq	40c480 <wcrtomb@plt+0x9690>  // b.none
  40c448:	ldr	x1, [sp, #48]
  40c44c:	ldr	x0, [sp, #40]
  40c450:	add	x0, x1, x0
  40c454:	mov	x5, #0x0                   	// #0
  40c458:	mov	x4, #0x0                   	// #0
  40c45c:	mov	w3, #0x1                   	// #1
  40c460:	mov	x2, x0
  40c464:	ldr	x1, [sp, #48]
  40c468:	ldr	x0, [sp, #88]
  40c46c:	bl	4163fc <wcrtomb@plt+0x1360c>
  40c470:	cmp	x0, #0x0
  40c474:	b.ne	40c480 <wcrtomb@plt+0x9690>  // b.any
  40c478:	mov	w0, #0x0                   	// #0
  40c47c:	b	40c834 <wcrtomb@plt+0x9a44>
  40c480:	ldr	w0, [sp, #20]
  40c484:	cmp	w0, #0x0
  40c488:	b.ne	40c4a0 <wcrtomb@plt+0x96b0>  // b.any
  40c48c:	ldr	x0, [sp, #56]
  40c490:	ldr	w0, [x0, #64]
  40c494:	and	w0, w0, #0x4
  40c498:	cmp	w0, #0x0
  40c49c:	b.ne	40c4c4 <wcrtomb@plt+0x96d4>  // b.any
  40c4a0:	ldr	x0, [sp, #88]
  40c4a4:	cmp	x0, #0x0
  40c4a8:	b.ne	40c548 <wcrtomb@plt+0x9758>  // b.any
  40c4ac:	ldr	x0, [sp, #56]
  40c4b0:	ldr	x0, [x0, #80]
  40c4b4:	bl	416460 <wcrtomb@plt+0x13670>
  40c4b8:	and	w0, w0, #0xff
  40c4bc:	cmp	w0, #0x0
  40c4c0:	b.eq	40c548 <wcrtomb@plt+0x9758>  // b.none
  40c4c4:	strb	wzr, [sp, #71]
  40c4c8:	ldr	x0, [sp, #56]
  40c4cc:	ldr	x6, [x0, #80]
  40c4d0:	ldr	x1, [sp, #48]
  40c4d4:	ldr	x0, [sp, #40]
  40c4d8:	add	x0, x1, x0
  40c4dc:	add	x1, sp, #0x47
  40c4e0:	mov	x5, x1
  40c4e4:	mov	x4, #0x0                   	// #0
  40c4e8:	mov	w3, #0x1                   	// #1
  40c4ec:	mov	x2, x0
  40c4f0:	ldr	x1, [sp, #48]
  40c4f4:	mov	x0, x6
  40c4f8:	bl	4163fc <wcrtomb@plt+0x1360c>
  40c4fc:	cmp	x0, #0x0
  40c500:	b.ne	40c50c <wcrtomb@plt+0x971c>  // b.any
  40c504:	mov	w0, #0x0                   	// #0
  40c508:	b	40c834 <wcrtomb@plt+0x9a44>
  40c50c:	ldr	w0, [sp, #20]
  40c510:	cmp	w0, #0x0
  40c514:	b.ne	40c548 <wcrtomb@plt+0x9758>  // b.any
  40c518:	ldr	x0, [sp, #56]
  40c51c:	ldr	w0, [x0, #64]
  40c520:	and	w0, w0, #0x4
  40c524:	cmp	w0, #0x0
  40c528:	b.eq	40c548 <wcrtomb@plt+0x9758>  // b.none
  40c52c:	ldrb	w0, [sp, #71]
  40c530:	eor	w0, w0, #0x1
  40c534:	and	w0, w0, #0xff
  40c538:	cmp	w0, #0x0
  40c53c:	b.eq	40c548 <wcrtomb@plt+0x9758>  // b.none
  40c540:	mov	w0, #0x1                   	// #1
  40c544:	b	40c834 <wcrtomb@plt+0x9a44>
  40c548:	ldr	x0, [sp, #56]
  40c54c:	ldr	w0, [x0, #64]
  40c550:	and	w0, w0, #0x4
  40c554:	cmp	w0, #0x0
  40c558:	b.eq	40c7d8 <wcrtomb@plt+0x99e8>  // b.none
  40c55c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40c560:	add	x0, x0, #0x470
  40c564:	ldrb	w0, [x0]
  40c568:	cmp	w0, #0xa
  40c56c:	b.eq	40c7d8 <wcrtomb@plt+0x99e8>  // b.none
  40c570:	ldr	x0, [sp, #48]
  40c574:	str	x0, [sp, #120]
  40c578:	ldr	x0, [sp, #32]
  40c57c:	cmp	x0, #0x0
  40c580:	b.eq	40c5bc <wcrtomb@plt+0x97cc>  // b.none
  40c584:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40c588:	add	x0, x0, #0x470
  40c58c:	ldrb	w0, [x0]
  40c590:	ldr	x2, [sp, #32]
  40c594:	mov	w1, w0
  40c598:	ldr	x0, [sp, #48]
  40c59c:	bl	402bc0 <memrchr@plt>
  40c5a0:	str	x0, [sp, #80]
  40c5a4:	ldr	x0, [sp, #80]
  40c5a8:	cmp	x0, #0x0
  40c5ac:	b.eq	40c5bc <wcrtomb@plt+0x97cc>  // b.none
  40c5b0:	ldr	x0, [sp, #80]
  40c5b4:	add	x0, x0, #0x1
  40c5b8:	str	x0, [sp, #120]
  40c5bc:	ldr	x1, [sp, #48]
  40c5c0:	ldr	x0, [sp, #32]
  40c5c4:	add	x0, x1, x0
  40c5c8:	str	x0, [sp, #104]
  40c5cc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40c5d0:	add	x0, x0, #0x470
  40c5d4:	ldrb	w0, [x0]
  40c5d8:	mov	w3, w0
  40c5dc:	ldr	x1, [sp, #48]
  40c5e0:	ldr	x0, [sp, #40]
  40c5e4:	add	x1, x1, x0
  40c5e8:	ldr	x0, [sp, #120]
  40c5ec:	sub	x0, x1, x0
  40c5f0:	mov	x2, x0
  40c5f4:	mov	w1, w3
  40c5f8:	ldr	x0, [sp, #120]
  40c5fc:	bl	402c30 <memchr@plt>
  40c600:	str	x0, [sp, #112]
  40c604:	ldr	x0, [sp, #112]
  40c608:	cmp	x0, #0x0
  40c60c:	b.ne	40c620 <wcrtomb@plt+0x9830>  // b.any
  40c610:	ldr	x1, [sp, #48]
  40c614:	ldr	x0, [sp, #40]
  40c618:	add	x0, x1, x0
  40c61c:	str	x0, [sp, #112]
  40c620:	ldr	x6, [sp, #56]
  40c624:	ldr	x1, [sp, #112]
  40c628:	ldr	x0, [sp, #120]
  40c62c:	sub	x2, x1, x0
  40c630:	ldr	x1, [sp, #104]
  40c634:	ldr	x0, [sp, #120]
  40c638:	sub	x3, x1, x0
  40c63c:	ldr	x1, [sp, #112]
  40c640:	ldr	x0, [sp, #104]
  40c644:	sub	x1, x1, x0
  40c648:	ldr	w0, [sp, #20]
  40c64c:	cmp	w0, #0x0
  40c650:	b.eq	40c65c <wcrtomb@plt+0x986c>  // b.none
  40c654:	ldr	x0, [sp, #24]
  40c658:	b	40c660 <wcrtomb@plt+0x9870>
  40c65c:	mov	x0, #0x0                   	// #0
  40c660:	mov	x5, x0
  40c664:	mov	x4, x1
  40c668:	ldr	x1, [sp, #120]
  40c66c:	mov	x0, x6
  40c670:	bl	429ca0 <_obstack_memory_used@@Base+0xdac0>
  40c674:	str	w0, [sp, #156]
  40c678:	ldr	w0, [sp, #156]
  40c67c:	cmp	w0, #0x0
  40c680:	b.lt	40c798 <wcrtomb@plt+0x99a8>  // b.tstop
  40c684:	ldr	x1, [sp, #120]
  40c688:	ldr	x0, [sp, #48]
  40c68c:	sub	x0, x1, x0
  40c690:	mov	w1, w0
  40c694:	ldr	w0, [sp, #156]
  40c698:	add	w0, w1, w0
  40c69c:	str	w0, [sp, #156]
  40c6a0:	ldr	w0, [sp, #20]
  40c6a4:	cmp	w0, #0x0
  40c6a8:	b.eq	40c7c8 <wcrtomb@plt+0x99d8>  // b.none
  40c6ac:	str	xzr, [sp, #96]
  40c6b0:	b	40c780 <wcrtomb@plt+0x9990>
  40c6b4:	ldr	x0, [sp, #24]
  40c6b8:	ldr	x1, [x0, #8]
  40c6bc:	ldr	x0, [sp, #96]
  40c6c0:	lsl	x0, x0, #3
  40c6c4:	add	x0, x1, x0
  40c6c8:	ldr	x0, [x0]
  40c6cc:	cmp	x0, #0x0
  40c6d0:	b.lt	40c714 <wcrtomb@plt+0x9924>  // b.tstop
  40c6d4:	ldr	x0, [sp, #24]
  40c6d8:	ldr	x1, [x0, #8]
  40c6dc:	ldr	x0, [sp, #96]
  40c6e0:	lsl	x0, x0, #3
  40c6e4:	add	x0, x1, x0
  40c6e8:	ldr	x2, [x0]
  40c6ec:	ldr	x1, [sp, #120]
  40c6f0:	ldr	x0, [sp, #48]
  40c6f4:	sub	x1, x1, x0
  40c6f8:	ldr	x0, [sp, #24]
  40c6fc:	ldr	x3, [x0, #8]
  40c700:	ldr	x0, [sp, #96]
  40c704:	lsl	x0, x0, #3
  40c708:	add	x0, x3, x0
  40c70c:	add	x1, x2, x1
  40c710:	str	x1, [x0]
  40c714:	ldr	x0, [sp, #24]
  40c718:	ldr	x1, [x0, #16]
  40c71c:	ldr	x0, [sp, #96]
  40c720:	lsl	x0, x0, #3
  40c724:	add	x0, x1, x0
  40c728:	ldr	x0, [x0]
  40c72c:	cmp	x0, #0x0
  40c730:	b.lt	40c774 <wcrtomb@plt+0x9984>  // b.tstop
  40c734:	ldr	x0, [sp, #24]
  40c738:	ldr	x1, [x0, #16]
  40c73c:	ldr	x0, [sp, #96]
  40c740:	lsl	x0, x0, #3
  40c744:	add	x0, x1, x0
  40c748:	ldr	x2, [x0]
  40c74c:	ldr	x1, [sp, #120]
  40c750:	ldr	x0, [sp, #48]
  40c754:	sub	x1, x1, x0
  40c758:	ldr	x0, [sp, #24]
  40c75c:	ldr	x3, [x0, #16]
  40c760:	ldr	x0, [sp, #96]
  40c764:	lsl	x0, x0, #3
  40c768:	add	x0, x3, x0
  40c76c:	add	x1, x2, x1
  40c770:	str	x1, [x0]
  40c774:	ldr	x0, [sp, #96]
  40c778:	add	x0, x0, #0x1
  40c77c:	str	x0, [sp, #96]
  40c780:	ldr	x0, [sp, #24]
  40c784:	ldr	x0, [x0]
  40c788:	ldr	x1, [sp, #96]
  40c78c:	cmp	x1, x0
  40c790:	b.cc	40c6b4 <wcrtomb@plt+0x98c4>  // b.lo, b.ul, b.last
  40c794:	b	40c7c8 <wcrtomb@plt+0x99d8>
  40c798:	ldr	x1, [sp, #48]
  40c79c:	ldr	x0, [sp, #40]
  40c7a0:	add	x0, x1, x0
  40c7a4:	ldr	x1, [sp, #112]
  40c7a8:	cmp	x1, x0
  40c7ac:	b.eq	40c7d0 <wcrtomb@plt+0x99e0>  // b.none
  40c7b0:	ldr	x0, [sp, #112]
  40c7b4:	add	x0, x0, #0x1
  40c7b8:	str	x0, [sp, #104]
  40c7bc:	ldr	x0, [sp, #104]
  40c7c0:	str	x0, [sp, #120]
  40c7c4:	b	40c5cc <wcrtomb@plt+0x97dc>
  40c7c8:	nop
  40c7cc:	b	40c824 <wcrtomb@plt+0x9a34>
  40c7d0:	nop
  40c7d4:	b	40c824 <wcrtomb@plt+0x9a34>
  40c7d8:	ldr	x6, [sp, #56]
  40c7dc:	ldr	x2, [sp, #40]
  40c7e0:	ldr	x3, [sp, #32]
  40c7e4:	ldr	x1, [sp, #40]
  40c7e8:	ldr	x0, [sp, #32]
  40c7ec:	sub	x0, x1, x0
  40c7f0:	mov	x1, x0
  40c7f4:	ldr	w0, [sp, #20]
  40c7f8:	cmp	w0, #0x0
  40c7fc:	b.eq	40c808 <wcrtomb@plt+0x9a18>  // b.none
  40c800:	ldr	x0, [sp, #24]
  40c804:	b	40c80c <wcrtomb@plt+0x9a1c>
  40c808:	mov	x0, #0x0                   	// #0
  40c80c:	mov	x5, x0
  40c810:	mov	x4, x1
  40c814:	ldr	x1, [sp, #48]
  40c818:	mov	x0, x6
  40c81c:	bl	429ca0 <_obstack_memory_used@@Base+0xdac0>
  40c820:	str	w0, [sp, #156]
  40c824:	ldr	w0, [sp, #156]
  40c828:	mvn	w0, w0
  40c82c:	lsr	w0, w0, #31
  40c830:	and	w0, w0, #0xff
  40c834:	ldp	x29, x30, [sp], #160
  40c838:	ret
  40c83c:	stp	x29, x30, [sp, #-16]!
  40c840:	mov	x29, sp
  40c844:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40c848:	add	x0, x0, #0x778
  40c84c:	ldr	x0, [x0]
  40c850:	cmp	x0, #0x0
  40c854:	b.eq	40c868 <wcrtomb@plt+0x9a78>  // b.none
  40c858:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40c85c:	add	x0, x0, #0x778
  40c860:	ldr	x0, [x0]
  40c864:	bl	402d70 <unlink@plt>
  40c868:	nop
  40c86c:	ldp	x29, x30, [sp], #16
  40c870:	ret
  40c874:	sub	sp, sp, #0x10
  40c878:	str	x0, [sp, #8]
  40c87c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40c880:	add	x0, x0, #0x778
  40c884:	ldr	x1, [sp, #8]
  40c888:	str	x1, [x0]
  40c88c:	nop
  40c890:	add	sp, sp, #0x10
  40c894:	ret
  40c898:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40c89c:	add	x0, x0, #0x778
  40c8a0:	str	xzr, [x0]
  40c8a4:	nop
  40c8a8:	ret
  40c8ac:	stp	x29, x30, [sp, #-48]!
  40c8b0:	mov	x29, sp
  40c8b4:	str	w0, [sp, #28]
  40c8b8:	ldr	w0, [sp, #28]
  40c8bc:	cmp	w0, #0x0
  40c8c0:	b.eq	40c8d4 <wcrtomb@plt+0x9ae4>  // b.none
  40c8c4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40c8c8:	add	x0, x0, #0x508
  40c8cc:	ldr	x0, [x0]
  40c8d0:	b	40c8e0 <wcrtomb@plt+0x9af0>
  40c8d4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40c8d8:	add	x0, x0, #0x520
  40c8dc:	ldr	x0, [x0]
  40c8e0:	str	x0, [sp, #40]
  40c8e4:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40c8e8:	add	x0, x0, #0x688
  40c8ec:	bl	402d80 <gettext@plt>
  40c8f0:	mov	x1, x0
  40c8f4:	ldr	x0, [sp, #40]
  40c8f8:	bl	402db0 <fprintf@plt>
  40c8fc:	ldr	w0, [sp, #28]
  40c900:	cmp	w0, #0x0
  40c904:	b.ne	40c928 <wcrtomb@plt+0x9b38>  // b.any
  40c908:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40c90c:	add	x0, x0, #0x708
  40c910:	bl	402d80 <gettext@plt>
  40c914:	mov	x1, x0
  40c918:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40c91c:	add	x2, x0, #0x728
  40c920:	ldr	x0, [sp, #40]
  40c924:	bl	402db0 <fprintf@plt>
  40c928:	nop
  40c92c:	ldp	x29, x30, [sp], #48
  40c930:	ret
  40c934:	stp	x29, x30, [sp, #-16]!
  40c938:	mov	x29, sp
  40c93c:	mov	w0, #0xa                   	// #10
  40c940:	bl	4029b0 <putchar_unlocked@plt>
  40c944:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40c948:	add	x0, x0, #0x738
  40c94c:	bl	402d80 <gettext@plt>
  40c950:	bl	402ae0 <puts@plt>
  40c954:	mov	w0, #0xa                   	// #10
  40c958:	bl	4029b0 <putchar_unlocked@plt>
  40c95c:	nop
  40c960:	ldp	x29, x30, [sp], #16
  40c964:	ret
  40c968:	stp	x29, x30, [sp, #-48]!
  40c96c:	mov	x29, sp
  40c970:	str	w0, [sp, #28]
  40c974:	ldr	w0, [sp, #28]
  40c978:	cmp	w0, #0x0
  40c97c:	b.eq	40c990 <wcrtomb@plt+0x9ba0>  // b.none
  40c980:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40c984:	add	x0, x0, #0x508
  40c988:	ldr	x0, [x0]
  40c98c:	b	40c99c <wcrtomb@plt+0x9bac>
  40c990:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40c994:	add	x0, x0, #0x520
  40c998:	ldr	x0, [x0]
  40c99c:	str	x0, [sp, #40]
  40c9a0:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40c9a4:	add	x0, x0, #0x770
  40c9a8:	bl	402d80 <gettext@plt>
  40c9ac:	mov	x1, x0
  40c9b0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40c9b4:	add	x0, x0, #0x7a0
  40c9b8:	ldr	x0, [x0]
  40c9bc:	mov	x2, x0
  40c9c0:	ldr	x0, [sp, #40]
  40c9c4:	bl	402db0 <fprintf@plt>
  40c9c8:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40c9cc:	add	x0, x0, #0x7c0
  40c9d0:	bl	402d80 <gettext@plt>
  40c9d4:	mov	x1, x0
  40c9d8:	ldr	x0, [sp, #40]
  40c9dc:	bl	402db0 <fprintf@plt>
  40c9e0:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40c9e4:	add	x0, x0, #0x818
  40c9e8:	bl	402d80 <gettext@plt>
  40c9ec:	mov	x1, x0
  40c9f0:	ldr	x0, [sp, #40]
  40c9f4:	bl	402db0 <fprintf@plt>
  40c9f8:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40c9fc:	add	x0, x0, #0x858
  40ca00:	bl	402d80 <gettext@plt>
  40ca04:	mov	x1, x0
  40ca08:	ldr	x0, [sp, #40]
  40ca0c:	bl	402db0 <fprintf@plt>
  40ca10:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40ca14:	add	x0, x0, #0x8c0
  40ca18:	bl	402d80 <gettext@plt>
  40ca1c:	mov	x1, x0
  40ca20:	ldr	x0, [sp, #40]
  40ca24:	bl	402db0 <fprintf@plt>
  40ca28:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40ca2c:	add	x0, x0, #0x938
  40ca30:	bl	402d80 <gettext@plt>
  40ca34:	mov	x1, x0
  40ca38:	ldr	x0, [sp, #40]
  40ca3c:	bl	402db0 <fprintf@plt>
  40ca40:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40ca44:	add	x0, x0, #0x988
  40ca48:	bl	402d80 <gettext@plt>
  40ca4c:	mov	x1, x0
  40ca50:	ldr	x0, [sp, #40]
  40ca54:	bl	402db0 <fprintf@plt>
  40ca58:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40ca5c:	add	x0, x0, #0x9f8
  40ca60:	bl	402d80 <gettext@plt>
  40ca64:	mov	x1, x0
  40ca68:	ldr	x0, [sp, #40]
  40ca6c:	bl	402db0 <fprintf@plt>
  40ca70:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40ca74:	add	x0, x0, #0xa60
  40ca78:	bl	402d80 <gettext@plt>
  40ca7c:	mov	x1, x0
  40ca80:	ldr	x0, [sp, #40]
  40ca84:	bl	402db0 <fprintf@plt>
  40ca88:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40ca8c:	add	x0, x0, #0xa98
  40ca90:	bl	402d80 <gettext@plt>
  40ca94:	mov	x1, x0
  40ca98:	ldr	x0, [sp, #40]
  40ca9c:	bl	402db0 <fprintf@plt>
  40caa0:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40caa4:	add	x0, x0, #0xb28
  40caa8:	bl	402d80 <gettext@plt>
  40caac:	mov	x1, x0
  40cab0:	ldr	x0, [sp, #40]
  40cab4:	bl	402db0 <fprintf@plt>
  40cab8:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40cabc:	add	x0, x0, #0xba8
  40cac0:	bl	402d80 <gettext@plt>
  40cac4:	mov	x1, x0
  40cac8:	ldr	x0, [sp, #40]
  40cacc:	bl	402db0 <fprintf@plt>
  40cad0:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40cad4:	add	x0, x0, #0xc00
  40cad8:	bl	402d80 <gettext@plt>
  40cadc:	mov	x1, x0
  40cae0:	ldr	x0, [sp, #40]
  40cae4:	bl	402db0 <fprintf@plt>
  40cae8:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40caec:	add	x0, x0, #0xc90
  40caf0:	bl	402d80 <gettext@plt>
  40caf4:	mov	x1, x0
  40caf8:	ldr	x0, [sp, #40]
  40cafc:	bl	402db0 <fprintf@plt>
  40cb00:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40cb04:	add	x0, x0, #0xcd8
  40cb08:	bl	402d80 <gettext@plt>
  40cb0c:	mov	x1, x0
  40cb10:	ldr	x0, [sp, #40]
  40cb14:	bl	402db0 <fprintf@plt>
  40cb18:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40cb1c:	add	x0, x0, #0xd08
  40cb20:	bl	402d80 <gettext@plt>
  40cb24:	mov	x1, x0
  40cb28:	ldr	x0, [sp, #40]
  40cb2c:	bl	402db0 <fprintf@plt>
  40cb30:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40cb34:	add	x0, x0, #0xd40
  40cb38:	bl	402d80 <gettext@plt>
  40cb3c:	mov	x1, x0
  40cb40:	ldr	x0, [sp, #40]
  40cb44:	bl	402db0 <fprintf@plt>
  40cb48:	ldr	w0, [sp, #28]
  40cb4c:	bl	40c8ac <wcrtomb@plt+0x9abc>
  40cb50:	mov	x0, #0x0                   	// #0
  40cb54:	bl	40dae4 <wcrtomb@plt+0xacf4>
  40cb58:	ldr	w0, [sp, #28]
  40cb5c:	bl	402740 <exit@plt>
  40cb60:	sub	sp, sp, #0xb0
  40cb64:	stp	x29, x30, [sp, #32]
  40cb68:	add	x29, sp, #0x20
  40cb6c:	stp	x19, x20, [sp, #48]
  40cb70:	stp	x21, x22, [sp, #64]
  40cb74:	stp	x23, x24, [sp, #80]
  40cb78:	stp	x25, x26, [sp, #96]
  40cb7c:	str	w0, [sp, #124]
  40cb80:	str	x1, [sp, #112]
  40cb84:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40cb88:	add	x0, x0, #0xe40
  40cb8c:	bl	402d60 <getenv@plt>
  40cb90:	str	x0, [sp, #168]
  40cb94:	ldr	x0, [sp, #112]
  40cb98:	ldr	x0, [x0]
  40cb9c:	bl	4187a4 <wcrtomb@plt+0x159b4>
  40cba0:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40cba4:	add	x1, x0, #0xe48
  40cba8:	mov	w0, #0x6                   	// #6
  40cbac:	bl	402dd0 <setlocale@plt>
  40cbb0:	bl	40bc00 <wcrtomb@plt+0x8e10>
  40cbb4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cbb8:	add	x0, x0, #0x8f0
  40cbbc:	bl	4184d4 <wcrtomb@plt+0x156e4>
  40cbc0:	adrp	x0, 40c000 <wcrtomb@plt+0x9210>
  40cbc4:	add	x0, x0, #0x83c
  40cbc8:	bl	434860 <_obstack_memory_used@@Base+0x18680>
  40cbcc:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40cbd0:	add	x1, x0, #0xe50
  40cbd4:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40cbd8:	add	x0, x0, #0xe68
  40cbdc:	bl	402930 <bindtextdomain@plt>
  40cbe0:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40cbe4:	add	x0, x0, #0xe68
  40cbe8:	bl	402b10 <textdomain@plt>
  40cbec:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40cbf0:	add	x0, x0, #0xe70
  40cbf4:	bl	402d60 <getenv@plt>
  40cbf8:	cmp	x0, #0x0
  40cbfc:	b.eq	40cc14 <wcrtomb@plt+0x9e24>  // b.none
  40cc00:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cc04:	add	x0, x0, #0x8e8
  40cc08:	mov	w1, #0x1                   	// #1
  40cc0c:	str	w1, [x0]
  40cc10:	b	40cc20 <wcrtomb@plt+0x9e30>
  40cc14:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cc18:	add	x0, x0, #0x8e8
  40cc1c:	str	wzr, [x0]
  40cc20:	ldr	x0, [sp, #168]
  40cc24:	cmp	x0, #0x0
  40cc28:	b.eq	40d134 <wcrtomb@plt+0xa344>  // b.none
  40cc2c:	ldr	x0, [sp, #168]
  40cc30:	bl	402850 <atoi@plt>
  40cc34:	sxtw	x0, w0
  40cc38:	str	x0, [sp, #160]
  40cc3c:	ldr	x0, [sp, #160]
  40cc40:	cmp	x0, #0x1
  40cc44:	b.ls	40d134 <wcrtomb@plt+0xa344>  // b.plast
  40cc48:	ldr	x0, [sp, #160]
  40cc4c:	sub	x1, x0, #0x1
  40cc50:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cc54:	add	x0, x0, #0x488
  40cc58:	str	x1, [x0]
  40cc5c:	b	40d134 <wcrtomb@plt+0xa344>
  40cc60:	ldr	w0, [sp, #156]
  40cc64:	cmp	w0, #0x101
  40cc68:	b.eq	40d02c <wcrtomb@plt+0xa23c>  // b.none
  40cc6c:	ldr	w0, [sp, #156]
  40cc70:	cmp	w0, #0x101
  40cc74:	b.gt	40d12c <wcrtomb@plt+0xa33c>
  40cc78:	ldr	w0, [sp, #156]
  40cc7c:	cmp	w0, #0x100
  40cc80:	b.eq	40d018 <wcrtomb@plt+0xa228>  // b.none
  40cc84:	ldr	w0, [sp, #156]
  40cc88:	cmp	w0, #0x100
  40cc8c:	b.gt	40d12c <wcrtomb@plt+0xa33c>
  40cc90:	ldr	w0, [sp, #156]
  40cc94:	cmp	w0, #0x7a
  40cc98:	b.eq	40ce7c <wcrtomb@plt+0xa08c>  // b.none
  40cc9c:	ldr	w0, [sp, #156]
  40cca0:	cmp	w0, #0x7a
  40cca4:	b.gt	40d12c <wcrtomb@plt+0xa33c>
  40cca8:	ldr	w0, [sp, #156]
  40ccac:	cmp	w0, #0x76
  40ccb0:	b.eq	40d054 <wcrtomb@plt+0xa264>  // b.none
  40ccb4:	ldr	w0, [sp, #156]
  40ccb8:	cmp	w0, #0x76
  40ccbc:	b.gt	40d12c <wcrtomb@plt+0xa33c>
  40ccc0:	ldr	w0, [sp, #156]
  40ccc4:	cmp	w0, #0x75
  40ccc8:	b.eq	40d040 <wcrtomb@plt+0xa250>  // b.none
  40cccc:	ldr	w0, [sp, #156]
  40ccd0:	cmp	w0, #0x75
  40ccd4:	b.gt	40d12c <wcrtomb@plt+0xa33c>
  40ccd8:	ldr	w0, [sp, #156]
  40ccdc:	cmp	w0, #0x73
  40cce0:	b.eq	40d004 <wcrtomb@plt+0xa214>  // b.none
  40cce4:	ldr	w0, [sp, #156]
  40cce8:	cmp	w0, #0x73
  40ccec:	b.gt	40d12c <wcrtomb@plt+0xa33c>
  40ccf0:	ldr	w0, [sp, #156]
  40ccf4:	cmp	w0, #0x72
  40ccf8:	b.eq	40cff0 <wcrtomb@plt+0xa200>  // b.none
  40ccfc:	ldr	w0, [sp, #156]
  40cd00:	cmp	w0, #0x72
  40cd04:	b.gt	40d12c <wcrtomb@plt+0xa33c>
  40cd08:	ldr	w0, [sp, #156]
  40cd0c:	cmp	w0, #0x70
  40cd10:	b.eq	40cfb0 <wcrtomb@plt+0xa1c0>  // b.none
  40cd14:	ldr	w0, [sp, #156]
  40cd18:	cmp	w0, #0x70
  40cd1c:	b.gt	40d12c <wcrtomb@plt+0xa33c>
  40cd20:	ldr	w0, [sp, #156]
  40cd24:	cmp	w0, #0x6e
  40cd28:	b.eq	40cde4 <wcrtomb@plt+0x9ff4>  // b.none
  40cd2c:	ldr	w0, [sp, #156]
  40cd30:	cmp	w0, #0x6e
  40cd34:	b.gt	40d12c <wcrtomb@plt+0xa33c>
  40cd38:	ldr	w0, [sp, #156]
  40cd3c:	cmp	w0, #0x6c
  40cd40:	b.eq	40cf8c <wcrtomb@plt+0xa19c>  // b.none
  40cd44:	ldr	w0, [sp, #156]
  40cd48:	cmp	w0, #0x6c
  40cd4c:	b.gt	40d12c <wcrtomb@plt+0xa33c>
  40cd50:	ldr	w0, [sp, #156]
  40cd54:	cmp	w0, #0x69
  40cd58:	b.eq	40cea0 <wcrtomb@plt+0xa0b0>  // b.none
  40cd5c:	ldr	w0, [sp, #156]
  40cd60:	cmp	w0, #0x69
  40cd64:	b.gt	40d12c <wcrtomb@plt+0xa33c>
  40cd68:	ldr	w0, [sp, #156]
  40cd6c:	cmp	w0, #0x68
  40cd70:	b.eq	40d124 <wcrtomb@plt+0xa334>  // b.none
  40cd74:	ldr	w0, [sp, #156]
  40cd78:	cmp	w0, #0x68
  40cd7c:	b.gt	40d12c <wcrtomb@plt+0xa33c>
  40cd80:	ldr	w0, [sp, #156]
  40cd84:	cmp	w0, #0x66
  40cd88:	b.eq	40ce44 <wcrtomb@plt+0xa054>  // b.none
  40cd8c:	ldr	w0, [sp, #156]
  40cd90:	cmp	w0, #0x66
  40cd94:	b.gt	40d12c <wcrtomb@plt+0xa33c>
  40cd98:	ldr	w0, [sp, #156]
  40cd9c:	cmp	w0, #0x65
  40cda0:	b.eq	40cdf8 <wcrtomb@plt+0xa008>  // b.none
  40cda4:	ldr	w0, [sp, #156]
  40cda8:	cmp	w0, #0x65
  40cdac:	b.gt	40d12c <wcrtomb@plt+0xa33c>
  40cdb0:	ldr	w0, [sp, #156]
  40cdb4:	cmp	w0, #0x62
  40cdb8:	b.eq	40cfc4 <wcrtomb@plt+0xa1d4>  // b.none
  40cdbc:	ldr	w0, [sp, #156]
  40cdc0:	cmp	w0, #0x62
  40cdc4:	b.gt	40d12c <wcrtomb@plt+0xa33c>
  40cdc8:	ldr	w0, [sp, #156]
  40cdcc:	cmp	w0, #0x45
  40cdd0:	b.eq	40cff0 <wcrtomb@plt+0xa200>  // b.none
  40cdd4:	ldr	w0, [sp, #156]
  40cdd8:	cmp	w0, #0x46
  40cddc:	b.eq	40ce8c <wcrtomb@plt+0xa09c>  // b.none
  40cde0:	b	40d12c <wcrtomb@plt+0xa33c>
  40cde4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cde8:	add	x0, x0, #0x75d
  40cdec:	mov	w1, #0x1                   	// #1
  40cdf0:	strb	w1, [x0]
  40cdf4:	b	40d134 <wcrtomb@plt+0xa344>
  40cdf8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cdfc:	add	x0, x0, #0x770
  40ce00:	ldr	x19, [x0]
  40ce04:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ce08:	add	x0, x0, #0x510
  40ce0c:	ldr	x20, [x0]
  40ce10:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ce14:	add	x0, x0, #0x510
  40ce18:	ldr	x0, [x0]
  40ce1c:	bl	402720 <strlen@plt>
  40ce20:	mov	x2, x0
  40ce24:	mov	x1, x20
  40ce28:	mov	x0, x19
  40ce2c:	bl	406630 <wcrtomb@plt+0x3840>
  40ce30:	mov	x1, x0
  40ce34:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ce38:	add	x0, x0, #0x770
  40ce3c:	str	x1, [x0]
  40ce40:	b	40d134 <wcrtomb@plt+0xa344>
  40ce44:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ce48:	add	x0, x0, #0x770
  40ce4c:	ldr	x2, [x0]
  40ce50:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ce54:	add	x0, x0, #0x510
  40ce58:	ldr	x0, [x0]
  40ce5c:	mov	x1, x0
  40ce60:	mov	x0, x2
  40ce64:	bl	40672c <wcrtomb@plt+0x393c>
  40ce68:	mov	x1, x0
  40ce6c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ce70:	add	x0, x0, #0x770
  40ce74:	str	x1, [x0]
  40ce78:	b	40d134 <wcrtomb@plt+0xa344>
  40ce7c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ce80:	add	x0, x0, #0x470
  40ce84:	strb	wzr, [x0]
  40ce88:	b	40d134 <wcrtomb@plt+0xa344>
  40ce8c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ce90:	add	x0, x0, #0x75f
  40ce94:	mov	w1, #0x1                   	// #1
  40ce98:	strb	w1, [x0]
  40ce9c:	b	40d134 <wcrtomb@plt+0xa344>
  40cea0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cea4:	add	x0, x0, #0x75e
  40cea8:	mov	w1, #0x1                   	// #1
  40ceac:	strb	w1, [x0]
  40ceb0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ceb4:	add	x0, x0, #0x510
  40ceb8:	ldr	x0, [x0]
  40cebc:	cmp	x0, #0x0
  40cec0:	b.ne	40cee4 <wcrtomb@plt+0xa0f4>  // b.any
  40cec4:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40cec8:	add	x0, x0, #0xe80
  40cecc:	bl	41ba7c <wcrtomb@plt+0x18c8c>
  40ced0:	mov	x1, x0
  40ced4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ced8:	add	x0, x0, #0x768
  40cedc:	str	x1, [x0]
  40cee0:	b	40d134 <wcrtomb@plt+0xa344>
  40cee4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cee8:	add	x0, x0, #0x510
  40ceec:	ldr	x0, [x0]
  40cef0:	mov	w1, #0x2a                  	// #42
  40cef4:	bl	402ba0 <strchr@plt>
  40cef8:	cmp	x0, #0x0
  40cefc:	b.eq	40cf24 <wcrtomb@plt+0xa134>  // b.none
  40cf00:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cf04:	add	x0, x0, #0x510
  40cf08:	ldr	x0, [x0]
  40cf0c:	bl	41ba7c <wcrtomb@plt+0x18c8c>
  40cf10:	mov	x1, x0
  40cf14:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cf18:	add	x0, x0, #0x768
  40cf1c:	str	x1, [x0]
  40cf20:	b	40d134 <wcrtomb@plt+0xa344>
  40cf24:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cf28:	add	x0, x0, #0x510
  40cf2c:	ldr	x0, [x0]
  40cf30:	bl	402720 <strlen@plt>
  40cf34:	add	x0, x0, #0x2
  40cf38:	bl	41b9a8 <wcrtomb@plt+0x18bb8>
  40cf3c:	mov	x1, x0
  40cf40:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cf44:	add	x0, x0, #0x768
  40cf48:	str	x1, [x0]
  40cf4c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cf50:	add	x0, x0, #0x768
  40cf54:	ldr	x0, [x0]
  40cf58:	mov	w1, #0x2a                  	// #42
  40cf5c:	strb	w1, [x0]
  40cf60:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cf64:	add	x0, x0, #0x768
  40cf68:	ldr	x0, [x0]
  40cf6c:	add	x2, x0, #0x1
  40cf70:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cf74:	add	x0, x0, #0x510
  40cf78:	ldr	x0, [x0]
  40cf7c:	mov	x1, x0
  40cf80:	mov	x0, x2
  40cf84:	bl	402c00 <strcpy@plt>
  40cf88:	b	40d134 <wcrtomb@plt+0xa344>
  40cf8c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cf90:	add	x0, x0, #0x510
  40cf94:	ldr	x0, [x0]
  40cf98:	bl	402850 <atoi@plt>
  40cf9c:	sxtw	x1, w0
  40cfa0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cfa4:	add	x0, x0, #0x488
  40cfa8:	str	x1, [x0]
  40cfac:	b	40d134 <wcrtomb@plt+0xa344>
  40cfb0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cfb4:	add	x0, x0, #0x8e8
  40cfb8:	mov	w1, #0x2                   	// #2
  40cfbc:	str	w1, [x0]
  40cfc0:	b	40d134 <wcrtomb@plt+0xa344>
  40cfc4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cfc8:	add	x0, x0, #0x478
  40cfcc:	adrp	x1, 435000 <_obstack_memory_used@@Base+0x18e20>
  40cfd0:	add	x1, x1, #0xe88
  40cfd4:	str	x1, [x0]
  40cfd8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cfdc:	add	x0, x0, #0x480
  40cfe0:	adrp	x1, 435000 <_obstack_memory_used@@Base+0x18e20>
  40cfe4:	add	x1, x1, #0xe90
  40cfe8:	str	x1, [x0]
  40cfec:	b	40d134 <wcrtomb@plt+0xa344>
  40cff0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40cff4:	add	x0, x0, #0x758
  40cff8:	mov	w1, #0x1                   	// #1
  40cffc:	str	w1, [x0]
  40d000:	b	40d134 <wcrtomb@plt+0xa344>
  40d004:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d008:	add	x0, x0, #0x75e
  40d00c:	mov	w1, #0x1                   	// #1
  40d010:	strb	w1, [x0]
  40d014:	b	40d134 <wcrtomb@plt+0xa344>
  40d018:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d01c:	add	x0, x0, #0x760
  40d020:	mov	w1, #0x1                   	// #1
  40d024:	strb	w1, [x0]
  40d028:	b	40d134 <wcrtomb@plt+0xa344>
  40d02c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d030:	add	x0, x0, #0x761
  40d034:	mov	w1, #0x1                   	// #1
  40d038:	strb	w1, [x0]
  40d03c:	b	40d134 <wcrtomb@plt+0xa344>
  40d040:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d044:	add	x0, x0, #0x75c
  40d048:	mov	w1, #0x1                   	// #1
  40d04c:	strb	w1, [x0]
  40d050:	b	40d134 <wcrtomb@plt+0xa344>
  40d054:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d058:	add	x0, x0, #0x520
  40d05c:	ldr	x19, [x0]
  40d060:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d064:	add	x0, x0, #0x7a0
  40d068:	ldr	x20, [x0]
  40d06c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d070:	add	x0, x0, #0x490
  40d074:	ldr	x21, [x0]
  40d078:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40d07c:	add	x0, x0, #0xe98
  40d080:	bl	402d80 <gettext@plt>
  40d084:	mov	x23, x0
  40d088:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40d08c:	add	x0, x0, #0xea8
  40d090:	bl	402d80 <gettext@plt>
  40d094:	mov	x24, x0
  40d098:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40d09c:	add	x0, x0, #0xeb8
  40d0a0:	bl	402d80 <gettext@plt>
  40d0a4:	mov	x25, x0
  40d0a8:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40d0ac:	add	x0, x0, #0xec8
  40d0b0:	bl	402d80 <gettext@plt>
  40d0b4:	mov	x26, x0
  40d0b8:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40d0bc:	add	x0, x0, #0xed8
  40d0c0:	bl	402d80 <gettext@plt>
  40d0c4:	mov	x22, x0
  40d0c8:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40d0cc:	add	x0, x0, #0xee8
  40d0d0:	bl	402d80 <gettext@plt>
  40d0d4:	str	xzr, [sp, #16]
  40d0d8:	str	x0, [sp, #8]
  40d0dc:	str	x22, [sp]
  40d0e0:	mov	x7, x26
  40d0e4:	mov	x6, x25
  40d0e8:	mov	x5, x24
  40d0ec:	mov	x4, x23
  40d0f0:	mov	x3, x21
  40d0f4:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40d0f8:	add	x2, x0, #0xef8
  40d0fc:	mov	x1, x20
  40d100:	mov	x0, x19
  40d104:	bl	41b558 <wcrtomb@plt+0x18768>
  40d108:	bl	40c934 <wcrtomb@plt+0x9b44>
  40d10c:	mov	w0, #0x0                   	// #0
  40d110:	bl	40c8ac <wcrtomb@plt+0x9abc>
  40d114:	mov	x0, #0x0                   	// #0
  40d118:	bl	40dae4 <wcrtomb@plt+0xacf4>
  40d11c:	mov	w0, #0x0                   	// #0
  40d120:	bl	402740 <exit@plt>
  40d124:	mov	w0, #0x0                   	// #0
  40d128:	bl	40c968 <wcrtomb@plt+0x9b78>
  40d12c:	mov	w0, #0x1                   	// #1
  40d130:	bl	40c968 <wcrtomb@plt+0x9b78>
  40d134:	mov	x4, #0x0                   	// #0
  40d138:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40d13c:	add	x3, x0, #0xff0
  40d140:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x18e20>
  40d144:	add	x2, x0, #0xf00
  40d148:	ldr	x1, [sp, #112]
  40d14c:	ldr	w0, [sp, #124]
  40d150:	bl	402b20 <getopt_long@plt>
  40d154:	str	w0, [sp, #156]
  40d158:	ldr	w0, [sp, #156]
  40d15c:	cmn	w0, #0x1
  40d160:	b.ne	40cc60 <wcrtomb@plt+0x9e70>  // b.any
  40d164:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d168:	add	x0, x0, #0x770
  40d16c:	ldr	x0, [x0]
  40d170:	cmp	x0, #0x0
  40d174:	b.ne	40d204 <wcrtomb@plt+0xa414>  // b.any
  40d178:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d17c:	add	x0, x0, #0x518
  40d180:	ldr	w0, [x0]
  40d184:	ldr	w1, [sp, #124]
  40d188:	cmp	w1, w0
  40d18c:	b.le	40d1fc <wcrtomb@plt+0xa40c>
  40d190:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d194:	add	x0, x0, #0x518
  40d198:	ldr	w0, [x0]
  40d19c:	add	w2, w0, #0x1
  40d1a0:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d1a4:	add	x1, x1, #0x518
  40d1a8:	str	w2, [x1]
  40d1ac:	sxtw	x0, w0
  40d1b0:	lsl	x0, x0, #3
  40d1b4:	ldr	x1, [sp, #112]
  40d1b8:	add	x0, x1, x0
  40d1bc:	ldr	x0, [x0]
  40d1c0:	str	x0, [sp, #144]
  40d1c4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d1c8:	add	x0, x0, #0x770
  40d1cc:	ldr	x19, [x0]
  40d1d0:	ldr	x0, [sp, #144]
  40d1d4:	bl	402720 <strlen@plt>
  40d1d8:	mov	x2, x0
  40d1dc:	ldr	x1, [sp, #144]
  40d1e0:	mov	x0, x19
  40d1e4:	bl	406630 <wcrtomb@plt+0x3840>
  40d1e8:	mov	x1, x0
  40d1ec:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d1f0:	add	x0, x0, #0x770
  40d1f4:	str	x1, [x0]
  40d1f8:	b	40d204 <wcrtomb@plt+0xa414>
  40d1fc:	mov	w0, #0x1                   	// #1
  40d200:	bl	40c968 <wcrtomb@plt+0x9b78>
  40d204:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d208:	add	x0, x0, #0x770
  40d20c:	ldr	x0, [x0]
  40d210:	bl	4068e0 <wcrtomb@plt+0x3af0>
  40d214:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d218:	add	x0, x0, #0x761
  40d21c:	ldrb	w0, [x0]
  40d220:	cmp	w0, #0x0
  40d224:	b.eq	40d238 <wcrtomb@plt+0xa448>  // b.none
  40d228:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d22c:	add	x0, x0, #0x770
  40d230:	ldr	x0, [x0]
  40d234:	bl	4079e0 <wcrtomb@plt+0x4bf0>
  40d238:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d23c:	add	x0, x0, #0x770
  40d240:	ldr	x2, [x0]
  40d244:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d248:	add	x0, x0, #0x518
  40d24c:	ldr	w0, [x0]
  40d250:	sxtw	x0, w0
  40d254:	lsl	x0, x0, #3
  40d258:	ldr	x1, [sp, #112]
  40d25c:	add	x0, x1, x0
  40d260:	mov	x1, x0
  40d264:	mov	x0, x2
  40d268:	bl	40b9b0 <wcrtomb@plt+0x8bc0>
  40d26c:	str	w0, [sp, #140]
  40d270:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d274:	add	x0, x0, #0x770
  40d278:	ldr	x0, [x0]
  40d27c:	bl	406bc0 <wcrtomb@plt+0x3dd0>
  40d280:	mov	x0, #0x0                   	// #0
  40d284:	bl	40dae4 <wcrtomb@plt+0xacf4>
  40d288:	ldr	w0, [sp, #140]
  40d28c:	ldp	x19, x20, [sp, #48]
  40d290:	ldp	x21, x22, [sp, #64]
  40d294:	ldp	x23, x24, [sp, #80]
  40d298:	ldp	x25, x26, [sp, #96]
  40d29c:	ldp	x29, x30, [sp, #32]
  40d2a0:	add	sp, sp, #0xb0
  40d2a4:	ret
  40d2a8:	stp	x29, x30, [sp, #-320]!
  40d2ac:	mov	x29, sp
  40d2b0:	stp	x19, x20, [sp, #16]
  40d2b4:	str	x21, [sp, #32]
  40d2b8:	str	x0, [sp, #88]
  40d2bc:	str	x1, [sp, #264]
  40d2c0:	str	x2, [sp, #272]
  40d2c4:	str	x3, [sp, #280]
  40d2c8:	str	x4, [sp, #288]
  40d2cc:	str	x5, [sp, #296]
  40d2d0:	str	x6, [sp, #304]
  40d2d4:	str	x7, [sp, #312]
  40d2d8:	str	q0, [sp, #128]
  40d2dc:	str	q1, [sp, #144]
  40d2e0:	str	q2, [sp, #160]
  40d2e4:	str	q3, [sp, #176]
  40d2e8:	str	q4, [sp, #192]
  40d2ec:	str	q5, [sp, #208]
  40d2f0:	str	q6, [sp, #224]
  40d2f4:	str	q7, [sp, #240]
  40d2f8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d2fc:	add	x0, x0, #0x508
  40d300:	ldr	x3, [x0]
  40d304:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d308:	add	x0, x0, #0x7a0
  40d30c:	ldr	x0, [x0]
  40d310:	mov	x2, x0
  40d314:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40d318:	add	x1, x0, #0x250
  40d31c:	mov	x0, x3
  40d320:	bl	402db0 <fprintf@plt>
  40d324:	add	x0, sp, #0x140
  40d328:	str	x0, [sp, #96]
  40d32c:	add	x0, sp, #0x140
  40d330:	str	x0, [sp, #104]
  40d334:	add	x0, sp, #0x100
  40d338:	str	x0, [sp, #112]
  40d33c:	mov	w0, #0xffffffc8            	// #-56
  40d340:	str	w0, [sp, #120]
  40d344:	mov	w0, #0xffffff80            	// #-128
  40d348:	str	w0, [sp, #124]
  40d34c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d350:	add	x0, x0, #0x508
  40d354:	ldr	x4, [x0]
  40d358:	add	x2, sp, #0x30
  40d35c:	add	x3, sp, #0x60
  40d360:	ldp	x0, x1, [x3]
  40d364:	stp	x0, x1, [x2]
  40d368:	ldp	x0, x1, [x3, #16]
  40d36c:	stp	x0, x1, [x2, #16]
  40d370:	add	x0, sp, #0x30
  40d374:	mov	x2, x0
  40d378:	ldr	x1, [sp, #88]
  40d37c:	mov	x0, x4
  40d380:	bl	402d10 <vfprintf@plt>
  40d384:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d388:	add	x0, x0, #0x508
  40d38c:	ldr	x0, [x0]
  40d390:	mov	x1, x0
  40d394:	mov	w0, #0xa                   	// #10
  40d398:	bl	402820 <putc_unlocked@plt>
  40d39c:	b	40d468 <wcrtomb@plt+0xa678>
  40d3a0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d3a4:	add	x0, x0, #0x780
  40d3a8:	ldr	x0, [x0]
  40d3ac:	ldrb	w0, [x0, #24]
  40d3b0:	and	w0, w0, #0x1
  40d3b4:	and	w0, w0, #0xff
  40d3b8:	cmp	w0, #0x0
  40d3bc:	b.eq	40d44c <wcrtomb@plt+0xa65c>  // b.none
  40d3c0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d3c4:	add	x0, x0, #0x780
  40d3c8:	ldr	x0, [x0]
  40d3cc:	ldr	x0, [x0]
  40d3d0:	bl	402840 <fclose@plt>
  40d3d4:	bl	402d40 <__errno_location@plt>
  40d3d8:	str	wzr, [x0]
  40d3dc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d3e0:	add	x0, x0, #0x780
  40d3e4:	ldr	x0, [x0]
  40d3e8:	ldr	x0, [x0, #8]
  40d3ec:	bl	402d70 <unlink@plt>
  40d3f0:	bl	402d40 <__errno_location@plt>
  40d3f4:	ldr	w0, [x0]
  40d3f8:	cmp	w0, #0x0
  40d3fc:	b.eq	40d44c <wcrtomb@plt+0xa65c>  // b.none
  40d400:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d404:	add	x0, x0, #0x508
  40d408:	ldr	x19, [x0]
  40d40c:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40d410:	add	x0, x0, #0x258
  40d414:	bl	402d80 <gettext@plt>
  40d418:	mov	x21, x0
  40d41c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d420:	add	x0, x0, #0x780
  40d424:	ldr	x0, [x0]
  40d428:	ldr	x20, [x0, #8]
  40d42c:	bl	402d40 <__errno_location@plt>
  40d430:	ldr	w0, [x0]
  40d434:	bl	402a50 <strerror@plt>
  40d438:	mov	x3, x0
  40d43c:	mov	x2, x20
  40d440:	mov	x1, x21
  40d444:	mov	x0, x19
  40d448:	bl	402db0 <fprintf@plt>
  40d44c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d450:	add	x0, x0, #0x780
  40d454:	ldr	x0, [x0]
  40d458:	ldr	x1, [x0, #16]
  40d45c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d460:	add	x0, x0, #0x780
  40d464:	str	x1, [x0]
  40d468:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d46c:	add	x0, x0, #0x780
  40d470:	ldr	x0, [x0]
  40d474:	cmp	x0, #0x0
  40d478:	b.ne	40d3a0 <wcrtomb@plt+0xa5b0>  // b.any
  40d47c:	mov	w0, #0x4                   	// #4
  40d480:	bl	402740 <exit@plt>
  40d484:	sub	sp, sp, #0x20
  40d488:	str	x0, [sp, #8]
  40d48c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d490:	add	x0, x0, #0x780
  40d494:	ldr	x0, [x0]
  40d498:	str	x0, [sp, #24]
  40d49c:	b	40d4cc <wcrtomb@plt+0xa6dc>
  40d4a0:	ldr	x0, [sp, #24]
  40d4a4:	ldr	x0, [x0]
  40d4a8:	ldr	x1, [sp, #8]
  40d4ac:	cmp	x1, x0
  40d4b0:	b.ne	40d4c0 <wcrtomb@plt+0xa6d0>  // b.any
  40d4b4:	ldr	x0, [sp, #24]
  40d4b8:	ldr	x0, [x0, #8]
  40d4bc:	b	40d54c <wcrtomb@plt+0xa75c>
  40d4c0:	ldr	x0, [sp, #24]
  40d4c4:	ldr	x0, [x0, #16]
  40d4c8:	str	x0, [sp, #24]
  40d4cc:	ldr	x0, [sp, #24]
  40d4d0:	cmp	x0, #0x0
  40d4d4:	b.ne	40d4a0 <wcrtomb@plt+0xa6b0>  // b.any
  40d4d8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d4dc:	add	x0, x0, #0x528
  40d4e0:	ldr	x0, [x0]
  40d4e4:	ldr	x1, [sp, #8]
  40d4e8:	cmp	x1, x0
  40d4ec:	b.ne	40d4fc <wcrtomb@plt+0xa70c>  // b.any
  40d4f0:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40d4f4:	add	x0, x0, #0x270
  40d4f8:	b	40d54c <wcrtomb@plt+0xa75c>
  40d4fc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d500:	add	x0, x0, #0x520
  40d504:	ldr	x0, [x0]
  40d508:	ldr	x1, [sp, #8]
  40d50c:	cmp	x1, x0
  40d510:	b.ne	40d520 <wcrtomb@plt+0xa730>  // b.any
  40d514:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40d518:	add	x0, x0, #0x278
  40d51c:	b	40d54c <wcrtomb@plt+0xa75c>
  40d520:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d524:	add	x0, x0, #0x508
  40d528:	ldr	x0, [x0]
  40d52c:	ldr	x1, [sp, #8]
  40d530:	cmp	x1, x0
  40d534:	b.ne	40d544 <wcrtomb@plt+0xa754>  // b.any
  40d538:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40d53c:	add	x0, x0, #0x280
  40d540:	b	40d54c <wcrtomb@plt+0xa75c>
  40d544:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40d548:	add	x0, x0, #0x288
  40d54c:	add	sp, sp, #0x20
  40d550:	ret
  40d554:	stp	x29, x30, [sp, #-48]!
  40d558:	mov	x29, sp
  40d55c:	str	x0, [sp, #24]
  40d560:	str	x1, [sp, #16]
  40d564:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d568:	add	x0, x0, #0x780
  40d56c:	ldr	x0, [x0]
  40d570:	str	x0, [sp, #40]
  40d574:	b	40d5a8 <wcrtomb@plt+0xa7b8>
  40d578:	ldr	x0, [sp, #40]
  40d57c:	ldr	x0, [x0]
  40d580:	ldr	x1, [sp, #24]
  40d584:	cmp	x1, x0
  40d588:	b.ne	40d59c <wcrtomb@plt+0xa7ac>  // b.any
  40d58c:	ldr	x0, [sp, #40]
  40d590:	ldr	x0, [x0, #8]
  40d594:	bl	402b60 <free@plt>
  40d598:	b	40d5b4 <wcrtomb@plt+0xa7c4>
  40d59c:	ldr	x0, [sp, #40]
  40d5a0:	ldr	x0, [x0, #16]
  40d5a4:	str	x0, [sp, #40]
  40d5a8:	ldr	x0, [sp, #40]
  40d5ac:	cmp	x0, #0x0
  40d5b0:	b.ne	40d578 <wcrtomb@plt+0xa788>  // b.any
  40d5b4:	ldr	x0, [sp, #40]
  40d5b8:	cmp	x0, #0x0
  40d5bc:	b.ne	40d5f4 <wcrtomb@plt+0xa804>  // b.any
  40d5c0:	mov	x1, #0x20                  	// #32
  40d5c4:	mov	x0, #0x1                   	// #1
  40d5c8:	bl	41b9c8 <wcrtomb@plt+0x18bd8>
  40d5cc:	str	x0, [sp, #40]
  40d5d0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d5d4:	add	x0, x0, #0x780
  40d5d8:	ldr	x1, [x0]
  40d5dc:	ldr	x0, [sp, #40]
  40d5e0:	str	x1, [x0, #16]
  40d5e4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40d5e8:	add	x0, x0, #0x780
  40d5ec:	ldr	x1, [sp, #40]
  40d5f0:	str	x1, [x0]
  40d5f4:	ldr	x0, [sp, #16]
  40d5f8:	bl	41ba7c <wcrtomb@plt+0x18c8c>
  40d5fc:	mov	x1, x0
  40d600:	ldr	x0, [sp, #40]
  40d604:	str	x1, [x0, #8]
  40d608:	ldr	x0, [sp, #40]
  40d60c:	ldr	x1, [sp, #24]
  40d610:	str	x1, [x0]
  40d614:	ldr	x0, [sp, #40]
  40d618:	ldrb	w1, [x0, #24]
  40d61c:	and	w1, w1, #0xfffffffe
  40d620:	strb	w1, [x0, #24]
  40d624:	nop
  40d628:	ldp	x29, x30, [sp], #48
  40d62c:	ret
  40d630:	stp	x29, x30, [sp, #-80]!
  40d634:	mov	x29, sp
  40d638:	str	x19, [sp, #16]
  40d63c:	str	x0, [sp, #56]
  40d640:	str	x1, [sp, #48]
  40d644:	str	w2, [sp, #44]
  40d648:	ldr	x1, [sp, #48]
  40d64c:	ldr	x0, [sp, #56]
  40d650:	bl	402880 <fopen@plt>
  40d654:	str	x0, [sp, #72]
  40d658:	ldr	x0, [sp, #72]
  40d65c:	cmp	x0, #0x0
  40d660:	b.ne	40d6a4 <wcrtomb@plt+0xa8b4>  // b.any
  40d664:	ldr	w0, [sp, #44]
  40d668:	cmp	w0, #0x0
  40d66c:	b.eq	40d69c <wcrtomb@plt+0xa8ac>  // b.none
  40d670:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40d674:	add	x0, x0, #0x298
  40d678:	bl	402d80 <gettext@plt>
  40d67c:	mov	x19, x0
  40d680:	bl	402d40 <__errno_location@plt>
  40d684:	ldr	w0, [x0]
  40d688:	bl	402a50 <strerror@plt>
  40d68c:	mov	x2, x0
  40d690:	ldr	x1, [sp, #56]
  40d694:	mov	x0, x19
  40d698:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40d69c:	mov	x0, #0x0                   	// #0
  40d6a0:	b	40d6b4 <wcrtomb@plt+0xa8c4>
  40d6a4:	ldr	x1, [sp, #56]
  40d6a8:	ldr	x0, [sp, #72]
  40d6ac:	bl	40d554 <wcrtomb@plt+0xa764>
  40d6b0:	ldr	x0, [sp, #72]
  40d6b4:	ldr	x19, [sp, #16]
  40d6b8:	ldp	x29, x30, [sp], #80
  40d6bc:	ret
  40d6c0:	stp	x29, x30, [sp, #-80]!
  40d6c4:	mov	x29, sp
  40d6c8:	str	x19, [sp, #16]
  40d6cc:	str	w0, [sp, #60]
  40d6d0:	str	x1, [sp, #48]
  40d6d4:	str	x2, [sp, #40]
  40d6d8:	str	w3, [sp, #56]
  40d6dc:	ldr	x1, [sp, #40]
  40d6e0:	ldr	w0, [sp, #60]
  40d6e4:	bl	402990 <fdopen@plt>
  40d6e8:	str	x0, [sp, #72]
  40d6ec:	ldr	x0, [sp, #72]
  40d6f0:	cmp	x0, #0x0
  40d6f4:	b.ne	40d738 <wcrtomb@plt+0xa948>  // b.any
  40d6f8:	ldr	w0, [sp, #56]
  40d6fc:	cmp	w0, #0x0
  40d700:	b.eq	40d730 <wcrtomb@plt+0xa940>  // b.none
  40d704:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40d708:	add	x0, x0, #0x2b8
  40d70c:	bl	402d80 <gettext@plt>
  40d710:	mov	x19, x0
  40d714:	bl	402d40 <__errno_location@plt>
  40d718:	ldr	w0, [x0]
  40d71c:	bl	402a50 <strerror@plt>
  40d720:	mov	x2, x0
  40d724:	ldr	x1, [sp, #48]
  40d728:	mov	x0, x19
  40d72c:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40d730:	mov	x0, #0x0                   	// #0
  40d734:	b	40d748 <wcrtomb@plt+0xa958>
  40d738:	ldr	x1, [sp, #48]
  40d73c:	ldr	x0, [sp, #72]
  40d740:	bl	40d554 <wcrtomb@plt+0xa764>
  40d744:	ldr	x0, [sp, #72]
  40d748:	ldr	x19, [sp, #16]
  40d74c:	ldp	x29, x30, [sp], #80
  40d750:	ret
  40d754:	stp	x29, x30, [sp, #-96]!
  40d758:	mov	x29, sp
  40d75c:	str	x19, [sp, #16]
  40d760:	str	x0, [sp, #56]
  40d764:	str	x1, [sp, #48]
  40d768:	str	x2, [sp, #40]
  40d76c:	str	x3, [sp, #32]
  40d770:	ldr	x0, [sp, #48]
  40d774:	bl	402720 <strlen@plt>
  40d778:	mov	x19, x0
  40d77c:	ldr	x0, [sp, #40]
  40d780:	bl	402720 <strlen@plt>
  40d784:	add	x0, x19, x0
  40d788:	add	x0, x0, #0x8
  40d78c:	bl	41b8d0 <wcrtomb@plt+0x18ae0>
  40d790:	str	x0, [sp, #88]
  40d794:	ldr	x3, [sp, #40]
  40d798:	ldr	x2, [sp, #48]
  40d79c:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40d7a0:	add	x1, x0, #0x2d8
  40d7a4:	ldr	x0, [sp, #88]
  40d7a8:	bl	4027b0 <sprintf@plt>
  40d7ac:	mov	w0, #0x3f                  	// #63
  40d7b0:	bl	402d00 <umask@plt>
  40d7b4:	str	w0, [sp, #84]
  40d7b8:	mov	w1, #0x0                   	// #0
  40d7bc:	ldr	x0, [sp, #88]
  40d7c0:	bl	402aa0 <mkostemp@plt>
  40d7c4:	str	w0, [sp, #80]
  40d7c8:	ldr	w0, [sp, #84]
  40d7cc:	bl	402d00 <umask@plt>
  40d7d0:	ldr	w0, [sp, #80]
  40d7d4:	cmn	w0, #0x1
  40d7d8:	b.ne	40d808 <wcrtomb@plt+0xaa18>  // b.any
  40d7dc:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40d7e0:	add	x0, x0, #0x2e8
  40d7e4:	bl	402d80 <gettext@plt>
  40d7e8:	mov	x19, x0
  40d7ec:	bl	402d40 <__errno_location@plt>
  40d7f0:	ldr	w0, [x0]
  40d7f4:	bl	402a50 <strerror@plt>
  40d7f8:	mov	x2, x0
  40d7fc:	ldr	x1, [sp, #88]
  40d800:	mov	x0, x19
  40d804:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40d808:	ldr	x0, [sp, #56]
  40d80c:	ldr	x1, [sp, #88]
  40d810:	str	x1, [x0]
  40d814:	ldr	x1, [sp, #32]
  40d818:	ldr	w0, [sp, #80]
  40d81c:	bl	402990 <fdopen@plt>
  40d820:	str	x0, [sp, #72]
  40d824:	ldr	x1, [sp, #88]
  40d828:	ldr	x0, [sp, #72]
  40d82c:	bl	40d554 <wcrtomb@plt+0xa764>
  40d830:	ldr	x0, [sp, #72]
  40d834:	ldr	x19, [sp, #16]
  40d838:	ldp	x29, x30, [sp], #96
  40d83c:	ret
  40d840:	stp	x29, x30, [sp, #-64]!
  40d844:	mov	x29, sp
  40d848:	stp	x19, x20, [sp, #16]
  40d84c:	str	x0, [sp, #56]
  40d850:	str	x1, [sp, #48]
  40d854:	str	x2, [sp, #40]
  40d858:	str	x3, [sp, #32]
  40d85c:	ldr	x0, [sp, #32]
  40d860:	bl	402c10 <clearerr_unlocked@plt>
  40d864:	ldr	x0, [sp, #48]
  40d868:	cmp	x0, #0x0
  40d86c:	b.eq	40d8dc <wcrtomb@plt+0xaaec>  // b.none
  40d870:	ldr	x3, [sp, #32]
  40d874:	ldr	x2, [sp, #40]
  40d878:	ldr	x1, [sp, #48]
  40d87c:	ldr	x0, [sp, #56]
  40d880:	bl	402710 <fwrite_unlocked@plt>
  40d884:	mov	x1, x0
  40d888:	ldr	x0, [sp, #40]
  40d88c:	cmp	x0, x1
  40d890:	b.eq	40d8dc <wcrtomb@plt+0xaaec>  // b.none
  40d894:	ldr	x2, [sp, #40]
  40d898:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40d89c:	add	x1, x0, #0x310
  40d8a0:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40d8a4:	add	x0, x0, #0x338
  40d8a8:	bl	402700 <ngettext@plt>
  40d8ac:	mov	x19, x0
  40d8b0:	ldr	x0, [sp, #32]
  40d8b4:	bl	40d484 <wcrtomb@plt+0xa694>
  40d8b8:	mov	x20, x0
  40d8bc:	bl	402d40 <__errno_location@plt>
  40d8c0:	ldr	w0, [x0]
  40d8c4:	bl	402a50 <strerror@plt>
  40d8c8:	mov	x3, x0
  40d8cc:	mov	x2, x20
  40d8d0:	ldr	x1, [sp, #40]
  40d8d4:	mov	x0, x19
  40d8d8:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40d8dc:	nop
  40d8e0:	ldp	x19, x20, [sp, #16]
  40d8e4:	ldp	x29, x30, [sp], #64
  40d8e8:	ret
  40d8ec:	stp	x29, x30, [sp, #-64]!
  40d8f0:	mov	x29, sp
  40d8f4:	stp	x19, x20, [sp, #16]
  40d8f8:	str	x0, [sp, #56]
  40d8fc:	str	x1, [sp, #48]
  40d900:	str	x2, [sp, #40]
  40d904:	str	x3, [sp, #32]
  40d908:	ldr	x0, [sp, #32]
  40d90c:	bl	402c10 <clearerr_unlocked@plt>
  40d910:	ldr	x0, [sp, #48]
  40d914:	cmp	x0, #0x0
  40d918:	b.eq	40d988 <wcrtomb@plt+0xab98>  // b.none
  40d91c:	ldr	x3, [sp, #32]
  40d920:	ldr	x2, [sp, #40]
  40d924:	ldr	x1, [sp, #48]
  40d928:	ldr	x0, [sp, #56]
  40d92c:	bl	402af0 <fread_unlocked@plt>
  40d930:	str	x0, [sp, #40]
  40d934:	ldr	x0, [sp, #40]
  40d938:	cmp	x0, #0x0
  40d93c:	b.ne	40d988 <wcrtomb@plt+0xab98>  // b.any
  40d940:	ldr	x0, [sp, #32]
  40d944:	bl	402790 <ferror_unlocked@plt>
  40d948:	cmp	w0, #0x0
  40d94c:	b.eq	40d988 <wcrtomb@plt+0xab98>  // b.none
  40d950:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40d954:	add	x0, x0, #0x360
  40d958:	bl	402d80 <gettext@plt>
  40d95c:	mov	x19, x0
  40d960:	ldr	x0, [sp, #32]
  40d964:	bl	40d484 <wcrtomb@plt+0xa694>
  40d968:	mov	x20, x0
  40d96c:	bl	402d40 <__errno_location@plt>
  40d970:	ldr	w0, [x0]
  40d974:	bl	402a50 <strerror@plt>
  40d978:	mov	x2, x0
  40d97c:	mov	x1, x20
  40d980:	mov	x0, x19
  40d984:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40d988:	ldr	x0, [sp, #40]
  40d98c:	ldp	x19, x20, [sp, #16]
  40d990:	ldp	x29, x30, [sp], #64
  40d994:	ret
  40d998:	stp	x29, x30, [sp, #-80]!
  40d99c:	mov	x29, sp
  40d9a0:	stp	x19, x20, [sp, #16]
  40d9a4:	str	x0, [sp, #56]
  40d9a8:	str	x1, [sp, #48]
  40d9ac:	strb	w2, [sp, #47]
  40d9b0:	str	x3, [sp, #32]
  40d9b4:	ldr	x0, [sp, #32]
  40d9b8:	bl	402790 <ferror_unlocked@plt>
  40d9bc:	cmp	w0, #0x0
  40d9c0:	cset	w0, ne  // ne = any
  40d9c4:	strb	w0, [sp, #71]
  40d9c8:	ldrb	w0, [sp, #71]
  40d9cc:	eor	w0, w0, #0x1
  40d9d0:	and	w0, w0, #0xff
  40d9d4:	cmp	w0, #0x0
  40d9d8:	b.eq	40da0c <wcrtomb@plt+0xac1c>  // b.none
  40d9dc:	ldrb	w0, [sp, #47]
  40d9e0:	ldr	x3, [sp, #32]
  40d9e4:	mov	w2, w0
  40d9e8:	ldr	x1, [sp, #48]
  40d9ec:	ldr	x0, [sp, #56]
  40d9f0:	bl	4028e0 <getdelim@plt>
  40d9f4:	str	x0, [sp, #72]
  40d9f8:	ldr	x0, [sp, #32]
  40d9fc:	bl	402790 <ferror_unlocked@plt>
  40da00:	cmp	w0, #0x0
  40da04:	cset	w0, ne  // ne = any
  40da08:	strb	w0, [sp, #71]
  40da0c:	ldrb	w0, [sp, #71]
  40da10:	cmp	w0, #0x0
  40da14:	b.eq	40da50 <wcrtomb@plt+0xac60>  // b.none
  40da18:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40da1c:	add	x0, x0, #0x360
  40da20:	bl	402d80 <gettext@plt>
  40da24:	mov	x19, x0
  40da28:	ldr	x0, [sp, #32]
  40da2c:	bl	40d484 <wcrtomb@plt+0xa694>
  40da30:	mov	x20, x0
  40da34:	bl	402d40 <__errno_location@plt>
  40da38:	ldr	w0, [x0]
  40da3c:	bl	402a50 <strerror@plt>
  40da40:	mov	x2, x0
  40da44:	mov	x1, x20
  40da48:	mov	x0, x19
  40da4c:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40da50:	ldr	x0, [sp, #72]
  40da54:	ldp	x19, x20, [sp, #16]
  40da58:	ldp	x29, x30, [sp], #80
  40da5c:	ret
  40da60:	stp	x29, x30, [sp, #-48]!
  40da64:	mov	x29, sp
  40da68:	str	x19, [sp, #16]
  40da6c:	str	x0, [sp, #40]
  40da70:	ldr	x0, [sp, #40]
  40da74:	bl	402800 <__fwriting@plt>
  40da78:	cmp	w0, #0x0
  40da7c:	b.eq	40dad4 <wcrtomb@plt+0xace4>  // b.none
  40da80:	ldr	x0, [sp, #40]
  40da84:	bl	402c10 <clearerr_unlocked@plt>
  40da88:	ldr	x0, [sp, #40]
  40da8c:	bl	402bf0 <fflush_unlocked@plt>
  40da90:	cmn	w0, #0x1
  40da94:	b.ne	40dad8 <wcrtomb@plt+0xace8>  // b.any
  40da98:	bl	402d40 <__errno_location@plt>
  40da9c:	ldr	w0, [x0]
  40daa0:	cmp	w0, #0x9
  40daa4:	b.eq	40dad8 <wcrtomb@plt+0xace8>  // b.none
  40daa8:	ldr	x0, [sp, #40]
  40daac:	bl	40d484 <wcrtomb@plt+0xa694>
  40dab0:	mov	x19, x0
  40dab4:	bl	402d40 <__errno_location@plt>
  40dab8:	ldr	w0, [x0]
  40dabc:	bl	402a50 <strerror@plt>
  40dac0:	mov	x2, x0
  40dac4:	mov	x1, x19
  40dac8:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40dacc:	add	x0, x0, #0x378
  40dad0:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40dad4:	nop
  40dad8:	ldr	x19, [sp, #16]
  40dadc:	ldp	x29, x30, [sp], #48
  40dae0:	ret
  40dae4:	stp	x29, x30, [sp, #-80]!
  40dae8:	mov	x29, sp
  40daec:	str	x0, [sp, #24]
  40daf0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40daf4:	add	x0, x0, #0x780
  40daf8:	ldr	x0, [x0]
  40dafc:	str	x0, [sp, #48]
  40db00:	add	x0, sp, #0x20
  40db04:	str	x0, [sp, #72]
  40db08:	b	40db68 <wcrtomb@plt+0xad78>
  40db0c:	ldr	x0, [sp, #24]
  40db10:	cmp	x0, #0x0
  40db14:	b.eq	40db2c <wcrtomb@plt+0xad3c>  // b.none
  40db18:	ldr	x0, [sp, #64]
  40db1c:	ldr	x0, [x0]
  40db20:	ldr	x1, [sp, #24]
  40db24:	cmp	x1, x0
  40db28:	b.ne	40db60 <wcrtomb@plt+0xad70>  // b.any
  40db2c:	ldr	x0, [sp, #64]
  40db30:	ldr	x0, [x0]
  40db34:	bl	40dbb8 <wcrtomb@plt+0xadc8>
  40db38:	ldr	x0, [sp, #64]
  40db3c:	ldr	x1, [x0, #16]
  40db40:	ldr	x0, [sp, #72]
  40db44:	str	x1, [x0, #16]
  40db48:	ldr	x0, [sp, #64]
  40db4c:	ldr	x0, [x0, #8]
  40db50:	bl	402b60 <free@plt>
  40db54:	ldr	x0, [sp, #64]
  40db58:	bl	402b60 <free@plt>
  40db5c:	b	40db68 <wcrtomb@plt+0xad78>
  40db60:	ldr	x0, [sp, #64]
  40db64:	str	x0, [sp, #72]
  40db68:	ldr	x0, [sp, #72]
  40db6c:	ldr	x0, [x0, #16]
  40db70:	str	x0, [sp, #64]
  40db74:	ldr	x0, [sp, #64]
  40db78:	cmp	x0, #0x0
  40db7c:	b.ne	40db0c <wcrtomb@plt+0xad1c>  // b.any
  40db80:	ldr	x1, [sp, #48]
  40db84:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40db88:	add	x0, x0, #0x780
  40db8c:	str	x1, [x0]
  40db90:	ldr	x0, [sp, #24]
  40db94:	cmp	x0, #0x0
  40db98:	b.ne	40dbac <wcrtomb@plt+0xadbc>  // b.any
  40db9c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dba0:	add	x0, x0, #0x520
  40dba4:	ldr	x0, [x0]
  40dba8:	bl	40dbb8 <wcrtomb@plt+0xadc8>
  40dbac:	nop
  40dbb0:	ldp	x29, x30, [sp], #80
  40dbb4:	ret
  40dbb8:	stp	x29, x30, [sp, #-48]!
  40dbbc:	mov	x29, sp
  40dbc0:	str	x19, [sp, #16]
  40dbc4:	str	x0, [sp, #40]
  40dbc8:	ldr	x0, [sp, #40]
  40dbcc:	bl	40da60 <wcrtomb@plt+0xac70>
  40dbd0:	ldr	x0, [sp, #40]
  40dbd4:	bl	402c10 <clearerr_unlocked@plt>
  40dbd8:	ldr	x0, [sp, #40]
  40dbdc:	bl	402840 <fclose@plt>
  40dbe0:	cmn	w0, #0x1
  40dbe4:	b.ne	40dc14 <wcrtomb@plt+0xae24>  // b.any
  40dbe8:	ldr	x0, [sp, #40]
  40dbec:	bl	40d484 <wcrtomb@plt+0xa694>
  40dbf0:	mov	x19, x0
  40dbf4:	bl	402d40 <__errno_location@plt>
  40dbf8:	ldr	w0, [x0]
  40dbfc:	bl	402a50 <strerror@plt>
  40dc00:	mov	x2, x0
  40dc04:	mov	x1, x19
  40dc08:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40dc0c:	add	x0, x0, #0x390
  40dc10:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40dc14:	nop
  40dc18:	ldr	x19, [sp, #16]
  40dc1c:	ldp	x29, x30, [sp], #48
  40dc20:	ret
  40dc24:	stp	x29, x30, [sp, #-208]!
  40dc28:	mov	x29, sp
  40dc2c:	str	x19, [sp, #16]
  40dc30:	str	x0, [sp, #40]
  40dc34:	ldr	x0, [sp, #40]
  40dc38:	str	x0, [sp, #200]
  40dc3c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dc40:	add	x0, x0, #0x788
  40dc44:	ldr	w0, [x0]
  40dc48:	cmp	w0, #0x0
  40dc4c:	b.ne	40df88 <wcrtomb@plt+0xb198>  // b.any
  40dc50:	mov	x0, #0x1001                	// #4097
  40dc54:	bl	41b9a8 <wcrtomb@plt+0x18bb8>
  40dc58:	mov	x1, x0
  40dc5c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dc60:	add	x0, x0, #0x790
  40dc64:	str	x1, [x0]
  40dc68:	mov	x0, #0x1001                	// #4097
  40dc6c:	bl	41b9a8 <wcrtomb@plt+0x18bb8>
  40dc70:	mov	x1, x0
  40dc74:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dc78:	add	x0, x0, #0x798
  40dc7c:	str	x1, [x0]
  40dc80:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dc84:	add	x0, x0, #0x788
  40dc88:	mov	w1, #0x1001                	// #4097
  40dc8c:	str	w1, [x0]
  40dc90:	b	40df88 <wcrtomb@plt+0xb198>
  40dc94:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dc98:	add	x0, x0, #0x798
  40dc9c:	ldr	x0, [x0]
  40dca0:	ldr	x1, [sp, #200]
  40dca4:	cmp	x1, x0
  40dca8:	b.ne	40dd70 <wcrtomb@plt+0xaf80>  // b.any
  40dcac:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dcb0:	add	x0, x0, #0x790
  40dcb4:	ldr	x2, [x0]
  40dcb8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dcbc:	add	x0, x0, #0x798
  40dcc0:	ldr	x0, [x0]
  40dcc4:	mov	x1, x0
  40dcc8:	mov	x0, x2
  40dccc:	bl	402c00 <strcpy@plt>
  40dcd0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dcd4:	add	x0, x0, #0x790
  40dcd8:	ldr	x0, [x0]
  40dcdc:	str	x0, [sp, #200]
  40dce0:	b	40dd70 <wcrtomb@plt+0xaf80>
  40dce4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dce8:	add	x0, x0, #0x788
  40dcec:	ldr	w0, [x0]
  40dcf0:	lsl	w1, w0, #1
  40dcf4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dcf8:	add	x0, x0, #0x788
  40dcfc:	str	w1, [x0]
  40dd00:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dd04:	add	x0, x0, #0x790
  40dd08:	ldr	x2, [x0]
  40dd0c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dd10:	add	x0, x0, #0x788
  40dd14:	ldr	w0, [x0]
  40dd18:	sxtw	x0, w0
  40dd1c:	mov	x1, x0
  40dd20:	mov	x0, x2
  40dd24:	bl	41b910 <wcrtomb@plt+0x18b20>
  40dd28:	mov	x1, x0
  40dd2c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dd30:	add	x0, x0, #0x790
  40dd34:	str	x1, [x0]
  40dd38:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dd3c:	add	x0, x0, #0x798
  40dd40:	ldr	x2, [x0]
  40dd44:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dd48:	add	x0, x0, #0x788
  40dd4c:	ldr	w0, [x0]
  40dd50:	sxtw	x0, w0
  40dd54:	mov	x1, x0
  40dd58:	mov	x0, x2
  40dd5c:	bl	41b910 <wcrtomb@plt+0x18b20>
  40dd60:	mov	x1, x0
  40dd64:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dd68:	add	x0, x0, #0x798
  40dd6c:	str	x1, [x0]
  40dd70:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dd74:	add	x0, x0, #0x798
  40dd78:	ldr	x1, [x0]
  40dd7c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dd80:	add	x0, x0, #0x788
  40dd84:	ldr	w0, [x0]
  40dd88:	sxtw	x0, w0
  40dd8c:	mov	x2, x0
  40dd90:	ldr	x0, [sp, #200]
  40dd94:	bl	402780 <readlink@plt>
  40dd98:	str	w0, [sp, #196]
  40dd9c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dda0:	add	x0, x0, #0x788
  40dda4:	ldr	w0, [x0]
  40dda8:	ldr	w1, [sp, #196]
  40ddac:	cmp	w1, w0
  40ddb0:	b.eq	40dce4 <wcrtomb@plt+0xaef4>  // b.none
  40ddb4:	ldr	w0, [sp, #196]
  40ddb8:	cmp	w0, #0x0
  40ddbc:	b.ge	40ddec <wcrtomb@plt+0xaffc>  // b.tcont
  40ddc0:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40ddc4:	add	x0, x0, #0x3a8
  40ddc8:	bl	402d80 <gettext@plt>
  40ddcc:	mov	x19, x0
  40ddd0:	bl	402d40 <__errno_location@plt>
  40ddd4:	ldr	w0, [x0]
  40ddd8:	bl	402a50 <strerror@plt>
  40dddc:	mov	x2, x0
  40dde0:	ldr	x1, [sp, #200]
  40dde4:	mov	x0, x19
  40dde8:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40ddec:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ddf0:	add	x0, x0, #0x798
  40ddf4:	ldr	x1, [x0]
  40ddf8:	ldrsw	x0, [sp, #196]
  40ddfc:	add	x0, x1, x0
  40de00:	strb	wzr, [x0]
  40de04:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40de08:	add	x0, x0, #0x798
  40de0c:	ldr	x0, [x0]
  40de10:	ldrb	w0, [x0]
  40de14:	cmp	w0, #0x2f
  40de18:	b.eq	40df78 <wcrtomb@plt+0xb188>  // b.none
  40de1c:	mov	w1, #0x2f                  	// #47
  40de20:	ldr	x0, [sp, #200]
  40de24:	bl	402a60 <strrchr@plt>
  40de28:	str	x0, [sp, #184]
  40de2c:	ldr	x0, [sp, #184]
  40de30:	cmp	x0, #0x0
  40de34:	b.eq	40df78 <wcrtomb@plt+0xb188>  // b.none
  40de38:	ldr	x1, [sp, #184]
  40de3c:	ldr	x0, [sp, #200]
  40de40:	sub	x0, x1, x0
  40de44:	add	w0, w0, #0x1
  40de48:	str	w0, [sp, #180]
  40de4c:	ldr	w1, [sp, #180]
  40de50:	ldr	w0, [sp, #196]
  40de54:	add	w1, w1, w0
  40de58:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40de5c:	add	x0, x0, #0x788
  40de60:	ldr	w0, [x0]
  40de64:	cmp	w1, w0
  40de68:	b.lt	40def8 <wcrtomb@plt+0xb108>  // b.tstop
  40de6c:	ldr	w1, [sp, #180]
  40de70:	ldr	w0, [sp, #196]
  40de74:	add	w0, w1, w0
  40de78:	add	w1, w0, #0x1
  40de7c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40de80:	add	x0, x0, #0x788
  40de84:	str	w1, [x0]
  40de88:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40de8c:	add	x0, x0, #0x790
  40de90:	ldr	x2, [x0]
  40de94:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40de98:	add	x0, x0, #0x788
  40de9c:	ldr	w0, [x0]
  40dea0:	sxtw	x0, w0
  40dea4:	mov	x1, x0
  40dea8:	mov	x0, x2
  40deac:	bl	41b910 <wcrtomb@plt+0x18b20>
  40deb0:	mov	x1, x0
  40deb4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40deb8:	add	x0, x0, #0x790
  40debc:	str	x1, [x0]
  40dec0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40dec4:	add	x0, x0, #0x798
  40dec8:	ldr	x2, [x0]
  40decc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40ded0:	add	x0, x0, #0x788
  40ded4:	ldr	w0, [x0]
  40ded8:	sxtw	x0, w0
  40dedc:	mov	x1, x0
  40dee0:	mov	x0, x2
  40dee4:	bl	41b910 <wcrtomb@plt+0x18b20>
  40dee8:	mov	x1, x0
  40deec:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40def0:	add	x0, x0, #0x798
  40def4:	str	x1, [x0]
  40def8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40defc:	add	x0, x0, #0x790
  40df00:	ldr	x0, [x0]
  40df04:	ldr	x1, [sp, #200]
  40df08:	cmp	x1, x0
  40df0c:	b.eq	40df2c <wcrtomb@plt+0xb13c>  // b.none
  40df10:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40df14:	add	x0, x0, #0x790
  40df18:	ldr	x0, [x0]
  40df1c:	ldrsw	x1, [sp, #180]
  40df20:	mov	x2, x1
  40df24:	ldr	x1, [sp, #200]
  40df28:	bl	4026d0 <memcpy@plt>
  40df2c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40df30:	add	x0, x0, #0x790
  40df34:	ldr	x1, [x0]
  40df38:	ldrsw	x0, [sp, #180]
  40df3c:	add	x3, x1, x0
  40df40:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40df44:	add	x0, x0, #0x798
  40df48:	ldr	x1, [x0]
  40df4c:	ldr	w0, [sp, #196]
  40df50:	add	w0, w0, #0x1
  40df54:	sxtw	x0, w0
  40df58:	mov	x2, x0
  40df5c:	mov	x0, x3
  40df60:	bl	4026d0 <memcpy@plt>
  40df64:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40df68:	add	x0, x0, #0x790
  40df6c:	ldr	x0, [x0]
  40df70:	str	x0, [sp, #200]
  40df74:	b	40df88 <wcrtomb@plt+0xb198>
  40df78:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  40df7c:	add	x0, x0, #0x798
  40df80:	ldr	x0, [x0]
  40df84:	str	x0, [sp, #200]
  40df88:	add	x0, sp, #0x30
  40df8c:	mov	x1, x0
  40df90:	ldr	x0, [sp, #200]
  40df94:	bl	434880 <_obstack_memory_used@@Base+0x186a0>
  40df98:	str	w0, [sp, #196]
  40df9c:	ldr	w0, [sp, #196]
  40dfa0:	cmp	w0, #0x0
  40dfa4:	b.ne	40dfbc <wcrtomb@plt+0xb1cc>  // b.any
  40dfa8:	ldr	w1, [sp, #64]
  40dfac:	mov	w0, #0xa000                	// #40960
  40dfb0:	and	w0, w1, w0
  40dfb4:	cmp	w0, #0xa, lsl #12
  40dfb8:	b.eq	40dc94 <wcrtomb@plt+0xaea4>  // b.none
  40dfbc:	ldr	w0, [sp, #196]
  40dfc0:	cmp	w0, #0x0
  40dfc4:	b.ge	40dff4 <wcrtomb@plt+0xb204>  // b.tcont
  40dfc8:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40dfcc:	add	x0, x0, #0x3c8
  40dfd0:	bl	402d80 <gettext@plt>
  40dfd4:	mov	x19, x0
  40dfd8:	bl	402d40 <__errno_location@plt>
  40dfdc:	ldr	w0, [x0]
  40dfe0:	bl	402a50 <strerror@plt>
  40dfe4:	mov	x2, x0
  40dfe8:	ldr	x1, [sp, #200]
  40dfec:	mov	x0, x19
  40dff0:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40dff4:	ldr	x0, [sp, #200]
  40dff8:	ldr	x19, [sp, #16]
  40dffc:	ldp	x29, x30, [sp], #208
  40e000:	ret
  40e004:	stp	x29, x30, [sp, #-80]!
  40e008:	mov	x29, sp
  40e00c:	str	x19, [sp, #16]
  40e010:	str	x0, [sp, #56]
  40e014:	str	x1, [sp, #48]
  40e018:	str	x2, [sp, #40]
  40e01c:	ldr	x1, [sp, #48]
  40e020:	ldr	x0, [sp, #56]
  40e024:	bl	402bd0 <rename@plt>
  40e028:	str	w0, [sp, #76]
  40e02c:	ldr	w0, [sp, #76]
  40e030:	cmn	w0, #0x1
  40e034:	b.ne	40e0d8 <wcrtomb@plt+0xb2e8>  // b.any
  40e038:	ldr	x0, [sp, #40]
  40e03c:	cmp	x0, #0x0
  40e040:	b.eq	40e0ac <wcrtomb@plt+0xb2bc>  // b.none
  40e044:	bl	402d40 <__errno_location@plt>
  40e048:	ldr	w0, [x0]
  40e04c:	str	w0, [sp, #72]
  40e050:	bl	402d40 <__errno_location@plt>
  40e054:	str	wzr, [x0]
  40e058:	ldr	x0, [sp, #40]
  40e05c:	bl	402d70 <unlink@plt>
  40e060:	bl	402d40 <__errno_location@plt>
  40e064:	ldr	w0, [x0]
  40e068:	cmp	w0, #0x0
  40e06c:	b.eq	40e09c <wcrtomb@plt+0xb2ac>  // b.none
  40e070:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40e074:	add	x0, x0, #0x258
  40e078:	bl	402d80 <gettext@plt>
  40e07c:	mov	x19, x0
  40e080:	bl	402d40 <__errno_location@plt>
  40e084:	ldr	w0, [x0]
  40e088:	bl	402a50 <strerror@plt>
  40e08c:	mov	x2, x0
  40e090:	ldr	x1, [sp, #40]
  40e094:	mov	x0, x19
  40e098:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40e09c:	bl	402d40 <__errno_location@plt>
  40e0a0:	mov	x1, x0
  40e0a4:	ldr	w0, [sp, #72]
  40e0a8:	str	w0, [x1]
  40e0ac:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40e0b0:	add	x0, x0, #0x3e0
  40e0b4:	bl	402d80 <gettext@plt>
  40e0b8:	mov	x19, x0
  40e0bc:	bl	402d40 <__errno_location@plt>
  40e0c0:	ldr	w0, [x0]
  40e0c4:	bl	402a50 <strerror@plt>
  40e0c8:	mov	x2, x0
  40e0cc:	ldr	x1, [sp, #56]
  40e0d0:	mov	x0, x19
  40e0d4:	bl	40d2a8 <wcrtomb@plt+0xa4b8>
  40e0d8:	nop
  40e0dc:	ldr	x19, [sp, #16]
  40e0e0:	ldp	x29, x30, [sp], #80
  40e0e4:	ret
  40e0e8:	stp	x29, x30, [sp, #-32]!
  40e0ec:	mov	x29, sp
  40e0f0:	mov	x1, #0x18                  	// #24
  40e0f4:	mov	x0, #0x1                   	// #1
  40e0f8:	bl	41b9c8 <wcrtomb@plt+0x18bd8>
  40e0fc:	str	x0, [sp, #24]
  40e100:	mov	x0, #0x32                  	// #50
  40e104:	bl	41b9a8 <wcrtomb@plt+0x18bb8>
  40e108:	mov	x1, x0
  40e10c:	ldr	x0, [sp, #24]
  40e110:	str	x1, [x0, #16]
  40e114:	ldr	x0, [sp, #24]
  40e118:	mov	x1, #0x32                  	// #50
  40e11c:	str	x1, [x0]
  40e120:	ldr	x0, [sp, #24]
  40e124:	str	xzr, [x0, #8]
  40e128:	ldr	x0, [sp, #24]
  40e12c:	ldp	x29, x30, [sp], #32
  40e130:	ret
  40e134:	sub	sp, sp, #0x10
  40e138:	str	x0, [sp, #8]
  40e13c:	ldr	x0, [sp, #8]
  40e140:	ldr	x0, [x0, #16]
  40e144:	add	sp, sp, #0x10
  40e148:	ret
  40e14c:	sub	sp, sp, #0x10
  40e150:	str	x0, [sp, #8]
  40e154:	ldr	x0, [sp, #8]
  40e158:	ldr	x0, [x0, #8]
  40e15c:	add	sp, sp, #0x10
  40e160:	ret
  40e164:	stp	x29, x30, [sp, #-48]!
  40e168:	mov	x29, sp
  40e16c:	str	x0, [sp, #24]
  40e170:	str	x1, [sp, #16]
  40e174:	str	xzr, [sp, #40]
  40e178:	ldr	x0, [sp, #24]
  40e17c:	ldr	x0, [x0]
  40e180:	str	x0, [sp, #32]
  40e184:	ldr	x1, [sp, #16]
  40e188:	ldr	x0, [sp, #32]
  40e18c:	cmp	x1, x0
  40e190:	b.ls	40e20c <wcrtomb@plt+0xb41c>  // b.plast
  40e194:	ldr	x0, [sp, #32]
  40e198:	lsl	x0, x0, #1
  40e19c:	str	x0, [sp, #32]
  40e1a0:	ldr	x1, [sp, #16]
  40e1a4:	ldr	x0, [sp, #32]
  40e1a8:	cmp	x1, x0
  40e1ac:	b.cs	40e1c4 <wcrtomb@plt+0xb3d4>  // b.hs, b.nlast
  40e1b0:	ldr	x0, [sp, #24]
  40e1b4:	ldr	x0, [x0, #16]
  40e1b8:	ldr	x1, [sp, #32]
  40e1bc:	bl	4029e0 <realloc@plt>
  40e1c0:	str	x0, [sp, #40]
  40e1c4:	ldr	x0, [sp, #40]
  40e1c8:	cmp	x0, #0x0
  40e1cc:	b.ne	40e1f0 <wcrtomb@plt+0xb400>  // b.any
  40e1d0:	ldr	x0, [sp, #16]
  40e1d4:	str	x0, [sp, #32]
  40e1d8:	ldr	x0, [sp, #24]
  40e1dc:	ldr	x0, [x0, #16]
  40e1e0:	mov	x2, #0x1                   	// #1
  40e1e4:	ldr	x1, [sp, #32]
  40e1e8:	bl	41b714 <wcrtomb@plt+0x18924>
  40e1ec:	str	x0, [sp, #40]
  40e1f0:	ldr	x0, [sp, #24]
  40e1f4:	ldr	x1, [sp, #32]
  40e1f8:	str	x1, [x0]
  40e1fc:	ldr	x0, [sp, #24]
  40e200:	ldr	x1, [sp, #40]
  40e204:	str	x1, [x0, #16]
  40e208:	b	40e210 <wcrtomb@plt+0xb420>
  40e20c:	nop
  40e210:	ldp	x29, x30, [sp], #48
  40e214:	ret
  40e218:	stp	x29, x30, [sp, #-64]!
  40e21c:	mov	x29, sp
  40e220:	str	x0, [sp, #40]
  40e224:	str	x1, [sp, #32]
  40e228:	str	x2, [sp, #24]
  40e22c:	ldr	x0, [sp, #40]
  40e230:	ldr	x1, [x0]
  40e234:	ldr	x0, [sp, #40]
  40e238:	ldr	x0, [x0, #8]
  40e23c:	sub	x0, x1, x0
  40e240:	ldr	x1, [sp, #24]
  40e244:	cmp	x1, x0
  40e248:	b.ls	40e268 <wcrtomb@plt+0xb478>  // b.plast
  40e24c:	ldr	x0, [sp, #40]
  40e250:	ldr	x1, [x0, #8]
  40e254:	ldr	x0, [sp, #24]
  40e258:	add	x0, x1, x0
  40e25c:	mov	x1, x0
  40e260:	ldr	x0, [sp, #40]
  40e264:	bl	40e164 <wcrtomb@plt+0xb374>
  40e268:	ldr	x0, [sp, #40]
  40e26c:	ldr	x1, [x0, #16]
  40e270:	ldr	x0, [sp, #40]
  40e274:	ldr	x0, [x0, #8]
  40e278:	add	x0, x1, x0
  40e27c:	ldr	x2, [sp, #24]
  40e280:	ldr	x1, [sp, #32]
  40e284:	bl	4026d0 <memcpy@plt>
  40e288:	str	x0, [sp, #56]
  40e28c:	ldr	x0, [sp, #40]
  40e290:	ldr	x1, [x0, #8]
  40e294:	ldr	x0, [sp, #24]
  40e298:	add	x1, x1, x0
  40e29c:	ldr	x0, [sp, #40]
  40e2a0:	str	x1, [x0, #8]
  40e2a4:	ldr	x0, [sp, #56]
  40e2a8:	ldp	x29, x30, [sp], #64
  40e2ac:	ret
  40e2b0:	stp	x29, x30, [sp, #-48]!
  40e2b4:	mov	x29, sp
  40e2b8:	str	x0, [sp, #24]
  40e2bc:	str	w1, [sp, #20]
  40e2c0:	ldr	w0, [sp, #20]
  40e2c4:	cmn	w0, #0x1
  40e2c8:	b.eq	40e338 <wcrtomb@plt+0xb548>  // b.none
  40e2cc:	ldr	x0, [sp, #24]
  40e2d0:	ldr	x1, [x0]
  40e2d4:	ldr	x0, [sp, #24]
  40e2d8:	ldr	x0, [x0, #8]
  40e2dc:	cmp	x1, x0
  40e2e0:	b.ne	40e2fc <wcrtomb@plt+0xb50c>  // b.any
  40e2e4:	ldr	x0, [sp, #24]
  40e2e8:	ldr	x0, [x0, #8]
  40e2ec:	add	x0, x0, #0x1
  40e2f0:	mov	x1, x0
  40e2f4:	ldr	x0, [sp, #24]
  40e2f8:	bl	40e164 <wcrtomb@plt+0xb374>
  40e2fc:	ldr	x0, [sp, #24]
  40e300:	ldr	x1, [x0, #16]
  40e304:	ldr	x0, [sp, #24]
  40e308:	ldr	x0, [x0, #8]
  40e30c:	add	x3, x0, #0x1
  40e310:	ldr	x2, [sp, #24]
  40e314:	str	x3, [x2, #8]
  40e318:	add	x0, x1, x0
  40e31c:	str	x0, [sp, #40]
  40e320:	ldr	w0, [sp, #20]
  40e324:	and	w1, w0, #0xff
  40e328:	ldr	x0, [sp, #40]
  40e32c:	strb	w1, [x0]
  40e330:	ldr	x0, [sp, #40]
  40e334:	b	40e33c <wcrtomb@plt+0xb54c>
  40e338:	mov	x0, #0x0                   	// #0
  40e33c:	ldp	x29, x30, [sp], #48
  40e340:	ret
  40e344:	stp	x29, x30, [sp, #-32]!
  40e348:	mov	x29, sp
  40e34c:	str	x0, [sp, #24]
  40e350:	ldr	x0, [sp, #24]
  40e354:	cmp	x0, #0x0
  40e358:	b.eq	40e368 <wcrtomb@plt+0xb578>  // b.none
  40e35c:	ldr	x0, [sp, #24]
  40e360:	ldr	x0, [x0, #16]
  40e364:	bl	402b60 <free@plt>
  40e368:	ldr	x0, [sp, #24]
  40e36c:	bl	402b60 <free@plt>
  40e370:	nop
  40e374:	ldp	x29, x30, [sp], #32
  40e378:	ret
  40e37c:	stp	x29, x30, [sp, #-80]!
  40e380:	mov	x29, sp
  40e384:	stp	x19, x20, [sp, #16]
  40e388:	str	x0, [sp, #56]
  40e38c:	str	w1, [sp, #52]
  40e390:	str	x2, [sp, #40]
  40e394:	str	w3, [sp, #48]
  40e398:	str	w4, [sp, #36]
  40e39c:	ldr	w4, [sp, #36]
  40e3a0:	ldr	w3, [sp, #48]
  40e3a4:	ldr	x2, [sp, #40]
  40e3a8:	ldr	w1, [sp, #52]
  40e3ac:	ldr	x0, [sp, #56]
  40e3b0:	bl	4188b8 <wcrtomb@plt+0x15ac8>
  40e3b4:	str	w0, [sp, #76]
  40e3b8:	ldr	w0, [sp, #76]
  40e3bc:	cmn	w0, #0x2
  40e3c0:	b.eq	40e3d4 <wcrtomb@plt+0xb5e4>  // b.none
  40e3c4:	ldr	w0, [sp, #76]
  40e3c8:	cmn	w0, #0x1
  40e3cc:	b.eq	40e400 <wcrtomb@plt+0xb610>  // b.none
  40e3d0:	b	40e438 <wcrtomb@plt+0xb648>
  40e3d4:	bl	402d40 <__errno_location@plt>
  40e3d8:	ldr	w19, [x0]
  40e3dc:	ldr	x0, [sp, #56]
  40e3e0:	bl	41ab30 <wcrtomb@plt+0x17d40>
  40e3e4:	mov	x3, x0
  40e3e8:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40e3ec:	add	x2, x0, #0x400
  40e3f0:	mov	w1, w19
  40e3f4:	mov	w0, #0x0                   	// #0
  40e3f8:	bl	402750 <error@plt>
  40e3fc:	b	40e438 <wcrtomb@plt+0xb648>
  40e400:	bl	402d40 <__errno_location@plt>
  40e404:	ldr	w19, [x0]
  40e408:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40e40c:	add	x0, x0, #0x408
  40e410:	bl	402d80 <gettext@plt>
  40e414:	mov	x20, x0
  40e418:	ldr	x0, [sp, #40]
  40e41c:	bl	41ab30 <wcrtomb@plt+0x17d40>
  40e420:	mov	x3, x0
  40e424:	mov	x2, x20
  40e428:	mov	w1, w19
  40e42c:	mov	w0, #0x0                   	// #0
  40e430:	bl	402750 <error@plt>
  40e434:	nop
  40e438:	ldr	w0, [sp, #76]
  40e43c:	ldp	x19, x20, [sp, #16]
  40e440:	ldp	x29, x30, [sp], #80
  40e444:	ret
  40e448:	stp	x29, x30, [sp, #-32]!
  40e44c:	mov	x29, sp
  40e450:	str	x0, [sp, #24]
  40e454:	str	x1, [sp, #16]
  40e458:	ldr	x1, [sp, #16]
  40e45c:	ldr	x0, [sp, #24]
  40e460:	bl	402b30 <strcmp@plt>
  40e464:	cmp	w0, #0x0
  40e468:	cset	w0, eq  // eq = none
  40e46c:	and	w0, w0, #0xff
  40e470:	ldp	x29, x30, [sp], #32
  40e474:	ret
  40e478:	sub	sp, sp, #0x10
  40e47c:	strb	w0, [sp, #15]
  40e480:	ldrb	w0, [sp, #15]
  40e484:	cmp	w0, #0x2f
  40e488:	b.ls	40e4a0 <wcrtomb@plt+0xb6b0>  // b.plast
  40e48c:	ldrb	w0, [sp, #15]
  40e490:	cmp	w0, #0x39
  40e494:	b.hi	40e4a0 <wcrtomb@plt+0xb6b0>  // b.pmore
  40e498:	mov	w0, #0x1                   	// #1
  40e49c:	b	40e4a4 <wcrtomb@plt+0xb6b4>
  40e4a0:	mov	w0, #0x0                   	// #0
  40e4a4:	and	w0, w0, #0x1
  40e4a8:	and	w0, w0, #0xff
  40e4ac:	add	sp, sp, #0x10
  40e4b0:	ret
  40e4b4:	sub	sp, sp, #0x10
  40e4b8:	strb	w0, [sp, #15]
  40e4bc:	ldrb	w0, [sp, #15]
  40e4c0:	add	sp, sp, #0x10
  40e4c4:	ret
  40e4c8:	sub	sp, sp, #0x10
  40e4cc:	str	w0, [sp, #12]
  40e4d0:	ldr	w0, [sp, #12]
  40e4d4:	asr	w0, w0, #6
  40e4d8:	and	w0, w0, #0x7
  40e4dc:	add	sp, sp, #0x10
  40e4e0:	ret
  40e4e4:	sub	sp, sp, #0x10
  40e4e8:	str	w0, [sp, #12]
  40e4ec:	ldr	w0, [sp, #12]
  40e4f0:	asr	w0, w0, #3
  40e4f4:	and	w0, w0, #0x7
  40e4f8:	add	sp, sp, #0x10
  40e4fc:	ret
  40e500:	sub	sp, sp, #0x10
  40e504:	str	w0, [sp, #12]
  40e508:	ldr	w0, [sp, #12]
  40e50c:	and	w0, w0, #0x7
  40e510:	add	sp, sp, #0x10
  40e514:	ret
  40e518:	stp	x29, x30, [sp, #-48]!
  40e51c:	mov	x29, sp
  40e520:	str	x19, [sp, #16]
  40e524:	str	w0, [sp, #44]
  40e528:	str	w1, [sp, #40]
  40e52c:	str	w2, [sp, #36]
  40e530:	ldr	w0, [sp, #36]
  40e534:	and	w0, w0, #0x1
  40e538:	cmp	w0, #0x0
  40e53c:	b.eq	40e550 <wcrtomb@plt+0xb760>  // b.none
  40e540:	ldr	w0, [sp, #44]
  40e544:	bl	40e500 <wcrtomb@plt+0xb710>
  40e548:	mov	w19, w0
  40e54c:	b	40e554 <wcrtomb@plt+0xb764>
  40e550:	mov	w19, #0x0                   	// #0
  40e554:	ldr	w0, [sp, #36]
  40e558:	and	w0, w0, #0x2
  40e55c:	cmp	w0, #0x0
  40e560:	b.eq	40e570 <wcrtomb@plt+0xb780>  // b.none
  40e564:	ldr	w0, [sp, #44]
  40e568:	bl	40e4e4 <wcrtomb@plt+0xb6f4>
  40e56c:	b	40e574 <wcrtomb@plt+0xb784>
  40e570:	mov	w0, #0x0                   	// #0
  40e574:	orr	w19, w19, w0
  40e578:	ldr	w0, [sp, #36]
  40e57c:	and	w0, w0, #0x4
  40e580:	cmp	w0, #0x0
  40e584:	b.eq	40e594 <wcrtomb@plt+0xb7a4>  // b.none
  40e588:	ldr	w0, [sp, #44]
  40e58c:	bl	40e4c8 <wcrtomb@plt+0xb6d8>
  40e590:	b	40e598 <wcrtomb@plt+0xb7a8>
  40e594:	mov	w0, #0x0                   	// #0
  40e598:	orr	w1, w0, w19
  40e59c:	ldr	w0, [sp, #40]
  40e5a0:	and	w0, w1, w0
  40e5a4:	cmp	w0, #0x0
  40e5a8:	cset	w0, ne  // ne = any
  40e5ac:	and	w0, w0, #0xff
  40e5b0:	ldr	x19, [sp, #16]
  40e5b4:	ldp	x29, x30, [sp], #48
  40e5b8:	ret
  40e5bc:	sub	sp, sp, #0x10
  40e5c0:	str	w0, [sp, #12]
  40e5c4:	ldr	w0, [sp, #12]
  40e5c8:	asr	w1, w0, #2
  40e5cc:	ldr	w0, [sp, #12]
  40e5d0:	eor	w1, w1, w0
  40e5d4:	mov	w0, #0x49                  	// #73
  40e5d8:	and	w0, w1, w0
  40e5dc:	cmp	w0, #0x0
  40e5e0:	cset	w0, ne  // ne = any
  40e5e4:	and	w0, w0, #0xff
  40e5e8:	add	sp, sp, #0x10
  40e5ec:	ret
  40e5f0:	sub	sp, sp, #0x10
  40e5f4:	str	w0, [sp, #12]
  40e5f8:	ldr	w0, [sp, #12]
  40e5fc:	asr	w1, w0, #1
  40e600:	ldr	w0, [sp, #12]
  40e604:	eor	w1, w1, w0
  40e608:	mov	w0, #0x49                  	// #73
  40e60c:	and	w0, w1, w0
  40e610:	cmp	w0, #0x0
  40e614:	cset	w0, ne  // ne = any
  40e618:	and	w0, w0, #0xff
  40e61c:	add	sp, sp, #0x10
  40e620:	ret
  40e624:	sub	sp, sp, #0x10
  40e628:	str	x0, [sp, #8]
  40e62c:	str	x1, [sp]
  40e630:	ldr	x0, [sp]
  40e634:	ldr	x2, [x0, #296]
  40e638:	ldr	x1, [sp, #8]
  40e63c:	mov	x0, x1
  40e640:	lsl	x0, x0, #2
  40e644:	add	x0, x0, x1
  40e648:	lsl	x0, x0, #4
  40e64c:	add	x0, x2, x0
  40e650:	ldrh	w0, [x0, #34]
  40e654:	cmp	w0, #0x0
  40e658:	cset	w0, ne  // ne = any
  40e65c:	and	w0, w0, #0xff
  40e660:	add	sp, sp, #0x10
  40e664:	ret
  40e668:	stp	x29, x30, [sp, #-48]!
  40e66c:	mov	x29, sp
  40e670:	str	w0, [sp, #44]
  40e674:	str	w1, [sp, #40]
  40e678:	str	x2, [sp, #32]
  40e67c:	str	x3, [sp, #24]
  40e680:	ldr	x0, [sp, #24]
  40e684:	ldr	x2, [x0, #296]
  40e688:	ldr	x1, [sp, #32]
  40e68c:	mov	x0, x1
  40e690:	lsl	x0, x0, #2
  40e694:	add	x0, x0, x1
  40e698:	lsl	x0, x0, #4
  40e69c:	add	x0, x2, x0
  40e6a0:	ldrh	w0, [x0, #34]
  40e6a4:	ldr	w2, [sp, #40]
  40e6a8:	ldr	w1, [sp, #44]
  40e6ac:	bl	40e518 <wcrtomb@plt+0xb728>
  40e6b0:	and	w0, w0, #0xff
  40e6b4:	ldp	x29, x30, [sp], #48
  40e6b8:	ret
  40e6bc:	stp	x29, x30, [sp, #-80]!
  40e6c0:	mov	x29, sp
  40e6c4:	str	x0, [sp, #40]
  40e6c8:	str	x1, [sp, #32]
  40e6cc:	str	x2, [sp, #24]
  40e6d0:	str	x3, [sp, #16]
  40e6d4:	ldr	x0, [sp, #32]
  40e6d8:	ldrb	w0, [x0]
  40e6dc:	strb	w0, [sp, #79]
  40e6e0:	ldrb	w0, [sp, #79]
  40e6e4:	ldr	x1, [sp, #16]
  40e6e8:	sxtw	x0, w0
  40e6ec:	add	x0, x0, #0x144
  40e6f0:	lsl	x0, x0, #2
  40e6f4:	add	x0, x1, x0
  40e6f8:	ldr	w0, [x0, #12]
  40e6fc:	str	w0, [sp, #72]
  40e700:	ldr	w0, [sp, #72]
  40e704:	cmn	w0, #0x1
  40e708:	b.ne	40e76c <wcrtomb@plt+0xb97c>  // b.any
  40e70c:	ldr	x0, [sp, #16]
  40e710:	add	x1, x0, #0x110
  40e714:	add	x0, sp, #0x3c
  40e718:	mov	x3, x1
  40e71c:	ldr	x2, [sp, #24]
  40e720:	ldr	x1, [sp, #32]
  40e724:	bl	41bae8 <wcrtomb@plt+0x18cf8>
  40e728:	str	x0, [sp, #64]
  40e72c:	ldr	x0, [sp, #64]
  40e730:	cmp	x0, #0x0
  40e734:	b.eq	40e758 <wcrtomb@plt+0xb968>  // b.none
  40e738:	ldr	x0, [sp, #64]
  40e73c:	cmn	x0, #0x3
  40e740:	b.hi	40e758 <wcrtomb@plt+0xb968>  // b.pmore
  40e744:	ldr	w1, [sp, #60]
  40e748:	ldr	x0, [sp, #40]
  40e74c:	str	w1, [x0]
  40e750:	ldr	x0, [sp, #64]
  40e754:	b	40e77c <wcrtomb@plt+0xb98c>
  40e758:	ldr	x0, [sp, #16]
  40e75c:	add	x0, x0, #0x110
  40e760:	mov	x2, #0x8                   	// #8
  40e764:	mov	w1, #0x0                   	// #0
  40e768:	bl	402980 <memset@plt>
  40e76c:	ldr	x0, [sp, #40]
  40e770:	ldr	w1, [sp, #72]
  40e774:	str	w1, [x0]
  40e778:	mov	w0, #0x1                   	// #1
  40e77c:	ldp	x29, x30, [sp], #80
  40e780:	ret
  40e784:	sub	sp, sp, #0x10
  40e788:	str	w0, [sp, #12]
  40e78c:	str	x1, [sp]
  40e790:	ldr	w0, [sp, #12]
  40e794:	lsr	w1, w0, #6
  40e798:	ldr	x0, [sp]
  40e79c:	mov	w1, w1
  40e7a0:	ldr	x1, [x0, x1, lsl #3]
  40e7a4:	ldr	w0, [sp, #12]
  40e7a8:	and	w0, w0, #0x3f
  40e7ac:	lsr	x0, x1, x0
  40e7b0:	and	x0, x0, #0x1
  40e7b4:	cmp	x0, #0x0
  40e7b8:	cset	w0, ne  // ne = any
  40e7bc:	and	w0, w0, #0xff
  40e7c0:	add	sp, sp, #0x10
  40e7c4:	ret
  40e7c8:	sub	sp, sp, #0x20
  40e7cc:	str	w0, [sp, #12]
  40e7d0:	str	x1, [sp]
  40e7d4:	mov	x0, #0x1                   	// #1
  40e7d8:	str	x0, [sp, #24]
  40e7dc:	ldr	w0, [sp, #12]
  40e7e0:	lsr	w3, w0, #6
  40e7e4:	ldr	x0, [sp]
  40e7e8:	mov	w1, w3
  40e7ec:	ldr	x1, [x0, x1, lsl #3]
  40e7f0:	ldr	w0, [sp, #12]
  40e7f4:	and	w0, w0, #0x3f
  40e7f8:	ldr	x2, [sp, #24]
  40e7fc:	lsl	x0, x2, x0
  40e800:	orr	x2, x1, x0
  40e804:	ldr	x0, [sp]
  40e808:	mov	w1, w3
  40e80c:	str	x2, [x0, x1, lsl #3]
  40e810:	nop
  40e814:	add	sp, sp, #0x20
  40e818:	ret
  40e81c:	sub	sp, sp, #0x20
  40e820:	str	w0, [sp, #12]
  40e824:	str	x1, [sp]
  40e828:	mov	x0, #0x1                   	// #1
  40e82c:	str	x0, [sp, #24]
  40e830:	ldr	w0, [sp, #12]
  40e834:	lsr	w3, w0, #6
  40e838:	ldr	x0, [sp]
  40e83c:	mov	w1, w3
  40e840:	ldr	x1, [x0, x1, lsl #3]
  40e844:	ldr	w0, [sp, #12]
  40e848:	and	w0, w0, #0x3f
  40e84c:	ldr	x2, [sp, #24]
  40e850:	lsl	x0, x2, x0
  40e854:	mvn	x0, x0
  40e858:	and	x2, x1, x0
  40e85c:	ldr	x0, [sp]
  40e860:	mov	w1, w3
  40e864:	str	x2, [x0, x1, lsl #3]
  40e868:	nop
  40e86c:	add	sp, sp, #0x20
  40e870:	ret
  40e874:	stp	x29, x30, [sp, #-32]!
  40e878:	mov	x29, sp
  40e87c:	str	x0, [sp, #24]
  40e880:	mov	x2, #0x20                  	// #32
  40e884:	mov	w1, #0x0                   	// #0
  40e888:	ldr	x0, [sp, #24]
  40e88c:	bl	402980 <memset@plt>
  40e890:	nop
  40e894:	ldp	x29, x30, [sp], #32
  40e898:	ret
  40e89c:	sub	sp, sp, #0x20
  40e8a0:	str	x0, [sp, #8]
  40e8a4:	str	wzr, [sp, #28]
  40e8a8:	b	40e8c8 <wcrtomb@plt+0xbad8>
  40e8ac:	mov	x2, #0xffffffffffffffff    	// #-1
  40e8b0:	ldr	x0, [sp, #8]
  40e8b4:	ldrsw	x1, [sp, #28]
  40e8b8:	str	x2, [x0, x1, lsl #3]
  40e8bc:	ldr	w0, [sp, #28]
  40e8c0:	add	w0, w0, #0x1
  40e8c4:	str	w0, [sp, #28]
  40e8c8:	ldr	w0, [sp, #28]
  40e8cc:	cmp	w0, #0x3
  40e8d0:	b.le	40e8ac <wcrtomb@plt+0xbabc>
  40e8d4:	nop
  40e8d8:	nop
  40e8dc:	add	sp, sp, #0x20
  40e8e0:	ret
  40e8e4:	sub	sp, sp, #0x20
  40e8e8:	str	x0, [sp, #8]
  40e8ec:	str	wzr, [sp, #28]
  40e8f0:	b	40e924 <wcrtomb@plt+0xbb34>
  40e8f4:	ldr	x0, [sp, #8]
  40e8f8:	ldrsw	x1, [sp, #28]
  40e8fc:	ldr	x0, [x0, x1, lsl #3]
  40e900:	mvn	x1, x0
  40e904:	mov	x0, #0xffffffffffffffff    	// #-1
  40e908:	and	x2, x1, x0
  40e90c:	ldr	x0, [sp, #8]
  40e910:	ldrsw	x1, [sp, #28]
  40e914:	str	x2, [x0, x1, lsl #3]
  40e918:	ldr	w0, [sp, #28]
  40e91c:	add	w0, w0, #0x1
  40e920:	str	w0, [sp, #28]
  40e924:	ldr	w0, [sp, #28]
  40e928:	cmp	w0, #0x3
  40e92c:	b.le	40e8f4 <wcrtomb@plt+0xbb04>
  40e930:	nop
  40e934:	nop
  40e938:	add	sp, sp, #0x20
  40e93c:	ret
  40e940:	sub	sp, sp, #0x20
  40e944:	str	x0, [sp, #8]
  40e948:	str	x1, [sp]
  40e94c:	str	xzr, [sp, #24]
  40e950:	str	wzr, [sp, #20]
  40e954:	b	40e98c <wcrtomb@plt+0xbb9c>
  40e958:	ldr	x0, [sp, #8]
  40e95c:	ldrsw	x1, [sp, #20]
  40e960:	ldr	x1, [x0, x1, lsl #3]
  40e964:	ldr	x0, [sp]
  40e968:	ldrsw	x2, [sp, #20]
  40e96c:	ldr	x0, [x0, x2, lsl #3]
  40e970:	eor	x0, x1, x0
  40e974:	ldr	x1, [sp, #24]
  40e978:	orr	x0, x1, x0
  40e97c:	str	x0, [sp, #24]
  40e980:	ldr	w0, [sp, #20]
  40e984:	add	w0, w0, #0x1
  40e988:	str	w0, [sp, #20]
  40e98c:	ldr	w0, [sp, #20]
  40e990:	cmp	w0, #0x3
  40e994:	b.le	40e958 <wcrtomb@plt+0xbb68>
  40e998:	ldr	x0, [sp, #24]
  40e99c:	cmp	x0, #0x0
  40e9a0:	cset	w0, eq  // eq = none
  40e9a4:	and	w0, w0, #0xff
  40e9a8:	add	sp, sp, #0x20
  40e9ac:	ret
  40e9b0:	sub	sp, sp, #0x20
  40e9b4:	str	x0, [sp, #8]
  40e9b8:	str	xzr, [sp, #24]
  40e9bc:	str	wzr, [sp, #20]
  40e9c0:	b	40e9e8 <wcrtomb@plt+0xbbf8>
  40e9c4:	ldr	x0, [sp, #8]
  40e9c8:	ldrsw	x1, [sp, #20]
  40e9cc:	ldr	x0, [x0, x1, lsl #3]
  40e9d0:	ldr	x1, [sp, #24]
  40e9d4:	orr	x0, x1, x0
  40e9d8:	str	x0, [sp, #24]
  40e9dc:	ldr	w0, [sp, #20]
  40e9e0:	add	w0, w0, #0x1
  40e9e4:	str	w0, [sp, #20]
  40e9e8:	ldr	w0, [sp, #20]
  40e9ec:	cmp	w0, #0x3
  40e9f0:	b.le	40e9c4 <wcrtomb@plt+0xbbd4>
  40e9f4:	ldr	x0, [sp, #24]
  40e9f8:	cmp	x0, #0x0
  40e9fc:	cset	w0, eq  // eq = none
  40ea00:	and	w0, w0, #0xff
  40ea04:	add	sp, sp, #0x20
  40ea08:	ret
  40ea0c:	stp	x29, x30, [sp, #-96]!
  40ea10:	mov	x29, sp
  40ea14:	str	x0, [sp, #56]
  40ea18:	str	x1, [sp, #48]
  40ea1c:	str	x2, [sp, #40]
  40ea20:	str	x3, [sp, #32]
  40ea24:	str	x4, [sp, #24]
  40ea28:	ldr	x0, [sp, #48]
  40ea2c:	ldr	x0, [x0]
  40ea30:	str	x0, [sp, #88]
  40ea34:	ldr	x0, [sp, #88]
  40ea38:	asr	x0, x0, #1
  40ea3c:	mov	x2, #0x0                   	// #0
  40ea40:	ldr	x1, [sp, #88]
  40ea44:	adds	x0, x1, x0
  40ea48:	b.vc	40ea50 <wcrtomb@plt+0xbc60>
  40ea4c:	mov	x2, #0x1                   	// #1
  40ea50:	str	x0, [sp, #72]
  40ea54:	mov	x0, x2
  40ea58:	and	w0, w0, #0x1
  40ea5c:	and	w0, w0, #0xff
  40ea60:	cmp	w0, #0x0
  40ea64:	b.eq	40ea70 <wcrtomb@plt+0xbc80>  // b.none
  40ea68:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  40ea6c:	str	x0, [sp, #72]
  40ea70:	ldr	x0, [sp, #32]
  40ea74:	cmp	x0, #0x0
  40ea78:	b.lt	40ea94 <wcrtomb@plt+0xbca4>  // b.tstop
  40ea7c:	ldr	x0, [sp, #72]
  40ea80:	ldr	x1, [sp, #32]
  40ea84:	cmp	x1, x0
  40ea88:	b.ge	40ea94 <wcrtomb@plt+0xbca4>  // b.tcont
  40ea8c:	ldr	x0, [sp, #32]
  40ea90:	str	x0, [sp, #72]
  40ea94:	ldr	x1, [sp, #72]
  40ea98:	mov	x2, #0x0                   	// #0
  40ea9c:	ldr	x0, [sp, #24]
  40eaa0:	mul	x3, x1, x0
  40eaa4:	smulh	x0, x1, x0
  40eaa8:	mov	x8, x3
  40eaac:	mov	x9, x0
  40eab0:	mov	x12, x9
  40eab4:	asr	x13, x9, #63
  40eab8:	asr	x0, x8, #63
  40eabc:	cmp	x0, x12
  40eac0:	b.eq	40eac8 <wcrtomb@plt+0xbcd8>  // b.none
  40eac4:	mov	x2, #0x1                   	// #1
  40eac8:	mov	x0, x8
  40eacc:	str	x0, [sp, #64]
  40ead0:	mov	x0, x2
  40ead4:	and	w0, w0, #0x1
  40ead8:	and	w0, w0, #0xff
  40eadc:	cmp	w0, #0x0
  40eae0:	b.ne	40eb00 <wcrtomb@plt+0xbd10>  // b.any
  40eae4:	ldr	x0, [sp, #64]
  40eae8:	cmp	x0, #0x7f
  40eaec:	b.gt	40eaf8 <wcrtomb@plt+0xbd08>
  40eaf0:	mov	x0, #0x80                  	// #128
  40eaf4:	b	40eb04 <wcrtomb@plt+0xbd14>
  40eaf8:	mov	x0, #0x0                   	// #0
  40eafc:	b	40eb04 <wcrtomb@plt+0xbd14>
  40eb00:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  40eb04:	str	x0, [sp, #80]
  40eb08:	ldr	x0, [sp, #80]
  40eb0c:	cmp	x0, #0x0
  40eb10:	b.eq	40eb48 <wcrtomb@plt+0xbd58>  // b.none
  40eb14:	ldr	x1, [sp, #80]
  40eb18:	ldr	x0, [sp, #24]
  40eb1c:	sdiv	x0, x1, x0
  40eb20:	str	x0, [sp, #72]
  40eb24:	ldr	x0, [sp, #80]
  40eb28:	ldr	x1, [sp, #24]
  40eb2c:	sdiv	x2, x0, x1
  40eb30:	ldr	x1, [sp, #24]
  40eb34:	mul	x1, x2, x1
  40eb38:	sub	x0, x0, x1
  40eb3c:	ldr	x1, [sp, #80]
  40eb40:	sub	x0, x1, x0
  40eb44:	str	x0, [sp, #64]
  40eb48:	ldr	x0, [sp, #56]
  40eb4c:	cmp	x0, #0x0
  40eb50:	b.ne	40eb5c <wcrtomb@plt+0xbd6c>  // b.any
  40eb54:	ldr	x0, [sp, #48]
  40eb58:	str	xzr, [x0]
  40eb5c:	ldr	x1, [sp, #72]
  40eb60:	ldr	x0, [sp, #88]
  40eb64:	sub	x0, x1, x0
  40eb68:	ldr	x1, [sp, #40]
  40eb6c:	cmp	x1, x0
  40eb70:	b.le	40ec14 <wcrtomb@plt+0xbe24>
  40eb74:	mov	x2, #0x0                   	// #0
  40eb78:	ldr	x1, [sp, #88]
  40eb7c:	ldr	x0, [sp, #40]
  40eb80:	adds	x0, x1, x0
  40eb84:	b.vc	40eb8c <wcrtomb@plt+0xbd9c>
  40eb88:	mov	x2, #0x1                   	// #1
  40eb8c:	str	x0, [sp, #72]
  40eb90:	mov	x0, x2
  40eb94:	and	w0, w0, #0x1
  40eb98:	and	w0, w0, #0xff
  40eb9c:	cmp	w0, #0x0
  40eba0:	b.ne	40ec10 <wcrtomb@plt+0xbe20>  // b.any
  40eba4:	ldr	x0, [sp, #32]
  40eba8:	cmp	x0, #0x0
  40ebac:	b.lt	40ebc0 <wcrtomb@plt+0xbdd0>  // b.tstop
  40ebb0:	ldr	x0, [sp, #72]
  40ebb4:	ldr	x1, [sp, #32]
  40ebb8:	cmp	x1, x0
  40ebbc:	b.lt	40ec10 <wcrtomb@plt+0xbe20>  // b.tstop
  40ebc0:	ldr	x1, [sp, #72]
  40ebc4:	mov	x2, #0x0                   	// #0
  40ebc8:	ldr	x0, [sp, #24]
  40ebcc:	mul	x3, x1, x0
  40ebd0:	smulh	x0, x1, x0
  40ebd4:	mov	x6, x3
  40ebd8:	mov	x7, x0
  40ebdc:	mov	x10, x7
  40ebe0:	asr	x11, x7, #63
  40ebe4:	asr	x0, x6, #63
  40ebe8:	cmp	x0, x10
  40ebec:	b.eq	40ebf4 <wcrtomb@plt+0xbe04>  // b.none
  40ebf0:	mov	x2, #0x1                   	// #1
  40ebf4:	mov	x0, x6
  40ebf8:	str	x0, [sp, #64]
  40ebfc:	mov	x0, x2
  40ec00:	and	w0, w0, #0x1
  40ec04:	and	w0, w0, #0xff
  40ec08:	cmp	w0, #0x0
  40ec0c:	b.eq	40ec14 <wcrtomb@plt+0xbe24>  // b.none
  40ec10:	bl	41baa8 <wcrtomb@plt+0x18cb8>
  40ec14:	ldr	x0, [sp, #64]
  40ec18:	mov	x1, x0
  40ec1c:	ldr	x0, [sp, #56]
  40ec20:	bl	41b910 <wcrtomb@plt+0x18b20>
  40ec24:	str	x0, [sp, #56]
  40ec28:	ldr	x1, [sp, #72]
  40ec2c:	ldr	x0, [sp, #48]
  40ec30:	str	x1, [x0]
  40ec34:	ldr	x0, [sp, #56]
  40ec38:	ldp	x29, x30, [sp], #96
  40ec3c:	ret
  40ec40:	stp	x29, x30, [sp, #-64]!
  40ec44:	mov	x29, sp
  40ec48:	str	x0, [sp, #56]
  40ec4c:	str	x1, [sp, #48]
  40ec50:	str	x2, [sp, #40]
  40ec54:	str	x3, [sp, #32]
  40ec58:	str	x4, [sp, #24]
  40ec5c:	ldr	x0, [sp, #40]
  40ec60:	ldr	x0, [x0]
  40ec64:	ldr	x1, [sp, #48]
  40ec68:	cmp	x1, x0
  40ec6c:	b.ge	40ec78 <wcrtomb@plt+0xbe88>  // b.tcont
  40ec70:	ldr	x0, [sp, #56]
  40ec74:	b	40ec90 <wcrtomb@plt+0xbea0>
  40ec78:	ldr	x4, [sp, #24]
  40ec7c:	ldr	x3, [sp, #32]
  40ec80:	mov	x2, #0x1                   	// #1
  40ec84:	ldr	x1, [sp, #40]
  40ec88:	ldr	x0, [sp, #56]
  40ec8c:	bl	40ea0c <wcrtomb@plt+0xbc1c>
  40ec90:	ldp	x29, x30, [sp], #64
  40ec94:	ret
  40ec98:	stp	x29, x30, [sp, #-48]!
  40ec9c:	mov	x29, sp
  40eca0:	str	x0, [sp, #24]
  40eca4:	str	x1, [sp, #16]
  40eca8:	str	xzr, [sp, #40]
  40ecac:	b	40ecf0 <wcrtomb@plt+0xbf00>
  40ecb0:	ldr	x0, [sp, #24]
  40ecb4:	ldr	x1, [x0]
  40ecb8:	ldr	x0, [sp, #40]
  40ecbc:	lsl	x0, x0, #5
  40ecc0:	add	x0, x1, x0
  40ecc4:	mov	x1, x0
  40ecc8:	ldr	x0, [sp, #16]
  40eccc:	bl	40e940 <wcrtomb@plt+0xbb50>
  40ecd0:	and	w0, w0, #0xff
  40ecd4:	cmp	w0, #0x0
  40ecd8:	b.eq	40ece4 <wcrtomb@plt+0xbef4>  // b.none
  40ecdc:	ldr	x0, [sp, #40]
  40ece0:	b	40ed78 <wcrtomb@plt+0xbf88>
  40ece4:	ldr	x0, [sp, #40]
  40ece8:	add	x0, x0, #0x1
  40ecec:	str	x0, [sp, #40]
  40ecf0:	ldr	x0, [sp, #24]
  40ecf4:	ldr	x0, [x0, #8]
  40ecf8:	ldr	x1, [sp, #40]
  40ecfc:	cmp	x1, x0
  40ed00:	b.lt	40ecb0 <wcrtomb@plt+0xbec0>  // b.tstop
  40ed04:	ldr	x0, [sp, #24]
  40ed08:	ldr	x5, [x0]
  40ed0c:	ldr	x0, [sp, #24]
  40ed10:	ldr	x1, [x0, #8]
  40ed14:	ldr	x0, [sp, #24]
  40ed18:	add	x2, x0, #0x10
  40ed1c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  40ed20:	sub	x0, x0, #0x114
  40ed24:	mov	x4, #0x20                  	// #32
  40ed28:	mov	x3, x0
  40ed2c:	mov	x0, x5
  40ed30:	bl	40ec40 <wcrtomb@plt+0xbe50>
  40ed34:	mov	x1, x0
  40ed38:	ldr	x0, [sp, #24]
  40ed3c:	str	x1, [x0]
  40ed40:	ldr	x0, [sp, #24]
  40ed44:	ldr	x0, [x0, #8]
  40ed48:	add	x1, x0, #0x1
  40ed4c:	ldr	x0, [sp, #24]
  40ed50:	str	x1, [x0, #8]
  40ed54:	ldr	x0, [sp, #24]
  40ed58:	ldr	x1, [x0]
  40ed5c:	ldr	x0, [sp, #40]
  40ed60:	lsl	x0, x0, #5
  40ed64:	add	x0, x1, x0
  40ed68:	ldr	x1, [sp, #16]
  40ed6c:	ld1	{v0.16b, v1.16b}, [x1]
  40ed70:	st1	{v0.16b, v1.16b}, [x0]
  40ed74:	ldr	x0, [sp, #40]
  40ed78:	ldp	x29, x30, [sp], #48
  40ed7c:	ret
  40ed80:	stp	x29, x30, [sp, #-32]!
  40ed84:	mov	x29, sp
  40ed88:	str	x0, [sp, #24]
  40ed8c:	strb	w1, [sp, #23]
  40ed90:	ldrb	w0, [sp, #23]
  40ed94:	ldr	x1, [sp, #24]
  40ed98:	sxtw	x0, w0
  40ed9c:	add	x0, x0, #0x144
  40eda0:	lsl	x0, x0, #2
  40eda4:	add	x0, x1, x0
  40eda8:	ldr	w0, [x0, #12]
  40edac:	cmn	w0, #0x1
  40edb0:	b.eq	40edec <wcrtomb@plt+0xbffc>  // b.none
  40edb4:	bl	402b40 <__ctype_b_loc@plt>
  40edb8:	ldr	x1, [x0]
  40edbc:	ldrb	w0, [sp, #23]
  40edc0:	lsl	x0, x0, #1
  40edc4:	add	x0, x1, x0
  40edc8:	ldrh	w0, [x0]
  40edcc:	and	w0, w0, #0x8
  40edd0:	cmp	w0, #0x0
  40edd4:	b.ne	40ede4 <wcrtomb@plt+0xbff4>  // b.any
  40edd8:	ldrb	w0, [sp, #23]
  40eddc:	cmp	w0, #0x5f
  40ede0:	b.ne	40edec <wcrtomb@plt+0xbffc>  // b.any
  40ede4:	mov	w0, #0x1                   	// #1
  40ede8:	b	40edf0 <wcrtomb@plt+0xc000>
  40edec:	mov	w0, #0x0                   	// #0
  40edf0:	and	w0, w0, #0x1
  40edf4:	and	w0, w0, #0xff
  40edf8:	ldp	x29, x30, [sp], #32
  40edfc:	ret
  40ee00:	stp	x29, x30, [sp, #-32]!
  40ee04:	mov	x29, sp
  40ee08:	str	x0, [sp, #24]
  40ee0c:	strb	w1, [sp, #23]
  40ee10:	ldr	x0, [sp, #24]
  40ee14:	ldrb	w0, [x0, #459]
  40ee18:	ldrb	w1, [sp, #23]
  40ee1c:	cmp	w1, w0
  40ee20:	b.ne	40ee44 <wcrtomb@plt+0xc054>  // b.any
  40ee24:	ldr	x0, [sp, #24]
  40ee28:	ldrb	w0, [x0, #458]
  40ee2c:	eor	w0, w0, #0x1
  40ee30:	and	w0, w0, #0xff
  40ee34:	cmp	w0, #0x0
  40ee38:	b.eq	40ee44 <wcrtomb@plt+0xc054>  // b.none
  40ee3c:	mov	w0, #0x4                   	// #4
  40ee40:	b	40ee68 <wcrtomb@plt+0xc078>
  40ee44:	ldrb	w1, [sp, #23]
  40ee48:	ldr	x0, [sp, #24]
  40ee4c:	bl	40ed80 <wcrtomb@plt+0xbf90>
  40ee50:	and	w0, w0, #0xff
  40ee54:	cmp	w0, #0x0
  40ee58:	b.eq	40ee64 <wcrtomb@plt+0xc074>  // b.none
  40ee5c:	mov	w0, #0x2                   	// #2
  40ee60:	b	40ee68 <wcrtomb@plt+0xc078>
  40ee64:	mov	w0, #0x1                   	// #1
  40ee68:	ldp	x29, x30, [sp], #32
  40ee6c:	ret
  40ee70:	stp	x29, x30, [sp, #-48]!
  40ee74:	mov	x29, sp
  40ee78:	str	w0, [sp, #28]
  40ee7c:	str	x1, [sp, #16]
  40ee80:	ldr	w0, [sp, #28]
  40ee84:	bl	402860 <wctob@plt>
  40ee88:	str	w0, [sp, #44]
  40ee8c:	ldr	w0, [sp, #44]
  40ee90:	cmp	w0, #0x0
  40ee94:	b.ge	40eea0 <wcrtomb@plt+0xc0b0>  // b.tcont
  40ee98:	mov	w0, #0x0                   	// #0
  40ee9c:	b	40eeb0 <wcrtomb@plt+0xc0c0>
  40eea0:	ldr	w0, [sp, #44]
  40eea4:	ldr	x1, [sp, #16]
  40eea8:	bl	40e7c8 <wcrtomb@plt+0xb9d8>
  40eeac:	mov	w0, #0x1                   	// #1
  40eeb0:	ldp	x29, x30, [sp], #48
  40eeb4:	ret
  40eeb8:	stp	x29, x30, [sp, #-48]!
  40eebc:	mov	x29, sp
  40eec0:	str	w0, [sp, #28]
  40eec4:	str	x1, [sp, #16]
  40eec8:	ldr	w0, [sp, #28]
  40eecc:	bl	4028c0 <toupper@plt>
  40eed0:	str	w0, [sp, #40]
  40eed4:	str	wzr, [sp, #44]
  40eed8:	b	40ef0c <wcrtomb@plt+0xc11c>
  40eedc:	ldr	w0, [sp, #44]
  40eee0:	bl	4028c0 <toupper@plt>
  40eee4:	mov	w1, w0
  40eee8:	ldr	w0, [sp, #40]
  40eeec:	cmp	w0, w1
  40eef0:	b.ne	40ef00 <wcrtomb@plt+0xc110>  // b.any
  40eef4:	ldr	w0, [sp, #44]
  40eef8:	ldr	x1, [sp, #16]
  40eefc:	bl	40e7c8 <wcrtomb@plt+0xb9d8>
  40ef00:	ldr	w0, [sp, #44]
  40ef04:	add	w0, w0, #0x1
  40ef08:	str	w0, [sp, #44]
  40ef0c:	ldr	w0, [sp, #44]
  40ef10:	cmp	w0, #0xff
  40ef14:	b.le	40eedc <wcrtomb@plt+0xc0ec>
  40ef18:	nop
  40ef1c:	nop
  40ef20:	ldp	x29, x30, [sp], #48
  40ef24:	ret
  40ef28:	stp	x29, x30, [sp, #-48]!
  40ef2c:	mov	x29, sp
  40ef30:	str	x0, [sp, #24]
  40ef34:	ldr	x0, [sp, #24]
  40ef38:	add	x4, x0, #0x48
  40ef3c:	ldr	x0, [sp, #24]
  40ef40:	ldr	x1, [x0, #32]
  40ef44:	ldr	x0, [sp, #24]
  40ef48:	ldr	x0, [x0, #40]
  40ef4c:	ldr	x3, [sp, #24]
  40ef50:	mov	x2, x0
  40ef54:	mov	x0, x4
  40ef58:	bl	40e6bc <wcrtomb@plt+0xb8cc>
  40ef5c:	str	w0, [sp, #44]
  40ef60:	ldr	w0, [sp, #44]
  40ef64:	cmp	w0, #0x1
  40ef68:	b.ne	40ef84 <wcrtomb@plt+0xc194>  // b.any
  40ef6c:	ldr	x0, [sp, #24]
  40ef70:	ldr	x0, [x0, #32]
  40ef74:	ldrb	w0, [x0]
  40ef78:	bl	40e4b4 <wcrtomb@plt+0xb6c4>
  40ef7c:	and	w0, w0, #0xff
  40ef80:	b	40ef88 <wcrtomb@plt+0xc198>
  40ef84:	mov	w0, #0xffffffff            	// #-1
  40ef88:	str	w0, [sp, #40]
  40ef8c:	ldr	x0, [sp, #24]
  40ef90:	ldr	x1, [x0, #32]
  40ef94:	ldrsw	x0, [sp, #44]
  40ef98:	add	x1, x1, x0
  40ef9c:	ldr	x0, [sp, #24]
  40efa0:	str	x1, [x0, #32]
  40efa4:	ldr	x0, [sp, #24]
  40efa8:	ldr	x1, [x0, #40]
  40efac:	ldrsw	x0, [sp, #44]
  40efb0:	sub	x1, x1, x0
  40efb4:	ldr	x0, [sp, #24]
  40efb8:	str	x1, [x0, #40]
  40efbc:	ldr	w0, [sp, #40]
  40efc0:	ldp	x29, x30, [sp], #48
  40efc4:	ret
  40efc8:	stp	x29, x30, [sp, #-32]!
  40efcc:	mov	x29, sp
  40efd0:	str	x0, [sp, #24]
  40efd4:	ldr	x0, [sp, #24]
  40efd8:	ldr	x0, [x0, #40]
  40efdc:	cmp	x0, #0x0
  40efe0:	b.ne	40eff4 <wcrtomb@plt+0xc204>  // b.any
  40efe4:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40efe8:	add	x0, x0, #0x440
  40efec:	bl	402d80 <gettext@plt>
  40eff0:	bl	40bc58 <wcrtomb@plt+0x8e68>
  40eff4:	ldr	x0, [sp, #24]
  40eff8:	bl	40ef28 <wcrtomb@plt+0xc138>
  40effc:	ldp	x29, x30, [sp], #32
  40f000:	ret
  40f004:	stp	x29, x30, [sp, #-48]!
  40f008:	mov	x29, sp
  40f00c:	str	x0, [sp, #24]
  40f010:	str	wzr, [sp, #44]
  40f014:	b	40f084 <wcrtomb@plt+0xc294>
  40f018:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40f01c:	add	x2, x0, #0x4b0
  40f020:	ldrsw	x1, [sp, #44]
  40f024:	mov	x0, x1
  40f028:	lsl	x0, x0, #1
  40f02c:	add	x0, x0, x1
  40f030:	lsl	x0, x0, #3
  40f034:	add	x0, x2, x0
  40f038:	ldr	x0, [x0]
  40f03c:	mov	x1, x0
  40f040:	ldr	x0, [sp, #24]
  40f044:	bl	40e448 <wcrtomb@plt+0xb658>
  40f048:	and	w0, w0, #0xff
  40f04c:	cmp	w0, #0x0
  40f050:	b.eq	40f078 <wcrtomb@plt+0xc288>  // b.none
  40f054:	ldrsw	x1, [sp, #44]
  40f058:	mov	x0, x1
  40f05c:	lsl	x0, x0, #1
  40f060:	add	x0, x0, x1
  40f064:	lsl	x0, x0, #3
  40f068:	adrp	x1, 436000 <_obstack_memory_used@@Base+0x19e20>
  40f06c:	add	x1, x1, #0x4b0
  40f070:	add	x0, x0, x1
  40f074:	b	40f0b4 <wcrtomb@plt+0xc2c4>
  40f078:	ldr	w0, [sp, #44]
  40f07c:	add	w0, w0, #0x1
  40f080:	str	w0, [sp, #44]
  40f084:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40f088:	add	x2, x0, #0x4b0
  40f08c:	ldrsw	x1, [sp, #44]
  40f090:	mov	x0, x1
  40f094:	lsl	x0, x0, #1
  40f098:	add	x0, x0, x1
  40f09c:	lsl	x0, x0, #3
  40f0a0:	add	x0, x2, x0
  40f0a4:	ldr	x0, [x0]
  40f0a8:	cmp	x0, #0x0
  40f0ac:	b.ne	40f018 <wcrtomb@plt+0xc228>  // b.any
  40f0b0:	mov	x0, #0x0                   	// #0
  40f0b4:	ldp	x29, x30, [sp], #48
  40f0b8:	ret
  40f0bc:	stp	x29, x30, [sp, #-304]!
  40f0c0:	mov	x29, sp
  40f0c4:	str	x19, [sp, #16]
  40f0c8:	str	x0, [sp, #40]
  40f0cc:	mov	w0, #0x1                   	// #1
  40f0d0:	strb	w0, [sp, #303]
  40f0d4:	ldr	x0, [sp, #40]
  40f0d8:	str	xzr, [x0, #104]
  40f0dc:	add	x0, sp, #0xc0
  40f0e0:	bl	40e874 <wcrtomb@plt+0xba84>
  40f0e4:	ldr	x0, [sp, #40]
  40f0e8:	bl	40efc8 <wcrtomb@plt+0xc1d8>
  40f0ec:	str	w0, [sp, #292]
  40f0f0:	ldr	w0, [sp, #292]
  40f0f4:	cmp	w0, #0x5e
  40f0f8:	cset	w0, eq  // eq = none
  40f0fc:	strb	w0, [sp, #255]
  40f100:	ldrb	w0, [sp, #255]
  40f104:	cmp	w0, #0x0
  40f108:	b.eq	40f124 <wcrtomb@plt+0xc334>  // b.none
  40f10c:	ldr	x0, [sp, #40]
  40f110:	bl	40efc8 <wcrtomb@plt+0xc1d8>
  40f114:	str	w0, [sp, #292]
  40f118:	ldr	x0, [sp, #40]
  40f11c:	ldrb	w0, [x0, #1049]
  40f120:	strb	w0, [sp, #303]
  40f124:	ldr	x0, [sp, #40]
  40f128:	ldr	w0, [x0, #72]
  40f12c:	str	w0, [sp, #288]
  40f130:	ldr	w0, [sp, #292]
  40f134:	cmp	w0, #0x3a
  40f138:	cset	w0, eq  // eq = none
  40f13c:	and	w0, w0, #0xff
  40f140:	str	w0, [sp, #296]
  40f144:	mov	w0, #0x100                 	// #256
  40f148:	str	w0, [sp, #284]
  40f14c:	ldr	w0, [sp, #296]
  40f150:	and	w0, w0, #0xfffffffd
  40f154:	str	w0, [sp, #296]
  40f158:	ldr	w0, [sp, #292]
  40f15c:	cmp	w0, #0x5b
  40f160:	b.ne	40f390 <wcrtomb@plt+0xc5a0>  // b.any
  40f164:	ldr	x0, [sp, #40]
  40f168:	bl	40efc8 <wcrtomb@plt+0xc1d8>
  40f16c:	str	w0, [sp, #284]
  40f170:	ldr	x0, [sp, #40]
  40f174:	ldr	w0, [x0, #72]
  40f178:	str	w0, [sp, #280]
  40f17c:	ldr	w0, [sp, #284]
  40f180:	cmp	w0, #0x3a
  40f184:	b.ne	40f19c <wcrtomb@plt+0xc3ac>  // b.any
  40f188:	ldr	x0, [sp, #40]
  40f18c:	ldr	x0, [x0, #448]
  40f190:	and	x0, x0, #0x4
  40f194:	cmp	x0, #0x0
  40f198:	b.ne	40f1b4 <wcrtomb@plt+0xc3c4>  // b.any
  40f19c:	ldr	w0, [sp, #284]
  40f1a0:	cmp	w0, #0x2e
  40f1a4:	b.eq	40f1b4 <wcrtomb@plt+0xc3c4>  // b.none
  40f1a8:	ldr	w0, [sp, #284]
  40f1ac:	cmp	w0, #0x3d
  40f1b0:	b.ne	40f390 <wcrtomb@plt+0xc5a0>  // b.any
  40f1b4:	str	wzr, [sp, #276]
  40f1b8:	ldr	x0, [sp, #40]
  40f1bc:	bl	40efc8 <wcrtomb@plt+0xc1d8>
  40f1c0:	str	w0, [sp, #292]
  40f1c4:	ldr	x0, [sp, #40]
  40f1c8:	ldr	x0, [x0, #40]
  40f1cc:	cmp	x0, #0x0
  40f1d0:	b.eq	40f230 <wcrtomb@plt+0xc440>  // b.none
  40f1d4:	ldr	w1, [sp, #292]
  40f1d8:	ldr	w0, [sp, #284]
  40f1dc:	cmp	w1, w0
  40f1e0:	b.ne	40f1f8 <wcrtomb@plt+0xc408>  // b.any
  40f1e4:	ldr	x0, [sp, #40]
  40f1e8:	ldr	x0, [x0, #32]
  40f1ec:	ldrb	w0, [x0]
  40f1f0:	cmp	w0, #0x5d
  40f1f4:	b.eq	40f230 <wcrtomb@plt+0xc440>  // b.none
  40f1f8:	ldr	w0, [sp, #276]
  40f1fc:	cmp	w0, #0x1f
  40f200:	b.gt	40f228 <wcrtomb@plt+0xc438>
  40f204:	ldr	w0, [sp, #276]
  40f208:	add	w1, w0, #0x1
  40f20c:	str	w1, [sp, #276]
  40f210:	ldr	w1, [sp, #292]
  40f214:	and	w2, w1, #0xff
  40f218:	sxtw	x0, w0
  40f21c:	add	x1, sp, #0x38
  40f220:	strb	w2, [x1, x0]
  40f224:	b	40f1b8 <wcrtomb@plt+0xc3c8>
  40f228:	strb	wzr, [sp, #56]
  40f22c:	b	40f1b8 <wcrtomb@plt+0xc3c8>
  40f230:	ldrsw	x0, [sp, #276]
  40f234:	add	x1, sp, #0x38
  40f238:	strb	wzr, [x1, x0]
  40f23c:	ldr	x0, [sp, #40]
  40f240:	bl	40efc8 <wcrtomb@plt+0xc1d8>
  40f244:	str	w0, [sp, #292]
  40f248:	ldr	x0, [sp, #40]
  40f24c:	ldr	w0, [x0, #72]
  40f250:	str	w0, [sp, #288]
  40f254:	ldr	w0, [sp, #284]
  40f258:	cmp	w0, #0x3a
  40f25c:	b.ne	40f364 <wcrtomb@plt+0xc574>  // b.any
  40f260:	ldr	x0, [sp, #40]
  40f264:	ldrb	w0, [x0, #457]
  40f268:	cmp	w0, #0x0
  40f26c:	b.eq	40f2b0 <wcrtomb@plt+0xc4c0>  // b.none
  40f270:	add	x2, sp, #0x38
  40f274:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40f278:	add	x1, x0, #0x458
  40f27c:	mov	x0, x2
  40f280:	bl	40e448 <wcrtomb@plt+0xb658>
  40f284:	and	w0, w0, #0xff
  40f288:	cmp	w0, #0x0
  40f28c:	b.ne	40f2b8 <wcrtomb@plt+0xc4c8>  // b.any
  40f290:	add	x2, sp, #0x38
  40f294:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40f298:	add	x1, x0, #0x460
  40f29c:	mov	x0, x2
  40f2a0:	bl	40e448 <wcrtomb@plt+0xb658>
  40f2a4:	and	w0, w0, #0xff
  40f2a8:	cmp	w0, #0x0
  40f2ac:	b.ne	40f2b8 <wcrtomb@plt+0xc4c8>  // b.any
  40f2b0:	add	x0, sp, #0x38
  40f2b4:	b	40f2c0 <wcrtomb@plt+0xc4d0>
  40f2b8:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40f2bc:	add	x0, x0, #0x450
  40f2c0:	str	x0, [sp, #240]
  40f2c4:	ldr	x0, [sp, #240]
  40f2c8:	bl	40f004 <wcrtomb@plt+0xc214>
  40f2cc:	str	x0, [sp, #232]
  40f2d0:	ldr	x0, [sp, #232]
  40f2d4:	cmp	x0, #0x0
  40f2d8:	b.ne	40f2ec <wcrtomb@plt+0xc4fc>  // b.any
  40f2dc:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40f2e0:	add	x0, x0, #0x5e8
  40f2e4:	bl	402d80 <gettext@plt>
  40f2e8:	bl	40bc58 <wcrtomb@plt+0x8e68>
  40f2ec:	ldr	x0, [sp, #40]
  40f2f0:	ldrb	w0, [x0, #1048]
  40f2f4:	cmp	w0, #0x0
  40f2f8:	b.eq	40f31c <wcrtomb@plt+0xc52c>  // b.none
  40f2fc:	ldr	x0, [sp, #232]
  40f300:	ldrb	w0, [x0, #16]
  40f304:	eor	w0, w0, #0x1
  40f308:	and	w0, w0, #0xff
  40f30c:	cmp	w0, #0x0
  40f310:	b.eq	40f31c <wcrtomb@plt+0xc52c>  // b.none
  40f314:	strb	wzr, [sp, #303]
  40f318:	b	40f368 <wcrtomb@plt+0xc578>
  40f31c:	str	wzr, [sp, #272]
  40f320:	b	40f354 <wcrtomb@plt+0xc564>
  40f324:	ldr	x0, [sp, #232]
  40f328:	ldr	x1, [x0, #8]
  40f32c:	ldr	w0, [sp, #272]
  40f330:	blr	x1
  40f334:	cmp	w0, #0x0
  40f338:	b.eq	40f348 <wcrtomb@plt+0xc558>  // b.none
  40f33c:	ldr	w0, [sp, #272]
  40f340:	add	x1, sp, #0xc0
  40f344:	bl	40e7c8 <wcrtomb@plt+0xb9d8>
  40f348:	ldr	w0, [sp, #272]
  40f34c:	add	w0, w0, #0x1
  40f350:	str	w0, [sp, #272]
  40f354:	ldr	w0, [sp, #272]
  40f358:	cmp	w0, #0xff
  40f35c:	b.le	40f324 <wcrtomb@plt+0xc534>
  40f360:	b	40f368 <wcrtomb@plt+0xc578>
  40f364:	strb	wzr, [sp, #303]
  40f368:	ldr	w0, [sp, #296]
  40f36c:	orr	w0, w0, #0x8
  40f370:	str	w0, [sp, #296]
  40f374:	ldr	x0, [sp, #40]
  40f378:	bl	40efc8 <wcrtomb@plt+0xc1d8>
  40f37c:	str	w0, [sp, #284]
  40f380:	ldr	x0, [sp, #40]
  40f384:	ldr	w0, [x0, #72]
  40f388:	str	w0, [sp, #280]
  40f38c:	b	40f75c <wcrtomb@plt+0xc96c>
  40f390:	ldr	w0, [sp, #292]
  40f394:	cmp	w0, #0x5c
  40f398:	b.ne	40f3c8 <wcrtomb@plt+0xc5d8>  // b.any
  40f39c:	ldr	x0, [sp, #40]
  40f3a0:	ldr	x0, [x0, #448]
  40f3a4:	and	x0, x0, #0x1
  40f3a8:	cmp	x0, #0x0
  40f3ac:	b.eq	40f3c8 <wcrtomb@plt+0xc5d8>  // b.none
  40f3b0:	ldr	x0, [sp, #40]
  40f3b4:	bl	40efc8 <wcrtomb@plt+0xc1d8>
  40f3b8:	str	w0, [sp, #292]
  40f3bc:	ldr	x0, [sp, #40]
  40f3c0:	ldr	w0, [x0, #72]
  40f3c4:	str	w0, [sp, #288]
  40f3c8:	ldr	w0, [sp, #284]
  40f3cc:	cmp	w0, #0x100
  40f3d0:	b.ne	40f3ec <wcrtomb@plt+0xc5fc>  // b.any
  40f3d4:	ldr	x0, [sp, #40]
  40f3d8:	bl	40efc8 <wcrtomb@plt+0xc1d8>
  40f3dc:	str	w0, [sp, #284]
  40f3e0:	ldr	x0, [sp, #40]
  40f3e4:	ldr	w0, [x0, #72]
  40f3e8:	str	w0, [sp, #280]
  40f3ec:	ldr	w0, [sp, #284]
  40f3f0:	cmp	w0, #0x2d
  40f3f4:	b.ne	40f5b8 <wcrtomb@plt+0xc7c8>  // b.any
  40f3f8:	ldr	x0, [sp, #40]
  40f3fc:	bl	40efc8 <wcrtomb@plt+0xc1d8>
  40f400:	str	w0, [sp, #268]
  40f404:	ldr	x0, [sp, #40]
  40f408:	ldr	w0, [x0, #72]
  40f40c:	str	w0, [sp, #264]
  40f410:	ldr	w0, [sp, #268]
  40f414:	cmp	w0, #0x5b
  40f418:	b.ne	40f43c <wcrtomb@plt+0xc64c>  // b.any
  40f41c:	ldr	x0, [sp, #40]
  40f420:	ldr	x0, [x0, #32]
  40f424:	ldrb	w0, [x0]
  40f428:	cmp	w0, #0x2e
  40f42c:	b.ne	40f43c <wcrtomb@plt+0xc64c>  // b.any
  40f430:	strb	wzr, [sp, #303]
  40f434:	mov	w0, #0x5d                  	// #93
  40f438:	str	w0, [sp, #268]
  40f43c:	ldr	w0, [sp, #268]
  40f440:	cmp	w0, #0x5d
  40f444:	b.ne	40f474 <wcrtomb@plt+0xc684>  // b.any
  40f448:	ldr	x0, [sp, #40]
  40f44c:	ldr	x0, [x0, #32]
  40f450:	sub	x1, x0, #0x1
  40f454:	ldr	x0, [sp, #40]
  40f458:	str	x1, [x0, #32]
  40f45c:	ldr	x0, [sp, #40]
  40f460:	ldr	x0, [x0, #40]
  40f464:	add	x1, x0, #0x1
  40f468:	ldr	x0, [sp, #40]
  40f46c:	str	x1, [x0, #40]
  40f470:	b	40f5b8 <wcrtomb@plt+0xc7c8>
  40f474:	ldr	w0, [sp, #268]
  40f478:	cmp	w0, #0x5c
  40f47c:	b.ne	40f4ac <wcrtomb@plt+0xc6bc>  // b.any
  40f480:	ldr	x0, [sp, #40]
  40f484:	ldr	x0, [x0, #448]
  40f488:	and	x0, x0, #0x1
  40f48c:	cmp	x0, #0x0
  40f490:	b.eq	40f4ac <wcrtomb@plt+0xc6bc>  // b.none
  40f494:	ldr	x0, [sp, #40]
  40f498:	bl	40efc8 <wcrtomb@plt+0xc1d8>
  40f49c:	str	w0, [sp, #268]
  40f4a0:	ldr	x0, [sp, #40]
  40f4a4:	ldr	w0, [x0, #72]
  40f4a8:	str	w0, [sp, #264]
  40f4ac:	ldr	w0, [sp, #296]
  40f4b0:	orr	w0, w0, #0x8
  40f4b4:	str	w0, [sp, #296]
  40f4b8:	ldr	x0, [sp, #40]
  40f4bc:	bl	40efc8 <wcrtomb@plt+0xc1d8>
  40f4c0:	str	w0, [sp, #284]
  40f4c4:	ldr	x0, [sp, #40]
  40f4c8:	ldr	w0, [x0, #72]
  40f4cc:	str	w0, [sp, #280]
  40f4d0:	ldr	w1, [sp, #288]
  40f4d4:	ldr	w0, [sp, #264]
  40f4d8:	cmp	w1, w0
  40f4dc:	b.ne	40f4ec <wcrtomb@plt+0xc6fc>  // b.any
  40f4e0:	ldr	w0, [sp, #288]
  40f4e4:	cmn	w0, #0x1
  40f4e8:	b.ne	40f5b8 <wcrtomb@plt+0xc7c8>  // b.any
  40f4ec:	ldr	x0, [sp, #40]
  40f4f0:	ldrb	w0, [x0, #1049]
  40f4f4:	cmp	w0, #0x0
  40f4f8:	b.ne	40f52c <wcrtomb@plt+0xc73c>  // b.any
  40f4fc:	ldr	w0, [sp, #292]
  40f500:	and	w0, w0, #0xff
  40f504:	bl	40e478 <wcrtomb@plt+0xb688>
  40f508:	and	w0, w0, #0xff
  40f50c:	mov	w19, w0
  40f510:	ldr	w0, [sp, #268]
  40f514:	and	w0, w0, #0xff
  40f518:	bl	40e478 <wcrtomb@plt+0xb688>
  40f51c:	and	w0, w0, #0xff
  40f520:	and	w0, w19, w0
  40f524:	cmp	w0, #0x0
  40f528:	b.eq	40f5ac <wcrtomb@plt+0xc7bc>  // b.none
  40f52c:	ldr	w0, [sp, #292]
  40f530:	str	w0, [sp, #260]
  40f534:	b	40f598 <wcrtomb@plt+0xc7a8>
  40f538:	ldr	x0, [sp, #40]
  40f53c:	ldrb	w0, [x0, #457]
  40f540:	cmp	w0, #0x0
  40f544:	b.eq	40f580 <wcrtomb@plt+0xc790>  // b.none
  40f548:	bl	402b40 <__ctype_b_loc@plt>
  40f54c:	ldr	x1, [x0]
  40f550:	ldrsw	x0, [sp, #260]
  40f554:	lsl	x0, x0, #1
  40f558:	add	x0, x1, x0
  40f55c:	ldrh	w0, [x0]
  40f560:	and	w0, w0, #0x400
  40f564:	cmp	w0, #0x0
  40f568:	b.eq	40f580 <wcrtomb@plt+0xc790>  // b.none
  40f56c:	add	x0, sp, #0xc0
  40f570:	mov	x1, x0
  40f574:	ldr	w0, [sp, #260]
  40f578:	bl	40eeb8 <wcrtomb@plt+0xc0c8>
  40f57c:	b	40f58c <wcrtomb@plt+0xc79c>
  40f580:	ldr	w0, [sp, #260]
  40f584:	add	x1, sp, #0xc0
  40f588:	bl	40e7c8 <wcrtomb@plt+0xb9d8>
  40f58c:	ldr	w0, [sp, #260]
  40f590:	add	w0, w0, #0x1
  40f594:	str	w0, [sp, #260]
  40f598:	ldr	w1, [sp, #260]
  40f59c:	ldr	w0, [sp, #268]
  40f5a0:	cmp	w1, w0
  40f5a4:	b.le	40f538 <wcrtomb@plt+0xc748>
  40f5a8:	b	40f5b4 <wcrtomb@plt+0xc7c4>
  40f5ac:	strb	wzr, [sp, #303]
  40f5b0:	b	40f75c <wcrtomb@plt+0xc96c>
  40f5b4:	b	40f75c <wcrtomb@plt+0xc96c>
  40f5b8:	ldr	w0, [sp, #292]
  40f5bc:	cmp	w0, #0x3a
  40f5c0:	b.ne	40f5cc <wcrtomb@plt+0xc7dc>  // b.any
  40f5c4:	mov	w0, #0x2                   	// #2
  40f5c8:	b	40f5d0 <wcrtomb@plt+0xc7e0>
  40f5cc:	mov	w0, #0x4                   	// #4
  40f5d0:	ldr	w1, [sp, #296]
  40f5d4:	orr	w0, w1, w0
  40f5d8:	str	w0, [sp, #296]
  40f5dc:	ldr	x0, [sp, #40]
  40f5e0:	ldrb	w0, [x0, #1048]
  40f5e4:	eor	w0, w0, #0x1
  40f5e8:	and	w0, w0, #0xff
  40f5ec:	cmp	w0, #0x0
  40f5f0:	b.eq	40f64c <wcrtomb@plt+0xc85c>  // b.none
  40f5f4:	ldr	x0, [sp, #40]
  40f5f8:	ldrb	w0, [x0, #457]
  40f5fc:	cmp	w0, #0x0
  40f600:	b.eq	40f63c <wcrtomb@plt+0xc84c>  // b.none
  40f604:	bl	402b40 <__ctype_b_loc@plt>
  40f608:	ldr	x1, [x0]
  40f60c:	ldrsw	x0, [sp, #292]
  40f610:	lsl	x0, x0, #1
  40f614:	add	x0, x1, x0
  40f618:	ldrh	w0, [x0]
  40f61c:	and	w0, w0, #0x400
  40f620:	cmp	w0, #0x0
  40f624:	b.eq	40f63c <wcrtomb@plt+0xc84c>  // b.none
  40f628:	add	x0, sp, #0xc0
  40f62c:	mov	x1, x0
  40f630:	ldr	w0, [sp, #292]
  40f634:	bl	40eeb8 <wcrtomb@plt+0xc0c8>
  40f638:	b	40f75c <wcrtomb@plt+0xc96c>
  40f63c:	ldr	w0, [sp, #292]
  40f640:	add	x1, sp, #0xc0
  40f644:	bl	40e7c8 <wcrtomb@plt+0xb9d8>
  40f648:	b	40f75c <wcrtomb@plt+0xc96c>
  40f64c:	ldr	w0, [sp, #288]
  40f650:	cmn	w0, #0x1
  40f654:	b.ne	40f660 <wcrtomb@plt+0xc870>  // b.any
  40f658:	strb	wzr, [sp, #303]
  40f65c:	b	40f75c <wcrtomb@plt+0xc96c>
  40f660:	ldr	x0, [sp, #40]
  40f664:	ldrb	w0, [x0, #457]
  40f668:	cmp	w0, #0x0
  40f66c:	b.eq	40f68c <wcrtomb@plt+0xc89c>  // b.none
  40f670:	add	x0, sp, #0x38
  40f674:	add	x0, x0, #0x4
  40f678:	mov	x1, x0
  40f67c:	ldr	w0, [sp, #288]
  40f680:	bl	4185e8 <wcrtomb@plt+0x157f8>
  40f684:	add	w0, w0, #0x1
  40f688:	b	40f690 <wcrtomb@plt+0xc8a0>
  40f68c:	mov	w0, #0x1                   	// #1
  40f690:	str	w0, [sp, #228]
  40f694:	ldr	w0, [sp, #288]
  40f698:	str	w0, [sp, #56]
  40f69c:	str	wzr, [sp, #256]
  40f6a0:	b	40f74c <wcrtomb@plt+0xc95c>
  40f6a4:	ldrsw	x0, [sp, #256]
  40f6a8:	lsl	x0, x0, #2
  40f6ac:	add	x1, sp, #0x38
  40f6b0:	ldr	w0, [x1, x0]
  40f6b4:	add	x1, sp, #0xc0
  40f6b8:	bl	40ee70 <wcrtomb@plt+0xc080>
  40f6bc:	and	w0, w0, #0xff
  40f6c0:	eor	w0, w0, #0x1
  40f6c4:	and	w0, w0, #0xff
  40f6c8:	cmp	w0, #0x0
  40f6cc:	b.eq	40f740 <wcrtomb@plt+0xc950>  // b.none
  40f6d0:	ldr	x0, [sp, #40]
  40f6d4:	ldr	x5, [x0, #96]
  40f6d8:	ldr	x0, [sp, #40]
  40f6dc:	ldr	x1, [x0, #104]
  40f6e0:	ldr	x0, [sp, #40]
  40f6e4:	add	x0, x0, #0x70
  40f6e8:	mov	x4, #0x4                   	// #4
  40f6ec:	mov	x3, #0xffffffffffffffff    	// #-1
  40f6f0:	mov	x2, x0
  40f6f4:	mov	x0, x5
  40f6f8:	bl	40ec40 <wcrtomb@plt+0xbe50>
  40f6fc:	mov	x1, x0
  40f700:	ldr	x0, [sp, #40]
  40f704:	str	x1, [x0, #96]
  40f708:	ldr	x0, [sp, #40]
  40f70c:	ldr	x1, [x0, #96]
  40f710:	ldr	x0, [sp, #40]
  40f714:	ldr	x0, [x0, #104]
  40f718:	add	x3, x0, #0x1
  40f71c:	ldr	x2, [sp, #40]
  40f720:	str	x3, [x2, #104]
  40f724:	lsl	x0, x0, #2
  40f728:	add	x0, x1, x0
  40f72c:	ldrsw	x1, [sp, #256]
  40f730:	lsl	x1, x1, #2
  40f734:	add	x2, sp, #0x38
  40f738:	ldr	w1, [x2, x1]
  40f73c:	str	w1, [x0]
  40f740:	ldr	w0, [sp, #256]
  40f744:	add	w0, w0, #0x1
  40f748:	str	w0, [sp, #256]
  40f74c:	ldr	w1, [sp, #256]
  40f750:	ldr	w0, [sp, #228]
  40f754:	cmp	w1, w0
  40f758:	b.lt	40f6a4 <wcrtomb@plt+0xc8b4>  // b.tstop
  40f75c:	ldr	w0, [sp, #280]
  40f760:	str	w0, [sp, #288]
  40f764:	ldr	w0, [sp, #284]
  40f768:	str	w0, [sp, #292]
  40f76c:	ldr	w0, [sp, #292]
  40f770:	cmp	w0, #0x5d
  40f774:	b.ne	40f144 <wcrtomb@plt+0xc354>  // b.any
  40f778:	ldr	w0, [sp, #296]
  40f77c:	cmp	w0, #0x7
  40f780:	b.ne	40f794 <wcrtomb@plt+0xc9a4>  // b.any
  40f784:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40f788:	add	x0, x0, #0x600
  40f78c:	bl	402d80 <gettext@plt>
  40f790:	bl	40bc74 <wcrtomb@plt+0x8e84>
  40f794:	ldrb	w0, [sp, #303]
  40f798:	eor	w0, w0, #0x1
  40f79c:	and	w0, w0, #0xff
  40f7a0:	cmp	w0, #0x0
  40f7a4:	b.eq	40f7b0 <wcrtomb@plt+0xc9c0>  // b.none
  40f7a8:	mov	x0, #0x112                 	// #274
  40f7ac:	b	40f870 <wcrtomb@plt+0xca80>
  40f7b0:	ldr	x0, [sp, #40]
  40f7b4:	ldrb	w0, [x0, #1048]
  40f7b8:	cmp	w0, #0x0
  40f7bc:	b.eq	40f824 <wcrtomb@plt+0xca34>  // b.none
  40f7c0:	ldrb	w0, [sp, #255]
  40f7c4:	cmp	w0, #0x0
  40f7c8:	b.ne	40f7dc <wcrtomb@plt+0xc9ec>  // b.any
  40f7cc:	ldr	x0, [sp, #40]
  40f7d0:	ldr	x0, [x0, #104]
  40f7d4:	cmp	x0, #0x0
  40f7d8:	b.eq	40f824 <wcrtomb@plt+0xca34>  // b.none
  40f7dc:	ldr	x0, [sp, #40]
  40f7e0:	ldrb	w1, [sp, #255]
  40f7e4:	strb	w1, [x0, #88]
  40f7e8:	add	x0, sp, #0xc0
  40f7ec:	bl	40e9b0 <wcrtomb@plt+0xbbc0>
  40f7f0:	and	w0, w0, #0xff
  40f7f4:	cmp	w0, #0x0
  40f7f8:	b.ne	40f810 <wcrtomb@plt+0xca20>  // b.any
  40f7fc:	add	x0, sp, #0xc0
  40f800:	mov	x1, x0
  40f804:	ldr	x0, [sp, #40]
  40f808:	bl	40ec98 <wcrtomb@plt+0xbea8>
  40f80c:	b	40f814 <wcrtomb@plt+0xca24>
  40f810:	mov	x0, #0xffffffffffffffff    	// #-1
  40f814:	ldr	x1, [sp, #40]
  40f818:	str	x0, [x1, #80]
  40f81c:	mov	x0, #0x113                 	// #275
  40f820:	b	40f870 <wcrtomb@plt+0xca80>
  40f824:	ldrb	w0, [sp, #255]
  40f828:	cmp	w0, #0x0
  40f82c:	b.eq	40f85c <wcrtomb@plt+0xca6c>  // b.none
  40f830:	add	x0, sp, #0xc0
  40f834:	bl	40e8e4 <wcrtomb@plt+0xbaf4>
  40f838:	ldr	x0, [sp, #40]
  40f83c:	ldr	x0, [x0, #448]
  40f840:	and	x0, x0, #0x100
  40f844:	cmp	x0, #0x0
  40f848:	b.eq	40f85c <wcrtomb@plt+0xca6c>  // b.none
  40f84c:	add	x0, sp, #0xc0
  40f850:	mov	x1, x0
  40f854:	mov	w0, #0xa                   	// #10
  40f858:	bl	40e81c <wcrtomb@plt+0xba2c>
  40f85c:	add	x0, sp, #0xc0
  40f860:	mov	x1, x0
  40f864:	ldr	x0, [sp, #40]
  40f868:	bl	40ec98 <wcrtomb@plt+0xbea8>
  40f86c:	add	x0, x0, #0x114
  40f870:	ldr	x19, [sp, #16]
  40f874:	ldp	x29, x30, [sp], #304
  40f878:	ret
  40f87c:	stp	x29, x30, [sp, #-48]!
  40f880:	mov	x29, sp
  40f884:	str	x0, [sp, #40]
  40f888:	str	x1, [sp, #32]
  40f88c:	str	x2, [sp, #24]
  40f890:	ldr	x0, [sp, #40]
  40f894:	ldr	x1, [x0, #32]
  40f898:	ldr	x0, [sp, #32]
  40f89c:	str	x1, [x0]
  40f8a0:	ldr	x0, [sp, #40]
  40f8a4:	ldr	x1, [x0, #40]
  40f8a8:	ldr	x0, [sp, #32]
  40f8ac:	str	x1, [x0, #8]
  40f8b0:	ldr	x0, [sp, #40]
  40f8b4:	ldr	x1, [sp, #24]
  40f8b8:	str	x1, [x0, #32]
  40f8bc:	ldr	x0, [sp, #24]
  40f8c0:	bl	402720 <strlen@plt>
  40f8c4:	mov	x1, x0
  40f8c8:	ldr	x0, [sp, #40]
  40f8cc:	str	x1, [x0, #40]
  40f8d0:	nop
  40f8d4:	ldp	x29, x30, [sp], #48
  40f8d8:	ret
  40f8dc:	sub	sp, sp, #0x10
  40f8e0:	str	x0, [sp, #8]
  40f8e4:	str	x1, [sp]
  40f8e8:	ldr	x0, [sp]
  40f8ec:	ldr	x1, [x0]
  40f8f0:	ldr	x0, [sp, #8]
  40f8f4:	str	x1, [x0, #32]
  40f8f8:	ldr	x0, [sp]
  40f8fc:	ldr	x1, [x0, #8]
  40f900:	ldr	x0, [sp, #8]
  40f904:	str	x1, [x0, #40]
  40f908:	nop
  40f90c:	add	sp, sp, #0x10
  40f910:	ret
  40f914:	stp	x29, x30, [sp, #-144]!
  40f918:	mov	x29, sp
  40f91c:	str	x0, [sp, #24]
  40f920:	strb	wzr, [sp, #143]
  40f924:	str	wzr, [sp, #136]
  40f928:	b	4108e0 <wcrtomb@plt+0xdaf0>
  40f92c:	ldr	x0, [sp, #24]
  40f930:	ldr	x0, [x0, #40]
  40f934:	cmp	x0, #0x0
  40f938:	b.ne	40f954 <wcrtomb@plt+0xcb64>  // b.any
  40f93c:	ldr	x0, [sp, #24]
  40f940:	mov	x1, #0xffffffffffffffff    	// #-1
  40f944:	str	x1, [x0, #48]
  40f948:	ldr	x0, [sp, #24]
  40f94c:	ldr	x0, [x0, #48]
  40f950:	b	4108f0 <wcrtomb@plt+0xdb00>
  40f954:	ldr	x0, [sp, #24]
  40f958:	bl	40ef28 <wcrtomb@plt+0xc138>
  40f95c:	str	w0, [sp, #112]
  40f960:	ldr	w0, [sp, #112]
  40f964:	sub	w0, w0, #0xa
  40f968:	cmp	w0, #0x72
  40f96c:	b.hi	410818 <wcrtomb@plt+0xda28>  // b.pmore
  40f970:	adrp	x1, 436000 <_obstack_memory_used@@Base+0x19e20>
  40f974:	add	x1, x1, #0x6a8
  40f978:	ldr	w0, [x1, w0, uxtw #2]
  40f97c:	adr	x1, 40f988 <wcrtomb@plt+0xcb98>
  40f980:	add	x0, x1, w0, sxtw #2
  40f984:	br	x0
  40f988:	ldrb	w0, [sp, #143]
  40f98c:	cmp	w0, #0x0
  40f990:	b.ne	41070c <wcrtomb@plt+0xd91c>  // b.any
  40f994:	ldr	x0, [sp, #24]
  40f998:	ldr	x0, [x0, #40]
  40f99c:	cmp	x0, #0x0
  40f9a0:	b.ne	40f9b4 <wcrtomb@plt+0xcbc4>  // b.any
  40f9a4:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  40f9a8:	add	x0, x0, #0x638
  40f9ac:	bl	402d80 <gettext@plt>
  40f9b0:	bl	40bc58 <wcrtomb@plt+0x8e68>
  40f9b4:	mov	w0, #0x1                   	// #1
  40f9b8:	strb	w0, [sp, #143]
  40f9bc:	b	4108d4 <wcrtomb@plt+0xdae4>
  40f9c0:	ldrb	w0, [sp, #143]
  40f9c4:	cmp	w0, #0x0
  40f9c8:	b.ne	410714 <wcrtomb@plt+0xd924>  // b.any
  40f9cc:	ldr	x0, [sp, #24]
  40f9d0:	ldr	x0, [x0, #448]
  40f9d4:	and	x0, x0, #0x8
  40f9d8:	cmp	x0, #0x0
  40f9dc:	b.ne	40fa10 <wcrtomb@plt+0xcc20>  // b.any
  40f9e0:	ldr	x0, [sp, #24]
  40f9e4:	ldr	x0, [x0, #48]
  40f9e8:	cmn	x0, #0x1
  40f9ec:	b.eq	40fa10 <wcrtomb@plt+0xcc20>  // b.none
  40f9f0:	ldr	x0, [sp, #24]
  40f9f4:	ldr	x0, [x0, #48]
  40f9f8:	cmp	x0, #0x107
  40f9fc:	b.eq	40fa10 <wcrtomb@plt+0xcc20>  // b.none
  40fa00:	ldr	x0, [sp, #24]
  40fa04:	ldr	x0, [x0, #48]
  40fa08:	cmp	x0, #0x106
  40fa0c:	b.ne	41071c <wcrtomb@plt+0xd92c>  // b.any
  40fa10:	ldr	x0, [sp, #24]
  40fa14:	mov	x1, #0x10c                 	// #268
  40fa18:	str	x1, [x0, #48]
  40fa1c:	ldr	x0, [sp, #24]
  40fa20:	ldr	x0, [x0, #48]
  40fa24:	b	4108f0 <wcrtomb@plt+0xdb00>
  40fa28:	ldrb	w0, [sp, #143]
  40fa2c:	cmp	w0, #0x0
  40fa30:	b.ne	410724 <wcrtomb@plt+0xd934>  // b.any
  40fa34:	ldr	x0, [sp, #24]
  40fa38:	ldr	x0, [x0, #448]
  40fa3c:	and	x0, x0, #0x8
  40fa40:	cmp	x0, #0x0
  40fa44:	b.ne	40fb90 <wcrtomb@plt+0xcda0>  // b.any
  40fa48:	ldr	x0, [sp, #24]
  40fa4c:	ldr	x0, [x0, #40]
  40fa50:	cmp	x0, #0x0
  40fa54:	b.eq	40fb90 <wcrtomb@plt+0xcda0>  // b.none
  40fa58:	ldr	x0, [sp, #24]
  40fa5c:	ldr	x1, [x0, #40]
  40fa60:	ldr	x0, [sp, #24]
  40fa64:	ldr	x0, [x0, #448]
  40fa68:	and	x0, x0, #0x2000
  40fa6c:	cmp	x0, #0x0
  40fa70:	cset	w0, eq  // eq = none
  40fa74:	and	w0, w0, #0xff
  40fa78:	and	x0, x0, #0xff
  40fa7c:	cmp	x1, x0
  40fa80:	b.le	40fad8 <wcrtomb@plt+0xcce8>
  40fa84:	ldr	x0, [sp, #24]
  40fa88:	ldr	x1, [x0, #32]
  40fa8c:	ldr	x0, [sp, #24]
  40fa90:	ldr	x0, [x0, #448]
  40fa94:	and	x0, x0, #0x2000
  40fa98:	cmp	x0, #0x0
  40fa9c:	cset	w0, eq  // eq = none
  40faa0:	and	w2, w0, #0xff
  40faa4:	ldr	x0, [sp, #24]
  40faa8:	ldr	x0, [x0, #32]
  40faac:	ldrb	w0, [x0]
  40fab0:	cmp	w0, #0x5c
  40fab4:	cset	w0, eq  // eq = none
  40fab8:	and	w0, w0, #0xff
  40fabc:	and	w0, w2, w0
  40fac0:	and	w0, w0, #0xff
  40fac4:	and	x0, x0, #0xff
  40fac8:	add	x0, x1, x0
  40facc:	ldrb	w0, [x0]
  40fad0:	cmp	w0, #0x29
  40fad4:	b.eq	40fb90 <wcrtomb@plt+0xcda0>  // b.none
  40fad8:	ldr	x0, [sp, #24]
  40fadc:	ldr	x1, [x0, #40]
  40fae0:	ldr	x0, [sp, #24]
  40fae4:	ldr	x0, [x0, #448]
  40fae8:	and	x0, x0, #0x8000
  40faec:	cmp	x0, #0x0
  40faf0:	cset	w0, eq  // eq = none
  40faf4:	and	w0, w0, #0xff
  40faf8:	and	x0, x0, #0xff
  40fafc:	cmp	x1, x0
  40fb00:	b.le	40fb58 <wcrtomb@plt+0xcd68>
  40fb04:	ldr	x0, [sp, #24]
  40fb08:	ldr	x1, [x0, #32]
  40fb0c:	ldr	x0, [sp, #24]
  40fb10:	ldr	x0, [x0, #448]
  40fb14:	and	x0, x0, #0x8000
  40fb18:	cmp	x0, #0x0
  40fb1c:	cset	w0, eq  // eq = none
  40fb20:	and	w2, w0, #0xff
  40fb24:	ldr	x0, [sp, #24]
  40fb28:	ldr	x0, [x0, #32]
  40fb2c:	ldrb	w0, [x0]
  40fb30:	cmp	w0, #0x5c
  40fb34:	cset	w0, eq  // eq = none
  40fb38:	and	w0, w0, #0xff
  40fb3c:	and	w0, w2, w0
  40fb40:	and	w0, w0, #0xff
  40fb44:	and	x0, x0, #0xff
  40fb48:	add	x0, x1, x0
  40fb4c:	ldrb	w0, [x0]
  40fb50:	cmp	w0, #0x7c
  40fb54:	b.eq	40fb90 <wcrtomb@plt+0xcda0>  // b.none
  40fb58:	ldr	x0, [sp, #24]
  40fb5c:	ldr	x0, [x0, #448]
  40fb60:	and	x0, x0, #0x800
  40fb64:	cmp	x0, #0x0
  40fb68:	b.eq	41072c <wcrtomb@plt+0xd93c>  // b.none
  40fb6c:	ldr	x0, [sp, #24]
  40fb70:	ldr	x0, [x0, #40]
  40fb74:	cmp	x0, #0x0
  40fb78:	b.le	41072c <wcrtomb@plt+0xd93c>
  40fb7c:	ldr	x0, [sp, #24]
  40fb80:	ldr	x0, [x0, #32]
  40fb84:	ldrb	w0, [x0]
  40fb88:	cmp	w0, #0xa
  40fb8c:	b.ne	41072c <wcrtomb@plt+0xd93c>  // b.any
  40fb90:	ldr	x0, [sp, #24]
  40fb94:	mov	x1, #0x10d                 	// #269
  40fb98:	str	x1, [x0, #48]
  40fb9c:	ldr	x0, [sp, #24]
  40fba0:	ldr	x0, [x0, #48]
  40fba4:	b	4108f0 <wcrtomb@plt+0xdb00>
  40fba8:	ldrb	w0, [sp, #143]
  40fbac:	cmp	w0, #0x0
  40fbb0:	b.eq	410734 <wcrtomb@plt+0xd944>  // b.none
  40fbb4:	ldr	x0, [sp, #24]
  40fbb8:	ldr	x0, [x0, #448]
  40fbbc:	and	x0, x0, #0x4000
  40fbc0:	cmp	x0, #0x0
  40fbc4:	b.ne	410734 <wcrtomb@plt+0xd944>  // b.any
  40fbc8:	ldr	x0, [sp, #24]
  40fbcc:	strb	wzr, [x0, #120]
  40fbd0:	ldr	x0, [sp, #24]
  40fbd4:	mov	x1, #0x112                 	// #274
  40fbd8:	str	x1, [x0, #48]
  40fbdc:	ldr	x0, [sp, #24]
  40fbe0:	ldr	x0, [x0, #48]
  40fbe4:	b	4108f0 <wcrtomb@plt+0xdb00>
  40fbe8:	ldrb	w0, [sp, #143]
  40fbec:	cmp	w0, #0x0
  40fbf0:	b.eq	41073c <wcrtomb@plt+0xd94c>  // b.none
  40fbf4:	ldr	x0, [sp, #24]
  40fbf8:	ldr	x0, [x0, #448]
  40fbfc:	and	x0, x0, #0x80000
  40fc00:	cmp	x0, #0x0
  40fc04:	b.ne	41073c <wcrtomb@plt+0xd94c>  // b.any
  40fc08:	ldr	x0, [sp, #24]
  40fc0c:	mov	x1, #0x10c                 	// #268
  40fc10:	str	x1, [x0, #48]
  40fc14:	ldr	x0, [sp, #24]
  40fc18:	ldr	x0, [x0, #48]
  40fc1c:	b	4108f0 <wcrtomb@plt+0xdb00>
  40fc20:	ldrb	w0, [sp, #143]
  40fc24:	cmp	w0, #0x0
  40fc28:	b.eq	410744 <wcrtomb@plt+0xd954>  // b.none
  40fc2c:	ldr	x0, [sp, #24]
  40fc30:	ldr	x0, [x0, #448]
  40fc34:	and	x0, x0, #0x80000
  40fc38:	cmp	x0, #0x0
  40fc3c:	b.ne	410744 <wcrtomb@plt+0xd954>  // b.any
  40fc40:	ldr	x0, [sp, #24]
  40fc44:	mov	x1, #0x10d                 	// #269
  40fc48:	str	x1, [x0, #48]
  40fc4c:	ldr	x0, [sp, #24]
  40fc50:	ldr	x0, [x0, #48]
  40fc54:	b	4108f0 <wcrtomb@plt+0xdb00>
  40fc58:	ldrb	w0, [sp, #143]
  40fc5c:	cmp	w0, #0x0
  40fc60:	b.eq	41074c <wcrtomb@plt+0xd95c>  // b.none
  40fc64:	ldr	x0, [sp, #24]
  40fc68:	ldr	x0, [x0, #448]
  40fc6c:	and	x0, x0, #0x80000
  40fc70:	cmp	x0, #0x0
  40fc74:	b.ne	41074c <wcrtomb@plt+0xd95c>  // b.any
  40fc78:	ldr	x0, [sp, #24]
  40fc7c:	mov	x1, #0x10e                 	// #270
  40fc80:	str	x1, [x0, #48]
  40fc84:	ldr	x0, [sp, #24]
  40fc88:	ldr	x0, [x0, #48]
  40fc8c:	b	4108f0 <wcrtomb@plt+0xdb00>
  40fc90:	ldrb	w0, [sp, #143]
  40fc94:	cmp	w0, #0x0
  40fc98:	b.eq	410754 <wcrtomb@plt+0xd964>  // b.none
  40fc9c:	ldr	x0, [sp, #24]
  40fca0:	ldr	x0, [x0, #448]
  40fca4:	and	x0, x0, #0x80000
  40fca8:	cmp	x0, #0x0
  40fcac:	b.ne	410754 <wcrtomb@plt+0xd964>  // b.any
  40fcb0:	ldr	x0, [sp, #24]
  40fcb4:	mov	x1, #0x10f                 	// #271
  40fcb8:	str	x1, [x0, #48]
  40fcbc:	ldr	x0, [sp, #24]
  40fcc0:	ldr	x0, [x0, #48]
  40fcc4:	b	4108f0 <wcrtomb@plt+0xdb00>
  40fcc8:	ldrb	w0, [sp, #143]
  40fccc:	cmp	w0, #0x0
  40fcd0:	b.eq	41075c <wcrtomb@plt+0xd96c>  // b.none
  40fcd4:	ldr	x0, [sp, #24]
  40fcd8:	ldr	x0, [x0, #448]
  40fcdc:	and	x0, x0, #0x80000
  40fce0:	cmp	x0, #0x0
  40fce4:	b.ne	41075c <wcrtomb@plt+0xd96c>  // b.any
  40fce8:	ldr	x0, [sp, #24]
  40fcec:	mov	x1, #0x110                 	// #272
  40fcf0:	str	x1, [x0, #48]
  40fcf4:	ldr	x0, [sp, #24]
  40fcf8:	ldr	x0, [x0, #48]
  40fcfc:	b	4108f0 <wcrtomb@plt+0xdb00>
  40fd00:	ldrb	w0, [sp, #143]
  40fd04:	cmp	w0, #0x0
  40fd08:	b.eq	410764 <wcrtomb@plt+0xd974>  // b.none
  40fd0c:	ldr	x0, [sp, #24]
  40fd10:	ldr	x0, [x0, #448]
  40fd14:	and	x0, x0, #0x80000
  40fd18:	cmp	x0, #0x0
  40fd1c:	b.ne	410764 <wcrtomb@plt+0xd974>  // b.any
  40fd20:	ldr	x0, [sp, #24]
  40fd24:	mov	x1, #0x111                 	// #273
  40fd28:	str	x1, [x0, #48]
  40fd2c:	ldr	x0, [sp, #24]
  40fd30:	ldr	x0, [x0, #48]
  40fd34:	b	4108f0 <wcrtomb@plt+0xdb00>
  40fd38:	ldr	x0, [sp, #24]
  40fd3c:	ldr	x0, [x0, #448]
  40fd40:	and	x0, x0, #0x400
  40fd44:	cmp	x0, #0x0
  40fd48:	b.ne	41076c <wcrtomb@plt+0xd97c>  // b.any
  40fd4c:	ldrb	w0, [sp, #143]
  40fd50:	ldr	x1, [sp, #24]
  40fd54:	ldr	x1, [x1, #448]
  40fd58:	and	x1, x1, #0x2
  40fd5c:	cmp	x1, #0x0
  40fd60:	cset	w1, ne  // ne = any
  40fd64:	and	w1, w1, #0xff
  40fd68:	cmp	w0, w1
  40fd6c:	b.ne	410774 <wcrtomb@plt+0xd984>  // b.any
  40fd70:	ldr	x0, [sp, #24]
  40fd74:	ldr	x0, [x0, #448]
  40fd78:	and	x0, x0, #0x10
  40fd7c:	cmp	x0, #0x0
  40fd80:	b.ne	40fd94 <wcrtomb@plt+0xcfa4>  // b.any
  40fd84:	ldr	x0, [sp, #24]
  40fd88:	ldrb	w0, [x0, #120]
  40fd8c:	cmp	w0, #0x0
  40fd90:	b.ne	41077c <wcrtomb@plt+0xd98c>  // b.any
  40fd94:	ldr	x0, [sp, #24]
  40fd98:	mov	x1, #0x101                 	// #257
  40fd9c:	str	x1, [x0, #48]
  40fda0:	ldr	x0, [sp, #24]
  40fda4:	ldr	x0, [x0, #48]
  40fda8:	b	4108f0 <wcrtomb@plt+0xdb00>
  40fdac:	ldrb	w0, [sp, #143]
  40fdb0:	cmp	w0, #0x0
  40fdb4:	b.ne	410784 <wcrtomb@plt+0xd994>  // b.any
  40fdb8:	ldr	x0, [sp, #24]
  40fdbc:	ldr	x0, [x0, #448]
  40fdc0:	and	x0, x0, #0x10
  40fdc4:	cmp	x0, #0x0
  40fdc8:	b.ne	40fddc <wcrtomb@plt+0xcfec>  // b.any
  40fdcc:	ldr	x0, [sp, #24]
  40fdd0:	ldrb	w0, [x0, #120]
  40fdd4:	cmp	w0, #0x0
  40fdd8:	b.ne	41078c <wcrtomb@plt+0xd99c>  // b.any
  40fddc:	ldr	x0, [sp, #24]
  40fde0:	mov	x1, #0x102                 	// #258
  40fde4:	str	x1, [x0, #48]
  40fde8:	ldr	x0, [sp, #24]
  40fdec:	ldr	x0, [x0, #48]
  40fdf0:	b	4108f0 <wcrtomb@plt+0xdb00>
  40fdf4:	ldr	x0, [sp, #24]
  40fdf8:	ldr	x0, [x0, #448]
  40fdfc:	and	x0, x0, #0x400
  40fe00:	cmp	x0, #0x0
  40fe04:	b.ne	410794 <wcrtomb@plt+0xd9a4>  // b.any
  40fe08:	ldrb	w0, [sp, #143]
  40fe0c:	ldr	x1, [sp, #24]
  40fe10:	ldr	x1, [x1, #448]
  40fe14:	and	x1, x1, #0x2
  40fe18:	cmp	x1, #0x0
  40fe1c:	cset	w1, ne  // ne = any
  40fe20:	and	w1, w1, #0xff
  40fe24:	cmp	w0, w1
  40fe28:	b.ne	41079c <wcrtomb@plt+0xd9ac>  // b.any
  40fe2c:	ldr	x0, [sp, #24]
  40fe30:	ldr	x0, [x0, #448]
  40fe34:	and	x0, x0, #0x10
  40fe38:	cmp	x0, #0x0
  40fe3c:	b.ne	40fe50 <wcrtomb@plt+0xd060>  // b.any
  40fe40:	ldr	x0, [sp, #24]
  40fe44:	ldrb	w0, [x0, #120]
  40fe48:	cmp	w0, #0x0
  40fe4c:	b.ne	4107a4 <wcrtomb@plt+0xd9b4>  // b.any
  40fe50:	ldr	x0, [sp, #24]
  40fe54:	mov	x1, #0x103                 	// #259
  40fe58:	str	x1, [x0, #48]
  40fe5c:	ldr	x0, [sp, #24]
  40fe60:	ldr	x0, [x0, #48]
  40fe64:	b	4108f0 <wcrtomb@plt+0xdb00>
  40fe68:	ldr	x0, [sp, #24]
  40fe6c:	ldr	x0, [x0, #448]
  40fe70:	and	x0, x0, #0x200
  40fe74:	cmp	x0, #0x0
  40fe78:	b.eq	4107ac <wcrtomb@plt+0xd9bc>  // b.none
  40fe7c:	ldrb	w0, [sp, #143]
  40fe80:	ldr	x1, [sp, #24]
  40fe84:	ldr	x1, [x1, #448]
  40fe88:	and	x1, x1, #0x1000
  40fe8c:	cmp	x1, #0x0
  40fe90:	cset	w1, eq  // eq = none
  40fe94:	and	w1, w1, #0xff
  40fe98:	cmp	w0, w1
  40fe9c:	b.ne	4107b4 <wcrtomb@plt+0xd9c4>  // b.any
  40fea0:	ldr	x0, [sp, #24]
  40fea4:	ldr	x0, [x0, #448]
  40fea8:	and	x0, x0, #0x10
  40feac:	cmp	x0, #0x0
  40feb0:	b.ne	40fec4 <wcrtomb@plt+0xd0d4>  // b.any
  40feb4:	ldr	x0, [sp, #24]
  40feb8:	ldrb	w0, [x0, #120]
  40febc:	cmp	w0, #0x0
  40fec0:	b.ne	4107bc <wcrtomb@plt+0xd9cc>  // b.any
  40fec4:	ldr	x0, [sp, #24]
  40fec8:	ldr	x0, [x0, #32]
  40fecc:	str	x0, [sp, #128]
  40fed0:	ldr	x0, [sp, #24]
  40fed4:	ldr	x0, [x0, #40]
  40fed8:	mov	x1, x0
  40fedc:	ldr	x0, [sp, #128]
  40fee0:	add	x0, x0, x1
  40fee4:	str	x0, [sp, #104]
  40fee8:	ldr	x0, [sp, #24]
  40feec:	mov	w1, #0xffffffff            	// #-1
  40fef0:	str	w1, [x0, #68]
  40fef4:	ldr	x0, [sp, #24]
  40fef8:	ldr	w1, [x0, #68]
  40fefc:	ldr	x0, [sp, #24]
  40ff00:	str	w1, [x0, #64]
  40ff04:	b	40ff78 <wcrtomb@plt+0xd188>
  40ff08:	ldr	x0, [sp, #24]
  40ff0c:	ldr	w0, [x0, #64]
  40ff10:	cmp	w0, #0x0
  40ff14:	b.ge	40ff28 <wcrtomb@plt+0xd138>  // b.tcont
  40ff18:	ldr	x0, [sp, #128]
  40ff1c:	ldrb	w0, [x0]
  40ff20:	sub	w0, w0, #0x30
  40ff24:	b	40ff64 <wcrtomb@plt+0xd174>
  40ff28:	ldr	x0, [sp, #24]
  40ff2c:	ldr	w1, [x0, #64]
  40ff30:	mov	w0, w1
  40ff34:	lsl	w0, w0, #2
  40ff38:	add	w0, w0, w1
  40ff3c:	lsl	w0, w0, #1
  40ff40:	mov	w1, w0
  40ff44:	ldr	x0, [sp, #128]
  40ff48:	ldrb	w0, [x0]
  40ff4c:	add	w0, w1, w0
  40ff50:	mov	w2, #0x8030                	// #32816
  40ff54:	mov	w1, #0x8030                	// #32816
  40ff58:	cmp	w0, w2
  40ff5c:	csel	w0, w0, w1, le
  40ff60:	sub	w0, w0, #0x30
  40ff64:	ldr	x1, [sp, #24]
  40ff68:	str	w0, [x1, #64]
  40ff6c:	ldr	x0, [sp, #128]
  40ff70:	add	x0, x0, #0x1
  40ff74:	str	x0, [sp, #128]
  40ff78:	ldr	x1, [sp, #128]
  40ff7c:	ldr	x0, [sp, #104]
  40ff80:	cmp	x1, x0
  40ff84:	b.eq	40ffa0 <wcrtomb@plt+0xd1b0>  // b.none
  40ff88:	ldr	x0, [sp, #128]
  40ff8c:	ldrb	w0, [x0]
  40ff90:	bl	40e478 <wcrtomb@plt+0xb688>
  40ff94:	and	w0, w0, #0xff
  40ff98:	cmp	w0, #0x0
  40ff9c:	b.ne	40ff08 <wcrtomb@plt+0xd118>  // b.any
  40ffa0:	ldr	x1, [sp, #128]
  40ffa4:	ldr	x0, [sp, #104]
  40ffa8:	cmp	x1, x0
  40ffac:	b.eq	410088 <wcrtomb@plt+0xd298>  // b.none
  40ffb0:	ldr	x0, [sp, #128]
  40ffb4:	ldrb	w0, [x0]
  40ffb8:	cmp	w0, #0x2c
  40ffbc:	b.eq	40ffd4 <wcrtomb@plt+0xd1e4>  // b.none
  40ffc0:	ldr	x0, [sp, #24]
  40ffc4:	ldr	w1, [x0, #64]
  40ffc8:	ldr	x0, [sp, #24]
  40ffcc:	str	w1, [x0, #68]
  40ffd0:	b	410088 <wcrtomb@plt+0xd298>
  40ffd4:	ldr	x0, [sp, #24]
  40ffd8:	ldr	w0, [x0, #64]
  40ffdc:	cmp	w0, #0x0
  40ffe0:	b.ge	410054 <wcrtomb@plt+0xd264>  // b.tcont
  40ffe4:	ldr	x0, [sp, #24]
  40ffe8:	str	wzr, [x0, #64]
  40ffec:	b	410054 <wcrtomb@plt+0xd264>
  40fff0:	ldr	x0, [sp, #24]
  40fff4:	ldr	w0, [x0, #68]
  40fff8:	cmp	w0, #0x0
  40fffc:	b.ge	410010 <wcrtomb@plt+0xd220>  // b.tcont
  410000:	ldr	x0, [sp, #128]
  410004:	ldrb	w0, [x0]
  410008:	sub	w0, w0, #0x30
  41000c:	b	41004c <wcrtomb@plt+0xd25c>
  410010:	ldr	x0, [sp, #24]
  410014:	ldr	w1, [x0, #68]
  410018:	mov	w0, w1
  41001c:	lsl	w0, w0, #2
  410020:	add	w0, w0, w1
  410024:	lsl	w0, w0, #1
  410028:	mov	w1, w0
  41002c:	ldr	x0, [sp, #128]
  410030:	ldrb	w0, [x0]
  410034:	add	w0, w1, w0
  410038:	mov	w2, #0x8030                	// #32816
  41003c:	mov	w1, #0x8030                	// #32816
  410040:	cmp	w0, w2
  410044:	csel	w0, w0, w1, le
  410048:	sub	w0, w0, #0x30
  41004c:	ldr	x1, [sp, #24]
  410050:	str	w0, [x1, #68]
  410054:	ldr	x0, [sp, #128]
  410058:	add	x0, x0, #0x1
  41005c:	str	x0, [sp, #128]
  410060:	ldr	x1, [sp, #128]
  410064:	ldr	x0, [sp, #104]
  410068:	cmp	x1, x0
  41006c:	b.eq	410088 <wcrtomb@plt+0xd298>  // b.none
  410070:	ldr	x0, [sp, #128]
  410074:	ldrb	w0, [x0]
  410078:	bl	40e478 <wcrtomb@plt+0xb688>
  41007c:	and	w0, w0, #0xff
  410080:	cmp	w0, #0x0
  410084:	b.ne	40fff0 <wcrtomb@plt+0xd200>  // b.any
  410088:	ldrb	w0, [sp, #143]
  41008c:	cmp	w0, #0x0
  410090:	b.eq	4100bc <wcrtomb@plt+0xd2cc>  // b.none
  410094:	ldr	x1, [sp, #128]
  410098:	ldr	x0, [sp, #104]
  41009c:	cmp	x1, x0
  4100a0:	b.eq	41011c <wcrtomb@plt+0xd32c>  // b.none
  4100a4:	ldr	x0, [sp, #128]
  4100a8:	add	x1, x0, #0x1
  4100ac:	str	x1, [sp, #128]
  4100b0:	ldrb	w0, [x0]
  4100b4:	cmp	w0, #0x5c
  4100b8:	b.ne	41011c <wcrtomb@plt+0xd32c>  // b.any
  4100bc:	ldr	x1, [sp, #128]
  4100c0:	ldr	x0, [sp, #104]
  4100c4:	cmp	x1, x0
  4100c8:	b.eq	41011c <wcrtomb@plt+0xd32c>  // b.none
  4100cc:	ldr	x0, [sp, #128]
  4100d0:	add	x1, x0, #0x1
  4100d4:	str	x1, [sp, #128]
  4100d8:	ldrb	w0, [x0]
  4100dc:	cmp	w0, #0x7d
  4100e0:	b.ne	41011c <wcrtomb@plt+0xd32c>  // b.any
  4100e4:	ldr	x0, [sp, #24]
  4100e8:	ldr	w0, [x0, #64]
  4100ec:	cmp	w0, #0x0
  4100f0:	b.lt	41011c <wcrtomb@plt+0xd32c>  // b.tstop
  4100f4:	ldr	x0, [sp, #24]
  4100f8:	ldr	w0, [x0, #68]
  4100fc:	cmp	w0, #0x0
  410100:	b.lt	410140 <wcrtomb@plt+0xd350>  // b.tstop
  410104:	ldr	x0, [sp, #24]
  410108:	ldr	w1, [x0, #64]
  41010c:	ldr	x0, [sp, #24]
  410110:	ldr	w0, [x0, #68]
  410114:	cmp	w1, w0
  410118:	b.le	410140 <wcrtomb@plt+0xd350>
  41011c:	ldr	x0, [sp, #24]
  410120:	ldr	x0, [x0, #448]
  410124:	and	x0, x0, #0x200000
  410128:	cmp	x0, #0x0
  41012c:	b.ne	4107c4 <wcrtomb@plt+0xd9d4>  // b.any
  410130:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  410134:	add	x0, x0, #0x650
  410138:	bl	402d80 <gettext@plt>
  41013c:	bl	40bc58 <wcrtomb@plt+0x8e68>
  410140:	ldr	x0, [sp, #24]
  410144:	ldr	w1, [x0, #68]
  410148:	mov	w0, #0x7fff                	// #32767
  41014c:	cmp	w1, w0
  410150:	b.le	410164 <wcrtomb@plt+0xd374>
  410154:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  410158:	add	x0, x0, #0x668
  41015c:	bl	402d80 <gettext@plt>
  410160:	bl	40bc58 <wcrtomb@plt+0x8e68>
  410164:	ldr	x0, [sp, #24]
  410168:	ldr	x1, [sp, #128]
  41016c:	str	x1, [x0, #32]
  410170:	ldr	x1, [sp, #104]
  410174:	ldr	x0, [sp, #128]
  410178:	sub	x1, x1, x0
  41017c:	ldr	x0, [sp, #24]
  410180:	str	x1, [x0, #40]
  410184:	ldr	x0, [sp, #24]
  410188:	strb	wzr, [x0, #120]
  41018c:	ldr	x0, [sp, #24]
  410190:	mov	x1, #0x104                 	// #260
  410194:	str	x1, [x0, #48]
  410198:	ldr	x0, [sp, #24]
  41019c:	ldr	x0, [x0, #48]
  4101a0:	b	4108f0 <wcrtomb@plt+0xdb00>
  4101a4:	ldr	x0, [sp, #24]
  4101a8:	ldr	x0, [x0, #448]
  4101ac:	and	x0, x0, #0x400
  4101b0:	cmp	x0, #0x0
  4101b4:	b.ne	4107cc <wcrtomb@plt+0xd9dc>  // b.any
  4101b8:	ldrb	w0, [sp, #143]
  4101bc:	ldr	x1, [sp, #24]
  4101c0:	ldr	x1, [x1, #448]
  4101c4:	and	x1, x1, #0x8000
  4101c8:	cmp	x1, #0x0
  4101cc:	cset	w1, eq  // eq = none
  4101d0:	and	w1, w1, #0xff
  4101d4:	cmp	w0, w1
  4101d8:	b.ne	4107d4 <wcrtomb@plt+0xd9e4>  // b.any
  4101dc:	ldr	x0, [sp, #24]
  4101e0:	mov	w1, #0x1                   	// #1
  4101e4:	strb	w1, [x0, #120]
  4101e8:	ldr	x0, [sp, #24]
  4101ec:	mov	x1, #0x106                 	// #262
  4101f0:	str	x1, [x0, #48]
  4101f4:	ldr	x0, [sp, #24]
  4101f8:	ldr	x0, [x0, #48]
  4101fc:	b	4108f0 <wcrtomb@plt+0xdb00>
  410200:	ldr	x0, [sp, #24]
  410204:	ldr	x0, [x0, #448]
  410208:	and	x0, x0, #0x400
  41020c:	cmp	x0, #0x0
  410210:	b.ne	4107dc <wcrtomb@plt+0xd9ec>  // b.any
  410214:	ldrb	w0, [sp, #143]
  410218:	cmp	w0, #0x0
  41021c:	b.ne	4107dc <wcrtomb@plt+0xd9ec>  // b.any
  410220:	ldr	x0, [sp, #24]
  410224:	ldr	x0, [x0, #448]
  410228:	and	x0, x0, #0x800
  41022c:	cmp	x0, #0x0
  410230:	b.eq	4107dc <wcrtomb@plt+0xd9ec>  // b.none
  410234:	ldr	x0, [sp, #24]
  410238:	mov	w1, #0x1                   	// #1
  41023c:	strb	w1, [x0, #120]
  410240:	ldr	x0, [sp, #24]
  410244:	mov	x1, #0x106                 	// #262
  410248:	str	x1, [x0, #48]
  41024c:	ldr	x0, [sp, #24]
  410250:	ldr	x0, [x0, #48]
  410254:	b	4108f0 <wcrtomb@plt+0xdb00>
  410258:	ldrb	w0, [sp, #143]
  41025c:	ldr	x1, [sp, #24]
  410260:	ldr	x1, [x1, #448]
  410264:	and	x1, x1, #0x2000
  410268:	cmp	x1, #0x0
  41026c:	cset	w1, eq  // eq = none
  410270:	and	w1, w1, #0xff
  410274:	cmp	w0, w1
  410278:	b.ne	4107e4 <wcrtomb@plt+0xd9f4>  // b.any
  41027c:	ldr	x0, [sp, #24]
  410280:	ldr	x0, [x0, #56]
  410284:	add	x1, x0, #0x1
  410288:	ldr	x0, [sp, #24]
  41028c:	str	x1, [x0, #56]
  410290:	ldr	x0, [sp, #24]
  410294:	mov	w1, #0x1                   	// #1
  410298:	strb	w1, [x0, #120]
  41029c:	ldr	x0, [sp, #24]
  4102a0:	mov	x1, #0x107                 	// #263
  4102a4:	str	x1, [x0, #48]
  4102a8:	ldr	x0, [sp, #24]
  4102ac:	ldr	x0, [x0, #48]
  4102b0:	b	4108f0 <wcrtomb@plt+0xdb00>
  4102b4:	ldrb	w0, [sp, #143]
  4102b8:	ldr	x1, [sp, #24]
  4102bc:	ldr	x1, [x1, #448]
  4102c0:	and	x1, x1, #0x2000
  4102c4:	cmp	x1, #0x0
  4102c8:	cset	w1, eq  // eq = none
  4102cc:	and	w1, w1, #0xff
  4102d0:	cmp	w0, w1
  4102d4:	b.ne	4107ec <wcrtomb@plt+0xd9fc>  // b.any
  4102d8:	ldr	x0, [sp, #24]
  4102dc:	ldr	x0, [x0, #56]
  4102e0:	cmp	x0, #0x0
  4102e4:	b.ne	4102fc <wcrtomb@plt+0xd50c>  // b.any
  4102e8:	ldr	x0, [sp, #24]
  4102ec:	ldr	x0, [x0, #448]
  4102f0:	and	x0, x0, #0x20000
  4102f4:	cmp	x0, #0x0
  4102f8:	b.ne	4107f4 <wcrtomb@plt+0xda04>  // b.any
  4102fc:	ldr	x0, [sp, #24]
  410300:	ldr	x0, [x0, #56]
  410304:	sub	x1, x0, #0x1
  410308:	ldr	x0, [sp, #24]
  41030c:	str	x1, [x0, #56]
  410310:	ldr	x0, [sp, #24]
  410314:	strb	wzr, [x0, #120]
  410318:	ldr	x0, [sp, #24]
  41031c:	mov	x1, #0x108                 	// #264
  410320:	str	x1, [x0, #48]
  410324:	ldr	x0, [sp, #24]
  410328:	ldr	x0, [x0, #48]
  41032c:	b	4108f0 <wcrtomb@plt+0xdb00>
  410330:	ldrb	w0, [sp, #143]
  410334:	cmp	w0, #0x0
  410338:	b.ne	4107fc <wcrtomb@plt+0xda0c>  // b.any
  41033c:	ldr	x0, [sp, #24]
  410340:	ldr	x0, [x0, #24]
  410344:	cmp	x0, #0x0
  410348:	b.ge	410414 <wcrtomb@plt+0xd624>  // b.tcont
  41034c:	add	x0, sp, #0x28
  410350:	bl	40e89c <wcrtomb@plt+0xbaac>
  410354:	ldr	x0, [sp, #24]
  410358:	ldr	x0, [x0, #448]
  41035c:	and	x0, x0, #0x40
  410360:	cmp	x0, #0x0
  410364:	b.ne	410378 <wcrtomb@plt+0xd588>  // b.any
  410368:	add	x0, sp, #0x28
  41036c:	mov	x1, x0
  410370:	mov	w0, #0xa                   	// #10
  410374:	bl	40e81c <wcrtomb@plt+0xba2c>
  410378:	ldr	x0, [sp, #24]
  41037c:	ldr	x0, [x0, #448]
  410380:	and	x0, x0, #0x80
  410384:	cmp	x0, #0x0
  410388:	b.eq	41039c <wcrtomb@plt+0xd5ac>  // b.none
  41038c:	add	x0, sp, #0x28
  410390:	mov	x1, x0
  410394:	mov	w0, #0x0                   	// #0
  410398:	bl	40e81c <wcrtomb@plt+0xba2c>
  41039c:	ldr	x0, [sp, #24]
  4103a0:	ldrb	w0, [x0, #1048]
  4103a4:	cmp	w0, #0x0
  4103a8:	b.eq	4103f8 <wcrtomb@plt+0xd608>  // b.none
  4103ac:	str	wzr, [sp, #124]
  4103b0:	b	4103ec <wcrtomb@plt+0xd5fc>
  4103b4:	ldr	x1, [sp, #24]
  4103b8:	ldrsw	x0, [sp, #124]
  4103bc:	add	x0, x0, #0x144
  4103c0:	lsl	x0, x0, #2
  4103c4:	add	x0, x1, x0
  4103c8:	ldr	w0, [x0, #12]
  4103cc:	cmn	w0, #0x1
  4103d0:	b.ne	4103e0 <wcrtomb@plt+0xd5f0>  // b.any
  4103d4:	ldr	w0, [sp, #124]
  4103d8:	add	x1, sp, #0x28
  4103dc:	bl	40e81c <wcrtomb@plt+0xba2c>
  4103e0:	ldr	w0, [sp, #124]
  4103e4:	add	w0, w0, #0x1
  4103e8:	str	w0, [sp, #124]
  4103ec:	ldr	w0, [sp, #124]
  4103f0:	cmp	w0, #0xff
  4103f4:	b.le	4103b4 <wcrtomb@plt+0xd5c4>
  4103f8:	add	x0, sp, #0x28
  4103fc:	mov	x1, x0
  410400:	ldr	x0, [sp, #24]
  410404:	bl	40ec98 <wcrtomb@plt+0xbea8>
  410408:	mov	x1, x0
  41040c:	ldr	x0, [sp, #24]
  410410:	str	x1, [x0, #24]
  410414:	ldr	x0, [sp, #24]
  410418:	strb	wzr, [x0, #120]
  41041c:	ldr	x0, [sp, #24]
  410420:	ldrb	w0, [x0, #1048]
  410424:	cmp	w0, #0x0
  410428:	b.eq	410434 <wcrtomb@plt+0xd644>  // b.none
  41042c:	mov	x0, #0x10a                 	// #266
  410430:	b	410440 <wcrtomb@plt+0xd650>
  410434:	ldr	x0, [sp, #24]
  410438:	ldr	x0, [x0, #24]
  41043c:	add	x0, x0, #0x114
  410440:	ldr	x1, [sp, #24]
  410444:	str	x0, [x1, #48]
  410448:	ldr	x0, [sp, #24]
  41044c:	ldr	x0, [x0, #48]
  410450:	b	4108f0 <wcrtomb@plt+0xdb00>
  410454:	ldrb	w0, [sp, #143]
  410458:	eor	w0, w0, #0x1
  41045c:	and	w0, w0, #0xff
  410460:	cmp	w0, #0x0
  410464:	b.ne	410804 <wcrtomb@plt+0xda14>  // b.any
  410468:	ldr	x0, [sp, #24]
  41046c:	ldr	x0, [x0, #448]
  410470:	and	x0, x0, #0x80000
  410474:	cmp	x0, #0x0
  410478:	b.ne	410804 <wcrtomb@plt+0xda14>  // b.any
  41047c:	ldr	x0, [sp, #24]
  410480:	ldrb	w0, [x0, #1048]
  410484:	eor	w0, w0, #0x1
  410488:	and	w0, w0, #0xff
  41048c:	cmp	w0, #0x0
  410490:	b.eq	410530 <wcrtomb@plt+0xd740>  // b.none
  410494:	add	x0, sp, #0x28
  410498:	bl	40e874 <wcrtomb@plt+0xba84>
  41049c:	str	wzr, [sp, #120]
  4104a0:	b	4104e0 <wcrtomb@plt+0xd6f0>
  4104a4:	bl	402b40 <__ctype_b_loc@plt>
  4104a8:	ldr	x1, [x0]
  4104ac:	ldrsw	x0, [sp, #120]
  4104b0:	lsl	x0, x0, #1
  4104b4:	add	x0, x1, x0
  4104b8:	ldrh	w0, [x0]
  4104bc:	and	w0, w0, #0x2000
  4104c0:	cmp	w0, #0x0
  4104c4:	b.eq	4104d4 <wcrtomb@plt+0xd6e4>  // b.none
  4104c8:	ldr	w0, [sp, #120]
  4104cc:	add	x1, sp, #0x28
  4104d0:	bl	40e7c8 <wcrtomb@plt+0xb9d8>
  4104d4:	ldr	w0, [sp, #120]
  4104d8:	add	w0, w0, #0x1
  4104dc:	str	w0, [sp, #120]
  4104e0:	ldr	w0, [sp, #120]
  4104e4:	cmp	w0, #0xff
  4104e8:	b.le	4104a4 <wcrtomb@plt+0xd6b4>
  4104ec:	ldr	w0, [sp, #112]
  4104f0:	cmp	w0, #0x53
  4104f4:	b.ne	410500 <wcrtomb@plt+0xd710>  // b.any
  4104f8:	add	x0, sp, #0x28
  4104fc:	bl	40e8e4 <wcrtomb@plt+0xbaf4>
  410500:	ldr	x0, [sp, #24]
  410504:	strb	wzr, [x0, #120]
  410508:	add	x0, sp, #0x28
  41050c:	mov	x1, x0
  410510:	ldr	x0, [sp, #24]
  410514:	bl	40ec98 <wcrtomb@plt+0xbea8>
  410518:	add	x1, x0, #0x114
  41051c:	ldr	x0, [sp, #24]
  410520:	str	x1, [x0, #48]
  410524:	ldr	x0, [sp, #24]
  410528:	ldr	x0, [x0, #48]
  41052c:	b	4108f0 <wcrtomb@plt+0xdb00>
  410530:	ldr	w0, [sp, #112]
  410534:	cmp	w0, #0x73
  410538:	cset	w0, eq  // eq = none
  41053c:	and	w0, w0, #0xff
  410540:	sxtw	x1, w0
  410544:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  410548:	add	x0, x0, #0x688
  41054c:	add	x1, x1, x0
  410550:	add	x0, sp, #0x58
  410554:	mov	x2, x1
  410558:	mov	x1, x0
  41055c:	ldr	x0, [sp, #24]
  410560:	bl	40f87c <wcrtomb@plt+0xca8c>
  410564:	ldr	x0, [sp, #24]
  410568:	bl	40f0bc <wcrtomb@plt+0xc2cc>
  41056c:	mov	x1, x0
  410570:	ldr	x0, [sp, #24]
  410574:	str	x1, [x0, #48]
  410578:	add	x0, sp, #0x58
  41057c:	mov	x1, x0
  410580:	ldr	x0, [sp, #24]
  410584:	bl	40f8dc <wcrtomb@plt+0xcaec>
  410588:	ldr	x0, [sp, #24]
  41058c:	strb	wzr, [x0, #120]
  410590:	ldr	x0, [sp, #24]
  410594:	ldr	x0, [x0, #48]
  410598:	b	4108f0 <wcrtomb@plt+0xdb00>
  41059c:	ldrb	w0, [sp, #143]
  4105a0:	eor	w0, w0, #0x1
  4105a4:	and	w0, w0, #0xff
  4105a8:	cmp	w0, #0x0
  4105ac:	b.ne	41080c <wcrtomb@plt+0xda1c>  // b.any
  4105b0:	ldr	x0, [sp, #24]
  4105b4:	ldr	x0, [x0, #448]
  4105b8:	and	x0, x0, #0x80000
  4105bc:	cmp	x0, #0x0
  4105c0:	b.ne	41080c <wcrtomb@plt+0xda1c>  // b.any
  4105c4:	ldr	x0, [sp, #24]
  4105c8:	ldrb	w0, [x0, #1048]
  4105cc:	eor	w0, w0, #0x1
  4105d0:	and	w0, w0, #0xff
  4105d4:	cmp	w0, #0x0
  4105d8:	b.eq	41066c <wcrtomb@plt+0xd87c>  // b.none
  4105dc:	add	x0, sp, #0x28
  4105e0:	bl	40e874 <wcrtomb@plt+0xba84>
  4105e4:	str	wzr, [sp, #116]
  4105e8:	b	41061c <wcrtomb@plt+0xd82c>
  4105ec:	ldr	x1, [sp, #24]
  4105f0:	ldrsw	x0, [sp, #116]
  4105f4:	add	x0, x1, x0
  4105f8:	ldrb	w0, [x0, #460]
  4105fc:	cmp	w0, #0x2
  410600:	b.ne	410610 <wcrtomb@plt+0xd820>  // b.any
  410604:	ldr	w0, [sp, #116]
  410608:	add	x1, sp, #0x28
  41060c:	bl	40e7c8 <wcrtomb@plt+0xb9d8>
  410610:	ldr	w0, [sp, #116]
  410614:	add	w0, w0, #0x1
  410618:	str	w0, [sp, #116]
  41061c:	ldr	w0, [sp, #116]
  410620:	cmp	w0, #0xff
  410624:	b.le	4105ec <wcrtomb@plt+0xd7fc>
  410628:	ldr	w0, [sp, #112]
  41062c:	cmp	w0, #0x57
  410630:	b.ne	41063c <wcrtomb@plt+0xd84c>  // b.any
  410634:	add	x0, sp, #0x28
  410638:	bl	40e8e4 <wcrtomb@plt+0xbaf4>
  41063c:	ldr	x0, [sp, #24]
  410640:	strb	wzr, [x0, #120]
  410644:	add	x0, sp, #0x28
  410648:	mov	x1, x0
  41064c:	ldr	x0, [sp, #24]
  410650:	bl	40ec98 <wcrtomb@plt+0xbea8>
  410654:	add	x1, x0, #0x114
  410658:	ldr	x0, [sp, #24]
  41065c:	str	x1, [x0, #48]
  410660:	ldr	x0, [sp, #24]
  410664:	ldr	x0, [x0, #48]
  410668:	b	4108f0 <wcrtomb@plt+0xdb00>
  41066c:	ldr	w0, [sp, #112]
  410670:	cmp	w0, #0x77
  410674:	cset	w0, eq  // eq = none
  410678:	and	w0, w0, #0xff
  41067c:	sxtw	x1, w0
  410680:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  410684:	add	x0, x0, #0x698
  410688:	add	x1, x1, x0
  41068c:	add	x0, sp, #0x48
  410690:	mov	x2, x1
  410694:	mov	x1, x0
  410698:	ldr	x0, [sp, #24]
  41069c:	bl	40f87c <wcrtomb@plt+0xca8c>
  4106a0:	ldr	x0, [sp, #24]
  4106a4:	bl	40f0bc <wcrtomb@plt+0xc2cc>
  4106a8:	mov	x1, x0
  4106ac:	ldr	x0, [sp, #24]
  4106b0:	str	x1, [x0, #48]
  4106b4:	add	x0, sp, #0x48
  4106b8:	mov	x1, x0
  4106bc:	ldr	x0, [sp, #24]
  4106c0:	bl	40f8dc <wcrtomb@plt+0xcaec>
  4106c4:	ldr	x0, [sp, #24]
  4106c8:	strb	wzr, [x0, #120]
  4106cc:	ldr	x0, [sp, #24]
  4106d0:	ldr	x0, [x0, #48]
  4106d4:	b	4108f0 <wcrtomb@plt+0xdb00>
  4106d8:	ldrb	w0, [sp, #143]
  4106dc:	cmp	w0, #0x0
  4106e0:	b.ne	410814 <wcrtomb@plt+0xda24>  // b.any
  4106e4:	ldr	x0, [sp, #24]
  4106e8:	strb	wzr, [x0, #120]
  4106ec:	ldr	x0, [sp, #24]
  4106f0:	bl	40f0bc <wcrtomb@plt+0xc2cc>
  4106f4:	mov	x1, x0
  4106f8:	ldr	x0, [sp, #24]
  4106fc:	str	x1, [x0, #48]
  410700:	ldr	x0, [sp, #24]
  410704:	ldr	x0, [x0, #48]
  410708:	b	4108f0 <wcrtomb@plt+0xdb00>
  41070c:	nop
  410710:	b	410818 <wcrtomb@plt+0xda28>
  410714:	nop
  410718:	b	410818 <wcrtomb@plt+0xda28>
  41071c:	nop
  410720:	b	410818 <wcrtomb@plt+0xda28>
  410724:	nop
  410728:	b	410818 <wcrtomb@plt+0xda28>
  41072c:	nop
  410730:	b	410818 <wcrtomb@plt+0xda28>
  410734:	nop
  410738:	b	410818 <wcrtomb@plt+0xda28>
  41073c:	nop
  410740:	b	410818 <wcrtomb@plt+0xda28>
  410744:	nop
  410748:	b	410818 <wcrtomb@plt+0xda28>
  41074c:	nop
  410750:	b	410818 <wcrtomb@plt+0xda28>
  410754:	nop
  410758:	b	410818 <wcrtomb@plt+0xda28>
  41075c:	nop
  410760:	b	410818 <wcrtomb@plt+0xda28>
  410764:	nop
  410768:	b	410818 <wcrtomb@plt+0xda28>
  41076c:	nop
  410770:	b	410818 <wcrtomb@plt+0xda28>
  410774:	nop
  410778:	b	410818 <wcrtomb@plt+0xda28>
  41077c:	nop
  410780:	b	410818 <wcrtomb@plt+0xda28>
  410784:	nop
  410788:	b	410818 <wcrtomb@plt+0xda28>
  41078c:	nop
  410790:	b	410818 <wcrtomb@plt+0xda28>
  410794:	nop
  410798:	b	410818 <wcrtomb@plt+0xda28>
  41079c:	nop
  4107a0:	b	410818 <wcrtomb@plt+0xda28>
  4107a4:	nop
  4107a8:	b	410818 <wcrtomb@plt+0xda28>
  4107ac:	nop
  4107b0:	b	410818 <wcrtomb@plt+0xda28>
  4107b4:	nop
  4107b8:	b	410818 <wcrtomb@plt+0xda28>
  4107bc:	nop
  4107c0:	b	410818 <wcrtomb@plt+0xda28>
  4107c4:	nop
  4107c8:	b	410818 <wcrtomb@plt+0xda28>
  4107cc:	nop
  4107d0:	b	410818 <wcrtomb@plt+0xda28>
  4107d4:	nop
  4107d8:	b	410818 <wcrtomb@plt+0xda28>
  4107dc:	nop
  4107e0:	b	410818 <wcrtomb@plt+0xda28>
  4107e4:	nop
  4107e8:	b	410818 <wcrtomb@plt+0xda28>
  4107ec:	nop
  4107f0:	b	410818 <wcrtomb@plt+0xda28>
  4107f4:	nop
  4107f8:	b	410818 <wcrtomb@plt+0xda28>
  4107fc:	nop
  410800:	b	410818 <wcrtomb@plt+0xda28>
  410804:	nop
  410808:	b	410818 <wcrtomb@plt+0xda28>
  41080c:	nop
  410810:	b	410818 <wcrtomb@plt+0xda28>
  410814:	nop
  410818:	ldr	x0, [sp, #24]
  41081c:	strb	wzr, [x0, #120]
  410820:	ldr	x0, [sp, #24]
  410824:	ldrb	w0, [x0, #1048]
  410828:	cmp	w0, #0x0
  41082c:	b.eq	410848 <wcrtomb@plt+0xda58>  // b.none
  410830:	ldr	x0, [sp, #24]
  410834:	mov	x1, #0x109                 	// #265
  410838:	str	x1, [x0, #48]
  41083c:	ldr	x0, [sp, #24]
  410840:	ldr	x0, [x0, #48]
  410844:	b	4108f0 <wcrtomb@plt+0xdb00>
  410848:	ldr	x0, [sp, #24]
  41084c:	ldrb	w0, [x0, #457]
  410850:	cmp	w0, #0x0
  410854:	b.eq	4108bc <wcrtomb@plt+0xdacc>  // b.none
  410858:	bl	402b40 <__ctype_b_loc@plt>
  41085c:	ldr	x1, [x0]
  410860:	ldrsw	x0, [sp, #112]
  410864:	lsl	x0, x0, #1
  410868:	add	x0, x1, x0
  41086c:	ldrh	w0, [x0]
  410870:	and	w0, w0, #0x400
  410874:	cmp	w0, #0x0
  410878:	b.eq	4108bc <wcrtomb@plt+0xdacc>  // b.none
  41087c:	add	x0, sp, #0x28
  410880:	bl	40e874 <wcrtomb@plt+0xba84>
  410884:	add	x0, sp, #0x28
  410888:	mov	x1, x0
  41088c:	ldr	w0, [sp, #112]
  410890:	bl	40eeb8 <wcrtomb@plt+0xc0c8>
  410894:	add	x0, sp, #0x28
  410898:	mov	x1, x0
  41089c:	ldr	x0, [sp, #24]
  4108a0:	bl	40ec98 <wcrtomb@plt+0xbea8>
  4108a4:	add	x1, x0, #0x114
  4108a8:	ldr	x0, [sp, #24]
  4108ac:	str	x1, [x0, #48]
  4108b0:	ldr	x0, [sp, #24]
  4108b4:	ldr	x0, [x0, #48]
  4108b8:	b	4108f0 <wcrtomb@plt+0xdb00>
  4108bc:	ldrsw	x1, [sp, #112]
  4108c0:	ldr	x0, [sp, #24]
  4108c4:	str	x1, [x0, #48]
  4108c8:	ldr	x0, [sp, #24]
  4108cc:	ldr	x0, [x0, #48]
  4108d0:	b	4108f0 <wcrtomb@plt+0xdb00>
  4108d4:	ldr	w0, [sp, #136]
  4108d8:	add	w0, w0, #0x1
  4108dc:	str	w0, [sp, #136]
  4108e0:	ldr	w0, [sp, #136]
  4108e4:	cmp	w0, #0x1
  4108e8:	b.le	40f92c <wcrtomb@plt+0xcb3c>
  4108ec:	bl	402a90 <abort@plt>
  4108f0:	ldp	x29, x30, [sp], #144
  4108f4:	ret
  4108f8:	stp	x29, x30, [sp, #-48]!
  4108fc:	mov	x29, sp
  410900:	str	x0, [sp, #40]
  410904:	str	x1, [sp, #32]
  410908:	strb	w2, [sp, #31]
  41090c:	ldr	x0, [sp, #40]
  410910:	ldr	x1, [x0, #160]
  410914:	ldr	x0, [sp, #40]
  410918:	ldr	x0, [x0, #152]
  41091c:	cmp	x1, x0
  410920:	b.ne	410994 <wcrtomb@plt+0xdba4>  // b.any
  410924:	ldr	x0, [sp, #40]
  410928:	ldr	x5, [x0, #144]
  41092c:	ldr	x0, [sp, #40]
  410930:	add	x0, x0, #0xa0
  410934:	mov	x4, #0x8                   	// #8
  410938:	mov	x3, #0xffffffffffffffff    	// #-1
  41093c:	mov	x2, #0x1                   	// #1
  410940:	mov	x1, x0
  410944:	mov	x0, x5
  410948:	bl	40ea0c <wcrtomb@plt+0xbc1c>
  41094c:	mov	x1, x0
  410950:	ldr	x0, [sp, #40]
  410954:	str	x1, [x0, #144]
  410958:	ldr	x0, [sp, #40]
  41095c:	ldrb	w0, [x0, #1048]
  410960:	cmp	w0, #0x0
  410964:	b.eq	410994 <wcrtomb@plt+0xdba4>  // b.none
  410968:	ldr	x0, [sp, #40]
  41096c:	ldr	x3, [x0, #280]
  410970:	ldr	x0, [sp, #40]
  410974:	ldr	x0, [x0, #160]
  410978:	mov	x2, #0x1                   	// #1
  41097c:	mov	x1, x0
  410980:	mov	x0, x3
  410984:	bl	41b714 <wcrtomb@plt+0x18924>
  410988:	mov	x1, x0
  41098c:	ldr	x0, [sp, #40]
  410990:	str	x1, [x0, #280]
  410994:	ldr	x0, [sp, #40]
  410998:	ldrb	w0, [x0, #1048]
  41099c:	cmp	w0, #0x0
  4109a0:	b.eq	4109c0 <wcrtomb@plt+0xdbd0>  // b.none
  4109a4:	ldr	x0, [sp, #40]
  4109a8:	ldr	x0, [x0, #280]
  4109ac:	ldr	x1, [sp, #40]
  4109b0:	ldr	x1, [x1, #152]
  4109b4:	add	x0, x0, x1
  4109b8:	ldrb	w1, [sp, #31]
  4109bc:	strb	w1, [x0]
  4109c0:	ldr	x0, [sp, #40]
  4109c4:	ldr	x1, [x0, #144]
  4109c8:	ldr	x0, [sp, #40]
  4109cc:	ldr	x0, [x0, #152]
  4109d0:	add	x3, x0, #0x1
  4109d4:	ldr	x2, [sp, #40]
  4109d8:	str	x3, [x2, #152]
  4109dc:	lsl	x0, x0, #3
  4109e0:	add	x0, x1, x0
  4109e4:	ldr	x1, [sp, #32]
  4109e8:	str	x1, [x0]
  4109ec:	ldr	x0, [sp, #32]
  4109f0:	cmp	x0, #0x112
  4109f4:	b.eq	410a60 <wcrtomb@plt+0xdc70>  // b.none
  4109f8:	ldr	x0, [sp, #32]
  4109fc:	cmp	x0, #0x112
  410a00:	b.gt	410a68 <wcrtomb@plt+0xdc78>
  410a04:	ldr	x0, [sp, #32]
  410a08:	cmp	x0, #0x106
  410a0c:	b.gt	410a68 <wcrtomb@plt+0xdc78>
  410a10:	ldr	x0, [sp, #32]
  410a14:	cmp	x0, #0x105
  410a18:	b.ge	410a48 <wcrtomb@plt+0xdc58>  // b.tcont
  410a1c:	ldr	x0, [sp, #32]
  410a20:	cmp	x0, #0x100
  410a24:	b.eq	410a7c <wcrtomb@plt+0xdc8c>  // b.none
  410a28:	ldr	x0, [sp, #32]
  410a2c:	cmp	x0, #0x100
  410a30:	b.lt	410a68 <wcrtomb@plt+0xdc78>  // b.tstop
  410a34:	ldr	x0, [sp, #32]
  410a38:	sub	x0, x0, #0x101
  410a3c:	cmp	x0, #0x2
  410a40:	b.hi	410a68 <wcrtomb@plt+0xdc78>  // b.pmore
  410a44:	b	410a94 <wcrtomb@plt+0xdca4>
  410a48:	ldr	x0, [sp, #40]
  410a4c:	ldr	x0, [x0, #136]
  410a50:	sub	x1, x0, #0x1
  410a54:	ldr	x0, [sp, #40]
  410a58:	str	x1, [x0, #136]
  410a5c:	b	410a94 <wcrtomb@plt+0xdca4>
  410a60:	ldr	x0, [sp, #40]
  410a64:	strb	wzr, [x0, #192]
  410a68:	ldr	x0, [sp, #40]
  410a6c:	ldr	x0, [x0, #176]
  410a70:	add	x1, x0, #0x1
  410a74:	ldr	x0, [sp, #40]
  410a78:	str	x1, [x0, #176]
  410a7c:	ldr	x0, [sp, #40]
  410a80:	ldr	x0, [x0, #136]
  410a84:	add	x1, x0, #0x1
  410a88:	ldr	x0, [sp, #40]
  410a8c:	str	x1, [x0, #136]
  410a90:	nop
  410a94:	ldr	x0, [sp, #40]
  410a98:	ldr	x1, [x0, #136]
  410a9c:	ldr	x0, [sp, #40]
  410aa0:	ldr	x0, [x0, #168]
  410aa4:	cmp	x1, x0
  410aa8:	b.le	410abc <wcrtomb@plt+0xdccc>
  410aac:	ldr	x0, [sp, #40]
  410ab0:	ldr	x1, [x0, #136]
  410ab4:	ldr	x0, [sp, #40]
  410ab8:	str	x1, [x0, #168]
  410abc:	nop
  410ac0:	ldp	x29, x30, [sp], #48
  410ac4:	ret
  410ac8:	stp	x29, x30, [sp, #-48]!
  410acc:	mov	x29, sp
  410ad0:	str	x0, [sp, #24]
  410ad4:	str	x1, [sp, #16]
  410ad8:	ldr	x0, [sp, #24]
  410adc:	ldrb	w0, [x0, #1048]
  410ae0:	cmp	w0, #0x0
  410ae4:	b.eq	410bb0 <wcrtomb@plt+0xddc0>  // b.none
  410ae8:	ldr	x0, [sp, #16]
  410aec:	cmp	x0, #0x113
  410af0:	b.ne	410bb0 <wcrtomb@plt+0xddc0>  // b.any
  410af4:	strb	wzr, [sp, #47]
  410af8:	str	xzr, [sp, #32]
  410afc:	b	410b50 <wcrtomb@plt+0xdd60>
  410b00:	ldr	x0, [sp, #24]
  410b04:	ldr	x1, [x0, #96]
  410b08:	ldr	x0, [sp, #32]
  410b0c:	lsl	x0, x0, #2
  410b10:	add	x0, x1, x0
  410b14:	ldr	w0, [x0]
  410b18:	mov	w1, w0
  410b1c:	ldr	x0, [sp, #24]
  410b20:	bl	410bd4 <wcrtomb@plt+0xdde4>
  410b24:	ldrb	w0, [sp, #47]
  410b28:	cmp	w0, #0x0
  410b2c:	b.eq	410b3c <wcrtomb@plt+0xdd4c>  // b.none
  410b30:	mov	x1, #0x106                 	// #262
  410b34:	ldr	x0, [sp, #24]
  410b38:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410b3c:	mov	w0, #0x1                   	// #1
  410b40:	strb	w0, [sp, #47]
  410b44:	ldr	x0, [sp, #32]
  410b48:	add	x0, x0, #0x1
  410b4c:	str	x0, [sp, #32]
  410b50:	ldr	x0, [sp, #24]
  410b54:	ldr	x0, [x0, #104]
  410b58:	ldr	x1, [sp, #32]
  410b5c:	cmp	x1, x0
  410b60:	b.lt	410b00 <wcrtomb@plt+0xdd10>  // b.tstop
  410b64:	ldr	x0, [sp, #24]
  410b68:	str	xzr, [x0, #104]
  410b6c:	ldr	x0, [sp, #24]
  410b70:	ldr	x0, [x0, #80]
  410b74:	cmn	x0, #0x1
  410b78:	b.eq	410bc4 <wcrtomb@plt+0xddd4>  // b.none
  410b7c:	ldr	x0, [sp, #24]
  410b80:	ldr	x0, [x0, #80]
  410b84:	add	x0, x0, #0x114
  410b88:	mov	x1, x0
  410b8c:	ldr	x0, [sp, #24]
  410b90:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410b94:	ldrb	w0, [sp, #47]
  410b98:	cmp	w0, #0x0
  410b9c:	b.eq	410bc4 <wcrtomb@plt+0xddd4>  // b.none
  410ba0:	mov	x1, #0x106                 	// #262
  410ba4:	ldr	x0, [sp, #24]
  410ba8:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410bac:	b	410bc4 <wcrtomb@plt+0xddd4>
  410bb0:	mov	w2, #0x3                   	// #3
  410bb4:	ldr	x1, [sp, #16]
  410bb8:	ldr	x0, [sp, #24]
  410bbc:	bl	4108f8 <wcrtomb@plt+0xdb08>
  410bc0:	b	410bc8 <wcrtomb@plt+0xddd8>
  410bc4:	nop
  410bc8:	nop
  410bcc:	ldp	x29, x30, [sp], #48
  410bd0:	ret
  410bd4:	stp	x29, x30, [sp, #-80]!
  410bd8:	mov	x29, sp
  410bdc:	str	x0, [sp, #24]
  410be0:	str	w1, [sp, #20]
  410be4:	str	xzr, [sp, #40]
  410be8:	add	x1, sp, #0x28
  410bec:	add	x0, sp, #0x30
  410bf0:	mov	x2, x1
  410bf4:	ldr	w1, [sp, #20]
  410bf8:	bl	402df0 <wcrtomb@plt>
  410bfc:	str	x0, [sp, #64]
  410c00:	ldr	x0, [sp, #64]
  410c04:	cmn	x0, #0x1
  410c08:	b.eq	410c18 <wcrtomb@plt+0xde28>  // b.none
  410c0c:	ldr	x0, [sp, #64]
  410c10:	str	w0, [sp, #76]
  410c14:	b	410c24 <wcrtomb@plt+0xde34>
  410c18:	mov	w0, #0x1                   	// #1
  410c1c:	str	w0, [sp, #76]
  410c20:	strb	wzr, [sp, #48]
  410c24:	ldrb	w0, [sp, #48]
  410c28:	and	x1, x0, #0xff
  410c2c:	ldr	w0, [sp, #76]
  410c30:	cmp	w0, #0x1
  410c34:	b.ne	410c40 <wcrtomb@plt+0xde50>  // b.any
  410c38:	mov	w0, #0x3                   	// #3
  410c3c:	b	410c44 <wcrtomb@plt+0xde54>
  410c40:	mov	w0, #0x1                   	// #1
  410c44:	mov	w2, w0
  410c48:	ldr	x0, [sp, #24]
  410c4c:	bl	4108f8 <wcrtomb@plt+0xdb08>
  410c50:	mov	w0, #0x1                   	// #1
  410c54:	str	w0, [sp, #72]
  410c58:	b	410cb4 <wcrtomb@plt+0xdec4>
  410c5c:	ldrsw	x0, [sp, #72]
  410c60:	add	x1, sp, #0x30
  410c64:	ldrb	w0, [x1, x0]
  410c68:	and	x3, x0, #0xff
  410c6c:	ldr	w0, [sp, #76]
  410c70:	sub	w0, w0, #0x1
  410c74:	ldr	w1, [sp, #72]
  410c78:	cmp	w1, w0
  410c7c:	b.ne	410c88 <wcrtomb@plt+0xde98>  // b.any
  410c80:	mov	w0, #0x2                   	// #2
  410c84:	b	410c8c <wcrtomb@plt+0xde9c>
  410c88:	mov	w0, #0x0                   	// #0
  410c8c:	mov	w2, w0
  410c90:	mov	x1, x3
  410c94:	ldr	x0, [sp, #24]
  410c98:	bl	4108f8 <wcrtomb@plt+0xdb08>
  410c9c:	mov	x1, #0x105                 	// #261
  410ca0:	ldr	x0, [sp, #24]
  410ca4:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410ca8:	ldr	w0, [sp, #72]
  410cac:	add	w0, w0, #0x1
  410cb0:	str	w0, [sp, #72]
  410cb4:	ldr	w1, [sp, #72]
  410cb8:	ldr	w0, [sp, #76]
  410cbc:	cmp	w1, w0
  410cc0:	b.lt	410c5c <wcrtomb@plt+0xde6c>  // b.tstop
  410cc4:	nop
  410cc8:	nop
  410ccc:	ldp	x29, x30, [sp], #80
  410cd0:	ret
  410cd4:	stp	x29, x30, [sp, #-80]!
  410cd8:	mov	x29, sp
  410cdc:	str	x0, [sp, #24]
  410ce0:	ldr	x0, [sp, #24]
  410ce4:	ldr	x0, [x0, #200]
  410ce8:	cmp	x0, #0x0
  410cec:	b.ne	410dcc <wcrtomb@plt+0xdfdc>  // b.any
  410cf0:	add	x0, sp, #0x58
  410cf4:	sub	x0, x0, #0x30
  410cf8:	adrp	x1, 436000 <_obstack_memory_used@@Base+0x19e20>
  410cfc:	add	x1, x1, #0x918
  410d00:	ld1	{v0.16b, v1.16b}, [x1]
  410d04:	st1	{v0.16b, v1.16b}, [x0]
  410d08:	ldr	x0, [sp, #24]
  410d0c:	ldr	x0, [x0, #448]
  410d10:	and	x0, x0, #0x40
  410d14:	cmp	x0, #0x0
  410d18:	b.ne	410d2c <wcrtomb@plt+0xdf3c>  // b.any
  410d1c:	add	x0, sp, #0x28
  410d20:	mov	x1, x0
  410d24:	mov	w0, #0xa                   	// #10
  410d28:	bl	40e81c <wcrtomb@plt+0xba2c>
  410d2c:	ldr	x0, [sp, #24]
  410d30:	ldr	x0, [x0, #448]
  410d34:	and	x0, x0, #0x80
  410d38:	cmp	x0, #0x0
  410d3c:	b.eq	410d50 <wcrtomb@plt+0xdf60>  // b.none
  410d40:	add	x0, sp, #0x28
  410d44:	mov	x1, x0
  410d48:	mov	w0, #0x0                   	// #0
  410d4c:	bl	40e81c <wcrtomb@plt+0xba2c>
  410d50:	add	x0, sp, #0x28
  410d54:	mov	x1, x0
  410d58:	ldr	x0, [sp, #24]
  410d5c:	bl	40ec98 <wcrtomb@plt+0xbea8>
  410d60:	add	x1, x0, #0x114
  410d64:	ldr	x0, [sp, #24]
  410d68:	str	x1, [x0, #200]
  410d6c:	mov	w0, #0x1                   	// #1
  410d70:	str	w0, [sp, #76]
  410d74:	b	410dc0 <wcrtomb@plt+0xdfd0>
  410d78:	ldrsw	x0, [sp, #76]
  410d7c:	lsl	x1, x0, #5
  410d80:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  410d84:	add	x0, x0, #0x918
  410d88:	add	x0, x1, x0
  410d8c:	mov	x1, x0
  410d90:	ldr	x0, [sp, #24]
  410d94:	bl	40ec98 <wcrtomb@plt+0xbea8>
  410d98:	add	x1, x0, #0x114
  410d9c:	ldr	x2, [sp, #24]
  410da0:	ldrsw	x0, [sp, #76]
  410da4:	add	x0, x0, #0x18
  410da8:	lsl	x0, x0, #3
  410dac:	add	x0, x2, x0
  410db0:	str	x1, [x0, #8]
  410db4:	ldr	w0, [sp, #76]
  410db8:	add	w0, w0, #0x1
  410dbc:	str	w0, [sp, #76]
  410dc0:	ldr	w0, [sp, #76]
  410dc4:	cmp	w0, #0x8
  410dc8:	b.ls	410d78 <wcrtomb@plt+0xdf88>  // b.plast
  410dcc:	ldr	x0, [sp, #24]
  410dd0:	ldr	x0, [x0, #200]
  410dd4:	mov	x1, x0
  410dd8:	ldr	x0, [sp, #24]
  410ddc:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410de0:	ldr	x0, [sp, #24]
  410de4:	ldr	x0, [x0, #208]
  410de8:	mov	x1, x0
  410dec:	ldr	x0, [sp, #24]
  410df0:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410df4:	mov	x1, #0xe0                  	// #224
  410df8:	ldr	x0, [sp, #24]
  410dfc:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410e00:	ldr	x0, [sp, #24]
  410e04:	ldr	x0, [x0, #224]
  410e08:	mov	x1, x0
  410e0c:	ldr	x0, [sp, #24]
  410e10:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410e14:	mov	x1, #0x105                 	// #261
  410e18:	ldr	x0, [sp, #24]
  410e1c:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410e20:	mov	x1, #0x106                 	// #262
  410e24:	ldr	x0, [sp, #24]
  410e28:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410e2c:	mov	x1, #0xed                  	// #237
  410e30:	ldr	x0, [sp, #24]
  410e34:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410e38:	ldr	x0, [sp, #24]
  410e3c:	ldr	x0, [x0, #240]
  410e40:	mov	x1, x0
  410e44:	ldr	x0, [sp, #24]
  410e48:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410e4c:	mov	x1, #0x105                 	// #261
  410e50:	ldr	x0, [sp, #24]
  410e54:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410e58:	mov	x1, #0x106                 	// #262
  410e5c:	ldr	x0, [sp, #24]
  410e60:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410e64:	ldr	x0, [sp, #24]
  410e68:	ldr	x0, [x0, #232]
  410e6c:	mov	x1, x0
  410e70:	ldr	x0, [sp, #24]
  410e74:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410e78:	mov	x1, #0xf0                  	// #240
  410e7c:	ldr	x0, [sp, #24]
  410e80:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410e84:	ldr	x0, [sp, #24]
  410e88:	ldr	x0, [x0, #248]
  410e8c:	mov	x1, x0
  410e90:	ldr	x0, [sp, #24]
  410e94:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410e98:	mov	x1, #0x105                 	// #261
  410e9c:	ldr	x0, [sp, #24]
  410ea0:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410ea4:	mov	x1, #0x106                 	// #262
  410ea8:	ldr	x0, [sp, #24]
  410eac:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410eb0:	mov	x1, #0xf4                  	// #244
  410eb4:	ldr	x0, [sp, #24]
  410eb8:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410ebc:	ldr	x0, [sp, #24]
  410ec0:	ldr	x0, [x0, #264]
  410ec4:	mov	x1, x0
  410ec8:	ldr	x0, [sp, #24]
  410ecc:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410ed0:	mov	x1, #0x105                 	// #261
  410ed4:	ldr	x0, [sp, #24]
  410ed8:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410edc:	mov	x1, #0x106                 	// #262
  410ee0:	ldr	x0, [sp, #24]
  410ee4:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410ee8:	ldr	x0, [sp, #24]
  410eec:	ldr	x0, [x0, #256]
  410ef0:	mov	x1, x0
  410ef4:	ldr	x0, [sp, #24]
  410ef8:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410efc:	str	wzr, [sp, #72]
  410f00:	b	410f3c <wcrtomb@plt+0xe14c>
  410f04:	ldr	x0, [sp, #24]
  410f08:	ldr	x0, [x0, #216]
  410f0c:	mov	x1, x0
  410f10:	ldr	x0, [sp, #24]
  410f14:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410f18:	mov	x1, #0x105                 	// #261
  410f1c:	ldr	x0, [sp, #24]
  410f20:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410f24:	mov	x1, #0x106                 	// #262
  410f28:	ldr	x0, [sp, #24]
  410f2c:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  410f30:	ldr	w0, [sp, #72]
  410f34:	add	w0, w0, #0x1
  410f38:	str	w0, [sp, #72]
  410f3c:	ldr	w0, [sp, #72]
  410f40:	cmp	w0, #0x2
  410f44:	b.le	410f04 <wcrtomb@plt+0xe114>
  410f48:	nop
  410f4c:	nop
  410f50:	ldp	x29, x30, [sp], #80
  410f54:	ret
  410f58:	stp	x29, x30, [sp, #-176]!
  410f5c:	mov	x29, sp
  410f60:	str	x0, [sp, #24]
  410f64:	ldr	x0, [sp, #24]
  410f68:	ldr	x0, [x0, #128]
  410f6c:	cmp	x0, #0x0
  410f70:	b.lt	410f84 <wcrtomb@plt+0xe194>  // b.tstop
  410f74:	ldr	x0, [sp, #24]
  410f78:	ldr	x0, [x0, #128]
  410f7c:	cmp	x0, #0xff
  410f80:	b.le	411034 <wcrtomb@plt+0xe244>
  410f84:	ldr	x0, [sp, #24]
  410f88:	ldr	x0, [x0, #128]
  410f8c:	cmp	x0, #0x113
  410f90:	b.gt	411034 <wcrtomb@plt+0xe244>
  410f94:	ldr	x0, [sp, #24]
  410f98:	ldr	x0, [x0, #128]
  410f9c:	cmp	x0, #0x10b
  410fa0:	b.eq	411034 <wcrtomb@plt+0xe244>  // b.none
  410fa4:	ldr	x0, [sp, #24]
  410fa8:	ldr	x0, [x0, #128]
  410fac:	cmp	x0, #0x112
  410fb0:	b.eq	411034 <wcrtomb@plt+0xe244>  // b.none
  410fb4:	ldr	x0, [sp, #24]
  410fb8:	ldr	x0, [x0, #128]
  410fbc:	cmp	x0, #0x10c
  410fc0:	b.eq	411034 <wcrtomb@plt+0xe244>  // b.none
  410fc4:	ldr	x0, [sp, #24]
  410fc8:	ldr	x0, [x0, #128]
  410fcc:	cmp	x0, #0x10d
  410fd0:	b.eq	411034 <wcrtomb@plt+0xe244>  // b.none
  410fd4:	ldr	x0, [sp, #24]
  410fd8:	ldr	x0, [x0, #128]
  410fdc:	cmp	x0, #0x10e
  410fe0:	b.eq	411034 <wcrtomb@plt+0xe244>  // b.none
  410fe4:	ldr	x0, [sp, #24]
  410fe8:	ldr	x0, [x0, #128]
  410fec:	cmp	x0, #0x10f
  410ff0:	b.eq	411034 <wcrtomb@plt+0xe244>  // b.none
  410ff4:	ldr	x0, [sp, #24]
  410ff8:	ldr	x0, [x0, #128]
  410ffc:	cmp	x0, #0x110
  411000:	b.eq	411034 <wcrtomb@plt+0xe244>  // b.none
  411004:	ldr	x0, [sp, #24]
  411008:	ldr	x0, [x0, #128]
  41100c:	cmp	x0, #0x111
  411010:	b.eq	411034 <wcrtomb@plt+0xe244>  // b.none
  411014:	ldr	x0, [sp, #24]
  411018:	ldr	x0, [x0, #128]
  41101c:	cmp	x0, #0x10a
  411020:	b.eq	411034 <wcrtomb@plt+0xe244>  // b.none
  411024:	ldr	x0, [sp, #24]
  411028:	ldr	x0, [x0, #128]
  41102c:	cmp	x0, #0x113
  411030:	b.ne	41108c <wcrtomb@plt+0xe29c>  // b.any
  411034:	ldr	x0, [sp, #24]
  411038:	ldr	x0, [x0, #128]
  41103c:	cmp	x0, #0x10a
  411040:	b.ne	411060 <wcrtomb@plt+0xe270>  // b.any
  411044:	ldr	x0, [sp, #24]
  411048:	ldrb	w0, [x0, #1050]
  41104c:	cmp	w0, #0x0
  411050:	b.eq	411060 <wcrtomb@plt+0xe270>  // b.none
  411054:	ldr	x0, [sp, #24]
  411058:	bl	410cd4 <wcrtomb@plt+0xdee4>
  41105c:	b	411074 <wcrtomb@plt+0xe284>
  411060:	ldr	x0, [sp, #24]
  411064:	ldr	x0, [x0, #128]
  411068:	mov	x1, x0
  41106c:	ldr	x0, [sp, #24]
  411070:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  411074:	ldr	x0, [sp, #24]
  411078:	bl	40f914 <wcrtomb@plt+0xcb24>
  41107c:	mov	x1, x0
  411080:	ldr	x0, [sp, #24]
  411084:	str	x1, [x0, #128]
  411088:	b	4111c8 <wcrtomb@plt+0xe3d8>
  41108c:	ldr	x0, [sp, #24]
  411090:	ldr	x0, [x0, #128]
  411094:	cmp	x0, #0x109
  411098:	b.ne	411158 <wcrtomb@plt+0xe368>  // b.any
  41109c:	ldr	x0, [sp, #24]
  4110a0:	ldr	w0, [x0, #72]
  4110a4:	cmn	w0, #0x1
  4110a8:	b.ne	4110bc <wcrtomb@plt+0xe2cc>  // b.any
  4110ac:	mov	x1, #0x112                 	// #274
  4110b0:	ldr	x0, [sp, #24]
  4110b4:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  4110b8:	b	411140 <wcrtomb@plt+0xe350>
  4110bc:	ldr	x0, [sp, #24]
  4110c0:	ldr	w0, [x0, #72]
  4110c4:	mov	w1, w0
  4110c8:	ldr	x0, [sp, #24]
  4110cc:	bl	410bd4 <wcrtomb@plt+0xdde4>
  4110d0:	ldr	x0, [sp, #24]
  4110d4:	ldrb	w0, [x0, #457]
  4110d8:	cmp	w0, #0x0
  4110dc:	b.eq	411140 <wcrtomb@plt+0xe350>  // b.none
  4110e0:	ldr	x0, [sp, #24]
  4110e4:	ldr	w0, [x0, #72]
  4110e8:	add	x1, sp, #0x28
  4110ec:	bl	4185e8 <wcrtomb@plt+0x157f8>
  4110f0:	str	w0, [sp, #168]
  4110f4:	str	wzr, [sp, #172]
  4110f8:	b	411130 <wcrtomb@plt+0xe340>
  4110fc:	ldrsw	x0, [sp, #172]
  411100:	lsl	x0, x0, #2
  411104:	add	x1, sp, #0x28
  411108:	ldr	w0, [x1, x0]
  41110c:	mov	w1, w0
  411110:	ldr	x0, [sp, #24]
  411114:	bl	410bd4 <wcrtomb@plt+0xdde4>
  411118:	mov	x1, #0x106                 	// #262
  41111c:	ldr	x0, [sp, #24]
  411120:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  411124:	ldr	w0, [sp, #172]
  411128:	add	w0, w0, #0x1
  41112c:	str	w0, [sp, #172]
  411130:	ldr	w1, [sp, #172]
  411134:	ldr	w0, [sp, #168]
  411138:	cmp	w1, w0
  41113c:	b.lt	4110fc <wcrtomb@plt+0xe30c>  // b.tstop
  411140:	ldr	x0, [sp, #24]
  411144:	bl	40f914 <wcrtomb@plt+0xcb24>
  411148:	mov	x1, x0
  41114c:	ldr	x0, [sp, #24]
  411150:	str	x1, [x0, #128]
  411154:	b	4111c8 <wcrtomb@plt+0xe3d8>
  411158:	ldr	x0, [sp, #24]
  41115c:	ldr	x0, [x0, #128]
  411160:	cmp	x0, #0x107
  411164:	b.ne	4111bc <wcrtomb@plt+0xe3cc>  // b.any
  411168:	ldr	x0, [sp, #24]
  41116c:	bl	40f914 <wcrtomb@plt+0xcb24>
  411170:	mov	x1, x0
  411174:	ldr	x0, [sp, #24]
  411178:	str	x1, [x0, #128]
  41117c:	ldr	x0, [sp, #24]
  411180:	bl	411624 <wcrtomb@plt+0xe834>
  411184:	ldr	x0, [sp, #24]
  411188:	ldr	x0, [x0, #128]
  41118c:	cmp	x0, #0x108
  411190:	b.eq	4111a4 <wcrtomb@plt+0xe3b4>  // b.none
  411194:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  411198:	add	x0, x0, #0x878
  41119c:	bl	402d80 <gettext@plt>
  4111a0:	bl	40bc58 <wcrtomb@plt+0x8e68>
  4111a4:	ldr	x0, [sp, #24]
  4111a8:	bl	40f914 <wcrtomb@plt+0xcb24>
  4111ac:	mov	x1, x0
  4111b0:	ldr	x0, [sp, #24]
  4111b4:	str	x1, [x0, #128]
  4111b8:	b	4111c8 <wcrtomb@plt+0xe3d8>
  4111bc:	mov	x1, #0x100                 	// #256
  4111c0:	ldr	x0, [sp, #24]
  4111c4:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  4111c8:	nop
  4111cc:	ldp	x29, x30, [sp], #176
  4111d0:	ret
  4111d4:	stp	x29, x30, [sp, #-64]!
  4111d8:	mov	x29, sp
  4111dc:	str	x19, [sp, #16]
  4111e0:	str	x0, [sp, #40]
  4111e4:	str	x1, [sp, #32]
  4111e8:	ldr	x0, [sp, #40]
  4111ec:	ldr	x1, [x0, #144]
  4111f0:	ldr	x0, [sp, #32]
  4111f4:	lsl	x0, x0, #3
  4111f8:	sub	x0, x0, #0x8
  4111fc:	add	x0, x1, x0
  411200:	ldr	x0, [x0]
  411204:	cmp	x0, #0x103
  411208:	b.gt	411218 <wcrtomb@plt+0xe428>
  41120c:	cmp	x0, #0x101
  411210:	b.ge	41122c <wcrtomb@plt+0xe43c>  // b.tcont
  411214:	b	411224 <wcrtomb@plt+0xe434>
  411218:	sub	x0, x0, #0x105
  41121c:	cmp	x0, #0x1
  411220:	b.ls	411248 <wcrtomb@plt+0xe458>  // b.plast
  411224:	mov	x0, #0x1                   	// #1
  411228:	b	411288 <wcrtomb@plt+0xe498>
  41122c:	ldr	x0, [sp, #32]
  411230:	sub	x0, x0, #0x1
  411234:	mov	x1, x0
  411238:	ldr	x0, [sp, #40]
  41123c:	bl	4111d4 <wcrtomb@plt+0xe3e4>
  411240:	add	x0, x0, #0x1
  411244:	b	411288 <wcrtomb@plt+0xe498>
  411248:	ldr	x0, [sp, #32]
  41124c:	sub	x0, x0, #0x1
  411250:	mov	x1, x0
  411254:	ldr	x0, [sp, #40]
  411258:	bl	4111d4 <wcrtomb@plt+0xe3e4>
  41125c:	str	x0, [sp, #56]
  411260:	ldr	x0, [sp, #56]
  411264:	add	x19, x0, #0x1
  411268:	ldr	x0, [sp, #32]
  41126c:	sub	x1, x0, #0x1
  411270:	ldr	x0, [sp, #56]
  411274:	sub	x0, x1, x0
  411278:	mov	x1, x0
  41127c:	ldr	x0, [sp, #40]
  411280:	bl	4111d4 <wcrtomb@plt+0xe3e4>
  411284:	add	x0, x19, x0
  411288:	ldr	x19, [sp, #16]
  41128c:	ldp	x29, x30, [sp], #64
  411290:	ret
  411294:	stp	x29, x30, [sp, #-64]!
  411298:	mov	x29, sp
  41129c:	str	x0, [sp, #40]
  4112a0:	str	x1, [sp, #32]
  4112a4:	str	x2, [sp, #24]
  4112a8:	ldr	x0, [sp, #40]
  4112ac:	ldrb	w0, [x0, #1048]
  4112b0:	cmp	w0, #0x0
  4112b4:	b.eq	41132c <wcrtomb@plt+0xe53c>  // b.none
  4112b8:	str	xzr, [sp, #56]
  4112bc:	b	411318 <wcrtomb@plt+0xe528>
  4112c0:	ldr	x0, [sp, #40]
  4112c4:	ldr	x1, [x0, #144]
  4112c8:	ldr	x2, [sp, #32]
  4112cc:	ldr	x0, [sp, #56]
  4112d0:	add	x0, x2, x0
  4112d4:	lsl	x0, x0, #3
  4112d8:	add	x0, x1, x0
  4112dc:	ldr	x3, [x0]
  4112e0:	ldr	x0, [sp, #40]
  4112e4:	ldr	x0, [x0, #280]
  4112e8:	ldr	x2, [sp, #32]
  4112ec:	ldr	x1, [sp, #56]
  4112f0:	add	x1, x2, x1
  4112f4:	add	x0, x0, x1
  4112f8:	ldrb	w0, [x0]
  4112fc:	mov	w2, w0
  411300:	mov	x1, x3
  411304:	ldr	x0, [sp, #40]
  411308:	bl	4108f8 <wcrtomb@plt+0xdb08>
  41130c:	ldr	x0, [sp, #56]
  411310:	add	x0, x0, #0x1
  411314:	str	x0, [sp, #56]
  411318:	ldr	x1, [sp, #56]
  41131c:	ldr	x0, [sp, #24]
  411320:	cmp	x1, x0
  411324:	b.lt	4112c0 <wcrtomb@plt+0xe4d0>  // b.tstop
  411328:	b	411380 <wcrtomb@plt+0xe590>
  41132c:	str	xzr, [sp, #48]
  411330:	b	411370 <wcrtomb@plt+0xe580>
  411334:	ldr	x0, [sp, #40]
  411338:	ldr	x1, [x0, #144]
  41133c:	ldr	x2, [sp, #32]
  411340:	ldr	x0, [sp, #48]
  411344:	add	x0, x2, x0
  411348:	lsl	x0, x0, #3
  41134c:	add	x0, x1, x0
  411350:	ldr	x0, [x0]
  411354:	mov	w2, #0x3                   	// #3
  411358:	mov	x1, x0
  41135c:	ldr	x0, [sp, #40]
  411360:	bl	4108f8 <wcrtomb@plt+0xdb08>
  411364:	ldr	x0, [sp, #48]
  411368:	add	x0, x0, #0x1
  41136c:	str	x0, [sp, #48]
  411370:	ldr	x1, [sp, #48]
  411374:	ldr	x0, [sp, #24]
  411378:	cmp	x1, x0
  41137c:	b.lt	411334 <wcrtomb@plt+0xe544>  // b.tstop
  411380:	nop
  411384:	ldp	x29, x30, [sp], #64
  411388:	ret
  41138c:	stp	x29, x30, [sp, #-80]!
  411390:	mov	x29, sp
  411394:	str	x19, [sp, #16]
  411398:	str	x0, [sp, #40]
  41139c:	ldr	x0, [sp, #40]
  4113a0:	bl	410f58 <wcrtomb@plt+0xe168>
  4113a4:	b	411568 <wcrtomb@plt+0xe778>
  4113a8:	ldr	x0, [sp, #40]
  4113ac:	ldr	x0, [x0, #128]
  4113b0:	cmp	x0, #0x104
  4113b4:	b.ne	4114e8 <wcrtomb@plt+0xe6f8>  // b.any
  4113b8:	ldr	x0, [sp, #40]
  4113bc:	ldr	w0, [x0, #64]
  4113c0:	cmp	w0, #0x0
  4113c4:	b.ne	4113d8 <wcrtomb@plt+0xe5e8>  // b.any
  4113c8:	ldr	x0, [sp, #40]
  4113cc:	ldr	w0, [x0, #68]
  4113d0:	cmp	w0, #0x0
  4113d4:	b.eq	4114e8 <wcrtomb@plt+0xe6f8>  // b.none
  4113d8:	ldr	x0, [sp, #40]
  4113dc:	ldr	x0, [x0, #152]
  4113e0:	mov	x1, x0
  4113e4:	ldr	x0, [sp, #40]
  4113e8:	bl	4111d4 <wcrtomb@plt+0xe3e4>
  4113ec:	str	x0, [sp, #64]
  4113f0:	ldr	x0, [sp, #40]
  4113f4:	ldr	x1, [x0, #152]
  4113f8:	ldr	x0, [sp, #64]
  4113fc:	sub	x0, x1, x0
  411400:	str	x0, [sp, #56]
  411404:	ldr	x0, [sp, #40]
  411408:	ldr	w0, [x0, #68]
  41140c:	cmp	w0, #0x0
  411410:	b.ge	411420 <wcrtomb@plt+0xe630>  // b.tcont
  411414:	mov	x1, #0x103                 	// #259
  411418:	ldr	x0, [sp, #40]
  41141c:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  411420:	ldr	x0, [sp, #40]
  411424:	ldr	w0, [x0, #64]
  411428:	cmp	w0, #0x0
  41142c:	b.ne	41143c <wcrtomb@plt+0xe64c>  // b.any
  411430:	mov	x1, #0x101                 	// #257
  411434:	ldr	x0, [sp, #40]
  411438:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  41143c:	mov	w0, #0x1                   	// #1
  411440:	str	w0, [sp, #76]
  411444:	b	411470 <wcrtomb@plt+0xe680>
  411448:	ldr	x2, [sp, #64]
  41144c:	ldr	x1, [sp, #56]
  411450:	ldr	x0, [sp, #40]
  411454:	bl	411294 <wcrtomb@plt+0xe4a4>
  411458:	mov	x1, #0x105                 	// #261
  41145c:	ldr	x0, [sp, #40]
  411460:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  411464:	ldr	w0, [sp, #76]
  411468:	add	w0, w0, #0x1
  41146c:	str	w0, [sp, #76]
  411470:	ldr	x0, [sp, #40]
  411474:	ldr	w0, [x0, #64]
  411478:	ldr	w1, [sp, #76]
  41147c:	cmp	w1, w0
  411480:	b.lt	411448 <wcrtomb@plt+0xe658>  // b.tstop
  411484:	b	4114bc <wcrtomb@plt+0xe6cc>
  411488:	ldr	x2, [sp, #64]
  41148c:	ldr	x1, [sp, #56]
  411490:	ldr	x0, [sp, #40]
  411494:	bl	411294 <wcrtomb@plt+0xe4a4>
  411498:	mov	x1, #0x101                 	// #257
  41149c:	ldr	x0, [sp, #40]
  4114a0:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  4114a4:	mov	x1, #0x105                 	// #261
  4114a8:	ldr	x0, [sp, #40]
  4114ac:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  4114b0:	ldr	w0, [sp, #76]
  4114b4:	add	w0, w0, #0x1
  4114b8:	str	w0, [sp, #76]
  4114bc:	ldr	x0, [sp, #40]
  4114c0:	ldr	w0, [x0, #68]
  4114c4:	ldr	w1, [sp, #76]
  4114c8:	cmp	w1, w0
  4114cc:	b.lt	411488 <wcrtomb@plt+0xe698>  // b.tstop
  4114d0:	ldr	x0, [sp, #40]
  4114d4:	bl	40f914 <wcrtomb@plt+0xcb24>
  4114d8:	mov	x1, x0
  4114dc:	ldr	x0, [sp, #40]
  4114e0:	str	x1, [x0, #128]
  4114e4:	b	411568 <wcrtomb@plt+0xe778>
  4114e8:	ldr	x0, [sp, #40]
  4114ec:	ldr	x0, [x0, #128]
  4114f0:	cmp	x0, #0x104
  4114f4:	b.ne	411540 <wcrtomb@plt+0xe750>  // b.any
  4114f8:	ldr	x0, [sp, #40]
  4114fc:	ldr	x19, [x0, #152]
  411500:	ldr	x0, [sp, #40]
  411504:	ldr	x0, [x0, #152]
  411508:	mov	x1, x0
  41150c:	ldr	x0, [sp, #40]
  411510:	bl	4111d4 <wcrtomb@plt+0xe3e4>
  411514:	sub	x1, x19, x0
  411518:	ldr	x0, [sp, #40]
  41151c:	str	x1, [x0, #152]
  411520:	ldr	x0, [sp, #40]
  411524:	bl	40f914 <wcrtomb@plt+0xcb24>
  411528:	mov	x1, x0
  41152c:	ldr	x0, [sp, #40]
  411530:	str	x1, [x0, #128]
  411534:	ldr	x0, [sp, #40]
  411538:	bl	41138c <wcrtomb@plt+0xe59c>
  41153c:	b	411568 <wcrtomb@plt+0xe778>
  411540:	ldr	x0, [sp, #40]
  411544:	ldr	x0, [x0, #128]
  411548:	mov	x1, x0
  41154c:	ldr	x0, [sp, #40]
  411550:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  411554:	ldr	x0, [sp, #40]
  411558:	bl	40f914 <wcrtomb@plt+0xcb24>
  41155c:	mov	x1, x0
  411560:	ldr	x0, [sp, #40]
  411564:	str	x1, [x0, #128]
  411568:	ldr	x0, [sp, #40]
  41156c:	ldr	x0, [x0, #128]
  411570:	cmp	x0, #0x101
  411574:	b.eq	4113a8 <wcrtomb@plt+0xe5b8>  // b.none
  411578:	ldr	x0, [sp, #40]
  41157c:	ldr	x0, [x0, #128]
  411580:	cmp	x0, #0x102
  411584:	b.eq	4113a8 <wcrtomb@plt+0xe5b8>  // b.none
  411588:	ldr	x0, [sp, #40]
  41158c:	ldr	x0, [x0, #128]
  411590:	cmp	x0, #0x103
  411594:	b.eq	4113a8 <wcrtomb@plt+0xe5b8>  // b.none
  411598:	ldr	x0, [sp, #40]
  41159c:	ldr	x0, [x0, #128]
  4115a0:	cmp	x0, #0x104
  4115a4:	b.eq	4113a8 <wcrtomb@plt+0xe5b8>  // b.none
  4115a8:	nop
  4115ac:	nop
  4115b0:	ldr	x19, [sp, #16]
  4115b4:	ldp	x29, x30, [sp], #80
  4115b8:	ret
  4115bc:	stp	x29, x30, [sp, #-32]!
  4115c0:	mov	x29, sp
  4115c4:	str	x0, [sp, #24]
  4115c8:	ldr	x0, [sp, #24]
  4115cc:	bl	41138c <wcrtomb@plt+0xe59c>
  4115d0:	b	4115e8 <wcrtomb@plt+0xe7f8>
  4115d4:	ldr	x0, [sp, #24]
  4115d8:	bl	41138c <wcrtomb@plt+0xe59c>
  4115dc:	mov	x1, #0x105                 	// #261
  4115e0:	ldr	x0, [sp, #24]
  4115e4:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  4115e8:	ldr	x0, [sp, #24]
  4115ec:	ldr	x0, [x0, #128]
  4115f0:	cmp	x0, #0x108
  4115f4:	b.eq	411618 <wcrtomb@plt+0xe828>  // b.none
  4115f8:	ldr	x0, [sp, #24]
  4115fc:	ldr	x0, [x0, #128]
  411600:	cmp	x0, #0x106
  411604:	b.eq	411618 <wcrtomb@plt+0xe828>  // b.none
  411608:	ldr	x0, [sp, #24]
  41160c:	ldr	x0, [x0, #128]
  411610:	cmp	x0, #0x0
  411614:	b.ge	4115d4 <wcrtomb@plt+0xe7e4>  // b.tcont
  411618:	nop
  41161c:	ldp	x29, x30, [sp], #32
  411620:	ret
  411624:	stp	x29, x30, [sp, #-32]!
  411628:	mov	x29, sp
  41162c:	str	x0, [sp, #24]
  411630:	ldr	x0, [sp, #24]
  411634:	bl	4115bc <wcrtomb@plt+0xe7cc>
  411638:	b	411664 <wcrtomb@plt+0xe874>
  41163c:	ldr	x0, [sp, #24]
  411640:	bl	40f914 <wcrtomb@plt+0xcb24>
  411644:	mov	x1, x0
  411648:	ldr	x0, [sp, #24]
  41164c:	str	x1, [x0, #128]
  411650:	ldr	x0, [sp, #24]
  411654:	bl	4115bc <wcrtomb@plt+0xe7cc>
  411658:	mov	x1, #0x106                 	// #262
  41165c:	ldr	x0, [sp, #24]
  411660:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  411664:	ldr	x0, [sp, #24]
  411668:	ldr	x0, [x0, #128]
  41166c:	cmp	x0, #0x106
  411670:	b.eq	41163c <wcrtomb@plt+0xe84c>  // b.none
  411674:	nop
  411678:	nop
  41167c:	ldp	x29, x30, [sp], #32
  411680:	ret
  411684:	stp	x29, x30, [sp, #-48]!
  411688:	mov	x29, sp
  41168c:	str	x0, [sp, #40]
  411690:	str	x1, [sp, #32]
  411694:	str	x2, [sp, #24]
  411698:	ldr	x0, [sp, #24]
  41169c:	ldr	x1, [sp, #40]
  4116a0:	str	x1, [x0, #32]
  4116a4:	ldr	x0, [sp, #24]
  4116a8:	ldr	x1, [sp, #32]
  4116ac:	str	x1, [x0, #40]
  4116b0:	ldr	x0, [sp, #24]
  4116b4:	mov	x1, #0xffffffffffffffff    	// #-1
  4116b8:	str	x1, [x0, #48]
  4116bc:	ldr	x0, [sp, #24]
  4116c0:	mov	w1, #0x1                   	// #1
  4116c4:	strb	w1, [x0, #120]
  4116c8:	ldr	x0, [sp, #24]
  4116cc:	ldrb	w0, [x0, #456]
  4116d0:	eor	w0, w0, #0x1
  4116d4:	and	w0, w0, #0xff
  4116d8:	cmp	w0, #0x0
  4116dc:	b.eq	4116f0 <wcrtomb@plt+0xe900>  // b.none
  4116e0:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  4116e4:	add	x0, x0, #0x888
  4116e8:	bl	402d80 <gettext@plt>
  4116ec:	bl	40bc58 <wcrtomb@plt+0x8e68>
  4116f0:	ldr	x0, [sp, #24]
  4116f4:	ldr	x0, [x0, #184]
  4116f8:	cmp	x0, #0x0
  4116fc:	b.ne	41170c <wcrtomb@plt+0xe91c>  // b.any
  411700:	mov	x1, #0x10b                 	// #267
  411704:	ldr	x0, [sp, #24]
  411708:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  41170c:	ldr	x0, [sp, #24]
  411710:	bl	40f914 <wcrtomb@plt+0xcb24>
  411714:	mov	x1, x0
  411718:	ldr	x0, [sp, #24]
  41171c:	str	x1, [x0, #128]
  411720:	ldr	x0, [sp, #24]
  411724:	ldr	x1, [x0, #168]
  411728:	ldr	x0, [sp, #24]
  41172c:	str	x1, [x0, #136]
  411730:	ldr	x0, [sp, #24]
  411734:	bl	411624 <wcrtomb@plt+0xe834>
  411738:	ldr	x0, [sp, #24]
  41173c:	ldr	x0, [x0, #128]
  411740:	cmn	x0, #0x1
  411744:	b.eq	411758 <wcrtomb@plt+0xe968>  // b.none
  411748:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  41174c:	add	x0, x0, #0x8a0
  411750:	bl	402d80 <gettext@plt>
  411754:	bl	40bc58 <wcrtomb@plt+0x8e68>
  411758:	ldr	x0, [sp, #24]
  41175c:	ldr	x0, [x0, #184]
  411760:	mvn	x0, x0
  411764:	mov	x1, x0
  411768:	ldr	x0, [sp, #24]
  41176c:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  411770:	mov	x1, #0x105                 	// #261
  411774:	ldr	x0, [sp, #24]
  411778:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  41177c:	ldr	x0, [sp, #24]
  411780:	ldr	x0, [x0, #184]
  411784:	cmp	x0, #0x0
  411788:	b.eq	411798 <wcrtomb@plt+0xe9a8>  // b.none
  41178c:	mov	x1, #0x106                 	// #262
  411790:	ldr	x0, [sp, #24]
  411794:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  411798:	ldr	x0, [sp, #24]
  41179c:	ldr	x0, [x0, #184]
  4117a0:	add	x1, x0, #0x1
  4117a4:	ldr	x0, [sp, #24]
  4117a8:	str	x1, [x0, #184]
  4117ac:	nop
  4117b0:	ldp	x29, x30, [sp], #48
  4117b4:	ret
  4117b8:	stp	x29, x30, [sp, #-32]!
  4117bc:	mov	x29, sp
  4117c0:	str	x0, [sp, #24]
  4117c4:	str	x1, [sp, #16]
  4117c8:	ldr	x0, [sp, #16]
  4117cc:	ldr	x1, [x0, #16]
  4117d0:	ldr	x0, [sp, #24]
  4117d4:	ldr	x0, [x0, #8]
  4117d8:	cmp	x1, x0
  4117dc:	b.ge	41182c <wcrtomb@plt+0xea3c>  // b.tcont
  4117e0:	ldr	x0, [sp, #16]
  4117e4:	ldr	x0, [x0]
  4117e8:	bl	402b60 <free@plt>
  4117ec:	ldr	x0, [sp, #16]
  4117f0:	add	x5, x0, #0x10
  4117f4:	ldr	x0, [sp, #24]
  4117f8:	ldr	x1, [x0, #8]
  4117fc:	ldr	x0, [sp, #16]
  411800:	ldr	x0, [x0, #16]
  411804:	sub	x0, x1, x0
  411808:	mov	x4, #0x10                  	// #16
  41180c:	mov	x3, #0xffffffffffffffff    	// #-1
  411810:	mov	x2, x0
  411814:	mov	x1, x5
  411818:	mov	x0, #0x0                   	// #0
  41181c:	bl	40ea0c <wcrtomb@plt+0xbc1c>
  411820:	mov	x1, x0
  411824:	ldr	x0, [sp, #16]
  411828:	str	x1, [x0]
  41182c:	ldr	x0, [sp, #24]
  411830:	ldr	x1, [x0, #8]
  411834:	ldr	x0, [sp, #16]
  411838:	str	x1, [x0, #8]
  41183c:	ldr	x0, [sp, #24]
  411840:	ldr	x0, [x0, #8]
  411844:	cmp	x0, #0x0
  411848:	b.eq	411874 <wcrtomb@plt+0xea84>  // b.none
  41184c:	ldr	x0, [sp, #16]
  411850:	ldr	x3, [x0]
  411854:	ldr	x0, [sp, #24]
  411858:	ldr	x1, [x0]
  41185c:	ldr	x0, [sp, #24]
  411860:	ldr	x0, [x0, #8]
  411864:	lsl	x0, x0, #4
  411868:	mov	x2, x0
  41186c:	mov	x0, x3
  411870:	bl	4026d0 <memcpy@plt>
  411874:	nop
  411878:	ldp	x29, x30, [sp], #32
  41187c:	ret
  411880:	stp	x29, x30, [sp, #-32]!
  411884:	mov	x29, sp
  411888:	str	x0, [sp, #24]
  41188c:	str	x1, [sp, #16]
  411890:	ldr	x0, [sp, #16]
  411894:	mov	x1, #0x10                  	// #16
  411898:	bl	41b69c <wcrtomb@plt+0x188ac>
  41189c:	mov	x1, x0
  4118a0:	ldr	x0, [sp, #24]
  4118a4:	str	x1, [x0]
  4118a8:	ldr	x0, [sp, #24]
  4118ac:	ldr	x1, [sp, #16]
  4118b0:	str	x1, [x0, #16]
  4118b4:	ldr	x0, [sp, #24]
  4118b8:	str	xzr, [x0, #8]
  4118bc:	nop
  4118c0:	ldp	x29, x30, [sp], #32
  4118c4:	ret
  4118c8:	stp	x29, x30, [sp, #-96]!
  4118cc:	mov	x29, sp
  4118d0:	stp	x0, x1, [sp, #32]
  4118d4:	str	x2, [sp, #24]
  4118d8:	ldr	x0, [sp, #24]
  4118dc:	ldr	x0, [x0, #8]
  4118e0:	str	x0, [sp, #64]
  4118e4:	str	xzr, [sp, #88]
  4118e8:	ldr	x0, [sp, #64]
  4118ec:	str	x0, [sp, #80]
  4118f0:	b	4119a4 <wcrtomb@plt+0xebb4>
  4118f4:	ldr	x1, [sp, #88]
  4118f8:	ldr	x0, [sp, #80]
  4118fc:	add	x0, x1, x0
  411900:	asr	x0, x0, #1
  411904:	str	x0, [sp, #56]
  411908:	ldr	x0, [sp, #24]
  41190c:	ldr	x1, [x0]
  411910:	ldr	x0, [sp, #56]
  411914:	lsl	x0, x0, #4
  411918:	add	x0, x1, x0
  41191c:	ldr	x1, [x0]
  411920:	ldr	x0, [sp, #32]
  411924:	cmp	x1, x0
  411928:	b.ge	41193c <wcrtomb@plt+0xeb4c>  // b.tcont
  41192c:	ldr	x0, [sp, #56]
  411930:	add	x0, x0, #0x1
  411934:	str	x0, [sp, #88]
  411938:	b	4119a4 <wcrtomb@plt+0xebb4>
  41193c:	ldr	x0, [sp, #24]
  411940:	ldr	x1, [x0]
  411944:	ldr	x0, [sp, #56]
  411948:	lsl	x0, x0, #4
  41194c:	add	x0, x1, x0
  411950:	ldr	x1, [x0]
  411954:	ldr	x0, [sp, #32]
  411958:	cmp	x1, x0
  41195c:	b.ne	41199c <wcrtomb@plt+0xebac>  // b.any
  411960:	ldr	x0, [sp, #24]
  411964:	ldr	x1, [x0]
  411968:	ldr	x0, [sp, #56]
  41196c:	lsl	x0, x0, #4
  411970:	add	x0, x1, x0
  411974:	ldr	w2, [x0, #8]
  411978:	ldr	w1, [sp, #40]
  41197c:	ldr	x0, [sp, #24]
  411980:	ldr	x3, [x0]
  411984:	ldr	x0, [sp, #56]
  411988:	lsl	x0, x0, #4
  41198c:	add	x0, x3, x0
  411990:	orr	w1, w2, w1
  411994:	str	w1, [x0, #8]
  411998:	b	411a74 <wcrtomb@plt+0xec84>
  41199c:	ldr	x0, [sp, #56]
  4119a0:	str	x0, [sp, #80]
  4119a4:	ldr	x1, [sp, #88]
  4119a8:	ldr	x0, [sp, #80]
  4119ac:	cmp	x1, x0
  4119b0:	b.lt	4118f4 <wcrtomb@plt+0xeb04>  // b.tstop
  4119b4:	ldr	x0, [sp, #24]
  4119b8:	ldr	x5, [x0]
  4119bc:	ldr	x0, [sp, #24]
  4119c0:	add	x0, x0, #0x10
  4119c4:	mov	x4, #0x10                  	// #16
  4119c8:	mov	x3, #0xffffffffffffffff    	// #-1
  4119cc:	mov	x2, x0
  4119d0:	ldr	x1, [sp, #64]
  4119d4:	mov	x0, x5
  4119d8:	bl	40ec40 <wcrtomb@plt+0xbe50>
  4119dc:	mov	x1, x0
  4119e0:	ldr	x0, [sp, #24]
  4119e4:	str	x1, [x0]
  4119e8:	ldr	x0, [sp, #64]
  4119ec:	str	x0, [sp, #72]
  4119f0:	b	411a34 <wcrtomb@plt+0xec44>
  4119f4:	ldr	x0, [sp, #24]
  4119f8:	ldr	x1, [x0]
  4119fc:	ldr	x0, [sp, #72]
  411a00:	lsl	x0, x0, #4
  411a04:	sub	x0, x0, #0x10
  411a08:	add	x0, x1, x0
  411a0c:	ldr	x1, [sp, #24]
  411a10:	ldr	x2, [x1]
  411a14:	ldr	x1, [sp, #72]
  411a18:	lsl	x1, x1, #4
  411a1c:	add	x2, x2, x1
  411a20:	ldp	x0, x1, [x0]
  411a24:	stp	x0, x1, [x2]
  411a28:	ldr	x0, [sp, #72]
  411a2c:	sub	x0, x0, #0x1
  411a30:	str	x0, [sp, #72]
  411a34:	ldr	x1, [sp, #72]
  411a38:	ldr	x0, [sp, #88]
  411a3c:	cmp	x1, x0
  411a40:	b.gt	4119f4 <wcrtomb@plt+0xec04>
  411a44:	ldr	x0, [sp, #24]
  411a48:	ldr	x1, [x0]
  411a4c:	ldr	x0, [sp, #88]
  411a50:	lsl	x0, x0, #4
  411a54:	add	x2, x1, x0
  411a58:	ldp	x0, x1, [sp, #32]
  411a5c:	stp	x0, x1, [x2]
  411a60:	ldr	x0, [sp, #24]
  411a64:	ldr	x0, [x0, #8]
  411a68:	add	x1, x0, #0x1
  411a6c:	ldr	x0, [sp, #24]
  411a70:	str	x1, [x0, #8]
  411a74:	ldp	x29, x30, [sp], #96
  411a78:	ret
  411a7c:	stp	x29, x30, [sp, #-64]!
  411a80:	mov	x29, sp
  411a84:	stp	x0, x1, [sp, #32]
  411a88:	str	x2, [sp, #24]
  411a8c:	ldr	x0, [sp, #24]
  411a90:	ldr	x0, [x0, #8]
  411a94:	str	x0, [sp, #56]
  411a98:	ldr	x0, [sp, #24]
  411a9c:	ldr	x5, [x0]
  411aa0:	ldr	x0, [sp, #24]
  411aa4:	add	x0, x0, #0x10
  411aa8:	mov	x4, #0x10                  	// #16
  411aac:	mov	x3, #0xffffffffffffffff    	// #-1
  411ab0:	mov	x2, x0
  411ab4:	ldr	x1, [sp, #56]
  411ab8:	mov	x0, x5
  411abc:	bl	40ec40 <wcrtomb@plt+0xbe50>
  411ac0:	mov	x1, x0
  411ac4:	ldr	x0, [sp, #24]
  411ac8:	str	x1, [x0]
  411acc:	ldr	x0, [sp, #24]
  411ad0:	ldr	x1, [x0]
  411ad4:	ldr	x0, [sp, #24]
  411ad8:	ldr	x0, [x0, #8]
  411adc:	add	x3, x0, #0x1
  411ae0:	ldr	x2, [sp, #24]
  411ae4:	str	x3, [x2, #8]
  411ae8:	lsl	x0, x0, #4
  411aec:	add	x2, x1, x0
  411af0:	ldp	x0, x1, [sp, #32]
  411af4:	stp	x0, x1, [x2]
  411af8:	nop
  411afc:	ldp	x29, x30, [sp], #64
  411b00:	ret
  411b04:	stp	x29, x30, [sp, #-80]!
  411b08:	mov	x29, sp
  411b0c:	str	x0, [sp, #40]
  411b10:	str	x1, [sp, #32]
  411b14:	str	w2, [sp, #28]
  411b18:	str	x3, [sp, #16]
  411b1c:	str	xzr, [sp, #72]
  411b20:	str	xzr, [sp, #64]
  411b24:	ldr	x0, [sp, #16]
  411b28:	ldr	x1, [x0, #16]
  411b2c:	ldr	x0, [sp, #40]
  411b30:	ldr	x0, [x0, #8]
  411b34:	sub	x1, x1, x0
  411b38:	ldr	x0, [sp, #32]
  411b3c:	ldr	x0, [x0, #8]
  411b40:	cmp	x1, x0
  411b44:	b.ge	411b94 <wcrtomb@plt+0xeda4>  // b.tcont
  411b48:	ldr	x0, [sp, #16]
  411b4c:	ldr	x0, [x0]
  411b50:	bl	402b60 <free@plt>
  411b54:	ldr	x0, [sp, #40]
  411b58:	ldr	x1, [x0, #8]
  411b5c:	ldr	x0, [sp, #16]
  411b60:	str	x1, [x0, #16]
  411b64:	ldr	x0, [sp, #16]
  411b68:	add	x1, x0, #0x10
  411b6c:	ldr	x0, [sp, #32]
  411b70:	ldr	x0, [x0, #8]
  411b74:	mov	x4, #0x10                  	// #16
  411b78:	mov	x3, #0xffffffffffffffff    	// #-1
  411b7c:	mov	x2, x0
  411b80:	mov	x0, #0x0                   	// #0
  411b84:	bl	40ea0c <wcrtomb@plt+0xbc1c>
  411b88:	mov	x1, x0
  411b8c:	ldr	x0, [sp, #16]
  411b90:	str	x1, [x0]
  411b94:	ldr	x0, [sp, #16]
  411b98:	str	xzr, [x0, #8]
  411b9c:	b	411dcc <wcrtomb@plt+0xefdc>
  411ba0:	ldr	x0, [sp, #32]
  411ba4:	ldr	x0, [x0, #8]
  411ba8:	ldr	x1, [sp, #64]
  411bac:	cmp	x1, x0
  411bb0:	b.ge	411c00 <wcrtomb@plt+0xee10>  // b.tcont
  411bb4:	ldr	x0, [sp, #40]
  411bb8:	ldr	x0, [x0, #8]
  411bbc:	ldr	x1, [sp, #72]
  411bc0:	cmp	x1, x0
  411bc4:	b.ge	411d1c <wcrtomb@plt+0xef2c>  // b.tcont
  411bc8:	ldr	x0, [sp, #40]
  411bcc:	ldr	x1, [x0]
  411bd0:	ldr	x0, [sp, #72]
  411bd4:	lsl	x0, x0, #4
  411bd8:	add	x0, x1, x0
  411bdc:	ldr	x1, [x0]
  411be0:	ldr	x0, [sp, #32]
  411be4:	ldr	x2, [x0]
  411be8:	ldr	x0, [sp, #64]
  411bec:	lsl	x0, x0, #4
  411bf0:	add	x0, x2, x0
  411bf4:	ldr	x0, [x0]
  411bf8:	cmp	x1, x0
  411bfc:	b.gt	411d1c <wcrtomb@plt+0xef2c>
  411c00:	ldr	x0, [sp, #40]
  411c04:	ldr	x0, [x0, #8]
  411c08:	ldr	x1, [sp, #72]
  411c0c:	cmp	x1, x0
  411c10:	b.ge	411c8c <wcrtomb@plt+0xee9c>  // b.tcont
  411c14:	ldr	x0, [sp, #32]
  411c18:	ldr	x0, [x0, #8]
  411c1c:	ldr	x1, [sp, #64]
  411c20:	cmp	x1, x0
  411c24:	b.ge	411c8c <wcrtomb@plt+0xee9c>  // b.tcont
  411c28:	ldr	x0, [sp, #40]
  411c2c:	ldr	x1, [x0]
  411c30:	ldr	x0, [sp, #72]
  411c34:	lsl	x0, x0, #4
  411c38:	add	x0, x1, x0
  411c3c:	ldr	x1, [x0]
  411c40:	ldr	x0, [sp, #32]
  411c44:	ldr	x2, [x0]
  411c48:	ldr	x0, [sp, #64]
  411c4c:	lsl	x0, x0, #4
  411c50:	add	x0, x2, x0
  411c54:	ldr	x0, [x0]
  411c58:	cmp	x1, x0
  411c5c:	b.ne	411c8c <wcrtomb@plt+0xee9c>  // b.any
  411c60:	ldr	x0, [sp, #32]
  411c64:	ldr	x1, [x0]
  411c68:	ldr	x0, [sp, #64]
  411c6c:	add	x2, x0, #0x1
  411c70:	str	x2, [sp, #64]
  411c74:	lsl	x0, x0, #4
  411c78:	add	x0, x1, x0
  411c7c:	ldr	w1, [x0, #8]
  411c80:	ldr	w0, [sp, #28]
  411c84:	and	w0, w1, w0
  411c88:	b	411c90 <wcrtomb@plt+0xeea0>
  411c8c:	mov	w0, #0x0                   	// #0
  411c90:	str	w0, [sp, #60]
  411c94:	ldr	x0, [sp, #40]
  411c98:	ldr	x1, [x0]
  411c9c:	ldr	x0, [sp, #72]
  411ca0:	lsl	x0, x0, #4
  411ca4:	add	x1, x1, x0
  411ca8:	ldr	x0, [sp, #16]
  411cac:	ldr	x2, [x0]
  411cb0:	ldr	x0, [sp, #16]
  411cb4:	ldr	x0, [x0, #8]
  411cb8:	lsl	x0, x0, #4
  411cbc:	add	x0, x2, x0
  411cc0:	ldr	x1, [x1]
  411cc4:	str	x1, [x0]
  411cc8:	ldr	x0, [sp, #40]
  411ccc:	ldr	x1, [x0]
  411cd0:	ldr	x0, [sp, #72]
  411cd4:	add	x2, x0, #0x1
  411cd8:	str	x2, [sp, #72]
  411cdc:	lsl	x0, x0, #4
  411ce0:	add	x0, x1, x0
  411ce4:	ldr	w2, [x0, #8]
  411ce8:	ldr	x0, [sp, #16]
  411cec:	ldr	x1, [x0]
  411cf0:	ldr	x0, [sp, #16]
  411cf4:	ldr	x0, [x0, #8]
  411cf8:	add	x4, x0, #0x1
  411cfc:	ldr	x3, [sp, #16]
  411d00:	str	x4, [x3, #8]
  411d04:	lsl	x0, x0, #4
  411d08:	add	x0, x1, x0
  411d0c:	ldr	w1, [sp, #60]
  411d10:	orr	w1, w2, w1
  411d14:	str	w1, [x0, #8]
  411d18:	b	411dcc <wcrtomb@plt+0xefdc>
  411d1c:	ldr	x0, [sp, #32]
  411d20:	ldr	x1, [x0]
  411d24:	ldr	x0, [sp, #64]
  411d28:	lsl	x0, x0, #4
  411d2c:	add	x0, x1, x0
  411d30:	ldr	w1, [x0, #8]
  411d34:	ldr	w0, [sp, #28]
  411d38:	and	w0, w1, w0
  411d3c:	cmp	w0, #0x0
  411d40:	b.eq	411dc0 <wcrtomb@plt+0xefd0>  // b.none
  411d44:	ldr	x0, [sp, #32]
  411d48:	ldr	x1, [x0]
  411d4c:	ldr	x0, [sp, #64]
  411d50:	lsl	x0, x0, #4
  411d54:	add	x1, x1, x0
  411d58:	ldr	x0, [sp, #16]
  411d5c:	ldr	x2, [x0]
  411d60:	ldr	x0, [sp, #16]
  411d64:	ldr	x0, [x0, #8]
  411d68:	lsl	x0, x0, #4
  411d6c:	add	x0, x2, x0
  411d70:	ldr	x1, [x1]
  411d74:	str	x1, [x0]
  411d78:	ldr	x0, [sp, #32]
  411d7c:	ldr	x1, [x0]
  411d80:	ldr	x0, [sp, #64]
  411d84:	lsl	x0, x0, #4
  411d88:	add	x0, x1, x0
  411d8c:	ldr	w2, [x0, #8]
  411d90:	ldr	x0, [sp, #16]
  411d94:	ldr	x1, [x0]
  411d98:	ldr	x0, [sp, #16]
  411d9c:	ldr	x0, [x0, #8]
  411da0:	add	x4, x0, #0x1
  411da4:	ldr	x3, [sp, #16]
  411da8:	str	x4, [x3, #8]
  411dac:	lsl	x0, x0, #4
  411db0:	add	x0, x1, x0
  411db4:	ldr	w1, [sp, #28]
  411db8:	and	w1, w2, w1
  411dbc:	str	w1, [x0, #8]
  411dc0:	ldr	x0, [sp, #64]
  411dc4:	add	x0, x0, #0x1
  411dc8:	str	x0, [sp, #64]
  411dcc:	ldr	x0, [sp, #40]
  411dd0:	ldr	x0, [x0, #8]
  411dd4:	ldr	x1, [sp, #72]
  411dd8:	cmp	x1, x0
  411ddc:	b.lt	411ba0 <wcrtomb@plt+0xedb0>  // b.tstop
  411de0:	ldr	x0, [sp, #32]
  411de4:	ldr	x0, [x0, #8]
  411de8:	ldr	x1, [sp, #64]
  411dec:	cmp	x1, x0
  411df0:	b.lt	411ba0 <wcrtomb@plt+0xedb0>  // b.tstop
  411df4:	nop
  411df8:	nop
  411dfc:	ldp	x29, x30, [sp], #80
  411e00:	ret
  411e04:	stp	x29, x30, [sp, #-48]!
  411e08:	mov	x29, sp
  411e0c:	str	x0, [sp, #40]
  411e10:	str	x1, [sp, #32]
  411e14:	str	x2, [sp, #24]
  411e18:	ldr	x3, [sp, #24]
  411e1c:	mov	w2, #0xffffffff            	// #-1
  411e20:	ldr	x1, [sp, #32]
  411e24:	ldr	x0, [sp, #40]
  411e28:	bl	411b04 <wcrtomb@plt+0xed14>
  411e2c:	nop
  411e30:	ldp	x29, x30, [sp], #48
  411e34:	ret
  411e38:	stp	x29, x30, [sp, #-64]!
  411e3c:	mov	x29, sp
  411e40:	str	x0, [sp, #40]
  411e44:	str	x1, [sp, #32]
  411e48:	str	x2, [sp, #24]
  411e4c:	ldr	x0, [sp, #32]
  411e50:	ldr	x0, [x0, #8]
  411e54:	cmp	x0, #0x3
  411e58:	b.gt	411ea8 <wcrtomb@plt+0xf0b8>
  411e5c:	str	xzr, [sp, #56]
  411e60:	b	411e90 <wcrtomb@plt+0xf0a0>
  411e64:	ldr	x0, [sp, #32]
  411e68:	ldr	x1, [x0]
  411e6c:	ldr	x0, [sp, #56]
  411e70:	lsl	x0, x0, #4
  411e74:	add	x0, x1, x0
  411e78:	ldr	x2, [sp, #40]
  411e7c:	ldp	x0, x1, [x0]
  411e80:	bl	4118c8 <wcrtomb@plt+0xead8>
  411e84:	ldr	x0, [sp, #56]
  411e88:	add	x0, x0, #0x1
  411e8c:	str	x0, [sp, #56]
  411e90:	ldr	x0, [sp, #32]
  411e94:	ldr	x0, [x0, #8]
  411e98:	ldr	x1, [sp, #56]
  411e9c:	cmp	x1, x0
  411ea0:	b.lt	411e64 <wcrtomb@plt+0xf074>  // b.tstop
  411ea4:	b	411ec4 <wcrtomb@plt+0xf0d4>
  411ea8:	ldr	x2, [sp, #24]
  411eac:	ldr	x1, [sp, #40]
  411eb0:	ldr	x0, [sp, #32]
  411eb4:	bl	411e04 <wcrtomb@plt+0xf014>
  411eb8:	ldr	x1, [sp, #40]
  411ebc:	ldr	x0, [sp, #24]
  411ec0:	bl	4117b8 <wcrtomb@plt+0xe9c8>
  411ec4:	nop
  411ec8:	ldp	x29, x30, [sp], #64
  411ecc:	ret
  411ed0:	sub	sp, sp, #0x40
  411ed4:	str	x0, [sp, #8]
  411ed8:	str	x1, [sp]
  411edc:	ldr	x0, [sp]
  411ee0:	ldr	x0, [x0, #8]
  411ee4:	str	x0, [sp, #32]
  411ee8:	str	xzr, [sp, #56]
  411eec:	ldr	x0, [sp, #32]
  411ef0:	str	x0, [sp, #48]
  411ef4:	b	411ffc <wcrtomb@plt+0xf20c>
  411ef8:	ldr	x1, [sp, #56]
  411efc:	ldr	x0, [sp, #48]
  411f00:	add	x0, x1, x0
  411f04:	asr	x0, x0, #1
  411f08:	str	x0, [sp, #24]
  411f0c:	ldr	x0, [sp]
  411f10:	ldr	x1, [x0]
  411f14:	ldr	x0, [sp, #24]
  411f18:	lsl	x0, x0, #4
  411f1c:	add	x0, x1, x0
  411f20:	ldr	x0, [x0]
  411f24:	ldr	x1, [sp, #8]
  411f28:	cmp	x1, x0
  411f2c:	b.le	411f40 <wcrtomb@plt+0xf150>
  411f30:	ldr	x0, [sp, #24]
  411f34:	add	x0, x0, #0x1
  411f38:	str	x0, [sp, #56]
  411f3c:	b	411ffc <wcrtomb@plt+0xf20c>
  411f40:	ldr	x0, [sp]
  411f44:	ldr	x1, [x0]
  411f48:	ldr	x0, [sp, #24]
  411f4c:	lsl	x0, x0, #4
  411f50:	add	x0, x1, x0
  411f54:	ldr	x0, [x0]
  411f58:	ldr	x1, [sp, #8]
  411f5c:	cmp	x1, x0
  411f60:	b.ne	411ff4 <wcrtomb@plt+0xf204>  // b.any
  411f64:	ldr	x0, [sp]
  411f68:	ldr	x1, [x0]
  411f6c:	ldr	x0, [sp, #24]
  411f70:	lsl	x0, x0, #4
  411f74:	add	x0, x1, x0
  411f78:	ldr	w0, [x0, #8]
  411f7c:	str	w0, [sp, #20]
  411f80:	ldr	x0, [sp, #24]
  411f84:	str	x0, [sp, #40]
  411f88:	b	411fcc <wcrtomb@plt+0xf1dc>
  411f8c:	ldr	x0, [sp]
  411f90:	ldr	x1, [x0]
  411f94:	ldr	x0, [sp, #40]
  411f98:	add	x0, x0, #0x1
  411f9c:	lsl	x0, x0, #4
  411fa0:	add	x0, x1, x0
  411fa4:	ldr	x1, [sp]
  411fa8:	ldr	x2, [x1]
  411fac:	ldr	x1, [sp, #40]
  411fb0:	lsl	x1, x1, #4
  411fb4:	add	x2, x2, x1
  411fb8:	ldp	x0, x1, [x0]
  411fbc:	stp	x0, x1, [x2]
  411fc0:	ldr	x0, [sp, #40]
  411fc4:	add	x0, x0, #0x1
  411fc8:	str	x0, [sp, #40]
  411fcc:	ldr	x0, [sp, #40]
  411fd0:	add	x0, x0, #0x1
  411fd4:	ldr	x1, [sp, #32]
  411fd8:	cmp	x1, x0
  411fdc:	b.gt	411f8c <wcrtomb@plt+0xf19c>
  411fe0:	ldr	x0, [sp]
  411fe4:	ldr	x1, [sp, #40]
  411fe8:	str	x1, [x0, #8]
  411fec:	ldr	w0, [sp, #20]
  411ff0:	b	412010 <wcrtomb@plt+0xf220>
  411ff4:	ldr	x0, [sp, #24]
  411ff8:	str	x0, [sp, #48]
  411ffc:	ldr	x1, [sp, #56]
  412000:	ldr	x0, [sp, #48]
  412004:	cmp	x1, x0
  412008:	b.lt	411ef8 <wcrtomb@plt+0xf108>  // b.tstop
  41200c:	mov	w0, #0x0                   	// #0
  412010:	add	sp, sp, #0x40
  412014:	ret
  412018:	stp	x29, x30, [sp, #-80]!
  41201c:	mov	x29, sp
  412020:	str	x0, [sp, #56]
  412024:	str	x1, [sp, #48]
  412028:	str	x2, [sp, #40]
  41202c:	str	w3, [sp, #36]
  412030:	str	x4, [sp, #24]
  412034:	ldr	x1, [sp, #56]
  412038:	ldr	x0, [sp, #48]
  41203c:	bl	411ed0 <wcrtomb@plt+0xf0e0>
  412040:	mov	w1, w0
  412044:	ldr	w0, [sp, #36]
  412048:	and	w0, w0, w1
  41204c:	str	w0, [sp, #76]
  412050:	ldr	w0, [sp, #76]
  412054:	cmp	w0, #0x0
  412058:	b.eq	41207c <wcrtomb@plt+0xf28c>  // b.none
  41205c:	ldr	x1, [sp, #24]
  412060:	ldr	x0, [sp, #56]
  412064:	bl	4117b8 <wcrtomb@plt+0xe9c8>
  412068:	ldr	x3, [sp, #56]
  41206c:	ldr	w2, [sp, #76]
  412070:	ldr	x1, [sp, #40]
  412074:	ldr	x0, [sp, #24]
  412078:	bl	411b04 <wcrtomb@plt+0xed14>
  41207c:	nop
  412080:	ldp	x29, x30, [sp], #80
  412084:	ret
  412088:	stp	x29, x30, [sp, #-112]!
  41208c:	mov	x29, sp
  412090:	str	x0, [sp, #40]
  412094:	str	x1, [sp, #32]
  412098:	str	w2, [sp, #28]
  41209c:	str	xzr, [sp, #104]
  4120a0:	str	wzr, [sp, #100]
  4120a4:	str	xzr, [sp, #80]
  4120a8:	str	xzr, [sp, #88]
  4120ac:	b	412108 <wcrtomb@plt+0xf318>
  4120b0:	ldr	x0, [sp, #32]
  4120b4:	ldr	x1, [x0]
  4120b8:	ldr	x0, [sp, #88]
  4120bc:	lsl	x0, x0, #4
  4120c0:	add	x0, x1, x0
  4120c4:	ldr	x0, [x0]
  4120c8:	str	x0, [sp, #48]
  4120cc:	ldr	x0, [sp, #32]
  4120d0:	ldr	x1, [x0]
  4120d4:	ldr	x0, [sp, #88]
  4120d8:	lsl	x0, x0, #4
  4120dc:	add	x0, x1, x0
  4120e0:	ldr	w0, [x0, #8]
  4120e4:	mov	w1, w0
  4120e8:	ldr	x0, [sp, #48]
  4120ec:	add	x0, x1, x0
  4120f0:	ldr	x1, [sp, #104]
  4120f4:	eor	x0, x1, x0
  4120f8:	str	x0, [sp, #104]
  4120fc:	ldr	x0, [sp, #88]
  412100:	add	x0, x0, #0x1
  412104:	str	x0, [sp, #88]
  412108:	ldr	x0, [sp, #32]
  41210c:	ldr	x0, [x0, #8]
  412110:	ldr	x1, [sp, #88]
  412114:	cmp	x1, x0
  412118:	b.lt	4120b0 <wcrtomb@plt+0xf2c0>  // b.tstop
  41211c:	str	xzr, [sp, #88]
  412120:	b	4122b8 <wcrtomb@plt+0xf4c8>
  412124:	ldr	x0, [sp, #40]
  412128:	ldr	x2, [x0, #296]
  41212c:	ldr	x1, [sp, #88]
  412130:	mov	x0, x1
  412134:	lsl	x0, x0, #2
  412138:	add	x0, x0, x1
  41213c:	lsl	x0, x0, #4
  412140:	add	x0, x2, x0
  412144:	ldr	x0, [x0]
  412148:	ldr	x1, [sp, #104]
  41214c:	cmp	x1, x0
  412150:	b.ne	4122a8 <wcrtomb@plt+0xf4b8>  // b.any
  412154:	ldr	x0, [sp, #32]
  412158:	ldr	x2, [x0, #8]
  41215c:	ldr	x0, [sp, #40]
  412160:	ldr	x3, [x0, #296]
  412164:	ldr	x1, [sp, #88]
  412168:	mov	x0, x1
  41216c:	lsl	x0, x0, #2
  412170:	add	x0, x0, x1
  412174:	lsl	x0, x0, #4
  412178:	add	x0, x3, x0
  41217c:	ldr	x0, [x0, #16]
  412180:	cmp	x2, x0
  412184:	b.ne	4122a8 <wcrtomb@plt+0xf4b8>  // b.any
  412188:	ldr	x0, [sp, #40]
  41218c:	ldr	x2, [x0, #296]
  412190:	ldr	x1, [sp, #88]
  412194:	mov	x0, x1
  412198:	lsl	x0, x0, #2
  41219c:	add	x0, x0, x1
  4121a0:	lsl	x0, x0, #4
  4121a4:	add	x0, x2, x0
  4121a8:	ldrb	w0, [x0, #32]
  4121ac:	mov	w1, w0
  4121b0:	ldr	w0, [sp, #28]
  4121b4:	cmp	w0, w1
  4121b8:	b.ne	4122a8 <wcrtomb@plt+0xf4b8>  // b.any
  4121bc:	str	xzr, [sp, #72]
  4121c0:	b	412278 <wcrtomb@plt+0xf488>
  4121c4:	ldr	x0, [sp, #32]
  4121c8:	ldr	x1, [x0]
  4121cc:	ldr	x0, [sp, #72]
  4121d0:	lsl	x0, x0, #4
  4121d4:	add	x0, x1, x0
  4121d8:	ldr	w2, [x0, #8]
  4121dc:	ldr	x0, [sp, #40]
  4121e0:	ldr	x3, [x0, #296]
  4121e4:	ldr	x1, [sp, #88]
  4121e8:	mov	x0, x1
  4121ec:	lsl	x0, x0, #2
  4121f0:	add	x0, x0, x1
  4121f4:	lsl	x0, x0, #4
  4121f8:	add	x0, x3, x0
  4121fc:	ldr	x1, [x0, #8]
  412200:	ldr	x0, [sp, #72]
  412204:	lsl	x0, x0, #4
  412208:	add	x0, x1, x0
  41220c:	ldr	w0, [x0, #8]
  412210:	cmp	w2, w0
  412214:	b.ne	41228c <wcrtomb@plt+0xf49c>  // b.any
  412218:	ldr	x0, [sp, #32]
  41221c:	ldr	x1, [x0]
  412220:	ldr	x0, [sp, #72]
  412224:	lsl	x0, x0, #4
  412228:	add	x0, x1, x0
  41222c:	ldr	x2, [x0]
  412230:	ldr	x0, [sp, #40]
  412234:	ldr	x3, [x0, #296]
  412238:	ldr	x1, [sp, #88]
  41223c:	mov	x0, x1
  412240:	lsl	x0, x0, #2
  412244:	add	x0, x0, x1
  412248:	lsl	x0, x0, #4
  41224c:	add	x0, x3, x0
  412250:	ldr	x1, [x0, #8]
  412254:	ldr	x0, [sp, #72]
  412258:	lsl	x0, x0, #4
  41225c:	add	x0, x1, x0
  412260:	ldr	x0, [x0]
  412264:	cmp	x2, x0
  412268:	b.ne	41228c <wcrtomb@plt+0xf49c>  // b.any
  41226c:	ldr	x0, [sp, #72]
  412270:	add	x0, x0, #0x1
  412274:	str	x0, [sp, #72]
  412278:	ldr	x0, [sp, #32]
  41227c:	ldr	x0, [x0, #8]
  412280:	ldr	x1, [sp, #72]
  412284:	cmp	x1, x0
  412288:	b.lt	4121c4 <wcrtomb@plt+0xf3d4>  // b.tstop
  41228c:	ldr	x0, [sp, #32]
  412290:	ldr	x0, [x0, #8]
  412294:	ldr	x1, [sp, #72]
  412298:	cmp	x1, x0
  41229c:	b.ne	4122ac <wcrtomb@plt+0xf4bc>  // b.any
  4122a0:	ldr	x0, [sp, #88]
  4122a4:	b	4125a8 <wcrtomb@plt+0xf7b8>
  4122a8:	nop
  4122ac:	ldr	x0, [sp, #88]
  4122b0:	add	x0, x0, #0x1
  4122b4:	str	x0, [sp, #88]
  4122b8:	ldr	x0, [sp, #40]
  4122bc:	ldr	x0, [x0, #304]
  4122c0:	ldr	x1, [sp, #88]
  4122c4:	cmp	x1, x0
  4122c8:	b.lt	412124 <wcrtomb@plt+0xf334>  // b.tstop
  4122cc:	str	xzr, [sp, #64]
  4122d0:	b	4123c4 <wcrtomb@plt+0xf5d4>
  4122d4:	ldr	x0, [sp, #40]
  4122d8:	ldr	x1, [x0, #336]
  4122dc:	ldr	x0, [sp, #32]
  4122e0:	ldr	x2, [x0]
  4122e4:	ldr	x0, [sp, #64]
  4122e8:	lsl	x0, x0, #4
  4122ec:	add	x0, x2, x0
  4122f0:	ldr	x0, [x0]
  4122f4:	lsl	x0, x0, #2
  4122f8:	add	x0, x1, x0
  4122fc:	ldr	w0, [x0]
  412300:	str	w0, [sp, #60]
  412304:	ldr	w0, [sp, #60]
  412308:	cmp	w0, #0x0
  41230c:	b.eq	41237c <wcrtomb@plt+0xf58c>  // b.none
  412310:	mov	w2, #0x7                   	// #7
  412314:	ldr	w1, [sp, #28]
  412318:	ldr	w0, [sp, #60]
  41231c:	bl	40e518 <wcrtomb@plt+0xb728>
  412320:	and	w0, w0, #0xff
  412324:	cmp	w0, #0x0
  412328:	b.eq	41233c <wcrtomb@plt+0xf54c>  // b.none
  41232c:	ldr	w1, [sp, #100]
  412330:	ldr	w0, [sp, #60]
  412334:	orr	w0, w1, w0
  412338:	str	w0, [sp, #100]
  41233c:	ldr	x0, [sp, #80]
  412340:	cmp	x0, #0x0
  412344:	b.ne	4123b8 <wcrtomb@plt+0xf5c8>  // b.any
  412348:	ldr	x0, [sp, #40]
  41234c:	ldr	x1, [x0, #144]
  412350:	ldr	x0, [sp, #32]
  412354:	ldr	x2, [x0]
  412358:	ldr	x0, [sp, #64]
  41235c:	lsl	x0, x0, #4
  412360:	add	x0, x2, x0
  412364:	ldr	x0, [x0]
  412368:	lsl	x0, x0, #3
  41236c:	add	x0, x1, x0
  412370:	ldr	x0, [x0]
  412374:	str	x0, [sp, #80]
  412378:	b	4123b8 <wcrtomb@plt+0xf5c8>
  41237c:	ldr	x0, [sp, #40]
  412380:	ldr	x1, [x0, #144]
  412384:	ldr	x0, [sp, #32]
  412388:	ldr	x2, [x0]
  41238c:	ldr	x0, [sp, #64]
  412390:	lsl	x0, x0, #4
  412394:	add	x0, x2, x0
  412398:	ldr	x0, [x0]
  41239c:	lsl	x0, x0, #3
  4123a0:	add	x0, x1, x0
  4123a4:	ldr	x0, [x0]
  4123a8:	cmp	x0, #0x112
  4123ac:	b.ne	4123b8 <wcrtomb@plt+0xf5c8>  // b.any
  4123b0:	mov	w0, #0x1ff                 	// #511
  4123b4:	str	w0, [sp, #100]
  4123b8:	ldr	x0, [sp, #64]
  4123bc:	add	x0, x0, #0x1
  4123c0:	str	x0, [sp, #64]
  4123c4:	ldr	x0, [sp, #32]
  4123c8:	ldr	x0, [x0, #8]
  4123cc:	ldr	x1, [sp, #64]
  4123d0:	cmp	x1, x0
  4123d4:	b.lt	4122d4 <wcrtomb@plt+0xf4e4>  // b.tstop
  4123d8:	ldr	x0, [sp, #40]
  4123dc:	ldr	x5, [x0, #296]
  4123e0:	ldr	x0, [sp, #40]
  4123e4:	ldr	x1, [x0, #304]
  4123e8:	ldr	x0, [sp, #40]
  4123ec:	add	x0, x0, #0x138
  4123f0:	mov	x4, #0x50                  	// #80
  4123f4:	mov	x3, #0xffffffffffffffff    	// #-1
  4123f8:	mov	x2, x0
  4123fc:	mov	x0, x5
  412400:	bl	40ec40 <wcrtomb@plt+0xbe50>
  412404:	mov	x1, x0
  412408:	ldr	x0, [sp, #40]
  41240c:	str	x1, [x0, #296]
  412410:	ldr	x0, [sp, #40]
  412414:	ldr	x2, [x0, #296]
  412418:	ldr	x1, [sp, #88]
  41241c:	mov	x0, x1
  412420:	lsl	x0, x0, #2
  412424:	add	x0, x0, x1
  412428:	lsl	x0, x0, #4
  41242c:	add	x0, x2, x0
  412430:	ldr	x1, [sp, #104]
  412434:	str	x1, [x0]
  412438:	ldr	x0, [sp, #40]
  41243c:	ldr	x2, [x0, #296]
  412440:	ldr	x1, [sp, #88]
  412444:	mov	x0, x1
  412448:	lsl	x0, x0, #2
  41244c:	add	x0, x0, x1
  412450:	lsl	x0, x0, #4
  412454:	add	x0, x2, x0
  412458:	add	x2, x0, #0x8
  41245c:	ldr	x0, [sp, #32]
  412460:	ldr	x0, [x0, #8]
  412464:	mov	x1, x0
  412468:	mov	x0, x2
  41246c:	bl	411880 <wcrtomb@plt+0xea90>
  412470:	ldr	x0, [sp, #40]
  412474:	ldr	x2, [x0, #296]
  412478:	ldr	x1, [sp, #88]
  41247c:	mov	x0, x1
  412480:	lsl	x0, x0, #2
  412484:	add	x0, x0, x1
  412488:	lsl	x0, x0, #4
  41248c:	add	x0, x2, x0
  412490:	add	x0, x0, #0x8
  412494:	mov	x1, x0
  412498:	ldr	x0, [sp, #32]
  41249c:	bl	4117b8 <wcrtomb@plt+0xe9c8>
  4124a0:	ldr	x0, [sp, #40]
  4124a4:	ldr	x2, [x0, #296]
  4124a8:	ldr	x1, [sp, #88]
  4124ac:	mov	x0, x1
  4124b0:	lsl	x0, x0, #2
  4124b4:	add	x0, x0, x1
  4124b8:	lsl	x0, x0, #4
  4124bc:	add	x0, x2, x0
  4124c0:	ldr	w1, [sp, #28]
  4124c4:	and	w1, w1, #0xff
  4124c8:	strb	w1, [x0, #32]
  4124cc:	ldr	x0, [sp, #40]
  4124d0:	ldr	x2, [x0, #296]
  4124d4:	ldr	x1, [sp, #88]
  4124d8:	mov	x0, x1
  4124dc:	lsl	x0, x0, #2
  4124e0:	add	x0, x0, x1
  4124e4:	lsl	x0, x0, #4
  4124e8:	add	x0, x2, x0
  4124ec:	ldr	w1, [sp, #100]
  4124f0:	and	w1, w1, #0xffff
  4124f4:	strh	w1, [x0, #34]
  4124f8:	ldr	x0, [sp, #40]
  4124fc:	ldr	x2, [x0, #296]
  412500:	ldr	x1, [sp, #88]
  412504:	mov	x0, x1
  412508:	lsl	x0, x0, #2
  41250c:	add	x0, x0, x1
  412510:	lsl	x0, x0, #4
  412514:	add	x0, x2, x0
  412518:	ldr	x1, [sp, #80]
  41251c:	str	x1, [x0, #40]
  412520:	ldr	x0, [sp, #40]
  412524:	ldr	x2, [x0, #296]
  412528:	ldr	x1, [sp, #88]
  41252c:	mov	x0, x1
  412530:	lsl	x0, x0, #2
  412534:	add	x0, x0, x1
  412538:	lsl	x0, x0, #4
  41253c:	add	x0, x2, x0
  412540:	str	xzr, [x0, #56]
  412544:	ldr	x0, [sp, #40]
  412548:	ldr	x2, [x0, #296]
  41254c:	ldr	x1, [sp, #88]
  412550:	mov	x0, x1
  412554:	lsl	x0, x0, #2
  412558:	add	x0, x0, x1
  41255c:	lsl	x0, x0, #4
  412560:	add	x0, x2, x0
  412564:	str	xzr, [x0, #48]
  412568:	ldr	x0, [sp, #40]
  41256c:	ldr	x2, [x0, #296]
  412570:	ldr	x1, [sp, #88]
  412574:	mov	x0, x1
  412578:	lsl	x0, x0, #2
  41257c:	add	x0, x0, x1
  412580:	lsl	x0, x0, #4
  412584:	add	x0, x2, x0
  412588:	mov	x1, #0xffffffffffffffff    	// #-1
  41258c:	str	x1, [x0, #72]
  412590:	ldr	x0, [sp, #40]
  412594:	ldr	x0, [x0, #304]
  412598:	add	x1, x0, #0x1
  41259c:	ldr	x0, [sp, #40]
  4125a0:	str	x1, [x0, #304]
  4125a4:	ldr	x0, [sp, #88]
  4125a8:	ldp	x29, x30, [sp], #112
  4125ac:	ret
  4125b0:	stp	x29, x30, [sp, #-80]!
  4125b4:	mov	x29, sp
  4125b8:	str	x0, [sp, #24]
  4125bc:	ldr	x0, [sp, #24]
  4125c0:	ldr	x1, [x0, #176]
  4125c4:	add	x0, sp, #0x20
  4125c8:	bl	411880 <wcrtomb@plt+0xea90>
  4125cc:	str	xzr, [sp, #72]
  4125d0:	b	412858 <wcrtomb@plt+0xfa68>
  4125d4:	ldr	x0, [sp, #24]
  4125d8:	ldr	x2, [x0, #320]
  4125dc:	ldr	x1, [sp, #72]
  4125e0:	mov	x0, x1
  4125e4:	lsl	x0, x0, #1
  4125e8:	add	x0, x0, x1
  4125ec:	lsl	x0, x0, #3
  4125f0:	add	x0, x2, x0
  4125f4:	ldr	x0, [x0, #8]
  4125f8:	cmp	x0, #0x0
  4125fc:	b.le	41284c <wcrtomb@plt+0xfa5c>
  412600:	ldr	x0, [sp, #24]
  412604:	ldr	x1, [x0, #144]
  412608:	ldr	x0, [sp, #72]
  41260c:	lsl	x0, x0, #3
  412610:	add	x0, x1, x0
  412614:	ldr	x0, [x0]
  412618:	cmp	x0, #0xff
  41261c:	b.le	41284c <wcrtomb@plt+0xfa5c>
  412620:	ldr	x0, [sp, #24]
  412624:	ldr	x1, [x0, #144]
  412628:	ldr	x0, [sp, #72]
  41262c:	lsl	x0, x0, #3
  412630:	add	x0, x1, x0
  412634:	ldr	x0, [x0]
  412638:	cmp	x0, #0x112
  41263c:	b.eq	41284c <wcrtomb@plt+0xfa5c>  // b.none
  412640:	ldr	x0, [sp, #24]
  412644:	ldr	x1, [x0, #144]
  412648:	ldr	x0, [sp, #72]
  41264c:	lsl	x0, x0, #3
  412650:	add	x0, x1, x0
  412654:	ldr	x0, [x0]
  412658:	cmp	x0, #0x10a
  41265c:	b.eq	41284c <wcrtomb@plt+0xfa5c>  // b.none
  412660:	ldr	x0, [sp, #24]
  412664:	ldr	x1, [x0, #144]
  412668:	ldr	x0, [sp, #72]
  41266c:	lsl	x0, x0, #3
  412670:	add	x0, x1, x0
  412674:	ldr	x0, [x0]
  412678:	cmp	x0, #0x113
  41267c:	b.eq	41284c <wcrtomb@plt+0xfa5c>  // b.none
  412680:	ldr	x0, [sp, #24]
  412684:	ldr	x1, [x0, #144]
  412688:	ldr	x0, [sp, #72]
  41268c:	lsl	x0, x0, #3
  412690:	add	x0, x1, x0
  412694:	ldr	x0, [x0]
  412698:	cmp	x0, #0x113
  41269c:	b.gt	41284c <wcrtomb@plt+0xfa5c>
  4126a0:	ldr	x0, [sp, #24]
  4126a4:	ldr	x1, [x0, #144]
  4126a8:	ldr	x0, [sp, #72]
  4126ac:	lsl	x0, x0, #3
  4126b0:	add	x0, x1, x0
  4126b4:	ldr	x0, [x0]
  4126b8:	cmp	x0, #0x111
  4126bc:	b.eq	412748 <wcrtomb@plt+0xf958>  // b.none
  4126c0:	cmp	x0, #0x111
  4126c4:	b.gt	412754 <wcrtomb@plt+0xf964>
  4126c8:	cmp	x0, #0x110
  4126cc:	b.eq	41273c <wcrtomb@plt+0xf94c>  // b.none
  4126d0:	cmp	x0, #0x110
  4126d4:	b.gt	412754 <wcrtomb@plt+0xf964>
  4126d8:	cmp	x0, #0x10f
  4126dc:	b.eq	412730 <wcrtomb@plt+0xf940>  // b.none
  4126e0:	cmp	x0, #0x10f
  4126e4:	b.gt	412754 <wcrtomb@plt+0xf964>
  4126e8:	cmp	x0, #0x10e
  4126ec:	b.eq	412724 <wcrtomb@plt+0xf934>  // b.none
  4126f0:	cmp	x0, #0x10e
  4126f4:	b.gt	412754 <wcrtomb@plt+0xf964>
  4126f8:	cmp	x0, #0x10c
  4126fc:	b.eq	41270c <wcrtomb@plt+0xf91c>  // b.none
  412700:	cmp	x0, #0x10d
  412704:	b.eq	412718 <wcrtomb@plt+0xf928>  // b.none
  412708:	b	412754 <wcrtomb@plt+0xf964>
  41270c:	mov	w0, #0x124                 	// #292
  412710:	str	w0, [sp, #68]
  412714:	b	412760 <wcrtomb@plt+0xf970>
  412718:	mov	w0, #0x1c0                 	// #448
  41271c:	str	w0, [sp, #68]
  412720:	b	412760 <wcrtomb@plt+0xf970>
  412724:	mov	w0, #0x28                  	// #40
  412728:	str	w0, [sp, #68]
  41272c:	b	412760 <wcrtomb@plt+0xf970>
  412730:	mov	w0, #0x82                  	// #130
  412734:	str	w0, [sp, #68]
  412738:	b	412760 <wcrtomb@plt+0xf970>
  41273c:	mov	w0, #0xaa                  	// #170
  412740:	str	w0, [sp, #68]
  412744:	b	412760 <wcrtomb@plt+0xf970>
  412748:	mov	w0, #0x155                 	// #341
  41274c:	str	w0, [sp, #68]
  412750:	b	412760 <wcrtomb@plt+0xf970>
  412754:	mov	w0, #0x1ff                 	// #511
  412758:	str	w0, [sp, #68]
  41275c:	nop
  412760:	ldr	x0, [sp, #24]
  412764:	ldr	x2, [x0, #320]
  412768:	ldr	x1, [sp, #72]
  41276c:	mov	x0, x1
  412770:	lsl	x0, x0, #1
  412774:	add	x0, x0, x1
  412778:	lsl	x0, x0, #3
  41277c:	add	x0, x2, x0
  412780:	mov	x1, x0
  412784:	ldr	x0, [sp, #72]
  412788:	bl	411ed0 <wcrtomb@plt+0xf0e0>
  41278c:	str	xzr, [sp, #56]
  412790:	b	412838 <wcrtomb@plt+0xfa48>
  412794:	ldr	x1, [sp, #72]
  412798:	ldr	x0, [sp, #56]
  41279c:	cmp	x1, x0
  4127a0:	b.eq	41282c <wcrtomb@plt+0xfa3c>  // b.none
  4127a4:	ldr	x0, [sp, #24]
  4127a8:	ldr	x2, [x0, #320]
  4127ac:	ldr	x1, [sp, #56]
  4127b0:	mov	x0, x1
  4127b4:	lsl	x0, x0, #1
  4127b8:	add	x0, x0, x1
  4127bc:	lsl	x0, x0, #3
  4127c0:	add	x0, x2, x0
  4127c4:	ldr	x0, [x0, #8]
  4127c8:	cmp	x0, #0x0
  4127cc:	b.le	41282c <wcrtomb@plt+0xfa3c>
  4127d0:	ldr	x0, [sp, #24]
  4127d4:	ldr	x2, [x0, #320]
  4127d8:	ldr	x1, [sp, #56]
  4127dc:	mov	x0, x1
  4127e0:	lsl	x0, x0, #1
  4127e4:	add	x0, x0, x1
  4127e8:	lsl	x0, x0, #3
  4127ec:	add	x5, x2, x0
  4127f0:	ldr	x0, [sp, #24]
  4127f4:	ldr	x2, [x0, #320]
  4127f8:	ldr	x1, [sp, #72]
  4127fc:	mov	x0, x1
  412800:	lsl	x0, x0, #1
  412804:	add	x0, x0, x1
  412808:	lsl	x0, x0, #3
  41280c:	add	x0, x2, x0
  412810:	add	x1, sp, #0x20
  412814:	mov	x4, x1
  412818:	ldr	w3, [sp, #68]
  41281c:	mov	x2, x0
  412820:	ldr	x1, [sp, #72]
  412824:	mov	x0, x5
  412828:	bl	412018 <wcrtomb@plt+0xf228>
  41282c:	ldr	x0, [sp, #56]
  412830:	add	x0, x0, #0x1
  412834:	str	x0, [sp, #56]
  412838:	ldr	x0, [sp, #24]
  41283c:	ldr	x0, [x0, #152]
  412840:	ldr	x1, [sp, #56]
  412844:	cmp	x1, x0
  412848:	b.lt	412794 <wcrtomb@plt+0xf9a4>  // b.tstop
  41284c:	ldr	x0, [sp, #72]
  412850:	add	x0, x0, #0x1
  412854:	str	x0, [sp, #72]
  412858:	ldr	x0, [sp, #24]
  41285c:	ldr	x0, [x0, #152]
  412860:	ldr	x1, [sp, #72]
  412864:	cmp	x1, x0
  412868:	b.lt	4125d4 <wcrtomb@plt+0xf7e4>  // b.tstop
  41286c:	ldr	x0, [sp, #32]
  412870:	bl	402b60 <free@plt>
  412874:	nop
  412878:	ldp	x29, x30, [sp], #80
  41287c:	ret
  412880:	sub	sp, sp, #0x20
  412884:	str	x0, [sp, #8]
  412888:	str	x1, [sp]
  41288c:	str	wzr, [sp, #28]
  412890:	str	wzr, [sp, #24]
  412894:	b	412958 <wcrtomb@plt+0xfb68>
  412898:	ldr	x0, [sp]
  41289c:	ldrsw	x1, [sp, #24]
  4128a0:	ldr	x1, [x0, x1, lsl #3]
  4128a4:	ldr	x0, [sp, #8]
  4128a8:	ldrsw	x2, [sp, #24]
  4128ac:	add	x2, x2, #0x7e
  4128b0:	ldr	x0, [x0, x2, lsl #3]
  4128b4:	and	x0, x1, x0
  4128b8:	cmp	x0, #0x0
  4128bc:	b.eq	4128cc <wcrtomb@plt+0xfadc>  // b.none
  4128c0:	ldr	w0, [sp, #28]
  4128c4:	orr	w0, w0, #0x4
  4128c8:	str	w0, [sp, #28]
  4128cc:	ldr	x0, [sp]
  4128d0:	ldrsw	x1, [sp, #24]
  4128d4:	ldr	x1, [x0, x1, lsl #3]
  4128d8:	ldr	x0, [sp, #8]
  4128dc:	ldrsw	x2, [sp, #24]
  4128e0:	add	x2, x2, #0x7a
  4128e4:	ldr	x0, [x0, x2, lsl #3]
  4128e8:	and	x0, x1, x0
  4128ec:	cmp	x0, #0x0
  4128f0:	b.eq	412900 <wcrtomb@plt+0xfb10>  // b.none
  4128f4:	ldr	w0, [sp, #28]
  4128f8:	orr	w0, w0, #0x2
  4128fc:	str	w0, [sp, #28]
  412900:	ldr	x0, [sp]
  412904:	ldrsw	x1, [sp, #24]
  412908:	ldr	x1, [x0, x1, lsl #3]
  41290c:	ldr	x0, [sp, #8]
  412910:	ldrsw	x2, [sp, #24]
  412914:	add	x2, x2, #0x7a
  412918:	ldr	x2, [x0, x2, lsl #3]
  41291c:	ldr	x0, [sp, #8]
  412920:	ldrsw	x3, [sp, #24]
  412924:	add	x3, x3, #0x7e
  412928:	ldr	x0, [x0, x3, lsl #3]
  41292c:	orr	x0, x2, x0
  412930:	mvn	x0, x0
  412934:	and	x0, x1, x0
  412938:	cmp	x0, #0x0
  41293c:	b.eq	41294c <wcrtomb@plt+0xfb5c>  // b.none
  412940:	ldr	w0, [sp, #28]
  412944:	orr	w0, w0, #0x1
  412948:	str	w0, [sp, #28]
  41294c:	ldr	w0, [sp, #24]
  412950:	add	w0, w0, #0x1
  412954:	str	w0, [sp, #24]
  412958:	ldr	w0, [sp, #24]
  41295c:	cmp	w0, #0x3
  412960:	b.le	412898 <wcrtomb@plt+0xfaa8>
  412964:	ldr	w0, [sp, #28]
  412968:	add	sp, sp, #0x20
  41296c:	ret
  412970:	sub	sp, sp, #0x20
  412974:	str	x0, [sp, #8]
  412978:	str	x1, [sp]
  41297c:	str	wzr, [sp, #28]
  412980:	str	xzr, [sp, #16]
  412984:	b	4129cc <wcrtomb@plt+0xfbdc>
  412988:	ldr	x0, [sp, #8]
  41298c:	ldr	x1, [x0, #344]
  412990:	ldr	x0, [sp]
  412994:	ldr	x2, [x0]
  412998:	ldr	x0, [sp, #16]
  41299c:	lsl	x0, x0, #4
  4129a0:	add	x0, x2, x0
  4129a4:	ldr	x0, [x0]
  4129a8:	lsl	x0, x0, #2
  4129ac:	add	x0, x1, x0
  4129b0:	ldr	w0, [x0]
  4129b4:	ldr	w1, [sp, #28]
  4129b8:	orr	w0, w1, w0
  4129bc:	str	w0, [sp, #28]
  4129c0:	ldr	x0, [sp, #16]
  4129c4:	add	x0, x0, #0x1
  4129c8:	str	x0, [sp, #16]
  4129cc:	ldr	x0, [sp]
  4129d0:	ldr	x0, [x0, #8]
  4129d4:	ldr	x1, [sp, #16]
  4129d8:	cmp	x1, x0
  4129dc:	b.lt	412988 <wcrtomb@plt+0xfb98>  // b.tstop
  4129e0:	ldr	w0, [sp, #28]
  4129e4:	add	sp, sp, #0x20
  4129e8:	ret
  4129ec:	stp	x29, x30, [sp, #-112]!
  4129f0:	mov	x29, sp
  4129f4:	str	x0, [sp, #40]
  4129f8:	str	x1, [sp, #32]
  4129fc:	str	x2, [sp, #24]
  412a00:	str	x3, [sp, #16]
  412a04:	ldr	x0, [sp, #40]
  412a08:	ldr	x0, [x0, #320]
  412a0c:	str	x0, [sp, #80]
  412a10:	str	xzr, [sp, #104]
  412a14:	ldr	x0, [sp, #40]
  412a18:	ldr	x1, [x0, #336]
  412a1c:	ldr	x0, [sp, #32]
  412a20:	lsl	x0, x0, #2
  412a24:	add	x0, x1, x0
  412a28:	str	wzr, [x0]
  412a2c:	str	xzr, [sp, #96]
  412a30:	b	412e30 <wcrtomb@plt+0x10040>
  412a34:	ldr	x1, [sp, #32]
  412a38:	mov	x0, x1
  412a3c:	lsl	x0, x0, #1
  412a40:	add	x0, x0, x1
  412a44:	lsl	x0, x0, #3
  412a48:	mov	x1, x0
  412a4c:	ldr	x0, [sp, #80]
  412a50:	add	x0, x0, x1
  412a54:	ldr	x1, [x0]
  412a58:	ldr	x0, [sp, #96]
  412a5c:	lsl	x0, x0, #4
  412a60:	add	x0, x1, x0
  412a64:	ldr	x0, [x0]
  412a68:	str	x0, [sp, #72]
  412a6c:	ldr	x1, [sp, #32]
  412a70:	mov	x0, x1
  412a74:	lsl	x0, x0, #1
  412a78:	add	x0, x0, x1
  412a7c:	lsl	x0, x0, #3
  412a80:	mov	x1, x0
  412a84:	ldr	x0, [sp, #80]
  412a88:	add	x0, x0, x1
  412a8c:	ldr	x1, [x0]
  412a90:	ldr	x0, [sp, #96]
  412a94:	lsl	x0, x0, #4
  412a98:	add	x0, x1, x0
  412a9c:	ldr	w0, [x0, #8]
  412aa0:	str	w0, [sp, #68]
  412aa4:	ldr	w0, [sp, #68]
  412aa8:	cmp	w0, #0x0
  412aac:	b.eq	412e18 <wcrtomb@plt+0x10028>  // b.none
  412ab0:	ldr	x0, [sp, #40]
  412ab4:	ldr	x2, [x0, #144]
  412ab8:	ldr	x1, [sp, #32]
  412abc:	mov	x0, x1
  412ac0:	lsl	x0, x0, #1
  412ac4:	add	x0, x0, x1
  412ac8:	lsl	x0, x0, #3
  412acc:	mov	x1, x0
  412ad0:	ldr	x0, [sp, #80]
  412ad4:	add	x0, x0, x1
  412ad8:	ldr	x1, [x0]
  412adc:	ldr	x0, [sp, #96]
  412ae0:	lsl	x0, x0, #4
  412ae4:	add	x0, x1, x0
  412ae8:	ldr	x0, [x0]
  412aec:	lsl	x0, x0, #3
  412af0:	add	x0, x2, x0
  412af4:	ldr	x0, [x0]
  412af8:	cmp	x0, #0x0
  412afc:	b.ge	412b74 <wcrtomb@plt+0xfd84>  // b.tcont
  412b00:	ldr	x0, [sp, #40]
  412b04:	ldr	x1, [x0, #336]
  412b08:	ldr	x0, [sp, #32]
  412b0c:	lsl	x0, x0, #2
  412b10:	add	x0, x1, x0
  412b14:	ldr	w0, [x0]
  412b18:	mov	w2, w0
  412b1c:	ldr	x1, [sp, #32]
  412b20:	mov	x0, x1
  412b24:	lsl	x0, x0, #1
  412b28:	add	x0, x0, x1
  412b2c:	lsl	x0, x0, #3
  412b30:	mov	x1, x0
  412b34:	ldr	x0, [sp, #80]
  412b38:	add	x0, x0, x1
  412b3c:	ldr	x1, [x0]
  412b40:	ldr	x0, [sp, #96]
  412b44:	lsl	x0, x0, #4
  412b48:	add	x0, x1, x0
  412b4c:	ldr	w0, [x0, #8]
  412b50:	orr	w2, w2, w0
  412b54:	ldr	x0, [sp, #40]
  412b58:	ldr	x1, [x0, #336]
  412b5c:	ldr	x0, [sp, #32]
  412b60:	lsl	x0, x0, #2
  412b64:	add	x0, x1, x0
  412b68:	mov	w1, w2
  412b6c:	str	w1, [x0]
  412b70:	b	412e24 <wcrtomb@plt+0x10034>
  412b74:	ldr	x0, [sp, #72]
  412b78:	ldr	x1, [sp, #24]
  412b7c:	add	x0, x1, x0
  412b80:	ldrb	w0, [x0]
  412b84:	and	w0, w0, #0x6
  412b88:	cmp	w0, #0x0
  412b8c:	b.ne	412d7c <wcrtomb@plt+0xff8c>  // b.any
  412b90:	str	xzr, [sp, #88]
  412b94:	b	412d5c <wcrtomb@plt+0xff6c>
  412b98:	ldr	x1, [sp, #32]
  412b9c:	mov	x0, x1
  412ba0:	lsl	x0, x0, #1
  412ba4:	add	x0, x0, x1
  412ba8:	lsl	x0, x0, #3
  412bac:	mov	x1, x0
  412bb0:	ldr	x0, [sp, #80]
  412bb4:	add	x0, x0, x1
  412bb8:	ldr	x1, [x0]
  412bbc:	ldr	x0, [sp, #88]
  412bc0:	lsl	x0, x0, #4
  412bc4:	add	x0, x1, x0
  412bc8:	ldr	x0, [x0]
  412bcc:	str	x0, [sp, #56]
  412bd0:	ldr	x1, [sp, #32]
  412bd4:	mov	x0, x1
  412bd8:	lsl	x0, x0, #1
  412bdc:	add	x0, x0, x1
  412be0:	lsl	x0, x0, #3
  412be4:	mov	x1, x0
  412be8:	ldr	x0, [sp, #80]
  412bec:	add	x0, x0, x1
  412bf0:	ldr	x1, [x0]
  412bf4:	ldr	x0, [sp, #88]
  412bf8:	lsl	x0, x0, #4
  412bfc:	add	x0, x1, x0
  412c00:	ldr	w0, [x0, #8]
  412c04:	ldr	w1, [sp, #68]
  412c08:	cmp	w1, w0
  412c0c:	b.ne	412d34 <wcrtomb@plt+0xff44>  // b.any
  412c10:	ldr	x0, [sp, #56]
  412c14:	ldr	x1, [sp, #24]
  412c18:	add	x0, x1, x0
  412c1c:	ldrb	w0, [x0]
  412c20:	and	w0, w0, #0x6
  412c24:	cmp	w0, #0x0
  412c28:	b.ne	412d3c <wcrtomb@plt+0xff4c>  // b.any
  412c2c:	ldr	x0, [sp, #40]
  412c30:	ldr	x1, [x0, #144]
  412c34:	ldr	x0, [sp, #72]
  412c38:	lsl	x0, x0, #3
  412c3c:	add	x0, x1, x0
  412c40:	ldr	x1, [x0]
  412c44:	ldr	x0, [sp, #40]
  412c48:	ldr	x2, [x0, #144]
  412c4c:	ldr	x0, [sp, #56]
  412c50:	lsl	x0, x0, #3
  412c54:	add	x0, x2, x0
  412c58:	ldr	x0, [x0]
  412c5c:	cmp	x1, x0
  412c60:	b.ne	412d44 <wcrtomb@plt+0xff54>  // b.any
  412c64:	ldr	x0, [sp, #72]
  412c68:	ldr	x1, [sp, #24]
  412c6c:	add	x0, x1, x0
  412c70:	ldrb	w1, [x0]
  412c74:	ldr	x0, [sp, #56]
  412c78:	ldr	x2, [sp, #24]
  412c7c:	add	x0, x2, x0
  412c80:	ldrb	w0, [x0]
  412c84:	eor	w0, w1, w0
  412c88:	and	w0, w0, #0xff
  412c8c:	and	w0, w0, #0x1
  412c90:	cmp	w0, #0x0
  412c94:	b.ne	412d4c <wcrtomb@plt+0xff5c>  // b.any
  412c98:	ldr	x0, [sp, #72]
  412c9c:	ldr	x1, [sp, #24]
  412ca0:	add	x0, x1, x0
  412ca4:	ldrb	w0, [x0]
  412ca8:	and	w0, w0, #0x1
  412cac:	cmp	w0, #0x0
  412cb0:	b.eq	412ce0 <wcrtomb@plt+0xfef0>  // b.none
  412cb4:	ldr	x1, [sp, #72]
  412cb8:	mov	x0, x1
  412cbc:	lsl	x0, x0, #1
  412cc0:	add	x0, x0, x1
  412cc4:	lsl	x0, x0, #3
  412cc8:	mov	x1, x0
  412ccc:	ldr	x0, [sp, #80]
  412cd0:	add	x0, x0, x1
  412cd4:	mov	x1, x0
  412cd8:	ldr	x0, [sp, #72]
  412cdc:	bl	411ed0 <wcrtomb@plt+0xf0e0>
  412ce0:	ldr	x1, [sp, #56]
  412ce4:	mov	x0, x1
  412ce8:	lsl	x0, x0, #1
  412cec:	add	x0, x0, x1
  412cf0:	lsl	x0, x0, #3
  412cf4:	mov	x1, x0
  412cf8:	ldr	x0, [sp, #80]
  412cfc:	add	x3, x0, x1
  412d00:	ldr	x1, [sp, #72]
  412d04:	mov	x0, x1
  412d08:	lsl	x0, x0, #1
  412d0c:	add	x0, x0, x1
  412d10:	lsl	x0, x0, #3
  412d14:	mov	x1, x0
  412d18:	ldr	x0, [sp, #80]
  412d1c:	add	x0, x0, x1
  412d20:	ldr	x2, [sp, #16]
  412d24:	mov	x1, x0
  412d28:	mov	x0, x3
  412d2c:	bl	411e38 <wcrtomb@plt+0xf048>
  412d30:	b	412d6c <wcrtomb@plt+0xff7c>
  412d34:	nop
  412d38:	b	412d50 <wcrtomb@plt+0xff60>
  412d3c:	nop
  412d40:	b	412d50 <wcrtomb@plt+0xff60>
  412d44:	nop
  412d48:	b	412d50 <wcrtomb@plt+0xff60>
  412d4c:	nop
  412d50:	ldr	x0, [sp, #88]
  412d54:	add	x0, x0, #0x1
  412d58:	str	x0, [sp, #88]
  412d5c:	ldr	x1, [sp, #88]
  412d60:	ldr	x0, [sp, #104]
  412d64:	cmp	x1, x0
  412d68:	b.lt	412b98 <wcrtomb@plt+0xfda8>  // b.tstop
  412d6c:	ldr	x1, [sp, #88]
  412d70:	ldr	x0, [sp, #104]
  412d74:	cmp	x1, x0
  412d78:	b.lt	412e20 <wcrtomb@plt+0x10030>  // b.tstop
  412d7c:	ldr	x1, [sp, #32]
  412d80:	mov	x0, x1
  412d84:	lsl	x0, x0, #1
  412d88:	add	x0, x0, x1
  412d8c:	lsl	x0, x0, #3
  412d90:	mov	x1, x0
  412d94:	ldr	x0, [sp, #80]
  412d98:	add	x0, x0, x1
  412d9c:	ldr	x1, [x0]
  412da0:	ldr	x0, [sp, #96]
  412da4:	lsl	x0, x0, #4
  412da8:	add	x3, x1, x0
  412dac:	ldr	x1, [sp, #32]
  412db0:	mov	x0, x1
  412db4:	lsl	x0, x0, #1
  412db8:	add	x0, x0, x1
  412dbc:	lsl	x0, x0, #3
  412dc0:	mov	x1, x0
  412dc4:	ldr	x0, [sp, #80]
  412dc8:	add	x0, x0, x1
  412dcc:	ldr	x1, [x0]
  412dd0:	ldr	x0, [sp, #104]
  412dd4:	add	x2, x0, #0x1
  412dd8:	str	x2, [sp, #104]
  412ddc:	lsl	x0, x0, #4
  412de0:	add	x2, x1, x0
  412de4:	ldp	x0, x1, [x3]
  412de8:	stp	x0, x1, [x2]
  412dec:	ldr	x0, [sp, #72]
  412df0:	ldr	x1, [sp, #24]
  412df4:	add	x0, x1, x0
  412df8:	ldrb	w1, [x0]
  412dfc:	ldr	x0, [sp, #72]
  412e00:	ldr	x2, [sp, #24]
  412e04:	add	x0, x2, x0
  412e08:	orr	w1, w1, #0x10
  412e0c:	and	w1, w1, #0xff
  412e10:	strb	w1, [x0]
  412e14:	b	412e24 <wcrtomb@plt+0x10034>
  412e18:	nop
  412e1c:	b	412e24 <wcrtomb@plt+0x10034>
  412e20:	nop
  412e24:	ldr	x0, [sp, #96]
  412e28:	add	x0, x0, #0x1
  412e2c:	str	x0, [sp, #96]
  412e30:	ldr	x1, [sp, #32]
  412e34:	mov	x0, x1
  412e38:	lsl	x0, x0, #1
  412e3c:	add	x0, x0, x1
  412e40:	lsl	x0, x0, #3
  412e44:	mov	x1, x0
  412e48:	ldr	x0, [sp, #80]
  412e4c:	add	x0, x0, x1
  412e50:	ldr	x0, [x0, #8]
  412e54:	ldr	x1, [sp, #96]
  412e58:	cmp	x1, x0
  412e5c:	b.lt	412a34 <wcrtomb@plt+0xfc44>  // b.tstop
  412e60:	ldr	x1, [sp, #32]
  412e64:	mov	x0, x1
  412e68:	lsl	x0, x0, #1
  412e6c:	add	x0, x0, x1
  412e70:	lsl	x0, x0, #3
  412e74:	mov	x1, x0
  412e78:	ldr	x0, [sp, #80]
  412e7c:	add	x0, x0, x1
  412e80:	ldr	x1, [sp, #104]
  412e84:	str	x1, [x0, #8]
  412e88:	nop
  412e8c:	ldp	x29, x30, [sp], #112
  412e90:	ret
  412e94:	sub	sp, sp, #0x20
  412e98:	str	x0, [sp, #8]
  412e9c:	str	x1, [sp]
  412ea0:	ldr	x0, [sp, #8]
  412ea4:	str	x0, [sp, #24]
  412ea8:	ldr	x0, [sp]
  412eac:	str	x0, [sp, #16]
  412eb0:	ldr	x0, [sp, #24]
  412eb4:	ldr	x1, [x0]
  412eb8:	ldr	x0, [sp, #16]
  412ebc:	ldr	x0, [x0]
  412ec0:	cmp	x1, x0
  412ec4:	b.lt	412ee8 <wcrtomb@plt+0x100f8>  // b.tstop
  412ec8:	ldr	x0, [sp, #24]
  412ecc:	ldr	x1, [x0]
  412ed0:	ldr	x0, [sp, #16]
  412ed4:	ldr	x0, [x0]
  412ed8:	cmp	x1, x0
  412edc:	cset	w0, gt
  412ee0:	and	w0, w0, #0xff
  412ee4:	b	412eec <wcrtomb@plt+0x100fc>
  412ee8:	mov	w0, #0xffffffff            	// #-1
  412eec:	add	sp, sp, #0x20
  412ef0:	ret
  412ef4:	stp	x29, x30, [sp, #-112]!
  412ef8:	mov	x29, sp
  412efc:	str	x0, [sp, #24]
  412f00:	str	xzr, [sp, #104]
  412f04:	ldr	x0, [sp, #24]
  412f08:	ldr	x0, [x0, #152]
  412f0c:	mov	x1, #0x8                   	// #8
  412f10:	bl	41b69c <wcrtomb@plt+0x188ac>
  412f14:	str	x0, [sp, #56]
  412f18:	ldr	x0, [sp, #104]
  412f1c:	add	x1, x0, #0x1
  412f20:	str	x1, [sp, #104]
  412f24:	ldr	x1, [sp, #56]
  412f28:	str	x0, [x1]
  412f2c:	mov	x0, #0x1                   	// #1
  412f30:	str	x0, [sp, #88]
  412f34:	b	412f5c <wcrtomb@plt+0x1016c>
  412f38:	ldr	x0, [sp, #88]
  412f3c:	lsl	x0, x0, #3
  412f40:	ldr	x1, [sp, #56]
  412f44:	add	x0, x1, x0
  412f48:	mov	x1, #0xffffffffffffffff    	// #-1
  412f4c:	str	x1, [x0]
  412f50:	ldr	x0, [sp, #88]
  412f54:	add	x0, x0, #0x1
  412f58:	str	x0, [sp, #88]
  412f5c:	ldr	x0, [sp, #24]
  412f60:	ldr	x0, [x0, #152]
  412f64:	ldr	x1, [sp, #88]
  412f68:	cmp	x1, x0
  412f6c:	b.lt	412f38 <wcrtomb@plt+0x10148>  // b.tstop
  412f70:	ldr	x0, [sp, #24]
  412f74:	ldr	x0, [x0, #176]
  412f78:	mov	x1, #0x8                   	// #8
  412f7c:	bl	41b69c <wcrtomb@plt+0x188ac>
  412f80:	str	x0, [sp, #48]
  412f84:	ldr	x0, [sp, #24]
  412f88:	ldr	x0, [x0, #176]
  412f8c:	mov	x1, #0x18                  	// #24
  412f90:	bl	41b69c <wcrtomb@plt+0x188ac>
  412f94:	str	x0, [sp, #40]
  412f98:	ldr	x0, [sp, #24]
  412f9c:	ldr	x0, [x0, #176]
  412fa0:	mov	x1, #0x4                   	// #4
  412fa4:	bl	41b69c <wcrtomb@plt+0x188ac>
  412fa8:	str	x0, [sp, #32]
  412fac:	ldr	x0, [sp, #24]
  412fb0:	ldrb	w0, [x0, #1048]
  412fb4:	cmp	w0, #0x0
  412fb8:	b.eq	412fd4 <wcrtomb@plt+0x101e4>  // b.none
  412fbc:	ldr	x0, [sp, #24]
  412fc0:	ldr	x0, [x0, #176]
  412fc4:	mov	x1, #0x1                   	// #1
  412fc8:	bl	41b69c <wcrtomb@plt+0x188ac>
  412fcc:	str	x0, [sp, #96]
  412fd0:	b	412fd8 <wcrtomb@plt+0x101e8>
  412fd4:	str	xzr, [sp, #96]
  412fd8:	str	xzr, [sp, #80]
  412fdc:	b	413358 <wcrtomb@plt+0x10568>
  412fe0:	ldr	x0, [sp, #80]
  412fe4:	lsl	x0, x0, #3
  412fe8:	ldr	x1, [sp, #56]
  412fec:	add	x0, x1, x0
  412ff0:	ldr	x0, [x0]
  412ff4:	cmn	x0, #0x1
  412ff8:	b.ne	413070 <wcrtomb@plt+0x10280>  // b.any
  412ffc:	ldr	x0, [sp, #24]
  413000:	ldr	x2, [x0, #320]
  413004:	ldr	x1, [sp, #80]
  413008:	mov	x0, x1
  41300c:	lsl	x0, x0, #1
  413010:	add	x0, x0, x1
  413014:	lsl	x0, x0, #3
  413018:	add	x0, x2, x0
  41301c:	ldr	x0, [x0]
  413020:	bl	402b60 <free@plt>
  413024:	ldr	x0, [sp, #24]
  413028:	ldr	x2, [x0, #320]
  41302c:	ldr	x1, [sp, #80]
  413030:	mov	x0, x1
  413034:	lsl	x0, x0, #1
  413038:	add	x0, x0, x1
  41303c:	lsl	x0, x0, #3
  413040:	add	x0, x2, x0
  413044:	str	xzr, [x0]
  413048:	ldr	x0, [sp, #24]
  41304c:	ldr	x2, [x0, #320]
  413050:	ldr	x1, [sp, #80]
  413054:	mov	x0, x1
  413058:	lsl	x0, x0, #1
  41305c:	add	x0, x0, x1
  413060:	lsl	x0, x0, #3
  413064:	add	x0, x2, x0
  413068:	str	xzr, [x0, #8]
  41306c:	b	41334c <wcrtomb@plt+0x1055c>
  413070:	ldr	x0, [sp, #24]
  413074:	ldr	x1, [x0, #144]
  413078:	ldr	x0, [sp, #80]
  41307c:	lsl	x0, x0, #3
  413080:	add	x1, x1, x0
  413084:	ldr	x0, [sp, #80]
  413088:	lsl	x0, x0, #3
  41308c:	ldr	x2, [sp, #56]
  413090:	add	x0, x2, x0
  413094:	ldr	x0, [x0]
  413098:	lsl	x0, x0, #3
  41309c:	ldr	x2, [sp, #48]
  4130a0:	add	x0, x2, x0
  4130a4:	ldr	x1, [x1]
  4130a8:	str	x1, [x0]
  4130ac:	ldr	x0, [sp, #24]
  4130b0:	ldr	x2, [x0, #320]
  4130b4:	ldr	x1, [sp, #80]
  4130b8:	mov	x0, x1
  4130bc:	lsl	x0, x0, #1
  4130c0:	add	x0, x0, x1
  4130c4:	lsl	x0, x0, #3
  4130c8:	add	x3, x2, x0
  4130cc:	ldr	x0, [sp, #80]
  4130d0:	lsl	x0, x0, #3
  4130d4:	ldr	x1, [sp, #56]
  4130d8:	add	x0, x1, x0
  4130dc:	ldr	x0, [x0]
  4130e0:	mov	x1, x0
  4130e4:	mov	x0, x1
  4130e8:	lsl	x0, x0, #1
  4130ec:	add	x0, x0, x1
  4130f0:	lsl	x0, x0, #3
  4130f4:	mov	x1, x0
  4130f8:	ldr	x0, [sp, #40]
  4130fc:	add	x0, x0, x1
  413100:	mov	x2, x0
  413104:	ldp	x0, x1, [x3]
  413108:	stp	x0, x1, [x2]
  41310c:	ldr	x0, [x3, #16]
  413110:	str	x0, [x2, #16]
  413114:	ldr	x0, [sp, #24]
  413118:	ldr	x1, [x0, #336]
  41311c:	ldr	x0, [sp, #80]
  413120:	lsl	x0, x0, #2
  413124:	add	x1, x1, x0
  413128:	ldr	x0, [sp, #80]
  41312c:	lsl	x0, x0, #3
  413130:	ldr	x2, [sp, #56]
  413134:	add	x0, x2, x0
  413138:	ldr	x0, [x0]
  41313c:	lsl	x0, x0, #2
  413140:	ldr	x2, [sp, #32]
  413144:	add	x0, x2, x0
  413148:	ldr	w1, [x1]
  41314c:	str	w1, [x0]
  413150:	ldr	x0, [sp, #96]
  413154:	cmp	x0, #0x0
  413158:	b.eq	413194 <wcrtomb@plt+0x103a4>  // b.none
  41315c:	ldr	x0, [sp, #24]
  413160:	ldr	x1, [x0, #280]
  413164:	ldr	x0, [sp, #80]
  413168:	add	x1, x1, x0
  41316c:	ldr	x0, [sp, #80]
  413170:	lsl	x0, x0, #3
  413174:	ldr	x2, [sp, #56]
  413178:	add	x0, x2, x0
  41317c:	ldr	x0, [x0]
  413180:	mov	x2, x0
  413184:	ldr	x0, [sp, #96]
  413188:	add	x0, x0, x2
  41318c:	ldrb	w1, [x1]
  413190:	strb	w1, [x0]
  413194:	str	xzr, [sp, #72]
  413198:	b	4132bc <wcrtomb@plt+0x104cc>
  41319c:	ldr	x0, [sp, #24]
  4131a0:	ldr	x2, [x0, #320]
  4131a4:	ldr	x1, [sp, #80]
  4131a8:	mov	x0, x1
  4131ac:	lsl	x0, x0, #1
  4131b0:	add	x0, x0, x1
  4131b4:	lsl	x0, x0, #3
  4131b8:	add	x0, x2, x0
  4131bc:	ldr	x1, [x0]
  4131c0:	ldr	x0, [sp, #72]
  4131c4:	lsl	x0, x0, #4
  4131c8:	add	x0, x1, x0
  4131cc:	ldr	x0, [x0]
  4131d0:	lsl	x0, x0, #3
  4131d4:	ldr	x1, [sp, #56]
  4131d8:	add	x0, x1, x0
  4131dc:	ldr	x0, [x0]
  4131e0:	cmn	x0, #0x1
  4131e4:	b.ne	413238 <wcrtomb@plt+0x10448>  // b.any
  4131e8:	ldr	x1, [sp, #104]
  4131ec:	add	x0, x1, #0x1
  4131f0:	str	x0, [sp, #104]
  4131f4:	ldr	x0, [sp, #24]
  4131f8:	ldr	x3, [x0, #320]
  4131fc:	ldr	x2, [sp, #80]
  413200:	mov	x0, x2
  413204:	lsl	x0, x0, #1
  413208:	add	x0, x0, x2
  41320c:	lsl	x0, x0, #3
  413210:	add	x0, x3, x0
  413214:	ldr	x2, [x0]
  413218:	ldr	x0, [sp, #72]
  41321c:	lsl	x0, x0, #4
  413220:	add	x0, x2, x0
  413224:	ldr	x0, [x0]
  413228:	lsl	x0, x0, #3
  41322c:	ldr	x2, [sp, #56]
  413230:	add	x0, x2, x0
  413234:	str	x1, [x0]
  413238:	ldr	x0, [sp, #24]
  41323c:	ldr	x2, [x0, #320]
  413240:	ldr	x1, [sp, #80]
  413244:	mov	x0, x1
  413248:	lsl	x0, x0, #1
  41324c:	add	x0, x0, x1
  413250:	lsl	x0, x0, #3
  413254:	add	x0, x2, x0
  413258:	ldr	x1, [x0]
  41325c:	ldr	x0, [sp, #72]
  413260:	lsl	x0, x0, #4
  413264:	add	x0, x1, x0
  413268:	ldr	x0, [x0]
  41326c:	lsl	x0, x0, #3
  413270:	ldr	x1, [sp, #56]
  413274:	add	x2, x1, x0
  413278:	ldr	x0, [sp, #24]
  41327c:	ldr	x3, [x0, #320]
  413280:	ldr	x1, [sp, #80]
  413284:	mov	x0, x1
  413288:	lsl	x0, x0, #1
  41328c:	add	x0, x0, x1
  413290:	lsl	x0, x0, #3
  413294:	add	x0, x3, x0
  413298:	ldr	x1, [x0]
  41329c:	ldr	x0, [sp, #72]
  4132a0:	lsl	x0, x0, #4
  4132a4:	add	x0, x1, x0
  4132a8:	ldr	x1, [x2]
  4132ac:	str	x1, [x0]
  4132b0:	ldr	x0, [sp, #72]
  4132b4:	add	x0, x0, #0x1
  4132b8:	str	x0, [sp, #72]
  4132bc:	ldr	x0, [sp, #24]
  4132c0:	ldr	x2, [x0, #320]
  4132c4:	ldr	x1, [sp, #80]
  4132c8:	mov	x0, x1
  4132cc:	lsl	x0, x0, #1
  4132d0:	add	x0, x0, x1
  4132d4:	lsl	x0, x0, #3
  4132d8:	add	x0, x2, x0
  4132dc:	ldr	x0, [x0, #8]
  4132e0:	ldr	x1, [sp, #72]
  4132e4:	cmp	x1, x0
  4132e8:	b.lt	41319c <wcrtomb@plt+0x103ac>  // b.tstop
  4132ec:	ldr	x0, [sp, #24]
  4132f0:	ldr	x2, [x0, #320]
  4132f4:	ldr	x1, [sp, #80]
  4132f8:	mov	x0, x1
  4132fc:	lsl	x0, x0, #1
  413300:	add	x0, x0, x1
  413304:	lsl	x0, x0, #3
  413308:	add	x0, x2, x0
  41330c:	ldr	x4, [x0]
  413310:	ldr	x0, [sp, #24]
  413314:	ldr	x2, [x0, #320]
  413318:	ldr	x1, [sp, #80]
  41331c:	mov	x0, x1
  413320:	lsl	x0, x0, #1
  413324:	add	x0, x0, x1
  413328:	lsl	x0, x0, #3
  41332c:	add	x0, x2, x0
  413330:	ldr	x0, [x0, #8]
  413334:	mov	x1, x0
  413338:	adrp	x0, 412000 <wcrtomb@plt+0xf210>
  41333c:	add	x3, x0, #0xe94
  413340:	mov	x2, #0x10                  	// #16
  413344:	mov	x0, x4
  413348:	bl	4027d0 <qsort@plt>
  41334c:	ldr	x0, [sp, #80]
  413350:	add	x0, x0, #0x1
  413354:	str	x0, [sp, #80]
  413358:	ldr	x0, [sp, #24]
  41335c:	ldr	x0, [x0, #152]
  413360:	ldr	x1, [sp, #80]
  413364:	cmp	x1, x0
  413368:	b.lt	412fe0 <wcrtomb@plt+0x101f0>  // b.tstop
  41336c:	str	xzr, [sp, #64]
  413370:	b	41345c <wcrtomb@plt+0x1066c>
  413374:	ldr	x0, [sp, #64]
  413378:	lsl	x0, x0, #3
  41337c:	ldr	x1, [sp, #48]
  413380:	add	x1, x1, x0
  413384:	ldr	x0, [sp, #24]
  413388:	ldr	x2, [x0, #144]
  41338c:	ldr	x0, [sp, #64]
  413390:	lsl	x0, x0, #3
  413394:	add	x0, x2, x0
  413398:	ldr	x1, [x1]
  41339c:	str	x1, [x0]
  4133a0:	ldr	x1, [sp, #64]
  4133a4:	mov	x0, x1
  4133a8:	lsl	x0, x0, #1
  4133ac:	add	x0, x0, x1
  4133b0:	lsl	x0, x0, #3
  4133b4:	mov	x1, x0
  4133b8:	ldr	x0, [sp, #40]
  4133bc:	add	x3, x0, x1
  4133c0:	ldr	x0, [sp, #24]
  4133c4:	ldr	x2, [x0, #320]
  4133c8:	ldr	x1, [sp, #64]
  4133cc:	mov	x0, x1
  4133d0:	lsl	x0, x0, #1
  4133d4:	add	x0, x0, x1
  4133d8:	lsl	x0, x0, #3
  4133dc:	add	x0, x2, x0
  4133e0:	mov	x2, x0
  4133e4:	ldp	x0, x1, [x3]
  4133e8:	stp	x0, x1, [x2]
  4133ec:	ldr	x0, [x3, #16]
  4133f0:	str	x0, [x2, #16]
  4133f4:	ldr	x0, [sp, #64]
  4133f8:	lsl	x0, x0, #2
  4133fc:	ldr	x1, [sp, #32]
  413400:	add	x1, x1, x0
  413404:	ldr	x0, [sp, #24]
  413408:	ldr	x2, [x0, #336]
  41340c:	ldr	x0, [sp, #64]
  413410:	lsl	x0, x0, #2
  413414:	add	x0, x2, x0
  413418:	ldr	w1, [x1]
  41341c:	str	w1, [x0]
  413420:	ldr	x0, [sp, #96]
  413424:	cmp	x0, #0x0
  413428:	b.eq	413450 <wcrtomb@plt+0x10660>  // b.none
  41342c:	ldr	x0, [sp, #64]
  413430:	ldr	x1, [sp, #96]
  413434:	add	x1, x1, x0
  413438:	ldr	x0, [sp, #24]
  41343c:	ldr	x2, [x0, #280]
  413440:	ldr	x0, [sp, #64]
  413444:	add	x0, x2, x0
  413448:	ldrb	w1, [x1]
  41344c:	strb	w1, [x0]
  413450:	ldr	x0, [sp, #64]
  413454:	add	x0, x0, #0x1
  413458:	str	x0, [sp, #64]
  41345c:	ldr	x1, [sp, #64]
  413460:	ldr	x0, [sp, #104]
  413464:	cmp	x1, x0
  413468:	b.lt	413374 <wcrtomb@plt+0x10584>  // b.tstop
  41346c:	ldr	x0, [sp, #24]
  413470:	ldr	x1, [sp, #104]
  413474:	str	x1, [x0, #176]
  413478:	ldr	x0, [sp, #24]
  41347c:	ldr	x1, [x0, #176]
  413480:	ldr	x0, [sp, #24]
  413484:	str	x1, [x0, #152]
  413488:	ldr	x0, [sp, #48]
  41348c:	bl	402b60 <free@plt>
  413490:	ldr	x0, [sp, #40]
  413494:	bl	402b60 <free@plt>
  413498:	ldr	x0, [sp, #32]
  41349c:	bl	402b60 <free@plt>
  4134a0:	ldr	x0, [sp, #96]
  4134a4:	bl	402b60 <free@plt>
  4134a8:	ldr	x0, [sp, #56]
  4134ac:	bl	402b60 <free@plt>
  4134b0:	nop
  4134b4:	ldp	x29, x30, [sp], #112
  4134b8:	ret
  4134bc:	stp	x29, x30, [sp, #-96]!
  4134c0:	mov	x29, sp
  4134c4:	str	x0, [sp, #24]
  4134c8:	ldr	x0, [sp, #24]
  4134cc:	ldr	x0, [x0, #152]
  4134d0:	bl	41b9a8 <wcrtomb@plt+0x18bb8>
  4134d4:	str	x0, [sp, #64]
  4134d8:	str	xzr, [sp, #88]
  4134dc:	b	413898 <wcrtomb@plt+0x10aa8>
  4134e0:	str	xzr, [sp, #80]
  4134e4:	b	41385c <wcrtomb@plt+0x10a6c>
  4134e8:	ldr	x0, [sp, #24]
  4134ec:	ldr	x2, [x0, #320]
  4134f0:	ldr	x1, [sp, #88]
  4134f4:	mov	x0, x1
  4134f8:	lsl	x0, x0, #1
  4134fc:	add	x0, x0, x1
  413500:	lsl	x0, x0, #3
  413504:	add	x0, x2, x0
  413508:	ldr	x1, [x0]
  41350c:	ldr	x0, [sp, #80]
  413510:	lsl	x0, x0, #4
  413514:	add	x0, x1, x0
  413518:	ldr	x0, [x0]
  41351c:	ldr	x1, [sp, #88]
  413520:	cmp	x1, x0
  413524:	b.ne	4135bc <wcrtomb@plt+0x107cc>  // b.any
  413528:	ldr	x0, [sp, #24]
  41352c:	ldr	x2, [x0, #320]
  413530:	ldr	x1, [sp, #88]
  413534:	mov	x0, x1
  413538:	lsl	x0, x0, #1
  41353c:	add	x0, x0, x1
  413540:	lsl	x0, x0, #3
  413544:	add	x0, x2, x0
  413548:	ldr	x1, [x0]
  41354c:	ldr	x0, [sp, #80]
  413550:	lsl	x0, x0, #4
  413554:	add	x0, x1, x0
  413558:	ldr	x0, [x0]
  41355c:	mov	x1, x0
  413560:	ldr	x0, [sp, #64]
  413564:	add	x0, x0, x1
  413568:	ldrb	w2, [x0]
  41356c:	ldr	x0, [sp, #24]
  413570:	ldr	x3, [x0, #320]
  413574:	ldr	x1, [sp, #88]
  413578:	mov	x0, x1
  41357c:	lsl	x0, x0, #1
  413580:	add	x0, x0, x1
  413584:	lsl	x0, x0, #3
  413588:	add	x0, x3, x0
  41358c:	ldr	x1, [x0]
  413590:	ldr	x0, [sp, #80]
  413594:	lsl	x0, x0, #4
  413598:	add	x0, x1, x0
  41359c:	ldr	x0, [x0]
  4135a0:	mov	x1, x0
  4135a4:	ldr	x0, [sp, #64]
  4135a8:	add	x0, x0, x1
  4135ac:	orr	w1, w2, #0x1
  4135b0:	and	w1, w1, #0xff
  4135b4:	strb	w1, [x0]
  4135b8:	b	413850 <wcrtomb@plt+0x10a60>
  4135bc:	ldr	x0, [sp, #24]
  4135c0:	ldr	x2, [x0, #320]
  4135c4:	ldr	x1, [sp, #88]
  4135c8:	mov	x0, x1
  4135cc:	lsl	x0, x0, #1
  4135d0:	add	x0, x0, x1
  4135d4:	lsl	x0, x0, #3
  4135d8:	add	x0, x2, x0
  4135dc:	ldr	x1, [x0]
  4135e0:	ldr	x0, [sp, #80]
  4135e4:	lsl	x0, x0, #4
  4135e8:	add	x0, x1, x0
  4135ec:	ldr	x0, [x0]
  4135f0:	ldr	x1, [sp, #88]
  4135f4:	cmp	x1, x0
  4135f8:	b.le	413690 <wcrtomb@plt+0x108a0>
  4135fc:	ldr	x0, [sp, #24]
  413600:	ldr	x2, [x0, #320]
  413604:	ldr	x1, [sp, #88]
  413608:	mov	x0, x1
  41360c:	lsl	x0, x0, #1
  413610:	add	x0, x0, x1
  413614:	lsl	x0, x0, #3
  413618:	add	x0, x2, x0
  41361c:	ldr	x1, [x0]
  413620:	ldr	x0, [sp, #80]
  413624:	lsl	x0, x0, #4
  413628:	add	x0, x1, x0
  41362c:	ldr	x0, [x0]
  413630:	mov	x1, x0
  413634:	ldr	x0, [sp, #64]
  413638:	add	x0, x0, x1
  41363c:	ldrb	w2, [x0]
  413640:	ldr	x0, [sp, #24]
  413644:	ldr	x3, [x0, #320]
  413648:	ldr	x1, [sp, #88]
  41364c:	mov	x0, x1
  413650:	lsl	x0, x0, #1
  413654:	add	x0, x0, x1
  413658:	lsl	x0, x0, #3
  41365c:	add	x0, x3, x0
  413660:	ldr	x1, [x0]
  413664:	ldr	x0, [sp, #80]
  413668:	lsl	x0, x0, #4
  41366c:	add	x0, x1, x0
  413670:	ldr	x0, [x0]
  413674:	mov	x1, x0
  413678:	ldr	x0, [sp, #64]
  41367c:	add	x0, x0, x1
  413680:	orr	w1, w2, #0x2
  413684:	and	w1, w1, #0xff
  413688:	strb	w1, [x0]
  41368c:	b	413850 <wcrtomb@plt+0x10a60>
  413690:	ldr	x0, [sp, #24]
  413694:	ldr	x2, [x0, #320]
  413698:	ldr	x1, [sp, #88]
  41369c:	mov	x0, x1
  4136a0:	lsl	x0, x0, #1
  4136a4:	add	x0, x0, x1
  4136a8:	lsl	x0, x0, #3
  4136ac:	add	x0, x2, x0
  4136b0:	ldr	x1, [x0]
  4136b4:	ldr	x0, [sp, #80]
  4136b8:	lsl	x0, x0, #4
  4136bc:	add	x0, x1, x0
  4136c0:	ldr	x0, [x0]
  4136c4:	mov	x1, x0
  4136c8:	ldr	x0, [sp, #64]
  4136cc:	add	x0, x0, x1
  4136d0:	ldrb	w2, [x0]
  4136d4:	ldr	x0, [sp, #24]
  4136d8:	ldr	x3, [x0, #320]
  4136dc:	ldr	x1, [sp, #88]
  4136e0:	mov	x0, x1
  4136e4:	lsl	x0, x0, #1
  4136e8:	add	x0, x0, x1
  4136ec:	lsl	x0, x0, #3
  4136f0:	add	x0, x3, x0
  4136f4:	ldr	x1, [x0]
  4136f8:	ldr	x0, [sp, #80]
  4136fc:	lsl	x0, x0, #4
  413700:	add	x0, x1, x0
  413704:	ldr	x0, [x0]
  413708:	mov	x1, x0
  41370c:	ldr	x0, [sp, #64]
  413710:	add	x0, x0, x1
  413714:	and	w1, w2, #0x8
  413718:	and	w1, w1, #0xff
  41371c:	strb	w1, [x0]
  413720:	ldrb	w0, [x0]
  413724:	cmp	w0, #0x0
  413728:	b.eq	4137c0 <wcrtomb@plt+0x109d0>  // b.none
  41372c:	ldr	x0, [sp, #24]
  413730:	ldr	x2, [x0, #320]
  413734:	ldr	x1, [sp, #88]
  413738:	mov	x0, x1
  41373c:	lsl	x0, x0, #1
  413740:	add	x0, x0, x1
  413744:	lsl	x0, x0, #3
  413748:	add	x0, x2, x0
  41374c:	ldr	x1, [x0]
  413750:	ldr	x0, [sp, #80]
  413754:	lsl	x0, x0, #4
  413758:	add	x0, x1, x0
  41375c:	ldr	x0, [x0]
  413760:	mov	x1, x0
  413764:	ldr	x0, [sp, #64]
  413768:	add	x0, x0, x1
  41376c:	ldrb	w2, [x0]
  413770:	ldr	x0, [sp, #24]
  413774:	ldr	x3, [x0, #320]
  413778:	ldr	x1, [sp, #88]
  41377c:	mov	x0, x1
  413780:	lsl	x0, x0, #1
  413784:	add	x0, x0, x1
  413788:	lsl	x0, x0, #3
  41378c:	add	x0, x3, x0
  413790:	ldr	x1, [x0]
  413794:	ldr	x0, [sp, #80]
  413798:	lsl	x0, x0, #4
  41379c:	add	x0, x1, x0
  4137a0:	ldr	x0, [x0]
  4137a4:	mov	x1, x0
  4137a8:	ldr	x0, [sp, #64]
  4137ac:	add	x0, x0, x1
  4137b0:	orr	w1, w2, #0x4
  4137b4:	and	w1, w1, #0xff
  4137b8:	strb	w1, [x0]
  4137bc:	b	413850 <wcrtomb@plt+0x10a60>
  4137c0:	ldr	x0, [sp, #24]
  4137c4:	ldr	x2, [x0, #320]
  4137c8:	ldr	x1, [sp, #88]
  4137cc:	mov	x0, x1
  4137d0:	lsl	x0, x0, #1
  4137d4:	add	x0, x0, x1
  4137d8:	lsl	x0, x0, #3
  4137dc:	add	x0, x2, x0
  4137e0:	ldr	x1, [x0]
  4137e4:	ldr	x0, [sp, #80]
  4137e8:	lsl	x0, x0, #4
  4137ec:	add	x0, x1, x0
  4137f0:	ldr	x0, [x0]
  4137f4:	mov	x1, x0
  4137f8:	ldr	x0, [sp, #64]
  4137fc:	add	x0, x0, x1
  413800:	ldrb	w2, [x0]
  413804:	ldr	x0, [sp, #24]
  413808:	ldr	x3, [x0, #320]
  41380c:	ldr	x1, [sp, #88]
  413810:	mov	x0, x1
  413814:	lsl	x0, x0, #1
  413818:	add	x0, x0, x1
  41381c:	lsl	x0, x0, #3
  413820:	add	x0, x3, x0
  413824:	ldr	x1, [x0]
  413828:	ldr	x0, [sp, #80]
  41382c:	lsl	x0, x0, #4
  413830:	add	x0, x1, x0
  413834:	ldr	x0, [x0]
  413838:	mov	x1, x0
  41383c:	ldr	x0, [sp, #64]
  413840:	add	x0, x0, x1
  413844:	orr	w1, w2, #0x8
  413848:	and	w1, w1, #0xff
  41384c:	strb	w1, [x0]
  413850:	ldr	x0, [sp, #80]
  413854:	add	x0, x0, #0x1
  413858:	str	x0, [sp, #80]
  41385c:	ldr	x0, [sp, #24]
  413860:	ldr	x2, [x0, #320]
  413864:	ldr	x1, [sp, #88]
  413868:	mov	x0, x1
  41386c:	lsl	x0, x0, #1
  413870:	add	x0, x0, x1
  413874:	lsl	x0, x0, #3
  413878:	add	x0, x2, x0
  41387c:	ldr	x0, [x0, #8]
  413880:	ldr	x1, [sp, #80]
  413884:	cmp	x1, x0
  413888:	b.lt	4134e8 <wcrtomb@plt+0x106f8>  // b.tstop
  41388c:	ldr	x0, [sp, #88]
  413890:	add	x0, x0, #0x1
  413894:	str	x0, [sp, #88]
  413898:	ldr	x0, [sp, #24]
  41389c:	ldr	x0, [x0, #152]
  4138a0:	ldr	x1, [sp, #88]
  4138a4:	cmp	x1, x0
  4138a8:	b.lt	4134e0 <wcrtomb@plt+0x106f0>  // b.tstop
  4138ac:	ldr	x0, [sp, #64]
  4138b0:	ldrb	w0, [x0]
  4138b4:	orr	w0, w0, #0x10
  4138b8:	and	w1, w0, #0xff
  4138bc:	ldr	x0, [sp, #64]
  4138c0:	strb	w1, [x0]
  4138c4:	add	x0, sp, #0x20
  4138c8:	str	x0, [sp, #56]
  4138cc:	ldr	x0, [sp, #24]
  4138d0:	ldr	x0, [x0, #176]
  4138d4:	mov	x1, x0
  4138d8:	ldr	x0, [sp, #56]
  4138dc:	bl	411880 <wcrtomb@plt+0xea90>
  4138e0:	ldr	x0, [sp, #24]
  4138e4:	ldr	x0, [x0, #152]
  4138e8:	mov	x1, #0x4                   	// #4
  4138ec:	bl	41b69c <wcrtomb@plt+0x188ac>
  4138f0:	mov	x1, x0
  4138f4:	ldr	x0, [sp, #24]
  4138f8:	str	x1, [x0, #336]
  4138fc:	str	xzr, [sp, #72]
  413900:	b	413940 <wcrtomb@plt+0x10b50>
  413904:	ldr	x0, [sp, #72]
  413908:	ldr	x1, [sp, #64]
  41390c:	add	x0, x1, x0
  413910:	ldrb	w0, [x0]
  413914:	and	w0, w0, #0x10
  413918:	cmp	w0, #0x0
  41391c:	b.eq	413934 <wcrtomb@plt+0x10b44>  // b.none
  413920:	ldr	x3, [sp, #56]
  413924:	ldr	x2, [sp, #64]
  413928:	ldr	x1, [sp, #72]
  41392c:	ldr	x0, [sp, #24]
  413930:	bl	4129ec <wcrtomb@plt+0xfbfc>
  413934:	ldr	x0, [sp, #72]
  413938:	add	x0, x0, #0x1
  41393c:	str	x0, [sp, #72]
  413940:	ldr	x0, [sp, #24]
  413944:	ldr	x0, [x0, #152]
  413948:	ldr	x1, [sp, #72]
  41394c:	cmp	x1, x0
  413950:	b.lt	413904 <wcrtomb@plt+0x10b14>  // b.tstop
  413954:	ldr	x0, [sp, #24]
  413958:	bl	412ef4 <wcrtomb@plt+0x10104>
  41395c:	ldr	x0, [sp, #56]
  413960:	ldr	x0, [x0]
  413964:	bl	402b60 <free@plt>
  413968:	ldr	x0, [sp, #64]
  41396c:	bl	402b60 <free@plt>
  413970:	nop
  413974:	ldp	x29, x30, [sp], #96
  413978:	ret
  41397c:	stp	x29, x30, [sp, #-224]!
  413980:	mov	x29, sp
  413984:	str	x0, [sp, #24]
  413988:	strb	w1, [sp, #23]
  41398c:	ldr	x0, [sp, #24]
  413990:	ldr	x0, [x0, #176]
  413994:	mov	x1, #0x20                  	// #32
  413998:	bl	41b69c <wcrtomb@plt+0x188ac>
  41399c:	str	x0, [sp, #144]
  4139a0:	ldr	x0, [sp, #144]
  4139a4:	str	x0, [sp, #216]
  4139a8:	ldr	x0, [sp, #24]
  4139ac:	ldr	x0, [x0, #176]
  4139b0:	lsl	x0, x0, #4
  4139b4:	ldr	x1, [sp, #216]
  4139b8:	add	x0, x1, x0
  4139bc:	str	x0, [sp, #208]
  4139c0:	ldr	x0, [sp, #24]
  4139c4:	ldr	x0, [x0, #168]
  4139c8:	mov	x1, #0x18                  	// #24
  4139cc:	bl	41b69c <wcrtomb@plt+0x188ac>
  4139d0:	str	x0, [sp, #136]
  4139d4:	ldr	x0, [sp, #136]
  4139d8:	str	x0, [sp, #200]
  4139dc:	mov	x1, #0x105                 	// #261
  4139e0:	ldr	x0, [sp, #24]
  4139e4:	bl	410ac8 <wcrtomb@plt+0xdcd8>
  4139e8:	ldr	x0, [sp, #24]
  4139ec:	ldrb	w1, [sp, #23]
  4139f0:	strb	w1, [x0, #328]
  4139f4:	ldr	x0, [sp, #24]
  4139f8:	ldr	x1, [x0, #176]
  4139fc:	add	x0, sp, #0x28
  413a00:	bl	411880 <wcrtomb@plt+0xea90>
  413a04:	ldr	x0, [sp, #24]
  413a08:	ldr	x0, [x0, #152]
  413a0c:	mov	x1, #0x18                  	// #24
  413a10:	bl	41b9c8 <wcrtomb@plt+0x18bd8>
  413a14:	mov	x1, x0
  413a18:	ldr	x0, [sp, #24]
  413a1c:	str	x1, [x0, #320]
  413a20:	str	xzr, [sp, #192]
  413a24:	b	413ffc <wcrtomb@plt+0x1120c>
  413a28:	ldr	x0, [sp, #24]
  413a2c:	ldr	x1, [x0, #144]
  413a30:	ldr	x0, [sp, #192]
  413a34:	lsl	x0, x0, #3
  413a38:	add	x0, x1, x0
  413a3c:	ldr	x0, [x0]
  413a40:	cmp	x0, #0x106
  413a44:	b.eq	413ea8 <wcrtomb@plt+0x110b8>  // b.none
  413a48:	cmp	x0, #0x106
  413a4c:	b.gt	413f44 <wcrtomb@plt+0x11154>
  413a50:	cmp	x0, #0x105
  413a54:	b.eq	413be4 <wcrtomb@plt+0x10df4>  // b.none
  413a58:	cmp	x0, #0x105
  413a5c:	b.gt	413f44 <wcrtomb@plt+0x11154>
  413a60:	cmp	x0, #0x103
  413a64:	b.gt	413f44 <wcrtomb@plt+0x11154>
  413a68:	cmp	x0, #0x102
  413a6c:	b.ge	413ab8 <wcrtomb@plt+0x10cc8>  // b.tcont
  413a70:	cmp	x0, #0x100
  413a74:	b.eq	413a84 <wcrtomb@plt+0x10c94>  // b.none
  413a78:	cmp	x0, #0x101
  413a7c:	b.eq	413bb0 <wcrtomb@plt+0x10dc0>  // b.none
  413a80:	b	413f44 <wcrtomb@plt+0x11154>
  413a84:	ldr	x0, [sp, #200]
  413a88:	mov	w1, #0x1                   	// #1
  413a8c:	strb	w1, [x0]
  413a90:	ldr	x0, [sp, #200]
  413a94:	str	xzr, [x0, #16]
  413a98:	ldr	x0, [sp, #200]
  413a9c:	ldr	x1, [x0, #16]
  413aa0:	ldr	x0, [sp, #200]
  413aa4:	str	x1, [x0, #8]
  413aa8:	ldr	x0, [sp, #200]
  413aac:	add	x0, x0, #0x18
  413ab0:	str	x0, [sp, #200]
  413ab4:	b	413ff0 <wcrtomb@plt+0x11200>
  413ab8:	ldr	x0, [sp, #200]
  413abc:	sub	x0, x0, #0x18
  413ac0:	ldr	x0, [x0, #8]
  413ac4:	lsl	x0, x0, #4
  413ac8:	neg	x0, x0
  413acc:	ldr	x1, [sp, #216]
  413ad0:	add	x0, x1, x0
  413ad4:	str	x0, [sp, #64]
  413ad8:	ldr	x0, [sp, #200]
  413adc:	sub	x0, x0, #0x18
  413ae0:	ldr	x0, [x0, #8]
  413ae4:	str	x0, [sp, #72]
  413ae8:	ldr	x0, [sp, #200]
  413aec:	sub	x0, x0, #0x18
  413af0:	ldr	x0, [x0, #16]
  413af4:	lsl	x0, x0, #4
  413af8:	neg	x0, x0
  413afc:	ldr	x1, [sp, #208]
  413b00:	add	x0, x1, x0
  413b04:	str	x0, [sp, #104]
  413b08:	str	xzr, [sp, #184]
  413b0c:	b	413b98 <wcrtomb@plt+0x10da8>
  413b10:	ldr	x0, [sp, #24]
  413b14:	ldr	x1, [x0, #320]
  413b18:	ldr	x0, [sp, #184]
  413b1c:	lsl	x0, x0, #4
  413b20:	ldr	x2, [sp, #104]
  413b24:	add	x0, x2, x0
  413b28:	ldr	x0, [x0]
  413b2c:	mov	x2, x0
  413b30:	mov	x0, x2
  413b34:	lsl	x0, x0, #1
  413b38:	add	x0, x0, x2
  413b3c:	lsl	x0, x0, #3
  413b40:	add	x1, x1, x0
  413b44:	add	x2, sp, #0x28
  413b48:	add	x0, sp, #0x40
  413b4c:	bl	411e04 <wcrtomb@plt+0xf014>
  413b50:	ldr	x0, [sp, #24]
  413b54:	ldr	x1, [x0, #320]
  413b58:	ldr	x0, [sp, #184]
  413b5c:	lsl	x0, x0, #4
  413b60:	ldr	x2, [sp, #104]
  413b64:	add	x0, x2, x0
  413b68:	ldr	x0, [x0]
  413b6c:	mov	x2, x0
  413b70:	mov	x0, x2
  413b74:	lsl	x0, x0, #1
  413b78:	add	x0, x0, x2
  413b7c:	lsl	x0, x0, #3
  413b80:	add	x1, x1, x0
  413b84:	add	x0, sp, #0x28
  413b88:	bl	4117b8 <wcrtomb@plt+0xe9c8>
  413b8c:	ldr	x0, [sp, #184]
  413b90:	add	x0, x0, #0x1
  413b94:	str	x0, [sp, #184]
  413b98:	ldr	x0, [sp, #200]
  413b9c:	sub	x0, x0, #0x18
  413ba0:	ldr	x0, [x0, #16]
  413ba4:	ldr	x1, [sp, #184]
  413ba8:	cmp	x1, x0
  413bac:	b.lt	413b10 <wcrtomb@plt+0x10d20>  // b.tstop
  413bb0:	ldr	x0, [sp, #24]
  413bb4:	ldr	x1, [x0, #144]
  413bb8:	ldr	x0, [sp, #192]
  413bbc:	lsl	x0, x0, #3
  413bc0:	add	x0, x1, x0
  413bc4:	ldr	x0, [x0]
  413bc8:	cmp	x0, #0x103
  413bcc:	b.eq	413fec <wcrtomb@plt+0x111fc>  // b.none
  413bd0:	ldr	x0, [sp, #200]
  413bd4:	sub	x0, x0, #0x18
  413bd8:	mov	w1, #0x1                   	// #1
  413bdc:	strb	w1, [x0]
  413be0:	b	413fec <wcrtomb@plt+0x111fc>
  413be4:	ldr	x0, [sp, #200]
  413be8:	sub	x0, x0, #0x18
  413bec:	ldr	x0, [x0, #8]
  413bf0:	str	x0, [sp, #72]
  413bf4:	ldr	x0, [sp, #200]
  413bf8:	sub	x0, x0, #0x18
  413bfc:	ldr	x0, [x0, #8]
  413c00:	lsl	x0, x0, #4
  413c04:	neg	x0, x0
  413c08:	ldr	x1, [sp, #216]
  413c0c:	add	x0, x1, x0
  413c10:	str	x0, [sp, #64]
  413c14:	ldr	x0, [sp, #200]
  413c18:	sub	x0, x0, #0x18
  413c1c:	ldr	x0, [x0, #16]
  413c20:	lsl	x0, x0, #4
  413c24:	neg	x1, x0
  413c28:	ldr	x0, [sp, #200]
  413c2c:	sub	x0, x0, #0x30
  413c30:	ldr	x0, [x0, #16]
  413c34:	lsl	x0, x0, #4
  413c38:	sub	x0, x1, x0
  413c3c:	ldr	x1, [sp, #208]
  413c40:	add	x0, x1, x0
  413c44:	str	x0, [sp, #120]
  413c48:	str	xzr, [sp, #176]
  413c4c:	b	413cd8 <wcrtomb@plt+0x10ee8>
  413c50:	ldr	x0, [sp, #24]
  413c54:	ldr	x1, [x0, #320]
  413c58:	ldr	x0, [sp, #176]
  413c5c:	lsl	x0, x0, #4
  413c60:	ldr	x2, [sp, #120]
  413c64:	add	x0, x2, x0
  413c68:	ldr	x0, [x0]
  413c6c:	mov	x2, x0
  413c70:	mov	x0, x2
  413c74:	lsl	x0, x0, #1
  413c78:	add	x0, x0, x2
  413c7c:	lsl	x0, x0, #3
  413c80:	add	x1, x1, x0
  413c84:	add	x2, sp, #0x28
  413c88:	add	x0, sp, #0x40
  413c8c:	bl	411e04 <wcrtomb@plt+0xf014>
  413c90:	ldr	x0, [sp, #24]
  413c94:	ldr	x1, [x0, #320]
  413c98:	ldr	x0, [sp, #176]
  413c9c:	lsl	x0, x0, #4
  413ca0:	ldr	x2, [sp, #120]
  413ca4:	add	x0, x2, x0
  413ca8:	ldr	x0, [x0]
  413cac:	mov	x2, x0
  413cb0:	mov	x0, x2
  413cb4:	lsl	x0, x0, #1
  413cb8:	add	x0, x0, x2
  413cbc:	lsl	x0, x0, #3
  413cc0:	add	x1, x1, x0
  413cc4:	add	x0, sp, #0x28
  413cc8:	bl	4117b8 <wcrtomb@plt+0xe9c8>
  413ccc:	ldr	x0, [sp, #176]
  413cd0:	add	x0, x0, #0x1
  413cd4:	str	x0, [sp, #176]
  413cd8:	ldr	x0, [sp, #200]
  413cdc:	sub	x0, x0, #0x30
  413ce0:	ldr	x0, [x0, #16]
  413ce4:	ldr	x1, [sp, #176]
  413ce8:	cmp	x1, x0
  413cec:	b.lt	413c50 <wcrtomb@plt+0x10e60>  // b.tstop
  413cf0:	ldr	x0, [sp, #200]
  413cf4:	sub	x0, x0, #0x30
  413cf8:	ldrb	w0, [x0]
  413cfc:	cmp	w0, #0x0
  413d00:	b.eq	413d30 <wcrtomb@plt+0x10f40>  // b.none
  413d04:	ldr	x0, [sp, #200]
  413d08:	sub	x0, x0, #0x30
  413d0c:	ldr	x2, [x0, #8]
  413d10:	ldr	x0, [sp, #200]
  413d14:	sub	x0, x0, #0x18
  413d18:	ldr	x1, [x0, #8]
  413d1c:	ldr	x0, [sp, #200]
  413d20:	sub	x0, x0, #0x30
  413d24:	add	x1, x2, x1
  413d28:	str	x1, [x0, #8]
  413d2c:	b	413d50 <wcrtomb@plt+0x10f60>
  413d30:	ldr	x0, [sp, #200]
  413d34:	sub	x0, x0, #0x18
  413d38:	ldr	x0, [x0, #8]
  413d3c:	lsl	x0, x0, #4
  413d40:	neg	x0, x0
  413d44:	ldr	x1, [sp, #216]
  413d48:	add	x0, x1, x0
  413d4c:	str	x0, [sp, #216]
  413d50:	ldr	x0, [sp, #200]
  413d54:	sub	x0, x0, #0x18
  413d58:	ldrb	w0, [x0]
  413d5c:	cmp	w0, #0x0
  413d60:	b.eq	413d90 <wcrtomb@plt+0x10fa0>  // b.none
  413d64:	ldr	x0, [sp, #200]
  413d68:	sub	x0, x0, #0x30
  413d6c:	ldr	x2, [x0, #16]
  413d70:	ldr	x0, [sp, #200]
  413d74:	sub	x0, x0, #0x18
  413d78:	ldr	x1, [x0, #16]
  413d7c:	ldr	x0, [sp, #200]
  413d80:	sub	x0, x0, #0x30
  413d84:	add	x1, x2, x1
  413d88:	str	x1, [x0, #16]
  413d8c:	b	413e60 <wcrtomb@plt+0x11070>
  413d90:	ldr	x0, [sp, #200]
  413d94:	sub	x0, x0, #0x18
  413d98:	ldr	x0, [x0, #16]
  413d9c:	lsl	x0, x0, #4
  413da0:	neg	x1, x0
  413da4:	ldr	x0, [sp, #200]
  413da8:	sub	x0, x0, #0x30
  413dac:	ldr	x0, [x0, #16]
  413db0:	lsl	x0, x0, #4
  413db4:	sub	x0, x1, x0
  413db8:	ldr	x1, [sp, #208]
  413dbc:	add	x0, x1, x0
  413dc0:	str	x0, [sp, #112]
  413dc4:	str	xzr, [sp, #168]
  413dc8:	b	413e10 <wcrtomb@plt+0x11020>
  413dcc:	ldr	x0, [sp, #200]
  413dd0:	sub	x0, x0, #0x30
  413dd4:	ldr	x1, [x0, #16]
  413dd8:	ldr	x0, [sp, #168]
  413ddc:	add	x0, x1, x0
  413de0:	lsl	x0, x0, #4
  413de4:	ldr	x1, [sp, #112]
  413de8:	add	x0, x1, x0
  413dec:	ldr	x1, [sp, #168]
  413df0:	lsl	x1, x1, #4
  413df4:	ldr	x2, [sp, #112]
  413df8:	add	x2, x2, x1
  413dfc:	ldp	x0, x1, [x0]
  413e00:	stp	x0, x1, [x2]
  413e04:	ldr	x0, [sp, #168]
  413e08:	add	x0, x0, #0x1
  413e0c:	str	x0, [sp, #168]
  413e10:	ldr	x0, [sp, #200]
  413e14:	sub	x0, x0, #0x18
  413e18:	ldr	x0, [x0, #16]
  413e1c:	ldr	x1, [sp, #168]
  413e20:	cmp	x1, x0
  413e24:	b.lt	413dcc <wcrtomb@plt+0x10fdc>  // b.tstop
  413e28:	ldr	x0, [sp, #200]
  413e2c:	sub	x0, x0, #0x30
  413e30:	ldr	x0, [x0, #16]
  413e34:	lsl	x0, x0, #4
  413e38:	neg	x0, x0
  413e3c:	ldr	x1, [sp, #208]
  413e40:	add	x0, x1, x0
  413e44:	str	x0, [sp, #208]
  413e48:	ldr	x0, [sp, #200]
  413e4c:	sub	x1, x0, #0x18
  413e50:	ldr	x0, [sp, #200]
  413e54:	sub	x0, x0, #0x30
  413e58:	ldr	x1, [x1, #16]
  413e5c:	str	x1, [x0, #16]
  413e60:	ldr	x0, [sp, #200]
  413e64:	sub	x0, x0, #0x30
  413e68:	ldrb	w0, [x0]
  413e6c:	mov	w1, w0
  413e70:	ldr	x0, [sp, #200]
  413e74:	sub	x0, x0, #0x18
  413e78:	ldrb	w0, [x0]
  413e7c:	and	w1, w1, w0
  413e80:	ldr	x0, [sp, #200]
  413e84:	sub	x0, x0, #0x30
  413e88:	cmp	w1, #0x0
  413e8c:	cset	w1, ne  // ne = any
  413e90:	and	w1, w1, #0xff
  413e94:	strb	w1, [x0]
  413e98:	ldr	x0, [sp, #200]
  413e9c:	sub	x0, x0, #0x18
  413ea0:	str	x0, [sp, #200]
  413ea4:	b	413ff0 <wcrtomb@plt+0x11200>
  413ea8:	ldr	x0, [sp, #200]
  413eac:	sub	x0, x0, #0x30
  413eb0:	ldr	x2, [x0, #8]
  413eb4:	ldr	x0, [sp, #200]
  413eb8:	sub	x0, x0, #0x18
  413ebc:	ldr	x1, [x0, #8]
  413ec0:	ldr	x0, [sp, #200]
  413ec4:	sub	x0, x0, #0x30
  413ec8:	add	x1, x2, x1
  413ecc:	str	x1, [x0, #8]
  413ed0:	ldr	x0, [sp, #200]
  413ed4:	sub	x0, x0, #0x30
  413ed8:	ldr	x2, [x0, #16]
  413edc:	ldr	x0, [sp, #200]
  413ee0:	sub	x0, x0, #0x18
  413ee4:	ldr	x1, [x0, #16]
  413ee8:	ldr	x0, [sp, #200]
  413eec:	sub	x0, x0, #0x30
  413ef0:	add	x1, x2, x1
  413ef4:	str	x1, [x0, #16]
  413ef8:	ldr	x0, [sp, #200]
  413efc:	sub	x0, x0, #0x30
  413f00:	ldrb	w1, [x0]
  413f04:	ldr	x0, [sp, #200]
  413f08:	sub	x0, x0, #0x18
  413f0c:	ldrb	w0, [x0]
  413f10:	orr	w0, w1, w0
  413f14:	and	w0, w0, #0xff
  413f18:	mov	w1, w0
  413f1c:	ldr	x0, [sp, #200]
  413f20:	sub	x0, x0, #0x30
  413f24:	cmp	w1, #0x0
  413f28:	cset	w1, ne  // ne = any
  413f2c:	and	w1, w1, #0xff
  413f30:	strb	w1, [x0]
  413f34:	ldr	x0, [sp, #200]
  413f38:	sub	x0, x0, #0x18
  413f3c:	str	x0, [sp, #200]
  413f40:	b	413ff0 <wcrtomb@plt+0x11200>
  413f44:	ldr	x0, [sp, #24]
  413f48:	ldr	x1, [x0, #144]
  413f4c:	ldr	x0, [sp, #192]
  413f50:	lsl	x0, x0, #3
  413f54:	add	x0, x1, x0
  413f58:	ldr	x0, [x0]
  413f5c:	cmp	x0, #0x112
  413f60:	cset	w0, eq  // eq = none
  413f64:	and	w1, w0, #0xff
  413f68:	ldr	x0, [sp, #200]
  413f6c:	strb	w1, [x0]
  413f70:	ldr	x0, [sp, #200]
  413f74:	mov	x1, #0x1                   	// #1
  413f78:	str	x1, [x0, #16]
  413f7c:	ldr	x0, [sp, #200]
  413f80:	ldr	x1, [x0, #16]
  413f84:	ldr	x0, [sp, #200]
  413f88:	str	x1, [x0, #8]
  413f8c:	ldr	x0, [sp, #200]
  413f90:	add	x0, x0, #0x18
  413f94:	str	x0, [sp, #200]
  413f98:	ldr	x0, [sp, #208]
  413f9c:	ldr	x1, [sp, #192]
  413fa0:	str	x1, [x0]
  413fa4:	ldr	x0, [sp, #208]
  413fa8:	ldr	x1, [x0]
  413fac:	ldr	x0, [sp, #216]
  413fb0:	str	x1, [x0]
  413fb4:	ldr	x0, [sp, #208]
  413fb8:	mov	w1, #0x1ff                 	// #511
  413fbc:	str	w1, [x0, #8]
  413fc0:	ldr	x0, [sp, #208]
  413fc4:	ldr	w1, [x0, #8]
  413fc8:	ldr	x0, [sp, #216]
  413fcc:	str	w1, [x0, #8]
  413fd0:	ldr	x0, [sp, #216]
  413fd4:	add	x0, x0, #0x10
  413fd8:	str	x0, [sp, #216]
  413fdc:	ldr	x0, [sp, #208]
  413fe0:	add	x0, x0, #0x10
  413fe4:	str	x0, [sp, #208]
  413fe8:	b	413ff0 <wcrtomb@plt+0x11200>
  413fec:	nop
  413ff0:	ldr	x0, [sp, #192]
  413ff4:	add	x0, x0, #0x1
  413ff8:	str	x0, [sp, #192]
  413ffc:	ldr	x0, [sp, #24]
  414000:	ldr	x0, [x0, #152]
  414004:	ldr	x1, [sp, #192]
  414008:	cmp	x1, x0
  41400c:	b.lt	413a28 <wcrtomb@plt+0x10c38>  // b.tstop
  414010:	ldr	x0, [sp, #24]
  414014:	bl	4125b0 <wcrtomb@plt+0xf7c0>
  414018:	ldr	x0, [sp, #24]
  41401c:	bl	4134bc <wcrtomb@plt+0x106cc>
  414020:	str	xzr, [sp, #88]
  414024:	mov	w0, #0x1ff                 	// #511
  414028:	str	w0, [sp, #96]
  41402c:	add	x0, sp, #0x40
  414030:	mov	x1, #0x1                   	// #1
  414034:	bl	411880 <wcrtomb@plt+0xea90>
  414038:	add	x0, sp, #0x40
  41403c:	mov	x2, x0
  414040:	ldp	x0, x1, [sp, #88]
  414044:	bl	411a7c <wcrtomb@plt+0xec8c>
  414048:	ldr	x0, [sp, #24]
  41404c:	ldr	x0, [x0, #152]
  414050:	mov	x1, #0x4                   	// #4
  414054:	bl	41b69c <wcrtomb@plt+0x188ac>
  414058:	mov	x1, x0
  41405c:	ldr	x0, [sp, #24]
  414060:	str	x1, [x0, #344]
  414064:	str	xzr, [sp, #160]
  414068:	b	41427c <wcrtomb@plt+0x1148c>
  41406c:	ldr	x0, [sp, #24]
  414070:	ldr	x1, [x0, #344]
  414074:	ldr	x0, [sp, #160]
  414078:	lsl	x0, x0, #2
  41407c:	add	x0, x1, x0
  414080:	str	wzr, [x0]
  414084:	ldr	x0, [sp, #24]
  414088:	ldr	x1, [x0, #336]
  41408c:	ldr	x0, [sp, #160]
  414090:	lsl	x0, x0, #2
  414094:	add	x0, x1, x0
  414098:	ldr	w0, [x0]
  41409c:	bl	40e5bc <wcrtomb@plt+0xb7cc>
  4140a0:	and	w0, w0, #0xff
  4140a4:	cmp	w0, #0x0
  4140a8:	b.eq	4140e0 <wcrtomb@plt+0x112f0>  // b.none
  4140ac:	ldr	x0, [sp, #24]
  4140b0:	ldr	x1, [x0, #344]
  4140b4:	ldr	x0, [sp, #160]
  4140b8:	lsl	x0, x0, #2
  4140bc:	add	x0, x1, x0
  4140c0:	ldr	w1, [x0]
  4140c4:	ldr	x0, [sp, #24]
  4140c8:	ldr	x2, [x0, #344]
  4140cc:	ldr	x0, [sp, #160]
  4140d0:	lsl	x0, x0, #2
  4140d4:	add	x0, x2, x0
  4140d8:	orr	w1, w1, #0x4
  4140dc:	str	w1, [x0]
  4140e0:	ldr	x0, [sp, #24]
  4140e4:	ldr	x1, [x0, #336]
  4140e8:	ldr	x0, [sp, #160]
  4140ec:	lsl	x0, x0, #2
  4140f0:	add	x0, x1, x0
  4140f4:	ldr	w0, [x0]
  4140f8:	bl	40e5f0 <wcrtomb@plt+0xb800>
  4140fc:	and	w0, w0, #0xff
  414100:	cmp	w0, #0x0
  414104:	b.eq	41413c <wcrtomb@plt+0x1134c>  // b.none
  414108:	ldr	x0, [sp, #24]
  41410c:	ldr	x1, [x0, #344]
  414110:	ldr	x0, [sp, #160]
  414114:	lsl	x0, x0, #2
  414118:	add	x0, x1, x0
  41411c:	ldr	w1, [x0]
  414120:	ldr	x0, [sp, #24]
  414124:	ldr	x2, [x0, #344]
  414128:	ldr	x0, [sp, #160]
  41412c:	lsl	x0, x0, #2
  414130:	add	x0, x2, x0
  414134:	orr	w1, w1, #0x2
  414138:	str	w1, [x0]
  41413c:	str	xzr, [sp, #152]
  414140:	b	414240 <wcrtomb@plt+0x11450>
  414144:	ldr	x0, [sp, #24]
  414148:	ldr	x2, [x0, #320]
  41414c:	ldr	x1, [sp, #160]
  414150:	mov	x0, x1
  414154:	lsl	x0, x0, #1
  414158:	add	x0, x0, x1
  41415c:	lsl	x0, x0, #3
  414160:	add	x0, x2, x0
  414164:	ldr	x1, [x0]
  414168:	ldr	x0, [sp, #152]
  41416c:	lsl	x0, x0, #4
  414170:	add	x0, x1, x0
  414174:	ldr	w0, [x0, #8]
  414178:	bl	40e5bc <wcrtomb@plt+0xb7cc>
  41417c:	and	w0, w0, #0xff
  414180:	cmp	w0, #0x0
  414184:	b.eq	4141bc <wcrtomb@plt+0x113cc>  // b.none
  414188:	ldr	x0, [sp, #24]
  41418c:	ldr	x1, [x0, #344]
  414190:	ldr	x0, [sp, #160]
  414194:	lsl	x0, x0, #2
  414198:	add	x0, x1, x0
  41419c:	ldr	w1, [x0]
  4141a0:	ldr	x0, [sp, #24]
  4141a4:	ldr	x2, [x0, #344]
  4141a8:	ldr	x0, [sp, #160]
  4141ac:	lsl	x0, x0, #2
  4141b0:	add	x0, x2, x0
  4141b4:	orr	w1, w1, #0x4
  4141b8:	str	w1, [x0]
  4141bc:	ldr	x0, [sp, #24]
  4141c0:	ldr	x2, [x0, #320]
  4141c4:	ldr	x1, [sp, #160]
  4141c8:	mov	x0, x1
  4141cc:	lsl	x0, x0, #1
  4141d0:	add	x0, x0, x1
  4141d4:	lsl	x0, x0, #3
  4141d8:	add	x0, x2, x0
  4141dc:	ldr	x1, [x0]
  4141e0:	ldr	x0, [sp, #152]
  4141e4:	lsl	x0, x0, #4
  4141e8:	add	x0, x1, x0
  4141ec:	ldr	w0, [x0, #8]
  4141f0:	bl	40e5f0 <wcrtomb@plt+0xb800>
  4141f4:	and	w0, w0, #0xff
  4141f8:	cmp	w0, #0x0
  4141fc:	b.eq	414234 <wcrtomb@plt+0x11444>  // b.none
  414200:	ldr	x0, [sp, #24]
  414204:	ldr	x1, [x0, #344]
  414208:	ldr	x0, [sp, #160]
  41420c:	lsl	x0, x0, #2
  414210:	add	x0, x1, x0
  414214:	ldr	w1, [x0]
  414218:	ldr	x0, [sp, #24]
  41421c:	ldr	x2, [x0, #344]
  414220:	ldr	x0, [sp, #160]
  414224:	lsl	x0, x0, #2
  414228:	add	x0, x2, x0
  41422c:	orr	w1, w1, #0x2
  414230:	str	w1, [x0]
  414234:	ldr	x0, [sp, #152]
  414238:	add	x0, x0, #0x1
  41423c:	str	x0, [sp, #152]
  414240:	ldr	x0, [sp, #24]
  414244:	ldr	x2, [x0, #320]
  414248:	ldr	x1, [sp, #160]
  41424c:	mov	x0, x1
  414250:	lsl	x0, x0, #1
  414254:	add	x0, x0, x1
  414258:	lsl	x0, x0, #3
  41425c:	add	x0, x2, x0
  414260:	ldr	x0, [x0, #8]
  414264:	ldr	x1, [sp, #152]
  414268:	cmp	x1, x0
  41426c:	b.lt	414144 <wcrtomb@plt+0x11354>  // b.tstop
  414270:	ldr	x0, [sp, #160]
  414274:	add	x0, x0, #0x1
  414278:	str	x0, [sp, #160]
  41427c:	ldr	x0, [sp, #24]
  414280:	ldr	x0, [x0, #152]
  414284:	ldr	x1, [sp, #160]
  414288:	cmp	x1, x0
  41428c:	b.lt	41406c <wcrtomb@plt+0x1127c>  // b.tstop
  414290:	add	x0, sp, #0x40
  414294:	mov	x1, x0
  414298:	ldr	x0, [sp, #24]
  41429c:	bl	412970 <wcrtomb@plt+0xfb80>
  4142a0:	str	w0, [sp, #132]
  4142a4:	ldr	w0, [sp, #132]
  4142a8:	and	w0, w0, #0x4
  4142ac:	cmp	w0, #0x0
  4142b0:	b.eq	4142c8 <wcrtomb@plt+0x114d8>  // b.none
  4142b4:	add	x0, sp, #0x40
  4142b8:	mov	w2, #0x4                   	// #4
  4142bc:	mov	x1, x0
  4142c0:	ldr	x0, [sp, #24]
  4142c4:	bl	412088 <wcrtomb@plt+0xf298>
  4142c8:	ldr	w0, [sp, #132]
  4142cc:	eor	w1, w0, #0x7
  4142d0:	add	x0, sp, #0x40
  4142d4:	mov	w2, w1
  4142d8:	mov	x1, x0
  4142dc:	ldr	x0, [sp, #24]
  4142e0:	bl	412088 <wcrtomb@plt+0xf298>
  4142e4:	mov	w1, w0
  4142e8:	ldr	x0, [sp, #24]
  4142ec:	str	w1, [x0, #364]
  4142f0:	ldr	x0, [sp, #24]
  4142f4:	ldr	w0, [x0, #364]
  4142f8:	sxtw	x1, w0
  4142fc:	ldr	x0, [sp, #24]
  414300:	str	x1, [x0, #400]
  414304:	ldr	w0, [sp, #132]
  414308:	and	w0, w0, #0x2
  41430c:	cmp	w0, #0x0
  414310:	b.eq	414334 <wcrtomb@plt+0x11544>  // b.none
  414314:	add	x0, sp, #0x40
  414318:	mov	w2, #0x2                   	// #2
  41431c:	mov	x1, x0
  414320:	ldr	x0, [sp, #24]
  414324:	bl	412088 <wcrtomb@plt+0xf298>
  414328:	mov	w1, w0
  41432c:	ldr	x0, [sp, #24]
  414330:	str	w1, [x0, #364]
  414334:	ldr	x0, [sp, #24]
  414338:	ldr	w0, [x0, #364]
  41433c:	add	w1, w0, #0x1
  414340:	ldr	x0, [sp, #24]
  414344:	str	w1, [x0, #364]
  414348:	ldr	x0, [sp, #24]
  41434c:	str	wzr, [x0, #360]
  414350:	ldr	x0, [sp, #144]
  414354:	bl	402b60 <free@plt>
  414358:	ldr	x0, [sp, #136]
  41435c:	bl	402b60 <free@plt>
  414360:	ldr	x0, [sp, #40]
  414364:	bl	402b60 <free@plt>
  414368:	ldr	x0, [sp, #64]
  41436c:	bl	402b60 <free@plt>
  414370:	nop
  414374:	ldp	x29, x30, [sp], #224
  414378:	ret
  41437c:	stp	x29, x30, [sp, #-64]!
  414380:	mov	x29, sp
  414384:	str	x0, [sp, #24]
  414388:	ldr	x0, [sp, #24]
  41438c:	ldr	x0, [x0, #352]
  414390:	str	x0, [sp, #56]
  414394:	ldr	x0, [sp, #24]
  414398:	ldr	x0, [x0, #304]
  41439c:	ldr	x1, [sp, #56]
  4143a0:	cmp	x1, x0
  4143a4:	b.ge	4145c4 <wcrtomb@plt+0x117d4>  // b.tcont
  4143a8:	ldr	x0, [sp, #24]
  4143ac:	ldr	x0, [x0, #368]
  4143b0:	cmp	x0, #0x0
  4143b4:	b.eq	4143c8 <wcrtomb@plt+0x115d8>  // b.none
  4143b8:	ldr	x0, [sp, #24]
  4143bc:	ldr	x0, [x0, #368]
  4143c0:	sub	x0, x0, #0x10
  4143c4:	b	4143cc <wcrtomb@plt+0x115dc>
  4143c8:	mov	x0, #0x0                   	// #0
  4143cc:	str	x0, [sp, #48]
  4143d0:	ldr	x0, [sp, #48]
  4143d4:	cmp	x0, #0x0
  4143d8:	b.eq	4143ec <wcrtomb@plt+0x115fc>  // b.none
  4143dc:	ldr	x0, [sp, #24]
  4143e0:	ldr	x0, [x0, #352]
  4143e4:	add	x0, x0, #0x2
  4143e8:	b	4143f0 <wcrtomb@plt+0x11600>
  4143ec:	mov	x0, #0x0                   	// #0
  4143f0:	str	x0, [sp, #32]
  4143f4:	ldr	x0, [sp, #24]
  4143f8:	ldr	x1, [x0, #304]
  4143fc:	ldr	x0, [sp, #56]
  414400:	sub	x1, x1, x0
  414404:	add	x0, sp, #0x20
  414408:	mov	x4, #0x8                   	// #8
  41440c:	mov	x3, #0xffffffffffffffff    	// #-1
  414410:	mov	x2, x1
  414414:	mov	x1, x0
  414418:	ldr	x0, [sp, #48]
  41441c:	bl	40ea0c <wcrtomb@plt+0xbc1c>
  414420:	str	x0, [sp, #48]
  414424:	ldr	x0, [sp, #48]
  414428:	add	x0, x0, #0x8
  41442c:	str	xzr, [x0]
  414430:	ldr	x1, [x0]
  414434:	ldr	x0, [sp, #48]
  414438:	str	x1, [x0]
  41443c:	ldr	x0, [sp, #48]
  414440:	add	x1, x0, #0x10
  414444:	ldr	x0, [sp, #24]
  414448:	str	x1, [x0, #368]
  41444c:	ldr	x0, [sp, #32]
  414450:	sub	x1, x0, #0x2
  414454:	ldr	x0, [sp, #24]
  414458:	str	x1, [x0, #352]
  41445c:	ldr	x0, [sp, #24]
  414460:	ldr	x0, [x0, #352]
  414464:	str	x0, [sp, #40]
  414468:	ldr	x0, [sp, #24]
  41446c:	ldr	x0, [x0, #376]
  414470:	ldr	x1, [sp, #40]
  414474:	mov	x2, #0x8                   	// #8
  414478:	bl	41b714 <wcrtomb@plt+0x18924>
  41447c:	mov	x1, x0
  414480:	ldr	x0, [sp, #24]
  414484:	str	x1, [x0, #376]
  414488:	ldr	x0, [sp, #24]
  41448c:	ldr	x0, [x0, #384]
  414490:	ldr	x1, [sp, #40]
  414494:	mov	x2, #0x1                   	// #1
  414498:	bl	41b714 <wcrtomb@plt+0x18924>
  41449c:	mov	x1, x0
  4144a0:	ldr	x0, [sp, #24]
  4144a4:	str	x1, [x0, #384]
  4144a8:	ldr	x0, [sp, #24]
  4144ac:	ldr	x0, [x0, #392]
  4144b0:	ldr	x1, [sp, #40]
  4144b4:	mov	x2, #0x8                   	// #8
  4144b8:	bl	41b714 <wcrtomb@plt+0x18924>
  4144bc:	mov	x1, x0
  4144c0:	ldr	x0, [sp, #24]
  4144c4:	str	x1, [x0, #392]
  4144c8:	ldr	x0, [sp, #24]
  4144cc:	ldrb	w0, [x0, #1048]
  4144d0:	cmp	w0, #0x0
  4144d4:	b.eq	4145b4 <wcrtomb@plt+0x117c4>  // b.none
  4144d8:	ldr	x0, [sp, #24]
  4144dc:	ldr	x0, [x0, #432]
  4144e0:	cmp	x0, #0x0
  4144e4:	b.eq	4144f8 <wcrtomb@plt+0x11708>  // b.none
  4144e8:	ldr	x0, [sp, #24]
  4144ec:	ldr	x0, [x0, #432]
  4144f0:	sub	x0, x0, #0x10
  4144f4:	b	4144fc <wcrtomb@plt+0x1170c>
  4144f8:	mov	x0, #0x0                   	// #0
  4144fc:	str	x0, [sp, #48]
  414500:	ldr	x0, [sp, #32]
  414504:	mov	x2, #0x8                   	// #8
  414508:	mov	x1, x0
  41450c:	ldr	x0, [sp, #48]
  414510:	bl	41b714 <wcrtomb@plt+0x18924>
  414514:	str	x0, [sp, #48]
  414518:	ldr	x0, [sp, #56]
  41451c:	cmp	x0, #0x0
  414520:	b.ne	41453c <wcrtomb@plt+0x1174c>  // b.any
  414524:	ldr	x0, [sp, #48]
  414528:	add	x0, x0, #0x8
  41452c:	str	xzr, [x0]
  414530:	ldr	x1, [x0]
  414534:	ldr	x0, [sp, #48]
  414538:	str	x1, [x0]
  41453c:	ldr	x0, [sp, #48]
  414540:	add	x1, x0, #0x10
  414544:	ldr	x0, [sp, #24]
  414548:	str	x1, [x0, #432]
  41454c:	b	4145b4 <wcrtomb@plt+0x117c4>
  414550:	ldr	x0, [sp, #24]
  414554:	ldr	x1, [x0, #368]
  414558:	ldr	x0, [sp, #56]
  41455c:	lsl	x0, x0, #3
  414560:	add	x0, x1, x0
  414564:	str	xzr, [x0]
  414568:	ldr	x0, [sp, #24]
  41456c:	ldr	x1, [x0, #376]
  414570:	ldr	x0, [sp, #56]
  414574:	lsl	x0, x0, #3
  414578:	add	x0, x1, x0
  41457c:	str	xzr, [x0]
  414580:	ldr	x0, [sp, #24]
  414584:	ldrb	w0, [x0, #1048]
  414588:	cmp	w0, #0x0
  41458c:	b.eq	4145a8 <wcrtomb@plt+0x117b8>  // b.none
  414590:	ldr	x0, [sp, #24]
  414594:	ldr	x1, [x0, #432]
  414598:	ldr	x0, [sp, #56]
  41459c:	lsl	x0, x0, #3
  4145a0:	add	x0, x1, x0
  4145a4:	str	xzr, [x0]
  4145a8:	ldr	x0, [sp, #56]
  4145ac:	add	x0, x0, #0x1
  4145b0:	str	x0, [sp, #56]
  4145b4:	ldr	x1, [sp, #56]
  4145b8:	ldr	x0, [sp, #40]
  4145bc:	cmp	x1, x0
  4145c0:	b.lt	414550 <wcrtomb@plt+0x11760>  // b.tstop
  4145c4:	nop
  4145c8:	ldp	x29, x30, [sp], #64
  4145cc:	ret
  4145d0:	stp	x29, x30, [sp, #-336]!
  4145d4:	mov	x29, sp
  4145d8:	str	x0, [sp, #40]
  4145dc:	str	x1, [sp, #32]
  4145e0:	strb	w2, [sp, #31]
  4145e4:	ldr	x1, [sp, #32]
  4145e8:	ldr	x0, [sp, #40]
  4145ec:	bl	40e624 <wcrtomb@plt+0xb834>
  4145f0:	and	w0, w0, #0xff
  4145f4:	cmp	w0, #0x0
  4145f8:	b.eq	414608 <wcrtomb@plt+0x11818>  // b.none
  4145fc:	ldr	x0, [sp, #32]
  414600:	ldr	x0, [x0, #376]
  414604:	b	414610 <wcrtomb@plt+0x11820>
  414608:	ldr	x0, [sp, #32]
  41460c:	ldr	x0, [x0, #368]
  414610:	ldr	x1, [sp, #40]
  414614:	lsl	x1, x1, #3
  414618:	add	x0, x0, x1
  41461c:	str	x0, [sp, #208]
  414620:	ldr	x0, [sp, #208]
  414624:	ldr	x0, [x0]
  414628:	str	x0, [sp, #304]
  41462c:	ldr	x0, [sp, #304]
  414630:	cmp	x0, #0x0
  414634:	b.ne	414754 <wcrtomb@plt+0x11964>  // b.any
  414638:	ldr	x0, [sp, #32]
  41463c:	ldr	w0, [x0, #360]
  414640:	cmp	w0, #0x3ff
  414644:	b.le	4146f0 <wcrtomb@plt+0x11900>
  414648:	ldr	x0, [sp, #32]
  41464c:	ldr	w0, [x0, #364]
  414650:	sxtw	x0, w0
  414654:	str	x0, [sp, #296]
  414658:	b	4146d4 <wcrtomb@plt+0x118e4>
  41465c:	ldr	x0, [sp, #32]
  414660:	ldr	x1, [x0, #368]
  414664:	ldr	x0, [sp, #296]
  414668:	lsl	x0, x0, #3
  41466c:	add	x0, x1, x0
  414670:	ldr	x0, [x0]
  414674:	bl	402b60 <free@plt>
  414678:	ldr	x0, [sp, #32]
  41467c:	ldr	x1, [x0, #376]
  414680:	ldr	x0, [sp, #296]
  414684:	lsl	x0, x0, #3
  414688:	add	x0, x1, x0
  41468c:	ldr	x0, [x0]
  414690:	bl	402b60 <free@plt>
  414694:	ldr	x0, [sp, #32]
  414698:	ldr	x1, [x0, #376]
  41469c:	ldr	x0, [sp, #296]
  4146a0:	lsl	x0, x0, #3
  4146a4:	add	x0, x1, x0
  4146a8:	str	xzr, [x0]
  4146ac:	ldr	x1, [sp, #32]
  4146b0:	ldr	x2, [x1, #368]
  4146b4:	ldr	x1, [sp, #296]
  4146b8:	lsl	x1, x1, #3
  4146bc:	add	x1, x2, x1
  4146c0:	ldr	x0, [x0]
  4146c4:	str	x0, [x1]
  4146c8:	ldr	x0, [sp, #296]
  4146cc:	add	x0, x0, #0x1
  4146d0:	str	x0, [sp, #296]
  4146d4:	ldr	x0, [sp, #32]
  4146d8:	ldr	x0, [x0, #352]
  4146dc:	ldr	x1, [sp, #296]
  4146e0:	cmp	x1, x0
  4146e4:	b.lt	41465c <wcrtomb@plt+0x1186c>  // b.tstop
  4146e8:	ldr	x0, [sp, #32]
  4146ec:	str	wzr, [x0, #360]
  4146f0:	ldr	x0, [sp, #32]
  4146f4:	ldr	w0, [x0, #360]
  4146f8:	add	w1, w0, #0x1
  4146fc:	ldr	x0, [sp, #32]
  414700:	str	w1, [x0, #360]
  414704:	mov	x0, #0x800                 	// #2048
  414708:	bl	41b8d0 <wcrtomb@plt+0x18ae0>
  41470c:	str	x0, [sp, #304]
  414710:	ldr	x0, [sp, #208]
  414714:	ldr	x1, [sp, #304]
  414718:	str	x1, [x0]
  41471c:	str	wzr, [sp, #292]
  414720:	b	414748 <wcrtomb@plt+0x11958>
  414724:	ldrsw	x0, [sp, #292]
  414728:	lsl	x0, x0, #3
  41472c:	ldr	x1, [sp, #304]
  414730:	add	x0, x1, x0
  414734:	mov	x1, #0xfffffffffffffffe    	// #-2
  414738:	str	x1, [x0]
  41473c:	ldr	w0, [sp, #292]
  414740:	add	w0, w0, #0x1
  414744:	str	w0, [sp, #292]
  414748:	ldr	w0, [sp, #292]
  41474c:	cmp	w0, #0xff
  414750:	b.le	414724 <wcrtomb@plt+0x11934>
  414754:	ldr	x0, [sp, #32]
  414758:	ldr	x1, [x0, #384]
  41475c:	ldr	x0, [sp, #40]
  414760:	add	x0, x1, x0
  414764:	strb	wzr, [x0]
  414768:	ldr	x0, [sp, #32]
  41476c:	ldr	x2, [x0, #296]
  414770:	ldr	x1, [sp, #40]
  414774:	mov	x0, x1
  414778:	lsl	x0, x0, #2
  41477c:	add	x0, x0, x1
  414780:	lsl	x0, x0, #4
  414784:	add	x0, x2, x0
  414788:	ldrb	w0, [x0, #32]
  41478c:	ldr	x3, [sp, #32]
  414790:	ldr	x2, [sp, #40]
  414794:	mov	w1, #0x4                   	// #4
  414798:	bl	40e668 <wcrtomb@plt+0xb878>
  41479c:	and	w0, w0, #0xff
  4147a0:	cmp	w0, #0x0
  4147a4:	b.eq	4147d8 <wcrtomb@plt+0x119e8>  // b.none
  4147a8:	ldr	x0, [sp, #32]
  4147ac:	ldr	x1, [x0, #384]
  4147b0:	ldr	x0, [sp, #40]
  4147b4:	add	x0, x1, x0
  4147b8:	ldrb	w1, [x0]
  4147bc:	ldr	x0, [sp, #32]
  4147c0:	ldr	x2, [x0, #384]
  4147c4:	ldr	x0, [sp, #40]
  4147c8:	add	x0, x2, x0
  4147cc:	orr	w1, w1, #0x4
  4147d0:	and	w1, w1, #0xff
  4147d4:	strb	w1, [x0]
  4147d8:	ldr	x0, [sp, #32]
  4147dc:	ldr	x2, [x0, #296]
  4147e0:	ldr	x1, [sp, #40]
  4147e4:	mov	x0, x1
  4147e8:	lsl	x0, x0, #2
  4147ec:	add	x0, x0, x1
  4147f0:	lsl	x0, x0, #4
  4147f4:	add	x0, x2, x0
  4147f8:	ldrb	w0, [x0, #32]
  4147fc:	ldr	x3, [sp, #32]
  414800:	ldr	x2, [sp, #40]
  414804:	mov	w1, #0x2                   	// #2
  414808:	bl	40e668 <wcrtomb@plt+0xb878>
  41480c:	and	w0, w0, #0xff
  414810:	cmp	w0, #0x0
  414814:	b.eq	414848 <wcrtomb@plt+0x11a58>  // b.none
  414818:	ldr	x0, [sp, #32]
  41481c:	ldr	x1, [x0, #384]
  414820:	ldr	x0, [sp, #40]
  414824:	add	x0, x1, x0
  414828:	ldrb	w1, [x0]
  41482c:	ldr	x0, [sp, #32]
  414830:	ldr	x2, [x0, #384]
  414834:	ldr	x0, [sp, #40]
  414838:	add	x0, x2, x0
  41483c:	orr	w1, w1, #0x2
  414840:	and	w1, w1, #0xff
  414844:	strb	w1, [x0]
  414848:	ldr	x0, [sp, #32]
  41484c:	ldr	x2, [x0, #296]
  414850:	ldr	x1, [sp, #40]
  414854:	mov	x0, x1
  414858:	lsl	x0, x0, #2
  41485c:	add	x0, x0, x1
  414860:	lsl	x0, x0, #4
  414864:	add	x0, x2, x0
  414868:	ldrb	w0, [x0, #32]
  41486c:	ldr	x3, [sp, #32]
  414870:	ldr	x2, [sp, #40]
  414874:	mov	w1, #0x1                   	// #1
  414878:	bl	40e668 <wcrtomb@plt+0xb878>
  41487c:	and	w0, w0, #0xff
  414880:	cmp	w0, #0x0
  414884:	b.eq	4148b8 <wcrtomb@plt+0x11ac8>  // b.none
  414888:	ldr	x0, [sp, #32]
  41488c:	ldr	x1, [x0, #384]
  414890:	ldr	x0, [sp, #40]
  414894:	add	x0, x1, x0
  414898:	ldrb	w1, [x0]
  41489c:	ldr	x0, [sp, #32]
  4148a0:	ldr	x2, [x0, #384]
  4148a4:	ldr	x0, [sp, #40]
  4148a8:	add	x0, x2, x0
  4148ac:	orr	w1, w1, #0x1
  4148b0:	and	w1, w1, #0xff
  4148b4:	strb	w1, [x0]
  4148b8:	ldr	x0, [sp, #32]
  4148bc:	ldr	x1, [x0, #176]
  4148c0:	add	x0, sp, #0xb0
  4148c4:	bl	411880 <wcrtomb@plt+0xea90>
  4148c8:	str	xzr, [sp, #280]
  4148cc:	b	4149c8 <wcrtomb@plt+0x11bd8>
  4148d0:	str	xzr, [sp, #272]
  4148d4:	b	414958 <wcrtomb@plt+0x11b68>
  4148d8:	ldr	x0, [sp, #32]
  4148dc:	ldr	x2, [x0, #320]
  4148e0:	ldr	x0, [sp, #32]
  4148e4:	ldr	x3, [x0, #296]
  4148e8:	ldr	x1, [sp, #40]
  4148ec:	mov	x0, x1
  4148f0:	lsl	x0, x0, #2
  4148f4:	add	x0, x0, x1
  4148f8:	lsl	x0, x0, #4
  4148fc:	add	x0, x3, x0
  414900:	ldr	x1, [x0, #8]
  414904:	ldr	x0, [sp, #280]
  414908:	lsl	x0, x0, #4
  41490c:	add	x0, x1, x0
  414910:	ldr	x0, [x0]
  414914:	mov	x1, x0
  414918:	mov	x0, x1
  41491c:	lsl	x0, x0, #1
  414920:	add	x0, x0, x1
  414924:	lsl	x0, x0, #3
  414928:	add	x0, x2, x0
  41492c:	ldr	x1, [x0]
  414930:	ldr	x0, [sp, #272]
  414934:	lsl	x0, x0, #4
  414938:	add	x0, x1, x0
  41493c:	add	x1, sp, #0xb0
  414940:	mov	x2, x1
  414944:	ldp	x0, x1, [x0]
  414948:	bl	4118c8 <wcrtomb@plt+0xead8>
  41494c:	ldr	x0, [sp, #272]
  414950:	add	x0, x0, #0x1
  414954:	str	x0, [sp, #272]
  414958:	ldr	x0, [sp, #32]
  41495c:	ldr	x2, [x0, #320]
  414960:	ldr	x0, [sp, #32]
  414964:	ldr	x3, [x0, #296]
  414968:	ldr	x1, [sp, #40]
  41496c:	mov	x0, x1
  414970:	lsl	x0, x0, #2
  414974:	add	x0, x0, x1
  414978:	lsl	x0, x0, #4
  41497c:	add	x0, x3, x0
  414980:	ldr	x1, [x0, #8]
  414984:	ldr	x0, [sp, #280]
  414988:	lsl	x0, x0, #4
  41498c:	add	x0, x1, x0
  414990:	ldr	x0, [x0]
  414994:	mov	x1, x0
  414998:	mov	x0, x1
  41499c:	lsl	x0, x0, #1
  4149a0:	add	x0, x0, x1
  4149a4:	lsl	x0, x0, #3
  4149a8:	add	x0, x2, x0
  4149ac:	ldr	x0, [x0, #8]
  4149b0:	ldr	x1, [sp, #272]
  4149b4:	cmp	x1, x0
  4149b8:	b.lt	4148d8 <wcrtomb@plt+0x11ae8>  // b.tstop
  4149bc:	ldr	x0, [sp, #280]
  4149c0:	add	x0, x0, #0x1
  4149c4:	str	x0, [sp, #280]
  4149c8:	ldr	x0, [sp, #32]
  4149cc:	ldr	x2, [x0, #296]
  4149d0:	ldr	x1, [sp, #40]
  4149d4:	mov	x0, x1
  4149d8:	lsl	x0, x0, #2
  4149dc:	add	x0, x0, x1
  4149e0:	lsl	x0, x0, #4
  4149e4:	add	x0, x2, x0
  4149e8:	ldr	x0, [x0, #16]
  4149ec:	ldr	x1, [sp, #280]
  4149f0:	cmp	x1, x0
  4149f4:	b.lt	4148d0 <wcrtomb@plt+0x11ae0>  // b.tstop
  4149f8:	ldr	x0, [sp, #32]
  4149fc:	ldr	x1, [x0, #176]
  414a00:	add	x0, sp, #0x98
  414a04:	bl	411880 <wcrtomb@plt+0xea90>
  414a08:	add	x0, sp, #0x60
  414a0c:	bl	40e89c <wcrtomb@plt+0xbaac>
  414a10:	str	xzr, [sp, #264]
  414a14:	b	414f90 <wcrtomb@plt+0x121a0>
  414a18:	ldr	x1, [sp, #176]
  414a1c:	ldr	x0, [sp, #264]
  414a20:	lsl	x0, x0, #4
  414a24:	add	x0, x1, x0
  414a28:	ldp	x0, x1, [x0]
  414a2c:	stp	x0, x1, [sp, #80]
  414a30:	strb	wzr, [sp, #263]
  414a34:	ldr	x0, [sp, #32]
  414a38:	ldr	x1, [x0, #144]
  414a3c:	ldr	x0, [sp, #80]
  414a40:	lsl	x0, x0, #3
  414a44:	add	x0, x1, x0
  414a48:	ldr	x0, [x0]
  414a4c:	cmp	x0, #0x0
  414a50:	b.lt	414ad8 <wcrtomb@plt+0x11ce8>  // b.tstop
  414a54:	ldr	x0, [sp, #32]
  414a58:	ldr	x1, [x0, #144]
  414a5c:	ldr	x0, [sp, #80]
  414a60:	lsl	x0, x0, #3
  414a64:	add	x0, x1, x0
  414a68:	ldr	x0, [x0]
  414a6c:	cmp	x0, #0xff
  414a70:	b.gt	414ad8 <wcrtomb@plt+0x11ce8>
  414a74:	add	x0, sp, #0x30
  414a78:	bl	40e874 <wcrtomb@plt+0xba84>
  414a7c:	ldr	x0, [sp, #32]
  414a80:	ldr	x1, [x0, #144]
  414a84:	ldr	x0, [sp, #80]
  414a88:	lsl	x0, x0, #3
  414a8c:	add	x0, x1, x0
  414a90:	ldr	x0, [x0]
  414a94:	mov	w2, w0
  414a98:	add	x0, sp, #0x30
  414a9c:	mov	x1, x0
  414aa0:	mov	w0, w2
  414aa4:	bl	40e7c8 <wcrtomb@plt+0xb9d8>
  414aa8:	ldr	x0, [sp, #32]
  414aac:	ldr	x1, [x0, #144]
  414ab0:	ldr	x0, [sp, #80]
  414ab4:	lsl	x0, x0, #3
  414ab8:	add	x0, x1, x0
  414abc:	ldr	x1, [x0]
  414ac0:	ldrb	w0, [sp, #31]
  414ac4:	cmp	x1, x0
  414ac8:	b.ne	414c8c <wcrtomb@plt+0x11e9c>  // b.any
  414acc:	mov	w0, #0x1                   	// #1
  414ad0:	strb	w0, [sp, #263]
  414ad4:	b	414c8c <wcrtomb@plt+0x11e9c>
  414ad8:	ldr	x0, [sp, #32]
  414adc:	ldr	x1, [x0, #144]
  414ae0:	ldr	x0, [sp, #80]
  414ae4:	lsl	x0, x0, #3
  414ae8:	add	x0, x1, x0
  414aec:	ldr	x0, [x0]
  414af0:	cmp	x0, #0x113
  414af4:	b.le	414b58 <wcrtomb@plt+0x11d68>
  414af8:	ldr	x0, [sp, #32]
  414afc:	ldr	x1, [x0]
  414b00:	ldr	x0, [sp, #32]
  414b04:	ldr	x2, [x0, #144]
  414b08:	ldr	x0, [sp, #80]
  414b0c:	lsl	x0, x0, #3
  414b10:	add	x0, x2, x0
  414b14:	ldr	x0, [x0]
  414b18:	lsl	x2, x0, #5
  414b1c:	mov	x0, #0xffffffffffffdd80    	// #-8832
  414b20:	add	x0, x2, x0
  414b24:	add	x1, x1, x0
  414b28:	add	x0, sp, #0x30
  414b2c:	ld1	{v0.16b, v1.16b}, [x1]
  414b30:	st1	{v0.16b, v1.16b}, [x0]
  414b34:	ldrb	w0, [sp, #31]
  414b38:	add	x1, sp, #0x30
  414b3c:	bl	40e784 <wcrtomb@plt+0xb994>
  414b40:	and	w0, w0, #0xff
  414b44:	cmp	w0, #0x0
  414b48:	b.eq	414c8c <wcrtomb@plt+0x11e9c>  // b.none
  414b4c:	mov	w0, #0x1                   	// #1
  414b50:	strb	w0, [sp, #263]
  414b54:	b	414c8c <wcrtomb@plt+0x11e9c>
  414b58:	ldr	x0, [sp, #32]
  414b5c:	ldr	x1, [x0, #144]
  414b60:	ldr	x0, [sp, #80]
  414b64:	lsl	x0, x0, #3
  414b68:	add	x0, x1, x0
  414b6c:	ldr	x0, [x0]
  414b70:	cmp	x0, #0x10a
  414b74:	b.ne	414f78 <wcrtomb@plt+0x12188>  // b.any
  414b78:	ldr	x0, [sp, #32]
  414b7c:	ldr	x1, [x0]
  414b80:	ldr	x0, [sp, #32]
  414b84:	ldr	x0, [x0, #24]
  414b88:	lsl	x0, x0, #5
  414b8c:	add	x1, x1, x0
  414b90:	add	x0, sp, #0x30
  414b94:	ld1	{v0.16b, v1.16b}, [x1]
  414b98:	st1	{v0.16b, v1.16b}, [x0]
  414b9c:	ldrb	w0, [sp, #31]
  414ba0:	add	x1, sp, #0x30
  414ba4:	bl	40e784 <wcrtomb@plt+0xb994>
  414ba8:	and	w0, w0, #0xff
  414bac:	cmp	w0, #0x0
  414bb0:	b.eq	414bbc <wcrtomb@plt+0x11dcc>  // b.none
  414bb4:	mov	w0, #0x1                   	// #1
  414bb8:	strb	w0, [sp, #263]
  414bbc:	ldr	w0, [sp, #88]
  414bc0:	mov	w3, w0
  414bc4:	ldr	x0, [sp, #32]
  414bc8:	ldr	x2, [x0, #296]
  414bcc:	ldr	x1, [sp, #40]
  414bd0:	mov	x0, x1
  414bd4:	lsl	x0, x0, #2
  414bd8:	add	x0, x0, x1
  414bdc:	lsl	x0, x0, #4
  414be0:	add	x0, x2, x0
  414be4:	ldrb	w0, [x0, #32]
  414be8:	mov	w2, #0x1                   	// #1
  414bec:	mov	w1, w0
  414bf0:	mov	w0, w3
  414bf4:	bl	40e518 <wcrtomb@plt+0xb728>
  414bf8:	and	w0, w0, #0xff
  414bfc:	cmp	w0, #0x0
  414c00:	b.eq	414c8c <wcrtomb@plt+0x11e9c>  // b.none
  414c04:	ldr	x0, [sp, #32]
  414c08:	ldr	x2, [x0, #296]
  414c0c:	ldr	x1, [sp, #40]
  414c10:	mov	x0, x1
  414c14:	lsl	x0, x0, #2
  414c18:	add	x0, x0, x1
  414c1c:	lsl	x0, x0, #4
  414c20:	add	x0, x2, x0
  414c24:	ldr	x0, [x0, #56]
  414c28:	cmp	x0, #0x0
  414c2c:	b.ne	414c5c <wcrtomb@plt+0x11e6c>  // b.any
  414c30:	ldr	x0, [sp, #32]
  414c34:	ldr	x2, [x0, #296]
  414c38:	ldr	x1, [sp, #40]
  414c3c:	mov	x0, x1
  414c40:	lsl	x0, x0, #2
  414c44:	add	x0, x0, x1
  414c48:	lsl	x0, x0, #4
  414c4c:	add	x0, x2, x0
  414c50:	add	x0, x0, #0x30
  414c54:	mov	x1, #0x1                   	// #1
  414c58:	bl	411880 <wcrtomb@plt+0xea90>
  414c5c:	ldr	x0, [sp, #32]
  414c60:	ldr	x2, [x0, #296]
  414c64:	ldr	x1, [sp, #40]
  414c68:	mov	x0, x1
  414c6c:	lsl	x0, x0, #2
  414c70:	add	x0, x0, x1
  414c74:	lsl	x0, x0, #4
  414c78:	add	x0, x2, x0
  414c7c:	add	x0, x0, #0x30
  414c80:	mov	x2, x0
  414c84:	ldp	x0, x1, [sp, #80]
  414c88:	bl	4118c8 <wcrtomb@plt+0xead8>
  414c8c:	ldr	w0, [sp, #88]
  414c90:	cmp	w0, #0x1ff
  414c94:	b.eq	414ec0 <wcrtomb@plt+0x120d0>  // b.none
  414c98:	ldr	w0, [sp, #88]
  414c9c:	mov	w3, w0
  414ca0:	ldr	x0, [sp, #32]
  414ca4:	ldr	x2, [x0, #296]
  414ca8:	ldr	x1, [sp, #40]
  414cac:	mov	x0, x1
  414cb0:	lsl	x0, x0, #2
  414cb4:	add	x0, x0, x1
  414cb8:	lsl	x0, x0, #4
  414cbc:	add	x0, x2, x0
  414cc0:	ldrb	w0, [x0, #32]
  414cc4:	mov	w2, #0x4                   	// #4
  414cc8:	mov	w1, w0
  414ccc:	mov	w0, w3
  414cd0:	bl	40e518 <wcrtomb@plt+0xb728>
  414cd4:	and	w0, w0, #0xff
  414cd8:	eor	w0, w0, #0x1
  414cdc:	and	w0, w0, #0xff
  414ce0:	cmp	w0, #0x0
  414ce4:	b.eq	414d38 <wcrtomb@plt+0x11f48>  // b.none
  414ce8:	str	wzr, [sp, #256]
  414cec:	b	414d2c <wcrtomb@plt+0x11f3c>
  414cf0:	add	x0, sp, #0x30
  414cf4:	ldrsw	x1, [sp, #256]
  414cf8:	ldr	x1, [x0, x1, lsl #3]
  414cfc:	ldr	x0, [sp, #32]
  414d00:	ldrsw	x2, [sp, #256]
  414d04:	add	x2, x2, #0x7e
  414d08:	ldr	x0, [x0, x2, lsl #3]
  414d0c:	mvn	x0, x0
  414d10:	and	x2, x1, x0
  414d14:	add	x0, sp, #0x30
  414d18:	ldrsw	x1, [sp, #256]
  414d1c:	str	x2, [x0, x1, lsl #3]
  414d20:	ldr	w0, [sp, #256]
  414d24:	add	w0, w0, #0x1
  414d28:	str	w0, [sp, #256]
  414d2c:	ldr	w0, [sp, #256]
  414d30:	cmp	w0, #0x3
  414d34:	b.le	414cf0 <wcrtomb@plt+0x11f00>
  414d38:	ldr	w0, [sp, #88]
  414d3c:	mov	w3, w0
  414d40:	ldr	x0, [sp, #32]
  414d44:	ldr	x2, [x0, #296]
  414d48:	ldr	x1, [sp, #40]
  414d4c:	mov	x0, x1
  414d50:	lsl	x0, x0, #2
  414d54:	add	x0, x0, x1
  414d58:	lsl	x0, x0, #4
  414d5c:	add	x0, x2, x0
  414d60:	ldrb	w0, [x0, #32]
  414d64:	mov	w2, #0x2                   	// #2
  414d68:	mov	w1, w0
  414d6c:	mov	w0, w3
  414d70:	bl	40e518 <wcrtomb@plt+0xb728>
  414d74:	and	w0, w0, #0xff
  414d78:	eor	w0, w0, #0x1
  414d7c:	and	w0, w0, #0xff
  414d80:	cmp	w0, #0x0
  414d84:	b.eq	414dd8 <wcrtomb@plt+0x11fe8>  // b.none
  414d88:	str	wzr, [sp, #252]
  414d8c:	b	414dcc <wcrtomb@plt+0x11fdc>
  414d90:	add	x0, sp, #0x30
  414d94:	ldrsw	x1, [sp, #252]
  414d98:	ldr	x1, [x0, x1, lsl #3]
  414d9c:	ldr	x0, [sp, #32]
  414da0:	ldrsw	x2, [sp, #252]
  414da4:	add	x2, x2, #0x7a
  414da8:	ldr	x0, [x0, x2, lsl #3]
  414dac:	mvn	x0, x0
  414db0:	and	x2, x1, x0
  414db4:	add	x0, sp, #0x30
  414db8:	ldrsw	x1, [sp, #252]
  414dbc:	str	x2, [x0, x1, lsl #3]
  414dc0:	ldr	w0, [sp, #252]
  414dc4:	add	w0, w0, #0x1
  414dc8:	str	w0, [sp, #252]
  414dcc:	ldr	w0, [sp, #252]
  414dd0:	cmp	w0, #0x3
  414dd4:	b.le	414d90 <wcrtomb@plt+0x11fa0>
  414dd8:	ldr	w0, [sp, #88]
  414ddc:	mov	w3, w0
  414de0:	ldr	x0, [sp, #32]
  414de4:	ldr	x2, [x0, #296]
  414de8:	ldr	x1, [sp, #40]
  414dec:	mov	x0, x1
  414df0:	lsl	x0, x0, #2
  414df4:	add	x0, x0, x1
  414df8:	lsl	x0, x0, #4
  414dfc:	add	x0, x2, x0
  414e00:	ldrb	w0, [x0, #32]
  414e04:	mov	w2, #0x1                   	// #1
  414e08:	mov	w1, w0
  414e0c:	mov	w0, w3
  414e10:	bl	40e518 <wcrtomb@plt+0xb728>
  414e14:	and	w0, w0, #0xff
  414e18:	eor	w0, w0, #0x1
  414e1c:	and	w0, w0, #0xff
  414e20:	cmp	w0, #0x0
  414e24:	b.eq	414e88 <wcrtomb@plt+0x12098>  // b.none
  414e28:	str	wzr, [sp, #248]
  414e2c:	b	414e7c <wcrtomb@plt+0x1208c>
  414e30:	add	x0, sp, #0x30
  414e34:	ldrsw	x1, [sp, #248]
  414e38:	ldr	x1, [x0, x1, lsl #3]
  414e3c:	ldr	x0, [sp, #32]
  414e40:	ldrsw	x2, [sp, #248]
  414e44:	add	x2, x2, #0x7a
  414e48:	ldr	x2, [x0, x2, lsl #3]
  414e4c:	ldr	x0, [sp, #32]
  414e50:	ldrsw	x3, [sp, #248]
  414e54:	add	x3, x3, #0x7e
  414e58:	ldr	x0, [x0, x3, lsl #3]
  414e5c:	orr	x0, x2, x0
  414e60:	and	x2, x1, x0
  414e64:	add	x0, sp, #0x30
  414e68:	ldrsw	x1, [sp, #248]
  414e6c:	str	x2, [x0, x1, lsl #3]
  414e70:	ldr	w0, [sp, #248]
  414e74:	add	w0, w0, #0x1
  414e78:	str	w0, [sp, #248]
  414e7c:	ldr	w0, [sp, #248]
  414e80:	cmp	w0, #0x3
  414e84:	b.le	414e30 <wcrtomb@plt+0x12040>
  414e88:	add	x0, sp, #0x30
  414e8c:	bl	40e9b0 <wcrtomb@plt+0xbbc0>
  414e90:	and	w0, w0, #0xff
  414e94:	cmp	w0, #0x0
  414e98:	b.ne	414f80 <wcrtomb@plt+0x12190>  // b.any
  414e9c:	ldrb	w0, [sp, #31]
  414ea0:	add	x1, sp, #0x30
  414ea4:	bl	40e784 <wcrtomb@plt+0xb994>
  414ea8:	and	w0, w0, #0xff
  414eac:	eor	w0, w0, #0x1
  414eb0:	and	w0, w0, #0xff
  414eb4:	cmp	w0, #0x0
  414eb8:	b.eq	414ec0 <wcrtomb@plt+0x120d0>  // b.none
  414ebc:	strb	wzr, [sp, #263]
  414ec0:	ldrb	w0, [sp, #263]
  414ec4:	cmp	w0, #0x0
  414ec8:	b.eq	414f28 <wcrtomb@plt+0x12138>  // b.none
  414ecc:	str	wzr, [sp, #244]
  414ed0:	b	414f08 <wcrtomb@plt+0x12118>
  414ed4:	add	x0, sp, #0x60
  414ed8:	ldrsw	x1, [sp, #244]
  414edc:	ldr	x1, [x0, x1, lsl #3]
  414ee0:	add	x0, sp, #0x30
  414ee4:	ldrsw	x2, [sp, #244]
  414ee8:	ldr	x0, [x0, x2, lsl #3]
  414eec:	and	x2, x1, x0
  414ef0:	add	x0, sp, #0x60
  414ef4:	ldrsw	x1, [sp, #244]
  414ef8:	str	x2, [x0, x1, lsl #3]
  414efc:	ldr	w0, [sp, #244]
  414f00:	add	w0, w0, #0x1
  414f04:	str	w0, [sp, #244]
  414f08:	ldr	w0, [sp, #244]
  414f0c:	cmp	w0, #0x3
  414f10:	b.le	414ed4 <wcrtomb@plt+0x120e4>
  414f14:	add	x0, sp, #0x98
  414f18:	mov	x2, x0
  414f1c:	ldp	x0, x1, [sp, #80]
  414f20:	bl	411a7c <wcrtomb@plt+0xec8c>
  414f24:	b	414f84 <wcrtomb@plt+0x12194>
  414f28:	str	wzr, [sp, #240]
  414f2c:	b	414f68 <wcrtomb@plt+0x12178>
  414f30:	add	x0, sp, #0x60
  414f34:	ldrsw	x1, [sp, #240]
  414f38:	ldr	x1, [x0, x1, lsl #3]
  414f3c:	add	x0, sp, #0x30
  414f40:	ldrsw	x2, [sp, #240]
  414f44:	ldr	x0, [x0, x2, lsl #3]
  414f48:	mvn	x0, x0
  414f4c:	and	x2, x1, x0
  414f50:	add	x0, sp, #0x60
  414f54:	ldrsw	x1, [sp, #240]
  414f58:	str	x2, [x0, x1, lsl #3]
  414f5c:	ldr	w0, [sp, #240]
  414f60:	add	w0, w0, #0x1
  414f64:	str	w0, [sp, #240]
  414f68:	ldr	w0, [sp, #240]
  414f6c:	cmp	w0, #0x3
  414f70:	b.le	414f30 <wcrtomb@plt+0x12140>
  414f74:	b	414f84 <wcrtomb@plt+0x12194>
  414f78:	nop
  414f7c:	b	414f84 <wcrtomb@plt+0x12194>
  414f80:	nop
  414f84:	ldr	x0, [sp, #264]
  414f88:	add	x0, x0, #0x1
  414f8c:	str	x0, [sp, #264]
  414f90:	ldr	x0, [sp, #184]
  414f94:	ldr	x1, [sp, #264]
  414f98:	cmp	x1, x0
  414f9c:	b.lt	414a18 <wcrtomb@plt+0x11c28>  // b.tstop
  414fa0:	ldr	x0, [sp, #32]
  414fa4:	ldr	x1, [x0, #176]
  414fa8:	add	x0, sp, #0x80
  414fac:	bl	411880 <wcrtomb@plt+0xea90>
  414fb0:	ldr	x0, [sp, #160]
  414fb4:	cmp	x0, #0x0
  414fb8:	b.le	41519c <wcrtomb@plt+0x123ac>
  414fbc:	ldr	x0, [sp, #32]
  414fc0:	ldrb	w0, [x0, #328]
  414fc4:	cmp	w0, #0x0
  414fc8:	b.eq	4150ac <wcrtomb@plt+0x122bc>  // b.none
  414fcc:	ldr	x0, [sp, #32]
  414fd0:	ldrb	w0, [x0, #1048]
  414fd4:	cmp	w0, #0x0
  414fd8:	cset	w0, ne  // ne = any
  414fdc:	and	w0, w0, #0xff
  414fe0:	eor	w0, w0, #0x1
  414fe4:	and	w0, w0, #0xff
  414fe8:	strb	w0, [sp, #239]
  414fec:	ldrb	w0, [sp, #239]
  414ff0:	and	w0, w0, #0x1
  414ff4:	strb	w0, [sp, #239]
  414ff8:	ldrb	w0, [sp, #239]
  414ffc:	eor	w0, w0, #0x1
  415000:	and	w0, w0, #0xff
  415004:	cmp	w0, #0x0
  415008:	b.eq	41507c <wcrtomb@plt+0x1228c>  // b.none
  41500c:	mov	w0, #0x1                   	// #1
  415010:	strb	w0, [sp, #239]
  415014:	str	xzr, [sp, #224]
  415018:	b	415060 <wcrtomb@plt+0x12270>
  41501c:	ldrb	w0, [sp, #239]
  415020:	ldr	x1, [sp, #32]
  415024:	ldr	x1, [x1, #280]
  415028:	ldr	x3, [sp, #152]
  41502c:	ldr	x2, [sp, #224]
  415030:	lsl	x2, x2, #4
  415034:	add	x2, x3, x2
  415038:	ldr	x2, [x2]
  41503c:	add	x1, x1, x2
  415040:	ldrb	w1, [x1]
  415044:	and	w0, w0, w1
  415048:	cmp	w0, #0x0
  41504c:	cset	w0, ne  // ne = any
  415050:	strb	w0, [sp, #239]
  415054:	ldr	x0, [sp, #224]
  415058:	add	x0, x0, #0x1
  41505c:	str	x0, [sp, #224]
  415060:	ldrb	w0, [sp, #239]
  415064:	cmp	w0, #0x0
  415068:	b.eq	41507c <wcrtomb@plt+0x1228c>  // b.none
  41506c:	ldr	x0, [sp, #160]
  415070:	ldr	x1, [sp, #224]
  415074:	cmp	x1, x0
  415078:	b.lt	41501c <wcrtomb@plt+0x1222c>  // b.tstop
  41507c:	ldrb	w0, [sp, #239]
  415080:	cmp	w0, #0x0
  415084:	b.eq	4150ac <wcrtomb@plt+0x122bc>  // b.none
  415088:	ldr	x0, [sp, #32]
  41508c:	ldr	x0, [x0, #296]
  415090:	add	x0, x0, #0x8
  415094:	add	x2, sp, #0x80
  415098:	add	x1, sp, #0x98
  41509c:	bl	411e04 <wcrtomb@plt+0xf014>
  4150a0:	add	x1, sp, #0x98
  4150a4:	add	x0, sp, #0x80
  4150a8:	bl	4117b8 <wcrtomb@plt+0xe9c8>
  4150ac:	add	x0, sp, #0x60
  4150b0:	mov	x1, x0
  4150b4:	ldr	x0, [sp, #32]
  4150b8:	bl	412880 <wcrtomb@plt+0xfa90>
  4150bc:	str	w0, [sp, #204]
  4150c0:	add	x0, sp, #0x98
  4150c4:	mov	x1, x0
  4150c8:	ldr	x0, [sp, #32]
  4150cc:	bl	412970 <wcrtomb@plt+0xfb80>
  4150d0:	str	w0, [sp, #200]
  4150d4:	ldr	w0, [sp, #200]
  4150d8:	mvn	w1, w0
  4150dc:	ldr	w0, [sp, #204]
  4150e0:	and	w0, w1, w0
  4150e4:	cmp	w0, #0x0
  4150e8:	b.eq	415110 <wcrtomb@plt+0x12320>  // b.none
  4150ec:	ldr	w0, [sp, #200]
  4150f0:	eor	w1, w0, #0x7
  4150f4:	add	x0, sp, #0x98
  4150f8:	mov	w2, w1
  4150fc:	mov	x1, x0
  415100:	ldr	x0, [sp, #32]
  415104:	bl	412088 <wcrtomb@plt+0xf298>
  415108:	str	x0, [sp, #328]
  41510c:	b	415118 <wcrtomb@plt+0x12328>
  415110:	mov	x0, #0xffffffffffffffff    	// #-1
  415114:	str	x0, [sp, #328]
  415118:	ldr	w1, [sp, #200]
  41511c:	ldr	w0, [sp, #204]
  415120:	and	w0, w1, w0
  415124:	and	w0, w0, #0x4
  415128:	cmp	w0, #0x0
  41512c:	b.eq	41514c <wcrtomb@plt+0x1235c>  // b.none
  415130:	add	x0, sp, #0x98
  415134:	mov	w2, #0x4                   	// #4
  415138:	mov	x1, x0
  41513c:	ldr	x0, [sp, #32]
  415140:	bl	412088 <wcrtomb@plt+0xf298>
  415144:	str	x0, [sp, #320]
  415148:	b	415154 <wcrtomb@plt+0x12364>
  41514c:	ldr	x0, [sp, #328]
  415150:	str	x0, [sp, #320]
  415154:	ldr	w1, [sp, #200]
  415158:	ldr	w0, [sp, #204]
  41515c:	and	w0, w1, w0
  415160:	and	w0, w0, #0x2
  415164:	cmp	w0, #0x0
  415168:	b.eq	415188 <wcrtomb@plt+0x12398>  // b.none
  41516c:	add	x0, sp, #0x98
  415170:	mov	w2, #0x2                   	// #2
  415174:	mov	x1, x0
  415178:	ldr	x0, [sp, #32]
  41517c:	bl	412088 <wcrtomb@plt+0xf298>
  415180:	str	x0, [sp, #312]
  415184:	b	415190 <wcrtomb@plt+0x123a0>
  415188:	ldr	x0, [sp, #328]
  41518c:	str	x0, [sp, #312]
  415190:	ldr	x0, [sp, #32]
  415194:	bl	41437c <wcrtomb@plt+0x1158c>
  415198:	b	4151ec <wcrtomb@plt+0x123fc>
  41519c:	ldr	x0, [sp, #32]
  4151a0:	ldrb	w0, [x0, #328]
  4151a4:	cmp	w0, #0x0
  4151a8:	b.eq	4151d4 <wcrtomb@plt+0x123e4>  // b.none
  4151ac:	str	xzr, [sp, #320]
  4151b0:	ldr	x0, [sp, #32]
  4151b4:	ldr	w0, [x0, #364]
  4151b8:	sub	w0, w0, #0x1
  4151bc:	sxtw	x0, w0
  4151c0:	str	x0, [sp, #312]
  4151c4:	ldr	x0, [sp, #32]
  4151c8:	ldr	x0, [x0, #400]
  4151cc:	str	x0, [sp, #328]
  4151d0:	b	4151ec <wcrtomb@plt+0x123fc>
  4151d4:	mov	x0, #0xffffffffffffffff    	// #-1
  4151d8:	str	x0, [sp, #320]
  4151dc:	mov	x0, #0xffffffffffffffff    	// #-1
  4151e0:	str	x0, [sp, #312]
  4151e4:	mov	x0, #0xffffffffffffffff    	// #-1
  4151e8:	str	x0, [sp, #328]
  4151ec:	str	wzr, [sp, #220]
  4151f0:	b	415290 <wcrtomb@plt+0x124a0>
  4151f4:	ldr	w0, [sp, #220]
  4151f8:	add	x1, sp, #0x60
  4151fc:	bl	40e784 <wcrtomb@plt+0xb994>
  415200:	and	w0, w0, #0xff
  415204:	cmp	w0, #0x0
  415208:	b.eq	415280 <wcrtomb@plt+0x12490>  // b.none
  41520c:	ldr	x1, [sp, #32]
  415210:	ldrsw	x0, [sp, #220]
  415214:	add	x0, x1, x0
  415218:	ldrb	w0, [x0, #460]
  41521c:	cmp	w0, #0x2
  415220:	b.eq	415248 <wcrtomb@plt+0x12458>  // b.none
  415224:	cmp	w0, #0x4
  415228:	b.ne	415264 <wcrtomb@plt+0x12474>  // b.any
  41522c:	ldrsw	x0, [sp, #220]
  415230:	lsl	x0, x0, #3
  415234:	ldr	x1, [sp, #304]
  415238:	add	x0, x1, x0
  41523c:	ldr	x1, [sp, #320]
  415240:	str	x1, [x0]
  415244:	b	415284 <wcrtomb@plt+0x12494>
  415248:	ldrsw	x0, [sp, #220]
  41524c:	lsl	x0, x0, #3
  415250:	ldr	x1, [sp, #304]
  415254:	add	x0, x1, x0
  415258:	ldr	x1, [sp, #312]
  41525c:	str	x1, [x0]
  415260:	b	415284 <wcrtomb@plt+0x12494>
  415264:	ldrsw	x0, [sp, #220]
  415268:	lsl	x0, x0, #3
  41526c:	ldr	x1, [sp, #304]
  415270:	add	x0, x1, x0
  415274:	ldr	x1, [sp, #328]
  415278:	str	x1, [x0]
  41527c:	b	415284 <wcrtomb@plt+0x12494>
  415280:	nop
  415284:	ldr	w0, [sp, #220]
  415288:	add	w0, w0, #0x1
  41528c:	str	w0, [sp, #220]
  415290:	ldr	w0, [sp, #220]
  415294:	cmp	w0, #0xff
  415298:	b.le	4151f4 <wcrtomb@plt+0x12404>
  41529c:	ldr	x0, [sp, #152]
  4152a0:	bl	402b60 <free@plt>
  4152a4:	ldr	x0, [sp, #176]
  4152a8:	bl	402b60 <free@plt>
  4152ac:	ldr	x0, [sp, #128]
  4152b0:	bl	402b60 <free@plt>
  4152b4:	ldr	x0, [sp, #32]
  4152b8:	ldrb	w0, [x0, #459]
  4152bc:	mov	w2, w0
  4152c0:	add	x0, sp, #0x60
  4152c4:	mov	x1, x0
  4152c8:	mov	w0, w2
  4152cc:	bl	40e784 <wcrtomb@plt+0xb994>
  4152d0:	and	w0, w0, #0xff
  4152d4:	cmp	w0, #0x0
  4152d8:	b.eq	415330 <wcrtomb@plt+0x12540>  // b.none
  4152dc:	ldr	x0, [sp, #32]
  4152e0:	ldrb	w0, [x0, #459]
  4152e4:	and	x0, x0, #0xff
  4152e8:	lsl	x0, x0, #3
  4152ec:	ldr	x1, [sp, #304]
  4152f0:	add	x1, x1, x0
  4152f4:	ldr	x0, [sp, #32]
  4152f8:	ldr	x2, [x0, #392]
  4152fc:	ldr	x0, [sp, #40]
  415300:	lsl	x0, x0, #3
  415304:	add	x0, x2, x0
  415308:	ldr	x1, [x1]
  41530c:	str	x1, [x0]
  415310:	ldr	x0, [sp, #32]
  415314:	ldrb	w0, [x0, #459]
  415318:	and	x0, x0, #0xff
  41531c:	lsl	x0, x0, #3
  415320:	ldr	x1, [sp, #304]
  415324:	add	x0, x1, x0
  415328:	mov	x1, #0xffffffffffffffff    	// #-1
  41532c:	str	x1, [x0]
  415330:	ldrb	w0, [sp, #31]
  415334:	lsl	x0, x0, #3
  415338:	ldr	x1, [sp, #304]
  41533c:	add	x0, x1, x0
  415340:	ldr	x0, [x0]
  415344:	ldp	x29, x30, [sp], #336
  415348:	ret
  41534c:	stp	x29, x30, [sp, #-64]!
  415350:	mov	x29, sp
  415354:	str	x0, [sp, #40]
  415358:	str	x1, [sp, #32]
  41535c:	str	x2, [sp, #24]
  415360:	ldr	x0, [sp, #40]
  415364:	ldr	x1, [x0, #368]
  415368:	ldr	x0, [sp, #32]
  41536c:	lsl	x0, x0, #3
  415370:	add	x0, x1, x0
  415374:	ldr	x0, [x0]
  415378:	cmp	x0, #0x0
  41537c:	b.eq	4153a0 <wcrtomb@plt+0x125b0>  // b.none
  415380:	ldr	x0, [sp, #40]
  415384:	ldr	x1, [x0, #368]
  415388:	ldr	x0, [sp, #32]
  41538c:	lsl	x0, x0, #3
  415390:	add	x0, x1, x0
  415394:	ldr	x0, [x0]
  415398:	str	x0, [sp, #56]
  41539c:	b	415484 <wcrtomb@plt+0x12694>
  4153a0:	ldr	x0, [sp, #40]
  4153a4:	ldr	x1, [x0, #376]
  4153a8:	ldr	x0, [sp, #32]
  4153ac:	lsl	x0, x0, #3
  4153b0:	add	x0, x1, x0
  4153b4:	ldr	x0, [x0]
  4153b8:	cmp	x0, #0x0
  4153bc:	b.eq	4153e0 <wcrtomb@plt+0x125f0>  // b.none
  4153c0:	ldr	x0, [sp, #40]
  4153c4:	ldr	x1, [x0, #376]
  4153c8:	ldr	x0, [sp, #32]
  4153cc:	lsl	x0, x0, #3
  4153d0:	add	x0, x1, x0
  4153d4:	ldr	x0, [x0]
  4153d8:	str	x0, [sp, #56]
  4153dc:	b	415484 <wcrtomb@plt+0x12694>
  4153e0:	ldr	x0, [sp, #24]
  4153e4:	ldr	x0, [x0]
  4153e8:	ldrb	w0, [x0]
  4153ec:	mov	w2, w0
  4153f0:	ldr	x1, [sp, #40]
  4153f4:	ldr	x0, [sp, #32]
  4153f8:	bl	4145d0 <wcrtomb@plt+0x117e0>
  4153fc:	ldr	x0, [sp, #40]
  415400:	ldr	x1, [x0, #368]
  415404:	ldr	x0, [sp, #32]
  415408:	lsl	x0, x0, #3
  41540c:	add	x0, x1, x0
  415410:	ldr	x0, [x0]
  415414:	cmp	x0, #0x0
  415418:	b.eq	41543c <wcrtomb@plt+0x1264c>  // b.none
  41541c:	ldr	x0, [sp, #40]
  415420:	ldr	x1, [x0, #368]
  415424:	ldr	x0, [sp, #32]
  415428:	lsl	x0, x0, #3
  41542c:	add	x0, x1, x0
  415430:	ldr	x0, [x0]
  415434:	str	x0, [sp, #56]
  415438:	b	415484 <wcrtomb@plt+0x12694>
  41543c:	ldr	x0, [sp, #40]
  415440:	ldr	x1, [x0, #376]
  415444:	ldr	x0, [sp, #32]
  415448:	lsl	x0, x0, #3
  41544c:	add	x0, x1, x0
  415450:	ldr	x0, [x0]
  415454:	str	x0, [sp, #56]
  415458:	ldr	x0, [sp, #56]
  41545c:	cmp	x0, #0x0
  415460:	b.ne	415484 <wcrtomb@plt+0x12694>  // b.any
  415464:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  415468:	add	x3, x0, #0xa38
  41546c:	mov	w2, #0xc93                 	// #3219
  415470:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  415474:	add	x1, x0, #0x8b0
  415478:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  41547c:	add	x0, x0, #0x8c0
  415480:	bl	402d30 <__assert_fail@plt>
  415484:	ldr	x0, [sp, #24]
  415488:	ldr	x0, [x0]
  41548c:	ldrb	w0, [x0]
  415490:	and	x0, x0, #0xff
  415494:	lsl	x0, x0, #3
  415498:	ldr	x1, [sp, #56]
  41549c:	add	x0, x1, x0
  4154a0:	ldr	x0, [x0]
  4154a4:	cmn	x0, #0x2
  4154a8:	b.ne	4154c8 <wcrtomb@plt+0x126d8>  // b.any
  4154ac:	ldr	x0, [sp, #24]
  4154b0:	ldr	x0, [x0]
  4154b4:	ldrb	w0, [x0]
  4154b8:	mov	w2, w0
  4154bc:	ldr	x1, [sp, #40]
  4154c0:	ldr	x0, [sp, #32]
  4154c4:	bl	4145d0 <wcrtomb@plt+0x117e0>
  4154c8:	ldr	x0, [sp, #24]
  4154cc:	ldr	x0, [x0]
  4154d0:	add	x2, x0, #0x1
  4154d4:	ldr	x1, [sp, #24]
  4154d8:	str	x2, [x1]
  4154dc:	ldrb	w0, [x0]
  4154e0:	and	x0, x0, #0xff
  4154e4:	lsl	x0, x0, #3
  4154e8:	ldr	x1, [sp, #56]
  4154ec:	add	x0, x1, x0
  4154f0:	ldr	x0, [x0]
  4154f4:	ldp	x29, x30, [sp], #64
  4154f8:	ret
  4154fc:	stp	x29, x30, [sp, #-128]!
  415500:	mov	x29, sp
  415504:	str	x19, [sp, #16]
  415508:	str	x0, [sp, #56]
  41550c:	str	x1, [sp, #48]
  415510:	str	x2, [sp, #40]
  415514:	str	x3, [sp, #32]
  415518:	ldr	x0, [sp, #40]
  41551c:	ldr	x4, [x0]
  415520:	ldr	x0, [sp, #40]
  415524:	ldr	x0, [x0]
  415528:	ldr	x1, [sp, #32]
  41552c:	sub	x0, x1, x0
  415530:	mov	x1, x0
  415534:	add	x0, sp, #0x44
  415538:	ldr	x3, [sp, #56]
  41553c:	mov	x2, x1
  415540:	mov	x1, x4
  415544:	bl	40e6bc <wcrtomb@plt+0xb8cc>
  415548:	str	w0, [sp, #96]
  41554c:	ldr	x0, [sp, #56]
  415550:	str	xzr, [x0, #416]
  415554:	ldr	x0, [sp, #48]
  415558:	str	x0, [sp, #88]
  41555c:	str	wzr, [sp, #124]
  415560:	b	415584 <wcrtomb@plt+0x12794>
  415564:	ldr	x2, [sp, #40]
  415568:	ldr	x1, [sp, #48]
  41556c:	ldr	x0, [sp, #56]
  415570:	bl	41534c <wcrtomb@plt+0x1255c>
  415574:	str	x0, [sp, #48]
  415578:	ldr	w0, [sp, #124]
  41557c:	add	w0, w0, #0x1
  415580:	str	w0, [sp, #124]
  415584:	ldr	w1, [sp, #124]
  415588:	ldr	w0, [sp, #96]
  41558c:	cmp	w1, w0
  415590:	b.ge	4155b8 <wcrtomb@plt+0x127c8>  // b.tcont
  415594:	ldr	w0, [sp, #124]
  415598:	cmp	w0, #0x0
  41559c:	b.eq	415564 <wcrtomb@plt+0x12774>  // b.none
  4155a0:	ldr	x0, [sp, #56]
  4155a4:	ldr	w0, [x0, #364]
  4155a8:	sxtw	x0, w0
  4155ac:	ldr	x1, [sp, #48]
  4155b0:	cmp	x1, x0
  4155b4:	b.ge	415564 <wcrtomb@plt+0x12774>  // b.tcont
  4155b8:	ldr	x0, [sp, #40]
  4155bc:	ldr	x1, [x0]
  4155c0:	ldr	w2, [sp, #96]
  4155c4:	ldr	w0, [sp, #124]
  4155c8:	sub	w0, w2, w0
  4155cc:	sxtw	x0, w0
  4155d0:	add	x1, x1, x0
  4155d4:	ldr	x0, [sp, #40]
  4155d8:	str	x1, [x0]
  4155dc:	ldr	w0, [sp, #68]
  4155e0:	cmn	w0, #0x1
  4155e4:	b.ne	4155f0 <wcrtomb@plt+0x12800>  // b.any
  4155e8:	ldr	x0, [sp, #48]
  4155ec:	b	41597c <wcrtomb@plt+0x12b8c>
  4155f0:	ldr	x0, [sp, #56]
  4155f4:	ldr	x2, [x0, #296]
  4155f8:	ldr	x1, [sp, #88]
  4155fc:	mov	x0, x1
  415600:	lsl	x0, x0, #2
  415604:	add	x0, x0, x1
  415608:	lsl	x0, x0, #4
  41560c:	add	x0, x2, x0
  415610:	ldr	x0, [x0, #72]
  415614:	cmp	x0, #0x0
  415618:	b.ge	41571c <wcrtomb@plt+0x1292c>  // b.tcont
  41561c:	ldr	x0, [sp, #56]
  415620:	ldr	x0, [x0, #440]
  415624:	cmp	x0, #0x3ff
  415628:	b.le	4156e4 <wcrtomb@plt+0x128f4>
  41562c:	mov	x0, #0xffffffffffffffff    	// #-1
  415630:	str	x0, [sp, #112]
  415634:	b	415678 <wcrtomb@plt+0x12888>
  415638:	ldr	x0, [sp, #56]
  41563c:	ldr	x1, [x0, #432]
  415640:	ldr	x0, [sp, #112]
  415644:	lsl	x0, x0, #3
  415648:	add	x0, x1, x0
  41564c:	ldr	x0, [x0]
  415650:	bl	402b60 <free@plt>
  415654:	ldr	x0, [sp, #56]
  415658:	ldr	x1, [x0, #432]
  41565c:	ldr	x0, [sp, #112]
  415660:	lsl	x0, x0, #3
  415664:	add	x0, x1, x0
  415668:	str	xzr, [x0]
  41566c:	ldr	x0, [sp, #112]
  415670:	add	x0, x0, #0x1
  415674:	str	x0, [sp, #112]
  415678:	ldr	x0, [sp, #56]
  41567c:	ldr	x0, [x0, #352]
  415680:	ldr	x1, [sp, #112]
  415684:	cmp	x1, x0
  415688:	b.lt	415638 <wcrtomb@plt+0x12848>  // b.tstop
  41568c:	str	xzr, [sp, #104]
  415690:	b	4156c8 <wcrtomb@plt+0x128d8>
  415694:	ldr	x0, [sp, #56]
  415698:	ldr	x2, [x0, #296]
  41569c:	ldr	x1, [sp, #104]
  4156a0:	mov	x0, x1
  4156a4:	lsl	x0, x0, #2
  4156a8:	add	x0, x0, x1
  4156ac:	lsl	x0, x0, #4
  4156b0:	add	x0, x2, x0
  4156b4:	mov	x1, #0xffffffffffffffff    	// #-1
  4156b8:	str	x1, [x0, #72]
  4156bc:	ldr	x0, [sp, #104]
  4156c0:	add	x0, x0, #0x1
  4156c4:	str	x0, [sp, #104]
  4156c8:	ldr	x0, [sp, #56]
  4156cc:	ldr	x0, [x0, #304]
  4156d0:	ldr	x1, [sp, #104]
  4156d4:	cmp	x1, x0
  4156d8:	b.lt	415694 <wcrtomb@plt+0x128a4>  // b.tstop
  4156dc:	ldr	x0, [sp, #56]
  4156e0:	str	xzr, [x0, #440]
  4156e4:	ldr	x0, [sp, #56]
  4156e8:	ldr	x1, [x0, #440]
  4156ec:	add	x2, x1, #0x1
  4156f0:	ldr	x0, [sp, #56]
  4156f4:	str	x2, [x0, #440]
  4156f8:	ldr	x0, [sp, #56]
  4156fc:	ldr	x3, [x0, #296]
  415700:	ldr	x2, [sp, #88]
  415704:	mov	x0, x2
  415708:	lsl	x0, x0, #2
  41570c:	add	x0, x0, x2
  415710:	lsl	x0, x0, #4
  415714:	add	x0, x3, x0
  415718:	str	x1, [x0, #72]
  41571c:	ldr	x0, [sp, #56]
  415720:	ldr	x1, [x0, #432]
  415724:	ldr	x0, [sp, #48]
  415728:	lsl	x0, x0, #3
  41572c:	add	x0, x1, x0
  415730:	ldr	x0, [x0]
  415734:	cmp	x0, #0x0
  415738:	b.ne	4157ac <wcrtomb@plt+0x129bc>  // b.any
  41573c:	ldr	x0, [sp, #56]
  415740:	ldr	x1, [x0, #432]
  415744:	ldr	x0, [sp, #48]
  415748:	lsl	x0, x0, #3
  41574c:	add	x19, x1, x0
  415750:	mov	x0, #0x2000                	// #8192
  415754:	bl	41b8d0 <wcrtomb@plt+0x18ae0>
  415758:	str	x0, [x19]
  41575c:	str	wzr, [sp, #100]
  415760:	b	41579c <wcrtomb@plt+0x129ac>
  415764:	ldr	x0, [sp, #56]
  415768:	ldr	x1, [x0, #432]
  41576c:	ldr	x0, [sp, #48]
  415770:	lsl	x0, x0, #3
  415774:	add	x0, x1, x0
  415778:	ldr	x1, [x0]
  41577c:	ldrsw	x0, [sp, #100]
  415780:	lsl	x0, x0, #3
  415784:	add	x0, x1, x0
  415788:	mov	x1, #0xffffffffffffffff    	// #-1
  41578c:	str	x1, [x0]
  415790:	ldr	w0, [sp, #100]
  415794:	add	w0, w0, #0x1
  415798:	str	w0, [sp, #100]
  41579c:	ldr	w0, [sp, #100]
  4157a0:	cmp	w0, #0x3ff
  4157a4:	b.le	415764 <wcrtomb@plt+0x12974>
  4157a8:	b	415848 <wcrtomb@plt+0x12a58>
  4157ac:	ldr	x0, [sp, #56]
  4157b0:	ldr	x1, [x0, #432]
  4157b4:	ldr	x0, [sp, #48]
  4157b8:	lsl	x0, x0, #3
  4157bc:	add	x0, x1, x0
  4157c0:	ldr	x2, [x0]
  4157c4:	ldr	x0, [sp, #56]
  4157c8:	ldr	x3, [x0, #296]
  4157cc:	ldr	x1, [sp, #88]
  4157d0:	mov	x0, x1
  4157d4:	lsl	x0, x0, #2
  4157d8:	add	x0, x0, x1
  4157dc:	lsl	x0, x0, #4
  4157e0:	add	x0, x3, x0
  4157e4:	ldr	x0, [x0, #72]
  4157e8:	lsl	x0, x0, #3
  4157ec:	add	x0, x2, x0
  4157f0:	ldr	x0, [x0]
  4157f4:	cmp	x0, #0x0
  4157f8:	b.lt	415848 <wcrtomb@plt+0x12a58>  // b.tstop
  4157fc:	ldr	x0, [sp, #56]
  415800:	ldr	x1, [x0, #432]
  415804:	ldr	x0, [sp, #48]
  415808:	lsl	x0, x0, #3
  41580c:	add	x0, x1, x0
  415810:	ldr	x2, [x0]
  415814:	ldr	x0, [sp, #56]
  415818:	ldr	x3, [x0, #296]
  41581c:	ldr	x1, [sp, #88]
  415820:	mov	x0, x1
  415824:	lsl	x0, x0, #2
  415828:	add	x0, x0, x1
  41582c:	lsl	x0, x0, #4
  415830:	add	x0, x3, x0
  415834:	ldr	x0, [x0, #72]
  415838:	lsl	x0, x0, #3
  41583c:	add	x0, x2, x0
  415840:	ldr	x0, [x0]
  415844:	b	41597c <wcrtomb@plt+0x12b8c>
  415848:	ldr	x0, [sp, #48]
  41584c:	cmn	x0, #0x1
  415850:	b.ne	415890 <wcrtomb@plt+0x12aa0>  // b.any
  415854:	ldr	x0, [sp, #56]
  415858:	ldr	x2, [x0, #296]
  41585c:	ldr	x1, [sp, #88]
  415860:	mov	x0, x1
  415864:	lsl	x0, x0, #2
  415868:	add	x0, x0, x1
  41586c:	lsl	x0, x0, #4
  415870:	add	x0, x2, x0
  415874:	add	x2, x0, #0x30
  415878:	ldr	x0, [sp, #56]
  41587c:	add	x0, x0, #0x198
  415880:	mov	x1, x0
  415884:	mov	x0, x2
  415888:	bl	4117b8 <wcrtomb@plt+0xe9c8>
  41588c:	b	4158ec <wcrtomb@plt+0x12afc>
  415890:	ldr	x0, [sp, #56]
  415894:	ldr	x2, [x0, #296]
  415898:	ldr	x1, [sp, #88]
  41589c:	mov	x0, x1
  4158a0:	lsl	x0, x0, #2
  4158a4:	add	x0, x0, x1
  4158a8:	lsl	x0, x0, #4
  4158ac:	add	x0, x2, x0
  4158b0:	add	x3, x0, #0x30
  4158b4:	ldr	x0, [sp, #56]
  4158b8:	ldr	x2, [x0, #296]
  4158bc:	ldr	x1, [sp, #48]
  4158c0:	mov	x0, x1
  4158c4:	lsl	x0, x0, #2
  4158c8:	add	x0, x0, x1
  4158cc:	lsl	x0, x0, #4
  4158d0:	add	x0, x2, x0
  4158d4:	add	x1, x0, #0x8
  4158d8:	ldr	x0, [sp, #56]
  4158dc:	add	x0, x0, #0x198
  4158e0:	mov	x2, x0
  4158e4:	mov	x0, x3
  4158e8:	bl	411e04 <wcrtomb@plt+0xf014>
  4158ec:	ldr	x0, [sp, #56]
  4158f0:	add	x0, x0, #0x198
  4158f4:	mov	x1, x0
  4158f8:	ldr	x0, [sp, #56]
  4158fc:	bl	412970 <wcrtomb@plt+0xfb80>
  415900:	str	w0, [sp, #84]
  415904:	ldr	x0, [sp, #56]
  415908:	add	x1, x0, #0x198
  41590c:	ldr	w0, [sp, #84]
  415910:	eor	w0, w0, #0x7
  415914:	mov	w2, w0
  415918:	ldr	x0, [sp, #56]
  41591c:	bl	412088 <wcrtomb@plt+0xf298>
  415920:	str	x0, [sp, #72]
  415924:	ldr	x0, [sp, #56]
  415928:	bl	41437c <wcrtomb@plt+0x1158c>
  41592c:	ldr	x0, [sp, #56]
  415930:	ldr	x1, [x0, #432]
  415934:	ldr	x0, [sp, #48]
  415938:	lsl	x0, x0, #3
  41593c:	add	x0, x1, x0
  415940:	ldr	x2, [x0]
  415944:	ldr	x0, [sp, #56]
  415948:	ldr	x3, [x0, #296]
  41594c:	ldr	x1, [sp, #88]
  415950:	mov	x0, x1
  415954:	lsl	x0, x0, #2
  415958:	add	x0, x0, x1
  41595c:	lsl	x0, x0, #4
  415960:	add	x0, x3, x0
  415964:	ldr	x0, [x0, #72]
  415968:	lsl	x0, x0, #3
  41596c:	add	x0, x2, x0
  415970:	ldr	x1, [sp, #72]
  415974:	str	x1, [x0]
  415978:	ldr	x0, [sp, #72]
  41597c:	ldr	x19, [sp, #16]
  415980:	ldp	x29, x30, [sp], #128
  415984:	ret
  415988:	stp	x29, x30, [sp, #-64]!
  41598c:	mov	x29, sp
  415990:	str	x0, [sp, #40]
  415994:	str	x1, [sp, #32]
  415998:	str	x2, [sp, #24]
  41599c:	str	x3, [sp, #16]
  4159a0:	ldr	x0, [sp, #32]
  4159a4:	ldrb	w0, [x0]
  4159a8:	ldr	x1, [sp, #40]
  4159ac:	sxtw	x0, w0
  4159b0:	add	x0, x1, x0
  4159b4:	ldrb	w0, [x0, #716]
  4159b8:	cmp	w0, #0x0
  4159bc:	b.eq	4159fc <wcrtomb@plt+0x12c0c>  // b.none
  4159c0:	ldr	x0, [sp, #32]
  4159c4:	b	415a10 <wcrtomb@plt+0x12c20>
  4159c8:	ldr	x1, [sp, #16]
  4159cc:	ldr	x0, [sp, #24]
  4159d0:	sub	x0, x1, x0
  4159d4:	mov	x1, x0
  4159d8:	add	x0, sp, #0x3c
  4159dc:	ldr	x3, [sp, #40]
  4159e0:	mov	x2, x1
  4159e4:	ldr	x1, [sp, #24]
  4159e8:	bl	40e6bc <wcrtomb@plt+0xb8cc>
  4159ec:	sxtw	x0, w0
  4159f0:	ldr	x1, [sp, #24]
  4159f4:	add	x0, x1, x0
  4159f8:	str	x0, [sp, #24]
  4159fc:	ldr	x1, [sp, #24]
  415a00:	ldr	x0, [sp, #32]
  415a04:	cmp	x1, x0
  415a08:	b.cc	4159c8 <wcrtomb@plt+0x12bd8>  // b.lo, b.ul, b.last
  415a0c:	ldr	x0, [sp, #24]
  415a10:	ldp	x29, x30, [sp], #64
  415a14:	ret
  415a18:	stp	x29, x30, [sp, #-176]!
  415a1c:	mov	x29, sp
  415a20:	str	x0, [sp, #56]
  415a24:	str	x1, [sp, #48]
  415a28:	str	x2, [sp, #40]
  415a2c:	strb	w3, [sp, #39]
  415a30:	str	x4, [sp, #24]
  415a34:	strb	w5, [sp, #38]
  415a38:	ldr	x0, [sp, #56]
  415a3c:	ldr	x0, [x0, #304]
  415a40:	cmp	x0, #0x3ff
  415a44:	b.le	415c68 <wcrtomb@plt+0x12e78>
  415a48:	ldr	x0, [sp, #56]
  415a4c:	ldr	w0, [x0, #364]
  415a50:	sxtw	x0, w0
  415a54:	str	x0, [sp, #168]
  415a58:	b	415ab8 <wcrtomb@plt+0x12cc8>
  415a5c:	ldr	x0, [sp, #56]
  415a60:	ldr	x2, [x0, #296]
  415a64:	ldr	x1, [sp, #168]
  415a68:	mov	x0, x1
  415a6c:	lsl	x0, x0, #2
  415a70:	add	x0, x0, x1
  415a74:	lsl	x0, x0, #4
  415a78:	add	x0, x2, x0
  415a7c:	ldr	x0, [x0, #8]
  415a80:	bl	402b60 <free@plt>
  415a84:	ldr	x0, [sp, #56]
  415a88:	ldr	x2, [x0, #296]
  415a8c:	ldr	x1, [sp, #168]
  415a90:	mov	x0, x1
  415a94:	lsl	x0, x0, #2
  415a98:	add	x0, x0, x1
  415a9c:	lsl	x0, x0, #4
  415aa0:	add	x0, x2, x0
  415aa4:	ldr	x0, [x0, #48]
  415aa8:	bl	402b60 <free@plt>
  415aac:	ldr	x0, [sp, #168]
  415ab0:	add	x0, x0, #0x1
  415ab4:	str	x0, [sp, #168]
  415ab8:	ldr	x0, [sp, #56]
  415abc:	ldr	x0, [x0, #304]
  415ac0:	ldr	x1, [sp, #168]
  415ac4:	cmp	x1, x0
  415ac8:	b.lt	415a5c <wcrtomb@plt+0x12c6c>  // b.tstop
  415acc:	ldr	x0, [sp, #56]
  415ad0:	ldr	w0, [x0, #364]
  415ad4:	sxtw	x1, w0
  415ad8:	ldr	x0, [sp, #56]
  415adc:	str	x1, [x0, #304]
  415ae0:	ldr	x0, [sp, #56]
  415ae4:	ldr	x0, [x0, #368]
  415ae8:	cmp	x0, #0x0
  415aec:	b.eq	415b8c <wcrtomb@plt+0x12d9c>  // b.none
  415af0:	str	xzr, [sp, #160]
  415af4:	b	415b70 <wcrtomb@plt+0x12d80>
  415af8:	ldr	x0, [sp, #56]
  415afc:	ldr	x1, [x0, #368]
  415b00:	ldr	x0, [sp, #160]
  415b04:	lsl	x0, x0, #3
  415b08:	add	x0, x1, x0
  415b0c:	ldr	x0, [x0]
  415b10:	bl	402b60 <free@plt>
  415b14:	ldr	x0, [sp, #56]
  415b18:	ldr	x1, [x0, #376]
  415b1c:	ldr	x0, [sp, #160]
  415b20:	lsl	x0, x0, #3
  415b24:	add	x0, x1, x0
  415b28:	ldr	x0, [x0]
  415b2c:	bl	402b60 <free@plt>
  415b30:	ldr	x0, [sp, #56]
  415b34:	ldr	x1, [x0, #376]
  415b38:	ldr	x0, [sp, #160]
  415b3c:	lsl	x0, x0, #3
  415b40:	add	x0, x1, x0
  415b44:	str	xzr, [x0]
  415b48:	ldr	x1, [sp, #56]
  415b4c:	ldr	x2, [x1, #368]
  415b50:	ldr	x1, [sp, #160]
  415b54:	lsl	x1, x1, #3
  415b58:	add	x1, x2, x1
  415b5c:	ldr	x0, [x0]
  415b60:	str	x0, [x1]
  415b64:	ldr	x0, [sp, #160]
  415b68:	add	x0, x0, #0x1
  415b6c:	str	x0, [sp, #160]
  415b70:	ldr	x0, [sp, #56]
  415b74:	ldr	x0, [x0, #352]
  415b78:	ldr	x1, [sp, #160]
  415b7c:	cmp	x1, x0
  415b80:	b.lt	415af8 <wcrtomb@plt+0x12d08>  // b.tstop
  415b84:	ldr	x0, [sp, #56]
  415b88:	str	wzr, [x0, #360]
  415b8c:	ldr	x0, [sp, #56]
  415b90:	ldrb	w0, [x0, #1048]
  415b94:	cmp	w0, #0x0
  415b98:	b.eq	415c68 <wcrtomb@plt+0x12e78>  // b.none
  415b9c:	ldr	x0, [sp, #56]
  415ba0:	ldr	x0, [x0, #432]
  415ba4:	cmp	x0, #0x0
  415ba8:	b.eq	415c68 <wcrtomb@plt+0x12e78>  // b.none
  415bac:	mov	x0, #0xffffffffffffffff    	// #-1
  415bb0:	str	x0, [sp, #152]
  415bb4:	b	415bf8 <wcrtomb@plt+0x12e08>
  415bb8:	ldr	x0, [sp, #56]
  415bbc:	ldr	x1, [x0, #432]
  415bc0:	ldr	x0, [sp, #152]
  415bc4:	lsl	x0, x0, #3
  415bc8:	add	x0, x1, x0
  415bcc:	ldr	x0, [x0]
  415bd0:	bl	402b60 <free@plt>
  415bd4:	ldr	x0, [sp, #56]
  415bd8:	ldr	x1, [x0, #432]
  415bdc:	ldr	x0, [sp, #152]
  415be0:	lsl	x0, x0, #3
  415be4:	add	x0, x1, x0
  415be8:	str	xzr, [x0]
  415bec:	ldr	x0, [sp, #152]
  415bf0:	add	x0, x0, #0x1
  415bf4:	str	x0, [sp, #152]
  415bf8:	ldr	x0, [sp, #56]
  415bfc:	ldr	x0, [x0, #352]
  415c00:	ldr	x1, [sp, #152]
  415c04:	cmp	x1, x0
  415c08:	b.lt	415bb8 <wcrtomb@plt+0x12dc8>  // b.tstop
  415c0c:	str	xzr, [sp, #144]
  415c10:	b	415c48 <wcrtomb@plt+0x12e58>
  415c14:	ldr	x0, [sp, #56]
  415c18:	ldr	x2, [x0, #296]
  415c1c:	ldr	x1, [sp, #144]
  415c20:	mov	x0, x1
  415c24:	lsl	x0, x0, #2
  415c28:	add	x0, x0, x1
  415c2c:	lsl	x0, x0, #4
  415c30:	add	x0, x2, x0
  415c34:	mov	x1, #0xffffffffffffffff    	// #-1
  415c38:	str	x1, [x0, #72]
  415c3c:	ldr	x0, [sp, #144]
  415c40:	add	x0, x0, #0x1
  415c44:	str	x0, [sp, #144]
  415c48:	ldr	x0, [sp, #56]
  415c4c:	ldr	w0, [x0, #364]
  415c50:	sxtw	x0, w0
  415c54:	ldr	x1, [sp, #144]
  415c58:	cmp	x1, x0
  415c5c:	b.lt	415c14 <wcrtomb@plt+0x12e24>  // b.tstop
  415c60:	ldr	x0, [sp, #56]
  415c64:	str	xzr, [x0, #440]
  415c68:	ldr	x0, [sp, #56]
  415c6c:	ldr	x0, [x0, #352]
  415c70:	cmp	x0, #0x0
  415c74:	b.ne	415c80 <wcrtomb@plt+0x12e90>  // b.any
  415c78:	ldr	x0, [sp, #56]
  415c7c:	bl	41437c <wcrtomb@plt+0x1158c>
  415c80:	str	xzr, [sp, #136]
  415c84:	str	xzr, [sp, #128]
  415c88:	ldr	x0, [sp, #48]
  415c8c:	str	x0, [sp, #72]
  415c90:	ldr	x0, [sp, #72]
  415c94:	str	x0, [sp, #120]
  415c98:	ldr	x0, [sp, #56]
  415c9c:	ldr	x0, [x0, #368]
  415ca0:	str	x0, [sp, #112]
  415ca4:	ldr	x0, [sp, #56]
  415ca8:	ldrb	w0, [x0, #459]
  415cac:	strb	w0, [sp, #103]
  415cb0:	ldr	x0, [sp, #40]
  415cb4:	ldrb	w0, [x0]
  415cb8:	strb	w0, [sp, #102]
  415cbc:	ldr	x0, [sp, #40]
  415cc0:	ldrb	w1, [sp, #103]
  415cc4:	strb	w1, [x0]
  415cc8:	ldrb	w0, [sp, #38]
  415ccc:	cmp	w0, #0x0
  415cd0:	b.eq	415d14 <wcrtomb@plt+0x12f24>  // b.none
  415cd4:	ldr	x0, [sp, #56]
  415cd8:	add	x0, x0, #0x110
  415cdc:	mov	x2, #0x8                   	// #8
  415ce0:	mov	w1, #0x0                   	// #0
  415ce4:	bl	402980 <memset@plt>
  415ce8:	ldr	x0, [sp, #56]
  415cec:	ldr	x0, [x0, #424]
  415cf0:	cmp	x0, #0x0
  415cf4:	b.ne	415d14 <wcrtomb@plt+0x12f24>  // b.any
  415cf8:	ldr	x0, [sp, #56]
  415cfc:	add	x2, x0, #0x198
  415d00:	ldr	x0, [sp, #56]
  415d04:	ldr	x0, [x0, #176]
  415d08:	mov	x1, x0
  415d0c:	mov	x0, x2
  415d10:	bl	411880 <wcrtomb@plt+0xea90>
  415d14:	str	xzr, [sp, #104]
  415d18:	b	415f94 <wcrtomb@plt+0x131a4>
  415d1c:	ldr	x0, [sp, #56]
  415d20:	ldr	w0, [x0, #364]
  415d24:	sxtw	x0, w0
  415d28:	ldr	x1, [sp, #136]
  415d2c:	cmp	x1, x0
  415d30:	b.ge	415ddc <wcrtomb@plt+0x12fec>  // b.tcont
  415d34:	ldrb	w0, [sp, #38]
  415d38:	eor	w0, w0, #0x1
  415d3c:	and	w0, w0, #0xff
  415d40:	cmp	w0, #0x0
  415d44:	b.ne	415d84 <wcrtomb@plt+0x12f94>  // b.any
  415d48:	ldr	x0, [sp, #56]
  415d4c:	ldr	x2, [x0, #296]
  415d50:	ldr	x1, [sp, #136]
  415d54:	mov	x0, x1
  415d58:	lsl	x0, x0, #2
  415d5c:	add	x0, x0, x1
  415d60:	lsl	x0, x0, #4
  415d64:	add	x0, x2, x0
  415d68:	ldr	x0, [x0, #56]
  415d6c:	cmp	x0, #0x0
  415d70:	b.ne	415dac <wcrtomb@plt+0x12fbc>  // b.any
  415d74:	b	415d84 <wcrtomb@plt+0x12f94>
  415d78:	ldr	x0, [sp, #72]
  415d7c:	add	x0, x0, #0x1
  415d80:	str	x0, [sp, #72]
  415d84:	ldr	x0, [sp, #72]
  415d88:	ldrb	w0, [x0]
  415d8c:	and	x0, x0, #0xff
  415d90:	lsl	x0, x0, #3
  415d94:	ldr	x1, [sp, #88]
  415d98:	add	x0, x1, x0
  415d9c:	ldr	x0, [x0]
  415da0:	ldr	x1, [sp, #136]
  415da4:	cmp	x1, x0
  415da8:	b.eq	415d78 <wcrtomb@plt+0x12f88>  // b.none
  415dac:	ldrb	w0, [sp, #38]
  415db0:	cmp	w0, #0x0
  415db4:	b.eq	415ddc <wcrtomb@plt+0x12fec>  // b.none
  415db8:	ldr	x0, [sp, #72]
  415dbc:	ldr	x3, [sp, #40]
  415dc0:	ldr	x2, [sp, #120]
  415dc4:	mov	x1, x0
  415dc8:	ldr	x0, [sp, #56]
  415dcc:	bl	415988 <wcrtomb@plt+0x12b98>
  415dd0:	str	x0, [sp, #120]
  415dd4:	ldr	x0, [sp, #120]
  415dd8:	str	x0, [sp, #72]
  415ddc:	ldrb	w0, [sp, #38]
  415de0:	cmp	w0, #0x0
  415de4:	b.eq	415eb4 <wcrtomb@plt+0x130c4>  // b.none
  415de8:	ldr	x0, [sp, #136]
  415dec:	str	x0, [sp, #128]
  415df0:	ldr	x0, [sp, #56]
  415df4:	ldr	x2, [x0, #296]
  415df8:	ldr	x1, [sp, #136]
  415dfc:	mov	x0, x1
  415e00:	lsl	x0, x0, #2
  415e04:	add	x0, x0, x1
  415e08:	lsl	x0, x0, #4
  415e0c:	add	x0, x2, x0
  415e10:	ldr	x0, [x0, #56]
  415e14:	cmp	x0, #0x0
  415e18:	b.eq	415e54 <wcrtomb@plt+0x13064>  // b.none
  415e1c:	ldr	x0, [sp, #72]
  415e20:	ldrb	w0, [x0]
  415e24:	ldr	x1, [sp, #56]
  415e28:	sxtw	x0, w0
  415e2c:	add	x0, x0, #0x144
  415e30:	lsl	x0, x0, #2
  415e34:	add	x0, x1, x0
  415e38:	ldr	w0, [x0, #12]
  415e3c:	cmn	w0, #0x1
  415e40:	b.ne	415e54 <wcrtomb@plt+0x13064>  // b.any
  415e44:	ldr	x0, [sp, #72]
  415e48:	ldr	x1, [sp, #40]
  415e4c:	cmp	x1, x0
  415e50:	b.hi	415e80 <wcrtomb@plt+0x13090>  // b.pmore
  415e54:	ldr	x0, [sp, #72]
  415e58:	add	x1, x0, #0x1
  415e5c:	str	x1, [sp, #72]
  415e60:	ldrb	w0, [x0]
  415e64:	and	x0, x0, #0xff
  415e68:	lsl	x0, x0, #3
  415e6c:	ldr	x1, [sp, #88]
  415e70:	add	x0, x1, x0
  415e74:	ldr	x0, [x0]
  415e78:	str	x0, [sp, #136]
  415e7c:	b	415f94 <wcrtomb@plt+0x131a4>
  415e80:	add	x0, sp, #0x48
  415e84:	ldr	x3, [sp, #40]
  415e88:	mov	x2, x0
  415e8c:	ldr	x1, [sp, #136]
  415e90:	ldr	x0, [sp, #56]
  415e94:	bl	4154fc <wcrtomb@plt+0x1270c>
  415e98:	str	x0, [sp, #136]
  415e9c:	ldr	x0, [sp, #72]
  415ea0:	str	x0, [sp, #120]
  415ea4:	ldr	x0, [sp, #56]
  415ea8:	ldr	x0, [x0, #368]
  415eac:	str	x0, [sp, #112]
  415eb0:	b	415f94 <wcrtomb@plt+0x131a4>
  415eb4:	ldr	x0, [sp, #72]
  415eb8:	add	x1, x0, #0x1
  415ebc:	str	x1, [sp, #72]
  415ec0:	ldrb	w0, [x0]
  415ec4:	and	x0, x0, #0xff
  415ec8:	lsl	x0, x0, #3
  415ecc:	ldr	x1, [sp, #88]
  415ed0:	add	x0, x1, x0
  415ed4:	ldr	x0, [x0]
  415ed8:	str	x0, [sp, #128]
  415edc:	ldr	x0, [sp, #128]
  415ee0:	lsl	x0, x0, #3
  415ee4:	ldr	x1, [sp, #112]
  415ee8:	add	x0, x1, x0
  415eec:	ldr	x0, [x0]
  415ef0:	str	x0, [sp, #88]
  415ef4:	ldr	x0, [sp, #88]
  415ef8:	cmp	x0, #0x0
  415efc:	b.ne	415f1c <wcrtomb@plt+0x1312c>  // b.any
  415f00:	ldr	x0, [sp, #136]
  415f04:	str	x0, [sp, #80]
  415f08:	ldr	x0, [sp, #128]
  415f0c:	str	x0, [sp, #136]
  415f10:	ldr	x0, [sp, #80]
  415f14:	str	x0, [sp, #128]
  415f18:	b	415fb8 <wcrtomb@plt+0x131c8>
  415f1c:	ldr	x0, [sp, #56]
  415f20:	ldr	w0, [x0, #364]
  415f24:	sxtw	x0, w0
  415f28:	ldr	x1, [sp, #136]
  415f2c:	cmp	x1, x0
  415f30:	b.ge	415f6c <wcrtomb@plt+0x1317c>  // b.tcont
  415f34:	b	415f44 <wcrtomb@plt+0x13154>
  415f38:	ldr	x0, [sp, #72]
  415f3c:	add	x0, x0, #0x1
  415f40:	str	x0, [sp, #72]
  415f44:	ldr	x0, [sp, #72]
  415f48:	ldrb	w0, [x0]
  415f4c:	and	x0, x0, #0xff
  415f50:	lsl	x0, x0, #3
  415f54:	ldr	x1, [sp, #88]
  415f58:	add	x0, x1, x0
  415f5c:	ldr	x0, [x0]
  415f60:	ldr	x1, [sp, #128]
  415f64:	cmp	x1, x0
  415f68:	b.eq	415f38 <wcrtomb@plt+0x13148>  // b.none
  415f6c:	ldr	x0, [sp, #72]
  415f70:	add	x1, x0, #0x1
  415f74:	str	x1, [sp, #72]
  415f78:	ldrb	w0, [x0]
  415f7c:	and	x0, x0, #0xff
  415f80:	lsl	x0, x0, #3
  415f84:	ldr	x1, [sp, #88]
  415f88:	add	x0, x1, x0
  415f8c:	ldr	x0, [x0]
  415f90:	str	x0, [sp, #136]
  415f94:	ldr	x0, [sp, #136]
  415f98:	lsl	x0, x0, #3
  415f9c:	ldr	x1, [sp, #112]
  415fa0:	add	x0, x1, x0
  415fa4:	ldr	x0, [x0]
  415fa8:	str	x0, [sp, #88]
  415fac:	ldr	x0, [sp, #88]
  415fb0:	cmp	x0, #0x0
  415fb4:	b.ne	415d1c <wcrtomb@plt+0x12f2c>  // b.any
  415fb8:	ldr	x0, [sp, #136]
  415fbc:	cmp	x0, #0x0
  415fc0:	b.ge	4160f0 <wcrtomb@plt+0x13300>  // b.tcont
  415fc4:	ldr	x0, [sp, #136]
  415fc8:	cmn	x0, #0x2
  415fcc:	b.ne	416000 <wcrtomb@plt+0x13210>  // b.any
  415fd0:	ldr	x0, [sp, #72]
  415fd4:	sub	x0, x0, #0x1
  415fd8:	ldrb	w0, [x0]
  415fdc:	mov	w2, w0
  415fe0:	ldr	x1, [sp, #56]
  415fe4:	ldr	x0, [sp, #128]
  415fe8:	bl	4145d0 <wcrtomb@plt+0x117e0>
  415fec:	str	x0, [sp, #136]
  415ff0:	ldr	x0, [sp, #56]
  415ff4:	ldr	x0, [x0, #368]
  415ff8:	str	x0, [sp, #112]
  415ffc:	b	415d18 <wcrtomb@plt+0x12f28>
  416000:	ldr	x0, [sp, #72]
  416004:	ldr	x1, [sp, #40]
  416008:	cmp	x1, x0
  41600c:	b.cc	4160e8 <wcrtomb@plt+0x132f8>  // b.lo, b.ul, b.last
  416010:	ldr	x0, [sp, #72]
  416014:	sub	x0, x0, #0x1
  416018:	ldrb	w0, [x0]
  41601c:	ldrb	w1, [sp, #103]
  416020:	cmp	w1, w0
  416024:	b.ne	4160e8 <wcrtomb@plt+0x132f8>  // b.any
  416028:	ldr	x0, [sp, #56]
  41602c:	ldr	x1, [x0, #392]
  416030:	ldr	x0, [sp, #128]
  416034:	lsl	x0, x0, #3
  416038:	add	x0, x1, x0
  41603c:	ldr	x0, [x0]
  416040:	cmp	x0, #0x0
  416044:	b.lt	4160e8 <wcrtomb@plt+0x132f8>  // b.tstop
  416048:	ldr	x0, [sp, #104]
  41604c:	add	x0, x0, #0x1
  416050:	str	x0, [sp, #104]
  416054:	ldr	x0, [sp, #72]
  416058:	str	x0, [sp, #120]
  41605c:	ldrb	w0, [sp, #39]
  416060:	cmp	w0, #0x0
  416064:	b.eq	416084 <wcrtomb@plt+0x13294>  // b.none
  416068:	ldr	x0, [sp, #56]
  41606c:	ldr	x1, [x0, #392]
  416070:	ldr	x0, [sp, #128]
  416074:	lsl	x0, x0, #3
  416078:	add	x0, x1, x0
  41607c:	ldr	x0, [x0]
  416080:	b	4160e0 <wcrtomb@plt+0x132f0>
  416084:	ldrb	w0, [sp, #103]
  416088:	ldr	x1, [sp, #56]
  41608c:	sxtw	x0, w0
  416090:	add	x0, x1, x0
  416094:	ldrb	w0, [x0, #460]
  416098:	cmp	w0, #0x4
  41609c:	b.eq	4160dc <wcrtomb@plt+0x132ec>  // b.none
  4160a0:	ldrb	w0, [sp, #103]
  4160a4:	ldr	x1, [sp, #56]
  4160a8:	sxtw	x0, w0
  4160ac:	add	x0, x1, x0
  4160b0:	ldrb	w0, [x0, #460]
  4160b4:	cmp	w0, #0x2
  4160b8:	b.ne	4160d0 <wcrtomb@plt+0x132e0>  // b.any
  4160bc:	ldr	x0, [sp, #56]
  4160c0:	ldr	w0, [x0, #364]
  4160c4:	sub	w0, w0, #0x1
  4160c8:	sxtw	x0, w0
  4160cc:	b	4160e0 <wcrtomb@plt+0x132f0>
  4160d0:	ldr	x0, [sp, #56]
  4160d4:	ldr	x0, [x0, #400]
  4160d8:	b	4160e0 <wcrtomb@plt+0x132f0>
  4160dc:	mov	x0, #0x0                   	// #0
  4160e0:	str	x0, [sp, #136]
  4160e4:	b	4162fc <wcrtomb@plt+0x1350c>
  4160e8:	str	xzr, [sp, #72]
  4160ec:	b	416304 <wcrtomb@plt+0x13514>
  4160f0:	ldr	x0, [sp, #56]
  4160f4:	ldr	x1, [x0, #376]
  4160f8:	ldr	x0, [sp, #136]
  4160fc:	lsl	x0, x0, #3
  416100:	add	x0, x1, x0
  416104:	ldr	x0, [x0]
  416108:	cmp	x0, #0x0
  41610c:	b.eq	4162d8 <wcrtomb@plt+0x134e8>  // b.none
  416110:	ldr	x0, [sp, #56]
  416114:	ldr	x1, [x0, #384]
  416118:	ldr	x0, [sp, #136]
  41611c:	add	x0, x1, x0
  416120:	ldrb	w1, [x0]
  416124:	ldr	x0, [sp, #72]
  416128:	ldrb	w0, [x0]
  41612c:	ldr	x2, [sp, #56]
  416130:	sxtw	x0, w0
  416134:	add	x0, x2, x0
  416138:	ldrb	w0, [x0, #460]
  41613c:	and	w0, w1, w0
  416140:	and	w0, w0, #0xff
  416144:	cmp	w0, #0x0
  416148:	b.ne	416300 <wcrtomb@plt+0x13510>  // b.any
  41614c:	ldr	x0, [sp, #72]
  416150:	ldr	x1, [sp, #40]
  416154:	cmp	x1, x0
  416158:	b.ne	41619c <wcrtomb@plt+0x133ac>  // b.any
  41615c:	ldr	x0, [sp, #56]
  416160:	ldr	x2, [x0, #296]
  416164:	ldr	x1, [sp, #136]
  416168:	mov	x0, x1
  41616c:	lsl	x0, x0, #2
  416170:	add	x0, x0, x1
  416174:	lsl	x0, x0, #4
  416178:	add	x0, x2, x0
  41617c:	ldrb	w0, [x0, #32]
  416180:	ldr	x3, [sp, #56]
  416184:	ldr	x2, [sp, #136]
  416188:	mov	w1, #0x4                   	// #4
  41618c:	bl	40e668 <wcrtomb@plt+0xb878>
  416190:	and	w0, w0, #0xff
  416194:	cmp	w0, #0x0
  416198:	b.ne	416300 <wcrtomb@plt+0x13510>  // b.any
  41619c:	ldrb	w0, [sp, #38]
  4161a0:	cmp	w0, #0x0
  4161a4:	b.eq	4161e4 <wcrtomb@plt+0x133f4>  // b.none
  4161a8:	ldr	x0, [sp, #56]
  4161ac:	ldr	w0, [x0, #364]
  4161b0:	sxtw	x0, w0
  4161b4:	ldr	x1, [sp, #136]
  4161b8:	cmp	x1, x0
  4161bc:	b.ge	4161e4 <wcrtomb@plt+0x133f4>  // b.tcont
  4161c0:	ldr	x0, [sp, #72]
  4161c4:	ldr	x3, [sp, #40]
  4161c8:	ldr	x2, [sp, #120]
  4161cc:	mov	x1, x0
  4161d0:	ldr	x0, [sp, #56]
  4161d4:	bl	415988 <wcrtomb@plt+0x12b98>
  4161d8:	str	x0, [sp, #120]
  4161dc:	ldr	x0, [sp, #120]
  4161e0:	str	x0, [sp, #72]
  4161e4:	ldr	x0, [sp, #136]
  4161e8:	str	x0, [sp, #128]
  4161ec:	ldrb	w0, [sp, #38]
  4161f0:	eor	w0, w0, #0x1
  4161f4:	and	w0, w0, #0xff
  4161f8:	cmp	w0, #0x0
  4161fc:	b.ne	416264 <wcrtomb@plt+0x13474>  // b.any
  416200:	ldr	x0, [sp, #56]
  416204:	ldr	x2, [x0, #296]
  416208:	ldr	x1, [sp, #136]
  41620c:	mov	x0, x1
  416210:	lsl	x0, x0, #2
  416214:	add	x0, x0, x1
  416218:	lsl	x0, x0, #4
  41621c:	add	x0, x2, x0
  416220:	ldr	x0, [x0, #56]
  416224:	cmp	x0, #0x0
  416228:	b.eq	416264 <wcrtomb@plt+0x13474>  // b.none
  41622c:	ldr	x0, [sp, #72]
  416230:	ldrb	w0, [x0]
  416234:	ldr	x1, [sp, #56]
  416238:	sxtw	x0, w0
  41623c:	add	x0, x0, #0x144
  416240:	lsl	x0, x0, #2
  416244:	add	x0, x1, x0
  416248:	ldr	w0, [x0, #12]
  41624c:	cmn	w0, #0x1
  416250:	b.ne	416264 <wcrtomb@plt+0x13474>  // b.any
  416254:	ldr	x0, [sp, #72]
  416258:	ldr	x1, [sp, #40]
  41625c:	cmp	x1, x0
  416260:	b.hi	4162a4 <wcrtomb@plt+0x134b4>  // b.pmore
  416264:	ldr	x0, [sp, #56]
  416268:	ldr	x1, [x0, #376]
  41626c:	ldr	x0, [sp, #136]
  416270:	lsl	x0, x0, #3
  416274:	add	x0, x1, x0
  416278:	ldr	x1, [x0]
  41627c:	ldr	x0, [sp, #72]
  416280:	add	x2, x0, #0x1
  416284:	str	x2, [sp, #72]
  416288:	ldrb	w0, [x0]
  41628c:	and	x0, x0, #0xff
  416290:	lsl	x0, x0, #3
  416294:	add	x0, x1, x0
  416298:	ldr	x0, [x0]
  41629c:	str	x0, [sp, #136]
  4162a0:	b	4162fc <wcrtomb@plt+0x1350c>
  4162a4:	add	x0, sp, #0x48
  4162a8:	ldr	x3, [sp, #40]
  4162ac:	mov	x2, x0
  4162b0:	ldr	x1, [sp, #136]
  4162b4:	ldr	x0, [sp, #56]
  4162b8:	bl	4154fc <wcrtomb@plt+0x1270c>
  4162bc:	str	x0, [sp, #136]
  4162c0:	ldr	x0, [sp, #72]
  4162c4:	str	x0, [sp, #120]
  4162c8:	ldr	x0, [sp, #56]
  4162cc:	ldr	x0, [x0, #368]
  4162d0:	str	x0, [sp, #112]
  4162d4:	b	415d18 <wcrtomb@plt+0x12f28>
  4162d8:	ldr	x0, [sp, #72]
  4162dc:	ldrb	w0, [x0]
  4162e0:	mov	w2, w0
  4162e4:	ldr	x1, [sp, #56]
  4162e8:	ldr	x0, [sp, #136]
  4162ec:	bl	4145d0 <wcrtomb@plt+0x117e0>
  4162f0:	ldr	x0, [sp, #56]
  4162f4:	ldr	x0, [x0, #368]
  4162f8:	str	x0, [sp, #112]
  4162fc:	b	415d18 <wcrtomb@plt+0x12f28>
  416300:	nop
  416304:	ldr	x0, [sp, #24]
  416308:	cmp	x0, #0x0
  41630c:	b.eq	416328 <wcrtomb@plt+0x13538>  // b.none
  416310:	ldr	x0, [sp, #24]
  416314:	ldr	x1, [x0]
  416318:	ldr	x0, [sp, #104]
  41631c:	add	x1, x1, x0
  416320:	ldr	x0, [sp, #24]
  416324:	str	x1, [x0]
  416328:	ldr	x0, [sp, #40]
  41632c:	ldrb	w1, [sp, #102]
  416330:	strb	w1, [x0]
  416334:	ldr	x0, [sp, #72]
  416338:	ldp	x29, x30, [sp], #176
  41633c:	ret
  416340:	stp	x29, x30, [sp, #-64]!
  416344:	mov	x29, sp
  416348:	str	x0, [sp, #56]
  41634c:	str	x1, [sp, #48]
  416350:	str	x2, [sp, #40]
  416354:	strb	w3, [sp, #39]
  416358:	str	x4, [sp, #24]
  41635c:	str	x5, [sp, #16]
  416360:	mov	w5, #0x1                   	// #1
  416364:	ldr	x4, [sp, #24]
  416368:	ldrb	w3, [sp, #39]
  41636c:	ldr	x2, [sp, #40]
  416370:	ldr	x1, [sp, #48]
  416374:	ldr	x0, [sp, #56]
  416378:	bl	415a18 <wcrtomb@plt+0x12c28>
  41637c:	ldp	x29, x30, [sp], #64
  416380:	ret
  416384:	stp	x29, x30, [sp, #-64]!
  416388:	mov	x29, sp
  41638c:	str	x0, [sp, #56]
  416390:	str	x1, [sp, #48]
  416394:	str	x2, [sp, #40]
  416398:	strb	w3, [sp, #39]
  41639c:	str	x4, [sp, #24]
  4163a0:	str	x5, [sp, #16]
  4163a4:	mov	w5, #0x0                   	// #0
  4163a8:	ldr	x4, [sp, #24]
  4163ac:	ldrb	w3, [sp, #39]
  4163b0:	ldr	x2, [sp, #40]
  4163b4:	ldr	x1, [sp, #48]
  4163b8:	ldr	x0, [sp, #56]
  4163bc:	bl	415a18 <wcrtomb@plt+0x12c28>
  4163c0:	ldp	x29, x30, [sp], #64
  4163c4:	ret
  4163c8:	sub	sp, sp, #0x30
  4163cc:	str	x0, [sp, #40]
  4163d0:	str	x1, [sp, #32]
  4163d4:	str	x2, [sp, #24]
  4163d8:	strb	w3, [sp, #23]
  4163dc:	str	x4, [sp, #8]
  4163e0:	str	x5, [sp]
  4163e4:	ldr	x0, [sp]
  4163e8:	mov	w1, #0x1                   	// #1
  4163ec:	strb	w1, [x0]
  4163f0:	ldr	x0, [sp, #32]
  4163f4:	add	sp, sp, #0x30
  4163f8:	ret
  4163fc:	stp	x29, x30, [sp, #-64]!
  416400:	mov	x29, sp
  416404:	str	x0, [sp, #56]
  416408:	str	x1, [sp, #48]
  41640c:	str	x2, [sp, #40]
  416410:	strb	w3, [sp, #39]
  416414:	str	x4, [sp, #24]
  416418:	str	x5, [sp, #16]
  41641c:	ldr	x0, [sp, #56]
  416420:	ldr	x6, [x0, #1040]
  416424:	ldr	x5, [sp, #16]
  416428:	ldr	x4, [sp, #24]
  41642c:	ldrb	w3, [sp, #39]
  416430:	ldr	x2, [sp, #40]
  416434:	ldr	x1, [sp, #48]
  416438:	ldr	x0, [sp, #56]
  41643c:	blr	x6
  416440:	ldp	x29, x30, [sp], #64
  416444:	ret
  416448:	sub	sp, sp, #0x10
  41644c:	str	x0, [sp, #8]
  416450:	ldr	x0, [sp, #8]
  416454:	ldr	x0, [x0, #288]
  416458:	add	sp, sp, #0x10
  41645c:	ret
  416460:	sub	sp, sp, #0x10
  416464:	str	x0, [sp, #8]
  416468:	ldr	x0, [sp, #8]
  41646c:	ldrb	w0, [x0, #192]
  416470:	add	sp, sp, #0x10
  416474:	ret
  416478:	stp	x29, x30, [sp, #-48]!
  41647c:	mov	x29, sp
  416480:	str	x0, [sp, #24]
  416484:	ldr	x0, [sp, #24]
  416488:	ldr	x0, [x0, #280]
  41648c:	bl	402b60 <free@plt>
  416490:	ldr	x0, [sp, #24]
  416494:	ldr	x0, [x0, #96]
  416498:	bl	402b60 <free@plt>
  41649c:	ldr	x0, [sp, #24]
  4164a0:	ldr	x0, [x0, #408]
  4164a4:	bl	402b60 <free@plt>
  4164a8:	ldr	x0, [sp, #24]
  4164ac:	ldr	x0, [x0, #432]
  4164b0:	cmp	x0, #0x0
  4164b4:	b.eq	416510 <wcrtomb@plt+0x13720>  // b.none
  4164b8:	mov	x0, #0xffffffffffffffff    	// #-1
  4164bc:	str	x0, [sp, #40]
  4164c0:	b	4164ec <wcrtomb@plt+0x136fc>
  4164c4:	ldr	x0, [sp, #24]
  4164c8:	ldr	x1, [x0, #432]
  4164cc:	ldr	x0, [sp, #40]
  4164d0:	lsl	x0, x0, #3
  4164d4:	add	x0, x1, x0
  4164d8:	ldr	x0, [x0]
  4164dc:	bl	402b60 <free@plt>
  4164e0:	ldr	x0, [sp, #40]
  4164e4:	add	x0, x0, #0x1
  4164e8:	str	x0, [sp, #40]
  4164ec:	ldr	x0, [sp, #24]
  4164f0:	ldr	x0, [x0, #352]
  4164f4:	ldr	x1, [sp, #40]
  4164f8:	cmp	x1, x0
  4164fc:	b.lt	4164c4 <wcrtomb@plt+0x136d4>  // b.tstop
  416500:	ldr	x0, [sp, #24]
  416504:	ldr	x0, [x0, #432]
  416508:	sub	x0, x0, #0x10
  41650c:	bl	402b60 <free@plt>
  416510:	nop
  416514:	ldp	x29, x30, [sp], #48
  416518:	ret
  41651c:	sub	sp, sp, #0x20
  416520:	str	x0, [sp, #8]
  416524:	str	xzr, [sp, #24]
  416528:	b	416598 <wcrtomb@plt+0x137a8>
  41652c:	ldr	x0, [sp, #8]
  416530:	ldr	x1, [x0, #144]
  416534:	ldr	x0, [sp, #24]
  416538:	lsl	x0, x0, #3
  41653c:	add	x0, x1, x0
  416540:	ldr	x0, [x0]
  416544:	cmp	x0, #0x111
  416548:	b.gt	416558 <wcrtomb@plt+0x13768>
  41654c:	cmp	x0, #0x10e
  416550:	b.ge	416568 <wcrtomb@plt+0x13778>  // b.tcont
  416554:	b	41658c <wcrtomb@plt+0x1379c>
  416558:	sub	x0, x0, #0x112
  41655c:	cmp	x0, #0x1
  416560:	b.hi	41658c <wcrtomb@plt+0x1379c>  // b.pmore
  416564:	b	416580 <wcrtomb@plt+0x13790>
  416568:	ldr	x0, [sp, #8]
  41656c:	ldrb	w0, [x0, #1048]
  416570:	eor	w0, w0, #0x1
  416574:	and	w0, w0, #0xff
  416578:	cmp	w0, #0x0
  41657c:	b.ne	416588 <wcrtomb@plt+0x13798>  // b.any
  416580:	mov	w0, #0x0                   	// #0
  416584:	b	4165b0 <wcrtomb@plt+0x137c0>
  416588:	nop
  41658c:	ldr	x0, [sp, #24]
  416590:	add	x0, x0, #0x1
  416594:	str	x0, [sp, #24]
  416598:	ldr	x0, [sp, #8]
  41659c:	ldr	x0, [x0, #152]
  4165a0:	ldr	x1, [sp, #24]
  4165a4:	cmp	x1, x0
  4165a8:	b.lt	41652c <wcrtomb@plt+0x1373c>  // b.tstop
  4165ac:	mov	w0, #0x1                   	// #1
  4165b0:	add	sp, sp, #0x20
  4165b4:	ret
  4165b8:	stp	x29, x30, [sp, #-48]!
  4165bc:	mov	x29, sp
  4165c0:	str	x0, [sp, #24]
  4165c4:	ldr	x0, [sp, #24]
  4165c8:	ldrb	w0, [x0, #1050]
  4165cc:	eor	w0, w0, #0x1
  4165d0:	and	w0, w0, #0xff
  4165d4:	cmp	w0, #0x0
  4165d8:	b.ne	4166cc <wcrtomb@plt+0x138dc>  // b.any
  4165dc:	strb	wzr, [sp, #47]
  4165e0:	str	xzr, [sp, #32]
  4165e4:	b	416644 <wcrtomb@plt+0x13854>
  4165e8:	ldr	x0, [sp, #24]
  4165ec:	ldr	x1, [x0, #144]
  4165f0:	ldr	x0, [sp, #32]
  4165f4:	lsl	x0, x0, #3
  4165f8:	add	x0, x1, x0
  4165fc:	ldr	x0, [x0]
  416600:	cmp	x0, #0x113
  416604:	b.eq	4166d4 <wcrtomb@plt+0x138e4>  // b.none
  416608:	cmp	x0, #0x113
  41660c:	b.gt	416634 <wcrtomb@plt+0x13844>
  416610:	cmp	x0, #0x10a
  416614:	b.eq	416624 <wcrtomb@plt+0x13834>  // b.none
  416618:	cmp	x0, #0x112
  41661c:	b.eq	416628 <wcrtomb@plt+0x13838>  // b.none
  416620:	b	416634 <wcrtomb@plt+0x13844>
  416624:	bl	402a90 <abort@plt>
  416628:	mov	w0, #0x1                   	// #1
  41662c:	strb	w0, [sp, #47]
  416630:	b	416638 <wcrtomb@plt+0x13848>
  416634:	nop
  416638:	ldr	x0, [sp, #32]
  41663c:	add	x0, x0, #0x1
  416640:	str	x0, [sp, #32]
  416644:	ldr	x0, [sp, #24]
  416648:	ldr	x0, [x0, #152]
  41664c:	ldr	x1, [sp, #32]
  416650:	cmp	x1, x0
  416654:	b.lt	4165e8 <wcrtomb@plt+0x137f8>  // b.tstop
  416658:	ldrb	w0, [sp, #47]
  41665c:	eor	w0, w0, #0x1
  416660:	and	w0, w0, #0xff
  416664:	cmp	w0, #0x0
  416668:	b.eq	41669c <wcrtomb@plt+0x138ac>  // b.none
  41666c:	ldr	x0, [sp, #24]
  416670:	ldr	x0, [x0, #288]
  416674:	cmp	x0, #0x0
  416678:	b.eq	41669c <wcrtomb@plt+0x138ac>  // b.none
  41667c:	ldr	x0, [sp, #24]
  416680:	ldr	x0, [x0, #288]
  416684:	bl	416b68 <wcrtomb@plt+0x13d78>
  416688:	ldr	x0, [sp, #24]
  41668c:	ldr	x0, [x0, #288]
  416690:	bl	402b60 <free@plt>
  416694:	ldr	x0, [sp, #24]
  416698:	str	xzr, [x0, #288]
  41669c:	ldr	x0, [sp, #24]
  4166a0:	bl	416478 <wcrtomb@plt+0x13688>
  4166a4:	ldr	x0, [sp, #24]
  4166a8:	strb	wzr, [x0, #1048]
  4166ac:	ldr	x0, [sp, #24]
  4166b0:	adrp	x1, 416000 <wcrtomb@plt+0x13210>
  4166b4:	add	x1, x1, #0x384
  4166b8:	str	x1, [x0, #1040]
  4166bc:	ldr	x0, [sp, #24]
  4166c0:	mov	w1, #0x1                   	// #1
  4166c4:	strb	w1, [x0, #192]
  4166c8:	b	4166d8 <wcrtomb@plt+0x138e8>
  4166cc:	nop
  4166d0:	b	4166d8 <wcrtomb@plt+0x138e8>
  4166d4:	nop
  4166d8:	ldp	x29, x30, [sp], #48
  4166dc:	ret
  4166e0:	stp	x29, x30, [sp, #-96]!
  4166e4:	mov	x29, sp
  4166e8:	str	x0, [sp, #24]
  4166ec:	bl	4180d8 <wcrtomb@plt+0x152e8>
  4166f0:	str	x0, [sp, #64]
  4166f4:	ldr	x1, [sp, #64]
  4166f8:	ldr	x0, [sp, #24]
  4166fc:	mov	x3, x1
  416700:	mov	x1, x0
  416704:	mov	x0, #0x920                 	// #2336
  416708:	mov	x2, x0
  41670c:	mov	x0, x3
  416710:	bl	4026d0 <memcpy@plt>
  416714:	ldr	x0, [sp, #64]
  416718:	strb	wzr, [x0, #1048]
  41671c:	ldr	x0, [sp, #64]
  416720:	adrp	x1, 416000 <wcrtomb@plt+0x13210>
  416724:	add	x1, x1, #0x384
  416728:	str	x1, [x0, #1040]
  41672c:	ldr	x0, [sp, #64]
  416730:	str	xzr, [x0, #280]
  416734:	ldr	x0, [sp, #64]
  416738:	str	xzr, [x0, #288]
  41673c:	ldr	x0, [sp, #64]
  416740:	str	xzr, [x0, #296]
  416744:	ldr	x0, [sp, #64]
  416748:	str	xzr, [x0, #304]
  41674c:	ldr	x0, [sp, #64]
  416750:	str	xzr, [x0, #336]
  416754:	ldr	x0, [sp, #64]
  416758:	str	xzr, [x0, #344]
  41675c:	ldr	x0, [sp, #64]
  416760:	str	xzr, [x0, #320]
  416764:	ldr	x0, [sp, #64]
  416768:	str	xzr, [x0, #352]
  41676c:	ldr	x0, [sp, #64]
  416770:	str	xzr, [x0, #368]
  416774:	ldr	x0, [sp, #64]
  416778:	str	xzr, [x0, #376]
  41677c:	ldr	x0, [sp, #64]
  416780:	str	xzr, [x0, #384]
  416784:	ldr	x0, [sp, #64]
  416788:	str	xzr, [x0, #392]
  41678c:	ldr	x0, [sp, #64]
  416790:	ldr	x0, [x0, #16]
  416794:	mov	x1, #0x20                  	// #32
  416798:	bl	41b69c <wcrtomb@plt+0x188ac>
  41679c:	mov	x1, x0
  4167a0:	ldr	x0, [sp, #64]
  4167a4:	str	x1, [x0]
  4167a8:	ldr	x0, [sp, #24]
  4167ac:	ldr	x0, [x0, #8]
  4167b0:	cmp	x0, #0x0
  4167b4:	b.eq	4167e0 <wcrtomb@plt+0x139f0>  // b.none
  4167b8:	ldr	x0, [sp, #64]
  4167bc:	ldr	x3, [x0]
  4167c0:	ldr	x0, [sp, #24]
  4167c4:	ldr	x1, [x0]
  4167c8:	ldr	x0, [sp, #24]
  4167cc:	ldr	x0, [x0, #8]
  4167d0:	lsl	x0, x0, #5
  4167d4:	mov	x2, x0
  4167d8:	mov	x0, x3
  4167dc:	bl	4026d0 <memcpy@plt>
  4167e0:	ldr	x0, [sp, #24]
  4167e4:	ldr	x0, [x0, #152]
  4167e8:	mov	x1, #0x10                  	// #16
  4167ec:	bl	41b69c <wcrtomb@plt+0x188ac>
  4167f0:	mov	x1, x0
  4167f4:	ldr	x0, [sp, #64]
  4167f8:	str	x1, [x0, #144]
  4167fc:	ldr	x0, [sp, #24]
  416800:	ldr	x0, [x0, #152]
  416804:	lsl	x1, x0, #1
  416808:	ldr	x0, [sp, #64]
  41680c:	str	x1, [x0, #160]
  416810:	strb	wzr, [sp, #95]
  416814:	strb	wzr, [sp, #94]
  416818:	str	xzr, [sp, #80]
  41681c:	ldr	x0, [sp, #80]
  416820:	str	x0, [sp, #72]
  416824:	b	416a40 <wcrtomb@plt+0x13c50>
  416828:	ldr	x0, [sp, #24]
  41682c:	ldr	x1, [x0, #144]
  416830:	ldr	x0, [sp, #72]
  416834:	lsl	x0, x0, #3
  416838:	add	x0, x1, x0
  41683c:	ldr	x0, [x0]
  416840:	cmp	x0, #0x113
  416844:	b.gt	416990 <wcrtomb@plt+0x13ba0>
  416848:	cmp	x0, #0x112
  41684c:	b.ge	416870 <wcrtomb@plt+0x13a80>  // b.tcont
  416850:	cmp	x0, #0x10a
  416854:	b.eq	416870 <wcrtomb@plt+0x13a80>  // b.none
  416858:	cmp	x0, #0x10a
  41685c:	b.lt	416990 <wcrtomb@plt+0x13ba0>  // b.tstop
  416860:	sub	x0, x0, #0x10e
  416864:	cmp	x0, #0x3
  416868:	b.hi	416990 <wcrtomb@plt+0x13ba0>  // b.pmore
  41686c:	b	416958 <wcrtomb@plt+0x13b68>
  416870:	add	x0, sp, #0x20
  416874:	bl	40e89c <wcrtomb@plt+0xbaac>
  416878:	add	x0, sp, #0x20
  41687c:	mov	x1, x0
  416880:	ldr	x0, [sp, #64]
  416884:	bl	40ec98 <wcrtomb@plt+0xbea8>
  416888:	mov	x3, x0
  41688c:	ldr	x0, [sp, #64]
  416890:	ldr	x1, [x0, #144]
  416894:	ldr	x0, [sp, #80]
  416898:	add	x2, x0, #0x1
  41689c:	str	x2, [sp, #80]
  4168a0:	lsl	x0, x0, #3
  4168a4:	add	x0, x1, x0
  4168a8:	add	x1, x3, #0x114
  4168ac:	str	x1, [x0]
  4168b0:	ldr	x0, [sp, #64]
  4168b4:	ldr	x1, [x0, #144]
  4168b8:	ldr	x0, [sp, #80]
  4168bc:	add	x2, x0, #0x1
  4168c0:	str	x2, [sp, #80]
  4168c4:	lsl	x0, x0, #3
  4168c8:	add	x0, x1, x0
  4168cc:	mov	x1, #0x102                 	// #258
  4168d0:	str	x1, [x0]
  4168d4:	ldr	x0, [sp, #24]
  4168d8:	ldr	x1, [x0, #144]
  4168dc:	ldr	x0, [sp, #72]
  4168e0:	add	x0, x0, #0x1
  4168e4:	lsl	x0, x0, #3
  4168e8:	add	x0, x1, x0
  4168ec:	ldr	x0, [x0]
  4168f0:	cmp	x0, #0x101
  4168f4:	b.eq	416940 <wcrtomb@plt+0x13b50>  // b.none
  4168f8:	ldr	x0, [sp, #24]
  4168fc:	ldr	x1, [x0, #144]
  416900:	ldr	x0, [sp, #72]
  416904:	add	x0, x0, #0x1
  416908:	lsl	x0, x0, #3
  41690c:	add	x0, x1, x0
  416910:	ldr	x0, [x0]
  416914:	cmp	x0, #0x102
  416918:	b.eq	416940 <wcrtomb@plt+0x13b50>  // b.none
  41691c:	ldr	x0, [sp, #24]
  416920:	ldr	x1, [x0, #144]
  416924:	ldr	x0, [sp, #72]
  416928:	add	x0, x0, #0x1
  41692c:	lsl	x0, x0, #3
  416930:	add	x0, x1, x0
  416934:	ldr	x0, [x0]
  416938:	cmp	x0, #0x103
  41693c:	b.ne	41694c <wcrtomb@plt+0x13b5c>  // b.any
  416940:	ldr	x0, [sp, #72]
  416944:	add	x0, x0, #0x1
  416948:	str	x0, [sp, #72]
  41694c:	mov	w0, #0x1                   	// #1
  416950:	strb	w0, [sp, #95]
  416954:	b	416a34 <wcrtomb@plt+0x13c44>
  416958:	ldr	x0, [sp, #24]
  41695c:	ldrb	w0, [x0, #1048]
  416960:	cmp	w0, #0x0
  416964:	b.eq	416990 <wcrtomb@plt+0x13ba0>  // b.none
  416968:	ldr	x0, [sp, #64]
  41696c:	ldr	x1, [x0, #144]
  416970:	ldr	x0, [sp, #80]
  416974:	add	x2, x0, #0x1
  416978:	str	x2, [sp, #80]
  41697c:	lsl	x0, x0, #3
  416980:	add	x0, x1, x0
  416984:	mov	x1, #0x100                 	// #256
  416988:	str	x1, [x0]
  41698c:	b	416a34 <wcrtomb@plt+0x13c44>
  416990:	ldr	x0, [sp, #24]
  416994:	ldr	x1, [x0, #144]
  416998:	ldr	x0, [sp, #72]
  41699c:	lsl	x0, x0, #3
  4169a0:	add	x1, x1, x0
  4169a4:	ldr	x0, [sp, #64]
  4169a8:	ldr	x2, [x0, #144]
  4169ac:	ldr	x0, [sp, #80]
  4169b0:	add	x3, x0, #0x1
  4169b4:	str	x3, [sp, #80]
  4169b8:	lsl	x0, x0, #3
  4169bc:	add	x0, x2, x0
  4169c0:	ldr	x1, [x1]
  4169c4:	str	x1, [x0]
  4169c8:	ldr	x0, [sp, #24]
  4169cc:	ldr	x1, [x0, #144]
  4169d0:	ldr	x0, [sp, #72]
  4169d4:	lsl	x0, x0, #3
  4169d8:	add	x0, x1, x0
  4169dc:	ldr	x0, [x0]
  4169e0:	cmp	x0, #0x0
  4169e4:	b.lt	416a08 <wcrtomb@plt+0x13c18>  // b.tstop
  4169e8:	ldr	x0, [sp, #24]
  4169ec:	ldr	x1, [x0, #144]
  4169f0:	ldr	x0, [sp, #72]
  4169f4:	lsl	x0, x0, #3
  4169f8:	add	x0, x1, x0
  4169fc:	ldr	x0, [x0]
  416a00:	cmp	x0, #0xff
  416a04:	b.le	416a28 <wcrtomb@plt+0x13c38>
  416a08:	ldr	x0, [sp, #24]
  416a0c:	ldr	x1, [x0, #144]
  416a10:	ldr	x0, [sp, #72]
  416a14:	lsl	x0, x0, #3
  416a18:	add	x0, x1, x0
  416a1c:	ldr	x0, [x0]
  416a20:	cmp	x0, #0x113
  416a24:	b.le	416a30 <wcrtomb@plt+0x13c40>
  416a28:	mov	w0, #0x1                   	// #1
  416a2c:	strb	w0, [sp, #94]
  416a30:	nop
  416a34:	ldr	x0, [sp, #72]
  416a38:	add	x0, x0, #0x1
  416a3c:	str	x0, [sp, #72]
  416a40:	ldr	x0, [sp, #24]
  416a44:	ldr	x0, [x0, #152]
  416a48:	ldr	x1, [sp, #72]
  416a4c:	cmp	x1, x0
  416a50:	b.lt	416828 <wcrtomb@plt+0x13a38>  // b.tstop
  416a54:	ldr	x0, [sp, #64]
  416a58:	ldr	x1, [sp, #80]
  416a5c:	str	x1, [x0, #152]
  416a60:	ldrb	w0, [sp, #94]
  416a64:	cmp	w0, #0x0
  416a68:	b.eq	416a98 <wcrtomb@plt+0x13ca8>  // b.none
  416a6c:	ldrb	w0, [sp, #95]
  416a70:	cmp	w0, #0x0
  416a74:	b.ne	416a88 <wcrtomb@plt+0x13c98>  // b.any
  416a78:	ldr	x0, [sp, #24]
  416a7c:	ldrb	w0, [x0, #1048]
  416a80:	cmp	w0, #0x0
  416a84:	b.eq	416a98 <wcrtomb@plt+0x13ca8>  // b.none
  416a88:	ldr	x0, [sp, #24]
  416a8c:	ldr	x1, [sp, #64]
  416a90:	str	x1, [x0, #288]
  416a94:	b	416aac <wcrtomb@plt+0x13cbc>
  416a98:	ldr	x0, [sp, #64]
  416a9c:	bl	416b68 <wcrtomb@plt+0x13d78>
  416aa0:	ldr	x0, [sp, #64]
  416aa4:	bl	402b60 <free@plt>
  416aa8:	nop
  416aac:	nop
  416ab0:	ldp	x29, x30, [sp], #96
  416ab4:	ret
  416ab8:	stp	x29, x30, [sp, #-48]!
  416abc:	mov	x29, sp
  416ac0:	str	x0, [sp, #40]
  416ac4:	str	x1, [sp, #32]
  416ac8:	str	x2, [sp, #24]
  416acc:	strb	w3, [sp, #23]
  416ad0:	ldr	x0, [sp, #40]
  416ad4:	cmp	x0, #0x0
  416ad8:	b.eq	416aec <wcrtomb@plt+0x13cfc>  // b.none
  416adc:	ldr	x2, [sp, #24]
  416ae0:	ldr	x1, [sp, #32]
  416ae4:	ldr	x0, [sp, #40]
  416ae8:	bl	411684 <wcrtomb@plt+0xe894>
  416aec:	ldr	x0, [sp, #24]
  416af0:	bl	4166e0 <wcrtomb@plt+0x138f0>
  416af4:	ldr	x0, [sp, #24]
  416af8:	bl	41651c <wcrtomb@plt+0x1372c>
  416afc:	and	w0, w0, #0xff
  416b00:	cmp	w0, #0x0
  416b04:	b.eq	416b20 <wcrtomb@plt+0x13d30>  // b.none
  416b08:	ldr	x0, [sp, #24]
  416b0c:	bl	4165b8 <wcrtomb@plt+0x137c8>
  416b10:	ldrb	w1, [sp, #23]
  416b14:	ldr	x0, [sp, #24]
  416b18:	bl	41397c <wcrtomb@plt+0x10b8c>
  416b1c:	b	416b30 <wcrtomb@plt+0x13d40>
  416b20:	ldr	x0, [sp, #24]
  416b24:	adrp	x1, 416000 <wcrtomb@plt+0x13210>
  416b28:	add	x1, x1, #0x3c8
  416b2c:	str	x1, [x0, #1040]
  416b30:	ldr	x0, [sp, #24]
  416b34:	ldr	x0, [x0, #288]
  416b38:	cmp	x0, #0x0
  416b3c:	b.eq	416b5c <wcrtomb@plt+0x13d6c>  // b.none
  416b40:	ldr	x0, [sp, #24]
  416b44:	mov	w1, #0x1                   	// #1
  416b48:	strb	w1, [x0, #192]
  416b4c:	ldr	x0, [sp, #24]
  416b50:	ldr	x0, [x0, #288]
  416b54:	ldrb	w1, [sp, #23]
  416b58:	bl	41397c <wcrtomb@plt+0x10b8c>
  416b5c:	nop
  416b60:	ldp	x29, x30, [sp], #48
  416b64:	ret
  416b68:	stp	x29, x30, [sp, #-64]!
  416b6c:	mov	x29, sp
  416b70:	str	x0, [sp, #24]
  416b74:	ldr	x0, [sp, #24]
  416b78:	ldr	x0, [x0]
  416b7c:	bl	402b60 <free@plt>
  416b80:	ldr	x0, [sp, #24]
  416b84:	ldr	x0, [x0, #144]
  416b88:	bl	402b60 <free@plt>
  416b8c:	ldr	x0, [sp, #24]
  416b90:	ldrb	w0, [x0, #1048]
  416b94:	cmp	w0, #0x0
  416b98:	b.eq	416ba4 <wcrtomb@plt+0x13db4>  // b.none
  416b9c:	ldr	x0, [sp, #24]
  416ba0:	bl	416478 <wcrtomb@plt+0x13688>
  416ba4:	ldr	x0, [sp, #24]
  416ba8:	ldr	x0, [x0, #336]
  416bac:	bl	402b60 <free@plt>
  416bb0:	ldr	x0, [sp, #24]
  416bb4:	ldr	x0, [x0, #344]
  416bb8:	bl	402b60 <free@plt>
  416bbc:	str	xzr, [sp, #56]
  416bc0:	b	416c20 <wcrtomb@plt+0x13e30>
  416bc4:	ldr	x0, [sp, #24]
  416bc8:	ldr	x2, [x0, #296]
  416bcc:	ldr	x1, [sp, #56]
  416bd0:	mov	x0, x1
  416bd4:	lsl	x0, x0, #2
  416bd8:	add	x0, x0, x1
  416bdc:	lsl	x0, x0, #4
  416be0:	add	x0, x2, x0
  416be4:	ldr	x0, [x0, #8]
  416be8:	bl	402b60 <free@plt>
  416bec:	ldr	x0, [sp, #24]
  416bf0:	ldr	x2, [x0, #296]
  416bf4:	ldr	x1, [sp, #56]
  416bf8:	mov	x0, x1
  416bfc:	lsl	x0, x0, #2
  416c00:	add	x0, x0, x1
  416c04:	lsl	x0, x0, #4
  416c08:	add	x0, x2, x0
  416c0c:	ldr	x0, [x0, #48]
  416c10:	bl	402b60 <free@plt>
  416c14:	ldr	x0, [sp, #56]
  416c18:	add	x0, x0, #0x1
  416c1c:	str	x0, [sp, #56]
  416c20:	ldr	x0, [sp, #24]
  416c24:	ldr	x0, [x0, #304]
  416c28:	ldr	x1, [sp, #56]
  416c2c:	cmp	x1, x0
  416c30:	b.lt	416bc4 <wcrtomb@plt+0x13dd4>  // b.tstop
  416c34:	ldr	x0, [sp, #24]
  416c38:	ldr	x0, [x0, #296]
  416c3c:	bl	402b60 <free@plt>
  416c40:	ldr	x0, [sp, #24]
  416c44:	ldr	x0, [x0, #320]
  416c48:	cmp	x0, #0x0
  416c4c:	b.eq	416cac <wcrtomb@plt+0x13ebc>  // b.none
  416c50:	str	xzr, [sp, #48]
  416c54:	b	416c8c <wcrtomb@plt+0x13e9c>
  416c58:	ldr	x0, [sp, #24]
  416c5c:	ldr	x2, [x0, #320]
  416c60:	ldr	x1, [sp, #48]
  416c64:	mov	x0, x1
  416c68:	lsl	x0, x0, #1
  416c6c:	add	x0, x0, x1
  416c70:	lsl	x0, x0, #3
  416c74:	add	x0, x2, x0
  416c78:	ldr	x0, [x0]
  416c7c:	bl	402b60 <free@plt>
  416c80:	ldr	x0, [sp, #48]
  416c84:	add	x0, x0, #0x1
  416c88:	str	x0, [sp, #48]
  416c8c:	ldr	x0, [sp, #24]
  416c90:	ldr	x0, [x0, #152]
  416c94:	ldr	x1, [sp, #48]
  416c98:	cmp	x1, x0
  416c9c:	b.lt	416c58 <wcrtomb@plt+0x13e68>  // b.tstop
  416ca0:	ldr	x0, [sp, #24]
  416ca4:	ldr	x0, [x0, #320]
  416ca8:	bl	402b60 <free@plt>
  416cac:	ldr	x0, [sp, #24]
  416cb0:	ldr	x0, [x0, #368]
  416cb4:	cmp	x0, #0x0
  416cb8:	b.eq	416d50 <wcrtomb@plt+0x13f60>  // b.none
  416cbc:	str	xzr, [sp, #40]
  416cc0:	b	416d08 <wcrtomb@plt+0x13f18>
  416cc4:	ldr	x0, [sp, #24]
  416cc8:	ldr	x1, [x0, #368]
  416ccc:	ldr	x0, [sp, #40]
  416cd0:	lsl	x0, x0, #3
  416cd4:	add	x0, x1, x0
  416cd8:	ldr	x0, [x0]
  416cdc:	bl	402b60 <free@plt>
  416ce0:	ldr	x0, [sp, #24]
  416ce4:	ldr	x1, [x0, #376]
  416ce8:	ldr	x0, [sp, #40]
  416cec:	lsl	x0, x0, #3
  416cf0:	add	x0, x1, x0
  416cf4:	ldr	x0, [x0]
  416cf8:	bl	402b60 <free@plt>
  416cfc:	ldr	x0, [sp, #40]
  416d00:	add	x0, x0, #0x1
  416d04:	str	x0, [sp, #40]
  416d08:	ldr	x0, [sp, #24]
  416d0c:	ldr	x0, [x0, #352]
  416d10:	ldr	x1, [sp, #40]
  416d14:	cmp	x1, x0
  416d18:	b.lt	416cc4 <wcrtomb@plt+0x13ed4>  // b.tstop
  416d1c:	ldr	x0, [sp, #24]
  416d20:	ldr	x0, [x0, #368]
  416d24:	sub	x0, x0, #0x10
  416d28:	bl	402b60 <free@plt>
  416d2c:	ldr	x0, [sp, #24]
  416d30:	ldr	x0, [x0, #376]
  416d34:	bl	402b60 <free@plt>
  416d38:	ldr	x0, [sp, #24]
  416d3c:	ldr	x0, [x0, #392]
  416d40:	bl	402b60 <free@plt>
  416d44:	ldr	x0, [sp, #24]
  416d48:	ldr	x0, [x0, #384]
  416d4c:	bl	402b60 <free@plt>
  416d50:	ldr	x0, [sp, #24]
  416d54:	ldr	x0, [x0, #288]
  416d58:	cmp	x0, #0x0
  416d5c:	b.eq	416d78 <wcrtomb@plt+0x13f88>  // b.none
  416d60:	ldr	x0, [sp, #24]
  416d64:	ldr	x0, [x0, #288]
  416d68:	bl	416b68 <wcrtomb@plt+0x13d78>
  416d6c:	ldr	x0, [sp, #24]
  416d70:	ldr	x0, [x0, #288]
  416d74:	bl	402b60 <free@plt>
  416d78:	nop
  416d7c:	ldp	x29, x30, [sp], #64
  416d80:	ret
  416d84:	stp	x29, x30, [sp, #-64]!
  416d88:	mov	x29, sp
  416d8c:	str	x0, [sp, #24]
  416d90:	str	x1, [sp, #16]
  416d94:	ldr	x0, [sp, #16]
  416d98:	bl	402720 <strlen@plt>
  416d9c:	str	x0, [sp, #56]
  416da0:	ldr	x0, [sp, #56]
  416da4:	cmp	x0, #0x0
  416da8:	b.ne	416db4 <wcrtomb@plt+0x13fc4>  // b.any
  416dac:	ldr	x0, [sp, #24]
  416db0:	b	416e08 <wcrtomb@plt+0x14018>
  416db4:	ldr	x0, [sp, #24]
  416db8:	bl	402720 <strlen@plt>
  416dbc:	str	x0, [sp, #48]
  416dc0:	ldr	x1, [sp, #48]
  416dc4:	ldr	x0, [sp, #56]
  416dc8:	add	x0, x1, x0
  416dcc:	add	x0, x0, #0x1
  416dd0:	mov	x1, x0
  416dd4:	ldr	x0, [sp, #24]
  416dd8:	bl	41b910 <wcrtomb@plt+0x18b20>
  416ddc:	str	x0, [sp, #40]
  416de0:	ldr	x0, [sp, #48]
  416de4:	ldr	x1, [sp, #40]
  416de8:	add	x3, x1, x0
  416dec:	ldr	x0, [sp, #56]
  416df0:	add	x0, x0, #0x1
  416df4:	mov	x2, x0
  416df8:	ldr	x1, [sp, #16]
  416dfc:	mov	x0, x3
  416e00:	bl	4026d0 <memcpy@plt>
  416e04:	ldr	x0, [sp, #40]
  416e08:	ldp	x29, x30, [sp], #64
  416e0c:	ret
  416e10:	stp	x29, x30, [sp, #-32]!
  416e14:	mov	x29, sp
  416e18:	str	x0, [sp, #24]
  416e1c:	b	416e34 <wcrtomb@plt+0x14044>
  416e20:	ldr	x0, [sp, #24]
  416e24:	add	x1, x0, #0x8
  416e28:	str	x1, [sp, #24]
  416e2c:	ldr	x0, [x0]
  416e30:	bl	402b60 <free@plt>
  416e34:	ldr	x0, [sp, #24]
  416e38:	ldr	x0, [x0]
  416e3c:	cmp	x0, #0x0
  416e40:	b.ne	416e20 <wcrtomb@plt+0x14030>  // b.any
  416e44:	nop
  416e48:	nop
  416e4c:	ldp	x29, x30, [sp], #32
  416e50:	ret
  416e54:	stp	x29, x30, [sp, #-64]!
  416e58:	mov	x29, sp
  416e5c:	str	x0, [sp, #40]
  416e60:	str	x1, [sp, #32]
  416e64:	str	x2, [sp, #24]
  416e68:	ldr	x0, [sp, #24]
  416e6c:	add	x0, x0, #0x1
  416e70:	bl	41b8d0 <wcrtomb@plt+0x18ae0>
  416e74:	mov	x3, x0
  416e78:	ldr	x0, [sp, #24]
  416e7c:	mov	x2, x0
  416e80:	ldr	x1, [sp, #32]
  416e84:	mov	x0, x3
  416e88:	bl	4026d0 <memcpy@plt>
  416e8c:	str	x0, [sp, #32]
  416e90:	ldr	x0, [sp, #24]
  416e94:	ldr	x1, [sp, #32]
  416e98:	add	x0, x1, x0
  416e9c:	strb	wzr, [x0]
  416ea0:	str	xzr, [sp, #56]
  416ea4:	b	416ee8 <wcrtomb@plt+0x140f8>
  416ea8:	ldr	x0, [sp, #56]
  416eac:	lsl	x0, x0, #3
  416eb0:	ldr	x1, [sp, #40]
  416eb4:	add	x0, x1, x0
  416eb8:	ldr	x0, [x0]
  416ebc:	ldr	x1, [sp, #32]
  416ec0:	bl	402c90 <strstr@plt>
  416ec4:	cmp	x0, #0x0
  416ec8:	b.eq	416edc <wcrtomb@plt+0x140ec>  // b.none
  416ecc:	ldr	x0, [sp, #32]
  416ed0:	bl	402b60 <free@plt>
  416ed4:	ldr	x0, [sp, #40]
  416ed8:	b	417028 <wcrtomb@plt+0x14238>
  416edc:	ldr	x0, [sp, #56]
  416ee0:	add	x0, x0, #0x1
  416ee4:	str	x0, [sp, #56]
  416ee8:	ldr	x0, [sp, #56]
  416eec:	lsl	x0, x0, #3
  416ef0:	ldr	x1, [sp, #40]
  416ef4:	add	x0, x1, x0
  416ef8:	ldr	x0, [x0]
  416efc:	cmp	x0, #0x0
  416f00:	b.ne	416ea8 <wcrtomb@plt+0x140b8>  // b.any
  416f04:	str	xzr, [sp, #48]
  416f08:	b	416fb4 <wcrtomb@plt+0x141c4>
  416f0c:	ldr	x0, [sp, #48]
  416f10:	lsl	x0, x0, #3
  416f14:	ldr	x1, [sp, #40]
  416f18:	add	x0, x1, x0
  416f1c:	ldr	x0, [x0]
  416f20:	mov	x1, x0
  416f24:	ldr	x0, [sp, #32]
  416f28:	bl	402c90 <strstr@plt>
  416f2c:	cmp	x0, #0x0
  416f30:	b.ne	416f44 <wcrtomb@plt+0x14154>  // b.any
  416f34:	ldr	x0, [sp, #48]
  416f38:	add	x0, x0, #0x1
  416f3c:	str	x0, [sp, #48]
  416f40:	b	416fb4 <wcrtomb@plt+0x141c4>
  416f44:	ldr	x0, [sp, #48]
  416f48:	lsl	x0, x0, #3
  416f4c:	ldr	x1, [sp, #40]
  416f50:	add	x0, x1, x0
  416f54:	ldr	x0, [x0]
  416f58:	bl	402b60 <free@plt>
  416f5c:	ldr	x0, [sp, #56]
  416f60:	sub	x0, x0, #0x1
  416f64:	str	x0, [sp, #56]
  416f68:	ldr	x1, [sp, #56]
  416f6c:	ldr	x0, [sp, #48]
  416f70:	cmp	x1, x0
  416f74:	b.eq	416fd4 <wcrtomb@plt+0x141e4>  // b.none
  416f78:	ldr	x0, [sp, #56]
  416f7c:	lsl	x0, x0, #3
  416f80:	ldr	x1, [sp, #40]
  416f84:	add	x1, x1, x0
  416f88:	ldr	x0, [sp, #48]
  416f8c:	lsl	x0, x0, #3
  416f90:	ldr	x2, [sp, #40]
  416f94:	add	x0, x2, x0
  416f98:	ldr	x1, [x1]
  416f9c:	str	x1, [x0]
  416fa0:	ldr	x0, [sp, #56]
  416fa4:	lsl	x0, x0, #3
  416fa8:	ldr	x1, [sp, #40]
  416fac:	add	x0, x1, x0
  416fb0:	str	xzr, [x0]
  416fb4:	ldr	x0, [sp, #48]
  416fb8:	lsl	x0, x0, #3
  416fbc:	ldr	x1, [sp, #40]
  416fc0:	add	x0, x1, x0
  416fc4:	ldr	x0, [x0]
  416fc8:	cmp	x0, #0x0
  416fcc:	b.ne	416f0c <wcrtomb@plt+0x1411c>  // b.any
  416fd0:	b	416fd8 <wcrtomb@plt+0x141e8>
  416fd4:	nop
  416fd8:	ldr	x0, [sp, #56]
  416fdc:	add	x0, x0, #0x2
  416fe0:	mov	x2, #0x8                   	// #8
  416fe4:	mov	x1, x0
  416fe8:	ldr	x0, [sp, #40]
  416fec:	bl	41b714 <wcrtomb@plt+0x18924>
  416ff0:	str	x0, [sp, #40]
  416ff4:	ldr	x0, [sp, #56]
  416ff8:	lsl	x0, x0, #3
  416ffc:	ldr	x1, [sp, #40]
  417000:	add	x0, x1, x0
  417004:	ldr	x1, [sp, #32]
  417008:	str	x1, [x0]
  41700c:	ldr	x0, [sp, #56]
  417010:	add	x0, x0, #0x1
  417014:	lsl	x0, x0, #3
  417018:	ldr	x1, [sp, #40]
  41701c:	add	x0, x1, x0
  417020:	str	xzr, [x0]
  417024:	ldr	x0, [sp, #40]
  417028:	ldp	x29, x30, [sp], #64
  41702c:	ret
  417030:	stp	x29, x30, [sp, #-80]!
  417034:	mov	x29, sp
  417038:	str	x0, [sp, #24]
  41703c:	str	x1, [sp, #16]
  417040:	mov	x0, #0x8                   	// #8
  417044:	bl	41b9a8 <wcrtomb@plt+0x18bb8>
  417048:	str	x0, [sp, #72]
  41704c:	ldr	x0, [sp, #24]
  417050:	str	x0, [sp, #64]
  417054:	b	417140 <wcrtomb@plt+0x14350>
  417058:	str	xzr, [sp, #56]
  41705c:	ldr	x0, [sp, #64]
  417060:	ldrb	w0, [x0]
  417064:	mov	w1, w0
  417068:	ldr	x0, [sp, #16]
  41706c:	bl	402ba0 <strchr@plt>
  417070:	str	x0, [sp, #48]
  417074:	b	417108 <wcrtomb@plt+0x14318>
  417078:	mov	x0, #0x1                   	// #1
  41707c:	str	x0, [sp, #40]
  417080:	b	417090 <wcrtomb@plt+0x142a0>
  417084:	ldr	x0, [sp, #40]
  417088:	add	x0, x0, #0x1
  41708c:	str	x0, [sp, #40]
  417090:	ldr	x0, [sp, #40]
  417094:	ldr	x1, [sp, #64]
  417098:	add	x0, x1, x0
  41709c:	ldrb	w0, [x0]
  4170a0:	cmp	w0, #0x0
  4170a4:	b.eq	4170d0 <wcrtomb@plt+0x142e0>  // b.none
  4170a8:	ldr	x0, [sp, #40]
  4170ac:	ldr	x1, [sp, #64]
  4170b0:	add	x0, x1, x0
  4170b4:	ldrb	w1, [x0]
  4170b8:	ldr	x0, [sp, #40]
  4170bc:	ldr	x2, [sp, #48]
  4170c0:	add	x0, x2, x0
  4170c4:	ldrb	w0, [x0]
  4170c8:	cmp	w1, w0
  4170cc:	b.eq	417084 <wcrtomb@plt+0x14294>  // b.none
  4170d0:	ldr	x1, [sp, #40]
  4170d4:	ldr	x0, [sp, #56]
  4170d8:	cmp	x1, x0
  4170dc:	b.le	4170e8 <wcrtomb@plt+0x142f8>
  4170e0:	ldr	x0, [sp, #40]
  4170e4:	str	x0, [sp, #56]
  4170e8:	ldr	x0, [sp, #48]
  4170ec:	add	x2, x0, #0x1
  4170f0:	ldr	x0, [sp, #64]
  4170f4:	ldrb	w0, [x0]
  4170f8:	mov	w1, w0
  4170fc:	mov	x0, x2
  417100:	bl	402ba0 <strchr@plt>
  417104:	str	x0, [sp, #48]
  417108:	ldr	x0, [sp, #48]
  41710c:	cmp	x0, #0x0
  417110:	b.ne	417078 <wcrtomb@plt+0x14288>  // b.any
  417114:	ldr	x0, [sp, #56]
  417118:	cmp	x0, #0x0
  41711c:	b.eq	417134 <wcrtomb@plt+0x14344>  // b.none
  417120:	ldr	x2, [sp, #56]
  417124:	ldr	x1, [sp, #64]
  417128:	ldr	x0, [sp, #72]
  41712c:	bl	416e54 <wcrtomb@plt+0x14064>
  417130:	str	x0, [sp, #72]
  417134:	ldr	x0, [sp, #64]
  417138:	add	x0, x0, #0x1
  41713c:	str	x0, [sp, #64]
  417140:	ldr	x0, [sp, #64]
  417144:	ldrb	w0, [x0]
  417148:	cmp	w0, #0x0
  41714c:	b.ne	417058 <wcrtomb@plt+0x14268>  // b.any
  417150:	ldr	x0, [sp, #72]
  417154:	ldp	x29, x30, [sp], #80
  417158:	ret
  41715c:	stp	x29, x30, [sp, #-48]!
  417160:	mov	x29, sp
  417164:	str	x19, [sp, #16]
  417168:	str	x0, [sp, #40]
  41716c:	str	x1, [sp, #32]
  417170:	b	4171a8 <wcrtomb@plt+0x143b8>
  417174:	ldr	x0, [sp, #32]
  417178:	ldr	x19, [x0]
  41717c:	ldr	x0, [sp, #32]
  417180:	ldr	x0, [x0]
  417184:	bl	402720 <strlen@plt>
  417188:	mov	x2, x0
  41718c:	mov	x1, x19
  417190:	ldr	x0, [sp, #40]
  417194:	bl	416e54 <wcrtomb@plt+0x14064>
  417198:	str	x0, [sp, #40]
  41719c:	ldr	x0, [sp, #32]
  4171a0:	add	x0, x0, #0x8
  4171a4:	str	x0, [sp, #32]
  4171a8:	ldr	x0, [sp, #32]
  4171ac:	ldr	x0, [x0]
  4171b0:	cmp	x0, #0x0
  4171b4:	b.ne	417174 <wcrtomb@plt+0x14384>  // b.any
  4171b8:	ldr	x0, [sp, #40]
  4171bc:	ldr	x19, [sp, #16]
  4171c0:	ldp	x29, x30, [sp], #48
  4171c4:	ret
  4171c8:	stp	x29, x30, [sp, #-64]!
  4171cc:	mov	x29, sp
  4171d0:	str	x0, [sp, #24]
  4171d4:	str	x1, [sp, #16]
  4171d8:	mov	x0, #0x8                   	// #8
  4171dc:	bl	41b9a8 <wcrtomb@plt+0x18bb8>
  4171e0:	str	x0, [sp, #56]
  4171e4:	str	xzr, [sp, #48]
  4171e8:	b	417280 <wcrtomb@plt+0x14490>
  4171ec:	str	xzr, [sp, #40]
  4171f0:	b	417258 <wcrtomb@plt+0x14468>
  4171f4:	ldr	x0, [sp, #48]
  4171f8:	lsl	x0, x0, #3
  4171fc:	ldr	x1, [sp, #24]
  417200:	add	x0, x1, x0
  417204:	ldr	x2, [x0]
  417208:	ldr	x0, [sp, #40]
  41720c:	lsl	x0, x0, #3
  417210:	ldr	x1, [sp, #16]
  417214:	add	x0, x1, x0
  417218:	ldr	x0, [x0]
  41721c:	mov	x1, x0
  417220:	mov	x0, x2
  417224:	bl	417030 <wcrtomb@plt+0x14240>
  417228:	str	x0, [sp, #32]
  41722c:	ldr	x1, [sp, #32]
  417230:	ldr	x0, [sp, #56]
  417234:	bl	41715c <wcrtomb@plt+0x1436c>
  417238:	str	x0, [sp, #56]
  41723c:	ldr	x0, [sp, #32]
  417240:	bl	416e10 <wcrtomb@plt+0x14020>
  417244:	ldr	x0, [sp, #32]
  417248:	bl	402b60 <free@plt>
  41724c:	ldr	x0, [sp, #40]
  417250:	add	x0, x0, #0x1
  417254:	str	x0, [sp, #40]
  417258:	ldr	x0, [sp, #40]
  41725c:	lsl	x0, x0, #3
  417260:	ldr	x1, [sp, #16]
  417264:	add	x0, x1, x0
  417268:	ldr	x0, [x0]
  41726c:	cmp	x0, #0x0
  417270:	b.ne	4171f4 <wcrtomb@plt+0x14404>  // b.any
  417274:	ldr	x0, [sp, #48]
  417278:	add	x0, x0, #0x1
  41727c:	str	x0, [sp, #48]
  417280:	ldr	x0, [sp, #48]
  417284:	lsl	x0, x0, #3
  417288:	ldr	x1, [sp, #24]
  41728c:	add	x0, x1, x0
  417290:	ldr	x0, [x0]
  417294:	cmp	x0, #0x0
  417298:	b.ne	4171ec <wcrtomb@plt+0x143fc>  // b.any
  41729c:	ldr	x0, [sp, #56]
  4172a0:	ldp	x29, x30, [sp], #64
  4172a4:	ret
  4172a8:	stp	x29, x30, [sp, #-48]!
  4172ac:	mov	x29, sp
  4172b0:	str	x0, [sp, #24]
  4172b4:	str	x1, [sp, #16]
  4172b8:	mov	x0, #0x30                  	// #48
  4172bc:	bl	41b8d0 <wcrtomb@plt+0x18ae0>
  4172c0:	str	x0, [sp, #40]
  4172c4:	mov	x0, #0x8                   	// #8
  4172c8:	bl	41b9a8 <wcrtomb@plt+0x18bb8>
  4172cc:	mov	x1, x0
  4172d0:	ldr	x0, [sp, #40]
  4172d4:	str	x1, [x0]
  4172d8:	ldr	x0, [sp, #16]
  4172dc:	bl	41b9a8 <wcrtomb@plt+0x18bb8>
  4172e0:	mov	x1, x0
  4172e4:	ldr	x0, [sp, #40]
  4172e8:	str	x1, [x0, #8]
  4172ec:	ldr	x0, [sp, #16]
  4172f0:	bl	41b9a8 <wcrtomb@plt+0x18bb8>
  4172f4:	mov	x1, x0
  4172f8:	ldr	x0, [sp, #40]
  4172fc:	str	x1, [x0, #16]
  417300:	ldr	x0, [sp, #16]
  417304:	bl	41b9a8 <wcrtomb@plt+0x18bb8>
  417308:	mov	x1, x0
  41730c:	ldr	x0, [sp, #40]
  417310:	str	x1, [x0, #24]
  417314:	ldr	x0, [sp, #40]
  417318:	strb	wzr, [x0, #32]
  41731c:	ldr	x0, [sp, #40]
  417320:	strb	wzr, [x0, #33]
  417324:	ldr	x0, [sp, #40]
  417328:	ldr	x1, [sp, #24]
  41732c:	str	x1, [x0, #40]
  417330:	ldr	x0, [sp, #40]
  417334:	ldp	x29, x30, [sp], #48
  417338:	ret
  41733c:	stp	x29, x30, [sp, #-32]!
  417340:	mov	x29, sp
  417344:	str	x0, [sp, #24]
  417348:	ldr	x0, [sp, #24]
  41734c:	ldr	x0, [x0]
  417350:	bl	416e10 <wcrtomb@plt+0x14020>
  417354:	ldr	x0, [sp, #24]
  417358:	ldr	x0, [x0]
  41735c:	str	xzr, [x0]
  417360:	ldr	x0, [sp, #24]
  417364:	ldr	x1, [x0, #24]
  417368:	strb	wzr, [x1]
  41736c:	ldr	x0, [sp, #24]
  417370:	ldr	x0, [x0, #16]
  417374:	ldrb	w1, [x1]
  417378:	strb	w1, [x0]
  41737c:	ldr	x1, [sp, #24]
  417380:	ldr	x1, [x1, #8]
  417384:	ldrb	w0, [x0]
  417388:	strb	w0, [x1]
  41738c:	ldr	x0, [sp, #24]
  417390:	strb	wzr, [x0, #32]
  417394:	ldr	x0, [sp, #24]
  417398:	strb	wzr, [x0, #33]
  41739c:	nop
  4173a0:	ldp	x29, x30, [sp], #32
  4173a4:	ret
  4173a8:	stp	x29, x30, [sp, #-32]!
  4173ac:	mov	x29, sp
  4173b0:	str	x0, [sp, #24]
  4173b4:	ldr	x0, [sp, #24]
  4173b8:	ldr	x0, [x0]
  4173bc:	bl	416e10 <wcrtomb@plt+0x14020>
  4173c0:	ldr	x0, [sp, #24]
  4173c4:	ldr	x0, [x0]
  4173c8:	bl	402b60 <free@plt>
  4173cc:	ldr	x0, [sp, #24]
  4173d0:	ldr	x0, [x0, #8]
  4173d4:	bl	402b60 <free@plt>
  4173d8:	ldr	x0, [sp, #24]
  4173dc:	ldr	x0, [x0, #16]
  4173e0:	bl	402b60 <free@plt>
  4173e4:	ldr	x0, [sp, #24]
  4173e8:	ldr	x0, [x0, #24]
  4173ec:	bl	402b60 <free@plt>
  4173f0:	ldr	x0, [sp, #24]
  4173f4:	bl	402b60 <free@plt>
  4173f8:	nop
  4173fc:	ldp	x29, x30, [sp], #32
  417400:	ret
  417404:	stp	x29, x30, [sp, #-256]!
  417408:	mov	x29, sp
  41740c:	str	x19, [sp, #16]
  417410:	str	x0, [sp, #40]
  417414:	str	xzr, [sp, #248]
  417418:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  41741c:	add	x0, x0, #0x8c8
  417420:	str	x0, [sp, #240]
  417424:	strb	wzr, [sp, #239]
  417428:	strb	wzr, [sp, #238]
  41742c:	strb	wzr, [sp, #237]
  417430:	strb	wzr, [sp, #236]
  417434:	strb	wzr, [sp, #235]
  417438:	ldr	x0, [sp, #40]
  41743c:	ldrb	w0, [x0, #457]
  417440:	mov	w1, w0
  417444:	ldr	x0, [sp, #40]
  417448:	ldrb	w0, [x0, #1048]
  41744c:	eor	w0, w0, #0x1
  417450:	and	w0, w0, #0xff
  417454:	and	w0, w1, w0
  417458:	cmp	w0, #0x0
  41745c:	cset	w0, ne  // ne = any
  417460:	strb	w0, [sp, #151]
  417464:	mov	x0, #0x1                   	// #1
  417468:	str	x0, [sp, #224]
  41746c:	b	417ff8 <wcrtomb@plt+0x15208>
  417470:	ldr	x0, [sp, #40]
  417474:	ldr	x1, [x0, #144]
  417478:	ldr	x0, [sp, #224]
  41747c:	lsl	x0, x0, #3
  417480:	add	x0, x1, x0
  417484:	ldr	x0, [x0]
  417488:	str	x0, [sp, #216]
  41748c:	ldr	x0, [sp, #216]
  417490:	cmp	x0, #0x113
  417494:	b.gt	417c64 <wcrtomb@plt+0x14e74>
  417498:	ldr	x0, [sp, #216]
  41749c:	cmp	x0, #0x10e
  4174a0:	b.ge	417608 <wcrtomb@plt+0x14818>  // b.tcont
  4174a4:	ldr	x0, [sp, #216]
  4174a8:	cmp	x0, #0x10d
  4174ac:	b.eq	4175c0 <wcrtomb@plt+0x147d0>  // b.none
  4174b0:	ldr	x0, [sp, #216]
  4174b4:	cmp	x0, #0x10d
  4174b8:	b.gt	417c64 <wcrtomb@plt+0x14e74>
  4174bc:	ldr	x0, [sp, #216]
  4174c0:	cmp	x0, #0x10c
  4174c4:	b.eq	417598 <wcrtomb@plt+0x147a8>  // b.none
  4174c8:	ldr	x0, [sp, #216]
  4174cc:	cmp	x0, #0x10c
  4174d0:	b.gt	417c64 <wcrtomb@plt+0x14e74>
  4174d4:	ldr	x0, [sp, #216]
  4174d8:	cmp	x0, #0x10a
  4174dc:	b.eq	417608 <wcrtomb@plt+0x14818>  // b.none
  4174e0:	ldr	x0, [sp, #216]
  4174e4:	cmp	x0, #0x10a
  4174e8:	b.gt	417c64 <wcrtomb@plt+0x14e74>
  4174ec:	ldr	x0, [sp, #216]
  4174f0:	cmp	x0, #0x108
  4174f4:	b.gt	417c64 <wcrtomb@plt+0x14e74>
  4174f8:	ldr	x0, [sp, #216]
  4174fc:	cmp	x0, #0x107
  417500:	b.ge	4175e8 <wcrtomb@plt+0x147f8>  // b.tcont
  417504:	ldr	x0, [sp, #216]
  417508:	cmp	x0, #0x106
  41750c:	b.eq	417628 <wcrtomb@plt+0x14838>  // b.none
  417510:	ldr	x0, [sp, #216]
  417514:	cmp	x0, #0x106
  417518:	b.gt	417c64 <wcrtomb@plt+0x14e74>
  41751c:	ldr	x0, [sp, #216]
  417520:	cmp	x0, #0x105
  417524:	b.eq	417a18 <wcrtomb@plt+0x14c28>  // b.none
  417528:	ldr	x0, [sp, #216]
  41752c:	cmp	x0, #0x105
  417530:	b.gt	417c64 <wcrtomb@plt+0x14e74>
  417534:	ldr	x0, [sp, #216]
  417538:	cmp	x0, #0x103
  41753c:	b.eq	4178cc <wcrtomb@plt+0x14adc>  // b.none
  417540:	ldr	x0, [sp, #216]
  417544:	cmp	x0, #0x103
  417548:	b.gt	417c64 <wcrtomb@plt+0x14e74>
  41754c:	ldr	x0, [sp, #216]
  417550:	cmp	x0, #0x102
  417554:	b.gt	417c64 <wcrtomb@plt+0x14e74>
  417558:	ldr	x0, [sp, #216]
  41755c:	cmp	x0, #0x101
  417560:	b.ge	41761c <wcrtomb@plt+0x1482c>  // b.tcont
  417564:	ldr	x0, [sp, #216]
  417568:	cmp	x0, #0x100
  41756c:	b.eq	417608 <wcrtomb@plt+0x14818>  // b.none
  417570:	ldr	x0, [sp, #216]
  417574:	cmp	x0, #0x100
  417578:	b.gt	417c64 <wcrtomb@plt+0x14e74>
  41757c:	ldr	x0, [sp, #216]
  417580:	cmn	x0, #0x1
  417584:	b.eq	4178dc <wcrtomb@plt+0x14aec>  // b.none
  417588:	ldr	x0, [sp, #216]
  41758c:	cmp	x0, #0x0
  417590:	b.eq	418014 <wcrtomb@plt+0x15224>  // b.none
  417594:	b	417c64 <wcrtomb@plt+0x14e74>
  417598:	mov	x1, #0x2                   	// #2
  41759c:	ldr	x0, [sp, #248]
  4175a0:	bl	4172a8 <wcrtomb@plt+0x144b8>
  4175a4:	str	x0, [sp, #248]
  4175a8:	ldr	x0, [sp, #248]
  4175ac:	mov	w1, #0x1                   	// #1
  4175b0:	strb	w1, [x0, #32]
  4175b4:	mov	w0, #0x1                   	// #1
  4175b8:	strb	w0, [sp, #236]
  4175bc:	b	417fec <wcrtomb@plt+0x151fc>
  4175c0:	mov	x1, #0x2                   	// #2
  4175c4:	ldr	x0, [sp, #248]
  4175c8:	bl	4172a8 <wcrtomb@plt+0x144b8>
  4175cc:	str	x0, [sp, #248]
  4175d0:	ldr	x0, [sp, #248]
  4175d4:	mov	w1, #0x1                   	// #1
  4175d8:	strb	w1, [x0, #33]
  4175dc:	mov	w0, #0x1                   	// #1
  4175e0:	strb	w0, [sp, #235]
  4175e4:	b	417fec <wcrtomb@plt+0x151fc>
  4175e8:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  4175ec:	add	x3, x0, #0xa58
  4175f0:	mov	w2, #0xff6                 	// #4086
  4175f4:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  4175f8:	add	x1, x0, #0x8b0
  4175fc:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  417600:	add	x0, x0, #0x8d0
  417604:	bl	402d30 <__assert_fail@plt>
  417608:	mov	x1, #0x2                   	// #2
  41760c:	ldr	x0, [sp, #248]
  417610:	bl	4172a8 <wcrtomb@plt+0x144b8>
  417614:	str	x0, [sp, #248]
  417618:	b	417fec <wcrtomb@plt+0x151fc>
  41761c:	ldr	x0, [sp, #248]
  417620:	bl	41733c <wcrtomb@plt+0x1454c>
  417624:	b	417fec <wcrtomb@plt+0x151fc>
  417628:	ldr	x0, [sp, #248]
  41762c:	str	x0, [sp, #136]
  417630:	ldr	x0, [sp, #248]
  417634:	ldr	x0, [x0, #40]
  417638:	str	x0, [sp, #248]
  41763c:	ldr	x0, [sp, #248]
  417640:	str	x0, [sp, #128]
  417644:	ldr	x0, [sp, #128]
  417648:	ldr	x2, [x0, #24]
  41764c:	ldr	x0, [sp, #136]
  417650:	ldr	x0, [x0, #24]
  417654:	mov	x1, x0
  417658:	mov	x0, x2
  41765c:	bl	40e448 <wcrtomb@plt+0xb658>
  417660:	and	w0, w0, #0xff
  417664:	cmp	w0, #0x0
  417668:	b.eq	4176c8 <wcrtomb@plt+0x148d8>  // b.none
  41766c:	ldr	x0, [sp, #128]
  417670:	ldrb	w0, [x0, #32]
  417674:	mov	w1, w0
  417678:	ldr	x0, [sp, #136]
  41767c:	ldrb	w0, [x0, #32]
  417680:	and	w0, w1, w0
  417684:	cmp	w0, #0x0
  417688:	cset	w0, ne  // ne = any
  41768c:	and	w1, w0, #0xff
  417690:	ldr	x0, [sp, #128]
  417694:	strb	w1, [x0, #32]
  417698:	ldr	x0, [sp, #128]
  41769c:	ldrb	w0, [x0, #33]
  4176a0:	mov	w1, w0
  4176a4:	ldr	x0, [sp, #136]
  4176a8:	ldrb	w0, [x0, #33]
  4176ac:	and	w0, w1, w0
  4176b0:	cmp	w0, #0x0
  4176b4:	cset	w0, ne  // ne = any
  4176b8:	and	w1, w0, #0xff
  4176bc:	ldr	x0, [sp, #128]
  4176c0:	strb	w1, [x0, #33]
  4176c4:	b	4176e4 <wcrtomb@plt+0x148f4>
  4176c8:	ldr	x0, [sp, #128]
  4176cc:	ldr	x0, [x0, #24]
  4176d0:	strb	wzr, [x0]
  4176d4:	ldr	x0, [sp, #128]
  4176d8:	strb	wzr, [x0, #32]
  4176dc:	ldr	x0, [sp, #128]
  4176e0:	strb	wzr, [x0, #33]
  4176e4:	str	xzr, [sp, #192]
  4176e8:	b	4176f8 <wcrtomb@plt+0x14908>
  4176ec:	ldr	x0, [sp, #192]
  4176f0:	add	x0, x0, #0x1
  4176f4:	str	x0, [sp, #192]
  4176f8:	ldr	x0, [sp, #128]
  4176fc:	ldr	x1, [x0, #8]
  417700:	ldr	x0, [sp, #192]
  417704:	add	x0, x1, x0
  417708:	ldrb	w0, [x0]
  41770c:	cmp	w0, #0x0
  417710:	b.eq	417744 <wcrtomb@plt+0x14954>  // b.none
  417714:	ldr	x0, [sp, #128]
  417718:	ldr	x1, [x0, #8]
  41771c:	ldr	x0, [sp, #192]
  417720:	add	x0, x1, x0
  417724:	ldrb	w1, [x0]
  417728:	ldr	x0, [sp, #136]
  41772c:	ldr	x2, [x0, #8]
  417730:	ldr	x0, [sp, #192]
  417734:	add	x0, x2, x0
  417738:	ldrb	w0, [x0]
  41773c:	cmp	w1, w0
  417740:	b.eq	4176ec <wcrtomb@plt+0x148fc>  // b.none
  417744:	ldr	x0, [sp, #128]
  417748:	ldr	x1, [x0, #8]
  41774c:	ldr	x0, [sp, #192]
  417750:	add	x0, x1, x0
  417754:	strb	wzr, [x0]
  417758:	ldr	x0, [sp, #128]
  41775c:	ldr	x0, [x0, #16]
  417760:	bl	402720 <strlen@plt>
  417764:	str	x0, [sp, #120]
  417768:	ldr	x0, [sp, #136]
  41776c:	ldr	x0, [x0, #16]
  417770:	bl	402720 <strlen@plt>
  417774:	str	x0, [sp, #112]
  417778:	ldr	x0, [sp, #120]
  41777c:	str	x0, [sp, #200]
  417780:	ldr	x1, [sp, #200]
  417784:	ldr	x0, [sp, #112]
  417788:	cmp	x1, x0
  41778c:	b.le	417798 <wcrtomb@plt+0x149a8>
  417790:	ldr	x0, [sp, #112]
  417794:	str	x0, [sp, #200]
  417798:	str	xzr, [sp, #192]
  41779c:	b	4177f4 <wcrtomb@plt+0x14a04>
  4177a0:	ldr	x0, [sp, #128]
  4177a4:	ldr	x1, [x0, #16]
  4177a8:	ldr	x2, [sp, #120]
  4177ac:	ldr	x0, [sp, #192]
  4177b0:	sub	x0, x2, x0
  4177b4:	sub	x0, x0, #0x1
  4177b8:	add	x0, x1, x0
  4177bc:	ldrb	w1, [x0]
  4177c0:	ldr	x0, [sp, #136]
  4177c4:	ldr	x2, [x0, #16]
  4177c8:	ldr	x3, [sp, #112]
  4177cc:	ldr	x0, [sp, #192]
  4177d0:	sub	x0, x3, x0
  4177d4:	sub	x0, x0, #0x1
  4177d8:	add	x0, x2, x0
  4177dc:	ldrb	w0, [x0]
  4177e0:	cmp	w1, w0
  4177e4:	b.ne	417808 <wcrtomb@plt+0x14a18>  // b.any
  4177e8:	ldr	x0, [sp, #192]
  4177ec:	add	x0, x0, #0x1
  4177f0:	str	x0, [sp, #192]
  4177f4:	ldr	x1, [sp, #192]
  4177f8:	ldr	x0, [sp, #200]
  4177fc:	cmp	x1, x0
  417800:	b.lt	4177a0 <wcrtomb@plt+0x149b0>  // b.tstop
  417804:	b	41780c <wcrtomb@plt+0x14a1c>
  417808:	nop
  41780c:	str	xzr, [sp, #208]
  417810:	b	417858 <wcrtomb@plt+0x14a68>
  417814:	ldr	x0, [sp, #128]
  417818:	ldr	x0, [x0, #16]
  41781c:	ldr	x2, [sp, #120]
  417820:	ldr	x1, [sp, #192]
  417824:	sub	x2, x2, x1
  417828:	ldr	x1, [sp, #208]
  41782c:	add	x1, x2, x1
  417830:	add	x1, x0, x1
  417834:	ldr	x0, [sp, #128]
  417838:	ldr	x2, [x0, #16]
  41783c:	ldr	x0, [sp, #208]
  417840:	add	x0, x2, x0
  417844:	ldrb	w1, [x1]
  417848:	strb	w1, [x0]
  41784c:	ldr	x0, [sp, #208]
  417850:	add	x0, x0, #0x1
  417854:	str	x0, [sp, #208]
  417858:	ldr	x1, [sp, #208]
  41785c:	ldr	x0, [sp, #192]
  417860:	cmp	x1, x0
  417864:	b.lt	417814 <wcrtomb@plt+0x14a24>  // b.tstop
  417868:	ldr	x0, [sp, #128]
  41786c:	ldr	x1, [x0, #16]
  417870:	ldr	x0, [sp, #208]
  417874:	add	x0, x1, x0
  417878:	strb	wzr, [x0]
  41787c:	ldr	x0, [sp, #128]
  417880:	ldr	x2, [x0]
  417884:	ldr	x0, [sp, #136]
  417888:	ldr	x0, [x0]
  41788c:	mov	x1, x0
  417890:	mov	x0, x2
  417894:	bl	4171c8 <wcrtomb@plt+0x143d8>
  417898:	str	x0, [sp, #104]
  41789c:	ldr	x0, [sp, #128]
  4178a0:	ldr	x0, [x0]
  4178a4:	bl	416e10 <wcrtomb@plt+0x14020>
  4178a8:	ldr	x0, [sp, #128]
  4178ac:	ldr	x0, [x0]
  4178b0:	bl	402b60 <free@plt>
  4178b4:	ldr	x0, [sp, #128]
  4178b8:	ldr	x1, [sp, #104]
  4178bc:	str	x1, [x0]
  4178c0:	ldr	x0, [sp, #136]
  4178c4:	bl	4173a8 <wcrtomb@plt+0x145b8>
  4178c8:	b	417fec <wcrtomb@plt+0x151fc>
  4178cc:	ldr	x0, [sp, #248]
  4178d0:	ldr	x0, [x0, #24]
  4178d4:	strb	wzr, [x0]
  4178d8:	b	417fec <wcrtomb@plt+0x151fc>
  4178dc:	ldr	x0, [sp, #248]
  4178e0:	ldr	x0, [x0, #40]
  4178e4:	cmp	x0, #0x0
  4178e8:	b.eq	41790c <wcrtomb@plt+0x14b1c>  // b.none
  4178ec:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  4178f0:	add	x3, x0, #0xa58
  4178f4:	mov	w2, #0x1039                	// #4153
  4178f8:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  4178fc:	add	x1, x0, #0x8b0
  417900:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  417904:	add	x0, x0, #0x900
  417908:	bl	402d30 <__assert_fail@plt>
  41790c:	str	xzr, [sp, #184]
  417910:	b	41796c <wcrtomb@plt+0x14b7c>
  417914:	ldr	x0, [sp, #248]
  417918:	ldr	x1, [x0]
  41791c:	ldr	x0, [sp, #184]
  417920:	lsl	x0, x0, #3
  417924:	add	x0, x1, x0
  417928:	ldr	x0, [x0]
  41792c:	bl	402720 <strlen@plt>
  417930:	mov	x19, x0
  417934:	ldr	x0, [sp, #240]
  417938:	bl	402720 <strlen@plt>
  41793c:	cmp	x19, x0
  417940:	b.ls	417960 <wcrtomb@plt+0x14b70>  // b.plast
  417944:	ldr	x0, [sp, #248]
  417948:	ldr	x1, [x0]
  41794c:	ldr	x0, [sp, #184]
  417950:	lsl	x0, x0, #3
  417954:	add	x0, x1, x0
  417958:	ldr	x0, [x0]
  41795c:	str	x0, [sp, #240]
  417960:	ldr	x0, [sp, #184]
  417964:	add	x0, x0, #0x1
  417968:	str	x0, [sp, #184]
  41796c:	ldr	x0, [sp, #248]
  417970:	ldr	x1, [x0]
  417974:	ldr	x0, [sp, #184]
  417978:	lsl	x0, x0, #3
  41797c:	add	x0, x1, x0
  417980:	ldr	x0, [x0]
  417984:	cmp	x0, #0x0
  417988:	b.ne	417914 <wcrtomb@plt+0x14b24>  // b.any
  41798c:	ldr	x0, [sp, #248]
  417990:	ldr	x0, [x0, #24]
  417994:	mov	x1, x0
  417998:	ldr	x0, [sp, #240]
  41799c:	bl	40e448 <wcrtomb@plt+0xb658>
  4179a0:	and	w0, w0, #0xff
  4179a4:	cmp	w0, #0x0
  4179a8:	b.eq	41801c <wcrtomb@plt+0x1522c>  // b.none
  4179ac:	ldrb	w0, [sp, #236]
  4179b0:	eor	w0, w0, #0x1
  4179b4:	and	w0, w0, #0xff
  4179b8:	cmp	w0, #0x0
  4179bc:	b.ne	4179d0 <wcrtomb@plt+0x14be0>  // b.any
  4179c0:	ldr	x0, [sp, #248]
  4179c4:	ldrb	w0, [x0, #32]
  4179c8:	cmp	w0, #0x0
  4179cc:	b.eq	4179fc <wcrtomb@plt+0x14c0c>  // b.none
  4179d0:	ldrb	w0, [sp, #235]
  4179d4:	eor	w0, w0, #0x1
  4179d8:	and	w0, w0, #0xff
  4179dc:	cmp	w0, #0x0
  4179e0:	b.ne	4179f4 <wcrtomb@plt+0x14c04>  // b.any
  4179e4:	ldr	x0, [sp, #248]
  4179e8:	ldrb	w0, [x0, #33]
  4179ec:	cmp	w0, #0x0
  4179f0:	b.eq	4179fc <wcrtomb@plt+0x14c0c>  // b.none
  4179f4:	mov	w0, #0x1                   	// #1
  4179f8:	strb	w0, [sp, #239]
  4179fc:	ldr	x0, [sp, #248]
  417a00:	ldrb	w0, [x0, #32]
  417a04:	strb	w0, [sp, #238]
  417a08:	ldr	x0, [sp, #248]
  417a0c:	ldrb	w0, [x0, #33]
  417a10:	strb	w0, [sp, #237]
  417a14:	b	41801c <wcrtomb@plt+0x1522c>
  417a18:	ldr	x0, [sp, #248]
  417a1c:	str	x0, [sp, #96]
  417a20:	ldr	x0, [sp, #248]
  417a24:	ldr	x0, [x0, #40]
  417a28:	str	x0, [sp, #248]
  417a2c:	ldr	x0, [sp, #248]
  417a30:	str	x0, [sp, #88]
  417a34:	ldr	x0, [sp, #88]
  417a38:	ldr	x2, [x0]
  417a3c:	ldr	x0, [sp, #96]
  417a40:	ldr	x0, [x0]
  417a44:	mov	x1, x0
  417a48:	mov	x0, x2
  417a4c:	bl	41715c <wcrtomb@plt+0x1436c>
  417a50:	mov	x1, x0
  417a54:	ldr	x0, [sp, #88]
  417a58:	str	x1, [x0]
  417a5c:	ldr	x0, [sp, #88]
  417a60:	ldr	x0, [x0, #16]
  417a64:	ldrb	w0, [x0]
  417a68:	cmp	w0, #0x0
  417a6c:	b.eq	417b34 <wcrtomb@plt+0x14d44>  // b.none
  417a70:	ldr	x0, [sp, #96]
  417a74:	ldr	x0, [x0, #8]
  417a78:	ldrb	w0, [x0]
  417a7c:	cmp	w0, #0x0
  417a80:	b.eq	417b34 <wcrtomb@plt+0x14d44>  // b.none
  417a84:	ldr	x0, [sp, #88]
  417a88:	ldr	x0, [x0, #16]
  417a8c:	bl	402720 <strlen@plt>
  417a90:	str	x0, [sp, #80]
  417a94:	ldr	x0, [sp, #96]
  417a98:	ldr	x0, [x0, #8]
  417a9c:	bl	402720 <strlen@plt>
  417aa0:	str	x0, [sp, #72]
  417aa4:	ldr	x1, [sp, #80]
  417aa8:	ldr	x0, [sp, #72]
  417aac:	add	x0, x1, x0
  417ab0:	bl	41b8d0 <wcrtomb@plt+0x18ae0>
  417ab4:	str	x0, [sp, #64]
  417ab8:	ldr	x0, [sp, #88]
  417abc:	ldr	x0, [x0, #16]
  417ac0:	ldr	x1, [sp, #80]
  417ac4:	mov	x2, x1
  417ac8:	mov	x1, x0
  417acc:	ldr	x0, [sp, #64]
  417ad0:	bl	4026d0 <memcpy@plt>
  417ad4:	ldr	x0, [sp, #80]
  417ad8:	ldr	x1, [sp, #64]
  417adc:	add	x3, x1, x0
  417ae0:	ldr	x0, [sp, #96]
  417ae4:	ldr	x0, [x0, #8]
  417ae8:	ldr	x1, [sp, #72]
  417aec:	mov	x2, x1
  417af0:	mov	x1, x0
  417af4:	mov	x0, x3
  417af8:	bl	4026d0 <memcpy@plt>
  417afc:	ldr	x0, [sp, #88]
  417b00:	ldr	x3, [x0]
  417b04:	ldr	x1, [sp, #80]
  417b08:	ldr	x0, [sp, #72]
  417b0c:	add	x0, x1, x0
  417b10:	mov	x2, x0
  417b14:	ldr	x1, [sp, #64]
  417b18:	mov	x0, x3
  417b1c:	bl	416e54 <wcrtomb@plt+0x14064>
  417b20:	mov	x1, x0
  417b24:	ldr	x0, [sp, #88]
  417b28:	str	x1, [x0]
  417b2c:	ldr	x0, [sp, #64]
  417b30:	bl	402b60 <free@plt>
  417b34:	ldr	x0, [sp, #88]
  417b38:	ldr	x0, [x0, #24]
  417b3c:	ldrb	w0, [x0]
  417b40:	cmp	w0, #0x0
  417b44:	b.eq	417b70 <wcrtomb@plt+0x14d80>  // b.none
  417b48:	ldr	x0, [sp, #88]
  417b4c:	ldr	x2, [x0, #8]
  417b50:	ldr	x0, [sp, #96]
  417b54:	ldr	x0, [x0, #8]
  417b58:	mov	x1, x0
  417b5c:	mov	x0, x2
  417b60:	bl	416d84 <wcrtomb@plt+0x13f94>
  417b64:	mov	x1, x0
  417b68:	ldr	x0, [sp, #88]
  417b6c:	str	x1, [x0, #8]
  417b70:	ldr	x0, [sp, #96]
  417b74:	ldr	x0, [x0, #24]
  417b78:	ldrb	w0, [x0]
  417b7c:	cmp	w0, #0x0
  417b80:	b.ne	417b90 <wcrtomb@plt+0x14da0>  // b.any
  417b84:	ldr	x0, [sp, #88]
  417b88:	ldr	x0, [x0, #16]
  417b8c:	strb	wzr, [x0]
  417b90:	ldr	x0, [sp, #88]
  417b94:	ldr	x2, [x0, #16]
  417b98:	ldr	x0, [sp, #96]
  417b9c:	ldr	x0, [x0, #16]
  417ba0:	mov	x1, x0
  417ba4:	mov	x0, x2
  417ba8:	bl	416d84 <wcrtomb@plt+0x13f94>
  417bac:	mov	x1, x0
  417bb0:	ldr	x0, [sp, #88]
  417bb4:	str	x1, [x0, #16]
  417bb8:	ldr	x0, [sp, #88]
  417bbc:	ldr	x0, [x0, #24]
  417bc0:	ldrb	w0, [x0]
  417bc4:	cmp	w0, #0x0
  417bc8:	b.ne	417bdc <wcrtomb@plt+0x14dec>  // b.any
  417bcc:	ldr	x0, [sp, #88]
  417bd0:	ldrb	w0, [x0, #32]
  417bd4:	cmp	w0, #0x0
  417bd8:	b.eq	417c3c <wcrtomb@plt+0x14e4c>  // b.none
  417bdc:	ldr	x0, [sp, #96]
  417be0:	ldr	x0, [x0, #24]
  417be4:	ldrb	w0, [x0]
  417be8:	cmp	w0, #0x0
  417bec:	b.ne	417c00 <wcrtomb@plt+0x14e10>  // b.any
  417bf0:	ldr	x0, [sp, #96]
  417bf4:	ldrb	w0, [x0, #33]
  417bf8:	cmp	w0, #0x0
  417bfc:	b.eq	417c3c <wcrtomb@plt+0x14e4c>  // b.none
  417c00:	ldr	x0, [sp, #88]
  417c04:	ldr	x2, [x0, #24]
  417c08:	ldr	x0, [sp, #96]
  417c0c:	ldr	x0, [x0, #24]
  417c10:	mov	x1, x0
  417c14:	mov	x0, x2
  417c18:	bl	416d84 <wcrtomb@plt+0x13f94>
  417c1c:	mov	x1, x0
  417c20:	ldr	x0, [sp, #88]
  417c24:	str	x1, [x0, #24]
  417c28:	ldr	x0, [sp, #96]
  417c2c:	ldrb	w1, [x0, #33]
  417c30:	ldr	x0, [sp, #88]
  417c34:	strb	w1, [x0, #33]
  417c38:	b	417c58 <wcrtomb@plt+0x14e68>
  417c3c:	ldr	x0, [sp, #88]
  417c40:	ldr	x0, [x0, #24]
  417c44:	strb	wzr, [x0]
  417c48:	ldr	x0, [sp, #88]
  417c4c:	strb	wzr, [x0, #32]
  417c50:	ldr	x0, [sp, #88]
  417c54:	strb	wzr, [x0, #33]
  417c58:	ldr	x0, [sp, #96]
  417c5c:	bl	4173a8 <wcrtomb@plt+0x145b8>
  417c60:	b	417fec <wcrtomb@plt+0x151fc>
  417c64:	ldr	x0, [sp, #216]
  417c68:	cmp	x0, #0x113
  417c6c:	b.le	417d7c <wcrtomb@plt+0x14f8c>
  417c70:	ldr	x0, [sp, #40]
  417c74:	ldr	x1, [x0]
  417c78:	ldr	x0, [sp, #216]
  417c7c:	lsl	x2, x0, #5
  417c80:	mov	x0, #0xffffffffffffdd80    	// #-8832
  417c84:	add	x0, x2, x0
  417c88:	add	x0, x1, x0
  417c8c:	str	x0, [sp, #56]
  417c90:	str	wzr, [sp, #180]
  417c94:	b	417cbc <wcrtomb@plt+0x14ecc>
  417c98:	ldr	w0, [sp, #180]
  417c9c:	ldr	x1, [sp, #56]
  417ca0:	bl	40e784 <wcrtomb@plt+0xb994>
  417ca4:	and	w0, w0, #0xff
  417ca8:	cmp	w0, #0x0
  417cac:	b.ne	417ccc <wcrtomb@plt+0x14edc>  // b.any
  417cb0:	ldr	w0, [sp, #180]
  417cb4:	add	w0, w0, #0x1
  417cb8:	str	w0, [sp, #180]
  417cbc:	ldr	w0, [sp, #180]
  417cc0:	cmp	w0, #0xff
  417cc4:	b.le	417c98 <wcrtomb@plt+0x14ea8>
  417cc8:	b	417cd0 <wcrtomb@plt+0x14ee0>
  417ccc:	nop
  417cd0:	ldr	w0, [sp, #180]
  417cd4:	cmp	w0, #0xff
  417cd8:	b.le	417cf0 <wcrtomb@plt+0x14f00>
  417cdc:	mov	x1, #0x2                   	// #2
  417ce0:	ldr	x0, [sp, #248]
  417ce4:	bl	4172a8 <wcrtomb@plt+0x144b8>
  417ce8:	str	x0, [sp, #248]
  417cec:	b	417fec <wcrtomb@plt+0x151fc>
  417cf0:	ldrsw	x0, [sp, #180]
  417cf4:	str	x0, [sp, #216]
  417cf8:	b	417d44 <wcrtomb@plt+0x14f54>
  417cfc:	ldr	w0, [sp, #180]
  417d00:	ldr	x1, [sp, #56]
  417d04:	bl	40e784 <wcrtomb@plt+0xb994>
  417d08:	and	w0, w0, #0xff
  417d0c:	cmp	w0, #0x0
  417d10:	b.eq	417d44 <wcrtomb@plt+0x14f54>  // b.none
  417d14:	ldrb	w0, [sp, #151]
  417d18:	eor	w0, w0, #0x1
  417d1c:	and	w0, w0, #0xff
  417d20:	cmp	w0, #0x0
  417d24:	b.ne	417d5c <wcrtomb@plt+0x14f6c>  // b.any
  417d28:	ldr	w0, [sp, #180]
  417d2c:	bl	4028c0 <toupper@plt>
  417d30:	mov	w19, w0
  417d34:	ldr	x0, [sp, #216]
  417d38:	bl	4028c0 <toupper@plt>
  417d3c:	cmp	w19, w0
  417d40:	b.ne	417d5c <wcrtomb@plt+0x14f6c>  // b.any
  417d44:	ldr	w0, [sp, #180]
  417d48:	add	w0, w0, #0x1
  417d4c:	str	w0, [sp, #180]
  417d50:	ldr	w0, [sp, #180]
  417d54:	cmp	w0, #0xff
  417d58:	b.le	417cfc <wcrtomb@plt+0x14f0c>
  417d5c:	ldr	w0, [sp, #180]
  417d60:	cmp	w0, #0xff
  417d64:	b.gt	417d7c <wcrtomb@plt+0x14f8c>
  417d68:	mov	x1, #0x2                   	// #2
  417d6c:	ldr	x0, [sp, #248]
  417d70:	bl	4172a8 <wcrtomb@plt+0x144b8>
  417d74:	str	x0, [sp, #248]
  417d78:	b	417fec <wcrtomb@plt+0x151fc>
  417d7c:	ldr	x0, [sp, #224]
  417d80:	add	x0, x0, #0x2
  417d84:	str	x0, [sp, #168]
  417d88:	ldr	x0, [sp, #40]
  417d8c:	ldr	x1, [x0, #144]
  417d90:	ldr	x0, [sp, #224]
  417d94:	add	x0, x0, #0x1
  417d98:	lsl	x0, x0, #3
  417d9c:	add	x0, x1, x0
  417da0:	ldr	x0, [x0]
  417da4:	cmp	x0, #0x105
  417da8:	b.ne	417e48 <wcrtomb@plt+0x15058>  // b.any
  417dac:	b	417e30 <wcrtomb@plt+0x15040>
  417db0:	ldr	x1, [sp, #168]
  417db4:	ldr	x0, [sp, #224]
  417db8:	cmp	x1, x0
  417dbc:	b.eq	417e00 <wcrtomb@plt+0x15010>  // b.none
  417dc0:	ldr	x0, [sp, #40]
  417dc4:	ldr	x1, [x0, #144]
  417dc8:	ldr	x0, [sp, #168]
  417dcc:	lsl	x0, x0, #3
  417dd0:	add	x0, x1, x0
  417dd4:	ldr	x0, [x0]
  417dd8:	cmp	x0, #0x0
  417ddc:	b.le	417e48 <wcrtomb@plt+0x15058>
  417de0:	ldr	x0, [sp, #40]
  417de4:	ldr	x1, [x0, #144]
  417de8:	ldr	x0, [sp, #168]
  417dec:	lsl	x0, x0, #3
  417df0:	add	x0, x1, x0
  417df4:	ldr	x0, [x0]
  417df8:	cmp	x0, #0xff
  417dfc:	b.gt	417e48 <wcrtomb@plt+0x15058>
  417e00:	ldr	x0, [sp, #40]
  417e04:	ldr	x1, [x0, #144]
  417e08:	ldr	x0, [sp, #168]
  417e0c:	add	x0, x0, #0x1
  417e10:	lsl	x0, x0, #3
  417e14:	add	x0, x1, x0
  417e18:	ldr	x0, [x0]
  417e1c:	cmp	x0, #0x105
  417e20:	b.ne	417e48 <wcrtomb@plt+0x15058>  // b.any
  417e24:	ldr	x0, [sp, #168]
  417e28:	add	x0, x0, #0x2
  417e2c:	str	x0, [sp, #168]
  417e30:	ldr	x0, [sp, #40]
  417e34:	ldr	x0, [x0, #152]
  417e38:	sub	x0, x0, #0x1
  417e3c:	ldr	x1, [sp, #168]
  417e40:	cmp	x1, x0
  417e44:	b.lt	417db0 <wcrtomb@plt+0x14fc0>  // b.tstop
  417e48:	ldr	x1, [sp, #168]
  417e4c:	ldr	x0, [sp, #224]
  417e50:	sub	x0, x1, x0
  417e54:	asr	x0, x0, #1
  417e58:	add	x0, x0, #0x1
  417e5c:	mov	x1, x0
  417e60:	ldr	x0, [sp, #248]
  417e64:	bl	4172a8 <wcrtomb@plt+0x144b8>
  417e68:	str	x0, [sp, #248]
  417e6c:	ldrb	w0, [sp, #151]
  417e70:	cmp	w0, #0x0
  417e74:	b.eq	417e88 <wcrtomb@plt+0x15098>  // b.none
  417e78:	ldr	x0, [sp, #216]
  417e7c:	bl	4028c0 <toupper@plt>
  417e80:	and	w0, w0, #0xff
  417e84:	b	417e90 <wcrtomb@plt+0x150a0>
  417e88:	ldr	x0, [sp, #216]
  417e8c:	and	w0, w0, #0xff
  417e90:	ldr	x1, [sp, #248]
  417e94:	ldr	x1, [x1, #16]
  417e98:	strb	w0, [x1]
  417e9c:	ldr	x0, [sp, #248]
  417ea0:	ldr	x0, [x0, #8]
  417ea4:	ldrb	w1, [x1]
  417ea8:	strb	w1, [x0]
  417eac:	ldr	x1, [sp, #248]
  417eb0:	ldr	x1, [x1, #24]
  417eb4:	ldrb	w0, [x0]
  417eb8:	strb	w0, [x1]
  417ebc:	mov	x0, #0x1                   	// #1
  417ec0:	str	x0, [sp, #160]
  417ec4:	b	417f64 <wcrtomb@plt+0x15174>
  417ec8:	ldr	x0, [sp, #224]
  417ecc:	add	x0, x0, #0x2
  417ed0:	str	x0, [sp, #224]
  417ed4:	ldr	x0, [sp, #40]
  417ed8:	ldr	x1, [x0, #144]
  417edc:	ldr	x0, [sp, #224]
  417ee0:	lsl	x0, x0, #3
  417ee4:	add	x0, x1, x0
  417ee8:	ldr	x0, [x0]
  417eec:	str	x0, [sp, #216]
  417ef0:	ldrb	w0, [sp, #151]
  417ef4:	cmp	w0, #0x0
  417ef8:	b.eq	417f0c <wcrtomb@plt+0x1511c>  // b.none
  417efc:	ldr	x0, [sp, #216]
  417f00:	bl	4028c0 <toupper@plt>
  417f04:	and	w0, w0, #0xff
  417f08:	b	417f14 <wcrtomb@plt+0x15124>
  417f0c:	ldr	x0, [sp, #216]
  417f10:	and	w0, w0, #0xff
  417f14:	ldr	x1, [sp, #248]
  417f18:	ldr	x2, [x1, #16]
  417f1c:	ldr	x1, [sp, #160]
  417f20:	add	x1, x2, x1
  417f24:	strb	w0, [x1]
  417f28:	ldr	x0, [sp, #248]
  417f2c:	ldr	x2, [x0, #8]
  417f30:	ldr	x0, [sp, #160]
  417f34:	add	x0, x2, x0
  417f38:	ldrb	w1, [x1]
  417f3c:	strb	w1, [x0]
  417f40:	ldr	x1, [sp, #248]
  417f44:	ldr	x2, [x1, #24]
  417f48:	ldr	x1, [sp, #160]
  417f4c:	add	x1, x2, x1
  417f50:	ldrb	w0, [x0]
  417f54:	strb	w0, [x1]
  417f58:	ldr	x0, [sp, #160]
  417f5c:	add	x0, x0, #0x1
  417f60:	str	x0, [sp, #160]
  417f64:	ldr	x0, [sp, #224]
  417f68:	add	x0, x0, #0x2
  417f6c:	ldr	x1, [sp, #168]
  417f70:	cmp	x1, x0
  417f74:	b.gt	417ec8 <wcrtomb@plt+0x150d8>
  417f78:	ldr	x0, [sp, #248]
  417f7c:	ldr	x1, [x0, #16]
  417f80:	ldr	x0, [sp, #160]
  417f84:	add	x1, x1, x0
  417f88:	strb	wzr, [x1]
  417f8c:	ldr	x0, [sp, #248]
  417f90:	ldr	x2, [x0, #8]
  417f94:	ldr	x0, [sp, #160]
  417f98:	add	x0, x2, x0
  417f9c:	ldrb	w1, [x1]
  417fa0:	strb	w1, [x0]
  417fa4:	ldr	x1, [sp, #248]
  417fa8:	ldr	x2, [x1, #24]
  417fac:	ldr	x1, [sp, #160]
  417fb0:	add	x1, x2, x1
  417fb4:	ldrb	w0, [x0]
  417fb8:	strb	w0, [x1]
  417fbc:	ldr	x0, [sp, #248]
  417fc0:	ldr	x3, [x0]
  417fc4:	ldr	x0, [sp, #248]
  417fc8:	ldr	x0, [x0, #24]
  417fcc:	ldr	x2, [sp, #160]
  417fd0:	mov	x1, x0
  417fd4:	mov	x0, x3
  417fd8:	bl	416e54 <wcrtomb@plt+0x14064>
  417fdc:	mov	x1, x0
  417fe0:	ldr	x0, [sp, #248]
  417fe4:	str	x1, [x0]
  417fe8:	nop
  417fec:	ldr	x0, [sp, #224]
  417ff0:	add	x0, x0, #0x1
  417ff4:	str	x0, [sp, #224]
  417ff8:	ldr	x0, [sp, #224]
  417ffc:	add	x1, x0, #0x1
  418000:	ldr	x0, [sp, #40]
  418004:	ldr	x0, [x0, #152]
  418008:	cmp	x1, x0
  41800c:	b.lt	417470 <wcrtomb@plt+0x14680>  // b.tstop
  418010:	b	418020 <wcrtomb@plt+0x15230>
  418014:	nop
  418018:	b	418020 <wcrtomb@plt+0x15230>
  41801c:	nop
  418020:	str	xzr, [sp, #152]
  418024:	ldr	x0, [sp, #240]
  418028:	ldrb	w0, [x0]
  41802c:	cmp	w0, #0x0
  418030:	b.eq	41809c <wcrtomb@plt+0x152ac>  // b.none
  418034:	ldr	x0, [sp, #240]
  418038:	bl	402720 <strlen@plt>
  41803c:	add	x0, x0, #0x4
  418040:	bl	41b8d0 <wcrtomb@plt+0x18ae0>
  418044:	str	x0, [sp, #152]
  418048:	ldr	x0, [sp, #152]
  41804c:	ldrb	w1, [sp, #239]
  418050:	strb	w1, [x0]
  418054:	ldr	x0, [sp, #152]
  418058:	ldrb	w1, [sp, #238]
  41805c:	strb	w1, [x0, #1]
  418060:	ldr	x0, [sp, #152]
  418064:	ldrb	w1, [sp, #237]
  418068:	strb	w1, [x0, #2]
  41806c:	ldr	x0, [sp, #152]
  418070:	add	x0, x0, #0x3
  418074:	ldr	x1, [sp, #240]
  418078:	bl	402c00 <strcpy@plt>
  41807c:	b	41809c <wcrtomb@plt+0x152ac>
  418080:	ldr	x0, [sp, #248]
  418084:	ldr	x0, [x0, #40]
  418088:	str	x0, [sp, #48]
  41808c:	ldr	x0, [sp, #248]
  418090:	bl	4173a8 <wcrtomb@plt+0x145b8>
  418094:	ldr	x0, [sp, #48]
  418098:	str	x0, [sp, #248]
  41809c:	ldr	x0, [sp, #248]
  4180a0:	cmp	x0, #0x0
  4180a4:	b.ne	418080 <wcrtomb@plt+0x15290>  // b.any
  4180a8:	ldr	x0, [sp, #152]
  4180ac:	ldr	x19, [sp, #16]
  4180b0:	ldp	x29, x30, [sp], #256
  4180b4:	ret
  4180b8:	stp	x29, x30, [sp, #-32]!
  4180bc:	mov	x29, sp
  4180c0:	str	x0, [sp, #24]
  4180c4:	ldr	x0, [sp, #24]
  4180c8:	bl	402b60 <free@plt>
  4180cc:	nop
  4180d0:	ldp	x29, x30, [sp], #32
  4180d4:	ret
  4180d8:	stp	x29, x30, [sp, #-16]!
  4180dc:	mov	x29, sp
  4180e0:	mov	x0, #0x920                 	// #2336
  4180e4:	bl	41b8d0 <wcrtomb@plt+0x18ae0>
  4180e8:	ldp	x29, x30, [sp], #16
  4180ec:	ret
  4180f0:	stp	x29, x30, [sp, #-64]!
  4180f4:	mov	x29, sp
  4180f8:	str	x0, [sp, #40]
  4180fc:	str	x1, [sp, #32]
  418100:	str	x2, [sp, #24]
  418104:	str	w3, [sp, #20]
  418108:	mov	x2, #0x410                 	// #1040
  41810c:	mov	w1, #0x0                   	// #0
  418110:	ldr	x0, [sp, #40]
  418114:	bl	402980 <memset@plt>
  418118:	ldr	x0, [sp, #32]
  41811c:	ldrb	w0, [x0]
  418120:	cmp	w0, #0x0
  418124:	b.eq	418134 <wcrtomb@plt+0x15344>  // b.none
  418128:	adrp	x0, 416000 <wcrtomb@plt+0x13210>
  41812c:	add	x0, x0, #0x340
  418130:	b	41813c <wcrtomb@plt+0x1534c>
  418134:	adrp	x0, 416000 <wcrtomb@plt+0x13210>
  418138:	add	x0, x0, #0x384
  41813c:	ldr	x1, [sp, #40]
  418140:	str	x0, [x1, #1040]
  418144:	ldr	x0, [sp, #40]
  418148:	add	x0, x0, #0x400
  41814c:	add	x1, x0, #0x18
  418150:	ldr	x0, [sp, #32]
  418154:	mov	x3, x1
  418158:	mov	x1, x0
  41815c:	mov	x0, #0x504                 	// #1284
  418160:	mov	x2, x0
  418164:	mov	x0, x3
  418168:	bl	4026d0 <memcpy@plt>
  41816c:	ldr	x0, [sp, #40]
  418170:	ldrb	w0, [x0, #1048]
  418174:	cmp	w0, #0x0
  418178:	cset	w0, ne  // ne = any
  41817c:	and	w0, w0, #0xff
  418180:	eor	w0, w0, #0x1
  418184:	and	w0, w0, #0xff
  418188:	and	w0, w0, #0x1
  41818c:	and	w1, w0, #0xff
  418190:	ldr	x0, [sp, #40]
  418194:	strb	w1, [x0, #192]
  418198:	ldr	x0, [sp, #40]
  41819c:	mov	x1, #0xffffffffffffffff    	// #-1
  4181a0:	str	x1, [x0, #24]
  4181a4:	ldr	x0, [sp, #40]
  4181a8:	mov	w1, #0x1                   	// #1
  4181ac:	strb	w1, [x0, #456]
  4181b0:	ldr	x0, [sp, #24]
  4181b4:	and	x0, x0, #0x400000
  4181b8:	cmp	x0, #0x0
  4181bc:	cset	w0, ne  // ne = any
  4181c0:	and	w1, w0, #0xff
  4181c4:	ldr	x0, [sp, #40]
  4181c8:	strb	w1, [x0, #457]
  4181cc:	ldr	w0, [sp, #20]
  4181d0:	and	w0, w0, #0x1
  4181d4:	cmp	w0, #0x0
  4181d8:	cset	w0, ne  // ne = any
  4181dc:	and	w1, w0, #0xff
  4181e0:	ldr	x0, [sp, #40]
  4181e4:	strb	w1, [x0, #458]
  4181e8:	ldr	w0, [sp, #20]
  4181ec:	and	w0, w0, #0x2
  4181f0:	cmp	w0, #0x0
  4181f4:	b.eq	418200 <wcrtomb@plt+0x15410>  // b.none
  4181f8:	mov	w1, #0x0                   	// #0
  4181fc:	b	418204 <wcrtomb@plt+0x15414>
  418200:	mov	w1, #0xa                   	// #10
  418204:	ldr	x0, [sp, #40]
  418208:	strb	w1, [x0, #459]
  41820c:	ldr	x0, [sp, #40]
  418210:	ldr	x1, [sp, #24]
  418214:	str	x1, [x0, #448]
  418218:	str	wzr, [sp, #60]
  41821c:	b	41831c <wcrtomb@plt+0x1552c>
  418220:	ldr	w0, [sp, #60]
  418224:	strb	w0, [sp, #59]
  418228:	ldrb	w1, [sp, #59]
  41822c:	ldr	x0, [sp, #40]
  418230:	bl	40ee00 <wcrtomb@plt+0xc010>
  418234:	mov	w1, w0
  418238:	ldrb	w0, [sp, #59]
  41823c:	and	w2, w1, #0xff
  418240:	ldr	x1, [sp, #40]
  418244:	sxtw	x0, w0
  418248:	add	x0, x1, x0
  41824c:	mov	w1, w2
  418250:	strb	w1, [x0, #460]
  418254:	ldrb	w0, [sp, #59]
  418258:	ldr	x1, [sp, #40]
  41825c:	sxtw	x0, w0
  418260:	add	x0, x1, x0
  418264:	ldrb	w0, [x0, #460]
  418268:	cmp	w0, #0x2
  41826c:	b.eq	41827c <wcrtomb@plt+0x1548c>  // b.none
  418270:	cmp	w0, #0x4
  418274:	b.eq	418298 <wcrtomb@plt+0x154a8>  // b.none
  418278:	b	4182b4 <wcrtomb@plt+0x154c4>
  41827c:	ldrb	w2, [sp, #59]
  418280:	ldr	x0, [sp, #40]
  418284:	add	x0, x0, #0x3d0
  418288:	mov	x1, x0
  41828c:	mov	w0, w2
  418290:	bl	40e7c8 <wcrtomb@plt+0xb9d8>
  418294:	b	4182b4 <wcrtomb@plt+0x154c4>
  418298:	ldrb	w2, [sp, #59]
  41829c:	ldr	x0, [sp, #40]
  4182a0:	add	x0, x0, #0x3f0
  4182a4:	mov	x1, x0
  4182a8:	mov	w0, w2
  4182ac:	bl	40e7c8 <wcrtomb@plt+0xb9d8>
  4182b0:	nop
  4182b4:	ldr	x0, [sp, #40]
  4182b8:	ldrb	w0, [x0, #1050]
  4182bc:	cmp	w0, #0x0
  4182c0:	b.eq	4182dc <wcrtomb@plt+0x154ec>  // b.none
  4182c4:	ldrb	w0, [sp, #59]
  4182c8:	and	w0, w0, #0xc0
  4182cc:	cmp	w0, #0x80
  4182d0:	cset	w0, ne  // ne = any
  4182d4:	and	w0, w0, #0xff
  4182d8:	b	4182fc <wcrtomb@plt+0x1550c>
  4182dc:	ldrb	w0, [sp, #59]
  4182e0:	mov	w1, w0
  4182e4:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  4182e8:	add	x0, x0, #0x910
  4182ec:	bl	402ba0 <strchr@plt>
  4182f0:	cmp	x0, #0x0
  4182f4:	cset	w0, ne  // ne = any
  4182f8:	and	w0, w0, #0xff
  4182fc:	ldrb	w1, [sp, #59]
  418300:	ldr	x2, [sp, #40]
  418304:	sxtw	x1, w1
  418308:	add	x1, x2, x1
  41830c:	strb	w0, [x1, #716]
  418310:	ldr	w0, [sp, #60]
  418314:	add	w0, w0, #0x1
  418318:	str	w0, [sp, #60]
  41831c:	ldr	w0, [sp, #60]
  418320:	cmp	w0, #0xff
  418324:	b.le	418220 <wcrtomb@plt+0x15430>
  418328:	nop
  41832c:	nop
  418330:	ldp	x29, x30, [sp], #64
  418334:	ret
  418338:	stp	x29, x30, [sp, #-32]!
  41833c:	mov	x29, sp
  418340:	str	x0, [sp, #24]
  418344:	str	x1, [sp, #16]
  418348:	mov	x2, #0x1c0                 	// #448
  41834c:	mov	w1, #0x0                   	// #0
  418350:	ldr	x0, [sp, #24]
  418354:	bl	402980 <memset@plt>
  418358:	ldr	x0, [sp, #24]
  41835c:	mov	x1, #0xffffffffffffffff    	// #-1
  418360:	str	x1, [x0, #24]
  418364:	ldr	x0, [sp, #16]
  418368:	ldrb	w1, [x0, #192]
  41836c:	ldr	x0, [sp, #24]
  418370:	strb	w1, [x0, #192]
  418374:	ldr	x0, [sp, #24]
  418378:	add	x1, x0, #0x1c0
  41837c:	ldr	x0, [sp, #16]
  418380:	add	x0, x0, #0x1c0
  418384:	mov	x3, x1
  418388:	mov	x1, x0
  41838c:	mov	x0, #0x250                 	// #592
  418390:	mov	x2, x0
  418394:	mov	x0, x3
  418398:	bl	4026d0 <memcpy@plt>
  41839c:	ldr	x0, [sp, #16]
  4183a0:	ldr	x1, [x0, #1040]
  4183a4:	ldr	x0, [sp, #24]
  4183a8:	str	x1, [x0, #1040]
  4183ac:	ldr	x0, [sp, #24]
  4183b0:	add	x0, x0, #0x400
  4183b4:	add	x1, x0, #0x18
  4183b8:	ldr	x0, [sp, #16]
  4183bc:	add	x0, x0, #0x400
  4183c0:	add	x0, x0, #0x18
  4183c4:	mov	x3, x1
  4183c8:	mov	x1, x0
  4183cc:	mov	x0, #0x504                 	// #1284
  4183d0:	mov	x2, x0
  4183d4:	mov	x0, x3
  4183d8:	bl	4026d0 <memcpy@plt>
  4183dc:	nop
  4183e0:	ldp	x29, x30, [sp], #32
  4183e4:	ret
  4183e8:	stp	x29, x30, [sp, #-32]!
  4183ec:	mov	x29, sp
  4183f0:	str	xzr, [sp, #16]
  4183f4:	add	x0, sp, #0x10
  4183f8:	add	x4, sp, #0x1c
  4183fc:	mov	x3, x0
  418400:	mov	x2, #0x2                   	// #2
  418404:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  418408:	add	x1, x0, #0xa60
  41840c:	mov	x0, x4
  418410:	bl	41bae8 <wcrtomb@plt+0x18cf8>
  418414:	cmp	x0, #0x2
  418418:	b.ne	418430 <wcrtomb@plt+0x15640>  // b.any
  41841c:	ldr	w0, [sp, #28]
  418420:	cmp	w0, #0x100
  418424:	b.ne	418430 <wcrtomb@plt+0x15640>  // b.any
  418428:	mov	w0, #0x1                   	// #1
  41842c:	b	418434 <wcrtomb@plt+0x15644>
  418430:	mov	w0, #0x0                   	// #0
  418434:	and	w0, w0, #0x1
  418438:	and	w0, w0, #0xff
  41843c:	ldp	x29, x30, [sp], #32
  418440:	ret
  418444:	stp	x29, x30, [sp, #-48]!
  418448:	mov	x29, sp
  41844c:	strb	w0, [sp, #31]
  418450:	ldrb	w0, [sp, #31]
  418454:	cmp	w0, #0x0
  418458:	b.eq	418464 <wcrtomb@plt+0x15674>  // b.none
  41845c:	mov	w0, #0x0                   	// #0
  418460:	b	4184cc <wcrtomb@plt+0x156dc>
  418464:	str	wzr, [sp, #44]
  418468:	b	4184bc <wcrtomb@plt+0x156cc>
  41846c:	ldr	w0, [sp, #44]
  418470:	and	w0, w0, #0xff
  418474:	strb	w0, [sp, #40]
  418478:	strb	wzr, [sp, #41]
  41847c:	ldr	w0, [sp, #44]
  418480:	and	w0, w0, #0xff
  418484:	add	w0, w0, #0x1
  418488:	and	w0, w0, #0xff
  41848c:	strb	w0, [sp, #32]
  418490:	strb	wzr, [sp, #33]
  418494:	add	x1, sp, #0x20
  418498:	add	x0, sp, #0x28
  41849c:	bl	402cb0 <strcoll@plt>
  4184a0:	cmp	w0, #0x0
  4184a4:	b.lt	4184b0 <wcrtomb@plt+0x156c0>  // b.tstop
  4184a8:	mov	w0, #0x0                   	// #0
  4184ac:	b	4184cc <wcrtomb@plt+0x156dc>
  4184b0:	ldr	w0, [sp, #44]
  4184b4:	add	w0, w0, #0x1
  4184b8:	str	w0, [sp, #44]
  4184bc:	ldr	w0, [sp, #44]
  4184c0:	cmp	w0, #0xfe
  4184c4:	b.le	41846c <wcrtomb@plt+0x1567c>
  4184c8:	mov	w0, #0x1                   	// #1
  4184cc:	ldp	x29, x30, [sp], #48
  4184d0:	ret
  4184d4:	stp	x29, x30, [sp, #-80]!
  4184d8:	mov	x29, sp
  4184dc:	str	x0, [sp, #24]
  4184e0:	bl	402b80 <__ctype_get_mb_cur_max@plt>
  4184e4:	cmp	x0, #0x1
  4184e8:	cset	w0, hi  // hi = pmore
  4184ec:	and	w1, w0, #0xff
  4184f0:	ldr	x0, [sp, #24]
  4184f4:	strb	w1, [x0]
  4184f8:	ldr	x0, [sp, #24]
  4184fc:	ldrb	w0, [x0]
  418500:	bl	418444 <wcrtomb@plt+0x15654>
  418504:	and	w1, w0, #0xff
  418508:	ldr	x0, [sp, #24]
  41850c:	strb	w1, [x0, #1]
  418510:	bl	4183e8 <wcrtomb@plt+0x155f8>
  418514:	and	w1, w0, #0xff
  418518:	ldr	x0, [sp, #24]
  41851c:	strb	w1, [x0, #2]
  418520:	str	wzr, [sp, #76]
  418524:	b	4185cc <wcrtomb@plt+0x157dc>
  418528:	ldr	w0, [sp, #76]
  41852c:	and	w0, w0, #0xff
  418530:	strb	w0, [sp, #63]
  418534:	ldr	w0, [sp, #76]
  418538:	strb	w0, [sp, #75]
  41853c:	str	xzr, [sp, #48]
  418540:	add	x2, sp, #0x30
  418544:	add	x1, sp, #0x3f
  418548:	add	x0, sp, #0x2c
  41854c:	mov	x3, x2
  418550:	mov	x2, #0x1                   	// #1
  418554:	bl	41bae8 <wcrtomb@plt+0x18cf8>
  418558:	str	x0, [sp, #64]
  41855c:	ldr	x0, [sp, #64]
  418560:	cmp	x0, #0x1
  418564:	b.ls	418574 <wcrtomb@plt+0x15784>  // b.plast
  418568:	ldr	x0, [sp, #64]
  41856c:	sxtb	w0, w0
  418570:	b	418578 <wcrtomb@plt+0x15788>
  418574:	mov	w0, #0x1                   	// #1
  418578:	ldrb	w1, [sp, #75]
  41857c:	ldr	x2, [sp, #24]
  418580:	sxtw	x1, w1
  418584:	add	x1, x2, x1
  418588:	strb	w0, [x1, #3]
  41858c:	ldr	x0, [sp, #64]
  418590:	cmp	x0, #0x1
  418594:	b.hi	4185a0 <wcrtomb@plt+0x157b0>  // b.pmore
  418598:	ldr	w0, [sp, #44]
  41859c:	b	4185a4 <wcrtomb@plt+0x157b4>
  4185a0:	mov	w0, #0xffffffff            	// #-1
  4185a4:	ldrb	w1, [sp, #75]
  4185a8:	ldr	x2, [sp, #24]
  4185ac:	sxtw	x1, w1
  4185b0:	add	x1, x1, #0x40
  4185b4:	lsl	x1, x1, #2
  4185b8:	add	x1, x2, x1
  4185bc:	str	w0, [x1, #4]
  4185c0:	ldr	w0, [sp, #76]
  4185c4:	add	w0, w0, #0x1
  4185c8:	str	w0, [sp, #76]
  4185cc:	ldr	w0, [sp, #76]
  4185d0:	cmp	w0, #0xff
  4185d4:	b.le	418528 <wcrtomb@plt+0x15738>
  4185d8:	nop
  4185dc:	nop
  4185e0:	ldp	x29, x30, [sp], #80
  4185e4:	ret
  4185e8:	stp	x29, x30, [sp, #-64]!
  4185ec:	mov	x29, sp
  4185f0:	str	w0, [sp, #28]
  4185f4:	str	x1, [sp, #16]
  4185f8:	str	wzr, [sp, #56]
  4185fc:	ldr	w0, [sp, #28]
  418600:	bl	402ce0 <towupper@plt>
  418604:	str	w0, [sp, #52]
  418608:	ldr	w0, [sp, #52]
  41860c:	bl	402da0 <towlower@plt>
  418610:	str	w0, [sp, #48]
  418614:	ldr	w1, [sp, #52]
  418618:	ldr	w0, [sp, #28]
  41861c:	cmp	w1, w0
  418620:	b.eq	418648 <wcrtomb@plt+0x15858>  // b.none
  418624:	ldr	w0, [sp, #56]
  418628:	add	w1, w0, #0x1
  41862c:	str	w1, [sp, #56]
  418630:	sxtw	x0, w0
  418634:	lsl	x0, x0, #2
  418638:	ldr	x1, [sp, #16]
  41863c:	add	x0, x1, x0
  418640:	ldr	w1, [sp, #52]
  418644:	str	w1, [x0]
  418648:	ldr	w1, [sp, #48]
  41864c:	ldr	w0, [sp, #52]
  418650:	cmp	w1, w0
  418654:	b.eq	4186a4 <wcrtomb@plt+0x158b4>  // b.none
  418658:	ldr	w1, [sp, #48]
  41865c:	ldr	w0, [sp, #28]
  418660:	cmp	w1, w0
  418664:	b.eq	4186a4 <wcrtomb@plt+0x158b4>  // b.none
  418668:	ldr	w0, [sp, #48]
  41866c:	bl	402ce0 <towupper@plt>
  418670:	mov	w1, w0
  418674:	ldr	w0, [sp, #52]
  418678:	cmp	w0, w1
  41867c:	b.ne	4186a4 <wcrtomb@plt+0x158b4>  // b.any
  418680:	ldr	w0, [sp, #56]
  418684:	add	w1, w0, #0x1
  418688:	str	w1, [sp, #56]
  41868c:	sxtw	x0, w0
  418690:	lsl	x0, x0, #2
  418694:	ldr	x1, [sp, #16]
  418698:	add	x0, x1, x0
  41869c:	ldr	w1, [sp, #48]
  4186a0:	str	w1, [x0]
  4186a4:	str	wzr, [sp, #60]
  4186a8:	b	418738 <wcrtomb@plt+0x15948>
  4186ac:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  4186b0:	add	x0, x0, #0xa68
  4186b4:	ldrsw	x1, [sp, #60]
  4186b8:	ldrsh	w0, [x0, x1, lsl #1]
  4186bc:	str	w0, [sp, #44]
  4186c0:	ldr	w1, [sp, #44]
  4186c4:	ldr	w0, [sp, #48]
  4186c8:	cmp	w1, w0
  4186cc:	b.eq	41872c <wcrtomb@plt+0x1593c>  // b.none
  4186d0:	ldr	w1, [sp, #44]
  4186d4:	ldr	w0, [sp, #52]
  4186d8:	cmp	w1, w0
  4186dc:	b.eq	41872c <wcrtomb@plt+0x1593c>  // b.none
  4186e0:	ldr	w1, [sp, #44]
  4186e4:	ldr	w0, [sp, #28]
  4186e8:	cmp	w1, w0
  4186ec:	b.eq	41872c <wcrtomb@plt+0x1593c>  // b.none
  4186f0:	ldr	w0, [sp, #44]
  4186f4:	bl	402ce0 <towupper@plt>
  4186f8:	mov	w1, w0
  4186fc:	ldr	w0, [sp, #52]
  418700:	cmp	w0, w1
  418704:	b.ne	41872c <wcrtomb@plt+0x1593c>  // b.any
  418708:	ldr	w0, [sp, #56]
  41870c:	add	w1, w0, #0x1
  418710:	str	w1, [sp, #56]
  418714:	sxtw	x0, w0
  418718:	lsl	x0, x0, #2
  41871c:	ldr	x1, [sp, #16]
  418720:	add	x0, x1, x0
  418724:	ldr	w1, [sp, #44]
  418728:	str	w1, [x0]
  41872c:	ldr	w0, [sp, #60]
  418730:	add	w0, w0, #0x1
  418734:	str	w0, [sp, #60]
  418738:	ldr	w0, [sp, #60]
  41873c:	cmp	w0, #0x12
  418740:	b.ls	4186ac <wcrtomb@plt+0x158bc>  // b.plast
  418744:	ldr	w0, [sp, #56]
  418748:	ldp	x29, x30, [sp], #64
  41874c:	ret
  418750:	stp	x29, x30, [sp, #-32]!
  418754:	mov	x29, sp
  418758:	mov	w0, #0xe                   	// #14
  41875c:	bl	402870 <nl_langinfo@plt>
  418760:	str	x0, [sp, #24]
  418764:	ldr	x0, [sp, #24]
  418768:	cmp	x0, #0x0
  41876c:	b.ne	41877c <wcrtomb@plt+0x1598c>  // b.any
  418770:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  418774:	add	x0, x0, #0xa90
  418778:	str	x0, [sp, #24]
  41877c:	ldr	x0, [sp, #24]
  418780:	ldrb	w0, [x0]
  418784:	cmp	w0, #0x0
  418788:	b.ne	418798 <wcrtomb@plt+0x159a8>  // b.any
  41878c:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  418790:	add	x0, x0, #0xa98
  418794:	str	x0, [sp, #24]
  418798:	ldr	x0, [sp, #24]
  41879c:	ldp	x29, x30, [sp], #32
  4187a0:	ret
  4187a4:	stp	x29, x30, [sp, #-48]!
  4187a8:	mov	x29, sp
  4187ac:	str	x0, [sp, #24]
  4187b0:	ldr	x0, [sp, #24]
  4187b4:	cmp	x0, #0x0
  4187b8:	b.ne	4187e4 <wcrtomb@plt+0x159f4>  // b.any
  4187bc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4187c0:	add	x0, x0, #0x508
  4187c4:	ldr	x0, [x0]
  4187c8:	mov	x3, x0
  4187cc:	mov	x2, #0x37                  	// #55
  4187d0:	mov	x1, #0x1                   	// #1
  4187d4:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  4187d8:	add	x0, x0, #0xaa0
  4187dc:	bl	402be0 <fwrite@plt>
  4187e0:	bl	402a90 <abort@plt>
  4187e4:	mov	w1, #0x2f                  	// #47
  4187e8:	ldr	x0, [sp, #24]
  4187ec:	bl	402a60 <strrchr@plt>
  4187f0:	str	x0, [sp, #40]
  4187f4:	ldr	x0, [sp, #40]
  4187f8:	cmp	x0, #0x0
  4187fc:	b.eq	41880c <wcrtomb@plt+0x15a1c>  // b.none
  418800:	ldr	x0, [sp, #40]
  418804:	add	x0, x0, #0x1
  418808:	b	418810 <wcrtomb@plt+0x15a20>
  41880c:	ldr	x0, [sp, #24]
  418810:	str	x0, [sp, #32]
  418814:	ldr	x1, [sp, #32]
  418818:	ldr	x0, [sp, #24]
  41881c:	sub	x0, x1, x0
  418820:	cmp	x0, #0x6
  418824:	b.le	41888c <wcrtomb@plt+0x15a9c>
  418828:	ldr	x0, [sp, #32]
  41882c:	sub	x3, x0, #0x7
  418830:	mov	x2, #0x7                   	// #7
  418834:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  418838:	add	x1, x0, #0xad8
  41883c:	mov	x0, x3
  418840:	bl	402920 <strncmp@plt>
  418844:	cmp	w0, #0x0
  418848:	b.ne	41888c <wcrtomb@plt+0x15a9c>  // b.any
  41884c:	ldr	x0, [sp, #32]
  418850:	str	x0, [sp, #24]
  418854:	mov	x2, #0x3                   	// #3
  418858:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  41885c:	add	x1, x0, #0xae0
  418860:	ldr	x0, [sp, #32]
  418864:	bl	402920 <strncmp@plt>
  418868:	cmp	w0, #0x0
  41886c:	b.ne	41888c <wcrtomb@plt+0x15a9c>  // b.any
  418870:	ldr	x0, [sp, #32]
  418874:	add	x0, x0, #0x3
  418878:	str	x0, [sp, #24]
  41887c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  418880:	add	x0, x0, #0x530
  418884:	ldr	x1, [sp, #24]
  418888:	str	x1, [x0]
  41888c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  418890:	add	x0, x0, #0x7a0
  418894:	ldr	x1, [sp, #24]
  418898:	str	x1, [x0]
  41889c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4188a0:	add	x0, x0, #0x500
  4188a4:	ldr	x1, [sp, #24]
  4188a8:	str	x1, [x0]
  4188ac:	nop
  4188b0:	ldp	x29, x30, [sp], #48
  4188b4:	ret
  4188b8:	stp	x29, x30, [sp, #-96]!
  4188bc:	mov	x29, sp
  4188c0:	str	x0, [sp, #40]
  4188c4:	str	w1, [sp, #36]
  4188c8:	str	x2, [sp, #24]
  4188cc:	str	w3, [sp, #32]
  4188d0:	str	w4, [sp, #20]
  4188d4:	add	x0, sp, #0x38
  4188d8:	mov	x3, x0
  4188dc:	ldr	w2, [sp, #20]
  4188e0:	ldr	w1, [sp, #36]
  4188e4:	ldr	x0, [sp, #40]
  4188e8:	bl	433c88 <_obstack_memory_used@@Base+0x17aa8>
  4188ec:	str	w0, [sp, #92]
  4188f0:	ldr	w0, [sp, #92]
  4188f4:	cmp	w0, #0x0
  4188f8:	b.eq	418904 <wcrtomb@plt+0x15b14>  // b.none
  4188fc:	mov	w0, #0xfffffffe            	// #-2
  418900:	b	418924 <wcrtomb@plt+0x15b34>
  418904:	add	x0, sp, #0x38
  418908:	ldr	w2, [sp, #32]
  41890c:	ldr	x1, [sp, #24]
  418910:	bl	433fa8 <_obstack_memory_used@@Base+0x17dc8>
  418914:	str	w0, [sp, #92]
  418918:	add	x0, sp, #0x38
  41891c:	bl	433c38 <_obstack_memory_used@@Base+0x17a58>
  418920:	ldr	w0, [sp, #92]
  418924:	ldp	x29, x30, [sp], #96
  418928:	ret
  41892c:	stp	x29, x30, [sp, #-48]!
  418930:	mov	x29, sp
  418934:	str	x0, [sp, #24]
  418938:	bl	402d40 <__errno_location@plt>
  41893c:	ldr	w0, [x0]
  418940:	str	w0, [sp, #44]
  418944:	ldr	x0, [sp, #24]
  418948:	cmp	x0, #0x0
  41894c:	b.eq	418958 <wcrtomb@plt+0x15b68>  // b.none
  418950:	ldr	x0, [sp, #24]
  418954:	b	418960 <wcrtomb@plt+0x15b70>
  418958:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41895c:	add	x0, x0, #0x7a8
  418960:	mov	x1, #0x38                  	// #56
  418964:	bl	41ba50 <wcrtomb@plt+0x18c60>
  418968:	str	x0, [sp, #32]
  41896c:	bl	402d40 <__errno_location@plt>
  418970:	mov	x1, x0
  418974:	ldr	w0, [sp, #44]
  418978:	str	w0, [x1]
  41897c:	ldr	x0, [sp, #32]
  418980:	ldp	x29, x30, [sp], #48
  418984:	ret
  418988:	sub	sp, sp, #0x10
  41898c:	str	x0, [sp, #8]
  418990:	ldr	x0, [sp, #8]
  418994:	cmp	x0, #0x0
  418998:	b.eq	4189a4 <wcrtomb@plt+0x15bb4>  // b.none
  41899c:	ldr	x0, [sp, #8]
  4189a0:	b	4189ac <wcrtomb@plt+0x15bbc>
  4189a4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4189a8:	add	x0, x0, #0x7a8
  4189ac:	ldr	w0, [x0]
  4189b0:	add	sp, sp, #0x10
  4189b4:	ret
  4189b8:	sub	sp, sp, #0x10
  4189bc:	str	x0, [sp, #8]
  4189c0:	str	w1, [sp, #4]
  4189c4:	ldr	x0, [sp, #8]
  4189c8:	cmp	x0, #0x0
  4189cc:	b.eq	4189d8 <wcrtomb@plt+0x15be8>  // b.none
  4189d0:	ldr	x0, [sp, #8]
  4189d4:	b	4189e0 <wcrtomb@plt+0x15bf0>
  4189d8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4189dc:	add	x0, x0, #0x7a8
  4189e0:	ldr	w1, [sp, #4]
  4189e4:	str	w1, [x0]
  4189e8:	nop
  4189ec:	add	sp, sp, #0x10
  4189f0:	ret
  4189f4:	sub	sp, sp, #0x30
  4189f8:	str	x0, [sp, #8]
  4189fc:	strb	w1, [sp, #7]
  418a00:	str	w2, [sp]
  418a04:	ldrb	w0, [sp, #7]
  418a08:	strb	w0, [sp, #47]
  418a0c:	ldr	x0, [sp, #8]
  418a10:	cmp	x0, #0x0
  418a14:	b.eq	418a20 <wcrtomb@plt+0x15c30>  // b.none
  418a18:	ldr	x0, [sp, #8]
  418a1c:	b	418a28 <wcrtomb@plt+0x15c38>
  418a20:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  418a24:	add	x0, x0, #0x7a8
  418a28:	add	x1, x0, #0x8
  418a2c:	ldrb	w0, [sp, #47]
  418a30:	lsr	w0, w0, #5
  418a34:	and	w0, w0, #0xff
  418a38:	and	x0, x0, #0xff
  418a3c:	lsl	x0, x0, #2
  418a40:	add	x0, x1, x0
  418a44:	str	x0, [sp, #32]
  418a48:	ldrb	w0, [sp, #47]
  418a4c:	and	w0, w0, #0x1f
  418a50:	str	w0, [sp, #28]
  418a54:	ldr	x0, [sp, #32]
  418a58:	ldr	w1, [x0]
  418a5c:	ldr	w0, [sp, #28]
  418a60:	lsr	w0, w1, w0
  418a64:	and	w0, w0, #0x1
  418a68:	str	w0, [sp, #24]
  418a6c:	ldr	x0, [sp, #32]
  418a70:	ldr	w0, [x0]
  418a74:	ldr	w1, [sp]
  418a78:	and	w2, w1, #0x1
  418a7c:	ldr	w1, [sp, #24]
  418a80:	eor	w2, w2, w1
  418a84:	ldr	w1, [sp, #28]
  418a88:	lsl	w1, w2, w1
  418a8c:	eor	w1, w0, w1
  418a90:	ldr	x0, [sp, #32]
  418a94:	str	w1, [x0]
  418a98:	ldr	w0, [sp, #24]
  418a9c:	add	sp, sp, #0x30
  418aa0:	ret
  418aa4:	sub	sp, sp, #0x20
  418aa8:	str	x0, [sp, #8]
  418aac:	str	w1, [sp, #4]
  418ab0:	ldr	x0, [sp, #8]
  418ab4:	cmp	x0, #0x0
  418ab8:	b.ne	418ac8 <wcrtomb@plt+0x15cd8>  // b.any
  418abc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  418ac0:	add	x0, x0, #0x7a8
  418ac4:	str	x0, [sp, #8]
  418ac8:	ldr	x0, [sp, #8]
  418acc:	ldr	w0, [x0, #4]
  418ad0:	str	w0, [sp, #28]
  418ad4:	ldr	x0, [sp, #8]
  418ad8:	ldr	w1, [sp, #4]
  418adc:	str	w1, [x0, #4]
  418ae0:	ldr	w0, [sp, #28]
  418ae4:	add	sp, sp, #0x20
  418ae8:	ret
  418aec:	stp	x29, x30, [sp, #-48]!
  418af0:	mov	x29, sp
  418af4:	str	x0, [sp, #40]
  418af8:	str	x1, [sp, #32]
  418afc:	str	x2, [sp, #24]
  418b00:	ldr	x0, [sp, #40]
  418b04:	cmp	x0, #0x0
  418b08:	b.ne	418b18 <wcrtomb@plt+0x15d28>  // b.any
  418b0c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  418b10:	add	x0, x0, #0x7a8
  418b14:	str	x0, [sp, #40]
  418b18:	ldr	x0, [sp, #40]
  418b1c:	mov	w1, #0xa                   	// #10
  418b20:	str	w1, [x0]
  418b24:	ldr	x0, [sp, #32]
  418b28:	cmp	x0, #0x0
  418b2c:	b.eq	418b3c <wcrtomb@plt+0x15d4c>  // b.none
  418b30:	ldr	x0, [sp, #24]
  418b34:	cmp	x0, #0x0
  418b38:	b.ne	418b40 <wcrtomb@plt+0x15d50>  // b.any
  418b3c:	bl	402a90 <abort@plt>
  418b40:	ldr	x0, [sp, #40]
  418b44:	ldr	x1, [sp, #32]
  418b48:	str	x1, [x0, #40]
  418b4c:	ldr	x0, [sp, #40]
  418b50:	ldr	x1, [sp, #24]
  418b54:	str	x1, [x0, #48]
  418b58:	nop
  418b5c:	ldp	x29, x30, [sp], #48
  418b60:	ret
  418b64:	stp	x29, x30, [sp, #-96]!
  418b68:	mov	x29, sp
  418b6c:	mov	x1, x8
  418b70:	str	w0, [sp, #28]
  418b74:	stp	xzr, xzr, [sp, #40]
  418b78:	stp	xzr, xzr, [sp, #56]
  418b7c:	stp	xzr, xzr, [sp, #72]
  418b80:	str	xzr, [sp, #88]
  418b84:	ldr	w0, [sp, #28]
  418b88:	cmp	w0, #0xa
  418b8c:	b.ne	418b94 <wcrtomb@plt+0x15da4>  // b.any
  418b90:	bl	402a90 <abort@plt>
  418b94:	ldr	w0, [sp, #28]
  418b98:	str	w0, [sp, #40]
  418b9c:	add	x0, sp, #0x28
  418ba0:	ldp	x2, x3, [x0]
  418ba4:	stp	x2, x3, [x1]
  418ba8:	ldp	x2, x3, [x0, #16]
  418bac:	stp	x2, x3, [x1, #16]
  418bb0:	ldp	x2, x3, [x0, #32]
  418bb4:	stp	x2, x3, [x1, #32]
  418bb8:	ldr	x0, [x0, #48]
  418bbc:	str	x0, [x1, #48]
  418bc0:	ldp	x29, x30, [sp], #96
  418bc4:	ret
  418bc8:	stp	x29, x30, [sp, #-48]!
  418bcc:	mov	x29, sp
  418bd0:	str	x0, [sp, #24]
  418bd4:	str	w1, [sp, #20]
  418bd8:	ldr	x0, [sp, #24]
  418bdc:	bl	402d80 <gettext@plt>
  418be0:	str	x0, [sp, #40]
  418be4:	ldr	x1, [sp, #40]
  418be8:	ldr	x0, [sp, #24]
  418bec:	cmp	x1, x0
  418bf0:	b.eq	418bfc <wcrtomb@plt+0x15e0c>  // b.none
  418bf4:	ldr	x0, [sp, #40]
  418bf8:	b	418ca4 <wcrtomb@plt+0x15eb4>
  418bfc:	bl	418750 <wcrtomb@plt+0x15960>
  418c00:	str	x0, [sp, #32]
  418c04:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  418c08:	add	x1, x0, #0xbd8
  418c0c:	ldr	x0, [sp, #32]
  418c10:	bl	43416c <_obstack_memory_used@@Base+0x17f8c>
  418c14:	cmp	w0, #0x0
  418c18:	b.ne	418c44 <wcrtomb@plt+0x15e54>  // b.any
  418c1c:	ldr	x0, [sp, #24]
  418c20:	ldrb	w0, [x0]
  418c24:	cmp	w0, #0x60
  418c28:	b.ne	418c38 <wcrtomb@plt+0x15e48>  // b.any
  418c2c:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  418c30:	add	x0, x0, #0xbe0
  418c34:	b	418ca4 <wcrtomb@plt+0x15eb4>
  418c38:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  418c3c:	add	x0, x0, #0xbe8
  418c40:	b	418ca4 <wcrtomb@plt+0x15eb4>
  418c44:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  418c48:	add	x1, x0, #0xbf0
  418c4c:	ldr	x0, [sp, #32]
  418c50:	bl	43416c <_obstack_memory_used@@Base+0x17f8c>
  418c54:	cmp	w0, #0x0
  418c58:	b.ne	418c84 <wcrtomb@plt+0x15e94>  // b.any
  418c5c:	ldr	x0, [sp, #24]
  418c60:	ldrb	w0, [x0]
  418c64:	cmp	w0, #0x60
  418c68:	b.ne	418c78 <wcrtomb@plt+0x15e88>  // b.any
  418c6c:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  418c70:	add	x0, x0, #0xbf8
  418c74:	b	418ca4 <wcrtomb@plt+0x15eb4>
  418c78:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  418c7c:	add	x0, x0, #0xc00
  418c80:	b	418ca4 <wcrtomb@plt+0x15eb4>
  418c84:	ldr	w0, [sp, #20]
  418c88:	cmp	w0, #0x9
  418c8c:	b.ne	418c9c <wcrtomb@plt+0x15eac>  // b.any
  418c90:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  418c94:	add	x0, x0, #0xc08
  418c98:	b	418ca4 <wcrtomb@plt+0x15eb4>
  418c9c:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  418ca0:	add	x0, x0, #0xc10
  418ca4:	ldp	x29, x30, [sp], #48
  418ca8:	ret
  418cac:	sub	sp, sp, #0xf0
  418cb0:	stp	x29, x30, [sp, #16]
  418cb4:	add	x29, sp, #0x10
  418cb8:	str	x19, [sp, #32]
  418cbc:	str	x0, [sp, #104]
  418cc0:	str	x1, [sp, #96]
  418cc4:	str	x2, [sp, #88]
  418cc8:	str	x3, [sp, #80]
  418ccc:	str	w4, [sp, #76]
  418cd0:	str	w5, [sp, #72]
  418cd4:	str	x6, [sp, #64]
  418cd8:	str	x7, [sp, #56]
  418cdc:	str	xzr, [sp, #224]
  418ce0:	str	xzr, [sp, #216]
  418ce4:	str	xzr, [sp, #208]
  418ce8:	str	xzr, [sp, #200]
  418cec:	strb	wzr, [sp, #199]
  418cf0:	bl	402b80 <__ctype_get_mb_cur_max@plt>
  418cf4:	cmp	x0, #0x1
  418cf8:	cset	w0, eq  // eq = none
  418cfc:	strb	w0, [sp, #159]
  418d00:	ldr	w0, [sp, #72]
  418d04:	and	w0, w0, #0x2
  418d08:	cmp	w0, #0x0
  418d0c:	cset	w0, ne  // ne = any
  418d10:	strb	w0, [sp, #198]
  418d14:	strb	wzr, [sp, #197]
  418d18:	strb	wzr, [sp, #196]
  418d1c:	mov	w0, #0x1                   	// #1
  418d20:	strb	w0, [sp, #195]
  418d24:	ldr	w0, [sp, #76]
  418d28:	cmp	w0, #0xa
  418d2c:	b.hi	418fc8 <wcrtomb@plt+0x161d8>  // b.pmore
  418d30:	ldr	w0, [sp, #76]
  418d34:	cmp	w0, #0x8
  418d38:	b.cs	418e6c <wcrtomb@plt+0x1607c>  // b.hs, b.nlast
  418d3c:	ldr	w0, [sp, #76]
  418d40:	cmp	w0, #0x7
  418d44:	b.eq	418e5c <wcrtomb@plt+0x1606c>  // b.none
  418d48:	ldr	w0, [sp, #76]
  418d4c:	cmp	w0, #0x7
  418d50:	b.hi	418fc8 <wcrtomb@plt+0x161d8>  // b.pmore
  418d54:	ldr	w0, [sp, #76]
  418d58:	cmp	w0, #0x6
  418d5c:	b.eq	418de8 <wcrtomb@plt+0x15ff8>  // b.none
  418d60:	ldr	w0, [sp, #76]
  418d64:	cmp	w0, #0x6
  418d68:	b.hi	418fc8 <wcrtomb@plt+0x161d8>  // b.pmore
  418d6c:	ldr	w0, [sp, #76]
  418d70:	cmp	w0, #0x5
  418d74:	b.eq	418df8 <wcrtomb@plt+0x16008>  // b.none
  418d78:	ldr	w0, [sp, #76]
  418d7c:	cmp	w0, #0x5
  418d80:	b.hi	418fc8 <wcrtomb@plt+0x161d8>  // b.pmore
  418d84:	ldr	w0, [sp, #76]
  418d88:	cmp	w0, #0x4
  418d8c:	b.eq	418f40 <wcrtomb@plt+0x16150>  // b.none
  418d90:	ldr	w0, [sp, #76]
  418d94:	cmp	w0, #0x4
  418d98:	b.hi	418fc8 <wcrtomb@plt+0x161d8>  // b.pmore
  418d9c:	ldr	w0, [sp, #76]
  418da0:	cmp	w0, #0x3
  418da4:	b.eq	418f30 <wcrtomb@plt+0x16140>  // b.none
  418da8:	ldr	w0, [sp, #76]
  418dac:	cmp	w0, #0x3
  418db0:	b.hi	418fc8 <wcrtomb@plt+0x161d8>  // b.pmore
  418db4:	ldr	w0, [sp, #76]
  418db8:	cmp	w0, #0x2
  418dbc:	b.eq	418f5c <wcrtomb@plt+0x1616c>  // b.none
  418dc0:	ldr	w0, [sp, #76]
  418dc4:	cmp	w0, #0x2
  418dc8:	b.hi	418fc8 <wcrtomb@plt+0x161d8>  // b.pmore
  418dcc:	ldr	w0, [sp, #76]
  418dd0:	cmp	w0, #0x0
  418dd4:	b.eq	418fc0 <wcrtomb@plt+0x161d0>  // b.none
  418dd8:	ldr	w0, [sp, #76]
  418ddc:	cmp	w0, #0x1
  418de0:	b.eq	418f38 <wcrtomb@plt+0x16148>  // b.none
  418de4:	b	418fc8 <wcrtomb@plt+0x161d8>
  418de8:	mov	w0, #0x5                   	// #5
  418dec:	str	w0, [sp, #76]
  418df0:	mov	w0, #0x1                   	// #1
  418df4:	strb	w0, [sp, #198]
  418df8:	ldrb	w0, [sp, #198]
  418dfc:	eor	w0, w0, #0x1
  418e00:	and	w0, w0, #0xff
  418e04:	cmp	w0, #0x0
  418e08:	b.eq	418e3c <wcrtomb@plt+0x1604c>  // b.none
  418e0c:	ldr	x1, [sp, #224]
  418e10:	ldr	x0, [sp, #96]
  418e14:	cmp	x1, x0
  418e18:	b.cs	418e30 <wcrtomb@plt+0x16040>  // b.hs, b.nlast
  418e1c:	ldr	x1, [sp, #104]
  418e20:	ldr	x0, [sp, #224]
  418e24:	add	x0, x1, x0
  418e28:	mov	w1, #0x22                  	// #34
  418e2c:	strb	w1, [x0]
  418e30:	ldr	x0, [sp, #224]
  418e34:	add	x0, x0, #0x1
  418e38:	str	x0, [sp, #224]
  418e3c:	mov	w0, #0x1                   	// #1
  418e40:	strb	w0, [sp, #199]
  418e44:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  418e48:	add	x0, x0, #0xc08
  418e4c:	str	x0, [sp, #208]
  418e50:	mov	x0, #0x1                   	// #1
  418e54:	str	x0, [sp, #200]
  418e58:	b	418fcc <wcrtomb@plt+0x161dc>
  418e5c:	mov	w0, #0x1                   	// #1
  418e60:	strb	w0, [sp, #199]
  418e64:	strb	wzr, [sp, #198]
  418e68:	b	418fcc <wcrtomb@plt+0x161dc>
  418e6c:	ldr	w0, [sp, #76]
  418e70:	cmp	w0, #0xa
  418e74:	b.eq	418ea0 <wcrtomb@plt+0x160b0>  // b.none
  418e78:	ldr	w1, [sp, #76]
  418e7c:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  418e80:	add	x0, x0, #0xc18
  418e84:	bl	418bc8 <wcrtomb@plt+0x15dd8>
  418e88:	str	x0, [sp, #56]
  418e8c:	ldr	w1, [sp, #76]
  418e90:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  418e94:	add	x0, x0, #0xc10
  418e98:	bl	418bc8 <wcrtomb@plt+0x15dd8>
  418e9c:	str	x0, [sp, #240]
  418ea0:	ldrb	w0, [sp, #198]
  418ea4:	eor	w0, w0, #0x1
  418ea8:	and	w0, w0, #0xff
  418eac:	cmp	w0, #0x0
  418eb0:	b.eq	418f10 <wcrtomb@plt+0x16120>  // b.none
  418eb4:	ldr	x0, [sp, #56]
  418eb8:	str	x0, [sp, #208]
  418ebc:	b	418f00 <wcrtomb@plt+0x16110>
  418ec0:	ldr	x1, [sp, #224]
  418ec4:	ldr	x0, [sp, #96]
  418ec8:	cmp	x1, x0
  418ecc:	b.cs	418ee8 <wcrtomb@plt+0x160f8>  // b.hs, b.nlast
  418ed0:	ldr	x1, [sp, #104]
  418ed4:	ldr	x0, [sp, #224]
  418ed8:	add	x0, x1, x0
  418edc:	ldr	x1, [sp, #208]
  418ee0:	ldrb	w1, [x1]
  418ee4:	strb	w1, [x0]
  418ee8:	ldr	x0, [sp, #224]
  418eec:	add	x0, x0, #0x1
  418ef0:	str	x0, [sp, #224]
  418ef4:	ldr	x0, [sp, #208]
  418ef8:	add	x0, x0, #0x1
  418efc:	str	x0, [sp, #208]
  418f00:	ldr	x0, [sp, #208]
  418f04:	ldrb	w0, [x0]
  418f08:	cmp	w0, #0x0
  418f0c:	b.ne	418ec0 <wcrtomb@plt+0x160d0>  // b.any
  418f10:	mov	w0, #0x1                   	// #1
  418f14:	strb	w0, [sp, #199]
  418f18:	ldr	x0, [sp, #240]
  418f1c:	str	x0, [sp, #208]
  418f20:	ldr	x0, [sp, #208]
  418f24:	bl	402720 <strlen@plt>
  418f28:	str	x0, [sp, #200]
  418f2c:	b	418fcc <wcrtomb@plt+0x161dc>
  418f30:	mov	w0, #0x1                   	// #1
  418f34:	strb	w0, [sp, #199]
  418f38:	mov	w0, #0x1                   	// #1
  418f3c:	strb	w0, [sp, #198]
  418f40:	ldrb	w0, [sp, #198]
  418f44:	eor	w0, w0, #0x1
  418f48:	and	w0, w0, #0xff
  418f4c:	cmp	w0, #0x0
  418f50:	b.eq	418f5c <wcrtomb@plt+0x1616c>  // b.none
  418f54:	mov	w0, #0x1                   	// #1
  418f58:	strb	w0, [sp, #199]
  418f5c:	mov	w0, #0x2                   	// #2
  418f60:	str	w0, [sp, #76]
  418f64:	ldrb	w0, [sp, #198]
  418f68:	eor	w0, w0, #0x1
  418f6c:	and	w0, w0, #0xff
  418f70:	cmp	w0, #0x0
  418f74:	b.eq	418fa8 <wcrtomb@plt+0x161b8>  // b.none
  418f78:	ldr	x1, [sp, #224]
  418f7c:	ldr	x0, [sp, #96]
  418f80:	cmp	x1, x0
  418f84:	b.cs	418f9c <wcrtomb@plt+0x161ac>  // b.hs, b.nlast
  418f88:	ldr	x1, [sp, #104]
  418f8c:	ldr	x0, [sp, #224]
  418f90:	add	x0, x1, x0
  418f94:	mov	w1, #0x27                  	// #39
  418f98:	strb	w1, [x0]
  418f9c:	ldr	x0, [sp, #224]
  418fa0:	add	x0, x0, #0x1
  418fa4:	str	x0, [sp, #224]
  418fa8:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  418fac:	add	x0, x0, #0xc10
  418fb0:	str	x0, [sp, #208]
  418fb4:	mov	x0, #0x1                   	// #1
  418fb8:	str	x0, [sp, #200]
  418fbc:	b	418fcc <wcrtomb@plt+0x161dc>
  418fc0:	strb	wzr, [sp, #198]
  418fc4:	b	418fcc <wcrtomb@plt+0x161dc>
  418fc8:	bl	402a90 <abort@plt>
  418fcc:	str	xzr, [sp, #232]
  418fd0:	b	419e88 <wcrtomb@plt+0x17098>
  418fd4:	strb	wzr, [sp, #192]
  418fd8:	strb	wzr, [sp, #191]
  418fdc:	strb	wzr, [sp, #190]
  418fe0:	ldrb	w0, [sp, #199]
  418fe4:	cmp	w0, #0x0
  418fe8:	b.eq	41907c <wcrtomb@plt+0x1628c>  // b.none
  418fec:	ldr	w0, [sp, #76]
  418ff0:	cmp	w0, #0x2
  418ff4:	b.eq	41907c <wcrtomb@plt+0x1628c>  // b.none
  418ff8:	ldr	x0, [sp, #200]
  418ffc:	cmp	x0, #0x0
  419000:	b.eq	41907c <wcrtomb@plt+0x1628c>  // b.none
  419004:	ldr	x1, [sp, #232]
  419008:	ldr	x0, [sp, #200]
  41900c:	add	x19, x1, x0
  419010:	ldr	x0, [sp, #80]
  419014:	cmn	x0, #0x1
  419018:	b.ne	41903c <wcrtomb@plt+0x1624c>  // b.any
  41901c:	ldr	x0, [sp, #200]
  419020:	cmp	x0, #0x1
  419024:	b.ls	41903c <wcrtomb@plt+0x1624c>  // b.plast
  419028:	ldr	x0, [sp, #88]
  41902c:	bl	402720 <strlen@plt>
  419030:	str	x0, [sp, #80]
  419034:	ldr	x0, [sp, #80]
  419038:	b	419040 <wcrtomb@plt+0x16250>
  41903c:	ldr	x0, [sp, #80]
  419040:	cmp	x0, x19
  419044:	b.cc	41907c <wcrtomb@plt+0x1628c>  // b.lo, b.ul, b.last
  419048:	ldr	x1, [sp, #88]
  41904c:	ldr	x0, [sp, #232]
  419050:	add	x0, x1, x0
  419054:	ldr	x2, [sp, #200]
  419058:	ldr	x1, [sp, #208]
  41905c:	bl	402b00 <memcmp@plt>
  419060:	cmp	w0, #0x0
  419064:	b.ne	41907c <wcrtomb@plt+0x1628c>  // b.any
  419068:	ldrb	w0, [sp, #198]
  41906c:	cmp	w0, #0x0
  419070:	b.ne	41a020 <wcrtomb@plt+0x17230>  // b.any
  419074:	mov	w0, #0x1                   	// #1
  419078:	strb	w0, [sp, #192]
  41907c:	ldr	x1, [sp, #88]
  419080:	ldr	x0, [sp, #232]
  419084:	add	x0, x1, x0
  419088:	ldrb	w0, [x0]
  41908c:	strb	w0, [sp, #194]
  419090:	ldrb	w0, [sp, #194]
  419094:	cmp	w0, #0x7e
  419098:	b.hi	419690 <wcrtomb@plt+0x168a0>  // b.pmore
  41909c:	adrp	x1, 436000 <_obstack_memory_used@@Base+0x19e20>
  4190a0:	add	x1, x1, #0xc1c
  4190a4:	ldr	w0, [x1, w0, uxtw #2]
  4190a8:	adr	x1, 4190b4 <wcrtomb@plt+0x162c4>
  4190ac:	add	x0, x1, w0, sxtw #2
  4190b0:	br	x0
  4190b4:	ldrb	w0, [sp, #199]
  4190b8:	cmp	w0, #0x0
  4190bc:	b.eq	419280 <wcrtomb@plt+0x16490>  // b.none
  4190c0:	ldrb	w0, [sp, #198]
  4190c4:	cmp	w0, #0x0
  4190c8:	b.ne	41a028 <wcrtomb@plt+0x17238>  // b.any
  4190cc:	mov	w0, #0x1                   	// #1
  4190d0:	strb	w0, [sp, #191]
  4190d4:	ldr	w0, [sp, #76]
  4190d8:	cmp	w0, #0x2
  4190dc:	b.ne	41918c <wcrtomb@plt+0x1639c>  // b.any
  4190e0:	ldrb	w0, [sp, #197]
  4190e4:	eor	w0, w0, #0x1
  4190e8:	and	w0, w0, #0xff
  4190ec:	cmp	w0, #0x0
  4190f0:	b.eq	41918c <wcrtomb@plt+0x1639c>  // b.none
  4190f4:	ldr	x1, [sp, #224]
  4190f8:	ldr	x0, [sp, #96]
  4190fc:	cmp	x1, x0
  419100:	b.cs	419118 <wcrtomb@plt+0x16328>  // b.hs, b.nlast
  419104:	ldr	x1, [sp, #104]
  419108:	ldr	x0, [sp, #224]
  41910c:	add	x0, x1, x0
  419110:	mov	w1, #0x27                  	// #39
  419114:	strb	w1, [x0]
  419118:	ldr	x0, [sp, #224]
  41911c:	add	x0, x0, #0x1
  419120:	str	x0, [sp, #224]
  419124:	ldr	x1, [sp, #224]
  419128:	ldr	x0, [sp, #96]
  41912c:	cmp	x1, x0
  419130:	b.cs	419148 <wcrtomb@plt+0x16358>  // b.hs, b.nlast
  419134:	ldr	x1, [sp, #104]
  419138:	ldr	x0, [sp, #224]
  41913c:	add	x0, x1, x0
  419140:	mov	w1, #0x24                  	// #36
  419144:	strb	w1, [x0]
  419148:	ldr	x0, [sp, #224]
  41914c:	add	x0, x0, #0x1
  419150:	str	x0, [sp, #224]
  419154:	ldr	x1, [sp, #224]
  419158:	ldr	x0, [sp, #96]
  41915c:	cmp	x1, x0
  419160:	b.cs	419178 <wcrtomb@plt+0x16388>  // b.hs, b.nlast
  419164:	ldr	x1, [sp, #104]
  419168:	ldr	x0, [sp, #224]
  41916c:	add	x0, x1, x0
  419170:	mov	w1, #0x27                  	// #39
  419174:	strb	w1, [x0]
  419178:	ldr	x0, [sp, #224]
  41917c:	add	x0, x0, #0x1
  419180:	str	x0, [sp, #224]
  419184:	mov	w0, #0x1                   	// #1
  419188:	strb	w0, [sp, #197]
  41918c:	ldr	x1, [sp, #224]
  419190:	ldr	x0, [sp, #96]
  419194:	cmp	x1, x0
  419198:	b.cs	4191b0 <wcrtomb@plt+0x163c0>  // b.hs, b.nlast
  41919c:	ldr	x1, [sp, #104]
  4191a0:	ldr	x0, [sp, #224]
  4191a4:	add	x0, x1, x0
  4191a8:	mov	w1, #0x5c                  	// #92
  4191ac:	strb	w1, [x0]
  4191b0:	ldr	x0, [sp, #224]
  4191b4:	add	x0, x0, #0x1
  4191b8:	str	x0, [sp, #224]
  4191bc:	ldr	w0, [sp, #76]
  4191c0:	cmp	w0, #0x2
  4191c4:	b.eq	419274 <wcrtomb@plt+0x16484>  // b.none
  4191c8:	ldr	x0, [sp, #232]
  4191cc:	add	x0, x0, #0x1
  4191d0:	ldr	x1, [sp, #80]
  4191d4:	cmp	x1, x0
  4191d8:	b.ls	419274 <wcrtomb@plt+0x16484>  // b.plast
  4191dc:	ldr	x0, [sp, #232]
  4191e0:	add	x0, x0, #0x1
  4191e4:	ldr	x1, [sp, #88]
  4191e8:	add	x0, x1, x0
  4191ec:	ldrb	w0, [x0]
  4191f0:	cmp	w0, #0x2f
  4191f4:	b.ls	419274 <wcrtomb@plt+0x16484>  // b.plast
  4191f8:	ldr	x0, [sp, #232]
  4191fc:	add	x0, x0, #0x1
  419200:	ldr	x1, [sp, #88]
  419204:	add	x0, x1, x0
  419208:	ldrb	w0, [x0]
  41920c:	cmp	w0, #0x39
  419210:	b.hi	419274 <wcrtomb@plt+0x16484>  // b.pmore
  419214:	ldr	x1, [sp, #224]
  419218:	ldr	x0, [sp, #96]
  41921c:	cmp	x1, x0
  419220:	b.cs	419238 <wcrtomb@plt+0x16448>  // b.hs, b.nlast
  419224:	ldr	x1, [sp, #104]
  419228:	ldr	x0, [sp, #224]
  41922c:	add	x0, x1, x0
  419230:	mov	w1, #0x30                  	// #48
  419234:	strb	w1, [x0]
  419238:	ldr	x0, [sp, #224]
  41923c:	add	x0, x0, #0x1
  419240:	str	x0, [sp, #224]
  419244:	ldr	x1, [sp, #224]
  419248:	ldr	x0, [sp, #96]
  41924c:	cmp	x1, x0
  419250:	b.cs	419268 <wcrtomb@plt+0x16478>  // b.hs, b.nlast
  419254:	ldr	x1, [sp, #104]
  419258:	ldr	x0, [sp, #224]
  41925c:	add	x0, x1, x0
  419260:	mov	w1, #0x30                  	// #48
  419264:	strb	w1, [x0]
  419268:	ldr	x0, [sp, #224]
  41926c:	add	x0, x0, #0x1
  419270:	str	x0, [sp, #224]
  419274:	mov	w0, #0x30                  	// #48
  419278:	strb	w0, [sp, #194]
  41927c:	b	419be0 <wcrtomb@plt+0x16df0>
  419280:	ldr	w0, [sp, #72]
  419284:	and	w0, w0, #0x1
  419288:	cmp	w0, #0x0
  41928c:	b.eq	419be0 <wcrtomb@plt+0x16df0>  // b.none
  419290:	b	419e7c <wcrtomb@plt+0x1708c>
  419294:	ldr	w0, [sp, #76]
  419298:	cmp	w0, #0x2
  41929c:	b.eq	4192b0 <wcrtomb@plt+0x164c0>  // b.none
  4192a0:	ldr	w0, [sp, #76]
  4192a4:	cmp	w0, #0x5
  4192a8:	b.eq	4192c0 <wcrtomb@plt+0x164d0>  // b.none
  4192ac:	b	419458 <wcrtomb@plt+0x16668>
  4192b0:	ldrb	w0, [sp, #198]
  4192b4:	cmp	w0, #0x0
  4192b8:	b.eq	41944c <wcrtomb@plt+0x1665c>  // b.none
  4192bc:	b	41a05c <wcrtomb@plt+0x1726c>
  4192c0:	ldr	w0, [sp, #72]
  4192c4:	and	w0, w0, #0x4
  4192c8:	cmp	w0, #0x0
  4192cc:	b.eq	419454 <wcrtomb@plt+0x16664>  // b.none
  4192d0:	ldr	x0, [sp, #232]
  4192d4:	add	x0, x0, #0x2
  4192d8:	ldr	x1, [sp, #80]
  4192dc:	cmp	x1, x0
  4192e0:	b.ls	419454 <wcrtomb@plt+0x16664>  // b.plast
  4192e4:	ldr	x0, [sp, #232]
  4192e8:	add	x0, x0, #0x1
  4192ec:	ldr	x1, [sp, #88]
  4192f0:	add	x0, x1, x0
  4192f4:	ldrb	w0, [x0]
  4192f8:	cmp	w0, #0x3f
  4192fc:	b.ne	419454 <wcrtomb@plt+0x16664>  // b.any
  419300:	ldr	x0, [sp, #232]
  419304:	add	x0, x0, #0x2
  419308:	ldr	x1, [sp, #88]
  41930c:	add	x0, x1, x0
  419310:	ldrb	w0, [x0]
  419314:	cmp	w0, #0x3e
  419318:	cset	w1, hi  // hi = pmore
  41931c:	and	w1, w1, #0xff
  419320:	cmp	w1, #0x0
  419324:	b.ne	419444 <wcrtomb@plt+0x16654>  // b.any
  419328:	mov	x1, #0x1                   	// #1
  41932c:	lsl	x1, x1, x0
  419330:	mov	x0, #0xa38200000000        	// #179778741075968
  419334:	movk	x0, #0x7000, lsl #48
  419338:	and	x0, x1, x0
  41933c:	cmp	x0, #0x0
  419340:	cset	w0, ne  // ne = any
  419344:	and	w0, w0, #0xff
  419348:	cmp	w0, #0x0
  41934c:	b.eq	419444 <wcrtomb@plt+0x16654>  // b.none
  419350:	ldrb	w0, [sp, #198]
  419354:	cmp	w0, #0x0
  419358:	b.ne	41a030 <wcrtomb@plt+0x17240>  // b.any
  41935c:	ldr	x0, [sp, #232]
  419360:	add	x0, x0, #0x2
  419364:	ldr	x1, [sp, #88]
  419368:	add	x0, x1, x0
  41936c:	ldrb	w0, [x0]
  419370:	strb	w0, [sp, #194]
  419374:	ldr	x0, [sp, #232]
  419378:	add	x0, x0, #0x2
  41937c:	str	x0, [sp, #232]
  419380:	ldr	x1, [sp, #224]
  419384:	ldr	x0, [sp, #96]
  419388:	cmp	x1, x0
  41938c:	b.cs	4193a4 <wcrtomb@plt+0x165b4>  // b.hs, b.nlast
  419390:	ldr	x1, [sp, #104]
  419394:	ldr	x0, [sp, #224]
  419398:	add	x0, x1, x0
  41939c:	mov	w1, #0x3f                  	// #63
  4193a0:	strb	w1, [x0]
  4193a4:	ldr	x0, [sp, #224]
  4193a8:	add	x0, x0, #0x1
  4193ac:	str	x0, [sp, #224]
  4193b0:	ldr	x1, [sp, #224]
  4193b4:	ldr	x0, [sp, #96]
  4193b8:	cmp	x1, x0
  4193bc:	b.cs	4193d4 <wcrtomb@plt+0x165e4>  // b.hs, b.nlast
  4193c0:	ldr	x1, [sp, #104]
  4193c4:	ldr	x0, [sp, #224]
  4193c8:	add	x0, x1, x0
  4193cc:	mov	w1, #0x22                  	// #34
  4193d0:	strb	w1, [x0]
  4193d4:	ldr	x0, [sp, #224]
  4193d8:	add	x0, x0, #0x1
  4193dc:	str	x0, [sp, #224]
  4193e0:	ldr	x1, [sp, #224]
  4193e4:	ldr	x0, [sp, #96]
  4193e8:	cmp	x1, x0
  4193ec:	b.cs	419404 <wcrtomb@plt+0x16614>  // b.hs, b.nlast
  4193f0:	ldr	x1, [sp, #104]
  4193f4:	ldr	x0, [sp, #224]
  4193f8:	add	x0, x1, x0
  4193fc:	mov	w1, #0x22                  	// #34
  419400:	strb	w1, [x0]
  419404:	ldr	x0, [sp, #224]
  419408:	add	x0, x0, #0x1
  41940c:	str	x0, [sp, #224]
  419410:	ldr	x1, [sp, #224]
  419414:	ldr	x0, [sp, #96]
  419418:	cmp	x1, x0
  41941c:	b.cs	419434 <wcrtomb@plt+0x16644>  // b.hs, b.nlast
  419420:	ldr	x1, [sp, #104]
  419424:	ldr	x0, [sp, #224]
  419428:	add	x0, x1, x0
  41942c:	mov	w1, #0x3f                  	// #63
  419430:	strb	w1, [x0]
  419434:	ldr	x0, [sp, #224]
  419438:	add	x0, x0, #0x1
  41943c:	str	x0, [sp, #224]
  419440:	b	419448 <wcrtomb@plt+0x16658>
  419444:	nop
  419448:	b	419454 <wcrtomb@plt+0x16664>
  41944c:	nop
  419450:	b	419c0c <wcrtomb@plt+0x16e1c>
  419454:	nop
  419458:	b	419c0c <wcrtomb@plt+0x16e1c>
  41945c:	mov	w0, #0x61                  	// #97
  419460:	strb	w0, [sp, #193]
  419464:	b	419518 <wcrtomb@plt+0x16728>
  419468:	mov	w0, #0x62                  	// #98
  41946c:	strb	w0, [sp, #193]
  419470:	b	419518 <wcrtomb@plt+0x16728>
  419474:	mov	w0, #0x66                  	// #102
  419478:	strb	w0, [sp, #193]
  41947c:	b	419518 <wcrtomb@plt+0x16728>
  419480:	mov	w0, #0x6e                  	// #110
  419484:	strb	w0, [sp, #193]
  419488:	b	4194fc <wcrtomb@plt+0x1670c>
  41948c:	mov	w0, #0x72                  	// #114
  419490:	strb	w0, [sp, #193]
  419494:	b	4194fc <wcrtomb@plt+0x1670c>
  419498:	mov	w0, #0x74                  	// #116
  41949c:	strb	w0, [sp, #193]
  4194a0:	b	4194fc <wcrtomb@plt+0x1670c>
  4194a4:	mov	w0, #0x76                  	// #118
  4194a8:	strb	w0, [sp, #193]
  4194ac:	b	419518 <wcrtomb@plt+0x16728>
  4194b0:	ldrb	w0, [sp, #194]
  4194b4:	strb	w0, [sp, #193]
  4194b8:	ldr	w0, [sp, #76]
  4194bc:	cmp	w0, #0x2
  4194c0:	b.ne	4194d4 <wcrtomb@plt+0x166e4>  // b.any
  4194c4:	ldrb	w0, [sp, #198]
  4194c8:	cmp	w0, #0x0
  4194cc:	b.eq	419d9c <wcrtomb@plt+0x16fac>  // b.none
  4194d0:	b	41a05c <wcrtomb@plt+0x1726c>
  4194d4:	ldrb	w0, [sp, #199]
  4194d8:	cmp	w0, #0x0
  4194dc:	b.eq	4194f8 <wcrtomb@plt+0x16708>  // b.none
  4194e0:	ldrb	w0, [sp, #198]
  4194e4:	cmp	w0, #0x0
  4194e8:	b.eq	4194f8 <wcrtomb@plt+0x16708>  // b.none
  4194ec:	ldr	x0, [sp, #200]
  4194f0:	cmp	x0, #0x0
  4194f4:	b.ne	419da4 <wcrtomb@plt+0x16fb4>  // b.any
  4194f8:	nop
  4194fc:	ldr	w0, [sp, #76]
  419500:	cmp	w0, #0x2
  419504:	b.ne	419514 <wcrtomb@plt+0x16724>  // b.any
  419508:	ldrb	w0, [sp, #198]
  41950c:	cmp	w0, #0x0
  419510:	b.ne	41a038 <wcrtomb@plt+0x17248>  // b.any
  419514:	nop
  419518:	ldrb	w0, [sp, #199]
  41951c:	cmp	w0, #0x0
  419520:	b.eq	419be8 <wcrtomb@plt+0x16df8>  // b.none
  419524:	ldrb	w0, [sp, #193]
  419528:	strb	w0, [sp, #194]
  41952c:	b	419c9c <wcrtomb@plt+0x16eac>
  419530:	ldr	x0, [sp, #80]
  419534:	cmn	x0, #0x1
  419538:	b.ne	419558 <wcrtomb@plt+0x16768>  // b.any
  41953c:	ldr	x0, [sp, #88]
  419540:	add	x0, x0, #0x1
  419544:	ldrb	w0, [x0]
  419548:	cmp	w0, #0x0
  41954c:	cset	w0, ne  // ne = any
  419550:	and	w0, w0, #0xff
  419554:	b	419568 <wcrtomb@plt+0x16778>
  419558:	ldr	x0, [sp, #80]
  41955c:	cmp	x0, #0x1
  419560:	cset	w0, ne  // ne = any
  419564:	and	w0, w0, #0xff
  419568:	cmp	w0, #0x0
  41956c:	b.ne	419bf0 <wcrtomb@plt+0x16e00>  // b.any
  419570:	ldr	x0, [sp, #232]
  419574:	cmp	x0, #0x0
  419578:	b.ne	419bf8 <wcrtomb@plt+0x16e08>  // b.any
  41957c:	mov	w0, #0x1                   	// #1
  419580:	strb	w0, [sp, #190]
  419584:	ldr	w0, [sp, #76]
  419588:	cmp	w0, #0x2
  41958c:	b.ne	419c00 <wcrtomb@plt+0x16e10>  // b.any
  419590:	ldrb	w0, [sp, #198]
  419594:	cmp	w0, #0x0
  419598:	b.eq	419c00 <wcrtomb@plt+0x16e10>  // b.none
  41959c:	b	41a05c <wcrtomb@plt+0x1726c>
  4195a0:	mov	w0, #0x1                   	// #1
  4195a4:	strb	w0, [sp, #196]
  4195a8:	mov	w0, #0x1                   	// #1
  4195ac:	strb	w0, [sp, #190]
  4195b0:	ldr	w0, [sp, #76]
  4195b4:	cmp	w0, #0x2
  4195b8:	b.ne	419c08 <wcrtomb@plt+0x16e18>  // b.any
  4195bc:	ldrb	w0, [sp, #198]
  4195c0:	cmp	w0, #0x0
  4195c4:	b.ne	41a040 <wcrtomb@plt+0x17250>  // b.any
  4195c8:	ldr	x0, [sp, #96]
  4195cc:	cmp	x0, #0x0
  4195d0:	b.eq	4195ec <wcrtomb@plt+0x167fc>  // b.none
  4195d4:	ldr	x0, [sp, #216]
  4195d8:	cmp	x0, #0x0
  4195dc:	b.ne	4195ec <wcrtomb@plt+0x167fc>  // b.any
  4195e0:	ldr	x0, [sp, #96]
  4195e4:	str	x0, [sp, #216]
  4195e8:	str	xzr, [sp, #96]
  4195ec:	ldr	x1, [sp, #224]
  4195f0:	ldr	x0, [sp, #96]
  4195f4:	cmp	x1, x0
  4195f8:	b.cs	419610 <wcrtomb@plt+0x16820>  // b.hs, b.nlast
  4195fc:	ldr	x1, [sp, #104]
  419600:	ldr	x0, [sp, #224]
  419604:	add	x0, x1, x0
  419608:	mov	w1, #0x27                  	// #39
  41960c:	strb	w1, [x0]
  419610:	ldr	x0, [sp, #224]
  419614:	add	x0, x0, #0x1
  419618:	str	x0, [sp, #224]
  41961c:	ldr	x1, [sp, #224]
  419620:	ldr	x0, [sp, #96]
  419624:	cmp	x1, x0
  419628:	b.cs	419640 <wcrtomb@plt+0x16850>  // b.hs, b.nlast
  41962c:	ldr	x1, [sp, #104]
  419630:	ldr	x0, [sp, #224]
  419634:	add	x0, x1, x0
  419638:	mov	w1, #0x5c                  	// #92
  41963c:	strb	w1, [x0]
  419640:	ldr	x0, [sp, #224]
  419644:	add	x0, x0, #0x1
  419648:	str	x0, [sp, #224]
  41964c:	ldr	x1, [sp, #224]
  419650:	ldr	x0, [sp, #96]
  419654:	cmp	x1, x0
  419658:	b.cs	419670 <wcrtomb@plt+0x16880>  // b.hs, b.nlast
  41965c:	ldr	x1, [sp, #104]
  419660:	ldr	x0, [sp, #224]
  419664:	add	x0, x1, x0
  419668:	mov	w1, #0x27                  	// #39
  41966c:	strb	w1, [x0]
  419670:	ldr	x0, [sp, #224]
  419674:	add	x0, x0, #0x1
  419678:	str	x0, [sp, #224]
  41967c:	strb	wzr, [sp, #197]
  419680:	b	419c08 <wcrtomb@plt+0x16e18>
  419684:	mov	w0, #0x1                   	// #1
  419688:	strb	w0, [sp, #190]
  41968c:	b	419c0c <wcrtomb@plt+0x16e1c>
  419690:	ldrb	w0, [sp, #159]
  419694:	cmp	w0, #0x0
  419698:	b.eq	4196d0 <wcrtomb@plt+0x168e0>  // b.none
  41969c:	mov	x0, #0x1                   	// #1
  4196a0:	str	x0, [sp, #176]
  4196a4:	bl	402b40 <__ctype_b_loc@plt>
  4196a8:	ldr	x1, [x0]
  4196ac:	ldrb	w0, [sp, #194]
  4196b0:	lsl	x0, x0, #1
  4196b4:	add	x0, x1, x0
  4196b8:	ldrh	w0, [x0]
  4196bc:	and	w0, w0, #0x4000
  4196c0:	cmp	w0, #0x0
  4196c4:	cset	w0, ne  // ne = any
  4196c8:	strb	w0, [sp, #175]
  4196cc:	b	4198ac <wcrtomb@plt+0x16abc>
  4196d0:	add	x0, sp, #0x80
  4196d4:	mov	x2, #0x8                   	// #8
  4196d8:	mov	w1, #0x0                   	// #0
  4196dc:	bl	402980 <memset@plt>
  4196e0:	str	xzr, [sp, #176]
  4196e4:	mov	w0, #0x1                   	// #1
  4196e8:	strb	w0, [sp, #175]
  4196ec:	ldr	x0, [sp, #80]
  4196f0:	cmn	x0, #0x1
  4196f4:	b.ne	419704 <wcrtomb@plt+0x16914>  // b.any
  4196f8:	ldr	x0, [sp, #88]
  4196fc:	bl	402720 <strlen@plt>
  419700:	str	x0, [sp, #80]
  419704:	ldr	x1, [sp, #232]
  419708:	ldr	x0, [sp, #176]
  41970c:	add	x0, x1, x0
  419710:	ldr	x1, [sp, #88]
  419714:	add	x4, x1, x0
  419718:	ldr	x1, [sp, #232]
  41971c:	ldr	x0, [sp, #176]
  419720:	add	x0, x1, x0
  419724:	ldr	x1, [sp, #80]
  419728:	sub	x1, x1, x0
  41972c:	add	x2, sp, #0x80
  419730:	add	x0, sp, #0x7c
  419734:	mov	x3, x2
  419738:	mov	x2, x1
  41973c:	mov	x1, x4
  419740:	bl	41bae8 <wcrtomb@plt+0x18cf8>
  419744:	str	x0, [sp, #144]
  419748:	ldr	x0, [sp, #144]
  41974c:	cmp	x0, #0x0
  419750:	b.eq	4198a0 <wcrtomb@plt+0x16ab0>  // b.none
  419754:	ldr	x0, [sp, #144]
  419758:	cmn	x0, #0x1
  41975c:	b.ne	419768 <wcrtomb@plt+0x16978>  // b.any
  419760:	strb	wzr, [sp, #175]
  419764:	b	4198ac <wcrtomb@plt+0x16abc>
  419768:	ldr	x0, [sp, #144]
  41976c:	cmn	x0, #0x2
  419770:	b.ne	4197c4 <wcrtomb@plt+0x169d4>  // b.any
  419774:	strb	wzr, [sp, #175]
  419778:	b	419788 <wcrtomb@plt+0x16998>
  41977c:	ldr	x0, [sp, #176]
  419780:	add	x0, x0, #0x1
  419784:	str	x0, [sp, #176]
  419788:	ldr	x1, [sp, #232]
  41978c:	ldr	x0, [sp, #176]
  419790:	add	x0, x1, x0
  419794:	ldr	x1, [sp, #80]
  419798:	cmp	x1, x0
  41979c:	b.ls	4198a8 <wcrtomb@plt+0x16ab8>  // b.plast
  4197a0:	ldr	x1, [sp, #232]
  4197a4:	ldr	x0, [sp, #176]
  4197a8:	add	x0, x1, x0
  4197ac:	ldr	x1, [sp, #88]
  4197b0:	add	x0, x1, x0
  4197b4:	ldrb	w0, [x0]
  4197b8:	cmp	w0, #0x0
  4197bc:	b.ne	41977c <wcrtomb@plt+0x1698c>  // b.any
  4197c0:	b	4198a8 <wcrtomb@plt+0x16ab8>
  4197c4:	ldrb	w0, [sp, #198]
  4197c8:	cmp	w0, #0x0
  4197cc:	b.eq	419868 <wcrtomb@plt+0x16a78>  // b.none
  4197d0:	ldr	w0, [sp, #76]
  4197d4:	cmp	w0, #0x2
  4197d8:	b.ne	419868 <wcrtomb@plt+0x16a78>  // b.any
  4197dc:	mov	x0, #0x1                   	// #1
  4197e0:	str	x0, [sp, #160]
  4197e4:	b	419858 <wcrtomb@plt+0x16a68>
  4197e8:	ldr	x1, [sp, #232]
  4197ec:	ldr	x0, [sp, #176]
  4197f0:	add	x1, x1, x0
  4197f4:	ldr	x0, [sp, #160]
  4197f8:	add	x0, x1, x0
  4197fc:	ldr	x1, [sp, #88]
  419800:	add	x0, x1, x0
  419804:	ldrb	w0, [x0]
  419808:	sub	w0, w0, #0x5b
  41980c:	cmp	w0, #0x21
  419810:	cset	w1, hi  // hi = pmore
  419814:	and	w1, w1, #0xff
  419818:	cmp	w1, #0x0
  41981c:	b.ne	419848 <wcrtomb@plt+0x16a58>  // b.any
  419820:	mov	x1, #0x1                   	// #1
  419824:	lsl	x1, x1, x0
  419828:	mov	x0, #0x2b                  	// #43
  41982c:	movk	x0, #0x2, lsl #32
  419830:	and	x0, x1, x0
  419834:	cmp	x0, #0x0
  419838:	cset	w0, ne  // ne = any
  41983c:	and	w0, w0, #0xff
  419840:	cmp	w0, #0x0
  419844:	b.ne	41a05c <wcrtomb@plt+0x1726c>  // b.any
  419848:	nop
  41984c:	ldr	x0, [sp, #160]
  419850:	add	x0, x0, #0x1
  419854:	str	x0, [sp, #160]
  419858:	ldr	x1, [sp, #160]
  41985c:	ldr	x0, [sp, #144]
  419860:	cmp	x1, x0
  419864:	b.cc	4197e8 <wcrtomb@plt+0x169f8>  // b.lo, b.ul, b.last
  419868:	ldr	w0, [sp, #124]
  41986c:	bl	402cf0 <iswprint@plt>
  419870:	cmp	w0, #0x0
  419874:	b.ne	41987c <wcrtomb@plt+0x16a8c>  // b.any
  419878:	strb	wzr, [sp, #175]
  41987c:	ldr	x1, [sp, #176]
  419880:	ldr	x0, [sp, #144]
  419884:	add	x0, x1, x0
  419888:	str	x0, [sp, #176]
  41988c:	add	x0, sp, #0x80
  419890:	bl	402ac0 <mbsinit@plt>
  419894:	cmp	w0, #0x0
  419898:	b.eq	419704 <wcrtomb@plt+0x16914>  // b.none
  41989c:	b	4198ac <wcrtomb@plt+0x16abc>
  4198a0:	nop
  4198a4:	b	4198ac <wcrtomb@plt+0x16abc>
  4198a8:	nop
  4198ac:	ldrb	w0, [sp, #175]
  4198b0:	strb	w0, [sp, #190]
  4198b4:	ldr	x0, [sp, #176]
  4198b8:	cmp	x0, #0x1
  4198bc:	b.hi	4198e0 <wcrtomb@plt+0x16af0>  // b.pmore
  4198c0:	ldrb	w0, [sp, #199]
  4198c4:	cmp	w0, #0x0
  4198c8:	b.eq	419c0c <wcrtomb@plt+0x16e1c>  // b.none
  4198cc:	ldrb	w0, [sp, #175]
  4198d0:	eor	w0, w0, #0x1
  4198d4:	and	w0, w0, #0xff
  4198d8:	cmp	w0, #0x0
  4198dc:	b.eq	419c0c <wcrtomb@plt+0x16e1c>  // b.none
  4198e0:	ldr	x1, [sp, #232]
  4198e4:	ldr	x0, [sp, #176]
  4198e8:	add	x0, x1, x0
  4198ec:	str	x0, [sp, #136]
  4198f0:	ldrb	w0, [sp, #199]
  4198f4:	cmp	w0, #0x0
  4198f8:	b.eq	419aac <wcrtomb@plt+0x16cbc>  // b.none
  4198fc:	ldrb	w0, [sp, #175]
  419900:	eor	w0, w0, #0x1
  419904:	and	w0, w0, #0xff
  419908:	cmp	w0, #0x0
  41990c:	b.eq	419aac <wcrtomb@plt+0x16cbc>  // b.none
  419910:	ldrb	w0, [sp, #198]
  419914:	cmp	w0, #0x0
  419918:	b.ne	41a048 <wcrtomb@plt+0x17258>  // b.any
  41991c:	mov	w0, #0x1                   	// #1
  419920:	strb	w0, [sp, #191]
  419924:	ldr	w0, [sp, #76]
  419928:	cmp	w0, #0x2
  41992c:	b.ne	4199dc <wcrtomb@plt+0x16bec>  // b.any
  419930:	ldrb	w0, [sp, #197]
  419934:	eor	w0, w0, #0x1
  419938:	and	w0, w0, #0xff
  41993c:	cmp	w0, #0x0
  419940:	b.eq	4199dc <wcrtomb@plt+0x16bec>  // b.none
  419944:	ldr	x1, [sp, #224]
  419948:	ldr	x0, [sp, #96]
  41994c:	cmp	x1, x0
  419950:	b.cs	419968 <wcrtomb@plt+0x16b78>  // b.hs, b.nlast
  419954:	ldr	x1, [sp, #104]
  419958:	ldr	x0, [sp, #224]
  41995c:	add	x0, x1, x0
  419960:	mov	w1, #0x27                  	// #39
  419964:	strb	w1, [x0]
  419968:	ldr	x0, [sp, #224]
  41996c:	add	x0, x0, #0x1
  419970:	str	x0, [sp, #224]
  419974:	ldr	x1, [sp, #224]
  419978:	ldr	x0, [sp, #96]
  41997c:	cmp	x1, x0
  419980:	b.cs	419998 <wcrtomb@plt+0x16ba8>  // b.hs, b.nlast
  419984:	ldr	x1, [sp, #104]
  419988:	ldr	x0, [sp, #224]
  41998c:	add	x0, x1, x0
  419990:	mov	w1, #0x24                  	// #36
  419994:	strb	w1, [x0]
  419998:	ldr	x0, [sp, #224]
  41999c:	add	x0, x0, #0x1
  4199a0:	str	x0, [sp, #224]
  4199a4:	ldr	x1, [sp, #224]
  4199a8:	ldr	x0, [sp, #96]
  4199ac:	cmp	x1, x0
  4199b0:	b.cs	4199c8 <wcrtomb@plt+0x16bd8>  // b.hs, b.nlast
  4199b4:	ldr	x1, [sp, #104]
  4199b8:	ldr	x0, [sp, #224]
  4199bc:	add	x0, x1, x0
  4199c0:	mov	w1, #0x27                  	// #39
  4199c4:	strb	w1, [x0]
  4199c8:	ldr	x0, [sp, #224]
  4199cc:	add	x0, x0, #0x1
  4199d0:	str	x0, [sp, #224]
  4199d4:	mov	w0, #0x1                   	// #1
  4199d8:	strb	w0, [sp, #197]
  4199dc:	ldr	x1, [sp, #224]
  4199e0:	ldr	x0, [sp, #96]
  4199e4:	cmp	x1, x0
  4199e8:	b.cs	419a00 <wcrtomb@plt+0x16c10>  // b.hs, b.nlast
  4199ec:	ldr	x1, [sp, #104]
  4199f0:	ldr	x0, [sp, #224]
  4199f4:	add	x0, x1, x0
  4199f8:	mov	w1, #0x5c                  	// #92
  4199fc:	strb	w1, [x0]
  419a00:	ldr	x0, [sp, #224]
  419a04:	add	x0, x0, #0x1
  419a08:	str	x0, [sp, #224]
  419a0c:	ldr	x1, [sp, #224]
  419a10:	ldr	x0, [sp, #96]
  419a14:	cmp	x1, x0
  419a18:	b.cs	419a40 <wcrtomb@plt+0x16c50>  // b.hs, b.nlast
  419a1c:	ldrb	w0, [sp, #194]
  419a20:	lsr	w0, w0, #6
  419a24:	and	w1, w0, #0xff
  419a28:	ldr	x2, [sp, #104]
  419a2c:	ldr	x0, [sp, #224]
  419a30:	add	x0, x2, x0
  419a34:	add	w1, w1, #0x30
  419a38:	and	w1, w1, #0xff
  419a3c:	strb	w1, [x0]
  419a40:	ldr	x0, [sp, #224]
  419a44:	add	x0, x0, #0x1
  419a48:	str	x0, [sp, #224]
  419a4c:	ldr	x1, [sp, #224]
  419a50:	ldr	x0, [sp, #96]
  419a54:	cmp	x1, x0
  419a58:	b.cs	419a88 <wcrtomb@plt+0x16c98>  // b.hs, b.nlast
  419a5c:	ldrb	w0, [sp, #194]
  419a60:	lsr	w0, w0, #3
  419a64:	and	w0, w0, #0xff
  419a68:	and	w0, w0, #0x7
  419a6c:	and	w1, w0, #0xff
  419a70:	ldr	x2, [sp, #104]
  419a74:	ldr	x0, [sp, #224]
  419a78:	add	x0, x2, x0
  419a7c:	add	w1, w1, #0x30
  419a80:	and	w1, w1, #0xff
  419a84:	strb	w1, [x0]
  419a88:	ldr	x0, [sp, #224]
  419a8c:	add	x0, x0, #0x1
  419a90:	str	x0, [sp, #224]
  419a94:	ldrb	w0, [sp, #194]
  419a98:	and	w0, w0, #0x7
  419a9c:	and	w0, w0, #0xff
  419aa0:	add	w0, w0, #0x30
  419aa4:	strb	w0, [sp, #194]
  419aa8:	b	419aec <wcrtomb@plt+0x16cfc>
  419aac:	ldrb	w0, [sp, #192]
  419ab0:	cmp	w0, #0x0
  419ab4:	b.eq	419aec <wcrtomb@plt+0x16cfc>  // b.none
  419ab8:	ldr	x1, [sp, #224]
  419abc:	ldr	x0, [sp, #96]
  419ac0:	cmp	x1, x0
  419ac4:	b.cs	419adc <wcrtomb@plt+0x16cec>  // b.hs, b.nlast
  419ac8:	ldr	x1, [sp, #104]
  419acc:	ldr	x0, [sp, #224]
  419ad0:	add	x0, x1, x0
  419ad4:	mov	w1, #0x5c                  	// #92
  419ad8:	strb	w1, [x0]
  419adc:	ldr	x0, [sp, #224]
  419ae0:	add	x0, x0, #0x1
  419ae4:	str	x0, [sp, #224]
  419ae8:	strb	wzr, [sp, #192]
  419aec:	ldr	x0, [sp, #232]
  419af0:	add	x0, x0, #0x1
  419af4:	ldr	x1, [sp, #136]
  419af8:	cmp	x1, x0
  419afc:	b.ls	419bd8 <wcrtomb@plt+0x16de8>  // b.plast
  419b00:	ldrb	w0, [sp, #197]
  419b04:	cmp	w0, #0x0
  419b08:	b.eq	419b84 <wcrtomb@plt+0x16d94>  // b.none
  419b0c:	ldrb	w0, [sp, #191]
  419b10:	eor	w0, w0, #0x1
  419b14:	and	w0, w0, #0xff
  419b18:	cmp	w0, #0x0
  419b1c:	b.eq	419b84 <wcrtomb@plt+0x16d94>  // b.none
  419b20:	ldr	x1, [sp, #224]
  419b24:	ldr	x0, [sp, #96]
  419b28:	cmp	x1, x0
  419b2c:	b.cs	419b44 <wcrtomb@plt+0x16d54>  // b.hs, b.nlast
  419b30:	ldr	x1, [sp, #104]
  419b34:	ldr	x0, [sp, #224]
  419b38:	add	x0, x1, x0
  419b3c:	mov	w1, #0x27                  	// #39
  419b40:	strb	w1, [x0]
  419b44:	ldr	x0, [sp, #224]
  419b48:	add	x0, x0, #0x1
  419b4c:	str	x0, [sp, #224]
  419b50:	ldr	x1, [sp, #224]
  419b54:	ldr	x0, [sp, #96]
  419b58:	cmp	x1, x0
  419b5c:	b.cs	419b74 <wcrtomb@plt+0x16d84>  // b.hs, b.nlast
  419b60:	ldr	x1, [sp, #104]
  419b64:	ldr	x0, [sp, #224]
  419b68:	add	x0, x1, x0
  419b6c:	mov	w1, #0x27                  	// #39
  419b70:	strb	w1, [x0]
  419b74:	ldr	x0, [sp, #224]
  419b78:	add	x0, x0, #0x1
  419b7c:	str	x0, [sp, #224]
  419b80:	strb	wzr, [sp, #197]
  419b84:	ldr	x1, [sp, #224]
  419b88:	ldr	x0, [sp, #96]
  419b8c:	cmp	x1, x0
  419b90:	b.cs	419ba8 <wcrtomb@plt+0x16db8>  // b.hs, b.nlast
  419b94:	ldr	x1, [sp, #104]
  419b98:	ldr	x0, [sp, #224]
  419b9c:	add	x0, x1, x0
  419ba0:	ldrb	w1, [sp, #194]
  419ba4:	strb	w1, [x0]
  419ba8:	ldr	x0, [sp, #224]
  419bac:	add	x0, x0, #0x1
  419bb0:	str	x0, [sp, #224]
  419bb4:	ldr	x0, [sp, #232]
  419bb8:	add	x0, x0, #0x1
  419bbc:	str	x0, [sp, #232]
  419bc0:	ldr	x1, [sp, #88]
  419bc4:	ldr	x0, [sp, #232]
  419bc8:	add	x0, x1, x0
  419bcc:	ldrb	w0, [x0]
  419bd0:	strb	w0, [sp, #194]
  419bd4:	b	4198f0 <wcrtomb@plt+0x16b00>
  419bd8:	nop
  419bdc:	b	419db0 <wcrtomb@plt+0x16fc0>
  419be0:	nop
  419be4:	b	419c0c <wcrtomb@plt+0x16e1c>
  419be8:	nop
  419bec:	b	419c0c <wcrtomb@plt+0x16e1c>
  419bf0:	nop
  419bf4:	b	419c0c <wcrtomb@plt+0x16e1c>
  419bf8:	nop
  419bfc:	b	419c0c <wcrtomb@plt+0x16e1c>
  419c00:	nop
  419c04:	b	419c0c <wcrtomb@plt+0x16e1c>
  419c08:	nop
  419c0c:	ldrb	w0, [sp, #199]
  419c10:	eor	w0, w0, #0x1
  419c14:	and	w0, w0, #0xff
  419c18:	cmp	w0, #0x0
  419c1c:	b.ne	419c2c <wcrtomb@plt+0x16e3c>  // b.any
  419c20:	ldr	w0, [sp, #76]
  419c24:	cmp	w0, #0x2
  419c28:	b.ne	419c40 <wcrtomb@plt+0x16e50>  // b.any
  419c2c:	ldrb	w0, [sp, #198]
  419c30:	eor	w0, w0, #0x1
  419c34:	and	w0, w0, #0xff
  419c38:	cmp	w0, #0x0
  419c3c:	b.ne	419c84 <wcrtomb@plt+0x16e94>  // b.any
  419c40:	ldr	x0, [sp, #64]
  419c44:	cmp	x0, #0x0
  419c48:	b.eq	419c84 <wcrtomb@plt+0x16e94>  // b.none
  419c4c:	ldrb	w0, [sp, #194]
  419c50:	lsr	w0, w0, #5
  419c54:	and	w0, w0, #0xff
  419c58:	and	x0, x0, #0xff
  419c5c:	lsl	x0, x0, #2
  419c60:	ldr	x1, [sp, #64]
  419c64:	add	x0, x1, x0
  419c68:	ldr	w1, [x0]
  419c6c:	ldrb	w0, [sp, #194]
  419c70:	and	w0, w0, #0x1f
  419c74:	lsr	w0, w1, w0
  419c78:	and	w0, w0, #0x1
  419c7c:	cmp	w0, #0x0
  419c80:	b.ne	419c98 <wcrtomb@plt+0x16ea8>  // b.any
  419c84:	ldrb	w0, [sp, #192]
  419c88:	eor	w0, w0, #0x1
  419c8c:	and	w0, w0, #0xff
  419c90:	cmp	w0, #0x0
  419c94:	b.ne	419dac <wcrtomb@plt+0x16fbc>  // b.any
  419c98:	nop
  419c9c:	ldrb	w0, [sp, #198]
  419ca0:	cmp	w0, #0x0
  419ca4:	b.ne	41a050 <wcrtomb@plt+0x17260>  // b.any
  419ca8:	mov	w0, #0x1                   	// #1
  419cac:	strb	w0, [sp, #191]
  419cb0:	ldr	w0, [sp, #76]
  419cb4:	cmp	w0, #0x2
  419cb8:	b.ne	419d68 <wcrtomb@plt+0x16f78>  // b.any
  419cbc:	ldrb	w0, [sp, #197]
  419cc0:	eor	w0, w0, #0x1
  419cc4:	and	w0, w0, #0xff
  419cc8:	cmp	w0, #0x0
  419ccc:	b.eq	419d68 <wcrtomb@plt+0x16f78>  // b.none
  419cd0:	ldr	x1, [sp, #224]
  419cd4:	ldr	x0, [sp, #96]
  419cd8:	cmp	x1, x0
  419cdc:	b.cs	419cf4 <wcrtomb@plt+0x16f04>  // b.hs, b.nlast
  419ce0:	ldr	x1, [sp, #104]
  419ce4:	ldr	x0, [sp, #224]
  419ce8:	add	x0, x1, x0
  419cec:	mov	w1, #0x27                  	// #39
  419cf0:	strb	w1, [x0]
  419cf4:	ldr	x0, [sp, #224]
  419cf8:	add	x0, x0, #0x1
  419cfc:	str	x0, [sp, #224]
  419d00:	ldr	x1, [sp, #224]
  419d04:	ldr	x0, [sp, #96]
  419d08:	cmp	x1, x0
  419d0c:	b.cs	419d24 <wcrtomb@plt+0x16f34>  // b.hs, b.nlast
  419d10:	ldr	x1, [sp, #104]
  419d14:	ldr	x0, [sp, #224]
  419d18:	add	x0, x1, x0
  419d1c:	mov	w1, #0x24                  	// #36
  419d20:	strb	w1, [x0]
  419d24:	ldr	x0, [sp, #224]
  419d28:	add	x0, x0, #0x1
  419d2c:	str	x0, [sp, #224]
  419d30:	ldr	x1, [sp, #224]
  419d34:	ldr	x0, [sp, #96]
  419d38:	cmp	x1, x0
  419d3c:	b.cs	419d54 <wcrtomb@plt+0x16f64>  // b.hs, b.nlast
  419d40:	ldr	x1, [sp, #104]
  419d44:	ldr	x0, [sp, #224]
  419d48:	add	x0, x1, x0
  419d4c:	mov	w1, #0x27                  	// #39
  419d50:	strb	w1, [x0]
  419d54:	ldr	x0, [sp, #224]
  419d58:	add	x0, x0, #0x1
  419d5c:	str	x0, [sp, #224]
  419d60:	mov	w0, #0x1                   	// #1
  419d64:	strb	w0, [sp, #197]
  419d68:	ldr	x1, [sp, #224]
  419d6c:	ldr	x0, [sp, #96]
  419d70:	cmp	x1, x0
  419d74:	b.cs	419d8c <wcrtomb@plt+0x16f9c>  // b.hs, b.nlast
  419d78:	ldr	x1, [sp, #104]
  419d7c:	ldr	x0, [sp, #224]
  419d80:	add	x0, x1, x0
  419d84:	mov	w1, #0x5c                  	// #92
  419d88:	strb	w1, [x0]
  419d8c:	ldr	x0, [sp, #224]
  419d90:	add	x0, x0, #0x1
  419d94:	str	x0, [sp, #224]
  419d98:	b	419db0 <wcrtomb@plt+0x16fc0>
  419d9c:	nop
  419da0:	b	419db0 <wcrtomb@plt+0x16fc0>
  419da4:	nop
  419da8:	b	419db0 <wcrtomb@plt+0x16fc0>
  419dac:	nop
  419db0:	ldrb	w0, [sp, #197]
  419db4:	cmp	w0, #0x0
  419db8:	b.eq	419e34 <wcrtomb@plt+0x17044>  // b.none
  419dbc:	ldrb	w0, [sp, #191]
  419dc0:	eor	w0, w0, #0x1
  419dc4:	and	w0, w0, #0xff
  419dc8:	cmp	w0, #0x0
  419dcc:	b.eq	419e34 <wcrtomb@plt+0x17044>  // b.none
  419dd0:	ldr	x1, [sp, #224]
  419dd4:	ldr	x0, [sp, #96]
  419dd8:	cmp	x1, x0
  419ddc:	b.cs	419df4 <wcrtomb@plt+0x17004>  // b.hs, b.nlast
  419de0:	ldr	x1, [sp, #104]
  419de4:	ldr	x0, [sp, #224]
  419de8:	add	x0, x1, x0
  419dec:	mov	w1, #0x27                  	// #39
  419df0:	strb	w1, [x0]
  419df4:	ldr	x0, [sp, #224]
  419df8:	add	x0, x0, #0x1
  419dfc:	str	x0, [sp, #224]
  419e00:	ldr	x1, [sp, #224]
  419e04:	ldr	x0, [sp, #96]
  419e08:	cmp	x1, x0
  419e0c:	b.cs	419e24 <wcrtomb@plt+0x17034>  // b.hs, b.nlast
  419e10:	ldr	x1, [sp, #104]
  419e14:	ldr	x0, [sp, #224]
  419e18:	add	x0, x1, x0
  419e1c:	mov	w1, #0x27                  	// #39
  419e20:	strb	w1, [x0]
  419e24:	ldr	x0, [sp, #224]
  419e28:	add	x0, x0, #0x1
  419e2c:	str	x0, [sp, #224]
  419e30:	strb	wzr, [sp, #197]
  419e34:	ldr	x1, [sp, #224]
  419e38:	ldr	x0, [sp, #96]
  419e3c:	cmp	x1, x0
  419e40:	b.cs	419e58 <wcrtomb@plt+0x17068>  // b.hs, b.nlast
  419e44:	ldr	x1, [sp, #104]
  419e48:	ldr	x0, [sp, #224]
  419e4c:	add	x0, x1, x0
  419e50:	ldrb	w1, [sp, #194]
  419e54:	strb	w1, [x0]
  419e58:	ldr	x0, [sp, #224]
  419e5c:	add	x0, x0, #0x1
  419e60:	str	x0, [sp, #224]
  419e64:	ldrb	w0, [sp, #190]
  419e68:	eor	w0, w0, #0x1
  419e6c:	and	w0, w0, #0xff
  419e70:	cmp	w0, #0x0
  419e74:	b.eq	419e7c <wcrtomb@plt+0x1708c>  // b.none
  419e78:	strb	wzr, [sp, #195]
  419e7c:	ldr	x0, [sp, #232]
  419e80:	add	x0, x0, #0x1
  419e84:	str	x0, [sp, #232]
  419e88:	ldr	x0, [sp, #80]
  419e8c:	cmn	x0, #0x1
  419e90:	b.ne	419eb4 <wcrtomb@plt+0x170c4>  // b.any
  419e94:	ldr	x1, [sp, #88]
  419e98:	ldr	x0, [sp, #232]
  419e9c:	add	x0, x1, x0
  419ea0:	ldrb	w0, [x0]
  419ea4:	cmp	w0, #0x0
  419ea8:	cset	w0, ne  // ne = any
  419eac:	and	w0, w0, #0xff
  419eb0:	b	419ec8 <wcrtomb@plt+0x170d8>
  419eb4:	ldr	x1, [sp, #232]
  419eb8:	ldr	x0, [sp, #80]
  419ebc:	cmp	x1, x0
  419ec0:	cset	w0, ne  // ne = any
  419ec4:	and	w0, w0, #0xff
  419ec8:	cmp	w0, #0x0
  419ecc:	b.ne	418fd4 <wcrtomb@plt+0x161e4>  // b.any
  419ed0:	ldr	x0, [sp, #224]
  419ed4:	cmp	x0, #0x0
  419ed8:	b.ne	419ef4 <wcrtomb@plt+0x17104>  // b.any
  419edc:	ldr	w0, [sp, #76]
  419ee0:	cmp	w0, #0x2
  419ee4:	b.ne	419ef4 <wcrtomb@plt+0x17104>  // b.any
  419ee8:	ldrb	w0, [sp, #198]
  419eec:	cmp	w0, #0x0
  419ef0:	b.ne	41a058 <wcrtomb@plt+0x17268>  // b.any
  419ef4:	ldr	w0, [sp, #76]
  419ef8:	cmp	w0, #0x2
  419efc:	b.ne	419f84 <wcrtomb@plt+0x17194>  // b.any
  419f00:	ldrb	w0, [sp, #198]
  419f04:	eor	w0, w0, #0x1
  419f08:	and	w0, w0, #0xff
  419f0c:	cmp	w0, #0x0
  419f10:	b.eq	419f84 <wcrtomb@plt+0x17194>  // b.none
  419f14:	ldrb	w0, [sp, #196]
  419f18:	cmp	w0, #0x0
  419f1c:	b.eq	419f84 <wcrtomb@plt+0x17194>  // b.none
  419f20:	ldrb	w0, [sp, #195]
  419f24:	cmp	w0, #0x0
  419f28:	b.eq	419f5c <wcrtomb@plt+0x1716c>  // b.none
  419f2c:	ldr	x0, [sp, #240]
  419f30:	str	x0, [sp]
  419f34:	ldr	x7, [sp, #56]
  419f38:	ldr	x6, [sp, #64]
  419f3c:	ldr	w5, [sp, #72]
  419f40:	mov	w4, #0x5                   	// #5
  419f44:	ldr	x3, [sp, #80]
  419f48:	ldr	x2, [sp, #88]
  419f4c:	ldr	x1, [sp, #216]
  419f50:	ldr	x0, [sp, #104]
  419f54:	bl	418cac <wcrtomb@plt+0x15ebc>
  419f58:	b	41a0b0 <wcrtomb@plt+0x172c0>
  419f5c:	ldr	x0, [sp, #96]
  419f60:	cmp	x0, #0x0
  419f64:	b.ne	419f84 <wcrtomb@plt+0x17194>  // b.any
  419f68:	ldr	x0, [sp, #216]
  419f6c:	cmp	x0, #0x0
  419f70:	b.eq	419f84 <wcrtomb@plt+0x17194>  // b.none
  419f74:	ldr	x0, [sp, #216]
  419f78:	str	x0, [sp, #96]
  419f7c:	str	xzr, [sp, #224]
  419f80:	b	418d24 <wcrtomb@plt+0x15f34>
  419f84:	ldr	x0, [sp, #208]
  419f88:	cmp	x0, #0x0
  419f8c:	b.eq	419ff8 <wcrtomb@plt+0x17208>  // b.none
  419f90:	ldrb	w0, [sp, #198]
  419f94:	eor	w0, w0, #0x1
  419f98:	and	w0, w0, #0xff
  419f9c:	cmp	w0, #0x0
  419fa0:	b.eq	419ff8 <wcrtomb@plt+0x17208>  // b.none
  419fa4:	b	419fe8 <wcrtomb@plt+0x171f8>
  419fa8:	ldr	x1, [sp, #224]
  419fac:	ldr	x0, [sp, #96]
  419fb0:	cmp	x1, x0
  419fb4:	b.cs	419fd0 <wcrtomb@plt+0x171e0>  // b.hs, b.nlast
  419fb8:	ldr	x1, [sp, #104]
  419fbc:	ldr	x0, [sp, #224]
  419fc0:	add	x0, x1, x0
  419fc4:	ldr	x1, [sp, #208]
  419fc8:	ldrb	w1, [x1]
  419fcc:	strb	w1, [x0]
  419fd0:	ldr	x0, [sp, #224]
  419fd4:	add	x0, x0, #0x1
  419fd8:	str	x0, [sp, #224]
  419fdc:	ldr	x0, [sp, #208]
  419fe0:	add	x0, x0, #0x1
  419fe4:	str	x0, [sp, #208]
  419fe8:	ldr	x0, [sp, #208]
  419fec:	ldrb	w0, [x0]
  419ff0:	cmp	w0, #0x0
  419ff4:	b.ne	419fa8 <wcrtomb@plt+0x171b8>  // b.any
  419ff8:	ldr	x1, [sp, #224]
  419ffc:	ldr	x0, [sp, #96]
  41a000:	cmp	x1, x0
  41a004:	b.cs	41a018 <wcrtomb@plt+0x17228>  // b.hs, b.nlast
  41a008:	ldr	x1, [sp, #104]
  41a00c:	ldr	x0, [sp, #224]
  41a010:	add	x0, x1, x0
  41a014:	strb	wzr, [x0]
  41a018:	ldr	x0, [sp, #224]
  41a01c:	b	41a0b0 <wcrtomb@plt+0x172c0>
  41a020:	nop
  41a024:	b	41a05c <wcrtomb@plt+0x1726c>
  41a028:	nop
  41a02c:	b	41a05c <wcrtomb@plt+0x1726c>
  41a030:	nop
  41a034:	b	41a05c <wcrtomb@plt+0x1726c>
  41a038:	nop
  41a03c:	b	41a05c <wcrtomb@plt+0x1726c>
  41a040:	nop
  41a044:	b	41a05c <wcrtomb@plt+0x1726c>
  41a048:	nop
  41a04c:	b	41a05c <wcrtomb@plt+0x1726c>
  41a050:	nop
  41a054:	b	41a05c <wcrtomb@plt+0x1726c>
  41a058:	nop
  41a05c:	ldr	w0, [sp, #76]
  41a060:	cmp	w0, #0x2
  41a064:	b.ne	41a07c <wcrtomb@plt+0x1728c>  // b.any
  41a068:	ldrb	w0, [sp, #199]
  41a06c:	cmp	w0, #0x0
  41a070:	b.eq	41a07c <wcrtomb@plt+0x1728c>  // b.none
  41a074:	mov	w0, #0x4                   	// #4
  41a078:	str	w0, [sp, #76]
  41a07c:	ldr	w0, [sp, #72]
  41a080:	and	w1, w0, #0xfffffffd
  41a084:	ldr	x0, [sp, #240]
  41a088:	str	x0, [sp]
  41a08c:	ldr	x7, [sp, #56]
  41a090:	mov	x6, #0x0                   	// #0
  41a094:	mov	w5, w1
  41a098:	ldr	w4, [sp, #76]
  41a09c:	ldr	x3, [sp, #80]
  41a0a0:	ldr	x2, [sp, #88]
  41a0a4:	ldr	x1, [sp, #96]
  41a0a8:	ldr	x0, [sp, #104]
  41a0ac:	bl	418cac <wcrtomb@plt+0x15ebc>
  41a0b0:	ldr	x19, [sp, #32]
  41a0b4:	ldp	x29, x30, [sp, #16]
  41a0b8:	add	sp, sp, #0xf0
  41a0bc:	ret
  41a0c0:	sub	sp, sp, #0x70
  41a0c4:	stp	x29, x30, [sp, #16]
  41a0c8:	add	x29, sp, #0x10
  41a0cc:	str	x0, [sp, #72]
  41a0d0:	str	x1, [sp, #64]
  41a0d4:	str	x2, [sp, #56]
  41a0d8:	str	x3, [sp, #48]
  41a0dc:	str	x4, [sp, #40]
  41a0e0:	ldr	x0, [sp, #40]
  41a0e4:	cmp	x0, #0x0
  41a0e8:	b.eq	41a0f4 <wcrtomb@plt+0x17304>  // b.none
  41a0ec:	ldr	x0, [sp, #40]
  41a0f0:	b	41a0fc <wcrtomb@plt+0x1730c>
  41a0f4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a0f8:	add	x0, x0, #0x7a8
  41a0fc:	str	x0, [sp, #104]
  41a100:	bl	402d40 <__errno_location@plt>
  41a104:	ldr	w0, [x0]
  41a108:	str	w0, [sp, #100]
  41a10c:	ldr	x0, [sp, #104]
  41a110:	ldr	w1, [x0]
  41a114:	ldr	x0, [sp, #104]
  41a118:	ldr	w2, [x0, #4]
  41a11c:	ldr	x0, [sp, #104]
  41a120:	add	x3, x0, #0x8
  41a124:	ldr	x0, [sp, #104]
  41a128:	ldr	x4, [x0, #40]
  41a12c:	ldr	x0, [sp, #104]
  41a130:	ldr	x0, [x0, #48]
  41a134:	str	x0, [sp]
  41a138:	mov	x7, x4
  41a13c:	mov	x6, x3
  41a140:	mov	w5, w2
  41a144:	mov	w4, w1
  41a148:	ldr	x3, [sp, #48]
  41a14c:	ldr	x2, [sp, #56]
  41a150:	ldr	x1, [sp, #64]
  41a154:	ldr	x0, [sp, #72]
  41a158:	bl	418cac <wcrtomb@plt+0x15ebc>
  41a15c:	str	x0, [sp, #88]
  41a160:	bl	402d40 <__errno_location@plt>
  41a164:	mov	x1, x0
  41a168:	ldr	w0, [sp, #100]
  41a16c:	str	w0, [x1]
  41a170:	ldr	x0, [sp, #88]
  41a174:	ldp	x29, x30, [sp, #16]
  41a178:	add	sp, sp, #0x70
  41a17c:	ret
  41a180:	stp	x29, x30, [sp, #-48]!
  41a184:	mov	x29, sp
  41a188:	str	x0, [sp, #40]
  41a18c:	str	x1, [sp, #32]
  41a190:	str	x2, [sp, #24]
  41a194:	ldr	x3, [sp, #24]
  41a198:	mov	x2, #0x0                   	// #0
  41a19c:	ldr	x1, [sp, #32]
  41a1a0:	ldr	x0, [sp, #40]
  41a1a4:	bl	41a1b0 <wcrtomb@plt+0x173c0>
  41a1a8:	ldp	x29, x30, [sp], #48
  41a1ac:	ret
  41a1b0:	sub	sp, sp, #0x60
  41a1b4:	stp	x29, x30, [sp, #16]
  41a1b8:	add	x29, sp, #0x10
  41a1bc:	str	x0, [sp, #56]
  41a1c0:	str	x1, [sp, #48]
  41a1c4:	str	x2, [sp, #40]
  41a1c8:	str	x3, [sp, #32]
  41a1cc:	ldr	x0, [sp, #32]
  41a1d0:	cmp	x0, #0x0
  41a1d4:	b.eq	41a1e0 <wcrtomb@plt+0x173f0>  // b.none
  41a1d8:	ldr	x0, [sp, #32]
  41a1dc:	b	41a1e8 <wcrtomb@plt+0x173f8>
  41a1e0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a1e4:	add	x0, x0, #0x7a8
  41a1e8:	str	x0, [sp, #88]
  41a1ec:	bl	402d40 <__errno_location@plt>
  41a1f0:	ldr	w0, [x0]
  41a1f4:	str	w0, [sp, #84]
  41a1f8:	ldr	x0, [sp, #88]
  41a1fc:	ldr	w0, [x0, #4]
  41a200:	ldr	x1, [sp, #40]
  41a204:	cmp	x1, #0x0
  41a208:	cset	w1, eq  // eq = none
  41a20c:	and	w1, w1, #0xff
  41a210:	orr	w0, w0, w1
  41a214:	str	w0, [sp, #80]
  41a218:	ldr	x0, [sp, #88]
  41a21c:	ldr	w1, [x0]
  41a220:	ldr	x0, [sp, #88]
  41a224:	add	x2, x0, #0x8
  41a228:	ldr	x0, [sp, #88]
  41a22c:	ldr	x3, [x0, #40]
  41a230:	ldr	x0, [sp, #88]
  41a234:	ldr	x0, [x0, #48]
  41a238:	str	x0, [sp]
  41a23c:	mov	x7, x3
  41a240:	mov	x6, x2
  41a244:	ldr	w5, [sp, #80]
  41a248:	mov	w4, w1
  41a24c:	ldr	x3, [sp, #48]
  41a250:	ldr	x2, [sp, #56]
  41a254:	mov	x1, #0x0                   	// #0
  41a258:	mov	x0, #0x0                   	// #0
  41a25c:	bl	418cac <wcrtomb@plt+0x15ebc>
  41a260:	add	x0, x0, #0x1
  41a264:	str	x0, [sp, #72]
  41a268:	ldr	x0, [sp, #72]
  41a26c:	bl	41b8b4 <wcrtomb@plt+0x18ac4>
  41a270:	str	x0, [sp, #64]
  41a274:	ldr	x0, [sp, #88]
  41a278:	ldr	w1, [x0]
  41a27c:	ldr	x0, [sp, #88]
  41a280:	add	x2, x0, #0x8
  41a284:	ldr	x0, [sp, #88]
  41a288:	ldr	x3, [x0, #40]
  41a28c:	ldr	x0, [sp, #88]
  41a290:	ldr	x0, [x0, #48]
  41a294:	str	x0, [sp]
  41a298:	mov	x7, x3
  41a29c:	mov	x6, x2
  41a2a0:	ldr	w5, [sp, #80]
  41a2a4:	mov	w4, w1
  41a2a8:	ldr	x3, [sp, #48]
  41a2ac:	ldr	x2, [sp, #56]
  41a2b0:	ldr	x1, [sp, #72]
  41a2b4:	ldr	x0, [sp, #64]
  41a2b8:	bl	418cac <wcrtomb@plt+0x15ebc>
  41a2bc:	bl	402d40 <__errno_location@plt>
  41a2c0:	mov	x1, x0
  41a2c4:	ldr	w0, [sp, #84]
  41a2c8:	str	w0, [x1]
  41a2cc:	ldr	x0, [sp, #40]
  41a2d0:	cmp	x0, #0x0
  41a2d4:	b.eq	41a2e8 <wcrtomb@plt+0x174f8>  // b.none
  41a2d8:	ldr	x0, [sp, #72]
  41a2dc:	sub	x1, x0, #0x1
  41a2e0:	ldr	x0, [sp, #40]
  41a2e4:	str	x1, [x0]
  41a2e8:	ldr	x0, [sp, #64]
  41a2ec:	ldp	x29, x30, [sp, #16]
  41a2f0:	add	sp, sp, #0x60
  41a2f4:	ret
  41a2f8:	stp	x29, x30, [sp, #-32]!
  41a2fc:	mov	x29, sp
  41a300:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a304:	add	x0, x0, #0x4b0
  41a308:	ldr	x0, [x0]
  41a30c:	str	x0, [sp, #16]
  41a310:	mov	w0, #0x1                   	// #1
  41a314:	str	w0, [sp, #28]
  41a318:	b	41a340 <wcrtomb@plt+0x17550>
  41a31c:	ldrsw	x0, [sp, #28]
  41a320:	lsl	x0, x0, #4
  41a324:	ldr	x1, [sp, #16]
  41a328:	add	x0, x1, x0
  41a32c:	ldr	x0, [x0, #8]
  41a330:	bl	402b60 <free@plt>
  41a334:	ldr	w0, [sp, #28]
  41a338:	add	w0, w0, #0x1
  41a33c:	str	w0, [sp, #28]
  41a340:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a344:	add	x0, x0, #0x498
  41a348:	ldr	w0, [x0]
  41a34c:	ldr	w1, [sp, #28]
  41a350:	cmp	w1, w0
  41a354:	b.lt	41a31c <wcrtomb@plt+0x1752c>  // b.tstop
  41a358:	ldr	x0, [sp, #16]
  41a35c:	ldr	x1, [x0, #8]
  41a360:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a364:	add	x0, x0, #0x7e0
  41a368:	cmp	x1, x0
  41a36c:	b.eq	41a3a0 <wcrtomb@plt+0x175b0>  // b.none
  41a370:	ldr	x0, [sp, #16]
  41a374:	ldr	x0, [x0, #8]
  41a378:	bl	402b60 <free@plt>
  41a37c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a380:	add	x0, x0, #0x4a0
  41a384:	mov	x1, #0x100                 	// #256
  41a388:	str	x1, [x0]
  41a38c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a390:	add	x0, x0, #0x4a0
  41a394:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a398:	add	x1, x1, #0x7e0
  41a39c:	str	x1, [x0, #8]
  41a3a0:	ldr	x1, [sp, #16]
  41a3a4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a3a8:	add	x0, x0, #0x4a0
  41a3ac:	cmp	x1, x0
  41a3b0:	b.eq	41a3d0 <wcrtomb@plt+0x175e0>  // b.none
  41a3b4:	ldr	x0, [sp, #16]
  41a3b8:	bl	402b60 <free@plt>
  41a3bc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a3c0:	add	x0, x0, #0x4b0
  41a3c4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a3c8:	add	x1, x1, #0x4a0
  41a3cc:	str	x1, [x0]
  41a3d0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a3d4:	add	x0, x0, #0x498
  41a3d8:	mov	w1, #0x1                   	// #1
  41a3dc:	str	w1, [x0]
  41a3e0:	nop
  41a3e4:	ldp	x29, x30, [sp], #32
  41a3e8:	ret
  41a3ec:	sub	sp, sp, #0x80
  41a3f0:	stp	x29, x30, [sp, #16]
  41a3f4:	add	x29, sp, #0x10
  41a3f8:	str	w0, [sp, #60]
  41a3fc:	str	x1, [sp, #48]
  41a400:	str	x2, [sp, #40]
  41a404:	str	x3, [sp, #32]
  41a408:	bl	402d40 <__errno_location@plt>
  41a40c:	ldr	w0, [x0]
  41a410:	str	w0, [sp, #108]
  41a414:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a418:	add	x0, x0, #0x4b0
  41a41c:	ldr	x0, [x0]
  41a420:	str	x0, [sp, #120]
  41a424:	ldr	w0, [sp, #60]
  41a428:	cmp	w0, #0x0
  41a42c:	b.ge	41a434 <wcrtomb@plt+0x17644>  // b.tcont
  41a430:	bl	402a90 <abort@plt>
  41a434:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a438:	add	x0, x0, #0x498
  41a43c:	ldr	w0, [x0]
  41a440:	ldr	w1, [sp, #60]
  41a444:	cmp	w1, w0
  41a448:	b.lt	41a540 <wcrtomb@plt+0x17750>  // b.tstop
  41a44c:	ldr	x1, [sp, #120]
  41a450:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a454:	add	x0, x0, #0x4a0
  41a458:	cmp	x1, x0
  41a45c:	cset	w0, eq  // eq = none
  41a460:	strb	w0, [sp, #107]
  41a464:	mov	w0, #0x7ffffffe            	// #2147483646
  41a468:	str	w0, [sp, #100]
  41a46c:	ldr	w1, [sp, #100]
  41a470:	ldr	w0, [sp, #60]
  41a474:	cmp	w1, w0
  41a478:	b.ge	41a480 <wcrtomb@plt+0x17690>  // b.tcont
  41a47c:	bl	41baa8 <wcrtomb@plt+0x18cb8>
  41a480:	ldrb	w0, [sp, #107]
  41a484:	cmp	w0, #0x0
  41a488:	b.eq	41a494 <wcrtomb@plt+0x176a4>  // b.none
  41a48c:	mov	x0, #0x0                   	// #0
  41a490:	b	41a498 <wcrtomb@plt+0x176a8>
  41a494:	ldr	x0, [sp, #120]
  41a498:	ldr	w1, [sp, #60]
  41a49c:	add	w1, w1, #0x1
  41a4a0:	sxtw	x1, w1
  41a4a4:	lsl	x1, x1, #4
  41a4a8:	bl	41b910 <wcrtomb@plt+0x18b20>
  41a4ac:	str	x0, [sp, #120]
  41a4b0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a4b4:	add	x0, x0, #0x4b0
  41a4b8:	ldr	x1, [sp, #120]
  41a4bc:	str	x1, [x0]
  41a4c0:	ldrb	w0, [sp, #107]
  41a4c4:	cmp	w0, #0x0
  41a4c8:	b.eq	41a4e0 <wcrtomb@plt+0x176f0>  // b.none
  41a4cc:	ldr	x2, [sp, #120]
  41a4d0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a4d4:	add	x0, x0, #0x4a0
  41a4d8:	ldp	x0, x1, [x0]
  41a4dc:	stp	x0, x1, [x2]
  41a4e0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a4e4:	add	x0, x0, #0x498
  41a4e8:	ldr	w0, [x0]
  41a4ec:	sxtw	x0, w0
  41a4f0:	lsl	x0, x0, #4
  41a4f4:	ldr	x1, [sp, #120]
  41a4f8:	add	x3, x1, x0
  41a4fc:	ldr	w0, [sp, #60]
  41a500:	add	w1, w0, #0x1
  41a504:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a508:	add	x0, x0, #0x498
  41a50c:	ldr	w0, [x0]
  41a510:	sub	w0, w1, w0
  41a514:	sxtw	x0, w0
  41a518:	lsl	x0, x0, #4
  41a51c:	mov	x2, x0
  41a520:	mov	w1, #0x0                   	// #0
  41a524:	mov	x0, x3
  41a528:	bl	402980 <memset@plt>
  41a52c:	ldr	w0, [sp, #60]
  41a530:	add	w1, w0, #0x1
  41a534:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a538:	add	x0, x0, #0x498
  41a53c:	str	w1, [x0]
  41a540:	ldrsw	x0, [sp, #60]
  41a544:	lsl	x0, x0, #4
  41a548:	ldr	x1, [sp, #120]
  41a54c:	add	x0, x1, x0
  41a550:	ldr	x0, [x0]
  41a554:	str	x0, [sp, #88]
  41a558:	ldrsw	x0, [sp, #60]
  41a55c:	lsl	x0, x0, #4
  41a560:	ldr	x1, [sp, #120]
  41a564:	add	x0, x1, x0
  41a568:	ldr	x0, [x0, #8]
  41a56c:	str	x0, [sp, #112]
  41a570:	ldr	x0, [sp, #32]
  41a574:	ldr	w0, [x0, #4]
  41a578:	orr	w0, w0, #0x1
  41a57c:	str	w0, [sp, #84]
  41a580:	ldr	x0, [sp, #32]
  41a584:	ldr	w1, [x0]
  41a588:	ldr	x0, [sp, #32]
  41a58c:	add	x2, x0, #0x8
  41a590:	ldr	x0, [sp, #32]
  41a594:	ldr	x3, [x0, #40]
  41a598:	ldr	x0, [sp, #32]
  41a59c:	ldr	x0, [x0, #48]
  41a5a0:	str	x0, [sp]
  41a5a4:	mov	x7, x3
  41a5a8:	mov	x6, x2
  41a5ac:	ldr	w5, [sp, #84]
  41a5b0:	mov	w4, w1
  41a5b4:	ldr	x3, [sp, #40]
  41a5b8:	ldr	x2, [sp, #48]
  41a5bc:	ldr	x1, [sp, #88]
  41a5c0:	ldr	x0, [sp, #112]
  41a5c4:	bl	418cac <wcrtomb@plt+0x15ebc>
  41a5c8:	str	x0, [sp, #72]
  41a5cc:	ldr	x1, [sp, #88]
  41a5d0:	ldr	x0, [sp, #72]
  41a5d4:	cmp	x1, x0
  41a5d8:	b.hi	41a688 <wcrtomb@plt+0x17898>  // b.pmore
  41a5dc:	ldr	x0, [sp, #72]
  41a5e0:	add	x0, x0, #0x1
  41a5e4:	str	x0, [sp, #88]
  41a5e8:	ldrsw	x0, [sp, #60]
  41a5ec:	lsl	x0, x0, #4
  41a5f0:	ldr	x1, [sp, #120]
  41a5f4:	add	x0, x1, x0
  41a5f8:	ldr	x1, [sp, #88]
  41a5fc:	str	x1, [x0]
  41a600:	ldr	x1, [sp, #112]
  41a604:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a608:	add	x0, x0, #0x7e0
  41a60c:	cmp	x1, x0
  41a610:	b.eq	41a61c <wcrtomb@plt+0x1782c>  // b.none
  41a614:	ldr	x0, [sp, #112]
  41a618:	bl	402b60 <free@plt>
  41a61c:	ldr	x0, [sp, #88]
  41a620:	bl	41b8b4 <wcrtomb@plt+0x18ac4>
  41a624:	str	x0, [sp, #112]
  41a628:	ldrsw	x0, [sp, #60]
  41a62c:	lsl	x0, x0, #4
  41a630:	ldr	x1, [sp, #120]
  41a634:	add	x0, x1, x0
  41a638:	ldr	x1, [sp, #112]
  41a63c:	str	x1, [x0, #8]
  41a640:	ldr	x0, [sp, #32]
  41a644:	ldr	w1, [x0]
  41a648:	ldr	x0, [sp, #32]
  41a64c:	add	x2, x0, #0x8
  41a650:	ldr	x0, [sp, #32]
  41a654:	ldr	x3, [x0, #40]
  41a658:	ldr	x0, [sp, #32]
  41a65c:	ldr	x0, [x0, #48]
  41a660:	str	x0, [sp]
  41a664:	mov	x7, x3
  41a668:	mov	x6, x2
  41a66c:	ldr	w5, [sp, #84]
  41a670:	mov	w4, w1
  41a674:	ldr	x3, [sp, #40]
  41a678:	ldr	x2, [sp, #48]
  41a67c:	ldr	x1, [sp, #88]
  41a680:	ldr	x0, [sp, #112]
  41a684:	bl	418cac <wcrtomb@plt+0x15ebc>
  41a688:	bl	402d40 <__errno_location@plt>
  41a68c:	mov	x1, x0
  41a690:	ldr	w0, [sp, #108]
  41a694:	str	w0, [x1]
  41a698:	ldr	x0, [sp, #112]
  41a69c:	ldp	x29, x30, [sp, #16]
  41a6a0:	add	sp, sp, #0x80
  41a6a4:	ret
  41a6a8:	stp	x29, x30, [sp, #-32]!
  41a6ac:	mov	x29, sp
  41a6b0:	str	w0, [sp, #28]
  41a6b4:	str	x1, [sp, #16]
  41a6b8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a6bc:	add	x3, x0, #0x7a8
  41a6c0:	mov	x2, #0xffffffffffffffff    	// #-1
  41a6c4:	ldr	x1, [sp, #16]
  41a6c8:	ldr	w0, [sp, #28]
  41a6cc:	bl	41a3ec <wcrtomb@plt+0x175fc>
  41a6d0:	ldp	x29, x30, [sp], #32
  41a6d4:	ret
  41a6d8:	stp	x29, x30, [sp, #-48]!
  41a6dc:	mov	x29, sp
  41a6e0:	str	w0, [sp, #44]
  41a6e4:	str	x1, [sp, #32]
  41a6e8:	str	x2, [sp, #24]
  41a6ec:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a6f0:	add	x3, x0, #0x7a8
  41a6f4:	ldr	x2, [sp, #24]
  41a6f8:	ldr	x1, [sp, #32]
  41a6fc:	ldr	w0, [sp, #44]
  41a700:	bl	41a3ec <wcrtomb@plt+0x175fc>
  41a704:	ldp	x29, x30, [sp], #48
  41a708:	ret
  41a70c:	stp	x29, x30, [sp, #-32]!
  41a710:	mov	x29, sp
  41a714:	str	x0, [sp, #24]
  41a718:	ldr	x1, [sp, #24]
  41a71c:	mov	w0, #0x0                   	// #0
  41a720:	bl	41a6a8 <wcrtomb@plt+0x178b8>
  41a724:	ldp	x29, x30, [sp], #32
  41a728:	ret
  41a72c:	stp	x29, x30, [sp, #-32]!
  41a730:	mov	x29, sp
  41a734:	str	x0, [sp, #24]
  41a738:	str	x1, [sp, #16]
  41a73c:	ldr	x2, [sp, #16]
  41a740:	ldr	x1, [sp, #24]
  41a744:	mov	w0, #0x0                   	// #0
  41a748:	bl	41a6d8 <wcrtomb@plt+0x178e8>
  41a74c:	ldp	x29, x30, [sp], #32
  41a750:	ret
  41a754:	stp	x29, x30, [sp, #-96]!
  41a758:	mov	x29, sp
  41a75c:	str	w0, [sp, #28]
  41a760:	str	w1, [sp, #24]
  41a764:	str	x2, [sp, #16]
  41a768:	add	x0, sp, #0x28
  41a76c:	mov	x8, x0
  41a770:	ldr	w0, [sp, #24]
  41a774:	bl	418b64 <wcrtomb@plt+0x15d74>
  41a778:	add	x0, sp, #0x28
  41a77c:	mov	x3, x0
  41a780:	mov	x2, #0xffffffffffffffff    	// #-1
  41a784:	ldr	x1, [sp, #16]
  41a788:	ldr	w0, [sp, #28]
  41a78c:	bl	41a3ec <wcrtomb@plt+0x175fc>
  41a790:	ldp	x29, x30, [sp], #96
  41a794:	ret
  41a798:	stp	x29, x30, [sp, #-112]!
  41a79c:	mov	x29, sp
  41a7a0:	str	w0, [sp, #44]
  41a7a4:	str	w1, [sp, #40]
  41a7a8:	str	x2, [sp, #32]
  41a7ac:	str	x3, [sp, #24]
  41a7b0:	add	x0, sp, #0x38
  41a7b4:	mov	x8, x0
  41a7b8:	ldr	w0, [sp, #40]
  41a7bc:	bl	418b64 <wcrtomb@plt+0x15d74>
  41a7c0:	add	x0, sp, #0x38
  41a7c4:	mov	x3, x0
  41a7c8:	ldr	x2, [sp, #24]
  41a7cc:	ldr	x1, [sp, #32]
  41a7d0:	ldr	w0, [sp, #44]
  41a7d4:	bl	41a3ec <wcrtomb@plt+0x175fc>
  41a7d8:	ldp	x29, x30, [sp], #112
  41a7dc:	ret
  41a7e0:	stp	x29, x30, [sp, #-32]!
  41a7e4:	mov	x29, sp
  41a7e8:	str	w0, [sp, #28]
  41a7ec:	str	x1, [sp, #16]
  41a7f0:	ldr	x2, [sp, #16]
  41a7f4:	ldr	w1, [sp, #28]
  41a7f8:	mov	w0, #0x0                   	// #0
  41a7fc:	bl	41a754 <wcrtomb@plt+0x17964>
  41a800:	ldp	x29, x30, [sp], #32
  41a804:	ret
  41a808:	stp	x29, x30, [sp, #-48]!
  41a80c:	mov	x29, sp
  41a810:	str	w0, [sp, #44]
  41a814:	str	x1, [sp, #32]
  41a818:	str	x2, [sp, #24]
  41a81c:	ldr	x3, [sp, #24]
  41a820:	ldr	x2, [sp, #32]
  41a824:	ldr	w1, [sp, #44]
  41a828:	mov	w0, #0x0                   	// #0
  41a82c:	bl	41a798 <wcrtomb@plt+0x179a8>
  41a830:	ldp	x29, x30, [sp], #48
  41a834:	ret
  41a838:	stp	x29, x30, [sp, #-112]!
  41a83c:	mov	x29, sp
  41a840:	str	x0, [sp, #40]
  41a844:	str	x1, [sp, #32]
  41a848:	strb	w2, [sp, #31]
  41a84c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a850:	add	x1, x0, #0x7a8
  41a854:	add	x0, sp, #0x38
  41a858:	ldp	x2, x3, [x1]
  41a85c:	stp	x2, x3, [x0]
  41a860:	ldp	x2, x3, [x1, #16]
  41a864:	stp	x2, x3, [x0, #16]
  41a868:	ldp	x2, x3, [x1, #32]
  41a86c:	stp	x2, x3, [x0, #32]
  41a870:	ldr	x1, [x1, #48]
  41a874:	str	x1, [x0, #48]
  41a878:	add	x0, sp, #0x38
  41a87c:	mov	w2, #0x1                   	// #1
  41a880:	ldrb	w1, [sp, #31]
  41a884:	bl	4189f4 <wcrtomb@plt+0x15c04>
  41a888:	add	x0, sp, #0x38
  41a88c:	mov	x3, x0
  41a890:	ldr	x2, [sp, #32]
  41a894:	ldr	x1, [sp, #40]
  41a898:	mov	w0, #0x0                   	// #0
  41a89c:	bl	41a3ec <wcrtomb@plt+0x175fc>
  41a8a0:	ldp	x29, x30, [sp], #112
  41a8a4:	ret
  41a8a8:	stp	x29, x30, [sp, #-32]!
  41a8ac:	mov	x29, sp
  41a8b0:	str	x0, [sp, #24]
  41a8b4:	strb	w1, [sp, #23]
  41a8b8:	ldrb	w2, [sp, #23]
  41a8bc:	mov	x1, #0xffffffffffffffff    	// #-1
  41a8c0:	ldr	x0, [sp, #24]
  41a8c4:	bl	41a838 <wcrtomb@plt+0x17a48>
  41a8c8:	ldp	x29, x30, [sp], #32
  41a8cc:	ret
  41a8d0:	stp	x29, x30, [sp, #-32]!
  41a8d4:	mov	x29, sp
  41a8d8:	str	x0, [sp, #24]
  41a8dc:	mov	w1, #0x3a                  	// #58
  41a8e0:	ldr	x0, [sp, #24]
  41a8e4:	bl	41a8a8 <wcrtomb@plt+0x17ab8>
  41a8e8:	ldp	x29, x30, [sp], #32
  41a8ec:	ret
  41a8f0:	stp	x29, x30, [sp, #-32]!
  41a8f4:	mov	x29, sp
  41a8f8:	str	x0, [sp, #24]
  41a8fc:	str	x1, [sp, #16]
  41a900:	mov	w2, #0x3a                  	// #58
  41a904:	ldr	x1, [sp, #16]
  41a908:	ldr	x0, [sp, #24]
  41a90c:	bl	41a838 <wcrtomb@plt+0x17a48>
  41a910:	ldp	x29, x30, [sp], #32
  41a914:	ret
  41a918:	stp	x29, x30, [sp, #-160]!
  41a91c:	mov	x29, sp
  41a920:	str	w0, [sp, #92]
  41a924:	str	w1, [sp, #88]
  41a928:	str	x2, [sp, #80]
  41a92c:	add	x0, sp, #0x10
  41a930:	mov	x8, x0
  41a934:	ldr	w0, [sp, #88]
  41a938:	bl	418b64 <wcrtomb@plt+0x15d74>
  41a93c:	add	x0, sp, #0x68
  41a940:	add	x1, sp, #0x10
  41a944:	ldp	x2, x3, [x1]
  41a948:	stp	x2, x3, [x0]
  41a94c:	ldp	x2, x3, [x1, #16]
  41a950:	stp	x2, x3, [x0, #16]
  41a954:	ldp	x2, x3, [x1, #32]
  41a958:	stp	x2, x3, [x0, #32]
  41a95c:	ldr	x1, [x1, #48]
  41a960:	str	x1, [x0, #48]
  41a964:	add	x0, sp, #0x68
  41a968:	mov	w2, #0x1                   	// #1
  41a96c:	mov	w1, #0x3a                  	// #58
  41a970:	bl	4189f4 <wcrtomb@plt+0x15c04>
  41a974:	add	x0, sp, #0x68
  41a978:	mov	x3, x0
  41a97c:	mov	x2, #0xffffffffffffffff    	// #-1
  41a980:	ldr	x1, [sp, #80]
  41a984:	ldr	w0, [sp, #92]
  41a988:	bl	41a3ec <wcrtomb@plt+0x175fc>
  41a98c:	ldp	x29, x30, [sp], #160
  41a990:	ret
  41a994:	stp	x29, x30, [sp, #-48]!
  41a998:	mov	x29, sp
  41a99c:	str	w0, [sp, #44]
  41a9a0:	str	x1, [sp, #32]
  41a9a4:	str	x2, [sp, #24]
  41a9a8:	str	x3, [sp, #16]
  41a9ac:	mov	x4, #0xffffffffffffffff    	// #-1
  41a9b0:	ldr	x3, [sp, #16]
  41a9b4:	ldr	x2, [sp, #24]
  41a9b8:	ldr	x1, [sp, #32]
  41a9bc:	ldr	w0, [sp, #44]
  41a9c0:	bl	41a9cc <wcrtomb@plt+0x17bdc>
  41a9c4:	ldp	x29, x30, [sp], #48
  41a9c8:	ret
  41a9cc:	stp	x29, x30, [sp, #-128]!
  41a9d0:	mov	x29, sp
  41a9d4:	str	w0, [sp, #60]
  41a9d8:	str	x1, [sp, #48]
  41a9dc:	str	x2, [sp, #40]
  41a9e0:	str	x3, [sp, #32]
  41a9e4:	str	x4, [sp, #24]
  41a9e8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41a9ec:	add	x1, x0, #0x7a8
  41a9f0:	add	x0, sp, #0x48
  41a9f4:	ldp	x2, x3, [x1]
  41a9f8:	stp	x2, x3, [x0]
  41a9fc:	ldp	x2, x3, [x1, #16]
  41aa00:	stp	x2, x3, [x0, #16]
  41aa04:	ldp	x2, x3, [x1, #32]
  41aa08:	stp	x2, x3, [x0, #32]
  41aa0c:	ldr	x1, [x1, #48]
  41aa10:	str	x1, [x0, #48]
  41aa14:	add	x0, sp, #0x48
  41aa18:	ldr	x2, [sp, #40]
  41aa1c:	ldr	x1, [sp, #48]
  41aa20:	bl	418aec <wcrtomb@plt+0x15cfc>
  41aa24:	add	x0, sp, #0x48
  41aa28:	mov	x3, x0
  41aa2c:	ldr	x2, [sp, #24]
  41aa30:	ldr	x1, [sp, #32]
  41aa34:	ldr	w0, [sp, #60]
  41aa38:	bl	41a3ec <wcrtomb@plt+0x175fc>
  41aa3c:	ldp	x29, x30, [sp], #128
  41aa40:	ret
  41aa44:	stp	x29, x30, [sp, #-48]!
  41aa48:	mov	x29, sp
  41aa4c:	str	x0, [sp, #40]
  41aa50:	str	x1, [sp, #32]
  41aa54:	str	x2, [sp, #24]
  41aa58:	ldr	x3, [sp, #24]
  41aa5c:	ldr	x2, [sp, #32]
  41aa60:	ldr	x1, [sp, #40]
  41aa64:	mov	w0, #0x0                   	// #0
  41aa68:	bl	41a994 <wcrtomb@plt+0x17ba4>
  41aa6c:	ldp	x29, x30, [sp], #48
  41aa70:	ret
  41aa74:	stp	x29, x30, [sp, #-48]!
  41aa78:	mov	x29, sp
  41aa7c:	str	x0, [sp, #40]
  41aa80:	str	x1, [sp, #32]
  41aa84:	str	x2, [sp, #24]
  41aa88:	str	x3, [sp, #16]
  41aa8c:	ldr	x4, [sp, #16]
  41aa90:	ldr	x3, [sp, #24]
  41aa94:	ldr	x2, [sp, #32]
  41aa98:	ldr	x1, [sp, #40]
  41aa9c:	mov	w0, #0x0                   	// #0
  41aaa0:	bl	41a9cc <wcrtomb@plt+0x17bdc>
  41aaa4:	ldp	x29, x30, [sp], #48
  41aaa8:	ret
  41aaac:	stp	x29, x30, [sp, #-48]!
  41aab0:	mov	x29, sp
  41aab4:	str	w0, [sp, #44]
  41aab8:	str	x1, [sp, #32]
  41aabc:	str	x2, [sp, #24]
  41aac0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41aac4:	add	x3, x0, #0x4b8
  41aac8:	ldr	x2, [sp, #24]
  41aacc:	ldr	x1, [sp, #32]
  41aad0:	ldr	w0, [sp, #44]
  41aad4:	bl	41a3ec <wcrtomb@plt+0x175fc>
  41aad8:	ldp	x29, x30, [sp], #48
  41aadc:	ret
  41aae0:	stp	x29, x30, [sp, #-32]!
  41aae4:	mov	x29, sp
  41aae8:	str	x0, [sp, #24]
  41aaec:	str	x1, [sp, #16]
  41aaf0:	ldr	x2, [sp, #16]
  41aaf4:	ldr	x1, [sp, #24]
  41aaf8:	mov	w0, #0x0                   	// #0
  41aafc:	bl	41aaac <wcrtomb@plt+0x17cbc>
  41ab00:	ldp	x29, x30, [sp], #32
  41ab04:	ret
  41ab08:	stp	x29, x30, [sp, #-32]!
  41ab0c:	mov	x29, sp
  41ab10:	str	w0, [sp, #28]
  41ab14:	str	x1, [sp, #16]
  41ab18:	mov	x2, #0xffffffffffffffff    	// #-1
  41ab1c:	ldr	x1, [sp, #16]
  41ab20:	ldr	w0, [sp, #28]
  41ab24:	bl	41aaac <wcrtomb@plt+0x17cbc>
  41ab28:	ldp	x29, x30, [sp], #32
  41ab2c:	ret
  41ab30:	stp	x29, x30, [sp, #-32]!
  41ab34:	mov	x29, sp
  41ab38:	str	x0, [sp, #24]
  41ab3c:	ldr	x1, [sp, #24]
  41ab40:	mov	w0, #0x0                   	// #0
  41ab44:	bl	41ab08 <wcrtomb@plt+0x17d18>
  41ab48:	ldp	x29, x30, [sp], #32
  41ab4c:	ret
  41ab50:	stp	x29, x30, [sp, #-32]!
  41ab54:	mov	x29, sp
  41ab58:	str	x0, [sp, #24]
  41ab5c:	bl	402d40 <__errno_location@plt>
  41ab60:	mov	x1, x0
  41ab64:	mov	w0, #0x5f                  	// #95
  41ab68:	str	w0, [x1]
  41ab6c:	mov	w0, #0xffffffff            	// #-1
  41ab70:	ldp	x29, x30, [sp], #32
  41ab74:	ret
  41ab78:	sub	sp, sp, #0x10
  41ab7c:	str	x0, [sp, #8]
  41ab80:	nop
  41ab84:	add	sp, sp, #0x10
  41ab88:	ret
  41ab8c:	stp	x29, x30, [sp, #-32]!
  41ab90:	mov	x29, sp
  41ab94:	str	x0, [sp, #24]
  41ab98:	bl	402d40 <__errno_location@plt>
  41ab9c:	mov	x1, x0
  41aba0:	mov	w0, #0x5f                  	// #95
  41aba4:	str	w0, [x1]
  41aba8:	mov	w0, #0xffffffff            	// #-1
  41abac:	ldp	x29, x30, [sp], #32
  41abb0:	ret
  41abb4:	stp	x29, x30, [sp, #-32]!
  41abb8:	mov	x29, sp
  41abbc:	str	x0, [sp, #24]
  41abc0:	bl	402d40 <__errno_location@plt>
  41abc4:	mov	x1, x0
  41abc8:	mov	w0, #0x5f                  	// #95
  41abcc:	str	w0, [x1]
  41abd0:	mov	w0, #0xffffffff            	// #-1
  41abd4:	ldp	x29, x30, [sp], #32
  41abd8:	ret
  41abdc:	stp	x29, x30, [sp, #-48]!
  41abe0:	mov	x29, sp
  41abe4:	str	x0, [sp, #40]
  41abe8:	str	w1, [sp, #36]
  41abec:	str	x2, [sp, #24]
  41abf0:	bl	402d40 <__errno_location@plt>
  41abf4:	mov	x1, x0
  41abf8:	mov	w0, #0x5f                  	// #95
  41abfc:	str	w0, [x1]
  41ac00:	mov	w0, #0xffffffff            	// #-1
  41ac04:	ldp	x29, x30, [sp], #48
  41ac08:	ret
  41ac0c:	stp	x29, x30, [sp, #-32]!
  41ac10:	mov	x29, sp
  41ac14:	str	x0, [sp, #24]
  41ac18:	str	x1, [sp, #16]
  41ac1c:	bl	402d40 <__errno_location@plt>
  41ac20:	mov	x1, x0
  41ac24:	mov	w0, #0x5f                  	// #95
  41ac28:	str	w0, [x1]
  41ac2c:	mov	w0, #0xffffffff            	// #-1
  41ac30:	ldp	x29, x30, [sp], #32
  41ac34:	ret
  41ac38:	stp	x29, x30, [sp, #-32]!
  41ac3c:	mov	x29, sp
  41ac40:	str	x0, [sp, #24]
  41ac44:	str	x1, [sp, #16]
  41ac48:	bl	402d40 <__errno_location@plt>
  41ac4c:	mov	x1, x0
  41ac50:	mov	w0, #0x5f                  	// #95
  41ac54:	str	w0, [x1]
  41ac58:	mov	w0, #0xffffffff            	// #-1
  41ac5c:	ldp	x29, x30, [sp], #32
  41ac60:	ret
  41ac64:	stp	x29, x30, [sp, #-32]!
  41ac68:	mov	x29, sp
  41ac6c:	str	w0, [sp, #28]
  41ac70:	str	x1, [sp, #16]
  41ac74:	bl	402d40 <__errno_location@plt>
  41ac78:	mov	x1, x0
  41ac7c:	mov	w0, #0x5f                  	// #95
  41ac80:	str	w0, [x1]
  41ac84:	mov	w0, #0xffffffff            	// #-1
  41ac88:	ldp	x29, x30, [sp], #32
  41ac8c:	ret
  41ac90:	stp	x29, x30, [sp, #-32]!
  41ac94:	mov	x29, sp
  41ac98:	str	x0, [sp, #24]
  41ac9c:	str	x1, [sp, #16]
  41aca0:	bl	402d40 <__errno_location@plt>
  41aca4:	mov	x1, x0
  41aca8:	mov	w0, #0x5f                  	// #95
  41acac:	str	w0, [x1]
  41acb0:	mov	w0, #0xffffffff            	// #-1
  41acb4:	ldp	x29, x30, [sp], #32
  41acb8:	ret
  41acbc:	stp	x29, x30, [sp, #-32]!
  41acc0:	mov	x29, sp
  41acc4:	str	x0, [sp, #24]
  41acc8:	str	x1, [sp, #16]
  41accc:	bl	402d40 <__errno_location@plt>
  41acd0:	mov	x1, x0
  41acd4:	mov	w0, #0x5f                  	// #95
  41acd8:	str	w0, [x1]
  41acdc:	mov	w0, #0xffffffff            	// #-1
  41ace0:	ldp	x29, x30, [sp], #32
  41ace4:	ret
  41ace8:	stp	x29, x30, [sp, #-32]!
  41acec:	mov	x29, sp
  41acf0:	str	w0, [sp, #28]
  41acf4:	str	x1, [sp, #16]
  41acf8:	bl	402d40 <__errno_location@plt>
  41acfc:	mov	x1, x0
  41ad00:	mov	w0, #0x5f                  	// #95
  41ad04:	str	w0, [x1]
  41ad08:	mov	w0, #0xffffffff            	// #-1
  41ad0c:	ldp	x29, x30, [sp], #32
  41ad10:	ret
  41ad14:	stp	x29, x30, [sp, #-32]!
  41ad18:	mov	x29, sp
  41ad1c:	str	x0, [sp, #24]
  41ad20:	bl	402d40 <__errno_location@plt>
  41ad24:	mov	x1, x0
  41ad28:	mov	w0, #0x5f                  	// #95
  41ad2c:	str	w0, [x1]
  41ad30:	mov	w0, #0xffffffff            	// #-1
  41ad34:	ldp	x29, x30, [sp], #32
  41ad38:	ret
  41ad3c:	stp	x29, x30, [sp, #-32]!
  41ad40:	mov	x29, sp
  41ad44:	str	x0, [sp, #24]
  41ad48:	bl	402d40 <__errno_location@plt>
  41ad4c:	mov	x1, x0
  41ad50:	mov	w0, #0x5f                  	// #95
  41ad54:	str	w0, [x1]
  41ad58:	mov	w0, #0xffffffff            	// #-1
  41ad5c:	ldp	x29, x30, [sp], #32
  41ad60:	ret
  41ad64:	stp	x29, x30, [sp, #-32]!
  41ad68:	mov	x29, sp
  41ad6c:	str	x0, [sp, #24]
  41ad70:	bl	402d40 <__errno_location@plt>
  41ad74:	mov	x1, x0
  41ad78:	mov	w0, #0x5f                  	// #95
  41ad7c:	str	w0, [x1]
  41ad80:	mov	w0, #0xffffffff            	// #-1
  41ad84:	ldp	x29, x30, [sp], #32
  41ad88:	ret
  41ad8c:	stp	x29, x30, [sp, #-48]!
  41ad90:	mov	x29, sp
  41ad94:	str	x0, [sp, #40]
  41ad98:	str	x1, [sp, #32]
  41ad9c:	strh	w2, [sp, #30]
  41ada0:	str	x3, [sp, #16]
  41ada4:	bl	402d40 <__errno_location@plt>
  41ada8:	mov	x1, x0
  41adac:	mov	w0, #0x5f                  	// #95
  41adb0:	str	w0, [x1]
  41adb4:	mov	w0, #0xffffffff            	// #-1
  41adb8:	ldp	x29, x30, [sp], #48
  41adbc:	ret
  41adc0:	stp	x29, x30, [sp, #-32]!
  41adc4:	mov	x29, sp
  41adc8:	str	x0, [sp, #24]
  41adcc:	bl	402d40 <__errno_location@plt>
  41add0:	mov	x1, x0
  41add4:	mov	w0, #0x5f                  	// #95
  41add8:	str	w0, [x1]
  41addc:	mov	w0, #0x0                   	// #0
  41ade0:	ldp	x29, x30, [sp], #32
  41ade4:	ret
  41ade8:	stp	x29, x30, [sp, #-32]!
  41adec:	mov	x29, sp
  41adf0:	str	x0, [sp, #24]
  41adf4:	str	x1, [sp, #16]
  41adf8:	bl	402d40 <__errno_location@plt>
  41adfc:	mov	x1, x0
  41ae00:	mov	w0, #0x5f                  	// #95
  41ae04:	str	w0, [x1]
  41ae08:	mov	w0, #0xffffffff            	// #-1
  41ae0c:	ldp	x29, x30, [sp], #32
  41ae10:	ret
  41ae14:	sub	sp, sp, #0x60
  41ae18:	stp	x29, x30, [sp, #32]
  41ae1c:	add	x29, sp, #0x20
  41ae20:	str	x0, [sp, #88]
  41ae24:	str	x1, [sp, #80]
  41ae28:	str	x2, [sp, #72]
  41ae2c:	str	x3, [sp, #64]
  41ae30:	str	x4, [sp, #56]
  41ae34:	str	x5, [sp, #48]
  41ae38:	ldr	x0, [sp, #80]
  41ae3c:	cmp	x0, #0x0
  41ae40:	b.eq	41ae64 <wcrtomb@plt+0x18074>  // b.none
  41ae44:	ldr	x4, [sp, #64]
  41ae48:	ldr	x3, [sp, #72]
  41ae4c:	ldr	x2, [sp, #80]
  41ae50:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  41ae54:	add	x1, x0, #0xe18
  41ae58:	ldr	x0, [sp, #88]
  41ae5c:	bl	402db0 <fprintf@plt>
  41ae60:	b	41ae7c <wcrtomb@plt+0x1808c>
  41ae64:	ldr	x3, [sp, #64]
  41ae68:	ldr	x2, [sp, #72]
  41ae6c:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  41ae70:	add	x1, x0, #0xe28
  41ae74:	ldr	x0, [sp, #88]
  41ae78:	bl	402db0 <fprintf@plt>
  41ae7c:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  41ae80:	add	x0, x0, #0xe30
  41ae84:	bl	402d80 <gettext@plt>
  41ae88:	mov	w3, #0x7e4                 	// #2020
  41ae8c:	mov	x2, x0
  41ae90:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  41ae94:	add	x1, x0, #0x158
  41ae98:	ldr	x0, [sp, #88]
  41ae9c:	bl	402db0 <fprintf@plt>
  41aea0:	ldr	x1, [sp, #88]
  41aea4:	mov	w0, #0xa                   	// #10
  41aea8:	bl	402c50 <fputc_unlocked@plt>
  41aeac:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  41aeb0:	add	x0, x0, #0xe38
  41aeb4:	bl	402d80 <gettext@plt>
  41aeb8:	mov	x1, x0
  41aebc:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  41aec0:	add	x2, x0, #0xee8
  41aec4:	ldr	x0, [sp, #88]
  41aec8:	bl	402db0 <fprintf@plt>
  41aecc:	ldr	x1, [sp, #88]
  41aed0:	mov	w0, #0xa                   	// #10
  41aed4:	bl	402c50 <fputc_unlocked@plt>
  41aed8:	ldr	x0, [sp, #48]
  41aedc:	cmp	x0, #0x9
  41aee0:	b.eq	41b2b4 <wcrtomb@plt+0x184c4>  // b.none
  41aee4:	ldr	x0, [sp, #48]
  41aee8:	cmp	x0, #0x9
  41aeec:	b.hi	41b34c <wcrtomb@plt+0x1855c>  // b.pmore
  41aef0:	ldr	x0, [sp, #48]
  41aef4:	cmp	x0, #0x8
  41aef8:	b.eq	41b230 <wcrtomb@plt+0x18440>  // b.none
  41aefc:	ldr	x0, [sp, #48]
  41af00:	cmp	x0, #0x8
  41af04:	b.hi	41b34c <wcrtomb@plt+0x1855c>  // b.pmore
  41af08:	ldr	x0, [sp, #48]
  41af0c:	cmp	x0, #0x7
  41af10:	b.eq	41b1a4 <wcrtomb@plt+0x183b4>  // b.none
  41af14:	ldr	x0, [sp, #48]
  41af18:	cmp	x0, #0x7
  41af1c:	b.hi	41b34c <wcrtomb@plt+0x1855c>  // b.pmore
  41af20:	ldr	x0, [sp, #48]
  41af24:	cmp	x0, #0x6
  41af28:	b.eq	41b128 <wcrtomb@plt+0x18338>  // b.none
  41af2c:	ldr	x0, [sp, #48]
  41af30:	cmp	x0, #0x6
  41af34:	b.hi	41b34c <wcrtomb@plt+0x1855c>  // b.pmore
  41af38:	ldr	x0, [sp, #48]
  41af3c:	cmp	x0, #0x5
  41af40:	b.eq	41b0bc <wcrtomb@plt+0x182cc>  // b.none
  41af44:	ldr	x0, [sp, #48]
  41af48:	cmp	x0, #0x5
  41af4c:	b.hi	41b34c <wcrtomb@plt+0x1855c>  // b.pmore
  41af50:	ldr	x0, [sp, #48]
  41af54:	cmp	x0, #0x4
  41af58:	b.eq	41b060 <wcrtomb@plt+0x18270>  // b.none
  41af5c:	ldr	x0, [sp, #48]
  41af60:	cmp	x0, #0x4
  41af64:	b.hi	41b34c <wcrtomb@plt+0x1855c>  // b.pmore
  41af68:	ldr	x0, [sp, #48]
  41af6c:	cmp	x0, #0x3
  41af70:	b.eq	41b014 <wcrtomb@plt+0x18224>  // b.none
  41af74:	ldr	x0, [sp, #48]
  41af78:	cmp	x0, #0x3
  41af7c:	b.hi	41b34c <wcrtomb@plt+0x1855c>  // b.pmore
  41af80:	ldr	x0, [sp, #48]
  41af84:	cmp	x0, #0x2
  41af88:	b.eq	41afd8 <wcrtomb@plt+0x181e8>  // b.none
  41af8c:	ldr	x0, [sp, #48]
  41af90:	cmp	x0, #0x2
  41af94:	b.hi	41b34c <wcrtomb@plt+0x1855c>  // b.pmore
  41af98:	ldr	x0, [sp, #48]
  41af9c:	cmp	x0, #0x0
  41afa0:	b.eq	41b3e4 <wcrtomb@plt+0x185f4>  // b.none
  41afa4:	ldr	x0, [sp, #48]
  41afa8:	cmp	x0, #0x1
  41afac:	b.ne	41b34c <wcrtomb@plt+0x1855c>  // b.any
  41afb0:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  41afb4:	add	x0, x0, #0xf10
  41afb8:	bl	402d80 <gettext@plt>
  41afbc:	mov	x1, x0
  41afc0:	ldr	x0, [sp, #56]
  41afc4:	ldr	x0, [x0]
  41afc8:	mov	x2, x0
  41afcc:	ldr	x0, [sp, #88]
  41afd0:	bl	402db0 <fprintf@plt>
  41afd4:	b	41b3e8 <wcrtomb@plt+0x185f8>
  41afd8:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  41afdc:	add	x0, x0, #0xf20
  41afe0:	bl	402d80 <gettext@plt>
  41afe4:	mov	x4, x0
  41afe8:	ldr	x0, [sp, #56]
  41afec:	ldr	x1, [x0]
  41aff0:	ldr	x0, [sp, #56]
  41aff4:	add	x0, x0, #0x8
  41aff8:	ldr	x0, [x0]
  41affc:	mov	x3, x0
  41b000:	mov	x2, x1
  41b004:	mov	x1, x4
  41b008:	ldr	x0, [sp, #88]
  41b00c:	bl	402db0 <fprintf@plt>
  41b010:	b	41b3e8 <wcrtomb@plt+0x185f8>
  41b014:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  41b018:	add	x0, x0, #0xf38
  41b01c:	bl	402d80 <gettext@plt>
  41b020:	mov	x5, x0
  41b024:	ldr	x0, [sp, #56]
  41b028:	ldr	x1, [x0]
  41b02c:	ldr	x0, [sp, #56]
  41b030:	add	x0, x0, #0x8
  41b034:	ldr	x2, [x0]
  41b038:	ldr	x0, [sp, #56]
  41b03c:	add	x0, x0, #0x10
  41b040:	ldr	x0, [x0]
  41b044:	mov	x4, x0
  41b048:	mov	x3, x2
  41b04c:	mov	x2, x1
  41b050:	mov	x1, x5
  41b054:	ldr	x0, [sp, #88]
  41b058:	bl	402db0 <fprintf@plt>
  41b05c:	b	41b3e8 <wcrtomb@plt+0x185f8>
  41b060:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  41b064:	add	x0, x0, #0xf58
  41b068:	bl	402d80 <gettext@plt>
  41b06c:	mov	x6, x0
  41b070:	ldr	x0, [sp, #56]
  41b074:	ldr	x1, [x0]
  41b078:	ldr	x0, [sp, #56]
  41b07c:	add	x0, x0, #0x8
  41b080:	ldr	x2, [x0]
  41b084:	ldr	x0, [sp, #56]
  41b088:	add	x0, x0, #0x10
  41b08c:	ldr	x3, [x0]
  41b090:	ldr	x0, [sp, #56]
  41b094:	add	x0, x0, #0x18
  41b098:	ldr	x0, [x0]
  41b09c:	mov	x5, x0
  41b0a0:	mov	x4, x3
  41b0a4:	mov	x3, x2
  41b0a8:	mov	x2, x1
  41b0ac:	mov	x1, x6
  41b0b0:	ldr	x0, [sp, #88]
  41b0b4:	bl	402db0 <fprintf@plt>
  41b0b8:	b	41b3e8 <wcrtomb@plt+0x185f8>
  41b0bc:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  41b0c0:	add	x0, x0, #0xf78
  41b0c4:	bl	402d80 <gettext@plt>
  41b0c8:	mov	x7, x0
  41b0cc:	ldr	x0, [sp, #56]
  41b0d0:	ldr	x1, [x0]
  41b0d4:	ldr	x0, [sp, #56]
  41b0d8:	add	x0, x0, #0x8
  41b0dc:	ldr	x2, [x0]
  41b0e0:	ldr	x0, [sp, #56]
  41b0e4:	add	x0, x0, #0x10
  41b0e8:	ldr	x3, [x0]
  41b0ec:	ldr	x0, [sp, #56]
  41b0f0:	add	x0, x0, #0x18
  41b0f4:	ldr	x4, [x0]
  41b0f8:	ldr	x0, [sp, #56]
  41b0fc:	add	x0, x0, #0x20
  41b100:	ldr	x0, [x0]
  41b104:	mov	x6, x0
  41b108:	mov	x5, x4
  41b10c:	mov	x4, x3
  41b110:	mov	x3, x2
  41b114:	mov	x2, x1
  41b118:	mov	x1, x7
  41b11c:	ldr	x0, [sp, #88]
  41b120:	bl	402db0 <fprintf@plt>
  41b124:	b	41b3e8 <wcrtomb@plt+0x185f8>
  41b128:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  41b12c:	add	x0, x0, #0xfa0
  41b130:	bl	402d80 <gettext@plt>
  41b134:	mov	x8, x0
  41b138:	ldr	x0, [sp, #56]
  41b13c:	ldr	x1, [x0]
  41b140:	ldr	x0, [sp, #56]
  41b144:	add	x0, x0, #0x8
  41b148:	ldr	x2, [x0]
  41b14c:	ldr	x0, [sp, #56]
  41b150:	add	x0, x0, #0x10
  41b154:	ldr	x3, [x0]
  41b158:	ldr	x0, [sp, #56]
  41b15c:	add	x0, x0, #0x18
  41b160:	ldr	x4, [x0]
  41b164:	ldr	x0, [sp, #56]
  41b168:	add	x0, x0, #0x20
  41b16c:	ldr	x5, [x0]
  41b170:	ldr	x0, [sp, #56]
  41b174:	add	x0, x0, #0x28
  41b178:	ldr	x0, [x0]
  41b17c:	mov	x7, x0
  41b180:	mov	x6, x5
  41b184:	mov	x5, x4
  41b188:	mov	x4, x3
  41b18c:	mov	x3, x2
  41b190:	mov	x2, x1
  41b194:	mov	x1, x8
  41b198:	ldr	x0, [sp, #88]
  41b19c:	bl	402db0 <fprintf@plt>
  41b1a0:	b	41b3e8 <wcrtomb@plt+0x185f8>
  41b1a4:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  41b1a8:	add	x0, x0, #0xfc8
  41b1ac:	bl	402d80 <gettext@plt>
  41b1b0:	mov	x8, x0
  41b1b4:	ldr	x0, [sp, #56]
  41b1b8:	ldr	x1, [x0]
  41b1bc:	ldr	x0, [sp, #56]
  41b1c0:	add	x0, x0, #0x8
  41b1c4:	ldr	x2, [x0]
  41b1c8:	ldr	x0, [sp, #56]
  41b1cc:	add	x0, x0, #0x10
  41b1d0:	ldr	x3, [x0]
  41b1d4:	ldr	x0, [sp, #56]
  41b1d8:	add	x0, x0, #0x18
  41b1dc:	ldr	x4, [x0]
  41b1e0:	ldr	x0, [sp, #56]
  41b1e4:	add	x0, x0, #0x20
  41b1e8:	ldr	x5, [x0]
  41b1ec:	ldr	x0, [sp, #56]
  41b1f0:	add	x0, x0, #0x28
  41b1f4:	ldr	x6, [x0]
  41b1f8:	ldr	x0, [sp, #56]
  41b1fc:	add	x0, x0, #0x30
  41b200:	ldr	x0, [x0]
  41b204:	str	x0, [sp]
  41b208:	mov	x7, x6
  41b20c:	mov	x6, x5
  41b210:	mov	x5, x4
  41b214:	mov	x4, x3
  41b218:	mov	x3, x2
  41b21c:	mov	x2, x1
  41b220:	mov	x1, x8
  41b224:	ldr	x0, [sp, #88]
  41b228:	bl	402db0 <fprintf@plt>
  41b22c:	b	41b3e8 <wcrtomb@plt+0x185f8>
  41b230:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x19e20>
  41b234:	add	x0, x0, #0xff8
  41b238:	bl	402d80 <gettext@plt>
  41b23c:	mov	x8, x0
  41b240:	ldr	x0, [sp, #56]
  41b244:	ldr	x2, [x0]
  41b248:	ldr	x0, [sp, #56]
  41b24c:	add	x0, x0, #0x8
  41b250:	ldr	x3, [x0]
  41b254:	ldr	x0, [sp, #56]
  41b258:	add	x0, x0, #0x10
  41b25c:	ldr	x4, [x0]
  41b260:	ldr	x0, [sp, #56]
  41b264:	add	x0, x0, #0x18
  41b268:	ldr	x5, [x0]
  41b26c:	ldr	x0, [sp, #56]
  41b270:	add	x0, x0, #0x20
  41b274:	ldr	x6, [x0]
  41b278:	ldr	x0, [sp, #56]
  41b27c:	add	x0, x0, #0x28
  41b280:	ldr	x7, [x0]
  41b284:	ldr	x0, [sp, #56]
  41b288:	add	x0, x0, #0x30
  41b28c:	ldr	x0, [x0]
  41b290:	ldr	x1, [sp, #56]
  41b294:	add	x1, x1, #0x38
  41b298:	ldr	x1, [x1]
  41b29c:	str	x1, [sp, #8]
  41b2a0:	str	x0, [sp]
  41b2a4:	mov	x1, x8
  41b2a8:	ldr	x0, [sp, #88]
  41b2ac:	bl	402db0 <fprintf@plt>
  41b2b0:	b	41b3e8 <wcrtomb@plt+0x185f8>
  41b2b4:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  41b2b8:	add	x0, x0, #0x28
  41b2bc:	bl	402d80 <gettext@plt>
  41b2c0:	mov	x9, x0
  41b2c4:	ldr	x0, [sp, #56]
  41b2c8:	ldr	x8, [x0]
  41b2cc:	ldr	x0, [sp, #56]
  41b2d0:	add	x0, x0, #0x8
  41b2d4:	ldr	x3, [x0]
  41b2d8:	ldr	x0, [sp, #56]
  41b2dc:	add	x0, x0, #0x10
  41b2e0:	ldr	x4, [x0]
  41b2e4:	ldr	x0, [sp, #56]
  41b2e8:	add	x0, x0, #0x18
  41b2ec:	ldr	x5, [x0]
  41b2f0:	ldr	x0, [sp, #56]
  41b2f4:	add	x0, x0, #0x20
  41b2f8:	ldr	x6, [x0]
  41b2fc:	ldr	x0, [sp, #56]
  41b300:	add	x0, x0, #0x28
  41b304:	ldr	x7, [x0]
  41b308:	ldr	x0, [sp, #56]
  41b30c:	add	x0, x0, #0x30
  41b310:	ldr	x0, [x0]
  41b314:	ldr	x1, [sp, #56]
  41b318:	add	x1, x1, #0x38
  41b31c:	ldr	x1, [x1]
  41b320:	ldr	x2, [sp, #56]
  41b324:	add	x2, x2, #0x40
  41b328:	ldr	x2, [x2]
  41b32c:	str	x2, [sp, #16]
  41b330:	str	x1, [sp, #8]
  41b334:	str	x0, [sp]
  41b338:	mov	x2, x8
  41b33c:	mov	x1, x9
  41b340:	ldr	x0, [sp, #88]
  41b344:	bl	402db0 <fprintf@plt>
  41b348:	b	41b3e8 <wcrtomb@plt+0x185f8>
  41b34c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  41b350:	add	x0, x0, #0x60
  41b354:	bl	402d80 <gettext@plt>
  41b358:	mov	x9, x0
  41b35c:	ldr	x0, [sp, #56]
  41b360:	ldr	x8, [x0]
  41b364:	ldr	x0, [sp, #56]
  41b368:	add	x0, x0, #0x8
  41b36c:	ldr	x3, [x0]
  41b370:	ldr	x0, [sp, #56]
  41b374:	add	x0, x0, #0x10
  41b378:	ldr	x4, [x0]
  41b37c:	ldr	x0, [sp, #56]
  41b380:	add	x0, x0, #0x18
  41b384:	ldr	x5, [x0]
  41b388:	ldr	x0, [sp, #56]
  41b38c:	add	x0, x0, #0x20
  41b390:	ldr	x6, [x0]
  41b394:	ldr	x0, [sp, #56]
  41b398:	add	x0, x0, #0x28
  41b39c:	ldr	x7, [x0]
  41b3a0:	ldr	x0, [sp, #56]
  41b3a4:	add	x0, x0, #0x30
  41b3a8:	ldr	x0, [x0]
  41b3ac:	ldr	x1, [sp, #56]
  41b3b0:	add	x1, x1, #0x38
  41b3b4:	ldr	x1, [x1]
  41b3b8:	ldr	x2, [sp, #56]
  41b3bc:	add	x2, x2, #0x40
  41b3c0:	ldr	x2, [x2]
  41b3c4:	str	x2, [sp, #16]
  41b3c8:	str	x1, [sp, #8]
  41b3cc:	str	x0, [sp]
  41b3d0:	mov	x2, x8
  41b3d4:	mov	x1, x9
  41b3d8:	ldr	x0, [sp, #88]
  41b3dc:	bl	402db0 <fprintf@plt>
  41b3e0:	b	41b3e8 <wcrtomb@plt+0x185f8>
  41b3e4:	nop
  41b3e8:	nop
  41b3ec:	ldp	x29, x30, [sp, #32]
  41b3f0:	add	sp, sp, #0x60
  41b3f4:	ret
  41b3f8:	stp	x29, x30, [sp, #-80]!
  41b3fc:	mov	x29, sp
  41b400:	str	x0, [sp, #56]
  41b404:	str	x1, [sp, #48]
  41b408:	str	x2, [sp, #40]
  41b40c:	str	x3, [sp, #32]
  41b410:	str	x4, [sp, #24]
  41b414:	str	xzr, [sp, #72]
  41b418:	b	41b428 <wcrtomb@plt+0x18638>
  41b41c:	ldr	x0, [sp, #72]
  41b420:	add	x0, x0, #0x1
  41b424:	str	x0, [sp, #72]
  41b428:	ldr	x0, [sp, #72]
  41b42c:	lsl	x0, x0, #3
  41b430:	ldr	x1, [sp, #24]
  41b434:	add	x0, x1, x0
  41b438:	ldr	x0, [x0]
  41b43c:	cmp	x0, #0x0
  41b440:	b.ne	41b41c <wcrtomb@plt+0x1862c>  // b.any
  41b444:	ldr	x5, [sp, #72]
  41b448:	ldr	x4, [sp, #24]
  41b44c:	ldr	x3, [sp, #32]
  41b450:	ldr	x2, [sp, #40]
  41b454:	ldr	x1, [sp, #48]
  41b458:	ldr	x0, [sp, #56]
  41b45c:	bl	41ae14 <wcrtomb@plt+0x18024>
  41b460:	nop
  41b464:	ldp	x29, x30, [sp], #80
  41b468:	ret
  41b46c:	stp	x29, x30, [sp, #-160]!
  41b470:	mov	x29, sp
  41b474:	str	x19, [sp, #16]
  41b478:	str	x0, [sp, #56]
  41b47c:	str	x1, [sp, #48]
  41b480:	str	x2, [sp, #40]
  41b484:	str	x3, [sp, #32]
  41b488:	mov	x19, x4
  41b48c:	str	xzr, [sp, #152]
  41b490:	b	41b4a0 <wcrtomb@plt+0x186b0>
  41b494:	ldr	x0, [sp, #152]
  41b498:	add	x0, x0, #0x1
  41b49c:	str	x0, [sp, #152]
  41b4a0:	ldr	x0, [sp, #152]
  41b4a4:	cmp	x0, #0x9
  41b4a8:	b.hi	41b528 <wcrtomb@plt+0x18738>  // b.pmore
  41b4ac:	ldr	w1, [x19, #24]
  41b4b0:	ldr	x0, [x19]
  41b4b4:	cmp	w1, #0x0
  41b4b8:	b.lt	41b4cc <wcrtomb@plt+0x186dc>  // b.tstop
  41b4bc:	add	x1, x0, #0xf
  41b4c0:	and	x1, x1, #0xfffffffffffffff8
  41b4c4:	str	x1, [x19]
  41b4c8:	b	41b4fc <wcrtomb@plt+0x1870c>
  41b4cc:	add	w2, w1, #0x8
  41b4d0:	str	w2, [x19, #24]
  41b4d4:	ldr	w2, [x19, #24]
  41b4d8:	cmp	w2, #0x0
  41b4dc:	b.le	41b4f0 <wcrtomb@plt+0x18700>
  41b4e0:	add	x1, x0, #0xf
  41b4e4:	and	x1, x1, #0xfffffffffffffff8
  41b4e8:	str	x1, [x19]
  41b4ec:	b	41b4fc <wcrtomb@plt+0x1870c>
  41b4f0:	ldr	x2, [x19, #8]
  41b4f4:	sxtw	x0, w1
  41b4f8:	add	x0, x2, x0
  41b4fc:	ldr	x2, [x0]
  41b500:	ldr	x0, [sp, #152]
  41b504:	lsl	x0, x0, #3
  41b508:	add	x1, sp, #0x48
  41b50c:	str	x2, [x1, x0]
  41b510:	ldr	x0, [sp, #152]
  41b514:	lsl	x0, x0, #3
  41b518:	add	x1, sp, #0x48
  41b51c:	ldr	x0, [x1, x0]
  41b520:	cmp	x0, #0x0
  41b524:	b.ne	41b494 <wcrtomb@plt+0x186a4>  // b.any
  41b528:	add	x0, sp, #0x48
  41b52c:	ldr	x5, [sp, #152]
  41b530:	mov	x4, x0
  41b534:	ldr	x3, [sp, #32]
  41b538:	ldr	x2, [sp, #40]
  41b53c:	ldr	x1, [sp, #48]
  41b540:	ldr	x0, [sp, #56]
  41b544:	bl	41ae14 <wcrtomb@plt+0x18024>
  41b548:	nop
  41b54c:	ldr	x19, [sp, #16]
  41b550:	ldp	x29, x30, [sp], #160
  41b554:	ret
  41b558:	stp	x29, x30, [sp, #-272]!
  41b55c:	mov	x29, sp
  41b560:	str	x0, [sp, #72]
  41b564:	str	x1, [sp, #64]
  41b568:	str	x2, [sp, #56]
  41b56c:	str	x3, [sp, #48]
  41b570:	str	x4, [sp, #240]
  41b574:	str	x5, [sp, #248]
  41b578:	str	x6, [sp, #256]
  41b57c:	str	x7, [sp, #264]
  41b580:	str	q0, [sp, #112]
  41b584:	str	q1, [sp, #128]
  41b588:	str	q2, [sp, #144]
  41b58c:	str	q3, [sp, #160]
  41b590:	str	q4, [sp, #176]
  41b594:	str	q5, [sp, #192]
  41b598:	str	q6, [sp, #208]
  41b59c:	str	q7, [sp, #224]
  41b5a0:	add	x0, sp, #0x110
  41b5a4:	str	x0, [sp, #80]
  41b5a8:	add	x0, sp, #0x110
  41b5ac:	str	x0, [sp, #88]
  41b5b0:	add	x0, sp, #0xf0
  41b5b4:	str	x0, [sp, #96]
  41b5b8:	mov	w0, #0xffffffe0            	// #-32
  41b5bc:	str	w0, [sp, #104]
  41b5c0:	mov	w0, #0xffffff80            	// #-128
  41b5c4:	str	w0, [sp, #108]
  41b5c8:	add	x2, sp, #0x10
  41b5cc:	add	x3, sp, #0x50
  41b5d0:	ldp	x0, x1, [x3]
  41b5d4:	stp	x0, x1, [x2]
  41b5d8:	ldp	x0, x1, [x3, #16]
  41b5dc:	stp	x0, x1, [x2, #16]
  41b5e0:	add	x0, sp, #0x10
  41b5e4:	mov	x4, x0
  41b5e8:	ldr	x3, [sp, #48]
  41b5ec:	ldr	x2, [sp, #56]
  41b5f0:	ldr	x1, [sp, #64]
  41b5f4:	ldr	x0, [sp, #72]
  41b5f8:	bl	41b46c <wcrtomb@plt+0x1867c>
  41b5fc:	nop
  41b600:	ldp	x29, x30, [sp], #272
  41b604:	ret
  41b608:	stp	x29, x30, [sp, #-16]!
  41b60c:	mov	x29, sp
  41b610:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41b614:	add	x0, x0, #0x520
  41b618:	ldr	x0, [x0]
  41b61c:	mov	x1, x0
  41b620:	mov	w0, #0xa                   	// #10
  41b624:	bl	402c50 <fputc_unlocked@plt>
  41b628:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  41b62c:	add	x0, x0, #0xa0
  41b630:	bl	402d80 <gettext@plt>
  41b634:	mov	x2, x0
  41b638:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  41b63c:	add	x1, x0, #0xb8
  41b640:	mov	x0, x2
  41b644:	bl	402d20 <printf@plt>
  41b648:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  41b64c:	add	x0, x0, #0xc8
  41b650:	bl	402d80 <gettext@plt>
  41b654:	mov	x3, x0
  41b658:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  41b65c:	add	x2, x0, #0xe0
  41b660:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  41b664:	add	x1, x0, #0x108
  41b668:	mov	x0, x3
  41b66c:	bl	402d20 <printf@plt>
  41b670:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  41b674:	add	x0, x0, #0x110
  41b678:	bl	402d80 <gettext@plt>
  41b67c:	mov	x2, x0
  41b680:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  41b684:	add	x1, x0, #0x138
  41b688:	mov	x0, x2
  41b68c:	bl	402d20 <printf@plt>
  41b690:	nop
  41b694:	ldp	x29, x30, [sp], #16
  41b698:	ret
  41b69c:	stp	x29, x30, [sp, #-32]!
  41b6a0:	mov	x29, sp
  41b6a4:	str	x0, [sp, #24]
  41b6a8:	str	x1, [sp, #16]
  41b6ac:	mov	x0, #0x0                   	// #0
  41b6b0:	ldr	x6, [sp, #24]
  41b6b4:	ldr	x1, [sp, #16]
  41b6b8:	mul	x7, x6, x1
  41b6bc:	umulh	x1, x6, x1
  41b6c0:	mov	x2, x7
  41b6c4:	mov	x3, x1
  41b6c8:	mov	x4, x3
  41b6cc:	mov	x5, #0x0                   	// #0
  41b6d0:	cmp	x4, #0x0
  41b6d4:	b.eq	41b6dc <wcrtomb@plt+0x188ec>  // b.none
  41b6d8:	mov	x0, #0x1                   	// #1
  41b6dc:	cmp	x2, #0x0
  41b6e0:	b.ge	41b6e8 <wcrtomb@plt+0x188f8>  // b.tcont
  41b6e4:	mov	x0, #0x1                   	// #1
  41b6e8:	and	w0, w0, #0x1
  41b6ec:	and	w0, w0, #0xff
  41b6f0:	cmp	w0, #0x0
  41b6f4:	b.eq	41b6fc <wcrtomb@plt+0x1890c>  // b.none
  41b6f8:	bl	41baa8 <wcrtomb@plt+0x18cb8>
  41b6fc:	ldr	x1, [sp, #24]
  41b700:	ldr	x0, [sp, #16]
  41b704:	mul	x0, x1, x0
  41b708:	bl	41b8d0 <wcrtomb@plt+0x18ae0>
  41b70c:	ldp	x29, x30, [sp], #32
  41b710:	ret
  41b714:	stp	x29, x30, [sp, #-48]!
  41b718:	mov	x29, sp
  41b71c:	str	x0, [sp, #40]
  41b720:	str	x1, [sp, #32]
  41b724:	str	x2, [sp, #24]
  41b728:	mov	x0, #0x0                   	// #0
  41b72c:	ldr	x2, [sp, #32]
  41b730:	ldr	x1, [sp, #24]
  41b734:	mul	x3, x2, x1
  41b738:	umulh	x1, x2, x1
  41b73c:	mov	x4, x3
  41b740:	mov	x5, x1
  41b744:	mov	x6, x5
  41b748:	mov	x7, #0x0                   	// #0
  41b74c:	cmp	x6, #0x0
  41b750:	b.eq	41b758 <wcrtomb@plt+0x18968>  // b.none
  41b754:	mov	x0, #0x1                   	// #1
  41b758:	cmp	x4, #0x0
  41b75c:	b.ge	41b764 <wcrtomb@plt+0x18974>  // b.tcont
  41b760:	mov	x0, #0x1                   	// #1
  41b764:	and	w0, w0, #0x1
  41b768:	and	w0, w0, #0xff
  41b76c:	cmp	w0, #0x0
  41b770:	b.eq	41b778 <wcrtomb@plt+0x18988>  // b.none
  41b774:	bl	41baa8 <wcrtomb@plt+0x18cb8>
  41b778:	ldr	x1, [sp, #32]
  41b77c:	ldr	x0, [sp, #24]
  41b780:	mul	x0, x1, x0
  41b784:	mov	x1, x0
  41b788:	ldr	x0, [sp, #40]
  41b78c:	bl	41b910 <wcrtomb@plt+0x18b20>
  41b790:	ldp	x29, x30, [sp], #48
  41b794:	ret
  41b798:	stp	x29, x30, [sp, #-64]!
  41b79c:	mov	x29, sp
  41b7a0:	str	x0, [sp, #40]
  41b7a4:	str	x1, [sp, #32]
  41b7a8:	str	x2, [sp, #24]
  41b7ac:	ldr	x0, [sp, #32]
  41b7b0:	ldr	x0, [x0]
  41b7b4:	str	x0, [sp, #56]
  41b7b8:	ldr	x0, [sp, #40]
  41b7bc:	cmp	x0, #0x0
  41b7c0:	b.ne	41b850 <wcrtomb@plt+0x18a60>  // b.any
  41b7c4:	ldr	x0, [sp, #56]
  41b7c8:	cmp	x0, #0x0
  41b7cc:	b.ne	41b800 <wcrtomb@plt+0x18a10>  // b.any
  41b7d0:	mov	x1, #0x80                  	// #128
  41b7d4:	ldr	x0, [sp, #24]
  41b7d8:	udiv	x0, x1, x0
  41b7dc:	str	x0, [sp, #56]
  41b7e0:	ldr	x0, [sp, #56]
  41b7e4:	cmp	x0, #0x0
  41b7e8:	cset	w0, eq  // eq = none
  41b7ec:	and	w0, w0, #0xff
  41b7f0:	and	x0, x0, #0xff
  41b7f4:	ldr	x1, [sp, #56]
  41b7f8:	add	x0, x1, x0
  41b7fc:	str	x0, [sp, #56]
  41b800:	mov	x0, #0x0                   	// #0
  41b804:	ldr	x2, [sp, #56]
  41b808:	ldr	x1, [sp, #24]
  41b80c:	mul	x3, x2, x1
  41b810:	umulh	x1, x2, x1
  41b814:	mov	x4, x3
  41b818:	mov	x5, x1
  41b81c:	mov	x6, x5
  41b820:	mov	x7, #0x0                   	// #0
  41b824:	cmp	x6, #0x0
  41b828:	b.eq	41b830 <wcrtomb@plt+0x18a40>  // b.none
  41b82c:	mov	x0, #0x1                   	// #1
  41b830:	cmp	x4, #0x0
  41b834:	b.ge	41b83c <wcrtomb@plt+0x18a4c>  // b.tcont
  41b838:	mov	x0, #0x1                   	// #1
  41b83c:	and	w0, w0, #0x1
  41b840:	and	w0, w0, #0xff
  41b844:	cmp	w0, #0x0
  41b848:	b.eq	41b888 <wcrtomb@plt+0x18a98>  // b.none
  41b84c:	bl	41baa8 <wcrtomb@plt+0x18cb8>
  41b850:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  41b854:	movk	x1, #0x5554
  41b858:	ldr	x0, [sp, #24]
  41b85c:	udiv	x0, x1, x0
  41b860:	ldr	x1, [sp, #56]
  41b864:	cmp	x1, x0
  41b868:	b.cc	41b870 <wcrtomb@plt+0x18a80>  // b.lo, b.ul, b.last
  41b86c:	bl	41baa8 <wcrtomb@plt+0x18cb8>
  41b870:	ldr	x0, [sp, #56]
  41b874:	lsr	x1, x0, #1
  41b878:	ldr	x0, [sp, #56]
  41b87c:	add	x0, x1, x0
  41b880:	add	x0, x0, #0x1
  41b884:	str	x0, [sp, #56]
  41b888:	ldr	x0, [sp, #32]
  41b88c:	ldr	x1, [sp, #56]
  41b890:	str	x1, [x0]
  41b894:	ldr	x1, [sp, #56]
  41b898:	ldr	x0, [sp, #24]
  41b89c:	mul	x0, x1, x0
  41b8a0:	mov	x1, x0
  41b8a4:	ldr	x0, [sp, #40]
  41b8a8:	bl	41b910 <wcrtomb@plt+0x18b20>
  41b8ac:	ldp	x29, x30, [sp], #64
  41b8b0:	ret
  41b8b4:	stp	x29, x30, [sp, #-32]!
  41b8b8:	mov	x29, sp
  41b8bc:	str	x0, [sp, #24]
  41b8c0:	ldr	x0, [sp, #24]
  41b8c4:	bl	41b8d0 <wcrtomb@plt+0x18ae0>
  41b8c8:	ldp	x29, x30, [sp], #32
  41b8cc:	ret
  41b8d0:	stp	x29, x30, [sp, #-48]!
  41b8d4:	mov	x29, sp
  41b8d8:	str	x0, [sp, #24]
  41b8dc:	ldr	x0, [sp, #24]
  41b8e0:	bl	4028b0 <malloc@plt>
  41b8e4:	str	x0, [sp, #40]
  41b8e8:	ldr	x0, [sp, #40]
  41b8ec:	cmp	x0, #0x0
  41b8f0:	b.ne	41b904 <wcrtomb@plt+0x18b14>  // b.any
  41b8f4:	ldr	x0, [sp, #24]
  41b8f8:	cmp	x0, #0x0
  41b8fc:	b.eq	41b904 <wcrtomb@plt+0x18b14>  // b.none
  41b900:	bl	41baa8 <wcrtomb@plt+0x18cb8>
  41b904:	ldr	x0, [sp, #40]
  41b908:	ldp	x29, x30, [sp], #48
  41b90c:	ret
  41b910:	stp	x29, x30, [sp, #-32]!
  41b914:	mov	x29, sp
  41b918:	str	x0, [sp, #24]
  41b91c:	str	x1, [sp, #16]
  41b920:	ldr	x0, [sp, #16]
  41b924:	cmp	x0, #0x0
  41b928:	b.ne	41b948 <wcrtomb@plt+0x18b58>  // b.any
  41b92c:	ldr	x0, [sp, #24]
  41b930:	cmp	x0, #0x0
  41b934:	b.eq	41b948 <wcrtomb@plt+0x18b58>  // b.none
  41b938:	ldr	x0, [sp, #24]
  41b93c:	bl	402b60 <free@plt>
  41b940:	mov	x0, #0x0                   	// #0
  41b944:	b	41b978 <wcrtomb@plt+0x18b88>
  41b948:	ldr	x1, [sp, #16]
  41b94c:	ldr	x0, [sp, #24]
  41b950:	bl	4029e0 <realloc@plt>
  41b954:	str	x0, [sp, #24]
  41b958:	ldr	x0, [sp, #24]
  41b95c:	cmp	x0, #0x0
  41b960:	b.ne	41b974 <wcrtomb@plt+0x18b84>  // b.any
  41b964:	ldr	x0, [sp, #16]
  41b968:	cmp	x0, #0x0
  41b96c:	b.eq	41b974 <wcrtomb@plt+0x18b84>  // b.none
  41b970:	bl	41baa8 <wcrtomb@plt+0x18cb8>
  41b974:	ldr	x0, [sp, #24]
  41b978:	ldp	x29, x30, [sp], #32
  41b97c:	ret
  41b980:	stp	x29, x30, [sp, #-32]!
  41b984:	mov	x29, sp
  41b988:	str	x0, [sp, #24]
  41b98c:	str	x1, [sp, #16]
  41b990:	mov	x2, #0x1                   	// #1
  41b994:	ldr	x1, [sp, #16]
  41b998:	ldr	x0, [sp, #24]
  41b99c:	bl	41b798 <wcrtomb@plt+0x189a8>
  41b9a0:	ldp	x29, x30, [sp], #32
  41b9a4:	ret
  41b9a8:	stp	x29, x30, [sp, #-32]!
  41b9ac:	mov	x29, sp
  41b9b0:	str	x0, [sp, #24]
  41b9b4:	mov	x1, #0x1                   	// #1
  41b9b8:	ldr	x0, [sp, #24]
  41b9bc:	bl	41b9c8 <wcrtomb@plt+0x18bd8>
  41b9c0:	ldp	x29, x30, [sp], #32
  41b9c4:	ret
  41b9c8:	stp	x29, x30, [sp, #-48]!
  41b9cc:	mov	x29, sp
  41b9d0:	str	x0, [sp, #24]
  41b9d4:	str	x1, [sp, #16]
  41b9d8:	mov	x0, #0x0                   	// #0
  41b9dc:	ldr	x6, [sp, #24]
  41b9e0:	ldr	x1, [sp, #16]
  41b9e4:	mul	x7, x6, x1
  41b9e8:	umulh	x1, x6, x1
  41b9ec:	mov	x2, x7
  41b9f0:	mov	x3, x1
  41b9f4:	mov	x4, x3
  41b9f8:	mov	x5, #0x0                   	// #0
  41b9fc:	cmp	x4, #0x0
  41ba00:	b.eq	41ba08 <wcrtomb@plt+0x18c18>  // b.none
  41ba04:	mov	x0, #0x1                   	// #1
  41ba08:	cmp	x2, #0x0
  41ba0c:	b.ge	41ba14 <wcrtomb@plt+0x18c24>  // b.tcont
  41ba10:	mov	x0, #0x1                   	// #1
  41ba14:	and	w0, w0, #0x1
  41ba18:	and	w0, w0, #0xff
  41ba1c:	cmp	w0, #0x0
  41ba20:	b.ne	41ba40 <wcrtomb@plt+0x18c50>  // b.any
  41ba24:	ldr	x1, [sp, #16]
  41ba28:	ldr	x0, [sp, #24]
  41ba2c:	bl	4029c0 <calloc@plt>
  41ba30:	str	x0, [sp, #40]
  41ba34:	ldr	x0, [sp, #40]
  41ba38:	cmp	x0, #0x0
  41ba3c:	b.ne	41ba44 <wcrtomb@plt+0x18c54>  // b.any
  41ba40:	bl	41baa8 <wcrtomb@plt+0x18cb8>
  41ba44:	ldr	x0, [sp, #40]
  41ba48:	ldp	x29, x30, [sp], #48
  41ba4c:	ret
  41ba50:	stp	x29, x30, [sp, #-32]!
  41ba54:	mov	x29, sp
  41ba58:	str	x0, [sp, #24]
  41ba5c:	str	x1, [sp, #16]
  41ba60:	ldr	x0, [sp, #16]
  41ba64:	bl	41b8d0 <wcrtomb@plt+0x18ae0>
  41ba68:	ldr	x2, [sp, #16]
  41ba6c:	ldr	x1, [sp, #24]
  41ba70:	bl	4026d0 <memcpy@plt>
  41ba74:	ldp	x29, x30, [sp], #32
  41ba78:	ret
  41ba7c:	stp	x29, x30, [sp, #-32]!
  41ba80:	mov	x29, sp
  41ba84:	str	x0, [sp, #24]
  41ba88:	ldr	x0, [sp, #24]
  41ba8c:	bl	402720 <strlen@plt>
  41ba90:	add	x0, x0, #0x1
  41ba94:	mov	x1, x0
  41ba98:	ldr	x0, [sp, #24]
  41ba9c:	bl	41ba50 <wcrtomb@plt+0x18c60>
  41baa0:	ldp	x29, x30, [sp], #32
  41baa4:	ret
  41baa8:	stp	x29, x30, [sp, #-32]!
  41baac:	mov	x29, sp
  41bab0:	str	x19, [sp, #16]
  41bab4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41bab8:	add	x0, x0, #0x4f8
  41babc:	ldr	w19, [x0]
  41bac0:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  41bac4:	add	x0, x0, #0x188
  41bac8:	bl	402d80 <gettext@plt>
  41bacc:	mov	x3, x0
  41bad0:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  41bad4:	add	x2, x0, #0x1a0
  41bad8:	mov	w1, #0x0                   	// #0
  41badc:	mov	w0, w19
  41bae0:	bl	402750 <error@plt>
  41bae4:	bl	402a90 <abort@plt>
  41bae8:	stp	x29, x30, [sp, #-64]!
  41baec:	mov	x29, sp
  41baf0:	str	x0, [sp, #40]
  41baf4:	str	x1, [sp, #32]
  41baf8:	str	x2, [sp, #24]
  41bafc:	str	x3, [sp, #16]
  41bb00:	ldr	x0, [sp, #40]
  41bb04:	cmp	x0, #0x0
  41bb08:	b.ne	41bb14 <wcrtomb@plt+0x18d24>  // b.any
  41bb0c:	add	x0, sp, #0x30
  41bb10:	str	x0, [sp, #40]
  41bb14:	ldr	x3, [sp, #16]
  41bb18:	ldr	x2, [sp, #24]
  41bb1c:	ldr	x1, [sp, #32]
  41bb20:	ldr	x0, [sp, #40]
  41bb24:	bl	4026c0 <mbrtowc@plt>
  41bb28:	str	x0, [sp, #56]
  41bb2c:	ldr	x0, [sp, #56]
  41bb30:	cmn	x0, #0x3
  41bb34:	b.ls	41bb80 <wcrtomb@plt+0x18d90>  // b.plast
  41bb38:	ldr	x0, [sp, #24]
  41bb3c:	cmp	x0, #0x0
  41bb40:	b.eq	41bb80 <wcrtomb@plt+0x18d90>  // b.none
  41bb44:	mov	w0, #0x0                   	// #0
  41bb48:	bl	4341f4 <_obstack_memory_used@@Base+0x18014>
  41bb4c:	and	w0, w0, #0xff
  41bb50:	eor	w0, w0, #0x1
  41bb54:	and	w0, w0, #0xff
  41bb58:	cmp	w0, #0x0
  41bb5c:	b.eq	41bb80 <wcrtomb@plt+0x18d90>  // b.none
  41bb60:	ldr	x0, [sp, #32]
  41bb64:	ldrb	w0, [x0]
  41bb68:	strb	w0, [sp, #55]
  41bb6c:	ldrb	w1, [sp, #55]
  41bb70:	ldr	x0, [sp, #40]
  41bb74:	str	w1, [x0]
  41bb78:	mov	x0, #0x1                   	// #1
  41bb7c:	b	41bb84 <wcrtomb@plt+0x18d94>
  41bb80:	ldr	x0, [sp, #56]
  41bb84:	ldp	x29, x30, [sp], #64
  41bb88:	ret
  41bb8c:	stp	x29, x30, [sp, #-32]!
  41bb90:	mov	x29, sp
  41bb94:	str	x0, [sp, #24]
  41bb98:	str	x1, [sp, #16]
  41bb9c:	ldr	x0, [sp, #24]
  41bba0:	ldrb	w0, [x0, #80]
  41bba4:	and	w0, w0, #0x1
  41bba8:	and	w0, w0, #0xff
  41bbac:	cmp	w0, #0x0
  41bbb0:	b.eq	41bbd0 <wcrtomb@plt+0x18de0>  // b.none
  41bbb4:	ldr	x0, [sp, #24]
  41bbb8:	ldr	x2, [x0, #56]
  41bbbc:	ldr	x0, [sp, #24]
  41bbc0:	ldr	x0, [x0, #72]
  41bbc4:	ldr	x1, [sp, #16]
  41bbc8:	blr	x2
  41bbcc:	b	41bbe0 <wcrtomb@plt+0x18df0>
  41bbd0:	ldr	x0, [sp, #24]
  41bbd4:	ldr	x1, [x0, #56]
  41bbd8:	ldr	x0, [sp, #16]
  41bbdc:	blr	x1
  41bbe0:	ldp	x29, x30, [sp], #32
  41bbe4:	ret
  41bbe8:	stp	x29, x30, [sp, #-32]!
  41bbec:	mov	x29, sp
  41bbf0:	str	x0, [sp, #24]
  41bbf4:	str	x1, [sp, #16]
  41bbf8:	ldr	x0, [sp, #24]
  41bbfc:	ldrb	w0, [x0, #80]
  41bc00:	and	w0, w0, #0x1
  41bc04:	and	w0, w0, #0xff
  41bc08:	cmp	w0, #0x0
  41bc0c:	b.eq	41bc2c <wcrtomb@plt+0x18e3c>  // b.none
  41bc10:	ldr	x0, [sp, #24]
  41bc14:	ldr	x2, [x0, #64]
  41bc18:	ldr	x0, [sp, #24]
  41bc1c:	ldr	x0, [x0, #72]
  41bc20:	ldr	x1, [sp, #16]
  41bc24:	blr	x2
  41bc28:	b	41bc3c <wcrtomb@plt+0x18e4c>
  41bc2c:	ldr	x0, [sp, #24]
  41bc30:	ldr	x1, [x0, #64]
  41bc34:	ldr	x0, [sp, #16]
  41bc38:	blr	x1
  41bc3c:	nop
  41bc40:	ldp	x29, x30, [sp], #32
  41bc44:	ret
  41bc48:	stp	x29, x30, [sp, #-64]!
  41bc4c:	mov	x29, sp
  41bc50:	str	x0, [sp, #40]
  41bc54:	str	x1, [sp, #32]
  41bc58:	str	x2, [sp, #24]
  41bc5c:	ldr	x0, [sp, #24]
  41bc60:	cmp	x0, #0x0
  41bc64:	b.ne	41bc70 <wcrtomb@plt+0x18e80>  // b.any
  41bc68:	mov	x0, #0x10                  	// #16
  41bc6c:	str	x0, [sp, #24]
  41bc70:	ldr	x0, [sp, #32]
  41bc74:	cmp	x0, #0x0
  41bc78:	b.ne	41bc98 <wcrtomb@plt+0x18ea8>  // b.any
  41bc7c:	mov	w0, #0x20                  	// #32
  41bc80:	str	w0, [sp, #60]
  41bc84:	mov	w1, #0x1000                	// #4096
  41bc88:	ldr	w0, [sp, #60]
  41bc8c:	sub	w0, w1, w0
  41bc90:	sxtw	x0, w0
  41bc94:	str	x0, [sp, #32]
  41bc98:	ldr	x0, [sp, #40]
  41bc9c:	ldr	x1, [sp, #32]
  41bca0:	str	x1, [x0]
  41bca4:	ldr	x0, [sp, #24]
  41bca8:	sub	x1, x0, #0x1
  41bcac:	ldr	x0, [sp, #40]
  41bcb0:	str	x1, [x0, #48]
  41bcb4:	ldr	x0, [sp, #40]
  41bcb8:	ldr	x0, [x0]
  41bcbc:	mov	x1, x0
  41bcc0:	ldr	x0, [sp, #40]
  41bcc4:	bl	41bb8c <wcrtomb@plt+0x18d9c>
  41bcc8:	mov	x1, x0
  41bccc:	ldr	x0, [sp, #40]
  41bcd0:	str	x1, [x0, #8]
  41bcd4:	ldr	x0, [sp, #40]
  41bcd8:	ldr	x0, [x0, #8]
  41bcdc:	str	x0, [sp, #48]
  41bce0:	ldr	x0, [sp, #48]
  41bce4:	cmp	x0, #0x0
  41bce8:	b.ne	41bcfc <wcrtomb@plt+0x18f0c>  // b.any
  41bcec:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41bcf0:	add	x0, x0, #0x4f0
  41bcf4:	ldr	x0, [x0]
  41bcf8:	blr	x0
  41bcfc:	ldr	x0, [sp, #48]
  41bd00:	add	x0, x0, #0x10
  41bd04:	mov	x1, x0
  41bd08:	ldr	x0, [sp, #24]
  41bd0c:	add	x0, x1, x0
  41bd10:	sub	x1, x0, #0x1
  41bd14:	ldr	x0, [sp, #24]
  41bd18:	neg	x0, x0
  41bd1c:	and	x0, x1, x0
  41bd20:	mov	x1, x0
  41bd24:	ldr	x0, [sp, #40]
  41bd28:	str	x1, [x0, #16]
  41bd2c:	ldr	x0, [sp, #40]
  41bd30:	ldr	x1, [x0, #16]
  41bd34:	ldr	x0, [sp, #40]
  41bd38:	str	x1, [x0, #24]
  41bd3c:	ldr	x0, [sp, #40]
  41bd40:	ldr	x0, [x0]
  41bd44:	ldr	x1, [sp, #48]
  41bd48:	add	x1, x1, x0
  41bd4c:	ldr	x0, [sp, #48]
  41bd50:	str	x1, [x0]
  41bd54:	ldr	x0, [sp, #48]
  41bd58:	ldr	x1, [x0]
  41bd5c:	ldr	x0, [sp, #40]
  41bd60:	str	x1, [x0, #32]
  41bd64:	ldr	x0, [sp, #48]
  41bd68:	str	xzr, [x0, #8]
  41bd6c:	ldr	x0, [sp, #40]
  41bd70:	ldrb	w1, [x0, #80]
  41bd74:	and	w1, w1, #0xfffffffd
  41bd78:	strb	w1, [x0, #80]
  41bd7c:	ldr	x0, [sp, #40]
  41bd80:	ldrb	w1, [x0, #80]
  41bd84:	and	w1, w1, #0xfffffffb
  41bd88:	strb	w1, [x0, #80]
  41bd8c:	mov	w0, #0x1                   	// #1
  41bd90:	ldp	x29, x30, [sp], #64
  41bd94:	ret

000000000041bd98 <_obstack_begin@@Base>:
  41bd98:	stp	x29, x30, [sp, #-64]!
  41bd9c:	mov	x29, sp
  41bda0:	str	x0, [sp, #56]
  41bda4:	str	x1, [sp, #48]
  41bda8:	str	x2, [sp, #40]
  41bdac:	str	x3, [sp, #32]
  41bdb0:	str	x4, [sp, #24]
  41bdb4:	ldr	x0, [sp, #56]
  41bdb8:	ldr	x1, [sp, #32]
  41bdbc:	str	x1, [x0, #56]
  41bdc0:	ldr	x0, [sp, #56]
  41bdc4:	ldr	x1, [sp, #24]
  41bdc8:	str	x1, [x0, #64]
  41bdcc:	ldr	x0, [sp, #56]
  41bdd0:	ldrb	w1, [x0, #80]
  41bdd4:	and	w1, w1, #0xfffffffe
  41bdd8:	strb	w1, [x0, #80]
  41bddc:	ldr	x2, [sp, #40]
  41bde0:	ldr	x1, [sp, #48]
  41bde4:	ldr	x0, [sp, #56]
  41bde8:	bl	41bc48 <wcrtomb@plt+0x18e58>
  41bdec:	ldp	x29, x30, [sp], #64
  41bdf0:	ret

000000000041bdf4 <_obstack_begin_1@@Base>:
  41bdf4:	stp	x29, x30, [sp, #-64]!
  41bdf8:	mov	x29, sp
  41bdfc:	str	x0, [sp, #56]
  41be00:	str	x1, [sp, #48]
  41be04:	str	x2, [sp, #40]
  41be08:	str	x3, [sp, #32]
  41be0c:	str	x4, [sp, #24]
  41be10:	str	x5, [sp, #16]
  41be14:	ldr	x0, [sp, #56]
  41be18:	ldr	x1, [sp, #32]
  41be1c:	str	x1, [x0, #56]
  41be20:	ldr	x0, [sp, #56]
  41be24:	ldr	x1, [sp, #24]
  41be28:	str	x1, [x0, #64]
  41be2c:	ldr	x0, [sp, #56]
  41be30:	ldr	x1, [sp, #16]
  41be34:	str	x1, [x0, #72]
  41be38:	ldr	x0, [sp, #56]
  41be3c:	ldrb	w1, [x0, #80]
  41be40:	orr	w1, w1, #0x1
  41be44:	strb	w1, [x0, #80]
  41be48:	ldr	x2, [sp, #40]
  41be4c:	ldr	x1, [sp, #48]
  41be50:	ldr	x0, [sp, #56]
  41be54:	bl	41bc48 <wcrtomb@plt+0x18e58>
  41be58:	ldp	x29, x30, [sp], #64
  41be5c:	ret

000000000041be60 <_obstack_newchunk@@Base>:
  41be60:	stp	x29, x30, [sp, #-96]!
  41be64:	mov	x29, sp
  41be68:	str	x0, [sp, #24]
  41be6c:	str	x1, [sp, #16]
  41be70:	ldr	x0, [sp, #24]
  41be74:	ldr	x0, [x0, #8]
  41be78:	str	x0, [sp, #72]
  41be7c:	str	xzr, [sp, #88]
  41be80:	ldr	x0, [sp, #24]
  41be84:	ldr	x1, [x0, #24]
  41be88:	ldr	x0, [sp, #24]
  41be8c:	ldr	x0, [x0, #16]
  41be90:	sub	x0, x1, x0
  41be94:	str	x0, [sp, #64]
  41be98:	ldr	x1, [sp, #64]
  41be9c:	ldr	x0, [sp, #16]
  41bea0:	add	x0, x1, x0
  41bea4:	str	x0, [sp, #56]
  41bea8:	ldr	x0, [sp, #24]
  41beac:	ldr	x0, [x0, #48]
  41beb0:	ldr	x1, [sp, #56]
  41beb4:	add	x0, x1, x0
  41beb8:	str	x0, [sp, #48]
  41bebc:	ldr	x0, [sp, #64]
  41bec0:	lsr	x1, x0, #3
  41bec4:	ldr	x0, [sp, #48]
  41bec8:	add	x0, x1, x0
  41becc:	add	x0, x0, #0x64
  41bed0:	str	x0, [sp, #80]
  41bed4:	ldr	x1, [sp, #80]
  41bed8:	ldr	x0, [sp, #48]
  41bedc:	cmp	x1, x0
  41bee0:	b.cs	41beec <_obstack_newchunk@@Base+0x8c>  // b.hs, b.nlast
  41bee4:	ldr	x0, [sp, #48]
  41bee8:	str	x0, [sp, #80]
  41beec:	ldr	x0, [sp, #24]
  41bef0:	ldr	x0, [x0]
  41bef4:	ldr	x1, [sp, #80]
  41bef8:	cmp	x1, x0
  41befc:	b.cs	41bf0c <_obstack_newchunk@@Base+0xac>  // b.hs, b.nlast
  41bf00:	ldr	x0, [sp, #24]
  41bf04:	ldr	x0, [x0]
  41bf08:	str	x0, [sp, #80]
  41bf0c:	ldr	x1, [sp, #64]
  41bf10:	ldr	x0, [sp, #56]
  41bf14:	cmp	x1, x0
  41bf18:	b.hi	41bf3c <_obstack_newchunk@@Base+0xdc>  // b.pmore
  41bf1c:	ldr	x1, [sp, #56]
  41bf20:	ldr	x0, [sp, #48]
  41bf24:	cmp	x1, x0
  41bf28:	b.hi	41bf3c <_obstack_newchunk@@Base+0xdc>  // b.pmore
  41bf2c:	ldr	x1, [sp, #80]
  41bf30:	ldr	x0, [sp, #24]
  41bf34:	bl	41bb8c <wcrtomb@plt+0x18d9c>
  41bf38:	str	x0, [sp, #88]
  41bf3c:	ldr	x0, [sp, #88]
  41bf40:	cmp	x0, #0x0
  41bf44:	b.ne	41bf58 <_obstack_newchunk@@Base+0xf8>  // b.any
  41bf48:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41bf4c:	add	x0, x0, #0x4f0
  41bf50:	ldr	x0, [x0]
  41bf54:	blr	x0
  41bf58:	ldr	x0, [sp, #24]
  41bf5c:	ldr	x1, [sp, #88]
  41bf60:	str	x1, [x0, #8]
  41bf64:	ldr	x0, [sp, #88]
  41bf68:	ldr	x1, [sp, #72]
  41bf6c:	str	x1, [x0, #8]
  41bf70:	ldr	x1, [sp, #88]
  41bf74:	ldr	x0, [sp, #80]
  41bf78:	add	x1, x1, x0
  41bf7c:	ldr	x0, [sp, #24]
  41bf80:	str	x1, [x0, #32]
  41bf84:	ldr	x0, [sp, #24]
  41bf88:	ldr	x1, [x0, #32]
  41bf8c:	ldr	x0, [sp, #88]
  41bf90:	str	x1, [x0]
  41bf94:	ldr	x0, [sp, #88]
  41bf98:	add	x0, x0, #0x10
  41bf9c:	mov	x1, x0
  41bfa0:	ldr	x0, [sp, #24]
  41bfa4:	ldr	x0, [x0, #48]
  41bfa8:	add	x1, x1, x0
  41bfac:	ldr	x0, [sp, #24]
  41bfb0:	ldr	x0, [x0, #48]
  41bfb4:	mvn	x0, x0
  41bfb8:	and	x0, x1, x0
  41bfbc:	str	x0, [sp, #40]
  41bfc0:	ldr	x0, [sp, #24]
  41bfc4:	ldr	x0, [x0, #16]
  41bfc8:	ldr	x2, [sp, #64]
  41bfcc:	mov	x1, x0
  41bfd0:	ldr	x0, [sp, #40]
  41bfd4:	bl	4026d0 <memcpy@plt>
  41bfd8:	ldr	x0, [sp, #24]
  41bfdc:	ldrb	w0, [x0, #80]
  41bfe0:	and	w0, w0, #0x2
  41bfe4:	and	w0, w0, #0xff
  41bfe8:	cmp	w0, #0x0
  41bfec:	b.ne	41c044 <_obstack_newchunk@@Base+0x1e4>  // b.any
  41bff0:	ldr	x0, [sp, #24]
  41bff4:	ldr	x0, [x0, #16]
  41bff8:	ldr	x1, [sp, #72]
  41bffc:	add	x1, x1, #0x10
  41c000:	mov	x2, x1
  41c004:	ldr	x1, [sp, #24]
  41c008:	ldr	x1, [x1, #48]
  41c00c:	add	x2, x2, x1
  41c010:	ldr	x1, [sp, #24]
  41c014:	ldr	x1, [x1, #48]
  41c018:	mvn	x1, x1
  41c01c:	and	x1, x2, x1
  41c020:	cmp	x0, x1
  41c024:	b.ne	41c044 <_obstack_newchunk@@Base+0x1e4>  // b.any
  41c028:	ldr	x0, [sp, #72]
  41c02c:	ldr	x1, [x0, #8]
  41c030:	ldr	x0, [sp, #88]
  41c034:	str	x1, [x0, #8]
  41c038:	ldr	x1, [sp, #72]
  41c03c:	ldr	x0, [sp, #24]
  41c040:	bl	41bbe8 <wcrtomb@plt+0x18df8>
  41c044:	ldr	x0, [sp, #24]
  41c048:	ldr	x1, [sp, #40]
  41c04c:	str	x1, [x0, #16]
  41c050:	ldr	x0, [sp, #24]
  41c054:	ldr	x1, [x0, #16]
  41c058:	ldr	x0, [sp, #64]
  41c05c:	add	x1, x1, x0
  41c060:	ldr	x0, [sp, #24]
  41c064:	str	x1, [x0, #24]
  41c068:	ldr	x0, [sp, #24]
  41c06c:	ldrb	w1, [x0, #80]
  41c070:	and	w1, w1, #0xfffffffd
  41c074:	strb	w1, [x0, #80]
  41c078:	nop
  41c07c:	ldp	x29, x30, [sp], #96
  41c080:	ret

000000000041c084 <_obstack_allocated_p@@Base>:
  41c084:	sub	sp, sp, #0x20
  41c088:	str	x0, [sp, #8]
  41c08c:	str	x1, [sp]
  41c090:	ldr	x0, [sp, #8]
  41c094:	ldr	x0, [x0, #8]
  41c098:	str	x0, [sp, #24]
  41c09c:	b	41c0b4 <_obstack_allocated_p@@Base+0x30>
  41c0a0:	ldr	x0, [sp, #24]
  41c0a4:	ldr	x0, [x0, #8]
  41c0a8:	str	x0, [sp, #16]
  41c0ac:	ldr	x0, [sp, #16]
  41c0b0:	str	x0, [sp, #24]
  41c0b4:	ldr	x0, [sp, #24]
  41c0b8:	cmp	x0, #0x0
  41c0bc:	b.eq	41c0e4 <_obstack_allocated_p@@Base+0x60>  // b.none
  41c0c0:	ldr	x1, [sp, #24]
  41c0c4:	ldr	x0, [sp]
  41c0c8:	cmp	x1, x0
  41c0cc:	b.cs	41c0a0 <_obstack_allocated_p@@Base+0x1c>  // b.hs, b.nlast
  41c0d0:	ldr	x0, [sp, #24]
  41c0d4:	ldr	x0, [x0]
  41c0d8:	ldr	x1, [sp]
  41c0dc:	cmp	x1, x0
  41c0e0:	b.hi	41c0a0 <_obstack_allocated_p@@Base+0x1c>  // b.pmore
  41c0e4:	ldr	x0, [sp, #24]
  41c0e8:	cmp	x0, #0x0
  41c0ec:	cset	w0, ne  // ne = any
  41c0f0:	and	w0, w0, #0xff
  41c0f4:	add	sp, sp, #0x20
  41c0f8:	ret

000000000041c0fc <_obstack_free@@Base>:
  41c0fc:	stp	x29, x30, [sp, #-48]!
  41c100:	mov	x29, sp
  41c104:	str	x0, [sp, #24]
  41c108:	str	x1, [sp, #16]
  41c10c:	ldr	x0, [sp, #24]
  41c110:	ldr	x0, [x0, #8]
  41c114:	str	x0, [sp, #40]
  41c118:	b	41c14c <_obstack_free@@Base+0x50>
  41c11c:	ldr	x0, [sp, #40]
  41c120:	ldr	x0, [x0, #8]
  41c124:	str	x0, [sp, #32]
  41c128:	ldr	x1, [sp, #40]
  41c12c:	ldr	x0, [sp, #24]
  41c130:	bl	41bbe8 <wcrtomb@plt+0x18df8>
  41c134:	ldr	x0, [sp, #32]
  41c138:	str	x0, [sp, #40]
  41c13c:	ldr	x0, [sp, #24]
  41c140:	ldrb	w1, [x0, #80]
  41c144:	orr	w1, w1, #0x2
  41c148:	strb	w1, [x0, #80]
  41c14c:	ldr	x0, [sp, #40]
  41c150:	cmp	x0, #0x0
  41c154:	b.eq	41c17c <_obstack_free@@Base+0x80>  // b.none
  41c158:	ldr	x1, [sp, #40]
  41c15c:	ldr	x0, [sp, #16]
  41c160:	cmp	x1, x0
  41c164:	b.cs	41c11c <_obstack_free@@Base+0x20>  // b.hs, b.nlast
  41c168:	ldr	x0, [sp, #40]
  41c16c:	ldr	x0, [x0]
  41c170:	ldr	x1, [sp, #16]
  41c174:	cmp	x1, x0
  41c178:	b.hi	41c11c <_obstack_free@@Base+0x20>  // b.pmore
  41c17c:	ldr	x0, [sp, #40]
  41c180:	cmp	x0, #0x0
  41c184:	b.eq	41c1c4 <_obstack_free@@Base+0xc8>  // b.none
  41c188:	ldr	x0, [sp, #24]
  41c18c:	ldr	x1, [sp, #16]
  41c190:	str	x1, [x0, #24]
  41c194:	ldr	x0, [sp, #24]
  41c198:	ldr	x1, [x0, #24]
  41c19c:	ldr	x0, [sp, #24]
  41c1a0:	str	x1, [x0, #16]
  41c1a4:	ldr	x0, [sp, #40]
  41c1a8:	ldr	x1, [x0]
  41c1ac:	ldr	x0, [sp, #24]
  41c1b0:	str	x1, [x0, #32]
  41c1b4:	ldr	x0, [sp, #24]
  41c1b8:	ldr	x1, [sp, #40]
  41c1bc:	str	x1, [x0, #8]
  41c1c0:	b	41c1d4 <_obstack_free@@Base+0xd8>
  41c1c4:	ldr	x0, [sp, #16]
  41c1c8:	cmp	x0, #0x0
  41c1cc:	b.eq	41c1d4 <_obstack_free@@Base+0xd8>  // b.none
  41c1d0:	bl	402a90 <abort@plt>
  41c1d4:	nop
  41c1d8:	ldp	x29, x30, [sp], #48
  41c1dc:	ret

000000000041c1e0 <_obstack_memory_used@@Base>:
  41c1e0:	sub	sp, sp, #0x20
  41c1e4:	str	x0, [sp, #8]
  41c1e8:	str	xzr, [sp, #16]
  41c1ec:	ldr	x0, [sp, #8]
  41c1f0:	ldr	x0, [x0, #8]
  41c1f4:	str	x0, [sp, #24]
  41c1f8:	b	41c228 <_obstack_memory_used@@Base+0x48>
  41c1fc:	ldr	x0, [sp, #24]
  41c200:	ldr	x1, [x0]
  41c204:	ldr	x0, [sp, #24]
  41c208:	sub	x0, x1, x0
  41c20c:	mov	x1, x0
  41c210:	ldr	x0, [sp, #16]
  41c214:	add	x0, x0, x1
  41c218:	str	x0, [sp, #16]
  41c21c:	ldr	x0, [sp, #24]
  41c220:	ldr	x0, [x0, #8]
  41c224:	str	x0, [sp, #24]
  41c228:	ldr	x0, [sp, #24]
  41c22c:	cmp	x0, #0x0
  41c230:	b.ne	41c1fc <_obstack_memory_used@@Base+0x1c>  // b.any
  41c234:	ldr	x0, [sp, #16]
  41c238:	add	sp, sp, #0x20
  41c23c:	ret
  41c240:	stp	x29, x30, [sp, #-32]!
  41c244:	mov	x29, sp
  41c248:	str	x19, [sp, #16]
  41c24c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41c250:	add	x0, x0, #0x508
  41c254:	ldr	x19, [x0]
  41c258:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  41c25c:	add	x0, x0, #0x1a8
  41c260:	bl	402d80 <gettext@plt>
  41c264:	mov	x2, x0
  41c268:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  41c26c:	add	x1, x0, #0x1c0
  41c270:	mov	x0, x19
  41c274:	bl	402db0 <fprintf@plt>
  41c278:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  41c27c:	add	x0, x0, #0x4f8
  41c280:	ldr	w0, [x0]
  41c284:	bl	402740 <exit@plt>
  41c288:	sub	sp, sp, #0x10
  41c28c:	str	x0, [sp, #8]
  41c290:	str	x1, [sp]
  41c294:	ldr	x0, [sp]
  41c298:	add	x1, x0, #0x3f
  41c29c:	cmp	x0, #0x0
  41c2a0:	csel	x0, x1, x0, lt  // lt = tstop
  41c2a4:	asr	x0, x0, #6
  41c2a8:	mov	x3, x0
  41c2ac:	mov	x0, x3
  41c2b0:	lsl	x0, x0, #3
  41c2b4:	ldr	x1, [sp, #8]
  41c2b8:	add	x0, x1, x0
  41c2bc:	ldr	x2, [x0]
  41c2c0:	ldr	x0, [sp]
  41c2c4:	negs	x1, x0
  41c2c8:	and	x0, x0, #0x3f
  41c2cc:	and	x1, x1, #0x3f
  41c2d0:	csneg	x0, x0, x1, mi  // mi = first
  41c2d4:	mov	w1, w0
  41c2d8:	mov	x0, #0x1                   	// #1
  41c2dc:	lsl	x1, x0, x1
  41c2e0:	mov	x0, x3
  41c2e4:	lsl	x0, x0, #3
  41c2e8:	ldr	x3, [sp, #8]
  41c2ec:	add	x0, x3, x0
  41c2f0:	orr	x1, x2, x1
  41c2f4:	str	x1, [x0]
  41c2f8:	nop
  41c2fc:	add	sp, sp, #0x10
  41c300:	ret
  41c304:	sub	sp, sp, #0x10
  41c308:	str	x0, [sp, #8]
  41c30c:	str	x1, [sp]
  41c310:	ldr	x0, [sp]
  41c314:	add	x1, x0, #0x3f
  41c318:	cmp	x0, #0x0
  41c31c:	csel	x0, x1, x0, lt  // lt = tstop
  41c320:	asr	x0, x0, #6
  41c324:	mov	x3, x0
  41c328:	mov	x0, x3
  41c32c:	lsl	x0, x0, #3
  41c330:	ldr	x1, [sp, #8]
  41c334:	add	x0, x1, x0
  41c338:	ldr	x2, [x0]
  41c33c:	ldr	x0, [sp]
  41c340:	negs	x1, x0
  41c344:	and	x0, x0, #0x3f
  41c348:	and	x1, x1, #0x3f
  41c34c:	csneg	x0, x0, x1, mi  // mi = first
  41c350:	mov	w1, w0
  41c354:	mov	x0, #0x1                   	// #1
  41c358:	lsl	x0, x0, x1
  41c35c:	mvn	x1, x0
  41c360:	mov	x0, x3
  41c364:	lsl	x0, x0, #3
  41c368:	ldr	x3, [sp, #8]
  41c36c:	add	x0, x3, x0
  41c370:	and	x1, x2, x1
  41c374:	str	x1, [x0]
  41c378:	nop
  41c37c:	add	sp, sp, #0x10
  41c380:	ret
  41c384:	sub	sp, sp, #0x10
  41c388:	str	x0, [sp, #8]
  41c38c:	str	x1, [sp]
  41c390:	ldr	x0, [sp]
  41c394:	add	x1, x0, #0x3f
  41c398:	cmp	x0, #0x0
  41c39c:	csel	x0, x1, x0, lt  // lt = tstop
  41c3a0:	asr	x0, x0, #6
  41c3a4:	lsl	x0, x0, #3
  41c3a8:	ldr	x1, [sp, #8]
  41c3ac:	add	x0, x1, x0
  41c3b0:	ldr	x1, [x0]
  41c3b4:	ldr	x0, [sp]
  41c3b8:	negs	x2, x0
  41c3bc:	and	x0, x0, #0x3f
  41c3c0:	and	x2, x2, #0x3f
  41c3c4:	csneg	x0, x0, x2, mi  // mi = first
  41c3c8:	lsr	x0, x1, x0
  41c3cc:	and	x0, x0, #0x1
  41c3d0:	cmp	x0, #0x0
  41c3d4:	cset	w0, ne  // ne = any
  41c3d8:	and	w0, w0, #0xff
  41c3dc:	add	sp, sp, #0x10
  41c3e0:	ret
  41c3e4:	stp	x29, x30, [sp, #-32]!
  41c3e8:	mov	x29, sp
  41c3ec:	str	x0, [sp, #24]
  41c3f0:	mov	x2, #0x20                  	// #32
  41c3f4:	mov	w1, #0x0                   	// #0
  41c3f8:	ldr	x0, [sp, #24]
  41c3fc:	bl	402980 <memset@plt>
  41c400:	nop
  41c404:	ldp	x29, x30, [sp], #32
  41c408:	ret
  41c40c:	stp	x29, x30, [sp, #-32]!
  41c410:	mov	x29, sp
  41c414:	str	x0, [sp, #24]
  41c418:	mov	x2, #0x20                  	// #32
  41c41c:	mov	w1, #0xffffffff            	// #-1
  41c420:	ldr	x0, [sp, #24]
  41c424:	bl	402980 <memset@plt>
  41c428:	nop
  41c42c:	ldp	x29, x30, [sp], #32
  41c430:	ret
  41c434:	stp	x29, x30, [sp, #-32]!
  41c438:	mov	x29, sp
  41c43c:	str	x0, [sp, #24]
  41c440:	str	x1, [sp, #16]
  41c444:	mov	x2, #0x20                  	// #32
  41c448:	ldr	x1, [sp, #16]
  41c44c:	ldr	x0, [sp, #24]
  41c450:	bl	4026d0 <memcpy@plt>
  41c454:	nop
  41c458:	ldp	x29, x30, [sp], #32
  41c45c:	ret
  41c460:	sub	sp, sp, #0x20
  41c464:	str	x0, [sp, #8]
  41c468:	str	wzr, [sp, #28]
  41c46c:	b	41c4a8 <_obstack_memory_used@@Base+0x2c8>
  41c470:	ldrsw	x0, [sp, #28]
  41c474:	lsl	x0, x0, #3
  41c478:	ldr	x1, [sp, #8]
  41c47c:	add	x0, x1, x0
  41c480:	ldr	x1, [x0]
  41c484:	ldrsw	x0, [sp, #28]
  41c488:	lsl	x0, x0, #3
  41c48c:	ldr	x2, [sp, #8]
  41c490:	add	x0, x2, x0
  41c494:	mvn	x1, x1
  41c498:	str	x1, [x0]
  41c49c:	ldr	w0, [sp, #28]
  41c4a0:	add	w0, w0, #0x1
  41c4a4:	str	w0, [sp, #28]
  41c4a8:	ldr	w0, [sp, #28]
  41c4ac:	cmp	w0, #0x3
  41c4b0:	b.le	41c470 <_obstack_memory_used@@Base+0x290>
  41c4b4:	nop
  41c4b8:	nop
  41c4bc:	add	sp, sp, #0x20
  41c4c0:	ret
  41c4c4:	sub	sp, sp, #0x20
  41c4c8:	str	x0, [sp, #8]
  41c4cc:	str	x1, [sp]
  41c4d0:	str	wzr, [sp, #28]
  41c4d4:	b	41c524 <_obstack_memory_used@@Base+0x344>
  41c4d8:	ldrsw	x0, [sp, #28]
  41c4dc:	lsl	x0, x0, #3
  41c4e0:	ldr	x1, [sp, #8]
  41c4e4:	add	x0, x1, x0
  41c4e8:	ldr	x2, [x0]
  41c4ec:	ldrsw	x0, [sp, #28]
  41c4f0:	lsl	x0, x0, #3
  41c4f4:	ldr	x1, [sp]
  41c4f8:	add	x0, x1, x0
  41c4fc:	ldr	x1, [x0]
  41c500:	ldrsw	x0, [sp, #28]
  41c504:	lsl	x0, x0, #3
  41c508:	ldr	x3, [sp, #8]
  41c50c:	add	x0, x3, x0
  41c510:	orr	x1, x2, x1
  41c514:	str	x1, [x0]
  41c518:	ldr	w0, [sp, #28]
  41c51c:	add	w0, w0, #0x1
  41c520:	str	w0, [sp, #28]
  41c524:	ldr	w0, [sp, #28]
  41c528:	cmp	w0, #0x3
  41c52c:	b.le	41c4d8 <_obstack_memory_used@@Base+0x2f8>
  41c530:	nop
  41c534:	nop
  41c538:	add	sp, sp, #0x20
  41c53c:	ret
  41c540:	sub	sp, sp, #0x20
  41c544:	str	x0, [sp, #8]
  41c548:	str	x1, [sp]
  41c54c:	str	wzr, [sp, #28]
  41c550:	b	41c5a0 <_obstack_memory_used@@Base+0x3c0>
  41c554:	ldrsw	x0, [sp, #28]
  41c558:	lsl	x0, x0, #3
  41c55c:	ldr	x1, [sp, #8]
  41c560:	add	x0, x1, x0
  41c564:	ldr	x2, [x0]
  41c568:	ldrsw	x0, [sp, #28]
  41c56c:	lsl	x0, x0, #3
  41c570:	ldr	x1, [sp]
  41c574:	add	x0, x1, x0
  41c578:	ldr	x1, [x0]
  41c57c:	ldrsw	x0, [sp, #28]
  41c580:	lsl	x0, x0, #3
  41c584:	ldr	x3, [sp, #8]
  41c588:	add	x0, x3, x0
  41c58c:	and	x1, x2, x1
  41c590:	str	x1, [x0]
  41c594:	ldr	w0, [sp, #28]
  41c598:	add	w0, w0, #0x1
  41c59c:	str	w0, [sp, #28]
  41c5a0:	ldr	w0, [sp, #28]
  41c5a4:	cmp	w0, #0x3
  41c5a8:	b.le	41c554 <_obstack_memory_used@@Base+0x374>
  41c5ac:	nop
  41c5b0:	nop
  41c5b4:	add	sp, sp, #0x20
  41c5b8:	ret
  41c5bc:	sub	sp, sp, #0x20
  41c5c0:	str	x0, [sp, #8]
  41c5c4:	str	x1, [sp]
  41c5c8:	ldr	x0, [sp, #8]
  41c5cc:	ldr	w0, [x0, #144]
  41c5d0:	cmp	w0, #0x1
  41c5d4:	b.ne	41c5e0 <_obstack_memory_used@@Base+0x400>  // b.any
  41c5d8:	mov	w0, #0x1                   	// #1
  41c5dc:	b	41c648 <_obstack_memory_used@@Base+0x468>
  41c5e0:	mov	w0, #0x1                   	// #1
  41c5e4:	str	w0, [sp, #28]
  41c5e8:	b	41c620 <_obstack_memory_used@@Base+0x440>
  41c5ec:	ldr	x0, [sp, #8]
  41c5f0:	ldr	x1, [x0, #16]
  41c5f4:	ldrsw	x2, [sp, #28]
  41c5f8:	ldr	x0, [sp]
  41c5fc:	add	x0, x2, x0
  41c600:	lsl	x0, x0, #2
  41c604:	add	x0, x1, x0
  41c608:	ldr	w0, [x0]
  41c60c:	cmn	w0, #0x1
  41c610:	b.ne	41c640 <_obstack_memory_used@@Base+0x460>  // b.any
  41c614:	ldr	w0, [sp, #28]
  41c618:	add	w0, w0, #0x1
  41c61c:	str	w0, [sp, #28]
  41c620:	ldrsw	x1, [sp, #28]
  41c624:	ldr	x0, [sp]
  41c628:	add	x1, x1, x0
  41c62c:	ldr	x0, [sp, #8]
  41c630:	ldr	x0, [x0, #48]
  41c634:	cmp	x1, x0
  41c638:	b.lt	41c5ec <_obstack_memory_used@@Base+0x40c>  // b.tstop
  41c63c:	b	41c644 <_obstack_memory_used@@Base+0x464>
  41c640:	nop
  41c644:	ldr	w0, [sp, #28]
  41c648:	add	sp, sp, #0x20
  41c64c:	ret
  41c650:	sub	sp, sp, #0x10
  41c654:	str	x0, [sp, #8]
  41c658:	str	x1, [sp]
  41c65c:	ldr	x0, [sp, #8]
  41c660:	ldr	w0, [x0, #144]
  41c664:	cmp	w0, #0x1
  41c668:	b.ne	41c684 <_obstack_memory_used@@Base+0x4a4>  // b.any
  41c66c:	ldr	x0, [sp, #8]
  41c670:	ldr	x1, [x0, #8]
  41c674:	ldr	x0, [sp]
  41c678:	add	x0, x1, x0
  41c67c:	ldrb	w0, [x0]
  41c680:	b	41c69c <_obstack_memory_used@@Base+0x4bc>
  41c684:	ldr	x0, [sp, #8]
  41c688:	ldr	x1, [x0, #16]
  41c68c:	ldr	x0, [sp]
  41c690:	lsl	x0, x0, #2
  41c694:	add	x0, x1, x0
  41c698:	ldr	w0, [x0]
  41c69c:	add	sp, sp, #0x10
  41c6a0:	ret
  41c6a4:	sub	sp, sp, #0x10
  41c6a8:	str	x0, [sp, #8]
  41c6ac:	str	x1, [sp]
  41c6b0:	mov	w0, #0x1                   	// #1
  41c6b4:	add	sp, sp, #0x10
  41c6b8:	ret
  41c6bc:	stp	x29, x30, [sp, #-96]!
  41c6c0:	mov	x29, sp
  41c6c4:	str	x0, [sp, #72]
  41c6c8:	str	x1, [sp, #64]
  41c6cc:	str	x2, [sp, #56]
  41c6d0:	str	x3, [sp, #48]
  41c6d4:	str	x4, [sp, #40]
  41c6d8:	strb	w5, [sp, #39]
  41c6dc:	str	x6, [sp, #24]
  41c6e0:	ldr	x0, [sp, #24]
  41c6e4:	ldr	w0, [x0, #180]
  41c6e8:	sxtw	x0, w0
  41c6ec:	ldr	x1, [sp, #48]
  41c6f0:	cmp	x1, x0
  41c6f4:	b.ge	41c708 <_obstack_memory_used@@Base+0x528>  // b.tcont
  41c6f8:	ldr	x0, [sp, #24]
  41c6fc:	ldr	w0, [x0, #180]
  41c700:	sxtw	x0, w0
  41c704:	str	x0, [sp, #48]
  41c708:	ldr	x0, [sp, #56]
  41c70c:	add	x0, x0, #0x1
  41c710:	ldr	x2, [sp, #48]
  41c714:	ldr	x1, [sp, #48]
  41c718:	cmp	x2, x0
  41c71c:	csel	x0, x1, x0, le
  41c720:	str	x0, [sp, #88]
  41c724:	ldr	x5, [sp, #24]
  41c728:	ldrb	w4, [sp, #39]
  41c72c:	ldr	x3, [sp, #40]
  41c730:	ldr	x2, [sp, #72]
  41c734:	ldr	x1, [sp, #56]
  41c738:	ldr	x0, [sp, #64]
  41c73c:	bl	41cba8 <_obstack_memory_used@@Base+0x9c8>
  41c740:	ldr	x1, [sp, #88]
  41c744:	ldr	x0, [sp, #72]
  41c748:	bl	41ca18 <_obstack_memory_used@@Base+0x838>
  41c74c:	str	w0, [sp, #84]
  41c750:	ldr	w0, [sp, #84]
  41c754:	cmp	w0, #0x0
  41c758:	cset	w0, ne  // ne = any
  41c75c:	and	w0, w0, #0xff
  41c760:	and	x0, x0, #0xff
  41c764:	cmp	x0, #0x0
  41c768:	b.eq	41c774 <_obstack_memory_used@@Base+0x594>  // b.none
  41c76c:	ldr	w0, [sp, #84]
  41c770:	b	41c810 <_obstack_memory_used@@Base+0x630>
  41c774:	ldr	x0, [sp, #24]
  41c778:	add	x1, x0, #0xb8
  41c77c:	ldr	x0, [sp, #72]
  41c780:	str	x1, [x0, #128]
  41c784:	ldr	x0, [sp, #24]
  41c788:	ldrb	w0, [x0, #176]
  41c78c:	ubfx	x0, x0, #4, #1
  41c790:	and	w0, w0, #0xff
  41c794:	mov	w1, w0
  41c798:	ldr	x0, [sp, #72]
  41c79c:	strb	w1, [x0, #142]
  41c7a0:	ldr	x0, [sp, #72]
  41c7a4:	ldrb	w0, [x0, #139]
  41c7a8:	cmp	w0, #0x0
  41c7ac:	b.eq	41c7bc <_obstack_memory_used@@Base+0x5dc>  // b.none
  41c7b0:	ldr	x0, [sp, #72]
  41c7b4:	ldr	x0, [x0, #8]
  41c7b8:	b	41c7c0 <_obstack_memory_used@@Base+0x5e0>
  41c7bc:	ldr	x0, [sp, #64]
  41c7c0:	ldr	x1, [sp, #72]
  41c7c4:	str	x0, [x1, #8]
  41c7c8:	ldr	x0, [sp, #72]
  41c7cc:	ldrb	w0, [x0, #139]
  41c7d0:	cmp	w0, #0x0
  41c7d4:	b.ne	41c7f0 <_obstack_memory_used@@Base+0x610>  // b.any
  41c7d8:	ldr	x0, [sp, #24]
  41c7dc:	ldr	w0, [x0, #180]
  41c7e0:	cmp	w0, #0x1
  41c7e4:	b.gt	41c7f0 <_obstack_memory_used@@Base+0x610>
  41c7e8:	ldr	x0, [sp, #56]
  41c7ec:	b	41c7f4 <_obstack_memory_used@@Base+0x614>
  41c7f0:	mov	x0, #0x0                   	// #0
  41c7f4:	ldr	x1, [sp, #72]
  41c7f8:	str	x0, [x1, #48]
  41c7fc:	ldr	x0, [sp, #72]
  41c800:	ldr	x1, [x0, #48]
  41c804:	ldr	x0, [sp, #72]
  41c808:	str	x1, [x0, #56]
  41c80c:	mov	w0, #0x0                   	// #0
  41c810:	ldp	x29, x30, [sp], #96
  41c814:	ret
  41c818:	stp	x29, x30, [sp, #-80]!
  41c81c:	mov	x29, sp
  41c820:	str	x0, [sp, #56]
  41c824:	str	x1, [sp, #48]
  41c828:	str	x2, [sp, #40]
  41c82c:	str	x3, [sp, #32]
  41c830:	strb	w4, [sp, #31]
  41c834:	str	x5, [sp, #16]
  41c838:	mov	x2, #0x98                  	// #152
  41c83c:	mov	w1, #0x0                   	// #0
  41c840:	ldr	x0, [sp, #56]
  41c844:	bl	402980 <memset@plt>
  41c848:	ldr	x5, [sp, #16]
  41c84c:	ldrb	w4, [sp, #31]
  41c850:	ldr	x3, [sp, #32]
  41c854:	ldr	x2, [sp, #56]
  41c858:	ldr	x1, [sp, #40]
  41c85c:	ldr	x0, [sp, #48]
  41c860:	bl	41cba8 <_obstack_memory_used@@Base+0x9c8>
  41c864:	ldr	x0, [sp, #40]
  41c868:	cmp	x0, #0x0
  41c86c:	b.le	41c8ac <_obstack_memory_used@@Base+0x6cc>
  41c870:	ldr	x0, [sp, #40]
  41c874:	add	x0, x0, #0x1
  41c878:	mov	x1, x0
  41c87c:	ldr	x0, [sp, #56]
  41c880:	bl	41ca18 <_obstack_memory_used@@Base+0x838>
  41c884:	str	w0, [sp, #76]
  41c888:	ldr	w0, [sp, #76]
  41c88c:	cmp	w0, #0x0
  41c890:	cset	w0, ne  // ne = any
  41c894:	and	w0, w0, #0xff
  41c898:	and	x0, x0, #0xff
  41c89c:	cmp	x0, #0x0
  41c8a0:	b.eq	41c8ac <_obstack_memory_used@@Base+0x6cc>  // b.none
  41c8a4:	ldr	w0, [sp, #76]
  41c8a8:	b	41ca10 <_obstack_memory_used@@Base+0x830>
  41c8ac:	ldr	x0, [sp, #56]
  41c8b0:	ldrb	w0, [x0, #139]
  41c8b4:	cmp	w0, #0x0
  41c8b8:	b.eq	41c8c8 <_obstack_memory_used@@Base+0x6e8>  // b.none
  41c8bc:	ldr	x0, [sp, #56]
  41c8c0:	ldr	x0, [x0, #8]
  41c8c4:	b	41c8cc <_obstack_memory_used@@Base+0x6ec>
  41c8c8:	ldr	x0, [sp, #48]
  41c8cc:	ldr	x1, [sp, #56]
  41c8d0:	str	x0, [x1, #8]
  41c8d4:	ldrb	w0, [sp, #31]
  41c8d8:	cmp	w0, #0x0
  41c8dc:	b.eq	41c9a8 <_obstack_memory_used@@Base+0x7c8>  // b.none
  41c8e0:	ldr	x0, [sp, #16]
  41c8e4:	ldr	w0, [x0, #180]
  41c8e8:	cmp	w0, #0x1
  41c8ec:	b.le	41c99c <_obstack_memory_used@@Base+0x7bc>
  41c8f0:	ldr	x0, [sp, #56]
  41c8f4:	bl	41cffc <_obstack_memory_used@@Base+0xe1c>
  41c8f8:	str	w0, [sp, #76]
  41c8fc:	ldr	w0, [sp, #76]
  41c900:	cmp	w0, #0x0
  41c904:	cset	w0, ne  // ne = any
  41c908:	and	w0, w0, #0xff
  41c90c:	and	x0, x0, #0xff
  41c910:	cmp	x0, #0x0
  41c914:	b.eq	41c920 <_obstack_memory_used@@Base+0x740>  // b.none
  41c918:	ldr	w0, [sp, #76]
  41c91c:	b	41ca10 <_obstack_memory_used@@Base+0x830>
  41c920:	ldr	x0, [sp, #56]
  41c924:	ldr	x0, [x0, #56]
  41c928:	ldr	x1, [sp, #40]
  41c92c:	cmp	x1, x0
  41c930:	b.le	41ca00 <_obstack_memory_used@@Base+0x820>
  41c934:	ldr	x0, [sp, #56]
  41c938:	ldr	x1, [x0, #64]
  41c93c:	ldr	x0, [sp, #56]
  41c940:	ldr	x2, [x0, #48]
  41c944:	ldr	x0, [sp, #16]
  41c948:	ldr	w0, [x0, #180]
  41c94c:	sxtw	x0, w0
  41c950:	add	x0, x2, x0
  41c954:	cmp	x1, x0
  41c958:	b.gt	41ca08 <_obstack_memory_used@@Base+0x828>
  41c95c:	ldr	x0, [sp, #56]
  41c960:	ldr	x0, [x0, #64]
  41c964:	lsl	x0, x0, #1
  41c968:	mov	x1, x0
  41c96c:	ldr	x0, [sp, #56]
  41c970:	bl	41ca18 <_obstack_memory_used@@Base+0x838>
  41c974:	str	w0, [sp, #76]
  41c978:	ldr	w0, [sp, #76]
  41c97c:	cmp	w0, #0x0
  41c980:	cset	w0, ne  // ne = any
  41c984:	and	w0, w0, #0xff
  41c988:	and	x0, x0, #0xff
  41c98c:	cmp	x0, #0x0
  41c990:	b.eq	41c8f0 <_obstack_memory_used@@Base+0x710>  // b.none
  41c994:	ldr	w0, [sp, #76]
  41c998:	b	41ca10 <_obstack_memory_used@@Base+0x830>
  41c99c:	ldr	x0, [sp, #56]
  41c9a0:	bl	41dc70 <_obstack_memory_used@@Base+0x1a90>
  41c9a4:	b	41ca0c <_obstack_memory_used@@Base+0x82c>
  41c9a8:	ldr	x0, [sp, #16]
  41c9ac:	ldr	w0, [x0, #180]
  41c9b0:	cmp	w0, #0x1
  41c9b4:	b.le	41c9c4 <_obstack_memory_used@@Base+0x7e4>
  41c9b8:	ldr	x0, [sp, #56]
  41c9bc:	bl	41cca4 <_obstack_memory_used@@Base+0xac4>
  41c9c0:	b	41ca0c <_obstack_memory_used@@Base+0x82c>
  41c9c4:	ldr	x0, [sp, #32]
  41c9c8:	cmp	x0, #0x0
  41c9cc:	b.eq	41c9dc <_obstack_memory_used@@Base+0x7fc>  // b.none
  41c9d0:	ldr	x0, [sp, #56]
  41c9d4:	bl	41dd68 <_obstack_memory_used@@Base+0x1b88>
  41c9d8:	b	41ca0c <_obstack_memory_used@@Base+0x82c>
  41c9dc:	ldr	x0, [sp, #56]
  41c9e0:	ldr	x1, [x0, #64]
  41c9e4:	ldr	x0, [sp, #56]
  41c9e8:	str	x1, [x0, #48]
  41c9ec:	ldr	x0, [sp, #56]
  41c9f0:	ldr	x1, [x0, #64]
  41c9f4:	ldr	x0, [sp, #56]
  41c9f8:	str	x1, [x0, #56]
  41c9fc:	b	41ca0c <_obstack_memory_used@@Base+0x82c>
  41ca00:	nop
  41ca04:	b	41ca0c <_obstack_memory_used@@Base+0x82c>
  41ca08:	nop
  41ca0c:	mov	w0, #0x0                   	// #0
  41ca10:	ldp	x29, x30, [sp], #80
  41ca14:	ret
  41ca18:	stp	x29, x30, [sp, #-64]!
  41ca1c:	mov	x29, sp
  41ca20:	str	x0, [sp, #24]
  41ca24:	str	x1, [sp, #16]
  41ca28:	ldr	x0, [sp, #24]
  41ca2c:	ldr	w0, [x0, #144]
  41ca30:	cmp	w0, #0x1
  41ca34:	b.le	41cb3c <_obstack_memory_used@@Base+0x95c>
  41ca38:	mov	x0, #0x8                   	// #8
  41ca3c:	str	x0, [sp, #56]
  41ca40:	mov	x1, #0xffffffffffffffff    	// #-1
  41ca44:	ldr	x0, [sp, #56]
  41ca48:	udiv	x0, x1, x0
  41ca4c:	cmp	x0, #0x0
  41ca50:	b.lt	41ca64 <_obstack_memory_used@@Base+0x884>  // b.tstop
  41ca54:	mov	x1, #0xffffffffffffffff    	// #-1
  41ca58:	ldr	x0, [sp, #56]
  41ca5c:	udiv	x0, x1, x0
  41ca60:	b	41ca68 <_obstack_memory_used@@Base+0x888>
  41ca64:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  41ca68:	ldr	x1, [sp, #16]
  41ca6c:	cmp	x0, x1
  41ca70:	cset	w0, cc  // cc = lo, ul, last
  41ca74:	and	w0, w0, #0xff
  41ca78:	and	x0, x0, #0xff
  41ca7c:	cmp	x0, #0x0
  41ca80:	b.eq	41ca8c <_obstack_memory_used@@Base+0x8ac>  // b.none
  41ca84:	mov	w0, #0xc                   	// #12
  41ca88:	b	41cba0 <_obstack_memory_used@@Base+0x9c0>
  41ca8c:	ldr	x0, [sp, #24]
  41ca90:	ldr	x2, [x0, #16]
  41ca94:	ldr	x0, [sp, #16]
  41ca98:	lsl	x0, x0, #2
  41ca9c:	mov	x1, x0
  41caa0:	mov	x0, x2
  41caa4:	bl	4029e0 <realloc@plt>
  41caa8:	str	x0, [sp, #48]
  41caac:	ldr	x0, [sp, #48]
  41cab0:	cmp	x0, #0x0
  41cab4:	cset	w0, eq  // eq = none
  41cab8:	and	w0, w0, #0xff
  41cabc:	and	x0, x0, #0xff
  41cac0:	cmp	x0, #0x0
  41cac4:	b.eq	41cad0 <_obstack_memory_used@@Base+0x8f0>  // b.none
  41cac8:	mov	w0, #0xc                   	// #12
  41cacc:	b	41cba0 <_obstack_memory_used@@Base+0x9c0>
  41cad0:	ldr	x0, [sp, #24]
  41cad4:	ldr	x1, [sp, #48]
  41cad8:	str	x1, [x0, #16]
  41cadc:	ldr	x0, [sp, #24]
  41cae0:	ldr	x0, [x0, #24]
  41cae4:	cmp	x0, #0x0
  41cae8:	b.eq	41cb3c <_obstack_memory_used@@Base+0x95c>  // b.none
  41caec:	ldr	x0, [sp, #24]
  41caf0:	ldr	x2, [x0, #24]
  41caf4:	ldr	x0, [sp, #16]
  41caf8:	lsl	x0, x0, #3
  41cafc:	mov	x1, x0
  41cb00:	mov	x0, x2
  41cb04:	bl	4029e0 <realloc@plt>
  41cb08:	str	x0, [sp, #40]
  41cb0c:	ldr	x0, [sp, #40]
  41cb10:	cmp	x0, #0x0
  41cb14:	cset	w0, eq  // eq = none
  41cb18:	and	w0, w0, #0xff
  41cb1c:	and	x0, x0, #0xff
  41cb20:	cmp	x0, #0x0
  41cb24:	b.eq	41cb30 <_obstack_memory_used@@Base+0x950>  // b.none
  41cb28:	mov	w0, #0xc                   	// #12
  41cb2c:	b	41cba0 <_obstack_memory_used@@Base+0x9c0>
  41cb30:	ldr	x0, [sp, #24]
  41cb34:	ldr	x1, [sp, #40]
  41cb38:	str	x1, [x0, #24]
  41cb3c:	ldr	x0, [sp, #24]
  41cb40:	ldrb	w0, [x0, #139]
  41cb44:	cmp	w0, #0x0
  41cb48:	b.eq	41cb90 <_obstack_memory_used@@Base+0x9b0>  // b.none
  41cb4c:	ldr	x0, [sp, #24]
  41cb50:	ldr	x0, [x0, #8]
  41cb54:	ldr	x1, [sp, #16]
  41cb58:	bl	4029e0 <realloc@plt>
  41cb5c:	str	x0, [sp, #32]
  41cb60:	ldr	x0, [sp, #32]
  41cb64:	cmp	x0, #0x0
  41cb68:	cset	w0, eq  // eq = none
  41cb6c:	and	w0, w0, #0xff
  41cb70:	and	x0, x0, #0xff
  41cb74:	cmp	x0, #0x0
  41cb78:	b.eq	41cb84 <_obstack_memory_used@@Base+0x9a4>  // b.none
  41cb7c:	mov	w0, #0xc                   	// #12
  41cb80:	b	41cba0 <_obstack_memory_used@@Base+0x9c0>
  41cb84:	ldr	x0, [sp, #24]
  41cb88:	ldr	x1, [sp, #32]
  41cb8c:	str	x1, [x0, #8]
  41cb90:	ldr	x0, [sp, #24]
  41cb94:	ldr	x1, [sp, #16]
  41cb98:	str	x1, [x0, #64]
  41cb9c:	mov	w0, #0x0                   	// #0
  41cba0:	ldp	x29, x30, [sp], #64
  41cba4:	ret
  41cba8:	sub	sp, sp, #0x30
  41cbac:	str	x0, [sp, #40]
  41cbb0:	str	x1, [sp, #32]
  41cbb4:	str	x2, [sp, #24]
  41cbb8:	str	x3, [sp, #16]
  41cbbc:	strb	w4, [sp, #15]
  41cbc0:	str	x5, [sp]
  41cbc4:	ldr	x0, [sp, #24]
  41cbc8:	ldr	x1, [sp, #40]
  41cbcc:	str	x1, [x0]
  41cbd0:	ldr	x0, [sp, #24]
  41cbd4:	ldr	x1, [sp, #32]
  41cbd8:	str	x1, [x0, #88]
  41cbdc:	ldr	x0, [sp, #24]
  41cbe0:	ldr	x1, [sp, #32]
  41cbe4:	str	x1, [x0, #80]
  41cbe8:	ldr	x0, [sp, #24]
  41cbec:	ldr	x1, [sp, #16]
  41cbf0:	str	x1, [x0, #120]
  41cbf4:	ldrb	w1, [sp, #15]
  41cbf8:	ldr	x0, [sp, #24]
  41cbfc:	strb	w1, [x0, #136]
  41cc00:	ldr	x0, [sp, #16]
  41cc04:	cmp	x0, #0x0
  41cc08:	b.ne	41cc18 <_obstack_memory_used@@Base+0xa38>  // b.any
  41cc0c:	ldrb	w0, [sp, #15]
  41cc10:	cmp	w0, #0x0
  41cc14:	b.eq	41cc20 <_obstack_memory_used@@Base+0xa40>  // b.none
  41cc18:	mov	w0, #0x1                   	// #1
  41cc1c:	b	41cc24 <_obstack_memory_used@@Base+0xa44>
  41cc20:	mov	w0, #0x0                   	// #0
  41cc24:	and	w1, w0, #0xff
  41cc28:	ldr	x0, [sp, #24]
  41cc2c:	strb	w1, [x0, #139]
  41cc30:	ldr	x0, [sp]
  41cc34:	ldr	w1, [x0, #180]
  41cc38:	ldr	x0, [sp, #24]
  41cc3c:	str	w1, [x0, #144]
  41cc40:	ldr	x0, [sp]
  41cc44:	ldrb	w0, [x0, #176]
  41cc48:	ubfx	x0, x0, #2, #1
  41cc4c:	and	w0, w0, #0xff
  41cc50:	mov	w1, w0
  41cc54:	ldr	x0, [sp, #24]
  41cc58:	strb	w1, [x0, #137]
  41cc5c:	ldr	x0, [sp]
  41cc60:	ldrb	w0, [x0, #176]
  41cc64:	ubfx	x0, x0, #3, #1
  41cc68:	and	w0, w0, #0xff
  41cc6c:	mov	w1, w0
  41cc70:	ldr	x0, [sp, #24]
  41cc74:	strb	w1, [x0, #138]
  41cc78:	ldr	x0, [sp, #24]
  41cc7c:	ldr	x1, [x0, #88]
  41cc80:	ldr	x0, [sp, #24]
  41cc84:	str	x1, [x0, #104]
  41cc88:	ldr	x0, [sp, #24]
  41cc8c:	ldr	x1, [x0, #104]
  41cc90:	ldr	x0, [sp, #24]
  41cc94:	str	x1, [x0, #96]
  41cc98:	nop
  41cc9c:	add	sp, sp, #0x30
  41cca0:	ret
  41cca4:	stp	x29, x30, [sp, #-176]!
  41cca8:	mov	x29, sp
  41ccac:	str	x0, [sp, #24]
  41ccb0:	ldr	x0, [sp, #24]
  41ccb4:	ldr	x1, [x0, #64]
  41ccb8:	ldr	x0, [sp, #24]
  41ccbc:	ldr	x0, [x0, #88]
  41ccc0:	cmp	x1, x0
  41ccc4:	csel	x0, x1, x0, le
  41ccc8:	str	x0, [sp, #136]
  41cccc:	ldr	x0, [sp, #24]
  41ccd0:	ldr	x0, [x0, #48]
  41ccd4:	str	x0, [sp, #168]
  41ccd8:	b	41cfc8 <_obstack_memory_used@@Base+0xde8>
  41ccdc:	ldr	x1, [sp, #136]
  41cce0:	ldr	x0, [sp, #168]
  41cce4:	sub	x0, x1, x0
  41cce8:	str	x0, [sp, #128]
  41ccec:	ldr	x0, [sp, #24]
  41ccf0:	ldr	x0, [x0, #32]
  41ccf4:	str	x0, [sp, #48]
  41ccf8:	ldr	x0, [sp, #24]
  41ccfc:	ldr	x0, [x0, #120]
  41cd00:	cmp	x0, #0x0
  41cd04:	cset	w0, ne  // ne = any
  41cd08:	and	w0, w0, #0xff
  41cd0c:	and	x0, x0, #0xff
  41cd10:	cmp	x0, #0x0
  41cd14:	b.eq	41cdc8 <_obstack_memory_used@@Base+0xbe8>  // b.none
  41cd18:	str	wzr, [sp, #148]
  41cd1c:	b	41cd98 <_obstack_memory_used@@Base+0xbb8>
  41cd20:	ldr	x0, [sp, #24]
  41cd24:	ldr	x0, [x0]
  41cd28:	ldr	x1, [sp, #24]
  41cd2c:	ldr	x2, [x1, #40]
  41cd30:	ldr	x1, [sp, #168]
  41cd34:	add	x2, x2, x1
  41cd38:	ldrsw	x1, [sp, #148]
  41cd3c:	add	x1, x2, x1
  41cd40:	add	x0, x0, x1
  41cd44:	ldrb	w0, [x0]
  41cd48:	str	w0, [sp, #124]
  41cd4c:	ldr	x0, [sp, #24]
  41cd50:	ldr	x1, [x0, #120]
  41cd54:	ldrsw	x0, [sp, #124]
  41cd58:	add	x1, x1, x0
  41cd5c:	ldr	x0, [sp, #24]
  41cd60:	ldr	x0, [x0, #8]
  41cd64:	ldrsw	x3, [sp, #148]
  41cd68:	ldr	x2, [sp, #168]
  41cd6c:	add	x2, x3, x2
  41cd70:	add	x0, x0, x2
  41cd74:	ldrb	w1, [x1]
  41cd78:	strb	w1, [x0]
  41cd7c:	ldrb	w2, [x0]
  41cd80:	ldrsw	x0, [sp, #148]
  41cd84:	add	x1, sp, #0x38
  41cd88:	strb	w2, [x1, x0]
  41cd8c:	ldr	w0, [sp, #148]
  41cd90:	add	w0, w0, #0x1
  41cd94:	str	w0, [sp, #148]
  41cd98:	ldr	x0, [sp, #24]
  41cd9c:	ldr	w0, [x0, #144]
  41cda0:	ldr	w1, [sp, #148]
  41cda4:	cmp	w1, w0
  41cda8:	b.ge	41cdbc <_obstack_memory_used@@Base+0xbdc>  // b.tcont
  41cdac:	ldrsw	x0, [sp, #148]
  41cdb0:	ldr	x1, [sp, #128]
  41cdb4:	cmp	x1, x0
  41cdb8:	b.gt	41cd20 <_obstack_memory_used@@Base+0xb40>
  41cdbc:	add	x0, sp, #0x38
  41cdc0:	str	x0, [sp, #152]
  41cdc4:	b	41cdec <_obstack_memory_used@@Base+0xc0c>
  41cdc8:	ldr	x0, [sp, #24]
  41cdcc:	ldr	x1, [x0]
  41cdd0:	ldr	x0, [sp, #24]
  41cdd4:	ldr	x0, [x0, #40]
  41cdd8:	mov	x2, x0
  41cddc:	ldr	x0, [sp, #168]
  41cde0:	add	x0, x2, x0
  41cde4:	add	x0, x1, x0
  41cde8:	str	x0, [sp, #152]
  41cdec:	ldr	x1, [sp, #128]
  41cdf0:	ldr	x0, [sp, #24]
  41cdf4:	add	x2, x0, #0x20
  41cdf8:	add	x0, sp, #0x2c
  41cdfc:	mov	x3, x2
  41ce00:	mov	x2, x1
  41ce04:	ldr	x1, [sp, #152]
  41ce08:	bl	41bae8 <wcrtomb@plt+0x18cf8>
  41ce0c:	str	x0, [sp, #160]
  41ce10:	ldr	x0, [sp, #160]
  41ce14:	cmn	x0, #0x1
  41ce18:	cset	w0, eq  // eq = none
  41ce1c:	and	w0, w0, #0xff
  41ce20:	and	x0, x0, #0xff
  41ce24:	cmp	x0, #0x0
  41ce28:	b.ne	41ce48 <_obstack_memory_used@@Base+0xc68>  // b.any
  41ce2c:	ldr	x0, [sp, #160]
  41ce30:	cmp	x0, #0x0
  41ce34:	cset	w0, eq  // eq = none
  41ce38:	and	w0, w0, #0xff
  41ce3c:	and	x0, x0, #0xff
  41ce40:	cmp	x0, #0x0
  41ce44:	b.eq	41ce50 <_obstack_memory_used@@Base+0xc70>  // b.none
  41ce48:	mov	w0, #0x1                   	// #1
  41ce4c:	b	41ce54 <_obstack_memory_used@@Base+0xc74>
  41ce50:	mov	w0, #0x0                   	// #0
  41ce54:	cmp	w0, #0x0
  41ce58:	b.ne	41ceb4 <_obstack_memory_used@@Base+0xcd4>  // b.any
  41ce5c:	ldr	x0, [sp, #160]
  41ce60:	cmn	x0, #0x2
  41ce64:	cset	w0, eq  // eq = none
  41ce68:	and	w0, w0, #0xff
  41ce6c:	and	x0, x0, #0xff
  41ce70:	cmp	x0, #0x0
  41ce74:	b.eq	41cea8 <_obstack_memory_used@@Base+0xcc8>  // b.none
  41ce78:	ldr	x0, [sp, #24]
  41ce7c:	ldr	x1, [x0, #64]
  41ce80:	ldr	x0, [sp, #24]
  41ce84:	ldr	x0, [x0, #88]
  41ce88:	cmp	x1, x0
  41ce8c:	cset	w0, ge  // ge = tcont
  41ce90:	and	w0, w0, #0xff
  41ce94:	and	x0, x0, #0xff
  41ce98:	cmp	x0, #0x0
  41ce9c:	b.eq	41cea8 <_obstack_memory_used@@Base+0xcc8>  // b.none
  41cea0:	mov	w0, #0x1                   	// #1
  41cea4:	b	41ceac <_obstack_memory_used@@Base+0xccc>
  41cea8:	mov	w0, #0x0                   	// #0
  41ceac:	cmp	w0, #0x0
  41ceb0:	b.eq	41cf2c <_obstack_memory_used@@Base+0xd4c>  // b.none
  41ceb4:	mov	x0, #0x1                   	// #1
  41ceb8:	str	x0, [sp, #160]
  41cebc:	ldr	x0, [sp, #24]
  41cec0:	ldr	x0, [x0]
  41cec4:	ldr	x1, [sp, #24]
  41cec8:	ldr	x2, [x1, #40]
  41cecc:	ldr	x1, [sp, #168]
  41ced0:	add	x1, x2, x1
  41ced4:	add	x0, x0, x1
  41ced8:	ldrb	w0, [x0]
  41cedc:	str	w0, [sp, #44]
  41cee0:	ldr	x0, [sp, #24]
  41cee4:	ldr	x0, [x0, #120]
  41cee8:	cmp	x0, #0x0
  41ceec:	cset	w0, ne  // ne = any
  41cef0:	and	w0, w0, #0xff
  41cef4:	and	x0, x0, #0xff
  41cef8:	cmp	x0, #0x0
  41cefc:	b.eq	41cf1c <_obstack_memory_used@@Base+0xd3c>  // b.none
  41cf00:	ldr	x0, [sp, #24]
  41cf04:	ldr	x1, [x0, #120]
  41cf08:	ldr	w0, [sp, #44]
  41cf0c:	mov	w0, w0
  41cf10:	add	x0, x1, x0
  41cf14:	ldrb	w0, [x0]
  41cf18:	str	w0, [sp, #44]
  41cf1c:	ldr	x0, [sp, #24]
  41cf20:	ldr	x1, [sp, #48]
  41cf24:	str	x1, [x0, #32]
  41cf28:	b	41cf58 <_obstack_memory_used@@Base+0xd78>
  41cf2c:	ldr	x0, [sp, #160]
  41cf30:	cmn	x0, #0x2
  41cf34:	cset	w0, eq  // eq = none
  41cf38:	and	w0, w0, #0xff
  41cf3c:	and	x0, x0, #0xff
  41cf40:	cmp	x0, #0x0
  41cf44:	b.eq	41cf58 <_obstack_memory_used@@Base+0xd78>  // b.none
  41cf48:	ldr	x0, [sp, #24]
  41cf4c:	ldr	x1, [sp, #48]
  41cf50:	str	x1, [x0, #32]
  41cf54:	b	41cfd8 <_obstack_memory_used@@Base+0xdf8>
  41cf58:	ldr	x0, [sp, #24]
  41cf5c:	ldr	x1, [x0, #16]
  41cf60:	ldr	x0, [sp, #168]
  41cf64:	add	x2, x0, #0x1
  41cf68:	str	x2, [sp, #168]
  41cf6c:	lsl	x0, x0, #2
  41cf70:	add	x0, x1, x0
  41cf74:	ldr	w1, [sp, #44]
  41cf78:	str	w1, [x0]
  41cf7c:	ldr	x1, [sp, #168]
  41cf80:	ldr	x0, [sp, #160]
  41cf84:	add	x0, x1, x0
  41cf88:	sub	x0, x0, #0x1
  41cf8c:	str	x0, [sp, #128]
  41cf90:	b	41cfb8 <_obstack_memory_used@@Base+0xdd8>
  41cf94:	ldr	x0, [sp, #24]
  41cf98:	ldr	x1, [x0, #16]
  41cf9c:	ldr	x0, [sp, #168]
  41cfa0:	add	x2, x0, #0x1
  41cfa4:	str	x2, [sp, #168]
  41cfa8:	lsl	x0, x0, #2
  41cfac:	add	x0, x1, x0
  41cfb0:	mov	w1, #0xffffffff            	// #-1
  41cfb4:	str	w1, [x0]
  41cfb8:	ldr	x1, [sp, #168]
  41cfbc:	ldr	x0, [sp, #128]
  41cfc0:	cmp	x1, x0
  41cfc4:	b.lt	41cf94 <_obstack_memory_used@@Base+0xdb4>  // b.tstop
  41cfc8:	ldr	x1, [sp, #168]
  41cfcc:	ldr	x0, [sp, #136]
  41cfd0:	cmp	x1, x0
  41cfd4:	b.lt	41ccdc <_obstack_memory_used@@Base+0xafc>  // b.tstop
  41cfd8:	ldr	x0, [sp, #24]
  41cfdc:	ldr	x1, [sp, #168]
  41cfe0:	str	x1, [x0, #48]
  41cfe4:	ldr	x0, [sp, #24]
  41cfe8:	ldr	x1, [sp, #168]
  41cfec:	str	x1, [x0, #56]
  41cff0:	nop
  41cff4:	ldp	x29, x30, [sp], #176
  41cff8:	ret
  41cffc:	stp	x29, x30, [sp, #-240]!
  41d000:	mov	x29, sp
  41d004:	str	x0, [sp, #24]
  41d008:	ldr	x0, [sp, #24]
  41d00c:	ldr	x0, [x0, #48]
  41d010:	str	x0, [sp, #224]
  41d014:	ldr	x0, [sp, #24]
  41d018:	ldr	x1, [x0, #64]
  41d01c:	ldr	x0, [sp, #24]
  41d020:	ldr	x0, [x0, #88]
  41d024:	cmp	x1, x0
  41d028:	csel	x0, x1, x0, le
  41d02c:	str	x0, [sp, #216]
  41d030:	ldr	x0, [sp, #24]
  41d034:	ldrb	w0, [x0, #138]
  41d038:	cmp	w0, #0x0
  41d03c:	b.ne	41d3f4 <_obstack_memory_used@@Base+0x1214>  // b.any
  41d040:	ldr	x0, [sp, #24]
  41d044:	ldr	x0, [x0, #120]
  41d048:	cmp	x0, #0x0
  41d04c:	b.ne	41d3f4 <_obstack_memory_used@@Base+0x1214>  // b.any
  41d050:	ldr	x0, [sp, #24]
  41d054:	ldrb	w0, [x0, #140]
  41d058:	cmp	w0, #0x0
  41d05c:	b.ne	41d3f4 <_obstack_memory_used@@Base+0x1214>  // b.any
  41d060:	b	41d3c4 <_obstack_memory_used@@Base+0x11e4>
  41d064:	ldr	x0, [sp, #24]
  41d068:	ldr	x0, [x0]
  41d06c:	ldr	x1, [sp, #24]
  41d070:	ldr	x2, [x1, #40]
  41d074:	ldr	x1, [sp, #224]
  41d078:	add	x1, x2, x1
  41d07c:	add	x0, x0, x1
  41d080:	ldrb	w0, [x0]
  41d084:	and	w0, w0, #0xffffff80
  41d088:	cmp	w0, #0x0
  41d08c:	b.ne	41d124 <_obstack_memory_used@@Base+0xf44>  // b.any
  41d090:	ldr	x0, [sp, #24]
  41d094:	add	x0, x0, #0x20
  41d098:	bl	402ac0 <mbsinit@plt>
  41d09c:	cmp	w0, #0x0
  41d0a0:	b.eq	41d124 <_obstack_memory_used@@Base+0xf44>  // b.none
  41d0a4:	ldr	x0, [sp, #24]
  41d0a8:	ldr	x0, [x0]
  41d0ac:	ldr	x1, [sp, #24]
  41d0b0:	ldr	x2, [x1, #40]
  41d0b4:	ldr	x1, [sp, #224]
  41d0b8:	add	x1, x2, x1
  41d0bc:	add	x0, x0, x1
  41d0c0:	ldrb	w0, [x0]
  41d0c4:	bl	4028c0 <toupper@plt>
  41d0c8:	mov	w2, w0
  41d0cc:	ldr	x0, [sp, #24]
  41d0d0:	ldr	x1, [x0, #8]
  41d0d4:	ldr	x0, [sp, #224]
  41d0d8:	add	x0, x1, x0
  41d0dc:	and	w1, w2, #0xff
  41d0e0:	strb	w1, [x0]
  41d0e4:	ldr	x0, [sp, #24]
  41d0e8:	ldr	x1, [x0, #8]
  41d0ec:	ldr	x0, [sp, #224]
  41d0f0:	add	x0, x1, x0
  41d0f4:	ldrb	w2, [x0]
  41d0f8:	ldr	x0, [sp, #24]
  41d0fc:	ldr	x1, [x0, #16]
  41d100:	ldr	x0, [sp, #224]
  41d104:	lsl	x0, x0, #2
  41d108:	add	x0, x1, x0
  41d10c:	mov	w1, w2
  41d110:	str	w1, [x0]
  41d114:	ldr	x0, [sp, #224]
  41d118:	add	x0, x0, #0x1
  41d11c:	str	x0, [sp, #224]
  41d120:	b	41d3c4 <_obstack_memory_used@@Base+0x11e4>
  41d124:	ldr	x1, [sp, #216]
  41d128:	ldr	x0, [sp, #224]
  41d12c:	sub	x0, x1, x0
  41d130:	str	x0, [sp, #168]
  41d134:	ldr	x0, [sp, #24]
  41d138:	ldr	x0, [x0, #32]
  41d13c:	str	x0, [sp, #112]
  41d140:	ldr	x0, [sp, #24]
  41d144:	ldr	x1, [x0]
  41d148:	ldr	x0, [sp, #24]
  41d14c:	ldr	x0, [x0, #40]
  41d150:	mov	x2, x0
  41d154:	ldr	x0, [sp, #224]
  41d158:	add	x0, x2, x0
  41d15c:	add	x1, x1, x0
  41d160:	ldr	x2, [sp, #168]
  41d164:	ldr	x0, [sp, #24]
  41d168:	add	x3, x0, #0x20
  41d16c:	add	x0, sp, #0x2c
  41d170:	bl	41bae8 <wcrtomb@plt+0x18cf8>
  41d174:	str	x0, [sp, #160]
  41d178:	ldr	x0, [sp, #160]
  41d17c:	cmp	x0, #0x0
  41d180:	cset	w0, ne  // ne = any
  41d184:	and	w0, w0, #0xff
  41d188:	and	x0, x0, #0xff
  41d18c:	cmp	x0, #0x0
  41d190:	b.eq	41d2e4 <_obstack_memory_used@@Base+0x1104>  // b.none
  41d194:	ldr	x0, [sp, #160]
  41d198:	cmn	x0, #0x3
  41d19c:	cset	w0, ls  // ls = plast
  41d1a0:	and	w0, w0, #0xff
  41d1a4:	and	x0, x0, #0xff
  41d1a8:	cmp	x0, #0x0
  41d1ac:	b.eq	41d2e4 <_obstack_memory_used@@Base+0x1104>  // b.none
  41d1b0:	ldr	w0, [sp, #44]
  41d1b4:	bl	402ce0 <towupper@plt>
  41d1b8:	str	w0, [sp, #156]
  41d1bc:	ldr	w0, [sp, #44]
  41d1c0:	ldr	w1, [sp, #156]
  41d1c4:	cmp	w1, w0
  41d1c8:	b.eq	41d230 <_obstack_memory_used@@Base+0x1050>  // b.none
  41d1cc:	add	x1, sp, #0x70
  41d1d0:	add	x0, sp, #0x30
  41d1d4:	mov	x2, x1
  41d1d8:	ldr	w1, [sp, #156]
  41d1dc:	bl	402df0 <wcrtomb@plt>
  41d1e0:	str	x0, [sp, #144]
  41d1e4:	ldr	x1, [sp, #160]
  41d1e8:	ldr	x0, [sp, #144]
  41d1ec:	cmp	x1, x0
  41d1f0:	cset	w0, eq  // eq = none
  41d1f4:	and	w0, w0, #0xff
  41d1f8:	and	x0, x0, #0xff
  41d1fc:	cmp	x0, #0x0
  41d200:	b.eq	41d224 <_obstack_memory_used@@Base+0x1044>  // b.none
  41d204:	ldr	x0, [sp, #24]
  41d208:	ldr	x1, [x0, #8]
  41d20c:	ldr	x0, [sp, #224]
  41d210:	add	x0, x1, x0
  41d214:	add	x1, sp, #0x30
  41d218:	ldr	x2, [sp, #160]
  41d21c:	bl	4026d0 <memcpy@plt>
  41d220:	b	41d270 <_obstack_memory_used@@Base+0x1090>
  41d224:	ldr	x0, [sp, #224]
  41d228:	str	x0, [sp, #232]
  41d22c:	b	41d408 <_obstack_memory_used@@Base+0x1228>
  41d230:	ldr	x0, [sp, #24]
  41d234:	ldr	x1, [x0, #8]
  41d238:	ldr	x0, [sp, #224]
  41d23c:	add	x3, x1, x0
  41d240:	ldr	x0, [sp, #24]
  41d244:	ldr	x1, [x0]
  41d248:	ldr	x0, [sp, #24]
  41d24c:	ldr	x0, [x0, #40]
  41d250:	mov	x2, x0
  41d254:	ldr	x0, [sp, #224]
  41d258:	add	x0, x2, x0
  41d25c:	add	x0, x1, x0
  41d260:	ldr	x2, [sp, #160]
  41d264:	mov	x1, x0
  41d268:	mov	x0, x3
  41d26c:	bl	4026d0 <memcpy@plt>
  41d270:	ldr	x0, [sp, #24]
  41d274:	ldr	x1, [x0, #16]
  41d278:	ldr	x0, [sp, #224]
  41d27c:	add	x2, x0, #0x1
  41d280:	str	x2, [sp, #224]
  41d284:	lsl	x0, x0, #2
  41d288:	add	x0, x1, x0
  41d28c:	ldr	w1, [sp, #156]
  41d290:	str	w1, [x0]
  41d294:	ldr	x1, [sp, #224]
  41d298:	ldr	x0, [sp, #160]
  41d29c:	add	x0, x1, x0
  41d2a0:	sub	x0, x0, #0x1
  41d2a4:	str	x0, [sp, #168]
  41d2a8:	b	41d2d0 <_obstack_memory_used@@Base+0x10f0>
  41d2ac:	ldr	x0, [sp, #24]
  41d2b0:	ldr	x1, [x0, #16]
  41d2b4:	ldr	x0, [sp, #224]
  41d2b8:	add	x2, x0, #0x1
  41d2bc:	str	x2, [sp, #224]
  41d2c0:	lsl	x0, x0, #2
  41d2c4:	add	x0, x1, x0
  41d2c8:	mov	w1, #0xffffffff            	// #-1
  41d2cc:	str	w1, [x0]
  41d2d0:	ldr	x1, [sp, #224]
  41d2d4:	ldr	x0, [sp, #168]
  41d2d8:	cmp	x1, x0
  41d2dc:	b.lt	41d2ac <_obstack_memory_used@@Base+0x10cc>  // b.tstop
  41d2e0:	b	41d3c4 <_obstack_memory_used@@Base+0x11e4>
  41d2e4:	ldr	x0, [sp, #160]
  41d2e8:	cmn	x0, #0x1
  41d2ec:	b.eq	41d320 <_obstack_memory_used@@Base+0x1140>  // b.none
  41d2f0:	ldr	x0, [sp, #160]
  41d2f4:	cmp	x0, #0x0
  41d2f8:	b.eq	41d320 <_obstack_memory_used@@Base+0x1140>  // b.none
  41d2fc:	ldr	x0, [sp, #160]
  41d300:	cmn	x0, #0x2
  41d304:	b.ne	41d3b0 <_obstack_memory_used@@Base+0x11d0>  // b.any
  41d308:	ldr	x0, [sp, #24]
  41d30c:	ldr	x1, [x0, #64]
  41d310:	ldr	x0, [sp, #24]
  41d314:	ldr	x0, [x0, #88]
  41d318:	cmp	x1, x0
  41d31c:	b.lt	41d3b0 <_obstack_memory_used@@Base+0x11d0>  // b.tstop
  41d320:	ldr	x0, [sp, #24]
  41d324:	ldr	x0, [x0]
  41d328:	ldr	x1, [sp, #24]
  41d32c:	ldr	x2, [x1, #40]
  41d330:	ldr	x1, [sp, #224]
  41d334:	add	x1, x2, x1
  41d338:	add	x0, x0, x1
  41d33c:	ldrb	w0, [x0]
  41d340:	str	w0, [sp, #140]
  41d344:	ldr	x0, [sp, #24]
  41d348:	ldr	x1, [x0, #8]
  41d34c:	ldr	x0, [sp, #224]
  41d350:	add	x0, x1, x0
  41d354:	ldr	w1, [sp, #140]
  41d358:	and	w1, w1, #0xff
  41d35c:	strb	w1, [x0]
  41d360:	ldr	x0, [sp, #24]
  41d364:	ldr	x1, [x0, #16]
  41d368:	ldr	x0, [sp, #224]
  41d36c:	add	x2, x0, #0x1
  41d370:	str	x2, [sp, #224]
  41d374:	lsl	x0, x0, #2
  41d378:	add	x0, x1, x0
  41d37c:	ldr	w1, [sp, #140]
  41d380:	str	w1, [x0]
  41d384:	ldr	x0, [sp, #160]
  41d388:	cmn	x0, #0x1
  41d38c:	cset	w0, eq  // eq = none
  41d390:	and	w0, w0, #0xff
  41d394:	and	x0, x0, #0xff
  41d398:	cmp	x0, #0x0
  41d39c:	b.eq	41d3c0 <_obstack_memory_used@@Base+0x11e0>  // b.none
  41d3a0:	ldr	x0, [sp, #24]
  41d3a4:	ldr	x1, [sp, #112]
  41d3a8:	str	x1, [x0, #32]
  41d3ac:	b	41d3c0 <_obstack_memory_used@@Base+0x11e0>
  41d3b0:	ldr	x0, [sp, #24]
  41d3b4:	ldr	x1, [sp, #112]
  41d3b8:	str	x1, [x0, #32]
  41d3bc:	b	41d3d4 <_obstack_memory_used@@Base+0x11f4>
  41d3c0:	nop
  41d3c4:	ldr	x1, [sp, #224]
  41d3c8:	ldr	x0, [sp, #216]
  41d3cc:	cmp	x1, x0
  41d3d0:	b.lt	41d064 <_obstack_memory_used@@Base+0xe84>  // b.tstop
  41d3d4:	ldr	x0, [sp, #24]
  41d3d8:	ldr	x1, [sp, #224]
  41d3dc:	str	x1, [x0, #48]
  41d3e0:	ldr	x0, [sp, #24]
  41d3e4:	ldr	x1, [sp, #224]
  41d3e8:	str	x1, [x0, #56]
  41d3ec:	mov	w0, #0x0                   	// #0
  41d3f0:	b	41daf0 <_obstack_memory_used@@Base+0x1910>
  41d3f4:	ldr	x0, [sp, #24]
  41d3f8:	ldr	x0, [x0, #56]
  41d3fc:	str	x0, [sp, #232]
  41d400:	b	41dac4 <_obstack_memory_used@@Base+0x18e4>
  41d404:	nop
  41d408:	ldr	x1, [sp, #216]
  41d40c:	ldr	x0, [sp, #224]
  41d410:	sub	x0, x1, x0
  41d414:	str	x0, [sp, #168]
  41d418:	ldr	x0, [sp, #24]
  41d41c:	ldr	x0, [x0, #32]
  41d420:	str	x0, [sp, #112]
  41d424:	ldr	x0, [sp, #24]
  41d428:	ldr	x0, [x0, #120]
  41d42c:	cmp	x0, #0x0
  41d430:	cset	w0, ne  // ne = any
  41d434:	and	w0, w0, #0xff
  41d438:	and	x0, x0, #0xff
  41d43c:	cmp	x0, #0x0
  41d440:	b.eq	41d4d4 <_obstack_memory_used@@Base+0x12f4>  // b.none
  41d444:	str	wzr, [sp, #204]
  41d448:	b	41d4a4 <_obstack_memory_used@@Base+0x12c4>
  41d44c:	ldr	x0, [sp, #24]
  41d450:	ldr	x0, [x0]
  41d454:	ldr	x1, [sp, #24]
  41d458:	ldr	x2, [x1, #40]
  41d45c:	ldr	x1, [sp, #232]
  41d460:	add	x2, x2, x1
  41d464:	ldrsw	x1, [sp, #204]
  41d468:	add	x1, x2, x1
  41d46c:	add	x0, x0, x1
  41d470:	ldrb	w0, [x0]
  41d474:	str	w0, [sp, #136]
  41d478:	ldr	x0, [sp, #24]
  41d47c:	ldr	x1, [x0, #120]
  41d480:	ldrsw	x0, [sp, #136]
  41d484:	add	x0, x1, x0
  41d488:	ldrb	w2, [x0]
  41d48c:	ldrsw	x0, [sp, #204]
  41d490:	add	x1, sp, #0x30
  41d494:	strb	w2, [x1, x0]
  41d498:	ldr	w0, [sp, #204]
  41d49c:	add	w0, w0, #0x1
  41d4a0:	str	w0, [sp, #204]
  41d4a4:	ldr	x0, [sp, #24]
  41d4a8:	ldr	w0, [x0, #144]
  41d4ac:	ldr	w1, [sp, #204]
  41d4b0:	cmp	w1, w0
  41d4b4:	b.ge	41d4c8 <_obstack_memory_used@@Base+0x12e8>  // b.tcont
  41d4b8:	ldrsw	x0, [sp, #204]
  41d4bc:	ldr	x1, [sp, #168]
  41d4c0:	cmp	x1, x0
  41d4c4:	b.gt	41d44c <_obstack_memory_used@@Base+0x126c>
  41d4c8:	add	x0, sp, #0x30
  41d4cc:	str	x0, [sp, #208]
  41d4d0:	b	41d4f8 <_obstack_memory_used@@Base+0x1318>
  41d4d4:	ldr	x0, [sp, #24]
  41d4d8:	ldr	x1, [x0]
  41d4dc:	ldr	x0, [sp, #24]
  41d4e0:	ldr	x0, [x0, #40]
  41d4e4:	mov	x2, x0
  41d4e8:	ldr	x0, [sp, #232]
  41d4ec:	add	x0, x2, x0
  41d4f0:	add	x0, x1, x0
  41d4f4:	str	x0, [sp, #208]
  41d4f8:	ldr	x1, [sp, #168]
  41d4fc:	ldr	x0, [sp, #24]
  41d500:	add	x2, x0, #0x20
  41d504:	add	x0, sp, #0x28
  41d508:	mov	x3, x2
  41d50c:	mov	x2, x1
  41d510:	ldr	x1, [sp, #208]
  41d514:	bl	41bae8 <wcrtomb@plt+0x18cf8>
  41d518:	str	x0, [sp, #160]
  41d51c:	ldr	x0, [sp, #160]
  41d520:	cmp	x0, #0x0
  41d524:	cset	w0, ne  // ne = any
  41d528:	and	w0, w0, #0xff
  41d52c:	and	x0, x0, #0xff
  41d530:	cmp	x0, #0x0
  41d534:	b.eq	41d964 <_obstack_memory_used@@Base+0x1784>  // b.none
  41d538:	ldr	x0, [sp, #160]
  41d53c:	cmn	x0, #0x3
  41d540:	cset	w0, ls  // ls = plast
  41d544:	and	w0, w0, #0xff
  41d548:	and	x0, x0, #0xff
  41d54c:	cmp	x0, #0x0
  41d550:	b.eq	41d964 <_obstack_memory_used@@Base+0x1784>  // b.none
  41d554:	ldr	w0, [sp, #40]
  41d558:	bl	402ce0 <towupper@plt>
  41d55c:	str	w0, [sp, #132]
  41d560:	ldr	w0, [sp, #40]
  41d564:	ldr	w1, [sp, #132]
  41d568:	cmp	w1, w0
  41d56c:	b.eq	41d850 <_obstack_memory_used@@Base+0x1670>  // b.none
  41d570:	add	x1, sp, #0x70
  41d574:	add	x0, sp, #0x30
  41d578:	mov	x2, x1
  41d57c:	ldr	w1, [sp, #132]
  41d580:	bl	402df0 <wcrtomb@plt>
  41d584:	str	x0, [sp, #120]
  41d588:	ldr	x1, [sp, #160]
  41d58c:	ldr	x0, [sp, #120]
  41d590:	cmp	x1, x0
  41d594:	cset	w0, eq  // eq = none
  41d598:	and	w0, w0, #0xff
  41d59c:	and	x0, x0, #0xff
  41d5a0:	cmp	x0, #0x0
  41d5a4:	b.eq	41d5c8 <_obstack_memory_used@@Base+0x13e8>  // b.none
  41d5a8:	ldr	x0, [sp, #24]
  41d5ac:	ldr	x1, [x0, #8]
  41d5b0:	ldr	x0, [sp, #224]
  41d5b4:	add	x0, x1, x0
  41d5b8:	add	x1, sp, #0x30
  41d5bc:	ldr	x2, [sp, #160]
  41d5c0:	bl	4026d0 <memcpy@plt>
  41d5c4:	b	41d86c <_obstack_memory_used@@Base+0x168c>
  41d5c8:	ldr	x0, [sp, #120]
  41d5cc:	cmn	x0, #0x1
  41d5d0:	b.eq	41d830 <_obstack_memory_used@@Base+0x1650>  // b.none
  41d5d4:	ldr	x1, [sp, #224]
  41d5d8:	ldr	x0, [sp, #120]
  41d5dc:	add	x0, x1, x0
  41d5e0:	ldr	x1, [sp, #24]
  41d5e4:	ldr	x1, [x1, #64]
  41d5e8:	cmp	x0, x1
  41d5ec:	b.ls	41d600 <_obstack_memory_used@@Base+0x1420>  // b.plast
  41d5f0:	ldr	x0, [sp, #24]
  41d5f4:	ldr	x1, [sp, #112]
  41d5f8:	str	x1, [x0, #32]
  41d5fc:	b	41dad4 <_obstack_memory_used@@Base+0x18f4>
  41d600:	ldr	x0, [sp, #24]
  41d604:	ldr	x0, [x0, #24]
  41d608:	cmp	x0, #0x0
  41d60c:	b.ne	41d644 <_obstack_memory_used@@Base+0x1464>  // b.any
  41d610:	ldr	x0, [sp, #24]
  41d614:	ldr	x0, [x0, #64]
  41d618:	lsl	x0, x0, #3
  41d61c:	bl	4028b0 <malloc@plt>
  41d620:	mov	x1, x0
  41d624:	ldr	x0, [sp, #24]
  41d628:	str	x1, [x0, #24]
  41d62c:	ldr	x0, [sp, #24]
  41d630:	ldr	x0, [x0, #24]
  41d634:	cmp	x0, #0x0
  41d638:	b.ne	41d644 <_obstack_memory_used@@Base+0x1464>  // b.any
  41d63c:	mov	w0, #0xc                   	// #12
  41d640:	b	41daf0 <_obstack_memory_used@@Base+0x1910>
  41d644:	ldr	x0, [sp, #24]
  41d648:	ldrb	w0, [x0, #140]
  41d64c:	cmp	w0, #0x0
  41d650:	b.ne	41d6a0 <_obstack_memory_used@@Base+0x14c0>  // b.any
  41d654:	str	xzr, [sp, #192]
  41d658:	b	41d684 <_obstack_memory_used@@Base+0x14a4>
  41d65c:	ldr	x0, [sp, #24]
  41d660:	ldr	x1, [x0, #24]
  41d664:	ldr	x0, [sp, #192]
  41d668:	lsl	x0, x0, #3
  41d66c:	add	x0, x1, x0
  41d670:	ldr	x1, [sp, #192]
  41d674:	str	x1, [x0]
  41d678:	ldr	x0, [sp, #192]
  41d67c:	add	x0, x0, #0x1
  41d680:	str	x0, [sp, #192]
  41d684:	ldr	x0, [sp, #224]
  41d688:	ldr	x1, [sp, #192]
  41d68c:	cmp	x1, x0
  41d690:	b.cc	41d65c <_obstack_memory_used@@Base+0x147c>  // b.lo, b.ul, b.last
  41d694:	ldr	x0, [sp, #24]
  41d698:	mov	w1, #0x1                   	// #1
  41d69c:	strb	w1, [x0, #140]
  41d6a0:	ldr	x0, [sp, #24]
  41d6a4:	ldr	x1, [x0, #8]
  41d6a8:	ldr	x0, [sp, #224]
  41d6ac:	add	x0, x1, x0
  41d6b0:	add	x1, sp, #0x30
  41d6b4:	ldr	x2, [sp, #120]
  41d6b8:	bl	4026d0 <memcpy@plt>
  41d6bc:	ldr	x0, [sp, #24]
  41d6c0:	ldr	x1, [x0, #16]
  41d6c4:	ldr	x0, [sp, #224]
  41d6c8:	lsl	x0, x0, #2
  41d6cc:	add	x0, x1, x0
  41d6d0:	ldr	w1, [sp, #132]
  41d6d4:	str	w1, [x0]
  41d6d8:	ldr	x0, [sp, #24]
  41d6dc:	ldr	x1, [x0, #24]
  41d6e0:	ldr	x0, [sp, #224]
  41d6e4:	lsl	x0, x0, #3
  41d6e8:	add	x0, x1, x0
  41d6ec:	ldr	x1, [sp, #232]
  41d6f0:	str	x1, [x0]
  41d6f4:	mov	x0, #0x1                   	// #1
  41d6f8:	str	x0, [sp, #192]
  41d6fc:	b	41d77c <_obstack_memory_used@@Base+0x159c>
  41d700:	ldr	x1, [sp, #192]
  41d704:	ldr	x0, [sp, #160]
  41d708:	cmp	x1, x0
  41d70c:	b.cc	41d71c <_obstack_memory_used@@Base+0x153c>  // b.lo, b.ul, b.last
  41d710:	ldr	x0, [sp, #160]
  41d714:	sub	x0, x0, #0x1
  41d718:	b	41d720 <_obstack_memory_used@@Base+0x1540>
  41d71c:	ldr	x0, [sp, #192]
  41d720:	ldr	x1, [sp, #232]
  41d724:	add	x3, x0, x1
  41d728:	ldr	x0, [sp, #24]
  41d72c:	ldr	x1, [x0, #24]
  41d730:	ldr	x2, [sp, #224]
  41d734:	ldr	x0, [sp, #192]
  41d738:	add	x0, x2, x0
  41d73c:	lsl	x0, x0, #3
  41d740:	add	x0, x1, x0
  41d744:	mov	x1, x3
  41d748:	str	x1, [x0]
  41d74c:	ldr	x0, [sp, #24]
  41d750:	ldr	x1, [x0, #16]
  41d754:	ldr	x2, [sp, #224]
  41d758:	ldr	x0, [sp, #192]
  41d75c:	add	x0, x2, x0
  41d760:	lsl	x0, x0, #2
  41d764:	add	x0, x1, x0
  41d768:	mov	w1, #0xffffffff            	// #-1
  41d76c:	str	w1, [x0]
  41d770:	ldr	x0, [sp, #192]
  41d774:	add	x0, x0, #0x1
  41d778:	str	x0, [sp, #192]
  41d77c:	ldr	x1, [sp, #192]
  41d780:	ldr	x0, [sp, #120]
  41d784:	cmp	x1, x0
  41d788:	b.cc	41d700 <_obstack_memory_used@@Base+0x1520>  // b.lo, b.ul, b.last
  41d78c:	ldr	x0, [sp, #24]
  41d790:	ldr	x0, [x0, #88]
  41d794:	mov	x2, x0
  41d798:	ldr	x1, [sp, #120]
  41d79c:	ldr	x0, [sp, #160]
  41d7a0:	sub	x0, x1, x0
  41d7a4:	add	x0, x2, x0
  41d7a8:	mov	x1, x0
  41d7ac:	ldr	x0, [sp, #24]
  41d7b0:	str	x1, [x0, #88]
  41d7b4:	ldr	x0, [sp, #24]
  41d7b8:	ldr	x0, [x0, #96]
  41d7bc:	ldr	x1, [sp, #232]
  41d7c0:	cmp	x1, x0
  41d7c4:	b.ge	41d7f0 <_obstack_memory_used@@Base+0x1610>  // b.tcont
  41d7c8:	ldr	x0, [sp, #24]
  41d7cc:	ldr	x0, [x0, #104]
  41d7d0:	mov	x2, x0
  41d7d4:	ldr	x1, [sp, #120]
  41d7d8:	ldr	x0, [sp, #160]
  41d7dc:	sub	x0, x1, x0
  41d7e0:	add	x0, x2, x0
  41d7e4:	mov	x1, x0
  41d7e8:	ldr	x0, [sp, #24]
  41d7ec:	str	x1, [x0, #104]
  41d7f0:	ldr	x0, [sp, #24]
  41d7f4:	ldr	x1, [x0, #64]
  41d7f8:	ldr	x0, [sp, #24]
  41d7fc:	ldr	x0, [x0, #88]
  41d800:	cmp	x1, x0
  41d804:	csel	x0, x1, x0, le
  41d808:	str	x0, [sp, #216]
  41d80c:	ldr	x1, [sp, #224]
  41d810:	ldr	x0, [sp, #120]
  41d814:	add	x0, x1, x0
  41d818:	str	x0, [sp, #224]
  41d81c:	ldr	x1, [sp, #232]
  41d820:	ldr	x0, [sp, #160]
  41d824:	add	x0, x1, x0
  41d828:	str	x0, [sp, #232]
  41d82c:	b	41dac4 <_obstack_memory_used@@Base+0x18e4>
  41d830:	ldr	x0, [sp, #24]
  41d834:	ldr	x1, [x0, #8]
  41d838:	ldr	x0, [sp, #224]
  41d83c:	add	x0, x1, x0
  41d840:	ldr	x2, [sp, #160]
  41d844:	ldr	x1, [sp, #208]
  41d848:	bl	4026d0 <memcpy@plt>
  41d84c:	b	41d86c <_obstack_memory_used@@Base+0x168c>
  41d850:	ldr	x0, [sp, #24]
  41d854:	ldr	x1, [x0, #8]
  41d858:	ldr	x0, [sp, #224]
  41d85c:	add	x0, x1, x0
  41d860:	ldr	x2, [sp, #160]
  41d864:	ldr	x1, [sp, #208]
  41d868:	bl	4026d0 <memcpy@plt>
  41d86c:	ldr	x0, [sp, #24]
  41d870:	ldrb	w0, [x0, #140]
  41d874:	cmp	w0, #0x0
  41d878:	cset	w0, ne  // ne = any
  41d87c:	and	w0, w0, #0xff
  41d880:	and	x0, x0, #0xff
  41d884:	cmp	x0, #0x0
  41d888:	b.eq	41d8e0 <_obstack_memory_used@@Base+0x1700>  // b.none
  41d88c:	str	xzr, [sp, #184]
  41d890:	b	41d8d0 <_obstack_memory_used@@Base+0x16f0>
  41d894:	ldr	x1, [sp, #232]
  41d898:	ldr	x0, [sp, #184]
  41d89c:	add	x3, x1, x0
  41d8a0:	ldr	x0, [sp, #24]
  41d8a4:	ldr	x1, [x0, #24]
  41d8a8:	ldr	x2, [sp, #224]
  41d8ac:	ldr	x0, [sp, #184]
  41d8b0:	add	x0, x2, x0
  41d8b4:	lsl	x0, x0, #3
  41d8b8:	add	x0, x1, x0
  41d8bc:	mov	x1, x3
  41d8c0:	str	x1, [x0]
  41d8c4:	ldr	x0, [sp, #184]
  41d8c8:	add	x0, x0, #0x1
  41d8cc:	str	x0, [sp, #184]
  41d8d0:	ldr	x1, [sp, #184]
  41d8d4:	ldr	x0, [sp, #160]
  41d8d8:	cmp	x1, x0
  41d8dc:	b.cc	41d894 <_obstack_memory_used@@Base+0x16b4>  // b.lo, b.ul, b.last
  41d8e0:	ldr	x1, [sp, #232]
  41d8e4:	ldr	x0, [sp, #160]
  41d8e8:	add	x0, x1, x0
  41d8ec:	str	x0, [sp, #232]
  41d8f0:	ldr	x0, [sp, #24]
  41d8f4:	ldr	x1, [x0, #16]
  41d8f8:	ldr	x0, [sp, #224]
  41d8fc:	add	x2, x0, #0x1
  41d900:	str	x2, [sp, #224]
  41d904:	lsl	x0, x0, #2
  41d908:	add	x0, x1, x0
  41d90c:	ldr	w1, [sp, #132]
  41d910:	str	w1, [x0]
  41d914:	ldr	x1, [sp, #224]
  41d918:	ldr	x0, [sp, #160]
  41d91c:	add	x0, x1, x0
  41d920:	sub	x0, x0, #0x1
  41d924:	str	x0, [sp, #168]
  41d928:	b	41d950 <_obstack_memory_used@@Base+0x1770>
  41d92c:	ldr	x0, [sp, #24]
  41d930:	ldr	x1, [x0, #16]
  41d934:	ldr	x0, [sp, #224]
  41d938:	add	x2, x0, #0x1
  41d93c:	str	x2, [sp, #224]
  41d940:	lsl	x0, x0, #2
  41d944:	add	x0, x1, x0
  41d948:	mov	w1, #0xffffffff            	// #-1
  41d94c:	str	w1, [x0]
  41d950:	ldr	x1, [sp, #224]
  41d954:	ldr	x0, [sp, #168]
  41d958:	cmp	x1, x0
  41d95c:	b.lt	41d92c <_obstack_memory_used@@Base+0x174c>  // b.tstop
  41d960:	b	41dac4 <_obstack_memory_used@@Base+0x18e4>
  41d964:	ldr	x0, [sp, #160]
  41d968:	cmn	x0, #0x1
  41d96c:	b.eq	41d9a0 <_obstack_memory_used@@Base+0x17c0>  // b.none
  41d970:	ldr	x0, [sp, #160]
  41d974:	cmp	x0, #0x0
  41d978:	b.eq	41d9a0 <_obstack_memory_used@@Base+0x17c0>  // b.none
  41d97c:	ldr	x0, [sp, #160]
  41d980:	cmn	x0, #0x2
  41d984:	b.ne	41dab0 <_obstack_memory_used@@Base+0x18d0>  // b.any
  41d988:	ldr	x0, [sp, #24]
  41d98c:	ldr	x1, [x0, #64]
  41d990:	ldr	x0, [sp, #24]
  41d994:	ldr	x0, [x0, #88]
  41d998:	cmp	x1, x0
  41d99c:	b.lt	41dab0 <_obstack_memory_used@@Base+0x18d0>  // b.tstop
  41d9a0:	ldr	x0, [sp, #24]
  41d9a4:	ldr	x0, [x0]
  41d9a8:	ldr	x1, [sp, #24]
  41d9ac:	ldr	x2, [x1, #40]
  41d9b0:	ldr	x1, [sp, #232]
  41d9b4:	add	x1, x2, x1
  41d9b8:	add	x0, x0, x1
  41d9bc:	ldrb	w0, [x0]
  41d9c0:	str	w0, [sp, #180]
  41d9c4:	ldr	x0, [sp, #24]
  41d9c8:	ldr	x0, [x0, #120]
  41d9cc:	cmp	x0, #0x0
  41d9d0:	cset	w0, ne  // ne = any
  41d9d4:	and	w0, w0, #0xff
  41d9d8:	and	x0, x0, #0xff
  41d9dc:	cmp	x0, #0x0
  41d9e0:	b.eq	41d9fc <_obstack_memory_used@@Base+0x181c>  // b.none
  41d9e4:	ldr	x0, [sp, #24]
  41d9e8:	ldr	x1, [x0, #120]
  41d9ec:	ldrsw	x0, [sp, #180]
  41d9f0:	add	x0, x1, x0
  41d9f4:	ldrb	w0, [x0]
  41d9f8:	str	w0, [sp, #180]
  41d9fc:	ldr	x0, [sp, #24]
  41da00:	ldr	x1, [x0, #8]
  41da04:	ldr	x0, [sp, #224]
  41da08:	add	x0, x1, x0
  41da0c:	ldr	w1, [sp, #180]
  41da10:	and	w1, w1, #0xff
  41da14:	strb	w1, [x0]
  41da18:	ldr	x0, [sp, #24]
  41da1c:	ldrb	w0, [x0, #140]
  41da20:	cmp	w0, #0x0
  41da24:	cset	w0, ne  // ne = any
  41da28:	and	w0, w0, #0xff
  41da2c:	and	x0, x0, #0xff
  41da30:	cmp	x0, #0x0
  41da34:	b.eq	41da54 <_obstack_memory_used@@Base+0x1874>  // b.none
  41da38:	ldr	x0, [sp, #24]
  41da3c:	ldr	x1, [x0, #24]
  41da40:	ldr	x0, [sp, #224]
  41da44:	lsl	x0, x0, #3
  41da48:	add	x0, x1, x0
  41da4c:	ldr	x1, [sp, #232]
  41da50:	str	x1, [x0]
  41da54:	ldr	x0, [sp, #232]
  41da58:	add	x0, x0, #0x1
  41da5c:	str	x0, [sp, #232]
  41da60:	ldr	x0, [sp, #24]
  41da64:	ldr	x1, [x0, #16]
  41da68:	ldr	x0, [sp, #224]
  41da6c:	add	x2, x0, #0x1
  41da70:	str	x2, [sp, #224]
  41da74:	lsl	x0, x0, #2
  41da78:	add	x0, x1, x0
  41da7c:	ldr	w1, [sp, #180]
  41da80:	str	w1, [x0]
  41da84:	ldr	x0, [sp, #160]
  41da88:	cmn	x0, #0x1
  41da8c:	cset	w0, eq  // eq = none
  41da90:	and	w0, w0, #0xff
  41da94:	and	x0, x0, #0xff
  41da98:	cmp	x0, #0x0
  41da9c:	b.eq	41dac0 <_obstack_memory_used@@Base+0x18e0>  // b.none
  41daa0:	ldr	x0, [sp, #24]
  41daa4:	ldr	x1, [sp, #112]
  41daa8:	str	x1, [x0, #32]
  41daac:	b	41dac0 <_obstack_memory_used@@Base+0x18e0>
  41dab0:	ldr	x0, [sp, #24]
  41dab4:	ldr	x1, [sp, #112]
  41dab8:	str	x1, [x0, #32]
  41dabc:	b	41dad4 <_obstack_memory_used@@Base+0x18f4>
  41dac0:	nop
  41dac4:	ldr	x1, [sp, #224]
  41dac8:	ldr	x0, [sp, #216]
  41dacc:	cmp	x1, x0
  41dad0:	b.lt	41d404 <_obstack_memory_used@@Base+0x1224>  // b.tstop
  41dad4:	ldr	x0, [sp, #24]
  41dad8:	ldr	x1, [sp, #224]
  41dadc:	str	x1, [x0, #48]
  41dae0:	ldr	x0, [sp, #24]
  41dae4:	ldr	x1, [sp, #232]
  41dae8:	str	x1, [x0, #56]
  41daec:	mov	w0, #0x0                   	// #0
  41daf0:	ldp	x29, x30, [sp], #240
  41daf4:	ret
  41daf8:	stp	x29, x30, [sp, #-96]!
  41dafc:	mov	x29, sp
  41db00:	str	x0, [sp, #40]
  41db04:	str	x1, [sp, #32]
  41db08:	str	x2, [sp, #24]
  41db0c:	mov	w0, #0xffffffff            	// #-1
  41db10:	str	w0, [sp, #76]
  41db14:	ldr	x0, [sp, #40]
  41db18:	ldr	x1, [x0, #40]
  41db1c:	ldr	x0, [sp, #40]
  41db20:	ldr	x0, [x0, #56]
  41db24:	add	x0, x1, x0
  41db28:	str	x0, [sp, #88]
  41db2c:	b	41dc48 <_obstack_memory_used@@Base+0x1a68>
  41db30:	ldr	x0, [sp, #40]
  41db34:	ldr	x1, [x0, #80]
  41db38:	ldr	x0, [sp, #88]
  41db3c:	sub	x0, x1, x0
  41db40:	str	x0, [sp, #64]
  41db44:	ldr	x0, [sp, #40]
  41db48:	ldr	x0, [x0, #32]
  41db4c:	str	x0, [sp, #56]
  41db50:	ldr	x0, [sp, #40]
  41db54:	ldr	x1, [x0]
  41db58:	ldr	x0, [sp, #88]
  41db5c:	add	x1, x1, x0
  41db60:	ldr	x2, [sp, #64]
  41db64:	ldr	x0, [sp, #40]
  41db68:	add	x3, x0, #0x20
  41db6c:	add	x0, sp, #0x34
  41db70:	bl	41bae8 <wcrtomb@plt+0x18cf8>
  41db74:	str	x0, [sp, #80]
  41db78:	ldr	x0, [sp, #80]
  41db7c:	cmn	x0, #0x2
  41db80:	cset	w0, eq  // eq = none
  41db84:	and	w0, w0, #0xff
  41db88:	and	x0, x0, #0xff
  41db8c:	cmp	x0, #0x0
  41db90:	b.ne	41dbb0 <_obstack_memory_used@@Base+0x19d0>  // b.any
  41db94:	ldr	x0, [sp, #80]
  41db98:	cmn	x0, #0x1
  41db9c:	cset	w0, eq  // eq = none
  41dba0:	and	w0, w0, #0xff
  41dba4:	and	x0, x0, #0xff
  41dba8:	cmp	x0, #0x0
  41dbac:	b.eq	41dbb8 <_obstack_memory_used@@Base+0x19d8>  // b.none
  41dbb0:	mov	w0, #0x1                   	// #1
  41dbb4:	b	41dbbc <_obstack_memory_used@@Base+0x19dc>
  41dbb8:	mov	w0, #0x0                   	// #0
  41dbbc:	cmp	w0, #0x0
  41dbc0:	b.ne	41dbe0 <_obstack_memory_used@@Base+0x1a00>  // b.any
  41dbc4:	ldr	x0, [sp, #80]
  41dbc8:	cmp	x0, #0x0
  41dbcc:	cset	w0, eq  // eq = none
  41dbd0:	and	w0, w0, #0xff
  41dbd4:	and	x0, x0, #0xff
  41dbd8:	cmp	x0, #0x0
  41dbdc:	b.eq	41dc30 <_obstack_memory_used@@Base+0x1a50>  // b.none
  41dbe0:	ldr	x0, [sp, #80]
  41dbe4:	cmp	x0, #0x0
  41dbe8:	b.eq	41dbf8 <_obstack_memory_used@@Base+0x1a18>  // b.none
  41dbec:	ldr	x0, [sp, #64]
  41dbf0:	cmp	x0, #0x0
  41dbf4:	b.ne	41dc00 <_obstack_memory_used@@Base+0x1a20>  // b.any
  41dbf8:	str	wzr, [sp, #76]
  41dbfc:	b	41dc18 <_obstack_memory_used@@Base+0x1a38>
  41dc00:	ldr	x0, [sp, #40]
  41dc04:	ldr	x1, [x0]
  41dc08:	ldr	x0, [sp, #88]
  41dc0c:	add	x0, x1, x0
  41dc10:	ldrb	w0, [x0]
  41dc14:	str	w0, [sp, #76]
  41dc18:	mov	x0, #0x1                   	// #1
  41dc1c:	str	x0, [sp, #80]
  41dc20:	ldr	x0, [sp, #40]
  41dc24:	ldr	x1, [sp, #56]
  41dc28:	str	x1, [x0, #32]
  41dc2c:	b	41dc38 <_obstack_memory_used@@Base+0x1a58>
  41dc30:	ldr	w0, [sp, #52]
  41dc34:	str	w0, [sp, #76]
  41dc38:	ldr	x1, [sp, #88]
  41dc3c:	ldr	x0, [sp, #80]
  41dc40:	add	x0, x1, x0
  41dc44:	str	x0, [sp, #88]
  41dc48:	ldr	x1, [sp, #88]
  41dc4c:	ldr	x0, [sp, #32]
  41dc50:	cmp	x1, x0
  41dc54:	b.lt	41db30 <_obstack_memory_used@@Base+0x1950>  // b.tstop
  41dc58:	ldr	x0, [sp, #24]
  41dc5c:	ldr	w1, [sp, #76]
  41dc60:	str	w1, [x0]
  41dc64:	ldr	x0, [sp, #88]
  41dc68:	ldp	x29, x30, [sp], #96
  41dc6c:	ret
  41dc70:	stp	x29, x30, [sp, #-64]!
  41dc74:	mov	x29, sp
  41dc78:	str	x0, [sp, #24]
  41dc7c:	ldr	x0, [sp, #24]
  41dc80:	ldr	x1, [x0, #64]
  41dc84:	ldr	x0, [sp, #24]
  41dc88:	ldr	x0, [x0, #88]
  41dc8c:	cmp	x1, x0
  41dc90:	csel	x0, x1, x0, le
  41dc94:	str	x0, [sp, #40]
  41dc98:	ldr	x0, [sp, #24]
  41dc9c:	ldr	x0, [x0, #48]
  41dca0:	str	x0, [sp, #56]
  41dca4:	b	41dd34 <_obstack_memory_used@@Base+0x1b54>
  41dca8:	ldr	x0, [sp, #24]
  41dcac:	ldr	x0, [x0]
  41dcb0:	ldr	x1, [sp, #24]
  41dcb4:	ldr	x2, [x1, #40]
  41dcb8:	ldr	x1, [sp, #56]
  41dcbc:	add	x1, x2, x1
  41dcc0:	add	x0, x0, x1
  41dcc4:	ldrb	w0, [x0]
  41dcc8:	str	w0, [sp, #52]
  41dccc:	ldr	x0, [sp, #24]
  41dcd0:	ldr	x0, [x0, #120]
  41dcd4:	cmp	x0, #0x0
  41dcd8:	cset	w0, ne  // ne = any
  41dcdc:	and	w0, w0, #0xff
  41dce0:	and	x0, x0, #0xff
  41dce4:	cmp	x0, #0x0
  41dce8:	b.eq	41dd04 <_obstack_memory_used@@Base+0x1b24>  // b.none
  41dcec:	ldr	x0, [sp, #24]
  41dcf0:	ldr	x1, [x0, #120]
  41dcf4:	ldrsw	x0, [sp, #52]
  41dcf8:	add	x0, x1, x0
  41dcfc:	ldrb	w0, [x0]
  41dd00:	str	w0, [sp, #52]
  41dd04:	ldr	w0, [sp, #52]
  41dd08:	bl	4028c0 <toupper@plt>
  41dd0c:	mov	w2, w0
  41dd10:	ldr	x0, [sp, #24]
  41dd14:	ldr	x1, [x0, #8]
  41dd18:	ldr	x0, [sp, #56]
  41dd1c:	add	x0, x1, x0
  41dd20:	and	w1, w2, #0xff
  41dd24:	strb	w1, [x0]
  41dd28:	ldr	x0, [sp, #56]
  41dd2c:	add	x0, x0, #0x1
  41dd30:	str	x0, [sp, #56]
  41dd34:	ldr	x1, [sp, #56]
  41dd38:	ldr	x0, [sp, #40]
  41dd3c:	cmp	x1, x0
  41dd40:	b.lt	41dca8 <_obstack_memory_used@@Base+0x1ac8>  // b.tstop
  41dd44:	ldr	x0, [sp, #24]
  41dd48:	ldr	x1, [sp, #56]
  41dd4c:	str	x1, [x0, #48]
  41dd50:	ldr	x0, [sp, #24]
  41dd54:	ldr	x1, [sp, #56]
  41dd58:	str	x1, [x0, #56]
  41dd5c:	nop
  41dd60:	ldp	x29, x30, [sp], #64
  41dd64:	ret
  41dd68:	sub	sp, sp, #0x30
  41dd6c:	str	x0, [sp, #8]
  41dd70:	ldr	x0, [sp, #8]
  41dd74:	ldr	x1, [x0, #64]
  41dd78:	ldr	x0, [sp, #8]
  41dd7c:	ldr	x0, [x0, #88]
  41dd80:	cmp	x1, x0
  41dd84:	csel	x0, x1, x0, le
  41dd88:	str	x0, [sp, #32]
  41dd8c:	ldr	x0, [sp, #8]
  41dd90:	ldr	x0, [x0, #48]
  41dd94:	str	x0, [sp, #40]
  41dd98:	b	41ddf4 <_obstack_memory_used@@Base+0x1c14>
  41dd9c:	ldr	x0, [sp, #8]
  41dda0:	ldr	x0, [x0]
  41dda4:	ldr	x1, [sp, #8]
  41dda8:	ldr	x2, [x1, #40]
  41ddac:	ldr	x1, [sp, #40]
  41ddb0:	add	x1, x2, x1
  41ddb4:	add	x0, x0, x1
  41ddb8:	ldrb	w0, [x0]
  41ddbc:	str	w0, [sp, #28]
  41ddc0:	ldr	x0, [sp, #8]
  41ddc4:	ldr	x1, [x0, #120]
  41ddc8:	ldrsw	x0, [sp, #28]
  41ddcc:	add	x1, x1, x0
  41ddd0:	ldr	x0, [sp, #8]
  41ddd4:	ldr	x2, [x0, #8]
  41ddd8:	ldr	x0, [sp, #40]
  41dddc:	add	x0, x2, x0
  41dde0:	ldrb	w1, [x1]
  41dde4:	strb	w1, [x0]
  41dde8:	ldr	x0, [sp, #40]
  41ddec:	add	x0, x0, #0x1
  41ddf0:	str	x0, [sp, #40]
  41ddf4:	ldr	x1, [sp, #40]
  41ddf8:	ldr	x0, [sp, #32]
  41ddfc:	cmp	x1, x0
  41de00:	b.lt	41dd9c <_obstack_memory_used@@Base+0x1bbc>  // b.tstop
  41de04:	ldr	x0, [sp, #8]
  41de08:	ldr	x1, [sp, #40]
  41de0c:	str	x1, [x0, #48]
  41de10:	ldr	x0, [sp, #8]
  41de14:	ldr	x1, [sp, #40]
  41de18:	str	x1, [x0, #56]
  41de1c:	nop
  41de20:	add	sp, sp, #0x30
  41de24:	ret
  41de28:	stp	x29, x30, [sp, #-192]!
  41de2c:	mov	x29, sp
  41de30:	str	x0, [sp, #40]
  41de34:	str	x1, [sp, #32]
  41de38:	str	w2, [sp, #28]
  41de3c:	ldr	x0, [sp, #40]
  41de40:	ldr	x0, [x0, #40]
  41de44:	ldr	x1, [sp, #32]
  41de48:	cmp	x1, x0
  41de4c:	cset	w0, ge  // ge = tcont
  41de50:	and	w0, w0, #0xff
  41de54:	and	x0, x0, #0xff
  41de58:	cmp	x0, #0x0
  41de5c:	b.eq	41de78 <_obstack_memory_used@@Base+0x1c98>  // b.none
  41de60:	ldr	x0, [sp, #40]
  41de64:	ldr	x0, [x0, #40]
  41de68:	ldr	x1, [sp, #32]
  41de6c:	sub	x0, x1, x0
  41de70:	str	x0, [sp, #184]
  41de74:	b	41df28 <_obstack_memory_used@@Base+0x1d48>
  41de78:	ldr	x0, [sp, #40]
  41de7c:	ldr	w0, [x0, #144]
  41de80:	cmp	w0, #0x1
  41de84:	b.le	41de9c <_obstack_memory_used@@Base+0x1cbc>
  41de88:	ldr	x0, [sp, #40]
  41de8c:	add	x0, x0, #0x20
  41de90:	mov	x2, #0x8                   	// #8
  41de94:	mov	w1, #0x0                   	// #0
  41de98:	bl	402980 <memset@plt>
  41de9c:	ldr	x0, [sp, #40]
  41dea0:	ldr	x1, [x0, #80]
  41dea4:	ldr	x0, [sp, #40]
  41dea8:	str	x1, [x0, #88]
  41deac:	ldr	x0, [sp, #40]
  41deb0:	ldr	x1, [x0, #96]
  41deb4:	ldr	x0, [sp, #40]
  41deb8:	str	x1, [x0, #104]
  41debc:	ldr	x0, [sp, #40]
  41dec0:	str	xzr, [x0, #48]
  41dec4:	ldr	x0, [sp, #40]
  41dec8:	str	xzr, [x0, #40]
  41decc:	ldr	x0, [sp, #40]
  41ded0:	str	xzr, [x0, #56]
  41ded4:	ldr	x0, [sp, #40]
  41ded8:	strb	wzr, [x0, #140]
  41dedc:	ldr	w0, [sp, #28]
  41dee0:	and	w0, w0, #0x1
  41dee4:	cmp	w0, #0x0
  41dee8:	b.eq	41def4 <_obstack_memory_used@@Base+0x1d14>  // b.none
  41deec:	mov	w0, #0x4                   	// #4
  41def0:	b	41def8 <_obstack_memory_used@@Base+0x1d18>
  41def4:	mov	w0, #0x6                   	// #6
  41def8:	ldr	x1, [sp, #40]
  41defc:	str	w0, [x1, #112]
  41df00:	ldr	x0, [sp, #40]
  41df04:	ldrb	w0, [x0, #139]
  41df08:	cmp	w0, #0x0
  41df0c:	b.ne	41df20 <_obstack_memory_used@@Base+0x1d40>  // b.any
  41df10:	ldr	x0, [sp, #40]
  41df14:	ldr	x1, [x0]
  41df18:	ldr	x0, [sp, #40]
  41df1c:	str	x1, [x0, #8]
  41df20:	ldr	x0, [sp, #32]
  41df24:	str	x0, [sp, #184]
  41df28:	ldr	x0, [sp, #184]
  41df2c:	cmp	x0, #0x0
  41df30:	cset	w0, ne  // ne = any
  41df34:	and	w0, w0, #0xff
  41df38:	and	x0, x0, #0xff
  41df3c:	cmp	x0, #0x0
  41df40:	b.eq	41e968 <_obstack_memory_used@@Base+0x2788>  // b.none
  41df44:	ldr	x0, [sp, #40]
  41df48:	ldr	x0, [x0, #56]
  41df4c:	ldr	x1, [sp, #184]
  41df50:	cmp	x1, x0
  41df54:	cset	w0, lt  // lt = tstop
  41df58:	and	w0, w0, #0xff
  41df5c:	and	x0, x0, #0xff
  41df60:	cmp	x0, #0x0
  41df64:	b.eq	41e478 <_obstack_memory_used@@Base+0x2298>  // b.none
  41df68:	ldr	x0, [sp, #40]
  41df6c:	ldrb	w0, [x0, #140]
  41df70:	and	x0, x0, #0xff
  41df74:	cmp	x0, #0x0
  41df78:	b.eq	41e378 <_obstack_memory_used@@Base+0x2198>  // b.none
  41df7c:	str	xzr, [sp, #176]
  41df80:	ldr	x0, [sp, #40]
  41df84:	ldr	x0, [x0, #48]
  41df88:	str	x0, [sp, #168]
  41df8c:	ldr	x1, [sp, #168]
  41df90:	ldr	x0, [sp, #176]
  41df94:	add	x0, x1, x0
  41df98:	lsr	x1, x0, #63
  41df9c:	add	x0, x1, x0
  41dfa0:	asr	x0, x0, #1
  41dfa4:	str	x0, [sp, #160]
  41dfa8:	ldr	x0, [sp, #40]
  41dfac:	ldr	x1, [x0, #24]
  41dfb0:	ldr	x0, [sp, #160]
  41dfb4:	lsl	x0, x0, #3
  41dfb8:	add	x0, x1, x0
  41dfbc:	ldr	x0, [x0]
  41dfc0:	ldr	x1, [sp, #184]
  41dfc4:	cmp	x1, x0
  41dfc8:	b.ge	41dfd8 <_obstack_memory_used@@Base+0x1df8>  // b.tcont
  41dfcc:	ldr	x0, [sp, #160]
  41dfd0:	str	x0, [sp, #168]
  41dfd4:	b	41e008 <_obstack_memory_used@@Base+0x1e28>
  41dfd8:	ldr	x0, [sp, #40]
  41dfdc:	ldr	x1, [x0, #24]
  41dfe0:	ldr	x0, [sp, #160]
  41dfe4:	lsl	x0, x0, #3
  41dfe8:	add	x0, x1, x0
  41dfec:	ldr	x0, [x0]
  41dff0:	ldr	x1, [sp, #184]
  41dff4:	cmp	x1, x0
  41dff8:	b.le	41e01c <_obstack_memory_used@@Base+0x1e3c>
  41dffc:	ldr	x0, [sp, #160]
  41e000:	add	x0, x0, #0x1
  41e004:	str	x0, [sp, #176]
  41e008:	ldr	x1, [sp, #176]
  41e00c:	ldr	x0, [sp, #168]
  41e010:	cmp	x1, x0
  41e014:	b.lt	41df8c <_obstack_memory_used@@Base+0x1dac>  // b.tstop
  41e018:	b	41e020 <_obstack_memory_used@@Base+0x1e40>
  41e01c:	nop
  41e020:	ldr	x0, [sp, #40]
  41e024:	ldr	x1, [x0, #24]
  41e028:	ldr	x0, [sp, #160]
  41e02c:	lsl	x0, x0, #3
  41e030:	add	x0, x1, x0
  41e034:	ldr	x0, [x0]
  41e038:	ldr	x1, [sp, #184]
  41e03c:	cmp	x1, x0
  41e040:	b.le	41e050 <_obstack_memory_used@@Base+0x1e70>
  41e044:	ldr	x0, [sp, #160]
  41e048:	add	x0, x0, #0x1
  41e04c:	str	x0, [sp, #160]
  41e050:	ldr	x0, [sp, #160]
  41e054:	sub	x0, x0, #0x1
  41e058:	ldr	w2, [sp, #28]
  41e05c:	mov	x1, x0
  41e060:	ldr	x0, [sp, #40]
  41e064:	bl	41ee34 <_obstack_memory_used@@Base+0x2c54>
  41e068:	mov	w1, w0
  41e06c:	ldr	x0, [sp, #40]
  41e070:	str	w1, [x0, #112]
  41e074:	ldr	x0, [sp, #40]
  41e078:	ldr	x0, [x0, #48]
  41e07c:	ldr	x1, [sp, #184]
  41e080:	cmp	x1, x0
  41e084:	b.ge	41e1d0 <_obstack_memory_used@@Base+0x1ff0>  // b.tcont
  41e088:	ldr	x1, [sp, #160]
  41e08c:	ldr	x0, [sp, #184]
  41e090:	cmp	x1, x0
  41e094:	b.ne	41e1d0 <_obstack_memory_used@@Base+0x1ff0>  // b.any
  41e098:	ldr	x0, [sp, #40]
  41e09c:	ldr	x1, [x0, #24]
  41e0a0:	ldr	x0, [sp, #160]
  41e0a4:	lsl	x0, x0, #3
  41e0a8:	add	x0, x1, x0
  41e0ac:	ldr	x0, [x0]
  41e0b0:	ldr	x1, [sp, #184]
  41e0b4:	cmp	x1, x0
  41e0b8:	b.ne	41e1d0 <_obstack_memory_used@@Base+0x1ff0>  // b.any
  41e0bc:	ldr	x0, [sp, #40]
  41e0c0:	ldr	x3, [x0, #16]
  41e0c4:	ldr	x0, [sp, #40]
  41e0c8:	ldr	x1, [x0, #16]
  41e0cc:	ldr	x0, [sp, #184]
  41e0d0:	lsl	x0, x0, #2
  41e0d4:	add	x4, x1, x0
  41e0d8:	ldr	x0, [sp, #40]
  41e0dc:	ldr	x1, [x0, #48]
  41e0e0:	ldr	x0, [sp, #184]
  41e0e4:	sub	x0, x1, x0
  41e0e8:	lsl	x0, x0, #2
  41e0ec:	mov	x2, x0
  41e0f0:	mov	x1, x4
  41e0f4:	mov	x0, x3
  41e0f8:	bl	4026e0 <memmove@plt>
  41e0fc:	ldr	x0, [sp, #40]
  41e100:	ldr	x3, [x0, #8]
  41e104:	ldr	x0, [sp, #40]
  41e108:	ldr	x1, [x0, #8]
  41e10c:	ldr	x0, [sp, #184]
  41e110:	add	x4, x1, x0
  41e114:	ldr	x0, [sp, #40]
  41e118:	ldr	x1, [x0, #48]
  41e11c:	ldr	x0, [sp, #184]
  41e120:	sub	x0, x1, x0
  41e124:	mov	x2, x0
  41e128:	mov	x1, x4
  41e12c:	mov	x0, x3
  41e130:	bl	4026e0 <memmove@plt>
  41e134:	ldr	x0, [sp, #40]
  41e138:	ldr	x1, [x0, #48]
  41e13c:	ldr	x0, [sp, #184]
  41e140:	sub	x1, x1, x0
  41e144:	ldr	x0, [sp, #40]
  41e148:	str	x1, [x0, #48]
  41e14c:	ldr	x0, [sp, #40]
  41e150:	ldr	x1, [x0, #56]
  41e154:	ldr	x0, [sp, #184]
  41e158:	sub	x1, x1, x0
  41e15c:	ldr	x0, [sp, #40]
  41e160:	str	x1, [x0, #56]
  41e164:	str	xzr, [sp, #176]
  41e168:	b	41e1b8 <_obstack_memory_used@@Base+0x1fd8>
  41e16c:	ldr	x0, [sp, #40]
  41e170:	ldr	x1, [x0, #24]
  41e174:	ldr	x2, [sp, #176]
  41e178:	ldr	x0, [sp, #184]
  41e17c:	add	x0, x2, x0
  41e180:	lsl	x0, x0, #3
  41e184:	add	x0, x1, x0
  41e188:	ldr	x2, [x0]
  41e18c:	ldr	x0, [sp, #40]
  41e190:	ldr	x1, [x0, #24]
  41e194:	ldr	x0, [sp, #176]
  41e198:	lsl	x0, x0, #3
  41e19c:	add	x0, x1, x0
  41e1a0:	ldr	x1, [sp, #184]
  41e1a4:	sub	x1, x2, x1
  41e1a8:	str	x1, [x0]
  41e1ac:	ldr	x0, [sp, #176]
  41e1b0:	add	x0, x0, #0x1
  41e1b4:	str	x0, [sp, #176]
  41e1b8:	ldr	x0, [sp, #40]
  41e1bc:	ldr	x0, [x0, #48]
  41e1c0:	ldr	x1, [sp, #176]
  41e1c4:	cmp	x1, x0
  41e1c8:	b.lt	41e16c <_obstack_memory_used@@Base+0x1f8c>  // b.tstop
  41e1cc:	b	41e93c <_obstack_memory_used@@Base+0x275c>
  41e1d0:	ldr	x0, [sp, #40]
  41e1d4:	ldr	x1, [x0, #80]
  41e1d8:	ldr	x0, [sp, #32]
  41e1dc:	sub	x1, x1, x0
  41e1e0:	ldr	x0, [sp, #184]
  41e1e4:	add	x1, x1, x0
  41e1e8:	ldr	x0, [sp, #40]
  41e1ec:	str	x1, [x0, #88]
  41e1f0:	ldr	x0, [sp, #40]
  41e1f4:	ldr	x1, [x0, #96]
  41e1f8:	ldr	x0, [sp, #32]
  41e1fc:	sub	x1, x1, x0
  41e200:	ldr	x0, [sp, #184]
  41e204:	add	x1, x1, x0
  41e208:	ldr	x0, [sp, #40]
  41e20c:	str	x1, [x0, #104]
  41e210:	ldr	x0, [sp, #40]
  41e214:	strb	wzr, [x0, #140]
  41e218:	b	41e228 <_obstack_memory_used@@Base+0x2048>
  41e21c:	ldr	x0, [sp, #160]
  41e220:	sub	x0, x0, #0x1
  41e224:	str	x0, [sp, #160]
  41e228:	ldr	x0, [sp, #160]
  41e22c:	cmp	x0, #0x0
  41e230:	b.le	41e28c <_obstack_memory_used@@Base+0x20ac>
  41e234:	ldr	x0, [sp, #40]
  41e238:	ldr	x1, [x0, #24]
  41e23c:	ldr	x0, [sp, #160]
  41e240:	lsl	x0, x0, #3
  41e244:	sub	x0, x0, #0x8
  41e248:	add	x0, x1, x0
  41e24c:	ldr	x0, [x0]
  41e250:	ldr	x1, [sp, #184]
  41e254:	cmp	x1, x0
  41e258:	b.eq	41e21c <_obstack_memory_used@@Base+0x203c>  // b.none
  41e25c:	b	41e28c <_obstack_memory_used@@Base+0x20ac>
  41e260:	ldr	x0, [sp, #40]
  41e264:	ldr	x1, [x0, #16]
  41e268:	ldr	x0, [sp, #160]
  41e26c:	lsl	x0, x0, #2
  41e270:	add	x0, x1, x0
  41e274:	ldr	w0, [x0]
  41e278:	cmn	w0, #0x1
  41e27c:	b.ne	41e2a4 <_obstack_memory_used@@Base+0x20c4>  // b.any
  41e280:	ldr	x0, [sp, #160]
  41e284:	add	x0, x0, #0x1
  41e288:	str	x0, [sp, #160]
  41e28c:	ldr	x0, [sp, #40]
  41e290:	ldr	x0, [x0, #48]
  41e294:	ldr	x1, [sp, #160]
  41e298:	cmp	x1, x0
  41e29c:	b.lt	41e260 <_obstack_memory_used@@Base+0x2080>  // b.tstop
  41e2a0:	b	41e2a8 <_obstack_memory_used@@Base+0x20c8>
  41e2a4:	nop
  41e2a8:	ldr	x0, [sp, #40]
  41e2ac:	ldr	x0, [x0, #48]
  41e2b0:	ldr	x1, [sp, #160]
  41e2b4:	cmp	x1, x0
  41e2b8:	b.ne	41e2c8 <_obstack_memory_used@@Base+0x20e8>  // b.any
  41e2bc:	ldr	x0, [sp, #40]
  41e2c0:	str	xzr, [x0, #48]
  41e2c4:	b	41e364 <_obstack_memory_used@@Base+0x2184>
  41e2c8:	ldr	x0, [sp, #40]
  41e2cc:	ldr	x1, [x0, #24]
  41e2d0:	ldr	x0, [sp, #160]
  41e2d4:	lsl	x0, x0, #3
  41e2d8:	add	x0, x1, x0
  41e2dc:	ldr	x1, [x0]
  41e2e0:	ldr	x0, [sp, #184]
  41e2e4:	sub	x1, x1, x0
  41e2e8:	ldr	x0, [sp, #40]
  41e2ec:	str	x1, [x0, #48]
  41e2f0:	ldr	x0, [sp, #40]
  41e2f4:	ldr	x0, [x0, #48]
  41e2f8:	cmp	x0, #0x0
  41e2fc:	b.eq	41e364 <_obstack_memory_used@@Base+0x2184>  // b.none
  41e300:	str	xzr, [sp, #176]
  41e304:	b	41e330 <_obstack_memory_used@@Base+0x2150>
  41e308:	ldr	x0, [sp, #40]
  41e30c:	ldr	x1, [x0, #16]
  41e310:	ldr	x0, [sp, #176]
  41e314:	lsl	x0, x0, #2
  41e318:	add	x0, x1, x0
  41e31c:	mov	w1, #0xffffffff            	// #-1
  41e320:	str	w1, [x0]
  41e324:	ldr	x0, [sp, #176]
  41e328:	add	x0, x0, #0x1
  41e32c:	str	x0, [sp, #176]
  41e330:	ldr	x0, [sp, #40]
  41e334:	ldr	x0, [x0, #48]
  41e338:	ldr	x1, [sp, #176]
  41e33c:	cmp	x1, x0
  41e340:	b.lt	41e308 <_obstack_memory_used@@Base+0x2128>  // b.tstop
  41e344:	ldr	x0, [sp, #40]
  41e348:	ldr	x3, [x0, #8]
  41e34c:	ldr	x0, [sp, #40]
  41e350:	ldr	x0, [x0, #48]
  41e354:	mov	x2, x0
  41e358:	mov	w1, #0xff                  	// #255
  41e35c:	mov	x0, x3
  41e360:	bl	402980 <memset@plt>
  41e364:	ldr	x0, [sp, #40]
  41e368:	ldr	x1, [x0, #48]
  41e36c:	ldr	x0, [sp, #40]
  41e370:	str	x1, [x0, #56]
  41e374:	b	41e93c <_obstack_memory_used@@Base+0x275c>
  41e378:	ldr	x0, [sp, #184]
  41e37c:	sub	x0, x0, #0x1
  41e380:	ldr	w2, [sp, #28]
  41e384:	mov	x1, x0
  41e388:	ldr	x0, [sp, #40]
  41e38c:	bl	41ee34 <_obstack_memory_used@@Base+0x2c54>
  41e390:	mov	w1, w0
  41e394:	ldr	x0, [sp, #40]
  41e398:	str	w1, [x0, #112]
  41e39c:	ldr	x0, [sp, #40]
  41e3a0:	ldr	w0, [x0, #144]
  41e3a4:	cmp	w0, #0x1
  41e3a8:	b.le	41e3ec <_obstack_memory_used@@Base+0x220c>
  41e3ac:	ldr	x0, [sp, #40]
  41e3b0:	ldr	x3, [x0, #16]
  41e3b4:	ldr	x0, [sp, #40]
  41e3b8:	ldr	x1, [x0, #16]
  41e3bc:	ldr	x0, [sp, #184]
  41e3c0:	lsl	x0, x0, #2
  41e3c4:	add	x4, x1, x0
  41e3c8:	ldr	x0, [sp, #40]
  41e3cc:	ldr	x1, [x0, #48]
  41e3d0:	ldr	x0, [sp, #184]
  41e3d4:	sub	x0, x1, x0
  41e3d8:	lsl	x0, x0, #2
  41e3dc:	mov	x2, x0
  41e3e0:	mov	x1, x4
  41e3e4:	mov	x0, x3
  41e3e8:	bl	4026e0 <memmove@plt>
  41e3ec:	ldr	x0, [sp, #40]
  41e3f0:	ldrb	w0, [x0, #139]
  41e3f4:	and	x0, x0, #0xff
  41e3f8:	cmp	x0, #0x0
  41e3fc:	b.eq	41e438 <_obstack_memory_used@@Base+0x2258>  // b.none
  41e400:	ldr	x0, [sp, #40]
  41e404:	ldr	x3, [x0, #8]
  41e408:	ldr	x0, [sp, #40]
  41e40c:	ldr	x1, [x0, #8]
  41e410:	ldr	x0, [sp, #184]
  41e414:	add	x4, x1, x0
  41e418:	ldr	x0, [sp, #40]
  41e41c:	ldr	x1, [x0, #48]
  41e420:	ldr	x0, [sp, #184]
  41e424:	sub	x0, x1, x0
  41e428:	mov	x2, x0
  41e42c:	mov	x1, x4
  41e430:	mov	x0, x3
  41e434:	bl	4026e0 <memmove@plt>
  41e438:	ldr	x0, [sp, #40]
  41e43c:	ldr	x1, [x0, #48]
  41e440:	ldr	x0, [sp, #184]
  41e444:	sub	x1, x1, x0
  41e448:	ldr	x0, [sp, #40]
  41e44c:	str	x1, [x0, #48]
  41e450:	ldr	x0, [sp, #40]
  41e454:	ldr	x1, [x0, #56]
  41e458:	ldr	x0, [sp, #184]
  41e45c:	sub	x1, x1, x0
  41e460:	ldr	x0, [sp, #40]
  41e464:	str	x1, [x0, #56]
  41e468:	ldr	x0, [sp, #40]
  41e46c:	ldr	x0, [x0, #48]
  41e470:	cmp	x0, #0x0
  41e474:	b	41e93c <_obstack_memory_used@@Base+0x275c>
  41e478:	ldr	x0, [sp, #40]
  41e47c:	ldr	x0, [x0, #48]
  41e480:	str	x0, [sp, #112]
  41e484:	ldr	x0, [sp, #40]
  41e488:	ldrb	w0, [x0, #140]
  41e48c:	and	x0, x0, #0xff
  41e490:	cmp	x0, #0x0
  41e494:	b.eq	41e4e0 <_obstack_memory_used@@Base+0x2300>  // b.none
  41e498:	ldr	x0, [sp, #40]
  41e49c:	ldr	x1, [x0, #80]
  41e4a0:	ldr	x0, [sp, #32]
  41e4a4:	sub	x1, x1, x0
  41e4a8:	ldr	x0, [sp, #184]
  41e4ac:	add	x1, x1, x0
  41e4b0:	ldr	x0, [sp, #40]
  41e4b4:	str	x1, [x0, #88]
  41e4b8:	ldr	x0, [sp, #40]
  41e4bc:	ldr	x1, [x0, #96]
  41e4c0:	ldr	x0, [sp, #32]
  41e4c4:	sub	x1, x1, x0
  41e4c8:	ldr	x0, [sp, #184]
  41e4cc:	add	x1, x1, x0
  41e4d0:	ldr	x0, [sp, #40]
  41e4d4:	str	x1, [x0, #104]
  41e4d8:	ldr	x0, [sp, #40]
  41e4dc:	strb	wzr, [x0, #140]
  41e4e0:	ldr	x0, [sp, #40]
  41e4e4:	str	xzr, [x0, #48]
  41e4e8:	ldr	x0, [sp, #40]
  41e4ec:	ldr	w0, [x0, #144]
  41e4f0:	cmp	w0, #0x1
  41e4f4:	b.le	41e890 <_obstack_memory_used@@Base+0x26b0>
  41e4f8:	mov	w0, #0xffffffff            	// #-1
  41e4fc:	str	w0, [sp, #80]
  41e500:	ldr	x0, [sp, #40]
  41e504:	ldrb	w0, [x0, #137]
  41e508:	cmp	w0, #0x0
  41e50c:	b.eq	41e71c <_obstack_memory_used@@Base+0x253c>  // b.none
  41e510:	ldr	x0, [sp, #40]
  41e514:	ldr	x0, [x0]
  41e518:	ldr	x1, [sp, #40]
  41e51c:	ldr	x1, [x1, #40]
  41e520:	add	x0, x0, x1
  41e524:	str	x0, [sp, #104]
  41e528:	ldr	x0, [sp, #40]
  41e52c:	ldr	w0, [x0, #144]
  41e530:	sxtw	x0, w0
  41e534:	ldr	x1, [sp, #184]
  41e538:	sub	x0, x1, x0
  41e53c:	mov	x1, x0
  41e540:	ldr	x0, [sp, #104]
  41e544:	add	x0, x0, x1
  41e548:	str	x0, [sp, #136]
  41e54c:	ldr	x0, [sp, #40]
  41e550:	ldr	x0, [x0]
  41e554:	ldr	x1, [sp, #136]
  41e558:	cmp	x1, x0
  41e55c:	b.cs	41e56c <_obstack_memory_used@@Base+0x238c>  // b.hs, b.nlast
  41e560:	ldr	x0, [sp, #40]
  41e564:	ldr	x0, [x0]
  41e568:	str	x0, [sp, #136]
  41e56c:	ldr	x0, [sp, #184]
  41e570:	sub	x0, x0, #0x1
  41e574:	ldr	x1, [sp, #104]
  41e578:	add	x0, x1, x0
  41e57c:	str	x0, [sp, #144]
  41e580:	b	41e704 <_obstack_memory_used@@Base+0x2524>
  41e584:	ldr	x0, [sp, #144]
  41e588:	ldrb	w0, [x0]
  41e58c:	and	w0, w0, #0xc0
  41e590:	cmp	w0, #0x80
  41e594:	b.eq	41e6f8 <_obstack_memory_used@@Base+0x2518>  // b.none
  41e598:	ldr	x0, [sp, #40]
  41e59c:	ldr	x0, [x0, #88]
  41e5a0:	mov	x1, x0
  41e5a4:	ldr	x0, [sp, #104]
  41e5a8:	add	x1, x0, x1
  41e5ac:	ldr	x0, [sp, #144]
  41e5b0:	sub	x0, x1, x0
  41e5b4:	str	x0, [sp, #96]
  41e5b8:	ldr	x0, [sp, #144]
  41e5bc:	str	x0, [sp, #128]
  41e5c0:	ldr	x0, [sp, #40]
  41e5c4:	ldr	x0, [x0, #120]
  41e5c8:	cmp	x0, #0x0
  41e5cc:	cset	w0, ne  // ne = any
  41e5d0:	and	w0, w0, #0xff
  41e5d4:	and	x0, x0, #0xff
  41e5d8:	cmp	x0, #0x0
  41e5dc:	b.eq	41e64c <_obstack_memory_used@@Base+0x246c>  // b.none
  41e5e0:	ldr	x2, [sp, #96]
  41e5e4:	ldr	x1, [sp, #96]
  41e5e8:	mov	x0, #0x6                   	// #6
  41e5ec:	cmp	x2, #0x6
  41e5f0:	csel	x0, x1, x0, le
  41e5f4:	str	w0, [sp, #124]
  41e5f8:	b	41e62c <_obstack_memory_used@@Base+0x244c>
  41e5fc:	ldr	x0, [sp, #40]
  41e600:	ldr	x1, [x0, #120]
  41e604:	ldrsw	x0, [sp, #124]
  41e608:	ldr	x2, [sp, #144]
  41e60c:	add	x0, x2, x0
  41e610:	ldrb	w0, [x0]
  41e614:	and	x0, x0, #0xff
  41e618:	add	x0, x1, x0
  41e61c:	ldrb	w2, [x0]
  41e620:	ldrsw	x0, [sp, #124]
  41e624:	add	x1, sp, #0x38
  41e628:	strb	w2, [x1, x0]
  41e62c:	ldr	w0, [sp, #124]
  41e630:	sub	w0, w0, #0x1
  41e634:	str	w0, [sp, #124]
  41e638:	ldr	w0, [sp, #124]
  41e63c:	cmp	w0, #0x0
  41e640:	b.ge	41e5fc <_obstack_memory_used@@Base+0x241c>  // b.tcont
  41e644:	add	x0, sp, #0x38
  41e648:	str	x0, [sp, #128]
  41e64c:	add	x0, sp, #0x48
  41e650:	mov	x2, #0x8                   	// #8
  41e654:	mov	w1, #0x0                   	// #0
  41e658:	bl	402980 <memset@plt>
  41e65c:	ldr	x1, [sp, #96]
  41e660:	add	x2, sp, #0x48
  41e664:	add	x0, sp, #0x44
  41e668:	mov	x3, x2
  41e66c:	mov	x2, x1
  41e670:	ldr	x1, [sp, #128]
  41e674:	bl	41bae8 <wcrtomb@plt+0x18cf8>
  41e678:	str	x0, [sp, #88]
  41e67c:	ldr	x0, [sp, #184]
  41e680:	ldr	x1, [sp, #104]
  41e684:	add	x1, x1, x0
  41e688:	ldr	x0, [sp, #144]
  41e68c:	sub	x0, x1, x0
  41e690:	mov	x1, x0
  41e694:	ldr	x0, [sp, #88]
  41e698:	cmp	x0, x1
  41e69c:	b.cc	41e718 <_obstack_memory_used@@Base+0x2538>  // b.lo, b.ul, b.last
  41e6a0:	ldr	x0, [sp, #88]
  41e6a4:	cmn	x0, #0x3
  41e6a8:	b.hi	41e718 <_obstack_memory_used@@Base+0x2538>  // b.pmore
  41e6ac:	ldr	x0, [sp, #40]
  41e6b0:	add	x0, x0, #0x20
  41e6b4:	mov	x2, #0x8                   	// #8
  41e6b8:	mov	w1, #0x0                   	// #0
  41e6bc:	bl	402980 <memset@plt>
  41e6c0:	ldr	x0, [sp, #184]
  41e6c4:	ldr	x1, [sp, #104]
  41e6c8:	add	x1, x1, x0
  41e6cc:	ldr	x0, [sp, #144]
  41e6d0:	sub	x0, x1, x0
  41e6d4:	mov	x1, x0
  41e6d8:	ldr	x0, [sp, #88]
  41e6dc:	sub	x0, x0, x1
  41e6e0:	mov	x1, x0
  41e6e4:	ldr	x0, [sp, #40]
  41e6e8:	str	x1, [x0, #48]
  41e6ec:	ldr	w0, [sp, #68]
  41e6f0:	str	w0, [sp, #80]
  41e6f4:	b	41e718 <_obstack_memory_used@@Base+0x2538>
  41e6f8:	ldr	x0, [sp, #144]
  41e6fc:	sub	x0, x0, #0x1
  41e700:	str	x0, [sp, #144]
  41e704:	ldr	x1, [sp, #144]
  41e708:	ldr	x0, [sp, #136]
  41e70c:	cmp	x1, x0
  41e710:	b.cs	41e584 <_obstack_memory_used@@Base+0x23a4>  // b.hs, b.nlast
  41e714:	b	41e71c <_obstack_memory_used@@Base+0x253c>
  41e718:	nop
  41e71c:	ldr	w0, [sp, #80]
  41e720:	cmn	w0, #0x1
  41e724:	b.ne	41e750 <_obstack_memory_used@@Base+0x2570>  // b.any
  41e728:	add	x0, sp, #0x50
  41e72c:	mov	x2, x0
  41e730:	ldr	x1, [sp, #32]
  41e734:	ldr	x0, [sp, #40]
  41e738:	bl	41daf8 <_obstack_memory_used@@Base+0x1918>
  41e73c:	mov	x1, x0
  41e740:	ldr	x0, [sp, #32]
  41e744:	sub	x1, x1, x0
  41e748:	ldr	x0, [sp, #40]
  41e74c:	str	x1, [x0, #48]
  41e750:	ldr	w0, [sp, #80]
  41e754:	cmn	w0, #0x1
  41e758:	b.ne	41e784 <_obstack_memory_used@@Base+0x25a4>  // b.any
  41e75c:	ldr	x0, [sp, #112]
  41e760:	sub	x0, x0, #0x1
  41e764:	ldr	w2, [sp, #28]
  41e768:	mov	x1, x0
  41e76c:	ldr	x0, [sp, #40]
  41e770:	bl	41ee34 <_obstack_memory_used@@Base+0x2c54>
  41e774:	mov	w1, w0
  41e778:	ldr	x0, [sp, #40]
  41e77c:	str	w1, [x0, #112]
  41e780:	b	41e7f8 <_obstack_memory_used@@Base+0x2618>
  41e784:	ldr	x0, [sp, #40]
  41e788:	ldrb	w0, [x0, #142]
  41e78c:	cmp	w0, #0x0
  41e790:	cset	w0, ne  // ne = any
  41e794:	and	w0, w0, #0xff
  41e798:	and	x0, x0, #0xff
  41e79c:	cmp	x0, #0x0
  41e7a0:	b.eq	41e7c0 <_obstack_memory_used@@Base+0x25e0>  // b.none
  41e7a4:	ldr	w0, [sp, #80]
  41e7a8:	bl	402c70 <iswalnum@plt>
  41e7ac:	cmp	w0, #0x0
  41e7b0:	b.ne	41e7ec <_obstack_memory_used@@Base+0x260c>  // b.any
  41e7b4:	ldr	w0, [sp, #80]
  41e7b8:	cmp	w0, #0x5f
  41e7bc:	b.eq	41e7ec <_obstack_memory_used@@Base+0x260c>  // b.none
  41e7c0:	ldr	w0, [sp, #80]
  41e7c4:	cmp	w0, #0xa
  41e7c8:	b.ne	41e7e4 <_obstack_memory_used@@Base+0x2604>  // b.any
  41e7cc:	ldr	x0, [sp, #40]
  41e7d0:	ldrb	w0, [x0, #141]
  41e7d4:	cmp	w0, #0x0
  41e7d8:	b.eq	41e7e4 <_obstack_memory_used@@Base+0x2604>  // b.none
  41e7dc:	mov	w0, #0x2                   	// #2
  41e7e0:	b	41e7f0 <_obstack_memory_used@@Base+0x2610>
  41e7e4:	mov	w0, #0x0                   	// #0
  41e7e8:	b	41e7f0 <_obstack_memory_used@@Base+0x2610>
  41e7ec:	mov	w0, #0x1                   	// #1
  41e7f0:	ldr	x1, [sp, #40]
  41e7f4:	str	w0, [x1, #112]
  41e7f8:	ldr	x0, [sp, #40]
  41e7fc:	ldr	x0, [x0, #48]
  41e800:	cmp	x0, #0x0
  41e804:	b.eq	41e87c <_obstack_memory_used@@Base+0x269c>  // b.none
  41e808:	str	xzr, [sp, #152]
  41e80c:	b	41e838 <_obstack_memory_used@@Base+0x2658>
  41e810:	ldr	x0, [sp, #40]
  41e814:	ldr	x1, [x0, #16]
  41e818:	ldr	x0, [sp, #152]
  41e81c:	lsl	x0, x0, #2
  41e820:	add	x0, x1, x0
  41e824:	mov	w1, #0xffffffff            	// #-1
  41e828:	str	w1, [x0]
  41e82c:	ldr	x0, [sp, #152]
  41e830:	add	x0, x0, #0x1
  41e834:	str	x0, [sp, #152]
  41e838:	ldr	x0, [sp, #40]
  41e83c:	ldr	x0, [x0, #48]
  41e840:	ldr	x1, [sp, #152]
  41e844:	cmp	x1, x0
  41e848:	b.lt	41e810 <_obstack_memory_used@@Base+0x2630>  // b.tstop
  41e84c:	ldr	x0, [sp, #40]
  41e850:	ldrb	w0, [x0, #139]
  41e854:	cmp	w0, #0x0
  41e858:	b.eq	41e87c <_obstack_memory_used@@Base+0x269c>  // b.none
  41e85c:	ldr	x0, [sp, #40]
  41e860:	ldr	x3, [x0, #8]
  41e864:	ldr	x0, [sp, #40]
  41e868:	ldr	x0, [x0, #48]
  41e86c:	mov	x2, x0
  41e870:	mov	w1, #0xff                  	// #255
  41e874:	mov	x0, x3
  41e878:	bl	402980 <memset@plt>
  41e87c:	ldr	x0, [sp, #40]
  41e880:	ldr	x1, [x0, #48]
  41e884:	ldr	x0, [sp, #40]
  41e888:	str	x1, [x0, #56]
  41e88c:	b	41e93c <_obstack_memory_used@@Base+0x275c>
  41e890:	ldr	x0, [sp, #40]
  41e894:	ldr	x1, [x0]
  41e898:	ldr	x0, [sp, #40]
  41e89c:	ldr	x2, [x0, #40]
  41e8a0:	ldr	x0, [sp, #184]
  41e8a4:	add	x0, x2, x0
  41e8a8:	sub	x0, x0, #0x1
  41e8ac:	add	x0, x1, x0
  41e8b0:	ldrb	w0, [x0]
  41e8b4:	str	w0, [sp, #120]
  41e8b8:	ldr	x0, [sp, #40]
  41e8bc:	str	xzr, [x0, #56]
  41e8c0:	ldr	x0, [sp, #40]
  41e8c4:	ldr	x0, [x0, #120]
  41e8c8:	cmp	x0, #0x0
  41e8cc:	b.eq	41e8e8 <_obstack_memory_used@@Base+0x2708>  // b.none
  41e8d0:	ldr	x0, [sp, #40]
  41e8d4:	ldr	x1, [x0, #120]
  41e8d8:	ldrsw	x0, [sp, #120]
  41e8dc:	add	x0, x1, x0
  41e8e0:	ldrb	w0, [x0]
  41e8e4:	str	w0, [sp, #120]
  41e8e8:	ldr	x0, [sp, #40]
  41e8ec:	ldr	x0, [x0, #128]
  41e8f0:	ldrsw	x1, [sp, #120]
  41e8f4:	bl	41c384 <_obstack_memory_used@@Base+0x1a4>
  41e8f8:	and	w0, w0, #0xff
  41e8fc:	cmp	w0, #0x0
  41e900:	b.ne	41e930 <_obstack_memory_used@@Base+0x2750>  // b.any
  41e904:	ldr	w0, [sp, #120]
  41e908:	cmp	w0, #0xa
  41e90c:	b.ne	41e928 <_obstack_memory_used@@Base+0x2748>  // b.any
  41e910:	ldr	x0, [sp, #40]
  41e914:	ldrb	w0, [x0, #141]
  41e918:	cmp	w0, #0x0
  41e91c:	b.eq	41e928 <_obstack_memory_used@@Base+0x2748>  // b.none
  41e920:	mov	w0, #0x2                   	// #2
  41e924:	b	41e934 <_obstack_memory_used@@Base+0x2754>
  41e928:	mov	w0, #0x0                   	// #0
  41e92c:	b	41e934 <_obstack_memory_used@@Base+0x2754>
  41e930:	mov	w0, #0x1                   	// #1
  41e934:	ldr	x1, [sp, #40]
  41e938:	str	w0, [x1, #112]
  41e93c:	ldr	x0, [sp, #40]
  41e940:	ldrb	w0, [x0, #139]
  41e944:	and	x0, x0, #0xff
  41e948:	cmp	x0, #0x0
  41e94c:	b.ne	41e968 <_obstack_memory_used@@Base+0x2788>  // b.any
  41e950:	ldr	x0, [sp, #40]
  41e954:	ldr	x1, [x0, #8]
  41e958:	ldr	x0, [sp, #184]
  41e95c:	add	x1, x1, x0
  41e960:	ldr	x0, [sp, #40]
  41e964:	str	x1, [x0, #8]
  41e968:	ldr	x0, [sp, #40]
  41e96c:	ldr	x1, [sp, #32]
  41e970:	str	x1, [x0, #40]
  41e974:	ldr	x0, [sp, #40]
  41e978:	ldr	x1, [x0, #88]
  41e97c:	ldr	x0, [sp, #184]
  41e980:	sub	x1, x1, x0
  41e984:	ldr	x0, [sp, #40]
  41e988:	str	x1, [x0, #88]
  41e98c:	ldr	x0, [sp, #40]
  41e990:	ldr	x1, [x0, #104]
  41e994:	ldr	x0, [sp, #184]
  41e998:	sub	x1, x1, x0
  41e99c:	ldr	x0, [sp, #40]
  41e9a0:	str	x1, [x0, #104]
  41e9a4:	ldr	x0, [sp, #40]
  41e9a8:	ldr	w0, [x0, #144]
  41e9ac:	cmp	w0, #0x1
  41e9b0:	b.le	41ea00 <_obstack_memory_used@@Base+0x2820>
  41e9b4:	ldr	x0, [sp, #40]
  41e9b8:	ldrb	w0, [x0, #136]
  41e9bc:	cmp	w0, #0x0
  41e9c0:	b.eq	41e9f4 <_obstack_memory_used@@Base+0x2814>  // b.none
  41e9c4:	ldr	x0, [sp, #40]
  41e9c8:	bl	41cffc <_obstack_memory_used@@Base+0xe1c>
  41e9cc:	str	w0, [sp, #84]
  41e9d0:	ldr	w0, [sp, #84]
  41e9d4:	cmp	w0, #0x0
  41e9d8:	cset	w0, ne  // ne = any
  41e9dc:	and	w0, w0, #0xff
  41e9e0:	and	x0, x0, #0xff
  41e9e4:	cmp	x0, #0x0
  41e9e8:	b.eq	41ea5c <_obstack_memory_used@@Base+0x287c>  // b.none
  41e9ec:	ldr	w0, [sp, #84]
  41e9f0:	b	41ea68 <_obstack_memory_used@@Base+0x2888>
  41e9f4:	ldr	x0, [sp, #40]
  41e9f8:	bl	41cca4 <_obstack_memory_used@@Base+0xac4>
  41e9fc:	b	41ea5c <_obstack_memory_used@@Base+0x287c>
  41ea00:	ldr	x0, [sp, #40]
  41ea04:	ldrb	w0, [x0, #139]
  41ea08:	and	x0, x0, #0xff
  41ea0c:	cmp	x0, #0x0
  41ea10:	b.eq	41ea4c <_obstack_memory_used@@Base+0x286c>  // b.none
  41ea14:	ldr	x0, [sp, #40]
  41ea18:	ldrb	w0, [x0, #136]
  41ea1c:	cmp	w0, #0x0
  41ea20:	b.eq	41ea30 <_obstack_memory_used@@Base+0x2850>  // b.none
  41ea24:	ldr	x0, [sp, #40]
  41ea28:	bl	41dc70 <_obstack_memory_used@@Base+0x1a90>
  41ea2c:	b	41ea5c <_obstack_memory_used@@Base+0x287c>
  41ea30:	ldr	x0, [sp, #40]
  41ea34:	ldr	x0, [x0, #120]
  41ea38:	cmp	x0, #0x0
  41ea3c:	b.eq	41ea5c <_obstack_memory_used@@Base+0x287c>  // b.none
  41ea40:	ldr	x0, [sp, #40]
  41ea44:	bl	41dd68 <_obstack_memory_used@@Base+0x1b88>
  41ea48:	b	41ea5c <_obstack_memory_used@@Base+0x287c>
  41ea4c:	ldr	x0, [sp, #40]
  41ea50:	ldr	x1, [x0, #88]
  41ea54:	ldr	x0, [sp, #40]
  41ea58:	str	x1, [x0, #48]
  41ea5c:	ldr	x0, [sp, #40]
  41ea60:	str	xzr, [x0, #72]
  41ea64:	mov	w0, #0x0                   	// #0
  41ea68:	ldp	x29, x30, [sp], #192
  41ea6c:	ret
  41ea70:	sub	sp, sp, #0x20
  41ea74:	str	x0, [sp, #8]
  41ea78:	str	x1, [sp]
  41ea7c:	ldr	x0, [sp, #8]
  41ea80:	ldrb	w0, [x0, #139]
  41ea84:	cmp	w0, #0x0
  41ea88:	cset	w0, eq  // eq = none
  41ea8c:	and	w0, w0, #0xff
  41ea90:	and	x0, x0, #0xff
  41ea94:	cmp	x0, #0x0
  41ea98:	b.eq	41eac0 <_obstack_memory_used@@Base+0x28e0>  // b.none
  41ea9c:	ldr	x0, [sp, #8]
  41eaa0:	ldr	x0, [x0, #8]
  41eaa4:	ldr	x1, [sp, #8]
  41eaa8:	ldr	x2, [x1, #72]
  41eaac:	ldr	x1, [sp]
  41eab0:	add	x1, x2, x1
  41eab4:	add	x0, x0, x1
  41eab8:	ldrb	w0, [x0]
  41eabc:	b	41ec24 <_obstack_memory_used@@Base+0x2a44>
  41eac0:	ldr	x0, [sp, #8]
  41eac4:	ldr	w0, [x0, #144]
  41eac8:	cmp	w0, #0x1
  41eacc:	b.le	41eb74 <_obstack_memory_used@@Base+0x2994>
  41ead0:	ldr	x0, [sp, #8]
  41ead4:	ldr	x1, [x0, #16]
  41ead8:	ldr	x0, [sp, #8]
  41eadc:	ldr	x2, [x0, #72]
  41eae0:	ldr	x0, [sp]
  41eae4:	add	x0, x2, x0
  41eae8:	lsl	x0, x0, #2
  41eaec:	add	x0, x1, x0
  41eaf0:	ldr	w0, [x0]
  41eaf4:	cmn	w0, #0x1
  41eaf8:	b.eq	41eb50 <_obstack_memory_used@@Base+0x2970>  // b.none
  41eafc:	ldr	x0, [sp, #8]
  41eb00:	ldr	x1, [x0, #48]
  41eb04:	ldr	x0, [sp, #8]
  41eb08:	ldr	x2, [x0, #72]
  41eb0c:	ldr	x0, [sp]
  41eb10:	add	x0, x2, x0
  41eb14:	add	x0, x0, #0x1
  41eb18:	cmp	x1, x0
  41eb1c:	b.eq	41eb74 <_obstack_memory_used@@Base+0x2994>  // b.none
  41eb20:	ldr	x0, [sp, #8]
  41eb24:	ldr	x1, [x0, #16]
  41eb28:	ldr	x0, [sp, #8]
  41eb2c:	ldr	x2, [x0, #72]
  41eb30:	ldr	x0, [sp]
  41eb34:	add	x0, x2, x0
  41eb38:	add	x0, x0, #0x1
  41eb3c:	lsl	x0, x0, #2
  41eb40:	add	x0, x1, x0
  41eb44:	ldr	w0, [x0]
  41eb48:	cmn	w0, #0x1
  41eb4c:	b.ne	41eb74 <_obstack_memory_used@@Base+0x2994>  // b.any
  41eb50:	ldr	x0, [sp, #8]
  41eb54:	ldr	x0, [x0, #8]
  41eb58:	ldr	x1, [sp, #8]
  41eb5c:	ldr	x2, [x1, #72]
  41eb60:	ldr	x1, [sp]
  41eb64:	add	x1, x2, x1
  41eb68:	add	x0, x0, x1
  41eb6c:	ldrb	w0, [x0]
  41eb70:	b	41ec24 <_obstack_memory_used@@Base+0x2a44>
  41eb74:	ldr	x0, [sp, #8]
  41eb78:	ldr	x0, [x0, #72]
  41eb7c:	ldr	x1, [sp]
  41eb80:	add	x0, x1, x0
  41eb84:	str	x0, [sp, #24]
  41eb88:	ldr	x0, [sp, #8]
  41eb8c:	ldrb	w0, [x0, #140]
  41eb90:	cmp	w0, #0x0
  41eb94:	b.eq	41ebb4 <_obstack_memory_used@@Base+0x29d4>  // b.none
  41eb98:	ldr	x0, [sp, #8]
  41eb9c:	ldr	x1, [x0, #24]
  41eba0:	ldr	x0, [sp, #24]
  41eba4:	lsl	x0, x0, #3
  41eba8:	add	x0, x1, x0
  41ebac:	ldr	x0, [x0]
  41ebb0:	str	x0, [sp, #24]
  41ebb4:	ldr	x0, [sp, #8]
  41ebb8:	ldr	x0, [x0]
  41ebbc:	ldr	x1, [sp, #8]
  41ebc0:	ldr	x2, [x1, #40]
  41ebc4:	ldr	x1, [sp, #24]
  41ebc8:	add	x1, x2, x1
  41ebcc:	add	x0, x0, x1
  41ebd0:	ldrb	w0, [x0]
  41ebd4:	str	w0, [sp, #20]
  41ebd8:	ldr	x0, [sp, #8]
  41ebdc:	ldrb	w0, [x0, #140]
  41ebe0:	cmp	w0, #0x0
  41ebe4:	b.eq	41ec1c <_obstack_memory_used@@Base+0x2a3c>  // b.none
  41ebe8:	ldr	w0, [sp, #20]
  41ebec:	and	w0, w0, #0xffffff80
  41ebf0:	cmp	w0, #0x0
  41ebf4:	b.eq	41ec1c <_obstack_memory_used@@Base+0x2a3c>  // b.none
  41ebf8:	ldr	x0, [sp, #8]
  41ebfc:	ldr	x0, [x0, #8]
  41ec00:	ldr	x1, [sp, #8]
  41ec04:	ldr	x2, [x1, #72]
  41ec08:	ldr	x1, [sp]
  41ec0c:	add	x1, x2, x1
  41ec10:	add	x0, x0, x1
  41ec14:	ldrb	w0, [x0]
  41ec18:	b	41ec24 <_obstack_memory_used@@Base+0x2a44>
  41ec1c:	ldr	w0, [sp, #20]
  41ec20:	and	w0, w0, #0xff
  41ec24:	add	sp, sp, #0x20
  41ec28:	ret
  41ec2c:	stp	x29, x30, [sp, #-64]!
  41ec30:	mov	x29, sp
  41ec34:	str	x19, [sp, #16]
  41ec38:	str	x0, [sp, #40]
  41ec3c:	ldr	x0, [sp, #40]
  41ec40:	ldrb	w0, [x0, #139]
  41ec44:	cmp	w0, #0x0
  41ec48:	cset	w0, eq  // eq = none
  41ec4c:	and	w0, w0, #0xff
  41ec50:	and	x0, x0, #0xff
  41ec54:	cmp	x0, #0x0
  41ec58:	b.eq	41ec84 <_obstack_memory_used@@Base+0x2aa4>  // b.none
  41ec5c:	ldr	x0, [sp, #40]
  41ec60:	ldr	x1, [x0, #8]
  41ec64:	ldr	x0, [sp, #40]
  41ec68:	ldr	x0, [x0, #72]
  41ec6c:	add	x3, x0, #0x1
  41ec70:	ldr	x2, [sp, #40]
  41ec74:	str	x3, [x2, #72]
  41ec78:	add	x0, x1, x0
  41ec7c:	ldrb	w0, [x0]
  41ec80:	b	41eddc <_obstack_memory_used@@Base+0x2bfc>
  41ec84:	ldr	x0, [sp, #40]
  41ec88:	ldrb	w0, [x0, #140]
  41ec8c:	cmp	w0, #0x0
  41ec90:	b.eq	41edac <_obstack_memory_used@@Base+0x2bcc>  // b.none
  41ec94:	ldr	x0, [sp, #40]
  41ec98:	ldr	x1, [x0, #72]
  41ec9c:	ldr	x0, [sp, #40]
  41eca0:	ldr	x0, [x0, #48]
  41eca4:	cmp	x1, x0
  41eca8:	b.eq	41ecf8 <_obstack_memory_used@@Base+0x2b18>  // b.none
  41ecac:	ldr	x0, [sp, #40]
  41ecb0:	ldr	x1, [x0, #16]
  41ecb4:	ldr	x0, [sp, #40]
  41ecb8:	ldr	x0, [x0, #72]
  41ecbc:	lsl	x0, x0, #2
  41ecc0:	add	x0, x1, x0
  41ecc4:	ldr	w0, [x0]
  41ecc8:	cmn	w0, #0x1
  41eccc:	b.ne	41ecf8 <_obstack_memory_used@@Base+0x2b18>  // b.any
  41ecd0:	ldr	x0, [sp, #40]
  41ecd4:	ldr	x1, [x0, #8]
  41ecd8:	ldr	x0, [sp, #40]
  41ecdc:	ldr	x0, [x0, #72]
  41ece0:	add	x3, x0, #0x1
  41ece4:	ldr	x2, [sp, #40]
  41ece8:	str	x3, [x2, #72]
  41ecec:	add	x0, x1, x0
  41ecf0:	ldrb	w0, [x0]
  41ecf4:	b	41eddc <_obstack_memory_used@@Base+0x2bfc>
  41ecf8:	ldr	x0, [sp, #40]
  41ecfc:	ldr	x1, [x0, #24]
  41ed00:	ldr	x0, [sp, #40]
  41ed04:	ldr	x0, [x0, #72]
  41ed08:	lsl	x0, x0, #3
  41ed0c:	add	x0, x1, x0
  41ed10:	ldr	x0, [x0]
  41ed14:	str	x0, [sp, #56]
  41ed18:	ldr	x0, [sp, #40]
  41ed1c:	ldr	x0, [x0]
  41ed20:	ldr	x1, [sp, #40]
  41ed24:	ldr	x2, [x1, #40]
  41ed28:	ldr	x1, [sp, #56]
  41ed2c:	add	x1, x2, x1
  41ed30:	add	x0, x0, x1
  41ed34:	ldrb	w0, [x0]
  41ed38:	str	w0, [sp, #52]
  41ed3c:	ldr	w0, [sp, #52]
  41ed40:	and	w0, w0, #0xffffff80
  41ed44:	cmp	w0, #0x0
  41ed48:	b.eq	41ed74 <_obstack_memory_used@@Base+0x2b94>  // b.none
  41ed4c:	ldr	x0, [sp, #40]
  41ed50:	ldr	x1, [x0, #8]
  41ed54:	ldr	x0, [sp, #40]
  41ed58:	ldr	x0, [x0, #72]
  41ed5c:	add	x3, x0, #0x1
  41ed60:	ldr	x2, [sp, #40]
  41ed64:	str	x3, [x2, #72]
  41ed68:	add	x0, x1, x0
  41ed6c:	ldrb	w0, [x0]
  41ed70:	b	41eddc <_obstack_memory_used@@Base+0x2bfc>
  41ed74:	ldr	x0, [sp, #40]
  41ed78:	ldr	x19, [x0, #72]
  41ed7c:	ldr	x0, [sp, #40]
  41ed80:	ldr	x0, [x0, #72]
  41ed84:	mov	x1, x0
  41ed88:	ldr	x0, [sp, #40]
  41ed8c:	bl	41c5bc <_obstack_memory_used@@Base+0x3dc>
  41ed90:	sxtw	x0, w0
  41ed94:	add	x1, x19, x0
  41ed98:	ldr	x0, [sp, #40]
  41ed9c:	str	x1, [x0, #72]
  41eda0:	ldr	w0, [sp, #52]
  41eda4:	and	w0, w0, #0xff
  41eda8:	b	41eddc <_obstack_memory_used@@Base+0x2bfc>
  41edac:	ldr	x0, [sp, #40]
  41edb0:	ldr	x1, [x0]
  41edb4:	ldr	x0, [sp, #40]
  41edb8:	ldr	x2, [x0, #40]
  41edbc:	ldr	x0, [sp, #40]
  41edc0:	ldr	x0, [x0, #72]
  41edc4:	add	x4, x0, #0x1
  41edc8:	ldr	x3, [sp, #40]
  41edcc:	str	x4, [x3, #72]
  41edd0:	add	x0, x2, x0
  41edd4:	add	x0, x1, x0
  41edd8:	ldrb	w0, [x0]
  41eddc:	ldr	x19, [sp, #16]
  41ede0:	ldp	x29, x30, [sp], #64
  41ede4:	ret
  41ede8:	stp	x29, x30, [sp, #-32]!
  41edec:	mov	x29, sp
  41edf0:	str	x0, [sp, #24]
  41edf4:	ldr	x0, [sp, #24]
  41edf8:	ldr	x0, [x0, #16]
  41edfc:	bl	402b60 <free@plt>
  41ee00:	ldr	x0, [sp, #24]
  41ee04:	ldr	x0, [x0, #24]
  41ee08:	bl	402b60 <free@plt>
  41ee0c:	ldr	x0, [sp, #24]
  41ee10:	ldrb	w0, [x0, #139]
  41ee14:	cmp	w0, #0x0
  41ee18:	b.eq	41ee28 <_obstack_memory_used@@Base+0x2c48>  // b.none
  41ee1c:	ldr	x0, [sp, #24]
  41ee20:	ldr	x0, [x0, #8]
  41ee24:	bl	402b60 <free@plt>
  41ee28:	nop
  41ee2c:	ldp	x29, x30, [sp], #32
  41ee30:	ret
  41ee34:	stp	x29, x30, [sp, #-64]!
  41ee38:	mov	x29, sp
  41ee3c:	str	x0, [sp, #40]
  41ee40:	str	x1, [sp, #32]
  41ee44:	str	w2, [sp, #28]
  41ee48:	ldr	x0, [sp, #32]
  41ee4c:	lsr	x0, x0, #63
  41ee50:	and	w0, w0, #0xff
  41ee54:	and	x0, x0, #0xff
  41ee58:	cmp	x0, #0x0
  41ee5c:	b.eq	41ee6c <_obstack_memory_used@@Base+0x2c8c>  // b.none
  41ee60:	ldr	x0, [sp, #40]
  41ee64:	ldr	w0, [x0, #112]
  41ee68:	b	41f008 <_obstack_memory_used@@Base+0x2e28>
  41ee6c:	ldr	x0, [sp, #40]
  41ee70:	ldr	x0, [x0, #88]
  41ee74:	ldr	x1, [sp, #32]
  41ee78:	cmp	x1, x0
  41ee7c:	cset	w0, eq  // eq = none
  41ee80:	and	w0, w0, #0xff
  41ee84:	and	x0, x0, #0xff
  41ee88:	cmp	x0, #0x0
  41ee8c:	b.eq	41eeb0 <_obstack_memory_used@@Base+0x2cd0>  // b.none
  41ee90:	ldr	w0, [sp, #28]
  41ee94:	and	w0, w0, #0x2
  41ee98:	cmp	w0, #0x0
  41ee9c:	b.eq	41eea8 <_obstack_memory_used@@Base+0x2cc8>  // b.none
  41eea0:	mov	w0, #0x8                   	// #8
  41eea4:	b	41f008 <_obstack_memory_used@@Base+0x2e28>
  41eea8:	mov	w0, #0xa                   	// #10
  41eeac:	b	41f008 <_obstack_memory_used@@Base+0x2e28>
  41eeb0:	ldr	x0, [sp, #40]
  41eeb4:	ldr	w0, [x0, #144]
  41eeb8:	cmp	w0, #0x1
  41eebc:	b.le	41efa4 <_obstack_memory_used@@Base+0x2dc4>
  41eec0:	ldr	x0, [sp, #32]
  41eec4:	str	x0, [sp, #56]
  41eec8:	b	41eef8 <_obstack_memory_used@@Base+0x2d18>
  41eecc:	ldr	x0, [sp, #56]
  41eed0:	cmp	x0, #0x0
  41eed4:	ldr	x0, [sp, #56]
  41eed8:	sub	x0, x0, #0x1
  41eedc:	str	x0, [sp, #56]
  41eee0:	ldr	x0, [sp, #56]
  41eee4:	cmp	x0, #0x0
  41eee8:	b.ge	41eef8 <_obstack_memory_used@@Base+0x2d18>  // b.tcont
  41eeec:	ldr	x0, [sp, #40]
  41eef0:	ldr	w0, [x0, #112]
  41eef4:	b	41f008 <_obstack_memory_used@@Base+0x2e28>
  41eef8:	ldr	x0, [sp, #40]
  41eefc:	ldr	x1, [x0, #16]
  41ef00:	ldr	x0, [sp, #56]
  41ef04:	lsl	x0, x0, #2
  41ef08:	add	x0, x1, x0
  41ef0c:	ldr	w0, [x0]
  41ef10:	cmn	w0, #0x1
  41ef14:	b.eq	41eecc <_obstack_memory_used@@Base+0x2cec>  // b.none
  41ef18:	ldr	x0, [sp, #40]
  41ef1c:	ldr	x1, [x0, #16]
  41ef20:	ldr	x0, [sp, #56]
  41ef24:	lsl	x0, x0, #2
  41ef28:	add	x0, x1, x0
  41ef2c:	ldr	w0, [x0]
  41ef30:	str	w0, [sp, #48]
  41ef34:	ldr	x0, [sp, #40]
  41ef38:	ldrb	w0, [x0, #142]
  41ef3c:	cmp	w0, #0x0
  41ef40:	cset	w0, ne  // ne = any
  41ef44:	and	w0, w0, #0xff
  41ef48:	and	x0, x0, #0xff
  41ef4c:	cmp	x0, #0x0
  41ef50:	b.eq	41ef78 <_obstack_memory_used@@Base+0x2d98>  // b.none
  41ef54:	ldr	w0, [sp, #48]
  41ef58:	bl	402c70 <iswalnum@plt>
  41ef5c:	cmp	w0, #0x0
  41ef60:	b.ne	41ef70 <_obstack_memory_used@@Base+0x2d90>  // b.any
  41ef64:	ldr	w0, [sp, #48]
  41ef68:	cmp	w0, #0x5f
  41ef6c:	b.ne	41ef78 <_obstack_memory_used@@Base+0x2d98>  // b.any
  41ef70:	mov	w0, #0x1                   	// #1
  41ef74:	b	41f008 <_obstack_memory_used@@Base+0x2e28>
  41ef78:	ldr	w0, [sp, #48]
  41ef7c:	cmp	w0, #0xa
  41ef80:	b.ne	41ef9c <_obstack_memory_used@@Base+0x2dbc>  // b.any
  41ef84:	ldr	x0, [sp, #40]
  41ef88:	ldrb	w0, [x0, #141]
  41ef8c:	cmp	w0, #0x0
  41ef90:	b.eq	41ef9c <_obstack_memory_used@@Base+0x2dbc>  // b.none
  41ef94:	mov	w0, #0x2                   	// #2
  41ef98:	b	41f008 <_obstack_memory_used@@Base+0x2e28>
  41ef9c:	mov	w0, #0x0                   	// #0
  41efa0:	b	41f008 <_obstack_memory_used@@Base+0x2e28>
  41efa4:	ldr	x0, [sp, #40]
  41efa8:	ldr	x1, [x0, #8]
  41efac:	ldr	x0, [sp, #32]
  41efb0:	add	x0, x1, x0
  41efb4:	ldrb	w0, [x0]
  41efb8:	str	w0, [sp, #52]
  41efbc:	ldr	x0, [sp, #40]
  41efc0:	ldr	x0, [x0, #128]
  41efc4:	ldrsw	x1, [sp, #52]
  41efc8:	bl	41c384 <_obstack_memory_used@@Base+0x1a4>
  41efcc:	and	w0, w0, #0xff
  41efd0:	cmp	w0, #0x0
  41efd4:	b.eq	41efe0 <_obstack_memory_used@@Base+0x2e00>  // b.none
  41efd8:	mov	w0, #0x1                   	// #1
  41efdc:	b	41f008 <_obstack_memory_used@@Base+0x2e28>
  41efe0:	ldr	w0, [sp, #52]
  41efe4:	cmp	w0, #0xa
  41efe8:	b.ne	41f004 <_obstack_memory_used@@Base+0x2e24>  // b.any
  41efec:	ldr	x0, [sp, #40]
  41eff0:	ldrb	w0, [x0, #141]
  41eff4:	cmp	w0, #0x0
  41eff8:	b.eq	41f004 <_obstack_memory_used@@Base+0x2e24>  // b.none
  41effc:	mov	w0, #0x2                   	// #2
  41f000:	b	41f008 <_obstack_memory_used@@Base+0x2e28>
  41f004:	mov	w0, #0x0                   	// #0
  41f008:	ldp	x29, x30, [sp], #64
  41f00c:	ret
  41f010:	stp	x29, x30, [sp, #-32]!
  41f014:	mov	x29, sp
  41f018:	str	x0, [sp, #24]
  41f01c:	str	x1, [sp, #16]
  41f020:	ldr	x0, [sp, #24]
  41f024:	ldr	x1, [sp, #16]
  41f028:	str	x1, [x0]
  41f02c:	ldr	x0, [sp, #24]
  41f030:	str	xzr, [x0, #8]
  41f034:	ldr	x0, [sp, #16]
  41f038:	lsl	x0, x0, #3
  41f03c:	bl	4028b0 <malloc@plt>
  41f040:	mov	x1, x0
  41f044:	ldr	x0, [sp, #24]
  41f048:	str	x1, [x0, #16]
  41f04c:	ldr	x0, [sp, #24]
  41f050:	ldr	x0, [x0, #16]
  41f054:	cmp	x0, #0x0
  41f058:	cset	w0, eq  // eq = none
  41f05c:	and	w0, w0, #0xff
  41f060:	and	x0, x0, #0xff
  41f064:	cmp	x0, #0x0
  41f068:	b.eq	41f074 <_obstack_memory_used@@Base+0x2e94>  // b.none
  41f06c:	mov	w0, #0xc                   	// #12
  41f070:	b	41f078 <_obstack_memory_used@@Base+0x2e98>
  41f074:	mov	w0, #0x0                   	// #0
  41f078:	ldp	x29, x30, [sp], #32
  41f07c:	ret
  41f080:	stp	x29, x30, [sp, #-32]!
  41f084:	mov	x29, sp
  41f088:	str	x0, [sp, #24]
  41f08c:	str	x1, [sp, #16]
  41f090:	ldr	x0, [sp, #24]
  41f094:	mov	x1, #0x1                   	// #1
  41f098:	str	x1, [x0]
  41f09c:	ldr	x0, [sp, #24]
  41f0a0:	mov	x1, #0x1                   	// #1
  41f0a4:	str	x1, [x0, #8]
  41f0a8:	mov	x0, #0x8                   	// #8
  41f0ac:	bl	4028b0 <malloc@plt>
  41f0b0:	mov	x1, x0
  41f0b4:	ldr	x0, [sp, #24]
  41f0b8:	str	x1, [x0, #16]
  41f0bc:	ldr	x0, [sp, #24]
  41f0c0:	ldr	x0, [x0, #16]
  41f0c4:	cmp	x0, #0x0
  41f0c8:	cset	w0, eq  // eq = none
  41f0cc:	and	w0, w0, #0xff
  41f0d0:	and	x0, x0, #0xff
  41f0d4:	cmp	x0, #0x0
  41f0d8:	b.eq	41f0fc <_obstack_memory_used@@Base+0x2f1c>  // b.none
  41f0dc:	ldr	x0, [sp, #24]
  41f0e0:	str	xzr, [x0, #8]
  41f0e4:	ldr	x0, [sp, #24]
  41f0e8:	ldr	x1, [x0, #8]
  41f0ec:	ldr	x0, [sp, #24]
  41f0f0:	str	x1, [x0]
  41f0f4:	mov	w0, #0xc                   	// #12
  41f0f8:	b	41f110 <_obstack_memory_used@@Base+0x2f30>
  41f0fc:	ldr	x0, [sp, #24]
  41f100:	ldr	x0, [x0, #16]
  41f104:	ldr	x1, [sp, #16]
  41f108:	str	x1, [x0]
  41f10c:	mov	w0, #0x0                   	// #0
  41f110:	ldp	x29, x30, [sp], #32
  41f114:	ret
  41f118:	stp	x29, x30, [sp, #-48]!
  41f11c:	mov	x29, sp
  41f120:	str	x0, [sp, #40]
  41f124:	str	x1, [sp, #32]
  41f128:	str	x2, [sp, #24]
  41f12c:	ldr	x0, [sp, #40]
  41f130:	mov	x1, #0x2                   	// #2
  41f134:	str	x1, [x0]
  41f138:	mov	x0, #0x10                  	// #16
  41f13c:	bl	4028b0 <malloc@plt>
  41f140:	mov	x1, x0
  41f144:	ldr	x0, [sp, #40]
  41f148:	str	x1, [x0, #16]
  41f14c:	ldr	x0, [sp, #40]
  41f150:	ldr	x0, [x0, #16]
  41f154:	cmp	x0, #0x0
  41f158:	cset	w0, eq  // eq = none
  41f15c:	and	w0, w0, #0xff
  41f160:	and	x0, x0, #0xff
  41f164:	cmp	x0, #0x0
  41f168:	b.eq	41f174 <_obstack_memory_used@@Base+0x2f94>  // b.none
  41f16c:	mov	w0, #0xc                   	// #12
  41f170:	b	41f210 <_obstack_memory_used@@Base+0x3030>
  41f174:	ldr	x1, [sp, #32]
  41f178:	ldr	x0, [sp, #24]
  41f17c:	cmp	x1, x0
  41f180:	b.ne	41f1a4 <_obstack_memory_used@@Base+0x2fc4>  // b.any
  41f184:	ldr	x0, [sp, #40]
  41f188:	mov	x1, #0x1                   	// #1
  41f18c:	str	x1, [x0, #8]
  41f190:	ldr	x0, [sp, #40]
  41f194:	ldr	x0, [x0, #16]
  41f198:	ldr	x1, [sp, #32]
  41f19c:	str	x1, [x0]
  41f1a0:	b	41f20c <_obstack_memory_used@@Base+0x302c>
  41f1a4:	ldr	x0, [sp, #40]
  41f1a8:	mov	x1, #0x2                   	// #2
  41f1ac:	str	x1, [x0, #8]
  41f1b0:	ldr	x1, [sp, #32]
  41f1b4:	ldr	x0, [sp, #24]
  41f1b8:	cmp	x1, x0
  41f1bc:	b.ge	41f1e8 <_obstack_memory_used@@Base+0x3008>  // b.tcont
  41f1c0:	ldr	x0, [sp, #40]
  41f1c4:	ldr	x0, [x0, #16]
  41f1c8:	ldr	x1, [sp, #32]
  41f1cc:	str	x1, [x0]
  41f1d0:	ldr	x0, [sp, #40]
  41f1d4:	ldr	x0, [x0, #16]
  41f1d8:	add	x0, x0, #0x8
  41f1dc:	ldr	x1, [sp, #24]
  41f1e0:	str	x1, [x0]
  41f1e4:	b	41f20c <_obstack_memory_used@@Base+0x302c>
  41f1e8:	ldr	x0, [sp, #40]
  41f1ec:	ldr	x0, [x0, #16]
  41f1f0:	ldr	x1, [sp, #24]
  41f1f4:	str	x1, [x0]
  41f1f8:	ldr	x0, [sp, #40]
  41f1fc:	ldr	x0, [x0, #16]
  41f200:	add	x0, x0, #0x8
  41f204:	ldr	x1, [sp, #32]
  41f208:	str	x1, [x0]
  41f20c:	mov	w0, #0x0                   	// #0
  41f210:	ldp	x29, x30, [sp], #48
  41f214:	ret
  41f218:	stp	x29, x30, [sp, #-32]!
  41f21c:	mov	x29, sp
  41f220:	str	x0, [sp, #24]
  41f224:	str	x1, [sp, #16]
  41f228:	ldr	x0, [sp, #16]
  41f22c:	ldr	x1, [x0, #8]
  41f230:	ldr	x0, [sp, #24]
  41f234:	str	x1, [x0, #8]
  41f238:	ldr	x0, [sp, #16]
  41f23c:	ldr	x0, [x0, #8]
  41f240:	cmp	x0, #0x0
  41f244:	b.le	41f2e0 <_obstack_memory_used@@Base+0x3100>
  41f248:	ldr	x0, [sp, #24]
  41f24c:	ldr	x1, [x0, #8]
  41f250:	ldr	x0, [sp, #24]
  41f254:	str	x1, [x0]
  41f258:	ldr	x0, [sp, #24]
  41f25c:	ldr	x0, [x0]
  41f260:	lsl	x0, x0, #3
  41f264:	bl	4028b0 <malloc@plt>
  41f268:	mov	x1, x0
  41f26c:	ldr	x0, [sp, #24]
  41f270:	str	x1, [x0, #16]
  41f274:	ldr	x0, [sp, #24]
  41f278:	ldr	x0, [x0, #16]
  41f27c:	cmp	x0, #0x0
  41f280:	cset	w0, eq  // eq = none
  41f284:	and	w0, w0, #0xff
  41f288:	and	x0, x0, #0xff
  41f28c:	cmp	x0, #0x0
  41f290:	b.eq	41f2b4 <_obstack_memory_used@@Base+0x30d4>  // b.none
  41f294:	ldr	x0, [sp, #24]
  41f298:	str	xzr, [x0, #8]
  41f29c:	ldr	x0, [sp, #24]
  41f2a0:	ldr	x1, [x0, #8]
  41f2a4:	ldr	x0, [sp, #24]
  41f2a8:	str	x1, [x0]
  41f2ac:	mov	w0, #0xc                   	// #12
  41f2b0:	b	41f2f4 <_obstack_memory_used@@Base+0x3114>
  41f2b4:	ldr	x0, [sp, #24]
  41f2b8:	ldr	x3, [x0, #16]
  41f2bc:	ldr	x0, [sp, #16]
  41f2c0:	ldr	x1, [x0, #16]
  41f2c4:	ldr	x0, [sp, #16]
  41f2c8:	ldr	x0, [x0, #8]
  41f2cc:	lsl	x0, x0, #3
  41f2d0:	mov	x2, x0
  41f2d4:	mov	x0, x3
  41f2d8:	bl	4026d0 <memcpy@plt>
  41f2dc:	b	41f2f0 <_obstack_memory_used@@Base+0x3110>
  41f2e0:	mov	x2, #0x18                  	// #24
  41f2e4:	mov	w1, #0x0                   	// #0
  41f2e8:	ldr	x0, [sp, #24]
  41f2ec:	bl	402980 <memset@plt>
  41f2f0:	mov	w0, #0x0                   	// #0
  41f2f4:	ldp	x29, x30, [sp], #32
  41f2f8:	ret
  41f2fc:	stp	x29, x30, [sp, #-112]!
  41f300:	mov	x29, sp
  41f304:	str	x0, [sp, #40]
  41f308:	str	x1, [sp, #32]
  41f30c:	str	x2, [sp, #24]
  41f310:	ldr	x0, [sp, #32]
  41f314:	ldr	x0, [x0, #8]
  41f318:	cmp	x0, #0x0
  41f31c:	b.eq	41f330 <_obstack_memory_used@@Base+0x3150>  // b.none
  41f320:	ldr	x0, [sp, #24]
  41f324:	ldr	x0, [x0, #8]
  41f328:	cmp	x0, #0x0
  41f32c:	b.ne	41f338 <_obstack_memory_used@@Base+0x3158>  // b.any
  41f330:	mov	w0, #0x0                   	// #0
  41f334:	b	41f788 <_obstack_memory_used@@Base+0x35a8>
  41f338:	ldr	x0, [sp, #32]
  41f33c:	ldr	x1, [x0, #8]
  41f340:	ldr	x0, [sp, #24]
  41f344:	ldr	x0, [x0, #8]
  41f348:	add	x1, x1, x0
  41f34c:	ldr	x0, [sp, #40]
  41f350:	ldr	x0, [x0, #8]
  41f354:	add	x1, x1, x0
  41f358:	ldr	x0, [sp, #40]
  41f35c:	ldr	x0, [x0]
  41f360:	cmp	x1, x0
  41f364:	b.le	41f3e8 <_obstack_memory_used@@Base+0x3208>
  41f368:	ldr	x0, [sp, #32]
  41f36c:	ldr	x1, [x0, #8]
  41f370:	ldr	x0, [sp, #24]
  41f374:	ldr	x0, [x0, #8]
  41f378:	add	x1, x1, x0
  41f37c:	ldr	x0, [sp, #40]
  41f380:	ldr	x0, [x0]
  41f384:	add	x0, x1, x0
  41f388:	str	x0, [sp, #56]
  41f38c:	ldr	x0, [sp, #40]
  41f390:	ldr	x2, [x0, #16]
  41f394:	ldr	x0, [sp, #56]
  41f398:	lsl	x0, x0, #3
  41f39c:	mov	x1, x0
  41f3a0:	mov	x0, x2
  41f3a4:	bl	4029e0 <realloc@plt>
  41f3a8:	str	x0, [sp, #48]
  41f3ac:	ldr	x0, [sp, #48]
  41f3b0:	cmp	x0, #0x0
  41f3b4:	cset	w0, eq  // eq = none
  41f3b8:	and	w0, w0, #0xff
  41f3bc:	and	x0, x0, #0xff
  41f3c0:	cmp	x0, #0x0
  41f3c4:	b.eq	41f3d0 <_obstack_memory_used@@Base+0x31f0>  // b.none
  41f3c8:	mov	w0, #0xc                   	// #12
  41f3cc:	b	41f788 <_obstack_memory_used@@Base+0x35a8>
  41f3d0:	ldr	x0, [sp, #40]
  41f3d4:	ldr	x1, [sp, #48]
  41f3d8:	str	x1, [x0, #16]
  41f3dc:	ldr	x0, [sp, #40]
  41f3e0:	ldr	x1, [sp, #56]
  41f3e4:	str	x1, [x0]
  41f3e8:	ldr	x0, [sp, #40]
  41f3ec:	ldr	x1, [x0, #8]
  41f3f0:	ldr	x0, [sp, #32]
  41f3f4:	ldr	x0, [x0, #8]
  41f3f8:	add	x1, x1, x0
  41f3fc:	ldr	x0, [sp, #24]
  41f400:	ldr	x0, [x0, #8]
  41f404:	add	x0, x1, x0
  41f408:	str	x0, [sp, #64]
  41f40c:	ldr	x0, [sp, #32]
  41f410:	ldr	x0, [x0, #8]
  41f414:	sub	x0, x0, #0x1
  41f418:	str	x0, [sp, #104]
  41f41c:	ldr	x0, [sp, #24]
  41f420:	ldr	x0, [x0, #8]
  41f424:	sub	x0, x0, #0x1
  41f428:	str	x0, [sp, #96]
  41f42c:	ldr	x0, [sp, #40]
  41f430:	ldr	x0, [x0, #8]
  41f434:	sub	x0, x0, #0x1
  41f438:	str	x0, [sp, #80]
  41f43c:	ldr	x0, [sp, #32]
  41f440:	ldr	x1, [x0, #16]
  41f444:	ldr	x0, [sp, #104]
  41f448:	lsl	x0, x0, #3
  41f44c:	add	x0, x1, x0
  41f450:	ldr	x1, [x0]
  41f454:	ldr	x0, [sp, #24]
  41f458:	ldr	x2, [x0, #16]
  41f45c:	ldr	x0, [sp, #96]
  41f460:	lsl	x0, x0, #3
  41f464:	add	x0, x2, x0
  41f468:	ldr	x0, [x0]
  41f46c:	cmp	x1, x0
  41f470:	b.ne	41f57c <_obstack_memory_used@@Base+0x339c>  // b.any
  41f474:	b	41f484 <_obstack_memory_used@@Base+0x32a4>
  41f478:	ldr	x0, [sp, #80]
  41f47c:	sub	x0, x0, #0x1
  41f480:	str	x0, [sp, #80]
  41f484:	ldr	x0, [sp, #80]
  41f488:	cmp	x0, #0x0
  41f48c:	b.lt	41f4c8 <_obstack_memory_used@@Base+0x32e8>  // b.tstop
  41f490:	ldr	x0, [sp, #40]
  41f494:	ldr	x1, [x0, #16]
  41f498:	ldr	x0, [sp, #80]
  41f49c:	lsl	x0, x0, #3
  41f4a0:	add	x0, x1, x0
  41f4a4:	ldr	x1, [x0]
  41f4a8:	ldr	x0, [sp, #32]
  41f4ac:	ldr	x2, [x0, #16]
  41f4b0:	ldr	x0, [sp, #104]
  41f4b4:	lsl	x0, x0, #3
  41f4b8:	add	x0, x2, x0
  41f4bc:	ldr	x0, [x0]
  41f4c0:	cmp	x1, x0
  41f4c4:	b.gt	41f478 <_obstack_memory_used@@Base+0x3298>
  41f4c8:	ldr	x0, [sp, #80]
  41f4cc:	cmp	x0, #0x0
  41f4d0:	b.lt	41f50c <_obstack_memory_used@@Base+0x332c>  // b.tstop
  41f4d4:	ldr	x0, [sp, #40]
  41f4d8:	ldr	x1, [x0, #16]
  41f4dc:	ldr	x0, [sp, #80]
  41f4e0:	lsl	x0, x0, #3
  41f4e4:	add	x0, x1, x0
  41f4e8:	ldr	x1, [x0]
  41f4ec:	ldr	x0, [sp, #32]
  41f4f0:	ldr	x2, [x0, #16]
  41f4f4:	ldr	x0, [sp, #104]
  41f4f8:	lsl	x0, x0, #3
  41f4fc:	add	x0, x2, x0
  41f500:	ldr	x0, [x0]
  41f504:	cmp	x1, x0
  41f508:	b.eq	41f548 <_obstack_memory_used@@Base+0x3368>  // b.none
  41f50c:	ldr	x0, [sp, #32]
  41f510:	ldr	x1, [x0, #16]
  41f514:	ldr	x0, [sp, #104]
  41f518:	lsl	x0, x0, #3
  41f51c:	add	x1, x1, x0
  41f520:	ldr	x0, [sp, #40]
  41f524:	ldr	x2, [x0, #16]
  41f528:	ldr	x0, [sp, #64]
  41f52c:	sub	x0, x0, #0x1
  41f530:	str	x0, [sp, #64]
  41f534:	ldr	x0, [sp, #64]
  41f538:	lsl	x0, x0, #3
  41f53c:	add	x0, x2, x0
  41f540:	ldr	x1, [x1]
  41f544:	str	x1, [x0]
  41f548:	ldr	x0, [sp, #104]
  41f54c:	sub	x0, x0, #0x1
  41f550:	str	x0, [sp, #104]
  41f554:	ldr	x0, [sp, #104]
  41f558:	cmp	x0, #0x0
  41f55c:	b.lt	41f5f0 <_obstack_memory_used@@Base+0x3410>  // b.tstop
  41f560:	ldr	x0, [sp, #96]
  41f564:	sub	x0, x0, #0x1
  41f568:	str	x0, [sp, #96]
  41f56c:	ldr	x0, [sp, #96]
  41f570:	cmp	x0, #0x0
  41f574:	b.lt	41f5f0 <_obstack_memory_used@@Base+0x3410>  // b.tstop
  41f578:	b	41f43c <_obstack_memory_used@@Base+0x325c>
  41f57c:	ldr	x0, [sp, #32]
  41f580:	ldr	x1, [x0, #16]
  41f584:	ldr	x0, [sp, #104]
  41f588:	lsl	x0, x0, #3
  41f58c:	add	x0, x1, x0
  41f590:	ldr	x1, [x0]
  41f594:	ldr	x0, [sp, #24]
  41f598:	ldr	x2, [x0, #16]
  41f59c:	ldr	x0, [sp, #96]
  41f5a0:	lsl	x0, x0, #3
  41f5a4:	add	x0, x2, x0
  41f5a8:	ldr	x0, [x0]
  41f5ac:	cmp	x1, x0
  41f5b0:	b.ge	41f5d0 <_obstack_memory_used@@Base+0x33f0>  // b.tcont
  41f5b4:	ldr	x0, [sp, #96]
  41f5b8:	sub	x0, x0, #0x1
  41f5bc:	str	x0, [sp, #96]
  41f5c0:	ldr	x0, [sp, #96]
  41f5c4:	cmp	x0, #0x0
  41f5c8:	b.ge	41f43c <_obstack_memory_used@@Base+0x325c>  // b.tcont
  41f5cc:	b	41f5f0 <_obstack_memory_used@@Base+0x3410>
  41f5d0:	ldr	x0, [sp, #104]
  41f5d4:	sub	x0, x0, #0x1
  41f5d8:	str	x0, [sp, #104]
  41f5dc:	ldr	x0, [sp, #104]
  41f5e0:	cmp	x0, #0x0
  41f5e4:	b.lt	41f5ec <_obstack_memory_used@@Base+0x340c>  // b.tstop
  41f5e8:	b	41f43c <_obstack_memory_used@@Base+0x325c>
  41f5ec:	nop
  41f5f0:	ldr	x0, [sp, #40]
  41f5f4:	ldr	x0, [x0, #8]
  41f5f8:	sub	x0, x0, #0x1
  41f5fc:	str	x0, [sp, #80]
  41f600:	ldr	x0, [sp, #40]
  41f604:	ldr	x1, [x0, #8]
  41f608:	ldr	x0, [sp, #32]
  41f60c:	ldr	x0, [x0, #8]
  41f610:	add	x1, x1, x0
  41f614:	ldr	x0, [sp, #24]
  41f618:	ldr	x0, [x0, #8]
  41f61c:	add	x0, x1, x0
  41f620:	sub	x0, x0, #0x1
  41f624:	str	x0, [sp, #88]
  41f628:	ldr	x1, [sp, #88]
  41f62c:	ldr	x0, [sp, #64]
  41f630:	sub	x0, x1, x0
  41f634:	add	x0, x0, #0x1
  41f638:	str	x0, [sp, #72]
  41f63c:	ldr	x0, [sp, #40]
  41f640:	ldr	x1, [x0, #8]
  41f644:	ldr	x0, [sp, #72]
  41f648:	add	x1, x1, x0
  41f64c:	ldr	x0, [sp, #40]
  41f650:	str	x1, [x0, #8]
  41f654:	ldr	x0, [sp, #72]
  41f658:	cmp	x0, #0x0
  41f65c:	b.le	41f754 <_obstack_memory_used@@Base+0x3574>
  41f660:	ldr	x0, [sp, #80]
  41f664:	cmp	x0, #0x0
  41f668:	b.lt	41f754 <_obstack_memory_used@@Base+0x3574>  // b.tstop
  41f66c:	ldr	x0, [sp, #40]
  41f670:	ldr	x1, [x0, #16]
  41f674:	ldr	x0, [sp, #88]
  41f678:	lsl	x0, x0, #3
  41f67c:	add	x0, x1, x0
  41f680:	ldr	x1, [x0]
  41f684:	ldr	x0, [sp, #40]
  41f688:	ldr	x2, [x0, #16]
  41f68c:	ldr	x0, [sp, #80]
  41f690:	lsl	x0, x0, #3
  41f694:	add	x0, x2, x0
  41f698:	ldr	x0, [x0]
  41f69c:	cmp	x1, x0
  41f6a0:	b.le	41f6fc <_obstack_memory_used@@Base+0x351c>
  41f6a4:	ldr	x0, [sp, #40]
  41f6a8:	ldr	x1, [x0, #16]
  41f6ac:	ldr	x0, [sp, #88]
  41f6b0:	sub	x2, x0, #0x1
  41f6b4:	str	x2, [sp, #88]
  41f6b8:	lsl	x0, x0, #3
  41f6bc:	add	x1, x1, x0
  41f6c0:	ldr	x0, [sp, #40]
  41f6c4:	ldr	x2, [x0, #16]
  41f6c8:	ldr	x0, [sp, #72]
  41f6cc:	sub	x3, x0, #0x1
  41f6d0:	str	x3, [sp, #72]
  41f6d4:	ldr	x3, [sp, #80]
  41f6d8:	add	x0, x0, x3
  41f6dc:	lsl	x0, x0, #3
  41f6e0:	add	x0, x2, x0
  41f6e4:	ldr	x1, [x1]
  41f6e8:	str	x1, [x0]
  41f6ec:	ldr	x0, [sp, #72]
  41f6f0:	cmp	x0, #0x0
  41f6f4:	b.ne	41f66c <_obstack_memory_used@@Base+0x348c>  // b.any
  41f6f8:	b	41f754 <_obstack_memory_used@@Base+0x3574>
  41f6fc:	ldr	x0, [sp, #40]
  41f700:	ldr	x1, [x0, #16]
  41f704:	ldr	x0, [sp, #80]
  41f708:	lsl	x0, x0, #3
  41f70c:	add	x1, x1, x0
  41f710:	ldr	x0, [sp, #40]
  41f714:	ldr	x2, [x0, #16]
  41f718:	ldr	x3, [sp, #80]
  41f71c:	ldr	x0, [sp, #72]
  41f720:	add	x0, x3, x0
  41f724:	lsl	x0, x0, #3
  41f728:	add	x0, x2, x0
  41f72c:	ldr	x1, [x1]
  41f730:	str	x1, [x0]
  41f734:	ldr	x0, [sp, #80]
  41f738:	sub	x0, x0, #0x1
  41f73c:	str	x0, [sp, #80]
  41f740:	ldr	x0, [sp, #80]
  41f744:	cmp	x0, #0x0
  41f748:	b.lt	41f750 <_obstack_memory_used@@Base+0x3570>  // b.tstop
  41f74c:	b	41f66c <_obstack_memory_used@@Base+0x348c>
  41f750:	nop
  41f754:	ldr	x0, [sp, #40]
  41f758:	ldr	x3, [x0, #16]
  41f75c:	ldr	x0, [sp, #40]
  41f760:	ldr	x1, [x0, #16]
  41f764:	ldr	x0, [sp, #64]
  41f768:	lsl	x0, x0, #3
  41f76c:	add	x1, x1, x0
  41f770:	ldr	x0, [sp, #72]
  41f774:	lsl	x0, x0, #3
  41f778:	mov	x2, x0
  41f77c:	mov	x0, x3
  41f780:	bl	4026d0 <memcpy@plt>
  41f784:	mov	w0, #0x0                   	// #0
  41f788:	ldp	x29, x30, [sp], #112
  41f78c:	ret
  41f790:	stp	x29, x30, [sp, #-80]!
  41f794:	mov	x29, sp
  41f798:	str	x0, [sp, #40]
  41f79c:	str	x1, [sp, #32]
  41f7a0:	str	x2, [sp, #24]
  41f7a4:	ldr	x0, [sp, #32]
  41f7a8:	cmp	x0, #0x0
  41f7ac:	b.eq	41f83c <_obstack_memory_used@@Base+0x365c>  // b.none
  41f7b0:	ldr	x0, [sp, #32]
  41f7b4:	ldr	x0, [x0, #8]
  41f7b8:	cmp	x0, #0x0
  41f7bc:	b.le	41f83c <_obstack_memory_used@@Base+0x365c>
  41f7c0:	ldr	x0, [sp, #24]
  41f7c4:	cmp	x0, #0x0
  41f7c8:	b.eq	41f83c <_obstack_memory_used@@Base+0x365c>  // b.none
  41f7cc:	ldr	x0, [sp, #24]
  41f7d0:	ldr	x0, [x0, #8]
  41f7d4:	cmp	x0, #0x0
  41f7d8:	b.le	41f83c <_obstack_memory_used@@Base+0x365c>
  41f7dc:	ldr	x0, [sp, #32]
  41f7e0:	ldr	x1, [x0, #8]
  41f7e4:	ldr	x0, [sp, #24]
  41f7e8:	ldr	x0, [x0, #8]
  41f7ec:	add	x1, x1, x0
  41f7f0:	ldr	x0, [sp, #40]
  41f7f4:	str	x1, [x0]
  41f7f8:	ldr	x0, [sp, #40]
  41f7fc:	ldr	x0, [x0]
  41f800:	lsl	x0, x0, #3
  41f804:	bl	4028b0 <malloc@plt>
  41f808:	mov	x1, x0
  41f80c:	ldr	x0, [sp, #40]
  41f810:	str	x1, [x0, #16]
  41f814:	ldr	x0, [sp, #40]
  41f818:	ldr	x0, [x0, #16]
  41f81c:	cmp	x0, #0x0
  41f820:	cset	w0, eq  // eq = none
  41f824:	and	w0, w0, #0xff
  41f828:	and	x0, x0, #0xff
  41f82c:	cmp	x0, #0x0
  41f830:	b.eq	41f8ac <_obstack_memory_used@@Base+0x36cc>  // b.none
  41f834:	mov	w0, #0xc                   	// #12
  41f838:	b	41faf8 <_obstack_memory_used@@Base+0x3918>
  41f83c:	ldr	x0, [sp, #32]
  41f840:	cmp	x0, #0x0
  41f844:	b.eq	41f868 <_obstack_memory_used@@Base+0x3688>  // b.none
  41f848:	ldr	x0, [sp, #32]
  41f84c:	ldr	x0, [x0, #8]
  41f850:	cmp	x0, #0x0
  41f854:	b.le	41f868 <_obstack_memory_used@@Base+0x3688>
  41f858:	ldr	x1, [sp, #32]
  41f85c:	ldr	x0, [sp, #40]
  41f860:	bl	41f218 <_obstack_memory_used@@Base+0x3038>
  41f864:	b	41faf8 <_obstack_memory_used@@Base+0x3918>
  41f868:	ldr	x0, [sp, #24]
  41f86c:	cmp	x0, #0x0
  41f870:	b.eq	41f894 <_obstack_memory_used@@Base+0x36b4>  // b.none
  41f874:	ldr	x0, [sp, #24]
  41f878:	ldr	x0, [x0, #8]
  41f87c:	cmp	x0, #0x0
  41f880:	b.le	41f894 <_obstack_memory_used@@Base+0x36b4>
  41f884:	ldr	x1, [sp, #24]
  41f888:	ldr	x0, [sp, #40]
  41f88c:	bl	41f218 <_obstack_memory_used@@Base+0x3038>
  41f890:	b	41faf8 <_obstack_memory_used@@Base+0x3918>
  41f894:	mov	x2, #0x18                  	// #24
  41f898:	mov	w1, #0x0                   	// #0
  41f89c:	ldr	x0, [sp, #40]
  41f8a0:	bl	402980 <memset@plt>
  41f8a4:	mov	w0, #0x0                   	// #0
  41f8a8:	b	41faf8 <_obstack_memory_used@@Base+0x3918>
  41f8ac:	str	xzr, [sp, #56]
  41f8b0:	ldr	x0, [sp, #56]
  41f8b4:	str	x0, [sp, #64]
  41f8b8:	ldr	x0, [sp, #64]
  41f8bc:	str	x0, [sp, #72]
  41f8c0:	b	41f9c4 <_obstack_memory_used@@Base+0x37e4>
  41f8c4:	ldr	x0, [sp, #32]
  41f8c8:	ldr	x1, [x0, #16]
  41f8cc:	ldr	x0, [sp, #72]
  41f8d0:	lsl	x0, x0, #3
  41f8d4:	add	x0, x1, x0
  41f8d8:	ldr	x1, [x0]
  41f8dc:	ldr	x0, [sp, #24]
  41f8e0:	ldr	x2, [x0, #16]
  41f8e4:	ldr	x0, [sp, #64]
  41f8e8:	lsl	x0, x0, #3
  41f8ec:	add	x0, x2, x0
  41f8f0:	ldr	x0, [x0]
  41f8f4:	cmp	x1, x0
  41f8f8:	b.le	41f940 <_obstack_memory_used@@Base+0x3760>
  41f8fc:	ldr	x0, [sp, #24]
  41f900:	ldr	x1, [x0, #16]
  41f904:	ldr	x0, [sp, #64]
  41f908:	add	x2, x0, #0x1
  41f90c:	str	x2, [sp, #64]
  41f910:	lsl	x0, x0, #3
  41f914:	add	x1, x1, x0
  41f918:	ldr	x0, [sp, #40]
  41f91c:	ldr	x2, [x0, #16]
  41f920:	ldr	x0, [sp, #56]
  41f924:	add	x3, x0, #0x1
  41f928:	str	x3, [sp, #56]
  41f92c:	lsl	x0, x0, #3
  41f930:	add	x0, x2, x0
  41f934:	ldr	x1, [x1]
  41f938:	str	x1, [x0]
  41f93c:	b	41f9c4 <_obstack_memory_used@@Base+0x37e4>
  41f940:	ldr	x0, [sp, #32]
  41f944:	ldr	x1, [x0, #16]
  41f948:	ldr	x0, [sp, #72]
  41f94c:	lsl	x0, x0, #3
  41f950:	add	x0, x1, x0
  41f954:	ldr	x1, [x0]
  41f958:	ldr	x0, [sp, #24]
  41f95c:	ldr	x2, [x0, #16]
  41f960:	ldr	x0, [sp, #64]
  41f964:	lsl	x0, x0, #3
  41f968:	add	x0, x2, x0
  41f96c:	ldr	x0, [x0]
  41f970:	cmp	x1, x0
  41f974:	b.ne	41f984 <_obstack_memory_used@@Base+0x37a4>  // b.any
  41f978:	ldr	x0, [sp, #64]
  41f97c:	add	x0, x0, #0x1
  41f980:	str	x0, [sp, #64]
  41f984:	ldr	x0, [sp, #32]
  41f988:	ldr	x1, [x0, #16]
  41f98c:	ldr	x0, [sp, #72]
  41f990:	add	x2, x0, #0x1
  41f994:	str	x2, [sp, #72]
  41f998:	lsl	x0, x0, #3
  41f99c:	add	x1, x1, x0
  41f9a0:	ldr	x0, [sp, #40]
  41f9a4:	ldr	x2, [x0, #16]
  41f9a8:	ldr	x0, [sp, #56]
  41f9ac:	add	x3, x0, #0x1
  41f9b0:	str	x3, [sp, #56]
  41f9b4:	lsl	x0, x0, #3
  41f9b8:	add	x0, x2, x0
  41f9bc:	ldr	x1, [x1]
  41f9c0:	str	x1, [x0]
  41f9c4:	ldr	x0, [sp, #32]
  41f9c8:	ldr	x0, [x0, #8]
  41f9cc:	ldr	x1, [sp, #72]
  41f9d0:	cmp	x1, x0
  41f9d4:	b.ge	41f9ec <_obstack_memory_used@@Base+0x380c>  // b.tcont
  41f9d8:	ldr	x0, [sp, #24]
  41f9dc:	ldr	x0, [x0, #8]
  41f9e0:	ldr	x1, [sp, #64]
  41f9e4:	cmp	x1, x0
  41f9e8:	b.lt	41f8c4 <_obstack_memory_used@@Base+0x36e4>  // b.tstop
  41f9ec:	ldr	x0, [sp, #32]
  41f9f0:	ldr	x0, [x0, #8]
  41f9f4:	ldr	x1, [sp, #72]
  41f9f8:	cmp	x1, x0
  41f9fc:	b.ge	41fa6c <_obstack_memory_used@@Base+0x388c>  // b.tcont
  41fa00:	ldr	x0, [sp, #40]
  41fa04:	ldr	x1, [x0, #16]
  41fa08:	ldr	x0, [sp, #56]
  41fa0c:	lsl	x0, x0, #3
  41fa10:	add	x3, x1, x0
  41fa14:	ldr	x0, [sp, #32]
  41fa18:	ldr	x1, [x0, #16]
  41fa1c:	ldr	x0, [sp, #72]
  41fa20:	lsl	x0, x0, #3
  41fa24:	add	x4, x1, x0
  41fa28:	ldr	x0, [sp, #32]
  41fa2c:	ldr	x1, [x0, #8]
  41fa30:	ldr	x0, [sp, #72]
  41fa34:	sub	x0, x1, x0
  41fa38:	lsl	x0, x0, #3
  41fa3c:	mov	x2, x0
  41fa40:	mov	x1, x4
  41fa44:	mov	x0, x3
  41fa48:	bl	4026d0 <memcpy@plt>
  41fa4c:	ldr	x0, [sp, #32]
  41fa50:	ldr	x1, [x0, #8]
  41fa54:	ldr	x0, [sp, #72]
  41fa58:	sub	x0, x1, x0
  41fa5c:	ldr	x1, [sp, #56]
  41fa60:	add	x0, x1, x0
  41fa64:	str	x0, [sp, #56]
  41fa68:	b	41fae8 <_obstack_memory_used@@Base+0x3908>
  41fa6c:	ldr	x0, [sp, #24]
  41fa70:	ldr	x0, [x0, #8]
  41fa74:	ldr	x1, [sp, #64]
  41fa78:	cmp	x1, x0
  41fa7c:	b.ge	41fae8 <_obstack_memory_used@@Base+0x3908>  // b.tcont
  41fa80:	ldr	x0, [sp, #40]
  41fa84:	ldr	x1, [x0, #16]
  41fa88:	ldr	x0, [sp, #56]
  41fa8c:	lsl	x0, x0, #3
  41fa90:	add	x3, x1, x0
  41fa94:	ldr	x0, [sp, #24]
  41fa98:	ldr	x1, [x0, #16]
  41fa9c:	ldr	x0, [sp, #64]
  41faa0:	lsl	x0, x0, #3
  41faa4:	add	x4, x1, x0
  41faa8:	ldr	x0, [sp, #24]
  41faac:	ldr	x1, [x0, #8]
  41fab0:	ldr	x0, [sp, #64]
  41fab4:	sub	x0, x1, x0
  41fab8:	lsl	x0, x0, #3
  41fabc:	mov	x2, x0
  41fac0:	mov	x1, x4
  41fac4:	mov	x0, x3
  41fac8:	bl	4026d0 <memcpy@plt>
  41facc:	ldr	x0, [sp, #24]
  41fad0:	ldr	x1, [x0, #8]
  41fad4:	ldr	x0, [sp, #64]
  41fad8:	sub	x0, x1, x0
  41fadc:	ldr	x1, [sp, #56]
  41fae0:	add	x0, x1, x0
  41fae4:	str	x0, [sp, #56]
  41fae8:	ldr	x0, [sp, #40]
  41faec:	ldr	x1, [sp, #56]
  41faf0:	str	x1, [x0, #8]
  41faf4:	mov	w0, #0x0                   	// #0
  41faf8:	ldp	x29, x30, [sp], #80
  41fafc:	ret
  41fb00:	stp	x29, x30, [sp, #-80]!
  41fb04:	mov	x29, sp
  41fb08:	str	x0, [sp, #24]
  41fb0c:	str	x1, [sp, #16]
  41fb10:	ldr	x0, [sp, #16]
  41fb14:	cmp	x0, #0x0
  41fb18:	b.eq	41fb2c <_obstack_memory_used@@Base+0x394c>  // b.none
  41fb1c:	ldr	x0, [sp, #16]
  41fb20:	ldr	x0, [x0, #8]
  41fb24:	cmp	x0, #0x0
  41fb28:	b.ne	41fb34 <_obstack_memory_used@@Base+0x3954>  // b.any
  41fb2c:	mov	w0, #0x0                   	// #0
  41fb30:	b	41ff44 <_obstack_memory_used@@Base+0x3d64>
  41fb34:	ldr	x0, [sp, #24]
  41fb38:	ldr	x1, [x0]
  41fb3c:	ldr	x0, [sp, #16]
  41fb40:	ldr	x0, [x0, #8]
  41fb44:	lsl	x2, x0, #1
  41fb48:	ldr	x0, [sp, #24]
  41fb4c:	ldr	x0, [x0, #8]
  41fb50:	add	x0, x2, x0
  41fb54:	cmp	x1, x0
  41fb58:	b.ge	41fbd4 <_obstack_memory_used@@Base+0x39f4>  // b.tcont
  41fb5c:	ldr	x0, [sp, #16]
  41fb60:	ldr	x1, [x0, #8]
  41fb64:	ldr	x0, [sp, #24]
  41fb68:	ldr	x0, [x0]
  41fb6c:	add	x0, x1, x0
  41fb70:	lsl	x0, x0, #1
  41fb74:	str	x0, [sp, #40]
  41fb78:	ldr	x0, [sp, #24]
  41fb7c:	ldr	x2, [x0, #16]
  41fb80:	ldr	x0, [sp, #40]
  41fb84:	lsl	x0, x0, #3
  41fb88:	mov	x1, x0
  41fb8c:	mov	x0, x2
  41fb90:	bl	4029e0 <realloc@plt>
  41fb94:	str	x0, [sp, #32]
  41fb98:	ldr	x0, [sp, #32]
  41fb9c:	cmp	x0, #0x0
  41fba0:	cset	w0, eq  // eq = none
  41fba4:	and	w0, w0, #0xff
  41fba8:	and	x0, x0, #0xff
  41fbac:	cmp	x0, #0x0
  41fbb0:	b.eq	41fbbc <_obstack_memory_used@@Base+0x39dc>  // b.none
  41fbb4:	mov	w0, #0xc                   	// #12
  41fbb8:	b	41ff44 <_obstack_memory_used@@Base+0x3d64>
  41fbbc:	ldr	x0, [sp, #24]
  41fbc0:	ldr	x1, [sp, #32]
  41fbc4:	str	x1, [x0, #16]
  41fbc8:	ldr	x0, [sp, #24]
  41fbcc:	ldr	x1, [sp, #40]
  41fbd0:	str	x1, [x0]
  41fbd4:	ldr	x0, [sp, #24]
  41fbd8:	ldr	x0, [x0, #8]
  41fbdc:	cmp	x0, #0x0
  41fbe0:	cset	w0, eq  // eq = none
  41fbe4:	and	w0, w0, #0xff
  41fbe8:	and	x0, x0, #0xff
  41fbec:	cmp	x0, #0x0
  41fbf0:	b.eq	41fc34 <_obstack_memory_used@@Base+0x3a54>  // b.none
  41fbf4:	ldr	x0, [sp, #16]
  41fbf8:	ldr	x1, [x0, #8]
  41fbfc:	ldr	x0, [sp, #24]
  41fc00:	str	x1, [x0, #8]
  41fc04:	ldr	x0, [sp, #24]
  41fc08:	ldr	x3, [x0, #16]
  41fc0c:	ldr	x0, [sp, #16]
  41fc10:	ldr	x1, [x0, #16]
  41fc14:	ldr	x0, [sp, #16]
  41fc18:	ldr	x0, [x0, #8]
  41fc1c:	lsl	x0, x0, #3
  41fc20:	mov	x2, x0
  41fc24:	mov	x0, x3
  41fc28:	bl	4026d0 <memcpy@plt>
  41fc2c:	mov	w0, #0x0                   	// #0
  41fc30:	b	41ff44 <_obstack_memory_used@@Base+0x3d64>
  41fc34:	ldr	x0, [sp, #24]
  41fc38:	ldr	x1, [x0, #8]
  41fc3c:	ldr	x0, [sp, #16]
  41fc40:	ldr	x0, [x0, #8]
  41fc44:	lsl	x0, x0, #1
  41fc48:	add	x0, x1, x0
  41fc4c:	str	x0, [sp, #56]
  41fc50:	ldr	x0, [sp, #16]
  41fc54:	ldr	x0, [x0, #8]
  41fc58:	sub	x0, x0, #0x1
  41fc5c:	str	x0, [sp, #72]
  41fc60:	ldr	x0, [sp, #24]
  41fc64:	ldr	x0, [x0, #8]
  41fc68:	sub	x0, x0, #0x1
  41fc6c:	str	x0, [sp, #64]
  41fc70:	b	41fd54 <_obstack_memory_used@@Base+0x3b74>
  41fc74:	ldr	x0, [sp, #24]
  41fc78:	ldr	x1, [x0, #16]
  41fc7c:	ldr	x0, [sp, #64]
  41fc80:	lsl	x0, x0, #3
  41fc84:	add	x0, x1, x0
  41fc88:	ldr	x1, [x0]
  41fc8c:	ldr	x0, [sp, #16]
  41fc90:	ldr	x2, [x0, #16]
  41fc94:	ldr	x0, [sp, #72]
  41fc98:	lsl	x0, x0, #3
  41fc9c:	add	x0, x2, x0
  41fca0:	ldr	x0, [x0]
  41fca4:	cmp	x1, x0
  41fca8:	b.ne	41fcc8 <_obstack_memory_used@@Base+0x3ae8>  // b.any
  41fcac:	ldr	x0, [sp, #72]
  41fcb0:	sub	x0, x0, #0x1
  41fcb4:	str	x0, [sp, #72]
  41fcb8:	ldr	x0, [sp, #64]
  41fcbc:	sub	x0, x0, #0x1
  41fcc0:	str	x0, [sp, #64]
  41fcc4:	b	41fd54 <_obstack_memory_used@@Base+0x3b74>
  41fcc8:	ldr	x0, [sp, #24]
  41fccc:	ldr	x1, [x0, #16]
  41fcd0:	ldr	x0, [sp, #64]
  41fcd4:	lsl	x0, x0, #3
  41fcd8:	add	x0, x1, x0
  41fcdc:	ldr	x1, [x0]
  41fce0:	ldr	x0, [sp, #16]
  41fce4:	ldr	x2, [x0, #16]
  41fce8:	ldr	x0, [sp, #72]
  41fcec:	lsl	x0, x0, #3
  41fcf0:	add	x0, x2, x0
  41fcf4:	ldr	x0, [x0]
  41fcf8:	cmp	x1, x0
  41fcfc:	b.ge	41fd48 <_obstack_memory_used@@Base+0x3b68>  // b.tcont
  41fd00:	ldr	x0, [sp, #16]
  41fd04:	ldr	x1, [x0, #16]
  41fd08:	ldr	x0, [sp, #72]
  41fd0c:	sub	x2, x0, #0x1
  41fd10:	str	x2, [sp, #72]
  41fd14:	lsl	x0, x0, #3
  41fd18:	add	x1, x1, x0
  41fd1c:	ldr	x0, [sp, #24]
  41fd20:	ldr	x2, [x0, #16]
  41fd24:	ldr	x0, [sp, #56]
  41fd28:	sub	x0, x0, #0x1
  41fd2c:	str	x0, [sp, #56]
  41fd30:	ldr	x0, [sp, #56]
  41fd34:	lsl	x0, x0, #3
  41fd38:	add	x0, x2, x0
  41fd3c:	ldr	x1, [x1]
  41fd40:	str	x1, [x0]
  41fd44:	b	41fd54 <_obstack_memory_used@@Base+0x3b74>
  41fd48:	ldr	x0, [sp, #64]
  41fd4c:	sub	x0, x0, #0x1
  41fd50:	str	x0, [sp, #64]
  41fd54:	ldr	x0, [sp, #72]
  41fd58:	cmp	x0, #0x0
  41fd5c:	b.lt	41fd6c <_obstack_memory_used@@Base+0x3b8c>  // b.tstop
  41fd60:	ldr	x0, [sp, #64]
  41fd64:	cmp	x0, #0x0
  41fd68:	b.ge	41fc74 <_obstack_memory_used@@Base+0x3a94>  // b.tcont
  41fd6c:	ldr	x0, [sp, #72]
  41fd70:	cmp	x0, #0x0
  41fd74:	b.lt	41fdc0 <_obstack_memory_used@@Base+0x3be0>  // b.tstop
  41fd78:	ldr	x0, [sp, #72]
  41fd7c:	add	x0, x0, #0x1
  41fd80:	ldr	x1, [sp, #56]
  41fd84:	sub	x0, x1, x0
  41fd88:	str	x0, [sp, #56]
  41fd8c:	ldr	x0, [sp, #24]
  41fd90:	ldr	x1, [x0, #16]
  41fd94:	ldr	x0, [sp, #56]
  41fd98:	lsl	x0, x0, #3
  41fd9c:	add	x3, x1, x0
  41fda0:	ldr	x0, [sp, #16]
  41fda4:	ldr	x1, [x0, #16]
  41fda8:	ldr	x0, [sp, #72]
  41fdac:	add	x0, x0, #0x1
  41fdb0:	lsl	x0, x0, #3
  41fdb4:	mov	x2, x0
  41fdb8:	mov	x0, x3
  41fdbc:	bl	4026d0 <memcpy@plt>
  41fdc0:	ldr	x0, [sp, #24]
  41fdc4:	ldr	x0, [x0, #8]
  41fdc8:	sub	x0, x0, #0x1
  41fdcc:	str	x0, [sp, #64]
  41fdd0:	ldr	x0, [sp, #24]
  41fdd4:	ldr	x1, [x0, #8]
  41fdd8:	ldr	x0, [sp, #16]
  41fddc:	ldr	x0, [x0, #8]
  41fde0:	lsl	x0, x0, #1
  41fde4:	add	x0, x1, x0
  41fde8:	sub	x0, x0, #0x1
  41fdec:	str	x0, [sp, #72]
  41fdf0:	ldr	x1, [sp, #72]
  41fdf4:	ldr	x0, [sp, #56]
  41fdf8:	sub	x0, x1, x0
  41fdfc:	add	x0, x0, #0x1
  41fe00:	str	x0, [sp, #48]
  41fe04:	ldr	x0, [sp, #48]
  41fe08:	cmp	x0, #0x0
  41fe0c:	b.ne	41fe18 <_obstack_memory_used@@Base+0x3c38>  // b.any
  41fe10:	mov	w0, #0x0                   	// #0
  41fe14:	b	41ff44 <_obstack_memory_used@@Base+0x3d64>
  41fe18:	ldr	x0, [sp, #24]
  41fe1c:	ldr	x1, [x0, #8]
  41fe20:	ldr	x0, [sp, #48]
  41fe24:	add	x1, x1, x0
  41fe28:	ldr	x0, [sp, #24]
  41fe2c:	str	x1, [x0, #8]
  41fe30:	ldr	x0, [sp, #24]
  41fe34:	ldr	x1, [x0, #16]
  41fe38:	ldr	x0, [sp, #72]
  41fe3c:	lsl	x0, x0, #3
  41fe40:	add	x0, x1, x0
  41fe44:	ldr	x1, [x0]
  41fe48:	ldr	x0, [sp, #24]
  41fe4c:	ldr	x2, [x0, #16]
  41fe50:	ldr	x0, [sp, #64]
  41fe54:	lsl	x0, x0, #3
  41fe58:	add	x0, x2, x0
  41fe5c:	ldr	x0, [x0]
  41fe60:	cmp	x1, x0
  41fe64:	b.le	41fec0 <_obstack_memory_used@@Base+0x3ce0>
  41fe68:	ldr	x0, [sp, #24]
  41fe6c:	ldr	x1, [x0, #16]
  41fe70:	ldr	x0, [sp, #72]
  41fe74:	sub	x2, x0, #0x1
  41fe78:	str	x2, [sp, #72]
  41fe7c:	lsl	x0, x0, #3
  41fe80:	add	x1, x1, x0
  41fe84:	ldr	x0, [sp, #24]
  41fe88:	ldr	x2, [x0, #16]
  41fe8c:	ldr	x0, [sp, #48]
  41fe90:	sub	x3, x0, #0x1
  41fe94:	str	x3, [sp, #48]
  41fe98:	ldr	x3, [sp, #64]
  41fe9c:	add	x0, x0, x3
  41fea0:	lsl	x0, x0, #3
  41fea4:	add	x0, x2, x0
  41fea8:	ldr	x1, [x1]
  41feac:	str	x1, [x0]
  41feb0:	ldr	x0, [sp, #48]
  41feb4:	cmp	x0, #0x0
  41feb8:	b.ne	41fe30 <_obstack_memory_used@@Base+0x3c50>  // b.any
  41febc:	b	41ff40 <_obstack_memory_used@@Base+0x3d60>
  41fec0:	ldr	x0, [sp, #24]
  41fec4:	ldr	x1, [x0, #16]
  41fec8:	ldr	x0, [sp, #64]
  41fecc:	lsl	x0, x0, #3
  41fed0:	add	x1, x1, x0
  41fed4:	ldr	x0, [sp, #24]
  41fed8:	ldr	x2, [x0, #16]
  41fedc:	ldr	x3, [sp, #64]
  41fee0:	ldr	x0, [sp, #48]
  41fee4:	add	x0, x3, x0
  41fee8:	lsl	x0, x0, #3
  41feec:	add	x0, x2, x0
  41fef0:	ldr	x1, [x1]
  41fef4:	str	x1, [x0]
  41fef8:	ldr	x0, [sp, #64]
  41fefc:	sub	x0, x0, #0x1
  41ff00:	str	x0, [sp, #64]
  41ff04:	ldr	x0, [sp, #64]
  41ff08:	cmp	x0, #0x0
  41ff0c:	b.ge	41fe30 <_obstack_memory_used@@Base+0x3c50>  // b.tcont
  41ff10:	ldr	x0, [sp, #24]
  41ff14:	ldr	x3, [x0, #16]
  41ff18:	ldr	x0, [sp, #24]
  41ff1c:	ldr	x1, [x0, #16]
  41ff20:	ldr	x0, [sp, #56]
  41ff24:	lsl	x0, x0, #3
  41ff28:	add	x1, x1, x0
  41ff2c:	ldr	x0, [sp, #48]
  41ff30:	lsl	x0, x0, #3
  41ff34:	mov	x2, x0
  41ff38:	mov	x0, x3
  41ff3c:	bl	4026d0 <memcpy@plt>
  41ff40:	mov	w0, #0x0                   	// #0
  41ff44:	ldp	x29, x30, [sp], #80
  41ff48:	ret
  41ff4c:	stp	x29, x30, [sp, #-48]!
  41ff50:	mov	x29, sp
  41ff54:	str	x0, [sp, #24]
  41ff58:	str	x1, [sp, #16]
  41ff5c:	ldr	x0, [sp, #24]
  41ff60:	ldr	x0, [x0]
  41ff64:	cmp	x0, #0x0
  41ff68:	b.ne	41ff98 <_obstack_memory_used@@Base+0x3db8>  // b.any
  41ff6c:	ldr	x1, [sp, #16]
  41ff70:	ldr	x0, [sp, #24]
  41ff74:	bl	41f080 <_obstack_memory_used@@Base+0x2ea0>
  41ff78:	cmp	w0, #0x0
  41ff7c:	cset	w0, eq  // eq = none
  41ff80:	and	w0, w0, #0xff
  41ff84:	and	x0, x0, #0xff
  41ff88:	cmp	x0, #0x0
  41ff8c:	cset	w0, ne  // ne = any
  41ff90:	and	w0, w0, #0xff
  41ff94:	b	420178 <_obstack_memory_used@@Base+0x3f98>
  41ff98:	ldr	x0, [sp, #24]
  41ff9c:	ldr	x0, [x0, #8]
  41ffa0:	cmp	x0, #0x0
  41ffa4:	b.ne	41ffd4 <_obstack_memory_used@@Base+0x3df4>  // b.any
  41ffa8:	ldr	x0, [sp, #24]
  41ffac:	ldr	x0, [x0, #16]
  41ffb0:	ldr	x1, [sp, #16]
  41ffb4:	str	x1, [x0]
  41ffb8:	ldr	x0, [sp, #24]
  41ffbc:	ldr	x0, [x0, #8]
  41ffc0:	add	x1, x0, #0x1
  41ffc4:	ldr	x0, [sp, #24]
  41ffc8:	str	x1, [x0, #8]
  41ffcc:	mov	w0, #0x1                   	// #1
  41ffd0:	b	420178 <_obstack_memory_used@@Base+0x3f98>
  41ffd4:	ldr	x0, [sp, #24]
  41ffd8:	ldr	x1, [x0]
  41ffdc:	ldr	x0, [sp, #24]
  41ffe0:	ldr	x0, [x0, #8]
  41ffe4:	cmp	x1, x0
  41ffe8:	b.ne	420054 <_obstack_memory_used@@Base+0x3e74>  // b.any
  41ffec:	ldr	x0, [sp, #24]
  41fff0:	ldr	x0, [x0]
  41fff4:	lsl	x1, x0, #1
  41fff8:	ldr	x0, [sp, #24]
  41fffc:	str	x1, [x0]
  420000:	ldr	x0, [sp, #24]
  420004:	ldr	x2, [x0, #16]
  420008:	ldr	x0, [sp, #24]
  42000c:	ldr	x0, [x0]
  420010:	lsl	x0, x0, #3
  420014:	mov	x1, x0
  420018:	mov	x0, x2
  42001c:	bl	4029e0 <realloc@plt>
  420020:	str	x0, [sp, #32]
  420024:	ldr	x0, [sp, #32]
  420028:	cmp	x0, #0x0
  42002c:	cset	w0, eq  // eq = none
  420030:	and	w0, w0, #0xff
  420034:	and	x0, x0, #0xff
  420038:	cmp	x0, #0x0
  42003c:	b.eq	420048 <_obstack_memory_used@@Base+0x3e68>  // b.none
  420040:	mov	w0, #0x0                   	// #0
  420044:	b	420178 <_obstack_memory_used@@Base+0x3f98>
  420048:	ldr	x0, [sp, #24]
  42004c:	ldr	x1, [sp, #32]
  420050:	str	x1, [x0, #16]
  420054:	ldr	x0, [sp, #24]
  420058:	ldr	x0, [x0, #16]
  42005c:	ldr	x0, [x0]
  420060:	ldr	x1, [sp, #16]
  420064:	cmp	x1, x0
  420068:	b.ge	4200cc <_obstack_memory_used@@Base+0x3eec>  // b.tcont
  42006c:	ldr	x0, [sp, #24]
  420070:	ldr	x0, [x0, #8]
  420074:	str	x0, [sp, #40]
  420078:	b	4200bc <_obstack_memory_used@@Base+0x3edc>
  42007c:	ldr	x0, [sp, #24]
  420080:	ldr	x1, [x0, #16]
  420084:	ldr	x0, [sp, #40]
  420088:	lsl	x0, x0, #3
  42008c:	sub	x0, x0, #0x8
  420090:	add	x1, x1, x0
  420094:	ldr	x0, [sp, #24]
  420098:	ldr	x2, [x0, #16]
  42009c:	ldr	x0, [sp, #40]
  4200a0:	lsl	x0, x0, #3
  4200a4:	add	x0, x2, x0
  4200a8:	ldr	x1, [x1]
  4200ac:	str	x1, [x0]
  4200b0:	ldr	x0, [sp, #40]
  4200b4:	sub	x0, x0, #0x1
  4200b8:	str	x0, [sp, #40]
  4200bc:	ldr	x0, [sp, #40]
  4200c0:	cmp	x0, #0x0
  4200c4:	b.gt	42007c <_obstack_memory_used@@Base+0x3e9c>
  4200c8:	b	420144 <_obstack_memory_used@@Base+0x3f64>
  4200cc:	ldr	x0, [sp, #24]
  4200d0:	ldr	x0, [x0, #8]
  4200d4:	str	x0, [sp, #40]
  4200d8:	b	42011c <_obstack_memory_used@@Base+0x3f3c>
  4200dc:	ldr	x0, [sp, #24]
  4200e0:	ldr	x1, [x0, #16]
  4200e4:	ldr	x0, [sp, #40]
  4200e8:	lsl	x0, x0, #3
  4200ec:	sub	x0, x0, #0x8
  4200f0:	add	x1, x1, x0
  4200f4:	ldr	x0, [sp, #24]
  4200f8:	ldr	x2, [x0, #16]
  4200fc:	ldr	x0, [sp, #40]
  420100:	lsl	x0, x0, #3
  420104:	add	x0, x2, x0
  420108:	ldr	x1, [x1]
  42010c:	str	x1, [x0]
  420110:	ldr	x0, [sp, #40]
  420114:	sub	x0, x0, #0x1
  420118:	str	x0, [sp, #40]
  42011c:	ldr	x0, [sp, #24]
  420120:	ldr	x1, [x0, #16]
  420124:	ldr	x0, [sp, #40]
  420128:	lsl	x0, x0, #3
  42012c:	sub	x0, x0, #0x8
  420130:	add	x0, x1, x0
  420134:	ldr	x0, [x0]
  420138:	ldr	x1, [sp, #16]
  42013c:	cmp	x1, x0
  420140:	b.lt	4200dc <_obstack_memory_used@@Base+0x3efc>  // b.tstop
  420144:	ldr	x0, [sp, #24]
  420148:	ldr	x1, [x0, #16]
  42014c:	ldr	x0, [sp, #40]
  420150:	lsl	x0, x0, #3
  420154:	add	x0, x1, x0
  420158:	ldr	x1, [sp, #16]
  42015c:	str	x1, [x0]
  420160:	ldr	x0, [sp, #24]
  420164:	ldr	x0, [x0, #8]
  420168:	add	x1, x0, #0x1
  42016c:	ldr	x0, [sp, #24]
  420170:	str	x1, [x0, #8]
  420174:	mov	w0, #0x1                   	// #1
  420178:	ldp	x29, x30, [sp], #48
  42017c:	ret
  420180:	stp	x29, x30, [sp, #-48]!
  420184:	mov	x29, sp
  420188:	str	x0, [sp, #24]
  42018c:	str	x1, [sp, #16]
  420190:	ldr	x0, [sp, #24]
  420194:	ldr	x1, [x0]
  420198:	ldr	x0, [sp, #24]
  42019c:	ldr	x0, [x0, #8]
  4201a0:	cmp	x1, x0
  4201a4:	b.ne	420214 <_obstack_memory_used@@Base+0x4034>  // b.any
  4201a8:	ldr	x0, [sp, #24]
  4201ac:	ldr	x0, [x0]
  4201b0:	add	x0, x0, #0x1
  4201b4:	lsl	x1, x0, #1
  4201b8:	ldr	x0, [sp, #24]
  4201bc:	str	x1, [x0]
  4201c0:	ldr	x0, [sp, #24]
  4201c4:	ldr	x2, [x0, #16]
  4201c8:	ldr	x0, [sp, #24]
  4201cc:	ldr	x0, [x0]
  4201d0:	lsl	x0, x0, #3
  4201d4:	mov	x1, x0
  4201d8:	mov	x0, x2
  4201dc:	bl	4029e0 <realloc@plt>
  4201e0:	str	x0, [sp, #40]
  4201e4:	ldr	x0, [sp, #40]
  4201e8:	cmp	x0, #0x0
  4201ec:	cset	w0, eq  // eq = none
  4201f0:	and	w0, w0, #0xff
  4201f4:	and	x0, x0, #0xff
  4201f8:	cmp	x0, #0x0
  4201fc:	b.eq	420208 <_obstack_memory_used@@Base+0x4028>  // b.none
  420200:	mov	w0, #0x0                   	// #0
  420204:	b	420244 <_obstack_memory_used@@Base+0x4064>
  420208:	ldr	x0, [sp, #24]
  42020c:	ldr	x1, [sp, #40]
  420210:	str	x1, [x0, #16]
  420214:	ldr	x0, [sp, #24]
  420218:	ldr	x1, [x0, #16]
  42021c:	ldr	x0, [sp, #24]
  420220:	ldr	x0, [x0, #8]
  420224:	add	x3, x0, #0x1
  420228:	ldr	x2, [sp, #24]
  42022c:	str	x3, [x2, #8]
  420230:	lsl	x0, x0, #3
  420234:	add	x0, x1, x0
  420238:	ldr	x1, [sp, #16]
  42023c:	str	x1, [x0]
  420240:	mov	w0, #0x1                   	// #1
  420244:	ldp	x29, x30, [sp], #48
  420248:	ret
  42024c:	sub	sp, sp, #0x20
  420250:	str	x0, [sp, #8]
  420254:	str	x1, [sp]
  420258:	ldr	x0, [sp, #8]
  42025c:	cmp	x0, #0x0
  420260:	b.eq	420288 <_obstack_memory_used@@Base+0x40a8>  // b.none
  420264:	ldr	x0, [sp]
  420268:	cmp	x0, #0x0
  42026c:	b.eq	420288 <_obstack_memory_used@@Base+0x40a8>  // b.none
  420270:	ldr	x0, [sp, #8]
  420274:	ldr	x1, [x0, #8]
  420278:	ldr	x0, [sp]
  42027c:	ldr	x0, [x0, #8]
  420280:	cmp	x1, x0
  420284:	b.eq	420290 <_obstack_memory_used@@Base+0x40b0>  // b.none
  420288:	mov	w0, #0x0                   	// #0
  42028c:	b	4202fc <_obstack_memory_used@@Base+0x411c>
  420290:	ldr	x0, [sp, #8]
  420294:	ldr	x0, [x0, #8]
  420298:	str	x0, [sp, #24]
  42029c:	b	4202e0 <_obstack_memory_used@@Base+0x4100>
  4202a0:	ldr	x0, [sp, #8]
  4202a4:	ldr	x1, [x0, #16]
  4202a8:	ldr	x0, [sp, #24]
  4202ac:	lsl	x0, x0, #3
  4202b0:	add	x0, x1, x0
  4202b4:	ldr	x1, [x0]
  4202b8:	ldr	x0, [sp]
  4202bc:	ldr	x2, [x0, #16]
  4202c0:	ldr	x0, [sp, #24]
  4202c4:	lsl	x0, x0, #3
  4202c8:	add	x0, x2, x0
  4202cc:	ldr	x0, [x0]
  4202d0:	cmp	x1, x0
  4202d4:	b.eq	4202e0 <_obstack_memory_used@@Base+0x4100>  // b.none
  4202d8:	mov	w0, #0x0                   	// #0
  4202dc:	b	4202fc <_obstack_memory_used@@Base+0x411c>
  4202e0:	ldr	x0, [sp, #24]
  4202e4:	sub	x0, x0, #0x1
  4202e8:	str	x0, [sp, #24]
  4202ec:	ldr	x0, [sp, #24]
  4202f0:	cmp	x0, #0x0
  4202f4:	b.ge	4202a0 <_obstack_memory_used@@Base+0x40c0>  // b.tcont
  4202f8:	mov	w0, #0x1                   	// #1
  4202fc:	add	sp, sp, #0x20
  420300:	ret
  420304:	sub	sp, sp, #0x30
  420308:	str	x0, [sp, #8]
  42030c:	str	x1, [sp]
  420310:	ldr	x0, [sp, #8]
  420314:	ldr	x0, [x0, #8]
  420318:	cmp	x0, #0x0
  42031c:	b.gt	420328 <_obstack_memory_used@@Base+0x4148>
  420320:	mov	x0, #0x0                   	// #0
  420324:	b	4203d4 <_obstack_memory_used@@Base+0x41f4>
  420328:	str	xzr, [sp, #40]
  42032c:	ldr	x0, [sp, #8]
  420330:	ldr	x0, [x0, #8]
  420334:	sub	x0, x0, #0x1
  420338:	str	x0, [sp, #32]
  42033c:	b	420390 <_obstack_memory_used@@Base+0x41b0>
  420340:	ldr	x1, [sp, #40]
  420344:	ldr	x0, [sp, #32]
  420348:	add	x0, x1, x0
  42034c:	lsr	x0, x0, #1
  420350:	str	x0, [sp, #24]
  420354:	ldr	x0, [sp, #8]
  420358:	ldr	x1, [x0, #16]
  42035c:	ldr	x0, [sp, #24]
  420360:	lsl	x0, x0, #3
  420364:	add	x0, x1, x0
  420368:	ldr	x0, [x0]
  42036c:	ldr	x1, [sp]
  420370:	cmp	x1, x0
  420374:	b.le	420388 <_obstack_memory_used@@Base+0x41a8>
  420378:	ldr	x0, [sp, #24]
  42037c:	add	x0, x0, #0x1
  420380:	str	x0, [sp, #40]
  420384:	b	420390 <_obstack_memory_used@@Base+0x41b0>
  420388:	ldr	x0, [sp, #24]
  42038c:	str	x0, [sp, #32]
  420390:	ldr	x1, [sp, #40]
  420394:	ldr	x0, [sp, #32]
  420398:	cmp	x1, x0
  42039c:	b.cc	420340 <_obstack_memory_used@@Base+0x4160>  // b.lo, b.ul, b.last
  4203a0:	ldr	x0, [sp, #8]
  4203a4:	ldr	x1, [x0, #16]
  4203a8:	ldr	x0, [sp, #40]
  4203ac:	lsl	x0, x0, #3
  4203b0:	add	x0, x1, x0
  4203b4:	ldr	x0, [x0]
  4203b8:	ldr	x1, [sp]
  4203bc:	cmp	x1, x0
  4203c0:	b.ne	4203d0 <_obstack_memory_used@@Base+0x41f0>  // b.any
  4203c4:	ldr	x0, [sp, #40]
  4203c8:	add	x0, x0, #0x1
  4203cc:	b	4203d4 <_obstack_memory_used@@Base+0x41f4>
  4203d0:	mov	x0, #0x0                   	// #0
  4203d4:	add	sp, sp, #0x30
  4203d8:	ret
  4203dc:	sub	sp, sp, #0x10
  4203e0:	str	x0, [sp, #8]
  4203e4:	str	x1, [sp]
  4203e8:	ldr	x0, [sp]
  4203ec:	cmp	x0, #0x0
  4203f0:	b.lt	420478 <_obstack_memory_used@@Base+0x4298>  // b.tstop
  4203f4:	ldr	x0, [sp, #8]
  4203f8:	ldr	x0, [x0, #8]
  4203fc:	ldr	x1, [sp]
  420400:	cmp	x1, x0
  420404:	b.ge	420478 <_obstack_memory_used@@Base+0x4298>  // b.tcont
  420408:	ldr	x0, [sp, #8]
  42040c:	ldr	x0, [x0, #8]
  420410:	sub	x1, x0, #0x1
  420414:	ldr	x0, [sp, #8]
  420418:	str	x1, [x0, #8]
  42041c:	b	420460 <_obstack_memory_used@@Base+0x4280>
  420420:	ldr	x0, [sp, #8]
  420424:	ldr	x1, [x0, #16]
  420428:	ldr	x0, [sp]
  42042c:	add	x0, x0, #0x1
  420430:	lsl	x0, x0, #3
  420434:	add	x1, x1, x0
  420438:	ldr	x0, [sp, #8]
  42043c:	ldr	x2, [x0, #16]
  420440:	ldr	x0, [sp]
  420444:	lsl	x0, x0, #3
  420448:	add	x0, x2, x0
  42044c:	ldr	x1, [x1]
  420450:	str	x1, [x0]
  420454:	ldr	x0, [sp]
  420458:	add	x0, x0, #0x1
  42045c:	str	x0, [sp]
  420460:	ldr	x0, [sp, #8]
  420464:	ldr	x0, [x0, #8]
  420468:	ldr	x1, [sp]
  42046c:	cmp	x1, x0
  420470:	b.lt	420420 <_obstack_memory_used@@Base+0x4240>  // b.tstop
  420474:	b	42047c <_obstack_memory_used@@Base+0x429c>
  420478:	nop
  42047c:	add	sp, sp, #0x10
  420480:	ret
  420484:	stp	x29, x30, [sp, #-112]!
  420488:	mov	x29, sp
  42048c:	str	x0, [sp, #40]
  420490:	stp	x1, x2, [sp, #24]
  420494:	ldr	x0, [sp, #40]
  420498:	ldr	x1, [x0, #16]
  42049c:	ldr	x0, [sp, #40]
  4204a0:	ldr	x0, [x0, #8]
  4204a4:	cmp	x1, x0
  4204a8:	cset	w0, cs  // cs = hs, nlast
  4204ac:	and	w0, w0, #0xff
  4204b0:	and	x0, x0, #0xff
  4204b4:	cmp	x0, #0x0
  4204b8:	b.eq	420704 <_obstack_memory_used@@Base+0x4524>  // b.none
  4204bc:	ldr	x0, [sp, #40]
  4204c0:	ldr	x0, [x0, #8]
  4204c4:	lsl	x0, x0, #1
  4204c8:	str	x0, [sp, #104]
  4204cc:	mov	x0, #0x18                  	// #24
  4204d0:	str	x0, [sp, #96]
  4204d4:	mov	x1, #0xffffffffffffffff    	// #-1
  4204d8:	ldr	x0, [sp, #96]
  4204dc:	udiv	x0, x1, x0
  4204e0:	cmp	x0, #0x0
  4204e4:	b.lt	4204f8 <_obstack_memory_used@@Base+0x4318>  // b.tstop
  4204e8:	mov	x1, #0xffffffffffffffff    	// #-1
  4204ec:	ldr	x0, [sp, #96]
  4204f0:	udiv	x0, x1, x0
  4204f4:	b	4204fc <_obstack_memory_used@@Base+0x431c>
  4204f8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4204fc:	ldr	x1, [sp, #104]
  420500:	cmp	x0, x1
  420504:	cset	w0, cc  // cc = lo, ul, last
  420508:	and	w0, w0, #0xff
  42050c:	and	x0, x0, #0xff
  420510:	cmp	x0, #0x0
  420514:	b.eq	420520 <_obstack_memory_used@@Base+0x4340>  // b.none
  420518:	mov	x0, #0xffffffffffffffff    	// #-1
  42051c:	b	420840 <_obstack_memory_used@@Base+0x4660>
  420520:	ldr	x0, [sp, #40]
  420524:	ldr	x2, [x0]
  420528:	ldr	x0, [sp, #104]
  42052c:	lsl	x0, x0, #4
  420530:	mov	x1, x0
  420534:	mov	x0, x2
  420538:	bl	4029e0 <realloc@plt>
  42053c:	str	x0, [sp, #88]
  420540:	ldr	x0, [sp, #88]
  420544:	cmp	x0, #0x0
  420548:	cset	w0, eq  // eq = none
  42054c:	and	w0, w0, #0xff
  420550:	and	x0, x0, #0xff
  420554:	cmp	x0, #0x0
  420558:	b.eq	420564 <_obstack_memory_used@@Base+0x4384>  // b.none
  42055c:	mov	x0, #0xffffffffffffffff    	// #-1
  420560:	b	420840 <_obstack_memory_used@@Base+0x4660>
  420564:	ldr	x0, [sp, #40]
  420568:	ldr	x1, [sp, #88]
  42056c:	str	x1, [x0]
  420570:	ldr	x0, [sp, #40]
  420574:	ldr	x2, [x0, #24]
  420578:	ldr	x0, [sp, #104]
  42057c:	lsl	x0, x0, #3
  420580:	mov	x1, x0
  420584:	mov	x0, x2
  420588:	bl	4029e0 <realloc@plt>
  42058c:	str	x0, [sp, #80]
  420590:	ldr	x0, [sp, #40]
  420594:	ldr	x2, [x0, #32]
  420598:	ldr	x0, [sp, #104]
  42059c:	lsl	x0, x0, #3
  4205a0:	mov	x1, x0
  4205a4:	mov	x0, x2
  4205a8:	bl	4029e0 <realloc@plt>
  4205ac:	str	x0, [sp, #72]
  4205b0:	ldr	x0, [sp, #40]
  4205b4:	ldr	x2, [x0, #40]
  4205b8:	ldr	x1, [sp, #104]
  4205bc:	mov	x0, x1
  4205c0:	lsl	x0, x0, #1
  4205c4:	add	x0, x0, x1
  4205c8:	lsl	x0, x0, #3
  4205cc:	mov	x1, x0
  4205d0:	mov	x0, x2
  4205d4:	bl	4029e0 <realloc@plt>
  4205d8:	str	x0, [sp, #64]
  4205dc:	ldr	x0, [sp, #40]
  4205e0:	ldr	x2, [x0, #48]
  4205e4:	ldr	x1, [sp, #104]
  4205e8:	mov	x0, x1
  4205ec:	lsl	x0, x0, #1
  4205f0:	add	x0, x0, x1
  4205f4:	lsl	x0, x0, #3
  4205f8:	mov	x1, x0
  4205fc:	mov	x0, x2
  420600:	bl	4029e0 <realloc@plt>
  420604:	str	x0, [sp, #56]
  420608:	ldr	x0, [sp, #80]
  42060c:	cmp	x0, #0x0
  420610:	cset	w0, eq  // eq = none
  420614:	and	w0, w0, #0xff
  420618:	and	x0, x0, #0xff
  42061c:	cmp	x0, #0x0
  420620:	b.ne	420640 <_obstack_memory_used@@Base+0x4460>  // b.any
  420624:	ldr	x0, [sp, #72]
  420628:	cmp	x0, #0x0
  42062c:	cset	w0, eq  // eq = none
  420630:	and	w0, w0, #0xff
  420634:	and	x0, x0, #0xff
  420638:	cmp	x0, #0x0
  42063c:	b.eq	420648 <_obstack_memory_used@@Base+0x4468>  // b.none
  420640:	mov	w0, #0x1                   	// #1
  420644:	b	42064c <_obstack_memory_used@@Base+0x446c>
  420648:	mov	w0, #0x0                   	// #0
  42064c:	cmp	w0, #0x0
  420650:	b.ne	420670 <_obstack_memory_used@@Base+0x4490>  // b.any
  420654:	ldr	x0, [sp, #64]
  420658:	cmp	x0, #0x0
  42065c:	cset	w0, eq  // eq = none
  420660:	and	w0, w0, #0xff
  420664:	and	x0, x0, #0xff
  420668:	cmp	x0, #0x0
  42066c:	b.eq	420678 <_obstack_memory_used@@Base+0x4498>  // b.none
  420670:	mov	w0, #0x1                   	// #1
  420674:	b	42067c <_obstack_memory_used@@Base+0x449c>
  420678:	mov	w0, #0x0                   	// #0
  42067c:	cmp	w0, #0x0
  420680:	b.ne	4206a0 <_obstack_memory_used@@Base+0x44c0>  // b.any
  420684:	ldr	x0, [sp, #56]
  420688:	cmp	x0, #0x0
  42068c:	cset	w0, eq  // eq = none
  420690:	and	w0, w0, #0xff
  420694:	and	x0, x0, #0xff
  420698:	cmp	x0, #0x0
  42069c:	b.eq	4206c8 <_obstack_memory_used@@Base+0x44e8>  // b.none
  4206a0:	ldr	x0, [sp, #80]
  4206a4:	bl	402b60 <free@plt>
  4206a8:	ldr	x0, [sp, #72]
  4206ac:	bl	402b60 <free@plt>
  4206b0:	ldr	x0, [sp, #64]
  4206b4:	bl	402b60 <free@plt>
  4206b8:	ldr	x0, [sp, #56]
  4206bc:	bl	402b60 <free@plt>
  4206c0:	mov	x0, #0xffffffffffffffff    	// #-1
  4206c4:	b	420840 <_obstack_memory_used@@Base+0x4660>
  4206c8:	ldr	x0, [sp, #40]
  4206cc:	ldr	x1, [sp, #80]
  4206d0:	str	x1, [x0, #24]
  4206d4:	ldr	x0, [sp, #40]
  4206d8:	ldr	x1, [sp, #72]
  4206dc:	str	x1, [x0, #32]
  4206e0:	ldr	x0, [sp, #40]
  4206e4:	ldr	x1, [sp, #64]
  4206e8:	str	x1, [x0, #40]
  4206ec:	ldr	x0, [sp, #40]
  4206f0:	ldr	x1, [sp, #56]
  4206f4:	str	x1, [x0, #48]
  4206f8:	ldr	x0, [sp, #40]
  4206fc:	ldr	x1, [sp, #104]
  420700:	str	x1, [x0, #8]
  420704:	ldr	x0, [sp, #40]
  420708:	ldr	x1, [x0]
  42070c:	ldr	x0, [sp, #40]
  420710:	ldr	x0, [x0, #16]
  420714:	lsl	x0, x0, #4
  420718:	add	x2, x1, x0
  42071c:	ldp	x0, x1, [sp, #24]
  420720:	stp	x0, x1, [x2]
  420724:	ldr	x0, [sp, #40]
  420728:	ldr	x1, [x0]
  42072c:	ldr	x0, [sp, #40]
  420730:	ldr	x0, [x0, #16]
  420734:	lsl	x0, x0, #4
  420738:	add	x0, x1, x0
  42073c:	ldr	w1, [x0, #8]
  420740:	and	w1, w1, #0xfffc00ff
  420744:	str	w1, [x0, #8]
  420748:	ldrb	w0, [sp, #32]
  42074c:	cmp	w0, #0x5
  420750:	b.ne	420764 <_obstack_memory_used@@Base+0x4584>  // b.any
  420754:	ldr	x0, [sp, #40]
  420758:	ldr	w0, [x0, #180]
  42075c:	cmp	w0, #0x1
  420760:	b.gt	420770 <_obstack_memory_used@@Base+0x4590>
  420764:	ldrb	w0, [sp, #32]
  420768:	cmp	w0, #0x6
  42076c:	b.ne	420778 <_obstack_memory_used@@Base+0x4598>  // b.any
  420770:	mov	w2, #0x1                   	// #1
  420774:	b	42077c <_obstack_memory_used@@Base+0x459c>
  420778:	mov	w2, #0x0                   	// #0
  42077c:	ldr	x0, [sp, #40]
  420780:	ldr	x1, [x0]
  420784:	ldr	x0, [sp, #40]
  420788:	ldr	x0, [x0, #16]
  42078c:	lsl	x0, x0, #4
  420790:	add	x1, x1, x0
  420794:	mov	w0, w2
  420798:	and	w0, w0, #0x1
  42079c:	and	w2, w0, #0xff
  4207a0:	ldrb	w0, [x1, #10]
  4207a4:	bfi	w0, w2, #4, #1
  4207a8:	strb	w0, [x1, #10]
  4207ac:	ldr	x0, [sp, #40]
  4207b0:	ldr	x1, [x0, #24]
  4207b4:	ldr	x0, [sp, #40]
  4207b8:	ldr	x0, [x0, #16]
  4207bc:	lsl	x0, x0, #3
  4207c0:	add	x0, x1, x0
  4207c4:	mov	x1, #0xffffffffffffffff    	// #-1
  4207c8:	str	x1, [x0]
  4207cc:	ldr	x0, [sp, #40]
  4207d0:	ldr	x2, [x0, #40]
  4207d4:	ldr	x0, [sp, #40]
  4207d8:	ldr	x1, [x0, #16]
  4207dc:	mov	x0, x1
  4207e0:	lsl	x0, x0, #1
  4207e4:	add	x0, x0, x1
  4207e8:	lsl	x0, x0, #3
  4207ec:	add	x0, x2, x0
  4207f0:	mov	x2, #0x18                  	// #24
  4207f4:	mov	w1, #0x0                   	// #0
  4207f8:	bl	402980 <memset@plt>
  4207fc:	ldr	x0, [sp, #40]
  420800:	ldr	x2, [x0, #48]
  420804:	ldr	x0, [sp, #40]
  420808:	ldr	x1, [x0, #16]
  42080c:	mov	x0, x1
  420810:	lsl	x0, x0, #1
  420814:	add	x0, x0, x1
  420818:	lsl	x0, x0, #3
  42081c:	add	x0, x2, x0
  420820:	mov	x2, #0x18                  	// #24
  420824:	mov	w1, #0x0                   	// #0
  420828:	bl	402980 <memset@plt>
  42082c:	ldr	x0, [sp, #40]
  420830:	ldr	x0, [x0, #16]
  420834:	add	x2, x0, #0x1
  420838:	ldr	x1, [sp, #40]
  42083c:	str	x2, [x1, #16]
  420840:	ldp	x29, x30, [sp], #112
  420844:	ret
  420848:	sub	sp, sp, #0x20
  42084c:	str	x0, [sp, #8]
  420850:	str	w1, [sp, #4]
  420854:	ldr	x0, [sp, #8]
  420858:	ldr	x1, [x0, #8]
  42085c:	ldr	w0, [sp, #4]
  420860:	add	x0, x1, x0
  420864:	str	x0, [sp, #24]
  420868:	str	xzr, [sp, #16]
  42086c:	b	4208a4 <_obstack_memory_used@@Base+0x46c4>
  420870:	ldr	x0, [sp, #8]
  420874:	ldr	x1, [x0, #16]
  420878:	ldr	x0, [sp, #16]
  42087c:	lsl	x0, x0, #3
  420880:	add	x0, x1, x0
  420884:	ldr	x0, [x0]
  420888:	mov	x1, x0
  42088c:	ldr	x0, [sp, #24]
  420890:	add	x0, x0, x1
  420894:	str	x0, [sp, #24]
  420898:	ldr	x0, [sp, #16]
  42089c:	add	x0, x0, #0x1
  4208a0:	str	x0, [sp, #16]
  4208a4:	ldr	x0, [sp, #8]
  4208a8:	ldr	x0, [x0, #8]
  4208ac:	ldr	x1, [sp, #16]
  4208b0:	cmp	x1, x0
  4208b4:	b.lt	420870 <_obstack_memory_used@@Base+0x4690>  // b.tstop
  4208b8:	ldr	x0, [sp, #24]
  4208bc:	add	sp, sp, #0x20
  4208c0:	ret
  4208c4:	stp	x29, x30, [sp, #-96]!
  4208c8:	mov	x29, sp
  4208cc:	str	x0, [sp, #40]
  4208d0:	str	x1, [sp, #32]
  4208d4:	str	x2, [sp, #24]
  4208d8:	ldr	x0, [sp, #24]
  4208dc:	ldr	x0, [x0, #8]
  4208e0:	cmp	x0, #0x0
  4208e4:	cset	w0, eq  // eq = none
  4208e8:	and	w0, w0, #0xff
  4208ec:	and	x0, x0, #0xff
  4208f0:	cmp	x0, #0x0
  4208f4:	b.eq	420908 <_obstack_memory_used@@Base+0x4728>  // b.none
  4208f8:	ldr	x0, [sp, #40]
  4208fc:	str	wzr, [x0]
  420900:	mov	x0, #0x0                   	// #0
  420904:	b	420a08 <_obstack_memory_used@@Base+0x4828>
  420908:	mov	w1, #0x0                   	// #0
  42090c:	ldr	x0, [sp, #24]
  420910:	bl	420848 <_obstack_memory_used@@Base+0x4668>
  420914:	str	x0, [sp, #80]
  420918:	ldr	x0, [sp, #32]
  42091c:	ldr	x2, [x0, #64]
  420920:	ldr	x0, [sp, #32]
  420924:	ldr	x1, [x0, #136]
  420928:	ldr	x0, [sp, #80]
  42092c:	and	x1, x1, x0
  420930:	mov	x0, x1
  420934:	lsl	x0, x0, #1
  420938:	add	x0, x0, x1
  42093c:	lsl	x0, x0, #3
  420940:	add	x0, x2, x0
  420944:	str	x0, [sp, #72]
  420948:	str	xzr, [sp, #88]
  42094c:	b	4209b4 <_obstack_memory_used@@Base+0x47d4>
  420950:	ldr	x0, [sp, #72]
  420954:	ldr	x1, [x0, #16]
  420958:	ldr	x0, [sp, #88]
  42095c:	lsl	x0, x0, #3
  420960:	add	x0, x1, x0
  420964:	ldr	x0, [x0]
  420968:	str	x0, [sp, #56]
  42096c:	ldr	x0, [sp, #56]
  420970:	ldr	x0, [x0]
  420974:	ldr	x1, [sp, #80]
  420978:	cmp	x1, x0
  42097c:	b.ne	4209a4 <_obstack_memory_used@@Base+0x47c4>  // b.any
  420980:	ldr	x0, [sp, #56]
  420984:	add	x0, x0, #0x8
  420988:	ldr	x1, [sp, #24]
  42098c:	bl	42024c <_obstack_memory_used@@Base+0x406c>
  420990:	and	w0, w0, #0xff
  420994:	cmp	w0, #0x0
  420998:	b.eq	4209a8 <_obstack_memory_used@@Base+0x47c8>  // b.none
  42099c:	ldr	x0, [sp, #56]
  4209a0:	b	420a08 <_obstack_memory_used@@Base+0x4828>
  4209a4:	nop
  4209a8:	ldr	x0, [sp, #88]
  4209ac:	add	x0, x0, #0x1
  4209b0:	str	x0, [sp, #88]
  4209b4:	ldr	x0, [sp, #72]
  4209b8:	ldr	x0, [x0]
  4209bc:	ldr	x1, [sp, #88]
  4209c0:	cmp	x1, x0
  4209c4:	b.lt	420950 <_obstack_memory_used@@Base+0x4770>  // b.tstop
  4209c8:	ldr	x2, [sp, #80]
  4209cc:	ldr	x1, [sp, #24]
  4209d0:	ldr	x0, [sp, #32]
  4209d4:	bl	420df8 <_obstack_memory_used@@Base+0x4c18>
  4209d8:	str	x0, [sp, #64]
  4209dc:	ldr	x0, [sp, #64]
  4209e0:	cmp	x0, #0x0
  4209e4:	cset	w0, eq  // eq = none
  4209e8:	and	w0, w0, #0xff
  4209ec:	and	x0, x0, #0xff
  4209f0:	cmp	x0, #0x0
  4209f4:	b.eq	420a04 <_obstack_memory_used@@Base+0x4824>  // b.none
  4209f8:	ldr	x0, [sp, #40]
  4209fc:	mov	w1, #0xc                   	// #12
  420a00:	str	w1, [x0]
  420a04:	ldr	x0, [sp, #64]
  420a08:	ldp	x29, x30, [sp], #96
  420a0c:	ret
  420a10:	stp	x29, x30, [sp, #-96]!
  420a14:	mov	x29, sp
  420a18:	str	x0, [sp, #40]
  420a1c:	str	x1, [sp, #32]
  420a20:	str	x2, [sp, #24]
  420a24:	str	w3, [sp, #20]
  420a28:	ldr	x0, [sp, #24]
  420a2c:	ldr	x0, [x0, #8]
  420a30:	cmp	x0, #0x0
  420a34:	b.ne	420a48 <_obstack_memory_used@@Base+0x4868>  // b.any
  420a38:	ldr	x0, [sp, #40]
  420a3c:	str	wzr, [x0]
  420a40:	mov	x0, #0x0                   	// #0
  420a44:	b	420b68 <_obstack_memory_used@@Base+0x4988>
  420a48:	ldr	w1, [sp, #20]
  420a4c:	ldr	x0, [sp, #24]
  420a50:	bl	420848 <_obstack_memory_used@@Base+0x4668>
  420a54:	str	x0, [sp, #80]
  420a58:	ldr	x0, [sp, #32]
  420a5c:	ldr	x2, [x0, #64]
  420a60:	ldr	x0, [sp, #32]
  420a64:	ldr	x1, [x0, #136]
  420a68:	ldr	x0, [sp, #80]
  420a6c:	and	x1, x1, x0
  420a70:	mov	x0, x1
  420a74:	lsl	x0, x0, #1
  420a78:	add	x0, x0, x1
  420a7c:	lsl	x0, x0, #3
  420a80:	add	x0, x2, x0
  420a84:	str	x0, [sp, #72]
  420a88:	str	xzr, [sp, #88]
  420a8c:	b	420b10 <_obstack_memory_used@@Base+0x4930>
  420a90:	ldr	x0, [sp, #72]
  420a94:	ldr	x1, [x0, #16]
  420a98:	ldr	x0, [sp, #88]
  420a9c:	lsl	x0, x0, #3
  420aa0:	add	x0, x1, x0
  420aa4:	ldr	x0, [x0]
  420aa8:	str	x0, [sp, #56]
  420aac:	ldr	x0, [sp, #56]
  420ab0:	ldr	x0, [x0]
  420ab4:	ldr	x1, [sp, #80]
  420ab8:	cmp	x1, x0
  420abc:	b.ne	420b04 <_obstack_memory_used@@Base+0x4924>  // b.any
  420ac0:	ldr	x0, [sp, #56]
  420ac4:	ldrb	w0, [x0, #104]
  420ac8:	ubfx	x0, x0, #0, #4
  420acc:	and	w0, w0, #0xff
  420ad0:	mov	w1, w0
  420ad4:	ldr	w0, [sp, #20]
  420ad8:	cmp	w0, w1
  420adc:	b.ne	420b04 <_obstack_memory_used@@Base+0x4924>  // b.any
  420ae0:	ldr	x0, [sp, #56]
  420ae4:	ldr	x0, [x0, #80]
  420ae8:	ldr	x1, [sp, #24]
  420aec:	bl	42024c <_obstack_memory_used@@Base+0x406c>
  420af0:	and	w0, w0, #0xff
  420af4:	cmp	w0, #0x0
  420af8:	b.eq	420b04 <_obstack_memory_used@@Base+0x4924>  // b.none
  420afc:	ldr	x0, [sp, #56]
  420b00:	b	420b68 <_obstack_memory_used@@Base+0x4988>
  420b04:	ldr	x0, [sp, #88]
  420b08:	add	x0, x0, #0x1
  420b0c:	str	x0, [sp, #88]
  420b10:	ldr	x0, [sp, #72]
  420b14:	ldr	x0, [x0]
  420b18:	ldr	x1, [sp, #88]
  420b1c:	cmp	x1, x0
  420b20:	b.lt	420a90 <_obstack_memory_used@@Base+0x48b0>  // b.tstop
  420b24:	ldr	x3, [sp, #80]
  420b28:	ldr	w2, [sp, #20]
  420b2c:	ldr	x1, [sp, #24]
  420b30:	ldr	x0, [sp, #32]
  420b34:	bl	421008 <_obstack_memory_used@@Base+0x4e28>
  420b38:	str	x0, [sp, #64]
  420b3c:	ldr	x0, [sp, #64]
  420b40:	cmp	x0, #0x0
  420b44:	cset	w0, eq  // eq = none
  420b48:	and	w0, w0, #0xff
  420b4c:	and	x0, x0, #0xff
  420b50:	cmp	x0, #0x0
  420b54:	b.eq	420b64 <_obstack_memory_used@@Base+0x4984>  // b.none
  420b58:	ldr	x0, [sp, #40]
  420b5c:	mov	w1, #0xc                   	// #12
  420b60:	str	w1, [x0]
  420b64:	ldr	x0, [sp, #64]
  420b68:	ldp	x29, x30, [sp], #96
  420b6c:	ret
  420b70:	stp	x29, x30, [sp, #-96]!
  420b74:	mov	x29, sp
  420b78:	str	x0, [sp, #40]
  420b7c:	str	x1, [sp, #32]
  420b80:	str	x2, [sp, #24]
  420b84:	ldr	x0, [sp, #32]
  420b88:	ldr	x1, [sp, #24]
  420b8c:	str	x1, [x0]
  420b90:	ldr	x0, [sp, #32]
  420b94:	add	x2, x0, #0x20
  420b98:	ldr	x0, [sp, #32]
  420b9c:	ldr	x0, [x0, #16]
  420ba0:	mov	x1, x0
  420ba4:	mov	x0, x2
  420ba8:	bl	41f010 <_obstack_memory_used@@Base+0x2e30>
  420bac:	str	w0, [sp, #84]
  420bb0:	ldr	w0, [sp, #84]
  420bb4:	cmp	w0, #0x0
  420bb8:	cset	w0, ne  // ne = any
  420bbc:	and	w0, w0, #0xff
  420bc0:	and	x0, x0, #0xff
  420bc4:	cmp	x0, #0x0
  420bc8:	b.eq	420bd4 <_obstack_memory_used@@Base+0x49f4>  // b.none
  420bcc:	mov	w0, #0xc                   	// #12
  420bd0:	b	420d60 <_obstack_memory_used@@Base+0x4b80>
  420bd4:	str	xzr, [sp, #88]
  420bd8:	b	420c54 <_obstack_memory_used@@Base+0x4a74>
  420bdc:	ldr	x0, [sp, #32]
  420be0:	ldr	x1, [x0, #24]
  420be4:	ldr	x0, [sp, #88]
  420be8:	lsl	x0, x0, #3
  420bec:	add	x0, x1, x0
  420bf0:	ldr	x0, [x0]
  420bf4:	str	x0, [sp, #48]
  420bf8:	ldr	x0, [sp, #40]
  420bfc:	ldr	x1, [x0]
  420c00:	ldr	x0, [sp, #48]
  420c04:	lsl	x0, x0, #4
  420c08:	add	x0, x1, x0
  420c0c:	ldrb	w0, [x0, #8]
  420c10:	and	w0, w0, #0x8
  420c14:	cmp	w0, #0x0
  420c18:	b.ne	420c48 <_obstack_memory_used@@Base+0x4a68>  // b.any
  420c1c:	ldr	x0, [sp, #32]
  420c20:	add	x0, x0, #0x20
  420c24:	ldr	x1, [sp, #48]
  420c28:	bl	420180 <_obstack_memory_used@@Base+0x3fa0>
  420c2c:	and	w0, w0, #0xff
  420c30:	eor	w0, w0, #0x1
  420c34:	and	w0, w0, #0xff
  420c38:	cmp	w0, #0x0
  420c3c:	b.eq	420c48 <_obstack_memory_used@@Base+0x4a68>  // b.none
  420c40:	mov	w0, #0xc                   	// #12
  420c44:	b	420d60 <_obstack_memory_used@@Base+0x4b80>
  420c48:	ldr	x0, [sp, #88]
  420c4c:	add	x0, x0, #0x1
  420c50:	str	x0, [sp, #88]
  420c54:	ldr	x0, [sp, #32]
  420c58:	ldr	x0, [x0, #16]
  420c5c:	ldr	x1, [sp, #88]
  420c60:	cmp	x1, x0
  420c64:	b.lt	420bdc <_obstack_memory_used@@Base+0x49fc>  // b.tstop
  420c68:	ldr	x0, [sp, #40]
  420c6c:	ldr	x2, [x0, #64]
  420c70:	ldr	x0, [sp, #40]
  420c74:	ldr	x1, [x0, #136]
  420c78:	ldr	x0, [sp, #24]
  420c7c:	and	x1, x1, x0
  420c80:	mov	x0, x1
  420c84:	lsl	x0, x0, #1
  420c88:	add	x0, x0, x1
  420c8c:	lsl	x0, x0, #3
  420c90:	add	x0, x2, x0
  420c94:	str	x0, [sp, #72]
  420c98:	ldr	x0, [sp, #72]
  420c9c:	ldr	x1, [x0, #8]
  420ca0:	ldr	x0, [sp, #72]
  420ca4:	ldr	x0, [x0]
  420ca8:	cmp	x1, x0
  420cac:	cset	w0, le
  420cb0:	and	w0, w0, #0xff
  420cb4:	and	x0, x0, #0xff
  420cb8:	cmp	x0, #0x0
  420cbc:	b.eq	420d30 <_obstack_memory_used@@Base+0x4b50>  // b.none
  420cc0:	ldr	x0, [sp, #72]
  420cc4:	ldr	x0, [x0]
  420cc8:	add	x0, x0, #0x1
  420ccc:	lsl	x0, x0, #1
  420cd0:	str	x0, [sp, #64]
  420cd4:	ldr	x0, [sp, #72]
  420cd8:	ldr	x2, [x0, #16]
  420cdc:	ldr	x0, [sp, #64]
  420ce0:	lsl	x0, x0, #3
  420ce4:	mov	x1, x0
  420ce8:	mov	x0, x2
  420cec:	bl	4029e0 <realloc@plt>
  420cf0:	str	x0, [sp, #56]
  420cf4:	ldr	x0, [sp, #56]
  420cf8:	cmp	x0, #0x0
  420cfc:	cset	w0, eq  // eq = none
  420d00:	and	w0, w0, #0xff
  420d04:	and	x0, x0, #0xff
  420d08:	cmp	x0, #0x0
  420d0c:	b.eq	420d18 <_obstack_memory_used@@Base+0x4b38>  // b.none
  420d10:	mov	w0, #0xc                   	// #12
  420d14:	b	420d60 <_obstack_memory_used@@Base+0x4b80>
  420d18:	ldr	x0, [sp, #72]
  420d1c:	ldr	x1, [sp, #56]
  420d20:	str	x1, [x0, #16]
  420d24:	ldr	x0, [sp, #72]
  420d28:	ldr	x1, [sp, #64]
  420d2c:	str	x1, [x0, #8]
  420d30:	ldr	x0, [sp, #72]
  420d34:	ldr	x1, [x0, #16]
  420d38:	ldr	x0, [sp, #72]
  420d3c:	ldr	x0, [x0]
  420d40:	add	x3, x0, #0x1
  420d44:	ldr	x2, [sp, #72]
  420d48:	str	x3, [x2]
  420d4c:	lsl	x0, x0, #3
  420d50:	add	x0, x1, x0
  420d54:	ldr	x1, [sp, #32]
  420d58:	str	x1, [x0]
  420d5c:	mov	w0, #0x0                   	// #0
  420d60:	ldp	x29, x30, [sp], #96
  420d64:	ret
  420d68:	stp	x29, x30, [sp, #-32]!
  420d6c:	mov	x29, sp
  420d70:	str	x0, [sp, #24]
  420d74:	ldr	x0, [sp, #24]
  420d78:	ldr	x0, [x0, #48]
  420d7c:	bl	402b60 <free@plt>
  420d80:	ldr	x0, [sp, #24]
  420d84:	ldr	x0, [x0, #72]
  420d88:	bl	402b60 <free@plt>
  420d8c:	ldr	x0, [sp, #24]
  420d90:	ldr	x1, [x0, #80]
  420d94:	ldr	x0, [sp, #24]
  420d98:	add	x0, x0, #0x8
  420d9c:	cmp	x1, x0
  420da0:	b.eq	420dc0 <_obstack_memory_used@@Base+0x4be0>  // b.none
  420da4:	ldr	x0, [sp, #24]
  420da8:	ldr	x0, [x0, #80]
  420dac:	ldr	x0, [x0, #16]
  420db0:	bl	402b60 <free@plt>
  420db4:	ldr	x0, [sp, #24]
  420db8:	ldr	x0, [x0, #80]
  420dbc:	bl	402b60 <free@plt>
  420dc0:	ldr	x0, [sp, #24]
  420dc4:	ldr	x0, [x0, #24]
  420dc8:	bl	402b60 <free@plt>
  420dcc:	ldr	x0, [sp, #24]
  420dd0:	ldr	x0, [x0, #96]
  420dd4:	bl	402b60 <free@plt>
  420dd8:	ldr	x0, [sp, #24]
  420ddc:	ldr	x0, [x0, #88]
  420de0:	bl	402b60 <free@plt>
  420de4:	ldr	x0, [sp, #24]
  420de8:	bl	402b60 <free@plt>
  420dec:	nop
  420df0:	ldp	x29, x30, [sp], #32
  420df4:	ret
  420df8:	stp	x29, x30, [sp, #-96]!
  420dfc:	mov	x29, sp
  420e00:	str	x0, [sp, #40]
  420e04:	str	x1, [sp, #32]
  420e08:	str	x2, [sp, #24]
  420e0c:	mov	x1, #0x1                   	// #1
  420e10:	mov	x0, #0x70                  	// #112
  420e14:	bl	4029c0 <calloc@plt>
  420e18:	str	x0, [sp, #80]
  420e1c:	ldr	x0, [sp, #80]
  420e20:	cmp	x0, #0x0
  420e24:	cset	w0, eq  // eq = none
  420e28:	and	w0, w0, #0xff
  420e2c:	and	x0, x0, #0xff
  420e30:	cmp	x0, #0x0
  420e34:	b.eq	420e40 <_obstack_memory_used@@Base+0x4c60>  // b.none
  420e38:	mov	x0, #0x0                   	// #0
  420e3c:	b	421000 <_obstack_memory_used@@Base+0x4e20>
  420e40:	ldr	x0, [sp, #80]
  420e44:	add	x0, x0, #0x8
  420e48:	ldr	x1, [sp, #32]
  420e4c:	bl	41f218 <_obstack_memory_used@@Base+0x3038>
  420e50:	str	w0, [sp, #76]
  420e54:	ldr	w0, [sp, #76]
  420e58:	cmp	w0, #0x0
  420e5c:	cset	w0, ne  // ne = any
  420e60:	and	w0, w0, #0xff
  420e64:	and	x0, x0, #0xff
  420e68:	cmp	x0, #0x0
  420e6c:	b.eq	420e80 <_obstack_memory_used@@Base+0x4ca0>  // b.none
  420e70:	ldr	x0, [sp, #80]
  420e74:	bl	402b60 <free@plt>
  420e78:	mov	x0, #0x0                   	// #0
  420e7c:	b	421000 <_obstack_memory_used@@Base+0x4e20>
  420e80:	ldr	x0, [sp, #80]
  420e84:	add	x1, x0, #0x8
  420e88:	ldr	x0, [sp, #80]
  420e8c:	str	x1, [x0, #80]
  420e90:	str	xzr, [sp, #88]
  420e94:	b	420fac <_obstack_memory_used@@Base+0x4dcc>
  420e98:	ldr	x0, [sp, #40]
  420e9c:	ldr	x1, [x0]
  420ea0:	ldr	x0, [sp, #32]
  420ea4:	ldr	x2, [x0, #16]
  420ea8:	ldr	x0, [sp, #88]
  420eac:	lsl	x0, x0, #3
  420eb0:	add	x0, x2, x0
  420eb4:	ldr	x0, [x0]
  420eb8:	lsl	x0, x0, #4
  420ebc:	add	x0, x1, x0
  420ec0:	str	x0, [sp, #64]
  420ec4:	ldr	x0, [sp, #64]
  420ec8:	ldrb	w0, [x0, #8]
  420ecc:	str	w0, [sp, #60]
  420ed0:	ldr	w0, [sp, #60]
  420ed4:	cmp	w0, #0x1
  420ed8:	b.ne	420ef0 <_obstack_memory_used@@Base+0x4d10>  // b.any
  420edc:	ldr	x0, [sp, #64]
  420ee0:	ldr	w0, [x0, #8]
  420ee4:	and	w0, w0, #0x3ff00
  420ee8:	cmp	w0, #0x0
  420eec:	b.eq	420f9c <_obstack_memory_used@@Base+0x4dbc>  // b.none
  420ef0:	ldr	x0, [sp, #80]
  420ef4:	ldrb	w0, [x0, #104]
  420ef8:	ubfx	x0, x0, #5, #1
  420efc:	and	w1, w0, #0xff
  420f00:	ldr	x0, [sp, #64]
  420f04:	ldrb	w0, [x0, #10]
  420f08:	ubfx	x0, x0, #4, #1
  420f0c:	and	w0, w0, #0xff
  420f10:	orr	w0, w1, w0
  420f14:	and	w2, w0, #0xff
  420f18:	ldr	x1, [sp, #80]
  420f1c:	ldrb	w0, [x1, #104]
  420f20:	bfi	w0, w2, #5, #1
  420f24:	strb	w0, [x1, #104]
  420f28:	ldr	w0, [sp, #60]
  420f2c:	cmp	w0, #0x2
  420f30:	b.ne	420f48 <_obstack_memory_used@@Base+0x4d68>  // b.any
  420f34:	ldr	x0, [sp, #80]
  420f38:	ldrb	w1, [x0, #104]
  420f3c:	orr	w1, w1, #0x10
  420f40:	strb	w1, [x0, #104]
  420f44:	b	420fa0 <_obstack_memory_used@@Base+0x4dc0>
  420f48:	ldr	w0, [sp, #60]
  420f4c:	cmp	w0, #0x4
  420f50:	b.ne	420f68 <_obstack_memory_used@@Base+0x4d88>  // b.any
  420f54:	ldr	x0, [sp, #80]
  420f58:	ldrb	w1, [x0, #104]
  420f5c:	orr	w1, w1, #0x40
  420f60:	strb	w1, [x0, #104]
  420f64:	b	420fa0 <_obstack_memory_used@@Base+0x4dc0>
  420f68:	ldr	w0, [sp, #60]
  420f6c:	cmp	w0, #0xc
  420f70:	b.eq	420f88 <_obstack_memory_used@@Base+0x4da8>  // b.none
  420f74:	ldr	x0, [sp, #64]
  420f78:	ldr	w0, [x0, #8]
  420f7c:	and	w0, w0, #0x3ff00
  420f80:	cmp	w0, #0x0
  420f84:	b.eq	420fa0 <_obstack_memory_used@@Base+0x4dc0>  // b.none
  420f88:	ldr	x0, [sp, #80]
  420f8c:	ldrb	w1, [x0, #104]
  420f90:	orr	w1, w1, #0xffffff80
  420f94:	strb	w1, [x0, #104]
  420f98:	b	420fa0 <_obstack_memory_used@@Base+0x4dc0>
  420f9c:	nop
  420fa0:	ldr	x0, [sp, #88]
  420fa4:	add	x0, x0, #0x1
  420fa8:	str	x0, [sp, #88]
  420fac:	ldr	x0, [sp, #32]
  420fb0:	ldr	x0, [x0, #8]
  420fb4:	ldr	x1, [sp, #88]
  420fb8:	cmp	x1, x0
  420fbc:	b.lt	420e98 <_obstack_memory_used@@Base+0x4cb8>  // b.tstop
  420fc0:	ldr	x2, [sp, #24]
  420fc4:	ldr	x1, [sp, #80]
  420fc8:	ldr	x0, [sp, #40]
  420fcc:	bl	420b70 <_obstack_memory_used@@Base+0x4990>
  420fd0:	str	w0, [sp, #76]
  420fd4:	ldr	w0, [sp, #76]
  420fd8:	cmp	w0, #0x0
  420fdc:	cset	w0, ne  // ne = any
  420fe0:	and	w0, w0, #0xff
  420fe4:	and	x0, x0, #0xff
  420fe8:	cmp	x0, #0x0
  420fec:	b.eq	420ffc <_obstack_memory_used@@Base+0x4e1c>  // b.none
  420ff0:	ldr	x0, [sp, #80]
  420ff4:	bl	420d68 <_obstack_memory_used@@Base+0x4b88>
  420ff8:	str	xzr, [sp, #80]
  420ffc:	ldr	x0, [sp, #80]
  421000:	ldp	x29, x30, [sp], #96
  421004:	ret
  421008:	stp	x29, x30, [sp, #-112]!
  42100c:	mov	x29, sp
  421010:	str	x0, [sp, #40]
  421014:	str	x1, [sp, #32]
  421018:	str	w2, [sp, #28]
  42101c:	str	x3, [sp, #16]
  421020:	str	xzr, [sp, #96]
  421024:	mov	x1, #0x1                   	// #1
  421028:	mov	x0, #0x70                  	// #112
  42102c:	bl	4029c0 <calloc@plt>
  421030:	str	x0, [sp, #88]
  421034:	ldr	x0, [sp, #88]
  421038:	cmp	x0, #0x0
  42103c:	cset	w0, eq  // eq = none
  421040:	and	w0, w0, #0xff
  421044:	and	x0, x0, #0xff
  421048:	cmp	x0, #0x0
  42104c:	b.eq	421058 <_obstack_memory_used@@Base+0x4e78>  // b.none
  421050:	mov	x0, #0x0                   	// #0
  421054:	b	42135c <_obstack_memory_used@@Base+0x517c>
  421058:	ldr	x0, [sp, #88]
  42105c:	add	x0, x0, #0x8
  421060:	ldr	x1, [sp, #32]
  421064:	bl	41f218 <_obstack_memory_used@@Base+0x3038>
  421068:	str	w0, [sp, #84]
  42106c:	ldr	w0, [sp, #84]
  421070:	cmp	w0, #0x0
  421074:	cset	w0, ne  // ne = any
  421078:	and	w0, w0, #0xff
  42107c:	and	x0, x0, #0xff
  421080:	cmp	x0, #0x0
  421084:	b.eq	421098 <_obstack_memory_used@@Base+0x4eb8>  // b.none
  421088:	ldr	x0, [sp, #88]
  42108c:	bl	402b60 <free@plt>
  421090:	mov	x0, #0x0                   	// #0
  421094:	b	42135c <_obstack_memory_used@@Base+0x517c>
  421098:	ldr	w0, [sp, #28]
  42109c:	and	w0, w0, #0xf
  4210a0:	and	w2, w0, #0xff
  4210a4:	ldr	x1, [sp, #88]
  4210a8:	ldrb	w0, [x1, #104]
  4210ac:	bfxil	w0, w2, #0, #4
  4210b0:	strb	w0, [x1, #104]
  4210b4:	ldr	x0, [sp, #88]
  4210b8:	add	x1, x0, #0x8
  4210bc:	ldr	x0, [sp, #88]
  4210c0:	str	x1, [x0, #80]
  4210c4:	str	xzr, [sp, #104]
  4210c8:	b	421308 <_obstack_memory_used@@Base+0x5128>
  4210cc:	ldr	x0, [sp, #40]
  4210d0:	ldr	x1, [x0]
  4210d4:	ldr	x0, [sp, #32]
  4210d8:	ldr	x2, [x0, #16]
  4210dc:	ldr	x0, [sp, #104]
  4210e0:	lsl	x0, x0, #3
  4210e4:	add	x0, x2, x0
  4210e8:	ldr	x0, [x0]
  4210ec:	lsl	x0, x0, #4
  4210f0:	add	x0, x1, x0
  4210f4:	str	x0, [sp, #72]
  4210f8:	ldr	x0, [sp, #72]
  4210fc:	ldrb	w0, [x0, #8]
  421100:	str	w0, [sp, #68]
  421104:	ldr	x0, [sp, #72]
  421108:	ldr	w0, [x0, #8]
  42110c:	ubfx	x0, x0, #8, #10
  421110:	and	w0, w0, #0xffff
  421114:	str	w0, [sp, #64]
  421118:	ldr	w0, [sp, #68]
  42111c:	cmp	w0, #0x1
  421120:	b.ne	421130 <_obstack_memory_used@@Base+0x4f50>  // b.any
  421124:	ldr	w0, [sp, #64]
  421128:	cmp	w0, #0x0
  42112c:	b.eq	4212f8 <_obstack_memory_used@@Base+0x5118>  // b.none
  421130:	ldr	x0, [sp, #88]
  421134:	ldrb	w0, [x0, #104]
  421138:	ubfx	x0, x0, #5, #1
  42113c:	and	w1, w0, #0xff
  421140:	ldr	x0, [sp, #72]
  421144:	ldrb	w0, [x0, #10]
  421148:	ubfx	x0, x0, #4, #1
  42114c:	and	w0, w0, #0xff
  421150:	orr	w0, w1, w0
  421154:	and	w2, w0, #0xff
  421158:	ldr	x1, [sp, #88]
  42115c:	ldrb	w0, [x1, #104]
  421160:	bfi	w0, w2, #5, #1
  421164:	strb	w0, [x1, #104]
  421168:	ldr	w0, [sp, #68]
  42116c:	cmp	w0, #0x2
  421170:	b.ne	421188 <_obstack_memory_used@@Base+0x4fa8>  // b.any
  421174:	ldr	x0, [sp, #88]
  421178:	ldrb	w1, [x0, #104]
  42117c:	orr	w1, w1, #0x10
  421180:	strb	w1, [x0, #104]
  421184:	b	4211a4 <_obstack_memory_used@@Base+0x4fc4>
  421188:	ldr	w0, [sp, #68]
  42118c:	cmp	w0, #0x4
  421190:	b.ne	4211a4 <_obstack_memory_used@@Base+0x4fc4>  // b.any
  421194:	ldr	x0, [sp, #88]
  421198:	ldrb	w1, [x0, #104]
  42119c:	orr	w1, w1, #0x40
  4211a0:	strb	w1, [x0, #104]
  4211a4:	ldr	w0, [sp, #64]
  4211a8:	cmp	w0, #0x0
  4211ac:	b.eq	4212fc <_obstack_memory_used@@Base+0x511c>  // b.none
  4211b0:	ldr	x0, [sp, #88]
  4211b4:	ldr	x1, [x0, #80]
  4211b8:	ldr	x0, [sp, #88]
  4211bc:	add	x0, x0, #0x8
  4211c0:	cmp	x1, x0
  4211c4:	b.ne	421248 <_obstack_memory_used@@Base+0x5068>  // b.any
  4211c8:	mov	x0, #0x18                  	// #24
  4211cc:	bl	4028b0 <malloc@plt>
  4211d0:	str	x0, [sp, #56]
  4211d4:	ldr	x0, [sp, #56]
  4211d8:	cmp	x0, #0x0
  4211dc:	cset	w0, eq  // eq = none
  4211e0:	and	w0, w0, #0xff
  4211e4:	and	x0, x0, #0xff
  4211e8:	cmp	x0, #0x0
  4211ec:	b.eq	421200 <_obstack_memory_used@@Base+0x5020>  // b.none
  4211f0:	ldr	x0, [sp, #88]
  4211f4:	bl	420d68 <_obstack_memory_used@@Base+0x4b88>
  4211f8:	mov	x0, #0x0                   	// #0
  4211fc:	b	42135c <_obstack_memory_used@@Base+0x517c>
  421200:	ldr	x0, [sp, #88]
  421204:	ldr	x1, [sp, #56]
  421208:	str	x1, [x0, #80]
  42120c:	ldr	x0, [sp, #88]
  421210:	ldr	x0, [x0, #80]
  421214:	ldr	x1, [sp, #32]
  421218:	bl	41f218 <_obstack_memory_used@@Base+0x3038>
  42121c:	cmp	w0, #0x0
  421220:	b.eq	421234 <_obstack_memory_used@@Base+0x5054>  // b.none
  421224:	ldr	x0, [sp, #88]
  421228:	bl	420d68 <_obstack_memory_used@@Base+0x4b88>
  42122c:	mov	x0, #0x0                   	// #0
  421230:	b	42135c <_obstack_memory_used@@Base+0x517c>
  421234:	str	xzr, [sp, #96]
  421238:	ldr	x0, [sp, #88]
  42123c:	ldrb	w1, [x0, #104]
  421240:	orr	w1, w1, #0xffffff80
  421244:	strb	w1, [x0, #104]
  421248:	ldr	w0, [sp, #64]
  42124c:	and	w0, w0, #0x1
  421250:	cmp	w0, #0x0
  421254:	b.eq	421268 <_obstack_memory_used@@Base+0x5088>  // b.none
  421258:	ldr	w0, [sp, #28]
  42125c:	and	w0, w0, #0x1
  421260:	cmp	w0, #0x0
  421264:	b.eq	4212c8 <_obstack_memory_used@@Base+0x50e8>  // b.none
  421268:	ldr	w0, [sp, #64]
  42126c:	and	w0, w0, #0x2
  421270:	cmp	w0, #0x0
  421274:	b.eq	421288 <_obstack_memory_used@@Base+0x50a8>  // b.none
  421278:	ldr	w0, [sp, #28]
  42127c:	and	w0, w0, #0x1
  421280:	cmp	w0, #0x0
  421284:	b.ne	4212c8 <_obstack_memory_used@@Base+0x50e8>  // b.any
  421288:	ldr	w0, [sp, #64]
  42128c:	and	w0, w0, #0x10
  421290:	cmp	w0, #0x0
  421294:	b.eq	4212a8 <_obstack_memory_used@@Base+0x50c8>  // b.none
  421298:	ldr	w0, [sp, #28]
  42129c:	and	w0, w0, #0x2
  4212a0:	cmp	w0, #0x0
  4212a4:	b.eq	4212c8 <_obstack_memory_used@@Base+0x50e8>  // b.none
  4212a8:	ldr	w0, [sp, #64]
  4212ac:	and	w0, w0, #0x40
  4212b0:	cmp	w0, #0x0
  4212b4:	b.eq	4212fc <_obstack_memory_used@@Base+0x511c>  // b.none
  4212b8:	ldr	w0, [sp, #28]
  4212bc:	and	w0, w0, #0x4
  4212c0:	cmp	w0, #0x0
  4212c4:	b.ne	4212fc <_obstack_memory_used@@Base+0x511c>  // b.any
  4212c8:	ldr	x0, [sp, #88]
  4212cc:	add	x2, x0, #0x8
  4212d0:	ldr	x1, [sp, #104]
  4212d4:	ldr	x0, [sp, #96]
  4212d8:	sub	x0, x1, x0
  4212dc:	mov	x1, x0
  4212e0:	mov	x0, x2
  4212e4:	bl	4203dc <_obstack_memory_used@@Base+0x41fc>
  4212e8:	ldr	x0, [sp, #96]
  4212ec:	add	x0, x0, #0x1
  4212f0:	str	x0, [sp, #96]
  4212f4:	b	4212fc <_obstack_memory_used@@Base+0x511c>
  4212f8:	nop
  4212fc:	ldr	x0, [sp, #104]
  421300:	add	x0, x0, #0x1
  421304:	str	x0, [sp, #104]
  421308:	ldr	x0, [sp, #32]
  42130c:	ldr	x0, [x0, #8]
  421310:	ldr	x1, [sp, #104]
  421314:	cmp	x1, x0
  421318:	b.lt	4210cc <_obstack_memory_used@@Base+0x4eec>  // b.tstop
  42131c:	ldr	x2, [sp, #16]
  421320:	ldr	x1, [sp, #88]
  421324:	ldr	x0, [sp, #40]
  421328:	bl	420b70 <_obstack_memory_used@@Base+0x4990>
  42132c:	str	w0, [sp, #84]
  421330:	ldr	w0, [sp, #84]
  421334:	cmp	w0, #0x0
  421338:	cset	w0, ne  // ne = any
  42133c:	and	w0, w0, #0xff
  421340:	and	x0, x0, #0xff
  421344:	cmp	x0, #0x0
  421348:	b.eq	421358 <_obstack_memory_used@@Base+0x5178>  // b.none
  42134c:	ldr	x0, [sp, #88]
  421350:	bl	420d68 <_obstack_memory_used@@Base+0x4b88>
  421354:	str	xzr, [sp, #88]
  421358:	ldr	x0, [sp, #88]
  42135c:	ldp	x29, x30, [sp], #112
  421360:	ret
  421364:	stp	x29, x30, [sp, #-64]!
  421368:	mov	x29, sp
  42136c:	str	x0, [sp, #40]
  421370:	str	x1, [sp, #32]
  421374:	str	x2, [sp, #24]
  421378:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  42137c:	add	x0, x0, #0xdf8
  421380:	ldr	x0, [x0]
  421384:	and	x0, x0, #0x2000000
  421388:	cmp	x0, #0x0
  42138c:	cset	w0, ne  // ne = any
  421390:	and	w2, w0, #0xff
  421394:	ldr	x1, [sp, #24]
  421398:	ldrb	w0, [x1, #56]
  42139c:	bfi	w0, w2, #4, #1
  4213a0:	strb	w0, [x1, #56]
  4213a4:	ldr	x0, [sp, #24]
  4213a8:	ldrb	w1, [x0, #56]
  4213ac:	orr	w1, w1, #0xffffff80
  4213b0:	strb	w1, [x0, #56]
  4213b4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  4213b8:	add	x0, x0, #0xdf8
  4213bc:	ldr	x0, [x0]
  4213c0:	mov	x3, x0
  4213c4:	ldr	x2, [sp, #32]
  4213c8:	ldr	x1, [sp, #40]
  4213cc:	ldr	x0, [sp, #24]
  4213d0:	bl	4221d8 <_obstack_memory_used@@Base+0x5ff8>
  4213d4:	str	w0, [sp, #60]
  4213d8:	ldr	w0, [sp, #60]
  4213dc:	cmp	w0, #0x0
  4213e0:	b.ne	4213ec <_obstack_memory_used@@Base+0x520c>  // b.any
  4213e4:	mov	x0, #0x0                   	// #0
  4213e8:	b	42140c <_obstack_memory_used@@Base+0x522c>
  4213ec:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  4213f0:	add	x0, x0, #0x348
  4213f4:	ldrsw	x1, [sp, #60]
  4213f8:	ldr	x1, [x0, x1, lsl #3]
  4213fc:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  421400:	add	x0, x0, #0x1c8
  421404:	add	x0, x1, x0
  421408:	bl	402d80 <gettext@plt>
  42140c:	ldp	x29, x30, [sp], #64
  421410:	ret
  421414:	sub	sp, sp, #0x20
  421418:	str	x0, [sp, #8]
  42141c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  421420:	add	x0, x0, #0xdf8
  421424:	ldr	x0, [x0]
  421428:	str	x0, [sp, #24]
  42142c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x30e20>
  421430:	add	x0, x0, #0xdf8
  421434:	ldr	x1, [sp, #8]
  421438:	str	x1, [x0]
  42143c:	ldr	x0, [sp, #24]
  421440:	add	sp, sp, #0x20
  421444:	ret
  421448:	stp	x29, x30, [sp, #-48]!
  42144c:	mov	x29, sp
  421450:	str	x0, [sp, #24]
  421454:	ldr	x0, [sp, #24]
  421458:	ldr	x0, [x0]
  42145c:	str	x0, [sp, #40]
  421460:	ldr	x0, [sp, #24]
  421464:	ldr	x0, [x0, #32]
  421468:	str	x0, [sp, #32]
  42146c:	mov	x2, #0x100                 	// #256
  421470:	mov	w1, #0x0                   	// #0
  421474:	ldr	x0, [sp, #32]
  421478:	bl	402980 <memset@plt>
  42147c:	ldr	x0, [sp, #40]
  421480:	ldr	x0, [x0, #72]
  421484:	ldr	x2, [sp, #32]
  421488:	mov	x1, x0
  42148c:	ldr	x0, [sp, #24]
  421490:	bl	421540 <_obstack_memory_used@@Base+0x5360>
  421494:	ldr	x0, [sp, #40]
  421498:	ldr	x1, [x0, #72]
  42149c:	ldr	x0, [sp, #40]
  4214a0:	ldr	x0, [x0, #80]
  4214a4:	cmp	x1, x0
  4214a8:	b.eq	4214c4 <_obstack_memory_used@@Base+0x52e4>  // b.none
  4214ac:	ldr	x0, [sp, #40]
  4214b0:	ldr	x0, [x0, #80]
  4214b4:	ldr	x2, [sp, #32]
  4214b8:	mov	x1, x0
  4214bc:	ldr	x0, [sp, #24]
  4214c0:	bl	421540 <_obstack_memory_used@@Base+0x5360>
  4214c4:	ldr	x0, [sp, #40]
  4214c8:	ldr	x1, [x0, #72]
  4214cc:	ldr	x0, [sp, #40]
  4214d0:	ldr	x0, [x0, #88]
  4214d4:	cmp	x1, x0
  4214d8:	b.eq	4214f4 <_obstack_memory_used@@Base+0x5314>  // b.none
  4214dc:	ldr	x0, [sp, #40]
  4214e0:	ldr	x0, [x0, #88]
  4214e4:	ldr	x2, [sp, #32]
  4214e8:	mov	x1, x0
  4214ec:	ldr	x0, [sp, #24]
  4214f0:	bl	421540 <_obstack_memory_used@@Base+0x5360>
  4214f4:	ldr	x0, [sp, #40]
  4214f8:	ldr	x1, [x0, #72]
  4214fc:	ldr	x0, [sp, #40]
  421500:	ldr	x0, [x0, #96]
  421504:	cmp	x1, x0
  421508:	b.eq	421524 <_obstack_memory_used@@Base+0x5344>  // b.none
  42150c:	ldr	x0, [sp, #40]
  421510:	ldr	x0, [x0, #96]
  421514:	ldr	x2, [sp, #32]
  421518:	mov	x1, x0
  42151c:	ldr	x0, [sp, #24]
  421520:	bl	421540 <_obstack_memory_used@@Base+0x5360>
  421524:	ldr	x0, [sp, #24]
  421528:	ldrb	w1, [x0, #56]
  42152c:	orr	w1, w1, #0x8
  421530:	strb	w1, [x0, #56]
  421534:	mov	w0, #0x0                   	// #0
  421538:	ldp	x29, x30, [sp], #48
  42153c:	ret
  421540:	sub	sp, sp, #0x220
  421544:	stp	x29, x30, [sp]
  421548:	mov	x29, sp
  42154c:	str	x0, [sp, #40]
  421550:	str	x1, [sp, #32]
  421554:	str	x2, [sp, #24]
  421558:	ldr	x0, [sp, #40]
  42155c:	ldr	x0, [x0]
  421560:	str	x0, [sp, #488]
  421564:	ldr	x0, [sp, #488]
  421568:	ldr	w0, [x0, #180]
  42156c:	cmp	w0, #0x1
  421570:	b.ne	421590 <_obstack_memory_used@@Base+0x53b0>  // b.any
  421574:	ldr	x0, [sp, #40]
  421578:	ldr	x0, [x0, #24]
  42157c:	and	x0, x0, #0x400000
  421580:	cmp	x0, #0x0
  421584:	b.eq	421590 <_obstack_memory_used@@Base+0x53b0>  // b.none
  421588:	mov	w0, #0x1                   	// #1
  42158c:	b	421594 <_obstack_memory_used@@Base+0x53b4>
  421590:	mov	w0, #0x0                   	// #0
  421594:	strb	w0, [sp, #487]
  421598:	ldrb	w0, [sp, #487]
  42159c:	and	w0, w0, #0x1
  4215a0:	strb	w0, [sp, #487]
  4215a4:	str	xzr, [sp, #536]
  4215a8:	b	421c1c <_obstack_memory_used@@Base+0x5a3c>
  4215ac:	ldr	x0, [sp, #32]
  4215b0:	ldr	x1, [x0, #24]
  4215b4:	ldr	x0, [sp, #536]
  4215b8:	lsl	x0, x0, #3
  4215bc:	add	x0, x1, x0
  4215c0:	ldr	x0, [x0]
  4215c4:	str	x0, [sp, #528]
  4215c8:	ldr	x0, [sp, #488]
  4215cc:	ldr	x1, [x0]
  4215d0:	ldr	x0, [sp, #528]
  4215d4:	lsl	x0, x0, #4
  4215d8:	add	x0, x1, x0
  4215dc:	ldrb	w0, [x0, #8]
  4215e0:	str	w0, [sp, #480]
  4215e4:	ldr	w0, [sp, #480]
  4215e8:	cmp	w0, #0x1
  4215ec:	b.ne	421818 <_obstack_memory_used@@Base+0x5638>  // b.any
  4215f0:	ldr	x0, [sp, #488]
  4215f4:	ldr	x1, [x0]
  4215f8:	ldr	x0, [sp, #528]
  4215fc:	lsl	x0, x0, #4
  421600:	add	x0, x1, x0
  421604:	ldrb	w0, [x0]
  421608:	mov	w1, w0
  42160c:	ldr	x0, [sp, #24]
  421610:	str	x0, [sp, #456]
  421614:	ldrb	w0, [sp, #487]
  421618:	strb	w0, [sp, #455]
  42161c:	str	w1, [sp, #448]
  421620:	ldrsw	x0, [sp, #448]
  421624:	ldr	x1, [sp, #456]
  421628:	add	x0, x1, x0
  42162c:	mov	w1, #0x1                   	// #1
  421630:	strb	w1, [x0]
  421634:	ldrb	w0, [sp, #455]
  421638:	cmp	w0, #0x0
  42163c:	b.eq	42165c <_obstack_memory_used@@Base+0x547c>  // b.none
  421640:	ldr	w0, [sp, #448]
  421644:	bl	402d50 <tolower@plt>
  421648:	sxtw	x0, w0
  42164c:	ldr	x1, [sp, #456]
  421650:	add	x0, x1, x0
  421654:	mov	w1, #0x1                   	// #1
  421658:	strb	w1, [x0]
  42165c:	nop
  421660:	ldr	x0, [sp, #40]
  421664:	ldr	x0, [x0, #24]
  421668:	and	x0, x0, #0x400000
  42166c:	cmp	x0, #0x0
  421670:	b.eq	421c10 <_obstack_memory_used@@Base+0x5a30>  // b.none
  421674:	ldr	x0, [sp, #488]
  421678:	ldr	w0, [x0, #180]
  42167c:	cmp	w0, #0x1
  421680:	b.le	421c10 <_obstack_memory_used@@Base+0x5a30>
  421684:	add	x0, sp, #0x160
  421688:	str	x0, [sp, #520]
  42168c:	ldr	x0, [sp, #488]
  421690:	ldr	x1, [x0]
  421694:	ldr	x0, [sp, #528]
  421698:	lsl	x0, x0, #4
  42169c:	add	x1, x1, x0
  4216a0:	ldr	x0, [sp, #520]
  4216a4:	add	x2, x0, #0x1
  4216a8:	str	x2, [sp, #520]
  4216ac:	ldrb	w1, [x1]
  4216b0:	strb	w1, [x0]
  4216b4:	b	4216e0 <_obstack_memory_used@@Base+0x5500>
  4216b8:	ldr	x0, [sp, #488]
  4216bc:	ldr	x1, [x0]
  4216c0:	ldr	x0, [sp, #528]
  4216c4:	lsl	x0, x0, #4
  4216c8:	add	x1, x1, x0
  4216cc:	ldr	x0, [sp, #520]
  4216d0:	add	x2, x0, #0x1
  4216d4:	str	x2, [sp, #520]
  4216d8:	ldrb	w1, [x1]
  4216dc:	strb	w1, [x0]
  4216e0:	ldr	x0, [sp, #528]
  4216e4:	add	x0, x0, #0x1
  4216e8:	str	x0, [sp, #528]
  4216ec:	ldr	x1, [sp, #528]
  4216f0:	ldr	x0, [sp, #488]
  4216f4:	ldr	x0, [x0, #16]
  4216f8:	cmp	x1, x0
  4216fc:	b.cs	421748 <_obstack_memory_used@@Base+0x5568>  // b.hs, b.nlast
  421700:	ldr	x0, [sp, #488]
  421704:	ldr	x1, [x0]
  421708:	ldr	x0, [sp, #528]
  42170c:	lsl	x0, x0, #4
  421710:	add	x0, x1, x0
  421714:	ldrb	w0, [x0, #8]
  421718:	cmp	w0, #0x1
  42171c:	b.ne	421748 <_obstack_memory_used@@Base+0x5568>  // b.any
  421720:	ldr	x0, [sp, #488]
  421724:	ldr	x1, [x0]
  421728:	ldr	x0, [sp, #528]
  42172c:	lsl	x0, x0, #4
  421730:	add	x0, x1, x0
  421734:	ldrb	w0, [x0, #10]
  421738:	and	w0, w0, #0x20
  42173c:	and	w0, w0, #0xff
  421740:	cmp	w0, #0x0
  421744:	b.ne	4216b8 <_obstack_memory_used@@Base+0x54d8>  // b.any
  421748:	add	x0, sp, #0x150
  42174c:	mov	x2, #0x8                   	// #8
  421750:	mov	w1, #0x0                   	// #0
  421754:	bl	402980 <memset@plt>
  421758:	add	x0, sp, #0x160
  42175c:	ldr	x1, [sp, #520]
  421760:	sub	x0, x1, x0
  421764:	mov	x4, x0
  421768:	add	x2, sp, #0x150
  42176c:	add	x1, sp, #0x160
  421770:	add	x0, sp, #0x15c
  421774:	mov	x3, x2
  421778:	mov	x2, x4
  42177c:	bl	41bae8 <wcrtomb@plt+0x18cf8>
  421780:	mov	x2, x0
  421784:	add	x0, sp, #0x160
  421788:	ldr	x1, [sp, #520]
  42178c:	sub	x0, x1, x0
  421790:	cmp	x2, x0
  421794:	b.ne	421c10 <_obstack_memory_used@@Base+0x5a30>  // b.any
  421798:	ldr	w0, [sp, #348]
  42179c:	bl	402da0 <towlower@plt>
  4217a0:	mov	w3, w0
  4217a4:	add	x1, sp, #0x150
  4217a8:	add	x0, sp, #0x160
  4217ac:	mov	x2, x1
  4217b0:	mov	w1, w3
  4217b4:	bl	402df0 <wcrtomb@plt>
  4217b8:	cmn	x0, #0x1
  4217bc:	b.eq	421c10 <_obstack_memory_used@@Base+0x5a30>  // b.none
  4217c0:	ldrb	w0, [sp, #352]
  4217c4:	mov	w1, w0
  4217c8:	ldr	x0, [sp, #24]
  4217cc:	str	x0, [sp, #440]
  4217d0:	strb	wzr, [sp, #439]
  4217d4:	str	w1, [sp, #432]
  4217d8:	ldrsw	x0, [sp, #432]
  4217dc:	ldr	x1, [sp, #440]
  4217e0:	add	x0, x1, x0
  4217e4:	mov	w1, #0x1                   	// #1
  4217e8:	strb	w1, [x0]
  4217ec:	ldrb	w0, [sp, #439]
  4217f0:	cmp	w0, #0x0
  4217f4:	b.eq	421c0c <_obstack_memory_used@@Base+0x5a2c>  // b.none
  4217f8:	ldr	w0, [sp, #432]
  4217fc:	bl	402d50 <tolower@plt>
  421800:	sxtw	x0, w0
  421804:	ldr	x1, [sp, #440]
  421808:	add	x0, x1, x0
  42180c:	mov	w1, #0x1                   	// #1
  421810:	strb	w1, [x0]
  421814:	b	421c0c <_obstack_memory_used@@Base+0x5a2c>
  421818:	ldr	w0, [sp, #480]
  42181c:	cmp	w0, #0x3
  421820:	b.ne	421914 <_obstack_memory_used@@Base+0x5734>  // b.any
  421824:	str	wzr, [sp, #516]
  421828:	str	wzr, [sp, #512]
  42182c:	b	421904 <_obstack_memory_used@@Base+0x5724>
  421830:	ldr	x0, [sp, #488]
  421834:	ldr	x1, [x0]
  421838:	ldr	x0, [sp, #528]
  42183c:	lsl	x0, x0, #4
  421840:	add	x0, x1, x0
  421844:	ldr	x1, [x0]
  421848:	ldrsw	x0, [sp, #516]
  42184c:	lsl	x0, x0, #3
  421850:	add	x0, x1, x0
  421854:	ldr	x0, [x0]
  421858:	str	x0, [sp, #464]
  42185c:	str	wzr, [sp, #508]
  421860:	b	4218ec <_obstack_memory_used@@Base+0x570c>
  421864:	ldr	w0, [sp, #508]
  421868:	ldr	x1, [sp, #464]
  42186c:	lsr	x0, x1, x0
  421870:	and	x0, x0, #0x1
  421874:	cmp	x0, #0x0
  421878:	b.eq	4218d4 <_obstack_memory_used@@Base+0x56f4>  // b.none
  42187c:	ldr	x0, [sp, #24]
  421880:	str	x0, [sp, #424]
  421884:	ldrb	w0, [sp, #487]
  421888:	strb	w0, [sp, #423]
  42188c:	ldr	w0, [sp, #512]
  421890:	str	w0, [sp, #416]
  421894:	ldrsw	x0, [sp, #416]
  421898:	ldr	x1, [sp, #424]
  42189c:	add	x0, x1, x0
  4218a0:	mov	w1, #0x1                   	// #1
  4218a4:	strb	w1, [x0]
  4218a8:	ldrb	w0, [sp, #423]
  4218ac:	cmp	w0, #0x0
  4218b0:	b.eq	4218d0 <_obstack_memory_used@@Base+0x56f0>  // b.none
  4218b4:	ldr	w0, [sp, #416]
  4218b8:	bl	402d50 <tolower@plt>
  4218bc:	sxtw	x0, w0
  4218c0:	ldr	x1, [sp, #424]
  4218c4:	add	x0, x1, x0
  4218c8:	mov	w1, #0x1                   	// #1
  4218cc:	strb	w1, [x0]
  4218d0:	nop
  4218d4:	ldr	w0, [sp, #508]
  4218d8:	add	w0, w0, #0x1
  4218dc:	str	w0, [sp, #508]
  4218e0:	ldr	w0, [sp, #512]
  4218e4:	add	w0, w0, #0x1
  4218e8:	str	w0, [sp, #512]
  4218ec:	ldr	w0, [sp, #508]
  4218f0:	cmp	w0, #0x3f
  4218f4:	b.le	421864 <_obstack_memory_used@@Base+0x5684>
  4218f8:	ldr	w0, [sp, #516]
  4218fc:	add	w0, w0, #0x1
  421900:	str	w0, [sp, #516]
  421904:	ldr	w0, [sp, #516]
  421908:	cmp	w0, #0x3
  42190c:	b.le	421830 <_obstack_memory_used@@Base+0x5650>
  421910:	b	421c10 <_obstack_memory_used@@Base+0x5a30>
  421914:	ldr	w0, [sp, #480]
  421918:	cmp	w0, #0x6
  42191c:	b.ne	421bb8 <_obstack_memory_used@@Base+0x59d8>  // b.any
  421920:	ldr	x0, [sp, #488]
  421924:	ldr	x1, [x0]
  421928:	ldr	x0, [sp, #528]
  42192c:	lsl	x0, x0, #4
  421930:	add	x0, x1, x0
  421934:	ldr	x0, [x0]
  421938:	str	x0, [sp, #472]
  42193c:	ldr	x0, [sp, #488]
  421940:	ldr	w0, [x0, #180]
  421944:	cmp	w0, #0x1
  421948:	b.le	421a34 <_obstack_memory_used@@Base+0x5854>
  42194c:	ldr	x0, [sp, #472]
  421950:	ldr	x0, [x0, #72]
  421954:	cmp	x0, #0x0
  421958:	b.ne	421984 <_obstack_memory_used@@Base+0x57a4>  // b.any
  42195c:	ldr	x0, [sp, #472]
  421960:	ldrb	w0, [x0, #32]
  421964:	and	w0, w0, #0x1
  421968:	and	w0, w0, #0xff
  42196c:	cmp	w0, #0x0
  421970:	b.ne	421984 <_obstack_memory_used@@Base+0x57a4>  // b.any
  421974:	ldr	x0, [sp, #472]
  421978:	ldr	x0, [x0, #64]
  42197c:	cmp	x0, #0x0
  421980:	b.eq	421a34 <_obstack_memory_used@@Base+0x5854>  // b.none
  421984:	strb	wzr, [sp, #335]
  421988:	add	x0, sp, #0x140
  42198c:	mov	x2, #0x8                   	// #8
  421990:	mov	w1, #0x0                   	// #0
  421994:	bl	402980 <memset@plt>
  421998:	add	x1, sp, #0x140
  42199c:	add	x0, sp, #0x14f
  4219a0:	mov	x3, x1
  4219a4:	mov	x2, #0x1                   	// #1
  4219a8:	mov	x1, x0
  4219ac:	mov	x0, #0x0                   	// #0
  4219b0:	bl	41bae8 <wcrtomb@plt+0x18cf8>
  4219b4:	cmn	x0, #0x2
  4219b8:	b.ne	421a14 <_obstack_memory_used@@Base+0x5834>  // b.any
  4219bc:	ldrb	w0, [sp, #335]
  4219c0:	mov	w1, w0
  4219c4:	ldr	x0, [sp, #24]
  4219c8:	str	x0, [sp, #408]
  4219cc:	strb	wzr, [sp, #407]
  4219d0:	str	w1, [sp, #400]
  4219d4:	ldrsw	x0, [sp, #400]
  4219d8:	ldr	x1, [sp, #408]
  4219dc:	add	x0, x1, x0
  4219e0:	mov	w1, #0x1                   	// #1
  4219e4:	strb	w1, [x0]
  4219e8:	ldrb	w0, [sp, #407]
  4219ec:	cmp	w0, #0x0
  4219f0:	b.eq	421a10 <_obstack_memory_used@@Base+0x5830>  // b.none
  4219f4:	ldr	w0, [sp, #400]
  4219f8:	bl	402d50 <tolower@plt>
  4219fc:	sxtw	x0, w0
  421a00:	ldr	x1, [sp, #408]
  421a04:	add	x0, x1, x0
  421a08:	mov	w1, #0x1                   	// #1
  421a0c:	strb	w1, [x0]
  421a10:	nop
  421a14:	ldrb	w0, [sp, #335]
  421a18:	add	w0, w0, #0x1
  421a1c:	and	w0, w0, #0xff
  421a20:	strb	w0, [sp, #335]
  421a24:	ldrb	w0, [sp, #335]
  421a28:	cmp	w0, #0x0
  421a2c:	b.ne	421988 <_obstack_memory_used@@Base+0x57a8>  // b.any
  421a30:	b	421c10 <_obstack_memory_used@@Base+0x5a30>
  421a34:	str	xzr, [sp, #496]
  421a38:	b	421ba0 <_obstack_memory_used@@Base+0x59c0>
  421a3c:	add	x0, sp, #0x138
  421a40:	mov	x2, #0x8                   	// #8
  421a44:	mov	w1, #0x0                   	// #0
  421a48:	bl	402980 <memset@plt>
  421a4c:	ldr	x0, [sp, #472]
  421a50:	ldr	x1, [x0]
  421a54:	ldr	x0, [sp, #496]
  421a58:	lsl	x0, x0, #2
  421a5c:	add	x0, x1, x0
  421a60:	ldr	w1, [x0]
  421a64:	add	x2, sp, #0x138
  421a68:	add	x0, sp, #0x38
  421a6c:	bl	402df0 <wcrtomb@plt>
  421a70:	cmn	x0, #0x1
  421a74:	b.eq	421ad8 <_obstack_memory_used@@Base+0x58f8>  // b.none
  421a78:	add	x0, sp, #0x38
  421a7c:	ldrb	w0, [x0]
  421a80:	mov	w1, w0
  421a84:	ldr	x0, [sp, #24]
  421a88:	str	x0, [sp, #392]
  421a8c:	ldrb	w0, [sp, #487]
  421a90:	strb	w0, [sp, #391]
  421a94:	str	w1, [sp, #384]
  421a98:	ldrsw	x0, [sp, #384]
  421a9c:	ldr	x1, [sp, #392]
  421aa0:	add	x0, x1, x0
  421aa4:	mov	w1, #0x1                   	// #1
  421aa8:	strb	w1, [x0]
  421aac:	ldrb	w0, [sp, #391]
  421ab0:	cmp	w0, #0x0
  421ab4:	b.eq	421ad4 <_obstack_memory_used@@Base+0x58f4>  // b.none
  421ab8:	ldr	w0, [sp, #384]
  421abc:	bl	402d50 <tolower@plt>
  421ac0:	sxtw	x0, w0
  421ac4:	ldr	x1, [sp, #392]
  421ac8:	add	x0, x1, x0
  421acc:	mov	w1, #0x1                   	// #1
  421ad0:	strb	w1, [x0]
  421ad4:	nop
  421ad8:	ldr	x0, [sp, #40]
  421adc:	ldr	x0, [x0, #24]
  421ae0:	and	x0, x0, #0x400000
  421ae4:	cmp	x0, #0x0
  421ae8:	b.eq	421b94 <_obstack_memory_used@@Base+0x59b4>  // b.none
  421aec:	ldr	x0, [sp, #488]
  421af0:	ldr	w0, [x0, #180]
  421af4:	cmp	w0, #0x1
  421af8:	b.le	421b94 <_obstack_memory_used@@Base+0x59b4>
  421afc:	ldr	x0, [sp, #472]
  421b00:	ldr	x1, [x0]
  421b04:	ldr	x0, [sp, #496]
  421b08:	lsl	x0, x0, #2
  421b0c:	add	x0, x1, x0
  421b10:	ldr	w0, [x0]
  421b14:	bl	402da0 <towlower@plt>
  421b18:	mov	w3, w0
  421b1c:	add	x1, sp, #0x138
  421b20:	add	x0, sp, #0x38
  421b24:	mov	x2, x1
  421b28:	mov	w1, w3
  421b2c:	bl	402df0 <wcrtomb@plt>
  421b30:	cmn	x0, #0x1
  421b34:	b.eq	421b94 <_obstack_memory_used@@Base+0x59b4>  // b.none
  421b38:	add	x0, sp, #0x38
  421b3c:	ldrb	w0, [x0]
  421b40:	mov	w1, w0
  421b44:	ldr	x0, [sp, #24]
  421b48:	str	x0, [sp, #376]
  421b4c:	strb	wzr, [sp, #375]
  421b50:	str	w1, [sp, #368]
  421b54:	ldrsw	x0, [sp, #368]
  421b58:	ldr	x1, [sp, #376]
  421b5c:	add	x0, x1, x0
  421b60:	mov	w1, #0x1                   	// #1
  421b64:	strb	w1, [x0]
  421b68:	ldrb	w0, [sp, #375]
  421b6c:	cmp	w0, #0x0
  421b70:	b.eq	421b90 <_obstack_memory_used@@Base+0x59b0>  // b.none
  421b74:	ldr	w0, [sp, #368]
  421b78:	bl	402d50 <tolower@plt>
  421b7c:	sxtw	x0, w0
  421b80:	ldr	x1, [sp, #376]
  421b84:	add	x0, x1, x0
  421b88:	mov	w1, #0x1                   	// #1
  421b8c:	strb	w1, [x0]
  421b90:	nop
  421b94:	ldr	x0, [sp, #496]
  421b98:	add	x0, x0, #0x1
  421b9c:	str	x0, [sp, #496]
  421ba0:	ldr	x0, [sp, #472]
  421ba4:	ldr	x0, [x0, #40]
  421ba8:	ldr	x1, [sp, #496]
  421bac:	cmp	x1, x0
  421bb0:	b.lt	421a3c <_obstack_memory_used@@Base+0x585c>  // b.tstop
  421bb4:	b	421c10 <_obstack_memory_used@@Base+0x5a30>
  421bb8:	ldr	w0, [sp, #480]
  421bbc:	cmp	w0, #0x5
  421bc0:	b.eq	421bdc <_obstack_memory_used@@Base+0x59fc>  // b.none
  421bc4:	ldr	w0, [sp, #480]
  421bc8:	cmp	w0, #0x7
  421bcc:	b.eq	421bdc <_obstack_memory_used@@Base+0x59fc>  // b.none
  421bd0:	ldr	w0, [sp, #480]
  421bd4:	cmp	w0, #0x2
  421bd8:	b.ne	421c10 <_obstack_memory_used@@Base+0x5a30>  // b.any
  421bdc:	mov	x2, #0x100                 	// #256
  421be0:	mov	w1, #0x1                   	// #1
  421be4:	ldr	x0, [sp, #24]
  421be8:	bl	402980 <memset@plt>
  421bec:	ldr	w0, [sp, #480]
  421bf0:	cmp	w0, #0x2
  421bf4:	b.ne	421c34 <_obstack_memory_used@@Base+0x5a54>  // b.any
  421bf8:	ldr	x0, [sp, #40]
  421bfc:	ldrb	w1, [x0, #56]
  421c00:	orr	w1, w1, #0x1
  421c04:	strb	w1, [x0, #56]
  421c08:	b	421c34 <_obstack_memory_used@@Base+0x5a54>
  421c0c:	nop
  421c10:	ldr	x0, [sp, #536]
  421c14:	add	x0, x0, #0x1
  421c18:	str	x0, [sp, #536]
  421c1c:	ldr	x0, [sp, #32]
  421c20:	ldr	x0, [x0, #16]
  421c24:	ldr	x1, [sp, #536]
  421c28:	cmp	x1, x0
  421c2c:	b.lt	4215ac <_obstack_memory_used@@Base+0x53cc>  // b.tstop
  421c30:	b	421c38 <_obstack_memory_used@@Base+0x5a58>
  421c34:	nop
  421c38:	ldp	x29, x30, [sp]
  421c3c:	add	sp, sp, #0x220
  421c40:	ret
  421c44:	stp	x29, x30, [sp, #-64]!
  421c48:	mov	x29, sp
  421c4c:	str	x0, [sp, #40]
  421c50:	str	x1, [sp, #32]
  421c54:	str	w2, [sp, #28]
  421c58:	ldr	w0, [sp, #28]
  421c5c:	and	w0, w0, #0x1
  421c60:	cmp	w0, #0x0
  421c64:	b.eq	421c74 <_obstack_memory_used@@Base+0x5a94>  // b.none
  421c68:	mov	x0, #0xb2fc                	// #45820
  421c6c:	movk	x0, #0x3, lsl #16
  421c70:	b	421c7c <_obstack_memory_used@@Base+0x5a9c>
  421c74:	mov	x0, #0x2c6                 	// #710
  421c78:	movk	x0, #0x101, lsl #16
  421c7c:	str	x0, [sp, #48]
  421c80:	ldr	x0, [sp, #40]
  421c84:	str	xzr, [x0]
  421c88:	ldr	x0, [sp, #40]
  421c8c:	str	xzr, [x0, #8]
  421c90:	ldr	x0, [sp, #40]
  421c94:	str	xzr, [x0, #16]
  421c98:	mov	x0, #0x100                 	// #256
  421c9c:	bl	4028b0 <malloc@plt>
  421ca0:	mov	x1, x0
  421ca4:	ldr	x0, [sp, #40]
  421ca8:	str	x1, [x0, #32]
  421cac:	ldr	x0, [sp, #40]
  421cb0:	ldr	x0, [x0, #32]
  421cb4:	cmp	x0, #0x0
  421cb8:	cset	w0, eq  // eq = none
  421cbc:	and	w0, w0, #0xff
  421cc0:	and	x0, x0, #0xff
  421cc4:	cmp	x0, #0x0
  421cc8:	b.eq	421cd4 <_obstack_memory_used@@Base+0x5af4>  // b.none
  421ccc:	mov	w0, #0xc                   	// #12
  421cd0:	b	421dd8 <_obstack_memory_used@@Base+0x5bf8>
  421cd4:	ldrsw	x0, [sp, #28]
  421cd8:	lsl	x0, x0, #21
  421cdc:	and	x0, x0, #0x400000
  421ce0:	ldr	x1, [sp, #48]
  421ce4:	orr	x0, x1, x0
  421ce8:	str	x0, [sp, #48]
  421cec:	ldr	w0, [sp, #28]
  421cf0:	and	w0, w0, #0x4
  421cf4:	cmp	w0, #0x0
  421cf8:	b.eq	421d28 <_obstack_memory_used@@Base+0x5b48>  // b.none
  421cfc:	ldr	x0, [sp, #48]
  421d00:	and	x0, x0, #0xffffffffffffffbf
  421d04:	str	x0, [sp, #48]
  421d08:	ldr	x0, [sp, #48]
  421d0c:	orr	x0, x0, #0x100
  421d10:	str	x0, [sp, #48]
  421d14:	ldr	x0, [sp, #40]
  421d18:	ldrb	w1, [x0, #56]
  421d1c:	orr	w1, w1, #0xffffff80
  421d20:	strb	w1, [x0, #56]
  421d24:	b	421d38 <_obstack_memory_used@@Base+0x5b58>
  421d28:	ldr	x0, [sp, #40]
  421d2c:	ldrb	w1, [x0, #56]
  421d30:	and	w1, w1, #0x7f
  421d34:	strb	w1, [x0, #56]
  421d38:	ldr	w0, [sp, #28]
  421d3c:	and	w0, w0, #0x8
  421d40:	cmp	w0, #0x0
  421d44:	cset	w0, ne  // ne = any
  421d48:	and	w2, w0, #0xff
  421d4c:	ldr	x1, [sp, #40]
  421d50:	ldrb	w0, [x1, #56]
  421d54:	bfi	w0, w2, #4, #1
  421d58:	strb	w0, [x1, #56]
  421d5c:	ldr	x0, [sp, #40]
  421d60:	str	xzr, [x0, #40]
  421d64:	ldr	x0, [sp, #32]
  421d68:	bl	402720 <strlen@plt>
  421d6c:	ldr	x3, [sp, #48]
  421d70:	mov	x2, x0
  421d74:	ldr	x1, [sp, #32]
  421d78:	ldr	x0, [sp, #40]
  421d7c:	bl	4221d8 <_obstack_memory_used@@Base+0x5ff8>
  421d80:	str	w0, [sp, #60]
  421d84:	ldr	w0, [sp, #60]
  421d88:	cmp	w0, #0x10
  421d8c:	b.ne	421d98 <_obstack_memory_used@@Base+0x5bb8>  // b.any
  421d90:	mov	w0, #0x8                   	// #8
  421d94:	str	w0, [sp, #60]
  421d98:	ldr	w0, [sp, #60]
  421d9c:	cmp	w0, #0x0
  421da0:	cset	w0, eq  // eq = none
  421da4:	and	w0, w0, #0xff
  421da8:	and	x0, x0, #0xff
  421dac:	cmp	x0, #0x0
  421db0:	b.eq	421dc0 <_obstack_memory_used@@Base+0x5be0>  // b.none
  421db4:	ldr	x0, [sp, #40]
  421db8:	bl	421448 <_obstack_memory_used@@Base+0x5268>
  421dbc:	b	421dd4 <_obstack_memory_used@@Base+0x5bf4>
  421dc0:	ldr	x0, [sp, #40]
  421dc4:	ldr	x0, [x0, #32]
  421dc8:	bl	402b60 <free@plt>
  421dcc:	ldr	x0, [sp, #40]
  421dd0:	str	xzr, [x0, #32]
  421dd4:	ldr	w0, [sp, #60]
  421dd8:	ldp	x29, x30, [sp], #64
  421ddc:	ret
  421de0:	stp	x29, x30, [sp, #-80]!
  421de4:	mov	x29, sp
  421de8:	str	w0, [sp, #44]
  421dec:	str	x1, [sp, #32]
  421df0:	str	x2, [sp, #24]
  421df4:	str	x3, [sp, #16]
  421df8:	mov	w0, #0x11                  	// #17
  421dfc:	str	w0, [sp, #68]
  421e00:	ldr	w0, [sp, #44]
  421e04:	lsr	w0, w0, #31
  421e08:	and	w0, w0, #0xff
  421e0c:	and	x0, x0, #0xff
  421e10:	cmp	x0, #0x0
  421e14:	b.ne	421e38 <_obstack_memory_used@@Base+0x5c58>  // b.any
  421e18:	ldr	w1, [sp, #44]
  421e1c:	ldr	w0, [sp, #68]
  421e20:	cmp	w1, w0
  421e24:	cset	w0, ge  // ge = tcont
  421e28:	and	w0, w0, #0xff
  421e2c:	and	x0, x0, #0xff
  421e30:	cmp	x0, #0x0
  421e34:	b.eq	421e3c <_obstack_memory_used@@Base+0x5c5c>  // b.none
  421e38:	bl	402a90 <abort@plt>
  421e3c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  421e40:	add	x0, x0, #0x348
  421e44:	ldrsw	x1, [sp, #44]
  421e48:	ldr	x1, [x0, x1, lsl #3]
  421e4c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  421e50:	add	x0, x0, #0x1c8
  421e54:	add	x0, x1, x0
  421e58:	bl	402d80 <gettext@plt>
  421e5c:	str	x0, [sp, #56]
  421e60:	ldr	x0, [sp, #56]
  421e64:	bl	402720 <strlen@plt>
  421e68:	add	x0, x0, #0x1
  421e6c:	str	x0, [sp, #48]
  421e70:	ldr	x0, [sp, #16]
  421e74:	cmp	x0, #0x0
  421e78:	cset	w0, ne  // ne = any
  421e7c:	and	w0, w0, #0xff
  421e80:	and	x0, x0, #0xff
  421e84:	cmp	x0, #0x0
  421e88:	b.eq	421ee0 <_obstack_memory_used@@Base+0x5d00>  // b.none
  421e8c:	ldr	x0, [sp, #48]
  421e90:	str	x0, [sp, #72]
  421e94:	ldr	x1, [sp, #48]
  421e98:	ldr	x0, [sp, #16]
  421e9c:	cmp	x1, x0
  421ea0:	cset	w0, hi  // hi = pmore
  421ea4:	and	w0, w0, #0xff
  421ea8:	and	x0, x0, #0xff
  421eac:	cmp	x0, #0x0
  421eb0:	b.eq	421ed0 <_obstack_memory_used@@Base+0x5cf0>  // b.none
  421eb4:	ldr	x0, [sp, #16]
  421eb8:	sub	x0, x0, #0x1
  421ebc:	str	x0, [sp, #72]
  421ec0:	ldr	x1, [sp, #24]
  421ec4:	ldr	x0, [sp, #72]
  421ec8:	add	x0, x1, x0
  421ecc:	strb	wzr, [x0]
  421ed0:	ldr	x2, [sp, #72]
  421ed4:	ldr	x1, [sp, #56]
  421ed8:	ldr	x0, [sp, #24]
  421edc:	bl	4026d0 <memcpy@plt>
  421ee0:	ldr	x0, [sp, #48]
  421ee4:	ldp	x29, x30, [sp], #80
  421ee8:	ret
  421eec:	stp	x29, x30, [sp, #-64]!
  421ef0:	mov	x29, sp
  421ef4:	str	x0, [sp, #24]
  421ef8:	ldr	x0, [sp, #24]
  421efc:	ldr	x0, [x0]
  421f00:	cmp	x0, #0x0
  421f04:	b.eq	421f48 <_obstack_memory_used@@Base+0x5d68>  // b.none
  421f08:	str	xzr, [sp, #56]
  421f0c:	b	421f34 <_obstack_memory_used@@Base+0x5d54>
  421f10:	ldr	x0, [sp, #24]
  421f14:	ldr	x1, [x0]
  421f18:	ldr	x0, [sp, #56]
  421f1c:	lsl	x0, x0, #4
  421f20:	add	x0, x1, x0
  421f24:	bl	429948 <_obstack_memory_used@@Base+0xd768>
  421f28:	ldr	x0, [sp, #56]
  421f2c:	add	x0, x0, #0x1
  421f30:	str	x0, [sp, #56]
  421f34:	ldr	x0, [sp, #24]
  421f38:	ldr	x1, [x0, #16]
  421f3c:	ldr	x0, [sp, #56]
  421f40:	cmp	x1, x0
  421f44:	b.hi	421f10 <_obstack_memory_used@@Base+0x5d30>  // b.pmore
  421f48:	ldr	x0, [sp, #24]
  421f4c:	ldr	x0, [x0, #24]
  421f50:	bl	402b60 <free@plt>
  421f54:	str	xzr, [sp, #56]
  421f58:	b	422010 <_obstack_memory_used@@Base+0x5e30>
  421f5c:	ldr	x0, [sp, #24]
  421f60:	ldr	x0, [x0, #48]
  421f64:	cmp	x0, #0x0
  421f68:	b.eq	421f94 <_obstack_memory_used@@Base+0x5db4>  // b.none
  421f6c:	ldr	x0, [sp, #24]
  421f70:	ldr	x2, [x0, #48]
  421f74:	ldr	x1, [sp, #56]
  421f78:	mov	x0, x1
  421f7c:	lsl	x0, x0, #1
  421f80:	add	x0, x0, x1
  421f84:	lsl	x0, x0, #3
  421f88:	add	x0, x2, x0
  421f8c:	ldr	x0, [x0, #16]
  421f90:	bl	402b60 <free@plt>
  421f94:	ldr	x0, [sp, #24]
  421f98:	ldr	x0, [x0, #56]
  421f9c:	cmp	x0, #0x0
  421fa0:	b.eq	421fcc <_obstack_memory_used@@Base+0x5dec>  // b.none
  421fa4:	ldr	x0, [sp, #24]
  421fa8:	ldr	x2, [x0, #56]
  421fac:	ldr	x1, [sp, #56]
  421fb0:	mov	x0, x1
  421fb4:	lsl	x0, x0, #1
  421fb8:	add	x0, x0, x1
  421fbc:	lsl	x0, x0, #3
  421fc0:	add	x0, x2, x0
  421fc4:	ldr	x0, [x0, #16]
  421fc8:	bl	402b60 <free@plt>
  421fcc:	ldr	x0, [sp, #24]
  421fd0:	ldr	x0, [x0, #40]
  421fd4:	cmp	x0, #0x0
  421fd8:	b.eq	422004 <_obstack_memory_used@@Base+0x5e24>  // b.none
  421fdc:	ldr	x0, [sp, #24]
  421fe0:	ldr	x2, [x0, #40]
  421fe4:	ldr	x1, [sp, #56]
  421fe8:	mov	x0, x1
  421fec:	lsl	x0, x0, #1
  421ff0:	add	x0, x0, x1
  421ff4:	lsl	x0, x0, #3
  421ff8:	add	x0, x2, x0
  421ffc:	ldr	x0, [x0, #16]
  422000:	bl	402b60 <free@plt>
  422004:	ldr	x0, [sp, #56]
  422008:	add	x0, x0, #0x1
  42200c:	str	x0, [sp, #56]
  422010:	ldr	x0, [sp, #24]
  422014:	ldr	x1, [x0, #16]
  422018:	ldr	x0, [sp, #56]
  42201c:	cmp	x1, x0
  422020:	b.hi	421f5c <_obstack_memory_used@@Base+0x5d7c>  // b.pmore
  422024:	ldr	x0, [sp, #24]
  422028:	ldr	x0, [x0, #40]
  42202c:	bl	402b60 <free@plt>
  422030:	ldr	x0, [sp, #24]
  422034:	ldr	x0, [x0, #48]
  422038:	bl	402b60 <free@plt>
  42203c:	ldr	x0, [sp, #24]
  422040:	ldr	x0, [x0, #56]
  422044:	bl	402b60 <free@plt>
  422048:	ldr	x0, [sp, #24]
  42204c:	ldr	x0, [x0]
  422050:	bl	402b60 <free@plt>
  422054:	ldr	x0, [sp, #24]
  422058:	ldr	x0, [x0, #64]
  42205c:	cmp	x0, #0x0
  422060:	b.eq	422108 <_obstack_memory_used@@Base+0x5f28>  // b.none
  422064:	str	xzr, [sp, #56]
  422068:	b	4220f4 <_obstack_memory_used@@Base+0x5f14>
  42206c:	ldr	x0, [sp, #24]
  422070:	ldr	x2, [x0, #64]
  422074:	ldr	x1, [sp, #56]
  422078:	mov	x0, x1
  42207c:	lsl	x0, x0, #1
  422080:	add	x0, x0, x1
  422084:	lsl	x0, x0, #3
  422088:	add	x0, x2, x0
  42208c:	str	x0, [sp, #40]
  422090:	str	xzr, [sp, #48]
  422094:	b	4220c8 <_obstack_memory_used@@Base+0x5ee8>
  422098:	ldr	x0, [sp, #40]
  42209c:	ldr	x1, [x0, #16]
  4220a0:	ldr	x0, [sp, #48]
  4220a4:	lsl	x0, x0, #3
  4220a8:	add	x0, x1, x0
  4220ac:	ldr	x0, [x0]
  4220b0:	str	x0, [sp, #32]
  4220b4:	ldr	x0, [sp, #32]
  4220b8:	bl	420d68 <_obstack_memory_used@@Base+0x4b88>
  4220bc:	ldr	x0, [sp, #48]
  4220c0:	add	x0, x0, #0x1
  4220c4:	str	x0, [sp, #48]
  4220c8:	ldr	x0, [sp, #40]
  4220cc:	ldr	x0, [x0]
  4220d0:	ldr	x1, [sp, #48]
  4220d4:	cmp	x1, x0
  4220d8:	b.lt	422098 <_obstack_memory_used@@Base+0x5eb8>  // b.tstop
  4220dc:	ldr	x0, [sp, #40]
  4220e0:	ldr	x0, [x0, #16]
  4220e4:	bl	402b60 <free@plt>
  4220e8:	ldr	x0, [sp, #56]
  4220ec:	add	x0, x0, #0x1
  4220f0:	str	x0, [sp, #56]
  4220f4:	ldr	x0, [sp, #24]
  4220f8:	ldr	x1, [x0, #136]
  4220fc:	ldr	x0, [sp, #56]
  422100:	cmp	x1, x0
  422104:	b.cs	42206c <_obstack_memory_used@@Base+0x5e8c>  // b.hs, b.nlast
  422108:	ldr	x0, [sp, #24]
  42210c:	ldr	x0, [x0, #64]
  422110:	bl	402b60 <free@plt>
  422114:	ldr	x0, [sp, #24]
  422118:	ldr	x1, [x0, #120]
  42211c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  422120:	add	x0, x0, #0x3d0
  422124:	cmp	x1, x0
  422128:	b.eq	422138 <_obstack_memory_used@@Base+0x5f58>  // b.none
  42212c:	ldr	x0, [sp, #24]
  422130:	ldr	x0, [x0, #120]
  422134:	bl	402b60 <free@plt>
  422138:	ldr	x0, [sp, #24]
  42213c:	ldr	x0, [x0, #224]
  422140:	bl	402b60 <free@plt>
  422144:	ldr	x0, [sp, #24]
  422148:	bl	402b60 <free@plt>
  42214c:	nop
  422150:	ldp	x29, x30, [sp], #64
  422154:	ret
  422158:	stp	x29, x30, [sp, #-48]!
  42215c:	mov	x29, sp
  422160:	str	x0, [sp, #24]
  422164:	ldr	x0, [sp, #24]
  422168:	ldr	x0, [x0]
  42216c:	str	x0, [sp, #40]
  422170:	ldr	x0, [sp, #40]
  422174:	cmp	x0, #0x0
  422178:	cset	w0, ne  // ne = any
  42217c:	and	w0, w0, #0xff
  422180:	and	x0, x0, #0xff
  422184:	cmp	x0, #0x0
  422188:	b.eq	422194 <_obstack_memory_used@@Base+0x5fb4>  // b.none
  42218c:	ldr	x0, [sp, #40]
  422190:	bl	421eec <_obstack_memory_used@@Base+0x5d0c>
  422194:	ldr	x0, [sp, #24]
  422198:	str	xzr, [x0]
  42219c:	ldr	x0, [sp, #24]
  4221a0:	str	xzr, [x0, #8]
  4221a4:	ldr	x0, [sp, #24]
  4221a8:	ldr	x0, [x0, #32]
  4221ac:	bl	402b60 <free@plt>
  4221b0:	ldr	x0, [sp, #24]
  4221b4:	str	xzr, [x0, #32]
  4221b8:	ldr	x0, [sp, #24]
  4221bc:	ldr	x0, [x0, #40]
  4221c0:	bl	402b60 <free@plt>
  4221c4:	ldr	x0, [sp, #24]
  4221c8:	str	xzr, [x0, #40]
  4221cc:	nop
  4221d0:	ldp	x29, x30, [sp], #48
  4221d4:	ret
  4221d8:	stp	x29, x30, [sp, #-224]!
  4221dc:	mov	x29, sp
  4221e0:	str	x0, [sp, #40]
  4221e4:	str	x1, [sp, #32]
  4221e8:	str	x2, [sp, #24]
  4221ec:	str	x3, [sp, #16]
  4221f0:	str	wzr, [sp, #212]
  4221f4:	ldr	x0, [sp, #40]
  4221f8:	ldrb	w1, [x0, #56]
  4221fc:	and	w1, w1, #0xfffffff7
  422200:	strb	w1, [x0, #56]
  422204:	ldr	x0, [sp, #40]
  422208:	ldr	x1, [sp, #16]
  42220c:	str	x1, [x0, #24]
  422210:	ldr	x0, [sp, #40]
  422214:	ldrb	w1, [x0, #56]
  422218:	and	w1, w1, #0xffffffbf
  42221c:	strb	w1, [x0, #56]
  422220:	ldr	x0, [sp, #40]
  422224:	ldrb	w0, [x0, #56]
  422228:	ubfx	x0, x0, #6, #1
  42222c:	and	w2, w0, #0xff
  422230:	ldr	x1, [sp, #40]
  422234:	ldrb	w0, [x1, #56]
  422238:	bfi	w0, w2, #5, #1
  42223c:	strb	w0, [x1, #56]
  422240:	ldr	x0, [sp, #40]
  422244:	str	xzr, [x0, #16]
  422248:	ldr	x0, [sp, #40]
  42224c:	str	xzr, [x0, #48]
  422250:	ldr	x0, [sp, #40]
  422254:	ldrb	w1, [x0, #56]
  422258:	and	w1, w1, #0xfffffffe
  42225c:	strb	w1, [x0, #56]
  422260:	ldr	x0, [sp, #40]
  422264:	ldrb	w1, [x0, #56]
  422268:	and	w1, w1, #0xfffffff9
  42226c:	strb	w1, [x0, #56]
  422270:	ldr	x0, [sp, #40]
  422274:	ldr	x0, [x0]
  422278:	str	x0, [sp, #216]
  42227c:	ldr	x0, [sp, #40]
  422280:	ldr	x0, [x0, #8]
  422284:	cmp	x0, #0xe7
  422288:	cset	w0, ls  // ls = plast
  42228c:	and	w0, w0, #0xff
  422290:	and	x0, x0, #0xff
  422294:	cmp	x0, #0x0
  422298:	b.eq	4222dc <_obstack_memory_used@@Base+0x60fc>  // b.none
  42229c:	ldr	x0, [sp, #40]
  4222a0:	ldr	x0, [x0]
  4222a4:	mov	x1, #0xe8                  	// #232
  4222a8:	bl	4029e0 <realloc@plt>
  4222ac:	str	x0, [sp, #216]
  4222b0:	ldr	x0, [sp, #216]
  4222b4:	cmp	x0, #0x0
  4222b8:	b.ne	4222c4 <_obstack_memory_used@@Base+0x60e4>  // b.any
  4222bc:	mov	w0, #0xc                   	// #12
  4222c0:	b	4224dc <_obstack_memory_used@@Base+0x62fc>
  4222c4:	ldr	x0, [sp, #40]
  4222c8:	mov	x1, #0xe8                  	// #232
  4222cc:	str	x1, [x0, #8]
  4222d0:	ldr	x0, [sp, #40]
  4222d4:	ldr	x1, [sp, #216]
  4222d8:	str	x1, [x0]
  4222dc:	ldr	x0, [sp, #40]
  4222e0:	mov	x1, #0xe8                  	// #232
  4222e4:	str	x1, [x0, #16]
  4222e8:	ldr	x1, [sp, #24]
  4222ec:	ldr	x0, [sp, #216]
  4222f0:	bl	4224e4 <_obstack_memory_used@@Base+0x6304>
  4222f4:	str	w0, [sp, #212]
  4222f8:	ldr	w0, [sp, #212]
  4222fc:	cmp	w0, #0x0
  422300:	cset	w0, ne  // ne = any
  422304:	and	w0, w0, #0xff
  422308:	and	x0, x0, #0xff
  42230c:	cmp	x0, #0x0
  422310:	b.eq	422334 <_obstack_memory_used@@Base+0x6154>  // b.none
  422314:	ldr	x0, [sp, #216]
  422318:	bl	421eec <_obstack_memory_used@@Base+0x5d0c>
  42231c:	ldr	x0, [sp, #40]
  422320:	str	xzr, [x0]
  422324:	ldr	x0, [sp, #40]
  422328:	str	xzr, [x0, #8]
  42232c:	ldr	w0, [sp, #212]
  422330:	b	4224dc <_obstack_memory_used@@Base+0x62fc>
  422334:	ldr	x1, [sp, #24]
  422338:	ldr	x0, [sp, #40]
  42233c:	ldr	x2, [x0, #40]
  422340:	ldr	x0, [sp, #16]
  422344:	and	x0, x0, #0x400000
  422348:	cmp	x0, #0x0
  42234c:	cset	w0, ne  // ne = any
  422350:	and	w3, w0, #0xff
  422354:	add	x0, sp, #0x38
  422358:	ldr	x5, [sp, #216]
  42235c:	mov	w4, w3
  422360:	mov	x3, x2
  422364:	mov	x2, x1
  422368:	ldr	x1, [sp, #32]
  42236c:	bl	41c818 <_obstack_memory_used@@Base+0x638>
  422370:	str	w0, [sp, #212]
  422374:	ldr	w0, [sp, #212]
  422378:	cmp	w0, #0x0
  42237c:	cset	w0, ne  // ne = any
  422380:	and	w0, w0, #0xff
  422384:	and	x0, x0, #0xff
  422388:	cmp	x0, #0x0
  42238c:	b.eq	4223d4 <_obstack_memory_used@@Base+0x61f4>  // b.none
  422390:	nop
  422394:	b	4223a4 <_obstack_memory_used@@Base+0x61c4>
  422398:	nop
  42239c:	b	4223a4 <_obstack_memory_used@@Base+0x61c4>
  4223a0:	nop
  4223a4:	ldr	x0, [sp, #40]
  4223a8:	bl	422adc <_obstack_memory_used@@Base+0x68fc>
  4223ac:	add	x0, sp, #0x38
  4223b0:	bl	41ede8 <_obstack_memory_used@@Base+0x2c08>
  4223b4:	ldr	x0, [sp, #216]
  4223b8:	bl	421eec <_obstack_memory_used@@Base+0x5d0c>
  4223bc:	ldr	x0, [sp, #40]
  4223c0:	str	xzr, [x0]
  4223c4:	ldr	x0, [sp, #40]
  4223c8:	str	xzr, [x0, #8]
  4223cc:	ldr	w0, [sp, #212]
  4223d0:	b	4224dc <_obstack_memory_used@@Base+0x62fc>
  4223d4:	ldr	x0, [sp, #40]
  4223d8:	str	xzr, [x0, #48]
  4223dc:	add	x1, sp, #0xd4
  4223e0:	add	x0, sp, #0x38
  4223e4:	mov	x3, x1
  4223e8:	ldr	x2, [sp, #16]
  4223ec:	ldr	x1, [sp, #40]
  4223f0:	bl	425d38 <_obstack_memory_used@@Base+0x9b58>
  4223f4:	mov	x1, x0
  4223f8:	ldr	x0, [sp, #216]
  4223fc:	str	x1, [x0, #104]
  422400:	ldr	x0, [sp, #216]
  422404:	ldr	x0, [x0, #104]
  422408:	cmp	x0, #0x0
  42240c:	cset	w0, eq  // eq = none
  422410:	and	w0, w0, #0xff
  422414:	and	x0, x0, #0xff
  422418:	cmp	x0, #0x0
  42241c:	b.ne	422398 <_obstack_memory_used@@Base+0x61b8>  // b.any
  422420:	ldr	x0, [sp, #40]
  422424:	bl	42326c <_obstack_memory_used@@Base+0x708c>
  422428:	str	w0, [sp, #212]
  42242c:	ldr	w0, [sp, #212]
  422430:	cmp	w0, #0x0
  422434:	cset	w0, ne  // ne = any
  422438:	and	w0, w0, #0xff
  42243c:	and	x0, x0, #0xff
  422440:	cmp	x0, #0x0
  422444:	b.ne	4223a0 <_obstack_memory_used@@Base+0x61c0>  // b.any
  422448:	ldr	x0, [sp, #216]
  42244c:	ldrb	w0, [x0, #176]
  422450:	and	w0, w0, #0x4
  422454:	and	w0, w0, #0xff
  422458:	cmp	w0, #0x0
  42245c:	b.eq	422488 <_obstack_memory_used@@Base+0x62a8>  // b.none
  422460:	ldr	x0, [sp, #16]
  422464:	and	x0, x0, #0x400000
  422468:	cmp	x0, #0x0
  42246c:	b.ne	422488 <_obstack_memory_used@@Base+0x62a8>  // b.any
  422470:	ldr	x0, [sp, #40]
  422474:	ldr	x0, [x0, #40]
  422478:	cmp	x0, #0x0
  42247c:	b.ne	422488 <_obstack_memory_used@@Base+0x62a8>  // b.any
  422480:	ldr	x0, [sp, #216]
  422484:	bl	422f28 <_obstack_memory_used@@Base+0x6d48>
  422488:	ldr	x0, [sp, #216]
  42248c:	bl	422b68 <_obstack_memory_used@@Base+0x6988>
  422490:	str	w0, [sp, #212]
  422494:	ldr	x0, [sp, #40]
  422498:	bl	422adc <_obstack_memory_used@@Base+0x68fc>
  42249c:	add	x0, sp, #0x38
  4224a0:	bl	41ede8 <_obstack_memory_used@@Base+0x2c08>
  4224a4:	ldr	w0, [sp, #212]
  4224a8:	cmp	w0, #0x0
  4224ac:	cset	w0, ne  // ne = any
  4224b0:	and	w0, w0, #0xff
  4224b4:	and	x0, x0, #0xff
  4224b8:	cmp	x0, #0x0
  4224bc:	b.eq	4224d8 <_obstack_memory_used@@Base+0x62f8>  // b.none
  4224c0:	ldr	x0, [sp, #216]
  4224c4:	bl	421eec <_obstack_memory_used@@Base+0x5d0c>
  4224c8:	ldr	x0, [sp, #40]
  4224cc:	str	xzr, [x0]
  4224d0:	ldr	x0, [sp, #40]
  4224d4:	str	xzr, [x0, #8]
  4224d8:	ldr	w0, [sp, #212]
  4224dc:	ldp	x29, x30, [sp], #224
  4224e0:	ret
  4224e4:	stp	x29, x30, [sp, #-96]!
  4224e8:	mov	x29, sp
  4224ec:	str	x0, [sp, #24]
  4224f0:	str	x1, [sp, #16]
  4224f4:	mov	x0, #0x8                   	// #8
  4224f8:	str	x0, [sp, #64]
  4224fc:	ldr	x0, [sp, #64]
  422500:	cmp	x0, #0x18
  422504:	b.ls	422514 <_obstack_memory_used@@Base+0x6334>  // b.plast
  422508:	ldr	x0, [sp, #64]
  42250c:	cmp	x0, #0x10
  422510:	b.ls	42257c <_obstack_memory_used@@Base+0x639c>  // b.plast
  422514:	ldr	x0, [sp, #64]
  422518:	cmp	x0, #0x18
  42251c:	b.ls	42257c <_obstack_memory_used@@Base+0x639c>  // b.plast
  422520:	ldr	x0, [sp, #64]
  422524:	cmp	x0, #0x18
  422528:	b.ls	42257c <_obstack_memory_used@@Base+0x639c>  // b.plast
  42252c:	ldr	x0, [sp, #64]
  422530:	cmp	x0, #0x18
  422534:	b.ls	422544 <_obstack_memory_used@@Base+0x6364>  // b.plast
  422538:	ldr	x0, [sp, #64]
  42253c:	cmp	x0, #0x10
  422540:	b.ls	422570 <_obstack_memory_used@@Base+0x6390>  // b.plast
  422544:	ldr	x0, [sp, #64]
  422548:	cmp	x0, #0x18
  42254c:	b.ls	422568 <_obstack_memory_used@@Base+0x6388>  // b.plast
  422550:	ldr	x2, [sp, #64]
  422554:	ldr	x1, [sp, #64]
  422558:	mov	x0, #0x10                  	// #16
  42255c:	cmp	x2, #0x10
  422560:	csel	x0, x1, x0, cs  // cs = hs, nlast
  422564:	b	422578 <_obstack_memory_used@@Base+0x6398>
  422568:	mov	x0, #0x18                  	// #24
  42256c:	b	422578 <_obstack_memory_used@@Base+0x6398>
  422570:	mov	x0, #0x10                  	// #16
  422574:	b	422580 <_obstack_memory_used@@Base+0x63a0>
  422578:	b	422580 <_obstack_memory_used@@Base+0x63a0>
  42257c:	mov	x0, #0x18                  	// #24
  422580:	str	x0, [sp, #56]
  422584:	mov	x2, #0xe8                  	// #232
  422588:	mov	w1, #0x0                   	// #0
  42258c:	ldr	x0, [sp, #24]
  422590:	bl	402980 <memset@plt>
  422594:	ldr	x0, [sp, #24]
  422598:	mov	w1, #0xf                   	// #15
  42259c:	str	w1, [x0, #128]
  4225a0:	mov	x1, #0xffffffffffffffff    	// #-1
  4225a4:	ldr	x0, [sp, #56]
  4225a8:	udiv	x0, x1, x0
  4225ac:	cmp	x0, #0x0
  4225b0:	b.lt	4225c8 <_obstack_memory_used@@Base+0x63e8>  // b.tstop
  4225b4:	mov	x1, #0xffffffffffffffff    	// #-1
  4225b8:	ldr	x0, [sp, #56]
  4225bc:	udiv	x0, x1, x0
  4225c0:	lsr	x0, x0, #1
  4225c4:	b	4225cc <_obstack_memory_used@@Base+0x63ec>
  4225c8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  4225cc:	ldr	x1, [sp, #16]
  4225d0:	cmp	x0, x1
  4225d4:	cset	w0, ls  // ls = plast
  4225d8:	and	w0, w0, #0xff
  4225dc:	and	x0, x0, #0xff
  4225e0:	cmp	x0, #0x0
  4225e4:	b.eq	4225f0 <_obstack_memory_used@@Base+0x6410>  // b.none
  4225e8:	mov	w0, #0xc                   	// #12
  4225ec:	b	4228fc <_obstack_memory_used@@Base+0x671c>
  4225f0:	ldr	x0, [sp, #16]
  4225f4:	add	x1, x0, #0x1
  4225f8:	ldr	x0, [sp, #24]
  4225fc:	str	x1, [x0, #8]
  422600:	ldr	x0, [sp, #24]
  422604:	ldr	x0, [x0, #8]
  422608:	lsl	x0, x0, #4
  42260c:	bl	4028b0 <malloc@plt>
  422610:	mov	x1, x0
  422614:	ldr	x0, [sp, #24]
  422618:	str	x1, [x0]
  42261c:	mov	x0, #0x1                   	// #1
  422620:	str	x0, [sp, #88]
  422624:	ldr	x1, [sp, #88]
  422628:	ldr	x0, [sp, #16]
  42262c:	cmp	x1, x0
  422630:	b.hi	422644 <_obstack_memory_used@@Base+0x6464>  // b.pmore
  422634:	ldr	x0, [sp, #88]
  422638:	lsl	x0, x0, #1
  42263c:	str	x0, [sp, #88]
  422640:	b	422624 <_obstack_memory_used@@Base+0x6444>
  422644:	nop
  422648:	ldr	x1, [sp, #88]
  42264c:	mov	x0, #0x18                  	// #24
  422650:	bl	4029c0 <calloc@plt>
  422654:	mov	x1, x0
  422658:	ldr	x0, [sp, #24]
  42265c:	str	x1, [x0, #64]
  422660:	ldr	x0, [sp, #88]
  422664:	sub	x1, x0, #0x1
  422668:	ldr	x0, [sp, #24]
  42266c:	str	x1, [x0, #136]
  422670:	bl	402b80 <__ctype_get_mb_cur_max@plt>
  422674:	mov	w1, w0
  422678:	ldr	x0, [sp, #24]
  42267c:	str	w1, [x0, #180]
  422680:	mov	w0, #0xe                   	// #14
  422684:	bl	402870 <nl_langinfo@plt>
  422688:	str	x0, [sp, #48]
  42268c:	ldr	x0, [sp, #48]
  422690:	ldrb	w0, [x0]
  422694:	cmp	w0, #0x55
  422698:	b.eq	4226ac <_obstack_memory_used@@Base+0x64cc>  // b.none
  42269c:	ldr	x0, [sp, #48]
  4226a0:	ldrb	w0, [x0]
  4226a4:	cmp	w0, #0x75
  4226a8:	b.ne	42274c <_obstack_memory_used@@Base+0x656c>  // b.any
  4226ac:	ldr	x0, [sp, #48]
  4226b0:	add	x0, x0, #0x1
  4226b4:	ldrb	w0, [x0]
  4226b8:	cmp	w0, #0x54
  4226bc:	b.eq	4226d4 <_obstack_memory_used@@Base+0x64f4>  // b.none
  4226c0:	ldr	x0, [sp, #48]
  4226c4:	add	x0, x0, #0x1
  4226c8:	ldrb	w0, [x0]
  4226cc:	cmp	w0, #0x74
  4226d0:	b.ne	42274c <_obstack_memory_used@@Base+0x656c>  // b.any
  4226d4:	ldr	x0, [sp, #48]
  4226d8:	add	x0, x0, #0x2
  4226dc:	ldrb	w0, [x0]
  4226e0:	cmp	w0, #0x46
  4226e4:	b.eq	4226fc <_obstack_memory_used@@Base+0x651c>  // b.none
  4226e8:	ldr	x0, [sp, #48]
  4226ec:	add	x0, x0, #0x2
  4226f0:	ldrb	w0, [x0]
  4226f4:	cmp	w0, #0x66
  4226f8:	b.ne	42274c <_obstack_memory_used@@Base+0x656c>  // b.any
  4226fc:	ldr	x0, [sp, #48]
  422700:	add	x0, x0, #0x3
  422704:	ldrb	w0, [x0]
  422708:	cmp	w0, #0x2d
  42270c:	b.ne	422718 <_obstack_memory_used@@Base+0x6538>  // b.any
  422710:	mov	x0, #0x4                   	// #4
  422714:	b	42271c <_obstack_memory_used@@Base+0x653c>
  422718:	mov	x0, #0x3                   	// #3
  42271c:	ldr	x1, [sp, #48]
  422720:	add	x2, x1, x0
  422724:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  422728:	add	x1, x0, #0x3f0
  42272c:	mov	x0, x2
  422730:	bl	402b30 <strcmp@plt>
  422734:	cmp	w0, #0x0
  422738:	b.ne	42274c <_obstack_memory_used@@Base+0x656c>  // b.any
  42273c:	ldr	x0, [sp, #24]
  422740:	ldrb	w1, [x0, #176]
  422744:	orr	w1, w1, #0x4
  422748:	strb	w1, [x0, #176]
  42274c:	ldr	x0, [sp, #24]
  422750:	ldrb	w1, [x0, #176]
  422754:	and	w1, w1, #0xfffffff7
  422758:	strb	w1, [x0, #176]
  42275c:	ldr	x0, [sp, #24]
  422760:	ldr	w0, [x0, #180]
  422764:	cmp	w0, #0x1
  422768:	b.le	4228b0 <_obstack_memory_used@@Base+0x66d0>
  42276c:	ldr	x0, [sp, #24]
  422770:	ldrb	w0, [x0, #176]
  422774:	and	w0, w0, #0x4
  422778:	and	w0, w0, #0xff
  42277c:	cmp	w0, #0x0
  422780:	b.eq	422798 <_obstack_memory_used@@Base+0x65b8>  // b.none
  422784:	ldr	x0, [sp, #24]
  422788:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x1ae20>
  42278c:	add	x1, x1, #0x3d0
  422790:	str	x1, [x0, #120]
  422794:	b	4228b0 <_obstack_memory_used@@Base+0x66d0>
  422798:	mov	x1, #0x1                   	// #1
  42279c:	mov	x0, #0x20                  	// #32
  4227a0:	bl	4029c0 <calloc@plt>
  4227a4:	mov	x1, x0
  4227a8:	ldr	x0, [sp, #24]
  4227ac:	str	x1, [x0, #120]
  4227b0:	ldr	x0, [sp, #24]
  4227b4:	ldr	x0, [x0, #120]
  4227b8:	cmp	x0, #0x0
  4227bc:	cset	w0, eq  // eq = none
  4227c0:	and	w0, w0, #0xff
  4227c4:	and	x0, x0, #0xff
  4227c8:	cmp	x0, #0x0
  4227cc:	b.eq	4227d8 <_obstack_memory_used@@Base+0x65f8>  // b.none
  4227d0:	mov	w0, #0xc                   	// #12
  4227d4:	b	4228fc <_obstack_memory_used@@Base+0x671c>
  4227d8:	str	wzr, [sp, #84]
  4227dc:	str	wzr, [sp, #76]
  4227e0:	b	4228a4 <_obstack_memory_used@@Base+0x66c4>
  4227e4:	str	wzr, [sp, #80]
  4227e8:	b	42288c <_obstack_memory_used@@Base+0x66ac>
  4227ec:	ldr	w0, [sp, #76]
  4227f0:	bl	402a80 <btowc@plt>
  4227f4:	str	w0, [sp, #44]
  4227f8:	ldr	w0, [sp, #44]
  4227fc:	cmn	w0, #0x1
  422800:	b.eq	422844 <_obstack_memory_used@@Base+0x6664>  // b.none
  422804:	ldr	x0, [sp, #24]
  422808:	ldr	x1, [x0, #120]
  42280c:	ldrsw	x0, [sp, #84]
  422810:	lsl	x0, x0, #3
  422814:	add	x0, x1, x0
  422818:	ldr	x2, [x0]
  42281c:	ldr	w0, [sp, #80]
  422820:	mov	x1, #0x1                   	// #1
  422824:	lsl	x1, x1, x0
  422828:	ldr	x0, [sp, #24]
  42282c:	ldr	x3, [x0, #120]
  422830:	ldrsw	x0, [sp, #84]
  422834:	lsl	x0, x0, #3
  422838:	add	x0, x3, x0
  42283c:	orr	x1, x2, x1
  422840:	str	x1, [x0]
  422844:	ldr	w0, [sp, #76]
  422848:	and	w0, w0, #0xffffff80
  42284c:	cmp	w0, #0x0
  422850:	b.ne	422874 <_obstack_memory_used@@Base+0x6694>  // b.any
  422854:	ldr	w0, [sp, #76]
  422858:	ldr	w1, [sp, #44]
  42285c:	cmp	w1, w0
  422860:	b.eq	422874 <_obstack_memory_used@@Base+0x6694>  // b.none
  422864:	ldr	x0, [sp, #24]
  422868:	ldrb	w1, [x0, #176]
  42286c:	orr	w1, w1, #0x8
  422870:	strb	w1, [x0, #176]
  422874:	ldr	w0, [sp, #80]
  422878:	add	w0, w0, #0x1
  42287c:	str	w0, [sp, #80]
  422880:	ldr	w0, [sp, #76]
  422884:	add	w0, w0, #0x1
  422888:	str	w0, [sp, #76]
  42288c:	ldr	w0, [sp, #80]
  422890:	cmp	w0, #0x3f
  422894:	b.le	4227ec <_obstack_memory_used@@Base+0x660c>
  422898:	ldr	w0, [sp, #84]
  42289c:	add	w0, w0, #0x1
  4228a0:	str	w0, [sp, #84]
  4228a4:	ldr	w0, [sp, #84]
  4228a8:	cmp	w0, #0x3
  4228ac:	b.le	4227e4 <_obstack_memory_used@@Base+0x6604>
  4228b0:	ldr	x0, [sp, #24]
  4228b4:	ldr	x0, [x0]
  4228b8:	cmp	x0, #0x0
  4228bc:	cset	w0, eq  // eq = none
  4228c0:	and	w0, w0, #0xff
  4228c4:	and	x0, x0, #0xff
  4228c8:	cmp	x0, #0x0
  4228cc:	b.ne	4228f0 <_obstack_memory_used@@Base+0x6710>  // b.any
  4228d0:	ldr	x0, [sp, #24]
  4228d4:	ldr	x0, [x0, #64]
  4228d8:	cmp	x0, #0x0
  4228dc:	cset	w0, eq  // eq = none
  4228e0:	and	w0, w0, #0xff
  4228e4:	and	x0, x0, #0xff
  4228e8:	cmp	x0, #0x0
  4228ec:	b.eq	4228f8 <_obstack_memory_used@@Base+0x6718>  // b.none
  4228f0:	mov	w0, #0xc                   	// #12
  4228f4:	b	4228fc <_obstack_memory_used@@Base+0x671c>
  4228f8:	mov	w0, #0x0                   	// #0
  4228fc:	ldp	x29, x30, [sp], #96
  422900:	ret
  422904:	stp	x29, x30, [sp, #-80]!
  422908:	mov	x29, sp
  42290c:	str	x0, [sp, #24]
  422910:	str	wzr, [sp, #76]
  422914:	str	wzr, [sp, #68]
  422918:	ldr	x0, [sp, #24]
  42291c:	ldrb	w1, [x0, #176]
  422920:	orr	w1, w1, #0x10
  422924:	strb	w1, [x0, #176]
  422928:	ldr	x0, [sp, #24]
  42292c:	ldrb	w0, [x0, #176]
  422930:	and	w0, w0, #0x8
  422934:	and	w0, w0, #0xff
  422938:	cmp	w0, #0x0
  42293c:	cset	w0, eq  // eq = none
  422940:	and	w0, w0, #0xff
  422944:	and	x0, x0, #0xff
  422948:	cmp	x0, #0x0
  42294c:	b.eq	422a18 <_obstack_memory_used@@Base+0x6838>  // b.none
  422950:	str	xzr, [sp, #56]
  422954:	mov	x0, #0x3ff0000             	// #67043328
  422958:	str	x0, [sp, #48]
  42295c:	mov	x0, #0xfffe                	// #65534
  422960:	movk	x0, #0x87ff, lsl #16
  422964:	str	x0, [sp, #40]
  422968:	mov	x0, #0x7fffffe             	// #134217726
  42296c:	str	x0, [sp, #32]
  422970:	ldr	x0, [sp, #48]
  422974:	lsl	x1, x0, #32
  422978:	ldr	x0, [sp, #56]
  42297c:	orr	x1, x1, x0
  422980:	ldr	x0, [sp, #24]
  422984:	str	x1, [x0, #184]
  422988:	ldr	x0, [sp, #32]
  42298c:	lsl	x1, x0, #32
  422990:	ldr	x0, [sp, #40]
  422994:	orr	x1, x1, x0
  422998:	ldr	x0, [sp, #24]
  42299c:	str	x1, [x0, #192]
  4229a0:	mov	w0, #0x2                   	// #2
  4229a4:	str	w0, [sp, #76]
  4229a8:	mov	w0, #0x80                  	// #128
  4229ac:	str	w0, [sp, #68]
  4229b0:	ldr	x0, [sp, #24]
  4229b4:	ldrb	w0, [x0, #176]
  4229b8:	ubfx	x0, x0, #2, #1
  4229bc:	and	w0, w0, #0xff
  4229c0:	and	x0, x0, #0xff
  4229c4:	cmp	x0, #0x0
  4229c8:	b.eq	422a18 <_obstack_memory_used@@Base+0x6838>  // b.none
  4229cc:	ldrsw	x0, [sp, #76]
  4229d0:	add	x0, x0, #0x16
  4229d4:	lsl	x0, x0, #3
  4229d8:	ldr	x1, [sp, #24]
  4229dc:	add	x0, x1, x0
  4229e0:	add	x3, x0, #0x8
  4229e4:	mov	w1, #0x100                 	// #256
  4229e8:	ldr	w0, [sp, #68]
  4229ec:	sub	w0, w1, w0
  4229f0:	add	w1, w0, #0x7
  4229f4:	cmp	w0, #0x0
  4229f8:	csel	w0, w1, w0, lt  // lt = tstop
  4229fc:	asr	w0, w0, #3
  422a00:	sxtw	x0, w0
  422a04:	mov	x2, x0
  422a08:	mov	w1, #0x0                   	// #0
  422a0c:	mov	x0, x3
  422a10:	bl	402980 <memset@plt>
  422a14:	b	422ad4 <_obstack_memory_used@@Base+0x68f4>
  422a18:	nop
  422a1c:	b	422ac8 <_obstack_memory_used@@Base+0x68e8>
  422a20:	str	wzr, [sp, #72]
  422a24:	b	422ab0 <_obstack_memory_used@@Base+0x68d0>
  422a28:	bl	402b40 <__ctype_b_loc@plt>
  422a2c:	ldr	x1, [x0]
  422a30:	ldrsw	x0, [sp, #68]
  422a34:	lsl	x0, x0, #1
  422a38:	add	x0, x1, x0
  422a3c:	ldrh	w0, [x0]
  422a40:	and	w0, w0, #0x8
  422a44:	cmp	w0, #0x0
  422a48:	b.ne	422a58 <_obstack_memory_used@@Base+0x6878>  // b.any
  422a4c:	ldr	w0, [sp, #68]
  422a50:	cmp	w0, #0x5f
  422a54:	b.ne	422a98 <_obstack_memory_used@@Base+0x68b8>  // b.any
  422a58:	ldr	x1, [sp, #24]
  422a5c:	ldrsw	x0, [sp, #76]
  422a60:	add	x0, x0, #0x16
  422a64:	lsl	x0, x0, #3
  422a68:	add	x0, x1, x0
  422a6c:	ldr	x1, [x0, #8]
  422a70:	ldr	w0, [sp, #72]
  422a74:	mov	x2, #0x1                   	// #1
  422a78:	lsl	x0, x2, x0
  422a7c:	orr	x1, x1, x0
  422a80:	ldr	x2, [sp, #24]
  422a84:	ldrsw	x0, [sp, #76]
  422a88:	add	x0, x0, #0x16
  422a8c:	lsl	x0, x0, #3
  422a90:	add	x0, x2, x0
  422a94:	str	x1, [x0, #8]
  422a98:	ldr	w0, [sp, #72]
  422a9c:	add	w0, w0, #0x1
  422aa0:	str	w0, [sp, #72]
  422aa4:	ldr	w0, [sp, #68]
  422aa8:	add	w0, w0, #0x1
  422aac:	str	w0, [sp, #68]
  422ab0:	ldr	w0, [sp, #72]
  422ab4:	cmp	w0, #0x3f
  422ab8:	b.le	422a28 <_obstack_memory_used@@Base+0x6848>
  422abc:	ldr	w0, [sp, #76]
  422ac0:	add	w0, w0, #0x1
  422ac4:	str	w0, [sp, #76]
  422ac8:	ldr	w0, [sp, #76]
  422acc:	cmp	w0, #0x3
  422ad0:	b.le	422a20 <_obstack_memory_used@@Base+0x6840>
  422ad4:	ldp	x29, x30, [sp], #80
  422ad8:	ret
  422adc:	stp	x29, x30, [sp, #-64]!
  422ae0:	mov	x29, sp
  422ae4:	str	x0, [sp, #24]
  422ae8:	ldr	x0, [sp, #24]
  422aec:	ldr	x0, [x0]
  422af0:	str	x0, [sp, #48]
  422af4:	ldr	x0, [sp, #48]
  422af8:	ldr	x0, [x0, #112]
  422afc:	str	x0, [sp, #56]
  422b00:	b	422b20 <_obstack_memory_used@@Base+0x6940>
  422b04:	ldr	x0, [sp, #56]
  422b08:	ldr	x0, [x0]
  422b0c:	str	x0, [sp, #40]
  422b10:	ldr	x0, [sp, #56]
  422b14:	bl	402b60 <free@plt>
  422b18:	ldr	x0, [sp, #40]
  422b1c:	str	x0, [sp, #56]
  422b20:	ldr	x0, [sp, #56]
  422b24:	cmp	x0, #0x0
  422b28:	b.ne	422b04 <_obstack_memory_used@@Base+0x6924>  // b.any
  422b2c:	ldr	x0, [sp, #48]
  422b30:	str	xzr, [x0, #112]
  422b34:	ldr	x0, [sp, #48]
  422b38:	mov	w1, #0xf                   	// #15
  422b3c:	str	w1, [x0, #128]
  422b40:	ldr	x0, [sp, #48]
  422b44:	str	xzr, [x0, #104]
  422b48:	ldr	x0, [sp, #48]
  422b4c:	ldr	x0, [x0, #32]
  422b50:	bl	402b60 <free@plt>
  422b54:	ldr	x0, [sp, #48]
  422b58:	str	xzr, [x0, #32]
  422b5c:	nop
  422b60:	ldp	x29, x30, [sp], #64
  422b64:	ret
  422b68:	stp	x29, x30, [sp, #-128]!
  422b6c:	mov	x29, sp
  422b70:	str	x0, [sp, #24]
  422b74:	ldr	x0, [sp, #24]
  422b78:	ldr	x0, [x0, #104]
  422b7c:	ldr	x0, [x0, #24]
  422b80:	ldr	x0, [x0, #56]
  422b84:	str	x0, [sp, #104]
  422b88:	ldr	x0, [sp, #24]
  422b8c:	ldr	x1, [sp, #104]
  422b90:	str	x1, [x0, #144]
  422b94:	ldr	x0, [sp, #24]
  422b98:	ldr	x2, [x0, #48]
  422b9c:	ldr	x1, [sp, #104]
  422ba0:	mov	x0, x1
  422ba4:	lsl	x0, x0, #1
  422ba8:	add	x0, x0, x1
  422bac:	lsl	x0, x0, #3
  422bb0:	add	x1, x2, x0
  422bb4:	add	x0, sp, #0x28
  422bb8:	bl	41f218 <_obstack_memory_used@@Base+0x3038>
  422bbc:	str	w0, [sp, #64]
  422bc0:	ldr	w0, [sp, #64]
  422bc4:	cmp	w0, #0x0
  422bc8:	cset	w0, ne  // ne = any
  422bcc:	and	w0, w0, #0xff
  422bd0:	and	x0, x0, #0xff
  422bd4:	cmp	x0, #0x0
  422bd8:	b.eq	422be4 <_obstack_memory_used@@Base+0x6a04>  // b.none
  422bdc:	ldr	w0, [sp, #64]
  422be0:	b	422f20 <_obstack_memory_used@@Base+0x6d40>
  422be4:	ldr	x0, [sp, #24]
  422be8:	ldr	x0, [x0, #152]
  422bec:	cmp	x0, #0x0
  422bf0:	b.le	422d94 <_obstack_memory_used@@Base+0x6bb4>
  422bf4:	str	xzr, [sp, #120]
  422bf8:	b	422d84 <_obstack_memory_used@@Base+0x6ba4>
  422bfc:	ldr	x1, [sp, #56]
  422c00:	ldr	x0, [sp, #120]
  422c04:	lsl	x0, x0, #3
  422c08:	add	x0, x1, x0
  422c0c:	ldr	x0, [x0]
  422c10:	str	x0, [sp, #96]
  422c14:	ldr	x0, [sp, #24]
  422c18:	ldr	x1, [x0]
  422c1c:	ldr	x0, [sp, #96]
  422c20:	lsl	x0, x0, #4
  422c24:	add	x0, x1, x0
  422c28:	ldrb	w0, [x0, #8]
  422c2c:	str	w0, [sp, #92]
  422c30:	ldr	w0, [sp, #92]
  422c34:	cmp	w0, #0x4
  422c38:	b.ne	422d6c <_obstack_memory_used@@Base+0x6b8c>  // b.any
  422c3c:	str	xzr, [sp, #112]
  422c40:	b	422cb0 <_obstack_memory_used@@Base+0x6ad0>
  422c44:	ldr	x0, [sp, #24]
  422c48:	ldr	x1, [x0]
  422c4c:	ldr	x2, [sp, #56]
  422c50:	ldr	x0, [sp, #112]
  422c54:	lsl	x0, x0, #3
  422c58:	add	x0, x2, x0
  422c5c:	ldr	x0, [x0]
  422c60:	lsl	x0, x0, #4
  422c64:	add	x0, x1, x0
  422c68:	str	x0, [sp, #80]
  422c6c:	ldr	x0, [sp, #80]
  422c70:	ldrb	w0, [x0, #8]
  422c74:	cmp	w0, #0x9
  422c78:	b.ne	422ca4 <_obstack_memory_used@@Base+0x6ac4>  // b.any
  422c7c:	ldr	x0, [sp, #80]
  422c80:	ldr	x1, [x0]
  422c84:	ldr	x0, [sp, #24]
  422c88:	ldr	x2, [x0]
  422c8c:	ldr	x0, [sp, #96]
  422c90:	lsl	x0, x0, #4
  422c94:	add	x0, x2, x0
  422c98:	ldr	x0, [x0]
  422c9c:	cmp	x1, x0
  422ca0:	b.eq	422cc4 <_obstack_memory_used@@Base+0x6ae4>  // b.none
  422ca4:	ldr	x0, [sp, #112]
  422ca8:	add	x0, x0, #0x1
  422cac:	str	x0, [sp, #112]
  422cb0:	ldr	x0, [sp, #48]
  422cb4:	ldr	x1, [sp, #112]
  422cb8:	cmp	x1, x0
  422cbc:	b.lt	422c44 <_obstack_memory_used@@Base+0x6a64>  // b.tstop
  422cc0:	b	422cc8 <_obstack_memory_used@@Base+0x6ae8>
  422cc4:	nop
  422cc8:	ldr	x0, [sp, #48]
  422ccc:	ldr	x1, [sp, #112]
  422cd0:	cmp	x1, x0
  422cd4:	b.eq	422d74 <_obstack_memory_used@@Base+0x6b94>  // b.none
  422cd8:	ldr	w0, [sp, #92]
  422cdc:	cmp	w0, #0x4
  422ce0:	b.ne	422d78 <_obstack_memory_used@@Base+0x6b98>  // b.any
  422ce4:	ldr	x0, [sp, #24]
  422ce8:	ldr	x2, [x0, #40]
  422cec:	ldr	x1, [sp, #96]
  422cf0:	mov	x0, x1
  422cf4:	lsl	x0, x0, #1
  422cf8:	add	x0, x0, x1
  422cfc:	lsl	x0, x0, #3
  422d00:	add	x0, x2, x0
  422d04:	ldr	x0, [x0, #16]
  422d08:	ldr	x0, [x0]
  422d0c:	str	x0, [sp, #72]
  422d10:	add	x0, sp, #0x28
  422d14:	ldr	x1, [sp, #72]
  422d18:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  422d1c:	cmp	x0, #0x0
  422d20:	b.ne	422d78 <_obstack_memory_used@@Base+0x6b98>  // b.any
  422d24:	ldr	x0, [sp, #24]
  422d28:	ldr	x2, [x0, #48]
  422d2c:	ldr	x1, [sp, #72]
  422d30:	mov	x0, x1
  422d34:	lsl	x0, x0, #1
  422d38:	add	x0, x0, x1
  422d3c:	lsl	x0, x0, #3
  422d40:	add	x1, x2, x0
  422d44:	add	x0, sp, #0x28
  422d48:	bl	41fb00 <_obstack_memory_used@@Base+0x3920>
  422d4c:	str	w0, [sp, #68]
  422d50:	ldr	w0, [sp, #68]
  422d54:	cmp	w0, #0x0
  422d58:	b.eq	422d64 <_obstack_memory_used@@Base+0x6b84>  // b.none
  422d5c:	ldr	w0, [sp, #68]
  422d60:	b	422f20 <_obstack_memory_used@@Base+0x6d40>
  422d64:	str	xzr, [sp, #120]
  422d68:	b	422d78 <_obstack_memory_used@@Base+0x6b98>
  422d6c:	nop
  422d70:	b	422d78 <_obstack_memory_used@@Base+0x6b98>
  422d74:	nop
  422d78:	ldr	x0, [sp, #120]
  422d7c:	add	x0, x0, #0x1
  422d80:	str	x0, [sp, #120]
  422d84:	ldr	x0, [sp, #48]
  422d88:	ldr	x1, [sp, #120]
  422d8c:	cmp	x1, x0
  422d90:	b.lt	422bfc <_obstack_memory_used@@Base+0x6a1c>  // b.tstop
  422d94:	add	x1, sp, #0x28
  422d98:	add	x0, sp, #0x40
  422d9c:	mov	w3, #0x0                   	// #0
  422da0:	mov	x2, x1
  422da4:	ldr	x1, [sp, #24]
  422da8:	bl	420a10 <_obstack_memory_used@@Base+0x4830>
  422dac:	mov	x1, x0
  422db0:	ldr	x0, [sp, #24]
  422db4:	str	x1, [x0, #72]
  422db8:	ldr	x0, [sp, #24]
  422dbc:	ldr	x0, [x0, #72]
  422dc0:	cmp	x0, #0x0
  422dc4:	cset	w0, eq  // eq = none
  422dc8:	and	w0, w0, #0xff
  422dcc:	and	x0, x0, #0xff
  422dd0:	cmp	x0, #0x0
  422dd4:	b.eq	422de0 <_obstack_memory_used@@Base+0x6c00>  // b.none
  422dd8:	ldr	w0, [sp, #64]
  422ddc:	b	422f20 <_obstack_memory_used@@Base+0x6d40>
  422de0:	ldr	x0, [sp, #24]
  422de4:	ldr	x0, [x0, #72]
  422de8:	ldrb	w0, [x0, #104]
  422dec:	and	w0, w0, #0xffffff80
  422df0:	and	w0, w0, #0xff
  422df4:	cmp	w0, #0x0
  422df8:	b.eq	422ee4 <_obstack_memory_used@@Base+0x6d04>  // b.none
  422dfc:	add	x1, sp, #0x28
  422e00:	add	x0, sp, #0x40
  422e04:	mov	w3, #0x1                   	// #1
  422e08:	mov	x2, x1
  422e0c:	ldr	x1, [sp, #24]
  422e10:	bl	420a10 <_obstack_memory_used@@Base+0x4830>
  422e14:	mov	x1, x0
  422e18:	ldr	x0, [sp, #24]
  422e1c:	str	x1, [x0, #80]
  422e20:	add	x1, sp, #0x28
  422e24:	add	x0, sp, #0x40
  422e28:	mov	w3, #0x2                   	// #2
  422e2c:	mov	x2, x1
  422e30:	ldr	x1, [sp, #24]
  422e34:	bl	420a10 <_obstack_memory_used@@Base+0x4830>
  422e38:	mov	x1, x0
  422e3c:	ldr	x0, [sp, #24]
  422e40:	str	x1, [x0, #88]
  422e44:	add	x1, sp, #0x28
  422e48:	add	x0, sp, #0x40
  422e4c:	mov	w3, #0x6                   	// #6
  422e50:	mov	x2, x1
  422e54:	ldr	x1, [sp, #24]
  422e58:	bl	420a10 <_obstack_memory_used@@Base+0x4830>
  422e5c:	mov	x1, x0
  422e60:	ldr	x0, [sp, #24]
  422e64:	str	x1, [x0, #96]
  422e68:	ldr	x0, [sp, #24]
  422e6c:	ldr	x0, [x0, #80]
  422e70:	cmp	x0, #0x0
  422e74:	cset	w0, eq  // eq = none
  422e78:	and	w0, w0, #0xff
  422e7c:	and	x0, x0, #0xff
  422e80:	cmp	x0, #0x0
  422e84:	b.ne	422ea8 <_obstack_memory_used@@Base+0x6cc8>  // b.any
  422e88:	ldr	x0, [sp, #24]
  422e8c:	ldr	x0, [x0, #88]
  422e90:	cmp	x0, #0x0
  422e94:	cset	w0, eq  // eq = none
  422e98:	and	w0, w0, #0xff
  422e9c:	and	x0, x0, #0xff
  422ea0:	cmp	x0, #0x0
  422ea4:	b.eq	422eb0 <_obstack_memory_used@@Base+0x6cd0>  // b.none
  422ea8:	mov	w0, #0x1                   	// #1
  422eac:	b	422eb4 <_obstack_memory_used@@Base+0x6cd4>
  422eb0:	mov	w0, #0x0                   	// #0
  422eb4:	cmp	w0, #0x0
  422eb8:	b.ne	422edc <_obstack_memory_used@@Base+0x6cfc>  // b.any
  422ebc:	ldr	x0, [sp, #24]
  422ec0:	ldr	x0, [x0, #96]
  422ec4:	cmp	x0, #0x0
  422ec8:	cset	w0, eq  // eq = none
  422ecc:	and	w0, w0, #0xff
  422ed0:	and	x0, x0, #0xff
  422ed4:	cmp	x0, #0x0
  422ed8:	b.eq	422f14 <_obstack_memory_used@@Base+0x6d34>  // b.none
  422edc:	ldr	w0, [sp, #64]
  422ee0:	b	422f20 <_obstack_memory_used@@Base+0x6d40>
  422ee4:	ldr	x0, [sp, #24]
  422ee8:	ldr	x1, [x0, #72]
  422eec:	ldr	x0, [sp, #24]
  422ef0:	str	x1, [x0, #96]
  422ef4:	ldr	x0, [sp, #24]
  422ef8:	ldr	x1, [x0, #96]
  422efc:	ldr	x0, [sp, #24]
  422f00:	str	x1, [x0, #88]
  422f04:	ldr	x0, [sp, #24]
  422f08:	ldr	x1, [x0, #88]
  422f0c:	ldr	x0, [sp, #24]
  422f10:	str	x1, [x0, #80]
  422f14:	ldr	x0, [sp, #56]
  422f18:	bl	402b60 <free@plt>
  422f1c:	mov	w0, #0x0                   	// #0
  422f20:	ldp	x29, x30, [sp], #128
  422f24:	ret
  422f28:	stp	x29, x30, [sp, #-64]!
  422f2c:	mov	x29, sp
  422f30:	str	x0, [sp, #24]
  422f34:	strb	wzr, [sp, #51]
  422f38:	strb	wzr, [sp, #50]
  422f3c:	str	xzr, [sp, #56]
  422f40:	b	4230f8 <_obstack_memory_used@@Base+0x6f18>
  422f44:	ldr	x0, [sp, #24]
  422f48:	ldr	x1, [x0]
  422f4c:	ldr	x0, [sp, #56]
  422f50:	lsl	x0, x0, #4
  422f54:	add	x0, x1, x0
  422f58:	ldrb	w0, [x0, #8]
  422f5c:	cmp	w0, #0xc
  422f60:	b.eq	423000 <_obstack_memory_used@@Base+0x6e20>  // b.none
  422f64:	cmp	w0, #0xc
  422f68:	b.gt	4230dc <_obstack_memory_used@@Base+0x6efc>
  422f6c:	cmp	w0, #0xb
  422f70:	b.gt	4230dc <_obstack_memory_used@@Base+0x6efc>
  422f74:	cmp	w0, #0x8
  422f78:	b.ge	4230e0 <_obstack_memory_used@@Base+0x6f00>  // b.tcont
  422f7c:	cmp	w0, #0x6
  422f80:	b.eq	423250 <_obstack_memory_used@@Base+0x7070>  // b.none
  422f84:	cmp	w0, #0x6
  422f88:	b.gt	4230dc <_obstack_memory_used@@Base+0x6efc>
  422f8c:	cmp	w0, #0x5
  422f90:	b.eq	423068 <_obstack_memory_used@@Base+0x6e88>  // b.none
  422f94:	cmp	w0, #0x5
  422f98:	b.gt	4230dc <_obstack_memory_used@@Base+0x6efc>
  422f9c:	cmp	w0, #0x4
  422fa0:	b.eq	4230e0 <_obstack_memory_used@@Base+0x6f00>  // b.none
  422fa4:	cmp	w0, #0x4
  422fa8:	b.gt	4230dc <_obstack_memory_used@@Base+0x6efc>
  422fac:	cmp	w0, #0x3
  422fb0:	b.eq	423074 <_obstack_memory_used@@Base+0x6e94>  // b.none
  422fb4:	cmp	w0, #0x3
  422fb8:	b.gt	4230dc <_obstack_memory_used@@Base+0x6efc>
  422fbc:	cmp	w0, #0x1
  422fc0:	b.eq	422fd0 <_obstack_memory_used@@Base+0x6df0>  // b.none
  422fc4:	cmp	w0, #0x2
  422fc8:	b.eq	4230e0 <_obstack_memory_used@@Base+0x6f00>  // b.none
  422fcc:	b	4230dc <_obstack_memory_used@@Base+0x6efc>
  422fd0:	ldr	x0, [sp, #24]
  422fd4:	ldr	x1, [x0]
  422fd8:	ldr	x0, [sp, #56]
  422fdc:	lsl	x0, x0, #4
  422fe0:	add	x0, x1, x0
  422fe4:	ldrb	w0, [x0]
  422fe8:	sxtb	w0, w0
  422fec:	cmp	w0, #0x0
  422ff0:	b.ge	4230e8 <_obstack_memory_used@@Base+0x6f08>  // b.tcont
  422ff4:	mov	w0, #0x1                   	// #1
  422ff8:	strb	w0, [sp, #51]
  422ffc:	b	4230e8 <_obstack_memory_used@@Base+0x6f08>
  423000:	ldr	x0, [sp, #24]
  423004:	ldr	x1, [x0]
  423008:	ldr	x0, [sp, #56]
  42300c:	lsl	x0, x0, #4
  423010:	add	x0, x1, x0
  423014:	ldr	w0, [x0]
  423018:	cmp	w0, #0x40
  42301c:	b.hi	423058 <_obstack_memory_used@@Base+0x6e78>  // b.pmore
  423020:	cmp	w0, #0x10
  423024:	b.cc	423258 <_obstack_memory_used@@Base+0x7078>  // b.lo, b.ul, b.last
  423028:	sub	w0, w0, #0x10
  42302c:	mov	x1, #0x1                   	// #1
  423030:	lsl	x1, x1, x0
  423034:	mov	w0, #0x10001               	// #65537
  423038:	movk	x0, #0x1, lsl #48
  42303c:	and	x0, x1, x0
  423040:	cmp	x0, #0x0
  423044:	cset	w0, ne  // ne = any
  423048:	and	w0, w0, #0xff
  42304c:	cmp	w0, #0x0
  423050:	b.ne	423060 <_obstack_memory_used@@Base+0x6e80>  // b.any
  423054:	b	423258 <_obstack_memory_used@@Base+0x7078>
  423058:	cmp	w0, #0x80
  42305c:	b.ne	423258 <_obstack_memory_used@@Base+0x7078>  // b.any
  423060:	nop
  423064:	b	4230ec <_obstack_memory_used@@Base+0x6f0c>
  423068:	mov	w0, #0x1                   	// #1
  42306c:	strb	w0, [sp, #50]
  423070:	b	4230ec <_obstack_memory_used@@Base+0x6f0c>
  423074:	str	wzr, [sp, #44]
  423078:	mov	w0, #0x2                   	// #2
  42307c:	str	w0, [sp, #52]
  423080:	b	4230cc <_obstack_memory_used@@Base+0x6eec>
  423084:	ldr	x0, [sp, #24]
  423088:	ldr	x1, [x0]
  42308c:	ldr	x0, [sp, #56]
  423090:	lsl	x0, x0, #4
  423094:	add	x0, x1, x0
  423098:	ldr	x1, [x0]
  42309c:	ldrsw	x0, [sp, #52]
  4230a0:	lsl	x0, x0, #3
  4230a4:	add	x0, x1, x0
  4230a8:	ldr	x1, [x0]
  4230ac:	ldr	w0, [sp, #44]
  4230b0:	lsr	x0, x1, x0
  4230b4:	cmp	x0, #0x0
  4230b8:	b.ne	423260 <_obstack_memory_used@@Base+0x7080>  // b.any
  4230bc:	str	wzr, [sp, #44]
  4230c0:	ldr	w0, [sp, #52]
  4230c4:	add	w0, w0, #0x1
  4230c8:	str	w0, [sp, #52]
  4230cc:	ldr	w0, [sp, #52]
  4230d0:	cmp	w0, #0x3
  4230d4:	b.le	423084 <_obstack_memory_used@@Base+0x6ea4>
  4230d8:	b	4230ec <_obstack_memory_used@@Base+0x6f0c>
  4230dc:	bl	402a90 <abort@plt>
  4230e0:	nop
  4230e4:	b	4230ec <_obstack_memory_used@@Base+0x6f0c>
  4230e8:	nop
  4230ec:	ldr	x0, [sp, #56]
  4230f0:	add	x0, x0, #0x1
  4230f4:	str	x0, [sp, #56]
  4230f8:	ldr	x0, [sp, #24]
  4230fc:	ldr	x1, [x0, #16]
  423100:	ldr	x0, [sp, #56]
  423104:	cmp	x1, x0
  423108:	b.hi	422f44 <_obstack_memory_used@@Base+0x6d64>  // b.pmore
  42310c:	ldrb	w0, [sp, #51]
  423110:	cmp	w0, #0x0
  423114:	b.ne	423124 <_obstack_memory_used@@Base+0x6f44>  // b.any
  423118:	ldrb	w0, [sp, #50]
  42311c:	cmp	w0, #0x0
  423120:	b.eq	4231f0 <_obstack_memory_used@@Base+0x7010>  // b.none
  423124:	str	xzr, [sp, #56]
  423128:	b	4231dc <_obstack_memory_used@@Base+0x6ffc>
  42312c:	ldr	x0, [sp, #24]
  423130:	ldr	x1, [x0]
  423134:	ldr	x0, [sp, #56]
  423138:	lsl	x0, x0, #4
  42313c:	add	x0, x1, x0
  423140:	ldrb	w0, [x0, #8]
  423144:	cmp	w0, #0x1
  423148:	b.ne	423194 <_obstack_memory_used@@Base+0x6fb4>  // b.any
  42314c:	ldr	x0, [sp, #24]
  423150:	ldr	x1, [x0]
  423154:	ldr	x0, [sp, #56]
  423158:	lsl	x0, x0, #4
  42315c:	add	x0, x1, x0
  423160:	ldrb	w0, [x0]
  423164:	sxtb	w0, w0
  423168:	cmp	w0, #0x0
  42316c:	b.ge	423194 <_obstack_memory_used@@Base+0x6fb4>  // b.tcont
  423170:	ldr	x0, [sp, #24]
  423174:	ldr	x1, [x0]
  423178:	ldr	x0, [sp, #56]
  42317c:	lsl	x0, x0, #4
  423180:	add	x0, x1, x0
  423184:	ldrb	w1, [x0, #10]
  423188:	and	w1, w1, #0xffffffdf
  42318c:	strb	w1, [x0, #10]
  423190:	b	4231d0 <_obstack_memory_used@@Base+0x6ff0>
  423194:	ldr	x0, [sp, #24]
  423198:	ldr	x1, [x0]
  42319c:	ldr	x0, [sp, #56]
  4231a0:	lsl	x0, x0, #4
  4231a4:	add	x0, x1, x0
  4231a8:	ldrb	w0, [x0, #8]
  4231ac:	cmp	w0, #0x5
  4231b0:	b.ne	4231d0 <_obstack_memory_used@@Base+0x6ff0>  // b.any
  4231b4:	ldr	x0, [sp, #24]
  4231b8:	ldr	x1, [x0]
  4231bc:	ldr	x0, [sp, #56]
  4231c0:	lsl	x0, x0, #4
  4231c4:	add	x0, x1, x0
  4231c8:	mov	w1, #0x7                   	// #7
  4231cc:	strb	w1, [x0, #8]
  4231d0:	ldr	x0, [sp, #56]
  4231d4:	add	x0, x0, #0x1
  4231d8:	str	x0, [sp, #56]
  4231dc:	ldr	x0, [sp, #24]
  4231e0:	ldr	x1, [x0, #16]
  4231e4:	ldr	x0, [sp, #56]
  4231e8:	cmp	x1, x0
  4231ec:	b.hi	42312c <_obstack_memory_used@@Base+0x6f4c>  // b.pmore
  4231f0:	ldr	x0, [sp, #24]
  4231f4:	mov	w1, #0x1                   	// #1
  4231f8:	str	w1, [x0, #180]
  4231fc:	ldr	x0, [sp, #24]
  423200:	ldrb	w1, [x0, #176]
  423204:	and	w1, w1, #0xfffffffb
  423208:	strb	w1, [x0, #176]
  42320c:	ldr	x0, [sp, #24]
  423210:	ldr	x0, [x0, #152]
  423214:	cmp	x0, #0x0
  423218:	b.gt	423228 <_obstack_memory_used@@Base+0x7048>
  42321c:	ldrb	w0, [sp, #50]
  423220:	cmp	w0, #0x0
  423224:	b.eq	423230 <_obstack_memory_used@@Base+0x7050>  // b.none
  423228:	mov	w0, #0x1                   	// #1
  42322c:	b	423234 <_obstack_memory_used@@Base+0x7054>
  423230:	mov	w0, #0x0                   	// #0
  423234:	and	w0, w0, #0x1
  423238:	and	w2, w0, #0xff
  42323c:	ldr	x1, [sp, #24]
  423240:	ldrb	w0, [x1, #176]
  423244:	bfi	w0, w2, #1, #1
  423248:	strb	w0, [x1, #176]
  42324c:	b	423264 <_obstack_memory_used@@Base+0x7084>
  423250:	nop
  423254:	b	423264 <_obstack_memory_used@@Base+0x7084>
  423258:	nop
  42325c:	b	423264 <_obstack_memory_used@@Base+0x7084>
  423260:	nop
  423264:	ldp	x29, x30, [sp], #64
  423268:	ret
  42326c:	stp	x29, x30, [sp, #-64]!
  423270:	mov	x29, sp
  423274:	str	x0, [sp, #24]
  423278:	ldr	x0, [sp, #24]
  42327c:	ldr	x0, [x0]
  423280:	str	x0, [sp, #40]
  423284:	ldr	x0, [sp, #40]
  423288:	ldr	x0, [x0, #8]
  42328c:	lsl	x0, x0, #3
  423290:	bl	4028b0 <malloc@plt>
  423294:	mov	x1, x0
  423298:	ldr	x0, [sp, #40]
  42329c:	str	x1, [x0, #24]
  4232a0:	ldr	x0, [sp, #40]
  4232a4:	ldr	x0, [x0, #8]
  4232a8:	lsl	x0, x0, #3
  4232ac:	bl	4028b0 <malloc@plt>
  4232b0:	mov	x1, x0
  4232b4:	ldr	x0, [sp, #40]
  4232b8:	str	x1, [x0, #32]
  4232bc:	ldr	x0, [sp, #40]
  4232c0:	ldr	x1, [x0, #8]
  4232c4:	mov	x0, x1
  4232c8:	lsl	x0, x0, #1
  4232cc:	add	x0, x0, x1
  4232d0:	lsl	x0, x0, #3
  4232d4:	bl	4028b0 <malloc@plt>
  4232d8:	mov	x1, x0
  4232dc:	ldr	x0, [sp, #40]
  4232e0:	str	x1, [x0, #40]
  4232e4:	ldr	x0, [sp, #40]
  4232e8:	ldr	x1, [x0, #8]
  4232ec:	mov	x0, x1
  4232f0:	lsl	x0, x0, #1
  4232f4:	add	x0, x0, x1
  4232f8:	lsl	x0, x0, #3
  4232fc:	bl	4028b0 <malloc@plt>
  423300:	mov	x1, x0
  423304:	ldr	x0, [sp, #40]
  423308:	str	x1, [x0, #48]
  42330c:	ldr	x0, [sp, #40]
  423310:	ldr	x0, [x0, #24]
  423314:	cmp	x0, #0x0
  423318:	cset	w0, eq  // eq = none
  42331c:	and	w0, w0, #0xff
  423320:	and	x0, x0, #0xff
  423324:	cmp	x0, #0x0
  423328:	b.ne	42334c <_obstack_memory_used@@Base+0x716c>  // b.any
  42332c:	ldr	x0, [sp, #40]
  423330:	ldr	x0, [x0, #32]
  423334:	cmp	x0, #0x0
  423338:	cset	w0, eq  // eq = none
  42333c:	and	w0, w0, #0xff
  423340:	and	x0, x0, #0xff
  423344:	cmp	x0, #0x0
  423348:	b.eq	423354 <_obstack_memory_used@@Base+0x7174>  // b.none
  42334c:	mov	w0, #0x1                   	// #1
  423350:	b	423358 <_obstack_memory_used@@Base+0x7178>
  423354:	mov	w0, #0x0                   	// #0
  423358:	cmp	w0, #0x0
  42335c:	b.ne	423380 <_obstack_memory_used@@Base+0x71a0>  // b.any
  423360:	ldr	x0, [sp, #40]
  423364:	ldr	x0, [x0, #40]
  423368:	cmp	x0, #0x0
  42336c:	cset	w0, eq  // eq = none
  423370:	and	w0, w0, #0xff
  423374:	and	x0, x0, #0xff
  423378:	cmp	x0, #0x0
  42337c:	b.eq	423388 <_obstack_memory_used@@Base+0x71a8>  // b.none
  423380:	mov	w0, #0x1                   	// #1
  423384:	b	42338c <_obstack_memory_used@@Base+0x71ac>
  423388:	mov	w0, #0x0                   	// #0
  42338c:	cmp	w0, #0x0
  423390:	b.ne	4233b4 <_obstack_memory_used@@Base+0x71d4>  // b.any
  423394:	ldr	x0, [sp, #40]
  423398:	ldr	x0, [x0, #48]
  42339c:	cmp	x0, #0x0
  4233a0:	cset	w0, eq  // eq = none
  4233a4:	and	w0, w0, #0xff
  4233a8:	and	x0, x0, #0xff
  4233ac:	cmp	x0, #0x0
  4233b0:	b.eq	4233bc <_obstack_memory_used@@Base+0x71dc>  // b.none
  4233b4:	mov	w0, #0xc                   	// #12
  4233b8:	b	42368c <_obstack_memory_used@@Base+0x74ac>
  4233bc:	ldr	x0, [sp, #24]
  4233c0:	ldr	x0, [x0, #48]
  4233c4:	lsl	x0, x0, #3
  4233c8:	bl	4028b0 <malloc@plt>
  4233cc:	mov	x1, x0
  4233d0:	ldr	x0, [sp, #40]
  4233d4:	str	x1, [x0, #224]
  4233d8:	ldr	x0, [sp, #40]
  4233dc:	ldr	x0, [x0, #224]
  4233e0:	cmp	x0, #0x0
  4233e4:	b.eq	4234c4 <_obstack_memory_used@@Base+0x72e4>  // b.none
  4233e8:	str	xzr, [sp, #48]
  4233ec:	b	423418 <_obstack_memory_used@@Base+0x7238>
  4233f0:	ldr	x0, [sp, #40]
  4233f4:	ldr	x1, [x0, #224]
  4233f8:	ldr	x0, [sp, #48]
  4233fc:	lsl	x0, x0, #3
  423400:	add	x0, x1, x0
  423404:	ldr	x1, [sp, #48]
  423408:	str	x1, [x0]
  42340c:	ldr	x0, [sp, #48]
  423410:	add	x0, x0, #0x1
  423414:	str	x0, [sp, #48]
  423418:	ldr	x0, [sp, #24]
  42341c:	ldr	x1, [x0, #48]
  423420:	ldr	x0, [sp, #48]
  423424:	cmp	x1, x0
  423428:	b.hi	4233f0 <_obstack_memory_used@@Base+0x7210>  // b.pmore
  42342c:	ldr	x0, [sp, #40]
  423430:	ldr	x3, [x0, #104]
  423434:	ldr	x2, [sp, #40]
  423438:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x6e20>
  42343c:	add	x1, x0, #0x880
  423440:	mov	x0, x3
  423444:	bl	4237a0 <_obstack_memory_used@@Base+0x75c0>
  423448:	str	xzr, [sp, #48]
  42344c:	b	423480 <_obstack_memory_used@@Base+0x72a0>
  423450:	ldr	x0, [sp, #40]
  423454:	ldr	x1, [x0, #224]
  423458:	ldr	x0, [sp, #48]
  42345c:	lsl	x0, x0, #3
  423460:	add	x0, x1, x0
  423464:	ldr	x0, [x0]
  423468:	ldr	x1, [sp, #48]
  42346c:	cmp	x1, x0
  423470:	b.ne	423498 <_obstack_memory_used@@Base+0x72b8>  // b.any
  423474:	ldr	x0, [sp, #48]
  423478:	add	x0, x0, #0x1
  42347c:	str	x0, [sp, #48]
  423480:	ldr	x0, [sp, #24]
  423484:	ldr	x1, [x0, #48]
  423488:	ldr	x0, [sp, #48]
  42348c:	cmp	x1, x0
  423490:	b.hi	423450 <_obstack_memory_used@@Base+0x7270>  // b.pmore
  423494:	b	42349c <_obstack_memory_used@@Base+0x72bc>
  423498:	nop
  42349c:	ldr	x0, [sp, #24]
  4234a0:	ldr	x1, [x0, #48]
  4234a4:	ldr	x0, [sp, #48]
  4234a8:	cmp	x1, x0
  4234ac:	b.ne	4234c4 <_obstack_memory_used@@Base+0x72e4>  // b.any
  4234b0:	ldr	x0, [sp, #40]
  4234b4:	ldr	x0, [x0, #224]
  4234b8:	bl	402b60 <free@plt>
  4234bc:	ldr	x0, [sp, #40]
  4234c0:	str	xzr, [x0, #224]
  4234c4:	ldr	x0, [sp, #40]
  4234c8:	ldr	x3, [x0, #104]
  4234cc:	ldr	x2, [sp, #24]
  4234d0:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x6e20>
  4234d4:	add	x1, x0, #0x9fc
  4234d8:	mov	x0, x3
  4234dc:	bl	423694 <_obstack_memory_used@@Base+0x74b4>
  4234e0:	str	w0, [sp, #60]
  4234e4:	ldr	w0, [sp, #60]
  4234e8:	cmp	w0, #0x0
  4234ec:	cset	w0, ne  // ne = any
  4234f0:	and	w0, w0, #0xff
  4234f4:	and	x0, x0, #0xff
  4234f8:	cmp	x0, #0x0
  4234fc:	b.eq	423508 <_obstack_memory_used@@Base+0x7328>  // b.none
  423500:	ldr	w0, [sp, #60]
  423504:	b	42368c <_obstack_memory_used@@Base+0x74ac>
  423508:	ldr	x0, [sp, #40]
  42350c:	ldr	x3, [x0, #104]
  423510:	ldr	x2, [sp, #40]
  423514:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x6e20>
  423518:	add	x1, x0, #0xd10
  42351c:	mov	x0, x3
  423520:	bl	423694 <_obstack_memory_used@@Base+0x74b4>
  423524:	str	w0, [sp, #60]
  423528:	ldr	w0, [sp, #60]
  42352c:	cmp	w0, #0x0
  423530:	cset	w0, ne  // ne = any
  423534:	and	w0, w0, #0xff
  423538:	and	x0, x0, #0xff
  42353c:	cmp	x0, #0x0
  423540:	b.eq	42354c <_obstack_memory_used@@Base+0x736c>  // b.none
  423544:	ldr	w0, [sp, #60]
  423548:	b	42368c <_obstack_memory_used@@Base+0x74ac>
  42354c:	ldr	x0, [sp, #40]
  423550:	ldr	x3, [x0, #104]
  423554:	ldr	x2, [sp, #40]
  423558:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x6e20>
  42355c:	add	x1, x0, #0xe08
  423560:	mov	x0, x3
  423564:	bl	4237a0 <_obstack_memory_used@@Base+0x75c0>
  423568:	ldr	x0, [sp, #40]
  42356c:	ldr	x3, [x0, #104]
  423570:	ldr	x2, [sp, #40]
  423574:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x6e20>
  423578:	add	x1, x0, #0xecc
  42357c:	mov	x0, x3
  423580:	bl	4237a0 <_obstack_memory_used@@Base+0x75c0>
  423584:	str	w0, [sp, #60]
  423588:	ldr	w0, [sp, #60]
  42358c:	cmp	w0, #0x0
  423590:	cset	w0, ne  // ne = any
  423594:	and	w0, w0, #0xff
  423598:	and	x0, x0, #0xff
  42359c:	cmp	x0, #0x0
  4235a0:	b.eq	4235ac <_obstack_memory_used@@Base+0x73cc>  // b.none
  4235a4:	ldr	w0, [sp, #60]
  4235a8:	b	42368c <_obstack_memory_used@@Base+0x74ac>
  4235ac:	ldr	x0, [sp, #40]
  4235b0:	bl	424a28 <_obstack_memory_used@@Base+0x8848>
  4235b4:	str	w0, [sp, #60]
  4235b8:	ldr	w0, [sp, #60]
  4235bc:	cmp	w0, #0x0
  4235c0:	cset	w0, ne  // ne = any
  4235c4:	and	w0, w0, #0xff
  4235c8:	and	x0, x0, #0xff
  4235cc:	cmp	x0, #0x0
  4235d0:	b.eq	4235dc <_obstack_memory_used@@Base+0x73fc>  // b.none
  4235d4:	ldr	w0, [sp, #60]
  4235d8:	b	42368c <_obstack_memory_used@@Base+0x74ac>
  4235dc:	ldr	x0, [sp, #24]
  4235e0:	ldrb	w0, [x0, #56]
  4235e4:	and	w0, w0, #0x10
  4235e8:	and	w0, w0, #0xff
  4235ec:	cmp	w0, #0x0
  4235f0:	b.ne	42361c <_obstack_memory_used@@Base+0x743c>  // b.any
  4235f4:	ldr	x0, [sp, #24]
  4235f8:	ldr	x0, [x0, #48]
  4235fc:	cmp	x0, #0x0
  423600:	b.eq	42361c <_obstack_memory_used@@Base+0x743c>  // b.none
  423604:	ldr	x0, [sp, #40]
  423608:	ldrb	w0, [x0, #176]
  42360c:	and	w0, w0, #0x1
  423610:	and	w0, w0, #0xff
  423614:	cmp	w0, #0x0
  423618:	b.ne	42362c <_obstack_memory_used@@Base+0x744c>  // b.any
  42361c:	ldr	x0, [sp, #40]
  423620:	ldr	x0, [x0, #152]
  423624:	cmp	x0, #0x0
  423628:	b.eq	423688 <_obstack_memory_used@@Base+0x74a8>  // b.none
  42362c:	ldr	x0, [sp, #40]
  423630:	ldr	x1, [x0, #16]
  423634:	mov	x0, x1
  423638:	lsl	x0, x0, #1
  42363c:	add	x0, x0, x1
  423640:	lsl	x0, x0, #3
  423644:	bl	4028b0 <malloc@plt>
  423648:	mov	x1, x0
  42364c:	ldr	x0, [sp, #40]
  423650:	str	x1, [x0, #56]
  423654:	ldr	x0, [sp, #40]
  423658:	ldr	x0, [x0, #56]
  42365c:	cmp	x0, #0x0
  423660:	cset	w0, eq  // eq = none
  423664:	and	w0, w0, #0xff
  423668:	and	x0, x0, #0xff
  42366c:	cmp	x0, #0x0
  423670:	b.eq	42367c <_obstack_memory_used@@Base+0x749c>  // b.none
  423674:	mov	w0, #0xc                   	// #12
  423678:	b	42368c <_obstack_memory_used@@Base+0x74ac>
  42367c:	ldr	x0, [sp, #40]
  423680:	bl	4248c8 <_obstack_memory_used@@Base+0x86e8>
  423684:	str	w0, [sp, #60]
  423688:	ldr	w0, [sp, #60]
  42368c:	ldp	x29, x30, [sp], #64
  423690:	ret
  423694:	stp	x29, x30, [sp, #-80]!
  423698:	mov	x29, sp
  42369c:	str	x0, [sp, #40]
  4236a0:	str	x1, [sp, #32]
  4236a4:	str	x2, [sp, #24]
  4236a8:	ldr	x0, [sp, #40]
  4236ac:	str	x0, [sp, #72]
  4236b0:	b	4236e0 <_obstack_memory_used@@Base+0x7500>
  4236b4:	ldr	x0, [sp, #72]
  4236b8:	ldr	x0, [x0, #8]
  4236bc:	cmp	x0, #0x0
  4236c0:	b.eq	4236d4 <_obstack_memory_used@@Base+0x74f4>  // b.none
  4236c4:	ldr	x0, [sp, #72]
  4236c8:	ldr	x0, [x0, #8]
  4236cc:	str	x0, [sp, #72]
  4236d0:	b	4236e0 <_obstack_memory_used@@Base+0x7500>
  4236d4:	ldr	x0, [sp, #72]
  4236d8:	ldr	x0, [x0, #16]
  4236dc:	str	x0, [sp, #72]
  4236e0:	ldr	x0, [sp, #72]
  4236e4:	ldr	x0, [x0, #8]
  4236e8:	cmp	x0, #0x0
  4236ec:	b.ne	4236b4 <_obstack_memory_used@@Base+0x74d4>  // b.any
  4236f0:	ldr	x0, [sp, #72]
  4236f4:	ldr	x0, [x0, #16]
  4236f8:	cmp	x0, #0x0
  4236fc:	b.ne	4236b4 <_obstack_memory_used@@Base+0x74d4>  // b.any
  423700:	ldr	x2, [sp, #32]
  423704:	ldr	x1, [sp, #72]
  423708:	ldr	x0, [sp, #24]
  42370c:	blr	x2
  423710:	str	w0, [sp, #68]
  423714:	ldr	w0, [sp, #68]
  423718:	cmp	w0, #0x0
  42371c:	cset	w0, ne  // ne = any
  423720:	and	w0, w0, #0xff
  423724:	and	x0, x0, #0xff
  423728:	cmp	x0, #0x0
  42372c:	b.eq	423738 <_obstack_memory_used@@Base+0x7558>  // b.none
  423730:	ldr	w0, [sp, #68]
  423734:	b	423798 <_obstack_memory_used@@Base+0x75b8>
  423738:	ldr	x0, [sp, #72]
  42373c:	ldr	x0, [x0]
  423740:	cmp	x0, #0x0
  423744:	b.ne	423750 <_obstack_memory_used@@Base+0x7570>  // b.any
  423748:	mov	w0, #0x0                   	// #0
  42374c:	b	423798 <_obstack_memory_used@@Base+0x75b8>
  423750:	ldr	x0, [sp, #72]
  423754:	str	x0, [sp, #56]
  423758:	ldr	x0, [sp, #72]
  42375c:	ldr	x0, [x0]
  423760:	str	x0, [sp, #72]
  423764:	ldr	x0, [sp, #72]
  423768:	ldr	x0, [x0, #16]
  42376c:	ldr	x1, [sp, #56]
  423770:	cmp	x1, x0
  423774:	b.eq	423700 <_obstack_memory_used@@Base+0x7520>  // b.none
  423778:	ldr	x0, [sp, #72]
  42377c:	ldr	x0, [x0, #16]
  423780:	cmp	x0, #0x0
  423784:	b.eq	423700 <_obstack_memory_used@@Base+0x7520>  // b.none
  423788:	ldr	x0, [sp, #72]
  42378c:	ldr	x0, [x0, #16]
  423790:	str	x0, [sp, #72]
  423794:	b	4236e0 <_obstack_memory_used@@Base+0x7500>
  423798:	ldp	x29, x30, [sp], #80
  42379c:	ret
  4237a0:	stp	x29, x30, [sp, #-80]!
  4237a4:	mov	x29, sp
  4237a8:	str	x0, [sp, #40]
  4237ac:	str	x1, [sp, #32]
  4237b0:	str	x2, [sp, #24]
  4237b4:	ldr	x0, [sp, #40]
  4237b8:	str	x0, [sp, #72]
  4237bc:	ldr	x2, [sp, #32]
  4237c0:	ldr	x1, [sp, #72]
  4237c4:	ldr	x0, [sp, #24]
  4237c8:	blr	x2
  4237cc:	str	w0, [sp, #60]
  4237d0:	ldr	w0, [sp, #60]
  4237d4:	cmp	w0, #0x0
  4237d8:	cset	w0, ne  // ne = any
  4237dc:	and	w0, w0, #0xff
  4237e0:	and	x0, x0, #0xff
  4237e4:	cmp	x0, #0x0
  4237e8:	b.eq	4237f4 <_obstack_memory_used@@Base+0x7614>  // b.none
  4237ec:	ldr	w0, [sp, #60]
  4237f0:	b	423878 <_obstack_memory_used@@Base+0x7698>
  4237f4:	ldr	x0, [sp, #72]
  4237f8:	ldr	x0, [x0, #8]
  4237fc:	cmp	x0, #0x0
  423800:	b.eq	423814 <_obstack_memory_used@@Base+0x7634>  // b.none
  423804:	ldr	x0, [sp, #72]
  423808:	ldr	x0, [x0, #8]
  42380c:	str	x0, [sp, #72]
  423810:	b	4237bc <_obstack_memory_used@@Base+0x75dc>
  423814:	str	xzr, [sp, #64]
  423818:	b	423844 <_obstack_memory_used@@Base+0x7664>
  42381c:	ldr	x0, [sp, #72]
  423820:	str	x0, [sp, #64]
  423824:	ldr	x0, [sp, #72]
  423828:	ldr	x0, [x0]
  42382c:	str	x0, [sp, #72]
  423830:	ldr	x0, [sp, #72]
  423834:	cmp	x0, #0x0
  423838:	b.ne	423844 <_obstack_memory_used@@Base+0x7664>  // b.any
  42383c:	mov	w0, #0x0                   	// #0
  423840:	b	423878 <_obstack_memory_used@@Base+0x7698>
  423844:	ldr	x0, [sp, #72]
  423848:	ldr	x0, [x0, #16]
  42384c:	ldr	x1, [sp, #64]
  423850:	cmp	x1, x0
  423854:	b.eq	42381c <_obstack_memory_used@@Base+0x763c>  // b.none
  423858:	ldr	x0, [sp, #72]
  42385c:	ldr	x0, [x0, #16]
  423860:	cmp	x0, #0x0
  423864:	b.eq	42381c <_obstack_memory_used@@Base+0x763c>  // b.none
  423868:	ldr	x0, [sp, #72]
  42386c:	ldr	x0, [x0, #16]
  423870:	str	x0, [sp, #72]
  423874:	b	4237bc <_obstack_memory_used@@Base+0x75dc>
  423878:	ldp	x29, x30, [sp], #80
  42387c:	ret
  423880:	sub	sp, sp, #0x30
  423884:	str	x0, [sp, #8]
  423888:	str	x1, [sp]
  42388c:	ldr	x0, [sp, #8]
  423890:	str	x0, [sp, #40]
  423894:	ldr	x0, [sp]
  423898:	ldrb	w0, [x0, #48]
  42389c:	cmp	w0, #0x4
  4238a0:	b.ne	423910 <_obstack_memory_used@@Base+0x7730>  // b.any
  4238a4:	ldr	x0, [sp, #40]
  4238a8:	ldr	x0, [x0, #224]
  4238ac:	cmp	x0, #0x0
  4238b0:	b.eq	423910 <_obstack_memory_used@@Base+0x7730>  // b.none
  4238b4:	ldr	x0, [sp]
  4238b8:	ldr	x0, [x0, #40]
  4238bc:	str	w0, [sp, #36]
  4238c0:	ldr	x0, [sp, #40]
  4238c4:	ldr	x1, [x0, #224]
  4238c8:	ldrsw	x0, [sp, #36]
  4238cc:	lsl	x0, x0, #3
  4238d0:	add	x0, x1, x0
  4238d4:	ldr	x1, [x0]
  4238d8:	ldr	x0, [sp]
  4238dc:	str	x1, [x0, #40]
  4238e0:	ldr	x0, [sp, #40]
  4238e4:	ldr	x1, [x0, #160]
  4238e8:	ldr	x0, [sp]
  4238ec:	ldr	x0, [x0, #40]
  4238f0:	mov	w2, w0
  4238f4:	mov	w0, #0x1                   	// #1
  4238f8:	lsl	w0, w0, w2
  4238fc:	sxtw	x0, w0
  423900:	orr	x1, x1, x0
  423904:	ldr	x0, [sp, #40]
  423908:	str	x1, [x0, #160]
  42390c:	b	4239f0 <_obstack_memory_used@@Base+0x7810>
  423910:	ldr	x0, [sp]
  423914:	ldrb	w0, [x0, #48]
  423918:	cmp	w0, #0x11
  42391c:	b.ne	4239f0 <_obstack_memory_used@@Base+0x7810>  // b.any
  423920:	ldr	x0, [sp]
  423924:	ldr	x0, [x0, #8]
  423928:	cmp	x0, #0x0
  42392c:	b.eq	4239f0 <_obstack_memory_used@@Base+0x7810>  // b.none
  423930:	ldr	x0, [sp]
  423934:	ldr	x0, [x0, #8]
  423938:	ldrb	w0, [x0, #48]
  42393c:	cmp	w0, #0x11
  423940:	b.ne	4239f0 <_obstack_memory_used@@Base+0x7810>  // b.any
  423944:	ldr	x0, [sp]
  423948:	ldr	x0, [x0, #8]
  42394c:	ldr	x0, [x0, #40]
  423950:	str	x0, [sp, #24]
  423954:	ldr	x0, [sp]
  423958:	ldr	x0, [x0, #8]
  42395c:	ldr	x1, [x0, #8]
  423960:	ldr	x0, [sp]
  423964:	str	x1, [x0, #8]
  423968:	ldr	x0, [sp]
  42396c:	ldr	x0, [x0, #8]
  423970:	cmp	x0, #0x0
  423974:	b.eq	423988 <_obstack_memory_used@@Base+0x77a8>  // b.none
  423978:	ldr	x0, [sp]
  42397c:	ldr	x0, [x0, #8]
  423980:	ldr	x1, [sp]
  423984:	str	x1, [x0]
  423988:	ldr	x0, [sp, #40]
  42398c:	ldr	x1, [x0, #224]
  423990:	ldr	x0, [sp]
  423994:	ldr	x0, [x0, #40]
  423998:	lsl	x0, x0, #3
  42399c:	add	x1, x1, x0
  4239a0:	ldr	x0, [sp, #40]
  4239a4:	ldr	x2, [x0, #224]
  4239a8:	ldr	x0, [sp, #24]
  4239ac:	lsl	x0, x0, #3
  4239b0:	add	x0, x2, x0
  4239b4:	ldr	x1, [x1]
  4239b8:	str	x1, [x0]
  4239bc:	ldr	x0, [sp, #24]
  4239c0:	cmp	x0, #0x3f
  4239c4:	b.gt	4239f0 <_obstack_memory_used@@Base+0x7810>
  4239c8:	ldr	x0, [sp, #40]
  4239cc:	ldr	x1, [x0, #160]
  4239d0:	ldr	x0, [sp, #24]
  4239d4:	mov	w2, w0
  4239d8:	mov	x0, #0x1                   	// #1
  4239dc:	lsl	x0, x0, x2
  4239e0:	mvn	x0, x0
  4239e4:	and	x1, x1, x0
  4239e8:	ldr	x0, [sp, #40]
  4239ec:	str	x1, [x0, #160]
  4239f0:	mov	w0, #0x0                   	// #0
  4239f4:	add	sp, sp, #0x30
  4239f8:	ret
  4239fc:	stp	x29, x30, [sp, #-48]!
  423a00:	mov	x29, sp
  423a04:	str	x0, [sp, #24]
  423a08:	str	x1, [sp, #16]
  423a0c:	ldr	x0, [sp, #24]
  423a10:	str	x0, [sp, #40]
  423a14:	str	wzr, [sp, #36]
  423a18:	ldr	x0, [sp, #16]
  423a1c:	ldr	x0, [x0, #8]
  423a20:	cmp	x0, #0x0
  423a24:	b.eq	423a80 <_obstack_memory_used@@Base+0x78a0>  // b.none
  423a28:	ldr	x0, [sp, #16]
  423a2c:	ldr	x0, [x0, #8]
  423a30:	ldrb	w0, [x0, #48]
  423a34:	cmp	w0, #0x11
  423a38:	b.ne	423a80 <_obstack_memory_used@@Base+0x78a0>  // b.any
  423a3c:	ldr	x0, [sp, #16]
  423a40:	ldr	x1, [x0, #8]
  423a44:	add	x0, sp, #0x24
  423a48:	mov	x2, x1
  423a4c:	ldr	x1, [sp, #40]
  423a50:	bl	423af4 <_obstack_memory_used@@Base+0x7914>
  423a54:	mov	x1, x0
  423a58:	ldr	x0, [sp, #16]
  423a5c:	str	x1, [x0, #8]
  423a60:	ldr	x0, [sp, #16]
  423a64:	ldr	x0, [x0, #8]
  423a68:	cmp	x0, #0x0
  423a6c:	b.eq	423a80 <_obstack_memory_used@@Base+0x78a0>  // b.none
  423a70:	ldr	x0, [sp, #16]
  423a74:	ldr	x0, [x0, #8]
  423a78:	ldr	x1, [sp, #16]
  423a7c:	str	x1, [x0]
  423a80:	ldr	x0, [sp, #16]
  423a84:	ldr	x0, [x0, #16]
  423a88:	cmp	x0, #0x0
  423a8c:	b.eq	423ae8 <_obstack_memory_used@@Base+0x7908>  // b.none
  423a90:	ldr	x0, [sp, #16]
  423a94:	ldr	x0, [x0, #16]
  423a98:	ldrb	w0, [x0, #48]
  423a9c:	cmp	w0, #0x11
  423aa0:	b.ne	423ae8 <_obstack_memory_used@@Base+0x7908>  // b.any
  423aa4:	ldr	x0, [sp, #16]
  423aa8:	ldr	x1, [x0, #16]
  423aac:	add	x0, sp, #0x24
  423ab0:	mov	x2, x1
  423ab4:	ldr	x1, [sp, #40]
  423ab8:	bl	423af4 <_obstack_memory_used@@Base+0x7914>
  423abc:	mov	x1, x0
  423ac0:	ldr	x0, [sp, #16]
  423ac4:	str	x1, [x0, #16]
  423ac8:	ldr	x0, [sp, #16]
  423acc:	ldr	x0, [x0, #16]
  423ad0:	cmp	x0, #0x0
  423ad4:	b.eq	423ae8 <_obstack_memory_used@@Base+0x7908>  // b.none
  423ad8:	ldr	x0, [sp, #16]
  423adc:	ldr	x0, [x0, #16]
  423ae0:	ldr	x1, [sp, #16]
  423ae4:	str	x1, [x0]
  423ae8:	ldr	w0, [sp, #36]
  423aec:	ldp	x29, x30, [sp], #48
  423af0:	ret
  423af4:	stp	x29, x30, [sp, #-96]!
  423af8:	mov	x29, sp
  423afc:	str	x0, [sp, #40]
  423b00:	str	x1, [sp, #32]
  423b04:	str	x2, [sp, #24]
  423b08:	ldr	x0, [sp, #32]
  423b0c:	ldr	x0, [x0]
  423b10:	str	x0, [sp, #88]
  423b14:	ldr	x0, [sp, #24]
  423b18:	ldr	x0, [x0, #8]
  423b1c:	str	x0, [sp, #80]
  423b20:	ldr	x0, [sp, #32]
  423b24:	ldrb	w0, [x0, #56]
  423b28:	and	w0, w0, #0x10
  423b2c:	and	w0, w0, #0xff
  423b30:	cmp	w0, #0x0
  423b34:	b.eq	423b84 <_obstack_memory_used@@Base+0x79a4>  // b.none
  423b38:	ldr	x0, [sp, #24]
  423b3c:	ldr	x0, [x0, #8]
  423b40:	cmp	x0, #0x0
  423b44:	b.eq	423b84 <_obstack_memory_used@@Base+0x79a4>  // b.none
  423b48:	ldr	x0, [sp, #24]
  423b4c:	ldr	x0, [x0, #40]
  423b50:	cmp	x0, #0x3f
  423b54:	b.gt	423b78 <_obstack_memory_used@@Base+0x7998>
  423b58:	ldr	x0, [sp, #88]
  423b5c:	ldr	x0, [x0, #160]
  423b60:	ldr	x1, [sp, #24]
  423b64:	ldr	x1, [x1, #40]
  423b68:	lsr	x0, x0, x1
  423b6c:	and	x0, x0, #0x1
  423b70:	cmp	x0, #0x0
  423b74:	b.ne	423b84 <_obstack_memory_used@@Base+0x79a4>  // b.any
  423b78:	ldr	x0, [sp, #24]
  423b7c:	ldr	x0, [x0, #8]
  423b80:	b	423d08 <_obstack_memory_used@@Base+0x7b28>
  423b84:	mov	w3, #0x8                   	// #8
  423b88:	mov	x2, #0x0                   	// #0
  423b8c:	mov	x1, #0x0                   	// #0
  423b90:	ldr	x0, [sp, #88]
  423b94:	bl	429758 <_obstack_memory_used@@Base+0xd578>
  423b98:	str	x0, [sp, #72]
  423b9c:	mov	w3, #0x9                   	// #9
  423ba0:	mov	x2, #0x0                   	// #0
  423ba4:	mov	x1, #0x0                   	// #0
  423ba8:	ldr	x0, [sp, #88]
  423bac:	bl	429758 <_obstack_memory_used@@Base+0xd578>
  423bb0:	str	x0, [sp, #64]
  423bb4:	ldr	x0, [sp, #80]
  423bb8:	cmp	x0, #0x0
  423bbc:	b.eq	423bd8 <_obstack_memory_used@@Base+0x79f8>  // b.none
  423bc0:	mov	w3, #0x10                  	// #16
  423bc4:	ldr	x2, [sp, #64]
  423bc8:	ldr	x1, [sp, #80]
  423bcc:	ldr	x0, [sp, #88]
  423bd0:	bl	429758 <_obstack_memory_used@@Base+0xd578>
  423bd4:	b	423bdc <_obstack_memory_used@@Base+0x79fc>
  423bd8:	ldr	x0, [sp, #64]
  423bdc:	str	x0, [sp, #56]
  423be0:	mov	w3, #0x10                  	// #16
  423be4:	ldr	x2, [sp, #56]
  423be8:	ldr	x1, [sp, #72]
  423bec:	ldr	x0, [sp, #88]
  423bf0:	bl	429758 <_obstack_memory_used@@Base+0xd578>
  423bf4:	str	x0, [sp, #48]
  423bf8:	ldr	x0, [sp, #48]
  423bfc:	cmp	x0, #0x0
  423c00:	cset	w0, eq  // eq = none
  423c04:	and	w0, w0, #0xff
  423c08:	and	x0, x0, #0xff
  423c0c:	cmp	x0, #0x0
  423c10:	b.ne	423c30 <_obstack_memory_used@@Base+0x7a50>  // b.any
  423c14:	ldr	x0, [sp, #56]
  423c18:	cmp	x0, #0x0
  423c1c:	cset	w0, eq  // eq = none
  423c20:	and	w0, w0, #0xff
  423c24:	and	x0, x0, #0xff
  423c28:	cmp	x0, #0x0
  423c2c:	b.eq	423c38 <_obstack_memory_used@@Base+0x7a58>  // b.none
  423c30:	mov	w0, #0x1                   	// #1
  423c34:	b	423c3c <_obstack_memory_used@@Base+0x7a5c>
  423c38:	mov	w0, #0x0                   	// #0
  423c3c:	cmp	w0, #0x0
  423c40:	b.ne	423c60 <_obstack_memory_used@@Base+0x7a80>  // b.any
  423c44:	ldr	x0, [sp, #72]
  423c48:	cmp	x0, #0x0
  423c4c:	cset	w0, eq  // eq = none
  423c50:	and	w0, w0, #0xff
  423c54:	and	x0, x0, #0xff
  423c58:	cmp	x0, #0x0
  423c5c:	b.eq	423c68 <_obstack_memory_used@@Base+0x7a88>  // b.none
  423c60:	mov	w0, #0x1                   	// #1
  423c64:	b	423c6c <_obstack_memory_used@@Base+0x7a8c>
  423c68:	mov	w0, #0x0                   	// #0
  423c6c:	cmp	w0, #0x0
  423c70:	b.ne	423c90 <_obstack_memory_used@@Base+0x7ab0>  // b.any
  423c74:	ldr	x0, [sp, #64]
  423c78:	cmp	x0, #0x0
  423c7c:	cset	w0, eq  // eq = none
  423c80:	and	w0, w0, #0xff
  423c84:	and	x0, x0, #0xff
  423c88:	cmp	x0, #0x0
  423c8c:	b.eq	423ca4 <_obstack_memory_used@@Base+0x7ac4>  // b.none
  423c90:	ldr	x0, [sp, #40]
  423c94:	mov	w1, #0xc                   	// #12
  423c98:	str	w1, [x0]
  423c9c:	mov	x0, #0x0                   	// #0
  423ca0:	b	423d08 <_obstack_memory_used@@Base+0x7b28>
  423ca4:	ldr	x0, [sp, #24]
  423ca8:	ldr	x1, [x0, #40]
  423cac:	ldr	x0, [sp, #64]
  423cb0:	str	x1, [x0, #40]
  423cb4:	ldr	x0, [sp, #64]
  423cb8:	ldr	x1, [x0, #40]
  423cbc:	ldr	x0, [sp, #72]
  423cc0:	str	x1, [x0, #40]
  423cc4:	ldr	x0, [sp, #24]
  423cc8:	ldrb	w0, [x0, #50]
  423ccc:	ubfx	x0, x0, #3, #1
  423cd0:	and	w2, w0, #0xff
  423cd4:	ldr	x1, [sp, #64]
  423cd8:	ldrb	w0, [x1, #50]
  423cdc:	bfi	w0, w2, #3, #1
  423ce0:	strb	w0, [x1, #50]
  423ce4:	ldr	x0, [sp, #64]
  423ce8:	ldrb	w0, [x0, #50]
  423cec:	ubfx	x0, x0, #3, #1
  423cf0:	and	w2, w0, #0xff
  423cf4:	ldr	x1, [sp, #72]
  423cf8:	ldrb	w0, [x1, #50]
  423cfc:	bfi	w0, w2, #3, #1
  423d00:	strb	w0, [x1, #50]
  423d04:	ldr	x0, [sp, #48]
  423d08:	ldp	x29, x30, [sp], #96
  423d0c:	ret
  423d10:	stp	x29, x30, [sp, #-48]!
  423d14:	mov	x29, sp
  423d18:	str	x0, [sp, #24]
  423d1c:	str	x1, [sp, #16]
  423d20:	ldr	x0, [sp, #24]
  423d24:	str	x0, [sp, #40]
  423d28:	ldr	x0, [sp, #16]
  423d2c:	ldrb	w0, [x0, #48]
  423d30:	cmp	w0, #0x10
  423d34:	b.ne	423d64 <_obstack_memory_used@@Base+0x7b84>  // b.any
  423d38:	ldr	x0, [sp, #16]
  423d3c:	ldr	x0, [x0, #8]
  423d40:	ldr	x1, [x0, #24]
  423d44:	ldr	x0, [sp, #16]
  423d48:	str	x1, [x0, #24]
  423d4c:	ldr	x0, [sp, #16]
  423d50:	ldr	x0, [x0, #8]
  423d54:	ldr	x1, [x0, #56]
  423d58:	ldr	x0, [sp, #16]
  423d5c:	str	x1, [x0, #56]
  423d60:	b	423dfc <_obstack_memory_used@@Base+0x7c1c>
  423d64:	ldr	x0, [sp, #16]
  423d68:	ldr	x1, [sp, #16]
  423d6c:	str	x1, [x0, #24]
  423d70:	ldr	x0, [sp, #16]
  423d74:	ldp	x1, x2, [x0, #40]
  423d78:	ldr	x0, [sp, #40]
  423d7c:	bl	420484 <_obstack_memory_used@@Base+0x42a4>
  423d80:	mov	x1, x0
  423d84:	ldr	x0, [sp, #16]
  423d88:	str	x1, [x0, #56]
  423d8c:	ldr	x0, [sp, #16]
  423d90:	ldr	x0, [x0, #56]
  423d94:	cmn	x0, #0x1
  423d98:	cset	w0, eq  // eq = none
  423d9c:	and	w0, w0, #0xff
  423da0:	and	x0, x0, #0xff
  423da4:	cmp	x0, #0x0
  423da8:	b.eq	423db4 <_obstack_memory_used@@Base+0x7bd4>  // b.none
  423dac:	mov	w0, #0xc                   	// #12
  423db0:	b	423e00 <_obstack_memory_used@@Base+0x7c20>
  423db4:	ldr	x0, [sp, #16]
  423db8:	ldrb	w0, [x0, #48]
  423dbc:	cmp	w0, #0xc
  423dc0:	b.ne	423dfc <_obstack_memory_used@@Base+0x7c1c>  // b.any
  423dc4:	ldr	x0, [sp, #16]
  423dc8:	ldr	w2, [x0, #40]
  423dcc:	ldr	x0, [sp, #40]
  423dd0:	ldr	x1, [x0]
  423dd4:	ldr	x0, [sp, #16]
  423dd8:	ldr	x0, [x0, #56]
  423ddc:	lsl	x0, x0, #4
  423de0:	add	x1, x1, x0
  423de4:	mov	w0, w2
  423de8:	and	w0, w0, #0x3ff
  423dec:	and	w2, w0, #0xffff
  423df0:	ldr	w0, [x1, #8]
  423df4:	bfi	w0, w2, #8, #10
  423df8:	str	w0, [x1, #8]
  423dfc:	mov	w0, #0x0                   	// #0
  423e00:	ldp	x29, x30, [sp], #48
  423e04:	ret
  423e08:	sub	sp, sp, #0x10
  423e0c:	str	x0, [sp, #8]
  423e10:	str	x1, [sp]
  423e14:	ldr	x0, [sp]
  423e18:	ldrb	w0, [x0, #48]
  423e1c:	cmp	w0, #0xb
  423e20:	b.eq	423e30 <_obstack_memory_used@@Base+0x7c50>  // b.none
  423e24:	cmp	w0, #0x10
  423e28:	b.eq	423e44 <_obstack_memory_used@@Base+0x7c64>  // b.none
  423e2c:	b	423e74 <_obstack_memory_used@@Base+0x7c94>
  423e30:	ldr	x0, [sp]
  423e34:	ldr	x0, [x0, #8]
  423e38:	ldr	x1, [sp]
  423e3c:	str	x1, [x0, #32]
  423e40:	b	423ec0 <_obstack_memory_used@@Base+0x7ce0>
  423e44:	ldr	x0, [sp]
  423e48:	ldr	x1, [x0, #16]
  423e4c:	ldr	x0, [sp]
  423e50:	ldr	x0, [x0, #8]
  423e54:	ldr	x1, [x1, #24]
  423e58:	str	x1, [x0, #32]
  423e5c:	ldr	x0, [sp]
  423e60:	ldr	x0, [x0, #16]
  423e64:	ldr	x1, [sp]
  423e68:	ldr	x1, [x1, #32]
  423e6c:	str	x1, [x0, #32]
  423e70:	b	423ec0 <_obstack_memory_used@@Base+0x7ce0>
  423e74:	ldr	x0, [sp]
  423e78:	ldr	x0, [x0, #8]
  423e7c:	cmp	x0, #0x0
  423e80:	b.eq	423e98 <_obstack_memory_used@@Base+0x7cb8>  // b.none
  423e84:	ldr	x0, [sp]
  423e88:	ldr	x0, [x0, #8]
  423e8c:	ldr	x1, [sp]
  423e90:	ldr	x1, [x1, #32]
  423e94:	str	x1, [x0, #32]
  423e98:	ldr	x0, [sp]
  423e9c:	ldr	x0, [x0, #16]
  423ea0:	cmp	x0, #0x0
  423ea4:	b.eq	423ebc <_obstack_memory_used@@Base+0x7cdc>  // b.none
  423ea8:	ldr	x0, [sp]
  423eac:	ldr	x0, [x0, #16]
  423eb0:	ldr	x1, [sp]
  423eb4:	ldr	x1, [x1, #32]
  423eb8:	str	x1, [x0, #32]
  423ebc:	nop
  423ec0:	mov	w0, #0x0                   	// #0
  423ec4:	add	sp, sp, #0x10
  423ec8:	ret
  423ecc:	stp	x29, x30, [sp, #-80]!
  423ed0:	mov	x29, sp
  423ed4:	str	x0, [sp, #24]
  423ed8:	str	x1, [sp, #16]
  423edc:	ldr	x0, [sp, #24]
  423ee0:	str	x0, [sp, #48]
  423ee4:	ldr	x0, [sp, #16]
  423ee8:	ldr	x0, [x0, #56]
  423eec:	str	x0, [sp, #40]
  423ef0:	str	wzr, [sp, #76]
  423ef4:	ldr	x0, [sp, #16]
  423ef8:	ldrb	w0, [x0, #48]
  423efc:	cmp	w0, #0x10
  423f00:	b.eq	42411c <_obstack_memory_used@@Base+0x7f3c>  // b.none
  423f04:	cmp	w0, #0x10
  423f08:	b.gt	4240e4 <_obstack_memory_used@@Base+0x7f04>
  423f0c:	cmp	w0, #0xc
  423f10:	b.eq	424024 <_obstack_memory_used@@Base+0x7e44>  // b.none
  423f14:	cmp	w0, #0xc
  423f18:	b.gt	4240e4 <_obstack_memory_used@@Base+0x7f04>
  423f1c:	cmp	w0, #0xb
  423f20:	b.gt	4240e4 <_obstack_memory_used@@Base+0x7f04>
  423f24:	cmp	w0, #0xa
  423f28:	b.ge	423f60 <_obstack_memory_used@@Base+0x7d80>  // b.tcont
  423f2c:	cmp	w0, #0x9
  423f30:	b.gt	4240e4 <_obstack_memory_used@@Base+0x7f04>
  423f34:	cmp	w0, #0x8
  423f38:	b.ge	424024 <_obstack_memory_used@@Base+0x7e44>  // b.tcont
  423f3c:	cmp	w0, #0x2
  423f40:	b.eq	423f50 <_obstack_memory_used@@Base+0x7d70>  // b.none
  423f44:	cmp	w0, #0x4
  423f48:	b.eq	424064 <_obstack_memory_used@@Base+0x7e84>  // b.none
  423f4c:	b	4240e4 <_obstack_memory_used@@Base+0x7f04>
  423f50:	ldr	x0, [sp, #16]
  423f54:	ldr	x0, [x0, #32]
  423f58:	cmp	x0, #0x0
  423f5c:	b	424128 <_obstack_memory_used@@Base+0x7f48>
  423f60:	ldr	x0, [sp, #48]
  423f64:	ldrb	w1, [x0, #176]
  423f68:	orr	w1, w1, #0x1
  423f6c:	strb	w1, [x0, #176]
  423f70:	ldr	x0, [sp, #16]
  423f74:	ldr	x0, [x0, #8]
  423f78:	cmp	x0, #0x0
  423f7c:	b.eq	423f98 <_obstack_memory_used@@Base+0x7db8>  // b.none
  423f80:	ldr	x0, [sp, #16]
  423f84:	ldr	x0, [x0, #8]
  423f88:	ldr	x0, [x0, #24]
  423f8c:	ldr	x0, [x0, #56]
  423f90:	str	x0, [sp, #64]
  423f94:	b	423fa8 <_obstack_memory_used@@Base+0x7dc8>
  423f98:	ldr	x0, [sp, #16]
  423f9c:	ldr	x0, [x0, #32]
  423fa0:	ldr	x0, [x0, #56]
  423fa4:	str	x0, [sp, #64]
  423fa8:	ldr	x0, [sp, #16]
  423fac:	ldr	x0, [x0, #16]
  423fb0:	cmp	x0, #0x0
  423fb4:	b.eq	423fd0 <_obstack_memory_used@@Base+0x7df0>  // b.none
  423fb8:	ldr	x0, [sp, #16]
  423fbc:	ldr	x0, [x0, #16]
  423fc0:	ldr	x0, [x0, #24]
  423fc4:	ldr	x0, [x0, #56]
  423fc8:	str	x0, [sp, #56]
  423fcc:	b	423fe0 <_obstack_memory_used@@Base+0x7e00>
  423fd0:	ldr	x0, [sp, #16]
  423fd4:	ldr	x0, [x0, #32]
  423fd8:	ldr	x0, [x0, #56]
  423fdc:	str	x0, [sp, #56]
  423fe0:	ldr	x0, [sp, #64]
  423fe4:	cmp	x0, #0x0
  423fe8:	ldr	x0, [sp, #56]
  423fec:	cmp	x0, #0x0
  423ff0:	ldr	x0, [sp, #48]
  423ff4:	ldr	x2, [x0, #40]
  423ff8:	ldr	x1, [sp, #40]
  423ffc:	mov	x0, x1
  424000:	lsl	x0, x0, #1
  424004:	add	x0, x0, x1
  424008:	lsl	x0, x0, #3
  42400c:	add	x0, x2, x0
  424010:	ldr	x2, [sp, #56]
  424014:	ldr	x1, [sp, #64]
  424018:	bl	41f118 <_obstack_memory_used@@Base+0x2f38>
  42401c:	str	w0, [sp, #76]
  424020:	b	424128 <_obstack_memory_used@@Base+0x7f48>
  424024:	ldr	x0, [sp, #48]
  424028:	ldr	x2, [x0, #40]
  42402c:	ldr	x1, [sp, #40]
  424030:	mov	x0, x1
  424034:	lsl	x0, x0, #1
  424038:	add	x0, x0, x1
  42403c:	lsl	x0, x0, #3
  424040:	add	x2, x2, x0
  424044:	ldr	x0, [sp, #16]
  424048:	ldr	x0, [x0, #32]
  42404c:	ldr	x0, [x0, #56]
  424050:	mov	x1, x0
  424054:	mov	x0, x2
  424058:	bl	41f080 <_obstack_memory_used@@Base+0x2ea0>
  42405c:	str	w0, [sp, #76]
  424060:	b	424128 <_obstack_memory_used@@Base+0x7f48>
  424064:	ldr	x0, [sp, #16]
  424068:	ldr	x1, [x0, #32]
  42406c:	ldr	x0, [sp, #48]
  424070:	ldr	x2, [x0, #24]
  424074:	ldr	x0, [sp, #40]
  424078:	lsl	x0, x0, #3
  42407c:	add	x0, x2, x0
  424080:	ldr	x1, [x1, #56]
  424084:	str	x1, [x0]
  424088:	ldr	x0, [sp, #16]
  42408c:	ldrb	w0, [x0, #48]
  424090:	cmp	w0, #0x4
  424094:	b.ne	424124 <_obstack_memory_used@@Base+0x7f44>  // b.any
  424098:	ldr	x0, [sp, #48]
  42409c:	ldr	x2, [x0, #40]
  4240a0:	ldr	x1, [sp, #40]
  4240a4:	mov	x0, x1
  4240a8:	lsl	x0, x0, #1
  4240ac:	add	x0, x0, x1
  4240b0:	lsl	x0, x0, #3
  4240b4:	add	x2, x2, x0
  4240b8:	ldr	x0, [sp, #48]
  4240bc:	ldr	x1, [x0, #24]
  4240c0:	ldr	x0, [sp, #40]
  4240c4:	lsl	x0, x0, #3
  4240c8:	add	x0, x1, x0
  4240cc:	ldr	x0, [x0]
  4240d0:	mov	x1, x0
  4240d4:	mov	x0, x2
  4240d8:	bl	41f080 <_obstack_memory_used@@Base+0x2ea0>
  4240dc:	str	w0, [sp, #76]
  4240e0:	b	424124 <_obstack_memory_used@@Base+0x7f44>
  4240e4:	ldr	x0, [sp, #16]
  4240e8:	ldrb	w0, [x0, #48]
  4240ec:	and	w0, w0, #0x8
  4240f0:	cmp	w0, #0x0
  4240f4:	ldr	x0, [sp, #16]
  4240f8:	ldr	x1, [x0, #32]
  4240fc:	ldr	x0, [sp, #48]
  424100:	ldr	x2, [x0, #24]
  424104:	ldr	x0, [sp, #40]
  424108:	lsl	x0, x0, #3
  42410c:	add	x0, x2, x0
  424110:	ldr	x1, [x1, #56]
  424114:	str	x1, [x0]
  424118:	b	424128 <_obstack_memory_used@@Base+0x7f48>
  42411c:	nop
  424120:	b	424128 <_obstack_memory_used@@Base+0x7f48>
  424124:	nop
  424128:	ldr	w0, [sp, #76]
  42412c:	ldp	x29, x30, [sp], #80
  424130:	ret
  424134:	stp	x29, x30, [sp, #-112]!
  424138:	mov	x29, sp
  42413c:	str	x0, [sp, #56]
  424140:	str	x1, [sp, #48]
  424144:	str	x2, [sp, #40]
  424148:	str	x3, [sp, #32]
  42414c:	str	w4, [sp, #28]
  424150:	ldr	w0, [sp, #28]
  424154:	str	w0, [sp, #92]
  424158:	ldr	x0, [sp, #48]
  42415c:	str	x0, [sp, #104]
  424160:	ldr	x0, [sp, #40]
  424164:	str	x0, [sp, #96]
  424168:	ldr	x0, [sp, #56]
  42416c:	ldr	x1, [x0]
  424170:	ldr	x0, [sp, #104]
  424174:	lsl	x0, x0, #4
  424178:	add	x0, x1, x0
  42417c:	ldrb	w0, [x0, #8]
  424180:	cmp	w0, #0x4
  424184:	b.ne	42427c <_obstack_memory_used@@Base+0x809c>  // b.any
  424188:	ldr	x0, [sp, #56]
  42418c:	ldr	x1, [x0, #24]
  424190:	ldr	x0, [sp, #104]
  424194:	lsl	x0, x0, #3
  424198:	add	x0, x1, x0
  42419c:	ldr	x0, [x0]
  4241a0:	str	x0, [sp, #80]
  4241a4:	ldr	x0, [sp, #56]
  4241a8:	ldr	x2, [x0, #40]
  4241ac:	ldr	x1, [sp, #96]
  4241b0:	mov	x0, x1
  4241b4:	lsl	x0, x0, #1
  4241b8:	add	x0, x0, x1
  4241bc:	lsl	x0, x0, #3
  4241c0:	add	x0, x2, x0
  4241c4:	str	xzr, [x0, #8]
  4241c8:	ldr	w2, [sp, #92]
  4241cc:	ldr	x1, [sp, #80]
  4241d0:	ldr	x0, [sp, #56]
  4241d4:	bl	424798 <_obstack_memory_used@@Base+0x85b8>
  4241d8:	str	x0, [sp, #72]
  4241dc:	ldr	x0, [sp, #72]
  4241e0:	cmn	x0, #0x1
  4241e4:	cset	w0, eq  // eq = none
  4241e8:	and	w0, w0, #0xff
  4241ec:	and	x0, x0, #0xff
  4241f0:	cmp	x0, #0x0
  4241f4:	b.eq	424200 <_obstack_memory_used@@Base+0x8020>  // b.none
  4241f8:	mov	w0, #0xc                   	// #12
  4241fc:	b	4246c4 <_obstack_memory_used@@Base+0x84e4>
  424200:	ldr	x0, [sp, #56]
  424204:	ldr	x1, [x0, #24]
  424208:	ldr	x0, [sp, #104]
  42420c:	lsl	x0, x0, #3
  424210:	add	x1, x1, x0
  424214:	ldr	x0, [sp, #56]
  424218:	ldr	x2, [x0, #24]
  42421c:	ldr	x0, [sp, #96]
  424220:	lsl	x0, x0, #3
  424224:	add	x0, x2, x0
  424228:	ldr	x1, [x1]
  42422c:	str	x1, [x0]
  424230:	ldr	x0, [sp, #56]
  424234:	ldr	x2, [x0, #40]
  424238:	ldr	x1, [sp, #96]
  42423c:	mov	x0, x1
  424240:	lsl	x0, x0, #1
  424244:	add	x0, x0, x1
  424248:	lsl	x0, x0, #3
  42424c:	add	x0, x2, x0
  424250:	ldr	x1, [sp, #72]
  424254:	bl	41ff4c <_obstack_memory_used@@Base+0x3d6c>
  424258:	strb	w0, [sp, #71]
  42425c:	ldrb	w0, [sp, #71]
  424260:	eor	w0, w0, #0x1
  424264:	and	w0, w0, #0xff
  424268:	and	x0, x0, #0xff
  42426c:	cmp	x0, #0x0
  424270:	b.eq	4246a8 <_obstack_memory_used@@Base+0x84c8>  // b.none
  424274:	mov	w0, #0xc                   	// #12
  424278:	b	4246c4 <_obstack_memory_used@@Base+0x84e4>
  42427c:	ldr	x0, [sp, #56]
  424280:	ldr	x2, [x0, #40]
  424284:	ldr	x1, [sp, #104]
  424288:	mov	x0, x1
  42428c:	lsl	x0, x0, #1
  424290:	add	x0, x0, x1
  424294:	lsl	x0, x0, #3
  424298:	add	x0, x2, x0
  42429c:	ldr	x0, [x0, #8]
  4242a0:	cmp	x0, #0x0
  4242a4:	b.ne	4242dc <_obstack_memory_used@@Base+0x80fc>  // b.any
  4242a8:	ldr	x0, [sp, #56]
  4242ac:	ldr	x1, [x0, #24]
  4242b0:	ldr	x0, [sp, #104]
  4242b4:	lsl	x0, x0, #3
  4242b8:	add	x1, x1, x0
  4242bc:	ldr	x0, [sp, #56]
  4242c0:	ldr	x2, [x0, #24]
  4242c4:	ldr	x0, [sp, #96]
  4242c8:	lsl	x0, x0, #3
  4242cc:	add	x0, x2, x0
  4242d0:	ldr	x1, [x1]
  4242d4:	str	x1, [x0]
  4242d8:	b	4246c0 <_obstack_memory_used@@Base+0x84e0>
  4242dc:	ldr	x0, [sp, #56]
  4242e0:	ldr	x2, [x0, #40]
  4242e4:	ldr	x1, [sp, #104]
  4242e8:	mov	x0, x1
  4242ec:	lsl	x0, x0, #1
  4242f0:	add	x0, x0, x1
  4242f4:	lsl	x0, x0, #3
  4242f8:	add	x0, x2, x0
  4242fc:	ldr	x0, [x0, #8]
  424300:	cmp	x0, #0x1
  424304:	b.ne	424478 <_obstack_memory_used@@Base+0x8298>  // b.any
  424308:	ldr	x0, [sp, #56]
  42430c:	ldr	x2, [x0, #40]
  424310:	ldr	x1, [sp, #104]
  424314:	mov	x0, x1
  424318:	lsl	x0, x0, #1
  42431c:	add	x0, x0, x1
  424320:	lsl	x0, x0, #3
  424324:	add	x0, x2, x0
  424328:	ldr	x0, [x0, #16]
  42432c:	ldr	x0, [x0]
  424330:	str	x0, [sp, #80]
  424334:	ldr	x0, [sp, #56]
  424338:	ldr	x2, [x0, #40]
  42433c:	ldr	x1, [sp, #96]
  424340:	mov	x0, x1
  424344:	lsl	x0, x0, #1
  424348:	add	x0, x0, x1
  42434c:	lsl	x0, x0, #3
  424350:	add	x0, x2, x0
  424354:	str	xzr, [x0, #8]
  424358:	ldr	x1, [sp, #104]
  42435c:	ldr	x0, [sp, #32]
  424360:	cmp	x1, x0
  424364:	b.ne	4243c4 <_obstack_memory_used@@Base+0x81e4>  // b.any
  424368:	ldr	x1, [sp, #96]
  42436c:	ldr	x0, [sp, #104]
  424370:	cmp	x1, x0
  424374:	b.eq	4243c4 <_obstack_memory_used@@Base+0x81e4>  // b.none
  424378:	ldr	x0, [sp, #56]
  42437c:	ldr	x2, [x0, #40]
  424380:	ldr	x1, [sp, #96]
  424384:	mov	x0, x1
  424388:	lsl	x0, x0, #1
  42438c:	add	x0, x0, x1
  424390:	lsl	x0, x0, #3
  424394:	add	x0, x2, x0
  424398:	ldr	x1, [sp, #80]
  42439c:	bl	41ff4c <_obstack_memory_used@@Base+0x3d6c>
  4243a0:	strb	w0, [sp, #71]
  4243a4:	ldrb	w0, [sp, #71]
  4243a8:	eor	w0, w0, #0x1
  4243ac:	and	w0, w0, #0xff
  4243b0:	and	x0, x0, #0xff
  4243b4:	cmp	x0, #0x0
  4243b8:	b.eq	4246bc <_obstack_memory_used@@Base+0x84dc>  // b.none
  4243bc:	mov	w0, #0xc                   	// #12
  4243c0:	b	4246c4 <_obstack_memory_used@@Base+0x84e4>
  4243c4:	ldr	x0, [sp, #56]
  4243c8:	ldr	x1, [x0]
  4243cc:	ldr	x0, [sp, #104]
  4243d0:	lsl	x0, x0, #4
  4243d4:	add	x0, x1, x0
  4243d8:	ldr	w0, [x0, #8]
  4243dc:	ubfx	x0, x0, #8, #10
  4243e0:	and	w0, w0, #0xffff
  4243e4:	mov	w1, w0
  4243e8:	ldr	w0, [sp, #92]
  4243ec:	orr	w0, w0, w1
  4243f0:	str	w0, [sp, #92]
  4243f4:	ldr	w2, [sp, #92]
  4243f8:	ldr	x1, [sp, #80]
  4243fc:	ldr	x0, [sp, #56]
  424400:	bl	424798 <_obstack_memory_used@@Base+0x85b8>
  424404:	str	x0, [sp, #72]
  424408:	ldr	x0, [sp, #72]
  42440c:	cmn	x0, #0x1
  424410:	cset	w0, eq  // eq = none
  424414:	and	w0, w0, #0xff
  424418:	and	x0, x0, #0xff
  42441c:	cmp	x0, #0x0
  424420:	b.eq	42442c <_obstack_memory_used@@Base+0x824c>  // b.none
  424424:	mov	w0, #0xc                   	// #12
  424428:	b	4246c4 <_obstack_memory_used@@Base+0x84e4>
  42442c:	ldr	x0, [sp, #56]
  424430:	ldr	x2, [x0, #40]
  424434:	ldr	x1, [sp, #96]
  424438:	mov	x0, x1
  42443c:	lsl	x0, x0, #1
  424440:	add	x0, x0, x1
  424444:	lsl	x0, x0, #3
  424448:	add	x0, x2, x0
  42444c:	ldr	x1, [sp, #72]
  424450:	bl	41ff4c <_obstack_memory_used@@Base+0x3d6c>
  424454:	strb	w0, [sp, #71]
  424458:	ldrb	w0, [sp, #71]
  42445c:	eor	w0, w0, #0x1
  424460:	and	w0, w0, #0xff
  424464:	and	x0, x0, #0xff
  424468:	cmp	x0, #0x0
  42446c:	b.eq	4246a8 <_obstack_memory_used@@Base+0x84c8>  // b.none
  424470:	mov	w0, #0xc                   	// #12
  424474:	b	4246c4 <_obstack_memory_used@@Base+0x84e4>
  424478:	ldr	x0, [sp, #56]
  42447c:	ldr	x2, [x0, #40]
  424480:	ldr	x1, [sp, #104]
  424484:	mov	x0, x1
  424488:	lsl	x0, x0, #1
  42448c:	add	x0, x0, x1
  424490:	lsl	x0, x0, #3
  424494:	add	x0, x2, x0
  424498:	ldr	x0, [x0, #16]
  42449c:	ldr	x0, [x0]
  4244a0:	str	x0, [sp, #80]
  4244a4:	ldr	x0, [sp, #56]
  4244a8:	ldr	x2, [x0, #40]
  4244ac:	ldr	x1, [sp, #96]
  4244b0:	mov	x0, x1
  4244b4:	lsl	x0, x0, #1
  4244b8:	add	x0, x0, x1
  4244bc:	lsl	x0, x0, #3
  4244c0:	add	x0, x2, x0
  4244c4:	str	xzr, [x0, #8]
  4244c8:	ldr	w2, [sp, #92]
  4244cc:	ldr	x1, [sp, #80]
  4244d0:	ldr	x0, [sp, #56]
  4244d4:	bl	4246cc <_obstack_memory_used@@Base+0x84ec>
  4244d8:	str	x0, [sp, #72]
  4244dc:	ldr	x0, [sp, #72]
  4244e0:	cmn	x0, #0x1
  4244e4:	b.ne	4245ac <_obstack_memory_used@@Base+0x83cc>  // b.any
  4244e8:	ldr	w2, [sp, #92]
  4244ec:	ldr	x1, [sp, #80]
  4244f0:	ldr	x0, [sp, #56]
  4244f4:	bl	424798 <_obstack_memory_used@@Base+0x85b8>
  4244f8:	str	x0, [sp, #72]
  4244fc:	ldr	x0, [sp, #72]
  424500:	cmn	x0, #0x1
  424504:	cset	w0, eq  // eq = none
  424508:	and	w0, w0, #0xff
  42450c:	and	x0, x0, #0xff
  424510:	cmp	x0, #0x0
  424514:	b.eq	424520 <_obstack_memory_used@@Base+0x8340>  // b.none
  424518:	mov	w0, #0xc                   	// #12
  42451c:	b	4246c4 <_obstack_memory_used@@Base+0x84e4>
  424520:	ldr	x0, [sp, #56]
  424524:	ldr	x2, [x0, #40]
  424528:	ldr	x1, [sp, #96]
  42452c:	mov	x0, x1
  424530:	lsl	x0, x0, #1
  424534:	add	x0, x0, x1
  424538:	lsl	x0, x0, #3
  42453c:	add	x0, x2, x0
  424540:	ldr	x1, [sp, #72]
  424544:	bl	41ff4c <_obstack_memory_used@@Base+0x3d6c>
  424548:	strb	w0, [sp, #71]
  42454c:	ldrb	w0, [sp, #71]
  424550:	eor	w0, w0, #0x1
  424554:	and	w0, w0, #0xff
  424558:	and	x0, x0, #0xff
  42455c:	cmp	x0, #0x0
  424560:	b.eq	42456c <_obstack_memory_used@@Base+0x838c>  // b.none
  424564:	mov	w0, #0xc                   	// #12
  424568:	b	4246c4 <_obstack_memory_used@@Base+0x84e4>
  42456c:	ldr	w4, [sp, #92]
  424570:	ldr	x3, [sp, #32]
  424574:	ldr	x2, [sp, #72]
  424578:	ldr	x1, [sp, #80]
  42457c:	ldr	x0, [sp, #56]
  424580:	bl	424134 <_obstack_memory_used@@Base+0x7f54>
  424584:	str	w0, [sp, #64]
  424588:	ldr	w0, [sp, #64]
  42458c:	cmp	w0, #0x0
  424590:	cset	w0, ne  // ne = any
  424594:	and	w0, w0, #0xff
  424598:	and	x0, x0, #0xff
  42459c:	cmp	x0, #0x0
  4245a0:	b.eq	4245f8 <_obstack_memory_used@@Base+0x8418>  // b.none
  4245a4:	ldr	w0, [sp, #64]
  4245a8:	b	4246c4 <_obstack_memory_used@@Base+0x84e4>
  4245ac:	ldr	x0, [sp, #56]
  4245b0:	ldr	x2, [x0, #40]
  4245b4:	ldr	x1, [sp, #96]
  4245b8:	mov	x0, x1
  4245bc:	lsl	x0, x0, #1
  4245c0:	add	x0, x0, x1
  4245c4:	lsl	x0, x0, #3
  4245c8:	add	x0, x2, x0
  4245cc:	ldr	x1, [sp, #72]
  4245d0:	bl	41ff4c <_obstack_memory_used@@Base+0x3d6c>
  4245d4:	strb	w0, [sp, #71]
  4245d8:	ldrb	w0, [sp, #71]
  4245dc:	eor	w0, w0, #0x1
  4245e0:	and	w0, w0, #0xff
  4245e4:	and	x0, x0, #0xff
  4245e8:	cmp	x0, #0x0
  4245ec:	b.eq	4245f8 <_obstack_memory_used@@Base+0x8418>  // b.none
  4245f0:	mov	w0, #0xc                   	// #12
  4245f4:	b	4246c4 <_obstack_memory_used@@Base+0x84e4>
  4245f8:	ldr	x0, [sp, #56]
  4245fc:	ldr	x2, [x0, #40]
  424600:	ldr	x1, [sp, #104]
  424604:	mov	x0, x1
  424608:	lsl	x0, x0, #1
  42460c:	add	x0, x0, x1
  424610:	lsl	x0, x0, #3
  424614:	add	x0, x2, x0
  424618:	ldr	x0, [x0, #16]
  42461c:	ldr	x0, [x0, #8]
  424620:	str	x0, [sp, #80]
  424624:	ldr	w2, [sp, #92]
  424628:	ldr	x1, [sp, #80]
  42462c:	ldr	x0, [sp, #56]
  424630:	bl	424798 <_obstack_memory_used@@Base+0x85b8>
  424634:	str	x0, [sp, #72]
  424638:	ldr	x0, [sp, #72]
  42463c:	cmn	x0, #0x1
  424640:	cset	w0, eq  // eq = none
  424644:	and	w0, w0, #0xff
  424648:	and	x0, x0, #0xff
  42464c:	cmp	x0, #0x0
  424650:	b.eq	42465c <_obstack_memory_used@@Base+0x847c>  // b.none
  424654:	mov	w0, #0xc                   	// #12
  424658:	b	4246c4 <_obstack_memory_used@@Base+0x84e4>
  42465c:	ldr	x0, [sp, #56]
  424660:	ldr	x2, [x0, #40]
  424664:	ldr	x1, [sp, #96]
  424668:	mov	x0, x1
  42466c:	lsl	x0, x0, #1
  424670:	add	x0, x0, x1
  424674:	lsl	x0, x0, #3
  424678:	add	x0, x2, x0
  42467c:	ldr	x1, [sp, #72]
  424680:	bl	41ff4c <_obstack_memory_used@@Base+0x3d6c>
  424684:	strb	w0, [sp, #71]
  424688:	ldrb	w0, [sp, #71]
  42468c:	eor	w0, w0, #0x1
  424690:	and	w0, w0, #0xff
  424694:	and	x0, x0, #0xff
  424698:	cmp	x0, #0x0
  42469c:	b.eq	4246a8 <_obstack_memory_used@@Base+0x84c8>  // b.none
  4246a0:	mov	w0, #0xc                   	// #12
  4246a4:	b	4246c4 <_obstack_memory_used@@Base+0x84e4>
  4246a8:	ldr	x0, [sp, #80]
  4246ac:	str	x0, [sp, #104]
  4246b0:	ldr	x0, [sp, #72]
  4246b4:	str	x0, [sp, #96]
  4246b8:	b	424168 <_obstack_memory_used@@Base+0x7f88>
  4246bc:	nop
  4246c0:	mov	w0, #0x0                   	// #0
  4246c4:	ldp	x29, x30, [sp], #112
  4246c8:	ret
  4246cc:	sub	sp, sp, #0x30
  4246d0:	str	x0, [sp, #24]
  4246d4:	str	x1, [sp, #16]
  4246d8:	str	w2, [sp, #12]
  4246dc:	ldr	x0, [sp, #24]
  4246e0:	ldr	x0, [x0, #16]
  4246e4:	sub	x0, x0, #0x1
  4246e8:	str	x0, [sp, #40]
  4246ec:	b	424758 <_obstack_memory_used@@Base+0x8578>
  4246f0:	ldr	x0, [sp, #24]
  4246f4:	ldr	x1, [x0, #32]
  4246f8:	ldr	x0, [sp, #40]
  4246fc:	lsl	x0, x0, #3
  424700:	add	x0, x1, x0
  424704:	ldr	x0, [x0]
  424708:	ldr	x1, [sp, #16]
  42470c:	cmp	x1, x0
  424710:	b.ne	42474c <_obstack_memory_used@@Base+0x856c>  // b.any
  424714:	ldr	x0, [sp, #24]
  424718:	ldr	x1, [x0]
  42471c:	ldr	x0, [sp, #40]
  424720:	lsl	x0, x0, #4
  424724:	add	x0, x1, x0
  424728:	ldr	w0, [x0, #8]
  42472c:	ubfx	x0, x0, #8, #10
  424730:	and	w0, w0, #0xffff
  424734:	mov	w1, w0
  424738:	ldr	w0, [sp, #12]
  42473c:	cmp	w0, w1
  424740:	b.ne	42474c <_obstack_memory_used@@Base+0x856c>  // b.any
  424744:	ldr	x0, [sp, #40]
  424748:	b	424790 <_obstack_memory_used@@Base+0x85b0>
  42474c:	ldr	x0, [sp, #40]
  424750:	sub	x0, x0, #0x1
  424754:	str	x0, [sp, #40]
  424758:	ldr	x0, [sp, #24]
  42475c:	ldr	x1, [x0]
  424760:	ldr	x0, [sp, #40]
  424764:	lsl	x0, x0, #4
  424768:	add	x0, x1, x0
  42476c:	ldrb	w0, [x0, #10]
  424770:	and	w0, w0, #0x4
  424774:	and	w0, w0, #0xff
  424778:	cmp	w0, #0x0
  42477c:	b.eq	42478c <_obstack_memory_used@@Base+0x85ac>  // b.none
  424780:	ldr	x0, [sp, #40]
  424784:	cmp	x0, #0x0
  424788:	b.gt	4246f0 <_obstack_memory_used@@Base+0x8510>
  42478c:	mov	x0, #0xffffffffffffffff    	// #-1
  424790:	add	sp, sp, #0x30
  424794:	ret
  424798:	stp	x29, x30, [sp, #-64]!
  42479c:	mov	x29, sp
  4247a0:	str	x0, [sp, #40]
  4247a4:	str	x1, [sp, #32]
  4247a8:	str	w2, [sp, #28]
  4247ac:	ldr	x0, [sp, #40]
  4247b0:	ldr	x1, [x0]
  4247b4:	ldr	x0, [sp, #32]
  4247b8:	lsl	x0, x0, #4
  4247bc:	add	x0, x1, x0
  4247c0:	ldp	x1, x2, [x0]
  4247c4:	ldr	x0, [sp, #40]
  4247c8:	bl	420484 <_obstack_memory_used@@Base+0x42a4>
  4247cc:	str	x0, [sp, #56]
  4247d0:	ldr	x0, [sp, #56]
  4247d4:	cmn	x0, #0x1
  4247d8:	cset	w0, ne  // ne = any
  4247dc:	and	w0, w0, #0xff
  4247e0:	and	x0, x0, #0xff
  4247e4:	cmp	x0, #0x0
  4247e8:	b.eq	4248bc <_obstack_memory_used@@Base+0x86dc>  // b.none
  4247ec:	ldr	x0, [sp, #40]
  4247f0:	ldr	x1, [x0]
  4247f4:	ldr	x0, [sp, #56]
  4247f8:	lsl	x0, x0, #4
  4247fc:	add	x1, x1, x0
  424800:	ldr	w0, [sp, #28]
  424804:	and	w0, w0, #0x3ff
  424808:	and	w2, w0, #0xffff
  42480c:	ldr	w0, [x1, #8]
  424810:	bfi	w0, w2, #8, #10
  424814:	str	w0, [x1, #8]
  424818:	ldr	x0, [sp, #40]
  42481c:	ldr	x1, [x0]
  424820:	ldr	x0, [sp, #56]
  424824:	lsl	x0, x0, #4
  424828:	add	x0, x1, x0
  42482c:	ldr	w0, [x0, #8]
  424830:	ubfx	x0, x0, #8, #10
  424834:	and	w2, w0, #0xffff
  424838:	ldr	x0, [sp, #40]
  42483c:	ldr	x1, [x0]
  424840:	ldr	x0, [sp, #32]
  424844:	lsl	x0, x0, #4
  424848:	add	x0, x1, x0
  42484c:	ldr	w0, [x0, #8]
  424850:	ubfx	x0, x0, #8, #10
  424854:	and	w0, w0, #0xffff
  424858:	ldr	x1, [sp, #40]
  42485c:	ldr	x3, [x1]
  424860:	ldr	x1, [sp, #56]
  424864:	lsl	x1, x1, #4
  424868:	add	x1, x3, x1
  42486c:	orr	w0, w2, w0
  424870:	and	w2, w0, #0xffff
  424874:	ldr	w0, [x1, #8]
  424878:	bfi	w0, w2, #8, #10
  42487c:	str	w0, [x1, #8]
  424880:	ldr	x0, [sp, #40]
  424884:	ldr	x1, [x0]
  424888:	ldr	x0, [sp, #56]
  42488c:	lsl	x0, x0, #4
  424890:	add	x0, x1, x0
  424894:	ldrb	w1, [x0, #10]
  424898:	orr	w1, w1, #0x4
  42489c:	strb	w1, [x0, #10]
  4248a0:	ldr	x0, [sp, #40]
  4248a4:	ldr	x1, [x0, #32]
  4248a8:	ldr	x0, [sp, #56]
  4248ac:	lsl	x0, x0, #3
  4248b0:	add	x0, x1, x0
  4248b4:	ldr	x1, [sp, #32]
  4248b8:	str	x1, [x0]
  4248bc:	ldr	x0, [sp, #56]
  4248c0:	ldp	x29, x30, [sp], #64
  4248c4:	ret
  4248c8:	stp	x29, x30, [sp, #-64]!
  4248cc:	mov	x29, sp
  4248d0:	str	x0, [sp, #24]
  4248d4:	str	xzr, [sp, #48]
  4248d8:	b	424914 <_obstack_memory_used@@Base+0x8734>
  4248dc:	ldr	x0, [sp, #24]
  4248e0:	ldr	x2, [x0, #56]
  4248e4:	ldr	x1, [sp, #48]
  4248e8:	mov	x0, x1
  4248ec:	lsl	x0, x0, #1
  4248f0:	add	x0, x0, x1
  4248f4:	lsl	x0, x0, #3
  4248f8:	add	x0, x2, x0
  4248fc:	mov	x2, #0x18                  	// #24
  424900:	mov	w1, #0x0                   	// #0
  424904:	bl	402980 <memset@plt>
  424908:	ldr	x0, [sp, #48]
  42490c:	add	x0, x0, #0x1
  424910:	str	x0, [sp, #48]
  424914:	ldr	x0, [sp, #24]
  424918:	ldr	x1, [x0, #16]
  42491c:	ldr	x0, [sp, #48]
  424920:	cmp	x1, x0
  424924:	b.hi	4248dc <_obstack_memory_used@@Base+0x86fc>  // b.pmore
  424928:	str	xzr, [sp, #56]
  42492c:	b	424a08 <_obstack_memory_used@@Base+0x8828>
  424930:	ldr	x0, [sp, #24]
  424934:	ldr	x2, [x0, #48]
  424938:	ldr	x1, [sp, #56]
  42493c:	mov	x0, x1
  424940:	lsl	x0, x0, #1
  424944:	add	x0, x0, x1
  424948:	lsl	x0, x0, #3
  42494c:	add	x0, x2, x0
  424950:	ldr	x0, [x0, #16]
  424954:	str	x0, [sp, #40]
  424958:	str	xzr, [sp, #48]
  42495c:	b	4249cc <_obstack_memory_used@@Base+0x87ec>
  424960:	ldr	x0, [sp, #24]
  424964:	ldr	x1, [x0, #56]
  424968:	ldr	x0, [sp, #48]
  42496c:	lsl	x0, x0, #3
  424970:	ldr	x2, [sp, #40]
  424974:	add	x0, x2, x0
  424978:	ldr	x0, [x0]
  42497c:	mov	x2, x0
  424980:	mov	x0, x2
  424984:	lsl	x0, x0, #1
  424988:	add	x0, x0, x2
  42498c:	lsl	x0, x0, #3
  424990:	add	x0, x1, x0
  424994:	ldr	x1, [sp, #56]
  424998:	bl	420180 <_obstack_memory_used@@Base+0x3fa0>
  42499c:	strb	w0, [sp, #39]
  4249a0:	ldrb	w0, [sp, #39]
  4249a4:	eor	w0, w0, #0x1
  4249a8:	and	w0, w0, #0xff
  4249ac:	and	x0, x0, #0xff
  4249b0:	cmp	x0, #0x0
  4249b4:	b.eq	4249c0 <_obstack_memory_used@@Base+0x87e0>  // b.none
  4249b8:	mov	w0, #0xc                   	// #12
  4249bc:	b	424a20 <_obstack_memory_used@@Base+0x8840>
  4249c0:	ldr	x0, [sp, #48]
  4249c4:	add	x0, x0, #0x1
  4249c8:	str	x0, [sp, #48]
  4249cc:	ldr	x0, [sp, #24]
  4249d0:	ldr	x2, [x0, #48]
  4249d4:	ldr	x1, [sp, #56]
  4249d8:	mov	x0, x1
  4249dc:	lsl	x0, x0, #1
  4249e0:	add	x0, x0, x1
  4249e4:	lsl	x0, x0, #3
  4249e8:	add	x0, x2, x0
  4249ec:	ldr	x0, [x0, #8]
  4249f0:	ldr	x1, [sp, #48]
  4249f4:	cmp	x1, x0
  4249f8:	b.lt	424960 <_obstack_memory_used@@Base+0x8780>  // b.tstop
  4249fc:	ldr	x0, [sp, #56]
  424a00:	add	x0, x0, #0x1
  424a04:	str	x0, [sp, #56]
  424a08:	ldr	x0, [sp, #24]
  424a0c:	ldr	x1, [x0, #16]
  424a10:	ldr	x0, [sp, #56]
  424a14:	cmp	x1, x0
  424a18:	b.hi	424930 <_obstack_memory_used@@Base+0x8750>  // b.pmore
  424a1c:	mov	w0, #0x0                   	// #0
  424a20:	ldp	x29, x30, [sp], #64
  424a24:	ret
  424a28:	stp	x29, x30, [sp, #-80]!
  424a2c:	mov	x29, sp
  424a30:	str	x0, [sp, #24]
  424a34:	ldr	x0, [sp, #24]
  424a38:	ldr	x0, [x0, #16]
  424a3c:	cmp	x0, #0x0
  424a40:	strb	wzr, [sp, #71]
  424a44:	str	xzr, [sp, #72]
  424a48:	ldr	x0, [sp, #24]
  424a4c:	ldr	x1, [x0, #16]
  424a50:	ldr	x0, [sp, #72]
  424a54:	cmp	x1, x0
  424a58:	b.ne	424a80 <_obstack_memory_used@@Base+0x88a0>  // b.any
  424a5c:	ldrb	w0, [sp, #71]
  424a60:	eor	w0, w0, #0x1
  424a64:	and	w0, w0, #0xff
  424a68:	cmp	w0, #0x0
  424a6c:	b.eq	424a78 <_obstack_memory_used@@Base+0x8898>  // b.none
  424a70:	mov	w0, #0x0                   	// #0
  424a74:	b	424b64 <_obstack_memory_used@@Base+0x8984>
  424a78:	strb	wzr, [sp, #71]
  424a7c:	str	xzr, [sp, #72]
  424a80:	ldr	x0, [sp, #24]
  424a84:	ldr	x2, [x0, #48]
  424a88:	ldr	x1, [sp, #72]
  424a8c:	mov	x0, x1
  424a90:	lsl	x0, x0, #1
  424a94:	add	x0, x0, x1
  424a98:	lsl	x0, x0, #3
  424a9c:	add	x0, x2, x0
  424aa0:	ldr	x0, [x0, #8]
  424aa4:	cmn	x0, #0x1
  424aa8:	ldr	x0, [sp, #24]
  424aac:	ldr	x2, [x0, #48]
  424ab0:	ldr	x1, [sp, #72]
  424ab4:	mov	x0, x1
  424ab8:	lsl	x0, x0, #1
  424abc:	add	x0, x0, x1
  424ac0:	lsl	x0, x0, #3
  424ac4:	add	x0, x2, x0
  424ac8:	ldr	x0, [x0, #8]
  424acc:	cmp	x0, #0x0
  424ad0:	b.ne	424b50 <_obstack_memory_used@@Base+0x8970>  // b.any
  424ad4:	add	x0, sp, #0x28
  424ad8:	mov	w3, #0x1                   	// #1
  424adc:	ldr	x2, [sp, #72]
  424ae0:	ldr	x1, [sp, #24]
  424ae4:	bl	424b6c <_obstack_memory_used@@Base+0x898c>
  424ae8:	str	w0, [sp, #64]
  424aec:	ldr	w0, [sp, #64]
  424af0:	cmp	w0, #0x0
  424af4:	cset	w0, ne  // ne = any
  424af8:	and	w0, w0, #0xff
  424afc:	and	x0, x0, #0xff
  424b00:	cmp	x0, #0x0
  424b04:	b.eq	424b10 <_obstack_memory_used@@Base+0x8930>  // b.none
  424b08:	ldr	w0, [sp, #64]
  424b0c:	b	424b64 <_obstack_memory_used@@Base+0x8984>
  424b10:	ldr	x0, [sp, #24]
  424b14:	ldr	x2, [x0, #48]
  424b18:	ldr	x1, [sp, #72]
  424b1c:	mov	x0, x1
  424b20:	lsl	x0, x0, #1
  424b24:	add	x0, x0, x1
  424b28:	lsl	x0, x0, #3
  424b2c:	add	x0, x2, x0
  424b30:	ldr	x0, [x0, #8]
  424b34:	cmp	x0, #0x0
  424b38:	b.ne	424b54 <_obstack_memory_used@@Base+0x8974>  // b.any
  424b3c:	mov	w0, #0x1                   	// #1
  424b40:	strb	w0, [sp, #71]
  424b44:	ldr	x0, [sp, #56]
  424b48:	bl	402b60 <free@plt>
  424b4c:	b	424b54 <_obstack_memory_used@@Base+0x8974>
  424b50:	nop
  424b54:	ldr	x0, [sp, #72]
  424b58:	add	x0, x0, #0x1
  424b5c:	str	x0, [sp, #72]
  424b60:	b	424a48 <_obstack_memory_used@@Base+0x8868>
  424b64:	ldp	x29, x30, [sp], #80
  424b68:	ret
  424b6c:	stp	x29, x30, [sp, #-128]!
  424b70:	mov	x29, sp
  424b74:	str	x0, [sp, #40]
  424b78:	str	x1, [sp, #32]
  424b7c:	str	x2, [sp, #24]
  424b80:	strb	w3, [sp, #23]
  424b84:	strb	wzr, [sp, #119]
  424b88:	ldr	x0, [sp, #32]
  424b8c:	ldr	x2, [x0, #40]
  424b90:	ldr	x1, [sp, #24]
  424b94:	mov	x0, x1
  424b98:	lsl	x0, x0, #1
  424b9c:	add	x0, x0, x1
  424ba0:	lsl	x0, x0, #3
  424ba4:	add	x0, x2, x0
  424ba8:	ldr	x0, [x0, #8]
  424bac:	add	x1, x0, #0x1
  424bb0:	add	x0, sp, #0x48
  424bb4:	bl	41f010 <_obstack_memory_used@@Base+0x2e30>
  424bb8:	str	w0, [sp, #112]
  424bbc:	ldr	w0, [sp, #112]
  424bc0:	cmp	w0, #0x0
  424bc4:	cset	w0, ne  // ne = any
  424bc8:	and	w0, w0, #0xff
  424bcc:	and	x0, x0, #0xff
  424bd0:	cmp	x0, #0x0
  424bd4:	b.eq	424be0 <_obstack_memory_used@@Base+0x8a00>  // b.none
  424bd8:	ldr	w0, [sp, #112]
  424bdc:	b	424fbc <_obstack_memory_used@@Base+0x8ddc>
  424be0:	ldr	x0, [sp, #32]
  424be4:	ldr	x2, [x0, #48]
  424be8:	ldr	x1, [sp, #24]
  424bec:	mov	x0, x1
  424bf0:	lsl	x0, x0, #1
  424bf4:	add	x0, x0, x1
  424bf8:	lsl	x0, x0, #3
  424bfc:	add	x0, x2, x0
  424c00:	mov	x1, #0xffffffffffffffff    	// #-1
  424c04:	str	x1, [x0, #8]
  424c08:	ldr	x0, [sp, #32]
  424c0c:	ldr	x1, [x0]
  424c10:	ldr	x0, [sp, #24]
  424c14:	lsl	x0, x0, #4
  424c18:	add	x0, x1, x0
  424c1c:	ldr	w0, [x0, #8]
  424c20:	and	w0, w0, #0x3ff00
  424c24:	cmp	w0, #0x0
  424c28:	b.eq	424d04 <_obstack_memory_used@@Base+0x8b24>  // b.none
  424c2c:	ldr	x0, [sp, #32]
  424c30:	ldr	x2, [x0, #40]
  424c34:	ldr	x1, [sp, #24]
  424c38:	mov	x0, x1
  424c3c:	lsl	x0, x0, #1
  424c40:	add	x0, x0, x1
  424c44:	lsl	x0, x0, #3
  424c48:	add	x0, x2, x0
  424c4c:	ldr	x0, [x0, #8]
  424c50:	cmp	x0, #0x0
  424c54:	b.eq	424d04 <_obstack_memory_used@@Base+0x8b24>  // b.none
  424c58:	ldr	x0, [sp, #32]
  424c5c:	ldr	x2, [x0]
  424c60:	ldr	x0, [sp, #32]
  424c64:	ldr	x3, [x0, #40]
  424c68:	ldr	x1, [sp, #24]
  424c6c:	mov	x0, x1
  424c70:	lsl	x0, x0, #1
  424c74:	add	x0, x0, x1
  424c78:	lsl	x0, x0, #3
  424c7c:	add	x0, x3, x0
  424c80:	ldr	x0, [x0, #16]
  424c84:	ldr	x0, [x0]
  424c88:	lsl	x0, x0, #4
  424c8c:	add	x0, x2, x0
  424c90:	ldrb	w0, [x0, #10]
  424c94:	and	w0, w0, #0x4
  424c98:	and	w0, w0, #0xff
  424c9c:	cmp	w0, #0x0
  424ca0:	b.ne	424d04 <_obstack_memory_used@@Base+0x8b24>  // b.any
  424ca4:	ldr	x0, [sp, #32]
  424ca8:	ldr	x1, [x0]
  424cac:	ldr	x0, [sp, #24]
  424cb0:	lsl	x0, x0, #4
  424cb4:	add	x0, x1, x0
  424cb8:	ldr	w0, [x0, #8]
  424cbc:	ubfx	x0, x0, #8, #10
  424cc0:	and	w0, w0, #0xffff
  424cc4:	mov	w4, w0
  424cc8:	ldr	x3, [sp, #24]
  424ccc:	ldr	x2, [sp, #24]
  424cd0:	ldr	x1, [sp, #24]
  424cd4:	ldr	x0, [sp, #32]
  424cd8:	bl	424134 <_obstack_memory_used@@Base+0x7f54>
  424cdc:	str	w0, [sp, #112]
  424ce0:	ldr	w0, [sp, #112]
  424ce4:	cmp	w0, #0x0
  424ce8:	cset	w0, ne  // ne = any
  424cec:	and	w0, w0, #0xff
  424cf0:	and	x0, x0, #0xff
  424cf4:	cmp	x0, #0x0
  424cf8:	b.eq	424d04 <_obstack_memory_used@@Base+0x8b24>  // b.none
  424cfc:	ldr	w0, [sp, #112]
  424d00:	b	424fbc <_obstack_memory_used@@Base+0x8ddc>
  424d04:	ldr	x0, [sp, #32]
  424d08:	ldr	x1, [x0]
  424d0c:	ldr	x0, [sp, #24]
  424d10:	lsl	x0, x0, #4
  424d14:	add	x0, x1, x0
  424d18:	ldrb	w0, [x0, #8]
  424d1c:	and	w0, w0, #0x8
  424d20:	cmp	w0, #0x0
  424d24:	b.eq	424eec <_obstack_memory_used@@Base+0x8d0c>  // b.none
  424d28:	str	xzr, [sp, #120]
  424d2c:	b	424ebc <_obstack_memory_used@@Base+0x8cdc>
  424d30:	ldr	x0, [sp, #32]
  424d34:	ldr	x2, [x0, #40]
  424d38:	ldr	x1, [sp, #24]
  424d3c:	mov	x0, x1
  424d40:	lsl	x0, x0, #1
  424d44:	add	x0, x0, x1
  424d48:	lsl	x0, x0, #3
  424d4c:	add	x0, x2, x0
  424d50:	ldr	x1, [x0, #16]
  424d54:	ldr	x0, [sp, #120]
  424d58:	lsl	x0, x0, #3
  424d5c:	add	x0, x1, x0
  424d60:	ldr	x0, [x0]
  424d64:	str	x0, [sp, #104]
  424d68:	ldr	x0, [sp, #32]
  424d6c:	ldr	x2, [x0, #48]
  424d70:	ldr	x1, [sp, #104]
  424d74:	mov	x0, x1
  424d78:	lsl	x0, x0, #1
  424d7c:	add	x0, x0, x1
  424d80:	lsl	x0, x0, #3
  424d84:	add	x0, x2, x0
  424d88:	ldr	x0, [x0, #8]
  424d8c:	cmn	x0, #0x1
  424d90:	b.ne	424da0 <_obstack_memory_used@@Base+0x8bc0>  // b.any
  424d94:	mov	w0, #0x1                   	// #1
  424d98:	strb	w0, [sp, #119]
  424d9c:	b	424eb0 <_obstack_memory_used@@Base+0x8cd0>
  424da0:	ldr	x0, [sp, #32]
  424da4:	ldr	x2, [x0, #48]
  424da8:	ldr	x1, [sp, #104]
  424dac:	mov	x0, x1
  424db0:	lsl	x0, x0, #1
  424db4:	add	x0, x0, x1
  424db8:	lsl	x0, x0, #3
  424dbc:	add	x0, x2, x0
  424dc0:	ldr	x0, [x0, #8]
  424dc4:	cmp	x0, #0x0
  424dc8:	b.ne	424e08 <_obstack_memory_used@@Base+0x8c28>  // b.any
  424dcc:	add	x0, sp, #0x30
  424dd0:	mov	w3, #0x0                   	// #0
  424dd4:	ldr	x2, [sp, #104]
  424dd8:	ldr	x1, [sp, #32]
  424ddc:	bl	424b6c <_obstack_memory_used@@Base+0x898c>
  424de0:	str	w0, [sp, #112]
  424de4:	ldr	w0, [sp, #112]
  424de8:	cmp	w0, #0x0
  424dec:	cset	w0, ne  // ne = any
  424df0:	and	w0, w0, #0xff
  424df4:	and	x0, x0, #0xff
  424df8:	cmp	x0, #0x0
  424dfc:	b.eq	424e40 <_obstack_memory_used@@Base+0x8c60>  // b.none
  424e00:	ldr	w0, [sp, #112]
  424e04:	b	424fbc <_obstack_memory_used@@Base+0x8ddc>
  424e08:	ldr	x0, [sp, #32]
  424e0c:	ldr	x2, [x0, #48]
  424e10:	ldr	x1, [sp, #104]
  424e14:	mov	x0, x1
  424e18:	lsl	x0, x0, #1
  424e1c:	add	x0, x0, x1
  424e20:	lsl	x0, x0, #3
  424e24:	add	x0, x2, x0
  424e28:	add	x2, sp, #0x30
  424e2c:	mov	x3, x0
  424e30:	ldp	x0, x1, [x3]
  424e34:	stp	x0, x1, [x2]
  424e38:	ldr	x0, [x3, #16]
  424e3c:	str	x0, [x2, #16]
  424e40:	add	x1, sp, #0x30
  424e44:	add	x0, sp, #0x48
  424e48:	bl	41fb00 <_obstack_memory_used@@Base+0x3920>
  424e4c:	str	w0, [sp, #112]
  424e50:	ldr	w0, [sp, #112]
  424e54:	cmp	w0, #0x0
  424e58:	cset	w0, ne  // ne = any
  424e5c:	and	w0, w0, #0xff
  424e60:	and	x0, x0, #0xff
  424e64:	cmp	x0, #0x0
  424e68:	b.eq	424e74 <_obstack_memory_used@@Base+0x8c94>  // b.none
  424e6c:	ldr	w0, [sp, #112]
  424e70:	b	424fbc <_obstack_memory_used@@Base+0x8ddc>
  424e74:	ldr	x0, [sp, #32]
  424e78:	ldr	x2, [x0, #48]
  424e7c:	ldr	x1, [sp, #104]
  424e80:	mov	x0, x1
  424e84:	lsl	x0, x0, #1
  424e88:	add	x0, x0, x1
  424e8c:	lsl	x0, x0, #3
  424e90:	add	x0, x2, x0
  424e94:	ldr	x0, [x0, #8]
  424e98:	cmp	x0, #0x0
  424e9c:	b.ne	424eb0 <_obstack_memory_used@@Base+0x8cd0>  // b.any
  424ea0:	mov	w0, #0x1                   	// #1
  424ea4:	strb	w0, [sp, #119]
  424ea8:	ldr	x0, [sp, #64]
  424eac:	bl	402b60 <free@plt>
  424eb0:	ldr	x0, [sp, #120]
  424eb4:	add	x0, x0, #0x1
  424eb8:	str	x0, [sp, #120]
  424ebc:	ldr	x0, [sp, #32]
  424ec0:	ldr	x2, [x0, #40]
  424ec4:	ldr	x1, [sp, #24]
  424ec8:	mov	x0, x1
  424ecc:	lsl	x0, x0, #1
  424ed0:	add	x0, x0, x1
  424ed4:	lsl	x0, x0, #3
  424ed8:	add	x0, x2, x0
  424edc:	ldr	x0, [x0, #8]
  424ee0:	ldr	x1, [sp, #120]
  424ee4:	cmp	x1, x0
  424ee8:	b.lt	424d30 <_obstack_memory_used@@Base+0x8b50>  // b.tstop
  424eec:	add	x0, sp, #0x48
  424ef0:	ldr	x1, [sp, #24]
  424ef4:	bl	41ff4c <_obstack_memory_used@@Base+0x3d6c>
  424ef8:	strb	w0, [sp, #103]
  424efc:	ldrb	w0, [sp, #103]
  424f00:	eor	w0, w0, #0x1
  424f04:	and	w0, w0, #0xff
  424f08:	and	x0, x0, #0xff
  424f0c:	cmp	x0, #0x0
  424f10:	b.eq	424f1c <_obstack_memory_used@@Base+0x8d3c>  // b.none
  424f14:	mov	w0, #0xc                   	// #12
  424f18:	b	424fbc <_obstack_memory_used@@Base+0x8ddc>
  424f1c:	ldrb	w0, [sp, #119]
  424f20:	cmp	w0, #0x0
  424f24:	b.eq	424f64 <_obstack_memory_used@@Base+0x8d84>  // b.none
  424f28:	ldrb	w0, [sp, #23]
  424f2c:	eor	w0, w0, #0x1
  424f30:	and	w0, w0, #0xff
  424f34:	cmp	w0, #0x0
  424f38:	b.eq	424f64 <_obstack_memory_used@@Base+0x8d84>  // b.none
  424f3c:	ldr	x0, [sp, #32]
  424f40:	ldr	x2, [x0, #48]
  424f44:	ldr	x1, [sp, #24]
  424f48:	mov	x0, x1
  424f4c:	lsl	x0, x0, #1
  424f50:	add	x0, x0, x1
  424f54:	lsl	x0, x0, #3
  424f58:	add	x0, x2, x0
  424f5c:	str	xzr, [x0, #8]
  424f60:	b	424f9c <_obstack_memory_used@@Base+0x8dbc>
  424f64:	ldr	x0, [sp, #32]
  424f68:	ldr	x2, [x0, #48]
  424f6c:	ldr	x1, [sp, #24]
  424f70:	mov	x0, x1
  424f74:	lsl	x0, x0, #1
  424f78:	add	x0, x0, x1
  424f7c:	lsl	x0, x0, #3
  424f80:	add	x0, x2, x0
  424f84:	mov	x3, x0
  424f88:	add	x2, sp, #0x48
  424f8c:	ldp	x0, x1, [x2]
  424f90:	stp	x0, x1, [x3]
  424f94:	ldr	x0, [x2, #16]
  424f98:	str	x0, [x3, #16]
  424f9c:	ldr	x0, [sp, #40]
  424fa0:	mov	x3, x0
  424fa4:	add	x2, sp, #0x48
  424fa8:	ldp	x0, x1, [x2]
  424fac:	stp	x0, x1, [x3]
  424fb0:	ldr	x0, [x2, #16]
  424fb4:	str	x0, [x3, #16]
  424fb8:	mov	w0, #0x0                   	// #0
  424fbc:	ldp	x29, x30, [sp], #128
  424fc0:	ret
  424fc4:	stp	x29, x30, [sp, #-48]!
  424fc8:	mov	x29, sp
  424fcc:	str	x0, [sp, #40]
  424fd0:	str	x1, [sp, #32]
  424fd4:	str	x2, [sp, #24]
  424fd8:	ldr	x2, [sp, #24]
  424fdc:	ldr	x1, [sp, #32]
  424fe0:	ldr	x0, [sp, #40]
  424fe4:	bl	425010 <_obstack_memory_used@@Base+0x8e30>
  424fe8:	mov	w2, w0
  424fec:	ldr	x0, [sp, #32]
  424ff0:	ldr	x1, [x0, #72]
  424ff4:	sxtw	x0, w2
  424ff8:	add	x1, x1, x0
  424ffc:	ldr	x0, [sp, #32]
  425000:	str	x1, [x0, #72]
  425004:	nop
  425008:	ldp	x29, x30, [sp], #48
  42500c:	ret
  425010:	stp	x29, x30, [sp, #-80]!
  425014:	mov	x29, sp
  425018:	str	x0, [sp, #40]
  42501c:	str	x1, [sp, #32]
  425020:	str	x2, [sp, #24]
  425024:	ldr	x0, [sp, #32]
  425028:	ldr	x1, [x0, #104]
  42502c:	ldr	x0, [sp, #32]
  425030:	ldr	x0, [x0, #72]
  425034:	cmp	x1, x0
  425038:	b.gt	425050 <_obstack_memory_used@@Base+0x8e70>
  42503c:	ldr	x0, [sp, #40]
  425040:	mov	w1, #0x2                   	// #2
  425044:	strb	w1, [x0, #8]
  425048:	mov	w0, #0x0                   	// #0
  42504c:	b	425a7c <_obstack_memory_used@@Base+0x989c>
  425050:	ldr	x0, [sp, #32]
  425054:	ldr	x0, [x0, #8]
  425058:	ldr	x1, [sp, #32]
  42505c:	ldr	x1, [x1, #72]
  425060:	add	x0, x0, x1
  425064:	ldrb	w0, [x0]
  425068:	strb	w0, [sp, #79]
  42506c:	ldr	x0, [sp, #40]
  425070:	ldrb	w1, [sp, #79]
  425074:	strb	w1, [x0]
  425078:	ldr	x0, [sp, #40]
  42507c:	ldrb	w1, [x0, #10]
  425080:	and	w1, w1, #0xffffffbf
  425084:	strb	w1, [x0, #10]
  425088:	ldr	x0, [sp, #40]
  42508c:	ldrb	w1, [x0, #10]
  425090:	and	w1, w1, #0xffffffdf
  425094:	strb	w1, [x0, #10]
  425098:	ldr	x0, [sp, #32]
  42509c:	ldr	w0, [x0, #144]
  4250a0:	cmp	w0, #0x1
  4250a4:	b.le	425108 <_obstack_memory_used@@Base+0x8f28>
  4250a8:	ldr	x0, [sp, #32]
  4250ac:	ldr	x1, [x0, #72]
  4250b0:	ldr	x0, [sp, #32]
  4250b4:	ldr	x0, [x0, #48]
  4250b8:	cmp	x1, x0
  4250bc:	b.eq	425108 <_obstack_memory_used@@Base+0x8f28>  // b.none
  4250c0:	ldr	x0, [sp, #32]
  4250c4:	ldr	x1, [x0, #16]
  4250c8:	ldr	x0, [sp, #32]
  4250cc:	ldr	x0, [x0, #72]
  4250d0:	lsl	x0, x0, #2
  4250d4:	add	x0, x1, x0
  4250d8:	ldr	w0, [x0]
  4250dc:	cmn	w0, #0x1
  4250e0:	b.ne	425108 <_obstack_memory_used@@Base+0x8f28>  // b.any
  4250e4:	ldr	x0, [sp, #40]
  4250e8:	mov	w1, #0x1                   	// #1
  4250ec:	strb	w1, [x0, #8]
  4250f0:	ldr	x0, [sp, #40]
  4250f4:	ldrb	w1, [x0, #10]
  4250f8:	orr	w1, w1, #0x20
  4250fc:	strb	w1, [x0, #10]
  425100:	mov	w0, #0x1                   	// #1
  425104:	b	425a7c <_obstack_memory_used@@Base+0x989c>
  425108:	ldrb	w0, [sp, #79]
  42510c:	cmp	w0, #0x5c
  425110:	b.ne	4255e8 <_obstack_memory_used@@Base+0x9408>  // b.any
  425114:	ldr	x0, [sp, #32]
  425118:	ldr	x0, [x0, #72]
  42511c:	add	x1, x0, #0x1
  425120:	ldr	x0, [sp, #32]
  425124:	ldr	x0, [x0, #88]
  425128:	cmp	x1, x0
  42512c:	b.lt	425144 <_obstack_memory_used@@Base+0x8f64>  // b.tstop
  425130:	ldr	x0, [sp, #40]
  425134:	mov	w1, #0x24                  	// #36
  425138:	strb	w1, [x0, #8]
  42513c:	mov	w0, #0x1                   	// #1
  425140:	b	425a7c <_obstack_memory_used@@Base+0x989c>
  425144:	mov	x1, #0x1                   	// #1
  425148:	ldr	x0, [sp, #32]
  42514c:	bl	41ea70 <_obstack_memory_used@@Base+0x2890>
  425150:	strb	w0, [sp, #70]
  425154:	ldr	x0, [sp, #40]
  425158:	ldrb	w1, [sp, #70]
  42515c:	strb	w1, [x0]
  425160:	ldr	x0, [sp, #40]
  425164:	mov	w1, #0x1                   	// #1
  425168:	strb	w1, [x0, #8]
  42516c:	ldr	x0, [sp, #32]
  425170:	ldr	w0, [x0, #144]
  425174:	cmp	w0, #0x1
  425178:	b.le	4251e0 <_obstack_memory_used@@Base+0x9000>
  42517c:	ldr	x0, [sp, #32]
  425180:	ldr	x0, [x0, #72]
  425184:	add	x0, x0, #0x1
  425188:	mov	x1, x0
  42518c:	ldr	x0, [sp, #32]
  425190:	bl	41c650 <_obstack_memory_used@@Base+0x470>
  425194:	str	w0, [sp, #64]
  425198:	ldr	w0, [sp, #64]
  42519c:	bl	402c70 <iswalnum@plt>
  4251a0:	cmp	w0, #0x0
  4251a4:	b.ne	4251b4 <_obstack_memory_used@@Base+0x8fd4>  // b.any
  4251a8:	ldr	w0, [sp, #64]
  4251ac:	cmp	w0, #0x5f
  4251b0:	b.ne	4251bc <_obstack_memory_used@@Base+0x8fdc>  // b.any
  4251b4:	mov	w0, #0x1                   	// #1
  4251b8:	b	4251c0 <_obstack_memory_used@@Base+0x8fe0>
  4251bc:	mov	w0, #0x0                   	// #0
  4251c0:	cmp	w0, #0x0
  4251c4:	cset	w0, ne  // ne = any
  4251c8:	and	w2, w0, #0xff
  4251cc:	ldr	x1, [sp, #40]
  4251d0:	ldrb	w0, [x1, #10]
  4251d4:	bfi	w0, w2, #6, #1
  4251d8:	strb	w0, [x1, #10]
  4251dc:	b	425238 <_obstack_memory_used@@Base+0x9058>
  4251e0:	bl	402b40 <__ctype_b_loc@plt>
  4251e4:	ldr	x1, [x0]
  4251e8:	ldrb	w0, [sp, #70]
  4251ec:	lsl	x0, x0, #1
  4251f0:	add	x0, x1, x0
  4251f4:	ldrh	w0, [x0]
  4251f8:	and	w0, w0, #0x8
  4251fc:	cmp	w0, #0x0
  425200:	b.ne	425210 <_obstack_memory_used@@Base+0x9030>  // b.any
  425204:	ldrb	w0, [sp, #70]
  425208:	cmp	w0, #0x5f
  42520c:	b.ne	425218 <_obstack_memory_used@@Base+0x9038>  // b.any
  425210:	mov	w0, #0x1                   	// #1
  425214:	b	42521c <_obstack_memory_used@@Base+0x903c>
  425218:	mov	w0, #0x0                   	// #0
  42521c:	cmp	w0, #0x0
  425220:	cset	w0, ne  // ne = any
  425224:	and	w2, w0, #0xff
  425228:	ldr	x1, [sp, #40]
  42522c:	ldrb	w0, [x1, #10]
  425230:	bfi	w0, w2, #6, #1
  425234:	strb	w0, [x1, #10]
  425238:	ldrb	w0, [sp, #70]
  42523c:	sub	w0, w0, #0x27
  425240:	cmp	w0, #0x56
  425244:	b.hi	42554c <_obstack_memory_used@@Base+0x936c>  // b.pmore
  425248:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x1ae20>
  42524c:	add	x1, x1, #0x3f4
  425250:	ldr	w0, [x1, w0, uxtw #2]
  425254:	adr	x1, 425260 <_obstack_memory_used@@Base+0x9080>
  425258:	add	x0, x1, w0, sxtw #2
  42525c:	br	x0
  425260:	ldr	x0, [sp, #24]
  425264:	and	x0, x0, #0x400
  425268:	cmp	x0, #0x0
  42526c:	b.ne	425554 <_obstack_memory_used@@Base+0x9374>  // b.any
  425270:	ldr	x0, [sp, #24]
  425274:	and	x0, x0, #0x8000
  425278:	cmp	x0, #0x0
  42527c:	b.ne	425554 <_obstack_memory_used@@Base+0x9374>  // b.any
  425280:	ldr	x0, [sp, #40]
  425284:	mov	w1, #0xa                   	// #10
  425288:	strb	w1, [x0, #8]
  42528c:	b	425554 <_obstack_memory_used@@Base+0x9374>
  425290:	ldr	x0, [sp, #24]
  425294:	and	x0, x0, #0x4000
  425298:	cmp	x0, #0x0
  42529c:	b.ne	42555c <_obstack_memory_used@@Base+0x937c>  // b.any
  4252a0:	ldr	x0, [sp, #40]
  4252a4:	mov	w1, #0x4                   	// #4
  4252a8:	strb	w1, [x0, #8]
  4252ac:	ldrb	w0, [sp, #70]
  4252b0:	sub	w0, w0, #0x31
  4252b4:	sxtw	x1, w0
  4252b8:	ldr	x0, [sp, #40]
  4252bc:	str	x1, [x0]
  4252c0:	b	42555c <_obstack_memory_used@@Base+0x937c>
  4252c4:	ldr	x0, [sp, #24]
  4252c8:	and	x0, x0, #0x80000
  4252cc:	cmp	x0, #0x0
  4252d0:	b.ne	425564 <_obstack_memory_used@@Base+0x9384>  // b.any
  4252d4:	ldr	x0, [sp, #40]
  4252d8:	mov	w1, #0xc                   	// #12
  4252dc:	strb	w1, [x0, #8]
  4252e0:	ldr	x0, [sp, #40]
  4252e4:	mov	w1, #0x6                   	// #6
  4252e8:	str	w1, [x0]
  4252ec:	b	425564 <_obstack_memory_used@@Base+0x9384>
  4252f0:	ldr	x0, [sp, #24]
  4252f4:	and	x0, x0, #0x80000
  4252f8:	cmp	x0, #0x0
  4252fc:	b.ne	42556c <_obstack_memory_used@@Base+0x938c>  // b.any
  425300:	ldr	x0, [sp, #40]
  425304:	mov	w1, #0xc                   	// #12
  425308:	strb	w1, [x0, #8]
  42530c:	ldr	x0, [sp, #40]
  425310:	mov	w1, #0x9                   	// #9
  425314:	str	w1, [x0]
  425318:	b	42556c <_obstack_memory_used@@Base+0x938c>
  42531c:	ldr	x0, [sp, #24]
  425320:	and	x0, x0, #0x80000
  425324:	cmp	x0, #0x0
  425328:	b.ne	425574 <_obstack_memory_used@@Base+0x9394>  // b.any
  42532c:	ldr	x0, [sp, #40]
  425330:	mov	w1, #0xc                   	// #12
  425334:	strb	w1, [x0, #8]
  425338:	ldr	x0, [sp, #40]
  42533c:	mov	w1, #0x100                 	// #256
  425340:	str	w1, [x0]
  425344:	b	425574 <_obstack_memory_used@@Base+0x9394>
  425348:	ldr	x0, [sp, #24]
  42534c:	and	x0, x0, #0x80000
  425350:	cmp	x0, #0x0
  425354:	b.ne	42557c <_obstack_memory_used@@Base+0x939c>  // b.any
  425358:	ldr	x0, [sp, #40]
  42535c:	mov	w1, #0xc                   	// #12
  425360:	strb	w1, [x0, #8]
  425364:	ldr	x0, [sp, #40]
  425368:	mov	w1, #0x200                 	// #512
  42536c:	str	w1, [x0]
  425370:	b	42557c <_obstack_memory_used@@Base+0x939c>
  425374:	ldr	x0, [sp, #24]
  425378:	and	x0, x0, #0x80000
  42537c:	cmp	x0, #0x0
  425380:	b.ne	425584 <_obstack_memory_used@@Base+0x93a4>  // b.any
  425384:	ldr	x0, [sp, #40]
  425388:	mov	w1, #0x20                  	// #32
  42538c:	strb	w1, [x0, #8]
  425390:	b	425584 <_obstack_memory_used@@Base+0x93a4>
  425394:	ldr	x0, [sp, #24]
  425398:	and	x0, x0, #0x80000
  42539c:	cmp	x0, #0x0
  4253a0:	b.ne	42558c <_obstack_memory_used@@Base+0x93ac>  // b.any
  4253a4:	ldr	x0, [sp, #40]
  4253a8:	mov	w1, #0x21                  	// #33
  4253ac:	strb	w1, [x0, #8]
  4253b0:	b	42558c <_obstack_memory_used@@Base+0x93ac>
  4253b4:	ldr	x0, [sp, #24]
  4253b8:	and	x0, x0, #0x80000
  4253bc:	cmp	x0, #0x0
  4253c0:	b.ne	425594 <_obstack_memory_used@@Base+0x93b4>  // b.any
  4253c4:	ldr	x0, [sp, #40]
  4253c8:	mov	w1, #0x22                  	// #34
  4253cc:	strb	w1, [x0, #8]
  4253d0:	b	425594 <_obstack_memory_used@@Base+0x93b4>
  4253d4:	ldr	x0, [sp, #24]
  4253d8:	and	x0, x0, #0x80000
  4253dc:	cmp	x0, #0x0
  4253e0:	b.ne	42559c <_obstack_memory_used@@Base+0x93bc>  // b.any
  4253e4:	ldr	x0, [sp, #40]
  4253e8:	mov	w1, #0x23                  	// #35
  4253ec:	strb	w1, [x0, #8]
  4253f0:	b	42559c <_obstack_memory_used@@Base+0x93bc>
  4253f4:	ldr	x0, [sp, #24]
  4253f8:	and	x0, x0, #0x80000
  4253fc:	cmp	x0, #0x0
  425400:	b.ne	4255a4 <_obstack_memory_used@@Base+0x93c4>  // b.any
  425404:	ldr	x0, [sp, #40]
  425408:	mov	w1, #0xc                   	// #12
  42540c:	strb	w1, [x0, #8]
  425410:	ldr	x0, [sp, #40]
  425414:	mov	w1, #0x40                  	// #64
  425418:	str	w1, [x0]
  42541c:	b	4255a4 <_obstack_memory_used@@Base+0x93c4>
  425420:	ldr	x0, [sp, #24]
  425424:	and	x0, x0, #0x80000
  425428:	cmp	x0, #0x0
  42542c:	b.ne	4255ac <_obstack_memory_used@@Base+0x93cc>  // b.any
  425430:	ldr	x0, [sp, #40]
  425434:	mov	w1, #0xc                   	// #12
  425438:	strb	w1, [x0, #8]
  42543c:	ldr	x0, [sp, #40]
  425440:	mov	w1, #0x80                  	// #128
  425444:	str	w1, [x0]
  425448:	b	4255ac <_obstack_memory_used@@Base+0x93cc>
  42544c:	ldr	x0, [sp, #24]
  425450:	and	x0, x0, #0x2000
  425454:	cmp	x0, #0x0
  425458:	b.ne	4255b4 <_obstack_memory_used@@Base+0x93d4>  // b.any
  42545c:	ldr	x0, [sp, #40]
  425460:	mov	w1, #0x8                   	// #8
  425464:	strb	w1, [x0, #8]
  425468:	b	4255b4 <_obstack_memory_used@@Base+0x93d4>
  42546c:	ldr	x0, [sp, #24]
  425470:	and	x0, x0, #0x2000
  425474:	cmp	x0, #0x0
  425478:	b.ne	4255bc <_obstack_memory_used@@Base+0x93dc>  // b.any
  42547c:	ldr	x0, [sp, #40]
  425480:	mov	w1, #0x9                   	// #9
  425484:	strb	w1, [x0, #8]
  425488:	b	4255bc <_obstack_memory_used@@Base+0x93dc>
  42548c:	ldr	x0, [sp, #24]
  425490:	and	x0, x0, #0x400
  425494:	cmp	x0, #0x0
  425498:	b.ne	4255c4 <_obstack_memory_used@@Base+0x93e4>  // b.any
  42549c:	ldr	x0, [sp, #24]
  4254a0:	and	x0, x0, #0x2
  4254a4:	cmp	x0, #0x0
  4254a8:	b.eq	4255c4 <_obstack_memory_used@@Base+0x93e4>  // b.none
  4254ac:	ldr	x0, [sp, #40]
  4254b0:	mov	w1, #0x12                  	// #18
  4254b4:	strb	w1, [x0, #8]
  4254b8:	b	4255c4 <_obstack_memory_used@@Base+0x93e4>
  4254bc:	ldr	x0, [sp, #24]
  4254c0:	and	x0, x0, #0x400
  4254c4:	cmp	x0, #0x0
  4254c8:	b.ne	4255cc <_obstack_memory_used@@Base+0x93ec>  // b.any
  4254cc:	ldr	x0, [sp, #24]
  4254d0:	and	x0, x0, #0x2
  4254d4:	cmp	x0, #0x0
  4254d8:	b.eq	4255cc <_obstack_memory_used@@Base+0x93ec>  // b.none
  4254dc:	ldr	x0, [sp, #40]
  4254e0:	mov	w1, #0x13                  	// #19
  4254e4:	strb	w1, [x0, #8]
  4254e8:	b	4255cc <_obstack_memory_used@@Base+0x93ec>
  4254ec:	ldr	x0, [sp, #24]
  4254f0:	and	x0, x0, #0x200
  4254f4:	cmp	x0, #0x0
  4254f8:	b.eq	4255d4 <_obstack_memory_used@@Base+0x93f4>  // b.none
  4254fc:	ldr	x0, [sp, #24]
  425500:	and	x0, x0, #0x1000
  425504:	cmp	x0, #0x0
  425508:	b.ne	4255d4 <_obstack_memory_used@@Base+0x93f4>  // b.any
  42550c:	ldr	x0, [sp, #40]
  425510:	mov	w1, #0x17                  	// #23
  425514:	strb	w1, [x0, #8]
  425518:	b	4255d4 <_obstack_memory_used@@Base+0x93f4>
  42551c:	ldr	x0, [sp, #24]
  425520:	and	x0, x0, #0x200
  425524:	cmp	x0, #0x0
  425528:	b.eq	4255dc <_obstack_memory_used@@Base+0x93fc>  // b.none
  42552c:	ldr	x0, [sp, #24]
  425530:	and	x0, x0, #0x1000
  425534:	cmp	x0, #0x0
  425538:	b.ne	4255dc <_obstack_memory_used@@Base+0x93fc>  // b.any
  42553c:	ldr	x0, [sp, #40]
  425540:	mov	w1, #0x18                  	// #24
  425544:	strb	w1, [x0, #8]
  425548:	b	4255dc <_obstack_memory_used@@Base+0x93fc>
  42554c:	nop
  425550:	b	4255e0 <_obstack_memory_used@@Base+0x9400>
  425554:	nop
  425558:	b	4255e0 <_obstack_memory_used@@Base+0x9400>
  42555c:	nop
  425560:	b	4255e0 <_obstack_memory_used@@Base+0x9400>
  425564:	nop
  425568:	b	4255e0 <_obstack_memory_used@@Base+0x9400>
  42556c:	nop
  425570:	b	4255e0 <_obstack_memory_used@@Base+0x9400>
  425574:	nop
  425578:	b	4255e0 <_obstack_memory_used@@Base+0x9400>
  42557c:	nop
  425580:	b	4255e0 <_obstack_memory_used@@Base+0x9400>
  425584:	nop
  425588:	b	4255e0 <_obstack_memory_used@@Base+0x9400>
  42558c:	nop
  425590:	b	4255e0 <_obstack_memory_used@@Base+0x9400>
  425594:	nop
  425598:	b	4255e0 <_obstack_memory_used@@Base+0x9400>
  42559c:	nop
  4255a0:	b	4255e0 <_obstack_memory_used@@Base+0x9400>
  4255a4:	nop
  4255a8:	b	4255e0 <_obstack_memory_used@@Base+0x9400>
  4255ac:	nop
  4255b0:	b	4255e0 <_obstack_memory_used@@Base+0x9400>
  4255b4:	nop
  4255b8:	b	4255e0 <_obstack_memory_used@@Base+0x9400>
  4255bc:	nop
  4255c0:	b	4255e0 <_obstack_memory_used@@Base+0x9400>
  4255c4:	nop
  4255c8:	b	4255e0 <_obstack_memory_used@@Base+0x9400>
  4255cc:	nop
  4255d0:	b	4255e0 <_obstack_memory_used@@Base+0x9400>
  4255d4:	nop
  4255d8:	b	4255e0 <_obstack_memory_used@@Base+0x9400>
  4255dc:	nop
  4255e0:	mov	w0, #0x2                   	// #2
  4255e4:	b	425a7c <_obstack_memory_used@@Base+0x989c>
  4255e8:	ldr	x0, [sp, #40]
  4255ec:	mov	w1, #0x1                   	// #1
  4255f0:	strb	w1, [x0, #8]
  4255f4:	ldr	x0, [sp, #32]
  4255f8:	ldr	w0, [x0, #144]
  4255fc:	cmp	w0, #0x1
  425600:	b.le	425664 <_obstack_memory_used@@Base+0x9484>
  425604:	ldr	x0, [sp, #32]
  425608:	ldr	x0, [x0, #72]
  42560c:	mov	x1, x0
  425610:	ldr	x0, [sp, #32]
  425614:	bl	41c650 <_obstack_memory_used@@Base+0x470>
  425618:	str	w0, [sp, #72]
  42561c:	ldr	w0, [sp, #72]
  425620:	bl	402c70 <iswalnum@plt>
  425624:	cmp	w0, #0x0
  425628:	b.ne	425638 <_obstack_memory_used@@Base+0x9458>  // b.any
  42562c:	ldr	w0, [sp, #72]
  425630:	cmp	w0, #0x5f
  425634:	b.ne	425640 <_obstack_memory_used@@Base+0x9460>  // b.any
  425638:	mov	w0, #0x1                   	// #1
  42563c:	b	425644 <_obstack_memory_used@@Base+0x9464>
  425640:	mov	w0, #0x0                   	// #0
  425644:	cmp	w0, #0x0
  425648:	cset	w0, ne  // ne = any
  42564c:	and	w2, w0, #0xff
  425650:	ldr	x1, [sp, #40]
  425654:	ldrb	w0, [x1, #10]
  425658:	bfi	w0, w2, #6, #1
  42565c:	strb	w0, [x1, #10]
  425660:	b	4256c4 <_obstack_memory_used@@Base+0x94e4>
  425664:	bl	402b40 <__ctype_b_loc@plt>
  425668:	ldr	x1, [x0]
  42566c:	ldr	x0, [sp, #40]
  425670:	ldrb	w0, [x0]
  425674:	and	x0, x0, #0xff
  425678:	lsl	x0, x0, #1
  42567c:	add	x0, x1, x0
  425680:	ldrh	w0, [x0]
  425684:	and	w0, w0, #0x8
  425688:	cmp	w0, #0x0
  42568c:	b.ne	4256a0 <_obstack_memory_used@@Base+0x94c0>  // b.any
  425690:	ldr	x0, [sp, #40]
  425694:	ldrb	w0, [x0]
  425698:	cmp	w0, #0x5f
  42569c:	b.ne	4256a8 <_obstack_memory_used@@Base+0x94c8>  // b.any
  4256a0:	mov	w0, #0x1                   	// #1
  4256a4:	b	4256ac <_obstack_memory_used@@Base+0x94cc>
  4256a8:	mov	w0, #0x0                   	// #0
  4256ac:	and	w0, w0, #0x1
  4256b0:	and	w2, w0, #0xff
  4256b4:	ldr	x1, [sp, #40]
  4256b8:	ldrb	w0, [x1, #10]
  4256bc:	bfi	w0, w2, #6, #1
  4256c0:	strb	w0, [x1, #10]
  4256c4:	ldrb	w0, [sp, #79]
  4256c8:	cmp	w0, #0x7d
  4256cc:	b.eq	42587c <_obstack_memory_used@@Base+0x969c>  // b.none
  4256d0:	cmp	w0, #0x7d
  4256d4:	b.gt	425a24 <_obstack_memory_used@@Base+0x9844>
  4256d8:	cmp	w0, #0x7c
  4256dc:	b.eq	4257ac <_obstack_memory_used@@Base+0x95cc>  // b.none
  4256e0:	cmp	w0, #0x7c
  4256e4:	b.gt	425a24 <_obstack_memory_used@@Base+0x9844>
  4256e8:	cmp	w0, #0x7b
  4256ec:	b.eq	42584c <_obstack_memory_used@@Base+0x966c>  // b.none
  4256f0:	cmp	w0, #0x7b
  4256f4:	b.gt	425a24 <_obstack_memory_used@@Base+0x9844>
  4256f8:	cmp	w0, #0x5e
  4256fc:	b.eq	42590c <_obstack_memory_used@@Base+0x972c>  // b.none
  425700:	cmp	w0, #0x5e
  425704:	b.gt	425a24 <_obstack_memory_used@@Base+0x9844>
  425708:	cmp	w0, #0x5b
  42570c:	b.eq	4258ec <_obstack_memory_used@@Base+0x970c>  // b.none
  425710:	cmp	w0, #0x5b
  425714:	b.gt	425a24 <_obstack_memory_used@@Base+0x9844>
  425718:	cmp	w0, #0x3f
  42571c:	b.eq	42581c <_obstack_memory_used@@Base+0x963c>  // b.none
  425720:	cmp	w0, #0x3f
  425724:	b.gt	425a24 <_obstack_memory_used@@Base+0x9844>
  425728:	cmp	w0, #0x2e
  42572c:	b.eq	4258fc <_obstack_memory_used@@Base+0x971c>  // b.none
  425730:	cmp	w0, #0x2e
  425734:	b.gt	425a24 <_obstack_memory_used@@Base+0x9844>
  425738:	cmp	w0, #0x2b
  42573c:	b.eq	4257ec <_obstack_memory_used@@Base+0x960c>  // b.none
  425740:	cmp	w0, #0x2b
  425744:	b.gt	425a24 <_obstack_memory_used@@Base+0x9844>
  425748:	cmp	w0, #0x2a
  42574c:	b.eq	4257dc <_obstack_memory_used@@Base+0x95fc>  // b.none
  425750:	cmp	w0, #0x2a
  425754:	b.gt	425a24 <_obstack_memory_used@@Base+0x9844>
  425758:	cmp	w0, #0x29
  42575c:	b.eq	4258cc <_obstack_memory_used@@Base+0x96ec>  // b.none
  425760:	cmp	w0, #0x29
  425764:	b.gt	425a24 <_obstack_memory_used@@Base+0x9844>
  425768:	cmp	w0, #0x28
  42576c:	b.eq	4258ac <_obstack_memory_used@@Base+0x96cc>  // b.none
  425770:	cmp	w0, #0x28
  425774:	b.gt	425a24 <_obstack_memory_used@@Base+0x9844>
  425778:	cmp	w0, #0xa
  42577c:	b.eq	42578c <_obstack_memory_used@@Base+0x95ac>  // b.none
  425780:	cmp	w0, #0x24
  425784:	b.eq	42598c <_obstack_memory_used@@Base+0x97ac>  // b.none
  425788:	b	425a24 <_obstack_memory_used@@Base+0x9844>
  42578c:	ldr	x0, [sp, #24]
  425790:	and	x0, x0, #0x800
  425794:	cmp	x0, #0x0
  425798:	b.eq	425a2c <_obstack_memory_used@@Base+0x984c>  // b.none
  42579c:	ldr	x0, [sp, #40]
  4257a0:	mov	w1, #0xa                   	// #10
  4257a4:	strb	w1, [x0, #8]
  4257a8:	b	425a2c <_obstack_memory_used@@Base+0x984c>
  4257ac:	ldr	x0, [sp, #24]
  4257b0:	and	x0, x0, #0x400
  4257b4:	cmp	x0, #0x0
  4257b8:	b.ne	425a34 <_obstack_memory_used@@Base+0x9854>  // b.any
  4257bc:	ldr	x0, [sp, #24]
  4257c0:	and	x0, x0, #0x8000
  4257c4:	cmp	x0, #0x0
  4257c8:	b.eq	425a34 <_obstack_memory_used@@Base+0x9854>  // b.none
  4257cc:	ldr	x0, [sp, #40]
  4257d0:	mov	w1, #0xa                   	// #10
  4257d4:	strb	w1, [x0, #8]
  4257d8:	b	425a34 <_obstack_memory_used@@Base+0x9854>
  4257dc:	ldr	x0, [sp, #40]
  4257e0:	mov	w1, #0xb                   	// #11
  4257e4:	strb	w1, [x0, #8]
  4257e8:	b	425a78 <_obstack_memory_used@@Base+0x9898>
  4257ec:	ldr	x0, [sp, #24]
  4257f0:	and	x0, x0, #0x400
  4257f4:	cmp	x0, #0x0
  4257f8:	b.ne	425a3c <_obstack_memory_used@@Base+0x985c>  // b.any
  4257fc:	ldr	x0, [sp, #24]
  425800:	and	x0, x0, #0x2
  425804:	cmp	x0, #0x0
  425808:	b.ne	425a3c <_obstack_memory_used@@Base+0x985c>  // b.any
  42580c:	ldr	x0, [sp, #40]
  425810:	mov	w1, #0x12                  	// #18
  425814:	strb	w1, [x0, #8]
  425818:	b	425a3c <_obstack_memory_used@@Base+0x985c>
  42581c:	ldr	x0, [sp, #24]
  425820:	and	x0, x0, #0x400
  425824:	cmp	x0, #0x0
  425828:	b.ne	425a44 <_obstack_memory_used@@Base+0x9864>  // b.any
  42582c:	ldr	x0, [sp, #24]
  425830:	and	x0, x0, #0x2
  425834:	cmp	x0, #0x0
  425838:	b.ne	425a44 <_obstack_memory_used@@Base+0x9864>  // b.any
  42583c:	ldr	x0, [sp, #40]
  425840:	mov	w1, #0x13                  	// #19
  425844:	strb	w1, [x0, #8]
  425848:	b	425a44 <_obstack_memory_used@@Base+0x9864>
  42584c:	ldr	x0, [sp, #24]
  425850:	and	x0, x0, #0x200
  425854:	cmp	x0, #0x0
  425858:	b.eq	425a4c <_obstack_memory_used@@Base+0x986c>  // b.none
  42585c:	ldr	x0, [sp, #24]
  425860:	and	x0, x0, #0x1000
  425864:	cmp	x0, #0x0
  425868:	b.eq	425a4c <_obstack_memory_used@@Base+0x986c>  // b.none
  42586c:	ldr	x0, [sp, #40]
  425870:	mov	w1, #0x17                  	// #23
  425874:	strb	w1, [x0, #8]
  425878:	b	425a4c <_obstack_memory_used@@Base+0x986c>
  42587c:	ldr	x0, [sp, #24]
  425880:	and	x0, x0, #0x200
  425884:	cmp	x0, #0x0
  425888:	b.eq	425a54 <_obstack_memory_used@@Base+0x9874>  // b.none
  42588c:	ldr	x0, [sp, #24]
  425890:	and	x0, x0, #0x1000
  425894:	cmp	x0, #0x0
  425898:	b.eq	425a54 <_obstack_memory_used@@Base+0x9874>  // b.none
  42589c:	ldr	x0, [sp, #40]
  4258a0:	mov	w1, #0x18                  	// #24
  4258a4:	strb	w1, [x0, #8]
  4258a8:	b	425a54 <_obstack_memory_used@@Base+0x9874>
  4258ac:	ldr	x0, [sp, #24]
  4258b0:	and	x0, x0, #0x2000
  4258b4:	cmp	x0, #0x0
  4258b8:	b.eq	425a5c <_obstack_memory_used@@Base+0x987c>  // b.none
  4258bc:	ldr	x0, [sp, #40]
  4258c0:	mov	w1, #0x8                   	// #8
  4258c4:	strb	w1, [x0, #8]
  4258c8:	b	425a5c <_obstack_memory_used@@Base+0x987c>
  4258cc:	ldr	x0, [sp, #24]
  4258d0:	and	x0, x0, #0x2000
  4258d4:	cmp	x0, #0x0
  4258d8:	b.eq	425a64 <_obstack_memory_used@@Base+0x9884>  // b.none
  4258dc:	ldr	x0, [sp, #40]
  4258e0:	mov	w1, #0x9                   	// #9
  4258e4:	strb	w1, [x0, #8]
  4258e8:	b	425a64 <_obstack_memory_used@@Base+0x9884>
  4258ec:	ldr	x0, [sp, #40]
  4258f0:	mov	w1, #0x14                  	// #20
  4258f4:	strb	w1, [x0, #8]
  4258f8:	b	425a78 <_obstack_memory_used@@Base+0x9898>
  4258fc:	ldr	x0, [sp, #40]
  425900:	mov	w1, #0x5                   	// #5
  425904:	strb	w1, [x0, #8]
  425908:	b	425a78 <_obstack_memory_used@@Base+0x9898>
  42590c:	ldr	x1, [sp, #24]
  425910:	mov	x0, #0x8                   	// #8
  425914:	movk	x0, #0x80, lsl #16
  425918:	and	x0, x1, x0
  42591c:	cmp	x0, #0x0
  425920:	b.ne	425970 <_obstack_memory_used@@Base+0x9790>  // b.any
  425924:	ldr	x0, [sp, #32]
  425928:	ldr	x0, [x0, #72]
  42592c:	cmp	x0, #0x0
  425930:	b.eq	425970 <_obstack_memory_used@@Base+0x9790>  // b.none
  425934:	ldr	x0, [sp, #32]
  425938:	ldr	x1, [x0, #8]
  42593c:	ldr	x0, [sp, #32]
  425940:	ldr	x0, [x0, #72]
  425944:	sub	x0, x0, #0x1
  425948:	add	x0, x1, x0
  42594c:	ldrb	w0, [x0]
  425950:	strb	w0, [sp, #71]
  425954:	ldr	x0, [sp, #24]
  425958:	and	x0, x0, #0x800
  42595c:	cmp	x0, #0x0
  425960:	b.eq	425a6c <_obstack_memory_used@@Base+0x988c>  // b.none
  425964:	ldrb	w0, [sp, #71]
  425968:	cmp	w0, #0xa
  42596c:	b.ne	425a6c <_obstack_memory_used@@Base+0x988c>  // b.any
  425970:	ldr	x0, [sp, #40]
  425974:	mov	w1, #0xc                   	// #12
  425978:	strb	w1, [x0, #8]
  42597c:	ldr	x0, [sp, #40]
  425980:	mov	w1, #0x10                  	// #16
  425984:	str	w1, [x0]
  425988:	b	425a78 <_obstack_memory_used@@Base+0x9898>
  42598c:	ldr	x0, [sp, #24]
  425990:	and	x0, x0, #0x8
  425994:	cmp	x0, #0x0
  425998:	b.ne	425a08 <_obstack_memory_used@@Base+0x9828>  // b.any
  42599c:	ldr	x0, [sp, #32]
  4259a0:	ldr	x0, [x0, #72]
  4259a4:	add	x1, x0, #0x1
  4259a8:	ldr	x0, [sp, #32]
  4259ac:	ldr	x0, [x0, #88]
  4259b0:	cmp	x1, x0
  4259b4:	b.eq	425a08 <_obstack_memory_used@@Base+0x9828>  // b.none
  4259b8:	ldr	x0, [sp, #32]
  4259bc:	ldr	x0, [x0, #72]
  4259c0:	add	x1, x0, #0x1
  4259c4:	ldr	x0, [sp, #32]
  4259c8:	str	x1, [x0, #72]
  4259cc:	add	x0, sp, #0x30
  4259d0:	ldr	x2, [sp, #24]
  4259d4:	ldr	x1, [sp, #32]
  4259d8:	bl	425010 <_obstack_memory_used@@Base+0x8e30>
  4259dc:	ldr	x0, [sp, #32]
  4259e0:	ldr	x0, [x0, #72]
  4259e4:	sub	x1, x0, #0x1
  4259e8:	ldr	x0, [sp, #32]
  4259ec:	str	x1, [x0, #72]
  4259f0:	ldrb	w0, [sp, #56]
  4259f4:	cmp	w0, #0xa
  4259f8:	b.eq	425a08 <_obstack_memory_used@@Base+0x9828>  // b.none
  4259fc:	ldrb	w0, [sp, #56]
  425a00:	cmp	w0, #0x9
  425a04:	b.ne	425a74 <_obstack_memory_used@@Base+0x9894>  // b.any
  425a08:	ldr	x0, [sp, #40]
  425a0c:	mov	w1, #0xc                   	// #12
  425a10:	strb	w1, [x0, #8]
  425a14:	ldr	x0, [sp, #40]
  425a18:	mov	w1, #0x20                  	// #32
  425a1c:	str	w1, [x0]
  425a20:	b	425a78 <_obstack_memory_used@@Base+0x9898>
  425a24:	nop
  425a28:	b	425a78 <_obstack_memory_used@@Base+0x9898>
  425a2c:	nop
  425a30:	b	425a78 <_obstack_memory_used@@Base+0x9898>
  425a34:	nop
  425a38:	b	425a78 <_obstack_memory_used@@Base+0x9898>
  425a3c:	nop
  425a40:	b	425a78 <_obstack_memory_used@@Base+0x9898>
  425a44:	nop
  425a48:	b	425a78 <_obstack_memory_used@@Base+0x9898>
  425a4c:	nop
  425a50:	b	425a78 <_obstack_memory_used@@Base+0x9898>
  425a54:	nop
  425a58:	b	425a78 <_obstack_memory_used@@Base+0x9898>
  425a5c:	nop
  425a60:	b	425a78 <_obstack_memory_used@@Base+0x9898>
  425a64:	nop
  425a68:	b	425a78 <_obstack_memory_used@@Base+0x9898>
  425a6c:	nop
  425a70:	b	425a78 <_obstack_memory_used@@Base+0x9898>
  425a74:	nop
  425a78:	mov	w0, #0x1                   	// #1
  425a7c:	ldp	x29, x30, [sp], #80
  425a80:	ret
  425a84:	sub	sp, sp, #0x30
  425a88:	str	x0, [sp, #24]
  425a8c:	str	x1, [sp, #16]
  425a90:	str	x2, [sp, #8]
  425a94:	ldr	x0, [sp, #16]
  425a98:	ldr	x1, [x0, #104]
  425a9c:	ldr	x0, [sp, #16]
  425aa0:	ldr	x0, [x0, #72]
  425aa4:	cmp	x1, x0
  425aa8:	b.gt	425ac0 <_obstack_memory_used@@Base+0x98e0>
  425aac:	ldr	x0, [sp, #24]
  425ab0:	mov	w1, #0x2                   	// #2
  425ab4:	strb	w1, [x0, #8]
  425ab8:	mov	w0, #0x0                   	// #0
  425abc:	b	425d30 <_obstack_memory_used@@Base+0x9b50>
  425ac0:	ldr	x0, [sp, #16]
  425ac4:	ldr	x0, [x0, #8]
  425ac8:	ldr	x1, [sp, #16]
  425acc:	ldr	x1, [x1, #72]
  425ad0:	add	x0, x0, x1
  425ad4:	ldrb	w0, [x0]
  425ad8:	strb	w0, [sp, #39]
  425adc:	ldr	x0, [sp, #24]
  425ae0:	ldrb	w1, [sp, #39]
  425ae4:	strb	w1, [x0]
  425ae8:	ldr	x0, [sp, #16]
  425aec:	ldr	w0, [x0, #144]
  425af0:	cmp	w0, #0x1
  425af4:	b.le	425b48 <_obstack_memory_used@@Base+0x9968>
  425af8:	ldr	x0, [sp, #16]
  425afc:	ldr	x1, [x0, #72]
  425b00:	ldr	x0, [sp, #16]
  425b04:	ldr	x0, [x0, #48]
  425b08:	cmp	x1, x0
  425b0c:	b.eq	425b48 <_obstack_memory_used@@Base+0x9968>  // b.none
  425b10:	ldr	x0, [sp, #16]
  425b14:	ldr	x1, [x0, #16]
  425b18:	ldr	x0, [sp, #16]
  425b1c:	ldr	x0, [x0, #72]
  425b20:	lsl	x0, x0, #2
  425b24:	add	x0, x1, x0
  425b28:	ldr	w0, [x0]
  425b2c:	cmn	w0, #0x1
  425b30:	b.ne	425b48 <_obstack_memory_used@@Base+0x9968>  // b.any
  425b34:	ldr	x0, [sp, #24]
  425b38:	mov	w1, #0x1                   	// #1
  425b3c:	strb	w1, [x0, #8]
  425b40:	mov	w0, #0x1                   	// #1
  425b44:	b	425d30 <_obstack_memory_used@@Base+0x9b50>
  425b48:	ldrb	w0, [sp, #39]
  425b4c:	cmp	w0, #0x5c
  425b50:	b.ne	425bd0 <_obstack_memory_used@@Base+0x99f0>  // b.any
  425b54:	ldr	x0, [sp, #8]
  425b58:	and	x0, x0, #0x1
  425b5c:	cmp	x0, #0x0
  425b60:	b.eq	425bd0 <_obstack_memory_used@@Base+0x99f0>  // b.none
  425b64:	ldr	x0, [sp, #16]
  425b68:	ldr	x0, [x0, #72]
  425b6c:	add	x1, x0, #0x1
  425b70:	ldr	x0, [sp, #16]
  425b74:	ldr	x0, [x0, #88]
  425b78:	cmp	x1, x0
  425b7c:	b.ge	425bd0 <_obstack_memory_used@@Base+0x99f0>  // b.tcont
  425b80:	ldr	x0, [sp, #16]
  425b84:	ldr	x0, [x0, #72]
  425b88:	add	x1, x0, #0x1
  425b8c:	ldr	x0, [sp, #16]
  425b90:	str	x1, [x0, #72]
  425b94:	ldr	x0, [sp, #16]
  425b98:	ldr	x0, [x0, #8]
  425b9c:	ldr	x1, [sp, #16]
  425ba0:	ldr	x1, [x1, #72]
  425ba4:	add	x0, x0, x1
  425ba8:	ldrb	w0, [x0]
  425bac:	strb	w0, [sp, #38]
  425bb0:	ldr	x0, [sp, #24]
  425bb4:	ldrb	w1, [sp, #38]
  425bb8:	strb	w1, [x0]
  425bbc:	ldr	x0, [sp, #24]
  425bc0:	mov	w1, #0x1                   	// #1
  425bc4:	strb	w1, [x0, #8]
  425bc8:	mov	w0, #0x1                   	// #1
  425bcc:	b	425d30 <_obstack_memory_used@@Base+0x9b50>
  425bd0:	ldrb	w0, [sp, #39]
  425bd4:	cmp	w0, #0x5b
  425bd8:	b.ne	425cc8 <_obstack_memory_used@@Base+0x9ae8>  // b.any
  425bdc:	ldr	x0, [sp, #16]
  425be0:	ldr	x0, [x0, #72]
  425be4:	add	x1, x0, #0x1
  425be8:	ldr	x0, [sp, #16]
  425bec:	ldr	x0, [x0, #88]
  425bf0:	cmp	x1, x0
  425bf4:	b.ge	425c1c <_obstack_memory_used@@Base+0x9a3c>  // b.tcont
  425bf8:	ldr	x0, [sp, #16]
  425bfc:	ldr	x1, [x0, #8]
  425c00:	ldr	x0, [sp, #16]
  425c04:	ldr	x0, [x0, #72]
  425c08:	add	x0, x0, #0x1
  425c0c:	add	x0, x1, x0
  425c10:	ldrb	w0, [x0]
  425c14:	strb	w0, [sp, #47]
  425c18:	b	425c20 <_obstack_memory_used@@Base+0x9a40>
  425c1c:	strb	wzr, [sp, #47]
  425c20:	ldr	x0, [sp, #24]
  425c24:	ldrb	w1, [sp, #47]
  425c28:	strb	w1, [x0]
  425c2c:	mov	w0, #0x2                   	// #2
  425c30:	str	w0, [sp, #40]
  425c34:	ldrb	w0, [sp, #47]
  425c38:	cmp	w0, #0x3d
  425c3c:	b.eq	425c6c <_obstack_memory_used@@Base+0x9a8c>  // b.none
  425c40:	cmp	w0, #0x3d
  425c44:	b.gt	425c9c <_obstack_memory_used@@Base+0x9abc>
  425c48:	cmp	w0, #0x2e
  425c4c:	b.eq	425c5c <_obstack_memory_used@@Base+0x9a7c>  // b.none
  425c50:	cmp	w0, #0x3a
  425c54:	b.eq	425c7c <_obstack_memory_used@@Base+0x9a9c>  // b.none
  425c58:	b	425c9c <_obstack_memory_used@@Base+0x9abc>
  425c5c:	ldr	x0, [sp, #24]
  425c60:	mov	w1, #0x1a                  	// #26
  425c64:	strb	w1, [x0, #8]
  425c68:	b	425cc0 <_obstack_memory_used@@Base+0x9ae0>
  425c6c:	ldr	x0, [sp, #24]
  425c70:	mov	w1, #0x1c                  	// #28
  425c74:	strb	w1, [x0, #8]
  425c78:	b	425cc0 <_obstack_memory_used@@Base+0x9ae0>
  425c7c:	ldr	x0, [sp, #8]
  425c80:	and	x0, x0, #0x4
  425c84:	cmp	x0, #0x0
  425c88:	b.eq	425c9c <_obstack_memory_used@@Base+0x9abc>  // b.none
  425c8c:	ldr	x0, [sp, #24]
  425c90:	mov	w1, #0x1e                  	// #30
  425c94:	strb	w1, [x0, #8]
  425c98:	b	425cc0 <_obstack_memory_used@@Base+0x9ae0>
  425c9c:	ldr	x0, [sp, #24]
  425ca0:	mov	w1, #0x1                   	// #1
  425ca4:	strb	w1, [x0, #8]
  425ca8:	ldr	x0, [sp, #24]
  425cac:	ldrb	w1, [sp, #39]
  425cb0:	strb	w1, [x0]
  425cb4:	mov	w0, #0x1                   	// #1
  425cb8:	str	w0, [sp, #40]
  425cbc:	nop
  425cc0:	ldr	w0, [sp, #40]
  425cc4:	b	425d30 <_obstack_memory_used@@Base+0x9b50>
  425cc8:	ldrb	w0, [sp, #39]
  425ccc:	cmp	w0, #0x5e
  425cd0:	b.eq	425d10 <_obstack_memory_used@@Base+0x9b30>  // b.none
  425cd4:	cmp	w0, #0x5e
  425cd8:	b.gt	425d20 <_obstack_memory_used@@Base+0x9b40>
  425cdc:	cmp	w0, #0x2d
  425ce0:	b.eq	425cf0 <_obstack_memory_used@@Base+0x9b10>  // b.none
  425ce4:	cmp	w0, #0x5d
  425ce8:	b.eq	425d00 <_obstack_memory_used@@Base+0x9b20>  // b.none
  425cec:	b	425d20 <_obstack_memory_used@@Base+0x9b40>
  425cf0:	ldr	x0, [sp, #24]
  425cf4:	mov	w1, #0x16                  	// #22
  425cf8:	strb	w1, [x0, #8]
  425cfc:	b	425d2c <_obstack_memory_used@@Base+0x9b4c>
  425d00:	ldr	x0, [sp, #24]
  425d04:	mov	w1, #0x15                  	// #21
  425d08:	strb	w1, [x0, #8]
  425d0c:	b	425d2c <_obstack_memory_used@@Base+0x9b4c>
  425d10:	ldr	x0, [sp, #24]
  425d14:	mov	w1, #0x19                  	// #25
  425d18:	strb	w1, [x0, #8]
  425d1c:	b	425d2c <_obstack_memory_used@@Base+0x9b4c>
  425d20:	ldr	x0, [sp, #24]
  425d24:	mov	w1, #0x1                   	// #1
  425d28:	strb	w1, [x0, #8]
  425d2c:	mov	w0, #0x1                   	// #1
  425d30:	add	sp, sp, #0x30
  425d34:	ret
  425d38:	stp	x29, x30, [sp, #-96]!
  425d3c:	mov	x29, sp
  425d40:	str	x0, [sp, #40]
  425d44:	str	x1, [sp, #32]
  425d48:	str	x2, [sp, #24]
  425d4c:	str	x3, [sp, #16]
  425d50:	ldr	x0, [sp, #32]
  425d54:	ldr	x0, [x0]
  425d58:	str	x0, [sp, #80]
  425d5c:	ldr	x0, [sp, #80]
  425d60:	ldr	x1, [sp, #24]
  425d64:	str	x1, [x0, #216]
  425d68:	ldr	x0, [sp, #24]
  425d6c:	orr	x1, x0, #0x800000
  425d70:	add	x0, sp, #0x30
  425d74:	mov	x2, x1
  425d78:	ldr	x1, [sp, #40]
  425d7c:	bl	424fc4 <_obstack_memory_used@@Base+0x8de4>
  425d80:	add	x0, sp, #0x30
  425d84:	ldr	x5, [sp, #16]
  425d88:	mov	x4, #0x0                   	// #0
  425d8c:	ldr	x3, [sp, #24]
  425d90:	mov	x2, x0
  425d94:	ldr	x1, [sp, #32]
  425d98:	ldr	x0, [sp, #40]
  425d9c:	bl	425e88 <_obstack_memory_used@@Base+0x9ca8>
  425da0:	str	x0, [sp, #72]
  425da4:	ldr	x0, [sp, #16]
  425da8:	ldr	w0, [x0]
  425dac:	cmp	w0, #0x0
  425db0:	cset	w0, ne  // ne = any
  425db4:	and	w0, w0, #0xff
  425db8:	and	x0, x0, #0xff
  425dbc:	cmp	x0, #0x0
  425dc0:	b.eq	425de8 <_obstack_memory_used@@Base+0x9c08>  // b.none
  425dc4:	ldr	x0, [sp, #72]
  425dc8:	cmp	x0, #0x0
  425dcc:	cset	w0, eq  // eq = none
  425dd0:	and	w0, w0, #0xff
  425dd4:	and	x0, x0, #0xff
  425dd8:	cmp	x0, #0x0
  425ddc:	b.eq	425de8 <_obstack_memory_used@@Base+0x9c08>  // b.none
  425de0:	mov	x0, #0x0                   	// #0
  425de4:	b	425e80 <_obstack_memory_used@@Base+0x9ca0>
  425de8:	mov	w3, #0x2                   	// #2
  425dec:	mov	x2, #0x0                   	// #0
  425df0:	mov	x1, #0x0                   	// #0
  425df4:	ldr	x0, [sp, #80]
  425df8:	bl	429758 <_obstack_memory_used@@Base+0xd578>
  425dfc:	str	x0, [sp, #64]
  425e00:	ldr	x0, [sp, #72]
  425e04:	cmp	x0, #0x0
  425e08:	b.eq	425e28 <_obstack_memory_used@@Base+0x9c48>  // b.none
  425e0c:	mov	w3, #0x10                  	// #16
  425e10:	ldr	x2, [sp, #64]
  425e14:	ldr	x1, [sp, #72]
  425e18:	ldr	x0, [sp, #80]
  425e1c:	bl	429758 <_obstack_memory_used@@Base+0xd578>
  425e20:	str	x0, [sp, #88]
  425e24:	b	425e30 <_obstack_memory_used@@Base+0x9c50>
  425e28:	ldr	x0, [sp, #64]
  425e2c:	str	x0, [sp, #88]
  425e30:	ldr	x0, [sp, #64]
  425e34:	cmp	x0, #0x0
  425e38:	cset	w0, eq  // eq = none
  425e3c:	and	w0, w0, #0xff
  425e40:	and	x0, x0, #0xff
  425e44:	cmp	x0, #0x0
  425e48:	b.ne	425e68 <_obstack_memory_used@@Base+0x9c88>  // b.any
  425e4c:	ldr	x0, [sp, #88]
  425e50:	cmp	x0, #0x0
  425e54:	cset	w0, eq  // eq = none
  425e58:	and	w0, w0, #0xff
  425e5c:	and	x0, x0, #0xff
  425e60:	cmp	x0, #0x0
  425e64:	b.eq	425e7c <_obstack_memory_used@@Base+0x9c9c>  // b.none
  425e68:	ldr	x0, [sp, #16]
  425e6c:	mov	w1, #0xc                   	// #12
  425e70:	str	w1, [x0]
  425e74:	mov	x0, #0x0                   	// #0
  425e78:	b	425e80 <_obstack_memory_used@@Base+0x9ca0>
  425e7c:	ldr	x0, [sp, #88]
  425e80:	ldp	x29, x30, [sp], #96
  425e84:	ret
  425e88:	stp	x29, x30, [sp, #-112]!
  425e8c:	mov	x29, sp
  425e90:	str	x0, [sp, #56]
  425e94:	str	x1, [sp, #48]
  425e98:	str	x2, [sp, #40]
  425e9c:	str	x3, [sp, #32]
  425ea0:	str	x4, [sp, #24]
  425ea4:	str	x5, [sp, #16]
  425ea8:	ldr	x0, [sp, #48]
  425eac:	ldr	x0, [x0]
  425eb0:	str	x0, [sp, #88]
  425eb4:	str	xzr, [sp, #96]
  425eb8:	ldr	x0, [sp, #88]
  425ebc:	ldr	x0, [x0, #168]
  425ec0:	str	x0, [sp, #80]
  425ec4:	ldr	x5, [sp, #16]
  425ec8:	ldr	x4, [sp, #24]
  425ecc:	ldr	x3, [sp, #32]
  425ed0:	ldr	x2, [sp, #40]
  425ed4:	ldr	x1, [sp, #48]
  425ed8:	ldr	x0, [sp, #56]
  425edc:	bl	42609c <_obstack_memory_used@@Base+0x9ebc>
  425ee0:	str	x0, [sp, #104]
  425ee4:	ldr	x0, [sp, #16]
  425ee8:	ldr	w0, [x0]
  425eec:	cmp	w0, #0x0
  425ef0:	cset	w0, ne  // ne = any
  425ef4:	and	w0, w0, #0xff
  425ef8:	and	x0, x0, #0xff
  425efc:	cmp	x0, #0x0
  425f00:	b.eq	426080 <_obstack_memory_used@@Base+0x9ea0>  // b.none
  425f04:	ldr	x0, [sp, #104]
  425f08:	cmp	x0, #0x0
  425f0c:	cset	w0, eq  // eq = none
  425f10:	and	w0, w0, #0xff
  425f14:	and	x0, x0, #0xff
  425f18:	cmp	x0, #0x0
  425f1c:	b.eq	426080 <_obstack_memory_used@@Base+0x9ea0>  // b.none
  425f20:	mov	x0, #0x0                   	// #0
  425f24:	b	426094 <_obstack_memory_used@@Base+0x9eb4>
  425f28:	ldr	x0, [sp, #32]
  425f2c:	orr	x0, x0, #0x800000
  425f30:	mov	x2, x0
  425f34:	ldr	x1, [sp, #56]
  425f38:	ldr	x0, [sp, #40]
  425f3c:	bl	424fc4 <_obstack_memory_used@@Base+0x8de4>
  425f40:	ldr	x0, [sp, #40]
  425f44:	ldrb	w0, [x0, #8]
  425f48:	cmp	w0, #0xa
  425f4c:	b.eq	426034 <_obstack_memory_used@@Base+0x9e54>  // b.none
  425f50:	ldr	x0, [sp, #40]
  425f54:	ldrb	w0, [x0, #8]
  425f58:	cmp	w0, #0x2
  425f5c:	b.eq	426034 <_obstack_memory_used@@Base+0x9e54>  // b.none
  425f60:	ldr	x0, [sp, #24]
  425f64:	cmp	x0, #0x0
  425f68:	b.eq	425f7c <_obstack_memory_used@@Base+0x9d9c>  // b.none
  425f6c:	ldr	x0, [sp, #40]
  425f70:	ldrb	w0, [x0, #8]
  425f74:	cmp	w0, #0x9
  425f78:	b.eq	426034 <_obstack_memory_used@@Base+0x9e54>  // b.none
  425f7c:	ldr	x0, [sp, #88]
  425f80:	ldr	x0, [x0, #168]
  425f84:	str	x0, [sp, #72]
  425f88:	ldr	x0, [sp, #88]
  425f8c:	ldr	x1, [sp, #80]
  425f90:	str	x1, [x0, #168]
  425f94:	ldr	x5, [sp, #16]
  425f98:	ldr	x4, [sp, #24]
  425f9c:	ldr	x3, [sp, #32]
  425fa0:	ldr	x2, [sp, #40]
  425fa4:	ldr	x1, [sp, #48]
  425fa8:	ldr	x0, [sp, #56]
  425fac:	bl	42609c <_obstack_memory_used@@Base+0x9ebc>
  425fb0:	str	x0, [sp, #96]
  425fb4:	ldr	x0, [sp, #16]
  425fb8:	ldr	w0, [x0]
  425fbc:	cmp	w0, #0x0
  425fc0:	cset	w0, ne  // ne = any
  425fc4:	and	w0, w0, #0xff
  425fc8:	and	x0, x0, #0xff
  425fcc:	cmp	x0, #0x0
  425fd0:	b.eq	426018 <_obstack_memory_used@@Base+0x9e38>  // b.none
  425fd4:	ldr	x0, [sp, #96]
  425fd8:	cmp	x0, #0x0
  425fdc:	cset	w0, eq  // eq = none
  425fe0:	and	w0, w0, #0xff
  425fe4:	and	x0, x0, #0xff
  425fe8:	cmp	x0, #0x0
  425fec:	b.eq	426018 <_obstack_memory_used@@Base+0x9e38>  // b.none
  425ff0:	ldr	x0, [sp, #104]
  425ff4:	cmp	x0, #0x0
  425ff8:	b.eq	426010 <_obstack_memory_used@@Base+0x9e30>  // b.none
  425ffc:	mov	x2, #0x0                   	// #0
  426000:	adrp	x0, 429000 <_obstack_memory_used@@Base+0xce20>
  426004:	add	x1, x0, #0x9cc
  426008:	ldr	x0, [sp, #104]
  42600c:	bl	423694 <_obstack_memory_used@@Base+0x74b4>
  426010:	mov	x0, #0x0                   	// #0
  426014:	b	426094 <_obstack_memory_used@@Base+0x9eb4>
  426018:	ldr	x0, [sp, #88]
  42601c:	ldr	x1, [x0, #168]
  426020:	ldr	x0, [sp, #72]
  426024:	orr	x1, x1, x0
  426028:	ldr	x0, [sp, #88]
  42602c:	str	x1, [x0, #168]
  426030:	b	426038 <_obstack_memory_used@@Base+0x9e58>
  426034:	str	xzr, [sp, #96]
  426038:	mov	w3, #0xa                   	// #10
  42603c:	ldr	x2, [sp, #96]
  426040:	ldr	x1, [sp, #104]
  426044:	ldr	x0, [sp, #88]
  426048:	bl	429758 <_obstack_memory_used@@Base+0xd578>
  42604c:	str	x0, [sp, #104]
  426050:	ldr	x0, [sp, #104]
  426054:	cmp	x0, #0x0
  426058:	cset	w0, eq  // eq = none
  42605c:	and	w0, w0, #0xff
  426060:	and	x0, x0, #0xff
  426064:	cmp	x0, #0x0
  426068:	b.eq	426080 <_obstack_memory_used@@Base+0x9ea0>  // b.none
  42606c:	ldr	x0, [sp, #16]
  426070:	mov	w1, #0xc                   	// #12
  426074:	str	w1, [x0]
  426078:	mov	x0, #0x0                   	// #0
  42607c:	b	426094 <_obstack_memory_used@@Base+0x9eb4>
  426080:	ldr	x0, [sp, #40]
  426084:	ldrb	w0, [x0, #8]
  426088:	cmp	w0, #0xa
  42608c:	b.eq	425f28 <_obstack_memory_used@@Base+0x9d48>  // b.none
  426090:	ldr	x0, [sp, #104]
  426094:	ldp	x29, x30, [sp], #112
  426098:	ret
  42609c:	stp	x29, x30, [sp, #-96]!
  4260a0:	mov	x29, sp
  4260a4:	str	x0, [sp, #56]
  4260a8:	str	x1, [sp, #48]
  4260ac:	str	x2, [sp, #40]
  4260b0:	str	x3, [sp, #32]
  4260b4:	str	x4, [sp, #24]
  4260b8:	str	x5, [sp, #16]
  4260bc:	ldr	x0, [sp, #48]
  4260c0:	ldr	x0, [x0]
  4260c4:	str	x0, [sp, #80]
  4260c8:	ldr	x5, [sp, #16]
  4260cc:	ldr	x4, [sp, #24]
  4260d0:	ldr	x3, [sp, #32]
  4260d4:	ldr	x2, [sp, #40]
  4260d8:	ldr	x1, [sp, #48]
  4260dc:	ldr	x0, [sp, #56]
  4260e0:	bl	426290 <_obstack_memory_used@@Base+0xa0b0>
  4260e4:	str	x0, [sp, #88]
  4260e8:	ldr	x0, [sp, #16]
  4260ec:	ldr	w0, [x0]
  4260f0:	cmp	w0, #0x0
  4260f4:	cset	w0, ne  // ne = any
  4260f8:	and	w0, w0, #0xff
  4260fc:	and	x0, x0, #0xff
  426100:	cmp	x0, #0x0
  426104:	b.eq	426248 <_obstack_memory_used@@Base+0xa068>  // b.none
  426108:	ldr	x0, [sp, #88]
  42610c:	cmp	x0, #0x0
  426110:	cset	w0, eq  // eq = none
  426114:	and	w0, w0, #0xff
  426118:	and	x0, x0, #0xff
  42611c:	cmp	x0, #0x0
  426120:	b.eq	426248 <_obstack_memory_used@@Base+0xa068>  // b.none
  426124:	mov	x0, #0x0                   	// #0
  426128:	b	426288 <_obstack_memory_used@@Base+0xa0a8>
  42612c:	ldr	x5, [sp, #16]
  426130:	ldr	x4, [sp, #24]
  426134:	ldr	x3, [sp, #32]
  426138:	ldr	x2, [sp, #40]
  42613c:	ldr	x1, [sp, #48]
  426140:	ldr	x0, [sp, #56]
  426144:	bl	426290 <_obstack_memory_used@@Base+0xa0b0>
  426148:	str	x0, [sp, #72]
  42614c:	ldr	x0, [sp, #16]
  426150:	ldr	w0, [x0]
  426154:	cmp	w0, #0x0
  426158:	cset	w0, ne  // ne = any
  42615c:	and	w0, w0, #0xff
  426160:	and	x0, x0, #0xff
  426164:	cmp	x0, #0x0
  426168:	b.eq	4261b0 <_obstack_memory_used@@Base+0x9fd0>  // b.none
  42616c:	ldr	x0, [sp, #72]
  426170:	cmp	x0, #0x0
  426174:	cset	w0, eq  // eq = none
  426178:	and	w0, w0, #0xff
  42617c:	and	x0, x0, #0xff
  426180:	cmp	x0, #0x0
  426184:	b.eq	4261b0 <_obstack_memory_used@@Base+0x9fd0>  // b.none
  426188:	ldr	x0, [sp, #88]
  42618c:	cmp	x0, #0x0
  426190:	b.eq	4261a8 <_obstack_memory_used@@Base+0x9fc8>  // b.none
  426194:	mov	x2, #0x0                   	// #0
  426198:	adrp	x0, 429000 <_obstack_memory_used@@Base+0xce20>
  42619c:	add	x1, x0, #0x9cc
  4261a0:	ldr	x0, [sp, #88]
  4261a4:	bl	423694 <_obstack_memory_used@@Base+0x74b4>
  4261a8:	mov	x0, #0x0                   	// #0
  4261ac:	b	426288 <_obstack_memory_used@@Base+0xa0a8>
  4261b0:	ldr	x0, [sp, #88]
  4261b4:	cmp	x0, #0x0
  4261b8:	b.eq	426234 <_obstack_memory_used@@Base+0xa054>  // b.none
  4261bc:	ldr	x0, [sp, #72]
  4261c0:	cmp	x0, #0x0
  4261c4:	b.eq	426234 <_obstack_memory_used@@Base+0xa054>  // b.none
  4261c8:	mov	w3, #0x10                  	// #16
  4261cc:	ldr	x2, [sp, #72]
  4261d0:	ldr	x1, [sp, #88]
  4261d4:	ldr	x0, [sp, #80]
  4261d8:	bl	429758 <_obstack_memory_used@@Base+0xd578>
  4261dc:	str	x0, [sp, #64]
  4261e0:	ldr	x0, [sp, #64]
  4261e4:	cmp	x0, #0x0
  4261e8:	b.ne	426228 <_obstack_memory_used@@Base+0xa048>  // b.any
  4261ec:	mov	x2, #0x0                   	// #0
  4261f0:	adrp	x0, 429000 <_obstack_memory_used@@Base+0xce20>
  4261f4:	add	x1, x0, #0x9cc
  4261f8:	ldr	x0, [sp, #72]
  4261fc:	bl	423694 <_obstack_memory_used@@Base+0x74b4>
  426200:	mov	x2, #0x0                   	// #0
  426204:	adrp	x0, 429000 <_obstack_memory_used@@Base+0xce20>
  426208:	add	x1, x0, #0x9cc
  42620c:	ldr	x0, [sp, #88]
  426210:	bl	423694 <_obstack_memory_used@@Base+0x74b4>
  426214:	ldr	x0, [sp, #16]
  426218:	mov	w1, #0xc                   	// #12
  42621c:	str	w1, [x0]
  426220:	mov	x0, #0x0                   	// #0
  426224:	b	426288 <_obstack_memory_used@@Base+0xa0a8>
  426228:	ldr	x0, [sp, #64]
  42622c:	str	x0, [sp, #88]
  426230:	b	426248 <_obstack_memory_used@@Base+0xa068>
  426234:	ldr	x0, [sp, #88]
  426238:	cmp	x0, #0x0
  42623c:	b.ne	426248 <_obstack_memory_used@@Base+0xa068>  // b.any
  426240:	ldr	x0, [sp, #72]
  426244:	str	x0, [sp, #88]
  426248:	ldr	x0, [sp, #40]
  42624c:	ldrb	w0, [x0, #8]
  426250:	cmp	w0, #0xa
  426254:	b.eq	426284 <_obstack_memory_used@@Base+0xa0a4>  // b.none
  426258:	ldr	x0, [sp, #40]
  42625c:	ldrb	w0, [x0, #8]
  426260:	cmp	w0, #0x2
  426264:	b.eq	426284 <_obstack_memory_used@@Base+0xa0a4>  // b.none
  426268:	ldr	x0, [sp, #24]
  42626c:	cmp	x0, #0x0
  426270:	b.eq	42612c <_obstack_memory_used@@Base+0x9f4c>  // b.none
  426274:	ldr	x0, [sp, #40]
  426278:	ldrb	w0, [x0, #8]
  42627c:	cmp	w0, #0x9
  426280:	b.ne	42612c <_obstack_memory_used@@Base+0x9f4c>  // b.any
  426284:	ldr	x0, [sp, #88]
  426288:	ldp	x29, x30, [sp], #96
  42628c:	ret
  426290:	stp	x29, x30, [sp, #-112]!
  426294:	mov	x29, sp
  426298:	str	x0, [sp, #56]
  42629c:	str	x1, [sp, #48]
  4262a0:	str	x2, [sp, #40]
  4262a4:	str	x3, [sp, #32]
  4262a8:	str	x4, [sp, #24]
  4262ac:	str	x5, [sp, #16]
  4262b0:	ldr	x0, [sp, #48]
  4262b4:	ldr	x0, [x0]
  4262b8:	str	x0, [sp, #88]
  4262bc:	ldr	x0, [sp, #40]
  4262c0:	ldrb	w0, [x0, #8]
  4262c4:	cmp	w0, #0x24
  4262c8:	b.eq	426b08 <_obstack_memory_used@@Base+0xa928>  // b.none
  4262cc:	cmp	w0, #0x24
  4262d0:	b.gt	426b1c <_obstack_memory_used@@Base+0xa93c>
  4262d4:	cmp	w0, #0x23
  4262d8:	b.gt	426b1c <_obstack_memory_used@@Base+0xa93c>
  4262dc:	cmp	w0, #0x22
  4262e0:	b.ge	426a7c <_obstack_memory_used@@Base+0xa89c>  // b.tcont
  4262e4:	cmp	w0, #0x21
  4262e8:	b.gt	426b1c <_obstack_memory_used@@Base+0xa93c>
  4262ec:	cmp	w0, #0x20
  4262f0:	b.ge	4269f8 <_obstack_memory_used@@Base+0xa818>  // b.tcont
  4262f4:	cmp	w0, #0x18
  4262f8:	b.eq	42675c <_obstack_memory_used@@Base+0xa57c>  // b.none
  4262fc:	cmp	w0, #0x18
  426300:	b.gt	426b1c <_obstack_memory_used@@Base+0xa93c>
  426304:	cmp	w0, #0x17
  426308:	b.eq	4266a0 <_obstack_memory_used@@Base+0xa4c0>  // b.none
  42630c:	cmp	w0, #0x17
  426310:	b.gt	426b1c <_obstack_memory_used@@Base+0xa93c>
  426314:	cmp	w0, #0x14
  426318:	b.eq	426564 <_obstack_memory_used@@Base+0xa384>  // b.none
  42631c:	cmp	w0, #0x14
  426320:	b.gt	426b1c <_obstack_memory_used@@Base+0xa93c>
  426324:	cmp	w0, #0x13
  426328:	b.gt	426b1c <_obstack_memory_used@@Base+0xa93c>
  42632c:	cmp	w0, #0x12
  426330:	b.ge	4266c4 <_obstack_memory_used@@Base+0xa4e4>  // b.tcont
  426334:	cmp	w0, #0xc
  426338:	b.eq	4267b0 <_obstack_memory_used@@Base+0xa5d0>  // b.none
  42633c:	cmp	w0, #0xc
  426340:	b.gt	426b1c <_obstack_memory_used@@Base+0xa93c>
  426344:	cmp	w0, #0xb
  426348:	b.eq	4266c4 <_obstack_memory_used@@Base+0xa4e4>  // b.none
  42634c:	cmp	w0, #0xb
  426350:	b.gt	426b1c <_obstack_memory_used@@Base+0xa93c>
  426354:	cmp	w0, #0xa
  426358:	b.eq	426b00 <_obstack_memory_used@@Base+0xa920>  // b.none
  42635c:	cmp	w0, #0xa
  426360:	b.gt	426b1c <_obstack_memory_used@@Base+0xa93c>
  426364:	cmp	w0, #0x9
  426368:	b.eq	426728 <_obstack_memory_used@@Base+0xa548>  // b.none
  42636c:	cmp	w0, #0x9
  426370:	b.gt	426b1c <_obstack_memory_used@@Base+0xa93c>
  426374:	cmp	w0, #0x8
  426378:	b.eq	4264f8 <_obstack_memory_used@@Base+0xa318>  // b.none
  42637c:	cmp	w0, #0x8
  426380:	b.gt	426b1c <_obstack_memory_used@@Base+0xa93c>
  426384:	cmp	w0, #0x5
  426388:	b.eq	42698c <_obstack_memory_used@@Base+0xa7ac>  // b.none
  42638c:	cmp	w0, #0x5
  426390:	b.gt	426b1c <_obstack_memory_used@@Base+0xa93c>
  426394:	cmp	w0, #0x4
  426398:	b.eq	4265c4 <_obstack_memory_used@@Base+0xa3e4>  // b.none
  42639c:	cmp	w0, #0x4
  4263a0:	b.gt	426b1c <_obstack_memory_used@@Base+0xa93c>
  4263a4:	cmp	w0, #0x1
  4263a8:	b.eq	4263b8 <_obstack_memory_used@@Base+0xa1d8>  // b.none
  4263ac:	cmp	w0, #0x2
  4263b0:	b.eq	426b00 <_obstack_memory_used@@Base+0xa920>  // b.none
  4263b4:	b	426b1c <_obstack_memory_used@@Base+0xa93c>
  4263b8:	ldr	x3, [sp, #40]
  4263bc:	mov	x2, #0x0                   	// #0
  4263c0:	mov	x1, #0x0                   	// #0
  4263c4:	ldr	x0, [sp, #88]
  4263c8:	bl	4297a0 <_obstack_memory_used@@Base+0xd5c0>
  4263cc:	str	x0, [sp, #104]
  4263d0:	ldr	x0, [sp, #104]
  4263d4:	cmp	x0, #0x0
  4263d8:	cset	w0, eq  // eq = none
  4263dc:	and	w0, w0, #0xff
  4263e0:	and	x0, x0, #0xff
  4263e4:	cmp	x0, #0x0
  4263e8:	b.eq	426400 <_obstack_memory_used@@Base+0xa220>  // b.none
  4263ec:	ldr	x0, [sp, #16]
  4263f0:	mov	w1, #0xc                   	// #12
  4263f4:	str	w1, [x0]
  4263f8:	mov	x0, #0x0                   	// #0
  4263fc:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  426400:	ldr	x0, [sp, #88]
  426404:	ldr	w0, [x0, #180]
  426408:	cmp	w0, #0x1
  42640c:	b.le	426b1c <_obstack_memory_used@@Base+0xa93c>
  426410:	b	4264a0 <_obstack_memory_used@@Base+0xa2c0>
  426414:	ldr	x2, [sp, #32]
  426418:	ldr	x1, [sp, #56]
  42641c:	ldr	x0, [sp, #40]
  426420:	bl	424fc4 <_obstack_memory_used@@Base+0x8de4>
  426424:	ldr	x3, [sp, #40]
  426428:	mov	x2, #0x0                   	// #0
  42642c:	mov	x1, #0x0                   	// #0
  426430:	ldr	x0, [sp, #88]
  426434:	bl	4297a0 <_obstack_memory_used@@Base+0xd5c0>
  426438:	str	x0, [sp, #72]
  42643c:	mov	w3, #0x10                  	// #16
  426440:	ldr	x2, [sp, #72]
  426444:	ldr	x1, [sp, #104]
  426448:	ldr	x0, [sp, #88]
  42644c:	bl	429758 <_obstack_memory_used@@Base+0xd578>
  426450:	str	x0, [sp, #104]
  426454:	ldr	x0, [sp, #72]
  426458:	cmp	x0, #0x0
  42645c:	cset	w0, eq  // eq = none
  426460:	and	w0, w0, #0xff
  426464:	and	x0, x0, #0xff
  426468:	cmp	x0, #0x0
  42646c:	b.ne	42648c <_obstack_memory_used@@Base+0xa2ac>  // b.any
  426470:	ldr	x0, [sp, #104]
  426474:	cmp	x0, #0x0
  426478:	cset	w0, eq  // eq = none
  42647c:	and	w0, w0, #0xff
  426480:	and	x0, x0, #0xff
  426484:	cmp	x0, #0x0
  426488:	b.eq	4264a0 <_obstack_memory_used@@Base+0xa2c0>  // b.none
  42648c:	ldr	x0, [sp, #16]
  426490:	mov	w1, #0xc                   	// #12
  426494:	str	w1, [x0]
  426498:	mov	x0, #0x0                   	// #0
  42649c:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  4264a0:	ldr	x0, [sp, #56]
  4264a4:	ldr	x1, [x0, #104]
  4264a8:	ldr	x0, [sp, #56]
  4264ac:	ldr	x0, [x0, #72]
  4264b0:	cmp	x1, x0
  4264b4:	b.le	426b1c <_obstack_memory_used@@Base+0xa93c>
  4264b8:	ldr	x0, [sp, #56]
  4264bc:	ldr	x1, [x0, #72]
  4264c0:	ldr	x0, [sp, #56]
  4264c4:	ldr	x0, [x0, #48]
  4264c8:	cmp	x1, x0
  4264cc:	b.eq	426b1c <_obstack_memory_used@@Base+0xa93c>  // b.none
  4264d0:	ldr	x0, [sp, #56]
  4264d4:	ldr	x1, [x0, #16]
  4264d8:	ldr	x0, [sp, #56]
  4264dc:	ldr	x0, [x0, #72]
  4264e0:	lsl	x0, x0, #2
  4264e4:	add	x0, x1, x0
  4264e8:	ldr	w0, [x0]
  4264ec:	cmn	w0, #0x1
  4264f0:	b.eq	426414 <_obstack_memory_used@@Base+0xa234>  // b.none
  4264f4:	b	426b1c <_obstack_memory_used@@Base+0xa93c>
  4264f8:	ldr	x0, [sp, #24]
  4264fc:	add	x0, x0, #0x1
  426500:	ldr	x5, [sp, #16]
  426504:	mov	x4, x0
  426508:	ldr	x3, [sp, #32]
  42650c:	ldr	x2, [sp, #40]
  426510:	ldr	x1, [sp, #48]
  426514:	ldr	x0, [sp, #56]
  426518:	bl	426ca0 <_obstack_memory_used@@Base+0xaac0>
  42651c:	str	x0, [sp, #104]
  426520:	ldr	x0, [sp, #16]
  426524:	ldr	w0, [x0]
  426528:	cmp	w0, #0x0
  42652c:	cset	w0, ne  // ne = any
  426530:	and	w0, w0, #0xff
  426534:	and	x0, x0, #0xff
  426538:	cmp	x0, #0x0
  42653c:	b.eq	426b24 <_obstack_memory_used@@Base+0xa944>  // b.none
  426540:	ldr	x0, [sp, #104]
  426544:	cmp	x0, #0x0
  426548:	cset	w0, eq  // eq = none
  42654c:	and	w0, w0, #0xff
  426550:	and	x0, x0, #0xff
  426554:	cmp	x0, #0x0
  426558:	b.eq	426b24 <_obstack_memory_used@@Base+0xa944>  // b.none
  42655c:	mov	x0, #0x0                   	// #0
  426560:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  426564:	ldr	x4, [sp, #16]
  426568:	ldr	x3, [sp, #32]
  42656c:	ldr	x2, [sp, #40]
  426570:	ldr	x1, [sp, #88]
  426574:	ldr	x0, [sp, #56]
  426578:	bl	4279bc <_obstack_memory_used@@Base+0xb7dc>
  42657c:	str	x0, [sp, #104]
  426580:	ldr	x0, [sp, #16]
  426584:	ldr	w0, [x0]
  426588:	cmp	w0, #0x0
  42658c:	cset	w0, ne  // ne = any
  426590:	and	w0, w0, #0xff
  426594:	and	x0, x0, #0xff
  426598:	cmp	x0, #0x0
  42659c:	b.eq	426b2c <_obstack_memory_used@@Base+0xa94c>  // b.none
  4265a0:	ldr	x0, [sp, #104]
  4265a4:	cmp	x0, #0x0
  4265a8:	cset	w0, eq  // eq = none
  4265ac:	and	w0, w0, #0xff
  4265b0:	and	x0, x0, #0xff
  4265b4:	cmp	x0, #0x0
  4265b8:	b.eq	426b2c <_obstack_memory_used@@Base+0xa94c>  // b.none
  4265bc:	mov	x0, #0x0                   	// #0
  4265c0:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  4265c4:	ldr	x0, [sp, #88]
  4265c8:	ldr	x1, [x0, #168]
  4265cc:	ldr	x0, [sp, #40]
  4265d0:	ldr	x0, [x0]
  4265d4:	mov	w2, w0
  4265d8:	mov	w0, #0x1                   	// #1
  4265dc:	lsl	w0, w0, w2
  4265e0:	sxtw	x0, w0
  4265e4:	and	x0, x1, x0
  4265e8:	cmp	x0, #0x0
  4265ec:	b.ne	426604 <_obstack_memory_used@@Base+0xa424>  // b.any
  4265f0:	ldr	x0, [sp, #16]
  4265f4:	mov	w1, #0x6                   	// #6
  4265f8:	str	w1, [x0]
  4265fc:	mov	x0, #0x0                   	// #0
  426600:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  426604:	ldr	x0, [sp, #88]
  426608:	ldr	x1, [x0, #160]
  42660c:	ldr	x0, [sp, #40]
  426610:	ldr	x0, [x0]
  426614:	mov	w2, w0
  426618:	mov	w0, #0x1                   	// #1
  42661c:	lsl	w0, w0, w2
  426620:	sxtw	x0, w0
  426624:	orr	x1, x1, x0
  426628:	ldr	x0, [sp, #88]
  42662c:	str	x1, [x0, #160]
  426630:	ldr	x3, [sp, #40]
  426634:	mov	x2, #0x0                   	// #0
  426638:	mov	x1, #0x0                   	// #0
  42663c:	ldr	x0, [sp, #88]
  426640:	bl	4297a0 <_obstack_memory_used@@Base+0xd5c0>
  426644:	str	x0, [sp, #104]
  426648:	ldr	x0, [sp, #104]
  42664c:	cmp	x0, #0x0
  426650:	cset	w0, eq  // eq = none
  426654:	and	w0, w0, #0xff
  426658:	and	x0, x0, #0xff
  42665c:	cmp	x0, #0x0
  426660:	b.eq	426678 <_obstack_memory_used@@Base+0xa498>  // b.none
  426664:	ldr	x0, [sp, #16]
  426668:	mov	w1, #0xc                   	// #12
  42666c:	str	w1, [x0]
  426670:	mov	x0, #0x0                   	// #0
  426674:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  426678:	ldr	x0, [sp, #88]
  42667c:	ldr	x0, [x0, #152]
  426680:	add	x1, x0, #0x1
  426684:	ldr	x0, [sp, #88]
  426688:	str	x1, [x0, #152]
  42668c:	ldr	x0, [sp, #88]
  426690:	ldrb	w1, [x0, #176]
  426694:	orr	w1, w1, #0x2
  426698:	strb	w1, [x0, #176]
  42669c:	b	426b50 <_obstack_memory_used@@Base+0xa970>
  4266a0:	ldr	x0, [sp, #32]
  4266a4:	and	x0, x0, #0x1000000
  4266a8:	cmp	x0, #0x0
  4266ac:	b.eq	4266c4 <_obstack_memory_used@@Base+0xa4e4>  // b.none
  4266b0:	ldr	x0, [sp, #16]
  4266b4:	mov	w1, #0xd                   	// #13
  4266b8:	str	w1, [x0]
  4266bc:	mov	x0, #0x0                   	// #0
  4266c0:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  4266c4:	ldr	x0, [sp, #32]
  4266c8:	and	x0, x0, #0x20
  4266cc:	cmp	x0, #0x0
  4266d0:	b.eq	4266e8 <_obstack_memory_used@@Base+0xa508>  // b.none
  4266d4:	ldr	x0, [sp, #16]
  4266d8:	mov	w1, #0xd                   	// #13
  4266dc:	str	w1, [x0]
  4266e0:	mov	x0, #0x0                   	// #0
  4266e4:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  4266e8:	ldr	x0, [sp, #32]
  4266ec:	and	x0, x0, #0x10
  4266f0:	cmp	x0, #0x0
  4266f4:	b.eq	426728 <_obstack_memory_used@@Base+0xa548>  // b.none
  4266f8:	ldr	x2, [sp, #32]
  4266fc:	ldr	x1, [sp, #56]
  426700:	ldr	x0, [sp, #40]
  426704:	bl	424fc4 <_obstack_memory_used@@Base+0x8de4>
  426708:	ldr	x5, [sp, #16]
  42670c:	ldr	x4, [sp, #24]
  426710:	ldr	x3, [sp, #32]
  426714:	ldr	x2, [sp, #40]
  426718:	ldr	x1, [sp, #48]
  42671c:	ldr	x0, [sp, #56]
  426720:	bl	426290 <_obstack_memory_used@@Base+0xa0b0>
  426724:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  426728:	ldr	x0, [sp, #40]
  42672c:	ldrb	w0, [x0, #8]
  426730:	cmp	w0, #0x9
  426734:	b.ne	42675c <_obstack_memory_used@@Base+0xa57c>  // b.any
  426738:	ldr	x0, [sp, #32]
  42673c:	and	x0, x0, #0x20000
  426740:	cmp	x0, #0x0
  426744:	b.ne	42675c <_obstack_memory_used@@Base+0xa57c>  // b.any
  426748:	ldr	x0, [sp, #16]
  42674c:	mov	w1, #0x10                  	// #16
  426750:	str	w1, [x0]
  426754:	mov	x0, #0x0                   	// #0
  426758:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  42675c:	ldr	x0, [sp, #40]
  426760:	mov	w1, #0x1                   	// #1
  426764:	strb	w1, [x0, #8]
  426768:	ldr	x3, [sp, #40]
  42676c:	mov	x2, #0x0                   	// #0
  426770:	mov	x1, #0x0                   	// #0
  426774:	ldr	x0, [sp, #88]
  426778:	bl	4297a0 <_obstack_memory_used@@Base+0xd5c0>
  42677c:	str	x0, [sp, #104]
  426780:	ldr	x0, [sp, #104]
  426784:	cmp	x0, #0x0
  426788:	cset	w0, eq  // eq = none
  42678c:	and	w0, w0, #0xff
  426790:	and	x0, x0, #0xff
  426794:	cmp	x0, #0x0
  426798:	b.eq	426b34 <_obstack_memory_used@@Base+0xa954>  // b.none
  42679c:	ldr	x0, [sp, #16]
  4267a0:	mov	w1, #0xc                   	// #12
  4267a4:	str	w1, [x0]
  4267a8:	mov	x0, #0x0                   	// #0
  4267ac:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  4267b0:	ldr	x0, [sp, #40]
  4267b4:	ldr	w1, [x0]
  4267b8:	mov	w0, #0x30f                 	// #783
  4267bc:	and	w0, w1, w0
  4267c0:	cmp	w0, #0x0
  4267c4:	b.eq	4267e8 <_obstack_memory_used@@Base+0xa608>  // b.none
  4267c8:	ldr	x0, [sp, #88]
  4267cc:	ldrb	w0, [x0, #176]
  4267d0:	and	w0, w0, #0x10
  4267d4:	and	w0, w0, #0xff
  4267d8:	cmp	w0, #0x0
  4267dc:	b.ne	4267e8 <_obstack_memory_used@@Base+0xa608>  // b.any
  4267e0:	ldr	x0, [sp, #88]
  4267e4:	bl	422904 <_obstack_memory_used@@Base+0x6724>
  4267e8:	ldr	x0, [sp, #40]
  4267ec:	ldr	w0, [x0]
  4267f0:	cmp	w0, #0x100
  4267f4:	b.eq	426808 <_obstack_memory_used@@Base+0xa628>  // b.none
  4267f8:	ldr	x0, [sp, #40]
  4267fc:	ldr	w0, [x0]
  426800:	cmp	w0, #0x200
  426804:	b.ne	426928 <_obstack_memory_used@@Base+0xa748>  // b.any
  426808:	ldr	x0, [sp, #40]
  42680c:	ldr	w0, [x0]
  426810:	cmp	w0, #0x100
  426814:	b.ne	42684c <_obstack_memory_used@@Base+0xa66c>  // b.any
  426818:	ldr	x0, [sp, #40]
  42681c:	mov	w1, #0x6                   	// #6
  426820:	str	w1, [x0]
  426824:	ldr	x3, [sp, #40]
  426828:	mov	x2, #0x0                   	// #0
  42682c:	mov	x1, #0x0                   	// #0
  426830:	ldr	x0, [sp, #88]
  426834:	bl	4297a0 <_obstack_memory_used@@Base+0xd5c0>
  426838:	str	x0, [sp, #96]
  42683c:	ldr	x0, [sp, #40]
  426840:	mov	w1, #0x9                   	// #9
  426844:	str	w1, [x0]
  426848:	b	42687c <_obstack_memory_used@@Base+0xa69c>
  42684c:	ldr	x0, [sp, #40]
  426850:	mov	w1, #0x5                   	// #5
  426854:	str	w1, [x0]
  426858:	ldr	x3, [sp, #40]
  42685c:	mov	x2, #0x0                   	// #0
  426860:	mov	x1, #0x0                   	// #0
  426864:	ldr	x0, [sp, #88]
  426868:	bl	4297a0 <_obstack_memory_used@@Base+0xd5c0>
  42686c:	str	x0, [sp, #96]
  426870:	ldr	x0, [sp, #40]
  426874:	mov	w1, #0xa                   	// #10
  426878:	str	w1, [x0]
  42687c:	ldr	x3, [sp, #40]
  426880:	mov	x2, #0x0                   	// #0
  426884:	mov	x1, #0x0                   	// #0
  426888:	ldr	x0, [sp, #88]
  42688c:	bl	4297a0 <_obstack_memory_used@@Base+0xd5c0>
  426890:	str	x0, [sp, #80]
  426894:	mov	w3, #0xa                   	// #10
  426898:	ldr	x2, [sp, #80]
  42689c:	ldr	x1, [sp, #96]
  4268a0:	ldr	x0, [sp, #88]
  4268a4:	bl	429758 <_obstack_memory_used@@Base+0xd578>
  4268a8:	str	x0, [sp, #104]
  4268ac:	ldr	x0, [sp, #96]
  4268b0:	cmp	x0, #0x0
  4268b4:	cset	w0, eq  // eq = none
  4268b8:	and	w0, w0, #0xff
  4268bc:	and	x0, x0, #0xff
  4268c0:	cmp	x0, #0x0
  4268c4:	b.ne	4268e4 <_obstack_memory_used@@Base+0xa704>  // b.any
  4268c8:	ldr	x0, [sp, #80]
  4268cc:	cmp	x0, #0x0
  4268d0:	cset	w0, eq  // eq = none
  4268d4:	and	w0, w0, #0xff
  4268d8:	and	x0, x0, #0xff
  4268dc:	cmp	x0, #0x0
  4268e0:	b.eq	4268ec <_obstack_memory_used@@Base+0xa70c>  // b.none
  4268e4:	mov	w0, #0x1                   	// #1
  4268e8:	b	4268f0 <_obstack_memory_used@@Base+0xa710>
  4268ec:	mov	w0, #0x0                   	// #0
  4268f0:	cmp	w0, #0x0
  4268f4:	b.ne	426914 <_obstack_memory_used@@Base+0xa734>  // b.any
  4268f8:	ldr	x0, [sp, #104]
  4268fc:	cmp	x0, #0x0
  426900:	cset	w0, eq  // eq = none
  426904:	and	w0, w0, #0xff
  426908:	and	x0, x0, #0xff
  42690c:	cmp	x0, #0x0
  426910:	b.eq	426970 <_obstack_memory_used@@Base+0xa790>  // b.none
  426914:	ldr	x0, [sp, #16]
  426918:	mov	w1, #0xc                   	// #12
  42691c:	str	w1, [x0]
  426920:	mov	x0, #0x0                   	// #0
  426924:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  426928:	ldr	x3, [sp, #40]
  42692c:	mov	x2, #0x0                   	// #0
  426930:	mov	x1, #0x0                   	// #0
  426934:	ldr	x0, [sp, #88]
  426938:	bl	4297a0 <_obstack_memory_used@@Base+0xd5c0>
  42693c:	str	x0, [sp, #104]
  426940:	ldr	x0, [sp, #104]
  426944:	cmp	x0, #0x0
  426948:	cset	w0, eq  // eq = none
  42694c:	and	w0, w0, #0xff
  426950:	and	x0, x0, #0xff
  426954:	cmp	x0, #0x0
  426958:	b.eq	426974 <_obstack_memory_used@@Base+0xa794>  // b.none
  42695c:	ldr	x0, [sp, #16]
  426960:	mov	w1, #0xc                   	// #12
  426964:	str	w1, [x0]
  426968:	mov	x0, #0x0                   	// #0
  42696c:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  426970:	nop
  426974:	ldr	x2, [sp, #32]
  426978:	ldr	x1, [sp, #56]
  42697c:	ldr	x0, [sp, #40]
  426980:	bl	424fc4 <_obstack_memory_used@@Base+0x8de4>
  426984:	ldr	x0, [sp, #104]
  426988:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  42698c:	ldr	x3, [sp, #40]
  426990:	mov	x2, #0x0                   	// #0
  426994:	mov	x1, #0x0                   	// #0
  426998:	ldr	x0, [sp, #88]
  42699c:	bl	4297a0 <_obstack_memory_used@@Base+0xd5c0>
  4269a0:	str	x0, [sp, #104]
  4269a4:	ldr	x0, [sp, #104]
  4269a8:	cmp	x0, #0x0
  4269ac:	cset	w0, eq  // eq = none
  4269b0:	and	w0, w0, #0xff
  4269b4:	and	x0, x0, #0xff
  4269b8:	cmp	x0, #0x0
  4269bc:	b.eq	4269d4 <_obstack_memory_used@@Base+0xa7f4>  // b.none
  4269c0:	ldr	x0, [sp, #16]
  4269c4:	mov	w1, #0xc                   	// #12
  4269c8:	str	w1, [x0]
  4269cc:	mov	x0, #0x0                   	// #0
  4269d0:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  4269d4:	ldr	x0, [sp, #88]
  4269d8:	ldr	w0, [x0, #180]
  4269dc:	cmp	w0, #0x1
  4269e0:	b.le	426b3c <_obstack_memory_used@@Base+0xa95c>
  4269e4:	ldr	x0, [sp, #88]
  4269e8:	ldrb	w1, [x0, #176]
  4269ec:	orr	w1, w1, #0x2
  4269f0:	strb	w1, [x0, #176]
  4269f4:	b	426b3c <_obstack_memory_used@@Base+0xa95c>
  4269f8:	ldr	x0, [sp, #56]
  4269fc:	ldr	x1, [x0, #120]
  426a00:	ldr	x0, [sp, #40]
  426a04:	ldrb	w0, [x0, #8]
  426a08:	cmp	w0, #0x21
  426a0c:	cset	w0, eq  // eq = none
  426a10:	and	w0, w0, #0xff
  426a14:	ldr	x5, [sp, #16]
  426a18:	mov	w4, w0
  426a1c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  426a20:	add	x3, x0, #0x550
  426a24:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  426a28:	add	x2, x0, #0x558
  426a2c:	ldr	x0, [sp, #88]
  426a30:	bl	429328 <_obstack_memory_used@@Base+0xd148>
  426a34:	str	x0, [sp, #104]
  426a38:	ldr	x0, [sp, #16]
  426a3c:	ldr	w0, [x0]
  426a40:	cmp	w0, #0x0
  426a44:	cset	w0, ne  // ne = any
  426a48:	and	w0, w0, #0xff
  426a4c:	and	x0, x0, #0xff
  426a50:	cmp	x0, #0x0
  426a54:	b.eq	426b44 <_obstack_memory_used@@Base+0xa964>  // b.none
  426a58:	ldr	x0, [sp, #104]
  426a5c:	cmp	x0, #0x0
  426a60:	cset	w0, eq  // eq = none
  426a64:	and	w0, w0, #0xff
  426a68:	and	x0, x0, #0xff
  426a6c:	cmp	x0, #0x0
  426a70:	b.eq	426b44 <_obstack_memory_used@@Base+0xa964>  // b.none
  426a74:	mov	x0, #0x0                   	// #0
  426a78:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  426a7c:	ldr	x0, [sp, #56]
  426a80:	ldr	x1, [x0, #120]
  426a84:	ldr	x0, [sp, #40]
  426a88:	ldrb	w0, [x0, #8]
  426a8c:	cmp	w0, #0x23
  426a90:	cset	w0, eq  // eq = none
  426a94:	and	w0, w0, #0xff
  426a98:	ldr	x5, [sp, #16]
  426a9c:	mov	w4, w0
  426aa0:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  426aa4:	add	x3, x0, #0x560
  426aa8:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  426aac:	add	x2, x0, #0x568
  426ab0:	ldr	x0, [sp, #88]
  426ab4:	bl	429328 <_obstack_memory_used@@Base+0xd148>
  426ab8:	str	x0, [sp, #104]
  426abc:	ldr	x0, [sp, #16]
  426ac0:	ldr	w0, [x0]
  426ac4:	cmp	w0, #0x0
  426ac8:	cset	w0, ne  // ne = any
  426acc:	and	w0, w0, #0xff
  426ad0:	and	x0, x0, #0xff
  426ad4:	cmp	x0, #0x0
  426ad8:	b.eq	426b4c <_obstack_memory_used@@Base+0xa96c>  // b.none
  426adc:	ldr	x0, [sp, #104]
  426ae0:	cmp	x0, #0x0
  426ae4:	cset	w0, eq  // eq = none
  426ae8:	and	w0, w0, #0xff
  426aec:	and	x0, x0, #0xff
  426af0:	cmp	x0, #0x0
  426af4:	b.eq	426b4c <_obstack_memory_used@@Base+0xa96c>  // b.none
  426af8:	mov	x0, #0x0                   	// #0
  426afc:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  426b00:	mov	x0, #0x0                   	// #0
  426b04:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  426b08:	ldr	x0, [sp, #16]
  426b0c:	mov	w1, #0x5                   	// #5
  426b10:	str	w1, [x0]
  426b14:	mov	x0, #0x0                   	// #0
  426b18:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  426b1c:	nop
  426b20:	b	426b50 <_obstack_memory_used@@Base+0xa970>
  426b24:	nop
  426b28:	b	426b50 <_obstack_memory_used@@Base+0xa970>
  426b2c:	nop
  426b30:	b	426b50 <_obstack_memory_used@@Base+0xa970>
  426b34:	nop
  426b38:	b	426b50 <_obstack_memory_used@@Base+0xa970>
  426b3c:	nop
  426b40:	b	426b50 <_obstack_memory_used@@Base+0xa970>
  426b44:	nop
  426b48:	b	426b50 <_obstack_memory_used@@Base+0xa970>
  426b4c:	nop
  426b50:	ldr	x2, [sp, #32]
  426b54:	ldr	x1, [sp, #56]
  426b58:	ldr	x0, [sp, #40]
  426b5c:	bl	424fc4 <_obstack_memory_used@@Base+0x8de4>
  426b60:	b	426c54 <_obstack_memory_used@@Base+0xaa74>
  426b64:	ldr	x5, [sp, #16]
  426b68:	ldr	x4, [sp, #32]
  426b6c:	ldr	x3, [sp, #40]
  426b70:	ldr	x2, [sp, #88]
  426b74:	ldr	x1, [sp, #56]
  426b78:	ldr	x0, [sp, #104]
  426b7c:	bl	426e5c <_obstack_memory_used@@Base+0xac7c>
  426b80:	str	x0, [sp, #64]
  426b84:	ldr	x0, [sp, #16]
  426b88:	ldr	w0, [x0]
  426b8c:	cmp	w0, #0x0
  426b90:	cset	w0, ne  // ne = any
  426b94:	and	w0, w0, #0xff
  426b98:	and	x0, x0, #0xff
  426b9c:	cmp	x0, #0x0
  426ba0:	b.eq	426be8 <_obstack_memory_used@@Base+0xaa08>  // b.none
  426ba4:	ldr	x0, [sp, #64]
  426ba8:	cmp	x0, #0x0
  426bac:	cset	w0, eq  // eq = none
  426bb0:	and	w0, w0, #0xff
  426bb4:	and	x0, x0, #0xff
  426bb8:	cmp	x0, #0x0
  426bbc:	b.eq	426be8 <_obstack_memory_used@@Base+0xaa08>  // b.none
  426bc0:	ldr	x0, [sp, #104]
  426bc4:	cmp	x0, #0x0
  426bc8:	b.eq	426be0 <_obstack_memory_used@@Base+0xaa00>  // b.none
  426bcc:	mov	x2, #0x0                   	// #0
  426bd0:	adrp	x0, 429000 <_obstack_memory_used@@Base+0xce20>
  426bd4:	add	x1, x0, #0x9cc
  426bd8:	ldr	x0, [sp, #104]
  426bdc:	bl	423694 <_obstack_memory_used@@Base+0x74b4>
  426be0:	mov	x0, #0x0                   	// #0
  426be4:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  426be8:	ldr	x0, [sp, #64]
  426bec:	str	x0, [sp, #104]
  426bf0:	ldr	x0, [sp, #32]
  426bf4:	and	x0, x0, #0x1000000
  426bf8:	cmp	x0, #0x0
  426bfc:	b.eq	426c54 <_obstack_memory_used@@Base+0xaa74>  // b.none
  426c00:	ldr	x0, [sp, #40]
  426c04:	ldrb	w0, [x0, #8]
  426c08:	cmp	w0, #0xb
  426c0c:	b.eq	426c20 <_obstack_memory_used@@Base+0xaa40>  // b.none
  426c10:	ldr	x0, [sp, #40]
  426c14:	ldrb	w0, [x0, #8]
  426c18:	cmp	w0, #0x17
  426c1c:	b.ne	426c54 <_obstack_memory_used@@Base+0xaa74>  // b.any
  426c20:	ldr	x0, [sp, #104]
  426c24:	cmp	x0, #0x0
  426c28:	b.eq	426c40 <_obstack_memory_used@@Base+0xaa60>  // b.none
  426c2c:	mov	x2, #0x0                   	// #0
  426c30:	adrp	x0, 429000 <_obstack_memory_used@@Base+0xce20>
  426c34:	add	x1, x0, #0x9cc
  426c38:	ldr	x0, [sp, #104]
  426c3c:	bl	423694 <_obstack_memory_used@@Base+0x74b4>
  426c40:	ldr	x0, [sp, #16]
  426c44:	mov	w1, #0xd                   	// #13
  426c48:	str	w1, [x0]
  426c4c:	mov	x0, #0x0                   	// #0
  426c50:	b	426c98 <_obstack_memory_used@@Base+0xaab8>
  426c54:	ldr	x0, [sp, #40]
  426c58:	ldrb	w0, [x0, #8]
  426c5c:	cmp	w0, #0xb
  426c60:	b.eq	426b64 <_obstack_memory_used@@Base+0xa984>  // b.none
  426c64:	ldr	x0, [sp, #40]
  426c68:	ldrb	w0, [x0, #8]
  426c6c:	cmp	w0, #0x12
  426c70:	b.eq	426b64 <_obstack_memory_used@@Base+0xa984>  // b.none
  426c74:	ldr	x0, [sp, #40]
  426c78:	ldrb	w0, [x0, #8]
  426c7c:	cmp	w0, #0x13
  426c80:	b.eq	426b64 <_obstack_memory_used@@Base+0xa984>  // b.none
  426c84:	ldr	x0, [sp, #40]
  426c88:	ldrb	w0, [x0, #8]
  426c8c:	cmp	w0, #0x17
  426c90:	b.eq	426b64 <_obstack_memory_used@@Base+0xa984>  // b.none
  426c94:	ldr	x0, [sp, #104]
  426c98:	ldp	x29, x30, [sp], #112
  426c9c:	ret
  426ca0:	stp	x29, x30, [sp, #-96]!
  426ca4:	mov	x29, sp
  426ca8:	str	x0, [sp, #56]
  426cac:	str	x1, [sp, #48]
  426cb0:	str	x2, [sp, #40]
  426cb4:	str	x3, [sp, #32]
  426cb8:	str	x4, [sp, #24]
  426cbc:	str	x5, [sp, #16]
  426cc0:	ldr	x0, [sp, #48]
  426cc4:	ldr	x0, [x0]
  426cc8:	str	x0, [sp, #80]
  426ccc:	ldr	x0, [sp, #48]
  426cd0:	ldr	x0, [x0, #48]
  426cd4:	add	x2, x0, #0x1
  426cd8:	ldr	x1, [sp, #48]
  426cdc:	str	x2, [x1, #48]
  426ce0:	str	x0, [sp, #72]
  426ce4:	ldr	x0, [sp, #32]
  426ce8:	orr	x0, x0, #0x800000
  426cec:	mov	x2, x0
  426cf0:	ldr	x1, [sp, #56]
  426cf4:	ldr	x0, [sp, #40]
  426cf8:	bl	424fc4 <_obstack_memory_used@@Base+0x8de4>
  426cfc:	ldr	x0, [sp, #40]
  426d00:	ldrb	w0, [x0, #8]
  426d04:	cmp	w0, #0x9
  426d08:	b.ne	426d14 <_obstack_memory_used@@Base+0xab34>  // b.any
  426d0c:	str	xzr, [sp, #88]
  426d10:	b	426dc8 <_obstack_memory_used@@Base+0xabe8>
  426d14:	ldr	x5, [sp, #16]
  426d18:	ldr	x4, [sp, #24]
  426d1c:	ldr	x3, [sp, #32]
  426d20:	ldr	x2, [sp, #40]
  426d24:	ldr	x1, [sp, #48]
  426d28:	ldr	x0, [sp, #56]
  426d2c:	bl	425e88 <_obstack_memory_used@@Base+0x9ca8>
  426d30:	str	x0, [sp, #88]
  426d34:	ldr	x0, [sp, #16]
  426d38:	ldr	w0, [x0]
  426d3c:	cmp	w0, #0x0
  426d40:	cset	w0, eq  // eq = none
  426d44:	and	w0, w0, #0xff
  426d48:	and	x0, x0, #0xff
  426d4c:	cmp	x0, #0x0
  426d50:	b.eq	426da0 <_obstack_memory_used@@Base+0xabc0>  // b.none
  426d54:	ldr	x0, [sp, #40]
  426d58:	ldrb	w0, [x0, #8]
  426d5c:	cmp	w0, #0x9
  426d60:	cset	w0, ne  // ne = any
  426d64:	and	w0, w0, #0xff
  426d68:	and	x0, x0, #0xff
  426d6c:	cmp	x0, #0x0
  426d70:	b.eq	426da0 <_obstack_memory_used@@Base+0xabc0>  // b.none
  426d74:	ldr	x0, [sp, #88]
  426d78:	cmp	x0, #0x0
  426d7c:	b.eq	426d94 <_obstack_memory_used@@Base+0xabb4>  // b.none
  426d80:	mov	x2, #0x0                   	// #0
  426d84:	adrp	x0, 429000 <_obstack_memory_used@@Base+0xce20>
  426d88:	add	x1, x0, #0x9cc
  426d8c:	ldr	x0, [sp, #88]
  426d90:	bl	423694 <_obstack_memory_used@@Base+0x74b4>
  426d94:	ldr	x0, [sp, #16]
  426d98:	mov	w1, #0x8                   	// #8
  426d9c:	str	w1, [x0]
  426da0:	ldr	x0, [sp, #16]
  426da4:	ldr	w0, [x0]
  426da8:	cmp	w0, #0x0
  426dac:	cset	w0, ne  // ne = any
  426db0:	and	w0, w0, #0xff
  426db4:	and	x0, x0, #0xff
  426db8:	cmp	x0, #0x0
  426dbc:	b.eq	426dc8 <_obstack_memory_used@@Base+0xabe8>  // b.none
  426dc0:	mov	x0, #0x0                   	// #0
  426dc4:	b	426e54 <_obstack_memory_used@@Base+0xac74>
  426dc8:	ldr	x0, [sp, #72]
  426dcc:	cmp	x0, #0x8
  426dd0:	b.hi	426dfc <_obstack_memory_used@@Base+0xac1c>  // b.pmore
  426dd4:	ldr	x0, [sp, #80]
  426dd8:	ldr	x1, [x0, #168]
  426ddc:	ldr	x0, [sp, #72]
  426de0:	mov	w2, w0
  426de4:	mov	w0, #0x1                   	// #1
  426de8:	lsl	w0, w0, w2
  426dec:	sxtw	x0, w0
  426df0:	orr	x1, x1, x0
  426df4:	ldr	x0, [sp, #80]
  426df8:	str	x1, [x0, #168]
  426dfc:	mov	w3, #0x11                  	// #17
  426e00:	mov	x2, #0x0                   	// #0
  426e04:	ldr	x1, [sp, #88]
  426e08:	ldr	x0, [sp, #80]
  426e0c:	bl	429758 <_obstack_memory_used@@Base+0xd578>
  426e10:	str	x0, [sp, #88]
  426e14:	ldr	x0, [sp, #88]
  426e18:	cmp	x0, #0x0
  426e1c:	cset	w0, eq  // eq = none
  426e20:	and	w0, w0, #0xff
  426e24:	and	x0, x0, #0xff
  426e28:	cmp	x0, #0x0
  426e2c:	b.eq	426e44 <_obstack_memory_used@@Base+0xac64>  // b.none
  426e30:	ldr	x0, [sp, #16]
  426e34:	mov	w1, #0xc                   	// #12
  426e38:	str	w1, [x0]
  426e3c:	mov	x0, #0x0                   	// #0
  426e40:	b	426e54 <_obstack_memory_used@@Base+0xac74>
  426e44:	ldr	x1, [sp, #72]
  426e48:	ldr	x0, [sp, #88]
  426e4c:	str	x1, [x0, #40]
  426e50:	ldr	x0, [sp, #88]
  426e54:	ldp	x29, x30, [sp], #96
  426e58:	ret
  426e5c:	stp	x29, x30, [sp, #-144]!
  426e60:	mov	x29, sp
  426e64:	str	x0, [sp, #56]
  426e68:	str	x1, [sp, #48]
  426e6c:	str	x2, [sp, #40]
  426e70:	str	x3, [sp, #32]
  426e74:	str	x4, [sp, #24]
  426e78:	str	x5, [sp, #16]
  426e7c:	str	xzr, [sp, #136]
  426e80:	str	xzr, [sp, #128]
  426e84:	ldr	x0, [sp, #48]
  426e88:	ldr	x0, [x0, #72]
  426e8c:	str	x0, [sp, #96]
  426e90:	ldr	x0, [sp, #32]
  426e94:	ldp	x0, x1, [x0]
  426e98:	stp	x0, x1, [sp, #72]
  426e9c:	ldr	x0, [sp, #32]
  426ea0:	ldrb	w0, [x0, #8]
  426ea4:	cmp	w0, #0x17
  426ea8:	b.ne	427114 <_obstack_memory_used@@Base+0xaf34>  // b.any
  426eac:	str	xzr, [sp, #104]
  426eb0:	ldr	x2, [sp, #24]
  426eb4:	ldr	x1, [sp, #32]
  426eb8:	ldr	x0, [sp, #48]
  426ebc:	bl	4295ec <_obstack_memory_used@@Base+0xd40c>
  426ec0:	str	x0, [sp, #112]
  426ec4:	ldr	x0, [sp, #112]
  426ec8:	cmn	x0, #0x1
  426ecc:	b.ne	426f0c <_obstack_memory_used@@Base+0xad2c>  // b.any
  426ed0:	ldr	x0, [sp, #32]
  426ed4:	ldrb	w0, [x0, #8]
  426ed8:	cmp	w0, #0x1
  426edc:	b.ne	426ef8 <_obstack_memory_used@@Base+0xad18>  // b.any
  426ee0:	ldr	x0, [sp, #32]
  426ee4:	ldrb	w0, [x0]
  426ee8:	cmp	w0, #0x2c
  426eec:	b.ne	426ef8 <_obstack_memory_used@@Base+0xad18>  // b.any
  426ef0:	str	xzr, [sp, #112]
  426ef4:	b	426f0c <_obstack_memory_used@@Base+0xad2c>
  426ef8:	ldr	x0, [sp, #16]
  426efc:	mov	w1, #0xa                   	// #10
  426f00:	str	w1, [x0]
  426f04:	mov	x0, #0x0                   	// #0
  426f08:	b	427478 <_obstack_memory_used@@Base+0xb298>
  426f0c:	ldr	x0, [sp, #112]
  426f10:	cmn	x0, #0x2
  426f14:	cset	w0, ne  // ne = any
  426f18:	and	w0, w0, #0xff
  426f1c:	and	x0, x0, #0xff
  426f20:	cmp	x0, #0x0
  426f24:	b.eq	426f7c <_obstack_memory_used@@Base+0xad9c>  // b.none
  426f28:	ldr	x0, [sp, #32]
  426f2c:	ldrb	w0, [x0, #8]
  426f30:	cmp	w0, #0x18
  426f34:	b.eq	426f74 <_obstack_memory_used@@Base+0xad94>  // b.none
  426f38:	ldr	x0, [sp, #32]
  426f3c:	ldrb	w0, [x0, #8]
  426f40:	cmp	w0, #0x1
  426f44:	b.ne	426f6c <_obstack_memory_used@@Base+0xad8c>  // b.any
  426f48:	ldr	x0, [sp, #32]
  426f4c:	ldrb	w0, [x0]
  426f50:	cmp	w0, #0x2c
  426f54:	b.ne	426f6c <_obstack_memory_used@@Base+0xad8c>  // b.any
  426f58:	ldr	x2, [sp, #24]
  426f5c:	ldr	x1, [sp, #32]
  426f60:	ldr	x0, [sp, #48]
  426f64:	bl	4295ec <_obstack_memory_used@@Base+0xd40c>
  426f68:	b	426f78 <_obstack_memory_used@@Base+0xad98>
  426f6c:	mov	x0, #0xfffffffffffffffe    	// #-2
  426f70:	b	426f78 <_obstack_memory_used@@Base+0xad98>
  426f74:	ldr	x0, [sp, #112]
  426f78:	str	x0, [sp, #104]
  426f7c:	ldr	x0, [sp, #112]
  426f80:	cmn	x0, #0x2
  426f84:	cset	w0, eq  // eq = none
  426f88:	and	w0, w0, #0xff
  426f8c:	and	x0, x0, #0xff
  426f90:	cmp	x0, #0x0
  426f94:	b.ne	426fb4 <_obstack_memory_used@@Base+0xadd4>  // b.any
  426f98:	ldr	x0, [sp, #104]
  426f9c:	cmn	x0, #0x2
  426fa0:	cset	w0, eq  // eq = none
  426fa4:	and	w0, w0, #0xff
  426fa8:	and	x0, x0, #0xff
  426fac:	cmp	x0, #0x0
  426fb0:	b.eq	427034 <_obstack_memory_used@@Base+0xae54>  // b.none
  426fb4:	ldr	x0, [sp, #24]
  426fb8:	and	x0, x0, #0x200000
  426fbc:	cmp	x0, #0x0
  426fc0:	cset	w0, eq  // eq = none
  426fc4:	and	w0, w0, #0xff
  426fc8:	and	x0, x0, #0xff
  426fcc:	cmp	x0, #0x0
  426fd0:	b.eq	427008 <_obstack_memory_used@@Base+0xae28>  // b.none
  426fd4:	ldr	x0, [sp, #32]
  426fd8:	ldrb	w0, [x0, #8]
  426fdc:	cmp	w0, #0x2
  426fe0:	b.ne	426ff4 <_obstack_memory_used@@Base+0xae14>  // b.any
  426fe4:	ldr	x0, [sp, #16]
  426fe8:	mov	w1, #0x9                   	// #9
  426fec:	str	w1, [x0]
  426ff0:	b	427000 <_obstack_memory_used@@Base+0xae20>
  426ff4:	ldr	x0, [sp, #16]
  426ff8:	mov	w1, #0xa                   	// #10
  426ffc:	str	w1, [x0]
  427000:	mov	x0, #0x0                   	// #0
  427004:	b	427478 <_obstack_memory_used@@Base+0xb298>
  427008:	ldr	x0, [sp, #48]
  42700c:	ldr	x1, [sp, #96]
  427010:	str	x1, [x0, #72]
  427014:	ldr	x2, [sp, #32]
  427018:	ldp	x0, x1, [sp, #72]
  42701c:	stp	x0, x1, [x2]
  427020:	ldr	x0, [sp, #32]
  427024:	mov	w1, #0x1                   	// #1
  427028:	strb	w1, [x0, #8]
  42702c:	ldr	x0, [sp, #56]
  427030:	b	427478 <_obstack_memory_used@@Base+0xb298>
  427034:	ldr	x0, [sp, #104]
  427038:	cmn	x0, #0x1
  42703c:	cset	w0, ne  // ne = any
  427040:	and	w0, w0, #0xff
  427044:	and	x0, x0, #0xff
  427048:	cmp	x0, #0x0
  42704c:	b.eq	427078 <_obstack_memory_used@@Base+0xae98>  // b.none
  427050:	ldr	x1, [sp, #112]
  427054:	ldr	x0, [sp, #104]
  427058:	cmp	x1, x0
  42705c:	cset	w0, gt
  427060:	and	w0, w0, #0xff
  427064:	and	x0, x0, #0xff
  427068:	cmp	x0, #0x0
  42706c:	b.eq	427078 <_obstack_memory_used@@Base+0xae98>  // b.none
  427070:	mov	w0, #0x1                   	// #1
  427074:	b	42707c <_obstack_memory_used@@Base+0xae9c>
  427078:	mov	w0, #0x0                   	// #0
  42707c:	cmp	w0, #0x0
  427080:	b.ne	4270a4 <_obstack_memory_used@@Base+0xaec4>  // b.any
  427084:	ldr	x0, [sp, #32]
  427088:	ldrb	w0, [x0, #8]
  42708c:	cmp	w0, #0x18
  427090:	cset	w0, ne  // ne = any
  427094:	and	w0, w0, #0xff
  427098:	and	x0, x0, #0xff
  42709c:	cmp	x0, #0x0
  4270a0:	b.eq	4270b8 <_obstack_memory_used@@Base+0xaed8>  // b.none
  4270a4:	ldr	x0, [sp, #16]
  4270a8:	mov	w1, #0xa                   	// #10
  4270ac:	str	w1, [x0]
  4270b0:	mov	x0, #0x0                   	// #0
  4270b4:	b	427478 <_obstack_memory_used@@Base+0xb298>
  4270b8:	ldr	x0, [sp, #104]
  4270bc:	cmn	x0, #0x1
  4270c0:	b.ne	4270e0 <_obstack_memory_used@@Base+0xaf00>  // b.any
  4270c4:	ldr	x1, [sp, #112]
  4270c8:	mov	x0, #0x7fff                	// #32767
  4270cc:	cmp	x1, x0
  4270d0:	cset	w0, gt
  4270d4:	and	w0, w0, #0xff
  4270d8:	sxtw	x0, w0
  4270dc:	b	4270f8 <_obstack_memory_used@@Base+0xaf18>
  4270e0:	ldr	x1, [sp, #104]
  4270e4:	mov	x0, #0x7fff                	// #32767
  4270e8:	cmp	x1, x0
  4270ec:	cset	w0, gt
  4270f0:	and	w0, w0, #0xff
  4270f4:	sxtw	x0, w0
  4270f8:	cmp	x0, #0x0
  4270fc:	b.eq	427150 <_obstack_memory_used@@Base+0xaf70>  // b.none
  427100:	ldr	x0, [sp, #16]
  427104:	mov	w1, #0xf                   	// #15
  427108:	str	w1, [x0]
  42710c:	mov	x0, #0x0                   	// #0
  427110:	b	427478 <_obstack_memory_used@@Base+0xb298>
  427114:	ldr	x0, [sp, #32]
  427118:	ldrb	w0, [x0, #8]
  42711c:	cmp	w0, #0x12
  427120:	cset	w0, eq  // eq = none
  427124:	and	w0, w0, #0xff
  427128:	and	x0, x0, #0xff
  42712c:	str	x0, [sp, #112]
  427130:	ldr	x0, [sp, #32]
  427134:	ldrb	w0, [x0, #8]
  427138:	cmp	w0, #0x13
  42713c:	b.ne	427148 <_obstack_memory_used@@Base+0xaf68>  // b.any
  427140:	mov	x0, #0x1                   	// #1
  427144:	b	42714c <_obstack_memory_used@@Base+0xaf6c>
  427148:	mov	x0, #0xffffffffffffffff    	// #-1
  42714c:	str	x0, [sp, #104]
  427150:	ldr	x2, [sp, #24]
  427154:	ldr	x1, [sp, #48]
  427158:	ldr	x0, [sp, #32]
  42715c:	bl	424fc4 <_obstack_memory_used@@Base+0x8de4>
  427160:	ldr	x0, [sp, #56]
  427164:	cmp	x0, #0x0
  427168:	cset	w0, eq  // eq = none
  42716c:	and	w0, w0, #0xff
  427170:	and	x0, x0, #0xff
  427174:	cmp	x0, #0x0
  427178:	b.eq	427184 <_obstack_memory_used@@Base+0xafa4>  // b.none
  42717c:	mov	x0, #0x0                   	// #0
  427180:	b	427478 <_obstack_memory_used@@Base+0xb298>
  427184:	ldr	x0, [sp, #112]
  427188:	cmp	x0, #0x0
  42718c:	cset	w0, eq  // eq = none
  427190:	and	w0, w0, #0xff
  427194:	and	x0, x0, #0xff
  427198:	cmp	x0, #0x0
  42719c:	b.eq	4271d8 <_obstack_memory_used@@Base+0xaff8>  // b.none
  4271a0:	ldr	x0, [sp, #104]
  4271a4:	cmp	x0, #0x0
  4271a8:	cset	w0, eq  // eq = none
  4271ac:	and	w0, w0, #0xff
  4271b0:	and	x0, x0, #0xff
  4271b4:	cmp	x0, #0x0
  4271b8:	b.eq	4271d8 <_obstack_memory_used@@Base+0xaff8>  // b.none
  4271bc:	mov	x2, #0x0                   	// #0
  4271c0:	adrp	x0, 429000 <_obstack_memory_used@@Base+0xce20>
  4271c4:	add	x1, x0, #0x9cc
  4271c8:	ldr	x0, [sp, #56]
  4271cc:	bl	423694 <_obstack_memory_used@@Base+0x74b4>
  4271d0:	mov	x0, #0x0                   	// #0
  4271d4:	b	427478 <_obstack_memory_used@@Base+0xb298>
  4271d8:	ldr	x0, [sp, #112]
  4271dc:	cmp	x0, #0x0
  4271e0:	cset	w0, gt
  4271e4:	and	w0, w0, #0xff
  4271e8:	and	x0, x0, #0xff
  4271ec:	cmp	x0, #0x0
  4271f0:	b.eq	4272d4 <_obstack_memory_used@@Base+0xb0f4>  // b.none
  4271f4:	ldr	x0, [sp, #56]
  4271f8:	str	x0, [sp, #136]
  4271fc:	mov	x0, #0x2                   	// #2
  427200:	str	x0, [sp, #120]
  427204:	b	427274 <_obstack_memory_used@@Base+0xb094>
  427208:	ldr	x1, [sp, #40]
  42720c:	ldr	x0, [sp, #56]
  427210:	bl	4299f4 <_obstack_memory_used@@Base+0xd814>
  427214:	str	x0, [sp, #56]
  427218:	mov	w3, #0x10                  	// #16
  42721c:	ldr	x2, [sp, #56]
  427220:	ldr	x1, [sp, #136]
  427224:	ldr	x0, [sp, #40]
  427228:	bl	429758 <_obstack_memory_used@@Base+0xd578>
  42722c:	str	x0, [sp, #136]
  427230:	ldr	x0, [sp, #56]
  427234:	cmp	x0, #0x0
  427238:	cset	w0, eq  // eq = none
  42723c:	and	w0, w0, #0xff
  427240:	and	x0, x0, #0xff
  427244:	cmp	x0, #0x0
  427248:	b.ne	427444 <_obstack_memory_used@@Base+0xb264>  // b.any
  42724c:	ldr	x0, [sp, #136]
  427250:	cmp	x0, #0x0
  427254:	cset	w0, eq  // eq = none
  427258:	and	w0, w0, #0xff
  42725c:	and	x0, x0, #0xff
  427260:	cmp	x0, #0x0
  427264:	b.ne	427444 <_obstack_memory_used@@Base+0xb264>  // b.any
  427268:	ldr	x0, [sp, #120]
  42726c:	add	x0, x0, #0x1
  427270:	str	x0, [sp, #120]
  427274:	ldr	x1, [sp, #120]
  427278:	ldr	x0, [sp, #112]
  42727c:	cmp	x1, x0
  427280:	b.le	427208 <_obstack_memory_used@@Base+0xb028>
  427284:	ldr	x1, [sp, #112]
  427288:	ldr	x0, [sp, #104]
  42728c:	cmp	x1, x0
  427290:	b.ne	42729c <_obstack_memory_used@@Base+0xb0bc>  // b.any
  427294:	ldr	x0, [sp, #136]
  427298:	b	427478 <_obstack_memory_used@@Base+0xb298>
  42729c:	ldr	x1, [sp, #40]
  4272a0:	ldr	x0, [sp, #56]
  4272a4:	bl	4299f4 <_obstack_memory_used@@Base+0xd814>
  4272a8:	str	x0, [sp, #56]
  4272ac:	ldr	x0, [sp, #56]
  4272b0:	cmp	x0, #0x0
  4272b4:	cset	w0, eq  // eq = none
  4272b8:	and	w0, w0, #0xff
  4272bc:	and	x0, x0, #0xff
  4272c0:	cmp	x0, #0x0
  4272c4:	b.ne	42744c <_obstack_memory_used@@Base+0xb26c>  // b.any
  4272c8:	ldr	x0, [sp, #136]
  4272cc:	str	x0, [sp, #128]
  4272d0:	b	4272d8 <_obstack_memory_used@@Base+0xb0f8>
  4272d4:	str	xzr, [sp, #128]
  4272d8:	ldr	x0, [sp, #56]
  4272dc:	ldrb	w0, [x0, #48]
  4272e0:	cmp	w0, #0x11
  4272e4:	b.ne	42730c <_obstack_memory_used@@Base+0xb12c>  // b.any
  4272e8:	ldr	x0, [sp, #56]
  4272ec:	ldr	x0, [x0, #40]
  4272f0:	str	x0, [sp, #88]
  4272f4:	ldr	x0, [sp, #88]
  4272f8:	mov	x2, x0
  4272fc:	adrp	x0, 429000 <_obstack_memory_used@@Base+0xce20>
  427300:	add	x1, x0, #0x8f4
  427304:	ldr	x0, [sp, #56]
  427308:	bl	423694 <_obstack_memory_used@@Base+0x74b4>
  42730c:	ldr	x0, [sp, #104]
  427310:	cmn	x0, #0x1
  427314:	b.ne	427320 <_obstack_memory_used@@Base+0xb140>  // b.any
  427318:	mov	w0, #0xb                   	// #11
  42731c:	b	427324 <_obstack_memory_used@@Base+0xb144>
  427320:	mov	w0, #0xa                   	// #10
  427324:	mov	w3, w0
  427328:	mov	x2, #0x0                   	// #0
  42732c:	ldr	x1, [sp, #56]
  427330:	ldr	x0, [sp, #40]
  427334:	bl	429758 <_obstack_memory_used@@Base+0xd578>
  427338:	str	x0, [sp, #136]
  42733c:	ldr	x0, [sp, #136]
  427340:	cmp	x0, #0x0
  427344:	cset	w0, eq  // eq = none
  427348:	and	w0, w0, #0xff
  42734c:	and	x0, x0, #0xff
  427350:	cmp	x0, #0x0
  427354:	b.ne	427454 <_obstack_memory_used@@Base+0xb274>  // b.any
  427358:	ldr	x0, [sp, #112]
  42735c:	add	x0, x0, #0x2
  427360:	str	x0, [sp, #120]
  427364:	b	427408 <_obstack_memory_used@@Base+0xb228>
  427368:	ldr	x1, [sp, #40]
  42736c:	ldr	x0, [sp, #56]
  427370:	bl	4299f4 <_obstack_memory_used@@Base+0xd814>
  427374:	str	x0, [sp, #56]
  427378:	mov	w3, #0x10                  	// #16
  42737c:	ldr	x2, [sp, #56]
  427380:	ldr	x1, [sp, #136]
  427384:	ldr	x0, [sp, #40]
  427388:	bl	429758 <_obstack_memory_used@@Base+0xd578>
  42738c:	str	x0, [sp, #136]
  427390:	ldr	x0, [sp, #56]
  427394:	cmp	x0, #0x0
  427398:	cset	w0, eq  // eq = none
  42739c:	and	w0, w0, #0xff
  4273a0:	and	x0, x0, #0xff
  4273a4:	cmp	x0, #0x0
  4273a8:	b.ne	42745c <_obstack_memory_used@@Base+0xb27c>  // b.any
  4273ac:	ldr	x0, [sp, #136]
  4273b0:	cmp	x0, #0x0
  4273b4:	cset	w0, eq  // eq = none
  4273b8:	and	w0, w0, #0xff
  4273bc:	and	x0, x0, #0xff
  4273c0:	cmp	x0, #0x0
  4273c4:	b.ne	42745c <_obstack_memory_used@@Base+0xb27c>  // b.any
  4273c8:	mov	w3, #0xa                   	// #10
  4273cc:	mov	x2, #0x0                   	// #0
  4273d0:	ldr	x1, [sp, #136]
  4273d4:	ldr	x0, [sp, #40]
  4273d8:	bl	429758 <_obstack_memory_used@@Base+0xd578>
  4273dc:	str	x0, [sp, #136]
  4273e0:	ldr	x0, [sp, #136]
  4273e4:	cmp	x0, #0x0
  4273e8:	cset	w0, eq  // eq = none
  4273ec:	and	w0, w0, #0xff
  4273f0:	and	x0, x0, #0xff
  4273f4:	cmp	x0, #0x0
  4273f8:	b.ne	427464 <_obstack_memory_used@@Base+0xb284>  // b.any
  4273fc:	ldr	x0, [sp, #120]
  427400:	add	x0, x0, #0x1
  427404:	str	x0, [sp, #120]
  427408:	ldr	x1, [sp, #120]
  42740c:	ldr	x0, [sp, #104]
  427410:	cmp	x1, x0
  427414:	b.le	427368 <_obstack_memory_used@@Base+0xb188>
  427418:	ldr	x0, [sp, #128]
  42741c:	cmp	x0, #0x0
  427420:	b.eq	42743c <_obstack_memory_used@@Base+0xb25c>  // b.none
  427424:	mov	w3, #0x10                  	// #16
  427428:	ldr	x2, [sp, #136]
  42742c:	ldr	x1, [sp, #128]
  427430:	ldr	x0, [sp, #40]
  427434:	bl	429758 <_obstack_memory_used@@Base+0xd578>
  427438:	str	x0, [sp, #136]
  42743c:	ldr	x0, [sp, #136]
  427440:	b	427478 <_obstack_memory_used@@Base+0xb298>
  427444:	nop
  427448:	b	427468 <_obstack_memory_used@@Base+0xb288>
  42744c:	nop
  427450:	b	427468 <_obstack_memory_used@@Base+0xb288>
  427454:	nop
  427458:	b	427468 <_obstack_memory_used@@Base+0xb288>
  42745c:	nop
  427460:	b	427468 <_obstack_memory_used@@Base+0xb288>
  427464:	nop
  427468:	ldr	x0, [sp, #16]
  42746c:	mov	w1, #0xc                   	// #12
  427470:	str	w1, [x0]
  427474:	mov	x0, #0x0                   	// #0
  427478:	ldp	x29, x30, [sp], #144
  42747c:	ret
  427480:	stp	x29, x30, [sp, #-32]!
  427484:	mov	x29, sp
  427488:	strb	w0, [sp, #31]
  42748c:	str	x1, [sp, #16]
  427490:	ldr	x0, [sp, #16]
  427494:	cmp	x0, #0x0
  427498:	b.ne	4274a4 <_obstack_memory_used@@Base+0xb2c4>  // b.any
  42749c:	ldrb	w0, [sp, #31]
  4274a0:	b	4274ac <_obstack_memory_used@@Base+0xb2cc>
  4274a4:	ldrb	w0, [sp, #31]
  4274a8:	bl	402a80 <btowc@plt>
  4274ac:	ldp	x29, x30, [sp], #32
  4274b0:	ret
  4274b4:	stp	x29, x30, [sp, #-112]!
  4274b8:	mov	x29, sp
  4274bc:	str	x0, [sp, #56]
  4274c0:	str	x1, [sp, #48]
  4274c4:	str	x2, [sp, #40]
  4274c8:	str	x3, [sp, #32]
  4274cc:	str	x4, [sp, #24]
  4274d0:	str	x5, [sp, #16]
  4274d4:	ldr	x0, [sp, #24]
  4274d8:	ldr	w0, [x0]
  4274dc:	cmp	w0, #0x2
  4274e0:	cset	w0, eq  // eq = none
  4274e4:	and	w0, w0, #0xff
  4274e8:	and	x0, x0, #0xff
  4274ec:	cmp	x0, #0x0
  4274f0:	b.ne	427514 <_obstack_memory_used@@Base+0xb334>  // b.any
  4274f4:	ldr	x0, [sp, #24]
  4274f8:	ldr	w0, [x0]
  4274fc:	cmp	w0, #0x4
  427500:	cset	w0, eq  // eq = none
  427504:	and	w0, w0, #0xff
  427508:	and	x0, x0, #0xff
  42750c:	cmp	x0, #0x0
  427510:	b.eq	42751c <_obstack_memory_used@@Base+0xb33c>  // b.none
  427514:	mov	w0, #0x1                   	// #1
  427518:	b	427520 <_obstack_memory_used@@Base+0xb340>
  42751c:	mov	w0, #0x0                   	// #0
  427520:	cmp	w0, #0x0
  427524:	b.ne	427548 <_obstack_memory_used@@Base+0xb368>  // b.any
  427528:	ldr	x0, [sp, #16]
  42752c:	ldr	w0, [x0]
  427530:	cmp	w0, #0x2
  427534:	cset	w0, eq  // eq = none
  427538:	and	w0, w0, #0xff
  42753c:	and	x0, x0, #0xff
  427540:	cmp	x0, #0x0
  427544:	b.eq	427550 <_obstack_memory_used@@Base+0xb370>  // b.none
  427548:	mov	w0, #0x1                   	// #1
  42754c:	b	427554 <_obstack_memory_used@@Base+0xb374>
  427550:	mov	w0, #0x0                   	// #0
  427554:	cmp	w0, #0x0
  427558:	b.ne	42757c <_obstack_memory_used@@Base+0xb39c>  // b.any
  42755c:	ldr	x0, [sp, #16]
  427560:	ldr	w0, [x0]
  427564:	cmp	w0, #0x4
  427568:	cset	w0, eq  // eq = none
  42756c:	and	w0, w0, #0xff
  427570:	and	x0, x0, #0xff
  427574:	cmp	x0, #0x0
  427578:	b.eq	427584 <_obstack_memory_used@@Base+0xb3a4>  // b.none
  42757c:	mov	w0, #0xb                   	// #11
  427580:	b	427948 <_obstack_memory_used@@Base+0xb768>
  427584:	ldr	x0, [sp, #24]
  427588:	ldr	w0, [x0]
  42758c:	cmp	w0, #0x3
  427590:	cset	w0, eq  // eq = none
  427594:	and	w0, w0, #0xff
  427598:	and	x0, x0, #0xff
  42759c:	cmp	x0, #0x0
  4275a0:	b.eq	4275d0 <_obstack_memory_used@@Base+0xb3f0>  // b.none
  4275a4:	ldr	x0, [sp, #24]
  4275a8:	ldr	x0, [x0, #8]
  4275ac:	bl	402720 <strlen@plt>
  4275b0:	cmp	x0, #0x1
  4275b4:	cset	w0, hi  // hi = pmore
  4275b8:	and	w0, w0, #0xff
  4275bc:	and	x0, x0, #0xff
  4275c0:	cmp	x0, #0x0
  4275c4:	b.eq	4275d0 <_obstack_memory_used@@Base+0xb3f0>  // b.none
  4275c8:	mov	w0, #0x1                   	// #1
  4275cc:	b	4275d4 <_obstack_memory_used@@Base+0xb3f4>
  4275d0:	mov	w0, #0x0                   	// #0
  4275d4:	cmp	w0, #0x0
  4275d8:	b.ne	427634 <_obstack_memory_used@@Base+0xb454>  // b.any
  4275dc:	ldr	x0, [sp, #16]
  4275e0:	ldr	w0, [x0]
  4275e4:	cmp	w0, #0x3
  4275e8:	cset	w0, eq  // eq = none
  4275ec:	and	w0, w0, #0xff
  4275f0:	and	x0, x0, #0xff
  4275f4:	cmp	x0, #0x0
  4275f8:	b.eq	427628 <_obstack_memory_used@@Base+0xb448>  // b.none
  4275fc:	ldr	x0, [sp, #16]
  427600:	ldr	x0, [x0, #8]
  427604:	bl	402720 <strlen@plt>
  427608:	cmp	x0, #0x1
  42760c:	cset	w0, hi  // hi = pmore
  427610:	and	w0, w0, #0xff
  427614:	and	x0, x0, #0xff
  427618:	cmp	x0, #0x0
  42761c:	b.eq	427628 <_obstack_memory_used@@Base+0xb448>  // b.none
  427620:	mov	w0, #0x1                   	// #1
  427624:	b	42762c <_obstack_memory_used@@Base+0xb44c>
  427628:	mov	w0, #0x0                   	// #0
  42762c:	cmp	w0, #0x0
  427630:	b.eq	42763c <_obstack_memory_used@@Base+0xb45c>  // b.none
  427634:	mov	w0, #0x3                   	// #3
  427638:	b	427948 <_obstack_memory_used@@Base+0xb768>
  42763c:	ldr	x0, [sp, #24]
  427640:	ldr	w0, [x0]
  427644:	cmp	w0, #0x0
  427648:	b.ne	427658 <_obstack_memory_used@@Base+0xb478>  // b.any
  42764c:	ldr	x0, [sp, #24]
  427650:	ldrb	w0, [x0, #8]
  427654:	b	42767c <_obstack_memory_used@@Base+0xb49c>
  427658:	ldr	x0, [sp, #24]
  42765c:	ldr	w0, [x0]
  427660:	cmp	w0, #0x3
  427664:	b.ne	427678 <_obstack_memory_used@@Base+0xb498>  // b.any
  427668:	ldr	x0, [sp, #24]
  42766c:	ldr	x0, [x0, #8]
  427670:	ldrb	w0, [x0]
  427674:	b	42767c <_obstack_memory_used@@Base+0xb49c>
  427678:	mov	w0, #0x0                   	// #0
  42767c:	str	w0, [sp, #104]
  427680:	ldr	x0, [sp, #16]
  427684:	ldr	w0, [x0]
  427688:	cmp	w0, #0x0
  42768c:	b.ne	42769c <_obstack_memory_used@@Base+0xb4bc>  // b.any
  427690:	ldr	x0, [sp, #16]
  427694:	ldrb	w0, [x0, #8]
  427698:	b	4276c0 <_obstack_memory_used@@Base+0xb4e0>
  42769c:	ldr	x0, [sp, #16]
  4276a0:	ldr	w0, [x0]
  4276a4:	cmp	w0, #0x3
  4276a8:	b.ne	4276bc <_obstack_memory_used@@Base+0xb4dc>  // b.any
  4276ac:	ldr	x0, [sp, #16]
  4276b0:	ldr	x0, [x0, #8]
  4276b4:	ldrb	w0, [x0]
  4276b8:	b	4276c0 <_obstack_memory_used@@Base+0xb4e0>
  4276bc:	mov	w0, #0x0                   	// #0
  4276c0:	str	w0, [sp, #100]
  4276c4:	ldr	x0, [sp, #24]
  4276c8:	ldr	w0, [x0]
  4276cc:	cmp	w0, #0x0
  4276d0:	b.eq	4276e4 <_obstack_memory_used@@Base+0xb504>  // b.none
  4276d4:	ldr	x0, [sp, #24]
  4276d8:	ldr	w0, [x0]
  4276dc:	cmp	w0, #0x3
  4276e0:	b.ne	4276f8 <_obstack_memory_used@@Base+0xb518>  // b.any
  4276e4:	ldr	w0, [sp, #104]
  4276e8:	and	w0, w0, #0xff
  4276ec:	ldr	x1, [sp, #40]
  4276f0:	bl	427480 <_obstack_memory_used@@Base+0xb2a0>
  4276f4:	b	427700 <_obstack_memory_used@@Base+0xb520>
  4276f8:	ldr	x0, [sp, #24]
  4276fc:	ldr	w0, [x0, #8]
  427700:	str	w0, [sp, #96]
  427704:	ldr	x0, [sp, #16]
  427708:	ldr	w0, [x0]
  42770c:	cmp	w0, #0x0
  427710:	b.eq	427724 <_obstack_memory_used@@Base+0xb544>  // b.none
  427714:	ldr	x0, [sp, #16]
  427718:	ldr	w0, [x0]
  42771c:	cmp	w0, #0x3
  427720:	b.ne	427738 <_obstack_memory_used@@Base+0xb558>  // b.any
  427724:	ldr	w0, [sp, #100]
  427728:	and	w0, w0, #0xff
  42772c:	ldr	x1, [sp, #40]
  427730:	bl	427480 <_obstack_memory_used@@Base+0xb2a0>
  427734:	b	427740 <_obstack_memory_used@@Base+0xb560>
  427738:	ldr	x0, [sp, #16]
  42773c:	ldr	w0, [x0, #8]
  427740:	str	w0, [sp, #92]
  427744:	ldr	w0, [sp, #96]
  427748:	cmn	w0, #0x1
  42774c:	b.eq	42775c <_obstack_memory_used@@Base+0xb57c>  // b.none
  427750:	ldr	w0, [sp, #92]
  427754:	cmn	w0, #0x1
  427758:	b.ne	427764 <_obstack_memory_used@@Base+0xb584>  // b.any
  42775c:	mov	w0, #0x3                   	// #3
  427760:	b	427948 <_obstack_memory_used@@Base+0xb768>
  427764:	ldr	x0, [sp, #56]
  427768:	and	x0, x0, #0x10000
  42776c:	cmp	x0, #0x0
  427770:	cset	w0, ne  // ne = any
  427774:	and	w0, w0, #0xff
  427778:	and	x0, x0, #0xff
  42777c:	cmp	x0, #0x0
  427780:	b.eq	4277ac <_obstack_memory_used@@Base+0xb5cc>  // b.none
  427784:	ldr	w1, [sp, #96]
  427788:	ldr	w0, [sp, #92]
  42778c:	cmp	w1, w0
  427790:	cset	w0, hi  // hi = pmore
  427794:	and	w0, w0, #0xff
  427798:	and	x0, x0, #0xff
  42779c:	cmp	x0, #0x0
  4277a0:	b.eq	4277ac <_obstack_memory_used@@Base+0xb5cc>  // b.none
  4277a4:	mov	w0, #0xb                   	// #11
  4277a8:	b	427948 <_obstack_memory_used@@Base+0xb768>
  4277ac:	ldr	x0, [sp, #40]
  4277b0:	cmp	x0, #0x0
  4277b4:	b.eq	4278f4 <_obstack_memory_used@@Base+0xb714>  // b.none
  4277b8:	ldr	x0, [sp, #32]
  4277bc:	ldr	x1, [x0]
  4277c0:	ldr	x0, [sp, #40]
  4277c4:	ldr	x0, [x0, #64]
  4277c8:	cmp	x1, x0
  4277cc:	cset	w0, eq  // eq = none
  4277d0:	and	w0, w0, #0xff
  4277d4:	and	x0, x0, #0xff
  4277d8:	cmp	x0, #0x0
  4277dc:	b.eq	4278a8 <_obstack_memory_used@@Base+0xb6c8>  // b.none
  4277e0:	ldr	x0, [sp, #40]
  4277e4:	ldr	x0, [x0, #64]
  4277e8:	lsl	x0, x0, #1
  4277ec:	add	x0, x0, #0x1
  4277f0:	str	x0, [sp, #80]
  4277f4:	ldr	x0, [sp, #40]
  4277f8:	ldr	x2, [x0, #8]
  4277fc:	ldr	x0, [sp, #80]
  427800:	lsl	x0, x0, #2
  427804:	mov	x1, x0
  427808:	mov	x0, x2
  42780c:	bl	4029e0 <realloc@plt>
  427810:	str	x0, [sp, #72]
  427814:	ldr	x0, [sp, #40]
  427818:	ldr	x2, [x0, #16]
  42781c:	ldr	x0, [sp, #80]
  427820:	lsl	x0, x0, #2
  427824:	mov	x1, x0
  427828:	mov	x0, x2
  42782c:	bl	4029e0 <realloc@plt>
  427830:	str	x0, [sp, #64]
  427834:	ldr	x0, [sp, #72]
  427838:	cmp	x0, #0x0
  42783c:	cset	w0, eq  // eq = none
  427840:	and	w0, w0, #0xff
  427844:	and	x0, x0, #0xff
  427848:	cmp	x0, #0x0
  42784c:	b.ne	42786c <_obstack_memory_used@@Base+0xb68c>  // b.any
  427850:	ldr	x0, [sp, #64]
  427854:	cmp	x0, #0x0
  427858:	cset	w0, eq  // eq = none
  42785c:	and	w0, w0, #0xff
  427860:	and	x0, x0, #0xff
  427864:	cmp	x0, #0x0
  427868:	b.eq	427884 <_obstack_memory_used@@Base+0xb6a4>  // b.none
  42786c:	ldr	x0, [sp, #72]
  427870:	bl	402b60 <free@plt>
  427874:	ldr	x0, [sp, #64]
  427878:	bl	402b60 <free@plt>
  42787c:	mov	w0, #0xc                   	// #12
  427880:	b	427948 <_obstack_memory_used@@Base+0xb768>
  427884:	ldr	x0, [sp, #40]
  427888:	ldr	x1, [sp, #72]
  42788c:	str	x1, [x0, #8]
  427890:	ldr	x0, [sp, #40]
  427894:	ldr	x1, [sp, #64]
  427898:	str	x1, [x0, #16]
  42789c:	ldr	x0, [sp, #32]
  4278a0:	ldr	x1, [sp, #80]
  4278a4:	str	x1, [x0]
  4278a8:	ldr	x0, [sp, #40]
  4278ac:	ldr	x1, [x0, #8]
  4278b0:	ldr	x0, [sp, #40]
  4278b4:	ldr	x0, [x0, #64]
  4278b8:	lsl	x0, x0, #2
  4278bc:	add	x0, x1, x0
  4278c0:	ldr	w1, [sp, #96]
  4278c4:	str	w1, [x0]
  4278c8:	ldr	x0, [sp, #40]
  4278cc:	ldr	x1, [x0, #16]
  4278d0:	ldr	x0, [sp, #40]
  4278d4:	ldr	x0, [x0, #64]
  4278d8:	add	x3, x0, #0x1
  4278dc:	ldr	x2, [sp, #40]
  4278e0:	str	x3, [x2, #64]
  4278e4:	lsl	x0, x0, #2
  4278e8:	add	x0, x1, x0
  4278ec:	ldr	w1, [sp, #92]
  4278f0:	str	w1, [x0]
  4278f4:	str	wzr, [sp, #108]
  4278f8:	b	427938 <_obstack_memory_used@@Base+0xb758>
  4278fc:	ldr	w1, [sp, #96]
  427900:	ldr	w0, [sp, #108]
  427904:	cmp	w1, w0
  427908:	b.hi	42792c <_obstack_memory_used@@Base+0xb74c>  // b.pmore
  42790c:	ldr	w1, [sp, #108]
  427910:	ldr	w0, [sp, #92]
  427914:	cmp	w1, w0
  427918:	b.hi	42792c <_obstack_memory_used@@Base+0xb74c>  // b.pmore
  42791c:	ldr	w0, [sp, #108]
  427920:	mov	x1, x0
  427924:	ldr	x0, [sp, #48]
  427928:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  42792c:	ldr	w0, [sp, #108]
  427930:	add	w0, w0, #0x1
  427934:	str	w0, [sp, #108]
  427938:	ldr	w0, [sp, #108]
  42793c:	cmp	w0, #0xff
  427940:	b.ls	4278fc <_obstack_memory_used@@Base+0xb71c>  // b.plast
  427944:	mov	w0, #0x0                   	// #0
  427948:	ldp	x29, x30, [sp], #112
  42794c:	ret
  427950:	stp	x29, x30, [sp, #-64]!
  427954:	mov	x29, sp
  427958:	str	x0, [sp, #40]
  42795c:	str	x1, [sp, #32]
  427960:	str	x2, [sp, #24]
  427964:	str	x3, [sp, #16]
  427968:	ldr	x0, [sp, #16]
  42796c:	bl	402720 <strlen@plt>
  427970:	str	x0, [sp, #56]
  427974:	ldr	x0, [sp, #56]
  427978:	cmp	x0, #0x1
  42797c:	cset	w0, ne  // ne = any
  427980:	and	w0, w0, #0xff
  427984:	and	x0, x0, #0xff
  427988:	cmp	x0, #0x0
  42798c:	b.eq	427998 <_obstack_memory_used@@Base+0xb7b8>  // b.none
  427990:	mov	w0, #0x3                   	// #3
  427994:	b	4279b4 <_obstack_memory_used@@Base+0xb7d4>
  427998:	ldr	x0, [sp, #16]
  42799c:	ldrb	w0, [x0]
  4279a0:	and	x0, x0, #0xff
  4279a4:	mov	x1, x0
  4279a8:	ldr	x0, [sp, #40]
  4279ac:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  4279b0:	mov	w0, #0x0                   	// #0
  4279b4:	ldp	x29, x30, [sp], #64
  4279b8:	ret
  4279bc:	stp	x29, x30, [sp, #-320]!
  4279c0:	mov	x29, sp
  4279c4:	str	x0, [sp, #56]
  4279c8:	str	x1, [sp, #48]
  4279cc:	str	x2, [sp, #40]
  4279d0:	str	x3, [sp, #32]
  4279d4:	str	x4, [sp, #24]
  4279d8:	str	xzr, [sp, #208]
  4279dc:	str	xzr, [sp, #200]
  4279e0:	str	xzr, [sp, #312]
  4279e4:	str	xzr, [sp, #192]
  4279e8:	str	xzr, [sp, #184]
  4279ec:	strb	wzr, [sp, #311]
  4279f0:	mov	w0, #0x1                   	// #1
  4279f4:	strb	w0, [sp, #291]
  4279f8:	mov	x1, #0x1                   	// #1
  4279fc:	mov	x0, #0x20                  	// #32
  427a00:	bl	4029c0 <calloc@plt>
  427a04:	str	x0, [sp, #264]
  427a08:	mov	x1, #0x1                   	// #1
  427a0c:	mov	x0, #0x50                  	// #80
  427a10:	bl	4029c0 <calloc@plt>
  427a14:	str	x0, [sp, #256]
  427a18:	ldr	x0, [sp, #264]
  427a1c:	cmp	x0, #0x0
  427a20:	cset	w0, eq  // eq = none
  427a24:	and	w0, w0, #0xff
  427a28:	and	x0, x0, #0xff
  427a2c:	cmp	x0, #0x0
  427a30:	b.ne	427a50 <_obstack_memory_used@@Base+0xb870>  // b.any
  427a34:	ldr	x0, [sp, #256]
  427a38:	cmp	x0, #0x0
  427a3c:	cset	w0, eq  // eq = none
  427a40:	and	w0, w0, #0xff
  427a44:	and	x0, x0, #0xff
  427a48:	cmp	x0, #0x0
  427a4c:	b.eq	427a74 <_obstack_memory_used@@Base+0xb894>  // b.none
  427a50:	ldr	x0, [sp, #264]
  427a54:	bl	402b60 <free@plt>
  427a58:	ldr	x0, [sp, #256]
  427a5c:	bl	402b60 <free@plt>
  427a60:	ldr	x0, [sp, #24]
  427a64:	mov	w1, #0xc                   	// #12
  427a68:	str	w1, [x0]
  427a6c:	mov	x0, #0x0                   	// #0
  427a70:	b	4282d8 <_obstack_memory_used@@Base+0xc0f8>
  427a74:	ldr	x2, [sp, #32]
  427a78:	ldr	x1, [sp, #56]
  427a7c:	ldr	x0, [sp, #40]
  427a80:	bl	425a84 <_obstack_memory_used@@Base+0x98a4>
  427a84:	str	w0, [sp, #292]
  427a88:	ldr	x0, [sp, #40]
  427a8c:	ldrb	w0, [x0, #8]
  427a90:	cmp	w0, #0x2
  427a94:	cset	w0, eq  // eq = none
  427a98:	and	w0, w0, #0xff
  427a9c:	and	x0, x0, #0xff
  427aa0:	cmp	x0, #0x0
  427aa4:	b.eq	427ab8 <_obstack_memory_used@@Base+0xb8d8>  // b.none
  427aa8:	ldr	x0, [sp, #24]
  427aac:	mov	w1, #0x2                   	// #2
  427ab0:	str	w1, [x0]
  427ab4:	b	4282c4 <_obstack_memory_used@@Base+0xc0e4>
  427ab8:	ldr	x0, [sp, #40]
  427abc:	ldrb	w0, [x0, #8]
  427ac0:	cmp	w0, #0x19
  427ac4:	b.ne	427b58 <_obstack_memory_used@@Base+0xb978>  // b.any
  427ac8:	ldr	x0, [sp, #256]
  427acc:	ldrb	w1, [x0, #32]
  427ad0:	orr	w1, w1, #0x1
  427ad4:	strb	w1, [x0, #32]
  427ad8:	mov	w0, #0x1                   	// #1
  427adc:	strb	w0, [sp, #311]
  427ae0:	ldr	x0, [sp, #32]
  427ae4:	and	x0, x0, #0x100
  427ae8:	cmp	x0, #0x0
  427aec:	b.eq	427afc <_obstack_memory_used@@Base+0xb91c>  // b.none
  427af0:	mov	x1, #0xa                   	// #10
  427af4:	ldr	x0, [sp, #264]
  427af8:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  427afc:	ldr	x0, [sp, #56]
  427b00:	ldr	x1, [x0, #72]
  427b04:	ldrsw	x0, [sp, #292]
  427b08:	add	x1, x1, x0
  427b0c:	ldr	x0, [sp, #56]
  427b10:	str	x1, [x0, #72]
  427b14:	ldr	x2, [sp, #32]
  427b18:	ldr	x1, [sp, #56]
  427b1c:	ldr	x0, [sp, #40]
  427b20:	bl	425a84 <_obstack_memory_used@@Base+0x98a4>
  427b24:	str	w0, [sp, #292]
  427b28:	ldr	x0, [sp, #40]
  427b2c:	ldrb	w0, [x0, #8]
  427b30:	cmp	w0, #0x2
  427b34:	cset	w0, eq  // eq = none
  427b38:	and	w0, w0, #0xff
  427b3c:	and	x0, x0, #0xff
  427b40:	cmp	x0, #0x0
  427b44:	b.eq	427b58 <_obstack_memory_used@@Base+0xb978>  // b.none
  427b48:	ldr	x0, [sp, #24]
  427b4c:	mov	w1, #0x2                   	// #2
  427b50:	str	w1, [x0]
  427b54:	b	4282c4 <_obstack_memory_used@@Base+0xc0e4>
  427b58:	ldr	x0, [sp, #40]
  427b5c:	ldrb	w0, [x0, #8]
  427b60:	cmp	w0, #0x15
  427b64:	b.ne	427b74 <_obstack_memory_used@@Base+0xb994>  // b.any
  427b68:	ldr	x0, [sp, #40]
  427b6c:	mov	w1, #0x1                   	// #1
  427b70:	strb	w1, [x0, #8]
  427b74:	str	wzr, [sp, #284]
  427b78:	strb	wzr, [sp, #283]
  427b7c:	add	x0, sp, #0x48
  427b80:	str	x0, [sp, #176]
  427b84:	mov	w0, #0x3                   	// #3
  427b88:	str	w0, [sp, #168]
  427b8c:	add	x0, sp, #0xa8
  427b90:	ldrb	w6, [sp, #291]
  427b94:	ldr	x5, [sp, #32]
  427b98:	ldr	x4, [sp, #48]
  427b9c:	ldr	w3, [sp, #292]
  427ba0:	ldr	x2, [sp, #40]
  427ba4:	ldr	x1, [sp, #56]
  427ba8:	bl	4282e0 <_obstack_memory_used@@Base+0xc100>
  427bac:	str	w0, [sp, #252]
  427bb0:	ldr	w0, [sp, #252]
  427bb4:	cmp	w0, #0x0
  427bb8:	cset	w0, ne  // ne = any
  427bbc:	and	w0, w0, #0xff
  427bc0:	and	x0, x0, #0xff
  427bc4:	cmp	x0, #0x0
  427bc8:	b.eq	427bdc <_obstack_memory_used@@Base+0xb9fc>  // b.none
  427bcc:	ldr	x0, [sp, #24]
  427bd0:	ldr	w1, [sp, #252]
  427bd4:	str	w1, [x0]
  427bd8:	b	4282c4 <_obstack_memory_used@@Base+0xc0e4>
  427bdc:	strb	wzr, [sp, #291]
  427be0:	ldr	x2, [sp, #32]
  427be4:	ldr	x1, [sp, #56]
  427be8:	ldr	x0, [sp, #40]
  427bec:	bl	425a84 <_obstack_memory_used@@Base+0x98a4>
  427bf0:	str	w0, [sp, #292]
  427bf4:	ldr	w0, [sp, #168]
  427bf8:	cmp	w0, #0x4
  427bfc:	b.eq	427ce8 <_obstack_memory_used@@Base+0xbb08>  // b.none
  427c00:	ldr	w0, [sp, #168]
  427c04:	cmp	w0, #0x2
  427c08:	b.eq	427ce8 <_obstack_memory_used@@Base+0xbb08>  // b.none
  427c0c:	ldr	x0, [sp, #40]
  427c10:	ldrb	w0, [x0, #8]
  427c14:	cmp	w0, #0x2
  427c18:	cset	w0, eq  // eq = none
  427c1c:	and	w0, w0, #0xff
  427c20:	and	x0, x0, #0xff
  427c24:	cmp	x0, #0x0
  427c28:	b.eq	427c3c <_obstack_memory_used@@Base+0xba5c>  // b.none
  427c2c:	ldr	x0, [sp, #24]
  427c30:	mov	w1, #0x7                   	// #7
  427c34:	str	w1, [x0]
  427c38:	b	4282c4 <_obstack_memory_used@@Base+0xc0e4>
  427c3c:	ldr	x0, [sp, #40]
  427c40:	ldrb	w0, [x0, #8]
  427c44:	cmp	w0, #0x16
  427c48:	b.ne	427ce8 <_obstack_memory_used@@Base+0xbb08>  // b.any
  427c4c:	ldr	x0, [sp, #56]
  427c50:	ldr	x1, [x0, #72]
  427c54:	ldrsw	x0, [sp, #292]
  427c58:	add	x1, x1, x0
  427c5c:	ldr	x0, [sp, #56]
  427c60:	str	x1, [x0, #72]
  427c64:	add	x0, sp, #0x88
  427c68:	ldr	x2, [sp, #32]
  427c6c:	ldr	x1, [sp, #56]
  427c70:	bl	425a84 <_obstack_memory_used@@Base+0x98a4>
  427c74:	str	w0, [sp, #284]
  427c78:	ldrb	w0, [sp, #144]
  427c7c:	cmp	w0, #0x2
  427c80:	cset	w0, eq  // eq = none
  427c84:	and	w0, w0, #0xff
  427c88:	and	x0, x0, #0xff
  427c8c:	cmp	x0, #0x0
  427c90:	b.eq	427ca4 <_obstack_memory_used@@Base+0xbac4>  // b.none
  427c94:	ldr	x0, [sp, #24]
  427c98:	mov	w1, #0x7                   	// #7
  427c9c:	str	w1, [x0]
  427ca0:	b	4282c4 <_obstack_memory_used@@Base+0xc0e4>
  427ca4:	ldrb	w0, [sp, #144]
  427ca8:	cmp	w0, #0x15
  427cac:	b.ne	427ce0 <_obstack_memory_used@@Base+0xbb00>  // b.any
  427cb0:	ldr	x0, [sp, #56]
  427cb4:	ldr	x1, [x0, #72]
  427cb8:	ldr	w0, [sp, #292]
  427cbc:	neg	w0, w0
  427cc0:	sxtw	x0, w0
  427cc4:	add	x1, x1, x0
  427cc8:	ldr	x0, [sp, #56]
  427ccc:	str	x1, [x0, #72]
  427cd0:	ldr	x0, [sp, #40]
  427cd4:	mov	w1, #0x1                   	// #1
  427cd8:	strb	w1, [x0, #8]
  427cdc:	b	427ce8 <_obstack_memory_used@@Base+0xbb08>
  427ce0:	mov	w0, #0x1                   	// #1
  427ce4:	strb	w0, [sp, #283]
  427ce8:	ldrb	w0, [sp, #283]
  427cec:	cmp	w0, #0x0
  427cf0:	b.eq	427de0 <_obstack_memory_used@@Base+0xbc00>  // b.none
  427cf4:	add	x0, sp, #0x68
  427cf8:	str	x0, [sp, #160]
  427cfc:	mov	w0, #0x3                   	// #3
  427d00:	str	w0, [sp, #152]
  427d04:	add	x1, sp, #0x88
  427d08:	add	x0, sp, #0x98
  427d0c:	mov	w6, #0x1                   	// #1
  427d10:	ldr	x5, [sp, #32]
  427d14:	ldr	x4, [sp, #48]
  427d18:	ldr	w3, [sp, #284]
  427d1c:	mov	x2, x1
  427d20:	ldr	x1, [sp, #56]
  427d24:	bl	4282e0 <_obstack_memory_used@@Base+0xc100>
  427d28:	str	w0, [sp, #252]
  427d2c:	ldr	w0, [sp, #252]
  427d30:	cmp	w0, #0x0
  427d34:	cset	w0, ne  // ne = any
  427d38:	and	w0, w0, #0xff
  427d3c:	and	x0, x0, #0xff
  427d40:	cmp	x0, #0x0
  427d44:	b.eq	427d58 <_obstack_memory_used@@Base+0xbb78>  // b.none
  427d48:	ldr	x0, [sp, #24]
  427d4c:	ldr	w1, [sp, #252]
  427d50:	str	w1, [x0]
  427d54:	b	4282c4 <_obstack_memory_used@@Base+0xc0e4>
  427d58:	ldr	x2, [sp, #32]
  427d5c:	ldr	x1, [sp, #56]
  427d60:	ldr	x0, [sp, #40]
  427d64:	bl	425a84 <_obstack_memory_used@@Base+0x98a4>
  427d68:	str	w0, [sp, #292]
  427d6c:	ldr	x0, [sp, #48]
  427d70:	ldr	w0, [x0, #180]
  427d74:	cmp	w0, #0x1
  427d78:	b.le	427d84 <_obstack_memory_used@@Base+0xbba4>
  427d7c:	ldr	x0, [sp, #256]
  427d80:	b	427d88 <_obstack_memory_used@@Base+0xbba8>
  427d84:	mov	x0, #0x0                   	// #0
  427d88:	add	x3, sp, #0x98
  427d8c:	add	x2, sp, #0xa8
  427d90:	add	x1, sp, #0xc8
  427d94:	mov	x5, x3
  427d98:	mov	x4, x2
  427d9c:	mov	x3, x1
  427da0:	mov	x2, x0
  427da4:	ldr	x1, [sp, #264]
  427da8:	ldr	x0, [sp, #32]
  427dac:	bl	4274b4 <_obstack_memory_used@@Base+0xb2d4>
  427db0:	mov	w1, w0
  427db4:	ldr	x0, [sp, #24]
  427db8:	str	w1, [x0]
  427dbc:	ldr	x0, [sp, #24]
  427dc0:	ldr	w0, [x0]
  427dc4:	cmp	w0, #0x0
  427dc8:	cset	w0, ne  // ne = any
  427dcc:	and	w0, w0, #0xff
  427dd0:	and	x0, x0, #0xff
  427dd4:	cmp	x0, #0x0
  427dd8:	b.eq	427ff4 <_obstack_memory_used@@Base+0xbe14>  // b.none
  427ddc:	b	4282c4 <_obstack_memory_used@@Base+0xc0e4>
  427de0:	ldr	w0, [sp, #168]
  427de4:	cmp	w0, #0x4
  427de8:	b.eq	427f88 <_obstack_memory_used@@Base+0xbda8>  // b.none
  427dec:	cmp	w0, #0x4
  427df0:	b.hi	427fe0 <_obstack_memory_used@@Base+0xbe00>  // b.pmore
  427df4:	cmp	w0, #0x3
  427df8:	b.eq	427f3c <_obstack_memory_used@@Base+0xbd5c>  // b.none
  427dfc:	cmp	w0, #0x3
  427e00:	b.hi	427fe0 <_obstack_memory_used@@Base+0xbe00>  // b.pmore
  427e04:	cmp	w0, #0x2
  427e08:	b.eq	427ef0 <_obstack_memory_used@@Base+0xbd10>  // b.none
  427e0c:	cmp	w0, #0x2
  427e10:	b.hi	427fe0 <_obstack_memory_used@@Base+0xbe00>  // b.pmore
  427e14:	cmp	w0, #0x0
  427e18:	b.eq	427e28 <_obstack_memory_used@@Base+0xbc48>  // b.none
  427e1c:	cmp	w0, #0x1
  427e20:	b.eq	427e40 <_obstack_memory_used@@Base+0xbc60>  // b.none
  427e24:	b	427fe0 <_obstack_memory_used@@Base+0xbe00>
  427e28:	ldrb	w0, [sp, #176]
  427e2c:	and	x0, x0, #0xff
  427e30:	mov	x1, x0
  427e34:	ldr	x0, [sp, #264]
  427e38:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  427e3c:	b	427ff4 <_obstack_memory_used@@Base+0xbe14>
  427e40:	ldr	x0, [sp, #256]
  427e44:	ldr	x0, [x0, #40]
  427e48:	ldr	x1, [sp, #312]
  427e4c:	cmp	x1, x0
  427e50:	cset	w0, eq  // eq = none
  427e54:	and	w0, w0, #0xff
  427e58:	and	x0, x0, #0xff
  427e5c:	cmp	x0, #0x0
  427e60:	b.eq	427ec0 <_obstack_memory_used@@Base+0xbce0>  // b.none
  427e64:	ldr	x0, [sp, #256]
  427e68:	ldr	x0, [x0, #40]
  427e6c:	lsl	x0, x0, #1
  427e70:	add	x0, x0, #0x1
  427e74:	str	x0, [sp, #312]
  427e78:	ldr	x0, [sp, #256]
  427e7c:	ldr	x2, [x0]
  427e80:	ldr	x0, [sp, #312]
  427e84:	lsl	x0, x0, #2
  427e88:	mov	x1, x0
  427e8c:	mov	x0, x2
  427e90:	bl	4029e0 <realloc@plt>
  427e94:	str	x0, [sp, #240]
  427e98:	ldr	x0, [sp, #240]
  427e9c:	cmp	x0, #0x0
  427ea0:	cset	w0, eq  // eq = none
  427ea4:	and	w0, w0, #0xff
  427ea8:	and	x0, x0, #0xff
  427eac:	cmp	x0, #0x0
  427eb0:	b.ne	42829c <_obstack_memory_used@@Base+0xc0bc>  // b.any
  427eb4:	ldr	x0, [sp, #256]
  427eb8:	ldr	x1, [sp, #240]
  427ebc:	str	x1, [x0]
  427ec0:	ldr	x0, [sp, #256]
  427ec4:	ldr	x1, [x0]
  427ec8:	ldr	x0, [sp, #256]
  427ecc:	ldr	x0, [x0, #40]
  427ed0:	add	x3, x0, #0x1
  427ed4:	ldr	x2, [sp, #256]
  427ed8:	str	x3, [x2, #40]
  427edc:	lsl	x0, x0, #2
  427ee0:	add	x0, x1, x0
  427ee4:	ldr	w1, [sp, #176]
  427ee8:	str	w1, [x0]
  427eec:	b	427ff4 <_obstack_memory_used@@Base+0xbe14>
  427ef0:	ldr	x1, [sp, #176]
  427ef4:	add	x0, sp, #0xc0
  427ef8:	mov	x3, x1
  427efc:	mov	x2, x0
  427f00:	ldr	x1, [sp, #256]
  427f04:	ldr	x0, [sp, #264]
  427f08:	bl	4285fc <_obstack_memory_used@@Base+0xc41c>
  427f0c:	mov	w1, w0
  427f10:	ldr	x0, [sp, #24]
  427f14:	str	w1, [x0]
  427f18:	ldr	x0, [sp, #24]
  427f1c:	ldr	w0, [x0]
  427f20:	cmp	w0, #0x0
  427f24:	cset	w0, ne  // ne = any
  427f28:	and	w0, w0, #0xff
  427f2c:	and	x0, x0, #0xff
  427f30:	cmp	x0, #0x0
  427f34:	b.eq	427fe0 <_obstack_memory_used@@Base+0xbe00>  // b.none
  427f38:	b	4282c4 <_obstack_memory_used@@Base+0xc0e4>
  427f3c:	ldr	x1, [sp, #176]
  427f40:	add	x0, sp, #0xd0
  427f44:	mov	x3, x1
  427f48:	mov	x2, x0
  427f4c:	ldr	x1, [sp, #256]
  427f50:	ldr	x0, [sp, #264]
  427f54:	bl	427950 <_obstack_memory_used@@Base+0xb770>
  427f58:	mov	w1, w0
  427f5c:	ldr	x0, [sp, #24]
  427f60:	str	w1, [x0]
  427f64:	ldr	x0, [sp, #24]
  427f68:	ldr	w0, [x0]
  427f6c:	cmp	w0, #0x0
  427f70:	cset	w0, ne  // ne = any
  427f74:	and	w0, w0, #0xff
  427f78:	and	x0, x0, #0xff
  427f7c:	cmp	x0, #0x0
  427f80:	b.eq	427fe8 <_obstack_memory_used@@Base+0xbe08>  // b.none
  427f84:	b	4282c4 <_obstack_memory_used@@Base+0xc0e4>
  427f88:	ldr	x0, [sp, #56]
  427f8c:	ldr	x0, [x0, #120]
  427f90:	ldr	x2, [sp, #176]
  427f94:	add	x1, sp, #0xb8
  427f98:	ldr	x5, [sp, #32]
  427f9c:	mov	x4, x2
  427fa0:	mov	x3, x1
  427fa4:	ldr	x2, [sp, #256]
  427fa8:	ldr	x1, [sp, #264]
  427fac:	bl	428660 <_obstack_memory_used@@Base+0xc480>
  427fb0:	mov	w1, w0
  427fb4:	ldr	x0, [sp, #24]
  427fb8:	str	w1, [x0]
  427fbc:	ldr	x0, [sp, #24]
  427fc0:	ldr	w0, [x0]
  427fc4:	cmp	w0, #0x0
  427fc8:	cset	w0, ne  // ne = any
  427fcc:	and	w0, w0, #0xff
  427fd0:	and	x0, x0, #0xff
  427fd4:	cmp	x0, #0x0
  427fd8:	b.eq	427ff0 <_obstack_memory_used@@Base+0xbe10>  // b.none
  427fdc:	b	4282c4 <_obstack_memory_used@@Base+0xc0e4>
  427fe0:	nop
  427fe4:	b	427ff4 <_obstack_memory_used@@Base+0xbe14>
  427fe8:	nop
  427fec:	b	427ff4 <_obstack_memory_used@@Base+0xbe14>
  427ff0:	nop
  427ff4:	ldr	x0, [sp, #40]
  427ff8:	ldrb	w0, [x0, #8]
  427ffc:	cmp	w0, #0x2
  428000:	cset	w0, eq  // eq = none
  428004:	and	w0, w0, #0xff
  428008:	and	x0, x0, #0xff
  42800c:	cmp	x0, #0x0
  428010:	b.eq	428024 <_obstack_memory_used@@Base+0xbe44>  // b.none
  428014:	ldr	x0, [sp, #24]
  428018:	mov	w1, #0x7                   	// #7
  42801c:	str	w1, [x0]
  428020:	b	4282c4 <_obstack_memory_used@@Base+0xc0e4>
  428024:	ldr	x0, [sp, #40]
  428028:	ldrb	w0, [x0, #8]
  42802c:	cmp	w0, #0x15
  428030:	b.ne	427b74 <_obstack_memory_used@@Base+0xb994>  // b.any
  428034:	ldr	x0, [sp, #56]
  428038:	ldr	x1, [x0, #72]
  42803c:	ldrsw	x0, [sp, #292]
  428040:	add	x1, x1, x0
  428044:	ldr	x0, [sp, #56]
  428048:	str	x1, [x0, #72]
  42804c:	ldrb	w0, [sp, #311]
  428050:	cmp	w0, #0x0
  428054:	b.ne	42805c <_obstack_memory_used@@Base+0xbe7c>  // b.any
  428058:	b	428064 <_obstack_memory_used@@Base+0xbe84>
  42805c:	ldr	x0, [sp, #264]
  428060:	bl	41c460 <_obstack_memory_used@@Base+0x280>
  428064:	ldr	x0, [sp, #48]
  428068:	ldr	w0, [x0, #180]
  42806c:	cmp	w0, #0x1
  428070:	b.le	428088 <_obstack_memory_used@@Base+0xbea8>
  428074:	ldr	x0, [sp, #48]
  428078:	ldr	x0, [x0, #120]
  42807c:	mov	x1, x0
  428080:	ldr	x0, [sp, #264]
  428084:	bl	41c540 <_obstack_memory_used@@Base+0x360>
  428088:	ldr	x0, [sp, #256]
  42808c:	ldr	x0, [x0, #40]
  428090:	cmp	x0, #0x0
  428094:	b.ne	428100 <_obstack_memory_used@@Base+0xbf20>  // b.any
  428098:	ldr	x0, [sp, #256]
  42809c:	ldr	x0, [x0, #48]
  4280a0:	cmp	x0, #0x0
  4280a4:	b.ne	428100 <_obstack_memory_used@@Base+0xbf20>  // b.any
  4280a8:	ldr	x0, [sp, #256]
  4280ac:	ldr	x0, [x0, #56]
  4280b0:	cmp	x0, #0x0
  4280b4:	b.ne	428100 <_obstack_memory_used@@Base+0xbf20>  // b.any
  4280b8:	ldr	x0, [sp, #256]
  4280bc:	ldr	x0, [x0, #64]
  4280c0:	cmp	x0, #0x0
  4280c4:	b.ne	428100 <_obstack_memory_used@@Base+0xbf20>  // b.any
  4280c8:	ldr	x0, [sp, #48]
  4280cc:	ldr	w0, [x0, #180]
  4280d0:	cmp	w0, #0x1
  4280d4:	b.le	42823c <_obstack_memory_used@@Base+0xc05c>
  4280d8:	ldr	x0, [sp, #256]
  4280dc:	ldr	x0, [x0, #72]
  4280e0:	cmp	x0, #0x0
  4280e4:	b.ne	428100 <_obstack_memory_used@@Base+0xbf20>  // b.any
  4280e8:	ldr	x0, [sp, #256]
  4280ec:	ldrb	w0, [x0, #32]
  4280f0:	and	w0, w0, #0x1
  4280f4:	and	w0, w0, #0xff
  4280f8:	cmp	w0, #0x0
  4280fc:	b.eq	42823c <_obstack_memory_used@@Base+0xc05c>  // b.none
  428100:	ldr	x0, [sp, #48]
  428104:	ldrb	w1, [x0, #176]
  428108:	orr	w1, w1, #0x2
  42810c:	strb	w1, [x0, #176]
  428110:	mov	w0, #0x6                   	// #6
  428114:	strb	w0, [sp, #224]
  428118:	ldr	x0, [sp, #256]
  42811c:	str	x0, [sp, #216]
  428120:	add	x0, sp, #0xd8
  428124:	mov	x3, x0
  428128:	mov	x2, #0x0                   	// #0
  42812c:	mov	x1, #0x0                   	// #0
  428130:	ldr	x0, [sp, #48]
  428134:	bl	4297a0 <_obstack_memory_used@@Base+0xd5c0>
  428138:	str	x0, [sp, #232]
  42813c:	ldr	x0, [sp, #232]
  428140:	cmp	x0, #0x0
  428144:	cset	w0, eq  // eq = none
  428148:	and	w0, w0, #0xff
  42814c:	and	x0, x0, #0xff
  428150:	cmp	x0, #0x0
  428154:	b.ne	4282a4 <_obstack_memory_used@@Base+0xc0c4>  // b.any
  428158:	str	wzr, [sp, #276]
  42815c:	b	428188 <_obstack_memory_used@@Base+0xbfa8>
  428160:	ldrsw	x0, [sp, #276]
  428164:	lsl	x0, x0, #3
  428168:	ldr	x1, [sp, #264]
  42816c:	add	x0, x1, x0
  428170:	ldr	x0, [x0]
  428174:	cmp	x0, #0x0
  428178:	b.ne	428198 <_obstack_memory_used@@Base+0xbfb8>  // b.any
  42817c:	ldr	w0, [sp, #276]
  428180:	add	w0, w0, #0x1
  428184:	str	w0, [sp, #276]
  428188:	ldr	w0, [sp, #276]
  42818c:	cmp	w0, #0x3
  428190:	b.le	428160 <_obstack_memory_used@@Base+0xbf80>
  428194:	b	42819c <_obstack_memory_used@@Base+0xbfbc>
  428198:	nop
  42819c:	ldr	w0, [sp, #276]
  4281a0:	cmp	w0, #0x3
  4281a4:	b.gt	428228 <_obstack_memory_used@@Base+0xc048>
  4281a8:	mov	w0, #0x3                   	// #3
  4281ac:	strb	w0, [sp, #224]
  4281b0:	ldr	x0, [sp, #264]
  4281b4:	str	x0, [sp, #216]
  4281b8:	add	x0, sp, #0xd8
  4281bc:	mov	x3, x0
  4281c0:	mov	x2, #0x0                   	// #0
  4281c4:	mov	x1, #0x0                   	// #0
  4281c8:	ldr	x0, [sp, #48]
  4281cc:	bl	4297a0 <_obstack_memory_used@@Base+0xd5c0>
  4281d0:	str	x0, [sp, #296]
  4281d4:	ldr	x0, [sp, #296]
  4281d8:	cmp	x0, #0x0
  4281dc:	cset	w0, eq  // eq = none
  4281e0:	and	w0, w0, #0xff
  4281e4:	and	x0, x0, #0xff
  4281e8:	cmp	x0, #0x0
  4281ec:	b.ne	4282ac <_obstack_memory_used@@Base+0xc0cc>  // b.any
  4281f0:	mov	w3, #0xa                   	// #10
  4281f4:	ldr	x2, [sp, #232]
  4281f8:	ldr	x1, [sp, #296]
  4281fc:	ldr	x0, [sp, #48]
  428200:	bl	429758 <_obstack_memory_used@@Base+0xd578>
  428204:	str	x0, [sp, #296]
  428208:	ldr	x0, [sp, #296]
  42820c:	cmp	x0, #0x0
  428210:	cset	w0, eq  // eq = none
  428214:	and	w0, w0, #0xff
  428218:	and	x0, x0, #0xff
  42821c:	cmp	x0, #0x0
  428220:	b.eq	428290 <_obstack_memory_used@@Base+0xc0b0>  // b.none
  428224:	b	4282b8 <_obstack_memory_used@@Base+0xc0d8>
  428228:	ldr	x0, [sp, #264]
  42822c:	bl	402b60 <free@plt>
  428230:	ldr	x0, [sp, #232]
  428234:	str	x0, [sp, #296]
  428238:	b	428290 <_obstack_memory_used@@Base+0xc0b0>
  42823c:	ldr	x0, [sp, #256]
  428240:	bl	429708 <_obstack_memory_used@@Base+0xd528>
  428244:	mov	w0, #0x3                   	// #3
  428248:	strb	w0, [sp, #224]
  42824c:	ldr	x0, [sp, #264]
  428250:	str	x0, [sp, #216]
  428254:	add	x0, sp, #0xd8
  428258:	mov	x3, x0
  42825c:	mov	x2, #0x0                   	// #0
  428260:	mov	x1, #0x0                   	// #0
  428264:	ldr	x0, [sp, #48]
  428268:	bl	4297a0 <_obstack_memory_used@@Base+0xd5c0>
  42826c:	str	x0, [sp, #296]
  428270:	ldr	x0, [sp, #296]
  428274:	cmp	x0, #0x0
  428278:	cset	w0, eq  // eq = none
  42827c:	and	w0, w0, #0xff
  428280:	and	x0, x0, #0xff
  428284:	cmp	x0, #0x0
  428288:	b.ne	4282b4 <_obstack_memory_used@@Base+0xc0d4>  // b.any
  42828c:	b	428294 <_obstack_memory_used@@Base+0xc0b4>
  428290:	nop
  428294:	ldr	x0, [sp, #296]
  428298:	b	4282d8 <_obstack_memory_used@@Base+0xc0f8>
  42829c:	nop
  4282a0:	b	4282b8 <_obstack_memory_used@@Base+0xc0d8>
  4282a4:	nop
  4282a8:	b	4282b8 <_obstack_memory_used@@Base+0xc0d8>
  4282ac:	nop
  4282b0:	b	4282b8 <_obstack_memory_used@@Base+0xc0d8>
  4282b4:	nop
  4282b8:	ldr	x0, [sp, #24]
  4282bc:	mov	w1, #0xc                   	// #12
  4282c0:	str	w1, [x0]
  4282c4:	ldr	x0, [sp, #264]
  4282c8:	bl	402b60 <free@plt>
  4282cc:	ldr	x0, [sp, #256]
  4282d0:	bl	429708 <_obstack_memory_used@@Base+0xd528>
  4282d4:	mov	x0, #0x0                   	// #0
  4282d8:	ldp	x29, x30, [sp], #320
  4282dc:	ret
  4282e0:	stp	x29, x30, [sp, #-96]!
  4282e4:	mov	x29, sp
  4282e8:	str	x0, [sp, #56]
  4282ec:	str	x1, [sp, #48]
  4282f0:	str	x2, [sp, #40]
  4282f4:	str	w3, [sp, #36]
  4282f8:	str	x4, [sp, #24]
  4282fc:	str	x5, [sp, #16]
  428300:	strb	w6, [sp, #35]
  428304:	ldr	x0, [sp, #48]
  428308:	ldr	x0, [x0, #72]
  42830c:	mov	x1, x0
  428310:	ldr	x0, [sp, #48]
  428314:	bl	41c5bc <_obstack_memory_used@@Base+0x3dc>
  428318:	str	w0, [sp, #92]
  42831c:	ldr	w0, [sp, #92]
  428320:	cmp	w0, #0x1
  428324:	b.le	428374 <_obstack_memory_used@@Base+0xc194>
  428328:	ldr	x0, [sp, #56]
  42832c:	mov	w1, #0x1                   	// #1
  428330:	str	w1, [x0]
  428334:	ldr	x0, [sp, #48]
  428338:	ldr	x0, [x0, #72]
  42833c:	mov	x1, x0
  428340:	ldr	x0, [sp, #48]
  428344:	bl	41c650 <_obstack_memory_used@@Base+0x470>
  428348:	mov	w1, w0
  42834c:	ldr	x0, [sp, #56]
  428350:	str	w1, [x0, #8]
  428354:	ldr	x0, [sp, #48]
  428358:	ldr	x1, [x0, #72]
  42835c:	ldrsw	x0, [sp, #92]
  428360:	add	x1, x1, x0
  428364:	ldr	x0, [sp, #48]
  428368:	str	x1, [x0, #72]
  42836c:	mov	w0, #0x0                   	// #0
  428370:	b	428444 <_obstack_memory_used@@Base+0xc264>
  428374:	ldr	x0, [sp, #48]
  428378:	ldr	x1, [x0, #72]
  42837c:	ldrsw	x0, [sp, #36]
  428380:	add	x1, x1, x0
  428384:	ldr	x0, [sp, #48]
  428388:	str	x1, [x0, #72]
  42838c:	ldr	x0, [sp, #40]
  428390:	ldrb	w0, [x0, #8]
  428394:	cmp	w0, #0x1a
  428398:	b.eq	4283bc <_obstack_memory_used@@Base+0xc1dc>  // b.none
  42839c:	ldr	x0, [sp, #40]
  4283a0:	ldrb	w0, [x0, #8]
  4283a4:	cmp	w0, #0x1e
  4283a8:	b.eq	4283bc <_obstack_memory_used@@Base+0xc1dc>  // b.none
  4283ac:	ldr	x0, [sp, #40]
  4283b0:	ldrb	w0, [x0, #8]
  4283b4:	cmp	w0, #0x1c
  4283b8:	b.ne	4283d0 <_obstack_memory_used@@Base+0xc1f0>  // b.any
  4283bc:	ldr	x2, [sp, #40]
  4283c0:	ldr	x1, [sp, #48]
  4283c4:	ldr	x0, [sp, #56]
  4283c8:	bl	42844c <_obstack_memory_used@@Base+0xc26c>
  4283cc:	b	428444 <_obstack_memory_used@@Base+0xc264>
  4283d0:	ldr	x0, [sp, #40]
  4283d4:	ldrb	w0, [x0, #8]
  4283d8:	cmp	w0, #0x16
  4283dc:	cset	w0, eq  // eq = none
  4283e0:	and	w0, w0, #0xff
  4283e4:	and	x0, x0, #0xff
  4283e8:	cmp	x0, #0x0
  4283ec:	b.eq	428428 <_obstack_memory_used@@Base+0xc248>  // b.none
  4283f0:	ldrb	w0, [sp, #35]
  4283f4:	eor	w0, w0, #0x1
  4283f8:	and	w0, w0, #0xff
  4283fc:	cmp	w0, #0x0
  428400:	b.eq	428428 <_obstack_memory_used@@Base+0xc248>  // b.none
  428404:	add	x0, sp, #0x48
  428408:	ldr	x2, [sp, #16]
  42840c:	ldr	x1, [sp, #48]
  428410:	bl	425a84 <_obstack_memory_used@@Base+0x98a4>
  428414:	ldrb	w0, [sp, #80]
  428418:	cmp	w0, #0x15
  42841c:	b.eq	428428 <_obstack_memory_used@@Base+0xc248>  // b.none
  428420:	mov	w0, #0xb                   	// #11
  428424:	b	428444 <_obstack_memory_used@@Base+0xc264>
  428428:	ldr	x0, [sp, #56]
  42842c:	str	wzr, [x0]
  428430:	ldr	x0, [sp, #40]
  428434:	ldrb	w1, [x0]
  428438:	ldr	x0, [sp, #56]
  42843c:	strb	w1, [x0, #8]
  428440:	mov	w0, #0x0                   	// #0
  428444:	ldp	x29, x30, [sp], #96
  428448:	ret
  42844c:	stp	x29, x30, [sp, #-64]!
  428450:	mov	x29, sp
  428454:	str	x0, [sp, #40]
  428458:	str	x1, [sp, #32]
  42845c:	str	x2, [sp, #24]
  428460:	ldr	x0, [sp, #24]
  428464:	ldrb	w0, [x0]
  428468:	strb	w0, [sp, #55]
  42846c:	str	wzr, [sp, #56]
  428470:	ldr	x0, [sp, #32]
  428474:	ldr	x1, [x0, #104]
  428478:	ldr	x0, [sp, #32]
  42847c:	ldr	x0, [x0, #72]
  428480:	cmp	x1, x0
  428484:	b.gt	428490 <_obstack_memory_used@@Base+0xc2b0>
  428488:	mov	w0, #0x7                   	// #7
  42848c:	b	4285f4 <_obstack_memory_used@@Base+0xc414>
  428490:	ldr	w0, [sp, #56]
  428494:	cmp	w0, #0x1f
  428498:	b.le	4284a4 <_obstack_memory_used@@Base+0xc2c4>
  42849c:	mov	w0, #0x7                   	// #7
  4284a0:	b	4285f4 <_obstack_memory_used@@Base+0xc414>
  4284a4:	ldr	x0, [sp, #24]
  4284a8:	ldrb	w0, [x0, #8]
  4284ac:	cmp	w0, #0x1e
  4284b0:	b.ne	4284c4 <_obstack_memory_used@@Base+0xc2e4>  // b.any
  4284b4:	ldr	x0, [sp, #32]
  4284b8:	bl	41ec2c <_obstack_memory_used@@Base+0x2a4c>
  4284bc:	strb	w0, [sp, #63]
  4284c0:	b	4284ec <_obstack_memory_used@@Base+0xc30c>
  4284c4:	ldr	x0, [sp, #32]
  4284c8:	ldr	x1, [x0, #8]
  4284cc:	ldr	x0, [sp, #32]
  4284d0:	ldr	x0, [x0, #72]
  4284d4:	add	x3, x0, #0x1
  4284d8:	ldr	x2, [sp, #32]
  4284dc:	str	x3, [x2, #72]
  4284e0:	add	x0, x1, x0
  4284e4:	ldrb	w0, [x0]
  4284e8:	strb	w0, [sp, #63]
  4284ec:	ldr	x0, [sp, #32]
  4284f0:	ldr	x1, [x0, #104]
  4284f4:	ldr	x0, [sp, #32]
  4284f8:	ldr	x0, [x0, #72]
  4284fc:	cmp	x1, x0
  428500:	b.gt	42850c <_obstack_memory_used@@Base+0xc32c>
  428504:	mov	w0, #0x7                   	// #7
  428508:	b	4285f4 <_obstack_memory_used@@Base+0xc414>
  42850c:	ldrb	w1, [sp, #63]
  428510:	ldrb	w0, [sp, #55]
  428514:	cmp	w1, w0
  428518:	b.ne	42853c <_obstack_memory_used@@Base+0xc35c>  // b.any
  42851c:	ldr	x0, [sp, #32]
  428520:	ldr	x0, [x0, #8]
  428524:	ldr	x1, [sp, #32]
  428528:	ldr	x1, [x1, #72]
  42852c:	add	x0, x0, x1
  428530:	ldrb	w0, [x0]
  428534:	cmp	w0, #0x5d
  428538:	b.eq	428564 <_obstack_memory_used@@Base+0xc384>  // b.none
  42853c:	ldr	x0, [sp, #40]
  428540:	ldr	x1, [x0, #8]
  428544:	ldrsw	x0, [sp, #56]
  428548:	add	x0, x1, x0
  42854c:	ldrb	w1, [sp, #63]
  428550:	strb	w1, [x0]
  428554:	ldr	w0, [sp, #56]
  428558:	add	w0, w0, #0x1
  42855c:	str	w0, [sp, #56]
  428560:	b	428490 <_obstack_memory_used@@Base+0xc2b0>
  428564:	nop
  428568:	ldr	x0, [sp, #32]
  42856c:	ldr	x0, [x0, #72]
  428570:	add	x1, x0, #0x1
  428574:	ldr	x0, [sp, #32]
  428578:	str	x1, [x0, #72]
  42857c:	ldr	x0, [sp, #40]
  428580:	ldr	x1, [x0, #8]
  428584:	ldrsw	x0, [sp, #56]
  428588:	add	x0, x1, x0
  42858c:	strb	wzr, [x0]
  428590:	ldr	x0, [sp, #24]
  428594:	ldrb	w0, [x0, #8]
  428598:	cmp	w0, #0x1e
  42859c:	b.eq	4285dc <_obstack_memory_used@@Base+0xc3fc>  // b.none
  4285a0:	cmp	w0, #0x1e
  4285a4:	b.gt	4285ec <_obstack_memory_used@@Base+0xc40c>
  4285a8:	cmp	w0, #0x1a
  4285ac:	b.eq	4285bc <_obstack_memory_used@@Base+0xc3dc>  // b.none
  4285b0:	cmp	w0, #0x1c
  4285b4:	b.eq	4285cc <_obstack_memory_used@@Base+0xc3ec>  // b.none
  4285b8:	b	4285ec <_obstack_memory_used@@Base+0xc40c>
  4285bc:	ldr	x0, [sp, #40]
  4285c0:	mov	w1, #0x3                   	// #3
  4285c4:	str	w1, [x0]
  4285c8:	b	4285f0 <_obstack_memory_used@@Base+0xc410>
  4285cc:	ldr	x0, [sp, #40]
  4285d0:	mov	w1, #0x2                   	// #2
  4285d4:	str	w1, [x0]
  4285d8:	b	4285f0 <_obstack_memory_used@@Base+0xc410>
  4285dc:	ldr	x0, [sp, #40]
  4285e0:	mov	w1, #0x4                   	// #4
  4285e4:	str	w1, [x0]
  4285e8:	b	4285f0 <_obstack_memory_used@@Base+0xc410>
  4285ec:	nop
  4285f0:	mov	w0, #0x0                   	// #0
  4285f4:	ldp	x29, x30, [sp], #64
  4285f8:	ret
  4285fc:	stp	x29, x30, [sp, #-48]!
  428600:	mov	x29, sp
  428604:	str	x0, [sp, #40]
  428608:	str	x1, [sp, #32]
  42860c:	str	x2, [sp, #24]
  428610:	str	x3, [sp, #16]
  428614:	ldr	x0, [sp, #16]
  428618:	bl	402720 <strlen@plt>
  42861c:	cmp	x0, #0x1
  428620:	cset	w0, ne  // ne = any
  428624:	and	w0, w0, #0xff
  428628:	and	x0, x0, #0xff
  42862c:	cmp	x0, #0x0
  428630:	b.eq	42863c <_obstack_memory_used@@Base+0xc45c>  // b.none
  428634:	mov	w0, #0x3                   	// #3
  428638:	b	428658 <_obstack_memory_used@@Base+0xc478>
  42863c:	ldr	x0, [sp, #16]
  428640:	ldrb	w0, [x0]
  428644:	and	x0, x0, #0xff
  428648:	mov	x1, x0
  42864c:	ldr	x0, [sp, #40]
  428650:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  428654:	mov	w0, #0x0                   	// #0
  428658:	ldp	x29, x30, [sp], #48
  42865c:	ret
  428660:	stp	x29, x30, [sp, #-112]!
  428664:	mov	x29, sp
  428668:	str	x19, [sp, #16]
  42866c:	str	x0, [sp, #72]
  428670:	str	x1, [sp, #64]
  428674:	str	x2, [sp, #56]
  428678:	str	x3, [sp, #48]
  42867c:	str	x4, [sp, #40]
  428680:	str	x5, [sp, #32]
  428684:	ldr	x0, [sp, #40]
  428688:	str	x0, [sp, #96]
  42868c:	ldr	x0, [sp, #32]
  428690:	and	x0, x0, #0x400000
  428694:	cmp	x0, #0x0
  428698:	b.eq	4286d8 <_obstack_memory_used@@Base+0xc4f8>  // b.none
  42869c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  4286a0:	add	x1, x0, #0x570
  4286a4:	ldr	x0, [sp, #96]
  4286a8:	bl	402b30 <strcmp@plt>
  4286ac:	cmp	w0, #0x0
  4286b0:	b.eq	4286cc <_obstack_memory_used@@Base+0xc4ec>  // b.none
  4286b4:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  4286b8:	add	x1, x0, #0x578
  4286bc:	ldr	x0, [sp, #96]
  4286c0:	bl	402b30 <strcmp@plt>
  4286c4:	cmp	w0, #0x0
  4286c8:	b.ne	4286d8 <_obstack_memory_used@@Base+0xc4f8>  // b.any
  4286cc:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  4286d0:	add	x0, x0, #0x580
  4286d4:	str	x0, [sp, #96]
  4286d8:	ldr	x0, [sp, #48]
  4286dc:	ldr	x1, [x0]
  4286e0:	ldr	x0, [sp, #56]
  4286e4:	ldr	x0, [x0, #72]
  4286e8:	cmp	x1, x0
  4286ec:	cset	w0, eq  // eq = none
  4286f0:	and	w0, w0, #0xff
  4286f4:	and	x0, x0, #0xff
  4286f8:	cmp	x0, #0x0
  4286fc:	b.eq	428770 <_obstack_memory_used@@Base+0xc590>  // b.none
  428700:	ldr	x0, [sp, #56]
  428704:	ldr	x0, [x0, #72]
  428708:	lsl	x0, x0, #1
  42870c:	add	x0, x0, #0x1
  428710:	str	x0, [sp, #88]
  428714:	ldr	x0, [sp, #56]
  428718:	ldr	x2, [x0, #24]
  42871c:	ldr	x0, [sp, #88]
  428720:	lsl	x0, x0, #3
  428724:	mov	x1, x0
  428728:	mov	x0, x2
  42872c:	bl	4029e0 <realloc@plt>
  428730:	str	x0, [sp, #80]
  428734:	ldr	x0, [sp, #80]
  428738:	cmp	x0, #0x0
  42873c:	cset	w0, eq  // eq = none
  428740:	and	w0, w0, #0xff
  428744:	and	x0, x0, #0xff
  428748:	cmp	x0, #0x0
  42874c:	b.eq	428758 <_obstack_memory_used@@Base+0xc578>  // b.none
  428750:	mov	w0, #0xc                   	// #12
  428754:	b	42931c <_obstack_memory_used@@Base+0xd13c>
  428758:	ldr	x0, [sp, #56]
  42875c:	ldr	x1, [sp, #80]
  428760:	str	x1, [x0, #24]
  428764:	ldr	x0, [sp, #48]
  428768:	ldr	x1, [sp, #88]
  42876c:	str	x1, [x0]
  428770:	ldr	x0, [sp, #56]
  428774:	ldr	x1, [x0, #24]
  428778:	ldr	x0, [sp, #56]
  42877c:	ldr	x0, [x0, #72]
  428780:	add	x3, x0, #0x1
  428784:	ldr	x2, [sp, #56]
  428788:	str	x3, [x2, #72]
  42878c:	lsl	x0, x0, #3
  428790:	add	x19, x1, x0
  428794:	ldr	x0, [sp, #96]
  428798:	bl	402770 <wctype@plt>
  42879c:	str	x0, [x19]
  4287a0:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  4287a4:	add	x1, x0, #0x558
  4287a8:	ldr	x0, [sp, #96]
  4287ac:	bl	402b30 <strcmp@plt>
  4287b0:	cmp	w0, #0x0
  4287b4:	b.ne	428894 <_obstack_memory_used@@Base+0xc6b4>  // b.any
  4287b8:	ldr	x0, [sp, #72]
  4287bc:	cmp	x0, #0x0
  4287c0:	cset	w0, ne  // ne = any
  4287c4:	and	w0, w0, #0xff
  4287c8:	and	x0, x0, #0xff
  4287cc:	cmp	x0, #0x0
  4287d0:	b.eq	42883c <_obstack_memory_used@@Base+0xc65c>  // b.none
  4287d4:	str	wzr, [sp, #108]
  4287d8:	b	42882c <_obstack_memory_used@@Base+0xc64c>
  4287dc:	bl	402b40 <__ctype_b_loc@plt>
  4287e0:	ldr	x1, [x0]
  4287e4:	ldrsw	x0, [sp, #108]
  4287e8:	lsl	x0, x0, #1
  4287ec:	add	x0, x1, x0
  4287f0:	ldrh	w0, [x0]
  4287f4:	and	w0, w0, #0x8
  4287f8:	cmp	w0, #0x0
  4287fc:	b.eq	428820 <_obstack_memory_used@@Base+0xc640>  // b.none
  428800:	ldrsw	x0, [sp, #108]
  428804:	ldr	x1, [sp, #72]
  428808:	add	x0, x1, x0
  42880c:	ldrb	w0, [x0]
  428810:	and	x0, x0, #0xff
  428814:	mov	x1, x0
  428818:	ldr	x0, [sp, #64]
  42881c:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  428820:	ldr	w0, [sp, #108]
  428824:	add	w0, w0, #0x1
  428828:	str	w0, [sp, #108]
  42882c:	ldr	w0, [sp, #108]
  428830:	cmp	w0, #0xff
  428834:	b.le	4287dc <_obstack_memory_used@@Base+0xc5fc>
  428838:	b	429318 <_obstack_memory_used@@Base+0xd138>
  42883c:	str	wzr, [sp, #108]
  428840:	b	428884 <_obstack_memory_used@@Base+0xc6a4>
  428844:	bl	402b40 <__ctype_b_loc@plt>
  428848:	ldr	x1, [x0]
  42884c:	ldrsw	x0, [sp, #108]
  428850:	lsl	x0, x0, #1
  428854:	add	x0, x1, x0
  428858:	ldrh	w0, [x0]
  42885c:	and	w0, w0, #0x8
  428860:	cmp	w0, #0x0
  428864:	b.eq	428878 <_obstack_memory_used@@Base+0xc698>  // b.none
  428868:	ldrsw	x0, [sp, #108]
  42886c:	mov	x1, x0
  428870:	ldr	x0, [sp, #64]
  428874:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  428878:	ldr	w0, [sp, #108]
  42887c:	add	w0, w0, #0x1
  428880:	str	w0, [sp, #108]
  428884:	ldr	w0, [sp, #108]
  428888:	cmp	w0, #0xff
  42888c:	b.le	428844 <_obstack_memory_used@@Base+0xc664>
  428890:	b	429318 <_obstack_memory_used@@Base+0xd138>
  428894:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  428898:	add	x1, x0, #0x588
  42889c:	ldr	x0, [sp, #96]
  4288a0:	bl	402b30 <strcmp@plt>
  4288a4:	cmp	w0, #0x0
  4288a8:	b.ne	428988 <_obstack_memory_used@@Base+0xc7a8>  // b.any
  4288ac:	ldr	x0, [sp, #72]
  4288b0:	cmp	x0, #0x0
  4288b4:	cset	w0, ne  // ne = any
  4288b8:	and	w0, w0, #0xff
  4288bc:	and	x0, x0, #0xff
  4288c0:	cmp	x0, #0x0
  4288c4:	b.eq	428930 <_obstack_memory_used@@Base+0xc750>  // b.none
  4288c8:	str	wzr, [sp, #108]
  4288cc:	b	428920 <_obstack_memory_used@@Base+0xc740>
  4288d0:	bl	402b40 <__ctype_b_loc@plt>
  4288d4:	ldr	x1, [x0]
  4288d8:	ldrsw	x0, [sp, #108]
  4288dc:	lsl	x0, x0, #1
  4288e0:	add	x0, x1, x0
  4288e4:	ldrh	w0, [x0]
  4288e8:	and	w0, w0, #0x2
  4288ec:	cmp	w0, #0x0
  4288f0:	b.eq	428914 <_obstack_memory_used@@Base+0xc734>  // b.none
  4288f4:	ldrsw	x0, [sp, #108]
  4288f8:	ldr	x1, [sp, #72]
  4288fc:	add	x0, x1, x0
  428900:	ldrb	w0, [x0]
  428904:	and	x0, x0, #0xff
  428908:	mov	x1, x0
  42890c:	ldr	x0, [sp, #64]
  428910:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  428914:	ldr	w0, [sp, #108]
  428918:	add	w0, w0, #0x1
  42891c:	str	w0, [sp, #108]
  428920:	ldr	w0, [sp, #108]
  428924:	cmp	w0, #0xff
  428928:	b.le	4288d0 <_obstack_memory_used@@Base+0xc6f0>
  42892c:	b	429318 <_obstack_memory_used@@Base+0xd138>
  428930:	str	wzr, [sp, #108]
  428934:	b	428978 <_obstack_memory_used@@Base+0xc798>
  428938:	bl	402b40 <__ctype_b_loc@plt>
  42893c:	ldr	x1, [x0]
  428940:	ldrsw	x0, [sp, #108]
  428944:	lsl	x0, x0, #1
  428948:	add	x0, x1, x0
  42894c:	ldrh	w0, [x0]
  428950:	and	w0, w0, #0x2
  428954:	cmp	w0, #0x0
  428958:	b.eq	42896c <_obstack_memory_used@@Base+0xc78c>  // b.none
  42895c:	ldrsw	x0, [sp, #108]
  428960:	mov	x1, x0
  428964:	ldr	x0, [sp, #64]
  428968:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  42896c:	ldr	w0, [sp, #108]
  428970:	add	w0, w0, #0x1
  428974:	str	w0, [sp, #108]
  428978:	ldr	w0, [sp, #108]
  42897c:	cmp	w0, #0xff
  428980:	b.le	428938 <_obstack_memory_used@@Base+0xc758>
  428984:	b	429318 <_obstack_memory_used@@Base+0xd138>
  428988:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  42898c:	add	x1, x0, #0x578
  428990:	ldr	x0, [sp, #96]
  428994:	bl	402b30 <strcmp@plt>
  428998:	cmp	w0, #0x0
  42899c:	b.ne	428a7c <_obstack_memory_used@@Base+0xc89c>  // b.any
  4289a0:	ldr	x0, [sp, #72]
  4289a4:	cmp	x0, #0x0
  4289a8:	cset	w0, ne  // ne = any
  4289ac:	and	w0, w0, #0xff
  4289b0:	and	x0, x0, #0xff
  4289b4:	cmp	x0, #0x0
  4289b8:	b.eq	428a24 <_obstack_memory_used@@Base+0xc844>  // b.none
  4289bc:	str	wzr, [sp, #108]
  4289c0:	b	428a14 <_obstack_memory_used@@Base+0xc834>
  4289c4:	bl	402b40 <__ctype_b_loc@plt>
  4289c8:	ldr	x1, [x0]
  4289cc:	ldrsw	x0, [sp, #108]
  4289d0:	lsl	x0, x0, #1
  4289d4:	add	x0, x1, x0
  4289d8:	ldrh	w0, [x0]
  4289dc:	and	w0, w0, #0x200
  4289e0:	cmp	w0, #0x0
  4289e4:	b.eq	428a08 <_obstack_memory_used@@Base+0xc828>  // b.none
  4289e8:	ldrsw	x0, [sp, #108]
  4289ec:	ldr	x1, [sp, #72]
  4289f0:	add	x0, x1, x0
  4289f4:	ldrb	w0, [x0]
  4289f8:	and	x0, x0, #0xff
  4289fc:	mov	x1, x0
  428a00:	ldr	x0, [sp, #64]
  428a04:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  428a08:	ldr	w0, [sp, #108]
  428a0c:	add	w0, w0, #0x1
  428a10:	str	w0, [sp, #108]
  428a14:	ldr	w0, [sp, #108]
  428a18:	cmp	w0, #0xff
  428a1c:	b.le	4289c4 <_obstack_memory_used@@Base+0xc7e4>
  428a20:	b	429318 <_obstack_memory_used@@Base+0xd138>
  428a24:	str	wzr, [sp, #108]
  428a28:	b	428a6c <_obstack_memory_used@@Base+0xc88c>
  428a2c:	bl	402b40 <__ctype_b_loc@plt>
  428a30:	ldr	x1, [x0]
  428a34:	ldrsw	x0, [sp, #108]
  428a38:	lsl	x0, x0, #1
  428a3c:	add	x0, x1, x0
  428a40:	ldrh	w0, [x0]
  428a44:	and	w0, w0, #0x200
  428a48:	cmp	w0, #0x0
  428a4c:	b.eq	428a60 <_obstack_memory_used@@Base+0xc880>  // b.none
  428a50:	ldrsw	x0, [sp, #108]
  428a54:	mov	x1, x0
  428a58:	ldr	x0, [sp, #64]
  428a5c:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  428a60:	ldr	w0, [sp, #108]
  428a64:	add	w0, w0, #0x1
  428a68:	str	w0, [sp, #108]
  428a6c:	ldr	w0, [sp, #108]
  428a70:	cmp	w0, #0xff
  428a74:	b.le	428a2c <_obstack_memory_used@@Base+0xc84c>
  428a78:	b	429318 <_obstack_memory_used@@Base+0xd138>
  428a7c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  428a80:	add	x1, x0, #0x568
  428a84:	ldr	x0, [sp, #96]
  428a88:	bl	402b30 <strcmp@plt>
  428a8c:	cmp	w0, #0x0
  428a90:	b.ne	428b70 <_obstack_memory_used@@Base+0xc990>  // b.any
  428a94:	ldr	x0, [sp, #72]
  428a98:	cmp	x0, #0x0
  428a9c:	cset	w0, ne  // ne = any
  428aa0:	and	w0, w0, #0xff
  428aa4:	and	x0, x0, #0xff
  428aa8:	cmp	x0, #0x0
  428aac:	b.eq	428b18 <_obstack_memory_used@@Base+0xc938>  // b.none
  428ab0:	str	wzr, [sp, #108]
  428ab4:	b	428b08 <_obstack_memory_used@@Base+0xc928>
  428ab8:	bl	402b40 <__ctype_b_loc@plt>
  428abc:	ldr	x1, [x0]
  428ac0:	ldrsw	x0, [sp, #108]
  428ac4:	lsl	x0, x0, #1
  428ac8:	add	x0, x1, x0
  428acc:	ldrh	w0, [x0]
  428ad0:	and	w0, w0, #0x2000
  428ad4:	cmp	w0, #0x0
  428ad8:	b.eq	428afc <_obstack_memory_used@@Base+0xc91c>  // b.none
  428adc:	ldrsw	x0, [sp, #108]
  428ae0:	ldr	x1, [sp, #72]
  428ae4:	add	x0, x1, x0
  428ae8:	ldrb	w0, [x0]
  428aec:	and	x0, x0, #0xff
  428af0:	mov	x1, x0
  428af4:	ldr	x0, [sp, #64]
  428af8:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  428afc:	ldr	w0, [sp, #108]
  428b00:	add	w0, w0, #0x1
  428b04:	str	w0, [sp, #108]
  428b08:	ldr	w0, [sp, #108]
  428b0c:	cmp	w0, #0xff
  428b10:	b.le	428ab8 <_obstack_memory_used@@Base+0xc8d8>
  428b14:	b	429318 <_obstack_memory_used@@Base+0xd138>
  428b18:	str	wzr, [sp, #108]
  428b1c:	b	428b60 <_obstack_memory_used@@Base+0xc980>
  428b20:	bl	402b40 <__ctype_b_loc@plt>
  428b24:	ldr	x1, [x0]
  428b28:	ldrsw	x0, [sp, #108]
  428b2c:	lsl	x0, x0, #1
  428b30:	add	x0, x1, x0
  428b34:	ldrh	w0, [x0]
  428b38:	and	w0, w0, #0x2000
  428b3c:	cmp	w0, #0x0
  428b40:	b.eq	428b54 <_obstack_memory_used@@Base+0xc974>  // b.none
  428b44:	ldrsw	x0, [sp, #108]
  428b48:	mov	x1, x0
  428b4c:	ldr	x0, [sp, #64]
  428b50:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  428b54:	ldr	w0, [sp, #108]
  428b58:	add	w0, w0, #0x1
  428b5c:	str	w0, [sp, #108]
  428b60:	ldr	w0, [sp, #108]
  428b64:	cmp	w0, #0xff
  428b68:	b.le	428b20 <_obstack_memory_used@@Base+0xc940>
  428b6c:	b	429318 <_obstack_memory_used@@Base+0xd138>
  428b70:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  428b74:	add	x1, x0, #0x580
  428b78:	ldr	x0, [sp, #96]
  428b7c:	bl	402b30 <strcmp@plt>
  428b80:	cmp	w0, #0x0
  428b84:	b.ne	428c64 <_obstack_memory_used@@Base+0xca84>  // b.any
  428b88:	ldr	x0, [sp, #72]
  428b8c:	cmp	x0, #0x0
  428b90:	cset	w0, ne  // ne = any
  428b94:	and	w0, w0, #0xff
  428b98:	and	x0, x0, #0xff
  428b9c:	cmp	x0, #0x0
  428ba0:	b.eq	428c0c <_obstack_memory_used@@Base+0xca2c>  // b.none
  428ba4:	str	wzr, [sp, #108]
  428ba8:	b	428bfc <_obstack_memory_used@@Base+0xca1c>
  428bac:	bl	402b40 <__ctype_b_loc@plt>
  428bb0:	ldr	x1, [x0]
  428bb4:	ldrsw	x0, [sp, #108]
  428bb8:	lsl	x0, x0, #1
  428bbc:	add	x0, x1, x0
  428bc0:	ldrh	w0, [x0]
  428bc4:	and	w0, w0, #0x400
  428bc8:	cmp	w0, #0x0
  428bcc:	b.eq	428bf0 <_obstack_memory_used@@Base+0xca10>  // b.none
  428bd0:	ldrsw	x0, [sp, #108]
  428bd4:	ldr	x1, [sp, #72]
  428bd8:	add	x0, x1, x0
  428bdc:	ldrb	w0, [x0]
  428be0:	and	x0, x0, #0xff
  428be4:	mov	x1, x0
  428be8:	ldr	x0, [sp, #64]
  428bec:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  428bf0:	ldr	w0, [sp, #108]
  428bf4:	add	w0, w0, #0x1
  428bf8:	str	w0, [sp, #108]
  428bfc:	ldr	w0, [sp, #108]
  428c00:	cmp	w0, #0xff
  428c04:	b.le	428bac <_obstack_memory_used@@Base+0xc9cc>
  428c08:	b	429318 <_obstack_memory_used@@Base+0xd138>
  428c0c:	str	wzr, [sp, #108]
  428c10:	b	428c54 <_obstack_memory_used@@Base+0xca74>
  428c14:	bl	402b40 <__ctype_b_loc@plt>
  428c18:	ldr	x1, [x0]
  428c1c:	ldrsw	x0, [sp, #108]
  428c20:	lsl	x0, x0, #1
  428c24:	add	x0, x1, x0
  428c28:	ldrh	w0, [x0]
  428c2c:	and	w0, w0, #0x400
  428c30:	cmp	w0, #0x0
  428c34:	b.eq	428c48 <_obstack_memory_used@@Base+0xca68>  // b.none
  428c38:	ldrsw	x0, [sp, #108]
  428c3c:	mov	x1, x0
  428c40:	ldr	x0, [sp, #64]
  428c44:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  428c48:	ldr	w0, [sp, #108]
  428c4c:	add	w0, w0, #0x1
  428c50:	str	w0, [sp, #108]
  428c54:	ldr	w0, [sp, #108]
  428c58:	cmp	w0, #0xff
  428c5c:	b.le	428c14 <_obstack_memory_used@@Base+0xca34>
  428c60:	b	429318 <_obstack_memory_used@@Base+0xd138>
  428c64:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  428c68:	add	x1, x0, #0x590
  428c6c:	ldr	x0, [sp, #96]
  428c70:	bl	402b30 <strcmp@plt>
  428c74:	cmp	w0, #0x0
  428c78:	b.ne	428d58 <_obstack_memory_used@@Base+0xcb78>  // b.any
  428c7c:	ldr	x0, [sp, #72]
  428c80:	cmp	x0, #0x0
  428c84:	cset	w0, ne  // ne = any
  428c88:	and	w0, w0, #0xff
  428c8c:	and	x0, x0, #0xff
  428c90:	cmp	x0, #0x0
  428c94:	b.eq	428d00 <_obstack_memory_used@@Base+0xcb20>  // b.none
  428c98:	str	wzr, [sp, #108]
  428c9c:	b	428cf0 <_obstack_memory_used@@Base+0xcb10>
  428ca0:	bl	402b40 <__ctype_b_loc@plt>
  428ca4:	ldr	x1, [x0]
  428ca8:	ldrsw	x0, [sp, #108]
  428cac:	lsl	x0, x0, #1
  428cb0:	add	x0, x1, x0
  428cb4:	ldrh	w0, [x0]
  428cb8:	and	w0, w0, #0x800
  428cbc:	cmp	w0, #0x0
  428cc0:	b.eq	428ce4 <_obstack_memory_used@@Base+0xcb04>  // b.none
  428cc4:	ldrsw	x0, [sp, #108]
  428cc8:	ldr	x1, [sp, #72]
  428ccc:	add	x0, x1, x0
  428cd0:	ldrb	w0, [x0]
  428cd4:	and	x0, x0, #0xff
  428cd8:	mov	x1, x0
  428cdc:	ldr	x0, [sp, #64]
  428ce0:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  428ce4:	ldr	w0, [sp, #108]
  428ce8:	add	w0, w0, #0x1
  428cec:	str	w0, [sp, #108]
  428cf0:	ldr	w0, [sp, #108]
  428cf4:	cmp	w0, #0xff
  428cf8:	b.le	428ca0 <_obstack_memory_used@@Base+0xcac0>
  428cfc:	b	429318 <_obstack_memory_used@@Base+0xd138>
  428d00:	str	wzr, [sp, #108]
  428d04:	b	428d48 <_obstack_memory_used@@Base+0xcb68>
  428d08:	bl	402b40 <__ctype_b_loc@plt>
  428d0c:	ldr	x1, [x0]
  428d10:	ldrsw	x0, [sp, #108]
  428d14:	lsl	x0, x0, #1
  428d18:	add	x0, x1, x0
  428d1c:	ldrh	w0, [x0]
  428d20:	and	w0, w0, #0x800
  428d24:	cmp	w0, #0x0
  428d28:	b.eq	428d3c <_obstack_memory_used@@Base+0xcb5c>  // b.none
  428d2c:	ldrsw	x0, [sp, #108]
  428d30:	mov	x1, x0
  428d34:	ldr	x0, [sp, #64]
  428d38:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  428d3c:	ldr	w0, [sp, #108]
  428d40:	add	w0, w0, #0x1
  428d44:	str	w0, [sp, #108]
  428d48:	ldr	w0, [sp, #108]
  428d4c:	cmp	w0, #0xff
  428d50:	b.le	428d08 <_obstack_memory_used@@Base+0xcb28>
  428d54:	b	429318 <_obstack_memory_used@@Base+0xd138>
  428d58:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  428d5c:	add	x1, x0, #0x598
  428d60:	ldr	x0, [sp, #96]
  428d64:	bl	402b30 <strcmp@plt>
  428d68:	cmp	w0, #0x0
  428d6c:	b.ne	428e4c <_obstack_memory_used@@Base+0xcc6c>  // b.any
  428d70:	ldr	x0, [sp, #72]
  428d74:	cmp	x0, #0x0
  428d78:	cset	w0, ne  // ne = any
  428d7c:	and	w0, w0, #0xff
  428d80:	and	x0, x0, #0xff
  428d84:	cmp	x0, #0x0
  428d88:	b.eq	428df4 <_obstack_memory_used@@Base+0xcc14>  // b.none
  428d8c:	str	wzr, [sp, #108]
  428d90:	b	428de4 <_obstack_memory_used@@Base+0xcc04>
  428d94:	bl	402b40 <__ctype_b_loc@plt>
  428d98:	ldr	x1, [x0]
  428d9c:	ldrsw	x0, [sp, #108]
  428da0:	lsl	x0, x0, #1
  428da4:	add	x0, x1, x0
  428da8:	ldrh	w0, [x0]
  428dac:	and	w0, w0, #0x4000
  428db0:	cmp	w0, #0x0
  428db4:	b.eq	428dd8 <_obstack_memory_used@@Base+0xcbf8>  // b.none
  428db8:	ldrsw	x0, [sp, #108]
  428dbc:	ldr	x1, [sp, #72]
  428dc0:	add	x0, x1, x0
  428dc4:	ldrb	w0, [x0]
  428dc8:	and	x0, x0, #0xff
  428dcc:	mov	x1, x0
  428dd0:	ldr	x0, [sp, #64]
  428dd4:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  428dd8:	ldr	w0, [sp, #108]
  428ddc:	add	w0, w0, #0x1
  428de0:	str	w0, [sp, #108]
  428de4:	ldr	w0, [sp, #108]
  428de8:	cmp	w0, #0xff
  428dec:	b.le	428d94 <_obstack_memory_used@@Base+0xcbb4>
  428df0:	b	429318 <_obstack_memory_used@@Base+0xd138>
  428df4:	str	wzr, [sp, #108]
  428df8:	b	428e3c <_obstack_memory_used@@Base+0xcc5c>
  428dfc:	bl	402b40 <__ctype_b_loc@plt>
  428e00:	ldr	x1, [x0]
  428e04:	ldrsw	x0, [sp, #108]
  428e08:	lsl	x0, x0, #1
  428e0c:	add	x0, x1, x0
  428e10:	ldrh	w0, [x0]
  428e14:	and	w0, w0, #0x4000
  428e18:	cmp	w0, #0x0
  428e1c:	b.eq	428e30 <_obstack_memory_used@@Base+0xcc50>  // b.none
  428e20:	ldrsw	x0, [sp, #108]
  428e24:	mov	x1, x0
  428e28:	ldr	x0, [sp, #64]
  428e2c:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  428e30:	ldr	w0, [sp, #108]
  428e34:	add	w0, w0, #0x1
  428e38:	str	w0, [sp, #108]
  428e3c:	ldr	w0, [sp, #108]
  428e40:	cmp	w0, #0xff
  428e44:	b.le	428dfc <_obstack_memory_used@@Base+0xcc1c>
  428e48:	b	429318 <_obstack_memory_used@@Base+0xd138>
  428e4c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  428e50:	add	x1, x0, #0x570
  428e54:	ldr	x0, [sp, #96]
  428e58:	bl	402b30 <strcmp@plt>
  428e5c:	cmp	w0, #0x0
  428e60:	b.ne	428f40 <_obstack_memory_used@@Base+0xcd60>  // b.any
  428e64:	ldr	x0, [sp, #72]
  428e68:	cmp	x0, #0x0
  428e6c:	cset	w0, ne  // ne = any
  428e70:	and	w0, w0, #0xff
  428e74:	and	x0, x0, #0xff
  428e78:	cmp	x0, #0x0
  428e7c:	b.eq	428ee8 <_obstack_memory_used@@Base+0xcd08>  // b.none
  428e80:	str	wzr, [sp, #108]
  428e84:	b	428ed8 <_obstack_memory_used@@Base+0xccf8>
  428e88:	bl	402b40 <__ctype_b_loc@plt>
  428e8c:	ldr	x1, [x0]
  428e90:	ldrsw	x0, [sp, #108]
  428e94:	lsl	x0, x0, #1
  428e98:	add	x0, x1, x0
  428e9c:	ldrh	w0, [x0]
  428ea0:	and	w0, w0, #0x100
  428ea4:	cmp	w0, #0x0
  428ea8:	b.eq	428ecc <_obstack_memory_used@@Base+0xccec>  // b.none
  428eac:	ldrsw	x0, [sp, #108]
  428eb0:	ldr	x1, [sp, #72]
  428eb4:	add	x0, x1, x0
  428eb8:	ldrb	w0, [x0]
  428ebc:	and	x0, x0, #0xff
  428ec0:	mov	x1, x0
  428ec4:	ldr	x0, [sp, #64]
  428ec8:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  428ecc:	ldr	w0, [sp, #108]
  428ed0:	add	w0, w0, #0x1
  428ed4:	str	w0, [sp, #108]
  428ed8:	ldr	w0, [sp, #108]
  428edc:	cmp	w0, #0xff
  428ee0:	b.le	428e88 <_obstack_memory_used@@Base+0xcca8>
  428ee4:	b	429318 <_obstack_memory_used@@Base+0xd138>
  428ee8:	str	wzr, [sp, #108]
  428eec:	b	428f30 <_obstack_memory_used@@Base+0xcd50>
  428ef0:	bl	402b40 <__ctype_b_loc@plt>
  428ef4:	ldr	x1, [x0]
  428ef8:	ldrsw	x0, [sp, #108]
  428efc:	lsl	x0, x0, #1
  428f00:	add	x0, x1, x0
  428f04:	ldrh	w0, [x0]
  428f08:	and	w0, w0, #0x100
  428f0c:	cmp	w0, #0x0
  428f10:	b.eq	428f24 <_obstack_memory_used@@Base+0xcd44>  // b.none
  428f14:	ldrsw	x0, [sp, #108]
  428f18:	mov	x1, x0
  428f1c:	ldr	x0, [sp, #64]
  428f20:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  428f24:	ldr	w0, [sp, #108]
  428f28:	add	w0, w0, #0x1
  428f2c:	str	w0, [sp, #108]
  428f30:	ldr	w0, [sp, #108]
  428f34:	cmp	w0, #0xff
  428f38:	b.le	428ef0 <_obstack_memory_used@@Base+0xcd10>
  428f3c:	b	429318 <_obstack_memory_used@@Base+0xd138>
  428f40:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  428f44:	add	x1, x0, #0x5a0
  428f48:	ldr	x0, [sp, #96]
  428f4c:	bl	402b30 <strcmp@plt>
  428f50:	cmp	w0, #0x0
  428f54:	b.ne	429034 <_obstack_memory_used@@Base+0xce54>  // b.any
  428f58:	ldr	x0, [sp, #72]
  428f5c:	cmp	x0, #0x0
  428f60:	cset	w0, ne  // ne = any
  428f64:	and	w0, w0, #0xff
  428f68:	and	x0, x0, #0xff
  428f6c:	cmp	x0, #0x0
  428f70:	b.eq	428fdc <_obstack_memory_used@@Base+0xcdfc>  // b.none
  428f74:	str	wzr, [sp, #108]
  428f78:	b	428fcc <_obstack_memory_used@@Base+0xcdec>
  428f7c:	bl	402b40 <__ctype_b_loc@plt>
  428f80:	ldr	x1, [x0]
  428f84:	ldrsw	x0, [sp, #108]
  428f88:	lsl	x0, x0, #1
  428f8c:	add	x0, x1, x0
  428f90:	ldrh	w0, [x0]
  428f94:	and	w0, w0, #0x1
  428f98:	cmp	w0, #0x0
  428f9c:	b.eq	428fc0 <_obstack_memory_used@@Base+0xcde0>  // b.none
  428fa0:	ldrsw	x0, [sp, #108]
  428fa4:	ldr	x1, [sp, #72]
  428fa8:	add	x0, x1, x0
  428fac:	ldrb	w0, [x0]
  428fb0:	and	x0, x0, #0xff
  428fb4:	mov	x1, x0
  428fb8:	ldr	x0, [sp, #64]
  428fbc:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  428fc0:	ldr	w0, [sp, #108]
  428fc4:	add	w0, w0, #0x1
  428fc8:	str	w0, [sp, #108]
  428fcc:	ldr	w0, [sp, #108]
  428fd0:	cmp	w0, #0xff
  428fd4:	b.le	428f7c <_obstack_memory_used@@Base+0xcd9c>
  428fd8:	b	429318 <_obstack_memory_used@@Base+0xd138>
  428fdc:	str	wzr, [sp, #108]
  428fe0:	b	429024 <_obstack_memory_used@@Base+0xce44>
  428fe4:	bl	402b40 <__ctype_b_loc@plt>
  428fe8:	ldr	x1, [x0]
  428fec:	ldrsw	x0, [sp, #108]
  428ff0:	lsl	x0, x0, #1
  428ff4:	add	x0, x1, x0
  428ff8:	ldrh	w0, [x0]
  428ffc:	and	w0, w0, #0x1
  429000:	cmp	w0, #0x0
  429004:	b.eq	429018 <_obstack_memory_used@@Base+0xce38>  // b.none
  429008:	ldrsw	x0, [sp, #108]
  42900c:	mov	x1, x0
  429010:	ldr	x0, [sp, #64]
  429014:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  429018:	ldr	w0, [sp, #108]
  42901c:	add	w0, w0, #0x1
  429020:	str	w0, [sp, #108]
  429024:	ldr	w0, [sp, #108]
  429028:	cmp	w0, #0xff
  42902c:	b.le	428fe4 <_obstack_memory_used@@Base+0xce04>
  429030:	b	429318 <_obstack_memory_used@@Base+0xd138>
  429034:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  429038:	add	x1, x0, #0x5a8
  42903c:	ldr	x0, [sp, #96]
  429040:	bl	402b30 <strcmp@plt>
  429044:	cmp	w0, #0x0
  429048:	b.ne	429128 <_obstack_memory_used@@Base+0xcf48>  // b.any
  42904c:	ldr	x0, [sp, #72]
  429050:	cmp	x0, #0x0
  429054:	cset	w0, ne  // ne = any
  429058:	and	w0, w0, #0xff
  42905c:	and	x0, x0, #0xff
  429060:	cmp	x0, #0x0
  429064:	b.eq	4290d0 <_obstack_memory_used@@Base+0xcef0>  // b.none
  429068:	str	wzr, [sp, #108]
  42906c:	b	4290c0 <_obstack_memory_used@@Base+0xcee0>
  429070:	bl	402b40 <__ctype_b_loc@plt>
  429074:	ldr	x1, [x0]
  429078:	ldrsw	x0, [sp, #108]
  42907c:	lsl	x0, x0, #1
  429080:	add	x0, x1, x0
  429084:	ldrh	w0, [x0]
  429088:	sxth	w0, w0
  42908c:	cmp	w0, #0x0
  429090:	b.ge	4290b4 <_obstack_memory_used@@Base+0xced4>  // b.tcont
  429094:	ldrsw	x0, [sp, #108]
  429098:	ldr	x1, [sp, #72]
  42909c:	add	x0, x1, x0
  4290a0:	ldrb	w0, [x0]
  4290a4:	and	x0, x0, #0xff
  4290a8:	mov	x1, x0
  4290ac:	ldr	x0, [sp, #64]
  4290b0:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  4290b4:	ldr	w0, [sp, #108]
  4290b8:	add	w0, w0, #0x1
  4290bc:	str	w0, [sp, #108]
  4290c0:	ldr	w0, [sp, #108]
  4290c4:	cmp	w0, #0xff
  4290c8:	b.le	429070 <_obstack_memory_used@@Base+0xce90>
  4290cc:	b	429318 <_obstack_memory_used@@Base+0xd138>
  4290d0:	str	wzr, [sp, #108]
  4290d4:	b	429118 <_obstack_memory_used@@Base+0xcf38>
  4290d8:	bl	402b40 <__ctype_b_loc@plt>
  4290dc:	ldr	x1, [x0]
  4290e0:	ldrsw	x0, [sp, #108]
  4290e4:	lsl	x0, x0, #1
  4290e8:	add	x0, x1, x0
  4290ec:	ldrh	w0, [x0]
  4290f0:	sxth	w0, w0
  4290f4:	cmp	w0, #0x0
  4290f8:	b.ge	42910c <_obstack_memory_used@@Base+0xcf2c>  // b.tcont
  4290fc:	ldrsw	x0, [sp, #108]
  429100:	mov	x1, x0
  429104:	ldr	x0, [sp, #64]
  429108:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  42910c:	ldr	w0, [sp, #108]
  429110:	add	w0, w0, #0x1
  429114:	str	w0, [sp, #108]
  429118:	ldr	w0, [sp, #108]
  42911c:	cmp	w0, #0xff
  429120:	b.le	4290d8 <_obstack_memory_used@@Base+0xcef8>
  429124:	b	429318 <_obstack_memory_used@@Base+0xd138>
  429128:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  42912c:	add	x1, x0, #0x5b0
  429130:	ldr	x0, [sp, #96]
  429134:	bl	402b30 <strcmp@plt>
  429138:	cmp	w0, #0x0
  42913c:	b.ne	42921c <_obstack_memory_used@@Base+0xd03c>  // b.any
  429140:	ldr	x0, [sp, #72]
  429144:	cmp	x0, #0x0
  429148:	cset	w0, ne  // ne = any
  42914c:	and	w0, w0, #0xff
  429150:	and	x0, x0, #0xff
  429154:	cmp	x0, #0x0
  429158:	b.eq	4291c4 <_obstack_memory_used@@Base+0xcfe4>  // b.none
  42915c:	str	wzr, [sp, #108]
  429160:	b	4291b4 <_obstack_memory_used@@Base+0xcfd4>
  429164:	bl	402b40 <__ctype_b_loc@plt>
  429168:	ldr	x1, [x0]
  42916c:	ldrsw	x0, [sp, #108]
  429170:	lsl	x0, x0, #1
  429174:	add	x0, x1, x0
  429178:	ldrh	w0, [x0]
  42917c:	and	w0, w0, #0x4
  429180:	cmp	w0, #0x0
  429184:	b.eq	4291a8 <_obstack_memory_used@@Base+0xcfc8>  // b.none
  429188:	ldrsw	x0, [sp, #108]
  42918c:	ldr	x1, [sp, #72]
  429190:	add	x0, x1, x0
  429194:	ldrb	w0, [x0]
  429198:	and	x0, x0, #0xff
  42919c:	mov	x1, x0
  4291a0:	ldr	x0, [sp, #64]
  4291a4:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  4291a8:	ldr	w0, [sp, #108]
  4291ac:	add	w0, w0, #0x1
  4291b0:	str	w0, [sp, #108]
  4291b4:	ldr	w0, [sp, #108]
  4291b8:	cmp	w0, #0xff
  4291bc:	b.le	429164 <_obstack_memory_used@@Base+0xcf84>
  4291c0:	b	429318 <_obstack_memory_used@@Base+0xd138>
  4291c4:	str	wzr, [sp, #108]
  4291c8:	b	42920c <_obstack_memory_used@@Base+0xd02c>
  4291cc:	bl	402b40 <__ctype_b_loc@plt>
  4291d0:	ldr	x1, [x0]
  4291d4:	ldrsw	x0, [sp, #108]
  4291d8:	lsl	x0, x0, #1
  4291dc:	add	x0, x1, x0
  4291e0:	ldrh	w0, [x0]
  4291e4:	and	w0, w0, #0x4
  4291e8:	cmp	w0, #0x0
  4291ec:	b.eq	429200 <_obstack_memory_used@@Base+0xd020>  // b.none
  4291f0:	ldrsw	x0, [sp, #108]
  4291f4:	mov	x1, x0
  4291f8:	ldr	x0, [sp, #64]
  4291fc:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  429200:	ldr	w0, [sp, #108]
  429204:	add	w0, w0, #0x1
  429208:	str	w0, [sp, #108]
  42920c:	ldr	w0, [sp, #108]
  429210:	cmp	w0, #0xff
  429214:	b.le	4291cc <_obstack_memory_used@@Base+0xcfec>
  429218:	b	429318 <_obstack_memory_used@@Base+0xd138>
  42921c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  429220:	add	x1, x0, #0x5b8
  429224:	ldr	x0, [sp, #96]
  429228:	bl	402b30 <strcmp@plt>
  42922c:	cmp	w0, #0x0
  429230:	b.ne	429310 <_obstack_memory_used@@Base+0xd130>  // b.any
  429234:	ldr	x0, [sp, #72]
  429238:	cmp	x0, #0x0
  42923c:	cset	w0, ne  // ne = any
  429240:	and	w0, w0, #0xff
  429244:	and	x0, x0, #0xff
  429248:	cmp	x0, #0x0
  42924c:	b.eq	4292b8 <_obstack_memory_used@@Base+0xd0d8>  // b.none
  429250:	str	wzr, [sp, #108]
  429254:	b	4292a8 <_obstack_memory_used@@Base+0xd0c8>
  429258:	bl	402b40 <__ctype_b_loc@plt>
  42925c:	ldr	x1, [x0]
  429260:	ldrsw	x0, [sp, #108]
  429264:	lsl	x0, x0, #1
  429268:	add	x0, x1, x0
  42926c:	ldrh	w0, [x0]
  429270:	and	w0, w0, #0x1000
  429274:	cmp	w0, #0x0
  429278:	b.eq	42929c <_obstack_memory_used@@Base+0xd0bc>  // b.none
  42927c:	ldrsw	x0, [sp, #108]
  429280:	ldr	x1, [sp, #72]
  429284:	add	x0, x1, x0
  429288:	ldrb	w0, [x0]
  42928c:	and	x0, x0, #0xff
  429290:	mov	x1, x0
  429294:	ldr	x0, [sp, #64]
  429298:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  42929c:	ldr	w0, [sp, #108]
  4292a0:	add	w0, w0, #0x1
  4292a4:	str	w0, [sp, #108]
  4292a8:	ldr	w0, [sp, #108]
  4292ac:	cmp	w0, #0xff
  4292b0:	b.le	429258 <_obstack_memory_used@@Base+0xd078>
  4292b4:	b	429318 <_obstack_memory_used@@Base+0xd138>
  4292b8:	str	wzr, [sp, #108]
  4292bc:	b	429300 <_obstack_memory_used@@Base+0xd120>
  4292c0:	bl	402b40 <__ctype_b_loc@plt>
  4292c4:	ldr	x1, [x0]
  4292c8:	ldrsw	x0, [sp, #108]
  4292cc:	lsl	x0, x0, #1
  4292d0:	add	x0, x1, x0
  4292d4:	ldrh	w0, [x0]
  4292d8:	and	w0, w0, #0x1000
  4292dc:	cmp	w0, #0x0
  4292e0:	b.eq	4292f4 <_obstack_memory_used@@Base+0xd114>  // b.none
  4292e4:	ldrsw	x0, [sp, #108]
  4292e8:	mov	x1, x0
  4292ec:	ldr	x0, [sp, #64]
  4292f0:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  4292f4:	ldr	w0, [sp, #108]
  4292f8:	add	w0, w0, #0x1
  4292fc:	str	w0, [sp, #108]
  429300:	ldr	w0, [sp, #108]
  429304:	cmp	w0, #0xff
  429308:	b.le	4292c0 <_obstack_memory_used@@Base+0xd0e0>
  42930c:	b	429318 <_obstack_memory_used@@Base+0xd138>
  429310:	mov	w0, #0x4                   	// #4
  429314:	b	42931c <_obstack_memory_used@@Base+0xd13c>
  429318:	mov	w0, #0x0                   	// #0
  42931c:	ldr	x19, [sp, #16]
  429320:	ldp	x29, x30, [sp], #112
  429324:	ret
  429328:	stp	x29, x30, [sp, #-128]!
  42932c:	mov	x29, sp
  429330:	str	x0, [sp, #56]
  429334:	str	x1, [sp, #48]
  429338:	str	x2, [sp, #40]
  42933c:	str	x3, [sp, #32]
  429340:	strb	w4, [sp, #31]
  429344:	str	x5, [sp, #16]
  429348:	str	xzr, [sp, #80]
  42934c:	mov	x1, #0x1                   	// #1
  429350:	mov	x0, #0x20                  	// #32
  429354:	bl	4029c0 <calloc@plt>
  429358:	str	x0, [sp, #120]
  42935c:	ldr	x0, [sp, #120]
  429360:	cmp	x0, #0x0
  429364:	cset	w0, eq  // eq = none
  429368:	and	w0, w0, #0xff
  42936c:	and	x0, x0, #0xff
  429370:	cmp	x0, #0x0
  429374:	b.eq	42938c <_obstack_memory_used@@Base+0xd1ac>  // b.none
  429378:	ldr	x0, [sp, #16]
  42937c:	mov	w1, #0xc                   	// #12
  429380:	str	w1, [x0]
  429384:	mov	x0, #0x0                   	// #0
  429388:	b	4295e4 <_obstack_memory_used@@Base+0xd404>
  42938c:	mov	x1, #0x1                   	// #1
  429390:	mov	x0, #0x50                  	// #80
  429394:	bl	4029c0 <calloc@plt>
  429398:	str	x0, [sp, #112]
  42939c:	ldr	x0, [sp, #112]
  4293a0:	cmp	x0, #0x0
  4293a4:	cset	w0, eq  // eq = none
  4293a8:	and	w0, w0, #0xff
  4293ac:	and	x0, x0, #0xff
  4293b0:	cmp	x0, #0x0
  4293b4:	b.eq	4293d4 <_obstack_memory_used@@Base+0xd1f4>  // b.none
  4293b8:	ldr	x0, [sp, #120]
  4293bc:	bl	402b60 <free@plt>
  4293c0:	ldr	x0, [sp, #16]
  4293c4:	mov	w1, #0xc                   	// #12
  4293c8:	str	w1, [x0]
  4293cc:	mov	x0, #0x0                   	// #0
  4293d0:	b	4295e4 <_obstack_memory_used@@Base+0xd404>
  4293d4:	ldr	x1, [sp, #112]
  4293d8:	ldrb	w0, [x1, #32]
  4293dc:	ldrb	w2, [sp, #31]
  4293e0:	bfxil	w0, w2, #0, #1
  4293e4:	strb	w0, [x1, #32]
  4293e8:	add	x0, sp, #0x50
  4293ec:	mov	x5, #0x0                   	// #0
  4293f0:	ldr	x4, [sp, #40]
  4293f4:	mov	x3, x0
  4293f8:	ldr	x2, [sp, #112]
  4293fc:	ldr	x1, [sp, #120]
  429400:	ldr	x0, [sp, #48]
  429404:	bl	428660 <_obstack_memory_used@@Base+0xc480>
  429408:	str	w0, [sp, #108]
  42940c:	ldr	w0, [sp, #108]
  429410:	cmp	w0, #0x0
  429414:	cset	w0, ne  // ne = any
  429418:	and	w0, w0, #0xff
  42941c:	and	x0, x0, #0xff
  429420:	cmp	x0, #0x0
  429424:	b.eq	429470 <_obstack_memory_used@@Base+0xd290>  // b.none
  429428:	ldr	x0, [sp, #120]
  42942c:	bl	402b60 <free@plt>
  429430:	ldr	x0, [sp, #112]
  429434:	bl	429708 <_obstack_memory_used@@Base+0xd528>
  429438:	ldr	x0, [sp, #16]
  42943c:	ldr	w1, [sp, #108]
  429440:	str	w1, [x0]
  429444:	mov	x0, #0x0                   	// #0
  429448:	b	4295e4 <_obstack_memory_used@@Base+0xd404>
  42944c:	ldr	x0, [sp, #32]
  429450:	ldrb	w0, [x0]
  429454:	and	x0, x0, #0xff
  429458:	mov	x1, x0
  42945c:	ldr	x0, [sp, #120]
  429460:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  429464:	ldr	x0, [sp, #32]
  429468:	add	x0, x0, #0x1
  42946c:	str	x0, [sp, #32]
  429470:	ldr	x0, [sp, #32]
  429474:	ldrb	w0, [x0]
  429478:	cmp	w0, #0x0
  42947c:	b.ne	42944c <_obstack_memory_used@@Base+0xd26c>  // b.any
  429480:	ldrb	w0, [sp, #31]
  429484:	cmp	w0, #0x0
  429488:	b.eq	429494 <_obstack_memory_used@@Base+0xd2b4>  // b.none
  42948c:	ldr	x0, [sp, #120]
  429490:	bl	41c460 <_obstack_memory_used@@Base+0x280>
  429494:	ldr	x0, [sp, #56]
  429498:	ldr	w0, [x0, #180]
  42949c:	cmp	w0, #0x1
  4294a0:	b.le	4294b8 <_obstack_memory_used@@Base+0xd2d8>
  4294a4:	ldr	x0, [sp, #56]
  4294a8:	ldr	x0, [x0, #120]
  4294ac:	mov	x1, x0
  4294b0:	ldr	x0, [sp, #120]
  4294b4:	bl	41c540 <_obstack_memory_used@@Base+0x360>
  4294b8:	stp	xzr, xzr, [sp, #64]
  4294bc:	ldr	x0, [sp, #120]
  4294c0:	str	x0, [sp, #64]
  4294c4:	mov	w0, #0x3                   	// #3
  4294c8:	strb	w0, [sp, #72]
  4294cc:	add	x0, sp, #0x40
  4294d0:	mov	x3, x0
  4294d4:	mov	x2, #0x0                   	// #0
  4294d8:	mov	x1, #0x0                   	// #0
  4294dc:	ldr	x0, [sp, #56]
  4294e0:	bl	4297a0 <_obstack_memory_used@@Base+0xd5c0>
  4294e4:	str	x0, [sp, #96]
  4294e8:	ldr	x0, [sp, #96]
  4294ec:	cmp	x0, #0x0
  4294f0:	cset	w0, eq  // eq = none
  4294f4:	and	w0, w0, #0xff
  4294f8:	and	x0, x0, #0xff
  4294fc:	cmp	x0, #0x0
  429500:	b.ne	4295b8 <_obstack_memory_used@@Base+0xd3d8>  // b.any
  429504:	ldr	x0, [sp, #56]
  429508:	ldr	w0, [x0, #180]
  42950c:	cmp	w0, #0x1
  429510:	b.le	4295a8 <_obstack_memory_used@@Base+0xd3c8>
  429514:	mov	w0, #0x6                   	// #6
  429518:	strb	w0, [sp, #72]
  42951c:	ldr	x0, [sp, #112]
  429520:	str	x0, [sp, #64]
  429524:	ldr	x0, [sp, #56]
  429528:	ldrb	w1, [x0, #176]
  42952c:	orr	w1, w1, #0x2
  429530:	strb	w1, [x0, #176]
  429534:	add	x0, sp, #0x40
  429538:	mov	x3, x0
  42953c:	mov	x2, #0x0                   	// #0
  429540:	mov	x1, #0x0                   	// #0
  429544:	ldr	x0, [sp, #56]
  429548:	bl	4297a0 <_obstack_memory_used@@Base+0xd5c0>
  42954c:	str	x0, [sp, #88]
  429550:	ldr	x0, [sp, #88]
  429554:	cmp	x0, #0x0
  429558:	cset	w0, eq  // eq = none
  42955c:	and	w0, w0, #0xff
  429560:	and	x0, x0, #0xff
  429564:	cmp	x0, #0x0
  429568:	b.ne	4295c0 <_obstack_memory_used@@Base+0xd3e0>  // b.any
  42956c:	mov	w3, #0xa                   	// #10
  429570:	ldr	x2, [sp, #88]
  429574:	ldr	x1, [sp, #96]
  429578:	ldr	x0, [sp, #56]
  42957c:	bl	429758 <_obstack_memory_used@@Base+0xd578>
  429580:	str	x0, [sp, #96]
  429584:	ldr	x0, [sp, #88]
  429588:	cmp	x0, #0x0
  42958c:	cset	w0, ne  // ne = any
  429590:	and	w0, w0, #0xff
  429594:	and	x0, x0, #0xff
  429598:	cmp	x0, #0x0
  42959c:	b.eq	4295c4 <_obstack_memory_used@@Base+0xd3e4>  // b.none
  4295a0:	ldr	x0, [sp, #96]
  4295a4:	b	4295e4 <_obstack_memory_used@@Base+0xd404>
  4295a8:	ldr	x0, [sp, #112]
  4295ac:	bl	429708 <_obstack_memory_used@@Base+0xd528>
  4295b0:	ldr	x0, [sp, #96]
  4295b4:	b	4295e4 <_obstack_memory_used@@Base+0xd404>
  4295b8:	nop
  4295bc:	b	4295c4 <_obstack_memory_used@@Base+0xd3e4>
  4295c0:	nop
  4295c4:	ldr	x0, [sp, #120]
  4295c8:	bl	402b60 <free@plt>
  4295cc:	ldr	x0, [sp, #112]
  4295d0:	bl	429708 <_obstack_memory_used@@Base+0xd528>
  4295d4:	ldr	x0, [sp, #16]
  4295d8:	mov	w1, #0xc                   	// #12
  4295dc:	str	w1, [x0]
  4295e0:	mov	x0, #0x0                   	// #0
  4295e4:	ldp	x29, x30, [sp], #128
  4295e8:	ret
  4295ec:	stp	x29, x30, [sp, #-64]!
  4295f0:	mov	x29, sp
  4295f4:	str	x0, [sp, #40]
  4295f8:	str	x1, [sp, #32]
  4295fc:	str	x2, [sp, #24]
  429600:	mov	x0, #0xffffffffffffffff    	// #-1
  429604:	str	x0, [sp, #56]
  429608:	ldr	x2, [sp, #24]
  42960c:	ldr	x1, [sp, #40]
  429610:	ldr	x0, [sp, #32]
  429614:	bl	424fc4 <_obstack_memory_used@@Base+0x8de4>
  429618:	ldr	x0, [sp, #32]
  42961c:	ldrb	w0, [x0]
  429620:	strb	w0, [sp, #55]
  429624:	ldr	x0, [sp, #32]
  429628:	ldrb	w0, [x0, #8]
  42962c:	cmp	w0, #0x2
  429630:	cset	w0, eq  // eq = none
  429634:	and	w0, w0, #0xff
  429638:	and	x0, x0, #0xff
  42963c:	cmp	x0, #0x0
  429640:	b.eq	42964c <_obstack_memory_used@@Base+0xd46c>  // b.none
  429644:	mov	x0, #0xfffffffffffffffe    	// #-2
  429648:	b	429700 <_obstack_memory_used@@Base+0xd520>
  42964c:	ldr	x0, [sp, #32]
  429650:	ldrb	w0, [x0, #8]
  429654:	cmp	w0, #0x18
  429658:	b.eq	4296fc <_obstack_memory_used@@Base+0xd51c>  // b.none
  42965c:	ldrb	w0, [sp, #55]
  429660:	cmp	w0, #0x2c
  429664:	b.eq	4296fc <_obstack_memory_used@@Base+0xd51c>  // b.none
  429668:	ldr	x0, [sp, #32]
  42966c:	ldrb	w0, [x0, #8]
  429670:	cmp	w0, #0x1
  429674:	b.ne	4296f0 <_obstack_memory_used@@Base+0xd510>  // b.any
  429678:	ldrb	w0, [sp, #55]
  42967c:	cmp	w0, #0x2f
  429680:	b.ls	4296f0 <_obstack_memory_used@@Base+0xd510>  // b.plast
  429684:	ldrb	w0, [sp, #55]
  429688:	cmp	w0, #0x39
  42968c:	b.hi	4296f0 <_obstack_memory_used@@Base+0xd510>  // b.pmore
  429690:	ldr	x0, [sp, #56]
  429694:	cmn	x0, #0x2
  429698:	b.eq	4296f0 <_obstack_memory_used@@Base+0xd510>  // b.none
  42969c:	ldr	x0, [sp, #56]
  4296a0:	cmn	x0, #0x1
  4296a4:	b.ne	4296b8 <_obstack_memory_used@@Base+0xd4d8>  // b.any
  4296a8:	ldrb	w0, [sp, #55]
  4296ac:	sub	w0, w0, #0x30
  4296b0:	sxtw	x0, w0
  4296b4:	b	4296f4 <_obstack_memory_used@@Base+0xd514>
  4296b8:	ldr	x1, [sp, #56]
  4296bc:	mov	x0, x1
  4296c0:	lsl	x0, x0, #2
  4296c4:	add	x0, x0, x1
  4296c8:	lsl	x0, x0, #1
  4296cc:	mov	x1, x0
  4296d0:	ldrb	w0, [sp, #55]
  4296d4:	add	x0, x1, x0
  4296d8:	mov	x2, #0x8030                	// #32816
  4296dc:	mov	x1, #0x8030                	// #32816
  4296e0:	cmp	x0, x2
  4296e4:	csel	x0, x0, x1, le
  4296e8:	sub	x0, x0, #0x30
  4296ec:	b	4296f4 <_obstack_memory_used@@Base+0xd514>
  4296f0:	mov	x0, #0xfffffffffffffffe    	// #-2
  4296f4:	str	x0, [sp, #56]
  4296f8:	b	429608 <_obstack_memory_used@@Base+0xd428>
  4296fc:	ldr	x0, [sp, #56]
  429700:	ldp	x29, x30, [sp], #64
  429704:	ret
  429708:	stp	x29, x30, [sp, #-32]!
  42970c:	mov	x29, sp
  429710:	str	x0, [sp, #24]
  429714:	ldr	x0, [sp, #24]
  429718:	ldr	x0, [x0]
  42971c:	bl	402b60 <free@plt>
  429720:	ldr	x0, [sp, #24]
  429724:	ldr	x0, [x0, #8]
  429728:	bl	402b60 <free@plt>
  42972c:	ldr	x0, [sp, #24]
  429730:	ldr	x0, [x0, #16]
  429734:	bl	402b60 <free@plt>
  429738:	ldr	x0, [sp, #24]
  42973c:	ldr	x0, [x0, #24]
  429740:	bl	402b60 <free@plt>
  429744:	ldr	x0, [sp, #24]
  429748:	bl	402b60 <free@plt>
  42974c:	nop
  429750:	ldp	x29, x30, [sp], #32
  429754:	ret
  429758:	stp	x29, x30, [sp, #-64]!
  42975c:	mov	x29, sp
  429760:	str	x0, [sp, #40]
  429764:	str	x1, [sp, #32]
  429768:	str	x2, [sp, #24]
  42976c:	str	w3, [sp, #20]
  429770:	stp	xzr, xzr, [sp, #48]
  429774:	ldr	w0, [sp, #20]
  429778:	and	w0, w0, #0xff
  42977c:	strb	w0, [sp, #56]
  429780:	add	x0, sp, #0x30
  429784:	mov	x3, x0
  429788:	ldr	x2, [sp, #24]
  42978c:	ldr	x1, [sp, #32]
  429790:	ldr	x0, [sp, #40]
  429794:	bl	4297a0 <_obstack_memory_used@@Base+0xd5c0>
  429798:	ldp	x29, x30, [sp], #64
  42979c:	ret
  4297a0:	stp	x29, x30, [sp, #-64]!
  4297a4:	mov	x29, sp
  4297a8:	str	x0, [sp, #40]
  4297ac:	str	x1, [sp, #32]
  4297b0:	str	x2, [sp, #24]
  4297b4:	str	x3, [sp, #16]
  4297b8:	ldr	x0, [sp, #40]
  4297bc:	ldr	w0, [x0, #128]
  4297c0:	cmp	w0, #0xf
  4297c4:	cset	w0, eq  // eq = none
  4297c8:	and	w0, w0, #0xff
  4297cc:	and	x0, x0, #0xff
  4297d0:	cmp	x0, #0x0
  4297d4:	b.eq	42981c <_obstack_memory_used@@Base+0xd63c>  // b.none
  4297d8:	mov	x0, #0x3c8                 	// #968
  4297dc:	bl	4028b0 <malloc@plt>
  4297e0:	str	x0, [sp, #56]
  4297e4:	ldr	x0, [sp, #56]
  4297e8:	cmp	x0, #0x0
  4297ec:	b.ne	4297f8 <_obstack_memory_used@@Base+0xd618>  // b.any
  4297f0:	mov	x0, #0x0                   	// #0
  4297f4:	b	4298ec <_obstack_memory_used@@Base+0xd70c>
  4297f8:	ldr	x0, [sp, #40]
  4297fc:	ldr	x1, [x0, #112]
  429800:	ldr	x0, [sp, #56]
  429804:	str	x1, [x0]
  429808:	ldr	x0, [sp, #40]
  42980c:	ldr	x1, [sp, #56]
  429810:	str	x1, [x0, #112]
  429814:	ldr	x0, [sp, #40]
  429818:	str	wzr, [x0, #128]
  42981c:	ldr	x0, [sp, #40]
  429820:	ldr	x1, [x0, #112]
  429824:	ldr	x0, [sp, #40]
  429828:	ldr	w0, [x0, #128]
  42982c:	add	w3, w0, #0x1
  429830:	ldr	x2, [sp, #40]
  429834:	str	w3, [x2, #128]
  429838:	sxtw	x0, w0
  42983c:	lsl	x0, x0, #6
  429840:	add	x0, x1, x0
  429844:	add	x0, x0, #0x8
  429848:	str	x0, [sp, #48]
  42984c:	ldr	x0, [sp, #48]
  429850:	str	xzr, [x0]
  429854:	ldr	x0, [sp, #48]
  429858:	ldr	x1, [sp, #32]
  42985c:	str	x1, [x0, #8]
  429860:	ldr	x0, [sp, #48]
  429864:	ldr	x1, [sp, #24]
  429868:	str	x1, [x0, #16]
  42986c:	ldr	x2, [sp, #48]
  429870:	ldr	x0, [sp, #16]
  429874:	ldp	x0, x1, [x0]
  429878:	stp	x0, x1, [x2, #40]
  42987c:	ldr	x0, [sp, #48]
  429880:	ldrb	w1, [x0, #50]
  429884:	and	w1, w1, #0xfffffffb
  429888:	strb	w1, [x0, #50]
  42988c:	ldr	x0, [sp, #48]
  429890:	ldrb	w1, [x0, #50]
  429894:	and	w1, w1, #0xfffffff7
  429898:	strb	w1, [x0, #50]
  42989c:	ldr	x0, [sp, #48]
  4298a0:	str	xzr, [x0, #24]
  4298a4:	ldr	x0, [sp, #48]
  4298a8:	str	xzr, [x0, #32]
  4298ac:	ldr	x0, [sp, #48]
  4298b0:	mov	x1, #0xffffffffffffffff    	// #-1
  4298b4:	str	x1, [x0, #56]
  4298b8:	ldr	x0, [sp, #32]
  4298bc:	cmp	x0, #0x0
  4298c0:	b.eq	4298d0 <_obstack_memory_used@@Base+0xd6f0>  // b.none
  4298c4:	ldr	x0, [sp, #32]
  4298c8:	ldr	x1, [sp, #48]
  4298cc:	str	x1, [x0]
  4298d0:	ldr	x0, [sp, #24]
  4298d4:	cmp	x0, #0x0
  4298d8:	b.eq	4298e8 <_obstack_memory_used@@Base+0xd708>  // b.none
  4298dc:	ldr	x0, [sp, #24]
  4298e0:	ldr	x1, [sp, #48]
  4298e4:	str	x1, [x0]
  4298e8:	ldr	x0, [sp, #48]
  4298ec:	ldp	x29, x30, [sp], #64
  4298f0:	ret
  4298f4:	sub	sp, sp, #0x20
  4298f8:	str	x0, [sp, #8]
  4298fc:	str	x1, [sp]
  429900:	ldr	x0, [sp, #8]
  429904:	str	x0, [sp, #24]
  429908:	ldr	x0, [sp]
  42990c:	ldrb	w0, [x0, #48]
  429910:	cmp	w0, #0x11
  429914:	b.ne	42993c <_obstack_memory_used@@Base+0xd75c>  // b.any
  429918:	ldr	x0, [sp]
  42991c:	ldr	x0, [x0, #40]
  429920:	ldr	x1, [sp, #24]
  429924:	cmp	x1, x0
  429928:	b.ne	42993c <_obstack_memory_used@@Base+0xd75c>  // b.any
  42992c:	ldr	x0, [sp]
  429930:	ldrb	w1, [x0, #50]
  429934:	orr	w1, w1, #0x8
  429938:	strb	w1, [x0, #50]
  42993c:	mov	w0, #0x0                   	// #0
  429940:	add	sp, sp, #0x20
  429944:	ret
  429948:	stp	x29, x30, [sp, #-32]!
  42994c:	mov	x29, sp
  429950:	str	x0, [sp, #24]
  429954:	ldr	x0, [sp, #24]
  429958:	ldrb	w0, [x0, #8]
  42995c:	cmp	w0, #0x6
  429960:	b.ne	42998c <_obstack_memory_used@@Base+0xd7ac>  // b.any
  429964:	ldr	x0, [sp, #24]
  429968:	ldrb	w0, [x0, #10]
  42996c:	and	w0, w0, #0x4
  429970:	and	w0, w0, #0xff
  429974:	cmp	w0, #0x0
  429978:	b.ne	42998c <_obstack_memory_used@@Base+0xd7ac>  // b.any
  42997c:	ldr	x0, [sp, #24]
  429980:	ldr	x0, [x0]
  429984:	bl	429708 <_obstack_memory_used@@Base+0xd528>
  429988:	b	4299c0 <_obstack_memory_used@@Base+0xd7e0>
  42998c:	ldr	x0, [sp, #24]
  429990:	ldrb	w0, [x0, #8]
  429994:	cmp	w0, #0x3
  429998:	b.ne	4299c0 <_obstack_memory_used@@Base+0xd7e0>  // b.any
  42999c:	ldr	x0, [sp, #24]
  4299a0:	ldrb	w0, [x0, #10]
  4299a4:	and	w0, w0, #0x4
  4299a8:	and	w0, w0, #0xff
  4299ac:	cmp	w0, #0x0
  4299b0:	b.ne	4299c0 <_obstack_memory_used@@Base+0xd7e0>  // b.any
  4299b4:	ldr	x0, [sp, #24]
  4299b8:	ldr	x0, [x0]
  4299bc:	bl	402b60 <free@plt>
  4299c0:	nop
  4299c4:	ldp	x29, x30, [sp], #32
  4299c8:	ret
  4299cc:	stp	x29, x30, [sp, #-32]!
  4299d0:	mov	x29, sp
  4299d4:	str	x0, [sp, #24]
  4299d8:	str	x1, [sp, #16]
  4299dc:	ldr	x0, [sp, #16]
  4299e0:	add	x0, x0, #0x28
  4299e4:	bl	429948 <_obstack_memory_used@@Base+0xd768>
  4299e8:	mov	w0, #0x0                   	// #0
  4299ec:	ldp	x29, x30, [sp], #32
  4299f0:	ret
  4299f4:	stp	x29, x30, [sp, #-80]!
  4299f8:	mov	x29, sp
  4299fc:	str	x0, [sp, #24]
  429a00:	str	x1, [sp, #16]
  429a04:	add	x0, sp, #0x28
  429a08:	str	x0, [sp, #64]
  429a0c:	ldr	x0, [sp, #24]
  429a10:	ldr	x0, [x0]
  429a14:	str	x0, [sp, #56]
  429a18:	ldr	x0, [sp, #24]
  429a1c:	str	x0, [sp, #72]
  429a20:	ldr	x0, [sp, #72]
  429a24:	add	x0, x0, #0x28
  429a28:	mov	x3, x0
  429a2c:	mov	x2, #0x0                   	// #0
  429a30:	mov	x1, #0x0                   	// #0
  429a34:	ldr	x0, [sp, #16]
  429a38:	bl	4297a0 <_obstack_memory_used@@Base+0xd5c0>
  429a3c:	mov	x1, x0
  429a40:	ldr	x0, [sp, #64]
  429a44:	str	x1, [x0]
  429a48:	ldr	x0, [sp, #64]
  429a4c:	ldr	x0, [x0]
  429a50:	cmp	x0, #0x0
  429a54:	b.ne	429a60 <_obstack_memory_used@@Base+0xd880>  // b.any
  429a58:	mov	x0, #0x0                   	// #0
  429a5c:	b	429b38 <_obstack_memory_used@@Base+0xd958>
  429a60:	ldr	x0, [sp, #64]
  429a64:	ldr	x0, [x0]
  429a68:	ldr	x1, [sp, #56]
  429a6c:	str	x1, [x0]
  429a70:	ldr	x0, [sp, #64]
  429a74:	ldr	x0, [x0]
  429a78:	ldrb	w1, [x0, #50]
  429a7c:	orr	w1, w1, #0x4
  429a80:	strb	w1, [x0, #50]
  429a84:	ldr	x0, [sp, #64]
  429a88:	ldr	x0, [x0]
  429a8c:	str	x0, [sp, #56]
  429a90:	ldr	x0, [sp, #72]
  429a94:	ldr	x0, [x0, #8]
  429a98:	cmp	x0, #0x0
  429a9c:	b.eq	429abc <_obstack_memory_used@@Base+0xd8dc>  // b.none
  429aa0:	ldr	x0, [sp, #72]
  429aa4:	ldr	x0, [x0, #8]
  429aa8:	str	x0, [sp, #72]
  429aac:	ldr	x0, [sp, #56]
  429ab0:	add	x0, x0, #0x8
  429ab4:	str	x0, [sp, #64]
  429ab8:	b	429a20 <_obstack_memory_used@@Base+0xd840>
  429abc:	str	xzr, [sp, #48]
  429ac0:	b	429af8 <_obstack_memory_used@@Base+0xd918>
  429ac4:	ldr	x0, [sp, #72]
  429ac8:	str	x0, [sp, #48]
  429acc:	ldr	x0, [sp, #72]
  429ad0:	ldr	x0, [x0]
  429ad4:	str	x0, [sp, #72]
  429ad8:	ldr	x0, [sp, #56]
  429adc:	ldr	x0, [x0]
  429ae0:	str	x0, [sp, #56]
  429ae4:	ldr	x0, [sp, #72]
  429ae8:	cmp	x0, #0x0
  429aec:	b.ne	429af8 <_obstack_memory_used@@Base+0xd918>  // b.any
  429af0:	ldr	x0, [sp, #40]
  429af4:	b	429b38 <_obstack_memory_used@@Base+0xd958>
  429af8:	ldr	x0, [sp, #72]
  429afc:	ldr	x0, [x0, #16]
  429b00:	ldr	x1, [sp, #48]
  429b04:	cmp	x1, x0
  429b08:	b.eq	429ac4 <_obstack_memory_used@@Base+0xd8e4>  // b.none
  429b0c:	ldr	x0, [sp, #72]
  429b10:	ldr	x0, [x0, #16]
  429b14:	cmp	x0, #0x0
  429b18:	b.eq	429ac4 <_obstack_memory_used@@Base+0xd8e4>  // b.none
  429b1c:	ldr	x0, [sp, #72]
  429b20:	ldr	x0, [x0, #16]
  429b24:	str	x0, [sp, #72]
  429b28:	ldr	x0, [sp, #56]
  429b2c:	add	x0, x0, #0x10
  429b30:	str	x0, [sp, #64]
  429b34:	b	429a20 <_obstack_memory_used@@Base+0xd840>
  429b38:	ldp	x29, x30, [sp], #80
  429b3c:	ret
  429b40:	sub	sp, sp, #0x70
  429b44:	stp	x29, x30, [sp, #16]
  429b48:	add	x29, sp, #0x10
  429b4c:	str	x0, [sp, #72]
  429b50:	str	x1, [sp, #64]
  429b54:	str	x2, [sp, #56]
  429b58:	str	x3, [sp, #48]
  429b5c:	str	w4, [sp, #44]
  429b60:	ldr	x0, [sp, #72]
  429b64:	ldr	x0, [x0]
  429b68:	str	x0, [sp, #80]
  429b6c:	ldr	w0, [sp, #44]
  429b70:	and	w0, w0, #0xfffffff8
  429b74:	cmp	w0, #0x0
  429b78:	b.eq	429b84 <_obstack_memory_used@@Base+0xd9a4>  // b.none
  429b7c:	mov	w0, #0x2                   	// #2
  429b80:	b	429c4c <_obstack_memory_used@@Base+0xda6c>
  429b84:	ldr	w0, [sp, #44]
  429b88:	and	w0, w0, #0x4
  429b8c:	cmp	w0, #0x0
  429b90:	b.eq	429bb0 <_obstack_memory_used@@Base+0xd9d0>  // b.none
  429b94:	ldr	x0, [sp, #48]
  429b98:	ldr	x0, [x0]
  429b9c:	str	x0, [sp, #96]
  429ba0:	ldr	x0, [sp, #48]
  429ba4:	ldr	x0, [x0, #8]
  429ba8:	str	x0, [sp, #88]
  429bac:	b	429bc0 <_obstack_memory_used@@Base+0xd9e0>
  429bb0:	str	xzr, [sp, #96]
  429bb4:	ldr	x0, [sp, #64]
  429bb8:	bl	402720 <strlen@plt>
  429bbc:	str	x0, [sp, #88]
  429bc0:	ldr	x0, [sp, #72]
  429bc4:	ldrb	w0, [x0, #56]
  429bc8:	and	w0, w0, #0x10
  429bcc:	and	w0, w0, #0xff
  429bd0:	cmp	w0, #0x0
  429bd4:	b.eq	429c0c <_obstack_memory_used@@Base+0xda2c>  // b.none
  429bd8:	ldr	w0, [sp, #44]
  429bdc:	str	w0, [sp]
  429be0:	mov	x7, #0x0                   	// #0
  429be4:	mov	x6, #0x0                   	// #0
  429be8:	ldr	x5, [sp, #88]
  429bec:	ldr	x4, [sp, #88]
  429bf0:	ldr	x3, [sp, #96]
  429bf4:	ldr	x2, [sp, #88]
  429bf8:	ldr	x1, [sp, #64]
  429bfc:	ldr	x0, [sp, #72]
  429c00:	bl	42a714 <_obstack_memory_used@@Base+0xe534>
  429c04:	str	w0, [sp, #108]
  429c08:	b	429c3c <_obstack_memory_used@@Base+0xda5c>
  429c0c:	ldr	w0, [sp, #44]
  429c10:	str	w0, [sp]
  429c14:	ldr	x7, [sp, #48]
  429c18:	ldr	x6, [sp, #56]
  429c1c:	ldr	x5, [sp, #88]
  429c20:	ldr	x4, [sp, #88]
  429c24:	ldr	x3, [sp, #96]
  429c28:	ldr	x2, [sp, #88]
  429c2c:	ldr	x1, [sp, #64]
  429c30:	ldr	x0, [sp, #72]
  429c34:	bl	42a714 <_obstack_memory_used@@Base+0xe534>
  429c38:	str	w0, [sp, #108]
  429c3c:	ldr	w0, [sp, #108]
  429c40:	cmp	w0, #0x0
  429c44:	cset	w0, ne  // ne = any
  429c48:	and	w0, w0, #0xff
  429c4c:	ldp	x29, x30, [sp, #16]
  429c50:	add	sp, sp, #0x70
  429c54:	ret
  429c58:	stp	x29, x30, [sp, #-64]!
  429c5c:	mov	x29, sp
  429c60:	str	x0, [sp, #56]
  429c64:	str	x1, [sp, #48]
  429c68:	str	x2, [sp, #40]
  429c6c:	str	x3, [sp, #32]
  429c70:	str	x4, [sp, #24]
  429c74:	mov	w7, #0x1                   	// #1
  429c78:	ldr	x6, [sp, #24]
  429c7c:	ldr	x5, [sp, #40]
  429c80:	mov	x4, #0x0                   	// #0
  429c84:	ldr	x3, [sp, #32]
  429c88:	ldr	x2, [sp, #40]
  429c8c:	ldr	x1, [sp, #48]
  429c90:	ldr	x0, [sp, #56]
  429c94:	bl	429f70 <_obstack_memory_used@@Base+0xdd90>
  429c98:	ldp	x29, x30, [sp], #64
  429c9c:	ret
  429ca0:	stp	x29, x30, [sp, #-64]!
  429ca4:	mov	x29, sp
  429ca8:	str	x0, [sp, #56]
  429cac:	str	x1, [sp, #48]
  429cb0:	str	x2, [sp, #40]
  429cb4:	str	x3, [sp, #32]
  429cb8:	str	x4, [sp, #24]
  429cbc:	str	x5, [sp, #16]
  429cc0:	mov	w7, #0x0                   	// #0
  429cc4:	ldr	x6, [sp, #16]
  429cc8:	ldr	x5, [sp, #40]
  429ccc:	ldr	x4, [sp, #24]
  429cd0:	ldr	x3, [sp, #32]
  429cd4:	ldr	x2, [sp, #40]
  429cd8:	ldr	x1, [sp, #48]
  429cdc:	ldr	x0, [sp, #56]
  429ce0:	bl	429f70 <_obstack_memory_used@@Base+0xdd90>
  429ce4:	ldp	x29, x30, [sp], #64
  429ce8:	ret
  429cec:	sub	sp, sp, #0x60
  429cf0:	stp	x29, x30, [sp, #16]
  429cf4:	add	x29, sp, #0x10
  429cf8:	str	x0, [sp, #88]
  429cfc:	str	x1, [sp, #80]
  429d00:	str	x2, [sp, #72]
  429d04:	str	x3, [sp, #64]
  429d08:	str	x4, [sp, #56]
  429d0c:	str	x5, [sp, #48]
  429d10:	str	x6, [sp, #40]
  429d14:	str	x7, [sp, #32]
  429d18:	mov	w0, #0x1                   	// #1
  429d1c:	strb	w0, [sp, #8]
  429d20:	ldr	x0, [sp, #32]
  429d24:	str	x0, [sp]
  429d28:	ldr	x7, [sp, #40]
  429d2c:	mov	x6, #0x0                   	// #0
  429d30:	ldr	x5, [sp, #48]
  429d34:	ldr	x4, [sp, #56]
  429d38:	ldr	x3, [sp, #64]
  429d3c:	ldr	x2, [sp, #72]
  429d40:	ldr	x1, [sp, #80]
  429d44:	ldr	x0, [sp, #88]
  429d48:	bl	429dc0 <_obstack_memory_used@@Base+0xdbe0>
  429d4c:	ldp	x29, x30, [sp, #16]
  429d50:	add	sp, sp, #0x60
  429d54:	ret
  429d58:	sub	sp, sp, #0x60
  429d5c:	stp	x29, x30, [sp, #16]
  429d60:	add	x29, sp, #0x10
  429d64:	str	x0, [sp, #88]
  429d68:	str	x1, [sp, #80]
  429d6c:	str	x2, [sp, #72]
  429d70:	str	x3, [sp, #64]
  429d74:	str	x4, [sp, #56]
  429d78:	str	x5, [sp, #48]
  429d7c:	str	x6, [sp, #40]
  429d80:	str	x7, [sp, #32]
  429d84:	strb	wzr, [sp, #8]
  429d88:	ldr	x0, [sp, #96]
  429d8c:	str	x0, [sp]
  429d90:	ldr	x7, [sp, #32]
  429d94:	ldr	x6, [sp, #40]
  429d98:	ldr	x5, [sp, #48]
  429d9c:	ldr	x4, [sp, #56]
  429da0:	ldr	x3, [sp, #64]
  429da4:	ldr	x2, [sp, #72]
  429da8:	ldr	x1, [sp, #80]
  429dac:	ldr	x0, [sp, #88]
  429db0:	bl	429dc0 <_obstack_memory_used@@Base+0xdbe0>
  429db4:	ldp	x29, x30, [sp, #16]
  429db8:	add	sp, sp, #0x60
  429dbc:	ret
  429dc0:	stp	x29, x30, [sp, #-112]!
  429dc4:	mov	x29, sp
  429dc8:	str	x0, [sp, #72]
  429dcc:	str	x1, [sp, #64]
  429dd0:	str	x2, [sp, #56]
  429dd4:	str	x3, [sp, #48]
  429dd8:	str	x4, [sp, #40]
  429ddc:	str	x5, [sp, #32]
  429de0:	str	x6, [sp, #24]
  429de4:	str	x7, [sp, #16]
  429de8:	str	xzr, [sp, #96]
  429dec:	ldr	x0, [sp, #56]
  429df0:	lsr	x0, x0, #63
  429df4:	and	w0, w0, #0xff
  429df8:	and	x0, x0, #0xff
  429dfc:	cmp	x0, #0x0
  429e00:	b.ne	429e1c <_obstack_memory_used@@Base+0xdc3c>  // b.any
  429e04:	ldr	x0, [sp, #40]
  429e08:	lsr	x0, x0, #63
  429e0c:	and	w0, w0, #0xff
  429e10:	and	x0, x0, #0xff
  429e14:	cmp	x0, #0x0
  429e18:	b.eq	429e24 <_obstack_memory_used@@Base+0xdc44>  // b.none
  429e1c:	mov	w0, #0x1                   	// #1
  429e20:	b	429e28 <_obstack_memory_used@@Base+0xdc48>
  429e24:	mov	w0, #0x0                   	// #0
  429e28:	cmp	w0, #0x0
  429e2c:	b.ne	429e48 <_obstack_memory_used@@Base+0xdc68>  // b.any
  429e30:	ldr	x0, [sp, #112]
  429e34:	lsr	x0, x0, #63
  429e38:	and	w0, w0, #0xff
  429e3c:	and	x0, x0, #0xff
  429e40:	cmp	x0, #0x0
  429e44:	b.eq	429e50 <_obstack_memory_used@@Base+0xdc70>  // b.none
  429e48:	mov	w0, #0x1                   	// #1
  429e4c:	b	429e54 <_obstack_memory_used@@Base+0xdc74>
  429e50:	mov	w0, #0x0                   	// #0
  429e54:	cmp	w0, #0x0
  429e58:	b.ne	429e90 <_obstack_memory_used@@Base+0xdcb0>  // b.any
  429e5c:	mov	x2, #0x0                   	// #0
  429e60:	ldr	x1, [sp, #56]
  429e64:	ldr	x0, [sp, #40]
  429e68:	adds	x0, x1, x0
  429e6c:	b.vc	429e74 <_obstack_memory_used@@Base+0xdc94>
  429e70:	mov	x2, #0x1                   	// #1
  429e74:	str	x0, [sp, #80]
  429e78:	mov	x0, x2
  429e7c:	and	w0, w0, #0x1
  429e80:	and	w0, w0, #0xff
  429e84:	sxtw	x0, w0
  429e88:	cmp	x0, #0x0
  429e8c:	b.eq	429e98 <_obstack_memory_used@@Base+0xdcb8>  // b.none
  429e90:	mov	x0, #0xfffffffffffffffe    	// #-2
  429e94:	b	429f68 <_obstack_memory_used@@Base+0xdd88>
  429e98:	ldr	x0, [sp, #40]
  429e9c:	cmp	x0, #0x0
  429ea0:	b.le	429f28 <_obstack_memory_used@@Base+0xdd48>
  429ea4:	ldr	x0, [sp, #56]
  429ea8:	cmp	x0, #0x0
  429eac:	b.le	429f1c <_obstack_memory_used@@Base+0xdd3c>
  429eb0:	ldr	x0, [sp, #80]
  429eb4:	bl	4028b0 <malloc@plt>
  429eb8:	str	x0, [sp, #96]
  429ebc:	ldr	x0, [sp, #96]
  429ec0:	cmp	x0, #0x0
  429ec4:	cset	w0, eq  // eq = none
  429ec8:	and	w0, w0, #0xff
  429ecc:	and	x0, x0, #0xff
  429ed0:	cmp	x0, #0x0
  429ed4:	b.eq	429ee0 <_obstack_memory_used@@Base+0xdd00>  // b.none
  429ed8:	mov	x0, #0xfffffffffffffffe    	// #-2
  429edc:	b	429f68 <_obstack_memory_used@@Base+0xdd88>
  429ee0:	ldr	x0, [sp, #56]
  429ee4:	mov	x2, x0
  429ee8:	ldr	x1, [sp, #64]
  429eec:	ldr	x0, [sp, #96]
  429ef0:	bl	4026d0 <memcpy@plt>
  429ef4:	ldr	x0, [sp, #56]
  429ef8:	ldr	x1, [sp, #96]
  429efc:	add	x0, x1, x0
  429f00:	ldr	x1, [sp, #40]
  429f04:	mov	x2, x1
  429f08:	ldr	x1, [sp, #48]
  429f0c:	bl	4026d0 <memcpy@plt>
  429f10:	ldr	x0, [sp, #96]
  429f14:	str	x0, [sp, #104]
  429f18:	b	429f30 <_obstack_memory_used@@Base+0xdd50>
  429f1c:	ldr	x0, [sp, #48]
  429f20:	str	x0, [sp, #104]
  429f24:	b	429f30 <_obstack_memory_used@@Base+0xdd50>
  429f28:	ldr	x0, [sp, #64]
  429f2c:	str	x0, [sp, #104]
  429f30:	ldr	x0, [sp, #80]
  429f34:	ldrb	w7, [sp, #120]
  429f38:	ldr	x6, [sp, #16]
  429f3c:	ldr	x5, [sp, #112]
  429f40:	ldr	x4, [sp, #24]
  429f44:	ldr	x3, [sp, #32]
  429f48:	mov	x2, x0
  429f4c:	ldr	x1, [sp, #104]
  429f50:	ldr	x0, [sp, #72]
  429f54:	bl	429f70 <_obstack_memory_used@@Base+0xdd90>
  429f58:	str	x0, [sp, #88]
  429f5c:	ldr	x0, [sp, #96]
  429f60:	bl	402b60 <free@plt>
  429f64:	ldr	x0, [sp, #88]
  429f68:	ldp	x29, x30, [sp], #112
  429f6c:	ret
  429f70:	sub	sp, sp, #0xa0
  429f74:	stp	x29, x30, [sp, #16]
  429f78:	add	x29, sp, #0x10
  429f7c:	str	x0, [sp, #88]
  429f80:	str	x1, [sp, #80]
  429f84:	str	x2, [sp, #72]
  429f88:	str	x3, [sp, #64]
  429f8c:	str	x4, [sp, #56]
  429f90:	str	x5, [sp, #48]
  429f94:	str	x6, [sp, #40]
  429f98:	strb	w7, [sp, #39]
  429f9c:	str	wzr, [sp, #132]
  429fa0:	ldr	x0, [sp, #88]
  429fa4:	ldr	x0, [x0]
  429fa8:	str	x0, [sp, #120]
  429fac:	ldr	x1, [sp, #64]
  429fb0:	ldr	x0, [sp, #56]
  429fb4:	add	x0, x1, x0
  429fb8:	str	x0, [sp, #136]
  429fbc:	ldr	x0, [sp, #64]
  429fc0:	lsr	x0, x0, #63
  429fc4:	and	w0, w0, #0xff
  429fc8:	and	x0, x0, #0xff
  429fcc:	cmp	x0, #0x0
  429fd0:	b.ne	429ff4 <_obstack_memory_used@@Base+0xde14>  // b.any
  429fd4:	ldr	x1, [sp, #64]
  429fd8:	ldr	x0, [sp, #72]
  429fdc:	cmp	x1, x0
  429fe0:	cset	w0, gt
  429fe4:	and	w0, w0, #0xff
  429fe8:	and	x0, x0, #0xff
  429fec:	cmp	x0, #0x0
  429ff0:	b.eq	429ffc <_obstack_memory_used@@Base+0xde1c>  // b.none
  429ff4:	mov	x0, #0xffffffffffffffff    	// #-1
  429ff8:	b	42a3ac <_obstack_memory_used@@Base+0xe1cc>
  429ffc:	ldr	x1, [sp, #72]
  42a000:	ldr	x0, [sp, #136]
  42a004:	cmp	x1, x0
  42a008:	cset	w0, lt  // lt = tstop
  42a00c:	and	w0, w0, #0xff
  42a010:	and	x0, x0, #0xff
  42a014:	cmp	x0, #0x0
  42a018:	b.ne	42a06c <_obstack_memory_used@@Base+0xde8c>  // b.any
  42a01c:	ldr	x0, [sp, #56]
  42a020:	mvn	x0, x0
  42a024:	lsr	x0, x0, #63
  42a028:	and	w0, w0, #0xff
  42a02c:	and	x0, x0, #0xff
  42a030:	cmp	x0, #0x0
  42a034:	b.eq	42a060 <_obstack_memory_used@@Base+0xde80>  // b.none
  42a038:	ldr	x1, [sp, #136]
  42a03c:	ldr	x0, [sp, #64]
  42a040:	cmp	x1, x0
  42a044:	cset	w0, lt  // lt = tstop
  42a048:	and	w0, w0, #0xff
  42a04c:	and	x0, x0, #0xff
  42a050:	cmp	x0, #0x0
  42a054:	b.eq	42a060 <_obstack_memory_used@@Base+0xde80>  // b.none
  42a058:	mov	w0, #0x1                   	// #1
  42a05c:	b	42a064 <_obstack_memory_used@@Base+0xde84>
  42a060:	mov	w0, #0x0                   	// #0
  42a064:	cmp	w0, #0x0
  42a068:	b.eq	42a078 <_obstack_memory_used@@Base+0xde98>  // b.none
  42a06c:	ldr	x0, [sp, #72]
  42a070:	str	x0, [sp, #136]
  42a074:	b	42a0e0 <_obstack_memory_used@@Base+0xdf00>
  42a078:	ldr	x0, [sp, #136]
  42a07c:	lsr	x0, x0, #63
  42a080:	and	w0, w0, #0xff
  42a084:	and	x0, x0, #0xff
  42a088:	cmp	x0, #0x0
  42a08c:	b.ne	42a0dc <_obstack_memory_used@@Base+0xdefc>  // b.any
  42a090:	ldr	x0, [sp, #56]
  42a094:	lsr	x0, x0, #63
  42a098:	and	w0, w0, #0xff
  42a09c:	and	x0, x0, #0xff
  42a0a0:	cmp	x0, #0x0
  42a0a4:	b.eq	42a0d0 <_obstack_memory_used@@Base+0xdef0>  // b.none
  42a0a8:	ldr	x1, [sp, #64]
  42a0ac:	ldr	x0, [sp, #136]
  42a0b0:	cmp	x1, x0
  42a0b4:	cset	w0, le
  42a0b8:	and	w0, w0, #0xff
  42a0bc:	and	x0, x0, #0xff
  42a0c0:	cmp	x0, #0x0
  42a0c4:	b.eq	42a0d0 <_obstack_memory_used@@Base+0xdef0>  // b.none
  42a0c8:	mov	w0, #0x1                   	// #1
  42a0cc:	b	42a0d4 <_obstack_memory_used@@Base+0xdef4>
  42a0d0:	mov	w0, #0x0                   	// #0
  42a0d4:	cmp	w0, #0x0
  42a0d8:	b.eq	42a0e0 <_obstack_memory_used@@Base+0xdf00>  // b.none
  42a0dc:	str	xzr, [sp, #136]
  42a0e0:	ldr	x0, [sp, #88]
  42a0e4:	ldrb	w0, [x0, #56]
  42a0e8:	lsr	w0, w0, #5
  42a0ec:	and	w0, w0, #0xff
  42a0f0:	and	w0, w0, #0x1
  42a0f4:	ldr	w1, [sp, #132]
  42a0f8:	orr	w0, w1, w0
  42a0fc:	str	w0, [sp, #132]
  42a100:	ldr	x0, [sp, #88]
  42a104:	ldrb	w0, [x0, #56]
  42a108:	lsr	w0, w0, #5
  42a10c:	and	w0, w0, #0xff
  42a110:	and	w0, w0, #0x2
  42a114:	ldr	w1, [sp, #132]
  42a118:	orr	w0, w1, w0
  42a11c:	str	w0, [sp, #132]
  42a120:	ldr	x1, [sp, #64]
  42a124:	ldr	x0, [sp, #136]
  42a128:	cmp	x1, x0
  42a12c:	b.ge	42a160 <_obstack_memory_used@@Base+0xdf80>  // b.tcont
  42a130:	ldr	x0, [sp, #88]
  42a134:	ldr	x0, [x0, #32]
  42a138:	cmp	x0, #0x0
  42a13c:	b.eq	42a160 <_obstack_memory_used@@Base+0xdf80>  // b.none
  42a140:	ldr	x0, [sp, #88]
  42a144:	ldrb	w0, [x0, #56]
  42a148:	and	w0, w0, #0x8
  42a14c:	and	w0, w0, #0xff
  42a150:	cmp	w0, #0x0
  42a154:	b.ne	42a160 <_obstack_memory_used@@Base+0xdf80>  // b.any
  42a158:	ldr	x0, [sp, #88]
  42a15c:	bl	421448 <_obstack_memory_used@@Base+0x5268>
  42a160:	ldr	x0, [sp, #88]
  42a164:	ldrb	w0, [x0, #56]
  42a168:	ubfx	x0, x0, #4, #1
  42a16c:	and	w0, w0, #0xff
  42a170:	and	x0, x0, #0xff
  42a174:	cmp	x0, #0x0
  42a178:	b.eq	42a180 <_obstack_memory_used@@Base+0xdfa0>  // b.none
  42a17c:	str	xzr, [sp, #40]
  42a180:	ldr	x0, [sp, #40]
  42a184:	cmp	x0, #0x0
  42a188:	b.ne	42a198 <_obstack_memory_used@@Base+0xdfb8>  // b.any
  42a18c:	mov	x0, #0x1                   	// #1
  42a190:	str	x0, [sp, #152]
  42a194:	b	42a230 <_obstack_memory_used@@Base+0xe050>
  42a198:	ldr	x0, [sp, #88]
  42a19c:	ldrb	w0, [x0, #56]
  42a1a0:	and	w0, w0, #0x6
  42a1a4:	and	w0, w0, #0xff
  42a1a8:	cmp	w0, #0x4
  42a1ac:	cset	w0, eq  // eq = none
  42a1b0:	and	w0, w0, #0xff
  42a1b4:	and	x0, x0, #0xff
  42a1b8:	cmp	x0, #0x0
  42a1bc:	b.eq	42a220 <_obstack_memory_used@@Base+0xe040>  // b.none
  42a1c0:	ldr	x0, [sp, #40]
  42a1c4:	ldr	x1, [x0]
  42a1c8:	ldr	x0, [sp, #88]
  42a1cc:	ldr	x0, [x0, #48]
  42a1d0:	cmp	x1, x0
  42a1d4:	cset	w0, ls  // ls = plast
  42a1d8:	and	w0, w0, #0xff
  42a1dc:	and	x0, x0, #0xff
  42a1e0:	cmp	x0, #0x0
  42a1e4:	b.eq	42a220 <_obstack_memory_used@@Base+0xe040>  // b.none
  42a1e8:	ldr	x0, [sp, #40]
  42a1ec:	ldr	x0, [x0]
  42a1f0:	str	x0, [sp, #152]
  42a1f4:	ldr	x0, [sp, #152]
  42a1f8:	cmp	x0, #0x0
  42a1fc:	cset	w0, le
  42a200:	and	w0, w0, #0xff
  42a204:	and	x0, x0, #0xff
  42a208:	cmp	x0, #0x0
  42a20c:	b.eq	42a230 <_obstack_memory_used@@Base+0xe050>  // b.none
  42a210:	str	xzr, [sp, #40]
  42a214:	mov	x0, #0x1                   	// #1
  42a218:	str	x0, [sp, #152]
  42a21c:	b	42a230 <_obstack_memory_used@@Base+0xe050>
  42a220:	ldr	x0, [sp, #88]
  42a224:	ldr	x0, [x0, #48]
  42a228:	add	x0, x0, #0x1
  42a22c:	str	x0, [sp, #152]
  42a230:	ldr	x0, [sp, #152]
  42a234:	lsl	x0, x0, #4
  42a238:	bl	4028b0 <malloc@plt>
  42a23c:	str	x0, [sp, #112]
  42a240:	ldr	x0, [sp, #112]
  42a244:	cmp	x0, #0x0
  42a248:	cset	w0, eq  // eq = none
  42a24c:	and	w0, w0, #0xff
  42a250:	and	x0, x0, #0xff
  42a254:	cmp	x0, #0x0
  42a258:	b.eq	42a268 <_obstack_memory_used@@Base+0xe088>  // b.none
  42a25c:	mov	x0, #0xfffffffffffffffe    	// #-2
  42a260:	str	x0, [sp, #144]
  42a264:	b	42a3a8 <_obstack_memory_used@@Base+0xe1c8>
  42a268:	ldr	x1, [sp, #152]
  42a26c:	ldr	w0, [sp, #132]
  42a270:	str	w0, [sp]
  42a274:	ldr	x7, [sp, #112]
  42a278:	mov	x6, x1
  42a27c:	ldr	x5, [sp, #48]
  42a280:	ldr	x4, [sp, #136]
  42a284:	ldr	x3, [sp, #64]
  42a288:	ldr	x2, [sp, #72]
  42a28c:	ldr	x1, [sp, #80]
  42a290:	ldr	x0, [sp, #88]
  42a294:	bl	42a714 <_obstack_memory_used@@Base+0xe534>
  42a298:	str	w0, [sp, #108]
  42a29c:	str	xzr, [sp, #144]
  42a2a0:	ldr	w0, [sp, #108]
  42a2a4:	cmp	w0, #0x0
  42a2a8:	b.eq	42a2cc <_obstack_memory_used@@Base+0xe0ec>  // b.none
  42a2ac:	ldr	w0, [sp, #108]
  42a2b0:	cmp	w0, #0x1
  42a2b4:	b.ne	42a2c0 <_obstack_memory_used@@Base+0xe0e0>  // b.any
  42a2b8:	mov	x0, #0xffffffffffffffff    	// #-1
  42a2bc:	b	42a2c4 <_obstack_memory_used@@Base+0xe0e4>
  42a2c0:	mov	x0, #0xfffffffffffffffe    	// #-2
  42a2c4:	str	x0, [sp, #144]
  42a2c8:	b	42a344 <_obstack_memory_used@@Base+0xe164>
  42a2cc:	ldr	x0, [sp, #40]
  42a2d0:	cmp	x0, #0x0
  42a2d4:	b.eq	42a344 <_obstack_memory_used@@Base+0xe164>  // b.none
  42a2d8:	ldr	x0, [sp, #88]
  42a2dc:	ldrb	w0, [x0, #56]
  42a2e0:	ubfx	x0, x0, #1, #2
  42a2e4:	and	w0, w0, #0xff
  42a2e8:	mov	w3, w0
  42a2ec:	ldr	x2, [sp, #152]
  42a2f0:	ldr	x1, [sp, #112]
  42a2f4:	ldr	x0, [sp, #40]
  42a2f8:	bl	42a3b8 <_obstack_memory_used@@Base+0xe1d8>
  42a2fc:	and	w0, w0, #0x3
  42a300:	and	w2, w0, #0xff
  42a304:	ldr	x1, [sp, #88]
  42a308:	ldrb	w0, [x1, #56]
  42a30c:	bfi	w0, w2, #1, #2
  42a310:	strb	w0, [x1, #56]
  42a314:	ldr	x0, [sp, #88]
  42a318:	ldrb	w0, [x0, #56]
  42a31c:	and	w0, w0, #0x6
  42a320:	and	w0, w0, #0xff
  42a324:	cmp	w0, #0x0
  42a328:	cset	w0, eq  // eq = none
  42a32c:	and	w0, w0, #0xff
  42a330:	and	x0, x0, #0xff
  42a334:	cmp	x0, #0x0
  42a338:	b.eq	42a344 <_obstack_memory_used@@Base+0xe164>  // b.none
  42a33c:	mov	x0, #0xfffffffffffffffe    	// #-2
  42a340:	str	x0, [sp, #144]
  42a344:	ldr	x0, [sp, #144]
  42a348:	cmp	x0, #0x0
  42a34c:	cset	w0, eq  // eq = none
  42a350:	and	w0, w0, #0xff
  42a354:	and	x0, x0, #0xff
  42a358:	cmp	x0, #0x0
  42a35c:	b.eq	42a3a0 <_obstack_memory_used@@Base+0xe1c0>  // b.none
  42a360:	ldrb	w0, [sp, #39]
  42a364:	cmp	w0, #0x0
  42a368:	b.eq	42a394 <_obstack_memory_used@@Base+0xe1b4>  // b.none
  42a36c:	ldr	x0, [sp, #112]
  42a370:	ldr	x0, [x0]
  42a374:	ldr	x1, [sp, #64]
  42a378:	cmp	x1, x0
  42a37c:	ldr	x0, [sp, #112]
  42a380:	ldr	x1, [x0, #8]
  42a384:	ldr	x0, [sp, #64]
  42a388:	sub	x0, x1, x0
  42a38c:	str	x0, [sp, #144]
  42a390:	b	42a3a0 <_obstack_memory_used@@Base+0xe1c0>
  42a394:	ldr	x0, [sp, #112]
  42a398:	ldr	x0, [x0]
  42a39c:	str	x0, [sp, #144]
  42a3a0:	ldr	x0, [sp, #112]
  42a3a4:	bl	402b60 <free@plt>
  42a3a8:	ldr	x0, [sp, #144]
  42a3ac:	ldp	x29, x30, [sp, #16]
  42a3b0:	add	sp, sp, #0xa0
  42a3b4:	ret
  42a3b8:	stp	x29, x30, [sp, #-96]!
  42a3bc:	mov	x29, sp
  42a3c0:	str	x0, [sp, #40]
  42a3c4:	str	x1, [sp, #32]
  42a3c8:	str	x2, [sp, #24]
  42a3cc:	str	w3, [sp, #20]
  42a3d0:	mov	w0, #0x1                   	// #1
  42a3d4:	str	w0, [sp, #92]
  42a3d8:	ldr	x0, [sp, #24]
  42a3dc:	add	x0, x0, #0x1
  42a3e0:	str	x0, [sp, #72]
  42a3e4:	ldr	w0, [sp, #20]
  42a3e8:	cmp	w0, #0x0
  42a3ec:	b.ne	42a48c <_obstack_memory_used@@Base+0xe2ac>  // b.any
  42a3f0:	ldr	x0, [sp, #72]
  42a3f4:	lsl	x0, x0, #3
  42a3f8:	bl	4028b0 <malloc@plt>
  42a3fc:	mov	x1, x0
  42a400:	ldr	x0, [sp, #40]
  42a404:	str	x1, [x0, #8]
  42a408:	ldr	x0, [sp, #40]
  42a40c:	ldr	x0, [x0, #8]
  42a410:	cmp	x0, #0x0
  42a414:	cset	w0, eq  // eq = none
  42a418:	and	w0, w0, #0xff
  42a41c:	and	x0, x0, #0xff
  42a420:	cmp	x0, #0x0
  42a424:	b.eq	42a430 <_obstack_memory_used@@Base+0xe250>  // b.none
  42a428:	mov	w0, #0x0                   	// #0
  42a42c:	b	42a670 <_obstack_memory_used@@Base+0xe490>
  42a430:	ldr	x0, [sp, #72]
  42a434:	lsl	x0, x0, #3
  42a438:	bl	4028b0 <malloc@plt>
  42a43c:	mov	x1, x0
  42a440:	ldr	x0, [sp, #40]
  42a444:	str	x1, [x0, #16]
  42a448:	ldr	x0, [sp, #40]
  42a44c:	ldr	x0, [x0, #16]
  42a450:	cmp	x0, #0x0
  42a454:	cset	w0, eq  // eq = none
  42a458:	and	w0, w0, #0xff
  42a45c:	and	x0, x0, #0xff
  42a460:	cmp	x0, #0x0
  42a464:	b.eq	42a47c <_obstack_memory_used@@Base+0xe29c>  // b.none
  42a468:	ldr	x0, [sp, #40]
  42a46c:	ldr	x0, [x0, #8]
  42a470:	bl	402b60 <free@plt>
  42a474:	mov	w0, #0x0                   	// #0
  42a478:	b	42a670 <_obstack_memory_used@@Base+0xe490>
  42a47c:	ldr	x1, [sp, #72]
  42a480:	ldr	x0, [sp, #40]
  42a484:	str	x1, [x0]
  42a488:	b	42a594 <_obstack_memory_used@@Base+0xe3b4>
  42a48c:	ldr	w0, [sp, #20]
  42a490:	cmp	w0, #0x1
  42a494:	b.ne	42a574 <_obstack_memory_used@@Base+0xe394>  // b.any
  42a498:	ldr	x0, [sp, #40]
  42a49c:	ldr	x1, [x0]
  42a4a0:	ldr	x0, [sp, #72]
  42a4a4:	cmp	x1, x0
  42a4a8:	cset	w0, cc  // cc = lo, ul, last
  42a4ac:	and	w0, w0, #0xff
  42a4b0:	and	x0, x0, #0xff
  42a4b4:	cmp	x0, #0x0
  42a4b8:	b.eq	42a594 <_obstack_memory_used@@Base+0xe3b4>  // b.none
  42a4bc:	ldr	x0, [sp, #40]
  42a4c0:	ldr	x2, [x0, #8]
  42a4c4:	ldr	x0, [sp, #72]
  42a4c8:	lsl	x0, x0, #3
  42a4cc:	mov	x1, x0
  42a4d0:	mov	x0, x2
  42a4d4:	bl	4029e0 <realloc@plt>
  42a4d8:	str	x0, [sp, #64]
  42a4dc:	ldr	x0, [sp, #64]
  42a4e0:	cmp	x0, #0x0
  42a4e4:	cset	w0, eq  // eq = none
  42a4e8:	and	w0, w0, #0xff
  42a4ec:	and	x0, x0, #0xff
  42a4f0:	cmp	x0, #0x0
  42a4f4:	b.eq	42a500 <_obstack_memory_used@@Base+0xe320>  // b.none
  42a4f8:	mov	w0, #0x0                   	// #0
  42a4fc:	b	42a670 <_obstack_memory_used@@Base+0xe490>
  42a500:	ldr	x0, [sp, #40]
  42a504:	ldr	x2, [x0, #16]
  42a508:	ldr	x0, [sp, #72]
  42a50c:	lsl	x0, x0, #3
  42a510:	mov	x1, x0
  42a514:	mov	x0, x2
  42a518:	bl	4029e0 <realloc@plt>
  42a51c:	str	x0, [sp, #56]
  42a520:	ldr	x0, [sp, #56]
  42a524:	cmp	x0, #0x0
  42a528:	cset	w0, eq  // eq = none
  42a52c:	and	w0, w0, #0xff
  42a530:	and	x0, x0, #0xff
  42a534:	cmp	x0, #0x0
  42a538:	b.eq	42a54c <_obstack_memory_used@@Base+0xe36c>  // b.none
  42a53c:	ldr	x0, [sp, #64]
  42a540:	bl	402b60 <free@plt>
  42a544:	mov	w0, #0x0                   	// #0
  42a548:	b	42a670 <_obstack_memory_used@@Base+0xe490>
  42a54c:	ldr	x0, [sp, #40]
  42a550:	ldr	x1, [sp, #64]
  42a554:	str	x1, [x0, #8]
  42a558:	ldr	x0, [sp, #40]
  42a55c:	ldr	x1, [sp, #56]
  42a560:	str	x1, [x0, #16]
  42a564:	ldr	x1, [sp, #72]
  42a568:	ldr	x0, [sp, #40]
  42a56c:	str	x1, [x0]
  42a570:	b	42a594 <_obstack_memory_used@@Base+0xe3b4>
  42a574:	ldr	w0, [sp, #20]
  42a578:	cmp	w0, #0x2
  42a57c:	ldr	x0, [sp, #40]
  42a580:	ldr	x1, [x0]
  42a584:	ldr	x0, [sp, #24]
  42a588:	cmp	x1, x0
  42a58c:	mov	w0, #0x2                   	// #2
  42a590:	str	w0, [sp, #92]
  42a594:	str	xzr, [sp, #80]
  42a598:	b	42a600 <_obstack_memory_used@@Base+0xe420>
  42a59c:	ldr	x0, [sp, #80]
  42a5a0:	lsl	x0, x0, #4
  42a5a4:	ldr	x1, [sp, #32]
  42a5a8:	add	x1, x1, x0
  42a5ac:	ldr	x0, [sp, #40]
  42a5b0:	ldr	x2, [x0, #8]
  42a5b4:	ldr	x0, [sp, #80]
  42a5b8:	lsl	x0, x0, #3
  42a5bc:	add	x0, x2, x0
  42a5c0:	ldr	x1, [x1]
  42a5c4:	str	x1, [x0]
  42a5c8:	ldr	x0, [sp, #80]
  42a5cc:	lsl	x0, x0, #4
  42a5d0:	ldr	x1, [sp, #32]
  42a5d4:	add	x1, x1, x0
  42a5d8:	ldr	x0, [sp, #40]
  42a5dc:	ldr	x2, [x0, #16]
  42a5e0:	ldr	x0, [sp, #80]
  42a5e4:	lsl	x0, x0, #3
  42a5e8:	add	x0, x2, x0
  42a5ec:	ldr	x1, [x1, #8]
  42a5f0:	str	x1, [x0]
  42a5f4:	ldr	x0, [sp, #80]
  42a5f8:	add	x0, x0, #0x1
  42a5fc:	str	x0, [sp, #80]
  42a600:	ldr	x1, [sp, #80]
  42a604:	ldr	x0, [sp, #24]
  42a608:	cmp	x1, x0
  42a60c:	b.lt	42a59c <_obstack_memory_used@@Base+0xe3bc>  // b.tstop
  42a610:	b	42a658 <_obstack_memory_used@@Base+0xe478>
  42a614:	ldr	x0, [sp, #40]
  42a618:	ldr	x1, [x0, #16]
  42a61c:	ldr	x0, [sp, #80]
  42a620:	lsl	x0, x0, #3
  42a624:	add	x0, x1, x0
  42a628:	mov	x1, #0xffffffffffffffff    	// #-1
  42a62c:	str	x1, [x0]
  42a630:	ldr	x1, [sp, #40]
  42a634:	ldr	x2, [x1, #8]
  42a638:	ldr	x1, [sp, #80]
  42a63c:	lsl	x1, x1, #3
  42a640:	add	x1, x2, x1
  42a644:	ldr	x0, [x0]
  42a648:	str	x0, [x1]
  42a64c:	ldr	x0, [sp, #80]
  42a650:	add	x0, x0, #0x1
  42a654:	str	x0, [sp, #80]
  42a658:	ldr	x0, [sp, #40]
  42a65c:	ldr	x1, [x0]
  42a660:	ldr	x0, [sp, #80]
  42a664:	cmp	x1, x0
  42a668:	b.hi	42a614 <_obstack_memory_used@@Base+0xe434>  // b.pmore
  42a66c:	ldr	w0, [sp, #92]
  42a670:	ldp	x29, x30, [sp], #96
  42a674:	ret
  42a678:	sub	sp, sp, #0x30
  42a67c:	str	x0, [sp, #40]
  42a680:	str	x1, [sp, #32]
  42a684:	str	x2, [sp, #24]
  42a688:	str	x3, [sp, #16]
  42a68c:	str	x4, [sp, #8]
  42a690:	ldr	x0, [sp, #24]
  42a694:	cmp	x0, #0x0
  42a698:	b.eq	42a6d8 <_obstack_memory_used@@Base+0xe4f8>  // b.none
  42a69c:	ldr	x1, [sp, #40]
  42a6a0:	ldrb	w0, [x1, #56]
  42a6a4:	mov	w2, #0x1                   	// #1
  42a6a8:	bfi	w0, w2, #1, #2
  42a6ac:	strb	w0, [x1, #56]
  42a6b0:	ldr	x0, [sp, #32]
  42a6b4:	ldr	x1, [sp, #24]
  42a6b8:	str	x1, [x0]
  42a6bc:	ldr	x0, [sp, #32]
  42a6c0:	ldr	x1, [sp, #16]
  42a6c4:	str	x1, [x0, #8]
  42a6c8:	ldr	x0, [sp, #32]
  42a6cc:	ldr	x1, [sp, #8]
  42a6d0:	str	x1, [x0, #16]
  42a6d4:	b	42a708 <_obstack_memory_used@@Base+0xe528>
  42a6d8:	ldr	x0, [sp, #40]
  42a6dc:	ldrb	w1, [x0, #56]
  42a6e0:	and	w1, w1, #0xfffffff9
  42a6e4:	strb	w1, [x0, #56]
  42a6e8:	ldr	x0, [sp, #32]
  42a6ec:	str	xzr, [x0]
  42a6f0:	ldr	x0, [sp, #32]
  42a6f4:	str	xzr, [x0, #16]
  42a6f8:	ldr	x0, [sp, #32]
  42a6fc:	ldr	x1, [x0, #16]
  42a700:	ldr	x0, [sp, #32]
  42a704:	str	x1, [x0, #8]
  42a708:	nop
  42a70c:	add	sp, sp, #0x30
  42a710:	ret
  42a714:	stp	x29, x30, [sp, #-464]!
  42a718:	mov	x29, sp
  42a71c:	str	x0, [sp, #72]
  42a720:	str	x1, [sp, #64]
  42a724:	str	x2, [sp, #56]
  42a728:	str	x3, [sp, #48]
  42a72c:	str	x4, [sp, #40]
  42a730:	str	x5, [sp, #32]
  42a734:	str	x6, [sp, #24]
  42a738:	str	x7, [sp, #16]
  42a73c:	ldr	x0, [sp, #72]
  42a740:	ldr	x0, [x0]
  42a744:	str	x0, [sp, #432]
  42a748:	mov	x0, #0xffffffffffffffff    	// #-1
  42a74c:	str	x0, [sp, #424]
  42a750:	add	x0, sp, #0x58
  42a754:	mov	x1, #0x100                 	// #256
  42a758:	mov	x2, x1
  42a75c:	mov	w1, #0x0                   	// #0
  42a760:	bl	402980 <memset@plt>
  42a764:	ldr	x0, [sp, #432]
  42a768:	str	x0, [sp, #240]
  42a76c:	ldr	x0, [sp, #72]
  42a770:	ldr	x0, [x0, #32]
  42a774:	cmp	x0, #0x0
  42a778:	b.eq	42a7c8 <_obstack_memory_used@@Base+0xe5e8>  // b.none
  42a77c:	ldr	x0, [sp, #72]
  42a780:	ldrb	w0, [x0, #56]
  42a784:	and	w0, w0, #0x8
  42a788:	and	w0, w0, #0xff
  42a78c:	cmp	w0, #0x0
  42a790:	b.eq	42a7c8 <_obstack_memory_used@@Base+0xe5e8>  // b.none
  42a794:	ldr	x1, [sp, #48]
  42a798:	ldr	x0, [sp, #40]
  42a79c:	cmp	x1, x0
  42a7a0:	b.eq	42a7c8 <_obstack_memory_used@@Base+0xe5e8>  // b.none
  42a7a4:	ldr	x0, [sp, #72]
  42a7a8:	ldrb	w0, [x0, #56]
  42a7ac:	and	w0, w0, #0x1
  42a7b0:	and	w0, w0, #0xff
  42a7b4:	cmp	w0, #0x0
  42a7b8:	b.ne	42a7c8 <_obstack_memory_used@@Base+0xe5e8>  // b.any
  42a7bc:	ldr	x0, [sp, #72]
  42a7c0:	ldr	x0, [x0, #32]
  42a7c4:	b	42a7cc <_obstack_memory_used@@Base+0xe5ec>
  42a7c8:	mov	x0, #0x0                   	// #0
  42a7cc:	str	x0, [sp, #416]
  42a7d0:	ldr	x0, [sp, #72]
  42a7d4:	ldr	x0, [x0, #40]
  42a7d8:	str	x0, [sp, #408]
  42a7dc:	ldr	x0, [sp, #72]
  42a7e0:	ldr	x0, [x0, #48]
  42a7e4:	ldr	x1, [sp, #24]
  42a7e8:	cmp	x1, x0
  42a7ec:	b.ls	42a808 <_obstack_memory_used@@Base+0xe628>  // b.plast
  42a7f0:	ldr	x0, [sp, #72]
  42a7f4:	ldr	x0, [x0, #48]
  42a7f8:	ldr	x1, [sp, #24]
  42a7fc:	sub	x0, x1, x0
  42a800:	sub	x0, x0, #0x1
  42a804:	b	42a80c <_obstack_memory_used@@Base+0xe62c>
  42a808:	mov	x0, #0x0                   	// #0
  42a80c:	str	x0, [sp, #400]
  42a810:	ldr	x0, [sp, #400]
  42a814:	ldr	x1, [sp, #24]
  42a818:	sub	x0, x1, x0
  42a81c:	str	x0, [sp, #24]
  42a820:	ldr	x0, [sp, #72]
  42a824:	ldr	x0, [x0, #16]
  42a828:	cmp	x0, #0x0
  42a82c:	cset	w0, eq  // eq = none
  42a830:	and	w0, w0, #0xff
  42a834:	and	x0, x0, #0xff
  42a838:	cmp	x0, #0x0
  42a83c:	b.ne	42a860 <_obstack_memory_used@@Base+0xe680>  // b.any
  42a840:	ldr	x0, [sp, #432]
  42a844:	ldr	x0, [x0, #72]
  42a848:	cmp	x0, #0x0
  42a84c:	cset	w0, eq  // eq = none
  42a850:	and	w0, w0, #0xff
  42a854:	and	x0, x0, #0xff
  42a858:	cmp	x0, #0x0
  42a85c:	b.eq	42a868 <_obstack_memory_used@@Base+0xe688>  // b.none
  42a860:	mov	w0, #0x1                   	// #1
  42a864:	b	42a86c <_obstack_memory_used@@Base+0xe68c>
  42a868:	mov	w0, #0x0                   	// #0
  42a86c:	cmp	w0, #0x0
  42a870:	b.ne	42a894 <_obstack_memory_used@@Base+0xe6b4>  // b.any
  42a874:	ldr	x0, [sp, #432]
  42a878:	ldr	x0, [x0, #80]
  42a87c:	cmp	x0, #0x0
  42a880:	cset	w0, eq  // eq = none
  42a884:	and	w0, w0, #0xff
  42a888:	and	x0, x0, #0xff
  42a88c:	cmp	x0, #0x0
  42a890:	b.eq	42a89c <_obstack_memory_used@@Base+0xe6bc>  // b.none
  42a894:	mov	w0, #0x1                   	// #1
  42a898:	b	42a8a0 <_obstack_memory_used@@Base+0xe6c0>
  42a89c:	mov	w0, #0x0                   	// #0
  42a8a0:	cmp	w0, #0x0
  42a8a4:	b.ne	42a8c8 <_obstack_memory_used@@Base+0xe6e8>  // b.any
  42a8a8:	ldr	x0, [sp, #432]
  42a8ac:	ldr	x0, [x0, #88]
  42a8b0:	cmp	x0, #0x0
  42a8b4:	cset	w0, eq  // eq = none
  42a8b8:	and	w0, w0, #0xff
  42a8bc:	and	x0, x0, #0xff
  42a8c0:	cmp	x0, #0x0
  42a8c4:	b.eq	42a8d0 <_obstack_memory_used@@Base+0xe6f0>  // b.none
  42a8c8:	mov	w0, #0x1                   	// #1
  42a8cc:	b	42a8d4 <_obstack_memory_used@@Base+0xe6f4>
  42a8d0:	mov	w0, #0x0                   	// #0
  42a8d4:	cmp	w0, #0x0
  42a8d8:	b.ne	42a8fc <_obstack_memory_used@@Base+0xe71c>  // b.any
  42a8dc:	ldr	x0, [sp, #432]
  42a8e0:	ldr	x0, [x0, #96]
  42a8e4:	cmp	x0, #0x0
  42a8e8:	cset	w0, eq  // eq = none
  42a8ec:	and	w0, w0, #0xff
  42a8f0:	and	x0, x0, #0xff
  42a8f4:	cmp	x0, #0x0
  42a8f8:	b.eq	42a904 <_obstack_memory_used@@Base+0xe724>  // b.none
  42a8fc:	mov	w0, #0x1                   	// #1
  42a900:	b	42b628 <_obstack_memory_used@@Base+0xf448>
  42a904:	ldr	x0, [sp, #40]
  42a908:	cmp	x0, #0x0
  42a90c:	b.lt	42a920 <_obstack_memory_used@@Base+0xe740>  // b.tstop
  42a910:	ldr	x1, [sp, #40]
  42a914:	ldr	x0, [sp, #56]
  42a918:	cmp	x1, x0
  42a91c:	b.le	42a920 <_obstack_memory_used@@Base+0xe740>
  42a920:	ldr	x0, [sp, #432]
  42a924:	ldr	x0, [x0, #72]
  42a928:	ldr	x0, [x0, #16]
  42a92c:	cmp	x0, #0x0
  42a930:	b.ne	42a9a0 <_obstack_memory_used@@Base+0xe7c0>  // b.any
  42a934:	ldr	x0, [sp, #432]
  42a938:	ldr	x0, [x0, #80]
  42a93c:	ldr	x0, [x0, #16]
  42a940:	cmp	x0, #0x0
  42a944:	b.ne	42a9a0 <_obstack_memory_used@@Base+0xe7c0>  // b.any
  42a948:	ldr	x0, [sp, #432]
  42a94c:	ldr	x0, [x0, #88]
  42a950:	ldr	x0, [x0, #16]
  42a954:	cmp	x0, #0x0
  42a958:	b.eq	42a974 <_obstack_memory_used@@Base+0xe794>  // b.none
  42a95c:	ldr	x0, [sp, #72]
  42a960:	ldrb	w0, [x0, #56]
  42a964:	and	w0, w0, #0xffffff80
  42a968:	and	w0, w0, #0xff
  42a96c:	cmp	w0, #0x0
  42a970:	b.ne	42a9a0 <_obstack_memory_used@@Base+0xe7c0>  // b.any
  42a974:	ldr	x0, [sp, #48]
  42a978:	cmp	x0, #0x0
  42a97c:	b.eq	42a994 <_obstack_memory_used@@Base+0xe7b4>  // b.none
  42a980:	ldr	x0, [sp, #40]
  42a984:	cmp	x0, #0x0
  42a988:	b.eq	42a994 <_obstack_memory_used@@Base+0xe7b4>  // b.none
  42a98c:	mov	w0, #0x1                   	// #1
  42a990:	b	42b628 <_obstack_memory_used@@Base+0xf448>
  42a994:	str	xzr, [sp, #40]
  42a998:	ldr	x0, [sp, #40]
  42a99c:	str	x0, [sp, #48]
  42a9a0:	ldr	x0, [sp, #24]
  42a9a4:	cmp	x0, #0x0
  42a9a8:	b.ne	42a9bc <_obstack_memory_used@@Base+0xe7dc>  // b.any
  42a9ac:	ldr	x0, [sp, #432]
  42a9b0:	ldr	x0, [x0, #152]
  42a9b4:	cmp	x0, #0x0
  42a9b8:	b.eq	42a9c4 <_obstack_memory_used@@Base+0xe7e4>  // b.none
  42a9bc:	mov	w0, #0x1                   	// #1
  42a9c0:	b	42a9c8 <_obstack_memory_used@@Base+0xe7e8>
  42a9c4:	mov	w0, #0x0                   	// #0
  42a9c8:	strb	w0, [sp, #399]
  42a9cc:	ldrb	w0, [sp, #399]
  42a9d0:	and	w0, w0, #0x1
  42a9d4:	strb	w0, [sp, #399]
  42a9d8:	ldr	x0, [sp, #432]
  42a9dc:	ldr	x0, [x0, #16]
  42a9e0:	add	x0, x0, #0x1
  42a9e4:	mov	x3, x0
  42a9e8:	ldr	x0, [sp, #72]
  42a9ec:	ldr	x1, [x0, #40]
  42a9f0:	ldr	x0, [sp, #72]
  42a9f4:	ldr	x0, [x0, #24]
  42a9f8:	and	x0, x0, #0x400000
  42a9fc:	cmp	x0, #0x0
  42aa00:	cset	w0, ne  // ne = any
  42aa04:	and	w2, w0, #0xff
  42aa08:	add	x0, sp, #0x58
  42aa0c:	ldr	x6, [sp, #432]
  42aa10:	mov	w5, w2
  42aa14:	mov	x4, x1
  42aa18:	ldr	x2, [sp, #56]
  42aa1c:	ldr	x1, [sp, #64]
  42aa20:	bl	41c6bc <_obstack_memory_used@@Base+0x4dc>
  42aa24:	str	w0, [sp, #460]
  42aa28:	ldr	w0, [sp, #460]
  42aa2c:	cmp	w0, #0x0
  42aa30:	cset	w0, ne  // ne = any
  42aa34:	and	w0, w0, #0xff
  42aa38:	and	x0, x0, #0xff
  42aa3c:	cmp	x0, #0x0
  42aa40:	b.ne	42b5c0 <_obstack_memory_used@@Base+0xf3e0>  // b.any
  42aa44:	ldr	x0, [sp, #32]
  42aa48:	str	x0, [sp, #192]
  42aa4c:	ldr	x0, [sp, #32]
  42aa50:	str	x0, [sp, #184]
  42aa54:	ldr	x0, [sp, #72]
  42aa58:	ldrb	w0, [x0, #56]
  42aa5c:	ubfx	x0, x0, #7, #1
  42aa60:	and	w0, w0, #0xff
  42aa64:	strb	w0, [sp, #229]
  42aa68:	ldr	x0, [sp, #432]
  42aa6c:	ldr	x0, [x0, #152]
  42aa70:	lsl	x1, x0, #1
  42aa74:	add	x0, sp, #0x58
  42aa78:	mov	x2, x1
  42aa7c:	ldr	w1, [sp, #464]
  42aa80:	bl	4331c4 <_obstack_memory_used@@Base+0x16fe4>
  42aa84:	str	w0, [sp, #460]
  42aa88:	ldr	w0, [sp, #460]
  42aa8c:	cmp	w0, #0x0
  42aa90:	cset	w0, ne  // ne = any
  42aa94:	and	w0, w0, #0xff
  42aa98:	and	x0, x0, #0xff
  42aa9c:	cmp	x0, #0x0
  42aaa0:	b.ne	42b5c8 <_obstack_memory_used@@Base+0xf3e8>  // b.any
  42aaa4:	ldr	x0, [sp, #24]
  42aaa8:	cmp	x0, #0x1
  42aaac:	b.hi	42aac8 <_obstack_memory_used@@Base+0xe8e8>  // b.pmore
  42aab0:	ldr	x0, [sp, #432]
  42aab4:	ldrb	w0, [x0, #176]
  42aab8:	and	w0, w0, #0x2
  42aabc:	and	w0, w0, #0xff
  42aac0:	cmp	w0, #0x0
  42aac4:	b.eq	42ab34 <_obstack_memory_used@@Base+0xe954>  // b.none
  42aac8:	ldr	x0, [sp, #152]
  42aacc:	mov	x1, x0
  42aad0:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  42aad4:	cmp	x1, x0
  42aad8:	cset	w0, hi  // hi = pmore
  42aadc:	and	w0, w0, #0xff
  42aae0:	and	x0, x0, #0xff
  42aae4:	cmp	x0, #0x0
  42aae8:	b.eq	42aaf8 <_obstack_memory_used@@Base+0xe918>  // b.none
  42aaec:	mov	w0, #0xc                   	// #12
  42aaf0:	str	w0, [sp, #460]
  42aaf4:	b	42b5fc <_obstack_memory_used@@Base+0xf41c>
  42aaf8:	ldr	x0, [sp, #152]
  42aafc:	add	x0, x0, #0x1
  42ab00:	lsl	x0, x0, #3
  42ab04:	bl	4028b0 <malloc@plt>
  42ab08:	str	x0, [sp, #272]
  42ab0c:	ldr	x0, [sp, #272]
  42ab10:	cmp	x0, #0x0
  42ab14:	cset	w0, eq  // eq = none
  42ab18:	and	w0, w0, #0xff
  42ab1c:	and	x0, x0, #0xff
  42ab20:	cmp	x0, #0x0
  42ab24:	b.eq	42ab34 <_obstack_memory_used@@Base+0xe954>  // b.none
  42ab28:	mov	w0, #0xc                   	// #12
  42ab2c:	str	w0, [sp, #460]
  42ab30:	b	42b5fc <_obstack_memory_used@@Base+0xf41c>
  42ab34:	ldr	x0, [sp, #48]
  42ab38:	str	x0, [sp, #344]
  42ab3c:	ldr	w0, [sp, #464]
  42ab40:	and	w0, w0, #0x1
  42ab44:	cmp	w0, #0x0
  42ab48:	b.eq	42ab54 <_obstack_memory_used@@Base+0xe974>  // b.none
  42ab4c:	mov	w0, #0x4                   	// #4
  42ab50:	b	42ab58 <_obstack_memory_used@@Base+0xe978>
  42ab54:	mov	w0, #0x6                   	// #6
  42ab58:	str	w0, [sp, #200]
  42ab5c:	ldr	x1, [sp, #40]
  42ab60:	ldr	x0, [sp, #48]
  42ab64:	cmp	x1, x0
  42ab68:	b.ge	42ab74 <_obstack_memory_used@@Base+0xe994>  // b.tcont
  42ab6c:	mov	w0, #0xffffffff            	// #-1
  42ab70:	b	42ab78 <_obstack_memory_used@@Base+0xe998>
  42ab74:	mov	w0, #0x1                   	// #1
  42ab78:	str	w0, [sp, #392]
  42ab7c:	ldr	x0, [sp, #40]
  42ab80:	ldr	x2, [sp, #48]
  42ab84:	ldr	x1, [sp, #48]
  42ab88:	cmp	x2, x0
  42ab8c:	csel	x0, x1, x0, le
  42ab90:	str	x0, [sp, #384]
  42ab94:	ldr	x0, [sp, #48]
  42ab98:	ldr	x2, [sp, #40]
  42ab9c:	ldr	x1, [sp, #40]
  42aba0:	cmp	x2, x0
  42aba4:	csel	x0, x1, x0, ge  // ge = tcont
  42aba8:	str	x0, [sp, #376]
  42abac:	ldr	x0, [sp, #432]
  42abb0:	ldr	w0, [x0, #180]
  42abb4:	cmp	w0, #0x1
  42abb8:	cset	w0, eq  // eq = none
  42abbc:	strb	w0, [sp, #375]
  42abc0:	ldr	x0, [sp, #416]
  42abc4:	cmp	x0, #0x0
  42abc8:	b.eq	42ac3c <_obstack_memory_used@@Base+0xea5c>  // b.none
  42abcc:	ldrb	w0, [sp, #375]
  42abd0:	cmp	w0, #0x0
  42abd4:	b.ne	42abf8 <_obstack_memory_used@@Base+0xea18>  // b.any
  42abd8:	ldr	x0, [sp, #72]
  42abdc:	ldr	x0, [x0, #24]
  42abe0:	and	x0, x0, #0x400000
  42abe4:	cmp	x0, #0x0
  42abe8:	b.ne	42ac00 <_obstack_memory_used@@Base+0xea20>  // b.any
  42abec:	ldr	x0, [sp, #408]
  42abf0:	cmp	x0, #0x0
  42abf4:	b.ne	42ac00 <_obstack_memory_used@@Base+0xea20>  // b.any
  42abf8:	mov	w1, #0x4                   	// #4
  42abfc:	b	42ac04 <_obstack_memory_used@@Base+0xea24>
  42ac00:	mov	w1, #0x0                   	// #0
  42ac04:	ldr	x2, [sp, #48]
  42ac08:	ldr	x0, [sp, #40]
  42ac0c:	cmp	x2, x0
  42ac10:	b.gt	42ac1c <_obstack_memory_used@@Base+0xea3c>
  42ac14:	mov	w0, #0x2                   	// #2
  42ac18:	b	42ac20 <_obstack_memory_used@@Base+0xea40>
  42ac1c:	mov	w0, #0x0                   	// #0
  42ac20:	orr	w0, w1, w0
  42ac24:	ldr	x1, [sp, #408]
  42ac28:	cmp	x1, #0x0
  42ac2c:	cset	w1, ne  // ne = any
  42ac30:	and	w1, w1, #0xff
  42ac34:	orr	w0, w0, w1
  42ac38:	b	42ac40 <_obstack_memory_used@@Base+0xea60>
  42ac3c:	mov	w0, #0x8                   	// #8
  42ac40:	str	w0, [sp, #368]
  42ac44:	mov	w0, #0x1                   	// #1
  42ac48:	str	w0, [sp, #460]
  42ac4c:	ldr	x0, [sp, #344]
  42ac50:	ldr	x1, [sp, #384]
  42ac54:	cmp	x1, x0
  42ac58:	b.gt	42b5d0 <_obstack_memory_used@@Base+0xf3f0>
  42ac5c:	ldr	x0, [sp, #344]
  42ac60:	ldr	x1, [sp, #376]
  42ac64:	cmp	x1, x0
  42ac68:	b.lt	42b5d0 <_obstack_memory_used@@Base+0xf3f0>  // b.tstop
  42ac6c:	ldr	w0, [sp, #368]
  42ac70:	cmp	w0, #0x8
  42ac74:	b.eq	42afcc <_obstack_memory_used@@Base+0xedec>  // b.none
  42ac78:	ldr	w0, [sp, #368]
  42ac7c:	cmp	w0, #0x8
  42ac80:	b.gt	42aed0 <_obstack_memory_used@@Base+0xecf0>
  42ac84:	ldr	w0, [sp, #368]
  42ac88:	cmp	w0, #0x7
  42ac8c:	b.eq	42acd4 <_obstack_memory_used@@Base+0xeaf4>  // b.none
  42ac90:	ldr	w0, [sp, #368]
  42ac94:	cmp	w0, #0x7
  42ac98:	b.gt	42aed0 <_obstack_memory_used@@Base+0xecf0>
  42ac9c:	ldr	w0, [sp, #368]
  42aca0:	cmp	w0, #0x5
  42aca4:	b.gt	42acb8 <_obstack_memory_used@@Base+0xead8>
  42aca8:	ldr	w0, [sp, #368]
  42acac:	cmp	w0, #0x4
  42acb0:	b.ge	42aea4 <_obstack_memory_used@@Base+0xecc4>  // b.tcont
  42acb4:	b	42aed0 <_obstack_memory_used@@Base+0xecf0>
  42acb8:	ldr	w0, [sp, #368]
  42acbc:	cmp	w0, #0x6
  42acc0:	b.eq	42ad40 <_obstack_memory_used@@Base+0xeb60>  // b.none
  42acc4:	b	42aed0 <_obstack_memory_used@@Base+0xecf0>
  42acc8:	ldr	x0, [sp, #344]
  42accc:	add	x0, x0, #0x1
  42acd0:	str	x0, [sp, #344]
  42acd4:	ldr	x0, [sp, #344]
  42acd8:	ldr	x1, [sp, #376]
  42acdc:	cmp	x1, x0
  42ace0:	cset	w0, gt
  42ace4:	and	w0, w0, #0xff
  42ace8:	and	x0, x0, #0xff
  42acec:	cmp	x0, #0x0
  42acf0:	b.eq	42ad90 <_obstack_memory_used@@Base+0xebb0>  // b.none
  42acf4:	ldr	x0, [sp, #344]
  42acf8:	mov	x1, x0
  42acfc:	ldr	x0, [sp, #64]
  42ad00:	add	x0, x0, x1
  42ad04:	ldrb	w0, [x0]
  42ad08:	and	x0, x0, #0xff
  42ad0c:	ldr	x1, [sp, #408]
  42ad10:	add	x0, x1, x0
  42ad14:	ldrb	w0, [x0]
  42ad18:	and	x0, x0, #0xff
  42ad1c:	ldr	x1, [sp, #416]
  42ad20:	add	x0, x1, x0
  42ad24:	ldrb	w0, [x0]
  42ad28:	cmp	w0, #0x0
  42ad2c:	b.eq	42acc8 <_obstack_memory_used@@Base+0xeae8>  // b.none
  42ad30:	b	42ad90 <_obstack_memory_used@@Base+0xebb0>
  42ad34:	ldr	x0, [sp, #344]
  42ad38:	add	x0, x0, #0x1
  42ad3c:	str	x0, [sp, #344]
  42ad40:	ldr	x0, [sp, #344]
  42ad44:	ldr	x1, [sp, #376]
  42ad48:	cmp	x1, x0
  42ad4c:	cset	w0, gt
  42ad50:	and	w0, w0, #0xff
  42ad54:	and	x0, x0, #0xff
  42ad58:	cmp	x0, #0x0
  42ad5c:	b.eq	42ad98 <_obstack_memory_used@@Base+0xebb8>  // b.none
  42ad60:	ldr	x0, [sp, #344]
  42ad64:	mov	x1, x0
  42ad68:	ldr	x0, [sp, #64]
  42ad6c:	add	x0, x0, x1
  42ad70:	ldrb	w0, [x0]
  42ad74:	and	x0, x0, #0xff
  42ad78:	ldr	x1, [sp, #416]
  42ad7c:	add	x0, x1, x0
  42ad80:	ldrb	w0, [x0]
  42ad84:	cmp	w0, #0x0
  42ad88:	b.eq	42ad34 <_obstack_memory_used@@Base+0xeb54>  // b.none
  42ad8c:	b	42ad98 <_obstack_memory_used@@Base+0xebb8>
  42ad90:	nop
  42ad94:	b	42ad9c <_obstack_memory_used@@Base+0xebbc>
  42ad98:	nop
  42ad9c:	ldr	x0, [sp, #344]
  42ada0:	ldr	x1, [sp, #376]
  42ada4:	cmp	x1, x0
  42ada8:	cset	w0, eq  // eq = none
  42adac:	and	w0, w0, #0xff
  42adb0:	and	x0, x0, #0xff
  42adb4:	cmp	x0, #0x0
  42adb8:	b.eq	42afd4 <_obstack_memory_used@@Base+0xedf4>  // b.none
  42adbc:	ldr	x0, [sp, #344]
  42adc0:	ldr	x1, [sp, #56]
  42adc4:	cmp	x1, x0
  42adc8:	b.le	42ade4 <_obstack_memory_used@@Base+0xec04>
  42adcc:	ldr	x0, [sp, #344]
  42add0:	mov	x1, x0
  42add4:	ldr	x0, [sp, #64]
  42add8:	add	x0, x0, x1
  42addc:	ldrb	w0, [x0]
  42ade0:	b	42ade8 <_obstack_memory_used@@Base+0xec08>
  42ade4:	mov	w0, #0x0                   	// #0
  42ade8:	str	w0, [sp, #364]
  42adec:	ldr	x0, [sp, #408]
  42adf0:	cmp	x0, #0x0
  42adf4:	b.eq	42ae10 <_obstack_memory_used@@Base+0xec30>  // b.none
  42adf8:	ldrsw	x0, [sp, #364]
  42adfc:	ldr	x1, [sp, #408]
  42ae00:	add	x0, x1, x0
  42ae04:	ldrb	w0, [x0]
  42ae08:	and	x0, x0, #0xff
  42ae0c:	b	42ae14 <_obstack_memory_used@@Base+0xec34>
  42ae10:	ldrsw	x0, [sp, #364]
  42ae14:	ldr	x1, [sp, #416]
  42ae18:	add	x0, x1, x0
  42ae1c:	ldrb	w0, [x0]
  42ae20:	cmp	w0, #0x0
  42ae24:	b.ne	42afd4 <_obstack_memory_used@@Base+0xedf4>  // b.any
  42ae28:	b	42b5fc <_obstack_memory_used@@Base+0xf41c>
  42ae2c:	ldr	x0, [sp, #344]
  42ae30:	ldr	x1, [sp, #56]
  42ae34:	cmp	x1, x0
  42ae38:	b.le	42ae54 <_obstack_memory_used@@Base+0xec74>
  42ae3c:	ldr	x0, [sp, #344]
  42ae40:	mov	x1, x0
  42ae44:	ldr	x0, [sp, #64]
  42ae48:	add	x0, x0, x1
  42ae4c:	ldrb	w0, [x0]
  42ae50:	b	42ae58 <_obstack_memory_used@@Base+0xec78>
  42ae54:	mov	w0, #0x0                   	// #0
  42ae58:	str	w0, [sp, #364]
  42ae5c:	ldr	x0, [sp, #408]
  42ae60:	cmp	x0, #0x0
  42ae64:	b.eq	42ae80 <_obstack_memory_used@@Base+0xeca0>  // b.none
  42ae68:	ldrsw	x0, [sp, #364]
  42ae6c:	ldr	x1, [sp, #408]
  42ae70:	add	x0, x1, x0
  42ae74:	ldrb	w0, [x0]
  42ae78:	and	x0, x0, #0xff
  42ae7c:	b	42ae84 <_obstack_memory_used@@Base+0xeca4>
  42ae80:	ldrsw	x0, [sp, #364]
  42ae84:	ldr	x1, [sp, #416]
  42ae88:	add	x0, x1, x0
  42ae8c:	ldrb	w0, [x0]
  42ae90:	cmp	w0, #0x0
  42ae94:	b.ne	42aeb8 <_obstack_memory_used@@Base+0xecd8>  // b.any
  42ae98:	ldr	x0, [sp, #344]
  42ae9c:	sub	x0, x0, #0x1
  42aea0:	str	x0, [sp, #344]
  42aea4:	ldr	x0, [sp, #344]
  42aea8:	ldr	x1, [sp, #384]
  42aeac:	cmp	x1, x0
  42aeb0:	b.le	42ae2c <_obstack_memory_used@@Base+0xec4c>
  42aeb4:	b	42aebc <_obstack_memory_used@@Base+0xecdc>
  42aeb8:	nop
  42aebc:	ldr	x0, [sp, #344]
  42aec0:	ldr	x1, [sp, #384]
  42aec4:	cmp	x1, x0
  42aec8:	b.le	42afdc <_obstack_memory_used@@Base+0xedfc>
  42aecc:	b	42b5fc <_obstack_memory_used@@Base+0xf41c>
  42aed0:	ldr	x1, [sp, #344]
  42aed4:	ldr	x0, [sp, #128]
  42aed8:	sub	x0, x1, x0
  42aedc:	str	x0, [sp, #448]
  42aee0:	ldr	x0, [sp, #144]
  42aee4:	mov	x1, x0
  42aee8:	ldr	x0, [sp, #448]
  42aeec:	cmp	x0, x1
  42aef0:	cset	w0, cs  // cs = hs, nlast
  42aef4:	and	w0, w0, #0xff
  42aef8:	and	x0, x0, #0xff
  42aefc:	cmp	x0, #0x0
  42af00:	b.eq	42af44 <_obstack_memory_used@@Base+0xed64>  // b.none
  42af04:	ldr	x1, [sp, #344]
  42af08:	add	x0, sp, #0x58
  42af0c:	ldr	w2, [sp, #464]
  42af10:	bl	41de28 <_obstack_memory_used@@Base+0x1c48>
  42af14:	str	w0, [sp, #460]
  42af18:	ldr	w0, [sp, #460]
  42af1c:	cmp	w0, #0x0
  42af20:	cset	w0, ne  // ne = any
  42af24:	and	w0, w0, #0xff
  42af28:	and	x0, x0, #0xff
  42af2c:	cmp	x0, #0x0
  42af30:	b.ne	42b5d8 <_obstack_memory_used@@Base+0xf3f8>  // b.any
  42af34:	ldr	x1, [sp, #344]
  42af38:	ldr	x0, [sp, #128]
  42af3c:	sub	x0, x1, x0
  42af40:	str	x0, [sp, #448]
  42af44:	ldr	x0, [sp, #344]
  42af48:	ldr	x1, [sp, #56]
  42af4c:	cmp	x1, x0
  42af50:	b.le	42af68 <_obstack_memory_used@@Base+0xed88>
  42af54:	ldr	x1, [sp, #96]
  42af58:	ldr	x0, [sp, #448]
  42af5c:	add	x0, x1, x0
  42af60:	ldrb	w0, [x0]
  42af64:	b	42af6c <_obstack_memory_used@@Base+0xed8c>
  42af68:	mov	w0, #0x0                   	// #0
  42af6c:	str	w0, [sp, #364]
  42af70:	ldrsw	x0, [sp, #364]
  42af74:	ldr	x1, [sp, #416]
  42af78:	add	x0, x1, x0
  42af7c:	ldrb	w0, [x0]
  42af80:	cmp	w0, #0x0
  42af84:	b.ne	42afc4 <_obstack_memory_used@@Base+0xede4>  // b.any
  42af88:	ldrsw	x1, [sp, #392]
  42af8c:	ldr	x0, [sp, #344]
  42af90:	add	x0, x1, x0
  42af94:	str	x0, [sp, #344]
  42af98:	ldr	x0, [sp, #344]
  42af9c:	ldr	x1, [sp, #384]
  42afa0:	cmp	x1, x0
  42afa4:	b.gt	42afb8 <_obstack_memory_used@@Base+0xedd8>
  42afa8:	ldr	x0, [sp, #344]
  42afac:	ldr	x1, [sp, #376]
  42afb0:	cmp	x1, x0
  42afb4:	b.ge	42aed0 <_obstack_memory_used@@Base+0xecf0>  // b.tcont
  42afb8:	mov	w0, #0x1                   	// #1
  42afbc:	str	w0, [sp, #460]
  42afc0:	b	42b5fc <_obstack_memory_used@@Base+0xf41c>
  42afc4:	nop
  42afc8:	b	42afe0 <_obstack_memory_used@@Base+0xee00>
  42afcc:	nop
  42afd0:	b	42afe0 <_obstack_memory_used@@Base+0xee00>
  42afd4:	nop
  42afd8:	b	42afe0 <_obstack_memory_used@@Base+0xee00>
  42afdc:	nop
  42afe0:	ldr	x1, [sp, #344]
  42afe4:	add	x0, sp, #0x58
  42afe8:	ldr	w2, [sp, #464]
  42afec:	bl	41de28 <_obstack_memory_used@@Base+0x1c48>
  42aff0:	str	w0, [sp, #460]
  42aff4:	ldr	w0, [sp, #460]
  42aff8:	cmp	w0, #0x0
  42affc:	cset	w0, ne  // ne = any
  42b000:	and	w0, w0, #0xff
  42b004:	and	x0, x0, #0xff
  42b008:	cmp	x0, #0x0
  42b00c:	b.ne	42b5e0 <_obstack_memory_used@@Base+0xf400>  // b.any
  42b010:	ldrb	w0, [sp, #375]
  42b014:	eor	w0, w0, #0x1
  42b018:	and	w0, w0, #0xff
  42b01c:	cmp	w0, #0x0
  42b020:	b.eq	42b040 <_obstack_memory_used@@Base+0xee60>  // b.none
  42b024:	ldr	x0, [sp, #136]
  42b028:	cmp	x0, #0x0
  42b02c:	b.eq	42b040 <_obstack_memory_used@@Base+0xee60>  // b.none
  42b030:	ldr	x0, [sp, #104]
  42b034:	ldr	w0, [x0]
  42b038:	cmn	w0, #0x1
  42b03c:	b.eq	42b1b4 <_obstack_memory_used@@Base+0xefd4>  // b.none
  42b040:	str	wzr, [sp, #312]
  42b044:	str	xzr, [sp, #288]
  42b048:	ldr	x0, [sp, #288]
  42b04c:	str	x0, [sp, #280]
  42b050:	ldr	x1, [sp, #48]
  42b054:	ldr	x0, [sp, #40]
  42b058:	cmp	x1, x0
  42b05c:	b.gt	42b068 <_obstack_memory_used@@Base+0xee88>
  42b060:	add	x0, sp, #0x158
  42b064:	b	42b06c <_obstack_memory_used@@Base+0xee8c>
  42b068:	mov	x0, #0x0                   	// #0
  42b06c:	add	x3, sp, #0x58
  42b070:	mov	x2, x0
  42b074:	ldrb	w1, [sp, #399]
  42b078:	mov	x0, x3
  42b07c:	bl	42b968 <_obstack_memory_used@@Base+0xf788>
  42b080:	str	x0, [sp, #424]
  42b084:	ldr	x0, [sp, #424]
  42b088:	cmn	x0, #0x1
  42b08c:	b.eq	42b1a8 <_obstack_memory_used@@Base+0xefc8>  // b.none
  42b090:	ldr	x0, [sp, #424]
  42b094:	cmn	x0, #0x2
  42b098:	cset	w0, eq  // eq = none
  42b09c:	and	w0, w0, #0xff
  42b0a0:	and	x0, x0, #0xff
  42b0a4:	cmp	x0, #0x0
  42b0a8:	b.eq	42b0b8 <_obstack_memory_used@@Base+0xeed8>  // b.none
  42b0ac:	mov	w0, #0xc                   	// #12
  42b0b0:	str	w0, [sp, #460]
  42b0b4:	b	42b5fc <_obstack_memory_used@@Base+0xf41c>
  42b0b8:	ldr	x0, [sp, #424]
  42b0bc:	str	x0, [sp, #256]
  42b0c0:	ldr	x0, [sp, #72]
  42b0c4:	ldrb	w0, [x0, #56]
  42b0c8:	and	w0, w0, #0x10
  42b0cc:	and	w0, w0, #0xff
  42b0d0:	cmp	w0, #0x0
  42b0d4:	b.ne	42b0e4 <_obstack_memory_used@@Base+0xef04>  // b.any
  42b0d8:	ldr	x0, [sp, #24]
  42b0dc:	cmp	x0, #0x1
  42b0e0:	b.hi	42b0f4 <_obstack_memory_used@@Base+0xef14>  // b.pmore
  42b0e4:	ldr	x0, [sp, #432]
  42b0e8:	ldr	x0, [x0, #152]
  42b0ec:	cmp	x0, #0x0
  42b0f0:	b.eq	42b120 <_obstack_memory_used@@Base+0xef40>  // b.none
  42b0f4:	ldr	x1, [sp, #272]
  42b0f8:	ldr	x0, [sp, #424]
  42b0fc:	lsl	x0, x0, #3
  42b100:	add	x0, x1, x0
  42b104:	ldr	x0, [x0]
  42b108:	str	x0, [sp, #352]
  42b10c:	add	x0, sp, #0x58
  42b110:	ldr	x2, [sp, #424]
  42b114:	ldr	x1, [sp, #352]
  42b118:	bl	42bff8 <_obstack_memory_used@@Base+0xfe18>
  42b11c:	str	x0, [sp, #264]
  42b120:	ldr	x0, [sp, #72]
  42b124:	ldrb	w0, [x0, #56]
  42b128:	and	w0, w0, #0x10
  42b12c:	and	w0, w0, #0xff
  42b130:	cmp	w0, #0x0
  42b134:	b.ne	42b15c <_obstack_memory_used@@Base+0xef7c>  // b.any
  42b138:	ldr	x0, [sp, #24]
  42b13c:	cmp	x0, #0x1
  42b140:	b.ls	42b15c <_obstack_memory_used@@Base+0xef7c>  // b.plast
  42b144:	ldr	x0, [sp, #432]
  42b148:	ldrb	w0, [x0, #176]
  42b14c:	and	w0, w0, #0x1
  42b150:	and	w0, w0, #0xff
  42b154:	cmp	w0, #0x0
  42b158:	b.ne	42b16c <_obstack_memory_used@@Base+0xef8c>  // b.any
  42b15c:	ldr	x0, [sp, #432]
  42b160:	ldr	x0, [x0, #152]
  42b164:	cmp	x0, #0x0
  42b168:	b.eq	42b1d0 <_obstack_memory_used@@Base+0xeff0>  // b.none
  42b16c:	add	x0, sp, #0x58
  42b170:	bl	42b630 <_obstack_memory_used@@Base+0xf450>
  42b174:	str	w0, [sp, #460]
  42b178:	ldr	w0, [sp, #460]
  42b17c:	cmp	w0, #0x0
  42b180:	b.eq	42b1cc <_obstack_memory_used@@Base+0xefec>  // b.none
  42b184:	ldr	w0, [sp, #460]
  42b188:	cmp	w0, #0x1
  42b18c:	cset	w0, ne  // ne = any
  42b190:	and	w0, w0, #0xff
  42b194:	and	x0, x0, #0xff
  42b198:	cmp	x0, #0x0
  42b19c:	b.ne	42b5e8 <_obstack_memory_used@@Base+0xf408>  // b.any
  42b1a0:	mov	x0, #0xffffffffffffffff    	// #-1
  42b1a4:	str	x0, [sp, #424]
  42b1a8:	add	x0, sp, #0x58
  42b1ac:	bl	433304 <_obstack_memory_used@@Base+0x17124>
  42b1b0:	b	42b1b8 <_obstack_memory_used@@Base+0xefd8>
  42b1b4:	nop
  42b1b8:	ldrsw	x1, [sp, #392]
  42b1bc:	ldr	x0, [sp, #344]
  42b1c0:	add	x0, x1, x0
  42b1c4:	str	x0, [sp, #344]
  42b1c8:	b	42ac44 <_obstack_memory_used@@Base+0xea64>
  42b1cc:	nop
  42b1d0:	ldr	x0, [sp, #424]
  42b1d4:	cmn	x0, #0x1
  42b1d8:	ldr	w0, [sp, #460]
  42b1dc:	cmp	w0, #0x0
  42b1e0:	ldr	x0, [sp, #24]
  42b1e4:	cmp	x0, #0x0
  42b1e8:	b.eq	42b5f0 <_obstack_memory_used@@Base+0xf410>  // b.none
  42b1ec:	mov	x0, #0x1                   	// #1
  42b1f0:	str	x0, [sp, #440]
  42b1f4:	b	42b234 <_obstack_memory_used@@Base+0xf054>
  42b1f8:	ldr	x0, [sp, #440]
  42b1fc:	lsl	x0, x0, #4
  42b200:	ldr	x1, [sp, #16]
  42b204:	add	x0, x1, x0
  42b208:	mov	x1, #0xffffffffffffffff    	// #-1
  42b20c:	str	x1, [x0, #8]
  42b210:	ldr	x1, [sp, #440]
  42b214:	lsl	x1, x1, #4
  42b218:	ldr	x2, [sp, #16]
  42b21c:	add	x1, x2, x1
  42b220:	ldr	x0, [x0, #8]
  42b224:	str	x0, [x1]
  42b228:	ldr	x0, [sp, #440]
  42b22c:	add	x0, x0, #0x1
  42b230:	str	x0, [sp, #440]
  42b234:	ldr	x0, [sp, #440]
  42b238:	ldr	x1, [sp, #24]
  42b23c:	cmp	x1, x0
  42b240:	b.hi	42b1f8 <_obstack_memory_used@@Base+0xf018>  // b.pmore
  42b244:	ldr	x0, [sp, #16]
  42b248:	str	xzr, [x0]
  42b24c:	ldr	x1, [sp, #256]
  42b250:	ldr	x0, [sp, #16]
  42b254:	str	x1, [x0, #8]
  42b258:	ldr	x0, [sp, #72]
  42b25c:	ldrb	w0, [x0, #56]
  42b260:	and	w0, w0, #0x10
  42b264:	and	w0, w0, #0xff
  42b268:	cmp	w0, #0x0
  42b26c:	b.ne	42b2f4 <_obstack_memory_used@@Base+0xf114>  // b.any
  42b270:	ldr	x0, [sp, #24]
  42b274:	cmp	x0, #0x1
  42b278:	b.ls	42b2f4 <_obstack_memory_used@@Base+0xf114>  // b.plast
  42b27c:	ldr	x0, [sp, #432]
  42b280:	ldrb	w0, [x0, #176]
  42b284:	and	w0, w0, #0x1
  42b288:	and	w0, w0, #0xff
  42b28c:	cmp	w0, #0x0
  42b290:	b.eq	42b2ac <_obstack_memory_used@@Base+0xf0cc>  // b.none
  42b294:	ldr	x0, [sp, #432]
  42b298:	ldr	x0, [x0, #152]
  42b29c:	cmp	x0, #0x0
  42b2a0:	b.le	42b2ac <_obstack_memory_used@@Base+0xf0cc>
  42b2a4:	mov	w0, #0x1                   	// #1
  42b2a8:	b	42b2b0 <_obstack_memory_used@@Base+0xf0d0>
  42b2ac:	mov	w0, #0x0                   	// #0
  42b2b0:	and	w0, w0, #0x1
  42b2b4:	and	w1, w0, #0xff
  42b2b8:	add	x0, sp, #0x58
  42b2bc:	mov	w4, w1
  42b2c0:	ldr	x3, [sp, #16]
  42b2c4:	ldr	x2, [sp, #24]
  42b2c8:	mov	x1, x0
  42b2cc:	ldr	x0, [sp, #72]
  42b2d0:	bl	42c950 <_obstack_memory_used@@Base+0x10770>
  42b2d4:	str	w0, [sp, #460]
  42b2d8:	ldr	w0, [sp, #460]
  42b2dc:	cmp	w0, #0x0
  42b2e0:	cset	w0, ne  // ne = any
  42b2e4:	and	w0, w0, #0xff
  42b2e8:	and	x0, x0, #0xff
  42b2ec:	cmp	x0, #0x0
  42b2f0:	b.ne	42b5f8 <_obstack_memory_used@@Base+0xf418>  // b.any
  42b2f4:	str	xzr, [sp, #440]
  42b2f8:	b	42b460 <_obstack_memory_used@@Base+0xf280>
  42b2fc:	ldr	x0, [sp, #440]
  42b300:	lsl	x0, x0, #4
  42b304:	ldr	x1, [sp, #16]
  42b308:	add	x0, x1, x0
  42b30c:	ldr	x0, [x0]
  42b310:	cmn	x0, #0x1
  42b314:	b.eq	42b454 <_obstack_memory_used@@Base+0xf274>  // b.none
  42b318:	ldrb	w0, [sp, #228]
  42b31c:	cmp	w0, #0x0
  42b320:	cset	w0, ne  // ne = any
  42b324:	and	w0, w0, #0xff
  42b328:	and	x0, x0, #0xff
  42b32c:	cmp	x0, #0x0
  42b330:	b.eq	42b3f4 <_obstack_memory_used@@Base+0xf214>  // b.none
  42b334:	ldr	x0, [sp, #440]
  42b338:	lsl	x0, x0, #4
  42b33c:	ldr	x1, [sp, #16]
  42b340:	add	x0, x1, x0
  42b344:	ldr	x1, [x0]
  42b348:	ldr	x0, [sp, #136]
  42b34c:	cmp	x1, x0
  42b350:	b.ne	42b35c <_obstack_memory_used@@Base+0xf17c>  // b.any
  42b354:	ldr	x0, [sp, #144]
  42b358:	b	42b380 <_obstack_memory_used@@Base+0xf1a0>
  42b35c:	ldr	x1, [sp, #112]
  42b360:	ldr	x0, [sp, #440]
  42b364:	lsl	x0, x0, #4
  42b368:	ldr	x2, [sp, #16]
  42b36c:	add	x0, x2, x0
  42b370:	ldr	x0, [x0]
  42b374:	lsl	x0, x0, #3
  42b378:	add	x0, x1, x0
  42b37c:	ldr	x0, [x0]
  42b380:	ldr	x1, [sp, #440]
  42b384:	lsl	x1, x1, #4
  42b388:	ldr	x2, [sp, #16]
  42b38c:	add	x1, x2, x1
  42b390:	str	x0, [x1]
  42b394:	ldr	x0, [sp, #440]
  42b398:	lsl	x0, x0, #4
  42b39c:	ldr	x1, [sp, #16]
  42b3a0:	add	x0, x1, x0
  42b3a4:	ldr	x1, [x0, #8]
  42b3a8:	ldr	x0, [sp, #136]
  42b3ac:	cmp	x1, x0
  42b3b0:	b.ne	42b3bc <_obstack_memory_used@@Base+0xf1dc>  // b.any
  42b3b4:	ldr	x0, [sp, #144]
  42b3b8:	b	42b3e0 <_obstack_memory_used@@Base+0xf200>
  42b3bc:	ldr	x1, [sp, #112]
  42b3c0:	ldr	x0, [sp, #440]
  42b3c4:	lsl	x0, x0, #4
  42b3c8:	ldr	x2, [sp, #16]
  42b3cc:	add	x0, x2, x0
  42b3d0:	ldr	x0, [x0, #8]
  42b3d4:	lsl	x0, x0, #3
  42b3d8:	add	x0, x1, x0
  42b3dc:	ldr	x0, [x0]
  42b3e0:	ldr	x1, [sp, #440]
  42b3e4:	lsl	x1, x1, #4
  42b3e8:	ldr	x2, [sp, #16]
  42b3ec:	add	x1, x2, x1
  42b3f0:	str	x0, [x1, #8]
  42b3f4:	ldr	x0, [sp, #440]
  42b3f8:	lsl	x0, x0, #4
  42b3fc:	ldr	x1, [sp, #16]
  42b400:	add	x0, x1, x0
  42b404:	ldr	x2, [x0]
  42b408:	ldr	x1, [sp, #344]
  42b40c:	ldr	x0, [sp, #440]
  42b410:	lsl	x0, x0, #4
  42b414:	ldr	x3, [sp, #16]
  42b418:	add	x0, x3, x0
  42b41c:	add	x1, x2, x1
  42b420:	str	x1, [x0]
  42b424:	ldr	x0, [sp, #440]
  42b428:	lsl	x0, x0, #4
  42b42c:	ldr	x1, [sp, #16]
  42b430:	add	x0, x1, x0
  42b434:	ldr	x2, [x0, #8]
  42b438:	ldr	x1, [sp, #344]
  42b43c:	ldr	x0, [sp, #440]
  42b440:	lsl	x0, x0, #4
  42b444:	ldr	x3, [sp, #16]
  42b448:	add	x0, x3, x0
  42b44c:	add	x1, x2, x1
  42b450:	str	x1, [x0, #8]
  42b454:	ldr	x0, [sp, #440]
  42b458:	add	x0, x0, #0x1
  42b45c:	str	x0, [sp, #440]
  42b460:	ldr	x0, [sp, #440]
  42b464:	ldr	x1, [sp, #24]
  42b468:	cmp	x1, x0
  42b46c:	b.hi	42b2fc <_obstack_memory_used@@Base+0xf11c>  // b.pmore
  42b470:	str	xzr, [sp, #440]
  42b474:	b	42b4c4 <_obstack_memory_used@@Base+0xf2e4>
  42b478:	ldr	x1, [sp, #440]
  42b47c:	ldr	x0, [sp, #24]
  42b480:	add	x0, x1, x0
  42b484:	lsl	x0, x0, #4
  42b488:	ldr	x1, [sp, #16]
  42b48c:	add	x0, x1, x0
  42b490:	mov	x1, #0xffffffffffffffff    	// #-1
  42b494:	str	x1, [x0]
  42b498:	ldr	x1, [sp, #440]
  42b49c:	ldr	x0, [sp, #24]
  42b4a0:	add	x0, x1, x0
  42b4a4:	lsl	x0, x0, #4
  42b4a8:	ldr	x1, [sp, #16]
  42b4ac:	add	x0, x1, x0
  42b4b0:	mov	x1, #0xffffffffffffffff    	// #-1
  42b4b4:	str	x1, [x0, #8]
  42b4b8:	ldr	x0, [sp, #440]
  42b4bc:	add	x0, x0, #0x1
  42b4c0:	str	x0, [sp, #440]
  42b4c4:	ldr	x1, [sp, #440]
  42b4c8:	ldr	x0, [sp, #400]
  42b4cc:	cmp	x1, x0
  42b4d0:	b.lt	42b478 <_obstack_memory_used@@Base+0xf298>  // b.tstop
  42b4d4:	ldr	x0, [sp, #432]
  42b4d8:	ldr	x0, [x0, #224]
  42b4dc:	cmp	x0, #0x0
  42b4e0:	b.eq	42b5f0 <_obstack_memory_used@@Base+0xf410>  // b.none
  42b4e4:	str	xzr, [sp, #440]
  42b4e8:	b	42b5a4 <_obstack_memory_used@@Base+0xf3c4>
  42b4ec:	ldr	x0, [sp, #432]
  42b4f0:	ldr	x1, [x0, #224]
  42b4f4:	ldr	x0, [sp, #440]
  42b4f8:	lsl	x0, x0, #3
  42b4fc:	add	x0, x1, x0
  42b500:	ldr	x0, [x0]
  42b504:	ldr	x1, [sp, #440]
  42b508:	cmp	x1, x0
  42b50c:	b.eq	42b598 <_obstack_memory_used@@Base+0xf3b8>  // b.none
  42b510:	ldr	x0, [sp, #432]
  42b514:	ldr	x1, [x0, #224]
  42b518:	ldr	x0, [sp, #440]
  42b51c:	lsl	x0, x0, #3
  42b520:	add	x0, x1, x0
  42b524:	ldr	x0, [x0]
  42b528:	add	x0, x0, #0x1
  42b52c:	lsl	x0, x0, #4
  42b530:	ldr	x1, [sp, #16]
  42b534:	add	x1, x1, x0
  42b538:	ldr	x0, [sp, #440]
  42b53c:	add	x0, x0, #0x1
  42b540:	lsl	x0, x0, #4
  42b544:	ldr	x2, [sp, #16]
  42b548:	add	x0, x2, x0
  42b54c:	ldr	x1, [x1]
  42b550:	str	x1, [x0]
  42b554:	ldr	x0, [sp, #432]
  42b558:	ldr	x1, [x0, #224]
  42b55c:	ldr	x0, [sp, #440]
  42b560:	lsl	x0, x0, #3
  42b564:	add	x0, x1, x0
  42b568:	ldr	x0, [x0]
  42b56c:	add	x0, x0, #0x1
  42b570:	lsl	x0, x0, #4
  42b574:	ldr	x1, [sp, #16]
  42b578:	add	x1, x1, x0
  42b57c:	ldr	x0, [sp, #440]
  42b580:	add	x0, x0, #0x1
  42b584:	lsl	x0, x0, #4
  42b588:	ldr	x2, [sp, #16]
  42b58c:	add	x0, x2, x0
  42b590:	ldr	x1, [x1, #8]
  42b594:	str	x1, [x0, #8]
  42b598:	ldr	x0, [sp, #440]
  42b59c:	add	x0, x0, #0x1
  42b5a0:	str	x0, [sp, #440]
  42b5a4:	ldr	x0, [sp, #440]
  42b5a8:	add	x0, x0, #0x1
  42b5ac:	mov	x1, x0
  42b5b0:	ldr	x0, [sp, #24]
  42b5b4:	cmp	x0, x1
  42b5b8:	b.hi	42b4ec <_obstack_memory_used@@Base+0xf30c>  // b.pmore
  42b5bc:	b	42b5f0 <_obstack_memory_used@@Base+0xf410>
  42b5c0:	nop
  42b5c4:	b	42b5fc <_obstack_memory_used@@Base+0xf41c>
  42b5c8:	nop
  42b5cc:	b	42b5fc <_obstack_memory_used@@Base+0xf41c>
  42b5d0:	nop
  42b5d4:	b	42b5fc <_obstack_memory_used@@Base+0xf41c>
  42b5d8:	nop
  42b5dc:	b	42b5fc <_obstack_memory_used@@Base+0xf41c>
  42b5e0:	nop
  42b5e4:	b	42b5fc <_obstack_memory_used@@Base+0xf41c>
  42b5e8:	nop
  42b5ec:	b	42b5fc <_obstack_memory_used@@Base+0xf41c>
  42b5f0:	nop
  42b5f4:	b	42b5fc <_obstack_memory_used@@Base+0xf41c>
  42b5f8:	nop
  42b5fc:	ldr	x0, [sp, #272]
  42b600:	bl	402b60 <free@plt>
  42b604:	ldr	x0, [sp, #432]
  42b608:	ldr	x0, [x0, #152]
  42b60c:	cmp	x0, #0x0
  42b610:	b.eq	42b61c <_obstack_memory_used@@Base+0xf43c>  // b.none
  42b614:	add	x0, sp, #0x58
  42b618:	bl	433408 <_obstack_memory_used@@Base+0x17228>
  42b61c:	add	x0, sp, #0x58
  42b620:	bl	41ede8 <_obstack_memory_used@@Base+0x2c08>
  42b624:	ldr	w0, [sp, #460]
  42b628:	ldp	x29, x30, [sp], #464
  42b62c:	ret
  42b630:	stp	x29, x30, [sp, #-144]!
  42b634:	mov	x29, sp
  42b638:	str	x0, [sp, #24]
  42b63c:	ldr	x0, [sp, #24]
  42b640:	ldr	x0, [x0, #152]
  42b644:	str	x0, [sp, #96]
  42b648:	str	xzr, [sp, #104]
  42b64c:	ldr	x0, [sp, #24]
  42b650:	ldr	x0, [x0, #184]
  42b654:	cmp	x0, #0x0
  42b658:	ldr	x0, [sp, #24]
  42b65c:	ldr	x0, [x0, #168]
  42b660:	str	x0, [sp, #128]
  42b664:	ldr	x0, [sp, #24]
  42b668:	ldr	x0, [x0, #176]
  42b66c:	str	x0, [sp, #136]
  42b670:	ldr	x1, [sp, #128]
  42b674:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  42b678:	cmp	x1, x0
  42b67c:	cset	w0, hi  // hi = pmore
  42b680:	and	w0, w0, #0xff
  42b684:	and	x0, x0, #0xff
  42b688:	cmp	x0, #0x0
  42b68c:	b.eq	42b698 <_obstack_memory_used@@Base+0xf4b8>  // b.none
  42b690:	mov	w0, #0xc                   	// #12
  42b694:	b	42b960 <_obstack_memory_used@@Base+0xf780>
  42b698:	ldr	x0, [sp, #128]
  42b69c:	add	x0, x0, #0x1
  42b6a0:	lsl	x0, x0, #3
  42b6a4:	bl	4028b0 <malloc@plt>
  42b6a8:	str	x0, [sp, #112]
  42b6ac:	ldr	x0, [sp, #112]
  42b6b0:	cmp	x0, #0x0
  42b6b4:	cset	w0, eq  // eq = none
  42b6b8:	and	w0, w0, #0xff
  42b6bc:	and	x0, x0, #0xff
  42b6c0:	cmp	x0, #0x0
  42b6c4:	b.eq	42b6d4 <_obstack_memory_used@@Base+0xf4f4>  // b.none
  42b6c8:	mov	w0, #0xc                   	// #12
  42b6cc:	str	w0, [sp, #124]
  42b6d0:	b	42b94c <_obstack_memory_used@@Base+0xf76c>
  42b6d4:	ldr	x0, [sp, #96]
  42b6d8:	ldr	x0, [x0, #152]
  42b6dc:	cmp	x0, #0x0
  42b6e0:	b.eq	42b898 <_obstack_memory_used@@Base+0xf6b8>  // b.none
  42b6e4:	ldr	x0, [sp, #128]
  42b6e8:	add	x0, x0, #0x1
  42b6ec:	lsl	x0, x0, #3
  42b6f0:	bl	4028b0 <malloc@plt>
  42b6f4:	str	x0, [sp, #104]
  42b6f8:	ldr	x0, [sp, #104]
  42b6fc:	cmp	x0, #0x0
  42b700:	cset	w0, eq  // eq = none
  42b704:	and	w0, w0, #0xff
  42b708:	and	x0, x0, #0xff
  42b70c:	cmp	x0, #0x0
  42b710:	b.eq	42b720 <_obstack_memory_used@@Base+0xf540>  // b.none
  42b714:	mov	w0, #0xc                   	// #12
  42b718:	str	w0, [sp, #124]
  42b71c:	b	42b94c <_obstack_memory_used@@Base+0xf76c>
  42b720:	ldr	x0, [sp, #128]
  42b724:	add	x0, x0, #0x1
  42b728:	lsl	x0, x0, #3
  42b72c:	mov	x2, x0
  42b730:	mov	w1, #0x0                   	// #0
  42b734:	ldr	x0, [sp, #104]
  42b738:	bl	402980 <memset@plt>
  42b73c:	add	x0, sp, #0x28
  42b740:	ldr	x4, [sp, #128]
  42b744:	ldr	x3, [sp, #136]
  42b748:	ldr	x2, [sp, #104]
  42b74c:	ldr	x1, [sp, #112]
  42b750:	bl	433b04 <_obstack_memory_used@@Base+0x17924>
  42b754:	add	x0, sp, #0x28
  42b758:	mov	x1, x0
  42b75c:	ldr	x0, [sp, #24]
  42b760:	bl	42cf90 <_obstack_memory_used@@Base+0x10db0>
  42b764:	str	w0, [sp, #124]
  42b768:	ldr	x0, [sp, #88]
  42b76c:	bl	402b60 <free@plt>
  42b770:	ldr	w0, [sp, #124]
  42b774:	cmp	w0, #0x0
  42b778:	cset	w0, ne  // ne = any
  42b77c:	and	w0, w0, #0xff
  42b780:	and	x0, x0, #0xff
  42b784:	cmp	x0, #0x0
  42b788:	b.ne	42b940 <_obstack_memory_used@@Base+0xf760>  // b.any
  42b78c:	ldr	x0, [sp, #112]
  42b790:	ldr	x0, [x0]
  42b794:	cmp	x0, #0x0
  42b798:	b.ne	42b84c <_obstack_memory_used@@Base+0xf66c>  // b.any
  42b79c:	ldr	x0, [sp, #104]
  42b7a0:	ldr	x0, [x0]
  42b7a4:	cmp	x0, #0x0
  42b7a8:	b.ne	42b84c <_obstack_memory_used@@Base+0xf66c>  // b.any
  42b7ac:	ldr	x0, [sp, #128]
  42b7b0:	sub	x0, x0, #0x1
  42b7b4:	str	x0, [sp, #128]
  42b7b8:	ldr	x0, [sp, #128]
  42b7bc:	cmp	x0, #0x0
  42b7c0:	b.ge	42b7d0 <_obstack_memory_used@@Base+0xf5f0>  // b.tcont
  42b7c4:	mov	w0, #0x1                   	// #1
  42b7c8:	str	w0, [sp, #124]
  42b7cc:	b	42b94c <_obstack_memory_used@@Base+0xf76c>
  42b7d0:	ldr	x0, [sp, #24]
  42b7d4:	ldr	x1, [x0, #184]
  42b7d8:	ldr	x0, [sp, #128]
  42b7dc:	lsl	x0, x0, #3
  42b7e0:	add	x0, x1, x0
  42b7e4:	ldr	x0, [x0]
  42b7e8:	cmp	x0, #0x0
  42b7ec:	b.eq	42b7ac <_obstack_memory_used@@Base+0xf5cc>  // b.none
  42b7f0:	ldr	x0, [sp, #24]
  42b7f4:	ldr	x1, [x0, #184]
  42b7f8:	ldr	x0, [sp, #128]
  42b7fc:	lsl	x0, x0, #3
  42b800:	add	x0, x1, x0
  42b804:	ldr	x0, [x0]
  42b808:	ldrb	w0, [x0, #104]
  42b80c:	and	w0, w0, #0x10
  42b810:	and	w0, w0, #0xff
  42b814:	cmp	w0, #0x0
  42b818:	b.eq	42b7ac <_obstack_memory_used@@Base+0xf5cc>  // b.none
  42b81c:	ldr	x0, [sp, #24]
  42b820:	ldr	x1, [x0, #184]
  42b824:	ldr	x0, [sp, #128]
  42b828:	lsl	x0, x0, #3
  42b82c:	add	x0, x1, x0
  42b830:	ldr	x0, [x0]
  42b834:	ldr	x2, [sp, #128]
  42b838:	mov	x1, x0
  42b83c:	ldr	x0, [sp, #24]
  42b840:	bl	42bff8 <_obstack_memory_used@@Base+0xfe18>
  42b844:	str	x0, [sp, #136]
  42b848:	b	42b720 <_obstack_memory_used@@Base+0xf540>
  42b84c:	ldr	x0, [sp, #128]
  42b850:	add	x0, x0, #0x1
  42b854:	mov	x3, x0
  42b858:	ldr	x2, [sp, #104]
  42b85c:	ldr	x1, [sp, #112]
  42b860:	ldr	x0, [sp, #96]
  42b864:	bl	42d520 <_obstack_memory_used@@Base+0x11340>
  42b868:	str	w0, [sp, #124]
  42b86c:	ldr	x0, [sp, #104]
  42b870:	bl	402b60 <free@plt>
  42b874:	str	xzr, [sp, #104]
  42b878:	ldr	w0, [sp, #124]
  42b87c:	cmp	w0, #0x0
  42b880:	cset	w0, ne  // ne = any
  42b884:	and	w0, w0, #0xff
  42b888:	and	x0, x0, #0xff
  42b88c:	cmp	x0, #0x0
  42b890:	b.eq	42b904 <_obstack_memory_used@@Base+0xf724>  // b.none
  42b894:	b	42b94c <_obstack_memory_used@@Base+0xf76c>
  42b898:	add	x0, sp, #0x28
  42b89c:	ldr	x4, [sp, #128]
  42b8a0:	ldr	x3, [sp, #136]
  42b8a4:	ldr	x2, [sp, #104]
  42b8a8:	ldr	x1, [sp, #112]
  42b8ac:	bl	433b04 <_obstack_memory_used@@Base+0x17924>
  42b8b0:	add	x0, sp, #0x28
  42b8b4:	mov	x1, x0
  42b8b8:	ldr	x0, [sp, #24]
  42b8bc:	bl	42cf90 <_obstack_memory_used@@Base+0x10db0>
  42b8c0:	str	w0, [sp, #124]
  42b8c4:	ldr	x0, [sp, #88]
  42b8c8:	bl	402b60 <free@plt>
  42b8cc:	ldr	w0, [sp, #124]
  42b8d0:	cmp	w0, #0x0
  42b8d4:	cset	w0, ne  // ne = any
  42b8d8:	and	w0, w0, #0xff
  42b8dc:	and	x0, x0, #0xff
  42b8e0:	cmp	x0, #0x0
  42b8e4:	b.ne	42b948 <_obstack_memory_used@@Base+0xf768>  // b.any
  42b8e8:	ldr	x0, [sp, #112]
  42b8ec:	ldr	x0, [x0]
  42b8f0:	cmp	x0, #0x0
  42b8f4:	b.ne	42b904 <_obstack_memory_used@@Base+0xf724>  // b.any
  42b8f8:	mov	w0, #0x1                   	// #1
  42b8fc:	str	w0, [sp, #124]
  42b900:	b	42b94c <_obstack_memory_used@@Base+0xf76c>
  42b904:	ldr	x0, [sp, #24]
  42b908:	ldr	x0, [x0, #184]
  42b90c:	bl	402b60 <free@plt>
  42b910:	ldr	x0, [sp, #24]
  42b914:	ldr	x1, [sp, #112]
  42b918:	str	x1, [x0, #184]
  42b91c:	str	xzr, [sp, #112]
  42b920:	ldr	x0, [sp, #24]
  42b924:	ldr	x1, [sp, #136]
  42b928:	str	x1, [x0, #176]
  42b92c:	ldr	x0, [sp, #24]
  42b930:	ldr	x1, [sp, #128]
  42b934:	str	x1, [x0, #168]
  42b938:	str	wzr, [sp, #124]
  42b93c:	b	42b94c <_obstack_memory_used@@Base+0xf76c>
  42b940:	nop
  42b944:	b	42b94c <_obstack_memory_used@@Base+0xf76c>
  42b948:	nop
  42b94c:	ldr	x0, [sp, #112]
  42b950:	bl	402b60 <free@plt>
  42b954:	ldr	x0, [sp, #104]
  42b958:	bl	402b60 <free@plt>
  42b95c:	ldr	w0, [sp, #124]
  42b960:	ldp	x29, x30, [sp], #144
  42b964:	ret
  42b968:	stp	x29, x30, [sp, #-160]!
  42b96c:	mov	x29, sp
  42b970:	str	x0, [sp, #40]
  42b974:	strb	w1, [sp, #39]
  42b978:	str	x2, [sp, #24]
  42b97c:	ldr	x0, [sp, #40]
  42b980:	ldr	x0, [x0, #152]
  42b984:	str	x0, [sp, #112]
  42b988:	str	xzr, [sp, #152]
  42b98c:	mov	x0, #0xffffffffffffffff    	// #-1
  42b990:	str	x0, [sp, #144]
  42b994:	ldr	x0, [sp, #40]
  42b998:	ldr	x0, [x0, #72]
  42b99c:	str	x0, [sp, #104]
  42b9a0:	ldr	x0, [sp, #24]
  42b9a4:	cmp	x0, #0x0
  42b9a8:	cset	w0, ne  // ne = any
  42b9ac:	strb	w0, [sp, #135]
  42b9b0:	ldr	x0, [sp, #104]
  42b9b4:	str	x0, [sp, #120]
  42b9b8:	str	wzr, [sp, #48]
  42b9bc:	add	x0, sp, #0x30
  42b9c0:	str	x0, [sp, #80]
  42b9c4:	ldr	x0, [sp, #40]
  42b9c8:	str	x0, [sp, #72]
  42b9cc:	ldr	x0, [sp, #104]
  42b9d0:	str	x0, [sp, #64]
  42b9d4:	ldr	x0, [sp, #72]
  42b9d8:	ldr	x0, [x0, #152]
  42b9dc:	str	x0, [sp, #56]
  42b9e0:	ldr	x0, [sp, #56]
  42b9e4:	ldr	x0, [x0, #72]
  42b9e8:	ldrb	w0, [x0, #104]
  42b9ec:	and	w0, w0, #0xffffff80
  42b9f0:	and	w0, w0, #0xff
  42b9f4:	cmp	w0, #0x0
  42b9f8:	b.eq	42badc <_obstack_memory_used@@Base+0xf8fc>  // b.none
  42b9fc:	ldr	x3, [sp, #72]
  42ba00:	ldr	x0, [sp, #64]
  42ba04:	sub	x1, x0, #0x1
  42ba08:	ldr	x0, [sp, #72]
  42ba0c:	ldr	w0, [x0, #160]
  42ba10:	mov	w2, w0
  42ba14:	mov	x0, x3
  42ba18:	bl	41ee34 <_obstack_memory_used@@Base+0x2c54>
  42ba1c:	str	w0, [sp, #52]
  42ba20:	ldr	w0, [sp, #52]
  42ba24:	and	w0, w0, #0x1
  42ba28:	cmp	w0, #0x0
  42ba2c:	b.eq	42ba3c <_obstack_memory_used@@Base+0xf85c>  // b.none
  42ba30:	ldr	x0, [sp, #56]
  42ba34:	ldr	x0, [x0, #80]
  42ba38:	b	42bae4 <_obstack_memory_used@@Base+0xf904>
  42ba3c:	ldr	w0, [sp, #52]
  42ba40:	cmp	w0, #0x0
  42ba44:	b.ne	42ba54 <_obstack_memory_used@@Base+0xf874>  // b.any
  42ba48:	ldr	x0, [sp, #56]
  42ba4c:	ldr	x0, [x0, #72]
  42ba50:	b	42bae4 <_obstack_memory_used@@Base+0xf904>
  42ba54:	ldr	w0, [sp, #52]
  42ba58:	and	w0, w0, #0x4
  42ba5c:	cmp	w0, #0x0
  42ba60:	b.eq	42ba80 <_obstack_memory_used@@Base+0xf8a0>  // b.none
  42ba64:	ldr	w0, [sp, #52]
  42ba68:	and	w0, w0, #0x2
  42ba6c:	cmp	w0, #0x0
  42ba70:	b.eq	42ba80 <_obstack_memory_used@@Base+0xf8a0>  // b.none
  42ba74:	ldr	x0, [sp, #56]
  42ba78:	ldr	x0, [x0, #96]
  42ba7c:	b	42bae4 <_obstack_memory_used@@Base+0xf904>
  42ba80:	ldr	w0, [sp, #52]
  42ba84:	and	w0, w0, #0x2
  42ba88:	cmp	w0, #0x0
  42ba8c:	b.eq	42ba9c <_obstack_memory_used@@Base+0xf8bc>  // b.none
  42ba90:	ldr	x0, [sp, #56]
  42ba94:	ldr	x0, [x0, #88]
  42ba98:	b	42bae4 <_obstack_memory_used@@Base+0xf904>
  42ba9c:	ldr	w0, [sp, #52]
  42baa0:	and	w0, w0, #0x4
  42baa4:	cmp	w0, #0x0
  42baa8:	b.eq	42bad0 <_obstack_memory_used@@Base+0xf8f0>  // b.none
  42baac:	ldr	x0, [sp, #56]
  42bab0:	ldr	x0, [x0, #72]
  42bab4:	ldr	x0, [x0, #80]
  42bab8:	ldr	w3, [sp, #52]
  42babc:	mov	x2, x0
  42bac0:	ldr	x1, [sp, #56]
  42bac4:	ldr	x0, [sp, #80]
  42bac8:	bl	420a10 <_obstack_memory_used@@Base+0x4830>
  42bacc:	b	42bae4 <_obstack_memory_used@@Base+0xf904>
  42bad0:	ldr	x0, [sp, #56]
  42bad4:	ldr	x0, [x0, #72]
  42bad8:	b	42bae4 <_obstack_memory_used@@Base+0xf904>
  42badc:	ldr	x0, [sp, #56]
  42bae0:	ldr	x0, [x0, #72]
  42bae4:	str	x0, [sp, #136]
  42bae8:	ldr	x0, [sp, #136]
  42baec:	cmp	x0, #0x0
  42baf0:	cset	w0, eq  // eq = none
  42baf4:	and	w0, w0, #0xff
  42baf8:	and	x0, x0, #0xff
  42bafc:	cmp	x0, #0x0
  42bb00:	b.eq	42bb14 <_obstack_memory_used@@Base+0xf934>  // b.none
  42bb04:	ldr	w0, [sp, #48]
  42bb08:	cmp	w0, #0xc
  42bb0c:	mov	x0, #0xfffffffffffffffe    	// #-2
  42bb10:	b	42bee4 <_obstack_memory_used@@Base+0xfd04>
  42bb14:	ldr	x0, [sp, #40]
  42bb18:	ldr	x0, [x0, #184]
  42bb1c:	cmp	x0, #0x0
  42bb20:	b.eq	42bbf0 <_obstack_memory_used@@Base+0xfa10>  // b.none
  42bb24:	ldr	x0, [sp, #40]
  42bb28:	ldr	x1, [x0, #184]
  42bb2c:	ldr	x0, [sp, #104]
  42bb30:	lsl	x0, x0, #3
  42bb34:	add	x0, x1, x0
  42bb38:	ldr	x1, [sp, #136]
  42bb3c:	str	x1, [x0]
  42bb40:	ldr	x0, [sp, #112]
  42bb44:	ldr	x0, [x0, #152]
  42bb48:	cmp	x0, #0x0
  42bb4c:	b.eq	42bbf0 <_obstack_memory_used@@Base+0xfa10>  // b.none
  42bb50:	strb	wzr, [sp, #135]
  42bb54:	ldr	x0, [sp, #136]
  42bb58:	add	x0, x0, #0x8
  42bb5c:	mov	x2, #0x0                   	// #0
  42bb60:	mov	x1, x0
  42bb64:	ldr	x0, [sp, #40]
  42bb68:	bl	42f084 <_obstack_memory_used@@Base+0x12ea4>
  42bb6c:	str	w0, [sp, #48]
  42bb70:	ldr	w0, [sp, #48]
  42bb74:	cmp	w0, #0x0
  42bb78:	cset	w0, ne  // ne = any
  42bb7c:	and	w0, w0, #0xff
  42bb80:	and	x0, x0, #0xff
  42bb84:	cmp	x0, #0x0
  42bb88:	b.eq	42bb98 <_obstack_memory_used@@Base+0xf9b8>  // b.none
  42bb8c:	ldr	w0, [sp, #48]
  42bb90:	sxtw	x0, w0
  42bb94:	b	42bee4 <_obstack_memory_used@@Base+0xfd04>
  42bb98:	ldr	x0, [sp, #136]
  42bb9c:	ldrb	w0, [x0, #104]
  42bba0:	and	w0, w0, #0x40
  42bba4:	and	w0, w0, #0xff
  42bba8:	cmp	w0, #0x0
  42bbac:	b.eq	42bbf0 <_obstack_memory_used@@Base+0xfa10>  // b.none
  42bbb0:	ldr	x0, [sp, #136]
  42bbb4:	add	x0, x0, #0x8
  42bbb8:	mov	x1, x0
  42bbbc:	ldr	x0, [sp, #40]
  42bbc0:	bl	42f5b4 <_obstack_memory_used@@Base+0x133d4>
  42bbc4:	str	w0, [sp, #48]
  42bbc8:	ldr	w0, [sp, #48]
  42bbcc:	cmp	w0, #0x0
  42bbd0:	cset	w0, ne  // ne = any
  42bbd4:	and	w0, w0, #0xff
  42bbd8:	and	x0, x0, #0xff
  42bbdc:	cmp	x0, #0x0
  42bbe0:	b.eq	42bbf0 <_obstack_memory_used@@Base+0xfa10>  // b.none
  42bbe4:	ldr	w0, [sp, #48]
  42bbe8:	sxtw	x0, w0
  42bbec:	b	42bee4 <_obstack_memory_used@@Base+0xfd04>
  42bbf0:	ldr	x0, [sp, #136]
  42bbf4:	ldrb	w0, [x0, #104]
  42bbf8:	ubfx	x0, x0, #4, #1
  42bbfc:	and	w0, w0, #0xff
  42bc00:	and	x0, x0, #0xff
  42bc04:	cmp	x0, #0x0
  42bc08:	b.eq	42be9c <_obstack_memory_used@@Base+0xfcbc>  // b.none
  42bc0c:	ldr	x0, [sp, #136]
  42bc10:	ldrb	w0, [x0, #104]
  42bc14:	and	w0, w0, #0xffffff80
  42bc18:	and	w0, w0, #0xff
  42bc1c:	cmp	w0, #0x0
  42bc20:	b.eq	42bc3c <_obstack_memory_used@@Base+0xfa5c>  // b.none
  42bc24:	ldr	x2, [sp, #104]
  42bc28:	ldr	x1, [sp, #136]
  42bc2c:	ldr	x0, [sp, #40]
  42bc30:	bl	42bff8 <_obstack_memory_used@@Base+0xfe18>
  42bc34:	cmp	x0, #0x0
  42bc38:	b.eq	42be9c <_obstack_memory_used@@Base+0xfcbc>  // b.none
  42bc3c:	ldrb	w0, [sp, #39]
  42bc40:	eor	w0, w0, #0x1
  42bc44:	and	w0, w0, #0xff
  42bc48:	cmp	w0, #0x0
  42bc4c:	b.eq	42bc58 <_obstack_memory_used@@Base+0xfa78>  // b.none
  42bc50:	ldr	x0, [sp, #104]
  42bc54:	b	42bee4 <_obstack_memory_used@@Base+0xfd04>
  42bc58:	ldr	x0, [sp, #104]
  42bc5c:	str	x0, [sp, #144]
  42bc60:	mov	x0, #0x1                   	// #1
  42bc64:	str	x0, [sp, #152]
  42bc68:	b	42be9c <_obstack_memory_used@@Base+0xfcbc>
  42bc6c:	ldr	x0, [sp, #136]
  42bc70:	str	x0, [sp, #96]
  42bc74:	ldr	x0, [sp, #40]
  42bc78:	ldr	x0, [x0, #72]
  42bc7c:	add	x0, x0, #0x1
  42bc80:	str	x0, [sp, #88]
  42bc84:	ldr	x0, [sp, #40]
  42bc88:	ldr	x0, [x0, #64]
  42bc8c:	ldr	x1, [sp, #88]
  42bc90:	cmp	x1, x0
  42bc94:	cset	w0, ge  // ge = tcont
  42bc98:	and	w0, w0, #0xff
  42bc9c:	and	x0, x0, #0xff
  42bca0:	cmp	x0, #0x0
  42bca4:	b.eq	42bcc0 <_obstack_memory_used@@Base+0xfae0>  // b.none
  42bca8:	ldr	x0, [sp, #40]
  42bcac:	ldr	x1, [x0, #64]
  42bcb0:	ldr	x0, [sp, #40]
  42bcb4:	ldr	x0, [x0, #88]
  42bcb8:	cmp	x1, x0
  42bcbc:	b.lt	42bcfc <_obstack_memory_used@@Base+0xfb1c>  // b.tstop
  42bcc0:	ldr	x0, [sp, #40]
  42bcc4:	ldr	x0, [x0, #48]
  42bcc8:	ldr	x1, [sp, #88]
  42bccc:	cmp	x1, x0
  42bcd0:	cset	w0, ge  // ge = tcont
  42bcd4:	and	w0, w0, #0xff
  42bcd8:	and	x0, x0, #0xff
  42bcdc:	cmp	x0, #0x0
  42bce0:	b.eq	42bd40 <_obstack_memory_used@@Base+0xfb60>  // b.none
  42bce4:	ldr	x0, [sp, #40]
  42bce8:	ldr	x1, [x0, #48]
  42bcec:	ldr	x0, [sp, #40]
  42bcf0:	ldr	x0, [x0, #88]
  42bcf4:	cmp	x1, x0
  42bcf8:	b.ge	42bd40 <_obstack_memory_used@@Base+0xfb60>  // b.tcont
  42bcfc:	ldr	x0, [sp, #88]
  42bd00:	add	w0, w0, #0x1
  42bd04:	mov	w1, w0
  42bd08:	ldr	x0, [sp, #40]
  42bd0c:	bl	43301c <_obstack_memory_used@@Base+0x16e3c>
  42bd10:	str	w0, [sp, #48]
  42bd14:	ldr	w0, [sp, #48]
  42bd18:	cmp	w0, #0x0
  42bd1c:	cset	w0, ne  // ne = any
  42bd20:	and	w0, w0, #0xff
  42bd24:	and	x0, x0, #0xff
  42bd28:	cmp	x0, #0x0
  42bd2c:	b.eq	42bd40 <_obstack_memory_used@@Base+0xfb60>  // b.none
  42bd30:	ldr	w0, [sp, #48]
  42bd34:	cmp	w0, #0xc
  42bd38:	mov	x0, #0xfffffffffffffffe    	// #-2
  42bd3c:	b	42bee4 <_obstack_memory_used@@Base+0xfd04>
  42bd40:	add	x0, sp, #0x30
  42bd44:	ldr	x2, [sp, #136]
  42bd48:	ldr	x1, [sp, #40]
  42bd4c:	bl	42eb64 <_obstack_memory_used@@Base+0x12984>
  42bd50:	str	x0, [sp, #136]
  42bd54:	ldr	x0, [sp, #40]
  42bd58:	ldr	x0, [x0, #184]
  42bd5c:	cmp	x0, #0x0
  42bd60:	b.eq	42bd78 <_obstack_memory_used@@Base+0xfb98>  // b.none
  42bd64:	add	x0, sp, #0x30
  42bd68:	ldr	x2, [sp, #136]
  42bd6c:	ldr	x1, [sp, #40]
  42bd70:	bl	42ed0c <_obstack_memory_used@@Base+0x12b2c>
  42bd74:	str	x0, [sp, #136]
  42bd78:	ldr	x0, [sp, #136]
  42bd7c:	cmp	x0, #0x0
  42bd80:	b.ne	42bdf4 <_obstack_memory_used@@Base+0xfc14>  // b.any
  42bd84:	ldr	w0, [sp, #48]
  42bd88:	cmp	w0, #0x0
  42bd8c:	cset	w0, ne  // ne = any
  42bd90:	and	w0, w0, #0xff
  42bd94:	and	x0, x0, #0xff
  42bd98:	cmp	x0, #0x0
  42bd9c:	b.eq	42bda8 <_obstack_memory_used@@Base+0xfbc8>  // b.none
  42bda0:	mov	x0, #0xfffffffffffffffe    	// #-2
  42bda4:	b	42bee4 <_obstack_memory_used@@Base+0xfd04>
  42bda8:	ldr	x0, [sp, #40]
  42bdac:	ldr	x0, [x0, #184]
  42bdb0:	cmp	x0, #0x0
  42bdb4:	b.eq	42bebc <_obstack_memory_used@@Base+0xfcdc>  // b.none
  42bdb8:	ldr	x0, [sp, #152]
  42bdbc:	cmp	x0, #0x0
  42bdc0:	b.eq	42bdd8 <_obstack_memory_used@@Base+0xfbf8>  // b.none
  42bdc4:	ldrb	w0, [sp, #39]
  42bdc8:	eor	w0, w0, #0x1
  42bdcc:	and	w0, w0, #0xff
  42bdd0:	cmp	w0, #0x0
  42bdd4:	b.ne	42bebc <_obstack_memory_used@@Base+0xfcdc>  // b.any
  42bdd8:	add	x0, sp, #0x30
  42bddc:	ldr	x1, [sp, #40]
  42bde0:	bl	42efc8 <_obstack_memory_used@@Base+0x12de8>
  42bde4:	str	x0, [sp, #136]
  42bde8:	ldr	x0, [sp, #136]
  42bdec:	cmp	x0, #0x0
  42bdf0:	b.eq	42bebc <_obstack_memory_used@@Base+0xfcdc>  // b.none
  42bdf4:	ldrb	w0, [sp, #135]
  42bdf8:	cmp	x0, #0x0
  42bdfc:	b.eq	42be20 <_obstack_memory_used@@Base+0xfc40>  // b.none
  42be00:	ldr	x1, [sp, #96]
  42be04:	ldr	x0, [sp, #136]
  42be08:	cmp	x1, x0
  42be0c:	b.ne	42be1c <_obstack_memory_used@@Base+0xfc3c>  // b.any
  42be10:	ldr	x0, [sp, #88]
  42be14:	str	x0, [sp, #120]
  42be18:	b	42be20 <_obstack_memory_used@@Base+0xfc40>
  42be1c:	strb	wzr, [sp, #135]
  42be20:	ldr	x0, [sp, #136]
  42be24:	ldrb	w0, [x0, #104]
  42be28:	and	w0, w0, #0x10
  42be2c:	and	w0, w0, #0xff
  42be30:	cmp	w0, #0x0
  42be34:	b.eq	42be9c <_obstack_memory_used@@Base+0xfcbc>  // b.none
  42be38:	ldr	x0, [sp, #136]
  42be3c:	ldrb	w0, [x0, #104]
  42be40:	and	w0, w0, #0xffffff80
  42be44:	and	w0, w0, #0xff
  42be48:	cmp	w0, #0x0
  42be4c:	b.eq	42be70 <_obstack_memory_used@@Base+0xfc90>  // b.none
  42be50:	ldr	x0, [sp, #40]
  42be54:	ldr	x0, [x0, #72]
  42be58:	mov	x2, x0
  42be5c:	ldr	x1, [sp, #136]
  42be60:	ldr	x0, [sp, #40]
  42be64:	bl	42bff8 <_obstack_memory_used@@Base+0xfe18>
  42be68:	cmp	x0, #0x0
  42be6c:	b.eq	42be9c <_obstack_memory_used@@Base+0xfcbc>  // b.none
  42be70:	ldr	x0, [sp, #40]
  42be74:	ldr	x0, [x0, #72]
  42be78:	str	x0, [sp, #144]
  42be7c:	mov	x0, #0x1                   	// #1
  42be80:	str	x0, [sp, #152]
  42be84:	str	xzr, [sp, #24]
  42be88:	ldrb	w0, [sp, #39]
  42be8c:	eor	w0, w0, #0x1
  42be90:	and	w0, w0, #0xff
  42be94:	cmp	w0, #0x0
  42be98:	b.ne	42beb8 <_obstack_memory_used@@Base+0xfcd8>  // b.any
  42be9c:	ldr	x0, [sp, #40]
  42bea0:	ldr	x1, [x0, #104]
  42bea4:	ldr	x0, [sp, #40]
  42bea8:	ldr	x0, [x0, #72]
  42beac:	cmp	x1, x0
  42beb0:	b.gt	42bc6c <_obstack_memory_used@@Base+0xfa8c>
  42beb4:	b	42bebc <_obstack_memory_used@@Base+0xfcdc>
  42beb8:	nop
  42bebc:	ldr	x0, [sp, #24]
  42bec0:	cmp	x0, #0x0
  42bec4:	b.eq	42bee0 <_obstack_memory_used@@Base+0xfd00>  // b.none
  42bec8:	ldr	x0, [sp, #24]
  42becc:	ldr	x1, [x0]
  42bed0:	ldr	x0, [sp, #120]
  42bed4:	add	x1, x1, x0
  42bed8:	ldr	x0, [sp, #24]
  42bedc:	str	x1, [x0]
  42bee0:	ldr	x0, [sp, #144]
  42bee4:	ldp	x29, x30, [sp], #160
  42bee8:	ret
  42beec:	sub	sp, sp, #0x30
  42bef0:	str	x0, [sp, #24]
  42bef4:	str	x1, [sp, #16]
  42bef8:	str	w2, [sp, #12]
  42befc:	ldr	x0, [sp, #24]
  42bf00:	ldr	x1, [x0]
  42bf04:	ldr	x0, [sp, #16]
  42bf08:	lsl	x0, x0, #4
  42bf0c:	add	x0, x1, x0
  42bf10:	ldrb	w0, [x0, #8]
  42bf14:	str	w0, [sp, #44]
  42bf18:	ldr	x0, [sp, #24]
  42bf1c:	ldr	x1, [x0]
  42bf20:	ldr	x0, [sp, #16]
  42bf24:	lsl	x0, x0, #4
  42bf28:	add	x0, x1, x0
  42bf2c:	ldr	w0, [x0, #8]
  42bf30:	ubfx	x0, x0, #8, #10
  42bf34:	and	w0, w0, #0xffff
  42bf38:	str	w0, [sp, #40]
  42bf3c:	ldr	w0, [sp, #44]
  42bf40:	cmp	w0, #0x2
  42bf44:	b.eq	42bf50 <_obstack_memory_used@@Base+0xfd70>  // b.none
  42bf48:	mov	w0, #0x0                   	// #0
  42bf4c:	b	42bff0 <_obstack_memory_used@@Base+0xfe10>
  42bf50:	ldr	w0, [sp, #40]
  42bf54:	cmp	w0, #0x0
  42bf58:	b.ne	42bf64 <_obstack_memory_used@@Base+0xfd84>  // b.any
  42bf5c:	mov	w0, #0x1                   	// #1
  42bf60:	b	42bff0 <_obstack_memory_used@@Base+0xfe10>
  42bf64:	ldr	w0, [sp, #40]
  42bf68:	and	w0, w0, #0x4
  42bf6c:	cmp	w0, #0x0
  42bf70:	b.eq	42bf84 <_obstack_memory_used@@Base+0xfda4>  // b.none
  42bf74:	ldr	w0, [sp, #12]
  42bf78:	and	w0, w0, #0x1
  42bf7c:	cmp	w0, #0x0
  42bf80:	b.eq	42bfe4 <_obstack_memory_used@@Base+0xfe04>  // b.none
  42bf84:	ldr	w0, [sp, #40]
  42bf88:	and	w0, w0, #0x8
  42bf8c:	cmp	w0, #0x0
  42bf90:	b.eq	42bfa4 <_obstack_memory_used@@Base+0xfdc4>  // b.none
  42bf94:	ldr	w0, [sp, #12]
  42bf98:	and	w0, w0, #0x1
  42bf9c:	cmp	w0, #0x0
  42bfa0:	b.ne	42bfe4 <_obstack_memory_used@@Base+0xfe04>  // b.any
  42bfa4:	ldr	w0, [sp, #40]
  42bfa8:	and	w0, w0, #0x20
  42bfac:	cmp	w0, #0x0
  42bfb0:	b.eq	42bfc4 <_obstack_memory_used@@Base+0xfde4>  // b.none
  42bfb4:	ldr	w0, [sp, #12]
  42bfb8:	and	w0, w0, #0x2
  42bfbc:	cmp	w0, #0x0
  42bfc0:	b.eq	42bfe4 <_obstack_memory_used@@Base+0xfe04>  // b.none
  42bfc4:	ldr	w0, [sp, #40]
  42bfc8:	and	w0, w0, #0x80
  42bfcc:	cmp	w0, #0x0
  42bfd0:	b.eq	42bfec <_obstack_memory_used@@Base+0xfe0c>  // b.none
  42bfd4:	ldr	w0, [sp, #12]
  42bfd8:	and	w0, w0, #0x8
  42bfdc:	cmp	w0, #0x0
  42bfe0:	b.ne	42bfec <_obstack_memory_used@@Base+0xfe0c>  // b.any
  42bfe4:	mov	w0, #0x0                   	// #0
  42bfe8:	b	42bff0 <_obstack_memory_used@@Base+0xfe10>
  42bfec:	mov	w0, #0x1                   	// #1
  42bff0:	add	sp, sp, #0x30
  42bff4:	ret
  42bff8:	stp	x29, x30, [sp, #-64]!
  42bffc:	mov	x29, sp
  42c000:	str	x0, [sp, #40]
  42c004:	str	x1, [sp, #32]
  42c008:	str	x2, [sp, #24]
  42c00c:	ldr	x0, [sp, #32]
  42c010:	ldrb	w0, [x0, #104]
  42c014:	and	w0, w0, #0x10
  42c018:	and	w0, w0, #0xff
  42c01c:	cmp	w0, #0x0
  42c020:	ldr	x3, [sp, #40]
  42c024:	ldr	x0, [sp, #40]
  42c028:	ldr	w0, [x0, #160]
  42c02c:	mov	w2, w0
  42c030:	ldr	x1, [sp, #24]
  42c034:	mov	x0, x3
  42c038:	bl	41ee34 <_obstack_memory_used@@Base+0x2c54>
  42c03c:	str	w0, [sp, #52]
  42c040:	str	xzr, [sp, #56]
  42c044:	b	42c0ac <_obstack_memory_used@@Base+0xfecc>
  42c048:	ldr	x0, [sp, #40]
  42c04c:	ldr	x3, [x0, #152]
  42c050:	ldr	x0, [sp, #32]
  42c054:	ldr	x1, [x0, #24]
  42c058:	ldr	x0, [sp, #56]
  42c05c:	lsl	x0, x0, #3
  42c060:	add	x0, x1, x0
  42c064:	ldr	x0, [x0]
  42c068:	ldr	w2, [sp, #52]
  42c06c:	mov	x1, x0
  42c070:	mov	x0, x3
  42c074:	bl	42beec <_obstack_memory_used@@Base+0xfd0c>
  42c078:	and	w0, w0, #0xff
  42c07c:	cmp	w0, #0x0
  42c080:	b.eq	42c0a0 <_obstack_memory_used@@Base+0xfec0>  // b.none
  42c084:	ldr	x0, [sp, #32]
  42c088:	ldr	x1, [x0, #24]
  42c08c:	ldr	x0, [sp, #56]
  42c090:	lsl	x0, x0, #3
  42c094:	add	x0, x1, x0
  42c098:	ldr	x0, [x0]
  42c09c:	b	42c0c4 <_obstack_memory_used@@Base+0xfee4>
  42c0a0:	ldr	x0, [sp, #56]
  42c0a4:	add	x0, x0, #0x1
  42c0a8:	str	x0, [sp, #56]
  42c0ac:	ldr	x0, [sp, #32]
  42c0b0:	ldr	x0, [x0, #16]
  42c0b4:	ldr	x1, [sp, #56]
  42c0b8:	cmp	x1, x0
  42c0bc:	b.lt	42c048 <_obstack_memory_used@@Base+0xfe68>  // b.tstop
  42c0c0:	mov	x0, #0x0                   	// #0
  42c0c4:	ldp	x29, x30, [sp], #64
  42c0c8:	ret
  42c0cc:	stp	x29, x30, [sp, #-192]!
  42c0d0:	mov	x29, sp
  42c0d4:	str	x0, [sp, #72]
  42c0d8:	str	x1, [sp, #64]
  42c0dc:	str	x2, [sp, #56]
  42c0e0:	str	x3, [sp, #48]
  42c0e4:	str	x4, [sp, #40]
  42c0e8:	str	x5, [sp, #32]
  42c0ec:	str	x6, [sp, #24]
  42c0f0:	ldr	x0, [sp, #72]
  42c0f4:	ldr	x0, [x0, #152]
  42c0f8:	str	x0, [sp, #160]
  42c0fc:	ldr	x0, [sp, #160]
  42c100:	ldr	x1, [x0]
  42c104:	ldr	x0, [sp, #40]
  42c108:	lsl	x0, x0, #4
  42c10c:	add	x0, x1, x0
  42c110:	ldrb	w0, [x0, #8]
  42c114:	and	w0, w0, #0x8
  42c118:	cmp	w0, #0x0
  42c11c:	b.eq	42c280 <_obstack_memory_used@@Base+0x100a0>  // b.none
  42c120:	ldr	x0, [sp, #72]
  42c124:	ldr	x1, [x0, #184]
  42c128:	ldr	x0, [sp, #48]
  42c12c:	ldr	x0, [x0]
  42c130:	lsl	x0, x0, #3
  42c134:	add	x0, x1, x0
  42c138:	ldr	x0, [x0]
  42c13c:	add	x0, x0, #0x8
  42c140:	str	x0, [sp, #104]
  42c144:	ldr	x0, [sp, #160]
  42c148:	ldr	x2, [x0, #40]
  42c14c:	ldr	x1, [sp, #40]
  42c150:	mov	x0, x1
  42c154:	lsl	x0, x0, #1
  42c158:	add	x0, x0, x1
  42c15c:	lsl	x0, x0, #3
  42c160:	add	x0, x2, x0
  42c164:	str	x0, [sp, #96]
  42c168:	ldr	x1, [sp, #40]
  42c16c:	ldr	x0, [sp, #32]
  42c170:	bl	41ff4c <_obstack_memory_used@@Base+0x3d6c>
  42c174:	strb	w0, [sp, #135]
  42c178:	ldrb	w0, [sp, #135]
  42c17c:	eor	w0, w0, #0x1
  42c180:	and	w0, w0, #0xff
  42c184:	and	x0, x0, #0xff
  42c188:	cmp	x0, #0x0
  42c18c:	b.eq	42c198 <_obstack_memory_used@@Base+0xffb8>  // b.none
  42c190:	mov	x0, #0xfffffffffffffffe    	// #-2
  42c194:	b	42c610 <_obstack_memory_used@@Base+0x10430>
  42c198:	mov	x0, #0xffffffffffffffff    	// #-1
  42c19c:	str	x0, [sp, #176]
  42c1a0:	str	xzr, [sp, #184]
  42c1a4:	b	42c25c <_obstack_memory_used@@Base+0x1007c>
  42c1a8:	ldr	x0, [sp, #96]
  42c1ac:	ldr	x1, [x0, #16]
  42c1b0:	ldr	x0, [sp, #184]
  42c1b4:	lsl	x0, x0, #3
  42c1b8:	add	x0, x1, x0
  42c1bc:	ldr	x0, [x0]
  42c1c0:	str	x0, [sp, #88]
  42c1c4:	ldr	x1, [sp, #88]
  42c1c8:	ldr	x0, [sp, #104]
  42c1cc:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  42c1d0:	cmp	x0, #0x0
  42c1d4:	b.eq	42c24c <_obstack_memory_used@@Base+0x1006c>  // b.none
  42c1d8:	ldr	x0, [sp, #176]
  42c1dc:	cmn	x0, #0x1
  42c1e0:	b.ne	42c1f0 <_obstack_memory_used@@Base+0x10010>  // b.any
  42c1e4:	ldr	x0, [sp, #88]
  42c1e8:	str	x0, [sp, #176]
  42c1ec:	b	42c250 <_obstack_memory_used@@Base+0x10070>
  42c1f0:	ldr	x1, [sp, #176]
  42c1f4:	ldr	x0, [sp, #32]
  42c1f8:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  42c1fc:	cmp	x0, #0x0
  42c200:	b.eq	42c20c <_obstack_memory_used@@Base+0x1002c>  // b.none
  42c204:	ldr	x0, [sp, #88]
  42c208:	b	42c610 <_obstack_memory_used@@Base+0x10430>
  42c20c:	ldr	x0, [sp, #24]
  42c210:	cmp	x0, #0x0
  42c214:	b.eq	42c274 <_obstack_memory_used@@Base+0x10094>  // b.none
  42c218:	ldr	x0, [sp, #48]
  42c21c:	ldr	x0, [x0]
  42c220:	ldr	x5, [sp, #32]
  42c224:	ldr	x4, [sp, #56]
  42c228:	ldr	x3, [sp, #64]
  42c22c:	ldr	x2, [sp, #88]
  42c230:	mov	x1, x0
  42c234:	ldr	x0, [sp, #24]
  42c238:	bl	42c618 <_obstack_memory_used@@Base+0x10438>
  42c23c:	cmp	w0, #0x0
  42c240:	b.eq	42c274 <_obstack_memory_used@@Base+0x10094>  // b.none
  42c244:	mov	x0, #0xfffffffffffffffe    	// #-2
  42c248:	b	42c610 <_obstack_memory_used@@Base+0x10430>
  42c24c:	nop
  42c250:	ldr	x0, [sp, #184]
  42c254:	add	x0, x0, #0x1
  42c258:	str	x0, [sp, #184]
  42c25c:	ldr	x0, [sp, #96]
  42c260:	ldr	x0, [x0, #8]
  42c264:	ldr	x1, [sp, #184]
  42c268:	cmp	x1, x0
  42c26c:	b.lt	42c1a8 <_obstack_memory_used@@Base+0xffc8>  // b.tstop
  42c270:	b	42c278 <_obstack_memory_used@@Base+0x10098>
  42c274:	nop
  42c278:	ldr	x0, [sp, #176]
  42c27c:	b	42c610 <_obstack_memory_used@@Base+0x10430>
  42c280:	str	xzr, [sp, #168]
  42c284:	ldr	x0, [sp, #160]
  42c288:	ldr	x1, [x0]
  42c28c:	ldr	x0, [sp, #40]
  42c290:	lsl	x0, x0, #4
  42c294:	add	x0, x1, x0
  42c298:	ldrb	w0, [x0, #8]
  42c29c:	str	w0, [sp, #156]
  42c2a0:	ldr	x0, [sp, #160]
  42c2a4:	ldr	x1, [x0]
  42c2a8:	ldr	x0, [sp, #40]
  42c2ac:	lsl	x0, x0, #4
  42c2b0:	add	x0, x1, x0
  42c2b4:	ldrb	w0, [x0, #10]
  42c2b8:	and	w0, w0, #0x10
  42c2bc:	and	w0, w0, #0xff
  42c2c0:	cmp	w0, #0x0
  42c2c4:	b.eq	42c2f4 <_obstack_memory_used@@Base+0x10114>  // b.none
  42c2c8:	ldr	x1, [sp, #72]
  42c2cc:	ldr	x0, [sp, #48]
  42c2d0:	ldr	x0, [x0]
  42c2d4:	mov	x3, x0
  42c2d8:	mov	x2, x1
  42c2dc:	ldr	x1, [sp, #40]
  42c2e0:	ldr	x0, [sp, #160]
  42c2e4:	bl	4328b0 <_obstack_memory_used@@Base+0x166d0>
  42c2e8:	sxtw	x0, w0
  42c2ec:	str	x0, [sp, #168]
  42c2f0:	b	42c4ec <_obstack_memory_used@@Base+0x1030c>
  42c2f4:	ldr	w0, [sp, #156]
  42c2f8:	cmp	w0, #0x4
  42c2fc:	b.ne	42c4ec <_obstack_memory_used@@Base+0x1030c>  // b.any
  42c300:	ldr	x0, [sp, #160]
  42c304:	ldr	x1, [x0]
  42c308:	ldr	x0, [sp, #40]
  42c30c:	lsl	x0, x0, #4
  42c310:	add	x0, x1, x0
  42c314:	ldr	x0, [x0]
  42c318:	add	x0, x0, #0x1
  42c31c:	str	x0, [sp, #144]
  42c320:	ldr	x1, [sp, #144]
  42c324:	ldr	x0, [sp, #64]
  42c328:	cmp	x1, x0
  42c32c:	b.ge	42c360 <_obstack_memory_used@@Base+0x10180>  // b.tcont
  42c330:	ldr	x0, [sp, #144]
  42c334:	lsl	x0, x0, #4
  42c338:	ldr	x1, [sp, #56]
  42c33c:	add	x0, x1, x0
  42c340:	ldr	x1, [x0, #8]
  42c344:	ldr	x0, [sp, #144]
  42c348:	lsl	x0, x0, #4
  42c34c:	ldr	x2, [sp, #56]
  42c350:	add	x0, x2, x0
  42c354:	ldr	x0, [x0]
  42c358:	sub	x0, x1, x0
  42c35c:	str	x0, [sp, #168]
  42c360:	ldr	x0, [sp, #24]
  42c364:	cmp	x0, #0x0
  42c368:	b.eq	42c44c <_obstack_memory_used@@Base+0x1026c>  // b.none
  42c36c:	ldr	x1, [sp, #144]
  42c370:	ldr	x0, [sp, #64]
  42c374:	cmp	x1, x0
  42c378:	b.ge	42c3b4 <_obstack_memory_used@@Base+0x101d4>  // b.tcont
  42c37c:	ldr	x0, [sp, #144]
  42c380:	lsl	x0, x0, #4
  42c384:	ldr	x1, [sp, #56]
  42c388:	add	x0, x1, x0
  42c38c:	ldr	x0, [x0]
  42c390:	cmn	x0, #0x1
  42c394:	b.eq	42c3b4 <_obstack_memory_used@@Base+0x101d4>  // b.none
  42c398:	ldr	x0, [sp, #144]
  42c39c:	lsl	x0, x0, #4
  42c3a0:	ldr	x1, [sp, #56]
  42c3a4:	add	x0, x1, x0
  42c3a8:	ldr	x0, [x0, #8]
  42c3ac:	cmn	x0, #0x1
  42c3b0:	b.ne	42c3bc <_obstack_memory_used@@Base+0x101dc>  // b.any
  42c3b4:	mov	x0, #0xffffffffffffffff    	// #-1
  42c3b8:	b	42c610 <_obstack_memory_used@@Base+0x10430>
  42c3bc:	ldr	x0, [sp, #168]
  42c3c0:	cmp	x0, #0x0
  42c3c4:	b.eq	42c44c <_obstack_memory_used@@Base+0x1026c>  // b.none
  42c3c8:	ldr	x0, [sp, #72]
  42c3cc:	ldr	x0, [x0, #8]
  42c3d0:	str	x0, [sp, #136]
  42c3d4:	ldr	x0, [sp, #72]
  42c3d8:	ldr	x1, [x0, #48]
  42c3dc:	ldr	x0, [sp, #48]
  42c3e0:	ldr	x0, [x0]
  42c3e4:	sub	x0, x1, x0
  42c3e8:	ldr	x1, [sp, #168]
  42c3ec:	cmp	x1, x0
  42c3f0:	b.gt	42c444 <_obstack_memory_used@@Base+0x10264>
  42c3f4:	ldr	x0, [sp, #144]
  42c3f8:	lsl	x0, x0, #4
  42c3fc:	ldr	x1, [sp, #56]
  42c400:	add	x0, x1, x0
  42c404:	ldr	x0, [x0]
  42c408:	mov	x1, x0
  42c40c:	ldr	x0, [sp, #136]
  42c410:	add	x3, x0, x1
  42c414:	ldr	x0, [sp, #48]
  42c418:	ldr	x0, [x0]
  42c41c:	mov	x1, x0
  42c420:	ldr	x0, [sp, #136]
  42c424:	add	x0, x0, x1
  42c428:	ldr	x1, [sp, #168]
  42c42c:	mov	x2, x1
  42c430:	mov	x1, x0
  42c434:	mov	x0, x3
  42c438:	bl	402b00 <memcmp@plt>
  42c43c:	cmp	w0, #0x0
  42c440:	b.eq	42c44c <_obstack_memory_used@@Base+0x1026c>  // b.none
  42c444:	mov	x0, #0xffffffffffffffff    	// #-1
  42c448:	b	42c610 <_obstack_memory_used@@Base+0x10430>
  42c44c:	ldr	x0, [sp, #168]
  42c450:	cmp	x0, #0x0
  42c454:	b.ne	42c4ec <_obstack_memory_used@@Base+0x1030c>  // b.any
  42c458:	ldr	x1, [sp, #40]
  42c45c:	ldr	x0, [sp, #32]
  42c460:	bl	41ff4c <_obstack_memory_used@@Base+0x3d6c>
  42c464:	strb	w0, [sp, #135]
  42c468:	ldrb	w0, [sp, #135]
  42c46c:	eor	w0, w0, #0x1
  42c470:	and	w0, w0, #0xff
  42c474:	and	x0, x0, #0xff
  42c478:	cmp	x0, #0x0
  42c47c:	b.eq	42c488 <_obstack_memory_used@@Base+0x102a8>  // b.none
  42c480:	mov	x0, #0xfffffffffffffffe    	// #-2
  42c484:	b	42c610 <_obstack_memory_used@@Base+0x10430>
  42c488:	ldr	x0, [sp, #160]
  42c48c:	ldr	x2, [x0, #40]
  42c490:	ldr	x1, [sp, #40]
  42c494:	mov	x0, x1
  42c498:	lsl	x0, x0, #1
  42c49c:	add	x0, x0, x1
  42c4a0:	lsl	x0, x0, #3
  42c4a4:	add	x0, x2, x0
  42c4a8:	ldr	x0, [x0, #16]
  42c4ac:	ldr	x0, [x0]
  42c4b0:	str	x0, [sp, #120]
  42c4b4:	ldr	x0, [sp, #72]
  42c4b8:	ldr	x1, [x0, #184]
  42c4bc:	ldr	x0, [sp, #48]
  42c4c0:	ldr	x0, [x0]
  42c4c4:	lsl	x0, x0, #3
  42c4c8:	add	x0, x1, x0
  42c4cc:	ldr	x0, [x0]
  42c4d0:	add	x0, x0, #0x8
  42c4d4:	ldr	x1, [sp, #120]
  42c4d8:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  42c4dc:	cmp	x0, #0x0
  42c4e0:	b.eq	42c4ec <_obstack_memory_used@@Base+0x1030c>  // b.none
  42c4e4:	ldr	x0, [sp, #120]
  42c4e8:	b	42c610 <_obstack_memory_used@@Base+0x10430>
  42c4ec:	ldr	x0, [sp, #168]
  42c4f0:	cmp	x0, #0x0
  42c4f4:	b.ne	42c52c <_obstack_memory_used@@Base+0x1034c>  // b.any
  42c4f8:	ldr	x0, [sp, #160]
  42c4fc:	ldr	x1, [x0]
  42c500:	ldr	x0, [sp, #40]
  42c504:	lsl	x0, x0, #4
  42c508:	add	x1, x1, x0
  42c50c:	ldr	x0, [sp, #48]
  42c510:	ldr	x0, [x0]
  42c514:	mov	x2, x0
  42c518:	ldr	x0, [sp, #72]
  42c51c:	bl	432df4 <_obstack_memory_used@@Base+0x16c14>
  42c520:	and	w0, w0, #0xff
  42c524:	cmp	w0, #0x0
  42c528:	b.eq	42c60c <_obstack_memory_used@@Base+0x1042c>  // b.none
  42c52c:	ldr	x0, [sp, #160]
  42c530:	ldr	x1, [x0, #24]
  42c534:	ldr	x0, [sp, #40]
  42c538:	lsl	x0, x0, #3
  42c53c:	add	x0, x1, x0
  42c540:	ldr	x0, [x0]
  42c544:	str	x0, [sp, #112]
  42c548:	ldr	x0, [sp, #168]
  42c54c:	cmp	x0, #0x0
  42c550:	b.ne	42c564 <_obstack_memory_used@@Base+0x10384>  // b.any
  42c554:	ldr	x0, [sp, #48]
  42c558:	ldr	x0, [x0]
  42c55c:	add	x0, x0, #0x1
  42c560:	b	42c574 <_obstack_memory_used@@Base+0x10394>
  42c564:	ldr	x0, [sp, #48]
  42c568:	ldr	x1, [x0]
  42c56c:	ldr	x0, [sp, #168]
  42c570:	add	x0, x1, x0
  42c574:	ldr	x1, [sp, #48]
  42c578:	str	x0, [x1]
  42c57c:	ldr	x0, [sp, #24]
  42c580:	cmp	x0, #0x0
  42c584:	b.eq	42c5fc <_obstack_memory_used@@Base+0x1041c>  // b.none
  42c588:	ldr	x0, [sp, #48]
  42c58c:	ldr	x1, [x0]
  42c590:	ldr	x0, [sp, #72]
  42c594:	ldr	x0, [x0, #168]
  42c598:	cmp	x1, x0
  42c59c:	b.gt	42c5f4 <_obstack_memory_used@@Base+0x10414>
  42c5a0:	ldr	x0, [sp, #72]
  42c5a4:	ldr	x1, [x0, #184]
  42c5a8:	ldr	x0, [sp, #48]
  42c5ac:	ldr	x0, [x0]
  42c5b0:	lsl	x0, x0, #3
  42c5b4:	add	x0, x1, x0
  42c5b8:	ldr	x0, [x0]
  42c5bc:	cmp	x0, #0x0
  42c5c0:	b.eq	42c5f4 <_obstack_memory_used@@Base+0x10414>  // b.none
  42c5c4:	ldr	x0, [sp, #72]
  42c5c8:	ldr	x1, [x0, #184]
  42c5cc:	ldr	x0, [sp, #48]
  42c5d0:	ldr	x0, [x0]
  42c5d4:	lsl	x0, x0, #3
  42c5d8:	add	x0, x1, x0
  42c5dc:	ldr	x0, [x0]
  42c5e0:	add	x0, x0, #0x8
  42c5e4:	ldr	x1, [sp, #112]
  42c5e8:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  42c5ec:	cmp	x0, #0x0
  42c5f0:	b.ne	42c5fc <_obstack_memory_used@@Base+0x1041c>  // b.any
  42c5f4:	mov	x0, #0xffffffffffffffff    	// #-1
  42c5f8:	b	42c610 <_obstack_memory_used@@Base+0x10430>
  42c5fc:	ldr	x0, [sp, #32]
  42c600:	str	xzr, [x0, #8]
  42c604:	ldr	x0, [sp, #112]
  42c608:	b	42c610 <_obstack_memory_used@@Base+0x10430>
  42c60c:	mov	x0, #0xffffffffffffffff    	// #-1
  42c610:	ldp	x29, x30, [sp], #192
  42c614:	ret
  42c618:	stp	x29, x30, [sp, #-112]!
  42c61c:	mov	x29, sp
  42c620:	str	x19, [sp, #16]
  42c624:	str	x0, [sp, #72]
  42c628:	str	x1, [sp, #64]
  42c62c:	str	x2, [sp, #56]
  42c630:	str	x3, [sp, #48]
  42c634:	str	x4, [sp, #40]
  42c638:	str	x5, [sp, #32]
  42c63c:	ldr	x0, [sp, #72]
  42c640:	ldr	x0, [x0]
  42c644:	add	x2, x0, #0x1
  42c648:	ldr	x1, [sp, #72]
  42c64c:	str	x2, [x1]
  42c650:	str	x0, [sp, #104]
  42c654:	ldr	x0, [sp, #72]
  42c658:	ldr	x1, [x0]
  42c65c:	ldr	x0, [sp, #72]
  42c660:	ldr	x0, [x0, #8]
  42c664:	cmp	x1, x0
  42c668:	b.ne	42c6d4 <_obstack_memory_used@@Base+0x104f4>  // b.any
  42c66c:	ldr	x0, [sp, #72]
  42c670:	ldr	x2, [x0, #16]
  42c674:	ldr	x0, [sp, #72]
  42c678:	ldr	x0, [x0, #8]
  42c67c:	mov	x1, x0
  42c680:	mov	x0, x1
  42c684:	lsl	x0, x0, #1
  42c688:	add	x0, x0, x1
  42c68c:	lsl	x0, x0, #5
  42c690:	mov	x1, x0
  42c694:	mov	x0, x2
  42c698:	bl	4029e0 <realloc@plt>
  42c69c:	str	x0, [sp, #96]
  42c6a0:	ldr	x0, [sp, #96]
  42c6a4:	cmp	x0, #0x0
  42c6a8:	b.ne	42c6b4 <_obstack_memory_used@@Base+0x104d4>  // b.any
  42c6ac:	mov	w0, #0xc                   	// #12
  42c6b0:	b	42c7fc <_obstack_memory_used@@Base+0x1061c>
  42c6b4:	ldr	x0, [sp, #72]
  42c6b8:	ldr	x0, [x0, #8]
  42c6bc:	lsl	x1, x0, #1
  42c6c0:	ldr	x0, [sp, #72]
  42c6c4:	str	x1, [x0, #8]
  42c6c8:	ldr	x0, [sp, #72]
  42c6cc:	ldr	x1, [sp, #96]
  42c6d0:	str	x1, [x0, #16]
  42c6d4:	ldr	x0, [sp, #72]
  42c6d8:	ldr	x2, [x0, #16]
  42c6dc:	ldr	x1, [sp, #104]
  42c6e0:	mov	x0, x1
  42c6e4:	lsl	x0, x0, #1
  42c6e8:	add	x0, x0, x1
  42c6ec:	lsl	x0, x0, #4
  42c6f0:	add	x0, x2, x0
  42c6f4:	ldr	x1, [sp, #64]
  42c6f8:	str	x1, [x0]
  42c6fc:	ldr	x0, [sp, #72]
  42c700:	ldr	x2, [x0, #16]
  42c704:	ldr	x1, [sp, #104]
  42c708:	mov	x0, x1
  42c70c:	lsl	x0, x0, #1
  42c710:	add	x0, x0, x1
  42c714:	lsl	x0, x0, #4
  42c718:	add	x0, x2, x0
  42c71c:	ldr	x1, [sp, #56]
  42c720:	str	x1, [x0, #8]
  42c724:	ldr	x0, [sp, #48]
  42c728:	lsl	x3, x0, #4
  42c72c:	ldr	x0, [sp, #72]
  42c730:	ldr	x2, [x0, #16]
  42c734:	ldr	x1, [sp, #104]
  42c738:	mov	x0, x1
  42c73c:	lsl	x0, x0, #1
  42c740:	add	x0, x0, x1
  42c744:	lsl	x0, x0, #4
  42c748:	add	x19, x2, x0
  42c74c:	mov	x0, x3
  42c750:	bl	4028b0 <malloc@plt>
  42c754:	str	x0, [x19, #16]
  42c758:	ldr	x0, [sp, #72]
  42c75c:	ldr	x2, [x0, #16]
  42c760:	ldr	x1, [sp, #104]
  42c764:	mov	x0, x1
  42c768:	lsl	x0, x0, #1
  42c76c:	add	x0, x0, x1
  42c770:	lsl	x0, x0, #4
  42c774:	add	x0, x2, x0
  42c778:	ldr	x0, [x0, #16]
  42c77c:	cmp	x0, #0x0
  42c780:	b.ne	42c78c <_obstack_memory_used@@Base+0x105ac>  // b.any
  42c784:	mov	w0, #0xc                   	// #12
  42c788:	b	42c7fc <_obstack_memory_used@@Base+0x1061c>
  42c78c:	ldr	x0, [sp, #72]
  42c790:	ldr	x2, [x0, #16]
  42c794:	ldr	x1, [sp, #104]
  42c798:	mov	x0, x1
  42c79c:	lsl	x0, x0, #1
  42c7a0:	add	x0, x0, x1
  42c7a4:	lsl	x0, x0, #4
  42c7a8:	add	x0, x2, x0
  42c7ac:	ldr	x3, [x0, #16]
  42c7b0:	ldr	x0, [sp, #48]
  42c7b4:	lsl	x0, x0, #4
  42c7b8:	mov	x2, x0
  42c7bc:	ldr	x1, [sp, #40]
  42c7c0:	mov	x0, x3
  42c7c4:	bl	4026d0 <memcpy@plt>
  42c7c8:	ldr	x0, [sp, #72]
  42c7cc:	ldr	x2, [x0, #16]
  42c7d0:	ldr	x1, [sp, #104]
  42c7d4:	mov	x0, x1
  42c7d8:	lsl	x0, x0, #1
  42c7dc:	add	x0, x0, x1
  42c7e0:	lsl	x0, x0, #4
  42c7e4:	add	x0, x2, x0
  42c7e8:	add	x0, x0, #0x18
  42c7ec:	ldr	x1, [sp, #32]
  42c7f0:	bl	41f218 <_obstack_memory_used@@Base+0x3038>
  42c7f4:	str	w0, [sp, #92]
  42c7f8:	ldr	w0, [sp, #92]
  42c7fc:	ldr	x19, [sp, #16]
  42c800:	ldp	x29, x30, [sp], #112
  42c804:	ret
  42c808:	stp	x29, x30, [sp, #-80]!
  42c80c:	mov	x29, sp
  42c810:	str	x0, [sp, #56]
  42c814:	str	x1, [sp, #48]
  42c818:	str	x2, [sp, #40]
  42c81c:	str	x3, [sp, #32]
  42c820:	str	x4, [sp, #24]
  42c824:	ldr	x0, [sp, #56]
  42c828:	ldr	x0, [x0]
  42c82c:	sub	x1, x0, #0x1
  42c830:	ldr	x0, [sp, #56]
  42c834:	str	x1, [x0]
  42c838:	ldr	x0, [sp, #56]
  42c83c:	ldr	x0, [x0]
  42c840:	str	x0, [sp, #72]
  42c844:	ldr	x0, [sp, #72]
  42c848:	cmp	x0, #0x0
  42c84c:	ldr	x0, [sp, #56]
  42c850:	ldr	x2, [x0, #16]
  42c854:	ldr	x1, [sp, #72]
  42c858:	mov	x0, x1
  42c85c:	lsl	x0, x0, #1
  42c860:	add	x0, x0, x1
  42c864:	lsl	x0, x0, #4
  42c868:	add	x0, x2, x0
  42c86c:	ldr	x1, [x0]
  42c870:	ldr	x0, [sp, #48]
  42c874:	str	x1, [x0]
  42c878:	ldr	x0, [sp, #56]
  42c87c:	ldr	x2, [x0, #16]
  42c880:	ldr	x1, [sp, #72]
  42c884:	mov	x0, x1
  42c888:	lsl	x0, x0, #1
  42c88c:	add	x0, x0, x1
  42c890:	lsl	x0, x0, #4
  42c894:	add	x0, x2, x0
  42c898:	ldr	x1, [x0, #16]
  42c89c:	ldr	x0, [sp, #40]
  42c8a0:	lsl	x0, x0, #4
  42c8a4:	mov	x2, x0
  42c8a8:	ldr	x0, [sp, #32]
  42c8ac:	bl	4026d0 <memcpy@plt>
  42c8b0:	ldr	x0, [sp, #24]
  42c8b4:	ldr	x0, [x0, #16]
  42c8b8:	bl	402b60 <free@plt>
  42c8bc:	ldr	x0, [sp, #56]
  42c8c0:	ldr	x2, [x0, #16]
  42c8c4:	ldr	x1, [sp, #72]
  42c8c8:	mov	x0, x1
  42c8cc:	lsl	x0, x0, #1
  42c8d0:	add	x0, x0, x1
  42c8d4:	lsl	x0, x0, #4
  42c8d8:	add	x0, x2, x0
  42c8dc:	ldr	x0, [x0, #16]
  42c8e0:	bl	402b60 <free@plt>
  42c8e4:	ldr	x0, [sp, #56]
  42c8e8:	ldr	x2, [x0, #16]
  42c8ec:	ldr	x1, [sp, #72]
  42c8f0:	mov	x0, x1
  42c8f4:	lsl	x0, x0, #1
  42c8f8:	add	x0, x0, x1
  42c8fc:	lsl	x0, x0, #4
  42c900:	add	x0, x2, x0
  42c904:	ldr	x1, [sp, #24]
  42c908:	add	x0, x0, #0x18
  42c90c:	mov	x2, x1
  42c910:	mov	x3, x0
  42c914:	ldp	x0, x1, [x3]
  42c918:	stp	x0, x1, [x2]
  42c91c:	ldr	x0, [x3, #16]
  42c920:	str	x0, [x2, #16]
  42c924:	ldr	x0, [sp, #56]
  42c928:	ldr	x2, [x0, #16]
  42c92c:	ldr	x1, [sp, #72]
  42c930:	mov	x0, x1
  42c934:	lsl	x0, x0, #1
  42c938:	add	x0, x0, x1
  42c93c:	lsl	x0, x0, #4
  42c940:	add	x0, x2, x0
  42c944:	ldr	x0, [x0, #8]
  42c948:	ldp	x29, x30, [sp], #80
  42c94c:	ret
  42c950:	stp	x29, x30, [sp, #-176]!
  42c954:	mov	x29, sp
  42c958:	str	x0, [x29, #56]
  42c95c:	str	x1, [x29, #48]
  42c960:	str	x2, [x29, #40]
  42c964:	str	x3, [x29, #32]
  42c968:	strb	w4, [x29, #31]
  42c96c:	ldr	x0, [x29, #56]
  42c970:	ldr	x0, [x0]
  42c974:	str	x0, [x29, #128]
  42c978:	str	xzr, [x29, #72]
  42c97c:	mov	x0, #0x2                   	// #2
  42c980:	str	x0, [x29, #80]
  42c984:	str	xzr, [x29, #88]
  42c988:	strb	wzr, [x29, #151]
  42c98c:	ldr	x0, [x29, #40]
  42c990:	cmp	x0, #0x1
  42c994:	ldr	x0, [x29, #48]
  42c998:	ldr	x0, [x0, #184]
  42c99c:	cmp	x0, #0x0
  42c9a0:	ldrb	w0, [x29, #31]
  42c9a4:	cmp	w0, #0x0
  42c9a8:	b.eq	42c9f8 <_obstack_memory_used@@Base+0x10818>  // b.none
  42c9ac:	add	x0, x29, #0x48
  42c9b0:	str	x0, [x29, #160]
  42c9b4:	ldr	x0, [x29, #160]
  42c9b8:	ldr	x0, [x0, #8]
  42c9bc:	mov	x1, x0
  42c9c0:	mov	x0, x1
  42c9c4:	lsl	x0, x0, #1
  42c9c8:	add	x0, x0, x1
  42c9cc:	lsl	x0, x0, #4
  42c9d0:	bl	4028b0 <malloc@plt>
  42c9d4:	mov	x1, x0
  42c9d8:	ldr	x0, [x29, #160]
  42c9dc:	str	x1, [x0, #16]
  42c9e0:	ldr	x0, [x29, #160]
  42c9e4:	ldr	x0, [x0, #16]
  42c9e8:	cmp	x0, #0x0
  42c9ec:	b.ne	42c9fc <_obstack_memory_used@@Base+0x1081c>  // b.any
  42c9f0:	mov	w0, #0xc                   	// #12
  42c9f4:	b	42cd1c <_obstack_memory_used@@Base+0x10b3c>
  42c9f8:	str	xzr, [x29, #160]
  42c9fc:	ldr	x0, [x29, #128]
  42ca00:	ldr	x0, [x0, #144]
  42ca04:	str	x0, [x29, #168]
  42ca08:	add	x0, x29, #0x60
  42ca0c:	mov	x2, #0x18                  	// #24
  42ca10:	mov	w1, #0x0                   	// #0
  42ca14:	bl	402980 <memset@plt>
  42ca18:	ldr	x0, [x29, #40]
  42ca1c:	lsl	x0, x0, #4
  42ca20:	cmp	x0, #0xfbf
  42ca24:	b.hi	42ca58 <_obstack_memory_used@@Base+0x10878>  // b.pmore
  42ca28:	ldr	x0, [x29, #40]
  42ca2c:	lsl	x0, x0, #4
  42ca30:	add	x0, x0, #0xf
  42ca34:	lsr	x0, x0, #4
  42ca38:	lsl	x0, x0, #4
  42ca3c:	sub	sp, sp, x0
  42ca40:	mov	x0, sp
  42ca44:	add	x0, x0, #0xf
  42ca48:	lsr	x0, x0, #4
  42ca4c:	lsl	x0, x0, #4
  42ca50:	str	x0, [x29, #152]
  42ca54:	b	42ca8c <_obstack_memory_used@@Base+0x108ac>
  42ca58:	ldr	x0, [x29, #40]
  42ca5c:	lsl	x0, x0, #4
  42ca60:	bl	4028b0 <malloc@plt>
  42ca64:	str	x0, [x29, #152]
  42ca68:	ldr	x0, [x29, #152]
  42ca6c:	cmp	x0, #0x0
  42ca70:	b.ne	42ca84 <_obstack_memory_used@@Base+0x108a4>  // b.any
  42ca74:	ldr	x0, [x29, #160]
  42ca78:	bl	42cd28 <_obstack_memory_used@@Base+0x10b48>
  42ca7c:	mov	w0, #0xc                   	// #12
  42ca80:	b	42cd1c <_obstack_memory_used@@Base+0x10b3c>
  42ca84:	mov	w0, #0x1                   	// #1
  42ca88:	strb	w0, [x29, #151]
  42ca8c:	ldr	x0, [x29, #40]
  42ca90:	lsl	x0, x0, #4
  42ca94:	mov	x2, x0
  42ca98:	ldr	x1, [x29, #32]
  42ca9c:	ldr	x0, [x29, #152]
  42caa0:	bl	4026d0 <memcpy@plt>
  42caa4:	ldr	x0, [x29, #32]
  42caa8:	ldr	x0, [x0]
  42caac:	str	x0, [x29, #120]
  42cab0:	b	42cce4 <_obstack_memory_used@@Base+0x10b04>
  42cab4:	ldr	x0, [x29, #120]
  42cab8:	ldr	x1, [x29, #40]
  42cabc:	mov	x5, x1
  42cac0:	mov	x4, x0
  42cac4:	ldr	x3, [x29, #168]
  42cac8:	ldr	x2, [x29, #152]
  42cacc:	ldr	x1, [x29, #32]
  42cad0:	ldr	x0, [x29, #128]
  42cad4:	bl	42cdd0 <_obstack_memory_used@@Base+0x10bf0>
  42cad8:	ldr	x0, [x29, #32]
  42cadc:	ldr	x1, [x0, #8]
  42cae0:	ldr	x0, [x29, #120]
  42cae4:	cmp	x1, x0
  42cae8:	b.ne	42cbf8 <_obstack_memory_used@@Base+0x10a18>  // b.any
  42caec:	ldr	x0, [x29, #48]
  42caf0:	ldr	x0, [x0, #176]
  42caf4:	ldr	x1, [x29, #168]
  42caf8:	cmp	x1, x0
  42cafc:	b.ne	42cbf8 <_obstack_memory_used@@Base+0x10a18>  // b.any
  42cb00:	ldr	x0, [x29, #160]
  42cb04:	cmp	x0, #0x0
  42cb08:	b.eq	42cbd4 <_obstack_memory_used@@Base+0x109f4>  // b.none
  42cb0c:	str	xzr, [x29, #136]
  42cb10:	b	42cb58 <_obstack_memory_used@@Base+0x10978>
  42cb14:	ldr	x0, [x29, #136]
  42cb18:	lsl	x0, x0, #4
  42cb1c:	ldr	x1, [x29, #32]
  42cb20:	add	x0, x1, x0
  42cb24:	ldr	x0, [x0]
  42cb28:	cmp	x0, #0x0
  42cb2c:	b.lt	42cb4c <_obstack_memory_used@@Base+0x1096c>  // b.tstop
  42cb30:	ldr	x0, [x29, #136]
  42cb34:	lsl	x0, x0, #4
  42cb38:	ldr	x1, [x29, #32]
  42cb3c:	add	x0, x1, x0
  42cb40:	ldr	x0, [x0, #8]
  42cb44:	cmn	x0, #0x1
  42cb48:	b.eq	42cb6c <_obstack_memory_used@@Base+0x1098c>  // b.none
  42cb4c:	ldr	x0, [x29, #136]
  42cb50:	add	x0, x0, #0x1
  42cb54:	str	x0, [x29, #136]
  42cb58:	ldr	x0, [x29, #136]
  42cb5c:	ldr	x1, [x29, #40]
  42cb60:	cmp	x1, x0
  42cb64:	b.hi	42cb14 <_obstack_memory_used@@Base+0x10934>  // b.pmore
  42cb68:	b	42cb70 <_obstack_memory_used@@Base+0x10990>
  42cb6c:	nop
  42cb70:	ldr	x0, [x29, #40]
  42cb74:	ldr	x1, [x29, #136]
  42cb78:	cmp	x1, x0
  42cb7c:	b.ne	42cba8 <_obstack_memory_used@@Base+0x109c8>  // b.any
  42cb80:	ldr	x0, [x29, #112]
  42cb84:	bl	402b60 <free@plt>
  42cb88:	ldrb	w0, [x29, #151]
  42cb8c:	cmp	w0, #0x0
  42cb90:	b.eq	42cb9c <_obstack_memory_used@@Base+0x109bc>  // b.none
  42cb94:	ldr	x0, [x29, #152]
  42cb98:	bl	402b60 <free@plt>
  42cb9c:	ldr	x0, [x29, #160]
  42cba0:	bl	42cd28 <_obstack_memory_used@@Base+0x10b48>
  42cba4:	b	42cd1c <_obstack_memory_used@@Base+0x10b3c>
  42cba8:	ldr	x1, [x29, #40]
  42cbac:	add	x2, x29, #0x60
  42cbb0:	add	x0, x29, #0x78
  42cbb4:	mov	x4, x2
  42cbb8:	ldr	x3, [x29, #32]
  42cbbc:	mov	x2, x1
  42cbc0:	mov	x1, x0
  42cbc4:	ldr	x0, [x29, #160]
  42cbc8:	bl	42c808 <_obstack_memory_used@@Base+0x10628>
  42cbcc:	str	x0, [x29, #168]
  42cbd0:	b	42cbf8 <_obstack_memory_used@@Base+0x10a18>
  42cbd4:	ldr	x0, [x29, #112]
  42cbd8:	bl	402b60 <free@plt>
  42cbdc:	ldrb	w0, [x29, #151]
  42cbe0:	cmp	w0, #0x0
  42cbe4:	b.eq	42cbf0 <_obstack_memory_used@@Base+0x10a10>  // b.none
  42cbe8:	ldr	x0, [x29, #152]
  42cbec:	bl	402b60 <free@plt>
  42cbf0:	mov	w0, #0x0                   	// #0
  42cbf4:	b	42cd1c <_obstack_memory_used@@Base+0x10b3c>
  42cbf8:	ldr	x0, [x29, #40]
  42cbfc:	add	x2, x29, #0x60
  42cc00:	add	x1, x29, #0x78
  42cc04:	ldr	x6, [x29, #160]
  42cc08:	mov	x5, x2
  42cc0c:	ldr	x4, [x29, #168]
  42cc10:	mov	x3, x1
  42cc14:	ldr	x2, [x29, #32]
  42cc18:	mov	x1, x0
  42cc1c:	ldr	x0, [x29, #48]
  42cc20:	bl	42c0cc <_obstack_memory_used@@Base+0xfeec>
  42cc24:	str	x0, [x29, #168]
  42cc28:	ldr	x0, [x29, #168]
  42cc2c:	lsr	x0, x0, #63
  42cc30:	and	w0, w0, #0xff
  42cc34:	and	x0, x0, #0xff
  42cc38:	cmp	x0, #0x0
  42cc3c:	b.eq	42cce4 <_obstack_memory_used@@Base+0x10b04>  // b.none
  42cc40:	ldr	x0, [x29, #168]
  42cc44:	cmn	x0, #0x2
  42cc48:	cset	w0, eq  // eq = none
  42cc4c:	and	w0, w0, #0xff
  42cc50:	and	x0, x0, #0xff
  42cc54:	cmp	x0, #0x0
  42cc58:	b.eq	42cc88 <_obstack_memory_used@@Base+0x10aa8>  // b.none
  42cc5c:	ldr	x0, [x29, #112]
  42cc60:	bl	402b60 <free@plt>
  42cc64:	ldrb	w0, [x29, #151]
  42cc68:	cmp	w0, #0x0
  42cc6c:	b.eq	42cc78 <_obstack_memory_used@@Base+0x10a98>  // b.none
  42cc70:	ldr	x0, [x29, #152]
  42cc74:	bl	402b60 <free@plt>
  42cc78:	ldr	x0, [x29, #160]
  42cc7c:	bl	42cd28 <_obstack_memory_used@@Base+0x10b48>
  42cc80:	mov	w0, #0xc                   	// #12
  42cc84:	b	42cd1c <_obstack_memory_used@@Base+0x10b3c>
  42cc88:	ldr	x0, [x29, #160]
  42cc8c:	cmp	x0, #0x0
  42cc90:	b.eq	42ccc0 <_obstack_memory_used@@Base+0x10ae0>  // b.none
  42cc94:	ldr	x1, [x29, #40]
  42cc98:	add	x2, x29, #0x60
  42cc9c:	add	x0, x29, #0x78
  42cca0:	mov	x4, x2
  42cca4:	ldr	x3, [x29, #32]
  42cca8:	mov	x2, x1
  42ccac:	mov	x1, x0
  42ccb0:	ldr	x0, [x29, #160]
  42ccb4:	bl	42c808 <_obstack_memory_used@@Base+0x10628>
  42ccb8:	str	x0, [x29, #168]
  42ccbc:	b	42cce4 <_obstack_memory_used@@Base+0x10b04>
  42ccc0:	ldr	x0, [x29, #112]
  42ccc4:	bl	402b60 <free@plt>
  42ccc8:	ldrb	w0, [x29, #151]
  42cccc:	cmp	w0, #0x0
  42ccd0:	b.eq	42ccdc <_obstack_memory_used@@Base+0x10afc>  // b.none
  42ccd4:	ldr	x0, [x29, #152]
  42ccd8:	bl	402b60 <free@plt>
  42ccdc:	mov	w0, #0x1                   	// #1
  42cce0:	b	42cd1c <_obstack_memory_used@@Base+0x10b3c>
  42cce4:	ldr	x0, [x29, #32]
  42cce8:	ldr	x1, [x0, #8]
  42ccec:	ldr	x0, [x29, #120]
  42ccf0:	cmp	x1, x0
  42ccf4:	b.ge	42cab4 <_obstack_memory_used@@Base+0x108d4>  // b.tcont
  42ccf8:	ldr	x0, [x29, #112]
  42ccfc:	bl	402b60 <free@plt>
  42cd00:	ldrb	w0, [x29, #151]
  42cd04:	cmp	w0, #0x0
  42cd08:	b.eq	42cd14 <_obstack_memory_used@@Base+0x10b34>  // b.none
  42cd0c:	ldr	x0, [x29, #152]
  42cd10:	bl	402b60 <free@plt>
  42cd14:	ldr	x0, [x29, #160]
  42cd18:	bl	42cd28 <_obstack_memory_used@@Base+0x10b48>
  42cd1c:	mov	sp, x29
  42cd20:	ldp	x29, x30, [sp], #176
  42cd24:	ret
  42cd28:	stp	x29, x30, [sp, #-48]!
  42cd2c:	mov	x29, sp
  42cd30:	str	x0, [sp, #24]
  42cd34:	ldr	x0, [sp, #24]
  42cd38:	cmp	x0, #0x0
  42cd3c:	b.eq	42cdc4 <_obstack_memory_used@@Base+0x10be4>  // b.none
  42cd40:	str	xzr, [sp, #40]
  42cd44:	b	42cda4 <_obstack_memory_used@@Base+0x10bc4>
  42cd48:	ldr	x0, [sp, #24]
  42cd4c:	ldr	x2, [x0, #16]
  42cd50:	ldr	x1, [sp, #40]
  42cd54:	mov	x0, x1
  42cd58:	lsl	x0, x0, #1
  42cd5c:	add	x0, x0, x1
  42cd60:	lsl	x0, x0, #4
  42cd64:	add	x0, x2, x0
  42cd68:	ldr	x0, [x0, #40]
  42cd6c:	bl	402b60 <free@plt>
  42cd70:	ldr	x0, [sp, #24]
  42cd74:	ldr	x2, [x0, #16]
  42cd78:	ldr	x1, [sp, #40]
  42cd7c:	mov	x0, x1
  42cd80:	lsl	x0, x0, #1
  42cd84:	add	x0, x0, x1
  42cd88:	lsl	x0, x0, #4
  42cd8c:	add	x0, x2, x0
  42cd90:	ldr	x0, [x0, #16]
  42cd94:	bl	402b60 <free@plt>
  42cd98:	ldr	x0, [sp, #40]
  42cd9c:	add	x0, x0, #0x1
  42cda0:	str	x0, [sp, #40]
  42cda4:	ldr	x0, [sp, #24]
  42cda8:	ldr	x0, [x0]
  42cdac:	ldr	x1, [sp, #40]
  42cdb0:	cmp	x1, x0
  42cdb4:	b.lt	42cd48 <_obstack_memory_used@@Base+0x10b68>  // b.tstop
  42cdb8:	ldr	x0, [sp, #24]
  42cdbc:	ldr	x0, [x0, #16]
  42cdc0:	bl	402b60 <free@plt>
  42cdc4:	mov	w0, #0x0                   	// #0
  42cdc8:	ldp	x29, x30, [sp], #48
  42cdcc:	ret
  42cdd0:	stp	x29, x30, [sp, #-96]!
  42cdd4:	mov	x29, sp
  42cdd8:	str	x0, [sp, #56]
  42cddc:	str	x1, [sp, #48]
  42cde0:	str	x2, [sp, #40]
  42cde4:	str	x3, [sp, #32]
  42cde8:	str	x4, [sp, #24]
  42cdec:	str	x5, [sp, #16]
  42cdf0:	ldr	x0, [sp, #56]
  42cdf4:	ldr	x1, [x0]
  42cdf8:	ldr	x0, [sp, #32]
  42cdfc:	lsl	x0, x0, #4
  42ce00:	add	x0, x1, x0
  42ce04:	ldrb	w0, [x0, #8]
  42ce08:	str	w0, [sp, #92]
  42ce0c:	ldr	w0, [sp, #92]
  42ce10:	cmp	w0, #0x8
  42ce14:	b.ne	42ce7c <_obstack_memory_used@@Base+0x10c9c>  // b.any
  42ce18:	ldr	x0, [sp, #56]
  42ce1c:	ldr	x1, [x0]
  42ce20:	ldr	x0, [sp, #32]
  42ce24:	lsl	x0, x0, #4
  42ce28:	add	x0, x1, x0
  42ce2c:	ldr	x0, [x0]
  42ce30:	add	x0, x0, #0x1
  42ce34:	str	x0, [sp, #72]
  42ce38:	ldr	x1, [sp, #72]
  42ce3c:	ldr	x0, [sp, #16]
  42ce40:	cmp	x1, x0
  42ce44:	b.ge	42cf84 <_obstack_memory_used@@Base+0x10da4>  // b.tcont
  42ce48:	ldr	x0, [sp, #72]
  42ce4c:	lsl	x0, x0, #4
  42ce50:	ldr	x1, [sp, #48]
  42ce54:	add	x0, x1, x0
  42ce58:	ldr	x1, [sp, #24]
  42ce5c:	str	x1, [x0]
  42ce60:	ldr	x0, [sp, #72]
  42ce64:	lsl	x0, x0, #4
  42ce68:	ldr	x1, [sp, #48]
  42ce6c:	add	x0, x1, x0
  42ce70:	mov	x1, #0xffffffffffffffff    	// #-1
  42ce74:	str	x1, [x0, #8]
  42ce78:	b	42cf84 <_obstack_memory_used@@Base+0x10da4>
  42ce7c:	ldr	w0, [sp, #92]
  42ce80:	cmp	w0, #0x9
  42ce84:	b.ne	42cf84 <_obstack_memory_used@@Base+0x10da4>  // b.any
  42ce88:	ldr	x0, [sp, #56]
  42ce8c:	ldr	x1, [x0]
  42ce90:	ldr	x0, [sp, #32]
  42ce94:	lsl	x0, x0, #4
  42ce98:	add	x0, x1, x0
  42ce9c:	ldr	x0, [x0]
  42cea0:	add	x0, x0, #0x1
  42cea4:	str	x0, [sp, #80]
  42cea8:	ldr	x1, [sp, #80]
  42ceac:	ldr	x0, [sp, #16]
  42ceb0:	cmp	x1, x0
  42ceb4:	b.ge	42cf84 <_obstack_memory_used@@Base+0x10da4>  // b.tcont
  42ceb8:	ldr	x0, [sp, #80]
  42cebc:	lsl	x0, x0, #4
  42cec0:	ldr	x1, [sp, #48]
  42cec4:	add	x0, x1, x0
  42cec8:	ldr	x0, [x0]
  42cecc:	ldr	x1, [sp, #24]
  42ced0:	cmp	x1, x0
  42ced4:	b.le	42cf0c <_obstack_memory_used@@Base+0x10d2c>
  42ced8:	ldr	x0, [sp, #80]
  42cedc:	lsl	x0, x0, #4
  42cee0:	ldr	x1, [sp, #48]
  42cee4:	add	x0, x1, x0
  42cee8:	ldr	x1, [sp, #24]
  42ceec:	str	x1, [x0, #8]
  42cef0:	ldr	x0, [sp, #16]
  42cef4:	lsl	x0, x0, #4
  42cef8:	mov	x2, x0
  42cefc:	ldr	x1, [sp, #48]
  42cf00:	ldr	x0, [sp, #40]
  42cf04:	bl	4026d0 <memcpy@plt>
  42cf08:	b	42cf84 <_obstack_memory_used@@Base+0x10da4>
  42cf0c:	ldr	x0, [sp, #56]
  42cf10:	ldr	x1, [x0]
  42cf14:	ldr	x0, [sp, #32]
  42cf18:	lsl	x0, x0, #4
  42cf1c:	add	x0, x1, x0
  42cf20:	ldrb	w0, [x0, #10]
  42cf24:	and	w0, w0, #0x8
  42cf28:	and	w0, w0, #0xff
  42cf2c:	cmp	w0, #0x0
  42cf30:	b.eq	42cf6c <_obstack_memory_used@@Base+0x10d8c>  // b.none
  42cf34:	ldr	x0, [sp, #80]
  42cf38:	lsl	x0, x0, #4
  42cf3c:	ldr	x1, [sp, #40]
  42cf40:	add	x0, x1, x0
  42cf44:	ldr	x0, [x0]
  42cf48:	cmn	x0, #0x1
  42cf4c:	b.eq	42cf6c <_obstack_memory_used@@Base+0x10d8c>  // b.none
  42cf50:	ldr	x0, [sp, #16]
  42cf54:	lsl	x0, x0, #4
  42cf58:	mov	x2, x0
  42cf5c:	ldr	x1, [sp, #40]
  42cf60:	ldr	x0, [sp, #48]
  42cf64:	bl	4026d0 <memcpy@plt>
  42cf68:	b	42cf84 <_obstack_memory_used@@Base+0x10da4>
  42cf6c:	ldr	x0, [sp, #80]
  42cf70:	lsl	x0, x0, #4
  42cf74:	ldr	x1, [sp, #48]
  42cf78:	add	x0, x1, x0
  42cf7c:	ldr	x1, [sp, #24]
  42cf80:	str	x1, [x0, #8]
  42cf84:	nop
  42cf88:	ldp	x29, x30, [sp], #96
  42cf8c:	ret
  42cf90:	stp	x29, x30, [sp, #-80]!
  42cf94:	mov	x29, sp
  42cf98:	str	x0, [sp, #24]
  42cf9c:	str	x1, [sp, #16]
  42cfa0:	str	wzr, [sp, #72]
  42cfa4:	ldr	x0, [sp, #16]
  42cfa8:	ldr	x0, [x0, #24]
  42cfac:	str	x0, [sp, #64]
  42cfb0:	ldr	x0, [sp, #24]
  42cfb4:	ldr	x0, [x0, #184]
  42cfb8:	cmp	x0, #0x0
  42cfbc:	b.eq	42cfe0 <_obstack_memory_used@@Base+0x10e00>  // b.none
  42cfc0:	ldr	x0, [sp, #24]
  42cfc4:	ldr	x1, [x0, #184]
  42cfc8:	ldr	x0, [sp, #64]
  42cfcc:	lsl	x0, x0, #3
  42cfd0:	add	x0, x1, x0
  42cfd4:	ldr	x0, [x0]
  42cfd8:	cmp	x0, #0x0
  42cfdc:	b.ne	42cfe0 <_obstack_memory_used@@Base+0x10e00>  // b.any
  42cfe0:	ldr	x0, [sp, #16]
  42cfe4:	ldr	x1, [x0, #16]
  42cfe8:	add	x0, sp, #0x28
  42cfec:	bl	41f080 <_obstack_memory_used@@Base+0x2ea0>
  42cff0:	str	w0, [sp, #76]
  42cff4:	ldr	w0, [sp, #76]
  42cff8:	cmp	w0, #0x0
  42cffc:	cset	w0, ne  // ne = any
  42d000:	and	w0, w0, #0xff
  42d004:	and	x0, x0, #0xff
  42d008:	cmp	x0, #0x0
  42d00c:	b.eq	42d018 <_obstack_memory_used@@Base+0x10e38>  // b.none
  42d010:	ldr	w0, [sp, #76]
  42d014:	b	42d1a0 <_obstack_memory_used@@Base+0x10fc0>
  42d018:	add	x0, sp, #0x28
  42d01c:	mov	x3, x0
  42d020:	ldr	x2, [sp, #64]
  42d024:	ldr	x1, [sp, #16]
  42d028:	ldr	x0, [sp, #24]
  42d02c:	bl	42d690 <_obstack_memory_used@@Base+0x114b0>
  42d030:	str	w0, [sp, #76]
  42d034:	ldr	w0, [sp, #76]
  42d038:	cmp	w0, #0x0
  42d03c:	cset	w0, ne  // ne = any
  42d040:	and	w0, w0, #0xff
  42d044:	and	x0, x0, #0xff
  42d048:	cmp	x0, #0x0
  42d04c:	b.ne	42d180 <_obstack_memory_used@@Base+0x10fa0>  // b.any
  42d050:	b	42d16c <_obstack_memory_used@@Base+0x10f8c>
  42d054:	ldr	x0, [sp, #16]
  42d058:	ldr	x1, [x0]
  42d05c:	ldr	x0, [sp, #64]
  42d060:	lsl	x0, x0, #3
  42d064:	add	x0, x1, x0
  42d068:	ldr	x0, [x0]
  42d06c:	cmp	x0, #0x0
  42d070:	b.ne	42d080 <_obstack_memory_used@@Base+0x10ea0>  // b.any
  42d074:	ldr	w0, [sp, #72]
  42d078:	add	w0, w0, #0x1
  42d07c:	b	42d084 <_obstack_memory_used@@Base+0x10ea4>
  42d080:	mov	w0, #0x0                   	// #0
  42d084:	str	w0, [sp, #72]
  42d088:	ldr	x0, [sp, #24]
  42d08c:	ldr	w0, [x0, #224]
  42d090:	ldr	w1, [sp, #72]
  42d094:	cmp	w1, w0
  42d098:	b.le	42d0cc <_obstack_memory_used@@Base+0x10eec>
  42d09c:	ldr	x0, [sp, #16]
  42d0a0:	ldr	x3, [x0]
  42d0a4:	ldr	x0, [sp, #64]
  42d0a8:	lsl	x0, x0, #3
  42d0ac:	mov	x2, x0
  42d0b0:	mov	w1, #0x0                   	// #0
  42d0b4:	mov	x0, x3
  42d0b8:	bl	402980 <memset@plt>
  42d0bc:	ldr	x0, [sp, #56]
  42d0c0:	bl	402b60 <free@plt>
  42d0c4:	mov	w0, #0x0                   	// #0
  42d0c8:	b	42d1a0 <_obstack_memory_used@@Base+0x10fc0>
  42d0cc:	str	xzr, [sp, #48]
  42d0d0:	ldr	x0, [sp, #64]
  42d0d4:	sub	x0, x0, #0x1
  42d0d8:	str	x0, [sp, #64]
  42d0dc:	ldr	x0, [sp, #24]
  42d0e0:	ldr	x1, [x0, #184]
  42d0e4:	ldr	x0, [sp, #64]
  42d0e8:	lsl	x0, x0, #3
  42d0ec:	add	x0, x1, x0
  42d0f0:	ldr	x0, [x0]
  42d0f4:	cmp	x0, #0x0
  42d0f8:	b.eq	42d134 <_obstack_memory_used@@Base+0x10f54>  // b.none
  42d0fc:	add	x0, sp, #0x28
  42d100:	mov	x3, x0
  42d104:	ldr	x2, [sp, #64]
  42d108:	ldr	x1, [sp, #16]
  42d10c:	ldr	x0, [sp, #24]
  42d110:	bl	42d1a8 <_obstack_memory_used@@Base+0x10fc8>
  42d114:	str	w0, [sp, #76]
  42d118:	ldr	w0, [sp, #76]
  42d11c:	cmp	w0, #0x0
  42d120:	cset	w0, ne  // ne = any
  42d124:	and	w0, w0, #0xff
  42d128:	and	x0, x0, #0xff
  42d12c:	cmp	x0, #0x0
  42d130:	b.ne	42d188 <_obstack_memory_used@@Base+0x10fa8>  // b.any
  42d134:	add	x0, sp, #0x28
  42d138:	mov	x3, x0
  42d13c:	ldr	x2, [sp, #64]
  42d140:	ldr	x1, [sp, #16]
  42d144:	ldr	x0, [sp, #24]
  42d148:	bl	42d690 <_obstack_memory_used@@Base+0x114b0>
  42d14c:	str	w0, [sp, #76]
  42d150:	ldr	w0, [sp, #76]
  42d154:	cmp	w0, #0x0
  42d158:	cset	w0, ne  // ne = any
  42d15c:	and	w0, w0, #0xff
  42d160:	and	x0, x0, #0xff
  42d164:	cmp	x0, #0x0
  42d168:	b.ne	42d190 <_obstack_memory_used@@Base+0x10fb0>  // b.any
  42d16c:	ldr	x0, [sp, #64]
  42d170:	cmp	x0, #0x0
  42d174:	b.gt	42d054 <_obstack_memory_used@@Base+0x10e74>
  42d178:	str	wzr, [sp, #76]
  42d17c:	b	42d194 <_obstack_memory_used@@Base+0x10fb4>
  42d180:	nop
  42d184:	b	42d194 <_obstack_memory_used@@Base+0x10fb4>
  42d188:	nop
  42d18c:	b	42d194 <_obstack_memory_used@@Base+0x10fb4>
  42d190:	nop
  42d194:	ldr	x0, [sp, #56]
  42d198:	bl	402b60 <free@plt>
  42d19c:	ldr	w0, [sp, #76]
  42d1a0:	ldp	x29, x30, [sp], #80
  42d1a4:	ret
  42d1a8:	stp	x29, x30, [sp, #-112]!
  42d1ac:	mov	x29, sp
  42d1b0:	str	x0, [sp, #40]
  42d1b4:	str	x1, [sp, #32]
  42d1b8:	str	x2, [sp, #24]
  42d1bc:	str	x3, [sp, #16]
  42d1c0:	ldr	x0, [sp, #40]
  42d1c4:	ldr	x0, [x0, #152]
  42d1c8:	str	x0, [sp, #88]
  42d1cc:	ldr	x0, [sp, #40]
  42d1d0:	ldr	x1, [x0, #184]
  42d1d4:	ldr	x0, [sp, #24]
  42d1d8:	lsl	x0, x0, #3
  42d1dc:	add	x0, x1, x0
  42d1e0:	ldr	x0, [x0]
  42d1e4:	add	x0, x0, #0x20
  42d1e8:	str	x0, [sp, #80]
  42d1ec:	str	xzr, [sp, #104]
  42d1f0:	b	42d3f0 <_obstack_memory_used@@Base+0x11210>
  42d1f4:	ldr	x0, [sp, #80]
  42d1f8:	ldr	x1, [x0, #16]
  42d1fc:	ldr	x0, [sp, #104]
  42d200:	lsl	x0, x0, #3
  42d204:	add	x0, x1, x0
  42d208:	ldr	x0, [x0]
  42d20c:	str	x0, [sp, #72]
  42d210:	str	wzr, [sp, #100]
  42d214:	ldr	x0, [sp, #88]
  42d218:	ldr	x1, [x0]
  42d21c:	ldr	x0, [sp, #72]
  42d220:	lsl	x0, x0, #4
  42d224:	add	x0, x1, x0
  42d228:	ldrb	w0, [x0, #8]
  42d22c:	and	w0, w0, #0x8
  42d230:	cmp	w0, #0x0
  42d234:	ldr	x0, [sp, #88]
  42d238:	ldr	x1, [x0]
  42d23c:	ldr	x0, [sp, #72]
  42d240:	lsl	x0, x0, #4
  42d244:	add	x0, x1, x0
  42d248:	ldrb	w0, [x0, #10]
  42d24c:	and	w0, w0, #0x10
  42d250:	and	w0, w0, #0xff
  42d254:	cmp	w0, #0x0
  42d258:	b.eq	42d280 <_obstack_memory_used@@Base+0x110a0>  // b.none
  42d25c:	ldr	x0, [sp, #32]
  42d260:	ldr	x0, [x0, #24]
  42d264:	mov	x4, x0
  42d268:	ldr	x3, [sp, #24]
  42d26c:	ldr	x2, [sp, #72]
  42d270:	ldr	x1, [sp, #32]
  42d274:	ldr	x0, [sp, #40]
  42d278:	bl	42ea74 <_obstack_memory_used@@Base+0x12894>
  42d27c:	str	w0, [sp, #100]
  42d280:	ldr	w0, [sp, #100]
  42d284:	cmp	w0, #0x0
  42d288:	b.ne	42d334 <_obstack_memory_used@@Base+0x11154>  // b.any
  42d28c:	ldr	x0, [sp, #88]
  42d290:	ldr	x1, [x0]
  42d294:	ldr	x0, [sp, #72]
  42d298:	lsl	x0, x0, #4
  42d29c:	add	x0, x1, x0
  42d2a0:	ldr	x2, [sp, #24]
  42d2a4:	mov	x1, x0
  42d2a8:	ldr	x0, [sp, #40]
  42d2ac:	bl	432df4 <_obstack_memory_used@@Base+0x16c14>
  42d2b0:	and	w0, w0, #0xff
  42d2b4:	cmp	w0, #0x0
  42d2b8:	b.eq	42d334 <_obstack_memory_used@@Base+0x11154>  // b.none
  42d2bc:	ldr	x0, [sp, #32]
  42d2c0:	ldr	x1, [x0]
  42d2c4:	ldr	x0, [sp, #24]
  42d2c8:	add	x0, x0, #0x1
  42d2cc:	lsl	x0, x0, #3
  42d2d0:	add	x0, x1, x0
  42d2d4:	ldr	x0, [x0]
  42d2d8:	cmp	x0, #0x0
  42d2dc:	b.eq	42d334 <_obstack_memory_used@@Base+0x11154>  // b.none
  42d2e0:	ldr	x0, [sp, #32]
  42d2e4:	ldr	x1, [x0]
  42d2e8:	ldr	x0, [sp, #24]
  42d2ec:	add	x0, x0, #0x1
  42d2f0:	lsl	x0, x0, #3
  42d2f4:	add	x0, x1, x0
  42d2f8:	ldr	x0, [x0]
  42d2fc:	add	x2, x0, #0x8
  42d300:	ldr	x0, [sp, #88]
  42d304:	ldr	x1, [x0, #24]
  42d308:	ldr	x0, [sp, #72]
  42d30c:	lsl	x0, x0, #3
  42d310:	add	x0, x1, x0
  42d314:	ldr	x0, [x0]
  42d318:	mov	x1, x0
  42d31c:	mov	x0, x2
  42d320:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  42d324:	cmp	x0, #0x0
  42d328:	b.eq	42d334 <_obstack_memory_used@@Base+0x11154>  // b.none
  42d32c:	mov	w0, #0x1                   	// #1
  42d330:	str	w0, [sp, #100]
  42d334:	ldr	w0, [sp, #100]
  42d338:	cmp	w0, #0x0
  42d33c:	b.eq	42d3d8 <_obstack_memory_used@@Base+0x111f8>  // b.none
  42d340:	ldr	x0, [sp, #32]
  42d344:	ldr	x0, [x0, #40]
  42d348:	cmp	x0, #0x0
  42d34c:	b.eq	42d3a8 <_obstack_memory_used@@Base+0x111c8>  // b.none
  42d350:	ldrsw	x0, [sp, #100]
  42d354:	ldr	x1, [sp, #24]
  42d358:	add	x0, x1, x0
  42d35c:	str	x0, [sp, #64]
  42d360:	ldr	x0, [sp, #32]
  42d364:	add	x6, x0, #0x20
  42d368:	ldr	x0, [sp, #88]
  42d36c:	ldr	x1, [x0, #24]
  42d370:	ldr	x0, [sp, #72]
  42d374:	lsl	x0, x0, #3
  42d378:	add	x0, x1, x0
  42d37c:	ldr	x0, [x0]
  42d380:	ldr	x5, [sp, #24]
  42d384:	ldr	x4, [sp, #72]
  42d388:	ldr	x3, [sp, #64]
  42d38c:	mov	x2, x0
  42d390:	mov	x1, x6
  42d394:	ldr	x0, [sp, #40]
  42d398:	bl	42dca4 <_obstack_memory_used@@Base+0x11ac4>
  42d39c:	and	w0, w0, #0xff
  42d3a0:	cmp	w0, #0x0
  42d3a4:	b.ne	42d3e0 <_obstack_memory_used@@Base+0x11200>  // b.any
  42d3a8:	ldr	x1, [sp, #72]
  42d3ac:	ldr	x0, [sp, #16]
  42d3b0:	bl	41ff4c <_obstack_memory_used@@Base+0x3d6c>
  42d3b4:	strb	w0, [sp, #63]
  42d3b8:	ldrb	w0, [sp, #63]
  42d3bc:	eor	w0, w0, #0x1
  42d3c0:	and	w0, w0, #0xff
  42d3c4:	and	x0, x0, #0xff
  42d3c8:	cmp	x0, #0x0
  42d3cc:	b.eq	42d3e4 <_obstack_memory_used@@Base+0x11204>  // b.none
  42d3d0:	mov	w0, #0xc                   	// #12
  42d3d4:	b	42d408 <_obstack_memory_used@@Base+0x11228>
  42d3d8:	nop
  42d3dc:	b	42d3e4 <_obstack_memory_used@@Base+0x11204>
  42d3e0:	nop
  42d3e4:	ldr	x0, [sp, #104]
  42d3e8:	add	x0, x0, #0x1
  42d3ec:	str	x0, [sp, #104]
  42d3f0:	ldr	x0, [sp, #80]
  42d3f4:	ldr	x0, [x0, #8]
  42d3f8:	ldr	x1, [sp, #104]
  42d3fc:	cmp	x1, x0
  42d400:	b.lt	42d1f4 <_obstack_memory_used@@Base+0x11014>  // b.tstop
  42d404:	mov	w0, #0x0                   	// #0
  42d408:	ldp	x29, x30, [sp], #112
  42d40c:	ret
  42d410:	stp	x29, x30, [sp, #-48]!
  42d414:	mov	x29, sp
  42d418:	str	x0, [sp, #24]
  42d41c:	str	x1, [sp, #16]
  42d420:	ldr	x0, [sp, #24]
  42d424:	ldr	x0, [x0, #192]
  42d428:	str	x0, [sp, #40]
  42d42c:	ldr	x0, [sp, #24]
  42d430:	ldr	x0, [x0, #64]
  42d434:	ldr	x1, [sp, #16]
  42d438:	cmp	x1, x0
  42d43c:	b.lt	42d458 <_obstack_memory_used@@Base+0x11278>  // b.tstop
  42d440:	ldr	x0, [sp, #24]
  42d444:	ldr	x1, [x0, #64]
  42d448:	ldr	x0, [sp, #24]
  42d44c:	ldr	x0, [x0, #88]
  42d450:	cmp	x1, x0
  42d454:	b.lt	42d484 <_obstack_memory_used@@Base+0x112a4>  // b.tstop
  42d458:	ldr	x0, [sp, #24]
  42d45c:	ldr	x0, [x0, #48]
  42d460:	ldr	x1, [sp, #16]
  42d464:	cmp	x1, x0
  42d468:	b.lt	42d4c0 <_obstack_memory_used@@Base+0x112e0>  // b.tstop
  42d46c:	ldr	x0, [sp, #24]
  42d470:	ldr	x1, [x0, #48]
  42d474:	ldr	x0, [sp, #24]
  42d478:	ldr	x0, [x0, #88]
  42d47c:	cmp	x1, x0
  42d480:	b.ge	42d4c0 <_obstack_memory_used@@Base+0x112e0>  // b.tcont
  42d484:	ldr	x0, [sp, #16]
  42d488:	add	w0, w0, #0x1
  42d48c:	mov	w1, w0
  42d490:	ldr	x0, [sp, #24]
  42d494:	bl	43301c <_obstack_memory_used@@Base+0x16e3c>
  42d498:	str	w0, [sp, #36]
  42d49c:	ldr	w0, [sp, #36]
  42d4a0:	cmp	w0, #0x0
  42d4a4:	cset	w0, ne  // ne = any
  42d4a8:	and	w0, w0, #0xff
  42d4ac:	and	x0, x0, #0xff
  42d4b0:	cmp	x0, #0x0
  42d4b4:	b.eq	42d4c0 <_obstack_memory_used@@Base+0x112e0>  // b.none
  42d4b8:	ldr	w0, [sp, #36]
  42d4bc:	b	42d518 <_obstack_memory_used@@Base+0x11338>
  42d4c0:	ldr	x1, [sp, #40]
  42d4c4:	ldr	x0, [sp, #16]
  42d4c8:	cmp	x1, x0
  42d4cc:	b.ge	42d514 <_obstack_memory_used@@Base+0x11334>  // b.tcont
  42d4d0:	ldr	x0, [sp, #24]
  42d4d4:	ldr	x1, [x0, #184]
  42d4d8:	ldr	x0, [sp, #40]
  42d4dc:	add	x0, x0, #0x1
  42d4e0:	lsl	x0, x0, #3
  42d4e4:	add	x3, x1, x0
  42d4e8:	ldr	x1, [sp, #16]
  42d4ec:	ldr	x0, [sp, #40]
  42d4f0:	sub	x0, x1, x0
  42d4f4:	lsl	x0, x0, #3
  42d4f8:	mov	x2, x0
  42d4fc:	mov	w1, #0x0                   	// #0
  42d500:	mov	x0, x3
  42d504:	bl	402980 <memset@plt>
  42d508:	ldr	x0, [sp, #24]
  42d50c:	ldr	x1, [sp, #16]
  42d510:	str	x1, [x0, #192]
  42d514:	mov	w0, #0x0                   	// #0
  42d518:	ldp	x29, x30, [sp], #48
  42d51c:	ret
  42d520:	stp	x29, x30, [sp, #-112]!
  42d524:	mov	x29, sp
  42d528:	str	x19, [sp, #16]
  42d52c:	str	x0, [sp, #56]
  42d530:	str	x1, [sp, #48]
  42d534:	str	x2, [sp, #40]
  42d538:	str	x3, [sp, #32]
  42d53c:	str	xzr, [sp, #104]
  42d540:	b	42d670 <_obstack_memory_used@@Base+0x11490>
  42d544:	ldr	x0, [sp, #104]
  42d548:	lsl	x0, x0, #3
  42d54c:	ldr	x1, [sp, #48]
  42d550:	add	x0, x1, x0
  42d554:	ldr	x0, [x0]
  42d558:	cmp	x0, #0x0
  42d55c:	b.ne	42d58c <_obstack_memory_used@@Base+0x113ac>  // b.any
  42d560:	ldr	x0, [sp, #104]
  42d564:	lsl	x0, x0, #3
  42d568:	ldr	x1, [sp, #40]
  42d56c:	add	x1, x1, x0
  42d570:	ldr	x0, [sp, #104]
  42d574:	lsl	x0, x0, #3
  42d578:	ldr	x2, [sp, #48]
  42d57c:	add	x0, x2, x0
  42d580:	ldr	x1, [x1]
  42d584:	str	x1, [x0]
  42d588:	b	42d664 <_obstack_memory_used@@Base+0x11484>
  42d58c:	ldr	x0, [sp, #104]
  42d590:	lsl	x0, x0, #3
  42d594:	ldr	x1, [sp, #40]
  42d598:	add	x0, x1, x0
  42d59c:	ldr	x0, [x0]
  42d5a0:	cmp	x0, #0x0
  42d5a4:	b.eq	42d664 <_obstack_memory_used@@Base+0x11484>  // b.none
  42d5a8:	ldr	x0, [sp, #104]
  42d5ac:	lsl	x0, x0, #3
  42d5b0:	ldr	x1, [sp, #48]
  42d5b4:	add	x0, x1, x0
  42d5b8:	ldr	x0, [x0]
  42d5bc:	add	x3, x0, #0x8
  42d5c0:	ldr	x0, [sp, #104]
  42d5c4:	lsl	x0, x0, #3
  42d5c8:	ldr	x1, [sp, #40]
  42d5cc:	add	x0, x1, x0
  42d5d0:	ldr	x0, [x0]
  42d5d4:	add	x1, x0, #0x8
  42d5d8:	add	x0, sp, #0x48
  42d5dc:	mov	x2, x1
  42d5e0:	mov	x1, x3
  42d5e4:	bl	41f790 <_obstack_memory_used@@Base+0x35b0>
  42d5e8:	str	w0, [sp, #100]
  42d5ec:	ldr	w0, [sp, #100]
  42d5f0:	cmp	w0, #0x0
  42d5f4:	cset	w0, ne  // ne = any
  42d5f8:	and	w0, w0, #0xff
  42d5fc:	and	x0, x0, #0xff
  42d600:	cmp	x0, #0x0
  42d604:	b.eq	42d610 <_obstack_memory_used@@Base+0x11430>  // b.none
  42d608:	ldr	w0, [sp, #100]
  42d60c:	b	42d684 <_obstack_memory_used@@Base+0x114a4>
  42d610:	ldr	x0, [sp, #104]
  42d614:	lsl	x0, x0, #3
  42d618:	ldr	x1, [sp, #48]
  42d61c:	add	x19, x1, x0
  42d620:	add	x1, sp, #0x48
  42d624:	add	x0, sp, #0x64
  42d628:	mov	x2, x1
  42d62c:	ldr	x1, [sp, #56]
  42d630:	bl	4208c4 <_obstack_memory_used@@Base+0x46e4>
  42d634:	str	x0, [x19]
  42d638:	ldr	x0, [sp, #88]
  42d63c:	bl	402b60 <free@plt>
  42d640:	ldr	w0, [sp, #100]
  42d644:	cmp	w0, #0x0
  42d648:	cset	w0, ne  // ne = any
  42d64c:	and	w0, w0, #0xff
  42d650:	and	x0, x0, #0xff
  42d654:	cmp	x0, #0x0
  42d658:	b.eq	42d664 <_obstack_memory_used@@Base+0x11484>  // b.none
  42d65c:	ldr	w0, [sp, #100]
  42d660:	b	42d684 <_obstack_memory_used@@Base+0x114a4>
  42d664:	ldr	x0, [sp, #104]
  42d668:	add	x0, x0, #0x1
  42d66c:	str	x0, [sp, #104]
  42d670:	ldr	x1, [sp, #104]
  42d674:	ldr	x0, [sp, #32]
  42d678:	cmp	x1, x0
  42d67c:	b.lt	42d544 <_obstack_memory_used@@Base+0x11364>  // b.tstop
  42d680:	mov	w0, #0x0                   	// #0
  42d684:	ldr	x19, [sp, #16]
  42d688:	ldp	x29, x30, [sp], #112
  42d68c:	ret
  42d690:	stp	x29, x30, [sp, #-96]!
  42d694:	mov	x29, sp
  42d698:	str	x19, [sp, #16]
  42d69c:	str	x0, [sp, #56]
  42d6a0:	str	x1, [sp, #48]
  42d6a4:	str	x2, [sp, #40]
  42d6a8:	str	x3, [sp, #32]
  42d6ac:	ldr	x0, [sp, #56]
  42d6b0:	ldr	x0, [x0, #152]
  42d6b4:	str	x0, [sp, #88]
  42d6b8:	str	wzr, [sp, #76]
  42d6bc:	ldr	x0, [sp, #56]
  42d6c0:	ldr	x1, [x0, #184]
  42d6c4:	ldr	x0, [sp, #40]
  42d6c8:	lsl	x0, x0, #3
  42d6cc:	add	x0, x1, x0
  42d6d0:	ldr	x0, [x0]
  42d6d4:	cmp	x0, #0x0
  42d6d8:	b.eq	42d6fc <_obstack_memory_used@@Base+0x1151c>  // b.none
  42d6dc:	ldr	x0, [sp, #56]
  42d6e0:	ldr	x1, [x0, #184]
  42d6e4:	ldr	x0, [sp, #40]
  42d6e8:	lsl	x0, x0, #3
  42d6ec:	add	x0, x1, x0
  42d6f0:	ldr	x0, [x0]
  42d6f4:	add	x0, x0, #0x8
  42d6f8:	b	42d700 <_obstack_memory_used@@Base+0x11520>
  42d6fc:	mov	x0, #0x0                   	// #0
  42d700:	str	x0, [sp, #80]
  42d704:	ldr	x0, [sp, #32]
  42d708:	ldr	x0, [x0, #8]
  42d70c:	cmp	x0, #0x0
  42d710:	b.ne	42d730 <_obstack_memory_used@@Base+0x11550>  // b.any
  42d714:	ldr	x0, [sp, #48]
  42d718:	ldr	x1, [x0]
  42d71c:	ldr	x0, [sp, #40]
  42d720:	lsl	x0, x0, #3
  42d724:	add	x0, x1, x0
  42d728:	str	xzr, [x0]
  42d72c:	b	42d824 <_obstack_memory_used@@Base+0x11644>
  42d730:	ldr	x0, [sp, #80]
  42d734:	cmp	x0, #0x0
  42d738:	b.eq	42d7d8 <_obstack_memory_used@@Base+0x115f8>  // b.none
  42d73c:	ldr	x2, [sp, #80]
  42d740:	ldr	x1, [sp, #32]
  42d744:	ldr	x0, [sp, #88]
  42d748:	bl	42d8a8 <_obstack_memory_used@@Base+0x116c8>
  42d74c:	str	w0, [sp, #76]
  42d750:	ldr	w0, [sp, #76]
  42d754:	cmp	w0, #0x0
  42d758:	cset	w0, ne  // ne = any
  42d75c:	and	w0, w0, #0xff
  42d760:	and	x0, x0, #0xff
  42d764:	cmp	x0, #0x0
  42d768:	b.eq	42d774 <_obstack_memory_used@@Base+0x11594>  // b.none
  42d76c:	ldr	w0, [sp, #76]
  42d770:	b	42d89c <_obstack_memory_used@@Base+0x116bc>
  42d774:	ldr	x0, [sp, #48]
  42d778:	ldr	x0, [x0, #40]
  42d77c:	cmp	x0, #0x0
  42d780:	b.eq	42d7d8 <_obstack_memory_used@@Base+0x115f8>  // b.none
  42d784:	ldr	x0, [sp, #48]
  42d788:	add	x1, x0, #0x20
  42d78c:	ldr	x0, [sp, #56]
  42d790:	ldr	x0, [x0, #216]
  42d794:	ldr	x5, [sp, #40]
  42d798:	mov	x4, x0
  42d79c:	mov	x3, x1
  42d7a0:	ldr	x2, [sp, #80]
  42d7a4:	ldr	x1, [sp, #32]
  42d7a8:	ldr	x0, [sp, #88]
  42d7ac:	bl	42e20c <_obstack_memory_used@@Base+0x1202c>
  42d7b0:	str	w0, [sp, #76]
  42d7b4:	ldr	w0, [sp, #76]
  42d7b8:	cmp	w0, #0x0
  42d7bc:	cset	w0, ne  // ne = any
  42d7c0:	and	w0, w0, #0xff
  42d7c4:	and	x0, x0, #0xff
  42d7c8:	cmp	x0, #0x0
  42d7cc:	b.eq	42d7d8 <_obstack_memory_used@@Base+0x115f8>  // b.none
  42d7d0:	ldr	w0, [sp, #76]
  42d7d4:	b	42d89c <_obstack_memory_used@@Base+0x116bc>
  42d7d8:	ldr	x0, [sp, #48]
  42d7dc:	ldr	x1, [x0]
  42d7e0:	ldr	x0, [sp, #40]
  42d7e4:	lsl	x0, x0, #3
  42d7e8:	add	x19, x1, x0
  42d7ec:	add	x0, sp, #0x4c
  42d7f0:	ldr	x2, [sp, #32]
  42d7f4:	ldr	x1, [sp, #88]
  42d7f8:	bl	4208c4 <_obstack_memory_used@@Base+0x46e4>
  42d7fc:	str	x0, [x19]
  42d800:	ldr	w0, [sp, #76]
  42d804:	cmp	w0, #0x0
  42d808:	cset	w0, ne  // ne = any
  42d80c:	and	w0, w0, #0xff
  42d810:	and	x0, x0, #0xff
  42d814:	cmp	x0, #0x0
  42d818:	b.eq	42d824 <_obstack_memory_used@@Base+0x11644>  // b.none
  42d81c:	ldr	w0, [sp, #76]
  42d820:	b	42d89c <_obstack_memory_used@@Base+0x116bc>
  42d824:	ldr	x0, [sp, #80]
  42d828:	cmp	x0, #0x0
  42d82c:	b.eq	42d898 <_obstack_memory_used@@Base+0x116b8>  // b.none
  42d830:	ldr	x0, [sp, #56]
  42d834:	ldr	x1, [x0, #184]
  42d838:	ldr	x0, [sp, #40]
  42d83c:	lsl	x0, x0, #3
  42d840:	add	x0, x1, x0
  42d844:	ldr	x0, [x0]
  42d848:	ldrb	w0, [x0, #104]
  42d84c:	and	w0, w0, #0x40
  42d850:	and	w0, w0, #0xff
  42d854:	cmp	w0, #0x0
  42d858:	b.eq	42d898 <_obstack_memory_used@@Base+0x116b8>  // b.none
  42d85c:	ldr	x3, [sp, #80]
  42d860:	ldr	x2, [sp, #40]
  42d864:	ldr	x1, [sp, #48]
  42d868:	ldr	x0, [sp, #56]
  42d86c:	bl	42e604 <_obstack_memory_used@@Base+0x12424>
  42d870:	str	w0, [sp, #76]
  42d874:	ldr	w0, [sp, #76]
  42d878:	cmp	w0, #0x0
  42d87c:	cset	w0, ne  // ne = any
  42d880:	and	w0, w0, #0xff
  42d884:	and	x0, x0, #0xff
  42d888:	cmp	x0, #0x0
  42d88c:	b.eq	42d898 <_obstack_memory_used@@Base+0x116b8>  // b.none
  42d890:	ldr	w0, [sp, #76]
  42d894:	b	42d89c <_obstack_memory_used@@Base+0x116bc>
  42d898:	mov	w0, #0x0                   	// #0
  42d89c:	ldr	x19, [sp, #16]
  42d8a0:	ldp	x29, x30, [sp], #96
  42d8a4:	ret
  42d8a8:	stp	x29, x30, [sp, #-80]!
  42d8ac:	mov	x29, sp
  42d8b0:	str	x0, [sp, #40]
  42d8b4:	str	x1, [sp, #32]
  42d8b8:	str	x2, [sp, #24]
  42d8bc:	str	wzr, [sp, #60]
  42d8c0:	add	x0, sp, #0x3c
  42d8c4:	ldr	x2, [sp, #32]
  42d8c8:	ldr	x1, [sp, #40]
  42d8cc:	bl	4208c4 <_obstack_memory_used@@Base+0x46e4>
  42d8d0:	str	x0, [sp, #64]
  42d8d4:	ldr	w0, [sp, #60]
  42d8d8:	cmp	w0, #0x0
  42d8dc:	cset	w0, ne  // ne = any
  42d8e0:	and	w0, w0, #0xff
  42d8e4:	and	x0, x0, #0xff
  42d8e8:	cmp	x0, #0x0
  42d8ec:	b.eq	42d8f8 <_obstack_memory_used@@Base+0x11718>  // b.none
  42d8f0:	ldr	w0, [sp, #60]
  42d8f4:	b	42da00 <_obstack_memory_used@@Base+0x11820>
  42d8f8:	ldr	x0, [sp, #64]
  42d8fc:	ldr	x0, [x0, #56]
  42d900:	cmp	x0, #0x0
  42d904:	b.ne	42d9e8 <_obstack_memory_used@@Base+0x11808>  // b.any
  42d908:	ldr	x0, [sp, #64]
  42d90c:	add	x2, x0, #0x38
  42d910:	ldr	x0, [sp, #32]
  42d914:	ldr	x0, [x0, #8]
  42d918:	mov	x1, x0
  42d91c:	mov	x0, x2
  42d920:	bl	41f010 <_obstack_memory_used@@Base+0x2e30>
  42d924:	str	w0, [sp, #60]
  42d928:	ldr	w0, [sp, #60]
  42d92c:	cmp	w0, #0x0
  42d930:	cset	w0, ne  // ne = any
  42d934:	and	w0, w0, #0xff
  42d938:	and	x0, x0, #0xff
  42d93c:	cmp	x0, #0x0
  42d940:	b.eq	42d94c <_obstack_memory_used@@Base+0x1176c>  // b.none
  42d944:	mov	w0, #0xc                   	// #12
  42d948:	b	42da00 <_obstack_memory_used@@Base+0x11820>
  42d94c:	str	xzr, [sp, #72]
  42d950:	b	42d9d4 <_obstack_memory_used@@Base+0x117f4>
  42d954:	ldr	x0, [sp, #64]
  42d958:	add	x3, x0, #0x38
  42d95c:	ldr	x0, [sp, #40]
  42d960:	ldr	x1, [x0, #56]
  42d964:	ldr	x0, [sp, #32]
  42d968:	ldr	x2, [x0, #16]
  42d96c:	ldr	x0, [sp, #72]
  42d970:	lsl	x0, x0, #3
  42d974:	add	x0, x2, x0
  42d978:	ldr	x0, [x0]
  42d97c:	mov	x2, x0
  42d980:	mov	x0, x2
  42d984:	lsl	x0, x0, #1
  42d988:	add	x0, x0, x2
  42d98c:	lsl	x0, x0, #3
  42d990:	add	x0, x1, x0
  42d994:	mov	x1, x0
  42d998:	mov	x0, x3
  42d99c:	bl	41fb00 <_obstack_memory_used@@Base+0x3920>
  42d9a0:	str	w0, [sp, #60]
  42d9a4:	ldr	w0, [sp, #60]
  42d9a8:	cmp	w0, #0x0
  42d9ac:	cset	w0, ne  // ne = any
  42d9b0:	and	w0, w0, #0xff
  42d9b4:	and	x0, x0, #0xff
  42d9b8:	cmp	x0, #0x0
  42d9bc:	b.eq	42d9c8 <_obstack_memory_used@@Base+0x117e8>  // b.none
  42d9c0:	mov	w0, #0xc                   	// #12
  42d9c4:	b	42da00 <_obstack_memory_used@@Base+0x11820>
  42d9c8:	ldr	x0, [sp, #72]
  42d9cc:	add	x0, x0, #0x1
  42d9d0:	str	x0, [sp, #72]
  42d9d4:	ldr	x0, [sp, #32]
  42d9d8:	ldr	x0, [x0, #8]
  42d9dc:	ldr	x1, [sp, #72]
  42d9e0:	cmp	x1, x0
  42d9e4:	b.lt	42d954 <_obstack_memory_used@@Base+0x11774>  // b.tstop
  42d9e8:	ldr	x0, [sp, #64]
  42d9ec:	add	x0, x0, #0x38
  42d9f0:	mov	x2, x0
  42d9f4:	ldr	x1, [sp, #24]
  42d9f8:	ldr	x0, [sp, #32]
  42d9fc:	bl	41f2fc <_obstack_memory_used@@Base+0x311c>
  42da00:	ldp	x29, x30, [sp], #80
  42da04:	ret
  42da08:	stp	x29, x30, [sp, #-144]!
  42da0c:	mov	x29, sp
  42da10:	str	x0, [sp, #40]
  42da14:	str	x1, [sp, #32]
  42da18:	str	x2, [sp, #24]
  42da1c:	str	x3, [sp, #16]
  42da20:	ldr	x0, [sp, #40]
  42da24:	ldr	x2, [x0, #56]
  42da28:	ldr	x1, [sp, #32]
  42da2c:	mov	x0, x1
  42da30:	lsl	x0, x0, #1
  42da34:	add	x0, x0, x1
  42da38:	lsl	x0, x0, #3
  42da3c:	add	x0, x2, x0
  42da40:	str	x0, [sp, #128]
  42da44:	add	x0, sp, #0x38
  42da48:	mov	x2, #0x18                  	// #24
  42da4c:	mov	w1, #0x0                   	// #0
  42da50:	bl	402980 <memset@plt>
  42da54:	str	xzr, [sp, #136]
  42da58:	b	42dc04 <_obstack_memory_used@@Base+0x11a24>
  42da5c:	ldr	x0, [sp, #128]
  42da60:	ldr	x1, [x0, #16]
  42da64:	ldr	x0, [sp, #136]
  42da68:	lsl	x0, x0, #3
  42da6c:	add	x0, x1, x0
  42da70:	ldr	x0, [x0]
  42da74:	str	x0, [sp, #104]
  42da78:	ldr	x1, [sp, #104]
  42da7c:	ldr	x0, [sp, #32]
  42da80:	cmp	x1, x0
  42da84:	b.eq	42dbf4 <_obstack_memory_used@@Base+0x11a14>  // b.none
  42da88:	ldr	x0, [sp, #40]
  42da8c:	ldr	x1, [x0]
  42da90:	ldr	x0, [sp, #104]
  42da94:	lsl	x0, x0, #4
  42da98:	add	x0, x1, x0
  42da9c:	ldrb	w0, [x0, #8]
  42daa0:	and	w0, w0, #0x8
  42daa4:	cmp	w0, #0x0
  42daa8:	b.eq	42dbf8 <_obstack_memory_used@@Base+0x11a18>  // b.none
  42daac:	ldr	x0, [sp, #40]
  42dab0:	ldr	x2, [x0, #40]
  42dab4:	ldr	x1, [sp, #104]
  42dab8:	mov	x0, x1
  42dabc:	lsl	x0, x0, #1
  42dac0:	add	x0, x0, x1
  42dac4:	lsl	x0, x0, #3
  42dac8:	add	x0, x2, x0
  42dacc:	ldr	x0, [x0, #16]
  42dad0:	ldr	x0, [x0]
  42dad4:	str	x0, [sp, #96]
  42dad8:	ldr	x0, [sp, #40]
  42dadc:	ldr	x2, [x0, #40]
  42dae0:	ldr	x1, [sp, #104]
  42dae4:	mov	x0, x1
  42dae8:	lsl	x0, x0, #1
  42daec:	add	x0, x0, x1
  42daf0:	lsl	x0, x0, #3
  42daf4:	add	x0, x2, x0
  42daf8:	ldr	x0, [x0, #8]
  42dafc:	cmp	x0, #0x1
  42db00:	b.le	42db30 <_obstack_memory_used@@Base+0x11950>
  42db04:	ldr	x0, [sp, #40]
  42db08:	ldr	x2, [x0, #40]
  42db0c:	ldr	x1, [sp, #104]
  42db10:	mov	x0, x1
  42db14:	lsl	x0, x0, #1
  42db18:	add	x0, x0, x1
  42db1c:	lsl	x0, x0, #3
  42db20:	add	x0, x2, x0
  42db24:	ldr	x0, [x0, #16]
  42db28:	ldr	x0, [x0, #8]
  42db2c:	b	42db34 <_obstack_memory_used@@Base+0x11954>
  42db30:	mov	x0, #0xffffffffffffffff    	// #-1
  42db34:	str	x0, [sp, #88]
  42db38:	ldr	x1, [sp, #96]
  42db3c:	ldr	x0, [sp, #128]
  42db40:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  42db44:	cmp	x0, #0x0
  42db48:	b.ne	42db60 <_obstack_memory_used@@Base+0x11980>  // b.any
  42db4c:	ldr	x1, [sp, #96]
  42db50:	ldr	x0, [sp, #24]
  42db54:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  42db58:	cmp	x0, #0x0
  42db5c:	b.ne	42db94 <_obstack_memory_used@@Base+0x119b4>  // b.any
  42db60:	ldr	x0, [sp, #88]
  42db64:	cmp	x0, #0x0
  42db68:	b.le	42dbf8 <_obstack_memory_used@@Base+0x11a18>
  42db6c:	ldr	x1, [sp, #88]
  42db70:	ldr	x0, [sp, #128]
  42db74:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  42db78:	cmp	x0, #0x0
  42db7c:	b.ne	42dbf8 <_obstack_memory_used@@Base+0x11a18>  // b.any
  42db80:	ldr	x1, [sp, #88]
  42db84:	ldr	x0, [sp, #24]
  42db88:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  42db8c:	cmp	x0, #0x0
  42db90:	b.eq	42dbf8 <_obstack_memory_used@@Base+0x11a18>  // b.none
  42db94:	ldr	x0, [sp, #40]
  42db98:	ldr	x2, [x0, #56]
  42db9c:	ldr	x1, [sp, #104]
  42dba0:	mov	x0, x1
  42dba4:	lsl	x0, x0, #1
  42dba8:	add	x0, x0, x1
  42dbac:	lsl	x0, x0, #3
  42dbb0:	add	x1, x2, x0
  42dbb4:	add	x0, sp, #0x38
  42dbb8:	mov	x2, x1
  42dbbc:	ldr	x1, [sp, #16]
  42dbc0:	bl	41f2fc <_obstack_memory_used@@Base+0x311c>
  42dbc4:	str	w0, [sp, #84]
  42dbc8:	ldr	w0, [sp, #84]
  42dbcc:	cmp	w0, #0x0
  42dbd0:	cset	w0, ne  // ne = any
  42dbd4:	and	w0, w0, #0xff
  42dbd8:	and	x0, x0, #0xff
  42dbdc:	cmp	x0, #0x0
  42dbe0:	b.eq	42dbf8 <_obstack_memory_used@@Base+0x11a18>  // b.none
  42dbe4:	ldr	x0, [sp, #72]
  42dbe8:	bl	402b60 <free@plt>
  42dbec:	ldr	w0, [sp, #84]
  42dbf0:	b	42dc9c <_obstack_memory_used@@Base+0x11abc>
  42dbf4:	nop
  42dbf8:	ldr	x0, [sp, #136]
  42dbfc:	add	x0, x0, #0x1
  42dc00:	str	x0, [sp, #136]
  42dc04:	ldr	x0, [sp, #128]
  42dc08:	ldr	x0, [x0, #8]
  42dc0c:	ldr	x1, [sp, #136]
  42dc10:	cmp	x1, x0
  42dc14:	b.lt	42da5c <_obstack_memory_used@@Base+0x1187c>  // b.tstop
  42dc18:	str	xzr, [sp, #136]
  42dc1c:	b	42dc7c <_obstack_memory_used@@Base+0x11a9c>
  42dc20:	ldr	x0, [sp, #128]
  42dc24:	ldr	x1, [x0, #16]
  42dc28:	ldr	x0, [sp, #136]
  42dc2c:	lsl	x0, x0, #3
  42dc30:	add	x0, x1, x0
  42dc34:	ldr	x0, [x0]
  42dc38:	str	x0, [sp, #120]
  42dc3c:	add	x0, sp, #0x38
  42dc40:	ldr	x1, [sp, #120]
  42dc44:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  42dc48:	cmp	x0, #0x0
  42dc4c:	b.ne	42dc70 <_obstack_memory_used@@Base+0x11a90>  // b.any
  42dc50:	ldr	x1, [sp, #120]
  42dc54:	ldr	x0, [sp, #24]
  42dc58:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  42dc5c:	sub	x0, x0, #0x1
  42dc60:	str	x0, [sp, #112]
  42dc64:	ldr	x1, [sp, #112]
  42dc68:	ldr	x0, [sp, #24]
  42dc6c:	bl	4203dc <_obstack_memory_used@@Base+0x41fc>
  42dc70:	ldr	x0, [sp, #136]
  42dc74:	add	x0, x0, #0x1
  42dc78:	str	x0, [sp, #136]
  42dc7c:	ldr	x0, [sp, #128]
  42dc80:	ldr	x0, [x0, #8]
  42dc84:	ldr	x1, [sp, #136]
  42dc88:	cmp	x1, x0
  42dc8c:	b.lt	42dc20 <_obstack_memory_used@@Base+0x11a40>  // b.tstop
  42dc90:	ldr	x0, [sp, #72]
  42dc94:	bl	402b60 <free@plt>
  42dc98:	mov	w0, #0x0                   	// #0
  42dc9c:	ldp	x29, x30, [sp], #144
  42dca0:	ret
  42dca4:	stp	x29, x30, [sp, #-128]!
  42dca8:	mov	x29, sp
  42dcac:	str	x0, [sp, #56]
  42dcb0:	str	x1, [sp, #48]
  42dcb4:	str	x2, [sp, #40]
  42dcb8:	str	x3, [sp, #32]
  42dcbc:	str	x4, [sp, #24]
  42dcc0:	str	x5, [sp, #16]
  42dcc4:	ldr	x0, [sp, #56]
  42dcc8:	ldr	x0, [x0, #152]
  42dccc:	str	x0, [sp, #112]
  42dcd0:	ldr	x1, [sp, #32]
  42dcd4:	ldr	x0, [sp, #56]
  42dcd8:	bl	433758 <_obstack_memory_used@@Base+0x17578>
  42dcdc:	str	x0, [sp, #104]
  42dce0:	ldr	x1, [sp, #16]
  42dce4:	ldr	x0, [sp, #56]
  42dce8:	bl	433758 <_obstack_memory_used@@Base+0x17578>
  42dcec:	str	x0, [sp, #96]
  42dcf0:	str	xzr, [sp, #120]
  42dcf4:	b	42ddf4 <_obstack_memory_used@@Base+0x11c14>
  42dcf8:	ldr	x0, [sp, #56]
  42dcfc:	ldr	x1, [x0, #216]
  42dd00:	ldr	x0, [sp, #48]
  42dd04:	ldr	x2, [x0, #16]
  42dd08:	ldr	x0, [sp, #120]
  42dd0c:	lsl	x0, x0, #3
  42dd10:	add	x0, x2, x0
  42dd14:	ldr	x0, [x0]
  42dd18:	mov	x2, x0
  42dd1c:	mov	x0, x2
  42dd20:	lsl	x0, x0, #2
  42dd24:	add	x0, x0, x2
  42dd28:	lsl	x0, x0, #3
  42dd2c:	add	x0, x1, x0
  42dd30:	str	x0, [sp, #88]
  42dd34:	ldr	x0, [sp, #112]
  42dd38:	ldr	x1, [x0]
  42dd3c:	ldr	x0, [sp, #88]
  42dd40:	ldr	x0, [x0]
  42dd44:	lsl	x0, x0, #4
  42dd48:	add	x0, x1, x0
  42dd4c:	ldr	x0, [x0]
  42dd50:	str	x0, [sp, #80]
  42dd54:	ldr	x0, [sp, #48]
  42dd58:	ldr	x1, [x0, #16]
  42dd5c:	ldr	x0, [sp, #120]
  42dd60:	lsl	x0, x0, #3
  42dd64:	add	x0, x1, x0
  42dd68:	ldr	x0, [x0]
  42dd6c:	ldr	x5, [sp, #104]
  42dd70:	ldr	x4, [sp, #32]
  42dd74:	ldr	x3, [sp, #40]
  42dd78:	ldr	x2, [sp, #80]
  42dd7c:	mov	x1, x0
  42dd80:	ldr	x0, [sp, #56]
  42dd84:	bl	42e114 <_obstack_memory_used@@Base+0x11f34>
  42dd88:	sxtw	x0, w0
  42dd8c:	str	x0, [sp, #72]
  42dd90:	ldr	x0, [sp, #48]
  42dd94:	ldr	x1, [x0, #16]
  42dd98:	ldr	x0, [sp, #120]
  42dd9c:	lsl	x0, x0, #3
  42dda0:	add	x0, x1, x0
  42dda4:	ldr	x0, [x0]
  42dda8:	ldr	x5, [sp, #96]
  42ddac:	ldr	x4, [sp, #16]
  42ddb0:	ldr	x3, [sp, #24]
  42ddb4:	ldr	x2, [sp, #80]
  42ddb8:	mov	x1, x0
  42ddbc:	ldr	x0, [sp, #56]
  42ddc0:	bl	42e114 <_obstack_memory_used@@Base+0x11f34>
  42ddc4:	sxtw	x0, w0
  42ddc8:	str	x0, [sp, #64]
  42ddcc:	ldr	x1, [sp, #64]
  42ddd0:	ldr	x0, [sp, #72]
  42ddd4:	cmp	x1, x0
  42ddd8:	b.ne	42ddec <_obstack_memory_used@@Base+0x11c0c>  // b.any
  42dddc:	ldr	x0, [sp, #120]
  42dde0:	add	x0, x0, #0x1
  42dde4:	str	x0, [sp, #120]
  42dde8:	b	42ddf4 <_obstack_memory_used@@Base+0x11c14>
  42ddec:	mov	w0, #0x1                   	// #1
  42ddf0:	b	42de0c <_obstack_memory_used@@Base+0x11c2c>
  42ddf4:	ldr	x0, [sp, #48]
  42ddf8:	ldr	x0, [x0, #8]
  42ddfc:	ldr	x1, [sp, #120]
  42de00:	cmp	x1, x0
  42de04:	b.lt	42dcf8 <_obstack_memory_used@@Base+0x11b18>  // b.tstop
  42de08:	mov	w0, #0x0                   	// #0
  42de0c:	ldp	x29, x30, [sp], #128
  42de10:	ret
  42de14:	stp	x29, x30, [sp, #-128]!
  42de18:	mov	x29, sp
  42de1c:	str	x0, [sp, #56]
  42de20:	str	w1, [sp, #52]
  42de24:	str	x2, [sp, #40]
  42de28:	str	x3, [sp, #32]
  42de2c:	str	x4, [sp, #24]
  42de30:	ldr	x0, [sp, #56]
  42de34:	ldr	x0, [x0, #152]
  42de38:	str	x0, [sp, #104]
  42de3c:	ldr	x0, [sp, #104]
  42de40:	ldr	x2, [x0, #48]
  42de44:	ldr	x1, [sp, #32]
  42de48:	mov	x0, x1
  42de4c:	lsl	x0, x0, #1
  42de50:	add	x0, x0, x1
  42de54:	lsl	x0, x0, #3
  42de58:	add	x0, x2, x0
  42de5c:	str	x0, [sp, #96]
  42de60:	str	xzr, [sp, #120]
  42de64:	b	42e0ec <_obstack_memory_used@@Base+0x11f0c>
  42de68:	ldr	x0, [sp, #96]
  42de6c:	ldr	x1, [x0, #16]
  42de70:	ldr	x0, [sp, #120]
  42de74:	lsl	x0, x0, #3
  42de78:	add	x0, x1, x0
  42de7c:	ldr	x0, [x0]
  42de80:	str	x0, [sp, #88]
  42de84:	ldr	x0, [sp, #104]
  42de88:	ldr	x1, [x0]
  42de8c:	ldr	x0, [sp, #88]
  42de90:	lsl	x0, x0, #4
  42de94:	add	x0, x1, x0
  42de98:	ldrb	w0, [x0, #8]
  42de9c:	cmp	w0, #0x9
  42dea0:	b.eq	42e088 <_obstack_memory_used@@Base+0x11ea8>  // b.none
  42dea4:	cmp	w0, #0x9
  42dea8:	b.gt	42e0c4 <_obstack_memory_used@@Base+0x11ee4>
  42deac:	cmp	w0, #0x4
  42deb0:	b.eq	42dec0 <_obstack_memory_used@@Base+0x11ce0>  // b.none
  42deb4:	cmp	w0, #0x8
  42deb8:	b.eq	42e04c <_obstack_memory_used@@Base+0x11e6c>  // b.none
  42debc:	b	42e0c4 <_obstack_memory_used@@Base+0x11ee4>
  42dec0:	ldr	x0, [sp, #24]
  42dec4:	cmn	x0, #0x1
  42dec8:	b.eq	42e0cc <_obstack_memory_used@@Base+0x11eec>  // b.none
  42decc:	ldr	x0, [sp, #56]
  42ded0:	ldr	x2, [x0, #216]
  42ded4:	ldr	x1, [sp, #24]
  42ded8:	mov	x0, x1
  42dedc:	lsl	x0, x0, #2
  42dee0:	add	x0, x0, x1
  42dee4:	lsl	x0, x0, #3
  42dee8:	add	x0, x2, x0
  42deec:	str	x0, [sp, #112]
  42def0:	ldr	x0, [sp, #112]
  42def4:	ldr	x0, [x0]
  42def8:	ldr	x1, [sp, #88]
  42defc:	cmp	x1, x0
  42df00:	b.ne	42e024 <_obstack_memory_used@@Base+0x11e44>  // b.any
  42df04:	ldr	x0, [sp, #40]
  42df08:	cmp	x0, #0x3f
  42df0c:	b.gt	42df30 <_obstack_memory_used@@Base+0x11d50>
  42df10:	ldr	x0, [sp, #112]
  42df14:	ldrh	w0, [x0, #34]
  42df18:	and	x0, x0, #0xffff
  42df1c:	ldr	x1, [sp, #40]
  42df20:	lsr	x0, x0, x1
  42df24:	and	x0, x0, #0x1
  42df28:	cmp	x0, #0x0
  42df2c:	b.eq	42e02c <_obstack_memory_used@@Base+0x11e4c>  // b.none
  42df30:	ldr	x0, [sp, #104]
  42df34:	ldr	x2, [x0, #40]
  42df38:	ldr	x1, [sp, #88]
  42df3c:	mov	x0, x1
  42df40:	lsl	x0, x0, #1
  42df44:	add	x0, x0, x1
  42df48:	lsl	x0, x0, #3
  42df4c:	add	x0, x2, x0
  42df50:	ldr	x0, [x0, #16]
  42df54:	ldr	x0, [x0]
  42df58:	str	x0, [sp, #80]
  42df5c:	ldr	x1, [sp, #80]
  42df60:	ldr	x0, [sp, #32]
  42df64:	cmp	x1, x0
  42df68:	b.ne	42df8c <_obstack_memory_used@@Base+0x11dac>  // b.any
  42df6c:	ldr	w0, [sp, #52]
  42df70:	and	w0, w0, #0x1
  42df74:	cmp	w0, #0x0
  42df78:	b.eq	42df84 <_obstack_memory_used@@Base+0x11da4>  // b.none
  42df7c:	mov	w0, #0xffffffff            	// #-1
  42df80:	b	42e10c <_obstack_memory_used@@Base+0x11f2c>
  42df84:	mov	w0, #0x0                   	// #0
  42df88:	b	42e10c <_obstack_memory_used@@Base+0x11f2c>
  42df8c:	ldr	x4, [sp, #24]
  42df90:	ldr	x3, [sp, #80]
  42df94:	ldr	x2, [sp, #40]
  42df98:	ldr	w1, [sp, #52]
  42df9c:	ldr	x0, [sp, #56]
  42dfa0:	bl	42de14 <_obstack_memory_used@@Base+0x11c34>
  42dfa4:	str	w0, [sp, #76]
  42dfa8:	ldr	w0, [sp, #76]
  42dfac:	cmn	w0, #0x1
  42dfb0:	b.ne	42dfbc <_obstack_memory_used@@Base+0x11ddc>  // b.any
  42dfb4:	mov	w0, #0xffffffff            	// #-1
  42dfb8:	b	42e10c <_obstack_memory_used@@Base+0x11f2c>
  42dfbc:	ldr	w0, [sp, #76]
  42dfc0:	cmp	w0, #0x0
  42dfc4:	b.ne	42dfe0 <_obstack_memory_used@@Base+0x11e00>  // b.any
  42dfc8:	ldr	w0, [sp, #52]
  42dfcc:	and	w0, w0, #0x2
  42dfd0:	cmp	w0, #0x0
  42dfd4:	b.eq	42dfe0 <_obstack_memory_used@@Base+0x11e00>  // b.none
  42dfd8:	mov	w0, #0x0                   	// #0
  42dfdc:	b	42e10c <_obstack_memory_used@@Base+0x11f2c>
  42dfe0:	ldr	x0, [sp, #40]
  42dfe4:	cmp	x0, #0x3f
  42dfe8:	b.gt	42e030 <_obstack_memory_used@@Base+0x11e50>
  42dfec:	ldr	x0, [sp, #112]
  42dff0:	ldrh	w1, [x0, #34]
  42dff4:	ldr	x0, [sp, #40]
  42dff8:	mov	w2, w0
  42dffc:	mov	x0, #0x1                   	// #1
  42e000:	lsl	x0, x0, x2
  42e004:	and	w0, w0, #0xffff
  42e008:	mvn	w0, w0
  42e00c:	and	w0, w0, #0xffff
  42e010:	and	w0, w1, w0
  42e014:	and	w1, w0, #0xffff
  42e018:	ldr	x0, [sp, #112]
  42e01c:	strh	w1, [x0, #34]
  42e020:	b	42e030 <_obstack_memory_used@@Base+0x11e50>
  42e024:	nop
  42e028:	b	42e030 <_obstack_memory_used@@Base+0x11e50>
  42e02c:	nop
  42e030:	ldr	x0, [sp, #112]
  42e034:	add	x1, x0, #0x28
  42e038:	str	x1, [sp, #112]
  42e03c:	ldrb	w0, [x0, #32]
  42e040:	cmp	w0, #0x0
  42e044:	b.ne	42def0 <_obstack_memory_used@@Base+0x11d10>  // b.any
  42e048:	b	42e0cc <_obstack_memory_used@@Base+0x11eec>
  42e04c:	ldr	w0, [sp, #52]
  42e050:	and	w0, w0, #0x1
  42e054:	cmp	w0, #0x0
  42e058:	b.eq	42e0d4 <_obstack_memory_used@@Base+0x11ef4>  // b.none
  42e05c:	ldr	x0, [sp, #104]
  42e060:	ldr	x1, [x0]
  42e064:	ldr	x0, [sp, #88]
  42e068:	lsl	x0, x0, #4
  42e06c:	add	x0, x1, x0
  42e070:	ldr	x0, [x0]
  42e074:	ldr	x1, [sp, #40]
  42e078:	cmp	x1, x0
  42e07c:	b.ne	42e0d4 <_obstack_memory_used@@Base+0x11ef4>  // b.any
  42e080:	mov	w0, #0xffffffff            	// #-1
  42e084:	b	42e10c <_obstack_memory_used@@Base+0x11f2c>
  42e088:	ldr	w0, [sp, #52]
  42e08c:	and	w0, w0, #0x2
  42e090:	cmp	w0, #0x0
  42e094:	b.eq	42e0dc <_obstack_memory_used@@Base+0x11efc>  // b.none
  42e098:	ldr	x0, [sp, #104]
  42e09c:	ldr	x1, [x0]
  42e0a0:	ldr	x0, [sp, #88]
  42e0a4:	lsl	x0, x0, #4
  42e0a8:	add	x0, x1, x0
  42e0ac:	ldr	x0, [x0]
  42e0b0:	ldr	x1, [sp, #40]
  42e0b4:	cmp	x1, x0
  42e0b8:	b.ne	42e0dc <_obstack_memory_used@@Base+0x11efc>  // b.any
  42e0bc:	mov	w0, #0x0                   	// #0
  42e0c0:	b	42e10c <_obstack_memory_used@@Base+0x11f2c>
  42e0c4:	nop
  42e0c8:	b	42e0e0 <_obstack_memory_used@@Base+0x11f00>
  42e0cc:	nop
  42e0d0:	b	42e0e0 <_obstack_memory_used@@Base+0x11f00>
  42e0d4:	nop
  42e0d8:	b	42e0e0 <_obstack_memory_used@@Base+0x11f00>
  42e0dc:	nop
  42e0e0:	ldr	x0, [sp, #120]
  42e0e4:	add	x0, x0, #0x1
  42e0e8:	str	x0, [sp, #120]
  42e0ec:	ldr	x0, [sp, #96]
  42e0f0:	ldr	x0, [x0, #8]
  42e0f4:	ldr	x1, [sp, #120]
  42e0f8:	cmp	x1, x0
  42e0fc:	b.lt	42de68 <_obstack_memory_used@@Base+0x11c88>  // b.tstop
  42e100:	ldr	w0, [sp, #52]
  42e104:	asr	w0, w0, #1
  42e108:	and	w0, w0, #0x1
  42e10c:	ldp	x29, x30, [sp], #128
  42e110:	ret
  42e114:	stp	x29, x30, [sp, #-80]!
  42e118:	mov	x29, sp
  42e11c:	str	x0, [sp, #56]
  42e120:	str	x1, [sp, #48]
  42e124:	str	x2, [sp, #40]
  42e128:	str	x3, [sp, #32]
  42e12c:	str	x4, [sp, #24]
  42e130:	str	x5, [sp, #16]
  42e134:	ldr	x0, [sp, #56]
  42e138:	ldr	x2, [x0, #216]
  42e13c:	ldr	x1, [sp, #48]
  42e140:	mov	x0, x1
  42e144:	lsl	x0, x0, #2
  42e148:	add	x0, x0, x1
  42e14c:	lsl	x0, x0, #3
  42e150:	add	x0, x2, x0
  42e154:	str	x0, [sp, #72]
  42e158:	ldr	x0, [sp, #72]
  42e15c:	ldr	x0, [x0, #16]
  42e160:	ldr	x1, [sp, #24]
  42e164:	cmp	x1, x0
  42e168:	b.ge	42e174 <_obstack_memory_used@@Base+0x11f94>  // b.tcont
  42e16c:	mov	w0, #0xffffffff            	// #-1
  42e170:	b	42e204 <_obstack_memory_used@@Base+0x12024>
  42e174:	ldr	x0, [sp, #72]
  42e178:	ldr	x0, [x0, #24]
  42e17c:	ldr	x1, [sp, #24]
  42e180:	cmp	x1, x0
  42e184:	b.le	42e190 <_obstack_memory_used@@Base+0x11fb0>
  42e188:	mov	w0, #0x1                   	// #1
  42e18c:	b	42e204 <_obstack_memory_used@@Base+0x12024>
  42e190:	ldr	x0, [sp, #72]
  42e194:	ldr	x0, [x0, #16]
  42e198:	ldr	x1, [sp, #24]
  42e19c:	cmp	x1, x0
  42e1a0:	cset	w0, eq  // eq = none
  42e1a4:	and	w0, w0, #0xff
  42e1a8:	str	w0, [sp, #68]
  42e1ac:	ldr	x0, [sp, #72]
  42e1b0:	ldr	x0, [x0, #24]
  42e1b4:	ldr	x1, [sp, #24]
  42e1b8:	cmp	x1, x0
  42e1bc:	b.ne	42e1c8 <_obstack_memory_used@@Base+0x11fe8>  // b.any
  42e1c0:	mov	w0, #0x2                   	// #2
  42e1c4:	b	42e1cc <_obstack_memory_used@@Base+0x11fec>
  42e1c8:	mov	w0, #0x0                   	// #0
  42e1cc:	ldr	w1, [sp, #68]
  42e1d0:	orr	w0, w1, w0
  42e1d4:	str	w0, [sp, #68]
  42e1d8:	ldr	w0, [sp, #68]
  42e1dc:	cmp	w0, #0x0
  42e1e0:	b.ne	42e1ec <_obstack_memory_used@@Base+0x1200c>  // b.any
  42e1e4:	mov	w0, #0x0                   	// #0
  42e1e8:	b	42e204 <_obstack_memory_used@@Base+0x12024>
  42e1ec:	ldr	x4, [sp, #16]
  42e1f0:	ldr	x3, [sp, #32]
  42e1f4:	ldr	x2, [sp, #40]
  42e1f8:	ldr	w1, [sp, #68]
  42e1fc:	ldr	x0, [sp, #56]
  42e200:	bl	42de14 <_obstack_memory_used@@Base+0x11c34>
  42e204:	ldp	x29, x30, [sp], #80
  42e208:	ret
  42e20c:	stp	x29, x30, [sp, #-160]!
  42e210:	mov	x29, sp
  42e214:	str	x0, [sp, #56]
  42e218:	str	x1, [sp, #48]
  42e21c:	str	x2, [sp, #40]
  42e220:	str	x3, [sp, #32]
  42e224:	str	x4, [sp, #24]
  42e228:	str	x5, [sp, #16]
  42e22c:	str	xzr, [sp, #144]
  42e230:	b	42e5e4 <_obstack_memory_used@@Base+0x12404>
  42e234:	ldr	x0, [sp, #32]
  42e238:	ldr	x1, [x0, #16]
  42e23c:	ldr	x0, [sp, #144]
  42e240:	lsl	x0, x0, #3
  42e244:	add	x0, x1, x0
  42e248:	ldr	x0, [x0]
  42e24c:	mov	x1, x0
  42e250:	mov	x0, x1
  42e254:	lsl	x0, x0, #2
  42e258:	add	x0, x0, x1
  42e25c:	lsl	x0, x0, #3
  42e260:	mov	x1, x0
  42e264:	ldr	x0, [sp, #24]
  42e268:	add	x0, x0, x1
  42e26c:	str	x0, [sp, #120]
  42e270:	ldr	x0, [sp, #120]
  42e274:	ldr	x0, [x0, #16]
  42e278:	ldr	x1, [sp, #16]
  42e27c:	cmp	x1, x0
  42e280:	b.le	42e5d4 <_obstack_memory_used@@Base+0x123f4>
  42e284:	ldr	x0, [sp, #120]
  42e288:	ldr	x0, [x0, #8]
  42e28c:	ldr	x1, [sp, #16]
  42e290:	cmp	x1, x0
  42e294:	b.gt	42e5d4 <_obstack_memory_used@@Base+0x123f4>
  42e298:	ldr	x0, [sp, #56]
  42e29c:	ldr	x1, [x0]
  42e2a0:	ldr	x0, [sp, #120]
  42e2a4:	ldr	x0, [x0]
  42e2a8:	lsl	x0, x0, #4
  42e2ac:	add	x0, x1, x0
  42e2b0:	ldr	x0, [x0]
  42e2b4:	str	x0, [sp, #112]
  42e2b8:	ldr	x0, [sp, #120]
  42e2bc:	ldr	x0, [x0, #24]
  42e2c0:	ldr	x1, [sp, #16]
  42e2c4:	cmp	x1, x0
  42e2c8:	b.ne	42e4f4 <_obstack_memory_used@@Base+0x12314>  // b.any
  42e2cc:	mov	x0, #0xffffffffffffffff    	// #-1
  42e2d0:	str	x0, [sp, #136]
  42e2d4:	mov	x0, #0xffffffffffffffff    	// #-1
  42e2d8:	str	x0, [sp, #128]
  42e2dc:	str	xzr, [sp, #152]
  42e2e0:	b	42e39c <_obstack_memory_used@@Base+0x121bc>
  42e2e4:	ldr	x0, [sp, #48]
  42e2e8:	ldr	x1, [x0, #16]
  42e2ec:	ldr	x0, [sp, #152]
  42e2f0:	lsl	x0, x0, #3
  42e2f4:	add	x0, x1, x0
  42e2f8:	ldr	x0, [x0]
  42e2fc:	str	x0, [sp, #80]
  42e300:	ldr	x0, [sp, #56]
  42e304:	ldr	x1, [x0]
  42e308:	ldr	x0, [sp, #80]
  42e30c:	lsl	x0, x0, #4
  42e310:	add	x0, x1, x0
  42e314:	ldrb	w0, [x0, #8]
  42e318:	str	w0, [sp, #76]
  42e31c:	ldr	w0, [sp, #76]
  42e320:	cmp	w0, #0x8
  42e324:	b.ne	42e358 <_obstack_memory_used@@Base+0x12178>  // b.any
  42e328:	ldr	x0, [sp, #56]
  42e32c:	ldr	x1, [x0]
  42e330:	ldr	x0, [sp, #80]
  42e334:	lsl	x0, x0, #4
  42e338:	add	x0, x1, x0
  42e33c:	ldr	x0, [x0]
  42e340:	ldr	x1, [sp, #112]
  42e344:	cmp	x1, x0
  42e348:	b.ne	42e358 <_obstack_memory_used@@Base+0x12178>  // b.any
  42e34c:	ldr	x0, [sp, #80]
  42e350:	str	x0, [sp, #136]
  42e354:	b	42e390 <_obstack_memory_used@@Base+0x121b0>
  42e358:	ldr	w0, [sp, #76]
  42e35c:	cmp	w0, #0x9
  42e360:	b.ne	42e390 <_obstack_memory_used@@Base+0x121b0>  // b.any
  42e364:	ldr	x0, [sp, #56]
  42e368:	ldr	x1, [x0]
  42e36c:	ldr	x0, [sp, #80]
  42e370:	lsl	x0, x0, #4
  42e374:	add	x0, x1, x0
  42e378:	ldr	x0, [x0]
  42e37c:	ldr	x1, [sp, #112]
  42e380:	cmp	x1, x0
  42e384:	b.ne	42e390 <_obstack_memory_used@@Base+0x121b0>  // b.any
  42e388:	ldr	x0, [sp, #80]
  42e38c:	str	x0, [sp, #128]
  42e390:	ldr	x0, [sp, #152]
  42e394:	add	x0, x0, #0x1
  42e398:	str	x0, [sp, #152]
  42e39c:	ldr	x0, [sp, #48]
  42e3a0:	ldr	x0, [x0, #8]
  42e3a4:	ldr	x1, [sp, #152]
  42e3a8:	cmp	x1, x0
  42e3ac:	b.lt	42e2e4 <_obstack_memory_used@@Base+0x12104>  // b.tstop
  42e3b0:	ldr	x0, [sp, #136]
  42e3b4:	cmp	x0, #0x0
  42e3b8:	b.lt	42e3f8 <_obstack_memory_used@@Base+0x12218>  // b.tstop
  42e3bc:	ldr	x3, [sp, #40]
  42e3c0:	ldr	x2, [sp, #48]
  42e3c4:	ldr	x1, [sp, #136]
  42e3c8:	ldr	x0, [sp, #56]
  42e3cc:	bl	42da08 <_obstack_memory_used@@Base+0x11828>
  42e3d0:	str	w0, [sp, #96]
  42e3d4:	ldr	w0, [sp, #96]
  42e3d8:	cmp	w0, #0x0
  42e3dc:	cset	w0, ne  // ne = any
  42e3e0:	and	w0, w0, #0xff
  42e3e4:	and	x0, x0, #0xff
  42e3e8:	cmp	x0, #0x0
  42e3ec:	b.eq	42e3f8 <_obstack_memory_used@@Base+0x12218>  // b.none
  42e3f0:	ldr	w0, [sp, #96]
  42e3f4:	b	42e5fc <_obstack_memory_used@@Base+0x1241c>
  42e3f8:	ldr	x0, [sp, #128]
  42e3fc:	cmp	x0, #0x0
  42e400:	b.lt	42e5d8 <_obstack_memory_used@@Base+0x123f8>  // b.tstop
  42e404:	str	xzr, [sp, #152]
  42e408:	b	42e4dc <_obstack_memory_used@@Base+0x122fc>
  42e40c:	ldr	x0, [sp, #48]
  42e410:	ldr	x1, [x0, #16]
  42e414:	ldr	x0, [sp, #152]
  42e418:	lsl	x0, x0, #3
  42e41c:	add	x0, x1, x0
  42e420:	ldr	x0, [x0]
  42e424:	str	x0, [sp, #88]
  42e428:	ldr	x0, [sp, #56]
  42e42c:	ldr	x2, [x0, #56]
  42e430:	ldr	x1, [sp, #88]
  42e434:	mov	x0, x1
  42e438:	lsl	x0, x0, #1
  42e43c:	add	x0, x0, x1
  42e440:	lsl	x0, x0, #3
  42e444:	add	x0, x2, x0
  42e448:	ldr	x1, [sp, #128]
  42e44c:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  42e450:	cmp	x0, #0x0
  42e454:	b.ne	42e4d0 <_obstack_memory_used@@Base+0x122f0>  // b.any
  42e458:	ldr	x0, [sp, #56]
  42e45c:	ldr	x2, [x0, #48]
  42e460:	ldr	x1, [sp, #88]
  42e464:	mov	x0, x1
  42e468:	lsl	x0, x0, #1
  42e46c:	add	x0, x0, x1
  42e470:	lsl	x0, x0, #3
  42e474:	add	x0, x2, x0
  42e478:	ldr	x1, [sp, #128]
  42e47c:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  42e480:	cmp	x0, #0x0
  42e484:	b.ne	42e4d0 <_obstack_memory_used@@Base+0x122f0>  // b.any
  42e488:	ldr	x3, [sp, #40]
  42e48c:	ldr	x2, [sp, #48]
  42e490:	ldr	x1, [sp, #88]
  42e494:	ldr	x0, [sp, #56]
  42e498:	bl	42da08 <_obstack_memory_used@@Base+0x11828>
  42e49c:	str	w0, [sp, #96]
  42e4a0:	ldr	w0, [sp, #96]
  42e4a4:	cmp	w0, #0x0
  42e4a8:	cset	w0, ne  // ne = any
  42e4ac:	and	w0, w0, #0xff
  42e4b0:	and	x0, x0, #0xff
  42e4b4:	cmp	x0, #0x0
  42e4b8:	b.eq	42e4c4 <_obstack_memory_used@@Base+0x122e4>  // b.none
  42e4bc:	ldr	w0, [sp, #96]
  42e4c0:	b	42e5fc <_obstack_memory_used@@Base+0x1241c>
  42e4c4:	ldr	x0, [sp, #152]
  42e4c8:	sub	x0, x0, #0x1
  42e4cc:	str	x0, [sp, #152]
  42e4d0:	ldr	x0, [sp, #152]
  42e4d4:	add	x0, x0, #0x1
  42e4d8:	str	x0, [sp, #152]
  42e4dc:	ldr	x0, [sp, #48]
  42e4e0:	ldr	x0, [x0, #8]
  42e4e4:	ldr	x1, [sp, #152]
  42e4e8:	cmp	x1, x0
  42e4ec:	b.lt	42e40c <_obstack_memory_used@@Base+0x1222c>  // b.tstop
  42e4f0:	b	42e5d8 <_obstack_memory_used@@Base+0x123f8>
  42e4f4:	str	xzr, [sp, #152]
  42e4f8:	b	42e5bc <_obstack_memory_used@@Base+0x123dc>
  42e4fc:	ldr	x0, [sp, #48]
  42e500:	ldr	x1, [x0, #16]
  42e504:	ldr	x0, [sp, #152]
  42e508:	lsl	x0, x0, #3
  42e50c:	add	x0, x1, x0
  42e510:	ldr	x0, [x0]
  42e514:	str	x0, [sp, #104]
  42e518:	ldr	x0, [sp, #56]
  42e51c:	ldr	x1, [x0]
  42e520:	ldr	x0, [sp, #104]
  42e524:	lsl	x0, x0, #4
  42e528:	add	x0, x1, x0
  42e52c:	ldrb	w0, [x0, #8]
  42e530:	str	w0, [sp, #100]
  42e534:	ldr	w0, [sp, #100]
  42e538:	cmp	w0, #0x9
  42e53c:	b.eq	42e54c <_obstack_memory_used@@Base+0x1236c>  // b.none
  42e540:	ldr	w0, [sp, #100]
  42e544:	cmp	w0, #0x8
  42e548:	b.ne	42e5b0 <_obstack_memory_used@@Base+0x123d0>  // b.any
  42e54c:	ldr	x0, [sp, #56]
  42e550:	ldr	x1, [x0]
  42e554:	ldr	x0, [sp, #104]
  42e558:	lsl	x0, x0, #4
  42e55c:	add	x0, x1, x0
  42e560:	ldr	x0, [x0]
  42e564:	ldr	x1, [sp, #112]
  42e568:	cmp	x1, x0
  42e56c:	b.ne	42e5ac <_obstack_memory_used@@Base+0x123cc>  // b.any
  42e570:	ldr	x3, [sp, #40]
  42e574:	ldr	x2, [sp, #48]
  42e578:	ldr	x1, [sp, #104]
  42e57c:	ldr	x0, [sp, #56]
  42e580:	bl	42da08 <_obstack_memory_used@@Base+0x11828>
  42e584:	str	w0, [sp, #96]
  42e588:	ldr	w0, [sp, #96]
  42e58c:	cmp	w0, #0x0
  42e590:	cset	w0, ne  // ne = any
  42e594:	and	w0, w0, #0xff
  42e598:	and	x0, x0, #0xff
  42e59c:	cmp	x0, #0x0
  42e5a0:	b.eq	42e5b0 <_obstack_memory_used@@Base+0x123d0>  // b.none
  42e5a4:	ldr	w0, [sp, #96]
  42e5a8:	b	42e5fc <_obstack_memory_used@@Base+0x1241c>
  42e5ac:	nop
  42e5b0:	ldr	x0, [sp, #152]
  42e5b4:	add	x0, x0, #0x1
  42e5b8:	str	x0, [sp, #152]
  42e5bc:	ldr	x0, [sp, #48]
  42e5c0:	ldr	x0, [x0, #8]
  42e5c4:	ldr	x1, [sp, #152]
  42e5c8:	cmp	x1, x0
  42e5cc:	b.lt	42e4fc <_obstack_memory_used@@Base+0x1231c>  // b.tstop
  42e5d0:	b	42e5d8 <_obstack_memory_used@@Base+0x123f8>
  42e5d4:	nop
  42e5d8:	ldr	x0, [sp, #144]
  42e5dc:	add	x0, x0, #0x1
  42e5e0:	str	x0, [sp, #144]
  42e5e4:	ldr	x0, [sp, #32]
  42e5e8:	ldr	x0, [x0, #8]
  42e5ec:	ldr	x1, [sp, #144]
  42e5f0:	cmp	x1, x0
  42e5f4:	b.lt	42e234 <_obstack_memory_used@@Base+0x12054>  // b.tstop
  42e5f8:	mov	w0, #0x0                   	// #0
  42e5fc:	ldp	x29, x30, [sp], #160
  42e600:	ret
  42e604:	stp	x29, x30, [sp, #-208]!
  42e608:	mov	x29, sp
  42e60c:	str	x0, [sp, #40]
  42e610:	str	x1, [sp, #32]
  42e614:	str	x2, [sp, #24]
  42e618:	str	x3, [sp, #16]
  42e61c:	ldr	x0, [sp, #40]
  42e620:	ldr	x0, [x0, #152]
  42e624:	str	x0, [sp, #168]
  42e628:	ldr	x1, [sp, #24]
  42e62c:	ldr	x0, [sp, #40]
  42e630:	bl	433758 <_obstack_memory_used@@Base+0x17578>
  42e634:	str	x0, [sp, #160]
  42e638:	ldr	x0, [sp, #160]
  42e63c:	cmn	x0, #0x1
  42e640:	b.ne	42e64c <_obstack_memory_used@@Base+0x1246c>  // b.any
  42e644:	mov	w0, #0x0                   	// #0
  42e648:	b	42ea6c <_obstack_memory_used@@Base+0x1288c>
  42e64c:	str	xzr, [sp, #48]
  42e650:	str	xzr, [sp, #192]
  42e654:	b	42ea24 <_obstack_memory_used@@Base+0x12844>
  42e658:	ldr	x0, [sp, #16]
  42e65c:	ldr	x1, [x0, #16]
  42e660:	ldr	x0, [sp, #192]
  42e664:	lsl	x0, x0, #3
  42e668:	add	x0, x1, x0
  42e66c:	ldr	x0, [x0]
  42e670:	str	x0, [sp, #152]
  42e674:	ldr	x0, [sp, #168]
  42e678:	ldr	x1, [x0]
  42e67c:	ldr	x0, [sp, #152]
  42e680:	lsl	x0, x0, #4
  42e684:	add	x0, x1, x0
  42e688:	ldrb	w0, [x0, #8]
  42e68c:	str	w0, [sp, #148]
  42e690:	ldr	x0, [sp, #32]
  42e694:	ldr	x0, [x0, #16]
  42e698:	ldr	x1, [sp, #152]
  42e69c:	cmp	x1, x0
  42e6a0:	b.ne	42e6b8 <_obstack_memory_used@@Base+0x124d8>  // b.any
  42e6a4:	ldr	x0, [sp, #32]
  42e6a8:	ldr	x0, [x0, #24]
  42e6ac:	ldr	x1, [sp, #24]
  42e6b0:	cmp	x1, x0
  42e6b4:	b.eq	42ea0c <_obstack_memory_used@@Base+0x1282c>  // b.none
  42e6b8:	ldr	w0, [sp, #148]
  42e6bc:	cmp	w0, #0x4
  42e6c0:	b.ne	42ea14 <_obstack_memory_used@@Base+0x12834>  // b.any
  42e6c4:	ldr	x0, [sp, #40]
  42e6c8:	ldr	x2, [x0, #216]
  42e6cc:	ldr	x1, [sp, #160]
  42e6d0:	mov	x0, x1
  42e6d4:	lsl	x0, x0, #2
  42e6d8:	add	x0, x0, x1
  42e6dc:	lsl	x0, x0, #3
  42e6e0:	add	x0, x2, x0
  42e6e4:	str	x0, [sp, #176]
  42e6e8:	ldr	x0, [sp, #160]
  42e6ec:	str	x0, [sp, #184]
  42e6f0:	ldr	x0, [sp, #176]
  42e6f4:	ldr	x0, [x0]
  42e6f8:	ldr	x1, [sp, #152]
  42e6fc:	cmp	x1, x0
  42e700:	b.ne	42e9d8 <_obstack_memory_used@@Base+0x127f8>  // b.any
  42e704:	ldr	x0, [sp, #176]
  42e708:	ldr	x1, [x0, #24]
  42e70c:	ldr	x0, [sp, #176]
  42e710:	ldr	x0, [x0, #16]
  42e714:	sub	x0, x1, x0
  42e718:	str	x0, [sp, #136]
  42e71c:	ldr	x1, [sp, #24]
  42e720:	ldr	x0, [sp, #136]
  42e724:	add	x0, x1, x0
  42e728:	str	x0, [sp, #128]
  42e72c:	ldr	x0, [sp, #136]
  42e730:	cmp	x0, #0x0
  42e734:	b.eq	42e754 <_obstack_memory_used@@Base+0x12574>  // b.none
  42e738:	ldr	x0, [sp, #168]
  42e73c:	ldr	x1, [x0, #24]
  42e740:	ldr	x0, [sp, #152]
  42e744:	lsl	x0, x0, #3
  42e748:	add	x0, x1, x0
  42e74c:	ldr	x0, [x0]
  42e750:	b	42e77c <_obstack_memory_used@@Base+0x1259c>
  42e754:	ldr	x0, [sp, #168]
  42e758:	ldr	x2, [x0, #40]
  42e75c:	ldr	x1, [sp, #152]
  42e760:	mov	x0, x1
  42e764:	lsl	x0, x0, #1
  42e768:	add	x0, x0, x1
  42e76c:	lsl	x0, x0, #3
  42e770:	add	x0, x2, x0
  42e774:	ldr	x0, [x0, #16]
  42e778:	ldr	x0, [x0]
  42e77c:	str	x0, [sp, #120]
  42e780:	ldr	x0, [sp, #32]
  42e784:	ldr	x0, [x0, #24]
  42e788:	ldr	x1, [sp, #128]
  42e78c:	cmp	x1, x0
  42e790:	b.gt	42e9e0 <_obstack_memory_used@@Base+0x12800>
  42e794:	ldr	x0, [sp, #32]
  42e798:	ldr	x1, [x0]
  42e79c:	ldr	x0, [sp, #128]
  42e7a0:	lsl	x0, x0, #3
  42e7a4:	add	x0, x1, x0
  42e7a8:	ldr	x0, [x0]
  42e7ac:	cmp	x0, #0x0
  42e7b0:	b.eq	42e9e0 <_obstack_memory_used@@Base+0x12800>  // b.none
  42e7b4:	ldr	x0, [sp, #32]
  42e7b8:	ldr	x1, [x0]
  42e7bc:	ldr	x0, [sp, #128]
  42e7c0:	lsl	x0, x0, #3
  42e7c4:	add	x0, x1, x0
  42e7c8:	ldr	x0, [x0]
  42e7cc:	cmp	x0, #0x0
  42e7d0:	b.eq	42e9e0 <_obstack_memory_used@@Base+0x12800>  // b.none
  42e7d4:	ldr	x0, [sp, #32]
  42e7d8:	ldr	x1, [x0]
  42e7dc:	ldr	x0, [sp, #128]
  42e7e0:	lsl	x0, x0, #3
  42e7e4:	add	x0, x1, x0
  42e7e8:	ldr	x0, [x0]
  42e7ec:	add	x0, x0, #0x8
  42e7f0:	ldr	x1, [sp, #120]
  42e7f4:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  42e7f8:	cmp	x0, #0x0
  42e7fc:	b.eq	42e9e0 <_obstack_memory_used@@Base+0x12800>  // b.none
  42e800:	ldr	x0, [sp, #32]
  42e804:	add	x0, x0, #0x20
  42e808:	ldr	x5, [sp, #128]
  42e80c:	ldr	x4, [sp, #120]
  42e810:	ldr	x3, [sp, #24]
  42e814:	ldr	x2, [sp, #152]
  42e818:	mov	x1, x0
  42e81c:	ldr	x0, [sp, #40]
  42e820:	bl	42dca4 <_obstack_memory_used@@Base+0x11ac4>
  42e824:	and	w0, w0, #0xff
  42e828:	cmp	w0, #0x0
  42e82c:	b.ne	42e9e0 <_obstack_memory_used@@Base+0x12800>  // b.any
  42e830:	ldr	x0, [sp, #48]
  42e834:	cmp	x0, #0x0
  42e838:	b.ne	42e898 <_obstack_memory_used@@Base+0x126b8>  // b.any
  42e83c:	ldr	x1, [sp, #32]
  42e840:	add	x0, sp, #0x30
  42e844:	ldp	x2, x3, [x1]
  42e848:	stp	x2, x3, [x0]
  42e84c:	ldp	x2, x3, [x1, #16]
  42e850:	stp	x2, x3, [x0, #16]
  42e854:	ldp	x2, x3, [x1, #32]
  42e858:	stp	x2, x3, [x0, #32]
  42e85c:	ldr	x1, [x1, #48]
  42e860:	str	x1, [x0, #48]
  42e864:	ldr	x0, [sp, #32]
  42e868:	add	x1, x0, #0x20
  42e86c:	add	x0, sp, #0x30
  42e870:	add	x0, x0, #0x20
  42e874:	bl	41f218 <_obstack_memory_used@@Base+0x3038>
  42e878:	str	w0, [sp, #204]
  42e87c:	ldr	w0, [sp, #204]
  42e880:	cmp	w0, #0x0
  42e884:	cset	w0, ne  // ne = any
  42e888:	and	w0, w0, #0xff
  42e88c:	and	x0, x0, #0xff
  42e890:	cmp	x0, #0x0
  42e894:	b.ne	42ea40 <_obstack_memory_used@@Base+0x12860>  // b.any
  42e898:	ldr	x0, [sp, #152]
  42e89c:	str	x0, [sp, #64]
  42e8a0:	ldr	x0, [sp, #24]
  42e8a4:	str	x0, [sp, #72]
  42e8a8:	add	x0, sp, #0x30
  42e8ac:	add	x0, x0, #0x20
  42e8b0:	ldr	x1, [sp, #184]
  42e8b4:	bl	41ff4c <_obstack_memory_used@@Base+0x3d6c>
  42e8b8:	strb	w0, [sp, #119]
  42e8bc:	ldrb	w0, [sp, #119]
  42e8c0:	eor	w0, w0, #0x1
  42e8c4:	and	w0, w0, #0xff
  42e8c8:	and	x0, x0, #0xff
  42e8cc:	cmp	x0, #0x0
  42e8d0:	b.eq	42e8e0 <_obstack_memory_used@@Base+0x12700>  // b.none
  42e8d4:	mov	w0, #0xc                   	// #12
  42e8d8:	str	w0, [sp, #204]
  42e8dc:	b	42ea54 <_obstack_memory_used@@Base+0x12874>
  42e8e0:	ldr	x1, [sp, #48]
  42e8e4:	ldr	x0, [sp, #24]
  42e8e8:	lsl	x0, x0, #3
  42e8ec:	add	x0, x1, x0
  42e8f0:	ldr	x0, [x0]
  42e8f4:	str	x0, [sp, #104]
  42e8f8:	add	x0, sp, #0x30
  42e8fc:	mov	x1, x0
  42e900:	ldr	x0, [sp, #40]
  42e904:	bl	42cf90 <_obstack_memory_used@@Base+0x10db0>
  42e908:	str	w0, [sp, #204]
  42e90c:	ldr	w0, [sp, #204]
  42e910:	cmp	w0, #0x0
  42e914:	cset	w0, ne  // ne = any
  42e918:	and	w0, w0, #0xff
  42e91c:	and	x0, x0, #0xff
  42e920:	cmp	x0, #0x0
  42e924:	b.ne	42ea48 <_obstack_memory_used@@Base+0x12868>  // b.any
  42e928:	ldr	x0, [sp, #32]
  42e92c:	ldr	x0, [x0, #8]
  42e930:	cmp	x0, #0x0
  42e934:	b.eq	42e978 <_obstack_memory_used@@Base+0x12798>  // b.none
  42e938:	ldr	x0, [sp, #32]
  42e93c:	ldr	x1, [x0, #8]
  42e940:	ldr	x2, [sp, #48]
  42e944:	ldr	x0, [sp, #24]
  42e948:	add	x0, x0, #0x1
  42e94c:	mov	x3, x0
  42e950:	ldr	x0, [sp, #168]
  42e954:	bl	42d520 <_obstack_memory_used@@Base+0x11340>
  42e958:	str	w0, [sp, #204]
  42e95c:	ldr	w0, [sp, #204]
  42e960:	cmp	w0, #0x0
  42e964:	cset	w0, ne  // ne = any
  42e968:	and	w0, w0, #0xff
  42e96c:	and	x0, x0, #0xff
  42e970:	cmp	x0, #0x0
  42e974:	b.ne	42ea50 <_obstack_memory_used@@Base+0x12870>  // b.any
  42e978:	ldr	x1, [sp, #48]
  42e97c:	ldr	x0, [sp, #24]
  42e980:	lsl	x0, x0, #3
  42e984:	add	x0, x1, x0
  42e988:	ldr	x1, [sp, #104]
  42e98c:	str	x1, [x0]
  42e990:	add	x0, sp, #0x30
  42e994:	add	x0, x0, #0x20
  42e998:	ldr	x1, [sp, #184]
  42e99c:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  42e9a0:	sub	x1, x0, #0x1
  42e9a4:	add	x0, sp, #0x30
  42e9a8:	add	x0, x0, #0x20
  42e9ac:	bl	4203dc <_obstack_memory_used@@Base+0x41fc>
  42e9b0:	ldr	x0, [sp, #40]
  42e9b4:	ldr	x2, [x0, #216]
  42e9b8:	ldr	x1, [sp, #184]
  42e9bc:	mov	x0, x1
  42e9c0:	lsl	x0, x0, #2
  42e9c4:	add	x0, x0, x1
  42e9c8:	lsl	x0, x0, #3
  42e9cc:	add	x0, x2, x0
  42e9d0:	str	x0, [sp, #176]
  42e9d4:	b	42e9e4 <_obstack_memory_used@@Base+0x12804>
  42e9d8:	nop
  42e9dc:	b	42e9e4 <_obstack_memory_used@@Base+0x12804>
  42e9e0:	nop
  42e9e4:	ldr	x0, [sp, #184]
  42e9e8:	add	x0, x0, #0x1
  42e9ec:	str	x0, [sp, #184]
  42e9f0:	ldr	x0, [sp, #176]
  42e9f4:	add	x1, x0, #0x28
  42e9f8:	str	x1, [sp, #176]
  42e9fc:	ldrb	w0, [x0, #32]
  42ea00:	cmp	w0, #0x0
  42ea04:	b.ne	42e6f0 <_obstack_memory_used@@Base+0x12510>  // b.any
  42ea08:	b	42ea18 <_obstack_memory_used@@Base+0x12838>
  42ea0c:	nop
  42ea10:	b	42ea18 <_obstack_memory_used@@Base+0x12838>
  42ea14:	nop
  42ea18:	ldr	x0, [sp, #192]
  42ea1c:	add	x0, x0, #0x1
  42ea20:	str	x0, [sp, #192]
  42ea24:	ldr	x0, [sp, #16]
  42ea28:	ldr	x0, [x0, #8]
  42ea2c:	ldr	x1, [sp, #192]
  42ea30:	cmp	x1, x0
  42ea34:	b.lt	42e658 <_obstack_memory_used@@Base+0x12478>  // b.tstop
  42ea38:	str	wzr, [sp, #204]
  42ea3c:	b	42ea54 <_obstack_memory_used@@Base+0x12874>
  42ea40:	nop
  42ea44:	b	42ea54 <_obstack_memory_used@@Base+0x12874>
  42ea48:	nop
  42ea4c:	b	42ea54 <_obstack_memory_used@@Base+0x12874>
  42ea50:	nop
  42ea54:	ldr	x0, [sp, #48]
  42ea58:	cmp	x0, #0x0
  42ea5c:	b.eq	42ea68 <_obstack_memory_used@@Base+0x12888>  // b.none
  42ea60:	ldr	x0, [sp, #96]
  42ea64:	bl	402b60 <free@plt>
  42ea68:	ldr	w0, [sp, #204]
  42ea6c:	ldp	x29, x30, [sp], #208
  42ea70:	ret
  42ea74:	stp	x29, x30, [sp, #-80]!
  42ea78:	mov	x29, sp
  42ea7c:	str	x0, [sp, #56]
  42ea80:	str	x1, [sp, #48]
  42ea84:	str	x2, [sp, #40]
  42ea88:	str	x3, [sp, #32]
  42ea8c:	str	x4, [sp, #24]
  42ea90:	ldr	x0, [sp, #56]
  42ea94:	ldr	x0, [x0, #152]
  42ea98:	str	x0, [sp, #64]
  42ea9c:	ldr	x0, [sp, #56]
  42eaa0:	ldr	x3, [sp, #32]
  42eaa4:	mov	x2, x0
  42eaa8:	ldr	x1, [sp, #40]
  42eaac:	ldr	x0, [sp, #64]
  42eab0:	bl	4328b0 <_obstack_memory_used@@Base+0x166d0>
  42eab4:	str	w0, [sp, #76]
  42eab8:	ldr	w0, [sp, #76]
  42eabc:	cmp	w0, #0x0
  42eac0:	b.le	42eb58 <_obstack_memory_used@@Base+0x12978>
  42eac4:	ldrsw	x1, [sp, #76]
  42eac8:	ldr	x0, [sp, #32]
  42eacc:	add	x0, x1, x0
  42ead0:	ldr	x1, [sp, #24]
  42ead4:	cmp	x1, x0
  42ead8:	b.lt	42eb58 <_obstack_memory_used@@Base+0x12978>  // b.tstop
  42eadc:	ldr	x0, [sp, #48]
  42eae0:	ldr	x1, [x0]
  42eae4:	ldrsw	x2, [sp, #76]
  42eae8:	ldr	x0, [sp, #32]
  42eaec:	add	x0, x2, x0
  42eaf0:	lsl	x0, x0, #3
  42eaf4:	add	x0, x1, x0
  42eaf8:	ldr	x0, [x0]
  42eafc:	cmp	x0, #0x0
  42eb00:	b.eq	42eb54 <_obstack_memory_used@@Base+0x12974>  // b.none
  42eb04:	ldr	x0, [sp, #48]
  42eb08:	ldr	x1, [x0]
  42eb0c:	ldrsw	x2, [sp, #76]
  42eb10:	ldr	x0, [sp, #32]
  42eb14:	add	x0, x2, x0
  42eb18:	lsl	x0, x0, #3
  42eb1c:	add	x0, x1, x0
  42eb20:	ldr	x0, [x0]
  42eb24:	add	x2, x0, #0x8
  42eb28:	ldr	x0, [sp, #64]
  42eb2c:	ldr	x1, [x0, #24]
  42eb30:	ldr	x0, [sp, #40]
  42eb34:	lsl	x0, x0, #3
  42eb38:	add	x0, x1, x0
  42eb3c:	ldr	x0, [x0]
  42eb40:	mov	x1, x0
  42eb44:	mov	x0, x2
  42eb48:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  42eb4c:	cmp	x0, #0x0
  42eb50:	b.ne	42eb58 <_obstack_memory_used@@Base+0x12978>  // b.any
  42eb54:	str	wzr, [sp, #76]
  42eb58:	ldr	w0, [sp, #76]
  42eb5c:	ldp	x29, x30, [sp], #80
  42eb60:	ret
  42eb64:	stp	x29, x30, [sp, #-80]!
  42eb68:	mov	x29, sp
  42eb6c:	str	x0, [sp, #40]
  42eb70:	str	x1, [sp, #32]
  42eb74:	str	x2, [sp, #24]
  42eb78:	ldr	x0, [sp, #24]
  42eb7c:	ldrb	w0, [x0, #104]
  42eb80:	ubfx	x0, x0, #5, #1
  42eb84:	and	w0, w0, #0xff
  42eb88:	and	x0, x0, #0xff
  42eb8c:	cmp	x0, #0x0
  42eb90:	b.eq	42ebd4 <_obstack_memory_used@@Base+0x129f4>  // b.none
  42eb94:	ldr	x1, [sp, #24]
  42eb98:	ldr	x0, [sp, #32]
  42eb9c:	bl	42f19c <_obstack_memory_used@@Base+0x12fbc>
  42eba0:	mov	w1, w0
  42eba4:	ldr	x0, [sp, #40]
  42eba8:	str	w1, [x0]
  42ebac:	ldr	x0, [sp, #40]
  42ebb0:	ldr	w0, [x0]
  42ebb4:	cmp	w0, #0x0
  42ebb8:	cset	w0, ne  // ne = any
  42ebbc:	and	w0, w0, #0xff
  42ebc0:	and	x0, x0, #0xff
  42ebc4:	cmp	x0, #0x0
  42ebc8:	b.eq	42ebd4 <_obstack_memory_used@@Base+0x129f4>  // b.none
  42ebcc:	mov	x0, #0x0                   	// #0
  42ebd0:	b	42ed04 <_obstack_memory_used@@Base+0x12b24>
  42ebd4:	ldr	x0, [sp, #32]
  42ebd8:	ldr	x1, [x0, #8]
  42ebdc:	ldr	x0, [sp, #32]
  42ebe0:	ldr	x0, [x0, #72]
  42ebe4:	add	x3, x0, #0x1
  42ebe8:	ldr	x2, [sp, #32]
  42ebec:	str	x3, [x2, #72]
  42ebf0:	add	x0, x1, x0
  42ebf4:	ldrb	w0, [x0]
  42ebf8:	strb	w0, [sp, #79]
  42ebfc:	ldr	x0, [sp, #24]
  42ec00:	ldr	x0, [x0, #88]
  42ec04:	str	x0, [sp, #64]
  42ec08:	ldr	x0, [sp, #64]
  42ec0c:	cmp	x0, #0x0
  42ec10:	cset	w0, ne  // ne = any
  42ec14:	and	w0, w0, #0xff
  42ec18:	and	x0, x0, #0xff
  42ec1c:	cmp	x0, #0x0
  42ec20:	b.eq	42ec3c <_obstack_memory_used@@Base+0x12a5c>  // b.none
  42ec24:	ldrb	w0, [sp, #79]
  42ec28:	lsl	x0, x0, #3
  42ec2c:	ldr	x1, [sp, #64]
  42ec30:	add	x0, x1, x0
  42ec34:	ldr	x0, [x0]
  42ec38:	b	42ed04 <_obstack_memory_used@@Base+0x12b24>
  42ec3c:	ldr	x0, [sp, #24]
  42ec40:	ldr	x0, [x0, #96]
  42ec44:	str	x0, [sp, #64]
  42ec48:	ldr	x0, [sp, #64]
  42ec4c:	cmp	x0, #0x0
  42ec50:	cset	w0, ne  // ne = any
  42ec54:	and	w0, w0, #0xff
  42ec58:	and	x0, x0, #0xff
  42ec5c:	cmp	x0, #0x0
  42ec60:	b.eq	42ecd0 <_obstack_memory_used@@Base+0x12af0>  // b.none
  42ec64:	ldr	x3, [sp, #32]
  42ec68:	ldr	x0, [sp, #32]
  42ec6c:	ldr	x0, [x0, #72]
  42ec70:	sub	x1, x0, #0x1
  42ec74:	ldr	x0, [sp, #32]
  42ec78:	ldr	w0, [x0, #160]
  42ec7c:	mov	w2, w0
  42ec80:	mov	x0, x3
  42ec84:	bl	41ee34 <_obstack_memory_used@@Base+0x2c54>
  42ec88:	str	w0, [sp, #60]
  42ec8c:	ldr	w0, [sp, #60]
  42ec90:	and	w0, w0, #0x1
  42ec94:	cmp	w0, #0x0
  42ec98:	b.eq	42ecb8 <_obstack_memory_used@@Base+0x12ad8>  // b.none
  42ec9c:	ldrb	w0, [sp, #79]
  42eca0:	add	x0, x0, #0x100
  42eca4:	lsl	x0, x0, #3
  42eca8:	ldr	x1, [sp, #64]
  42ecac:	add	x0, x1, x0
  42ecb0:	ldr	x0, [x0]
  42ecb4:	b	42ed04 <_obstack_memory_used@@Base+0x12b24>
  42ecb8:	ldrb	w0, [sp, #79]
  42ecbc:	lsl	x0, x0, #3
  42ecc0:	ldr	x1, [sp, #64]
  42ecc4:	add	x0, x1, x0
  42ecc8:	ldr	x0, [x0]
  42eccc:	b	42ed04 <_obstack_memory_used@@Base+0x12b24>
  42ecd0:	ldr	x0, [sp, #32]
  42ecd4:	ldr	x0, [x0, #152]
  42ecd8:	ldr	x1, [sp, #24]
  42ecdc:	bl	431504 <_obstack_memory_used@@Base+0x15324>
  42ece0:	and	w0, w0, #0xff
  42ece4:	eor	w0, w0, #0x1
  42ece8:	and	w0, w0, #0xff
  42ecec:	cmp	w0, #0x0
  42ecf0:	b.eq	42ebfc <_obstack_memory_used@@Base+0x12a1c>  // b.none
  42ecf4:	ldr	x0, [sp, #40]
  42ecf8:	mov	w1, #0xc                   	// #12
  42ecfc:	str	w1, [x0]
  42ed00:	mov	x0, #0x0                   	// #0
  42ed04:	ldp	x29, x30, [sp], #80
  42ed08:	ret
  42ed0c:	stp	x29, x30, [sp, #-144]!
  42ed10:	mov	x29, sp
  42ed14:	str	x19, [sp, #16]
  42ed18:	str	x0, [sp, #56]
  42ed1c:	str	x1, [sp, #48]
  42ed20:	str	x2, [sp, #40]
  42ed24:	ldr	x0, [sp, #48]
  42ed28:	ldr	x0, [x0, #152]
  42ed2c:	str	x0, [sp, #128]
  42ed30:	ldr	x0, [sp, #48]
  42ed34:	ldr	x0, [x0, #72]
  42ed38:	str	x0, [sp, #120]
  42ed3c:	ldr	x0, [sp, #48]
  42ed40:	ldr	x0, [x0, #192]
  42ed44:	ldr	x1, [sp, #120]
  42ed48:	cmp	x1, x0
  42ed4c:	b.le	42ed7c <_obstack_memory_used@@Base+0x12b9c>
  42ed50:	ldr	x0, [sp, #48]
  42ed54:	ldr	x1, [x0, #184]
  42ed58:	ldr	x0, [sp, #120]
  42ed5c:	lsl	x0, x0, #3
  42ed60:	add	x0, x1, x0
  42ed64:	ldr	x1, [sp, #40]
  42ed68:	str	x1, [x0]
  42ed6c:	ldr	x0, [sp, #48]
  42ed70:	ldr	x1, [sp, #120]
  42ed74:	str	x1, [x0, #192]
  42ed78:	b	42eed4 <_obstack_memory_used@@Base+0x12cf4>
  42ed7c:	ldr	x0, [sp, #48]
  42ed80:	ldr	x1, [x0, #184]
  42ed84:	ldr	x0, [sp, #120]
  42ed88:	lsl	x0, x0, #3
  42ed8c:	add	x0, x1, x0
  42ed90:	ldr	x0, [x0]
  42ed94:	cmp	x0, #0x0
  42ed98:	b.ne	42edbc <_obstack_memory_used@@Base+0x12bdc>  // b.any
  42ed9c:	ldr	x0, [sp, #48]
  42eda0:	ldr	x1, [x0, #184]
  42eda4:	ldr	x0, [sp, #120]
  42eda8:	lsl	x0, x0, #3
  42edac:	add	x0, x1, x0
  42edb0:	ldr	x1, [sp, #40]
  42edb4:	str	x1, [x0]
  42edb8:	b	42eed4 <_obstack_memory_used@@Base+0x12cf4>
  42edbc:	str	xzr, [sp, #136]
  42edc0:	ldr	x0, [sp, #48]
  42edc4:	ldr	x1, [x0, #184]
  42edc8:	ldr	x0, [sp, #120]
  42edcc:	lsl	x0, x0, #3
  42edd0:	add	x0, x1, x0
  42edd4:	ldr	x0, [x0]
  42edd8:	str	x0, [sp, #112]
  42eddc:	ldr	x0, [sp, #112]
  42ede0:	ldr	x0, [x0, #80]
  42ede4:	str	x0, [sp, #104]
  42ede8:	ldr	x0, [sp, #40]
  42edec:	cmp	x0, #0x0
  42edf0:	b.eq	42ee44 <_obstack_memory_used@@Base+0x12c64>  // b.none
  42edf4:	ldr	x0, [sp, #40]
  42edf8:	ldr	x0, [x0, #80]
  42edfc:	str	x0, [sp, #136]
  42ee00:	add	x0, sp, #0x48
  42ee04:	ldr	x2, [sp, #104]
  42ee08:	ldr	x1, [sp, #136]
  42ee0c:	bl	41f790 <_obstack_memory_used@@Base+0x35b0>
  42ee10:	mov	w1, w0
  42ee14:	ldr	x0, [sp, #56]
  42ee18:	str	w1, [x0]
  42ee1c:	ldr	x0, [sp, #56]
  42ee20:	ldr	w0, [x0]
  42ee24:	cmp	w0, #0x0
  42ee28:	cset	w0, ne  // ne = any
  42ee2c:	and	w0, w0, #0xff
  42ee30:	and	x0, x0, #0xff
  42ee34:	cmp	x0, #0x0
  42ee38:	b.eq	42ee60 <_obstack_memory_used@@Base+0x12c80>  // b.none
  42ee3c:	mov	x0, #0x0                   	// #0
  42ee40:	b	42efbc <_obstack_memory_used@@Base+0x12ddc>
  42ee44:	ldr	x0, [sp, #104]
  42ee48:	add	x2, sp, #0x48
  42ee4c:	mov	x3, x0
  42ee50:	ldp	x0, x1, [x3]
  42ee54:	stp	x0, x1, [x2]
  42ee58:	ldr	x0, [x3, #16]
  42ee5c:	str	x0, [x2, #16]
  42ee60:	ldr	x3, [sp, #48]
  42ee64:	ldr	x0, [sp, #48]
  42ee68:	ldr	x0, [x0, #72]
  42ee6c:	sub	x1, x0, #0x1
  42ee70:	ldr	x0, [sp, #48]
  42ee74:	ldr	w0, [x0, #160]
  42ee78:	mov	w2, w0
  42ee7c:	mov	x0, x3
  42ee80:	bl	41ee34 <_obstack_memory_used@@Base+0x2c54>
  42ee84:	str	w0, [sp, #100]
  42ee88:	ldr	x0, [sp, #48]
  42ee8c:	ldr	x1, [x0, #184]
  42ee90:	ldr	x0, [sp, #120]
  42ee94:	lsl	x0, x0, #3
  42ee98:	add	x19, x1, x0
  42ee9c:	add	x0, sp, #0x48
  42eea0:	ldr	w3, [sp, #100]
  42eea4:	mov	x2, x0
  42eea8:	ldr	x1, [sp, #128]
  42eeac:	ldr	x0, [sp, #56]
  42eeb0:	bl	420a10 <_obstack_memory_used@@Base+0x4830>
  42eeb4:	str	x0, [x19]
  42eeb8:	ldr	x0, [x19]
  42eebc:	str	x0, [sp, #40]
  42eec0:	ldr	x0, [sp, #136]
  42eec4:	cmp	x0, #0x0
  42eec8:	b.eq	42eed4 <_obstack_memory_used@@Base+0x12cf4>  // b.none
  42eecc:	ldr	x0, [sp, #88]
  42eed0:	bl	402b60 <free@plt>
  42eed4:	ldr	x0, [sp, #128]
  42eed8:	ldr	x0, [x0, #152]
  42eedc:	cmp	x0, #0x0
  42eee0:	b.eq	42efb8 <_obstack_memory_used@@Base+0x12dd8>  // b.none
  42eee4:	ldr	x0, [sp, #40]
  42eee8:	cmp	x0, #0x0
  42eeec:	b.eq	42efb8 <_obstack_memory_used@@Base+0x12dd8>  // b.none
  42eef0:	ldr	x0, [sp, #40]
  42eef4:	add	x0, x0, #0x8
  42eef8:	ldr	x2, [sp, #120]
  42eefc:	mov	x1, x0
  42ef00:	ldr	x0, [sp, #48]
  42ef04:	bl	42f084 <_obstack_memory_used@@Base+0x12ea4>
  42ef08:	mov	w1, w0
  42ef0c:	ldr	x0, [sp, #56]
  42ef10:	str	w1, [x0]
  42ef14:	ldr	x0, [sp, #56]
  42ef18:	ldr	w0, [x0]
  42ef1c:	cmp	w0, #0x0
  42ef20:	cset	w0, ne  // ne = any
  42ef24:	and	w0, w0, #0xff
  42ef28:	and	x0, x0, #0xff
  42ef2c:	cmp	x0, #0x0
  42ef30:	b.eq	42ef3c <_obstack_memory_used@@Base+0x12d5c>  // b.none
  42ef34:	mov	x0, #0x0                   	// #0
  42ef38:	b	42efbc <_obstack_memory_used@@Base+0x12ddc>
  42ef3c:	ldr	x0, [sp, #40]
  42ef40:	ldrb	w0, [x0, #104]
  42ef44:	and	w0, w0, #0x40
  42ef48:	and	w0, w0, #0xff
  42ef4c:	cmp	w0, #0x0
  42ef50:	b.eq	42efb8 <_obstack_memory_used@@Base+0x12dd8>  // b.none
  42ef54:	ldr	x0, [sp, #40]
  42ef58:	add	x0, x0, #0x8
  42ef5c:	mov	x1, x0
  42ef60:	ldr	x0, [sp, #48]
  42ef64:	bl	42f5b4 <_obstack_memory_used@@Base+0x133d4>
  42ef68:	mov	w1, w0
  42ef6c:	ldr	x0, [sp, #56]
  42ef70:	str	w1, [x0]
  42ef74:	ldr	x0, [sp, #56]
  42ef78:	ldr	w0, [x0]
  42ef7c:	cmp	w0, #0x0
  42ef80:	cset	w0, ne  // ne = any
  42ef84:	and	w0, w0, #0xff
  42ef88:	and	x0, x0, #0xff
  42ef8c:	cmp	x0, #0x0
  42ef90:	b.eq	42ef9c <_obstack_memory_used@@Base+0x12dbc>  // b.none
  42ef94:	mov	x0, #0x0                   	// #0
  42ef98:	b	42efbc <_obstack_memory_used@@Base+0x12ddc>
  42ef9c:	ldr	x0, [sp, #48]
  42efa0:	ldr	x1, [x0, #184]
  42efa4:	ldr	x0, [sp, #120]
  42efa8:	lsl	x0, x0, #3
  42efac:	add	x0, x1, x0
  42efb0:	ldr	x0, [x0]
  42efb4:	str	x0, [sp, #40]
  42efb8:	ldr	x0, [sp, #40]
  42efbc:	ldr	x19, [sp, #16]
  42efc0:	ldp	x29, x30, [sp], #144
  42efc4:	ret
  42efc8:	stp	x29, x30, [sp, #-64]!
  42efcc:	mov	x29, sp
  42efd0:	str	x0, [sp, #24]
  42efd4:	str	x1, [sp, #16]
  42efd8:	ldr	x0, [sp, #16]
  42efdc:	ldr	x0, [x0, #192]
  42efe0:	str	x0, [sp, #48]
  42efe4:	ldr	x0, [sp, #16]
  42efe8:	ldr	x0, [x0, #72]
  42efec:	str	x0, [sp, #56]
  42eff0:	ldr	x0, [sp, #56]
  42eff4:	add	x0, x0, #0x1
  42eff8:	str	x0, [sp, #56]
  42effc:	ldr	x1, [sp, #56]
  42f000:	ldr	x0, [sp, #48]
  42f004:	cmp	x1, x0
  42f008:	b.le	42f014 <_obstack_memory_used@@Base+0x12e34>
  42f00c:	mov	x0, #0x0                   	// #0
  42f010:	b	42f07c <_obstack_memory_used@@Base+0x12e9c>
  42f014:	ldr	x0, [sp, #16]
  42f018:	ldr	x0, [x0, #72]
  42f01c:	add	x1, x0, #0x1
  42f020:	ldr	x0, [sp, #16]
  42f024:	str	x1, [x0, #72]
  42f028:	ldr	x0, [sp, #16]
  42f02c:	ldr	x1, [x0, #184]
  42f030:	ldr	x0, [sp, #56]
  42f034:	lsl	x0, x0, #3
  42f038:	add	x0, x1, x0
  42f03c:	ldr	x0, [x0]
  42f040:	cmp	x0, #0x0
  42f044:	b.eq	42eff0 <_obstack_memory_used@@Base+0x12e10>  // b.none
  42f048:	mov	x2, #0x0                   	// #0
  42f04c:	ldr	x1, [sp, #16]
  42f050:	ldr	x0, [sp, #24]
  42f054:	bl	42ed0c <_obstack_memory_used@@Base+0x12b2c>
  42f058:	str	x0, [sp, #40]
  42f05c:	ldr	x0, [sp, #24]
  42f060:	ldr	w0, [x0]
  42f064:	cmp	w0, #0x0
  42f068:	b.ne	42f078 <_obstack_memory_used@@Base+0x12e98>  // b.any
  42f06c:	ldr	x0, [sp, #40]
  42f070:	cmp	x0, #0x0
  42f074:	b.eq	42efd8 <_obstack_memory_used@@Base+0x12df8>  // b.none
  42f078:	ldr	x0, [sp, #40]
  42f07c:	ldp	x29, x30, [sp], #64
  42f080:	ret
  42f084:	stp	x29, x30, [sp, #-80]!
  42f088:	mov	x29, sp
  42f08c:	str	x0, [sp, #40]
  42f090:	str	x1, [sp, #32]
  42f094:	str	x2, [sp, #24]
  42f098:	ldr	x0, [sp, #40]
  42f09c:	ldr	x0, [x0, #152]
  42f0a0:	str	x0, [sp, #64]
  42f0a4:	str	xzr, [sp, #72]
  42f0a8:	b	42f17c <_obstack_memory_used@@Base+0x12f9c>
  42f0ac:	ldr	x0, [sp, #32]
  42f0b0:	ldr	x1, [x0, #16]
  42f0b4:	ldr	x0, [sp, #72]
  42f0b8:	lsl	x0, x0, #3
  42f0bc:	add	x0, x1, x0
  42f0c0:	ldr	x0, [x0]
  42f0c4:	str	x0, [sp, #56]
  42f0c8:	ldr	x0, [sp, #64]
  42f0cc:	ldr	x1, [x0]
  42f0d0:	ldr	x0, [sp, #56]
  42f0d4:	lsl	x0, x0, #4
  42f0d8:	add	x0, x1, x0
  42f0dc:	ldrb	w0, [x0, #8]
  42f0e0:	cmp	w0, #0x8
  42f0e4:	b.ne	42f170 <_obstack_memory_used@@Base+0x12f90>  // b.any
  42f0e8:	ldr	x0, [sp, #64]
  42f0ec:	ldr	x1, [x0]
  42f0f0:	ldr	x0, [sp, #56]
  42f0f4:	lsl	x0, x0, #4
  42f0f8:	add	x0, x1, x0
  42f0fc:	ldr	x0, [x0]
  42f100:	cmp	x0, #0x3f
  42f104:	b.gt	42f170 <_obstack_memory_used@@Base+0x12f90>
  42f108:	ldr	x0, [sp, #64]
  42f10c:	ldr	x0, [x0, #160]
  42f110:	ldr	x1, [sp, #64]
  42f114:	ldr	x2, [x1]
  42f118:	ldr	x1, [sp, #56]
  42f11c:	lsl	x1, x1, #4
  42f120:	add	x1, x2, x1
  42f124:	ldr	x1, [x1]
  42f128:	lsr	x0, x0, x1
  42f12c:	and	x0, x0, #0x1
  42f130:	cmp	x0, #0x0
  42f134:	b.eq	42f170 <_obstack_memory_used@@Base+0x12f90>  // b.none
  42f138:	ldr	x2, [sp, #24]
  42f13c:	ldr	x1, [sp, #56]
  42f140:	ldr	x0, [sp, #40]
  42f144:	bl	433848 <_obstack_memory_used@@Base+0x17668>
  42f148:	str	w0, [sp, #52]
  42f14c:	ldr	w0, [sp, #52]
  42f150:	cmp	w0, #0x0
  42f154:	cset	w0, ne  // ne = any
  42f158:	and	w0, w0, #0xff
  42f15c:	and	x0, x0, #0xff
  42f160:	cmp	x0, #0x0
  42f164:	b.eq	42f170 <_obstack_memory_used@@Base+0x12f90>  // b.none
  42f168:	ldr	w0, [sp, #52]
  42f16c:	b	42f194 <_obstack_memory_used@@Base+0x12fb4>
  42f170:	ldr	x0, [sp, #72]
  42f174:	add	x0, x0, #0x1
  42f178:	str	x0, [sp, #72]
  42f17c:	ldr	x0, [sp, #32]
  42f180:	ldr	x0, [x0, #8]
  42f184:	ldr	x1, [sp, #72]
  42f188:	cmp	x1, x0
  42f18c:	b.lt	42f0ac <_obstack_memory_used@@Base+0x12ecc>  // b.tstop
  42f190:	mov	w0, #0x0                   	// #0
  42f194:	ldp	x29, x30, [sp], #80
  42f198:	ret
  42f19c:	stp	x29, x30, [sp, #-144]!
  42f1a0:	mov	x29, sp
  42f1a4:	str	x19, [sp, #16]
  42f1a8:	str	x0, [sp, #40]
  42f1ac:	str	x1, [sp, #32]
  42f1b0:	ldr	x0, [sp, #40]
  42f1b4:	ldr	x0, [x0, #152]
  42f1b8:	str	x0, [sp, #128]
  42f1bc:	str	xzr, [sp, #136]
  42f1c0:	b	42f590 <_obstack_memory_used@@Base+0x133b0>
  42f1c4:	ldr	x0, [sp, #32]
  42f1c8:	ldr	x1, [x0, #24]
  42f1cc:	ldr	x0, [sp, #136]
  42f1d0:	lsl	x0, x0, #3
  42f1d4:	add	x0, x1, x0
  42f1d8:	ldr	x0, [x0]
  42f1dc:	str	x0, [sp, #120]
  42f1e0:	ldr	x0, [sp, #128]
  42f1e4:	ldr	x1, [x0]
  42f1e8:	ldr	x0, [sp, #120]
  42f1ec:	lsl	x0, x0, #4
  42f1f0:	add	x0, x1, x0
  42f1f4:	ldrb	w0, [x0, #10]
  42f1f8:	and	w0, w0, #0x10
  42f1fc:	and	w0, w0, #0xff
  42f200:	cmp	w0, #0x0
  42f204:	b.eq	42f570 <_obstack_memory_used@@Base+0x13390>  // b.none
  42f208:	ldr	x0, [sp, #128]
  42f20c:	ldr	x1, [x0]
  42f210:	ldr	x0, [sp, #120]
  42f214:	lsl	x0, x0, #4
  42f218:	add	x0, x1, x0
  42f21c:	ldr	w0, [x0, #8]
  42f220:	and	w0, w0, #0x3ff00
  42f224:	cmp	w0, #0x0
  42f228:	b.eq	42f340 <_obstack_memory_used@@Base+0x13160>  // b.none
  42f22c:	ldr	x3, [sp, #40]
  42f230:	ldr	x0, [sp, #40]
  42f234:	ldr	x1, [x0, #72]
  42f238:	ldr	x0, [sp, #40]
  42f23c:	ldr	w0, [x0, #160]
  42f240:	mov	w2, w0
  42f244:	mov	x0, x3
  42f248:	bl	41ee34 <_obstack_memory_used@@Base+0x2c54>
  42f24c:	str	w0, [sp, #116]
  42f250:	ldr	x0, [sp, #128]
  42f254:	ldr	x1, [x0]
  42f258:	ldr	x0, [sp, #120]
  42f25c:	lsl	x0, x0, #4
  42f260:	add	x0, x1, x0
  42f264:	ldr	w0, [x0, #8]
  42f268:	ubfx	x0, x0, #8, #10
  42f26c:	and	w0, w0, #0xffff
  42f270:	and	w0, w0, #0x4
  42f274:	cmp	w0, #0x0
  42f278:	b.eq	42f28c <_obstack_memory_used@@Base+0x130ac>  // b.none
  42f27c:	ldr	w0, [sp, #116]
  42f280:	and	w0, w0, #0x1
  42f284:	cmp	w0, #0x0
  42f288:	b.eq	42f578 <_obstack_memory_used@@Base+0x13398>  // b.none
  42f28c:	ldr	x0, [sp, #128]
  42f290:	ldr	x1, [x0]
  42f294:	ldr	x0, [sp, #120]
  42f298:	lsl	x0, x0, #4
  42f29c:	add	x0, x1, x0
  42f2a0:	ldr	w0, [x0, #8]
  42f2a4:	ubfx	x0, x0, #8, #10
  42f2a8:	and	w0, w0, #0xffff
  42f2ac:	and	w0, w0, #0x8
  42f2b0:	cmp	w0, #0x0
  42f2b4:	b.eq	42f2c8 <_obstack_memory_used@@Base+0x130e8>  // b.none
  42f2b8:	ldr	w0, [sp, #116]
  42f2bc:	and	w0, w0, #0x1
  42f2c0:	cmp	w0, #0x0
  42f2c4:	b.ne	42f578 <_obstack_memory_used@@Base+0x13398>  // b.any
  42f2c8:	ldr	x0, [sp, #128]
  42f2cc:	ldr	x1, [x0]
  42f2d0:	ldr	x0, [sp, #120]
  42f2d4:	lsl	x0, x0, #4
  42f2d8:	add	x0, x1, x0
  42f2dc:	ldr	w0, [x0, #8]
  42f2e0:	ubfx	x0, x0, #8, #10
  42f2e4:	and	w0, w0, #0xffff
  42f2e8:	and	w0, w0, #0x20
  42f2ec:	cmp	w0, #0x0
  42f2f0:	b.eq	42f304 <_obstack_memory_used@@Base+0x13124>  // b.none
  42f2f4:	ldr	w0, [sp, #116]
  42f2f8:	and	w0, w0, #0x2
  42f2fc:	cmp	w0, #0x0
  42f300:	b.eq	42f578 <_obstack_memory_used@@Base+0x13398>  // b.none
  42f304:	ldr	x0, [sp, #128]
  42f308:	ldr	x1, [x0]
  42f30c:	ldr	x0, [sp, #120]
  42f310:	lsl	x0, x0, #4
  42f314:	add	x0, x1, x0
  42f318:	ldr	w0, [x0, #8]
  42f31c:	ubfx	x0, x0, #8, #10
  42f320:	and	w0, w0, #0xffff
  42f324:	and	w0, w0, #0x80
  42f328:	cmp	w0, #0x0
  42f32c:	b.eq	42f340 <_obstack_memory_used@@Base+0x13160>  // b.none
  42f330:	ldr	w0, [sp, #116]
  42f334:	and	w0, w0, #0x8
  42f338:	cmp	w0, #0x0
  42f33c:	b.eq	42f578 <_obstack_memory_used@@Base+0x13398>  // b.none
  42f340:	ldr	x1, [sp, #40]
  42f344:	ldr	x0, [sp, #40]
  42f348:	ldr	x0, [x0, #72]
  42f34c:	mov	x3, x0
  42f350:	mov	x2, x1
  42f354:	ldr	x1, [sp, #120]
  42f358:	ldr	x0, [sp, #128]
  42f35c:	bl	4328b0 <_obstack_memory_used@@Base+0x166d0>
  42f360:	str	w0, [sp, #112]
  42f364:	ldr	w0, [sp, #112]
  42f368:	cmp	w0, #0x0
  42f36c:	b.eq	42f580 <_obstack_memory_used@@Base+0x133a0>  // b.none
  42f370:	ldr	x0, [sp, #40]
  42f374:	ldr	x1, [x0, #72]
  42f378:	ldrsw	x0, [sp, #112]
  42f37c:	add	x0, x1, x0
  42f380:	str	x0, [sp, #104]
  42f384:	ldr	x0, [sp, #40]
  42f388:	ldr	w0, [x0, #224]
  42f38c:	ldr	w2, [sp, #112]
  42f390:	ldr	w1, [sp, #112]
  42f394:	cmp	w2, w0
  42f398:	csel	w1, w1, w0, ge  // ge = tcont
  42f39c:	ldr	x0, [sp, #40]
  42f3a0:	str	w1, [x0, #224]
  42f3a4:	ldr	x1, [sp, #104]
  42f3a8:	ldr	x0, [sp, #40]
  42f3ac:	bl	42d410 <_obstack_memory_used@@Base+0x11230>
  42f3b0:	str	w0, [sp, #84]
  42f3b4:	ldr	w0, [sp, #84]
  42f3b8:	cmp	w0, #0x0
  42f3bc:	cset	w0, ne  // ne = any
  42f3c0:	and	w0, w0, #0xff
  42f3c4:	and	x0, x0, #0xff
  42f3c8:	cmp	x0, #0x0
  42f3cc:	b.eq	42f3d8 <_obstack_memory_used@@Base+0x131f8>  // b.none
  42f3d0:	ldr	w0, [sp, #84]
  42f3d4:	b	42f5a8 <_obstack_memory_used@@Base+0x133c8>
  42f3d8:	ldr	x0, [sp, #128]
  42f3dc:	ldr	x1, [x0, #24]
  42f3e0:	ldr	x0, [sp, #120]
  42f3e4:	lsl	x0, x0, #3
  42f3e8:	add	x0, x1, x0
  42f3ec:	ldr	x0, [x0]
  42f3f0:	cmn	x0, #0x1
  42f3f4:	ldr	x0, [sp, #128]
  42f3f8:	ldr	x1, [x0, #48]
  42f3fc:	ldr	x0, [sp, #128]
  42f400:	ldr	x2, [x0, #24]
  42f404:	ldr	x0, [sp, #120]
  42f408:	lsl	x0, x0, #3
  42f40c:	add	x0, x2, x0
  42f410:	ldr	x0, [x0]
  42f414:	mov	x2, x0
  42f418:	mov	x0, x2
  42f41c:	lsl	x0, x0, #1
  42f420:	add	x0, x0, x2
  42f424:	lsl	x0, x0, #3
  42f428:	add	x0, x1, x0
  42f42c:	str	x0, [sp, #96]
  42f430:	ldr	x0, [sp, #40]
  42f434:	ldr	x1, [x0, #184]
  42f438:	ldr	x0, [sp, #104]
  42f43c:	lsl	x0, x0, #3
  42f440:	add	x0, x1, x0
  42f444:	ldr	x0, [x0]
  42f448:	str	x0, [sp, #88]
  42f44c:	ldr	x0, [sp, #88]
  42f450:	cmp	x0, #0x0
  42f454:	b.ne	42f478 <_obstack_memory_used@@Base+0x13298>  // b.any
  42f458:	ldr	x0, [sp, #96]
  42f45c:	add	x2, sp, #0x38
  42f460:	mov	x3, x0
  42f464:	ldp	x0, x1, [x3]
  42f468:	stp	x0, x1, [x2]
  42f46c:	ldr	x0, [x3, #16]
  42f470:	str	x0, [x2, #16]
  42f474:	b	42f4b4 <_obstack_memory_used@@Base+0x132d4>
  42f478:	ldr	x0, [sp, #88]
  42f47c:	ldr	x1, [x0, #80]
  42f480:	add	x0, sp, #0x38
  42f484:	ldr	x2, [sp, #96]
  42f488:	bl	41f790 <_obstack_memory_used@@Base+0x35b0>
  42f48c:	str	w0, [sp, #84]
  42f490:	ldr	w0, [sp, #84]
  42f494:	cmp	w0, #0x0
  42f498:	cset	w0, ne  // ne = any
  42f49c:	and	w0, w0, #0xff
  42f4a0:	and	x0, x0, #0xff
  42f4a4:	cmp	x0, #0x0
  42f4a8:	b.eq	42f4b4 <_obstack_memory_used@@Base+0x132d4>  // b.none
  42f4ac:	ldr	w0, [sp, #84]
  42f4b0:	b	42f5a8 <_obstack_memory_used@@Base+0x133c8>
  42f4b4:	ldr	x3, [sp, #40]
  42f4b8:	ldr	x0, [sp, #104]
  42f4bc:	sub	x1, x0, #0x1
  42f4c0:	ldr	x0, [sp, #40]
  42f4c4:	ldr	w0, [x0, #160]
  42f4c8:	mov	w2, w0
  42f4cc:	mov	x0, x3
  42f4d0:	bl	41ee34 <_obstack_memory_used@@Base+0x2c54>
  42f4d4:	str	w0, [sp, #116]
  42f4d8:	ldr	x0, [sp, #40]
  42f4dc:	ldr	x1, [x0, #184]
  42f4e0:	ldr	x0, [sp, #104]
  42f4e4:	lsl	x0, x0, #3
  42f4e8:	add	x19, x1, x0
  42f4ec:	add	x1, sp, #0x38
  42f4f0:	add	x0, sp, #0x54
  42f4f4:	ldr	w3, [sp, #116]
  42f4f8:	mov	x2, x1
  42f4fc:	ldr	x1, [sp, #128]
  42f500:	bl	420a10 <_obstack_memory_used@@Base+0x4830>
  42f504:	str	x0, [x19]
  42f508:	ldr	x0, [sp, #88]
  42f50c:	cmp	x0, #0x0
  42f510:	b.eq	42f51c <_obstack_memory_used@@Base+0x1333c>  // b.none
  42f514:	ldr	x0, [sp, #72]
  42f518:	bl	402b60 <free@plt>
  42f51c:	ldr	x0, [sp, #40]
  42f520:	ldr	x1, [x0, #184]
  42f524:	ldr	x0, [sp, #104]
  42f528:	lsl	x0, x0, #3
  42f52c:	add	x0, x1, x0
  42f530:	ldr	x0, [x0]
  42f534:	cmp	x0, #0x0
  42f538:	cset	w0, eq  // eq = none
  42f53c:	and	w0, w0, #0xff
  42f540:	and	x0, x0, #0xff
  42f544:	cmp	x0, #0x0
  42f548:	b.eq	42f584 <_obstack_memory_used@@Base+0x133a4>  // b.none
  42f54c:	ldr	w0, [sp, #84]
  42f550:	cmp	w0, #0x0
  42f554:	cset	w0, ne  // ne = any
  42f558:	and	w0, w0, #0xff
  42f55c:	and	x0, x0, #0xff
  42f560:	cmp	x0, #0x0
  42f564:	b.eq	42f584 <_obstack_memory_used@@Base+0x133a4>  // b.none
  42f568:	ldr	w0, [sp, #84]
  42f56c:	b	42f5a8 <_obstack_memory_used@@Base+0x133c8>
  42f570:	nop
  42f574:	b	42f584 <_obstack_memory_used@@Base+0x133a4>
  42f578:	nop
  42f57c:	b	42f584 <_obstack_memory_used@@Base+0x133a4>
  42f580:	nop
  42f584:	ldr	x0, [sp, #136]
  42f588:	add	x0, x0, #0x1
  42f58c:	str	x0, [sp, #136]
  42f590:	ldr	x0, [sp, #32]
  42f594:	ldr	x0, [x0, #16]
  42f598:	ldr	x1, [sp, #136]
  42f59c:	cmp	x1, x0
  42f5a0:	b.lt	42f1c4 <_obstack_memory_used@@Base+0x12fe4>  // b.tstop
  42f5a4:	mov	w0, #0x0                   	// #0
  42f5a8:	ldr	x19, [sp, #16]
  42f5ac:	ldp	x29, x30, [sp], #144
  42f5b0:	ret
  42f5b4:	stp	x29, x30, [sp, #-192]!
  42f5b8:	mov	x29, sp
  42f5bc:	str	x19, [sp, #16]
  42f5c0:	str	x0, [sp, #40]
  42f5c4:	str	x1, [sp, #32]
  42f5c8:	ldr	x0, [sp, #40]
  42f5cc:	ldr	x0, [x0, #152]
  42f5d0:	str	x0, [sp, #168]
  42f5d4:	ldr	x0, [sp, #40]
  42f5d8:	ldr	x0, [x0, #72]
  42f5dc:	str	x0, [sp, #160]
  42f5e0:	str	xzr, [sp, #184]
  42f5e4:	b	42fb2c <_obstack_memory_used@@Base+0x1394c>
  42f5e8:	ldr	x0, [sp, #32]
  42f5ec:	ldr	x1, [x0, #16]
  42f5f0:	ldr	x0, [sp, #184]
  42f5f4:	lsl	x0, x0, #3
  42f5f8:	add	x0, x1, x0
  42f5fc:	ldr	x0, [x0]
  42f600:	str	x0, [sp, #152]
  42f604:	ldr	x0, [sp, #168]
  42f608:	ldr	x1, [x0]
  42f60c:	ldr	x0, [sp, #152]
  42f610:	lsl	x0, x0, #4
  42f614:	add	x0, x1, x0
  42f618:	str	x0, [sp, #144]
  42f61c:	ldr	x0, [sp, #144]
  42f620:	ldrb	w0, [x0, #8]
  42f624:	cmp	w0, #0x4
  42f628:	b.ne	42fb14 <_obstack_memory_used@@Base+0x13934>  // b.any
  42f62c:	ldr	x0, [sp, #144]
  42f630:	ldr	w0, [x0, #8]
  42f634:	and	w0, w0, #0x3ff00
  42f638:	cmp	w0, #0x0
  42f63c:	b.eq	42f710 <_obstack_memory_used@@Base+0x13530>  // b.none
  42f640:	ldr	x3, [sp, #40]
  42f644:	ldr	x0, [sp, #40]
  42f648:	ldr	w0, [x0, #160]
  42f64c:	mov	w2, w0
  42f650:	ldr	x1, [sp, #160]
  42f654:	mov	x0, x3
  42f658:	bl	41ee34 <_obstack_memory_used@@Base+0x2c54>
  42f65c:	str	w0, [sp, #140]
  42f660:	ldr	x0, [sp, #144]
  42f664:	ldr	w0, [x0, #8]
  42f668:	ubfx	x0, x0, #8, #10
  42f66c:	and	w0, w0, #0xffff
  42f670:	and	w0, w0, #0x4
  42f674:	cmp	w0, #0x0
  42f678:	b.eq	42f68c <_obstack_memory_used@@Base+0x134ac>  // b.none
  42f67c:	ldr	w0, [sp, #140]
  42f680:	and	w0, w0, #0x1
  42f684:	cmp	w0, #0x0
  42f688:	b.eq	42fb1c <_obstack_memory_used@@Base+0x1393c>  // b.none
  42f68c:	ldr	x0, [sp, #144]
  42f690:	ldr	w0, [x0, #8]
  42f694:	ubfx	x0, x0, #8, #10
  42f698:	and	w0, w0, #0xffff
  42f69c:	and	w0, w0, #0x8
  42f6a0:	cmp	w0, #0x0
  42f6a4:	b.eq	42f6b8 <_obstack_memory_used@@Base+0x134d8>  // b.none
  42f6a8:	ldr	w0, [sp, #140]
  42f6ac:	and	w0, w0, #0x1
  42f6b0:	cmp	w0, #0x0
  42f6b4:	b.ne	42fb1c <_obstack_memory_used@@Base+0x1393c>  // b.any
  42f6b8:	ldr	x0, [sp, #144]
  42f6bc:	ldr	w0, [x0, #8]
  42f6c0:	ubfx	x0, x0, #8, #10
  42f6c4:	and	w0, w0, #0xffff
  42f6c8:	and	w0, w0, #0x20
  42f6cc:	cmp	w0, #0x0
  42f6d0:	b.eq	42f6e4 <_obstack_memory_used@@Base+0x13504>  // b.none
  42f6d4:	ldr	w0, [sp, #140]
  42f6d8:	and	w0, w0, #0x2
  42f6dc:	cmp	w0, #0x0
  42f6e0:	b.eq	42fb1c <_obstack_memory_used@@Base+0x1393c>  // b.none
  42f6e4:	ldr	x0, [sp, #144]
  42f6e8:	ldr	w0, [x0, #8]
  42f6ec:	ubfx	x0, x0, #8, #10
  42f6f0:	and	w0, w0, #0xffff
  42f6f4:	and	w0, w0, #0x80
  42f6f8:	cmp	w0, #0x0
  42f6fc:	b.eq	42f710 <_obstack_memory_used@@Base+0x13530>  // b.none
  42f700:	ldr	w0, [sp, #140]
  42f704:	and	w0, w0, #0x8
  42f708:	cmp	w0, #0x0
  42f70c:	b.eq	42fb1c <_obstack_memory_used@@Base+0x1393c>  // b.none
  42f710:	ldr	x0, [sp, #40]
  42f714:	ldr	x0, [x0, #200]
  42f718:	str	x0, [sp, #176]
  42f71c:	ldr	x2, [sp, #160]
  42f720:	ldr	x1, [sp, #152]
  42f724:	ldr	x0, [sp, #40]
  42f728:	bl	42fb74 <_obstack_memory_used@@Base+0x13994>
  42f72c:	str	w0, [sp, #84]
  42f730:	ldr	w0, [sp, #84]
  42f734:	cmp	w0, #0x0
  42f738:	cset	w0, ne  // ne = any
  42f73c:	and	w0, w0, #0xff
  42f740:	and	x0, x0, #0xff
  42f744:	cmp	x0, #0x0
  42f748:	b.ne	42fb48 <_obstack_memory_used@@Base+0x13968>  // b.any
  42f74c:	ldr	x0, [sp, #168]
  42f750:	ldr	x1, [x0, #24]
  42f754:	ldr	x0, [sp, #152]
  42f758:	lsl	x0, x0, #3
  42f75c:	add	x0, x1, x0
  42f760:	ldr	x0, [x0]
  42f764:	cmn	x0, #0x1
  42f768:	b	42fafc <_obstack_memory_used@@Base+0x1391c>
  42f76c:	ldr	x0, [sp, #40]
  42f770:	ldr	x2, [x0, #216]
  42f774:	ldr	x1, [sp, #176]
  42f778:	mov	x0, x1
  42f77c:	lsl	x0, x0, #2
  42f780:	add	x0, x0, x1
  42f784:	lsl	x0, x0, #3
  42f788:	add	x0, x2, x0
  42f78c:	str	x0, [sp, #128]
  42f790:	ldr	x0, [sp, #128]
  42f794:	ldr	x0, [x0]
  42f798:	ldr	x1, [sp, #152]
  42f79c:	cmp	x1, x0
  42f7a0:	b.ne	42faec <_obstack_memory_used@@Base+0x1390c>  // b.any
  42f7a4:	ldr	x0, [sp, #128]
  42f7a8:	ldr	x0, [x0, #8]
  42f7ac:	ldr	x1, [sp, #160]
  42f7b0:	cmp	x1, x0
  42f7b4:	b.ne	42faec <_obstack_memory_used@@Base+0x1390c>  // b.any
  42f7b8:	ldr	x0, [sp, #128]
  42f7bc:	ldr	x1, [x0, #24]
  42f7c0:	ldr	x0, [sp, #128]
  42f7c4:	ldr	x0, [x0, #16]
  42f7c8:	sub	x0, x1, x0
  42f7cc:	str	x0, [sp, #120]
  42f7d0:	ldr	x0, [sp, #120]
  42f7d4:	cmp	x0, #0x0
  42f7d8:	b.ne	42f828 <_obstack_memory_used@@Base+0x13648>  // b.any
  42f7dc:	ldr	x0, [sp, #168]
  42f7e0:	ldr	x2, [x0, #48]
  42f7e4:	ldr	x0, [sp, #168]
  42f7e8:	ldr	x3, [x0, #40]
  42f7ec:	ldr	x1, [sp, #152]
  42f7f0:	mov	x0, x1
  42f7f4:	lsl	x0, x0, #1
  42f7f8:	add	x0, x0, x1
  42f7fc:	lsl	x0, x0, #3
  42f800:	add	x0, x3, x0
  42f804:	ldr	x0, [x0, #16]
  42f808:	ldr	x0, [x0]
  42f80c:	mov	x1, x0
  42f810:	mov	x0, x1
  42f814:	lsl	x0, x0, #1
  42f818:	add	x0, x0, x1
  42f81c:	lsl	x0, x0, #3
  42f820:	add	x0, x2, x0
  42f824:	b	42f860 <_obstack_memory_used@@Base+0x13680>
  42f828:	ldr	x0, [sp, #168]
  42f82c:	ldr	x1, [x0, #48]
  42f830:	ldr	x0, [sp, #168]
  42f834:	ldr	x2, [x0, #24]
  42f838:	ldr	x0, [sp, #152]
  42f83c:	lsl	x0, x0, #3
  42f840:	add	x0, x2, x0
  42f844:	ldr	x0, [x0]
  42f848:	mov	x2, x0
  42f84c:	mov	x0, x2
  42f850:	lsl	x0, x0, #1
  42f854:	add	x0, x0, x2
  42f858:	lsl	x0, x0, #3
  42f85c:	add	x0, x1, x0
  42f860:	str	x0, [sp, #112]
  42f864:	ldr	x0, [sp, #128]
  42f868:	ldr	x1, [x0, #24]
  42f86c:	ldr	x0, [sp, #160]
  42f870:	add	x1, x1, x0
  42f874:	ldr	x0, [sp, #128]
  42f878:	ldr	x0, [x0, #16]
  42f87c:	sub	x0, x1, x0
  42f880:	str	x0, [sp, #104]
  42f884:	ldr	x3, [sp, #40]
  42f888:	ldr	x0, [sp, #104]
  42f88c:	sub	x1, x0, #0x1
  42f890:	ldr	x0, [sp, #40]
  42f894:	ldr	w0, [x0, #160]
  42f898:	mov	w2, w0
  42f89c:	mov	x0, x3
  42f8a0:	bl	41ee34 <_obstack_memory_used@@Base+0x2c54>
  42f8a4:	str	w0, [sp, #140]
  42f8a8:	ldr	x0, [sp, #40]
  42f8ac:	ldr	x1, [x0, #184]
  42f8b0:	ldr	x0, [sp, #104]
  42f8b4:	lsl	x0, x0, #3
  42f8b8:	add	x0, x1, x0
  42f8bc:	ldr	x0, [x0]
  42f8c0:	str	x0, [sp, #96]
  42f8c4:	ldr	x0, [sp, #40]
  42f8c8:	ldr	x1, [x0, #184]
  42f8cc:	ldr	x0, [sp, #160]
  42f8d0:	lsl	x0, x0, #3
  42f8d4:	add	x0, x1, x0
  42f8d8:	ldr	x0, [x0]
  42f8dc:	cmp	x0, #0x0
  42f8e0:	b.eq	42f904 <_obstack_memory_used@@Base+0x13724>  // b.none
  42f8e4:	ldr	x0, [sp, #40]
  42f8e8:	ldr	x1, [x0, #184]
  42f8ec:	ldr	x0, [sp, #160]
  42f8f0:	lsl	x0, x0, #3
  42f8f4:	add	x0, x1, x0
  42f8f8:	ldr	x0, [x0]
  42f8fc:	ldr	x0, [x0, #16]
  42f900:	b	42f908 <_obstack_memory_used@@Base+0x13728>
  42f904:	mov	x0, #0x0                   	// #0
  42f908:	str	x0, [sp, #88]
  42f90c:	ldr	x0, [sp, #96]
  42f910:	cmp	x0, #0x0
  42f914:	b.ne	42f994 <_obstack_memory_used@@Base+0x137b4>  // b.any
  42f918:	ldr	x0, [sp, #40]
  42f91c:	ldr	x1, [x0, #184]
  42f920:	ldr	x0, [sp, #104]
  42f924:	lsl	x0, x0, #3
  42f928:	add	x19, x1, x0
  42f92c:	add	x0, sp, #0x54
  42f930:	ldr	w3, [sp, #140]
  42f934:	ldr	x2, [sp, #112]
  42f938:	ldr	x1, [sp, #168]
  42f93c:	bl	420a10 <_obstack_memory_used@@Base+0x4830>
  42f940:	str	x0, [x19]
  42f944:	ldr	x0, [sp, #40]
  42f948:	ldr	x1, [x0, #184]
  42f94c:	ldr	x0, [sp, #104]
  42f950:	lsl	x0, x0, #3
  42f954:	add	x0, x1, x0
  42f958:	ldr	x0, [x0]
  42f95c:	cmp	x0, #0x0
  42f960:	cset	w0, eq  // eq = none
  42f964:	and	w0, w0, #0xff
  42f968:	and	x0, x0, #0xff
  42f96c:	cmp	x0, #0x0
  42f970:	b.eq	42fa58 <_obstack_memory_used@@Base+0x13878>  // b.none
  42f974:	ldr	w0, [sp, #84]
  42f978:	cmp	w0, #0x0
  42f97c:	cset	w0, ne  // ne = any
  42f980:	and	w0, w0, #0xff
  42f984:	and	x0, x0, #0xff
  42f988:	cmp	x0, #0x0
  42f98c:	b.eq	42fa58 <_obstack_memory_used@@Base+0x13878>  // b.none
  42f990:	b	42fb64 <_obstack_memory_used@@Base+0x13984>
  42f994:	ldr	x0, [sp, #96]
  42f998:	ldr	x1, [x0, #80]
  42f99c:	add	x0, sp, #0x38
  42f9a0:	ldr	x2, [sp, #112]
  42f9a4:	bl	41f790 <_obstack_memory_used@@Base+0x35b0>
  42f9a8:	str	w0, [sp, #84]
  42f9ac:	ldr	w0, [sp, #84]
  42f9b0:	cmp	w0, #0x0
  42f9b4:	cset	w0, ne  // ne = any
  42f9b8:	and	w0, w0, #0xff
  42f9bc:	and	x0, x0, #0xff
  42f9c0:	cmp	x0, #0x0
  42f9c4:	b.eq	42f9d4 <_obstack_memory_used@@Base+0x137f4>  // b.none
  42f9c8:	ldr	x0, [sp, #72]
  42f9cc:	bl	402b60 <free@plt>
  42f9d0:	b	42fb64 <_obstack_memory_used@@Base+0x13984>
  42f9d4:	ldr	x0, [sp, #40]
  42f9d8:	ldr	x1, [x0, #184]
  42f9dc:	ldr	x0, [sp, #104]
  42f9e0:	lsl	x0, x0, #3
  42f9e4:	add	x19, x1, x0
  42f9e8:	add	x1, sp, #0x38
  42f9ec:	add	x0, sp, #0x54
  42f9f0:	ldr	w3, [sp, #140]
  42f9f4:	mov	x2, x1
  42f9f8:	ldr	x1, [sp, #168]
  42f9fc:	bl	420a10 <_obstack_memory_used@@Base+0x4830>
  42fa00:	str	x0, [x19]
  42fa04:	ldr	x0, [sp, #72]
  42fa08:	bl	402b60 <free@plt>
  42fa0c:	ldr	x0, [sp, #40]
  42fa10:	ldr	x1, [x0, #184]
  42fa14:	ldr	x0, [sp, #104]
  42fa18:	lsl	x0, x0, #3
  42fa1c:	add	x0, x1, x0
  42fa20:	ldr	x0, [x0]
  42fa24:	cmp	x0, #0x0
  42fa28:	cset	w0, eq  // eq = none
  42fa2c:	and	w0, w0, #0xff
  42fa30:	and	x0, x0, #0xff
  42fa34:	cmp	x0, #0x0
  42fa38:	b.eq	42fa58 <_obstack_memory_used@@Base+0x13878>  // b.none
  42fa3c:	ldr	w0, [sp, #84]
  42fa40:	cmp	w0, #0x0
  42fa44:	cset	w0, ne  // ne = any
  42fa48:	and	w0, w0, #0xff
  42fa4c:	and	x0, x0, #0xff
  42fa50:	cmp	x0, #0x0
  42fa54:	b.ne	42fb50 <_obstack_memory_used@@Base+0x13970>  // b.any
  42fa58:	ldr	x0, [sp, #120]
  42fa5c:	cmp	x0, #0x0
  42fa60:	b.ne	42faf0 <_obstack_memory_used@@Base+0x13910>  // b.any
  42fa64:	ldr	x0, [sp, #40]
  42fa68:	ldr	x1, [x0, #184]
  42fa6c:	ldr	x0, [sp, #160]
  42fa70:	lsl	x0, x0, #3
  42fa74:	add	x0, x1, x0
  42fa78:	ldr	x0, [x0]
  42fa7c:	ldr	x0, [x0, #16]
  42fa80:	ldr	x1, [sp, #88]
  42fa84:	cmp	x1, x0
  42fa88:	b.ge	42faf0 <_obstack_memory_used@@Base+0x13910>  // b.tcont
  42fa8c:	ldr	x2, [sp, #160]
  42fa90:	ldr	x1, [sp, #112]
  42fa94:	ldr	x0, [sp, #40]
  42fa98:	bl	42f084 <_obstack_memory_used@@Base+0x12ea4>
  42fa9c:	str	w0, [sp, #84]
  42faa0:	ldr	w0, [sp, #84]
  42faa4:	cmp	w0, #0x0
  42faa8:	cset	w0, ne  // ne = any
  42faac:	and	w0, w0, #0xff
  42fab0:	and	x0, x0, #0xff
  42fab4:	cmp	x0, #0x0
  42fab8:	b.ne	42fb58 <_obstack_memory_used@@Base+0x13978>  // b.any
  42fabc:	ldr	x1, [sp, #112]
  42fac0:	ldr	x0, [sp, #40]
  42fac4:	bl	42f5b4 <_obstack_memory_used@@Base+0x133d4>
  42fac8:	str	w0, [sp, #84]
  42facc:	ldr	w0, [sp, #84]
  42fad0:	cmp	w0, #0x0
  42fad4:	cset	w0, ne  // ne = any
  42fad8:	and	w0, w0, #0xff
  42fadc:	and	x0, x0, #0xff
  42fae0:	cmp	x0, #0x0
  42fae4:	b.ne	42fb60 <_obstack_memory_used@@Base+0x13980>  // b.any
  42fae8:	b	42faf0 <_obstack_memory_used@@Base+0x13910>
  42faec:	nop
  42faf0:	ldr	x0, [sp, #176]
  42faf4:	add	x0, x0, #0x1
  42faf8:	str	x0, [sp, #176]
  42fafc:	ldr	x0, [sp, #40]
  42fb00:	ldr	x0, [x0, #200]
  42fb04:	ldr	x1, [sp, #176]
  42fb08:	cmp	x1, x0
  42fb0c:	b.lt	42f76c <_obstack_memory_used@@Base+0x1358c>  // b.tstop
  42fb10:	b	42fb20 <_obstack_memory_used@@Base+0x13940>
  42fb14:	nop
  42fb18:	b	42fb20 <_obstack_memory_used@@Base+0x13940>
  42fb1c:	nop
  42fb20:	ldr	x0, [sp, #184]
  42fb24:	add	x0, x0, #0x1
  42fb28:	str	x0, [sp, #184]
  42fb2c:	ldr	x0, [sp, #32]
  42fb30:	ldr	x0, [x0, #8]
  42fb34:	ldr	x1, [sp, #184]
  42fb38:	cmp	x1, x0
  42fb3c:	b.lt	42f5e8 <_obstack_memory_used@@Base+0x13408>  // b.tstop
  42fb40:	str	wzr, [sp, #84]
  42fb44:	b	42fb64 <_obstack_memory_used@@Base+0x13984>
  42fb48:	nop
  42fb4c:	b	42fb64 <_obstack_memory_used@@Base+0x13984>
  42fb50:	nop
  42fb54:	b	42fb64 <_obstack_memory_used@@Base+0x13984>
  42fb58:	nop
  42fb5c:	b	42fb64 <_obstack_memory_used@@Base+0x13984>
  42fb60:	nop
  42fb64:	ldr	w0, [sp, #84]
  42fb68:	ldr	x19, [sp, #16]
  42fb6c:	ldp	x29, x30, [sp], #192
  42fb70:	ret
  42fb74:	stp	x29, x30, [sp, #-176]!
  42fb78:	mov	x29, sp
  42fb7c:	str	x0, [sp, #40]
  42fb80:	str	x1, [sp, #32]
  42fb84:	str	x2, [sp, #24]
  42fb88:	ldr	x0, [sp, #40]
  42fb8c:	ldr	x0, [x0, #152]
  42fb90:	str	x0, [sp, #120]
  42fb94:	ldr	x0, [sp, #40]
  42fb98:	ldr	x0, [x0, #8]
  42fb9c:	str	x0, [sp, #160]
  42fba0:	ldr	x1, [sp, #24]
  42fba4:	ldr	x0, [sp, #40]
  42fba8:	bl	433758 <_obstack_memory_used@@Base+0x17578>
  42fbac:	str	x0, [sp, #112]
  42fbb0:	ldr	x0, [sp, #112]
  42fbb4:	cmn	x0, #0x1
  42fbb8:	b.eq	42fc14 <_obstack_memory_used@@Base+0x13a34>  // b.none
  42fbbc:	ldr	x0, [sp, #40]
  42fbc0:	ldr	x2, [x0, #216]
  42fbc4:	ldr	x1, [sp, #112]
  42fbc8:	mov	x0, x1
  42fbcc:	lsl	x0, x0, #2
  42fbd0:	add	x0, x0, x1
  42fbd4:	lsl	x0, x0, #3
  42fbd8:	add	x0, x2, x0
  42fbdc:	str	x0, [sp, #152]
  42fbe0:	ldr	x0, [sp, #152]
  42fbe4:	ldr	x0, [x0]
  42fbe8:	ldr	x1, [sp, #32]
  42fbec:	cmp	x1, x0
  42fbf0:	b.ne	42fbfc <_obstack_memory_used@@Base+0x13a1c>  // b.any
  42fbf4:	mov	w0, #0x0                   	// #0
  42fbf8:	b	430178 <_obstack_memory_used@@Base+0x13f98>
  42fbfc:	ldr	x0, [sp, #152]
  42fc00:	add	x1, x0, #0x28
  42fc04:	str	x1, [sp, #152]
  42fc08:	ldrb	w0, [x0, #32]
  42fc0c:	cmp	w0, #0x0
  42fc10:	b.ne	42fbe0 <_obstack_memory_used@@Base+0x13a00>  // b.any
  42fc14:	ldr	x0, [sp, #120]
  42fc18:	ldr	x1, [x0]
  42fc1c:	ldr	x0, [sp, #32]
  42fc20:	lsl	x0, x0, #4
  42fc24:	add	x0, x1, x0
  42fc28:	ldr	x0, [x0]
  42fc2c:	str	x0, [sp, #104]
  42fc30:	str	xzr, [sp, #168]
  42fc34:	b	430160 <_obstack_memory_used@@Base+0x13f80>
  42fc38:	ldr	x0, [sp, #40]
  42fc3c:	ldr	x1, [x0, #248]
  42fc40:	ldr	x0, [sp, #168]
  42fc44:	lsl	x0, x0, #3
  42fc48:	add	x0, x1, x0
  42fc4c:	ldr	x0, [x0]
  42fc50:	str	x0, [sp, #96]
  42fc54:	ldr	x0, [sp, #120]
  42fc58:	ldr	x1, [x0]
  42fc5c:	ldr	x0, [sp, #96]
  42fc60:	ldr	x0, [x0, #8]
  42fc64:	lsl	x0, x0, #4
  42fc68:	add	x0, x1, x0
  42fc6c:	ldr	x0, [x0]
  42fc70:	ldr	x1, [sp, #104]
  42fc74:	cmp	x1, x0
  42fc78:	b.ne	430138 <_obstack_memory_used@@Base+0x13f58>  // b.any
  42fc7c:	ldr	x0, [sp, #96]
  42fc80:	ldr	x0, [x0]
  42fc84:	str	x0, [sp, #136]
  42fc88:	ldr	x0, [sp, #24]
  42fc8c:	str	x0, [sp, #128]
  42fc90:	str	xzr, [sp, #144]
  42fc94:	b	42fe24 <_obstack_memory_used@@Base+0x13c44>
  42fc98:	ldr	x0, [sp, #96]
  42fc9c:	ldr	x1, [x0, #40]
  42fca0:	ldr	x0, [sp, #144]
  42fca4:	lsl	x0, x0, #3
  42fca8:	add	x0, x1, x0
  42fcac:	ldr	x0, [x0]
  42fcb0:	str	x0, [sp, #88]
  42fcb4:	ldr	x0, [sp, #88]
  42fcb8:	ldr	x1, [x0, #8]
  42fcbc:	ldr	x0, [sp, #136]
  42fcc0:	sub	x0, x1, x0
  42fcc4:	str	x0, [sp, #80]
  42fcc8:	ldr	x0, [sp, #80]
  42fccc:	cmp	x0, #0x0
  42fcd0:	b.le	42fd9c <_obstack_memory_used@@Base+0x13bbc>
  42fcd4:	ldr	x1, [sp, #128]
  42fcd8:	ldr	x0, [sp, #80]
  42fcdc:	add	x1, x1, x0
  42fce0:	ldr	x0, [sp, #40]
  42fce4:	ldr	x0, [x0, #48]
  42fce8:	cmp	x1, x0
  42fcec:	cset	w0, gt
  42fcf0:	and	w0, w0, #0xff
  42fcf4:	and	x0, x0, #0xff
  42fcf8:	cmp	x0, #0x0
  42fcfc:	b.eq	42fd68 <_obstack_memory_used@@Base+0x13b88>  // b.none
  42fd00:	ldr	x1, [sp, #128]
  42fd04:	ldr	x0, [sp, #80]
  42fd08:	add	x1, x1, x0
  42fd0c:	ldr	x0, [sp, #40]
  42fd10:	ldr	x0, [x0, #88]
  42fd14:	cmp	x1, x0
  42fd18:	b.gt	42fe3c <_obstack_memory_used@@Base+0x13c5c>
  42fd1c:	ldr	x1, [sp, #128]
  42fd20:	ldr	x0, [sp, #80]
  42fd24:	add	x0, x1, x0
  42fd28:	mov	x1, x0
  42fd2c:	ldr	x0, [sp, #40]
  42fd30:	bl	42d410 <_obstack_memory_used@@Base+0x11230>
  42fd34:	str	w0, [sp, #76]
  42fd38:	ldr	w0, [sp, #76]
  42fd3c:	cmp	w0, #0x0
  42fd40:	cset	w0, ne  // ne = any
  42fd44:	and	w0, w0, #0xff
  42fd48:	and	x0, x0, #0xff
  42fd4c:	cmp	x0, #0x0
  42fd50:	b.eq	42fd5c <_obstack_memory_used@@Base+0x13b7c>  // b.none
  42fd54:	ldr	w0, [sp, #76]
  42fd58:	b	430178 <_obstack_memory_used@@Base+0x13f98>
  42fd5c:	ldr	x0, [sp, #40]
  42fd60:	ldr	x0, [x0, #8]
  42fd64:	str	x0, [sp, #160]
  42fd68:	ldr	x0, [sp, #128]
  42fd6c:	ldr	x1, [sp, #160]
  42fd70:	add	x3, x1, x0
  42fd74:	ldr	x0, [sp, #136]
  42fd78:	ldr	x1, [sp, #160]
  42fd7c:	add	x0, x1, x0
  42fd80:	ldr	x1, [sp, #80]
  42fd84:	mov	x2, x1
  42fd88:	mov	x1, x0
  42fd8c:	mov	x0, x3
  42fd90:	bl	402b00 <memcmp@plt>
  42fd94:	cmp	w0, #0x0
  42fd98:	b.ne	42fe44 <_obstack_memory_used@@Base+0x13c64>  // b.any
  42fd9c:	ldr	x1, [sp, #128]
  42fda0:	ldr	x0, [sp, #80]
  42fda4:	add	x0, x1, x0
  42fda8:	str	x0, [sp, #128]
  42fdac:	ldr	x1, [sp, #136]
  42fdb0:	ldr	x0, [sp, #80]
  42fdb4:	add	x0, x1, x0
  42fdb8:	str	x0, [sp, #136]
  42fdbc:	ldr	x4, [sp, #24]
  42fdc0:	ldr	x3, [sp, #32]
  42fdc4:	ldr	x2, [sp, #88]
  42fdc8:	ldr	x1, [sp, #96]
  42fdcc:	ldr	x0, [sp, #40]
  42fdd0:	bl	430180 <_obstack_memory_used@@Base+0x13fa0>
  42fdd4:	str	w0, [sp, #76]
  42fdd8:	ldr	x0, [sp, #40]
  42fddc:	ldr	x0, [x0, #8]
  42fde0:	str	x0, [sp, #160]
  42fde4:	ldr	w0, [sp, #76]
  42fde8:	cmp	w0, #0x1
  42fdec:	b.eq	42fe14 <_obstack_memory_used@@Base+0x13c34>  // b.none
  42fdf0:	ldr	w0, [sp, #76]
  42fdf4:	cmp	w0, #0x0
  42fdf8:	cset	w0, ne  // ne = any
  42fdfc:	and	w0, w0, #0xff
  42fe00:	and	x0, x0, #0xff
  42fe04:	cmp	x0, #0x0
  42fe08:	b.eq	42fe18 <_obstack_memory_used@@Base+0x13c38>  // b.none
  42fe0c:	ldr	w0, [sp, #76]
  42fe10:	b	430178 <_obstack_memory_used@@Base+0x13f98>
  42fe14:	nop
  42fe18:	ldr	x0, [sp, #144]
  42fe1c:	add	x0, x0, #0x1
  42fe20:	str	x0, [sp, #144]
  42fe24:	ldr	x0, [sp, #96]
  42fe28:	ldr	x0, [x0, #32]
  42fe2c:	ldr	x1, [sp, #144]
  42fe30:	cmp	x1, x0
  42fe34:	b.lt	42fc98 <_obstack_memory_used@@Base+0x13ab8>  // b.tstop
  42fe38:	b	42fe48 <_obstack_memory_used@@Base+0x13c68>
  42fe3c:	nop
  42fe40:	b	42fe48 <_obstack_memory_used@@Base+0x13c68>
  42fe44:	nop
  42fe48:	ldr	x0, [sp, #96]
  42fe4c:	ldr	x0, [x0, #32]
  42fe50:	ldr	x1, [sp, #144]
  42fe54:	cmp	x1, x0
  42fe58:	b.lt	430140 <_obstack_memory_used@@Base+0x13f60>  // b.tstop
  42fe5c:	ldr	x0, [sp, #144]
  42fe60:	cmp	x0, #0x0
  42fe64:	b.le	430124 <_obstack_memory_used@@Base+0x13f44>
  42fe68:	ldr	x0, [sp, #136]
  42fe6c:	add	x0, x0, #0x1
  42fe70:	str	x0, [sp, #136]
  42fe74:	b	430124 <_obstack_memory_used@@Base+0x13f44>
  42fe78:	ldr	x0, [sp, #96]
  42fe7c:	ldr	x0, [x0]
  42fe80:	ldr	x1, [sp, #136]
  42fe84:	sub	x0, x1, x0
  42fe88:	str	x0, [sp, #64]
  42fe8c:	ldr	x0, [sp, #64]
  42fe90:	cmp	x0, #0x0
  42fe94:	b.le	42ff50 <_obstack_memory_used@@Base+0x13d70>
  42fe98:	ldr	x0, [sp, #40]
  42fe9c:	ldr	x0, [x0, #48]
  42fea0:	ldr	x1, [sp, #128]
  42fea4:	cmp	x1, x0
  42fea8:	cset	w0, ge  // ge = tcont
  42feac:	and	w0, w0, #0xff
  42feb0:	and	x0, x0, #0xff
  42feb4:	cmp	x0, #0x0
  42feb8:	b.eq	42ff18 <_obstack_memory_used@@Base+0x13d38>  // b.none
  42febc:	ldr	x0, [sp, #40]
  42fec0:	ldr	x0, [x0, #88]
  42fec4:	ldr	x1, [sp, #128]
  42fec8:	cmp	x1, x0
  42fecc:	b.ge	430148 <_obstack_memory_used@@Base+0x13f68>  // b.tcont
  42fed0:	ldr	x0, [sp, #128]
  42fed4:	add	w0, w0, #0x1
  42fed8:	mov	w1, w0
  42fedc:	ldr	x0, [sp, #40]
  42fee0:	bl	43301c <_obstack_memory_used@@Base+0x16e3c>
  42fee4:	str	w0, [sp, #76]
  42fee8:	ldr	w0, [sp, #76]
  42feec:	cmp	w0, #0x0
  42fef0:	cset	w0, ne  // ne = any
  42fef4:	and	w0, w0, #0xff
  42fef8:	and	x0, x0, #0xff
  42fefc:	cmp	x0, #0x0
  42ff00:	b.eq	42ff0c <_obstack_memory_used@@Base+0x13d2c>  // b.none
  42ff04:	ldr	w0, [sp, #76]
  42ff08:	b	430178 <_obstack_memory_used@@Base+0x13f98>
  42ff0c:	ldr	x0, [sp, #40]
  42ff10:	ldr	x0, [x0, #8]
  42ff14:	str	x0, [sp, #160]
  42ff18:	ldr	x0, [sp, #128]
  42ff1c:	add	x1, x0, #0x1
  42ff20:	str	x1, [sp, #128]
  42ff24:	mov	x1, x0
  42ff28:	ldr	x0, [sp, #160]
  42ff2c:	add	x0, x0, x1
  42ff30:	ldrb	w1, [x0]
  42ff34:	ldr	x0, [sp, #136]
  42ff38:	sub	x0, x0, #0x1
  42ff3c:	ldr	x2, [sp, #160]
  42ff40:	add	x0, x2, x0
  42ff44:	ldrb	w0, [x0]
  42ff48:	cmp	w1, w0
  42ff4c:	b.ne	430150 <_obstack_memory_used@@Base+0x13f70>  // b.any
  42ff50:	ldr	x0, [sp, #40]
  42ff54:	ldr	x1, [x0, #184]
  42ff58:	ldr	x0, [sp, #136]
  42ff5c:	lsl	x0, x0, #3
  42ff60:	add	x0, x1, x0
  42ff64:	ldr	x0, [x0]
  42ff68:	cmp	x0, #0x0
  42ff6c:	b.eq	4300fc <_obstack_memory_used@@Base+0x13f1c>  // b.none
  42ff70:	ldr	x0, [sp, #40]
  42ff74:	ldr	x1, [x0, #184]
  42ff78:	ldr	x0, [sp, #136]
  42ff7c:	lsl	x0, x0, #3
  42ff80:	add	x0, x1, x0
  42ff84:	ldr	x0, [x0]
  42ff88:	add	x0, x0, #0x8
  42ff8c:	str	x0, [sp, #56]
  42ff90:	mov	w3, #0x9                   	// #9
  42ff94:	ldr	x2, [sp, #104]
  42ff98:	ldr	x1, [sp, #56]
  42ff9c:	ldr	x0, [sp, #120]
  42ffa0:	bl	430268 <_obstack_memory_used@@Base+0x14088>
  42ffa4:	str	x0, [sp, #48]
  42ffa8:	ldr	x0, [sp, #48]
  42ffac:	cmn	x0, #0x1
  42ffb0:	b.eq	430104 <_obstack_memory_used@@Base+0x13f24>  // b.none
  42ffb4:	ldr	x0, [sp, #96]
  42ffb8:	ldr	x0, [x0, #16]
  42ffbc:	cmp	x0, #0x0
  42ffc0:	b.ne	430008 <_obstack_memory_used@@Base+0x13e28>  // b.any
  42ffc4:	ldr	x0, [sp, #96]
  42ffc8:	ldr	x0, [x0]
  42ffcc:	ldr	x1, [sp, #136]
  42ffd0:	sub	x0, x1, x0
  42ffd4:	add	x0, x0, #0x1
  42ffd8:	mov	x1, x0
  42ffdc:	mov	x0, #0x18                  	// #24
  42ffe0:	bl	4029c0 <calloc@plt>
  42ffe4:	mov	x1, x0
  42ffe8:	ldr	x0, [sp, #96]
  42ffec:	str	x1, [x0, #16]
  42fff0:	ldr	x0, [sp, #96]
  42fff4:	ldr	x0, [x0, #16]
  42fff8:	cmp	x0, #0x0
  42fffc:	b.ne	430008 <_obstack_memory_used@@Base+0x13e28>  // b.any
  430000:	mov	w0, #0xc                   	// #12
  430004:	b	430178 <_obstack_memory_used@@Base+0x13f98>
  430008:	ldr	x0, [sp, #96]
  43000c:	ldr	x1, [x0, #16]
  430010:	ldr	x0, [sp, #96]
  430014:	ldr	x2, [x0, #8]
  430018:	ldr	x0, [sp, #96]
  43001c:	ldr	x0, [x0]
  430020:	mov	w6, #0x9                   	// #9
  430024:	ldr	x5, [sp, #136]
  430028:	ldr	x4, [sp, #48]
  43002c:	mov	x3, x0
  430030:	ldr	x0, [sp, #40]
  430034:	bl	430318 <_obstack_memory_used@@Base+0x14138>
  430038:	str	w0, [sp, #76]
  43003c:	ldr	w0, [sp, #76]
  430040:	cmp	w0, #0x1
  430044:	b.eq	43010c <_obstack_memory_used@@Base+0x13f2c>  // b.none
  430048:	ldr	w0, [sp, #76]
  43004c:	cmp	w0, #0x0
  430050:	cset	w0, ne  // ne = any
  430054:	and	w0, w0, #0xff
  430058:	and	x0, x0, #0xff
  43005c:	cmp	x0, #0x0
  430060:	b.eq	43006c <_obstack_memory_used@@Base+0x13e8c>  // b.none
  430064:	ldr	w0, [sp, #76]
  430068:	b	430178 <_obstack_memory_used@@Base+0x13f98>
  43006c:	ldr	x2, [sp, #136]
  430070:	ldr	x1, [sp, #48]
  430074:	ldr	x0, [sp, #96]
  430078:	bl	4339d4 <_obstack_memory_used@@Base+0x177f4>
  43007c:	str	x0, [sp, #88]
  430080:	ldr	x0, [sp, #88]
  430084:	cmp	x0, #0x0
  430088:	cset	w0, eq  // eq = none
  43008c:	and	w0, w0, #0xff
  430090:	and	x0, x0, #0xff
  430094:	cmp	x0, #0x0
  430098:	b.eq	4300a4 <_obstack_memory_used@@Base+0x13ec4>  // b.none
  43009c:	mov	w0, #0xc                   	// #12
  4300a0:	b	430178 <_obstack_memory_used@@Base+0x13f98>
  4300a4:	ldr	x4, [sp, #24]
  4300a8:	ldr	x3, [sp, #32]
  4300ac:	ldr	x2, [sp, #88]
  4300b0:	ldr	x1, [sp, #96]
  4300b4:	ldr	x0, [sp, #40]
  4300b8:	bl	430180 <_obstack_memory_used@@Base+0x13fa0>
  4300bc:	str	w0, [sp, #76]
  4300c0:	ldr	x0, [sp, #40]
  4300c4:	ldr	x0, [x0, #8]
  4300c8:	str	x0, [sp, #160]
  4300cc:	ldr	w0, [sp, #76]
  4300d0:	cmp	w0, #0x1
  4300d4:	b.eq	430114 <_obstack_memory_used@@Base+0x13f34>  // b.none
  4300d8:	ldr	w0, [sp, #76]
  4300dc:	cmp	w0, #0x0
  4300e0:	cset	w0, ne  // ne = any
  4300e4:	and	w0, w0, #0xff
  4300e8:	and	x0, x0, #0xff
  4300ec:	cmp	x0, #0x0
  4300f0:	b.eq	430118 <_obstack_memory_used@@Base+0x13f38>  // b.none
  4300f4:	ldr	w0, [sp, #76]
  4300f8:	b	430178 <_obstack_memory_used@@Base+0x13f98>
  4300fc:	nop
  430100:	b	430118 <_obstack_memory_used@@Base+0x13f38>
  430104:	nop
  430108:	b	430118 <_obstack_memory_used@@Base+0x13f38>
  43010c:	nop
  430110:	b	430118 <_obstack_memory_used@@Base+0x13f38>
  430114:	nop
  430118:	ldr	x0, [sp, #136]
  43011c:	add	x0, x0, #0x1
  430120:	str	x0, [sp, #136]
  430124:	ldr	x1, [sp, #136]
  430128:	ldr	x0, [sp, #24]
  43012c:	cmp	x1, x0
  430130:	b.le	42fe78 <_obstack_memory_used@@Base+0x13c98>
  430134:	b	430154 <_obstack_memory_used@@Base+0x13f74>
  430138:	nop
  43013c:	b	430154 <_obstack_memory_used@@Base+0x13f74>
  430140:	nop
  430144:	b	430154 <_obstack_memory_used@@Base+0x13f74>
  430148:	nop
  43014c:	b	430154 <_obstack_memory_used@@Base+0x13f74>
  430150:	nop
  430154:	ldr	x0, [sp, #168]
  430158:	add	x0, x0, #0x1
  43015c:	str	x0, [sp, #168]
  430160:	ldr	x0, [sp, #40]
  430164:	ldr	x0, [x0, #232]
  430168:	ldr	x1, [sp, #168]
  43016c:	cmp	x1, x0
  430170:	b.lt	42fc38 <_obstack_memory_used@@Base+0x13a58>  // b.tstop
  430174:	mov	w0, #0x0                   	// #0
  430178:	ldp	x29, x30, [sp], #176
  43017c:	ret
  430180:	stp	x29, x30, [sp, #-80]!
  430184:	mov	x29, sp
  430188:	str	x0, [sp, #56]
  43018c:	str	x1, [sp, #48]
  430190:	str	x2, [sp, #40]
  430194:	str	x3, [sp, #32]
  430198:	str	x4, [sp, #24]
  43019c:	ldr	x0, [sp, #40]
  4301a0:	add	x1, x0, #0x10
  4301a4:	ldr	x0, [sp, #40]
  4301a8:	ldr	x2, [x0]
  4301ac:	ldr	x0, [sp, #40]
  4301b0:	ldr	x0, [x0, #8]
  4301b4:	mov	w6, #0x8                   	// #8
  4301b8:	ldr	x5, [sp, #24]
  4301bc:	ldr	x4, [sp, #32]
  4301c0:	mov	x3, x0
  4301c4:	ldr	x0, [sp, #56]
  4301c8:	bl	430318 <_obstack_memory_used@@Base+0x14138>
  4301cc:	str	w0, [sp, #76]
  4301d0:	ldr	w0, [sp, #76]
  4301d4:	cmp	w0, #0x0
  4301d8:	b.eq	4301e4 <_obstack_memory_used@@Base+0x14004>  // b.none
  4301dc:	ldr	w0, [sp, #76]
  4301e0:	b	430260 <_obstack_memory_used@@Base+0x14080>
  4301e4:	ldr	x0, [sp, #48]
  4301e8:	ldr	x1, [x0]
  4301ec:	ldr	x0, [sp, #40]
  4301f0:	ldr	x0, [x0, #8]
  4301f4:	mov	x4, x0
  4301f8:	mov	x3, x1
  4301fc:	ldr	x2, [sp, #24]
  430200:	ldr	x1, [sp, #32]
  430204:	ldr	x0, [sp, #56]
  430208:	bl	433440 <_obstack_memory_used@@Base+0x17260>
  43020c:	str	w0, [sp, #76]
  430210:	ldr	w0, [sp, #76]
  430214:	cmp	w0, #0x0
  430218:	cset	w0, ne  // ne = any
  43021c:	and	w0, w0, #0xff
  430220:	and	x0, x0, #0xff
  430224:	cmp	x0, #0x0
  430228:	b.eq	430234 <_obstack_memory_used@@Base+0x14054>  // b.none
  43022c:	ldr	w0, [sp, #76]
  430230:	b	430260 <_obstack_memory_used@@Base+0x14080>
  430234:	ldr	x0, [sp, #40]
  430238:	ldr	x1, [x0, #8]
  43023c:	ldr	x0, [sp, #24]
  430240:	add	x1, x1, x0
  430244:	ldr	x0, [sp, #48]
  430248:	ldr	x0, [x0]
  43024c:	sub	x0, x1, x0
  430250:	str	x0, [sp, #64]
  430254:	ldr	x1, [sp, #64]
  430258:	ldr	x0, [sp, #56]
  43025c:	bl	42d410 <_obstack_memory_used@@Base+0x11230>
  430260:	ldp	x29, x30, [sp], #80
  430264:	ret
  430268:	sub	sp, sp, #0x40
  43026c:	str	x0, [sp, #24]
  430270:	str	x1, [sp, #16]
  430274:	str	x2, [sp, #8]
  430278:	str	w3, [sp, #4]
  43027c:	str	xzr, [sp, #56]
  430280:	b	4302f8 <_obstack_memory_used@@Base+0x14118>
  430284:	ldr	x0, [sp, #16]
  430288:	ldr	x1, [x0, #16]
  43028c:	ldr	x0, [sp, #56]
  430290:	lsl	x0, x0, #3
  430294:	add	x0, x1, x0
  430298:	ldr	x0, [x0]
  43029c:	str	x0, [sp, #48]
  4302a0:	ldr	x0, [sp, #24]
  4302a4:	ldr	x1, [x0]
  4302a8:	ldr	x0, [sp, #48]
  4302ac:	lsl	x0, x0, #4
  4302b0:	add	x0, x1, x0
  4302b4:	str	x0, [sp, #40]
  4302b8:	ldr	x0, [sp, #40]
  4302bc:	ldrb	w0, [x0, #8]
  4302c0:	mov	w1, w0
  4302c4:	ldr	w0, [sp, #4]
  4302c8:	cmp	w0, w1
  4302cc:	b.ne	4302ec <_obstack_memory_used@@Base+0x1410c>  // b.any
  4302d0:	ldr	x0, [sp, #40]
  4302d4:	ldr	x0, [x0]
  4302d8:	ldr	x1, [sp, #8]
  4302dc:	cmp	x1, x0
  4302e0:	b.ne	4302ec <_obstack_memory_used@@Base+0x1410c>  // b.any
  4302e4:	ldr	x0, [sp, #48]
  4302e8:	b	430310 <_obstack_memory_used@@Base+0x14130>
  4302ec:	ldr	x0, [sp, #56]
  4302f0:	add	x0, x0, #0x1
  4302f4:	str	x0, [sp, #56]
  4302f8:	ldr	x0, [sp, #16]
  4302fc:	ldr	x0, [x0, #8]
  430300:	ldr	x1, [sp, #56]
  430304:	cmp	x1, x0
  430308:	b.lt	430284 <_obstack_memory_used@@Base+0x140a4>  // b.tstop
  43030c:	mov	x0, #0xffffffffffffffff    	// #-1
  430310:	add	sp, sp, #0x40
  430314:	ret
  430318:	stp	x29, x30, [sp, #-224]!
  43031c:	mov	x29, sp
  430320:	str	x0, [sp, #72]
  430324:	str	x1, [sp, #64]
  430328:	str	x2, [sp, #56]
  43032c:	str	x3, [sp, #48]
  430330:	str	x4, [sp, #40]
  430334:	str	x5, [sp, #32]
  430338:	str	w6, [sp, #28]
  43033c:	ldr	x0, [sp, #72]
  430340:	ldr	x0, [x0, #152]
  430344:	str	x0, [sp, #192]
  430348:	str	wzr, [sp, #116]
  43034c:	str	xzr, [sp, #200]
  430350:	ldr	x0, [sp, #192]
  430354:	ldr	x1, [x0]
  430358:	ldr	x0, [sp, #56]
  43035c:	lsl	x0, x0, #4
  430360:	add	x0, x1, x0
  430364:	ldr	x0, [x0]
  430368:	str	x0, [sp, #184]
  43036c:	ldr	x0, [sp, #72]
  430370:	ldr	w0, [x0, #224]
  430374:	sxtw	x1, w0
  430378:	ldr	x0, [sp, #32]
  43037c:	add	x1, x1, x0
  430380:	ldr	x0, [sp, #64]
  430384:	ldr	x0, [x0, #8]
  430388:	cmp	x1, x0
  43038c:	cset	w0, ge  // ge = tcont
  430390:	and	w0, w0, #0xff
  430394:	and	x0, x0, #0xff
  430398:	cmp	x0, #0x0
  43039c:	b.eq	4304c0 <_obstack_memory_used@@Base+0x142e0>  // b.none
  4303a0:	ldr	x0, [sp, #64]
  4303a4:	ldr	x0, [x0, #8]
  4303a8:	str	x0, [sp, #176]
  4303ac:	ldr	x0, [sp, #72]
  4303b0:	ldr	w0, [x0, #224]
  4303b4:	sxtw	x1, w0
  4303b8:	ldr	x0, [sp, #32]
  4303bc:	add	x0, x1, x0
  4303c0:	add	x0, x0, #0x1
  4303c4:	str	x0, [sp, #168]
  4303c8:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  4303cc:	ldr	x0, [sp, #176]
  4303d0:	sub	x0, x1, x0
  4303d4:	ldr	x1, [sp, #168]
  4303d8:	cmp	x1, x0
  4303dc:	cset	w0, gt
  4303e0:	and	w0, w0, #0xff
  4303e4:	and	x0, x0, #0xff
  4303e8:	cmp	x0, #0x0
  4303ec:	b.eq	4303f8 <_obstack_memory_used@@Base+0x14218>  // b.none
  4303f0:	mov	w0, #0xc                   	// #12
  4303f4:	b	430a78 <_obstack_memory_used@@Base+0x14898>
  4303f8:	ldr	x1, [sp, #176]
  4303fc:	ldr	x0, [sp, #168]
  430400:	add	x0, x1, x0
  430404:	str	x0, [sp, #160]
  430408:	ldr	x1, [sp, #160]
  43040c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  430410:	cmp	x1, x0
  430414:	cset	w0, hi  // hi = pmore
  430418:	and	w0, w0, #0xff
  43041c:	and	x0, x0, #0xff
  430420:	cmp	x0, #0x0
  430424:	b.eq	430430 <_obstack_memory_used@@Base+0x14250>  // b.none
  430428:	mov	w0, #0xc                   	// #12
  43042c:	b	430a78 <_obstack_memory_used@@Base+0x14898>
  430430:	ldr	x0, [sp, #64]
  430434:	ldr	x2, [x0, #16]
  430438:	ldr	x0, [sp, #160]
  43043c:	lsl	x0, x0, #3
  430440:	mov	x1, x0
  430444:	mov	x0, x2
  430448:	bl	4029e0 <realloc@plt>
  43044c:	str	x0, [sp, #152]
  430450:	ldr	x0, [sp, #152]
  430454:	cmp	x0, #0x0
  430458:	cset	w0, eq  // eq = none
  43045c:	and	w0, w0, #0xff
  430460:	and	x0, x0, #0xff
  430464:	cmp	x0, #0x0
  430468:	b.eq	430474 <_obstack_memory_used@@Base+0x14294>  // b.none
  43046c:	mov	w0, #0xc                   	// #12
  430470:	b	430a78 <_obstack_memory_used@@Base+0x14898>
  430474:	ldr	x0, [sp, #64]
  430478:	ldr	x1, [sp, #152]
  43047c:	str	x1, [x0, #16]
  430480:	ldr	x0, [sp, #64]
  430484:	ldr	x1, [sp, #160]
  430488:	str	x1, [x0, #8]
  43048c:	ldr	x0, [sp, #176]
  430490:	lsl	x0, x0, #3
  430494:	ldr	x1, [sp, #152]
  430498:	add	x3, x1, x0
  43049c:	ldr	x0, [sp, #64]
  4304a0:	ldr	x1, [x0, #8]
  4304a4:	ldr	x0, [sp, #176]
  4304a8:	sub	x0, x1, x0
  4304ac:	lsl	x0, x0, #3
  4304b0:	mov	x2, x0
  4304b4:	mov	w1, #0x0                   	// #0
  4304b8:	mov	x0, x3
  4304bc:	bl	402980 <memset@plt>
  4304c0:	ldr	x0, [sp, #64]
  4304c4:	ldr	x0, [x0]
  4304c8:	cmp	x0, #0x0
  4304cc:	b.eq	4304dc <_obstack_memory_used@@Base+0x142fc>  // b.none
  4304d0:	ldr	x0, [sp, #64]
  4304d4:	ldr	x0, [x0]
  4304d8:	b	4304e0 <_obstack_memory_used@@Base+0x14300>
  4304dc:	ldr	x0, [sp, #48]
  4304e0:	str	x0, [sp, #216]
  4304e4:	ldr	x0, [sp, #72]
  4304e8:	ldr	x0, [x0, #184]
  4304ec:	str	x0, [sp, #144]
  4304f0:	ldr	x0, [sp, #72]
  4304f4:	ldr	x0, [x0, #72]
  4304f8:	str	x0, [sp, #136]
  4304fc:	ldr	x0, [sp, #64]
  430500:	ldr	x1, [x0, #16]
  430504:	ldr	x0, [sp, #72]
  430508:	str	x1, [x0, #184]
  43050c:	ldr	x0, [sp, #72]
  430510:	ldr	x1, [sp, #216]
  430514:	str	x1, [x0, #72]
  430518:	ldr	x3, [sp, #72]
  43051c:	ldr	x0, [sp, #216]
  430520:	sub	x1, x0, #0x1
  430524:	ldr	x0, [sp, #72]
  430528:	ldr	w0, [x0, #160]
  43052c:	mov	w2, w0
  430530:	mov	x0, x3
  430534:	bl	41ee34 <_obstack_memory_used@@Base+0x2c54>
  430538:	str	w0, [sp, #132]
  43053c:	ldr	x1, [sp, #216]
  430540:	ldr	x0, [sp, #48]
  430544:	cmp	x1, x0
  430548:	b.ne	4305c8 <_obstack_memory_used@@Base+0x143e8>  // b.any
  43054c:	add	x0, sp, #0x58
  430550:	ldr	x1, [sp, #56]
  430554:	bl	41f080 <_obstack_memory_used@@Base+0x2ea0>
  430558:	str	w0, [sp, #116]
  43055c:	ldr	w0, [sp, #116]
  430560:	cmp	w0, #0x0
  430564:	cset	w0, ne  // ne = any
  430568:	and	w0, w0, #0xff
  43056c:	and	x0, x0, #0xff
  430570:	cmp	x0, #0x0
  430574:	b.eq	430580 <_obstack_memory_used@@Base+0x143a0>  // b.none
  430578:	ldr	w0, [sp, #116]
  43057c:	b	430a78 <_obstack_memory_used@@Base+0x14898>
  430580:	add	x0, sp, #0x58
  430584:	ldr	w3, [sp, #28]
  430588:	ldr	x2, [sp, #184]
  43058c:	mov	x1, x0
  430590:	ldr	x0, [sp, #192]
  430594:	bl	430d70 <_obstack_memory_used@@Base+0x14b90>
  430598:	str	w0, [sp, #116]
  43059c:	ldr	w0, [sp, #116]
  4305a0:	cmp	w0, #0x0
  4305a4:	cset	w0, ne  // ne = any
  4305a8:	and	w0, w0, #0xff
  4305ac:	and	x0, x0, #0xff
  4305b0:	cmp	x0, #0x0
  4305b4:	b.eq	430650 <_obstack_memory_used@@Base+0x14470>  // b.none
  4305b8:	ldr	x0, [sp, #104]
  4305bc:	bl	402b60 <free@plt>
  4305c0:	ldr	w0, [sp, #116]
  4305c4:	b	430a78 <_obstack_memory_used@@Base+0x14898>
  4305c8:	ldr	x0, [sp, #72]
  4305cc:	ldr	x1, [x0, #184]
  4305d0:	ldr	x0, [sp, #216]
  4305d4:	lsl	x0, x0, #3
  4305d8:	add	x0, x1, x0
  4305dc:	ldr	x0, [x0]
  4305e0:	str	x0, [sp, #200]
  4305e4:	ldr	x0, [sp, #200]
  4305e8:	cmp	x0, #0x0
  4305ec:	b.eq	430640 <_obstack_memory_used@@Base+0x14460>  // b.none
  4305f0:	ldr	x0, [sp, #200]
  4305f4:	ldrb	w0, [x0, #104]
  4305f8:	and	w0, w0, #0x40
  4305fc:	and	w0, w0, #0xff
  430600:	cmp	w0, #0x0
  430604:	b.eq	430640 <_obstack_memory_used@@Base+0x14460>  // b.none
  430608:	ldr	x0, [sp, #200]
  43060c:	add	x1, x0, #0x8
  430610:	add	x0, sp, #0x58
  430614:	bl	41f218 <_obstack_memory_used@@Base+0x3038>
  430618:	str	w0, [sp, #116]
  43061c:	ldr	w0, [sp, #116]
  430620:	cmp	w0, #0x0
  430624:	cset	w0, ne  // ne = any
  430628:	and	w0, w0, #0xff
  43062c:	and	x0, x0, #0xff
  430630:	cmp	x0, #0x0
  430634:	b.eq	430650 <_obstack_memory_used@@Base+0x14470>  // b.none
  430638:	ldr	w0, [sp, #116]
  43063c:	b	430a78 <_obstack_memory_used@@Base+0x14898>
  430640:	add	x0, sp, #0x58
  430644:	mov	x2, #0x18                  	// #24
  430648:	mov	w1, #0x0                   	// #0
  43064c:	bl	402980 <memset@plt>
  430650:	ldr	x1, [sp, #216]
  430654:	ldr	x0, [sp, #48]
  430658:	cmp	x1, x0
  43065c:	b.eq	430684 <_obstack_memory_used@@Base+0x144a4>  // b.none
  430660:	ldr	x0, [sp, #200]
  430664:	cmp	x0, #0x0
  430668:	b.eq	43075c <_obstack_memory_used@@Base+0x1457c>  // b.none
  43066c:	ldr	x0, [sp, #200]
  430670:	ldrb	w0, [x0, #104]
  430674:	and	w0, w0, #0x40
  430678:	and	w0, w0, #0xff
  43067c:	cmp	w0, #0x0
  430680:	b.eq	43075c <_obstack_memory_used@@Base+0x1457c>  // b.none
  430684:	ldr	x0, [sp, #96]
  430688:	cmp	x0, #0x0
  43068c:	b.eq	4306dc <_obstack_memory_used@@Base+0x144fc>  // b.none
  430690:	add	x0, sp, #0x58
  430694:	ldr	w4, [sp, #28]
  430698:	ldr	x3, [sp, #184]
  43069c:	ldr	x2, [sp, #216]
  4306a0:	mov	x1, x0
  4306a4:	ldr	x0, [sp, #72]
  4306a8:	bl	431114 <_obstack_memory_used@@Base+0x14f34>
  4306ac:	str	w0, [sp, #116]
  4306b0:	ldr	w0, [sp, #116]
  4306b4:	cmp	w0, #0x0
  4306b8:	cset	w0, ne  // ne = any
  4306bc:	and	w0, w0, #0xff
  4306c0:	and	x0, x0, #0xff
  4306c4:	cmp	x0, #0x0
  4306c8:	b.eq	4306dc <_obstack_memory_used@@Base+0x144fc>  // b.none
  4306cc:	ldr	x0, [sp, #104]
  4306d0:	bl	402b60 <free@plt>
  4306d4:	ldr	w0, [sp, #116]
  4306d8:	b	430a78 <_obstack_memory_used@@Base+0x14898>
  4306dc:	add	x1, sp, #0x58
  4306e0:	add	x0, sp, #0x74
  4306e4:	ldr	w3, [sp, #132]
  4306e8:	mov	x2, x1
  4306ec:	ldr	x1, [sp, #192]
  4306f0:	bl	420a10 <_obstack_memory_used@@Base+0x4830>
  4306f4:	str	x0, [sp, #200]
  4306f8:	ldr	x0, [sp, #200]
  4306fc:	cmp	x0, #0x0
  430700:	cset	w0, eq  // eq = none
  430704:	and	w0, w0, #0xff
  430708:	and	x0, x0, #0xff
  43070c:	cmp	x0, #0x0
  430710:	b.eq	430740 <_obstack_memory_used@@Base+0x14560>  // b.none
  430714:	ldr	w0, [sp, #116]
  430718:	cmp	w0, #0x0
  43071c:	cset	w0, ne  // ne = any
  430720:	and	w0, w0, #0xff
  430724:	and	x0, x0, #0xff
  430728:	cmp	x0, #0x0
  43072c:	b.eq	430740 <_obstack_memory_used@@Base+0x14560>  // b.none
  430730:	ldr	x0, [sp, #104]
  430734:	bl	402b60 <free@plt>
  430738:	ldr	w0, [sp, #116]
  43073c:	b	430a78 <_obstack_memory_used@@Base+0x14898>
  430740:	ldr	x0, [sp, #72]
  430744:	ldr	x1, [x0, #184]
  430748:	ldr	x0, [sp, #216]
  43074c:	lsl	x0, x0, #3
  430750:	add	x0, x1, x0
  430754:	ldr	x1, [sp, #200]
  430758:	str	x1, [x0]
  43075c:	str	xzr, [sp, #208]
  430760:	b	4309b0 <_obstack_memory_used@@Base+0x147d0>
  430764:	str	xzr, [sp, #96]
  430768:	ldr	x0, [sp, #72]
  43076c:	ldr	x1, [x0, #184]
  430770:	ldr	x0, [sp, #216]
  430774:	add	x0, x0, #0x1
  430778:	lsl	x0, x0, #3
  43077c:	add	x0, x1, x0
  430780:	ldr	x0, [x0]
  430784:	cmp	x0, #0x0
  430788:	b.eq	4307e4 <_obstack_memory_used@@Base+0x14604>  // b.none
  43078c:	ldr	x0, [sp, #72]
  430790:	ldr	x1, [x0, #184]
  430794:	ldr	x0, [sp, #216]
  430798:	add	x0, x0, #0x1
  43079c:	lsl	x0, x0, #3
  4307a0:	add	x0, x1, x0
  4307a4:	ldr	x0, [x0]
  4307a8:	add	x1, x0, #0x8
  4307ac:	add	x0, sp, #0x58
  4307b0:	bl	41fb00 <_obstack_memory_used@@Base+0x3920>
  4307b4:	str	w0, [sp, #116]
  4307b8:	ldr	w0, [sp, #116]
  4307bc:	cmp	w0, #0x0
  4307c0:	cset	w0, ne  // ne = any
  4307c4:	and	w0, w0, #0xff
  4307c8:	and	x0, x0, #0xff
  4307cc:	cmp	x0, #0x0
  4307d0:	b.eq	4307e4 <_obstack_memory_used@@Base+0x14604>  // b.none
  4307d4:	ldr	x0, [sp, #104]
  4307d8:	bl	402b60 <free@plt>
  4307dc:	ldr	w0, [sp, #116]
  4307e0:	b	430a78 <_obstack_memory_used@@Base+0x14898>
  4307e4:	ldr	x0, [sp, #200]
  4307e8:	cmp	x0, #0x0
  4307ec:	b.eq	430840 <_obstack_memory_used@@Base+0x14660>  // b.none
  4307f0:	ldr	x0, [sp, #200]
  4307f4:	add	x0, x0, #0x20
  4307f8:	add	x1, sp, #0x58
  4307fc:	mov	x3, x1
  430800:	mov	x2, x0
  430804:	ldr	x1, [sp, #216]
  430808:	ldr	x0, [sp, #72]
  43080c:	bl	430a80 <_obstack_memory_used@@Base+0x148a0>
  430810:	str	w0, [sp, #116]
  430814:	ldr	w0, [sp, #116]
  430818:	cmp	w0, #0x0
  43081c:	cset	w0, ne  // ne = any
  430820:	and	w0, w0, #0xff
  430824:	and	x0, x0, #0xff
  430828:	cmp	x0, #0x0
  43082c:	b.eq	430840 <_obstack_memory_used@@Base+0x14660>  // b.none
  430830:	ldr	x0, [sp, #104]
  430834:	bl	402b60 <free@plt>
  430838:	ldr	w0, [sp, #116]
  43083c:	b	430a78 <_obstack_memory_used@@Base+0x14898>
  430840:	ldr	x0, [sp, #216]
  430844:	add	x0, x0, #0x1
  430848:	str	x0, [sp, #216]
  43084c:	ldr	x0, [sp, #96]
  430850:	cmp	x0, #0x0
  430854:	b.eq	4308ec <_obstack_memory_used@@Base+0x1470c>  // b.none
  430858:	add	x0, sp, #0x58
  43085c:	ldr	w3, [sp, #28]
  430860:	ldr	x2, [sp, #184]
  430864:	mov	x1, x0
  430868:	ldr	x0, [sp, #192]
  43086c:	bl	430d70 <_obstack_memory_used@@Base+0x14b90>
  430870:	str	w0, [sp, #116]
  430874:	ldr	w0, [sp, #116]
  430878:	cmp	w0, #0x0
  43087c:	cset	w0, ne  // ne = any
  430880:	and	w0, w0, #0xff
  430884:	and	x0, x0, #0xff
  430888:	cmp	x0, #0x0
  43088c:	b.eq	4308a0 <_obstack_memory_used@@Base+0x146c0>  // b.none
  430890:	ldr	x0, [sp, #104]
  430894:	bl	402b60 <free@plt>
  430898:	ldr	w0, [sp, #116]
  43089c:	b	430a78 <_obstack_memory_used@@Base+0x14898>
  4308a0:	add	x0, sp, #0x58
  4308a4:	ldr	w4, [sp, #28]
  4308a8:	ldr	x3, [sp, #184]
  4308ac:	ldr	x2, [sp, #216]
  4308b0:	mov	x1, x0
  4308b4:	ldr	x0, [sp, #72]
  4308b8:	bl	431114 <_obstack_memory_used@@Base+0x14f34>
  4308bc:	str	w0, [sp, #116]
  4308c0:	ldr	w0, [sp, #116]
  4308c4:	cmp	w0, #0x0
  4308c8:	cset	w0, ne  // ne = any
  4308cc:	and	w0, w0, #0xff
  4308d0:	and	x0, x0, #0xff
  4308d4:	cmp	x0, #0x0
  4308d8:	b.eq	4308ec <_obstack_memory_used@@Base+0x1470c>  // b.none
  4308dc:	ldr	x0, [sp, #104]
  4308e0:	bl	402b60 <free@plt>
  4308e4:	ldr	w0, [sp, #116]
  4308e8:	b	430a78 <_obstack_memory_used@@Base+0x14898>
  4308ec:	ldr	x3, [sp, #72]
  4308f0:	ldr	x0, [sp, #216]
  4308f4:	sub	x1, x0, #0x1
  4308f8:	ldr	x0, [sp, #72]
  4308fc:	ldr	w0, [x0, #160]
  430900:	mov	w2, w0
  430904:	mov	x0, x3
  430908:	bl	41ee34 <_obstack_memory_used@@Base+0x2c54>
  43090c:	str	w0, [sp, #132]
  430910:	add	x1, sp, #0x58
  430914:	add	x0, sp, #0x74
  430918:	ldr	w3, [sp, #132]
  43091c:	mov	x2, x1
  430920:	ldr	x1, [sp, #192]
  430924:	bl	420a10 <_obstack_memory_used@@Base+0x4830>
  430928:	str	x0, [sp, #200]
  43092c:	ldr	x0, [sp, #200]
  430930:	cmp	x0, #0x0
  430934:	cset	w0, eq  // eq = none
  430938:	and	w0, w0, #0xff
  43093c:	and	x0, x0, #0xff
  430940:	cmp	x0, #0x0
  430944:	b.eq	430974 <_obstack_memory_used@@Base+0x14794>  // b.none
  430948:	ldr	w0, [sp, #116]
  43094c:	cmp	w0, #0x0
  430950:	cset	w0, ne  // ne = any
  430954:	and	w0, w0, #0xff
  430958:	and	x0, x0, #0xff
  43095c:	cmp	x0, #0x0
  430960:	b.eq	430974 <_obstack_memory_used@@Base+0x14794>  // b.none
  430964:	ldr	x0, [sp, #104]
  430968:	bl	402b60 <free@plt>
  43096c:	ldr	w0, [sp, #116]
  430970:	b	430a78 <_obstack_memory_used@@Base+0x14898>
  430974:	ldr	x0, [sp, #72]
  430978:	ldr	x1, [x0, #184]
  43097c:	ldr	x0, [sp, #216]
  430980:	lsl	x0, x0, #3
  430984:	add	x0, x1, x0
  430988:	ldr	x1, [sp, #200]
  43098c:	str	x1, [x0]
  430990:	ldr	x0, [sp, #200]
  430994:	cmp	x0, #0x0
  430998:	b.ne	4309a8 <_obstack_memory_used@@Base+0x147c8>  // b.any
  43099c:	ldr	x0, [sp, #208]
  4309a0:	add	x0, x0, #0x1
  4309a4:	b	4309ac <_obstack_memory_used@@Base+0x147cc>
  4309a8:	mov	x0, #0x0                   	// #0
  4309ac:	str	x0, [sp, #208]
  4309b0:	ldr	x1, [sp, #216]
  4309b4:	ldr	x0, [sp, #32]
  4309b8:	cmp	x1, x0
  4309bc:	b.ge	4309d8 <_obstack_memory_used@@Base+0x147f8>  // b.tcont
  4309c0:	ldr	x0, [sp, #72]
  4309c4:	ldr	w0, [x0, #224]
  4309c8:	sxtw	x0, w0
  4309cc:	ldr	x1, [sp, #208]
  4309d0:	cmp	x1, x0
  4309d4:	b.le	430764 <_obstack_memory_used@@Base+0x14584>
  4309d8:	ldr	x0, [sp, #104]
  4309dc:	bl	402b60 <free@plt>
  4309e0:	ldr	x0, [sp, #72]
  4309e4:	ldr	x1, [x0, #184]
  4309e8:	ldr	x0, [sp, #32]
  4309ec:	lsl	x0, x0, #3
  4309f0:	add	x0, x1, x0
  4309f4:	ldr	x0, [x0]
  4309f8:	cmp	x0, #0x0
  4309fc:	b.eq	430a20 <_obstack_memory_used@@Base+0x14840>  // b.none
  430a00:	ldr	x0, [sp, #72]
  430a04:	ldr	x1, [x0, #184]
  430a08:	ldr	x0, [sp, #32]
  430a0c:	lsl	x0, x0, #3
  430a10:	add	x0, x1, x0
  430a14:	ldr	x0, [x0]
  430a18:	add	x0, x0, #0x8
  430a1c:	b	430a24 <_obstack_memory_used@@Base+0x14844>
  430a20:	mov	x0, #0x0                   	// #0
  430a24:	str	x0, [sp, #120]
  430a28:	ldr	x0, [sp, #64]
  430a2c:	ldr	x1, [sp, #216]
  430a30:	str	x1, [x0]
  430a34:	ldr	x0, [sp, #72]
  430a38:	ldr	x1, [sp, #144]
  430a3c:	str	x1, [x0, #184]
  430a40:	ldr	x0, [sp, #72]
  430a44:	ldr	x1, [sp, #136]
  430a48:	str	x1, [x0, #72]
  430a4c:	ldr	x0, [sp, #120]
  430a50:	cmp	x0, #0x0
  430a54:	b.eq	430a74 <_obstack_memory_used@@Base+0x14894>  // b.none
  430a58:	ldr	x1, [sp, #40]
  430a5c:	ldr	x0, [sp, #120]
  430a60:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  430a64:	cmp	x0, #0x0
  430a68:	b.eq	430a74 <_obstack_memory_used@@Base+0x14894>  // b.none
  430a6c:	mov	w0, #0x0                   	// #0
  430a70:	b	430a78 <_obstack_memory_used@@Base+0x14898>
  430a74:	mov	w0, #0x1                   	// #1
  430a78:	ldp	x29, x30, [sp], #224
  430a7c:	ret
  430a80:	stp	x29, x30, [sp, #-160]!
  430a84:	mov	x29, sp
  430a88:	str	x19, [sp, #16]
  430a8c:	str	x0, [sp, #56]
  430a90:	str	x1, [sp, #48]
  430a94:	str	x2, [sp, #40]
  430a98:	str	x3, [sp, #32]
  430a9c:	ldr	x0, [sp, #56]
  430aa0:	ldr	x0, [x0, #152]
  430aa4:	str	x0, [sp, #136]
  430aa8:	str	wzr, [sp, #96]
  430aac:	add	x0, sp, #0x48
  430ab0:	mov	x2, #0x18                  	// #24
  430ab4:	mov	w1, #0x0                   	// #0
  430ab8:	bl	402980 <memset@plt>
  430abc:	str	xzr, [sp, #152]
  430ac0:	b	430d44 <_obstack_memory_used@@Base+0x14b64>
  430ac4:	str	wzr, [sp, #148]
  430ac8:	ldr	x0, [sp, #40]
  430acc:	ldr	x1, [x0, #16]
  430ad0:	ldr	x0, [sp, #152]
  430ad4:	lsl	x0, x0, #3
  430ad8:	add	x0, x1, x0
  430adc:	ldr	x0, [x0]
  430ae0:	str	x0, [sp, #128]
  430ae4:	ldr	x0, [sp, #136]
  430ae8:	ldr	x1, [x0]
  430aec:	ldr	x0, [sp, #128]
  430af0:	lsl	x0, x0, #4
  430af4:	add	x0, x1, x0
  430af8:	ldrb	w0, [x0, #8]
  430afc:	and	w0, w0, #0x8
  430b00:	cmp	w0, #0x0
  430b04:	ldr	x0, [sp, #136]
  430b08:	ldr	x1, [x0]
  430b0c:	ldr	x0, [sp, #128]
  430b10:	lsl	x0, x0, #4
  430b14:	add	x0, x1, x0
  430b18:	ldrb	w0, [x0, #10]
  430b1c:	and	w0, w0, #0x10
  430b20:	and	w0, w0, #0xff
  430b24:	cmp	w0, #0x0
  430b28:	b.eq	430cac <_obstack_memory_used@@Base+0x14acc>  // b.none
  430b2c:	ldr	x0, [sp, #56]
  430b30:	ldr	x3, [sp, #48]
  430b34:	mov	x2, x0
  430b38:	ldr	x1, [sp, #128]
  430b3c:	ldr	x0, [sp, #136]
  430b40:	bl	4328b0 <_obstack_memory_used@@Base+0x166d0>
  430b44:	str	w0, [sp, #148]
  430b48:	ldr	w0, [sp, #148]
  430b4c:	cmp	w0, #0x1
  430b50:	b.le	430cac <_obstack_memory_used@@Base+0x14acc>
  430b54:	ldr	x0, [sp, #136]
  430b58:	ldr	x1, [x0, #24]
  430b5c:	ldr	x0, [sp, #128]
  430b60:	lsl	x0, x0, #3
  430b64:	add	x0, x1, x0
  430b68:	ldr	x0, [x0]
  430b6c:	str	x0, [sp, #120]
  430b70:	ldrsw	x0, [sp, #148]
  430b74:	ldr	x1, [sp, #48]
  430b78:	add	x0, x1, x0
  430b7c:	str	x0, [sp, #112]
  430b80:	ldr	x0, [sp, #56]
  430b84:	ldr	x1, [x0, #184]
  430b88:	ldr	x0, [sp, #112]
  430b8c:	lsl	x0, x0, #3
  430b90:	add	x0, x1, x0
  430b94:	ldr	x0, [x0]
  430b98:	str	x0, [sp, #104]
  430b9c:	str	xzr, [sp, #80]
  430ba0:	ldr	x0, [sp, #104]
  430ba4:	cmp	x0, #0x0
  430ba8:	b.eq	430bec <_obstack_memory_used@@Base+0x14a0c>  // b.none
  430bac:	ldr	x0, [sp, #104]
  430bb0:	add	x1, x0, #0x8
  430bb4:	add	x0, sp, #0x48
  430bb8:	bl	41fb00 <_obstack_memory_used@@Base+0x3920>
  430bbc:	str	w0, [sp, #96]
  430bc0:	ldr	w0, [sp, #96]
  430bc4:	cmp	w0, #0x0
  430bc8:	cset	w0, ne  // ne = any
  430bcc:	and	w0, w0, #0xff
  430bd0:	and	x0, x0, #0xff
  430bd4:	cmp	x0, #0x0
  430bd8:	b.eq	430bec <_obstack_memory_used@@Base+0x14a0c>  // b.none
  430bdc:	ldr	x0, [sp, #88]
  430be0:	bl	402b60 <free@plt>
  430be4:	ldr	w0, [sp, #96]
  430be8:	b	430d64 <_obstack_memory_used@@Base+0x14b84>
  430bec:	add	x0, sp, #0x48
  430bf0:	ldr	x1, [sp, #120]
  430bf4:	bl	41ff4c <_obstack_memory_used@@Base+0x3d6c>
  430bf8:	strb	w0, [sp, #103]
  430bfc:	ldrb	w0, [sp, #103]
  430c00:	eor	w0, w0, #0x1
  430c04:	and	w0, w0, #0xff
  430c08:	and	x0, x0, #0xff
  430c0c:	cmp	x0, #0x0
  430c10:	b.eq	430c24 <_obstack_memory_used@@Base+0x14a44>  // b.none
  430c14:	ldr	x0, [sp, #88]
  430c18:	bl	402b60 <free@plt>
  430c1c:	mov	w0, #0xc                   	// #12
  430c20:	b	430d64 <_obstack_memory_used@@Base+0x14b84>
  430c24:	ldr	x0, [sp, #56]
  430c28:	ldr	x1, [x0, #184]
  430c2c:	ldr	x0, [sp, #112]
  430c30:	lsl	x0, x0, #3
  430c34:	add	x19, x1, x0
  430c38:	add	x1, sp, #0x48
  430c3c:	add	x0, sp, #0x60
  430c40:	mov	x2, x1
  430c44:	ldr	x1, [sp, #136]
  430c48:	bl	4208c4 <_obstack_memory_used@@Base+0x46e4>
  430c4c:	str	x0, [x19]
  430c50:	ldr	x0, [sp, #56]
  430c54:	ldr	x1, [x0, #184]
  430c58:	ldr	x0, [sp, #112]
  430c5c:	lsl	x0, x0, #3
  430c60:	add	x0, x1, x0
  430c64:	ldr	x0, [x0]
  430c68:	cmp	x0, #0x0
  430c6c:	cset	w0, eq  // eq = none
  430c70:	and	w0, w0, #0xff
  430c74:	and	x0, x0, #0xff
  430c78:	cmp	x0, #0x0
  430c7c:	b.eq	430cac <_obstack_memory_used@@Base+0x14acc>  // b.none
  430c80:	ldr	w0, [sp, #96]
  430c84:	cmp	w0, #0x0
  430c88:	cset	w0, ne  // ne = any
  430c8c:	and	w0, w0, #0xff
  430c90:	and	x0, x0, #0xff
  430c94:	cmp	x0, #0x0
  430c98:	b.eq	430cac <_obstack_memory_used@@Base+0x14acc>  // b.none
  430c9c:	ldr	x0, [sp, #88]
  430ca0:	bl	402b60 <free@plt>
  430ca4:	ldr	w0, [sp, #96]
  430ca8:	b	430d64 <_obstack_memory_used@@Base+0x14b84>
  430cac:	ldr	w0, [sp, #148]
  430cb0:	cmp	w0, #0x0
  430cb4:	b.ne	430ce8 <_obstack_memory_used@@Base+0x14b08>  // b.any
  430cb8:	ldr	x0, [sp, #136]
  430cbc:	ldr	x1, [x0]
  430cc0:	ldr	x0, [sp, #128]
  430cc4:	lsl	x0, x0, #4
  430cc8:	add	x0, x1, x0
  430ccc:	ldr	x2, [sp, #48]
  430cd0:	mov	x1, x0
  430cd4:	ldr	x0, [sp, #56]
  430cd8:	bl	432df4 <_obstack_memory_used@@Base+0x16c14>
  430cdc:	and	w0, w0, #0xff
  430ce0:	cmp	w0, #0x0
  430ce4:	b.eq	430d38 <_obstack_memory_used@@Base+0x14b58>  // b.none
  430ce8:	ldr	x0, [sp, #136]
  430cec:	ldr	x1, [x0, #24]
  430cf0:	ldr	x0, [sp, #128]
  430cf4:	lsl	x0, x0, #3
  430cf8:	add	x0, x1, x0
  430cfc:	ldr	x0, [x0]
  430d00:	mov	x1, x0
  430d04:	ldr	x0, [sp, #32]
  430d08:	bl	41ff4c <_obstack_memory_used@@Base+0x3d6c>
  430d0c:	strb	w0, [sp, #103]
  430d10:	ldrb	w0, [sp, #103]
  430d14:	eor	w0, w0, #0x1
  430d18:	and	w0, w0, #0xff
  430d1c:	and	x0, x0, #0xff
  430d20:	cmp	x0, #0x0
  430d24:	b.eq	430d38 <_obstack_memory_used@@Base+0x14b58>  // b.none
  430d28:	ldr	x0, [sp, #88]
  430d2c:	bl	402b60 <free@plt>
  430d30:	mov	w0, #0xc                   	// #12
  430d34:	b	430d64 <_obstack_memory_used@@Base+0x14b84>
  430d38:	ldr	x0, [sp, #152]
  430d3c:	add	x0, x0, #0x1
  430d40:	str	x0, [sp, #152]
  430d44:	ldr	x0, [sp, #40]
  430d48:	ldr	x0, [x0, #8]
  430d4c:	ldr	x1, [sp, #152]
  430d50:	cmp	x1, x0
  430d54:	b.lt	430ac4 <_obstack_memory_used@@Base+0x148e4>  // b.tstop
  430d58:	ldr	x0, [sp, #88]
  430d5c:	bl	402b60 <free@plt>
  430d60:	mov	w0, #0x0                   	// #0
  430d64:	ldr	x19, [sp, #16]
  430d68:	ldp	x29, x30, [sp], #160
  430d6c:	ret
  430d70:	stp	x29, x30, [sp, #-112]!
  430d74:	mov	x29, sp
  430d78:	str	x0, [sp, #40]
  430d7c:	str	x1, [sp, #32]
  430d80:	str	x2, [sp, #24]
  430d84:	str	w3, [sp, #20]
  430d88:	ldr	x0, [sp, #32]
  430d8c:	ldr	x0, [x0, #8]
  430d90:	cmp	x0, #0x0
  430d94:	ldr	x0, [sp, #32]
  430d98:	ldr	x1, [x0, #8]
  430d9c:	add	x0, sp, #0x30
  430da0:	bl	41f010 <_obstack_memory_used@@Base+0x2e30>
  430da4:	str	w0, [sp, #100]
  430da8:	ldr	w0, [sp, #100]
  430dac:	cmp	w0, #0x0
  430db0:	cset	w0, ne  // ne = any
  430db4:	and	w0, w0, #0xff
  430db8:	and	x0, x0, #0xff
  430dbc:	cmp	x0, #0x0
  430dc0:	b.eq	430dcc <_obstack_memory_used@@Base+0x14bec>  // b.none
  430dc4:	ldr	w0, [sp, #100]
  430dc8:	b	430f0c <_obstack_memory_used@@Base+0x14d2c>
  430dcc:	str	xzr, [sp, #104]
  430dd0:	b	430ecc <_obstack_memory_used@@Base+0x14cec>
  430dd4:	ldr	x0, [sp, #32]
  430dd8:	ldr	x1, [x0, #16]
  430ddc:	ldr	x0, [sp, #104]
  430de0:	lsl	x0, x0, #3
  430de4:	add	x0, x1, x0
  430de8:	ldr	x0, [x0]
  430dec:	str	x0, [sp, #88]
  430df0:	ldr	x0, [sp, #40]
  430df4:	ldr	x2, [x0, #48]
  430df8:	ldr	x1, [sp, #88]
  430dfc:	mov	x0, x1
  430e00:	lsl	x0, x0, #1
  430e04:	add	x0, x0, x1
  430e08:	lsl	x0, x0, #3
  430e0c:	add	x0, x2, x0
  430e10:	str	x0, [sp, #80]
  430e14:	ldr	w3, [sp, #20]
  430e18:	ldr	x2, [sp, #24]
  430e1c:	ldr	x1, [sp, #80]
  430e20:	ldr	x0, [sp, #40]
  430e24:	bl	430268 <_obstack_memory_used@@Base+0x14088>
  430e28:	str	x0, [sp, #72]
  430e2c:	ldr	x0, [sp, #72]
  430e30:	cmn	x0, #0x1
  430e34:	b.ne	430e74 <_obstack_memory_used@@Base+0x14c94>  // b.any
  430e38:	add	x0, sp, #0x30
  430e3c:	ldr	x1, [sp, #80]
  430e40:	bl	41fb00 <_obstack_memory_used@@Base+0x3920>
  430e44:	str	w0, [sp, #100]
  430e48:	ldr	w0, [sp, #100]
  430e4c:	cmp	w0, #0x0
  430e50:	cset	w0, ne  // ne = any
  430e54:	and	w0, w0, #0xff
  430e58:	and	x0, x0, #0xff
  430e5c:	cmp	x0, #0x0
  430e60:	b.eq	430ec0 <_obstack_memory_used@@Base+0x14ce0>  // b.none
  430e64:	ldr	x0, [sp, #64]
  430e68:	bl	402b60 <free@plt>
  430e6c:	ldr	w0, [sp, #100]
  430e70:	b	430f0c <_obstack_memory_used@@Base+0x14d2c>
  430e74:	add	x0, sp, #0x30
  430e78:	ldr	w4, [sp, #20]
  430e7c:	ldr	x3, [sp, #24]
  430e80:	ldr	x2, [sp, #88]
  430e84:	mov	x1, x0
  430e88:	ldr	x0, [sp, #40]
  430e8c:	bl	430f14 <_obstack_memory_used@@Base+0x14d34>
  430e90:	str	w0, [sp, #100]
  430e94:	ldr	w0, [sp, #100]
  430e98:	cmp	w0, #0x0
  430e9c:	cset	w0, ne  // ne = any
  430ea0:	and	w0, w0, #0xff
  430ea4:	and	x0, x0, #0xff
  430ea8:	cmp	x0, #0x0
  430eac:	b.eq	430ec0 <_obstack_memory_used@@Base+0x14ce0>  // b.none
  430eb0:	ldr	x0, [sp, #64]
  430eb4:	bl	402b60 <free@plt>
  430eb8:	ldr	w0, [sp, #100]
  430ebc:	b	430f0c <_obstack_memory_used@@Base+0x14d2c>
  430ec0:	ldr	x0, [sp, #104]
  430ec4:	add	x0, x0, #0x1
  430ec8:	str	x0, [sp, #104]
  430ecc:	ldr	x0, [sp, #32]
  430ed0:	ldr	x0, [x0, #8]
  430ed4:	ldr	x1, [sp, #104]
  430ed8:	cmp	x1, x0
  430edc:	b.lt	430dd4 <_obstack_memory_used@@Base+0x14bf4>  // b.tstop
  430ee0:	ldr	x0, [sp, #32]
  430ee4:	ldr	x0, [x0, #16]
  430ee8:	bl	402b60 <free@plt>
  430eec:	ldr	x0, [sp, #32]
  430ef0:	mov	x3, x0
  430ef4:	add	x2, sp, #0x30
  430ef8:	ldp	x0, x1, [x2]
  430efc:	stp	x0, x1, [x3]
  430f00:	ldr	x0, [x2, #16]
  430f04:	str	x0, [x3, #16]
  430f08:	mov	w0, #0x0                   	// #0
  430f0c:	ldp	x29, x30, [sp], #112
  430f10:	ret
  430f14:	stp	x29, x30, [sp, #-80]!
  430f18:	mov	x29, sp
  430f1c:	str	x0, [sp, #56]
  430f20:	str	x1, [sp, #48]
  430f24:	str	x2, [sp, #40]
  430f28:	str	x3, [sp, #32]
  430f2c:	str	w4, [sp, #28]
  430f30:	ldr	x0, [sp, #40]
  430f34:	str	x0, [sp, #72]
  430f38:	b	4310e4 <_obstack_memory_used@@Base+0x14f04>
  430f3c:	ldr	x0, [sp, #56]
  430f40:	ldr	x1, [x0]
  430f44:	ldr	x0, [sp, #72]
  430f48:	lsl	x0, x0, #4
  430f4c:	add	x0, x1, x0
  430f50:	ldrb	w0, [x0, #8]
  430f54:	mov	w1, w0
  430f58:	ldr	w0, [sp, #28]
  430f5c:	cmp	w0, w1
  430f60:	b.ne	430fc4 <_obstack_memory_used@@Base+0x14de4>  // b.any
  430f64:	ldr	x0, [sp, #56]
  430f68:	ldr	x1, [x0]
  430f6c:	ldr	x0, [sp, #72]
  430f70:	lsl	x0, x0, #4
  430f74:	add	x0, x1, x0
  430f78:	ldr	x0, [x0]
  430f7c:	ldr	x1, [sp, #32]
  430f80:	cmp	x1, x0
  430f84:	b.ne	430fc4 <_obstack_memory_used@@Base+0x14de4>  // b.any
  430f88:	ldr	w0, [sp, #28]
  430f8c:	cmp	w0, #0x9
  430f90:	b.ne	4310fc <_obstack_memory_used@@Base+0x14f1c>  // b.any
  430f94:	ldr	x1, [sp, #72]
  430f98:	ldr	x0, [sp, #48]
  430f9c:	bl	41ff4c <_obstack_memory_used@@Base+0x3d6c>
  430fa0:	strb	w0, [sp, #71]
  430fa4:	ldrb	w0, [sp, #71]
  430fa8:	eor	w0, w0, #0x1
  430fac:	and	w0, w0, #0xff
  430fb0:	and	x0, x0, #0xff
  430fb4:	cmp	x0, #0x0
  430fb8:	b.eq	4310fc <_obstack_memory_used@@Base+0x14f1c>  // b.none
  430fbc:	mov	w0, #0xc                   	// #12
  430fc0:	b	43110c <_obstack_memory_used@@Base+0x14f2c>
  430fc4:	ldr	x1, [sp, #72]
  430fc8:	ldr	x0, [sp, #48]
  430fcc:	bl	41ff4c <_obstack_memory_used@@Base+0x3d6c>
  430fd0:	strb	w0, [sp, #71]
  430fd4:	ldrb	w0, [sp, #71]
  430fd8:	eor	w0, w0, #0x1
  430fdc:	and	w0, w0, #0xff
  430fe0:	and	x0, x0, #0xff
  430fe4:	cmp	x0, #0x0
  430fe8:	b.eq	430ff4 <_obstack_memory_used@@Base+0x14e14>  // b.none
  430fec:	mov	w0, #0xc                   	// #12
  430ff0:	b	43110c <_obstack_memory_used@@Base+0x14f2c>
  430ff4:	ldr	x0, [sp, #56]
  430ff8:	ldr	x2, [x0, #40]
  430ffc:	ldr	x1, [sp, #72]
  431000:	mov	x0, x1
  431004:	lsl	x0, x0, #1
  431008:	add	x0, x0, x1
  43100c:	lsl	x0, x0, #3
  431010:	add	x0, x2, x0
  431014:	ldr	x0, [x0, #8]
  431018:	cmp	x0, #0x0
  43101c:	b.eq	431104 <_obstack_memory_used@@Base+0x14f24>  // b.none
  431020:	ldr	x0, [sp, #56]
  431024:	ldr	x2, [x0, #40]
  431028:	ldr	x1, [sp, #72]
  43102c:	mov	x0, x1
  431030:	lsl	x0, x0, #1
  431034:	add	x0, x0, x1
  431038:	lsl	x0, x0, #3
  43103c:	add	x0, x2, x0
  431040:	ldr	x0, [x0, #8]
  431044:	cmp	x0, #0x2
  431048:	b.ne	4310b8 <_obstack_memory_used@@Base+0x14ed8>  // b.any
  43104c:	ldr	x0, [sp, #56]
  431050:	ldr	x2, [x0, #40]
  431054:	ldr	x1, [sp, #72]
  431058:	mov	x0, x1
  43105c:	lsl	x0, x0, #1
  431060:	add	x0, x0, x1
  431064:	lsl	x0, x0, #3
  431068:	add	x0, x2, x0
  43106c:	ldr	x0, [x0, #16]
  431070:	add	x0, x0, #0x8
  431074:	ldr	x0, [x0]
  431078:	ldr	w4, [sp, #28]
  43107c:	ldr	x3, [sp, #32]
  431080:	mov	x2, x0
  431084:	ldr	x1, [sp, #48]
  431088:	ldr	x0, [sp, #56]
  43108c:	bl	430f14 <_obstack_memory_used@@Base+0x14d34>
  431090:	str	w0, [sp, #64]
  431094:	ldr	w0, [sp, #64]
  431098:	cmp	w0, #0x0
  43109c:	cset	w0, ne  // ne = any
  4310a0:	and	w0, w0, #0xff
  4310a4:	and	x0, x0, #0xff
  4310a8:	cmp	x0, #0x0
  4310ac:	b.eq	4310b8 <_obstack_memory_used@@Base+0x14ed8>  // b.none
  4310b0:	ldr	w0, [sp, #64]
  4310b4:	b	43110c <_obstack_memory_used@@Base+0x14f2c>
  4310b8:	ldr	x0, [sp, #56]
  4310bc:	ldr	x2, [x0, #40]
  4310c0:	ldr	x1, [sp, #72]
  4310c4:	mov	x0, x1
  4310c8:	lsl	x0, x0, #1
  4310cc:	add	x0, x0, x1
  4310d0:	lsl	x0, x0, #3
  4310d4:	add	x0, x2, x0
  4310d8:	ldr	x0, [x0, #16]
  4310dc:	ldr	x0, [x0]
  4310e0:	str	x0, [sp, #72]
  4310e4:	ldr	x1, [sp, #72]
  4310e8:	ldr	x0, [sp, #48]
  4310ec:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  4310f0:	cmp	x0, #0x0
  4310f4:	b.eq	430f3c <_obstack_memory_used@@Base+0x14d5c>  // b.none
  4310f8:	b	431108 <_obstack_memory_used@@Base+0x14f28>
  4310fc:	nop
  431100:	b	431108 <_obstack_memory_used@@Base+0x14f28>
  431104:	nop
  431108:	mov	w0, #0x0                   	// #0
  43110c:	ldp	x29, x30, [sp], #80
  431110:	ret
  431114:	stp	x29, x30, [sp, #-192]!
  431118:	mov	x29, sp
  43111c:	str	x19, [sp, #16]
  431120:	str	x0, [sp, #72]
  431124:	str	x1, [sp, #64]
  431128:	str	x2, [sp, #56]
  43112c:	str	x3, [sp, #48]
  431130:	str	w4, [sp, #44]
  431134:	ldr	x0, [sp, #72]
  431138:	ldr	x0, [x0, #152]
  43113c:	str	x0, [sp, #176]
  431140:	ldr	x1, [sp, #56]
  431144:	ldr	x0, [sp, #72]
  431148:	bl	433758 <_obstack_memory_used@@Base+0x17578>
  43114c:	str	x0, [sp, #168]
  431150:	ldr	x0, [sp, #168]
  431154:	cmn	x0, #0x1
  431158:	b.ne	431164 <_obstack_memory_used@@Base+0x14f84>  // b.any
  43115c:	mov	w0, #0x0                   	// #0
  431160:	b	4314f8 <_obstack_memory_used@@Base+0x15318>
  431164:	nop
  431168:	ldr	x0, [sp, #72]
  43116c:	ldr	x2, [x0, #216]
  431170:	ldr	x1, [sp, #168]
  431174:	mov	x0, x1
  431178:	lsl	x0, x0, #2
  43117c:	add	x0, x0, x1
  431180:	lsl	x0, x0, #3
  431184:	add	x0, x2, x0
  431188:	str	x0, [sp, #184]
  43118c:	ldr	x0, [sp, #184]
  431190:	ldr	x0, [x0]
  431194:	mov	x1, x0
  431198:	ldr	x0, [sp, #64]
  43119c:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  4311a0:	cmp	x0, #0x0
  4311a4:	b.eq	4314c8 <_obstack_memory_used@@Base+0x152e8>  // b.none
  4311a8:	ldr	x0, [sp, #184]
  4311ac:	ldr	x1, [x0, #24]
  4311b0:	ldr	x0, [sp, #56]
  4311b4:	add	x1, x1, x0
  4311b8:	ldr	x0, [sp, #184]
  4311bc:	ldr	x0, [x0, #16]
  4311c0:	sub	x0, x1, x0
  4311c4:	str	x0, [sp, #160]
  4311c8:	ldr	x1, [sp, #160]
  4311cc:	ldr	x0, [sp, #56]
  4311d0:	cmp	x1, x0
  4311d4:	b.ne	431308 <_obstack_memory_used@@Base+0x15128>  // b.any
  4311d8:	ldr	x0, [sp, #176]
  4311dc:	ldr	x1, [x0, #40]
  4311e0:	ldr	x0, [sp, #184]
  4311e4:	ldr	x0, [x0]
  4311e8:	mov	x2, x0
  4311ec:	mov	x0, x2
  4311f0:	lsl	x0, x0, #1
  4311f4:	add	x0, x0, x2
  4311f8:	lsl	x0, x0, #3
  4311fc:	add	x0, x1, x0
  431200:	ldr	x0, [x0, #16]
  431204:	ldr	x0, [x0]
  431208:	str	x0, [sp, #152]
  43120c:	ldr	x1, [sp, #152]
  431210:	ldr	x0, [sp, #64]
  431214:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  431218:	cmp	x0, #0x0
  43121c:	b.ne	4314d0 <_obstack_memory_used@@Base+0x152f0>  // b.any
  431220:	add	x0, sp, #0x70
  431224:	ldr	x1, [sp, #152]
  431228:	bl	41f080 <_obstack_memory_used@@Base+0x2ea0>
  43122c:	str	w0, [sp, #136]
  431230:	add	x0, sp, #0x70
  431234:	ldr	w3, [sp, #44]
  431238:	ldr	x2, [sp, #48]
  43123c:	mov	x1, x0
  431240:	ldr	x0, [sp, #176]
  431244:	bl	430d70 <_obstack_memory_used@@Base+0x14b90>
  431248:	str	w0, [sp, #144]
  43124c:	add	x0, sp, #0x70
  431250:	mov	x1, x0
  431254:	ldr	x0, [sp, #64]
  431258:	bl	41fb00 <_obstack_memory_used@@Base+0x3920>
  43125c:	str	w0, [sp, #140]
  431260:	ldr	x0, [sp, #128]
  431264:	bl	402b60 <free@plt>
  431268:	ldr	w0, [sp, #136]
  43126c:	cmp	w0, #0x0
  431270:	cset	w0, ne  // ne = any
  431274:	and	w0, w0, #0xff
  431278:	and	x0, x0, #0xff
  43127c:	cmp	x0, #0x0
  431280:	b.ne	4312a0 <_obstack_memory_used@@Base+0x150c0>  // b.any
  431284:	ldr	w0, [sp, #144]
  431288:	cmp	w0, #0x0
  43128c:	cset	w0, ne  // ne = any
  431290:	and	w0, w0, #0xff
  431294:	and	x0, x0, #0xff
  431298:	cmp	x0, #0x0
  43129c:	b.eq	4312a8 <_obstack_memory_used@@Base+0x150c8>  // b.none
  4312a0:	mov	w0, #0x1                   	// #1
  4312a4:	b	4312ac <_obstack_memory_used@@Base+0x150cc>
  4312a8:	mov	w0, #0x0                   	// #0
  4312ac:	cmp	w0, #0x0
  4312b0:	b.ne	4312d0 <_obstack_memory_used@@Base+0x150f0>  // b.any
  4312b4:	ldr	w0, [sp, #140]
  4312b8:	cmp	w0, #0x0
  4312bc:	cset	w0, ne  // ne = any
  4312c0:	and	w0, w0, #0xff
  4312c4:	and	x0, x0, #0xff
  4312c8:	cmp	x0, #0x0
  4312cc:	b.eq	431168 <_obstack_memory_used@@Base+0x14f88>  // b.none
  4312d0:	ldr	w0, [sp, #136]
  4312d4:	cmp	w0, #0x0
  4312d8:	b.ne	4312f8 <_obstack_memory_used@@Base+0x15118>  // b.any
  4312dc:	ldr	w0, [sp, #144]
  4312e0:	cmp	w0, #0x0
  4312e4:	b.eq	4312f0 <_obstack_memory_used@@Base+0x15110>  // b.none
  4312e8:	ldr	w0, [sp, #144]
  4312ec:	b	4312fc <_obstack_memory_used@@Base+0x1511c>
  4312f0:	ldr	w0, [sp, #140]
  4312f4:	b	4312fc <_obstack_memory_used@@Base+0x1511c>
  4312f8:	ldr	w0, [sp, #136]
  4312fc:	str	w0, [sp, #136]
  431300:	ldr	w0, [sp, #136]
  431304:	b	4314f8 <_obstack_memory_used@@Base+0x15318>
  431308:	ldr	x0, [sp, #176]
  43130c:	ldr	x1, [x0, #24]
  431310:	ldr	x0, [sp, #184]
  431314:	ldr	x0, [x0]
  431318:	lsl	x0, x0, #3
  43131c:	add	x0, x1, x0
  431320:	ldr	x0, [x0]
  431324:	str	x0, [sp, #152]
  431328:	ldr	x0, [sp, #72]
  43132c:	ldr	x1, [x0, #184]
  431330:	ldr	x0, [sp, #160]
  431334:	lsl	x0, x0, #3
  431338:	add	x0, x1, x0
  43133c:	ldr	x0, [x0]
  431340:	cmp	x0, #0x0
  431344:	b.eq	43140c <_obstack_memory_used@@Base+0x1522c>  // b.none
  431348:	ldr	x0, [sp, #72]
  43134c:	ldr	x1, [x0, #184]
  431350:	ldr	x0, [sp, #160]
  431354:	lsl	x0, x0, #3
  431358:	add	x0, x1, x0
  43135c:	ldr	x0, [x0]
  431360:	add	x0, x0, #0x8
  431364:	ldr	x1, [sp, #152]
  431368:	bl	420304 <_obstack_memory_used@@Base+0x4124>
  43136c:	cmp	x0, #0x0
  431370:	b.ne	4314d8 <_obstack_memory_used@@Base+0x152f8>  // b.any
  431374:	ldr	x0, [sp, #72]
  431378:	ldr	x1, [x0, #184]
  43137c:	ldr	x0, [sp, #160]
  431380:	lsl	x0, x0, #3
  431384:	add	x0, x1, x0
  431388:	ldr	x0, [x0]
  43138c:	add	x1, x0, #0x8
  431390:	add	x0, sp, #0x58
  431394:	bl	41f218 <_obstack_memory_used@@Base+0x3038>
  431398:	str	w0, [sp, #136]
  43139c:	add	x0, sp, #0x58
  4313a0:	ldr	x1, [sp, #152]
  4313a4:	bl	41ff4c <_obstack_memory_used@@Base+0x3d6c>
  4313a8:	strb	w0, [sp, #151]
  4313ac:	ldr	w0, [sp, #136]
  4313b0:	cmp	w0, #0x0
  4313b4:	cset	w0, ne  // ne = any
  4313b8:	and	w0, w0, #0xff
  4313bc:	and	x0, x0, #0xff
  4313c0:	cmp	x0, #0x0
  4313c4:	b.ne	4313e0 <_obstack_memory_used@@Base+0x15200>  // b.any
  4313c8:	ldrb	w0, [sp, #151]
  4313cc:	eor	w0, w0, #0x1
  4313d0:	and	w0, w0, #0xff
  4313d4:	and	x0, x0, #0xff
  4313d8:	cmp	x0, #0x0
  4313dc:	b.eq	431440 <_obstack_memory_used@@Base+0x15260>  // b.none
  4313e0:	ldr	x0, [sp, #104]
  4313e4:	bl	402b60 <free@plt>
  4313e8:	ldr	w0, [sp, #136]
  4313ec:	cmp	w0, #0x0
  4313f0:	b.eq	4313fc <_obstack_memory_used@@Base+0x1521c>  // b.none
  4313f4:	ldr	w0, [sp, #136]
  4313f8:	b	431400 <_obstack_memory_used@@Base+0x15220>
  4313fc:	mov	w0, #0xc                   	// #12
  431400:	str	w0, [sp, #136]
  431404:	ldr	w0, [sp, #136]
  431408:	b	4314f8 <_obstack_memory_used@@Base+0x15318>
  43140c:	add	x0, sp, #0x58
  431410:	ldr	x1, [sp, #152]
  431414:	bl	41f080 <_obstack_memory_used@@Base+0x2ea0>
  431418:	str	w0, [sp, #136]
  43141c:	ldr	w0, [sp, #136]
  431420:	cmp	w0, #0x0
  431424:	cset	w0, ne  // ne = any
  431428:	and	w0, w0, #0xff
  43142c:	and	x0, x0, #0xff
  431430:	cmp	x0, #0x0
  431434:	b.eq	431440 <_obstack_memory_used@@Base+0x15260>  // b.none
  431438:	ldr	w0, [sp, #136]
  43143c:	b	4314f8 <_obstack_memory_used@@Base+0x15318>
  431440:	ldr	x0, [sp, #72]
  431444:	ldr	x1, [x0, #184]
  431448:	ldr	x0, [sp, #160]
  43144c:	lsl	x0, x0, #3
  431450:	add	x19, x1, x0
  431454:	add	x1, sp, #0x58
  431458:	add	x0, sp, #0x88
  43145c:	mov	x2, x1
  431460:	ldr	x1, [sp, #176]
  431464:	bl	4208c4 <_obstack_memory_used@@Base+0x46e4>
  431468:	str	x0, [x19]
  43146c:	ldr	x0, [sp, #104]
  431470:	bl	402b60 <free@plt>
  431474:	ldr	x0, [sp, #72]
  431478:	ldr	x1, [x0, #184]
  43147c:	ldr	x0, [sp, #160]
  431480:	lsl	x0, x0, #3
  431484:	add	x0, x1, x0
  431488:	ldr	x0, [x0]
  43148c:	cmp	x0, #0x0
  431490:	cset	w0, eq  // eq = none
  431494:	and	w0, w0, #0xff
  431498:	and	x0, x0, #0xff
  43149c:	cmp	x0, #0x0
  4314a0:	b.eq	4314dc <_obstack_memory_used@@Base+0x152fc>  // b.none
  4314a4:	ldr	w0, [sp, #136]
  4314a8:	cmp	w0, #0x0
  4314ac:	cset	w0, ne  // ne = any
  4314b0:	and	w0, w0, #0xff
  4314b4:	and	x0, x0, #0xff
  4314b8:	cmp	x0, #0x0
  4314bc:	b.eq	4314dc <_obstack_memory_used@@Base+0x152fc>  // b.none
  4314c0:	ldr	w0, [sp, #136]
  4314c4:	b	4314f8 <_obstack_memory_used@@Base+0x15318>
  4314c8:	nop
  4314cc:	b	4314dc <_obstack_memory_used@@Base+0x152fc>
  4314d0:	nop
  4314d4:	b	4314dc <_obstack_memory_used@@Base+0x152fc>
  4314d8:	nop
  4314dc:	ldr	x0, [sp, #184]
  4314e0:	add	x1, x0, #0x28
  4314e4:	str	x1, [sp, #184]
  4314e8:	ldrb	w0, [x0, #32]
  4314ec:	cmp	w0, #0x0
  4314f0:	b.ne	43118c <_obstack_memory_used@@Base+0x14fac>  // b.any
  4314f4:	mov	w0, #0x0                   	// #0
  4314f8:	ldr	x19, [sp, #16]
  4314fc:	ldp	x29, x30, [sp], #192
  431500:	ret
  431504:	stp	x29, x30, [sp, #-256]!
  431508:	mov	x29, sp
  43150c:	str	x19, [sp, #16]
  431510:	str	x0, [x29, #40]
  431514:	str	x1, [x29, #32]
  431518:	strb	wzr, [x29, #235]
  43151c:	strb	wzr, [x29, #191]
  431520:	strb	wzr, [x29, #215]
  431524:	str	xzr, [x29, #192]
  431528:	mov	x0, #0x3800                	// #14336
  43152c:	bl	4028b0 <malloc@plt>
  431530:	str	x0, [x29, #176]
  431534:	ldr	x0, [x29, #176]
  431538:	cmp	x0, #0x0
  43153c:	cset	w0, eq  // eq = none
  431540:	and	w0, w0, #0xff
  431544:	and	x0, x0, #0xff
  431548:	cmp	x0, #0x0
  43154c:	b.eq	431558 <_obstack_memory_used@@Base+0x15378>  // b.none
  431550:	mov	w0, #0x0                   	// #0
  431554:	b	431f94 <_obstack_memory_used@@Base+0x15db4>
  431558:	mov	w0, #0x1                   	// #1
  43155c:	strb	w0, [x29, #191]
  431560:	ldr	x0, [x29, #176]
  431564:	str	x0, [x29, #168]
  431568:	ldr	x1, [x29, #176]
  43156c:	mov	x0, #0x1800                	// #6144
  431570:	add	x0, x1, x0
  431574:	str	x0, [x29, #160]
  431578:	ldr	x0, [x29, #32]
  43157c:	str	xzr, [x0, #88]
  431580:	ldr	x0, [x29, #32]
  431584:	ldr	x1, [x0, #88]
  431588:	ldr	x0, [x29, #32]
  43158c:	str	x1, [x0, #96]
  431590:	ldr	x3, [x29, #160]
  431594:	ldr	x2, [x29, #168]
  431598:	ldr	x1, [x29, #32]
  43159c:	ldr	x0, [x29, #40]
  4315a0:	bl	431fa4 <_obstack_memory_used@@Base+0x15dc4>
  4315a4:	str	x0, [x29, #152]
  4315a8:	ldr	x0, [x29, #152]
  4315ac:	cmp	x0, #0x0
  4315b0:	cset	w0, le
  4315b4:	and	w0, w0, #0xff
  4315b8:	and	x0, x0, #0xff
  4315bc:	cmp	x0, #0x0
  4315c0:	b.eq	431634 <_obstack_memory_used@@Base+0x15454>  // b.none
  4315c4:	ldrb	w0, [x29, #191]
  4315c8:	cmp	w0, #0x0
  4315cc:	b.eq	4315d8 <_obstack_memory_used@@Base+0x153f8>  // b.none
  4315d0:	ldr	x0, [x29, #176]
  4315d4:	bl	402b60 <free@plt>
  4315d8:	ldr	x0, [x29, #152]
  4315dc:	cmp	x0, #0x0
  4315e0:	b.ne	43162c <_obstack_memory_used@@Base+0x1544c>  // b.any
  4315e4:	mov	x1, #0x100                 	// #256
  4315e8:	mov	x0, #0x8                   	// #8
  4315ec:	bl	4029c0 <calloc@plt>
  4315f0:	mov	x1, x0
  4315f4:	ldr	x0, [x29, #32]
  4315f8:	str	x1, [x0, #88]
  4315fc:	ldr	x0, [x29, #32]
  431600:	ldr	x0, [x0, #88]
  431604:	cmp	x0, #0x0
  431608:	cset	w0, eq  // eq = none
  43160c:	and	w0, w0, #0xff
  431610:	and	x0, x0, #0xff
  431614:	cmp	x0, #0x0
  431618:	b.eq	431624 <_obstack_memory_used@@Base+0x15444>  // b.none
  43161c:	mov	w0, #0x0                   	// #0
  431620:	b	431f94 <_obstack_memory_used@@Base+0x15db4>
  431624:	mov	w0, #0x1                   	// #1
  431628:	b	431f94 <_obstack_memory_used@@Base+0x15db4>
  43162c:	mov	w0, #0x0                   	// #0
  431630:	b	431f94 <_obstack_memory_used@@Base+0x15db4>
  431634:	ldr	x0, [x29, #152]
  431638:	add	x1, x0, #0x1
  43163c:	add	x0, x29, #0x58
  431640:	bl	41f010 <_obstack_memory_used@@Base+0x2e30>
  431644:	str	w0, [x29, #116]
  431648:	ldr	w0, [x29, #116]
  43164c:	cmp	w0, #0x0
  431650:	cset	w0, ne  // ne = any
  431654:	and	w0, w0, #0xff
  431658:	and	x0, x0, #0xff
  43165c:	cmp	x0, #0x0
  431660:	b.ne	431738 <_obstack_memory_used@@Base+0x15558>  // b.any
  431664:	mov	x0, #0xa855                	// #43093
  431668:	movk	x0, #0xaaaa, lsl #16
  43166c:	movk	x0, #0xaaaa, lsl #32
  431670:	movk	x0, #0xaaa, lsl #48
  431674:	str	x0, [x29, #144]
  431678:	ldr	x0, [x29, #152]
  43167c:	ldr	x1, [x29, #144]
  431680:	cmp	x1, x0
  431684:	cset	w0, cc  // cc = lo, ul, last
  431688:	and	w0, w0, #0xff
  43168c:	and	x0, x0, #0xff
  431690:	cmp	x0, #0x0
  431694:	b.ne	431740 <_obstack_memory_used@@Base+0x15560>  // b.any
  431698:	ldr	x1, [x29, #152]
  43169c:	mov	x0, x1
  4316a0:	lsl	x0, x0, #1
  4316a4:	add	x0, x0, x1
  4316a8:	lsl	x0, x0, #3
  4316ac:	mov	x1, x0
  4316b0:	mov	x0, #0x3800                	// #14336
  4316b4:	add	x0, x1, x0
  4316b8:	cmp	x0, #0xfbf
  4316bc:	b.hi	4316fc <_obstack_memory_used@@Base+0x1551c>  // b.pmore
  4316c0:	ldr	x1, [x29, #152]
  4316c4:	mov	x0, x1
  4316c8:	lsl	x0, x0, #1
  4316cc:	add	x0, x0, x1
  4316d0:	lsl	x0, x0, #3
  4316d4:	add	x0, x0, #0xf
  4316d8:	lsr	x0, x0, #4
  4316dc:	lsl	x0, x0, #4
  4316e0:	sub	sp, sp, x0
  4316e4:	mov	x0, sp
  4316e8:	add	x0, x0, #0xf
  4316ec:	lsr	x0, x0, #4
  4316f0:	lsl	x0, x0, #4
  4316f4:	str	x0, [x29, #192]
  4316f8:	b	4317f8 <_obstack_memory_used@@Base+0x15618>
  4316fc:	ldr	x1, [x29, #152]
  431700:	mov	x0, x1
  431704:	lsl	x0, x0, #1
  431708:	add	x0, x0, x1
  43170c:	lsl	x0, x0, #3
  431710:	bl	4028b0 <malloc@plt>
  431714:	str	x0, [x29, #192]
  431718:	ldr	x0, [x29, #192]
  43171c:	cmp	x0, #0x0
  431720:	cset	w0, eq  // eq = none
  431724:	and	w0, w0, #0xff
  431728:	and	x0, x0, #0xff
  43172c:	cmp	x0, #0x0
  431730:	b.eq	4317f0 <_obstack_memory_used@@Base+0x15610>  // b.none
  431734:	b	43176c <_obstack_memory_used@@Base+0x1558c>
  431738:	nop
  43173c:	b	43176c <_obstack_memory_used@@Base+0x1558c>
  431740:	nop
  431744:	b	43176c <_obstack_memory_used@@Base+0x1558c>
  431748:	nop
  43174c:	b	43176c <_obstack_memory_used@@Base+0x1558c>
  431750:	nop
  431754:	b	43176c <_obstack_memory_used@@Base+0x1558c>
  431758:	nop
  43175c:	b	43176c <_obstack_memory_used@@Base+0x1558c>
  431760:	nop
  431764:	b	43176c <_obstack_memory_used@@Base+0x1558c>
  431768:	nop
  43176c:	ldrb	w0, [x29, #215]
  431770:	cmp	w0, #0x0
  431774:	b.eq	431780 <_obstack_memory_used@@Base+0x155a0>  // b.none
  431778:	ldr	x0, [x29, #192]
  43177c:	bl	402b60 <free@plt>
  431780:	ldr	x0, [x29, #104]
  431784:	bl	402b60 <free@plt>
  431788:	str	xzr, [x29, #248]
  43178c:	b	4317c4 <_obstack_memory_used@@Base+0x155e4>
  431790:	ldr	x1, [x29, #248]
  431794:	mov	x0, x1
  431798:	lsl	x0, x0, #1
  43179c:	add	x0, x0, x1
  4317a0:	lsl	x0, x0, #3
  4317a4:	mov	x1, x0
  4317a8:	ldr	x0, [x29, #168]
  4317ac:	add	x0, x0, x1
  4317b0:	ldr	x0, [x0, #16]
  4317b4:	bl	402b60 <free@plt>
  4317b8:	ldr	x0, [x29, #248]
  4317bc:	add	x0, x0, #0x1
  4317c0:	str	x0, [x29, #248]
  4317c4:	ldr	x1, [x29, #248]
  4317c8:	ldr	x0, [x29, #152]
  4317cc:	cmp	x1, x0
  4317d0:	b.lt	431790 <_obstack_memory_used@@Base+0x155b0>  // b.tstop
  4317d4:	ldrb	w0, [x29, #191]
  4317d8:	cmp	w0, #0x0
  4317dc:	b.eq	4317e8 <_obstack_memory_used@@Base+0x15608>  // b.none
  4317e0:	ldr	x0, [x29, #176]
  4317e4:	bl	402b60 <free@plt>
  4317e8:	mov	w0, #0x0                   	// #0
  4317ec:	b	431f94 <_obstack_memory_used@@Base+0x15db4>
  4317f0:	mov	w0, #0x1                   	// #1
  4317f4:	strb	w0, [x29, #215]
  4317f8:	ldr	x0, [x29, #152]
  4317fc:	lsl	x0, x0, #3
  431800:	ldr	x1, [x29, #192]
  431804:	add	x0, x1, x0
  431808:	str	x0, [x29, #136]
  43180c:	ldr	x0, [x29, #152]
  431810:	lsl	x0, x0, #3
  431814:	ldr	x1, [x29, #136]
  431818:	add	x0, x1, x0
  43181c:	str	x0, [x29, #128]
  431820:	add	x0, x29, #0x38
  431824:	bl	41c3e4 <_obstack_memory_used@@Base+0x204>
  431828:	str	xzr, [x29, #248]
  43182c:	b	431b5c <_obstack_memory_used@@Base+0x1597c>
  431830:	str	xzr, [x29, #96]
  431834:	str	xzr, [x29, #240]
  431838:	b	4318e8 <_obstack_memory_used@@Base+0x15708>
  43183c:	ldr	x0, [x29, #40]
  431840:	ldr	x2, [x0, #24]
  431844:	ldr	x1, [x29, #248]
  431848:	mov	x0, x1
  43184c:	lsl	x0, x0, #1
  431850:	add	x0, x0, x1
  431854:	lsl	x0, x0, #3
  431858:	mov	x1, x0
  43185c:	ldr	x0, [x29, #168]
  431860:	add	x0, x0, x1
  431864:	ldr	x1, [x0, #16]
  431868:	ldr	x0, [x29, #240]
  43186c:	lsl	x0, x0, #3
  431870:	add	x0, x1, x0
  431874:	ldr	x0, [x0]
  431878:	lsl	x0, x0, #3
  43187c:	add	x0, x2, x0
  431880:	ldr	x0, [x0]
  431884:	str	x0, [x29, #120]
  431888:	ldr	x0, [x29, #120]
  43188c:	cmn	x0, #0x1
  431890:	b.eq	4318dc <_obstack_memory_used@@Base+0x156fc>  // b.none
  431894:	ldr	x0, [x29, #40]
  431898:	ldr	x2, [x0, #48]
  43189c:	ldr	x1, [x29, #120]
  4318a0:	mov	x0, x1
  4318a4:	lsl	x0, x0, #1
  4318a8:	add	x0, x0, x1
  4318ac:	lsl	x0, x0, #3
  4318b0:	add	x1, x2, x0
  4318b4:	add	x0, x29, #0x58
  4318b8:	bl	41fb00 <_obstack_memory_used@@Base+0x3920>
  4318bc:	str	w0, [x29, #116]
  4318c0:	ldr	w0, [x29, #116]
  4318c4:	cmp	w0, #0x0
  4318c8:	cset	w0, ne  // ne = any
  4318cc:	and	w0, w0, #0xff
  4318d0:	and	x0, x0, #0xff
  4318d4:	cmp	x0, #0x0
  4318d8:	b.ne	431748 <_obstack_memory_used@@Base+0x15568>  // b.any
  4318dc:	ldr	x0, [x29, #240]
  4318e0:	add	x0, x0, #0x1
  4318e4:	str	x0, [x29, #240]
  4318e8:	ldr	x1, [x29, #248]
  4318ec:	mov	x0, x1
  4318f0:	lsl	x0, x0, #1
  4318f4:	add	x0, x0, x1
  4318f8:	lsl	x0, x0, #3
  4318fc:	mov	x1, x0
  431900:	ldr	x0, [x29, #168]
  431904:	add	x0, x0, x1
  431908:	ldr	x0, [x0, #8]
  43190c:	ldr	x1, [x29, #240]
  431910:	cmp	x1, x0
  431914:	b.lt	43183c <_obstack_memory_used@@Base+0x1565c>  // b.tstop
  431918:	ldr	x0, [x29, #248]
  43191c:	lsl	x0, x0, #3
  431920:	ldr	x1, [x29, #192]
  431924:	add	x19, x1, x0
  431928:	add	x1, x29, #0x58
  43192c:	add	x0, x29, #0x74
  431930:	mov	w3, #0x0                   	// #0
  431934:	mov	x2, x1
  431938:	ldr	x1, [x29, #40]
  43193c:	bl	420a10 <_obstack_memory_used@@Base+0x4830>
  431940:	str	x0, [x19]
  431944:	ldr	x0, [x29, #248]
  431948:	lsl	x0, x0, #3
  43194c:	ldr	x1, [x29, #192]
  431950:	add	x0, x1, x0
  431954:	ldr	x0, [x0]
  431958:	cmp	x0, #0x0
  43195c:	cset	w0, eq  // eq = none
  431960:	and	w0, w0, #0xff
  431964:	and	x0, x0, #0xff
  431968:	cmp	x0, #0x0
  43196c:	b.eq	43198c <_obstack_memory_used@@Base+0x157ac>  // b.none
  431970:	ldr	w0, [x29, #116]
  431974:	cmp	w0, #0x0
  431978:	cset	w0, ne  // ne = any
  43197c:	and	w0, w0, #0xff
  431980:	and	x0, x0, #0xff
  431984:	cmp	x0, #0x0
  431988:	b.ne	431750 <_obstack_memory_used@@Base+0x15570>  // b.any
  43198c:	ldr	x0, [x29, #248]
  431990:	lsl	x0, x0, #3
  431994:	ldr	x1, [x29, #192]
  431998:	add	x0, x1, x0
  43199c:	ldr	x0, [x0]
  4319a0:	ldrb	w0, [x0, #104]
  4319a4:	and	w0, w0, #0xffffff80
  4319a8:	and	w0, w0, #0xff
  4319ac:	cmp	w0, #0x0
  4319b0:	b.eq	431ae8 <_obstack_memory_used@@Base+0x15908>  // b.none
  4319b4:	ldr	x0, [x29, #248]
  4319b8:	lsl	x0, x0, #3
  4319bc:	ldr	x1, [x29, #136]
  4319c0:	add	x19, x1, x0
  4319c4:	add	x1, x29, #0x58
  4319c8:	add	x0, x29, #0x74
  4319cc:	mov	w3, #0x1                   	// #1
  4319d0:	mov	x2, x1
  4319d4:	ldr	x1, [x29, #40]
  4319d8:	bl	420a10 <_obstack_memory_used@@Base+0x4830>
  4319dc:	str	x0, [x19]
  4319e0:	ldr	x0, [x29, #248]
  4319e4:	lsl	x0, x0, #3
  4319e8:	ldr	x1, [x29, #136]
  4319ec:	add	x0, x1, x0
  4319f0:	ldr	x0, [x0]
  4319f4:	cmp	x0, #0x0
  4319f8:	cset	w0, eq  // eq = none
  4319fc:	and	w0, w0, #0xff
  431a00:	and	x0, x0, #0xff
  431a04:	cmp	x0, #0x0
  431a08:	b.eq	431a28 <_obstack_memory_used@@Base+0x15848>  // b.none
  431a0c:	ldr	w0, [x29, #116]
  431a10:	cmp	w0, #0x0
  431a14:	cset	w0, ne  // ne = any
  431a18:	and	w0, w0, #0xff
  431a1c:	and	x0, x0, #0xff
  431a20:	cmp	x0, #0x0
  431a24:	b.ne	431758 <_obstack_memory_used@@Base+0x15578>  // b.any
  431a28:	ldr	x0, [x29, #248]
  431a2c:	lsl	x0, x0, #3
  431a30:	ldr	x1, [x29, #192]
  431a34:	add	x0, x1, x0
  431a38:	ldr	x1, [x0]
  431a3c:	ldr	x0, [x29, #248]
  431a40:	lsl	x0, x0, #3
  431a44:	ldr	x2, [x29, #136]
  431a48:	add	x0, x2, x0
  431a4c:	ldr	x0, [x0]
  431a50:	cmp	x1, x0
  431a54:	b.eq	431a70 <_obstack_memory_used@@Base+0x15890>  // b.none
  431a58:	ldr	x0, [x29, #40]
  431a5c:	ldr	w0, [x0, #180]
  431a60:	cmp	w0, #0x1
  431a64:	b.le	431a70 <_obstack_memory_used@@Base+0x15890>
  431a68:	mov	w0, #0x1                   	// #1
  431a6c:	strb	w0, [x29, #235]
  431a70:	ldr	x0, [x29, #248]
  431a74:	lsl	x0, x0, #3
  431a78:	ldr	x1, [x29, #128]
  431a7c:	add	x19, x1, x0
  431a80:	add	x1, x29, #0x58
  431a84:	add	x0, x29, #0x74
  431a88:	mov	w3, #0x2                   	// #2
  431a8c:	mov	x2, x1
  431a90:	ldr	x1, [x29, #40]
  431a94:	bl	420a10 <_obstack_memory_used@@Base+0x4830>
  431a98:	str	x0, [x19]
  431a9c:	ldr	x0, [x29, #248]
  431aa0:	lsl	x0, x0, #3
  431aa4:	ldr	x1, [x29, #128]
  431aa8:	add	x0, x1, x0
  431aac:	ldr	x0, [x0]
  431ab0:	cmp	x0, #0x0
  431ab4:	cset	w0, eq  // eq = none
  431ab8:	and	w0, w0, #0xff
  431abc:	and	x0, x0, #0xff
  431ac0:	cmp	x0, #0x0
  431ac4:	b.eq	431b38 <_obstack_memory_used@@Base+0x15958>  // b.none
  431ac8:	ldr	w0, [x29, #116]
  431acc:	cmp	w0, #0x0
  431ad0:	cset	w0, ne  // ne = any
  431ad4:	and	w0, w0, #0xff
  431ad8:	and	x0, x0, #0xff
  431adc:	cmp	x0, #0x0
  431ae0:	b.eq	431b38 <_obstack_memory_used@@Base+0x15958>  // b.none
  431ae4:	b	43176c <_obstack_memory_used@@Base+0x1558c>
  431ae8:	ldr	x0, [x29, #248]
  431aec:	lsl	x0, x0, #3
  431af0:	ldr	x1, [x29, #192]
  431af4:	add	x1, x1, x0
  431af8:	ldr	x0, [x29, #248]
  431afc:	lsl	x0, x0, #3
  431b00:	ldr	x2, [x29, #136]
  431b04:	add	x0, x2, x0
  431b08:	ldr	x1, [x1]
  431b0c:	str	x1, [x0]
  431b10:	ldr	x0, [x29, #248]
  431b14:	lsl	x0, x0, #3
  431b18:	ldr	x1, [x29, #192]
  431b1c:	add	x1, x1, x0
  431b20:	ldr	x0, [x29, #248]
  431b24:	lsl	x0, x0, #3
  431b28:	ldr	x2, [x29, #128]
  431b2c:	add	x0, x2, x0
  431b30:	ldr	x1, [x1]
  431b34:	str	x1, [x0]
  431b38:	ldr	x0, [x29, #248]
  431b3c:	lsl	x0, x0, #5
  431b40:	ldr	x1, [x29, #160]
  431b44:	add	x1, x1, x0
  431b48:	add	x0, x29, #0x38
  431b4c:	bl	41c4c4 <_obstack_memory_used@@Base+0x2e4>
  431b50:	ldr	x0, [x29, #248]
  431b54:	add	x0, x0, #0x1
  431b58:	str	x0, [x29, #248]
  431b5c:	ldr	x1, [x29, #248]
  431b60:	ldr	x0, [x29, #152]
  431b64:	cmp	x1, x0
  431b68:	b.lt	431830 <_obstack_memory_used@@Base+0x15650>  // b.tstop
  431b6c:	ldrb	w0, [x29, #235]
  431b70:	cmp	x0, #0x0
  431b74:	b.ne	431d00 <_obstack_memory_used@@Base+0x15b20>  // b.any
  431b78:	mov	x1, #0x100                 	// #256
  431b7c:	mov	x0, #0x8                   	// #8
  431b80:	bl	4029c0 <calloc@plt>
  431b84:	mov	x1, x0
  431b88:	ldr	x0, [x29, #32]
  431b8c:	str	x1, [x0, #88]
  431b90:	ldr	x0, [x29, #32]
  431b94:	ldr	x0, [x0, #88]
  431b98:	str	x0, [x29, #200]
  431b9c:	ldr	x0, [x29, #200]
  431ba0:	cmp	x0, #0x0
  431ba4:	cset	w0, eq  // eq = none
  431ba8:	and	w0, w0, #0xff
  431bac:	and	x0, x0, #0xff
  431bb0:	cmp	x0, #0x0
  431bb4:	b.ne	431760 <_obstack_memory_used@@Base+0x15580>  // b.any
  431bb8:	str	xzr, [x29, #248]
  431bbc:	b	431cf0 <_obstack_memory_used@@Base+0x15b10>
  431bc0:	ldr	x0, [x29, #248]
  431bc4:	lsl	w0, w0, #6
  431bc8:	str	w0, [x29, #236]
  431bcc:	add	x0, x29, #0x108
  431bd0:	sub	x0, x0, #0xd0
  431bd4:	ldr	x1, [x29, #248]
  431bd8:	ldr	x0, [x0, x1, lsl #3]
  431bdc:	str	x0, [x29, #224]
  431be0:	mov	x0, #0x1                   	// #1
  431be4:	str	x0, [x29, #216]
  431be8:	b	431cd8 <_obstack_memory_used@@Base+0x15af8>
  431bec:	ldr	x0, [x29, #224]
  431bf0:	and	x0, x0, #0x1
  431bf4:	cmp	x0, #0x0
  431bf8:	b.eq	431cb4 <_obstack_memory_used@@Base+0x15ad4>  // b.none
  431bfc:	str	xzr, [x29, #240]
  431c00:	b	431c10 <_obstack_memory_used@@Base+0x15a30>
  431c04:	ldr	x0, [x29, #240]
  431c08:	add	x0, x0, #0x1
  431c0c:	str	x0, [x29, #240]
  431c10:	ldr	x0, [x29, #240]
  431c14:	lsl	x0, x0, #5
  431c18:	ldr	x1, [x29, #160]
  431c1c:	add	x0, x1, x0
  431c20:	ldr	x1, [x29, #248]
  431c24:	ldr	x1, [x0, x1, lsl #3]
  431c28:	ldr	x0, [x29, #216]
  431c2c:	and	x0, x1, x0
  431c30:	cmp	x0, #0x0
  431c34:	b.eq	431c04 <_obstack_memory_used@@Base+0x15a24>  // b.none
  431c38:	ldr	x1, [x29, #40]
  431c3c:	ldr	x0, [x29, #248]
  431c40:	add	x0, x0, #0x16
  431c44:	lsl	x0, x0, #3
  431c48:	add	x0, x1, x0
  431c4c:	ldr	x1, [x0, #8]
  431c50:	ldr	x0, [x29, #216]
  431c54:	and	x0, x1, x0
  431c58:	cmp	x0, #0x0
  431c5c:	b.eq	431c8c <_obstack_memory_used@@Base+0x15aac>  // b.none
  431c60:	ldr	x0, [x29, #240]
  431c64:	lsl	x0, x0, #3
  431c68:	ldr	x1, [x29, #136]
  431c6c:	add	x1, x1, x0
  431c70:	ldrsw	x0, [x29, #236]
  431c74:	lsl	x0, x0, #3
  431c78:	ldr	x2, [x29, #200]
  431c7c:	add	x0, x2, x0
  431c80:	ldr	x1, [x1]
  431c84:	str	x1, [x0]
  431c88:	b	431cb4 <_obstack_memory_used@@Base+0x15ad4>
  431c8c:	ldr	x0, [x29, #240]
  431c90:	lsl	x0, x0, #3
  431c94:	ldr	x1, [x29, #192]
  431c98:	add	x1, x1, x0
  431c9c:	ldrsw	x0, [x29, #236]
  431ca0:	lsl	x0, x0, #3
  431ca4:	ldr	x2, [x29, #200]
  431ca8:	add	x0, x2, x0
  431cac:	ldr	x1, [x1]
  431cb0:	str	x1, [x0]
  431cb4:	ldr	x0, [x29, #216]
  431cb8:	lsl	x0, x0, #1
  431cbc:	str	x0, [x29, #216]
  431cc0:	ldr	x0, [x29, #224]
  431cc4:	lsr	x0, x0, #1
  431cc8:	str	x0, [x29, #224]
  431ccc:	ldr	w0, [x29, #236]
  431cd0:	add	w0, w0, #0x1
  431cd4:	str	w0, [x29, #236]
  431cd8:	ldr	x0, [x29, #224]
  431cdc:	cmp	x0, #0x0
  431ce0:	b.ne	431bec <_obstack_memory_used@@Base+0x15a0c>  // b.any
  431ce4:	ldr	x0, [x29, #248]
  431ce8:	add	x0, x0, #0x1
  431cec:	str	x0, [x29, #248]
  431cf0:	ldr	x0, [x29, #248]
  431cf4:	cmp	x0, #0x3
  431cf8:	b.le	431bc0 <_obstack_memory_used@@Base+0x159e0>
  431cfc:	b	431e5c <_obstack_memory_used@@Base+0x15c7c>
  431d00:	mov	x1, #0x200                 	// #512
  431d04:	mov	x0, #0x8                   	// #8
  431d08:	bl	4029c0 <calloc@plt>
  431d0c:	mov	x1, x0
  431d10:	ldr	x0, [x29, #32]
  431d14:	str	x1, [x0, #96]
  431d18:	ldr	x0, [x29, #32]
  431d1c:	ldr	x0, [x0, #96]
  431d20:	str	x0, [x29, #200]
  431d24:	ldr	x0, [x29, #200]
  431d28:	cmp	x0, #0x0
  431d2c:	cset	w0, eq  // eq = none
  431d30:	and	w0, w0, #0xff
  431d34:	and	x0, x0, #0xff
  431d38:	cmp	x0, #0x0
  431d3c:	b.ne	431768 <_obstack_memory_used@@Base+0x15588>  // b.any
  431d40:	str	xzr, [x29, #248]
  431d44:	b	431e50 <_obstack_memory_used@@Base+0x15c70>
  431d48:	ldr	x0, [x29, #248]
  431d4c:	lsl	w0, w0, #6
  431d50:	str	w0, [x29, #236]
  431d54:	add	x0, x29, #0x108
  431d58:	sub	x0, x0, #0xd0
  431d5c:	ldr	x1, [x29, #248]
  431d60:	ldr	x0, [x0, x1, lsl #3]
  431d64:	str	x0, [x29, #224]
  431d68:	mov	x0, #0x1                   	// #1
  431d6c:	str	x0, [x29, #216]
  431d70:	b	431e38 <_obstack_memory_used@@Base+0x15c58>
  431d74:	ldr	x0, [x29, #224]
  431d78:	and	x0, x0, #0x1
  431d7c:	cmp	x0, #0x0
  431d80:	b.eq	431e14 <_obstack_memory_used@@Base+0x15c34>  // b.none
  431d84:	str	xzr, [x29, #240]
  431d88:	b	431d98 <_obstack_memory_used@@Base+0x15bb8>
  431d8c:	ldr	x0, [x29, #240]
  431d90:	add	x0, x0, #0x1
  431d94:	str	x0, [x29, #240]
  431d98:	ldr	x0, [x29, #240]
  431d9c:	lsl	x0, x0, #5
  431da0:	ldr	x1, [x29, #160]
  431da4:	add	x0, x1, x0
  431da8:	ldr	x1, [x29, #248]
  431dac:	ldr	x1, [x0, x1, lsl #3]
  431db0:	ldr	x0, [x29, #216]
  431db4:	and	x0, x1, x0
  431db8:	cmp	x0, #0x0
  431dbc:	b.eq	431d8c <_obstack_memory_used@@Base+0x15bac>  // b.none
  431dc0:	ldr	x0, [x29, #240]
  431dc4:	lsl	x0, x0, #3
  431dc8:	ldr	x1, [x29, #192]
  431dcc:	add	x1, x1, x0
  431dd0:	ldrsw	x0, [x29, #236]
  431dd4:	lsl	x0, x0, #3
  431dd8:	ldr	x2, [x29, #200]
  431ddc:	add	x0, x2, x0
  431de0:	ldr	x1, [x1]
  431de4:	str	x1, [x0]
  431de8:	ldr	x0, [x29, #240]
  431dec:	lsl	x0, x0, #3
  431df0:	ldr	x1, [x29, #136]
  431df4:	add	x1, x1, x0
  431df8:	ldrsw	x0, [x29, #236]
  431dfc:	add	x0, x0, #0x100
  431e00:	lsl	x0, x0, #3
  431e04:	ldr	x2, [x29, #200]
  431e08:	add	x0, x2, x0
  431e0c:	ldr	x1, [x1]
  431e10:	str	x1, [x0]
  431e14:	ldr	x0, [x29, #216]
  431e18:	lsl	x0, x0, #1
  431e1c:	str	x0, [x29, #216]
  431e20:	ldr	x0, [x29, #224]
  431e24:	lsr	x0, x0, #1
  431e28:	str	x0, [x29, #224]
  431e2c:	ldr	w0, [x29, #236]
  431e30:	add	w0, w0, #0x1
  431e34:	str	w0, [x29, #236]
  431e38:	ldr	x0, [x29, #224]
  431e3c:	cmp	x0, #0x0
  431e40:	b.ne	431d74 <_obstack_memory_used@@Base+0x15b94>  // b.any
  431e44:	ldr	x0, [x29, #248]
  431e48:	add	x0, x0, #0x1
  431e4c:	str	x0, [x29, #248]
  431e50:	ldr	x0, [x29, #248]
  431e54:	cmp	x0, #0x3
  431e58:	b.le	431d48 <_obstack_memory_used@@Base+0x15b68>
  431e5c:	add	x0, x29, #0x38
  431e60:	mov	x1, #0xa                   	// #10
  431e64:	bl	41c384 <_obstack_memory_used@@Base+0x1a4>
  431e68:	and	w0, w0, #0xff
  431e6c:	cmp	w0, #0x0
  431e70:	b.eq	431f14 <_obstack_memory_used@@Base+0x15d34>  // b.none
  431e74:	str	xzr, [x29, #240]
  431e78:	b	431efc <_obstack_memory_used@@Base+0x15d1c>
  431e7c:	ldr	x0, [x29, #240]
  431e80:	lsl	x0, x0, #5
  431e84:	ldr	x1, [x29, #160]
  431e88:	add	x0, x1, x0
  431e8c:	mov	x1, #0xa                   	// #10
  431e90:	bl	41c384 <_obstack_memory_used@@Base+0x1a4>
  431e94:	and	w0, w0, #0xff
  431e98:	cmp	w0, #0x0
  431e9c:	b.eq	431ef0 <_obstack_memory_used@@Base+0x15d10>  // b.none
  431ea0:	ldr	x0, [x29, #240]
  431ea4:	lsl	x0, x0, #3
  431ea8:	ldr	x1, [x29, #128]
  431eac:	add	x1, x1, x0
  431eb0:	ldr	x0, [x29, #200]
  431eb4:	add	x0, x0, #0x50
  431eb8:	ldr	x1, [x1]
  431ebc:	str	x1, [x0]
  431ec0:	ldrb	w0, [x29, #235]
  431ec4:	cmp	w0, #0x0
  431ec8:	b.eq	431f10 <_obstack_memory_used@@Base+0x15d30>  // b.none
  431ecc:	ldr	x0, [x29, #240]
  431ed0:	lsl	x0, x0, #3
  431ed4:	ldr	x1, [x29, #128]
  431ed8:	add	x1, x1, x0
  431edc:	ldr	x0, [x29, #200]
  431ee0:	add	x0, x0, #0x850
  431ee4:	ldr	x1, [x1]
  431ee8:	str	x1, [x0]
  431eec:	b	431f10 <_obstack_memory_used@@Base+0x15d30>
  431ef0:	ldr	x0, [x29, #240]
  431ef4:	add	x0, x0, #0x1
  431ef8:	str	x0, [x29, #240]
  431efc:	ldr	x1, [x29, #240]
  431f00:	ldr	x0, [x29, #152]
  431f04:	cmp	x1, x0
  431f08:	b.lt	431e7c <_obstack_memory_used@@Base+0x15c9c>  // b.tstop
  431f0c:	b	431f14 <_obstack_memory_used@@Base+0x15d34>
  431f10:	nop
  431f14:	ldrb	w0, [x29, #215]
  431f18:	cmp	w0, #0x0
  431f1c:	b.eq	431f28 <_obstack_memory_used@@Base+0x15d48>  // b.none
  431f20:	ldr	x0, [x29, #192]
  431f24:	bl	402b60 <free@plt>
  431f28:	ldr	x0, [x29, #104]
  431f2c:	bl	402b60 <free@plt>
  431f30:	str	xzr, [x29, #248]
  431f34:	b	431f6c <_obstack_memory_used@@Base+0x15d8c>
  431f38:	ldr	x1, [x29, #248]
  431f3c:	mov	x0, x1
  431f40:	lsl	x0, x0, #1
  431f44:	add	x0, x0, x1
  431f48:	lsl	x0, x0, #3
  431f4c:	mov	x1, x0
  431f50:	ldr	x0, [x29, #168]
  431f54:	add	x0, x0, x1
  431f58:	ldr	x0, [x0, #16]
  431f5c:	bl	402b60 <free@plt>
  431f60:	ldr	x0, [x29, #248]
  431f64:	add	x0, x0, #0x1
  431f68:	str	x0, [x29, #248]
  431f6c:	ldr	x1, [x29, #248]
  431f70:	ldr	x0, [x29, #152]
  431f74:	cmp	x1, x0
  431f78:	b.lt	431f38 <_obstack_memory_used@@Base+0x15d58>  // b.tstop
  431f7c:	ldrb	w0, [x29, #191]
  431f80:	cmp	w0, #0x0
  431f84:	b.eq	431f90 <_obstack_memory_used@@Base+0x15db0>  // b.none
  431f88:	ldr	x0, [x29, #176]
  431f8c:	bl	402b60 <free@plt>
  431f90:	mov	w0, #0x1                   	// #1
  431f94:	mov	sp, x29
  431f98:	ldr	x19, [sp, #16]
  431f9c:	ldp	x29, x30, [sp], #256
  431fa0:	ret
  431fa4:	stp	x29, x30, [sp, #-256]!
  431fa8:	mov	x29, sp
  431fac:	str	x0, [sp, #40]
  431fb0:	str	x1, [sp, #32]
  431fb4:	str	x2, [sp, #24]
  431fb8:	str	x3, [sp, #16]
  431fbc:	ldr	x0, [sp, #32]
  431fc0:	add	x0, x0, #0x8
  431fc4:	str	x0, [sp, #176]
  431fc8:	add	x0, sp, #0x70
  431fcc:	bl	41c3e4 <_obstack_memory_used@@Base+0x204>
  431fd0:	str	xzr, [sp, #224]
  431fd4:	str	xzr, [sp, #248]
  431fd8:	b	432820 <_obstack_memory_used@@Base+0x16640>
  431fdc:	ldr	x0, [sp, #40]
  431fe0:	ldr	x1, [x0]
  431fe4:	ldr	x0, [sp, #176]
  431fe8:	ldr	x2, [x0, #16]
  431fec:	ldr	x0, [sp, #248]
  431ff0:	lsl	x0, x0, #3
  431ff4:	add	x0, x2, x0
  431ff8:	ldr	x0, [x0]
  431ffc:	lsl	x0, x0, #4
  432000:	add	x0, x1, x0
  432004:	str	x0, [sp, #168]
  432008:	ldr	x0, [sp, #168]
  43200c:	ldrb	w0, [x0, #8]
  432010:	str	w0, [sp, #164]
  432014:	ldr	x0, [sp, #168]
  432018:	ldr	w0, [x0, #8]
  43201c:	ubfx	x0, x0, #8, #10
  432020:	and	w0, w0, #0xffff
  432024:	str	w0, [sp, #160]
  432028:	ldr	w0, [sp, #164]
  43202c:	cmp	w0, #0x1
  432030:	b.ne	43204c <_obstack_memory_used@@Base+0x15e6c>  // b.any
  432034:	ldr	x0, [sp, #168]
  432038:	ldrb	w0, [x0]
  43203c:	and	x1, x0, #0xff
  432040:	add	x0, sp, #0x70
  432044:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  432048:	b	432144 <_obstack_memory_used@@Base+0x15f64>
  43204c:	ldr	w0, [sp, #164]
  432050:	cmp	w0, #0x3
  432054:	b.ne	43206c <_obstack_memory_used@@Base+0x15e8c>  // b.any
  432058:	ldr	x0, [sp, #168]
  43205c:	ldr	x1, [x0]
  432060:	add	x0, sp, #0x70
  432064:	bl	41c4c4 <_obstack_memory_used@@Base+0x2e4>
  432068:	b	432144 <_obstack_memory_used@@Base+0x15f64>
  43206c:	ldr	w0, [sp, #164]
  432070:	cmp	w0, #0x5
  432074:	b.ne	4320e8 <_obstack_memory_used@@Base+0x15f08>  // b.any
  432078:	ldr	x0, [sp, #40]
  43207c:	ldr	w0, [x0, #180]
  432080:	cmp	w0, #0x1
  432084:	b.le	43209c <_obstack_memory_used@@Base+0x15ebc>
  432088:	ldr	x0, [sp, #40]
  43208c:	ldr	x1, [x0, #120]
  432090:	add	x0, sp, #0x70
  432094:	bl	41c4c4 <_obstack_memory_used@@Base+0x2e4>
  432098:	b	4320a4 <_obstack_memory_used@@Base+0x15ec4>
  43209c:	add	x0, sp, #0x70
  4320a0:	bl	41c40c <_obstack_memory_used@@Base+0x22c>
  4320a4:	ldr	x0, [sp, #40]
  4320a8:	ldr	x0, [x0, #216]
  4320ac:	and	x0, x0, #0x40
  4320b0:	cmp	x0, #0x0
  4320b4:	b.ne	4320c4 <_obstack_memory_used@@Base+0x15ee4>  // b.any
  4320b8:	add	x0, sp, #0x70
  4320bc:	mov	x1, #0xa                   	// #10
  4320c0:	bl	41c304 <_obstack_memory_used@@Base+0x124>
  4320c4:	ldr	x0, [sp, #40]
  4320c8:	ldr	x0, [x0, #216]
  4320cc:	and	x0, x0, #0x80
  4320d0:	cmp	x0, #0x0
  4320d4:	b.eq	432144 <_obstack_memory_used@@Base+0x15f64>  // b.none
  4320d8:	add	x0, sp, #0x70
  4320dc:	mov	x1, #0x0                   	// #0
  4320e0:	bl	41c304 <_obstack_memory_used@@Base+0x124>
  4320e4:	b	432144 <_obstack_memory_used@@Base+0x15f64>
  4320e8:	ldr	w0, [sp, #164]
  4320ec:	cmp	w0, #0x7
  4320f0:	b.ne	4327f8 <_obstack_memory_used@@Base+0x16618>  // b.any
  4320f4:	add	x0, sp, #0x70
  4320f8:	mov	x2, #0x10                  	// #16
  4320fc:	mov	w1, #0xffffffff            	// #-1
  432100:	bl	402980 <memset@plt>
  432104:	ldr	x0, [sp, #40]
  432108:	ldr	x0, [x0, #216]
  43210c:	and	x0, x0, #0x40
  432110:	cmp	x0, #0x0
  432114:	b.ne	432124 <_obstack_memory_used@@Base+0x15f44>  // b.any
  432118:	add	x0, sp, #0x70
  43211c:	mov	x1, #0xa                   	// #10
  432120:	bl	41c304 <_obstack_memory_used@@Base+0x124>
  432124:	ldr	x0, [sp, #40]
  432128:	ldr	x0, [x0, #216]
  43212c:	and	x0, x0, #0x80
  432130:	cmp	x0, #0x0
  432134:	b.eq	432144 <_obstack_memory_used@@Base+0x15f64>  // b.none
  432138:	add	x0, sp, #0x70
  43213c:	mov	x1, #0x0                   	// #0
  432140:	bl	41c304 <_obstack_memory_used@@Base+0x124>
  432144:	ldr	w0, [sp, #160]
  432148:	cmp	w0, #0x0
  43214c:	b.eq	432468 <_obstack_memory_used@@Base+0x16288>  // b.none
  432150:	ldr	w0, [sp, #160]
  432154:	and	w0, w0, #0x20
  432158:	cmp	w0, #0x0
  43215c:	b.eq	432190 <_obstack_memory_used@@Base+0x15fb0>  // b.none
  432160:	add	x0, sp, #0x70
  432164:	mov	x1, #0xa                   	// #10
  432168:	bl	41c384 <_obstack_memory_used@@Base+0x1a4>
  43216c:	strb	w0, [sp, #159]
  432170:	add	x0, sp, #0x70
  432174:	bl	41c3e4 <_obstack_memory_used@@Base+0x204>
  432178:	ldrb	w0, [sp, #159]
  43217c:	cmp	w0, #0x0
  432180:	b.eq	432800 <_obstack_memory_used@@Base+0x16620>  // b.none
  432184:	add	x0, sp, #0x70
  432188:	mov	x1, #0xa                   	// #10
  43218c:	bl	41c288 <_obstack_memory_used@@Base+0xa8>
  432190:	ldr	w0, [sp, #160]
  432194:	and	w0, w0, #0x80
  432198:	cmp	w0, #0x0
  43219c:	b.eq	4321ac <_obstack_memory_used@@Base+0x15fcc>  // b.none
  4321a0:	add	x0, sp, #0x70
  4321a4:	bl	41c3e4 <_obstack_memory_used@@Base+0x204>
  4321a8:	b	432814 <_obstack_memory_used@@Base+0x16634>
  4321ac:	ldr	w0, [sp, #160]
  4321b0:	and	w0, w0, #0x4
  4321b4:	cmp	w0, #0x0
  4321b8:	b.eq	432308 <_obstack_memory_used@@Base+0x16128>  // b.none
  4321bc:	str	xzr, [sp, #216]
  4321c0:	ldr	w0, [sp, #164]
  4321c4:	cmp	w0, #0x1
  4321c8:	b.ne	4321f0 <_obstack_memory_used@@Base+0x16010>  // b.any
  4321cc:	ldr	x0, [sp, #168]
  4321d0:	ldrb	w0, [x0, #10]
  4321d4:	and	w0, w0, #0x40
  4321d8:	and	w0, w0, #0xff
  4321dc:	cmp	w0, #0x0
  4321e0:	b.ne	4321f0 <_obstack_memory_used@@Base+0x16010>  // b.any
  4321e4:	add	x0, sp, #0x70
  4321e8:	bl	41c3e4 <_obstack_memory_used@@Base+0x204>
  4321ec:	b	432814 <_obstack_memory_used@@Base+0x16634>
  4321f0:	ldr	x0, [sp, #40]
  4321f4:	ldr	w0, [x0, #180]
  4321f8:	cmp	w0, #0x1
  4321fc:	b.le	432290 <_obstack_memory_used@@Base+0x160b0>
  432200:	str	xzr, [sp, #240]
  432204:	b	432280 <_obstack_memory_used@@Base+0x160a0>
  432208:	add	x0, sp, #0x70
  43220c:	ldr	x1, [sp, #240]
  432210:	ldr	x1, [x0, x1, lsl #3]
  432214:	ldr	x2, [sp, #40]
  432218:	ldr	x0, [sp, #240]
  43221c:	add	x0, x0, #0x16
  432220:	lsl	x0, x0, #3
  432224:	add	x0, x2, x0
  432228:	ldr	x2, [x0, #8]
  43222c:	ldr	x0, [sp, #40]
  432230:	ldr	x3, [x0, #120]
  432234:	ldr	x0, [sp, #240]
  432238:	lsl	x0, x0, #3
  43223c:	add	x0, x3, x0
  432240:	ldr	x0, [x0]
  432244:	mvn	x0, x0
  432248:	orr	x0, x2, x0
  43224c:	and	x2, x1, x0
  432250:	add	x0, sp, #0x70
  432254:	ldr	x1, [sp, #240]
  432258:	str	x2, [x0, x1, lsl #3]
  43225c:	add	x0, sp, #0x70
  432260:	ldr	x1, [sp, #240]
  432264:	ldr	x0, [x0, x1, lsl #3]
  432268:	ldr	x1, [sp, #216]
  43226c:	orr	x0, x1, x0
  432270:	str	x0, [sp, #216]
  432274:	ldr	x0, [sp, #240]
  432278:	add	x0, x0, #0x1
  43227c:	str	x0, [sp, #240]
  432280:	ldr	x0, [sp, #240]
  432284:	cmp	x0, #0x3
  432288:	b.le	432208 <_obstack_memory_used@@Base+0x16028>
  43228c:	b	4322fc <_obstack_memory_used@@Base+0x1611c>
  432290:	str	xzr, [sp, #240]
  432294:	b	4322f0 <_obstack_memory_used@@Base+0x16110>
  432298:	add	x0, sp, #0x70
  43229c:	ldr	x1, [sp, #240]
  4322a0:	ldr	x1, [x0, x1, lsl #3]
  4322a4:	ldr	x2, [sp, #40]
  4322a8:	ldr	x0, [sp, #240]
  4322ac:	add	x0, x0, #0x16
  4322b0:	lsl	x0, x0, #3
  4322b4:	add	x0, x2, x0
  4322b8:	ldr	x0, [x0, #8]
  4322bc:	and	x2, x1, x0
  4322c0:	add	x0, sp, #0x70
  4322c4:	ldr	x1, [sp, #240]
  4322c8:	str	x2, [x0, x1, lsl #3]
  4322cc:	add	x0, sp, #0x70
  4322d0:	ldr	x1, [sp, #240]
  4322d4:	ldr	x0, [x0, x1, lsl #3]
  4322d8:	ldr	x1, [sp, #216]
  4322dc:	orr	x0, x1, x0
  4322e0:	str	x0, [sp, #216]
  4322e4:	ldr	x0, [sp, #240]
  4322e8:	add	x0, x0, #0x1
  4322ec:	str	x0, [sp, #240]
  4322f0:	ldr	x0, [sp, #240]
  4322f4:	cmp	x0, #0x3
  4322f8:	b.le	432298 <_obstack_memory_used@@Base+0x160b8>
  4322fc:	ldr	x0, [sp, #216]
  432300:	cmp	x0, #0x0
  432304:	b.eq	432808 <_obstack_memory_used@@Base+0x16628>  // b.none
  432308:	ldr	w0, [sp, #160]
  43230c:	and	w0, w0, #0x8
  432310:	cmp	w0, #0x0
  432314:	b.eq	432468 <_obstack_memory_used@@Base+0x16288>  // b.none
  432318:	str	xzr, [sp, #208]
  43231c:	ldr	w0, [sp, #164]
  432320:	cmp	w0, #0x1
  432324:	b.ne	43234c <_obstack_memory_used@@Base+0x1616c>  // b.any
  432328:	ldr	x0, [sp, #168]
  43232c:	ldrb	w0, [x0, #10]
  432330:	and	w0, w0, #0x40
  432334:	and	w0, w0, #0xff
  432338:	cmp	w0, #0x0
  43233c:	b.eq	43234c <_obstack_memory_used@@Base+0x1616c>  // b.none
  432340:	add	x0, sp, #0x70
  432344:	bl	41c3e4 <_obstack_memory_used@@Base+0x204>
  432348:	b	432814 <_obstack_memory_used@@Base+0x16634>
  43234c:	ldr	x0, [sp, #40]
  432350:	ldr	w0, [x0, #180]
  432354:	cmp	w0, #0x1
  432358:	b.le	4323ec <_obstack_memory_used@@Base+0x1620c>
  43235c:	str	xzr, [sp, #240]
  432360:	b	4323dc <_obstack_memory_used@@Base+0x161fc>
  432364:	add	x0, sp, #0x70
  432368:	ldr	x1, [sp, #240]
  43236c:	ldr	x1, [x0, x1, lsl #3]
  432370:	ldr	x2, [sp, #40]
  432374:	ldr	x0, [sp, #240]
  432378:	add	x0, x0, #0x16
  43237c:	lsl	x0, x0, #3
  432380:	add	x0, x2, x0
  432384:	ldr	x2, [x0, #8]
  432388:	ldr	x0, [sp, #40]
  43238c:	ldr	x3, [x0, #120]
  432390:	ldr	x0, [sp, #240]
  432394:	lsl	x0, x0, #3
  432398:	add	x0, x3, x0
  43239c:	ldr	x0, [x0]
  4323a0:	and	x0, x2, x0
  4323a4:	mvn	x0, x0
  4323a8:	and	x2, x1, x0
  4323ac:	add	x0, sp, #0x70
  4323b0:	ldr	x1, [sp, #240]
  4323b4:	str	x2, [x0, x1, lsl #3]
  4323b8:	add	x0, sp, #0x70
  4323bc:	ldr	x1, [sp, #240]
  4323c0:	ldr	x0, [x0, x1, lsl #3]
  4323c4:	ldr	x1, [sp, #208]
  4323c8:	orr	x0, x1, x0
  4323cc:	str	x0, [sp, #208]
  4323d0:	ldr	x0, [sp, #240]
  4323d4:	add	x0, x0, #0x1
  4323d8:	str	x0, [sp, #240]
  4323dc:	ldr	x0, [sp, #240]
  4323e0:	cmp	x0, #0x3
  4323e4:	b.le	432364 <_obstack_memory_used@@Base+0x16184>
  4323e8:	b	43245c <_obstack_memory_used@@Base+0x1627c>
  4323ec:	str	xzr, [sp, #240]
  4323f0:	b	432450 <_obstack_memory_used@@Base+0x16270>
  4323f4:	add	x0, sp, #0x70
  4323f8:	ldr	x1, [sp, #240]
  4323fc:	ldr	x1, [x0, x1, lsl #3]
  432400:	ldr	x2, [sp, #40]
  432404:	ldr	x0, [sp, #240]
  432408:	add	x0, x0, #0x16
  43240c:	lsl	x0, x0, #3
  432410:	add	x0, x2, x0
  432414:	ldr	x0, [x0, #8]
  432418:	mvn	x0, x0
  43241c:	and	x2, x1, x0
  432420:	add	x0, sp, #0x70
  432424:	ldr	x1, [sp, #240]
  432428:	str	x2, [x0, x1, lsl #3]
  43242c:	add	x0, sp, #0x70
  432430:	ldr	x1, [sp, #240]
  432434:	ldr	x0, [x0, x1, lsl #3]
  432438:	ldr	x1, [sp, #208]
  43243c:	orr	x0, x1, x0
  432440:	str	x0, [sp, #208]
  432444:	ldr	x0, [sp, #240]
  432448:	add	x0, x0, #0x1
  43244c:	str	x0, [sp, #240]
  432450:	ldr	x0, [sp, #240]
  432454:	cmp	x0, #0x3
  432458:	b.le	4323f4 <_obstack_memory_used@@Base+0x16214>
  43245c:	ldr	x0, [sp, #208]
  432460:	cmp	x0, #0x0
  432464:	b.eq	432810 <_obstack_memory_used@@Base+0x16630>  // b.none
  432468:	str	xzr, [sp, #240]
  43246c:	b	43273c <_obstack_memory_used@@Base+0x1655c>
  432470:	ldr	w0, [sp, #164]
  432474:	cmp	w0, #0x1
  432478:	b.ne	4324b8 <_obstack_memory_used@@Base+0x162d8>  // b.any
  43247c:	ldr	x0, [sp, #240]
  432480:	lsl	x0, x0, #5
  432484:	ldr	x1, [sp, #16]
  432488:	add	x2, x1, x0
  43248c:	ldr	x0, [sp, #168]
  432490:	ldrb	w0, [x0]
  432494:	and	x0, x0, #0xff
  432498:	mov	x1, x0
  43249c:	mov	x0, x2
  4324a0:	bl	41c384 <_obstack_memory_used@@Base+0x1a4>
  4324a4:	and	w0, w0, #0xff
  4324a8:	eor	w0, w0, #0x1
  4324ac:	and	w0, w0, #0xff
  4324b0:	cmp	w0, #0x0
  4324b4:	b.ne	432724 <_obstack_memory_used@@Base+0x16544>  // b.any
  4324b8:	str	xzr, [sp, #200]
  4324bc:	str	xzr, [sp, #232]
  4324c0:	b	43251c <_obstack_memory_used@@Base+0x1633c>
  4324c4:	add	x0, sp, #0x70
  4324c8:	ldr	x1, [sp, #232]
  4324cc:	ldr	x1, [x0, x1, lsl #3]
  4324d0:	ldr	x0, [sp, #240]
  4324d4:	lsl	x0, x0, #5
  4324d8:	ldr	x2, [sp, #16]
  4324dc:	add	x0, x2, x0
  4324e0:	ldr	x2, [sp, #232]
  4324e4:	ldr	x0, [x0, x2, lsl #3]
  4324e8:	and	x2, x1, x0
  4324ec:	add	x0, sp, #0x30
  4324f0:	ldr	x1, [sp, #232]
  4324f4:	str	x2, [x0, x1, lsl #3]
  4324f8:	add	x0, sp, #0x30
  4324fc:	ldr	x1, [sp, #232]
  432500:	ldr	x0, [x0, x1, lsl #3]
  432504:	ldr	x1, [sp, #200]
  432508:	orr	x0, x1, x0
  43250c:	str	x0, [sp, #200]
  432510:	ldr	x0, [sp, #232]
  432514:	add	x0, x0, #0x1
  432518:	str	x0, [sp, #232]
  43251c:	ldr	x0, [sp, #232]
  432520:	cmp	x0, #0x3
  432524:	b.le	4324c4 <_obstack_memory_used@@Base+0x162e4>
  432528:	ldr	x0, [sp, #200]
  43252c:	cmp	x0, #0x0
  432530:	b.eq	43272c <_obstack_memory_used@@Base+0x1654c>  // b.none
  432534:	str	xzr, [sp, #184]
  432538:	ldr	x0, [sp, #184]
  43253c:	str	x0, [sp, #192]
  432540:	str	xzr, [sp, #232]
  432544:	b	4325f4 <_obstack_memory_used@@Base+0x16414>
  432548:	add	x0, sp, #0x70
  43254c:	ldr	x1, [sp, #232]
  432550:	ldr	x0, [x0, x1, lsl #3]
  432554:	mvn	x1, x0
  432558:	ldr	x0, [sp, #240]
  43255c:	lsl	x0, x0, #5
  432560:	ldr	x2, [sp, #16]
  432564:	add	x0, x2, x0
  432568:	ldr	x2, [sp, #232]
  43256c:	ldr	x0, [x0, x2, lsl #3]
  432570:	and	x2, x1, x0
  432574:	add	x0, sp, #0x50
  432578:	ldr	x1, [sp, #232]
  43257c:	str	x2, [x0, x1, lsl #3]
  432580:	add	x0, sp, #0x50
  432584:	ldr	x1, [sp, #232]
  432588:	ldr	x0, [x0, x1, lsl #3]
  43258c:	ldr	x1, [sp, #192]
  432590:	orr	x0, x1, x0
  432594:	str	x0, [sp, #192]
  432598:	add	x0, sp, #0x70
  43259c:	ldr	x1, [sp, #232]
  4325a0:	ldr	x1, [x0, x1, lsl #3]
  4325a4:	ldr	x0, [sp, #240]
  4325a8:	lsl	x0, x0, #5
  4325ac:	ldr	x2, [sp, #16]
  4325b0:	add	x0, x2, x0
  4325b4:	ldr	x2, [sp, #232]
  4325b8:	ldr	x0, [x0, x2, lsl #3]
  4325bc:	mvn	x0, x0
  4325c0:	and	x2, x1, x0
  4325c4:	add	x0, sp, #0x70
  4325c8:	ldr	x1, [sp, #232]
  4325cc:	str	x2, [x0, x1, lsl #3]
  4325d0:	add	x0, sp, #0x70
  4325d4:	ldr	x1, [sp, #232]
  4325d8:	ldr	x0, [x0, x1, lsl #3]
  4325dc:	ldr	x1, [sp, #184]
  4325e0:	orr	x0, x1, x0
  4325e4:	str	x0, [sp, #184]
  4325e8:	ldr	x0, [sp, #232]
  4325ec:	add	x0, x0, #0x1
  4325f0:	str	x0, [sp, #232]
  4325f4:	ldr	x0, [sp, #232]
  4325f8:	cmp	x0, #0x3
  4325fc:	b.le	432548 <_obstack_memory_used@@Base+0x16368>
  432600:	ldr	x0, [sp, #192]
  432604:	cmp	x0, #0x0
  432608:	b.eq	4326b4 <_obstack_memory_used@@Base+0x164d4>  // b.none
  43260c:	ldr	x0, [sp, #224]
  432610:	lsl	x0, x0, #5
  432614:	ldr	x1, [sp, #16]
  432618:	add	x0, x1, x0
  43261c:	add	x1, sp, #0x50
  432620:	bl	41c434 <_obstack_memory_used@@Base+0x254>
  432624:	ldr	x0, [sp, #240]
  432628:	lsl	x0, x0, #5
  43262c:	ldr	x1, [sp, #16]
  432630:	add	x0, x1, x0
  432634:	add	x1, sp, #0x30
  432638:	bl	41c434 <_obstack_memory_used@@Base+0x254>
  43263c:	ldr	x1, [sp, #224]
  432640:	mov	x0, x1
  432644:	lsl	x0, x0, #1
  432648:	add	x0, x0, x1
  43264c:	lsl	x0, x0, #3
  432650:	mov	x1, x0
  432654:	ldr	x0, [sp, #24]
  432658:	add	x2, x0, x1
  43265c:	ldr	x1, [sp, #240]
  432660:	mov	x0, x1
  432664:	lsl	x0, x0, #1
  432668:	add	x0, x0, x1
  43266c:	lsl	x0, x0, #3
  432670:	mov	x1, x0
  432674:	ldr	x0, [sp, #24]
  432678:	add	x0, x0, x1
  43267c:	mov	x1, x0
  432680:	mov	x0, x2
  432684:	bl	41f218 <_obstack_memory_used@@Base+0x3038>
  432688:	str	w0, [sp, #152]
  43268c:	ldr	w0, [sp, #152]
  432690:	cmp	w0, #0x0
  432694:	cset	w0, ne  // ne = any
  432698:	and	w0, w0, #0xff
  43269c:	and	x0, x0, #0xff
  4326a0:	cmp	x0, #0x0
  4326a4:	b.ne	432844 <_obstack_memory_used@@Base+0x16664>  // b.any
  4326a8:	ldr	x0, [sp, #224]
  4326ac:	add	x0, x0, #0x1
  4326b0:	str	x0, [sp, #224]
  4326b4:	ldr	x1, [sp, #240]
  4326b8:	mov	x0, x1
  4326bc:	lsl	x0, x0, #1
  4326c0:	add	x0, x0, x1
  4326c4:	lsl	x0, x0, #3
  4326c8:	mov	x1, x0
  4326cc:	ldr	x0, [sp, #24]
  4326d0:	add	x2, x0, x1
  4326d4:	ldr	x0, [sp, #176]
  4326d8:	ldr	x1, [x0, #16]
  4326dc:	ldr	x0, [sp, #248]
  4326e0:	lsl	x0, x0, #3
  4326e4:	add	x0, x1, x0
  4326e8:	ldr	x0, [x0]
  4326ec:	mov	x1, x0
  4326f0:	mov	x0, x2
  4326f4:	bl	41ff4c <_obstack_memory_used@@Base+0x3d6c>
  4326f8:	strb	w0, [sp, #151]
  4326fc:	ldrb	w0, [sp, #151]
  432700:	eor	w0, w0, #0x1
  432704:	and	w0, w0, #0xff
  432708:	and	x0, x0, #0xff
  43270c:	cmp	x0, #0x0
  432710:	b.ne	43284c <_obstack_memory_used@@Base+0x1666c>  // b.any
  432714:	ldr	x0, [sp, #184]
  432718:	cmp	x0, #0x0
  43271c:	b.eq	432750 <_obstack_memory_used@@Base+0x16570>  // b.none
  432720:	b	432730 <_obstack_memory_used@@Base+0x16550>
  432724:	nop
  432728:	b	432730 <_obstack_memory_used@@Base+0x16550>
  43272c:	nop
  432730:	ldr	x0, [sp, #240]
  432734:	add	x0, x0, #0x1
  432738:	str	x0, [sp, #240]
  43273c:	ldr	x1, [sp, #240]
  432740:	ldr	x0, [sp, #224]
  432744:	cmp	x1, x0
  432748:	b.lt	432470 <_obstack_memory_used@@Base+0x16290>  // b.tstop
  43274c:	b	432754 <_obstack_memory_used@@Base+0x16574>
  432750:	nop
  432754:	ldr	x1, [sp, #240]
  432758:	ldr	x0, [sp, #224]
  43275c:	cmp	x1, x0
  432760:	b.ne	432814 <_obstack_memory_used@@Base+0x16634>  // b.any
  432764:	ldr	x0, [sp, #224]
  432768:	lsl	x0, x0, #5
  43276c:	ldr	x1, [sp, #16]
  432770:	add	x0, x1, x0
  432774:	add	x1, sp, #0x70
  432778:	bl	41c434 <_obstack_memory_used@@Base+0x254>
  43277c:	ldr	x1, [sp, #224]
  432780:	mov	x0, x1
  432784:	lsl	x0, x0, #1
  432788:	add	x0, x0, x1
  43278c:	lsl	x0, x0, #3
  432790:	mov	x1, x0
  432794:	ldr	x0, [sp, #24]
  432798:	add	x2, x0, x1
  43279c:	ldr	x0, [sp, #176]
  4327a0:	ldr	x1, [x0, #16]
  4327a4:	ldr	x0, [sp, #248]
  4327a8:	lsl	x0, x0, #3
  4327ac:	add	x0, x1, x0
  4327b0:	ldr	x0, [x0]
  4327b4:	mov	x1, x0
  4327b8:	mov	x0, x2
  4327bc:	bl	41f080 <_obstack_memory_used@@Base+0x2ea0>
  4327c0:	str	w0, [sp, #152]
  4327c4:	ldr	w0, [sp, #152]
  4327c8:	cmp	w0, #0x0
  4327cc:	cset	w0, ne  // ne = any
  4327d0:	and	w0, w0, #0xff
  4327d4:	and	x0, x0, #0xff
  4327d8:	cmp	x0, #0x0
  4327dc:	b.ne	432854 <_obstack_memory_used@@Base+0x16674>  // b.any
  4327e0:	ldr	x0, [sp, #224]
  4327e4:	add	x0, x0, #0x1
  4327e8:	str	x0, [sp, #224]
  4327ec:	add	x0, sp, #0x70
  4327f0:	bl	41c3e4 <_obstack_memory_used@@Base+0x204>
  4327f4:	b	432814 <_obstack_memory_used@@Base+0x16634>
  4327f8:	nop
  4327fc:	b	432814 <_obstack_memory_used@@Base+0x16634>
  432800:	nop
  432804:	b	432814 <_obstack_memory_used@@Base+0x16634>
  432808:	nop
  43280c:	b	432814 <_obstack_memory_used@@Base+0x16634>
  432810:	nop
  432814:	ldr	x0, [sp, #248]
  432818:	add	x0, x0, #0x1
  43281c:	str	x0, [sp, #248]
  432820:	ldr	x0, [sp, #176]
  432824:	ldr	x0, [x0, #8]
  432828:	ldr	x1, [sp, #248]
  43282c:	cmp	x1, x0
  432830:	b.lt	431fdc <_obstack_memory_used@@Base+0x15dfc>  // b.tstop
  432834:	ldr	x0, [sp, #224]
  432838:	cmp	x0, #0x100
  43283c:	ldr	x0, [sp, #224]
  432840:	b	4328a8 <_obstack_memory_used@@Base+0x166c8>
  432844:	nop
  432848:	b	432858 <_obstack_memory_used@@Base+0x16678>
  43284c:	nop
  432850:	b	432858 <_obstack_memory_used@@Base+0x16678>
  432854:	nop
  432858:	str	xzr, [sp, #240]
  43285c:	b	432894 <_obstack_memory_used@@Base+0x166b4>
  432860:	ldr	x1, [sp, #240]
  432864:	mov	x0, x1
  432868:	lsl	x0, x0, #1
  43286c:	add	x0, x0, x1
  432870:	lsl	x0, x0, #3
  432874:	mov	x1, x0
  432878:	ldr	x0, [sp, #24]
  43287c:	add	x0, x0, x1
  432880:	ldr	x0, [x0, #16]
  432884:	bl	402b60 <free@plt>
  432888:	ldr	x0, [sp, #240]
  43288c:	add	x0, x0, #0x1
  432890:	str	x0, [sp, #240]
  432894:	ldr	x1, [sp, #240]
  432898:	ldr	x0, [sp, #224]
  43289c:	cmp	x1, x0
  4328a0:	b.lt	432860 <_obstack_memory_used@@Base+0x16680>  // b.tstop
  4328a4:	mov	x0, #0xffffffffffffffff    	// #-1
  4328a8:	ldp	x29, x30, [sp], #256
  4328ac:	ret
  4328b0:	stp	x29, x30, [sp, #-128]!
  4328b4:	mov	x29, sp
  4328b8:	str	x0, [sp, #40]
  4328bc:	str	x1, [sp, #32]
  4328c0:	str	x2, [sp, #24]
  4328c4:	str	x3, [sp, #16]
  4328c8:	ldr	x0, [sp, #40]
  4328cc:	ldr	x1, [x0]
  4328d0:	ldr	x0, [sp, #32]
  4328d4:	lsl	x0, x0, #4
  4328d8:	add	x0, x1, x0
  4328dc:	str	x0, [sp, #96]
  4328e0:	ldr	x0, [sp, #96]
  4328e4:	ldrb	w0, [x0, #8]
  4328e8:	cmp	w0, #0x7
  4328ec:	cset	w0, eq  // eq = none
  4328f0:	and	w0, w0, #0xff
  4328f4:	and	x0, x0, #0xff
  4328f8:	cmp	x0, #0x0
  4328fc:	b.eq	432b18 <_obstack_memory_used@@Base+0x16938>  // b.none
  432900:	ldr	x0, [sp, #24]
  432904:	ldr	x1, [x0, #8]
  432908:	ldr	x0, [sp, #16]
  43290c:	add	x0, x1, x0
  432910:	ldrb	w0, [x0]
  432914:	strb	w0, [sp, #63]
  432918:	ldrb	w0, [sp, #63]
  43291c:	cmp	w0, #0xc1
  432920:	cset	w0, ls  // ls = plast
  432924:	and	w0, w0, #0xff
  432928:	and	x0, x0, #0xff
  43292c:	cmp	x0, #0x0
  432930:	b.eq	43293c <_obstack_memory_used@@Base+0x1675c>  // b.none
  432934:	mov	w0, #0x0                   	// #0
  432938:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  43293c:	ldr	x0, [sp, #16]
  432940:	add	x1, x0, #0x1
  432944:	ldr	x0, [sp, #24]
  432948:	ldr	x0, [x0, #88]
  43294c:	cmp	x1, x0
  432950:	b.lt	43295c <_obstack_memory_used@@Base+0x1677c>  // b.tstop
  432954:	mov	w0, #0x0                   	// #0
  432958:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  43295c:	ldr	x0, [sp, #24]
  432960:	ldr	x1, [x0, #8]
  432964:	ldr	x0, [sp, #16]
  432968:	add	x0, x0, #0x1
  43296c:	add	x0, x1, x0
  432970:	ldrb	w0, [x0]
  432974:	strb	w0, [sp, #62]
  432978:	ldrb	w0, [sp, #63]
  43297c:	cmp	w0, #0xdf
  432980:	b.hi	4329ac <_obstack_memory_used@@Base+0x167cc>  // b.pmore
  432984:	ldrsb	w0, [sp, #62]
  432988:	cmp	w0, #0x0
  43298c:	b.ge	43299c <_obstack_memory_used@@Base+0x167bc>  // b.tcont
  432990:	ldrb	w0, [sp, #62]
  432994:	cmp	w0, #0xbf
  432998:	b.ls	4329a4 <_obstack_memory_used@@Base+0x167c4>  // b.plast
  43299c:	mov	w0, #0x0                   	// #0
  4329a0:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  4329a4:	mov	w0, #0x2                   	// #2
  4329a8:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  4329ac:	ldrb	w0, [sp, #63]
  4329b0:	cmp	w0, #0xef
  4329b4:	b.hi	4329e0 <_obstack_memory_used@@Base+0x16800>  // b.pmore
  4329b8:	mov	w0, #0x3                   	// #3
  4329bc:	str	w0, [sp, #124]
  4329c0:	ldrb	w0, [sp, #63]
  4329c4:	cmp	w0, #0xe0
  4329c8:	b.ne	432a84 <_obstack_memory_used@@Base+0x168a4>  // b.any
  4329cc:	ldrb	w0, [sp, #62]
  4329d0:	cmp	w0, #0x9f
  4329d4:	b.hi	432a84 <_obstack_memory_used@@Base+0x168a4>  // b.pmore
  4329d8:	mov	w0, #0x0                   	// #0
  4329dc:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  4329e0:	ldrb	w0, [sp, #63]
  4329e4:	cmp	w0, #0xf7
  4329e8:	b.hi	432a14 <_obstack_memory_used@@Base+0x16834>  // b.pmore
  4329ec:	mov	w0, #0x4                   	// #4
  4329f0:	str	w0, [sp, #124]
  4329f4:	ldrb	w0, [sp, #63]
  4329f8:	cmp	w0, #0xf0
  4329fc:	b.ne	432a84 <_obstack_memory_used@@Base+0x168a4>  // b.any
  432a00:	ldrb	w0, [sp, #62]
  432a04:	cmp	w0, #0x8f
  432a08:	b.hi	432a84 <_obstack_memory_used@@Base+0x168a4>  // b.pmore
  432a0c:	mov	w0, #0x0                   	// #0
  432a10:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  432a14:	ldrb	w0, [sp, #63]
  432a18:	cmp	w0, #0xfb
  432a1c:	b.hi	432a48 <_obstack_memory_used@@Base+0x16868>  // b.pmore
  432a20:	mov	w0, #0x5                   	// #5
  432a24:	str	w0, [sp, #124]
  432a28:	ldrb	w0, [sp, #63]
  432a2c:	cmp	w0, #0xf8
  432a30:	b.ne	432a84 <_obstack_memory_used@@Base+0x168a4>  // b.any
  432a34:	ldrb	w0, [sp, #62]
  432a38:	cmp	w0, #0x87
  432a3c:	b.hi	432a84 <_obstack_memory_used@@Base+0x168a4>  // b.pmore
  432a40:	mov	w0, #0x0                   	// #0
  432a44:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  432a48:	ldrb	w0, [sp, #63]
  432a4c:	cmp	w0, #0xfd
  432a50:	b.hi	432a7c <_obstack_memory_used@@Base+0x1689c>  // b.pmore
  432a54:	mov	w0, #0x6                   	// #6
  432a58:	str	w0, [sp, #124]
  432a5c:	ldrb	w0, [sp, #63]
  432a60:	cmp	w0, #0xfc
  432a64:	b.ne	432a84 <_obstack_memory_used@@Base+0x168a4>  // b.any
  432a68:	ldrb	w0, [sp, #62]
  432a6c:	cmp	w0, #0x83
  432a70:	b.hi	432a84 <_obstack_memory_used@@Base+0x168a4>  // b.pmore
  432a74:	mov	w0, #0x0                   	// #0
  432a78:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  432a7c:	mov	w0, #0x0                   	// #0
  432a80:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  432a84:	ldrsw	x1, [sp, #124]
  432a88:	ldr	x0, [sp, #16]
  432a8c:	add	x1, x1, x0
  432a90:	ldr	x0, [sp, #24]
  432a94:	ldr	x0, [x0, #88]
  432a98:	cmp	x1, x0
  432a9c:	b.le	432aa8 <_obstack_memory_used@@Base+0x168c8>
  432aa0:	mov	w0, #0x0                   	// #0
  432aa4:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  432aa8:	mov	x0, #0x1                   	// #1
  432aac:	str	x0, [sp, #112]
  432ab0:	b	432b00 <_obstack_memory_used@@Base+0x16920>
  432ab4:	ldr	x0, [sp, #24]
  432ab8:	ldr	x0, [x0, #8]
  432abc:	ldr	x2, [sp, #16]
  432ac0:	ldr	x1, [sp, #112]
  432ac4:	add	x1, x2, x1
  432ac8:	add	x0, x0, x1
  432acc:	ldrb	w0, [x0]
  432ad0:	strb	w0, [sp, #62]
  432ad4:	ldrsb	w0, [sp, #62]
  432ad8:	cmp	w0, #0x0
  432adc:	b.ge	432aec <_obstack_memory_used@@Base+0x1690c>  // b.tcont
  432ae0:	ldrb	w0, [sp, #62]
  432ae4:	cmp	w0, #0xbf
  432ae8:	b.ls	432af4 <_obstack_memory_used@@Base+0x16914>  // b.plast
  432aec:	mov	w0, #0x0                   	// #0
  432af0:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  432af4:	ldr	x0, [sp, #112]
  432af8:	add	x0, x0, #0x1
  432afc:	str	x0, [sp, #112]
  432b00:	ldrsw	x0, [sp, #124]
  432b04:	ldr	x1, [sp, #112]
  432b08:	cmp	x1, x0
  432b0c:	b.lt	432ab4 <_obstack_memory_used@@Base+0x168d4>  // b.tstop
  432b10:	ldr	w0, [sp, #124]
  432b14:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  432b18:	ldr	x1, [sp, #16]
  432b1c:	ldr	x0, [sp, #24]
  432b20:	bl	41c5bc <_obstack_memory_used@@Base+0x3dc>
  432b24:	str	w0, [sp, #124]
  432b28:	ldr	x0, [sp, #96]
  432b2c:	ldrb	w0, [x0, #8]
  432b30:	cmp	w0, #0x5
  432b34:	b.ne	432bbc <_obstack_memory_used@@Base+0x169dc>  // b.any
  432b38:	ldr	w0, [sp, #124]
  432b3c:	cmp	w0, #0x1
  432b40:	b.gt	432b4c <_obstack_memory_used@@Base+0x1696c>
  432b44:	mov	w0, #0x0                   	// #0
  432b48:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  432b4c:	ldr	x0, [sp, #40]
  432b50:	ldr	x0, [x0, #216]
  432b54:	and	x0, x0, #0x40
  432b58:	cmp	x0, #0x0
  432b5c:	b.ne	432b7c <_obstack_memory_used@@Base+0x1699c>  // b.any
  432b60:	ldr	x0, [sp, #24]
  432b64:	ldr	x1, [x0, #8]
  432b68:	ldr	x0, [sp, #16]
  432b6c:	add	x0, x1, x0
  432b70:	ldrb	w0, [x0]
  432b74:	cmp	w0, #0xa
  432b78:	b.eq	432bac <_obstack_memory_used@@Base+0x169cc>  // b.none
  432b7c:	ldr	x0, [sp, #40]
  432b80:	ldr	x0, [x0, #216]
  432b84:	and	x0, x0, #0x80
  432b88:	cmp	x0, #0x0
  432b8c:	b.eq	432bb4 <_obstack_memory_used@@Base+0x169d4>  // b.none
  432b90:	ldr	x0, [sp, #24]
  432b94:	ldr	x1, [x0, #8]
  432b98:	ldr	x0, [sp, #16]
  432b9c:	add	x0, x1, x0
  432ba0:	ldrb	w0, [x0]
  432ba4:	cmp	w0, #0x0
  432ba8:	b.ne	432bb4 <_obstack_memory_used@@Base+0x169d4>  // b.any
  432bac:	mov	w0, #0x0                   	// #0
  432bb0:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  432bb4:	ldr	w0, [sp, #124]
  432bb8:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  432bbc:	ldr	x1, [sp, #16]
  432bc0:	ldr	x0, [sp, #24]
  432bc4:	bl	41c6a4 <_obstack_memory_used@@Base+0x4c4>
  432bc8:	str	w0, [sp, #92]
  432bcc:	ldr	w0, [sp, #92]
  432bd0:	cmp	w0, #0x1
  432bd4:	b.gt	432be4 <_obstack_memory_used@@Base+0x16a04>
  432bd8:	ldr	w0, [sp, #124]
  432bdc:	cmp	w0, #0x1
  432be0:	b.le	432bf0 <_obstack_memory_used@@Base+0x16a10>
  432be4:	ldr	w0, [sp, #124]
  432be8:	cmp	w0, #0x0
  432bec:	b.ne	432bf8 <_obstack_memory_used@@Base+0x16a18>  // b.any
  432bf0:	mov	w0, #0x0                   	// #0
  432bf4:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  432bf8:	ldr	x0, [sp, #96]
  432bfc:	ldrb	w0, [x0, #8]
  432c00:	cmp	w0, #0x6
  432c04:	b.ne	432de8 <_obstack_memory_used@@Base+0x16c08>  // b.any
  432c08:	ldr	x0, [sp, #96]
  432c0c:	ldr	x0, [x0]
  432c10:	str	x0, [sp, #80]
  432c14:	str	wzr, [sp, #108]
  432c18:	ldr	x0, [sp, #80]
  432c1c:	ldr	x0, [x0, #64]
  432c20:	cmp	x0, #0x0
  432c24:	b.ne	432c48 <_obstack_memory_used@@Base+0x16a68>  // b.any
  432c28:	ldr	x0, [sp, #80]
  432c2c:	ldr	x0, [x0, #72]
  432c30:	cmp	x0, #0x0
  432c34:	b.ne	432c48 <_obstack_memory_used@@Base+0x16a68>  // b.any
  432c38:	ldr	x0, [sp, #80]
  432c3c:	ldr	x0, [x0, #40]
  432c40:	cmp	x0, #0x0
  432c44:	b.eq	432c58 <_obstack_memory_used@@Base+0x16a78>  // b.none
  432c48:	ldr	x1, [sp, #16]
  432c4c:	ldr	x0, [sp, #24]
  432c50:	bl	41c650 <_obstack_memory_used@@Base+0x470>
  432c54:	b	432c5c <_obstack_memory_used@@Base+0x16a7c>
  432c58:	mov	w0, #0x0                   	// #0
  432c5c:	str	w0, [sp, #76]
  432c60:	str	xzr, [sp, #112]
  432c64:	b	432ca4 <_obstack_memory_used@@Base+0x16ac4>
  432c68:	ldr	x0, [sp, #80]
  432c6c:	ldr	x1, [x0]
  432c70:	ldr	x0, [sp, #112]
  432c74:	lsl	x0, x0, #2
  432c78:	add	x0, x1, x0
  432c7c:	ldr	w0, [x0]
  432c80:	ldr	w1, [sp, #76]
  432c84:	cmp	w1, w0
  432c88:	b.ne	432c98 <_obstack_memory_used@@Base+0x16ab8>  // b.any
  432c8c:	ldr	w0, [sp, #124]
  432c90:	str	w0, [sp, #108]
  432c94:	b	432d9c <_obstack_memory_used@@Base+0x16bbc>
  432c98:	ldr	x0, [sp, #112]
  432c9c:	add	x0, x0, #0x1
  432ca0:	str	x0, [sp, #112]
  432ca4:	ldr	x0, [sp, #80]
  432ca8:	ldr	x0, [x0, #40]
  432cac:	ldr	x1, [sp, #112]
  432cb0:	cmp	x1, x0
  432cb4:	b.lt	432c68 <_obstack_memory_used@@Base+0x16a88>  // b.tstop
  432cb8:	str	xzr, [sp, #112]
  432cbc:	b	432d08 <_obstack_memory_used@@Base+0x16b28>
  432cc0:	ldr	x0, [sp, #80]
  432cc4:	ldr	x1, [x0, #24]
  432cc8:	ldr	x0, [sp, #112]
  432ccc:	lsl	x0, x0, #3
  432cd0:	add	x0, x1, x0
  432cd4:	ldr	x0, [x0]
  432cd8:	str	x0, [sp, #64]
  432cdc:	ldr	x1, [sp, #64]
  432ce0:	ldr	w0, [sp, #76]
  432ce4:	bl	4028a0 <iswctype@plt>
  432ce8:	cmp	w0, #0x0
  432cec:	b.eq	432cfc <_obstack_memory_used@@Base+0x16b1c>  // b.none
  432cf0:	ldr	w0, [sp, #124]
  432cf4:	str	w0, [sp, #108]
  432cf8:	b	432d9c <_obstack_memory_used@@Base+0x16bbc>
  432cfc:	ldr	x0, [sp, #112]
  432d00:	add	x0, x0, #0x1
  432d04:	str	x0, [sp, #112]
  432d08:	ldr	x0, [sp, #80]
  432d0c:	ldr	x0, [x0, #72]
  432d10:	ldr	x1, [sp, #112]
  432d14:	cmp	x1, x0
  432d18:	b.lt	432cc0 <_obstack_memory_used@@Base+0x16ae0>  // b.tstop
  432d1c:	str	xzr, [sp, #112]
  432d20:	b	432d84 <_obstack_memory_used@@Base+0x16ba4>
  432d24:	ldr	x0, [sp, #80]
  432d28:	ldr	x1, [x0, #8]
  432d2c:	ldr	x0, [sp, #112]
  432d30:	lsl	x0, x0, #2
  432d34:	add	x0, x1, x0
  432d38:	ldr	w0, [x0]
  432d3c:	ldr	w1, [sp, #76]
  432d40:	cmp	w1, w0
  432d44:	b.cc	432d78 <_obstack_memory_used@@Base+0x16b98>  // b.lo, b.ul, b.last
  432d48:	ldr	x0, [sp, #80]
  432d4c:	ldr	x1, [x0, #16]
  432d50:	ldr	x0, [sp, #112]
  432d54:	lsl	x0, x0, #2
  432d58:	add	x0, x1, x0
  432d5c:	ldr	w0, [x0]
  432d60:	ldr	w1, [sp, #76]
  432d64:	cmp	w1, w0
  432d68:	b.hi	432d78 <_obstack_memory_used@@Base+0x16b98>  // b.pmore
  432d6c:	ldr	w0, [sp, #124]
  432d70:	str	w0, [sp, #108]
  432d74:	b	432d9c <_obstack_memory_used@@Base+0x16bbc>
  432d78:	ldr	x0, [sp, #112]
  432d7c:	add	x0, x0, #0x1
  432d80:	str	x0, [sp, #112]
  432d84:	ldr	x0, [sp, #80]
  432d88:	ldr	x0, [x0, #64]
  432d8c:	ldr	x1, [sp, #112]
  432d90:	cmp	x1, x0
  432d94:	b.lt	432d24 <_obstack_memory_used@@Base+0x16b44>  // b.tstop
  432d98:	nop
  432d9c:	ldr	x0, [sp, #80]
  432da0:	ldrb	w0, [x0, #32]
  432da4:	and	w0, w0, #0x1
  432da8:	and	w0, w0, #0xff
  432dac:	cmp	w0, #0x0
  432db0:	b.ne	432dbc <_obstack_memory_used@@Base+0x16bdc>  // b.any
  432db4:	ldr	w0, [sp, #108]
  432db8:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  432dbc:	ldr	w0, [sp, #108]
  432dc0:	cmp	w0, #0x0
  432dc4:	b.le	432dd0 <_obstack_memory_used@@Base+0x16bf0>
  432dc8:	mov	w0, #0x0                   	// #0
  432dcc:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  432dd0:	ldr	w0, [sp, #92]
  432dd4:	ldr	w2, [sp, #124]
  432dd8:	ldr	w1, [sp, #124]
  432ddc:	cmp	w2, w0
  432de0:	csel	w0, w1, w0, ge  // ge = tcont
  432de4:	b	432dec <_obstack_memory_used@@Base+0x16c0c>
  432de8:	mov	w0, #0x0                   	// #0
  432dec:	ldp	x29, x30, [sp], #128
  432df0:	ret
  432df4:	stp	x29, x30, [sp, #-64]!
  432df8:	mov	x29, sp
  432dfc:	str	x0, [sp, #40]
  432e00:	str	x1, [sp, #32]
  432e04:	str	x2, [sp, #24]
  432e08:	ldr	x0, [sp, #40]
  432e0c:	ldr	x1, [x0, #8]
  432e10:	ldr	x0, [sp, #24]
  432e14:	add	x0, x1, x0
  432e18:	ldrb	w0, [x0]
  432e1c:	strb	w0, [sp, #63]
  432e20:	ldr	x0, [sp, #32]
  432e24:	ldrb	w0, [x0, #8]
  432e28:	cmp	w0, #0x7
  432e2c:	b.eq	432ea4 <_obstack_memory_used@@Base+0x16cc4>  // b.none
  432e30:	cmp	w0, #0x7
  432e34:	b.gt	432f08 <_obstack_memory_used@@Base+0x16d28>
  432e38:	cmp	w0, #0x5
  432e3c:	b.eq	432eb8 <_obstack_memory_used@@Base+0x16cd8>  // b.none
  432e40:	cmp	w0, #0x5
  432e44:	b.gt	432f08 <_obstack_memory_used@@Base+0x16d28>
  432e48:	cmp	w0, #0x1
  432e4c:	b.eq	432e5c <_obstack_memory_used@@Base+0x16c7c>  // b.none
  432e50:	cmp	w0, #0x3
  432e54:	b.eq	432e78 <_obstack_memory_used@@Base+0x16c98>  // b.none
  432e58:	b	432f08 <_obstack_memory_used@@Base+0x16d28>
  432e5c:	ldr	x0, [sp, #32]
  432e60:	ldrb	w0, [x0]
  432e64:	ldrb	w1, [sp, #63]
  432e68:	cmp	w1, w0
  432e6c:	b.eq	432f10 <_obstack_memory_used@@Base+0x16d30>  // b.none
  432e70:	mov	w0, #0x0                   	// #0
  432e74:	b	433014 <_obstack_memory_used@@Base+0x16e34>
  432e78:	ldr	x0, [sp, #32]
  432e7c:	ldr	x0, [x0]
  432e80:	ldrb	w1, [sp, #63]
  432e84:	bl	41c384 <_obstack_memory_used@@Base+0x1a4>
  432e88:	and	w0, w0, #0xff
  432e8c:	eor	w0, w0, #0x1
  432e90:	and	w0, w0, #0xff
  432e94:	cmp	w0, #0x0
  432e98:	b.eq	432f18 <_obstack_memory_used@@Base+0x16d38>  // b.none
  432e9c:	mov	w0, #0x0                   	// #0
  432ea0:	b	433014 <_obstack_memory_used@@Base+0x16e34>
  432ea4:	ldrsb	w0, [sp, #63]
  432ea8:	cmp	w0, #0x0
  432eac:	b.ge	432eb8 <_obstack_memory_used@@Base+0x16cd8>  // b.tcont
  432eb0:	mov	w0, #0x0                   	// #0
  432eb4:	b	433014 <_obstack_memory_used@@Base+0x16e34>
  432eb8:	ldrb	w0, [sp, #63]
  432ebc:	cmp	w0, #0xa
  432ec0:	b.ne	432edc <_obstack_memory_used@@Base+0x16cfc>  // b.any
  432ec4:	ldr	x0, [sp, #40]
  432ec8:	ldr	x0, [x0, #152]
  432ecc:	ldr	x0, [x0, #216]
  432ed0:	and	x0, x0, #0x40
  432ed4:	cmp	x0, #0x0
  432ed8:	b.eq	432f00 <_obstack_memory_used@@Base+0x16d20>  // b.none
  432edc:	ldrb	w0, [sp, #63]
  432ee0:	cmp	w0, #0x0
  432ee4:	b.ne	432f20 <_obstack_memory_used@@Base+0x16d40>  // b.any
  432ee8:	ldr	x0, [sp, #40]
  432eec:	ldr	x0, [x0, #152]
  432ef0:	ldr	x0, [x0, #216]
  432ef4:	and	x0, x0, #0x80
  432ef8:	cmp	x0, #0x0
  432efc:	b.eq	432f20 <_obstack_memory_used@@Base+0x16d40>  // b.none
  432f00:	mov	w0, #0x0                   	// #0
  432f04:	b	433014 <_obstack_memory_used@@Base+0x16e34>
  432f08:	mov	w0, #0x0                   	// #0
  432f0c:	b	433014 <_obstack_memory_used@@Base+0x16e34>
  432f10:	nop
  432f14:	b	432f24 <_obstack_memory_used@@Base+0x16d44>
  432f18:	nop
  432f1c:	b	432f24 <_obstack_memory_used@@Base+0x16d44>
  432f20:	nop
  432f24:	ldr	x0, [sp, #32]
  432f28:	ldr	w0, [x0, #8]
  432f2c:	and	w0, w0, #0x3ff00
  432f30:	cmp	w0, #0x0
  432f34:	b.eq	433010 <_obstack_memory_used@@Base+0x16e30>  // b.none
  432f38:	ldr	x3, [sp, #40]
  432f3c:	ldr	x0, [sp, #40]
  432f40:	ldr	w0, [x0, #160]
  432f44:	mov	w2, w0
  432f48:	ldr	x1, [sp, #24]
  432f4c:	mov	x0, x3
  432f50:	bl	41ee34 <_obstack_memory_used@@Base+0x2c54>
  432f54:	str	w0, [sp, #56]
  432f58:	ldr	x0, [sp, #32]
  432f5c:	ldr	w0, [x0, #8]
  432f60:	ubfx	x0, x0, #8, #10
  432f64:	and	w0, w0, #0xffff
  432f68:	and	w0, w0, #0x4
  432f6c:	cmp	w0, #0x0
  432f70:	b.eq	432f84 <_obstack_memory_used@@Base+0x16da4>  // b.none
  432f74:	ldr	w0, [sp, #56]
  432f78:	and	w0, w0, #0x1
  432f7c:	cmp	w0, #0x0
  432f80:	b.eq	433008 <_obstack_memory_used@@Base+0x16e28>  // b.none
  432f84:	ldr	x0, [sp, #32]
  432f88:	ldr	w0, [x0, #8]
  432f8c:	ubfx	x0, x0, #8, #10
  432f90:	and	w0, w0, #0xffff
  432f94:	and	w0, w0, #0x8
  432f98:	cmp	w0, #0x0
  432f9c:	b.eq	432fb0 <_obstack_memory_used@@Base+0x16dd0>  // b.none
  432fa0:	ldr	w0, [sp, #56]
  432fa4:	and	w0, w0, #0x1
  432fa8:	cmp	w0, #0x0
  432fac:	b.ne	433008 <_obstack_memory_used@@Base+0x16e28>  // b.any
  432fb0:	ldr	x0, [sp, #32]
  432fb4:	ldr	w0, [x0, #8]
  432fb8:	ubfx	x0, x0, #8, #10
  432fbc:	and	w0, w0, #0xffff
  432fc0:	and	w0, w0, #0x20
  432fc4:	cmp	w0, #0x0
  432fc8:	b.eq	432fdc <_obstack_memory_used@@Base+0x16dfc>  // b.none
  432fcc:	ldr	w0, [sp, #56]
  432fd0:	and	w0, w0, #0x2
  432fd4:	cmp	w0, #0x0
  432fd8:	b.eq	433008 <_obstack_memory_used@@Base+0x16e28>  // b.none
  432fdc:	ldr	x0, [sp, #32]
  432fe0:	ldr	w0, [x0, #8]
  432fe4:	ubfx	x0, x0, #8, #10
  432fe8:	and	w0, w0, #0xffff
  432fec:	and	w0, w0, #0x80
  432ff0:	cmp	w0, #0x0
  432ff4:	b.eq	433010 <_obstack_memory_used@@Base+0x16e30>  // b.none
  432ff8:	ldr	w0, [sp, #56]
  432ffc:	and	w0, w0, #0x8
  433000:	cmp	w0, #0x0
  433004:	b.ne	433010 <_obstack_memory_used@@Base+0x16e30>  // b.any
  433008:	mov	w0, #0x0                   	// #0
  43300c:	b	433014 <_obstack_memory_used@@Base+0x16e34>
  433010:	mov	w0, #0x1                   	// #1
  433014:	ldp	x29, x30, [sp], #64
  433018:	ret
  43301c:	stp	x29, x30, [sp, #-64]!
  433020:	mov	x29, sp
  433024:	str	x0, [sp, #24]
  433028:	str	w1, [sp, #20]
  43302c:	ldr	x0, [sp, #24]
  433030:	str	x0, [sp, #56]
  433034:	ldr	x0, [sp, #56]
  433038:	ldr	x0, [x0, #64]
  43303c:	mov	x1, x0
  433040:	mov	x0, #0xffffffffffffffe     	// #1152921504606846974
  433044:	cmp	x1, x0
  433048:	cset	w0, hi  // hi = pmore
  43304c:	and	w0, w0, #0xff
  433050:	and	x0, x0, #0xff
  433054:	cmp	x0, #0x0
  433058:	b.eq	433064 <_obstack_memory_used@@Base+0x16e84>  // b.none
  43305c:	mov	w0, #0xc                   	// #12
  433060:	b	4331bc <_obstack_memory_used@@Base+0x16fdc>
  433064:	ldrsw	x1, [sp, #20]
  433068:	ldr	x0, [sp, #56]
  43306c:	ldr	x0, [x0, #64]
  433070:	lsl	x2, x0, #1
  433074:	ldr	x0, [sp, #56]
  433078:	ldr	x0, [x0, #88]
  43307c:	cmp	x2, x0
  433080:	csel	x0, x2, x0, le
  433084:	cmp	x1, x0
  433088:	csel	x0, x1, x0, ge  // ge = tcont
  43308c:	mov	x1, x0
  433090:	ldr	x0, [sp, #56]
  433094:	bl	41ca18 <_obstack_memory_used@@Base+0x838>
  433098:	str	w0, [sp, #52]
  43309c:	ldr	w0, [sp, #52]
  4330a0:	cmp	w0, #0x0
  4330a4:	cset	w0, ne  // ne = any
  4330a8:	and	w0, w0, #0xff
  4330ac:	and	x0, x0, #0xff
  4330b0:	cmp	x0, #0x0
  4330b4:	b.eq	4330c0 <_obstack_memory_used@@Base+0x16ee0>  // b.none
  4330b8:	ldr	w0, [sp, #52]
  4330bc:	b	4331bc <_obstack_memory_used@@Base+0x16fdc>
  4330c0:	ldr	x0, [sp, #24]
  4330c4:	ldr	x0, [x0, #184]
  4330c8:	cmp	x0, #0x0
  4330cc:	b.eq	433128 <_obstack_memory_used@@Base+0x16f48>  // b.none
  4330d0:	ldr	x0, [sp, #24]
  4330d4:	ldr	x2, [x0, #184]
  4330d8:	ldr	x0, [sp, #56]
  4330dc:	ldr	x0, [x0, #64]
  4330e0:	add	x0, x0, #0x1
  4330e4:	lsl	x0, x0, #3
  4330e8:	mov	x1, x0
  4330ec:	mov	x0, x2
  4330f0:	bl	4029e0 <realloc@plt>
  4330f4:	str	x0, [sp, #40]
  4330f8:	ldr	x0, [sp, #40]
  4330fc:	cmp	x0, #0x0
  433100:	cset	w0, eq  // eq = none
  433104:	and	w0, w0, #0xff
  433108:	and	x0, x0, #0xff
  43310c:	cmp	x0, #0x0
  433110:	b.eq	43311c <_obstack_memory_used@@Base+0x16f3c>  // b.none
  433114:	mov	w0, #0xc                   	// #12
  433118:	b	4331bc <_obstack_memory_used@@Base+0x16fdc>
  43311c:	ldr	x0, [sp, #24]
  433120:	ldr	x1, [sp, #40]
  433124:	str	x1, [x0, #184]
  433128:	ldr	x0, [sp, #56]
  43312c:	ldrb	w0, [x0, #136]
  433130:	cmp	w0, #0x0
  433134:	b.eq	433184 <_obstack_memory_used@@Base+0x16fa4>  // b.none
  433138:	ldr	x0, [sp, #56]
  43313c:	ldr	w0, [x0, #144]
  433140:	cmp	w0, #0x1
  433144:	b.le	433178 <_obstack_memory_used@@Base+0x16f98>
  433148:	ldr	x0, [sp, #56]
  43314c:	bl	41cffc <_obstack_memory_used@@Base+0xe1c>
  433150:	str	w0, [sp, #52]
  433154:	ldr	w0, [sp, #52]
  433158:	cmp	w0, #0x0
  43315c:	cset	w0, ne  // ne = any
  433160:	and	w0, w0, #0xff
  433164:	and	x0, x0, #0xff
  433168:	cmp	x0, #0x0
  43316c:	b.eq	4331b8 <_obstack_memory_used@@Base+0x16fd8>  // b.none
  433170:	ldr	w0, [sp, #52]
  433174:	b	4331bc <_obstack_memory_used@@Base+0x16fdc>
  433178:	ldr	x0, [sp, #56]
  43317c:	bl	41dc70 <_obstack_memory_used@@Base+0x1a90>
  433180:	b	4331b8 <_obstack_memory_used@@Base+0x16fd8>
  433184:	ldr	x0, [sp, #56]
  433188:	ldr	w0, [x0, #144]
  43318c:	cmp	w0, #0x1
  433190:	b.le	4331a0 <_obstack_memory_used@@Base+0x16fc0>
  433194:	ldr	x0, [sp, #56]
  433198:	bl	41cca4 <_obstack_memory_used@@Base+0xac4>
  43319c:	b	4331b8 <_obstack_memory_used@@Base+0x16fd8>
  4331a0:	ldr	x0, [sp, #56]
  4331a4:	ldr	x0, [x0, #120]
  4331a8:	cmp	x0, #0x0
  4331ac:	b.eq	4331b8 <_obstack_memory_used@@Base+0x16fd8>  // b.none
  4331b0:	ldr	x0, [sp, #56]
  4331b4:	bl	41dd68 <_obstack_memory_used@@Base+0x1b88>
  4331b8:	mov	w0, #0x0                   	// #0
  4331bc:	ldp	x29, x30, [sp], #64
  4331c0:	ret
  4331c4:	stp	x29, x30, [sp, #-64]!
  4331c8:	mov	x29, sp
  4331cc:	str	x0, [sp, #40]
  4331d0:	str	w1, [sp, #36]
  4331d4:	str	x2, [sp, #24]
  4331d8:	ldr	x0, [sp, #40]
  4331dc:	ldr	w1, [sp, #36]
  4331e0:	str	w1, [x0, #160]
  4331e4:	ldr	x0, [sp, #40]
  4331e8:	mov	x1, #0xffffffffffffffff    	// #-1
  4331ec:	str	x1, [x0, #168]
  4331f0:	ldr	x0, [sp, #24]
  4331f4:	cmp	x0, #0x0
  4331f8:	b.le	4332d4 <_obstack_memory_used@@Base+0x170f4>
  4331fc:	mov	x0, #0x28                  	// #40
  433200:	str	x0, [sp, #56]
  433204:	mov	x1, #0xffffffffffffffff    	// #-1
  433208:	ldr	x0, [sp, #56]
  43320c:	udiv	x0, x1, x0
  433210:	cmp	x0, #0x0
  433214:	b.lt	433228 <_obstack_memory_used@@Base+0x17048>  // b.tstop
  433218:	mov	x1, #0xffffffffffffffff    	// #-1
  43321c:	ldr	x0, [sp, #56]
  433220:	udiv	x0, x1, x0
  433224:	b	43322c <_obstack_memory_used@@Base+0x1704c>
  433228:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  43322c:	ldr	x1, [sp, #24]
  433230:	cmp	x0, x1
  433234:	cset	w0, cc  // cc = lo, ul, last
  433238:	and	w0, w0, #0xff
  43323c:	and	x0, x0, #0xff
  433240:	cmp	x0, #0x0
  433244:	b.eq	433250 <_obstack_memory_used@@Base+0x17070>  // b.none
  433248:	mov	w0, #0xc                   	// #12
  43324c:	b	4332fc <_obstack_memory_used@@Base+0x1711c>
  433250:	ldr	x1, [sp, #24]
  433254:	mov	x0, x1
  433258:	lsl	x0, x0, #2
  43325c:	add	x0, x0, x1
  433260:	lsl	x0, x0, #3
  433264:	bl	4028b0 <malloc@plt>
  433268:	mov	x1, x0
  43326c:	ldr	x0, [sp, #40]
  433270:	str	x1, [x0, #216]
  433274:	ldr	x0, [sp, #24]
  433278:	lsl	x0, x0, #3
  43327c:	bl	4028b0 <malloc@plt>
  433280:	mov	x1, x0
  433284:	ldr	x0, [sp, #40]
  433288:	str	x1, [x0, #248]
  43328c:	ldr	x0, [sp, #40]
  433290:	ldr	x0, [x0, #216]
  433294:	cmp	x0, #0x0
  433298:	cset	w0, eq  // eq = none
  43329c:	and	w0, w0, #0xff
  4332a0:	and	x0, x0, #0xff
  4332a4:	cmp	x0, #0x0
  4332a8:	b.ne	4332cc <_obstack_memory_used@@Base+0x170ec>  // b.any
  4332ac:	ldr	x0, [sp, #40]
  4332b0:	ldr	x0, [x0, #248]
  4332b4:	cmp	x0, #0x0
  4332b8:	cset	w0, eq  // eq = none
  4332bc:	and	w0, w0, #0xff
  4332c0:	and	x0, x0, #0xff
  4332c4:	cmp	x0, #0x0
  4332c8:	b.eq	4332d4 <_obstack_memory_used@@Base+0x170f4>  // b.none
  4332cc:	mov	w0, #0xc                   	// #12
  4332d0:	b	4332fc <_obstack_memory_used@@Base+0x1711c>
  4332d4:	ldr	x0, [sp, #40]
  4332d8:	ldr	x1, [sp, #24]
  4332dc:	str	x1, [x0, #208]
  4332e0:	ldr	x0, [sp, #40]
  4332e4:	mov	w1, #0x1                   	// #1
  4332e8:	str	w1, [x0, #224]
  4332ec:	ldr	x0, [sp, #40]
  4332f0:	ldr	x1, [sp, #24]
  4332f4:	str	x1, [x0, #240]
  4332f8:	mov	w0, #0x0                   	// #0
  4332fc:	ldp	x29, x30, [sp], #64
  433300:	ret
  433304:	stp	x29, x30, [sp, #-64]!
  433308:	mov	x29, sp
  43330c:	str	x0, [sp, #24]
  433310:	str	xzr, [sp, #56]
  433314:	b	4333d8 <_obstack_memory_used@@Base+0x171f8>
  433318:	ldr	x0, [sp, #24]
  43331c:	ldr	x1, [x0, #248]
  433320:	ldr	x0, [sp, #56]
  433324:	lsl	x0, x0, #3
  433328:	add	x0, x1, x0
  43332c:	ldr	x0, [x0]
  433330:	str	x0, [sp, #40]
  433334:	str	xzr, [sp, #48]
  433338:	b	433378 <_obstack_memory_used@@Base+0x17198>
  43333c:	ldr	x0, [sp, #40]
  433340:	ldr	x1, [x0, #40]
  433344:	ldr	x0, [sp, #48]
  433348:	lsl	x0, x0, #3
  43334c:	add	x0, x1, x0
  433350:	ldr	x0, [x0]
  433354:	str	x0, [sp, #32]
  433358:	ldr	x0, [sp, #32]
  43335c:	ldr	x0, [x0, #32]
  433360:	bl	402b60 <free@plt>
  433364:	ldr	x0, [sp, #32]
  433368:	bl	402b60 <free@plt>
  43336c:	ldr	x0, [sp, #48]
  433370:	add	x0, x0, #0x1
  433374:	str	x0, [sp, #48]
  433378:	ldr	x0, [sp, #40]
  43337c:	ldr	x0, [x0, #32]
  433380:	ldr	x1, [sp, #48]
  433384:	cmp	x1, x0
  433388:	b.lt	43333c <_obstack_memory_used@@Base+0x1715c>  // b.tstop
  43338c:	ldr	x0, [sp, #40]
  433390:	ldr	x0, [x0, #40]
  433394:	bl	402b60 <free@plt>
  433398:	ldr	x0, [sp, #40]
  43339c:	ldr	x0, [x0, #16]
  4333a0:	cmp	x0, #0x0
  4333a4:	b.eq	4333c4 <_obstack_memory_used@@Base+0x171e4>  // b.none
  4333a8:	ldr	x0, [sp, #40]
  4333ac:	ldr	x0, [x0, #16]
  4333b0:	ldr	x0, [x0, #16]
  4333b4:	bl	402b60 <free@plt>
  4333b8:	ldr	x0, [sp, #40]
  4333bc:	ldr	x0, [x0, #16]
  4333c0:	bl	402b60 <free@plt>
  4333c4:	ldr	x0, [sp, #40]
  4333c8:	bl	402b60 <free@plt>
  4333cc:	ldr	x0, [sp, #56]
  4333d0:	add	x0, x0, #0x1
  4333d4:	str	x0, [sp, #56]
  4333d8:	ldr	x0, [sp, #24]
  4333dc:	ldr	x0, [x0, #232]
  4333e0:	ldr	x1, [sp, #56]
  4333e4:	cmp	x1, x0
  4333e8:	b.lt	433318 <_obstack_memory_used@@Base+0x17138>  // b.tstop
  4333ec:	ldr	x0, [sp, #24]
  4333f0:	str	xzr, [x0, #232]
  4333f4:	ldr	x0, [sp, #24]
  4333f8:	str	xzr, [x0, #200]
  4333fc:	nop
  433400:	ldp	x29, x30, [sp], #64
  433404:	ret
  433408:	stp	x29, x30, [sp, #-32]!
  43340c:	mov	x29, sp
  433410:	str	x0, [sp, #24]
  433414:	ldr	x0, [sp, #24]
  433418:	bl	433304 <_obstack_memory_used@@Base+0x17124>
  43341c:	ldr	x0, [sp, #24]
  433420:	ldr	x0, [x0, #248]
  433424:	bl	402b60 <free@plt>
  433428:	ldr	x0, [sp, #24]
  43342c:	ldr	x0, [x0, #216]
  433430:	bl	402b60 <free@plt>
  433434:	nop
  433438:	ldp	x29, x30, [sp], #32
  43343c:	ret
  433440:	stp	x29, x30, [sp, #-80]!
  433444:	mov	x29, sp
  433448:	str	x0, [sp, #56]
  43344c:	str	x1, [sp, #48]
  433450:	str	x2, [sp, #40]
  433454:	str	x3, [sp, #32]
  433458:	str	x4, [sp, #24]
  43345c:	ldr	x0, [sp, #56]
  433460:	ldr	x1, [x0, #200]
  433464:	ldr	x0, [sp, #56]
  433468:	ldr	x0, [x0, #208]
  43346c:	cmp	x1, x0
  433470:	b.lt	43354c <_obstack_memory_used@@Base+0x1736c>  // b.tstop
  433474:	ldr	x0, [sp, #56]
  433478:	ldr	x2, [x0, #216]
  43347c:	ldr	x0, [sp, #56]
  433480:	ldr	x0, [x0, #208]
  433484:	mov	x1, x0
  433488:	mov	x0, x1
  43348c:	lsl	x0, x0, #2
  433490:	add	x0, x0, x1
  433494:	lsl	x0, x0, #4
  433498:	mov	x1, x0
  43349c:	mov	x0, x2
  4334a0:	bl	4029e0 <realloc@plt>
  4334a4:	str	x0, [sp, #72]
  4334a8:	ldr	x0, [sp, #72]
  4334ac:	cmp	x0, #0x0
  4334b0:	cset	w0, eq  // eq = none
  4334b4:	and	w0, w0, #0xff
  4334b8:	and	x0, x0, #0xff
  4334bc:	cmp	x0, #0x0
  4334c0:	b.eq	4334d8 <_obstack_memory_used@@Base+0x172f8>  // b.none
  4334c4:	ldr	x0, [sp, #56]
  4334c8:	ldr	x0, [x0, #216]
  4334cc:	bl	402b60 <free@plt>
  4334d0:	mov	w0, #0xc                   	// #12
  4334d4:	b	433750 <_obstack_memory_used@@Base+0x17570>
  4334d8:	ldr	x0, [sp, #56]
  4334dc:	ldr	x1, [sp, #72]
  4334e0:	str	x1, [x0, #216]
  4334e4:	ldr	x0, [sp, #56]
  4334e8:	ldr	x1, [x0, #216]
  4334ec:	ldr	x0, [sp, #56]
  4334f0:	ldr	x0, [x0, #200]
  4334f4:	mov	x2, x0
  4334f8:	mov	x0, x2
  4334fc:	lsl	x0, x0, #2
  433500:	add	x0, x0, x2
  433504:	lsl	x0, x0, #3
  433508:	add	x3, x1, x0
  43350c:	ldr	x0, [sp, #56]
  433510:	ldr	x0, [x0, #208]
  433514:	mov	x1, x0
  433518:	mov	x0, x1
  43351c:	lsl	x0, x0, #2
  433520:	add	x0, x0, x1
  433524:	lsl	x0, x0, #3
  433528:	mov	x2, x0
  43352c:	mov	w1, #0x0                   	// #0
  433530:	mov	x0, x3
  433534:	bl	402980 <memset@plt>
  433538:	ldr	x0, [sp, #56]
  43353c:	ldr	x0, [x0, #208]
  433540:	lsl	x1, x0, #1
  433544:	ldr	x0, [sp, #56]
  433548:	str	x1, [x0, #208]
  43354c:	ldr	x0, [sp, #56]
  433550:	ldr	x0, [x0, #200]
  433554:	cmp	x0, #0x0
  433558:	b.le	4335cc <_obstack_memory_used@@Base+0x173ec>
  43355c:	ldr	x0, [sp, #56]
  433560:	ldr	x1, [x0, #216]
  433564:	ldr	x0, [sp, #56]
  433568:	ldr	x0, [x0, #200]
  43356c:	mov	x2, x0
  433570:	mov	x0, x2
  433574:	lsl	x0, x0, #2
  433578:	add	x0, x0, x2
  43357c:	lsl	x0, x0, #3
  433580:	sub	x0, x0, #0x28
  433584:	add	x0, x1, x0
  433588:	ldr	x0, [x0, #8]
  43358c:	ldr	x1, [sp, #40]
  433590:	cmp	x1, x0
  433594:	b.ne	4335cc <_obstack_memory_used@@Base+0x173ec>  // b.any
  433598:	ldr	x0, [sp, #56]
  43359c:	ldr	x1, [x0, #216]
  4335a0:	ldr	x0, [sp, #56]
  4335a4:	ldr	x0, [x0, #200]
  4335a8:	mov	x2, x0
  4335ac:	mov	x0, x2
  4335b0:	lsl	x0, x0, #2
  4335b4:	add	x0, x0, x2
  4335b8:	lsl	x0, x0, #3
  4335bc:	sub	x0, x0, #0x28
  4335c0:	add	x0, x1, x0
  4335c4:	mov	w1, #0x1                   	// #1
  4335c8:	strb	w1, [x0, #32]
  4335cc:	ldr	x0, [sp, #56]
  4335d0:	ldr	x1, [x0, #216]
  4335d4:	ldr	x0, [sp, #56]
  4335d8:	ldr	x0, [x0, #200]
  4335dc:	mov	x2, x0
  4335e0:	mov	x0, x2
  4335e4:	lsl	x0, x0, #2
  4335e8:	add	x0, x0, x2
  4335ec:	lsl	x0, x0, #3
  4335f0:	add	x0, x1, x0
  4335f4:	ldr	x1, [sp, #48]
  4335f8:	str	x1, [x0]
  4335fc:	ldr	x0, [sp, #56]
  433600:	ldr	x1, [x0, #216]
  433604:	ldr	x0, [sp, #56]
  433608:	ldr	x0, [x0, #200]
  43360c:	mov	x2, x0
  433610:	mov	x0, x2
  433614:	lsl	x0, x0, #2
  433618:	add	x0, x0, x2
  43361c:	lsl	x0, x0, #3
  433620:	add	x0, x1, x0
  433624:	ldr	x1, [sp, #40]
  433628:	str	x1, [x0, #8]
  43362c:	ldr	x0, [sp, #56]
  433630:	ldr	x1, [x0, #216]
  433634:	ldr	x0, [sp, #56]
  433638:	ldr	x0, [x0, #200]
  43363c:	mov	x2, x0
  433640:	mov	x0, x2
  433644:	lsl	x0, x0, #2
  433648:	add	x0, x0, x2
  43364c:	lsl	x0, x0, #3
  433650:	add	x0, x1, x0
  433654:	ldr	x1, [sp, #32]
  433658:	str	x1, [x0, #16]
  43365c:	ldr	x0, [sp, #56]
  433660:	ldr	x1, [x0, #216]
  433664:	ldr	x0, [sp, #56]
  433668:	ldr	x0, [x0, #200]
  43366c:	mov	x2, x0
  433670:	mov	x0, x2
  433674:	lsl	x0, x0, #2
  433678:	add	x0, x0, x2
  43367c:	lsl	x0, x0, #3
  433680:	add	x0, x1, x0
  433684:	ldr	x1, [sp, #24]
  433688:	str	x1, [x0, #24]
  43368c:	ldr	x1, [sp, #32]
  433690:	ldr	x0, [sp, #24]
  433694:	cmp	x1, x0
  433698:	b.ne	4336a4 <_obstack_memory_used@@Base+0x174c4>  // b.any
  43369c:	mov	w2, #0xffff                	// #65535
  4336a0:	b	4336a8 <_obstack_memory_used@@Base+0x174c8>
  4336a4:	mov	w2, #0x0                   	// #0
  4336a8:	ldr	x0, [sp, #56]
  4336ac:	ldr	x1, [x0, #216]
  4336b0:	ldr	x0, [sp, #56]
  4336b4:	ldr	x0, [x0, #200]
  4336b8:	mov	x3, x0
  4336bc:	mov	x0, x3
  4336c0:	lsl	x0, x0, #2
  4336c4:	add	x0, x0, x3
  4336c8:	lsl	x0, x0, #3
  4336cc:	add	x0, x1, x0
  4336d0:	mov	w1, w2
  4336d4:	strh	w1, [x0, #34]
  4336d8:	ldr	x0, [sp, #56]
  4336dc:	ldr	x1, [x0, #216]
  4336e0:	ldr	x0, [sp, #56]
  4336e4:	ldr	x0, [x0, #200]
  4336e8:	add	x3, x0, #0x1
  4336ec:	ldr	x2, [sp, #56]
  4336f0:	str	x3, [x2, #200]
  4336f4:	mov	x2, x0
  4336f8:	mov	x0, x2
  4336fc:	lsl	x0, x0, #2
  433700:	add	x0, x0, x2
  433704:	lsl	x0, x0, #3
  433708:	add	x0, x1, x0
  43370c:	strb	wzr, [x0, #32]
  433710:	ldr	x0, [sp, #56]
  433714:	ldr	w0, [x0, #224]
  433718:	sxtw	x1, w0
  43371c:	ldr	x2, [sp, #24]
  433720:	ldr	x0, [sp, #32]
  433724:	sub	x0, x2, x0
  433728:	cmp	x1, x0
  43372c:	b.ge	43374c <_obstack_memory_used@@Base+0x1756c>  // b.tcont
  433730:	ldr	x0, [sp, #24]
  433734:	mov	w1, w0
  433738:	ldr	x0, [sp, #32]
  43373c:	sub	w0, w1, w0
  433740:	mov	w1, w0
  433744:	ldr	x0, [sp, #56]
  433748:	str	w1, [x0, #224]
  43374c:	mov	w0, #0x0                   	// #0
  433750:	ldp	x29, x30, [sp], #80
  433754:	ret
  433758:	sub	sp, sp, #0x30
  43375c:	str	x0, [sp, #8]
  433760:	str	x1, [sp]
  433764:	ldr	x0, [sp, #8]
  433768:	ldr	x0, [x0, #200]
  43376c:	str	x0, [sp, #32]
  433770:	ldr	x0, [sp, #32]
  433774:	str	x0, [sp, #24]
  433778:	str	xzr, [sp, #40]
  43377c:	b	4337e4 <_obstack_memory_used@@Base+0x17604>
  433780:	ldr	x1, [sp, #40]
  433784:	ldr	x0, [sp, #32]
  433788:	add	x0, x1, x0
  43378c:	lsr	x1, x0, #63
  433790:	add	x0, x1, x0
  433794:	asr	x0, x0, #1
  433798:	str	x0, [sp, #16]
  43379c:	ldr	x0, [sp, #8]
  4337a0:	ldr	x2, [x0, #216]
  4337a4:	ldr	x1, [sp, #16]
  4337a8:	mov	x0, x1
  4337ac:	lsl	x0, x0, #2
  4337b0:	add	x0, x0, x1
  4337b4:	lsl	x0, x0, #3
  4337b8:	add	x0, x2, x0
  4337bc:	ldr	x0, [x0, #8]
  4337c0:	ldr	x1, [sp]
  4337c4:	cmp	x1, x0
  4337c8:	b.le	4337dc <_obstack_memory_used@@Base+0x175fc>
  4337cc:	ldr	x0, [sp, #16]
  4337d0:	add	x0, x0, #0x1
  4337d4:	str	x0, [sp, #40]
  4337d8:	b	4337e4 <_obstack_memory_used@@Base+0x17604>
  4337dc:	ldr	x0, [sp, #16]
  4337e0:	str	x0, [sp, #32]
  4337e4:	ldr	x1, [sp, #40]
  4337e8:	ldr	x0, [sp, #32]
  4337ec:	cmp	x1, x0
  4337f0:	b.lt	433780 <_obstack_memory_used@@Base+0x175a0>  // b.tstop
  4337f4:	ldr	x1, [sp, #40]
  4337f8:	ldr	x0, [sp, #24]
  4337fc:	cmp	x1, x0
  433800:	b.ge	43383c <_obstack_memory_used@@Base+0x1765c>  // b.tcont
  433804:	ldr	x0, [sp, #8]
  433808:	ldr	x2, [x0, #216]
  43380c:	ldr	x1, [sp, #40]
  433810:	mov	x0, x1
  433814:	lsl	x0, x0, #2
  433818:	add	x0, x0, x1
  43381c:	lsl	x0, x0, #3
  433820:	add	x0, x2, x0
  433824:	ldr	x0, [x0, #8]
  433828:	ldr	x1, [sp]
  43382c:	cmp	x1, x0
  433830:	b.ne	43383c <_obstack_memory_used@@Base+0x1765c>  // b.any
  433834:	ldr	x0, [sp, #40]
  433838:	b	433840 <_obstack_memory_used@@Base+0x17660>
  43383c:	mov	x0, #0xffffffffffffffff    	// #-1
  433840:	add	sp, sp, #0x30
  433844:	ret
  433848:	stp	x29, x30, [sp, #-80]!
  43384c:	mov	x29, sp
  433850:	str	x19, [sp, #16]
  433854:	str	x0, [sp, #56]
  433858:	str	x1, [sp, #48]
  43385c:	str	x2, [sp, #40]
  433860:	ldr	x0, [sp, #56]
  433864:	ldr	x0, [x0, #248]
  433868:	cmp	x0, #0x0
  43386c:	ldr	x0, [sp, #56]
  433870:	ldr	x0, [x0, #240]
  433874:	cmp	x0, #0x0
  433878:	ldr	x0, [sp, #56]
  43387c:	ldr	x1, [x0, #232]
  433880:	ldr	x0, [sp, #56]
  433884:	ldr	x0, [x0, #240]
  433888:	cmp	x1, x0
  43388c:	cset	w0, eq  // eq = none
  433890:	and	w0, w0, #0xff
  433894:	and	x0, x0, #0xff
  433898:	cmp	x0, #0x0
  43389c:	b.eq	43390c <_obstack_memory_used@@Base+0x1772c>  // b.none
  4338a0:	ldr	x0, [sp, #56]
  4338a4:	ldr	x0, [x0, #240]
  4338a8:	lsl	x0, x0, #1
  4338ac:	str	x0, [sp, #72]
  4338b0:	ldr	x0, [sp, #56]
  4338b4:	ldr	x2, [x0, #248]
  4338b8:	ldr	x0, [sp, #72]
  4338bc:	lsl	x0, x0, #3
  4338c0:	mov	x1, x0
  4338c4:	mov	x0, x2
  4338c8:	bl	4029e0 <realloc@plt>
  4338cc:	str	x0, [sp, #64]
  4338d0:	ldr	x0, [sp, #64]
  4338d4:	cmp	x0, #0x0
  4338d8:	cset	w0, eq  // eq = none
  4338dc:	and	w0, w0, #0xff
  4338e0:	and	x0, x0, #0xff
  4338e4:	cmp	x0, #0x0
  4338e8:	b.eq	4338f4 <_obstack_memory_used@@Base+0x17714>  // b.none
  4338ec:	mov	w0, #0xc                   	// #12
  4338f0:	b	4339c8 <_obstack_memory_used@@Base+0x177e8>
  4338f4:	ldr	x0, [sp, #56]
  4338f8:	ldr	x1, [sp, #64]
  4338fc:	str	x1, [x0, #248]
  433900:	ldr	x0, [sp, #56]
  433904:	ldr	x1, [sp, #72]
  433908:	str	x1, [x0, #240]
  43390c:	ldr	x0, [sp, #56]
  433910:	ldr	x1, [x0, #248]
  433914:	ldr	x0, [sp, #56]
  433918:	ldr	x0, [x0, #232]
  43391c:	lsl	x0, x0, #3
  433920:	add	x19, x1, x0
  433924:	mov	x1, #0x30                  	// #48
  433928:	mov	x0, #0x1                   	// #1
  43392c:	bl	4029c0 <calloc@plt>
  433930:	str	x0, [x19]
  433934:	ldr	x0, [sp, #56]
  433938:	ldr	x1, [x0, #248]
  43393c:	ldr	x0, [sp, #56]
  433940:	ldr	x0, [x0, #232]
  433944:	lsl	x0, x0, #3
  433948:	add	x0, x1, x0
  43394c:	ldr	x0, [x0]
  433950:	cmp	x0, #0x0
  433954:	cset	w0, eq  // eq = none
  433958:	and	w0, w0, #0xff
  43395c:	and	x0, x0, #0xff
  433960:	cmp	x0, #0x0
  433964:	b.eq	433970 <_obstack_memory_used@@Base+0x17790>  // b.none
  433968:	mov	w0, #0xc                   	// #12
  43396c:	b	4339c8 <_obstack_memory_used@@Base+0x177e8>
  433970:	ldr	x0, [sp, #56]
  433974:	ldr	x1, [x0, #248]
  433978:	ldr	x0, [sp, #56]
  43397c:	ldr	x0, [x0, #232]
  433980:	lsl	x0, x0, #3
  433984:	add	x0, x1, x0
  433988:	ldr	x0, [x0]
  43398c:	ldr	x1, [sp, #48]
  433990:	str	x1, [x0, #8]
  433994:	ldr	x0, [sp, #56]
  433998:	ldr	x1, [x0, #248]
  43399c:	ldr	x0, [sp, #56]
  4339a0:	ldr	x0, [x0, #232]
  4339a4:	add	x3, x0, #0x1
  4339a8:	ldr	x2, [sp, #56]
  4339ac:	str	x3, [x2, #232]
  4339b0:	lsl	x0, x0, #3
  4339b4:	add	x0, x1, x0
  4339b8:	ldr	x0, [x0]
  4339bc:	ldr	x1, [sp, #40]
  4339c0:	str	x1, [x0]
  4339c4:	mov	w0, #0x0                   	// #0
  4339c8:	ldr	x19, [sp, #16]
  4339cc:	ldp	x29, x30, [sp], #80
  4339d0:	ret
  4339d4:	stp	x29, x30, [sp, #-80]!
  4339d8:	mov	x29, sp
  4339dc:	str	x0, [sp, #40]
  4339e0:	str	x1, [sp, #32]
  4339e4:	str	x2, [sp, #24]
  4339e8:	ldr	x0, [sp, #40]
  4339ec:	ldr	x1, [x0, #32]
  4339f0:	ldr	x0, [sp, #40]
  4339f4:	ldr	x0, [x0, #24]
  4339f8:	cmp	x1, x0
  4339fc:	cset	w0, eq  // eq = none
  433a00:	and	w0, w0, #0xff
  433a04:	and	x0, x0, #0xff
  433a08:	cmp	x0, #0x0
  433a0c:	b.eq	433a80 <_obstack_memory_used@@Base+0x178a0>  // b.none
  433a10:	ldr	x0, [sp, #40]
  433a14:	ldr	x0, [x0, #24]
  433a18:	lsl	x0, x0, #1
  433a1c:	add	x0, x0, #0x1
  433a20:	str	x0, [sp, #72]
  433a24:	ldr	x0, [sp, #40]
  433a28:	ldr	x2, [x0, #40]
  433a2c:	ldr	x0, [sp, #72]
  433a30:	lsl	x0, x0, #3
  433a34:	mov	x1, x0
  433a38:	mov	x0, x2
  433a3c:	bl	4029e0 <realloc@plt>
  433a40:	str	x0, [sp, #64]
  433a44:	ldr	x0, [sp, #64]
  433a48:	cmp	x0, #0x0
  433a4c:	cset	w0, eq  // eq = none
  433a50:	and	w0, w0, #0xff
  433a54:	and	x0, x0, #0xff
  433a58:	cmp	x0, #0x0
  433a5c:	b.eq	433a68 <_obstack_memory_used@@Base+0x17888>  // b.none
  433a60:	mov	x0, #0x0                   	// #0
  433a64:	b	433afc <_obstack_memory_used@@Base+0x1791c>
  433a68:	ldr	x0, [sp, #40]
  433a6c:	ldr	x1, [sp, #64]
  433a70:	str	x1, [x0, #40]
  433a74:	ldr	x0, [sp, #40]
  433a78:	ldr	x1, [sp, #72]
  433a7c:	str	x1, [x0, #24]
  433a80:	mov	x1, #0x28                  	// #40
  433a84:	mov	x0, #0x1                   	// #1
  433a88:	bl	4029c0 <calloc@plt>
  433a8c:	str	x0, [sp, #56]
  433a90:	ldr	x0, [sp, #56]
  433a94:	cmp	x0, #0x0
  433a98:	cset	w0, ne  // ne = any
  433a9c:	and	w0, w0, #0xff
  433aa0:	and	x0, x0, #0xff
  433aa4:	cmp	x0, #0x0
  433aa8:	b.eq	433af8 <_obstack_memory_used@@Base+0x17918>  // b.none
  433aac:	ldr	x0, [sp, #40]
  433ab0:	ldr	x1, [x0, #40]
  433ab4:	ldr	x0, [sp, #40]
  433ab8:	ldr	x0, [x0, #32]
  433abc:	lsl	x0, x0, #3
  433ac0:	add	x0, x1, x0
  433ac4:	ldr	x1, [sp, #56]
  433ac8:	str	x1, [x0]
  433acc:	ldr	x0, [sp, #56]
  433ad0:	ldr	x1, [sp, #32]
  433ad4:	str	x1, [x0]
  433ad8:	ldr	x0, [sp, #56]
  433adc:	ldr	x1, [sp, #24]
  433ae0:	str	x1, [x0, #8]
  433ae4:	ldr	x0, [sp, #40]
  433ae8:	ldr	x0, [x0, #32]
  433aec:	add	x1, x0, #0x1
  433af0:	ldr	x0, [sp, #40]
  433af4:	str	x1, [x0, #32]
  433af8:	ldr	x0, [sp, #56]
  433afc:	ldp	x29, x30, [sp], #80
  433b00:	ret
  433b04:	stp	x29, x30, [sp, #-64]!
  433b08:	mov	x29, sp
  433b0c:	str	x0, [sp, #56]
  433b10:	str	x1, [sp, #48]
  433b14:	str	x2, [sp, #40]
  433b18:	str	x3, [sp, #32]
  433b1c:	str	x4, [sp, #24]
  433b20:	ldr	x0, [sp, #56]
  433b24:	ldr	x1, [sp, #48]
  433b28:	str	x1, [x0]
  433b2c:	ldr	x0, [sp, #56]
  433b30:	ldr	x1, [sp, #40]
  433b34:	str	x1, [x0, #8]
  433b38:	ldr	x0, [sp, #56]
  433b3c:	ldr	x1, [sp, #32]
  433b40:	str	x1, [x0, #16]
  433b44:	ldr	x0, [sp, #56]
  433b48:	ldr	x1, [sp, #24]
  433b4c:	str	x1, [x0, #24]
  433b50:	ldr	x0, [sp, #56]
  433b54:	add	x0, x0, #0x20
  433b58:	mov	x2, #0x18                  	// #24
  433b5c:	mov	w1, #0x0                   	// #0
  433b60:	bl	402980 <memset@plt>
  433b64:	nop
  433b68:	ldp	x29, x30, [sp], #64
  433b6c:	ret
  433b70:	stp	x29, x30, [sp, #-64]!
  433b74:	mov	x29, sp
  433b78:	str	x0, [sp, #24]
  433b7c:	add	x0, sp, #0x30
  433b80:	mov	x2, x0
  433b84:	mov	w1, #0x0                   	// #0
  433b88:	ldr	x0, [sp, #24]
  433b8c:	bl	402b90 <acl_get_entry@plt>
  433b90:	str	w0, [sp, #60]
  433b94:	b	433bf8 <_obstack_memory_used@@Base+0x17a18>
  433b98:	ldr	x0, [sp, #48]
  433b9c:	add	x1, sp, #0x2c
  433ba0:	bl	402970 <acl_get_tag_type@plt>
  433ba4:	cmp	w0, #0x0
  433ba8:	b.ge	433bb4 <_obstack_memory_used@@Base+0x179d4>  // b.tcont
  433bac:	mov	w0, #0xffffffff            	// #-1
  433bb0:	b	433c08 <_obstack_memory_used@@Base+0x17a28>
  433bb4:	ldr	w0, [sp, #44]
  433bb8:	cmp	w0, #0x1
  433bbc:	b.eq	433be0 <_obstack_memory_used@@Base+0x17a00>  // b.none
  433bc0:	ldr	w0, [sp, #44]
  433bc4:	cmp	w0, #0x4
  433bc8:	b.eq	433be0 <_obstack_memory_used@@Base+0x17a00>  // b.none
  433bcc:	ldr	w0, [sp, #44]
  433bd0:	cmp	w0, #0x20
  433bd4:	b.eq	433be0 <_obstack_memory_used@@Base+0x17a00>  // b.none
  433bd8:	mov	w0, #0x1                   	// #1
  433bdc:	b	433c08 <_obstack_memory_used@@Base+0x17a28>
  433be0:	add	x0, sp, #0x30
  433be4:	mov	x2, x0
  433be8:	mov	w1, #0x1                   	// #1
  433bec:	ldr	x0, [sp, #24]
  433bf0:	bl	402b90 <acl_get_entry@plt>
  433bf4:	str	w0, [sp, #60]
  433bf8:	ldr	w0, [sp, #60]
  433bfc:	cmp	w0, #0x0
  433c00:	b.gt	433b98 <_obstack_memory_used@@Base+0x179b8>
  433c04:	ldr	w0, [sp, #60]
  433c08:	ldp	x29, x30, [sp], #64
  433c0c:	ret
  433c10:	stp	x29, x30, [sp, #-32]!
  433c14:	mov	x29, sp
  433c18:	str	x0, [sp, #24]
  433c1c:	ldr	x0, [sp, #24]
  433c20:	bl	402760 <acl_entries@plt>
  433c24:	cmp	w0, #0x0
  433c28:	cset	w0, gt
  433c2c:	and	w0, w0, #0xff
  433c30:	ldp	x29, x30, [sp], #32
  433c34:	ret
  433c38:	stp	x29, x30, [sp, #-32]!
  433c3c:	mov	x29, sp
  433c40:	str	x0, [sp, #24]
  433c44:	ldr	x0, [sp, #24]
  433c48:	ldr	x0, [x0, #8]
  433c4c:	cmp	x0, #0x0
  433c50:	b.eq	433c60 <_obstack_memory_used@@Base+0x17a80>  // b.none
  433c54:	ldr	x0, [sp, #24]
  433c58:	ldr	x0, [x0, #8]
  433c5c:	bl	402de0 <acl_free@plt>
  433c60:	ldr	x0, [sp, #24]
  433c64:	ldr	x0, [x0, #16]
  433c68:	cmp	x0, #0x0
  433c6c:	b.eq	433c7c <_obstack_memory_used@@Base+0x17a9c>  // b.none
  433c70:	ldr	x0, [sp, #24]
  433c74:	ldr	x0, [x0, #16]
  433c78:	bl	402de0 <acl_free@plt>
  433c7c:	nop
  433c80:	ldp	x29, x30, [sp], #32
  433c84:	ret
  433c88:	stp	x29, x30, [sp, #-48]!
  433c8c:	mov	x29, sp
  433c90:	str	x0, [sp, #40]
  433c94:	str	w1, [sp, #36]
  433c98:	str	w2, [sp, #32]
  433c9c:	str	x3, [sp, #24]
  433ca0:	mov	x2, #0x20                  	// #32
  433ca4:	mov	w1, #0x0                   	// #0
  433ca8:	ldr	x0, [sp, #24]
  433cac:	bl	402980 <memset@plt>
  433cb0:	ldr	x0, [sp, #24]
  433cb4:	ldr	w1, [sp, #32]
  433cb8:	str	w1, [x0]
  433cbc:	ldr	w0, [sp, #36]
  433cc0:	cmn	w0, #0x1
  433cc4:	b.eq	433ce0 <_obstack_memory_used@@Base+0x17b00>  // b.none
  433cc8:	ldr	w0, [sp, #36]
  433ccc:	bl	402a20 <acl_get_fd@plt>
  433cd0:	mov	x1, x0
  433cd4:	ldr	x0, [sp, #24]
  433cd8:	str	x1, [x0, #8]
  433cdc:	b	433cf8 <_obstack_memory_used@@Base+0x17b18>
  433ce0:	mov	w1, #0x8000                	// #32768
  433ce4:	ldr	x0, [sp, #40]
  433ce8:	bl	402b50 <acl_get_file@plt>
  433cec:	mov	x1, x0
  433cf0:	ldr	x0, [sp, #24]
  433cf4:	str	x1, [x0, #8]
  433cf8:	ldr	x0, [sp, #24]
  433cfc:	ldr	x0, [x0, #8]
  433d00:	cmp	x0, #0x0
  433d04:	b.ne	433d30 <_obstack_memory_used@@Base+0x17b50>  // b.any
  433d08:	bl	402d40 <__errno_location@plt>
  433d0c:	ldr	w0, [x0]
  433d10:	bl	4343b0 <_obstack_memory_used@@Base+0x181d0>
  433d14:	and	w0, w0, #0xff
  433d18:	cmp	w0, #0x0
  433d1c:	b.eq	433d28 <_obstack_memory_used@@Base+0x17b48>  // b.none
  433d20:	mov	w0, #0xffffffff            	// #-1
  433d24:	b	433d74 <_obstack_memory_used@@Base+0x17b94>
  433d28:	mov	w0, #0x0                   	// #0
  433d2c:	b	433d74 <_obstack_memory_used@@Base+0x17b94>
  433d30:	ldr	w0, [sp, #32]
  433d34:	and	w0, w0, #0xf000
  433d38:	cmp	w0, #0x4, lsl #12
  433d3c:	b.ne	433d70 <_obstack_memory_used@@Base+0x17b90>  // b.any
  433d40:	mov	w1, #0x4000                	// #16384
  433d44:	ldr	x0, [sp, #40]
  433d48:	bl	402b50 <acl_get_file@plt>
  433d4c:	mov	x1, x0
  433d50:	ldr	x0, [sp, #24]
  433d54:	str	x1, [x0, #16]
  433d58:	ldr	x0, [sp, #24]
  433d5c:	ldr	x0, [x0, #16]
  433d60:	cmp	x0, #0x0
  433d64:	b.ne	433d70 <_obstack_memory_used@@Base+0x17b90>  // b.any
  433d68:	mov	w0, #0xffffffff            	// #-1
  433d6c:	b	433d74 <_obstack_memory_used@@Base+0x17b94>
  433d70:	mov	w0, #0x0                   	// #0
  433d74:	ldp	x29, x30, [sp], #48
  433d78:	ret
  433d7c:	stp	x29, x30, [sp, #-80]!
  433d80:	mov	x29, sp
  433d84:	str	x0, [sp, #56]
  433d88:	str	x1, [sp, #48]
  433d8c:	str	w2, [sp, #44]
  433d90:	str	w3, [sp, #40]
  433d94:	str	x4, [sp, #32]
  433d98:	str	x5, [sp, #24]
  433d9c:	str	wzr, [sp, #76]
  433da0:	ldr	x0, [sp, #56]
  433da4:	ldrb	w0, [x0, #24]
  433da8:	eor	w0, w0, #0x1
  433dac:	and	w0, w0, #0xff
  433db0:	cmp	w0, #0x0
  433db4:	b.eq	433f58 <_obstack_memory_used@@Base+0x17d78>  // b.none
  433db8:	ldr	w0, [sp, #76]
  433dbc:	cmp	w0, #0x0
  433dc0:	b.ne	433e1c <_obstack_memory_used@@Base+0x17c3c>  // b.any
  433dc4:	ldr	w0, [sp, #40]
  433dc8:	cmp	w0, #0x0
  433dcc:	b.eq	433e1c <_obstack_memory_used@@Base+0x17c3c>  // b.none
  433dd0:	ldr	x0, [sp, #56]
  433dd4:	ldr	x0, [x0, #8]
  433dd8:	cmp	x0, #0x0
  433ddc:	b.eq	433dec <_obstack_memory_used@@Base+0x17c0c>  // b.none
  433de0:	ldr	x0, [sp, #56]
  433de4:	ldr	x0, [x0, #8]
  433de8:	bl	402de0 <acl_free@plt>
  433dec:	ldr	x0, [sp, #56]
  433df0:	ldr	w0, [x0]
  433df4:	bl	402a10 <acl_from_mode@plt>
  433df8:	mov	x1, x0
  433dfc:	ldr	x0, [sp, #56]
  433e00:	str	x1, [x0, #8]
  433e04:	ldr	x0, [sp, #56]
  433e08:	ldr	x0, [x0, #8]
  433e0c:	cmp	x0, #0x0
  433e10:	b.ne	433e1c <_obstack_memory_used@@Base+0x17c3c>  // b.any
  433e14:	mov	w0, #0xffffffff            	// #-1
  433e18:	str	w0, [sp, #76]
  433e1c:	ldr	w0, [sp, #76]
  433e20:	cmp	w0, #0x0
  433e24:	b.ne	433f58 <_obstack_memory_used@@Base+0x17d78>  // b.any
  433e28:	ldr	x0, [sp, #56]
  433e2c:	ldr	x0, [x0, #8]
  433e30:	cmp	x0, #0x0
  433e34:	b.eq	433f58 <_obstack_memory_used@@Base+0x17d78>  // b.none
  433e38:	ldr	w0, [sp, #44]
  433e3c:	cmn	w0, #0x1
  433e40:	b.eq	433e60 <_obstack_memory_used@@Base+0x17c80>  // b.none
  433e44:	ldr	x0, [sp, #56]
  433e48:	ldr	x0, [x0, #8]
  433e4c:	mov	x1, x0
  433e50:	ldr	w0, [sp, #44]
  433e54:	bl	402730 <acl_set_fd@plt>
  433e58:	str	w0, [sp, #76]
  433e5c:	b	433e7c <_obstack_memory_used@@Base+0x17c9c>
  433e60:	ldr	x0, [sp, #56]
  433e64:	ldr	x0, [x0, #8]
  433e68:	mov	x2, x0
  433e6c:	mov	w1, #0x8000                	// #32768
  433e70:	ldr	x0, [sp, #48]
  433e74:	bl	4029f0 <acl_set_file@plt>
  433e78:	str	w0, [sp, #76]
  433e7c:	ldr	w0, [sp, #76]
  433e80:	cmp	w0, #0x0
  433e84:	b.eq	433edc <_obstack_memory_used@@Base+0x17cfc>  // b.none
  433e88:	bl	402d40 <__errno_location@plt>
  433e8c:	ldr	w0, [x0]
  433e90:	bl	4343b0 <_obstack_memory_used@@Base+0x181d0>
  433e94:	and	w0, w0, #0xff
  433e98:	eor	w0, w0, #0x1
  433e9c:	and	w0, w0, #0xff
  433ea0:	cmp	w0, #0x0
  433ea4:	b.eq	433f58 <_obstack_memory_used@@Base+0x17d78>  // b.none
  433ea8:	ldr	x0, [sp, #56]
  433eac:	mov	w1, #0x1                   	// #1
  433eb0:	strb	w1, [x0, #24]
  433eb4:	ldr	w0, [sp, #40]
  433eb8:	cmp	w0, #0x0
  433ebc:	b.ne	433ed4 <_obstack_memory_used@@Base+0x17cf4>  // b.any
  433ec0:	ldr	x0, [sp, #56]
  433ec4:	ldr	x0, [x0, #8]
  433ec8:	bl	433b70 <_obstack_memory_used@@Base+0x17990>
  433ecc:	cmp	w0, #0x0
  433ed0:	b.ne	433f58 <_obstack_memory_used@@Base+0x17d78>  // b.any
  433ed4:	str	wzr, [sp, #76]
  433ed8:	b	433f58 <_obstack_memory_used@@Base+0x17d78>
  433edc:	ldr	x0, [sp, #24]
  433ee0:	mov	w1, #0x1                   	// #1
  433ee4:	strb	w1, [x0]
  433ee8:	ldr	x0, [sp, #56]
  433eec:	ldr	w0, [x0]
  433ef0:	and	w0, w0, #0xf000
  433ef4:	cmp	w0, #0x4, lsl #12
  433ef8:	b.ne	433f58 <_obstack_memory_used@@Base+0x17d78>  // b.any
  433efc:	ldr	w0, [sp, #40]
  433f00:	cmp	w0, #0x0
  433f04:	b.ne	433f4c <_obstack_memory_used@@Base+0x17d6c>  // b.any
  433f08:	ldr	x0, [sp, #56]
  433f0c:	ldr	x0, [x0, #16]
  433f10:	cmp	x0, #0x0
  433f14:	b.eq	433f4c <_obstack_memory_used@@Base+0x17d6c>  // b.none
  433f18:	ldr	x0, [sp, #56]
  433f1c:	ldr	x0, [x0, #16]
  433f20:	bl	433c10 <_obstack_memory_used@@Base+0x17a30>
  433f24:	cmp	w0, #0x0
  433f28:	b.eq	433f4c <_obstack_memory_used@@Base+0x17d6c>  // b.none
  433f2c:	ldr	x0, [sp, #56]
  433f30:	ldr	x0, [x0, #16]
  433f34:	mov	x2, x0
  433f38:	mov	w1, #0x4000                	// #16384
  433f3c:	ldr	x0, [sp, #48]
  433f40:	bl	4029f0 <acl_set_file@plt>
  433f44:	str	w0, [sp, #76]
  433f48:	b	433f58 <_obstack_memory_used@@Base+0x17d78>
  433f4c:	ldr	x0, [sp, #48]
  433f50:	bl	402830 <acl_delete_def_file@plt>
  433f54:	str	w0, [sp, #76]
  433f58:	ldr	w0, [sp, #76]
  433f5c:	ldp	x29, x30, [sp], #80
  433f60:	ret
  433f64:	stp	x29, x30, [sp, #-32]!
  433f68:	mov	x29, sp
  433f6c:	str	x0, [sp, #24]
  433f70:	str	w1, [sp, #20]
  433f74:	str	w2, [sp, #16]
  433f78:	ldr	w0, [sp, #20]
  433f7c:	cmn	w0, #0x1
  433f80:	b.eq	433f94 <_obstack_memory_used@@Base+0x17db4>  // b.none
  433f84:	ldr	w1, [sp, #16]
  433f88:	ldr	w0, [sp, #20]
  433f8c:	bl	4029a0 <fchmod@plt>
  433f90:	b	433fa0 <_obstack_memory_used@@Base+0x17dc0>
  433f94:	ldr	w1, [sp, #16]
  433f98:	ldr	x0, [sp, #24]
  433f9c:	bl	4028d0 <chmod@plt>
  433fa0:	ldp	x29, x30, [sp], #32
  433fa4:	ret
  433fa8:	stp	x29, x30, [sp, #-80]!
  433fac:	mov	x29, sp
  433fb0:	str	x0, [sp, #40]
  433fb4:	str	x1, [sp, #32]
  433fb8:	str	w2, [sp, #28]
  433fbc:	strb	wzr, [sp, #63]
  433fc0:	strb	wzr, [sp, #62]
  433fc4:	str	wzr, [sp, #76]
  433fc8:	ldr	x0, [sp, #40]
  433fcc:	ldr	w0, [x0]
  433fd0:	and	w0, w0, #0xe00
  433fd4:	cmp	w0, #0x0
  433fd8:	cset	w0, ne  // ne = any
  433fdc:	strb	w0, [sp, #75]
  433fe0:	ldrb	w0, [sp, #75]
  433fe4:	cmp	w0, #0x0
  433fe8:	b.eq	43401c <_obstack_memory_used@@Base+0x17e3c>  // b.none
  433fec:	ldr	x0, [sp, #40]
  433ff0:	ldr	w0, [x0]
  433ff4:	mov	w2, w0
  433ff8:	ldr	w1, [sp, #28]
  433ffc:	ldr	x0, [sp, #32]
  434000:	bl	433f64 <_obstack_memory_used@@Base+0x17d84>
  434004:	str	w0, [sp, #76]
  434008:	ldr	w0, [sp, #76]
  43400c:	cmp	w0, #0x0
  434010:	b.eq	43401c <_obstack_memory_used@@Base+0x17e3c>  // b.none
  434014:	mov	w0, #0xffffffff            	// #-1
  434018:	b	434164 <_obstack_memory_used@@Base+0x17f84>
  43401c:	add	x1, sp, #0x3f
  434020:	add	x0, sp, #0x3e
  434024:	mov	x5, x1
  434028:	mov	x4, x0
  43402c:	mov	w3, #0x0                   	// #0
  434030:	ldr	w2, [sp, #28]
  434034:	ldr	x1, [sp, #32]
  434038:	ldr	x0, [sp, #40]
  43403c:	bl	433d7c <_obstack_memory_used@@Base+0x17b9c>
  434040:	str	w0, [sp, #76]
  434044:	ldrb	w0, [sp, #63]
  434048:	eor	w0, w0, #0x1
  43404c:	and	w0, w0, #0xff
  434050:	cmp	w0, #0x0
  434054:	b.eq	4340e0 <_obstack_memory_used@@Base+0x17f00>  // b.none
  434058:	ldr	w0, [sp, #76]
  43405c:	cmp	w0, #0x0
  434060:	b.eq	434070 <_obstack_memory_used@@Base+0x17e90>  // b.none
  434064:	bl	402d40 <__errno_location@plt>
  434068:	ldr	w0, [x0]
  43406c:	b	434074 <_obstack_memory_used@@Base+0x17e94>
  434070:	mov	w0, #0x0                   	// #0
  434074:	str	w0, [sp, #68]
  434078:	add	x1, sp, #0x3f
  43407c:	add	x0, sp, #0x3e
  434080:	mov	x5, x1
  434084:	mov	x4, x0
  434088:	mov	w3, #0x1                   	// #1
  43408c:	ldr	w2, [sp, #28]
  434090:	ldr	x1, [sp, #32]
  434094:	ldr	x0, [sp, #40]
  434098:	bl	433d7c <_obstack_memory_used@@Base+0x17b9c>
  43409c:	str	w0, [sp, #76]
  4340a0:	ldrb	w0, [sp, #63]
  4340a4:	eor	w0, w0, #0x1
  4340a8:	and	w0, w0, #0xff
  4340ac:	cmp	w0, #0x0
  4340b0:	b.eq	4340bc <_obstack_memory_used@@Base+0x17edc>  // b.none
  4340b4:	mov	w0, #0x1                   	// #1
  4340b8:	strb	w0, [sp, #62]
  4340bc:	ldr	w0, [sp, #68]
  4340c0:	cmp	w0, #0x0
  4340c4:	b.eq	4340e0 <_obstack_memory_used@@Base+0x17f00>  // b.none
  4340c8:	bl	402d40 <__errno_location@plt>
  4340cc:	mov	x1, x0
  4340d0:	ldr	w0, [sp, #68]
  4340d4:	str	w0, [x1]
  4340d8:	mov	w0, #0xffffffff            	// #-1
  4340dc:	str	w0, [sp, #76]
  4340e0:	ldrb	w0, [sp, #62]
  4340e4:	cmp	w0, #0x0
  4340e8:	b.eq	434160 <_obstack_memory_used@@Base+0x17f80>  // b.none
  4340ec:	ldrb	w0, [sp, #75]
  4340f0:	eor	w0, w0, #0x1
  4340f4:	and	w0, w0, #0xff
  4340f8:	cmp	w0, #0x0
  4340fc:	b.eq	434160 <_obstack_memory_used@@Base+0x17f80>  // b.none
  434100:	ldr	w0, [sp, #76]
  434104:	cmp	w0, #0x0
  434108:	b.eq	434118 <_obstack_memory_used@@Base+0x17f38>  // b.none
  43410c:	bl	402d40 <__errno_location@plt>
  434110:	ldr	w0, [x0]
  434114:	b	43411c <_obstack_memory_used@@Base+0x17f3c>
  434118:	mov	w0, #0x0                   	// #0
  43411c:	str	w0, [sp, #64]
  434120:	ldr	x0, [sp, #40]
  434124:	ldr	w0, [x0]
  434128:	mov	w2, w0
  43412c:	ldr	w1, [sp, #28]
  434130:	ldr	x0, [sp, #32]
  434134:	bl	433f64 <_obstack_memory_used@@Base+0x17d84>
  434138:	str	w0, [sp, #76]
  43413c:	ldr	w0, [sp, #64]
  434140:	cmp	w0, #0x0
  434144:	b.eq	434160 <_obstack_memory_used@@Base+0x17f80>  // b.none
  434148:	bl	402d40 <__errno_location@plt>
  43414c:	mov	x1, x0
  434150:	ldr	w0, [sp, #64]
  434154:	str	w0, [x1]
  434158:	mov	w0, #0xffffffff            	// #-1
  43415c:	str	w0, [sp, #76]
  434160:	ldr	w0, [sp, #76]
  434164:	ldp	x29, x30, [sp], #80
  434168:	ret
  43416c:	stp	x29, x30, [sp, #-64]!
  434170:	mov	x29, sp
  434174:	stp	x19, x20, [sp, #16]
  434178:	str	x0, [sp, #40]
  43417c:	str	x1, [sp, #32]
  434180:	ldr	x20, [sp, #40]
  434184:	ldr	x19, [sp, #32]
  434188:	cmp	x20, x19
  43418c:	b.ne	434198 <_obstack_memory_used@@Base+0x17fb8>  // b.any
  434190:	mov	w0, #0x0                   	// #0
  434194:	b	4341e8 <_obstack_memory_used@@Base+0x18008>
  434198:	ldrb	w0, [x20]
  43419c:	bl	434778 <_obstack_memory_used@@Base+0x18598>
  4341a0:	strb	w0, [sp, #63]
  4341a4:	ldrb	w0, [x19]
  4341a8:	bl	434778 <_obstack_memory_used@@Base+0x18598>
  4341ac:	strb	w0, [sp, #62]
  4341b0:	ldrb	w0, [sp, #63]
  4341b4:	cmp	w0, #0x0
  4341b8:	b.eq	4341d8 <_obstack_memory_used@@Base+0x17ff8>  // b.none
  4341bc:	add	x20, x20, #0x1
  4341c0:	add	x19, x19, #0x1
  4341c4:	ldrb	w1, [sp, #63]
  4341c8:	ldrb	w0, [sp, #62]
  4341cc:	cmp	w1, w0
  4341d0:	b.eq	434198 <_obstack_memory_used@@Base+0x17fb8>  // b.none
  4341d4:	b	4341dc <_obstack_memory_used@@Base+0x17ffc>
  4341d8:	nop
  4341dc:	ldrb	w1, [sp, #63]
  4341e0:	ldrb	w0, [sp, #62]
  4341e4:	sub	w0, w1, w0
  4341e8:	ldp	x19, x20, [sp, #16]
  4341ec:	ldp	x29, x30, [sp], #64
  4341f0:	ret
  4341f4:	stp	x29, x30, [sp, #-304]!
  4341f8:	mov	x29, sp
  4341fc:	str	w0, [sp, #28]
  434200:	add	x0, sp, #0x28
  434204:	mov	x2, #0x101                 	// #257
  434208:	mov	x1, x0
  43420c:	ldr	w0, [sp, #28]
  434210:	bl	434368 <_obstack_memory_used@@Base+0x18188>
  434214:	cmp	w0, #0x0
  434218:	b.eq	434224 <_obstack_memory_used@@Base+0x18044>  // b.none
  43421c:	mov	w0, #0x0                   	// #0
  434220:	b	434270 <_obstack_memory_used@@Base+0x18090>
  434224:	add	x2, sp, #0x28
  434228:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  43422c:	add	x1, x0, #0x5c0
  434230:	mov	x0, x2
  434234:	bl	402b30 <strcmp@plt>
  434238:	cmp	w0, #0x0
  43423c:	b.eq	434264 <_obstack_memory_used@@Base+0x18084>  // b.none
  434240:	add	x2, sp, #0x28
  434244:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x1ae20>
  434248:	add	x1, x0, #0x5c8
  43424c:	mov	x0, x2
  434250:	bl	402b30 <strcmp@plt>
  434254:	cmp	w0, #0x0
  434258:	b.eq	434264 <_obstack_memory_used@@Base+0x18084>  // b.none
  43425c:	mov	w0, #0x1                   	// #1
  434260:	b	434268 <_obstack_memory_used@@Base+0x18088>
  434264:	mov	w0, #0x0                   	// #0
  434268:	and	w0, w0, #0x1
  43426c:	and	w0, w0, #0xff
  434270:	ldp	x29, x30, [sp], #304
  434274:	ret
  434278:	stp	x29, x30, [sp, #-48]!
  43427c:	mov	x29, sp
  434280:	str	w0, [sp, #28]
  434284:	mov	x1, #0x0                   	// #0
  434288:	ldr	w0, [sp, #28]
  43428c:	bl	402dd0 <setlocale@plt>
  434290:	str	x0, [sp, #40]
  434294:	ldr	x0, [sp, #40]
  434298:	ldp	x29, x30, [sp], #48
  43429c:	ret
  4342a0:	stp	x29, x30, [sp, #-64]!
  4342a4:	mov	x29, sp
  4342a8:	str	w0, [sp, #44]
  4342ac:	str	x1, [sp, #32]
  4342b0:	str	x2, [sp, #24]
  4342b4:	ldr	w0, [sp, #44]
  4342b8:	bl	434278 <_obstack_memory_used@@Base+0x18098>
  4342bc:	str	x0, [sp, #56]
  4342c0:	ldr	x0, [sp, #56]
  4342c4:	cmp	x0, #0x0
  4342c8:	b.ne	4342e8 <_obstack_memory_used@@Base+0x18108>  // b.any
  4342cc:	ldr	x0, [sp, #24]
  4342d0:	cmp	x0, #0x0
  4342d4:	b.eq	4342e0 <_obstack_memory_used@@Base+0x18100>  // b.none
  4342d8:	ldr	x0, [sp, #32]
  4342dc:	strb	wzr, [x0]
  4342e0:	mov	w0, #0x16                  	// #22
  4342e4:	b	434360 <_obstack_memory_used@@Base+0x18180>
  4342e8:	ldr	x0, [sp, #56]
  4342ec:	bl	402720 <strlen@plt>
  4342f0:	str	x0, [sp, #48]
  4342f4:	ldr	x1, [sp, #48]
  4342f8:	ldr	x0, [sp, #24]
  4342fc:	cmp	x1, x0
  434300:	b.cs	434324 <_obstack_memory_used@@Base+0x18144>  // b.hs, b.nlast
  434304:	ldr	x0, [sp, #48]
  434308:	add	x0, x0, #0x1
  43430c:	mov	x2, x0
  434310:	ldr	x1, [sp, #56]
  434314:	ldr	x0, [sp, #32]
  434318:	bl	4026d0 <memcpy@plt>
  43431c:	mov	w0, #0x0                   	// #0
  434320:	b	434360 <_obstack_memory_used@@Base+0x18180>
  434324:	ldr	x0, [sp, #24]
  434328:	cmp	x0, #0x0
  43432c:	b.eq	43435c <_obstack_memory_used@@Base+0x1817c>  // b.none
  434330:	ldr	x0, [sp, #24]
  434334:	sub	x0, x0, #0x1
  434338:	mov	x2, x0
  43433c:	ldr	x1, [sp, #56]
  434340:	ldr	x0, [sp, #32]
  434344:	bl	4026d0 <memcpy@plt>
  434348:	ldr	x0, [sp, #24]
  43434c:	sub	x0, x0, #0x1
  434350:	ldr	x1, [sp, #32]
  434354:	add	x0, x1, x0
  434358:	strb	wzr, [x0]
  43435c:	mov	w0, #0x22                  	// #34
  434360:	ldp	x29, x30, [sp], #64
  434364:	ret
  434368:	stp	x29, x30, [sp, #-48]!
  43436c:	mov	x29, sp
  434370:	str	w0, [sp, #44]
  434374:	str	x1, [sp, #32]
  434378:	str	x2, [sp, #24]
  43437c:	ldr	x2, [sp, #24]
  434380:	ldr	x1, [sp, #32]
  434384:	ldr	w0, [sp, #44]
  434388:	bl	4342a0 <_obstack_memory_used@@Base+0x180c0>
  43438c:	ldp	x29, x30, [sp], #48
  434390:	ret
  434394:	stp	x29, x30, [sp, #-32]!
  434398:	mov	x29, sp
  43439c:	str	w0, [sp, #28]
  4343a0:	ldr	w0, [sp, #28]
  4343a4:	bl	434278 <_obstack_memory_used@@Base+0x18098>
  4343a8:	ldp	x29, x30, [sp], #32
  4343ac:	ret
  4343b0:	sub	sp, sp, #0x10
  4343b4:	str	w0, [sp, #12]
  4343b8:	ldr	w0, [sp, #12]
  4343bc:	cmp	w0, #0x5f
  4343c0:	b.eq	43441c <_obstack_memory_used@@Base+0x1823c>  // b.none
  4343c4:	ldr	w0, [sp, #12]
  4343c8:	cmp	w0, #0x5f
  4343cc:	b.gt	434424 <_obstack_memory_used@@Base+0x18244>
  4343d0:	ldr	w0, [sp, #12]
  4343d4:	cmp	w0, #0x26
  4343d8:	b.eq	434414 <_obstack_memory_used@@Base+0x18234>  // b.none
  4343dc:	ldr	w0, [sp, #12]
  4343e0:	cmp	w0, #0x26
  4343e4:	b.gt	434424 <_obstack_memory_used@@Base+0x18244>
  4343e8:	ldr	w0, [sp, #12]
  4343ec:	cmp	w0, #0x10
  4343f0:	b.eq	434404 <_obstack_memory_used@@Base+0x18224>  // b.none
  4343f4:	ldr	w0, [sp, #12]
  4343f8:	cmp	w0, #0x16
  4343fc:	b.eq	43440c <_obstack_memory_used@@Base+0x1822c>  // b.none
  434400:	b	434424 <_obstack_memory_used@@Base+0x18244>
  434404:	mov	w0, #0x0                   	// #0
  434408:	b	434428 <_obstack_memory_used@@Base+0x18248>
  43440c:	mov	w0, #0x0                   	// #0
  434410:	b	434428 <_obstack_memory_used@@Base+0x18248>
  434414:	mov	w0, #0x0                   	// #0
  434418:	b	434428 <_obstack_memory_used@@Base+0x18248>
  43441c:	mov	w0, #0x0                   	// #0
  434420:	b	434428 <_obstack_memory_used@@Base+0x18248>
  434424:	mov	w0, #0x1                   	// #1
  434428:	add	sp, sp, #0x10
  43442c:	ret
  434430:	sub	sp, sp, #0x10
  434434:	str	w0, [sp, #12]
  434438:	ldr	w0, [sp, #12]
  43443c:	cmp	w0, #0x7a
  434440:	b.gt	434484 <_obstack_memory_used@@Base+0x182a4>
  434444:	ldr	w0, [sp, #12]
  434448:	cmp	w0, #0x61
  43444c:	b.ge	43447c <_obstack_memory_used@@Base+0x1829c>  // b.tcont
  434450:	ldr	w0, [sp, #12]
  434454:	cmp	w0, #0x39
  434458:	b.gt	43446c <_obstack_memory_used@@Base+0x1828c>
  43445c:	ldr	w0, [sp, #12]
  434460:	cmp	w0, #0x30
  434464:	b.ge	43447c <_obstack_memory_used@@Base+0x1829c>  // b.tcont
  434468:	b	434484 <_obstack_memory_used@@Base+0x182a4>
  43446c:	ldr	w0, [sp, #12]
  434470:	sub	w0, w0, #0x41
  434474:	cmp	w0, #0x19
  434478:	b.hi	434484 <_obstack_memory_used@@Base+0x182a4>  // b.pmore
  43447c:	mov	w0, #0x1                   	// #1
  434480:	b	434488 <_obstack_memory_used@@Base+0x182a8>
  434484:	mov	w0, #0x0                   	// #0
  434488:	add	sp, sp, #0x10
  43448c:	ret
  434490:	sub	sp, sp, #0x10
  434494:	str	w0, [sp, #12]
  434498:	ldr	w0, [sp, #12]
  43449c:	cmp	w0, #0x5a
  4344a0:	b.gt	4344b4 <_obstack_memory_used@@Base+0x182d4>
  4344a4:	ldr	w0, [sp, #12]
  4344a8:	cmp	w0, #0x41
  4344ac:	b.ge	4344c4 <_obstack_memory_used@@Base+0x182e4>  // b.tcont
  4344b0:	b	4344cc <_obstack_memory_used@@Base+0x182ec>
  4344b4:	ldr	w0, [sp, #12]
  4344b8:	sub	w0, w0, #0x61
  4344bc:	cmp	w0, #0x19
  4344c0:	b.hi	4344cc <_obstack_memory_used@@Base+0x182ec>  // b.pmore
  4344c4:	mov	w0, #0x1                   	// #1
  4344c8:	b	4344d0 <_obstack_memory_used@@Base+0x182f0>
  4344cc:	mov	w0, #0x0                   	// #0
  4344d0:	add	sp, sp, #0x10
  4344d4:	ret
  4344d8:	sub	sp, sp, #0x10
  4344dc:	str	w0, [sp, #12]
  4344e0:	ldr	w0, [sp, #12]
  4344e4:	cmp	w0, #0x7f
  4344e8:	b.hi	4344f4 <_obstack_memory_used@@Base+0x18314>  // b.pmore
  4344ec:	mov	w0, #0x1                   	// #1
  4344f0:	b	4344f8 <_obstack_memory_used@@Base+0x18318>
  4344f4:	mov	w0, #0x0                   	// #0
  4344f8:	add	sp, sp, #0x10
  4344fc:	ret
  434500:	sub	sp, sp, #0x10
  434504:	str	w0, [sp, #12]
  434508:	ldr	w0, [sp, #12]
  43450c:	cmp	w0, #0x20
  434510:	b.eq	434520 <_obstack_memory_used@@Base+0x18340>  // b.none
  434514:	ldr	w0, [sp, #12]
  434518:	cmp	w0, #0x9
  43451c:	b.ne	434528 <_obstack_memory_used@@Base+0x18348>  // b.any
  434520:	mov	w0, #0x1                   	// #1
  434524:	b	43452c <_obstack_memory_used@@Base+0x1834c>
  434528:	mov	w0, #0x0                   	// #0
  43452c:	and	w0, w0, #0x1
  434530:	and	w0, w0, #0xff
  434534:	add	sp, sp, #0x10
  434538:	ret
  43453c:	sub	sp, sp, #0x10
  434540:	str	w0, [sp, #12]
  434544:	ldr	w0, [sp, #12]
  434548:	cmp	w0, #0x1f
  43454c:	b.gt	434560 <_obstack_memory_used@@Base+0x18380>
  434550:	ldr	w0, [sp, #12]
  434554:	cmp	w0, #0x0
  434558:	b.ge	43456c <_obstack_memory_used@@Base+0x1838c>  // b.tcont
  43455c:	b	434574 <_obstack_memory_used@@Base+0x18394>
  434560:	ldr	w0, [sp, #12]
  434564:	cmp	w0, #0x7f
  434568:	b.ne	434574 <_obstack_memory_used@@Base+0x18394>  // b.any
  43456c:	mov	w0, #0x1                   	// #1
  434570:	b	434578 <_obstack_memory_used@@Base+0x18398>
  434574:	mov	w0, #0x0                   	// #0
  434578:	add	sp, sp, #0x10
  43457c:	ret
  434580:	sub	sp, sp, #0x10
  434584:	str	w0, [sp, #12]
  434588:	ldr	w0, [sp, #12]
  43458c:	sub	w0, w0, #0x30
  434590:	cmp	w0, #0x9
  434594:	b.hi	4345a0 <_obstack_memory_used@@Base+0x183c0>  // b.pmore
  434598:	mov	w0, #0x1                   	// #1
  43459c:	b	4345a4 <_obstack_memory_used@@Base+0x183c4>
  4345a0:	mov	w0, #0x0                   	// #0
  4345a4:	add	sp, sp, #0x10
  4345a8:	ret
  4345ac:	sub	sp, sp, #0x10
  4345b0:	str	w0, [sp, #12]
  4345b4:	ldr	w0, [sp, #12]
  4345b8:	sub	w0, w0, #0x21
  4345bc:	cmp	w0, #0x5d
  4345c0:	b.hi	4345cc <_obstack_memory_used@@Base+0x183ec>  // b.pmore
  4345c4:	mov	w0, #0x1                   	// #1
  4345c8:	b	4345d0 <_obstack_memory_used@@Base+0x183f0>
  4345cc:	mov	w0, #0x0                   	// #0
  4345d0:	add	sp, sp, #0x10
  4345d4:	ret
  4345d8:	sub	sp, sp, #0x10
  4345dc:	str	w0, [sp, #12]
  4345e0:	ldr	w0, [sp, #12]
  4345e4:	sub	w0, w0, #0x61
  4345e8:	cmp	w0, #0x19
  4345ec:	b.hi	4345f8 <_obstack_memory_used@@Base+0x18418>  // b.pmore
  4345f0:	mov	w0, #0x1                   	// #1
  4345f4:	b	4345fc <_obstack_memory_used@@Base+0x1841c>
  4345f8:	mov	w0, #0x0                   	// #0
  4345fc:	add	sp, sp, #0x10
  434600:	ret
  434604:	sub	sp, sp, #0x10
  434608:	str	w0, [sp, #12]
  43460c:	ldr	w0, [sp, #12]
  434610:	sub	w0, w0, #0x20
  434614:	cmp	w0, #0x5e
  434618:	b.hi	434624 <_obstack_memory_used@@Base+0x18444>  // b.pmore
  43461c:	mov	w0, #0x1                   	// #1
  434620:	b	434628 <_obstack_memory_used@@Base+0x18448>
  434624:	mov	w0, #0x0                   	// #0
  434628:	add	sp, sp, #0x10
  43462c:	ret
  434630:	sub	sp, sp, #0x10
  434634:	str	w0, [sp, #12]
  434638:	ldr	w0, [sp, #12]
  43463c:	cmp	w0, #0x7e
  434640:	b.gt	43469c <_obstack_memory_used@@Base+0x184bc>
  434644:	ldr	w0, [sp, #12]
  434648:	cmp	w0, #0x7b
  43464c:	b.ge	434694 <_obstack_memory_used@@Base+0x184b4>  // b.tcont
  434650:	ldr	w0, [sp, #12]
  434654:	cmp	w0, #0x60
  434658:	b.gt	43469c <_obstack_memory_used@@Base+0x184bc>
  43465c:	ldr	w0, [sp, #12]
  434660:	cmp	w0, #0x5b
  434664:	b.ge	434694 <_obstack_memory_used@@Base+0x184b4>  // b.tcont
  434668:	ldr	w0, [sp, #12]
  43466c:	cmp	w0, #0x2f
  434670:	b.gt	434684 <_obstack_memory_used@@Base+0x184a4>
  434674:	ldr	w0, [sp, #12]
  434678:	cmp	w0, #0x21
  43467c:	b.ge	434694 <_obstack_memory_used@@Base+0x184b4>  // b.tcont
  434680:	b	43469c <_obstack_memory_used@@Base+0x184bc>
  434684:	ldr	w0, [sp, #12]
  434688:	sub	w0, w0, #0x3a
  43468c:	cmp	w0, #0x6
  434690:	b.hi	43469c <_obstack_memory_used@@Base+0x184bc>  // b.pmore
  434694:	mov	w0, #0x1                   	// #1
  434698:	b	4346a0 <_obstack_memory_used@@Base+0x184c0>
  43469c:	mov	w0, #0x0                   	// #0
  4346a0:	add	sp, sp, #0x10
  4346a4:	ret
  4346a8:	sub	sp, sp, #0x10
  4346ac:	str	w0, [sp, #12]
  4346b0:	ldr	w0, [sp, #12]
  4346b4:	cmp	w0, #0xd
  4346b8:	b.gt	4346cc <_obstack_memory_used@@Base+0x184ec>
  4346bc:	ldr	w0, [sp, #12]
  4346c0:	cmp	w0, #0x9
  4346c4:	b.ge	4346d8 <_obstack_memory_used@@Base+0x184f8>  // b.tcont
  4346c8:	b	4346e0 <_obstack_memory_used@@Base+0x18500>
  4346cc:	ldr	w0, [sp, #12]
  4346d0:	cmp	w0, #0x20
  4346d4:	b.ne	4346e0 <_obstack_memory_used@@Base+0x18500>  // b.any
  4346d8:	mov	w0, #0x1                   	// #1
  4346dc:	b	4346e4 <_obstack_memory_used@@Base+0x18504>
  4346e0:	mov	w0, #0x0                   	// #0
  4346e4:	add	sp, sp, #0x10
  4346e8:	ret
  4346ec:	sub	sp, sp, #0x10
  4346f0:	str	w0, [sp, #12]
  4346f4:	ldr	w0, [sp, #12]
  4346f8:	sub	w0, w0, #0x41
  4346fc:	cmp	w0, #0x19
  434700:	b.hi	43470c <_obstack_memory_used@@Base+0x1852c>  // b.pmore
  434704:	mov	w0, #0x1                   	// #1
  434708:	b	434710 <_obstack_memory_used@@Base+0x18530>
  43470c:	mov	w0, #0x0                   	// #0
  434710:	add	sp, sp, #0x10
  434714:	ret
  434718:	sub	sp, sp, #0x10
  43471c:	str	w0, [sp, #12]
  434720:	ldr	w0, [sp, #12]
  434724:	sub	w0, w0, #0x30
  434728:	cmp	w0, #0x36
  43472c:	cset	w1, hi  // hi = pmore
  434730:	and	w1, w1, #0xff
  434734:	cmp	w1, #0x0
  434738:	b.ne	43476c <_obstack_memory_used@@Base+0x1858c>  // b.any
  43473c:	mov	x1, #0x1                   	// #1
  434740:	lsl	x1, x1, x0
  434744:	mov	x0, #0x7e0000007e0000      	// #35465847073800192
  434748:	movk	x0, #0x3ff
  43474c:	and	x0, x1, x0
  434750:	cmp	x0, #0x0
  434754:	cset	w0, ne  // ne = any
  434758:	and	w0, w0, #0xff
  43475c:	cmp	w0, #0x0
  434760:	b.eq	43476c <_obstack_memory_used@@Base+0x1858c>  // b.none
  434764:	mov	w0, #0x1                   	// #1
  434768:	b	434770 <_obstack_memory_used@@Base+0x18590>
  43476c:	mov	w0, #0x0                   	// #0
  434770:	add	sp, sp, #0x10
  434774:	ret
  434778:	sub	sp, sp, #0x10
  43477c:	str	w0, [sp, #12]
  434780:	ldr	w0, [sp, #12]
  434784:	sub	w0, w0, #0x41
  434788:	cmp	w0, #0x19
  43478c:	b.hi	43479c <_obstack_memory_used@@Base+0x185bc>  // b.pmore
  434790:	ldr	w0, [sp, #12]
  434794:	add	w0, w0, #0x20
  434798:	b	4347a0 <_obstack_memory_used@@Base+0x185c0>
  43479c:	ldr	w0, [sp, #12]
  4347a0:	add	sp, sp, #0x10
  4347a4:	ret
  4347a8:	sub	sp, sp, #0x10
  4347ac:	str	w0, [sp, #12]
  4347b0:	ldr	w0, [sp, #12]
  4347b4:	sub	w0, w0, #0x61
  4347b8:	cmp	w0, #0x19
  4347bc:	b.hi	4347cc <_obstack_memory_used@@Base+0x185ec>  // b.pmore
  4347c0:	ldr	w0, [sp, #12]
  4347c4:	sub	w0, w0, #0x20
  4347c8:	b	4347d0 <_obstack_memory_used@@Base+0x185f0>
  4347cc:	ldr	w0, [sp, #12]
  4347d0:	add	sp, sp, #0x10
  4347d4:	ret
  4347d8:	stp	x29, x30, [sp, #-64]!
  4347dc:	mov	x29, sp
  4347e0:	stp	x19, x20, [sp, #16]
  4347e4:	adrp	x20, 44c000 <_obstack_memory_used@@Base+0x2fe20>
  4347e8:	add	x20, x20, #0xde0
  4347ec:	stp	x21, x22, [sp, #32]
  4347f0:	adrp	x21, 44c000 <_obstack_memory_used@@Base+0x2fe20>
  4347f4:	add	x21, x21, #0xdd8
  4347f8:	sub	x20, x20, x21
  4347fc:	mov	w22, w0
  434800:	stp	x23, x24, [sp, #48]
  434804:	mov	x23, x1
  434808:	mov	x24, x2
  43480c:	bl	402688 <mbrtowc@plt-0x38>
  434810:	cmp	xzr, x20, asr #3
  434814:	b.eq	434840 <_obstack_memory_used@@Base+0x18660>  // b.none
  434818:	asr	x20, x20, #3
  43481c:	mov	x19, #0x0                   	// #0
  434820:	ldr	x3, [x21, x19, lsl #3]
  434824:	mov	x2, x24
  434828:	add	x19, x19, #0x1
  43482c:	mov	x1, x23
  434830:	mov	w0, w22
  434834:	blr	x3
  434838:	cmp	x20, x19
  43483c:	b.ne	434820 <_obstack_memory_used@@Base+0x18640>  // b.any
  434840:	ldp	x19, x20, [sp, #16]
  434844:	ldp	x21, x22, [sp, #32]
  434848:	ldp	x23, x24, [sp, #48]
  43484c:	ldp	x29, x30, [sp], #64
  434850:	ret
  434854:	nop
  434858:	ret
  43485c:	nop
  434860:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x30e20>
  434864:	mov	x1, #0x0                   	// #0
  434868:	ldr	x2, [x2, #936]
  43486c:	b	4027c0 <__cxa_atexit@plt>
  434870:	mov	x2, x1
  434874:	mov	w1, w0
  434878:	mov	w0, #0x0                   	// #0
  43487c:	b	402c80 <__fxstat@plt>
  434880:	mov	x2, x1
  434884:	mov	x1, x0
  434888:	mov	w0, #0x0                   	// #0
  43488c:	b	402c20 <__lxstat@plt>

Disassembly of section .fini:

0000000000434890 <.fini>:
  434890:	stp	x29, x30, [sp, #-16]!
  434894:	mov	x29, sp
  434898:	ldp	x29, x30, [sp], #16
  43489c:	ret
