
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//scsi_id_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401710 <_init>:
  401710:	stp	x29, x30, [sp, #-16]!
  401714:	mov	x29, sp
  401718:	bl	401b48 <call_weak_fn>
  40171c:	ldp	x29, x30, [sp], #16
  401720:	ret

Disassembly of section .plt:

0000000000401728 <__libc_start_main@plt-0x20>:
  401728:	stp	x16, x30, [sp, #-16]!
  40172c:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  401730:	ldr	x17, [x16, #3616]
  401734:	add	x16, x16, #0xe20
  401738:	br	x17
  40173c:	nop
  401740:	nop
  401744:	nop

0000000000401748 <__libc_start_main@plt>:
  401748:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40174c:	ldr	x17, [x16, #3624]
  401750:	add	x16, x16, #0xe28
  401754:	br	x17

0000000000401758 <abort@plt>:
  401758:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40175c:	ldr	x17, [x16, #3632]
  401760:	add	x16, x16, #0xe30
  401764:	br	x17

0000000000401768 <__gmon_start__@plt>:
  401768:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40176c:	ldr	x17, [x16, #3640]
  401770:	add	x16, x16, #0xe38
  401774:	br	x17

0000000000401778 <log_set_target@plt>:
  401778:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40177c:	ldr	x17, [x16, #3648]
  401780:	add	x16, x16, #0xe40
  401784:	br	x17

0000000000401788 <log_parse_environment_realm@plt>:
  401788:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40178c:	ldr	x17, [x16, #3656]
  401790:	add	x16, x16, #0xe48
  401794:	br	x17

0000000000401798 <log_open@plt>:
  401798:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40179c:	ldr	x17, [x16, #3664]
  4017a0:	add	x16, x16, #0xe50
  4017a4:	br	x17

00000000004017a8 <log_assert_failed_realm@plt>:
  4017a8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  4017ac:	ldr	x17, [x16, #3672]
  4017b0:	add	x16, x16, #0xe58
  4017b4:	br	x17

00000000004017b8 <exit@plt>:
  4017b8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  4017bc:	ldr	x17, [x16, #3680]
  4017c0:	add	x16, x16, #0xe60
  4017c4:	br	x17

00000000004017c8 <log_get_max_level_realm@plt>:
  4017c8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  4017cc:	ldr	x17, [x16, #3688]
  4017d0:	add	x16, x16, #0xe68
  4017d4:	br	x17

00000000004017d8 <log_internal_realm@plt>:
  4017d8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  4017dc:	ldr	x17, [x16, #3696]
  4017e0:	add	x16, x16, #0xe70
  4017e4:	br	x17

00000000004017e8 <abs@plt>:
  4017e8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  4017ec:	ldr	x17, [x16, #3704]
  4017f0:	add	x16, x16, #0xe78
  4017f4:	br	x17

00000000004017f8 <free@plt>:
  4017f8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  4017fc:	ldr	x17, [x16, #3712]
  401800:	add	x16, x16, #0xe80
  401804:	br	x17

0000000000401808 <log_close@plt>:
  401808:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40180c:	ldr	x17, [x16, #3720]
  401810:	add	x16, x16, #0xe88
  401814:	br	x17

0000000000401818 <udev_parse_config_full@plt>:
  401818:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40181c:	ldr	x17, [x16, #3728]
  401820:	add	x16, x16, #0xe90
  401824:	br	x17

0000000000401828 <fopen64@plt>:
  401828:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40182c:	ldr	x17, [x16, #3736]
  401830:	add	x16, x16, #0xe98
  401834:	br	x17

0000000000401838 <__errno_location@plt>:
  401838:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40183c:	ldr	x17, [x16, #3744]
  401840:	add	x16, x16, #0xea0
  401844:	br	x17

0000000000401848 <malloc@plt>:
  401848:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40184c:	ldr	x17, [x16, #3752]
  401850:	add	x16, x16, #0xea8
  401854:	br	x17

0000000000401858 <log_oom_internal@plt>:
  401858:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40185c:	ldr	x17, [x16, #3760]
  401860:	add	x16, x16, #0xeb0
  401864:	br	x17

0000000000401868 <fgets@plt>:
  401868:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40186c:	ldr	x17, [x16, #3768]
  401870:	add	x16, x16, #0xeb8
  401874:	br	x17

0000000000401878 <strlen@plt>:
  401878:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40187c:	ldr	x17, [x16, #3776]
  401880:	add	x16, x16, #0xec0
  401884:	br	x17

0000000000401888 <__ctype_b_loc@plt>:
  401888:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40188c:	ldr	x17, [x16, #3784]
  401890:	add	x16, x16, #0xec8
  401894:	br	x17

0000000000401898 <strsep@plt>:
  401898:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40189c:	ldr	x17, [x16, #3792]
  4018a0:	add	x16, x16, #0xed0
  4018a4:	br	x17

00000000004018a8 <strcasecmp@plt>:
  4018a8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  4018ac:	ldr	x17, [x16, #3800]
  4018b0:	add	x16, x16, #0xed8
  4018b4:	br	x17

00000000004018b8 <strcpy@plt>:
  4018b8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  4018bc:	ldr	x17, [x16, #3808]
  4018c0:	add	x16, x16, #0xee0
  4018c4:	br	x17

00000000004018c8 <calloc@plt>:
  4018c8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  4018cc:	ldr	x17, [x16, #3816]
  4018d0:	add	x16, x16, #0xee8
  4018d4:	br	x17

00000000004018d8 <getopt_long@plt>:
  4018d8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  4018dc:	ldr	x17, [x16, #3824]
  4018e0:	add	x16, x16, #0xef0
  4018e4:	br	x17

00000000004018e8 <strscpy@plt>:
  4018e8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  4018ec:	ldr	x17, [x16, #3832]
  4018f0:	add	x16, x16, #0xef8
  4018f4:	br	x17

00000000004018f8 <strcmp@plt>:
  4018f8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  4018fc:	ldr	x17, [x16, #3840]
  401900:	add	x16, x16, #0xf00
  401904:	br	x17

0000000000401908 <atoi@plt>:
  401908:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40190c:	ldr	x17, [x16, #3848]
  401910:	add	x16, x16, #0xf08
  401914:	br	x17

0000000000401918 <log_set_max_level_realm@plt>:
  401918:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40191c:	ldr	x17, [x16, #3856]
  401920:	add	x16, x16, #0xf10
  401924:	br	x17

0000000000401928 <printf@plt>:
  401928:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40192c:	ldr	x17, [x16, #3864]
  401930:	add	x16, x16, #0xf18
  401934:	br	x17

0000000000401938 <log_assert_failed_unreachable_realm@plt>:
  401938:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40193c:	ldr	x17, [x16, #3872]
  401940:	add	x16, x16, #0xf20
  401944:	br	x17

0000000000401948 <memset@plt>:
  401948:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40194c:	ldr	x17, [x16, #3880]
  401950:	add	x16, x16, #0xf28
  401954:	br	x17

0000000000401958 <safe_fclose@plt>:
  401958:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40195c:	ldr	x17, [x16, #3888]
  401960:	add	x16, x16, #0xf30
  401964:	br	x17

0000000000401968 <strncmp@plt>:
  401968:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40196c:	ldr	x17, [x16, #3896]
  401970:	add	x16, x16, #0xf38
  401974:	br	x17

0000000000401978 <strtoul@plt>:
  401978:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40197c:	ldr	x17, [x16, #3904]
  401980:	add	x16, x16, #0xf40
  401984:	br	x17

0000000000401988 <open64@plt>:
  401988:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40198c:	ldr	x17, [x16, #3912]
  401990:	add	x16, x16, #0xf48
  401994:	br	x17

0000000000401998 <gnu_dev_major@plt>:
  401998:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  40199c:	ldr	x17, [x16, #3920]
  4019a0:	add	x16, x16, #0xf50
  4019a4:	br	x17

00000000004019a8 <gnu_dev_minor@plt>:
  4019a8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  4019ac:	ldr	x17, [x16, #3928]
  4019b0:	add	x16, x16, #0xf58
  4019b4:	br	x17

00000000004019b8 <sprintf@plt>:
  4019b8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  4019bc:	ldr	x17, [x16, #3936]
  4019c0:	add	x16, x16, #0xf60
  4019c4:	br	x17

00000000004019c8 <close@plt>:
  4019c8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  4019cc:	ldr	x17, [x16, #3944]
  4019d0:	add	x16, x16, #0xf68
  4019d4:	br	x17

00000000004019d8 <ioctl@plt>:
  4019d8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  4019dc:	ldr	x17, [x16, #3952]
  4019e0:	add	x16, x16, #0xf70
  4019e4:	br	x17

00000000004019e8 <initialize_srand@plt>:
  4019e8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  4019ec:	ldr	x17, [x16, #3960]
  4019f0:	add	x16, x16, #0xf78
  4019f4:	br	x17

00000000004019f8 <rand@plt>:
  4019f8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  4019fc:	ldr	x17, [x16, #3968]
  401a00:	add	x16, x16, #0xf80
  401a04:	br	x17

0000000000401a08 <nanosleep@plt>:
  401a08:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  401a0c:	ldr	x17, [x16, #3976]
  401a10:	add	x16, x16, #0xf88
  401a14:	br	x17

0000000000401a18 <memcpy@plt>:
  401a18:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  401a1c:	ldr	x17, [x16, #3984]
  401a20:	add	x16, x16, #0xf90
  401a24:	br	x17

0000000000401a28 <strnlen@plt>:
  401a28:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  401a2c:	ldr	x17, [x16, #3992]
  401a30:	add	x16, x16, #0xf98
  401a34:	br	x17

0000000000401a38 <strncpy@plt>:
  401a38:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  401a3c:	ldr	x17, [x16, #4000]
  401a40:	add	x16, x16, #0xfa0
  401a44:	br	x17

0000000000401a48 <strchr@plt>:
  401a48:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  401a4c:	ldr	x17, [x16, #4008]
  401a50:	add	x16, x16, #0xfa8
  401a54:	br	x17

0000000000401a58 <sd_device_new_from_subsystem_sysname@plt>:
  401a58:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  401a5c:	ldr	x17, [x16, #4016]
  401a60:	add	x16, x16, #0xfb0
  401a64:	br	x17

0000000000401a68 <sd_device_get_sysattr_value@plt>:
  401a68:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  401a6c:	ldr	x17, [x16, #4024]
  401a70:	add	x16, x16, #0xfb8
  401a74:	br	x17

0000000000401a78 <sd_device_get_syspath@plt>:
  401a78:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  401a7c:	ldr	x17, [x16, #4032]
  401a80:	add	x16, x16, #0xfc0
  401a84:	br	x17

0000000000401a88 <strscpyl@plt>:
  401a88:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  401a8c:	ldr	x17, [x16, #4040]
  401a90:	add	x16, x16, #0xfc8
  401a94:	br	x17

0000000000401a98 <sd_device_unref@plt>:
  401a98:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  401a9c:	ldr	x17, [x16, #4048]
  401aa0:	add	x16, x16, #0xfd0
  401aa4:	br	x17

0000000000401aa8 <strspn@plt>:
  401aa8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  401aac:	ldr	x17, [x16, #4056]
  401ab0:	add	x16, x16, #0xfd8
  401ab4:	br	x17

0000000000401ab8 <whitelisted_char_for_devnode@plt>:
  401ab8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  401abc:	ldr	x17, [x16, #4064]
  401ac0:	add	x16, x16, #0xfe0
  401ac4:	br	x17

0000000000401ac8 <utf8_encoded_valid_unichar@plt>:
  401ac8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  401acc:	ldr	x17, [x16, #4072]
  401ad0:	add	x16, x16, #0xfe8
  401ad4:	br	x17

0000000000401ad8 <encode_devnode_name@plt>:
  401ad8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  401adc:	ldr	x17, [x16, #4080]
  401ae0:	add	x16, x16, #0xff0
  401ae4:	br	x17

0000000000401ae8 <__fxstat64@plt>:
  401ae8:	adrp	x16, 41f000 <__FRAME_END__+0x17250>
  401aec:	ldr	x17, [x16, #4088]
  401af0:	add	x16, x16, #0xff8
  401af4:	br	x17

Disassembly of section .text:

0000000000401af8 <_start>:
  401af8:	mov	x29, #0x0                   	// #0
  401afc:	mov	x30, #0x0                   	// #0
  401b00:	mov	x5, x0
  401b04:	ldr	x1, [sp]
  401b08:	add	x2, sp, #0x8
  401b0c:	mov	x6, sp
  401b10:	movz	x0, #0x0, lsl #48
  401b14:	movk	x0, #0x0, lsl #32
  401b18:	movk	x0, #0x40, lsl #16
  401b1c:	movk	x0, #0x1cc0
  401b20:	movz	x3, #0x0, lsl #48
  401b24:	movk	x3, #0x0, lsl #32
  401b28:	movk	x3, #0x40, lsl #16
  401b2c:	movk	x3, #0x6ca0
  401b30:	movz	x4, #0x0, lsl #48
  401b34:	movk	x4, #0x0, lsl #32
  401b38:	movk	x4, #0x40, lsl #16
  401b3c:	movk	x4, #0x6d20
  401b40:	bl	401748 <__libc_start_main@plt>
  401b44:	bl	401758 <abort@plt>

0000000000401b48 <call_weak_fn>:
  401b48:	adrp	x0, 41f000 <__FRAME_END__+0x17250>
  401b4c:	ldr	x0, [x0, #3592]
  401b50:	cbz	x0, 401b58 <call_weak_fn+0x10>
  401b54:	b	401768 <__gmon_start__@plt>
  401b58:	ret

0000000000401b5c <deregister_tm_clones>:
  401b5c:	stp	x29, x30, [sp, #-32]!
  401b60:	mov	x29, sp
  401b64:	adrp	x0, 420000 <config_file>
  401b68:	add	x0, x0, #0x0
  401b6c:	str	x0, [sp, #24]
  401b70:	ldr	x0, [sp, #24]
  401b74:	str	x0, [sp, #24]
  401b78:	ldr	x1, [sp, #24]
  401b7c:	adrp	x0, 420000 <config_file>
  401b80:	add	x0, x0, #0x0
  401b84:	cmp	x1, x0
  401b88:	b.eq	401bc4 <deregister_tm_clones+0x68>  // b.none
  401b8c:	adrp	x0, 406000 <check_fill_0x83_id+0x2d8>
  401b90:	add	x0, x0, #0xd50
  401b94:	ldr	x0, [x0]
  401b98:	str	x0, [sp, #16]
  401b9c:	ldr	x0, [sp, #16]
  401ba0:	str	x0, [sp, #16]
  401ba4:	ldr	x0, [sp, #16]
  401ba8:	cmp	x0, #0x0
  401bac:	b.eq	401bc8 <deregister_tm_clones+0x6c>  // b.none
  401bb0:	ldr	x1, [sp, #16]
  401bb4:	adrp	x0, 420000 <config_file>
  401bb8:	add	x0, x0, #0x0
  401bbc:	blr	x1
  401bc0:	b	401bc8 <deregister_tm_clones+0x6c>
  401bc4:	nop
  401bc8:	ldp	x29, x30, [sp], #32
  401bcc:	ret

0000000000401bd0 <register_tm_clones>:
  401bd0:	stp	x29, x30, [sp, #-48]!
  401bd4:	mov	x29, sp
  401bd8:	adrp	x0, 420000 <config_file>
  401bdc:	add	x0, x0, #0x0
  401be0:	str	x0, [sp, #40]
  401be4:	ldr	x0, [sp, #40]
  401be8:	str	x0, [sp, #40]
  401bec:	ldr	x1, [sp, #40]
  401bf0:	adrp	x0, 420000 <config_file>
  401bf4:	add	x0, x0, #0x0
  401bf8:	sub	x0, x1, x0
  401bfc:	asr	x0, x0, #3
  401c00:	lsr	x1, x0, #63
  401c04:	add	x0, x1, x0
  401c08:	asr	x0, x0, #1
  401c0c:	str	x0, [sp, #32]
  401c10:	ldr	x0, [sp, #32]
  401c14:	cmp	x0, #0x0
  401c18:	b.eq	401c58 <register_tm_clones+0x88>  // b.none
  401c1c:	adrp	x0, 406000 <check_fill_0x83_id+0x2d8>
  401c20:	add	x0, x0, #0xd58
  401c24:	ldr	x0, [x0]
  401c28:	str	x0, [sp, #24]
  401c2c:	ldr	x0, [sp, #24]
  401c30:	str	x0, [sp, #24]
  401c34:	ldr	x0, [sp, #24]
  401c38:	cmp	x0, #0x0
  401c3c:	b.eq	401c5c <register_tm_clones+0x8c>  // b.none
  401c40:	ldr	x2, [sp, #24]
  401c44:	ldr	x1, [sp, #32]
  401c48:	adrp	x0, 420000 <config_file>
  401c4c:	add	x0, x0, #0x0
  401c50:	blr	x2
  401c54:	b	401c5c <register_tm_clones+0x8c>
  401c58:	nop
  401c5c:	ldp	x29, x30, [sp], #48
  401c60:	ret

0000000000401c64 <__do_global_dtors_aux>:
  401c64:	stp	x29, x30, [sp, #-16]!
  401c68:	mov	x29, sp
  401c6c:	adrp	x0, 420000 <config_file>
  401c70:	add	x0, x0, #0x218
  401c74:	ldrb	w0, [x0]
  401c78:	and	x0, x0, #0xff
  401c7c:	cmp	x0, #0x0
  401c80:	b.ne	401c9c <__do_global_dtors_aux+0x38>  // b.any
  401c84:	bl	401b5c <deregister_tm_clones>
  401c88:	adrp	x0, 420000 <config_file>
  401c8c:	add	x0, x0, #0x218
  401c90:	mov	w1, #0x1                   	// #1
  401c94:	strb	w1, [x0]
  401c98:	b	401ca0 <__do_global_dtors_aux+0x3c>
  401c9c:	nop
  401ca0:	ldp	x29, x30, [sp], #16
  401ca4:	ret

0000000000401ca8 <frame_dummy>:
  401ca8:	stp	x29, x30, [sp, #-16]!
  401cac:	mov	x29, sp
  401cb0:	bl	401bd0 <register_tm_clones>
  401cb4:	nop
  401cb8:	ldp	x29, x30, [sp], #16
  401cbc:	ret

0000000000401cc0 <main>:
  401cc0:	stp	x29, x30, [sp, #-32]!
  401cc4:	str	x28, [sp, #16]
  401cc8:	mov	x29, sp
  401ccc:	sub	sp, sp, #0x260
  401cd0:	mov	x8, xzr
  401cd4:	mov	w9, #0x7                   	// #7
  401cd8:	mov	w10, #0x1                   	// #1
  401cdc:	mov	x2, x8
  401ce0:	adrp	x11, 407000 <options+0x178>
  401ce4:	add	x11, x11, #0x10
  401ce8:	add	x11, x11, #0x3
  401cec:	add	x12, sp, #0x48
  401cf0:	add	x3, sp, #0x40
  401cf4:	stur	wzr, [x29, #-4]
  401cf8:	stur	w0, [x29, #-8]
  401cfc:	stur	x1, [x29, #-16]
  401d00:	stur	wzr, [x29, #-20]
  401d04:	str	x8, [sp, #64]
  401d08:	mov	w0, w9
  401d0c:	str	w10, [sp, #44]
  401d10:	str	x2, [sp, #32]
  401d14:	str	x11, [sp, #24]
  401d18:	str	x12, [sp, #16]
  401d1c:	str	x3, [sp, #8]
  401d20:	bl	401778 <log_set_target@plt>
  401d24:	bl	401ee4 <udev_parse_config>
  401d28:	ldr	w9, [sp, #44]
  401d2c:	mov	w0, w9
  401d30:	bl	401788 <log_parse_environment_realm@plt>
  401d34:	bl	401798 <log_open@plt>
  401d38:	ldr	x1, [sp, #32]
  401d3c:	mov	x0, x1
  401d40:	ldr	x2, [sp, #16]
  401d44:	ldr	x3, [sp, #8]
  401d48:	bl	401f18 <get_file_options>
  401d4c:	stur	w0, [x29, #-20]
  401d50:	ldur	w9, [x29, #-20]
  401d54:	cmp	w9, #0x0
  401d58:	cset	w9, ge  // ge = tcont
  401d5c:	tbnz	w9, #0, 401d6c <main+0xac>
  401d60:	mov	w8, #0x1                   	// #1
  401d64:	stur	w8, [x29, #-20]
  401d68:	b	401eb0 <main+0x1f0>
  401d6c:	ldur	w8, [x29, #-20]
  401d70:	cbnz	w8, 401de8 <main+0x128>
  401d74:	ldr	x8, [sp, #64]
  401d78:	cmp	x8, #0x0
  401d7c:	cset	w9, ne  // ne = any
  401d80:	mov	w10, #0x1                   	// #1
  401d84:	eor	w9, w9, #0x1
  401d88:	eor	w9, w9, w10
  401d8c:	eor	w9, w9, w10
  401d90:	and	w9, w9, #0x1
  401d94:	mov	w0, w9
  401d98:	sxtw	x8, w0
  401d9c:	cbz	x8, 401dc0 <main+0x100>
  401da0:	mov	w0, #0x1                   	// #1
  401da4:	adrp	x1, 407000 <options+0x178>
  401da8:	add	x1, x1, #0x8
  401dac:	ldr	x2, [sp, #24]
  401db0:	mov	w3, #0x237                 	// #567
  401db4:	adrp	x4, 407000 <options+0x178>
  401db8:	add	x4, x4, #0x2e
  401dbc:	bl	4017a8 <log_assert_failed_realm@plt>
  401dc0:	ldr	w0, [sp, #72]
  401dc4:	ldr	x1, [sp, #64]
  401dc8:	add	x2, sp, #0x4c
  401dcc:	bl	402534 <set_options>
  401dd0:	cmp	w0, #0x0
  401dd4:	cset	w8, ge  // ge = tcont
  401dd8:	tbnz	w8, #0, 401de8 <main+0x128>
  401ddc:	mov	w8, #0x2                   	// #2
  401de0:	stur	w8, [x29, #-20]
  401de4:	b	401eb0 <main+0x1f0>
  401de8:	ldur	w0, [x29, #-8]
  401dec:	ldur	x1, [x29, #-16]
  401df0:	add	x2, sp, #0x4c
  401df4:	bl	402534 <set_options>
  401df8:	cmp	w0, #0x0
  401dfc:	cset	w8, ge  // ge = tcont
  401e00:	tbnz	w8, #0, 401e0c <main+0x14c>
  401e04:	mov	w0, #0x1                   	// #1
  401e08:	bl	4017b8 <exit@plt>
  401e0c:	adrp	x8, 420000 <config_file>
  401e10:	add	x8, x8, #0x21c
  401e14:	ldrb	w9, [x8]
  401e18:	tbnz	w9, #0, 401ea4 <main+0x1e4>
  401e1c:	mov	w8, #0x3                   	// #3
  401e20:	str	w8, [sp, #60]
  401e24:	str	wzr, [sp, #56]
  401e28:	mov	w8, #0x1                   	// #1
  401e2c:	str	w8, [sp, #52]
  401e30:	ldr	w0, [sp, #52]
  401e34:	bl	4017c8 <log_get_max_level_realm@plt>
  401e38:	ldr	w8, [sp, #60]
  401e3c:	and	w8, w8, #0x7
  401e40:	cmp	w0, w8
  401e44:	b.lt	401e7c <main+0x1bc>  // b.tstop
  401e48:	ldr	w8, [sp, #52]
  401e4c:	ldr	w9, [sp, #60]
  401e50:	orr	w0, w9, w8, lsl #10
  401e54:	ldr	w1, [sp, #56]
  401e58:	ldr	x2, [sp, #24]
  401e5c:	mov	w3, #0x246                 	// #582
  401e60:	adrp	x4, 407000 <options+0x178>
  401e64:	add	x4, x4, #0x45
  401e68:	adrp	x5, 407000 <options+0x178>
  401e6c:	add	x5, x5, #0x4a
  401e70:	bl	4017d8 <log_internal_realm@plt>
  401e74:	str	w0, [sp, #4]
  401e78:	b	401e90 <main+0x1d0>
  401e7c:	ldr	w0, [sp, #56]
  401e80:	bl	4017e8 <abs@plt>
  401e84:	mov	w8, wzr
  401e88:	subs	w8, w8, w0, uxtb
  401e8c:	str	w8, [sp, #4]
  401e90:	ldr	w8, [sp, #4]
  401e94:	str	w8, [sp, #48]
  401e98:	mov	w8, #0x1                   	// #1
  401e9c:	stur	w8, [x29, #-20]
  401ea0:	b	401eb0 <main+0x1f0>
  401ea4:	add	x0, sp, #0x4c
  401ea8:	bl	402960 <scsi_id>
  401eac:	stur	w0, [x29, #-20]
  401eb0:	ldr	x8, [sp, #64]
  401eb4:	cbz	x8, 401ecc <main+0x20c>
  401eb8:	ldr	x8, [sp, #64]
  401ebc:	ldr	x0, [x8]
  401ec0:	bl	4017f8 <free@plt>
  401ec4:	ldr	x0, [sp, #64]
  401ec8:	bl	4017f8 <free@plt>
  401ecc:	bl	401808 <log_close@plt>
  401ed0:	ldur	w0, [x29, #-20]
  401ed4:	add	sp, sp, #0x260
  401ed8:	ldr	x28, [sp, #16]
  401edc:	ldp	x29, x30, [sp], #32
  401ee0:	ret

0000000000401ee4 <udev_parse_config>:
  401ee4:	sub	sp, sp, #0x20
  401ee8:	stp	x29, x30, [sp, #16]
  401eec:	add	x29, sp, #0x10
  401ef0:	mov	x8, xzr
  401ef4:	mov	x0, x8
  401ef8:	str	x0, [sp, #8]
  401efc:	mov	x1, x8
  401f00:	mov	x2, x8
  401f04:	ldr	x3, [sp, #8]
  401f08:	bl	401818 <udev_parse_config_full@plt>
  401f0c:	ldp	x29, x30, [sp, #16]
  401f10:	add	sp, sp, #0x20
  401f14:	ret

0000000000401f18 <get_file_options>:
  401f18:	sub	sp, sp, #0xe0
  401f1c:	stp	x29, x30, [sp, #208]
  401f20:	add	x29, sp, #0xd0
  401f24:	mov	x8, xzr
  401f28:	adrp	x9, 420000 <config_file>
  401f2c:	add	x9, x9, #0x0
  401f30:	adrp	x10, 407000 <options+0x178>
  401f34:	add	x10, x10, #0x5f
  401f38:	adrp	x11, 407000 <options+0x178>
  401f3c:	add	x11, x11, #0x10
  401f40:	add	x11, x11, #0x3
  401f44:	adrp	x12, 407000 <options+0x178>
  401f48:	add	x12, x12, #0x62
  401f4c:	adrp	x13, 407000 <options+0x178>
  401f50:	add	x13, x13, #0xa2
  401f54:	stur	x0, [x29, #-16]
  401f58:	stur	x1, [x29, #-24]
  401f5c:	stur	x2, [x29, #-32]
  401f60:	stur	x3, [x29, #-40]
  401f64:	stur	x8, [x29, #-48]
  401f68:	str	wzr, [sp, #100]
  401f6c:	mov	x0, x9
  401f70:	mov	x1, x10
  401f74:	str	x11, [sp, #40]
  401f78:	str	x12, [sp, #32]
  401f7c:	str	x13, [sp, #24]
  401f80:	bl	401828 <fopen64@plt>
  401f84:	stur	x0, [x29, #-56]
  401f88:	ldur	x8, [x29, #-56]
  401f8c:	cbnz	x8, 40204c <get_file_options+0x134>
  401f90:	bl	401838 <__errno_location@plt>
  401f94:	ldr	w8, [x0]
  401f98:	cmp	w8, #0x2
  401f9c:	b.ne	401fb0 <get_file_options+0x98>  // b.any
  401fa0:	mov	w8, #0x1                   	// #1
  401fa4:	stur	w8, [x29, #-4]
  401fa8:	str	w8, [sp, #96]
  401fac:	b	402514 <get_file_options+0x5fc>
  401fb0:	mov	w8, #0x3                   	// #3
  401fb4:	str	w8, [sp, #92]
  401fb8:	bl	401838 <__errno_location@plt>
  401fbc:	ldr	w8, [x0]
  401fc0:	str	w8, [sp, #88]
  401fc4:	mov	w8, #0x1                   	// #1
  401fc8:	str	w8, [sp, #84]
  401fcc:	ldr	w0, [sp, #84]
  401fd0:	bl	4017c8 <log_get_max_level_realm@plt>
  401fd4:	ldr	w8, [sp, #92]
  401fd8:	and	w8, w8, #0x7
  401fdc:	cmp	w0, w8
  401fe0:	b.lt	40201c <get_file_options+0x104>  // b.tstop
  401fe4:	ldr	w8, [sp, #84]
  401fe8:	ldr	w9, [sp, #92]
  401fec:	orr	w0, w9, w8, lsl #10
  401ff0:	ldr	w1, [sp, #88]
  401ff4:	ldr	x2, [sp, #40]
  401ff8:	mov	w3, #0xa3                  	// #163
  401ffc:	ldr	x4, [sp, #32]
  402000:	adrp	x5, 407000 <options+0x178>
  402004:	add	x5, x5, #0x73
  402008:	adrp	x6, 420000 <config_file>
  40200c:	add	x6, x6, #0x0
  402010:	bl	4017d8 <log_internal_realm@plt>
  402014:	str	w0, [sp, #20]
  402018:	b	402030 <get_file_options+0x118>
  40201c:	ldr	w0, [sp, #88]
  402020:	bl	4017e8 <abs@plt>
  402024:	mov	w8, wzr
  402028:	subs	w8, w8, w0, uxtb
  40202c:	str	w8, [sp, #20]
  402030:	ldr	w8, [sp, #20]
  402034:	str	w8, [sp, #80]
  402038:	mov	w8, #0xffffffff            	// #-1
  40203c:	stur	w8, [x29, #-4]
  402040:	mov	w8, #0x1                   	// #1
  402044:	str	w8, [sp, #96]
  402048:	b	402514 <get_file_options+0x5fc>
  40204c:	mov	x0, #0x100                 	// #256
  402050:	bl	401848 <malloc@plt>
  402054:	stur	x0, [x29, #-48]
  402058:	ldur	x8, [x29, #-48]
  40205c:	cbnz	x8, 40208c <get_file_options+0x174>
  402060:	mov	w8, #0x1                   	// #1
  402064:	mov	w0, w8
  402068:	ldr	x1, [sp, #40]
  40206c:	mov	w2, #0xaf                  	// #175
  402070:	ldr	x3, [sp, #32]
  402074:	str	w8, [sp, #16]
  402078:	bl	401858 <log_oom_internal@plt>
  40207c:	stur	w0, [x29, #-4]
  402080:	ldr	w8, [sp, #16]
  402084:	str	w8, [sp, #96]
  402088:	b	402514 <get_file_options+0x5fc>
  40208c:	ldur	x8, [x29, #-40]
  402090:	mov	x9, xzr
  402094:	str	x9, [x8]
  402098:	stur	wzr, [x29, #-100]
  40209c:	mov	x8, xzr
  4020a0:	stur	x8, [x29, #-96]
  4020a4:	stur	x8, [x29, #-88]
  4020a8:	stur	x8, [x29, #-80]
  4020ac:	ldur	x0, [x29, #-48]
  4020b0:	ldur	x2, [x29, #-56]
  4020b4:	mov	w1, #0x100                 	// #256
  4020b8:	bl	401868 <fgets@plt>
  4020bc:	stur	x0, [x29, #-64]
  4020c0:	ldur	x8, [x29, #-64]
  4020c4:	cbnz	x8, 4020cc <get_file_options+0x1b4>
  4020c8:	b	4023ec <get_file_options+0x4d4>
  4020cc:	ldur	w8, [x29, #-100]
  4020d0:	add	w8, w8, #0x1
  4020d4:	stur	w8, [x29, #-100]
  4020d8:	ldur	x9, [x29, #-64]
  4020dc:	ldur	x0, [x29, #-48]
  4020e0:	str	x9, [sp, #8]
  4020e4:	bl	401878 <strlen@plt>
  4020e8:	subs	x9, x0, #0x1
  4020ec:	ldr	x10, [sp, #8]
  4020f0:	ldrb	w8, [x10, x9]
  4020f4:	cmp	w8, #0xa
  4020f8:	b.eq	40217c <get_file_options+0x264>  // b.none
  4020fc:	mov	w8, #0x3                   	// #3
  402100:	str	w8, [sp, #76]
  402104:	str	wzr, [sp, #72]
  402108:	mov	w8, #0x1                   	// #1
  40210c:	str	w8, [sp, #68]
  402110:	ldr	w0, [sp, #68]
  402114:	bl	4017c8 <log_get_max_level_realm@plt>
  402118:	ldr	w8, [sp, #76]
  40211c:	and	w8, w8, #0x7
  402120:	cmp	w0, w8
  402124:	b.lt	40215c <get_file_options+0x244>  // b.tstop
  402128:	ldr	w8, [sp, #68]
  40212c:	ldr	w9, [sp, #76]
  402130:	orr	w0, w9, w8, lsl #10
  402134:	ldr	w1, [sp, #72]
  402138:	ldur	w6, [x29, #-100]
  40213c:	ldr	x2, [sp, #40]
  402140:	mov	w3, #0xbb                  	// #187
  402144:	ldr	x4, [sp, #32]
  402148:	adrp	x5, 407000 <options+0x178>
  40214c:	add	x5, x5, #0x85
  402150:	bl	4017d8 <log_internal_realm@plt>
  402154:	str	w0, [sp, #4]
  402158:	b	402170 <get_file_options+0x258>
  40215c:	ldr	w0, [sp, #72]
  402160:	bl	4017e8 <abs@plt>
  402164:	mov	w8, wzr
  402168:	subs	w8, w8, w0, uxtb
  40216c:	str	w8, [sp, #4]
  402170:	ldr	w8, [sp, #4]
  402174:	str	w8, [sp, #64]
  402178:	b	4023ec <get_file_options+0x4d4>
  40217c:	bl	401888 <__ctype_b_loc@plt>
  402180:	ldr	x8, [x0]
  402184:	ldur	x9, [x29, #-64]
  402188:	ldrb	w10, [x9]
  40218c:	ldrh	w10, [x8, w10, sxtw #1]
  402190:	and	w10, w10, #0x2000
  402194:	cbz	w10, 4021a8 <get_file_options+0x290>
  402198:	ldur	x8, [x29, #-64]
  40219c:	add	x8, x8, #0x1
  4021a0:	stur	x8, [x29, #-64]
  4021a4:	b	40217c <get_file_options+0x264>
  4021a8:	ldur	x8, [x29, #-64]
  4021ac:	ldrb	w9, [x8]
  4021b0:	cbnz	w9, 4021b8 <get_file_options+0x2a0>
  4021b4:	b	40209c <get_file_options+0x184>
  4021b8:	ldur	x8, [x29, #-64]
  4021bc:	ldrb	w9, [x8]
  4021c0:	cmp	w9, #0x23
  4021c4:	b.ne	4021cc <get_file_options+0x2b4>  // b.any
  4021c8:	b	40209c <get_file_options+0x184>
  4021cc:	sub	x0, x29, #0x40
  4021d0:	ldr	x1, [sp, #24]
  4021d4:	bl	401898 <strsep@plt>
  4021d8:	stur	x0, [x29, #-72]
  4021dc:	ldur	x8, [x29, #-72]
  4021e0:	cbz	x8, 4022a4 <get_file_options+0x38c>
  4021e4:	ldur	x0, [x29, #-72]
  4021e8:	adrp	x1, 407000 <options+0x178>
  4021ec:	add	x1, x1, #0xa4
  4021f0:	bl	4018a8 <strcasecmp@plt>
  4021f4:	cbnz	w0, 4022a4 <get_file_options+0x38c>
  4021f8:	sub	x0, x29, #0x40
  4021fc:	bl	402cdc <get_value>
  402200:	stur	x0, [x29, #-72]
  402204:	ldur	x8, [x29, #-72]
  402208:	cbnz	x8, 402228 <get_file_options+0x310>
  40220c:	mov	w0, #0x1                   	// #1
  402210:	ldr	x1, [sp, #40]
  402214:	mov	w2, #0xce                  	// #206
  402218:	ldr	x3, [sp, #32]
  40221c:	bl	401858 <log_oom_internal@plt>
  402220:	str	w0, [sp, #100]
  402224:	b	4023ec <get_file_options+0x4d4>
  402228:	ldur	x8, [x29, #-72]
  40222c:	stur	x8, [x29, #-80]
  402230:	sub	x0, x29, #0x40
  402234:	ldr	x1, [sp, #24]
  402238:	bl	401898 <strsep@plt>
  40223c:	stur	x0, [x29, #-72]
  402240:	ldur	x8, [x29, #-72]
  402244:	cbz	x8, 4022a4 <get_file_options+0x38c>
  402248:	ldur	x0, [x29, #-72]
  40224c:	adrp	x1, 407000 <options+0x178>
  402250:	add	x1, x1, #0xab
  402254:	bl	4018a8 <strcasecmp@plt>
  402258:	cbnz	w0, 4022a4 <get_file_options+0x38c>
  40225c:	sub	x0, x29, #0x40
  402260:	bl	402cdc <get_value>
  402264:	stur	x0, [x29, #-72]
  402268:	ldur	x8, [x29, #-72]
  40226c:	cbnz	x8, 40228c <get_file_options+0x374>
  402270:	mov	w0, #0x1                   	// #1
  402274:	ldr	x1, [sp, #40]
  402278:	mov	w2, #0xd7                  	// #215
  40227c:	ldr	x3, [sp, #32]
  402280:	bl	401858 <log_oom_internal@plt>
  402284:	str	w0, [sp, #100]
  402288:	b	4023ec <get_file_options+0x4d4>
  40228c:	ldur	x8, [x29, #-72]
  402290:	stur	x8, [x29, #-88]
  402294:	sub	x0, x29, #0x40
  402298:	ldr	x1, [sp, #24]
  40229c:	bl	401898 <strsep@plt>
  4022a0:	stur	x0, [x29, #-72]
  4022a4:	ldur	x8, [x29, #-72]
  4022a8:	cbz	x8, 4022f8 <get_file_options+0x3e0>
  4022ac:	ldur	x0, [x29, #-72]
  4022b0:	adrp	x1, 407000 <options+0x178>
  4022b4:	add	x1, x1, #0xb1
  4022b8:	bl	4018a8 <strcasecmp@plt>
  4022bc:	cbnz	w0, 4022f8 <get_file_options+0x3e0>
  4022c0:	sub	x0, x29, #0x40
  4022c4:	bl	402cdc <get_value>
  4022c8:	stur	x0, [x29, #-72]
  4022cc:	ldur	x8, [x29, #-72]
  4022d0:	cbnz	x8, 4022f0 <get_file_options+0x3d8>
  4022d4:	mov	w0, #0x1                   	// #1
  4022d8:	ldr	x1, [sp, #40]
  4022dc:	mov	w2, #0xe2                  	// #226
  4022e0:	ldr	x3, [sp, #32]
  4022e4:	bl	401858 <log_oom_internal@plt>
  4022e8:	str	w0, [sp, #100]
  4022ec:	b	4023ec <get_file_options+0x4d4>
  4022f0:	ldur	x8, [x29, #-72]
  4022f4:	stur	x8, [x29, #-96]
  4022f8:	ldur	x8, [x29, #-96]
  4022fc:	cbz	x8, 402310 <get_file_options+0x3f8>
  402300:	ldur	x8, [x29, #-80]
  402304:	cbnz	x8, 40239c <get_file_options+0x484>
  402308:	ldur	x8, [x29, #-88]
  40230c:	cbz	x8, 40239c <get_file_options+0x484>
  402310:	mov	w8, #0x3                   	// #3
  402314:	str	w8, [sp, #60]
  402318:	str	wzr, [sp, #56]
  40231c:	mov	w8, #0x1                   	// #1
  402320:	str	w8, [sp, #52]
  402324:	ldr	w0, [sp, #52]
  402328:	bl	4017c8 <log_get_max_level_realm@plt>
  40232c:	ldr	w8, [sp, #60]
  402330:	and	w8, w8, #0x7
  402334:	cmp	w0, w8
  402338:	b.lt	402374 <get_file_options+0x45c>  // b.tstop
  40233c:	ldr	w8, [sp, #52]
  402340:	ldr	w9, [sp, #60]
  402344:	orr	w0, w9, w8, lsl #10
  402348:	ldr	w1, [sp, #56]
  40234c:	ldur	w6, [x29, #-100]
  402350:	ldur	x7, [x29, #-48]
  402354:	ldr	x2, [sp, #40]
  402358:	mov	w3, #0xec                  	// #236
  40235c:	ldr	x4, [sp, #32]
  402360:	adrp	x5, 407000 <options+0x178>
  402364:	add	x5, x5, #0xb9
  402368:	bl	4017d8 <log_internal_realm@plt>
  40236c:	str	w0, [sp]
  402370:	b	402388 <get_file_options+0x470>
  402374:	ldr	w0, [sp, #56]
  402378:	bl	4017e8 <abs@plt>
  40237c:	mov	w8, wzr
  402380:	subs	w8, w8, w0, uxtb
  402384:	str	w8, [sp]
  402388:	ldr	w8, [sp]
  40238c:	str	w8, [sp, #48]
  402390:	mov	w8, #0xffffffff            	// #-1
  402394:	str	w8, [sp, #100]
  402398:	b	4023ec <get_file_options+0x4d4>
  40239c:	ldur	x8, [x29, #-16]
  4023a0:	cbnz	x8, 4023b4 <get_file_options+0x49c>
  4023a4:	ldur	x8, [x29, #-80]
  4023a8:	cbnz	x8, 4023b0 <get_file_options+0x498>
  4023ac:	b	4023ec <get_file_options+0x4d4>
  4023b0:	b	4023e8 <get_file_options+0x4d0>
  4023b4:	ldur	x8, [x29, #-80]
  4023b8:	cbz	x8, 4023e8 <get_file_options+0x4d0>
  4023bc:	ldur	x0, [x29, #-16]
  4023c0:	ldur	x1, [x29, #-80]
  4023c4:	bl	402db8 <startswith>
  4023c8:	cbz	x0, 4023e8 <get_file_options+0x4d0>
  4023cc:	ldur	x8, [x29, #-88]
  4023d0:	cbz	x8, 4023e4 <get_file_options+0x4cc>
  4023d4:	ldur	x0, [x29, #-24]
  4023d8:	ldur	x1, [x29, #-88]
  4023dc:	bl	402db8 <startswith>
  4023e0:	cbz	x0, 4023e8 <get_file_options+0x4d0>
  4023e4:	b	4023ec <get_file_options+0x4d4>
  4023e8:	b	40209c <get_file_options+0x184>
  4023ec:	ldr	w8, [sp, #100]
  4023f0:	cbnz	w8, 402504 <get_file_options+0x5ec>
  4023f4:	ldur	x8, [x29, #-80]
  4023f8:	cbnz	x8, 40240c <get_file_options+0x4f4>
  4023fc:	ldur	x8, [x29, #-88]
  402400:	cbnz	x8, 40240c <get_file_options+0x4f4>
  402404:	ldur	x8, [x29, #-96]
  402408:	cbz	x8, 4024fc <get_file_options+0x5e4>
  40240c:	ldur	x0, [x29, #-48]
  402410:	ldur	x1, [x29, #-96]
  402414:	bl	4018b8 <strcpy@plt>
  402418:	ldur	x8, [x29, #-48]
  40241c:	mov	x0, x8
  402420:	bl	402e18 <argc_count>
  402424:	add	w9, w0, #0x2
  402428:	str	w9, [sp, #104]
  40242c:	ldrsw	x0, [sp, #104]
  402430:	mov	x1, #0x8                   	// #8
  402434:	bl	4018c8 <calloc@plt>
  402438:	ldur	x8, [x29, #-40]
  40243c:	str	x0, [x8]
  402440:	ldur	x8, [x29, #-40]
  402444:	ldr	x8, [x8]
  402448:	cbnz	x8, 402468 <get_file_options+0x550>
  40244c:	mov	w0, #0x1                   	// #1
  402450:	ldr	x1, [sp, #40]
  402454:	mov	w2, #0x10c                 	// #268
  402458:	ldr	x3, [sp, #32]
  40245c:	bl	401858 <log_oom_internal@plt>
  402460:	str	w0, [sp, #100]
  402464:	b	4024f8 <get_file_options+0x5e0>
  402468:	ldr	w8, [sp, #104]
  40246c:	ldur	x9, [x29, #-32]
  402470:	str	w8, [x9]
  402474:	str	wzr, [sp, #104]
  402478:	ldur	x9, [x29, #-48]
  40247c:	ldur	x10, [x29, #-40]
  402480:	ldr	x10, [x10]
  402484:	ldrsw	x11, [sp, #104]
  402488:	mov	x12, #0x8                   	// #8
  40248c:	mul	x11, x12, x11
  402490:	add	x10, x10, x11
  402494:	str	x9, [x10]
  402498:	mov	w8, #0x1                   	// #1
  40249c:	str	w8, [sp, #104]
  4024a0:	ldr	w8, [sp, #104]
  4024a4:	ldur	x9, [x29, #-32]
  4024a8:	ldr	w10, [x9]
  4024ac:	cmp	w8, w10
  4024b0:	b.ge	4024f0 <get_file_options+0x5d8>  // b.tcont
  4024b4:	sub	x0, x29, #0x30
  4024b8:	adrp	x1, 407000 <options+0x178>
  4024bc:	add	x1, x1, #0xe0
  4024c0:	bl	401898 <strsep@plt>
  4024c4:	ldur	x8, [x29, #-40]
  4024c8:	ldr	x8, [x8]
  4024cc:	ldrsw	x9, [sp, #104]
  4024d0:	mov	x10, #0x8                   	// #8
  4024d4:	mul	x9, x10, x9
  4024d8:	add	x8, x8, x9
  4024dc:	str	x0, [x8]
  4024e0:	ldr	w8, [sp, #104]
  4024e4:	add	w8, w8, #0x1
  4024e8:	str	w8, [sp, #104]
  4024ec:	b	4024a0 <get_file_options+0x588>
  4024f0:	mov	x8, xzr
  4024f4:	stur	x8, [x29, #-48]
  4024f8:	b	402504 <get_file_options+0x5ec>
  4024fc:	mov	w8, #0x1                   	// #1
  402500:	str	w8, [sp, #100]
  402504:	ldr	w8, [sp, #100]
  402508:	stur	w8, [x29, #-4]
  40250c:	mov	w8, #0x1                   	// #1
  402510:	str	w8, [sp, #96]
  402514:	sub	x0, x29, #0x38
  402518:	bl	402cb4 <fclosep>
  40251c:	sub	x0, x29, #0x30
  402520:	bl	402c8c <freep>
  402524:	ldur	w0, [x29, #-4]
  402528:	ldp	x29, x30, [sp, #208]
  40252c:	add	sp, sp, #0xe0
  402530:	ret

0000000000402534 <set_options>:
  402534:	sub	sp, sp, #0x90
  402538:	stp	x29, x30, [sp, #128]
  40253c:	add	x29, sp, #0x80
  402540:	mov	w8, #0x1                   	// #1
  402544:	adrp	x9, 420000 <config_file>
  402548:	add	x9, x9, #0x4c8
  40254c:	adrp	x10, 420000 <config_file>
  402550:	add	x10, x10, #0x21c
  402554:	adrp	x11, 420000 <config_file>
  402558:	add	x11, x11, #0x4d0
  40255c:	adrp	x12, 420000 <config_file>
  402560:	add	x12, x12, #0x210
  402564:	adrp	x13, 407000 <options+0x178>
  402568:	add	x13, x13, #0x10
  40256c:	add	x13, x13, #0x3
  402570:	adrp	x14, 420000 <config_file>
  402574:	add	x14, x14, #0x220
  402578:	stur	w0, [x29, #-8]
  40257c:	stur	x1, [x29, #-16]
  402580:	stur	x2, [x29, #-24]
  402584:	str	w8, [x9]
  402588:	str	x9, [sp, #56]
  40258c:	str	x10, [sp, #48]
  402590:	str	x11, [sp, #40]
  402594:	str	x12, [sp, #32]
  402598:	str	x13, [sp, #24]
  40259c:	str	x14, [sp, #16]
  4025a0:	ldur	w0, [x29, #-8]
  4025a4:	ldur	x1, [x29, #-16]
  4025a8:	adrp	x2, 407000 <options+0x178>
  4025ac:	add	x2, x2, #0xe9
  4025b0:	adrp	x3, 406000 <check_fill_0x83_id+0x2d8>
  4025b4:	add	x3, x3, #0xe88
  4025b8:	mov	x8, xzr
  4025bc:	mov	x4, x8
  4025c0:	bl	4018d8 <getopt_long@plt>
  4025c4:	stur	w0, [x29, #-28]
  4025c8:	cmp	w0, #0x0
  4025cc:	cset	w9, lt  // lt = tstop
  4025d0:	tbnz	w9, #0, 4028f8 <set_options+0x3c4>
  4025d4:	ldur	w8, [x29, #-28]
  4025d8:	subs	w8, w8, #0x3f
  4025dc:	mov	w9, w8
  4025e0:	ubfx	x9, x9, #0, #32
  4025e4:	cmp	x9, #0x39
  4025e8:	str	x9, [sp, #8]
  4025ec:	b.hi	4028d4 <set_options+0x3a0>  // b.pmore
  4025f0:	adrp	x8, 406000 <check_fill_0x83_id+0x2d8>
  4025f4:	add	x8, x8, #0xd60
  4025f8:	ldr	x11, [sp, #8]
  4025fc:	ldrsw	x10, [x8, x11, lsl #2]
  402600:	add	x9, x8, x10
  402604:	br	x9
  402608:	mov	w8, #0x0                   	// #0
  40260c:	adrp	x9, 420000 <config_file>
  402610:	add	x9, x9, #0x21d
  402614:	strb	w8, [x9]
  402618:	b	4028f4 <set_options+0x3c0>
  40261c:	mov	w8, #0x1                   	// #1
  402620:	ldr	x9, [sp, #48]
  402624:	strb	w8, [x9]
  402628:	ldur	x0, [x29, #-24]
  40262c:	ldr	x10, [sp, #40]
  402630:	ldr	x2, [x10]
  402634:	mov	x1, #0x200                 	// #512
  402638:	bl	4018e8 <strscpy@plt>
  40263c:	b	4028f4 <set_options+0x3c0>
  402640:	ldr	x8, [sp, #40]
  402644:	ldr	x2, [x8]
  402648:	adrp	x0, 420000 <config_file>
  40264c:	add	x0, x0, #0x0
  402650:	mov	x1, #0x200                 	// #512
  402654:	bl	4018e8 <strscpy@plt>
  402658:	b	4028f4 <set_options+0x3c0>
  40265c:	adrp	x8, 420000 <config_file>
  402660:	add	x8, x8, #0x21d
  402664:	mov	w9, #0x1                   	// #1
  402668:	strb	w9, [x8]
  40266c:	b	4028f4 <set_options+0x3c0>
  402670:	bl	402e64 <help>
  402674:	mov	w8, wzr
  402678:	mov	w0, w8
  40267c:	bl	4017b8 <exit@plt>
  402680:	ldr	x8, [sp, #40]
  402684:	ldr	x0, [x8]
  402688:	adrp	x1, 407000 <options+0x178>
  40268c:	add	x1, x1, #0xf9
  402690:	bl	4018f8 <strcmp@plt>
  402694:	cbnz	w0, 4026a8 <set_options+0x174>
  402698:	mov	w8, #0x80                  	// #128
  40269c:	ldr	x9, [sp, #16]
  4026a0:	str	w8, [x9]
  4026a4:	b	402790 <set_options+0x25c>
  4026a8:	ldr	x8, [sp, #40]
  4026ac:	ldr	x0, [x8]
  4026b0:	adrp	x1, 407000 <options+0x178>
  4026b4:	add	x1, x1, #0xfe
  4026b8:	bl	4018f8 <strcmp@plt>
  4026bc:	cbnz	w0, 4026d0 <set_options+0x19c>
  4026c0:	mov	w8, #0x83                  	// #131
  4026c4:	ldr	x9, [sp, #16]
  4026c8:	str	w8, [x9]
  4026cc:	b	402790 <set_options+0x25c>
  4026d0:	ldr	x8, [sp, #40]
  4026d4:	ldr	x0, [x8]
  4026d8:	adrp	x1, 407000 <options+0x178>
  4026dc:	add	x1, x1, #0x103
  4026e0:	bl	4018f8 <strcmp@plt>
  4026e4:	cbnz	w0, 4026f8 <set_options+0x1c4>
  4026e8:	mov	w8, #0xffffff7d            	// #-131
  4026ec:	ldr	x9, [sp, #16]
  4026f0:	str	w8, [x9]
  4026f4:	b	402790 <set_options+0x25c>
  4026f8:	mov	w8, #0x3                   	// #3
  4026fc:	stur	w8, [x29, #-32]
  402700:	mov	w8, #0x16                  	// #22
  402704:	movk	w8, #0x4000, lsl #16
  402708:	stur	w8, [x29, #-36]
  40270c:	mov	w8, #0x1                   	// #1
  402710:	stur	w8, [x29, #-40]
  402714:	ldur	w0, [x29, #-40]
  402718:	bl	4017c8 <log_get_max_level_realm@plt>
  40271c:	ldur	w8, [x29, #-32]
  402720:	and	w8, w8, #0x7
  402724:	cmp	w0, w8
  402728:	b.lt	402768 <set_options+0x234>  // b.tstop
  40272c:	ldur	w8, [x29, #-40]
  402730:	ldur	w9, [x29, #-32]
  402734:	orr	w0, w9, w8, lsl #10
  402738:	ldur	w1, [x29, #-36]
  40273c:	ldr	x10, [sp, #40]
  402740:	ldr	x6, [x10]
  402744:	ldr	x2, [sp, #24]
  402748:	mov	w3, #0x15f                 	// #351
  40274c:	adrp	x4, 407000 <options+0x178>
  402750:	add	x4, x4, #0x10f
  402754:	adrp	x5, 407000 <options+0x178>
  402758:	add	x5, x5, #0x11b
  40275c:	bl	4017d8 <log_internal_realm@plt>
  402760:	str	w0, [sp, #4]
  402764:	b	40277c <set_options+0x248>
  402768:	ldur	w0, [x29, #-36]
  40276c:	bl	4017e8 <abs@plt>
  402770:	mov	w8, wzr
  402774:	subs	w8, w8, w0, uxtb
  402778:	str	w8, [sp, #4]
  40277c:	ldr	w8, [sp, #4]
  402780:	stur	w8, [x29, #-44]
  402784:	ldur	w8, [x29, #-44]
  402788:	stur	w8, [x29, #-4]
  40278c:	b	402950 <set_options+0x41c>
  402790:	b	4028f4 <set_options+0x3c0>
  402794:	ldr	x8, [sp, #40]
  402798:	ldr	x0, [x8]
  40279c:	bl	401908 <atoi@plt>
  4027a0:	ldr	x8, [sp, #32]
  4027a4:	str	w0, [x8]
  4027a8:	ldr	w9, [x8]
  4027ac:	cmp	w9, #0x3
  4027b0:	b.lt	4027c4 <set_options+0x290>  // b.tstop
  4027b4:	ldr	x8, [sp, #32]
  4027b8:	ldr	w9, [x8]
  4027bc:	cmp	w9, #0x4
  4027c0:	b.le	40285c <set_options+0x328>
  4027c4:	mov	w8, #0x3                   	// #3
  4027c8:	stur	w8, [x29, #-48]
  4027cc:	mov	w8, #0x16                  	// #22
  4027d0:	movk	w8, #0x4000, lsl #16
  4027d4:	stur	w8, [x29, #-52]
  4027d8:	mov	w8, #0x1                   	// #1
  4027dc:	stur	w8, [x29, #-56]
  4027e0:	ldur	w0, [x29, #-56]
  4027e4:	bl	4017c8 <log_get_max_level_realm@plt>
  4027e8:	ldur	w8, [x29, #-48]
  4027ec:	and	w8, w8, #0x7
  4027f0:	cmp	w0, w8
  4027f4:	b.lt	402834 <set_options+0x300>  // b.tstop
  4027f8:	ldur	w8, [x29, #-56]
  4027fc:	ldur	w9, [x29, #-48]
  402800:	orr	w0, w9, w8, lsl #10
  402804:	ldur	w1, [x29, #-52]
  402808:	ldr	x10, [sp, #40]
  40280c:	ldr	x6, [x10]
  402810:	ldr	x2, [sp, #24]
  402814:	mov	w3, #0x167                 	// #359
  402818:	adrp	x4, 407000 <options+0x178>
  40281c:	add	x4, x4, #0x10f
  402820:	adrp	x5, 407000 <options+0x178>
  402824:	add	x5, x5, #0x132
  402828:	bl	4017d8 <log_internal_realm@plt>
  40282c:	str	w0, [sp]
  402830:	b	402848 <set_options+0x314>
  402834:	ldur	w0, [x29, #-52]
  402838:	bl	4017e8 <abs@plt>
  40283c:	mov	w8, wzr
  402840:	subs	w8, w8, w0, uxtb
  402844:	str	w8, [sp]
  402848:	ldr	w8, [sp]
  40284c:	stur	w8, [x29, #-60]
  402850:	ldur	w8, [x29, #-60]
  402854:	stur	w8, [x29, #-4]
  402858:	b	402950 <set_options+0x41c>
  40285c:	b	4028f4 <set_options+0x3c0>
  402860:	adrp	x8, 420000 <config_file>
  402864:	add	x8, x8, #0x224
  402868:	mov	w9, #0x1                   	// #1
  40286c:	strb	w9, [x8]
  402870:	b	4028f4 <set_options+0x3c0>
  402874:	mov	w8, wzr
  402878:	mov	w0, w8
  40287c:	bl	401778 <log_set_target@plt>
  402880:	mov	w0, #0x1                   	// #1
  402884:	mov	w1, #0x7                   	// #7
  402888:	bl	401918 <log_set_max_level_realm@plt>
  40288c:	bl	401798 <log_open@plt>
  402890:	b	4028f4 <set_options+0x3c0>
  402894:	adrp	x0, 407000 <options+0x178>
  402898:	add	x0, x0, #0x14a
  40289c:	adrp	x1, 407000 <options+0x178>
  4028a0:	add	x1, x1, #0x14e
  4028a4:	bl	401928 <printf@plt>
  4028a8:	mov	w8, wzr
  4028ac:	mov	w0, w8
  4028b0:	bl	4017b8 <exit@plt>
  4028b4:	adrp	x8, 420000 <config_file>
  4028b8:	add	x8, x8, #0x225
  4028bc:	mov	w9, #0x1                   	// #1
  4028c0:	strb	w9, [x8]
  4028c4:	b	4028f4 <set_options+0x3c0>
  4028c8:	mov	w8, #0xffffffff            	// #-1
  4028cc:	stur	w8, [x29, #-4]
  4028d0:	b	402950 <set_options+0x41c>
  4028d4:	mov	w0, #0x1                   	// #1
  4028d8:	adrp	x1, 407000 <options+0x178>
  4028dc:	add	x1, x1, #0x152
  4028e0:	ldr	x2, [sp, #24]
  4028e4:	mov	w3, #0x180                 	// #384
  4028e8:	adrp	x4, 407000 <options+0x178>
  4028ec:	add	x4, x4, #0x161
  4028f0:	bl	401938 <log_assert_failed_unreachable_realm@plt>
  4028f4:	b	4025a0 <set_options+0x6c>
  4028f8:	ldr	x8, [sp, #56]
  4028fc:	ldr	w9, [x8]
  402900:	ldur	w10, [x29, #-8]
  402904:	cmp	w9, w10
  402908:	b.ge	40294c <set_options+0x418>  // b.tcont
  40290c:	ldr	x8, [sp, #48]
  402910:	ldrb	w9, [x8]
  402914:	tbnz	w9, #0, 40294c <set_options+0x418>
  402918:	mov	w8, #0x1                   	// #1
  40291c:	ldr	x9, [sp, #48]
  402920:	strb	w8, [x9]
  402924:	ldur	x0, [x29, #-24]
  402928:	ldur	x10, [x29, #-16]
  40292c:	ldr	x11, [sp, #56]
  402930:	ldrsw	x12, [x11]
  402934:	mov	x13, #0x8                   	// #8
  402938:	mul	x12, x13, x12
  40293c:	add	x10, x10, x12
  402940:	ldr	x2, [x10]
  402944:	mov	x1, #0x200                 	// #512
  402948:	bl	4018e8 <strscpy@plt>
  40294c:	stur	wzr, [x29, #-4]
  402950:	ldur	w0, [x29, #-4]
  402954:	ldp	x29, x30, [sp, #128]
  402958:	add	sp, sp, #0x90
  40295c:	ret

0000000000402960 <scsi_id>:
  402960:	stp	x29, x30, [sp, #-32]!
  402964:	str	x28, [sp, #16]
  402968:	mov	x29, sp
  40296c:	sub	sp, sp, #0x610
  402970:	sub	x8, x29, #0x8
  402974:	mov	x2, #0x3b0                 	// #944
  402978:	mov	w9, wzr
  40297c:	add	x10, sp, #0x258
  402980:	str	x0, [x8]
  402984:	mov	x0, x10
  402988:	mov	w1, w9
  40298c:	str	x8, [sp, #64]
  402990:	str	x10, [sp, #56]
  402994:	bl	401948 <memset@plt>
  402998:	str	wzr, [sp, #588]
  40299c:	ldr	x8, [sp, #64]
  4029a0:	ldr	x1, [x8]
  4029a4:	ldr	x0, [sp, #56]
  4029a8:	bl	402e8c <set_inq_values>
  4029ac:	cmp	w0, #0x0
  4029b0:	cset	w9, ge  // ge = tcont
  4029b4:	tbnz	w9, #0, 4029c4 <scsi_id+0x64>
  4029b8:	mov	w8, #0x1                   	// #1
  4029bc:	str	w8, [sp, #588]
  4029c0:	b	402c78 <scsi_id+0x318>
  4029c4:	add	x0, sp, #0x258
  4029c8:	add	x1, sp, #0x254
  4029cc:	add	x2, sp, #0x250
  4029d0:	bl	402fe4 <per_dev_options>
  4029d4:	ldr	w8, [sp, #596]
  4029d8:	cbnz	w8, 4029e8 <scsi_id+0x88>
  4029dc:	mov	w8, #0x1                   	// #1
  4029e0:	str	w8, [sp, #588]
  4029e4:	b	402c78 <scsi_id+0x318>
  4029e8:	ldr	x8, [sp, #64]
  4029ec:	ldr	x1, [x8]
  4029f0:	ldr	w2, [sp, #592]
  4029f4:	add	x0, sp, #0x258
  4029f8:	mov	w3, #0x100                 	// #256
  4029fc:	bl	403c0c <scsi_get_serial>
  402a00:	adrp	x8, 420000 <config_file>
  402a04:	add	x8, x8, #0x225
  402a08:	ldrb	w9, [x8]
  402a0c:	tbnz	w9, #0, 402a14 <scsi_id+0xb4>
  402a10:	b	402bf4 <scsi_id+0x294>
  402a14:	adrp	x0, 407000 <options+0x178>
  402a18:	add	x0, x0, #0x4d5
  402a1c:	bl	401928 <printf@plt>
  402a20:	adrp	x8, 407000 <options+0x178>
  402a24:	add	x8, x8, #0x4e0
  402a28:	mov	x0, x8
  402a2c:	adrp	x1, 420000 <config_file>
  402a30:	add	x1, x1, #0x226
  402a34:	bl	401928 <printf@plt>
  402a38:	adrp	x8, 407000 <options+0x178>
  402a3c:	add	x8, x8, #0x4ee
  402a40:	mov	x0, x8
  402a44:	adrp	x1, 420000 <config_file>
  402a48:	add	x1, x1, #0x266
  402a4c:	bl	401928 <printf@plt>
  402a50:	adrp	x8, 407000 <options+0x178>
  402a54:	add	x8, x8, #0x500
  402a58:	mov	x0, x8
  402a5c:	adrp	x1, 420000 <config_file>
  402a60:	add	x1, x1, #0x366
  402a64:	bl	401928 <printf@plt>
  402a68:	adrp	x8, 407000 <options+0x178>
  402a6c:	add	x8, x8, #0x50d
  402a70:	mov	x0, x8
  402a74:	adrp	x1, 420000 <config_file>
  402a78:	add	x1, x1, #0x3a6
  402a7c:	bl	401928 <printf@plt>
  402a80:	adrp	x8, 407000 <options+0x178>
  402a84:	add	x8, x8, #0x51e
  402a88:	mov	x0, x8
  402a8c:	adrp	x1, 420000 <config_file>
  402a90:	add	x1, x1, #0x4a6
  402a94:	bl	401928 <printf@plt>
  402a98:	adrp	x8, 407000 <options+0x178>
  402a9c:	add	x8, x8, #0x52e
  402aa0:	mov	x0, x8
  402aa4:	adrp	x1, 420000 <config_file>
  402aa8:	add	x1, x1, #0x4b6
  402aac:	bl	401928 <printf@plt>
  402ab0:	ldrb	w9, [sp, #728]
  402ab4:	cbz	w9, 402b48 <scsi_id+0x1e8>
  402ab8:	add	x8, sp, #0x258
  402abc:	add	x0, x8, #0x80
  402ac0:	add	x9, sp, #0x14c
  402ac4:	mov	x1, x9
  402ac8:	mov	x10, #0xff                  	// #255
  402acc:	mov	x2, x10
  402ad0:	str	x8, [sp, #48]
  402ad4:	str	x9, [sp, #40]
  402ad8:	str	x10, [sp, #32]
  402adc:	bl	40688c <util_replace_whitespace>
  402ae0:	ldr	x8, [sp, #40]
  402ae4:	mov	x0, x8
  402ae8:	mov	x9, xzr
  402aec:	mov	x1, x9
  402af0:	str	x9, [sp, #24]
  402af4:	bl	406a98 <util_replace_chars>
  402af8:	adrp	x8, 407000 <options+0x178>
  402afc:	add	x8, x8, #0x53a
  402b00:	mov	x0, x8
  402b04:	ldr	x1, [sp, #40]
  402b08:	bl	401928 <printf@plt>
  402b0c:	ldr	x8, [sp, #48]
  402b10:	add	x9, x8, #0x180
  402b14:	mov	x0, x9
  402b18:	ldr	x1, [sp, #40]
  402b1c:	ldr	x2, [sp, #32]
  402b20:	bl	40688c <util_replace_whitespace>
  402b24:	ldr	x8, [sp, #40]
  402b28:	mov	x0, x8
  402b2c:	ldr	x1, [sp, #24]
  402b30:	bl	406a98 <util_replace_chars>
  402b34:	adrp	x8, 407000 <options+0x178>
  402b38:	add	x8, x8, #0x548
  402b3c:	mov	x0, x8
  402b40:	ldr	x1, [sp, #40]
  402b44:	bl	401928 <printf@plt>
  402b48:	ldrb	w8, [sp, #1500]
  402b4c:	cbz	w8, 402bb8 <scsi_id+0x258>
  402b50:	add	x8, sp, #0x258
  402b54:	add	x1, x8, #0x384
  402b58:	adrp	x0, 407000 <options+0x178>
  402b5c:	add	x0, x0, #0x55c
  402b60:	bl	401928 <printf@plt>
  402b64:	ldrb	w9, [sp, #1517]
  402b68:	cbz	w9, 402ba4 <scsi_id+0x244>
  402b6c:	add	x8, sp, #0x258
  402b70:	add	x1, x8, #0x395
  402b74:	adrp	x0, 407000 <options+0x178>
  402b78:	add	x0, x0, #0x569
  402b7c:	str	x8, [sp, #16]
  402b80:	bl	401928 <printf@plt>
  402b84:	ldr	x8, [sp, #16]
  402b88:	add	x1, x8, #0x384
  402b8c:	add	x2, x8, #0x395
  402b90:	adrp	x9, 407000 <options+0x178>
  402b94:	add	x9, x9, #0x587
  402b98:	mov	x0, x9
  402b9c:	bl	401928 <printf@plt>
  402ba0:	b	402bb8 <scsi_id+0x258>
  402ba4:	add	x8, sp, #0x258
  402ba8:	add	x1, x8, #0x384
  402bac:	adrp	x0, 407000 <options+0x178>
  402bb0:	add	x0, x0, #0x5a5
  402bb4:	bl	401928 <printf@plt>
  402bb8:	ldrb	w8, [sp, #1534]
  402bbc:	cbz	w8, 402bd4 <scsi_id+0x274>
  402bc0:	add	x8, sp, #0x258
  402bc4:	add	x1, x8, #0x3a6
  402bc8:	adrp	x0, 407000 <options+0x178>
  402bcc:	add	x0, x0, #0x5c1
  402bd0:	bl	401928 <printf@plt>
  402bd4:	ldrb	w8, [sp, #1244]
  402bd8:	cbz	w8, 402bf0 <scsi_id+0x290>
  402bdc:	add	x8, sp, #0x258
  402be0:	add	x1, x8, #0x284
  402be4:	adrp	x0, 407000 <options+0x178>
  402be8:	add	x0, x0, #0x5d4
  402bec:	bl	401928 <printf@plt>
  402bf0:	b	402c78 <scsi_id+0x318>
  402bf4:	ldrb	w8, [sp, #728]
  402bf8:	cbnz	w8, 402c08 <scsi_id+0x2a8>
  402bfc:	mov	w8, #0x1                   	// #1
  402c00:	str	w8, [sp, #588]
  402c04:	b	402c78 <scsi_id+0x318>
  402c08:	adrp	x8, 420000 <config_file>
  402c0c:	add	x8, x8, #0x224
  402c10:	ldrb	w9, [x8]
  402c14:	tbnz	w9, #0, 402c1c <scsi_id+0x2bc>
  402c18:	b	402c64 <scsi_id+0x304>
  402c1c:	add	x8, sp, #0x258
  402c20:	add	x0, x8, #0x80
  402c24:	add	x8, sp, #0x4c
  402c28:	mov	x1, x8
  402c2c:	mov	x2, #0xff                  	// #255
  402c30:	str	x8, [sp, #8]
  402c34:	bl	40688c <util_replace_whitespace>
  402c38:	ldr	x8, [sp, #8]
  402c3c:	mov	x0, x8
  402c40:	mov	x9, xzr
  402c44:	mov	x1, x9
  402c48:	bl	406a98 <util_replace_chars>
  402c4c:	adrp	x8, 407000 <options+0x178>
  402c50:	add	x8, x8, #0x14a
  402c54:	mov	x0, x8
  402c58:	ldr	x1, [sp, #8]
  402c5c:	bl	401928 <printf@plt>
  402c60:	b	402c78 <scsi_id+0x318>
  402c64:	add	x8, sp, #0x258
  402c68:	add	x1, x8, #0x80
  402c6c:	adrp	x0, 407000 <options+0x178>
  402c70:	add	x0, x0, #0x14a
  402c74:	bl	401928 <printf@plt>
  402c78:	ldr	w0, [sp, #588]
  402c7c:	add	sp, sp, #0x610
  402c80:	ldr	x28, [sp, #16]
  402c84:	ldp	x29, x30, [sp], #32
  402c88:	ret

0000000000402c8c <freep>:
  402c8c:	sub	sp, sp, #0x20
  402c90:	stp	x29, x30, [sp, #16]
  402c94:	add	x29, sp, #0x10
  402c98:	str	x0, [sp, #8]
  402c9c:	ldr	x8, [sp, #8]
  402ca0:	ldr	x0, [x8]
  402ca4:	bl	4017f8 <free@plt>
  402ca8:	ldp	x29, x30, [sp, #16]
  402cac:	add	sp, sp, #0x20
  402cb0:	ret

0000000000402cb4 <fclosep>:
  402cb4:	sub	sp, sp, #0x20
  402cb8:	stp	x29, x30, [sp, #16]
  402cbc:	add	x29, sp, #0x10
  402cc0:	str	x0, [sp, #8]
  402cc4:	ldr	x8, [sp, #8]
  402cc8:	ldr	x0, [x8]
  402ccc:	bl	401958 <safe_fclose@plt>
  402cd0:	ldp	x29, x30, [sp, #16]
  402cd4:	add	sp, sp, #0x20
  402cd8:	ret

0000000000402cdc <get_value>:
  402cdc:	sub	sp, sp, #0x30
  402ce0:	stp	x29, x30, [sp, #32]
  402ce4:	add	x29, sp, #0x20
  402ce8:	stur	x0, [x29, #-8]
  402cec:	ldur	x8, [x29, #-8]
  402cf0:	ldr	x8, [x8]
  402cf4:	ldrb	w9, [x8]
  402cf8:	cmp	w9, #0x22
  402cfc:	b.ne	402d24 <get_value+0x48>  // b.any
  402d00:	ldur	x8, [x29, #-8]
  402d04:	ldr	x9, [x8]
  402d08:	add	x9, x9, #0x1
  402d0c:	str	x9, [x8]
  402d10:	adrp	x8, 420000 <config_file>
  402d14:	add	x8, x8, #0x200
  402d18:	ldr	x8, [x8]
  402d1c:	str	x8, [sp, #8]
  402d20:	b	402d34 <get_value+0x58>
  402d24:	adrp	x8, 420000 <config_file>
  402d28:	add	x8, x8, #0x208
  402d2c:	ldr	x8, [x8]
  402d30:	str	x8, [sp, #8]
  402d34:	ldur	x0, [x29, #-8]
  402d38:	ldr	x1, [sp, #8]
  402d3c:	bl	401898 <strsep@plt>
  402d40:	str	x0, [sp, #16]
  402d44:	ldr	x8, [sp, #16]
  402d48:	cbz	x8, 402d74 <get_value+0x98>
  402d4c:	ldr	x8, [sp, #8]
  402d50:	adrp	x9, 420000 <config_file>
  402d54:	add	x9, x9, #0x200
  402d58:	ldr	x9, [x9]
  402d5c:	cmp	x8, x9
  402d60:	b.ne	402d74 <get_value+0x98>  // b.any
  402d64:	ldur	x8, [x29, #-8]
  402d68:	ldr	x9, [x8]
  402d6c:	add	x9, x9, #0x1
  402d70:	str	x9, [x8]
  402d74:	bl	401888 <__ctype_b_loc@plt>
  402d78:	ldr	x8, [x0]
  402d7c:	ldur	x9, [x29, #-8]
  402d80:	ldr	x9, [x9]
  402d84:	ldrb	w10, [x9]
  402d88:	ldrh	w10, [x8, w10, sxtw #1]
  402d8c:	and	w10, w10, #0x2000
  402d90:	cbz	w10, 402da8 <get_value+0xcc>
  402d94:	ldur	x8, [x29, #-8]
  402d98:	ldr	x9, [x8]
  402d9c:	add	x9, x9, #0x1
  402da0:	str	x9, [x8]
  402da4:	b	402d74 <get_value+0x98>
  402da8:	ldr	x0, [sp, #16]
  402dac:	ldp	x29, x30, [sp, #32]
  402db0:	add	sp, sp, #0x30
  402db4:	ret

0000000000402db8 <startswith>:
  402db8:	sub	sp, sp, #0x30
  402dbc:	stp	x29, x30, [sp, #32]
  402dc0:	add	x29, sp, #0x20
  402dc4:	str	x0, [sp, #16]
  402dc8:	str	x1, [sp, #8]
  402dcc:	ldr	x0, [sp, #8]
  402dd0:	bl	401878 <strlen@plt>
  402dd4:	str	x0, [sp]
  402dd8:	ldr	x0, [sp, #16]
  402ddc:	ldr	x1, [sp, #8]
  402de0:	ldr	x2, [sp]
  402de4:	bl	401968 <strncmp@plt>
  402de8:	cbnz	w0, 402e00 <startswith+0x48>
  402dec:	ldr	x8, [sp, #16]
  402df0:	ldr	x9, [sp]
  402df4:	add	x8, x8, x9
  402df8:	stur	x8, [x29, #-8]
  402dfc:	b	402e08 <startswith+0x50>
  402e00:	mov	x8, xzr
  402e04:	stur	x8, [x29, #-8]
  402e08:	ldur	x0, [x29, #-8]
  402e0c:	ldp	x29, x30, [sp, #32]
  402e10:	add	sp, sp, #0x30
  402e14:	ret

0000000000402e18 <argc_count>:
  402e18:	sub	sp, sp, #0x10
  402e1c:	str	x0, [sp, #8]
  402e20:	str	wzr, [sp, #4]
  402e24:	ldr	x8, [sp, #8]
  402e28:	ldrb	w9, [x8]
  402e2c:	cbz	w9, 402e58 <argc_count+0x40>
  402e30:	ldr	x8, [sp, #8]
  402e34:	add	x9, x8, #0x1
  402e38:	str	x9, [sp, #8]
  402e3c:	ldrb	w10, [x8]
  402e40:	cmp	w10, #0x20
  402e44:	b.ne	402e54 <argc_count+0x3c>  // b.any
  402e48:	ldr	w8, [sp, #4]
  402e4c:	add	w8, w8, #0x1
  402e50:	str	w8, [sp, #4]
  402e54:	b	402e24 <argc_count+0xc>
  402e58:	ldr	w0, [sp, #4]
  402e5c:	add	sp, sp, #0x10
  402e60:	ret

0000000000402e64 <help>:
  402e64:	stp	x29, x30, [sp, #-16]!
  402e68:	mov	x29, sp
  402e6c:	adrp	x8, 420000 <config_file>
  402e70:	add	x8, x8, #0x4d8
  402e74:	adrp	x0, 407000 <options+0x178>
  402e78:	add	x0, x0, #0x1ec
  402e7c:	ldr	x1, [x8]
  402e80:	bl	401928 <printf@plt>
  402e84:	ldp	x29, x30, [sp], #16
  402e88:	ret

0000000000402e8c <set_inq_values>:
  402e8c:	sub	sp, sp, #0x60
  402e90:	stp	x29, x30, [sp, #80]
  402e94:	add	x29, sp, #0x50
  402e98:	adrp	x8, 420000 <config_file>
  402e9c:	add	x8, x8, #0x210
  402ea0:	stur	x0, [x29, #-16]
  402ea4:	stur	x1, [x29, #-24]
  402ea8:	ldr	w9, [x8]
  402eac:	ldur	x8, [x29, #-16]
  402eb0:	str	w9, [x8, #640]
  402eb4:	ldur	x0, [x29, #-16]
  402eb8:	ldur	x1, [x29, #-24]
  402ebc:	bl	403400 <scsi_std_inquiry>
  402ec0:	stur	w0, [x29, #-28]
  402ec4:	ldur	w9, [x29, #-28]
  402ec8:	cbz	w9, 402ed8 <set_inq_values+0x4c>
  402ecc:	ldur	w8, [x29, #-28]
  402ed0:	stur	w8, [x29, #-4]
  402ed4:	b	402fd4 <set_inq_values+0x148>
  402ed8:	ldur	x0, [x29, #-16]
  402edc:	adrp	x1, 420000 <config_file>
  402ee0:	add	x1, x1, #0x266
  402ee4:	mov	x8, #0x100                 	// #256
  402ee8:	mov	x2, x8
  402eec:	str	x8, [sp, #40]
  402ef0:	bl	406c68 <udev_util_encode_string>
  402ef4:	ldur	x8, [x29, #-16]
  402ef8:	add	x8, x8, #0x9
  402efc:	mov	x0, x8
  402f00:	adrp	x1, 420000 <config_file>
  402f04:	add	x1, x1, #0x3a6
  402f08:	ldr	x2, [sp, #40]
  402f0c:	bl	406c68 <udev_util_encode_string>
  402f10:	ldur	x8, [x29, #-16]
  402f14:	mov	x0, x8
  402f18:	adrp	x8, 420000 <config_file>
  402f1c:	add	x8, x8, #0x226
  402f20:	mov	x1, x8
  402f24:	mov	x9, #0x3f                  	// #63
  402f28:	mov	x2, x9
  402f2c:	str	x8, [sp, #32]
  402f30:	str	x9, [sp, #24]
  402f34:	bl	40688c <util_replace_whitespace>
  402f38:	ldr	x8, [sp, #32]
  402f3c:	mov	x0, x8
  402f40:	mov	x9, xzr
  402f44:	mov	x1, x9
  402f48:	str	x9, [sp, #16]
  402f4c:	bl	406a98 <util_replace_chars>
  402f50:	ldur	x8, [x29, #-16]
  402f54:	add	x8, x8, #0x9
  402f58:	mov	x0, x8
  402f5c:	adrp	x8, 420000 <config_file>
  402f60:	add	x8, x8, #0x366
  402f64:	mov	x1, x8
  402f68:	ldr	x2, [sp, #24]
  402f6c:	str	x8, [sp, #8]
  402f70:	bl	40688c <util_replace_whitespace>
  402f74:	ldr	x8, [sp, #8]
  402f78:	mov	x0, x8
  402f7c:	ldr	x1, [sp, #16]
  402f80:	bl	406a98 <util_replace_chars>
  402f84:	ldur	x8, [x29, #-16]
  402f88:	add	x8, x8, #0x1f
  402f8c:	mov	x0, x8
  402f90:	adrp	x1, 420000 <config_file>
  402f94:	add	x1, x1, #0x4b6
  402f98:	mov	x2, #0x10                  	// #16
  402f9c:	bl	4032f0 <set_type>
  402fa0:	ldur	x8, [x29, #-16]
  402fa4:	add	x0, x8, #0x1a
  402fa8:	adrp	x8, 420000 <config_file>
  402fac:	add	x8, x8, #0x4a6
  402fb0:	mov	x1, x8
  402fb4:	mov	x2, #0xf                   	// #15
  402fb8:	str	x8, [sp]
  402fbc:	bl	40688c <util_replace_whitespace>
  402fc0:	ldr	x8, [sp]
  402fc4:	mov	x0, x8
  402fc8:	ldr	x1, [sp, #16]
  402fcc:	bl	406a98 <util_replace_chars>
  402fd0:	stur	wzr, [x29, #-4]
  402fd4:	ldur	w0, [x29, #-4]
  402fd8:	ldp	x29, x30, [sp, #80]
  402fdc:	add	sp, sp, #0x60
  402fe0:	ret

0000000000402fe4 <per_dev_options>:
  402fe4:	sub	sp, sp, #0x90
  402fe8:	stp	x29, x30, [sp, #128]
  402fec:	add	x29, sp, #0x80
  402ff0:	mov	x8, xzr
  402ff4:	adrp	x9, 420000 <config_file>
  402ff8:	add	x9, x9, #0x21d
  402ffc:	adrp	x10, 420000 <config_file>
  403000:	add	x10, x10, #0x220
  403004:	adrp	x11, 420000 <config_file>
  403008:	add	x11, x11, #0x226
  40300c:	adrp	x12, 420000 <config_file>
  403010:	add	x12, x12, #0x366
  403014:	mov	w13, #0x1                   	// #1
  403018:	adrp	x14, 420000 <config_file>
  40301c:	add	x14, x14, #0x4c8
  403020:	adrp	x15, 420000 <config_file>
  403024:	add	x15, x15, #0x4d0
  403028:	adrp	x16, 407000 <options+0x178>
  40302c:	add	x16, x16, #0x10
  403030:	add	x16, x16, #0x3
  403034:	sub	x17, x29, #0x20
  403038:	sub	x3, x29, #0x28
  40303c:	stur	x0, [x29, #-8]
  403040:	stur	x1, [x29, #-16]
  403044:	stur	x2, [x29, #-24]
  403048:	stur	x8, [x29, #-40]
  40304c:	ldrb	w18, [x9]
  403050:	and	w18, w18, #0x1
  403054:	ldur	x8, [x29, #-16]
  403058:	str	w18, [x8]
  40305c:	ldr	w18, [x10]
  403060:	ldur	x8, [x29, #-24]
  403064:	str	w18, [x8]
  403068:	mov	x0, x11
  40306c:	mov	x1, x12
  403070:	mov	x2, x17
  403074:	str	w13, [sp, #48]
  403078:	str	x14, [sp, #40]
  40307c:	str	x15, [sp, #32]
  403080:	str	x16, [sp, #24]
  403084:	bl	401f18 <get_file_options>
  403088:	stur	w0, [x29, #-28]
  40308c:	ldr	w13, [sp, #48]
  403090:	ldr	x8, [sp, #40]
  403094:	str	w13, [x8]
  403098:	ldur	w8, [x29, #-28]
  40309c:	cbnz	w8, 4032c4 <per_dev_options+0x2e0>
  4030a0:	ldur	w0, [x29, #-32]
  4030a4:	ldur	x1, [x29, #-40]
  4030a8:	adrp	x2, 407000 <options+0x178>
  4030ac:	add	x2, x2, #0x604
  4030b0:	adrp	x3, 406000 <check_fill_0x83_id+0x2d8>
  4030b4:	add	x3, x3, #0xe88
  4030b8:	mov	x8, xzr
  4030bc:	mov	x4, x8
  4030c0:	bl	4018d8 <getopt_long@plt>
  4030c4:	stur	w0, [x29, #-44]
  4030c8:	ldur	w9, [x29, #-44]
  4030cc:	mov	w10, #0xffffffff            	// #-1
  4030d0:	cmp	w9, w10
  4030d4:	b.ne	4030dc <per_dev_options+0xf8>  // b.any
  4030d8:	b	4032c4 <per_dev_options+0x2e0>
  4030dc:	ldur	w8, [x29, #-44]
  4030e0:	cmp	w8, #0x62
  4030e4:	str	w8, [sp, #20]
  4030e8:	b.eq	403110 <per_dev_options+0x12c>  // b.none
  4030ec:	b	4030f0 <per_dev_options+0x10c>
  4030f0:	ldr	w8, [sp, #20]
  4030f4:	cmp	w8, #0x67
  4030f8:	b.eq	40311c <per_dev_options+0x138>  // b.none
  4030fc:	b	403100 <per_dev_options+0x11c>
  403100:	ldr	w8, [sp, #20]
  403104:	cmp	w8, #0x70
  403108:	b.eq	40312c <per_dev_options+0x148>  // b.none
  40310c:	b	403234 <per_dev_options+0x250>
  403110:	ldur	x8, [x29, #-16]
  403114:	str	wzr, [x8]
  403118:	b	4032c0 <per_dev_options+0x2dc>
  40311c:	ldur	x8, [x29, #-16]
  403120:	mov	w9, #0x1                   	// #1
  403124:	str	w9, [x8]
  403128:	b	4032c0 <per_dev_options+0x2dc>
  40312c:	ldr	x8, [sp, #32]
  403130:	ldr	x0, [x8]
  403134:	adrp	x1, 407000 <options+0x178>
  403138:	add	x1, x1, #0xf9
  40313c:	bl	4018f8 <strcmp@plt>
  403140:	cbnz	w0, 403154 <per_dev_options+0x170>
  403144:	ldur	x8, [x29, #-24]
  403148:	mov	w9, #0x80                  	// #128
  40314c:	str	w9, [x8]
  403150:	b	403230 <per_dev_options+0x24c>
  403154:	ldr	x8, [sp, #32]
  403158:	ldr	x0, [x8]
  40315c:	adrp	x1, 407000 <options+0x178>
  403160:	add	x1, x1, #0xfe
  403164:	bl	4018f8 <strcmp@plt>
  403168:	cbnz	w0, 40317c <per_dev_options+0x198>
  40316c:	ldur	x8, [x29, #-24]
  403170:	mov	w9, #0x83                  	// #131
  403174:	str	w9, [x8]
  403178:	b	403230 <per_dev_options+0x24c>
  40317c:	ldr	x8, [sp, #32]
  403180:	ldr	x0, [x8]
  403184:	adrp	x1, 407000 <options+0x178>
  403188:	add	x1, x1, #0x103
  40318c:	bl	4018f8 <strcmp@plt>
  403190:	cbnz	w0, 4031a4 <per_dev_options+0x1c0>
  403194:	ldur	x8, [x29, #-24]
  403198:	mov	w9, #0xffffff7d            	// #-131
  40319c:	str	w9, [x8]
  4031a0:	b	403230 <per_dev_options+0x24c>
  4031a4:	mov	w8, #0x3                   	// #3
  4031a8:	stur	w8, [x29, #-48]
  4031ac:	stur	wzr, [x29, #-52]
  4031b0:	mov	w8, #0x1                   	// #1
  4031b4:	stur	w8, [x29, #-56]
  4031b8:	ldur	w0, [x29, #-56]
  4031bc:	bl	4017c8 <log_get_max_level_realm@plt>
  4031c0:	ldur	w8, [x29, #-48]
  4031c4:	and	w8, w8, #0x7
  4031c8:	cmp	w0, w8
  4031cc:	b.lt	40320c <per_dev_options+0x228>  // b.tstop
  4031d0:	ldur	w8, [x29, #-56]
  4031d4:	ldur	w9, [x29, #-48]
  4031d8:	orr	w0, w9, w8, lsl #10
  4031dc:	ldur	w1, [x29, #-52]
  4031e0:	ldr	x10, [sp, #32]
  4031e4:	ldr	x6, [x10]
  4031e8:	ldr	x2, [sp, #24]
  4031ec:	mov	w3, #0x1ad                 	// #429
  4031f0:	adrp	x4, 407000 <options+0x178>
  4031f4:	add	x4, x4, #0x609
  4031f8:	adrp	x5, 407000 <options+0x178>
  4031fc:	add	x5, x5, #0x11b
  403200:	bl	4017d8 <log_internal_realm@plt>
  403204:	str	w0, [sp, #16]
  403208:	b	403220 <per_dev_options+0x23c>
  40320c:	ldur	w0, [x29, #-52]
  403210:	bl	4017e8 <abs@plt>
  403214:	mov	w8, wzr
  403218:	subs	w8, w8, w0, uxtb
  40321c:	str	w8, [sp, #16]
  403220:	ldr	w8, [sp, #16]
  403224:	stur	w8, [x29, #-60]
  403228:	mov	w8, #0xffffffff            	// #-1
  40322c:	stur	w8, [x29, #-28]
  403230:	b	4032c0 <per_dev_options+0x2dc>
  403234:	mov	w8, #0x3                   	// #3
  403238:	str	w8, [sp, #64]
  40323c:	str	wzr, [sp, #60]
  403240:	mov	w8, #0x1                   	// #1
  403244:	str	w8, [sp, #56]
  403248:	ldr	w0, [sp, #56]
  40324c:	bl	4017c8 <log_get_max_level_realm@plt>
  403250:	ldr	w8, [sp, #64]
  403254:	and	w8, w8, #0x7
  403258:	cmp	w0, w8
  40325c:	b.lt	40329c <per_dev_options+0x2b8>  // b.tstop
  403260:	ldr	w8, [sp, #56]
  403264:	ldr	w9, [sp, #64]
  403268:	orr	w0, w9, w8, lsl #10
  40326c:	ldr	w1, [sp, #60]
  403270:	ldur	w6, [x29, #-44]
  403274:	ldur	w7, [x29, #-44]
  403278:	ldr	x2, [sp, #24]
  40327c:	mov	w3, #0x1b3                 	// #435
  403280:	adrp	x4, 407000 <options+0x178>
  403284:	add	x4, x4, #0x609
  403288:	adrp	x5, 407000 <options+0x178>
  40328c:	add	x5, x5, #0x619
  403290:	bl	4017d8 <log_internal_realm@plt>
  403294:	str	w0, [sp, #12]
  403298:	b	4032b0 <per_dev_options+0x2cc>
  40329c:	ldr	w0, [sp, #60]
  4032a0:	bl	4017e8 <abs@plt>
  4032a4:	mov	w8, wzr
  4032a8:	subs	w8, w8, w0, uxtb
  4032ac:	str	w8, [sp, #12]
  4032b0:	ldr	w8, [sp, #12]
  4032b4:	str	w8, [sp, #52]
  4032b8:	mov	w8, #0xffffffff            	// #-1
  4032bc:	stur	w8, [x29, #-28]
  4032c0:	b	403098 <per_dev_options+0xb4>
  4032c4:	ldur	x8, [x29, #-40]
  4032c8:	cbz	x8, 4032e0 <per_dev_options+0x2fc>
  4032cc:	ldur	x8, [x29, #-40]
  4032d0:	ldr	x0, [x8]
  4032d4:	bl	4017f8 <free@plt>
  4032d8:	ldur	x0, [x29, #-40]
  4032dc:	bl	4017f8 <free@plt>
  4032e0:	ldur	w0, [x29, #-28]
  4032e4:	ldp	x29, x30, [sp, #128]
  4032e8:	add	sp, sp, #0x90
  4032ec:	ret

00000000004032f0 <set_type>:
  4032f0:	sub	sp, sp, #0x50
  4032f4:	stp	x29, x30, [sp, #64]
  4032f8:	add	x29, sp, #0x40
  4032fc:	adrp	x8, 407000 <options+0x178>
  403300:	add	x8, x8, #0x5e7
  403304:	mov	w9, wzr
  403308:	adrp	x10, 407000 <options+0x178>
  40330c:	add	x10, x10, #0x5f9
  403310:	add	x11, sp, #0x18
  403314:	stur	x0, [x29, #-8]
  403318:	stur	x1, [x29, #-16]
  40331c:	stur	x2, [x29, #-24]
  403320:	str	x8, [sp, #16]
  403324:	ldur	x0, [x29, #-8]
  403328:	mov	x1, x11
  40332c:	mov	w2, w9
  403330:	str	x10, [sp, #8]
  403334:	bl	401978 <strtoul@plt>
  403338:	stur	w0, [x29, #-28]
  40333c:	ldr	x8, [sp, #24]
  403340:	ldur	x10, [x29, #-8]
  403344:	cmp	x8, x10
  403348:	b.eq	4033e4 <set_type+0xf4>  // b.none
  40334c:	ldur	w8, [x29, #-28]
  403350:	subs	w8, w8, #0x0
  403354:	mov	w9, w8
  403358:	ubfx	x9, x9, #0, #32
  40335c:	cmp	x9, #0xf
  403360:	str	x9, [sp]
  403364:	b.hi	4033e4 <set_type+0xf4>  // b.pmore
  403368:	adrp	x8, 406000 <check_fill_0x83_id+0x2d8>
  40336c:	add	x8, x8, #0xe48
  403370:	ldr	x11, [sp]
  403374:	ldrsw	x10, [x8, x11, lsl #2]
  403378:	add	x9, x8, x10
  40337c:	br	x9
  403380:	adrp	x8, 407000 <options+0x178>
  403384:	add	x8, x8, #0x5ef
  403388:	str	x8, [sp, #16]
  40338c:	b	4033e4 <set_type+0xf4>
  403390:	adrp	x8, 407000 <options+0x178>
  403394:	add	x8, x8, #0x5f4
  403398:	str	x8, [sp, #16]
  40339c:	b	4033e4 <set_type+0xf4>
  4033a0:	ldr	x8, [sp, #8]
  4033a4:	str	x8, [sp, #16]
  4033a8:	b	4033e4 <set_type+0xf4>
  4033ac:	adrp	x8, 407000 <options+0x178>
  4033b0:	add	x8, x8, #0x601
  4033b4:	str	x8, [sp, #16]
  4033b8:	b	4033e4 <set_type+0xf4>
  4033bc:	ldr	x8, [sp, #8]
  4033c0:	str	x8, [sp, #16]
  4033c4:	b	4033e4 <set_type+0xf4>
  4033c8:	adrp	x8, 407000 <options+0x178>
  4033cc:	add	x8, x8, #0x5ef
  4033d0:	str	x8, [sp, #16]
  4033d4:	b	4033e4 <set_type+0xf4>
  4033d8:	ldr	x8, [sp, #8]
  4033dc:	str	x8, [sp, #16]
  4033e0:	b	4033e4 <set_type+0xf4>
  4033e4:	ldur	x0, [x29, #-16]
  4033e8:	ldur	x1, [x29, #-24]
  4033ec:	ldr	x2, [sp, #16]
  4033f0:	bl	4018e8 <strscpy@plt>
  4033f4:	ldp	x29, x30, [sp, #64]
  4033f8:	add	sp, sp, #0x50
  4033fc:	ret

0000000000403400 <scsi_std_inquiry>:
  403400:	stp	x29, x30, [sp, #-32]!
  403404:	str	x28, [sp, #16]
  403408:	mov	x29, sp
  40340c:	sub	sp, sp, #0x200
  403410:	add	x8, sp, #0xe6
  403414:	mov	w9, #0x800                 	// #2048
  403418:	movk	w9, #0x8, lsl #16
  40341c:	adrp	x10, 407000 <options+0x178>
  403420:	add	x10, x10, #0x63b
  403424:	add	x10, x10, #0x3
  403428:	stur	x0, [x29, #-16]
  40342c:	stur	x1, [x29, #-24]
  403430:	str	wzr, [sp, #92]
  403434:	ldur	x0, [x29, #-24]
  403438:	mov	w1, w9
  40343c:	str	x8, [sp, #40]
  403440:	str	x10, [sp, #32]
  403444:	bl	401988 <open64@plt>
  403448:	stur	w0, [x29, #-28]
  40344c:	ldur	w9, [x29, #-28]
  403450:	cmp	w9, #0x0
  403454:	cset	w9, ge  // ge = tcont
  403458:	tbnz	w9, #0, 4034f0 <scsi_std_inquiry+0xf0>
  40345c:	mov	w8, #0x7                   	// #7
  403460:	str	w8, [sp, #88]
  403464:	bl	401838 <__errno_location@plt>
  403468:	ldr	w8, [x0]
  40346c:	str	w8, [sp, #84]
  403470:	mov	w8, #0x1                   	// #1
  403474:	str	w8, [sp, #80]
  403478:	ldr	w0, [sp, #80]
  40347c:	bl	4017c8 <log_get_max_level_realm@plt>
  403480:	ldr	w8, [sp, #88]
  403484:	and	w8, w8, #0x7
  403488:	cmp	w0, w8
  40348c:	b.lt	4034c8 <scsi_std_inquiry+0xc8>  // b.tstop
  403490:	ldr	w8, [sp, #80]
  403494:	ldr	w9, [sp, #88]
  403498:	orr	w0, w9, w8, lsl #10
  40349c:	ldr	w1, [sp, #84]
  4034a0:	ldur	x6, [x29, #-24]
  4034a4:	ldr	x2, [sp, #32]
  4034a8:	mov	w3, #0x2f0                 	// #752
  4034ac:	adrp	x4, 407000 <options+0x178>
  4034b0:	add	x4, x4, #0x65d
  4034b4:	adrp	x5, 407000 <options+0x178>
  4034b8:	add	x5, x5, #0x66e
  4034bc:	bl	4017d8 <log_internal_realm@plt>
  4034c0:	str	w0, [sp, #28]
  4034c4:	b	4034dc <scsi_std_inquiry+0xdc>
  4034c8:	ldr	w0, [sp, #84]
  4034cc:	bl	4017e8 <abs@plt>
  4034d0:	mov	w8, wzr
  4034d4:	subs	w8, w8, w0, uxtb
  4034d8:	str	w8, [sp, #28]
  4034dc:	ldr	w8, [sp, #28]
  4034e0:	str	w8, [sp, #76]
  4034e4:	mov	w8, #0x1                   	// #1
  4034e8:	stur	w8, [x29, #-4]
  4034ec:	b	4036bc <scsi_std_inquiry+0x2bc>
  4034f0:	ldur	w0, [x29, #-28]
  4034f4:	add	x1, sp, #0x60
  4034f8:	bl	406d28 <fstat64>
  4034fc:	cmp	w0, #0x0
  403500:	cset	w8, ge  // ge = tcont
  403504:	tbnz	w8, #0, 40359c <scsi_std_inquiry+0x19c>
  403508:	mov	w8, #0x7                   	// #7
  40350c:	str	w8, [sp, #72]
  403510:	bl	401838 <__errno_location@plt>
  403514:	ldr	w8, [x0]
  403518:	str	w8, [sp, #68]
  40351c:	mov	w8, #0x1                   	// #1
  403520:	str	w8, [sp, #64]
  403524:	ldr	w0, [sp, #64]
  403528:	bl	4017c8 <log_get_max_level_realm@plt>
  40352c:	ldr	w8, [sp, #72]
  403530:	and	w8, w8, #0x7
  403534:	cmp	w0, w8
  403538:	b.lt	403574 <scsi_std_inquiry+0x174>  // b.tstop
  40353c:	ldr	w8, [sp, #64]
  403540:	ldr	w9, [sp, #72]
  403544:	orr	w0, w9, w8, lsl #10
  403548:	ldr	w1, [sp, #68]
  40354c:	ldur	x6, [x29, #-24]
  403550:	ldr	x2, [sp, #32]
  403554:	mov	w3, #0x2f5                 	// #757
  403558:	adrp	x4, 407000 <options+0x178>
  40355c:	add	x4, x4, #0x65d
  403560:	adrp	x5, 407000 <options+0x178>
  403564:	add	x5, x5, #0x68a
  403568:	bl	4017d8 <log_internal_realm@plt>
  40356c:	str	w0, [sp, #24]
  403570:	b	403588 <scsi_std_inquiry+0x188>
  403574:	ldr	w0, [sp, #68]
  403578:	bl	4017e8 <abs@plt>
  40357c:	mov	w8, wzr
  403580:	subs	w8, w8, w0, uxtb
  403584:	str	w8, [sp, #24]
  403588:	ldr	w8, [sp, #24]
  40358c:	str	w8, [sp, #60]
  403590:	mov	w8, #0x2                   	// #2
  403594:	str	w8, [sp, #92]
  403598:	b	4036ac <scsi_std_inquiry+0x2ac>
  40359c:	ldur	x8, [x29, #-16]
  4035a0:	add	x0, x8, #0x40
  4035a4:	ldr	x8, [sp, #128]
  4035a8:	str	x0, [sp, #16]
  4035ac:	mov	x0, x8
  4035b0:	bl	401998 <gnu_dev_major@plt>
  4035b4:	ldr	x8, [sp, #128]
  4035b8:	str	w0, [sp, #12]
  4035bc:	mov	x0, x8
  4035c0:	bl	4019a8 <gnu_dev_minor@plt>
  4035c4:	ldr	x8, [sp, #16]
  4035c8:	str	w0, [sp, #8]
  4035cc:	mov	x0, x8
  4035d0:	adrp	x1, 407000 <options+0x178>
  4035d4:	add	x1, x1, #0x6a6
  4035d8:	ldr	w2, [sp, #12]
  4035dc:	ldr	w3, [sp, #8]
  4035e0:	bl	4019b8 <sprintf@plt>
  4035e4:	mov	x8, #0xfe                  	// #254
  4035e8:	str	x8, [sp, #48]
  4035ec:	ldr	x8, [sp, #48]
  4035f0:	cmp	x8, #0x0
  4035f4:	cset	w9, ls  // ls = plast
  4035f8:	tbnz	w9, #0, 403610 <scsi_std_inquiry+0x210>
  4035fc:	ldr	x2, [sp, #48]
  403600:	add	x0, sp, #0xe6
  403604:	mov	w8, wzr
  403608:	mov	w1, w8
  40360c:	bl	401948 <memset@plt>
  403610:	ldur	x0, [x29, #-16]
  403614:	ldur	w1, [x29, #-28]
  403618:	mov	w8, wzr
  40361c:	mov	w2, w8
  403620:	mov	w3, w8
  403624:	add	x4, sp, #0xe6
  403628:	mov	w5, #0xfe                  	// #254
  40362c:	bl	4036d0 <scsi_inquiry>
  403630:	str	w0, [sp, #92]
  403634:	ldr	w8, [sp, #92]
  403638:	cmp	w8, #0x0
  40363c:	cset	w8, ge  // ge = tcont
  403640:	tbnz	w8, #0, 403648 <scsi_std_inquiry+0x248>
  403644:	b	4036ac <scsi_std_inquiry+0x2ac>
  403648:	str	wzr, [sp, #92]
  40364c:	ldur	x8, [x29, #-16]
  403650:	ldr	x9, [sp, #40]
  403654:	ldr	x10, [x9, #8]
  403658:	str	x10, [x8]
  40365c:	ldur	x8, [x29, #-16]
  403660:	mov	w11, #0x0                   	// #0
  403664:	strb	w11, [x8, #8]
  403668:	ldur	x8, [x29, #-16]
  40366c:	ldr	q0, [x9, #16]
  403670:	stur	q0, [x8, #9]
  403674:	ldur	x8, [x29, #-16]
  403678:	strb	w11, [x8, #25]
  40367c:	ldur	x8, [x29, #-16]
  403680:	ldr	w12, [x9, #32]
  403684:	stur	w12, [x8, #26]
  403688:	ldur	x8, [x29, #-16]
  40368c:	strb	w11, [x8, #30]
  403690:	ldur	x8, [x29, #-16]
  403694:	add	x0, x8, #0x1f
  403698:	ldrb	w11, [sp, #230]
  40369c:	and	w2, w11, #0x1f
  4036a0:	adrp	x1, 407000 <options+0x178>
  4036a4:	add	x1, x1, #0x6ac
  4036a8:	bl	4019b8 <sprintf@plt>
  4036ac:	ldur	w0, [x29, #-28]
  4036b0:	bl	4019c8 <close@plt>
  4036b4:	ldr	w8, [sp, #92]
  4036b8:	stur	w8, [x29, #-4]
  4036bc:	ldur	w0, [x29, #-4]
  4036c0:	add	sp, sp, #0x200
  4036c4:	ldr	x28, [sp, #16]
  4036c8:	ldp	x29, x30, [sp], #32
  4036cc:	ret

00000000004036d0 <scsi_inquiry>:
  4036d0:	stp	x29, x30, [sp, #-32]!
  4036d4:	str	x28, [sp, #16]
  4036d8:	mov	x29, sp
  4036dc:	sub	sp, sp, #0x1e0
  4036e0:	add	x8, sp, #0xe8
  4036e4:	mov	w9, #0x12                  	// #18
  4036e8:	mov	w10, #0x0                   	// #0
  4036ec:	mov	w11, #0x3                   	// #3
  4036f0:	adrp	x12, 407000 <options+0x178>
  4036f4:	add	x12, x12, #0x63b
  4036f8:	add	x12, x12, #0x3
  4036fc:	adrp	x13, 407000 <options+0x178>
  403700:	add	x13, x13, #0x6de
  403704:	sub	x14, x29, #0x2a
  403708:	str	x0, [x8, #232]
  40370c:	stur	w1, [x29, #-20]
  403710:	sturb	w2, [x29, #-21]
  403714:	sturb	w3, [x29, #-22]
  403718:	str	x4, [x8, #216]
  40371c:	stur	w5, [x29, #-36]
  403720:	sturb	w9, [x29, #-42]
  403724:	ldurb	w9, [x29, #-21]
  403728:	strb	w9, [x14, #1]
  40372c:	ldurb	w9, [x29, #-22]
  403730:	strb	w9, [x14, #2]
  403734:	strb	w10, [x14, #3]
  403738:	ldur	w9, [x29, #-36]
  40373c:	strb	w9, [x14, #4]
  403740:	strb	w10, [x14, #5]
  403744:	str	w11, [sp, #140]
  403748:	ldur	w9, [x29, #-36]
  40374c:	cmp	w9, #0xfe
  403750:	str	x8, [sp, #56]
  403754:	str	x12, [sp, #48]
  403758:	str	x13, [sp, #40]
  40375c:	b.ls	4037f0 <scsi_inquiry+0x120>  // b.plast
  403760:	mov	w8, #0x7                   	// #7
  403764:	str	w8, [sp, #132]
  403768:	mov	w8, #0x16                  	// #22
  40376c:	movk	w8, #0x4000, lsl #16
  403770:	str	w8, [sp, #128]
  403774:	mov	w8, #0x1                   	// #1
  403778:	str	w8, [sp, #124]
  40377c:	ldr	w0, [sp, #124]
  403780:	bl	4017c8 <log_get_max_level_realm@plt>
  403784:	ldr	w8, [sp, #132]
  403788:	and	w8, w8, #0x7
  40378c:	cmp	w0, w8
  403790:	b.lt	4037c8 <scsi_inquiry+0xf8>  // b.tstop
  403794:	ldr	w8, [sp, #124]
  403798:	ldr	w9, [sp, #132]
  40379c:	orr	w0, w9, w8, lsl #10
  4037a0:	ldr	w1, [sp, #128]
  4037a4:	ldur	w6, [x29, #-36]
  4037a8:	ldr	x2, [sp, #48]
  4037ac:	mov	w3, #0x11b                 	// #283
  4037b0:	ldr	x4, [sp, #40]
  4037b4:	adrp	x5, 407000 <options+0x178>
  4037b8:	add	x5, x5, #0x6eb
  4037bc:	bl	4017d8 <log_internal_realm@plt>
  4037c0:	str	w0, [sp, #36]
  4037c4:	b	4037dc <scsi_inquiry+0x10c>
  4037c8:	ldr	w0, [sp, #128]
  4037cc:	bl	4017e8 <abs@plt>
  4037d0:	mov	w8, wzr
  4037d4:	subs	w8, w8, w0, uxtb
  4037d8:	str	w8, [sp, #36]
  4037dc:	ldr	w8, [sp, #36]
  4037e0:	str	w8, [sp, #120]
  4037e4:	ldr	w8, [sp, #120]
  4037e8:	stur	w8, [x29, #-4]
  4037ec:	b	403bf8 <scsi_inquiry+0x528>
  4037f0:	ldr	x8, [sp, #56]
  4037f4:	ldr	x9, [x8, #232]
  4037f8:	ldr	w10, [x9, #640]
  4037fc:	cmp	w10, #0x4
  403800:	b.ne	403880 <scsi_inquiry+0x1b0>  // b.any
  403804:	mov	x8, #0xa0                  	// #160
  403808:	str	x8, [sp, #112]
  40380c:	ldr	x8, [sp, #112]
  403810:	cmp	x8, #0x0
  403814:	cset	w9, ls  // ls = plast
  403818:	tbnz	w9, #0, 403830 <scsi_inquiry+0x160>
  40381c:	ldr	x2, [sp, #112]
  403820:	add	x0, sp, #0xe8
  403824:	mov	w8, wzr
  403828:	mov	w1, w8
  40382c:	bl	401948 <memset@plt>
  403830:	add	x8, sp, #0xe8
  403834:	mov	w9, #0x51                  	// #81
  403838:	str	w9, [sp, #232]
  40383c:	str	wzr, [sp, #236]
  403840:	str	wzr, [sp, #240]
  403844:	mov	w9, #0x6                   	// #6
  403848:	str	w9, [sp, #244]
  40384c:	sub	x10, x29, #0x2a
  403850:	ldr	x11, [sp, #56]
  403854:	str	x10, [x11, #16]
  403858:	mov	w9, #0x20                  	// #32
  40385c:	str	w9, [sp, #276]
  403860:	sub	x10, x29, #0x4a
  403864:	str	x10, [x11, #48]
  403868:	ldur	w9, [x29, #-36]
  40386c:	str	w9, [sp, #300]
  403870:	ldr	x10, [x11, #216]
  403874:	str	x10, [x11, #80]
  403878:	str	x8, [x11, #160]
  40387c:	b	403900 <scsi_inquiry+0x230>
  403880:	mov	x8, #0x58                  	// #88
  403884:	str	x8, [sp, #104]
  403888:	ldr	x8, [sp, #104]
  40388c:	cmp	x8, #0x0
  403890:	cset	w9, ls  // ls = plast
  403894:	tbnz	w9, #0, 4038ac <scsi_inquiry+0x1dc>
  403898:	ldr	x2, [sp, #104]
  40389c:	add	x0, sp, #0x90
  4038a0:	mov	w8, wzr
  4038a4:	mov	w1, w8
  4038a8:	bl	401948 <memset@plt>
  4038ac:	add	x8, sp, #0x90
  4038b0:	mov	w9, #0x53                  	// #83
  4038b4:	str	w9, [sp, #144]
  4038b8:	mov	w9, #0x6                   	// #6
  4038bc:	strb	w9, [x8, #8]
  4038c0:	mov	w9, #0x20                  	// #32
  4038c4:	strb	w9, [x8, #9]
  4038c8:	mov	w9, #0xfffffffd            	// #-3
  4038cc:	str	w9, [sp, #148]
  4038d0:	ldur	w9, [x29, #-36]
  4038d4:	str	w9, [sp, #156]
  4038d8:	ldr	x10, [sp, #56]
  4038dc:	ldr	x11, [x10, #216]
  4038e0:	str	x11, [x8, #16]
  4038e4:	sub	x11, x29, #0x2a
  4038e8:	str	x11, [x8, #24]
  4038ec:	sub	x11, x29, #0x4a
  4038f0:	str	x11, [x8, #32]
  4038f4:	mov	w9, #0x1388                	// #5000
  4038f8:	str	w9, [sp, #184]
  4038fc:	str	x8, [x10, #160]
  403900:	ldur	w0, [x29, #-20]
  403904:	ldr	x8, [sp, #56]
  403908:	ldr	x2, [x8, #160]
  40390c:	mov	x1, #0x2285                	// #8837
  403910:	bl	4019d8 <ioctl@plt>
  403914:	str	w0, [sp, #136]
  403918:	ldr	w9, [sp, #136]
  40391c:	cmp	w9, #0x0
  403920:	cset	w9, ge  // ge = tcont
  403924:	tbnz	w9, #0, 403a3c <scsi_inquiry+0x36c>
  403928:	mov	w8, #0x0                   	// #0
  40392c:	strb	w8, [sp, #103]
  403930:	bl	401838 <__errno_location@plt>
  403934:	ldr	w8, [x0]
  403938:	cmp	w8, #0x16
  40393c:	str	w8, [sp, #32]
  403940:	b.eq	403960 <scsi_inquiry+0x290>  // b.none
  403944:	b	403948 <scsi_inquiry+0x278>
  403948:	ldr	w8, [sp, #32]
  40394c:	cmp	w8, #0x26
  403950:	cset	w9, eq  // eq = none
  403954:	eor	w9, w9, #0x1
  403958:	tbnz	w9, #0, 40396c <scsi_inquiry+0x29c>
  40395c:	b	403960 <scsi_inquiry+0x290>
  403960:	mov	w8, #0x1                   	// #1
  403964:	strb	w8, [sp, #103]
  403968:	b	40396c <scsi_inquiry+0x29c>
  40396c:	ldrb	w8, [sp, #103]
  403970:	and	w8, w8, #0x1
  403974:	strb	w8, [sp, #102]
  403978:	ldrb	w8, [sp, #102]
  40397c:	tbnz	w8, #0, 403984 <scsi_inquiry+0x2b4>
  403980:	b	4039ac <scsi_inquiry+0x2dc>
  403984:	ldr	x8, [sp, #56]
  403988:	ldr	x9, [x8, #232]
  40398c:	ldr	w10, [x9, #640]
  403990:	cmp	w10, #0x4
  403994:	b.ne	4039ac <scsi_inquiry+0x2dc>  // b.any
  403998:	ldr	x8, [sp, #56]
  40399c:	ldr	x9, [x8, #232]
  4039a0:	mov	w10, #0x3                   	// #3
  4039a4:	str	w10, [x9, #640]
  4039a8:	b	4037f0 <scsi_inquiry+0x120>
  4039ac:	mov	w8, #0x7                   	// #7
  4039b0:	str	w8, [sp, #96]
  4039b4:	bl	401838 <__errno_location@plt>
  4039b8:	ldr	w8, [x0]
  4039bc:	str	w8, [sp, #92]
  4039c0:	mov	w8, #0x1                   	// #1
  4039c4:	str	w8, [sp, #88]
  4039c8:	ldr	w0, [sp, #88]
  4039cc:	bl	4017c8 <log_get_max_level_realm@plt>
  4039d0:	ldr	w8, [sp, #96]
  4039d4:	and	w8, w8, #0x7
  4039d8:	cmp	w0, w8
  4039dc:	b.lt	403a1c <scsi_inquiry+0x34c>  // b.tstop
  4039e0:	ldr	w8, [sp, #88]
  4039e4:	ldr	w9, [sp, #96]
  4039e8:	orr	w0, w9, w8, lsl #10
  4039ec:	ldr	w1, [sp, #92]
  4039f0:	ldr	x10, [sp, #56]
  4039f4:	ldr	x11, [x10, #232]
  4039f8:	add	x6, x11, #0x40
  4039fc:	ldr	x2, [sp, #48]
  403a00:	mov	w3, #0x13e                 	// #318
  403a04:	ldr	x4, [sp, #40]
  403a08:	adrp	x5, 407000 <options+0x178>
  403a0c:	add	x5, x5, #0x6fe
  403a10:	bl	4017d8 <log_internal_realm@plt>
  403a14:	str	w0, [sp, #28]
  403a18:	b	403a30 <scsi_inquiry+0x360>
  403a1c:	ldr	w0, [sp, #92]
  403a20:	bl	4017e8 <abs@plt>
  403a24:	mov	w8, wzr
  403a28:	subs	w8, w8, w0, uxtb
  403a2c:	str	w8, [sp, #28]
  403a30:	ldr	w8, [sp, #28]
  403a34:	str	w8, [sp, #84]
  403a38:	b	403b4c <scsi_inquiry+0x47c>
  403a3c:	ldr	x8, [sp, #56]
  403a40:	ldr	x9, [x8, #232]
  403a44:	ldr	w10, [x9, #640]
  403a48:	cmp	w10, #0x4
  403a4c:	b.ne	403a64 <scsi_inquiry+0x394>  // b.any
  403a50:	ldr	x8, [sp, #56]
  403a54:	ldr	x0, [x8, #160]
  403a58:	bl	404b2c <sg_err_category4>
  403a5c:	str	w0, [sp, #136]
  403a60:	b	403a74 <scsi_inquiry+0x3a4>
  403a64:	ldr	x8, [sp, #56]
  403a68:	ldr	x0, [x8, #160]
  403a6c:	bl	404b80 <sg_err_category3>
  403a70:	str	w0, [sp, #136]
  403a74:	ldr	w8, [sp, #136]
  403a78:	str	w8, [sp, #24]
  403a7c:	cbz	w8, 403abc <scsi_inquiry+0x3ec>
  403a80:	b	403a84 <scsi_inquiry+0x3b4>
  403a84:	ldr	w8, [sp, #24]
  403a88:	cmp	w8, #0x4
  403a8c:	b.eq	403abc <scsi_inquiry+0x3ec>  // b.none
  403a90:	b	403a94 <scsi_inquiry+0x3c4>
  403a94:	ldr	w8, [sp, #24]
  403a98:	cmp	w8, #0x5
  403a9c:	cset	w9, eq  // eq = none
  403aa0:	eor	w9, w9, #0x1
  403aa4:	tbnz	w9, #0, 403ac4 <scsi_inquiry+0x3f4>
  403aa8:	b	403aac <scsi_inquiry+0x3dc>
  403aac:	ldr	x8, [sp, #56]
  403ab0:	ldr	x9, [x8, #216]
  403ab4:	mov	w10, #0x0                   	// #0
  403ab8:	strb	w10, [x9, #1]
  403abc:	str	wzr, [sp, #136]
  403ac0:	b	403b04 <scsi_inquiry+0x434>
  403ac4:	ldr	x8, [sp, #56]
  403ac8:	ldr	x9, [x8, #232]
  403acc:	ldr	w10, [x9, #640]
  403ad0:	cmp	w10, #0x4
  403ad4:	b.ne	403af0 <scsi_inquiry+0x420>  // b.any
  403ad8:	ldr	x8, [sp, #56]
  403adc:	ldr	x0, [x8, #232]
  403ae0:	ldr	x1, [x8, #160]
  403ae4:	bl	404bd0 <scsi_dump_v4>
  403ae8:	str	w0, [sp, #136]
  403aec:	b	403b04 <scsi_inquiry+0x434>
  403af0:	ldr	x8, [sp, #56]
  403af4:	ldr	x0, [x8, #232]
  403af8:	ldr	x1, [x8, #160]
  403afc:	bl	404da8 <scsi_dump>
  403b00:	str	w0, [sp, #136]
  403b04:	ldr	w8, [sp, #136]
  403b08:	cbnz	w8, 403b18 <scsi_inquiry+0x448>
  403b0c:	ldur	w8, [x29, #-36]
  403b10:	str	w8, [sp, #136]
  403b14:	b	403b4c <scsi_inquiry+0x47c>
  403b18:	ldr	w8, [sp, #136]
  403b1c:	cmp	w8, #0x0
  403b20:	cset	w8, le
  403b24:	tbnz	w8, #0, 403b4c <scsi_inquiry+0x47c>
  403b28:	ldr	w8, [sp, #140]
  403b2c:	subs	w8, w8, #0x1
  403b30:	str	w8, [sp, #140]
  403b34:	cmp	w8, #0x0
  403b38:	cset	w8, le
  403b3c:	tbnz	w8, #0, 403b44 <scsi_inquiry+0x474>
  403b40:	b	4037f0 <scsi_inquiry+0x120>
  403b44:	mov	w8, #0xffffffff            	// #-1
  403b48:	str	w8, [sp, #136]
  403b4c:	ldr	w8, [sp, #136]
  403b50:	cmp	w8, #0x0
  403b54:	cset	w8, ge  // ge = tcont
  403b58:	tbnz	w8, #0, 403bf0 <scsi_inquiry+0x520>
  403b5c:	mov	w8, #0x7                   	// #7
  403b60:	str	w8, [sp, #80]
  403b64:	str	wzr, [sp, #76]
  403b68:	mov	w8, #0x1                   	// #1
  403b6c:	str	w8, [sp, #72]
  403b70:	ldr	w0, [sp, #72]
  403b74:	bl	4017c8 <log_get_max_level_realm@plt>
  403b78:	ldr	w8, [sp, #80]
  403b7c:	and	w8, w8, #0x7
  403b80:	cmp	w0, w8
  403b84:	b.lt	403bd4 <scsi_inquiry+0x504>  // b.tstop
  403b88:	ldr	w8, [sp, #72]
  403b8c:	ldr	w9, [sp, #80]
  403b90:	orr	w0, w9, w8, lsl #10
  403b94:	ldr	w1, [sp, #76]
  403b98:	ldr	x10, [sp, #56]
  403b9c:	ldr	x11, [x10, #232]
  403ba0:	add	x6, x11, #0x40
  403ba4:	ldurb	w7, [x29, #-21]
  403ba8:	ldurb	w8, [x29, #-22]
  403bac:	ldr	x2, [sp, #48]
  403bb0:	mov	w3, #0x162                 	// #354
  403bb4:	ldr	x4, [sp, #40]
  403bb8:	adrp	x5, 407000 <options+0x178>
  403bbc:	add	x5, x5, #0x713
  403bc0:	mov	x11, sp
  403bc4:	str	w8, [x11]
  403bc8:	bl	4017d8 <log_internal_realm@plt>
  403bcc:	str	w0, [sp, #20]
  403bd0:	b	403be8 <scsi_inquiry+0x518>
  403bd4:	ldr	w0, [sp, #76]
  403bd8:	bl	4017e8 <abs@plt>
  403bdc:	mov	w8, wzr
  403be0:	subs	w8, w8, w0, uxtb
  403be4:	str	w8, [sp, #20]
  403be8:	ldr	w8, [sp, #20]
  403bec:	str	w8, [sp, #68]
  403bf0:	ldr	w8, [sp, #136]
  403bf4:	stur	w8, [x29, #-4]
  403bf8:	ldur	w0, [x29, #-4]
  403bfc:	add	sp, sp, #0x1e0
  403c00:	ldr	x28, [sp, #16]
  403c04:	ldp	x29, x30, [sp], #32
  403c08:	ret

0000000000403c0c <scsi_get_serial>:
  403c0c:	sub	sp, sp, #0x1a0
  403c10:	stp	x29, x30, [sp, #384]
  403c14:	str	x28, [sp, #400]
  403c18:	add	x29, sp, #0x180
  403c1c:	mov	w8, #0xffffffff            	// #-1
  403c20:	adrp	x9, 407000 <options+0x178>
  403c24:	add	x9, x9, #0x63b
  403c28:	add	x9, x9, #0x3
  403c2c:	stur	x0, [x29, #-16]
  403c30:	stur	x1, [x29, #-24]
  403c34:	stur	w2, [x29, #-28]
  403c38:	stur	w3, [x29, #-32]
  403c3c:	str	w8, [sp, #92]
  403c40:	ldursw	x10, [x29, #-32]
  403c44:	str	x10, [sp, #72]
  403c48:	ldr	x10, [sp, #72]
  403c4c:	cmp	x10, #0x0
  403c50:	cset	w8, ls  // ls = plast
  403c54:	str	x9, [sp, #32]
  403c58:	tbnz	w8, #0, 403c74 <scsi_get_serial+0x68>
  403c5c:	ldur	x8, [x29, #-16]
  403c60:	add	x0, x8, #0x80
  403c64:	ldr	x2, [sp, #72]
  403c68:	mov	w9, wzr
  403c6c:	mov	w1, w9
  403c70:	bl	401948 <memset@plt>
  403c74:	bl	4019e8 <initialize_srand@plt>
  403c78:	mov	w8, #0x14                  	// #20
  403c7c:	str	w8, [sp, #88]
  403c80:	ldr	w8, [sp, #88]
  403c84:	cmp	w8, #0x0
  403c88:	cset	w8, le
  403c8c:	tbnz	w8, #0, 403d34 <scsi_get_serial+0x128>
  403c90:	ldur	x0, [x29, #-24]
  403c94:	mov	w1, #0x800                 	// #2048
  403c98:	movk	w1, #0x8, lsl #16
  403c9c:	bl	401988 <open64@plt>
  403ca0:	str	w0, [sp, #92]
  403ca4:	ldr	w8, [sp, #92]
  403ca8:	cmp	w8, #0x0
  403cac:	cset	w8, ge  // ge = tcont
  403cb0:	tbnz	w8, #0, 403cc4 <scsi_get_serial+0xb8>
  403cb4:	bl	401838 <__errno_location@plt>
  403cb8:	ldr	w8, [x0]
  403cbc:	cmp	w8, #0x10
  403cc0:	b.eq	403cc8 <scsi_get_serial+0xbc>  // b.none
  403cc4:	b	403d34 <scsi_get_serial+0x128>
  403cc8:	add	x0, sp, #0x38
  403ccc:	mov	x8, xzr
  403cd0:	str	xzr, [sp, #56]
  403cd4:	str	x0, [sp, #24]
  403cd8:	str	x8, [sp, #16]
  403cdc:	bl	4019f8 <rand@plt>
  403ce0:	mov	w9, #0x64                  	// #100
  403ce4:	sdiv	w10, w0, w9
  403ce8:	mul	w9, w10, w9
  403cec:	subs	w9, w0, w9
  403cf0:	mov	w10, #0x3e8                 	// #1000
  403cf4:	mul	w9, w9, w10
  403cf8:	mul	w9, w9, w10
  403cfc:	mov	w10, #0xc200                	// #49664
  403d00:	movk	w10, #0xbeb, lsl #16
  403d04:	add	w9, w10, w9
  403d08:	mov	w1, w9
  403d0c:	sxtw	x8, w1
  403d10:	str	x8, [sp, #64]
  403d14:	ldr	x0, [sp, #24]
  403d18:	ldr	x8, [sp, #16]
  403d1c:	mov	x1, x8
  403d20:	bl	401a08 <nanosleep@plt>
  403d24:	ldr	w8, [sp, #88]
  403d28:	subs	w8, w8, #0x1
  403d2c:	str	w8, [sp, #88]
  403d30:	b	403c80 <scsi_get_serial+0x74>
  403d34:	ldr	w8, [sp, #92]
  403d38:	cmp	w8, #0x0
  403d3c:	cset	w8, ge  // ge = tcont
  403d40:	tbnz	w8, #0, 403d50 <scsi_get_serial+0x144>
  403d44:	mov	w8, #0x1                   	// #1
  403d48:	stur	w8, [x29, #-4]
  403d4c:	b	404094 <scsi_get_serial+0x488>
  403d50:	ldur	w8, [x29, #-28]
  403d54:	cmp	w8, #0x80
  403d58:	b.ne	403d94 <scsi_get_serial+0x188>  // b.any
  403d5c:	ldur	x0, [x29, #-16]
  403d60:	ldr	w1, [sp, #92]
  403d64:	ldur	x8, [x29, #-16]
  403d68:	add	x2, x8, #0x80
  403d6c:	ldur	x8, [x29, #-16]
  403d70:	add	x3, x8, #0x180
  403d74:	ldur	w4, [x29, #-32]
  403d78:	bl	4040a8 <do_scsi_page80_inquiry>
  403d7c:	cbz	w0, 403d8c <scsi_get_serial+0x180>
  403d80:	mov	w8, #0x1                   	// #1
  403d84:	str	w8, [sp, #80]
  403d88:	b	404084 <scsi_get_serial+0x478>
  403d8c:	str	wzr, [sp, #80]
  403d90:	b	404084 <scsi_get_serial+0x478>
  403d94:	ldur	w8, [x29, #-28]
  403d98:	cmp	w8, #0x83
  403d9c:	b.ne	403e00 <scsi_get_serial+0x1f4>  // b.any
  403da0:	ldur	x0, [x29, #-16]
  403da4:	ldr	w1, [sp, #92]
  403da8:	ldur	x8, [x29, #-16]
  403dac:	add	x2, x8, #0x80
  403db0:	ldur	x8, [x29, #-16]
  403db4:	add	x3, x8, #0x180
  403db8:	ldur	w4, [x29, #-32]
  403dbc:	ldur	x8, [x29, #-16]
  403dc0:	add	x5, x8, #0x284
  403dc4:	ldur	x8, [x29, #-16]
  403dc8:	add	x6, x8, #0x384
  403dcc:	ldur	x8, [x29, #-16]
  403dd0:	add	x7, x8, #0x395
  403dd4:	ldur	x8, [x29, #-16]
  403dd8:	add	x8, x8, #0x3a6
  403ddc:	mov	x9, sp
  403de0:	str	x8, [x9]
  403de4:	bl	404394 <do_scsi_page83_inquiry>
  403de8:	cbz	w0, 403df8 <scsi_get_serial+0x1ec>
  403dec:	mov	w8, #0x1                   	// #1
  403df0:	str	w8, [sp, #80]
  403df4:	b	404084 <scsi_get_serial+0x478>
  403df8:	str	wzr, [sp, #80]
  403dfc:	b	404084 <scsi_get_serial+0x478>
  403e00:	ldur	w8, [x29, #-28]
  403e04:	mov	w9, #0xffffff7d            	// #-131
  403e08:	cmp	w8, w9
  403e0c:	b.ne	403ebc <scsi_get_serial+0x2b0>  // b.any
  403e10:	ldur	x0, [x29, #-16]
  403e14:	ldr	w1, [sp, #92]
  403e18:	ldur	x8, [x29, #-16]
  403e1c:	add	x2, x8, #0x80
  403e20:	ldur	x8, [x29, #-16]
  403e24:	add	x3, x8, #0x180
  403e28:	ldur	w4, [x29, #-32]
  403e2c:	bl	404648 <do_scsi_page83_prespc3_inquiry>
  403e30:	str	w0, [sp, #80]
  403e34:	ldr	w9, [sp, #80]
  403e38:	cbz	w9, 403eb4 <scsi_get_serial+0x2a8>
  403e3c:	ldr	w8, [sp, #80]
  403e40:	cmp	w8, #0x2
  403e44:	b.ne	403ea8 <scsi_get_serial+0x29c>  // b.any
  403e48:	ldur	x0, [x29, #-16]
  403e4c:	ldr	w1, [sp, #92]
  403e50:	ldur	x8, [x29, #-16]
  403e54:	add	x2, x8, #0x80
  403e58:	ldur	x8, [x29, #-16]
  403e5c:	add	x3, x8, #0x180
  403e60:	ldur	w4, [x29, #-32]
  403e64:	ldur	x8, [x29, #-16]
  403e68:	add	x5, x8, #0x284
  403e6c:	ldur	x8, [x29, #-16]
  403e70:	add	x6, x8, #0x384
  403e74:	ldur	x8, [x29, #-16]
  403e78:	add	x7, x8, #0x395
  403e7c:	ldur	x8, [x29, #-16]
  403e80:	add	x8, x8, #0x3a6
  403e84:	mov	x9, sp
  403e88:	str	x8, [x9]
  403e8c:	bl	404394 <do_scsi_page83_inquiry>
  403e90:	cbz	w0, 403ea0 <scsi_get_serial+0x294>
  403e94:	mov	w8, #0x1                   	// #1
  403e98:	str	w8, [sp, #80]
  403e9c:	b	404084 <scsi_get_serial+0x478>
  403ea0:	str	wzr, [sp, #80]
  403ea4:	b	404084 <scsi_get_serial+0x478>
  403ea8:	mov	w8, #0x1                   	// #1
  403eac:	str	w8, [sp, #80]
  403eb0:	b	404084 <scsi_get_serial+0x478>
  403eb4:	str	wzr, [sp, #80]
  403eb8:	b	404084 <scsi_get_serial+0x478>
  403ebc:	ldur	w8, [x29, #-28]
  403ec0:	cbz	w8, 403f58 <scsi_get_serial+0x34c>
  403ec4:	mov	w8, #0x7                   	// #7
  403ec8:	str	w8, [sp, #52]
  403ecc:	str	wzr, [sp, #48]
  403ed0:	mov	w8, #0x1                   	// #1
  403ed4:	str	w8, [sp, #44]
  403ed8:	ldr	w0, [sp, #44]
  403edc:	bl	4017c8 <log_get_max_level_realm@plt>
  403ee0:	ldr	w8, [sp, #52]
  403ee4:	and	w8, w8, #0x7
  403ee8:	cmp	w0, w8
  403eec:	b.lt	403f30 <scsi_get_serial+0x324>  // b.tstop
  403ef0:	ldr	w8, [sp, #44]
  403ef4:	ldr	w9, [sp, #52]
  403ef8:	orr	w0, w9, w8, lsl #10
  403efc:	ldr	w1, [sp, #48]
  403f00:	ldur	x10, [x29, #-16]
  403f04:	add	x6, x10, #0x40
  403f08:	ldur	w7, [x29, #-28]
  403f0c:	ldr	x2, [sp, #32]
  403f10:	mov	w3, #0x350                 	// #848
  403f14:	adrp	x4, 407000 <options+0x178>
  403f18:	add	x4, x4, #0x6af
  403f1c:	adrp	x5, 407000 <options+0x178>
  403f20:	add	x5, x5, #0x6bf
  403f24:	bl	4017d8 <log_internal_realm@plt>
  403f28:	str	w0, [sp, #12]
  403f2c:	b	403f44 <scsi_get_serial+0x338>
  403f30:	ldr	w0, [sp, #48]
  403f34:	bl	4017e8 <abs@plt>
  403f38:	mov	w8, wzr
  403f3c:	subs	w8, w8, w0, uxtb
  403f40:	str	w8, [sp, #12]
  403f44:	ldr	w8, [sp, #12]
  403f48:	str	w8, [sp, #40]
  403f4c:	mov	w8, #0x1                   	// #1
  403f50:	str	w8, [sp, #80]
  403f54:	b	404084 <scsi_get_serial+0x478>
  403f58:	ldur	x0, [x29, #-16]
  403f5c:	ldr	w1, [sp, #92]
  403f60:	add	x2, sp, #0x62
  403f64:	mov	w3, #0xfe                  	// #254
  403f68:	bl	40487c <do_scsi_page0_inquiry>
  403f6c:	cbz	w0, 403f7c <scsi_get_serial+0x370>
  403f70:	mov	w8, #0x1                   	// #1
  403f74:	str	w8, [sp, #80]
  403f78:	b	404084 <scsi_get_serial+0x478>
  403f7c:	mov	w8, #0x4                   	// #4
  403f80:	str	w8, [sp, #84]
  403f84:	ldr	w8, [sp, #84]
  403f88:	ldrb	w9, [sp, #101]
  403f8c:	add	w9, w9, #0x3
  403f90:	cmp	w8, w9
  403f94:	b.gt	404010 <scsi_get_serial+0x404>
  403f98:	ldrsw	x8, [sp, #84]
  403f9c:	add	x9, sp, #0x62
  403fa0:	ldrb	w10, [x9, x8]
  403fa4:	cmp	w10, #0x83
  403fa8:	b.ne	404000 <scsi_get_serial+0x3f4>  // b.any
  403fac:	ldur	x0, [x29, #-16]
  403fb0:	ldr	w1, [sp, #92]
  403fb4:	ldur	x8, [x29, #-16]
  403fb8:	add	x2, x8, #0x80
  403fbc:	ldur	x8, [x29, #-16]
  403fc0:	add	x3, x8, #0x180
  403fc4:	ldur	w4, [x29, #-32]
  403fc8:	ldur	x8, [x29, #-16]
  403fcc:	add	x5, x8, #0x284
  403fd0:	ldur	x8, [x29, #-16]
  403fd4:	add	x6, x8, #0x384
  403fd8:	ldur	x8, [x29, #-16]
  403fdc:	add	x7, x8, #0x395
  403fe0:	ldur	x8, [x29, #-16]
  403fe4:	add	x8, x8, #0x3a6
  403fe8:	mov	x9, sp
  403fec:	str	x8, [x9]
  403ff0:	bl	404394 <do_scsi_page83_inquiry>
  403ff4:	cbnz	w0, 404000 <scsi_get_serial+0x3f4>
  403ff8:	str	wzr, [sp, #80]
  403ffc:	b	404084 <scsi_get_serial+0x478>
  404000:	ldr	w8, [sp, #84]
  404004:	add	w8, w8, #0x1
  404008:	str	w8, [sp, #84]
  40400c:	b	403f84 <scsi_get_serial+0x378>
  404010:	mov	w8, #0x4                   	// #4
  404014:	str	w8, [sp, #84]
  404018:	ldr	w8, [sp, #84]
  40401c:	ldrb	w9, [sp, #101]
  404020:	add	w9, w9, #0x3
  404024:	cmp	w8, w9
  404028:	b.gt	40407c <scsi_get_serial+0x470>
  40402c:	ldrsw	x8, [sp, #84]
  404030:	add	x9, sp, #0x62
  404034:	ldrb	w10, [x9, x8]
  404038:	cmp	w10, #0x80
  40403c:	b.ne	40406c <scsi_get_serial+0x460>  // b.any
  404040:	ldur	x0, [x29, #-16]
  404044:	ldr	w1, [sp, #92]
  404048:	ldur	x8, [x29, #-16]
  40404c:	add	x2, x8, #0x80
  404050:	ldur	x8, [x29, #-16]
  404054:	add	x3, x8, #0x180
  404058:	ldur	w4, [x29, #-32]
  40405c:	bl	4040a8 <do_scsi_page80_inquiry>
  404060:	cbnz	w0, 40406c <scsi_get_serial+0x460>
  404064:	str	wzr, [sp, #80]
  404068:	b	404084 <scsi_get_serial+0x478>
  40406c:	ldr	w8, [sp, #84]
  404070:	add	w8, w8, #0x1
  404074:	str	w8, [sp, #84]
  404078:	b	404018 <scsi_get_serial+0x40c>
  40407c:	mov	w8, #0x1                   	// #1
  404080:	str	w8, [sp, #80]
  404084:	ldr	w0, [sp, #92]
  404088:	bl	4019c8 <close@plt>
  40408c:	ldr	w8, [sp, #80]
  404090:	stur	w8, [x29, #-4]
  404094:	ldur	w0, [x29, #-4]
  404098:	ldr	x28, [sp, #400]
  40409c:	ldp	x29, x30, [sp, #384]
  4040a0:	add	sp, sp, #0x1a0
  4040a4:	ret

00000000004040a8 <do_scsi_page80_inquiry>:
  4040a8:	sub	sp, sp, #0x1a0
  4040ac:	stp	x29, x30, [sp, #384]
  4040b0:	str	x28, [sp, #400]
  4040b4:	add	x29, sp, #0x180
  4040b8:	mov	x8, #0xfe                  	// #254
  4040bc:	adrp	x9, 407000 <options+0x178>
  4040c0:	add	x9, x9, #0x63b
  4040c4:	add	x9, x9, #0x3
  4040c8:	stur	x0, [x29, #-16]
  4040cc:	stur	w1, [x29, #-20]
  4040d0:	stur	x2, [x29, #-32]
  4040d4:	stur	x3, [x29, #-40]
  4040d8:	stur	w4, [x29, #-44]
  4040dc:	str	x8, [sp, #56]
  4040e0:	ldr	x8, [sp, #56]
  4040e4:	cmp	x8, #0x0
  4040e8:	cset	w10, ls  // ls = plast
  4040ec:	str	x9, [sp, #16]
  4040f0:	tbnz	w10, #0, 404108 <do_scsi_page80_inquiry+0x60>
  4040f4:	ldr	x2, [sp, #56]
  4040f8:	add	x0, sp, #0x46
  4040fc:	mov	w8, wzr
  404100:	mov	w1, w8
  404104:	bl	401948 <memset@plt>
  404108:	ldur	x0, [x29, #-16]
  40410c:	ldur	w1, [x29, #-20]
  404110:	mov	w2, #0x1                   	// #1
  404114:	mov	w3, #0xffffff80            	// #-128
  404118:	add	x4, sp, #0x46
  40411c:	mov	w5, #0xfe                  	// #254
  404120:	bl	4036d0 <scsi_inquiry>
  404124:	stur	w0, [x29, #-48]
  404128:	ldur	w8, [x29, #-48]
  40412c:	cmp	w8, #0x0
  404130:	cset	w8, ge  // ge = tcont
  404134:	tbnz	w8, #0, 404144 <do_scsi_page80_inquiry+0x9c>
  404138:	ldur	w8, [x29, #-48]
  40413c:	stur	w8, [x29, #-4]
  404140:	b	404380 <do_scsi_page80_inquiry+0x2d8>
  404144:	ldrb	w8, [sp, #71]
  404148:	cmp	w8, #0x80
  40414c:	b.eq	4041e0 <do_scsi_page80_inquiry+0x138>  // b.none
  404150:	mov	w8, #0x7                   	// #7
  404154:	str	w8, [sp, #52]
  404158:	str	wzr, [sp, #48]
  40415c:	mov	w8, #0x1                   	// #1
  404160:	str	w8, [sp, #44]
  404164:	ldr	w0, [sp, #44]
  404168:	bl	4017c8 <log_get_max_level_realm@plt>
  40416c:	ldr	w8, [sp, #52]
  404170:	and	w8, w8, #0x7
  404174:	cmp	w0, w8
  404178:	b.lt	4041b8 <do_scsi_page80_inquiry+0x110>  // b.tstop
  40417c:	ldr	w8, [sp, #44]
  404180:	ldr	w9, [sp, #52]
  404184:	orr	w0, w9, w8, lsl #10
  404188:	ldr	w1, [sp, #48]
  40418c:	ldur	x10, [x29, #-16]
  404190:	add	x6, x10, #0x40
  404194:	ldr	x2, [sp, #16]
  404198:	mov	w3, #0x2c9                 	// #713
  40419c:	adrp	x4, 407000 <options+0x178>
  4041a0:	add	x4, x4, #0x8de
  4041a4:	adrp	x5, 407000 <options+0x178>
  4041a8:	add	x5, x5, #0x8f5
  4041ac:	bl	4017d8 <log_internal_realm@plt>
  4041b0:	str	w0, [sp, #12]
  4041b4:	b	4041cc <do_scsi_page80_inquiry+0x124>
  4041b8:	ldr	w0, [sp, #48]
  4041bc:	bl	4017e8 <abs@plt>
  4041c0:	mov	w8, wzr
  4041c4:	subs	w8, w8, w0, uxtb
  4041c8:	str	w8, [sp, #12]
  4041cc:	ldr	w8, [sp, #12]
  4041d0:	str	w8, [sp, #40]
  4041d4:	mov	w8, #0x1                   	// #1
  4041d8:	stur	w8, [x29, #-4]
  4041dc:	b	404380 <do_scsi_page80_inquiry+0x2d8>
  4041e0:	ldrb	w8, [sp, #73]
  4041e4:	add	w8, w8, #0x19
  4041e8:	stur	w8, [x29, #-60]
  4041ec:	ldur	w8, [x29, #-44]
  4041f0:	ldur	w9, [x29, #-60]
  4041f4:	cmp	w8, w9
  4041f8:	b.ge	40429c <do_scsi_page80_inquiry+0x1f4>  // b.tcont
  4041fc:	mov	w8, #0x7                   	// #7
  404200:	str	w8, [sp, #36]
  404204:	str	wzr, [sp, #32]
  404208:	mov	w8, #0x1                   	// #1
  40420c:	str	w8, [sp, #28]
  404210:	ldr	w0, [sp, #28]
  404214:	bl	4017c8 <log_get_max_level_realm@plt>
  404218:	ldr	w8, [sp, #36]
  40421c:	and	w8, w8, #0x7
  404220:	cmp	w0, w8
  404224:	b.lt	404274 <do_scsi_page80_inquiry+0x1cc>  // b.tstop
  404228:	ldr	w8, [sp, #28]
  40422c:	ldr	w9, [sp, #36]
  404230:	orr	w0, w9, w8, lsl #10
  404234:	ldr	w1, [sp, #32]
  404238:	ldur	x10, [x29, #-16]
  40423c:	add	x6, x10, #0x40
  404240:	ldur	w7, [x29, #-44]
  404244:	ldur	w8, [x29, #-60]
  404248:	ldr	x2, [sp, #16]
  40424c:	mov	w3, #0x2d0                 	// #720
  404250:	adrp	x4, 407000 <options+0x178>
  404254:	add	x4, x4, #0x8de
  404258:	adrp	x5, 407000 <options+0x178>
  40425c:	add	x5, x5, #0x90b
  404260:	mov	x10, sp
  404264:	str	w8, [x10]
  404268:	bl	4017d8 <log_internal_realm@plt>
  40426c:	str	w0, [sp, #8]
  404270:	b	404288 <do_scsi_page80_inquiry+0x1e0>
  404274:	ldr	w0, [sp, #32]
  404278:	bl	4017e8 <abs@plt>
  40427c:	mov	w8, wzr
  404280:	subs	w8, w8, w0, uxtb
  404284:	str	w8, [sp, #8]
  404288:	ldr	w8, [sp, #8]
  40428c:	str	w8, [sp, #24]
  404290:	mov	w8, #0x1                   	// #1
  404294:	stur	w8, [x29, #-4]
  404298:	b	404380 <do_scsi_page80_inquiry+0x2d8>
  40429c:	ldrb	w8, [sp, #73]
  4042a0:	stur	w8, [x29, #-60]
  4042a4:	ldur	x9, [x29, #-32]
  4042a8:	cbz	x9, 40434c <do_scsi_page80_inquiry+0x2a4>
  4042ac:	ldur	x8, [x29, #-32]
  4042b0:	mov	w9, #0x53                  	// #83
  4042b4:	strb	w9, [x8]
  4042b8:	ldur	x0, [x29, #-16]
  4042bc:	ldur	x8, [x29, #-32]
  4042c0:	add	x1, x8, #0x1
  4042c4:	bl	405958 <append_vendor_model>
  4042c8:	stur	w0, [x29, #-52]
  4042cc:	ldur	w9, [x29, #-52]
  4042d0:	cmp	w9, #0x0
  4042d4:	cset	w9, ge  // ge = tcont
  4042d8:	tbnz	w9, #0, 4042e8 <do_scsi_page80_inquiry+0x240>
  4042dc:	mov	w8, #0x1                   	// #1
  4042e0:	stur	w8, [x29, #-4]
  4042e4:	b	404380 <do_scsi_page80_inquiry+0x2d8>
  4042e8:	ldur	w8, [x29, #-52]
  4042ec:	add	w8, w8, #0x1
  4042f0:	stur	w8, [x29, #-52]
  4042f4:	mov	w8, #0x4                   	// #4
  4042f8:	stur	w8, [x29, #-56]
  4042fc:	ldur	w8, [x29, #-56]
  404300:	ldur	w9, [x29, #-60]
  404304:	add	w9, w9, #0x4
  404308:	cmp	w8, w9
  40430c:	b.ge	40434c <do_scsi_page80_inquiry+0x2a4>  // b.tcont
  404310:	ldursw	x8, [x29, #-56]
  404314:	add	x9, sp, #0x46
  404318:	add	x8, x9, x8
  40431c:	ldrb	w10, [x8]
  404320:	ldur	x8, [x29, #-32]
  404324:	ldursw	x9, [x29, #-52]
  404328:	add	x8, x8, x9
  40432c:	strb	w10, [x8]
  404330:	ldur	w8, [x29, #-56]
  404334:	add	w8, w8, #0x1
  404338:	stur	w8, [x29, #-56]
  40433c:	ldur	w8, [x29, #-52]
  404340:	add	w8, w8, #0x1
  404344:	stur	w8, [x29, #-52]
  404348:	b	4042fc <do_scsi_page80_inquiry+0x254>
  40434c:	ldur	x8, [x29, #-40]
  404350:	cbz	x8, 40437c <do_scsi_page80_inquiry+0x2d4>
  404354:	ldur	x0, [x29, #-40]
  404358:	add	x8, sp, #0x46
  40435c:	add	x1, x8, #0x4
  404360:	ldursw	x2, [x29, #-60]
  404364:	bl	401a18 <memcpy@plt>
  404368:	ldur	x8, [x29, #-40]
  40436c:	ldursw	x9, [x29, #-60]
  404370:	add	x8, x8, x9
  404374:	mov	w10, #0x0                   	// #0
  404378:	strb	w10, [x8]
  40437c:	stur	wzr, [x29, #-4]
  404380:	ldur	w0, [x29, #-4]
  404384:	ldr	x28, [sp, #400]
  404388:	ldp	x29, x30, [sp, #384]
  40438c:	add	sp, sp, #0x1a0
  404390:	ret

0000000000404394 <do_scsi_page83_inquiry>:
  404394:	sub	sp, sp, #0x1c0
  404398:	stp	x29, x30, [sp, #416]
  40439c:	str	x28, [sp, #432]
  4043a0:	add	x29, sp, #0x1a0
  4043a4:	ldr	x8, [x29, #32]
  4043a8:	mov	x9, xzr
  4043ac:	mov	w10, #0x100                 	// #256
  4043b0:	mov	x11, #0xfe                  	// #254
  4043b4:	adrp	x12, 407000 <options+0x178>
  4043b8:	add	x12, x12, #0x63b
  4043bc:	add	x12, x12, #0x3
  4043c0:	stur	x0, [x29, #-16]
  4043c4:	stur	w1, [x29, #-20]
  4043c8:	stur	x2, [x29, #-32]
  4043cc:	stur	x3, [x29, #-40]
  4043d0:	stur	w4, [x29, #-44]
  4043d4:	stur	x5, [x29, #-56]
  4043d8:	stur	x6, [x29, #-64]
  4043dc:	stur	x7, [x29, #-72]
  4043e0:	stur	x8, [x29, #-80]
  4043e4:	ldur	x0, [x29, #-16]
  4043e8:	ldur	w1, [x29, #-20]
  4043ec:	ldur	x3, [x29, #-56]
  4043f0:	mov	x2, x9
  4043f4:	mov	w4, w10
  4043f8:	str	x11, [sp, #32]
  4043fc:	str	x12, [sp, #24]
  404400:	bl	4040a8 <do_scsi_page80_inquiry>
  404404:	ldr	x8, [sp, #32]
  404408:	str	x8, [sp, #56]
  40440c:	ldr	x9, [sp, #56]
  404410:	cmp	x9, #0x0
  404414:	cset	w10, ls  // ls = plast
  404418:	tbnz	w10, #0, 404430 <do_scsi_page83_inquiry+0x9c>
  40441c:	ldr	x2, [sp, #56]
  404420:	add	x0, sp, #0x46
  404424:	mov	w8, wzr
  404428:	mov	w1, w8
  40442c:	bl	401948 <memset@plt>
  404430:	ldur	x0, [x29, #-16]
  404434:	ldur	w1, [x29, #-20]
  404438:	mov	w2, #0x1                   	// #1
  40443c:	mov	w3, #0xffffff83            	// #-125
  404440:	add	x4, sp, #0x46
  404444:	mov	w5, #0xfe                  	// #254
  404448:	bl	4036d0 <scsi_inquiry>
  40444c:	stur	w0, [x29, #-84]
  404450:	ldur	w8, [x29, #-84]
  404454:	cmp	w8, #0x0
  404458:	cset	w8, ge  // ge = tcont
  40445c:	tbnz	w8, #0, 40446c <do_scsi_page83_inquiry+0xd8>
  404460:	mov	w8, #0x1                   	// #1
  404464:	stur	w8, [x29, #-4]
  404468:	b	404634 <do_scsi_page83_inquiry+0x2a0>
  40446c:	ldrb	w8, [sp, #71]
  404470:	cmp	w8, #0x83
  404474:	b.eq	404508 <do_scsi_page83_inquiry+0x174>  // b.none
  404478:	mov	w8, #0x7                   	// #7
  40447c:	str	w8, [sp, #52]
  404480:	str	wzr, [sp, #48]
  404484:	mov	w8, #0x1                   	// #1
  404488:	str	w8, [sp, #44]
  40448c:	ldr	w0, [sp, #44]
  404490:	bl	4017c8 <log_get_max_level_realm@plt>
  404494:	ldr	w8, [sp, #52]
  404498:	and	w8, w8, #0x7
  40449c:	cmp	w0, w8
  4044a0:	b.lt	4044e0 <do_scsi_page83_inquiry+0x14c>  // b.tstop
  4044a4:	ldr	w8, [sp, #44]
  4044a8:	ldr	w9, [sp, #52]
  4044ac:	orr	w0, w9, w8, lsl #10
  4044b0:	ldr	w1, [sp, #48]
  4044b4:	ldur	x10, [x29, #-16]
  4044b8:	add	x6, x10, #0x40
  4044bc:	ldr	x2, [sp, #24]
  4044c0:	mov	w3, #0x239                 	// #569
  4044c4:	adrp	x4, 407000 <options+0x178>
  4044c8:	add	x4, x4, #0x9c2
  4044cc:	adrp	x5, 407000 <options+0x178>
  4044d0:	add	x5, x5, #0x9d9
  4044d4:	bl	4017d8 <log_internal_realm@plt>
  4044d8:	str	w0, [sp, #20]
  4044dc:	b	4044f4 <do_scsi_page83_inquiry+0x160>
  4044e0:	ldr	w0, [sp, #48]
  4044e4:	bl	4017e8 <abs@plt>
  4044e8:	mov	w8, wzr
  4044ec:	subs	w8, w8, w0, uxtb
  4044f0:	str	w8, [sp, #20]
  4044f4:	ldr	w8, [sp, #20]
  4044f8:	str	w8, [sp, #40]
  4044fc:	mov	w8, #0x1                   	// #1
  404500:	stur	w8, [x29, #-4]
  404504:	b	404634 <do_scsi_page83_inquiry+0x2a0>
  404508:	ldrb	w8, [sp, #76]
  40450c:	cbz	w8, 404538 <do_scsi_page83_inquiry+0x1a4>
  404510:	ldur	x0, [x29, #-16]
  404514:	ldur	x3, [x29, #-32]
  404518:	ldur	x4, [x29, #-40]
  40451c:	ldur	w5, [x29, #-44]
  404520:	add	x1, sp, #0x46
  404524:	adrp	x2, 407000 <options+0x178>
  404528:	add	x2, x2, #0xc70
  40452c:	bl	405bb4 <check_fill_0x83_prespc3>
  404530:	stur	w0, [x29, #-4]
  404534:	b	404634 <do_scsi_page83_inquiry+0x2a0>
  404538:	stur	wzr, [x29, #-88]
  40453c:	ldur	w8, [x29, #-88]
  404540:	mov	w9, w8
  404544:	cmp	x9, #0xd
  404548:	b.cs	40462c <do_scsi_page83_inquiry+0x298>  // b.hs, b.nlast
  40454c:	mov	w8, #0x4                   	// #4
  404550:	stur	w8, [x29, #-92]
  404554:	ldur	w8, [x29, #-92]
  404558:	ldrb	w9, [sp, #72]
  40455c:	ldrb	w10, [sp, #73]
  404560:	add	w9, w10, w9, lsl #8
  404564:	add	w9, w9, #0x3
  404568:	cmp	w8, w9
  40456c:	b.hi	40461c <do_scsi_page83_inquiry+0x288>  // b.pmore
  404570:	ldur	x0, [x29, #-16]
  404574:	ldur	w8, [x29, #-92]
  404578:	mov	w9, w8
  40457c:	add	x10, sp, #0x46
  404580:	add	x1, x10, x9
  404584:	ldur	w8, [x29, #-88]
  404588:	mov	w9, w8
  40458c:	mov	x10, #0x3                   	// #3
  404590:	mul	x9, x10, x9
  404594:	adrp	x10, 407000 <options+0x178>
  404598:	add	x10, x10, #0xc70
  40459c:	add	x2, x10, x9
  4045a0:	ldur	x3, [x29, #-32]
  4045a4:	ldur	x4, [x29, #-40]
  4045a8:	ldur	w5, [x29, #-44]
  4045ac:	ldur	x6, [x29, #-64]
  4045b0:	ldur	x7, [x29, #-72]
  4045b4:	ldur	x9, [x29, #-80]
  4045b8:	mov	x10, sp
  4045bc:	str	x9, [x10]
  4045c0:	bl	405d28 <check_fill_0x83_id>
  4045c4:	stur	w0, [x29, #-84]
  4045c8:	ldur	w8, [x29, #-84]
  4045cc:	cbnz	w8, 4045dc <do_scsi_page83_inquiry+0x248>
  4045d0:	ldur	w8, [x29, #-84]
  4045d4:	stur	w8, [x29, #-4]
  4045d8:	b	404634 <do_scsi_page83_inquiry+0x2a0>
  4045dc:	ldur	w8, [x29, #-84]
  4045e0:	cmp	w8, #0x0
  4045e4:	cset	w8, ge  // ge = tcont
  4045e8:	tbnz	w8, #0, 4045f8 <do_scsi_page83_inquiry+0x264>
  4045ec:	ldur	w8, [x29, #-84]
  4045f0:	stur	w8, [x29, #-4]
  4045f4:	b	404634 <do_scsi_page83_inquiry+0x2a0>
  4045f8:	ldur	w8, [x29, #-92]
  4045fc:	add	w8, w8, #0x3
  404600:	add	x9, sp, #0x46
  404604:	ldrb	w8, [x9, w8, uxtw]
  404608:	add	w8, w8, #0x4
  40460c:	ldur	w10, [x29, #-92]
  404610:	add	w8, w10, w8
  404614:	stur	w8, [x29, #-92]
  404618:	b	404554 <do_scsi_page83_inquiry+0x1c0>
  40461c:	ldur	w8, [x29, #-88]
  404620:	add	w8, w8, #0x1
  404624:	stur	w8, [x29, #-88]
  404628:	b	40453c <do_scsi_page83_inquiry+0x1a8>
  40462c:	mov	w8, #0x1                   	// #1
  404630:	stur	w8, [x29, #-4]
  404634:	ldur	w0, [x29, #-4]
  404638:	ldr	x28, [sp, #432]
  40463c:	ldp	x29, x30, [sp, #416]
  404640:	add	sp, sp, #0x1c0
  404644:	ret

0000000000404648 <do_scsi_page83_prespc3_inquiry>:
  404648:	sub	sp, sp, #0x190
  40464c:	stp	x29, x30, [sp, #368]
  404650:	str	x28, [sp, #384]
  404654:	add	x29, sp, #0x170
  404658:	mov	x8, #0xfe                  	// #254
  40465c:	adrp	x9, 407000 <options+0x178>
  404660:	add	x9, x9, #0xc97
  404664:	adrp	x10, 407000 <options+0x178>
  404668:	add	x10, x10, #0x63b
  40466c:	add	x10, x10, #0x3
  404670:	stur	x0, [x29, #-16]
  404674:	stur	w1, [x29, #-20]
  404678:	stur	x2, [x29, #-32]
  40467c:	stur	x3, [x29, #-40]
  404680:	stur	w4, [x29, #-44]
  404684:	str	x8, [sp, #48]
  404688:	ldr	x8, [sp, #48]
  40468c:	cmp	x8, #0x0
  404690:	cset	w11, ls  // ls = plast
  404694:	str	x9, [sp, #24]
  404698:	str	x10, [sp, #16]
  40469c:	tbnz	w11, #0, 4046b4 <do_scsi_page83_prespc3_inquiry+0x6c>
  4046a0:	ldr	x2, [sp, #48]
  4046a4:	add	x0, sp, #0x3a
  4046a8:	mov	w8, wzr
  4046ac:	mov	w1, w8
  4046b0:	bl	401948 <memset@plt>
  4046b4:	ldur	x0, [x29, #-16]
  4046b8:	ldur	w1, [x29, #-20]
  4046bc:	mov	w2, #0x1                   	// #1
  4046c0:	mov	w3, #0xffffff83            	// #-125
  4046c4:	add	x4, sp, #0x3a
  4046c8:	mov	w5, #0xfe                  	// #254
  4046cc:	bl	4036d0 <scsi_inquiry>
  4046d0:	stur	w0, [x29, #-48]
  4046d4:	ldur	w8, [x29, #-48]
  4046d8:	cmp	w8, #0x0
  4046dc:	cset	w8, ge  // ge = tcont
  4046e0:	tbnz	w8, #0, 4046f0 <do_scsi_page83_prespc3_inquiry+0xa8>
  4046e4:	mov	w8, #0x1                   	// #1
  4046e8:	stur	w8, [x29, #-4]
  4046ec:	b	404868 <do_scsi_page83_prespc3_inquiry+0x220>
  4046f0:	ldrb	w8, [sp, #59]
  4046f4:	cmp	w8, #0x83
  4046f8:	b.eq	40478c <do_scsi_page83_prespc3_inquiry+0x144>  // b.none
  4046fc:	mov	w8, #0x7                   	// #7
  404700:	str	w8, [sp, #44]
  404704:	str	wzr, [sp, #40]
  404708:	mov	w8, #0x1                   	// #1
  40470c:	str	w8, [sp, #36]
  404710:	ldr	w0, [sp, #36]
  404714:	bl	4017c8 <log_get_max_level_realm@plt>
  404718:	ldr	w8, [sp, #44]
  40471c:	and	w8, w8, #0x7
  404720:	cmp	w0, w8
  404724:	b.lt	404764 <do_scsi_page83_prespc3_inquiry+0x11c>  // b.tstop
  404728:	ldr	w8, [sp, #36]
  40472c:	ldr	w9, [sp, #44]
  404730:	orr	w0, w9, w8, lsl #10
  404734:	ldr	w1, [sp, #40]
  404738:	ldur	x10, [x29, #-16]
  40473c:	add	x6, x10, #0x40
  404740:	ldr	x2, [sp, #16]
  404744:	mov	w3, #0x28b                 	// #651
  404748:	adrp	x4, 407000 <options+0x178>
  40474c:	add	x4, x4, #0xa02
  404750:	adrp	x5, 407000 <options+0x178>
  404754:	add	x5, x5, #0x9d9
  404758:	bl	4017d8 <log_internal_realm@plt>
  40475c:	str	w0, [sp, #12]
  404760:	b	404778 <do_scsi_page83_prespc3_inquiry+0x130>
  404764:	ldr	w0, [sp, #40]
  404768:	bl	4017e8 <abs@plt>
  40476c:	mov	w8, wzr
  404770:	subs	w8, w8, w0, uxtb
  404774:	str	w8, [sp, #12]
  404778:	ldr	w8, [sp, #12]
  40477c:	str	w8, [sp, #32]
  404780:	mov	w8, #0x1                   	// #1
  404784:	stur	w8, [x29, #-4]
  404788:	b	404868 <do_scsi_page83_prespc3_inquiry+0x220>
  40478c:	ldrb	w8, [sp, #64]
  404790:	cbnz	w8, 4047a0 <do_scsi_page83_prespc3_inquiry+0x158>
  404794:	mov	w8, #0x2                   	// #2
  404798:	stur	w8, [x29, #-4]
  40479c:	b	404868 <do_scsi_page83_prespc3_inquiry+0x220>
  4047a0:	ldr	x8, [sp, #24]
  4047a4:	ldrb	w9, [x8, #3]
  4047a8:	ldur	x10, [x29, #-32]
  4047ac:	strb	w9, [x10]
  4047b0:	mov	w9, #0x4                   	// #4
  4047b4:	stur	w9, [x29, #-52]
  4047b8:	ldur	x0, [x29, #-32]
  4047bc:	bl	401878 <strlen@plt>
  4047c0:	stur	w0, [x29, #-56]
  4047c4:	ldur	w8, [x29, #-52]
  4047c8:	ldrb	w9, [sp, #61]
  4047cc:	add	w9, w9, #0x4
  4047d0:	cmp	w8, w9
  4047d4:	b.ge	404864 <do_scsi_page83_prespc3_inquiry+0x21c>  // b.tcont
  4047d8:	ldursw	x8, [x29, #-52]
  4047dc:	add	x9, sp, #0x3a
  4047e0:	ldrb	w10, [x9, x8]
  4047e4:	and	w10, w10, #0xf0
  4047e8:	asr	w10, w10, #4
  4047ec:	mov	w0, w10
  4047f0:	sxtw	x8, w0
  4047f4:	ldr	x11, [sp, #24]
  4047f8:	add	x8, x11, x8
  4047fc:	ldrb	w10, [x8]
  404800:	ldur	x8, [x29, #-32]
  404804:	ldursw	x12, [x29, #-56]
  404808:	mov	w13, w12
  40480c:	add	w13, w13, #0x1
  404810:	stur	w13, [x29, #-56]
  404814:	add	x8, x8, x12
  404818:	strb	w10, [x8]
  40481c:	ldursw	x8, [x29, #-52]
  404820:	ldrb	w10, [x9, x8]
  404824:	and	w10, w10, #0xf
  404828:	mov	w0, w10
  40482c:	sxtw	x8, w0
  404830:	add	x8, x11, x8
  404834:	ldrb	w10, [x8]
  404838:	ldur	x8, [x29, #-32]
  40483c:	ldursw	x9, [x29, #-56]
  404840:	mov	w13, w9
  404844:	add	w13, w13, #0x1
  404848:	stur	w13, [x29, #-56]
  40484c:	add	x8, x8, x9
  404850:	strb	w10, [x8]
  404854:	ldur	w10, [x29, #-52]
  404858:	add	w10, w10, #0x1
  40485c:	stur	w10, [x29, #-52]
  404860:	b	4047c4 <do_scsi_page83_prespc3_inquiry+0x17c>
  404864:	stur	wzr, [x29, #-4]
  404868:	ldur	w0, [x29, #-4]
  40486c:	ldr	x28, [sp, #384]
  404870:	ldp	x29, x30, [sp, #368]
  404874:	add	sp, sp, #0x190
  404878:	ret

000000000040487c <do_scsi_page0_inquiry>:
  40487c:	sub	sp, sp, #0x90
  404880:	stp	x29, x30, [sp, #128]
  404884:	add	x29, sp, #0x80
  404888:	adrp	x8, 407000 <options+0x178>
  40488c:	add	x8, x8, #0x63b
  404890:	add	x8, x8, #0x3
  404894:	adrp	x9, 407000 <options+0x178>
  404898:	add	x9, x9, #0xa21
  40489c:	stur	x0, [x29, #-16]
  4048a0:	stur	w1, [x29, #-20]
  4048a4:	stur	x2, [x29, #-32]
  4048a8:	stur	w3, [x29, #-36]
  4048ac:	ldur	w10, [x29, #-36]
  4048b0:	mov	w11, w10
  4048b4:	stur	x11, [x29, #-48]
  4048b8:	ldur	x11, [x29, #-48]
  4048bc:	cmp	x11, #0x0
  4048c0:	cset	w10, ls  // ls = plast
  4048c4:	str	x8, [sp, #24]
  4048c8:	str	x9, [sp, #16]
  4048cc:	tbnz	w10, #0, 4048e4 <do_scsi_page0_inquiry+0x68>
  4048d0:	ldur	x0, [x29, #-32]
  4048d4:	ldur	x2, [x29, #-48]
  4048d8:	mov	w8, wzr
  4048dc:	mov	w1, w8
  4048e0:	bl	401948 <memset@plt>
  4048e4:	ldur	x0, [x29, #-16]
  4048e8:	ldur	w1, [x29, #-20]
  4048ec:	ldur	x4, [x29, #-32]
  4048f0:	ldur	w5, [x29, #-36]
  4048f4:	mov	w2, #0x1                   	// #1
  4048f8:	mov	w8, wzr
  4048fc:	mov	w3, w8
  404900:	bl	4036d0 <scsi_inquiry>
  404904:	stur	w0, [x29, #-40]
  404908:	ldur	w8, [x29, #-40]
  40490c:	cmp	w8, #0x0
  404910:	cset	w8, ge  // ge = tcont
  404914:	tbnz	w8, #0, 404924 <do_scsi_page0_inquiry+0xa8>
  404918:	mov	w8, #0x1                   	// #1
  40491c:	stur	w8, [x29, #-4]
  404920:	b	404b1c <do_scsi_page0_inquiry+0x2a0>
  404924:	ldur	x8, [x29, #-32]
  404928:	ldrb	w9, [x8, #1]
  40492c:	cbz	w9, 4049bc <do_scsi_page0_inquiry+0x140>
  404930:	mov	w8, #0x7                   	// #7
  404934:	stur	w8, [x29, #-52]
  404938:	stur	wzr, [x29, #-56]
  40493c:	mov	w8, #0x1                   	// #1
  404940:	stur	w8, [x29, #-60]
  404944:	ldur	w0, [x29, #-60]
  404948:	bl	4017c8 <log_get_max_level_realm@plt>
  40494c:	ldur	w8, [x29, #-52]
  404950:	and	w8, w8, #0x7
  404954:	cmp	w0, w8
  404958:	b.lt	404994 <do_scsi_page0_inquiry+0x118>  // b.tstop
  40495c:	ldur	w8, [x29, #-60]
  404960:	ldur	w9, [x29, #-52]
  404964:	orr	w0, w9, w8, lsl #10
  404968:	ldur	w1, [x29, #-56]
  40496c:	ldur	x10, [x29, #-16]
  404970:	add	x6, x10, #0x40
  404974:	ldr	x2, [sp, #24]
  404978:	mov	w3, #0x172                 	// #370
  40497c:	ldr	x4, [sp, #16]
  404980:	adrp	x5, 407000 <options+0x178>
  404984:	add	x5, x5, #0xa37
  404988:	bl	4017d8 <log_internal_realm@plt>
  40498c:	str	w0, [sp, #12]
  404990:	b	4049a8 <do_scsi_page0_inquiry+0x12c>
  404994:	ldur	w0, [x29, #-56]
  404998:	bl	4017e8 <abs@plt>
  40499c:	mov	w8, wzr
  4049a0:	subs	w8, w8, w0, uxtb
  4049a4:	str	w8, [sp, #12]
  4049a8:	ldr	w8, [sp, #12]
  4049ac:	str	w8, [sp, #64]
  4049b0:	mov	w8, #0x1                   	// #1
  4049b4:	stur	w8, [x29, #-4]
  4049b8:	b	404b1c <do_scsi_page0_inquiry+0x2a0>
  4049bc:	ldur	x8, [x29, #-32]
  4049c0:	ldrb	w9, [x8, #3]
  4049c4:	ldur	w10, [x29, #-36]
  4049c8:	cmp	w9, w10
  4049cc:	b.ls	404a64 <do_scsi_page0_inquiry+0x1e8>  // b.plast
  4049d0:	mov	w8, #0x7                   	// #7
  4049d4:	str	w8, [sp, #60]
  4049d8:	str	wzr, [sp, #56]
  4049dc:	mov	w8, #0x1                   	// #1
  4049e0:	str	w8, [sp, #52]
  4049e4:	ldr	w0, [sp, #52]
  4049e8:	bl	4017c8 <log_get_max_level_realm@plt>
  4049ec:	ldr	w8, [sp, #60]
  4049f0:	and	w8, w8, #0x7
  4049f4:	cmp	w0, w8
  4049f8:	b.lt	404a3c <do_scsi_page0_inquiry+0x1c0>  // b.tstop
  4049fc:	ldr	w8, [sp, #52]
  404a00:	ldr	w9, [sp, #60]
  404a04:	orr	w0, w9, w8, lsl #10
  404a08:	ldr	w1, [sp, #56]
  404a0c:	ldur	x10, [x29, #-16]
  404a10:	add	x6, x10, #0x40
  404a14:	ldur	x10, [x29, #-32]
  404a18:	ldrb	w7, [x10, #3]
  404a1c:	ldr	x2, [sp, #24]
  404a20:	mov	w3, #0x176                 	// #374
  404a24:	ldr	x4, [sp, #16]
  404a28:	adrp	x5, 407000 <options+0x178>
  404a2c:	add	x5, x5, #0xa51
  404a30:	bl	4017d8 <log_internal_realm@plt>
  404a34:	str	w0, [sp, #8]
  404a38:	b	404a50 <do_scsi_page0_inquiry+0x1d4>
  404a3c:	ldr	w0, [sp, #56]
  404a40:	bl	4017e8 <abs@plt>
  404a44:	mov	w8, wzr
  404a48:	subs	w8, w8, w0, uxtb
  404a4c:	str	w8, [sp, #8]
  404a50:	ldr	w8, [sp, #8]
  404a54:	str	w8, [sp, #48]
  404a58:	mov	w8, #0x1                   	// #1
  404a5c:	stur	w8, [x29, #-4]
  404a60:	b	404b1c <do_scsi_page0_inquiry+0x2a0>
  404a64:	ldur	x8, [x29, #-32]
  404a68:	ldrb	w9, [x8, #3]
  404a6c:	cmp	w9, #0x10
  404a70:	b.le	404b18 <do_scsi_page0_inquiry+0x29c>
  404a74:	ldur	x8, [x29, #-32]
  404a78:	add	x0, x8, #0x8
  404a7c:	ldur	x1, [x29, #-16]
  404a80:	mov	x2, #0x8                   	// #8
  404a84:	bl	401968 <strncmp@plt>
  404a88:	cbnz	w0, 404b18 <do_scsi_page0_inquiry+0x29c>
  404a8c:	mov	w8, #0x7                   	// #7
  404a90:	str	w8, [sp, #44]
  404a94:	str	wzr, [sp, #40]
  404a98:	mov	w8, #0x1                   	// #1
  404a9c:	str	w8, [sp, #36]
  404aa0:	ldr	w0, [sp, #36]
  404aa4:	bl	4017c8 <log_get_max_level_realm@plt>
  404aa8:	ldr	w8, [sp, #44]
  404aac:	and	w8, w8, #0x7
  404ab0:	cmp	w0, w8
  404ab4:	b.lt	404af0 <do_scsi_page0_inquiry+0x274>  // b.tstop
  404ab8:	ldr	w8, [sp, #36]
  404abc:	ldr	w9, [sp, #44]
  404ac0:	orr	w0, w9, w8, lsl #10
  404ac4:	ldr	w1, [sp, #40]
  404ac8:	ldur	x10, [x29, #-16]
  404acc:	add	x6, x10, #0x40
  404ad0:	ldr	x2, [sp, #24]
  404ad4:	mov	w3, #0x187                 	// #391
  404ad8:	ldr	x4, [sp, #16]
  404adc:	adrp	x5, 407000 <options+0x178>
  404ae0:	add	x5, x5, #0xa6f
  404ae4:	bl	4017d8 <log_internal_realm@plt>
  404ae8:	str	w0, [sp, #4]
  404aec:	b	404b04 <do_scsi_page0_inquiry+0x288>
  404af0:	ldr	w0, [sp, #40]
  404af4:	bl	4017e8 <abs@plt>
  404af8:	mov	w8, wzr
  404afc:	subs	w8, w8, w0, uxtb
  404b00:	str	w8, [sp, #4]
  404b04:	ldr	w8, [sp, #4]
  404b08:	str	w8, [sp, #32]
  404b0c:	mov	w8, #0x1                   	// #1
  404b10:	stur	w8, [x29, #-4]
  404b14:	b	404b1c <do_scsi_page0_inquiry+0x2a0>
  404b18:	stur	wzr, [x29, #-4]
  404b1c:	ldur	w0, [x29, #-4]
  404b20:	ldp	x29, x30, [sp, #128]
  404b24:	add	sp, sp, #0x90
  404b28:	ret

0000000000404b2c <sg_err_category4>:
  404b2c:	sub	sp, sp, #0x20
  404b30:	stp	x29, x30, [sp, #16]
  404b34:	add	x29, sp, #0x10
  404b38:	mov	w8, wzr
  404b3c:	str	x0, [sp, #8]
  404b40:	ldr	x9, [sp, #8]
  404b44:	ldr	w0, [x9, #116]
  404b48:	ldr	x9, [sp, #8]
  404b4c:	ldr	w2, [x9, #112]
  404b50:	ldr	x9, [sp, #8]
  404b54:	ldr	w3, [x9, #108]
  404b58:	ldr	x9, [sp, #8]
  404b5c:	ldr	x9, [x9, #48]
  404b60:	ldr	x10, [sp, #8]
  404b64:	ldr	w5, [x10, #132]
  404b68:	mov	w1, w8
  404b6c:	mov	x4, x9
  404b70:	bl	404f98 <sg_err_category_new>
  404b74:	ldp	x29, x30, [sp, #16]
  404b78:	add	sp, sp, #0x20
  404b7c:	ret

0000000000404b80 <sg_err_category3>:
  404b80:	sub	sp, sp, #0x20
  404b84:	stp	x29, x30, [sp, #16]
  404b88:	add	x29, sp, #0x10
  404b8c:	str	x0, [sp, #8]
  404b90:	ldr	x8, [sp, #8]
  404b94:	ldrb	w0, [x8, #64]
  404b98:	ldr	x8, [sp, #8]
  404b9c:	ldrb	w1, [x8, #66]
  404ba0:	ldr	x8, [sp, #8]
  404ba4:	ldrh	w2, [x8, #68]
  404ba8:	ldr	x8, [sp, #8]
  404bac:	ldrh	w3, [x8, #70]
  404bb0:	ldr	x8, [sp, #8]
  404bb4:	ldr	x4, [x8, #32]
  404bb8:	ldr	x8, [sp, #8]
  404bbc:	ldrb	w5, [x8, #67]
  404bc0:	bl	404f98 <sg_err_category_new>
  404bc4:	ldp	x29, x30, [sp, #16]
  404bc8:	add	sp, sp, #0x20
  404bcc:	ret

0000000000404bd0 <scsi_dump_v4>:
  404bd0:	sub	sp, sp, #0x70
  404bd4:	stp	x29, x30, [sp, #96]
  404bd8:	add	x29, sp, #0x60
  404bdc:	adrp	x8, 407000 <options+0x178>
  404be0:	add	x8, x8, #0x63b
  404be4:	add	x8, x8, #0x3
  404be8:	adrp	x9, 407000 <options+0x178>
  404bec:	add	x9, x9, #0x73f
  404bf0:	stur	x0, [x29, #-16]
  404bf4:	stur	x1, [x29, #-24]
  404bf8:	ldur	x10, [x29, #-24]
  404bfc:	ldr	w11, [x10, #116]
  404c00:	str	x8, [sp, #32]
  404c04:	str	x9, [sp, #24]
  404c08:	cbnz	w11, 404cb4 <scsi_dump_v4+0xe4>
  404c0c:	ldur	x8, [x29, #-24]
  404c10:	ldr	w9, [x8, #112]
  404c14:	cbnz	w9, 404cb4 <scsi_dump_v4+0xe4>
  404c18:	ldur	x8, [x29, #-24]
  404c1c:	ldr	w9, [x8, #108]
  404c20:	cbnz	w9, 404cb4 <scsi_dump_v4+0xe4>
  404c24:	mov	w8, #0x7                   	// #7
  404c28:	stur	w8, [x29, #-28]
  404c2c:	mov	w8, #0x16                  	// #22
  404c30:	movk	w8, #0x4000, lsl #16
  404c34:	stur	w8, [x29, #-32]
  404c38:	mov	w8, #0x1                   	// #1
  404c3c:	stur	w8, [x29, #-36]
  404c40:	ldur	w0, [x29, #-36]
  404c44:	bl	4017c8 <log_get_max_level_realm@plt>
  404c48:	ldur	w8, [x29, #-28]
  404c4c:	and	w8, w8, #0x7
  404c50:	cmp	w0, w8
  404c54:	b.lt	404c8c <scsi_dump_v4+0xbc>  // b.tstop
  404c58:	ldur	w8, [x29, #-36]
  404c5c:	ldur	w9, [x29, #-28]
  404c60:	orr	w0, w9, w8, lsl #10
  404c64:	ldur	w1, [x29, #-32]
  404c68:	ldr	x2, [sp, #32]
  404c6c:	mov	w3, #0x102                 	// #258
  404c70:	ldr	x4, [sp, #24]
  404c74:	adrp	x5, 407000 <options+0x178>
  404c78:	add	x5, x5, #0x74c
  404c7c:	ldr	x6, [sp, #24]
  404c80:	bl	4017d8 <log_internal_realm@plt>
  404c84:	str	w0, [sp, #20]
  404c88:	b	404ca0 <scsi_dump_v4+0xd0>
  404c8c:	ldur	w0, [x29, #-32]
  404c90:	bl	4017e8 <abs@plt>
  404c94:	mov	w8, wzr
  404c98:	subs	w8, w8, w0, uxtb
  404c9c:	str	w8, [sp, #20]
  404ca0:	ldr	w8, [sp, #20]
  404ca4:	stur	w8, [x29, #-40]
  404ca8:	ldur	w8, [x29, #-40]
  404cac:	stur	w8, [x29, #-4]
  404cb0:	b	404d98 <scsi_dump_v4+0x1c8>
  404cb4:	mov	w8, #0x7                   	// #7
  404cb8:	stur	w8, [x29, #-44]
  404cbc:	str	wzr, [sp, #48]
  404cc0:	mov	w8, #0x1                   	// #1
  404cc4:	str	w8, [sp, #44]
  404cc8:	ldr	w0, [sp, #44]
  404ccc:	bl	4017c8 <log_get_max_level_realm@plt>
  404cd0:	ldur	w8, [x29, #-44]
  404cd4:	and	w8, w8, #0x7
  404cd8:	cmp	w0, w8
  404cdc:	b.lt	404d40 <scsi_dump_v4+0x170>  // b.tstop
  404ce0:	ldr	w8, [sp, #44]
  404ce4:	ldur	w9, [x29, #-44]
  404ce8:	orr	w0, w9, w8, lsl #10
  404cec:	ldr	w1, [sp, #48]
  404cf0:	ldur	x10, [x29, #-16]
  404cf4:	add	x6, x10, #0x40
  404cf8:	ldur	x10, [x29, #-24]
  404cfc:	ldr	w7, [x10, #108]
  404d00:	ldur	x10, [x29, #-24]
  404d04:	ldr	w8, [x10, #112]
  404d08:	ldur	x10, [x29, #-24]
  404d0c:	ldr	w9, [x10, #116]
  404d10:	ldr	x2, [sp, #32]
  404d14:	mov	w3, #0x105                 	// #261
  404d18:	ldr	x4, [sp, #24]
  404d1c:	adrp	x5, 407000 <options+0x178>
  404d20:	add	x5, x5, #0x765
  404d24:	mov	x10, sp
  404d28:	str	w8, [x10]
  404d2c:	mov	x10, sp
  404d30:	str	w9, [x10, #8]
  404d34:	bl	4017d8 <log_internal_realm@plt>
  404d38:	str	w0, [sp, #16]
  404d3c:	b	404d54 <scsi_dump_v4+0x184>
  404d40:	ldr	w0, [sp, #48]
  404d44:	bl	4017e8 <abs@plt>
  404d48:	mov	w8, wzr
  404d4c:	subs	w8, w8, w0, uxtb
  404d50:	str	w8, [sp, #16]
  404d54:	ldr	w8, [sp, #16]
  404d58:	str	w8, [sp, #40]
  404d5c:	ldur	x9, [x29, #-24]
  404d60:	ldr	w8, [x9, #116]
  404d64:	cmp	w8, #0x2
  404d68:	b.ne	404d90 <scsi_dump_v4+0x1c0>  // b.any
  404d6c:	ldur	x0, [x29, #-16]
  404d70:	ldur	x8, [x29, #-24]
  404d74:	ldr	x8, [x8, #48]
  404d78:	ldur	x9, [x29, #-24]
  404d7c:	ldr	w2, [x9, #132]
  404d80:	mov	x1, x8
  404d84:	bl	4051d8 <scsi_dump_sense>
  404d88:	stur	w0, [x29, #-4]
  404d8c:	b	404d98 <scsi_dump_v4+0x1c8>
  404d90:	mov	w8, #0xffffffff            	// #-1
  404d94:	stur	w8, [x29, #-4]
  404d98:	ldur	w0, [x29, #-4]
  404d9c:	ldp	x29, x30, [sp, #96]
  404da0:	add	sp, sp, #0x70
  404da4:	ret

0000000000404da8 <scsi_dump>:
  404da8:	sub	sp, sp, #0x80
  404dac:	stp	x29, x30, [sp, #112]
  404db0:	add	x29, sp, #0x70
  404db4:	adrp	x8, 407000 <options+0x178>
  404db8:	add	x8, x8, #0x63b
  404dbc:	add	x8, x8, #0x3
  404dc0:	adrp	x9, 407000 <options+0x178>
  404dc4:	add	x9, x9, #0x8a8
  404dc8:	stur	x0, [x29, #-16]
  404dcc:	stur	x1, [x29, #-24]
  404dd0:	ldur	x10, [x29, #-24]
  404dd4:	ldrb	w11, [x10, #64]
  404dd8:	str	x8, [sp, #48]
  404ddc:	str	x9, [sp, #40]
  404de0:	cbnz	w11, 404e98 <scsi_dump+0xf0>
  404de4:	ldur	x8, [x29, #-24]
  404de8:	ldrh	w9, [x8, #68]
  404dec:	cbnz	w9, 404e98 <scsi_dump+0xf0>
  404df0:	ldur	x8, [x29, #-24]
  404df4:	ldrb	w9, [x8, #66]
  404df8:	cbnz	w9, 404e98 <scsi_dump+0xf0>
  404dfc:	ldur	x8, [x29, #-24]
  404e00:	ldrh	w9, [x8, #70]
  404e04:	cbnz	w9, 404e98 <scsi_dump+0xf0>
  404e08:	mov	w8, #0x7                   	// #7
  404e0c:	stur	w8, [x29, #-28]
  404e10:	mov	w8, #0x16                  	// #22
  404e14:	movk	w8, #0x4000, lsl #16
  404e18:	stur	w8, [x29, #-32]
  404e1c:	mov	w8, #0x1                   	// #1
  404e20:	stur	w8, [x29, #-36]
  404e24:	ldur	w0, [x29, #-36]
  404e28:	bl	4017c8 <log_get_max_level_realm@plt>
  404e2c:	ldur	w8, [x29, #-28]
  404e30:	and	w8, w8, #0x7
  404e34:	cmp	w0, w8
  404e38:	b.lt	404e70 <scsi_dump+0xc8>  // b.tstop
  404e3c:	ldur	w8, [x29, #-36]
  404e40:	ldur	w9, [x29, #-28]
  404e44:	orr	w0, w9, w8, lsl #10
  404e48:	ldur	w1, [x29, #-32]
  404e4c:	ldr	x2, [sp, #48]
  404e50:	mov	w3, #0xf0                  	// #240
  404e54:	ldr	x4, [sp, #40]
  404e58:	adrp	x5, 407000 <options+0x178>
  404e5c:	add	x5, x5, #0x74c
  404e60:	ldr	x6, [sp, #40]
  404e64:	bl	4017d8 <log_internal_realm@plt>
  404e68:	str	w0, [sp, #36]
  404e6c:	b	404e84 <scsi_dump+0xdc>
  404e70:	ldur	w0, [x29, #-32]
  404e74:	bl	4017e8 <abs@plt>
  404e78:	mov	w8, wzr
  404e7c:	subs	w8, w8, w0, uxtb
  404e80:	str	w8, [sp, #36]
  404e84:	ldr	w8, [sp, #36]
  404e88:	stur	w8, [x29, #-40]
  404e8c:	ldur	w8, [x29, #-40]
  404e90:	stur	w8, [x29, #-4]
  404e94:	b	404f88 <scsi_dump+0x1e0>
  404e98:	mov	w8, #0x7                   	// #7
  404e9c:	stur	w8, [x29, #-44]
  404ea0:	stur	wzr, [x29, #-48]
  404ea4:	mov	w8, #0x1                   	// #1
  404ea8:	stur	w8, [x29, #-52]
  404eac:	ldur	w0, [x29, #-52]
  404eb0:	bl	4017c8 <log_get_max_level_realm@plt>
  404eb4:	ldur	w8, [x29, #-44]
  404eb8:	and	w8, w8, #0x7
  404ebc:	cmp	w0, w8
  404ec0:	b.lt	404f34 <scsi_dump+0x18c>  // b.tstop
  404ec4:	ldur	w8, [x29, #-52]
  404ec8:	ldur	w9, [x29, #-44]
  404ecc:	orr	w0, w9, w8, lsl #10
  404ed0:	ldur	w1, [x29, #-48]
  404ed4:	ldur	x10, [x29, #-16]
  404ed8:	add	x6, x10, #0x40
  404edc:	ldur	x10, [x29, #-24]
  404ee0:	ldrh	w7, [x10, #70]
  404ee4:	ldur	x10, [x29, #-24]
  404ee8:	ldrh	w8, [x10, #68]
  404eec:	ldur	x10, [x29, #-24]
  404ef0:	ldrb	w9, [x10, #66]
  404ef4:	ldur	x10, [x29, #-24]
  404ef8:	ldrb	w11, [x10, #64]
  404efc:	ldr	x2, [sp, #48]
  404f00:	mov	w3, #0xf3                  	// #243
  404f04:	ldr	x4, [sp, #40]
  404f08:	adrp	x5, 407000 <options+0x178>
  404f0c:	add	x5, x5, #0x8b2
  404f10:	mov	x10, sp
  404f14:	str	w8, [x10]
  404f18:	mov	x10, sp
  404f1c:	str	w9, [x10, #8]
  404f20:	mov	x10, sp
  404f24:	str	w11, [x10, #16]
  404f28:	bl	4017d8 <log_internal_realm@plt>
  404f2c:	str	w0, [sp, #32]
  404f30:	b	404f48 <scsi_dump+0x1a0>
  404f34:	ldur	w0, [x29, #-48]
  404f38:	bl	4017e8 <abs@plt>
  404f3c:	mov	w8, wzr
  404f40:	subs	w8, w8, w0, uxtb
  404f44:	str	w8, [sp, #32]
  404f48:	ldr	w8, [sp, #32]
  404f4c:	str	w8, [sp, #56]
  404f50:	ldur	x9, [x29, #-24]
  404f54:	ldrb	w8, [x9, #64]
  404f58:	cmp	w8, #0x2
  404f5c:	b.ne	404f80 <scsi_dump+0x1d8>  // b.any
  404f60:	ldur	x0, [x29, #-16]
  404f64:	ldur	x8, [x29, #-24]
  404f68:	ldr	x1, [x8, #32]
  404f6c:	ldur	x8, [x29, #-24]
  404f70:	ldrb	w2, [x8, #67]
  404f74:	bl	4051d8 <scsi_dump_sense>
  404f78:	stur	w0, [x29, #-4]
  404f7c:	b	404f88 <scsi_dump+0x1e0>
  404f80:	mov	w8, #0xffffffff            	// #-1
  404f84:	stur	w8, [x29, #-4]
  404f88:	ldur	w0, [x29, #-4]
  404f8c:	ldp	x29, x30, [sp, #112]
  404f90:	add	sp, sp, #0x80
  404f94:	ret

0000000000404f98 <sg_err_category_new>:
  404f98:	sub	sp, sp, #0x40
  404f9c:	str	w0, [sp, #56]
  404fa0:	str	w1, [sp, #52]
  404fa4:	str	w2, [sp, #48]
  404fa8:	str	w3, [sp, #44]
  404fac:	str	x4, [sp, #32]
  404fb0:	str	w5, [sp, #28]
  404fb4:	ldr	w8, [sp, #56]
  404fb8:	and	w8, w8, #0x7e
  404fbc:	str	w8, [sp, #56]
  404fc0:	ldr	w8, [sp, #56]
  404fc4:	cbnz	w8, 404fe0 <sg_err_category_new+0x48>
  404fc8:	ldr	w8, [sp, #48]
  404fcc:	cbnz	w8, 404fe0 <sg_err_category_new+0x48>
  404fd0:	ldr	w8, [sp, #44]
  404fd4:	cbnz	w8, 404fe0 <sg_err_category_new+0x48>
  404fd8:	str	wzr, [sp, #60]
  404fdc:	b	4051cc <sg_err_category_new+0x234>
  404fe0:	mov	w8, #0x0                   	// #0
  404fe4:	strb	w8, [sp, #27]
  404fe8:	ldr	w8, [sp, #56]
  404fec:	cmp	w8, #0x2
  404ff0:	str	w8, [sp, #12]
  404ff4:	b.eq	405014 <sg_err_category_new+0x7c>  // b.none
  404ff8:	b	404ffc <sg_err_category_new+0x64>
  404ffc:	ldr	w8, [sp, #12]
  405000:	cmp	w8, #0x22
  405004:	cset	w9, eq  // eq = none
  405008:	eor	w9, w9, #0x1
  40500c:	tbnz	w9, #0, 405020 <sg_err_category_new+0x88>
  405010:	b	405014 <sg_err_category_new+0x7c>
  405014:	mov	w8, #0x1                   	// #1
  405018:	strb	w8, [sp, #27]
  40501c:	b	405020 <sg_err_category_new+0x88>
  405020:	ldrb	w8, [sp, #27]
  405024:	and	w8, w8, #0x1
  405028:	strb	w8, [sp, #26]
  40502c:	ldrb	w8, [sp, #26]
  405030:	tbnz	w8, #0, 405044 <sg_err_category_new+0xac>
  405034:	ldr	w8, [sp, #44]
  405038:	and	w8, w8, #0xf
  40503c:	cmp	w8, #0x8
  405040:	b.ne	405148 <sg_err_category_new+0x1b0>  // b.any
  405044:	ldr	x8, [sp, #32]
  405048:	cbz	x8, 40513c <sg_err_category_new+0x1a4>
  40504c:	ldr	w8, [sp, #28]
  405050:	cmp	w8, #0x2
  405054:	b.le	40513c <sg_err_category_new+0x1a4>
  405058:	ldr	x8, [sp, #32]
  40505c:	ldrb	w9, [x8]
  405060:	and	w9, w9, #0x2
  405064:	cbz	w9, 405088 <sg_err_category_new+0xf0>
  405068:	ldr	x8, [sp, #32]
  40506c:	ldrb	w9, [x8, #1]
  405070:	and	w9, w9, #0xf
  405074:	str	w9, [sp, #20]
  405078:	ldr	x8, [sp, #32]
  40507c:	ldrb	w9, [x8, #2]
  405080:	strb	w9, [sp, #19]
  405084:	b	4050c4 <sg_err_category_new+0x12c>
  405088:	ldr	x8, [sp, #32]
  40508c:	ldrb	w9, [x8, #2]
  405090:	and	w9, w9, #0xf
  405094:	str	w9, [sp, #20]
  405098:	ldr	w9, [sp, #28]
  40509c:	cmp	w9, #0xc
  4050a0:	b.le	4050b4 <sg_err_category_new+0x11c>
  4050a4:	ldr	x8, [sp, #32]
  4050a8:	ldrb	w9, [x8, #12]
  4050ac:	str	w9, [sp, #8]
  4050b0:	b	4050bc <sg_err_category_new+0x124>
  4050b4:	mov	w8, wzr
  4050b8:	str	w8, [sp, #8]
  4050bc:	ldr	w8, [sp, #8]
  4050c0:	strb	w8, [sp, #19]
  4050c4:	ldr	w8, [sp, #20]
  4050c8:	cmp	w8, #0x1
  4050cc:	b.ne	4050dc <sg_err_category_new+0x144>  // b.any
  4050d0:	mov	w8, #0x4                   	// #4
  4050d4:	str	w8, [sp, #60]
  4050d8:	b	4051cc <sg_err_category_new+0x234>
  4050dc:	ldr	w8, [sp, #20]
  4050e0:	cmp	w8, #0x6
  4050e4:	b.ne	405124 <sg_err_category_new+0x18c>  // b.any
  4050e8:	ldrb	w8, [sp, #19]
  4050ec:	mov	w9, #0x28                  	// #40
  4050f0:	cmp	w9, w8
  4050f4:	b.ne	405104 <sg_err_category_new+0x16c>  // b.any
  4050f8:	mov	w8, #0x1                   	// #1
  4050fc:	str	w8, [sp, #60]
  405100:	b	4051cc <sg_err_category_new+0x234>
  405104:	ldrb	w8, [sp, #19]
  405108:	mov	w9, #0x29                  	// #41
  40510c:	cmp	w9, w8
  405110:	b.ne	405120 <sg_err_category_new+0x188>  // b.any
  405114:	mov	w8, #0x2                   	// #2
  405118:	str	w8, [sp, #60]
  40511c:	b	4051cc <sg_err_category_new+0x234>
  405120:	b	40513c <sg_err_category_new+0x1a4>
  405124:	ldr	w8, [sp, #20]
  405128:	cmp	w8, #0x5
  40512c:	b.ne	40513c <sg_err_category_new+0x1a4>  // b.any
  405130:	mov	w8, #0x5                   	// #5
  405134:	str	w8, [sp, #60]
  405138:	b	4051cc <sg_err_category_new+0x234>
  40513c:	mov	w8, #0x62                  	// #98
  405140:	str	w8, [sp, #60]
  405144:	b	4051cc <sg_err_category_new+0x234>
  405148:	ldr	w8, [sp, #48]
  40514c:	cbz	w8, 4051a4 <sg_err_category_new+0x20c>
  405150:	mov	w8, #0x0                   	// #0
  405154:	strb	w8, [sp, #18]
  405158:	ldr	w8, [sp, #48]
  40515c:	subs	w8, w8, #0x1
  405160:	cmp	w8, #0x2
  405164:	cset	w8, ls  // ls = plast
  405168:	eor	w8, w8, #0x1
  40516c:	tbnz	w8, #0, 405180 <sg_err_category_new+0x1e8>
  405170:	b	405174 <sg_err_category_new+0x1dc>
  405174:	mov	w8, #0x1                   	// #1
  405178:	strb	w8, [sp, #18]
  40517c:	b	405180 <sg_err_category_new+0x1e8>
  405180:	ldrb	w8, [sp, #18]
  405184:	and	w8, w8, #0x1
  405188:	strb	w8, [sp, #17]
  40518c:	ldrb	w8, [sp, #17]
  405190:	tbnz	w8, #0, 405198 <sg_err_category_new+0x200>
  405194:	b	4051a4 <sg_err_category_new+0x20c>
  405198:	mov	w8, #0x3                   	// #3
  40519c:	str	w8, [sp, #60]
  4051a0:	b	4051cc <sg_err_category_new+0x234>
  4051a4:	ldr	w8, [sp, #44]
  4051a8:	cbz	w8, 4051c4 <sg_err_category_new+0x22c>
  4051ac:	ldr	w8, [sp, #44]
  4051b0:	cmp	w8, #0x6
  4051b4:	b.ne	4051c4 <sg_err_category_new+0x22c>  // b.any
  4051b8:	mov	w8, #0x3                   	// #3
  4051bc:	str	w8, [sp, #60]
  4051c0:	b	4051cc <sg_err_category_new+0x234>
  4051c4:	mov	w8, #0x63                  	// #99
  4051c8:	str	w8, [sp, #60]
  4051cc:	ldr	w0, [sp, #60]
  4051d0:	add	sp, sp, #0x40
  4051d4:	ret

00000000004051d8 <scsi_dump_sense>:
  4051d8:	sub	sp, sp, #0x140
  4051dc:	stp	x29, x30, [sp, #288]
  4051e0:	str	x28, [sp, #304]
  4051e4:	add	x29, sp, #0x120
  4051e8:	sub	x8, x29, #0x18
  4051ec:	adrp	x9, 407000 <options+0x178>
  4051f0:	add	x9, x9, #0x63b
  4051f4:	add	x9, x9, #0x3
  4051f8:	adrp	x10, 407000 <options+0x178>
  4051fc:	add	x10, x10, #0x78c
  405200:	str	x0, [x8, #8]
  405204:	str	x1, [x8]
  405208:	stur	w2, [x29, #-28]
  40520c:	ldur	w11, [x29, #-28]
  405210:	cmp	w11, #0x1
  405214:	str	x8, [sp, #72]
  405218:	str	x9, [sp, #64]
  40521c:	str	x10, [sp, #56]
  405220:	b.ge	4052bc <scsi_dump_sense+0xe4>  // b.tcont
  405224:	mov	w8, #0x7                   	// #7
  405228:	stur	w8, [x29, #-56]
  40522c:	mov	w8, #0x16                  	// #22
  405230:	movk	w8, #0x4000, lsl #16
  405234:	stur	w8, [x29, #-60]
  405238:	mov	w8, #0x1                   	// #1
  40523c:	stur	w8, [x29, #-64]
  405240:	ldur	w0, [x29, #-64]
  405244:	bl	4017c8 <log_get_max_level_realm@plt>
  405248:	ldur	w8, [x29, #-56]
  40524c:	and	w8, w8, #0x7
  405250:	cmp	w0, w8
  405254:	b.lt	405294 <scsi_dump_sense+0xbc>  // b.tstop
  405258:	ldur	w8, [x29, #-64]
  40525c:	ldur	w9, [x29, #-56]
  405260:	orr	w0, w9, w8, lsl #10
  405264:	ldur	w1, [x29, #-60]
  405268:	ldr	x10, [sp, #72]
  40526c:	ldr	x11, [x10, #8]
  405270:	add	x6, x11, #0x40
  405274:	ldr	x2, [sp, #64]
  405278:	mov	w3, #0xad                  	// #173
  40527c:	ldr	x4, [sp, #56]
  405280:	adrp	x5, 407000 <options+0x178>
  405284:	add	x5, x5, #0x79c
  405288:	bl	4017d8 <log_internal_realm@plt>
  40528c:	str	w0, [sp, #52]
  405290:	b	4052a8 <scsi_dump_sense+0xd0>
  405294:	ldur	w0, [x29, #-60]
  405298:	bl	4017e8 <abs@plt>
  40529c:	mov	w8, wzr
  4052a0:	subs	w8, w8, w0, uxtb
  4052a4:	str	w8, [sp, #52]
  4052a8:	ldr	w8, [sp, #52]
  4052ac:	stur	w8, [x29, #-68]
  4052b0:	ldur	w8, [x29, #-68]
  4052b4:	stur	w8, [x29, #-4]
  4052b8:	b	405944 <scsi_dump_sense+0x76c>
  4052bc:	ldr	x8, [sp, #72]
  4052c0:	ldr	x9, [x8]
  4052c4:	ldrb	w10, [x9]
  4052c8:	asr	w10, w10, #4
  4052cc:	and	w10, w10, #0x7
  4052d0:	stur	w10, [x29, #-40]
  4052d4:	ldr	x9, [x8]
  4052d8:	ldrb	w10, [x9]
  4052dc:	and	w10, w10, #0xf
  4052e0:	stur	w10, [x29, #-36]
  4052e4:	ldur	w10, [x29, #-40]
  4052e8:	cmp	w10, #0x7
  4052ec:	b.ne	4056a8 <scsi_dump_sense+0x4d0>  // b.any
  4052f0:	ldr	x8, [sp, #72]
  4052f4:	ldr	x9, [x8]
  4052f8:	ldrb	w10, [x9, #7]
  4052fc:	add	w10, w10, #0x8
  405300:	stur	w10, [x29, #-32]
  405304:	ldur	w10, [x29, #-28]
  405308:	ldur	w11, [x29, #-32]
  40530c:	cmp	w10, w11
  405310:	b.ge	4053c4 <scsi_dump_sense+0x1ec>  // b.tcont
  405314:	mov	w8, #0x7                   	// #7
  405318:	stur	w8, [x29, #-72]
  40531c:	mov	w8, #0x16                  	// #22
  405320:	movk	w8, #0x4000, lsl #16
  405324:	stur	w8, [x29, #-76]
  405328:	mov	w8, #0x1                   	// #1
  40532c:	stur	w8, [x29, #-80]
  405330:	ldur	w0, [x29, #-80]
  405334:	bl	4017c8 <log_get_max_level_realm@plt>
  405338:	ldur	w8, [x29, #-72]
  40533c:	and	w8, w8, #0x7
  405340:	cmp	w0, w8
  405344:	b.lt	40539c <scsi_dump_sense+0x1c4>  // b.tstop
  405348:	ldur	w8, [x29, #-80]
  40534c:	ldur	w9, [x29, #-72]
  405350:	orr	w0, w9, w8, lsl #10
  405354:	ldur	w1, [x29, #-76]
  405358:	ldr	x10, [sp, #72]
  40535c:	ldr	x11, [x10, #8]
  405360:	add	x6, x11, #0x40
  405364:	ldur	w7, [x29, #-28]
  405368:	ldur	w8, [x29, #-32]
  40536c:	ldur	w9, [x29, #-28]
  405370:	subs	w8, w8, w9
  405374:	ldr	x2, [sp, #64]
  405378:	mov	w3, #0xbb                  	// #187
  40537c:	ldr	x4, [sp, #56]
  405380:	adrp	x5, 407000 <options+0x178>
  405384:	add	x5, x5, #0x7b3
  405388:	mov	x11, sp
  40538c:	str	w8, [x11]
  405390:	bl	4017d8 <log_internal_realm@plt>
  405394:	str	w0, [sp, #48]
  405398:	b	4053b0 <scsi_dump_sense+0x1d8>
  40539c:	ldur	w0, [x29, #-76]
  4053a0:	bl	4017e8 <abs@plt>
  4053a4:	mov	w8, wzr
  4053a8:	subs	w8, w8, w0, uxtb
  4053ac:	str	w8, [sp, #48]
  4053b0:	ldr	w8, [sp, #48]
  4053b4:	stur	w8, [x29, #-84]
  4053b8:	ldur	w8, [x29, #-84]
  4053bc:	stur	w8, [x29, #-4]
  4053c0:	b	405944 <scsi_dump_sense+0x76c>
  4053c4:	mov	w8, #0x0                   	// #0
  4053c8:	sturb	w8, [x29, #-85]
  4053cc:	ldur	w8, [x29, #-36]
  4053d0:	subs	w8, w8, #0x0
  4053d4:	mov	w9, #0x1                   	// #1
  4053d8:	cmp	w8, #0x1
  4053dc:	cset	w8, ls  // ls = plast
  4053e0:	eor	w8, w8, w9
  4053e4:	tbnz	w8, #0, 4053f8 <scsi_dump_sense+0x220>
  4053e8:	b	4053ec <scsi_dump_sense+0x214>
  4053ec:	mov	w8, #0x1                   	// #1
  4053f0:	sturb	w8, [x29, #-85]
  4053f4:	b	4053f8 <scsi_dump_sense+0x220>
  4053f8:	ldurb	w8, [x29, #-85]
  4053fc:	and	w8, w8, #0x1
  405400:	sturb	w8, [x29, #-86]
  405404:	ldurb	w8, [x29, #-86]
  405408:	tbnz	w8, #0, 405410 <scsi_dump_sense+0x238>
  40540c:	b	4054ec <scsi_dump_sense+0x314>
  405410:	ldr	x8, [sp, #72]
  405414:	ldr	x9, [x8]
  405418:	ldrb	w10, [x9, #2]
  40541c:	and	w10, w10, #0xf
  405420:	stur	w10, [x29, #-44]
  405424:	ldur	w10, [x29, #-32]
  405428:	cmp	w10, #0xe
  40542c:	b.ge	4054cc <scsi_dump_sense+0x2f4>  // b.tcont
  405430:	mov	w8, #0x7                   	// #7
  405434:	stur	w8, [x29, #-92]
  405438:	mov	w8, #0x16                  	// #22
  40543c:	movk	w8, #0x4000, lsl #16
  405440:	stur	w8, [x29, #-96]
  405444:	mov	w8, #0x1                   	// #1
  405448:	stur	w8, [x29, #-100]
  40544c:	ldur	w0, [x29, #-100]
  405450:	bl	4017c8 <log_get_max_level_realm@plt>
  405454:	ldur	w8, [x29, #-92]
  405458:	and	w8, w8, #0x7
  40545c:	cmp	w0, w8
  405460:	b.lt	4054a4 <scsi_dump_sense+0x2cc>  // b.tstop
  405464:	ldur	w8, [x29, #-100]
  405468:	ldur	w9, [x29, #-92]
  40546c:	orr	w0, w9, w8, lsl #10
  405470:	ldur	w1, [x29, #-96]
  405474:	ldr	x10, [sp, #72]
  405478:	ldr	x11, [x10, #8]
  40547c:	add	x6, x11, #0x40
  405480:	ldur	w7, [x29, #-32]
  405484:	ldr	x2, [sp, #64]
  405488:	mov	w3, #0xc5                  	// #197
  40548c:	ldr	x4, [sp, #56]
  405490:	adrp	x5, 407000 <options+0x178>
  405494:	add	x5, x5, #0x7eb
  405498:	bl	4017d8 <log_internal_realm@plt>
  40549c:	str	w0, [sp, #44]
  4054a0:	b	4054b8 <scsi_dump_sense+0x2e0>
  4054a4:	ldur	w0, [x29, #-96]
  4054a8:	bl	4017e8 <abs@plt>
  4054ac:	mov	w8, wzr
  4054b0:	subs	w8, w8, w0, uxtb
  4054b4:	str	w8, [sp, #44]
  4054b8:	ldr	w8, [sp, #44]
  4054bc:	stur	w8, [x29, #-104]
  4054c0:	ldur	w8, [x29, #-104]
  4054c4:	stur	w8, [x29, #-4]
  4054c8:	b	405944 <scsi_dump_sense+0x76c>
  4054cc:	ldr	x8, [sp, #72]
  4054d0:	ldr	x9, [x8]
  4054d4:	ldrb	w10, [x9, #12]
  4054d8:	stur	w10, [x29, #-48]
  4054dc:	ldr	x9, [x8]
  4054e0:	ldrb	w10, [x9, #13]
  4054e4:	stur	w10, [x29, #-52]
  4054e8:	b	405604 <scsi_dump_sense+0x42c>
  4054ec:	mov	w8, #0x0                   	// #0
  4054f0:	sturb	w8, [x29, #-105]
  4054f4:	ldur	w8, [x29, #-36]
  4054f8:	subs	w8, w8, #0x2
  4054fc:	mov	w9, #0x1                   	// #1
  405500:	cmp	w8, #0x1
  405504:	cset	w8, ls  // ls = plast
  405508:	eor	w8, w8, w9
  40550c:	tbnz	w8, #0, 405520 <scsi_dump_sense+0x348>
  405510:	b	405514 <scsi_dump_sense+0x33c>
  405514:	mov	w8, #0x1                   	// #1
  405518:	sturb	w8, [x29, #-105]
  40551c:	b	405520 <scsi_dump_sense+0x348>
  405520:	ldurb	w8, [x29, #-105]
  405524:	and	w8, w8, #0x1
  405528:	sturb	w8, [x29, #-106]
  40552c:	ldurb	w8, [x29, #-106]
  405530:	tbnz	w8, #0, 405538 <scsi_dump_sense+0x360>
  405534:	b	405568 <scsi_dump_sense+0x390>
  405538:	ldr	x8, [sp, #72]
  40553c:	ldr	x9, [x8]
  405540:	ldrb	w10, [x9, #1]
  405544:	and	w10, w10, #0xf
  405548:	stur	w10, [x29, #-44]
  40554c:	ldr	x9, [x8]
  405550:	ldrb	w10, [x9, #2]
  405554:	stur	w10, [x29, #-48]
  405558:	ldr	x9, [x8]
  40555c:	ldrb	w10, [x9, #3]
  405560:	stur	w10, [x29, #-52]
  405564:	b	405604 <scsi_dump_sense+0x42c>
  405568:	mov	w8, #0x7                   	// #7
  40556c:	stur	w8, [x29, #-112]
  405570:	mov	w8, #0x16                  	// #22
  405574:	movk	w8, #0x4000, lsl #16
  405578:	stur	w8, [x29, #-116]
  40557c:	mov	w8, #0x1                   	// #1
  405580:	stur	w8, [x29, #-120]
  405584:	ldur	w0, [x29, #-120]
  405588:	bl	4017c8 <log_get_max_level_realm@plt>
  40558c:	ldur	w8, [x29, #-112]
  405590:	and	w8, w8, #0x7
  405594:	cmp	w0, w8
  405598:	b.lt	4055dc <scsi_dump_sense+0x404>  // b.tstop
  40559c:	ldur	w8, [x29, #-120]
  4055a0:	ldur	w9, [x29, #-112]
  4055a4:	orr	w0, w9, w8, lsl #10
  4055a8:	ldur	w1, [x29, #-116]
  4055ac:	ldr	x10, [sp, #72]
  4055b0:	ldr	x11, [x10, #8]
  4055b4:	add	x6, x11, #0x40
  4055b8:	ldur	w7, [x29, #-36]
  4055bc:	ldr	x2, [sp, #64]
  4055c0:	mov	w3, #0xd0                  	// #208
  4055c4:	ldr	x4, [sp, #56]
  4055c8:	adrp	x5, 407000 <options+0x178>
  4055cc:	add	x5, x5, #0x80f
  4055d0:	bl	4017d8 <log_internal_realm@plt>
  4055d4:	str	w0, [sp, #40]
  4055d8:	b	4055f0 <scsi_dump_sense+0x418>
  4055dc:	ldur	w0, [x29, #-116]
  4055e0:	bl	4017e8 <abs@plt>
  4055e4:	mov	w8, wzr
  4055e8:	subs	w8, w8, w0, uxtb
  4055ec:	str	w8, [sp, #40]
  4055f0:	ldr	w8, [sp, #40]
  4055f4:	stur	w8, [x29, #-124]
  4055f8:	ldur	w8, [x29, #-124]
  4055fc:	stur	w8, [x29, #-4]
  405600:	b	405944 <scsi_dump_sense+0x76c>
  405604:	mov	w8, #0x7                   	// #7
  405608:	stur	w8, [x29, #-128]
  40560c:	stur	wzr, [x29, #-132]
  405610:	mov	w8, #0x1                   	// #1
  405614:	stur	w8, [x29, #-136]
  405618:	ldur	w0, [x29, #-136]
  40561c:	bl	4017c8 <log_get_max_level_realm@plt>
  405620:	ldur	w8, [x29, #-128]
  405624:	and	w8, w8, #0x7
  405628:	cmp	w0, w8
  40562c:	b.lt	405688 <scsi_dump_sense+0x4b0>  // b.tstop
  405630:	ldur	w8, [x29, #-136]
  405634:	ldur	w9, [x29, #-128]
  405638:	orr	w0, w9, w8, lsl #10
  40563c:	ldur	w1, [x29, #-132]
  405640:	ldr	x10, [sp, #72]
  405644:	ldr	x11, [x10, #8]
  405648:	add	x6, x11, #0x40
  40564c:	ldur	w7, [x29, #-44]
  405650:	ldur	w8, [x29, #-48]
  405654:	ldur	w9, [x29, #-52]
  405658:	ldr	x2, [sp, #64]
  40565c:	mov	w3, #0xd3                  	// #211
  405660:	ldr	x4, [sp, #56]
  405664:	adrp	x5, 407000 <options+0x178>
  405668:	add	x5, x5, #0x82b
  40566c:	mov	x11, sp
  405670:	str	w8, [x11]
  405674:	mov	x11, sp
  405678:	str	w9, [x11, #8]
  40567c:	bl	4017d8 <log_internal_realm@plt>
  405680:	str	w0, [sp, #36]
  405684:	b	40569c <scsi_dump_sense+0x4c4>
  405688:	ldur	w0, [x29, #-132]
  40568c:	bl	4017e8 <abs@plt>
  405690:	mov	w8, wzr
  405694:	subs	w8, w8, w0, uxtb
  405698:	str	w8, [sp, #36]
  40569c:	ldr	w8, [sp, #36]
  4056a0:	stur	w8, [x29, #-140]
  4056a4:	b	40593c <scsi_dump_sense+0x764>
  4056a8:	ldur	w8, [x29, #-28]
  4056ac:	cmp	w8, #0x4
  4056b0:	b.ge	405764 <scsi_dump_sense+0x58c>  // b.tcont
  4056b4:	mov	w8, #0x7                   	// #7
  4056b8:	str	w8, [sp, #144]
  4056bc:	mov	w8, #0x16                  	// #22
  4056c0:	movk	w8, #0x4000, lsl #16
  4056c4:	str	w8, [sp, #140]
  4056c8:	mov	w8, #0x1                   	// #1
  4056cc:	str	w8, [sp, #136]
  4056d0:	ldr	w0, [sp, #136]
  4056d4:	bl	4017c8 <log_get_max_level_realm@plt>
  4056d8:	ldr	w8, [sp, #144]
  4056dc:	and	w8, w8, #0x7
  4056e0:	cmp	w0, w8
  4056e4:	b.lt	40573c <scsi_dump_sense+0x564>  // b.tstop
  4056e8:	ldr	w8, [sp, #136]
  4056ec:	ldr	w9, [sp, #144]
  4056f0:	orr	w0, w9, w8, lsl #10
  4056f4:	ldr	w1, [sp, #140]
  4056f8:	ldr	x10, [sp, #72]
  4056fc:	ldr	x11, [x10, #8]
  405700:	add	x6, x11, #0x40
  405704:	ldur	w7, [x29, #-28]
  405708:	ldur	w8, [x29, #-28]
  40570c:	mov	w9, #0x4                   	// #4
  405710:	subs	w8, w9, w8
  405714:	ldr	x2, [sp, #64]
  405718:	mov	w3, #0xd9                  	// #217
  40571c:	ldr	x4, [sp, #56]
  405720:	adrp	x5, 407000 <options+0x178>
  405724:	add	x5, x5, #0x7b3
  405728:	mov	x11, sp
  40572c:	str	w8, [x11]
  405730:	bl	4017d8 <log_internal_realm@plt>
  405734:	str	w0, [sp, #32]
  405738:	b	405750 <scsi_dump_sense+0x578>
  40573c:	ldr	w0, [sp, #140]
  405740:	bl	4017e8 <abs@plt>
  405744:	mov	w8, wzr
  405748:	subs	w8, w8, w0, uxtb
  40574c:	str	w8, [sp, #32]
  405750:	ldr	w8, [sp, #32]
  405754:	str	w8, [sp, #132]
  405758:	ldr	w8, [sp, #132]
  40575c:	stur	w8, [x29, #-4]
  405760:	b	405944 <scsi_dump_sense+0x76c>
  405764:	ldr	x8, [sp, #72]
  405768:	ldr	x9, [x8]
  40576c:	ldrb	w10, [x9]
  405770:	cmp	w10, #0xf
  405774:	b.ge	40580c <scsi_dump_sense+0x634>  // b.tcont
  405778:	mov	w8, #0x7                   	// #7
  40577c:	str	w8, [sp, #128]
  405780:	str	wzr, [sp, #124]
  405784:	mov	w8, #0x1                   	// #1
  405788:	str	w8, [sp, #120]
  40578c:	ldr	w0, [sp, #120]
  405790:	bl	4017c8 <log_get_max_level_realm@plt>
  405794:	ldr	w8, [sp, #128]
  405798:	and	w8, w8, #0x7
  40579c:	cmp	w0, w8
  4057a0:	b.lt	4057ec <scsi_dump_sense+0x614>  // b.tstop
  4057a4:	ldr	w8, [sp, #120]
  4057a8:	ldr	w9, [sp, #128]
  4057ac:	orr	w0, w9, w8, lsl #10
  4057b0:	ldr	w1, [sp, #124]
  4057b4:	ldr	x10, [sp, #72]
  4057b8:	ldr	x11, [x10, #8]
  4057bc:	add	x6, x11, #0x40
  4057c0:	ldr	x11, [x10]
  4057c4:	ldrb	w8, [x11]
  4057c8:	and	w7, w8, #0xf
  4057cc:	ldr	x2, [sp, #64]
  4057d0:	mov	w3, #0xdc                  	// #220
  4057d4:	ldr	x4, [sp, #56]
  4057d8:	adrp	x5, 407000 <options+0x178>
  4057dc:	add	x5, x5, #0x851
  4057e0:	bl	4017d8 <log_internal_realm@plt>
  4057e4:	str	w0, [sp, #28]
  4057e8:	b	405800 <scsi_dump_sense+0x628>
  4057ec:	ldr	w0, [sp, #124]
  4057f0:	bl	4017e8 <abs@plt>
  4057f4:	mov	w8, wzr
  4057f8:	subs	w8, w8, w0, uxtb
  4057fc:	str	w8, [sp, #28]
  405800:	ldr	w8, [sp, #28]
  405804:	str	w8, [sp, #116]
  405808:	b	4058a8 <scsi_dump_sense+0x6d0>
  40580c:	mov	w8, #0x7                   	// #7
  405810:	str	w8, [sp, #112]
  405814:	str	wzr, [sp, #108]
  405818:	mov	w8, #0x1                   	// #1
  40581c:	str	w8, [sp, #104]
  405820:	ldr	w0, [sp, #104]
  405824:	bl	4017c8 <log_get_max_level_realm@plt>
  405828:	ldr	w8, [sp, #112]
  40582c:	and	w8, w8, #0x7
  405830:	cmp	w0, w8
  405834:	b.lt	40588c <scsi_dump_sense+0x6b4>  // b.tstop
  405838:	ldr	w8, [sp, #104]
  40583c:	ldr	w9, [sp, #112]
  405840:	orr	w0, w9, w8, lsl #10
  405844:	ldr	w1, [sp, #108]
  405848:	ldr	x10, [sp, #72]
  40584c:	ldr	x11, [x10, #8]
  405850:	add	x6, x11, #0x40
  405854:	ldr	x11, [x10]
  405858:	ldrb	w7, [x11]
  40585c:	ldr	x11, [x10]
  405860:	ldrb	w8, [x11, #2]
  405864:	ldr	x2, [sp, #64]
  405868:	mov	w3, #0xdf                  	// #223
  40586c:	ldr	x4, [sp, #56]
  405870:	adrp	x5, 407000 <options+0x178>
  405874:	add	x5, x5, #0x869
  405878:	mov	x11, sp
  40587c:	str	w8, [x11]
  405880:	bl	4017d8 <log_internal_realm@plt>
  405884:	str	w0, [sp, #24]
  405888:	b	4058a0 <scsi_dump_sense+0x6c8>
  40588c:	ldr	w0, [sp, #108]
  405890:	bl	4017e8 <abs@plt>
  405894:	mov	w8, wzr
  405898:	subs	w8, w8, w0, uxtb
  40589c:	str	w8, [sp, #24]
  4058a0:	ldr	w8, [sp, #24]
  4058a4:	str	w8, [sp, #100]
  4058a8:	mov	w8, #0x7                   	// #7
  4058ac:	str	w8, [sp, #96]
  4058b0:	str	wzr, [sp, #92]
  4058b4:	mov	w8, #0x1                   	// #1
  4058b8:	str	w8, [sp, #88]
  4058bc:	ldr	w0, [sp, #88]
  4058c0:	bl	4017c8 <log_get_max_level_realm@plt>
  4058c4:	ldr	w8, [sp, #96]
  4058c8:	and	w8, w8, #0x7
  4058cc:	cmp	w0, w8
  4058d0:	b.lt	405920 <scsi_dump_sense+0x748>  // b.tstop
  4058d4:	ldr	w8, [sp, #88]
  4058d8:	ldr	w9, [sp, #96]
  4058dc:	orr	w0, w9, w8, lsl #10
  4058e0:	ldr	w1, [sp, #92]
  4058e4:	ldr	x10, [sp, #72]
  4058e8:	ldr	x11, [x10, #8]
  4058ec:	add	x6, x11, #0x40
  4058f0:	ldur	w7, [x29, #-40]
  4058f4:	ldur	w8, [x29, #-36]
  4058f8:	ldr	x2, [sp, #64]
  4058fc:	mov	w3, #0xe1                  	// #225
  405900:	ldr	x4, [sp, #56]
  405904:	adrp	x5, 407000 <options+0x178>
  405908:	add	x5, x5, #0x87d
  40590c:	mov	x11, sp
  405910:	str	w8, [x11]
  405914:	bl	4017d8 <log_internal_realm@plt>
  405918:	str	w0, [sp, #20]
  40591c:	b	405934 <scsi_dump_sense+0x75c>
  405920:	ldr	w0, [sp, #92]
  405924:	bl	4017e8 <abs@plt>
  405928:	mov	w8, wzr
  40592c:	subs	w8, w8, w0, uxtb
  405930:	str	w8, [sp, #20]
  405934:	ldr	w8, [sp, #20]
  405938:	str	w8, [sp, #84]
  40593c:	mov	w8, #0xffffffff            	// #-1
  405940:	stur	w8, [x29, #-4]
  405944:	ldur	w0, [x29, #-4]
  405948:	ldr	x28, [sp, #304]
  40594c:	ldp	x29, x30, [sp, #288]
  405950:	add	sp, sp, #0x140
  405954:	ret

0000000000405958 <append_vendor_model>:
  405958:	sub	sp, sp, #0x60
  40595c:	stp	x29, x30, [sp, #80]
  405960:	add	x29, sp, #0x50
  405964:	adrp	x8, 407000 <options+0x178>
  405968:	add	x8, x8, #0x63b
  40596c:	add	x8, x8, #0x3
  405970:	stur	x0, [x29, #-16]
  405974:	stur	x1, [x29, #-24]
  405978:	str	x8, [sp, #16]
  40597c:	ldur	x8, [x29, #-16]
  405980:	cmp	x8, #0x0
  405984:	cset	w9, ne  // ne = any
  405988:	mov	w10, #0x1                   	// #1
  40598c:	eor	w9, w9, #0x1
  405990:	eor	w9, w9, w10
  405994:	eor	w9, w9, w10
  405998:	and	w9, w9, #0x1
  40599c:	mov	w0, w9
  4059a0:	sxtw	x8, w0
  4059a4:	cbz	x8, 4059c8 <append_vendor_model+0x70>
  4059a8:	mov	w0, #0x1                   	// #1
  4059ac:	adrp	x1, 407000 <options+0x178>
  4059b0:	add	x1, x1, #0x92d
  4059b4:	ldr	x2, [sp, #16]
  4059b8:	mov	w3, #0x192                 	// #402
  4059bc:	adrp	x4, 407000 <options+0x178>
  4059c0:	add	x4, x4, #0x936
  4059c4:	bl	4017a8 <log_assert_failed_realm@plt>
  4059c8:	ldur	x8, [x29, #-24]
  4059cc:	cmp	x8, #0x0
  4059d0:	cset	w9, ne  // ne = any
  4059d4:	mov	w10, #0x1                   	// #1
  4059d8:	eor	w9, w9, #0x1
  4059dc:	eor	w9, w9, w10
  4059e0:	eor	w9, w9, w10
  4059e4:	and	w9, w9, #0x1
  4059e8:	mov	w0, w9
  4059ec:	sxtw	x8, w0
  4059f0:	cbz	x8, 405a14 <append_vendor_model+0xbc>
  4059f4:	mov	w0, #0x1                   	// #1
  4059f8:	adrp	x1, 407000 <options+0x178>
  4059fc:	add	x1, x1, #0x975
  405a00:	ldr	x2, [sp, #16]
  405a04:	mov	w3, #0x193                 	// #403
  405a08:	adrp	x4, 407000 <options+0x178>
  405a0c:	add	x4, x4, #0x936
  405a10:	bl	4017a8 <log_assert_failed_realm@plt>
  405a14:	ldur	x0, [x29, #-16]
  405a18:	mov	x1, #0x8                   	// #8
  405a1c:	bl	401a28 <strnlen@plt>
  405a20:	cmp	x0, #0x8
  405a24:	b.eq	405ac4 <append_vendor_model+0x16c>  // b.none
  405a28:	mov	w8, #0x7                   	// #7
  405a2c:	stur	w8, [x29, #-28]
  405a30:	mov	w8, #0x16                  	// #22
  405a34:	movk	w8, #0x4000, lsl #16
  405a38:	stur	w8, [x29, #-32]
  405a3c:	mov	w8, #0x1                   	// #1
  405a40:	stur	w8, [x29, #-36]
  405a44:	ldur	w0, [x29, #-36]
  405a48:	bl	4017c8 <log_get_max_level_realm@plt>
  405a4c:	ldur	w8, [x29, #-28]
  405a50:	and	w8, w8, #0x7
  405a54:	cmp	w0, w8
  405a58:	b.lt	405a9c <append_vendor_model+0x144>  // b.tstop
  405a5c:	ldur	w8, [x29, #-36]
  405a60:	ldur	w9, [x29, #-28]
  405a64:	orr	w0, w9, w8, lsl #10
  405a68:	ldur	w1, [x29, #-32]
  405a6c:	ldur	x10, [x29, #-16]
  405a70:	add	x6, x10, #0x40
  405a74:	ldur	x7, [x29, #-16]
  405a78:	ldr	x2, [sp, #16]
  405a7c:	mov	w3, #0x198                 	// #408
  405a80:	adrp	x4, 407000 <options+0x178>
  405a84:	add	x4, x4, #0x979
  405a88:	adrp	x5, 407000 <options+0x178>
  405a8c:	add	x5, x5, #0x98d
  405a90:	bl	4017d8 <log_internal_realm@plt>
  405a94:	str	w0, [sp, #12]
  405a98:	b	405ab0 <append_vendor_model+0x158>
  405a9c:	ldur	w0, [x29, #-32]
  405aa0:	bl	4017e8 <abs@plt>
  405aa4:	mov	w8, wzr
  405aa8:	subs	w8, w8, w0, uxtb
  405aac:	str	w8, [sp, #12]
  405ab0:	ldr	w8, [sp, #12]
  405ab4:	str	w8, [sp, #40]
  405ab8:	ldr	w8, [sp, #40]
  405abc:	stur	w8, [x29, #-4]
  405ac0:	b	405ba4 <append_vendor_model+0x24c>
  405ac4:	ldur	x8, [x29, #-16]
  405ac8:	add	x0, x8, #0x9
  405acc:	mov	x1, #0x10                  	// #16
  405ad0:	bl	401a28 <strnlen@plt>
  405ad4:	cmp	x0, #0x10
  405ad8:	b.eq	405b7c <append_vendor_model+0x224>  // b.none
  405adc:	mov	w8, #0x7                   	// #7
  405ae0:	str	w8, [sp, #36]
  405ae4:	mov	w8, #0x16                  	// #22
  405ae8:	movk	w8, #0x4000, lsl #16
  405aec:	str	w8, [sp, #32]
  405af0:	mov	w8, #0x1                   	// #1
  405af4:	str	w8, [sp, #28]
  405af8:	ldr	w0, [sp, #28]
  405afc:	bl	4017c8 <log_get_max_level_realm@plt>
  405b00:	ldr	w8, [sp, #36]
  405b04:	and	w8, w8, #0x7
  405b08:	cmp	w0, w8
  405b0c:	b.lt	405b54 <append_vendor_model+0x1fc>  // b.tstop
  405b10:	ldr	w8, [sp, #28]
  405b14:	ldr	w9, [sp, #36]
  405b18:	orr	w0, w9, w8, lsl #10
  405b1c:	ldr	w1, [sp, #32]
  405b20:	ldur	x10, [x29, #-16]
  405b24:	add	x6, x10, #0x40
  405b28:	ldur	x10, [x29, #-16]
  405b2c:	add	x7, x10, #0x9
  405b30:	ldr	x2, [sp, #16]
  405b34:	mov	w3, #0x19c                 	// #412
  405b38:	adrp	x4, 407000 <options+0x178>
  405b3c:	add	x4, x4, #0x979
  405b40:	adrp	x5, 407000 <options+0x178>
  405b44:	add	x5, x5, #0x9a8
  405b48:	bl	4017d8 <log_internal_realm@plt>
  405b4c:	str	w0, [sp, #8]
  405b50:	b	405b68 <append_vendor_model+0x210>
  405b54:	ldr	w0, [sp, #32]
  405b58:	bl	4017e8 <abs@plt>
  405b5c:	mov	w8, wzr
  405b60:	subs	w8, w8, w0, uxtb
  405b64:	str	w8, [sp, #8]
  405b68:	ldr	w8, [sp, #8]
  405b6c:	str	w8, [sp, #24]
  405b70:	ldr	w8, [sp, #24]
  405b74:	stur	w8, [x29, #-4]
  405b78:	b	405ba4 <append_vendor_model+0x24c>
  405b7c:	ldur	x8, [x29, #-24]
  405b80:	ldur	x9, [x29, #-16]
  405b84:	ldr	x9, [x9]
  405b88:	str	x9, [x8]
  405b8c:	ldur	x8, [x29, #-24]
  405b90:	ldur	x9, [x29, #-16]
  405b94:	ldur	q0, [x9, #9]
  405b98:	stur	q0, [x8, #8]
  405b9c:	mov	w10, #0x18                  	// #24
  405ba0:	stur	w10, [x29, #-4]
  405ba4:	ldur	w0, [x29, #-4]
  405ba8:	ldp	x29, x30, [sp, #80]
  405bac:	add	sp, sp, #0x60
  405bb0:	ret

0000000000405bb4 <check_fill_0x83_prespc3>:
  405bb4:	sub	sp, sp, #0x60
  405bb8:	stp	x29, x30, [sp, #80]
  405bbc:	add	x29, sp, #0x50
  405bc0:	adrp	x8, 407000 <options+0x178>
  405bc4:	add	x8, x8, #0xc97
  405bc8:	stur	x0, [x29, #-8]
  405bcc:	stur	x1, [x29, #-16]
  405bd0:	stur	x2, [x29, #-24]
  405bd4:	stur	x3, [x29, #-32]
  405bd8:	str	x4, [sp, #40]
  405bdc:	str	w5, [sp, #36]
  405be0:	ldrb	w9, [x8, #3]
  405be4:	ldur	x10, [x29, #-32]
  405be8:	strb	w9, [x10]
  405bec:	ldur	x0, [x29, #-32]
  405bf0:	str	x8, [sp, #16]
  405bf4:	bl	401878 <strlen@plt>
  405bf8:	str	w0, [sp, #28]
  405bfc:	str	wzr, [sp, #32]
  405c00:	ldr	w8, [sp, #32]
  405c04:	ldur	x9, [x29, #-16]
  405c08:	ldrb	w10, [x9, #3]
  405c0c:	mov	w11, #0x0                   	// #0
  405c10:	cmp	w8, w10
  405c14:	str	w11, [sp, #12]
  405c18:	b.ge	405c34 <check_fill_0x83_prespc3+0x80>  // b.tcont
  405c1c:	ldr	w8, [sp, #28]
  405c20:	ldr	w9, [sp, #36]
  405c24:	subs	w9, w9, #0x3
  405c28:	cmp	w8, w9
  405c2c:	cset	w8, lt  // lt = tstop
  405c30:	str	w8, [sp, #12]
  405c34:	ldr	w8, [sp, #12]
  405c38:	tbnz	w8, #0, 405c40 <check_fill_0x83_prespc3+0x8c>
  405c3c:	b	405cd8 <check_fill_0x83_prespc3+0x124>
  405c40:	ldur	x8, [x29, #-16]
  405c44:	ldr	w9, [sp, #32]
  405c48:	add	w9, w9, #0x4
  405c4c:	ldrb	w9, [x8, w9, sxtw]
  405c50:	and	w9, w9, #0xf0
  405c54:	asr	w9, w9, #4
  405c58:	mov	w0, w9
  405c5c:	sxtw	x8, w0
  405c60:	ldr	x10, [sp, #16]
  405c64:	add	x8, x10, x8
  405c68:	ldrb	w9, [x8]
  405c6c:	ldur	x8, [x29, #-32]
  405c70:	ldrsw	x11, [sp, #28]
  405c74:	mov	w12, w11
  405c78:	add	w12, w12, #0x1
  405c7c:	str	w12, [sp, #28]
  405c80:	add	x8, x8, x11
  405c84:	strb	w9, [x8]
  405c88:	ldur	x8, [x29, #-16]
  405c8c:	ldr	w9, [sp, #32]
  405c90:	add	w9, w9, #0x4
  405c94:	ldrb	w9, [x8, w9, sxtw]
  405c98:	and	w9, w9, #0xf
  405c9c:	mov	w0, w9
  405ca0:	sxtw	x8, w0
  405ca4:	add	x8, x10, x8
  405ca8:	ldrb	w9, [x8]
  405cac:	ldur	x8, [x29, #-32]
  405cb0:	ldrsw	x11, [sp, #28]
  405cb4:	mov	w12, w11
  405cb8:	add	w12, w12, #0x1
  405cbc:	str	w12, [sp, #28]
  405cc0:	add	x8, x8, x11
  405cc4:	strb	w9, [x8]
  405cc8:	ldr	w8, [sp, #32]
  405ccc:	add	w8, w8, #0x1
  405cd0:	str	w8, [sp, #32]
  405cd4:	b	405c00 <check_fill_0x83_prespc3+0x4c>
  405cd8:	ldur	x8, [x29, #-32]
  405cdc:	ldr	w9, [sp, #36]
  405ce0:	subs	w9, w9, #0x1
  405ce4:	mov	w0, w9
  405ce8:	sxtw	x10, w0
  405cec:	add	x8, x8, x10
  405cf0:	mov	w9, #0x0                   	// #0
  405cf4:	strb	w9, [x8]
  405cf8:	ldr	x0, [sp, #40]
  405cfc:	ldur	x1, [x29, #-32]
  405d00:	ldr	w9, [sp, #36]
  405d04:	subs	w9, w9, #0x1
  405d08:	mov	w2, w9
  405d0c:	sxtw	x2, w2
  405d10:	bl	401a38 <strncpy@plt>
  405d14:	mov	w9, wzr
  405d18:	mov	w0, w9
  405d1c:	ldp	x29, x30, [sp, #80]
  405d20:	add	sp, sp, #0x60
  405d24:	ret

0000000000405d28 <check_fill_0x83_id>:
  405d28:	sub	sp, sp, #0xb0
  405d2c:	stp	x29, x30, [sp, #160]
  405d30:	add	x29, sp, #0xa0
  405d34:	ldr	x8, [x29, #16]
  405d38:	adrp	x9, 407000 <options+0x178>
  405d3c:	add	x9, x9, #0xc97
  405d40:	adrp	x10, 407000 <options+0x178>
  405d44:	add	x10, x10, #0x63b
  405d48:	add	x10, x10, #0x3
  405d4c:	stur	x0, [x29, #-16]
  405d50:	stur	x1, [x29, #-24]
  405d54:	stur	x2, [x29, #-32]
  405d58:	stur	x3, [x29, #-40]
  405d5c:	stur	x4, [x29, #-48]
  405d60:	stur	w5, [x29, #-52]
  405d64:	stur	x6, [x29, #-64]
  405d68:	stur	x7, [x29, #-72]
  405d6c:	str	x8, [sp, #80]
  405d70:	ldur	x8, [x29, #-24]
  405d74:	ldrb	w11, [x8, #1]
  405d78:	and	w11, w11, #0x30
  405d7c:	cmp	w11, #0x10
  405d80:	str	x9, [sp, #32]
  405d84:	str	x10, [sp, #24]
  405d88:	b.ne	405dac <check_fill_0x83_id+0x84>  // b.any
  405d8c:	ldur	x8, [x29, #-32]
  405d90:	ldrb	w9, [x8]
  405d94:	cmp	w9, #0x5
  405d98:	b.eq	405da8 <check_fill_0x83_id+0x80>  // b.none
  405d9c:	mov	w8, #0x1                   	// #1
  405da0:	stur	w8, [x29, #-4]
  405da4:	b	406198 <check_fill_0x83_id+0x470>
  405da8:	b	405dc8 <check_fill_0x83_id+0xa0>
  405dac:	ldur	x8, [x29, #-24]
  405db0:	ldrb	w9, [x8, #1]
  405db4:	and	w9, w9, #0x30
  405db8:	cbz	w9, 405dc8 <check_fill_0x83_id+0xa0>
  405dbc:	mov	w8, #0x1                   	// #1
  405dc0:	stur	w8, [x29, #-4]
  405dc4:	b	406198 <check_fill_0x83_id+0x470>
  405dc8:	ldur	x8, [x29, #-24]
  405dcc:	ldrb	w9, [x8, #1]
  405dd0:	and	w9, w9, #0xf
  405dd4:	ldur	x8, [x29, #-32]
  405dd8:	ldrb	w10, [x8]
  405ddc:	cmp	w9, w10
  405de0:	b.eq	405df0 <check_fill_0x83_id+0xc8>  // b.none
  405de4:	mov	w8, #0x1                   	// #1
  405de8:	stur	w8, [x29, #-4]
  405dec:	b	406198 <check_fill_0x83_id+0x470>
  405df0:	ldur	x8, [x29, #-32]
  405df4:	ldrb	w9, [x8, #1]
  405df8:	cmp	w9, #0xff
  405dfc:	b.eq	405e30 <check_fill_0x83_id+0x108>  // b.none
  405e00:	ldur	x8, [x29, #-32]
  405e04:	ldrb	w9, [x8, #1]
  405e08:	ldur	x8, [x29, #-24]
  405e0c:	mov	x10, #0x4                   	// #4
  405e10:	ldrb	w11, [x8, #4]
  405e14:	and	w11, w11, #0xf0
  405e18:	asr	w10, w11, w10
  405e1c:	cmp	w9, w10
  405e20:	b.eq	405e30 <check_fill_0x83_id+0x108>  // b.none
  405e24:	mov	w8, #0x1                   	// #1
  405e28:	stur	w8, [x29, #-4]
  405e2c:	b	406198 <check_fill_0x83_id+0x470>
  405e30:	ldur	x8, [x29, #-24]
  405e34:	ldrb	w9, [x8]
  405e38:	and	w9, w9, #0xf
  405e3c:	ldur	x8, [x29, #-32]
  405e40:	ldrb	w10, [x8, #2]
  405e44:	cmp	w9, w10
  405e48:	b.eq	405e58 <check_fill_0x83_id+0x130>  // b.none
  405e4c:	mov	w8, #0x1                   	// #1
  405e50:	stur	w8, [x29, #-4]
  405e54:	b	406198 <check_fill_0x83_id+0x470>
  405e58:	ldur	x8, [x29, #-24]
  405e5c:	ldrb	w9, [x8, #3]
  405e60:	str	w9, [sp, #64]
  405e64:	ldur	x8, [x29, #-24]
  405e68:	ldrb	w9, [x8]
  405e6c:	and	w9, w9, #0xf
  405e70:	cmp	w9, #0x2
  405e74:	b.eq	405e88 <check_fill_0x83_id+0x160>  // b.none
  405e78:	ldr	w8, [sp, #64]
  405e7c:	mov	w9, #0x2                   	// #2
  405e80:	mul	w8, w8, w9
  405e84:	str	w8, [sp, #64]
  405e88:	ldr	w8, [sp, #64]
  405e8c:	add	w8, w8, #0x2
  405e90:	str	w8, [sp, #64]
  405e94:	ldur	x9, [x29, #-32]
  405e98:	ldrb	w8, [x9]
  405e9c:	cbnz	w8, 405eac <check_fill_0x83_id+0x184>
  405ea0:	ldr	w8, [sp, #64]
  405ea4:	add	w8, w8, #0x18
  405ea8:	str	w8, [sp, #64]
  405eac:	ldur	w8, [x29, #-52]
  405eb0:	ldr	w9, [sp, #64]
  405eb4:	cmp	w8, w9
  405eb8:	b.ge	405f5c <check_fill_0x83_id+0x234>  // b.tcont
  405ebc:	mov	w8, #0x7                   	// #7
  405ec0:	str	w8, [sp, #60]
  405ec4:	str	wzr, [sp, #56]
  405ec8:	mov	w8, #0x1                   	// #1
  405ecc:	str	w8, [sp, #52]
  405ed0:	ldr	w0, [sp, #52]
  405ed4:	bl	4017c8 <log_get_max_level_realm@plt>
  405ed8:	ldr	w8, [sp, #60]
  405edc:	and	w8, w8, #0x7
  405ee0:	cmp	w0, w8
  405ee4:	b.lt	405f34 <check_fill_0x83_id+0x20c>  // b.tstop
  405ee8:	ldr	w8, [sp, #52]
  405eec:	ldr	w9, [sp, #60]
  405ef0:	orr	w0, w9, w8, lsl #10
  405ef4:	ldr	w1, [sp, #56]
  405ef8:	ldur	x10, [x29, #-16]
  405efc:	add	x6, x10, #0x40
  405f00:	ldur	w7, [x29, #-52]
  405f04:	ldr	w8, [sp, #64]
  405f08:	ldr	x2, [sp, #24]
  405f0c:	mov	w3, #0x1db                 	// #475
  405f10:	adrp	x4, 407000 <options+0x178>
  405f14:	add	x4, x4, #0x9ef
  405f18:	adrp	x5, 407000 <options+0x178>
  405f1c:	add	x5, x5, #0x90b
  405f20:	mov	x10, sp
  405f24:	str	w8, [x10]
  405f28:	bl	4017d8 <log_internal_realm@plt>
  405f2c:	str	w0, [sp, #20]
  405f30:	b	405f48 <check_fill_0x83_id+0x220>
  405f34:	ldr	w0, [sp, #56]
  405f38:	bl	4017e8 <abs@plt>
  405f3c:	mov	w8, wzr
  405f40:	subs	w8, w8, w0, uxtb
  405f44:	str	w8, [sp, #20]
  405f48:	ldr	w8, [sp, #20]
  405f4c:	str	w8, [sp, #48]
  405f50:	mov	w8, #0x1                   	// #1
  405f54:	stur	w8, [x29, #-4]
  405f58:	b	406198 <check_fill_0x83_id+0x470>
  405f5c:	ldur	x8, [x29, #-32]
  405f60:	ldrb	w9, [x8]
  405f64:	cmp	w9, #0x5
  405f68:	b.ne	405fac <check_fill_0x83_id+0x284>  // b.any
  405f6c:	ldr	x8, [sp, #80]
  405f70:	cbz	x8, 405fac <check_fill_0x83_id+0x284>
  405f74:	ldur	x8, [x29, #-24]
  405f78:	ldrb	w9, [x8, #6]
  405f7c:	ldur	x8, [x29, #-24]
  405f80:	ldrb	w10, [x8, #7]
  405f84:	orr	w9, w10, w9, lsl #8
  405f88:	str	w9, [sp, #44]
  405f8c:	ldr	x0, [sp, #80]
  405f90:	ldr	w2, [sp, #44]
  405f94:	adrp	x1, 407000 <options+0x178>
  405f98:	add	x1, x1, #0x6ac
  405f9c:	bl	4019b8 <sprintf@plt>
  405fa0:	mov	w9, #0x1                   	// #1
  405fa4:	stur	w9, [x29, #-4]
  405fa8:	b	406198 <check_fill_0x83_id+0x470>
  405fac:	ldur	x8, [x29, #-32]
  405fb0:	ldrb	w9, [x8]
  405fb4:	mov	w8, w9
  405fb8:	ldr	x10, [sp, #32]
  405fbc:	add	x8, x10, x8
  405fc0:	ldrb	w9, [x8]
  405fc4:	ldur	x8, [x29, #-40]
  405fc8:	strb	w9, [x8]
  405fcc:	ldur	x8, [x29, #-32]
  405fd0:	ldrb	w9, [x8]
  405fd4:	cbnz	w9, 406000 <check_fill_0x83_id+0x2d8>
  405fd8:	ldur	x0, [x29, #-16]
  405fdc:	ldur	x8, [x29, #-40]
  405fe0:	add	x1, x8, #0x1
  405fe4:	bl	405958 <append_vendor_model>
  405fe8:	cmp	w0, #0x0
  405fec:	cset	w9, ge  // ge = tcont
  405ff0:	tbnz	w9, #0, 406000 <check_fill_0x83_id+0x2d8>
  405ff4:	mov	w8, #0x1                   	// #1
  405ff8:	stur	w8, [x29, #-4]
  405ffc:	b	406198 <check_fill_0x83_id+0x470>
  406000:	mov	w8, #0x4                   	// #4
  406004:	str	w8, [sp, #76]
  406008:	ldur	x0, [x29, #-40]
  40600c:	bl	401878 <strlen@plt>
  406010:	str	w0, [sp, #72]
  406014:	str	w0, [sp, #68]
  406018:	ldur	x9, [x29, #-24]
  40601c:	ldrb	w8, [x9]
  406020:	and	w8, w8, #0xf
  406024:	cmp	w8, #0x2
  406028:	b.ne	406084 <check_fill_0x83_id+0x35c>  // b.any
  40602c:	ldr	w8, [sp, #76]
  406030:	ldur	x9, [x29, #-24]
  406034:	ldrb	w10, [x9, #3]
  406038:	add	w10, w10, #0x4
  40603c:	cmp	w8, w10
  406040:	b.ge	406080 <check_fill_0x83_id+0x358>  // b.tcont
  406044:	ldur	x8, [x29, #-24]
  406048:	ldrsw	x9, [sp, #76]
  40604c:	mov	w10, w9
  406050:	add	w10, w10, #0x1
  406054:	str	w10, [sp, #76]
  406058:	add	x8, x8, x9
  40605c:	ldrb	w10, [x8]
  406060:	ldur	x8, [x29, #-40]
  406064:	ldrsw	x9, [sp, #72]
  406068:	mov	w11, w9
  40606c:	add	w11, w11, #0x1
  406070:	str	w11, [sp, #72]
  406074:	add	x8, x8, x9
  406078:	strb	w10, [x8]
  40607c:	b	40602c <check_fill_0x83_id+0x304>
  406080:	b	40612c <check_fill_0x83_id+0x404>
  406084:	ldr	w8, [sp, #76]
  406088:	ldur	x9, [x29, #-24]
  40608c:	ldrb	w10, [x9, #3]
  406090:	add	w10, w10, #0x4
  406094:	cmp	w8, w10
  406098:	b.ge	40612c <check_fill_0x83_id+0x404>  // b.tcont
  40609c:	ldur	x8, [x29, #-24]
  4060a0:	ldrsw	x9, [sp, #76]
  4060a4:	ldrb	w10, [x8, x9]
  4060a8:	and	w10, w10, #0xf0
  4060ac:	asr	w10, w10, #4
  4060b0:	mov	w0, w10
  4060b4:	sxtw	x8, w0
  4060b8:	ldr	x9, [sp, #32]
  4060bc:	add	x8, x9, x8
  4060c0:	ldrb	w10, [x8]
  4060c4:	ldur	x8, [x29, #-40]
  4060c8:	ldrsw	x11, [sp, #72]
  4060cc:	mov	w12, w11
  4060d0:	add	w12, w12, #0x1
  4060d4:	str	w12, [sp, #72]
  4060d8:	add	x8, x8, x11
  4060dc:	strb	w10, [x8]
  4060e0:	ldur	x8, [x29, #-24]
  4060e4:	ldrsw	x11, [sp, #76]
  4060e8:	ldrb	w10, [x8, x11]
  4060ec:	and	w10, w10, #0xf
  4060f0:	mov	w0, w10
  4060f4:	sxtw	x8, w0
  4060f8:	add	x8, x9, x8
  4060fc:	ldrb	w10, [x8]
  406100:	ldur	x8, [x29, #-40]
  406104:	ldrsw	x11, [sp, #72]
  406108:	mov	w12, w11
  40610c:	add	w12, w12, #0x1
  406110:	str	w12, [sp, #72]
  406114:	add	x8, x8, x11
  406118:	strb	w10, [x8]
  40611c:	ldr	w10, [sp, #76]
  406120:	add	w10, w10, #0x1
  406124:	str	w10, [sp, #76]
  406128:	b	406084 <check_fill_0x83_id+0x35c>
  40612c:	ldur	x0, [x29, #-48]
  406130:	ldur	x8, [x29, #-40]
  406134:	ldrsw	x9, [sp, #68]
  406138:	add	x1, x8, x9
  40613c:	bl	4018b8 <strcpy@plt>
  406140:	ldur	x8, [x29, #-32]
  406144:	ldrb	w10, [x8]
  406148:	cmp	w10, #0x3
  40614c:	b.ne	406194 <check_fill_0x83_id+0x46c>  // b.any
  406150:	ldur	x8, [x29, #-64]
  406154:	cbz	x8, 406194 <check_fill_0x83_id+0x46c>
  406158:	ldur	x0, [x29, #-64]
  40615c:	ldur	x8, [x29, #-40]
  406160:	ldrsw	x9, [sp, #68]
  406164:	add	x1, x8, x9
  406168:	mov	x2, #0x10                  	// #16
  40616c:	bl	401a38 <strncpy@plt>
  406170:	ldur	x8, [x29, #-72]
  406174:	cbz	x8, 406194 <check_fill_0x83_id+0x46c>
  406178:	ldur	x0, [x29, #-72]
  40617c:	ldur	x8, [x29, #-40]
  406180:	ldrsw	x9, [sp, #68]
  406184:	add	x8, x8, x9
  406188:	add	x1, x8, #0x10
  40618c:	mov	x2, #0x10                  	// #16
  406190:	bl	401a38 <strncpy@plt>
  406194:	stur	wzr, [x29, #-4]
  406198:	ldur	w0, [x29, #-4]
  40619c:	ldp	x29, x30, [sp, #160]
  4061a0:	add	sp, sp, #0xb0
  4061a4:	ret

00000000004061a8 <util_resolve_subsys_kernel>:
  4061a8:	stp	x29, x30, [sp, #-32]!
  4061ac:	str	x28, [sp, #16]
  4061b0:	mov	x29, sp
  4061b4:	sub	sp, sp, #0x500
  4061b8:	mov	x8, xzr
  4061bc:	mov	w9, #0x1                   	// #1
  4061c0:	adrp	x10, 407000 <options+0x178>
  4061c4:	add	x10, x10, #0xa86
  4061c8:	add	x10, x10, #0x3
  4061cc:	stur	x0, [x29, #-16]
  4061d0:	stur	x1, [x29, #-24]
  4061d4:	stur	x2, [x29, #-32]
  4061d8:	and	w9, w3, w9
  4061dc:	sturb	w9, [x29, #-33]
  4061e0:	str	x8, [sp, #184]
  4061e4:	ldur	x8, [x29, #-16]
  4061e8:	ldrb	w9, [x8]
  4061ec:	cmp	w9, #0x5b
  4061f0:	str	x10, [sp, #128]
  4061f4:	b.eq	40620c <util_resolve_subsys_kernel+0x64>  // b.none
  4061f8:	mov	w8, #0xffffffea            	// #-22
  4061fc:	stur	w8, [x29, #-4]
  406200:	mov	w8, #0x1                   	// #1
  406204:	str	w8, [sp, #168]
  406208:	b	4065f4 <util_resolve_subsys_kernel+0x44c>
  40620c:	ldur	x2, [x29, #-16]
  406210:	add	x8, sp, #0xdf
  406214:	mov	x0, x8
  406218:	mov	x1, #0x400                 	// #1024
  40621c:	str	x8, [sp, #120]
  406220:	bl	4018e8 <strscpy@plt>
  406224:	ldr	x8, [sp, #120]
  406228:	add	x9, x8, #0x1
  40622c:	str	x9, [sp, #208]
  406230:	ldr	x9, [sp, #208]
  406234:	mov	x0, x9
  406238:	mov	w1, #0x2f                  	// #47
  40623c:	bl	401a48 <strchr@plt>
  406240:	str	x0, [sp, #200]
  406244:	ldr	x8, [sp, #200]
  406248:	cbnz	x8, 406260 <util_resolve_subsys_kernel+0xb8>
  40624c:	mov	w8, #0xffffffea            	// #-22
  406250:	stur	w8, [x29, #-4]
  406254:	mov	w8, #0x1                   	// #1
  406258:	str	w8, [sp, #168]
  40625c:	b	4065f4 <util_resolve_subsys_kernel+0x44c>
  406260:	ldr	x8, [sp, #200]
  406264:	mov	w9, #0x0                   	// #0
  406268:	strb	w9, [x8]
  40626c:	ldr	x8, [sp, #200]
  406270:	add	x8, x8, #0x1
  406274:	str	x8, [sp, #200]
  406278:	ldr	x0, [sp, #200]
  40627c:	mov	w1, #0x5d                  	// #93
  406280:	bl	401a48 <strchr@plt>
  406284:	str	x0, [sp, #192]
  406288:	ldr	x8, [sp, #192]
  40628c:	cbnz	x8, 4062a4 <util_resolve_subsys_kernel+0xfc>
  406290:	mov	w8, #0xffffffea            	// #-22
  406294:	stur	w8, [x29, #-4]
  406298:	mov	w8, #0x1                   	// #1
  40629c:	str	w8, [sp, #168]
  4062a0:	b	4065f4 <util_resolve_subsys_kernel+0x44c>
  4062a4:	ldr	x8, [sp, #192]
  4062a8:	mov	w9, #0x0                   	// #0
  4062ac:	strb	w9, [x8]
  4062b0:	ldr	x8, [sp, #192]
  4062b4:	add	x8, x8, #0x1
  4062b8:	str	x8, [sp, #192]
  4062bc:	ldr	x8, [sp, #192]
  4062c0:	ldrb	w9, [x8]
  4062c4:	cmp	w9, #0x2f
  4062c8:	b.ne	4062d8 <util_resolve_subsys_kernel+0x130>  // b.any
  4062cc:	ldr	x8, [sp, #192]
  4062d0:	add	x8, x8, #0x1
  4062d4:	str	x8, [sp, #192]
  4062d8:	ldr	x8, [sp, #192]
  4062dc:	ldrb	w9, [x8]
  4062e0:	cbnz	w9, 4062ec <util_resolve_subsys_kernel+0x144>
  4062e4:	mov	x8, xzr
  4062e8:	str	x8, [sp, #192]
  4062ec:	ldurb	w8, [x29, #-33]
  4062f0:	tbnz	w8, #0, 4062f8 <util_resolve_subsys_kernel+0x150>
  4062f4:	b	406314 <util_resolve_subsys_kernel+0x16c>
  4062f8:	ldr	x8, [sp, #192]
  4062fc:	cbnz	x8, 406314 <util_resolve_subsys_kernel+0x16c>
  406300:	mov	w8, #0xffffffea            	// #-22
  406304:	stur	w8, [x29, #-4]
  406308:	mov	w8, #0x1                   	// #1
  40630c:	str	w8, [sp, #168]
  406310:	b	4065f4 <util_resolve_subsys_kernel+0x44c>
  406314:	ldr	x1, [sp, #208]
  406318:	ldr	x2, [sp, #200]
  40631c:	add	x0, sp, #0xb8
  406320:	bl	401a58 <sd_device_new_from_subsystem_sysname@plt>
  406324:	str	w0, [sp, #172]
  406328:	ldr	w8, [sp, #172]
  40632c:	cmp	w8, #0x0
  406330:	cset	w8, ge  // ge = tcont
  406334:	tbnz	w8, #0, 40634c <util_resolve_subsys_kernel+0x1a4>
  406338:	ldr	w8, [sp, #172]
  40633c:	stur	w8, [x29, #-4]
  406340:	mov	w8, #0x1                   	// #1
  406344:	str	w8, [sp, #168]
  406348:	b	4065f4 <util_resolve_subsys_kernel+0x44c>
  40634c:	ldurb	w8, [x29, #-33]
  406350:	tbnz	w8, #0, 406358 <util_resolve_subsys_kernel+0x1b0>
  406354:	b	40646c <util_resolve_subsys_kernel+0x2c4>
  406358:	ldr	x0, [sp, #184]
  40635c:	ldr	x1, [sp, #192]
  406360:	add	x2, sp, #0xb0
  406364:	bl	401a68 <sd_device_get_sysattr_value@plt>
  406368:	str	w0, [sp, #172]
  40636c:	ldr	w8, [sp, #172]
  406370:	cmp	w8, #0x0
  406374:	cset	w8, ge  // ge = tcont
  406378:	tbnz	w8, #0, 4063a0 <util_resolve_subsys_kernel+0x1f8>
  40637c:	ldr	w8, [sp, #172]
  406380:	mov	w9, #0xfffffffe            	// #-2
  406384:	cmp	w8, w9
  406388:	b.eq	4063a0 <util_resolve_subsys_kernel+0x1f8>  // b.none
  40638c:	ldr	w8, [sp, #172]
  406390:	stur	w8, [x29, #-4]
  406394:	mov	w8, #0x1                   	// #1
  406398:	str	w8, [sp, #168]
  40639c:	b	4065f4 <util_resolve_subsys_kernel+0x44c>
  4063a0:	ldr	w8, [sp, #172]
  4063a4:	mov	w9, #0xfffffffe            	// #-2
  4063a8:	cmp	w8, w9
  4063ac:	b.ne	4063c0 <util_resolve_subsys_kernel+0x218>  // b.any
  4063b0:	ldur	x8, [x29, #-24]
  4063b4:	mov	w9, #0x0                   	// #0
  4063b8:	strb	w9, [x8]
  4063bc:	b	4063d0 <util_resolve_subsys_kernel+0x228>
  4063c0:	ldur	x0, [x29, #-24]
  4063c4:	ldur	x1, [x29, #-32]
  4063c8:	ldr	x2, [sp, #176]
  4063cc:	bl	4018e8 <strscpy@plt>
  4063d0:	mov	w8, #0x7                   	// #7
  4063d4:	str	w8, [sp, #164]
  4063d8:	str	wzr, [sp, #160]
  4063dc:	str	wzr, [sp, #156]
  4063e0:	ldr	w0, [sp, #156]
  4063e4:	bl	4017c8 <log_get_max_level_realm@plt>
  4063e8:	ldr	w8, [sp, #164]
  4063ec:	and	w8, w8, #0x7
  4063f0:	cmp	w0, w8
  4063f4:	b.lt	40644c <util_resolve_subsys_kernel+0x2a4>  // b.tstop
  4063f8:	ldr	w8, [sp, #156]
  4063fc:	ldr	w9, [sp, #164]
  406400:	orr	w0, w9, w8, lsl #10
  406404:	ldr	w1, [sp, #160]
  406408:	ldr	x6, [sp, #208]
  40640c:	ldr	x7, [sp, #200]
  406410:	ldr	x10, [sp, #192]
  406414:	ldur	x11, [x29, #-24]
  406418:	ldr	x2, [sp, #128]
  40641c:	mov	w3, #0x42                  	// #66
  406420:	adrp	x4, 407000 <options+0x178>
  406424:	add	x4, x4, #0xaa4
  406428:	adrp	x5, 407000 <options+0x178>
  40642c:	add	x5, x5, #0xabf
  406430:	mov	x12, sp
  406434:	str	x10, [x12]
  406438:	mov	x10, sp
  40643c:	str	x11, [x10, #8]
  406440:	bl	4017d8 <log_internal_realm@plt>
  406444:	str	w0, [sp, #116]
  406448:	b	406460 <util_resolve_subsys_kernel+0x2b8>
  40644c:	ldr	w0, [sp, #160]
  406450:	bl	4017e8 <abs@plt>
  406454:	mov	w8, wzr
  406458:	subs	w8, w8, w0, uxtb
  40645c:	str	w8, [sp, #116]
  406460:	ldr	w8, [sp, #116]
  406464:	str	w8, [sp, #152]
  406468:	b	4065e8 <util_resolve_subsys_kernel+0x440>
  40646c:	ldr	x0, [sp, #184]
  406470:	add	x1, sp, #0xb0
  406474:	bl	401a78 <sd_device_get_syspath@plt>
  406478:	str	w0, [sp, #172]
  40647c:	ldr	w8, [sp, #172]
  406480:	cmp	w8, #0x0
  406484:	cset	w8, ge  // ge = tcont
  406488:	tbnz	w8, #0, 4064a0 <util_resolve_subsys_kernel+0x2f8>
  40648c:	ldr	w8, [sp, #172]
  406490:	stur	w8, [x29, #-4]
  406494:	mov	w8, #0x1                   	// #1
  406498:	str	w8, [sp, #168]
  40649c:	b	4065f4 <util_resolve_subsys_kernel+0x44c>
  4064a0:	ldur	x0, [x29, #-24]
  4064a4:	ldur	x1, [x29, #-32]
  4064a8:	ldr	x2, [sp, #176]
  4064ac:	ldr	x8, [sp, #192]
  4064b0:	mov	x9, xzr
  4064b4:	adrp	x10, 407000 <options+0x178>
  4064b8:	add	x10, x10, #0xad9
  4064bc:	cmp	x8, #0x0
  4064c0:	csel	x3, x10, x9, ne  // ne = any
  4064c4:	ldr	x8, [sp, #192]
  4064c8:	str	x0, [sp, #104]
  4064cc:	str	x1, [sp, #96]
  4064d0:	str	x2, [sp, #88]
  4064d4:	str	x3, [sp, #80]
  4064d8:	str	x8, [sp, #72]
  4064dc:	cbz	x8, 4064ec <util_resolve_subsys_kernel+0x344>
  4064e0:	ldr	x8, [sp, #72]
  4064e4:	str	x8, [sp, #64]
  4064e8:	b	4064f4 <util_resolve_subsys_kernel+0x34c>
  4064ec:	mov	x8, xzr
  4064f0:	str	x8, [sp, #64]
  4064f4:	ldr	x8, [sp, #64]
  4064f8:	ldr	x0, [sp, #104]
  4064fc:	ldr	x1, [sp, #96]
  406500:	ldr	x2, [sp, #88]
  406504:	ldr	x3, [sp, #80]
  406508:	mov	x4, x8
  40650c:	mov	x8, xzr
  406510:	mov	x5, x8
  406514:	bl	401a88 <strscpyl@plt>
  406518:	mov	w9, #0x7                   	// #7
  40651c:	str	w9, [sp, #148]
  406520:	str	wzr, [sp, #144]
  406524:	str	wzr, [sp, #140]
  406528:	ldr	w9, [sp, #140]
  40652c:	mov	w0, w9
  406530:	bl	4017c8 <log_get_max_level_realm@plt>
  406534:	ldr	w9, [sp, #148]
  406538:	and	w9, w9, #0x7
  40653c:	cmp	w0, w9
  406540:	b.lt	4065cc <util_resolve_subsys_kernel+0x424>  // b.tstop
  406544:	ldr	w8, [sp, #140]
  406548:	ldr	w9, [sp, #148]
  40654c:	orr	w0, w9, w8, lsl #10
  406550:	ldr	w1, [sp, #144]
  406554:	ldr	x6, [sp, #208]
  406558:	ldr	x7, [sp, #200]
  40655c:	ldr	x10, [sp, #192]
  406560:	str	w0, [sp, #60]
  406564:	mov	x0, x10
  406568:	str	w1, [sp, #56]
  40656c:	str	x6, [sp, #48]
  406570:	str	x7, [sp, #40]
  406574:	bl	406644 <strempty>
  406578:	ldur	x10, [x29, #-24]
  40657c:	ldr	w8, [sp, #60]
  406580:	str	x0, [sp, #32]
  406584:	mov	w0, w8
  406588:	ldr	w1, [sp, #56]
  40658c:	ldr	x2, [sp, #128]
  406590:	mov	w3, #0x49                  	// #73
  406594:	adrp	x4, 407000 <options+0x178>
  406598:	add	x4, x4, #0xaa4
  40659c:	adrp	x5, 407000 <options+0x178>
  4065a0:	add	x5, x5, #0xadb
  4065a4:	ldr	x6, [sp, #48]
  4065a8:	ldr	x7, [sp, #40]
  4065ac:	mov	x11, sp
  4065b0:	ldr	x12, [sp, #32]
  4065b4:	str	x12, [x11]
  4065b8:	mov	x11, sp
  4065bc:	str	x10, [x11, #8]
  4065c0:	bl	4017d8 <log_internal_realm@plt>
  4065c4:	str	w0, [sp, #28]
  4065c8:	b	4065e0 <util_resolve_subsys_kernel+0x438>
  4065cc:	ldr	w0, [sp, #144]
  4065d0:	bl	4017e8 <abs@plt>
  4065d4:	mov	w8, wzr
  4065d8:	subs	w8, w8, w0, uxtb
  4065dc:	str	w8, [sp, #28]
  4065e0:	ldr	w8, [sp, #28]
  4065e4:	str	w8, [sp, #136]
  4065e8:	stur	wzr, [x29, #-4]
  4065ec:	mov	w8, #0x1                   	// #1
  4065f0:	str	w8, [sp, #168]
  4065f4:	add	x0, sp, #0xb8
  4065f8:	bl	406610 <sd_device_unrefp>
  4065fc:	ldur	w0, [x29, #-4]
  406600:	add	sp, sp, #0x500
  406604:	ldr	x28, [sp, #16]
  406608:	ldp	x29, x30, [sp], #32
  40660c:	ret

0000000000406610 <sd_device_unrefp>:
  406610:	sub	sp, sp, #0x20
  406614:	stp	x29, x30, [sp, #16]
  406618:	add	x29, sp, #0x10
  40661c:	str	x0, [sp, #8]
  406620:	ldr	x8, [sp, #8]
  406624:	ldr	x8, [x8]
  406628:	cbz	x8, 406638 <sd_device_unrefp+0x28>
  40662c:	ldr	x8, [sp, #8]
  406630:	ldr	x0, [x8]
  406634:	bl	401a98 <sd_device_unref@plt>
  406638:	ldp	x29, x30, [sp, #16]
  40663c:	add	sp, sp, #0x20
  406640:	ret

0000000000406644 <strempty>:
  406644:	sub	sp, sp, #0x20
  406648:	str	x0, [sp, #24]
  40664c:	ldr	x8, [sp, #24]
  406650:	str	x8, [sp, #16]
  406654:	cbz	x8, 406664 <strempty+0x20>
  406658:	ldr	x8, [sp, #16]
  40665c:	str	x8, [sp, #8]
  406660:	b	406670 <strempty+0x2c>
  406664:	adrp	x8, 407000 <options+0x178>
  406668:	add	x8, x8, #0xbb6
  40666c:	str	x8, [sp, #8]
  406670:	ldr	x8, [sp, #8]
  406674:	mov	x0, x8
  406678:	add	sp, sp, #0x20
  40667c:	ret

0000000000406680 <util_path_encode>:
  406680:	sub	sp, sp, #0x40
  406684:	stp	x29, x30, [sp, #48]
  406688:	add	x29, sp, #0x30
  40668c:	adrp	x8, 407000 <options+0x178>
  406690:	add	x8, x8, #0xa86
  406694:	add	x8, x8, #0x3
  406698:	stur	x0, [x29, #-8]
  40669c:	stur	x1, [x29, #-16]
  4066a0:	str	x2, [sp, #24]
  4066a4:	str	x8, [sp]
  4066a8:	ldur	x8, [x29, #-8]
  4066ac:	cmp	x8, #0x0
  4066b0:	cset	w9, ne  // ne = any
  4066b4:	mov	w10, #0x1                   	// #1
  4066b8:	eor	w9, w9, #0x1
  4066bc:	eor	w9, w9, w10
  4066c0:	eor	w9, w9, w10
  4066c4:	and	w9, w9, #0x1
  4066c8:	mov	w0, w9
  4066cc:	sxtw	x8, w0
  4066d0:	cbz	x8, 4066f8 <util_path_encode+0x78>
  4066d4:	mov	w8, wzr
  4066d8:	mov	w0, w8
  4066dc:	adrp	x1, 407000 <options+0x178>
  4066e0:	add	x1, x1, #0xaf4
  4066e4:	ldr	x2, [sp]
  4066e8:	mov	w3, #0x51                  	// #81
  4066ec:	adrp	x4, 407000 <options+0x178>
  4066f0:	add	x4, x4, #0xaf8
  4066f4:	bl	4017a8 <log_assert_failed_realm@plt>
  4066f8:	ldur	x8, [x29, #-16]
  4066fc:	cmp	x8, #0x0
  406700:	cset	w9, ne  // ne = any
  406704:	mov	w10, #0x1                   	// #1
  406708:	eor	w9, w9, #0x1
  40670c:	eor	w9, w9, w10
  406710:	eor	w9, w9, w10
  406714:	and	w9, w9, #0x1
  406718:	mov	w0, w9
  40671c:	sxtw	x8, w0
  406720:	cbz	x8, 406748 <util_path_encode+0xc8>
  406724:	mov	w8, wzr
  406728:	mov	w0, w8
  40672c:	adrp	x1, 407000 <options+0x178>
  406730:	add	x1, x1, #0xb2e
  406734:	ldr	x2, [sp]
  406738:	mov	w3, #0x52                  	// #82
  40673c:	adrp	x4, 407000 <options+0x178>
  406740:	add	x4, x4, #0xaf8
  406744:	bl	4017a8 <log_assert_failed_realm@plt>
  406748:	str	xzr, [sp, #16]
  40674c:	str	xzr, [sp, #8]
  406750:	ldur	x8, [x29, #-8]
  406754:	ldr	x9, [sp, #16]
  406758:	ldrb	w10, [x8, x9]
  40675c:	cbz	w10, 406868 <util_path_encode+0x1e8>
  406760:	ldur	x8, [x29, #-8]
  406764:	ldr	x9, [sp, #16]
  406768:	ldrb	w10, [x8, x9]
  40676c:	cmp	w10, #0x2f
  406770:	b.ne	4067b8 <util_path_encode+0x138>  // b.any
  406774:	ldr	x8, [sp, #8]
  406778:	add	x8, x8, #0x4
  40677c:	ldr	x9, [sp, #24]
  406780:	cmp	x8, x9
  406784:	b.cc	406790 <util_path_encode+0x110>  // b.lo, b.ul, b.last
  406788:	str	xzr, [sp, #8]
  40678c:	b	406868 <util_path_encode+0x1e8>
  406790:	ldur	x8, [x29, #-16]
  406794:	ldr	x9, [sp, #8]
  406798:	adrp	x10, 407000 <options+0x178>
  40679c:	add	x10, x10, #0xb33
  4067a0:	ldr	w11, [x10]
  4067a4:	str	w11, [x8, x9]
  4067a8:	ldr	x8, [sp, #8]
  4067ac:	add	x8, x8, #0x4
  4067b0:	str	x8, [sp, #8]
  4067b4:	b	406858 <util_path_encode+0x1d8>
  4067b8:	ldur	x8, [x29, #-8]
  4067bc:	ldr	x9, [sp, #16]
  4067c0:	ldrb	w10, [x8, x9]
  4067c4:	cmp	w10, #0x5c
  4067c8:	b.ne	406810 <util_path_encode+0x190>  // b.any
  4067cc:	ldr	x8, [sp, #8]
  4067d0:	add	x8, x8, #0x4
  4067d4:	ldr	x9, [sp, #24]
  4067d8:	cmp	x8, x9
  4067dc:	b.cc	4067e8 <util_path_encode+0x168>  // b.lo, b.ul, b.last
  4067e0:	str	xzr, [sp, #8]
  4067e4:	b	406868 <util_path_encode+0x1e8>
  4067e8:	ldur	x8, [x29, #-16]
  4067ec:	ldr	x9, [sp, #8]
  4067f0:	adrp	x10, 407000 <options+0x178>
  4067f4:	add	x10, x10, #0xb38
  4067f8:	ldr	w11, [x10]
  4067fc:	str	w11, [x8, x9]
  406800:	ldr	x8, [sp, #8]
  406804:	add	x8, x8, #0x4
  406808:	str	x8, [sp, #8]
  40680c:	b	406858 <util_path_encode+0x1d8>
  406810:	ldr	x8, [sp, #8]
  406814:	add	x8, x8, #0x1
  406818:	ldr	x9, [sp, #24]
  40681c:	cmp	x8, x9
  406820:	b.cc	40682c <util_path_encode+0x1ac>  // b.lo, b.ul, b.last
  406824:	str	xzr, [sp, #8]
  406828:	b	406868 <util_path_encode+0x1e8>
  40682c:	ldur	x8, [x29, #-8]
  406830:	ldr	x9, [sp, #16]
  406834:	add	x8, x8, x9
  406838:	ldrb	w10, [x8]
  40683c:	ldur	x8, [x29, #-16]
  406840:	ldr	x9, [sp, #8]
  406844:	add	x8, x8, x9
  406848:	strb	w10, [x8]
  40684c:	ldr	x8, [sp, #8]
  406850:	add	x8, x8, #0x1
  406854:	str	x8, [sp, #8]
  406858:	ldr	x8, [sp, #16]
  40685c:	add	x8, x8, #0x1
  406860:	str	x8, [sp, #16]
  406864:	b	406750 <util_path_encode+0xd0>
  406868:	ldur	x8, [x29, #-16]
  40686c:	ldr	x9, [sp, #8]
  406870:	add	x8, x8, x9
  406874:	mov	w10, #0x0                   	// #0
  406878:	strb	w10, [x8]
  40687c:	ldr	x0, [sp, #8]
  406880:	ldp	x29, x30, [sp, #48]
  406884:	add	sp, sp, #0x40
  406888:	ret

000000000040688c <util_replace_whitespace>:
  40688c:	sub	sp, sp, #0x50
  406890:	stp	x29, x30, [sp, #64]
  406894:	add	x29, sp, #0x40
  406898:	mov	w8, #0x0                   	// #0
  40689c:	adrp	x9, 407000 <options+0x178>
  4068a0:	add	x9, x9, #0xa86
  4068a4:	add	x9, x9, #0x3
  4068a8:	stur	x0, [x29, #-8]
  4068ac:	stur	x1, [x29, #-16]
  4068b0:	stur	x2, [x29, #-24]
  4068b4:	sturb	w8, [x29, #-25]
  4068b8:	str	x9, [sp, #8]
  4068bc:	ldur	x8, [x29, #-8]
  4068c0:	cmp	x8, #0x0
  4068c4:	cset	w9, ne  // ne = any
  4068c8:	mov	w10, #0x1                   	// #1
  4068cc:	eor	w9, w9, #0x1
  4068d0:	eor	w9, w9, w10
  4068d4:	eor	w9, w9, w10
  4068d8:	and	w9, w9, #0x1
  4068dc:	mov	w0, w9
  4068e0:	sxtw	x8, w0
  4068e4:	cbz	x8, 40690c <util_replace_whitespace+0x80>
  4068e8:	mov	w8, wzr
  4068ec:	mov	w0, w8
  4068f0:	adrp	x1, 407000 <options+0x178>
  4068f4:	add	x1, x1, #0xb3d
  4068f8:	ldr	x2, [sp, #8]
  4068fc:	mov	w3, #0x84                  	// #132
  406900:	adrp	x4, 407000 <options+0x178>
  406904:	add	x4, x4, #0xb41
  406908:	bl	4017a8 <log_assert_failed_realm@plt>
  40690c:	ldur	x8, [x29, #-16]
  406910:	cmp	x8, #0x0
  406914:	cset	w9, ne  // ne = any
  406918:	mov	w10, #0x1                   	// #1
  40691c:	eor	w9, w9, #0x1
  406920:	eor	w9, w9, w10
  406924:	eor	w9, w9, w10
  406928:	and	w9, w9, #0x1
  40692c:	mov	w0, w9
  406930:	sxtw	x8, w0
  406934:	cbz	x8, 40695c <util_replace_whitespace+0xd0>
  406938:	mov	w8, wzr
  40693c:	mov	w0, w8
  406940:	adrp	x1, 407000 <options+0x178>
  406944:	add	x1, x1, #0xb7e
  406948:	ldr	x2, [sp, #8]
  40694c:	mov	w3, #0x85                  	// #133
  406950:	adrp	x4, 407000 <options+0x178>
  406954:	add	x4, x4, #0xb41
  406958:	bl	4017a8 <log_assert_failed_realm@plt>
  40695c:	ldur	x0, [x29, #-8]
  406960:	adrp	x1, 407000 <options+0x178>
  406964:	add	x1, x1, #0xb81
  406968:	bl	401aa8 <strspn@plt>
  40696c:	str	x0, [sp, #24]
  406970:	str	xzr, [sp, #16]
  406974:	ldr	x8, [sp, #16]
  406978:	ldur	x9, [x29, #-24]
  40697c:	mov	w10, #0x0                   	// #0
  406980:	cmp	x8, x9
  406984:	str	w10, [sp, #4]
  406988:	b.cs	4069bc <util_replace_whitespace+0x130>  // b.hs, b.nlast
  40698c:	ldr	x8, [sp, #24]
  406990:	ldur	x9, [x29, #-24]
  406994:	mov	w10, #0x0                   	// #0
  406998:	cmp	x8, x9
  40699c:	str	w10, [sp, #4]
  4069a0:	b.cs	4069bc <util_replace_whitespace+0x130>  // b.hs, b.nlast
  4069a4:	ldur	x8, [x29, #-8]
  4069a8:	ldr	x9, [sp, #24]
  4069ac:	ldrb	w10, [x8, x9]
  4069b0:	cmp	w10, #0x0
  4069b4:	cset	w10, ne  // ne = any
  4069b8:	str	w10, [sp, #4]
  4069bc:	ldr	w8, [sp, #4]
  4069c0:	tbnz	w8, #0, 4069c8 <util_replace_whitespace+0x13c>
  4069c4:	b	406a74 <util_replace_whitespace+0x1e8>
  4069c8:	bl	401888 <__ctype_b_loc@plt>
  4069cc:	ldr	x8, [x0]
  4069d0:	ldur	x9, [x29, #-8]
  4069d4:	ldr	x10, [sp, #24]
  4069d8:	ldrb	w11, [x9, x10]
  4069dc:	ldrh	w11, [x8, w11, sxtw #1]
  4069e0:	and	w11, w11, #0x2000
  4069e4:	cbz	w11, 4069f4 <util_replace_whitespace+0x168>
  4069e8:	mov	w8, #0x1                   	// #1
  4069ec:	sturb	w8, [x29, #-25]
  4069f0:	b	406a64 <util_replace_whitespace+0x1d8>
  4069f4:	ldurb	w8, [x29, #-25]
  4069f8:	tbnz	w8, #0, 406a00 <util_replace_whitespace+0x174>
  4069fc:	b	406a3c <util_replace_whitespace+0x1b0>
  406a00:	ldr	x8, [sp, #16]
  406a04:	add	x8, x8, #0x1
  406a08:	ldur	x9, [x29, #-24]
  406a0c:	cmp	x8, x9
  406a10:	b.cc	406a18 <util_replace_whitespace+0x18c>  // b.lo, b.ul, b.last
  406a14:	b	406a74 <util_replace_whitespace+0x1e8>
  406a18:	ldur	x8, [x29, #-16]
  406a1c:	ldr	x9, [sp, #16]
  406a20:	add	x10, x9, #0x1
  406a24:	str	x10, [sp, #16]
  406a28:	add	x8, x8, x9
  406a2c:	mov	w11, #0x5f                  	// #95
  406a30:	strb	w11, [x8]
  406a34:	mov	w11, #0x0                   	// #0
  406a38:	sturb	w11, [x29, #-25]
  406a3c:	ldur	x8, [x29, #-8]
  406a40:	ldr	x9, [sp, #24]
  406a44:	add	x8, x8, x9
  406a48:	ldrb	w10, [x8]
  406a4c:	ldur	x8, [x29, #-16]
  406a50:	ldr	x9, [sp, #16]
  406a54:	add	x11, x9, #0x1
  406a58:	str	x11, [sp, #16]
  406a5c:	add	x8, x8, x9
  406a60:	strb	w10, [x8]
  406a64:	ldr	x8, [sp, #24]
  406a68:	add	x8, x8, #0x1
  406a6c:	str	x8, [sp, #24]
  406a70:	b	406974 <util_replace_whitespace+0xe8>
  406a74:	ldur	x8, [x29, #-16]
  406a78:	ldr	x9, [sp, #16]
  406a7c:	add	x8, x8, x9
  406a80:	mov	w10, #0x0                   	// #0
  406a84:	strb	w10, [x8]
  406a88:	ldr	x0, [sp, #16]
  406a8c:	ldp	x29, x30, [sp, #64]
  406a90:	add	sp, sp, #0x50
  406a94:	ret

0000000000406a98 <util_replace_chars>:
  406a98:	sub	sp, sp, #0x40
  406a9c:	stp	x29, x30, [sp, #48]
  406aa0:	add	x29, sp, #0x30
  406aa4:	adrp	x8, 407000 <options+0x178>
  406aa8:	add	x8, x8, #0xa86
  406aac:	add	x2, x8, #0x3
  406ab0:	stur	x0, [x29, #-8]
  406ab4:	stur	x1, [x29, #-16]
  406ab8:	str	xzr, [sp, #24]
  406abc:	str	xzr, [sp, #16]
  406ac0:	str	x2, [sp]
  406ac4:	ldur	x8, [x29, #-8]
  406ac8:	cmp	x8, #0x0
  406acc:	cset	w9, ne  // ne = any
  406ad0:	mov	w10, #0x1                   	// #1
  406ad4:	eor	w9, w9, #0x1
  406ad8:	eor	w9, w9, w10
  406adc:	eor	w9, w9, w10
  406ae0:	and	w9, w9, #0x1
  406ae4:	mov	w0, w9
  406ae8:	sxtw	x8, w0
  406aec:	cbz	x8, 406b14 <util_replace_chars+0x7c>
  406af0:	mov	w8, wzr
  406af4:	mov	w0, w8
  406af8:	adrp	x1, 407000 <options+0x178>
  406afc:	add	x1, x1, #0xb3d
  406b00:	ldr	x2, [sp]
  406b04:	mov	w3, #0xa1                  	// #161
  406b08:	adrp	x4, 407000 <options+0x178>
  406b0c:	add	x4, x4, #0xb86
  406b10:	bl	4017a8 <log_assert_failed_realm@plt>
  406b14:	ldur	x8, [x29, #-8]
  406b18:	ldr	x9, [sp, #24]
  406b1c:	ldrb	w10, [x8, x9]
  406b20:	cbz	w10, 406c58 <util_replace_chars+0x1c0>
  406b24:	ldur	x8, [x29, #-8]
  406b28:	ldr	x9, [sp, #24]
  406b2c:	ldrb	w0, [x8, x9]
  406b30:	ldur	x1, [x29, #-16]
  406b34:	bl	401ab8 <whitelisted_char_for_devnode@plt>
  406b38:	cbz	w0, 406b4c <util_replace_chars+0xb4>
  406b3c:	ldr	x8, [sp, #24]
  406b40:	add	x8, x8, #0x1
  406b44:	str	x8, [sp, #24]
  406b48:	b	406b14 <util_replace_chars+0x7c>
  406b4c:	ldur	x8, [x29, #-8]
  406b50:	ldr	x9, [sp, #24]
  406b54:	ldrb	w10, [x8, x9]
  406b58:	cmp	w10, #0x5c
  406b5c:	b.ne	406b88 <util_replace_chars+0xf0>  // b.any
  406b60:	ldur	x8, [x29, #-8]
  406b64:	ldr	x9, [sp, #24]
  406b68:	add	x9, x9, #0x1
  406b6c:	ldrb	w10, [x8, x9]
  406b70:	cmp	w10, #0x78
  406b74:	b.ne	406b88 <util_replace_chars+0xf0>  // b.any
  406b78:	ldr	x8, [sp, #24]
  406b7c:	add	x8, x8, #0x2
  406b80:	str	x8, [sp, #24]
  406b84:	b	406b14 <util_replace_chars+0x7c>
  406b88:	ldur	x8, [x29, #-8]
  406b8c:	ldr	x9, [sp, #24]
  406b90:	add	x0, x8, x9
  406b94:	mov	x1, #0xffffffffffffffff    	// #-1
  406b98:	bl	401ac8 <utf8_encoded_valid_unichar@plt>
  406b9c:	str	w0, [sp, #12]
  406ba0:	ldr	w10, [sp, #12]
  406ba4:	cmp	w10, #0x1
  406ba8:	b.le	406bc0 <util_replace_chars+0x128>
  406bac:	ldrsw	x8, [sp, #12]
  406bb0:	ldr	x9, [sp, #24]
  406bb4:	add	x8, x9, x8
  406bb8:	str	x8, [sp, #24]
  406bbc:	b	406b14 <util_replace_chars+0x7c>
  406bc0:	bl	401888 <__ctype_b_loc@plt>
  406bc4:	ldr	x8, [x0]
  406bc8:	ldur	x9, [x29, #-8]
  406bcc:	ldr	x10, [sp, #24]
  406bd0:	ldrb	w11, [x9, x10]
  406bd4:	ldrh	w11, [x8, w11, sxtw #1]
  406bd8:	and	w11, w11, #0x2000
  406bdc:	cbz	w11, 406c28 <util_replace_chars+0x190>
  406be0:	ldur	x8, [x29, #-16]
  406be4:	cbz	x8, 406c28 <util_replace_chars+0x190>
  406be8:	ldur	x0, [x29, #-16]
  406bec:	mov	w1, #0x20                  	// #32
  406bf0:	bl	401a48 <strchr@plt>
  406bf4:	cbz	x0, 406c28 <util_replace_chars+0x190>
  406bf8:	ldur	x8, [x29, #-8]
  406bfc:	ldr	x9, [sp, #24]
  406c00:	add	x8, x8, x9
  406c04:	mov	w10, #0x20                  	// #32
  406c08:	strb	w10, [x8]
  406c0c:	ldr	x8, [sp, #24]
  406c10:	add	x8, x8, #0x1
  406c14:	str	x8, [sp, #24]
  406c18:	ldr	x8, [sp, #16]
  406c1c:	add	x8, x8, #0x1
  406c20:	str	x8, [sp, #16]
  406c24:	b	406b14 <util_replace_chars+0x7c>
  406c28:	ldur	x8, [x29, #-8]
  406c2c:	ldr	x9, [sp, #24]
  406c30:	add	x8, x8, x9
  406c34:	mov	w10, #0x5f                  	// #95
  406c38:	strb	w10, [x8]
  406c3c:	ldr	x8, [sp, #24]
  406c40:	add	x8, x8, #0x1
  406c44:	str	x8, [sp, #24]
  406c48:	ldr	x8, [sp, #16]
  406c4c:	add	x8, x8, #0x1
  406c50:	str	x8, [sp, #16]
  406c54:	b	406b14 <util_replace_chars+0x7c>
  406c58:	ldr	x0, [sp, #16]
  406c5c:	ldp	x29, x30, [sp, #48]
  406c60:	add	sp, sp, #0x40
  406c64:	ret

0000000000406c68 <udev_util_encode_string>:
  406c68:	sub	sp, sp, #0x30
  406c6c:	stp	x29, x30, [sp, #32]
  406c70:	add	x29, sp, #0x20
  406c74:	stur	x0, [x29, #-8]
  406c78:	str	x1, [sp, #16]
  406c7c:	str	x2, [sp, #8]
  406c80:	ldur	x0, [x29, #-8]
  406c84:	ldr	x1, [sp, #16]
  406c88:	ldr	x2, [sp, #8]
  406c8c:	bl	401ad8 <encode_devnode_name@plt>
  406c90:	ldp	x29, x30, [sp, #32]
  406c94:	add	sp, sp, #0x30
  406c98:	ret
  406c9c:	udf	#0

0000000000406ca0 <__libc_csu_init>:
  406ca0:	stp	x29, x30, [sp, #-64]!
  406ca4:	mov	x29, sp
  406ca8:	stp	x19, x20, [sp, #16]
  406cac:	adrp	x20, 41f000 <__FRAME_END__+0x17250>
  406cb0:	add	x20, x20, #0xbe0
  406cb4:	stp	x21, x22, [sp, #32]
  406cb8:	adrp	x21, 41f000 <__FRAME_END__+0x17250>
  406cbc:	add	x21, x21, #0xbd8
  406cc0:	sub	x20, x20, x21
  406cc4:	mov	w22, w0
  406cc8:	stp	x23, x24, [sp, #48]
  406ccc:	mov	x23, x1
  406cd0:	mov	x24, x2
  406cd4:	bl	401710 <_init>
  406cd8:	cmp	xzr, x20, asr #3
  406cdc:	b.eq	406d08 <__libc_csu_init+0x68>  // b.none
  406ce0:	asr	x20, x20, #3
  406ce4:	mov	x19, #0x0                   	// #0
  406ce8:	ldr	x3, [x21, x19, lsl #3]
  406cec:	mov	x2, x24
  406cf0:	add	x19, x19, #0x1
  406cf4:	mov	x1, x23
  406cf8:	mov	w0, w22
  406cfc:	blr	x3
  406d00:	cmp	x20, x19
  406d04:	b.ne	406ce8 <__libc_csu_init+0x48>  // b.any
  406d08:	ldp	x19, x20, [sp, #16]
  406d0c:	ldp	x21, x22, [sp, #32]
  406d10:	ldp	x23, x24, [sp, #48]
  406d14:	ldp	x29, x30, [sp], #64
  406d18:	ret
  406d1c:	nop

0000000000406d20 <__libc_csu_fini>:
  406d20:	ret
  406d24:	udf	#0

0000000000406d28 <fstat64>:
  406d28:	mov	x2, x1
  406d2c:	mov	w1, w0
  406d30:	mov	w0, #0x0                   	// #0
  406d34:	b	401ae8 <__fxstat64@plt>

Disassembly of section .fini:

0000000000406d38 <_fini>:
  406d38:	stp	x29, x30, [sp, #-16]!
  406d3c:	mov	x29, sp
  406d40:	ldp	x29, x30, [sp], #16
  406d44:	ret
