
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-update-utmp_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400e88 <_init>:
  400e88:	stp	x29, x30, [sp, #-16]!
  400e8c:	mov	x29, sp
  400e90:	bl	4010e0 <call_weak_fn>
  400e94:	ldp	x29, x30, [sp], #16
  400e98:	ret

Disassembly of section .plt:

0000000000400ea0 <__libc_start_main@plt-0x20>:
  400ea0:	stp	x16, x30, [sp, #-16]!
  400ea4:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400ea8:	ldr	x17, [x16, #3856]
  400eac:	add	x16, x16, #0xf10
  400eb0:	br	x17
  400eb4:	nop
  400eb8:	nop
  400ebc:	nop

0000000000400ec0 <__libc_start_main@plt>:
  400ec0:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400ec4:	ldr	x17, [x16, #3864]
  400ec8:	add	x16, x16, #0xf18
  400ecc:	br	x17

0000000000400ed0 <abort@plt>:
  400ed0:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400ed4:	ldr	x17, [x16, #3872]
  400ed8:	add	x16, x16, #0xf20
  400edc:	br	x17

0000000000400ee0 <__gmon_start__@plt>:
  400ee0:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400ee4:	ldr	x17, [x16, #3880]
  400ee8:	add	x16, x16, #0xf28
  400eec:	br	x17

0000000000400ef0 <ask_password_agent_close@plt>:
  400ef0:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400ef4:	ldr	x17, [x16, #3888]
  400ef8:	add	x16, x16, #0xf30
  400efc:	br	x17

0000000000400f00 <polkit_agent_close@plt>:
  400f00:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400f04:	ldr	x17, [x16, #3896]
  400f08:	add	x16, x16, #0xf38
  400f0c:	br	x17

0000000000400f10 <pager_close@plt>:
  400f10:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400f14:	ldr	x17, [x16, #3904]
  400f18:	add	x16, x16, #0xf40
  400f1c:	br	x17

0000000000400f20 <mac_selinux_finish@plt>:
  400f20:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400f24:	ldr	x17, [x16, #3912]
  400f28:	add	x16, x16, #0xf48
  400f2c:	br	x17

0000000000400f30 <getppid@plt>:
  400f30:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400f34:	ldr	x17, [x16, #3920]
  400f38:	add	x16, x16, #0xf50
  400f3c:	br	x17

0000000000400f40 <log_get_max_level_realm@plt>:
  400f40:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400f44:	ldr	x17, [x16, #3928]
  400f48:	add	x16, x16, #0xf58
  400f4c:	br	x17

0000000000400f50 <log_internal_realm@plt>:
  400f50:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400f54:	ldr	x17, [x16, #3936]
  400f58:	add	x16, x16, #0xf60
  400f5c:	br	x17

0000000000400f60 <abs@plt>:
  400f60:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400f64:	ldr	x17, [x16, #3944]
  400f68:	add	x16, x16, #0xf68
  400f6c:	br	x17

0000000000400f70 <log_setup_service@plt>:
  400f70:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400f74:	ldr	x17, [x16, #3952]
  400f78:	add	x16, x16, #0xf70
  400f7c:	br	x17

0000000000400f80 <umask@plt>:
  400f80:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400f84:	ldr	x17, [x16, #3960]
  400f88:	add	x16, x16, #0xf78
  400f8c:	br	x17

0000000000400f90 <bus_connect_system_systemd@plt>:
  400f90:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400f94:	ldr	x17, [x16, #3968]
  400f98:	add	x16, x16, #0xf80
  400f9c:	br	x17

0000000000400fa0 <strcmp@plt>:
  400fa0:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400fa4:	ldr	x17, [x16, #3976]
  400fa8:	add	x16, x16, #0xf88
  400fac:	br	x17

0000000000400fb0 <log_assert_failed_realm@plt>:
  400fb0:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400fb4:	ldr	x17, [x16, #3984]
  400fb8:	add	x16, x16, #0xf90
  400fbc:	br	x17

0000000000400fc0 <sd_bus_flush_close_unref@plt>:
  400fc0:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400fc4:	ldr	x17, [x16, #3992]
  400fc8:	add	x16, x16, #0xf98
  400fcc:	br	x17

0000000000400fd0 <utmp_put_reboot@plt>:
  400fd0:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400fd4:	ldr	x17, [x16, #4000]
  400fd8:	add	x16, x16, #0xfa0
  400fdc:	br	x17

0000000000400fe0 <utmp_put_shutdown@plt>:
  400fe0:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400fe4:	ldr	x17, [x16, #4008]
  400fe8:	add	x16, x16, #0xfa8
  400fec:	br	x17

0000000000400ff0 <utmp_get_runlevel@plt>:
  400ff0:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  400ff4:	ldr	x17, [x16, #4016]
  400ff8:	add	x16, x16, #0xfb0
  400ffc:	br	x17

0000000000401000 <utmp_put_runlevel@plt>:
  401000:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  401004:	ldr	x17, [x16, #4024]
  401008:	add	x16, x16, #0xfb8
  40100c:	br	x17

0000000000401010 <sd_bus_get_property_trivial@plt>:
  401010:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  401014:	ldr	x17, [x16, #4032]
  401018:	add	x16, x16, #0xfc0
  40101c:	br	x17

0000000000401020 <bus_error_message@plt>:
  401020:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  401024:	ldr	x17, [x16, #4040]
  401028:	add	x16, x16, #0xfc8
  40102c:	br	x17

0000000000401030 <sd_bus_error_free@plt>:
  401030:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  401034:	ldr	x17, [x16, #4048]
  401038:	add	x16, x16, #0xfd0
  40103c:	br	x17

0000000000401040 <unit_dbus_path_from_name@plt>:
  401040:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  401044:	ldr	x17, [x16, #4056]
  401048:	add	x16, x16, #0xfd8
  40104c:	br	x17

0000000000401050 <log_oom_internal@plt>:
  401050:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  401054:	ldr	x17, [x16, #4064]
  401058:	add	x16, x16, #0xfe0
  40105c:	br	x17

0000000000401060 <sd_bus_get_property_string@plt>:
  401060:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  401064:	ldr	x17, [x16, #4072]
  401068:	add	x16, x16, #0xfe8
  40106c:	br	x17

0000000000401070 <strv_find@plt>:
  401070:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  401074:	ldr	x17, [x16, #4080]
  401078:	add	x16, x16, #0xff0
  40107c:	br	x17

0000000000401080 <free@plt>:
  401080:	adrp	x16, 41f000 <__FRAME_END__+0x1c8e0>
  401084:	ldr	x17, [x16, #4088]
  401088:	add	x16, x16, #0xff8
  40108c:	br	x17

Disassembly of section .text:

0000000000401090 <_start>:
  401090:	mov	x29, #0x0                   	// #0
  401094:	mov	x30, #0x0                   	// #0
  401098:	mov	x5, x0
  40109c:	ldr	x1, [sp]
  4010a0:	add	x2, sp, #0x8
  4010a4:	mov	x6, sp
  4010a8:	movz	x0, #0x0, lsl #48
  4010ac:	movk	x0, #0x0, lsl #32
  4010b0:	movk	x0, #0x40, lsl #16
  4010b4:	movk	x0, #0x1258
  4010b8:	movz	x3, #0x0, lsl #48
  4010bc:	movk	x3, #0x0, lsl #32
  4010c0:	movk	x3, #0x40, lsl #16
  4010c4:	movk	x3, #0x21c0
  4010c8:	movz	x4, #0x0, lsl #48
  4010cc:	movk	x4, #0x0, lsl #32
  4010d0:	movk	x4, #0x40, lsl #16
  4010d4:	movk	x4, #0x2240
  4010d8:	bl	400ec0 <__libc_start_main@plt>
  4010dc:	bl	400ed0 <abort@plt>

00000000004010e0 <call_weak_fn>:
  4010e0:	adrp	x0, 41f000 <__FRAME_END__+0x1c8e0>
  4010e4:	ldr	x0, [x0, #3816]
  4010e8:	cbz	x0, 4010f0 <call_weak_fn+0x10>
  4010ec:	b	400ee0 <__gmon_start__@plt>
  4010f0:	ret

00000000004010f4 <deregister_tm_clones>:
  4010f4:	stp	x29, x30, [sp, #-32]!
  4010f8:	mov	x29, sp
  4010fc:	adrp	x0, 420000 <__TMC_END__>
  401100:	add	x0, x0, #0x0
  401104:	str	x0, [sp, #24]
  401108:	ldr	x0, [sp, #24]
  40110c:	str	x0, [sp, #24]
  401110:	ldr	x1, [sp, #24]
  401114:	adrp	x0, 420000 <__TMC_END__>
  401118:	add	x0, x0, #0x0
  40111c:	cmp	x1, x0
  401120:	b.eq	40115c <deregister_tm_clones+0x68>  // b.none
  401124:	adrp	x0, 402000 <get_current_runlevel+0x14c>
  401128:	add	x0, x0, #0x260
  40112c:	ldr	x0, [x0]
  401130:	str	x0, [sp, #16]
  401134:	ldr	x0, [sp, #16]
  401138:	str	x0, [sp, #16]
  40113c:	ldr	x0, [sp, #16]
  401140:	cmp	x0, #0x0
  401144:	b.eq	401160 <deregister_tm_clones+0x6c>  // b.none
  401148:	ldr	x1, [sp, #16]
  40114c:	adrp	x0, 420000 <__TMC_END__>
  401150:	add	x0, x0, #0x0
  401154:	blr	x1
  401158:	b	401160 <deregister_tm_clones+0x6c>
  40115c:	nop
  401160:	ldp	x29, x30, [sp], #32
  401164:	ret

0000000000401168 <register_tm_clones>:
  401168:	stp	x29, x30, [sp, #-48]!
  40116c:	mov	x29, sp
  401170:	adrp	x0, 420000 <__TMC_END__>
  401174:	add	x0, x0, #0x0
  401178:	str	x0, [sp, #40]
  40117c:	ldr	x0, [sp, #40]
  401180:	str	x0, [sp, #40]
  401184:	ldr	x1, [sp, #40]
  401188:	adrp	x0, 420000 <__TMC_END__>
  40118c:	add	x0, x0, #0x0
  401190:	sub	x0, x1, x0
  401194:	asr	x0, x0, #3
  401198:	lsr	x1, x0, #63
  40119c:	add	x0, x1, x0
  4011a0:	asr	x0, x0, #1
  4011a4:	str	x0, [sp, #32]
  4011a8:	ldr	x0, [sp, #32]
  4011ac:	cmp	x0, #0x0
  4011b0:	b.eq	4011f0 <register_tm_clones+0x88>  // b.none
  4011b4:	adrp	x0, 402000 <get_current_runlevel+0x14c>
  4011b8:	add	x0, x0, #0x268
  4011bc:	ldr	x0, [x0]
  4011c0:	str	x0, [sp, #24]
  4011c4:	ldr	x0, [sp, #24]
  4011c8:	str	x0, [sp, #24]
  4011cc:	ldr	x0, [sp, #24]
  4011d0:	cmp	x0, #0x0
  4011d4:	b.eq	4011f4 <register_tm_clones+0x8c>  // b.none
  4011d8:	ldr	x2, [sp, #24]
  4011dc:	ldr	x1, [sp, #32]
  4011e0:	adrp	x0, 420000 <__TMC_END__>
  4011e4:	add	x0, x0, #0x0
  4011e8:	blr	x2
  4011ec:	b	4011f4 <register_tm_clones+0x8c>
  4011f0:	nop
  4011f4:	ldp	x29, x30, [sp], #48
  4011f8:	ret

00000000004011fc <__do_global_dtors_aux>:
  4011fc:	stp	x29, x30, [sp, #-16]!
  401200:	mov	x29, sp
  401204:	adrp	x0, 420000 <__TMC_END__>
  401208:	add	x0, x0, #0x18
  40120c:	ldrb	w0, [x0]
  401210:	and	x0, x0, #0xff
  401214:	cmp	x0, #0x0
  401218:	b.ne	401234 <__do_global_dtors_aux+0x38>  // b.any
  40121c:	bl	4010f4 <deregister_tm_clones>
  401220:	adrp	x0, 420000 <__TMC_END__>
  401224:	add	x0, x0, #0x18
  401228:	mov	w1, #0x1                   	// #1
  40122c:	strb	w1, [x0]
  401230:	b	401238 <__do_global_dtors_aux+0x3c>
  401234:	nop
  401238:	ldp	x29, x30, [sp], #16
  40123c:	ret

0000000000401240 <frame_dummy>:
  401240:	stp	x29, x30, [sp, #-16]!
  401244:	mov	x29, sp
  401248:	bl	401168 <register_tm_clones>
  40124c:	nop
  401250:	ldp	x29, x30, [sp], #16
  401254:	ret

0000000000401258 <main>:
  401258:	sub	sp, sp, #0x30
  40125c:	stp	x29, x30, [sp, #32]
  401260:	add	x29, sp, #0x20
  401264:	mov	w8, wzr
  401268:	mov	w9, #0x1                   	// #1
  40126c:	stur	wzr, [x29, #-4]
  401270:	stur	w0, [x29, #-8]
  401274:	str	x1, [sp, #16]
  401278:	ldur	w0, [x29, #-8]
  40127c:	ldr	x1, [sp, #16]
  401280:	str	w8, [sp, #8]
  401284:	str	w9, [sp, #4]
  401288:	bl	4012d0 <save_argc_argv>
  40128c:	ldur	w0, [x29, #-8]
  401290:	ldr	x1, [sp, #16]
  401294:	bl	401304 <run>
  401298:	str	w0, [sp, #12]
  40129c:	bl	400ef0 <ask_password_agent_close@plt>
  4012a0:	bl	400f00 <polkit_agent_close@plt>
  4012a4:	bl	400f10 <pager_close@plt>
  4012a8:	bl	400f20 <mac_selinux_finish@plt>
  4012ac:	bl	401664 <static_destruct>
  4012b0:	ldr	w8, [sp, #12]
  4012b4:	cmp	w8, #0x0
  4012b8:	ldr	w8, [sp, #4]
  4012bc:	ldr	w9, [sp, #8]
  4012c0:	csel	w0, w8, w9, lt  // lt = tstop
  4012c4:	ldp	x29, x30, [sp, #32]
  4012c8:	add	sp, sp, #0x30
  4012cc:	ret

00000000004012d0 <save_argc_argv>:
  4012d0:	sub	sp, sp, #0x10
  4012d4:	adrp	x8, 420000 <__TMC_END__>
  4012d8:	add	x8, x8, #0x20
  4012dc:	adrp	x9, 420000 <__TMC_END__>
  4012e0:	add	x9, x9, #0x28
  4012e4:	str	w0, [sp, #12]
  4012e8:	str	x1, [sp]
  4012ec:	ldr	w10, [sp, #12]
  4012f0:	str	w10, [x8]
  4012f4:	ldr	x8, [sp]
  4012f8:	str	x8, [x9]
  4012fc:	add	sp, sp, #0x10
  401300:	ret

0000000000401304 <run>:
  401304:	sub	sp, sp, #0x90
  401308:	stp	x29, x30, [sp, #128]
  40130c:	add	x29, sp, #0x80
  401310:	adrp	x8, 402000 <get_current_runlevel+0x14c>
  401314:	add	x8, x8, #0x2f0
  401318:	add	x8, x8, #0x3
  40131c:	adrp	x9, 402000 <get_current_runlevel+0x14c>
  401320:	add	x9, x9, #0x311
  401324:	stur	w0, [x29, #-8]
  401328:	stur	x1, [x29, #-16]
  40132c:	stur	xzr, [x29, #-24]
  401330:	str	x8, [sp, #24]
  401334:	str	x9, [sp, #16]
  401338:	bl	400f30 <getppid@plt>
  40133c:	cmp	w0, #0x1
  401340:	b.eq	4013d4 <run+0xd0>  // b.none
  401344:	mov	w8, #0x3                   	// #3
  401348:	stur	w8, [x29, #-32]
  40134c:	mov	w8, #0x16                  	// #22
  401350:	movk	w8, #0x4000, lsl #16
  401354:	stur	w8, [x29, #-36]
  401358:	stur	wzr, [x29, #-40]
  40135c:	ldur	w0, [x29, #-40]
  401360:	bl	400f40 <log_get_max_level_realm@plt>
  401364:	ldur	w8, [x29, #-32]
  401368:	and	w8, w8, #0x7
  40136c:	cmp	w0, w8
  401370:	b.lt	4013a4 <run+0xa0>  // b.tstop
  401374:	ldur	w8, [x29, #-40]
  401378:	ldur	w9, [x29, #-32]
  40137c:	orr	w0, w9, w8, lsl #10
  401380:	ldur	w1, [x29, #-36]
  401384:	ldr	x2, [sp, #24]
  401388:	mov	w3, #0xe6                  	// #230
  40138c:	ldr	x4, [sp, #16]
  401390:	adrp	x5, 402000 <get_current_runlevel+0x14c>
  401394:	add	x5, x5, #0x315
  401398:	bl	400f50 <log_internal_realm@plt>
  40139c:	str	w0, [sp, #12]
  4013a0:	b	4013b8 <run+0xb4>
  4013a4:	ldur	w0, [x29, #-36]
  4013a8:	bl	400f60 <abs@plt>
  4013ac:	mov	w8, wzr
  4013b0:	subs	w8, w8, w0, uxtb
  4013b4:	str	w8, [sp, #12]
  4013b8:	ldr	w8, [sp, #12]
  4013bc:	stur	w8, [x29, #-44]
  4013c0:	ldur	w8, [x29, #-44]
  4013c4:	stur	w8, [x29, #-4]
  4013c8:	mov	w8, #0x1                   	// #1
  4013cc:	stur	w8, [x29, #-48]
  4013d0:	b	40164c <run+0x348>
  4013d4:	ldur	w8, [x29, #-8]
  4013d8:	cmp	w8, #0x2
  4013dc:	b.eq	401470 <run+0x16c>  // b.none
  4013e0:	mov	w8, #0x3                   	// #3
  4013e4:	stur	w8, [x29, #-52]
  4013e8:	mov	w8, #0x16                  	// #22
  4013ec:	movk	w8, #0x4000, lsl #16
  4013f0:	stur	w8, [x29, #-56]
  4013f4:	stur	wzr, [x29, #-60]
  4013f8:	ldur	w0, [x29, #-60]
  4013fc:	bl	400f40 <log_get_max_level_realm@plt>
  401400:	ldur	w8, [x29, #-52]
  401404:	and	w8, w8, #0x7
  401408:	cmp	w0, w8
  40140c:	b.lt	401440 <run+0x13c>  // b.tstop
  401410:	ldur	w8, [x29, #-60]
  401414:	ldur	w9, [x29, #-52]
  401418:	orr	w0, w9, w8, lsl #10
  40141c:	ldur	w1, [x29, #-56]
  401420:	ldr	x2, [sp, #24]
  401424:	mov	w3, #0xe9                  	// #233
  401428:	ldr	x4, [sp, #16]
  40142c:	adrp	x5, 402000 <get_current_runlevel+0x14c>
  401430:	add	x5, x5, #0x342
  401434:	bl	400f50 <log_internal_realm@plt>
  401438:	str	w0, [sp, #8]
  40143c:	b	401454 <run+0x150>
  401440:	ldur	w0, [x29, #-56]
  401444:	bl	400f60 <abs@plt>
  401448:	mov	w8, wzr
  40144c:	subs	w8, w8, w0, uxtb
  401450:	str	w8, [sp, #8]
  401454:	ldr	w8, [sp, #8]
  401458:	str	w8, [sp, #64]
  40145c:	ldr	w8, [sp, #64]
  401460:	stur	w8, [x29, #-4]
  401464:	mov	w8, #0x1                   	// #1
  401468:	stur	w8, [x29, #-48]
  40146c:	b	40164c <run+0x348>
  401470:	bl	400f70 <log_setup_service@plt>
  401474:	mov	w0, #0x12                  	// #18
  401478:	bl	400f80 <umask@plt>
  40147c:	sub	x8, x29, #0x18
  401480:	mov	x0, x8
  401484:	bl	400f90 <bus_connect_system_systemd@plt>
  401488:	stur	w0, [x29, #-28]
  40148c:	ldur	w9, [x29, #-28]
  401490:	cmp	w9, #0x0
  401494:	cset	w9, ge  // ge = tcont
  401498:	tbnz	w9, #0, 401528 <run+0x224>
  40149c:	mov	w8, #0x3                   	// #3
  4014a0:	str	w8, [sp, #60]
  4014a4:	ldur	w8, [x29, #-28]
  4014a8:	str	w8, [sp, #56]
  4014ac:	str	wzr, [sp, #52]
  4014b0:	ldr	w0, [sp, #52]
  4014b4:	bl	400f40 <log_get_max_level_realm@plt>
  4014b8:	ldr	w8, [sp, #60]
  4014bc:	and	w8, w8, #0x7
  4014c0:	cmp	w0, w8
  4014c4:	b.lt	4014f8 <run+0x1f4>  // b.tstop
  4014c8:	ldr	w8, [sp, #52]
  4014cc:	ldr	w9, [sp, #60]
  4014d0:	orr	w0, w9, w8, lsl #10
  4014d4:	ldr	w1, [sp, #56]
  4014d8:	ldr	x2, [sp, #24]
  4014dc:	mov	w3, #0xf8                  	// #248
  4014e0:	ldr	x4, [sp, #16]
  4014e4:	adrp	x5, 402000 <get_current_runlevel+0x14c>
  4014e8:	add	x5, x5, #0x366
  4014ec:	bl	400f50 <log_internal_realm@plt>
  4014f0:	str	w0, [sp, #4]
  4014f4:	b	40150c <run+0x208>
  4014f8:	ldr	w0, [sp, #56]
  4014fc:	bl	400f60 <abs@plt>
  401500:	mov	w8, wzr
  401504:	subs	w8, w8, w0, uxtb
  401508:	str	w8, [sp, #4]
  40150c:	ldr	w8, [sp, #4]
  401510:	str	w8, [sp, #48]
  401514:	ldr	w8, [sp, #48]
  401518:	stur	w8, [x29, #-4]
  40151c:	mov	w8, #0x1                   	// #1
  401520:	stur	w8, [x29, #-48]
  401524:	b	40164c <run+0x348>
  401528:	ldur	x8, [x29, #-16]
  40152c:	ldr	x0, [x8, #8]
  401530:	adrp	x1, 402000 <get_current_runlevel+0x14c>
  401534:	add	x1, x1, #0x389
  401538:	bl	400fa0 <strcmp@plt>
  40153c:	cbnz	w0, 401558 <run+0x254>
  401540:	sub	x0, x29, #0x18
  401544:	bl	401774 <on_reboot>
  401548:	stur	w0, [x29, #-4]
  40154c:	mov	w8, #0x1                   	// #1
  401550:	stur	w8, [x29, #-48]
  401554:	b	40164c <run+0x348>
  401558:	ldur	x8, [x29, #-16]
  40155c:	ldr	x0, [x8, #8]
  401560:	adrp	x1, 402000 <get_current_runlevel+0x14c>
  401564:	add	x1, x1, #0x390
  401568:	bl	400fa0 <strcmp@plt>
  40156c:	cbnz	w0, 401588 <run+0x284>
  401570:	sub	x0, x29, #0x18
  401574:	bl	4018a4 <on_shutdown>
  401578:	stur	w0, [x29, #-4]
  40157c:	mov	w8, #0x1                   	// #1
  401580:	stur	w8, [x29, #-48]
  401584:	b	40164c <run+0x348>
  401588:	ldur	x8, [x29, #-16]
  40158c:	ldr	x0, [x8, #8]
  401590:	adrp	x1, 402000 <get_current_runlevel+0x14c>
  401594:	add	x1, x1, #0x399
  401598:	bl	400fa0 <strcmp@plt>
  40159c:	cbnz	w0, 4015b8 <run+0x2b4>
  4015a0:	sub	x0, x29, #0x18
  4015a4:	bl	4019c4 <on_runlevel>
  4015a8:	stur	w0, [x29, #-4]
  4015ac:	mov	w8, #0x1                   	// #1
  4015b0:	stur	w8, [x29, #-48]
  4015b4:	b	40164c <run+0x348>
  4015b8:	mov	w8, #0x3                   	// #3
  4015bc:	str	w8, [sp, #44]
  4015c0:	mov	w8, #0x16                  	// #22
  4015c4:	movk	w8, #0x4000, lsl #16
  4015c8:	str	w8, [sp, #40]
  4015cc:	str	wzr, [sp, #36]
  4015d0:	ldr	w0, [sp, #36]
  4015d4:	bl	400f40 <log_get_max_level_realm@plt>
  4015d8:	ldr	w8, [sp, #44]
  4015dc:	and	w8, w8, #0x7
  4015e0:	cmp	w0, w8
  4015e4:	b.lt	401620 <run+0x31c>  // b.tstop
  4015e8:	ldr	w8, [sp, #36]
  4015ec:	ldr	w9, [sp, #44]
  4015f0:	orr	w0, w9, w8, lsl #10
  4015f4:	ldr	w1, [sp, #40]
  4015f8:	ldur	x10, [x29, #-16]
  4015fc:	ldr	x6, [x10, #8]
  401600:	ldr	x2, [sp, #24]
  401604:	mov	w3, #0x100                 	// #256
  401608:	ldr	x4, [sp, #16]
  40160c:	adrp	x5, 402000 <get_current_runlevel+0x14c>
  401610:	add	x5, x5, #0x3a2
  401614:	bl	400f50 <log_internal_realm@plt>
  401618:	str	w0, [sp]
  40161c:	b	401634 <run+0x330>
  401620:	ldr	w0, [sp, #40]
  401624:	bl	400f60 <abs@plt>
  401628:	mov	w8, wzr
  40162c:	subs	w8, w8, w0, uxtb
  401630:	str	w8, [sp]
  401634:	ldr	w8, [sp]
  401638:	str	w8, [sp, #32]
  40163c:	ldr	w8, [sp, #32]
  401640:	stur	w8, [x29, #-4]
  401644:	mov	w8, #0x1                   	// #1
  401648:	stur	w8, [x29, #-48]
  40164c:	sub	x0, x29, #0x18
  401650:	bl	4016e4 <context_clear>
  401654:	ldur	w0, [x29, #-4]
  401658:	ldp	x29, x30, [sp, #128]
  40165c:	add	sp, sp, #0x90
  401660:	ret

0000000000401664 <static_destruct>:
  401664:	sub	sp, sp, #0x20
  401668:	stp	x29, x30, [sp, #16]
  40166c:	add	x29, sp, #0x10
  401670:	adrp	x8, 41f000 <__FRAME_END__+0x1c8e0>
  401674:	ldr	x8, [x8, #3824]
  401678:	str	x8, [sp]
  40167c:	cbnz	x8, 401684 <static_destruct+0x20>
  401680:	b	4016d8 <static_destruct+0x74>
  401684:	ldr	x0, [sp]
  401688:	mov	x1, #0x8                   	// #8
  40168c:	bl	40218c <ALIGN_TO>
  401690:	str	x0, [sp, #8]
  401694:	ldr	x8, [sp, #8]
  401698:	adrp	x9, 41f000 <__FRAME_END__+0x1c8e0>
  40169c:	ldr	x9, [x9, #3832]
  4016a0:	cmp	x8, x9
  4016a4:	b.cs	4016d8 <static_destruct+0x74>  // b.hs, b.nlast
  4016a8:	ldr	x8, [sp, #8]
  4016ac:	ldr	x8, [x8, #8]
  4016b0:	ldr	x9, [sp, #8]
  4016b4:	ldr	x0, [x9]
  4016b8:	blr	x8
  4016bc:	ldr	x8, [sp, #8]
  4016c0:	add	x8, x8, #0x10
  4016c4:	mov	x0, x8
  4016c8:	mov	x1, #0x8                   	// #8
  4016cc:	bl	40218c <ALIGN_TO>
  4016d0:	str	x0, [sp, #8]
  4016d4:	b	401694 <static_destruct+0x30>
  4016d8:	ldp	x29, x30, [sp, #16]
  4016dc:	add	sp, sp, #0x20
  4016e0:	ret

00000000004016e4 <context_clear>:
  4016e4:	sub	sp, sp, #0x20
  4016e8:	stp	x29, x30, [sp, #16]
  4016ec:	add	x29, sp, #0x10
  4016f0:	adrp	x8, 402000 <get_current_runlevel+0x14c>
  4016f4:	add	x8, x8, #0x2f0
  4016f8:	add	x2, x8, #0x3
  4016fc:	str	x0, [sp, #8]
  401700:	str	x2, [sp]
  401704:	ldr	x8, [sp, #8]
  401708:	cmp	x8, #0x0
  40170c:	cset	w9, ne  // ne = any
  401710:	mov	w10, #0x1                   	// #1
  401714:	eor	w9, w9, #0x1
  401718:	eor	w9, w9, w10
  40171c:	eor	w9, w9, w10
  401720:	and	w9, w9, #0x1
  401724:	mov	w0, w9
  401728:	sxtw	x8, w0
  40172c:	cbz	x8, 401754 <context_clear+0x70>
  401730:	mov	w8, wzr
  401734:	mov	w0, w8
  401738:	adrp	x1, 402000 <get_current_runlevel+0x14c>
  40173c:	add	x1, x1, #0x3b5
  401740:	ldr	x2, [sp]
  401744:	mov	w3, #0x25                  	// #37
  401748:	adrp	x4, 402000 <get_current_runlevel+0x14c>
  40174c:	add	x4, x4, #0x3b7
  401750:	bl	400fb0 <log_assert_failed_realm@plt>
  401754:	ldr	x8, [sp, #8]
  401758:	ldr	x0, [x8]
  40175c:	bl	400fc0 <sd_bus_flush_close_unref@plt>
  401760:	ldr	x8, [sp, #8]
  401764:	str	x0, [x8]
  401768:	ldp	x29, x30, [sp, #16]
  40176c:	add	sp, sp, #0x20
  401770:	ret

0000000000401774 <on_reboot>:
  401774:	sub	sp, sp, #0x50
  401778:	stp	x29, x30, [sp, #64]
  40177c:	add	x29, sp, #0x40
  401780:	adrp	x8, 402000 <get_current_runlevel+0x14c>
  401784:	add	x8, x8, #0x2f0
  401788:	add	x8, x8, #0x3
  40178c:	stur	x0, [x29, #-8]
  401790:	stur	wzr, [x29, #-12]
  401794:	str	x8, [sp, #16]
  401798:	ldur	x8, [x29, #-8]
  40179c:	cmp	x8, #0x0
  4017a0:	cset	w9, ne  // ne = any
  4017a4:	mov	w10, #0x1                   	// #1
  4017a8:	eor	w9, w9, #0x1
  4017ac:	eor	w9, w9, w10
  4017b0:	eor	w9, w9, w10
  4017b4:	and	w9, w9, #0x1
  4017b8:	mov	w0, w9
  4017bc:	sxtw	x8, w0
  4017c0:	cbz	x8, 4017e8 <on_reboot+0x74>
  4017c4:	mov	w8, wzr
  4017c8:	mov	w0, w8
  4017cc:	adrp	x1, 402000 <get_current_runlevel+0x14c>
  4017d0:	add	x1, x1, #0x3b5
  4017d4:	ldr	x2, [sp, #16]
  4017d8:	mov	w3, #0x78                  	// #120
  4017dc:	adrp	x4, 402000 <get_current_runlevel+0x14c>
  4017e0:	add	x4, x4, #0x3d5
  4017e4:	bl	400fb0 <log_assert_failed_realm@plt>
  4017e8:	ldur	x0, [x29, #-8]
  4017ec:	bl	401d04 <get_startup_time>
  4017f0:	stur	x0, [x29, #-24]
  4017f4:	ldur	x0, [x29, #-24]
  4017f8:	bl	400fd0 <utmp_put_reboot@plt>
  4017fc:	stur	w0, [x29, #-16]
  401800:	ldur	w8, [x29, #-16]
  401804:	cmp	w8, #0x0
  401808:	cset	w8, ge  // ge = tcont
  40180c:	tbnz	w8, #0, 401894 <on_reboot+0x120>
  401810:	mov	w8, #0x3                   	// #3
  401814:	stur	w8, [x29, #-28]
  401818:	ldur	w8, [x29, #-16]
  40181c:	str	w8, [sp, #32]
  401820:	str	wzr, [sp, #28]
  401824:	ldr	w0, [sp, #28]
  401828:	bl	400f40 <log_get_max_level_realm@plt>
  40182c:	ldur	w8, [x29, #-28]
  401830:	and	w8, w8, #0x7
  401834:	cmp	w0, w8
  401838:	b.lt	401870 <on_reboot+0xfc>  // b.tstop
  40183c:	ldr	w8, [sp, #28]
  401840:	ldur	w9, [x29, #-28]
  401844:	orr	w0, w9, w8, lsl #10
  401848:	ldr	w1, [sp, #32]
  40184c:	ldr	x2, [sp, #16]
  401850:	mov	w3, #0x8b                  	// #139
  401854:	adrp	x4, 402000 <get_current_runlevel+0x14c>
  401858:	add	x4, x4, #0x3ee
  40185c:	adrp	x5, 402000 <get_current_runlevel+0x14c>
  401860:	add	x5, x5, #0x3f8
  401864:	bl	400f50 <log_internal_realm@plt>
  401868:	str	w0, [sp, #12]
  40186c:	b	401884 <on_reboot+0x110>
  401870:	ldr	w0, [sp, #32]
  401874:	bl	400f60 <abs@plt>
  401878:	mov	w8, wzr
  40187c:	subs	w8, w8, w0, uxtb
  401880:	str	w8, [sp, #12]
  401884:	ldr	w8, [sp, #12]
  401888:	str	w8, [sp, #24]
  40188c:	ldur	w8, [x29, #-16]
  401890:	stur	w8, [x29, #-12]
  401894:	ldur	w0, [x29, #-12]
  401898:	ldp	x29, x30, [sp, #64]
  40189c:	add	sp, sp, #0x50
  4018a0:	ret

00000000004018a4 <on_shutdown>:
  4018a4:	sub	sp, sp, #0x40
  4018a8:	stp	x29, x30, [sp, #48]
  4018ac:	add	x29, sp, #0x30
  4018b0:	adrp	x8, 402000 <get_current_runlevel+0x14c>
  4018b4:	add	x8, x8, #0x2f0
  4018b8:	add	x8, x8, #0x3
  4018bc:	stur	x0, [x29, #-8]
  4018c0:	stur	wzr, [x29, #-12]
  4018c4:	str	x8, [sp, #8]
  4018c8:	ldur	x8, [x29, #-8]
  4018cc:	cmp	x8, #0x0
  4018d0:	cset	w9, ne  // ne = any
  4018d4:	mov	w10, #0x1                   	// #1
  4018d8:	eor	w9, w9, #0x1
  4018dc:	eor	w9, w9, w10
  4018e0:	eor	w9, w9, w10
  4018e4:	and	w9, w9, #0x1
  4018e8:	mov	w0, w9
  4018ec:	sxtw	x8, w0
  4018f0:	cbz	x8, 401918 <on_shutdown+0x74>
  4018f4:	mov	w8, wzr
  4018f8:	mov	w0, w8
  4018fc:	adrp	x1, 402000 <get_current_runlevel+0x14c>
  401900:	add	x1, x1, #0x3b5
  401904:	ldr	x2, [sp, #8]
  401908:	mov	w3, #0x95                  	// #149
  40190c:	adrp	x4, 402000 <get_current_runlevel+0x14c>
  401910:	add	x4, x4, #0x4cf
  401914:	bl	400fb0 <log_assert_failed_realm@plt>
  401918:	bl	400fe0 <utmp_put_shutdown@plt>
  40191c:	stur	w0, [x29, #-16]
  401920:	ldur	w8, [x29, #-16]
  401924:	cmp	w8, #0x0
  401928:	cset	w8, ge  // ge = tcont
  40192c:	tbnz	w8, #0, 4019b4 <on_shutdown+0x110>
  401930:	mov	w8, #0x3                   	// #3
  401934:	stur	w8, [x29, #-20]
  401938:	ldur	w8, [x29, #-16]
  40193c:	str	w8, [sp, #24]
  401940:	str	wzr, [sp, #20]
  401944:	ldr	w0, [sp, #20]
  401948:	bl	400f40 <log_get_max_level_realm@plt>
  40194c:	ldur	w8, [x29, #-20]
  401950:	and	w8, w8, #0x7
  401954:	cmp	w0, w8
  401958:	b.lt	401990 <on_shutdown+0xec>  // b.tstop
  40195c:	ldr	w8, [sp, #20]
  401960:	ldur	w9, [x29, #-20]
  401964:	orr	w0, w9, w8, lsl #10
  401968:	ldr	w1, [sp, #24]
  40196c:	ldr	x2, [sp, #8]
  401970:	mov	w3, #0xa4                  	// #164
  401974:	adrp	x4, 402000 <get_current_runlevel+0x14c>
  401978:	add	x4, x4, #0x4ea
  40197c:	adrp	x5, 402000 <get_current_runlevel+0x14c>
  401980:	add	x5, x5, #0x3f8
  401984:	bl	400f50 <log_internal_realm@plt>
  401988:	str	w0, [sp, #4]
  40198c:	b	4019a4 <on_shutdown+0x100>
  401990:	ldr	w0, [sp, #24]
  401994:	bl	400f60 <abs@plt>
  401998:	mov	w8, wzr
  40199c:	subs	w8, w8, w0, uxtb
  4019a0:	str	w8, [sp, #4]
  4019a4:	ldr	w8, [sp, #4]
  4019a8:	str	w8, [sp, #16]
  4019ac:	ldur	w8, [x29, #-16]
  4019b0:	stur	w8, [x29, #-12]
  4019b4:	ldur	w0, [x29, #-12]
  4019b8:	ldp	x29, x30, [sp, #48]
  4019bc:	add	sp, sp, #0x40
  4019c0:	ret

00000000004019c4 <on_runlevel>:
  4019c4:	sub	sp, sp, #0x90
  4019c8:	stp	x29, x30, [sp, #128]
  4019cc:	add	x29, sp, #0x80
  4019d0:	adrp	x8, 402000 <get_current_runlevel+0x14c>
  4019d4:	add	x8, x8, #0x2f0
  4019d8:	add	x8, x8, #0x3
  4019dc:	adrp	x9, 402000 <get_current_runlevel+0x14c>
  4019e0:	add	x9, x9, #0x511
  4019e4:	stur	x0, [x29, #-16]
  4019e8:	stur	wzr, [x29, #-20]
  4019ec:	str	x8, [sp, #32]
  4019f0:	str	x9, [sp, #24]
  4019f4:	ldur	x8, [x29, #-16]
  4019f8:	cmp	x8, #0x0
  4019fc:	cset	w9, ne  // ne = any
  401a00:	mov	w10, #0x1                   	// #1
  401a04:	eor	w9, w9, #0x1
  401a08:	eor	w9, w9, w10
  401a0c:	eor	w9, w9, w10
  401a10:	and	w9, w9, #0x1
  401a14:	mov	w0, w9
  401a18:	sxtw	x8, w0
  401a1c:	cbz	x8, 401a44 <on_runlevel+0x80>
  401a20:	mov	w8, wzr
  401a24:	mov	w0, w8
  401a28:	adrp	x1, 402000 <get_current_runlevel+0x14c>
  401a2c:	add	x1, x1, #0x3b5
  401a30:	ldr	x2, [sp, #32]
  401a34:	mov	w3, #0xae                  	// #174
  401a38:	adrp	x4, 402000 <get_current_runlevel+0x14c>
  401a3c:	add	x4, x4, #0x4f6
  401a40:	bl	400fb0 <log_assert_failed_realm@plt>
  401a44:	sub	x0, x29, #0x1c
  401a48:	mov	x8, xzr
  401a4c:	mov	x1, x8
  401a50:	bl	400ff0 <utmp_get_runlevel@plt>
  401a54:	stur	w0, [x29, #-24]
  401a58:	ldur	w9, [x29, #-24]
  401a5c:	cmp	w9, #0x0
  401a60:	cset	w9, ge  // ge = tcont
  401a64:	tbnz	w9, #0, 401b38 <on_runlevel+0x174>
  401a68:	mov	w8, #0x0                   	// #0
  401a6c:	sturb	w8, [x29, #-33]
  401a70:	ldur	w8, [x29, #-24]
  401a74:	add	w8, w8, #0x3
  401a78:	mov	w9, #0x1                   	// #1
  401a7c:	cmp	w8, #0x1
  401a80:	cset	w8, ls  // ls = plast
  401a84:	eor	w8, w8, w9
  401a88:	tbnz	w8, #0, 401a9c <on_runlevel+0xd8>
  401a8c:	b	401a90 <on_runlevel+0xcc>
  401a90:	mov	w8, #0x1                   	// #1
  401a94:	sturb	w8, [x29, #-33]
  401a98:	b	401a9c <on_runlevel+0xd8>
  401a9c:	ldurb	w8, [x29, #-33]
  401aa0:	and	w8, w8, #0x1
  401aa4:	sturb	w8, [x29, #-34]
  401aa8:	ldurb	w8, [x29, #-34]
  401aac:	tbnz	w8, #0, 401b34 <on_runlevel+0x170>
  401ab0:	mov	w8, #0x3                   	// #3
  401ab4:	stur	w8, [x29, #-40]
  401ab8:	ldur	w8, [x29, #-24]
  401abc:	stur	w8, [x29, #-44]
  401ac0:	stur	wzr, [x29, #-48]
  401ac4:	ldur	w0, [x29, #-48]
  401ac8:	bl	400f40 <log_get_max_level_realm@plt>
  401acc:	ldur	w8, [x29, #-40]
  401ad0:	and	w8, w8, #0x7
  401ad4:	cmp	w0, w8
  401ad8:	b.lt	401b0c <on_runlevel+0x148>  // b.tstop
  401adc:	ldur	w8, [x29, #-48]
  401ae0:	ldur	w9, [x29, #-40]
  401ae4:	orr	w0, w9, w8, lsl #10
  401ae8:	ldur	w1, [x29, #-44]
  401aec:	ldr	x2, [sp, #32]
  401af0:	mov	w3, #0xb8                  	// #184
  401af4:	ldr	x4, [sp, #24]
  401af8:	adrp	x5, 402000 <get_current_runlevel+0x14c>
  401afc:	add	x5, x5, #0x51d
  401b00:	bl	400f50 <log_internal_realm@plt>
  401b04:	str	w0, [sp, #20]
  401b08:	b	401b20 <on_runlevel+0x15c>
  401b0c:	ldur	w0, [x29, #-44]
  401b10:	bl	400f60 <abs@plt>
  401b14:	mov	w8, wzr
  401b18:	subs	w8, w8, w0, uxtb
  401b1c:	str	w8, [sp, #20]
  401b20:	ldr	w8, [sp, #20]
  401b24:	stur	w8, [x29, #-52]
  401b28:	ldur	w8, [x29, #-52]
  401b2c:	stur	w8, [x29, #-4]
  401b30:	b	401cf4 <on_runlevel+0x330>
  401b34:	stur	wzr, [x29, #-28]
  401b38:	ldur	x0, [x29, #-16]
  401b3c:	bl	401eb4 <get_current_runlevel>
  401b40:	stur	w0, [x29, #-32]
  401b44:	ldur	w8, [x29, #-32]
  401b48:	cmp	w8, #0x0
  401b4c:	cset	w8, ge  // ge = tcont
  401b50:	tbnz	w8, #0, 401b60 <on_runlevel+0x19c>
  401b54:	ldur	w8, [x29, #-32]
  401b58:	stur	w8, [x29, #-4]
  401b5c:	b	401cf4 <on_runlevel+0x330>
  401b60:	ldur	w8, [x29, #-32]
  401b64:	cbnz	w8, 401be8 <on_runlevel+0x224>
  401b68:	mov	w8, #0x4                   	// #4
  401b6c:	stur	w8, [x29, #-56]
  401b70:	stur	wzr, [x29, #-60]
  401b74:	str	wzr, [sp, #64]
  401b78:	ldr	w0, [sp, #64]
  401b7c:	bl	400f40 <log_get_max_level_realm@plt>
  401b80:	ldur	w8, [x29, #-56]
  401b84:	and	w8, w8, #0x7
  401b88:	cmp	w0, w8
  401b8c:	b.lt	401bc0 <on_runlevel+0x1fc>  // b.tstop
  401b90:	ldr	w8, [sp, #64]
  401b94:	ldur	w9, [x29, #-56]
  401b98:	orr	w0, w9, w8, lsl #10
  401b9c:	ldur	w1, [x29, #-60]
  401ba0:	ldr	x2, [sp, #32]
  401ba4:	mov	w3, #0xc2                  	// #194
  401ba8:	ldr	x4, [sp, #24]
  401bac:	adrp	x5, 402000 <get_current_runlevel+0x14c>
  401bb0:	add	x5, x5, #0x540
  401bb4:	bl	400f50 <log_internal_realm@plt>
  401bb8:	str	w0, [sp, #16]
  401bbc:	b	401bd4 <on_runlevel+0x210>
  401bc0:	ldur	w0, [x29, #-60]
  401bc4:	bl	400f60 <abs@plt>
  401bc8:	mov	w8, wzr
  401bcc:	subs	w8, w8, w0, uxtb
  401bd0:	str	w8, [sp, #16]
  401bd4:	ldr	w8, [sp, #16]
  401bd8:	str	w8, [sp, #60]
  401bdc:	ldr	w8, [sp, #60]
  401be0:	stur	w8, [x29, #-4]
  401be4:	b	401cf4 <on_runlevel+0x330>
  401be8:	ldur	w8, [x29, #-28]
  401bec:	ldur	w9, [x29, #-32]
  401bf0:	cmp	w8, w9
  401bf4:	b.ne	401c00 <on_runlevel+0x23c>  // b.any
  401bf8:	stur	wzr, [x29, #-4]
  401bfc:	b	401cf4 <on_runlevel+0x330>
  401c00:	ldur	w0, [x29, #-32]
  401c04:	ldur	w1, [x29, #-28]
  401c08:	bl	401000 <utmp_put_runlevel@plt>
  401c0c:	stur	w0, [x29, #-24]
  401c10:	ldur	w8, [x29, #-24]
  401c14:	cmp	w8, #0x0
  401c18:	cset	w8, ge  // ge = tcont
  401c1c:	tbnz	w8, #0, 401cec <on_runlevel+0x328>
  401c20:	mov	w8, #0x0                   	// #0
  401c24:	strb	w8, [sp, #59]
  401c28:	ldur	w8, [x29, #-24]
  401c2c:	add	w8, w8, #0x3
  401c30:	mov	w9, #0x1                   	// #1
  401c34:	cmp	w8, #0x1
  401c38:	cset	w8, ls  // ls = plast
  401c3c:	eor	w8, w8, w9
  401c40:	tbnz	w8, #0, 401c54 <on_runlevel+0x290>
  401c44:	b	401c48 <on_runlevel+0x284>
  401c48:	mov	w8, #0x1                   	// #1
  401c4c:	strb	w8, [sp, #59]
  401c50:	b	401c54 <on_runlevel+0x290>
  401c54:	ldrb	w8, [sp, #59]
  401c58:	and	w8, w8, #0x1
  401c5c:	strb	w8, [sp, #58]
  401c60:	ldrb	w8, [sp, #58]
  401c64:	tbnz	w8, #0, 401cec <on_runlevel+0x328>
  401c68:	mov	w8, #0x3                   	// #3
  401c6c:	str	w8, [sp, #52]
  401c70:	ldur	w8, [x29, #-24]
  401c74:	str	w8, [sp, #48]
  401c78:	str	wzr, [sp, #44]
  401c7c:	ldr	w0, [sp, #44]
  401c80:	bl	400f40 <log_get_max_level_realm@plt>
  401c84:	ldr	w8, [sp, #52]
  401c88:	and	w8, w8, #0x7
  401c8c:	cmp	w0, w8
  401c90:	b.lt	401cc4 <on_runlevel+0x300>  // b.tstop
  401c94:	ldr	w8, [sp, #44]
  401c98:	ldr	w9, [sp, #52]
  401c9c:	orr	w0, w9, w8, lsl #10
  401ca0:	ldr	w1, [sp, #48]
  401ca4:	ldr	x2, [sp, #32]
  401ca8:	mov	w3, #0xd7                  	// #215
  401cac:	ldr	x4, [sp, #24]
  401cb0:	adrp	x5, 402000 <get_current_runlevel+0x14c>
  401cb4:	add	x5, x5, #0x3f8
  401cb8:	bl	400f50 <log_internal_realm@plt>
  401cbc:	str	w0, [sp, #12]
  401cc0:	b	401cd8 <on_runlevel+0x314>
  401cc4:	ldr	w0, [sp, #48]
  401cc8:	bl	400f60 <abs@plt>
  401ccc:	mov	w8, wzr
  401cd0:	subs	w8, w8, w0, uxtb
  401cd4:	str	w8, [sp, #12]
  401cd8:	ldr	w8, [sp, #12]
  401cdc:	str	w8, [sp, #40]
  401ce0:	ldr	w8, [sp, #40]
  401ce4:	stur	w8, [x29, #-4]
  401ce8:	b	401cf4 <on_runlevel+0x330>
  401cec:	ldur	w8, [x29, #-20]
  401cf0:	stur	w8, [x29, #-4]
  401cf4:	ldur	w0, [x29, #-4]
  401cf8:	ldp	x29, x30, [sp, #128]
  401cfc:	add	sp, sp, #0x90
  401d00:	ret

0000000000401d04 <get_startup_time>:
  401d04:	sub	sp, sp, #0x80
  401d08:	stp	x29, x30, [sp, #112]
  401d0c:	add	x29, sp, #0x70
  401d10:	adrp	x8, 402000 <get_current_runlevel+0x14c>
  401d14:	add	x8, x8, #0x2f0
  401d18:	add	x8, x8, #0x3
  401d1c:	stur	x0, [x29, #-16]
  401d20:	stur	xzr, [x29, #-40]
  401d24:	stur	xzr, [x29, #-32]
  401d28:	stur	xzr, [x29, #-24]
  401d2c:	stur	xzr, [x29, #-48]
  401d30:	str	x8, [sp, #32]
  401d34:	ldur	x8, [x29, #-16]
  401d38:	cmp	x8, #0x0
  401d3c:	cset	w9, ne  // ne = any
  401d40:	mov	w10, #0x1                   	// #1
  401d44:	eor	w9, w9, #0x1
  401d48:	eor	w9, w9, w10
  401d4c:	eor	w9, w9, w10
  401d50:	and	w9, w9, #0x1
  401d54:	mov	w0, w9
  401d58:	sxtw	x8, w0
  401d5c:	cbz	x8, 401d84 <get_startup_time+0x80>
  401d60:	mov	w8, wzr
  401d64:	mov	w0, w8
  401d68:	adrp	x1, 402000 <get_current_runlevel+0x14c>
  401d6c:	add	x1, x1, #0x3b5
  401d70:	ldr	x2, [sp, #32]
  401d74:	mov	w3, #0x34                  	// #52
  401d78:	adrp	x4, 402000 <get_current_runlevel+0x14c>
  401d7c:	add	x4, x4, #0x418
  401d80:	bl	400fb0 <log_assert_failed_realm@plt>
  401d84:	ldur	x8, [x29, #-16]
  401d88:	ldr	x0, [x8]
  401d8c:	adrp	x1, 402000 <get_current_runlevel+0x14c>
  401d90:	add	x1, x1, #0x43b
  401d94:	adrp	x2, 402000 <get_current_runlevel+0x14c>
  401d98:	add	x2, x2, #0x454
  401d9c:	adrp	x3, 402000 <get_current_runlevel+0x14c>
  401da0:	add	x3, x3, #0x46e
  401da4:	adrp	x4, 402000 <get_current_runlevel+0x14c>
  401da8:	add	x4, x4, #0x48f
  401dac:	sub	x5, x29, #0x28
  401db0:	mov	w6, #0x74                  	// #116
  401db4:	sub	x7, x29, #0x30
  401db8:	bl	401010 <sd_bus_get_property_trivial@plt>
  401dbc:	stur	w0, [x29, #-52]
  401dc0:	ldur	w9, [x29, #-52]
  401dc4:	cmp	w9, #0x0
  401dc8:	cset	w9, ge  // ge = tcont
  401dcc:	tbnz	w9, #0, 401e8c <get_startup_time+0x188>
  401dd0:	mov	w8, #0x3                   	// #3
  401dd4:	str	w8, [sp, #56]
  401dd8:	ldur	w8, [x29, #-52]
  401ddc:	str	w8, [sp, #52]
  401de0:	str	wzr, [sp, #48]
  401de4:	ldr	w0, [sp, #48]
  401de8:	bl	400f40 <log_get_max_level_realm@plt>
  401dec:	ldr	w8, [sp, #56]
  401df0:	and	w8, w8, #0x7
  401df4:	cmp	w0, w8
  401df8:	b.lt	401e60 <get_startup_time+0x15c>  // b.tstop
  401dfc:	ldr	w8, [sp, #48]
  401e00:	ldr	w9, [sp, #56]
  401e04:	orr	w0, w9, w8, lsl #10
  401e08:	ldr	w1, [sp, #52]
  401e0c:	ldur	w8, [x29, #-52]
  401e10:	sub	x10, x29, #0x28
  401e14:	str	w0, [sp, #28]
  401e18:	mov	x0, x10
  401e1c:	str	w1, [sp, #24]
  401e20:	mov	w1, w8
  401e24:	bl	401020 <bus_error_message@plt>
  401e28:	ldr	w8, [sp, #28]
  401e2c:	str	x0, [sp, #16]
  401e30:	mov	w0, w8
  401e34:	ldr	w1, [sp, #24]
  401e38:	ldr	x2, [sp, #32]
  401e3c:	mov	w3, #0x3f                  	// #63
  401e40:	adrp	x4, 402000 <get_current_runlevel+0x14c>
  401e44:	add	x4, x4, #0x4a2
  401e48:	adrp	x5, 402000 <get_current_runlevel+0x14c>
  401e4c:	add	x5, x5, #0x4b3
  401e50:	ldr	x6, [sp, #16]
  401e54:	bl	400f50 <log_internal_realm@plt>
  401e58:	str	w0, [sp, #12]
  401e5c:	b	401e74 <get_startup_time+0x170>
  401e60:	ldr	w0, [sp, #52]
  401e64:	bl	400f60 <abs@plt>
  401e68:	mov	w8, wzr
  401e6c:	subs	w8, w8, w0, uxtb
  401e70:	str	w8, [sp, #12]
  401e74:	ldr	w8, [sp, #12]
  401e78:	str	w8, [sp, #44]
  401e7c:	stur	xzr, [x29, #-8]
  401e80:	mov	w8, #0x1                   	// #1
  401e84:	str	w8, [sp, #40]
  401e88:	b	401e9c <get_startup_time+0x198>
  401e8c:	ldur	x8, [x29, #-48]
  401e90:	stur	x8, [x29, #-8]
  401e94:	mov	w9, #0x1                   	// #1
  401e98:	str	w9, [sp, #40]
  401e9c:	sub	x0, x29, #0x28
  401ea0:	bl	401030 <sd_bus_error_free@plt>
  401ea4:	ldur	x0, [x29, #-8]
  401ea8:	ldp	x29, x30, [sp, #112]
  401eac:	add	sp, sp, #0x80
  401eb0:	ret

0000000000401eb4 <get_current_runlevel>:
  401eb4:	sub	sp, sp, #0xa0
  401eb8:	stp	x29, x30, [sp, #144]
  401ebc:	add	x29, sp, #0x90
  401ec0:	adrp	x8, 402000 <get_current_runlevel+0x14c>
  401ec4:	add	x8, x8, #0x2f0
  401ec8:	add	x8, x8, #0x3
  401ecc:	stur	x0, [x29, #-16]
  401ed0:	stur	xzr, [x29, #-40]
  401ed4:	stur	xzr, [x29, #-32]
  401ed8:	stur	xzr, [x29, #-24]
  401edc:	str	x8, [sp, #24]
  401ee0:	ldur	x8, [x29, #-16]
  401ee4:	cmp	x8, #0x0
  401ee8:	cset	w9, ne  // ne = any
  401eec:	mov	w10, #0x1                   	// #1
  401ef0:	eor	w9, w9, #0x1
  401ef4:	eor	w9, w9, w10
  401ef8:	eor	w9, w9, w10
  401efc:	and	w9, w9, #0x1
  401f00:	mov	w0, w9
  401f04:	sxtw	x8, w0
  401f08:	cbz	x8, 401f30 <get_current_runlevel+0x7c>
  401f0c:	mov	w8, wzr
  401f10:	mov	w0, w8
  401f14:	adrp	x1, 402000 <get_current_runlevel+0x14c>
  401f18:	add	x1, x1, #0x3b5
  401f1c:	ldr	x2, [sp, #24]
  401f20:	mov	w3, #0x59                  	// #89
  401f24:	adrp	x4, 402000 <get_current_runlevel+0x14c>
  401f28:	add	x4, x4, #0x5a2
  401f2c:	bl	400fb0 <log_assert_failed_realm@plt>
  401f30:	stur	wzr, [x29, #-48]
  401f34:	ldur	w8, [x29, #-48]
  401f38:	mov	w9, w8
  401f3c:	cmp	x9, #0x3
  401f40:	b.cs	402140 <get_current_runlevel+0x28c>  // b.hs, b.nlast
  401f44:	mov	x8, xzr
  401f48:	stur	x8, [x29, #-56]
  401f4c:	stur	x8, [x29, #-64]
  401f50:	ldur	w9, [x29, #-48]
  401f54:	mov	w8, w9
  401f58:	mov	x10, #0x10                  	// #16
  401f5c:	mul	x8, x10, x8
  401f60:	adrp	x10, 402000 <get_current_runlevel+0x14c>
  401f64:	add	x10, x10, #0x2c0
  401f68:	add	x8, x10, x8
  401f6c:	ldr	x0, [x8, #8]
  401f70:	bl	401040 <unit_dbus_path_from_name@plt>
  401f74:	stur	x0, [x29, #-64]
  401f78:	ldur	x8, [x29, #-64]
  401f7c:	cbnz	x8, 401fac <get_current_runlevel+0xf8>
  401f80:	mov	w8, wzr
  401f84:	mov	w0, w8
  401f88:	ldr	x1, [sp, #24]
  401f8c:	mov	w2, #0x60                  	// #96
  401f90:	adrp	x3, 402000 <get_current_runlevel+0x14c>
  401f94:	add	x3, x3, #0x5c6
  401f98:	bl	401050 <log_oom_internal@plt>
  401f9c:	stur	w0, [x29, #-4]
  401fa0:	mov	w8, #0x1                   	// #1
  401fa4:	stur	w8, [x29, #-68]
  401fa8:	b	402108 <get_current_runlevel+0x254>
  401fac:	ldur	x8, [x29, #-16]
  401fb0:	ldr	x0, [x8]
  401fb4:	ldur	x2, [x29, #-64]
  401fb8:	adrp	x1, 402000 <get_current_runlevel+0x14c>
  401fbc:	add	x1, x1, #0x43b
  401fc0:	adrp	x3, 402000 <get_current_runlevel+0x14c>
  401fc4:	add	x3, x3, #0x5db
  401fc8:	adrp	x4, 402000 <get_current_runlevel+0x14c>
  401fcc:	add	x4, x4, #0x5f9
  401fd0:	sub	x5, x29, #0x28
  401fd4:	sub	x6, x29, #0x38
  401fd8:	bl	401060 <sd_bus_get_property_string@plt>
  401fdc:	stur	w0, [x29, #-44]
  401fe0:	ldur	w9, [x29, #-44]
  401fe4:	cmp	w9, #0x0
  401fe8:	cset	w9, ge  // ge = tcont
  401fec:	tbnz	w9, #0, 4020b0 <get_current_runlevel+0x1fc>
  401ff0:	mov	w8, #0x4                   	// #4
  401ff4:	str	w8, [sp, #72]
  401ff8:	ldur	w8, [x29, #-44]
  401ffc:	str	w8, [sp, #68]
  402000:	str	wzr, [sp, #64]
  402004:	ldr	w0, [sp, #64]
  402008:	bl	400f40 <log_get_max_level_realm@plt>
  40200c:	ldr	w8, [sp, #72]
  402010:	and	w8, w8, #0x7
  402014:	cmp	w0, w8
  402018:	b.lt	402080 <get_current_runlevel+0x1cc>  // b.tstop
  40201c:	ldr	w8, [sp, #64]
  402020:	ldr	w9, [sp, #72]
  402024:	orr	w0, w9, w8, lsl #10
  402028:	ldr	w1, [sp, #68]
  40202c:	ldur	w8, [x29, #-44]
  402030:	sub	x10, x29, #0x28
  402034:	str	w0, [sp, #20]
  402038:	mov	x0, x10
  40203c:	str	w1, [sp, #16]
  402040:	mov	w1, w8
  402044:	bl	401020 <bus_error_message@plt>
  402048:	ldr	w8, [sp, #20]
  40204c:	str	x0, [sp, #8]
  402050:	mov	w0, w8
  402054:	ldr	w1, [sp, #16]
  402058:	ldr	x2, [sp, #24]
  40205c:	mov	w3, #0x6b                  	// #107
  402060:	adrp	x4, 402000 <get_current_runlevel+0x14c>
  402064:	add	x4, x4, #0x5c6
  402068:	adrp	x5, 402000 <get_current_runlevel+0x14c>
  40206c:	add	x5, x5, #0x605
  402070:	ldr	x6, [sp, #8]
  402074:	bl	400f50 <log_internal_realm@plt>
  402078:	str	w0, [sp, #4]
  40207c:	b	402094 <get_current_runlevel+0x1e0>
  402080:	ldr	w0, [sp, #68]
  402084:	bl	400f60 <abs@plt>
  402088:	mov	w8, wzr
  40208c:	subs	w8, w8, w0, uxtb
  402090:	str	w8, [sp, #4]
  402094:	ldr	w8, [sp, #4]
  402098:	str	w8, [sp, #60]
  40209c:	ldr	w8, [sp, #60]
  4020a0:	stur	w8, [x29, #-4]
  4020a4:	mov	w8, #0x1                   	// #1
  4020a8:	stur	w8, [x29, #-68]
  4020ac:	b	402108 <get_current_runlevel+0x254>
  4020b0:	adrp	x8, 420000 <__TMC_END__>
  4020b4:	add	x8, x8, #0x0
  4020b8:	ldr	q0, [x8]
  4020bc:	add	x0, sp, #0x20
  4020c0:	str	q0, [sp, #32]
  4020c4:	ldr	x8, [x8, #16]
  4020c8:	str	x8, [sp, #48]
  4020cc:	ldur	x1, [x29, #-56]
  4020d0:	bl	401070 <strv_find@plt>
  4020d4:	cbz	x0, 402104 <get_current_runlevel+0x250>
  4020d8:	ldur	w8, [x29, #-48]
  4020dc:	mov	w9, w8
  4020e0:	mov	x10, #0x10                  	// #16
  4020e4:	mul	x9, x10, x9
  4020e8:	adrp	x10, 402000 <get_current_runlevel+0x14c>
  4020ec:	add	x10, x10, #0x2c0
  4020f0:	ldr	w8, [x10, x9]
  4020f4:	stur	w8, [x29, #-4]
  4020f8:	mov	w8, #0x1                   	// #1
  4020fc:	stur	w8, [x29, #-68]
  402100:	b	402108 <get_current_runlevel+0x254>
  402104:	stur	wzr, [x29, #-68]
  402108:	sub	x0, x29, #0x40
  40210c:	bl	402164 <freep>
  402110:	sub	x0, x29, #0x38
  402114:	bl	402164 <freep>
  402118:	ldur	w8, [x29, #-68]
  40211c:	cmp	w8, #0x0
  402120:	cset	w8, eq  // eq = none
  402124:	eor	w8, w8, #0x1
  402128:	tbnz	w8, #0, 40214c <get_current_runlevel+0x298>
  40212c:	b	402130 <get_current_runlevel+0x27c>
  402130:	ldur	w8, [x29, #-48]
  402134:	add	w8, w8, #0x1
  402138:	stur	w8, [x29, #-48]
  40213c:	b	401f34 <get_current_runlevel+0x80>
  402140:	stur	wzr, [x29, #-4]
  402144:	mov	w8, #0x1                   	// #1
  402148:	stur	w8, [x29, #-68]
  40214c:	sub	x0, x29, #0x28
  402150:	bl	401030 <sd_bus_error_free@plt>
  402154:	ldur	w0, [x29, #-4]
  402158:	ldp	x29, x30, [sp, #144]
  40215c:	add	sp, sp, #0xa0
  402160:	ret

0000000000402164 <freep>:
  402164:	sub	sp, sp, #0x20
  402168:	stp	x29, x30, [sp, #16]
  40216c:	add	x29, sp, #0x10
  402170:	str	x0, [sp, #8]
  402174:	ldr	x8, [sp, #8]
  402178:	ldr	x0, [x8]
  40217c:	bl	401080 <free@plt>
  402180:	ldp	x29, x30, [sp, #16]
  402184:	add	sp, sp, #0x20
  402188:	ret

000000000040218c <ALIGN_TO>:
  40218c:	sub	sp, sp, #0x10
  402190:	str	x0, [sp, #8]
  402194:	str	x1, [sp]
  402198:	ldr	x8, [sp, #8]
  40219c:	ldr	x9, [sp]
  4021a0:	add	x8, x8, x9
  4021a4:	subs	x8, x8, #0x1
  4021a8:	ldr	x9, [sp]
  4021ac:	subs	x9, x9, #0x1
  4021b0:	bic	x0, x8, x9
  4021b4:	add	sp, sp, #0x10
  4021b8:	ret
  4021bc:	udf	#0

00000000004021c0 <__libc_csu_init>:
  4021c0:	stp	x29, x30, [sp, #-64]!
  4021c4:	mov	x29, sp
  4021c8:	stp	x19, x20, [sp, #16]
  4021cc:	adrp	x20, 41f000 <__FRAME_END__+0x1c8e0>
  4021d0:	add	x20, x20, #0xcc0
  4021d4:	stp	x21, x22, [sp, #32]
  4021d8:	adrp	x21, 41f000 <__FRAME_END__+0x1c8e0>
  4021dc:	add	x21, x21, #0xcb8
  4021e0:	sub	x20, x20, x21
  4021e4:	mov	w22, w0
  4021e8:	stp	x23, x24, [sp, #48]
  4021ec:	mov	x23, x1
  4021f0:	mov	x24, x2
  4021f4:	bl	400e88 <_init>
  4021f8:	cmp	xzr, x20, asr #3
  4021fc:	b.eq	402228 <__libc_csu_init+0x68>  // b.none
  402200:	asr	x20, x20, #3
  402204:	mov	x19, #0x0                   	// #0
  402208:	ldr	x3, [x21, x19, lsl #3]
  40220c:	mov	x2, x24
  402210:	add	x19, x19, #0x1
  402214:	mov	x1, x23
  402218:	mov	w0, w22
  40221c:	blr	x3
  402220:	cmp	x20, x19
  402224:	b.ne	402208 <__libc_csu_init+0x48>  // b.any
  402228:	ldp	x19, x20, [sp, #16]
  40222c:	ldp	x21, x22, [sp, #32]
  402230:	ldp	x23, x24, [sp, #48]
  402234:	ldp	x29, x30, [sp], #64
  402238:	ret
  40223c:	nop

0000000000402240 <__libc_csu_fini>:
  402240:	ret

Disassembly of section .fini:

0000000000402244 <_fini>:
  402244:	stp	x29, x30, [sp, #-16]!
  402248:	mov	x29, sp
  40224c:	ldp	x29, x30, [sp], #16
  402250:	ret
