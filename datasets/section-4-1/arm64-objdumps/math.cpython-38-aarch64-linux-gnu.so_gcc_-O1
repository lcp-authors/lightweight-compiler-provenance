
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//math.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002f88 <.init>:
    2f88:	stp	x29, x30, [sp, #-16]!
    2f8c:	mov	x29, sp
    2f90:	bl	3470 <PyNumber_FloorDivide@plt+0x10>
    2f94:	ldp	x29, x30, [sp], #16
    2f98:	ret

Disassembly of section .plt:

0000000000002fa0 <memcpy@plt-0x20>:
    2fa0:	stp	x16, x30, [sp, #-16]!
    2fa4:	adrp	x16, 1b000 <_Py_log1p@@Base+0x130ec>
    2fa8:	ldr	x17, [x16, #4088]
    2fac:	add	x16, x16, #0xff8
    2fb0:	br	x17
    2fb4:	nop
    2fb8:	nop
    2fbc:	nop

0000000000002fc0 <memcpy@plt>:
    2fc0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2fc4:	ldr	x17, [x16]
    2fc8:	add	x16, x16, #0x0
    2fcc:	br	x17

0000000000002fd0 <atan2@plt>:
    2fd0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2fd4:	ldr	x17, [x16, #8]
    2fd8:	add	x16, x16, #0x8
    2fdc:	br	x17

0000000000002fe0 <PyLong_AsLongLongAndOverflow@plt>:
    2fe0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2fe4:	ldr	x17, [x16, #16]
    2fe8:	add	x16, x16, #0x10
    2fec:	br	x17

0000000000002ff0 <log2@plt>:
    2ff0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2ff4:	ldr	x17, [x16, #24]
    2ff8:	add	x16, x16, #0x18
    2ffc:	br	x17

0000000000003000 <PyLong_FromDouble@plt>:
    3000:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3004:	ldr	x17, [x16, #32]
    3008:	add	x16, x16, #0x20
    300c:	br	x17

0000000000003010 <PyMem_Free@plt>:
    3010:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3014:	ldr	x17, [x16, #40]
    3018:	add	x16, x16, #0x28
    301c:	br	x17

0000000000003020 <ldexp@plt>:
    3020:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3024:	ldr	x17, [x16, #48]
    3028:	add	x16, x16, #0x30
    302c:	br	x17

0000000000003030 <PyErr_SetFromErrno@plt>:
    3030:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3034:	ldr	x17, [x16, #56]
    3038:	add	x16, x16, #0x38
    303c:	br	x17

0000000000003040 <PyLong_FromUnsignedLongLong@plt>:
    3040:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3044:	ldr	x17, [x16, #64]
    3048:	add	x16, x16, #0x40
    304c:	br	x17

0000000000003050 <PyLong_AsUnsignedLongLong@plt>:
    3050:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3054:	ldr	x17, [x16, #72]
    3058:	add	x16, x16, #0x48
    305c:	br	x17

0000000000003060 <PyNumber_Add@plt>:
    3060:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3064:	ldr	x17, [x16, #80]
    3068:	add	x16, x16, #0x50
    306c:	br	x17

0000000000003070 <__cxa_finalize@plt>:
    3070:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3074:	ldr	x17, [x16, #88]
    3078:	add	x16, x16, #0x58
    307c:	br	x17

0000000000003080 <_Py_Dealloc@plt>:
    3080:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3084:	ldr	x17, [x16, #96]
    3088:	add	x16, x16, #0x60
    308c:	br	x17

0000000000003090 <pow@plt>:
    3090:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3094:	ldr	x17, [x16, #104]
    3098:	add	x16, x16, #0x68
    309c:	br	x17

00000000000030a0 <PyErr_NoMemory@plt>:
    30a0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    30a4:	ldr	x17, [x16, #112]
    30a8:	add	x16, x16, #0x70
    30ac:	br	x17

00000000000030b0 <PyIter_Next@plt>:
    30b0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    30b4:	ldr	x17, [x16, #120]
    30b8:	add	x16, x16, #0x78
    30bc:	br	x17

00000000000030c0 <_PyLong_Sign@plt>:
    30c0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    30c4:	ldr	x17, [x16, #128]
    30c8:	add	x16, x16, #0x80
    30cc:	br	x17

00000000000030d0 <PyNumber_Multiply@plt>:
    30d0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    30d4:	ldr	x17, [x16, #136]
    30d8:	add	x16, x16, #0x88
    30dc:	br	x17

00000000000030e0 <log10@plt>:
    30e0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    30e4:	ldr	x17, [x16, #144]
    30e8:	add	x16, x16, #0x90
    30ec:	br	x17

00000000000030f0 <_PyLong_NumBits@plt>:
    30f0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    30f4:	ldr	x17, [x16, #152]
    30f8:	add	x16, x16, #0x98
    30fc:	br	x17

0000000000003100 <_PyLong_Rshift@plt>:
    3100:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3104:	ldr	x17, [x16, #160]
    3108:	add	x16, x16, #0xa0
    310c:	br	x17

0000000000003110 <sqrt@plt>:
    3110:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3114:	ldr	x17, [x16, #168]
    3118:	add	x16, x16, #0xa8
    311c:	br	x17

0000000000003120 <_PyArg_UnpackKeywords@plt>:
    3120:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3124:	ldr	x17, [x16, #176]
    3128:	add	x16, x16, #0xb0
    312c:	br	x17

0000000000003130 <PyErr_SetString@plt>:
    3130:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3134:	ldr	x17, [x16, #184]
    3138:	add	x16, x16, #0xb8
    313c:	br	x17

0000000000003140 <PyObject_Malloc@plt>:
    3140:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3144:	ldr	x17, [x16, #192]
    3148:	add	x16, x16, #0xc0
    314c:	br	x17

0000000000003150 <_PyLong_Frexp@plt>:
    3150:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3154:	ldr	x17, [x16, #200]
    3158:	add	x16, x16, #0xc8
    315c:	br	x17

0000000000003160 <_PyObject_LookupSpecial@plt>:
    3160:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3164:	ldr	x17, [x16, #208]
    3168:	add	x16, x16, #0xd0
    316c:	br	x17

0000000000003170 <_PyLong_Copy@plt>:
    3170:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3174:	ldr	x17, [x16, #216]
    3178:	add	x16, x16, #0xd8
    317c:	br	x17

0000000000003180 <PyMem_Realloc@plt>:
    3180:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3184:	ldr	x17, [x16, #224]
    3188:	add	x16, x16, #0xe0
    318c:	br	x17

0000000000003190 <PyErr_ExceptionMatches@plt>:
    3190:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3194:	ldr	x17, [x16, #232]
    3198:	add	x16, x16, #0xe8
    319c:	br	x17

00000000000031a0 <log@plt>:
    31a0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    31a4:	ldr	x17, [x16, #240]
    31a8:	add	x16, x16, #0xf0
    31ac:	br	x17

00000000000031b0 <PyObject_Free@plt>:
    31b0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    31b4:	ldr	x17, [x16, #248]
    31b8:	add	x16, x16, #0xf8
    31bc:	br	x17

00000000000031c0 <PyFloat_FromDouble@plt>:
    31c0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    31c4:	ldr	x17, [x16, #256]
    31c8:	add	x16, x16, #0x100
    31cc:	br	x17

00000000000031d0 <PyType_Ready@plt>:
    31d0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    31d4:	ldr	x17, [x16, #264]
    31d8:	add	x16, x16, #0x108
    31dc:	br	x17

00000000000031e0 <PyLong_FromLong@plt>:
    31e0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    31e4:	ldr	x17, [x16, #272]
    31e8:	add	x16, x16, #0x110
    31ec:	br	x17

00000000000031f0 <PyObject_RichCompareBool@plt>:
    31f0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    31f4:	ldr	x17, [x16, #280]
    31f8:	add	x16, x16, #0x118
    31fc:	br	x17

0000000000003200 <_PyLong_GCD@plt>:
    3200:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3204:	ldr	x17, [x16, #288]
    3208:	add	x16, x16, #0x120
    320c:	br	x17

0000000000003210 <PyErr_Clear@plt>:
    3210:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3214:	ldr	x17, [x16, #296]
    3218:	add	x16, x16, #0x128
    321c:	br	x17

0000000000003220 <PyBool_FromLong@plt>:
    3220:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3224:	ldr	x17, [x16, #304]
    3228:	add	x16, x16, #0x130
    322c:	br	x17

0000000000003230 <sin@plt>:
    3230:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3234:	ldr	x17, [x16, #312]
    3238:	add	x16, x16, #0x138
    323c:	br	x17

0000000000003240 <_Py_dg_stdnan@plt>:
    3240:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3244:	ldr	x17, [x16, #320]
    3248:	add	x16, x16, #0x140
    324c:	br	x17

0000000000003250 <log1p@plt>:
    3250:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3254:	ldr	x17, [x16, #328]
    3258:	add	x16, x16, #0x148
    325c:	br	x17

0000000000003260 <__gmon_start__@plt>:
    3260:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3264:	ldr	x17, [x16, #336]
    3268:	add	x16, x16, #0x150
    326c:	br	x17

0000000000003270 <erf@plt>:
    3270:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3274:	ldr	x17, [x16, #344]
    3278:	add	x16, x16, #0x158
    327c:	br	x17

0000000000003280 <_PyArg_CheckPositional@plt>:
    3280:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3284:	ldr	x17, [x16, #352]
    3288:	add	x16, x16, #0x160
    328c:	br	x17

0000000000003290 <PyLong_AsLongAndOverflow@plt>:
    3290:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3294:	ldr	x17, [x16, #360]
    3298:	add	x16, x16, #0x168
    329c:	br	x17

00000000000032a0 <Py_BuildValue@plt>:
    32a0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    32a4:	ldr	x17, [x16, #368]
    32a8:	add	x16, x16, #0x170
    32ac:	br	x17

00000000000032b0 <PyErr_Occurred@plt>:
    32b0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    32b4:	ldr	x17, [x16, #376]
    32b8:	add	x16, x16, #0x178
    32bc:	br	x17

00000000000032c0 <PyModule_Create2@plt>:
    32c0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    32c4:	ldr	x17, [x16, #384]
    32c8:	add	x16, x16, #0x180
    32cc:	br	x17

00000000000032d0 <_Py_CheckFunctionResult@plt>:
    32d0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    32d4:	ldr	x17, [x16, #392]
    32d8:	add	x16, x16, #0x188
    32dc:	br	x17

00000000000032e0 <PyFloat_AsDouble@plt>:
    32e0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    32e4:	ldr	x17, [x16, #400]
    32e8:	add	x16, x16, #0x190
    32ec:	br	x17

00000000000032f0 <PyArg_ParseTuple@plt>:
    32f0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    32f4:	ldr	x17, [x16, #408]
    32f8:	add	x16, x16, #0x198
    32fc:	br	x17

0000000000003300 <Py_FatalError@plt>:
    3300:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3304:	ldr	x17, [x16, #416]
    3308:	add	x16, x16, #0x1a0
    330c:	br	x17

0000000000003310 <erfc@plt>:
    3310:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3314:	ldr	x17, [x16, #424]
    3318:	add	x16, x16, #0x1a8
    331c:	br	x17

0000000000003320 <modf@plt>:
    3320:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3324:	ldr	x17, [x16, #432]
    3328:	add	x16, x16, #0x1b0
    332c:	br	x17

0000000000003330 <PyLong_AsDouble@plt>:
    3330:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3334:	ldr	x17, [x16, #440]
    3338:	add	x16, x16, #0x1b8
    333c:	br	x17

0000000000003340 <frexp@plt>:
    3340:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3344:	ldr	x17, [x16, #448]
    3348:	add	x16, x16, #0x1c0
    334c:	br	x17

0000000000003350 <PyLong_FromUnsignedLong@plt>:
    3350:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3354:	ldr	x17, [x16, #456]
    3358:	add	x16, x16, #0x1c8
    335c:	br	x17

0000000000003360 <_Py_dg_infinity@plt>:
    3360:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3364:	ldr	x17, [x16, #464]
    3368:	add	x16, x16, #0x1d0
    336c:	br	x17

0000000000003370 <PyObject_GetIter@plt>:
    3370:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3374:	ldr	x17, [x16, #472]
    3378:	add	x16, x16, #0x1d8
    337c:	br	x17

0000000000003380 <PyModule_AddObject@plt>:
    3380:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3384:	ldr	x17, [x16, #480]
    3388:	add	x16, x16, #0x1e0
    338c:	br	x17

0000000000003390 <PySequence_Tuple@plt>:
    3390:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3394:	ldr	x17, [x16, #488]
    3398:	add	x16, x16, #0x1e8
    339c:	br	x17

00000000000033a0 <fmod@plt>:
    33a0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    33a4:	ldr	x17, [x16, #496]
    33a8:	add	x16, x16, #0x1f0
    33ac:	br	x17

00000000000033b0 <PyType_IsSubtype@plt>:
    33b0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    33b4:	ldr	x17, [x16, #504]
    33b8:	add	x16, x16, #0x1f8
    33bc:	br	x17

00000000000033c0 <PyErr_Format@plt>:
    33c0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    33c4:	ldr	x17, [x16, #512]
    33c8:	add	x16, x16, #0x200
    33cc:	br	x17

00000000000033d0 <_PyObject_MakeTpCall@plt>:
    33d0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    33d4:	ldr	x17, [x16, #520]
    33d8:	add	x16, x16, #0x208
    33dc:	br	x17

00000000000033e0 <PyNumber_Index@plt>:
    33e0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    33e4:	ldr	x17, [x16, #528]
    33e8:	add	x16, x16, #0x210
    33ec:	br	x17

00000000000033f0 <__errno_location@plt>:
    33f0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    33f4:	ldr	x17, [x16, #536]
    33f8:	add	x16, x16, #0x218
    33fc:	br	x17

0000000000003400 <cos@plt>:
    3400:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3404:	ldr	x17, [x16, #544]
    3408:	add	x16, x16, #0x220
    340c:	br	x17

0000000000003410 <PyMem_Malloc@plt>:
    3410:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3414:	ldr	x17, [x16, #552]
    3418:	add	x16, x16, #0x228
    341c:	br	x17

0000000000003420 <PyNumber_Subtract@plt>:
    3420:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3424:	ldr	x17, [x16, #560]
    3428:	add	x16, x16, #0x230
    342c:	br	x17

0000000000003430 <PyNumber_TrueDivide@plt>:
    3430:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3434:	ldr	x17, [x16, #568]
    3438:	add	x16, x16, #0x238
    343c:	br	x17

0000000000003440 <exp@plt>:
    3440:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3444:	ldr	x17, [x16, #576]
    3448:	add	x16, x16, #0x240
    344c:	br	x17

0000000000003450 <_PyLong_Lshift@plt>:
    3450:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3454:	ldr	x17, [x16, #584]
    3458:	add	x16, x16, #0x248
    345c:	br	x17

0000000000003460 <PyNumber_FloorDivide@plt>:
    3460:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3464:	ldr	x17, [x16, #592]
    3468:	add	x16, x16, #0x250
    346c:	br	x17

Disassembly of section .text:

0000000000003470 <PyInit_math@@Base-0x49cc>:
    3470:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    3474:	ldr	x0, [x0, #3928]
    3478:	cbz	x0, 3480 <PyNumber_FloorDivide@plt+0x20>
    347c:	b	3260 <__gmon_start__@plt>
    3480:	ret
    3484:	adrp	x0, 1c000 <_Py_log1p@@Base+0x140ec>
    3488:	add	x0, x0, #0x9f0
    348c:	adrp	x1, 1c000 <_Py_log1p@@Base+0x140ec>
    3490:	add	x1, x1, #0x9f0
    3494:	cmp	x0, x1
    3498:	b.eq	34c4 <PyNumber_FloorDivide@plt+0x64>  // b.none
    349c:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    34a0:	ldr	x1, [x1, #3808]
    34a4:	cbz	x1, 34c4 <PyNumber_FloorDivide@plt+0x64>
    34a8:	stp	x29, x30, [sp, #-16]!
    34ac:	mov	x29, sp
    34b0:	adrp	x0, 1c000 <_Py_log1p@@Base+0x140ec>
    34b4:	add	x0, x0, #0x9f0
    34b8:	blr	x1
    34bc:	ldp	x29, x30, [sp], #16
    34c0:	ret
    34c4:	ret
    34c8:	adrp	x0, 1c000 <_Py_log1p@@Base+0x140ec>
    34cc:	add	x0, x0, #0x9f0
    34d0:	adrp	x1, 1c000 <_Py_log1p@@Base+0x140ec>
    34d4:	add	x1, x1, #0x9f0
    34d8:	sub	x0, x0, x1
    34dc:	lsr	x1, x0, #63
    34e0:	add	x0, x1, x0, asr #3
    34e4:	cmp	xzr, x0, asr #1
    34e8:	b.eq	3518 <PyNumber_FloorDivide@plt+0xb8>  // b.none
    34ec:	asr	x1, x0, #1
    34f0:	adrp	x2, 1b000 <_Py_log1p@@Base+0x130ec>
    34f4:	ldr	x2, [x2, #4040]
    34f8:	cbz	x2, 3518 <PyNumber_FloorDivide@plt+0xb8>
    34fc:	stp	x29, x30, [sp, #-16]!
    3500:	mov	x29, sp
    3504:	adrp	x0, 1c000 <_Py_log1p@@Base+0x140ec>
    3508:	add	x0, x0, #0x9f0
    350c:	blr	x2
    3510:	ldp	x29, x30, [sp], #16
    3514:	ret
    3518:	ret
    351c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x140ec>
    3520:	ldrb	w0, [x0, #2544]
    3524:	cbnz	w0, 3560 <PyNumber_FloorDivide@plt+0x100>
    3528:	stp	x29, x30, [sp, #-16]!
    352c:	mov	x29, sp
    3530:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    3534:	ldr	x0, [x0, #3848]
    3538:	cbz	x0, 3548 <PyNumber_FloorDivide@plt+0xe8>
    353c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x140ec>
    3540:	ldr	x0, [x0, #600]
    3544:	bl	3070 <__cxa_finalize@plt>
    3548:	bl	3484 <PyNumber_FloorDivide@plt+0x24>
    354c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x140ec>
    3550:	mov	w1, #0x1                   	// #1
    3554:	strb	w1, [x0, #2544]
    3558:	ldp	x29, x30, [sp], #16
    355c:	ret
    3560:	ret
    3564:	stp	x29, x30, [sp, #-16]!
    3568:	mov	x29, sp
    356c:	bl	34c8 <PyNumber_FloorDivide@plt+0x68>
    3570:	ldp	x29, x30, [sp], #16
    3574:	ret
    3578:	fmov	d1, #5.000000000000000000e+00
    357c:	fcmpe	d0, d1
    3580:	b.pl	35c8 <PyNumber_FloorDivide@plt+0x168>  // b.nfrst
    3584:	mov	x0, #0x60                  	// #96
    3588:	movi	d1, #0x0
    358c:	fmov	d2, d1
    3590:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    3594:	add	x1, x1, #0x500
    3598:	add	x2, x1, #0x68
    359c:	fmul	d2, d0, d2
    35a0:	ldr	d3, [x0, x1]
    35a4:	fadd	d2, d2, d3
    35a8:	fmul	d1, d0, d1
    35ac:	ldr	d3, [x0, x2]
    35b0:	fadd	d1, d1, d3
    35b4:	sub	x0, x0, #0x8
    35b8:	cmn	x0, #0x8
    35bc:	b.ne	359c <PyNumber_FloorDivide@plt+0x13c>  // b.any
    35c0:	fdiv	d0, d2, d1
    35c4:	ret
    35c8:	mov	x0, #0x0                   	// #0
    35cc:	movi	d1, #0x0
    35d0:	fmov	d2, d1
    35d4:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    35d8:	add	x1, x1, #0x500
    35dc:	add	x2, x1, #0x68
    35e0:	fdiv	d2, d2, d0
    35e4:	ldr	d3, [x0, x1]
    35e8:	fadd	d2, d2, d3
    35ec:	fdiv	d1, d1, d0
    35f0:	ldr	d3, [x0, x2]
    35f4:	fadd	d1, d1, d3
    35f8:	add	x0, x0, #0x8
    35fc:	cmp	x0, #0x68
    3600:	b.ne	35e0 <PyNumber_FloorDivide@plt+0x180>  // b.any
    3604:	b	35c0 <PyNumber_FloorDivide@plt+0x160>
    3608:	lsr	x2, x0, #62
    360c:	add	w1, w2, #0x1
    3610:	lsr	x3, x0, #59
    3614:	add	x2, x2, #0x1
    3618:	udiv	x2, x3, x2
    361c:	add	w1, w2, w1, lsl #1
    3620:	lsr	x2, x0, #53
    3624:	mov	w3, w1
    3628:	udiv	x2, x2, x3
    362c:	add	w1, w2, w1, lsl #3
    3630:	lsr	x2, x0, #41
    3634:	mov	w3, w1
    3638:	udiv	x2, x2, x3
    363c:	add	w1, w2, w1, lsl #7
    3640:	lsr	x0, x0, #17
    3644:	mov	w2, w1
    3648:	udiv	x0, x0, x2
    364c:	lsl	w1, w1, #15
    3650:	add	x0, x0, x1
    3654:	ret
    3658:	stp	x29, x30, [sp, #-112]!
    365c:	mov	x29, sp
    3660:	stp	x19, x20, [sp, #16]
    3664:	mov	x19, x1
    3668:	cmp	x2, #0x2
    366c:	b.eq	368c <PyNumber_FloorDivide@plt+0x22c>  // b.none
    3670:	mov	x1, x2
    3674:	mov	x3, #0x2                   	// #2
    3678:	mov	x2, x3
    367c:	adrp	x0, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    3680:	add	x0, x0, #0xf48
    3684:	bl	3280 <_PyArg_CheckPositional@plt>
    3688:	cbz	w0, 3b00 <PyNumber_FloorDivide@plt+0x6a0>
    368c:	stp	x21, x22, [sp, #32]
    3690:	ldr	x21, [x19, #8]
    3694:	ldr	x0, [x19]
    3698:	bl	33e0 <PyNumber_Index@plt>
    369c:	mov	x19, x0
    36a0:	cbz	x0, 3b84 <PyNumber_FloorDivide@plt+0x724>
    36a4:	ldr	x1, [x0, #8]
    36a8:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    36ac:	ldr	x0, [x0, #3984]
    36b0:	cmp	x1, x0
    36b4:	b.eq	37e4 <PyNumber_FloorDivide@plt+0x384>  // b.none
    36b8:	mov	x0, x19
    36bc:	bl	3170 <_PyLong_Copy@plt>
    36c0:	mov	x20, x0
    36c4:	ldr	x0, [x19]
    36c8:	sub	x0, x0, #0x1
    36cc:	str	x0, [x19]
    36d0:	cbz	x0, 37d8 <PyNumber_FloorDivide@plt+0x378>
    36d4:	cbz	x20, 3af4 <PyNumber_FloorDivide@plt+0x694>
    36d8:	mov	x0, x21
    36dc:	bl	33e0 <PyNumber_Index@plt>
    36e0:	mov	x19, x0
    36e4:	cbz	x0, 37ec <PyNumber_FloorDivide@plt+0x38c>
    36e8:	stp	x23, x24, [sp, #48]
    36ec:	ldr	x1, [x0, #8]
    36f0:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    36f4:	ldr	x0, [x0, #3984]
    36f8:	cmp	x1, x0
    36fc:	b.eq	3854 <PyNumber_FloorDivide@plt+0x3f4>  // b.none
    3700:	mov	x0, x19
    3704:	bl	3170 <_PyLong_Copy@plt>
    3708:	mov	x23, x0
    370c:	ldr	x0, [x19]
    3710:	sub	x0, x0, #0x1
    3714:	str	x0, [x19]
    3718:	cbz	x0, 3814 <PyNumber_FloorDivide@plt+0x3b4>
    371c:	cbz	x23, 3820 <PyNumber_FloorDivide@plt+0x3c0>
    3720:	ldr	x0, [x20, #16]
    3724:	tbnz	x0, #63, 385c <PyNumber_FloorDivide@plt+0x3fc>
    3728:	ldr	x0, [x23, #16]
    372c:	tbnz	x0, #63, 3878 <PyNumber_FloorDivide@plt+0x418>
    3730:	mov	x1, x23
    3734:	mov	x0, x20
    3738:	bl	3420 <PyNumber_Subtract@plt>
    373c:	mov	x22, x0
    3740:	cbz	x0, 3890 <PyNumber_FloorDivide@plt+0x430>
    3744:	ldr	x0, [x0, #16]
    3748:	tbnz	x0, #63, 3898 <PyNumber_FloorDivide@plt+0x438>
    374c:	mov	w2, #0x0                   	// #0
    3750:	mov	x1, x23
    3754:	mov	x0, x22
    3758:	bl	31f0 <PyObject_RichCompareBool@plt>
    375c:	mov	w19, w0
    3760:	cmp	w0, #0x0
    3764:	b.le	38f8 <PyNumber_FloorDivide@plt+0x498>
    3768:	ldr	x0, [x23]
    376c:	sub	x0, x0, #0x1
    3770:	str	x0, [x23]
    3774:	cbz	x0, 38ec <PyNumber_FloorDivide@plt+0x48c>
    3778:	add	x1, sp, #0x6c
    377c:	mov	x0, x22
    3780:	bl	2fe0 <PyLong_AsLongLongAndOverflow@plt>
    3784:	ldr	w1, [sp, #108]
    3788:	cmp	w1, #0x0
    378c:	b.gt	3920 <PyNumber_FloorDivide@plt+0x4c0>
    3790:	cmn	x0, #0x1
    3794:	b.eq	3b08 <PyNumber_FloorDivide@plt+0x6a8>  // b.none
    3798:	cbz	x0, 3944 <PyNumber_FloorDivide@plt+0x4e4>
    379c:	ldr	x1, [x20]
    37a0:	cmp	x0, #0x1
    37a4:	b.eq	3958 <PyNumber_FloorDivide@plt+0x4f8>  // b.none
    37a8:	add	x1, x1, #0x2
    37ac:	str	x1, [x20]
    37b0:	b.le	3a7c <PyNumber_FloorDivide@plt+0x61c>
    37b4:	stp	x25, x26, [sp, #64]
    37b8:	str	x27, [sp, #80]
    37bc:	mov	x26, x0
    37c0:	mov	x19, x20
    37c4:	mov	x21, x20
    37c8:	mov	x25, #0x2                   	// #2
    37cc:	adrp	x27, 1b000 <_Py_log1p@@Base+0x130ec>
    37d0:	ldr	x27, [x27, #4008]
    37d4:	b	39c8 <PyNumber_FloorDivide@plt+0x568>
    37d8:	mov	x0, x19
    37dc:	bl	3080 <_Py_Dealloc@plt>
    37e0:	b	36d4 <PyNumber_FloorDivide@plt+0x274>
    37e4:	mov	x20, x19
    37e8:	b	36d8 <PyNumber_FloorDivide@plt+0x278>
    37ec:	ldr	x0, [x20]
    37f0:	sub	x0, x0, #0x1
    37f4:	str	x0, [x20]
    37f8:	cbz	x0, 3804 <PyNumber_FloorDivide@plt+0x3a4>
    37fc:	ldp	x21, x22, [sp, #32]
    3800:	b	3b74 <PyNumber_FloorDivide@plt+0x714>
    3804:	mov	x0, x20
    3808:	bl	3080 <_Py_Dealloc@plt>
    380c:	ldp	x21, x22, [sp, #32]
    3810:	b	3b74 <PyNumber_FloorDivide@plt+0x714>
    3814:	mov	x0, x19
    3818:	bl	3080 <_Py_Dealloc@plt>
    381c:	b	371c <PyNumber_FloorDivide@plt+0x2bc>
    3820:	ldr	x0, [x20]
    3824:	sub	x0, x0, #0x1
    3828:	str	x0, [x20]
    382c:	mov	x19, x23
    3830:	cbz	x0, 3840 <PyNumber_FloorDivide@plt+0x3e0>
    3834:	ldp	x21, x22, [sp, #32]
    3838:	ldp	x23, x24, [sp, #48]
    383c:	b	3b74 <PyNumber_FloorDivide@plt+0x714>
    3840:	mov	x0, x20
    3844:	bl	3080 <_Py_Dealloc@plt>
    3848:	ldp	x21, x22, [sp, #32]
    384c:	ldp	x23, x24, [sp, #48]
    3850:	b	3b74 <PyNumber_FloorDivide@plt+0x714>
    3854:	mov	x23, x19
    3858:	b	3720 <PyNumber_FloorDivide@plt+0x2c0>
    385c:	adrp	x1, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    3860:	add	x1, x1, #0xf50
    3864:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    3868:	ldr	x0, [x0, #3872]
    386c:	ldr	x0, [x0]
    3870:	bl	3130 <PyErr_SetString@plt>
    3874:	b	3890 <PyNumber_FloorDivide@plt+0x430>
    3878:	adrp	x1, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    387c:	add	x1, x1, #0xf78
    3880:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    3884:	ldr	x0, [x0, #3872]
    3888:	ldr	x0, [x0]
    388c:	bl	3130 <PyErr_SetString@plt>
    3890:	mov	x22, x23
    3894:	b	3b48 <PyNumber_FloorDivide@plt+0x6e8>
    3898:	ldr	x0, [x22]
    389c:	sub	x0, x0, #0x1
    38a0:	str	x0, [x22]
    38a4:	cbz	x0, 38e0 <PyNumber_FloorDivide@plt+0x480>
    38a8:	mov	x0, #0x0                   	// #0
    38ac:	bl	31e0 <PyLong_FromLong@plt>
    38b0:	mov	x19, x0
    38b4:	ldr	x0, [x20]
    38b8:	sub	x0, x0, #0x1
    38bc:	str	x0, [x20]
    38c0:	cbz	x0, 3a88 <PyNumber_FloorDivide@plt+0x628>
    38c4:	ldr	x0, [x23]
    38c8:	sub	x0, x0, #0x1
    38cc:	str	x0, [x23]
    38d0:	cbz	x0, 3a94 <PyNumber_FloorDivide@plt+0x634>
    38d4:	ldp	x21, x22, [sp, #32]
    38d8:	ldp	x23, x24, [sp, #48]
    38dc:	b	3b74 <PyNumber_FloorDivide@plt+0x714>
    38e0:	mov	x0, x22
    38e4:	bl	3080 <_Py_Dealloc@plt>
    38e8:	b	38a8 <PyNumber_FloorDivide@plt+0x448>
    38ec:	mov	x0, x23
    38f0:	bl	3080 <_Py_Dealloc@plt>
    38f4:	b	3778 <PyNumber_FloorDivide@plt+0x318>
    38f8:	ldr	x0, [x22]
    38fc:	sub	x0, x0, #0x1
    3900:	str	x0, [x22]
    3904:	cbz	x0, 3914 <PyNumber_FloorDivide@plt+0x4b4>
    3908:	tbnz	w19, #31, 3890 <PyNumber_FloorDivide@plt+0x430>
    390c:	mov	x22, x23
    3910:	b	3778 <PyNumber_FloorDivide@plt+0x318>
    3914:	mov	x0, x22
    3918:	bl	3080 <_Py_Dealloc@plt>
    391c:	b	3908 <PyNumber_FloorDivide@plt+0x4a8>
    3920:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    3924:	adrp	x1, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    3928:	add	x1, x1, #0xfa0
    392c:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    3930:	ldr	x0, [x0, #3936]
    3934:	ldr	x0, [x0]
    3938:	bl	33c0 <PyErr_Format@plt>
    393c:	mov	x23, x22
    3940:	b	3890 <PyNumber_FloorDivide@plt+0x430>
    3944:	mov	x0, #0x1                   	// #1
    3948:	bl	31e0 <PyLong_FromLong@plt>
    394c:	mov	x19, x0
    3950:	mov	x23, x22
    3954:	b	38b4 <PyNumber_FloorDivide@plt+0x454>
    3958:	add	x1, x1, #0x1
    395c:	str	x1, [x20]
    3960:	mov	x19, x20
    3964:	mov	x23, x22
    3968:	b	38b4 <PyNumber_FloorDivide@plt+0x454>
    396c:	mov	x0, x23
    3970:	bl	3080 <_Py_Dealloc@plt>
    3974:	b	39ec <PyNumber_FloorDivide@plt+0x58c>
    3978:	mov	x0, x19
    397c:	bl	3080 <_Py_Dealloc@plt>
    3980:	b	3a10 <PyNumber_FloorDivide@plt+0x5b0>
    3984:	ldr	x0, [x21]
    3988:	sub	x0, x0, #0x1
    398c:	str	x0, [x21]
    3990:	mov	x19, x23
    3994:	cbnz	x0, 3b30 <PyNumber_FloorDivide@plt+0x6d0>
    3998:	b	3b24 <PyNumber_FloorDivide@plt+0x6c4>
    399c:	mov	x0, x23
    39a0:	bl	3080 <_Py_Dealloc@plt>
    39a4:	ldr	x0, [x24]
    39a8:	sub	x0, x0, #0x1
    39ac:	str	x0, [x24]
    39b0:	cbz	x0, 3a48 <PyNumber_FloorDivide@plt+0x5e8>
    39b4:	cbz	x19, 3b10 <PyNumber_FloorDivide@plt+0x6b0>
    39b8:	add	x0, x25, #0x1
    39bc:	cmp	x25, x26
    39c0:	b.eq	3a54 <PyNumber_FloorDivide@plt+0x5f4>  // b.none
    39c4:	mov	x25, x0
    39c8:	mov	x23, x21
    39cc:	ldr	x1, [x27]
    39d0:	mov	x0, x21
    39d4:	bl	3420 <PyNumber_Subtract@plt>
    39d8:	mov	x21, x0
    39dc:	ldr	x0, [x23]
    39e0:	sub	x0, x0, #0x1
    39e4:	str	x0, [x23]
    39e8:	cbz	x0, 396c <PyNumber_FloorDivide@plt+0x50c>
    39ec:	cbz	x21, 3b2c <PyNumber_FloorDivide@plt+0x6cc>
    39f0:	mov	x1, x21
    39f4:	mov	x0, x19
    39f8:	bl	30d0 <PyNumber_Multiply@plt>
    39fc:	mov	x23, x0
    3a00:	ldr	x0, [x19]
    3a04:	sub	x0, x0, #0x1
    3a08:	str	x0, [x19]
    3a0c:	cbz	x0, 3978 <PyNumber_FloorDivide@plt+0x518>
    3a10:	cbz	x23, 3b10 <PyNumber_FloorDivide@plt+0x6b0>
    3a14:	mov	x0, x25
    3a18:	bl	3040 <PyLong_FromUnsignedLongLong@plt>
    3a1c:	mov	x24, x0
    3a20:	cbz	x0, 3984 <PyNumber_FloorDivide@plt+0x524>
    3a24:	mov	x1, x0
    3a28:	mov	x0, x23
    3a2c:	bl	3460 <PyNumber_FloorDivide@plt>
    3a30:	mov	x19, x0
    3a34:	ldr	x0, [x23]
    3a38:	sub	x0, x0, #0x1
    3a3c:	str	x0, [x23]
    3a40:	cbnz	x0, 39a4 <PyNumber_FloorDivide@plt+0x544>
    3a44:	b	399c <PyNumber_FloorDivide@plt+0x53c>
    3a48:	mov	x0, x24
    3a4c:	bl	3080 <_Py_Dealloc@plt>
    3a50:	b	39b4 <PyNumber_FloorDivide@plt+0x554>
    3a54:	ldp	x25, x26, [sp, #64]
    3a58:	ldr	x27, [sp, #80]
    3a5c:	ldr	x0, [x21]
    3a60:	sub	x0, x0, #0x1
    3a64:	str	x0, [x21]
    3a68:	mov	x23, x22
    3a6c:	cbnz	x0, 38b4 <PyNumber_FloorDivide@plt+0x454>
    3a70:	mov	x0, x21
    3a74:	bl	3080 <_Py_Dealloc@plt>
    3a78:	b	38b4 <PyNumber_FloorDivide@plt+0x454>
    3a7c:	mov	x19, x20
    3a80:	mov	x21, x20
    3a84:	b	3a5c <PyNumber_FloorDivide@plt+0x5fc>
    3a88:	mov	x0, x20
    3a8c:	bl	3080 <_Py_Dealloc@plt>
    3a90:	b	38c4 <PyNumber_FloorDivide@plt+0x464>
    3a94:	mov	x0, x23
    3a98:	bl	3080 <_Py_Dealloc@plt>
    3a9c:	ldp	x21, x22, [sp, #32]
    3aa0:	ldp	x23, x24, [sp, #48]
    3aa4:	b	3b74 <PyNumber_FloorDivide@plt+0x714>
    3aa8:	mov	x0, x19
    3aac:	bl	3080 <_Py_Dealloc@plt>
    3ab0:	ldp	x25, x26, [sp, #64]
    3ab4:	ldr	x27, [sp, #80]
    3ab8:	b	3b48 <PyNumber_FloorDivide@plt+0x6e8>
    3abc:	ldp	x25, x26, [sp, #64]
    3ac0:	ldr	x27, [sp, #80]
    3ac4:	b	3b48 <PyNumber_FloorDivide@plt+0x6e8>
    3ac8:	ldp	x25, x26, [sp, #64]
    3acc:	ldr	x27, [sp, #80]
    3ad0:	b	3b48 <PyNumber_FloorDivide@plt+0x6e8>
    3ad4:	mov	x0, x20
    3ad8:	bl	3080 <_Py_Dealloc@plt>
    3adc:	b	3b58 <PyNumber_FloorDivide@plt+0x6f8>
    3ae0:	mov	x0, x22
    3ae4:	bl	3080 <_Py_Dealloc@plt>
    3ae8:	ldp	x21, x22, [sp, #32]
    3aec:	ldp	x23, x24, [sp, #48]
    3af0:	b	3b74 <PyNumber_FloorDivide@plt+0x714>
    3af4:	mov	x19, x20
    3af8:	ldp	x21, x22, [sp, #32]
    3afc:	b	3b74 <PyNumber_FloorDivide@plt+0x714>
    3b00:	mov	x19, #0x0                   	// #0
    3b04:	b	3b74 <PyNumber_FloorDivide@plt+0x714>
    3b08:	mov	x23, x22
    3b0c:	b	3890 <PyNumber_FloorDivide@plt+0x430>
    3b10:	ldr	x0, [x21]
    3b14:	sub	x0, x0, #0x1
    3b18:	str	x0, [x21]
    3b1c:	cbnz	x0, 3ac8 <PyNumber_FloorDivide@plt+0x668>
    3b20:	mov	x19, #0x0                   	// #0
    3b24:	mov	x0, x21
    3b28:	bl	3080 <_Py_Dealloc@plt>
    3b2c:	cbz	x19, 3abc <PyNumber_FloorDivide@plt+0x65c>
    3b30:	ldr	x0, [x19]
    3b34:	sub	x0, x0, #0x1
    3b38:	str	x0, [x19]
    3b3c:	cbz	x0, 3aa8 <PyNumber_FloorDivide@plt+0x648>
    3b40:	ldp	x25, x26, [sp, #64]
    3b44:	ldr	x27, [sp, #80]
    3b48:	ldr	x0, [x20]
    3b4c:	sub	x0, x0, #0x1
    3b50:	str	x0, [x20]
    3b54:	cbz	x0, 3ad4 <PyNumber_FloorDivide@plt+0x674>
    3b58:	ldr	x0, [x22]
    3b5c:	sub	x0, x0, #0x1
    3b60:	str	x0, [x22]
    3b64:	mov	x19, #0x0                   	// #0
    3b68:	cbz	x0, 3ae0 <PyNumber_FloorDivide@plt+0x680>
    3b6c:	ldp	x21, x22, [sp, #32]
    3b70:	ldp	x23, x24, [sp, #48]
    3b74:	mov	x0, x19
    3b78:	ldp	x19, x20, [sp, #16]
    3b7c:	ldp	x29, x30, [sp], #112
    3b80:	ret
    3b84:	ldp	x21, x22, [sp, #32]
    3b88:	b	3b74 <PyNumber_FloorDivide@plt+0x714>
    3b8c:	sub	sp, sp, #0x70
    3b90:	stp	x29, x30, [sp, #16]
    3b94:	add	x29, sp, #0x10
    3b98:	stp	x19, x20, [sp, #32]
    3b9c:	stp	x21, x22, [sp, #48]
    3ba0:	mov	x0, x1
    3ba4:	mov	x1, x2
    3ba8:	cbz	x3, 3d10 <PyNumber_FloorDivide@plt+0x8b0>
    3bac:	ldr	x20, [x3, #16]
    3bb0:	add	x20, x2, x20
    3bb4:	add	x2, sp, #0x60
    3bb8:	str	x2, [sp]
    3bbc:	mov	w7, #0x0                   	// #0
    3bc0:	mov	w6, #0x1                   	// #1
    3bc4:	mov	w5, w6
    3bc8:	adrp	x4, 1c000 <_Py_log1p@@Base+0x140ec>
    3bcc:	add	x4, x4, #0x260
    3bd0:	mov	x2, #0x0                   	// #0
    3bd4:	bl	3120 <_PyArg_UnpackKeywords@plt>
    3bd8:	mov	x19, x0
    3bdc:	cbz	x0, 40b8 <PyNumber_FloorDivide@plt+0xc58>
    3be0:	ldr	x0, [x0]
    3be4:	cmp	x20, #0x1
    3be8:	b.eq	3d20 <PyNumber_FloorDivide@plt+0x8c0>  // b.none
    3bec:	ldr	x20, [x19, #8]
    3bf0:	bl	3370 <PyObject_GetIter@plt>
    3bf4:	mov	x21, x0
    3bf8:	cbz	x0, 4148 <PyNumber_FloorDivide@plt+0xce8>
    3bfc:	cbz	x20, 3d30 <PyNumber_FloorDivide@plt+0x8d0>
    3c00:	ldr	x0, [x20]
    3c04:	add	x0, x0, #0x1
    3c08:	str	x0, [x20]
    3c0c:	ldr	x1, [x20, #8]
    3c10:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    3c14:	ldr	x0, [x0, #3984]
    3c18:	cmp	x1, x0
    3c1c:	b.ne	3cc8 <PyNumber_FloorDivide@plt+0x868>  // b.any
    3c20:	add	x1, sp, #0x5c
    3c24:	mov	x0, x20
    3c28:	bl	3290 <PyLong_AsLongAndOverflow@plt>
    3c2c:	mov	x22, x0
    3c30:	ldr	w0, [sp, #92]
    3c34:	cbnz	w0, 3cc8 <PyNumber_FloorDivide@plt+0x868>
    3c38:	str	x23, [sp, #64]
    3c3c:	str	d8, [sp, #72]
    3c40:	ldr	x0, [x20]
    3c44:	sub	x0, x0, #0x1
    3c48:	str	x0, [x20]
    3c4c:	cbz	x0, 3d60 <PyNumber_FloorDivide@plt+0x900>
    3c50:	adrp	x20, 1b000 <_Py_log1p@@Base+0x130ec>
    3c54:	ldr	x20, [x20, #3984]
    3c58:	add	x23, sp, #0x5c
    3c5c:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    3c60:	ldr	d8, [x0, #1128]
    3c64:	mov	x0, x21
    3c68:	bl	30b0 <PyIter_Next@plt>
    3c6c:	mov	x19, x0
    3c70:	cbz	x0, 3d6c <PyNumber_FloorDivide@plt+0x90c>
    3c74:	ldr	x0, [x0, #8]
    3c78:	cmp	x0, x20
    3c7c:	b.eq	3db4 <PyNumber_FloorDivide@plt+0x954>  // b.none
    3c80:	mov	x0, x22
    3c84:	bl	31e0 <PyLong_FromLong@plt>
    3c88:	mov	x22, x0
    3c8c:	cbz	x0, 3e2c <PyNumber_FloorDivide@plt+0x9cc>
    3c90:	mov	x1, x19
    3c94:	bl	30d0 <PyNumber_Multiply@plt>
    3c98:	mov	x20, x0
    3c9c:	ldr	x0, [x22]
    3ca0:	sub	x0, x0, #0x1
    3ca4:	str	x0, [x22]
    3ca8:	cbz	x0, 3e7c <PyNumber_FloorDivide@plt+0xa1c>
    3cac:	ldr	x0, [x19]
    3cb0:	sub	x0, x0, #0x1
    3cb4:	str	x0, [x19]
    3cb8:	cbz	x0, 3e88 <PyNumber_FloorDivide@plt+0xa28>
    3cbc:	cbz	x20, 3e94 <PyNumber_FloorDivide@plt+0xa34>
    3cc0:	ldr	x23, [sp, #64]
    3cc4:	ldr	d8, [sp, #72]
    3cc8:	ldr	x1, [x20, #8]
    3ccc:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    3cd0:	ldr	x0, [x0, #3824]
    3cd4:	cmp	x1, x0
    3cd8:	b.ne	40fc <PyNumber_FloorDivide@plt+0xc9c>  // b.any
    3cdc:	str	x23, [sp, #64]
    3ce0:	str	d8, [sp, #72]
    3ce4:	ldr	d8, [x20, #16]
    3ce8:	ldr	x0, [x20]
    3cec:	sub	x0, x0, #0x1
    3cf0:	str	x0, [x20]
    3cf4:	cbz	x0, 3ec8 <PyNumber_FloorDivide@plt+0xa68>
    3cf8:	adrp	x22, 1b000 <_Py_log1p@@Base+0x130ec>
    3cfc:	ldr	x22, [x22, #3824]
    3d00:	adrp	x20, 1b000 <_Py_log1p@@Base+0x130ec>
    3d04:	ldr	x20, [x20, #3984]
    3d08:	add	x23, sp, #0x5c
    3d0c:	b	3f34 <PyNumber_FloorDivide@plt+0xad4>
    3d10:	cmp	x2, #0x1
    3d14:	b.ne	4150 <PyNumber_FloorDivide@plt+0xcf0>  // b.any
    3d18:	cbz	x0, 4184 <PyNumber_FloorDivide@plt+0xd24>
    3d1c:	ldr	x0, [x0]
    3d20:	bl	3370 <PyObject_GetIter@plt>
    3d24:	mov	x21, x0
    3d28:	mov	x19, x0
    3d2c:	cbz	x0, 40b8 <PyNumber_FloorDivide@plt+0xc58>
    3d30:	mov	x0, #0x1                   	// #1
    3d34:	bl	31e0 <PyLong_FromLong@plt>
    3d38:	mov	x20, x0
    3d3c:	cbnz	x0, 3c0c <PyNumber_FloorDivide@plt+0x7ac>
    3d40:	ldr	x0, [x21]
    3d44:	sub	x0, x0, #0x1
    3d48:	str	x0, [x21]
    3d4c:	mov	x19, x20
    3d50:	cbnz	x0, 40b8 <PyNumber_FloorDivide@plt+0xc58>
    3d54:	mov	x0, x21
    3d58:	bl	3080 <_Py_Dealloc@plt>
    3d5c:	b	40b8 <PyNumber_FloorDivide@plt+0xc58>
    3d60:	mov	x0, x20
    3d64:	bl	3080 <_Py_Dealloc@plt>
    3d68:	b	3c50 <PyNumber_FloorDivide@plt+0x7f0>
    3d6c:	ldr	x0, [x21]
    3d70:	sub	x0, x0, #0x1
    3d74:	str	x0, [x21]
    3d78:	cbz	x0, 3d90 <PyNumber_FloorDivide@plt+0x930>
    3d7c:	bl	32b0 <PyErr_Occurred@plt>
    3d80:	cbz	x0, 3d9c <PyNumber_FloorDivide@plt+0x93c>
    3d84:	ldr	x23, [sp, #64]
    3d88:	ldr	d8, [sp, #72]
    3d8c:	b	40b8 <PyNumber_FloorDivide@plt+0xc58>
    3d90:	mov	x0, x21
    3d94:	bl	3080 <_Py_Dealloc@plt>
    3d98:	b	3d7c <PyNumber_FloorDivide@plt+0x91c>
    3d9c:	mov	x0, x22
    3da0:	bl	31e0 <PyLong_FromLong@plt>
    3da4:	mov	x19, x0
    3da8:	ldr	x23, [sp, #64]
    3dac:	ldr	d8, [sp, #72]
    3db0:	b	40b8 <PyNumber_FloorDivide@plt+0xc58>
    3db4:	mov	x1, x23
    3db8:	mov	x0, x19
    3dbc:	bl	3290 <PyLong_AsLongAndOverflow@plt>
    3dc0:	ldr	w1, [sp, #92]
    3dc4:	cbnz	w1, 3c80 <PyNumber_FloorDivide@plt+0x820>
    3dc8:	scvtf	d0, x22
    3dcc:	scvtf	d1, x0
    3dd0:	fmul	d0, d0, d1
    3dd4:	mul	x1, x22, x0
    3dd8:	scvtf	d1, x1
    3ddc:	fcmp	d0, d1
    3de0:	b.eq	3e0c <PyNumber_FloorDivide@plt+0x9ac>  // b.none
    3de4:	fsub	d1, d1, d0
    3de8:	fneg	d2, d1
    3dec:	fcmp	d1, #0.0
    3df0:	fcsel	d1, d2, d1, lt  // lt = tstop
    3df4:	fneg	d2, d0
    3df8:	fcmp	d0, #0.0
    3dfc:	fcsel	d0, d2, d0, lt  // lt = tstop
    3e00:	fmul	d1, d1, d8
    3e04:	fcmpe	d1, d0
    3e08:	b.hi	3c80 <PyNumber_FloorDivide@plt+0x820>  // b.pmore
    3e0c:	mul	x22, x22, x0
    3e10:	ldr	x0, [x19]
    3e14:	sub	x0, x0, #0x1
    3e18:	str	x0, [x19]
    3e1c:	cbnz	x0, 3c64 <PyNumber_FloorDivide@plt+0x804>
    3e20:	mov	x0, x19
    3e24:	bl	3080 <_Py_Dealloc@plt>
    3e28:	b	3c64 <PyNumber_FloorDivide@plt+0x804>
    3e2c:	ldr	x0, [x19]
    3e30:	sub	x0, x0, #0x1
    3e34:	str	x0, [x19]
    3e38:	cbz	x0, 3e5c <PyNumber_FloorDivide@plt+0x9fc>
    3e3c:	ldr	x0, [x21]
    3e40:	sub	x0, x0, #0x1
    3e44:	str	x0, [x21]
    3e48:	mov	x19, x22
    3e4c:	cbz	x0, 3e68 <PyNumber_FloorDivide@plt+0xa08>
    3e50:	ldr	x23, [sp, #64]
    3e54:	ldr	d8, [sp, #72]
    3e58:	b	40b8 <PyNumber_FloorDivide@plt+0xc58>
    3e5c:	mov	x0, x19
    3e60:	bl	3080 <_Py_Dealloc@plt>
    3e64:	b	3e3c <PyNumber_FloorDivide@plt+0x9dc>
    3e68:	mov	x0, x21
    3e6c:	bl	3080 <_Py_Dealloc@plt>
    3e70:	ldr	x23, [sp, #64]
    3e74:	ldr	d8, [sp, #72]
    3e78:	b	40b8 <PyNumber_FloorDivide@plt+0xc58>
    3e7c:	mov	x0, x22
    3e80:	bl	3080 <_Py_Dealloc@plt>
    3e84:	b	3cac <PyNumber_FloorDivide@plt+0x84c>
    3e88:	mov	x0, x19
    3e8c:	bl	3080 <_Py_Dealloc@plt>
    3e90:	b	3cbc <PyNumber_FloorDivide@plt+0x85c>
    3e94:	ldr	x0, [x21]
    3e98:	sub	x0, x0, #0x1
    3e9c:	str	x0, [x21]
    3ea0:	mov	x19, x20
    3ea4:	cbz	x0, 3eb4 <PyNumber_FloorDivide@plt+0xa54>
    3ea8:	ldr	x23, [sp, #64]
    3eac:	ldr	d8, [sp, #72]
    3eb0:	b	40b8 <PyNumber_FloorDivide@plt+0xc58>
    3eb4:	mov	x0, x21
    3eb8:	bl	3080 <_Py_Dealloc@plt>
    3ebc:	ldr	x23, [sp, #64]
    3ec0:	ldr	d8, [sp, #72]
    3ec4:	b	40b8 <PyNumber_FloorDivide@plt+0xc58>
    3ec8:	mov	x0, x20
    3ecc:	bl	3080 <_Py_Dealloc@plt>
    3ed0:	b	3cf8 <PyNumber_FloorDivide@plt+0x898>
    3ed4:	ldr	x0, [x21]
    3ed8:	sub	x0, x0, #0x1
    3edc:	str	x0, [x21]
    3ee0:	cbz	x0, 3ef8 <PyNumber_FloorDivide@plt+0xa98>
    3ee4:	bl	32b0 <PyErr_Occurred@plt>
    3ee8:	cbz	x0, 3f04 <PyNumber_FloorDivide@plt+0xaa4>
    3eec:	ldr	x23, [sp, #64]
    3ef0:	ldr	d8, [sp, #72]
    3ef4:	b	40b8 <PyNumber_FloorDivide@plt+0xc58>
    3ef8:	mov	x0, x21
    3efc:	bl	3080 <_Py_Dealloc@plt>
    3f00:	b	3ee4 <PyNumber_FloorDivide@plt+0xa84>
    3f04:	fmov	d0, d8
    3f08:	bl	31c0 <PyFloat_FromDouble@plt>
    3f0c:	mov	x19, x0
    3f10:	ldr	x23, [sp, #64]
    3f14:	ldr	d8, [sp, #72]
    3f18:	b	40b8 <PyNumber_FloorDivide@plt+0xc58>
    3f1c:	ldr	d0, [x19, #16]
    3f20:	fmul	d8, d8, d0
    3f24:	ldr	x0, [x19]
    3f28:	sub	x0, x0, #0x1
    3f2c:	str	x0, [x19]
    3f30:	cbz	x0, 3fa4 <PyNumber_FloorDivide@plt+0xb44>
    3f34:	mov	x0, x21
    3f38:	bl	30b0 <PyIter_Next@plt>
    3f3c:	mov	x19, x0
    3f40:	cbz	x0, 3ed4 <PyNumber_FloorDivide@plt+0xa74>
    3f44:	ldr	x0, [x0, #8]
    3f48:	cmp	x0, x22
    3f4c:	b.eq	3f1c <PyNumber_FloorDivide@plt+0xabc>  // b.none
    3f50:	cmp	x0, x20
    3f54:	b.eq	3fb0 <PyNumber_FloorDivide@plt+0xb50>  // b.none
    3f58:	fmov	d0, d8
    3f5c:	bl	31c0 <PyFloat_FromDouble@plt>
    3f60:	mov	x22, x0
    3f64:	cbz	x0, 3fec <PyNumber_FloorDivide@plt+0xb8c>
    3f68:	mov	x1, x19
    3f6c:	bl	30d0 <PyNumber_Multiply@plt>
    3f70:	mov	x20, x0
    3f74:	ldr	x0, [x22]
    3f78:	sub	x0, x0, #0x1
    3f7c:	str	x0, [x22]
    3f80:	cbz	x0, 403c <PyNumber_FloorDivide@plt+0xbdc>
    3f84:	ldr	x0, [x19]
    3f88:	sub	x0, x0, #0x1
    3f8c:	str	x0, [x19]
    3f90:	cbz	x0, 4048 <PyNumber_FloorDivide@plt+0xbe8>
    3f94:	cbz	x20, 4054 <PyNumber_FloorDivide@plt+0xbf4>
    3f98:	ldr	x23, [sp, #64]
    3f9c:	ldr	d8, [sp, #72]
    3fa0:	b	40fc <PyNumber_FloorDivide@plt+0xc9c>
    3fa4:	mov	x0, x19
    3fa8:	bl	3080 <_Py_Dealloc@plt>
    3fac:	b	3f34 <PyNumber_FloorDivide@plt+0xad4>
    3fb0:	mov	x1, x23
    3fb4:	mov	x0, x19
    3fb8:	bl	3290 <PyLong_AsLongAndOverflow@plt>
    3fbc:	fmov	d0, x0
    3fc0:	ldr	w0, [sp, #92]
    3fc4:	cbnz	w0, 3f58 <PyNumber_FloorDivide@plt+0xaf8>
    3fc8:	scvtf	d0, d0
    3fcc:	fmul	d8, d8, d0
    3fd0:	ldr	x0, [x19]
    3fd4:	sub	x0, x0, #0x1
    3fd8:	str	x0, [x19]
    3fdc:	cbnz	x0, 3f34 <PyNumber_FloorDivide@plt+0xad4>
    3fe0:	mov	x0, x19
    3fe4:	bl	3080 <_Py_Dealloc@plt>
    3fe8:	b	3f34 <PyNumber_FloorDivide@plt+0xad4>
    3fec:	ldr	x0, [x19]
    3ff0:	sub	x0, x0, #0x1
    3ff4:	str	x0, [x19]
    3ff8:	cbz	x0, 401c <PyNumber_FloorDivide@plt+0xbbc>
    3ffc:	ldr	x0, [x21]
    4000:	sub	x0, x0, #0x1
    4004:	str	x0, [x21]
    4008:	mov	x19, x22
    400c:	cbz	x0, 4028 <PyNumber_FloorDivide@plt+0xbc8>
    4010:	ldr	x23, [sp, #64]
    4014:	ldr	d8, [sp, #72]
    4018:	b	40b8 <PyNumber_FloorDivide@plt+0xc58>
    401c:	mov	x0, x19
    4020:	bl	3080 <_Py_Dealloc@plt>
    4024:	b	3ffc <PyNumber_FloorDivide@plt+0xb9c>
    4028:	mov	x0, x21
    402c:	bl	3080 <_Py_Dealloc@plt>
    4030:	ldr	x23, [sp, #64]
    4034:	ldr	d8, [sp, #72]
    4038:	b	40b8 <PyNumber_FloorDivide@plt+0xc58>
    403c:	mov	x0, x22
    4040:	bl	3080 <_Py_Dealloc@plt>
    4044:	b	3f84 <PyNumber_FloorDivide@plt+0xb24>
    4048:	mov	x0, x19
    404c:	bl	3080 <_Py_Dealloc@plt>
    4050:	b	3f94 <PyNumber_FloorDivide@plt+0xb34>
    4054:	ldr	x0, [x21]
    4058:	sub	x0, x0, #0x1
    405c:	str	x0, [x21]
    4060:	mov	x19, x20
    4064:	cbz	x0, 4074 <PyNumber_FloorDivide@plt+0xc14>
    4068:	ldr	x23, [sp, #64]
    406c:	ldr	d8, [sp, #72]
    4070:	b	40b8 <PyNumber_FloorDivide@plt+0xc58>
    4074:	mov	x0, x21
    4078:	bl	3080 <_Py_Dealloc@plt>
    407c:	ldr	x23, [sp, #64]
    4080:	ldr	d8, [sp, #72]
    4084:	b	40b8 <PyNumber_FloorDivide@plt+0xc58>
    4088:	bl	32b0 <PyErr_Occurred@plt>
    408c:	mov	x19, x20
    4090:	cbz	x0, 40a8 <PyNumber_FloorDivide@plt+0xc48>
    4094:	ldr	x0, [x20]
    4098:	sub	x0, x0, #0x1
    409c:	str	x0, [x20]
    40a0:	mov	x19, x22
    40a4:	cbz	x0, 40d0 <PyNumber_FloorDivide@plt+0xc70>
    40a8:	ldr	x0, [x21]
    40ac:	sub	x0, x0, #0x1
    40b0:	str	x0, [x21]
    40b4:	cbz	x0, 413c <PyNumber_FloorDivide@plt+0xcdc>
    40b8:	mov	x0, x19
    40bc:	ldp	x19, x20, [sp, #32]
    40c0:	ldp	x21, x22, [sp, #48]
    40c4:	ldp	x29, x30, [sp, #16]
    40c8:	add	sp, sp, #0x70
    40cc:	ret
    40d0:	mov	x0, x20
    40d4:	bl	3080 <_Py_Dealloc@plt>
    40d8:	b	40a8 <PyNumber_FloorDivide@plt+0xc48>
    40dc:	mov	x0, x20
    40e0:	bl	3080 <_Py_Dealloc@plt>
    40e4:	ldr	x0, [x22]
    40e8:	sub	x0, x0, #0x1
    40ec:	str	x0, [x22]
    40f0:	cbz	x0, 4130 <PyNumber_FloorDivide@plt+0xcd0>
    40f4:	cbz	x19, 40a8 <PyNumber_FloorDivide@plt+0xc48>
    40f8:	mov	x20, x19
    40fc:	mov	x0, x21
    4100:	bl	30b0 <PyIter_Next@plt>
    4104:	mov	x22, x0
    4108:	cbz	x0, 4088 <PyNumber_FloorDivide@plt+0xc28>
    410c:	mov	x1, x0
    4110:	mov	x0, x20
    4114:	bl	30d0 <PyNumber_Multiply@plt>
    4118:	mov	x19, x0
    411c:	ldr	x0, [x20]
    4120:	sub	x0, x0, #0x1
    4124:	str	x0, [x20]
    4128:	cbnz	x0, 40e4 <PyNumber_FloorDivide@plt+0xc84>
    412c:	b	40dc <PyNumber_FloorDivide@plt+0xc7c>
    4130:	mov	x0, x22
    4134:	bl	3080 <_Py_Dealloc@plt>
    4138:	b	40f4 <PyNumber_FloorDivide@plt+0xc94>
    413c:	mov	x0, x21
    4140:	bl	3080 <_Py_Dealloc@plt>
    4144:	b	40b8 <PyNumber_FloorDivide@plt+0xc58>
    4148:	mov	x19, x0
    414c:	b	40b8 <PyNumber_FloorDivide@plt+0xc58>
    4150:	add	x2, sp, #0x60
    4154:	str	x2, [sp]
    4158:	mov	w7, #0x0                   	// #0
    415c:	mov	w6, #0x1                   	// #1
    4160:	mov	w5, w6
    4164:	adrp	x4, 1c000 <_Py_log1p@@Base+0x140ec>
    4168:	add	x4, x4, #0x260
    416c:	mov	x2, #0x0                   	// #0
    4170:	bl	3120 <_PyArg_UnpackKeywords@plt>
    4174:	mov	x19, x0
    4178:	cbz	x0, 40b8 <PyNumber_FloorDivide@plt+0xc58>
    417c:	ldr	x0, [x19]
    4180:	b	3bec <PyNumber_FloorDivide@plt+0x78c>
    4184:	add	x2, sp, #0x60
    4188:	str	x2, [sp]
    418c:	mov	w7, #0x0                   	// #0
    4190:	mov	w6, #0x1                   	// #1
    4194:	mov	w5, w6
    4198:	adrp	x4, 1c000 <_Py_log1p@@Base+0x140ec>
    419c:	add	x4, x4, #0x260
    41a0:	mov	x2, #0x0                   	// #0
    41a4:	bl	3120 <_PyArg_UnpackKeywords@plt>
    41a8:	mov	x19, x0
    41ac:	cbz	x0, 40b8 <PyNumber_FloorDivide@plt+0xc58>
    41b0:	ldr	x0, [x19]
    41b4:	b	3d20 <PyNumber_FloorDivide@plt+0x8c0>
    41b8:	stp	x29, x30, [sp, #-32]!
    41bc:	mov	x29, sp
    41c0:	str	d8, [sp, #16]
    41c4:	mov	x0, x1
    41c8:	ldr	x2, [x1, #8]
    41cc:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    41d0:	ldr	x1, [x1, #3824]
    41d4:	cmp	x2, x1
    41d8:	b.eq	4204 <PyNumber_FloorDivide@plt+0xda4>  // b.none
    41dc:	bl	32e0 <PyFloat_AsDouble@plt>
    41e0:	fmov	d8, d0
    41e4:	fmov	d0, #-1.000000000000000000e+00
    41e8:	fcmp	d8, d0
    41ec:	b.ne	4208 <PyNumber_FloorDivide@plt+0xda8>  // b.any
    41f0:	bl	32b0 <PyErr_Occurred@plt>
    41f4:	mov	x1, x0
    41f8:	mov	x0, #0x0                   	// #0
    41fc:	cbz	x1, 4208 <PyNumber_FloorDivide@plt+0xda8>
    4200:	b	4218 <PyNumber_FloorDivide@plt+0xdb8>
    4204:	ldr	d8, [x0, #16]
    4208:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    420c:	ldr	d0, [x0, #1136]
    4210:	fmul	d0, d8, d0
    4214:	bl	31c0 <PyFloat_FromDouble@plt>
    4218:	ldr	d8, [sp, #16]
    421c:	ldp	x29, x30, [sp], #32
    4220:	ret
    4224:	stp	x29, x30, [sp, #-32]!
    4228:	mov	x29, sp
    422c:	str	d8, [sp, #16]
    4230:	mov	x0, x1
    4234:	ldr	x2, [x1, #8]
    4238:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    423c:	ldr	x1, [x1, #3824]
    4240:	cmp	x2, x1
    4244:	b.eq	4270 <PyNumber_FloorDivide@plt+0xe10>  // b.none
    4248:	bl	32e0 <PyFloat_AsDouble@plt>
    424c:	fmov	d8, d0
    4250:	fmov	d0, #-1.000000000000000000e+00
    4254:	fcmp	d8, d0
    4258:	b.ne	4274 <PyNumber_FloorDivide@plt+0xe14>  // b.any
    425c:	bl	32b0 <PyErr_Occurred@plt>
    4260:	mov	x1, x0
    4264:	mov	x0, #0x0                   	// #0
    4268:	cbz	x1, 4274 <PyNumber_FloorDivide@plt+0xe14>
    426c:	b	4284 <PyNumber_FloorDivide@plt+0xe24>
    4270:	ldr	d8, [x0, #16]
    4274:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    4278:	ldr	d0, [x0, #1144]
    427c:	fmul	d0, d8, d0
    4280:	bl	31c0 <PyFloat_FromDouble@plt>
    4284:	ldr	d8, [sp, #16]
    4288:	ldp	x29, x30, [sp], #32
    428c:	ret
    4290:	stp	x29, x30, [sp, #-32]!
    4294:	mov	x29, sp
    4298:	str	d8, [sp, #16]
    429c:	fmov	d8, d0
    42a0:	bl	33f0 <__errno_location@plt>
    42a4:	ldr	w0, [x0]
    42a8:	cmp	w0, #0x21
    42ac:	b.eq	42ec <PyNumber_FloorDivide@plt+0xe8c>  // b.none
    42b0:	cmp	w0, #0x22
    42b4:	b.ne	430c <PyNumber_FloorDivide@plt+0xeac>  // b.any
    42b8:	fabs	d0, d8
    42bc:	mov	w0, #0x0                   	// #0
    42c0:	fmov	d1, #1.000000000000000000e+00
    42c4:	fcmpe	d0, d1
    42c8:	b.mi	4320 <PyNumber_FloorDivide@plt+0xec0>  // b.first
    42cc:	adrp	x1, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    42d0:	add	x1, x1, #0xfe0
    42d4:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    42d8:	ldr	x0, [x0, #3936]
    42dc:	ldr	x0, [x0]
    42e0:	bl	3130 <PyErr_SetString@plt>
    42e4:	mov	w0, #0x1                   	// #1
    42e8:	b	4320 <PyNumber_FloorDivide@plt+0xec0>
    42ec:	adrp	x1, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    42f0:	add	x1, x1, #0xfc8
    42f4:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    42f8:	ldr	x0, [x0, #3872]
    42fc:	ldr	x0, [x0]
    4300:	bl	3130 <PyErr_SetString@plt>
    4304:	mov	w0, #0x1                   	// #1
    4308:	b	4320 <PyNumber_FloorDivide@plt+0xec0>
    430c:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    4310:	ldr	x0, [x0, #3872]
    4314:	ldr	x0, [x0]
    4318:	bl	3030 <PyErr_SetFromErrno@plt>
    431c:	mov	w0, #0x1                   	// #1
    4320:	ldr	d8, [sp, #16]
    4324:	ldp	x29, x30, [sp], #32
    4328:	ret
    432c:	stp	x29, x30, [sp, #-64]!
    4330:	mov	x29, sp
    4334:	stp	x19, x20, [sp, #16]
    4338:	stp	x21, x22, [sp, #32]
    433c:	stp	d8, d9, [sp, #48]
    4340:	mov	x20, x1
    4344:	mov	x21, x2
    4348:	mov	w22, w3
    434c:	bl	32e0 <PyFloat_AsDouble@plt>
    4350:	fmov	d8, d0
    4354:	fmov	d0, #-1.000000000000000000e+00
    4358:	fcmp	d8, d0
    435c:	b.eq	43d8 <PyNumber_FloorDivide@plt+0xf78>  // b.none
    4360:	bl	33f0 <__errno_location@plt>
    4364:	mov	x19, x0
    4368:	str	wzr, [x0]
    436c:	fmov	d0, d8
    4370:	blr	x20
    4374:	fmov	d9, d0
    4378:	fcmp	d0, d0
    437c:	fccmp	d8, d8, #0x1, vs
    4380:	b.vc	43ec <PyNumber_FloorDivide@plt+0xf8c>
    4384:	fabs	d0, d0
    4388:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    438c:	fmov	d1, x0
    4390:	fcmp	d0, d1
    4394:	b.le	43a4 <PyNumber_FloorDivide@plt+0xf44>
    4398:	fabs	d8, d8
    439c:	fcmp	d8, d1
    43a0:	b.ls	440c <PyNumber_FloorDivide@plt+0xfac>  // b.plast
    43a4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    43a8:	fmov	d1, x0
    43ac:	fcmp	d0, d1
    43b0:	b.hi	43bc <PyNumber_FloorDivide@plt+0xf5c>  // b.pmore
    43b4:	ldr	w0, [x19]
    43b8:	cbnz	w0, 4450 <PyNumber_FloorDivide@plt+0xff0>
    43bc:	fmov	d0, d9
    43c0:	blr	x21
    43c4:	ldp	x19, x20, [sp, #16]
    43c8:	ldp	x21, x22, [sp, #32]
    43cc:	ldp	d8, d9, [sp, #48]
    43d0:	ldp	x29, x30, [sp], #64
    43d4:	ret
    43d8:	bl	32b0 <PyErr_Occurred@plt>
    43dc:	mov	x1, x0
    43e0:	mov	x0, #0x0                   	// #0
    43e4:	cbz	x1, 4360 <PyNumber_FloorDivide@plt+0xf00>
    43e8:	b	43c4 <PyNumber_FloorDivide@plt+0xf64>
    43ec:	adrp	x1, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    43f0:	add	x1, x1, #0xfc8
    43f4:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    43f8:	ldr	x0, [x0, #3872]
    43fc:	ldr	x0, [x0]
    4400:	bl	3130 <PyErr_SetString@plt>
    4404:	mov	x0, #0x0                   	// #0
    4408:	b	43c4 <PyNumber_FloorDivide@plt+0xf64>
    440c:	cbz	w22, 4430 <PyNumber_FloorDivide@plt+0xfd0>
    4410:	adrp	x1, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    4414:	add	x1, x1, #0xfe0
    4418:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    441c:	ldr	x0, [x0, #3936]
    4420:	ldr	x0, [x0]
    4424:	bl	3130 <PyErr_SetString@plt>
    4428:	mov	x0, #0x0                   	// #0
    442c:	b	43c4 <PyNumber_FloorDivide@plt+0xf64>
    4430:	adrp	x1, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    4434:	add	x1, x1, #0xfc8
    4438:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    443c:	ldr	x0, [x0, #3872]
    4440:	ldr	x0, [x0]
    4444:	bl	3130 <PyErr_SetString@plt>
    4448:	mov	x0, #0x0                   	// #0
    444c:	b	43c4 <PyNumber_FloorDivide@plt+0xf64>
    4450:	fmov	d0, d9
    4454:	bl	4290 <PyNumber_FloorDivide@plt+0xe30>
    4458:	cbz	w0, 43bc <PyNumber_FloorDivide@plt+0xf5c>
    445c:	mov	x0, #0x0                   	// #0
    4460:	b	43c4 <PyNumber_FloorDivide@plt+0xf64>
    4464:	stp	x29, x30, [sp, #-16]!
    4468:	mov	x29, sp
    446c:	mov	w3, w2
    4470:	adrp	x2, 1b000 <_Py_log1p@@Base+0x130ec>
    4474:	ldr	x2, [x2, #3904]
    4478:	bl	432c <PyNumber_FloorDivide@plt+0xecc>
    447c:	ldp	x29, x30, [sp], #16
    4480:	ret
    4484:	stp	x29, x30, [sp, #-16]!
    4488:	mov	x29, sp
    448c:	mov	x0, x1
    4490:	mov	w2, #0x0                   	// #0
    4494:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    4498:	ldr	x1, [x1, #3920]
    449c:	bl	4464 <PyNumber_FloorDivide@plt+0x1004>
    44a0:	ldp	x29, x30, [sp], #16
    44a4:	ret
    44a8:	stp	x29, x30, [sp, #-16]!
    44ac:	mov	x29, sp
    44b0:	mov	x0, x1
    44b4:	mov	w2, #0x0                   	// #0
    44b8:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    44bc:	ldr	x1, [x1, #4032]
    44c0:	bl	4464 <PyNumber_FloorDivide@plt+0x1004>
    44c4:	ldp	x29, x30, [sp], #16
    44c8:	ret
    44cc:	stp	x29, x30, [sp, #-16]!
    44d0:	mov	x29, sp
    44d4:	mov	x0, x1
    44d8:	mov	w2, #0x0                   	// #0
    44dc:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    44e0:	ldr	x1, [x1, #3856]
    44e4:	bl	4464 <PyNumber_FloorDivide@plt+0x1004>
    44e8:	ldp	x29, x30, [sp], #16
    44ec:	ret
    44f0:	stp	x29, x30, [sp, #-16]!
    44f4:	mov	x29, sp
    44f8:	mov	x0, x1
    44fc:	mov	w2, #0x1                   	// #1
    4500:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    4504:	ldr	x1, [x1, #3968]
    4508:	bl	4464 <PyNumber_FloorDivide@plt+0x1004>
    450c:	ldp	x29, x30, [sp], #16
    4510:	ret
    4514:	stp	x29, x30, [sp, #-16]!
    4518:	mov	x29, sp
    451c:	mov	x0, x1
    4520:	mov	w2, #0x0                   	// #0
    4524:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    4528:	ldr	x1, [x1, #3912]
    452c:	bl	4464 <PyNumber_FloorDivide@plt+0x1004>
    4530:	ldp	x29, x30, [sp], #16
    4534:	ret
    4538:	stp	x29, x30, [sp, #-16]!
    453c:	mov	x29, sp
    4540:	mov	x0, x1
    4544:	mov	w2, #0x0                   	// #0
    4548:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    454c:	ldr	x1, [x1, #4016]
    4550:	bl	4464 <PyNumber_FloorDivide@plt+0x1004>
    4554:	ldp	x29, x30, [sp], #16
    4558:	ret
    455c:	stp	x29, x30, [sp, #-16]!
    4560:	mov	x29, sp
    4564:	mov	x0, x1
    4568:	mov	w2, #0x0                   	// #0
    456c:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    4570:	ldr	x1, [x1, #3880]
    4574:	bl	4464 <PyNumber_FloorDivide@plt+0x1004>
    4578:	ldp	x29, x30, [sp], #16
    457c:	ret
    4580:	stp	x29, x30, [sp, #-16]!
    4584:	mov	x29, sp
    4588:	mov	x0, x1
    458c:	mov	w2, #0x1                   	// #1
    4590:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    4594:	ldr	x1, [x1, #3840]
    4598:	bl	4464 <PyNumber_FloorDivide@plt+0x1004>
    459c:	ldp	x29, x30, [sp], #16
    45a0:	ret
    45a4:	stp	x29, x30, [sp, #-16]!
    45a8:	mov	x29, sp
    45ac:	mov	x0, x1
    45b0:	mov	w2, #0x1                   	// #1
    45b4:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    45b8:	ldr	x1, [x1, #4064]
    45bc:	bl	4464 <PyNumber_FloorDivide@plt+0x1004>
    45c0:	ldp	x29, x30, [sp], #16
    45c4:	ret
    45c8:	stp	x29, x30, [sp, #-16]!
    45cc:	mov	x29, sp
    45d0:	mov	x0, x1
    45d4:	mov	w2, #0x1                   	// #1
    45d8:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    45dc:	ldr	x1, [x1, #3976]
    45e0:	bl	4464 <PyNumber_FloorDivide@plt+0x1004>
    45e4:	ldp	x29, x30, [sp], #16
    45e8:	ret
    45ec:	stp	x29, x30, [sp, #-16]!
    45f0:	mov	x29, sp
    45f4:	mov	x0, x1
    45f8:	mov	w2, #0x0                   	// #0
    45fc:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    4600:	ldr	x1, [x1, #4048]
    4604:	bl	4464 <PyNumber_FloorDivide@plt+0x1004>
    4608:	ldp	x29, x30, [sp], #16
    460c:	ret
    4610:	stp	x29, x30, [sp, #-16]!
    4614:	mov	x29, sp
    4618:	mov	x0, x1
    461c:	mov	w2, #0x0                   	// #0
    4620:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    4624:	ldr	x1, [x1, #4024]
    4628:	bl	4464 <PyNumber_FloorDivide@plt+0x1004>
    462c:	ldp	x29, x30, [sp], #16
    4630:	ret
    4634:	stp	x29, x30, [sp, #-16]!
    4638:	mov	x29, sp
    463c:	mov	x0, x1
    4640:	mov	w2, #0x0                   	// #0
    4644:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    4648:	ldr	x1, [x1, #4056]
    464c:	bl	4464 <PyNumber_FloorDivide@plt+0x1004>
    4650:	ldp	x29, x30, [sp], #16
    4654:	ret
    4658:	stp	x29, x30, [sp, #-16]!
    465c:	mov	x29, sp
    4660:	mov	x0, x1
    4664:	mov	w2, #0x0                   	// #0
    4668:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    466c:	ldr	x1, [x1, #3944]
    4670:	bl	4464 <PyNumber_FloorDivide@plt+0x1004>
    4674:	ldp	x29, x30, [sp], #16
    4678:	ret
    467c:	stp	x29, x30, [sp, #-16]!
    4680:	mov	x29, sp
    4684:	mov	x0, x1
    4688:	mov	w2, #0x0                   	// #0
    468c:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    4690:	ldr	x1, [x1, #3816]
    4694:	bl	4464 <PyNumber_FloorDivide@plt+0x1004>
    4698:	ldp	x29, x30, [sp], #16
    469c:	ret
    46a0:	stp	x29, x30, [sp, #-16]!
    46a4:	mov	x29, sp
    46a8:	mov	x0, x1
    46ac:	mov	w2, #0x0                   	// #0
    46b0:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    46b4:	ldr	x1, [x1, #3896]
    46b8:	bl	4464 <PyNumber_FloorDivide@plt+0x1004>
    46bc:	ldp	x29, x30, [sp], #16
    46c0:	ret
    46c4:	stp	x29, x30, [sp, #-16]!
    46c8:	mov	x29, sp
    46cc:	mov	x0, x1
    46d0:	mov	w2, #0x0                   	// #0
    46d4:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    46d8:	ldr	x1, [x1, #3952]
    46dc:	bl	4464 <PyNumber_FloorDivide@plt+0x1004>
    46e0:	ldp	x29, x30, [sp], #16
    46e4:	ret
    46e8:	stp	x29, x30, [sp, #-48]!
    46ec:	mov	x29, sp
    46f0:	stp	x19, x20, [sp, #16]
    46f4:	str	x21, [sp, #32]
    46f8:	mov	x20, x1
    46fc:	adrp	x1, 1c000 <_Py_log1p@@Base+0x140ec>
    4700:	add	x1, x1, #0x260
    4704:	add	x1, x1, #0x40
    4708:	mov	x0, x20
    470c:	bl	3160 <_PyObject_LookupSpecial@plt>
    4710:	mov	x19, x0
    4714:	cbz	x0, 477c <PyNumber_FloorDivide@plt+0x131c>
    4718:	ldr	x0, [x0, #8]
    471c:	ldr	x1, [x0, #56]
    4720:	ldr	x0, [x0, #168]
    4724:	tbz	w0, #11, 47ac <PyNumber_FloorDivide@plt+0x134c>
    4728:	ldr	x4, [x19, x1]
    472c:	cbz	x4, 47ac <PyNumber_FloorDivide@plt+0x134c>
    4730:	mov	x3, #0x0                   	// #0
    4734:	mov	x2, #0x0                   	// #0
    4738:	mov	x1, #0x0                   	// #0
    473c:	mov	x0, x19
    4740:	blr	x4
    4744:	mov	x2, #0x0                   	// #0
    4748:	mov	x1, x0
    474c:	mov	x0, x19
    4750:	bl	32d0 <_Py_CheckFunctionResult@plt>
    4754:	mov	x21, x0
    4758:	ldr	x0, [x19]
    475c:	sub	x0, x0, #0x1
    4760:	str	x0, [x19]
    4764:	cbz	x0, 47c8 <PyNumber_FloorDivide@plt+0x1368>
    4768:	mov	x0, x21
    476c:	ldp	x19, x20, [sp, #16]
    4770:	ldr	x21, [sp, #32]
    4774:	ldp	x29, x30, [sp], #48
    4778:	ret
    477c:	bl	32b0 <PyErr_Occurred@plt>
    4780:	mov	x21, x19
    4784:	cbnz	x0, 4768 <PyNumber_FloorDivide@plt+0x1308>
    4788:	mov	w3, #0x0                   	// #0
    478c:	adrp	x2, 1b000 <_Py_log1p@@Base+0x130ec>
    4790:	ldr	x2, [x2, #3832]
    4794:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    4798:	ldr	x1, [x1, #3992]
    479c:	mov	x0, x20
    47a0:	bl	432c <PyNumber_FloorDivide@plt+0xecc>
    47a4:	mov	x21, x0
    47a8:	b	4768 <PyNumber_FloorDivide@plt+0x1308>
    47ac:	mov	x3, #0x0                   	// #0
    47b0:	mov	x2, #0x0                   	// #0
    47b4:	mov	x1, #0x0                   	// #0
    47b8:	mov	x0, x19
    47bc:	bl	33d0 <_PyObject_MakeTpCall@plt>
    47c0:	mov	x21, x0
    47c4:	b	4758 <PyNumber_FloorDivide@plt+0x12f8>
    47c8:	mov	x0, x19
    47cc:	bl	3080 <_Py_Dealloc@plt>
    47d0:	b	4768 <PyNumber_FloorDivide@plt+0x1308>
    47d4:	stp	x29, x30, [sp, #-64]!
    47d8:	mov	x29, sp
    47dc:	stp	x19, x20, [sp, #16]
    47e0:	mov	x19, x0
    47e4:	mov	x20, x2
    47e8:	cmp	x1, #0x2
    47ec:	b.eq	4804 <PyNumber_FloorDivide@plt+0x13a4>  // b.none
    47f0:	mov	x0, x3
    47f4:	mov	x3, #0x2                   	// #2
    47f8:	mov	x2, x3
    47fc:	bl	3280 <_PyArg_CheckPositional@plt>
    4800:	cbz	w0, 490c <PyNumber_FloorDivide@plt+0x14ac>
    4804:	stp	d8, d9, [sp, #32]
    4808:	str	d10, [sp, #48]
    480c:	ldr	x0, [x19]
    4810:	bl	32e0 <PyFloat_AsDouble@plt>
    4814:	fmov	d9, d0
    4818:	ldr	x0, [x19, #8]
    481c:	bl	32e0 <PyFloat_AsDouble@plt>
    4820:	fmov	d10, d0
    4824:	fmov	d1, #-1.000000000000000000e+00
    4828:	fcmp	d9, d1
    482c:	fccmp	d0, d1, #0x4, ne  // ne = any
    4830:	b.eq	4894 <PyNumber_FloorDivide@plt+0x1434>  // b.none
    4834:	bl	33f0 <__errno_location@plt>
    4838:	mov	x19, x0
    483c:	str	wzr, [x0]
    4840:	fmov	d1, d10
    4844:	fmov	d0, d9
    4848:	blr	x20
    484c:	fmov	d8, d0
    4850:	fcmp	d0, d0
    4854:	b.vs	48b0 <PyNumber_FloorDivide@plt+0x1450>
    4858:	fabs	d1, d0
    485c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    4860:	fmov	d0, x0
    4864:	fcmp	d1, d0
    4868:	b.le	48d4 <PyNumber_FloorDivide@plt+0x1474>
    486c:	fabs	d9, d9
    4870:	fcmp	d9, d0
    4874:	b.hi	48cc <PyNumber_FloorDivide@plt+0x146c>  // b.pmore
    4878:	fabs	d0, d10
    487c:	fmov	d1, x0
    4880:	fcmp	d0, d1
    4884:	b.hi	48cc <PyNumber_FloorDivide@plt+0x146c>  // b.pmore
    4888:	mov	w0, #0x22                  	// #34
    488c:	str	w0, [x19]
    4890:	b	48dc <PyNumber_FloorDivide@plt+0x147c>
    4894:	bl	32b0 <PyErr_Occurred@plt>
    4898:	mov	x1, x0
    489c:	mov	x0, #0x0                   	// #0
    48a0:	cbz	x1, 4834 <PyNumber_FloorDivide@plt+0x13d4>
    48a4:	ldp	d8, d9, [sp, #32]
    48a8:	ldr	d10, [sp, #48]
    48ac:	b	4900 <PyNumber_FloorDivide@plt+0x14a0>
    48b0:	fcmp	d9, d10
    48b4:	b.vs	48c4 <PyNumber_FloorDivide@plt+0x1464>
    48b8:	mov	w0, #0x21                  	// #33
    48bc:	str	w0, [x19]
    48c0:	b	48dc <PyNumber_FloorDivide@plt+0x147c>
    48c4:	str	wzr, [x19]
    48c8:	b	48f0 <PyNumber_FloorDivide@plt+0x1490>
    48cc:	str	wzr, [x19]
    48d0:	b	48f0 <PyNumber_FloorDivide@plt+0x1490>
    48d4:	ldr	w0, [x19]
    48d8:	cbz	w0, 48f0 <PyNumber_FloorDivide@plt+0x1490>
    48dc:	fmov	d0, d8
    48e0:	bl	4290 <PyNumber_FloorDivide@plt+0xe30>
    48e4:	mov	w1, w0
    48e8:	mov	x0, #0x0                   	// #0
    48ec:	cbnz	w1, 4914 <PyNumber_FloorDivide@plt+0x14b4>
    48f0:	fmov	d0, d8
    48f4:	bl	31c0 <PyFloat_FromDouble@plt>
    48f8:	ldp	d8, d9, [sp, #32]
    48fc:	ldr	d10, [sp, #48]
    4900:	ldp	x19, x20, [sp, #16]
    4904:	ldp	x29, x30, [sp], #64
    4908:	ret
    490c:	mov	x0, #0x0                   	// #0
    4910:	b	4900 <PyNumber_FloorDivide@plt+0x14a0>
    4914:	ldp	d8, d9, [sp, #32]
    4918:	ldr	d10, [sp, #48]
    491c:	b	4900 <PyNumber_FloorDivide@plt+0x14a0>
    4920:	stp	x29, x30, [sp, #-16]!
    4924:	mov	x29, sp
    4928:	mov	x0, x1
    492c:	mov	x1, x2
    4930:	adrp	x3, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    4934:	add	x3, x3, #0xff8
    4938:	adrp	x2, 4000 <PyNumber_FloorDivide@plt+0xba0>
    493c:	add	x2, x2, #0xc48
    4940:	bl	47d4 <PyNumber_FloorDivide@plt+0x1374>
    4944:	ldp	x29, x30, [sp], #16
    4948:	ret
    494c:	stp	x29, x30, [sp, #-16]!
    4950:	mov	x29, sp
    4954:	mov	x0, x1
    4958:	mov	x1, x2
    495c:	adrp	x3, 8000 <_Py_log1p@@Base+0xec>
    4960:	add	x3, x3, #0x8
    4964:	adrp	x2, 1b000 <_Py_log1p@@Base+0x130ec>
    4968:	ldr	x2, [x2, #3800]
    496c:	bl	47d4 <PyNumber_FloorDivide@plt+0x1374>
    4970:	ldp	x29, x30, [sp], #16
    4974:	ret
    4978:	stp	x29, x30, [sp, #-16]!
    497c:	mov	x29, sp
    4980:	mov	x0, x1
    4984:	mov	x1, x2
    4988:	adrp	x3, 8000 <_Py_log1p@@Base+0xec>
    498c:	add	x3, x3, #0x18
    4990:	adrp	x2, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    4994:	add	x2, x2, #0x120
    4998:	bl	47d4 <PyNumber_FloorDivide@plt+0x1374>
    499c:	ldp	x29, x30, [sp], #16
    49a0:	ret
    49a4:	stp	x29, x30, [sp, #-48]!
    49a8:	mov	x29, sp
    49ac:	stp	x19, x20, [sp, #16]
    49b0:	str	d8, [sp, #32]
    49b4:	mov	x20, x1
    49b8:	bl	32e0 <PyFloat_AsDouble@plt>
    49bc:	fmov	d8, d0
    49c0:	fmov	d0, #-1.000000000000000000e+00
    49c4:	fcmp	d8, d0
    49c8:	b.eq	4a0c <PyNumber_FloorDivide@plt+0x15ac>  // b.none
    49cc:	bl	33f0 <__errno_location@plt>
    49d0:	mov	x19, x0
    49d4:	str	wzr, [x0]
    49d8:	fmov	d0, d8
    49dc:	blr	x20
    49e0:	fmov	d8, d0
    49e4:	ldr	w0, [x19]
    49e8:	cbz	w0, 49f4 <PyNumber_FloorDivide@plt+0x1594>
    49ec:	bl	4290 <PyNumber_FloorDivide@plt+0xe30>
    49f0:	cbnz	w0, 4a20 <PyNumber_FloorDivide@plt+0x15c0>
    49f4:	fmov	d0, d8
    49f8:	bl	31c0 <PyFloat_FromDouble@plt>
    49fc:	ldp	x19, x20, [sp, #16]
    4a00:	ldr	d8, [sp, #32]
    4a04:	ldp	x29, x30, [sp], #48
    4a08:	ret
    4a0c:	bl	32b0 <PyErr_Occurred@plt>
    4a10:	mov	x1, x0
    4a14:	mov	x0, #0x0                   	// #0
    4a18:	cbz	x1, 49cc <PyNumber_FloorDivide@plt+0x156c>
    4a1c:	b	49fc <PyNumber_FloorDivide@plt+0x159c>
    4a20:	mov	x0, #0x0                   	// #0
    4a24:	b	49fc <PyNumber_FloorDivide@plt+0x159c>
    4a28:	stp	x29, x30, [sp, #-16]!
    4a2c:	mov	x29, sp
    4a30:	mov	x0, x1
    4a34:	adrp	x1, 5000 <PyNumber_FloorDivide@plt+0x1ba0>
    4a38:	add	x1, x1, #0x6dc
    4a3c:	bl	49a4 <PyNumber_FloorDivide@plt+0x1544>
    4a40:	ldp	x29, x30, [sp], #16
    4a44:	ret
    4a48:	stp	x29, x30, [sp, #-16]!
    4a4c:	mov	x29, sp
    4a50:	mov	x0, x1
    4a54:	adrp	x1, 6000 <PyNumber_FloorDivide@plt+0x2ba0>
    4a58:	add	x1, x1, #0x3b0
    4a5c:	bl	49a4 <PyNumber_FloorDivide@plt+0x1544>
    4a60:	ldp	x29, x30, [sp], #16
    4a64:	ret
    4a68:	stp	x29, x30, [sp, #-16]!
    4a6c:	mov	x29, sp
    4a70:	mov	x0, x1
    4a74:	adrp	x1, 6000 <PyNumber_FloorDivide@plt+0x2ba0>
    4a78:	add	x1, x1, #0xc8c
    4a7c:	bl	49a4 <PyNumber_FloorDivide@plt+0x1544>
    4a80:	ldp	x29, x30, [sp], #16
    4a84:	ret
    4a88:	stp	x29, x30, [sp, #-16]!
    4a8c:	mov	x29, sp
    4a90:	mov	x0, x1
    4a94:	adrp	x1, 6000 <PyNumber_FloorDivide@plt+0x2ba0>
    4a98:	add	x1, x1, #0xca0
    4a9c:	bl	49a4 <PyNumber_FloorDivide@plt+0x1544>
    4aa0:	ldp	x29, x30, [sp], #16
    4aa4:	ret
    4aa8:	stp	x29, x30, [sp, #-48]!
    4aac:	mov	x29, sp
    4ab0:	str	x19, [sp, #16]
    4ab4:	mov	x19, x1
    4ab8:	cmp	x2, #0x2
    4abc:	b.ne	4af8 <PyNumber_FloorDivide@plt+0x1698>  // b.any
    4ac0:	stp	d8, d9, [sp, #32]
    4ac4:	ldr	x0, [x19]
    4ac8:	ldr	x2, [x0, #8]
    4acc:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    4ad0:	ldr	x1, [x1, #3824]
    4ad4:	cmp	x2, x1
    4ad8:	b.eq	4b1c <PyNumber_FloorDivide@plt+0x16bc>  // b.none
    4adc:	bl	32e0 <PyFloat_AsDouble@plt>
    4ae0:	fmov	d9, d0
    4ae4:	fmov	d0, #-1.000000000000000000e+00
    4ae8:	fcmp	d9, d0
    4aec:	b.eq	4b6c <PyNumber_FloorDivide@plt+0x170c>  // b.none
    4af0:	str	d10, [sp, #24]
    4af4:	b	4b24 <PyNumber_FloorDivide@plt+0x16c4>
    4af8:	mov	x1, x2
    4afc:	mov	x3, #0x2                   	// #2
    4b00:	mov	x2, x3
    4b04:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    4b08:	add	x0, x0, #0x20
    4b0c:	bl	3280 <_PyArg_CheckPositional@plt>
    4b10:	cbnz	w0, 4ac0 <PyNumber_FloorDivide@plt+0x1660>
    4b14:	mov	x0, #0x0                   	// #0
    4b18:	b	4bf8 <PyNumber_FloorDivide@plt+0x1798>
    4b1c:	str	d10, [sp, #24]
    4b20:	ldr	d9, [x0, #16]
    4b24:	ldr	x0, [x19, #8]
    4b28:	ldr	x2, [x0, #8]
    4b2c:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    4b30:	ldr	x1, [x1, #3824]
    4b34:	cmp	x2, x1
    4b38:	b.eq	4b84 <PyNumber_FloorDivide@plt+0x1724>  // b.none
    4b3c:	bl	32e0 <PyFloat_AsDouble@plt>
    4b40:	fmov	d10, d0
    4b44:	fmov	d0, #-1.000000000000000000e+00
    4b48:	fcmp	d10, d0
    4b4c:	b.ne	4b88 <PyNumber_FloorDivide@plt+0x1728>  // b.any
    4b50:	bl	32b0 <PyErr_Occurred@plt>
    4b54:	mov	x1, x0
    4b58:	mov	x0, #0x0                   	// #0
    4b5c:	cbz	x1, 4ba8 <PyNumber_FloorDivide@plt+0x1748>
    4b60:	ldp	d8, d9, [sp, #32]
    4b64:	ldr	d10, [sp, #24]
    4b68:	b	4bf8 <PyNumber_FloorDivide@plt+0x1798>
    4b6c:	bl	32b0 <PyErr_Occurred@plt>
    4b70:	mov	x1, x0
    4b74:	mov	x0, #0x0                   	// #0
    4b78:	cbnz	x1, 4c34 <PyNumber_FloorDivide@plt+0x17d4>
    4b7c:	str	d10, [sp, #24]
    4b80:	b	4b24 <PyNumber_FloorDivide@plt+0x16c4>
    4b84:	ldr	d10, [x0, #16]
    4b88:	fabs	d1, d10
    4b8c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    4b90:	fmov	d0, x0
    4b94:	fcmp	d1, d0
    4b98:	b.le	4ba8 <PyNumber_FloorDivide@plt+0x1748>
    4b9c:	fabs	d1, d9
    4ba0:	fcmp	d1, d0
    4ba4:	b.ls	4c04 <PyNumber_FloorDivide@plt+0x17a4>  // b.plast
    4ba8:	bl	33f0 <__errno_location@plt>
    4bac:	mov	x19, x0
    4bb0:	str	wzr, [x0]
    4bb4:	fmov	d1, d10
    4bb8:	fmov	d0, d9
    4bbc:	bl	33a0 <fmod@plt>
    4bc0:	fmov	d8, d0
    4bc4:	fcmp	d0, d0
    4bc8:	b.vs	4c18 <PyNumber_FloorDivide@plt+0x17b8>
    4bcc:	ldr	w0, [x19]
    4bd0:	cbz	w0, 4be8 <PyNumber_FloorDivide@plt+0x1788>
    4bd4:	fmov	d0, d8
    4bd8:	bl	4290 <PyNumber_FloorDivide@plt+0xe30>
    4bdc:	mov	w1, w0
    4be0:	mov	x0, #0x0                   	// #0
    4be4:	cbnz	w1, 4c3c <PyNumber_FloorDivide@plt+0x17dc>
    4be8:	fmov	d0, d8
    4bec:	bl	31c0 <PyFloat_FromDouble@plt>
    4bf0:	ldp	d8, d9, [sp, #32]
    4bf4:	ldr	d10, [sp, #24]
    4bf8:	ldr	x19, [sp, #16]
    4bfc:	ldp	x29, x30, [sp], #48
    4c00:	ret
    4c04:	fmov	d0, d9
    4c08:	bl	31c0 <PyFloat_FromDouble@plt>
    4c0c:	ldp	d8, d9, [sp, #32]
    4c10:	ldr	d10, [sp, #24]
    4c14:	b	4bf8 <PyNumber_FloorDivide@plt+0x1798>
    4c18:	fcmp	d9, d10
    4c1c:	b.vs	4c2c <PyNumber_FloorDivide@plt+0x17cc>
    4c20:	mov	w0, #0x21                  	// #33
    4c24:	str	w0, [x19]
    4c28:	b	4bd4 <PyNumber_FloorDivide@plt+0x1774>
    4c2c:	str	wzr, [x19]
    4c30:	b	4be8 <PyNumber_FloorDivide@plt+0x1788>
    4c34:	ldp	d8, d9, [sp, #32]
    4c38:	b	4bf8 <PyNumber_FloorDivide@plt+0x1798>
    4c3c:	ldp	d8, d9, [sp, #32]
    4c40:	ldr	d10, [sp, #24]
    4c44:	b	4bf8 <PyNumber_FloorDivide@plt+0x1798>
    4c48:	stp	x29, x30, [sp, #-48]!
    4c4c:	mov	x29, sp
    4c50:	stp	d8, d9, [sp, #16]
    4c54:	fmov	d8, d0
    4c58:	fabs	d9, d0
    4c5c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    4c60:	fmov	d0, x0
    4c64:	fcmp	d9, d0
    4c68:	b.hi	4cf8 <PyNumber_FloorDivide@plt+0x1898>  // b.pmore
    4c6c:	stp	d10, d11, [sp, #32]
    4c70:	fabs	d10, d1
    4c74:	fcmp	d10, d0
    4c78:	b.hi	4cf4 <PyNumber_FloorDivide@plt+0x1894>  // b.pmore
    4c7c:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    4c80:	ldr	d0, [x0, #1152]
    4c84:	fcmp	d1, #0.0
    4c88:	b.ne	4c94 <PyNumber_FloorDivide@plt+0x1834>  // b.any
    4c8c:	ldp	d10, d11, [sp, #32]
    4c90:	b	4d20 <PyNumber_FloorDivide@plt+0x18c0>
    4c94:	fmov	d1, d10
    4c98:	fmov	d0, d9
    4c9c:	bl	33a0 <fmod@plt>
    4ca0:	fmov	d11, d0
    4ca4:	fsub	d0, d10, d0
    4ca8:	fcmpe	d11, d0
    4cac:	b.mi	4cb8 <PyNumber_FloorDivide@plt+0x1858>  // b.first
    4cb0:	b.le	4cd4 <PyNumber_FloorDivide@plt+0x1874>
    4cb4:	fneg	d11, d0
    4cb8:	fmov	d1, #1.000000000000000000e+00
    4cbc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    4cc0:	fmov	d0, x0
    4cc4:	bif	v8.8b, v1.8b, v0.8b
    4cc8:	fmul	d0, d8, d11
    4ccc:	ldp	d10, d11, [sp, #32]
    4cd0:	b	4d20 <PyNumber_FloorDivide@plt+0x18c0>
    4cd4:	fsub	d9, d9, d11
    4cd8:	fmov	d1, d10
    4cdc:	fmov	d0, #5.000000000000000000e-01
    4ce0:	fmul	d0, d9, d0
    4ce4:	bl	33a0 <fmod@plt>
    4ce8:	fadd	d0, d0, d0
    4cec:	fsub	d11, d11, d0
    4cf0:	b	4cb8 <PyNumber_FloorDivide@plt+0x1858>
    4cf4:	ldp	d10, d11, [sp, #32]
    4cf8:	fcmp	d8, d8
    4cfc:	b.vs	4d2c <PyNumber_FloorDivide@plt+0x18cc>
    4d00:	fcmp	d1, d1
    4d04:	b.vs	4d34 <PyNumber_FloorDivide@plt+0x18d4>
    4d08:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    4d0c:	fmov	d1, x0
    4d10:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    4d14:	fmov	d0, x0
    4d18:	fcmp	d9, d1
    4d1c:	fcsel	d0, d8, d0, le
    4d20:	ldp	d8, d9, [sp, #16]
    4d24:	ldp	x29, x30, [sp], #48
    4d28:	ret
    4d2c:	fmov	d0, d8
    4d30:	b	4d20 <PyNumber_FloorDivide@plt+0x18c0>
    4d34:	fmov	d0, d1
    4d38:	b	4d20 <PyNumber_FloorDivide@plt+0x18c0>
    4d3c:	stp	x29, x30, [sp, #-48]!
    4d40:	mov	x29, sp
    4d44:	str	x19, [sp, #16]
    4d48:	mov	x19, x1
    4d4c:	cmp	x2, #0x2
    4d50:	b.ne	4d8c <PyNumber_FloorDivide@plt+0x192c>  // b.any
    4d54:	str	d10, [sp, #24]
    4d58:	ldr	x0, [x19]
    4d5c:	ldr	x2, [x0, #8]
    4d60:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    4d64:	ldr	x1, [x1, #3824]
    4d68:	cmp	x2, x1
    4d6c:	b.eq	4db0 <PyNumber_FloorDivide@plt+0x1950>  // b.none
    4d70:	bl	32e0 <PyFloat_AsDouble@plt>
    4d74:	fmov	d10, d0
    4d78:	fmov	d1, #-1.000000000000000000e+00
    4d7c:	fcmp	d0, d1
    4d80:	b.eq	4e68 <PyNumber_FloorDivide@plt+0x1a08>  // b.none
    4d84:	stp	d8, d9, [sp, #32]
    4d88:	b	4db8 <PyNumber_FloorDivide@plt+0x1958>
    4d8c:	mov	x1, x2
    4d90:	mov	x3, #0x2                   	// #2
    4d94:	mov	x2, x3
    4d98:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    4d9c:	add	x0, x0, #0x28
    4da0:	bl	3280 <_PyArg_CheckPositional@plt>
    4da4:	cbnz	w0, 4d54 <PyNumber_FloorDivide@plt+0x18f4>
    4da8:	mov	x0, #0x0                   	// #0
    4dac:	b	501c <PyNumber_FloorDivide@plt+0x1bbc>
    4db0:	stp	d8, d9, [sp, #32]
    4db4:	ldr	d10, [x0, #16]
    4db8:	ldr	x0, [x19, #8]
    4dbc:	ldr	x2, [x0, #8]
    4dc0:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    4dc4:	ldr	x1, [x1, #3824]
    4dc8:	cmp	x2, x1
    4dcc:	b.eq	4e80 <PyNumber_FloorDivide@plt+0x1a20>  // b.none
    4dd0:	bl	32e0 <PyFloat_AsDouble@plt>
    4dd4:	fmov	d8, d0
    4dd8:	fmov	d0, #-1.000000000000000000e+00
    4ddc:	fcmp	d8, d0
    4de0:	b.ne	4e84 <PyNumber_FloorDivide@plt+0x1a24>  // b.any
    4de4:	bl	32b0 <PyErr_Occurred@plt>
    4de8:	mov	x1, x0
    4dec:	mov	x0, #0x0                   	// #0
    4df0:	cbnz	x1, 4f0c <PyNumber_FloorDivide@plt+0x1aac>
    4df4:	fabs	d9, d10
    4df8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    4dfc:	fmov	d0, x0
    4e00:	fcmp	d9, d0
    4e04:	b.hi	5028 <PyNumber_FloorDivide@plt+0x1bc8>  // b.pmore
    4e08:	bl	33f0 <__errno_location@plt>
    4e0c:	mov	x19, x0
    4e10:	str	wzr, [x0]
    4e14:	fmov	d1, d8
    4e18:	fmov	d0, d10
    4e1c:	bl	3090 <pow@plt>
    4e20:	fmov	d9, d0
    4e24:	fabs	d0, d0
    4e28:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    4e2c:	fmov	d1, x0
    4e30:	fcmp	d0, d1
    4e34:	b.ls	4fec <PyNumber_FloorDivide@plt+0x1b8c>  // b.plast
    4e38:	fcmp	d9, d9
    4e3c:	b.vs	4fdc <PyNumber_FloorDivide@plt+0x1b7c>
    4e40:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    4e44:	fmov	d1, x0
    4e48:	fcmp	d0, d1
    4e4c:	b.le	4fec <PyNumber_FloorDivide@plt+0x1b8c>
    4e50:	fcmp	d10, #0.0
    4e54:	mov	w0, #0x21                  	// #33
    4e58:	mov	w1, #0x22                  	// #34
    4e5c:	csel	w0, w0, w1, eq  // eq = none
    4e60:	str	w0, [x19]
    4e64:	b	4fec <PyNumber_FloorDivide@plt+0x1b8c>
    4e68:	bl	32b0 <PyErr_Occurred@plt>
    4e6c:	mov	x1, x0
    4e70:	mov	x0, #0x0                   	// #0
    4e74:	cbnz	x1, 5040 <PyNumber_FloorDivide@plt+0x1be0>
    4e78:	stp	d8, d9, [sp, #32]
    4e7c:	b	4db8 <PyNumber_FloorDivide@plt+0x1958>
    4e80:	ldr	d8, [x0, #16]
    4e84:	fabs	d9, d10
    4e88:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    4e8c:	fmov	d1, x0
    4e90:	fcmp	d9, d1
    4e94:	b.hi	4ea8 <PyNumber_FloorDivide@plt+0x1a48>  // b.pmore
    4e98:	fabs	d1, d8
    4e9c:	fmov	d0, x0
    4ea0:	fcmp	d1, d0
    4ea4:	b.ls	4e08 <PyNumber_FloorDivide@plt+0x19a8>  // b.plast
    4ea8:	bl	33f0 <__errno_location@plt>
    4eac:	str	wzr, [x0]
    4eb0:	fcmp	d10, d10
    4eb4:	b.vs	4f18 <PyNumber_FloorDivide@plt+0x1ab8>
    4eb8:	fcmp	d8, d8
    4ebc:	b.vs	4f28 <PyNumber_FloorDivide@plt+0x1ac8>
    4ec0:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
    4ec4:	fmov	d1, x1
    4ec8:	fcmp	d9, d1
    4ecc:	b.le	4f68 <PyNumber_FloorDivide@plt+0x1b08>
    4ed0:	fabs	d0, d8
    4ed4:	fcmp	d0, d1
    4ed8:	b.ls	4f38 <PyNumber_FloorDivide@plt+0x1ad8>  // b.plast
    4edc:	mov	w0, #0x0                   	// #0
    4ee0:	fcmpe	d8, #0.0
    4ee4:	b.gt	4fec <PyNumber_FloorDivide@plt+0x1b8c>
    4ee8:	fmov	d9, #1.000000000000000000e+00
    4eec:	fcmp	d8, #0.0
    4ef0:	b.eq	4fec <PyNumber_FloorDivide@plt+0x1b8c>  // b.none
    4ef4:	movi	d9, #0x0
    4ef8:	cbz	w0, 4fec <PyNumber_FloorDivide@plt+0x1b8c>
    4efc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    4f00:	fmov	d0, x0
    4f04:	bit	v9.8b, v10.8b, v0.8b
    4f08:	b	4fec <PyNumber_FloorDivide@plt+0x1b8c>
    4f0c:	ldp	d8, d9, [sp, #32]
    4f10:	ldr	d10, [sp, #24]
    4f14:	b	501c <PyNumber_FloorDivide@plt+0x1bbc>
    4f18:	fcmp	d8, #0.0
    4f1c:	fmov	d9, #1.000000000000000000e+00
    4f20:	fcsel	d9, d10, d9, ne  // ne = any
    4f24:	b	4fec <PyNumber_FloorDivide@plt+0x1b8c>
    4f28:	fmov	d0, #1.000000000000000000e+00
    4f2c:	fcmp	d10, d0
    4f30:	fcsel	d9, d8, d10, ne  // ne = any
    4f34:	b	4fec <PyNumber_FloorDivide@plt+0x1b8c>
    4f38:	fmov	d1, #2.000000000000000000e+00
    4f3c:	bl	33a0 <fmod@plt>
    4f40:	fcmpe	d8, #0.0
    4f44:	b.le	4f58 <PyNumber_FloorDivide@plt+0x1af8>
    4f48:	fmov	d1, #1.000000000000000000e+00
    4f4c:	fcmp	d0, d1
    4f50:	fcsel	d9, d9, d10, ne  // ne = any
    4f54:	b	4fec <PyNumber_FloorDivide@plt+0x1b8c>
    4f58:	fmov	d1, #1.000000000000000000e+00
    4f5c:	fcmp	d0, d1
    4f60:	cset	w0, eq  // eq = none
    4f64:	b	4ee8 <PyNumber_FloorDivide@plt+0x1a88>
    4f68:	fabs	d1, d8
    4f6c:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
    4f70:	fmov	d0, x1
    4f74:	fcmp	d1, d0
    4f78:	b.le	4fe8 <PyNumber_FloorDivide@plt+0x1b88>
    4f7c:	fmov	d0, #1.000000000000000000e+00
    4f80:	fcmp	d9, d0
    4f84:	b.eq	4fec <PyNumber_FloorDivide@plt+0x1b8c>  // b.none
    4f88:	fcmpe	d8, #0.0
    4f8c:	b.le	4fa0 <PyNumber_FloorDivide@plt+0x1b40>
    4f90:	fcmpe	d9, d0
    4f94:	b.le	4fa0 <PyNumber_FloorDivide@plt+0x1b40>
    4f98:	fmov	d9, d8
    4f9c:	b	4fec <PyNumber_FloorDivide@plt+0x1b8c>
    4fa0:	fcmpe	d8, #0.0
    4fa4:	b.mi	4fb0 <PyNumber_FloorDivide@plt+0x1b50>  // b.first
    4fa8:	movi	d9, #0x0
    4fac:	b	4fec <PyNumber_FloorDivide@plt+0x1b8c>
    4fb0:	fmov	d0, #1.000000000000000000e+00
    4fb4:	fcmpe	d9, d0
    4fb8:	b.mi	4fc4 <PyNumber_FloorDivide@plt+0x1b64>  // b.first
    4fbc:	movi	d9, #0x0
    4fc0:	b	4fec <PyNumber_FloorDivide@plt+0x1b8c>
    4fc4:	fneg	d9, d8
    4fc8:	fcmp	d10, #0.0
    4fcc:	b.ne	4fec <PyNumber_FloorDivide@plt+0x1b8c>  // b.any
    4fd0:	mov	w1, #0x21                  	// #33
    4fd4:	str	w1, [x0]
    4fd8:	b	4fec <PyNumber_FloorDivide@plt+0x1b8c>
    4fdc:	mov	w0, #0x21                  	// #33
    4fe0:	str	w0, [x19]
    4fe4:	b	4fec <PyNumber_FloorDivide@plt+0x1b8c>
    4fe8:	movi	d9, #0x0
    4fec:	bl	33f0 <__errno_location@plt>
    4ff0:	ldr	w0, [x0]
    4ff4:	cbz	w0, 500c <PyNumber_FloorDivide@plt+0x1bac>
    4ff8:	fmov	d0, d9
    4ffc:	bl	4290 <PyNumber_FloorDivide@plt+0xe30>
    5000:	mov	w1, w0
    5004:	mov	x0, #0x0                   	// #0
    5008:	cbnz	w1, 5048 <PyNumber_FloorDivide@plt+0x1be8>
    500c:	fmov	d0, d9
    5010:	bl	31c0 <PyFloat_FromDouble@plt>
    5014:	ldp	d8, d9, [sp, #32]
    5018:	ldr	d10, [sp, #24]
    501c:	ldr	x19, [sp, #16]
    5020:	ldp	x29, x30, [sp], #48
    5024:	ret
    5028:	bl	33f0 <__errno_location@plt>
    502c:	str	wzr, [x0]
    5030:	fcmp	d10, d10
    5034:	b.vc	4eb8 <PyNumber_FloorDivide@plt+0x1a58>
    5038:	fmov	d9, d10
    503c:	b	4fec <PyNumber_FloorDivide@plt+0x1b8c>
    5040:	ldr	d10, [sp, #24]
    5044:	b	501c <PyNumber_FloorDivide@plt+0x1bbc>
    5048:	ldp	d8, d9, [sp, #32]
    504c:	ldr	d10, [sp, #24]
    5050:	b	501c <PyNumber_FloorDivide@plt+0x1bbc>
    5054:	stp	x29, x30, [sp, #-48]!
    5058:	mov	x29, sp
    505c:	str	d8, [sp, #16]
    5060:	mov	x0, x1
    5064:	ldr	x2, [x1, #8]
    5068:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    506c:	ldr	x1, [x1, #3824]
    5070:	cmp	x2, x1
    5074:	b.eq	50a0 <PyNumber_FloorDivide@plt+0x1c40>  // b.none
    5078:	bl	32e0 <PyFloat_AsDouble@plt>
    507c:	fmov	d8, d0
    5080:	fmov	d0, #-1.000000000000000000e+00
    5084:	fcmp	d8, d0
    5088:	b.ne	50a4 <PyNumber_FloorDivide@plt+0x1c44>  // b.any
    508c:	bl	32b0 <PyErr_Occurred@plt>
    5090:	mov	x1, x0
    5094:	mov	x0, #0x0                   	// #0
    5098:	cbz	x1, 50c4 <PyNumber_FloorDivide@plt+0x1c64>
    509c:	b	50e8 <PyNumber_FloorDivide@plt+0x1c88>
    50a0:	ldr	d8, [x0, #16]
    50a4:	fabs	d0, d8
    50a8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    50ac:	fmov	d1, x0
    50b0:	fcmp	d0, d1
    50b4:	b.ls	50c4 <PyNumber_FloorDivide@plt+0x1c64>  // b.plast
    50b8:	b.gt	50f4 <PyNumber_FloorDivide@plt+0x1c94>
    50bc:	fcmp	d8, d8
    50c0:	b.vs	5118 <PyNumber_FloorDivide@plt+0x1cb8>
    50c4:	bl	33f0 <__errno_location@plt>
    50c8:	str	wzr, [x0]
    50cc:	add	x0, sp, #0x28
    50d0:	fmov	d0, d8
    50d4:	bl	3320 <modf@plt>
    50d8:	ldr	d1, [sp, #40]
    50dc:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    50e0:	add	x0, x0, #0x30
    50e4:	bl	32a0 <Py_BuildValue@plt>
    50e8:	ldr	d8, [sp, #16]
    50ec:	ldp	x29, x30, [sp], #48
    50f0:	ret
    50f4:	fmov	d1, d8
    50f8:	movi	d0, #0x0
    50fc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    5100:	fmov	d2, x0
    5104:	bit	v0.8b, v8.8b, v2.8b
    5108:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    510c:	add	x0, x0, #0x30
    5110:	bl	32a0 <Py_BuildValue@plt>
    5114:	b	50e8 <PyNumber_FloorDivide@plt+0x1c88>
    5118:	fmov	d1, d8
    511c:	fmov	d0, d8
    5120:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    5124:	add	x0, x0, #0x30
    5128:	bl	32a0 <Py_BuildValue@plt>
    512c:	b	50e8 <PyNumber_FloorDivide@plt+0x1c88>
    5130:	stp	x29, x30, [sp, #-16]!
    5134:	mov	x29, sp
    5138:	fmov	d1, d0
    513c:	fabs	d2, d0
    5140:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5144:	fmov	d0, x0
    5148:	fcmp	d2, d0
    514c:	b.ls	5184 <PyNumber_FloorDivide@plt+0x1d24>  // b.plast
    5150:	fcmp	d1, d1
    5154:	b.vs	51d0 <PyNumber_FloorDivide@plt+0x1d70>
    5158:	fmov	d0, d1
    515c:	fcmpe	d1, #0.0
    5160:	b.le	516c <PyNumber_FloorDivide@plt+0x1d0c>
    5164:	ldp	x29, x30, [sp], #16
    5168:	ret
    516c:	bl	33f0 <__errno_location@plt>
    5170:	mov	w1, #0x21                  	// #33
    5174:	str	w1, [x0]
    5178:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    517c:	ldr	d0, [x0, #1152]
    5180:	b	5164 <PyNumber_FloorDivide@plt+0x1d04>
    5184:	fcmpe	d1, #0.0
    5188:	b.gt	51ac <PyNumber_FloorDivide@plt+0x1d4c>
    518c:	fcmp	d1, #0.0
    5190:	b.ne	51b8 <PyNumber_FloorDivide@plt+0x1d58>  // b.any
    5194:	bl	33f0 <__errno_location@plt>
    5198:	mov	w1, #0x21                  	// #33
    519c:	str	w1, [x0]
    51a0:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    51a4:	ldr	d0, [x0, #1160]
    51a8:	b	5164 <PyNumber_FloorDivide@plt+0x1d04>
    51ac:	fmov	d0, d1
    51b0:	bl	2ff0 <log2@plt>
    51b4:	b	5164 <PyNumber_FloorDivide@plt+0x1d04>
    51b8:	bl	33f0 <__errno_location@plt>
    51bc:	mov	w1, #0x21                  	// #33
    51c0:	str	w1, [x0]
    51c4:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    51c8:	ldr	d0, [x0, #1152]
    51cc:	b	5164 <PyNumber_FloorDivide@plt+0x1d04>
    51d0:	fmov	d0, d1
    51d4:	b	5164 <PyNumber_FloorDivide@plt+0x1d04>
    51d8:	stp	x29, x30, [sp, #-64]!
    51dc:	mov	x29, sp
    51e0:	stp	x19, x20, [sp, #16]
    51e4:	mov	x19, x0
    51e8:	mov	x20, x1
    51ec:	ldr	x0, [x0, #8]
    51f0:	ldr	x0, [x0, #168]
    51f4:	tbz	w0, #24, 52e8 <PyNumber_FloorDivide@plt+0x1e88>
    51f8:	ldr	x0, [x19, #16]
    51fc:	cmp	x0, #0x0
    5200:	b.le	523c <PyNumber_FloorDivide@plt+0x1ddc>
    5204:	str	d8, [sp, #32]
    5208:	mov	x0, x19
    520c:	bl	3330 <PyLong_AsDouble@plt>
    5210:	fmov	d8, d0
    5214:	fmov	d0, #-1.000000000000000000e+00
    5218:	fcmp	d8, d0
    521c:	b.eq	525c <PyNumber_FloorDivide@plt+0x1dfc>  // b.none
    5220:	fmov	d0, d8
    5224:	blr	x20
    5228:	bl	31c0 <PyFloat_FromDouble@plt>
    522c:	ldr	d8, [sp, #32]
    5230:	ldp	x19, x20, [sp, #16]
    5234:	ldp	x29, x30, [sp], #64
    5238:	ret
    523c:	adrp	x1, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    5240:	add	x1, x1, #0xfc8
    5244:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    5248:	ldr	x0, [x0, #3872]
    524c:	ldr	x0, [x0]
    5250:	bl	3130 <PyErr_SetString@plt>
    5254:	mov	x0, #0x0                   	// #0
    5258:	b	5230 <PyNumber_FloorDivide@plt+0x1dd0>
    525c:	bl	32b0 <PyErr_Occurred@plt>
    5260:	cbz	x0, 5220 <PyNumber_FloorDivide@plt+0x1dc0>
    5264:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    5268:	ldr	x0, [x0, #3936]
    526c:	ldr	x0, [x0]
    5270:	bl	3190 <PyErr_ExceptionMatches@plt>
    5274:	mov	w1, w0
    5278:	mov	x0, #0x0                   	// #0
    527c:	cbnz	w1, 5288 <PyNumber_FloorDivide@plt+0x1e28>
    5280:	ldr	d8, [sp, #32]
    5284:	b	5230 <PyNumber_FloorDivide@plt+0x1dd0>
    5288:	bl	3210 <PyErr_Clear@plt>
    528c:	add	x1, sp, #0x38
    5290:	mov	x0, x19
    5294:	bl	3150 <_PyLong_Frexp@plt>
    5298:	fmov	d8, d0
    529c:	fmov	d0, #-1.000000000000000000e+00
    52a0:	fcmp	d8, d0
    52a4:	b.eq	52d0 <PyNumber_FloorDivide@plt+0x1e70>  // b.none
    52a8:	fmov	d0, d8
    52ac:	blr	x20
    52b0:	fmov	d8, d0
    52b4:	fmov	d0, #2.000000000000000000e+00
    52b8:	blr	x20
    52bc:	ldr	d1, [sp, #56]
    52c0:	scvtf	d1, d1
    52c4:	fmul	d1, d1, d0
    52c8:	fadd	d0, d1, d8
    52cc:	b	5228 <PyNumber_FloorDivide@plt+0x1dc8>
    52d0:	bl	32b0 <PyErr_Occurred@plt>
    52d4:	mov	x1, x0
    52d8:	mov	x0, #0x0                   	// #0
    52dc:	cbz	x1, 52a8 <PyNumber_FloorDivide@plt+0x1e48>
    52e0:	ldr	d8, [sp, #32]
    52e4:	b	5230 <PyNumber_FloorDivide@plt+0x1dd0>
    52e8:	mov	w2, #0x0                   	// #0
    52ec:	mov	x0, x19
    52f0:	bl	4464 <PyNumber_FloorDivide@plt+0x1004>
    52f4:	b	5230 <PyNumber_FloorDivide@plt+0x1dd0>
    52f8:	stp	x29, x30, [sp, #-16]!
    52fc:	mov	x29, sp
    5300:	mov	x0, x1
    5304:	adrp	x2, 8000 <_Py_log1p@@Base+0xec>
    5308:	add	x2, x2, #0x38
    530c:	adrp	x1, 5000 <PyNumber_FloorDivide@plt+0x1ba0>
    5310:	add	x1, x1, #0x130
    5314:	bl	51d8 <PyNumber_FloorDivide@plt+0x1d78>
    5318:	ldp	x29, x30, [sp], #16
    531c:	ret
    5320:	stp	x29, x30, [sp, #-16]!
    5324:	mov	x29, sp
    5328:	mov	x0, x1
    532c:	adrp	x2, 8000 <_Py_log1p@@Base+0xec>
    5330:	add	x2, x2, #0x40
    5334:	adrp	x1, 5000 <PyNumber_FloorDivide@plt+0x1ba0>
    5338:	add	x1, x1, #0x348
    533c:	bl	51d8 <PyNumber_FloorDivide@plt+0x1d78>
    5340:	ldp	x29, x30, [sp], #16
    5344:	ret
    5348:	stp	x29, x30, [sp, #-32]!
    534c:	mov	x29, sp
    5350:	str	d8, [sp, #16]
    5354:	fmov	d8, d0
    5358:	fabs	d1, d0
    535c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5360:	fmov	d0, x0
    5364:	fcmp	d1, d0
    5368:	b.hi	53b0 <PyNumber_FloorDivide@plt+0x1f50>  // b.pmore
    536c:	fcmpe	d8, #0.0
    5370:	b.gt	53a4 <PyNumber_FloorDivide@plt+0x1f44>
    5374:	bl	33f0 <__errno_location@plt>
    5378:	mov	w1, #0x21                  	// #33
    537c:	str	w1, [x0]
    5380:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
    5384:	fmov	d0, x0
    5388:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    538c:	fmov	d1, x0
    5390:	fcmp	d8, #0.0
    5394:	fcsel	d0, d0, d1, eq  // eq = none
    5398:	ldr	d8, [sp, #16]
    539c:	ldp	x29, x30, [sp], #32
    53a0:	ret
    53a4:	fmov	d0, d8
    53a8:	bl	30e0 <log10@plt>
    53ac:	b	5398 <PyNumber_FloorDivide@plt+0x1f38>
    53b0:	fcmp	d8, d8
    53b4:	b.vs	53dc <PyNumber_FloorDivide@plt+0x1f7c>
    53b8:	fmov	d0, d8
    53bc:	fcmpe	d8, #0.0
    53c0:	b.gt	5398 <PyNumber_FloorDivide@plt+0x1f38>
    53c4:	bl	33f0 <__errno_location@plt>
    53c8:	mov	w1, #0x21                  	// #33
    53cc:	str	w1, [x0]
    53d0:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    53d4:	ldr	d0, [x0, #1152]
    53d8:	b	5398 <PyNumber_FloorDivide@plt+0x1f38>
    53dc:	fmov	d0, d8
    53e0:	b	5398 <PyNumber_FloorDivide@plt+0x1f38>
    53e4:	stp	x29, x30, [sp, #-64]!
    53e8:	mov	x29, sp
    53ec:	stp	x19, x20, [sp, #16]
    53f0:	mov	x0, x1
    53f4:	str	xzr, [sp, #48]
    53f8:	ldr	x1, [x1, #16]
    53fc:	cmp	x1, #0x1
    5400:	b.eq	5438 <PyNumber_FloorDivide@plt+0x1fd8>  // b.none
    5404:	cmp	x1, #0x2
    5408:	b.eq	54d8 <PyNumber_FloorDivide@plt+0x2078>  // b.none
    540c:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    5410:	add	x1, x1, #0x58
    5414:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    5418:	ldr	x0, [x0, #3888]
    541c:	ldr	x0, [x0]
    5420:	bl	3130 <PyErr_SetString@plt>
    5424:	mov	x19, #0x0                   	// #0
    5428:	mov	x0, x19
    542c:	ldp	x19, x20, [sp, #16]
    5430:	ldp	x29, x30, [sp], #64
    5434:	ret
    5438:	add	x2, sp, #0x38
    543c:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    5440:	add	x1, x1, #0x48
    5444:	bl	32f0 <PyArg_ParseTuple@plt>
    5448:	cbz	w0, 553c <PyNumber_FloorDivide@plt+0x20dc>
    544c:	ldr	x20, [sp, #48]
    5450:	adrp	x2, 8000 <_Py_log1p@@Base+0xec>
    5454:	add	x2, x2, #0x80
    5458:	adrp	x1, 5000 <PyNumber_FloorDivide@plt+0x1ba0>
    545c:	add	x1, x1, #0x544
    5460:	ldr	x0, [sp, #56]
    5464:	bl	51d8 <PyNumber_FloorDivide@plt+0x1d78>
    5468:	mov	x19, x0
    546c:	cmp	x0, #0x0
    5470:	ccmp	x20, #0x0, #0x4, ne  // ne = any
    5474:	b.eq	5428 <PyNumber_FloorDivide@plt+0x1fc8>  // b.none
    5478:	adrp	x2, 8000 <_Py_log1p@@Base+0xec>
    547c:	add	x2, x2, #0x80
    5480:	adrp	x1, 5000 <PyNumber_FloorDivide@plt+0x1ba0>
    5484:	add	x1, x1, #0x544
    5488:	mov	x0, x20
    548c:	bl	51d8 <PyNumber_FloorDivide@plt+0x1d78>
    5490:	mov	x20, x0
    5494:	cbz	x0, 54f8 <PyNumber_FloorDivide@plt+0x2098>
    5498:	str	x21, [sp, #32]
    549c:	mov	x1, x0
    54a0:	mov	x0, x19
    54a4:	bl	3430 <PyNumber_TrueDivide@plt>
    54a8:	mov	x21, x0
    54ac:	ldr	x1, [x19]
    54b0:	sub	x1, x1, #0x1
    54b4:	str	x1, [x19]
    54b8:	cbz	x1, 5520 <PyNumber_FloorDivide@plt+0x20c0>
    54bc:	ldr	x1, [x20]
    54c0:	sub	x1, x1, #0x1
    54c4:	str	x1, [x20]
    54c8:	mov	x19, x21
    54cc:	cbz	x1, 552c <PyNumber_FloorDivide@plt+0x20cc>
    54d0:	ldr	x21, [sp, #32]
    54d4:	b	5428 <PyNumber_FloorDivide@plt+0x1fc8>
    54d8:	add	x3, sp, #0x30
    54dc:	add	x2, sp, #0x38
    54e0:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    54e4:	add	x1, x1, #0x50
    54e8:	bl	32f0 <PyArg_ParseTuple@plt>
    54ec:	cbnz	w0, 544c <PyNumber_FloorDivide@plt+0x1fec>
    54f0:	mov	x19, #0x0                   	// #0
    54f4:	b	5428 <PyNumber_FloorDivide@plt+0x1fc8>
    54f8:	ldr	x0, [x19]
    54fc:	sub	x0, x0, #0x1
    5500:	str	x0, [x19]
    5504:	cbz	x0, 5510 <PyNumber_FloorDivide@plt+0x20b0>
    5508:	mov	x19, x20
    550c:	b	5428 <PyNumber_FloorDivide@plt+0x1fc8>
    5510:	mov	x0, x19
    5514:	bl	3080 <_Py_Dealloc@plt>
    5518:	mov	x19, x20
    551c:	b	5428 <PyNumber_FloorDivide@plt+0x1fc8>
    5520:	mov	x0, x19
    5524:	bl	3080 <_Py_Dealloc@plt>
    5528:	b	54bc <PyNumber_FloorDivide@plt+0x205c>
    552c:	mov	x0, x20
    5530:	bl	3080 <_Py_Dealloc@plt>
    5534:	ldr	x21, [sp, #32]
    5538:	b	5428 <PyNumber_FloorDivide@plt+0x1fc8>
    553c:	mov	x19, #0x0                   	// #0
    5540:	b	5428 <PyNumber_FloorDivide@plt+0x1fc8>
    5544:	stp	x29, x30, [sp, #-32]!
    5548:	mov	x29, sp
    554c:	str	d8, [sp, #16]
    5550:	fmov	d8, d0
    5554:	fabs	d1, d0
    5558:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    555c:	fmov	d0, x0
    5560:	fcmp	d1, d0
    5564:	b.hi	55ac <PyNumber_FloorDivide@plt+0x214c>  // b.pmore
    5568:	fcmpe	d8, #0.0
    556c:	b.gt	55a0 <PyNumber_FloorDivide@plt+0x2140>
    5570:	bl	33f0 <__errno_location@plt>
    5574:	mov	w1, #0x21                  	// #33
    5578:	str	w1, [x0]
    557c:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
    5580:	fmov	d0, x0
    5584:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    5588:	fmov	d1, x0
    558c:	fcmp	d8, #0.0
    5590:	fcsel	d0, d0, d1, eq  // eq = none
    5594:	ldr	d8, [sp, #16]
    5598:	ldp	x29, x30, [sp], #32
    559c:	ret
    55a0:	fmov	d0, d8
    55a4:	bl	31a0 <log@plt>
    55a8:	b	5594 <PyNumber_FloorDivide@plt+0x2134>
    55ac:	fcmp	d8, d8
    55b0:	b.vs	55d8 <PyNumber_FloorDivide@plt+0x2178>
    55b4:	fmov	d0, d8
    55b8:	fcmpe	d8, #0.0
    55bc:	b.gt	5594 <PyNumber_FloorDivide@plt+0x2134>
    55c0:	bl	33f0 <__errno_location@plt>
    55c4:	mov	w1, #0x21                  	// #33
    55c8:	str	w1, [x0]
    55cc:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    55d0:	ldr	d0, [x0, #1152]
    55d4:	b	5594 <PyNumber_FloorDivide@plt+0x2134>
    55d8:	fmov	d0, d8
    55dc:	b	5594 <PyNumber_FloorDivide@plt+0x2134>
    55e0:	stp	x29, x30, [sp, #-32]!
    55e4:	mov	x29, sp
    55e8:	str	d8, [sp, #16]
    55ec:	fmov	d8, d0
    55f0:	fmov	d1, #2.000000000000000000e+00
    55f4:	fabs	d0, d0
    55f8:	bl	33a0 <fmod@plt>
    55fc:	fadd	d1, d0, d0
    5600:	fcvtas	w0, d1
    5604:	cmp	w0, #0x2
    5608:	b.eq	5694 <PyNumber_FloorDivide@plt+0x2234>  // b.none
    560c:	b.gt	5638 <PyNumber_FloorDivide@plt+0x21d8>
    5610:	cbz	w0, 5664 <PyNumber_FloorDivide@plt+0x2204>
    5614:	cmp	w0, #0x1
    5618:	b.ne	56d0 <PyNumber_FloorDivide@plt+0x2270>  // b.any
    561c:	fmov	d1, #5.000000000000000000e-01
    5620:	fsub	d1, d0, d1
    5624:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    5628:	ldr	d0, [x0, #1168]
    562c:	fmul	d0, d1, d0
    5630:	bl	3400 <cos@plt>
    5634:	b	5674 <PyNumber_FloorDivide@plt+0x2214>
    5638:	cmp	w0, #0x3
    563c:	b.eq	56b0 <PyNumber_FloorDivide@plt+0x2250>  // b.none
    5640:	cmp	w0, #0x4
    5644:	b.ne	56d0 <PyNumber_FloorDivide@plt+0x2270>  // b.any
    5648:	fmov	d1, #2.000000000000000000e+00
    564c:	fsub	d1, d0, d1
    5650:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    5654:	ldr	d0, [x0, #1168]
    5658:	fmul	d0, d1, d0
    565c:	bl	3230 <sin@plt>
    5660:	b	5674 <PyNumber_FloorDivide@plt+0x2214>
    5664:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    5668:	ldr	d1, [x0, #1168]
    566c:	fmul	d0, d0, d1
    5670:	bl	3230 <sin@plt>
    5674:	fmov	d1, #1.000000000000000000e+00
    5678:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    567c:	fmov	d2, x0
    5680:	bif	v8.8b, v1.8b, v2.8b
    5684:	fmul	d0, d8, d0
    5688:	ldr	d8, [sp, #16]
    568c:	ldp	x29, x30, [sp], #32
    5690:	ret
    5694:	fmov	d1, #1.000000000000000000e+00
    5698:	fsub	d0, d1, d0
    569c:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    56a0:	ldr	d1, [x0, #1168]
    56a4:	fmul	d0, d0, d1
    56a8:	bl	3230 <sin@plt>
    56ac:	b	5674 <PyNumber_FloorDivide@plt+0x2214>
    56b0:	fmov	d1, #1.500000000000000000e+00
    56b4:	fsub	d1, d0, d1
    56b8:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    56bc:	ldr	d0, [x0, #1168]
    56c0:	fmul	d0, d1, d0
    56c4:	bl	3400 <cos@plt>
    56c8:	fneg	d0, d0
    56cc:	b	5674 <PyNumber_FloorDivide@plt+0x2214>
    56d0:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    56d4:	add	x0, x0, #0x88
    56d8:	bl	3300 <Py_FatalError@plt>
    56dc:	stp	x29, x30, [sp, #-48]!
    56e0:	mov	x29, sp
    56e4:	stp	d8, d9, [sp, #16]
    56e8:	stp	d10, d11, [sp, #32]
    56ec:	fmov	d8, d0
    56f0:	fabs	d11, d0
    56f4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    56f8:	fmov	d0, x0
    56fc:	fcmp	d11, d0
    5700:	b.ls	5728 <PyNumber_FloorDivide@plt+0x22c8>  // b.plast
    5704:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    5708:	fmov	d9, x0
    570c:	fcmp	d8, d8
    5710:	fcsel	d9, d8, d9, vs
    5714:	fmov	d0, d9
    5718:	ldp	d8, d9, [sp, #16]
    571c:	ldp	d10, d11, [sp, #32]
    5720:	ldp	x29, x30, [sp], #48
    5724:	ret
    5728:	frintm	d0, d8
    572c:	fcmp	d0, d8
    5730:	b.ne	5764 <PyNumber_FloorDivide@plt+0x2304>  // b.any
    5734:	fmov	d0, #2.000000000000000000e+00
    5738:	fcmpe	d8, d0
    573c:	b.hi	5764 <PyNumber_FloorDivide@plt+0x2304>  // b.pmore
    5740:	movi	d9, #0x0
    5744:	fcmpe	d8, #0.0
    5748:	b.hi	5714 <PyNumber_FloorDivide@plt+0x22b4>  // b.pmore
    574c:	bl	33f0 <__errno_location@plt>
    5750:	mov	w1, #0x21                  	// #33
    5754:	str	w1, [x0]
    5758:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    575c:	ldr	d9, [x0, #1176]
    5760:	b	5714 <PyNumber_FloorDivide@plt+0x22b4>
    5764:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    5768:	ldr	d0, [x0, #1184]
    576c:	fcmpe	d11, d0
    5770:	b.mi	57dc <PyNumber_FloorDivide@plt+0x237c>  // b.first
    5774:	fmov	d0, d11
    5778:	bl	3578 <PyNumber_FloorDivide@plt+0x118>
    577c:	bl	31a0 <log@plt>
    5780:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    5784:	ldr	d1, [x0, #1192]
    5788:	fsub	d9, d0, d1
    578c:	fadd	d0, d11, d1
    5790:	fmov	d10, #5.000000000000000000e-01
    5794:	fsub	d0, d0, d10
    5798:	bl	31a0 <log@plt>
    579c:	fsub	d10, d11, d10
    57a0:	fmov	d1, #1.000000000000000000e+00
    57a4:	fsub	d0, d0, d1
    57a8:	fmul	d10, d10, d0
    57ac:	fadd	d9, d10, d9
    57b0:	fcmpe	d8, #0.0
    57b4:	b.mi	57ec <PyNumber_FloorDivide@plt+0x238c>  // b.first
    57b8:	fabs	d1, d9
    57bc:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    57c0:	fmov	d0, x0
    57c4:	fcmp	d1, d0
    57c8:	b.le	5714 <PyNumber_FloorDivide@plt+0x22b4>
    57cc:	bl	33f0 <__errno_location@plt>
    57d0:	mov	w1, #0x22                  	// #34
    57d4:	str	w1, [x0]
    57d8:	b	5714 <PyNumber_FloorDivide@plt+0x22b4>
    57dc:	fmov	d0, d11
    57e0:	bl	31a0 <log@plt>
    57e4:	fneg	d9, d0
    57e8:	b	5714 <PyNumber_FloorDivide@plt+0x22b4>
    57ec:	fmov	d0, d11
    57f0:	bl	55e0 <PyNumber_FloorDivide@plt+0x2180>
    57f4:	fabs	d0, d0
    57f8:	bl	31a0 <log@plt>
    57fc:	fmov	d8, d0
    5800:	fmov	d0, d11
    5804:	bl	31a0 <log@plt>
    5808:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    580c:	ldr	d1, [x0, #1200]
    5810:	fsub	d1, d1, d8
    5814:	fsub	d1, d1, d0
    5818:	fsub	d9, d1, d9
    581c:	b	57b8 <PyNumber_FloorDivide@plt+0x2358>
    5820:	stp	x29, x30, [sp, #-64]!
    5824:	mov	x29, sp
    5828:	stp	x19, x20, [sp, #16]
    582c:	mov	x19, x1
    5830:	cmp	x2, #0x2
    5834:	b.ne	5880 <PyNumber_FloorDivide@plt+0x2420>  // b.any
    5838:	str	d8, [sp, #32]
    583c:	ldr	x0, [x19]
    5840:	ldr	x2, [x0, #8]
    5844:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    5848:	ldr	x1, [x1, #3824]
    584c:	cmp	x2, x1
    5850:	b.eq	58a4 <PyNumber_FloorDivide@plt+0x2444>  // b.none
    5854:	bl	32e0 <PyFloat_AsDouble@plt>
    5858:	fmov	d8, d0
    585c:	fmov	d0, #-1.000000000000000000e+00
    5860:	fcmp	d8, d0
    5864:	b.ne	58a8 <PyNumber_FloorDivide@plt+0x2448>  // b.any
    5868:	bl	32b0 <PyErr_Occurred@plt>
    586c:	mov	x1, x0
    5870:	mov	x0, #0x0                   	// #0
    5874:	cbz	x1, 58a8 <PyNumber_FloorDivide@plt+0x2448>
    5878:	ldr	d8, [sp, #32]
    587c:	b	5928 <PyNumber_FloorDivide@plt+0x24c8>
    5880:	mov	x1, x2
    5884:	mov	x3, #0x2                   	// #2
    5888:	mov	x2, x3
    588c:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    5890:	add	x0, x0, #0xa8
    5894:	bl	3280 <_PyArg_CheckPositional@plt>
    5898:	cbnz	w0, 5838 <PyNumber_FloorDivide@plt+0x23d8>
    589c:	mov	x0, #0x0                   	// #0
    58a0:	b	5928 <PyNumber_FloorDivide@plt+0x24c8>
    58a4:	ldr	d8, [x0, #16]
    58a8:	ldr	x0, [x19, #8]
    58ac:	ldr	x1, [x0, #8]
    58b0:	ldr	x1, [x1, #168]
    58b4:	tbz	w1, #24, 594c <PyNumber_FloorDivide@plt+0x24ec>
    58b8:	add	x1, sp, #0x3c
    58bc:	bl	3290 <PyLong_AsLongAndOverflow@plt>
    58c0:	mov	x19, x0
    58c4:	cmn	x0, #0x1
    58c8:	b.eq	5934 <PyNumber_FloorDivide@plt+0x24d4>  // b.none
    58cc:	ldr	w0, [sp, #60]
    58d0:	cbz	w0, 58e0 <PyNumber_FloorDivide@plt+0x2480>
    58d4:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
    58d8:	cmp	w0, #0x0
    58dc:	cinv	x19, x19, lt  // lt = tstop
    58e0:	fcmp	d8, #0.0
    58e4:	b.eq	58fc <PyNumber_FloorDivide@plt+0x249c>  // b.none
    58e8:	fabs	d1, d8
    58ec:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    58f0:	fmov	d0, x0
    58f4:	fcmp	d1, d0
    58f8:	b.ls	5970 <PyNumber_FloorDivide@plt+0x2510>  // b.plast
    58fc:	bl	33f0 <__errno_location@plt>
    5900:	str	wzr, [x0]
    5904:	bl	33f0 <__errno_location@plt>
    5908:	ldr	w0, [x0]
    590c:	cbz	w0, 591c <PyNumber_FloorDivide@plt+0x24bc>
    5910:	fmov	d0, d8
    5914:	bl	4290 <PyNumber_FloorDivide@plt+0xe30>
    5918:	cbnz	w0, 5a04 <PyNumber_FloorDivide@plt+0x25a4>
    591c:	fmov	d0, d8
    5920:	bl	31c0 <PyFloat_FromDouble@plt>
    5924:	ldr	d8, [sp, #32]
    5928:	ldp	x19, x20, [sp, #16]
    592c:	ldp	x29, x30, [sp], #64
    5930:	ret
    5934:	bl	32b0 <PyErr_Occurred@plt>
    5938:	mov	x1, x0
    593c:	mov	x0, #0x0                   	// #0
    5940:	cbz	x1, 58cc <PyNumber_FloorDivide@plt+0x246c>
    5944:	ldr	d8, [sp, #32]
    5948:	b	5928 <PyNumber_FloorDivide@plt+0x24c8>
    594c:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    5950:	add	x1, x1, #0xb0
    5954:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    5958:	ldr	x0, [x0, #3888]
    595c:	ldr	x0, [x0]
    5960:	bl	3130 <PyErr_SetString@plt>
    5964:	mov	x0, #0x0                   	// #0
    5968:	ldr	d8, [sp, #32]
    596c:	b	5928 <PyNumber_FloorDivide@plt+0x24c8>
    5970:	mov	x0, #0x7fffffff            	// #2147483647
    5974:	cmp	x19, x0
    5978:	b.le	59a0 <PyNumber_FloorDivide@plt+0x2540>
    597c:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    5980:	fmov	d0, x0
    5984:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    5988:	fmov	d1, x0
    598c:	bif	v8.8b, v0.8b, v1.8b
    5990:	bl	33f0 <__errno_location@plt>
    5994:	mov	w1, #0x22                  	// #34
    5998:	str	w1, [x0]
    599c:	b	5904 <PyNumber_FloorDivide@plt+0x24a4>
    59a0:	mov	x0, #0xffffffff80000000    	// #-2147483648
    59a4:	cmp	x19, x0
    59a8:	b.ge	59c8 <PyNumber_FloorDivide@plt+0x2568>  // b.tcont
    59ac:	movi	d0, #0x0
    59b0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    59b4:	fmov	d1, x0
    59b8:	bif	v8.8b, v0.8b, v1.8b
    59bc:	bl	33f0 <__errno_location@plt>
    59c0:	str	wzr, [x0]
    59c4:	b	5904 <PyNumber_FloorDivide@plt+0x24a4>
    59c8:	bl	33f0 <__errno_location@plt>
    59cc:	mov	x20, x0
    59d0:	str	wzr, [x0]
    59d4:	mov	w0, w19
    59d8:	fmov	d0, d8
    59dc:	bl	3020 <ldexp@plt>
    59e0:	fmov	d8, d0
    59e4:	fabs	d1, d0
    59e8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    59ec:	fmov	d0, x0
    59f0:	fcmp	d1, d0
    59f4:	b.le	5904 <PyNumber_FloorDivide@plt+0x24a4>
    59f8:	mov	w0, #0x22                  	// #34
    59fc:	str	w0, [x20]
    5a00:	b	5904 <PyNumber_FloorDivide@plt+0x24a4>
    5a04:	mov	x0, #0x0                   	// #0
    5a08:	ldr	d8, [sp, #32]
    5a0c:	b	5928 <PyNumber_FloorDivide@plt+0x24c8>
    5a10:	stp	x29, x30, [sp, #-96]!
    5a14:	mov	x29, sp
    5a18:	stp	x19, x20, [sp, #16]
    5a1c:	mov	x0, x1
    5a20:	bl	33e0 <PyNumber_Index@plt>
    5a24:	mov	x19, x0
    5a28:	cbz	x0, 5a5c <PyNumber_FloorDivide@plt+0x25fc>
    5a2c:	bl	30c0 <_PyLong_Sign@plt>
    5a30:	tbnz	w0, #31, 5a6c <PyNumber_FloorDivide@plt+0x260c>
    5a34:	mov	x0, x19
    5a38:	bl	30c0 <_PyLong_Sign@plt>
    5a3c:	cbnz	w0, 5aa8 <PyNumber_FloorDivide@plt+0x2648>
    5a40:	ldr	x0, [x19]
    5a44:	sub	x0, x0, #0x1
    5a48:	str	x0, [x19]
    5a4c:	cbz	x0, 5a9c <PyNumber_FloorDivide@plt+0x263c>
    5a50:	mov	x0, #0x0                   	// #0
    5a54:	bl	31e0 <PyLong_FromLong@plt>
    5a58:	mov	x19, x0
    5a5c:	mov	x0, x19
    5a60:	ldp	x19, x20, [sp, #16]
    5a64:	ldp	x29, x30, [sp], #96
    5a68:	ret
    5a6c:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    5a70:	add	x1, x1, #0xe0
    5a74:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    5a78:	ldr	x0, [x0, #3872]
    5a7c:	ldr	x0, [x0]
    5a80:	bl	3130 <PyErr_SetString@plt>
    5a84:	ldr	x0, [x19]
    5a88:	sub	x0, x0, #0x1
    5a8c:	str	x0, [x19]
    5a90:	cbz	x0, 5e7c <PyNumber_FloorDivide@plt+0x2a1c>
    5a94:	mov	x19, #0x0                   	// #0
    5a98:	b	5a5c <PyNumber_FloorDivide@plt+0x25fc>
    5a9c:	mov	x0, x19
    5aa0:	bl	3080 <_Py_Dealloc@plt>
    5aa4:	b	5a50 <PyNumber_FloorDivide@plt+0x25f0>
    5aa8:	mov	x0, x19
    5aac:	bl	30f0 <_PyLong_NumBits@plt>
    5ab0:	cmn	x0, #0x1
    5ab4:	b.eq	5a84 <PyNumber_FloorDivide@plt+0x2624>  // b.none
    5ab8:	stp	x23, x24, [sp, #48]
    5abc:	stp	x25, x26, [sp, #64]
    5ac0:	sub	x24, x0, #0x1
    5ac4:	lsr	x26, x24, #1
    5ac8:	cmp	x24, #0x3f
    5acc:	b.ls	5b60 <PyNumber_FloorDivide@plt+0x2700>  // b.plast
    5ad0:	stp	x21, x22, [sp, #32]
    5ad4:	mov	w20, #0x6                   	// #6
    5ad8:	cmp	xzr, x26, lsr #6
    5adc:	b.eq	5aec <PyNumber_FloorDivide@plt+0x268c>  // b.none
    5ae0:	add	w20, w20, #0x1
    5ae4:	lsr	x0, x26, x20
    5ae8:	cbnz	x0, 5ae0 <PyNumber_FloorDivide@plt+0x2680>
    5aec:	and	x1, x24, #0xfffffffffffffffe
    5af0:	orr	x24, x24, #0x1
    5af4:	sub	x1, x1, #0x3e
    5af8:	mov	x0, x19
    5afc:	bl	3100 <_PyLong_Rshift@plt>
    5b00:	mov	x21, x0
    5b04:	cbz	x0, 5e38 <PyNumber_FloorDivide@plt+0x29d8>
    5b08:	bl	3050 <PyLong_AsUnsignedLongLong@plt>
    5b0c:	mov	x22, x0
    5b10:	ldr	x1, [x21]
    5b14:	sub	x1, x1, #0x1
    5b18:	str	x1, [x21]
    5b1c:	cbz	x1, 5be0 <PyNumber_FloorDivide@plt+0x2780>
    5b20:	cmn	x22, #0x1
    5b24:	b.eq	5bec <PyNumber_FloorDivide@plt+0x278c>  // b.none
    5b28:	sub	w25, w20, #0x5
    5b2c:	lsr	x25, x26, x25
    5b30:	mov	x0, x22
    5b34:	bl	3608 <PyNumber_FloorDivide@plt+0x1a8>
    5b38:	mov	w1, #0x1f                  	// #31
    5b3c:	sub	w1, w1, w25
    5b40:	lsr	x0, x0, x1
    5b44:	bl	3040 <PyLong_FromUnsignedLongLong@plt>
    5b48:	mov	x23, x0
    5b4c:	cbz	x0, 5e48 <PyNumber_FloorDivide@plt+0x29e8>
    5b50:	subs	w22, w20, #0x6
    5b54:	b.mi	5d20 <PyNumber_FloorDivide@plt+0x28c0>  // b.first
    5b58:	str	x27, [sp, #80]
    5b5c:	b	5c80 <PyNumber_FloorDivide@plt+0x2820>
    5b60:	mov	x0, x19
    5b64:	bl	3050 <PyLong_AsUnsignedLongLong@plt>
    5b68:	mov	x20, x0
    5b6c:	ldr	x0, [x19]
    5b70:	sub	x0, x0, #0x1
    5b74:	str	x0, [x19]
    5b78:	cbz	x0, 5bd4 <PyNumber_FloorDivide@plt+0x2774>
    5b7c:	cmn	x20, #0x1
    5b80:	b.ne	5b90 <PyNumber_FloorDivide@plt+0x2730>  // b.any
    5b84:	bl	32b0 <PyErr_Occurred@plt>
    5b88:	mov	x19, #0x0                   	// #0
    5b8c:	cbnz	x0, 5e8c <PyNumber_FloorDivide@plt+0x2a2c>
    5b90:	mov	x19, #0x1f                  	// #31
    5b94:	sub	x0, x19, x26
    5b98:	lsl	w0, w0, #1
    5b9c:	lsl	x0, x20, x0
    5ba0:	bl	3608 <PyNumber_FloorDivide@plt+0x1a8>
    5ba4:	sub	w26, w19, w26
    5ba8:	lsr	x0, x0, x26
    5bac:	mul	x1, x0, x0
    5bb0:	sub	x1, x1, #0x1
    5bb4:	cmp	x1, x20
    5bb8:	cset	x1, cs  // cs = hs, nlast
    5bbc:	sub	x0, x0, x1
    5bc0:	bl	3040 <PyLong_FromUnsignedLongLong@plt>
    5bc4:	mov	x19, x0
    5bc8:	ldp	x23, x24, [sp, #48]
    5bcc:	ldp	x25, x26, [sp, #64]
    5bd0:	b	5a5c <PyNumber_FloorDivide@plt+0x25fc>
    5bd4:	mov	x0, x19
    5bd8:	bl	3080 <_Py_Dealloc@plt>
    5bdc:	b	5b7c <PyNumber_FloorDivide@plt+0x271c>
    5be0:	mov	x0, x21
    5be4:	bl	3080 <_Py_Dealloc@plt>
    5be8:	b	5b20 <PyNumber_FloorDivide@plt+0x26c0>
    5bec:	bl	32b0 <PyErr_Occurred@plt>
    5bf0:	cbz	x0, 5b28 <PyNumber_FloorDivide@plt+0x26c8>
    5bf4:	ldp	x21, x22, [sp, #32]
    5bf8:	ldp	x23, x24, [sp, #48]
    5bfc:	ldp	x25, x26, [sp, #64]
    5c00:	b	5a84 <PyNumber_FloorDivide@plt+0x2624>
    5c04:	mov	x0, x20
    5c08:	bl	3080 <_Py_Dealloc@plt>
    5c0c:	b	5cbc <PyNumber_FloorDivide@plt+0x285c>
    5c10:	mov	x0, x23
    5c14:	bl	3080 <_Py_Dealloc@plt>
    5c18:	b	5ce4 <PyNumber_FloorDivide@plt+0x2884>
    5c1c:	ldr	x0, [x21]
    5c20:	sub	x0, x0, #0x1
    5c24:	str	x0, [x21]
    5c28:	cbz	x0, 5c40 <PyNumber_FloorDivide@plt+0x27e0>
    5c2c:	ldp	x21, x22, [sp, #32]
    5c30:	ldp	x23, x24, [sp, #48]
    5c34:	ldp	x25, x26, [sp, #64]
    5c38:	ldr	x27, [sp, #80]
    5c3c:	b	5a84 <PyNumber_FloorDivide@plt+0x2624>
    5c40:	mov	x0, x21
    5c44:	bl	3080 <_Py_Dealloc@plt>
    5c48:	ldp	x21, x22, [sp, #32]
    5c4c:	ldp	x23, x24, [sp, #48]
    5c50:	ldp	x25, x26, [sp, #64]
    5c54:	ldr	x27, [sp, #80]
    5c58:	b	5a84 <PyNumber_FloorDivide@plt+0x2624>
    5c5c:	mov	x0, x20
    5c60:	bl	3080 <_Py_Dealloc@plt>
    5c64:	b	5d08 <PyNumber_FloorDivide@plt+0x28a8>
    5c68:	mov	x0, x21
    5c6c:	bl	3080 <_Py_Dealloc@plt>
    5c70:	cbz	x23, 5e58 <PyNumber_FloorDivide@plt+0x29f8>
    5c74:	sub	w22, w22, #0x1
    5c78:	cmn	w22, #0x1
    5c7c:	b.eq	5d1c <PyNumber_FloorDivide@plt+0x28bc>  // b.none
    5c80:	mov	x27, x25
    5c84:	lsr	x25, x26, x22
    5c88:	add	x1, x25, x27
    5c8c:	sub	x1, x24, x1
    5c90:	mov	x0, x19
    5c94:	bl	3100 <_PyLong_Rshift@plt>
    5c98:	mov	x20, x0
    5c9c:	cbz	x0, 5df0 <PyNumber_FloorDivide@plt+0x2990>
    5ca0:	mov	x1, x23
    5ca4:	bl	3460 <PyNumber_FloorDivide@plt>
    5ca8:	mov	x21, x0
    5cac:	ldr	x0, [x20]
    5cb0:	sub	x0, x0, #0x1
    5cb4:	str	x0, [x20]
    5cb8:	cbz	x0, 5c04 <PyNumber_FloorDivide@plt+0x27a4>
    5cbc:	cbz	x21, 5e18 <PyNumber_FloorDivide@plt+0x29b8>
    5cc0:	sub	x1, x25, x27
    5cc4:	sub	x1, x1, #0x1
    5cc8:	mov	x0, x23
    5ccc:	bl	3450 <_PyLong_Lshift@plt>
    5cd0:	mov	x20, x0
    5cd4:	ldr	x0, [x23]
    5cd8:	sub	x0, x0, #0x1
    5cdc:	str	x0, [x23]
    5ce0:	cbz	x0, 5c10 <PyNumber_FloorDivide@plt+0x27b0>
    5ce4:	cbz	x20, 5c1c <PyNumber_FloorDivide@plt+0x27bc>
    5ce8:	mov	x1, x21
    5cec:	mov	x0, x20
    5cf0:	bl	3060 <PyNumber_Add@plt>
    5cf4:	mov	x23, x0
    5cf8:	ldr	x0, [x20]
    5cfc:	sub	x0, x0, #0x1
    5d00:	str	x0, [x20]
    5d04:	cbz	x0, 5c5c <PyNumber_FloorDivide@plt+0x27fc>
    5d08:	ldr	x0, [x21]
    5d0c:	sub	x0, x0, #0x1
    5d10:	str	x0, [x21]
    5d14:	cbnz	x0, 5c70 <PyNumber_FloorDivide@plt+0x2810>
    5d18:	b	5c68 <PyNumber_FloorDivide@plt+0x2808>
    5d1c:	ldr	x27, [sp, #80]
    5d20:	mov	x1, x23
    5d24:	mov	x0, x23
    5d28:	bl	30d0 <PyNumber_Multiply@plt>
    5d2c:	mov	x20, x0
    5d30:	cbz	x0, 5df8 <PyNumber_FloorDivide@plt+0x2998>
    5d34:	mov	w2, #0x0                   	// #0
    5d38:	mov	x1, x20
    5d3c:	mov	x0, x19
    5d40:	bl	31f0 <PyObject_RichCompareBool@plt>
    5d44:	mov	w21, w0
    5d48:	ldr	x1, [x20]
    5d4c:	sub	x1, x1, #0x1
    5d50:	str	x1, [x20]
    5d54:	cbz	x1, 5d88 <PyNumber_FloorDivide@plt+0x2928>
    5d58:	cmn	w21, #0x1
    5d5c:	b.eq	5df4 <PyNumber_FloorDivide@plt+0x2994>  // b.none
    5d60:	cbnz	w21, 5d94 <PyNumber_FloorDivide@plt+0x2934>
    5d64:	ldr	x0, [x19]
    5d68:	sub	x0, x0, #0x1
    5d6c:	str	x0, [x19]
    5d70:	cbz	x0, 5dd4 <PyNumber_FloorDivide@plt+0x2974>
    5d74:	mov	x19, x23
    5d78:	ldp	x21, x22, [sp, #32]
    5d7c:	ldp	x23, x24, [sp, #48]
    5d80:	ldp	x25, x26, [sp, #64]
    5d84:	b	5a5c <PyNumber_FloorDivide@plt+0x25fc>
    5d88:	mov	x0, x20
    5d8c:	bl	3080 <_Py_Dealloc@plt>
    5d90:	b	5d58 <PyNumber_FloorDivide@plt+0x28f8>
    5d94:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    5d98:	ldr	x0, [x0, #4008]
    5d9c:	ldr	x1, [x0]
    5da0:	mov	x0, x23
    5da4:	bl	3420 <PyNumber_Subtract@plt>
    5da8:	mov	x20, x0
    5dac:	ldr	x0, [x23]
    5db0:	sub	x0, x0, #0x1
    5db4:	str	x0, [x23]
    5db8:	cbz	x0, 5dc4 <PyNumber_FloorDivide@plt+0x2964>
    5dbc:	mov	x23, x20
    5dc0:	b	5d64 <PyNumber_FloorDivide@plt+0x2904>
    5dc4:	mov	x0, x23
    5dc8:	bl	3080 <_Py_Dealloc@plt>
    5dcc:	mov	x23, x20
    5dd0:	b	5d64 <PyNumber_FloorDivide@plt+0x2904>
    5dd4:	mov	x0, x19
    5dd8:	bl	3080 <_Py_Dealloc@plt>
    5ddc:	mov	x19, x23
    5de0:	ldp	x21, x22, [sp, #32]
    5de4:	ldp	x23, x24, [sp, #48]
    5de8:	ldp	x25, x26, [sp, #64]
    5dec:	b	5a5c <PyNumber_FloorDivide@plt+0x25fc>
    5df0:	ldr	x27, [sp, #80]
    5df4:	cbz	x23, 5e6c <PyNumber_FloorDivide@plt+0x2a0c>
    5df8:	ldr	x0, [x23]
    5dfc:	sub	x0, x0, #0x1
    5e00:	str	x0, [x23]
    5e04:	cbz	x0, 5e20 <PyNumber_FloorDivide@plt+0x29c0>
    5e08:	ldp	x21, x22, [sp, #32]
    5e0c:	ldp	x23, x24, [sp, #48]
    5e10:	ldp	x25, x26, [sp, #64]
    5e14:	b	5a84 <PyNumber_FloorDivide@plt+0x2624>
    5e18:	ldr	x27, [sp, #80]
    5e1c:	b	5df4 <PyNumber_FloorDivide@plt+0x2994>
    5e20:	mov	x0, x23
    5e24:	bl	3080 <_Py_Dealloc@plt>
    5e28:	ldp	x21, x22, [sp, #32]
    5e2c:	ldp	x23, x24, [sp, #48]
    5e30:	ldp	x25, x26, [sp, #64]
    5e34:	b	5a84 <PyNumber_FloorDivide@plt+0x2624>
    5e38:	ldp	x21, x22, [sp, #32]
    5e3c:	ldp	x23, x24, [sp, #48]
    5e40:	ldp	x25, x26, [sp, #64]
    5e44:	b	5a84 <PyNumber_FloorDivide@plt+0x2624>
    5e48:	ldp	x21, x22, [sp, #32]
    5e4c:	ldp	x23, x24, [sp, #48]
    5e50:	ldp	x25, x26, [sp, #64]
    5e54:	b	5a84 <PyNumber_FloorDivide@plt+0x2624>
    5e58:	ldp	x21, x22, [sp, #32]
    5e5c:	ldp	x23, x24, [sp, #48]
    5e60:	ldp	x25, x26, [sp, #64]
    5e64:	ldr	x27, [sp, #80]
    5e68:	b	5a84 <PyNumber_FloorDivide@plt+0x2624>
    5e6c:	ldp	x21, x22, [sp, #32]
    5e70:	ldp	x23, x24, [sp, #48]
    5e74:	ldp	x25, x26, [sp, #64]
    5e78:	b	5a84 <PyNumber_FloorDivide@plt+0x2624>
    5e7c:	mov	x0, x19
    5e80:	bl	3080 <_Py_Dealloc@plt>
    5e84:	mov	x19, #0x0                   	// #0
    5e88:	b	5a5c <PyNumber_FloorDivide@plt+0x25fc>
    5e8c:	ldp	x23, x24, [sp, #48]
    5e90:	ldp	x25, x26, [sp, #64]
    5e94:	b	5a5c <PyNumber_FloorDivide@plt+0x25fc>
    5e98:	stp	x29, x30, [sp, #-32]!
    5e9c:	mov	x29, sp
    5ea0:	str	d8, [sp, #16]
    5ea4:	mov	x0, x1
    5ea8:	ldr	x2, [x1, #8]
    5eac:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    5eb0:	ldr	x1, [x1, #3824]
    5eb4:	cmp	x2, x1
    5eb8:	b.eq	5ee4 <PyNumber_FloorDivide@plt+0x2a84>  // b.none
    5ebc:	bl	32e0 <PyFloat_AsDouble@plt>
    5ec0:	fmov	d8, d0
    5ec4:	fmov	d0, #-1.000000000000000000e+00
    5ec8:	fcmp	d8, d0
    5ecc:	b.ne	5ee8 <PyNumber_FloorDivide@plt+0x2a88>  // b.any
    5ed0:	bl	32b0 <PyErr_Occurred@plt>
    5ed4:	mov	x1, x0
    5ed8:	mov	x0, #0x0                   	// #0
    5edc:	cbz	x1, 5ee8 <PyNumber_FloorDivide@plt+0x2a88>
    5ee0:	b	5ef4 <PyNumber_FloorDivide@plt+0x2a94>
    5ee4:	ldr	d8, [x0, #16]
    5ee8:	fcmp	d8, d8
    5eec:	cset	x0, vs
    5ef0:	bl	3220 <PyBool_FromLong@plt>
    5ef4:	ldr	d8, [sp, #16]
    5ef8:	ldp	x29, x30, [sp], #32
    5efc:	ret
    5f00:	stp	x29, x30, [sp, #-32]!
    5f04:	mov	x29, sp
    5f08:	str	d8, [sp, #16]
    5f0c:	mov	x0, x1
    5f10:	ldr	x2, [x1, #8]
    5f14:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    5f18:	ldr	x1, [x1, #3824]
    5f1c:	cmp	x2, x1
    5f20:	b.eq	5f4c <PyNumber_FloorDivide@plt+0x2aec>  // b.none
    5f24:	bl	32e0 <PyFloat_AsDouble@plt>
    5f28:	fmov	d8, d0
    5f2c:	fmov	d0, #-1.000000000000000000e+00
    5f30:	fcmp	d8, d0
    5f34:	b.ne	5f50 <PyNumber_FloorDivide@plt+0x2af0>  // b.any
    5f38:	bl	32b0 <PyErr_Occurred@plt>
    5f3c:	mov	x1, x0
    5f40:	mov	x0, #0x0                   	// #0
    5f44:	cbz	x1, 5f50 <PyNumber_FloorDivide@plt+0x2af0>
    5f48:	b	5f68 <PyNumber_FloorDivide@plt+0x2b08>
    5f4c:	ldr	d8, [x0, #16]
    5f50:	fabs	d8, d8
    5f54:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5f58:	fmov	d0, x0
    5f5c:	fcmp	d8, d0
    5f60:	cset	x0, ls  // ls = plast
    5f64:	bl	3220 <PyBool_FromLong@plt>
    5f68:	ldr	d8, [sp, #16]
    5f6c:	ldp	x29, x30, [sp], #32
    5f70:	ret
    5f74:	sub	sp, sp, #0x70
    5f78:	stp	x29, x30, [sp, #16]
    5f7c:	add	x29, sp, #0x10
    5f80:	stp	x19, x20, [sp, #32]
    5f84:	mov	x19, x1
    5f88:	mov	x1, x2
    5f8c:	cbz	x3, 6014 <PyNumber_FloorDivide@plt+0x2bb4>
    5f90:	ldr	x20, [x3, #16]
    5f94:	add	x20, x2, x20
    5f98:	add	x0, sp, #0x50
    5f9c:	str	x0, [sp]
    5fa0:	mov	w7, #0x0                   	// #0
    5fa4:	mov	w6, #0x2                   	// #2
    5fa8:	mov	w5, w6
    5fac:	adrp	x4, 1c000 <_Py_log1p@@Base+0x140ec>
    5fb0:	add	x4, x4, #0x260
    5fb4:	add	x4, x4, #0x58
    5fb8:	mov	x2, #0x0                   	// #0
    5fbc:	mov	x0, x19
    5fc0:	bl	3120 <_PyArg_UnpackKeywords@plt>
    5fc4:	mov	x19, x0
    5fc8:	cbz	x0, 619c <PyNumber_FloorDivide@plt+0x2d3c>
    5fcc:	stp	d8, d9, [sp, #48]
    5fd0:	ldr	x0, [x19]
    5fd4:	ldr	x2, [x0, #8]
    5fd8:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    5fdc:	ldr	x1, [x1, #3824]
    5fe0:	cmp	x2, x1
    5fe4:	b.eq	6034 <PyNumber_FloorDivide@plt+0x2bd4>  // b.none
    5fe8:	bl	32e0 <PyFloat_AsDouble@plt>
    5fec:	fmov	d9, d0
    5ff0:	fmov	d1, #-1.000000000000000000e+00
    5ff4:	fcmp	d0, d1
    5ff8:	b.ne	6038 <PyNumber_FloorDivide@plt+0x2bd8>  // b.any
    5ffc:	bl	32b0 <PyErr_Occurred@plt>
    6000:	mov	x1, x0
    6004:	mov	x0, #0x0                   	// #0
    6008:	cbz	x1, 6038 <PyNumber_FloorDivide@plt+0x2bd8>
    600c:	ldp	d8, d9, [sp, #48]
    6010:	b	619c <PyNumber_FloorDivide@plt+0x2d3c>
    6014:	cmp	x2, #0x2
    6018:	b.ne	602c <PyNumber_FloorDivide@plt+0x2bcc>  // b.any
    601c:	mov	x20, x2
    6020:	cbz	x19, 5f98 <PyNumber_FloorDivide@plt+0x2b38>
    6024:	stp	d8, d9, [sp, #48]
    6028:	b	5fd0 <PyNumber_FloorDivide@plt+0x2b70>
    602c:	mov	x20, x2
    6030:	b	5f98 <PyNumber_FloorDivide@plt+0x2b38>
    6034:	ldr	d9, [x0, #16]
    6038:	ldr	x0, [x19, #8]
    603c:	ldr	x2, [x0, #8]
    6040:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    6044:	ldr	x1, [x1, #3824]
    6048:	cmp	x2, x1
    604c:	b.eq	606c <PyNumber_FloorDivide@plt+0x2c0c>  // b.none
    6050:	bl	32e0 <PyFloat_AsDouble@plt>
    6054:	fmov	d8, d0
    6058:	fmov	d0, #-1.000000000000000000e+00
    605c:	fcmp	d8, d0
    6060:	b.eq	60c8 <PyNumber_FloorDivide@plt+0x2c68>  // b.none
    6064:	str	d10, [sp, #64]
    6068:	b	6074 <PyNumber_FloorDivide@plt+0x2c14>
    606c:	str	d10, [sp, #64]
    6070:	ldr	d8, [x0, #16]
    6074:	cmp	x20, #0x2
    6078:	b.eq	61ac <PyNumber_FloorDivide@plt+0x2d4c>  // b.none
    607c:	ldr	x0, [x19, #16]
    6080:	cbz	x0, 6140 <PyNumber_FloorDivide@plt+0x2ce0>
    6084:	ldr	x2, [x0, #8]
    6088:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    608c:	ldr	x1, [x1, #3824]
    6090:	cmp	x2, x1
    6094:	b.eq	60e0 <PyNumber_FloorDivide@plt+0x2c80>  // b.none
    6098:	bl	32e0 <PyFloat_AsDouble@plt>
    609c:	fmov	d10, d0
    60a0:	fmov	d0, #-1.000000000000000000e+00
    60a4:	fcmp	d10, d0
    60a8:	b.ne	60e4 <PyNumber_FloorDivide@plt+0x2c84>  // b.any
    60ac:	bl	32b0 <PyErr_Occurred@plt>
    60b0:	mov	x1, x0
    60b4:	mov	x0, #0x0                   	// #0
    60b8:	cbnz	x1, 6134 <PyNumber_FloorDivide@plt+0x2cd4>
    60bc:	cmp	x20, #0x3
    60c0:	b.ne	60ec <PyNumber_FloorDivide@plt+0x2c8c>  // b.any
    60c4:	b	6160 <PyNumber_FloorDivide@plt+0x2d00>
    60c8:	bl	32b0 <PyErr_Occurred@plt>
    60cc:	mov	x1, x0
    60d0:	mov	x0, #0x0                   	// #0
    60d4:	cbnz	x1, 6238 <PyNumber_FloorDivide@plt+0x2dd8>
    60d8:	str	d10, [sp, #64]
    60dc:	b	6074 <PyNumber_FloorDivide@plt+0x2c14>
    60e0:	ldr	d10, [x0, #16]
    60e4:	cmp	x20, #0x3
    60e8:	b.eq	6228 <PyNumber_FloorDivide@plt+0x2dc8>  // b.none
    60ec:	ldr	x0, [x19, #24]
    60f0:	ldr	x2, [x0, #8]
    60f4:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    60f8:	ldr	x1, [x1, #3824]
    60fc:	cmp	x2, x1
    6100:	b.eq	614c <PyNumber_FloorDivide@plt+0x2cec>  // b.none
    6104:	bl	32e0 <PyFloat_AsDouble@plt>
    6108:	fmov	d1, d0
    610c:	fmov	d0, #-1.000000000000000000e+00
    6110:	fcmp	d1, d0
    6114:	b.ne	6150 <PyNumber_FloorDivide@plt+0x2cf0>  // b.any
    6118:	bl	32b0 <PyErr_Occurred@plt>
    611c:	mov	x1, x0
    6120:	mov	x0, #0x0                   	// #0
    6124:	cbz	x1, 6160 <PyNumber_FloorDivide@plt+0x2d00>
    6128:	ldp	d8, d9, [sp, #48]
    612c:	ldr	d10, [sp, #64]
    6130:	b	619c <PyNumber_FloorDivide@plt+0x2d3c>
    6134:	ldp	d8, d9, [sp, #48]
    6138:	ldr	d10, [sp, #64]
    613c:	b	619c <PyNumber_FloorDivide@plt+0x2d3c>
    6140:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    6144:	ldr	d10, [x0, #1208]
    6148:	b	60ec <PyNumber_FloorDivide@plt+0x2c8c>
    614c:	ldr	d1, [x0, #16]
    6150:	fcmpe	d10, #0.0
    6154:	b.mi	6160 <PyNumber_FloorDivide@plt+0x2d00>  // b.first
    6158:	fcmpe	d1, #0.0
    615c:	b.pl	61b8 <PyNumber_FloorDivide@plt+0x2d58>  // b.nfrst
    6160:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    6164:	add	x1, x1, #0x108
    6168:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    616c:	ldr	x0, [x0, #3872]
    6170:	ldr	x0, [x0]
    6174:	bl	3130 <PyErr_SetString@plt>
    6178:	bl	32b0 <PyErr_Occurred@plt>
    617c:	mov	x1, x0
    6180:	mov	x0, #0x0                   	// #0
    6184:	cbnz	x1, 6240 <PyNumber_FloorDivide@plt+0x2de0>
    6188:	mov	w0, #0xffffffff            	// #-1
    618c:	sxtw	x0, w0
    6190:	bl	3220 <PyBool_FromLong@plt>
    6194:	ldp	d8, d9, [sp, #48]
    6198:	ldr	d10, [sp, #64]
    619c:	ldp	x19, x20, [sp, #32]
    61a0:	ldp	x29, x30, [sp, #16]
    61a4:	add	sp, sp, #0x70
    61a8:	ret
    61ac:	movi	d1, #0x0
    61b0:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    61b4:	ldr	d10, [x0, #1208]
    61b8:	mov	w0, #0x1                   	// #1
    61bc:	fcmp	d9, d8
    61c0:	b.eq	618c <PyNumber_FloorDivide@plt+0x2d2c>  // b.none
    61c4:	fabs	d3, d9
    61c8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    61cc:	fmov	d2, x0
    61d0:	fcmp	d3, d2
    61d4:	b.gt	6220 <PyNumber_FloorDivide@plt+0x2dc0>
    61d8:	fabs	d2, d8
    61dc:	fmov	d0, x0
    61e0:	mov	w0, #0x0                   	// #0
    61e4:	fcmp	d2, d0
    61e8:	b.gt	618c <PyNumber_FloorDivide@plt+0x2d2c>
    61ec:	fabd	d2, d8, d9
    61f0:	fmul	d8, d8, d10
    61f4:	fabs	d8, d8
    61f8:	mov	w0, #0x1                   	// #1
    61fc:	fcmpe	d2, d8
    6200:	b.ls	618c <PyNumber_FloorDivide@plt+0x2d2c>  // b.plast
    6204:	fmul	d0, d9, d10
    6208:	fabs	d0, d0
    620c:	fcmpe	d2, d0
    6210:	b.ls	618c <PyNumber_FloorDivide@plt+0x2d2c>  // b.plast
    6214:	fcmpe	d2, d1
    6218:	cset	w0, ls  // ls = plast
    621c:	b	618c <PyNumber_FloorDivide@plt+0x2d2c>
    6220:	mov	w0, #0x0                   	// #0
    6224:	b	618c <PyNumber_FloorDivide@plt+0x2d2c>
    6228:	fcmpe	d10, #0.0
    622c:	b.mi	6160 <PyNumber_FloorDivide@plt+0x2d00>  // b.first
    6230:	movi	d1, #0x0
    6234:	b	61b8 <PyNumber_FloorDivide@plt+0x2d58>
    6238:	ldp	d8, d9, [sp, #48]
    623c:	b	619c <PyNumber_FloorDivide@plt+0x2d3c>
    6240:	ldp	d8, d9, [sp, #48]
    6244:	ldr	d10, [sp, #64]
    6248:	b	619c <PyNumber_FloorDivide@plt+0x2d3c>
    624c:	stp	x29, x30, [sp, #-16]!
    6250:	mov	x29, sp
    6254:	mov	x0, x1
    6258:	ldr	x2, [x1, #8]
    625c:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    6260:	ldr	x1, [x1, #3824]
    6264:	cmp	x2, x1
    6268:	b.eq	6290 <PyNumber_FloorDivide@plt+0x2e30>  // b.none
    626c:	bl	32e0 <PyFloat_AsDouble@plt>
    6270:	fmov	d1, #-1.000000000000000000e+00
    6274:	fcmp	d0, d1
    6278:	b.ne	6294 <PyNumber_FloorDivide@plt+0x2e34>  // b.any
    627c:	bl	32b0 <PyErr_Occurred@plt>
    6280:	mov	x1, x0
    6284:	mov	x0, #0x0                   	// #0
    6288:	cbz	x1, 62bc <PyNumber_FloorDivide@plt+0x2e5c>
    628c:	b	62c0 <PyNumber_FloorDivide@plt+0x2e60>
    6290:	ldr	d0, [x0, #16]
    6294:	fabs	d2, d0
    6298:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    629c:	fmov	d1, x0
    62a0:	mov	x0, #0x0                   	// #0
    62a4:	fcmp	d2, d1
    62a8:	b.le	62bc <PyNumber_FloorDivide@plt+0x2e5c>
    62ac:	fmov	x1, d0
    62b0:	mov	x0, #0x1                   	// #1
    62b4:	cmp	x1, #0x0
    62b8:	cneg	x0, x0, lt  // lt = tstop
    62bc:	bl	3220 <PyBool_FromLong@plt>
    62c0:	ldp	x29, x30, [sp], #16
    62c4:	ret
    62c8:	stp	x29, x30, [sp, #-48]!
    62cc:	mov	x29, sp
    62d0:	stp	x19, x20, [sp, #16]
    62d4:	str	x21, [sp, #32]
    62d8:	mov	x19, x1
    62dc:	cmp	x2, #0x2
    62e0:	b.eq	6300 <PyNumber_FloorDivide@plt+0x2ea0>  // b.none
    62e4:	mov	x1, x2
    62e8:	mov	x3, #0x2                   	// #2
    62ec:	mov	x2, x3
    62f0:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    62f4:	add	x0, x0, #0x128
    62f8:	bl	3280 <_PyArg_CheckPositional@plt>
    62fc:	cbz	w0, 63a0 <PyNumber_FloorDivide@plt+0x2f40>
    6300:	ldr	x20, [x19, #8]
    6304:	ldr	x0, [x19]
    6308:	bl	33e0 <PyNumber_Index@plt>
    630c:	mov	x19, x0
    6310:	cbz	x0, 63a8 <PyNumber_FloorDivide@plt+0x2f48>
    6314:	mov	x0, x20
    6318:	bl	33e0 <PyNumber_Index@plt>
    631c:	mov	x20, x0
    6320:	cbz	x0, 6368 <PyNumber_FloorDivide@plt+0x2f08>
    6324:	mov	x1, x0
    6328:	mov	x0, x19
    632c:	bl	3200 <_PyLong_GCD@plt>
    6330:	mov	x21, x0
    6334:	ldr	x0, [x19]
    6338:	sub	x0, x0, #0x1
    633c:	str	x0, [x19]
    6340:	cbz	x0, 6388 <PyNumber_FloorDivide@plt+0x2f28>
    6344:	ldr	x0, [x20]
    6348:	sub	x0, x0, #0x1
    634c:	str	x0, [x20]
    6350:	cbz	x0, 6394 <PyNumber_FloorDivide@plt+0x2f34>
    6354:	mov	x0, x21
    6358:	ldp	x19, x20, [sp, #16]
    635c:	ldr	x21, [sp, #32]
    6360:	ldp	x29, x30, [sp], #48
    6364:	ret
    6368:	ldr	x0, [x19]
    636c:	sub	x0, x0, #0x1
    6370:	str	x0, [x19]
    6374:	mov	x21, x20
    6378:	cbnz	x0, 6354 <PyNumber_FloorDivide@plt+0x2ef4>
    637c:	mov	x0, x19
    6380:	bl	3080 <_Py_Dealloc@plt>
    6384:	b	6354 <PyNumber_FloorDivide@plt+0x2ef4>
    6388:	mov	x0, x19
    638c:	bl	3080 <_Py_Dealloc@plt>
    6390:	b	6344 <PyNumber_FloorDivide@plt+0x2ee4>
    6394:	mov	x0, x20
    6398:	bl	3080 <_Py_Dealloc@plt>
    639c:	b	6354 <PyNumber_FloorDivide@plt+0x2ef4>
    63a0:	mov	x21, #0x0                   	// #0
    63a4:	b	6354 <PyNumber_FloorDivide@plt+0x2ef4>
    63a8:	mov	x21, x0
    63ac:	b	6354 <PyNumber_FloorDivide@plt+0x2ef4>
    63b0:	stp	x29, x30, [sp, #-64]!
    63b4:	mov	x29, sp
    63b8:	stp	d8, d9, [sp, #16]
    63bc:	stp	d10, d11, [sp, #32]
    63c0:	fmov	d8, d0
    63c4:	fabs	d10, d0
    63c8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    63cc:	fmov	d0, x0
    63d0:	fcmp	d10, d0
    63d4:	b.ls	6418 <PyNumber_FloorDivide@plt+0x2fb8>  // b.plast
    63d8:	fcmp	d8, d8
    63dc:	b.vs	6688 <PyNumber_FloorDivide@plt+0x3228>
    63e0:	fmov	d9, d8
    63e4:	fcmpe	d8, #0.0
    63e8:	b.le	6400 <PyNumber_FloorDivide@plt+0x2fa0>
    63ec:	fmov	d0, d9
    63f0:	ldp	d8, d9, [sp, #16]
    63f4:	ldp	d10, d11, [sp, #32]
    63f8:	ldp	x29, x30, [sp], #64
    63fc:	ret
    6400:	bl	33f0 <__errno_location@plt>
    6404:	mov	w1, #0x21                  	// #33
    6408:	str	w1, [x0]
    640c:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    6410:	ldr	d9, [x0, #1152]
    6414:	b	63ec <PyNumber_FloorDivide@plt+0x2f8c>
    6418:	fcmp	d8, #0.0
    641c:	b.eq	6480 <PyNumber_FloorDivide@plt+0x3020>  // b.none
    6420:	frintm	d0, d8
    6424:	fcmp	d0, d8
    6428:	b.ne	6440 <PyNumber_FloorDivide@plt+0x2fe0>  // b.any
    642c:	fcmpe	d8, #0.0
    6430:	b.mi	64a4 <PyNumber_FloorDivide@plt+0x3044>  // b.first
    6434:	fmov	d0, #2.300000000000000000e+01
    6438:	fcmpe	d8, d0
    643c:	b.ls	64bc <PyNumber_FloorDivide@plt+0x305c>  // b.plast
    6440:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    6444:	ldr	d0, [x0, #1184]
    6448:	fcmpe	d10, d0
    644c:	b.mi	64d8 <PyNumber_FloorDivide@plt+0x3078>  // b.first
    6450:	mov	x0, #0x4069000000000000    	// #4641240890982006784
    6454:	fmov	d0, x0
    6458:	fcmpe	d10, d0
    645c:	b.le	6518 <PyNumber_FloorDivide@plt+0x30b8>
    6460:	fcmpe	d8, #0.0
    6464:	b.mi	6504 <PyNumber_FloorDivide@plt+0x30a4>  // b.first
    6468:	bl	33f0 <__errno_location@plt>
    646c:	mov	w1, #0x22                  	// #34
    6470:	str	w1, [x0]
    6474:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    6478:	ldr	d9, [x0, #1176]
    647c:	b	63ec <PyNumber_FloorDivide@plt+0x2f8c>
    6480:	bl	33f0 <__errno_location@plt>
    6484:	mov	w1, #0x21                  	// #33
    6488:	str	w1, [x0]
    648c:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    6490:	fmov	d0, x0
    6494:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    6498:	fmov	d9, x0
    649c:	bsl	v9.8b, v8.8b, v0.8b
    64a0:	b	63ec <PyNumber_FloorDivide@plt+0x2f8c>
    64a4:	bl	33f0 <__errno_location@plt>
    64a8:	mov	w1, #0x21                  	// #33
    64ac:	str	w1, [x0]
    64b0:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    64b4:	ldr	d9, [x0, #1152]
    64b8:	b	63ec <PyNumber_FloorDivide@plt+0x2f8c>
    64bc:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    64c0:	add	x0, x0, #0x500
    64c4:	fcvtzs	w1, d8
    64c8:	sub	w1, w1, #0x1
    64cc:	add	x0, x0, #0xd0
    64d0:	ldr	d9, [x0, w1, sxtw #3]
    64d4:	b	63ec <PyNumber_FloorDivide@plt+0x2f8c>
    64d8:	fmov	d0, #1.000000000000000000e+00
    64dc:	fdiv	d9, d0, d8
    64e0:	fabs	d1, d9
    64e4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    64e8:	fmov	d0, x0
    64ec:	fcmp	d1, d0
    64f0:	b.le	63ec <PyNumber_FloorDivide@plt+0x2f8c>
    64f4:	bl	33f0 <__errno_location@plt>
    64f8:	mov	w1, #0x22                  	// #34
    64fc:	str	w1, [x0]
    6500:	b	63ec <PyNumber_FloorDivide@plt+0x2f8c>
    6504:	fmov	d0, d8
    6508:	bl	55e0 <PyNumber_FloorDivide@plt+0x2180>
    650c:	movi	d9, #0x0
    6510:	fdiv	d9, d9, d0
    6514:	b	63ec <PyNumber_FloorDivide@plt+0x2f8c>
    6518:	str	d12, [sp, #48]
    651c:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    6520:	ldr	d0, [x0, #1216]
    6524:	fadd	d11, d10, d0
    6528:	fcmpe	d10, d0
    652c:	b.le	65c4 <PyNumber_FloorDivide@plt+0x3164>
    6530:	fsub	d0, d11, d10
    6534:	ldr	d1, [x0, #1216]
    6538:	fsub	d0, d0, d1
    653c:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    6540:	ldr	d1, [x0, #1192]
    6544:	fmul	d0, d0, d1
    6548:	fdiv	d12, d0, d11
    654c:	fcmpe	d8, #0.0
    6550:	b.mi	65d8 <PyNumber_FloorDivide@plt+0x3178>  // b.first
    6554:	fmov	d0, d10
    6558:	bl	3578 <PyNumber_FloorDivide@plt+0x118>
    655c:	fmov	d9, d0
    6560:	fmov	d0, d11
    6564:	bl	3440 <exp@plt>
    6568:	fdiv	d9, d9, d0
    656c:	fmul	d0, d12, d9
    6570:	fadd	d9, d0, d9
    6574:	mov	x0, #0x800000000000        	// #140737488355328
    6578:	movk	x0, #0x4061, lsl #48
    657c:	fmov	d0, x0
    6580:	fcmpe	d10, d0
    6584:	b.pl	6664 <PyNumber_FloorDivide@plt+0x3204>  // b.nfrst
    6588:	fmov	d1, #5.000000000000000000e-01
    658c:	fsub	d1, d10, d1
    6590:	fmov	d0, d11
    6594:	bl	3090 <pow@plt>
    6598:	fmul	d9, d9, d0
    659c:	fabs	d1, d9
    65a0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    65a4:	fmov	d0, x0
    65a8:	fcmp	d1, d0
    65ac:	b.le	6690 <PyNumber_FloorDivide@plt+0x3230>
    65b0:	bl	33f0 <__errno_location@plt>
    65b4:	mov	w1, #0x22                  	// #34
    65b8:	str	w1, [x0]
    65bc:	ldr	d12, [sp, #48]
    65c0:	b	63ec <PyNumber_FloorDivide@plt+0x2f8c>
    65c4:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    65c8:	ldr	d0, [x0, #1216]
    65cc:	fsub	d0, d11, d0
    65d0:	fsub	d0, d0, d10
    65d4:	b	653c <PyNumber_FloorDivide@plt+0x30dc>
    65d8:	fmov	d0, d10
    65dc:	bl	55e0 <PyNumber_FloorDivide@plt+0x2180>
    65e0:	fmov	d8, d0
    65e4:	fmov	d0, d11
    65e8:	bl	3440 <exp@plt>
    65ec:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    65f0:	ldr	d9, [x0, #1224]
    65f4:	fdiv	d9, d9, d8
    65f8:	fdiv	d9, d9, d10
    65fc:	fmul	d9, d9, d0
    6600:	fmov	d0, d10
    6604:	bl	3578 <PyNumber_FloorDivide@plt+0x118>
    6608:	fdiv	d9, d9, d0
    660c:	fmul	d0, d12, d9
    6610:	fsub	d9, d9, d0
    6614:	mov	x0, #0x800000000000        	// #140737488355328
    6618:	movk	x0, #0x4061, lsl #48
    661c:	fmov	d0, x0
    6620:	fcmpe	d10, d0
    6624:	b.pl	6640 <PyNumber_FloorDivide@plt+0x31e0>  // b.nfrst
    6628:	fmov	d1, #5.000000000000000000e-01
    662c:	fsub	d1, d10, d1
    6630:	fmov	d0, d11
    6634:	bl	3090 <pow@plt>
    6638:	fdiv	d9, d9, d0
    663c:	b	659c <PyNumber_FloorDivide@plt+0x313c>
    6640:	fmov	d1, #5.000000000000000000e-01
    6644:	fmul	d10, d10, d1
    6648:	fmov	d1, #2.500000000000000000e-01
    664c:	fsub	d1, d10, d1
    6650:	fmov	d0, d11
    6654:	bl	3090 <pow@plt>
    6658:	fdiv	d9, d9, d0
    665c:	fdiv	d9, d9, d0
    6660:	b	659c <PyNumber_FloorDivide@plt+0x313c>
    6664:	fmov	d1, #5.000000000000000000e-01
    6668:	fmul	d10, d10, d1
    666c:	fmov	d1, #2.500000000000000000e-01
    6670:	fsub	d1, d10, d1
    6674:	fmov	d0, d11
    6678:	bl	3090 <pow@plt>
    667c:	fmul	d9, d9, d0
    6680:	fmul	d9, d9, d0
    6684:	b	659c <PyNumber_FloorDivide@plt+0x313c>
    6688:	fmov	d9, d8
    668c:	b	63ec <PyNumber_FloorDivide@plt+0x2f8c>
    6690:	ldr	d12, [sp, #48]
    6694:	b	63ec <PyNumber_FloorDivide@plt+0x2f8c>
    6698:	stp	x29, x30, [sp, #-416]!
    669c:	mov	x29, sp
    66a0:	stp	x19, x20, [sp, #16]
    66a4:	stp	x21, x22, [sp, #32]
    66a8:	mov	x0, x1
    66ac:	bl	3370 <PyObject_GetIter@plt>
    66b0:	mov	x22, x0
    66b4:	cbz	x0, 6a98 <PyNumber_FloorDivide@plt+0x3638>
    66b8:	stp	x23, x24, [sp, #48]
    66bc:	str	x25, [sp, #64]
    66c0:	stp	d8, d9, [sp, #80]
    66c4:	stp	d10, d11, [sp, #96]
    66c8:	stp	d12, d13, [sp, #112]
    66cc:	add	x20, sp, #0xa0
    66d0:	mov	x25, #0x20                  	// #32
    66d4:	movi	d12, #0x0
    66d8:	fmov	d11, d12
    66dc:	mov	x21, #0x0                   	// #0
    66e0:	adrp	x23, 1b000 <_Py_log1p@@Base+0x130ec>
    66e4:	ldr	x23, [x23, #3824]
    66e8:	adrp	x24, 1b000 <_Py_log1p@@Base+0x130ec>
    66ec:	ldr	x24, [x24, #3984]
    66f0:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    66f4:	ldr	d10, [x0, #1232]
    66f8:	b	6904 <PyNumber_FloorDivide@plt+0x34a4>
    66fc:	bl	32b0 <PyErr_Occurred@plt>
    6700:	mov	x23, x0
    6704:	cbnz	x0, 69e4 <PyNumber_FloorDivide@plt+0x3584>
    6708:	fcmp	d11, #0.0
    670c:	b.ne	6a30 <PyNumber_FloorDivide@plt+0x35d0>  // b.any
    6710:	str	xzr, [sp, #152]
    6714:	cmp	x21, #0x0
    6718:	b.le	67c4 <PyNumber_FloorDivide@plt+0x3364>
    671c:	sub	x21, x21, #0x1
    6720:	ldr	d0, [x20, x21, lsl #3]
    6724:	str	d0, [sp, #152]
    6728:	cbz	x21, 67c4 <PyNumber_FloorDivide@plt+0x3364>
    672c:	ldr	d2, [sp, #152]
    6730:	sub	x21, x21, #0x1
    6734:	mov	x0, x21
    6738:	ldr	d0, [x20, x21, lsl #3]
    673c:	fadd	d1, d2, d0
    6740:	str	d1, [sp, #152]
    6744:	ldr	d1, [sp, #152]
    6748:	fsub	d1, d1, d2
    674c:	str	d1, [sp, #144]
    6750:	ldr	d1, [sp, #144]
    6754:	fsub	d0, d0, d1
    6758:	str	d0, [sp, #136]
    675c:	ldr	d0, [sp, #136]
    6760:	fcmp	d0, #0.0
    6764:	b.eq	6728 <PyNumber_FloorDivide@plt+0x32c8>  // b.none
    6768:	cmp	x21, #0x0
    676c:	b.le	67c4 <PyNumber_FloorDivide@plt+0x3364>
    6770:	ldr	d0, [sp, #136]
    6774:	fcmpe	d0, #0.0
    6778:	b.mi	6a68 <PyNumber_FloorDivide@plt+0x3608>  // b.first
    677c:	ldr	d0, [sp, #136]
    6780:	fcmpe	d0, #0.0
    6784:	b.le	67c4 <PyNumber_FloorDivide@plt+0x3364>
    6788:	add	x0, x20, x0, lsl #3
    678c:	ldur	d0, [x0, #-8]
    6790:	fcmpe	d0, #0.0
    6794:	b.le	67c4 <PyNumber_FloorDivide@plt+0x3364>
    6798:	ldr	d0, [sp, #136]
    679c:	fadd	d0, d0, d0
    67a0:	ldr	d1, [sp, #152]
    67a4:	fadd	d1, d1, d0
    67a8:	ldr	d2, [sp, #152]
    67ac:	fsub	d2, d1, d2
    67b0:	str	d2, [sp, #144]
    67b4:	ldr	d2, [sp, #144]
    67b8:	fcmp	d2, d0
    67bc:	b.ne	67c4 <PyNumber_FloorDivide@plt+0x3364>  // b.any
    67c0:	str	d1, [sp, #152]
    67c4:	ldr	d0, [sp, #152]
    67c8:	bl	31c0 <PyFloat_FromDouble@plt>
    67cc:	mov	x19, x0
    67d0:	b	69e4 <PyNumber_FloorDivide@plt+0x3584>
    67d4:	ldr	d9, [x19, #16]
    67d8:	b	6940 <PyNumber_FloorDivide@plt+0x34e0>
    67dc:	mov	x0, x19
    67e0:	bl	3330 <PyLong_AsDouble@plt>
    67e4:	fmov	d9, d0
    67e8:	fmov	d0, #-1.000000000000000000e+00
    67ec:	fcmp	d9, d0
    67f0:	b.ne	6940 <PyNumber_FloorDivide@plt+0x34e0>  // b.any
    67f4:	bl	32b0 <PyErr_Occurred@plt>
    67f8:	cbz	x0, 6940 <PyNumber_FloorDivide@plt+0x34e0>
    67fc:	b	6808 <PyNumber_FloorDivide@plt+0x33a8>
    6800:	bl	32b0 <PyErr_Occurred@plt>
    6804:	cbz	x0, 6940 <PyNumber_FloorDivide@plt+0x34e0>
    6808:	ldr	x0, [x19]
    680c:	sub	x0, x0, #0x1
    6810:	str	x0, [x19]
    6814:	cbz	x0, 6a88 <PyNumber_FloorDivide@plt+0x3628>
    6818:	mov	x19, #0x0                   	// #0
    681c:	b	69e4 <PyNumber_FloorDivide@plt+0x3584>
    6820:	mov	x0, x19
    6824:	bl	3080 <_Py_Dealloc@plt>
    6828:	b	6950 <PyNumber_FloorDivide@plt+0x34f0>
    682c:	ldr	d13, [sp, #152]
    6830:	add	x1, x1, #0x1
    6834:	cmp	x21, x1
    6838:	b.eq	689c <PyNumber_FloorDivide@plt+0x343c>  // b.none
    683c:	ldr	d1, [x20, x1, lsl #3]
    6840:	fabs	d2, d13
    6844:	fabs	d0, d1
    6848:	fcmpe	d2, d0
    684c:	fcsel	d8, d13, d8, mi  // mi = first
    6850:	fcsel	d3, d1, d13, mi  // mi = first
    6854:	fcsel	d1, d13, d1, mi  // mi = first
    6858:	fadd	d0, d3, d1
    685c:	str	d0, [sp, #152]
    6860:	ldr	d0, [sp, #152]
    6864:	fsub	d13, d0, d3
    6868:	str	d13, [sp, #144]
    686c:	ldr	d0, [sp, #144]
    6870:	fsub	d1, d1, d0
    6874:	str	d1, [sp, #136]
    6878:	ldr	d0, [sp, #136]
    687c:	fcmp	d0, #0.0
    6880:	b.eq	682c <PyNumber_FloorDivide@plt+0x33cc>  // b.none
    6884:	ldr	d0, [sp, #136]
    6888:	str	d0, [x20, x19, lsl #3]
    688c:	add	x19, x19, #0x1
    6890:	b	682c <PyNumber_FloorDivide@plt+0x33cc>
    6894:	fmov	d13, d9
    6898:	mov	x19, #0x0                   	// #0
    689c:	fcmp	d13, #0.0
    68a0:	b.eq	6900 <PyNumber_FloorDivide@plt+0x34a0>  // b.none
    68a4:	fabs	d0, d13
    68a8:	fcmp	d0, d10
    68ac:	b.ls	68f0 <PyNumber_FloorDivide@plt+0x3490>  // b.plast
    68b0:	fabs	d0, d9
    68b4:	fcmp	d0, d10
    68b8:	b.ls	68d0 <PyNumber_FloorDivide@plt+0x3470>  // b.plast
    68bc:	b.le	68c4 <PyNumber_FloorDivide@plt+0x3464>
    68c0:	fadd	d12, d12, d9
    68c4:	fadd	d11, d11, d9
    68c8:	mov	x19, #0x0                   	// #0
    68cc:	b	6900 <PyNumber_FloorDivide@plt+0x34a0>
    68d0:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    68d4:	add	x1, x1, #0x130
    68d8:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    68dc:	ldr	x0, [x0, #3936]
    68e0:	ldr	x0, [x0]
    68e4:	bl	3130 <PyErr_SetString@plt>
    68e8:	mov	x19, #0x0                   	// #0
    68ec:	b	69e4 <PyNumber_FloorDivide@plt+0x3584>
    68f0:	cmp	x19, x25
    68f4:	b.ge	6968 <PyNumber_FloorDivide@plt+0x3508>  // b.tcont
    68f8:	str	d13, [x20, x19, lsl #3]
    68fc:	add	x19, x19, #0x1
    6900:	mov	x21, x19
    6904:	mov	x0, x22
    6908:	bl	30b0 <PyIter_Next@plt>
    690c:	mov	x19, x0
    6910:	cbz	x0, 66fc <PyNumber_FloorDivide@plt+0x329c>
    6914:	ldr	x0, [x0, #8]
    6918:	cmp	x0, x23
    691c:	b.eq	67d4 <PyNumber_FloorDivide@plt+0x3374>  // b.none
    6920:	cmp	x0, x24
    6924:	b.eq	67dc <PyNumber_FloorDivide@plt+0x337c>  // b.none
    6928:	mov	x0, x19
    692c:	bl	32e0 <PyFloat_AsDouble@plt>
    6930:	fmov	d9, d0
    6934:	fmov	d0, #-1.000000000000000000e+00
    6938:	fcmp	d9, d0
    693c:	b.eq	6800 <PyNumber_FloorDivide@plt+0x33a0>  // b.none
    6940:	ldr	x1, [x19]
    6944:	sub	x1, x1, #0x1
    6948:	str	x1, [x19]
    694c:	cbz	x1, 6820 <PyNumber_FloorDivide@plt+0x33c0>
    6950:	cmp	x21, #0x0
    6954:	b.le	6894 <PyNumber_FloorDivide@plt+0x3434>
    6958:	fmov	d13, d9
    695c:	mov	x1, #0x0                   	// #0
    6960:	mov	x19, #0x0                   	// #0
    6964:	b	683c <PyNumber_FloorDivide@plt+0x33dc>
    6968:	lsl	x25, x25, #1
    696c:	cmp	x25, x19
    6970:	mov	x2, #0xffffffffffffffe     	// #1152921504606846974
    6974:	ccmp	x25, x2, #0x2, gt
    6978:	b.hi	69c8 <PyNumber_FloorDivide@plt+0x3568>  // b.pmore
    697c:	add	x1, sp, #0xa0
    6980:	cmp	x20, x1
    6984:	b.eq	69a4 <PyNumber_FloorDivide@plt+0x3544>  // b.none
    6988:	lsl	x1, x25, #3
    698c:	mov	x0, x20
    6990:	bl	3180 <PyMem_Realloc@plt>
    6994:	mov	x21, x0
    6998:	cbz	x0, 69c8 <PyNumber_FloorDivide@plt+0x3568>
    699c:	mov	x20, x21
    69a0:	b	68f8 <PyNumber_FloorDivide@plt+0x3498>
    69a4:	lsl	x0, x25, #3
    69a8:	bl	3410 <PyMem_Malloc@plt>
    69ac:	mov	x21, x0
    69b0:	cbz	x0, 69c4 <PyNumber_FloorDivide@plt+0x3564>
    69b4:	lsl	x2, x19, #3
    69b8:	add	x1, sp, #0xa0
    69bc:	bl	2fc0 <memcpy@plt>
    69c0:	b	699c <PyNumber_FloorDivide@plt+0x353c>
    69c4:	add	x20, sp, #0xa0
    69c8:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    69cc:	add	x1, x1, #0x150
    69d0:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    69d4:	ldr	x0, [x0, #3864]
    69d8:	ldr	x0, [x0]
    69dc:	bl	3130 <PyErr_SetString@plt>
    69e0:	mov	x19, #0x0                   	// #0
    69e4:	ldr	x0, [x22]
    69e8:	sub	x0, x0, #0x1
    69ec:	str	x0, [x22]
    69f0:	cbz	x0, 6a7c <PyNumber_FloorDivide@plt+0x361c>
    69f4:	add	x0, sp, #0xa0
    69f8:	cmp	x20, x0
    69fc:	b.eq	6aa0 <PyNumber_FloorDivide@plt+0x3640>  // b.none
    6a00:	mov	x0, x20
    6a04:	bl	3010 <PyMem_Free@plt>
    6a08:	ldp	x23, x24, [sp, #48]
    6a0c:	ldr	x25, [sp, #64]
    6a10:	ldp	d8, d9, [sp, #80]
    6a14:	ldp	d10, d11, [sp, #96]
    6a18:	ldp	d12, d13, [sp, #112]
    6a1c:	mov	x0, x19
    6a20:	ldp	x19, x20, [sp, #16]
    6a24:	ldp	x21, x22, [sp, #32]
    6a28:	ldp	x29, x30, [sp], #416
    6a2c:	ret
    6a30:	fcmp	d12, d12
    6a34:	b.vs	6a48 <PyNumber_FloorDivide@plt+0x35e8>
    6a38:	fmov	d0, d11
    6a3c:	bl	31c0 <PyFloat_FromDouble@plt>
    6a40:	mov	x19, x0
    6a44:	b	69e4 <PyNumber_FloorDivide@plt+0x3584>
    6a48:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    6a4c:	add	x1, x1, #0x168
    6a50:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    6a54:	ldr	x0, [x0, #3872]
    6a58:	ldr	x0, [x0]
    6a5c:	bl	3130 <PyErr_SetString@plt>
    6a60:	mov	x19, x23
    6a64:	b	69e4 <PyNumber_FloorDivide@plt+0x3584>
    6a68:	add	x1, x20, x21, lsl #3
    6a6c:	ldur	d0, [x1, #-8]
    6a70:	fcmpe	d0, #0.0
    6a74:	b.pl	677c <PyNumber_FloorDivide@plt+0x331c>  // b.nfrst
    6a78:	b	6798 <PyNumber_FloorDivide@plt+0x3338>
    6a7c:	mov	x0, x22
    6a80:	bl	3080 <_Py_Dealloc@plt>
    6a84:	b	69f4 <PyNumber_FloorDivide@plt+0x3594>
    6a88:	mov	x0, x19
    6a8c:	bl	3080 <_Py_Dealloc@plt>
    6a90:	mov	x19, #0x0                   	// #0
    6a94:	b	69e4 <PyNumber_FloorDivide@plt+0x3584>
    6a98:	mov	x19, x0
    6a9c:	b	6a1c <PyNumber_FloorDivide@plt+0x35bc>
    6aa0:	ldp	x23, x24, [sp, #48]
    6aa4:	ldr	x25, [sp, #64]
    6aa8:	ldp	d8, d9, [sp, #80]
    6aac:	ldp	d10, d11, [sp, #96]
    6ab0:	ldp	d12, d13, [sp, #112]
    6ab4:	b	6a1c <PyNumber_FloorDivide@plt+0x35bc>
    6ab8:	stp	x29, x30, [sp, #-48]!
    6abc:	mov	x29, sp
    6ac0:	str	d8, [sp, #16]
    6ac4:	mov	x0, x1
    6ac8:	ldr	x2, [x1, #8]
    6acc:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    6ad0:	ldr	x1, [x1, #3824]
    6ad4:	cmp	x2, x1
    6ad8:	b.eq	6b14 <PyNumber_FloorDivide@plt+0x36b4>  // b.none
    6adc:	bl	32e0 <PyFloat_AsDouble@plt>
    6ae0:	fmov	d8, d0
    6ae4:	fmov	d0, #-1.000000000000000000e+00
    6ae8:	fcmp	d8, d0
    6aec:	b.ne	6b18 <PyNumber_FloorDivide@plt+0x36b8>  // b.any
    6af0:	bl	32b0 <PyErr_Occurred@plt>
    6af4:	mov	x1, x0
    6af8:	mov	x0, #0x0                   	// #0
    6afc:	cbnz	x1, 6b58 <PyNumber_FloorDivide@plt+0x36f8>
    6b00:	add	x0, sp, #0x2c
    6b04:	fmov	d0, d8
    6b08:	bl	3340 <frexp@plt>
    6b0c:	fmov	d8, d0
    6b10:	b	6b44 <PyNumber_FloorDivide@plt+0x36e4>
    6b14:	ldr	d8, [x0, #16]
    6b18:	fcmp	d8, d8
    6b1c:	b.vs	6b40 <PyNumber_FloorDivide@plt+0x36e0>
    6b20:	fabs	d1, d8
    6b24:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6b28:	fmov	d0, x0
    6b2c:	fcmp	d1, d0
    6b30:	cset	w0, gt
    6b34:	fcmp	d8, #0.0
    6b38:	csinc	w0, w0, wzr, ne  // ne = any
    6b3c:	cbz	w0, 6b00 <PyNumber_FloorDivide@plt+0x36a0>
    6b40:	str	wzr, [sp, #44]
    6b44:	ldr	w1, [sp, #44]
    6b48:	fmov	d0, d8
    6b4c:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    6b50:	add	x0, x0, #0x180
    6b54:	bl	32a0 <Py_BuildValue@plt>
    6b58:	ldr	d8, [sp, #16]
    6b5c:	ldp	x29, x30, [sp], #48
    6b60:	ret
    6b64:	stp	x29, x30, [sp, #-64]!
    6b68:	mov	x29, sp
    6b6c:	stp	x19, x20, [sp, #16]
    6b70:	stp	x21, x22, [sp, #32]
    6b74:	str	x23, [sp, #48]
    6b78:	mov	x20, x1
    6b7c:	mov	x22, x2
    6b80:	sub	x1, x1, x0
    6b84:	lsr	x19, x1, #1
    6b88:	cmp	x1, #0x81
    6b8c:	b.hi	6b9c <PyNumber_FloorDivide@plt+0x373c>  // b.pmore
    6b90:	mul	x1, x19, x2
    6b94:	cmp	x1, #0x40
    6b98:	b.ls	6c2c <PyNumber_FloorDivide@plt+0x37cc>  // b.plast
    6b9c:	add	x19, x0, x19
    6ba0:	orr	x19, x19, #0x1
    6ba4:	sub	x3, x19, #0x2
    6ba8:	mov	x2, #0x0                   	// #0
    6bac:	add	x2, x2, #0x1
    6bb0:	lsr	x3, x3, #1
    6bb4:	cbnz	x3, 6bac <PyNumber_FloorDivide@plt+0x374c>
    6bb8:	mov	x1, x19
    6bbc:	bl	6b64 <PyNumber_FloorDivide@plt+0x3704>
    6bc0:	mov	x21, x0
    6bc4:	mov	x23, x0
    6bc8:	cbz	x0, 6c14 <PyNumber_FloorDivide@plt+0x37b4>
    6bcc:	mov	x2, x22
    6bd0:	mov	x1, x20
    6bd4:	mov	x0, x19
    6bd8:	bl	6b64 <PyNumber_FloorDivide@plt+0x3704>
    6bdc:	mov	x19, x0
    6be0:	cbz	x0, 6c68 <PyNumber_FloorDivide@plt+0x3808>
    6be4:	mov	x1, x0
    6be8:	mov	x0, x21
    6bec:	bl	30d0 <PyNumber_Multiply@plt>
    6bf0:	mov	x23, x0
    6bf4:	ldr	x0, [x21]
    6bf8:	sub	x0, x0, #0x1
    6bfc:	str	x0, [x21]
    6c00:	cbz	x0, 6c7c <PyNumber_FloorDivide@plt+0x381c>
    6c04:	ldr	x0, [x19]
    6c08:	sub	x0, x0, #0x1
    6c0c:	str	x0, [x19]
    6c10:	cbz	x0, 6c54 <PyNumber_FloorDivide@plt+0x37f4>
    6c14:	mov	x0, x23
    6c18:	ldp	x19, x20, [sp, #16]
    6c1c:	ldp	x21, x22, [sp, #32]
    6c20:	ldr	x23, [sp, #48]
    6c24:	ldp	x29, x30, [sp], #64
    6c28:	ret
    6c2c:	add	x2, x0, #0x2
    6c30:	cmp	x20, x2
    6c34:	b.ls	6c48 <PyNumber_FloorDivide@plt+0x37e8>  // b.plast
    6c38:	mul	x0, x0, x2
    6c3c:	add	x2, x2, #0x2
    6c40:	cmp	x20, x2
    6c44:	b.hi	6c38 <PyNumber_FloorDivide@plt+0x37d8>  // b.pmore
    6c48:	bl	3350 <PyLong_FromUnsignedLong@plt>
    6c4c:	mov	x23, x0
    6c50:	b	6c14 <PyNumber_FloorDivide@plt+0x37b4>
    6c54:	mov	x0, x19
    6c58:	bl	3080 <_Py_Dealloc@plt>
    6c5c:	b	6c14 <PyNumber_FloorDivide@plt+0x37b4>
    6c60:	mov	x23, x19
    6c64:	b	6c14 <PyNumber_FloorDivide@plt+0x37b4>
    6c68:	ldr	x0, [x21]
    6c6c:	sub	x0, x0, #0x1
    6c70:	str	x0, [x21]
    6c74:	cbnz	x0, 6c60 <PyNumber_FloorDivide@plt+0x3800>
    6c78:	mov	x23, x19
    6c7c:	mov	x0, x21
    6c80:	bl	3080 <_Py_Dealloc@plt>
    6c84:	cbnz	x19, 6c04 <PyNumber_FloorDivide@plt+0x37a4>
    6c88:	b	6c14 <PyNumber_FloorDivide@plt+0x37b4>
    6c8c:	stp	x29, x30, [sp, #-16]!
    6c90:	mov	x29, sp
    6c94:	bl	3310 <erfc@plt>
    6c98:	ldp	x29, x30, [sp], #16
    6c9c:	ret
    6ca0:	stp	x29, x30, [sp, #-16]!
    6ca4:	mov	x29, sp
    6ca8:	bl	3270 <erf@plt>
    6cac:	ldp	x29, x30, [sp], #16
    6cb0:	ret
    6cb4:	stp	x29, x30, [sp, #-288]!
    6cb8:	mov	x29, sp
    6cbc:	stp	x19, x20, [sp, #16]
    6cc0:	mov	x20, x1
    6cc4:	cmp	x2, #0x2
    6cc8:	b.eq	6ce8 <PyNumber_FloorDivide@plt+0x3888>  // b.none
    6ccc:	mov	x1, x2
    6cd0:	mov	x3, #0x2                   	// #2
    6cd4:	mov	x2, x3
    6cd8:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    6cdc:	add	x0, x0, #0x188
    6ce0:	bl	3280 <_PyArg_CheckPositional@plt>
    6ce4:	cbz	w0, 70ec <PyNumber_FloorDivide@plt+0x3c8c>
    6ce8:	ldr	x19, [x20]
    6cec:	ldr	x20, [x20, #8]
    6cf0:	ldr	x0, [x19, #8]
    6cf4:	ldr	x0, [x0, #168]
    6cf8:	str	wzr, [sp, #136]
    6cfc:	tbz	w0, #26, 6d7c <PyNumber_FloorDivide@plt+0x391c>
    6d00:	ldr	x0, [x20, #8]
    6d04:	ldr	x0, [x0, #168]
    6d08:	str	wzr, [sp, #140]
    6d0c:	tbz	w0, #26, 6d98 <PyNumber_FloorDivide@plt+0x3938>
    6d10:	stp	x21, x22, [sp, #32]
    6d14:	ldr	x21, [x20, #16]
    6d18:	ldr	x0, [x19, #16]
    6d1c:	cmp	x0, x21
    6d20:	b.ne	6de0 <PyNumber_FloorDivide@plt+0x3980>  // b.any
    6d24:	stp	x23, x24, [sp, #48]
    6d28:	add	x23, sp, #0xa0
    6d2c:	cmp	x21, #0x10
    6d30:	b.gt	6e04 <PyNumber_FloorDivide@plt+0x39a4>
    6d34:	stp	d10, d11, [sp, #112]
    6d38:	cmp	x21, #0x0
    6d3c:	b.le	7004 <PyNumber_FloorDivide@plt+0x3ba4>
    6d40:	stp	x25, x26, [sp, #64]
    6d44:	stp	x27, x28, [sp, #80]
    6d48:	stp	d8, d9, [sp, #96]
    6d4c:	movi	d10, #0x0
    6d50:	mov	w25, #0x0                   	// #0
    6d54:	mov	x22, #0x0                   	// #0
    6d58:	add	x28, x19, #0x18
    6d5c:	adrp	x27, 1b000 <_Py_log1p@@Base+0x130ec>
    6d60:	ldr	x0, [x27, #3824]
    6d64:	str	x0, [sp, #144]
    6d68:	adrp	x26, 1b000 <_Py_log1p@@Base+0x130ec>
    6d6c:	ldr	x0, [x26, #3984]
    6d70:	str	x0, [sp, #152]
    6d74:	fmov	d11, #-1.000000000000000000e+00
    6d78:	b	6ee4 <PyNumber_FloorDivide@plt+0x3a84>
    6d7c:	mov	x0, x19
    6d80:	bl	3390 <PySequence_Tuple@plt>
    6d84:	mov	x19, x0
    6d88:	cbz	x0, 708c <PyNumber_FloorDivide@plt+0x3c2c>
    6d8c:	mov	w0, #0x1                   	// #1
    6d90:	str	w0, [sp, #136]
    6d94:	b	6d00 <PyNumber_FloorDivide@plt+0x38a0>
    6d98:	mov	x0, x20
    6d9c:	bl	3390 <PySequence_Tuple@plt>
    6da0:	mov	x20, x0
    6da4:	mov	w0, #0x1                   	// #1
    6da8:	str	w0, [sp, #140]
    6dac:	cbnz	x20, 6d10 <PyNumber_FloorDivide@plt+0x38b0>
    6db0:	ldr	w0, [sp, #136]
    6db4:	cbz	w0, 70e4 <PyNumber_FloorDivide@plt+0x3c84>
    6db8:	ldr	x0, [x19]
    6dbc:	sub	x0, x0, #0x1
    6dc0:	str	x0, [x19]
    6dc4:	cbz	x0, 6dd0 <PyNumber_FloorDivide@plt+0x3970>
    6dc8:	mov	x19, x20
    6dcc:	b	708c <PyNumber_FloorDivide@plt+0x3c2c>
    6dd0:	mov	x0, x19
    6dd4:	bl	3080 <_Py_Dealloc@plt>
    6dd8:	mov	x19, x20
    6ddc:	b	708c <PyNumber_FloorDivide@plt+0x3c2c>
    6de0:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    6de4:	add	x1, x1, #0x190
    6de8:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    6dec:	ldr	x0, [x0, #3872]
    6df0:	ldr	x0, [x0]
    6df4:	bl	3130 <PyErr_SetString@plt>
    6df8:	mov	x19, #0x0                   	// #0
    6dfc:	ldp	x21, x22, [sp, #32]
    6e00:	b	708c <PyNumber_FloorDivide@plt+0x3c2c>
    6e04:	lsl	x0, x21, #3
    6e08:	bl	3140 <PyObject_Malloc@plt>
    6e0c:	mov	x23, x0
    6e10:	cbnz	x0, 6d34 <PyNumber_FloorDivide@plt+0x38d4>
    6e14:	bl	30a0 <PyErr_NoMemory@plt>
    6e18:	mov	x19, x0
    6e1c:	ldp	x21, x22, [sp, #32]
    6e20:	ldp	x23, x24, [sp, #48]
    6e24:	b	708c <PyNumber_FloorDivide@plt+0x3c2c>
    6e28:	ldr	d8, [x0, #16]
    6e2c:	b	6f18 <PyNumber_FloorDivide@plt+0x3ab8>
    6e30:	bl	3330 <PyLong_AsDouble@plt>
    6e34:	fmov	d8, d0
    6e38:	fcmp	d0, d11
    6e3c:	b.ne	6f18 <PyNumber_FloorDivide@plt+0x3ab8>  // b.any
    6e40:	bl	32b0 <PyErr_Occurred@plt>
    6e44:	cbz	x0, 6f18 <PyNumber_FloorDivide@plt+0x3ab8>
    6e48:	b	6e54 <PyNumber_FloorDivide@plt+0x39f4>
    6e4c:	bl	32b0 <PyErr_Occurred@plt>
    6e50:	cbz	x0, 6f18 <PyNumber_FloorDivide@plt+0x3ab8>
    6e54:	add	x0, sp, #0xa0
    6e58:	cmp	x23, x0
    6e5c:	b.eq	6e68 <PyNumber_FloorDivide@plt+0x3a08>  // b.none
    6e60:	mov	x0, x23
    6e64:	bl	31b0 <PyObject_Free@plt>
    6e68:	ldr	w0, [sp, #136]
    6e6c:	cbz	w0, 6e80 <PyNumber_FloorDivide@plt+0x3a20>
    6e70:	ldr	x0, [x19]
    6e74:	sub	x0, x0, #0x1
    6e78:	str	x0, [x19]
    6e7c:	cbz	x0, 70b4 <PyNumber_FloorDivide@plt+0x3c54>
    6e80:	mov	x19, #0x0                   	// #0
    6e84:	ldr	w0, [sp, #140]
    6e88:	cbz	w0, 7104 <PyNumber_FloorDivide@plt+0x3ca4>
    6e8c:	ldr	x0, [x20]
    6e90:	sub	x0, x0, #0x1
    6e94:	str	x0, [x20]
    6e98:	cbz	x0, 70c0 <PyNumber_FloorDivide@plt+0x3c60>
    6e9c:	ldp	x21, x22, [sp, #32]
    6ea0:	ldp	x23, x24, [sp, #48]
    6ea4:	ldp	x25, x26, [sp, #64]
    6ea8:	ldp	x27, x28, [sp, #80]
    6eac:	ldp	d8, d9, [sp, #96]
    6eb0:	ldp	d10, d11, [sp, #112]
    6eb4:	b	708c <PyNumber_FloorDivide@plt+0x3c2c>
    6eb8:	ldr	d9, [x0, #16]
    6ebc:	fabd	d0, d8, d9
    6ec0:	str	d0, [x23, x24, lsl #3]
    6ec4:	fcmp	d0, d0
    6ec8:	cset	w0, vs
    6ecc:	orr	w25, w25, w0
    6ed0:	fcmp	d0, d10
    6ed4:	fcsel	d10, d10, d0, le
    6ed8:	add	x22, x22, #0x1
    6edc:	cmp	x21, x22
    6ee0:	b.eq	6f74 <PyNumber_FloorDivide@plt+0x3b14>  // b.none
    6ee4:	mov	x24, x22
    6ee8:	ldr	x0, [x28, x22, lsl #3]
    6eec:	ldr	x1, [x0, #8]
    6ef0:	ldr	x2, [sp, #144]
    6ef4:	cmp	x1, x2
    6ef8:	b.eq	6e28 <PyNumber_FloorDivide@plt+0x39c8>  // b.none
    6efc:	ldr	x2, [sp, #152]
    6f00:	cmp	x1, x2
    6f04:	b.eq	6e30 <PyNumber_FloorDivide@plt+0x39d0>  // b.none
    6f08:	bl	32e0 <PyFloat_AsDouble@plt>
    6f0c:	fmov	d8, d0
    6f10:	fcmp	d0, d11
    6f14:	b.eq	6e4c <PyNumber_FloorDivide@plt+0x39ec>  // b.none
    6f18:	add	x0, x20, #0x18
    6f1c:	ldr	x0, [x0, x24, lsl #3]
    6f20:	ldr	x1, [x0, #8]
    6f24:	ldr	x2, [x27, #3824]
    6f28:	cmp	x1, x2
    6f2c:	b.eq	6eb8 <PyNumber_FloorDivide@plt+0x3a58>  // b.none
    6f30:	ldr	x2, [x26, #3984]
    6f34:	cmp	x1, x2
    6f38:	b.eq	6f58 <PyNumber_FloorDivide@plt+0x3af8>  // b.none
    6f3c:	bl	32e0 <PyFloat_AsDouble@plt>
    6f40:	fmov	d9, d0
    6f44:	fcmp	d0, d11
    6f48:	b.ne	6ebc <PyNumber_FloorDivide@plt+0x3a5c>  // b.any
    6f4c:	bl	32b0 <PyErr_Occurred@plt>
    6f50:	cbz	x0, 6ebc <PyNumber_FloorDivide@plt+0x3a5c>
    6f54:	b	6e54 <PyNumber_FloorDivide@plt+0x39f4>
    6f58:	bl	3330 <PyLong_AsDouble@plt>
    6f5c:	fmov	d9, d0
    6f60:	fcmp	d0, d11
    6f64:	b.ne	6ebc <PyNumber_FloorDivide@plt+0x3a5c>  // b.any
    6f68:	bl	32b0 <PyErr_Occurred@plt>
    6f6c:	cbz	x0, 6ebc <PyNumber_FloorDivide@plt+0x3a5c>
    6f70:	b	6e54 <PyNumber_FloorDivide@plt+0x39f4>
    6f74:	fabs	d1, d10
    6f78:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6f7c:	fmov	d0, x0
    6f80:	fcmp	d1, d0
    6f84:	b.gt	7024 <PyNumber_FloorDivide@plt+0x3bc4>
    6f88:	cbnz	w25, 700c <PyNumber_FloorDivide@plt+0x3bac>
    6f8c:	fcmp	d10, #0.0
    6f90:	ccmp	x21, #0x1, #0x4, ne  // ne = any
    6f94:	b.le	70f4 <PyNumber_FloorDivide@plt+0x3c94>
    6f98:	mov	x0, x23
    6f9c:	add	x21, x23, x21, lsl #3
    6fa0:	movi	d3, #0x0
    6fa4:	fmov	d0, #1.000000000000000000e+00
    6fa8:	ldr	d1, [x0], #8
    6fac:	fdiv	d1, d1, d10
    6fb0:	fmul	d1, d1, d1
    6fb4:	fmov	d2, d0
    6fb8:	fadd	d0, d0, d1
    6fbc:	fsub	d2, d2, d0
    6fc0:	fadd	d1, d2, d1
    6fc4:	fadd	d3, d3, d1
    6fc8:	cmp	x0, x21
    6fcc:	b.ne	6fa8 <PyNumber_FloorDivide@plt+0x3b48>  // b.any
    6fd0:	fmov	d1, #1.000000000000000000e+00
    6fd4:	fsub	d0, d0, d1
    6fd8:	fadd	d0, d0, d3
    6fdc:	fsqrt	d8, d0
    6fe0:	fcmp	d0, #0.0
    6fe4:	b.mi	6ffc <PyNumber_FloorDivide@plt+0x3b9c>  // b.first
    6fe8:	fmul	d10, d10, d8
    6fec:	ldp	x25, x26, [sp, #64]
    6ff0:	ldp	x27, x28, [sp, #80]
    6ff4:	ldp	d8, d9, [sp, #96]
    6ff8:	b	7030 <PyNumber_FloorDivide@plt+0x3bd0>
    6ffc:	bl	3110 <sqrt@plt>
    7000:	b	6fe8 <PyNumber_FloorDivide@plt+0x3b88>
    7004:	movi	d10, #0x0
    7008:	b	7030 <PyNumber_FloorDivide@plt+0x3bd0>
    700c:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    7010:	ldr	d10, [x0, #1152]
    7014:	ldp	x25, x26, [sp, #64]
    7018:	ldp	x27, x28, [sp, #80]
    701c:	ldp	d8, d9, [sp, #96]
    7020:	b	7030 <PyNumber_FloorDivide@plt+0x3bd0>
    7024:	ldp	x25, x26, [sp, #64]
    7028:	ldp	x27, x28, [sp, #80]
    702c:	ldp	d8, d9, [sp, #96]
    7030:	add	x0, sp, #0xa0
    7034:	cmp	x23, x0
    7038:	b.eq	7044 <PyNumber_FloorDivide@plt+0x3be4>  // b.none
    703c:	mov	x0, x23
    7040:	bl	31b0 <PyObject_Free@plt>
    7044:	ldr	w0, [sp, #136]
    7048:	cbz	w0, 705c <PyNumber_FloorDivide@plt+0x3bfc>
    704c:	ldr	x0, [x19]
    7050:	sub	x0, x0, #0x1
    7054:	str	x0, [x19]
    7058:	cbz	x0, 709c <PyNumber_FloorDivide@plt+0x3c3c>
    705c:	ldr	w0, [sp, #140]
    7060:	cbz	w0, 7074 <PyNumber_FloorDivide@plt+0x3c14>
    7064:	ldr	x0, [x20]
    7068:	sub	x0, x0, #0x1
    706c:	str	x0, [x20]
    7070:	cbz	x0, 70a8 <PyNumber_FloorDivide@plt+0x3c48>
    7074:	fmov	d0, d10
    7078:	bl	31c0 <PyFloat_FromDouble@plt>
    707c:	mov	x19, x0
    7080:	ldp	x21, x22, [sp, #32]
    7084:	ldp	x23, x24, [sp, #48]
    7088:	ldp	d10, d11, [sp, #112]
    708c:	mov	x0, x19
    7090:	ldp	x19, x20, [sp, #16]
    7094:	ldp	x29, x30, [sp], #288
    7098:	ret
    709c:	mov	x0, x19
    70a0:	bl	3080 <_Py_Dealloc@plt>
    70a4:	b	705c <PyNumber_FloorDivide@plt+0x3bfc>
    70a8:	mov	x0, x20
    70ac:	bl	3080 <_Py_Dealloc@plt>
    70b0:	b	7074 <PyNumber_FloorDivide@plt+0x3c14>
    70b4:	mov	x0, x19
    70b8:	bl	3080 <_Py_Dealloc@plt>
    70bc:	b	6e80 <PyNumber_FloorDivide@plt+0x3a20>
    70c0:	mov	x0, x20
    70c4:	bl	3080 <_Py_Dealloc@plt>
    70c8:	ldp	x21, x22, [sp, #32]
    70cc:	ldp	x23, x24, [sp, #48]
    70d0:	ldp	x25, x26, [sp, #64]
    70d4:	ldp	x27, x28, [sp, #80]
    70d8:	ldp	d8, d9, [sp, #96]
    70dc:	ldp	d10, d11, [sp, #112]
    70e0:	b	708c <PyNumber_FloorDivide@plt+0x3c2c>
    70e4:	mov	x19, x20
    70e8:	b	708c <PyNumber_FloorDivide@plt+0x3c2c>
    70ec:	mov	x19, #0x0                   	// #0
    70f0:	b	708c <PyNumber_FloorDivide@plt+0x3c2c>
    70f4:	ldp	x25, x26, [sp, #64]
    70f8:	ldp	x27, x28, [sp, #80]
    70fc:	ldp	d8, d9, [sp, #96]
    7100:	b	7030 <PyNumber_FloorDivide@plt+0x3bd0>
    7104:	ldp	x21, x22, [sp, #32]
    7108:	ldp	x23, x24, [sp, #48]
    710c:	ldp	x25, x26, [sp, #64]
    7110:	ldp	x27, x28, [sp, #80]
    7114:	ldp	d8, d9, [sp, #96]
    7118:	ldp	d10, d11, [sp, #112]
    711c:	b	708c <PyNumber_FloorDivide@plt+0x3c2c>
    7120:	fcmp	d1, d0
    7124:	b.vs	7210 <PyNumber_FloorDivide@plt+0x3db0>
    7128:	fabs	d3, d0
    712c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    7130:	fmov	d2, x0
    7134:	fcmp	d3, d2
    7138:	b.le	71a0 <PyNumber_FloorDivide@plt+0x3d40>
    713c:	fabs	d3, d1
    7140:	fcmp	d3, d2
    7144:	b.le	7188 <PyNumber_FloorDivide@plt+0x3d28>
    7148:	fmov	d2, #1.000000000000000000e+00
    714c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    7150:	fmov	d3, x0
    7154:	bif	v1.8b, v2.8b, v3.8b
    7158:	fcmp	d1, d2
    715c:	b.ne	7170 <PyNumber_FloorDivide@plt+0x3d10>  // b.any
    7160:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    7164:	ldr	d1, [x0, #1240]
    7168:	bif	v0.8b, v1.8b, v3.8b
    716c:	ret
    7170:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    7174:	ldr	d1, [x0, #1248]
    7178:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    717c:	fmov	d2, x0
    7180:	bif	v0.8b, v1.8b, v2.8b
    7184:	ret
    7188:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    718c:	ldr	d1, [x0, #1256]
    7190:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    7194:	fmov	d2, x0
    7198:	bif	v0.8b, v1.8b, v2.8b
    719c:	ret
    71a0:	fabs	d3, d1
    71a4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    71a8:	fmov	d2, x0
    71ac:	fcmp	d3, d2
    71b0:	cset	w0, gt
    71b4:	fcmp	d0, #0.0
    71b8:	csinc	w0, w0, wzr, ne  // ne = any
    71bc:	cbz	w0, 71fc <PyNumber_FloorDivide@plt+0x3d9c>
    71c0:	fmov	d2, #1.000000000000000000e+00
    71c4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    71c8:	fmov	d3, x0
    71cc:	bif	v1.8b, v2.8b, v3.8b
    71d0:	fcmp	d1, d2
    71d4:	b.ne	71e4 <PyNumber_FloorDivide@plt+0x3d84>  // b.any
    71d8:	movi	d1, #0x0
    71dc:	bif	v0.8b, v1.8b, v3.8b
    71e0:	ret
    71e4:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    71e8:	ldr	d1, [x0, #1168]
    71ec:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    71f0:	fmov	d2, x0
    71f4:	bif	v0.8b, v1.8b, v2.8b
    71f8:	ret
    71fc:	stp	x29, x30, [sp, #-16]!
    7200:	mov	x29, sp
    7204:	bl	2fd0 <atan2@plt>
    7208:	ldp	x29, x30, [sp], #16
    720c:	ret
    7210:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    7214:	ldr	d0, [x0, #1152]
    7218:	ret
    721c:	stp	x29, x30, [sp, #-240]!
    7220:	mov	x29, sp
    7224:	stp	x21, x22, [sp, #32]
    7228:	stp	x23, x24, [sp, #48]
    722c:	stp	d8, d9, [sp, #80]
    7230:	mov	x24, x1
    7234:	mov	x22, x2
    7238:	cmp	x2, #0x10
    723c:	b.gt	727c <PyNumber_FloorDivide@plt+0x3e1c>
    7240:	cmp	x2, #0x0
    7244:	b.le	73dc <PyNumber_FloorDivide@plt+0x3f7c>
    7248:	stp	x19, x20, [sp, #16]
    724c:	stp	x25, x26, [sp, #64]
    7250:	str	d10, [sp, #96]
    7254:	add	x23, sp, #0x70
    7258:	mov	w20, #0x0                   	// #0
    725c:	movi	d9, #0x0
    7260:	mov	x19, #0x0                   	// #0
    7264:	adrp	x25, 1b000 <_Py_log1p@@Base+0x130ec>
    7268:	ldr	x25, [x25, #3824]
    726c:	adrp	x26, 1b000 <_Py_log1p@@Base+0x130ec>
    7270:	ldr	x26, [x26, #3984]
    7274:	fmov	d10, #-1.000000000000000000e+00
    7278:	b	72d0 <PyNumber_FloorDivide@plt+0x3e70>
    727c:	lsl	x0, x2, #3
    7280:	bl	3140 <PyObject_Malloc@plt>
    7284:	mov	x23, x0
    7288:	cbz	x0, 729c <PyNumber_FloorDivide@plt+0x3e3c>
    728c:	stp	x19, x20, [sp, #16]
    7290:	stp	x25, x26, [sp, #64]
    7294:	str	d10, [sp, #96]
    7298:	b	7258 <PyNumber_FloorDivide@plt+0x3df8>
    729c:	bl	30a0 <PyErr_NoMemory@plt>
    72a0:	b	7428 <PyNumber_FloorDivide@plt+0x3fc8>
    72a4:	ldr	d8, [x0, #16]
    72a8:	fabs	d0, d8
    72ac:	str	d0, [x23, x21, lsl #3]
    72b0:	fcmp	d0, d0
    72b4:	cset	w0, vs
    72b8:	orr	w20, w20, w0
    72bc:	fcmp	d0, d9
    72c0:	fcsel	d9, d9, d0, le
    72c4:	add	x19, x19, #0x1
    72c8:	cmp	x22, x19
    72cc:	b.le	734c <PyNumber_FloorDivide@plt+0x3eec>
    72d0:	mov	x21, x19
    72d4:	ldr	x0, [x24, x19, lsl #3]
    72d8:	ldr	x3, [x0, #8]
    72dc:	cmp	x3, x25
    72e0:	b.eq	72a4 <PyNumber_FloorDivide@plt+0x3e44>  // b.none
    72e4:	cmp	x3, x26
    72e8:	b.eq	7330 <PyNumber_FloorDivide@plt+0x3ed0>  // b.none
    72ec:	bl	32e0 <PyFloat_AsDouble@plt>
    72f0:	fmov	d8, d0
    72f4:	fcmp	d0, d10
    72f8:	b.ne	72a8 <PyNumber_FloorDivide@plt+0x3e48>  // b.any
    72fc:	bl	32b0 <PyErr_Occurred@plt>
    7300:	cbz	x0, 72a8 <PyNumber_FloorDivide@plt+0x3e48>
    7304:	mov	x0, #0x0                   	// #0
    7308:	add	x1, sp, #0x70
    730c:	cmp	x23, x1
    7310:	b.eq	744c <PyNumber_FloorDivide@plt+0x3fec>  // b.none
    7314:	mov	x0, x23
    7318:	bl	31b0 <PyObject_Free@plt>
    731c:	mov	x0, #0x0                   	// #0
    7320:	ldp	x19, x20, [sp, #16]
    7324:	ldp	x25, x26, [sp, #64]
    7328:	ldr	d10, [sp, #96]
    732c:	b	7428 <PyNumber_FloorDivide@plt+0x3fc8>
    7330:	bl	3330 <PyLong_AsDouble@plt>
    7334:	fmov	d8, d0
    7338:	fcmp	d0, d10
    733c:	b.ne	72a8 <PyNumber_FloorDivide@plt+0x3e48>  // b.any
    7340:	bl	32b0 <PyErr_Occurred@plt>
    7344:	cbz	x0, 72a8 <PyNumber_FloorDivide@plt+0x3e48>
    7348:	b	7304 <PyNumber_FloorDivide@plt+0x3ea4>
    734c:	fabs	d1, d9
    7350:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    7354:	fmov	d0, x0
    7358:	fcmp	d1, d0
    735c:	b.gt	7400 <PyNumber_FloorDivide@plt+0x3fa0>
    7360:	cbnz	w20, 73e8 <PyNumber_FloorDivide@plt+0x3f88>
    7364:	fcmp	d9, #0.0
    7368:	ccmp	x22, #0x1, #0x4, ne  // ne = any
    736c:	b.le	743c <PyNumber_FloorDivide@plt+0x3fdc>
    7370:	movi	d3, #0x0
    7374:	fmov	d2, #1.000000000000000000e+00
    7378:	mov	x0, #0x0                   	// #0
    737c:	ldr	d0, [x23, x0, lsl #3]
    7380:	fdiv	d0, d0, d9
    7384:	fmul	d0, d0, d0
    7388:	fmov	d1, d2
    738c:	fadd	d2, d2, d0
    7390:	fsub	d1, d1, d2
    7394:	fadd	d0, d1, d0
    7398:	fadd	d3, d3, d0
    739c:	add	x0, x0, #0x1
    73a0:	cmp	x22, x0
    73a4:	b.gt	737c <PyNumber_FloorDivide@plt+0x3f1c>
    73a8:	fmov	d0, #1.000000000000000000e+00
    73ac:	fsub	d0, d2, d0
    73b0:	fadd	d0, d0, d3
    73b4:	fsqrt	d8, d0
    73b8:	fcmp	d0, #0.0
    73bc:	b.mi	73d4 <PyNumber_FloorDivide@plt+0x3f74>  // b.first
    73c0:	fmul	d9, d9, d8
    73c4:	ldp	x19, x20, [sp, #16]
    73c8:	ldp	x25, x26, [sp, #64]
    73cc:	ldr	d10, [sp, #96]
    73d0:	b	740c <PyNumber_FloorDivide@plt+0x3fac>
    73d4:	bl	3110 <sqrt@plt>
    73d8:	b	73c0 <PyNumber_FloorDivide@plt+0x3f60>
    73dc:	add	x23, sp, #0x70
    73e0:	movi	d9, #0x0
    73e4:	b	740c <PyNumber_FloorDivide@plt+0x3fac>
    73e8:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    73ec:	ldr	d9, [x0, #1152]
    73f0:	ldp	x19, x20, [sp, #16]
    73f4:	ldp	x25, x26, [sp, #64]
    73f8:	ldr	d10, [sp, #96]
    73fc:	b	740c <PyNumber_FloorDivide@plt+0x3fac>
    7400:	ldp	x19, x20, [sp, #16]
    7404:	ldp	x25, x26, [sp, #64]
    7408:	ldr	d10, [sp, #96]
    740c:	add	x0, sp, #0x70
    7410:	cmp	x23, x0
    7414:	b.eq	7420 <PyNumber_FloorDivide@plt+0x3fc0>  // b.none
    7418:	mov	x0, x23
    741c:	bl	31b0 <PyObject_Free@plt>
    7420:	fmov	d0, d9
    7424:	bl	31c0 <PyFloat_FromDouble@plt>
    7428:	ldp	x21, x22, [sp, #32]
    742c:	ldp	x23, x24, [sp, #48]
    7430:	ldp	d8, d9, [sp, #80]
    7434:	ldp	x29, x30, [sp], #240
    7438:	ret
    743c:	ldp	x19, x20, [sp, #16]
    7440:	ldp	x25, x26, [sp, #64]
    7444:	ldr	d10, [sp, #96]
    7448:	b	740c <PyNumber_FloorDivide@plt+0x3fac>
    744c:	ldp	x19, x20, [sp, #16]
    7450:	ldp	x25, x26, [sp, #64]
    7454:	ldr	d10, [sp, #96]
    7458:	b	7428 <PyNumber_FloorDivide@plt+0x3fc8>
    745c:	stp	x29, x30, [sp, #-48]!
    7460:	mov	x29, sp
    7464:	stp	x19, x20, [sp, #16]
    7468:	str	x21, [sp, #32]
    746c:	mov	x21, x1
    7470:	ldr	x0, [x1, #8]
    7474:	ldr	x20, [x0, #264]
    7478:	cbz	x20, 74fc <PyNumber_FloorDivide@plt+0x409c>
    747c:	adrp	x1, 1c000 <_Py_log1p@@Base+0x140ec>
    7480:	add	x1, x1, #0x260
    7484:	add	x1, x1, #0x98
    7488:	mov	x0, x21
    748c:	bl	3160 <_PyObject_LookupSpecial@plt>
    7490:	mov	x19, x0
    7494:	cbz	x0, 7508 <PyNumber_FloorDivide@plt+0x40a8>
    7498:	ldr	x0, [x0, #8]
    749c:	ldr	x1, [x0, #56]
    74a0:	ldr	x0, [x0, #168]
    74a4:	tbz	w0, #11, 7540 <PyNumber_FloorDivide@plt+0x40e0>
    74a8:	ldr	x4, [x19, x1]
    74ac:	cbz	x4, 7540 <PyNumber_FloorDivide@plt+0x40e0>
    74b0:	mov	x3, #0x0                   	// #0
    74b4:	mov	x2, #0x0                   	// #0
    74b8:	mov	x1, #0x0                   	// #0
    74bc:	mov	x0, x19
    74c0:	blr	x4
    74c4:	mov	x2, #0x0                   	// #0
    74c8:	mov	x1, x0
    74cc:	mov	x0, x19
    74d0:	bl	32d0 <_Py_CheckFunctionResult@plt>
    74d4:	mov	x20, x0
    74d8:	ldr	x0, [x19]
    74dc:	sub	x0, x0, #0x1
    74e0:	str	x0, [x19]
    74e4:	cbz	x0, 755c <PyNumber_FloorDivide@plt+0x40fc>
    74e8:	mov	x0, x20
    74ec:	ldp	x19, x20, [sp, #16]
    74f0:	ldr	x21, [sp, #32]
    74f4:	ldp	x29, x30, [sp], #48
    74f8:	ret
    74fc:	bl	31d0 <PyType_Ready@plt>
    7500:	tbz	w0, #31, 747c <PyNumber_FloorDivide@plt+0x401c>
    7504:	b	74e8 <PyNumber_FloorDivide@plt+0x4088>
    7508:	bl	32b0 <PyErr_Occurred@plt>
    750c:	mov	x20, x0
    7510:	cbz	x0, 751c <PyNumber_FloorDivide@plt+0x40bc>
    7514:	mov	x20, x19
    7518:	b	74e8 <PyNumber_FloorDivide@plt+0x4088>
    751c:	ldr	x0, [x21, #8]
    7520:	ldr	x2, [x0, #24]
    7524:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    7528:	add	x1, x1, #0x1c8
    752c:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    7530:	ldr	x0, [x0, #3888]
    7534:	ldr	x0, [x0]
    7538:	bl	33c0 <PyErr_Format@plt>
    753c:	b	74e8 <PyNumber_FloorDivide@plt+0x4088>
    7540:	mov	x3, #0x0                   	// #0
    7544:	mov	x2, #0x0                   	// #0
    7548:	mov	x1, #0x0                   	// #0
    754c:	mov	x0, x19
    7550:	bl	33d0 <_PyObject_MakeTpCall@plt>
    7554:	mov	x20, x0
    7558:	b	74d8 <PyNumber_FloorDivide@plt+0x4078>
    755c:	mov	x0, x19
    7560:	bl	3080 <_Py_Dealloc@plt>
    7564:	b	74e8 <PyNumber_FloorDivide@plt+0x4088>
    7568:	stp	x29, x30, [sp, #-96]!
    756c:	mov	x29, sp
    7570:	stp	x19, x20, [sp, #16]
    7574:	mov	x19, x1
    7578:	ldr	x0, [x1, #8]
    757c:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    7580:	ldr	x1, [x1, #3824]
    7584:	cmp	x0, x1
    7588:	b.eq	759c <PyNumber_FloorDivide@plt+0x413c>  // b.none
    758c:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    7590:	ldr	x1, [x1, #3824]
    7594:	bl	33b0 <PyType_IsSubtype@plt>
    7598:	cbz	w0, 769c <PyNumber_FloorDivide@plt+0x423c>
    759c:	ldr	d0, [x19, #16]
    75a0:	fabs	d2, d0
    75a4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    75a8:	fmov	d1, x0
    75ac:	fcmp	d2, d1
    75b0:	b.hi	7664 <PyNumber_FloorDivide@plt+0x4204>  // b.pmore
    75b4:	frintm	d1, d0
    75b8:	fcmp	d1, d0
    75bc:	b.ne	7664 <PyNumber_FloorDivide@plt+0x4204>  // b.any
    75c0:	bl	3000 <PyLong_FromDouble@plt>
    75c4:	mov	x19, x0
    75c8:	cbz	x0, 7680 <PyNumber_FloorDivide@plt+0x4220>
    75cc:	add	x1, sp, #0x5c
    75d0:	bl	3290 <PyLong_AsLongAndOverflow@plt>
    75d4:	mov	x20, x0
    75d8:	ldr	x1, [x19]
    75dc:	sub	x1, x1, #0x1
    75e0:	str	x1, [x19]
    75e4:	cbz	x1, 7690 <PyNumber_FloorDivide@plt+0x4230>
    75e8:	cmn	x20, #0x1
    75ec:	b.eq	76d4 <PyNumber_FloorDivide@plt+0x4274>  // b.none
    75f0:	ldr	w1, [sp, #92]
    75f4:	cmp	w1, #0x1
    75f8:	b.eq	770c <PyNumber_FloorDivide@plt+0x42ac>  // b.none
    75fc:	cmp	x20, #0x0
    7600:	ccmn	w1, #0x1, #0x4, ge  // ge = tcont
    7604:	b.eq	76ec <PyNumber_FloorDivide@plt+0x428c>  // b.none
    7608:	cmp	x20, #0x14
    760c:	b.le	7730 <PyNumber_FloorDivide@plt+0x42d0>
    7610:	stp	x21, x22, [sp, #32]
    7614:	stp	x25, x26, [sp, #64]
    7618:	mov	x26, x20
    761c:	mov	x0, #0x1                   	// #1
    7620:	bl	31e0 <PyLong_FromLong@plt>
    7624:	mov	x22, x0
    7628:	cbz	x0, 78ac <PyNumber_FloorDivide@plt+0x444c>
    762c:	stp	x23, x24, [sp, #48]
    7630:	ldr	x1, [x0]
    7634:	add	x0, x1, #0x1
    7638:	str	x0, [x22]
    763c:	mov	x0, #0x0                   	// #0
    7640:	mov	x25, x0
    7644:	add	x0, x0, #0x1
    7648:	lsr	x20, x20, #1
    764c:	cbnz	x20, 7640 <PyNumber_FloorDivide@plt+0x41e0>
    7650:	subs	x25, x25, #0x1
    7654:	b.mi	7904 <PyNumber_FloorDivide@plt+0x44a4>  // b.first
    7658:	mov	x23, x22
    765c:	mov	x0, #0x3                   	// #3
    7660:	b	7780 <PyNumber_FloorDivide@plt+0x4320>
    7664:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    7668:	add	x1, x1, #0x1f8
    766c:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    7670:	ldr	x0, [x0, #3872]
    7674:	ldr	x0, [x0]
    7678:	bl	3130 <PyErr_SetString@plt>
    767c:	mov	x19, #0x0                   	// #0
    7680:	mov	x0, x19
    7684:	ldp	x19, x20, [sp, #16]
    7688:	ldp	x29, x30, [sp], #96
    768c:	ret
    7690:	mov	x0, x19
    7694:	bl	3080 <_Py_Dealloc@plt>
    7698:	b	75e8 <PyNumber_FloorDivide@plt+0x4188>
    769c:	mov	x0, x19
    76a0:	bl	33e0 <PyNumber_Index@plt>
    76a4:	mov	x19, x0
    76a8:	cbz	x0, 7680 <PyNumber_FloorDivide@plt+0x4220>
    76ac:	add	x1, sp, #0x5c
    76b0:	bl	3290 <PyLong_AsLongAndOverflow@plt>
    76b4:	mov	x20, x0
    76b8:	ldr	x0, [x19]
    76bc:	sub	x0, x0, #0x1
    76c0:	str	x0, [x19]
    76c4:	cbnz	x0, 75e8 <PyNumber_FloorDivide@plt+0x4188>
    76c8:	mov	x0, x19
    76cc:	bl	3080 <_Py_Dealloc@plt>
    76d0:	b	75e8 <PyNumber_FloorDivide@plt+0x4188>
    76d4:	bl	32b0 <PyErr_Occurred@plt>
    76d8:	mov	x19, #0x0                   	// #0
    76dc:	cbnz	x0, 7680 <PyNumber_FloorDivide@plt+0x4220>
    76e0:	ldr	w0, [sp, #92]
    76e4:	cmp	w0, #0x1
    76e8:	b.eq	770c <PyNumber_FloorDivide@plt+0x42ac>  // b.none
    76ec:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    76f0:	add	x1, x1, #0x258
    76f4:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    76f8:	ldr	x0, [x0, #3872]
    76fc:	ldr	x0, [x0]
    7700:	bl	3130 <PyErr_SetString@plt>
    7704:	mov	x19, #0x0                   	// #0
    7708:	b	7680 <PyNumber_FloorDivide@plt+0x4220>
    770c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    7710:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    7714:	add	x1, x1, #0x228
    7718:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    771c:	ldr	x0, [x0, #3936]
    7720:	ldr	x0, [x0]
    7724:	bl	33c0 <PyErr_Format@plt>
    7728:	mov	x19, #0x0                   	// #0
    772c:	b	7680 <PyNumber_FloorDivide@plt+0x4220>
    7730:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    7734:	add	x0, x0, #0x500
    7738:	add	x0, x0, #0x188
    773c:	ldr	x0, [x0, x20, lsl #3]
    7740:	bl	3350 <PyLong_FromUnsignedLong@plt>
    7744:	mov	x19, x0
    7748:	b	7680 <PyNumber_FloorDivide@plt+0x4220>
    774c:	mov	x0, x21
    7750:	bl	3080 <_Py_Dealloc@plt>
    7754:	b	77d8 <PyNumber_FloorDivide@plt+0x4378>
    7758:	mov	x0, x22
    775c:	bl	3080 <_Py_Dealloc@plt>
    7760:	b	77ec <PyNumber_FloorDivide@plt+0x438c>
    7764:	mov	x0, x23
    7768:	bl	3080 <_Py_Dealloc@plt>
    776c:	mov	x23, x21
    7770:	mov	x22, x24
    7774:	mov	x0, x19
    7778:	subs	x25, x25, #0x1
    777c:	b.mi	7820 <PyNumber_FloorDivide@plt+0x43c0>  // b.first
    7780:	lsr	x19, x26, x25
    7784:	cmp	x19, #0x2
    7788:	b.ls	7778 <PyNumber_FloorDivide@plt+0x4318>  // b.plast
    778c:	add	x19, x19, #0x1
    7790:	orr	x19, x19, #0x1
    7794:	sub	x1, x19, #0x2
    7798:	mov	x2, x20
    779c:	add	x2, x2, #0x1
    77a0:	lsr	x1, x1, #1
    77a4:	cbnz	x1, 779c <PyNumber_FloorDivide@plt+0x433c>
    77a8:	mov	x1, x19
    77ac:	bl	6b64 <PyNumber_FloorDivide@plt+0x3704>
    77b0:	mov	x21, x0
    77b4:	cbz	x0, 7888 <PyNumber_FloorDivide@plt+0x4428>
    77b8:	mov	x1, x0
    77bc:	mov	x0, x22
    77c0:	bl	30d0 <PyNumber_Multiply@plt>
    77c4:	mov	x24, x0
    77c8:	ldr	x0, [x21]
    77cc:	sub	x0, x0, #0x1
    77d0:	str	x0, [x21]
    77d4:	cbz	x0, 774c <PyNumber_FloorDivide@plt+0x42ec>
    77d8:	cbz	x24, 7888 <PyNumber_FloorDivide@plt+0x4428>
    77dc:	ldr	x0, [x22]
    77e0:	sub	x0, x0, #0x1
    77e4:	str	x0, [x22]
    77e8:	cbz	x0, 7758 <PyNumber_FloorDivide@plt+0x42f8>
    77ec:	mov	x1, x24
    77f0:	mov	x0, x23
    77f4:	bl	30d0 <PyNumber_Multiply@plt>
    77f8:	mov	x21, x0
    77fc:	cbz	x0, 7884 <PyNumber_FloorDivide@plt+0x4424>
    7800:	ldr	x0, [x23]
    7804:	sub	x0, x0, #0x1
    7808:	str	x0, [x23]
    780c:	cbz	x0, 7764 <PyNumber_FloorDivide@plt+0x4304>
    7810:	mov	x23, x21
    7814:	mov	x22, x24
    7818:	mov	x0, x19
    781c:	b	7778 <PyNumber_FloorDivide@plt+0x4318>
    7820:	ldr	x0, [x22]
    7824:	sub	x0, x0, #0x1
    7828:	str	x0, [x22]
    782c:	cbz	x0, 7910 <PyNumber_FloorDivide@plt+0x44b0>
    7830:	cbz	x23, 78f0 <PyNumber_FloorDivide@plt+0x4490>
    7834:	mov	x0, x26
    7838:	sub	x1, x0, #0x1
    783c:	ands	x0, x0, x1
    7840:	b.ne	7838 <PyNumber_FloorDivide@plt+0x43d8>  // b.any
    7844:	fmov	d0, x26
    7848:	cnt	v0.8b, v0.8b
    784c:	addv	b0, v0.8b
    7850:	umov	w1, v0.b[0]
    7854:	sub	x1, x26, x1
    7858:	mov	x0, x23
    785c:	bl	3450 <_PyLong_Lshift@plt>
    7860:	mov	x19, x0
    7864:	ldr	x0, [x23]
    7868:	sub	x0, x0, #0x1
    786c:	str	x0, [x23]
    7870:	cbz	x0, 78d8 <PyNumber_FloorDivide@plt+0x4478>
    7874:	ldp	x21, x22, [sp, #32]
    7878:	ldp	x23, x24, [sp, #48]
    787c:	ldp	x25, x26, [sp, #64]
    7880:	b	7680 <PyNumber_FloorDivide@plt+0x4220>
    7884:	mov	x22, x24
    7888:	ldr	x0, [x23]
    788c:	sub	x0, x0, #0x1
    7890:	str	x0, [x23]
    7894:	cbz	x0, 78bc <PyNumber_FloorDivide@plt+0x445c>
    7898:	ldr	x0, [x22]
    789c:	sub	x0, x0, #0x1
    78a0:	str	x0, [x22]
    78a4:	cbz	x0, 78c8 <PyNumber_FloorDivide@plt+0x4468>
    78a8:	ldp	x23, x24, [sp, #48]
    78ac:	mov	x19, #0x0                   	// #0
    78b0:	ldp	x21, x22, [sp, #32]
    78b4:	ldp	x25, x26, [sp, #64]
    78b8:	b	7680 <PyNumber_FloorDivide@plt+0x4220>
    78bc:	mov	x0, x23
    78c0:	bl	3080 <_Py_Dealloc@plt>
    78c4:	b	7898 <PyNumber_FloorDivide@plt+0x4438>
    78c8:	mov	x0, x22
    78cc:	bl	3080 <_Py_Dealloc@plt>
    78d0:	ldp	x23, x24, [sp, #48]
    78d4:	b	78ac <PyNumber_FloorDivide@plt+0x444c>
    78d8:	mov	x0, x23
    78dc:	bl	3080 <_Py_Dealloc@plt>
    78e0:	ldp	x21, x22, [sp, #32]
    78e4:	ldp	x23, x24, [sp, #48]
    78e8:	ldp	x25, x26, [sp, #64]
    78ec:	b	7680 <PyNumber_FloorDivide@plt+0x4220>
    78f0:	mov	x19, x23
    78f4:	ldp	x21, x22, [sp, #32]
    78f8:	ldp	x23, x24, [sp, #48]
    78fc:	ldp	x25, x26, [sp, #64]
    7900:	b	7680 <PyNumber_FloorDivide@plt+0x4220>
    7904:	str	x1, [x22]
    7908:	mov	x23, x22
    790c:	cbnz	x1, 7834 <PyNumber_FloorDivide@plt+0x43d4>
    7910:	mov	x0, x22
    7914:	bl	3080 <_Py_Dealloc@plt>
    7918:	b	7830 <PyNumber_FloorDivide@plt+0x43d0>
    791c:	stp	x29, x30, [sp, #-96]!
    7920:	mov	x29, sp
    7924:	stp	x19, x20, [sp, #16]
    7928:	stp	x21, x22, [sp, #32]
    792c:	mov	x21, x0
    7930:	mov	x20, x1
    7934:	mov	x19, x2
    7938:	sub	x1, x2, #0x1
    793c:	cmp	x1, #0x1
    7940:	b.hi	7a4c <PyNumber_FloorDivide@plt+0x45ec>  // b.pmore
    7944:	ldr	x0, [x20]
    7948:	cmp	x19, #0x1
    794c:	b.le	7a70 <PyNumber_FloorDivide@plt+0x4610>
    7950:	ldr	x22, [x20, #8]
    7954:	adrp	x2, 1b000 <_Py_log1p@@Base+0x130ec>
    7958:	ldr	x2, [x2, #3960]
    795c:	cmp	x22, x2
    7960:	b.eq	7a70 <PyNumber_FloorDivide@plt+0x4610>  // b.none
    7964:	bl	33e0 <PyNumber_Index@plt>
    7968:	mov	x19, x0
    796c:	cbz	x0, 7c18 <PyNumber_FloorDivide@plt+0x47b8>
    7970:	ldr	x1, [x0, #8]
    7974:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    7978:	ldr	x0, [x0, #3984]
    797c:	cmp	x1, x0
    7980:	b.eq	7a90 <PyNumber_FloorDivide@plt+0x4630>  // b.none
    7984:	mov	x0, x19
    7988:	bl	3170 <_PyLong_Copy@plt>
    798c:	mov	x20, x0
    7990:	ldr	x0, [x19]
    7994:	sub	x0, x0, #0x1
    7998:	str	x0, [x19]
    799c:	cbz	x0, 7a84 <PyNumber_FloorDivide@plt+0x4624>
    79a0:	cbz	x20, 7d2c <PyNumber_FloorDivide@plt+0x48cc>
    79a4:	mov	x0, x22
    79a8:	bl	33e0 <PyNumber_Index@plt>
    79ac:	mov	x19, x0
    79b0:	cbz	x0, 7a98 <PyNumber_FloorDivide@plt+0x4638>
    79b4:	ldr	x1, [x0, #8]
    79b8:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    79bc:	ldr	x0, [x0, #3984]
    79c0:	cmp	x1, x0
    79c4:	b.eq	7ae0 <PyNumber_FloorDivide@plt+0x4680>  // b.none
    79c8:	mov	x0, x19
    79cc:	bl	3170 <_PyLong_Copy@plt>
    79d0:	mov	x21, x0
    79d4:	ldr	x0, [x19]
    79d8:	sub	x0, x0, #0x1
    79dc:	str	x0, [x19]
    79e0:	cbz	x0, 7ab4 <PyNumber_FloorDivide@plt+0x4654>
    79e4:	cbz	x21, 7ac0 <PyNumber_FloorDivide@plt+0x4660>
    79e8:	ldr	x0, [x20, #16]
    79ec:	tbnz	x0, #63, 7ae8 <PyNumber_FloorDivide@plt+0x4688>
    79f0:	ldr	x0, [x21, #16]
    79f4:	tbnz	x0, #63, 7b04 <PyNumber_FloorDivide@plt+0x46a4>
    79f8:	mov	w2, #0x0                   	// #0
    79fc:	mov	x1, x21
    7a00:	mov	x0, x20
    7a04:	bl	31f0 <PyObject_RichCompareBool@plt>
    7a08:	cbz	w0, 7b20 <PyNumber_FloorDivide@plt+0x46c0>
    7a0c:	cmp	w0, #0x0
    7a10:	b.le	7bf4 <PyNumber_FloorDivide@plt+0x4794>
    7a14:	mov	x0, #0x0                   	// #0
    7a18:	bl	31e0 <PyLong_FromLong@plt>
    7a1c:	mov	x19, x0
    7a20:	ldr	x0, [x20]
    7a24:	sub	x0, x0, #0x1
    7a28:	str	x0, [x20]
    7a2c:	cbz	x0, 7cd8 <PyNumber_FloorDivide@plt+0x4878>
    7a30:	ldr	x0, [x21]
    7a34:	sub	x0, x0, #0x1
    7a38:	str	x0, [x21]
    7a3c:	cbnz	x0, 7c18 <PyNumber_FloorDivide@plt+0x47b8>
    7a40:	mov	x0, x21
    7a44:	bl	3080 <_Py_Dealloc@plt>
    7a48:	b	7c18 <PyNumber_FloorDivide@plt+0x47b8>
    7a4c:	mov	x3, #0x2                   	// #2
    7a50:	mov	x2, #0x1                   	// #1
    7a54:	mov	x1, x19
    7a58:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    7a5c:	add	x0, x0, #0x288
    7a60:	bl	3280 <_PyArg_CheckPositional@plt>
    7a64:	cbnz	w0, 7944 <PyNumber_FloorDivide@plt+0x44e4>
    7a68:	mov	x19, #0x0                   	// #0
    7a6c:	b	7c18 <PyNumber_FloorDivide@plt+0x47b8>
    7a70:	mov	x1, x0
    7a74:	mov	x0, x21
    7a78:	bl	7568 <PyNumber_FloorDivide@plt+0x4108>
    7a7c:	mov	x19, x0
    7a80:	b	7c18 <PyNumber_FloorDivide@plt+0x47b8>
    7a84:	mov	x0, x19
    7a88:	bl	3080 <_Py_Dealloc@plt>
    7a8c:	b	79a0 <PyNumber_FloorDivide@plt+0x4540>
    7a90:	mov	x20, x19
    7a94:	b	79a4 <PyNumber_FloorDivide@plt+0x4544>
    7a98:	ldr	x0, [x20]
    7a9c:	sub	x0, x0, #0x1
    7aa0:	str	x0, [x20]
    7aa4:	cbnz	x0, 7c18 <PyNumber_FloorDivide@plt+0x47b8>
    7aa8:	mov	x0, x20
    7aac:	bl	3080 <_Py_Dealloc@plt>
    7ab0:	b	7c18 <PyNumber_FloorDivide@plt+0x47b8>
    7ab4:	mov	x0, x19
    7ab8:	bl	3080 <_Py_Dealloc@plt>
    7abc:	b	79e4 <PyNumber_FloorDivide@plt+0x4584>
    7ac0:	ldr	x0, [x20]
    7ac4:	sub	x0, x0, #0x1
    7ac8:	str	x0, [x20]
    7acc:	mov	x19, x21
    7ad0:	cbnz	x0, 7c18 <PyNumber_FloorDivide@plt+0x47b8>
    7ad4:	mov	x0, x20
    7ad8:	bl	3080 <_Py_Dealloc@plt>
    7adc:	b	7c18 <PyNumber_FloorDivide@plt+0x47b8>
    7ae0:	mov	x21, x19
    7ae4:	b	79e8 <PyNumber_FloorDivide@plt+0x4588>
    7ae8:	adrp	x1, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    7aec:	add	x1, x1, #0xf50
    7af0:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    7af4:	ldr	x0, [x0, #3872]
    7af8:	ldr	x0, [x0]
    7afc:	bl	3130 <PyErr_SetString@plt>
    7b00:	b	7bf4 <PyNumber_FloorDivide@plt+0x4794>
    7b04:	adrp	x1, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    7b08:	add	x1, x1, #0xf78
    7b0c:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    7b10:	ldr	x0, [x0, #3872]
    7b14:	ldr	x0, [x0]
    7b18:	bl	3130 <PyErr_SetString@plt>
    7b1c:	b	7bf4 <PyNumber_FloorDivide@plt+0x4794>
    7b20:	stp	x25, x26, [sp, #64]
    7b24:	add	x1, sp, #0x5c
    7b28:	mov	x0, x21
    7b2c:	bl	2fe0 <PyLong_AsLongLongAndOverflow@plt>
    7b30:	mov	x25, x0
    7b34:	ldr	w0, [sp, #92]
    7b38:	cmp	w0, #0x0
    7b3c:	b.gt	7b80 <PyNumber_FloorDivide@plt+0x4720>
    7b40:	cmn	x25, #0x1
    7b44:	b.eq	7d0c <PyNumber_FloorDivide@plt+0x48ac>  // b.none
    7b48:	cbz	x25, 7ba4 <PyNumber_FloorDivide@plt+0x4744>
    7b4c:	ldr	x0, [x20]
    7b50:	cmp	x25, #0x1
    7b54:	b.eq	7bb8 <PyNumber_FloorDivide@plt+0x4758>  // b.none
    7b58:	add	x0, x0, #0x2
    7b5c:	str	x0, [x20]
    7b60:	b.le	7cbc <PyNumber_FloorDivide@plt+0x485c>
    7b64:	stp	x23, x24, [sp, #48]
    7b68:	mov	x23, x20
    7b6c:	mov	x22, x20
    7b70:	mov	x24, #0x1                   	// #1
    7b74:	adrp	x26, 1b000 <_Py_log1p@@Base+0x130ec>
    7b78:	ldr	x26, [x26, #4008]
    7b7c:	b	7c54 <PyNumber_FloorDivide@plt+0x47f4>
    7b80:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    7b84:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    7b88:	add	x1, x1, #0x290
    7b8c:	adrp	x0, 1b000 <_Py_log1p@@Base+0x130ec>
    7b90:	ldr	x0, [x0, #3936]
    7b94:	ldr	x0, [x0]
    7b98:	bl	33c0 <PyErr_Format@plt>
    7b9c:	ldp	x25, x26, [sp, #64]
    7ba0:	b	7bf4 <PyNumber_FloorDivide@plt+0x4794>
    7ba4:	mov	x0, #0x1                   	// #1
    7ba8:	bl	31e0 <PyLong_FromLong@plt>
    7bac:	mov	x19, x0
    7bb0:	ldp	x25, x26, [sp, #64]
    7bb4:	b	7a20 <PyNumber_FloorDivide@plt+0x45c0>
    7bb8:	add	x0, x0, #0x1
    7bbc:	str	x0, [x20]
    7bc0:	mov	x19, x20
    7bc4:	ldp	x25, x26, [sp, #64]
    7bc8:	b	7a20 <PyNumber_FloorDivide@plt+0x45c0>
    7bcc:	mov	x0, x19
    7bd0:	bl	3080 <_Py_Dealloc@plt>
    7bd4:	b	7c78 <PyNumber_FloorDivide@plt+0x4818>
    7bd8:	cbz	x23, 7c2c <PyNumber_FloorDivide@plt+0x47cc>
    7bdc:	ldr	x0, [x23]
    7be0:	sub	x0, x0, #0x1
    7be4:	str	x0, [x23]
    7be8:	cbz	x0, 7cf8 <PyNumber_FloorDivide@plt+0x4898>
    7bec:	ldp	x23, x24, [sp, #48]
    7bf0:	ldp	x25, x26, [sp, #64]
    7bf4:	ldr	x0, [x20]
    7bf8:	sub	x0, x0, #0x1
    7bfc:	str	x0, [x20]
    7c00:	cbz	x0, 7d14 <PyNumber_FloorDivide@plt+0x48b4>
    7c04:	ldr	x0, [x21]
    7c08:	sub	x0, x0, #0x1
    7c0c:	str	x0, [x21]
    7c10:	mov	x19, #0x0                   	// #0
    7c14:	cbz	x0, 7d20 <PyNumber_FloorDivide@plt+0x48c0>
    7c18:	mov	x0, x19
    7c1c:	ldp	x19, x20, [sp, #16]
    7c20:	ldp	x21, x22, [sp, #32]
    7c24:	ldp	x29, x30, [sp], #96
    7c28:	ret
    7c2c:	ldp	x23, x24, [sp, #48]
    7c30:	ldp	x25, x26, [sp, #64]
    7c34:	b	7bf4 <PyNumber_FloorDivide@plt+0x4794>
    7c38:	mov	x0, x23
    7c3c:	bl	3080 <_Py_Dealloc@plt>
    7c40:	cbz	x19, 7d34 <PyNumber_FloorDivide@plt+0x48d4>
    7c44:	add	x24, x24, #0x1
    7c48:	cmp	x25, x24
    7c4c:	b.eq	7ca0 <PyNumber_FloorDivide@plt+0x4840>  // b.none
    7c50:	mov	x23, x19
    7c54:	mov	x19, x22
    7c58:	ldr	x1, [x26]
    7c5c:	mov	x0, x22
    7c60:	bl	3420 <PyNumber_Subtract@plt>
    7c64:	mov	x22, x0
    7c68:	ldr	x1, [x19]
    7c6c:	sub	x1, x1, #0x1
    7c70:	str	x1, [x19]
    7c74:	cbz	x1, 7bcc <PyNumber_FloorDivide@plt+0x476c>
    7c78:	cbz	x22, 7bd8 <PyNumber_FloorDivide@plt+0x4778>
    7c7c:	mov	x1, x22
    7c80:	mov	x0, x23
    7c84:	bl	30d0 <PyNumber_Multiply@plt>
    7c88:	mov	x19, x0
    7c8c:	ldr	x0, [x23]
    7c90:	sub	x0, x0, #0x1
    7c94:	str	x0, [x23]
    7c98:	cbnz	x0, 7c40 <PyNumber_FloorDivide@plt+0x47e0>
    7c9c:	b	7c38 <PyNumber_FloorDivide@plt+0x47d8>
    7ca0:	ldp	x23, x24, [sp, #48]
    7ca4:	ldr	x0, [x22]
    7ca8:	sub	x0, x0, #0x1
    7cac:	str	x0, [x22]
    7cb0:	cbz	x0, 7cc8 <PyNumber_FloorDivide@plt+0x4868>
    7cb4:	ldp	x25, x26, [sp, #64]
    7cb8:	b	7a20 <PyNumber_FloorDivide@plt+0x45c0>
    7cbc:	mov	x19, x20
    7cc0:	mov	x22, x20
    7cc4:	b	7ca4 <PyNumber_FloorDivide@plt+0x4844>
    7cc8:	mov	x0, x22
    7ccc:	bl	3080 <_Py_Dealloc@plt>
    7cd0:	ldp	x25, x26, [sp, #64]
    7cd4:	b	7a20 <PyNumber_FloorDivide@plt+0x45c0>
    7cd8:	mov	x0, x20
    7cdc:	bl	3080 <_Py_Dealloc@plt>
    7ce0:	b	7a30 <PyNumber_FloorDivide@plt+0x45d0>
    7ce4:	mov	x0, x22
    7ce8:	bl	3080 <_Py_Dealloc@plt>
    7cec:	ldp	x23, x24, [sp, #48]
    7cf0:	ldp	x25, x26, [sp, #64]
    7cf4:	b	7bf4 <PyNumber_FloorDivide@plt+0x4794>
    7cf8:	mov	x0, x23
    7cfc:	bl	3080 <_Py_Dealloc@plt>
    7d00:	ldp	x23, x24, [sp, #48]
    7d04:	ldp	x25, x26, [sp, #64]
    7d08:	b	7bf4 <PyNumber_FloorDivide@plt+0x4794>
    7d0c:	ldp	x25, x26, [sp, #64]
    7d10:	b	7bf4 <PyNumber_FloorDivide@plt+0x4794>
    7d14:	mov	x0, x20
    7d18:	bl	3080 <_Py_Dealloc@plt>
    7d1c:	b	7c04 <PyNumber_FloorDivide@plt+0x47a4>
    7d20:	mov	x0, x21
    7d24:	bl	3080 <_Py_Dealloc@plt>
    7d28:	b	7c18 <PyNumber_FloorDivide@plt+0x47b8>
    7d2c:	mov	x19, x20
    7d30:	b	7c18 <PyNumber_FloorDivide@plt+0x47b8>
    7d34:	ldr	x0, [x22]
    7d38:	sub	x0, x0, #0x1
    7d3c:	str	x0, [x22]
    7d40:	cbz	x0, 7ce4 <PyNumber_FloorDivide@plt+0x4884>
    7d44:	ldp	x23, x24, [sp, #48]
    7d48:	ldp	x25, x26, [sp, #64]
    7d4c:	b	7bf4 <PyNumber_FloorDivide@plt+0x4794>
    7d50:	stp	x29, x30, [sp, #-48]!
    7d54:	mov	x29, sp
    7d58:	stp	x19, x20, [sp, #16]
    7d5c:	str	x21, [sp, #32]
    7d60:	mov	x20, x1
    7d64:	adrp	x1, 1c000 <_Py_log1p@@Base+0x140ec>
    7d68:	add	x1, x1, #0x260
    7d6c:	add	x1, x1, #0xb0
    7d70:	mov	x0, x20
    7d74:	bl	3160 <_PyObject_LookupSpecial@plt>
    7d78:	mov	x19, x0
    7d7c:	cbz	x0, 7de4 <PyNumber_FloorDivide@plt+0x4984>
    7d80:	ldr	x0, [x0, #8]
    7d84:	ldr	x1, [x0, #56]
    7d88:	ldr	x0, [x0, #168]
    7d8c:	tbz	w0, #11, 7e14 <PyNumber_FloorDivide@plt+0x49b4>
    7d90:	ldr	x4, [x19, x1]
    7d94:	cbz	x4, 7e14 <PyNumber_FloorDivide@plt+0x49b4>
    7d98:	mov	x3, #0x0                   	// #0
    7d9c:	mov	x2, #0x0                   	// #0
    7da0:	mov	x1, #0x0                   	// #0
    7da4:	mov	x0, x19
    7da8:	blr	x4
    7dac:	mov	x2, #0x0                   	// #0
    7db0:	mov	x1, x0
    7db4:	mov	x0, x19
    7db8:	bl	32d0 <_Py_CheckFunctionResult@plt>
    7dbc:	mov	x21, x0
    7dc0:	ldr	x0, [x19]
    7dc4:	sub	x0, x0, #0x1
    7dc8:	str	x0, [x19]
    7dcc:	cbz	x0, 7e30 <PyNumber_FloorDivide@plt+0x49d0>
    7dd0:	mov	x0, x21
    7dd4:	ldp	x19, x20, [sp, #16]
    7dd8:	ldr	x21, [sp, #32]
    7ddc:	ldp	x29, x30, [sp], #48
    7de0:	ret
    7de4:	bl	32b0 <PyErr_Occurred@plt>
    7de8:	mov	x21, x19
    7dec:	cbnz	x0, 7dd0 <PyNumber_FloorDivide@plt+0x4970>
    7df0:	mov	w3, #0x0                   	// #0
    7df4:	adrp	x2, 1b000 <_Py_log1p@@Base+0x130ec>
    7df8:	ldr	x2, [x2, #3832]
    7dfc:	adrp	x1, 1b000 <_Py_log1p@@Base+0x130ec>
    7e00:	ldr	x1, [x1, #4000]
    7e04:	mov	x0, x20
    7e08:	bl	432c <PyNumber_FloorDivide@plt+0xecc>
    7e0c:	mov	x21, x0
    7e10:	b	7dd0 <PyNumber_FloorDivide@plt+0x4970>
    7e14:	mov	x3, #0x0                   	// #0
    7e18:	mov	x2, #0x0                   	// #0
    7e1c:	mov	x1, #0x0                   	// #0
    7e20:	mov	x0, x19
    7e24:	bl	33d0 <_PyObject_MakeTpCall@plt>
    7e28:	mov	x21, x0
    7e2c:	b	7dc0 <PyNumber_FloorDivide@plt+0x4960>
    7e30:	mov	x0, x19
    7e34:	bl	3080 <_Py_Dealloc@plt>
    7e38:	b	7dd0 <PyNumber_FloorDivide@plt+0x4970>

0000000000007e3c <PyInit_math@@Base>:
    7e3c:	stp	x29, x30, [sp, #-32]!
    7e40:	mov	x29, sp
    7e44:	str	x19, [sp, #16]
    7e48:	mov	w1, #0x3f5                 	// #1013
    7e4c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x140ec>
    7e50:	add	x0, x0, #0x260
    7e54:	add	x0, x0, #0xc8
    7e58:	bl	32c0 <PyModule_Create2@plt>
    7e5c:	mov	x19, x0
    7e60:	cbz	x0, 7f04 <PyInit_math@@Base+0xc8>
    7e64:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    7e68:	ldr	d0, [x0, #1168]
    7e6c:	bl	31c0 <PyFloat_FromDouble@plt>
    7e70:	mov	x2, x0
    7e74:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    7e78:	add	x1, x1, #0x2a8
    7e7c:	mov	x0, x19
    7e80:	bl	3380 <PyModule_AddObject@plt>
    7e84:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    7e88:	ldr	d0, [x0, #1264]
    7e8c:	bl	31c0 <PyFloat_FromDouble@plt>
    7e90:	mov	x2, x0
    7e94:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    7e98:	add	x1, x1, #0x2b0
    7e9c:	mov	x0, x19
    7ea0:	bl	3380 <PyModule_AddObject@plt>
    7ea4:	adrp	x0, 8000 <_Py_log1p@@Base+0xec>
    7ea8:	ldr	d0, [x0, #1272]
    7eac:	bl	31c0 <PyFloat_FromDouble@plt>
    7eb0:	mov	x2, x0
    7eb4:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    7eb8:	add	x1, x1, #0x2b8
    7ebc:	mov	x0, x19
    7ec0:	bl	3380 <PyModule_AddObject@plt>
    7ec4:	mov	w0, #0x0                   	// #0
    7ec8:	bl	3360 <_Py_dg_infinity@plt>
    7ecc:	bl	31c0 <PyFloat_FromDouble@plt>
    7ed0:	mov	x2, x0
    7ed4:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    7ed8:	add	x1, x1, #0x2c0
    7edc:	mov	x0, x19
    7ee0:	bl	3380 <PyModule_AddObject@plt>
    7ee4:	mov	w0, #0x0                   	// #0
    7ee8:	bl	3240 <_Py_dg_stdnan@plt>
    7eec:	bl	31c0 <PyFloat_FromDouble@plt>
    7ef0:	mov	x2, x0
    7ef4:	adrp	x1, 8000 <_Py_log1p@@Base+0xec>
    7ef8:	add	x1, x1, #0x2c8
    7efc:	mov	x0, x19
    7f00:	bl	3380 <PyModule_AddObject@plt>
    7f04:	mov	x0, x19
    7f08:	ldr	x19, [sp, #16]
    7f0c:	ldp	x29, x30, [sp], #32
    7f10:	ret

0000000000007f14 <_Py_log1p@@Base>:
    7f14:	fcmp	d0, #0.0
    7f18:	b.ne	7f20 <_Py_log1p@@Base+0xc>  // b.any
    7f1c:	ret
    7f20:	stp	x29, x30, [sp, #-16]!
    7f24:	mov	x29, sp
    7f28:	bl	3250 <log1p@plt>
    7f2c:	ldp	x29, x30, [sp], #16
    7f30:	ret

Disassembly of section .fini:

0000000000007f34 <.fini>:
    7f34:	stp	x29, x30, [sp, #-16]!
    7f38:	mov	x29, sp
    7f3c:	ldp	x29, x30, [sp], #16
    7f40:	ret
