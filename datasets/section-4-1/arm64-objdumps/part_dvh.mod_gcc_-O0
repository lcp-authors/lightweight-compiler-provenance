
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//part_dvh.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x2c0>:
   0:	sub	sp, sp, #0x10
   4:	str	w0, [sp, #12]
   8:	ldr	w0, [sp, #12]
   c:	rev	w0, w0
  10:	add	sp, sp, #0x10
  14:	ret
  18:	stp	x29, x30, [sp, #-32]!
  1c:	mov	x29, sp
  20:	str	x0, [sp, #24]
  24:	ldr	x1, [sp, #24]
  28:	adrp	x0, 0 <grub_mod_init-0x2c0>
  2c:	add	x0, x0, #0x0
  30:	ldr	x0, [x0]
  34:	bl	0 <grub_list_push>
  38:	nop
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	nop
	...
  50:	stp	x29, x30, [sp, #-32]!
  54:	mov	x29, sp
  58:	str	x0, [sp, #24]
  5c:	ldr	x0, [sp, #24]
  60:	bl	0 <grub_list_remove>
  64:	nop
  68:	ldp	x29, x30, [sp], #32
  6c:	ret
  70:	stp	x29, x30, [sp, #-48]!
  74:	mov	x29, sp
  78:	str	x0, [sp, #24]
  7c:	str	wzr, [sp, #36]
  80:	ldr	x0, [sp, #24]
  84:	str	x0, [sp, #40]
  88:	b	b4 <grub_mod_init-0x20c>
  8c:	ldr	x0, [sp, #40]
  90:	ldr	w0, [x0]
  94:	bl	0 <grub_mod_init-0x2c0>
  98:	mov	w1, w0
  9c:	ldr	w0, [sp, #36]
  a0:	add	w0, w0, w1
  a4:	str	w0, [sp, #36]
  a8:	ldr	x0, [sp, #40]
  ac:	add	x0, x0, #0x4
  b0:	str	x0, [sp, #40]
  b4:	ldr	x0, [sp, #24]
  b8:	add	x0, x0, #0x200
  bc:	ldr	x1, [sp, #40]
  c0:	cmp	x1, x0
  c4:	b.cc	8c <grub_mod_init-0x234>  // b.lo, b.ul, b.last
  c8:	ldr	w0, [sp, #36]
  cc:	cmp	w0, #0x0
  d0:	cset	w0, eq  // eq = none
  d4:	and	w0, w0, #0xff
  d8:	ldp	x29, x30, [sp], #48
  dc:	ret
  e0:	sub	sp, sp, #0x280
  e4:	stp	x29, x30, [sp]
  e8:	mov	x29, sp
  ec:	str	x0, [sp, #40]
  f0:	str	x1, [sp, #32]
  f4:	str	x2, [sp, #24]
  f8:	adrp	x0, 0 <grub_mod_init-0x2c0>
  fc:	add	x0, x0, #0x0
 100:	ldr	x0, [x0]
 104:	str	x0, [sp, #616]
 108:	add	x0, sp, #0x38
 10c:	mov	x4, x0
 110:	mov	x3, #0x200                 	// #512
 114:	mov	x2, #0x0                   	// #0
 118:	mov	x1, #0x0                   	// #0
 11c:	ldr	x0, [sp, #40]
 120:	bl	0 <grub_disk_read>
 124:	str	w0, [sp, #632]
 128:	ldr	w0, [sp, #632]
 12c:	cmp	w0, #0x0
 130:	b.eq	13c <grub_mod_init-0x184>  // b.none
 134:	ldr	w0, [sp, #632]
 138:	b	290 <grub_mod_init-0x30>
 13c:	ldr	w0, [sp, #56]
 140:	bl	0 <grub_mod_init-0x2c0>
 144:	mov	w1, w0
 148:	mov	w0, #0xa941                	// #43329
 14c:	movk	w0, #0xbe5, lsl #16
 150:	cmp	w1, w0
 154:	b.eq	170 <grub_mod_init-0x150>  // b.none
 158:	adrp	x0, 0 <grub_mod_init-0x2c0>
 15c:	add	x0, x0, #0x0
 160:	ldr	x1, [x0]
 164:	mov	w0, #0x13                  	// #19
 168:	bl	0 <grub_error>
 16c:	b	290 <grub_mod_init-0x30>
 170:	add	x0, sp, #0x38
 174:	bl	70 <grub_mod_init-0x250>
 178:	cmp	w0, #0x0
 17c:	b.ne	198 <grub_mod_init-0x128>  // b.any
 180:	adrp	x0, 0 <grub_mod_init-0x2c0>
 184:	add	x0, x0, #0x0
 188:	ldr	x1, [x0]
 18c:	mov	w0, #0x13                  	// #19
 190:	bl	0 <grub_error>
 194:	b	290 <grub_mod_init-0x30>
 198:	str	wzr, [sp, #636]
 19c:	b	26c <grub_mod_init-0x54>
 1a0:	ldr	w1, [sp, #636]
 1a4:	mov	x0, x1
 1a8:	lsl	x0, x0, #1
 1ac:	add	x0, x0, x1
 1b0:	lsl	x0, x0, #2
 1b4:	add	x1, sp, #0x170
 1b8:	ldr	w0, [x1, x0]
 1bc:	cmp	w0, #0x0
 1c0:	b.eq	254 <grub_mod_init-0x6c>  // b.none
 1c4:	ldr	w0, [sp, #636]
 1c8:	cmp	w0, #0xa
 1cc:	b.eq	25c <grub_mod_init-0x64>  // b.none
 1d0:	ldr	w1, [sp, #636]
 1d4:	mov	x0, x1
 1d8:	lsl	x0, x0, #1
 1dc:	add	x0, x0, x1
 1e0:	lsl	x0, x0, #2
 1e4:	add	x1, sp, #0x174
 1e8:	ldr	w0, [x1, x0]
 1ec:	bl	0 <grub_mod_init-0x2c0>
 1f0:	mov	w0, w0
 1f4:	str	x0, [sp, #576]
 1f8:	ldr	w1, [sp, #636]
 1fc:	mov	x0, x1
 200:	lsl	x0, x0, #1
 204:	add	x0, x0, x1
 208:	lsl	x0, x0, #2
 20c:	add	x1, sp, #0x170
 210:	ldr	w0, [x1, x0]
 214:	bl	0 <grub_mod_init-0x2c0>
 218:	mov	w0, w0
 21c:	str	x0, [sp, #584]
 220:	ldr	w0, [sp, #636]
 224:	str	w0, [sp, #600]
 228:	ldr	w0, [sp, #600]
 22c:	str	w0, [sp, #568]
 230:	add	x0, sp, #0x238
 234:	ldr	x3, [sp, #32]
 238:	ldr	x2, [sp, #24]
 23c:	mov	x1, x0
 240:	ldr	x0, [sp, #40]
 244:	blr	x3
 248:	cmp	w0, #0x0
 24c:	b.ne	27c <grub_mod_init-0x44>  // b.any
 250:	b	260 <grub_mod_init-0x60>
 254:	nop
 258:	b	260 <grub_mod_init-0x60>
 25c:	nop
 260:	ldr	w0, [sp, #636]
 264:	add	w0, w0, #0x1
 268:	str	w0, [sp, #636]
 26c:	ldr	w0, [sp, #636]
 270:	cmp	w0, #0xf
 274:	b.ls	1a0 <grub_mod_init-0x120>  // b.plast
 278:	b	280 <grub_mod_init-0x40>
 27c:	nop
 280:	adrp	x0, 0 <grub_mod_init-0x2c0>
 284:	add	x0, x0, #0x0
 288:	ldr	x0, [x0]
 28c:	ldr	w0, [x0]
 290:	ldp	x29, x30, [sp]
 294:	add	sp, sp, #0x280
 298:	ret
 29c:	nop
	...

00000000000002c0 <grub_mod_init>:
 2c0:	stp	x29, x30, [sp, #-32]!
 2c4:	mov	x29, sp
 2c8:	str	x0, [sp, #24]
 2cc:	adrp	x0, 0 <grub_mod_init-0x2c0>
 2d0:	add	x0, x0, #0x0
 2d4:	ldr	x0, [x0]
 2d8:	bl	18 <grub_mod_init-0x2a8>
 2dc:	nop
 2e0:	ldp	x29, x30, [sp], #32
 2e4:	ret
	...

00000000000002f0 <grub_mod_fini>:
 2f0:	stp	x29, x30, [sp, #-16]!
 2f4:	mov	x29, sp
 2f8:	adrp	x0, 0 <grub_mod_init-0x2c0>
 2fc:	add	x0, x0, #0x0
 300:	ldr	x0, [x0]
 304:	bl	50 <grub_mod_init-0x270>
 308:	nop
 30c:	ldp	x29, x30, [sp], #16
 310:	ret
 314:	nop
	...
