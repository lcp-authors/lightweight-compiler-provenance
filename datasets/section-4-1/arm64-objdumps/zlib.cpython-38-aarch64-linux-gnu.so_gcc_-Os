
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//zlib.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001c90 <.init>:
    1c90:	stp	x29, x30, [sp, #-16]!
    1c94:	mov	x29, sp
    1c98:	bl	2020 <PyThread_free_lock@plt+0x10>
    1c9c:	ldp	x29, x30, [sp], #16
    1ca0:	ret

Disassembly of section .plt:

0000000000001cb0 <memcpy@plt-0x20>:
    1cb0:	stp	x16, x30, [sp, #-16]!
    1cb4:	adrp	x16, 16000 <PyInit_zlib@@Base+0x11dc8>
    1cb8:	ldr	x17, [x16, #4088]
    1cbc:	add	x16, x16, #0xff8
    1cc0:	br	x17
    1cc4:	nop
    1cc8:	nop
    1ccc:	nop

0000000000001cd0 <memcpy@plt>:
    1cd0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1cd4:	ldr	x17, [x16]
    1cd8:	add	x16, x16, #0x0
    1cdc:	br	x17

0000000000001ce0 <PyModule_AddIntConstant@plt>:
    1ce0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #8]
    1ce8:	add	x16, x16, #0x8
    1cec:	br	x17

0000000000001cf0 <_PyBytes_Resize@plt>:
    1cf0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1cf4:	ldr	x17, [x16, #16]
    1cf8:	add	x16, x16, #0x10
    1cfc:	br	x17

0000000000001d00 <inflate@plt>:
    1d00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1d04:	ldr	x17, [x16, #24]
    1d08:	add	x16, x16, #0x18
    1d0c:	br	x17

0000000000001d10 <PyEval_RestoreThread@plt>:
    1d10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1d14:	ldr	x17, [x16, #32]
    1d18:	add	x16, x16, #0x20
    1d1c:	br	x17

0000000000001d20 <PyBuffer_Release@plt>:
    1d20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1d24:	ldr	x17, [x16, #40]
    1d28:	add	x16, x16, #0x28
    1d2c:	br	x17

0000000000001d30 <__cxa_finalize@plt>:
    1d30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1d34:	ldr	x17, [x16, #48]
    1d38:	add	x16, x16, #0x30
    1d3c:	br	x17

0000000000001d40 <PyMem_RawMalloc@plt>:
    1d40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1d44:	ldr	x17, [x16, #56]
    1d48:	add	x16, x16, #0x38
    1d4c:	br	x17

0000000000001d50 <crc32@plt>:
    1d50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1d54:	ldr	x17, [x16, #64]
    1d58:	add	x16, x16, #0x40
    1d5c:	br	x17

0000000000001d60 <PyBuffer_IsContiguous@plt>:
    1d60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1d64:	ldr	x17, [x16, #72]
    1d68:	add	x16, x16, #0x48
    1d6c:	br	x17

0000000000001d70 <PyBytes_FromStringAndSize@plt>:
    1d70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1d74:	ldr	x17, [x16, #80]
    1d78:	add	x16, x16, #0x50
    1d7c:	br	x17

0000000000001d80 <_Py_Dealloc@plt>:
    1d80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1d84:	ldr	x17, [x16, #88]
    1d88:	add	x16, x16, #0x58
    1d8c:	br	x17

0000000000001d90 <PyErr_NoMemory@plt>:
    1d90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1d94:	ldr	x17, [x16, #96]
    1d98:	add	x16, x16, #0x60
    1d9c:	br	x17

0000000000001da0 <PyThread_acquire_lock@plt>:
    1da0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1da4:	ldr	x17, [x16, #104]
    1da8:	add	x16, x16, #0x68
    1dac:	br	x17

0000000000001db0 <_PyArg_UnpackKeywords@plt>:
    1db0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1db4:	ldr	x17, [x16, #112]
    1db8:	add	x16, x16, #0x70
    1dbc:	br	x17

0000000000001dc0 <PyErr_SetString@plt>:
    1dc0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1dc4:	ldr	x17, [x16, #120]
    1dc8:	add	x16, x16, #0x78
    1dcc:	br	x17

0000000000001dd0 <deflate@plt>:
    1dd0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1dd4:	ldr	x17, [x16, #128]
    1dd8:	add	x16, x16, #0x80
    1ddc:	br	x17

0000000000001de0 <_PyLong_FromNbIndexOrNbInt@plt>:
    1de0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1de4:	ldr	x17, [x16, #136]
    1de8:	add	x16, x16, #0x88
    1dec:	br	x17

0000000000001df0 <PyObject_Free@plt>:
    1df0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1df4:	ldr	x17, [x16, #144]
    1df8:	add	x16, x16, #0x90
    1dfc:	br	x17

0000000000001e00 <deflateInit2_@plt>:
    1e00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1e04:	ldr	x17, [x16, #152]
    1e08:	add	x16, x16, #0x98
    1e0c:	br	x17

0000000000001e10 <PyType_Ready@plt>:
    1e10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1e14:	ldr	x17, [x16, #160]
    1e18:	add	x16, x16, #0xa0
    1e1c:	br	x17

0000000000001e20 <PyLong_AsSsize_t@plt>:
    1e20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1e24:	ldr	x17, [x16, #168]
    1e28:	add	x16, x16, #0xa8
    1e2c:	br	x17

0000000000001e30 <_PyArg_BadArgument@plt>:
    1e30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1e34:	ldr	x17, [x16, #176]
    1e38:	add	x16, x16, #0xb0
    1e3c:	br	x17

0000000000001e40 <PyErr_NewException@plt>:
    1e40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1e44:	ldr	x17, [x16, #184]
    1e48:	add	x16, x16, #0xb8
    1e4c:	br	x17

0000000000001e50 <deflateInit_@plt>:
    1e50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1e54:	ldr	x17, [x16, #192]
    1e58:	add	x16, x16, #0xc0
    1e5c:	br	x17

0000000000001e60 <PyLong_AsUnsignedLongMask@plt>:
    1e60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1e64:	ldr	x17, [x16, #200]
    1e68:	add	x16, x16, #0xc8
    1e6c:	br	x17

0000000000001e70 <__gmon_start__@plt>:
    1e70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1e74:	ldr	x17, [x16, #208]
    1e78:	add	x16, x16, #0xd0
    1e7c:	br	x17

0000000000001e80 <_PyArg_CheckPositional@plt>:
    1e80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1e84:	ldr	x17, [x16, #216]
    1e88:	add	x16, x16, #0xd8
    1e8c:	br	x17

0000000000001e90 <inflateEnd@plt>:
    1e90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1e94:	ldr	x17, [x16, #224]
    1e98:	add	x16, x16, #0xe0
    1e9c:	br	x17

0000000000001ea0 <inflateCopy@plt>:
    1ea0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ea4:	ldr	x17, [x16, #232]
    1ea8:	add	x16, x16, #0xe8
    1eac:	br	x17

0000000000001eb0 <PyErr_Occurred@plt>:
    1eb0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1eb4:	ldr	x17, [x16, #240]
    1eb8:	add	x16, x16, #0xf0
    1ebc:	br	x17

0000000000001ec0 <PyModule_Create2@plt>:
    1ec0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ec4:	ldr	x17, [x16, #248]
    1ec8:	add	x16, x16, #0xf8
    1ecc:	br	x17

0000000000001ed0 <inflateSetDictionary@plt>:
    1ed0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ed4:	ldr	x17, [x16, #256]
    1ed8:	add	x16, x16, #0x100
    1edc:	br	x17

0000000000001ee0 <adler32@plt>:
    1ee0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ee4:	ldr	x17, [x16, #264]
    1ee8:	add	x16, x16, #0x108
    1eec:	br	x17

0000000000001ef0 <PyMem_RawFree@plt>:
    1ef0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ef4:	ldr	x17, [x16, #272]
    1ef8:	add	x16, x16, #0x110
    1efc:	br	x17

0000000000001f00 <PyThread_allocate_lock@plt>:
    1f00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1f04:	ldr	x17, [x16, #280]
    1f08:	add	x16, x16, #0x118
    1f0c:	br	x17

0000000000001f10 <deflateEnd@plt>:
    1f10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1f14:	ldr	x17, [x16, #288]
    1f18:	add	x16, x16, #0x120
    1f1c:	br	x17

0000000000001f20 <PyThread_release_lock@plt>:
    1f20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1f24:	ldr	x17, [x16, #296]
    1f28:	add	x16, x16, #0x128
    1f2c:	br	x17

0000000000001f30 <PyObject_GetBuffer@plt>:
    1f30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1f34:	ldr	x17, [x16, #304]
    1f38:	add	x16, x16, #0x130
    1f3c:	br	x17

0000000000001f40 <deflateCopy@plt>:
    1f40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1f44:	ldr	x17, [x16, #312]
    1f48:	add	x16, x16, #0x138
    1f4c:	br	x17

0000000000001f50 <PyLong_FromUnsignedLong@plt>:
    1f50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1f54:	ldr	x17, [x16, #320]
    1f58:	add	x16, x16, #0x140
    1f5c:	br	x17

0000000000001f60 <_PyObject_New@plt>:
    1f60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1f64:	ldr	x17, [x16, #328]
    1f68:	add	x16, x16, #0x148
    1f6c:	br	x17

0000000000001f70 <PyUnicode_FromString@plt>:
    1f70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1f74:	ldr	x17, [x16, #336]
    1f78:	add	x16, x16, #0x150
    1f7c:	br	x17

0000000000001f80 <inflateInit2_@plt>:
    1f80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1f84:	ldr	x17, [x16, #344]
    1f88:	add	x16, x16, #0x158
    1f8c:	br	x17

0000000000001f90 <PyModule_AddStringConstant@plt>:
    1f90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1f94:	ldr	x17, [x16, #352]
    1f98:	add	x16, x16, #0x160
    1f9c:	br	x17

0000000000001fa0 <PyEval_SaveThread@plt>:
    1fa0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1fa4:	ldr	x17, [x16, #360]
    1fa8:	add	x16, x16, #0x168
    1fac:	br	x17

0000000000001fb0 <PyModule_AddObject@plt>:
    1fb0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1fb4:	ldr	x17, [x16, #368]
    1fb8:	add	x16, x16, #0x170
    1fbc:	br	x17

0000000000001fc0 <zlibVersion@plt>:
    1fc0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1fc4:	ldr	x17, [x16, #376]
    1fc8:	add	x16, x16, #0x178
    1fcc:	br	x17

0000000000001fd0 <PyType_IsSubtype@plt>:
    1fd0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1fd4:	ldr	x17, [x16, #384]
    1fd8:	add	x16, x16, #0x180
    1fdc:	br	x17

0000000000001fe0 <PyErr_Format@plt>:
    1fe0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1fe4:	ldr	x17, [x16, #392]
    1fe8:	add	x16, x16, #0x188
    1fec:	br	x17

0000000000001ff0 <_PyLong_AsInt@plt>:
    1ff0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ff4:	ldr	x17, [x16, #400]
    1ff8:	add	x16, x16, #0x190
    1ffc:	br	x17

0000000000002000 <deflateSetDictionary@plt>:
    2000:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2004:	ldr	x17, [x16, #408]
    2008:	add	x16, x16, #0x198
    200c:	br	x17

0000000000002010 <PyThread_free_lock@plt>:
    2010:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2014:	ldr	x17, [x16, #416]
    2018:	add	x16, x16, #0x1a0
    201c:	br	x17

Disassembly of section .text:

0000000000002020 <PyInit_zlib@@Base-0x2218>:
    2020:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    2024:	ldr	x0, [x0, #4048]
    2028:	cbz	x0, 2030 <PyThread_free_lock@plt+0x20>
    202c:	b	1e70 <__gmon_start__@plt>
    2030:	ret
    2034:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12dc8>
    2038:	add	x0, x0, #0x998
    203c:	adrp	x1, 17000 <PyInit_zlib@@Base+0x12dc8>
    2040:	add	x1, x1, #0x998
    2044:	cmp	x1, x0
    2048:	b.eq	2060 <PyThread_free_lock@plt+0x50>  // b.none
    204c:	adrp	x1, 16000 <PyInit_zlib@@Base+0x11dc8>
    2050:	ldr	x1, [x1, #4000]
    2054:	cbz	x1, 2060 <PyThread_free_lock@plt+0x50>
    2058:	mov	x16, x1
    205c:	br	x16
    2060:	ret
    2064:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12dc8>
    2068:	add	x0, x0, #0x998
    206c:	adrp	x1, 17000 <PyInit_zlib@@Base+0x12dc8>
    2070:	add	x1, x1, #0x998
    2074:	sub	x1, x1, x0
    2078:	mov	x2, #0x2                   	// #2
    207c:	asr	x1, x1, #3
    2080:	sdiv	x1, x1, x2
    2084:	cbz	x1, 209c <PyThread_free_lock@plt+0x8c>
    2088:	adrp	x2, 16000 <PyInit_zlib@@Base+0x11dc8>
    208c:	ldr	x2, [x2, #4064]
    2090:	cbz	x2, 209c <PyThread_free_lock@plt+0x8c>
    2094:	mov	x16, x2
    2098:	br	x16
    209c:	ret
    20a0:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12dc8>
    20a4:	ldrb	w1, [x0, #2456]
    20a8:	cbnz	w1, 20ec <PyThread_free_lock@plt+0xdc>
    20ac:	stp	x29, x30, [sp, #-32]!
    20b0:	mov	x29, sp
    20b4:	str	x19, [sp, #16]
    20b8:	mov	x19, x0
    20bc:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    20c0:	ldr	x0, [x0, #4016]
    20c4:	cbz	x0, 20d4 <PyThread_free_lock@plt+0xc4>
    20c8:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12dc8>
    20cc:	ldr	x0, [x0, #424]
    20d0:	bl	1d30 <__cxa_finalize@plt>
    20d4:	bl	2034 <PyThread_free_lock@plt+0x24>
    20d8:	mov	w0, #0x1                   	// #1
    20dc:	strb	w0, [x19, #2456]
    20e0:	ldr	x19, [sp, #16]
    20e4:	ldp	x29, x30, [sp], #32
    20e8:	ret
    20ec:	ret
    20f0:	b	2064 <PyThread_free_lock@plt+0x54>
    20f4:	mov	x0, x1
    20f8:	b	1ef0 <PyMem_RawFree@plt>
    20fc:	mov	w3, w1
    2100:	mov	w4, w2
    2104:	cbz	w2, 2118 <PyThread_free_lock@plt+0x108>
    2108:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    210c:	udiv	x0, x0, x4
    2110:	cmp	x0, x3
    2114:	b.cc	2120 <PyThread_free_lock@plt+0x110>  // b.lo, b.ul, b.last
    2118:	umull	x0, w1, w2
    211c:	b	1d40 <PyMem_RawMalloc@plt>
    2120:	mov	x0, #0x0                   	// #0
    2124:	ret
    2128:	stp	x29, x30, [sp, #-48]!
    212c:	mov	x29, sp
    2130:	stp	x19, x20, [sp, #16]
    2134:	mov	x19, x2
    2138:	ldr	x2, [x1]
    213c:	stp	x21, x22, [sp, #32]
    2140:	mov	x22, x0
    2144:	mov	x21, x1
    2148:	cbnz	x2, 217c <PyThread_free_lock@plt+0x16c>
    214c:	mov	x1, x19
    2150:	mov	x0, #0x0                   	// #0
    2154:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    2158:	str	x0, [x21]
    215c:	mov	x2, #0x0                   	// #0
    2160:	cbnz	x0, 21c0 <PyThread_free_lock@plt+0x1b0>
    2164:	mov	x19, #0xffffffffffffffff    	// #-1
    2168:	mov	x0, x19
    216c:	ldp	x19, x20, [sp, #16]
    2170:	ldp	x21, x22, [sp, #32]
    2174:	ldp	x29, x30, [sp], #48
    2178:	ret
    217c:	add	x0, x2, #0x20
    2180:	ldr	x2, [x22, #24]
    2184:	sub	x2, x2, x0
    2188:	cmp	x2, x19
    218c:	b.ne	21c0 <PyThread_free_lock@plt+0x1b0>  // b.any
    2190:	mov	x20, x3
    2194:	cmp	x19, x3
    2198:	b.eq	21ec <PyThread_free_lock@plt+0x1dc>  // b.none
    219c:	cmp	x19, x3, asr #1
    21a0:	b.gt	21a8 <PyThread_free_lock@plt+0x198>
    21a4:	lsl	x20, x19, #1
    21a8:	mov	x1, x20
    21ac:	mov	x0, x21
    21b0:	bl	1cf0 <_PyBytes_Resize@plt>
    21b4:	tbnz	w0, #31, 2164 <PyThread_free_lock@plt+0x154>
    21b8:	mov	x2, x19
    21bc:	mov	x19, x20
    21c0:	sub	x3, x19, x2
    21c4:	sub	w0, w19, w2
    21c8:	mov	x1, #0xffffffff            	// #4294967295
    21cc:	cmp	x3, x1
    21d0:	csinv	w0, w0, wzr, ls  // ls = plast
    21d4:	str	w0, [x22, #32]
    21d8:	ldr	x0, [x21]
    21dc:	add	x0, x0, #0x20
    21e0:	add	x2, x0, x2
    21e4:	str	x2, [x22, #24]
    21e8:	b	2168 <PyThread_free_lock@plt+0x158>
    21ec:	mov	x19, #0xfffffffffffffffe    	// #-2
    21f0:	b	2168 <PyThread_free_lock@plt+0x158>
    21f4:	stp	x29, x30, [sp, #-32]!
    21f8:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
    21fc:	mov	x29, sp
    2200:	str	x19, [sp, #16]
    2204:	bl	2128 <PyThread_free_lock@plt+0x118>
    2208:	mov	x19, x0
    220c:	cmn	x0, #0x2
    2210:	b.ne	2218 <PyThread_free_lock@plt+0x208>  // b.any
    2214:	bl	1d90 <PyErr_NoMemory@plt>
    2218:	mov	x0, x19
    221c:	ldr	x19, [sp, #16]
    2220:	ldp	x29, x30, [sp], #32
    2224:	ret
    2228:	ldr	x2, [x1]
    222c:	mov	x3, #0xffffffff            	// #4294967295
    2230:	cmp	x2, x3
    2234:	csel	x3, x2, x3, ls  // ls = plast
    2238:	str	w3, [x0]
    223c:	sub	x2, x2, x3
    2240:	str	x2, [x1]
    2244:	ret
    2248:	mov	x4, x0
    224c:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12dc8>
    2250:	mov	x3, x2
    2254:	cmn	w1, #0x6
    2258:	ldr	x0, [x0, #2464]
    225c:	b.eq	228c <PyThread_free_lock@plt+0x27c>  // b.none
    2260:	cbnz	x4, 2294 <PyThread_free_lock@plt+0x284>
    2264:	cmn	w1, #0x3
    2268:	b.eq	22a4 <PyThread_free_lock@plt+0x294>  // b.none
    226c:	cmn	w1, #0x2
    2270:	b.eq	22b0 <PyThread_free_lock@plt+0x2a0>  // b.none
    2274:	cmn	w1, #0x5
    2278:	b.eq	22bc <PyThread_free_lock@plt+0x2ac>  // b.none
    227c:	mov	w2, w1
    2280:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    2284:	add	x1, x1, #0x531
    2288:	b	1fe0 <PyErr_Format@plt>
    228c:	adrp	x4, 4000 <PyThread_free_lock@plt+0x1ff0>
    2290:	add	x4, x4, #0x4e6
    2294:	mov	w2, w1
    2298:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    229c:	add	x1, x1, #0x53d
    22a0:	b	1fe0 <PyErr_Format@plt>
    22a4:	adrp	x4, 4000 <PyThread_free_lock@plt+0x1ff0>
    22a8:	add	x4, x4, #0x4ff
    22ac:	b	2294 <PyThread_free_lock@plt+0x284>
    22b0:	adrp	x4, 4000 <PyThread_free_lock@plt+0x1ff0>
    22b4:	add	x4, x4, #0x4cc
    22b8:	b	2294 <PyThread_free_lock@plt+0x284>
    22bc:	adrp	x4, 4000 <PyThread_free_lock@plt+0x1ff0>
    22c0:	add	x4, x4, #0x512
    22c4:	b	2294 <PyThread_free_lock@plt+0x284>
    22c8:	stp	x29, x30, [sp, #-128]!
    22cc:	mov	w2, #0x0                   	// #0
    22d0:	mov	x29, sp
    22d4:	stp	x19, x20, [sp, #16]
    22d8:	mov	x20, x0
    22dc:	ldr	x0, [x0, #152]
    22e0:	str	x21, [sp, #32]
    22e4:	add	x21, sp, #0x30
    22e8:	mov	x1, x21
    22ec:	bl	1f30 <PyObject_GetBuffer@plt>
    22f0:	mov	w19, w0
    22f4:	cmn	w0, #0x1
    22f8:	b.eq	2330 <PyThread_free_lock@plt+0x320>  // b.none
    22fc:	ldr	x2, [sp, #64]
    2300:	mov	x0, #0xffffffff            	// #4294967295
    2304:	cmp	x2, x0
    2308:	b.ls	2344 <PyThread_free_lock@plt+0x334>  // b.plast
    230c:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    2310:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    2314:	add	x1, x1, #0x551
    2318:	ldr	x0, [x0, #4056]
    231c:	ldr	x0, [x0]
    2320:	bl	1dc0 <PyErr_SetString@plt>
    2324:	mov	x0, x21
    2328:	bl	1d20 <PyBuffer_Release@plt>
    232c:	mov	w19, #0xffffffff            	// #-1
    2330:	mov	w0, w19
    2334:	ldp	x19, x20, [sp, #16]
    2338:	ldr	x21, [sp, #32]
    233c:	ldp	x29, x30, [sp], #128
    2340:	ret
    2344:	ldr	x1, [sp, #48]
    2348:	add	x0, x20, #0x10
    234c:	bl	1ed0 <inflateSetDictionary@plt>
    2350:	mov	w19, w0
    2354:	mov	x0, x21
    2358:	bl	1d20 <PyBuffer_Release@plt>
    235c:	cbz	w19, 2330 <PyThread_free_lock@plt+0x320>
    2360:	ldr	x0, [x20, #64]
    2364:	mov	w1, w19
    2368:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    236c:	add	x2, x2, #0x57e
    2370:	bl	2248 <PyThread_free_lock@plt+0x238>
    2374:	b	232c <PyThread_free_lock@plt+0x31c>
    2378:	ldr	x1, [x0]
    237c:	sub	x1, x1, #0x1
    2380:	str	x1, [x0]
    2384:	cbnz	x1, 238c <PyThread_free_lock@plt+0x37c>
    2388:	b	1d80 <_Py_Dealloc@plt>
    238c:	ret
    2390:	stp	x29, x30, [sp, #-32]!
    2394:	mov	x29, sp
    2398:	stp	x19, x20, [sp, #16]
    239c:	bl	1f60 <_PyObject_New@plt>
    23a0:	mov	x19, x0
    23a4:	cbz	x0, 23dc <PyThread_free_lock@plt+0x3cc>
    23a8:	strb	wzr, [x0, #144]
    23ac:	adrp	x20, 4000 <PyThread_free_lock@plt+0x1ff0>
    23b0:	str	wzr, [x19, #148]
    23b4:	add	x20, x20, #0x7c7
    23b8:	str	xzr, [x19, #152]
    23bc:	mov	x0, x20
    23c0:	mov	x1, #0x0                   	// #0
    23c4:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    23c8:	str	x0, [x19, #128]
    23cc:	cbnz	x0, 23ec <PyThread_free_lock@plt+0x3dc>
    23d0:	mov	x0, x19
    23d4:	bl	2378 <PyThread_free_lock@plt+0x368>
    23d8:	mov	x19, #0x0                   	// #0
    23dc:	mov	x0, x19
    23e0:	ldp	x19, x20, [sp, #16]
    23e4:	ldp	x29, x30, [sp], #32
    23e8:	ret
    23ec:	mov	x0, x20
    23f0:	mov	x1, #0x0                   	// #0
    23f4:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    23f8:	str	x0, [x19, #136]
    23fc:	cbz	x0, 23d0 <PyThread_free_lock@plt+0x3c0>
    2400:	bl	1f00 <PyThread_allocate_lock@plt>
    2404:	str	x0, [x19, #160]
    2408:	cbnz	x0, 23dc <PyThread_free_lock@plt+0x3cc>
    240c:	mov	x0, x19
    2410:	bl	2378 <PyThread_free_lock@plt+0x368>
    2414:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    2418:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    241c:	add	x1, x1, #0x592
    2420:	ldr	x0, [x0, #4024]
    2424:	ldr	x0, [x0]
    2428:	bl	1dc0 <PyErr_SetString@plt>
    242c:	b	23d8 <PyThread_free_lock@plt+0x3c8>
    2430:	cbz	x0, 2438 <PyThread_free_lock@plt+0x428>
    2434:	b	2378 <PyThread_free_lock@plt+0x368>
    2438:	ret
    243c:	stp	x29, x30, [sp, #-48]!
    2440:	mov	x29, sp
    2444:	stp	x19, x20, [sp, #16]
    2448:	mov	x20, x0
    244c:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12dc8>
    2450:	add	x0, x0, #0x1b0
    2454:	str	x21, [sp, #32]
    2458:	bl	2390 <PyThread_free_lock@plt+0x380>
    245c:	mov	x19, x0
    2460:	cbz	x0, 256c <PyThread_free_lock@plt+0x55c>
    2464:	bl	1fa0 <PyEval_SaveThread@plt>
    2468:	mov	x21, x0
    246c:	ldr	x0, [x20, #160]
    2470:	mov	w1, #0x1                   	// #1
    2474:	bl	1da0 <PyThread_acquire_lock@plt>
    2478:	mov	x0, x21
    247c:	bl	1d10 <PyEval_RestoreThread@plt>
    2480:	add	x1, x20, #0x10
    2484:	add	x0, x19, #0x10
    2488:	bl	1ea0 <inflateCopy@plt>
    248c:	mov	w1, w0
    2490:	cmn	w0, #0x2
    2494:	b.eq	24b8 <PyThread_free_lock@plt+0x4a8>  // b.none
    2498:	cbz	w0, 24fc <PyThread_free_lock@plt+0x4ec>
    249c:	cmn	w0, #0x4
    24a0:	b.ne	24e8 <PyThread_free_lock@plt+0x4d8>  // b.any
    24a4:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    24a8:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    24ac:	add	x1, x1, #0x5c4
    24b0:	ldr	x0, [x0, #4024]
    24b4:	b	24c8 <PyThread_free_lock@plt+0x4b8>
    24b8:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    24bc:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    24c0:	add	x1, x1, #0x5aa
    24c4:	ldr	x0, [x0, #4032]
    24c8:	ldr	x0, [x0]
    24cc:	bl	1dc0 <PyErr_SetString@plt>
    24d0:	ldr	x0, [x20, #160]
    24d4:	bl	1f20 <PyThread_release_lock@plt>
    24d8:	mov	x0, x19
    24dc:	mov	x19, #0x0                   	// #0
    24e0:	bl	2430 <PyThread_free_lock@plt+0x420>
    24e4:	b	256c <PyThread_free_lock@plt+0x55c>
    24e8:	ldr	x0, [x20, #64]
    24ec:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    24f0:	add	x2, x2, #0x5f3
    24f4:	bl	2248 <PyThread_free_lock@plt+0x238>
    24f8:	b	24d0 <PyThread_free_lock@plt+0x4c0>
    24fc:	ldr	x1, [x20, #128]
    2500:	ldr	x0, [x1]
    2504:	add	x0, x0, #0x1
    2508:	str	x0, [x1]
    250c:	ldr	x0, [x19, #128]
    2510:	str	x1, [x19, #128]
    2514:	bl	2430 <PyThread_free_lock@plt+0x420>
    2518:	ldr	x1, [x20, #136]
    251c:	ldr	x0, [x1]
    2520:	add	x0, x0, #0x1
    2524:	str	x0, [x1]
    2528:	ldr	x0, [x19, #136]
    252c:	str	x1, [x19, #136]
    2530:	bl	2430 <PyThread_free_lock@plt+0x420>
    2534:	ldr	x1, [x20, #152]
    2538:	cbz	x1, 2548 <PyThread_free_lock@plt+0x538>
    253c:	ldr	x0, [x1]
    2540:	add	x0, x0, #0x1
    2544:	str	x0, [x1]
    2548:	ldr	x0, [x19, #152]
    254c:	str	x1, [x19, #152]
    2550:	bl	2430 <PyThread_free_lock@plt+0x420>
    2554:	ldrb	w0, [x20, #144]
    2558:	strb	w0, [x19, #144]
    255c:	mov	w0, #0x1                   	// #1
    2560:	str	w0, [x19, #148]
    2564:	ldr	x0, [x20, #160]
    2568:	bl	1f20 <PyThread_release_lock@plt>
    256c:	mov	x0, x19
    2570:	ldp	x19, x20, [sp, #16]
    2574:	ldr	x21, [sp, #32]
    2578:	ldp	x29, x30, [sp], #48
    257c:	ret
    2580:	b	243c <PyThread_free_lock@plt+0x42c>
    2584:	stp	x29, x30, [sp, #-32]!
    2588:	mov	x29, sp
    258c:	str	x19, [sp, #16]
    2590:	mov	x19, x0
    2594:	ldr	x0, [x0, #160]
    2598:	bl	2010 <PyThread_free_lock@plt>
    259c:	ldr	x0, [x19, #128]
    25a0:	bl	2430 <PyThread_free_lock@plt+0x420>
    25a4:	ldr	x0, [x19, #136]
    25a8:	bl	2430 <PyThread_free_lock@plt+0x420>
    25ac:	ldr	x0, [x19, #152]
    25b0:	bl	2430 <PyThread_free_lock@plt+0x420>
    25b4:	mov	x0, x19
    25b8:	ldr	x19, [sp, #16]
    25bc:	ldp	x29, x30, [sp], #32
    25c0:	b	1df0 <PyObject_Free@plt>
    25c4:	stp	x29, x30, [sp, #-32]!
    25c8:	mov	x29, sp
    25cc:	str	x19, [sp, #16]
    25d0:	mov	x19, x0
    25d4:	ldr	w0, [x0, #148]
    25d8:	cbz	w0, 25e4 <PyThread_free_lock@plt+0x5d4>
    25dc:	add	x0, x19, #0x10
    25e0:	bl	1e90 <inflateEnd@plt>
    25e4:	mov	x0, x19
    25e8:	ldr	x19, [sp, #16]
    25ec:	ldp	x29, x30, [sp], #32
    25f0:	b	2584 <PyThread_free_lock@plt+0x574>
    25f4:	stp	x29, x30, [sp, #-32]!
    25f8:	mov	x29, sp
    25fc:	str	x19, [sp, #16]
    2600:	mov	x19, x0
    2604:	ldr	w0, [x0, #148]
    2608:	cbz	w0, 2614 <PyThread_free_lock@plt+0x604>
    260c:	add	x0, x19, #0x10
    2610:	bl	1f10 <deflateEnd@plt>
    2614:	mov	x0, x19
    2618:	ldr	x19, [sp, #16]
    261c:	ldp	x29, x30, [sp], #32
    2620:	b	2584 <PyThread_free_lock@plt+0x574>
    2624:	stp	x29, x30, [sp, #-48]!
    2628:	mov	x29, sp
    262c:	stp	x19, x20, [sp, #16]
    2630:	str	x21, [sp, #32]
    2634:	mov	x21, x1
    2638:	bl	1de0 <_PyLong_FromNbIndexOrNbInt@plt>
    263c:	cbnz	x0, 2654 <PyThread_free_lock@plt+0x644>
    2640:	mov	w0, #0x0                   	// #0
    2644:	ldp	x19, x20, [sp, #16]
    2648:	ldr	x21, [sp, #32]
    264c:	ldp	x29, x30, [sp], #48
    2650:	ret
    2654:	mov	x20, x0
    2658:	bl	1e20 <PyLong_AsSsize_t@plt>
    265c:	mov	x19, x0
    2660:	mov	x0, x20
    2664:	bl	2378 <PyThread_free_lock@plt+0x368>
    2668:	cmn	x19, #0x1
    266c:	b.eq	267c <PyThread_free_lock@plt+0x66c>  // b.none
    2670:	mov	w0, #0x1                   	// #1
    2674:	str	x19, [x21]
    2678:	b	2644 <PyThread_free_lock@plt+0x634>
    267c:	bl	1eb0 <PyErr_Occurred@plt>
    2680:	cbnz	x0, 2640 <PyThread_free_lock@plt+0x630>
    2684:	b	2670 <PyThread_free_lock@plt+0x660>
    2688:	stp	x29, x30, [sp, #-192]!
    268c:	mov	w2, #0x0                   	// #0
    2690:	mov	x29, sp
    2694:	stp	x19, x20, [sp, #16]
    2698:	mov	x20, x1
    269c:	mov	x19, x0
    26a0:	stp	x21, x22, [sp, #32]
    26a4:	add	x22, sp, #0x70
    26a8:	mov	x1, x22
    26ac:	mov	x0, x20
    26b0:	stp	x23, x24, [sp, #48]
    26b4:	stp	x25, x26, [sp, #64]
    26b8:	str	x27, [sp, #80]
    26bc:	stp	xzr, xzr, [sp, #112]
    26c0:	stp	xzr, xzr, [sp, #128]
    26c4:	stp	xzr, xzr, [sp, #144]
    26c8:	stp	xzr, xzr, [sp, #160]
    26cc:	stp	xzr, xzr, [sp, #176]
    26d0:	bl	1f30 <PyObject_GetBuffer@plt>
    26d4:	cbnz	w0, 2708 <PyThread_free_lock@plt+0x6f8>
    26d8:	mov	x0, x22
    26dc:	mov	w1, #0x43                  	// #67
    26e0:	bl	1d60 <PyBuffer_IsContiguous@plt>
    26e4:	cbnz	w0, 2710 <PyThread_free_lock@plt+0x700>
    26e8:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    26ec:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    26f0:	adrp	x0, 4000 <PyThread_free_lock@plt+0x1ff0>
    26f4:	mov	x3, x20
    26f8:	add	x2, x2, #0x616
    26fc:	add	x1, x1, #0x628
    2700:	add	x0, x0, #0xa92
    2704:	bl	1e30 <_PyArg_BadArgument@plt>
    2708:	mov	x19, #0x0                   	// #0
    270c:	b	27fc <PyThread_free_lock@plt+0x7ec>
    2710:	ldr	x0, [sp, #112]
    2714:	str	x0, [x19, #16]
    2718:	ldr	x0, [sp, #128]
    271c:	stp	xzr, x0, [sp, #96]
    2720:	add	x25, sp, #0x68
    2724:	add	x26, x19, #0x18
    2728:	add	x24, x19, #0x10
    272c:	bl	1fa0 <PyEval_SaveThread@plt>
    2730:	mov	x20, x0
    2734:	ldr	x0, [x19, #160]
    2738:	mov	w1, #0x1                   	// #1
    273c:	add	x23, sp, #0x60
    2740:	bl	1da0 <PyThread_acquire_lock@plt>
    2744:	mov	x0, x20
    2748:	mov	x20, #0x4000                	// #16384
    274c:	bl	1d10 <PyEval_RestoreThread@plt>
    2750:	mov	x1, x25
    2754:	mov	x0, x26
    2758:	bl	2228 <PyThread_free_lock@plt+0x218>
    275c:	mov	x2, x20
    2760:	mov	x1, x23
    2764:	mov	x0, x24
    2768:	bl	21f4 <PyThread_free_lock@plt+0x1e4>
    276c:	mov	x20, x0
    2770:	tbnz	x0, #63, 27b0 <PyThread_free_lock@plt+0x7a0>
    2774:	bl	1fa0 <PyEval_SaveThread@plt>
    2778:	mov	x27, x0
    277c:	mov	w1, #0x0                   	// #0
    2780:	mov	x0, x24
    2784:	bl	1dd0 <deflate@plt>
    2788:	mov	w21, w0
    278c:	mov	x0, x27
    2790:	bl	1d10 <PyEval_RestoreThread@plt>
    2794:	cmn	w21, #0x2
    2798:	b.ne	27c4 <PyThread_free_lock@plt+0x7b4>  // b.any
    279c:	ldr	x0, [x19, #64]
    27a0:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    27a4:	mov	w1, w21
    27a8:	add	x2, x2, #0x84f
    27ac:	bl	2248 <PyThread_free_lock@plt+0x238>
    27b0:	ldr	x0, [sp, #96]
    27b4:	cbz	x0, 27f0 <PyThread_free_lock@plt+0x7e0>
    27b8:	str	xzr, [sp, #96]
    27bc:	bl	2378 <PyThread_free_lock@plt+0x368>
    27c0:	b	27f0 <PyThread_free_lock@plt+0x7e0>
    27c4:	ldr	w0, [x19, #48]
    27c8:	cbz	w0, 275c <PyThread_free_lock@plt+0x74c>
    27cc:	ldr	x0, [sp, #104]
    27d0:	cbnz	x0, 2750 <PyThread_free_lock@plt+0x740>
    27d4:	ldr	x0, [sp, #96]
    27d8:	ldr	x1, [x19, #40]
    27dc:	add	x0, x0, #0x20
    27e0:	sub	x1, x1, x0
    27e4:	mov	x0, x23
    27e8:	bl	1cf0 <_PyBytes_Resize@plt>
    27ec:	cbnz	w0, 27b0 <PyThread_free_lock@plt+0x7a0>
    27f0:	ldr	x0, [x19, #160]
    27f4:	bl	1f20 <PyThread_release_lock@plt>
    27f8:	ldr	x19, [sp, #96]
    27fc:	ldr	x0, [sp, #120]
    2800:	cbz	x0, 280c <PyThread_free_lock@plt+0x7fc>
    2804:	mov	x0, x22
    2808:	bl	1d20 <PyBuffer_Release@plt>
    280c:	mov	x0, x19
    2810:	ldp	x19, x20, [sp, #16]
    2814:	ldp	x21, x22, [sp, #32]
    2818:	ldp	x23, x24, [sp, #48]
    281c:	ldp	x25, x26, [sp, #64]
    2820:	ldr	x27, [sp, #80]
    2824:	ldp	x29, x30, [sp], #192
    2828:	ret
    282c:	stp	x29, x30, [sp, #-64]!
    2830:	cmp	w2, #0x1
    2834:	mov	x29, sp
    2838:	stp	x19, x20, [sp, #16]
    283c:	mov	x19, x0
    2840:	ldr	w0, [x0, #24]
    2844:	stp	x21, x22, [sp, #32]
    2848:	mov	x21, x1
    284c:	str	x23, [sp, #48]
    2850:	b.ne	28fc <PyThread_free_lock@plt+0x8ec>  // b.any
    2854:	cbz	w0, 28ec <PyThread_free_lock@plt+0x8dc>
    2858:	ldr	x0, [x19, #128]
    285c:	ldr	x20, [x1]
    2860:	ldr	x23, [x0, #16]
    2864:	ldr	x0, [x1, #16]
    2868:	add	x20, x20, x0
    286c:	ldr	x0, [x19, #16]
    2870:	sub	x20, x20, x0
    2874:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    2878:	sub	x0, x0, x23
    287c:	cmp	x0, x20
    2880:	b.ge	28a0 <PyThread_free_lock@plt+0x890>  // b.tcont
    2884:	bl	1d90 <PyErr_NoMemory@plt>
    2888:	mov	w0, #0xffffffff            	// #-1
    288c:	ldp	x19, x20, [sp, #16]
    2890:	ldp	x21, x22, [sp, #32]
    2894:	ldr	x23, [sp, #48]
    2898:	ldp	x29, x30, [sp], #64
    289c:	ret
    28a0:	add	x1, x23, x20
    28a4:	mov	x0, #0x0                   	// #0
    28a8:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    28ac:	mov	x22, x0
    28b0:	cbz	x0, 2888 <PyThread_free_lock@plt+0x878>
    28b4:	add	x3, x0, #0x20
    28b8:	mov	x2, x23
    28bc:	ldr	x1, [x19, #128]
    28c0:	mov	x0, x3
    28c4:	add	x1, x1, #0x20
    28c8:	bl	1cd0 <memcpy@plt>
    28cc:	ldr	x1, [x19, #16]
    28d0:	mov	x2, x20
    28d4:	add	x0, x0, x23
    28d8:	bl	1cd0 <memcpy@plt>
    28dc:	ldr	x0, [x19, #128]
    28e0:	str	x22, [x19, #128]
    28e4:	bl	2378 <PyThread_free_lock@plt+0x368>
    28e8:	str	wzr, [x19, #24]
    28ec:	ldr	x0, [x19, #136]
    28f0:	ldr	x0, [x0, #16]
    28f4:	cbnz	x0, 2900 <PyThread_free_lock@plt+0x8f0>
    28f8:	b	288c <PyThread_free_lock@plt+0x87c>
    28fc:	cbz	w0, 28ec <PyThread_free_lock@plt+0x8dc>
    2900:	ldr	x1, [x21]
    2904:	ldr	x2, [x21, #16]
    2908:	ldr	x0, [x19, #16]
    290c:	add	x1, x1, x2
    2910:	sub	x1, x1, x0
    2914:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    2918:	mov	x1, x0
    291c:	cbz	x0, 2888 <PyThread_free_lock@plt+0x878>
    2920:	ldr	x0, [x19, #136]
    2924:	str	x1, [x19, #136]
    2928:	bl	2378 <PyThread_free_lock@plt+0x368>
    292c:	mov	w0, #0x0                   	// #0
    2930:	b	288c <PyThread_free_lock@plt+0x87c>
    2934:	stp	x29, x30, [sp, #-208]!
    2938:	cmp	x2, #0x1
    293c:	mov	x29, sp
    2940:	stp	x19, x20, [sp, #16]
    2944:	mov	x19, x0
    2948:	mov	x0, #0x4000                	// #16384
    294c:	stp	x21, x22, [sp, #32]
    2950:	mov	x20, x2
    2954:	mov	x21, x1
    2958:	stp	x23, x24, [sp, #48]
    295c:	stp	x25, x26, [sp, #64]
    2960:	stp	x27, x28, [sp, #80]
    2964:	str	x0, [sp, #104]
    2968:	b.hi	29a0 <PyThread_free_lock@plt+0x990>  // b.pmore
    296c:	cmp	x20, #0x0
    2970:	b.gt	29c4 <PyThread_free_lock@plt+0x9b4>
    2974:	ldr	x21, [sp, #104]
    2978:	str	xzr, [sp, #112]
    297c:	cmp	x21, #0x0
    2980:	b.gt	29d8 <PyThread_free_lock@plt+0x9c8>
    2984:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    2988:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    298c:	add	x1, x1, #0x637
    2990:	ldr	x0, [x0, #4032]
    2994:	ldr	x0, [x0]
    2998:	bl	1dc0 <PyErr_SetString@plt>
    299c:	b	29bc <PyThread_free_lock@plt+0x9ac>
    29a0:	adrp	x0, 4000 <PyThread_free_lock@plt+0x1ff0>
    29a4:	mov	x1, x20
    29a8:	add	x0, x0, #0x631
    29ac:	mov	x3, #0x1                   	// #1
    29b0:	mov	x2, #0x0                   	// #0
    29b4:	bl	1e80 <_PyArg_CheckPositional@plt>
    29b8:	cbnz	w0, 296c <PyThread_free_lock@plt+0x95c>
    29bc:	mov	x0, #0x0                   	// #0
    29c0:	b	2b58 <PyThread_free_lock@plt+0xb48>
    29c4:	ldr	x0, [x21]
    29c8:	add	x1, sp, #0x68
    29cc:	bl	2624 <PyThread_free_lock@plt+0x614>
    29d0:	cbnz	w0, 2974 <PyThread_free_lock@plt+0x964>
    29d4:	b	29bc <PyThread_free_lock@plt+0x9ac>
    29d8:	ldr	x0, [x19, #136]
    29dc:	add	x22, sp, #0x80
    29e0:	mov	x1, x22
    29e4:	mov	w2, #0x0                   	// #0
    29e8:	bl	1f30 <PyObject_GetBuffer@plt>
    29ec:	cmn	w0, #0x1
    29f0:	b.eq	29bc <PyThread_free_lock@plt+0x9ac>  // b.none
    29f4:	bl	1fa0 <PyEval_SaveThread@plt>
    29f8:	mov	x20, x0
    29fc:	ldr	x0, [x19, #160]
    2a00:	mov	w1, #0x1                   	// #1
    2a04:	add	x26, sp, #0x78
    2a08:	add	x27, x19, #0x18
    2a0c:	add	x24, x19, #0x10
    2a10:	add	x23, sp, #0x70
    2a14:	bl	1da0 <PyThread_acquire_lock@plt>
    2a18:	mov	x0, x20
    2a1c:	bl	1d10 <PyEval_RestoreThread@plt>
    2a20:	ldr	x0, [sp, #128]
    2a24:	str	x0, [x19, #16]
    2a28:	ldr	x0, [sp, #144]
    2a2c:	str	x0, [sp, #120]
    2a30:	mov	x0, x27
    2a34:	mov	x1, x26
    2a38:	bl	2228 <PyThread_free_lock@plt+0x218>
    2a3c:	ldr	x0, [sp, #120]
    2a40:	cmp	x0, #0x0
    2a44:	cset	w25, eq  // eq = none
    2a48:	lsl	w25, w25, #2
    2a4c:	mov	x2, x21
    2a50:	mov	x1, x23
    2a54:	mov	x0, x24
    2a58:	bl	21f4 <PyThread_free_lock@plt+0x1e4>
    2a5c:	mov	x21, x0
    2a60:	tbnz	x0, #63, 2b14 <PyThread_free_lock@plt+0xb04>
    2a64:	bl	1fa0 <PyEval_SaveThread@plt>
    2a68:	mov	x28, x0
    2a6c:	mov	w1, w25
    2a70:	mov	x0, x24
    2a74:	bl	1d00 <inflate@plt>
    2a78:	mov	w20, w0
    2a7c:	mov	x0, x28
    2a80:	bl	1d10 <PyEval_RestoreThread@plt>
    2a84:	cmn	w20, #0x5
    2a88:	b.eq	2ab0 <PyThread_free_lock@plt+0xaa0>  // b.none
    2a8c:	cmp	w20, #0x1
    2a90:	b.ls	2ab0 <PyThread_free_lock@plt+0xaa0>  // b.plast
    2a94:	cmp	w20, #0x2
    2a98:	b.ne	2ad0 <PyThread_free_lock@plt+0xac0>  // b.any
    2a9c:	ldr	x0, [x19, #152]
    2aa0:	cbz	x0, 2ad0 <PyThread_free_lock@plt+0xac0>
    2aa4:	mov	x0, x19
    2aa8:	bl	22c8 <PyThread_free_lock@plt+0x2b8>
    2aac:	tbnz	w0, #31, 2b14 <PyThread_free_lock@plt+0xb04>
    2ab0:	ldr	w0, [x19, #48]
    2ab4:	cbz	w0, 2a4c <PyThread_free_lock@plt+0xa3c>
    2ab8:	cmp	w20, #0x2
    2abc:	b.eq	2a4c <PyThread_free_lock@plt+0xa3c>  // b.none
    2ac0:	cmp	w20, #0x1
    2ac4:	b.eq	2ad0 <PyThread_free_lock@plt+0xac0>  // b.none
    2ac8:	ldr	x0, [sp, #120]
    2acc:	cbnz	x0, 2a30 <PyThread_free_lock@plt+0xa20>
    2ad0:	mov	w2, w20
    2ad4:	mov	x1, x22
    2ad8:	mov	x0, x19
    2adc:	bl	282c <PyThread_free_lock@plt+0x81c>
    2ae0:	tbnz	w0, #31, 2b14 <PyThread_free_lock@plt+0xb04>
    2ae4:	cmp	w20, #0x1
    2ae8:	b.ne	2b28 <PyThread_free_lock@plt+0xb18>  // b.any
    2aec:	strb	w20, [x19, #144]
    2af0:	mov	x0, x24
    2af4:	str	wzr, [x19, #148]
    2af8:	bl	1e90 <inflateEnd@plt>
    2afc:	mov	w1, w0
    2b00:	cbz	w0, 2b28 <PyThread_free_lock@plt+0xb18>
    2b04:	ldr	x0, [x19, #64]
    2b08:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    2b0c:	add	x2, x2, #0x658
    2b10:	bl	2248 <PyThread_free_lock@plt+0x238>
    2b14:	ldr	x0, [sp, #112]
    2b18:	cbz	x0, 2b44 <PyThread_free_lock@plt+0xb34>
    2b1c:	str	xzr, [sp, #112]
    2b20:	bl	2378 <PyThread_free_lock@plt+0x368>
    2b24:	b	2b44 <PyThread_free_lock@plt+0xb34>
    2b28:	ldr	x0, [sp, #112]
    2b2c:	ldr	x1, [x19, #40]
    2b30:	add	x0, x0, #0x20
    2b34:	sub	x1, x1, x0
    2b38:	mov	x0, x23
    2b3c:	bl	1cf0 <_PyBytes_Resize@plt>
    2b40:	cbnz	w0, 2b14 <PyThread_free_lock@plt+0xb04>
    2b44:	mov	x0, x22
    2b48:	bl	1d20 <PyBuffer_Release@plt>
    2b4c:	ldr	x0, [x19, #160]
    2b50:	bl	1f20 <PyThread_release_lock@plt>
    2b54:	ldr	x0, [sp, #112]
    2b58:	ldp	x19, x20, [sp, #16]
    2b5c:	ldp	x21, x22, [sp, #32]
    2b60:	ldp	x23, x24, [sp, #48]
    2b64:	ldp	x25, x26, [sp, #64]
    2b68:	ldp	x27, x28, [sp, #80]
    2b6c:	ldp	x29, x30, [sp], #208
    2b70:	ret
    2b74:	sub	sp, sp, #0x100
    2b78:	stp	x29, x30, [sp, #16]
    2b7c:	add	x29, sp, #0x10
    2b80:	stp	x19, x20, [sp, #32]
    2b84:	mov	x20, x0
    2b88:	stp	x21, x22, [sp, #48]
    2b8c:	mov	x21, x1
    2b90:	mov	x22, x2
    2b94:	stp	x23, x24, [sp, #64]
    2b98:	stp	x25, x26, [sp, #80]
    2b9c:	stp	x27, x28, [sp, #96]
    2ba0:	cbz	x3, 2c44 <PyThread_free_lock@plt+0xc34>
    2ba4:	ldr	x23, [x3, #16]
    2ba8:	str	xzr, [sp, #136]
    2bac:	stp	xzr, xzr, [sp, #176]
    2bb0:	sub	x0, x22, #0x1
    2bb4:	cmp	x3, #0x0
    2bb8:	stp	xzr, xzr, [sp, #192]
    2bbc:	ccmp	x0, #0x1, #0x2, eq  // eq = none
    2bc0:	stp	xzr, xzr, [sp, #208]
    2bc4:	stp	xzr, xzr, [sp, #224]
    2bc8:	stp	xzr, xzr, [sp, #240]
    2bcc:	b.hi	2bd4 <PyThread_free_lock@plt+0xbc4>  // b.pmore
    2bd0:	cbnz	x21, 2c4c <PyThread_free_lock@plt+0xc3c>
    2bd4:	add	x0, sp, #0xa0
    2bd8:	str	x0, [sp]
    2bdc:	adrp	x4, 17000 <PyInit_zlib@@Base+0x12dc8>
    2be0:	add	x4, x4, #0x1b0
    2be4:	mov	x0, x21
    2be8:	add	x4, x4, #0x1a0
    2bec:	mov	x1, x22
    2bf0:	mov	w7, #0x0                   	// #0
    2bf4:	mov	w6, #0x2                   	// #2
    2bf8:	mov	w5, #0x1                   	// #1
    2bfc:	mov	x2, #0x0                   	// #0
    2c00:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    2c04:	mov	x21, x0
    2c08:	cbnz	x0, 2c4c <PyThread_free_lock@plt+0xc3c>
    2c0c:	mov	x19, #0x0                   	// #0
    2c10:	ldr	x0, [sp, #184]
    2c14:	cbz	x0, 2c20 <PyThread_free_lock@plt+0xc10>
    2c18:	add	x0, sp, #0xb0
    2c1c:	bl	1d20 <PyBuffer_Release@plt>
    2c20:	mov	x0, x19
    2c24:	ldp	x29, x30, [sp, #16]
    2c28:	ldp	x19, x20, [sp, #32]
    2c2c:	ldp	x21, x22, [sp, #48]
    2c30:	ldp	x23, x24, [sp, #64]
    2c34:	ldp	x25, x26, [sp, #80]
    2c38:	ldp	x27, x28, [sp, #96]
    2c3c:	add	sp, sp, #0x100
    2c40:	ret
    2c44:	mov	x23, #0x0                   	// #0
    2c48:	b	2ba8 <PyThread_free_lock@plt+0xb98>
    2c4c:	ldr	x0, [x21]
    2c50:	add	x24, sp, #0xb0
    2c54:	mov	x1, x24
    2c58:	mov	w2, #0x0                   	// #0
    2c5c:	bl	1f30 <PyObject_GetBuffer@plt>
    2c60:	mov	w19, w0
    2c64:	cbnz	w0, 2c0c <PyThread_free_lock@plt+0xbfc>
    2c68:	mov	x0, x24
    2c6c:	mov	w1, #0x43                  	// #67
    2c70:	bl	1d60 <PyBuffer_IsContiguous@plt>
    2c74:	cbnz	w0, 2c9c <PyThread_free_lock@plt+0xc8c>
    2c78:	ldr	x3, [x21]
    2c7c:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    2c80:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    2c84:	add	x2, x2, #0x616
    2c88:	add	x1, x1, #0x676
    2c8c:	adrp	x0, 4000 <PyThread_free_lock@plt+0x1ff0>
    2c90:	add	x0, x0, #0x681
    2c94:	bl	1e30 <_PyArg_BadArgument@plt>
    2c98:	b	2c0c <PyThread_free_lock@plt+0xbfc>
    2c9c:	add	x22, x23, x22
    2ca0:	cmp	x22, #0x1
    2ca4:	b.ne	2cd4 <PyThread_free_lock@plt+0xcc4>  // b.any
    2ca8:	ldr	x22, [sp, #136]
    2cac:	str	xzr, [sp, #152]
    2cb0:	cmp	x22, #0x0
    2cb4:	b.ge	2ce8 <PyThread_free_lock@plt+0xcd8>  // b.tcont
    2cb8:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    2cbc:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    2cc0:	add	x1, x1, #0x68c
    2cc4:	ldr	x0, [x0, #4032]
    2cc8:	ldr	x0, [x0]
    2ccc:	bl	1dc0 <PyErr_SetString@plt>
    2cd0:	b	2c0c <PyThread_free_lock@plt+0xbfc>
    2cd4:	ldr	x0, [x21, #8]
    2cd8:	add	x1, sp, #0x88
    2cdc:	bl	2624 <PyThread_free_lock@plt+0x614>
    2ce0:	cbnz	w0, 2ca8 <PyThread_free_lock@plt+0xc98>
    2ce4:	b	2c0c <PyThread_free_lock@plt+0xbfc>
    2ce8:	ldr	x0, [sp, #176]
    2cec:	str	x0, [x20, #16]
    2cf0:	ldr	x0, [sp, #192]
    2cf4:	mov	x23, #0x7fffffffffffffff    	// #9223372036854775807
    2cf8:	csel	x23, x22, x23, ne  // ne = any
    2cfc:	str	x0, [sp, #144]
    2d00:	mov	x0, #0x3fff                	// #16383
    2d04:	ccmp	x22, x0, #0x0, ne  // ne = any
    2d08:	mov	x21, #0x4000                	// #16384
    2d0c:	csel	x21, x22, x21, le
    2d10:	add	x27, sp, #0x90
    2d14:	add	x28, x20, #0x18
    2d18:	bl	1fa0 <PyEval_SaveThread@plt>
    2d1c:	mov	x25, x0
    2d20:	ldr	x0, [x20, #160]
    2d24:	mov	w1, #0x1                   	// #1
    2d28:	add	x26, x20, #0x10
    2d2c:	bl	1da0 <PyThread_acquire_lock@plt>
    2d30:	mov	x0, x25
    2d34:	add	x25, sp, #0x98
    2d38:	bl	1d10 <PyEval_RestoreThread@plt>
    2d3c:	mov	x1, x27
    2d40:	mov	x0, x28
    2d44:	bl	2228 <PyThread_free_lock@plt+0x218>
    2d48:	mov	x2, x21
    2d4c:	mov	x3, x23
    2d50:	mov	x1, x25
    2d54:	mov	x0, x26
    2d58:	bl	2128 <PyThread_free_lock@plt+0x118>
    2d5c:	mov	x21, x0
    2d60:	cmn	x0, #0x2
    2d64:	b.ne	2d84 <PyThread_free_lock@plt+0xd74>  // b.any
    2d68:	cbnz	x22, 2dfc <PyThread_free_lock@plt+0xdec>
    2d6c:	bl	1d90 <PyErr_NoMemory@plt>
    2d70:	ldr	x0, [sp, #152]
    2d74:	cbz	x0, 2e38 <PyThread_free_lock@plt+0xe28>
    2d78:	str	xzr, [sp, #152]
    2d7c:	bl	2378 <PyThread_free_lock@plt+0x368>
    2d80:	b	2e38 <PyThread_free_lock@plt+0xe28>
    2d84:	tbnz	x0, #63, 2d70 <PyThread_free_lock@plt+0xd60>
    2d88:	bl	1fa0 <PyEval_SaveThread@plt>
    2d8c:	mov	x2, x0
    2d90:	mov	w1, #0x2                   	// #2
    2d94:	mov	x0, x26
    2d98:	str	x2, [sp, #120]
    2d9c:	bl	1d00 <inflate@plt>
    2da0:	mov	w19, w0
    2da4:	ldr	x2, [sp, #120]
    2da8:	mov	x0, x2
    2dac:	bl	1d10 <PyEval_RestoreThread@plt>
    2db0:	cmn	w19, #0x5
    2db4:	b.eq	2ddc <PyThread_free_lock@plt+0xdcc>  // b.none
    2db8:	cmp	w19, #0x1
    2dbc:	b.ls	2ddc <PyThread_free_lock@plt+0xdcc>  // b.plast
    2dc0:	cmp	w19, #0x2
    2dc4:	b.ne	2dfc <PyThread_free_lock@plt+0xdec>  // b.any
    2dc8:	ldr	x0, [x20, #152]
    2dcc:	cbz	x0, 2dfc <PyThread_free_lock@plt+0xdec>
    2dd0:	mov	x0, x20
    2dd4:	bl	22c8 <PyThread_free_lock@plt+0x2b8>
    2dd8:	tbnz	w0, #31, 2d70 <PyThread_free_lock@plt+0xd60>
    2ddc:	ldr	w0, [x20, #48]
    2de0:	cbz	w0, 2d48 <PyThread_free_lock@plt+0xd38>
    2de4:	cmp	w19, #0x2
    2de8:	b.eq	2d48 <PyThread_free_lock@plt+0xd38>  // b.none
    2dec:	cmp	w19, #0x1
    2df0:	b.eq	2dfc <PyThread_free_lock@plt+0xdec>  // b.none
    2df4:	ldr	x0, [sp, #144]
    2df8:	cbnz	x0, 2d3c <PyThread_free_lock@plt+0xd2c>
    2dfc:	mov	w2, w19
    2e00:	mov	x1, x24
    2e04:	mov	x0, x20
    2e08:	bl	282c <PyThread_free_lock@plt+0x81c>
    2e0c:	tbnz	w0, #31, 2d70 <PyThread_free_lock@plt+0xd60>
    2e10:	cmp	w19, #0x1
    2e14:	b.ne	2e48 <PyThread_free_lock@plt+0xe38>  // b.any
    2e18:	strb	w19, [x20, #144]
    2e1c:	ldr	x0, [sp, #152]
    2e20:	ldr	x1, [x20, #40]
    2e24:	add	x0, x0, #0x20
    2e28:	sub	x1, x1, x0
    2e2c:	mov	x0, x25
    2e30:	bl	1cf0 <_PyBytes_Resize@plt>
    2e34:	cbnz	w0, 2d70 <PyThread_free_lock@plt+0xd60>
    2e38:	ldr	x0, [x20, #160]
    2e3c:	bl	1f20 <PyThread_release_lock@plt>
    2e40:	ldr	x19, [sp, #152]
    2e44:	b	2c10 <PyThread_free_lock@plt+0xc00>
    2e48:	cmp	w19, #0x0
    2e4c:	ccmn	w19, #0x5, #0x4, ne  // ne = any
    2e50:	b.eq	2e1c <PyThread_free_lock@plt+0xe0c>  // b.none
    2e54:	ldr	x0, [x20, #64]
    2e58:	mov	w1, w19
    2e5c:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    2e60:	add	x2, x2, #0x775
    2e64:	bl	2248 <PyThread_free_lock@plt+0x238>
    2e68:	b	2d70 <PyThread_free_lock@plt+0xd60>
    2e6c:	sub	sp, sp, #0x50
    2e70:	stp	x29, x30, [sp, #16]
    2e74:	add	x29, sp, #0x10
    2e78:	stp	x19, x20, [sp, #32]
    2e7c:	mov	x19, x1
    2e80:	mov	x1, x2
    2e84:	str	x21, [sp, #48]
    2e88:	cbz	x3, 2ef4 <PyThread_free_lock@plt+0xee4>
    2e8c:	ldr	x20, [x3, #16]
    2e90:	add	x20, x20, x1
    2e94:	cbnz	x3, 2ea4 <PyThread_free_lock@plt+0xe94>
    2e98:	cmp	x19, #0x0
    2e9c:	ccmp	x1, #0x2, #0x2, ne  // ne = any
    2ea0:	b.ls	2efc <PyThread_free_lock@plt+0xeec>  // b.plast
    2ea4:	add	x0, sp, #0x40
    2ea8:	str	x0, [sp]
    2eac:	adrp	x4, 17000 <PyInit_zlib@@Base+0x12dc8>
    2eb0:	add	x4, x4, #0x1b0
    2eb4:	mov	x0, x19
    2eb8:	add	x4, x4, #0x1e0
    2ebc:	mov	w7, #0x0                   	// #0
    2ec0:	mov	w6, #0x2                   	// #2
    2ec4:	mov	w5, #0x0                   	// #0
    2ec8:	mov	x2, #0x0                   	// #0
    2ecc:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    2ed0:	mov	x19, x0
    2ed4:	cbnz	x0, 2efc <PyThread_free_lock@plt+0xeec>
    2ed8:	mov	x19, #0x0                   	// #0
    2edc:	mov	x0, x19
    2ee0:	ldp	x29, x30, [sp, #16]
    2ee4:	ldp	x19, x20, [sp, #32]
    2ee8:	ldr	x21, [sp, #48]
    2eec:	add	sp, sp, #0x50
    2ef0:	ret
    2ef4:	mov	x20, #0x0                   	// #0
    2ef8:	b	2e90 <PyThread_free_lock@plt+0xe80>
    2efc:	cbz	x20, 2f9c <PyThread_free_lock@plt+0xf8c>
    2f00:	ldr	x0, [x19]
    2f04:	cbz	x0, 2f70 <PyThread_free_lock@plt+0xf60>
    2f08:	adrp	x1, 16000 <PyInit_zlib@@Base+0x11dc8>
    2f0c:	ldr	x0, [x0, #8]
    2f10:	ldr	x1, [x1, #4008]
    2f14:	cmp	x0, x1
    2f18:	b.ne	2f38 <PyThread_free_lock@plt+0xf28>  // b.any
    2f1c:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    2f20:	add	x1, x1, #0x6ac
    2f24:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    2f28:	ldr	x0, [x0, #4040]
    2f2c:	ldr	x0, [x0]
    2f30:	bl	1dc0 <PyErr_SetString@plt>
    2f34:	b	2ed8 <PyThread_free_lock@plt+0xec8>
    2f38:	bl	1fd0 <PyType_IsSubtype@plt>
    2f3c:	cbnz	w0, 2f1c <PyThread_free_lock@plt+0xf0c>
    2f40:	ldr	x0, [x19]
    2f44:	bl	1ff0 <_PyLong_AsInt@plt>
    2f48:	mov	w21, w0
    2f4c:	cmn	w0, #0x1
    2f50:	b.eq	2f64 <PyThread_free_lock@plt+0xf54>  // b.none
    2f54:	cmp	x20, #0x1
    2f58:	b.ne	2f74 <PyThread_free_lock@plt+0xf64>  // b.any
    2f5c:	mov	x20, #0x0                   	// #0
    2f60:	b	2fa4 <PyThread_free_lock@plt+0xf94>
    2f64:	bl	1eb0 <PyErr_Occurred@plt>
    2f68:	cbz	x0, 2f54 <PyThread_free_lock@plt+0xf44>
    2f6c:	b	2ed8 <PyThread_free_lock@plt+0xec8>
    2f70:	mov	w21, #0xf                   	// #15
    2f74:	ldr	x20, [x19, #8]
    2f78:	cbz	x20, 2fa4 <PyThread_free_lock@plt+0xf94>
    2f7c:	ldr	x0, [x20, #8]
    2f80:	ldr	x0, [x0, #160]
    2f84:	cbz	x0, 2f90 <PyThread_free_lock@plt+0xf80>
    2f88:	ldr	x0, [x0]
    2f8c:	cbnz	x0, 2fa4 <PyThread_free_lock@plt+0xf94>
    2f90:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    2f94:	add	x1, x1, #0x6d1
    2f98:	b	2f24 <PyThread_free_lock@plt+0xf14>
    2f9c:	mov	x20, #0x0                   	// #0
    2fa0:	mov	w21, #0xf                   	// #15
    2fa4:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12dc8>
    2fa8:	add	x0, x0, #0x1b0
    2fac:	bl	2390 <PyThread_free_lock@plt+0x380>
    2fb0:	mov	x19, x0
    2fb4:	cbz	x0, 2ed8 <PyThread_free_lock@plt+0xec8>
    2fb8:	adrp	x0, 2000 <deflateSetDictionary@plt>
    2fbc:	add	x0, x0, #0xfc
    2fc0:	str	xzr, [x19, #16]
    2fc4:	str	wzr, [x19, #24]
    2fc8:	str	x0, [x19, #80]
    2fcc:	adrp	x0, 2000 <deflateSetDictionary@plt>
    2fd0:	add	x0, x0, #0xf4
    2fd4:	str	x0, [x19, #88]
    2fd8:	str	xzr, [x19, #96]
    2fdc:	cbz	x20, 2ff0 <PyThread_free_lock@plt+0xfe0>
    2fe0:	ldr	x0, [x20]
    2fe4:	add	x0, x0, #0x1
    2fe8:	str	x0, [x20]
    2fec:	str	x20, [x19, #152]
    2ff0:	mov	w1, w21
    2ff4:	add	x0, x19, #0x10
    2ff8:	mov	w3, #0x70                  	// #112
    2ffc:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    3000:	add	x2, x2, #0x701
    3004:	bl	1f80 <inflateInit2_@plt>
    3008:	mov	w1, w0
    300c:	cmn	w0, #0x2
    3010:	b.eq	3068 <PyThread_free_lock@plt+0x1058>  // b.none
    3014:	cbz	w0, 303c <PyThread_free_lock@plt+0x102c>
    3018:	cmn	w0, #0x4
    301c:	b.ne	3084 <PyThread_free_lock@plt+0x1074>  // b.any
    3020:	mov	x0, x19
    3024:	bl	2378 <PyThread_free_lock@plt+0x368>
    3028:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    302c:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3030:	add	x1, x1, #0x5c4
    3034:	ldr	x0, [x0, #4024]
    3038:	b	2f2c <PyThread_free_lock@plt+0xf1c>
    303c:	mov	w0, #0x1                   	// #1
    3040:	str	w0, [x19, #148]
    3044:	ldr	x0, [x19, #152]
    3048:	cbz	x0, 2edc <PyThread_free_lock@plt+0xecc>
    304c:	tbz	w21, #31, 2edc <PyThread_free_lock@plt+0xecc>
    3050:	mov	x0, x19
    3054:	bl	22c8 <PyThread_free_lock@plt+0x2b8>
    3058:	tbz	w0, #31, 2edc <PyThread_free_lock@plt+0xecc>
    305c:	mov	x0, x19
    3060:	bl	2378 <PyThread_free_lock@plt+0x368>
    3064:	b	2ed8 <PyThread_free_lock@plt+0xec8>
    3068:	mov	x0, x19
    306c:	bl	2378 <PyThread_free_lock@plt+0x368>
    3070:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    3074:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3078:	add	x1, x1, #0x708
    307c:	ldr	x0, [x0, #4032]
    3080:	b	2f2c <PyThread_free_lock@plt+0xf1c>
    3084:	ldr	x0, [x19, #64]
    3088:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    308c:	add	x2, x2, #0x726
    3090:	bl	2248 <PyThread_free_lock@plt+0x238>
    3094:	b	305c <PyThread_free_lock@plt+0x104c>
    3098:	sub	sp, sp, #0x150
    309c:	stp	x29, x30, [sp, #16]
    30a0:	add	x29, sp, #0x10
    30a4:	stp	x19, x20, [sp, #32]
    30a8:	mov	x19, x1
    30ac:	mov	x20, x2
    30b0:	stp	x21, x22, [sp, #48]
    30b4:	stp	x23, x24, [sp, #64]
    30b8:	stp	x25, x26, [sp, #80]
    30bc:	cbz	x3, 3134 <PyThread_free_lock@plt+0x1124>
    30c0:	ldr	x21, [x3, #16]
    30c4:	mov	x0, #0x4000                	// #16384
    30c8:	str	x0, [sp, #96]
    30cc:	cmp	x3, #0x0
    30d0:	stp	xzr, xzr, [sp, #144]
    30d4:	sub	x0, x20, #0x1
    30d8:	ccmp	x0, #0x2, #0x2, eq  // eq = none
    30dc:	stp	xzr, xzr, [sp, #160]
    30e0:	stp	xzr, xzr, [sp, #176]
    30e4:	stp	xzr, xzr, [sp, #192]
    30e8:	stp	xzr, xzr, [sp, #208]
    30ec:	b.hi	30f4 <PyThread_free_lock@plt+0x10e4>  // b.pmore
    30f0:	cbnz	x19, 313c <PyThread_free_lock@plt+0x112c>
    30f4:	add	x0, sp, #0x78
    30f8:	str	x0, [sp]
    30fc:	adrp	x4, 17000 <PyInit_zlib@@Base+0x12dc8>
    3100:	add	x4, x4, #0x1b0
    3104:	mov	x0, x19
    3108:	add	x4, x4, #0x220
    310c:	mov	x1, x20
    3110:	mov	w7, #0x0                   	// #0
    3114:	mov	w6, #0x3                   	// #3
    3118:	mov	w5, #0x1                   	// #1
    311c:	mov	x2, #0x0                   	// #0
    3120:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    3124:	mov	x19, x0
    3128:	cbnz	x0, 313c <PyThread_free_lock@plt+0x112c>
    312c:	mov	x19, #0x0                   	// #0
    3130:	b	33c0 <PyThread_free_lock@plt+0x13b0>
    3134:	mov	x21, #0x0                   	// #0
    3138:	b	30c4 <PyThread_free_lock@plt+0x10b4>
    313c:	ldr	x0, [x19]
    3140:	add	x22, sp, #0x90
    3144:	mov	x1, x22
    3148:	mov	w2, #0x0                   	// #0
    314c:	bl	1f30 <PyObject_GetBuffer@plt>
    3150:	cbnz	w0, 312c <PyThread_free_lock@plt+0x111c>
    3154:	mov	x0, x22
    3158:	mov	w1, #0x43                  	// #67
    315c:	bl	1d60 <PyBuffer_IsContiguous@plt>
    3160:	cbnz	w0, 3188 <PyThread_free_lock@plt+0x1178>
    3164:	ldr	x3, [x19]
    3168:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    316c:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3170:	add	x2, x2, #0x616
    3174:	add	x1, x1, #0x676
    3178:	adrp	x0, 4000 <PyThread_free_lock@plt+0x1ff0>
    317c:	add	x0, x0, #0x681
    3180:	bl	1e30 <_PyArg_BadArgument@plt>
    3184:	b	312c <PyThread_free_lock@plt+0x111c>
    3188:	add	x21, x21, x20
    318c:	cmp	x21, #0x1
    3190:	b.eq	3238 <PyThread_free_lock@plt+0x1228>  // b.none
    3194:	ldr	x0, [x19, #8]
    3198:	cbz	x0, 3220 <PyThread_free_lock@plt+0x1210>
    319c:	adrp	x1, 16000 <PyInit_zlib@@Base+0x11dc8>
    31a0:	ldr	x0, [x0, #8]
    31a4:	ldr	x1, [x1, #4008]
    31a8:	cmp	x0, x1
    31ac:	b.ne	31cc <PyThread_free_lock@plt+0x11bc>  // b.any
    31b0:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    31b4:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    31b8:	add	x1, x1, #0x6ac
    31bc:	ldr	x0, [x0, #4040]
    31c0:	ldr	x0, [x0]
    31c4:	bl	1dc0 <PyErr_SetString@plt>
    31c8:	b	312c <PyThread_free_lock@plt+0x111c>
    31cc:	bl	1fd0 <PyType_IsSubtype@plt>
    31d0:	cbnz	w0, 31b0 <PyThread_free_lock@plt+0x11a0>
    31d4:	ldr	x0, [x19, #8]
    31d8:	bl	1ff0 <_PyLong_AsInt@plt>
    31dc:	mov	w20, w0
    31e0:	cmn	w0, #0x1
    31e4:	b.eq	3214 <PyThread_free_lock@plt+0x1204>  // b.none
    31e8:	cmp	x21, #0x2
    31ec:	b.ne	3224 <PyThread_free_lock@plt+0x1214>  // b.any
    31f0:	ldr	x21, [sp, #96]
    31f4:	str	xzr, [sp, #104]
    31f8:	cmp	x21, #0x0
    31fc:	b.ge	3240 <PyThread_free_lock@plt+0x1230>  // b.tcont
    3200:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    3204:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3208:	add	x1, x1, #0x74a
    320c:	ldr	x0, [x0, #4032]
    3210:	b	31c0 <PyThread_free_lock@plt+0x11b0>
    3214:	bl	1eb0 <PyErr_Occurred@plt>
    3218:	cbz	x0, 31e8 <PyThread_free_lock@plt+0x11d8>
    321c:	b	312c <PyThread_free_lock@plt+0x111c>
    3220:	mov	w20, #0xf                   	// #15
    3224:	ldr	x0, [x19, #16]
    3228:	add	x1, sp, #0x60
    322c:	bl	2624 <PyThread_free_lock@plt+0x614>
    3230:	cbnz	w0, 31f0 <PyThread_free_lock@plt+0x11e0>
    3234:	b	312c <PyThread_free_lock@plt+0x111c>
    3238:	mov	w20, #0xf                   	// #15
    323c:	b	31f0 <PyThread_free_lock@plt+0x11e0>
    3240:	ldr	x0, [sp, #160]
    3244:	str	x0, [sp, #112]
    3248:	adrp	x0, 2000 <deflateSetDictionary@plt>
    324c:	add	x0, x0, #0xfc
    3250:	str	x0, [sp, #288]
    3254:	adrp	x0, 2000 <deflateSetDictionary@plt>
    3258:	add	x0, x0, #0xf4
    325c:	add	x19, sp, #0xe0
    3260:	str	x0, [sp, #296]
    3264:	csinc	x21, x21, xzr, ne  // ne = any
    3268:	ldr	x0, [sp, #144]
    326c:	mov	w1, w20
    3270:	mov	w3, #0x70                  	// #112
    3274:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    3278:	add	x2, x2, #0x701
    327c:	str	x0, [sp, #224]
    3280:	mov	x0, x19
    3284:	str	wzr, [sp, #232]
    3288:	str	xzr, [sp, #304]
    328c:	bl	1f80 <inflateInit2_@plt>
    3290:	mov	w20, w0
    3294:	cmn	w0, #0x4
    3298:	b.eq	3384 <PyThread_free_lock@plt+0x1374>  // b.none
    329c:	cbnz	w0, 32f4 <PyThread_free_lock@plt+0x12e4>
    32a0:	add	x25, sp, #0x70
    32a4:	add	x26, x19, #0x8
    32a8:	add	x23, sp, #0x68
    32ac:	mov	x0, x26
    32b0:	mov	x1, x25
    32b4:	bl	2228 <PyThread_free_lock@plt+0x218>
    32b8:	ldr	x0, [sp, #112]
    32bc:	cmp	x0, #0x0
    32c0:	cset	w22, eq  // eq = none
    32c4:	lsl	w22, w22, #2
    32c8:	mov	x2, x21
    32cc:	mov	x1, x23
    32d0:	mov	x0, x19
    32d4:	bl	21f4 <PyThread_free_lock@plt+0x1e4>
    32d8:	mov	x21, x0
    32dc:	tbz	x0, #63, 330c <PyThread_free_lock@plt+0x12fc>
    32e0:	mov	x0, x19
    32e4:	bl	1e90 <inflateEnd@plt>
    32e8:	ldr	x0, [sp, #104]
    32ec:	bl	2430 <PyThread_free_lock@plt+0x420>
    32f0:	b	312c <PyThread_free_lock@plt+0x111c>
    32f4:	mov	x0, x19
    32f8:	bl	1e90 <inflateEnd@plt>
    32fc:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    3300:	add	x2, x2, #0x78e
    3304:	mov	w1, w20
    3308:	b	3408 <PyThread_free_lock@plt+0x13f8>
    330c:	bl	1fa0 <PyEval_SaveThread@plt>
    3310:	mov	x24, x0
    3314:	mov	w1, w22
    3318:	mov	x0, x19
    331c:	bl	1d00 <inflate@plt>
    3320:	mov	w20, w0
    3324:	mov	x0, x24
    3328:	bl	1d10 <PyEval_RestoreThread@plt>
    332c:	cmn	w20, #0x4
    3330:	b.eq	337c <PyThread_free_lock@plt+0x136c>  // b.none
    3334:	cmn	w20, #0x3
    3338:	b.ge	3358 <PyThread_free_lock@plt+0x1348>  // b.tcont
    333c:	cmn	w20, #0x5
    3340:	b.eq	3360 <PyThread_free_lock@plt+0x1350>  // b.none
    3344:	mov	x0, x19
    3348:	bl	1e90 <inflateEnd@plt>
    334c:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    3350:	add	x2, x2, #0x775
    3354:	b	3304 <PyThread_free_lock@plt+0x12f4>
    3358:	cmp	w20, #0x1
    335c:	b.hi	3344 <PyThread_free_lock@plt+0x1334>  // b.pmore
    3360:	ldr	w0, [sp, #256]
    3364:	cbz	w0, 32c8 <PyThread_free_lock@plt+0x12b8>
    3368:	cmp	w20, #0x1
    336c:	b.eq	33f0 <PyThread_free_lock@plt+0x13e0>  // b.none
    3370:	ldr	x0, [sp, #112]
    3374:	cbnz	x0, 32ac <PyThread_free_lock@plt+0x129c>
    3378:	b	3344 <PyThread_free_lock@plt+0x1334>
    337c:	mov	x0, x19
    3380:	bl	1e90 <inflateEnd@plt>
    3384:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    3388:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    338c:	add	x1, x1, #0x767
    3390:	ldr	x0, [x0, #4024]
    3394:	ldr	x0, [x0]
    3398:	bl	1dc0 <PyErr_SetString@plt>
    339c:	b	32e8 <PyThread_free_lock@plt+0x12d8>
    33a0:	ldr	x0, [sp, #104]
    33a4:	ldr	x1, [sp, #248]
    33a8:	add	x0, x0, #0x20
    33ac:	sub	x1, x1, x0
    33b0:	mov	x0, x23
    33b4:	bl	1cf0 <_PyBytes_Resize@plt>
    33b8:	tbnz	w0, #31, 32e8 <PyThread_free_lock@plt+0x12d8>
    33bc:	ldr	x19, [sp, #104]
    33c0:	ldr	x0, [sp, #152]
    33c4:	cbz	x0, 33d0 <PyThread_free_lock@plt+0x13c0>
    33c8:	add	x0, sp, #0x90
    33cc:	bl	1d20 <PyBuffer_Release@plt>
    33d0:	mov	x0, x19
    33d4:	ldp	x29, x30, [sp, #16]
    33d8:	ldp	x19, x20, [sp, #32]
    33dc:	ldp	x21, x22, [sp, #48]
    33e0:	ldp	x23, x24, [sp, #64]
    33e4:	ldp	x25, x26, [sp, #80]
    33e8:	add	sp, sp, #0x150
    33ec:	ret
    33f0:	mov	x0, x19
    33f4:	bl	1e90 <inflateEnd@plt>
    33f8:	mov	w1, w0
    33fc:	cbz	w0, 33a0 <PyThread_free_lock@plt+0x1390>
    3400:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    3404:	add	x2, x2, #0x658
    3408:	ldr	x0, [sp, #272]
    340c:	bl	2248 <PyThread_free_lock@plt+0x238>
    3410:	b	32e8 <PyThread_free_lock@plt+0x12d8>
    3414:	stp	x29, x30, [sp, #-144]!
    3418:	sub	x0, x2, #0x1
    341c:	cmp	x0, #0x1
    3420:	mov	x29, sp
    3424:	stp	x19, x20, [sp, #16]
    3428:	mov	x19, x1
    342c:	mov	x20, x2
    3430:	stp	x21, x22, [sp, #32]
    3434:	str	x23, [sp, #48]
    3438:	stp	xzr, xzr, [sp, #64]
    343c:	stp	xzr, xzr, [sp, #80]
    3440:	stp	xzr, xzr, [sp, #96]
    3444:	stp	xzr, xzr, [sp, #112]
    3448:	stp	xzr, xzr, [sp, #128]
    344c:	b.hi	3494 <PyThread_free_lock@plt+0x1484>  // b.pmore
    3450:	ldr	x0, [x19]
    3454:	add	x21, sp, #0x40
    3458:	mov	x1, x21
    345c:	mov	w2, #0x0                   	// #0
    3460:	bl	1f30 <PyObject_GetBuffer@plt>
    3464:	cbz	w0, 34b4 <PyThread_free_lock@plt+0x14a4>
    3468:	mov	x19, #0x0                   	// #0
    346c:	ldr	x0, [sp, #72]
    3470:	cbz	x0, 347c <PyThread_free_lock@plt+0x146c>
    3474:	add	x0, sp, #0x40
    3478:	bl	1d20 <PyBuffer_Release@plt>
    347c:	mov	x0, x19
    3480:	ldp	x19, x20, [sp, #16]
    3484:	ldp	x21, x22, [sp, #32]
    3488:	ldr	x23, [sp, #48]
    348c:	ldp	x29, x30, [sp], #144
    3490:	ret
    3494:	adrp	x0, 4000 <PyThread_free_lock@plt+0x1ff0>
    3498:	mov	x1, x20
    349c:	add	x0, x0, #0x7b1
    34a0:	mov	x3, #0x2                   	// #2
    34a4:	mov	x2, #0x1                   	// #1
    34a8:	bl	1e80 <_PyArg_CheckPositional@plt>
    34ac:	cbnz	w0, 3450 <PyThread_free_lock@plt+0x1440>
    34b0:	b	3468 <PyThread_free_lock@plt+0x1458>
    34b4:	mov	x0, x21
    34b8:	mov	w1, #0x43                  	// #67
    34bc:	bl	1d60 <PyBuffer_IsContiguous@plt>
    34c0:	cbnz	w0, 34e8 <PyThread_free_lock@plt+0x14d8>
    34c4:	ldr	x3, [x19]
    34c8:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    34cc:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    34d0:	add	x2, x2, #0x616
    34d4:	add	x1, x1, #0x676
    34d8:	adrp	x0, 4000 <PyThread_free_lock@plt+0x1ff0>
    34dc:	add	x0, x0, #0x7b1
    34e0:	bl	1e30 <_PyArg_BadArgument@plt>
    34e4:	b	3468 <PyThread_free_lock@plt+0x1458>
    34e8:	cmp	x20, #0x1
    34ec:	b.le	35a0 <PyThread_free_lock@plt+0x1590>
    34f0:	ldr	x0, [x19, #8]
    34f4:	adrp	x1, 16000 <PyInit_zlib@@Base+0x11dc8>
    34f8:	ldr	x1, [x1, #4008]
    34fc:	ldr	x0, [x0, #8]
    3500:	cmp	x0, x1
    3504:	b.ne	3524 <PyThread_free_lock@plt+0x1514>  // b.any
    3508:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    350c:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3510:	add	x1, x1, #0x6ac
    3514:	ldr	x0, [x0, #4040]
    3518:	ldr	x0, [x0]
    351c:	bl	1dc0 <PyErr_SetString@plt>
    3520:	b	3468 <PyThread_free_lock@plt+0x1458>
    3524:	bl	1fd0 <PyType_IsSubtype@plt>
    3528:	cbnz	w0, 3508 <PyThread_free_lock@plt+0x14f8>
    352c:	ldr	x0, [x19, #8]
    3530:	bl	1e60 <PyLong_AsUnsignedLongMask@plt>
    3534:	mov	w20, w0
    3538:	cmn	w0, #0x1
    353c:	b.ne	3548 <PyThread_free_lock@plt+0x1538>  // b.any
    3540:	bl	1eb0 <PyErr_Occurred@plt>
    3544:	cbnz	x0, 3468 <PyThread_free_lock@plt+0x1458>
    3548:	ldr	x19, [sp, #80]
    354c:	mov	x0, #0x1400                	// #5120
    3550:	ldr	x21, [sp, #64]
    3554:	cmp	x19, x0
    3558:	b.le	35bc <PyThread_free_lock@plt+0x15ac>
    355c:	bl	1fa0 <PyEval_SaveThread@plt>
    3560:	add	x21, x21, x19
    3564:	mov	x22, x0
    3568:	mov	x23, #0xffffffff            	// #4294967295
    356c:	sub	x1, x21, x19
    3570:	mov	w0, w20
    3574:	cmp	x19, x23
    3578:	b.gt	35a8 <PyThread_free_lock@plt+0x1598>
    357c:	mov	w2, w19
    3580:	bl	1d50 <crc32@plt>
    3584:	mov	w19, w0
    3588:	mov	x0, x22
    358c:	bl	1d10 <PyEval_RestoreThread@plt>
    3590:	mov	w0, w19
    3594:	bl	1f50 <PyLong_FromUnsignedLong@plt>
    3598:	mov	x19, x0
    359c:	b	346c <PyThread_free_lock@plt+0x145c>
    35a0:	mov	w20, #0x0                   	// #0
    35a4:	b	3548 <PyThread_free_lock@plt+0x1538>
    35a8:	mov	w2, #0xffffffff            	// #-1
    35ac:	sub	x19, x19, x23
    35b0:	bl	1d50 <crc32@plt>
    35b4:	mov	w20, w0
    35b8:	b	356c <PyThread_free_lock@plt+0x155c>
    35bc:	mov	w2, w19
    35c0:	mov	x1, x21
    35c4:	mov	w0, w20
    35c8:	bl	1d50 <crc32@plt>
    35cc:	mov	w19, w0
    35d0:	b	3590 <PyThread_free_lock@plt+0x1580>
    35d4:	sub	sp, sp, #0xe0
    35d8:	stp	x29, x30, [sp, #16]
    35dc:	add	x29, sp, #0x10
    35e0:	stp	x19, x20, [sp, #32]
    35e4:	mov	x19, x1
    35e8:	mov	x1, x2
    35ec:	stp	x21, x22, [sp, #48]
    35f0:	stp	x23, x24, [sp, #64]
    35f4:	str	x25, [sp, #80]
    35f8:	cbz	x3, 3698 <PyThread_free_lock@plt+0x1688>
    35fc:	ldr	x21, [x3, #16]
    3600:	stp	xzr, xzr, [sp, #144]
    3604:	add	x21, x21, x1
    3608:	stp	xzr, xzr, [sp, #160]
    360c:	stp	xzr, xzr, [sp, #176]
    3610:	stp	xzr, xzr, [sp, #192]
    3614:	stp	xzr, xzr, [sp, #208]
    3618:	cbnz	x3, 3628 <PyThread_free_lock@plt+0x1618>
    361c:	cmp	x19, #0x0
    3620:	ccmp	x1, #0x6, #0x2, ne  // ne = any
    3624:	b.ls	365c <PyThread_free_lock@plt+0x164c>  // b.plast
    3628:	add	x0, sp, #0x60
    362c:	str	x0, [sp]
    3630:	adrp	x4, 17000 <PyInit_zlib@@Base+0x12dc8>
    3634:	add	x4, x4, #0x1b0
    3638:	mov	x0, x19
    363c:	add	x4, x4, #0x260
    3640:	mov	w7, #0x0                   	// #0
    3644:	mov	w6, #0x6                   	// #6
    3648:	mov	w5, #0x0                   	// #0
    364c:	mov	x2, #0x0                   	// #0
    3650:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    3654:	mov	x19, x0
    3658:	cbz	x0, 36e0 <PyThread_free_lock@plt+0x16d0>
    365c:	cbz	x21, 38f4 <PyThread_free_lock@plt+0x18e4>
    3660:	ldr	x0, [x19]
    3664:	cbz	x0, 3714 <PyThread_free_lock@plt+0x1704>
    3668:	adrp	x1, 16000 <PyInit_zlib@@Base+0x11dc8>
    366c:	ldr	x0, [x0, #8]
    3670:	ldr	x1, [x1, #4008]
    3674:	cmp	x0, x1
    3678:	b.ne	36a0 <PyThread_free_lock@plt+0x1690>  // b.any
    367c:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    3680:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3684:	add	x1, x1, #0x6ac
    3688:	ldr	x0, [x0, #4040]
    368c:	ldr	x0, [x0]
    3690:	bl	1dc0 <PyErr_SetString@plt>
    3694:	b	36e0 <PyThread_free_lock@plt+0x16d0>
    3698:	mov	x21, #0x0                   	// #0
    369c:	b	3600 <PyThread_free_lock@plt+0x15f0>
    36a0:	bl	1fd0 <PyType_IsSubtype@plt>
    36a4:	mov	w20, w0
    36a8:	cbnz	w0, 367c <PyThread_free_lock@plt+0x166c>
    36ac:	ldr	x0, [x19]
    36b0:	bl	1ff0 <_PyLong_AsInt@plt>
    36b4:	mov	w25, w0
    36b8:	cmn	w0, #0x1
    36bc:	b.eq	36d8 <PyThread_free_lock@plt+0x16c8>  // b.none
    36c0:	subs	x21, x21, #0x1
    36c4:	b.ne	3718 <PyThread_free_lock@plt+0x1708>  // b.any
    36c8:	mov	w22, #0x8                   	// #8
    36cc:	mov	w23, #0xf                   	// #15
    36d0:	mov	w24, w22
    36d4:	b	3818 <PyThread_free_lock@plt+0x1808>
    36d8:	bl	1eb0 <PyErr_Occurred@plt>
    36dc:	cbz	x0, 36c0 <PyThread_free_lock@plt+0x16b0>
    36e0:	mov	x19, #0x0                   	// #0
    36e4:	ldr	x0, [sp, #152]
    36e8:	cbz	x0, 36f4 <PyThread_free_lock@plt+0x16e4>
    36ec:	add	x0, sp, #0x90
    36f0:	bl	1d20 <PyBuffer_Release@plt>
    36f4:	mov	x0, x19
    36f8:	ldp	x29, x30, [sp, #16]
    36fc:	ldp	x19, x20, [sp, #32]
    3700:	ldp	x21, x22, [sp, #48]
    3704:	ldp	x23, x24, [sp, #64]
    3708:	ldr	x25, [sp, #80]
    370c:	add	sp, sp, #0xe0
    3710:	ret
    3714:	mov	w25, #0xffffffff            	// #-1
    3718:	ldr	x0, [x19, #8]
    371c:	cbz	x0, 3774 <PyThread_free_lock@plt+0x1764>
    3720:	adrp	x1, 16000 <PyInit_zlib@@Base+0x11dc8>
    3724:	ldr	x0, [x0, #8]
    3728:	ldr	x1, [x1, #4008]
    372c:	cmp	x0, x1
    3730:	b.eq	367c <PyThread_free_lock@plt+0x166c>  // b.none
    3734:	bl	1fd0 <PyType_IsSubtype@plt>
    3738:	mov	w20, w0
    373c:	cbnz	w0, 367c <PyThread_free_lock@plt+0x166c>
    3740:	ldr	x0, [x19, #8]
    3744:	bl	1ff0 <_PyLong_AsInt@plt>
    3748:	mov	w24, w0
    374c:	cmn	w0, #0x1
    3750:	b.eq	3768 <PyThread_free_lock@plt+0x1758>  // b.none
    3754:	subs	x21, x21, #0x1
    3758:	b.ne	3778 <PyThread_free_lock@plt+0x1768>  // b.any
    375c:	mov	w22, #0x8                   	// #8
    3760:	mov	w23, #0xf                   	// #15
    3764:	b	3818 <PyThread_free_lock@plt+0x1808>
    3768:	bl	1eb0 <PyErr_Occurred@plt>
    376c:	cbz	x0, 3754 <PyThread_free_lock@plt+0x1744>
    3770:	b	36e0 <PyThread_free_lock@plt+0x16d0>
    3774:	mov	w24, #0x8                   	// #8
    3778:	ldr	x0, [x19, #16]
    377c:	cbz	x0, 37d0 <PyThread_free_lock@plt+0x17c0>
    3780:	adrp	x1, 16000 <PyInit_zlib@@Base+0x11dc8>
    3784:	ldr	x0, [x0, #8]
    3788:	ldr	x1, [x1, #4008]
    378c:	cmp	x0, x1
    3790:	b.eq	367c <PyThread_free_lock@plt+0x166c>  // b.none
    3794:	bl	1fd0 <PyType_IsSubtype@plt>
    3798:	mov	w20, w0
    379c:	cbnz	w0, 367c <PyThread_free_lock@plt+0x166c>
    37a0:	ldr	x0, [x19, #16]
    37a4:	bl	1ff0 <_PyLong_AsInt@plt>
    37a8:	mov	w23, w0
    37ac:	cmn	w0, #0x1
    37b0:	b.eq	37c4 <PyThread_free_lock@plt+0x17b4>  // b.none
    37b4:	subs	x21, x21, #0x1
    37b8:	b.ne	37d4 <PyThread_free_lock@plt+0x17c4>  // b.any
    37bc:	mov	w22, #0x8                   	// #8
    37c0:	b	3818 <PyThread_free_lock@plt+0x1808>
    37c4:	bl	1eb0 <PyErr_Occurred@plt>
    37c8:	cbz	x0, 37b4 <PyThread_free_lock@plt+0x17a4>
    37cc:	b	36e0 <PyThread_free_lock@plt+0x16d0>
    37d0:	mov	w23, #0xf                   	// #15
    37d4:	ldr	x0, [x19, #24]
    37d8:	cbz	x0, 3850 <PyThread_free_lock@plt+0x1840>
    37dc:	adrp	x1, 16000 <PyInit_zlib@@Base+0x11dc8>
    37e0:	ldr	x0, [x0, #8]
    37e4:	ldr	x1, [x1, #4008]
    37e8:	cmp	x0, x1
    37ec:	b.eq	367c <PyThread_free_lock@plt+0x166c>  // b.none
    37f0:	bl	1fd0 <PyType_IsSubtype@plt>
    37f4:	mov	w20, w0
    37f8:	cbnz	w0, 367c <PyThread_free_lock@plt+0x166c>
    37fc:	ldr	x0, [x19, #24]
    3800:	bl	1ff0 <_PyLong_AsInt@plt>
    3804:	mov	w22, w0
    3808:	cmn	w0, #0x1
    380c:	b.eq	3844 <PyThread_free_lock@plt+0x1834>  // b.none
    3810:	subs	x21, x21, #0x1
    3814:	b.ne	3854 <PyThread_free_lock@plt+0x1844>  // b.any
    3818:	ldr	x0, [sp, #144]
    381c:	cbz	x0, 390c <PyThread_free_lock@plt+0x18fc>
    3820:	ldr	x1, [sp, #160]
    3824:	mov	x0, #0xffffffff            	// #4294967295
    3828:	cmp	x1, x0
    382c:	b.ls	390c <PyThread_free_lock@plt+0x18fc>  // b.plast
    3830:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    3834:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3838:	add	x1, x1, #0x551
    383c:	ldr	x0, [x0, #4056]
    3840:	b	368c <PyThread_free_lock@plt+0x167c>
    3844:	bl	1eb0 <PyErr_Occurred@plt>
    3848:	cbz	x0, 3810 <PyThread_free_lock@plt+0x1800>
    384c:	b	36e0 <PyThread_free_lock@plt+0x16d0>
    3850:	mov	w22, #0x8                   	// #8
    3854:	ldr	x0, [x19, #32]
    3858:	cbz	x0, 38ec <PyThread_free_lock@plt+0x18dc>
    385c:	adrp	x1, 16000 <PyInit_zlib@@Base+0x11dc8>
    3860:	ldr	x0, [x0, #8]
    3864:	ldr	x1, [x1, #4008]
    3868:	cmp	x0, x1
    386c:	b.eq	367c <PyThread_free_lock@plt+0x166c>  // b.none
    3870:	bl	1fd0 <PyType_IsSubtype@plt>
    3874:	cbnz	w0, 367c <PyThread_free_lock@plt+0x166c>
    3878:	ldr	x0, [x19, #32]
    387c:	bl	1ff0 <_PyLong_AsInt@plt>
    3880:	mov	w20, w0
    3884:	cmn	w0, #0x1
    3888:	b.eq	38e0 <PyThread_free_lock@plt+0x18d0>  // b.none
    388c:	cmp	x21, #0x1
    3890:	b.eq	3818 <PyThread_free_lock@plt+0x1808>  // b.none
    3894:	ldr	x0, [x19, #40]
    3898:	add	x21, sp, #0x90
    389c:	mov	x1, x21
    38a0:	mov	w2, #0x0                   	// #0
    38a4:	bl	1f30 <PyObject_GetBuffer@plt>
    38a8:	cbnz	w0, 36e0 <PyThread_free_lock@plt+0x16d0>
    38ac:	mov	x0, x21
    38b0:	mov	w1, #0x43                  	// #67
    38b4:	bl	1d60 <PyBuffer_IsContiguous@plt>
    38b8:	cbnz	w0, 3818 <PyThread_free_lock@plt+0x1808>
    38bc:	ldr	x3, [x19, #40]
    38c0:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    38c4:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    38c8:	add	x2, x2, #0x616
    38cc:	add	x1, x1, #0x7b7
    38d0:	adrp	x0, 4000 <PyThread_free_lock@plt+0x1ff0>
    38d4:	add	x0, x0, #0xa3f
    38d8:	bl	1e30 <_PyArg_BadArgument@plt>
    38dc:	b	36e0 <PyThread_free_lock@plt+0x16d0>
    38e0:	bl	1eb0 <PyErr_Occurred@plt>
    38e4:	cbz	x0, 388c <PyThread_free_lock@plt+0x187c>
    38e8:	b	36e0 <PyThread_free_lock@plt+0x16d0>
    38ec:	mov	w20, #0x0                   	// #0
    38f0:	b	3894 <PyThread_free_lock@plt+0x1884>
    38f4:	mov	w22, #0x8                   	// #8
    38f8:	mov	w20, #0x0                   	// #0
    38fc:	mov	w24, w22
    3900:	mov	w23, #0xf                   	// #15
    3904:	mov	w25, #0xffffffff            	// #-1
    3908:	b	3818 <PyThread_free_lock@plt+0x1808>
    390c:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12dc8>
    3910:	add	x0, x0, #0x1b0
    3914:	add	x0, x0, #0x2a0
    3918:	bl	2390 <PyThread_free_lock@plt+0x380>
    391c:	mov	x19, x0
    3920:	cbz	x0, 36e0 <PyThread_free_lock@plt+0x16d0>
    3924:	adrp	x0, 2000 <deflateSetDictionary@plt>
    3928:	add	x0, x0, #0xfc
    392c:	str	xzr, [x19, #16]
    3930:	mov	w1, w25
    3934:	str	wzr, [x19, #24]
    3938:	add	x21, x19, #0x10
    393c:	str	x0, [x19, #80]
    3940:	adrp	x0, 2000 <deflateSetDictionary@plt>
    3944:	add	x0, x0, #0xf4
    3948:	str	x0, [x19, #88]
    394c:	str	xzr, [x19, #96]
    3950:	mov	w5, w20
    3954:	mov	w4, w22
    3958:	mov	w3, w23
    395c:	mov	w2, w24
    3960:	mov	x0, x21
    3964:	mov	w7, #0x70                  	// #112
    3968:	adrp	x6, 4000 <PyThread_free_lock@plt+0x1ff0>
    396c:	add	x6, x6, #0x701
    3970:	bl	1e00 <deflateInit2_@plt>
    3974:	mov	w1, w0
    3978:	cmn	w0, #0x2
    397c:	b.eq	39f8 <PyThread_free_lock@plt+0x19e8>  // b.none
    3980:	cbz	w0, 39b0 <PyThread_free_lock@plt+0x19a0>
    3984:	cmn	w0, #0x4
    3988:	b.ne	3a04 <PyThread_free_lock@plt+0x19f4>  // b.any
    398c:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    3990:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3994:	add	x1, x1, #0x7f2
    3998:	ldr	x0, [x0, #4024]
    399c:	ldr	x0, [x0]
    39a0:	bl	1dc0 <PyErr_SetString@plt>
    39a4:	mov	x0, x19
    39a8:	bl	2378 <PyThread_free_lock@plt+0x368>
    39ac:	b	36e0 <PyThread_free_lock@plt+0x16d0>
    39b0:	ldr	x1, [sp, #144]
    39b4:	mov	w0, #0x1                   	// #1
    39b8:	str	w0, [x19, #148]
    39bc:	cbz	x1, 36e4 <PyThread_free_lock@plt+0x16d4>
    39c0:	ldr	w2, [sp, #160]
    39c4:	mov	x0, x21
    39c8:	bl	2000 <deflateSetDictionary@plt>
    39cc:	cmn	w0, #0x2
    39d0:	b.eq	39e4 <PyThread_free_lock@plt+0x19d4>  // b.none
    39d4:	cbz	w0, 36e4 <PyThread_free_lock@plt+0x16d4>
    39d8:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    39dc:	add	x1, x1, #0x7db
    39e0:	b	39ec <PyThread_free_lock@plt+0x19dc>
    39e4:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    39e8:	add	x1, x1, #0x7c8
    39ec:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    39f0:	ldr	x0, [x0, #4032]
    39f4:	b	399c <PyThread_free_lock@plt+0x198c>
    39f8:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    39fc:	add	x1, x1, #0x708
    3a00:	b	39ec <PyThread_free_lock@plt+0x19dc>
    3a04:	ldr	x0, [x19, #64]
    3a08:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    3a0c:	add	x2, x2, #0x81f
    3a10:	bl	2248 <PyThread_free_lock@plt+0x238>
    3a14:	b	39a4 <PyThread_free_lock@plt+0x1994>
    3a18:	sub	sp, sp, #0x140
    3a1c:	stp	x29, x30, [sp, #16]
    3a20:	add	x29, sp, #0x10
    3a24:	stp	x19, x20, [sp, #32]
    3a28:	mov	x19, x1
    3a2c:	mov	x20, x2
    3a30:	stp	x21, x22, [sp, #48]
    3a34:	stp	x23, x24, [sp, #64]
    3a38:	stp	x25, x26, [sp, #80]
    3a3c:	cbz	x3, 3aac <PyThread_free_lock@plt+0x1a9c>
    3a40:	ldr	x21, [x3, #16]
    3a44:	stp	xzr, xzr, [sp, #128]
    3a48:	sub	x0, x20, #0x1
    3a4c:	stp	xzr, xzr, [sp, #144]
    3a50:	cmp	x3, #0x0
    3a54:	ccmp	x0, #0x1, #0x2, eq  // eq = none
    3a58:	stp	xzr, xzr, [sp, #160]
    3a5c:	stp	xzr, xzr, [sp, #176]
    3a60:	stp	xzr, xzr, [sp, #192]
    3a64:	b.hi	3a6c <PyThread_free_lock@plt+0x1a5c>  // b.pmore
    3a68:	cbnz	x19, 3ab4 <PyThread_free_lock@plt+0x1aa4>
    3a6c:	add	x0, sp, #0x70
    3a70:	str	x0, [sp]
    3a74:	adrp	x4, 17000 <PyInit_zlib@@Base+0x12dc8>
    3a78:	add	x4, x4, #0x1b0
    3a7c:	mov	x0, x19
    3a80:	add	x4, x4, #0x440
    3a84:	mov	x1, x20
    3a88:	mov	w7, #0x0                   	// #0
    3a8c:	mov	w6, #0x2                   	// #2
    3a90:	mov	w5, #0x1                   	// #1
    3a94:	mov	x2, #0x0                   	// #0
    3a98:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    3a9c:	mov	x19, x0
    3aa0:	cbnz	x0, 3ab4 <PyThread_free_lock@plt+0x1aa4>
    3aa4:	mov	x19, #0x0                   	// #0
    3aa8:	b	3cec <PyThread_free_lock@plt+0x1cdc>
    3aac:	mov	x21, #0x0                   	// #0
    3ab0:	b	3a44 <PyThread_free_lock@plt+0x1a34>
    3ab4:	ldr	x0, [x19]
    3ab8:	add	x22, sp, #0x80
    3abc:	mov	x1, x22
    3ac0:	mov	w2, #0x0                   	// #0
    3ac4:	bl	1f30 <PyObject_GetBuffer@plt>
    3ac8:	cbnz	w0, 3aa4 <PyThread_free_lock@plt+0x1a94>
    3acc:	mov	x0, x22
    3ad0:	mov	w1, #0x43                  	// #67
    3ad4:	bl	1d60 <PyBuffer_IsContiguous@plt>
    3ad8:	cbnz	w0, 3b00 <PyThread_free_lock@plt+0x1af0>
    3adc:	ldr	x3, [x19]
    3ae0:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    3ae4:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3ae8:	add	x2, x2, #0x616
    3aec:	add	x1, x1, #0x676
    3af0:	adrp	x0, 4000 <PyThread_free_lock@plt+0x1ff0>
    3af4:	add	x0, x0, #0xa92
    3af8:	bl	1e30 <_PyArg_BadArgument@plt>
    3afc:	b	3aa4 <PyThread_free_lock@plt+0x1a94>
    3b00:	add	x20, x21, x20
    3b04:	cmp	x20, #0x1
    3b08:	b.ne	3b90 <PyThread_free_lock@plt+0x1b80>  // b.any
    3b0c:	mov	w1, #0xffffffff            	// #-1
    3b10:	ldr	x0, [sp, #144]
    3b14:	stp	xzr, x0, [sp, #96]
    3b18:	adrp	x0, 2000 <deflateSetDictionary@plt>
    3b1c:	add	x0, x0, #0xfc
    3b20:	str	x0, [sp, #272]
    3b24:	adrp	x0, 2000 <deflateSetDictionary@plt>
    3b28:	add	x0, x0, #0xf4
    3b2c:	add	x19, sp, #0xd0
    3b30:	str	x0, [sp, #280]
    3b34:	ldr	x0, [sp, #128]
    3b38:	mov	w3, #0x70                  	// #112
    3b3c:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    3b40:	add	x2, x2, #0x701
    3b44:	str	x0, [sp, #208]
    3b48:	mov	x0, x19
    3b4c:	str	xzr, [sp, #288]
    3b50:	bl	1e50 <deflateInit_@plt>
    3b54:	mov	w20, w0
    3b58:	cmn	w0, #0x2
    3b5c:	b.eq	3bec <PyThread_free_lock@plt+0x1bdc>  // b.none
    3b60:	cbz	w0, 3c20 <PyThread_free_lock@plt+0x1c10>
    3b64:	cmn	w0, #0x4
    3b68:	b.ne	3c00 <PyThread_free_lock@plt+0x1bf0>  // b.any
    3b6c:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    3b70:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3b74:	add	x1, x1, #0x841
    3b78:	ldr	x0, [x0, #4024]
    3b7c:	ldr	x0, [x0]
    3b80:	bl	1dc0 <PyErr_SetString@plt>
    3b84:	ldr	x0, [sp, #96]
    3b88:	bl	2430 <PyThread_free_lock@plt+0x420>
    3b8c:	b	3aa4 <PyThread_free_lock@plt+0x1a94>
    3b90:	ldr	x0, [x19, #8]
    3b94:	adrp	x1, 16000 <PyInit_zlib@@Base+0x11dc8>
    3b98:	ldr	x1, [x1, #4008]
    3b9c:	ldr	x0, [x0, #8]
    3ba0:	cmp	x0, x1
    3ba4:	b.ne	3bc4 <PyThread_free_lock@plt+0x1bb4>  // b.any
    3ba8:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    3bac:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3bb0:	add	x1, x1, #0x6ac
    3bb4:	ldr	x0, [x0, #4040]
    3bb8:	ldr	x0, [x0]
    3bbc:	bl	1dc0 <PyErr_SetString@plt>
    3bc0:	b	3aa4 <PyThread_free_lock@plt+0x1a94>
    3bc4:	bl	1fd0 <PyType_IsSubtype@plt>
    3bc8:	cbnz	w0, 3ba8 <PyThread_free_lock@plt+0x1b98>
    3bcc:	ldr	x0, [x19, #8]
    3bd0:	bl	1ff0 <_PyLong_AsInt@plt>
    3bd4:	mov	w1, w0
    3bd8:	cmn	w0, #0x1
    3bdc:	b.ne	3b10 <PyThread_free_lock@plt+0x1b00>  // b.any
    3be0:	bl	1eb0 <PyErr_Occurred@plt>
    3be4:	cbz	x0, 3b0c <PyThread_free_lock@plt+0x1afc>
    3be8:	b	3aa4 <PyThread_free_lock@plt+0x1a94>
    3bec:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12dc8>
    3bf0:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3bf4:	add	x1, x1, #0x866
    3bf8:	ldr	x0, [x0, #2464]
    3bfc:	b	3b80 <PyThread_free_lock@plt+0x1b70>
    3c00:	mov	x0, x19
    3c04:	bl	1f10 <deflateEnd@plt>
    3c08:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    3c0c:	mov	w1, w20
    3c10:	add	x2, x2, #0x84f
    3c14:	ldr	x0, [sp, #256]
    3c18:	bl	2248 <PyThread_free_lock@plt+0x238>
    3c1c:	b	3b84 <PyThread_free_lock@plt+0x1b74>
    3c20:	add	x25, sp, #0x68
    3c24:	add	x26, x19, #0x8
    3c28:	add	x23, sp, #0x60
    3c2c:	mov	x20, #0x4000                	// #16384
    3c30:	mov	x0, x26
    3c34:	mov	x1, x25
    3c38:	bl	2228 <PyThread_free_lock@plt+0x218>
    3c3c:	ldr	x0, [sp, #104]
    3c40:	cmp	x0, #0x0
    3c44:	cset	w21, eq  // eq = none
    3c48:	lsl	w21, w21, #2
    3c4c:	mov	x2, x20
    3c50:	mov	x1, x23
    3c54:	mov	x0, x19
    3c58:	bl	21f4 <PyThread_free_lock@plt+0x1e4>
    3c5c:	mov	x20, x0
    3c60:	tbz	x0, #63, 3c70 <PyThread_free_lock@plt+0x1c60>
    3c64:	mov	x0, x19
    3c68:	bl	1f10 <deflateEnd@plt>
    3c6c:	b	3b84 <PyThread_free_lock@plt+0x1b74>
    3c70:	bl	1fa0 <PyEval_SaveThread@plt>
    3c74:	mov	x24, x0
    3c78:	mov	w1, w21
    3c7c:	mov	x0, x19
    3c80:	bl	1dd0 <deflate@plt>
    3c84:	mov	w22, w0
    3c88:	mov	x0, x24
    3c8c:	bl	1d10 <PyEval_RestoreThread@plt>
    3c90:	cmn	w22, #0x2
    3c94:	b.ne	3cb0 <PyThread_free_lock@plt+0x1ca0>  // b.any
    3c98:	mov	x0, x19
    3c9c:	bl	1f10 <deflateEnd@plt>
    3ca0:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    3ca4:	mov	w1, w22
    3ca8:	add	x2, x2, #0x84f
    3cac:	b	3c14 <PyThread_free_lock@plt+0x1c04>
    3cb0:	ldr	w0, [sp, #240]
    3cb4:	cbz	w0, 3c4c <PyThread_free_lock@plt+0x1c3c>
    3cb8:	cbz	w21, 3c30 <PyThread_free_lock@plt+0x1c20>
    3cbc:	mov	x0, x19
    3cc0:	bl	1f10 <deflateEnd@plt>
    3cc4:	mov	w1, w0
    3cc8:	cbnz	w0, 3d1c <PyThread_free_lock@plt+0x1d0c>
    3ccc:	ldr	x0, [sp, #96]
    3cd0:	ldr	x1, [sp, #232]
    3cd4:	add	x0, x0, #0x20
    3cd8:	sub	x1, x1, x0
    3cdc:	mov	x0, x23
    3ce0:	bl	1cf0 <_PyBytes_Resize@plt>
    3ce4:	tbnz	w0, #31, 3b84 <PyThread_free_lock@plt+0x1b74>
    3ce8:	ldr	x19, [sp, #96]
    3cec:	ldr	x0, [sp, #136]
    3cf0:	cbz	x0, 3cfc <PyThread_free_lock@plt+0x1cec>
    3cf4:	add	x0, sp, #0x80
    3cf8:	bl	1d20 <PyBuffer_Release@plt>
    3cfc:	mov	x0, x19
    3d00:	ldp	x29, x30, [sp, #16]
    3d04:	ldp	x19, x20, [sp, #32]
    3d08:	ldp	x21, x22, [sp, #48]
    3d0c:	ldp	x23, x24, [sp, #64]
    3d10:	ldp	x25, x26, [sp, #80]
    3d14:	add	sp, sp, #0x140
    3d18:	ret
    3d1c:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    3d20:	add	x2, x2, #0x87c
    3d24:	b	3c14 <PyThread_free_lock@plt+0x1c04>
    3d28:	stp	x29, x30, [sp, #-144]!
    3d2c:	sub	x0, x2, #0x1
    3d30:	cmp	x0, #0x1
    3d34:	mov	x29, sp
    3d38:	stp	x19, x20, [sp, #16]
    3d3c:	mov	x19, x1
    3d40:	mov	x20, x2
    3d44:	stp	x21, x22, [sp, #32]
    3d48:	str	x23, [sp, #48]
    3d4c:	stp	xzr, xzr, [sp, #64]
    3d50:	stp	xzr, xzr, [sp, #80]
    3d54:	stp	xzr, xzr, [sp, #96]
    3d58:	stp	xzr, xzr, [sp, #112]
    3d5c:	stp	xzr, xzr, [sp, #128]
    3d60:	b.hi	3da8 <PyThread_free_lock@plt+0x1d98>  // b.pmore
    3d64:	ldr	x0, [x19]
    3d68:	add	x21, sp, #0x40
    3d6c:	mov	x1, x21
    3d70:	mov	w2, #0x0                   	// #0
    3d74:	bl	1f30 <PyObject_GetBuffer@plt>
    3d78:	cbz	w0, 3dc8 <PyThread_free_lock@plt+0x1db8>
    3d7c:	mov	x19, #0x0                   	// #0
    3d80:	ldr	x0, [sp, #72]
    3d84:	cbz	x0, 3d90 <PyThread_free_lock@plt+0x1d80>
    3d88:	add	x0, sp, #0x40
    3d8c:	bl	1d20 <PyBuffer_Release@plt>
    3d90:	mov	x0, x19
    3d94:	ldp	x19, x20, [sp, #16]
    3d98:	ldp	x21, x22, [sp, #32]
    3d9c:	ldr	x23, [sp, #48]
    3da0:	ldp	x29, x30, [sp], #144
    3da4:	ret
    3da8:	adrp	x0, 4000 <PyThread_free_lock@plt+0x1ff0>
    3dac:	mov	x1, x20
    3db0:	add	x0, x0, #0x898
    3db4:	mov	x3, #0x2                   	// #2
    3db8:	mov	x2, #0x1                   	// #1
    3dbc:	bl	1e80 <_PyArg_CheckPositional@plt>
    3dc0:	cbnz	w0, 3d64 <PyThread_free_lock@plt+0x1d54>
    3dc4:	b	3d7c <PyThread_free_lock@plt+0x1d6c>
    3dc8:	mov	x0, x21
    3dcc:	mov	w1, #0x43                  	// #67
    3dd0:	bl	1d60 <PyBuffer_IsContiguous@plt>
    3dd4:	cbnz	w0, 3dfc <PyThread_free_lock@plt+0x1dec>
    3dd8:	ldr	x3, [x19]
    3ddc:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    3de0:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3de4:	add	x2, x2, #0x616
    3de8:	add	x1, x1, #0x676
    3dec:	adrp	x0, 4000 <PyThread_free_lock@plt+0x1ff0>
    3df0:	add	x0, x0, #0x898
    3df4:	bl	1e30 <_PyArg_BadArgument@plt>
    3df8:	b	3d7c <PyThread_free_lock@plt+0x1d6c>
    3dfc:	cmp	x20, #0x1
    3e00:	b.le	3eb4 <PyThread_free_lock@plt+0x1ea4>
    3e04:	ldr	x0, [x19, #8]
    3e08:	adrp	x1, 16000 <PyInit_zlib@@Base+0x11dc8>
    3e0c:	ldr	x1, [x1, #4008]
    3e10:	ldr	x0, [x0, #8]
    3e14:	cmp	x0, x1
    3e18:	b.ne	3e38 <PyThread_free_lock@plt+0x1e28>  // b.any
    3e1c:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    3e20:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3e24:	add	x1, x1, #0x6ac
    3e28:	ldr	x0, [x0, #4040]
    3e2c:	ldr	x0, [x0]
    3e30:	bl	1dc0 <PyErr_SetString@plt>
    3e34:	b	3d7c <PyThread_free_lock@plt+0x1d6c>
    3e38:	bl	1fd0 <PyType_IsSubtype@plt>
    3e3c:	cbnz	w0, 3e1c <PyThread_free_lock@plt+0x1e0c>
    3e40:	ldr	x0, [x19, #8]
    3e44:	bl	1e60 <PyLong_AsUnsignedLongMask@plt>
    3e48:	mov	w20, w0
    3e4c:	cmn	w0, #0x1
    3e50:	b.ne	3e5c <PyThread_free_lock@plt+0x1e4c>  // b.any
    3e54:	bl	1eb0 <PyErr_Occurred@plt>
    3e58:	cbnz	x0, 3d7c <PyThread_free_lock@plt+0x1d6c>
    3e5c:	ldr	x19, [sp, #80]
    3e60:	mov	x0, #0x1400                	// #5120
    3e64:	ldr	x21, [sp, #64]
    3e68:	cmp	x19, x0
    3e6c:	b.le	3ed0 <PyThread_free_lock@plt+0x1ec0>
    3e70:	bl	1fa0 <PyEval_SaveThread@plt>
    3e74:	add	x21, x21, x19
    3e78:	mov	x22, x0
    3e7c:	mov	x23, #0xffffffff            	// #4294967295
    3e80:	sub	x1, x21, x19
    3e84:	mov	w0, w20
    3e88:	cmp	x19, x23
    3e8c:	b.gt	3ebc <PyThread_free_lock@plt+0x1eac>
    3e90:	mov	w2, w19
    3e94:	bl	1ee0 <adler32@plt>
    3e98:	mov	w19, w0
    3e9c:	mov	x0, x22
    3ea0:	bl	1d10 <PyEval_RestoreThread@plt>
    3ea4:	mov	w0, w19
    3ea8:	bl	1f50 <PyLong_FromUnsignedLong@plt>
    3eac:	mov	x19, x0
    3eb0:	b	3d80 <PyThread_free_lock@plt+0x1d70>
    3eb4:	mov	w20, #0x1                   	// #1
    3eb8:	b	3e5c <PyThread_free_lock@plt+0x1e4c>
    3ebc:	mov	w2, #0xffffffff            	// #-1
    3ec0:	sub	x19, x19, x23
    3ec4:	bl	1ee0 <adler32@plt>
    3ec8:	mov	w20, w0
    3ecc:	b	3e80 <PyThread_free_lock@plt+0x1e70>
    3ed0:	mov	w2, w19
    3ed4:	mov	x1, x21
    3ed8:	mov	w0, w20
    3edc:	bl	1ee0 <adler32@plt>
    3ee0:	mov	w19, w0
    3ee4:	b	3ea4 <PyThread_free_lock@plt+0x1e94>
    3ee8:	stp	x29, x30, [sp, #-96]!
    3eec:	cmp	x2, #0x1
    3ef0:	mov	x29, sp
    3ef4:	stp	x19, x20, [sp, #16]
    3ef8:	mov	x19, x0
    3efc:	mov	x20, x2
    3f00:	stp	x21, x22, [sp, #32]
    3f04:	mov	x21, x1
    3f08:	stp	x23, x24, [sp, #48]
    3f0c:	str	x25, [sp, #64]
    3f10:	b.hi	3f7c <PyThread_free_lock@plt+0x1f6c>  // b.pmore
    3f14:	cmp	x20, #0x0
    3f18:	b.gt	3fb4 <PyThread_free_lock@plt+0x1fa4>
    3f1c:	mov	w21, #0x4                   	// #4
    3f20:	str	xzr, [sp, #88]
    3f24:	bl	1fa0 <PyEval_SaveThread@plt>
    3f28:	mov	x20, x0
    3f2c:	ldr	x0, [x19, #160]
    3f30:	mov	w1, #0x1                   	// #1
    3f34:	add	x24, x19, #0x10
    3f38:	add	x23, sp, #0x58
    3f3c:	mov	x22, #0x4000                	// #16384
    3f40:	bl	1da0 <PyThread_acquire_lock@plt>
    3f44:	mov	x0, x20
    3f48:	bl	1d10 <PyEval_RestoreThread@plt>
    3f4c:	str	wzr, [x19, #24]
    3f50:	mov	x2, x22
    3f54:	mov	x1, x23
    3f58:	mov	x0, x24
    3f5c:	bl	21f4 <PyThread_free_lock@plt+0x1e4>
    3f60:	mov	x22, x0
    3f64:	tbz	x0, #63, 402c <PyThread_free_lock@plt+0x201c>
    3f68:	ldr	x0, [sp, #88]
    3f6c:	cbz	x0, 40bc <PyThread_free_lock@plt+0x20ac>
    3f70:	str	xzr, [sp, #88]
    3f74:	bl	2378 <PyThread_free_lock@plt+0x368>
    3f78:	b	40bc <PyThread_free_lock@plt+0x20ac>
    3f7c:	adrp	x0, 4000 <PyThread_free_lock@plt+0x1ff0>
    3f80:	mov	x1, x20
    3f84:	add	x0, x0, #0x631
    3f88:	mov	x3, #0x1                   	// #1
    3f8c:	mov	x2, #0x0                   	// #0
    3f90:	bl	1e80 <_PyArg_CheckPositional@plt>
    3f94:	cbnz	w0, 3f14 <PyThread_free_lock@plt+0x1f04>
    3f98:	mov	x0, #0x0                   	// #0
    3f9c:	ldp	x19, x20, [sp, #16]
    3fa0:	ldp	x21, x22, [sp, #32]
    3fa4:	ldp	x23, x24, [sp, #48]
    3fa8:	ldr	x25, [sp, #64]
    3fac:	ldp	x29, x30, [sp], #96
    3fb0:	ret
    3fb4:	ldr	x0, [x21]
    3fb8:	adrp	x1, 16000 <PyInit_zlib@@Base+0x11dc8>
    3fbc:	ldr	x1, [x1, #4008]
    3fc0:	ldr	x0, [x0, #8]
    3fc4:	cmp	x0, x1
    3fc8:	b.ne	3fe8 <PyThread_free_lock@plt+0x1fd8>  // b.any
    3fcc:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    3fd0:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3fd4:	add	x1, x1, #0x6ac
    3fd8:	ldr	x0, [x0, #4040]
    3fdc:	ldr	x0, [x0]
    3fe0:	bl	1dc0 <PyErr_SetString@plt>
    3fe4:	b	3f98 <PyThread_free_lock@plt+0x1f88>
    3fe8:	bl	1fd0 <PyType_IsSubtype@plt>
    3fec:	cbnz	w0, 3fcc <PyThread_free_lock@plt+0x1fbc>
    3ff0:	ldr	x0, [x21]
    3ff4:	bl	1ff0 <_PyLong_AsInt@plt>
    3ff8:	mov	w21, w0
    3ffc:	cmn	w0, #0x1
    4000:	b.ne	4014 <PyThread_free_lock@plt+0x2004>  // b.any
    4004:	bl	1eb0 <PyErr_Occurred@plt>
    4008:	cbnz	x0, 3f98 <PyThread_free_lock@plt+0x1f88>
    400c:	str	xzr, [sp, #88]
    4010:	b	3f24 <PyThread_free_lock@plt+0x1f14>
    4014:	str	xzr, [sp, #88]
    4018:	cbnz	w0, 3f24 <PyThread_free_lock@plt+0x1f14>
    401c:	mov	x1, #0x0                   	// #0
    4020:	mov	x0, #0x0                   	// #0
    4024:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    4028:	b	3f9c <PyThread_free_lock@plt+0x1f8c>
    402c:	bl	1fa0 <PyEval_SaveThread@plt>
    4030:	mov	x25, x0
    4034:	mov	w1, w21
    4038:	mov	x0, x24
    403c:	bl	1dd0 <deflate@plt>
    4040:	mov	w20, w0
    4044:	mov	x0, x25
    4048:	bl	1d10 <PyEval_RestoreThread@plt>
    404c:	cmn	w20, #0x2
    4050:	b.ne	4064 <PyThread_free_lock@plt+0x2054>  // b.any
    4054:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    4058:	mov	w1, w20
    405c:	add	x2, x2, #0x8a0
    4060:	b	4090 <PyThread_free_lock@plt+0x2080>
    4064:	ldr	w0, [x19, #48]
    4068:	cbz	w0, 3f50 <PyThread_free_lock@plt+0x1f40>
    406c:	cmp	w20, #0x1
    4070:	ccmp	w21, #0x4, #0x0, eq  // eq = none
    4074:	b.ne	40cc <PyThread_free_lock@plt+0x20bc>  // b.any
    4078:	mov	x0, x24
    407c:	bl	1f10 <deflateEnd@plt>
    4080:	mov	w1, w0
    4084:	cbz	w0, 409c <PyThread_free_lock@plt+0x208c>
    4088:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    408c:	add	x2, x2, #0x87c
    4090:	ldr	x0, [x19, #64]
    4094:	bl	2248 <PyThread_free_lock@plt+0x238>
    4098:	b	3f68 <PyThread_free_lock@plt+0x1f58>
    409c:	str	wzr, [x19, #148]
    40a0:	ldr	x0, [sp, #88]
    40a4:	ldr	x1, [x19, #40]
    40a8:	add	x0, x0, #0x20
    40ac:	sub	x1, x1, x0
    40b0:	mov	x0, x23
    40b4:	bl	1cf0 <_PyBytes_Resize@plt>
    40b8:	tbnz	w0, #31, 3f68 <PyThread_free_lock@plt+0x1f58>
    40bc:	ldr	x0, [x19, #160]
    40c0:	bl	1f20 <PyThread_release_lock@plt>
    40c4:	ldr	x0, [sp, #88]
    40c8:	b	3f9c <PyThread_free_lock@plt+0x1f8c>
    40cc:	cmp	w20, #0x0
    40d0:	ccmn	w20, #0x5, #0x4, ne  // ne = any
    40d4:	b.eq	40a0 <PyThread_free_lock@plt+0x2090>  // b.none
    40d8:	b	4054 <PyThread_free_lock@plt+0x2044>
    40dc:	b	243c <PyThread_free_lock@plt+0x42c>
    40e0:	b	243c <PyThread_free_lock@plt+0x42c>
    40e4:	stp	x29, x30, [sp, #-48]!
    40e8:	mov	x29, sp
    40ec:	stp	x19, x20, [sp, #16]
    40f0:	mov	x20, x0
    40f4:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12dc8>
    40f8:	add	x0, x0, #0x1b0
    40fc:	str	x21, [sp, #32]
    4100:	add	x0, x0, #0x2a0
    4104:	bl	2390 <PyThread_free_lock@plt+0x380>
    4108:	mov	x19, x0
    410c:	cbz	x0, 4218 <PyThread_free_lock@plt+0x2208>
    4110:	bl	1fa0 <PyEval_SaveThread@plt>
    4114:	mov	x21, x0
    4118:	ldr	x0, [x20, #160]
    411c:	mov	w1, #0x1                   	// #1
    4120:	bl	1da0 <PyThread_acquire_lock@plt>
    4124:	mov	x0, x21
    4128:	bl	1d10 <PyEval_RestoreThread@plt>
    412c:	add	x1, x20, #0x10
    4130:	add	x0, x19, #0x10
    4134:	bl	1f40 <deflateCopy@plt>
    4138:	mov	w1, w0
    413c:	cmn	w0, #0x2
    4140:	b.eq	4164 <PyThread_free_lock@plt+0x2154>  // b.none
    4144:	cbz	w0, 41a8 <PyThread_free_lock@plt+0x2198>
    4148:	cmn	w0, #0x4
    414c:	b.ne	4194 <PyThread_free_lock@plt+0x2184>  // b.any
    4150:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    4154:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    4158:	add	x1, x1, #0x7f2
    415c:	ldr	x0, [x0, #4024]
    4160:	b	4174 <PyThread_free_lock@plt+0x2164>
    4164:	adrp	x0, 16000 <PyInit_zlib@@Base+0x11dc8>
    4168:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    416c:	add	x1, x1, #0x5aa
    4170:	ldr	x0, [x0, #4032]
    4174:	ldr	x0, [x0]
    4178:	bl	1dc0 <PyErr_SetString@plt>
    417c:	ldr	x0, [x20, #160]
    4180:	bl	1f20 <PyThread_release_lock@plt>
    4184:	mov	x0, x19
    4188:	mov	x19, #0x0                   	// #0
    418c:	bl	2430 <PyThread_free_lock@plt+0x420>
    4190:	b	4218 <PyThread_free_lock@plt+0x2208>
    4194:	ldr	x0, [x20, #64]
    4198:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    419c:	add	x2, x2, #0x8af
    41a0:	bl	2248 <PyThread_free_lock@plt+0x238>
    41a4:	b	417c <PyThread_free_lock@plt+0x216c>
    41a8:	ldr	x1, [x20, #128]
    41ac:	ldr	x0, [x1]
    41b0:	add	x0, x0, #0x1
    41b4:	str	x0, [x1]
    41b8:	ldr	x0, [x19, #128]
    41bc:	str	x1, [x19, #128]
    41c0:	bl	2430 <PyThread_free_lock@plt+0x420>
    41c4:	ldr	x1, [x20, #136]
    41c8:	ldr	x0, [x1]
    41cc:	add	x0, x0, #0x1
    41d0:	str	x0, [x1]
    41d4:	ldr	x0, [x19, #136]
    41d8:	str	x1, [x19, #136]
    41dc:	bl	2430 <PyThread_free_lock@plt+0x420>
    41e0:	ldr	x1, [x20, #152]
    41e4:	cbz	x1, 41f4 <PyThread_free_lock@plt+0x21e4>
    41e8:	ldr	x0, [x1]
    41ec:	add	x0, x0, #0x1
    41f0:	str	x0, [x1]
    41f4:	ldr	x0, [x19, #152]
    41f8:	str	x1, [x19, #152]
    41fc:	bl	2430 <PyThread_free_lock@plt+0x420>
    4200:	ldrb	w0, [x20, #144]
    4204:	strb	w0, [x19, #144]
    4208:	mov	w0, #0x1                   	// #1
    420c:	str	w0, [x19, #148]
    4210:	ldr	x0, [x20, #160]
    4214:	bl	1f20 <PyThread_release_lock@plt>
    4218:	mov	x0, x19
    421c:	ldp	x19, x20, [sp, #16]
    4220:	ldr	x21, [sp, #32]
    4224:	ldp	x29, x30, [sp], #48
    4228:	ret
    422c:	b	40e4 <PyThread_free_lock@plt+0x20d4>
    4230:	b	40e4 <PyThread_free_lock@plt+0x20d4>
    4234:	b	40e4 <PyThread_free_lock@plt+0x20d4>

0000000000004238 <PyInit_zlib@@Base>:
    4238:	stp	x29, x30, [sp, #-32]!
    423c:	mov	x29, sp
    4240:	str	x19, [sp, #16]
    4244:	adrp	x19, 17000 <PyInit_zlib@@Base+0x12dc8>
    4248:	add	x19, x19, #0x1b0
    424c:	add	x0, x19, #0x2a0
    4250:	bl	1e10 <PyType_Ready@plt>
    4254:	tbz	w0, #31, 426c <PyInit_zlib@@Base+0x34>
    4258:	mov	x19, #0x0                   	// #0
    425c:	mov	x0, x19
    4260:	ldr	x19, [sp, #16]
    4264:	ldp	x29, x30, [sp], #32
    4268:	ret
    426c:	mov	x0, x19
    4270:	bl	1e10 <PyType_Ready@plt>
    4274:	tbnz	w0, #31, 4258 <PyInit_zlib@@Base+0x20>
    4278:	add	x0, x19, #0x480
    427c:	mov	w1, #0x3f5                 	// #1013
    4280:	bl	1ec0 <PyModule_Create2@plt>
    4284:	mov	x19, x0
    4288:	cbz	x0, 4258 <PyInit_zlib@@Base+0x20>
    428c:	mov	x2, #0x0                   	// #0
    4290:	mov	x1, #0x0                   	// #0
    4294:	adrp	x0, 4000 <PyThread_free_lock@plt+0x1ff0>
    4298:	add	x0, x0, #0x8d0
    429c:	bl	1e40 <PyErr_NewException@plt>
    42a0:	mov	x2, x0
    42a4:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12dc8>
    42a8:	str	x2, [x0, #2464]
    42ac:	cbz	x2, 42cc <PyInit_zlib@@Base+0x94>
    42b0:	ldr	x0, [x2]
    42b4:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    42b8:	add	x1, x1, #0x8d5
    42bc:	add	x0, x0, #0x1
    42c0:	str	x0, [x2]
    42c4:	mov	x0, x19
    42c8:	bl	1fb0 <PyModule_AddObject@plt>
    42cc:	mov	x2, #0xf                   	// #15
    42d0:	mov	x0, x19
    42d4:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    42d8:	add	x1, x1, #0x8db
    42dc:	bl	1ce0 <PyModule_AddIntConstant@plt>
    42e0:	mov	x2, #0x8                   	// #8
    42e4:	mov	x0, x19
    42e8:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    42ec:	add	x1, x1, #0x8e5
    42f0:	bl	1ce0 <PyModule_AddIntConstant@plt>
    42f4:	mov	x2, #0x8                   	// #8
    42f8:	mov	x0, x19
    42fc:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    4300:	add	x1, x1, #0x8ee
    4304:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4308:	mov	x2, #0x4000                	// #16384
    430c:	mov	x0, x19
    4310:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    4314:	add	x1, x1, #0x8fc
    4318:	bl	1ce0 <PyModule_AddIntConstant@plt>
    431c:	mov	x2, #0x0                   	// #0
    4320:	mov	x0, x19
    4324:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    4328:	add	x1, x1, #0x909
    432c:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4330:	mov	x2, #0x1                   	// #1
    4334:	mov	x0, x19
    4338:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    433c:	add	x1, x1, #0x91a
    4340:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4344:	mov	x2, #0x9                   	// #9
    4348:	mov	x0, x19
    434c:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    4350:	add	x1, x1, #0x927
    4354:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4358:	mov	x2, #0xffffffffffffffff    	// #-1
    435c:	mov	x0, x19
    4360:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    4364:	add	x1, x1, #0x93a
    4368:	bl	1ce0 <PyModule_AddIntConstant@plt>
    436c:	mov	x2, #0x1                   	// #1
    4370:	mov	x0, x19
    4374:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    4378:	add	x1, x1, #0x950
    437c:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4380:	mov	x2, #0x2                   	// #2
    4384:	mov	x0, x19
    4388:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    438c:	add	x1, x1, #0x95b
    4390:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4394:	mov	x2, #0x3                   	// #3
    4398:	mov	x0, x19
    439c:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    43a0:	add	x1, x1, #0x96a
    43a4:	bl	1ce0 <PyModule_AddIntConstant@plt>
    43a8:	mov	x2, #0x4                   	// #4
    43ac:	mov	x0, x19
    43b0:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    43b4:	add	x1, x1, #0x970
    43b8:	bl	1ce0 <PyModule_AddIntConstant@plt>
    43bc:	mov	x2, #0x0                   	// #0
    43c0:	mov	x0, x19
    43c4:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    43c8:	add	x1, x1, #0x978
    43cc:	bl	1ce0 <PyModule_AddIntConstant@plt>
    43d0:	mov	x2, #0x0                   	// #0
    43d4:	mov	x0, x19
    43d8:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    43dc:	add	x1, x1, #0x98b
    43e0:	bl	1ce0 <PyModule_AddIntConstant@plt>
    43e4:	mov	x2, #0x1                   	// #1
    43e8:	mov	x0, x19
    43ec:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    43f0:	add	x1, x1, #0x996
    43f4:	bl	1ce0 <PyModule_AddIntConstant@plt>
    43f8:	mov	x2, #0x2                   	// #2
    43fc:	mov	x0, x19
    4400:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    4404:	add	x1, x1, #0x9a6
    4408:	bl	1ce0 <PyModule_AddIntConstant@plt>
    440c:	mov	x2, #0x3                   	// #3
    4410:	mov	x0, x19
    4414:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    4418:	add	x1, x1, #0x9b3
    441c:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4420:	mov	x2, #0x4                   	// #4
    4424:	mov	x0, x19
    4428:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    442c:	add	x1, x1, #0x9c0
    4430:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4434:	mov	x2, #0x5                   	// #5
    4438:	mov	x0, x19
    443c:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    4440:	add	x1, x1, #0x9c9
    4444:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4448:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    444c:	add	x1, x1, #0x9d1
    4450:	mov	x2, #0x6                   	// #6
    4454:	mov	x0, x19
    4458:	bl	1ce0 <PyModule_AddIntConstant@plt>
    445c:	adrp	x0, 4000 <PyThread_free_lock@plt+0x1ff0>
    4460:	add	x0, x0, #0x701
    4464:	bl	1f70 <PyUnicode_FromString@plt>
    4468:	mov	x2, x0
    446c:	cbz	x0, 4480 <PyInit_zlib@@Base+0x248>
    4470:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    4474:	mov	x0, x19
    4478:	add	x1, x1, #0x9d9
    447c:	bl	1fb0 <PyModule_AddObject@plt>
    4480:	bl	1fc0 <zlibVersion@plt>
    4484:	bl	1f70 <PyUnicode_FromString@plt>
    4488:	mov	x2, x0
    448c:	cbz	x0, 44a0 <PyInit_zlib@@Base+0x268>
    4490:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    4494:	mov	x0, x19
    4498:	add	x1, x1, #0x9e6
    449c:	bl	1fb0 <PyModule_AddObject@plt>
    44a0:	mov	x0, x19
    44a4:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    44a8:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    44ac:	add	x2, x2, #0x9fb
    44b0:	add	x1, x1, #0x9ff
    44b4:	bl	1f90 <PyModule_AddStringConstant@plt>
    44b8:	b	425c <PyInit_zlib@@Base+0x24>

Disassembly of section .fini:

00000000000044bc <.fini>:
    44bc:	stp	x29, x30, [sp, #-16]!
    44c0:	mov	x29, sp
    44c4:	ldp	x29, x30, [sp], #16
    44c8:	ret
