
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//make_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000406608 <.init>:
  406608:	stp	x29, x30, [sp, #-16]!
  40660c:	mov	x29, sp
  406610:	bl	408a54 <_start@@Base+0x50>
  406614:	ldp	x29, x30, [sp], #16
  406618:	ret

Disassembly of section .plt:

0000000000406620 <memcpy@plt-0x20>:
  406620:	stp	x16, x30, [sp, #-16]!
  406624:	adrp	x16, 444000 <_IO_stdin_used@@Base+0x1b0e0>
  406628:	ldr	x17, [x16, #4088]
  40662c:	add	x16, x16, #0xff8
  406630:	br	x17
  406634:	nop
  406638:	nop
  40663c:	nop

0000000000406640 <memcpy@plt>:
  406640:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406644:	ldr	x17, [x16]
  406648:	add	x16, x16, #0x0
  40664c:	br	x17

0000000000406650 <memmove@plt>:
  406650:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406654:	ldr	x17, [x16, #8]
  406658:	add	x16, x16, #0x8
  40665c:	br	x17

0000000000406660 <_exit@plt>:
  406660:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406664:	ldr	x17, [x16, #16]
  406668:	add	x16, x16, #0x10
  40666c:	br	x17

0000000000406670 <getcwd@plt>:
  406670:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406674:	ldr	x17, [x16, #24]
  406678:	add	x16, x16, #0x18
  40667c:	br	x17

0000000000406680 <strlen@plt>:
  406680:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406684:	ldr	x17, [x16, #32]
  406688:	add	x16, x16, #0x20
  40668c:	br	x17

0000000000406690 <fputs@plt>:
  406690:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406694:	ldr	x17, [x16, #40]
  406698:	add	x16, x16, #0x28
  40669c:	br	x17

00000000004066a0 <exit@plt>:
  4066a0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4066a4:	ldr	x17, [x16, #48]
  4066a8:	add	x16, x16, #0x30
  4066ac:	br	x17

00000000004066b0 <dup@plt>:
  4066b0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4066b4:	ldr	x17, [x16, #56]
  4066b8:	add	x16, x16, #0x38
  4066bc:	br	x17

00000000004066c0 <perror@plt>:
  4066c0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4066c4:	ldr	x17, [x16, #64]
  4066c8:	add	x16, x16, #0x40
  4066cc:	br	x17

00000000004066d0 <tmpfile@plt>:
  4066d0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4066d4:	ldr	x17, [x16, #72]
  4066d8:	add	x16, x16, #0x48
  4066dc:	br	x17

00000000004066e0 <sigprocmask@plt>:
  4066e0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4066e4:	ldr	x17, [x16, #80]
  4066e8:	add	x16, x16, #0x50
  4066ec:	br	x17

00000000004066f0 <strtod@plt>:
  4066f0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4066f4:	ldr	x17, [x16, #88]
  4066f8:	add	x16, x16, #0x58
  4066fc:	br	x17

0000000000406700 <remove@plt>:
  406700:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406704:	ldr	x17, [x16, #96]
  406708:	add	x16, x16, #0x60
  40670c:	br	x17

0000000000406710 <ttyname@plt>:
  406710:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406714:	ldr	x17, [x16, #104]
  406718:	add	x16, x16, #0x68
  40671c:	br	x17

0000000000406720 <readlink@plt>:
  406720:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406724:	ldr	x17, [x16, #112]
  406728:	add	x16, x16, #0x70
  40672c:	br	x17

0000000000406730 <sprintf@plt>:
  406730:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406734:	ldr	x17, [x16, #120]
  406738:	add	x16, x16, #0x78
  40673c:	br	x17

0000000000406740 <putc@plt>:
  406740:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406744:	ldr	x17, [x16, #128]
  406748:	add	x16, x16, #0x80
  40674c:	br	x17

0000000000406750 <pipe@plt>:
  406750:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406754:	ldr	x17, [x16, #136]
  406758:	add	x16, x16, #0x88
  40675c:	br	x17

0000000000406760 <opendir@plt>:
  406760:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406764:	ldr	x17, [x16, #144]
  406768:	add	x16, x16, #0x90
  40676c:	br	x17

0000000000406770 <getloadavg@plt>:
  406770:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406774:	ldr	x17, [x16, #152]
  406778:	add	x16, x16, #0x98
  40677c:	br	x17

0000000000406780 <__cxa_atexit@plt>:
  406780:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406784:	ldr	x17, [x16, #160]
  406788:	add	x16, x16, #0xa0
  40678c:	br	x17

0000000000406790 <fputc@plt>:
  406790:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406794:	ldr	x17, [x16, #168]
  406798:	add	x16, x16, #0xa8
  40679c:	br	x17

00000000004067a0 <clock_gettime@plt>:
  4067a0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4067a4:	ldr	x17, [x16, #176]
  4067a8:	add	x16, x16, #0xb0
  4067ac:	br	x17

00000000004067b0 <qsort@plt>:
  4067b0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4067b4:	ldr	x17, [x16, #184]
  4067b8:	add	x16, x16, #0xb8
  4067bc:	br	x17

00000000004067c0 <dlclose@plt>:
  4067c0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4067c4:	ldr	x17, [x16, #192]
  4067c8:	add	x16, x16, #0xc0
  4067cc:	br	x17

00000000004067d0 <ctime@plt>:
  4067d0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4067d4:	ldr	x17, [x16, #200]
  4067d8:	add	x16, x16, #0xc8
  4067dc:	br	x17

00000000004067e0 <kill@plt>:
  4067e0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4067e4:	ldr	x17, [x16, #208]
  4067e8:	add	x16, x16, #0xd0
  4067ec:	br	x17

00000000004067f0 <setvbuf@plt>:
  4067f0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4067f4:	ldr	x17, [x16, #216]
  4067f8:	add	x16, x16, #0xd8
  4067fc:	br	x17

0000000000406800 <lseek@plt>:
  406800:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406804:	ldr	x17, [x16, #224]
  406808:	add	x16, x16, #0xe0
  40680c:	br	x17

0000000000406810 <eaccess@plt>:
  406810:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406814:	ldr	x17, [x16, #232]
  406818:	add	x16, x16, #0xe8
  40681c:	br	x17

0000000000406820 <dlopen@plt>:
  406820:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406824:	ldr	x17, [x16, #240]
  406828:	add	x16, x16, #0xf0
  40682c:	br	x17

0000000000406830 <__ctype_tolower_loc@plt>:
  406830:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406834:	ldr	x17, [x16, #248]
  406838:	add	x16, x16, #0xf8
  40683c:	br	x17

0000000000406840 <stpcpy@plt>:
  406840:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406844:	ldr	x17, [x16, #256]
  406848:	add	x16, x16, #0x100
  40684c:	br	x17

0000000000406850 <fileno@plt>:
  406850:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406854:	ldr	x17, [x16, #264]
  406858:	add	x16, x16, #0x108
  40685c:	br	x17

0000000000406860 <localtime@plt>:
  406860:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406864:	ldr	x17, [x16, #272]
  406868:	add	x16, x16, #0x110
  40686c:	br	x17

0000000000406870 <posix_spawn_file_actions_adddup2@plt>:
  406870:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406874:	ldr	x17, [x16, #280]
  406878:	add	x16, x16, #0x118
  40687c:	br	x17

0000000000406880 <signal@plt>:
  406880:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406884:	ldr	x17, [x16, #288]
  406888:	add	x16, x16, #0x120
  40688c:	br	x17

0000000000406890 <fclose@plt>:
  406890:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406894:	ldr	x17, [x16, #296]
  406898:	add	x16, x16, #0x128
  40689c:	br	x17

00000000004068a0 <getpid@plt>:
  4068a0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4068a4:	ldr	x17, [x16, #304]
  4068a8:	add	x16, x16, #0x130
  4068ac:	br	x17

00000000004068b0 <fopen@plt>:
  4068b0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4068b4:	ldr	x17, [x16, #312]
  4068b8:	add	x16, x16, #0x138
  4068bc:	br	x17

00000000004068c0 <time@plt>:
  4068c0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4068c4:	ldr	x17, [x16, #320]
  4068c8:	add	x16, x16, #0x140
  4068cc:	br	x17

00000000004068d0 <malloc@plt>:
  4068d0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4068d4:	ldr	x17, [x16, #328]
  4068d8:	add	x16, x16, #0x148
  4068dc:	br	x17

00000000004068e0 <dlerror@plt>:
  4068e0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4068e4:	ldr	x17, [x16, #336]
  4068e8:	add	x16, x16, #0x150
  4068ec:	br	x17

00000000004068f0 <dlsym@plt>:
  4068f0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4068f4:	ldr	x17, [x16, #344]
  4068f8:	add	x16, x16, #0x158
  4068fc:	br	x17

0000000000406900 <open@plt>:
  406900:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406904:	ldr	x17, [x16, #352]
  406908:	add	x16, x16, #0x160
  40690c:	br	x17

0000000000406910 <sigemptyset@plt>:
  406910:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406914:	ldr	x17, [x16, #360]
  406918:	add	x16, x16, #0x168
  40691c:	br	x17

0000000000406920 <posix_spawnattr_destroy@plt>:
  406920:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406924:	ldr	x17, [x16, #368]
  406928:	add	x16, x16, #0x170
  40692c:	br	x17

0000000000406930 <strncmp@plt>:
  406930:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406934:	ldr	x17, [x16, #376]
  406938:	add	x16, x16, #0x178
  40693c:	br	x17

0000000000406940 <bindtextdomain@plt>:
  406940:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406944:	ldr	x17, [x16, #384]
  406948:	add	x16, x16, #0x180
  40694c:	br	x17

0000000000406950 <__libc_start_main@plt>:
  406950:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406954:	ldr	x17, [x16, #392]
  406958:	add	x16, x16, #0x188
  40695c:	br	x17

0000000000406960 <strcat@plt>:
  406960:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406964:	ldr	x17, [x16, #400]
  406968:	add	x16, x16, #0x190
  40696c:	br	x17

0000000000406970 <memset@plt>:
  406970:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406974:	ldr	x17, [x16, #408]
  406978:	add	x16, x16, #0x198
  40697c:	br	x17

0000000000406980 <fdopen@plt>:
  406980:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406984:	ldr	x17, [x16, #416]
  406988:	add	x16, x16, #0x1a0
  40698c:	br	x17

0000000000406990 <strpbrk@plt>:
  406990:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406994:	ldr	x17, [x16, #424]
  406998:	add	x16, x16, #0x1a8
  40699c:	br	x17

00000000004069a0 <gettimeofday@plt>:
  4069a0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4069a4:	ldr	x17, [x16, #432]
  4069a8:	add	x16, x16, #0x1b0
  4069ac:	br	x17

00000000004069b0 <getpwnam@plt>:
  4069b0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4069b4:	ldr	x17, [x16, #440]
  4069b8:	add	x16, x16, #0x1b8
  4069bc:	br	x17

00000000004069c0 <pselect@plt>:
  4069c0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4069c4:	ldr	x17, [x16, #448]
  4069c8:	add	x16, x16, #0x1c0
  4069cc:	br	x17

00000000004069d0 <calloc@plt>:
  4069d0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4069d4:	ldr	x17, [x16, #456]
  4069d8:	add	x16, x16, #0x1c8
  4069dc:	br	x17

00000000004069e0 <posix_spawn_file_actions_destroy@plt>:
  4069e0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4069e4:	ldr	x17, [x16, #464]
  4069e8:	add	x16, x16, #0x1d0
  4069ec:	br	x17

00000000004069f0 <readdir@plt>:
  4069f0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  4069f4:	ldr	x17, [x16, #472]
  4069f8:	add	x16, x16, #0x1d8
  4069fc:	br	x17

0000000000406a00 <realloc@plt>:
  406a00:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406a04:	ldr	x17, [x16, #480]
  406a08:	add	x16, x16, #0x1e0
  406a0c:	br	x17

0000000000406a10 <putenv@plt>:
  406a10:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406a14:	ldr	x17, [x16, #488]
  406a18:	add	x16, x16, #0x1e8
  406a1c:	br	x17

0000000000406a20 <strdup@plt>:
  406a20:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406a24:	ldr	x17, [x16, #496]
  406a28:	add	x16, x16, #0x1f0
  406a2c:	br	x17

0000000000406a30 <closedir@plt>:
  406a30:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406a34:	ldr	x17, [x16, #504]
  406a38:	add	x16, x16, #0x1f8
  406a3c:	br	x17

0000000000406a40 <strerror@plt>:
  406a40:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406a44:	ldr	x17, [x16, #512]
  406a48:	add	x16, x16, #0x200
  406a4c:	br	x17

0000000000406a50 <close@plt>:
  406a50:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406a54:	ldr	x17, [x16, #520]
  406a58:	add	x16, x16, #0x208
  406a5c:	br	x17

0000000000406a60 <sigaction@plt>:
  406a60:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406a64:	ldr	x17, [x16, #528]
  406a68:	add	x16, x16, #0x210
  406a6c:	br	x17

0000000000406a70 <strrchr@plt>:
  406a70:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406a74:	ldr	x17, [x16, #536]
  406a78:	add	x16, x16, #0x218
  406a7c:	br	x17

0000000000406a80 <__gmon_start__@plt>:
  406a80:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406a84:	ldr	x17, [x16, #544]
  406a88:	add	x16, x16, #0x220
  406a8c:	br	x17

0000000000406a90 <write@plt>:
  406a90:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406a94:	ldr	x17, [x16, #552]
  406a98:	add	x16, x16, #0x228
  406a9c:	br	x17

0000000000406aa0 <posix_spawnattr_setflags@plt>:
  406aa0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406aa4:	ldr	x17, [x16, #560]
  406aa8:	add	x16, x16, #0x230
  406aac:	br	x17

0000000000406ab0 <abort@plt>:
  406ab0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406ab4:	ldr	x17, [x16, #568]
  406ab8:	add	x16, x16, #0x238
  406abc:	br	x17

0000000000406ac0 <posix_spawnattr_setsigmask@plt>:
  406ac0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406ac4:	ldr	x17, [x16, #576]
  406ac8:	add	x16, x16, #0x240
  406acc:	br	x17

0000000000406ad0 <feof@plt>:
  406ad0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406ad4:	ldr	x17, [x16, #584]
  406ad8:	add	x16, x16, #0x248
  406adc:	br	x17

0000000000406ae0 <puts@plt>:
  406ae0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406ae4:	ldr	x17, [x16, #592]
  406ae8:	add	x16, x16, #0x250
  406aec:	br	x17

0000000000406af0 <posix_spawn_file_actions_init@plt>:
  406af0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406af4:	ldr	x17, [x16, #600]
  406af8:	add	x16, x16, #0x258
  406afc:	br	x17

0000000000406b00 <memcmp@plt>:
  406b00:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406b04:	ldr	x17, [x16, #608]
  406b08:	add	x16, x16, #0x260
  406b0c:	br	x17

0000000000406b10 <textdomain@plt>:
  406b10:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406b14:	ldr	x17, [x16, #616]
  406b18:	add	x16, x16, #0x268
  406b1c:	br	x17

0000000000406b20 <getopt_long@plt>:
  406b20:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406b24:	ldr	x17, [x16, #624]
  406b28:	add	x16, x16, #0x270
  406b2c:	br	x17

0000000000406b30 <execvp@plt>:
  406b30:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406b34:	ldr	x17, [x16, #632]
  406b38:	add	x16, x16, #0x278
  406b3c:	br	x17

0000000000406b40 <strcmp@plt>:
  406b40:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406b44:	ldr	x17, [x16, #640]
  406b48:	add	x16, x16, #0x280
  406b4c:	br	x17

0000000000406b50 <__ctype_b_loc@plt>:
  406b50:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406b54:	ldr	x17, [x16, #648]
  406b58:	add	x16, x16, #0x288
  406b5c:	br	x17

0000000000406b60 <strtol@plt>:
  406b60:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406b64:	ldr	x17, [x16, #656]
  406b68:	add	x16, x16, #0x290
  406b6c:	br	x17

0000000000406b70 <fread@plt>:
  406b70:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406b74:	ldr	x17, [x16, #664]
  406b78:	add	x16, x16, #0x298
  406b7c:	br	x17

0000000000406b80 <chdir@plt>:
  406b80:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406b84:	ldr	x17, [x16, #672]
  406b88:	add	x16, x16, #0x2a0
  406b8c:	br	x17

0000000000406b90 <free@plt>:
  406b90:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406b94:	ldr	x17, [x16, #680]
  406b98:	add	x16, x16, #0x2a8
  406b9c:	br	x17

0000000000406ba0 <strndup@plt>:
  406ba0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406ba4:	ldr	x17, [x16, #688]
  406ba8:	add	x16, x16, #0x2b0
  406bac:	br	x17

0000000000406bb0 <strchr@plt>:
  406bb0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406bb4:	ldr	x17, [x16, #696]
  406bb8:	add	x16, x16, #0x2b8
  406bbc:	br	x17

0000000000406bc0 <globfree@plt>:
  406bc0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406bc4:	ldr	x17, [x16, #704]
  406bc8:	add	x16, x16, #0x2c0
  406bcc:	br	x17

0000000000406bd0 <memrchr@plt>:
  406bd0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406bd4:	ldr	x17, [x16, #712]
  406bd8:	add	x16, x16, #0x2c8
  406bdc:	br	x17

0000000000406be0 <fwrite@plt>:
  406be0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406be4:	ldr	x17, [x16, #720]
  406be8:	add	x16, x16, #0x2d0
  406bec:	br	x17

0000000000406bf0 <fnmatch@plt>:
  406bf0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406bf4:	ldr	x17, [x16, #728]
  406bf8:	add	x16, x16, #0x2d8
  406bfc:	br	x17

0000000000406c00 <fcntl@plt>:
  406c00:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406c04:	ldr	x17, [x16, #736]
  406c08:	add	x16, x16, #0x2e0
  406c0c:	br	x17

0000000000406c10 <wait@plt>:
  406c10:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406c14:	ldr	x17, [x16, #744]
  406c18:	add	x16, x16, #0x2e8
  406c1c:	br	x17

0000000000406c20 <fflush@plt>:
  406c20:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406c24:	ldr	x17, [x16, #752]
  406c28:	add	x16, x16, #0x2f0
  406c2c:	br	x17

0000000000406c30 <strcpy@plt>:
  406c30:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406c34:	ldr	x17, [x16, #760]
  406c38:	add	x16, x16, #0x2f8
  406c3c:	br	x17

0000000000406c40 <posix_spawn@plt>:
  406c40:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406c44:	ldr	x17, [x16, #768]
  406c48:	add	x16, x16, #0x300
  406c4c:	br	x17

0000000000406c50 <vsprintf@plt>:
  406c50:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406c54:	ldr	x17, [x16, #776]
  406c58:	add	x16, x16, #0x308
  406c5c:	br	x17

0000000000406c60 <__lxstat@plt>:
  406c60:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406c64:	ldr	x17, [x16, #784]
  406c68:	add	x16, x16, #0x310
  406c6c:	br	x17

0000000000406c70 <posix_spawnattr_init@plt>:
  406c70:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406c74:	ldr	x17, [x16, #792]
  406c78:	add	x16, x16, #0x318
  406c7c:	br	x17

0000000000406c80 <read@plt>:
  406c80:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406c84:	ldr	x17, [x16, #800]
  406c88:	add	x16, x16, #0x320
  406c8c:	br	x17

0000000000406c90 <mkstemp@plt>:
  406c90:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406c94:	ldr	x17, [x16, #808]
  406c98:	add	x16, x16, #0x328
  406c9c:	br	x17

0000000000406ca0 <isatty@plt>:
  406ca0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406ca4:	ldr	x17, [x16, #816]
  406ca8:	add	x16, x16, #0x330
  406cac:	br	x17

0000000000406cb0 <__fxstat@plt>:
  406cb0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406cb4:	ldr	x17, [x16, #824]
  406cb8:	add	x16, x16, #0x338
  406cbc:	br	x17

0000000000406cc0 <strstr@plt>:
  406cc0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406cc4:	ldr	x17, [x16, #832]
  406cc8:	add	x16, x16, #0x340
  406ccc:	br	x17

0000000000406cd0 <dcgettext@plt>:
  406cd0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406cd4:	ldr	x17, [x16, #840]
  406cd8:	add	x16, x16, #0x348
  406cdc:	br	x17

0000000000406ce0 <realpath@plt>:
  406ce0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406ce4:	ldr	x17, [x16, #848]
  406ce8:	add	x16, x16, #0x350
  406cec:	br	x17

0000000000406cf0 <__isoc99_sscanf@plt>:
  406cf0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406cf4:	ldr	x17, [x16, #856]
  406cf8:	add	x16, x16, #0x358
  406cfc:	br	x17

0000000000406d00 <glob@plt>:
  406d00:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406d04:	ldr	x17, [x16, #864]
  406d08:	add	x16, x16, #0x360
  406d0c:	br	x17

0000000000406d10 <ftruncate@plt>:
  406d10:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406d14:	ldr	x17, [x16, #872]
  406d18:	add	x16, x16, #0x368
  406d1c:	br	x17

0000000000406d20 <strncpy@plt>:
  406d20:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406d24:	ldr	x17, [x16, #880]
  406d28:	add	x16, x16, #0x370
  406d2c:	br	x17

0000000000406d30 <strsignal@plt>:
  406d30:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406d34:	ldr	x17, [x16, #888]
  406d38:	add	x16, x16, #0x378
  406d3c:	br	x17

0000000000406d40 <sigaddset@plt>:
  406d40:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406d44:	ldr	x17, [x16, #896]
  406d48:	add	x16, x16, #0x380
  406d4c:	br	x17

0000000000406d50 <umask@plt>:
  406d50:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406d54:	ldr	x17, [x16, #904]
  406d58:	add	x16, x16, #0x388
  406d5c:	br	x17

0000000000406d60 <printf@plt>:
  406d60:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406d64:	ldr	x17, [x16, #912]
  406d68:	add	x16, x16, #0x390
  406d6c:	br	x17

0000000000406d70 <__errno_location@plt>:
  406d70:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406d74:	ldr	x17, [x16, #920]
  406d78:	add	x16, x16, #0x398
  406d7c:	br	x17

0000000000406d80 <getenv@plt>:
  406d80:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406d84:	ldr	x17, [x16, #928]
  406d88:	add	x16, x16, #0x3a0
  406d8c:	br	x17

0000000000406d90 <__xstat@plt>:
  406d90:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406d94:	ldr	x17, [x16, #936]
  406d98:	add	x16, x16, #0x3a8
  406d9c:	br	x17

0000000000406da0 <waitpid@plt>:
  406da0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406da4:	ldr	x17, [x16, #944]
  406da8:	add	x16, x16, #0x3b0
  406dac:	br	x17

0000000000406db0 <unlink@plt>:
  406db0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406db4:	ldr	x17, [x16, #952]
  406db8:	add	x16, x16, #0x3b8
  406dbc:	br	x17

0000000000406dc0 <getlogin@plt>:
  406dc0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406dc4:	ldr	x17, [x16, #960]
  406dc8:	add	x16, x16, #0x3c0
  406dcc:	br	x17

0000000000406dd0 <fprintf@plt>:
  406dd0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406dd4:	ldr	x17, [x16, #968]
  406dd8:	add	x16, x16, #0x3c8
  406ddc:	br	x17

0000000000406de0 <fgets@plt>:
  406de0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406de4:	ldr	x17, [x16, #976]
  406de8:	add	x16, x16, #0x3d0
  406dec:	br	x17

0000000000406df0 <setlocale@plt>:
  406df0:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406df4:	ldr	x17, [x16, #984]
  406df8:	add	x16, x16, #0x3d8
  406dfc:	br	x17

0000000000406e00 <ferror@plt>:
  406e00:	adrp	x16, 445000 <memcpy@GLIBC_2.17>
  406e04:	ldr	x17, [x16, #992]
  406e08:	add	x16, x16, #0x3e0
  406e0c:	br	x17

Disassembly of section .text:

0000000000406e10 <main@@Base>:
  406e10:	mov	x12, #0x18c0                	// #6336
  406e14:	sub	sp, sp, x12
  406e18:	adrp	x3, 446000 <expanding_var@@Base+0x320>
  406e1c:	stp	x29, x30, [sp]
  406e20:	mov	x29, sp
  406e24:	stp	x23, x24, [sp, #48]
  406e28:	adrp	x23, 449000 <commands_started@@Base+0x170>
  406e2c:	add	x23, x23, #0x850
  406e30:	stp	x19, x20, [sp, #16]
  406e34:	add	x20, x3, #0x480
  406e38:	add	x19, x20, #0x40
  406e3c:	stp	x21, x22, [sp, #32]
  406e40:	mov	x21, x2
  406e44:	stp	x25, x26, [sp, #64]
  406e48:	stp	x27, x28, [sp, #80]
  406e4c:	str	w0, [x29, #124]
  406e50:	mov	x0, x23
  406e54:	str	x1, [x29, #160]
  406e58:	bl	41b558 <output_init@@Base>
  406e5c:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x40e0>
  406e60:	mov	w5, #0x40                  	// #64
  406e64:	mov	w1, #0x100                 	// #256
  406e68:	mov	w7, #0x8                   	// #8
  406e6c:	ldr	d0, [x0, #1120]
  406e70:	mov	w4, #0x20                  	// #32
  406e74:	movk	w1, #0x80, lsl #16
  406e78:	mov	w3, #0x2000                	// #8192
  406e7c:	mov	w0, #0x2                   	// #2
  406e80:	mov	w8, #0x1                   	// #1
  406e84:	movk	w5, #0x10, lsl #16
  406e88:	mov	w2, #0x80                  	// #128
  406e8c:	mov	w6, #0x800080              	// #8388736
  406e90:	movk	w7, #0x4000, lsl #16
  406e94:	stur	w7, [x20, #134]
  406e98:	str	w6, [x20, #144]
  406e9c:	str	w5, [x20, #180]
  406ea0:	str	w1, [x20, #312]
  406ea4:	strh	w8, [x20, #64]
  406ea8:	strh	w0, [x20, #82]
  406eac:	strh	w0, [x20, #128]
  406eb0:	str	d0, [x20, #152]
  406eb4:	strh	w4, [x20, #186]
  406eb8:	strh	w3, [x20, #254]
  406ebc:	strh	w2, [x20, #310]
  406ec0:	bl	406b50 <__ctype_b_loc@plt>
  406ec4:	mov	x3, x19
  406ec8:	mov	x1, #0x2                   	// #2
  406ecc:	ldr	x4, [x0]
  406ed0:	b	406ef0 <main@@Base+0xe0>
  406ed4:	ldrh	w2, [x1, x3]
  406ed8:	tbnz	w2, #1, 406ef8 <main@@Base+0xe8>
  406edc:	orr	w2, w2, #0x4
  406ee0:	strh	w2, [x1, x3]
  406ee4:	add	x1, x1, #0x2
  406ee8:	cmp	x1, #0x200
  406eec:	b.eq	406f14 <main@@Base+0x104>  // b.none
  406ef0:	ldrh	w0, [x4, x1]
  406ef4:	tbnz	w0, #13, 406ed4 <main@@Base+0xc4>
  406ef8:	tbz	w0, #3, 406ee4 <main@@Base+0xd4>
  406efc:	ldrh	w0, [x1, x3]
  406f00:	orr	w0, w0, #0x2000
  406f04:	strh	w0, [x1, x3]
  406f08:	add	x1, x1, #0x2
  406f0c:	cmp	x1, #0x200
  406f10:	b.ne	406ef0 <main@@Base+0xe0>  // b.any
  406f14:	adrp	x24, 42d000 <_IO_stdin_used@@Base+0x40e0>
  406f18:	add	x24, x24, #0xed0
  406f1c:	mov	x1, x24
  406f20:	mov	w0, #0x6                   	// #6
  406f24:	bl	406df0 <setlocale@plt>
  406f28:	adrp	x25, 42c000 <_IO_stdin_used@@Base+0x30e0>
  406f2c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  406f30:	add	x1, x1, #0x1b8
  406f34:	add	x25, x25, #0x1d0
  406f38:	adrp	x22, 449000 <commands_started@@Base+0x170>
  406f3c:	mov	x0, x25
  406f40:	bl	406940 <bindtextdomain@plt>
  406f44:	mov	x0, x25
  406f48:	add	x22, x22, #0x868
  406f4c:	bl	406b10 <textdomain@plt>
  406f50:	adrp	x19, 40a000 <set_file_variables@@Base+0x370>
  406f54:	mov	x0, x22
  406f58:	add	x19, x19, #0x7e0
  406f5c:	bl	406910 <sigemptyset@plt>
  406f60:	mov	x1, x19
  406f64:	mov	w0, #0x1                   	// #1
  406f68:	bl	418d70 <gmk_add_function@@Base+0x148>
  406f6c:	cmp	x0, #0x1
  406f70:	b.eq	40807c <main@@Base+0x126c>  // b.none
  406f74:	mov	x0, x22
  406f78:	mov	w1, #0x1                   	// #1
  406f7c:	bl	406d40 <sigaddset@plt>
  406f80:	mov	x1, x19
  406f84:	mov	w0, #0x3                   	// #3
  406f88:	bl	418d70 <gmk_add_function@@Base+0x148>
  406f8c:	cmp	x0, #0x1
  406f90:	b.eq	40806c <main@@Base+0x125c>  // b.none
  406f94:	mov	x0, x22
  406f98:	mov	w1, #0x3                   	// #3
  406f9c:	bl	406d40 <sigaddset@plt>
  406fa0:	mov	x1, x19
  406fa4:	mov	w0, #0x2                   	// #2
  406fa8:	bl	418d70 <gmk_add_function@@Base+0x148>
  406fac:	cmp	x0, #0x1
  406fb0:	b.eq	40805c <main@@Base+0x124c>  // b.none
  406fb4:	mov	x0, x22
  406fb8:	mov	w1, #0x2                   	// #2
  406fbc:	bl	406d40 <sigaddset@plt>
  406fc0:	mov	x1, x19
  406fc4:	mov	w0, #0xf                   	// #15
  406fc8:	bl	418d70 <gmk_add_function@@Base+0x148>
  406fcc:	cmp	x0, #0x1
  406fd0:	b.eq	40804c <main@@Base+0x123c>  // b.none
  406fd4:	mov	x0, x22
  406fd8:	mov	w1, #0xf                   	// #15
  406fdc:	bl	406d40 <sigaddset@plt>
  406fe0:	mov	x1, x19
  406fe4:	mov	w0, #0x18                  	// #24
  406fe8:	bl	418d70 <gmk_add_function@@Base+0x148>
  406fec:	cmp	x0, #0x1
  406ff0:	b.eq	40803c <main@@Base+0x122c>  // b.none
  406ff4:	mov	x0, x22
  406ff8:	mov	w1, #0x18                  	// #24
  406ffc:	bl	406d40 <sigaddset@plt>
  407000:	mov	x1, x19
  407004:	mov	w0, #0x19                  	// #25
  407008:	bl	418d70 <gmk_add_function@@Base+0x148>
  40700c:	cmp	x0, #0x1
  407010:	b.eq	40802c <main@@Base+0x121c>  // b.none
  407014:	mov	x0, x22
  407018:	mov	w1, #0x19                  	// #25
  40701c:	bl	406d40 <sigaddset@plt>
  407020:	mov	x1, #0x0                   	// #0
  407024:	mov	w0, #0x11                  	// #17
  407028:	bl	418d70 <gmk_add_function@@Base+0x148>
  40702c:	mov	x0, #0x0                   	// #0
  407030:	bl	41b558 <output_init@@Base>
  407034:	ldr	x0, [x29, #160]
  407038:	ldr	x0, [x0]
  40703c:	cbz	x0, 407068 <main@@Base+0x258>
  407040:	ldrb	w1, [x0]
  407044:	cbz	w1, 407070 <main@@Base+0x260>
  407048:	mov	w1, #0x2f                  	// #47
  40704c:	bl	406a70 <strrchr@plt>
  407050:	adrp	x1, 449000 <commands_started@@Base+0x170>
  407054:	str	x0, [x1, #2096]
  407058:	cbz	x0, 4080a8 <main@@Base+0x1298>
  40705c:	add	x0, x0, #0x1
  407060:	str	x0, [x1, #2096]
  407064:	b	407078 <main@@Base+0x268>
  407068:	ldr	x0, [x29, #160]
  40706c:	str	x24, [x0]
  407070:	adrp	x0, 449000 <commands_started@@Base+0x170>
  407074:	str	x25, [x0, #2096]
  407078:	bl	41afd8 <user_access@@Base>
  40707c:	bl	425398 <init_hash_global_variable_set@@Base>
  407080:	bl	424b90 <strcache_init@@Base>
  407084:	bl	40eec8 <init_hash_files@@Base>
  407088:	bl	40bb48 <hash_init_directories@@Base>
  40708c:	bl	412578 <hash_init_function_table@@Base>
  407090:	add	x0, x29, #0x8b8
  407094:	mov	x1, #0x1000                	// #4096
  407098:	bl	406670 <getcwd@plt>
  40709c:	cbz	x0, 408004 <main@@Base+0x11f4>
  4070a0:	adrp	x19, 449000 <commands_started@@Base+0x170>
  4070a4:	add	x0, x29, #0x8b8
  4070a8:	str	x19, [x29, #104]
  4070ac:	bl	41abb0 <xstrdup@@Base>
  4070b0:	str	x0, [x19, #2008]
  4070b4:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  4070b8:	mov	x2, x24
  4070bc:	mov	x6, #0x0                   	// #0
  4070c0:	mov	w4, #0x0                   	// #0
  4070c4:	ldr	x5, [x22, #336]
  4070c8:	mov	w3, #0x0                   	// #0
  4070cc:	mov	x1, #0xa                   	// #10
  4070d0:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4070d4:	add	x0, x0, #0x1e0
  4070d8:	str	wzr, [x29, #144]
  4070dc:	ldr	x5, [x5, #8]
  4070e0:	str	x21, [x29, #168]
  4070e4:	mov	w26, #0x0                   	// #0
  4070e8:	bl	4253c8 <define_variable_in_set@@Base>
  4070ec:	mov	x1, x0
  4070f0:	ldr	x2, [x22, #336]
  4070f4:	mov	x6, #0x0                   	// #0
  4070f8:	ldrb	w7, [x1, #44]
  4070fc:	mov	w4, #0x0                   	// #0
  407100:	mov	w3, #0x0                   	// #0
  407104:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  407108:	ldr	x5, [x2, #8]
  40710c:	orr	w7, w7, #0x10
  407110:	strb	w7, [x1, #44]
  407114:	mov	x2, x24
  407118:	mov	x1, #0xd                   	// #13
  40711c:	add	x0, x0, #0x1f0
  407120:	bl	4253c8 <define_variable_in_set@@Base>
  407124:	mov	x1, x0
  407128:	ldr	x3, [x22, #336]
  40712c:	mov	x6, #0x0                   	// #0
  407130:	ldrb	w7, [x1, #44]
  407134:	mov	w4, #0x0                   	// #0
  407138:	adrp	x2, 429000 <_IO_stdin_used@@Base+0xe0>
  40713c:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  407140:	ldr	x5, [x3, #8]
  407144:	orr	w7, w7, #0x10
  407148:	strb	w7, [x1, #44]
  40714c:	add	x2, x2, #0x4a0
  407150:	mov	w3, #0x0                   	// #0
  407154:	mov	x1, #0xb                   	// #11
  407158:	add	x0, x0, #0x200
  40715c:	bl	4253c8 <define_variable_in_set@@Base>
  407160:	ldr	x1, [x22, #336]
  407164:	mov	x2, x24
  407168:	mov	x6, #0x0                   	// #0
  40716c:	mov	w4, #0x0                   	// #0
  407170:	mov	w3, #0x0                   	// #0
  407174:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  407178:	ldr	x5, [x1, #8]
  40717c:	add	x0, x0, #0xd38
  407180:	mov	x1, #0x7                   	// #7
  407184:	bl	4253c8 <define_variable_in_set@@Base>
  407188:	ldr	x0, [x22, #336]
  40718c:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x30e0>
  407190:	add	x2, x2, #0x210
  407194:	mov	w3, #0x0                   	// #0
  407198:	mov	x6, #0x0                   	// #0
  40719c:	mov	w4, #0x0                   	// #0
  4071a0:	ldr	x5, [x0, #8]
  4071a4:	mov	x1, #0x9                   	// #9
  4071a8:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4071ac:	add	x0, x0, #0x2c0
  4071b0:	bl	4253c8 <define_variable_in_set@@Base>
  4071b4:	mov	x0, #0x0                   	// #0
  4071b8:	bl	4125d0 <guile_gmake_setup@@Base>
  4071bc:	ldr	x3, [x21]
  4071c0:	cbz	x3, 407288 <main@@Base+0x478>
  4071c4:	adrp	x27, 446000 <expanding_var@@Base+0x320>
  4071c8:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4071cc:	add	x0, x0, #0x2d0
  4071d0:	mov	x28, x3
  4071d4:	ldr	x8, [x29, #168]
  4071d8:	str	x0, [x29, #136]
  4071dc:	add	x0, x27, #0xdf0
  4071e0:	add	x27, x20, #0x40
  4071e4:	str	x0, [x29, #112]
  4071e8:	ldrb	w0, [x28]
  4071ec:	mov	x19, x28
  4071f0:	ldrh	w1, [x27, w0, sxtw #1]
  4071f4:	tbnz	w1, #5, 4077b0 <main@@Base+0x9a0>
  4071f8:	mov	x2, x19
  4071fc:	ldrb	w0, [x19, #1]!
  407200:	ldrh	w1, [x27, w0, sxtw #1]
  407204:	tbz	w1, #5, 4071f8 <main@@Base+0x3e8>
  407208:	cbz	w0, 407278 <main@@Base+0x468>
  40720c:	str	wzr, [x29, #168]
  407210:	sub	x3, x19, x28
  407214:	add	x25, x2, #0x2
  407218:	cmp	x3, #0xd
  40721c:	b.eq	4076f8 <main@@Base+0x8e8>  // b.none
  407220:	ldr	x2, [x22, #336]
  407224:	mov	x1, x3
  407228:	mov	x0, x28
  40722c:	mov	w4, #0x1                   	// #1
  407230:	mov	x6, #0x0                   	// #0
  407234:	mov	w3, w4
  407238:	ldr	x5, [x2, #8]
  40723c:	mov	x2, x25
  407240:	adrp	x28, 42b000 <_IO_stdin_used@@Base+0x20e0>
  407244:	add	x28, x28, #0x9a0
  407248:	bl	4253c8 <define_variable_in_set@@Base>
  40724c:	mov	x19, x0
  407250:	ldr	x0, [x0]
  407254:	cmp	x0, x28
  407258:	b.eq	407778 <main@@Base+0x968>  // b.none
  40725c:	ldrb	w1, [x0]
  407260:	cmp	w1, #0x53
  407264:	b.eq	407764 <main@@Base+0x954>  // b.none
  407268:	ldrb	w0, [x19, #47]
  40726c:	ldr	w1, [x29, #168]
  407270:	bfi	w0, w1, #5, #2
  407274:	strb	w0, [x19, #47]
  407278:	add	w26, w26, #0x1
  40727c:	add	x8, x21, w26, uxtw #3
  407280:	ldr	x28, [x21, w26, uxtw #3]
  407284:	cbnz	x28, 4071e8 <main@@Base+0x3d8>
  407288:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  40728c:	add	x0, x0, #0xa98
  407290:	mov	x19, x0
  407294:	mov	x1, #0xc                   	// #12
  407298:	str	x0, [x29, #136]
  40729c:	bl	41a4e8 <die@@Base+0xc68>
  4072a0:	ldr	x1, [x22, #336]
  4072a4:	mov	x2, x24
  4072a8:	mov	x6, #0x0                   	// #0
  4072ac:	mov	w4, #0x0                   	// #0
  4072b0:	mov	w3, #0x1                   	// #1
  4072b4:	mov	x0, x19
  4072b8:	ldr	x5, [x1, #8]
  4072bc:	mov	x1, #0xc                   	// #12
  4072c0:	adrp	x28, 446000 <expanding_var@@Base+0x320>
  4072c4:	bl	4253c8 <define_variable_in_set@@Base>
  4072c8:	mov	x1, #0x9                   	// #9
  4072cc:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4072d0:	add	x0, x0, #0xfd0
  4072d4:	str	x0, [x29, #152]
  4072d8:	bl	41a4e8 <die@@Base+0xc68>
  4072dc:	ldr	w19, [x28, #176]
  4072e0:	ldr	w0, [x20, #2224]
  4072e4:	mov	w1, #0xffffffff            	// #-1
  4072e8:	ldrb	w3, [x23, #8]
  4072ec:	mov	w2, #0x0                   	// #0
  4072f0:	add	w0, w0, w1
  4072f4:	str	w1, [x28, #176]
  4072f8:	cmp	w0, #0x1
  4072fc:	ldr	w0, [x29, #124]
  407300:	cset	w4, ls  // ls = plast
  407304:	ldr	x1, [x29, #160]
  407308:	bfxil	w3, w4, #0, #1
  40730c:	strb	w3, [x23, #8]
  407310:	adrp	x4, 446000 <expanding_var@@Base+0x320>
  407314:	tst	x3, #0x1
  407318:	csel	x3, x23, xzr, ne  // ne = any
  40731c:	str	x3, [x4, #3576]
  407320:	bl	419970 <die@@Base+0xf0>
  407324:	ldr	w0, [x28, #176]
  407328:	str	w0, [x29, #168]
  40732c:	cmn	w0, #0x1
  407330:	b.ne	407338 <main@@Base+0x528>  // b.any
  407334:	str	w19, [x28, #176]
  407338:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40733c:	ldr	x0, [x0, #440]
  407340:	bl	406850 <fileno@plt>
  407344:	bl	406ca0 <isatty@plt>
  407348:	cbnz	w0, 407aac <main@@Base+0xc9c>
  40734c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  407350:	ldr	x0, [x0, #416]
  407354:	bl	406850 <fileno@plt>
  407358:	bl	406ca0 <isatty@plt>
  40735c:	cbnz	w0, 407a4c <main@@Base+0xc3c>
  407360:	ldr	w0, [x20, #2224]
  407364:	ldrb	w1, [x23, #8]
  407368:	sub	w0, w0, #0x1
  40736c:	cmp	w0, #0x1
  407370:	cset	w0, hi  // hi = pmore
  407374:	cset	w19, ls  // ls = plast
  407378:	tst	w0, w1
  40737c:	b.ne	40809c <main@@Base+0x128c>  // b.any
  407380:	ldrb	w2, [x23, #8]
  407384:	adrp	x3, 446000 <expanding_var@@Base+0x320>
  407388:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  40738c:	mov	x1, #0x9                   	// #9
  407390:	add	x0, x0, #0x300
  407394:	str	x0, [x29, #128]
  407398:	bfxil	w2, w19, #0, #1
  40739c:	strb	w2, [x23, #8]
  4073a0:	tst	x2, #0x1
  4073a4:	csel	x2, x23, xzr, ne  // ne = any
  4073a8:	str	x2, [x3, #3576]
  4073ac:	bl	4257c8 <lookup_variable@@Base>
  4073b0:	cbz	x0, 4073c8 <main@@Base+0x5b8>
  4073b4:	ldr	x0, [x0, #8]
  4073b8:	ldrb	w1, [x0]
  4073bc:	cmp	w1, #0x2d
  4073c0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4073c4:	b.ne	40819c <main@@Base+0x138c>  // b.any
  4073c8:	adrp	x0, 449000 <commands_started@@Base+0x170>
  4073cc:	str	x0, [x29, #112]
  4073d0:	str	wzr, [x0, #2112]
  4073d4:	ldr	w0, [x20, #2240]
  4073d8:	ldr	w1, [x20, #592]
  4073dc:	cmp	w0, #0x0
  4073e0:	ldr	w0, [x29, #144]
  4073e4:	str	w1, [x29, #120]
  4073e8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  4073ec:	cset	w0, eq  // eq = none
  4073f0:	str	w0, [x20, #2236]
  4073f4:	cbnz	w1, 407a40 <main@@Base+0xc30>
  4073f8:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4073fc:	ldr	w0, [x0, #1152]
  407400:	tbnz	w0, #0, 4077c4 <main@@Base+0x9b4>
  407404:	ldrb	w0, [x29, #2232]
  407408:	cbz	w0, 407454 <main@@Base+0x644>
  40740c:	ldr	x21, [x29, #160]
  407410:	ldr	x19, [x21]
  407414:	cbz	x19, 407454 <main@@Base+0x644>
  407418:	ldrb	w0, [x19]
  40741c:	cmp	w0, #0x2f
  407420:	b.eq	407454 <main@@Base+0x644>  // b.none
  407424:	mov	x0, x19
  407428:	mov	w1, #0x2f                  	// #47
  40742c:	bl	406bb0 <strchr@plt>
  407430:	cbz	x0, 407454 <main@@Base+0x644>
  407434:	mov	x3, x19
  407438:	add	x1, x29, #0x8b8
  40743c:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  407440:	add	x2, x2, #0x428
  407444:	mov	w0, #0x3                   	// #3
  407448:	bl	41a930 <concat@@Base>
  40744c:	bl	41abb0 <xstrdup@@Base>
  407450:	str	x0, [x21]
  407454:	adrp	x19, 449000 <commands_started@@Base+0x170>
  407458:	add	x1, x29, #0x8b8
  40745c:	ldr	x0, [x20, #48]
  407460:	str	x1, [x19, #2072]
  407464:	cbz	x0, 40748c <main@@Base+0x67c>
  407468:	ldr	w1, [x29, #168]
  40746c:	cmn	w1, #0x1
  407470:	b.eq	4081fc <main@@Base+0x13ec>  // b.none
  407474:	ldr	w0, [x29, #144]
  407478:	cbz	w0, 4081b8 <main@@Base+0x13a8>
  40747c:	bl	427fe0 <jobserver_clear@@Base>
  407480:	ldr	x0, [x20, #48]
  407484:	bl	406b90 <free@plt>
  407488:	str	xzr, [x20, #48]
  40748c:	ldr	x1, [x22, #336]
  407490:	mov	x6, #0x0                   	// #0
  407494:	ldr	x2, [x29, #160]
  407498:	mov	w4, #0x0                   	// #0
  40749c:	ldr	x5, [x1, #8]
  4074a0:	mov	w3, #0x0                   	// #0
  4074a4:	ldr	x2, [x2]
  4074a8:	mov	x1, #0xc                   	// #12
  4074ac:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4074b0:	add	x0, x0, #0x3a0
  4074b4:	bl	4253c8 <define_variable_in_set@@Base>
  4074b8:	ldr	x1, [x22, #336]
  4074bc:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4074c0:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4074c4:	add	x2, x2, #0x3b0
  4074c8:	add	x0, x0, #0x3c0
  4074cc:	mov	x6, #0x0                   	// #0
  4074d0:	ldr	x5, [x1, #8]
  4074d4:	mov	w4, #0x1                   	// #1
  4074d8:	mov	w3, #0x0                   	// #0
  4074dc:	mov	x1, #0x4                   	// #4
  4074e0:	bl	4253c8 <define_variable_in_set@@Base>
  4074e4:	ldr	x21, [x20, #16]
  4074e8:	cbz	x21, 4076b4 <main@@Base+0x8a4>
  4074ec:	mov	x26, x21
  4074f0:	mov	x25, #0x0                   	// #0
  4074f4:	nop
  4074f8:	ldr	x27, [x26, #8]
  4074fc:	ldr	x0, [x27]
  407500:	bl	406680 <strlen@plt>
  407504:	add	x25, x25, x0, lsl #1
  407508:	ldrb	w2, [x27, #44]
  40750c:	ldr	x0, [x27, #8]
  407510:	tst	x2, #0x1
  407514:	cinc	x25, x25, eq  // eq = none
  407518:	add	x25, x25, #0x2
  40751c:	bl	406680 <strlen@plt>
  407520:	add	x25, x25, x0, lsl #1
  407524:	ldr	x26, [x26]
  407528:	cbnz	x26, 4074f8 <main@@Base+0x6e8>
  40752c:	add	x25, x25, #0xf
  407530:	add	x7, x20, #0x40
  407534:	and	x0, x25, #0xfffffffffffffff0
  407538:	mov	w8, #0x5c                  	// #92
  40753c:	sub	sp, sp, x0
  407540:	mov	w11, #0x3a                  	// #58
  407544:	mov	x2, sp
  407548:	mov	w10, #0x3d                  	// #61
  40754c:	mov	x0, x2
  407550:	mov	w9, #0x20                  	// #32
  407554:	nop
  407558:	ldr	x13, [x21, #8]
  40755c:	ldr	x4, [x13]
  407560:	ldrb	w1, [x4]
  407564:	cbnz	w1, 40759c <main@@Base+0x78c>
  407568:	b	407a34 <main@@Base+0xc24>
  40756c:	ldrh	w5, [x7, w1, sxtw #1]
  407570:	cmp	w1, #0x5c
  407574:	and	w5, w5, #0x2
  407578:	ccmp	w5, #0x0, #0x0, ne  // ne = any
  40757c:	b.eq	4079b0 <main@@Base+0xba0>  // b.none
  407580:	mov	x5, x0
  407584:	mov	x0, x12
  407588:	strb	w8, [x5], #4
  40758c:	ldrb	w1, [x4]
  407590:	strb	w1, [x6]
  407594:	ldrb	w1, [x4, #1]!
  407598:	cbz	w1, 4075cc <main@@Base+0x7bc>
  40759c:	cmp	w1, #0x24
  4075a0:	add	x6, x0, #0x1
  4075a4:	add	x12, x0, #0x2
  4075a8:	add	x3, x0, #0x3
  4075ac:	b.ne	40756c <main@@Base+0x75c>  // b.any
  4075b0:	mov	x5, x0
  4075b4:	mov	x0, x12
  4075b8:	strb	w1, [x5], #4
  4075bc:	ldrb	w1, [x4]
  4075c0:	strb	w1, [x6]
  4075c4:	ldrb	w1, [x4, #1]!
  4075c8:	cbnz	w1, 40759c <main@@Base+0x78c>
  4075cc:	ldrb	w1, [x13, #44]
  4075d0:	tbnz	w1, #0, 4075e4 <main@@Base+0x7d4>
  4075d4:	strb	w11, [x0]
  4075d8:	mov	x0, x3
  4075dc:	mov	x3, x5
  4075e0:	add	x5, x5, #0x1
  4075e4:	strb	w10, [x0]
  4075e8:	ldr	x4, [x13, #8]
  4075ec:	ldrb	w1, [x4]
  4075f0:	cbnz	w1, 407628 <main@@Base+0x818>
  4075f4:	b	407a2c <main@@Base+0xc1c>
  4075f8:	ldrh	w0, [x7, w1, sxtw #1]
  4075fc:	cmp	w1, #0x5c
  407600:	and	w0, w0, #0x2
  407604:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  407608:	b.eq	4079c8 <main@@Base+0xbb8>  // b.none
  40760c:	mov	x0, x3
  407610:	mov	x3, x6
  407614:	strb	w8, [x0], #3
  407618:	ldrb	w1, [x4]
  40761c:	strb	w1, [x5]
  407620:	ldrb	w1, [x4, #1]!
  407624:	cbz	w1, 407654 <main@@Base+0x844>
  407628:	cmp	w1, #0x24
  40762c:	add	x5, x3, #0x1
  407630:	add	x6, x3, #0x2
  407634:	b.ne	4075f8 <main@@Base+0x7e8>  // b.any
  407638:	mov	x0, x3
  40763c:	mov	x3, x6
  407640:	strb	w1, [x0], #3
  407644:	ldrb	w1, [x4]
  407648:	strb	w1, [x5]
  40764c:	ldrb	w1, [x4, #1]!
  407650:	cbnz	w1, 407628 <main@@Base+0x818>
  407654:	strb	w9, [x3]
  407658:	ldr	x21, [x21]
  40765c:	cbnz	x21, 407558 <main@@Base+0x748>
  407660:	ldr	x1, [x22, #336]
  407664:	strb	wzr, [x3]
  407668:	mov	x6, #0x0                   	// #0
  40766c:	mov	w4, #0x0                   	// #0
  407670:	mov	w3, #0x6                   	// #6
  407674:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  407678:	ldr	x5, [x1, #8]
  40767c:	add	x0, x0, #0xff0
  407680:	mov	x1, #0x17                  	// #23
  407684:	bl	4253c8 <define_variable_in_set@@Base>
  407688:	ldr	x1, [x22, #336]
  40768c:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x30e0>
  407690:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  407694:	mov	w4, #0x1                   	// #1
  407698:	add	x2, x2, #0x3c8
  40769c:	add	x0, x0, #0xfe0
  4076a0:	ldr	x5, [x1, #8]
  4076a4:	mov	w3, w4
  4076a8:	mov	x6, #0x0                   	// #0
  4076ac:	mov	x1, #0xd                   	// #13
  4076b0:	bl	4253c8 <define_variable_in_set@@Base>
  4076b4:	ldr	x0, [x20, #2248]
  4076b8:	cbz	x0, 4077cc <main@@Base+0x9bc>
  4076bc:	ldr	x0, [x0]
  4076c0:	ldr	x21, [x0]
  4076c4:	cbz	x21, 408088 <main@@Base+0x1278>
  4076c8:	mov	w25, #0x0                   	// #0
  4076cc:	b	4076e4 <main@@Base+0x8d4>
  4076d0:	ldr	x0, [x20, #2248]
  4076d4:	add	w25, w25, #0x1
  4076d8:	ldr	x0, [x0]
  4076dc:	ldr	x21, [x0, w25, uxtw #3]
  4076e0:	cbz	x21, 408088 <main@@Base+0x1278>
  4076e4:	mov	x0, x21
  4076e8:	bl	406b80 <chdir@plt>
  4076ec:	tbz	w0, #31, 4076d0 <main@@Base+0x8c0>
  4076f0:	mov	x0, x21
  4076f4:	bl	41b730 <pfatal_with_name@@Base>
  4076f8:	ldr	x1, [x29, #136]
  4076fc:	mov	x2, x3
  407700:	mov	x0, x28
  407704:	str	x8, [x29, #128]
  407708:	str	x3, [x29, #152]
  40770c:	bl	406930 <strncmp@plt>
  407710:	ldr	x3, [x29, #152]
  407714:	cbnz	w0, 407220 <main@@Base+0x410>
  407718:	ldrb	w0, [x19, #1]
  40771c:	ldr	x8, [x29, #128]
  407720:	cmp	w0, #0x2d
  407724:	b.ne	407738 <main@@Base+0x928>  // b.any
  407728:	ldr	x1, [x29, #112]
  40772c:	add	x25, x19, #0x2
  407730:	mov	w0, #0x1                   	// #1
  407734:	str	w0, [x1]
  407738:	mov	x1, #0x0                   	// #0
  40773c:	mov	x0, x25
  407740:	mov	w2, #0xa                   	// #10
  407744:	stp	x8, x3, [x29, #144]
  407748:	bl	406b60 <strtol@plt>
  40774c:	ldp	x8, x3, [x29, #144]
  407750:	mov	w1, #0x1                   	// #1
  407754:	str	w0, [x29, #144]
  407758:	str	w1, [x29, #168]
  40775c:	ldr	x28, [x8]
  407760:	b	407220 <main@@Base+0x410>
  407764:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  407768:	add	x0, x0, #0x1
  40776c:	add	x1, x1, #0x9a1
  407770:	bl	406b40 <strcmp@plt>
  407774:	cbnz	w0, 407268 <main@@Base+0x458>
  407778:	mov	x0, x28
  40777c:	bl	41abb0 <xstrdup@@Base>
  407780:	adrp	x1, 449000 <commands_started@@Base+0x170>
  407784:	mov	x2, x0
  407788:	add	x28, x1, #0x7e8
  40778c:	mov	x0, x25
  407790:	str	x2, [x1, #2024]
  407794:	mov	w1, #0x5                   	// #5
  407798:	mov	w2, #0x1                   	// #1
  40779c:	str	w2, [x29, #168]
  4077a0:	str	w1, [x28, #40]
  4077a4:	bl	41abb0 <xstrdup@@Base>
  4077a8:	str	x0, [x28, #8]
  4077ac:	b	407268 <main@@Base+0x458>
  4077b0:	cbz	w0, 407278 <main@@Base+0x468>
  4077b4:	add	x25, x28, #0x1
  4077b8:	mov	x3, #0x0                   	// #0
  4077bc:	str	wzr, [x29, #168]
  4077c0:	b	407220 <main@@Base+0x410>
  4077c4:	bl	418c58 <gmk_add_function@@Base+0x30>
  4077c8:	b	407404 <main@@Base+0x5f4>
  4077cc:	ldr	w0, [x20, #2232]
  4077d0:	cbz	w0, 4080c4 <main@@Base+0x12b4>
  4077d4:	ldr	w0, [x20, #2260]
  4077d8:	cbz	w0, 4077e0 <main@@Base+0x9d0>
  4077dc:	str	wzr, [x20, #2256]
  4077e0:	ldr	w0, [x20, #2264]
  4077e4:	cbz	w0, 4077f0 <main@@Base+0x9e0>
  4077e8:	mov	w0, #0x1                   	// #1
  4077ec:	str	w0, [x20, #2268]
  4077f0:	ldr	x0, [x20, #2272]
  4077f4:	cbz	x0, 4077fc <main@@Base+0x9ec>
  4077f8:	ldr	x0, [x0]
  4077fc:	bl	41e520 <construct_include_path@@Base>
  407800:	ldr	x0, [x20, #2248]
  407804:	cbz	x0, 407820 <main@@Base+0xa10>
  407808:	add	x0, x29, #0x8b8
  40780c:	mov	x1, #0x1000                	// #4096
  407810:	bl	406670 <getcwd@plt>
  407814:	cbz	x0, 40860c <main@@Base+0x17fc>
  407818:	add	x0, x29, #0x8b8
  40781c:	str	x0, [x19, #2072]
  407820:	ldr	x1, [x22, #336]
  407824:	add	x2, x29, #0x8b8
  407828:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  40782c:	mov	x6, #0x0                   	// #0
  407830:	add	x0, x0, #0x3e8
  407834:	mov	w4, #0x0                   	// #0
  407838:	ldr	x5, [x1, #8]
  40783c:	mov	w3, #0x2                   	// #2
  407840:	mov	x1, #0x6                   	// #6
  407844:	bl	4253c8 <define_variable_in_set@@Base>
  407848:	ldr	x2, [x20, #2280]
  40784c:	cbz	x2, 407b0c <main@@Base+0xcfc>
  407850:	ldr	w3, [x2, #8]
  407854:	cbz	w3, 407b0c <main@@Base+0xcfc>
  407858:	adrp	x27, 42c000 <_IO_stdin_used@@Base+0x30e0>
  40785c:	mov	w19, #0x0                   	// #0
  407860:	add	x0, x27, #0x420
  407864:	str	x0, [x29, #96]
  407868:	b	407878 <main@@Base+0xa68>
  40786c:	add	w19, w19, #0x1
  407870:	cmp	w19, w3
  407874:	b.cs	407b0c <main@@Base+0xcfc>  // b.hs, b.nlast
  407878:	ldr	x0, [x2]
  40787c:	ubfiz	x26, x19, #3, #32
  407880:	ldr	x0, [x0, w19, uxtw #3]
  407884:	ldrb	w1, [x0]
  407888:	cmp	w1, #0x2d
  40788c:	b.ne	40786c <main@@Base+0xa5c>  // b.any
  407890:	ldrb	w0, [x0, #1]
  407894:	cbnz	w0, 40786c <main@@Base+0xa5c>
  407898:	ldr	x0, [x20, #2288]
  40789c:	cbnz	x0, 40889c <main@@Base+0x1a8c>
  4078a0:	ldr	x0, [x29, #96]
  4078a4:	bl	406d80 <getenv@plt>
  4078a8:	mov	x21, x0
  4078ac:	cbz	x0, 4078b8 <main@@Base+0xaa8>
  4078b0:	ldrb	w0, [x0]
  4078b4:	cbnz	w0, 4078c0 <main@@Base+0xab0>
  4078b8:	adrp	x21, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4078bc:	add	x21, x21, #0x1b0
  4078c0:	mov	x0, x21
  4078c4:	bl	406680 <strlen@plt>
  4078c8:	mov	x25, x0
  4078cc:	add	x0, x0, #0x19
  4078d0:	and	x0, x0, #0xfffffffffffffff0
  4078d4:	mov	x1, x21
  4078d8:	sub	sp, sp, x0
  4078dc:	add	x2, x25, #0x1
  4078e0:	mov	x21, sp
  4078e4:	mov	x0, x21
  4078e8:	bl	406640 <memcpy@plt>
  4078ec:	add	x0, x21, x25
  4078f0:	ldurb	w0, [x0, #-1]
  4078f4:	cmp	w0, #0x2f
  4078f8:	b.eq	407904 <main@@Base+0xaf4>  // b.none
  4078fc:	mov	w0, #0x2f                  	// #47
  407900:	strh	w0, [x21, x25]
  407904:	mov	x0, x21
  407908:	bl	406680 <strlen@plt>
  40790c:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x30e0>
  407910:	add	x2, x2, #0x428
  407914:	add	x3, x21, x0
  407918:	mov	x1, x21
  40791c:	ldr	x4, [x2]
  407920:	str	x4, [x21, x0]
  407924:	ldrb	w2, [x2, #8]
  407928:	add	x0, x20, #0x8f0
  40792c:	strb	w2, [x3, #8]
  407930:	bl	41af18 <get_tmpfile@@Base>
  407934:	mov	x27, x0
  407938:	cbz	x0, 4088ac <main@@Base+0x1a9c>
  40793c:	adrp	x25, 446000 <expanding_var@@Base+0x320>
  407940:	add	x25, x25, #0x1c0
  407944:	nop
  407948:	ldr	x0, [x25]
  40794c:	bl	406ad0 <feof@plt>
  407950:	cbnz	w0, 4079dc <main@@Base+0xbcc>
  407954:	ldr	x0, [x25]
  407958:	bl	406e00 <ferror@plt>
  40795c:	cbnz	w0, 4079dc <main@@Base+0xbcc>
  407960:	ldr	x3, [x25]
  407964:	add	x0, x29, #0xb8
  407968:	mov	x2, #0x800                 	// #2048
  40796c:	mov	x1, #0x1                   	// #1
  407970:	bl	406b70 <fread@plt>
  407974:	mov	x21, x0
  407978:	cbz	x0, 407948 <main@@Base+0xb38>
  40797c:	mov	x2, x0
  407980:	mov	x3, x27
  407984:	add	x0, x29, #0xb8
  407988:	mov	x1, #0x1                   	// #1
  40798c:	bl	406be0 <fwrite@plt>
  407990:	cmp	x0, x21
  407994:	b.eq	407948 <main@@Base+0xb38>  // b.none
  407998:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  40799c:	add	x1, x1, #0x450
  4079a0:	mov	w2, #0x5                   	// #5
  4079a4:	mov	x0, #0x0                   	// #0
  4079a8:	bl	406cd0 <dcgettext@plt>
  4079ac:	bl	41b730 <pfatal_with_name@@Base>
  4079b0:	mov	x14, x6
  4079b4:	mov	x5, x3
  4079b8:	mov	x6, x0
  4079bc:	mov	x3, x12
  4079c0:	mov	x0, x14
  4079c4:	b	407590 <main@@Base+0x780>
  4079c8:	mov	x12, x5
  4079cc:	mov	x0, x6
  4079d0:	mov	x5, x3
  4079d4:	mov	x3, x12
  4079d8:	b	40761c <main@@Base+0x80c>
  4079dc:	mov	x0, x27
  4079e0:	bl	406890 <fclose@plt>
  4079e4:	ldr	x1, [x20, #2280]
  4079e8:	ldr	x0, [x20, #2288]
  4079ec:	ldr	x21, [x1]
  4079f0:	bl	424940 <strcache_add@@Base>
  4079f4:	str	x0, [x21, x26]
  4079f8:	ldr	x0, [x20, #2288]
  4079fc:	bl	424940 <strcache_add@@Base>
  407a00:	bl	40cf50 <enter_file@@Base>
  407a04:	ldr	w1, [x0, #136]
  407a08:	ldr	x2, [x20, #2280]
  407a0c:	mov	w4, #0xbbf0                	// #48112
  407a10:	mov	w3, #0x40c                 	// #1036
  407a14:	movk	w4, #0xfffe, lsl #16
  407a18:	and	w1, w1, w4
  407a1c:	orr	w1, w1, w3
  407a20:	ldr	w3, [x2, #8]
  407a24:	str	w1, [x0, #136]
  407a28:	b	40786c <main@@Base+0xa5c>
  407a2c:	mov	x0, x5
  407a30:	b	407654 <main@@Base+0x844>
  407a34:	add	x3, x0, #0x1
  407a38:	add	x5, x0, #0x2
  407a3c:	b	4075cc <main@@Base+0x7bc>
  407a40:	bl	418c58 <gmk_add_function@@Base+0x30>
  407a44:	mov	w0, #0x0                   	// #0
  407a48:	bl	419880 <die@@Base>
  407a4c:	adrp	x19, 42c000 <_IO_stdin_used@@Base+0x30e0>
  407a50:	add	x19, x19, #0x2f0
  407a54:	mov	x0, x19
  407a58:	mov	x1, #0xc                   	// #12
  407a5c:	bl	4257c8 <lookup_variable@@Base>
  407a60:	cbnz	x0, 407360 <main@@Base+0x550>
  407a64:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  407a68:	ldr	x0, [x0, #416]
  407a6c:	bl	406850 <fileno@plt>
  407a70:	bl	406710 <ttyname@plt>
  407a74:	mov	x2, x0
  407a78:	cbz	x0, 4086e8 <main@@Base+0x18d8>
  407a7c:	ldr	x1, [x22, #336]
  407a80:	mov	x0, x19
  407a84:	mov	x6, #0x0                   	// #0
  407a88:	mov	w4, #0x0                   	// #0
  407a8c:	mov	w3, #0x0                   	// #0
  407a90:	ldr	x5, [x1, #8]
  407a94:	mov	x1, #0xc                   	// #12
  407a98:	bl	4253c8 <define_variable_in_set@@Base>
  407a9c:	ldrb	w1, [x0, #47]
  407aa0:	and	w1, w1, #0xffffff9f
  407aa4:	strb	w1, [x0, #47]
  407aa8:	b	407360 <main@@Base+0x550>
  407aac:	adrp	x19, 42c000 <_IO_stdin_used@@Base+0x30e0>
  407ab0:	add	x19, x19, #0x2e0
  407ab4:	mov	x0, x19
  407ab8:	mov	x1, #0xc                   	// #12
  407abc:	bl	4257c8 <lookup_variable@@Base>
  407ac0:	cbnz	x0, 40734c <main@@Base+0x53c>
  407ac4:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  407ac8:	ldr	x0, [x0, #440]
  407acc:	bl	406850 <fileno@plt>
  407ad0:	bl	406710 <ttyname@plt>
  407ad4:	mov	x2, x0
  407ad8:	cbz	x0, 4086f4 <main@@Base+0x18e4>
  407adc:	ldr	x1, [x22, #336]
  407ae0:	mov	x0, x19
  407ae4:	mov	x6, #0x0                   	// #0
  407ae8:	mov	w4, #0x0                   	// #0
  407aec:	mov	w3, #0x0                   	// #0
  407af0:	ldr	x5, [x1, #8]
  407af4:	mov	x1, #0xc                   	// #12
  407af8:	bl	4253c8 <define_variable_in_set@@Base>
  407afc:	ldrb	w1, [x0, #47]
  407b00:	and	w1, w1, #0xffffff9f
  407b04:	strb	w1, [x0, #47]
  407b08:	b	40734c <main@@Base+0x53c>
  407b0c:	adrp	x1, 415000 <try_implicit_rule@@Base+0x7b0>
  407b10:	add	x1, x1, #0xdc8
  407b14:	mov	w0, #0x11                  	// #17
  407b18:	bl	418d70 <gmk_add_function@@Base+0x148>
  407b1c:	add	x0, x29, #0xb8
  407b20:	bl	406910 <sigemptyset@plt>
  407b24:	mov	w1, #0x11                  	// #17
  407b28:	add	x0, x29, #0xb8
  407b2c:	bl	406d40 <sigaddset@plt>
  407b30:	add	x1, x29, #0xb8
  407b34:	mov	x2, #0x0                   	// #0
  407b38:	mov	w0, #0x2                   	// #2
  407b3c:	bl	4066e0 <sigprocmask@plt>
  407b40:	tbnz	w0, #31, 4080b8 <main@@Base+0x12a8>
  407b44:	adrp	x1, 418000 <new_job@@Base+0x4b8>
  407b48:	add	x1, x1, #0xc40
  407b4c:	mov	w0, #0xa                   	// #10
  407b50:	bl	418d70 <gmk_add_function@@Base+0x148>
  407b54:	bl	40ab00 <set_default_suffixes@@Base>
  407b58:	bl	40ac18 <install_default_suffix_rules@@Base>
  407b5c:	bl	425d38 <define_automatic_variables@@Base>
  407b60:	mov	w1, #0x0                   	// #0
  407b64:	mov	w0, #0x0                   	// #0
  407b68:	bl	419200 <gmk_add_function@@Base+0x5d8>
  407b6c:	ldrb	w1, [x0, #47]
  407b70:	and	w1, w1, #0xffffff9f
  407b74:	strb	w1, [x0, #47]
  407b78:	bl	40ad28 <define_default_variables@@Base>
  407b7c:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  407b80:	add	x0, x0, #0x490
  407b84:	bl	424940 <strcache_add@@Base>
  407b88:	bl	40cf50 <enter_file@@Base>
  407b8c:	ldr	x1, [x22, #336]
  407b90:	adrp	x3, 449000 <commands_started@@Base+0x170>
  407b94:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x30e0>
  407b98:	mov	x6, #0x0                   	// #0
  407b9c:	str	x0, [x3, #2120]
  407ba0:	mov	w4, #0x0                   	// #0
  407ba4:	ldr	x5, [x1, #8]
  407ba8:	add	x0, x2, #0x4a0
  407bac:	mov	x1, #0xd                   	// #13
  407bb0:	mov	x2, x24
  407bb4:	mov	w3, #0x2                   	// #2
  407bb8:	bl	4253c8 <define_variable_in_set@@Base>
  407bbc:	adrp	x1, 449000 <commands_started@@Base+0x170>
  407bc0:	ldr	x8, [x20, #576]
  407bc4:	str	x0, [x1, #2104]
  407bc8:	cbz	x8, 407d14 <main@@Base+0xf04>
  407bcc:	ldr	w0, [x8, #8]
  407bd0:	ubfiz	x19, x0, #3, #32
  407bd4:	cbz	w0, 407c24 <main@@Base+0xe14>
  407bd8:	mov	w25, #0x0                   	// #0
  407bdc:	nop
  407be0:	ldr	x0, [x8]
  407be4:	ldr	x0, [x0, w25, uxtw #3]
  407be8:	add	w25, w25, #0x1
  407bec:	bl	41abb0 <xstrdup@@Base>
  407bf0:	mov	x21, x0
  407bf4:	bl	406680 <strlen@plt>
  407bf8:	mov	x2, x0
  407bfc:	mov	x1, #0x0                   	// #0
  407c00:	mov	x0, x21
  407c04:	add	x19, x19, x2, lsl #1
  407c08:	bl	420ca0 <eval_buffer@@Base>
  407c0c:	mov	x0, x21
  407c10:	bl	406b90 <free@plt>
  407c14:	ldr	x8, [x20, #576]
  407c18:	ldr	w0, [x8, #8]
  407c1c:	cmp	w0, w25
  407c20:	b.hi	407be0 <main@@Base+0xdd0>  // b.pmore
  407c24:	add	x0, x19, #0xf
  407c28:	ldr	w1, [x8, #8]
  407c2c:	and	x0, x0, #0xfffffffffffffff0
  407c30:	sub	sp, sp, x0
  407c34:	mov	x2, sp
  407c38:	mov	x4, x2
  407c3c:	cbz	w1, 407cec <main@@Base+0xedc>
  407c40:	mov	x13, #0x2d2d                	// #11565
  407c44:	add	x7, x20, #0x40
  407c48:	movk	x13, #0x7665, lsl #16
  407c4c:	mov	w9, #0x0                   	// #0
  407c50:	movk	x13, #0x6c61, lsl #32
  407c54:	mov	w10, #0x5c                  	// #92
  407c58:	movk	x13, #0x3d, lsl #48
  407c5c:	mov	w12, #0x20                  	// #32
  407c60:	mov	x1, x4
  407c64:	str	x13, [x1], #7
  407c68:	ldr	x0, [x8]
  407c6c:	ldr	x3, [x0, w9, uxtw #3]
  407c70:	ldrb	w0, [x3]
  407c74:	cbnz	w0, 407cac <main@@Base+0xe9c>
  407c78:	b	4081f4 <main@@Base+0x13e4>
  407c7c:	ldrh	w4, [x7, w0, sxtw #1]
  407c80:	cmp	w0, #0x5c
  407c84:	and	w4, w4, #0x2
  407c88:	ccmp	w4, #0x0, #0x0, ne  // ne = any
  407c8c:	b.eq	4080d4 <main@@Base+0x12c4>  // b.none
  407c90:	mov	x4, x1
  407c94:	mov	x1, x6
  407c98:	strb	w10, [x4], #3
  407c9c:	ldrb	w0, [x3]
  407ca0:	strb	w0, [x5]
  407ca4:	ldrb	w0, [x3, #1]!
  407ca8:	cbz	w0, 407cd8 <main@@Base+0xec8>
  407cac:	cmp	w0, #0x24
  407cb0:	add	x5, x1, #0x1
  407cb4:	add	x6, x1, #0x2
  407cb8:	b.ne	407c7c <main@@Base+0xe6c>  // b.any
  407cbc:	mov	x4, x1
  407cc0:	mov	x1, x6
  407cc4:	strb	w0, [x4], #3
  407cc8:	ldrb	w0, [x3]
  407ccc:	strb	w0, [x5]
  407cd0:	ldrb	w0, [x3, #1]!
  407cd4:	cbnz	w0, 407cac <main@@Base+0xe9c>
  407cd8:	strb	w12, [x1]
  407cdc:	add	w9, w9, #0x1
  407ce0:	ldr	w0, [x8, #8]
  407ce4:	cmp	w0, w9
  407ce8:	b.hi	407c60 <main@@Base+0xe50>  // b.pmore
  407cec:	ldr	x1, [x22, #336]
  407cf0:	sturb	wzr, [x4, #-1]
  407cf4:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  407cf8:	mov	x6, #0x0                   	// #0
  407cfc:	add	x0, x0, #0x4b0
  407d00:	mov	w4, #0x0                   	// #0
  407d04:	ldr	x5, [x1, #8]
  407d08:	mov	w3, #0x6                   	// #6
  407d0c:	mov	x1, #0x10                  	// #16
  407d10:	bl	4253c8 <define_variable_in_set@@Base>
  407d14:	ldr	x0, [x20, #2280]
  407d18:	cbz	x0, 407d20 <main@@Base+0xf10>
  407d1c:	ldr	x0, [x0]
  407d20:	bl	4209e8 <read_all_makefiles@@Base>
  407d24:	ldr	x27, [x29, #136]
  407d28:	mov	x26, x0
  407d2c:	mov	w0, #0xffffffff            	// #-1
  407d30:	ldr	w25, [x28, #176]
  407d34:	mov	x1, #0xc                   	// #12
  407d38:	str	w0, [x28, #176]
  407d3c:	ldr	w19, [x20, #2264]
  407d40:	mov	x0, x27
  407d44:	ldr	w21, [x20, #2268]
  407d48:	bl	41a4e8 <die@@Base+0xc68>
  407d4c:	ldr	x1, [x22, #336]
  407d50:	mov	x2, x24
  407d54:	mov	x6, #0x0                   	// #0
  407d58:	mov	w4, #0x0                   	// #0
  407d5c:	mov	w3, #0x5                   	// #5
  407d60:	mov	x0, x27
  407d64:	ldr	x5, [x1, #8]
  407d68:	mov	x1, #0xc                   	// #12
  407d6c:	bl	4253c8 <define_variable_in_set@@Base>
  407d70:	ldr	x0, [x29, #152]
  407d74:	mov	x1, #0x9                   	// #9
  407d78:	bl	41a4e8 <die@@Base+0xc68>
  407d7c:	ldr	w0, [x28, #176]
  407d80:	cmn	w0, #0x1
  407d84:	ldr	w0, [x29, #168]
  407d88:	ccmn	w0, #0x1, #0x0, ne  // ne = any
  407d8c:	b.eq	408790 <main@@Base+0x1980>  // b.none
  407d90:	str	w25, [x28, #176]
  407d94:	ldr	w25, [x20, #2224]
  407d98:	ldrb	w0, [x23, #8]
  407d9c:	sub	w25, w25, #0x1
  407da0:	cmp	w25, #0x1
  407da4:	cset	w1, hi  // hi = pmore
  407da8:	cset	w27, ls  // ls = plast
  407dac:	tst	w1, w0
  407db0:	b.ne	4087b4 <main@@Base+0x19a4>  // b.any
  407db4:	ldrb	w0, [x23, #8]
  407db8:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  407dbc:	ldr	w1, [x20, #2268]
  407dc0:	bfxil	w0, w27, #0, #1
  407dc4:	strb	w0, [x23, #8]
  407dc8:	tst	x0, #0x1
  407dcc:	csel	x0, x23, xzr, ne  // ne = any
  407dd0:	str	x0, [x2, #3576]
  407dd4:	cmp	w1, #0x0
  407dd8:	ccmp	w21, #0x0, #0x0, ne  // ne = any
  407ddc:	b.eq	408754 <main@@Base+0x1944>  // b.none
  407de0:	ldr	w0, [x20, #2264]
  407de4:	cmp	w0, #0x0
  407de8:	ccmp	w19, #0x0, #0x0, ne  // ne = any
  407dec:	b.eq	40888c <main@@Base+0x1a7c>  // b.none
  407df0:	ldr	x0, [x20, #48]
  407df4:	cbz	x0, 4085cc <main@@Base+0x17bc>
  407df8:	adrp	x0, 449000 <commands_started@@Base+0x170>
  407dfc:	str	wzr, [x0, #2288]
  407e00:	mov	w1, #0x0                   	// #0
  407e04:	mov	w0, #0x1                   	// #1
  407e08:	bl	419200 <gmk_add_function@@Base+0x5d8>
  407e0c:	bl	40df78 <snap_deps@@Base>
  407e10:	bl	424008 <convert_to_pattern@@Base>
  407e14:	bl	40acb0 <install_default_implicit_rules@@Base>
  407e18:	bl	423d28 <snap_implicit_rules@@Base>
  407e1c:	bl	4276f0 <build_vpath_lists@@Base>
  407e20:	ldr	x0, [x20, #2296]
  407e24:	cbz	x0, 407e68 <main@@Base+0x1058>
  407e28:	ldr	x22, [x0]
  407e2c:	ldr	x0, [x22]
  407e30:	cbz	x0, 407e68 <main@@Base+0x1058>
  407e34:	mov	w21, #0xfffffbf0            	// #-1040
  407e38:	mov	w19, #0x40c                 	// #1036
  407e3c:	nop
  407e40:	bl	40cf50 <enter_file@@Base>
  407e44:	ldrh	w1, [x0, #136]
  407e48:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x40e0>
  407e4c:	and	w1, w1, w21
  407e50:	ldr	q0, [x2, #1136]
  407e54:	orr	w1, w1, w19
  407e58:	strh	w1, [x0, #136]
  407e5c:	str	q0, [x0, #112]
  407e60:	ldr	x0, [x22, #8]!
  407e64:	cbnz	x0, 407e40 <main@@Base+0x1030>
  407e68:	ldr	w0, [x29, #144]
  407e6c:	cbnz	w0, 4080e8 <main@@Base+0x12d8>
  407e70:	ldr	x0, [x20, #2304]
  407e74:	cbz	x0, 407e98 <main@@Base+0x1088>
  407e78:	ldr	x19, [x0]
  407e7c:	b	407e90 <main@@Base+0x1080>
  407e80:	bl	40cf50 <enter_file@@Base>
  407e84:	add	x19, x19, #0x8
  407e88:	mvni	v0.4s, #0x0
  407e8c:	str	q0, [x0, #112]
  407e90:	ldr	x0, [x19]
  407e94:	cbnz	x0, 407e80 <main@@Base+0x1070>
  407e98:	bl	428768 <remote_setup@@Base>
  407e9c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  407ea0:	str	xzr, [x0, #3576]
  407ea4:	mov	x0, x23
  407ea8:	bl	41b698 <output_close@@Base>
  407eac:	cbz	x26, 4088dc <main@@Base+0x1acc>
  407eb0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  407eb4:	ldr	w0, [x0, #1152]
  407eb8:	tbnz	w0, #0, 40872c <main@@Base+0x191c>
  407ebc:	mov	x27, x26
  407ec0:	mov	w0, #0x0                   	// #0
  407ec4:	nop
  407ec8:	ldr	x27, [x27]
  407ecc:	add	w0, w0, #0x1
  407ed0:	cbnz	x27, 407ec8 <main@@Base+0x10b8>
  407ed4:	ubfiz	x0, x0, #3, #32
  407ed8:	adrp	x23, 42c000 <_IO_stdin_used@@Base+0x30e0>
  407edc:	add	x0, x0, #0xf
  407ee0:	add	x23, x23, #0x520
  407ee4:	and	x0, x0, #0xffffffff0
  407ee8:	mov	x19, x26
  407eec:	sub	sp, sp, x0
  407ef0:	mov	w21, #0x0                   	// #0
  407ef4:	mov	x22, sp
  407ef8:	ldr	x0, [x26, #16]
  407efc:	ldr	x25, [x0, #104]
  407f00:	cbnz	x25, 407f10 <main@@Base+0x1100>
  407f04:	b	408144 <main@@Base+0x1334>
  407f08:	ldr	x25, [x25, #56]
  407f0c:	cbz	x25, 408144 <main@@Base+0x1334>
  407f10:	ldr	x1, [x25, #24]
  407f14:	cbnz	x1, 407f08 <main@@Base+0x10f8>
  407f18:	ldr	x1, [x25, #32]
  407f1c:	cbz	x1, 407f08 <main@@Base+0x10f8>
  407f20:	ldr	w0, [x20]
  407f24:	tbnz	w0, #1, 408160 <main@@Base+0x1350>
  407f28:	ldr	x1, [x26]
  407f2c:	cbz	x27, 408188 <main@@Base+0x1378>
  407f30:	str	x1, [x27]
  407f34:	mov	x0, x26
  407f38:	bl	406b90 <free@plt>
  407f3c:	ldr	x26, [x27]
  407f40:	cbnz	x26, 407ef8 <main@@Base+0x10e8>
  407f44:	mov	w1, #0x1                   	// #1
  407f48:	mov	w0, w1
  407f4c:	bl	419200 <gmk_add_function@@Base+0x5d8>
  407f50:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  407f54:	ldr	w21, [x0, #1152]
  407f58:	tbnz	w21, #8, 407f60 <main@@Base+0x1150>
  407f5c:	str	wzr, [x0, #1152]
  407f60:	mov	w1, #0x1                   	// #1
  407f64:	mov	x0, x19
  407f68:	str	w1, [x20, #2312]
  407f6c:	bl	423320 <update_goal_chain@@Base>
  407f70:	str	wzr, [x20, #2312]
  407f74:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  407f78:	str	w21, [x1, #1152]
  407f7c:	cbz	w0, 408358 <main@@Base+0x1548>
  407f80:	cmp	w0, #0x3
  407f84:	b.eq	408234 <main@@Base+0x1424>  // b.none
  407f88:	mov	w21, #0x0                   	// #0
  407f8c:	mov	w1, #0x0                   	// #0
  407f90:	mov	w0, #0x1                   	// #1
  407f94:	bl	419200 <gmk_add_function@@Base+0x5d8>
  407f98:	ldr	w0, [x20, #2240]
  407f9c:	str	w0, [x20, #2236]
  407fa0:	ldr	w0, [x29, #144]
  407fa4:	cbnz	w0, 408118 <main@@Base+0x1308>
  407fa8:	ldr	x0, [x20, #2288]
  407fac:	cbz	x0, 407fb8 <main@@Base+0x11a8>
  407fb0:	bl	406db0 <unlink@plt>
  407fb4:	tbnz	w0, #31, 408624 <main@@Base+0x1814>
  407fb8:	ldr	x0, [x20, #24]
  407fbc:	cbz	x0, 408824 <main@@Base+0x1a14>
  407fc0:	ldr	x0, [x20, #32]
  407fc4:	str	xzr, [x0]
  407fc8:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  407fcc:	ldr	w0, [x0, #1152]
  407fd0:	tbnz	w0, #0, 4087fc <main@@Base+0x19ec>
  407fd4:	ldr	x0, [x20, #24]
  407fd8:	bl	423320 <update_goal_chain@@Base>
  407fdc:	cmp	w0, #0x2
  407fe0:	b.eq	4087f4 <main@@Base+0x19e4>  // b.none
  407fe4:	cmp	w0, #0x3
  407fe8:	mov	w0, #0x2                   	// #2
  407fec:	csel	w21, w21, w0, ne  // ne = any
  407ff0:	adrp	x0, 449000 <commands_started@@Base+0x170>
  407ff4:	ldr	w0, [x0, #2280]
  407ff8:	cbnz	w0, 4087cc <main@@Base+0x19bc>
  407ffc:	mov	w0, w21
  408000:	bl	419880 <die@@Base>
  408004:	adrp	x0, 449000 <commands_started@@Base+0x170>
  408008:	mov	x19, x0
  40800c:	mov	x1, x24
  408010:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  408014:	add	x0, x0, #0x1d8
  408018:	str	x19, [x29, #104]
  40801c:	bl	41bf78 <perror_with_name@@Base>
  408020:	str	xzr, [x19, #2008]
  408024:	strb	wzr, [x29, #2232]
  408028:	b	4070b4 <main@@Base+0x2a4>
  40802c:	mov	x1, x0
  408030:	mov	w0, #0x19                  	// #25
  408034:	bl	418d70 <gmk_add_function@@Base+0x148>
  408038:	b	407020 <main@@Base+0x210>
  40803c:	mov	x1, x0
  408040:	mov	w0, #0x18                  	// #24
  408044:	bl	418d70 <gmk_add_function@@Base+0x148>
  408048:	b	407000 <main@@Base+0x1f0>
  40804c:	mov	x1, x0
  408050:	mov	w0, #0xf                   	// #15
  408054:	bl	418d70 <gmk_add_function@@Base+0x148>
  408058:	b	406fe0 <main@@Base+0x1d0>
  40805c:	mov	x1, x0
  408060:	mov	w0, #0x2                   	// #2
  408064:	bl	418d70 <gmk_add_function@@Base+0x148>
  408068:	b	406fc0 <main@@Base+0x1b0>
  40806c:	mov	x1, x0
  408070:	mov	w0, #0x3                   	// #3
  408074:	bl	418d70 <gmk_add_function@@Base+0x148>
  408078:	b	406fa0 <main@@Base+0x190>
  40807c:	mov	x1, x0
  408080:	bl	418d70 <gmk_add_function@@Base+0x148>
  408084:	b	406f80 <main@@Base+0x170>
  408088:	ldr	w0, [x20, #2232]
  40808c:	cbnz	w0, 4077d4 <main@@Base+0x9c4>
  408090:	mov	w0, #0x1                   	// #1
  408094:	str	w0, [x20, #2256]
  408098:	b	4077d4 <main@@Base+0x9c4>
  40809c:	mov	x0, x23
  4080a0:	bl	41b698 <output_close@@Base>
  4080a4:	b	407380 <main@@Base+0x570>
  4080a8:	ldr	x0, [x29, #160]
  4080ac:	ldr	x0, [x0]
  4080b0:	str	x0, [x1, #2096]
  4080b4:	b	407078 <main@@Base+0x268>
  4080b8:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4080bc:	add	x0, x0, #0x468
  4080c0:	bl	41b730 <pfatal_with_name@@Base>
  4080c4:	ldr	x0, [x29, #112]
  4080c8:	ldr	w0, [x0, #2112]
  4080cc:	cbnz	w0, 408090 <main@@Base+0x1280>
  4080d0:	b	4077d4 <main@@Base+0x9c4>
  4080d4:	mov	x11, x5
  4080d8:	mov	x4, x6
  4080dc:	mov	x5, x1
  4080e0:	mov	x1, x11
  4080e4:	b	407ca0 <main@@Base+0xe90>
  4080e8:	bl	428768 <remote_setup@@Base>
  4080ec:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4080f0:	str	xzr, [x0, #3576]
  4080f4:	mov	x0, x23
  4080f8:	bl	41b698 <output_close@@Base>
  4080fc:	cbnz	x26, 407eb0 <main@@Base+0x10a0>
  408100:	mov	w1, #0x0                   	// #0
  408104:	mov	w0, #0x1                   	// #1
  408108:	bl	419200 <gmk_add_function@@Base+0x5d8>
  40810c:	mov	w21, #0x0                   	// #0
  408110:	ldr	w0, [x20, #2240]
  408114:	str	w0, [x20, #2236]
  408118:	ldr	x0, [x20, #2304]
  40811c:	cbz	x0, 407fa8 <main@@Base+0x1198>
  408120:	ldr	x19, [x0]
  408124:	b	408138 <main@@Base+0x1328>
  408128:	bl	40cf50 <enter_file@@Base>
  40812c:	add	x19, x19, #0x8
  408130:	mvni	v0.4s, #0x0
  408134:	str	q0, [x0, #112]
  408138:	ldr	x0, [x19]
  40813c:	cbnz	x0, 408128 <main@@Base+0x1318>
  408140:	b	407fa8 <main@@Base+0x1198>
  408144:	ldr	x1, [x0, #112]
  408148:	cbz	x1, 4081e4 <main@@Base+0x13d4>
  40814c:	mov	x27, x26
  408150:	str	x1, [x22, w21, uxtw #3]
  408154:	add	w21, w21, #0x1
  408158:	ldr	x26, [x26]
  40815c:	b	407f40 <main@@Base+0x1130>
  408160:	mov	x1, x23
  408164:	mov	w2, #0x5                   	// #5
  408168:	mov	x0, #0x0                   	// #0
  40816c:	bl	406cd0 <dcgettext@plt>
  408170:	ldr	x1, [x25]
  408174:	bl	406d60 <printf@plt>
  408178:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40817c:	ldr	x0, [x0, #440]
  408180:	bl	406c20 <fflush@plt>
  408184:	b	407f28 <main@@Base+0x1118>
  408188:	mov	x0, x26
  40818c:	mov	x26, x1
  408190:	mov	x19, x26
  408194:	bl	406b90 <free@plt>
  408198:	b	407f40 <main@@Base+0x1130>
  40819c:	adrp	x19, 449000 <commands_started@@Base+0x170>
  4081a0:	mov	w2, #0xa                   	// #10
  4081a4:	mov	x1, #0x0                   	// #0
  4081a8:	str	x19, [x29, #112]
  4081ac:	bl	406b60 <strtol@plt>
  4081b0:	str	w0, [x19, #2112]
  4081b4:	b	4073d4 <main@@Base+0x5c4>
  4081b8:	mov	w2, #0x5                   	// #5
  4081bc:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4081c0:	mov	x0, #0x0                   	// #0
  4081c4:	add	x1, x1, #0x360
  4081c8:	bl	406cd0 <dcgettext@plt>
  4081cc:	mov	x2, x0
  4081d0:	ldr	w3, [x29, #168]
  4081d4:	mov	x1, #0x14                  	// #20
  4081d8:	mov	x0, #0x0                   	// #0
  4081dc:	bl	41bd88 <error@@Base>
  4081e0:	b	40747c <main@@Base+0x66c>
  4081e4:	mov	w1, #0x0                   	// #0
  4081e8:	bl	421208 <f_mtime@@Base>
  4081ec:	mov	x1, x0
  4081f0:	b	40814c <main@@Base+0x133c>
  4081f4:	add	x4, x4, #0x8
  4081f8:	b	407cd8 <main@@Base+0xec8>
  4081fc:	bl	427de8 <jobserver_parse_auth@@Base>
  408200:	cbnz	w0, 40748c <main@@Base+0x67c>
  408204:	mov	w2, #0x5                   	// #5
  408208:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  40820c:	mov	x0, #0x0                   	// #0
  408210:	add	x1, x1, #0x310
  408214:	bl	406cd0 <dcgettext@plt>
  408218:	mov	x2, x0
  40821c:	mov	x1, #0x0                   	// #0
  408220:	mov	x0, #0x0                   	// #0
  408224:	bl	41bd88 <error@@Base>
  408228:	mov	w0, #0x1                   	// #1
  40822c:	str	w0, [x28, #176]
  408230:	b	40747c <main@@Base+0x66c>
  408234:	adrp	x26, 42c000 <_IO_stdin_used@@Base+0x30e0>
  408238:	add	x0, x26, #0x598
  40823c:	adrp	x25, 42c000 <_IO_stdin_used@@Base+0x30e0>
  408240:	mov	w27, #0x0                   	// #0
  408244:	mov	w23, #0x0                   	// #0
  408248:	mov	w21, #0x0                   	// #0
  40824c:	mov	w28, #0x0                   	// #0
  408250:	str	x0, [x29, #168]
  408254:	add	x0, x25, #0x570
  408258:	str	x0, [x29, #152]
  40825c:	cbz	x19, 40871c <main@@Base+0x190c>
  408260:	ldr	x0, [x19, #16]
  408264:	ldrb	w1, [x0, #137]
  408268:	tbz	w1, #2, 40829c <main@@Base+0x148c>
  40826c:	ldrb	w1, [x0, #136]
  408270:	tst	x1, #0x3
  408274:	b.ne	4082ec <main@@Base+0x14dc>  // b.any
  408278:	ldr	x1, [x0, #112]
  40827c:	cbz	x1, 4087c0 <main@@Base+0x19b0>
  408280:	ldr	x0, [x22, w28, uxtw #3]
  408284:	cmp	x0, x1
  408288:	cset	w0, ne  // ne = any
  40828c:	orr	w23, w23, w0
  408290:	add	w28, w28, #0x1
  408294:	ldr	x19, [x19]
  408298:	b	40825c <main@@Base+0x144c>
  40829c:	ldrb	w1, [x19, #32]
  4082a0:	tbnz	w1, #2, 408290 <main@@Base+0x1480>
  4082a4:	ldr	x25, [x19, #8]
  4082a8:	cbz	x25, 408894 <main@@Base+0x1a84>
  4082ac:	mov	x0, x25
  4082b0:	str	w1, [x29, #136]
  4082b4:	bl	406680 <strlen@plt>
  4082b8:	mov	x26, x0
  4082bc:	ldr	w1, [x29, #136]
  4082c0:	tbz	w1, #1, 4085bc <main@@Base+0x17ac>
  4082c4:	ldr	x1, [x29, #152]
  4082c8:	mov	w2, #0x5                   	// #5
  4082cc:	mov	x0, #0x0                   	// #0
  4082d0:	bl	406cd0 <dcgettext@plt>
  4082d4:	mov	x3, x25
  4082d8:	mov	x2, x0
  4082dc:	mov	x1, x26
  4082e0:	mov	x0, #0x0                   	// #0
  4082e4:	bl	41bd88 <error@@Base>
  4082e8:	b	408290 <main@@Base+0x1480>
  4082ec:	ldrb	w1, [x19, #32]
  4082f0:	tbnz	w1, #2, 408290 <main@@Base+0x1480>
  4082f4:	ldr	x0, [x0]
  4082f8:	bl	406680 <strlen@plt>
  4082fc:	mov	x21, x0
  408300:	mov	w2, #0x5                   	// #5
  408304:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  408308:	mov	x0, #0x0                   	// #0
  40830c:	add	x1, x1, #0x550
  408310:	bl	406cd0 <dcgettext@plt>
  408314:	mov	x2, x0
  408318:	ldr	x3, [x19, #16]
  40831c:	mov	x1, x21
  408320:	mov	x0, #0x0                   	// #0
  408324:	ldr	x3, [x3]
  408328:	bl	41bd88 <error@@Base>
  40832c:	ldr	x0, [x19, #16]
  408330:	ldr	x1, [x0, #112]
  408334:	cbz	x1, 40898c <main@@Base+0x1b7c>
  408338:	cmp	x1, #0x1
  40833c:	b.eq	4088f8 <main@@Base+0x1ae8>  // b.none
  408340:	ldr	x0, [x22, w28, uxtw #3]
  408344:	cmp	x0, x1
  408348:	cset	w0, ne  // ne = any
  40834c:	orr	w23, w23, w0
  408350:	mov	w21, #0x2                   	// #2
  408354:	b	408290 <main@@Base+0x1480>
  408358:	mov	w0, #0x0                   	// #0
  40835c:	bl	40d4e8 <remove_intermediates@@Base>
  408360:	ldr	w0, [x20, #4]
  408364:	cbnz	w0, 408680 <main@@Base+0x1870>
  408368:	mov	w0, #0x0                   	// #0
  40836c:	bl	419130 <gmk_add_function@@Base+0x508>
  408370:	ldr	x0, [x20, #2280]
  408374:	cbz	x0, 4083d8 <main@@Base+0x15c8>
  408378:	ldp	w26, w27, [x29, #120]
  40837c:	adrp	x23, 42c000 <_IO_stdin_used@@Base+0x30e0>
  408380:	ldr	x22, [x29, #160]
  408384:	add	x23, x23, #0x5b8
  408388:	mov	w21, #0x1                   	// #1
  40838c:	cmp	w21, w27
  408390:	b.ge	4083d8 <main@@Base+0x15c8>  // b.tcont
  408394:	ldr	x19, [x22, w21, sxtw #3]
  408398:	mov	x1, x23
  40839c:	add	x25, x22, w21, sxtw #3
  4083a0:	mov	x2, #0x2                   	// #2
  4083a4:	mov	x0, x19
  4083a8:	bl	406930 <strncmp@plt>
  4083ac:	cbnz	w0, 4083d0 <main@@Base+0x15c0>
  4083b0:	ldr	x1, [x20, #2280]
  4083b4:	ldrb	w0, [x19, #2]
  4083b8:	ldr	x1, [x1]
  4083bc:	ldr	x2, [x1, w26, sxtw #3]
  4083c0:	cbnz	w0, 408700 <main@@Base+0x18f0>
  4083c4:	add	w21, w21, #0x1
  4083c8:	add	w26, w26, #0x1
  4083cc:	str	x2, [x25, #8]
  4083d0:	add	w21, w21, #0x1
  4083d4:	b	40838c <main@@Base+0x157c>
  4083d8:	ldr	x0, [x20, #2288]
  4083dc:	cbz	x0, 408430 <main@@Base+0x1620>
  4083e0:	ldr	w0, [x29, #124]
  4083e4:	add	w21, w0, #0x2
  4083e8:	sbfiz	x21, x21, #3, #32
  4083ec:	mov	x0, x21
  4083f0:	bl	41ab28 <xmalloc@@Base>
  4083f4:	ldr	x1, [x29, #160]
  4083f8:	sub	x19, x21, #0x10
  4083fc:	mov	x22, x0
  408400:	mov	x2, x19
  408404:	add	x21, x0, x21
  408408:	bl	406640 <memcpy@plt>
  40840c:	str	x22, [x29, #160]
  408410:	ldr	x2, [x20, #2288]
  408414:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  408418:	add	x1, x1, #0x5c0
  40841c:	mov	w0, #0x2                   	// #2
  408420:	bl	41a930 <concat@@Base>
  408424:	bl	41abb0 <xstrdup@@Base>
  408428:	str	x0, [x22, x19]
  40842c:	stur	xzr, [x21, #-8]
  408430:	ldr	x0, [x20, #2248]
  408434:	cbz	x0, 408488 <main@@Base+0x1678>
  408438:	ldr	w0, [x0, #8]
  40843c:	cbz	w0, 408488 <main@@Base+0x1678>
  408440:	ldr	x0, [x29, #104]
  408444:	ldr	x0, [x0, #2008]
  408448:	cbz	x0, 408464 <main@@Base+0x1654>
  40844c:	bl	406b80 <chdir@plt>
  408450:	tbz	w0, #31, 408488 <main@@Base+0x1678>
  408454:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  408458:	mov	x1, x24
  40845c:	add	x0, x0, #0x5c8
  408460:	bl	41bf78 <perror_with_name@@Base>
  408464:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  408468:	add	x1, x1, #0x5d0
  40846c:	mov	w2, #0x5                   	// #5
  408470:	mov	x0, #0x0                   	// #0
  408474:	bl	406cd0 <dcgettext@plt>
  408478:	mov	x1, #0x0                   	// #0
  40847c:	mov	x2, x0
  408480:	mov	x0, #0x0                   	// #0
  408484:	bl	41c0a0 <fatal@@Base>
  408488:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40848c:	ldr	w1, [x29, #144]
  408490:	ldr	w0, [x0, #1152]
  408494:	add	w21, w1, #0x1
  408498:	tbnz	w0, #0, 408688 <main@@Base+0x1878>
  40849c:	adrp	x23, 446000 <expanding_var@@Base+0x320>
  4084a0:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4084a4:	ldr	x26, [x29, #112]
  4084a8:	adrp	x22, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4084ac:	ldr	x19, [x23, #456]
  4084b0:	add	x20, x20, #0x618
  4084b4:	add	x22, x22, #0x630
  4084b8:	ldr	x25, [x19]
  4084bc:	cbz	x25, 408550 <main@@Base+0x1740>
  4084c0:	mov	x1, x20
  4084c4:	mov	x0, x25
  4084c8:	mov	x2, #0xa                   	// #10
  4084cc:	bl	406930 <strncmp@plt>
  4084d0:	cbz	w0, 408528 <main@@Base+0x1718>
  4084d4:	mov	x0, x25
  4084d8:	mov	x1, x22
  4084dc:	mov	x2, #0xe                   	// #14
  4084e0:	bl	406930 <strncmp@plt>
  4084e4:	cbnz	w0, 408520 <main@@Base+0x1710>
  4084e8:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  4084ec:	sub	sp, sp, #0x30
  4084f0:	mov	x0, sp
  4084f4:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4084f8:	ldr	w1, [x1, #3568]
  4084fc:	add	x2, x2, #0x20
  408500:	str	x0, [x19]
  408504:	mov	w3, w21
  408508:	cmp	w1, #0x0
  40850c:	mov	w21, #0x0                   	// #0
  408510:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  408514:	csel	x2, x2, x24, ne  // ne = any
  408518:	add	x1, x1, #0x640
  40851c:	bl	406730 <sprintf@plt>
  408520:	add	x19, x19, #0x8
  408524:	b	4084b8 <main@@Base+0x16a8>
  408528:	ldr	w3, [x26, #2112]
  40852c:	sub	sp, sp, #0x30
  408530:	ldr	x2, [x29, #128]
  408534:	mov	x0, sp
  408538:	str	x0, [x19]
  40853c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  408540:	add	x19, x19, #0x8
  408544:	add	x1, x1, #0x628
  408548:	bl	406730 <sprintf@plt>
  40854c:	b	4084b8 <main@@Base+0x16a8>
  408550:	cbz	w21, 408590 <main@@Base+0x1780>
  408554:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  408558:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x30e0>
  40855c:	add	x2, x2, #0x20
  408560:	sub	sp, sp, #0x30
  408564:	ldr	w0, [x0, #3568]
  408568:	mov	w3, w21
  40856c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  408570:	add	x1, x1, #0x640
  408574:	cmp	w0, #0x0
  408578:	mov	x19, sp
  40857c:	csel	x2, x2, x24, ne  // ne = any
  408580:	mov	x0, x19
  408584:	bl	406730 <sprintf@plt>
  408588:	mov	x0, x19
  40858c:	bl	406a10 <putenv@plt>
  408590:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  408594:	ldr	x0, [x0, #440]
  408598:	bl	406c20 <fflush@plt>
  40859c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4085a0:	ldr	x0, [x0, #416]
  4085a4:	bl	406c20 <fflush@plt>
  4085a8:	mov	w0, #0x1                   	// #1
  4085ac:	bl	4281d8 <jobserver_pre_child@@Base>
  4085b0:	ldr	x1, [x23, #456]
  4085b4:	ldr	x0, [x29, #160]
  4085b8:	bl	4183a0 <exec_command@@Base>
  4085bc:	mov	w27, #0x1                   	// #1
  4085c0:	mov	w2, #0x5                   	// #5
  4085c4:	ldr	x1, [x29, #168]
  4085c8:	b	4082cc <main@@Base+0x14bc>
  4085cc:	ldr	w0, [x28, #176]
  4085d0:	cmn	w0, #0x1
  4085d4:	b.eq	408654 <main@@Base+0x1844>  // b.none
  4085d8:	adrp	x19, 449000 <commands_started@@Base+0x170>
  4085dc:	cmp	w0, #0x1
  4085e0:	str	w0, [x19, #2288]
  4085e4:	b.ls	4085f4 <main@@Base+0x17e4>  // b.plast
  4085e8:	sub	w0, w0, #0x1
  4085ec:	bl	427be0 <jobserver_setup@@Base>
  4085f0:	cbnz	w0, 4088c0 <main@@Base+0x1ab0>
  4085f4:	cmp	w25, #0x1
  4085f8:	b.hi	407e00 <main@@Base+0xff0>  // b.pmore
  4085fc:	ldr	w0, [x19, #2288]
  408600:	cmp	w0, #0x1
  408604:	b.eq	408668 <main@@Base+0x1858>  // b.none
  408608:	b	407e00 <main@@Base+0xff0>
  40860c:	mov	x1, x24
  408610:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  408614:	add	x0, x0, #0x1d8
  408618:	bl	41bf78 <perror_with_name@@Base>
  40861c:	str	xzr, [x19, #2072]
  408620:	b	407820 <main@@Base+0xa10>
  408624:	bl	406d70 <__errno_location@plt>
  408628:	ldr	w0, [x0]
  40862c:	cmp	w0, #0x2
  408630:	b.eq	407fb8 <main@@Base+0x11a8>  // b.none
  408634:	mov	w2, #0x5                   	// #5
  408638:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  40863c:	mov	x0, #0x0                   	// #0
  408640:	add	x1, x1, #0x658
  408644:	bl	406cd0 <dcgettext@plt>
  408648:	ldr	x1, [x20, #2288]
  40864c:	bl	41bf78 <perror_with_name@@Base>
  408650:	b	407fb8 <main@@Base+0x11a8>
  408654:	adrp	x0, 449000 <commands_started@@Base+0x170>
  408658:	mov	w1, #0x1                   	// #1
  40865c:	cmp	w25, w1
  408660:	str	w1, [x0, #2288]
  408664:	b.hi	407e00 <main@@Base+0xff0>  // b.pmore
  408668:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40866c:	str	xzr, [x0, #3576]
  408670:	mov	x0, x23
  408674:	bl	41b698 <output_close@@Base>
  408678:	str	wzr, [x20, #2224]
  40867c:	b	407e00 <main@@Base+0xff0>
  408680:	bl	418dd0 <gmk_add_function@@Base+0x1a8>
  408684:	b	408368 <main@@Base+0x1558>
  408688:	mov	w2, #0x5                   	// #5
  40868c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  408690:	mov	x0, #0x0                   	// #0
  408694:	add	x1, x1, #0x600
  408698:	ldr	x19, [x29, #160]
  40869c:	bl	406cd0 <dcgettext@plt>
  4086a0:	mov	w1, w21
  4086a4:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x10e0>
  4086a8:	add	x20, x20, #0x8a0
  4086ac:	bl	406d60 <printf@plt>
  4086b0:	b	4086c0 <main@@Base+0x18b0>
  4086b4:	add	x19, x19, #0x8
  4086b8:	mov	x0, x20
  4086bc:	bl	406d60 <printf@plt>
  4086c0:	ldr	x1, [x19]
  4086c4:	cbnz	x1, 4086b4 <main@@Base+0x18a4>
  4086c8:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4086cc:	ldr	x1, [x0, #440]
  4086d0:	mov	w0, #0xa                   	// #10
  4086d4:	bl	406740 <putc@plt>
  4086d8:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4086dc:	ldr	x0, [x0, #440]
  4086e0:	bl	406c20 <fflush@plt>
  4086e4:	b	40849c <main@@Base+0x168c>
  4086e8:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4086ec:	add	x2, x2, #0x1a8
  4086f0:	b	407a7c <main@@Base+0xc6c>
  4086f4:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4086f8:	add	x2, x2, #0x1a8
  4086fc:	b	407adc <main@@Base+0xccc>
  408700:	mov	x1, x23
  408704:	mov	w0, #0x2                   	// #2
  408708:	add	w26, w26, #0x1
  40870c:	bl	41a930 <concat@@Base>
  408710:	bl	41abb0 <xstrdup@@Base>
  408714:	str	x0, [x25]
  408718:	b	4083d0 <main@@Base+0x15c0>
  40871c:	cbnz	w23, 408358 <main@@Base+0x1548>
  408720:	cbz	w27, 407f8c <main@@Base+0x117c>
  408724:	mov	w0, #0x2                   	// #2
  408728:	bl	419880 <die@@Base>
  40872c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  408730:	add	x1, x1, #0x508
  408734:	mov	w2, #0x5                   	// #5
  408738:	mov	x0, #0x0                   	// #0
  40873c:	bl	406cd0 <dcgettext@plt>
  408740:	bl	406d60 <printf@plt>
  408744:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  408748:	ldr	x0, [x0, #440]
  40874c:	bl	406c20 <fflush@plt>
  408750:	b	407ebc <main@@Base+0x10ac>
  408754:	adrp	x21, 449000 <commands_started@@Base+0x170>
  408758:	ldr	x0, [x21, #2296]
  40875c:	ldrb	w1, [x0, #136]
  408760:	tbnz	w1, #4, 40892c <main@@Base+0x1b1c>
  408764:	ldr	x1, [x22, #336]
  408768:	mov	x2, x24
  40876c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  408770:	mov	x6, #0x0                   	// #0
  408774:	mov	w4, #0x0                   	// #0
  408778:	mov	w3, #0x0                   	// #0
  40877c:	ldr	x5, [x1, #8]
  408780:	add	x0, x0, #0x1a8
  408784:	mov	x1, #0x8                   	// #8
  408788:	bl	4253c8 <define_variable_in_set@@Base>
  40878c:	b	407de0 <main@@Base+0xfd0>
  408790:	ldr	x0, [x20, #48]
  408794:	cbz	x0, 407d94 <main@@Base+0xf84>
  408798:	ldr	w0, [x29, #144]
  40879c:	cbz	w0, 408940 <main@@Base+0x1b30>
  4087a0:	bl	427fe0 <jobserver_clear@@Base>
  4087a4:	ldr	x0, [x20, #48]
  4087a8:	bl	406b90 <free@plt>
  4087ac:	str	xzr, [x20, #48]
  4087b0:	b	407d94 <main@@Base+0xf84>
  4087b4:	mov	x0, x23
  4087b8:	bl	41b698 <output_close@@Base>
  4087bc:	b	407db4 <main@@Base+0xfa4>
  4087c0:	bl	421208 <f_mtime@@Base>
  4087c4:	mov	x1, x0
  4087c8:	b	408280 <main@@Base+0x1470>
  4087cc:	mov	w2, #0x5                   	// #5
  4087d0:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4087d4:	mov	x0, #0x0                   	// #0
  4087d8:	add	x1, x1, #0x718
  4087dc:	bl	406cd0 <dcgettext@plt>
  4087e0:	mov	x2, x0
  4087e4:	mov	x1, #0x0                   	// #0
  4087e8:	mov	x0, #0x0                   	// #0
  4087ec:	bl	41bd88 <error@@Base>
  4087f0:	b	407ffc <main@@Base+0x11ec>
  4087f4:	mov	w21, #0x1                   	// #1
  4087f8:	b	407ff0 <main@@Base+0x11e0>
  4087fc:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  408800:	add	x1, x1, #0x6f8
  408804:	mov	w2, #0x5                   	// #5
  408808:	mov	x0, #0x0                   	// #0
  40880c:	bl	406cd0 <dcgettext@plt>
  408810:	bl	406d60 <printf@plt>
  408814:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  408818:	ldr	x0, [x0, #440]
  40881c:	bl	406c20 <fflush@plt>
  408820:	b	407fd4 <main@@Base+0x11c4>
  408824:	adrp	x0, 449000 <commands_started@@Base+0x170>
  408828:	ldr	x0, [x0, #2104]
  40882c:	ldrb	w1, [x0, #44]
  408830:	ldr	x19, [x0, #8]
  408834:	tbz	w1, #0, 408900 <main@@Base+0x1af0>
  408838:	mov	x0, x19
  40883c:	bl	40c808 <variable_expand@@Base>
  408840:	str	x0, [x29, #184]
  408844:	ldr	x0, [x29, #184]
  408848:	ldrb	w1, [x0]
  40884c:	cbnz	w1, 40896c <main@@Base+0x1b5c>
  408850:	ldr	x0, [x20, #24]
  408854:	cbnz	x0, 407fc8 <main@@Base+0x11b8>
  408858:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  40885c:	mov	x1, #0xd                   	// #13
  408860:	add	x0, x0, #0x6a8
  408864:	bl	4257c8 <lookup_variable@@Base>
  408868:	cbz	x0, 40887c <main@@Base+0x1a6c>
  40886c:	ldr	x0, [x0, #8]
  408870:	cbz	x0, 40887c <main@@Base+0x1a6c>
  408874:	ldrb	w0, [x0]
  408878:	cbnz	w0, 408998 <main@@Base+0x1b88>
  40887c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  408880:	mov	w2, #0x5                   	// #5
  408884:	add	x1, x1, #0x6c8
  408888:	b	408470 <main@@Base+0x1660>
  40888c:	bl	40ada8 <undefine_default_variables@@Base>
  408890:	b	407df0 <main@@Base+0xfe0>
  408894:	ldr	x25, [x0]
  408898:	b	4082ac <main@@Base+0x149c>
  40889c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4088a0:	mov	w2, #0x5                   	// #5
  4088a4:	add	x1, x1, #0x3f0
  4088a8:	b	408470 <main@@Base+0x1660>
  4088ac:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4088b0:	add	x1, x1, #0x438
  4088b4:	mov	w2, #0x5                   	// #5
  4088b8:	bl	406cd0 <dcgettext@plt>
  4088bc:	bl	41b730 <pfatal_with_name@@Base>
  4088c0:	bl	427f80 <jobserver_get_auth@@Base>
  4088c4:	str	x0, [x20, #48]
  4088c8:	cbz	x0, 4085f4 <main@@Base+0x17e4>
  4088cc:	ldr	w0, [x19, #2288]
  4088d0:	str	wzr, [x19, #2288]
  4088d4:	str	w0, [x20, #40]
  4088d8:	b	407e00 <main@@Base+0xff0>
  4088dc:	mov	w1, #0x0                   	// #0
  4088e0:	mov	w0, #0x1                   	// #1
  4088e4:	bl	419200 <gmk_add_function@@Base+0x5d8>
  4088e8:	mov	w21, #0x0                   	// #0
  4088ec:	ldr	w0, [x20, #2240]
  4088f0:	str	w0, [x20, #2236]
  4088f4:	b	407fa8 <main@@Base+0x1198>
  4088f8:	mov	w0, #0x0                   	// #0
  4088fc:	b	40834c <main@@Base+0x153c>
  408900:	adrp	x22, 449000 <commands_started@@Base+0x170>
  408904:	mov	x0, x19
  408908:	bl	406680 <strlen@plt>
  40890c:	mov	x2, x0
  408910:	ldr	x0, [x22, #2000]
  408914:	mov	x1, x19
  408918:	bl	40bbb0 <variable_buffer_output@@Base>
  40891c:	strb	wzr, [x0]
  408920:	ldr	x0, [x22, #2000]
  408924:	str	x0, [x29, #184]
  408928:	b	408844 <main@@Base+0x1a34>
  40892c:	ldr	x0, [x0, #24]
  408930:	bl	41aee0 <free_ns_chain@@Base>
  408934:	ldr	x0, [x21, #2296]
  408938:	str	xzr, [x0, #24]
  40893c:	b	408764 <main@@Base+0x1954>
  408940:	mov	w2, #0x5                   	// #5
  408944:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  408948:	mov	x0, #0x0                   	// #0
  40894c:	add	x1, x1, #0x4c8
  408950:	bl	406cd0 <dcgettext@plt>
  408954:	mov	x2, x0
  408958:	ldr	w3, [x28, #176]
  40895c:	mov	x1, #0x14                  	// #20
  408960:	mov	x0, #0x0                   	// #0
  408964:	bl	41bd88 <error@@Base>
  408968:	b	4087a0 <main@@Base+0x1990>
  40896c:	bl	40ced8 <lookup_file@@Base>
  408970:	mov	x19, x0
  408974:	cbz	x0, 4089a8 <main@@Base+0x1b98>
  408978:	mov	x0, #0x40                  	// #64
  40897c:	bl	41ab50 <xcalloc@@Base>
  408980:	str	x19, [x0, #16]
  408984:	str	x0, [x20, #24]
  408988:	b	408850 <main@@Base+0x1a40>
  40898c:	bl	421208 <f_mtime@@Base>
  408990:	mov	x1, x0
  408994:	b	408338 <main@@Base+0x1528>
  408998:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  40899c:	mov	w2, #0x5                   	// #5
  4089a0:	add	x1, x1, #0x6b8
  4089a4:	b	408470 <main@@Base+0x1660>
  4089a8:	add	x0, x29, #0xb8
  4089ac:	mov	w4, #0x0                   	// #0
  4089b0:	mov	x3, #0x0                   	// #0
  4089b4:	mov	w2, #0x1                   	// #1
  4089b8:	mov	x1, #0x10                  	// #16
  4089bc:	bl	41e790 <parse_file_seq@@Base>
  4089c0:	mov	x22, x0
  4089c4:	cbz	x0, 408850 <main@@Base+0x1a40>
  4089c8:	ldr	x0, [x0]
  4089cc:	cbz	x0, 4089e0 <main@@Base+0x1bd0>
  4089d0:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4089d4:	mov	w2, #0x5                   	// #5
  4089d8:	add	x1, x1, #0x678
  4089dc:	b	408470 <main@@Base+0x1660>
  4089e0:	ldr	x0, [x22, #8]
  4089e4:	bl	424940 <strcache_add@@Base>
  4089e8:	bl	40cf50 <enter_file@@Base>
  4089ec:	str	xzr, [x22, #8]
  4089f0:	mov	x19, x0
  4089f4:	mov	x0, x22
  4089f8:	bl	41aee0 <free_ns_chain@@Base>
  4089fc:	cbz	x19, 408850 <main@@Base+0x1a40>
  408a00:	b	408978 <main@@Base+0x1b68>

0000000000408a04 <_start@@Base>:
  408a04:	mov	x29, #0x0                   	// #0
  408a08:	mov	x30, #0x0                   	// #0
  408a0c:	mov	x5, x0
  408a10:	ldr	x1, [sp]
  408a14:	add	x2, sp, #0x8
  408a18:	mov	x6, sp
  408a1c:	movz	x0, #0x0, lsl #48
  408a20:	movk	x0, #0x0, lsl #32
  408a24:	movk	x0, #0x40, lsl #16
  408a28:	movk	x0, #0x6e10
  408a2c:	movz	x3, #0x0, lsl #48
  408a30:	movk	x3, #0x0, lsl #32
  408a34:	movk	x3, #0x42, lsl #16
  408a38:	movk	x3, #0x8e50
  408a3c:	movz	x4, #0x0, lsl #48
  408a40:	movk	x4, #0x0, lsl #32
  408a44:	movk	x4, #0x42, lsl #16
  408a48:	movk	x4, #0x8ed0
  408a4c:	bl	406950 <__libc_start_main@plt>
  408a50:	bl	406ab0 <abort@plt>
  408a54:	adrp	x0, 444000 <_IO_stdin_used@@Base+0x1b0e0>
  408a58:	ldr	x0, [x0, #4064]
  408a5c:	cbz	x0, 408a64 <_start@@Base+0x60>
  408a60:	b	406a80 <__gmon_start__@plt>
  408a64:	ret
  408a68:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  408a6c:	add	x0, x0, #0x198
  408a70:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  408a74:	add	x1, x1, #0x198
  408a78:	cmp	x1, x0
  408a7c:	b.eq	408a94 <_start@@Base+0x90>  // b.none
  408a80:	adrp	x1, 428000 <jobserver_clear@@Base+0x20>
  408a84:	ldr	x1, [x1, #3880]
  408a88:	cbz	x1, 408a94 <_start@@Base+0x90>
  408a8c:	mov	x16, x1
  408a90:	br	x16
  408a94:	ret
  408a98:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  408a9c:	add	x0, x0, #0x198
  408aa0:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  408aa4:	add	x1, x1, #0x198
  408aa8:	sub	x1, x1, x0
  408aac:	lsr	x2, x1, #63
  408ab0:	add	x1, x2, x1, asr #3
  408ab4:	cmp	xzr, x1, asr #1
  408ab8:	asr	x1, x1, #1
  408abc:	b.eq	408ad4 <_start@@Base+0xd0>  // b.none
  408ac0:	adrp	x2, 428000 <jobserver_clear@@Base+0x20>
  408ac4:	ldr	x2, [x2, #3888]
  408ac8:	cbz	x2, 408ad4 <_start@@Base+0xd0>
  408acc:	mov	x16, x2
  408ad0:	br	x16
  408ad4:	ret
  408ad8:	stp	x29, x30, [sp, #-32]!
  408adc:	mov	x29, sp
  408ae0:	str	x19, [sp, #16]
  408ae4:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  408ae8:	ldrb	w0, [x19, #468]
  408aec:	cbnz	w0, 408afc <_start@@Base+0xf8>
  408af0:	bl	408a68 <_start@@Base+0x64>
  408af4:	mov	w0, #0x1                   	// #1
  408af8:	strb	w0, [x19, #468]
  408afc:	ldr	x19, [sp, #16]
  408b00:	ldp	x29, x30, [sp], #32
  408b04:	ret
  408b08:	b	408a98 <_start@@Base+0x94>
  408b0c:	nop
  408b10:	stp	x29, x30, [sp, #-32]!
  408b14:	mov	x29, sp
  408b18:	ldr	x0, [sp, #48]
  408b1c:	str	x19, [sp, #16]
  408b20:	mov	x19, x6
  408b24:	bl	4097b8 <ar_name_equal@@Base>
  408b28:	cmp	w0, #0x0
  408b2c:	csel	x0, x19, xzr, ne  // ne = any
  408b30:	ldr	x19, [sp, #16]
  408b34:	ldp	x29, x30, [sp], #32
  408b38:	ret
  408b3c:	nop
  408b40:	stp	x29, x30, [sp, #-32]!
  408b44:	mov	w2, #0x5                   	// #5
  408b48:	mov	x29, sp
  408b4c:	stp	x19, x20, [sp, #16]
  408b50:	mov	x20, x1
  408b54:	ldr	x19, [sp, #48]
  408b58:	ldr	x0, [x19, #8]
  408b5c:	bl	406bf0 <fnmatch@plt>
  408b60:	cbz	w0, 408b74 <_start@@Base+0x170>
  408b64:	mov	x0, #0x0                   	// #0
  408b68:	ldp	x19, x20, [sp, #16]
  408b6c:	ldp	x29, x30, [sp], #32
  408b70:	ret
  408b74:	ldr	x0, [x19, #16]
  408b78:	bl	41ab50 <xcalloc@@Base>
  408b7c:	ldr	x1, [x19]
  408b80:	mov	x3, x20
  408b84:	adrp	x4, 42f000 <_IO_stdin_used@@Base+0x60e0>
  408b88:	adrp	x2, 428000 <jobserver_clear@@Base+0x20>
  408b8c:	add	x4, x4, #0x430
  408b90:	add	x2, x2, #0xf38
  408b94:	mov	x20, x0
  408b98:	mov	w0, #0x4                   	// #4
  408b9c:	bl	41a930 <concat@@Base>
  408ba0:	bl	424940 <strcache_add@@Base>
  408ba4:	ldr	x1, [x19, #24]
  408ba8:	str	x1, [x20]
  408bac:	ldr	w1, [x19, #32]
  408bb0:	str	x0, [x20, #8]
  408bb4:	mov	x0, #0x0                   	// #0
  408bb8:	add	w1, w1, #0x1
  408bbc:	str	x20, [x19, #24]
  408bc0:	str	w1, [x19, #32]
  408bc4:	ldp	x19, x20, [sp, #16]
  408bc8:	ldp	x29, x30, [sp], #32
  408bcc:	ret

0000000000408bd0 <ar_name@@Base>:
  408bd0:	stp	x29, x30, [sp, #-32]!
  408bd4:	mov	w1, #0x28                  	// #40
  408bd8:	mov	x29, sp
  408bdc:	stp	x19, x20, [sp, #16]
  408be0:	mov	x20, x0
  408be4:	bl	406bb0 <strchr@plt>
  408be8:	cmp	x0, #0x0
  408bec:	ccmp	x20, x0, #0x4, ne  // ne = any
  408bf0:	b.eq	408c10 <ar_name@@Base+0x40>  // b.none
  408bf4:	mov	x19, x0
  408bf8:	bl	406680 <strlen@plt>
  408bfc:	sub	x0, x0, #0x1
  408c00:	add	x1, x19, x0
  408c04:	ldrb	w0, [x19, x0]
  408c08:	cmp	w0, #0x29
  408c0c:	b.eq	408c20 <ar_name@@Base+0x50>  // b.none
  408c10:	mov	w0, #0x0                   	// #0
  408c14:	ldp	x19, x20, [sp, #16]
  408c18:	ldp	x29, x30, [sp], #32
  408c1c:	ret
  408c20:	add	x0, x19, #0x1
  408c24:	cmp	x1, x0
  408c28:	b.eq	408c10 <ar_name@@Base+0x40>  // b.none
  408c2c:	ldrb	w2, [x19, #1]
  408c30:	mov	w0, #0x1                   	// #1
  408c34:	cmp	w2, #0x28
  408c38:	b.ne	408c14 <ar_name@@Base+0x44>  // b.any
  408c3c:	ldurb	w1, [x1, #-1]
  408c40:	cmp	w1, #0x29
  408c44:	b.ne	408c14 <ar_name@@Base+0x44>  // b.any
  408c48:	mov	x0, x20
  408c4c:	bl	406680 <strlen@plt>
  408c50:	mov	w2, #0x5                   	// #5
  408c54:	mov	x19, x0
  408c58:	adrp	x1, 428000 <jobserver_clear@@Base+0x20>
  408c5c:	mov	x0, #0x0                   	// #0
  408c60:	add	x1, x1, #0xf40
  408c64:	bl	406cd0 <dcgettext@plt>
  408c68:	mov	x3, x20
  408c6c:	mov	x2, x0
  408c70:	mov	x1, x19
  408c74:	mov	x0, #0x0                   	// #0
  408c78:	bl	41c0a0 <fatal@@Base>
  408c7c:	nop

0000000000408c80 <ar_parse_name@@Base>:
  408c80:	stp	x29, x30, [sp, #-48]!
  408c84:	mov	x29, sp
  408c88:	stp	x19, x20, [sp, #16]
  408c8c:	mov	x19, x1
  408c90:	str	x21, [sp, #32]
  408c94:	mov	x21, x2
  408c98:	bl	41abb0 <xstrdup@@Base>
  408c9c:	str	x0, [x19]
  408ca0:	mov	w1, #0x28                  	// #40
  408ca4:	bl	406bb0 <strchr@plt>
  408ca8:	mov	x19, x0
  408cac:	mov	x20, x0
  408cb0:	strb	wzr, [x19], #1
  408cb4:	mov	x0, x19
  408cb8:	bl	406680 <strlen@plt>
  408cbc:	strb	wzr, [x20, x0]
  408cc0:	str	x19, [x21]
  408cc4:	ldp	x19, x20, [sp, #16]
  408cc8:	ldr	x21, [sp, #32]
  408ccc:	ldp	x29, x30, [sp], #48
  408cd0:	ret
  408cd4:	nop

0000000000408cd8 <ar_member_date@@Base>:
  408cd8:	stp	x29, x30, [sp, #-48]!
  408cdc:	mov	x29, sp
  408ce0:	stp	x19, x20, [sp, #16]
  408ce4:	str	x21, [sp, #32]
  408ce8:	bl	41abb0 <xstrdup@@Base>
  408cec:	mov	w1, #0x28                  	// #40
  408cf0:	mov	x19, x0
  408cf4:	bl	406bb0 <strchr@plt>
  408cf8:	mov	x20, x0
  408cfc:	mov	x21, x0
  408d00:	strb	wzr, [x20], #1
  408d04:	mov	x0, x20
  408d08:	bl	406680 <strlen@plt>
  408d0c:	mov	x1, x0
  408d10:	mov	x0, x19
  408d14:	strb	wzr, [x21, x1]
  408d18:	bl	40ced8 <lookup_file@@Base>
  408d1c:	cbz	x0, 408d60 <ar_member_date@@Base+0x88>
  408d20:	mov	w1, #0x0                   	// #0
  408d24:	bl	421208 <f_mtime@@Base>
  408d28:	mov	x2, x20
  408d2c:	adrp	x1, 408000 <main@@Base+0x11f0>
  408d30:	add	x1, x1, #0xb10
  408d34:	mov	x0, x19
  408d38:	bl	409130 <ar_scan@@Base>
  408d3c:	mov	x20, x0
  408d40:	mov	x0, x19
  408d44:	bl	406b90 <free@plt>
  408d48:	cmp	x20, #0x0
  408d4c:	csinv	x0, x20, xzr, gt
  408d50:	ldp	x19, x20, [sp, #16]
  408d54:	ldr	x21, [sp, #32]
  408d58:	ldp	x29, x30, [sp], #48
  408d5c:	ret
  408d60:	mov	x0, x19
  408d64:	bl	40b470 <file_exists_p@@Base>
  408d68:	cbz	w0, 408d28 <ar_member_date@@Base+0x50>
  408d6c:	mov	x0, x19
  408d70:	bl	424940 <strcache_add@@Base>
  408d74:	bl	40cf50 <enter_file@@Base>
  408d78:	cbz	x0, 408d28 <ar_member_date@@Base+0x50>
  408d7c:	b	408d20 <ar_member_date@@Base+0x48>

0000000000408d80 <ar_touch@@Base>:
  408d80:	stp	x29, x30, [sp, #-64]!
  408d84:	mov	x29, sp
  408d88:	stp	x19, x20, [sp, #16]
  408d8c:	stp	x21, x22, [sp, #32]
  408d90:	mov	x22, x0
  408d94:	bl	41abb0 <xstrdup@@Base>
  408d98:	mov	w1, #0x28                  	// #40
  408d9c:	mov	x20, x0
  408da0:	bl	406bb0 <strchr@plt>
  408da4:	mov	x21, x0
  408da8:	mov	x19, x0
  408dac:	strb	wzr, [x21], #1
  408db0:	mov	x0, x21
  408db4:	bl	406680 <strlen@plt>
  408db8:	mov	x1, x0
  408dbc:	mov	x0, x20
  408dc0:	strb	wzr, [x19, x1]
  408dc4:	bl	424940 <strcache_add@@Base>
  408dc8:	bl	40cf50 <enter_file@@Base>
  408dcc:	mov	w1, #0x0                   	// #0
  408dd0:	bl	421208 <f_mtime@@Base>
  408dd4:	mov	x1, x21
  408dd8:	mov	x0, x20
  408ddc:	bl	409830 <ar_member_touch@@Base>
  408de0:	cmn	w0, #0x1
  408de4:	b.eq	408efc <ar_touch@@Base+0x17c>  // b.none
  408de8:	mov	w19, w0
  408dec:	cmp	w0, #0x0
  408df0:	b.lt	408e68 <ar_touch@@Base+0xe8>  // b.tstop
  408df4:	b.eq	408e4c <ar_touch@@Base+0xcc>  // b.none
  408df8:	cmp	w0, #0x1
  408dfc:	b.ne	408f14 <ar_touch@@Base+0x194>  // b.any
  408e00:	mov	x0, x21
  408e04:	str	x23, [sp, #48]
  408e08:	bl	406680 <strlen@plt>
  408e0c:	mov	x23, x0
  408e10:	mov	x0, x20
  408e14:	bl	406680 <strlen@plt>
  408e18:	mov	w2, #0x5                   	// #5
  408e1c:	mov	x22, x0
  408e20:	adrp	x1, 428000 <jobserver_clear@@Base+0x20>
  408e24:	mov	x0, #0x0                   	// #0
  408e28:	add	x1, x1, #0xfc8
  408e2c:	bl	406cd0 <dcgettext@plt>
  408e30:	add	x1, x23, x22
  408e34:	mov	x2, x0
  408e38:	mov	x4, x20
  408e3c:	mov	x3, x21
  408e40:	mov	x0, #0x0                   	// #0
  408e44:	bl	41bd88 <error@@Base>
  408e48:	ldr	x23, [sp, #48]
  408e4c:	mov	x0, x20
  408e50:	bl	406b90 <free@plt>
  408e54:	mov	w0, w19
  408e58:	ldp	x19, x20, [sp, #16]
  408e5c:	ldp	x21, x22, [sp, #32]
  408e60:	ldp	x29, x30, [sp], #64
  408e64:	ret
  408e68:	cmn	w0, #0x3
  408e6c:	b.eq	408ecc <ar_touch@@Base+0x14c>  // b.none
  408e70:	cmn	w0, #0x2
  408e74:	b.ne	408f14 <ar_touch@@Base+0x194>  // b.any
  408e78:	mov	x0, x20
  408e7c:	bl	406680 <strlen@plt>
  408e80:	adrp	x1, 428000 <jobserver_clear@@Base+0x20>
  408e84:	mov	x19, x0
  408e88:	add	x1, x1, #0xf98
  408e8c:	mov	w2, #0x5                   	// #5
  408e90:	mov	x0, #0x0                   	// #0
  408e94:	bl	406cd0 <dcgettext@plt>
  408e98:	mov	x2, x0
  408e9c:	mov	x3, x20
  408ea0:	mov	x1, x19
  408ea4:	mov	x0, #0x0                   	// #0
  408ea8:	bl	41bd88 <error@@Base>
  408eac:	mov	x0, x20
  408eb0:	mov	w19, #0x1                   	// #1
  408eb4:	bl	406b90 <free@plt>
  408eb8:	mov	w0, w19
  408ebc:	ldp	x19, x20, [sp, #16]
  408ec0:	ldp	x21, x22, [sp, #32]
  408ec4:	ldp	x29, x30, [sp], #64
  408ec8:	ret
  408ecc:	mov	x1, x20
  408ed0:	adrp	x0, 428000 <jobserver_clear@@Base+0x20>
  408ed4:	add	x0, x0, #0xfc0
  408ed8:	bl	41bf78 <perror_with_name@@Base>
  408edc:	mov	x0, x20
  408ee0:	mov	w19, #0x1                   	// #1
  408ee4:	bl	406b90 <free@plt>
  408ee8:	mov	w0, w19
  408eec:	ldp	x19, x20, [sp, #16]
  408ef0:	ldp	x21, x22, [sp, #32]
  408ef4:	ldp	x29, x30, [sp], #64
  408ef8:	ret
  408efc:	mov	x0, x20
  408f00:	bl	406680 <strlen@plt>
  408f04:	adrp	x1, 428000 <jobserver_clear@@Base+0x20>
  408f08:	mov	x19, x0
  408f0c:	add	x1, x1, #0xf70
  408f10:	b	408e8c <ar_touch@@Base+0x10c>
  408f14:	mov	x0, x22
  408f18:	bl	406680 <strlen@plt>
  408f1c:	mov	w2, #0x5                   	// #5
  408f20:	mov	x21, x0
  408f24:	adrp	x1, 428000 <jobserver_clear@@Base+0x20>
  408f28:	mov	x0, #0x0                   	// #0
  408f2c:	add	x1, x1, #0xff8
  408f30:	bl	406cd0 <dcgettext@plt>
  408f34:	mov	x3, x22
  408f38:	mov	x2, x0
  408f3c:	mov	x1, x21
  408f40:	mov	x0, #0x0                   	// #0
  408f44:	bl	41bd88 <error@@Base>
  408f48:	mov	w19, #0x1                   	// #1
  408f4c:	mov	x0, x20
  408f50:	bl	406b90 <free@plt>
  408f54:	mov	w0, w19
  408f58:	ldp	x19, x20, [sp, #16]
  408f5c:	ldp	x21, x22, [sp, #32]
  408f60:	ldp	x29, x30, [sp], #64
  408f64:	ret

0000000000408f68 <ar_glob@@Base>:
  408f68:	ldrb	w3, [x1]
  408f6c:	mov	x5, x1
  408f70:	mov	x4, x1
  408f74:	mov	x6, x2
  408f78:	mov	w1, #0x0                   	// #0
  408f7c:	cbz	w3, 409074 <ar_glob@@Base+0x10c>
  408f80:	cmp	w3, #0x5c
  408f84:	b.eq	409084 <ar_glob@@Base+0x11c>  // b.none
  408f88:	b.hi	409058 <ar_glob@@Base+0xf0>  // b.pmore
  408f8c:	cmp	w3, #0x5b
  408f90:	b.eq	40907c <ar_glob@@Base+0x114>  // b.none
  408f94:	cmp	w3, #0x2a
  408f98:	b.eq	408fa4 <ar_glob@@Base+0x3c>  // b.none
  408f9c:	cmp	w3, #0x3f
  408fa0:	b.ne	409068 <ar_glob@@Base+0x100>  // b.any
  408fa4:	stp	x29, x30, [sp, #-80]!
  408fa8:	adrp	x1, 408000 <main@@Base+0x11f0>
  408fac:	add	x1, x1, #0xb40
  408fb0:	mov	x29, sp
  408fb4:	add	x2, x29, #0x28
  408fb8:	str	x19, [sp, #16]
  408fbc:	stp	x0, x5, [x29, #40]
  408fc0:	stp	x6, xzr, [x29, #56]
  408fc4:	str	wzr, [x29, #72]
  408fc8:	bl	409130 <ar_scan@@Base>
  408fcc:	ldr	x2, [x29, #64]
  408fd0:	cbz	x2, 40908c <ar_glob@@Base+0x124>
  408fd4:	ldr	w0, [x29, #72]
  408fd8:	mov	w1, #0x0                   	// #0
  408fdc:	lsl	x0, x0, #3
  408fe0:	add	x0, x0, #0xf
  408fe4:	and	x0, x0, #0xffffffff0
  408fe8:	sub	sp, sp, x0
  408fec:	mov	x19, sp
  408ff0:	mov	w3, w1
  408ff4:	add	w1, w1, #0x1
  408ff8:	ldr	x0, [x2, #8]
  408ffc:	ldr	x2, [x2]
  409000:	str	x0, [x19, w3, uxtw #3]
  409004:	cbnz	x2, 408ff0 <ar_glob@@Base+0x88>
  409008:	mov	x0, x19
  40900c:	adrp	x3, 41a000 <die@@Base+0x780>
  409010:	mov	x2, #0x8                   	// #8
  409014:	add	x3, x3, #0x690
  409018:	bl	4067b0 <qsort@plt>
  40901c:	ldr	x0, [x29, #64]
  409020:	cbz	x0, 40908c <ar_glob@@Base+0x124>
  409024:	mov	x1, x0
  409028:	mov	w3, #0x0                   	// #0
  40902c:	nop
  409030:	mov	w2, w3
  409034:	add	w3, w3, #0x1
  409038:	ldr	x2, [x19, w2, uxtw #3]
  40903c:	str	x2, [x1, #8]
  409040:	ldr	x1, [x1]
  409044:	cbnz	x1, 409030 <ar_glob@@Base+0xc8>
  409048:	mov	sp, x29
  40904c:	ldr	x19, [sp, #16]
  409050:	ldp	x29, x30, [sp], #80
  409054:	ret
  409058:	cmp	w3, #0x5d
  40905c:	b.ne	409068 <ar_glob@@Base+0x100>  // b.any
  409060:	cbnz	w1, 408fa4 <ar_glob@@Base+0x3c>
  409064:	nop
  409068:	ldrb	w3, [x4, #1]
  40906c:	add	x4, x4, #0x1
  409070:	cbnz	w3, 408f80 <ar_glob@@Base+0x18>
  409074:	mov	x0, #0x0                   	// #0
  409078:	ret
  40907c:	mov	w1, #0x1                   	// #1
  409080:	b	409068 <ar_glob@@Base+0x100>
  409084:	add	x4, x4, #0x1
  409088:	b	409068 <ar_glob@@Base+0x100>
  40908c:	mov	sp, x29
  409090:	mov	x0, #0x0                   	// #0
  409094:	ldr	x19, [sp, #16]
  409098:	ldp	x29, x30, [sp], #80
  40909c:	ret
  4090a0:	stp	x29, x30, [sp, #-48]!
  4090a4:	mov	x29, sp
  4090a8:	stp	x19, x20, [sp, #16]
  4090ac:	mov	x20, x3
  4090b0:	ldr	x19, [sp, #64]
  4090b4:	stp	x21, x22, [sp, #32]
  4090b8:	mov	x21, x1
  4090bc:	mov	x0, x19
  4090c0:	mov	w1, #0x2f                  	// #47
  4090c4:	mov	w22, w2
  4090c8:	bl	406a70 <strrchr@plt>
  4090cc:	cmp	x0, #0x0
  4090d0:	mov	x1, x21
  4090d4:	csinc	x19, x19, x0, eq  // eq = none
  4090d8:	mov	x0, x19
  4090dc:	cbnz	w22, 409104 <ar_glob@@Base+0x19c>
  4090e0:	bl	406b40 <strcmp@plt>
  4090e4:	cmp	w0, #0x0
  4090e8:	cset	w0, eq  // eq = none
  4090ec:	cmp	w0, #0x0
  4090f0:	csel	x0, x20, xzr, ne  // ne = any
  4090f4:	ldp	x19, x20, [sp, #16]
  4090f8:	ldp	x21, x22, [sp, #32]
  4090fc:	ldp	x29, x30, [sp], #48
  409100:	ret
  409104:	mov	x2, #0xf                   	// #15
  409108:	bl	406930 <strncmp@plt>
  40910c:	cmp	w0, #0x0
  409110:	cset	w0, eq  // eq = none
  409114:	cmp	w0, #0x0
  409118:	csel	x0, x20, xzr, ne  // ne = any
  40911c:	ldp	x19, x20, [sp, #16]
  409120:	ldp	x21, x22, [sp, #32]
  409124:	ldp	x29, x30, [sp], #48
  409128:	ret
  40912c:	nop

0000000000409130 <ar_scan@@Base>:
  409130:	stp	x29, x30, [sp, #-224]!
  409134:	mov	x29, sp
  409138:	stp	x19, x20, [sp, #16]
  40913c:	stp	x21, x22, [sp, #32]
  409140:	mov	x22, x1
  409144:	mov	w1, #0x0                   	// #0
  409148:	stp	x23, x24, [sp, #48]
  40914c:	mov	x23, x2
  409150:	mov	w2, #0x0                   	// #0
  409154:	stp	x25, x26, [sp, #64]
  409158:	stp	x27, x28, [sp, #80]
  40915c:	sub	sp, sp, #0x20
  409160:	bl	406900 <open@plt>
  409164:	tbnz	w0, #31, 4097ac <ar_scan@@Base+0x67c>
  409168:	mov	w20, w0
  40916c:	add	x1, x29, #0xa0
  409170:	mov	x2, #0x8                   	// #8
  409174:	bl	41ad88 <readbuf@@Base>
  409178:	cmp	w0, #0x8
  40917c:	b.ne	4093c8 <ar_scan@@Base+0x298>  // b.any
  409180:	mov	x0, #0x3c21                	// #15393
  409184:	ldr	x1, [x29, #160]
  409188:	movk	x0, #0x7261, lsl #16
  40918c:	movk	x0, #0x6863, lsl #32
  409190:	movk	x0, #0xa3e, lsl #48
  409194:	cmp	x1, x0
  409198:	b.ne	4093c8 <ar_scan@@Base+0x298>  // b.any
  40919c:	add	x0, x29, #0x97
  4091a0:	adrp	x24, 429000 <_IO_stdin_used@@Base+0xe0>
  4091a4:	mov	x19, #0x8                   	// #8
  4091a8:	add	x24, x24, #0x30
  4091ac:	mov	x21, #0x0                   	// #0
  4091b0:	str	x0, [x29, #104]
  4091b4:	str	wzr, [x29, #112]
  4091b8:	b	4091cc <ar_scan@@Base+0x9c>
  4091bc:	bl	406d70 <__errno_location@plt>
  4091c0:	ldr	w0, [x0]
  4091c4:	cmp	w0, #0x4
  4091c8:	b.ne	4093c8 <ar_scan@@Base+0x298>  // b.any
  4091cc:	mov	x1, x19
  4091d0:	mov	w0, w20
  4091d4:	mov	w2, #0x0                   	// #0
  4091d8:	bl	406800 <lseek@plt>
  4091dc:	cmn	x0, #0x1
  4091e0:	b.eq	4091bc <ar_scan@@Base+0x8c>  // b.none
  4091e4:	tbnz	x0, #63, 4093c8 <ar_scan@@Base+0x298>
  4091e8:	add	x1, x29, #0xa0
  4091ec:	mov	w0, w20
  4091f0:	mov	x2, #0x3c                  	// #60
  4091f4:	bl	41ad88 <readbuf@@Base>
  4091f8:	cbz	w0, 40979c <ar_scan@@Base+0x66c>
  4091fc:	cmp	w0, #0x3c
  409200:	b.ne	4093c8 <ar_scan@@Base+0x298>  // b.any
  409204:	ldrh	w0, [x29, #218]
  409208:	cmp	w0, #0xa60
  40920c:	b.ne	4093c8 <ar_scan@@Base+0x298>  // b.any
  409210:	ldp	x1, x0, [x29, #160]
  409214:	stp	x1, x0, [x29, #136]
  409218:	strb	wzr, [x29, #152]
  40921c:	lsr	x27, x0, #56
  409220:	cmp	w27, #0x20
  409224:	b.ne	4093f8 <ar_scan@@Base+0x2c8>  // b.any
  409228:	strb	wzr, [x29, #151]
  40922c:	ubfx	x27, x0, #48, #8
  409230:	cmp	w27, #0x20
  409234:	b.ne	409724 <ar_scan@@Base+0x5f4>  // b.any
  409238:	strb	wzr, [x29, #150]
  40923c:	ubfx	x27, x0, #40, #8
  409240:	cmp	w27, #0x20
  409244:	b.ne	40972c <ar_scan@@Base+0x5fc>  // b.any
  409248:	strb	wzr, [x29, #149]
  40924c:	ubfx	x27, x0, #32, #8
  409250:	cmp	w27, #0x20
  409254:	b.ne	409734 <ar_scan@@Base+0x604>  // b.any
  409258:	strb	wzr, [x29, #148]
  40925c:	lsr	w27, w0, #24
  409260:	cmp	w27, #0x20
  409264:	b.ne	40973c <ar_scan@@Base+0x60c>  // b.any
  409268:	strb	wzr, [x29, #147]
  40926c:	ubfx	w27, w0, #16, #8
  409270:	cmp	w27, #0x20
  409274:	b.ne	409744 <ar_scan@@Base+0x614>  // b.any
  409278:	strb	wzr, [x29, #146]
  40927c:	ubfx	w27, w0, #8, #8
  409280:	cmp	w27, #0x20
  409284:	b.ne	40974c <ar_scan@@Base+0x61c>  // b.any
  409288:	strb	wzr, [x29, #145]
  40928c:	and	w27, w0, #0xff
  409290:	cmp	w27, #0x20
  409294:	b.ne	409754 <ar_scan@@Base+0x624>  // b.any
  409298:	strb	wzr, [x29, #144]
  40929c:	lsr	x27, x1, #56
  4092a0:	cmp	w27, #0x20
  4092a4:	b.ne	40975c <ar_scan@@Base+0x62c>  // b.any
  4092a8:	strb	wzr, [x29, #143]
  4092ac:	ubfx	x27, x1, #48, #8
  4092b0:	cmp	w27, #0x20
  4092b4:	b.ne	409764 <ar_scan@@Base+0x634>  // b.any
  4092b8:	strb	wzr, [x29, #142]
  4092bc:	ubfx	x27, x1, #40, #8
  4092c0:	cmp	w27, #0x20
  4092c4:	b.ne	40976c <ar_scan@@Base+0x63c>  // b.any
  4092c8:	strb	wzr, [x29, #141]
  4092cc:	ubfx	x27, x1, #32, #8
  4092d0:	cmp	w27, #0x20
  4092d4:	b.ne	409774 <ar_scan@@Base+0x644>  // b.any
  4092d8:	strb	wzr, [x29, #140]
  4092dc:	lsr	w27, w1, #24
  4092e0:	cmp	w27, #0x20
  4092e4:	b.ne	40977c <ar_scan@@Base+0x64c>  // b.any
  4092e8:	strb	wzr, [x29, #139]
  4092ec:	ubfx	w27, w1, #16, #8
  4092f0:	cmp	w27, #0x20
  4092f4:	b.ne	409784 <ar_scan@@Base+0x654>  // b.any
  4092f8:	strb	wzr, [x29, #138]
  4092fc:	ubfx	w27, w1, #8, #8
  409300:	cmp	w27, #0x20
  409304:	b.ne	40978c <ar_scan@@Base+0x65c>  // b.any
  409308:	strb	wzr, [x29, #137]
  40930c:	and	w27, w1, #0xff
  409310:	cmp	w27, #0x20
  409314:	b.ne	409794 <ar_scan@@Base+0x664>  // b.any
  409318:	add	x2, x29, #0x84
  40931c:	mov	x1, x24
  409320:	add	x0, x29, #0xc8
  409324:	strb	wzr, [x29, #136]
  409328:	bl	406cf0 <__isoc99_sscanf@plt>
  40932c:	mov	w2, #0xa                   	// #10
  409330:	mov	x1, #0x0                   	// #0
  409334:	add	x0, x29, #0xd0
  409338:	bl	406b60 <strtol@plt>
  40933c:	mov	w2, #0xa                   	// #10
  409340:	mov	x27, x0
  409344:	mov	x1, #0x0                   	// #0
  409348:	add	x0, x29, #0xb0
  40934c:	bl	406b60 <strtol@plt>
  409350:	mov	x28, x0
  409354:	mov	w2, #0xa                   	// #10
  409358:	mov	x1, #0x0                   	// #0
  40935c:	add	x0, x29, #0xbc
  409360:	bl	406b60 <strtol@plt>
  409364:	mov	w2, #0xa                   	// #10
  409368:	mov	x25, x0
  40936c:	mov	x1, #0x0                   	// #0
  409370:	add	x0, x29, #0xc2
  409374:	bl	406b60 <strtol@plt>
  409378:	str	w0, [sp]
  40937c:	ldr	w1, [x29, #132]
  409380:	mov	x6, x28
  409384:	str	w1, [sp, #8]
  409388:	mov	w7, w25
  40938c:	str	x23, [sp, #16]
  409390:	mov	x5, x27
  409394:	add	x4, x19, #0x3c
  409398:	mov	x3, x19
  40939c:	add	x1, x29, #0x88
  4093a0:	mov	w0, w20
  4093a4:	mov	w2, #0x1                   	// #1
  4093a8:	blr	x22
  4093ac:	mov	x28, x0
  4093b0:	cbnz	x0, 409694 <ar_scan@@Base+0x564>
  4093b4:	add	x27, x27, x19
  4093b8:	and	x19, x27, #0x1
  4093bc:	add	x19, x19, x27
  4093c0:	add	x19, x19, #0x3c
  4093c4:	b	4091cc <ar_scan@@Base+0x9c>
  4093c8:	mov	w0, w20
  4093cc:	mov	x28, #0xfffffffffffffffe    	// #-2
  4093d0:	bl	406a50 <close@plt>
  4093d4:	mov	sp, x29
  4093d8:	mov	x0, x28
  4093dc:	ldp	x19, x20, [sp, #16]
  4093e0:	ldp	x21, x22, [sp, #32]
  4093e4:	ldp	x23, x24, [sp, #48]
  4093e8:	ldp	x25, x26, [sp, #64]
  4093ec:	ldp	x27, x28, [sp, #80]
  4093f0:	ldp	x29, x30, [sp], #224
  4093f4:	ret
  4093f8:	ldr	x28, [x29, #104]
  4093fc:	nop
  409400:	ldrb	w0, [x29, #136]
  409404:	cmp	w0, #0x2f
  409408:	b.ne	409588 <ar_scan@@Base+0x458>  // b.any
  40940c:	ldrb	w0, [x29, #137]
  409410:	cmp	w0, #0x2f
  409414:	b.ne	409588 <ar_scan@@Base+0x458>  // b.any
  409418:	ldrb	w0, [x29, #138]
  40941c:	cbnz	w0, 409588 <ar_scan@@Base+0x458>
  409420:	cmp	w27, #0x2f
  409424:	b.ne	4096a0 <ar_scan@@Base+0x570>  // b.any
  409428:	strb	wzr, [x28]
  40942c:	mov	w26, #0x1                   	// #1
  409430:	ldrb	w0, [x29, #136]
  409434:	cmp	w0, #0x23
  409438:	b.ne	4096b0 <ar_scan@@Base+0x580>  // b.any
  40943c:	ldrb	w0, [x29, #137]
  409440:	add	x25, x29, #0x88
  409444:	mov	w4, #0x1                   	// #1
  409448:	cmp	w0, #0x31
  40944c:	b.eq	4096bc <ar_scan@@Base+0x58c>  // b.none
  409450:	add	x2, x29, #0x84
  409454:	mov	x1, x24
  409458:	add	x0, x29, #0xc8
  40945c:	str	w4, [x29, #116]
  409460:	bl	406cf0 <__isoc99_sscanf@plt>
  409464:	mov	w2, #0xa                   	// #10
  409468:	mov	x1, #0x0                   	// #0
  40946c:	add	x0, x29, #0xd0
  409470:	bl	406b60 <strtol@plt>
  409474:	mov	w2, #0xa                   	// #10
  409478:	mov	x27, x0
  40947c:	mov	x1, #0x0                   	// #0
  409480:	add	x0, x29, #0xb0
  409484:	bl	406b60 <strtol@plt>
  409488:	mov	x28, x0
  40948c:	mov	w2, #0xa                   	// #10
  409490:	mov	x1, #0x0                   	// #0
  409494:	add	x0, x29, #0xbc
  409498:	bl	406b60 <strtol@plt>
  40949c:	mov	x7, x0
  4094a0:	mov	w2, #0xa                   	// #10
  4094a4:	mov	x1, #0x0                   	// #0
  4094a8:	add	x0, x29, #0xc2
  4094ac:	str	x7, [x29, #120]
  4094b0:	bl	406b60 <strtol@plt>
  4094b4:	str	w0, [sp]
  4094b8:	ldr	x7, [x29, #120]
  4094bc:	str	x23, [sp, #16]
  4094c0:	ldr	w1, [x29, #132]
  4094c4:	mov	x6, x28
  4094c8:	ldr	w4, [x29, #116]
  4094cc:	mov	x5, x27
  4094d0:	str	w1, [sp, #8]
  4094d4:	mov	x3, x19
  4094d8:	mov	w2, w4
  4094dc:	mov	x1, x25
  4094e0:	add	x4, x19, #0x3c
  4094e4:	mov	w0, w20
  4094e8:	blr	x22
  4094ec:	mov	x28, x0
  4094f0:	cbnz	x0, 409694 <ar_scan@@Base+0x564>
  4094f4:	cbz	w26, 4093b4 <ar_scan@@Base+0x284>
  4094f8:	mov	x0, #0x7fffffff            	// #2147483647
  4094fc:	cmp	x27, x0
  409500:	b.gt	4093c8 <ar_scan@@Base+0x298>
  409504:	add	x0, x27, #0x10
  409508:	mov	x2, x27
  40950c:	and	x0, x0, #0xfffffffffffffff0
  409510:	sub	sp, sp, x0
  409514:	mov	w0, w20
  409518:	add	x21, sp, #0x20
  40951c:	mov	x1, x21
  409520:	bl	41ad88 <readbuf@@Base>
  409524:	cmp	x27, w0, sxtw
  409528:	b.ne	4093c8 <ar_scan@@Base+0x298>  // b.any
  40952c:	str	w27, [x29, #112]
  409530:	add	x2, x21, x27
  409534:	cmp	x21, x2
  409538:	mov	x0, x21
  40953c:	b.cc	409550 <ar_scan@@Base+0x420>  // b.lo, b.ul, b.last
  409540:	b	409580 <ar_scan@@Base+0x450>
  409544:	add	x0, x0, #0x1
  409548:	cmp	x2, x0
  40954c:	b.eq	409580 <ar_scan@@Base+0x450>  // b.none
  409550:	ldrb	w1, [x0]
  409554:	cmp	w1, #0xa
  409558:	b.ne	409544 <ar_scan@@Base+0x414>  // b.any
  40955c:	ldurb	w1, [x0, #-1]
  409560:	strb	wzr, [x0]
  409564:	cmp	w1, #0x2f
  409568:	b.ne	409544 <ar_scan@@Base+0x414>  // b.any
  40956c:	sturb	wzr, [x0, #-1]
  409570:	add	x0, x0, #0x1
  409574:	cmp	x2, x0
  409578:	b.ne	409550 <ar_scan@@Base+0x420>  // b.any
  40957c:	nop
  409580:	strb	wzr, [x2]
  409584:	b	4093b4 <ar_scan@@Base+0x284>
  409588:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  40958c:	add	x0, x29, #0x88
  409590:	add	x1, x1, #0x38
  409594:	bl	406b40 <strcmp@plt>
  409598:	cbz	w0, 409420 <ar_scan@@Base+0x2f0>
  40959c:	cmp	w27, #0x2f
  4095a0:	b.ne	4095a8 <ar_scan@@Base+0x478>  // b.any
  4095a4:	strb	wzr, [x28]
  4095a8:	ldrb	w0, [x29, #136]
  4095ac:	mov	w1, #0x2f                  	// #47
  4095b0:	mov	w26, #0x0                   	// #0
  4095b4:	cmp	w0, #0x20
  4095b8:	ccmp	w0, w1, #0x4, ne  // ne = any
  4095bc:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  4095c0:	b.eq	409434 <ar_scan@@Base+0x304>  // b.none
  4095c4:	mov	x1, #0x0                   	// #0
  4095c8:	add	x0, x29, #0x89
  4095cc:	mov	w2, #0xa                   	// #10
  4095d0:	bl	406b60 <strtol@plt>
  4095d4:	ldr	w1, [x29, #112]
  4095d8:	cmp	w0, #0x0
  4095dc:	ccmp	w1, w0, #0x4, ge  // ge = tcont
  4095e0:	b.le	4093c8 <ar_scan@@Base+0x298>
  4095e4:	add	x28, x21, w0, sxtw
  4095e8:	mov	x0, x28
  4095ec:	bl	406680 <strlen@plt>
  4095f0:	cmp	w0, #0x0
  4095f4:	b.le	4093c8 <ar_scan@@Base+0x298>
  4095f8:	add	x2, x29, #0x84
  4095fc:	mov	x1, x24
  409600:	add	x0, x29, #0xc8
  409604:	bl	406cf0 <__isoc99_sscanf@plt>
  409608:	mov	w2, #0xa                   	// #10
  40960c:	mov	x1, #0x0                   	// #0
  409610:	add	x0, x29, #0xd0
  409614:	bl	406b60 <strtol@plt>
  409618:	mov	w2, #0xa                   	// #10
  40961c:	mov	x27, x0
  409620:	mov	x1, #0x0                   	// #0
  409624:	add	x0, x29, #0xb0
  409628:	bl	406b60 <strtol@plt>
  40962c:	mov	x26, x0
  409630:	mov	w2, #0xa                   	// #10
  409634:	mov	x1, #0x0                   	// #0
  409638:	add	x0, x29, #0xbc
  40963c:	bl	406b60 <strtol@plt>
  409640:	mov	x7, x0
  409644:	mov	w2, #0xa                   	// #10
  409648:	mov	x1, #0x0                   	// #0
  40964c:	add	x0, x29, #0xc2
  409650:	str	x7, [x29, #120]
  409654:	bl	406b60 <strtol@plt>
  409658:	str	w0, [sp]
  40965c:	ldr	x7, [x29, #120]
  409660:	str	x23, [sp, #16]
  409664:	ldr	w1, [x29, #132]
  409668:	mov	x6, x26
  40966c:	str	w1, [sp, #8]
  409670:	mov	x5, x27
  409674:	mov	x1, x28
  409678:	add	x4, x19, #0x3c
  40967c:	mov	x3, x19
  409680:	mov	w0, w20
  409684:	mov	w2, #0x0                   	// #0
  409688:	blr	x22
  40968c:	mov	x28, x0
  409690:	cbz	x0, 4093b4 <ar_scan@@Base+0x284>
  409694:	mov	w0, w20
  409698:	bl	406a50 <close@plt>
  40969c:	b	4093d4 <ar_scan@@Base+0x2a4>
  4096a0:	ldrb	w0, [x29, #136]
  4096a4:	mov	w26, #0x1                   	// #1
  4096a8:	cmp	w0, #0x23
  4096ac:	b.eq	40943c <ar_scan@@Base+0x30c>  // b.none
  4096b0:	add	x25, x29, #0x88
  4096b4:	mov	w4, #0x1                   	// #1
  4096b8:	b	409450 <ar_scan@@Base+0x320>
  4096bc:	ldrb	w0, [x29, #138]
  4096c0:	cmp	w0, #0x2f
  4096c4:	b.ne	409450 <ar_scan@@Base+0x320>  // b.any
  4096c8:	add	x0, x25, #0x3
  4096cc:	mov	w2, #0xa                   	// #10
  4096d0:	mov	x1, #0x0                   	// #0
  4096d4:	bl	406b60 <strtol@plt>
  4096d8:	mov	x27, x0
  4096dc:	cmp	w0, #0x0
  4096e0:	b.le	4093c8 <ar_scan@@Base+0x298>
  4096e4:	add	w1, w0, #0x1
  4096e8:	sxtw	x28, w0
  4096ec:	mov	x2, x28
  4096f0:	mov	w0, w20
  4096f4:	sxtw	x1, w1
  4096f8:	add	x1, x1, #0xf
  4096fc:	and	x1, x1, #0xfffffffffffffff0
  409700:	sub	sp, sp, x1
  409704:	add	x25, sp, #0x20
  409708:	mov	x1, x25
  40970c:	bl	41ad88 <readbuf@@Base>
  409710:	cmp	w27, w0
  409714:	b.ne	4093c8 <ar_scan@@Base+0x298>  // b.any
  409718:	mov	w4, #0x0                   	// #0
  40971c:	strb	wzr, [x25, x28]
  409720:	b	409450 <ar_scan@@Base+0x320>
  409724:	add	x28, x29, #0x96
  409728:	b	409400 <ar_scan@@Base+0x2d0>
  40972c:	add	x28, x29, #0x95
  409730:	b	409400 <ar_scan@@Base+0x2d0>
  409734:	add	x28, x29, #0x94
  409738:	b	409400 <ar_scan@@Base+0x2d0>
  40973c:	add	x28, x29, #0x93
  409740:	b	409400 <ar_scan@@Base+0x2d0>
  409744:	add	x28, x29, #0x92
  409748:	b	409400 <ar_scan@@Base+0x2d0>
  40974c:	add	x28, x29, #0x91
  409750:	b	409400 <ar_scan@@Base+0x2d0>
  409754:	add	x28, x29, #0x90
  409758:	b	409400 <ar_scan@@Base+0x2d0>
  40975c:	add	x28, x29, #0x8f
  409760:	b	409400 <ar_scan@@Base+0x2d0>
  409764:	add	x28, x29, #0x8e
  409768:	b	409400 <ar_scan@@Base+0x2d0>
  40976c:	add	x28, x29, #0x8d
  409770:	b	409400 <ar_scan@@Base+0x2d0>
  409774:	add	x28, x29, #0x8c
  409778:	b	409400 <ar_scan@@Base+0x2d0>
  40977c:	add	x28, x29, #0x8b
  409780:	b	409400 <ar_scan@@Base+0x2d0>
  409784:	add	x28, x29, #0x8a
  409788:	b	409400 <ar_scan@@Base+0x2d0>
  40978c:	add	x28, x29, #0x89
  409790:	b	409400 <ar_scan@@Base+0x2d0>
  409794:	add	x28, x29, #0x88
  409798:	b	409400 <ar_scan@@Base+0x2d0>
  40979c:	mov	w0, w20
  4097a0:	mov	x28, #0x0                   	// #0
  4097a4:	bl	406a50 <close@plt>
  4097a8:	b	4093d4 <ar_scan@@Base+0x2a4>
  4097ac:	mov	x28, #0xffffffffffffffff    	// #-1
  4097b0:	b	4093d4 <ar_scan@@Base+0x2a4>
  4097b4:	nop

00000000004097b8 <ar_name_equal@@Base>:
  4097b8:	stp	x29, x30, [sp, #-48]!
  4097bc:	mov	x29, sp
  4097c0:	stp	x19, x20, [sp, #16]
  4097c4:	mov	x20, x1
  4097c8:	mov	x19, x0
  4097cc:	mov	w1, #0x2f                  	// #47
  4097d0:	str	x21, [sp, #32]
  4097d4:	mov	w21, w2
  4097d8:	bl	406a70 <strrchr@plt>
  4097dc:	cmp	x0, #0x0
  4097e0:	mov	x1, x20
  4097e4:	csinc	x19, x19, x0, eq  // eq = none
  4097e8:	mov	x0, x19
  4097ec:	cbnz	w21, 40980c <ar_name_equal@@Base+0x54>
  4097f0:	bl	406b40 <strcmp@plt>
  4097f4:	cmp	w0, #0x0
  4097f8:	cset	w0, eq  // eq = none
  4097fc:	ldp	x19, x20, [sp, #16]
  409800:	ldr	x21, [sp, #32]
  409804:	ldp	x29, x30, [sp], #48
  409808:	ret
  40980c:	mov	x2, #0xf                   	// #15
  409810:	bl	406930 <strncmp@plt>
  409814:	cmp	w0, #0x0
  409818:	cset	w0, eq  // eq = none
  40981c:	ldp	x19, x20, [sp, #16]
  409820:	ldr	x21, [sp, #32]
  409824:	ldp	x29, x30, [sp], #48
  409828:	ret
  40982c:	nop

0000000000409830 <ar_member_touch@@Base>:
  409830:	stp	x29, x30, [sp, #-240]!
  409834:	mov	x2, x1
  409838:	adrp	x1, 409000 <ar_glob@@Base+0x98>
  40983c:	mov	x29, sp
  409840:	add	x1, x1, #0xa0
  409844:	stp	x19, x20, [sp, #16]
  409848:	mov	x19, x0
  40984c:	stp	x21, x22, [sp, #32]
  409850:	bl	409130 <ar_scan@@Base>
  409854:	mov	x22, x0
  409858:	cmp	x0, #0x0
  40985c:	b.lt	409868 <ar_member_touch@@Base+0x38>  // b.tstop
  409860:	mov	w0, #0x1                   	// #1
  409864:	b.ne	409888 <ar_member_touch@@Base+0x58>  // b.any
  409868:	ldp	x19, x20, [sp, #16]
  40986c:	ldp	x21, x22, [sp, #32]
  409870:	ldp	x29, x30, [sp], #240
  409874:	ret
  409878:	bl	406d70 <__errno_location@plt>
  40987c:	ldr	w1, [x0]
  409880:	cmp	w1, #0x4
  409884:	b.ne	4099cc <ar_member_touch@@Base+0x19c>  // b.any
  409888:	mov	x0, x19
  40988c:	mov	w2, #0x1b6                 	// #438
  409890:	mov	w1, #0x2                   	// #2
  409894:	bl	406900 <open@plt>
  409898:	mov	w20, w0
  40989c:	cmn	w0, #0x1
  4098a0:	b.eq	409878 <ar_member_touch@@Base+0x48>  // b.none
  4098a4:	tbz	w0, #31, 4098c0 <ar_member_touch@@Base+0x90>
  4098a8:	b	4099cc <ar_member_touch@@Base+0x19c>
  4098ac:	bl	406d70 <__errno_location@plt>
  4098b0:	ldr	w21, [x0]
  4098b4:	mov	x19, x0
  4098b8:	cmp	w21, #0x4
  4098bc:	b.ne	4099f0 <ar_member_touch@@Base+0x1c0>  // b.any
  4098c0:	mov	x1, x22
  4098c4:	mov	w0, w20
  4098c8:	mov	w2, #0x0                   	// #0
  4098cc:	bl	406800 <lseek@plt>
  4098d0:	cmn	x0, #0x1
  4098d4:	b.eq	4098ac <ar_member_touch@@Base+0x7c>  // b.none
  4098d8:	tbnz	x0, #63, 4099e0 <ar_member_touch@@Base+0x1b0>
  4098dc:	add	x1, sp, #0x30
  4098e0:	mov	w0, w20
  4098e4:	mov	x2, #0x3c                  	// #60
  4098e8:	bl	41ad88 <readbuf@@Base>
  4098ec:	cmp	w0, #0x3c
  4098f0:	b.eq	40990c <ar_member_touch@@Base+0xdc>  // b.none
  4098f4:	b	4099e0 <ar_member_touch@@Base+0x1b0>
  4098f8:	bl	406d70 <__errno_location@plt>
  4098fc:	ldr	w21, [x0]
  409900:	mov	x19, x0
  409904:	cmp	w21, #0x4
  409908:	b.ne	4099f0 <ar_member_touch@@Base+0x1c0>  // b.any
  40990c:	add	x2, sp, #0x70
  409910:	mov	w1, w20
  409914:	mov	w0, #0x0                   	// #0
  409918:	bl	406cb0 <__fxstat@plt>
  40991c:	cmn	w0, #0x1
  409920:	b.eq	4098f8 <ar_member_touch@@Base+0xc8>  // b.none
  409924:	tbnz	w0, #31, 4099e0 <ar_member_touch@@Base+0x1b0>
  409928:	add	x19, sp, #0x40
  40992c:	mov	x4, #0x2020202020202020    	// #2314885530818453536
  409930:	ldr	x2, [sp, #200]
  409934:	str	x4, [sp, #64]
  409938:	mov	w3, #0x20202020            	// #538976288
  40993c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  409940:	add	x1, x1, #0x48
  409944:	str	w3, [x19, #8]
  409948:	mov	x0, x19
  40994c:	bl	406730 <sprintf@plt>
  409950:	mov	x0, x19
  409954:	bl	406680 <strlen@plt>
  409958:	add	x1, sp, #0x40
  40995c:	mov	w2, #0x20                  	// #32
  409960:	strb	w2, [x1, x0]
  409964:	b	40997c <ar_member_touch@@Base+0x14c>
  409968:	bl	406d70 <__errno_location@plt>
  40996c:	ldr	w21, [x0]
  409970:	mov	x19, x0
  409974:	cmp	w21, #0x4
  409978:	b.ne	4099f0 <ar_member_touch@@Base+0x1c0>  // b.any
  40997c:	mov	x1, x22
  409980:	mov	w0, w20
  409984:	mov	w2, #0x0                   	// #0
  409988:	bl	406800 <lseek@plt>
  40998c:	cmn	x0, #0x1
  409990:	b.eq	409968 <ar_member_touch@@Base+0x138>  // b.none
  409994:	tbnz	x0, #63, 4099e0 <ar_member_touch@@Base+0x1b0>
  409998:	add	x1, sp, #0x30
  40999c:	mov	w0, w20
  4099a0:	mov	x2, #0x3c                  	// #60
  4099a4:	bl	41ace8 <writebuf@@Base>
  4099a8:	cmp	w0, #0x3c
  4099ac:	b.ne	4099e0 <ar_member_touch@@Base+0x1b0>  // b.any
  4099b0:	mov	w0, w20
  4099b4:	bl	406a50 <close@plt>
  4099b8:	mov	w0, #0x0                   	// #0
  4099bc:	ldp	x19, x20, [sp, #16]
  4099c0:	ldp	x21, x22, [sp, #32]
  4099c4:	ldp	x29, x30, [sp], #240
  4099c8:	ret
  4099cc:	mov	w0, #0xfffffffd            	// #-3
  4099d0:	ldp	x19, x20, [sp, #16]
  4099d4:	ldp	x21, x22, [sp, #32]
  4099d8:	ldp	x29, x30, [sp], #240
  4099dc:	ret
  4099e0:	bl	406d70 <__errno_location@plt>
  4099e4:	ldr	w21, [x0]
  4099e8:	mov	x19, x0
  4099ec:	nop
  4099f0:	mov	w0, w20
  4099f4:	bl	406a50 <close@plt>
  4099f8:	mov	w0, #0xfffffffd            	// #-3
  4099fc:	str	w21, [x19]
  409a00:	b	409868 <ar_member_touch@@Base+0x38>
  409a04:	nop
  409a08:	mov	x0, #0x0                   	// #0
  409a0c:	ret
  409a10:	mov	x3, x0
  409a14:	mov	x2, x1
  409a18:	ldr	x0, [x0, #8]
  409a1c:	cbz	x0, 409a38 <ar_member_touch@@Base+0x208>
  409a20:	ldr	x1, [x2, #8]
  409a24:	cbz	x1, 409a2c <ar_member_touch@@Base+0x1fc>
  409a28:	b	406b40 <strcmp@plt>
  409a2c:	ldr	x1, [x2, #16]
  409a30:	ldr	x1, [x1]
  409a34:	b	406b40 <strcmp@plt>
  409a38:	ldr	x0, [x3, #16]
  409a3c:	ldr	x0, [x0]
  409a40:	b	409a20 <ar_member_touch@@Base+0x1f0>
  409a44:	nop
  409a48:	stp	x29, x30, [sp, #-16]!
  409a4c:	mov	x1, x0
  409a50:	mov	x29, sp
  409a54:	ldr	x0, [x0, #8]
  409a58:	cbz	x0, 409a6c <ar_member_touch@@Base+0x23c>
  409a5c:	bl	413218 <jhash_string@@Base>
  409a60:	mov	w0, w0
  409a64:	ldp	x29, x30, [sp], #16
  409a68:	ret
  409a6c:	ldr	x0, [x1, #16]
  409a70:	ldr	x0, [x0]
  409a74:	bl	413218 <jhash_string@@Base>
  409a78:	mov	w0, w0
  409a7c:	ldp	x29, x30, [sp], #16
  409a80:	ret
  409a84:	nop
  409a88:	stp	x29, x30, [sp, #-176]!
  409a8c:	mov	w2, #0x2020                	// #8224
  409a90:	mov	x29, sp
  409a94:	stp	x19, x20, [sp, #16]
  409a98:	mov	x19, x0
  409a9c:	ldrh	w0, [x0, #136]
  409aa0:	tst	w2, w0
  409aa4:	b.eq	409ab4 <ar_member_touch@@Base+0x284>  // b.none
  409aa8:	ldp	x19, x20, [sp, #16]
  409aac:	ldp	x29, x30, [sp], #176
  409ab0:	ret
  409ab4:	ldr	x0, [x19]
  409ab8:	mov	x20, x1
  409abc:	bl	408bd0 <ar_name@@Base>
  409ac0:	cbz	w0, 409ad8 <ar_member_touch@@Base+0x2a8>
  409ac4:	b	409b9c <ar_member_touch@@Base+0x36c>
  409ac8:	bl	406d70 <__errno_location@plt>
  409acc:	ldr	w0, [x0]
  409ad0:	cmp	w0, #0x4
  409ad4:	b.ne	409aa8 <ar_member_touch@@Base+0x278>  // b.any
  409ad8:	ldr	x1, [x19]
  409adc:	add	x2, sp, #0x30
  409ae0:	mov	w0, #0x0                   	// #0
  409ae4:	bl	406d90 <__xstat@plt>
  409ae8:	cmn	w0, #0x1
  409aec:	b.eq	409ac8 <ar_member_touch@@Base+0x298>  // b.none
  409af0:	cbnz	w0, 409aa8 <ar_member_touch@@Base+0x278>
  409af4:	ldr	w0, [sp, #64]
  409af8:	and	w0, w0, #0xf000
  409afc:	cmp	w0, #0x8, lsl #12
  409b00:	b.ne	409aa8 <ar_member_touch@@Base+0x278>  // b.any
  409b04:	ldp	x1, x2, [sp, #136]
  409b08:	ldr	x0, [x19]
  409b0c:	bl	40e500 <file_timestamp_cons@@Base>
  409b10:	ldr	x1, [x19, #112]
  409b14:	cmp	x0, x1
  409b18:	b.eq	409aa8 <ar_member_touch@@Base+0x278>  // b.none
  409b1c:	cbz	x20, 409c58 <ar_member_touch@@Base+0x428>
  409b20:	mov	x0, x20
  409b24:	stp	x21, x22, [sp, #32]
  409b28:	bl	406680 <strlen@plt>
  409b2c:	mov	x22, x0
  409b30:	ldr	x0, [x19]
  409b34:	bl	406680 <strlen@plt>
  409b38:	mov	x21, x0
  409b3c:	mov	w2, #0x5                   	// #5
  409b40:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  409b44:	mov	x0, #0x0                   	// #0
  409b48:	add	x1, x1, #0xc0
  409b4c:	bl	406cd0 <dcgettext@plt>
  409b50:	mov	x2, x0
  409b54:	ldr	x4, [x19]
  409b58:	add	x1, x22, x21
  409b5c:	mov	x3, x20
  409b60:	mov	x0, #0x0                   	// #0
  409b64:	bl	41bd88 <error@@Base>
  409b68:	ldp	x21, x22, [sp, #32]
  409b6c:	ldr	x0, [x19]
  409b70:	bl	406db0 <unlink@plt>
  409b74:	tbz	w0, #31, 409aa8 <ar_member_touch@@Base+0x278>
  409b78:	bl	406d70 <__errno_location@plt>
  409b7c:	ldr	w0, [x0]
  409b80:	cmp	w0, #0x2
  409b84:	b.eq	409aa8 <ar_member_touch@@Base+0x278>  // b.none
  409b88:	ldr	x1, [x19]
  409b8c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  409b90:	add	x0, x0, #0xf8
  409b94:	bl	41bf78 <perror_with_name@@Base>
  409b98:	b	409aa8 <ar_member_touch@@Base+0x278>
  409b9c:	ldr	x1, [x19, #112]
  409ba0:	stp	x21, x22, [sp, #32]
  409ba4:	sub	x21, x1, #0x3
  409ba8:	cmp	x1, #0x1
  409bac:	ldr	x0, [x19]
  409bb0:	lsr	x21, x21, #30
  409bb4:	csinv	x21, x21, xzr, ne  // ne = any
  409bb8:	bl	408cd8 <ar_member_date@@Base>
  409bbc:	cmp	x0, x21
  409bc0:	b.eq	409c14 <ar_member_touch@@Base+0x3e4>  // b.none
  409bc4:	cbz	x20, 409c1c <ar_member_touch@@Base+0x3ec>
  409bc8:	mov	x0, x20
  409bcc:	bl	406680 <strlen@plt>
  409bd0:	mov	x22, x0
  409bd4:	ldr	x0, [x19]
  409bd8:	bl	406680 <strlen@plt>
  409bdc:	mov	x21, x0
  409be0:	mov	w2, #0x5                   	// #5
  409be4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  409be8:	mov	x0, #0x0                   	// #0
  409bec:	add	x1, x1, #0x50
  409bf0:	bl	406cd0 <dcgettext@plt>
  409bf4:	mov	x2, x0
  409bf8:	ldr	x4, [x19]
  409bfc:	add	x1, x22, x21
  409c00:	mov	x3, x20
  409c04:	mov	x0, #0x0                   	// #0
  409c08:	bl	41bd88 <error@@Base>
  409c0c:	ldp	x21, x22, [sp, #32]
  409c10:	b	409aa8 <ar_member_touch@@Base+0x278>
  409c14:	ldp	x21, x22, [sp, #32]
  409c18:	b	409aa8 <ar_member_touch@@Base+0x278>
  409c1c:	ldr	x0, [x19]
  409c20:	bl	406680 <strlen@plt>
  409c24:	mov	x20, x0
  409c28:	mov	w2, #0x5                   	// #5
  409c2c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  409c30:	mov	x0, #0x0                   	// #0
  409c34:	add	x1, x1, #0x88
  409c38:	bl	406cd0 <dcgettext@plt>
  409c3c:	mov	x2, x0
  409c40:	ldr	x3, [x19]
  409c44:	mov	x1, x20
  409c48:	mov	x0, #0x0                   	// #0
  409c4c:	bl	41bd88 <error@@Base>
  409c50:	ldp	x21, x22, [sp, #32]
  409c54:	b	409aa8 <ar_member_touch@@Base+0x278>
  409c58:	ldr	x0, [x19]
  409c5c:	bl	406680 <strlen@plt>
  409c60:	mov	x20, x0
  409c64:	mov	w2, #0x5                   	// #5
  409c68:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  409c6c:	mov	x0, #0x0                   	// #0
  409c70:	add	x1, x1, #0xe0
  409c74:	bl	406cd0 <dcgettext@plt>
  409c78:	mov	x2, x0
  409c7c:	ldr	x3, [x19]
  409c80:	mov	x1, x20
  409c84:	mov	x0, #0x0                   	// #0
  409c88:	bl	41bd88 <error@@Base>
  409c8c:	b	409b6c <ar_member_touch@@Base+0x33c>

0000000000409c90 <set_file_variables@@Base>:
  409c90:	stp	x29, x30, [sp, #-208]!
  409c94:	mov	x29, sp
  409c98:	stp	x21, x22, [sp, #32]
  409c9c:	mov	x21, x0
  409ca0:	ldr	x0, [x0]
  409ca4:	stp	x19, x20, [sp, #16]
  409ca8:	stp	x23, x24, [sp, #48]
  409cac:	stp	x25, x26, [sp, #64]
  409cb0:	stp	x27, x28, [sp, #80]
  409cb4:	bl	408bd0 <ar_name@@Base>
  409cb8:	ldr	x20, [x21]
  409cbc:	cbnz	w0, 40a1e8 <set_file_variables@@Base+0x558>
  409cc0:	ldr	x19, [x21, #40]
  409cc4:	adrp	x22, 42d000 <_IO_stdin_used@@Base+0x40e0>
  409cc8:	mov	x23, x20
  409ccc:	add	x22, x22, #0xed0
  409cd0:	cbz	x19, 40a258 <set_file_variables@@Base+0x5c8>
  409cd4:	ldr	x1, [x21, #24]
  409cd8:	cbz	x1, 409d10 <set_file_variables@@Base+0x80>
  409cdc:	mov	w3, #0x12                  	// #18
  409ce0:	b	409cec <set_file_variables@@Base+0x5c>
  409ce4:	ldr	x1, [x1]
  409ce8:	cbz	x1, 409d10 <set_file_variables@@Base+0x80>
  409cec:	ldrb	w2, [x1, #33]
  409cf0:	tst	w2, w3
  409cf4:	b.ne	409ce4 <set_file_variables@@Base+0x54>  // b.any
  409cf8:	tbnz	w2, #3, 409d10 <set_file_variables@@Base+0x80>
  409cfc:	ldr	x2, [x1, #8]
  409d00:	cbnz	x2, 409d18 <set_file_variables@@Base+0x88>
  409d04:	ldr	x0, [x1, #16]
  409d08:	ldr	x2, [x0]
  409d0c:	b	409d18 <set_file_variables@@Base+0x88>
  409d10:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x40e0>
  409d14:	add	x2, x2, #0xed0
  409d18:	ldr	x0, [x21, #32]
  409d1c:	cbz	x0, 409d34 <set_file_variables@@Base+0xa4>
  409d20:	adrp	x1, 449000 <commands_started@@Base+0x170>
  409d24:	ldr	x1, [x1, #2120]
  409d28:	ldr	x1, [x1, #32]
  409d2c:	cmp	x0, x1
  409d30:	csel	x2, x2, x23, ne  // ne = any
  409d34:	ldr	x1, [x21, #80]
  409d38:	mov	x6, #0x0                   	// #0
  409d3c:	mov	w4, #0x0                   	// #0
  409d40:	mov	w3, #0x6                   	// #6
  409d44:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  409d48:	add	x0, x0, #0xe58
  409d4c:	ldr	x5, [x1, #8]
  409d50:	mov	x1, #0x1                   	// #1
  409d54:	bl	4253c8 <define_variable_in_set@@Base>
  409d58:	ldr	x1, [x21, #80]
  409d5c:	mov	x2, x19
  409d60:	mov	x6, #0x0                   	// #0
  409d64:	mov	w4, #0x0                   	// #0
  409d68:	mov	w3, #0x6                   	// #6
  409d6c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  409d70:	ldr	x5, [x1, #8]
  409d74:	add	x0, x0, #0x118
  409d78:	mov	x1, #0x1                   	// #1
  409d7c:	bl	4253c8 <define_variable_in_set@@Base>
  409d80:	ldr	x1, [x21, #80]
  409d84:	mov	x2, x23
  409d88:	mov	x6, #0x0                   	// #0
  409d8c:	mov	w4, #0x0                   	// #0
  409d90:	mov	w3, #0x6                   	// #6
  409d94:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  409d98:	ldr	x5, [x1, #8]
  409d9c:	add	x0, x0, #0x2f0
  409da0:	mov	x1, #0x1                   	// #1
  409da4:	bl	4253c8 <define_variable_in_set@@Base>
  409da8:	ldr	x1, [x21, #80]
  409dac:	mov	x2, x22
  409db0:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  409db4:	mov	x6, #0x0                   	// #0
  409db8:	add	x0, x0, #0x248
  409dbc:	mov	w4, #0x0                   	// #0
  409dc0:	ldr	x5, [x1, #8]
  409dc4:	mov	w3, #0x6                   	// #6
  409dc8:	mov	x1, #0x1                   	// #1
  409dcc:	bl	4253c8 <define_variable_in_set@@Base>
  409dd0:	ldr	x19, [x21, #24]
  409dd4:	cbz	x19, 40a34c <set_file_variables@@Base+0x6bc>
  409dd8:	mov	x20, x19
  409ddc:	mov	x22, #0x0                   	// #0
  409de0:	mov	x24, #0x0                   	// #0
  409de4:	b	409e00 <set_file_variables@@Base+0x170>
  409de8:	cbz	x0, 40a1c4 <set_file_variables@@Base+0x534>
  409dec:	add	x22, x22, #0x1
  409df0:	bl	406680 <strlen@plt>
  409df4:	add	x22, x0, x22
  409df8:	ldr	x20, [x20]
  409dfc:	cbz	x20, 409e2c <set_file_variables@@Base+0x19c>
  409e00:	ldrb	w1, [x20, #33]
  409e04:	tst	w1, #0x18
  409e08:	b.ne	409df8 <set_file_variables@@Base+0x168>  // b.any
  409e0c:	ldr	x0, [x20, #8]
  409e10:	tbnz	w1, #1, 409de8 <set_file_variables@@Base+0x158>
  409e14:	cbz	x0, 40a1d0 <set_file_variables@@Base+0x540>
  409e18:	bl	406680 <strlen@plt>
  409e1c:	add	x24, x24, #0x1
  409e20:	ldr	x20, [x20]
  409e24:	add	x24, x0, x24
  409e28:	cbnz	x20, 409e00 <set_file_variables@@Base+0x170>
  409e2c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  409e30:	cmp	x22, #0x0
  409e34:	add	x23, x0, #0x1d8
  409e38:	mov	x1, #0x1                   	// #1
  409e3c:	ldr	x2, [x0, #472]
  409e40:	csel	x3, x22, x1, ne  // ne = any
  409e44:	cmp	x24, #0x0
  409e48:	str	x3, [x29, #104]
  409e4c:	csel	x1, x24, x1, ne  // ne = any
  409e50:	cmp	x1, x2
  409e54:	add	x24, x1, #0x1
  409e58:	ldr	x28, [x23, #8]
  409e5c:	b.hi	40a320 <set_file_variables@@Base+0x690>  // b.pmore
  409e60:	adrp	x27, 446000 <expanding_var@@Base+0x320>
  409e64:	mov	w25, #0x1a                  	// #26
  409e68:	add	x27, x27, #0xd3c
  409e6c:	mov	w26, #0x20                  	// #32
  409e70:	b	409ec4 <set_file_variables@@Base+0x234>
  409e74:	bl	406bb0 <strchr@plt>
  409e78:	add	x20, x0, #0x1
  409e7c:	mov	x0, x20
  409e80:	bl	406680 <strlen@plt>
  409e84:	sub	x22, x0, #0x1
  409e88:	mov	x0, x28
  409e8c:	add	x28, x28, x22
  409e90:	mov	x1, x20
  409e94:	mov	x2, x22
  409e98:	bl	406640 <memcpy@plt>
  409e9c:	strb	w26, [x28], #1
  409ea0:	sub	x0, x24, #0x1
  409ea4:	sub	x0, x0, x22
  409ea8:	ldrb	w1, [x19, #33]
  409eac:	tbnz	w1, #0, 409ebc <set_file_variables@@Base+0x22c>
  409eb0:	ldr	w1, [x27]
  409eb4:	cmp	w1, #0x0
  409eb8:	csel	x24, x0, x24, eq  // eq = none
  409ebc:	ldr	x19, [x19]
  409ec0:	cbz	x19, 409f08 <set_file_variables@@Base+0x278>
  409ec4:	ldrb	w0, [x19, #33]
  409ec8:	tst	w25, w0
  409ecc:	b.ne	409ebc <set_file_variables@@Base+0x22c>  // b.any
  409ed0:	ldr	x20, [x19, #8]
  409ed4:	cbz	x20, 409efc <set_file_variables@@Base+0x26c>
  409ed8:	mov	x0, x20
  409edc:	bl	408bd0 <ar_name@@Base>
  409ee0:	mov	w1, #0x28                  	// #40
  409ee4:	mov	w2, w0
  409ee8:	mov	x0, x20
  409eec:	cbnz	w2, 409e74 <set_file_variables@@Base+0x1e4>
  409ef0:	bl	406680 <strlen@plt>
  409ef4:	mov	x22, x0
  409ef8:	b	409e88 <set_file_variables@@Base+0x1f8>
  409efc:	ldr	x0, [x19, #16]
  409f00:	ldr	x20, [x0]
  409f04:	b	409ed8 <set_file_variables@@Base+0x248>
  409f08:	ldr	x2, [x23, #8]
  409f0c:	cmp	x28, x2
  409f10:	cset	x0, hi  // hi = pmore
  409f14:	sub	x28, x28, x0
  409f18:	strb	wzr, [x28]
  409f1c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  409f20:	mov	x6, #0x0                   	// #0
  409f24:	add	x0, x0, #0x120
  409f28:	ldr	x5, [x21, #80]
  409f2c:	mov	w4, #0x0                   	// #0
  409f30:	mov	w3, #0x6                   	// #6
  409f34:	mov	x1, #0x1                   	// #1
  409f38:	ldr	x5, [x5, #8]
  409f3c:	bl	4253c8 <define_variable_in_set@@Base>
  409f40:	ldp	x25, x0, [x23, #8]
  409f44:	cmp	x0, x24
  409f48:	b.cc	40a2f4 <set_file_variables@@Base+0x664>  // b.lo, b.ul, b.last
  409f4c:	ldr	x24, [x23, #24]
  409f50:	ldp	x20, x0, [x23, #32]
  409f54:	ldr	x1, [x29, #104]
  409f58:	cmp	x0, x1
  409f5c:	b.cc	40a2dc <set_file_variables@@Base+0x64c>  // b.lo, b.ul, b.last
  409f60:	add	x0, x29, #0x78
  409f64:	adrp	x4, 409000 <ar_glob@@Base+0x98>
  409f68:	adrp	x3, 409000 <ar_glob@@Base+0x98>
  409f6c:	add	x4, x4, #0xa10
  409f70:	add	x3, x3, #0xa08
  409f74:	adrp	x2, 409000 <ar_glob@@Base+0x98>
  409f78:	mov	x1, #0x1f4                 	// #500
  409f7c:	add	x2, x2, #0xa48
  409f80:	bl	4125d8 <hash_init@@Base>
  409f84:	ldr	x19, [x21, #24]
  409f88:	cbz	x19, 40a344 <set_file_variables@@Base+0x6b4>
  409f8c:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  409f90:	b	409fc0 <set_file_variables@@Base+0x330>
  409f94:	ldrb	w1, [x3, #33]
  409f98:	ldrb	w0, [x19, #33]
  409f9c:	and	w2, w1, #0xfffffffd
  409fa0:	eor	w0, w0, w1
  409fa4:	tbz	w0, #1, 409fb8 <set_file_variables@@Base+0x328>
  409fa8:	strb	w2, [x3, #33]
  409fac:	ldrb	w0, [x19, #33]
  409fb0:	and	w0, w0, #0xfffffffd
  409fb4:	strb	w0, [x19, #33]
  409fb8:	ldr	x19, [x19]
  409fbc:	cbz	x19, 40a004 <set_file_variables@@Base+0x374>
  409fc0:	ldrb	w2, [x19, #33]
  409fc4:	mov	x1, x19
  409fc8:	add	x0, x29, #0x78
  409fcc:	tst	w2, #0x18
  409fd0:	b.ne	409fb8 <set_file_variables@@Base+0x328>  // b.any
  409fd4:	bl	412690 <hash_find_slot@@Base>
  409fd8:	mov	x2, x0
  409fdc:	mov	x1, x19
  409fe0:	add	x0, x29, #0x78
  409fe4:	ldr	x3, [x2]
  409fe8:	cbz	x3, 409ff8 <set_file_variables@@Base+0x368>
  409fec:	ldr	x4, [x22, #72]
  409ff0:	cmp	x3, x4
  409ff4:	b.ne	409f94 <set_file_variables@@Base+0x304>  // b.any
  409ff8:	bl	412b18 <hash_insert_at@@Base>
  409ffc:	ldr	x19, [x19]
  40a000:	cbnz	x19, 409fc0 <set_file_variables@@Base+0x330>
  40a004:	ldr	x19, [x21, #24]
  40a008:	cbz	x19, 40a344 <set_file_variables@@Base+0x6b4>
  40a00c:	adrp	x27, 446000 <expanding_var@@Base+0x320>
  40a010:	mov	x22, x25
  40a014:	add	x27, x27, #0xd3c
  40a018:	mov	w26, #0x20                  	// #32
  40a01c:	b	40a028 <set_file_variables@@Base+0x398>
  40a020:	ldr	x19, [x19]
  40a024:	cbz	x19, 40a0a0 <set_file_variables@@Base+0x410>
  40a028:	ldrb	w0, [x19, #33]
  40a02c:	tst	w0, #0x18
  40a030:	b.ne	40a020 <set_file_variables@@Base+0x390>  // b.any
  40a034:	mov	x1, x19
  40a038:	add	x0, x29, #0x78
  40a03c:	bl	412950 <hash_find_item@@Base>
  40a040:	cmp	x19, x0
  40a044:	b.ne	40a020 <set_file_variables@@Base+0x390>  // b.any
  40a048:	ldr	x28, [x19, #8]
  40a04c:	cbz	x28, 40a1dc <set_file_variables@@Base+0x54c>
  40a050:	mov	x0, x28
  40a054:	bl	408bd0 <ar_name@@Base>
  40a058:	cbz	w0, 40a16c <set_file_variables@@Base+0x4dc>
  40a05c:	mov	w1, #0x28                  	// #40
  40a060:	mov	x0, x28
  40a064:	bl	406bb0 <strchr@plt>
  40a068:	add	x28, x0, #0x1
  40a06c:	mov	x0, x28
  40a070:	bl	406680 <strlen@plt>
  40a074:	sub	x2, x0, #0x1
  40a078:	ldrb	w0, [x19, #33]
  40a07c:	tbz	w0, #1, 40a180 <set_file_variables@@Base+0x4f0>
  40a080:	mov	x0, x20
  40a084:	add	x20, x20, x2
  40a088:	mov	x1, x28
  40a08c:	bl	406640 <memcpy@plt>
  40a090:	strb	w26, [x20], #1
  40a094:	ldr	x19, [x19]
  40a098:	cbnz	x19, 40a028 <set_file_variables@@Base+0x398>
  40a09c:	nop
  40a0a0:	cmp	x22, x25
  40a0a4:	cset	x0, hi  // hi = pmore
  40a0a8:	sub	x22, x22, x0
  40a0ac:	add	x0, x29, #0x78
  40a0b0:	mov	w1, #0x0                   	// #0
  40a0b4:	bl	412dc0 <hash_free@@Base>
  40a0b8:	strb	wzr, [x22]
  40a0bc:	mov	x2, x25
  40a0c0:	mov	x6, #0x0                   	// #0
  40a0c4:	ldr	x5, [x21, #80]
  40a0c8:	mov	w4, #0x0                   	// #0
  40a0cc:	mov	w3, #0x6                   	// #6
  40a0d0:	mov	x1, #0x1                   	// #1
  40a0d4:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  40a0d8:	add	x0, x0, #0x128
  40a0dc:	ldr	x5, [x5, #8]
  40a0e0:	bl	4253c8 <define_variable_in_set@@Base>
  40a0e4:	ldr	x2, [x23, #24]
  40a0e8:	mov	x6, #0x0                   	// #0
  40a0ec:	mov	w4, #0x0                   	// #0
  40a0f0:	mov	w3, #0x6                   	// #6
  40a0f4:	cmp	x2, x24
  40a0f8:	mov	x1, #0x1                   	// #1
  40a0fc:	sbc	x24, x24, xzr
  40a100:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  40a104:	add	x0, x0, #0x130
  40a108:	strb	wzr, [x24]
  40a10c:	ldr	x5, [x21, #80]
  40a110:	ldr	x5, [x5, #8]
  40a114:	bl	4253c8 <define_variable_in_set@@Base>
  40a118:	ldr	x2, [x23, #32]
  40a11c:	mov	x6, #0x0                   	// #0
  40a120:	mov	w4, #0x0                   	// #0
  40a124:	mov	w3, #0x6                   	// #6
  40a128:	cmp	x2, x20
  40a12c:	mov	x1, #0x1                   	// #1
  40a130:	sbc	x20, x20, xzr
  40a134:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  40a138:	add	x0, x0, #0x138
  40a13c:	strb	wzr, [x20]
  40a140:	ldr	x5, [x21, #80]
  40a144:	ldr	x5, [x5, #8]
  40a148:	bl	4253c8 <define_variable_in_set@@Base>
  40a14c:	mov	sp, x29
  40a150:	ldp	x19, x20, [sp, #16]
  40a154:	ldp	x21, x22, [sp, #32]
  40a158:	ldp	x23, x24, [sp, #48]
  40a15c:	ldp	x25, x26, [sp, #64]
  40a160:	ldp	x27, x28, [sp, #80]
  40a164:	ldp	x29, x30, [sp], #208
  40a168:	ret
  40a16c:	mov	x0, x28
  40a170:	bl	406680 <strlen@plt>
  40a174:	mov	x2, x0
  40a178:	ldrb	w0, [x19, #33]
  40a17c:	tbnz	w0, #1, 40a080 <set_file_variables@@Base+0x3f0>
  40a180:	mov	x0, x22
  40a184:	add	x22, x22, x2
  40a188:	mov	x1, x28
  40a18c:	str	x2, [x29, #104]
  40a190:	bl	406640 <memcpy@plt>
  40a194:	strb	w26, [x22], #1
  40a198:	ldr	x2, [x29, #104]
  40a19c:	ldrb	w0, [x19, #33]
  40a1a0:	tbnz	w0, #0, 40a1ac <set_file_variables@@Base+0x51c>
  40a1a4:	ldr	w0, [x27]
  40a1a8:	cbz	w0, 40a020 <set_file_variables@@Base+0x390>
  40a1ac:	mov	x0, x24
  40a1b0:	add	x24, x24, x2
  40a1b4:	mov	x1, x28
  40a1b8:	bl	406640 <memcpy@plt>
  40a1bc:	strb	w26, [x24], #1
  40a1c0:	b	40a020 <set_file_variables@@Base+0x390>
  40a1c4:	ldr	x0, [x20, #16]
  40a1c8:	ldr	x0, [x0]
  40a1cc:	b	409dec <set_file_variables@@Base+0x15c>
  40a1d0:	ldr	x0, [x20, #16]
  40a1d4:	ldr	x0, [x0]
  40a1d8:	b	409e18 <set_file_variables@@Base+0x188>
  40a1dc:	ldr	x0, [x19, #16]
  40a1e0:	ldr	x28, [x0]
  40a1e4:	b	40a050 <set_file_variables@@Base+0x3c0>
  40a1e8:	mov	w1, #0x28                  	// #40
  40a1ec:	mov	x0, x20
  40a1f0:	bl	406bb0 <strchr@plt>
  40a1f4:	sub	x22, x0, x20
  40a1f8:	add	x19, x0, #0x1
  40a1fc:	add	x0, x22, #0x10
  40a200:	and	x0, x0, #0xfffffffffffffff0
  40a204:	mov	x2, x22
  40a208:	sub	sp, sp, x0
  40a20c:	mov	x1, x20
  40a210:	mov	x23, sp
  40a214:	mov	x0, x23
  40a218:	bl	406640 <memcpy@plt>
  40a21c:	mov	x0, x19
  40a220:	strb	wzr, [x23, x22]
  40a224:	bl	406680 <strlen@plt>
  40a228:	add	x2, x0, #0xf
  40a22c:	mov	x1, x19
  40a230:	sub	x19, x0, #0x1
  40a234:	and	x0, x2, #0xfffffffffffffff0
  40a238:	mov	x2, x19
  40a23c:	sub	sp, sp, x0
  40a240:	mov	x22, sp
  40a244:	mov	x0, x22
  40a248:	bl	406640 <memcpy@plt>
  40a24c:	strb	wzr, [x22, x19]
  40a250:	ldr	x19, [x21, #40]
  40a254:	cbnz	x19, 409cd4 <set_file_variables@@Base+0x44>
  40a258:	mov	x0, x20
  40a25c:	bl	408bd0 <ar_name@@Base>
  40a260:	cbz	w0, 40a374 <set_file_variables@@Base+0x6e4>
  40a264:	ldr	x0, [x21]
  40a268:	mov	w1, #0x28                  	// #40
  40a26c:	bl	406bb0 <strchr@plt>
  40a270:	add	x25, x0, #0x1
  40a274:	mov	x0, x25
  40a278:	bl	406680 <strlen@plt>
  40a27c:	sub	x24, x0, #0x1
  40a280:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  40a284:	add	x0, x0, #0x108
  40a288:	bl	424940 <strcache_add@@Base>
  40a28c:	bl	40cf50 <enter_file@@Base>
  40a290:	ldr	x19, [x0, #24]
  40a294:	cbnz	x19, 40a2c8 <set_file_variables@@Base+0x638>
  40a298:	b	40a3a0 <set_file_variables@@Base+0x710>
  40a29c:	mov	x0, x20
  40a2a0:	bl	406680 <strlen@plt>
  40a2a4:	mov	x2, x0
  40a2a8:	mov	x0, x20
  40a2ac:	subs	x20, x24, x2
  40a2b0:	b.ls	40a2c0 <set_file_variables@@Base+0x630>  // b.plast
  40a2b4:	add	x1, x25, x20
  40a2b8:	bl	406930 <strncmp@plt>
  40a2bc:	cbz	w0, 40a388 <set_file_variables@@Base+0x6f8>
  40a2c0:	ldr	x19, [x19]
  40a2c4:	cbz	x19, 40a3a0 <set_file_variables@@Base+0x710>
  40a2c8:	ldr	x20, [x19, #8]
  40a2cc:	cbnz	x20, 40a29c <set_file_variables@@Base+0x60c>
  40a2d0:	ldr	x0, [x19, #16]
  40a2d4:	ldr	x20, [x0]
  40a2d8:	b	40a29c <set_file_variables@@Base+0x60c>
  40a2dc:	mov	x0, x20
  40a2e0:	str	x1, [x23, #40]
  40a2e4:	bl	41ab78 <xrealloc@@Base>
  40a2e8:	mov	x20, x0
  40a2ec:	str	x0, [x23, #32]
  40a2f0:	b	409f60 <set_file_variables@@Base+0x2d0>
  40a2f4:	ldr	x0, [x23, #24]
  40a2f8:	mov	x1, x24
  40a2fc:	str	x24, [x23, #16]
  40a300:	bl	41ab78 <xrealloc@@Base>
  40a304:	mov	x24, x0
  40a308:	str	x0, [x23, #24]
  40a30c:	b	409f50 <set_file_variables@@Base+0x2c0>
  40a310:	mov	x1, #0x1                   	// #1
  40a314:	mov	x24, #0x2                   	// #2
  40a318:	str	x1, [x29, #104]
  40a31c:	nop
  40a320:	str	x1, [x0, #472]
  40a324:	mov	x0, x28
  40a328:	bl	41ab78 <xrealloc@@Base>
  40a32c:	str	x0, [x23, #8]
  40a330:	ldr	x19, [x21, #24]
  40a334:	mov	x28, x0
  40a338:	cbnz	x19, 409e60 <set_file_variables@@Base+0x1d0>
  40a33c:	mov	x2, x0
  40a340:	b	409f18 <set_file_variables@@Base+0x288>
  40a344:	mov	x22, x25
  40a348:	b	40a0ac <set_file_variables@@Base+0x41c>
  40a34c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40a350:	add	x23, x0, #0x1d8
  40a354:	ldr	x1, [x0, #472]
  40a358:	ldr	x2, [x23, #8]
  40a35c:	mov	x28, x2
  40a360:	cbz	x1, 40a310 <set_file_variables@@Base+0x680>
  40a364:	mov	x0, #0x1                   	// #1
  40a368:	mov	x24, #0x2                   	// #2
  40a36c:	str	x0, [x29, #104]
  40a370:	b	409f18 <set_file_variables@@Base+0x288>
  40a374:	ldr	x25, [x21]
  40a378:	mov	x0, x25
  40a37c:	bl	406680 <strlen@plt>
  40a380:	mov	x24, x0
  40a384:	b	40a280 <set_file_variables@@Base+0x5f0>
  40a388:	mov	x1, x20
  40a38c:	mov	x0, x25
  40a390:	bl	424a48 <strcache_add_len@@Base>
  40a394:	mov	x19, x0
  40a398:	str	x0, [x21, #40]
  40a39c:	b	409cd4 <set_file_variables@@Base+0x44>
  40a3a0:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x40e0>
  40a3a4:	add	x0, x0, #0xed0
  40a3a8:	mov	x19, x0
  40a3ac:	str	x0, [x21, #40]
  40a3b0:	b	409cd4 <set_file_variables@@Base+0x44>
  40a3b4:	nop

000000000040a3b8 <chop_commands@@Base>:
  40a3b8:	cbz	x0, 40a6e0 <chop_commands@@Base+0x328>
  40a3bc:	stp	x29, x30, [sp, #-128]!
  40a3c0:	mov	x29, sp
  40a3c4:	stp	x19, x20, [sp, #16]
  40a3c8:	mov	x20, x0
  40a3cc:	ldr	x0, [x0, #32]
  40a3d0:	cbz	x0, 40a3e0 <chop_commands@@Base+0x28>
  40a3d4:	ldp	x19, x20, [sp, #16]
  40a3d8:	ldp	x29, x30, [sp], #128
  40a3dc:	ret
  40a3e0:	adrp	x0, 449000 <commands_started@@Base+0x170>
  40a3e4:	stp	x21, x22, [sp, #32]
  40a3e8:	ldr	w0, [x0, #2140]
  40a3ec:	stp	x23, x24, [sp, #48]
  40a3f0:	stp	x25, x26, [sp, #64]
  40a3f4:	cbnz	w0, 40a5a4 <chop_commands@@Base+0x1ec>
  40a3f8:	mov	x0, #0x28                  	// #40
  40a3fc:	bl	41ab28 <xmalloc@@Base>
  40a400:	ldr	x25, [x20, #24]
  40a404:	mov	x21, x0
  40a408:	mov	w23, #0x0                   	// #0
  40a40c:	mov	w22, #0x5                   	// #5
  40a410:	ldrb	w0, [x25]
  40a414:	cbz	w0, 40a710 <chop_commands@@Base+0x358>
  40a418:	mov	x0, x25
  40a41c:	mov	w1, #0xa                   	// #10
  40a420:	sub	x24, x25, #0x1
  40a424:	bl	406bb0 <strchr@plt>
  40a428:	mov	x19, x0
  40a42c:	cbz	x0, 40a48c <chop_commands@@Base+0xd4>
  40a430:	cmp	x0, x25
  40a434:	b.ls	40a498 <chop_commands@@Base+0xe0>  // b.plast
  40a438:	ldurb	w0, [x0, #-1]
  40a43c:	cmp	w0, #0x5c
  40a440:	b.ne	40a498 <chop_commands@@Base+0xe0>  // b.any
  40a444:	sub	x1, x19, #0x2
  40a448:	cmp	x1, x25
  40a44c:	b.cc	40a478 <chop_commands@@Base+0xc0>  // b.lo, b.ul, b.last
  40a450:	mov	w2, #0x1                   	// #1
  40a454:	b	40a464 <chop_commands@@Base+0xac>
  40a458:	eor	w2, w2, #0x1
  40a45c:	cmp	x1, x24
  40a460:	b.eq	40a474 <chop_commands@@Base+0xbc>  // b.none
  40a464:	ldrb	w3, [x1]
  40a468:	sub	x1, x1, #0x1
  40a46c:	cmp	w3, #0x5c
  40a470:	b.eq	40a458 <chop_commands@@Base+0xa0>  // b.none
  40a474:	cbz	w2, 40a498 <chop_commands@@Base+0xe0>
  40a478:	add	x0, x19, #0x1
  40a47c:	mov	w1, #0xa                   	// #10
  40a480:	bl	406bb0 <strchr@plt>
  40a484:	mov	x19, x0
  40a488:	cbnz	x0, 40a430 <chop_commands@@Base+0x78>
  40a48c:	mov	x0, x25
  40a490:	bl	406680 <strlen@plt>
  40a494:	add	x19, x25, x0
  40a498:	cmp	w23, w22
  40a49c:	b.eq	40a6c8 <chop_commands@@Base+0x310>  // b.none
  40a4a0:	mov	w24, w23
  40a4a4:	sub	x1, x19, x25
  40a4a8:	mov	x0, x25
  40a4ac:	bl	41abd0 <xstrndup@@Base>
  40a4b0:	add	w23, w23, #0x1
  40a4b4:	str	x0, [x21, x24, lsl #3]
  40a4b8:	and	w23, w23, #0xffff
  40a4bc:	ldrb	w0, [x19]
  40a4c0:	cbnz	w0, 40a684 <chop_commands@@Base+0x2cc>
  40a4c4:	cmp	w22, w23
  40a4c8:	b.ne	40a6e4 <chop_commands@@Base+0x32c>  // b.any
  40a4cc:	and	w23, w22, #0xffff
  40a4d0:	mov	w19, w22
  40a4d4:	ldrb	w1, [x20, #51]
  40a4d8:	mov	x0, x19
  40a4dc:	str	x21, [x20, #32]
  40a4e0:	and	w1, w1, #0xfffffffe
  40a4e4:	strh	w23, [x20, #48]
  40a4e8:	strb	w1, [x20, #51]
  40a4ec:	bl	41ab28 <xmalloc@@Base>
  40a4f0:	str	x0, [x20, #40]
  40a4f4:	mov	x24, x0
  40a4f8:	cbz	w22, 40a700 <chop_commands@@Base+0x348>
  40a4fc:	stp	x27, x28, [sp, #80]
  40a500:	adrp	x23, 429000 <_IO_stdin_used@@Base+0xe0>
  40a504:	adrp	x26, 446000 <expanding_var@@Base+0x320>
  40a508:	add	x0, x23, #0x140
  40a50c:	add	x26, x26, #0x4c0
  40a510:	mov	w23, #0x0                   	// #0
  40a514:	mov	w27, #0x2b                  	// #43
  40a518:	str	x0, [sp, #112]
  40a51c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  40a520:	add	x0, x0, #0x148
  40a524:	str	x0, [sp, #120]
  40a528:	mov	w0, w23
  40a52c:	mov	w19, #0x0                   	// #0
  40a530:	orr	w2, w19, #0x1
  40a534:	and	x5, x23, #0xffff
  40a538:	and	w2, w2, #0xff
  40a53c:	ldr	x25, [x21, x0, lsl #3]
  40a540:	ldrb	w1, [x25]
  40a544:	ldrh	w0, [x26, w1, sxtw #1]
  40a548:	tbnz	w0, #1, 40a58c <chop_commands@@Base+0x1d4>
  40a54c:	nop
  40a550:	cmp	w1, #0x2d
  40a554:	b.eq	40a594 <chop_commands@@Base+0x1dc>  // b.none
  40a558:	cmp	w1, #0x40
  40a55c:	ccmp	w1, w27, #0x4, ne  // ne = any
  40a560:	b.ne	40a624 <chop_commands@@Base+0x26c>  // b.any
  40a564:	cmp	w1, #0x40
  40a568:	b.eq	40a614 <chop_commands@@Base+0x25c>  // b.none
  40a56c:	cmp	w1, #0x2b
  40a570:	add	x25, x25, #0x1
  40a574:	csel	w19, w2, w19, eq  // eq = none
  40a578:	ldrb	w1, [x25]
  40a57c:	orr	w2, w19, #0x1
  40a580:	and	w2, w2, #0xff
  40a584:	ldrh	w0, [x26, w1, sxtw #1]
  40a588:	tbz	w0, #1, 40a550 <chop_commands@@Base+0x198>
  40a58c:	cmp	w1, #0x2d
  40a590:	b.ne	40a564 <chop_commands@@Base+0x1ac>  // b.any
  40a594:	orr	w19, w19, #0x4
  40a598:	add	x25, x25, #0x1
  40a59c:	and	w19, w19, #0xff
  40a5a0:	b	40a578 <chop_commands@@Base+0x1c0>
  40a5a4:	ldr	x0, [x20, #24]
  40a5a8:	stp	x27, x28, [sp, #80]
  40a5ac:	bl	406680 <strlen@plt>
  40a5b0:	mov	x19, x0
  40a5b4:	mov	x0, #0x8                   	// #8
  40a5b8:	bl	41ab28 <xmalloc@@Base>
  40a5bc:	mov	x21, x0
  40a5c0:	ldr	x0, [x20, #24]
  40a5c4:	bl	41abb0 <xstrdup@@Base>
  40a5c8:	str	x0, [x21]
  40a5cc:	cbz	x19, 40a5e4 <chop_commands@@Base+0x22c>
  40a5d0:	sub	x19, x19, #0x1
  40a5d4:	ldrb	w1, [x0, x19]
  40a5d8:	cmp	w1, #0xa
  40a5dc:	b.ne	40a5e4 <chop_commands@@Base+0x22c>  // b.any
  40a5e0:	strb	wzr, [x0, x19]
  40a5e4:	ldrb	w1, [x20, #51]
  40a5e8:	mov	w2, #0x1                   	// #1
  40a5ec:	str	x21, [x20, #32]
  40a5f0:	mov	x0, #0x1                   	// #1
  40a5f4:	and	w1, w1, #0xfffffffe
  40a5f8:	strh	w2, [x20, #48]
  40a5fc:	strb	w1, [x20, #51]
  40a600:	mov	w22, #0x1                   	// #1
  40a604:	bl	41ab28 <xmalloc@@Base>
  40a608:	mov	x24, x0
  40a60c:	str	x0, [x20, #40]
  40a610:	b	40a500 <chop_commands@@Base+0x148>
  40a614:	orr	w19, w19, #0x2
  40a618:	add	x25, x25, #0x1
  40a61c:	and	w19, w19, #0xff
  40a620:	b	40a578 <chop_commands@@Base+0x1c0>
  40a624:	and	w28, w19, #0x1
  40a628:	tbnz	w19, #0, 40a650 <chop_commands@@Base+0x298>
  40a62c:	ldr	x1, [sp, #112]
  40a630:	mov	x0, x25
  40a634:	str	x5, [sp, #104]
  40a638:	bl	406cc0 <strstr@plt>
  40a63c:	ldr	x5, [sp, #104]
  40a640:	cbz	x0, 40a694 <chop_commands@@Base+0x2dc>
  40a644:	orr	w28, w19, #0x1
  40a648:	and	w19, w28, #0xff
  40a64c:	and	w28, w28, #0x1
  40a650:	strb	w19, [x24, x5]
  40a654:	add	w1, w23, #0x1
  40a658:	and	w23, w1, #0xffff
  40a65c:	ldrb	w0, [x20, #51]
  40a660:	cmp	w22, w1, uxth
  40a664:	mov	w1, w0
  40a668:	ubfx	x0, x0, #0, #1
  40a66c:	orr	w28, w28, w0
  40a670:	bfxil	w1, w28, #0, #1
  40a674:	strb	w1, [x20, #51]
  40a678:	b.ls	40a6ac <chop_commands@@Base+0x2f4>  // b.plast
  40a67c:	ldr	x24, [x20, #40]
  40a680:	b	40a528 <chop_commands@@Base+0x170>
  40a684:	ldrb	w0, [x19, #1]
  40a688:	add	x25, x19, #0x1
  40a68c:	cbnz	w0, 40a418 <chop_commands@@Base+0x60>
  40a690:	b	40a4c4 <chop_commands@@Base+0x10c>
  40a694:	ldr	x1, [sp, #120]
  40a698:	mov	x0, x25
  40a69c:	bl	406cc0 <strstr@plt>
  40a6a0:	ldr	x5, [sp, #104]
  40a6a4:	cbnz	x0, 40a644 <chop_commands@@Base+0x28c>
  40a6a8:	b	40a650 <chop_commands@@Base+0x298>
  40a6ac:	ldp	x19, x20, [sp, #16]
  40a6b0:	ldp	x21, x22, [sp, #32]
  40a6b4:	ldp	x23, x24, [sp, #48]
  40a6b8:	ldp	x25, x26, [sp, #64]
  40a6bc:	ldp	x27, x28, [sp, #80]
  40a6c0:	ldp	x29, x30, [sp], #128
  40a6c4:	ret
  40a6c8:	add	w22, w23, #0x2
  40a6cc:	mov	x0, x21
  40a6d0:	ubfiz	x1, x22, #3, #17
  40a6d4:	bl	41ab78 <xrealloc@@Base>
  40a6d8:	mov	x21, x0
  40a6dc:	b	40a4a0 <chop_commands@@Base+0xe8>
  40a6e0:	ret
  40a6e4:	ubfiz	x1, x23, #3, #16
  40a6e8:	and	x19, x23, #0xffff
  40a6ec:	mov	w22, w23
  40a6f0:	mov	x0, x21
  40a6f4:	bl	41ab78 <xrealloc@@Base>
  40a6f8:	mov	x21, x0
  40a6fc:	b	40a4d4 <chop_commands@@Base+0x11c>
  40a700:	ldp	x21, x22, [sp, #32]
  40a704:	ldp	x23, x24, [sp, #48]
  40a708:	ldp	x25, x26, [sp, #64]
  40a70c:	b	40a3d4 <chop_commands@@Base+0x1c>
  40a710:	mov	x19, #0x0                   	// #0
  40a714:	mov	x1, #0x0                   	// #0
  40a718:	mov	w22, #0x0                   	// #0
  40a71c:	b	40a6f0 <chop_commands@@Base+0x338>

000000000040a720 <execute_file_commands@@Base>:
  40a720:	stp	x29, x30, [sp, #-32]!
  40a724:	mov	x29, sp
  40a728:	str	x19, [sp, #16]
  40a72c:	mov	x19, x0
  40a730:	ldr	x0, [x0, #32]
  40a734:	ldr	x4, [x0, #24]
  40a738:	ldrb	w2, [x4]
  40a73c:	cbz	w2, 40a774 <execute_file_commands@@Base+0x54>
  40a740:	adrp	x5, 446000 <expanding_var@@Base+0x320>
  40a744:	add	x5, x5, #0x4c0
  40a748:	sub	w1, w2, #0x2b
  40a74c:	ldrh	w3, [x5, w2, sxtw #1]
  40a750:	and	w1, w1, #0xfffffffd
  40a754:	cmp	w2, #0x40
  40a758:	and	w1, w1, #0xff
  40a75c:	and	w2, w3, #0x6
  40a760:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40a764:	ccmp	w2, #0x0, #0x0, ne  // ne = any
  40a768:	b.eq	40a79c <execute_file_commands@@Base+0x7c>  // b.none
  40a76c:	ldrb	w2, [x4, #1]!
  40a770:	cbnz	w2, 40a748 <execute_file_commands@@Base+0x28>
  40a774:	mov	x0, x19
  40a778:	mov	w1, #0x2                   	// #2
  40a77c:	bl	40e3c0 <set_command_state@@Base>
  40a780:	ldrb	w1, [x19, #136]
  40a784:	mov	x0, x19
  40a788:	and	w1, w1, #0xfffffffc
  40a78c:	strb	w1, [x19, #136]
  40a790:	ldr	x19, [sp, #16]
  40a794:	ldp	x29, x30, [sp], #32
  40a798:	b	421998 <notice_finished_file@@Base>
  40a79c:	mov	w1, #0x0                   	// #0
  40a7a0:	mov	x0, x19
  40a7a4:	bl	426890 <initialize_file_variables@@Base>
  40a7a8:	mov	x0, x19
  40a7ac:	bl	409c90 <set_file_variables@@Base>
  40a7b0:	ldrb	w0, [x19, #136]
  40a7b4:	tbnz	w0, #6, 40a7c8 <execute_file_commands@@Base+0xa8>
  40a7b8:	mov	x0, x19
  40a7bc:	ldr	x19, [sp, #16]
  40a7c0:	ldp	x29, x30, [sp], #32
  40a7c4:	b	417b48 <new_job@@Base>
  40a7c8:	ldr	x0, [x19]
  40a7cc:	bl	418ae8 <unload_file@@Base>
  40a7d0:	mov	x0, x19
  40a7d4:	ldr	x19, [sp, #16]
  40a7d8:	ldp	x29, x30, [sp], #32
  40a7dc:	b	417b48 <new_job@@Base>

000000000040a7e0 <fatal_error_signal@@Base>:
  40a7e0:	stp	x29, x30, [sp, #-48]!
  40a7e4:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  40a7e8:	mov	w2, #0x1                   	// #1
  40a7ec:	mov	x29, sp
  40a7f0:	str	w2, [x1, #520]
  40a7f4:	mov	x1, #0x0                   	// #0
  40a7f8:	stp	x19, x20, [sp, #16]
  40a7fc:	str	x21, [sp, #32]
  40a800:	mov	w21, w0
  40a804:	bl	406880 <signal@plt>
  40a808:	cmp	w21, #0xf
  40a80c:	b.eq	40a938 <fatal_error_signal@@Base+0x158>  // b.none
  40a810:	sub	w0, w21, #0x1
  40a814:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  40a818:	cmp	w0, #0x2
  40a81c:	b.hi	40a904 <fatal_error_signal@@Base+0x124>  // b.pmore
  40a820:	ldr	x19, [x20, #1008]
  40a824:	cbz	x19, 40a8b0 <fatal_error_signal@@Base+0xd0>
  40a828:	ldrb	w1, [x19, #80]
  40a82c:	tbz	w1, #0, 40a844 <fatal_error_signal@@Base+0x64>
  40a830:	ldr	w0, [x19, #76]
  40a834:	cmp	w0, #0x0
  40a838:	b.le	40a844 <fatal_error_signal@@Base+0x64>
  40a83c:	mov	w1, w21
  40a840:	bl	4287c0 <remote_kill@@Base>
  40a844:	ldr	x19, [x19, #32]
  40a848:	cbnz	x19, 40a828 <fatal_error_signal@@Base+0x48>
  40a84c:	ldr	x19, [x20, #1008]
  40a850:	cbz	x19, 40a8b0 <fatal_error_signal@@Base+0xd0>
  40a854:	nop
  40a858:	ldrb	w1, [x19, #80]
  40a85c:	tbnz	w1, #3, 40a8a8 <fatal_error_signal@@Base+0xc8>
  40a860:	ldr	w0, [x19, #76]
  40a864:	tbnz	w0, #31, 40a8a8 <fatal_error_signal@@Base+0xc8>
  40a868:	ldr	x0, [x19, #40]
  40a86c:	mov	x1, #0x0                   	// #0
  40a870:	bl	409a88 <ar_member_touch@@Base+0x258>
  40a874:	ldr	x1, [x19, #40]
  40a878:	ldr	x20, [x1, #48]
  40a87c:	cbnz	x20, 40a888 <fatal_error_signal@@Base+0xa8>
  40a880:	b	40a89c <fatal_error_signal@@Base+0xbc>
  40a884:	ldr	x1, [x19, #40]
  40a888:	ldr	x1, [x1]
  40a88c:	ldr	x0, [x20, #16]
  40a890:	bl	409a88 <ar_member_touch@@Base+0x258>
  40a894:	ldr	x20, [x20]
  40a898:	cbnz	x20, 40a884 <fatal_error_signal@@Base+0xa4>
  40a89c:	ldrb	w1, [x19, #80]
  40a8a0:	orr	w1, w1, #0x8
  40a8a4:	strb	w1, [x19, #80]
  40a8a8:	ldr	x19, [x19, #32]
  40a8ac:	cbnz	x19, 40a858 <fatal_error_signal@@Base+0x78>
  40a8b0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40a8b4:	add	x19, x0, #0x3c4
  40a8b8:	ldr	w0, [x0, #964]
  40a8bc:	cbz	w0, 40a8d4 <fatal_error_signal@@Base+0xf4>
  40a8c0:	mov	w1, #0x0                   	// #0
  40a8c4:	mov	w0, #0x1                   	// #1
  40a8c8:	bl	416790 <reap_children@@Base>
  40a8cc:	ldr	w1, [x19]
  40a8d0:	cbnz	w1, 40a8c0 <fatal_error_signal@@Base+0xe0>
  40a8d4:	mov	w0, #0x1                   	// #1
  40a8d8:	bl	40d4e8 <remove_intermediates@@Base>
  40a8dc:	cmp	w21, #0x3
  40a8e0:	b.eq	40a97c <fatal_error_signal@@Base+0x19c>  // b.none
  40a8e4:	bl	4068a0 <getpid@plt>
  40a8e8:	mov	w1, w21
  40a8ec:	bl	4067e0 <kill@plt>
  40a8f0:	tbnz	w0, #31, 40a970 <fatal_error_signal@@Base+0x190>
  40a8f4:	ldp	x19, x20, [sp, #16]
  40a8f8:	ldr	x21, [sp, #32]
  40a8fc:	ldp	x29, x30, [sp], #48
  40a900:	ret
  40a904:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40a908:	add	x19, x0, #0x3c4
  40a90c:	ldr	w0, [x0, #964]
  40a910:	cbz	w0, 40a92c <fatal_error_signal@@Base+0x14c>
  40a914:	nop
  40a918:	mov	w1, #0x1                   	// #1
  40a91c:	mov	w0, w1
  40a920:	bl	416790 <reap_children@@Base>
  40a924:	ldr	w0, [x19]
  40a928:	cbnz	w0, 40a918 <fatal_error_signal@@Base+0x138>
  40a92c:	mov	w0, #0x1                   	// #1
  40a930:	bl	40d4e8 <remove_intermediates@@Base>
  40a934:	b	40a8e4 <fatal_error_signal@@Base+0x104>
  40a938:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  40a93c:	ldr	x19, [x20, #1008]
  40a940:	cbz	x19, 40a8b0 <fatal_error_signal@@Base+0xd0>
  40a944:	nop
  40a948:	ldrb	w0, [x19, #80]
  40a94c:	tbnz	w0, #0, 40a964 <fatal_error_signal@@Base+0x184>
  40a950:	ldr	w0, [x19, #76]
  40a954:	cmp	w0, #0x0
  40a958:	b.le	40a964 <fatal_error_signal@@Base+0x184>
  40a95c:	mov	w1, #0xf                   	// #15
  40a960:	bl	4067e0 <kill@plt>
  40a964:	ldr	x19, [x19, #32]
  40a968:	cbnz	x19, 40a948 <fatal_error_signal@@Base+0x168>
  40a96c:	b	40a820 <fatal_error_signal@@Base+0x40>
  40a970:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  40a974:	add	x0, x0, #0x150
  40a978:	bl	41b730 <pfatal_with_name@@Base>
  40a97c:	mov	w0, #0x1                   	// #1
  40a980:	bl	4066a0 <exit@plt>
  40a984:	nop

000000000040a988 <delete_child_targets@@Base>:
  40a988:	stp	x29, x30, [sp, #-32]!
  40a98c:	mov	x29, sp
  40a990:	stp	x19, x20, [sp, #16]
  40a994:	mov	x20, x0
  40a998:	ldrb	w0, [x0, #80]
  40a99c:	tbnz	w0, #3, 40a9e8 <delete_child_targets@@Base+0x60>
  40a9a0:	ldr	w0, [x20, #76]
  40a9a4:	tbnz	w0, #31, 40a9e8 <delete_child_targets@@Base+0x60>
  40a9a8:	ldr	x0, [x20, #40]
  40a9ac:	mov	x1, #0x0                   	// #0
  40a9b0:	bl	409a88 <ar_member_touch@@Base+0x258>
  40a9b4:	ldr	x0, [x20, #40]
  40a9b8:	ldr	x19, [x0, #48]
  40a9bc:	cbnz	x19, 40a9c8 <delete_child_targets@@Base+0x40>
  40a9c0:	b	40a9dc <delete_child_targets@@Base+0x54>
  40a9c4:	ldr	x0, [x20, #40]
  40a9c8:	ldr	x1, [x0]
  40a9cc:	ldr	x0, [x19, #16]
  40a9d0:	bl	409a88 <ar_member_touch@@Base+0x258>
  40a9d4:	ldr	x19, [x19]
  40a9d8:	cbnz	x19, 40a9c4 <delete_child_targets@@Base+0x3c>
  40a9dc:	ldrb	w0, [x20, #80]
  40a9e0:	orr	w0, w0, #0x8
  40a9e4:	strb	w0, [x20, #80]
  40a9e8:	ldp	x19, x20, [sp, #16]
  40a9ec:	ldp	x29, x30, [sp], #32
  40a9f0:	ret
  40a9f4:	nop

000000000040a9f8 <print_commands@@Base>:
  40a9f8:	stp	x29, x30, [sp, #-48]!
  40a9fc:	mov	w2, #0x5                   	// #5
  40aa00:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  40aa04:	mov	x29, sp
  40aa08:	add	x1, x1, #0x158
  40aa0c:	stp	x19, x20, [sp, #16]
  40aa10:	mov	x19, x0
  40aa14:	mov	x0, #0x0                   	// #0
  40aa18:	bl	406cd0 <dcgettext@plt>
  40aa1c:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  40aa20:	ldr	x1, [x1, #440]
  40aa24:	bl	406690 <fputs@plt>
  40aa28:	ldr	x0, [x19]
  40aa2c:	cbz	x0, 40aae4 <print_commands@@Base+0xec>
  40aa30:	mov	w2, #0x5                   	// #5
  40aa34:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  40aa38:	mov	x0, #0x0                   	// #0
  40aa3c:	add	x1, x1, #0x180
  40aa40:	bl	406cd0 <dcgettext@plt>
  40aa44:	ldp	x1, x2, [x19]
  40aa48:	bl	406d60 <printf@plt>
  40aa4c:	ldr	x3, [x19, #24]
  40aa50:	ldrb	w0, [x3]
  40aa54:	cbz	w0, 40aad8 <print_commands@@Base+0xe0>
  40aa58:	adrp	x20, 429000 <_IO_stdin_used@@Base+0xe0>
  40aa5c:	add	x20, x20, #0x1a0
  40aa60:	str	x21, [sp, #32]
  40aa64:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  40aa68:	add	x21, x21, #0xb4
  40aa6c:	nop
  40aa70:	mov	x19, x3
  40aa74:	mov	w1, #0x0                   	// #0
  40aa78:	b	40aa90 <print_commands@@Base+0x98>
  40aa7c:	cmp	w0, #0x5c
  40aa80:	ldrb	w0, [x19, #1]!
  40aa84:	cset	w1, eq  // eq = none
  40aa88:	and	w1, w1, w2
  40aa8c:	cbz	w0, 40aaac <print_commands@@Base+0xb4>
  40aa90:	eor	w2, w1, #0x1
  40aa94:	cmp	w0, #0xa
  40aa98:	b.ne	40aa7c <print_commands@@Base+0x84>  // b.any
  40aa9c:	cbz	w1, 40aaac <print_commands@@Base+0xb4>
  40aaa0:	ldrb	w0, [x19, #1]!
  40aaa4:	mov	w1, #0x0                   	// #0
  40aaa8:	cbnz	w0, 40aa90 <print_commands@@Base+0x98>
  40aaac:	ldrb	w1, [x21]
  40aab0:	sub	w2, w19, w3
  40aab4:	mov	x0, x20
  40aab8:	bl	406d60 <printf@plt>
  40aabc:	ldrb	w0, [x19]
  40aac0:	cmp	w0, #0xa
  40aac4:	cset	w0, eq  // eq = none
  40aac8:	cinc	x3, x19, eq  // eq = none
  40aacc:	ldrb	w0, [x19, w0, uxtw]
  40aad0:	cbnz	w0, 40aa70 <print_commands@@Base+0x78>
  40aad4:	ldr	x21, [sp, #32]
  40aad8:	ldp	x19, x20, [sp, #16]
  40aadc:	ldp	x29, x30, [sp], #48
  40aae0:	ret
  40aae4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  40aae8:	add	x1, x1, #0x170
  40aaec:	mov	w2, #0x5                   	// #5
  40aaf0:	bl	406cd0 <dcgettext@plt>
  40aaf4:	bl	406ae0 <puts@plt>
  40aaf8:	b	40aa4c <print_commands@@Base+0x54>
  40aafc:	nop

000000000040ab00 <set_default_suffixes@@Base>:
  40ab00:	stp	x29, x30, [sp, #-64]!
  40ab04:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  40ab08:	add	x0, x0, #0x108
  40ab0c:	mov	x29, sp
  40ab10:	stp	x19, x20, [sp, #16]
  40ab14:	bl	424940 <strcache_add@@Base>
  40ab18:	bl	40cf50 <enter_file@@Base>
  40ab1c:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  40ab20:	adrp	x19, 449000 <commands_started@@Base+0x170>
  40ab24:	ldr	w2, [x1, #3420]
  40ab28:	ldrb	w1, [x0, #136]
  40ab2c:	str	x0, [x19, #2296]
  40ab30:	orr	w1, w1, #0x10
  40ab34:	strb	w1, [x0, #136]
  40ab38:	cbz	w2, 40ab78 <set_default_suffixes@@Base+0x78>
  40ab3c:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  40ab40:	mov	x6, #0x0                   	// #0
  40ab44:	mov	w4, #0x0                   	// #0
  40ab48:	mov	w3, #0x0                   	// #0
  40ab4c:	ldr	x5, [x1, #336]
  40ab50:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x40e0>
  40ab54:	mov	x1, #0x8                   	// #8
  40ab58:	add	x2, x2, #0xed0
  40ab5c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  40ab60:	add	x0, x0, #0x1a8
  40ab64:	ldr	x5, [x5, #8]
  40ab68:	bl	4253c8 <define_variable_in_set@@Base>
  40ab6c:	ldp	x19, x20, [sp, #16]
  40ab70:	ldp	x29, x30, [sp], #64
  40ab74:	ret
  40ab78:	mov	w4, #0x0                   	// #0
  40ab7c:	mov	x3, #0x0                   	// #0
  40ab80:	mov	w2, #0x1                   	// #1
  40ab84:	mov	x1, #0x28                  	// #40
  40ab88:	add	x0, sp, #0x38
  40ab8c:	adrp	x20, 445000 <memcpy@GLIBC_2.17>
  40ab90:	add	x20, x20, #0x400
  40ab94:	str	x21, [sp, #32]
  40ab98:	str	x20, [sp, #56]
  40ab9c:	bl	41e790 <parse_file_seq@@Base>
  40aba0:	ldr	x21, [x19, #2296]
  40aba4:	mov	x1, #0x0                   	// #0
  40aba8:	bl	40d820 <enter_prereqs@@Base>
  40abac:	ldr	x1, [x19, #2296]
  40abb0:	str	x0, [x21, #24]
  40abb4:	ldr	x0, [x1, #24]
  40abb8:	cbz	x0, 40abd8 <set_default_suffixes@@Base+0xd8>
  40abbc:	nop
  40abc0:	ldr	x2, [x0, #16]
  40abc4:	ldrb	w1, [x2, #136]
  40abc8:	orr	w1, w1, #0x10
  40abcc:	strb	w1, [x2, #136]
  40abd0:	ldr	x0, [x0]
  40abd4:	cbnz	x0, 40abc0 <set_default_suffixes@@Base+0xc0>
  40abd8:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  40abdc:	mov	x2, x20
  40abe0:	mov	x6, #0x0                   	// #0
  40abe4:	mov	w4, #0x0                   	// #0
  40abe8:	ldr	x5, [x1, #336]
  40abec:	mov	w3, #0x0                   	// #0
  40abf0:	mov	x1, #0x8                   	// #8
  40abf4:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  40abf8:	add	x0, x0, #0x1a8
  40abfc:	ldr	x5, [x5, #8]
  40ac00:	bl	4253c8 <define_variable_in_set@@Base>
  40ac04:	ldp	x19, x20, [sp, #16]
  40ac08:	ldr	x21, [sp, #32]
  40ac0c:	ldp	x29, x30, [sp], #64
  40ac10:	ret
  40ac14:	nop

000000000040ac18 <install_default_suffix_rules@@Base>:
  40ac18:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40ac1c:	ldr	w0, [x0, #3420]
  40ac20:	cbnz	w0, 40acac <install_default_suffix_rules@@Base+0x94>
  40ac24:	stp	x29, x30, [sp, #-48]!
  40ac28:	adrp	x0, 445000 <memcpy@GLIBC_2.17>
  40ac2c:	add	x0, x0, #0x400
  40ac30:	mov	x29, sp
  40ac34:	stp	x21, x22, [sp, #32]
  40ac38:	add	x21, x0, #0xa0
  40ac3c:	ldr	x0, [x0, #160]
  40ac40:	cbz	x0, 40aca0 <install_default_suffix_rules@@Base+0x88>
  40ac44:	mov	w22, #0x9                   	// #9
  40ac48:	stp	x19, x20, [sp, #16]
  40ac4c:	nop
  40ac50:	bl	424940 <strcache_add@@Base>
  40ac54:	bl	40cf50 <enter_file@@Base>
  40ac58:	mov	x19, x0
  40ac5c:	mov	x0, #0x38                  	// #56
  40ac60:	bl	41ab28 <xmalloc@@Base>
  40ac64:	mov	x20, x0
  40ac68:	str	x0, [x19, #32]
  40ac6c:	str	xzr, [x0]
  40ac70:	ldr	x0, [x21, #8]
  40ac74:	bl	41abb0 <xstrdup@@Base>
  40ac78:	ldr	x1, [x19, #32]
  40ac7c:	str	x0, [x20, #24]
  40ac80:	strb	w22, [x1, #50]
  40ac84:	ldrb	w0, [x19, #136]
  40ac88:	str	xzr, [x1, #32]
  40ac8c:	orr	w0, w0, #0x10
  40ac90:	strb	w0, [x19, #136]
  40ac94:	ldr	x0, [x21, #16]!
  40ac98:	cbnz	x0, 40ac50 <install_default_suffix_rules@@Base+0x38>
  40ac9c:	ldp	x19, x20, [sp, #16]
  40aca0:	ldp	x21, x22, [sp, #32]
  40aca4:	ldp	x29, x30, [sp], #48
  40aca8:	ret
  40acac:	ret

000000000040acb0 <install_default_implicit_rules@@Base>:
  40acb0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40acb4:	ldr	w0, [x0, #3420]
  40acb8:	cbnz	w0, 40ad20 <install_default_implicit_rules@@Base+0x70>
  40acbc:	stp	x29, x30, [sp, #-32]!
  40acc0:	mov	x29, sp
  40acc4:	stp	x19, x20, [sp, #16]
  40acc8:	adrp	x19, 445000 <memcpy@GLIBC_2.17>
  40accc:	add	x19, x19, #0x400
  40acd0:	add	x20, x19, #0x3c0
  40acd4:	ldr	x0, [x19, #960]
  40acd8:	cbz	x0, 40acf4 <install_default_implicit_rules@@Base+0x44>
  40acdc:	nop
  40ace0:	mov	x0, x20
  40ace4:	mov	w1, #0x0                   	// #0
  40ace8:	bl	4242e0 <install_pattern_rule@@Base>
  40acec:	ldr	x0, [x20, #24]!
  40acf0:	cbnz	x0, 40ace0 <install_default_implicit_rules@@Base+0x30>
  40acf4:	ldr	x0, [x19, #1080]
  40acf8:	add	x19, x19, #0x438
  40acfc:	cbz	x0, 40ad14 <install_default_implicit_rules@@Base+0x64>
  40ad00:	mov	x0, x19
  40ad04:	mov	w1, #0x1                   	// #1
  40ad08:	bl	4242e0 <install_pattern_rule@@Base>
  40ad0c:	ldr	x0, [x19, #24]!
  40ad10:	cbnz	x0, 40ad00 <install_default_implicit_rules@@Base+0x50>
  40ad14:	ldp	x19, x20, [sp, #16]
  40ad18:	ldp	x29, x30, [sp], #32
  40ad1c:	ret
  40ad20:	ret
  40ad24:	nop

000000000040ad28 <define_default_variables@@Base>:
  40ad28:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40ad2c:	ldr	w0, [x0, #3416]
  40ad30:	cbnz	w0, 40ada4 <define_default_variables@@Base+0x7c>
  40ad34:	stp	x29, x30, [sp, #-48]!
  40ad38:	adrp	x0, 445000 <memcpy@GLIBC_2.17>
  40ad3c:	add	x0, x0, #0x400
  40ad40:	mov	x29, sp
  40ad44:	stp	x19, x20, [sp, #16]
  40ad48:	add	x20, x0, #0x4d0
  40ad4c:	ldr	x19, [x0, #1232]
  40ad50:	cbz	x19, 40ad98 <define_default_variables@@Base+0x70>
  40ad54:	str	x21, [sp, #32]
  40ad58:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  40ad5c:	add	x21, x21, #0x150
  40ad60:	mov	x0, x19
  40ad64:	bl	406680 <strlen@plt>
  40ad68:	ldr	x3, [x21]
  40ad6c:	mov	x1, x0
  40ad70:	ldr	x2, [x20, #8]
  40ad74:	mov	x0, x19
  40ad78:	ldr	x5, [x3, #8]
  40ad7c:	mov	x6, #0x0                   	// #0
  40ad80:	mov	w4, #0x1                   	// #1
  40ad84:	mov	w3, #0x0                   	// #0
  40ad88:	bl	4253c8 <define_variable_in_set@@Base>
  40ad8c:	ldr	x19, [x20, #16]!
  40ad90:	cbnz	x19, 40ad60 <define_default_variables@@Base+0x38>
  40ad94:	ldr	x21, [sp, #32]
  40ad98:	ldp	x19, x20, [sp, #16]
  40ad9c:	ldp	x29, x30, [sp], #48
  40ada0:	ret
  40ada4:	ret

000000000040ada8 <undefine_default_variables@@Base>:
  40ada8:	stp	x29, x30, [sp, #-32]!
  40adac:	adrp	x0, 445000 <memcpy@GLIBC_2.17>
  40adb0:	add	x0, x0, #0x400
  40adb4:	mov	x29, sp
  40adb8:	stp	x19, x20, [sp, #16]
  40adbc:	ldr	x19, [x0, #1232]
  40adc0:	cbz	x19, 40adec <undefine_default_variables@@Base+0x44>
  40adc4:	add	x20, x0, #0x4d0
  40adc8:	mov	x0, x19
  40adcc:	bl	406680 <strlen@plt>
  40add0:	mov	x3, #0x0                   	// #0
  40add4:	mov	x1, x0
  40add8:	mov	w2, #0x0                   	// #0
  40addc:	mov	x0, x19
  40ade0:	bl	4256b0 <undefine_variable_in_set@@Base>
  40ade4:	ldr	x19, [x20, #16]!
  40ade8:	cbnz	x19, 40adc8 <undefine_default_variables@@Base+0x20>
  40adec:	ldp	x19, x20, [sp, #16]
  40adf0:	ldp	x29, x30, [sp], #32
  40adf4:	ret
  40adf8:	ldp	x1, x0, [x0]
  40adfc:	eor	w0, w0, w1, lsl #4
  40ae00:	ret
  40ae04:	nop
  40ae08:	ldp	x1, x0, [x0]
  40ae0c:	eon	w0, w0, w1, lsl #4
  40ae10:	ret
  40ae14:	nop
  40ae18:	mov	x0, #0x0                   	// #0
  40ae1c:	ret
  40ae20:	ldr	x0, [x0]
  40ae24:	ldr	x1, [x1]
  40ae28:	cmp	x0, x1
  40ae2c:	b.eq	40ae34 <undefine_default_variables@@Base+0x8c>  // b.none
  40ae30:	b	406b40 <strcmp@plt>
  40ae34:	mov	w0, #0x0                   	// #0
  40ae38:	ret
  40ae3c:	nop
  40ae40:	stp	x29, x30, [sp, #-16]!
  40ae44:	mov	x29, sp
  40ae48:	ldr	x0, [x0]
  40ae4c:	bl	413218 <jhash_string@@Base>
  40ae50:	mov	w0, w0
  40ae54:	ldp	x29, x30, [sp], #16
  40ae58:	ret
  40ae5c:	nop
  40ae60:	stp	x29, x30, [sp, #-16]!
  40ae64:	mov	x29, sp
  40ae68:	ldr	x0, [x0]
  40ae6c:	bl	413218 <jhash_string@@Base>
  40ae70:	mov	w0, w0
  40ae74:	ldp	x29, x30, [sp], #16
  40ae78:	ret
  40ae7c:	nop
  40ae80:	stp	x29, x30, [sp, #-48]!
  40ae84:	mov	x29, sp
  40ae88:	ldp	x3, x1, [x0]
  40ae8c:	stp	x19, x20, [sp, #16]
  40ae90:	ldr	x4, [x3, #16]
  40ae94:	ldr	x2, [x3, #48]
  40ae98:	add	x2, x4, x2, lsl #3
  40ae9c:	cmp	x2, x1
  40aea0:	b.ls	40af74 <undefine_default_variables@@Base+0x1cc>  // b.plast
  40aea4:	adrp	x3, 446000 <expanding_var@@Base+0x320>
  40aea8:	ldr	x3, [x3, #72]
  40aeac:	nop
  40aeb0:	ldr	x19, [x1], #8
  40aeb4:	cmp	x3, x19
  40aeb8:	cbz	x19, 40aec8 <undefine_default_variables@@Base+0x120>
  40aebc:	b.eq	40aec8 <undefine_default_variables@@Base+0x120>  // b.none
  40aec0:	ldrsh	w4, [x19, #16]
  40aec4:	cbz	w4, 40aee8 <undefine_default_variables@@Base+0x140>
  40aec8:	cmp	x1, x2
  40aecc:	b.cc	40aeb0 <undefine_default_variables@@Base+0x108>  // b.lo, b.ul, b.last
  40aed0:	mov	x20, #0x0                   	// #0
  40aed4:	str	x1, [x0, #8]
  40aed8:	mov	x0, x20
  40aedc:	ldp	x19, x20, [sp, #16]
  40aee0:	ldp	x29, x30, [sp], #48
  40aee4:	ret
  40aee8:	adrp	x3, 446000 <expanding_var@@Base+0x320>
  40aeec:	stp	x21, x22, [sp, #32]
  40aef0:	add	x22, x3, #0x210
  40aef4:	ldr	x2, [x19, #8]
  40aef8:	str	x1, [x0, #8]
  40aefc:	ldr	x0, [x3, #528]
  40af00:	add	x1, x2, #0x19
  40af04:	add	x21, x2, #0x1
  40af08:	cmp	x0, x1
  40af0c:	ldr	x20, [x22, #8]
  40af10:	b.cs	40af38 <undefine_default_variables@@Base+0x190>  // b.hs, b.nlast
  40af14:	cmp	x1, x0, lsl #1
  40af18:	lsl	x0, x0, #1
  40af1c:	b.hi	40af6c <undefine_default_variables@@Base+0x1c4>  // b.pmore
  40af20:	mov	x1, x0
  40af24:	str	x0, [x3, #528]
  40af28:	mov	x0, x20
  40af2c:	bl	41ab78 <xrealloc@@Base>
  40af30:	mov	x20, x0
  40af34:	str	x0, [x22, #8]
  40af38:	mov	x0, #0x1                   	// #1
  40af3c:	str	x0, [x20]
  40af40:	mov	x2, x21
  40af44:	add	x0, x20, #0x13
  40af48:	ldrb	w1, [x19, #18]
  40af4c:	strb	w1, [x20, #18]
  40af50:	ldr	x1, [x19]
  40af54:	bl	406640 <memcpy@plt>
  40af58:	mov	x0, x20
  40af5c:	ldp	x19, x20, [sp, #16]
  40af60:	ldp	x21, x22, [sp, #32]
  40af64:	ldp	x29, x30, [sp], #48
  40af68:	ret
  40af6c:	str	x1, [x3, #528]
  40af70:	b	40af28 <undefine_default_variables@@Base+0x180>
  40af74:	mov	x20, #0x0                   	// #0
  40af78:	b	40aed8 <undefine_default_variables@@Base+0x130>
  40af7c:	nop
  40af80:	mov	x2, x0
  40af84:	ldr	x0, [x1, #8]
  40af88:	ldr	x3, [x2, #8]
  40af8c:	cmp	x3, x0
  40af90:	b.cc	40afb8 <undefine_default_variables@@Base+0x210>  // b.lo, b.ul, b.last
  40af94:	mov	w0, #0x1                   	// #1
  40af98:	b.ne	40afb4 <undefine_default_variables@@Base+0x20c>  // b.any
  40af9c:	ldr	x1, [x1]
  40afa0:	mov	w3, #0xffffffff            	// #-1
  40afa4:	ldr	x2, [x2]
  40afa8:	cmp	x2, x1
  40afac:	cset	w0, ne  // ne = any
  40afb0:	csel	w0, w0, w3, cs  // cs = hs, nlast
  40afb4:	ret
  40afb8:	mov	w0, #0xffffffff            	// #-1
  40afbc:	ret
  40afc0:	mov	x2, x0
  40afc4:	ldr	x3, [x1, #8]
  40afc8:	ldr	x0, [x0, #8]
  40afcc:	subs	w0, w0, w3
  40afd0:	b.ne	40afec <undefine_default_variables@@Base+0x244>  // b.any
  40afd4:	ldr	x1, [x1]
  40afd8:	ldr	x2, [x2]
  40afdc:	cmp	x2, x1
  40afe0:	b.eq	40afec <undefine_default_variables@@Base+0x244>  // b.none
  40afe4:	mov	x0, x2
  40afe8:	b	406b40 <strcmp@plt>
  40afec:	ret
  40aff0:	stp	x29, x30, [sp, #-128]!
  40aff4:	mov	x29, sp
  40aff8:	stp	x19, x20, [sp, #16]
  40affc:	cbz	x0, 40b1c8 <undefine_default_variables@@Base+0x420>
  40b000:	stp	x21, x22, [sp, #32]
  40b004:	mov	x22, x0
  40b008:	ldr	x0, [x0, #16]
  40b00c:	cbz	x0, 40b1f4 <undefine_default_variables@@Base+0x44c>
  40b010:	stp	x23, x24, [sp, #48]
  40b014:	mov	x23, x1
  40b018:	cbz	x1, 40b070 <undefine_default_variables@@Base+0x2c8>
  40b01c:	ldrb	w0, [x1]
  40b020:	mov	w19, #0x1                   	// #1
  40b024:	cbz	w0, 40b1dc <undefine_default_variables@@Base+0x434>
  40b028:	mov	x0, x1
  40b02c:	str	x1, [sp, #104]
  40b030:	bl	406680 <strlen@plt>
  40b034:	mov	x2, x0
  40b038:	add	x1, sp, #0x68
  40b03c:	add	x0, x22, #0x10
  40b040:	str	x2, [sp, #112]
  40b044:	bl	412950 <hash_find_item@@Base>
  40b048:	cbz	x0, 40b070 <undefine_default_variables@@Base+0x2c8>
  40b04c:	ldrsh	w0, [x0, #16]
  40b050:	ldp	x21, x22, [sp, #32]
  40b054:	cmp	w0, #0x0
  40b058:	cset	w19, eq  // eq = none
  40b05c:	mov	w0, w19
  40b060:	ldp	x19, x20, [sp, #16]
  40b064:	ldp	x23, x24, [sp, #48]
  40b068:	ldp	x29, x30, [sp], #128
  40b06c:	ret
  40b070:	ldr	x19, [x22, #104]
  40b074:	cbz	x19, 40b1c0 <undefine_default_variables@@Base+0x418>
  40b078:	stp	x25, x26, [sp, #64]
  40b07c:	add	x25, x22, #0x10
  40b080:	add	x26, x23, #0x1
  40b084:	stp	x27, x28, [sp, #80]
  40b088:	bl	406d70 <__errno_location@plt>
  40b08c:	mov	x24, x0
  40b090:	mov	x0, x19
  40b094:	str	wzr, [x24]
  40b098:	bl	4069f0 <readdir@plt>
  40b09c:	mov	x19, x0
  40b0a0:	cbz	x0, 40b144 <undefine_default_variables@@Base+0x39c>
  40b0a4:	nop
  40b0a8:	ldr	x0, [x0]
  40b0ac:	cbz	x0, 40b12c <undefine_default_variables@@Base+0x384>
  40b0b0:	add	x27, x19, #0x13
  40b0b4:	mov	x0, x27
  40b0b8:	bl	406680 <strlen@plt>
  40b0bc:	add	x1, sp, #0x68
  40b0c0:	mov	x21, x0
  40b0c4:	mov	x0, x25
  40b0c8:	stp	x27, x21, [sp, #104]
  40b0cc:	bl	412690 <hash_find_slot@@Base>
  40b0d0:	mov	x28, x0
  40b0d4:	mov	x0, #0x18                  	// #24
  40b0d8:	bl	41ab28 <xmalloc@@Base>
  40b0dc:	mov	x20, x0
  40b0e0:	mov	x1, x21
  40b0e4:	mov	x0, x27
  40b0e8:	bl	424a48 <strcache_add_len@@Base>
  40b0ec:	str	x0, [x20]
  40b0f0:	mov	x2, x28
  40b0f4:	mov	x1, x20
  40b0f8:	mov	x0, x25
  40b0fc:	ldrb	w3, [x19, #18]
  40b100:	str	x21, [x20, #8]
  40b104:	strh	wzr, [x20, #16]
  40b108:	strb	w3, [x20, #18]
  40b10c:	bl	412b18 <hash_insert_at@@Base>
  40b110:	cbz	x23, 40b12c <undefine_default_variables@@Base+0x384>
  40b114:	cmp	x23, x27
  40b118:	b.eq	40b1a8 <undefine_default_variables@@Base+0x400>  // b.none
  40b11c:	ldrb	w1, [x19, #19]
  40b120:	ldrb	w0, [x23]
  40b124:	cmp	w0, w1
  40b128:	b.eq	40b194 <undefine_default_variables@@Base+0x3ec>  // b.none
  40b12c:	ldr	x19, [x22, #104]
  40b130:	str	wzr, [x24]
  40b134:	mov	x0, x19
  40b138:	bl	4069f0 <readdir@plt>
  40b13c:	mov	x19, x0
  40b140:	cbnz	x0, 40b0a8 <undefine_default_variables@@Base+0x300>
  40b144:	ldr	w19, [x24]
  40b148:	cmp	w19, #0x4
  40b14c:	b.eq	40b12c <undefine_default_variables@@Base+0x384>  // b.none
  40b150:	cbnz	w19, 40b1fc <undefine_default_variables@@Base+0x454>
  40b154:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  40b158:	add	x1, x1, #0x210
  40b15c:	ldr	x0, [x22, #104]
  40b160:	ldr	w2, [x1, #16]
  40b164:	sub	w2, w2, #0x1
  40b168:	str	w2, [x1, #16]
  40b16c:	bl	406a30 <closedir@plt>
  40b170:	ldp	x23, x24, [sp, #48]
  40b174:	mov	w0, w19
  40b178:	ldp	x25, x26, [sp, #64]
  40b17c:	ldp	x27, x28, [sp, #80]
  40b180:	str	xzr, [x22, #104]
  40b184:	ldp	x19, x20, [sp, #16]
  40b188:	ldp	x21, x22, [sp, #32]
  40b18c:	ldp	x29, x30, [sp], #128
  40b190:	ret
  40b194:	cbz	w0, 40b1a8 <undefine_default_variables@@Base+0x400>
  40b198:	add	x0, x19, #0x14
  40b19c:	mov	x1, x26
  40b1a0:	bl	406b40 <strcmp@plt>
  40b1a4:	cbnz	w0, 40b12c <undefine_default_variables@@Base+0x384>
  40b1a8:	mov	w19, #0x1                   	// #1
  40b1ac:	ldp	x21, x22, [sp, #32]
  40b1b0:	ldp	x23, x24, [sp, #48]
  40b1b4:	ldp	x25, x26, [sp, #64]
  40b1b8:	ldp	x27, x28, [sp, #80]
  40b1bc:	b	40b1cc <undefine_default_variables@@Base+0x424>
  40b1c0:	ldp	x21, x22, [sp, #32]
  40b1c4:	ldp	x23, x24, [sp, #48]
  40b1c8:	mov	w19, #0x0                   	// #0
  40b1cc:	mov	w0, w19
  40b1d0:	ldp	x19, x20, [sp, #16]
  40b1d4:	ldp	x29, x30, [sp], #128
  40b1d8:	ret
  40b1dc:	mov	w0, w19
  40b1e0:	ldp	x19, x20, [sp, #16]
  40b1e4:	ldp	x21, x22, [sp, #32]
  40b1e8:	ldp	x23, x24, [sp, #48]
  40b1ec:	ldp	x29, x30, [sp], #128
  40b1f0:	ret
  40b1f4:	ldp	x21, x22, [sp, #32]
  40b1f8:	b	40b1c8 <undefine_default_variables@@Base+0x420>
  40b1fc:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40b200:	add	x0, x0, #0x410
  40b204:	bl	41b730 <pfatal_with_name@@Base>
  40b208:	stp	x29, x30, [sp, #-320]!
  40b20c:	mov	x29, sp
  40b210:	stp	x21, x22, [sp, #32]
  40b214:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  40b218:	add	x21, x21, #0x210
  40b21c:	add	x1, sp, #0x40
  40b220:	stp	x19, x20, [sp, #16]
  40b224:	mov	x19, x0
  40b228:	add	x0, x21, #0x18
  40b22c:	str	x19, [sp, #64]
  40b230:	bl	412690 <hash_find_slot@@Base>
  40b234:	mov	x22, x0
  40b238:	ldr	x20, [x0]
  40b23c:	cbz	x20, 40b264 <undefine_default_variables@@Base+0x4bc>
  40b240:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40b244:	ldr	x0, [x0, #72]
  40b248:	cmp	x0, x20
  40b24c:	b.eq	40b264 <undefine_default_variables@@Base+0x4bc>  // b.none
  40b250:	mov	x0, x20
  40b254:	ldp	x19, x20, [sp, #16]
  40b258:	ldp	x21, x22, [sp, #32]
  40b25c:	ldp	x29, x30, [sp], #320
  40b260:	ret
  40b264:	mov	x0, x19
  40b268:	str	x23, [sp, #48]
  40b26c:	bl	406680 <strlen@plt>
  40b270:	mov	x23, x0
  40b274:	mov	x0, #0x10                  	// #16
  40b278:	bl	41ab28 <xmalloc@@Base>
  40b27c:	mov	x20, x0
  40b280:	mov	x1, x23
  40b284:	mov	x0, x19
  40b288:	bl	424a48 <strcache_add_len@@Base>
  40b28c:	mov	x2, x22
  40b290:	mov	x1, x20
  40b294:	str	x0, [x20]
  40b298:	add	x0, x21, #0x18
  40b29c:	bl	412b18 <hash_insert_at@@Base>
  40b2a0:	b	40b2b4 <undefine_default_variables@@Base+0x50c>
  40b2a4:	bl	406d70 <__errno_location@plt>
  40b2a8:	ldr	w1, [x0]
  40b2ac:	cmp	w1, #0x4
  40b2b0:	b.ne	40b31c <undefine_default_variables@@Base+0x574>  // b.any
  40b2b4:	add	x2, sp, #0xc0
  40b2b8:	mov	x1, x19
  40b2bc:	mov	w0, #0x0                   	// #0
  40b2c0:	bl	406d90 <__xstat@plt>
  40b2c4:	cmn	w0, #0x1
  40b2c8:	b.eq	40b2a4 <undefine_default_variables@@Base+0x4fc>  // b.none
  40b2cc:	tbnz	w0, #31, 40b31c <undefine_default_variables@@Base+0x574>
  40b2d0:	ldr	q0, [sp, #192]
  40b2d4:	add	x1, sp, #0x50
  40b2d8:	add	x0, x21, #0x70
  40b2dc:	str	q0, [sp, #80]
  40b2e0:	bl	412690 <hash_find_slot@@Base>
  40b2e4:	mov	x23, x0
  40b2e8:	ldr	x22, [x0]
  40b2ec:	cbz	x22, 40b338 <undefine_default_variables@@Base+0x590>
  40b2f0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40b2f4:	ldr	x0, [x0, #72]
  40b2f8:	cmp	x0, x22
  40b2fc:	b.eq	40b338 <undefine_default_variables@@Base+0x590>  // b.none
  40b300:	ldr	x23, [sp, #48]
  40b304:	str	x22, [x20, #8]
  40b308:	mov	x0, x20
  40b30c:	ldp	x19, x20, [sp, #16]
  40b310:	ldp	x21, x22, [sp, #32]
  40b314:	ldp	x29, x30, [sp], #320
  40b318:	ret
  40b31c:	ldr	x23, [sp, #48]
  40b320:	str	xzr, [x20, #8]
  40b324:	mov	x0, x20
  40b328:	ldp	x19, x20, [sp, #16]
  40b32c:	ldp	x21, x22, [sp, #32]
  40b330:	ldp	x29, x30, [sp], #320
  40b334:	ret
  40b338:	mov	x0, #0x70                  	// #112
  40b33c:	bl	41ab28 <xmalloc@@Base>
  40b340:	ldr	q0, [sp, #192]
  40b344:	mov	x22, x0
  40b348:	mov	x2, x23
  40b34c:	mov	x1, x0
  40b350:	add	x0, x21, #0x70
  40b354:	str	q0, [x22]
  40b358:	bl	412b18 <hash_insert_at@@Base>
  40b35c:	bl	406d70 <__errno_location@plt>
  40b360:	mov	x23, x0
  40b364:	b	40b374 <undefine_default_variables@@Base+0x5cc>
  40b368:	ldr	w0, [x23]
  40b36c:	cmp	w0, #0x4
  40b370:	b.ne	40b3d0 <undefine_default_variables@@Base+0x628>  // b.any
  40b374:	str	wzr, [x23]
  40b378:	mov	x0, x19
  40b37c:	bl	406760 <opendir@plt>
  40b380:	str	x0, [x22, #104]
  40b384:	cbz	x0, 40b368 <undefine_default_variables@@Base+0x5c0>
  40b388:	add	x0, x22, #0x10
  40b38c:	adrp	x4, 40a000 <set_file_variables@@Base+0x370>
  40b390:	adrp	x3, 40b000 <undefine_default_variables@@Base+0x258>
  40b394:	add	x4, x4, #0xfc0
  40b398:	add	x3, x3, #0x440
  40b39c:	adrp	x2, 40a000 <set_file_variables@@Base+0x370>
  40b3a0:	mov	x1, #0x6b                  	// #107
  40b3a4:	add	x2, x2, #0xe40
  40b3a8:	bl	4125d8 <hash_init@@Base>
  40b3ac:	ldr	w0, [x21, #16]
  40b3b0:	add	w0, w0, #0x1
  40b3b4:	str	w0, [x21, #16]
  40b3b8:	cmp	w0, #0xa
  40b3bc:	b.ne	40b300 <undefine_default_variables@@Base+0x558>  // b.any
  40b3c0:	mov	x0, x22
  40b3c4:	mov	x1, #0x0                   	// #0
  40b3c8:	bl	40aff0 <undefine_default_variables@@Base+0x248>
  40b3cc:	b	40b300 <undefine_default_variables@@Base+0x558>
  40b3d0:	str	xzr, [x22, #16]
  40b3d4:	b	40b300 <undefine_default_variables@@Base+0x558>
  40b3d8:	stp	x29, x30, [sp, #-32]!
  40b3dc:	mov	x29, sp
  40b3e0:	bl	40b208 <undefine_default_variables@@Base+0x460>
  40b3e4:	ldr	x2, [x0, #8]
  40b3e8:	cbz	x2, 40b434 <undefine_default_variables@@Base+0x68c>
  40b3ec:	str	x19, [sp, #16]
  40b3f0:	mov	x19, x0
  40b3f4:	ldr	x0, [x2, #16]
  40b3f8:	cbz	x0, 40b428 <undefine_default_variables@@Base+0x680>
  40b3fc:	mov	x1, #0x0                   	// #0
  40b400:	mov	x0, x2
  40b404:	bl	40aff0 <undefine_default_variables@@Base+0x248>
  40b408:	mov	x0, #0x10                  	// #16
  40b40c:	bl	41ab28 <xmalloc@@Base>
  40b410:	ldr	x1, [x19, #8]
  40b414:	ldr	x19, [sp, #16]
  40b418:	ldr	x2, [x1, #16]
  40b41c:	stp	x1, x2, [x0]
  40b420:	ldp	x29, x30, [sp], #32
  40b424:	ret
  40b428:	ldr	x19, [sp, #16]
  40b42c:	ldp	x29, x30, [sp], #32
  40b430:	ret
  40b434:	mov	x0, #0x0                   	// #0
  40b438:	b	40b420 <undefine_default_variables@@Base+0x678>
  40b43c:	nop
  40b440:	mov	x0, #0x0                   	// #0
  40b444:	ret

000000000040b448 <dir_file_exists_p@@Base>:
  40b448:	stp	x29, x30, [sp, #-32]!
  40b44c:	mov	x29, sp
  40b450:	str	x19, [sp, #16]
  40b454:	mov	x19, x1
  40b458:	bl	40b208 <undefine_default_variables@@Base+0x460>
  40b45c:	mov	x1, x19
  40b460:	ldr	x19, [sp, #16]
  40b464:	ldp	x29, x30, [sp], #32
  40b468:	ldr	x0, [x0, #8]
  40b46c:	b	40aff0 <undefine_default_variables@@Base+0x248>

000000000040b470 <file_exists_p@@Base>:
  40b470:	stp	x29, x30, [sp, #-48]!
  40b474:	mov	x29, sp
  40b478:	stp	x19, x20, [sp, #16]
  40b47c:	mov	x19, x0
  40b480:	str	x21, [sp, #32]
  40b484:	bl	408bd0 <ar_name@@Base>
  40b488:	cbnz	w0, 40b508 <file_exists_p@@Base+0x98>
  40b48c:	mov	x0, x19
  40b490:	mov	w1, #0x2f                  	// #47
  40b494:	bl	406a70 <strrchr@plt>
  40b498:	mov	x20, x0
  40b49c:	cbz	x0, 40b52c <file_exists_p@@Base+0xbc>
  40b4a0:	cmp	x19, x0
  40b4a4:	b.eq	40b4fc <file_exists_p@@Base+0x8c>  // b.none
  40b4a8:	sub	x21, x0, x19
  40b4ac:	mov	x1, x19
  40b4b0:	add	x0, x21, #0x10
  40b4b4:	mov	x2, x21
  40b4b8:	and	x0, x0, #0xfffffffffffffff0
  40b4bc:	sub	sp, sp, x0
  40b4c0:	mov	x3, sp
  40b4c4:	mov	x0, x3
  40b4c8:	bl	406640 <memcpy@plt>
  40b4cc:	mov	x3, x0
  40b4d0:	strb	wzr, [x0, x21]
  40b4d4:	mov	x0, x3
  40b4d8:	bl	40b208 <undefine_default_variables@@Base+0x460>
  40b4dc:	ldr	x0, [x0, #8]
  40b4e0:	add	x1, x20, #0x1
  40b4e4:	bl	40aff0 <undefine_default_variables@@Base+0x248>
  40b4e8:	mov	sp, x29
  40b4ec:	ldp	x19, x20, [sp, #16]
  40b4f0:	ldr	x21, [sp, #32]
  40b4f4:	ldp	x29, x30, [sp], #48
  40b4f8:	ret
  40b4fc:	adrp	x3, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40b500:	add	x3, x3, #0x428
  40b504:	b	40b4d4 <file_exists_p@@Base+0x64>
  40b508:	mov	x0, x19
  40b50c:	bl	408cd8 <ar_member_date@@Base>
  40b510:	mov	sp, x29
  40b514:	cmn	x0, #0x1
  40b518:	cset	w0, ne  // ne = any
  40b51c:	ldp	x19, x20, [sp, #16]
  40b520:	ldr	x21, [sp, #32]
  40b524:	ldp	x29, x30, [sp], #48
  40b528:	ret
  40b52c:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40b530:	add	x0, x0, #0x690
  40b534:	bl	40b208 <undefine_default_variables@@Base+0x460>
  40b538:	ldr	x0, [x0, #8]
  40b53c:	mov	x1, x19
  40b540:	bl	40aff0 <undefine_default_variables@@Base+0x248>
  40b544:	b	40b4e8 <file_exists_p@@Base+0x78>

000000000040b548 <file_impossible@@Base>:
  40b548:	stp	x29, x30, [sp, #-48]!
  40b54c:	mov	w1, #0x2f                  	// #47
  40b550:	mov	x29, sp
  40b554:	stp	x19, x20, [sp, #16]
  40b558:	mov	x19, x0
  40b55c:	str	x21, [sp, #32]
  40b560:	bl	406a70 <strrchr@plt>
  40b564:	cbz	x0, 40b660 <file_impossible@@Base+0x118>
  40b568:	mov	x20, x0
  40b56c:	cmp	x19, x0
  40b570:	b.eq	40b614 <file_impossible@@Base+0xcc>  // b.none
  40b574:	sub	x21, x0, x19
  40b578:	mov	x1, x19
  40b57c:	add	x0, x21, #0x10
  40b580:	mov	x2, x21
  40b584:	and	x0, x0, #0xfffffffffffffff0
  40b588:	sub	sp, sp, x0
  40b58c:	mov	x3, sp
  40b590:	mov	x0, x3
  40b594:	bl	406640 <memcpy@plt>
  40b598:	mov	x3, x0
  40b59c:	strb	wzr, [x0, x21]
  40b5a0:	mov	x0, x3
  40b5a4:	add	x19, x20, #0x1
  40b5a8:	bl	40b208 <undefine_default_variables@@Base+0x460>
  40b5ac:	mov	x21, x0
  40b5b0:	ldr	x0, [x21, #8]
  40b5b4:	cbz	x0, 40b620 <file_impossible@@Base+0xd8>
  40b5b8:	ldr	x1, [x0, #16]
  40b5bc:	cbz	x1, 40b638 <file_impossible@@Base+0xf0>
  40b5c0:	mov	x0, #0x18                  	// #24
  40b5c4:	bl	41ab28 <xmalloc@@Base>
  40b5c8:	mov	x20, x0
  40b5cc:	mov	x0, x19
  40b5d0:	bl	406680 <strlen@plt>
  40b5d4:	mov	x1, x0
  40b5d8:	mov	x0, x19
  40b5dc:	str	x1, [x20, #8]
  40b5e0:	bl	424a48 <strcache_add_len@@Base>
  40b5e4:	ldr	x2, [x21, #8]
  40b5e8:	mov	w3, #0x1                   	// #1
  40b5ec:	str	x0, [x20]
  40b5f0:	mov	x1, x20
  40b5f4:	strh	w3, [x20, #16]
  40b5f8:	add	x0, x2, #0x10
  40b5fc:	bl	412980 <hash_insert@@Base>
  40b600:	mov	sp, x29
  40b604:	ldp	x19, x20, [sp, #16]
  40b608:	ldr	x21, [sp, #32]
  40b60c:	ldp	x29, x30, [sp], #48
  40b610:	ret
  40b614:	adrp	x3, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40b618:	add	x3, x3, #0x428
  40b61c:	b	40b5a0 <file_impossible@@Base+0x58>
  40b620:	mov	x0, #0x70                  	// #112
  40b624:	bl	41ab50 <xcalloc@@Base>
  40b628:	ldr	x1, [x0, #16]
  40b62c:	str	x0, [x21, #8]
  40b630:	cbnz	x1, 40b5c0 <file_impossible@@Base+0x78>
  40b634:	nop
  40b638:	add	x0, x0, #0x10
  40b63c:	adrp	x4, 40a000 <set_file_variables@@Base+0x370>
  40b640:	adrp	x3, 40b000 <undefine_default_variables@@Base+0x258>
  40b644:	add	x4, x4, #0xfc0
  40b648:	add	x3, x3, #0x440
  40b64c:	adrp	x2, 40a000 <set_file_variables@@Base+0x370>
  40b650:	mov	x1, #0x6b                  	// #107
  40b654:	add	x2, x2, #0xe40
  40b658:	bl	4125d8 <hash_init@@Base>
  40b65c:	b	40b5c0 <file_impossible@@Base+0x78>
  40b660:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40b664:	add	x0, x0, #0x690
  40b668:	bl	40b208 <undefine_default_variables@@Base+0x460>
  40b66c:	mov	x21, x0
  40b670:	b	40b5b0 <file_impossible@@Base+0x68>
  40b674:	nop

000000000040b678 <file_impossible_p@@Base>:
  40b678:	stp	x29, x30, [sp, #-80]!
  40b67c:	mov	w1, #0x2f                  	// #47
  40b680:	mov	x29, sp
  40b684:	stp	x19, x20, [sp, #16]
  40b688:	mov	x19, x0
  40b68c:	str	x21, [sp, #32]
  40b690:	bl	406a70 <strrchr@plt>
  40b694:	cbz	x0, 40b74c <file_impossible_p@@Base+0xd4>
  40b698:	mov	x20, x0
  40b69c:	cmp	x19, x0
  40b6a0:	b.eq	40b728 <file_impossible_p@@Base+0xb0>  // b.none
  40b6a4:	sub	x21, x0, x19
  40b6a8:	mov	x1, x19
  40b6ac:	add	x0, x21, #0x10
  40b6b0:	mov	x2, x21
  40b6b4:	and	x0, x0, #0xfffffffffffffff0
  40b6b8:	sub	sp, sp, x0
  40b6bc:	mov	x3, sp
  40b6c0:	mov	x0, x3
  40b6c4:	bl	406640 <memcpy@plt>
  40b6c8:	mov	x3, x0
  40b6cc:	strb	wzr, [x0, x21]
  40b6d0:	mov	x0, x3
  40b6d4:	add	x19, x20, #0x1
  40b6d8:	bl	40b208 <undefine_default_variables@@Base+0x460>
  40b6dc:	ldr	x20, [x0, #8]
  40b6e0:	cbz	x20, 40b734 <file_impossible_p@@Base+0xbc>
  40b6e4:	ldr	x0, [x20, #16]
  40b6e8:	cbz	x0, 40b734 <file_impossible_p@@Base+0xbc>
  40b6ec:	mov	x0, x19
  40b6f0:	str	x19, [x29, #56]
  40b6f4:	bl	406680 <strlen@plt>
  40b6f8:	mov	x2, x0
  40b6fc:	add	x1, x29, #0x38
  40b700:	add	x0, x20, #0x10
  40b704:	str	x2, [x29, #64]
  40b708:	bl	412950 <hash_find_item@@Base>
  40b70c:	cbz	x0, 40b734 <file_impossible_p@@Base+0xbc>
  40b710:	ldrsh	w0, [x0, #16]
  40b714:	mov	sp, x29
  40b718:	ldp	x19, x20, [sp, #16]
  40b71c:	ldr	x21, [sp, #32]
  40b720:	ldp	x29, x30, [sp], #80
  40b724:	ret
  40b728:	adrp	x3, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40b72c:	add	x3, x3, #0x428
  40b730:	b	40b6d0 <file_impossible_p@@Base+0x58>
  40b734:	mov	sp, x29
  40b738:	mov	w0, #0x0                   	// #0
  40b73c:	ldp	x19, x20, [sp, #16]
  40b740:	ldr	x21, [sp, #32]
  40b744:	ldp	x29, x30, [sp], #80
  40b748:	ret
  40b74c:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40b750:	add	x0, x0, #0x690
  40b754:	bl	40b208 <undefine_default_variables@@Base+0x460>
  40b758:	ldr	x20, [x0, #8]
  40b75c:	b	40b6e0 <file_impossible_p@@Base+0x68>

000000000040b760 <dir_name@@Base>:
  40b760:	stp	x29, x30, [sp, #-16]!
  40b764:	mov	x29, sp
  40b768:	bl	40b208 <undefine_default_variables@@Base+0x460>
  40b76c:	ldp	x29, x30, [sp], #16
  40b770:	ldr	x0, [x0]
  40b774:	ret

000000000040b778 <print_dir_data_base@@Base>:
  40b778:	stp	x29, x30, [sp, #-128]!
  40b77c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40b780:	add	x1, x1, #0x430
  40b784:	mov	w2, #0x5                   	// #5
  40b788:	mov	x29, sp
  40b78c:	mov	x0, #0x0                   	// #0
  40b790:	stp	x19, x20, [sp, #16]
  40b794:	stp	x23, x24, [sp, #48]
  40b798:	stp	x25, x26, [sp, #64]
  40b79c:	stp	x27, x28, [sp, #80]
  40b7a0:	bl	406cd0 <dcgettext@plt>
  40b7a4:	bl	406ae0 <puts@plt>
  40b7a8:	adrp	x27, 446000 <expanding_var@@Base+0x320>
  40b7ac:	add	x0, x27, #0x210
  40b7b0:	str	x0, [sp, #120]
  40b7b4:	ldr	x27, [x0, #24]
  40b7b8:	ldr	x20, [x0, #56]
  40b7bc:	add	x20, x27, x20, lsl #3
  40b7c0:	cmp	x27, x20
  40b7c4:	b.cs	40bad8 <print_dir_data_base@@Base+0x360>  // b.hs, b.nlast
  40b7c8:	adrp	x25, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40b7cc:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40b7d0:	add	x25, x25, #0x4c0
  40b7d4:	add	x0, x0, #0x498
  40b7d8:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40b7dc:	mov	w23, #0x0                   	// #0
  40b7e0:	mov	w26, #0x0                   	// #0
  40b7e4:	adrp	x24, 446000 <expanding_var@@Base+0x320>
  40b7e8:	stp	x21, x22, [sp, #32]
  40b7ec:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  40b7f0:	str	x0, [sp, #112]
  40b7f4:	add	x0, x28, #0x4d8
  40b7f8:	str	x0, [sp, #104]
  40b7fc:	nop
  40b800:	ldr	x28, [x27]
  40b804:	cbz	x28, 40b92c <print_dir_data_base@@Base+0x1b4>
  40b808:	ldr	x2, [x22, #72]
  40b80c:	cmp	x2, x28
  40b810:	b.eq	40b92c <print_dir_data_base@@Base+0x1b4>  // b.none
  40b814:	ldr	x1, [x28, #8]
  40b818:	cbz	x1, 40ba58 <print_dir_data_base@@Base+0x2e0>
  40b81c:	ldr	x0, [x1, #16]
  40b820:	cbz	x0, 40b9d4 <print_dir_data_base@@Base+0x25c>
  40b824:	ldr	x3, [x1, #48]
  40b828:	add	x3, x0, x3, lsl #3
  40b82c:	cmp	x0, x3
  40b830:	b.cs	40ba14 <print_dir_data_base@@Base+0x29c>  // b.hs, b.nlast
  40b834:	mov	w19, #0x0                   	// #0
  40b838:	mov	w21, #0x0                   	// #0
  40b83c:	b	40b850 <print_dir_data_base@@Base+0xd8>
  40b840:	add	w19, w19, #0x1
  40b844:	add	x0, x0, #0x8
  40b848:	cmp	x3, x0
  40b84c:	b.ls	40b878 <print_dir_data_base@@Base+0x100>  // b.plast
  40b850:	ldr	x1, [x0]
  40b854:	cmp	x1, #0x0
  40b858:	ccmp	x2, x1, #0x4, ne  // ne = any
  40b85c:	b.eq	40b844 <print_dir_data_base@@Base+0xcc>  // b.none
  40b860:	ldrsh	w1, [x1, #16]
  40b864:	cbnz	w1, 40b840 <print_dir_data_base@@Base+0xc8>
  40b868:	add	x0, x0, #0x8
  40b86c:	add	w21, w21, #0x1
  40b870:	cmp	x3, x0
  40b874:	b.hi	40b850 <print_dir_data_base@@Base+0xd8>  // b.pmore
  40b878:	ldr	x1, [sp, #112]
  40b87c:	mov	w2, #0x5                   	// #5
  40b880:	mov	x0, #0x0                   	// #0
  40b884:	add	w26, w26, w21
  40b888:	add	w23, w23, w19
  40b88c:	bl	406cd0 <dcgettext@plt>
  40b890:	ldp	x1, x3, [x28]
  40b894:	ldp	x2, x3, [x3]
  40b898:	bl	406d60 <printf@plt>
  40b89c:	cbz	w21, 40ba34 <print_dir_data_base@@Base+0x2bc>
  40b8a0:	mov	w1, w21
  40b8a4:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  40b8a8:	add	x21, x21, #0x1b8
  40b8ac:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  40b8b0:	add	x0, x0, #0xef0
  40b8b4:	bl	406d60 <printf@plt>
  40b8b8:	mov	x1, x25
  40b8bc:	mov	w2, #0x5                   	// #5
  40b8c0:	mov	x0, #0x0                   	// #0
  40b8c4:	bl	406cd0 <dcgettext@plt>
  40b8c8:	ldr	x1, [x21]
  40b8cc:	bl	406690 <fputs@plt>
  40b8d0:	cbnz	w19, 40ba00 <print_dir_data_base@@Base+0x288>
  40b8d4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40b8d8:	mov	w2, #0x5                   	// #5
  40b8dc:	add	x1, x1, #0x4d0
  40b8e0:	mov	x0, #0x0                   	// #0
  40b8e4:	bl	406cd0 <dcgettext@plt>
  40b8e8:	ldr	x1, [x21]
  40b8ec:	bl	406690 <fputs@plt>
  40b8f0:	ldr	x1, [sp, #104]
  40b8f4:	mov	w2, #0x5                   	// #5
  40b8f8:	mov	x0, #0x0                   	// #0
  40b8fc:	bl	406cd0 <dcgettext@plt>
  40b900:	ldr	x1, [x21]
  40b904:	bl	406690 <fputs@plt>
  40b908:	ldr	x0, [x28, #8]
  40b90c:	ldr	x0, [x0, #104]
  40b910:	cbz	x0, 40ba84 <print_dir_data_base@@Base+0x30c>
  40b914:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40b918:	add	x1, x1, #0x4f0
  40b91c:	mov	w2, #0x5                   	// #5
  40b920:	mov	x0, #0x0                   	// #0
  40b924:	bl	406cd0 <dcgettext@plt>
  40b928:	bl	406ae0 <puts@plt>
  40b92c:	add	x27, x27, #0x8
  40b930:	cmp	x20, x27
  40b934:	b.hi	40b800 <print_dir_data_base@@Base+0x88>  // b.pmore
  40b938:	ldr	x3, [x24, #440]
  40b93c:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40b940:	mov	x2, #0x3                   	// #3
  40b944:	add	x0, x0, #0x500
  40b948:	mov	x1, #0x1                   	// #1
  40b94c:	bl	406be0 <fwrite@plt>
  40b950:	cbz	w26, 40bab4 <print_dir_data_base@@Base+0x33c>
  40b954:	mov	w1, w26
  40b958:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  40b95c:	add	x0, x0, #0xef0
  40b960:	bl	406d60 <printf@plt>
  40b964:	ldp	x21, x22, [sp, #32]
  40b968:	mov	x1, x25
  40b96c:	mov	w2, #0x5                   	// #5
  40b970:	mov	x0, #0x0                   	// #0
  40b974:	bl	406cd0 <dcgettext@plt>
  40b978:	ldr	x1, [x24, #440]
  40b97c:	bl	406690 <fputs@plt>
  40b980:	cbnz	w23, 40baa0 <print_dir_data_base@@Base+0x328>
  40b984:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40b988:	mov	w2, #0x5                   	// #5
  40b98c:	add	x1, x1, #0x4d0
  40b990:	mov	x0, #0x0                   	// #0
  40b994:	bl	406cd0 <dcgettext@plt>
  40b998:	ldr	x1, [x24, #440]
  40b99c:	bl	406690 <fputs@plt>
  40b9a0:	mov	w2, #0x5                   	// #5
  40b9a4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40b9a8:	mov	x0, #0x0                   	// #0
  40b9ac:	add	x1, x1, #0x508
  40b9b0:	bl	406cd0 <dcgettext@plt>
  40b9b4:	ldr	x1, [sp, #120]
  40b9b8:	ldp	x19, x20, [sp, #16]
  40b9bc:	ldp	x23, x24, [sp, #48]
  40b9c0:	ldp	x25, x26, [sp, #64]
  40b9c4:	ldr	x1, [x1, #72]
  40b9c8:	ldp	x27, x28, [sp, #80]
  40b9cc:	ldp	x29, x30, [sp], #128
  40b9d0:	b	406d60 <printf@plt>
  40b9d4:	mov	w2, #0x5                   	// #5
  40b9d8:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40b9dc:	add	x1, x1, #0x460
  40b9e0:	bl	406cd0 <dcgettext@plt>
  40b9e4:	ldp	x1, x3, [x28]
  40b9e8:	add	x27, x27, #0x8
  40b9ec:	ldp	x2, x3, [x3]
  40b9f0:	bl	406d60 <printf@plt>
  40b9f4:	cmp	x20, x27
  40b9f8:	b.hi	40b800 <print_dir_data_base@@Base+0x88>  // b.pmore
  40b9fc:	b	40b938 <print_dir_data_base@@Base+0x1c0>
  40ba00:	mov	w1, w19
  40ba04:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  40ba08:	add	x0, x0, #0xef0
  40ba0c:	bl	406d60 <printf@plt>
  40ba10:	b	40b8f0 <print_dir_data_base@@Base+0x178>
  40ba14:	ldr	x1, [sp, #112]
  40ba18:	mov	w2, #0x5                   	// #5
  40ba1c:	mov	x0, #0x0                   	// #0
  40ba20:	mov	w19, #0x0                   	// #0
  40ba24:	bl	406cd0 <dcgettext@plt>
  40ba28:	ldp	x1, x3, [x28]
  40ba2c:	ldp	x2, x3, [x3]
  40ba30:	bl	406d60 <printf@plt>
  40ba34:	mov	w2, #0x5                   	// #5
  40ba38:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ba3c:	mov	x0, #0x0                   	// #0
  40ba40:	add	x1, x1, #0x4b8
  40ba44:	bl	406cd0 <dcgettext@plt>
  40ba48:	add	x21, x24, #0x1b8
  40ba4c:	ldr	x1, [x24, #440]
  40ba50:	bl	406690 <fputs@plt>
  40ba54:	b	40b8b8 <print_dir_data_base@@Base+0x140>
  40ba58:	mov	w2, #0x5                   	// #5
  40ba5c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ba60:	mov	x0, #0x0                   	// #0
  40ba64:	add	x1, x1, #0x440
  40ba68:	bl	406cd0 <dcgettext@plt>
  40ba6c:	add	x27, x27, #0x8
  40ba70:	ldr	x1, [x28]
  40ba74:	bl	406d60 <printf@plt>
  40ba78:	cmp	x20, x27
  40ba7c:	b.hi	40b800 <print_dir_data_base@@Base+0x88>  // b.pmore
  40ba80:	b	40b938 <print_dir_data_base@@Base+0x1c0>
  40ba84:	add	x27, x27, #0x8
  40ba88:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ba8c:	add	x0, x0, #0x690
  40ba90:	bl	406ae0 <puts@plt>
  40ba94:	cmp	x20, x27
  40ba98:	b.hi	40b800 <print_dir_data_base@@Base+0x88>  // b.pmore
  40ba9c:	b	40b938 <print_dir_data_base@@Base+0x1c0>
  40baa0:	mov	w1, w23
  40baa4:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  40baa8:	add	x0, x0, #0xef0
  40baac:	bl	406d60 <printf@plt>
  40bab0:	b	40b9a0 <print_dir_data_base@@Base+0x228>
  40bab4:	ldp	x21, x22, [sp, #32]
  40bab8:	mov	w2, #0x5                   	// #5
  40babc:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40bac0:	mov	x0, #0x0                   	// #0
  40bac4:	add	x1, x1, #0x4b8
  40bac8:	bl	406cd0 <dcgettext@plt>
  40bacc:	ldr	x1, [x24, #440]
  40bad0:	bl	406690 <fputs@plt>
  40bad4:	b	40b968 <print_dir_data_base@@Base+0x1f0>
  40bad8:	adrp	x24, 446000 <expanding_var@@Base+0x320>
  40badc:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40bae0:	mov	x2, #0x3                   	// #3
  40bae4:	add	x0, x0, #0x500
  40bae8:	ldr	x3, [x24, #440]
  40baec:	mov	x1, #0x1                   	// #1
  40baf0:	adrp	x25, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40baf4:	mov	w23, #0x0                   	// #0
  40baf8:	add	x25, x25, #0x4c0
  40bafc:	bl	406be0 <fwrite@plt>
  40bb00:	b	40bab8 <print_dir_data_base@@Base+0x340>
  40bb04:	nop

000000000040bb08 <dir_setup_glob@@Base>:
  40bb08:	adrp	x1, 40b000 <undefine_default_variables@@Base+0x258>
  40bb0c:	adrp	x4, 40a000 <set_file_variables@@Base+0x370>
  40bb10:	add	x3, x1, #0x3d8
  40bb14:	add	x4, x4, #0xe80
  40bb18:	adrp	x5, 406000 <memcpy@plt-0x640>
  40bb1c:	adrp	x2, 428000 <jobserver_clear@@Base+0x20>
  40bb20:	add	x5, x5, #0xb90
  40bb24:	add	x2, x2, #0xef8
  40bb28:	adrp	x1, 428000 <jobserver_clear@@Base+0x20>
  40bb2c:	add	x1, x1, #0xee8
  40bb30:	str	xzr, [x0, #16]
  40bb34:	stp	x5, x4, [x0, #32]
  40bb38:	stp	x3, x2, [x0, #48]
  40bb3c:	str	x1, [x0, #64]
  40bb40:	ret
  40bb44:	nop

000000000040bb48 <hash_init_directories@@Base>:
  40bb48:	stp	x29, x30, [sp, #-32]!
  40bb4c:	mov	x1, #0xc7                  	// #199
  40bb50:	adrp	x4, 40a000 <set_file_variables@@Base+0x370>
  40bb54:	mov	x29, sp
  40bb58:	str	x19, [sp, #16]
  40bb5c:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  40bb60:	add	x19, x19, #0x210
  40bb64:	add	x4, x4, #0xe20
  40bb68:	add	x0, x19, #0x18
  40bb6c:	adrp	x3, 40a000 <set_file_variables@@Base+0x370>
  40bb70:	adrp	x2, 40a000 <set_file_variables@@Base+0x370>
  40bb74:	add	x3, x3, #0xe18
  40bb78:	add	x2, x2, #0xe60
  40bb7c:	bl	4125d8 <hash_init@@Base>
  40bb80:	add	x0, x19, #0x70
  40bb84:	adrp	x4, 40a000 <set_file_variables@@Base+0x370>
  40bb88:	ldr	x19, [sp, #16]
  40bb8c:	add	x4, x4, #0xf80
  40bb90:	ldp	x29, x30, [sp], #32
  40bb94:	adrp	x3, 40a000 <set_file_variables@@Base+0x370>
  40bb98:	adrp	x2, 40a000 <set_file_variables@@Base+0x370>
  40bb9c:	add	x3, x3, #0xe08
  40bba0:	add	x2, x2, #0xdf8
  40bba4:	mov	x1, #0xc7                  	// #199
  40bba8:	b	4125d8 <hash_init@@Base>
  40bbac:	nop

000000000040bbb0 <variable_buffer_output@@Base>:
  40bbb0:	stp	x29, x30, [sp, #-48]!
  40bbb4:	mov	x3, x0
  40bbb8:	adrp	x4, 446000 <expanding_var@@Base+0x320>
  40bbbc:	mov	x29, sp
  40bbc0:	stp	x21, x22, [sp, #32]
  40bbc4:	adrp	x22, 449000 <commands_started@@Base+0x170>
  40bbc8:	ldr	x0, [x22, #2000]
  40bbcc:	stp	x19, x20, [sp, #16]
  40bbd0:	mov	x19, x2
  40bbd4:	sub	x21, x3, x0
  40bbd8:	mov	x20, x1
  40bbdc:	ldr	x2, [x4, #728]
  40bbe0:	add	x1, x21, x19
  40bbe4:	add	x5, x1, #0x5
  40bbe8:	cmp	x5, x2
  40bbec:	b.hi	40bc14 <variable_buffer_output@@Base+0x64>  // b.pmore
  40bbf0:	mov	x1, x20
  40bbf4:	mov	x2, x19
  40bbf8:	mov	x0, x3
  40bbfc:	bl	406640 <memcpy@plt>
  40bc00:	add	x0, x0, x19
  40bc04:	ldp	x19, x20, [sp, #16]
  40bc08:	ldp	x21, x22, [sp, #32]
  40bc0c:	ldp	x29, x30, [sp], #48
  40bc10:	ret
  40bc14:	lsl	x2, x2, #1
  40bc18:	add	x1, x1, #0x64
  40bc1c:	cmp	x2, x1
  40bc20:	csel	x1, x2, x1, cs  // cs = hs, nlast
  40bc24:	str	x1, [x4, #728]
  40bc28:	bl	41ab78 <xrealloc@@Base>
  40bc2c:	add	x3, x0, x21
  40bc30:	str	x0, [x22, #2000]
  40bc34:	b	40bbf0 <variable_buffer_output@@Base+0x40>

000000000040bc38 <expand_argument@@Base>:
  40bc38:	stp	x29, x30, [sp, #-80]!
  40bc3c:	mov	x2, x1
  40bc40:	cmp	x0, x1
  40bc44:	mov	x29, sp
  40bc48:	stp	x19, x20, [sp, #16]
  40bc4c:	stp	x21, x22, [sp, #32]
  40bc50:	str	x23, [sp, #48]
  40bc54:	b.eq	40bd50 <expand_argument@@Base+0x118>  // b.none
  40bc58:	mov	x1, x0
  40bc5c:	cbz	x2, 40bcf0 <expand_argument@@Base+0xb8>
  40bc60:	ldrb	w0, [x2]
  40bc64:	cbz	w0, 40bcf0 <expand_argument@@Base+0xb8>
  40bc68:	sub	x19, x2, x1
  40bc6c:	cmp	x19, #0x3e7
  40bc70:	add	x0, x19, #0x1
  40bc74:	b.gt	40bd38 <expand_argument@@Base+0x100>
  40bc78:	add	x0, x19, #0x10
  40bc7c:	mov	x22, #0x0                   	// #0
  40bc80:	and	x0, x0, #0xfffffffffffffff0
  40bc84:	sub	sp, sp, x0
  40bc88:	mov	x3, sp
  40bc8c:	mov	x2, x19
  40bc90:	adrp	x20, 449000 <commands_started@@Base+0x170>
  40bc94:	mov	x0, x3
  40bc98:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  40bc9c:	bl	406640 <memcpy@plt>
  40bca0:	mov	x1, x0
  40bca4:	strb	wzr, [x0, x19]
  40bca8:	mov	x2, #0xffffffffffffffff    	// #-1
  40bcac:	ldr	x19, [x21, #728]
  40bcb0:	mov	x0, #0x0                   	// #0
  40bcb4:	ldr	x23, [x20, #2000]
  40bcb8:	str	xzr, [x20, #2000]
  40bcbc:	bl	40bd68 <variable_expand_string@@Base>
  40bcc0:	str	x19, [x21, #728]
  40bcc4:	str	x23, [x20, #2000]
  40bcc8:	mov	x19, x0
  40bccc:	mov	x0, x22
  40bcd0:	bl	406b90 <free@plt>
  40bcd4:	mov	sp, x29
  40bcd8:	mov	x0, x19
  40bcdc:	ldp	x19, x20, [sp, #16]
  40bce0:	ldp	x21, x22, [sp, #32]
  40bce4:	ldr	x23, [sp, #48]
  40bce8:	ldp	x29, x30, [sp], #80
  40bcec:	ret
  40bcf0:	adrp	x19, 449000 <commands_started@@Base+0x170>
  40bcf4:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  40bcf8:	mov	x2, #0xffffffffffffffff    	// #-1
  40bcfc:	mov	x0, #0x0                   	// #0
  40bd00:	ldr	x22, [x19, #2000]
  40bd04:	str	xzr, [x19, #2000]
  40bd08:	ldr	x21, [x20, #728]
  40bd0c:	bl	40bd68 <variable_expand_string@@Base>
  40bd10:	str	x22, [x19, #2000]
  40bd14:	mov	x19, x0
  40bd18:	str	x21, [x20, #728]
  40bd1c:	mov	x0, x19
  40bd20:	mov	sp, x29
  40bd24:	ldp	x19, x20, [sp, #16]
  40bd28:	ldp	x21, x22, [sp, #32]
  40bd2c:	ldr	x23, [sp, #48]
  40bd30:	ldp	x29, x30, [sp], #80
  40bd34:	ret
  40bd38:	str	x1, [x29, #72]
  40bd3c:	bl	41ab28 <xmalloc@@Base>
  40bd40:	mov	x3, x0
  40bd44:	mov	x22, x0
  40bd48:	ldr	x1, [x29, #72]
  40bd4c:	b	40bc8c <expand_argument@@Base+0x54>
  40bd50:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x40e0>
  40bd54:	add	x0, x0, #0xed0
  40bd58:	bl	41abb0 <xstrdup@@Base>
  40bd5c:	mov	x19, x0
  40bd60:	b	40bcd4 <expand_argument@@Base+0x9c>
  40bd64:	nop

000000000040bd68 <variable_expand_string@@Base>:
  40bd68:	stp	x29, x30, [sp, #-176]!
  40bd6c:	mov	x29, sp
  40bd70:	stp	x19, x20, [sp, #16]
  40bd74:	mov	x19, x0
  40bd78:	adrp	x0, 449000 <commands_started@@Base+0x170>
  40bd7c:	stp	x21, x22, [sp, #32]
  40bd80:	mov	x20, x1
  40bd84:	mov	x1, x2
  40bd88:	stp	x23, x24, [sp, #48]
  40bd8c:	stp	x25, x26, [sp, #64]
  40bd90:	stp	x27, x28, [sp, #80]
  40bd94:	ldr	x0, [x0, #2000]
  40bd98:	cbz	x19, 40c50c <variable_expand_string@@Base+0x7a4>
  40bd9c:	sub	x2, x19, x0
  40bda0:	adrp	x23, 446000 <expanding_var@@Base+0x320>
  40bda4:	str	x2, [x29, #136]
  40bda8:	cbz	x1, 40c40c <variable_expand_string@@Base+0x6a4>
  40bdac:	mov	x0, x20
  40bdb0:	cmn	x1, #0x1
  40bdb4:	b.eq	40c398 <variable_expand_string@@Base+0x630>  // b.none
  40bdb8:	bl	41abd0 <xstrndup@@Base>
  40bdbc:	mov	x20, x0
  40bdc0:	str	x0, [x29, #144]
  40bdc4:	adrp	x26, 449000 <commands_started@@Base+0x170>
  40bdc8:	add	x0, x26, #0x860
  40bdcc:	adrp	x22, 449000 <commands_started@@Base+0x170>
  40bdd0:	mov	w1, #0x24                  	// #36
  40bdd4:	ldr	x21, [x23, #728]
  40bdd8:	add	x22, x22, #0x7d0
  40bddc:	str	x0, [x29, #128]
  40bde0:	mov	x0, x20
  40bde4:	bl	406bb0 <strchr@plt>
  40bde8:	mov	x25, x0
  40bdec:	sub	x28, x0, x20
  40bdf0:	cbz	x0, 40be8c <variable_expand_string@@Base+0x124>
  40bdf4:	nop
  40bdf8:	ldr	x0, [x22]
  40bdfc:	sub	x24, x19, x0
  40be00:	add	x2, x28, x24
  40be04:	add	x1, x2, #0x5
  40be08:	cmp	x1, x21
  40be0c:	b.hi	40beb0 <variable_expand_string@@Base+0x148>  // b.pmore
  40be10:	mov	x0, x19
  40be14:	mov	x1, x20
  40be18:	mov	x2, x28
  40be1c:	add	x19, x19, x28
  40be20:	bl	406640 <memcpy@plt>
  40be24:	cbz	x25, 40bee8 <variable_expand_string@@Base+0x180>
  40be28:	ldrb	w24, [x25, #1]
  40be2c:	add	x20, x25, #0x1
  40be30:	cmp	w24, #0x28
  40be34:	b.eq	40c01c <variable_expand_string@@Base+0x2b4>  // b.none
  40be38:	b.hi	40bf40 <variable_expand_string@@Base+0x1d8>  // b.pmore
  40be3c:	cbz	w24, 40be48 <variable_expand_string@@Base+0xe0>
  40be40:	cmp	w24, #0x24
  40be44:	b.ne	40bf48 <variable_expand_string@@Base+0x1e0>  // b.any
  40be48:	ldr	x0, [x22]
  40be4c:	ldr	x21, [x23, #728]
  40be50:	sub	x28, x19, x0
  40be54:	add	x1, x28, #0x6
  40be58:	cmp	x1, x21
  40be5c:	b.hi	40c28c <variable_expand_string@@Base+0x524>  // b.pmore
  40be60:	ldrb	w0, [x25]
  40be64:	strb	w0, [x19], #1
  40be68:	ldrb	w24, [x25, #1]
  40be6c:	cbz	w24, 40beec <variable_expand_string@@Base+0x184>
  40be70:	add	x20, x20, #0x1
  40be74:	mov	w1, #0x24                  	// #36
  40be78:	mov	x0, x20
  40be7c:	bl	406bb0 <strchr@plt>
  40be80:	mov	x25, x0
  40be84:	sub	x28, x0, x20
  40be88:	cbnz	x0, 40bdf8 <variable_expand_string@@Base+0x90>
  40be8c:	mov	x0, x20
  40be90:	bl	406680 <strlen@plt>
  40be94:	add	x28, x0, #0x1
  40be98:	ldr	x0, [x22]
  40be9c:	sub	x24, x19, x0
  40bea0:	add	x2, x28, x24
  40bea4:	add	x1, x2, #0x5
  40bea8:	cmp	x1, x21
  40beac:	b.ls	40be10 <variable_expand_string@@Base+0xa8>  // b.plast
  40beb0:	add	x2, x2, #0x64
  40beb4:	lsl	x21, x21, #1
  40beb8:	cmp	x21, x2
  40bebc:	csel	x1, x21, x2, cs  // cs = hs, nlast
  40bec0:	str	x1, [x23, #728]
  40bec4:	bl	41ab78 <xrealloc@@Base>
  40bec8:	add	x19, x0, x24
  40becc:	mov	x1, x20
  40bed0:	mov	x2, x28
  40bed4:	str	x0, [x22]
  40bed8:	mov	x0, x19
  40bedc:	add	x19, x19, x28
  40bee0:	bl	406640 <memcpy@plt>
  40bee4:	cbnz	x25, 40be28 <variable_expand_string@@Base+0xc0>
  40bee8:	ldr	x21, [x23, #728]
  40beec:	ldr	x0, [x29, #144]
  40bef0:	bl	406b90 <free@plt>
  40bef4:	adrp	x0, 449000 <commands_started@@Base+0x170>
  40bef8:	ldr	x0, [x0, #2000]
  40befc:	sub	x20, x19, x0
  40bf00:	add	x1, x20, #0x6
  40bf04:	cmp	x1, x21
  40bf08:	b.hi	40c3e4 <variable_expand_string@@Base+0x67c>  // b.pmore
  40bf0c:	adrp	x0, 449000 <commands_started@@Base+0x170>
  40bf10:	strb	wzr, [x19]
  40bf14:	ldr	x1, [x29, #136]
  40bf18:	ldr	x0, [x0, #2000]
  40bf1c:	mov	sp, x29
  40bf20:	add	x0, x0, x1
  40bf24:	ldp	x19, x20, [sp, #16]
  40bf28:	ldp	x21, x22, [sp, #32]
  40bf2c:	ldp	x23, x24, [sp, #48]
  40bf30:	ldp	x25, x26, [sp, #64]
  40bf34:	ldp	x27, x28, [sp, #80]
  40bf38:	ldp	x29, x30, [sp], #176
  40bf3c:	ret
  40bf40:	cmp	w24, #0x7b
  40bf44:	b.eq	40bfe4 <variable_expand_string@@Base+0x27c>  // b.none
  40bf48:	ldrb	w1, [x25]
  40bf4c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40bf50:	add	x0, x0, #0x4c0
  40bf54:	ldrh	w0, [x0, x1, lsl #1]
  40bf58:	tst	w0, #0x6
  40bf5c:	b.eq	40bf68 <variable_expand_string@@Base+0x200>  // b.none
  40bf60:	ldr	x21, [x23, #728]
  40bf64:	b	40be6c <variable_expand_string@@Base+0x104>
  40bf68:	mov	x0, x20
  40bf6c:	mov	x1, #0x1                   	// #1
  40bf70:	bl	4257c8 <lookup_variable@@Base>
  40bf74:	mov	x28, x0
  40bf78:	cbz	x0, 40c380 <variable_expand_string@@Base+0x618>
  40bf7c:	ldr	x26, [x0, #8]
  40bf80:	ldrb	w2, [x0, #44]
  40bf84:	ldrb	w1, [x26]
  40bf88:	and	w4, w2, #0x2
  40bf8c:	orr	w1, w1, w4
  40bf90:	cbz	w1, 40c38c <variable_expand_string@@Base+0x624>
  40bf94:	tbnz	w2, #0, 40c3d4 <variable_expand_string@@Base+0x66c>
  40bf98:	mov	x0, x26
  40bf9c:	bl	406680 <strlen@plt>
  40bfa0:	ldr	x6, [x22]
  40bfa4:	mov	x24, x0
  40bfa8:	ldr	x21, [x23, #728]
  40bfac:	sub	x27, x19, x6
  40bfb0:	add	x1, x0, x27
  40bfb4:	add	x0, x1, #0x5
  40bfb8:	cmp	x0, x21
  40bfbc:	b.hi	40c3a8 <variable_expand_string@@Base+0x640>  // b.pmore
  40bfc0:	mov	x0, x19
  40bfc4:	mov	x2, x24
  40bfc8:	mov	x1, x26
  40bfcc:	bl	406640 <memcpy@plt>
  40bfd0:	ldrb	w0, [x28, #44]
  40bfd4:	add	x19, x19, x24
  40bfd8:	tbnz	w0, #0, 40c320 <variable_expand_string@@Base+0x5b8>
  40bfdc:	ldrb	w24, [x25, #1]
  40bfe0:	b	40be6c <variable_expand_string@@Base+0x104>
  40bfe4:	mov	w28, #0x7d                  	// #125
  40bfe8:	mov	w7, w28
  40bfec:	add	x1, x29, #0xa0
  40bff0:	add	x0, x29, #0xa8
  40bff4:	str	w7, [x29, #152]
  40bff8:	stp	x20, x19, [x29, #160]
  40bffc:	bl	412000 <handle_function@@Base>
  40c000:	ldr	w7, [x29, #152]
  40c004:	mov	w21, w0
  40c008:	cbz	w0, 40c044 <variable_expand_string@@Base+0x2dc>
  40c00c:	ldp	x20, x19, [x29, #160]
  40c010:	ldr	x21, [x23, #728]
  40c014:	ldrb	w24, [x20]
  40c018:	b	40be6c <variable_expand_string@@Base+0x104>
  40c01c:	mov	w28, #0x29                  	// #41
  40c020:	mov	w7, w28
  40c024:	add	x1, x29, #0xa0
  40c028:	add	x0, x29, #0xa8
  40c02c:	str	w7, [x29, #152]
  40c030:	stp	x20, x19, [x29, #160]
  40c034:	bl	412000 <handle_function@@Base>
  40c038:	ldr	w7, [x29, #152]
  40c03c:	mov	w21, w0
  40c040:	cbnz	w0, 40c00c <variable_expand_string@@Base+0x2a4>
  40c044:	add	x27, x25, #0x2
  40c048:	mov	w1, w28
  40c04c:	mov	x0, x27
  40c050:	str	w7, [x29, #152]
  40c054:	bl	406bb0 <strchr@plt>
  40c058:	mov	x26, x0
  40c05c:	ldr	w7, [x29, #152]
  40c060:	cbz	x0, 40c57c <variable_expand_string@@Base+0x814>
  40c064:	mov	x1, x0
  40c068:	mov	w2, #0x24                  	// #36
  40c06c:	mov	x0, x27
  40c070:	mov	x20, x26
  40c074:	str	w7, [x29, #152]
  40c078:	bl	41abf0 <lindex@@Base>
  40c07c:	mov	x28, x0
  40c080:	cbnz	x0, 40c2b4 <variable_expand_string@@Base+0x54c>
  40c084:	mov	x1, x26
  40c088:	mov	x0, x27
  40c08c:	mov	w2, #0x3a                  	// #58
  40c090:	bl	41abf0 <lindex@@Base>
  40c094:	mov	x21, x0
  40c098:	cbz	x0, 40c1fc <variable_expand_string@@Base+0x494>
  40c09c:	add	x25, x0, #0x1
  40c0a0:	mov	x1, x26
  40c0a4:	mov	x0, x25
  40c0a8:	mov	w2, #0x3d                  	// #61
  40c0ac:	bl	41abf0 <lindex@@Base>
  40c0b0:	str	x0, [x29, #152]
  40c0b4:	cbz	x0, 40c1fc <variable_expand_string@@Base+0x494>
  40c0b8:	sub	x21, x21, x27
  40c0bc:	mov	x0, x27
  40c0c0:	mov	x1, x21
  40c0c4:	bl	4257c8 <lookup_variable@@Base>
  40c0c8:	mov	x7, x0
  40c0cc:	ldr	x3, [x29, #152]
  40c0d0:	cbz	x0, 40c330 <variable_expand_string@@Base+0x5c8>
  40c0d4:	ldr	x27, [x0, #8]
  40c0d8:	ldrb	w1, [x27]
  40c0dc:	cbz	w1, 40c1e8 <variable_expand_string@@Base+0x480>
  40c0e0:	ldrb	w1, [x7, #44]
  40c0e4:	tbnz	w1, #0, 40c520 <variable_expand_string@@Base+0x7b8>
  40c0e8:	sub	x2, x3, x25
  40c0ec:	add	x21, x3, #0x1
  40c0f0:	add	x0, x2, #0x11
  40c0f4:	sub	x6, x26, x21
  40c0f8:	and	x0, x0, #0xfffffffffffffff0
  40c0fc:	mov	w10, #0x25                  	// #37
  40c100:	sub	sp, sp, x0
  40c104:	mov	x1, x25
  40c108:	mov	x24, sp
  40c10c:	stp	x7, x6, [x29, #104]
  40c110:	mov	x26, x24
  40c114:	str	w10, [x29, #120]
  40c118:	str	x2, [x29, #152]
  40c11c:	strb	w10, [x26], #1
  40c120:	mov	x0, x26
  40c124:	bl	406640 <memcpy@plt>
  40c128:	ldr	x6, [x29, #112]
  40c12c:	mov	x1, x21
  40c130:	ldr	x2, [x29, #152]
  40c134:	add	x0, x6, #0x11
  40c138:	and	x0, x0, #0xfffffffffffffff0
  40c13c:	ldr	w10, [x29, #120]
  40c140:	sub	sp, sp, x0
  40c144:	str	x6, [x29, #152]
  40c148:	mov	x25, sp
  40c14c:	strb	wzr, [x26, x2]
  40c150:	mov	x21, x25
  40c154:	mov	x2, x6
  40c158:	strb	w10, [x21], #1
  40c15c:	mov	x0, x21
  40c160:	bl	406640 <memcpy@plt>
  40c164:	ldr	x6, [x29, #152]
  40c168:	mov	x0, x26
  40c16c:	strb	wzr, [x21, x6]
  40c170:	bl	41d7d8 <find_percent@@Base>
  40c174:	ldr	x7, [x29, #104]
  40c178:	cbz	x0, 40c1ac <variable_expand_string@@Base+0x444>
  40c17c:	add	x1, x0, #0x1
  40c180:	mov	x0, x21
  40c184:	str	x7, [x29, #120]
  40c188:	str	x1, [x29, #152]
  40c18c:	bl	41d7d8 <find_percent@@Base>
  40c190:	ldr	x7, [x29, #120]
  40c194:	ldr	x1, [x29, #152]
  40c198:	cbz	x0, 40c568 <variable_expand_string@@Base+0x800>
  40c19c:	mov	x25, x21
  40c1a0:	mov	x24, x26
  40c1a4:	add	x21, x0, #0x1
  40c1a8:	mov	x26, x1
  40c1ac:	mov	x0, x19
  40c1b0:	mov	x1, x27
  40c1b4:	mov	x5, x21
  40c1b8:	mov	x4, x26
  40c1bc:	mov	x3, x25
  40c1c0:	mov	x2, x24
  40c1c4:	str	x7, [x29, #152]
  40c1c8:	bl	411350 <patsubst_expand_pat@@Base>
  40c1cc:	ldr	x7, [x29, #152]
  40c1d0:	mov	x19, x0
  40c1d4:	ldrb	w1, [x7, #44]
  40c1d8:	tbz	w1, #0, 40c1e8 <variable_expand_string@@Base+0x480>
  40c1dc:	mov	x0, x27
  40c1e0:	bl	406b90 <free@plt>
  40c1e4:	nop
  40c1e8:	ldr	x21, [x23, #728]
  40c1ec:	mov	x0, x28
  40c1f0:	bl	406b90 <free@plt>
  40c1f4:	ldrb	w24, [x20]
  40c1f8:	b	40be6c <variable_expand_string@@Base+0x104>
  40c1fc:	sub	x21, x26, x27
  40c200:	mov	x0, x27
  40c204:	mov	x1, x21
  40c208:	bl	4257c8 <lookup_variable@@Base>
  40c20c:	mov	x26, x0
  40c210:	cbz	x0, 40c330 <variable_expand_string@@Base+0x5c8>
  40c214:	ldr	x25, [x0, #8]
  40c218:	ldrb	w2, [x0, #44]
  40c21c:	ldrb	w1, [x25]
  40c220:	and	w5, w2, #0x2
  40c224:	orr	w1, w1, w5
  40c228:	cbz	w1, 40c1e8 <variable_expand_string@@Base+0x480>
  40c22c:	tbnz	w2, #0, 40c44c <variable_expand_string@@Base+0x6e4>
  40c230:	mov	x0, x25
  40c234:	bl	406680 <strlen@plt>
  40c238:	ldr	x6, [x22]
  40c23c:	mov	x24, x0
  40c240:	ldr	x21, [x23, #728]
  40c244:	sub	x27, x19, x6
  40c248:	add	x1, x0, x27
  40c24c:	add	x0, x1, #0x5
  40c250:	cmp	x0, x21
  40c254:	b.hi	40c45c <variable_expand_string@@Base+0x6f4>  // b.pmore
  40c258:	mov	x0, x19
  40c25c:	mov	x2, x24
  40c260:	mov	x1, x25
  40c264:	bl	406640 <memcpy@plt>
  40c268:	ldrb	w0, [x26, #44]
  40c26c:	add	x19, x19, x24
  40c270:	tbz	w0, #0, 40c1ec <variable_expand_string@@Base+0x484>
  40c274:	mov	x0, x25
  40c278:	bl	406b90 <free@plt>
  40c27c:	mov	x0, x28
  40c280:	bl	406b90 <free@plt>
  40c284:	ldrb	w24, [x20]
  40c288:	b	40be6c <variable_expand_string@@Base+0x104>
  40c28c:	lsl	x21, x21, #1
  40c290:	add	x1, x28, #0x65
  40c294:	cmp	x21, x1
  40c298:	csel	x1, x21, x1, cs  // cs = hs, nlast
  40c29c:	str	x1, [x23, #728]
  40c2a0:	bl	41ab78 <xrealloc@@Base>
  40c2a4:	add	x19, x0, x28
  40c2a8:	ldr	x21, [x23, #728]
  40c2ac:	str	x0, [x22]
  40c2b0:	b	40be60 <variable_expand_string@@Base+0xf8>
  40c2b4:	ldrb	w2, [x25, #2]
  40c2b8:	mov	x20, x27
  40c2bc:	cbz	w2, 40c2ec <variable_expand_string@@Base+0x584>
  40c2c0:	ldr	w7, [x29, #152]
  40c2c4:	b	40c2d8 <variable_expand_string@@Base+0x570>
  40c2c8:	cmp	w7, w2
  40c2cc:	b.eq	40c2f4 <variable_expand_string@@Base+0x58c>  // b.none
  40c2d0:	ldrb	w2, [x20, #1]!
  40c2d4:	cbz	w2, 40c2ec <variable_expand_string@@Base+0x584>
  40c2d8:	cmp	w24, w2
  40c2dc:	b.ne	40c2c8 <variable_expand_string@@Base+0x560>  // b.any
  40c2e0:	ldrb	w2, [x20, #1]!
  40c2e4:	add	w21, w21, #0x1
  40c2e8:	cbnz	w2, 40c2d8 <variable_expand_string@@Base+0x570>
  40c2ec:	mov	x28, #0x0                   	// #0
  40c2f0:	b	40c084 <variable_expand_string@@Base+0x31c>
  40c2f4:	sub	w21, w21, #0x1
  40c2f8:	cmn	w21, #0x1
  40c2fc:	b.ne	40c2d0 <variable_expand_string@@Base+0x568>  // b.any
  40c300:	mov	x1, x20
  40c304:	mov	x0, x27
  40c308:	bl	40bc38 <expand_argument@@Base>
  40c30c:	mov	x27, x0
  40c310:	mov	x28, x27
  40c314:	bl	406680 <strlen@plt>
  40c318:	add	x26, x27, x0
  40c31c:	b	40c084 <variable_expand_string@@Base+0x31c>
  40c320:	mov	x0, x26
  40c324:	bl	406b90 <free@plt>
  40c328:	ldrb	w24, [x25, #1]
  40c32c:	b	40be6c <variable_expand_string@@Base+0x104>
  40c330:	ldr	x1, [x29, #128]
  40c334:	ldr	w1, [x1]
  40c338:	cbz	w1, 40c1e8 <variable_expand_string@@Base+0x480>
  40c33c:	adrp	x3, 448000 <output_context@@Base+0x1208>
  40c340:	mov	w2, #0x5                   	// #5
  40c344:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40c348:	add	x1, x1, #0x550
  40c34c:	ldr	x24, [x3, #3640]
  40c350:	bl	406cd0 <dcgettext@plt>
  40c354:	mov	w3, w21
  40c358:	mov	x2, x0
  40c35c:	mov	x1, x21
  40c360:	mov	x4, x27
  40c364:	mov	x0, x24
  40c368:	bl	41bd88 <error@@Base>
  40c36c:	mov	x0, x28
  40c370:	ldr	x21, [x23, #728]
  40c374:	bl	406b90 <free@plt>
  40c378:	ldrb	w24, [x20]
  40c37c:	b	40be6c <variable_expand_string@@Base+0x104>
  40c380:	ldr	x1, [x29, #128]
  40c384:	ldr	w1, [x1]
  40c388:	cbnz	w1, 40c4a4 <variable_expand_string@@Base+0x73c>
  40c38c:	ldrb	w24, [x25, #1]
  40c390:	ldr	x21, [x23, #728]
  40c394:	b	40be6c <variable_expand_string@@Base+0x104>
  40c398:	bl	41abb0 <xstrdup@@Base>
  40c39c:	mov	x20, x0
  40c3a0:	str	x0, [x29, #144]
  40c3a4:	b	40bdc4 <variable_expand_string@@Base+0x5c>
  40c3a8:	lsl	x21, x21, #1
  40c3ac:	add	x1, x1, #0x64
  40c3b0:	cmp	x21, x1
  40c3b4:	mov	x0, x6
  40c3b8:	csel	x1, x21, x1, cs  // cs = hs, nlast
  40c3bc:	str	x1, [x23, #728]
  40c3c0:	bl	41ab78 <xrealloc@@Base>
  40c3c4:	add	x19, x0, x27
  40c3c8:	ldr	x21, [x23, #728]
  40c3cc:	str	x0, [x22]
  40c3d0:	b	40bfc0 <variable_expand_string@@Base+0x258>
  40c3d4:	mov	x1, #0x0                   	// #0
  40c3d8:	bl	40c818 <recursively_expand_for_file@@Base>
  40c3dc:	mov	x26, x0
  40c3e0:	b	40bf98 <variable_expand_string@@Base+0x230>
  40c3e4:	lsl	x21, x21, #1
  40c3e8:	add	x1, x20, #0x65
  40c3ec:	cmp	x21, x1
  40c3f0:	csel	x1, x21, x1, cs  // cs = hs, nlast
  40c3f4:	str	x1, [x23, #728]
  40c3f8:	bl	41ab78 <xrealloc@@Base>
  40c3fc:	add	x19, x0, x20
  40c400:	adrp	x1, 449000 <commands_started@@Base+0x170>
  40c404:	str	x0, [x1, #2000]
  40c408:	b	40bf0c <variable_expand_string@@Base+0x1a4>
  40c40c:	ldr	x2, [x29, #136]
  40c410:	ldr	x1, [x23, #728]
  40c414:	add	x2, x2, #0x6
  40c418:	cmp	x2, x1
  40c41c:	b.hi	40c4e0 <variable_expand_string@@Base+0x778>  // b.pmore
  40c420:	adrp	x0, 449000 <commands_started@@Base+0x170>
  40c424:	strb	wzr, [x19]
  40c428:	ldr	x0, [x0, #2000]
  40c42c:	mov	sp, x29
  40c430:	ldp	x19, x20, [sp, #16]
  40c434:	ldp	x21, x22, [sp, #32]
  40c438:	ldp	x23, x24, [sp, #48]
  40c43c:	ldp	x25, x26, [sp, #64]
  40c440:	ldp	x27, x28, [sp, #80]
  40c444:	ldp	x29, x30, [sp], #176
  40c448:	ret
  40c44c:	mov	x1, #0x0                   	// #0
  40c450:	bl	40c818 <recursively_expand_for_file@@Base>
  40c454:	mov	x25, x0
  40c458:	b	40c230 <variable_expand_string@@Base+0x4c8>
  40c45c:	lsl	x21, x21, #1
  40c460:	add	x1, x1, #0x64
  40c464:	cmp	x21, x1
  40c468:	mov	x0, x6
  40c46c:	csel	x1, x21, x1, cs  // cs = hs, nlast
  40c470:	str	x1, [x23, #728]
  40c474:	bl	41ab78 <xrealloc@@Base>
  40c478:	add	x19, x0, x27
  40c47c:	ldr	x21, [x23, #728]
  40c480:	mov	x2, x24
  40c484:	mov	x1, x25
  40c488:	str	x0, [x22]
  40c48c:	mov	x0, x19
  40c490:	bl	406640 <memcpy@plt>
  40c494:	ldrb	w0, [x26, #44]
  40c498:	add	x19, x19, x24
  40c49c:	tbz	w0, #0, 40c1ec <variable_expand_string@@Base+0x484>
  40c4a0:	b	40c274 <variable_expand_string@@Base+0x50c>
  40c4a4:	adrp	x3, 448000 <output_context@@Base+0x1208>
  40c4a8:	mov	w2, #0x5                   	// #5
  40c4ac:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40c4b0:	add	x1, x1, #0x550
  40c4b4:	ldr	x21, [x3, #3640]
  40c4b8:	bl	406cd0 <dcgettext@plt>
  40c4bc:	mov	x4, x20
  40c4c0:	mov	x2, x0
  40c4c4:	mov	w3, #0x1                   	// #1
  40c4c8:	mov	x0, x21
  40c4cc:	mov	x1, #0x1                   	// #1
  40c4d0:	bl	41bd88 <error@@Base>
  40c4d4:	ldrb	w24, [x25, #1]
  40c4d8:	ldr	x21, [x23, #728]
  40c4dc:	b	40be6c <variable_expand_string@@Base+0x104>
  40c4e0:	ldr	x19, [x29, #136]
  40c4e4:	lsl	x1, x1, #1
  40c4e8:	add	x2, x19, #0x65
  40c4ec:	cmp	x1, x2
  40c4f0:	csel	x1, x1, x2, cs  // cs = hs, nlast
  40c4f4:	str	x1, [x23, #728]
  40c4f8:	bl	41ab78 <xrealloc@@Base>
  40c4fc:	add	x19, x0, x19
  40c500:	adrp	x1, 449000 <commands_started@@Base+0x170>
  40c504:	str	x0, [x1, #2000]
  40c508:	b	40c420 <variable_expand_string@@Base+0x6b8>
  40c50c:	adrp	x23, 446000 <expanding_var@@Base+0x320>
  40c510:	cbz	x0, 40c540 <variable_expand_string@@Base+0x7d8>
  40c514:	mov	x19, x0
  40c518:	str	xzr, [x29, #136]
  40c51c:	b	40bda8 <variable_expand_string@@Base+0x40>
  40c520:	mov	x1, #0x0                   	// #0
  40c524:	str	x7, [x29, #120]
  40c528:	str	x3, [x29, #152]
  40c52c:	bl	40c818 <recursively_expand_for_file@@Base>
  40c530:	mov	x27, x0
  40c534:	ldr	x7, [x29, #120]
  40c538:	ldr	x3, [x29, #152]
  40c53c:	b	40c0e8 <variable_expand_string@@Base+0x380>
  40c540:	mov	x0, #0xc8                  	// #200
  40c544:	str	x0, [x23, #728]
  40c548:	str	x2, [x29, #152]
  40c54c:	bl	41ab28 <xmalloc@@Base>
  40c550:	adrp	x1, 449000 <commands_started@@Base+0x170>
  40c554:	str	x0, [x1, #2000]
  40c558:	strb	wzr, [x0]
  40c55c:	ldr	x0, [x1, #2000]
  40c560:	ldr	x1, [x29, #152]
  40c564:	b	40c514 <variable_expand_string@@Base+0x7ac>
  40c568:	mov	x24, x26
  40c56c:	mov	x25, x21
  40c570:	mov	x26, x1
  40c574:	mov	x21, #0x0                   	// #0
  40c578:	b	40c1ac <variable_expand_string@@Base+0x444>
  40c57c:	adrp	x3, 445000 <memcpy@GLIBC_2.17>
  40c580:	mov	w2, #0x5                   	// #5
  40c584:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40c588:	add	x1, x1, #0x530
  40c58c:	ldr	x3, [x3, #3296]
  40c590:	ldr	x19, [x3]
  40c594:	bl	406cd0 <dcgettext@plt>
  40c598:	mov	x1, #0x0                   	// #0
  40c59c:	mov	x2, x0
  40c5a0:	mov	x0, x19
  40c5a4:	bl	41c0a0 <fatal@@Base>
  40c5a8:	stp	x29, x30, [sp, #-80]!
  40c5ac:	mov	x29, sp
  40c5b0:	stp	x19, x20, [sp, #16]
  40c5b4:	cbz	x2, 40c6f4 <variable_expand_string@@Base+0x98c>
  40c5b8:	stp	x21, x22, [sp, #32]
  40c5bc:	mov	x20, x2
  40c5c0:	mov	x21, x0
  40c5c4:	stp	x23, x24, [sp, #48]
  40c5c8:	mov	x22, x1
  40c5cc:	mov	w24, w3
  40c5d0:	ldr	x2, [x2, #8]
  40c5d4:	cbz	w3, 40c6c4 <variable_expand_string@@Base+0x95c>
  40c5d8:	ldr	w3, [x20, #16]
  40c5dc:	mov	x1, x22
  40c5e0:	mov	x0, x21
  40c5e4:	cbnz	w3, 40c6c4 <variable_expand_string@@Base+0x95c>
  40c5e8:	bl	4259e8 <lookup_variable_in_set@@Base>
  40c5ec:	mov	x19, x0
  40c5f0:	cbnz	x0, 40c61c <variable_expand_string@@Base+0x8b4>
  40c5f4:	ldr	x20, [x20]
  40c5f8:	cbz	x20, 40c6ec <variable_expand_string@@Base+0x984>
  40c5fc:	ldr	w3, [x20, #16]
  40c600:	mov	x1, x22
  40c604:	mov	x0, x21
  40c608:	ldr	x2, [x20, #8]
  40c60c:	cbnz	w3, 40c6c4 <variable_expand_string@@Base+0x95c>
  40c610:	bl	4259e8 <lookup_variable_in_set@@Base>
  40c614:	mov	x19, x0
  40c618:	cbz	x0, 40c5f4 <variable_expand_string@@Base+0x88c>
  40c61c:	ldrb	w23, [x0, #44]
  40c620:	str	x25, [sp, #64]
  40c624:	tbz	w23, #1, 40c70c <variable_expand_string@@Base+0x9a4>
  40c628:	ldr	x2, [x20]
  40c62c:	adrp	x25, 449000 <commands_started@@Base+0x170>
  40c630:	mov	x1, x22
  40c634:	mov	w3, w24
  40c638:	mov	x0, x21
  40c63c:	bl	40c5a8 <variable_expand_string@@Base+0x840>
  40c640:	mov	x20, x0
  40c644:	ldr	x1, [x25, #2000]
  40c648:	cmp	x1, x0
  40c64c:	b.cs	40c670 <variable_expand_string@@Base+0x908>  // b.hs, b.nlast
  40c650:	adrp	x3, 446000 <expanding_var@@Base+0x320>
  40c654:	sub	x21, x0, x1
  40c658:	add	x2, x21, #0x6
  40c65c:	ldr	x0, [x3, #728]
  40c660:	cmp	x2, x0
  40c664:	b.hi	40c7d4 <variable_expand_string@@Base+0xa6c>  // b.pmore
  40c668:	mov	w0, #0x20                  	// #32
  40c66c:	strb	w0, [x20], #1
  40c670:	ldrb	w23, [x19, #44]
  40c674:	ldr	x21, [x19, #8]
  40c678:	mov	x0, x21
  40c67c:	bl	406680 <strlen@plt>
  40c680:	mov	x19, x0
  40c684:	tbz	w23, #0, 40c744 <variable_expand_string@@Base+0x9dc>
  40c688:	mov	x2, x0
  40c68c:	mov	x1, x21
  40c690:	mov	x0, x20
  40c694:	bl	40bd68 <variable_expand_string@@Base>
  40c698:	mov	x20, x0
  40c69c:	bl	406680 <strlen@plt>
  40c6a0:	add	x0, x20, x0
  40c6a4:	ldp	x19, x20, [sp, #16]
  40c6a8:	ldp	x21, x22, [sp, #32]
  40c6ac:	ldp	x23, x24, [sp, #48]
  40c6b0:	ldr	x25, [sp, #64]
  40c6b4:	ldp	x29, x30, [sp], #80
  40c6b8:	ret
  40c6bc:	ldr	x2, [x20, #8]
  40c6c0:	mov	w24, #0x0                   	// #0
  40c6c4:	mov	x1, x22
  40c6c8:	mov	x0, x21
  40c6cc:	bl	4259e8 <lookup_variable_in_set@@Base>
  40c6d0:	mov	x19, x0
  40c6d4:	cbz	x0, 40c6e4 <variable_expand_string@@Base+0x97c>
  40c6d8:	ldrb	w23, [x0, #44]
  40c6dc:	cbnz	w24, 40c7fc <variable_expand_string@@Base+0xa94>
  40c6e0:	tbz	w23, #7, 40c73c <variable_expand_string@@Base+0x9d4>
  40c6e4:	ldr	x20, [x20]
  40c6e8:	cbnz	x20, 40c6bc <variable_expand_string@@Base+0x954>
  40c6ec:	ldp	x21, x22, [sp, #32]
  40c6f0:	ldp	x23, x24, [sp, #48]
  40c6f4:	adrp	x19, 449000 <commands_started@@Base+0x170>
  40c6f8:	ldr	x0, [x19, #2000]
  40c6fc:	cbz	x0, 40c790 <variable_expand_string@@Base+0xa28>
  40c700:	ldp	x19, x20, [sp, #16]
  40c704:	ldp	x29, x30, [sp], #80
  40c708:	ret
  40c70c:	adrp	x25, 449000 <commands_started@@Base+0x170>
  40c710:	ldr	x20, [x25, #2000]
  40c714:	cbnz	x20, 40c674 <variable_expand_string@@Base+0x90c>
  40c718:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  40c71c:	mov	x0, #0xc8                  	// #200
  40c720:	str	x0, [x1, #728]
  40c724:	bl	41ab28 <xmalloc@@Base>
  40c728:	str	x0, [x25, #2000]
  40c72c:	strb	wzr, [x0]
  40c730:	ldr	x20, [x25, #2000]
  40c734:	ldrb	w23, [x19, #44]
  40c738:	b	40c674 <variable_expand_string@@Base+0x90c>
  40c73c:	str	x25, [sp, #64]
  40c740:	b	40c624 <variable_expand_string@@Base+0x8bc>
  40c744:	ldr	x0, [x25, #2000]
  40c748:	adrp	x3, 446000 <expanding_var@@Base+0x320>
  40c74c:	sub	x22, x20, x0
  40c750:	ldr	x1, [x3, #728]
  40c754:	add	x2, x22, x19
  40c758:	add	x4, x2, #0x5
  40c75c:	cmp	x4, x1
  40c760:	b.hi	40c7b0 <variable_expand_string@@Base+0xa48>  // b.pmore
  40c764:	mov	x1, x21
  40c768:	mov	x2, x19
  40c76c:	mov	x0, x20
  40c770:	bl	406640 <memcpy@plt>
  40c774:	add	x0, x20, x19
  40c778:	ldp	x19, x20, [sp, #16]
  40c77c:	ldp	x21, x22, [sp, #32]
  40c780:	ldp	x23, x24, [sp, #48]
  40c784:	ldr	x25, [sp, #64]
  40c788:	ldp	x29, x30, [sp], #80
  40c78c:	ret
  40c790:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  40c794:	mov	x0, #0xc8                  	// #200
  40c798:	str	x0, [x1, #728]
  40c79c:	bl	41ab28 <xmalloc@@Base>
  40c7a0:	str	x0, [x19, #2000]
  40c7a4:	strb	wzr, [x0]
  40c7a8:	ldr	x0, [x19, #2000]
  40c7ac:	b	40c700 <variable_expand_string@@Base+0x998>
  40c7b0:	add	x2, x2, #0x64
  40c7b4:	lsl	x1, x1, #1
  40c7b8:	cmp	x1, x2
  40c7bc:	csel	x1, x1, x2, cs  // cs = hs, nlast
  40c7c0:	str	x1, [x3, #728]
  40c7c4:	bl	41ab78 <xrealloc@@Base>
  40c7c8:	add	x20, x0, x22
  40c7cc:	str	x0, [x25, #2000]
  40c7d0:	b	40c764 <variable_expand_string@@Base+0x9fc>
  40c7d4:	lsl	x2, x0, #1
  40c7d8:	add	x4, x21, #0x65
  40c7dc:	cmp	x2, x4
  40c7e0:	mov	x0, x1
  40c7e4:	csel	x1, x2, x4, cs  // cs = hs, nlast
  40c7e8:	str	x1, [x3, #728]
  40c7ec:	bl	41ab78 <xrealloc@@Base>
  40c7f0:	add	x20, x0, x21
  40c7f4:	str	x0, [x25, #2000]
  40c7f8:	b	40c668 <variable_expand_string@@Base+0x900>
  40c7fc:	mov	w24, #0x0                   	// #0
  40c800:	str	x25, [sp, #64]
  40c804:	b	40c624 <variable_expand_string@@Base+0x8bc>

000000000040c808 <variable_expand@@Base>:
  40c808:	mov	x1, x0
  40c80c:	mov	x2, #0xffffffffffffffff    	// #-1
  40c810:	mov	x0, #0x0                   	// #0
  40c814:	b	40bd68 <variable_expand_string@@Base>

000000000040c818 <recursively_expand_for_file@@Base>:
  40c818:	stp	x29, x30, [sp, #-128]!
  40c81c:	mov	x29, sp
  40c820:	stp	x21, x22, [sp, #32]
  40c824:	adrp	x22, 445000 <memcpy@GLIBC_2.17>
  40c828:	stp	x19, x20, [sp, #16]
  40c82c:	mov	x19, x0
  40c830:	mov	x20, x1
  40c834:	ldr	x0, [x0, #16]
  40c838:	stp	x27, x28, [sp, #80]
  40c83c:	ldr	x27, [x22, #3296]
  40c840:	stp	x23, x24, [sp, #48]
  40c844:	stp	x25, x26, [sp, #64]
  40c848:	mov	x1, x27
  40c84c:	cbz	x0, 40c864 <recursively_expand_for_file@@Base+0x4c>
  40c850:	add	x0, sp, #0x78
  40c854:	add	x2, x19, #0x10
  40c858:	mov	x1, x0
  40c85c:	str	x0, [x22, #3296]
  40c860:	str	x2, [sp, #120]
  40c864:	adrp	x28, 448000 <output_context@@Base+0x1208>
  40c868:	mov	w24, #0x0                   	// #0
  40c86c:	ldr	x0, [x28, #3640]
  40c870:	cbz	x0, 40c99c <recursively_expand_for_file@@Base+0x184>
  40c874:	ldrb	w0, [x19, #44]
  40c878:	tbz	w0, #6, 40c89c <recursively_expand_for_file@@Base+0x84>
  40c87c:	ldr	w0, [x19, #44]
  40c880:	tst	w0, #0x7fff00
  40c884:	b.eq	40c9dc <recursively_expand_for_file@@Base+0x1c4>  // b.none
  40c888:	ubfx	x1, x0, #8, #15
  40c88c:	mov	w2, #0x7fff                	// #32767
  40c890:	add	w1, w1, w2
  40c894:	bfi	w0, w1, #8, #15
  40c898:	str	w0, [x19, #44]
  40c89c:	mov	x25, #0x0                   	// #0
  40c8a0:	cbz	x20, 40c8b4 <recursively_expand_for_file@@Base+0x9c>
  40c8a4:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40c8a8:	ldr	x1, [x20, #80]
  40c8ac:	ldr	x25, [x0, #336]
  40c8b0:	str	x1, [x0, #336]
  40c8b4:	adrp	x23, 446000 <expanding_var@@Base+0x320>
  40c8b8:	ldrb	w0, [x19, #44]
  40c8bc:	adrp	x21, 449000 <commands_started@@Base+0x170>
  40c8c0:	ldr	x1, [x23, #728]
  40c8c4:	orr	w0, w0, #0x40
  40c8c8:	strb	w0, [x19, #44]
  40c8cc:	str	x1, [sp, #96]
  40c8d0:	ldr	x26, [x21, #2000]
  40c8d4:	tbnz	w0, #1, 40c938 <recursively_expand_for_file@@Base+0x120>
  40c8d8:	ldr	x1, [x19, #8]
  40c8dc:	str	xzr, [x21, #2000]
  40c8e0:	mov	x2, #0xffffffffffffffff    	// #-1
  40c8e4:	mov	x0, #0x0                   	// #0
  40c8e8:	bl	40bd68 <variable_expand_string@@Base>
  40c8ec:	str	x26, [x21, #2000]
  40c8f0:	ldr	x1, [sp, #96]
  40c8f4:	str	x1, [x23, #728]
  40c8f8:	ldrb	w1, [x19, #44]
  40c8fc:	and	w1, w1, #0xffffffbf
  40c900:	strb	w1, [x19, #44]
  40c904:	cbz	w24, 40c90c <recursively_expand_for_file@@Base+0xf4>
  40c908:	str	xzr, [x28, #3640]
  40c90c:	cbz	x20, 40c918 <recursively_expand_for_file@@Base+0x100>
  40c910:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  40c914:	str	x25, [x1, #336]
  40c918:	str	x27, [x22, #3296]
  40c91c:	ldp	x19, x20, [sp, #16]
  40c920:	ldp	x21, x22, [sp, #32]
  40c924:	ldp	x23, x24, [sp, #48]
  40c928:	ldp	x25, x26, [sp, #64]
  40c92c:	ldp	x27, x28, [sp, #80]
  40c930:	ldp	x29, x30, [sp], #128
  40c934:	ret
  40c938:	ldr	x2, [x19]
  40c93c:	str	xzr, [x21, #2000]
  40c940:	str	x2, [sp, #104]
  40c944:	mov	x0, x2
  40c948:	bl	406680 <strlen@plt>
  40c94c:	mov	x1, x0
  40c950:	ldr	x2, [sp, #104]
  40c954:	adrp	x3, 446000 <expanding_var@@Base+0x320>
  40c958:	mov	x0, x2
  40c95c:	ldr	x2, [x3, #336]
  40c960:	mov	w3, #0x1                   	// #1
  40c964:	bl	40c5a8 <variable_expand_string@@Base+0x840>
  40c968:	mov	x1, x0
  40c96c:	ldr	x5, [x21, #2000]
  40c970:	ldr	x2, [x23, #728]
  40c974:	sub	x3, x0, x5
  40c978:	add	x0, x3, #0x6
  40c97c:	cmp	x0, x2
  40c980:	b.hi	40c9ac <recursively_expand_for_file@@Base+0x194>  // b.pmore
  40c984:	strb	wzr, [x1]
  40c988:	ldr	x0, [sp, #96]
  40c98c:	str	x0, [x23, #728]
  40c990:	ldr	x0, [x21, #2000]
  40c994:	str	x26, [x21, #2000]
  40c998:	b	40c8f8 <recursively_expand_for_file@@Base+0xe0>
  40c99c:	add	x0, x19, #0x10
  40c9a0:	mov	w24, #0x1                   	// #1
  40c9a4:	str	x0, [x28, #3640]
  40c9a8:	b	40c874 <recursively_expand_for_file@@Base+0x5c>
  40c9ac:	add	x1, x3, #0x65
  40c9b0:	lsl	x2, x2, #1
  40c9b4:	cmp	x2, x1
  40c9b8:	mov	x0, x5
  40c9bc:	csel	x1, x2, x1, cs  // cs = hs, nlast
  40c9c0:	str	x1, [x23, #728]
  40c9c4:	str	x3, [sp, #104]
  40c9c8:	bl	41ab78 <xrealloc@@Base>
  40c9cc:	str	x0, [x21, #2000]
  40c9d0:	ldr	x3, [sp, #104]
  40c9d4:	add	x1, x0, x3
  40c9d8:	b	40c984 <recursively_expand_for_file@@Base+0x16c>
  40c9dc:	ldr	x0, [x19]
  40c9e0:	ldr	x21, [x1]
  40c9e4:	bl	406680 <strlen@plt>
  40c9e8:	mov	x20, x0
  40c9ec:	mov	w2, #0x5                   	// #5
  40c9f0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40c9f4:	mov	x0, #0x0                   	// #0
  40c9f8:	add	x1, x1, #0x578
  40c9fc:	bl	406cd0 <dcgettext@plt>
  40ca00:	mov	x2, x0
  40ca04:	ldr	x3, [x19]
  40ca08:	mov	x1, x20
  40ca0c:	mov	x0, x21
  40ca10:	bl	41c0a0 <fatal@@Base>
  40ca14:	nop

000000000040ca18 <variable_expand_for_file@@Base>:
  40ca18:	mov	x2, x1
  40ca1c:	mov	x1, x0
  40ca20:	cbz	x2, 40ca88 <variable_expand_for_file@@Base+0x70>
  40ca24:	stp	x29, x30, [sp, #-48]!
  40ca28:	mov	x29, sp
  40ca2c:	stp	x19, x20, [sp, #16]
  40ca30:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  40ca34:	adrp	x19, 448000 <output_context@@Base+0x1208>
  40ca38:	ldr	x3, [x2, #32]
  40ca3c:	stp	x21, x22, [sp, #32]
  40ca40:	ldr	x0, [x2, #80]
  40ca44:	ldr	x22, [x20, #336]
  40ca48:	str	x0, [x20, #336]
  40ca4c:	ldr	x21, [x19, #3640]
  40ca50:	cbz	x3, 40ca60 <variable_expand_for_file@@Base+0x48>
  40ca54:	ldr	x0, [x3]
  40ca58:	cmp	x0, #0x0
  40ca5c:	csel	x3, x3, xzr, ne  // ne = any
  40ca60:	str	x3, [x19, #3640]
  40ca64:	mov	x2, #0xffffffffffffffff    	// #-1
  40ca68:	mov	x0, #0x0                   	// #0
  40ca6c:	bl	40bd68 <variable_expand_string@@Base>
  40ca70:	str	x22, [x20, #336]
  40ca74:	str	x21, [x19, #3640]
  40ca78:	ldp	x19, x20, [sp, #16]
  40ca7c:	ldp	x21, x22, [sp, #32]
  40ca80:	ldp	x29, x30, [sp], #48
  40ca84:	ret
  40ca88:	mov	x2, #0xffffffffffffffff    	// #-1
  40ca8c:	mov	x0, #0x0                   	// #0
  40ca90:	b	40bd68 <variable_expand_string@@Base>
  40ca94:	nop

000000000040ca98 <allocated_variable_expand_for_file@@Base>:
  40ca98:	stp	x29, x30, [sp, #-80]!
  40ca9c:	mov	x2, x1
  40caa0:	mov	x1, x0
  40caa4:	mov	x29, sp
  40caa8:	stp	x19, x20, [sp, #16]
  40caac:	adrp	x19, 449000 <commands_started@@Base+0x170>
  40cab0:	stp	x21, x22, [sp, #32]
  40cab4:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  40cab8:	stp	x23, x24, [sp, #48]
  40cabc:	ldr	x24, [x19, #2000]
  40cac0:	str	xzr, [x19, #2000]
  40cac4:	ldr	x23, [x22, #728]
  40cac8:	cbz	x2, 40cb34 <allocated_variable_expand_for_file@@Base+0x9c>
  40cacc:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  40cad0:	adrp	x20, 448000 <output_context@@Base+0x1208>
  40cad4:	ldr	x3, [x2, #32]
  40cad8:	stp	x25, x26, [sp, #64]
  40cadc:	ldr	x0, [x2, #80]
  40cae0:	ldr	x26, [x21, #336]
  40cae4:	str	x0, [x21, #336]
  40cae8:	ldr	x25, [x20, #3640]
  40caec:	cbz	x3, 40cafc <allocated_variable_expand_for_file@@Base+0x64>
  40caf0:	ldr	x0, [x3]
  40caf4:	cmp	x0, #0x0
  40caf8:	csel	x3, x3, xzr, ne  // ne = any
  40cafc:	str	x3, [x20, #3640]
  40cb00:	mov	x2, #0xffffffffffffffff    	// #-1
  40cb04:	mov	x0, #0x0                   	// #0
  40cb08:	bl	40bd68 <variable_expand_string@@Base>
  40cb0c:	str	x26, [x21, #336]
  40cb10:	str	x25, [x20, #3640]
  40cb14:	ldp	x25, x26, [sp, #64]
  40cb18:	str	x24, [x19, #2000]
  40cb1c:	str	x23, [x22, #728]
  40cb20:	ldp	x19, x20, [sp, #16]
  40cb24:	ldp	x21, x22, [sp, #32]
  40cb28:	ldp	x23, x24, [sp, #48]
  40cb2c:	ldp	x29, x30, [sp], #80
  40cb30:	ret
  40cb34:	mov	x2, #0xffffffffffffffff    	// #-1
  40cb38:	mov	x0, #0x0                   	// #0
  40cb3c:	bl	40bd68 <variable_expand_string@@Base>
  40cb40:	b	40cb18 <allocated_variable_expand_for_file@@Base+0x80>
  40cb44:	nop

000000000040cb48 <install_variable_buffer@@Base>:
  40cb48:	stp	x29, x30, [sp, #-32]!
  40cb4c:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  40cb50:	mov	x29, sp
  40cb54:	str	x19, [sp, #16]
  40cb58:	adrp	x19, 449000 <commands_started@@Base+0x170>
  40cb5c:	ldr	x3, [x19, #2000]
  40cb60:	str	x3, [x0]
  40cb64:	ldr	x0, [x2, #728]
  40cb68:	str	x0, [x1]
  40cb6c:	str	xzr, [x19, #2000]
  40cb70:	mov	x0, #0xc8                  	// #200
  40cb74:	str	x0, [x2, #728]
  40cb78:	bl	41ab28 <xmalloc@@Base>
  40cb7c:	str	x0, [x19, #2000]
  40cb80:	strb	wzr, [x0]
  40cb84:	ldr	x19, [sp, #16]
  40cb88:	ldp	x29, x30, [sp], #32
  40cb8c:	ret

000000000040cb90 <restore_variable_buffer@@Base>:
  40cb90:	stp	x29, x30, [sp, #-48]!
  40cb94:	mov	x29, sp
  40cb98:	str	x21, [sp, #32]
  40cb9c:	adrp	x21, 449000 <commands_started@@Base+0x170>
  40cba0:	stp	x19, x20, [sp, #16]
  40cba4:	mov	x20, x0
  40cba8:	mov	x19, x1
  40cbac:	ldr	x0, [x21, #2000]
  40cbb0:	bl	406b90 <free@plt>
  40cbb4:	str	x20, [x21, #2000]
  40cbb8:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40cbbc:	ldr	x21, [sp, #32]
  40cbc0:	str	x19, [x0, #728]
  40cbc4:	ldp	x19, x20, [sp, #16]
  40cbc8:	ldp	x29, x30, [sp], #48
  40cbcc:	ret
  40cbd0:	mov	x0, #0x0                   	// #0
  40cbd4:	ret
  40cbd8:	ldr	x0, [x0, #8]
  40cbdc:	ldr	x1, [x1, #8]
  40cbe0:	cmp	x0, x1
  40cbe4:	b.eq	40cbec <restore_variable_buffer@@Base+0x5c>  // b.none
  40cbe8:	b	406b40 <strcmp@plt>
  40cbec:	mov	w0, #0x0                   	// #0
  40cbf0:	ret
  40cbf4:	nop
  40cbf8:	stp	x29, x30, [sp, #-64]!
  40cbfc:	mov	x29, sp
  40cc00:	stp	x19, x20, [sp, #16]
  40cc04:	mov	x19, x0
  40cc08:	ldr	x0, [x0]
  40cc0c:	stp	x21, x22, [sp, #32]
  40cc10:	cbz	x0, 40cc1c <restore_variable_buffer@@Base+0x8c>
  40cc14:	ldrb	w1, [x0]
  40cc18:	cbnz	w1, 40ce64 <restore_variable_buffer@@Base+0x2d4>
  40cc1c:	ldr	x0, [x19, #8]
  40cc20:	cbz	x0, 40cc2c <restore_variable_buffer@@Base+0x9c>
  40cc24:	ldrb	w1, [x0]
  40cc28:	cbnz	w1, 40ce0c <restore_variable_buffer@@Base+0x27c>
  40cc2c:	ldr	x0, [x19, #16]
  40cc30:	cbz	x0, 40cc3c <restore_variable_buffer@@Base+0xac>
  40cc34:	ldrb	w1, [x0]
  40cc38:	cbnz	w1, 40cdb0 <restore_variable_buffer@@Base+0x220>
  40cc3c:	ldr	x0, [x19, #40]
  40cc40:	cbz	x0, 40cc4c <restore_variable_buffer@@Base+0xbc>
  40cc44:	ldrb	w1, [x0]
  40cc48:	cbnz	w1, 40cd54 <restore_variable_buffer@@Base+0x1c4>
  40cc4c:	ldr	x19, [x19, #24]
  40cc50:	cbz	x19, 40ccfc <restore_variable_buffer@@Base+0x16c>
  40cc54:	adrp	x21, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40cc58:	adrp	x22, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40cc5c:	add	x21, x21, #0x5b0
  40cc60:	add	x22, x22, #0x5d0
  40cc64:	b	40cc70 <restore_variable_buffer@@Base+0xe0>
  40cc68:	ldr	x19, [x19]
  40cc6c:	cbz	x19, 40ccfc <restore_variable_buffer@@Base+0x16c>
  40cc70:	ldrb	w0, [x19, #33]
  40cc74:	tbnz	w0, #3, 40cc88 <restore_variable_buffer@@Base+0xf8>
  40cc78:	ldr	x0, [x19, #8]
  40cc7c:	cbz	x0, 40cc88 <restore_variable_buffer@@Base+0xf8>
  40cc80:	ldrb	w1, [x0]
  40cc84:	cbnz	w1, 40cd0c <restore_variable_buffer@@Base+0x17c>
  40cc88:	ldr	x0, [x19, #24]
  40cc8c:	cbz	x0, 40cc68 <restore_variable_buffer@@Base+0xd8>
  40cc90:	ldrb	w1, [x0]
  40cc94:	cbz	w1, 40cc68 <restore_variable_buffer@@Base+0xd8>
  40cc98:	bl	4248a0 <strcache_iscached@@Base>
  40cc9c:	cbnz	w0, 40cc68 <restore_variable_buffer@@Base+0xd8>
  40cca0:	ldr	x0, [x19, #8]
  40cca4:	str	x23, [sp, #48]
  40cca8:	bl	406680 <strlen@plt>
  40ccac:	mov	x20, x0
  40ccb0:	ldr	x0, [x19, #24]
  40ccb4:	bl	406680 <strlen@plt>
  40ccb8:	mov	x23, x0
  40ccbc:	mov	x1, x21
  40ccc0:	mov	w2, #0x5                   	// #5
  40ccc4:	mov	x0, #0x0                   	// #0
  40ccc8:	bl	406cd0 <dcgettext@plt>
  40cccc:	ldr	x3, [x19, #8]
  40ccd0:	add	x1, x20, x23
  40ccd4:	ldr	x5, [x19, #24]
  40ccd8:	mov	x2, x0
  40ccdc:	add	x1, x1, #0x4
  40cce0:	adrp	x4, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40cce4:	mov	x0, #0x0                   	// #0
  40cce8:	add	x4, x4, #0x5e8
  40ccec:	bl	41bd88 <error@@Base>
  40ccf0:	ldr	x19, [x19]
  40ccf4:	ldr	x23, [sp, #48]
  40ccf8:	cbnz	x19, 40cc70 <restore_variable_buffer@@Base+0xe0>
  40ccfc:	ldp	x19, x20, [sp, #16]
  40cd00:	ldp	x21, x22, [sp, #32]
  40cd04:	ldp	x29, x30, [sp], #64
  40cd08:	ret
  40cd0c:	bl	4248a0 <strcache_iscached@@Base>
  40cd10:	cbnz	w0, 40cc88 <restore_variable_buffer@@Base+0xf8>
  40cd14:	ldr	x0, [x19, #8]
  40cd18:	bl	406680 <strlen@plt>
  40cd1c:	mov	x20, x0
  40cd20:	mov	x1, x21
  40cd24:	mov	w2, #0x5                   	// #5
  40cd28:	mov	x0, #0x0                   	// #0
  40cd2c:	bl	406cd0 <dcgettext@plt>
  40cd30:	ldr	x5, [x19, #8]
  40cd34:	lsl	x1, x20, #1
  40cd38:	mov	x2, x0
  40cd3c:	add	x1, x1, #0x4
  40cd40:	mov	x4, x22
  40cd44:	mov	x3, x5
  40cd48:	mov	x0, #0x0                   	// #0
  40cd4c:	bl	41bd88 <error@@Base>
  40cd50:	b	40cc88 <restore_variable_buffer@@Base+0xf8>
  40cd54:	bl	4248a0 <strcache_iscached@@Base>
  40cd58:	cbnz	w0, 40cc4c <restore_variable_buffer@@Base+0xbc>
  40cd5c:	ldr	x0, [x19]
  40cd60:	bl	406680 <strlen@plt>
  40cd64:	mov	x20, x0
  40cd68:	ldr	x0, [x19, #40]
  40cd6c:	bl	406680 <strlen@plt>
  40cd70:	mov	x21, x0
  40cd74:	mov	w2, #0x5                   	// #5
  40cd78:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40cd7c:	mov	x0, #0x0                   	// #0
  40cd80:	add	x1, x1, #0x5b0
  40cd84:	bl	406cd0 <dcgettext@plt>
  40cd88:	mov	x2, x0
  40cd8c:	ldr	x3, [x19]
  40cd90:	add	x1, x20, x21
  40cd94:	ldr	x5, [x19, #40]
  40cd98:	add	x1, x1, #0x4
  40cd9c:	adrp	x4, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40cda0:	mov	x0, #0x0                   	// #0
  40cda4:	add	x4, x4, #0x5e8
  40cda8:	bl	41bd88 <error@@Base>
  40cdac:	b	40cc4c <restore_variable_buffer@@Base+0xbc>
  40cdb0:	bl	4248a0 <strcache_iscached@@Base>
  40cdb4:	cbnz	w0, 40cc3c <restore_variable_buffer@@Base+0xac>
  40cdb8:	ldr	x0, [x19]
  40cdbc:	bl	406680 <strlen@plt>
  40cdc0:	mov	x20, x0
  40cdc4:	ldr	x0, [x19, #16]
  40cdc8:	bl	406680 <strlen@plt>
  40cdcc:	mov	x21, x0
  40cdd0:	mov	w2, #0x5                   	// #5
  40cdd4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40cdd8:	mov	x0, #0x0                   	// #0
  40cddc:	add	x1, x1, #0x5b0
  40cde0:	bl	406cd0 <dcgettext@plt>
  40cde4:	mov	x2, x0
  40cde8:	ldr	x3, [x19]
  40cdec:	add	x1, x20, x21
  40cdf0:	ldr	x5, [x19, #16]
  40cdf4:	add	x1, x1, #0x5
  40cdf8:	adrp	x4, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40cdfc:	mov	x0, #0x0                   	// #0
  40ce00:	add	x4, x4, #0x5e0
  40ce04:	bl	41bd88 <error@@Base>
  40ce08:	b	40cc3c <restore_variable_buffer@@Base+0xac>
  40ce0c:	bl	4248a0 <strcache_iscached@@Base>
  40ce10:	cbnz	w0, 40cc2c <restore_variable_buffer@@Base+0x9c>
  40ce14:	ldr	x0, [x19]
  40ce18:	bl	406680 <strlen@plt>
  40ce1c:	mov	x20, x0
  40ce20:	ldr	x0, [x19, #8]
  40ce24:	bl	406680 <strlen@plt>
  40ce28:	mov	x21, x0
  40ce2c:	mov	w2, #0x5                   	// #5
  40ce30:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ce34:	mov	x0, #0x0                   	// #0
  40ce38:	add	x1, x1, #0x5b0
  40ce3c:	bl	406cd0 <dcgettext@plt>
  40ce40:	mov	x2, x0
  40ce44:	ldp	x3, x5, [x19]
  40ce48:	add	x1, x20, x21
  40ce4c:	add	x1, x1, #0x5
  40ce50:	adrp	x4, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ce54:	mov	x0, #0x0                   	// #0
  40ce58:	add	x4, x4, #0x5d8
  40ce5c:	bl	41bd88 <error@@Base>
  40ce60:	b	40cc2c <restore_variable_buffer@@Base+0x9c>
  40ce64:	bl	4248a0 <strcache_iscached@@Base>
  40ce68:	cbnz	w0, 40cc1c <restore_variable_buffer@@Base+0x8c>
  40ce6c:	ldr	x0, [x19]
  40ce70:	bl	406680 <strlen@plt>
  40ce74:	mov	x20, x0
  40ce78:	mov	w2, #0x5                   	// #5
  40ce7c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ce80:	mov	x0, #0x0                   	// #0
  40ce84:	add	x1, x1, #0x5b0
  40ce88:	bl	406cd0 <dcgettext@plt>
  40ce8c:	mov	x2, x0
  40ce90:	ldr	x5, [x19]
  40ce94:	lsl	x1, x20, #1
  40ce98:	add	x1, x1, #0x4
  40ce9c:	adrp	x4, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40cea0:	mov	x3, x5
  40cea4:	add	x4, x4, #0x5d0
  40cea8:	mov	x0, #0x0                   	// #0
  40ceac:	bl	41bd88 <error@@Base>
  40ceb0:	b	40cc1c <restore_variable_buffer@@Base+0x8c>
  40ceb4:	nop
  40ceb8:	stp	x29, x30, [sp, #-16]!
  40cebc:	mov	x29, sp
  40cec0:	ldr	x0, [x0, #8]
  40cec4:	bl	413218 <jhash_string@@Base>
  40cec8:	mov	w0, w0
  40cecc:	ldp	x29, x30, [sp], #16
  40ced0:	ret
  40ced4:	nop

000000000040ced8 <lookup_file@@Base>:
  40ced8:	stp	x29, x30, [sp, #-160]!
  40cedc:	mov	x2, x0
  40cee0:	mov	x29, sp
  40cee4:	ldrb	w0, [x0]
  40cee8:	cmp	w0, #0x2e
  40ceec:	b.ne	40cf24 <lookup_file@@Base+0x4c>  // b.any
  40cef0:	ldrb	w0, [x2, #1]
  40cef4:	cmp	w0, #0x2f
  40cef8:	b.ne	40cf30 <lookup_file@@Base+0x58>  // b.any
  40cefc:	ldrb	w0, [x2, #2]
  40cf00:	cbz	w0, 40cf30 <lookup_file@@Base+0x58>
  40cf04:	add	x2, x2, #0x2
  40cf08:	cmp	w0, #0x2f
  40cf0c:	b.ne	40cf1c <lookup_file@@Base+0x44>  // b.any
  40cf10:	ldrb	w0, [x2, #1]!
  40cf14:	cmp	w0, #0x2f
  40cf18:	b.eq	40cf10 <lookup_file@@Base+0x38>  // b.none
  40cf1c:	cmp	w0, #0x2e
  40cf20:	b.eq	40cef0 <lookup_file@@Base+0x18>  // b.none
  40cf24:	cbnz	w0, 40cf30 <lookup_file@@Base+0x58>
  40cf28:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40cf2c:	add	x2, x2, #0x5f0
  40cf30:	add	x1, sp, #0x10
  40cf34:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40cf38:	add	x0, x0, #0x2e0
  40cf3c:	str	x2, [sp, #24]
  40cf40:	bl	412950 <hash_find_item@@Base>
  40cf44:	ldp	x29, x30, [sp], #160
  40cf48:	ret
  40cf4c:	nop

000000000040cf50 <enter_file@@Base>:
  40cf50:	stp	x29, x30, [sp, #-208]!
  40cf54:	mov	x29, sp
  40cf58:	str	d8, [sp, #56]
  40cf5c:	fmov	d8, x0
  40cf60:	stp	x21, x22, [sp, #32]
  40cf64:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  40cf68:	add	x22, x22, #0x2e0
  40cf6c:	add	x1, sp, #0x40
  40cf70:	mov	x0, x22
  40cf74:	stp	x19, x20, [sp, #16]
  40cf78:	str	d8, [sp, #72]
  40cf7c:	bl	412690 <hash_find_slot@@Base>
  40cf80:	ldr	x20, [x0]
  40cf84:	mov	x21, x0
  40cf88:	cbz	x20, 40d060 <enter_file@@Base+0x110>
  40cf8c:	str	x23, [sp, #48]
  40cf90:	adrp	x23, 446000 <expanding_var@@Base+0x320>
  40cf94:	ldr	x0, [x23, #72]
  40cf98:	cmp	x0, x20
  40cf9c:	b.eq	40cfa8 <enter_file@@Base+0x58>  // b.none
  40cfa0:	ldr	x0, [x20, #104]
  40cfa4:	cbz	x0, 40d034 <enter_file@@Base+0xe4>
  40cfa8:	mov	x0, #0x90                  	// #144
  40cfac:	bl	41ab50 <xcalloc@@Base>
  40cfb0:	dup	v8.2d, v8.d[0]
  40cfb4:	mov	x19, x0
  40cfb8:	ldrb	w0, [x0, #136]
  40cfbc:	mov	w1, #0x1                   	// #1
  40cfc0:	bfxil	w0, w1, #0, #2
  40cfc4:	str	q8, [x19]
  40cfc8:	ldr	x1, [x23, #72]
  40cfcc:	strb	w0, [x19, #136]
  40cfd0:	cmp	x1, x20
  40cfd4:	b.eq	40d004 <enter_file@@Base+0xb4>  // b.none
  40cfd8:	ldr	x0, [x20, #64]
  40cfdc:	ldr	x23, [sp, #48]
  40cfe0:	str	x20, [x19, #104]
  40cfe4:	str	x19, [x0, #56]
  40cfe8:	mov	x0, x19
  40cfec:	str	x19, [x20, #64]
  40cff0:	ldp	x19, x20, [sp, #16]
  40cff4:	ldp	x21, x22, [sp, #32]
  40cff8:	ldr	d8, [sp, #56]
  40cffc:	ldp	x29, x30, [sp], #208
  40d000:	ret
  40d004:	ldr	x23, [sp, #48]
  40d008:	str	x19, [x19, #64]
  40d00c:	mov	x2, x21
  40d010:	mov	x1, x19
  40d014:	mov	x0, x22
  40d018:	bl	412b18 <hash_insert_at@@Base>
  40d01c:	mov	x0, x19
  40d020:	ldr	d8, [sp, #56]
  40d024:	ldp	x19, x20, [sp, #16]
  40d028:	ldp	x21, x22, [sp, #32]
  40d02c:	ldp	x29, x30, [sp], #208
  40d030:	ret
  40d034:	ldrb	w0, [x20, #136]
  40d038:	mov	x19, x20
  40d03c:	ldp	x21, x22, [sp, #32]
  40d040:	and	w0, w0, #0xffffffef
  40d044:	strb	w0, [x20, #136]
  40d048:	mov	x0, x19
  40d04c:	ldp	x19, x20, [sp, #16]
  40d050:	ldr	x23, [sp, #48]
  40d054:	ldr	d8, [sp, #56]
  40d058:	ldp	x29, x30, [sp], #208
  40d05c:	ret
  40d060:	mov	x0, #0x90                  	// #144
  40d064:	bl	41ab50 <xcalloc@@Base>
  40d068:	dup	v8.2d, v8.d[0]
  40d06c:	mov	x19, x0
  40d070:	ldrb	w0, [x0, #136]
  40d074:	mov	w1, #0x1                   	// #1
  40d078:	bfxil	w0, w1, #0, #2
  40d07c:	str	q8, [x19]
  40d080:	strb	w0, [x19, #136]
  40d084:	b	40d008 <enter_file@@Base+0xb8>

000000000040d088 <rehash_file@@Base>:
  40d088:	stp	x29, x30, [sp, #-208]!
  40d08c:	mov	x29, sp
  40d090:	stp	x19, x20, [sp, #16]
  40d094:	mov	x19, x0
  40d098:	ldrb	w0, [x0, #136]
  40d09c:	stp	x21, x22, [sp, #32]
  40d0a0:	and	w0, w0, #0xffffffef
  40d0a4:	ldr	x22, [x19, #8]
  40d0a8:	str	x1, [sp, #72]
  40d0ac:	strb	w0, [x19, #136]
  40d0b0:	cmp	x1, x22
  40d0b4:	b.eq	40d3a0 <rehash_file@@Base+0x318>  // b.none
  40d0b8:	mov	x21, x1
  40d0bc:	mov	x0, x22
  40d0c0:	bl	406b40 <strcmp@plt>
  40d0c4:	cbz	w0, 40d3a0 <rehash_file@@Base+0x318>
  40d0c8:	str	x22, [sp, #72]
  40d0cc:	nop
  40d0d0:	mov	x20, x19
  40d0d4:	ldr	x19, [x19, #72]
  40d0d8:	cbnz	x19, 40d0d0 <rehash_file@@Base+0x48>
  40d0dc:	ldr	x0, [x20, #8]
  40d0e0:	cmp	x22, x0
  40d0e4:	b.eq	40d0f4 <rehash_file@@Base+0x6c>  // b.none
  40d0e8:	mov	x1, x22
  40d0ec:	bl	406b40 <strcmp@plt>
  40d0f0:	cbnz	w0, 40d4a8 <rehash_file@@Base+0x420>
  40d0f4:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  40d0f8:	add	x22, x22, #0x2e0
  40d0fc:	mov	x0, x22
  40d100:	mov	x1, x20
  40d104:	bl	412c60 <hash_delete@@Base>
  40d108:	cmp	x20, x0
  40d10c:	b.ne	40d4a8 <rehash_file@@Base+0x420>  // b.any
  40d110:	add	x1, sp, #0x40
  40d114:	mov	x0, x22
  40d118:	str	x21, [sp, #72]
  40d11c:	bl	412690 <hash_find_slot@@Base>
  40d120:	ldr	x3, [x20, #104]
  40d124:	mov	x2, x0
  40d128:	ldr	x19, [x0]
  40d12c:	str	x21, [x20, #8]
  40d130:	cbz	x3, 40d144 <rehash_file@@Base+0xbc>
  40d134:	nop
  40d138:	str	x21, [x3, #8]
  40d13c:	ldr	x3, [x3, #56]
  40d140:	cbnz	x3, 40d138 <rehash_file@@Base+0xb0>
  40d144:	cbz	x19, 40d3f0 <rehash_file@@Base+0x368>
  40d148:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40d14c:	ldr	x0, [x0, #72]
  40d150:	cmp	x0, x19
  40d154:	b.eq	40d3f0 <rehash_file@@Base+0x368>  // b.none
  40d158:	ldr	x22, [x20, #32]
  40d15c:	cbz	x22, 40d238 <rehash_file@@Base+0x1b0>
  40d160:	stp	x23, x24, [sp, #48]
  40d164:	ldr	x23, [x19, #32]
  40d168:	cbz	x23, 40d3e4 <rehash_file@@Base+0x35c>
  40d16c:	cmp	x22, x23
  40d170:	b.eq	40d42c <rehash_file@@Base+0x3a4>  // b.none
  40d174:	ldr	x0, [x20]
  40d178:	bl	406680 <strlen@plt>
  40d17c:	ldr	x1, [x23]
  40d180:	mov	x23, x0
  40d184:	cbz	x1, 40d434 <rehash_file@@Base+0x3ac>
  40d188:	mov	x0, x1
  40d18c:	bl	406680 <strlen@plt>
  40d190:	mov	w2, #0x5                   	// #5
  40d194:	mov	x24, x0
  40d198:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40d19c:	mov	x0, #0x0                   	// #0
  40d1a0:	add	x1, x1, #0x5f8
  40d1a4:	bl	406cd0 <dcgettext@plt>
  40d1a8:	ldr	x5, [x19, #32]
  40d1ac:	add	x1, x23, #0x14
  40d1b0:	ldr	x3, [x20]
  40d1b4:	mov	x2, x0
  40d1b8:	ldp	x4, x5, [x5]
  40d1bc:	mov	x0, x22
  40d1c0:	add	x1, x1, x24
  40d1c4:	bl	41bd88 <error@@Base>
  40d1c8:	mov	x0, x21
  40d1cc:	bl	406680 <strlen@plt>
  40d1d0:	mov	w2, #0x5                   	// #5
  40d1d4:	add	x22, x0, x23
  40d1d8:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40d1dc:	mov	x0, #0x0                   	// #0
  40d1e0:	add	x1, x1, #0x660
  40d1e4:	ldr	x23, [x20, #32]
  40d1e8:	bl	406cd0 <dcgettext@plt>
  40d1ec:	ldr	x3, [x20]
  40d1f0:	mov	x4, x21
  40d1f4:	mov	x2, x0
  40d1f8:	mov	x1, x22
  40d1fc:	mov	x0, x23
  40d200:	bl	41bd88 <error@@Base>
  40d204:	mov	w2, #0x5                   	// #5
  40d208:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40d20c:	mov	x0, #0x0                   	// #0
  40d210:	add	x1, x1, #0x698
  40d214:	ldr	x23, [x20, #32]
  40d218:	bl	406cd0 <dcgettext@plt>
  40d21c:	ldr	x4, [x20]
  40d220:	mov	x2, x0
  40d224:	mov	x1, x22
  40d228:	mov	x0, x23
  40d22c:	mov	x3, x21
  40d230:	bl	41bd88 <error@@Base>
  40d234:	ldp	x23, x24, [sp, #48]
  40d238:	ldr	x0, [x19, #24]
  40d23c:	ldr	x2, [x20, #24]
  40d240:	cbz	x0, 40d424 <rehash_file@@Base+0x39c>
  40d244:	nop
  40d248:	mov	x1, x0
  40d24c:	ldr	x0, [x0]
  40d250:	cbnz	x0, 40d248 <rehash_file@@Base+0x1c0>
  40d254:	str	x2, [x1]
  40d258:	ldr	x1, [x20, #80]
  40d25c:	add	x0, x19, #0x50
  40d260:	bl	425b90 <merge_variable_set_lists@@Base>
  40d264:	ldr	x0, [x19, #104]
  40d268:	cbz	x0, 40d40c <rehash_file@@Base+0x384>
  40d26c:	ldrb	w0, [x20, #137]
  40d270:	tbnz	w0, #3, 40d3b0 <rehash_file@@Base+0x328>
  40d274:	ldrb	w0, [x19, #137]
  40d278:	ldr	x2, [x19, #112]
  40d27c:	ldr	x1, [x20, #112]
  40d280:	cmp	x1, x2
  40d284:	b.ls	40d28c <rehash_file@@Base+0x204>  // b.plast
  40d288:	str	x1, [x19, #112]
  40d28c:	ldrb	w4, [x20, #136]
  40d290:	ubfx	x6, x0, #0, #1
  40d294:	ldrb	w1, [x19, #136]
  40d298:	ldr	x7, [x20, #120]
  40d29c:	mov	w2, w1
  40d2a0:	ubfx	x4, x4, #5, #1
  40d2a4:	ubfx	x1, x1, #5, #1
  40d2a8:	orr	w1, w1, w4
  40d2ac:	ldrb	w3, [x19, #138]
  40d2b0:	bfi	w2, w1, #5, #1
  40d2b4:	strb	w2, [x19, #136]
  40d2b8:	mov	w4, w2
  40d2bc:	mov	w5, w3
  40d2c0:	ldrb	w1, [x20, #137]
  40d2c4:	ubfx	x2, x2, #6, #1
  40d2c8:	ubfx	x3, x3, #1, #1
  40d2cc:	ubfx	x1, x1, #0, #1
  40d2d0:	orr	w1, w6, w1
  40d2d4:	bfxil	w0, w1, #0, #1
  40d2d8:	strb	w0, [x19, #137]
  40d2dc:	mov	w1, w0
  40d2e0:	ldrb	w6, [x20, #137]
  40d2e4:	ubfx	x0, x0, #1, #1
  40d2e8:	ubfx	x6, x6, #1, #1
  40d2ec:	orr	w0, w0, w6
  40d2f0:	bfi	w1, w0, #1, #1
  40d2f4:	strb	w1, [x19, #137]
  40d2f8:	mov	w0, w1
  40d2fc:	ldrb	w6, [x20, #137]
  40d300:	ubfx	x1, x1, #2, #1
  40d304:	ubfx	x6, x6, #2, #1
  40d308:	orr	w1, w1, w6
  40d30c:	bfi	w0, w1, #2, #1
  40d310:	strb	w0, [x19, #137]
  40d314:	mov	w1, w0
  40d318:	ldrb	w6, [x20, #137]
  40d31c:	ubfx	x0, x0, #3, #1
  40d320:	ubfx	x6, x6, #3, #1
  40d324:	orr	w0, w0, w6
  40d328:	bfi	w1, w0, #3, #1
  40d32c:	strb	w1, [x19, #137]
  40d330:	mov	w0, w1
  40d334:	ldrb	w6, [x20, #137]
  40d338:	ubfx	x1, x1, #4, #1
  40d33c:	ubfx	x6, x6, #4, #1
  40d340:	orr	w1, w1, w6
  40d344:	bfi	w0, w1, #4, #1
  40d348:	strb	w0, [x19, #137]
  40d34c:	mov	w6, w0
  40d350:	ldrb	w1, [x20, #137]
  40d354:	ubfx	x0, x0, #5, #1
  40d358:	ubfx	x1, x1, #5, #1
  40d35c:	orr	w0, w0, w1
  40d360:	bfi	w6, w0, #5, #1
  40d364:	strb	w6, [x19, #137]
  40d368:	ldrb	w0, [x20, #136]
  40d36c:	ubfx	x0, x0, #6, #1
  40d370:	orr	w2, w2, w0
  40d374:	bfi	w4, w2, #6, #1
  40d378:	strb	w4, [x19, #136]
  40d37c:	and	w0, w4, #0xffffffef
  40d380:	ldrb	w1, [x20, #138]
  40d384:	strb	w0, [x19, #136]
  40d388:	str	x7, [x19, #120]
  40d38c:	ubfx	x0, x1, #1, #1
  40d390:	orr	w0, w3, w0
  40d394:	bfi	w5, w0, #1, #1
  40d398:	strb	w5, [x19, #138]
  40d39c:	str	x19, [x20, #72]
  40d3a0:	ldp	x19, x20, [sp, #16]
  40d3a4:	ldp	x21, x22, [sp, #32]
  40d3a8:	ldp	x29, x30, [sp], #208
  40d3ac:	ret
  40d3b0:	ldr	x0, [x20, #104]
  40d3b4:	cbnz	x0, 40d274 <rehash_file@@Base+0x1ec>
  40d3b8:	ldr	x0, [x20]
  40d3bc:	stp	x23, x24, [sp, #48]
  40d3c0:	bl	406680 <strlen@plt>
  40d3c4:	mov	x22, x0
  40d3c8:	mov	x0, x21
  40d3cc:	bl	406680 <strlen@plt>
  40d3d0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40d3d4:	mov	x19, x0
  40d3d8:	add	x1, x1, #0x6d8
  40d3dc:	mov	w2, #0x5                   	// #5
  40d3e0:	b	40d488 <rehash_file@@Base+0x400>
  40d3e4:	ldp	x23, x24, [sp, #48]
  40d3e8:	str	x22, [x19, #32]
  40d3ec:	b	40d238 <rehash_file@@Base+0x1b0>
  40d3f0:	mov	x1, x20
  40d3f4:	mov	x0, x22
  40d3f8:	bl	412b18 <hash_insert_at@@Base>
  40d3fc:	ldp	x19, x20, [sp, #16]
  40d400:	ldp	x21, x22, [sp, #32]
  40d404:	ldp	x29, x30, [sp], #208
  40d408:	ret
  40d40c:	ldr	x1, [x20, #104]
  40d410:	ldrb	w0, [x19, #137]
  40d414:	cbz	x1, 40d278 <rehash_file@@Base+0x1f0>
  40d418:	tbnz	w0, #3, 40d460 <rehash_file@@Base+0x3d8>
  40d41c:	str	x1, [x19, #104]
  40d420:	b	40d278 <rehash_file@@Base+0x1f0>
  40d424:	str	x2, [x19, #24]
  40d428:	b	40d258 <rehash_file@@Base+0x1d0>
  40d42c:	ldp	x23, x24, [sp, #48]
  40d430:	b	40d238 <rehash_file@@Base+0x1b0>
  40d434:	mov	w2, #0x5                   	// #5
  40d438:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40d43c:	mov	x0, #0x0                   	// #0
  40d440:	add	x1, x1, #0x628
  40d444:	bl	406cd0 <dcgettext@plt>
  40d448:	mov	x2, x0
  40d44c:	ldr	x3, [x20]
  40d450:	mov	x0, x22
  40d454:	mov	x1, x23
  40d458:	bl	41bd88 <error@@Base>
  40d45c:	b	40d1c8 <rehash_file@@Base+0x140>
  40d460:	ldr	x0, [x20]
  40d464:	stp	x23, x24, [sp, #48]
  40d468:	bl	406680 <strlen@plt>
  40d46c:	mov	x22, x0
  40d470:	mov	x0, x21
  40d474:	bl	406680 <strlen@plt>
  40d478:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40d47c:	mov	x19, x0
  40d480:	add	x1, x1, #0x710
  40d484:	mov	w2, #0x5                   	// #5
  40d488:	mov	x0, #0x0                   	// #0
  40d48c:	bl	406cd0 <dcgettext@plt>
  40d490:	ldr	x3, [x20]
  40d494:	mov	x2, x0
  40d498:	mov	x4, x21
  40d49c:	add	x1, x22, x19
  40d4a0:	mov	x0, #0x0                   	// #0
  40d4a4:	bl	41c0a0 <fatal@@Base>
  40d4a8:	stp	x23, x24, [sp, #48]
  40d4ac:	bl	406ab0 <abort@plt>

000000000040d4b0 <rename_file@@Base>:
  40d4b0:	stp	x29, x30, [sp, #-32]!
  40d4b4:	mov	x29, sp
  40d4b8:	str	x19, [sp, #16]
  40d4bc:	mov	x19, x0
  40d4c0:	bl	40d088 <rehash_file@@Base>
  40d4c4:	cbz	x19, 40d4d8 <rename_file@@Base+0x28>
  40d4c8:	ldr	x0, [x19, #8]
  40d4cc:	str	x0, [x19]
  40d4d0:	ldr	x19, [x19, #56]
  40d4d4:	cbnz	x19, 40d4c8 <rename_file@@Base+0x18>
  40d4d8:	ldr	x19, [sp, #16]
  40d4dc:	ldp	x29, x30, [sp], #32
  40d4e0:	ret
  40d4e4:	nop

000000000040d4e8 <remove_intermediates@@Base>:
  40d4e8:	adrp	x4, 449000 <commands_started@@Base+0x170>
  40d4ec:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  40d4f0:	adrp	x3, 446000 <expanding_var@@Base+0x320>
  40d4f4:	add	x2, x3, #0x2e0
  40d4f8:	ldr	w5, [x4, #2284]
  40d4fc:	ldr	w1, [x1, #3484]
  40d500:	ldr	w4, [x2, #88]
  40d504:	orr	w1, w1, w5
  40d508:	orr	w1, w1, w4
  40d50c:	cbnz	w1, 40d660 <remove_intermediates@@Base+0x178>
  40d510:	stp	x29, x30, [sp, #-96]!
  40d514:	mov	x29, sp
  40d518:	stp	x21, x22, [sp, #32]
  40d51c:	mov	w22, w0
  40d520:	cbnz	w0, 40d664 <remove_intermediates@@Base+0x17c>
  40d524:	stp	x19, x20, [sp, #16]
  40d528:	ldr	x19, [x3, #736]
  40d52c:	ldr	x21, [x2, #32]
  40d530:	add	x21, x19, x21, lsl #3
  40d534:	cmp	x19, x21
  40d538:	b.cs	40d70c <remove_intermediates@@Base+0x224>  // b.hs, b.nlast
  40d53c:	adrp	x0, 449000 <commands_started@@Base+0x170>
  40d540:	stp	x23, x24, [sp, #48]
  40d544:	adrp	x23, 429000 <_IO_stdin_used@@Base+0xe0>
  40d548:	add	x23, x23, #0xf8
  40d54c:	stp	x25, x26, [sp, #64]
  40d550:	mov	w25, #0x20                  	// #32
  40d554:	add	x26, x0, #0x820
  40d558:	mov	w24, #0x0                   	// #0
  40d55c:	movk	w25, #0x1, lsl #16
  40d560:	ldr	x20, [x19]
  40d564:	cbz	x20, 40d630 <remove_intermediates@@Base+0x148>
  40d568:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  40d56c:	ldr	x1, [x1, #72]
  40d570:	cmp	x20, x1
  40d574:	b.eq	40d630 <remove_intermediates@@Base+0x148>  // b.none
  40d578:	ldrb	w1, [x20, #137]
  40d57c:	tbz	w1, #6, 40d630 <remove_intermediates@@Base+0x148>
  40d580:	ldr	w0, [x20, #136]
  40d584:	and	w0, w0, w25
  40d588:	cmp	w0, #0x20
  40d58c:	b.eq	40d630 <remove_intermediates@@Base+0x148>  // b.none
  40d590:	mov	w0, #0xffffff90            	// #-112
  40d594:	tst	w1, w0
  40d598:	b.ne	40d630 <remove_intermediates@@Base+0x148>  // b.any
  40d59c:	ldrb	w0, [x20, #136]
  40d5a0:	and	w0, w0, #0x3
  40d5a4:	cmp	w0, #0x1
  40d5a8:	b.eq	40d630 <remove_intermediates@@Base+0x148>  // b.none
  40d5ac:	ldr	w0, [x26]
  40d5b0:	stp	x27, x28, [sp, #80]
  40d5b4:	mov	w27, #0x0                   	// #0
  40d5b8:	cbz	w0, 40d6a0 <remove_intermediates@@Base+0x1b8>
  40d5bc:	ldrb	w0, [x20, #138]
  40d5c0:	tbnz	w0, #0, 40d6c0 <remove_intermediates@@Base+0x1d8>
  40d5c4:	cbnz	w22, 40d6d4 <remove_intermediates@@Base+0x1ec>
  40d5c8:	cbnz	w24, 40d714 <remove_intermediates@@Base+0x22c>
  40d5cc:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40d5d0:	ldr	w0, [x0, #1152]
  40d5d4:	tbnz	w0, #0, 40d738 <remove_intermediates@@Base+0x250>
  40d5d8:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40d5dc:	ldr	w0, [x0, #3380]
  40d5e0:	cbnz	w0, 40d61c <remove_intermediates@@Base+0x134>
  40d5e4:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  40d5e8:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40d5ec:	add	x28, x1, #0x1b8
  40d5f0:	add	x0, x0, #0x790
  40d5f4:	ldr	x3, [x1, #440]
  40d5f8:	mov	x2, #0x3                   	// #3
  40d5fc:	mov	x1, #0x1                   	// #1
  40d600:	bl	406be0 <fwrite@plt>
  40d604:	ldr	x0, [x20]
  40d608:	mov	w24, #0x1                   	// #1
  40d60c:	ldr	x1, [x28]
  40d610:	bl	406690 <fputs@plt>
  40d614:	ldr	x0, [x28]
  40d618:	bl	406c20 <fflush@plt>
  40d61c:	tbz	w27, #31, 40d6c0 <remove_intermediates@@Base+0x1d8>
  40d620:	ldr	x1, [x20]
  40d624:	mov	x0, x23
  40d628:	bl	41bf78 <perror_with_name@@Base>
  40d62c:	ldp	x27, x28, [sp, #80]
  40d630:	add	x19, x19, #0x8
  40d634:	cmp	x21, x19
  40d638:	b.hi	40d560 <remove_intermediates@@Base+0x78>  // b.pmore
  40d63c:	cmp	w22, #0x0
  40d640:	csel	w24, w24, wzr, eq  // eq = none
  40d644:	cbnz	w24, 40d674 <remove_intermediates@@Base+0x18c>
  40d648:	ldp	x19, x20, [sp, #16]
  40d64c:	ldp	x23, x24, [sp, #48]
  40d650:	ldp	x25, x26, [sp, #64]
  40d654:	ldp	x21, x22, [sp, #32]
  40d658:	ldp	x29, x30, [sp], #96
  40d65c:	ret
  40d660:	ret
  40d664:	adrp	x0, 449000 <commands_started@@Base+0x170>
  40d668:	ldr	w0, [x0, #2080]
  40d66c:	cbz	w0, 40d524 <remove_intermediates@@Base+0x3c>
  40d670:	b	40d654 <remove_intermediates@@Base+0x16c>
  40d674:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  40d678:	mov	w0, #0xa                   	// #10
  40d67c:	ldr	x1, [x19, #440]
  40d680:	bl	406740 <putc@plt>
  40d684:	ldr	x0, [x19, #440]
  40d688:	ldp	x19, x20, [sp, #16]
  40d68c:	ldp	x21, x22, [sp, #32]
  40d690:	ldp	x23, x24, [sp, #48]
  40d694:	ldp	x25, x26, [sp, #64]
  40d698:	ldp	x29, x30, [sp], #96
  40d69c:	b	406c20 <fflush@plt>
  40d6a0:	ldr	x0, [x20]
  40d6a4:	bl	406db0 <unlink@plt>
  40d6a8:	mov	w27, w0
  40d6ac:	tbz	w0, #31, 40d5bc <remove_intermediates@@Base+0xd4>
  40d6b0:	bl	406d70 <__errno_location@plt>
  40d6b4:	ldr	w0, [x0]
  40d6b8:	cmp	w0, #0x2
  40d6bc:	b.ne	40d5bc <remove_intermediates@@Base+0xd4>  // b.any
  40d6c0:	add	x19, x19, #0x8
  40d6c4:	cmp	x21, x19
  40d6c8:	ldp	x27, x28, [sp, #80]
  40d6cc:	b.hi	40d560 <remove_intermediates@@Base+0x78>  // b.pmore
  40d6d0:	b	40d63c <remove_intermediates@@Base+0x154>
  40d6d4:	ldr	x0, [x20]
  40d6d8:	bl	406680 <strlen@plt>
  40d6dc:	mov	x28, x0
  40d6e0:	mov	w2, #0x5                   	// #5
  40d6e4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40d6e8:	mov	x0, #0x0                   	// #0
  40d6ec:	add	x1, x1, #0x748
  40d6f0:	bl	406cd0 <dcgettext@plt>
  40d6f4:	mov	x2, x0
  40d6f8:	ldr	x3, [x20]
  40d6fc:	mov	x1, x28
  40d700:	mov	x0, #0x0                   	// #0
  40d704:	bl	41bd88 <error@@Base>
  40d708:	b	40d61c <remove_intermediates@@Base+0x134>
  40d70c:	ldp	x19, x20, [sp, #16]
  40d710:	b	40d654 <remove_intermediates@@Base+0x16c>
  40d714:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40d718:	ldr	w0, [x0, #3380]
  40d71c:	cbnz	w0, 40d61c <remove_intermediates@@Base+0x134>
  40d720:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  40d724:	add	x28, x1, #0x1b8
  40d728:	mov	w0, #0x20                  	// #32
  40d72c:	ldr	x1, [x1, #440]
  40d730:	bl	406740 <putc@plt>
  40d734:	b	40d604 <remove_intermediates@@Base+0x11c>
  40d738:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40d73c:	add	x1, x1, #0x770
  40d740:	mov	w2, #0x5                   	// #5
  40d744:	mov	x0, #0x0                   	// #0
  40d748:	bl	406cd0 <dcgettext@plt>
  40d74c:	bl	406d60 <printf@plt>
  40d750:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40d754:	ldr	x0, [x0, #440]
  40d758:	bl	406c20 <fflush@plt>
  40d75c:	b	40d5d8 <remove_intermediates@@Base+0xf0>

000000000040d760 <split_prereqs@@Base>:
  40d760:	stp	x29, x30, [sp, #-48]!
  40d764:	mov	x1, #0x28                  	// #40
  40d768:	mov	w4, #0x0                   	// #0
  40d76c:	mov	x29, sp
  40d770:	mov	x3, #0x0                   	// #0
  40d774:	mov	w2, #0x100                 	// #256
  40d778:	str	x19, [sp, #16]
  40d77c:	str	x0, [sp, #40]
  40d780:	add	x0, sp, x1
  40d784:	bl	41e790 <parse_file_seq@@Base>
  40d788:	mov	x19, x0
  40d78c:	ldr	x1, [sp, #40]
  40d790:	ldrb	w0, [x1]
  40d794:	cbnz	w0, 40d7a8 <split_prereqs@@Base+0x48>
  40d798:	mov	x0, x19
  40d79c:	ldr	x19, [sp, #16]
  40d7a0:	ldp	x29, x30, [sp], #48
  40d7a4:	ret
  40d7a8:	add	x5, x1, #0x1
  40d7ac:	mov	x1, #0x28                  	// #40
  40d7b0:	add	x0, sp, #0x28
  40d7b4:	mov	w4, #0x0                   	// #0
  40d7b8:	mov	x3, #0x0                   	// #0
  40d7bc:	mov	w2, #0x1                   	// #1
  40d7c0:	str	x5, [sp, #40]
  40d7c4:	bl	41e790 <parse_file_seq@@Base>
  40d7c8:	mov	x1, x0
  40d7cc:	cbz	x19, 40d814 <split_prereqs@@Base+0xb4>
  40d7d0:	mov	x2, x19
  40d7d4:	nop
  40d7d8:	mov	x0, x2
  40d7dc:	ldr	x2, [x2]
  40d7e0:	cbnz	x2, 40d7d8 <split_prereqs@@Base+0x78>
  40d7e4:	str	x1, [x0]
  40d7e8:	cbz	x1, 40d798 <split_prereqs@@Base+0x38>
  40d7ec:	nop
  40d7f0:	ldrb	w2, [x1, #33]
  40d7f4:	orr	w2, w2, #0x2
  40d7f8:	strb	w2, [x1, #33]
  40d7fc:	ldr	x1, [x1]
  40d800:	cbnz	x1, 40d7f0 <split_prereqs@@Base+0x90>
  40d804:	mov	x0, x19
  40d808:	ldr	x19, [sp, #16]
  40d80c:	ldp	x29, x30, [sp], #48
  40d810:	ret
  40d814:	mov	x19, x0
  40d818:	b	40d7e8 <split_prereqs@@Base+0x88>
  40d81c:	nop

000000000040d820 <enter_prereqs@@Base>:
  40d820:	stp	x29, x30, [sp, #-240]!
  40d824:	mov	x29, sp
  40d828:	stp	x19, x20, [sp, #16]
  40d82c:	stp	x21, x22, [sp, #32]
  40d830:	stp	x23, x24, [sp, #48]
  40d834:	stp	x25, x26, [sp, #64]
  40d838:	stp	x27, x28, [sp, #80]
  40d83c:	cbz	x0, 40da44 <enter_prereqs@@Base+0x224>
  40d840:	mov	x19, x0
  40d844:	mov	x21, x1
  40d848:	cbz	x1, 40d9d0 <enter_prereqs@@Base+0x1b0>
  40d84c:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x40e0>
  40d850:	adrp	x26, 42b000 <_IO_stdin_used@@Base+0x20e0>
  40d854:	add	x0, x0, #0xed0
  40d858:	adrp	x25, 42b000 <_IO_stdin_used@@Base+0x20e0>
  40d85c:	bl	40c808 <variable_expand@@Base>
  40d860:	add	x26, x26, #0x248
  40d864:	mov	x22, x0
  40d868:	add	x25, x25, #0x249
  40d86c:	mov	x23, x19
  40d870:	mov	x24, #0x0                   	// #0
  40d874:	nop
  40d878:	ldr	x20, [x19, #8]
  40d87c:	mov	x0, x20
  40d880:	bl	406680 <strlen@plt>
  40d884:	add	x3, x0, #0x10
  40d888:	mov	x1, x20
  40d88c:	and	x3, x3, #0xfffffffffffffff0
  40d890:	add	x2, x0, #0x1
  40d894:	sub	sp, sp, x3
  40d898:	mov	x27, sp
  40d89c:	mov	x0, x27
  40d8a0:	bl	406640 <memcpy@plt>
  40d8a4:	mov	x0, x27
  40d8a8:	bl	41d7d8 <find_percent@@Base>
  40d8ac:	mov	x20, x0
  40d8b0:	cbz	x0, 40d9e8 <enter_prereqs@@Base+0x1c8>
  40d8b4:	ldrb	w2, [x21]
  40d8b8:	add	x28, x0, #0x1
  40d8bc:	cbnz	w2, 40da08 <enter_prereqs@@Base+0x1e8>
  40d8c0:	bl	406680 <strlen@plt>
  40d8c4:	mov	x2, x0
  40d8c8:	mov	x1, x28
  40d8cc:	mov	x0, x20
  40d8d0:	bl	406650 <memmove@plt>
  40d8d4:	mov	x0, x27
  40d8d8:	bl	406680 <strlen@plt>
  40d8dc:	add	x2, x0, #0x1
  40d8e0:	mov	x1, x27
  40d8e4:	mov	x0, x22
  40d8e8:	bl	40bbb0 <variable_buffer_output@@Base>
  40d8ec:	ldrb	w1, [x22]
  40d8f0:	cbnz	w1, 40d9d8 <enter_prereqs@@Base+0x1b8>
  40d8f4:	cmp	x23, x19
  40d8f8:	b.eq	40da38 <enter_prereqs@@Base+0x218>  // b.none
  40d8fc:	ldr	x1, [x19]
  40d900:	str	x1, [x24]
  40d904:	mov	x0, x19
  40d908:	mov	x19, x1
  40d90c:	bl	406b90 <free@plt>
  40d910:	cbnz	x19, 40d878 <enter_prereqs@@Base+0x58>
  40d914:	cbz	x23, 40da44 <enter_prereqs@@Base+0x224>
  40d918:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  40d91c:	mov	x19, x23
  40d920:	add	x20, x20, #0x2e0
  40d924:	adrp	x21, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40d928:	ldrb	w0, [x19, #33]
  40d92c:	tbnz	w0, #3, 40d9a4 <enter_prereqs@@Base+0x184>
  40d930:	ldr	x2, [x19, #8]
  40d934:	ldrb	w0, [x2]
  40d938:	cmp	w0, #0x2e
  40d93c:	b.ne	40d974 <enter_prereqs@@Base+0x154>  // b.any
  40d940:	ldrb	w0, [x2, #1]
  40d944:	cmp	w0, #0x2f
  40d948:	b.ne	40d97c <enter_prereqs@@Base+0x15c>  // b.any
  40d94c:	ldrb	w0, [x2, #2]
  40d950:	cbz	w0, 40d97c <enter_prereqs@@Base+0x15c>
  40d954:	add	x2, x2, #0x2
  40d958:	cmp	w0, #0x2f
  40d95c:	b.ne	40d96c <enter_prereqs@@Base+0x14c>  // b.any
  40d960:	ldrb	w0, [x2, #1]!
  40d964:	cmp	w0, #0x2f
  40d968:	b.eq	40d960 <enter_prereqs@@Base+0x140>  // b.none
  40d96c:	cmp	w0, #0x2e
  40d970:	b.eq	40d940 <enter_prereqs@@Base+0x120>  // b.none
  40d974:	cbnz	w0, 40d97c <enter_prereqs@@Base+0x15c>
  40d978:	add	x2, x21, #0x5f0
  40d97c:	add	x1, x29, #0x60
  40d980:	mov	x0, x20
  40d984:	str	x2, [x29, #104]
  40d988:	bl	412950 <hash_find_item@@Base>
  40d98c:	str	x0, [x19, #16]
  40d990:	cbz	x0, 40da28 <enter_prereqs@@Base+0x208>
  40d994:	ldrb	w0, [x19, #33]
  40d998:	str	xzr, [x19, #8]
  40d99c:	and	w0, w0, #0xfffffffb
  40d9a0:	strb	w0, [x19, #33]
  40d9a4:	ldr	x19, [x19]
  40d9a8:	cbnz	x19, 40d928 <enter_prereqs@@Base+0x108>
  40d9ac:	mov	sp, x29
  40d9b0:	mov	x0, x23
  40d9b4:	ldp	x19, x20, [sp, #16]
  40d9b8:	ldp	x21, x22, [sp, #32]
  40d9bc:	ldp	x23, x24, [sp, #48]
  40d9c0:	ldp	x25, x26, [sp, #64]
  40d9c4:	ldp	x27, x28, [sp, #80]
  40d9c8:	ldp	x29, x30, [sp], #240
  40d9cc:	ret
  40d9d0:	mov	x23, x0
  40d9d4:	b	40d918 <enter_prereqs@@Base+0xf8>
  40d9d8:	sub	x1, x0, x22
  40d9dc:	mov	x0, x22
  40d9e0:	bl	424a48 <strcache_add_len@@Base>
  40d9e4:	str	x0, [x19, #8]
  40d9e8:	ldrb	w0, [x19, #33]
  40d9ec:	mov	x24, x19
  40d9f0:	str	x21, [x19, #24]
  40d9f4:	orr	w0, w0, #0x4
  40d9f8:	strb	w0, [x19, #33]
  40d9fc:	ldr	x19, [x19]
  40da00:	cbnz	x19, 40d878 <enter_prereqs@@Base+0x58>
  40da04:	b	40d914 <enter_prereqs@@Base+0xf4>
  40da08:	mov	x5, x28
  40da0c:	mov	x3, x27
  40da10:	mov	x4, x25
  40da14:	mov	x2, x26
  40da18:	mov	x1, x21
  40da1c:	mov	x0, x22
  40da20:	bl	411350 <patsubst_expand_pat@@Base>
  40da24:	b	40d8ec <enter_prereqs@@Base+0xcc>
  40da28:	ldr	x0, [x19, #8]
  40da2c:	bl	40cf50 <enter_file@@Base>
  40da30:	str	x0, [x19, #16]
  40da34:	b	40d994 <enter_prereqs@@Base+0x174>
  40da38:	ldr	x23, [x23]
  40da3c:	mov	x1, x23
  40da40:	b	40d904 <enter_prereqs@@Base+0xe4>
  40da44:	mov	x23, #0x0                   	// #0
  40da48:	b	40d9ac <enter_prereqs@@Base+0x18c>
  40da4c:	nop
  40da50:	stp	x29, x30, [sp, #-96]!
  40da54:	mov	x29, sp
  40da58:	stp	x19, x20, [sp, #16]
  40da5c:	add	x20, x0, #0x18
  40da60:	stp	x21, x22, [sp, #32]
  40da64:	mov	x21, x0
  40da68:	stp	x23, x24, [sp, #48]
  40da6c:	ldr	x19, [x0, #24]
  40da70:	ldrb	w0, [x0, #137]
  40da74:	ldr	x24, [x21, #40]
  40da78:	and	w0, w0, #0xfffffffd
  40da7c:	strb	w0, [x21, #137]
  40da80:	cbz	x19, 40db5c <enter_prereqs@@Base+0x33c>
  40da84:	adrp	x23, 42d000 <_IO_stdin_used@@Base+0x40e0>
  40da88:	adrp	x22, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40da8c:	add	x23, x23, #0xed0
  40da90:	add	x22, x22, #0x798
  40da94:	stp	x25, x26, [sp, #64]
  40da98:	mov	w26, #0x0                   	// #0
  40da9c:	nop
  40daa0:	ldr	x25, [x19, #8]
  40daa4:	cbz	x25, 40dbdc <enter_prereqs@@Base+0x3bc>
  40daa8:	ldrb	w0, [x19, #33]
  40daac:	tbz	w0, #3, 40dbdc <enter_prereqs@@Base+0x3bc>
  40dab0:	tbnz	w0, #2, 40db70 <enter_prereqs@@Base+0x350>
  40dab4:	cbz	w26, 40dbcc <enter_prereqs@@Base+0x3ac>
  40dab8:	ldr	x0, [x19, #24]
  40dabc:	cbz	x0, 40dac4 <enter_prereqs@@Base+0x2a4>
  40dac0:	str	x0, [x21, #40]
  40dac4:	mov	x0, x21
  40dac8:	bl	409c90 <set_file_variables@@Base>
  40dacc:	ldr	x0, [x19, #8]
  40dad0:	mov	x1, x21
  40dad4:	bl	40ca18 <variable_expand_for_file@@Base>
  40dad8:	mov	x26, x0
  40dadc:	ldr	x1, [x19, #24]
  40dae0:	cbz	x1, 40dae8 <enter_prereqs@@Base+0x2c8>
  40dae4:	str	x24, [x21, #40]
  40dae8:	mov	x0, x25
  40daec:	bl	406b90 <free@plt>
  40daf0:	mov	x1, #0x28                  	// #40
  40daf4:	add	x0, sp, #0x58
  40daf8:	mov	w4, #0x0                   	// #0
  40dafc:	mov	x3, #0x0                   	// #0
  40db00:	mov	w2, #0x100                 	// #256
  40db04:	str	x26, [sp, #88]
  40db08:	bl	41e790 <parse_file_seq@@Base>
  40db0c:	mov	x25, x0
  40db10:	ldr	x1, [sp, #88]
  40db14:	ldrb	w0, [x1]
  40db18:	cbnz	w0, 40dbec <enter_prereqs@@Base+0x3cc>
  40db1c:	ldr	x1, [x19, #24]
  40db20:	mov	x0, x25
  40db24:	bl	40d820 <enter_prereqs@@Base>
  40db28:	cbz	x0, 40dc54 <enter_prereqs@@Base+0x434>
  40db2c:	ldr	x19, [x19]
  40db30:	str	x0, [x20]
  40db34:	ldr	x1, [x0]
  40db38:	cbz	x1, 40dc7c <enter_prereqs@@Base+0x45c>
  40db3c:	nop
  40db40:	mov	x20, x1
  40db44:	ldr	x1, [x1]
  40db48:	cbnz	x1, 40db40 <enter_prereqs@@Base+0x320>
  40db4c:	mov	w26, #0x1                   	// #1
  40db50:	str	x19, [x20]
  40db54:	cbnz	x19, 40daa0 <enter_prereqs@@Base+0x280>
  40db58:	ldp	x25, x26, [sp, #64]
  40db5c:	ldp	x19, x20, [sp, #16]
  40db60:	ldp	x21, x22, [sp, #32]
  40db64:	ldp	x23, x24, [sp, #48]
  40db68:	ldp	x29, x30, [sp], #96
  40db6c:	ret
  40db70:	mov	x0, x23
  40db74:	bl	40c808 <variable_expand@@Base>
  40db78:	mov	x1, x25
  40db7c:	mov	x3, x22
  40db80:	mov	w6, #0x0                   	// #0
  40db84:	mov	x5, #0x2                   	// #2
  40db88:	mov	x4, #0x1                   	// #1
  40db8c:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x20e0>
  40db90:	add	x2, x2, #0x248
  40db94:	bl	411148 <subst_expand@@Base>
  40db98:	mov	x1, x0
  40db9c:	mov	x0, x25
  40dba0:	strb	wzr, [x1]
  40dba4:	bl	406b90 <free@plt>
  40dba8:	adrp	x0, 449000 <commands_started@@Base+0x170>
  40dbac:	ldr	x0, [x0, #2000]
  40dbb0:	bl	41abb0 <xstrdup@@Base>
  40dbb4:	str	x0, [x19, #8]
  40dbb8:	ldrb	w1, [x19, #33]
  40dbbc:	mov	x25, x0
  40dbc0:	and	w1, w1, #0xfffffffb
  40dbc4:	strb	w1, [x19, #33]
  40dbc8:	cbnz	w26, 40dab8 <enter_prereqs@@Base+0x298>
  40dbcc:	mov	x0, x21
  40dbd0:	mov	w1, #0x0                   	// #0
  40dbd4:	bl	426890 <initialize_file_variables@@Base>
  40dbd8:	b	40dab8 <enter_prereqs@@Base+0x298>
  40dbdc:	mov	x20, x19
  40dbe0:	ldr	x19, [x19]
  40dbe4:	cbnz	x19, 40daa0 <enter_prereqs@@Base+0x280>
  40dbe8:	b	40db58 <enter_prereqs@@Base+0x338>
  40dbec:	add	x5, x1, #0x1
  40dbf0:	mov	x1, #0x28                  	// #40
  40dbf4:	add	x0, sp, #0x58
  40dbf8:	mov	w4, #0x0                   	// #0
  40dbfc:	mov	x3, #0x0                   	// #0
  40dc00:	mov	w2, #0x1                   	// #1
  40dc04:	str	x5, [sp, #88]
  40dc08:	bl	41e790 <parse_file_seq@@Base>
  40dc0c:	mov	x1, x0
  40dc10:	cbz	x25, 40dc74 <enter_prereqs@@Base+0x454>
  40dc14:	mov	x2, x25
  40dc18:	mov	x0, x2
  40dc1c:	ldr	x2, [x2]
  40dc20:	cbnz	x2, 40dc18 <enter_prereqs@@Base+0x3f8>
  40dc24:	str	x1, [x0]
  40dc28:	cbz	x1, 40db1c <enter_prereqs@@Base+0x2fc>
  40dc2c:	nop
  40dc30:	ldrb	w2, [x1, #33]
  40dc34:	orr	w2, w2, #0x2
  40dc38:	strb	w2, [x1, #33]
  40dc3c:	ldr	x1, [x1]
  40dc40:	cbnz	x1, 40dc30 <enter_prereqs@@Base+0x410>
  40dc44:	ldr	x1, [x19, #24]
  40dc48:	mov	x0, x25
  40dc4c:	bl	40d820 <enter_prereqs@@Base>
  40dc50:	cbnz	x0, 40db2c <enter_prereqs@@Base+0x30c>
  40dc54:	ldr	x0, [x19]
  40dc58:	str	x0, [x20]
  40dc5c:	mov	x0, x19
  40dc60:	mov	w26, #0x1                   	// #1
  40dc64:	bl	406b90 <free@plt>
  40dc68:	ldr	x19, [x20]
  40dc6c:	cbnz	x19, 40daa0 <enter_prereqs@@Base+0x280>
  40dc70:	b	40db58 <enter_prereqs@@Base+0x338>
  40dc74:	mov	x25, x0
  40dc78:	b	40dc28 <enter_prereqs@@Base+0x408>
  40dc7c:	mov	x20, x0
  40dc80:	mov	w26, #0x1                   	// #1
  40dc84:	str	x19, [x20]
  40dc88:	b	40db54 <enter_prereqs@@Base+0x334>
  40dc8c:	nop

000000000040dc90 <expand_extra_prereqs@@Base>:
  40dc90:	stp	x29, x30, [sp, #-192]!
  40dc94:	mov	x29, sp
  40dc98:	stp	x21, x22, [sp, #32]
  40dc9c:	cbz	x0, 40de00 <expand_extra_prereqs@@Base+0x170>
  40dca0:	ldr	x0, [x0, #8]
  40dca4:	bl	40c808 <variable_expand@@Base>
  40dca8:	mov	x5, x0
  40dcac:	mov	x1, #0x28                  	// #40
  40dcb0:	add	x0, sp, #0x30
  40dcb4:	mov	w4, #0x0                   	// #0
  40dcb8:	mov	x3, #0x0                   	// #0
  40dcbc:	mov	w2, #0x100                 	// #256
  40dcc0:	str	x5, [sp, #48]
  40dcc4:	bl	41e790 <parse_file_seq@@Base>
  40dcc8:	mov	x21, x0
  40dccc:	ldr	x1, [sp, #48]
  40dcd0:	ldrb	w0, [x1]
  40dcd4:	cbnz	w0, 40dda4 <expand_extra_prereqs@@Base+0x114>
  40dcd8:	cbz	x21, 40de00 <expand_extra_prereqs@@Base+0x170>
  40dcdc:	stp	x19, x20, [sp, #16]
  40dce0:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  40dce4:	mov	x19, x21
  40dce8:	add	x20, x20, #0x2e0
  40dcec:	adrp	x22, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40dcf0:	ldr	x2, [x19, #8]
  40dcf4:	ldrb	w1, [x2]
  40dcf8:	cmp	w1, #0x2e
  40dcfc:	b.ne	40dd34 <expand_extra_prereqs@@Base+0xa4>  // b.any
  40dd00:	ldrb	w0, [x2, #1]
  40dd04:	cmp	w0, #0x2f
  40dd08:	b.ne	40dd3c <expand_extra_prereqs@@Base+0xac>  // b.any
  40dd0c:	ldrb	w1, [x2, #2]
  40dd10:	cbz	w1, 40dd3c <expand_extra_prereqs@@Base+0xac>
  40dd14:	add	x2, x2, #0x2
  40dd18:	cmp	w1, #0x2f
  40dd1c:	b.ne	40dd2c <expand_extra_prereqs@@Base+0x9c>  // b.any
  40dd20:	ldrb	w1, [x2, #1]!
  40dd24:	cmp	w1, #0x2f
  40dd28:	b.eq	40dd20 <expand_extra_prereqs@@Base+0x90>  // b.none
  40dd2c:	cmp	w1, #0x2e
  40dd30:	b.eq	40dd00 <expand_extra_prereqs@@Base+0x70>  // b.none
  40dd34:	cbnz	w1, 40dd3c <expand_extra_prereqs@@Base+0xac>
  40dd38:	add	x2, x22, #0x5f0
  40dd3c:	add	x1, sp, #0x30
  40dd40:	mov	x0, x20
  40dd44:	str	x2, [sp, #56]
  40dd48:	bl	412950 <hash_find_item@@Base>
  40dd4c:	str	x0, [x19, #16]
  40dd50:	cbz	x0, 40dd80 <expand_extra_prereqs@@Base+0xf0>
  40dd54:	ldrb	w1, [x19, #33]
  40dd58:	str	xzr, [x19, #8]
  40dd5c:	orr	w1, w1, #0x10
  40dd60:	strb	w1, [x19, #33]
  40dd64:	ldr	x19, [x19]
  40dd68:	cbnz	x19, 40dcf0 <expand_extra_prereqs@@Base+0x60>
  40dd6c:	ldp	x19, x20, [sp, #16]
  40dd70:	mov	x0, x21
  40dd74:	ldp	x21, x22, [sp, #32]
  40dd78:	ldp	x29, x30, [sp], #192
  40dd7c:	ret
  40dd80:	ldr	x0, [x19, #8]
  40dd84:	bl	40cf50 <enter_file@@Base>
  40dd88:	stp	xzr, x0, [x19, #8]
  40dd8c:	ldrb	w1, [x19, #33]
  40dd90:	orr	w1, w1, #0x10
  40dd94:	strb	w1, [x19, #33]
  40dd98:	ldr	x19, [x19]
  40dd9c:	cbnz	x19, 40dcf0 <expand_extra_prereqs@@Base+0x60>
  40dda0:	b	40dd6c <expand_extra_prereqs@@Base+0xdc>
  40dda4:	add	x5, x1, #0x1
  40dda8:	add	x0, sp, #0x30
  40ddac:	mov	w4, #0x0                   	// #0
  40ddb0:	mov	x3, #0x0                   	// #0
  40ddb4:	mov	w2, #0x1                   	// #1
  40ddb8:	mov	x1, #0x28                  	// #40
  40ddbc:	str	x5, [sp, #48]
  40ddc0:	bl	41e790 <parse_file_seq@@Base>
  40ddc4:	cbz	x21, 40de14 <expand_extra_prereqs@@Base+0x184>
  40ddc8:	mov	x1, x21
  40ddcc:	nop
  40ddd0:	mov	x2, x1
  40ddd4:	ldr	x1, [x1]
  40ddd8:	cbnz	x1, 40ddd0 <expand_extra_prereqs@@Base+0x140>
  40dddc:	str	x0, [x2]
  40dde0:	cbz	x0, 40dcdc <expand_extra_prereqs@@Base+0x4c>
  40dde4:	nop
  40dde8:	ldrb	w1, [x0, #33]
  40ddec:	orr	w1, w1, #0x2
  40ddf0:	strb	w1, [x0, #33]
  40ddf4:	ldr	x0, [x0]
  40ddf8:	cbnz	x0, 40dde8 <expand_extra_prereqs@@Base+0x158>
  40ddfc:	b	40dcd8 <expand_extra_prereqs@@Base+0x48>
  40de00:	mov	x21, #0x0                   	// #0
  40de04:	mov	x0, x21
  40de08:	ldp	x21, x22, [sp, #32]
  40de0c:	ldp	x29, x30, [sp], #192
  40de10:	ret
  40de14:	cbz	x0, 40dd70 <expand_extra_prereqs@@Base+0xe0>
  40de18:	mov	x21, x0
  40de1c:	b	40dde8 <expand_extra_prereqs@@Base+0x158>
  40de20:	stp	x29, x30, [sp, #-64]!
  40de24:	adrp	x2, 449000 <commands_started@@Base+0x170>
  40de28:	mov	x29, sp
  40de2c:	stp	x21, x22, [sp, #32]
  40de30:	mov	x21, x0
  40de34:	ldr	w0, [x2, #2092]
  40de38:	cbnz	w0, 40de48 <expand_extra_prereqs@@Base+0x1b8>
  40de3c:	ldrb	w0, [x21, #137]
  40de40:	and	w0, w0, #0xfffffffd
  40de44:	strb	w0, [x21, #137]
  40de48:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40de4c:	ldr	w0, [x0, #824]
  40de50:	cbz	w0, 40de60 <expand_extra_prereqs@@Base+0x1d0>
  40de54:	ldrb	w0, [x21, #137]
  40de58:	orr	w0, w0, #0x40
  40de5c:	strb	w0, [x21, #137]
  40de60:	ldr	x0, [x21, #80]
  40de64:	cbz	x0, 40df38 <expand_extra_prereqs@@Base+0x2a8>
  40de68:	ldr	x2, [x0, #8]
  40de6c:	mov	x1, #0xe                   	// #14
  40de70:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40de74:	add	x0, x0, #0x7a0
  40de78:	bl	4259e8 <lookup_variable_in_set@@Base>
  40de7c:	bl	40dc90 <expand_extra_prereqs@@Base>
  40de80:	mov	x22, x0
  40de84:	cbz	x22, 40df10 <expand_extra_prereqs@@Base+0x280>
  40de88:	stp	x19, x20, [sp, #16]
  40de8c:	mov	x19, x22
  40de90:	ldr	x20, [x21]
  40de94:	str	x23, [sp, #48]
  40de98:	add	x23, x20, #0x1
  40de9c:	b	40dea8 <expand_extra_prereqs@@Base+0x218>
  40dea0:	ldr	x19, [x19]
  40dea4:	cbz	x19, 40defc <expand_extra_prereqs@@Base+0x26c>
  40dea8:	ldr	x2, [x19, #8]
  40deac:	mov	x1, x2
  40deb0:	cbz	x2, 40df1c <expand_extra_prereqs@@Base+0x28c>
  40deb4:	cmp	x20, x1
  40deb8:	b.eq	40dee4 <expand_extra_prereqs@@Base+0x254>  // b.none
  40debc:	ldrb	w4, [x20]
  40dec0:	ldrb	w3, [x1]
  40dec4:	cmp	w3, w4
  40dec8:	b.ne	40dea0 <expand_extra_prereqs@@Base+0x210>  // b.any
  40decc:	add	x1, x2, #0x1
  40ded0:	cbz	w3, 40dee4 <expand_extra_prereqs@@Base+0x254>
  40ded4:	cbz	x2, 40df28 <expand_extra_prereqs@@Base+0x298>
  40ded8:	mov	x0, x23
  40dedc:	bl	406b40 <strcmp@plt>
  40dee0:	cbnz	w0, 40dea0 <expand_extra_prereqs@@Base+0x210>
  40dee4:	mov	x0, x22
  40dee8:	ldp	x19, x20, [sp, #16]
  40deec:	ldp	x21, x22, [sp, #32]
  40def0:	ldr	x23, [sp, #48]
  40def4:	ldp	x29, x30, [sp], #64
  40def8:	b	41aee0 <free_ns_chain@@Base>
  40defc:	ldr	x1, [x21, #24]
  40df00:	cbnz	x1, 40df54 <expand_extra_prereqs@@Base+0x2c4>
  40df04:	ldp	x19, x20, [sp, #16]
  40df08:	ldr	x23, [sp, #48]
  40df0c:	str	x22, [x21, #24]
  40df10:	ldp	x21, x22, [sp, #32]
  40df14:	ldp	x29, x30, [sp], #64
  40df18:	ret
  40df1c:	ldr	x0, [x19, #16]
  40df20:	ldr	x1, [x0]
  40df24:	b	40deb4 <expand_extra_prereqs@@Base+0x224>
  40df28:	ldr	x0, [x19, #16]
  40df2c:	ldr	x1, [x0]
  40df30:	add	x1, x1, #0x1
  40df34:	b	40ded8 <expand_extra_prereqs@@Base+0x248>
  40df38:	ldrb	w0, [x21, #137]
  40df3c:	tbz	w0, #3, 40df10 <expand_extra_prereqs@@Base+0x280>
  40df40:	mov	x0, x1
  40df44:	bl	41ae38 <copy_dep_chain@@Base>
  40df48:	mov	x22, x0
  40df4c:	cbnz	x22, 40de88 <expand_extra_prereqs@@Base+0x1f8>
  40df50:	b	40df10 <expand_extra_prereqs@@Base+0x280>
  40df54:	mov	x0, x1
  40df58:	ldr	x1, [x1]
  40df5c:	cbnz	x1, 40df54 <expand_extra_prereqs@@Base+0x2c4>
  40df60:	ldp	x19, x20, [sp, #16]
  40df64:	ldr	x23, [sp, #48]
  40df68:	str	x22, [x0]
  40df6c:	ldp	x21, x22, [sp, #32]
  40df70:	ldp	x29, x30, [sp], #64
  40df74:	ret

000000000040df78 <snap_deps@@Base>:
  40df78:	stp	x29, x30, [sp, #-208]!
  40df7c:	adrp	x0, 449000 <commands_started@@Base+0x170>
  40df80:	mov	w1, #0x1                   	// #1
  40df84:	mov	x29, sp
  40df88:	stp	x19, x20, [sp, #16]
  40df8c:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  40df90:	add	x19, x19, #0x2e0
  40df94:	ldr	w0, [x0, #2092]
  40df98:	str	w1, [x19, #92]
  40df9c:	cbnz	w0, 40e2d4 <snap_deps@@Base+0x35c>
  40dfa0:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40dfa4:	add	x2, x2, #0x7b0
  40dfa8:	add	x1, sp, #0x40
  40dfac:	mov	x0, x19
  40dfb0:	str	x2, [sp, #72]
  40dfb4:	bl	412950 <hash_find_item@@Base>
  40dfb8:	mov	x3, x0
  40dfbc:	cbz	x0, 40dff4 <snap_deps@@Base+0x7c>
  40dfc0:	ldr	x2, [x3, #24]
  40dfc4:	cbz	x2, 40dfec <snap_deps@@Base+0x74>
  40dfc8:	ldr	x0, [x2, #16]
  40dfcc:	cbz	x0, 40dfe4 <snap_deps@@Base+0x6c>
  40dfd0:	ldrb	w1, [x0, #136]
  40dfd4:	orr	w1, w1, #0x20
  40dfd8:	strb	w1, [x0, #136]
  40dfdc:	ldr	x0, [x0, #56]
  40dfe0:	cbnz	x0, 40dfd0 <snap_deps@@Base+0x58>
  40dfe4:	ldr	x2, [x2]
  40dfe8:	cbnz	x2, 40dfc8 <snap_deps@@Base+0x50>
  40dfec:	ldr	x3, [x3, #56]
  40dff0:	cbnz	x3, 40dfc0 <snap_deps@@Base+0x48>
  40dff4:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40dff8:	add	x2, x2, #0x7c0
  40dffc:	add	x1, sp, #0x40
  40e000:	mov	x0, x19
  40e004:	str	x2, [sp, #72]
  40e008:	bl	412950 <hash_find_item@@Base>
  40e00c:	mov	x3, x0
  40e010:	cbz	x0, 40e04c <snap_deps@@Base+0xd4>
  40e014:	nop
  40e018:	ldr	x2, [x3, #24]
  40e01c:	cbz	x2, 40e044 <snap_deps@@Base+0xcc>
  40e020:	ldr	x0, [x2, #16]
  40e024:	cbz	x0, 40e03c <snap_deps@@Base+0xc4>
  40e028:	ldrb	w1, [x0, #136]
  40e02c:	orr	w1, w1, #0xffffff80
  40e030:	strb	w1, [x0, #136]
  40e034:	ldr	x0, [x0, #56]
  40e038:	cbnz	x0, 40e028 <snap_deps@@Base+0xb0>
  40e03c:	ldr	x2, [x2]
  40e040:	cbnz	x2, 40e020 <snap_deps@@Base+0xa8>
  40e044:	ldr	x3, [x3, #56]
  40e048:	cbnz	x3, 40e018 <snap_deps@@Base+0xa0>
  40e04c:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e050:	add	x2, x2, #0x7d8
  40e054:	add	x1, sp, #0x40
  40e058:	mov	x0, x19
  40e05c:	str	x2, [sp, #72]
  40e060:	bl	412950 <hash_find_item@@Base>
  40e064:	mov	x5, x0
  40e068:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e06c:	mov	w3, #0xffffffd7            	// #-41
  40e070:	mov	w2, #0x28                  	// #40
  40e074:	ldr	q0, [x0, #3088]
  40e078:	cbz	x5, 40e0bc <snap_deps@@Base+0x144>
  40e07c:	nop
  40e080:	ldr	x4, [x5, #24]
  40e084:	cbz	x4, 40e0b4 <snap_deps@@Base+0x13c>
  40e088:	ldr	x0, [x4, #16]
  40e08c:	cbz	x0, 40e0ac <snap_deps@@Base+0x134>
  40e090:	ldrb	w1, [x0, #137]
  40e094:	str	q0, [x0, #112]
  40e098:	and	w1, w1, w3
  40e09c:	orr	w1, w1, w2
  40e0a0:	strb	w1, [x0, #137]
  40e0a4:	ldr	x0, [x0, #56]
  40e0a8:	cbnz	x0, 40e090 <snap_deps@@Base+0x118>
  40e0ac:	ldr	x4, [x4]
  40e0b0:	cbnz	x4, 40e088 <snap_deps@@Base+0x110>
  40e0b4:	ldr	x5, [x5, #56]
  40e0b8:	cbnz	x5, 40e080 <snap_deps@@Base+0x108>
  40e0bc:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e0c0:	add	x2, x2, #0x7e0
  40e0c4:	add	x1, sp, #0x40
  40e0c8:	mov	x0, x19
  40e0cc:	str	x2, [sp, #72]
  40e0d0:	bl	412950 <hash_find_item@@Base>
  40e0d4:	mov	x3, x0
  40e0d8:	cbz	x0, 40e114 <snap_deps@@Base+0x19c>
  40e0dc:	nop
  40e0e0:	ldr	x2, [x3, #24]
  40e0e4:	cbz	x2, 40e10c <snap_deps@@Base+0x194>
  40e0e8:	ldr	x0, [x2, #16]
  40e0ec:	cbz	x0, 40e104 <snap_deps@@Base+0x18c>
  40e0f0:	ldrb	w1, [x0, #137]
  40e0f4:	orr	w1, w1, #0x40
  40e0f8:	strb	w1, [x0, #137]
  40e0fc:	ldr	x0, [x0, #56]
  40e100:	cbnz	x0, 40e0f0 <snap_deps@@Base+0x178>
  40e104:	ldr	x2, [x2]
  40e108:	cbnz	x2, 40e0e8 <snap_deps@@Base+0x170>
  40e10c:	ldr	x3, [x3, #56]
  40e110:	cbnz	x3, 40e0e0 <snap_deps@@Base+0x168>
  40e114:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e118:	add	x2, x2, #0x7f0
  40e11c:	add	x1, sp, #0x40
  40e120:	mov	x0, x19
  40e124:	str	x2, [sp, #72]
  40e128:	bl	412950 <hash_find_item@@Base>
  40e12c:	mov	x3, x0
  40e130:	cbz	x0, 40e18c <snap_deps@@Base+0x214>
  40e134:	ldr	w5, [x19, #88]
  40e138:	mov	w4, #0x0                   	// #0
  40e13c:	b	40e150 <snap_deps@@Base+0x1d8>
  40e140:	ldr	x3, [x3, #56]
  40e144:	mov	w4, #0x1                   	// #1
  40e148:	mov	w5, w4
  40e14c:	cbz	x3, 40e184 <snap_deps@@Base+0x20c>
  40e150:	ldr	x2, [x3, #24]
  40e154:	cbz	x2, 40e140 <snap_deps@@Base+0x1c8>
  40e158:	ldr	x0, [x2, #16]
  40e15c:	cbz	x0, 40e174 <snap_deps@@Base+0x1fc>
  40e160:	ldrb	w1, [x0, #137]
  40e164:	orr	w1, w1, #0xffffffc0
  40e168:	strb	w1, [x0, #137]
  40e16c:	ldr	x0, [x0, #56]
  40e170:	cbnz	x0, 40e160 <snap_deps@@Base+0x1e8>
  40e174:	ldr	x2, [x2]
  40e178:	cbnz	x2, 40e158 <snap_deps@@Base+0x1e0>
  40e17c:	ldr	x3, [x3, #56]
  40e180:	cbnz	x3, 40e150 <snap_deps@@Base+0x1d8>
  40e184:	cbz	w4, 40e18c <snap_deps@@Base+0x214>
  40e188:	str	w5, [x19, #88]
  40e18c:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e190:	add	x2, x2, #0x800
  40e194:	add	x1, sp, #0x40
  40e198:	mov	x0, x19
  40e19c:	str	x2, [sp, #72]
  40e1a0:	bl	412950 <hash_find_item@@Base>
  40e1a4:	cbz	x0, 40e1b0 <snap_deps@@Base+0x238>
  40e1a8:	ldrb	w0, [x0, #137]
  40e1ac:	tbnz	w0, #3, 40e2c4 <snap_deps@@Base+0x34c>
  40e1b0:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e1b4:	add	x2, x2, #0x818
  40e1b8:	add	x1, sp, #0x40
  40e1bc:	mov	x0, x19
  40e1c0:	str	x2, [sp, #72]
  40e1c4:	bl	412950 <hash_find_item@@Base>
  40e1c8:	cbz	x0, 40e204 <snap_deps@@Base+0x28c>
  40e1cc:	ldrb	w1, [x0, #137]
  40e1d0:	tbz	w1, #3, 40e204 <snap_deps@@Base+0x28c>
  40e1d4:	ldr	x2, [x0, #24]
  40e1d8:	cbz	x2, 40e3ac <snap_deps@@Base+0x434>
  40e1dc:	ldr	x0, [x2, #16]
  40e1e0:	cbz	x0, 40e1fc <snap_deps@@Base+0x284>
  40e1e4:	nop
  40e1e8:	ldr	w1, [x0, #132]
  40e1ec:	orr	w1, w1, #0x4
  40e1f0:	str	w1, [x0, #132]
  40e1f4:	ldr	x0, [x0, #56]
  40e1f8:	cbnz	x0, 40e1e8 <snap_deps@@Base+0x270>
  40e1fc:	ldr	x2, [x2]
  40e200:	cbnz	x2, 40e1dc <snap_deps@@Base+0x264>
  40e204:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e208:	add	x2, x2, #0x820
  40e20c:	add	x1, sp, #0x40
  40e210:	mov	x0, x19
  40e214:	str	x2, [sp, #72]
  40e218:	bl	412950 <hash_find_item@@Base>
  40e21c:	cbz	x0, 40e254 <snap_deps@@Base+0x2dc>
  40e220:	ldrb	w1, [x0, #137]
  40e224:	tbz	w1, #3, 40e254 <snap_deps@@Base+0x2dc>
  40e228:	ldr	x2, [x0, #24]
  40e22c:	cbz	x2, 40e39c <snap_deps@@Base+0x424>
  40e230:	ldr	x0, [x2, #16]
  40e234:	cbz	x0, 40e24c <snap_deps@@Base+0x2d4>
  40e238:	ldr	w1, [x0, #132]
  40e23c:	orr	w1, w1, #0x2
  40e240:	str	w1, [x0, #132]
  40e244:	ldr	x0, [x0, #56]
  40e248:	cbnz	x0, 40e238 <snap_deps@@Base+0x2c0>
  40e24c:	ldr	x2, [x2]
  40e250:	cbnz	x2, 40e230 <snap_deps@@Base+0x2b8>
  40e254:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e258:	add	x2, x2, #0x828
  40e25c:	add	x1, sp, #0x40
  40e260:	mov	x0, x19
  40e264:	str	x2, [sp, #72]
  40e268:	bl	412950 <hash_find_item@@Base>
  40e26c:	cbz	x0, 40e284 <snap_deps@@Base+0x30c>
  40e270:	ldrb	w0, [x0, #137]
  40e274:	tbz	w0, #3, 40e284 <snap_deps@@Base+0x30c>
  40e278:	adrp	x0, 449000 <commands_started@@Base+0x170>
  40e27c:	mov	w1, #0x1                   	// #1
  40e280:	str	w1, [x0, #2116]
  40e284:	mov	x1, #0xe                   	// #14
  40e288:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e28c:	add	x0, x0, #0x7a0
  40e290:	bl	4257c8 <lookup_variable@@Base>
  40e294:	bl	40dc90 <expand_extra_prereqs@@Base>
  40e298:	mov	x2, x0
  40e29c:	adrp	x1, 40d000 <enter_file@@Base+0xb0>
  40e2a0:	add	x1, x1, #0xe20
  40e2a4:	mov	x20, x0
  40e2a8:	mov	x0, x19
  40e2ac:	bl	412ec8 <hash_map_arg@@Base>
  40e2b0:	mov	x0, x20
  40e2b4:	bl	41aee0 <free_ns_chain@@Base>
  40e2b8:	ldp	x19, x20, [sp, #16]
  40e2bc:	ldp	x29, x30, [sp], #208
  40e2c0:	ret
  40e2c4:	adrp	x0, 449000 <commands_started@@Base+0x170>
  40e2c8:	mov	w1, #0x1                   	// #1
  40e2cc:	str	w1, [x0, #2340]
  40e2d0:	b	40e1b0 <snap_deps@@Base+0x238>
  40e2d4:	mov	x2, #0x0                   	// #0
  40e2d8:	mov	x1, #0x0                   	// #0
  40e2dc:	mov	x0, x19
  40e2e0:	stp	x21, x22, [sp, #32]
  40e2e4:	mov	x21, #0x0                   	// #0
  40e2e8:	stp	x23, x24, [sp, #48]
  40e2ec:	bl	413008 <hash_dump@@Base>
  40e2f0:	adrp	x2, 429000 <_IO_stdin_used@@Base+0xe0>
  40e2f4:	ldr	x23, [x19, #48]
  40e2f8:	add	x2, x2, #0x108
  40e2fc:	mov	x24, x0
  40e300:	add	x1, sp, #0x40
  40e304:	mov	x0, x19
  40e308:	str	x2, [sp, #72]
  40e30c:	add	x23, x24, x23, lsl #3
  40e310:	bl	412950 <hash_find_item@@Base>
  40e314:	mov	x20, x0
  40e318:	cbz	x0, 40e330 <snap_deps@@Base+0x3b8>
  40e31c:	ldr	x21, [x0]
  40e320:	mov	x0, x20
  40e324:	bl	40da50 <enter_prereqs@@Base+0x230>
  40e328:	ldr	x20, [x20, #56]
  40e32c:	cbnz	x20, 40e320 <snap_deps@@Base+0x3a8>
  40e330:	cmp	x24, x23
  40e334:	mov	x22, x24
  40e338:	b.cs	40e370 <snap_deps@@Base+0x3f8>  // b.hs, b.nlast
  40e33c:	ldr	x20, [x22]
  40e340:	cbz	x20, 40e364 <snap_deps@@Base+0x3ec>
  40e344:	nop
  40e348:	ldr	x1, [x20]
  40e34c:	mov	x0, x20
  40e350:	cmp	x1, x21
  40e354:	b.eq	40e384 <snap_deps@@Base+0x40c>  // b.none
  40e358:	bl	40da50 <enter_prereqs@@Base+0x230>
  40e35c:	ldr	x20, [x20, #56]
  40e360:	cbnz	x20, 40e348 <snap_deps@@Base+0x3d0>
  40e364:	add	x22, x22, #0x8
  40e368:	cmp	x23, x22
  40e36c:	b.hi	40e33c <snap_deps@@Base+0x3c4>  // b.pmore
  40e370:	mov	x0, x24
  40e374:	bl	406b90 <free@plt>
  40e378:	ldp	x21, x22, [sp, #32]
  40e37c:	ldp	x23, x24, [sp, #48]
  40e380:	b	40dfa0 <snap_deps@@Base+0x28>
  40e384:	ldr	x20, [x20, #56]
  40e388:	cbnz	x20, 40e348 <snap_deps@@Base+0x3d0>
  40e38c:	add	x22, x22, #0x8
  40e390:	cmp	x23, x22
  40e394:	b.hi	40e33c <snap_deps@@Base+0x3c4>  // b.pmore
  40e398:	b	40e370 <snap_deps@@Base+0x3f8>
  40e39c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40e3a0:	mov	w1, #0x1                   	// #1
  40e3a4:	str	w1, [x0, #3380]
  40e3a8:	b	40e254 <snap_deps@@Base+0x2dc>
  40e3ac:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40e3b0:	mov	w1, #0x1                   	// #1
  40e3b4:	str	w1, [x0, #3488]
  40e3b8:	b	40e204 <snap_deps@@Base+0x28c>
  40e3bc:	nop

000000000040e3c0 <set_command_state@@Base>:
  40e3c0:	ldrb	w3, [x0, #136]
  40e3c4:	and	w5, w1, #0x3
  40e3c8:	ldr	x2, [x0, #48]
  40e3cc:	bfi	w3, w5, #2, #2
  40e3d0:	strb	w3, [x0, #136]
  40e3d4:	cbz	x2, 40e400 <set_command_state@@Base+0x40>
  40e3d8:	ldr	x3, [x2, #16]
  40e3dc:	ldrb	w0, [x3, #136]
  40e3e0:	mov	w4, w0
  40e3e4:	ubfx	x0, x0, #2, #2
  40e3e8:	bfi	w4, w5, #2, #2
  40e3ec:	cmp	w0, w1
  40e3f0:	b.cs	40e404 <set_command_state@@Base+0x44>  // b.hs, b.nlast
  40e3f4:	strb	w4, [x3, #136]
  40e3f8:	ldr	x2, [x2]
  40e3fc:	cbnz	x2, 40e3d8 <set_command_state@@Base+0x18>
  40e400:	ret
  40e404:	ldr	x2, [x2]
  40e408:	cbnz	x2, 40e3d8 <set_command_state@@Base+0x18>
  40e40c:	ret

000000000040e410 <file_timestamp_sprintf@@Base>:
  40e410:	stp	x29, x30, [sp, #-48]!
  40e414:	mov	x29, sp
  40e418:	stp	x19, x20, [sp, #16]
  40e41c:	mov	x20, x1
  40e420:	sub	x1, x1, #0x3
  40e424:	mov	x19, x0
  40e428:	add	x0, sp, #0x28
  40e42c:	lsr	x1, x1, #30
  40e430:	str	x1, [sp, #40]
  40e434:	bl	406860 <localtime@plt>
  40e438:	cbz	x0, 40e4cc <file_timestamp_sprintf@@Base+0xbc>
  40e43c:	mov	x2, x0
  40e440:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e444:	mov	x0, x19
  40e448:	add	x1, x1, #0x838
  40e44c:	ldp	w7, w6, [x2]
  40e450:	ldp	w5, w4, [x2, #8]
  40e454:	ldp	w3, w2, [x2, #16]
  40e458:	add	w3, w3, #0x1
  40e45c:	add	w2, w2, #0x76c
  40e460:	bl	406730 <sprintf@plt>
  40e464:	mov	x0, x19
  40e468:	bl	406680 <strlen@plt>
  40e46c:	sub	w2, w20, #0x3
  40e470:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e474:	and	w2, w2, #0x3fffffff
  40e478:	add	x1, x1, #0x860
  40e47c:	add	x19, x19, x0
  40e480:	mov	x0, x19
  40e484:	bl	406730 <sprintf@plt>
  40e488:	mov	x0, x19
  40e48c:	bl	406680 <strlen@plt>
  40e490:	sub	x0, x0, #0x1
  40e494:	add	x1, x19, x0
  40e498:	ldrb	w0, [x19, x0]
  40e49c:	cmp	w0, #0x30
  40e4a0:	b.ne	40e4b4 <file_timestamp_sprintf@@Base+0xa4>  // b.any
  40e4a4:	nop
  40e4a8:	ldrb	w0, [x1, #-1]!
  40e4ac:	cmp	w0, #0x30
  40e4b0:	b.eq	40e4a8 <file_timestamp_sprintf@@Base+0x98>  // b.none
  40e4b4:	cmp	w0, #0x2e
  40e4b8:	cset	w0, ne  // ne = any
  40e4bc:	strb	wzr, [x1, w0, uxtw]
  40e4c0:	ldp	x19, x20, [sp, #16]
  40e4c4:	ldp	x29, x30, [sp], #48
  40e4c8:	ret
  40e4cc:	ldr	x2, [sp, #40]
  40e4d0:	tbnz	x2, #63, 40e4e8 <file_timestamp_sprintf@@Base+0xd8>
  40e4d4:	mov	x0, x19
  40e4d8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  40e4dc:	add	x1, x1, #0x48
  40e4e0:	bl	406730 <sprintf@plt>
  40e4e4:	b	40e464 <file_timestamp_sprintf@@Base+0x54>
  40e4e8:	mov	x0, x19
  40e4ec:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e4f0:	add	x1, x1, #0x858
  40e4f4:	bl	406730 <sprintf@plt>
  40e4f8:	b	40e464 <file_timestamp_sprintf@@Base+0x54>
  40e4fc:	nop

000000000040e500 <file_timestamp_cons@@Base>:
  40e500:	stp	x29, x30, [sp, #-96]!
  40e504:	add	w2, w2, #0x3
  40e508:	mov	x3, #0xffffffffffffca02    	// #-13822
  40e50c:	mov	x29, sp
  40e510:	sxtw	x2, w2
  40e514:	stp	x19, x20, [sp, #16]
  40e518:	lsl	x19, x1, #30
  40e51c:	adds	x19, x2, x19
  40e520:	mov	x20, x1
  40e524:	movk	x3, #0xfb9a, lsl #16
  40e528:	ccmp	x19, x3, #0x2, cc  // cc = lo, ul, last
  40e52c:	mov	x1, #0x3ffffffff           	// #17179869183
  40e530:	ccmp	x20, x1, #0x2, ls  // ls = plast
  40e534:	b.ls	40e5ac <file_timestamp_cons@@Base+0xac>  // b.plast
  40e538:	stp	x21, x22, [sp, #32]
  40e53c:	mov	x21, x0
  40e540:	cbz	x0, 40e5bc <file_timestamp_cons@@Base+0xbc>
  40e544:	cmp	x20, #0x3
  40e548:	mov	x2, #0xffffffffffffca02    	// #-13822
  40e54c:	movk	x2, #0xfb9a, lsl #16
  40e550:	mov	x19, #0x3                   	// #3
  40e554:	csel	x19, x19, x2, cc  // cc = lo, ul, last
  40e558:	add	x0, sp, #0x30
  40e55c:	mov	x1, x19
  40e560:	bl	40e410 <file_timestamp_sprintf@@Base>
  40e564:	mov	x0, x21
  40e568:	bl	406680 <strlen@plt>
  40e56c:	mov	x22, x0
  40e570:	add	x0, sp, #0x30
  40e574:	bl	406680 <strlen@plt>
  40e578:	mov	w2, #0x5                   	// #5
  40e57c:	mov	x20, x0
  40e580:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e584:	mov	x0, #0x0                   	// #0
  40e588:	add	x1, x1, #0x878
  40e58c:	bl	406cd0 <dcgettext@plt>
  40e590:	mov	x3, x21
  40e594:	mov	x2, x0
  40e598:	add	x1, x22, x20
  40e59c:	add	x4, sp, #0x30
  40e5a0:	mov	x0, #0x0                   	// #0
  40e5a4:	bl	41bd88 <error@@Base>
  40e5a8:	ldp	x21, x22, [sp, #32]
  40e5ac:	mov	x0, x19
  40e5b0:	ldp	x19, x20, [sp, #16]
  40e5b4:	ldp	x29, x30, [sp], #96
  40e5b8:	ret
  40e5bc:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e5c0:	mov	w2, #0x5                   	// #5
  40e5c4:	add	x1, x1, #0x868
  40e5c8:	bl	406cd0 <dcgettext@plt>
  40e5cc:	mov	x21, x0
  40e5d0:	b	40e544 <file_timestamp_cons@@Base+0x44>
  40e5d4:	nop

000000000040e5d8 <file_timestamp_now@@Base>:
  40e5d8:	stp	x29, x30, [sp, #-96]!
  40e5dc:	mov	x29, sp
  40e5e0:	add	x1, sp, #0x30
  40e5e4:	stp	x19, x20, [sp, #16]
  40e5e8:	stp	x21, x22, [sp, #32]
  40e5ec:	mov	x21, x0
  40e5f0:	mov	w0, #0x0                   	// #0
  40e5f4:	bl	4067a0 <clock_gettime@plt>
  40e5f8:	cbnz	w0, 40e6b8 <file_timestamp_now@@Base+0xe0>
  40e5fc:	ldp	x20, x19, [sp, #48]
  40e600:	mov	w0, #0x1                   	// #1
  40e604:	add	w19, w19, #0x3
  40e608:	sxtw	x1, w19
  40e60c:	lsl	x19, x20, #30
  40e610:	str	w0, [x21]
  40e614:	adds	x19, x19, x1
  40e618:	mov	x21, #0xffffffffffffca02    	// #-13822
  40e61c:	movk	x21, #0xfb9a, lsl #16
  40e620:	ccmp	x19, x21, #0x2, cc  // cc = lo, ul, last
  40e624:	mov	x0, #0x3ffffffff           	// #17179869183
  40e628:	ccmp	x20, x0, #0x2, ls  // ls = plast
  40e62c:	b.ls	40e6a4 <file_timestamp_now@@Base+0xcc>  // b.plast
  40e630:	mov	w2, #0x5                   	// #5
  40e634:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e638:	mov	x0, #0x0                   	// #0
  40e63c:	add	x1, x1, #0x868
  40e640:	bl	406cd0 <dcgettext@plt>
  40e644:	mov	x19, #0x3                   	// #3
  40e648:	cmp	x20, #0x3
  40e64c:	mov	x20, x0
  40e650:	csel	x19, x19, x21, cc  // cc = lo, ul, last
  40e654:	add	x0, sp, #0x30
  40e658:	mov	x1, x19
  40e65c:	bl	40e410 <file_timestamp_sprintf@@Base>
  40e660:	mov	x0, x20
  40e664:	bl	406680 <strlen@plt>
  40e668:	mov	x22, x0
  40e66c:	add	x0, sp, #0x30
  40e670:	bl	406680 <strlen@plt>
  40e674:	mov	w2, #0x5                   	// #5
  40e678:	mov	x21, x0
  40e67c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e680:	mov	x0, #0x0                   	// #0
  40e684:	add	x1, x1, #0x878
  40e688:	bl	406cd0 <dcgettext@plt>
  40e68c:	add	x4, sp, #0x30
  40e690:	mov	x2, x0
  40e694:	mov	x3, x20
  40e698:	add	x1, x22, x21
  40e69c:	mov	x0, #0x0                   	// #0
  40e6a0:	bl	41bd88 <error@@Base>
  40e6a4:	mov	x0, x19
  40e6a8:	ldp	x19, x20, [sp, #16]
  40e6ac:	ldp	x21, x22, [sp, #32]
  40e6b0:	ldp	x29, x30, [sp], #96
  40e6b4:	ret
  40e6b8:	add	x0, sp, #0x30
  40e6bc:	mov	x1, #0x0                   	// #0
  40e6c0:	bl	4069a0 <gettimeofday@plt>
  40e6c4:	cbnz	w0, 40e6e4 <file_timestamp_now@@Base+0x10c>
  40e6c8:	ldp	x20, x19, [sp, #48]
  40e6cc:	mov	w1, #0x3e8                 	// #1000
  40e6d0:	mov	w0, w1
  40e6d4:	mul	w19, w19, w1
  40e6d8:	add	w19, w19, #0x3
  40e6dc:	sxtw	x1, w19
  40e6e0:	b	40e60c <file_timestamp_now@@Base+0x34>
  40e6e4:	mov	x0, #0x0                   	// #0
  40e6e8:	bl	4068c0 <time@plt>
  40e6ec:	mov	x20, x0
  40e6f0:	mov	w0, #0xca00                	// #51712
  40e6f4:	mov	x1, #0x3                   	// #3
  40e6f8:	movk	w0, #0x3b9a, lsl #16
  40e6fc:	b	40e60c <file_timestamp_now@@Base+0x34>

000000000040e700 <print_prereqs@@Base>:
  40e700:	cbz	x0, 40e7dc <print_prereqs@@Base+0xdc>
  40e704:	stp	x29, x30, [sp, #-48]!
  40e708:	mov	x29, sp
  40e70c:	stp	x19, x20, [sp, #16]
  40e710:	mov	x19, x0
  40e714:	mov	x20, #0x0                   	// #0
  40e718:	str	x21, [sp, #32]
  40e71c:	adrp	x21, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e720:	add	x21, x21, #0x8a0
  40e724:	nop
  40e728:	ldrb	w1, [x19, #33]
  40e72c:	mov	x0, x21
  40e730:	tbnz	w1, #1, 40e7c4 <print_prereqs@@Base+0xc4>
  40e734:	ldr	x1, [x19, #8]
  40e738:	cbz	x1, 40e7ac <print_prereqs@@Base+0xac>
  40e73c:	bl	406d60 <printf@plt>
  40e740:	ldr	x19, [x19]
  40e744:	cbnz	x19, 40e728 <print_prereqs@@Base+0x28>
  40e748:	cbz	x20, 40e790 <print_prereqs@@Base+0x90>
  40e74c:	ldr	x1, [x20, #8]
  40e750:	cbz	x1, 40e7d0 <print_prereqs@@Base+0xd0>
  40e754:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e758:	add	x0, x0, #0x8a8
  40e75c:	bl	406d60 <printf@plt>
  40e760:	ldr	x19, [x20]
  40e764:	cbz	x19, 40e790 <print_prereqs@@Base+0x90>
  40e768:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e76c:	add	x20, x20, #0x8a0
  40e770:	ldrb	w1, [x19, #33]
  40e774:	mov	x0, x20
  40e778:	tbz	w1, #1, 40e788 <print_prereqs@@Base+0x88>
  40e77c:	ldr	x1, [x19, #8]
  40e780:	cbz	x1, 40e7b8 <print_prereqs@@Base+0xb8>
  40e784:	bl	406d60 <printf@plt>
  40e788:	ldr	x19, [x19]
  40e78c:	cbnz	x19, 40e770 <print_prereqs@@Base+0x70>
  40e790:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  40e794:	mov	w0, #0xa                   	// #10
  40e798:	ldp	x19, x20, [sp, #16]
  40e79c:	ldr	x21, [sp, #32]
  40e7a0:	ldp	x29, x30, [sp], #48
  40e7a4:	ldr	x1, [x1, #440]
  40e7a8:	b	406740 <putc@plt>
  40e7ac:	ldr	x1, [x19, #16]
  40e7b0:	ldr	x1, [x1]
  40e7b4:	b	40e73c <print_prereqs@@Base+0x3c>
  40e7b8:	ldr	x1, [x19, #16]
  40e7bc:	ldr	x1, [x1]
  40e7c0:	b	40e784 <print_prereqs@@Base+0x84>
  40e7c4:	cmp	x20, #0x0
  40e7c8:	csel	x20, x20, x19, ne  // ne = any
  40e7cc:	b	40e740 <print_prereqs@@Base+0x40>
  40e7d0:	ldr	x0, [x20, #16]
  40e7d4:	ldr	x1, [x0]
  40e7d8:	b	40e754 <print_prereqs@@Base+0x54>
  40e7dc:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  40e7e0:	mov	w0, #0xa                   	// #10
  40e7e4:	ldr	x1, [x1, #440]
  40e7e8:	b	406740 <putc@plt>
  40e7ec:	nop
  40e7f0:	stp	x29, x30, [sp, #-96]!
  40e7f4:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  40e7f8:	mov	x29, sp
  40e7fc:	stp	x19, x20, [sp, #16]
  40e800:	mov	x19, x0
  40e804:	ldr	w0, [x1, #3420]
  40e808:	cbz	w0, 40e814 <print_prereqs@@Base+0x114>
  40e80c:	ldrb	w0, [x19, #136]
  40e810:	tbnz	w0, #4, 40ea18 <print_prereqs@@Base+0x318>
  40e814:	stp	x21, x22, [sp, #32]
  40e818:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  40e81c:	mov	w0, #0xa                   	// #10
  40e820:	ldr	x1, [x22, #440]
  40e824:	bl	406740 <putc@plt>
  40e828:	ldr	x0, [x19, #32]
  40e82c:	cbz	x0, 40e844 <print_prereqs@@Base+0x144>
  40e830:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  40e834:	ldrb	w1, [x0, #50]
  40e838:	ldrb	w0, [x20, #180]
  40e83c:	cmp	w1, w0
  40e840:	b.ne	40ea3c <print_prereqs@@Base+0x33c>  // b.any
  40e844:	ldr	x0, [x19, #80]
  40e848:	cbz	x0, 40e854 <print_prereqs@@Base+0x154>
  40e84c:	mov	x0, x19
  40e850:	bl	4270c8 <print_target_variables@@Base>
  40e854:	ldrb	w0, [x19, #137]
  40e858:	tbz	w0, #3, 40ebbc <print_prereqs@@Base+0x4bc>
  40e85c:	ldr	x0, [x19, #104]
  40e860:	adrp	x3, 42d000 <_IO_stdin_used@@Base+0x40e0>
  40e864:	ldr	x1, [x19]
  40e868:	cmp	x0, #0x0
  40e86c:	add	x3, x3, #0xed0
  40e870:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x30e0>
  40e874:	add	x2, x2, #0x610
  40e878:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e87c:	csel	x2, x2, x3, ne  // ne = any
  40e880:	add	x0, x0, #0x8d8
  40e884:	bl	406d60 <printf@plt>
  40e888:	ldr	x0, [x19, #24]
  40e88c:	bl	40e700 <print_prereqs@@Base>
  40e890:	ldrb	w0, [x19, #136]
  40e894:	tbnz	w0, #5, 40eba0 <print_prereqs@@Base+0x4a0>
  40e898:	ldrb	w0, [x19, #137]
  40e89c:	tbnz	w0, #5, 40ea80 <print_prereqs@@Base+0x380>
  40e8a0:	tbnz	w0, #4, 40eaa0 <print_prereqs@@Base+0x3a0>
  40e8a4:	ldrb	w0, [x19, #138]
  40e8a8:	tbnz	w0, #0, 40eac0 <print_prereqs@@Base+0x3c0>
  40e8ac:	ldrb	w0, [x19, #136]
  40e8b0:	tbnz	w0, #4, 40eae0 <print_prereqs@@Base+0x3e0>
  40e8b4:	ldrb	w0, [x19, #137]
  40e8b8:	tbnz	w0, #0, 40ea24 <print_prereqs@@Base+0x324>
  40e8bc:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e8c0:	mov	w2, #0x5                   	// #5
  40e8c4:	add	x1, x1, #0x9c8
  40e8c8:	mov	x0, #0x0                   	// #0
  40e8cc:	bl	406cd0 <dcgettext@plt>
  40e8d0:	bl	406ae0 <puts@plt>
  40e8d4:	ldr	x0, [x19, #40]
  40e8d8:	cbz	x0, 40e8f8 <print_prereqs@@Base+0x1f8>
  40e8dc:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e8e0:	mov	w2, #0x5                   	// #5
  40e8e4:	add	x1, x1, #0x9f8
  40e8e8:	mov	x0, #0x0                   	// #0
  40e8ec:	bl	406cd0 <dcgettext@plt>
  40e8f0:	ldr	x1, [x19, #40]
  40e8f4:	bl	406d60 <printf@plt>
  40e8f8:	ldrb	w0, [x19, #137]
  40e8fc:	tbnz	w0, #6, 40ebf4 <print_prereqs@@Base+0x4f4>
  40e900:	ldr	x0, [x19, #48]
  40e904:	cbz	x0, 40e95c <print_prereqs@@Base+0x25c>
  40e908:	mov	w2, #0x5                   	// #5
  40e90c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e910:	mov	x0, #0x0                   	// #0
  40e914:	add	x1, x1, #0xa50
  40e918:	bl	406cd0 <dcgettext@plt>
  40e91c:	adrp	x21, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e920:	ldr	x1, [x22, #440]
  40e924:	add	x21, x21, #0x8a0
  40e928:	bl	406690 <fputs@plt>
  40e92c:	ldr	x20, [x19, #48]
  40e930:	cbz	x20, 40e950 <print_prereqs@@Base+0x250>
  40e934:	nop
  40e938:	ldr	x1, [x20, #8]
  40e93c:	mov	x0, x21
  40e940:	cbz	x1, 40eafc <print_prereqs@@Base+0x3fc>
  40e944:	bl	406d60 <printf@plt>
  40e948:	ldr	x20, [x20]
  40e94c:	cbnz	x20, 40e938 <print_prereqs@@Base+0x238>
  40e950:	ldr	x1, [x22, #440]
  40e954:	mov	w0, #0xa                   	// #10
  40e958:	bl	406740 <putc@plt>
  40e95c:	ldr	x1, [x19, #112]
  40e960:	cbz	x1, 40ebd8 <print_prereqs@@Base+0x4d8>
  40e964:	cmp	x1, #0x1
  40e968:	b.eq	40ec7c <print_prereqs@@Base+0x57c>  // b.none
  40e96c:	cmp	x1, #0x2
  40e970:	b.eq	40ec60 <print_prereqs@@Base+0x560>  // b.none
  40e974:	add	x0, sp, #0x30
  40e978:	bl	40e410 <file_timestamp_sprintf@@Base>
  40e97c:	mov	w2, #0x5                   	// #5
  40e980:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e984:	mov	x0, #0x0                   	// #0
  40e988:	add	x1, x1, #0xab8
  40e98c:	bl	406cd0 <dcgettext@plt>
  40e990:	add	x1, sp, #0x30
  40e994:	bl	406d60 <printf@plt>
  40e998:	ldrb	w0, [x19, #137]
  40e99c:	tbz	w0, #2, 40eb14 <print_prereqs@@Base+0x414>
  40e9a0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e9a4:	add	x1, x1, #0xad0
  40e9a8:	mov	w2, #0x5                   	// #5
  40e9ac:	mov	x0, #0x0                   	// #0
  40e9b0:	bl	406cd0 <dcgettext@plt>
  40e9b4:	bl	406ae0 <puts@plt>
  40e9b8:	ldrb	w1, [x19, #136]
  40e9bc:	ubfx	x0, x1, #2, #2
  40e9c0:	cmp	w0, #0x2
  40e9c4:	b.eq	40eb3c <print_prereqs@@Base+0x43c>  // b.none
  40e9c8:	cmp	w0, #0x3
  40e9cc:	b.eq	40eb68 <print_prereqs@@Base+0x468>  // b.none
  40e9d0:	cbz	w0, 40eb68 <print_prereqs@@Base+0x468>
  40e9d4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40e9d8:	add	x1, x1, #0xb40
  40e9dc:	mov	w2, #0x5                   	// #5
  40e9e0:	mov	x0, #0x0                   	// #0
  40e9e4:	bl	406cd0 <dcgettext@plt>
  40e9e8:	bl	406ae0 <puts@plt>
  40e9ec:	ldr	x0, [x19, #80]
  40e9f0:	cbz	x0, 40e9fc <print_prereqs@@Base+0x2fc>
  40e9f4:	mov	x0, x19
  40e9f8:	bl	427030 <print_file_variables@@Base>
  40e9fc:	ldr	x0, [x19, #32]
  40ea00:	cbz	x0, 40ea08 <print_prereqs@@Base+0x308>
  40ea04:	bl	40a9f8 <print_commands@@Base>
  40ea08:	ldr	x0, [x19, #56]
  40ea0c:	cbz	x0, 40eb58 <print_prereqs@@Base+0x458>
  40ea10:	bl	40e7f0 <print_prereqs@@Base+0xf0>
  40ea14:	ldp	x21, x22, [sp, #32]
  40ea18:	ldp	x19, x20, [sp, #16]
  40ea1c:	ldp	x29, x30, [sp], #96
  40ea20:	ret
  40ea24:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ea28:	mov	w2, #0x5                   	// #5
  40ea2c:	add	x1, x1, #0x9a0
  40ea30:	mov	x0, #0x0                   	// #0
  40ea34:	bl	406cd0 <dcgettext@plt>
  40ea38:	b	40e8d0 <print_prereqs@@Base+0x1d0>
  40ea3c:	ldr	x3, [x22, #440]
  40ea40:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ea44:	mov	x2, #0x10                  	// #16
  40ea48:	add	x0, x0, #0x8b0
  40ea4c:	mov	x1, #0x1                   	// #1
  40ea50:	bl	406be0 <fwrite@plt>
  40ea54:	ldr	x0, [x19, #32]
  40ea58:	ldrb	w0, [x0, #50]
  40ea5c:	strb	w0, [x20, #180]
  40ea60:	cmp	w0, #0x9
  40ea64:	b.ne	40ec10 <print_prereqs@@Base+0x510>  // b.any
  40ea68:	ldr	x1, [x22, #440]
  40ea6c:	mov	w0, #0xa                   	// #10
  40ea70:	bl	406740 <putc@plt>
  40ea74:	ldr	x0, [x19, #80]
  40ea78:	cbnz	x0, 40e84c <print_prereqs@@Base+0x14c>
  40ea7c:	b	40e854 <print_prereqs@@Base+0x154>
  40ea80:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ea84:	add	x1, x1, #0x910
  40ea88:	mov	w2, #0x5                   	// #5
  40ea8c:	mov	x0, #0x0                   	// #0
  40ea90:	bl	406cd0 <dcgettext@plt>
  40ea94:	bl	406ae0 <puts@plt>
  40ea98:	ldrb	w0, [x19, #137]
  40ea9c:	tbz	w0, #4, 40e8a4 <print_prereqs@@Base+0x1a4>
  40eaa0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40eaa4:	add	x1, x1, #0x940
  40eaa8:	mov	w2, #0x5                   	// #5
  40eaac:	mov	x0, #0x0                   	// #0
  40eab0:	bl	406cd0 <dcgettext@plt>
  40eab4:	bl	406ae0 <puts@plt>
  40eab8:	ldrb	w0, [x19, #138]
  40eabc:	tbz	w0, #0, 40e8ac <print_prereqs@@Base+0x1ac>
  40eac0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40eac4:	add	x1, x1, #0x958
  40eac8:	mov	w2, #0x5                   	// #5
  40eacc:	mov	x0, #0x0                   	// #0
  40ead0:	bl	406cd0 <dcgettext@plt>
  40ead4:	bl	406ae0 <puts@plt>
  40ead8:	ldrb	w0, [x19, #136]
  40eadc:	tbz	w0, #4, 40e8b4 <print_prereqs@@Base+0x1b4>
  40eae0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40eae4:	add	x1, x1, #0x990
  40eae8:	mov	w2, #0x5                   	// #5
  40eaec:	mov	x0, #0x0                   	// #0
  40eaf0:	bl	406cd0 <dcgettext@plt>
  40eaf4:	bl	406ae0 <puts@plt>
  40eaf8:	b	40e8b4 <print_prereqs@@Base+0x1b4>
  40eafc:	ldr	x1, [x20, #16]
  40eb00:	ldr	x1, [x1]
  40eb04:	bl	406d60 <printf@plt>
  40eb08:	ldr	x20, [x20]
  40eb0c:	cbnz	x20, 40e938 <print_prereqs@@Base+0x238>
  40eb10:	b	40e950 <print_prereqs@@Base+0x250>
  40eb14:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40eb18:	add	x1, x1, #0xaf0
  40eb1c:	mov	w2, #0x5                   	// #5
  40eb20:	mov	x0, #0x0                   	// #0
  40eb24:	bl	406cd0 <dcgettext@plt>
  40eb28:	bl	406ae0 <puts@plt>
  40eb2c:	ldrb	w1, [x19, #136]
  40eb30:	ubfx	x0, x1, #2, #2
  40eb34:	cmp	w0, #0x2
  40eb38:	b.ne	40e9c8 <print_prereqs@@Base+0x2c8>  // b.any
  40eb3c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40eb40:	add	x1, x1, #0xb10
  40eb44:	mov	w2, #0x5                   	// #5
  40eb48:	mov	x0, #0x0                   	// #0
  40eb4c:	bl	406cd0 <dcgettext@plt>
  40eb50:	bl	406ae0 <puts@plt>
  40eb54:	b	40e9ec <print_prereqs@@Base+0x2ec>
  40eb58:	ldp	x19, x20, [sp, #16]
  40eb5c:	ldp	x21, x22, [sp, #32]
  40eb60:	ldp	x29, x30, [sp], #96
  40eb64:	ret
  40eb68:	and	w1, w1, #0x3
  40eb6c:	cmp	w1, #0x2
  40eb70:	b.eq	40ec44 <print_prereqs@@Base+0x544>  // b.none
  40eb74:	cmp	w1, #0x3
  40eb78:	b.eq	40ec28 <print_prereqs@@Base+0x528>  // b.none
  40eb7c:	cmp	w1, #0x1
  40eb80:	b.eq	40e9ec <print_prereqs@@Base+0x2ec>  // b.none
  40eb84:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40eb88:	add	x1, x1, #0xb70
  40eb8c:	mov	w2, #0x5                   	// #5
  40eb90:	mov	x0, #0x0                   	// #0
  40eb94:	bl	406cd0 <dcgettext@plt>
  40eb98:	bl	406ae0 <puts@plt>
  40eb9c:	b	40e9ec <print_prereqs@@Base+0x2ec>
  40eba0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40eba4:	add	x1, x1, #0x8e0
  40eba8:	mov	w2, #0x5                   	// #5
  40ebac:	mov	x0, #0x0                   	// #0
  40ebb0:	bl	406cd0 <dcgettext@plt>
  40ebb4:	bl	406ae0 <puts@plt>
  40ebb8:	b	40e898 <print_prereqs@@Base+0x198>
  40ebbc:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ebc0:	add	x1, x1, #0x8c8
  40ebc4:	mov	w2, #0x5                   	// #5
  40ebc8:	mov	x0, #0x0                   	// #0
  40ebcc:	bl	406cd0 <dcgettext@plt>
  40ebd0:	bl	406ae0 <puts@plt>
  40ebd4:	b	40e85c <print_prereqs@@Base+0x15c>
  40ebd8:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ebdc:	add	x1, x1, #0xa60
  40ebe0:	mov	w2, #0x5                   	// #5
  40ebe4:	mov	x0, #0x0                   	// #0
  40ebe8:	bl	406cd0 <dcgettext@plt>
  40ebec:	bl	406ae0 <puts@plt>
  40ebf0:	b	40e998 <print_prereqs@@Base+0x298>
  40ebf4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ebf8:	add	x1, x1, #0xa20
  40ebfc:	mov	w2, #0x5                   	// #5
  40ec00:	mov	x0, #0x0                   	// #0
  40ec04:	bl	406cd0 <dcgettext@plt>
  40ec08:	bl	406ae0 <puts@plt>
  40ec0c:	b	40e900 <print_prereqs@@Base+0x200>
  40ec10:	ldr	x1, [x22, #440]
  40ec14:	bl	406740 <putc@plt>
  40ec18:	ldr	x1, [x22, #440]
  40ec1c:	mov	w0, #0xa                   	// #10
  40ec20:	bl	406740 <putc@plt>
  40ec24:	b	40ea74 <print_prereqs@@Base+0x374>
  40ec28:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ec2c:	add	x1, x1, #0xbb8
  40ec30:	mov	w2, #0x5                   	// #5
  40ec34:	mov	x0, #0x0                   	// #0
  40ec38:	bl	406cd0 <dcgettext@plt>
  40ec3c:	bl	406ae0 <puts@plt>
  40ec40:	b	40e9ec <print_prereqs@@Base+0x2ec>
  40ec44:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ec48:	add	x1, x1, #0xb90
  40ec4c:	mov	w2, #0x5                   	// #5
  40ec50:	mov	x0, #0x0                   	// #0
  40ec54:	bl	406cd0 <dcgettext@plt>
  40ec58:	bl	406ae0 <puts@plt>
  40ec5c:	b	40e9ec <print_prereqs@@Base+0x2ec>
  40ec60:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ec64:	add	x1, x1, #0xaa0
  40ec68:	mov	w2, #0x5                   	// #5
  40ec6c:	mov	x0, #0x0                   	// #0
  40ec70:	bl	406cd0 <dcgettext@plt>
  40ec74:	bl	406ae0 <puts@plt>
  40ec78:	b	40e998 <print_prereqs@@Base+0x298>
  40ec7c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ec80:	add	x1, x1, #0xa88
  40ec84:	mov	w2, #0x5                   	// #5
  40ec88:	mov	x0, #0x0                   	// #0
  40ec8c:	bl	406cd0 <dcgettext@plt>
  40ec90:	bl	406ae0 <puts@plt>
  40ec94:	b	40e998 <print_prereqs@@Base+0x298>

000000000040ec98 <print_file_data_base@@Base>:
  40ec98:	stp	x29, x30, [sp, #-32]!
  40ec9c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40eca0:	add	x1, x1, #0xbd8
  40eca4:	mov	w2, #0x5                   	// #5
  40eca8:	mov	x29, sp
  40ecac:	mov	x0, #0x0                   	// #0
  40ecb0:	stp	x19, x20, [sp, #16]
  40ecb4:	bl	406cd0 <dcgettext@plt>
  40ecb8:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  40ecbc:	bl	406ae0 <puts@plt>
  40ecc0:	add	x19, x19, #0x2e0
  40ecc4:	mov	x0, x19
  40ecc8:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  40eccc:	adrp	x1, 40e000 <snap_deps@@Base+0x88>
  40ecd0:	add	x1, x1, #0x7f0
  40ecd4:	bl	412e60 <hash_map@@Base>
  40ecd8:	mov	w2, #0x5                   	// #5
  40ecdc:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ece0:	mov	x0, #0x0                   	// #0
  40ece4:	add	x1, x1, #0xbe8
  40ece8:	bl	406cd0 <dcgettext@plt>
  40ecec:	ldr	x1, [x20, #440]
  40ecf0:	bl	406690 <fputs@plt>
  40ecf4:	ldr	x1, [x20, #440]
  40ecf8:	mov	x0, x19
  40ecfc:	ldp	x19, x20, [sp, #16]
  40ed00:	ldp	x29, x30, [sp], #32
  40ed04:	b	412f40 <hash_print_stats@@Base>

000000000040ed08 <verify_file_data_base@@Base>:
  40ed08:	adrp	x1, 40c000 <variable_expand_string@@Base+0x298>
  40ed0c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40ed10:	add	x1, x1, #0xbf8
  40ed14:	add	x0, x0, #0x2e0
  40ed18:	b	412e60 <hash_map@@Base>
  40ed1c:	nop

000000000040ed20 <build_target_list@@Base>:
  40ed20:	stp	x29, x30, [sp, #-112]!
  40ed24:	mov	x29, sp
  40ed28:	stp	x19, x20, [sp, #16]
  40ed2c:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  40ed30:	stp	x27, x28, [sp, #80]
  40ed34:	add	x27, x19, #0x2e0
  40ed38:	stp	x21, x22, [sp, #32]
  40ed3c:	mov	x21, x0
  40ed40:	ldr	x2, [x27, #48]
  40ed44:	ldr	x1, [x27, #96]
  40ed48:	cmp	x2, x1
  40ed4c:	b.ne	40ed68 <build_target_list@@Base+0x48>  // b.any
  40ed50:	mov	x0, x21
  40ed54:	ldp	x19, x20, [sp, #16]
  40ed58:	ldp	x21, x22, [sp, #32]
  40ed5c:	ldp	x27, x28, [sp, #80]
  40ed60:	ldp	x29, x30, [sp], #112
  40ed64:	ret
  40ed68:	stp	x23, x24, [sp, #48]
  40ed6c:	stp	x25, x26, [sp, #64]
  40ed70:	bl	406680 <strlen@plt>
  40ed74:	mov	x26, #0xf7cf                	// #63439
  40ed78:	mov	x1, x0
  40ed7c:	movk	x26, #0xe353, lsl #16
  40ed80:	movk	x26, #0x9ba5, lsl #32
  40ed84:	mov	x0, x21
  40ed88:	lsr	x1, x1, #2
  40ed8c:	movk	x26, #0x20c4, lsl #48
  40ed90:	ldr	x19, [x19, #736]
  40ed94:	umulh	x1, x1, x26
  40ed98:	ldr	x23, [x27, #32]
  40ed9c:	lsr	x1, x1, #4
  40eda0:	add	x1, x1, #0x1
  40eda4:	add	x23, x19, x23, lsl #3
  40eda8:	lsl	x24, x1, #5
  40edac:	sub	x24, x24, x1
  40edb0:	add	x24, x1, x24, lsl #2
  40edb4:	lsl	x24, x24, #2
  40edb8:	mov	x1, x24
  40edbc:	bl	41ab78 <xrealloc@@Base>
  40edc0:	cmp	x19, x23
  40edc4:	mov	x21, x0
  40edc8:	b.cs	40eebc <build_target_list@@Base+0x19c>  // b.hs, b.nlast
  40edcc:	mov	x22, x0
  40edd0:	mov	x25, #0x0                   	// #0
  40edd4:	str	x26, [sp, #104]
  40edd8:	adrp	x26, 446000 <expanding_var@@Base+0x320>
  40eddc:	nop
  40ede0:	ldr	x20, [x19]
  40ede4:	add	x19, x19, #0x8
  40ede8:	cbz	x20, 40ee40 <build_target_list@@Base+0x120>
  40edec:	ldr	x0, [x26, #72]
  40edf0:	cmp	x20, x0
  40edf4:	b.eq	40ee40 <build_target_list@@Base+0x120>  // b.none
  40edf8:	ldrb	w0, [x20, #137]
  40edfc:	tbz	w0, #3, 40ee40 <build_target_list@@Base+0x120>
  40ee00:	ldr	x1, [x20]
  40ee04:	add	x25, x25, #0x1
  40ee08:	str	x1, [sp, #96]
  40ee0c:	mov	x0, x1
  40ee10:	bl	406680 <strlen@plt>
  40ee14:	add	x25, x25, x0
  40ee18:	mov	x28, x0
  40ee1c:	cmp	x25, x24
  40ee20:	ldr	x1, [sp, #96]
  40ee24:	b.hi	40ee74 <build_target_list@@Base+0x154>  // b.pmore
  40ee28:	mov	x0, x22
  40ee2c:	add	x22, x22, x28
  40ee30:	mov	x2, x28
  40ee34:	bl	406640 <memcpy@plt>
  40ee38:	mov	w0, #0x20                  	// #32
  40ee3c:	strb	w0, [x22], #1
  40ee40:	cmp	x23, x19
  40ee44:	b.hi	40ede0 <build_target_list@@Base+0xc0>  // b.pmore
  40ee48:	sturb	wzr, [x22, #-1]
  40ee4c:	ldr	x0, [x27, #48]
  40ee50:	str	x0, [x27, #96]
  40ee54:	mov	x0, x21
  40ee58:	ldp	x19, x20, [sp, #16]
  40ee5c:	ldp	x21, x22, [sp, #32]
  40ee60:	ldp	x23, x24, [sp, #48]
  40ee64:	ldp	x25, x26, [sp, #64]
  40ee68:	ldp	x27, x28, [sp, #80]
  40ee6c:	ldp	x29, x30, [sp], #112
  40ee70:	ret
  40ee74:	add	x1, x0, #0x1
  40ee78:	sub	x22, x22, x21
  40ee7c:	ldr	x2, [sp, #104]
  40ee80:	lsr	x1, x1, #2
  40ee84:	mov	x0, x21
  40ee88:	umulh	x1, x1, x2
  40ee8c:	lsr	x1, x1, #4
  40ee90:	add	x1, x1, #0x1
  40ee94:	lsl	x2, x1, #5
  40ee98:	sub	x2, x2, x1
  40ee9c:	add	x1, x1, x2, lsl #2
  40eea0:	add	x24, x24, x1, lsl #2
  40eea4:	mov	x1, x24
  40eea8:	bl	41ab78 <xrealloc@@Base>
  40eeac:	mov	x21, x0
  40eeb0:	add	x22, x0, x22
  40eeb4:	ldr	x1, [x20]
  40eeb8:	b	40ee28 <build_target_list@@Base+0x108>
  40eebc:	mov	x22, x0
  40eec0:	b	40ee48 <build_target_list@@Base+0x128>
  40eec4:	nop

000000000040eec8 <init_hash_files@@Base>:
  40eec8:	adrp	x4, 40c000 <variable_expand_string@@Base+0x298>
  40eecc:	adrp	x3, 40c000 <variable_expand_string@@Base+0x298>
  40eed0:	add	x4, x4, #0xbd8
  40eed4:	add	x3, x3, #0xbd0
  40eed8:	adrp	x2, 40c000 <variable_expand_string@@Base+0x298>
  40eedc:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40eee0:	add	x2, x2, #0xeb8
  40eee4:	add	x0, x0, #0x2e0
  40eee8:	mov	x1, #0x3e8                 	// #1000
  40eeec:	b	4125d8 <hash_init@@Base>
  40eef0:	mov	x0, #0x0                   	// #0
  40eef4:	ret
  40eef8:	stp	x29, x30, [sp, #-48]!
  40eefc:	mov	x29, sp
  40ef00:	stp	x19, x20, [sp, #16]
  40ef04:	ldr	x19, [x1]
  40ef08:	ldrb	w1, [x19]
  40ef0c:	cbz	w1, 40efd0 <init_hash_files@@Base+0x108>
  40ef10:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  40ef14:	add	x20, x20, #0x4c0
  40ef18:	str	x21, [sp, #32]
  40ef1c:	adrp	x21, 42c000 <_IO_stdin_used@@Base+0x30e0>
  40ef20:	add	x21, x21, #0x670
  40ef24:	mov	w4, #0x0                   	// #0
  40ef28:	ldrh	w3, [x20, w1, sxtw #1]
  40ef2c:	tst	w3, #0x6
  40ef30:	and	w3, w3, #0x6
  40ef34:	b.eq	40ef50 <init_hash_files@@Base+0x88>  // b.none
  40ef38:	ldrb	w1, [x19, #1]!
  40ef3c:	ldrh	w3, [x20, w1, sxtw #1]
  40ef40:	tst	w3, #0x6
  40ef44:	and	w3, w3, #0x6
  40ef48:	b.ne	40ef38 <init_hash_files@@Base+0x70>  // b.any
  40ef4c:	cbz	w1, 40efb4 <init_hash_files@@Base+0xec>
  40ef50:	mov	x1, x19
  40ef54:	mov	w2, #0x0                   	// #0
  40ef58:	cbnz	w3, 40ef78 <init_hash_files@@Base+0xb0>
  40ef5c:	nop
  40ef60:	ldrb	w3, [x19, #1]!
  40ef64:	add	w2, w2, #0x1
  40ef68:	cbz	w3, 40ef7c <init_hash_files@@Base+0xb4>
  40ef6c:	ldrh	w3, [x20, w3, sxtw #1]
  40ef70:	and	w3, w3, #0x6
  40ef74:	cbz	w3, 40ef60 <init_hash_files@@Base+0x98>
  40ef78:	cbz	w2, 40efb4 <init_hash_files@@Base+0xec>
  40ef7c:	sxtw	x2, w2
  40ef80:	bl	40bbb0 <variable_buffer_output@@Base>
  40ef84:	mov	x1, x21
  40ef88:	mov	x2, #0x1                   	// #1
  40ef8c:	bl	40bbb0 <variable_buffer_output@@Base>
  40ef90:	ldrb	w1, [x19]
  40ef94:	mov	w4, #0x1                   	// #1
  40ef98:	cbnz	w1, 40ef28 <init_hash_files@@Base+0x60>
  40ef9c:	ldr	x21, [sp, #32]
  40efa0:	sub	x1, x0, #0x1
  40efa4:	mov	x0, x1
  40efa8:	ldp	x19, x20, [sp, #16]
  40efac:	ldp	x29, x30, [sp], #48
  40efb0:	ret
  40efb4:	mov	x1, x0
  40efb8:	cbnz	w4, 40ef9c <init_hash_files@@Base+0xd4>
  40efbc:	mov	x0, x1
  40efc0:	ldp	x19, x20, [sp, #16]
  40efc4:	ldr	x21, [sp, #32]
  40efc8:	ldp	x29, x30, [sp], #48
  40efcc:	ret
  40efd0:	mov	x1, x0
  40efd4:	b	40efa4 <init_hash_files@@Base+0xdc>
  40efd8:	stp	x29, x30, [sp, #-32]!
  40efdc:	mov	x29, sp
  40efe0:	stp	x19, x20, [sp, #16]
  40efe4:	mov	x19, x0
  40efe8:	ldp	x20, x0, [x1]
  40efec:	mov	x1, x20
  40eff0:	bl	406cc0 <strstr@plt>
  40eff4:	cbz	x0, 40f018 <init_hash_files@@Base+0x150>
  40eff8:	mov	x0, x20
  40effc:	bl	406680 <strlen@plt>
  40f000:	mov	x1, x20
  40f004:	mov	x2, x0
  40f008:	mov	x0, x19
  40f00c:	ldp	x19, x20, [sp, #16]
  40f010:	ldp	x29, x30, [sp], #32
  40f014:	b	40bbb0 <variable_buffer_output@@Base>
  40f018:	mov	x0, x19
  40f01c:	ldp	x19, x20, [sp, #16]
  40f020:	ldp	x29, x30, [sp], #32
  40f024:	ret
  40f028:	stp	x29, x30, [sp, #-48]!
  40f02c:	mov	x29, sp
  40f030:	ldr	x1, [x1]
  40f034:	stp	x19, x20, [sp, #16]
  40f038:	mov	x20, x0
  40f03c:	mov	x0, #0x0                   	// #0
  40f040:	str	x1, [sp, #40]
  40f044:	nop
  40f048:	mov	x19, x0
  40f04c:	add	x1, sp, #0x20
  40f050:	add	x0, sp, #0x28
  40f054:	bl	41ac78 <find_next_token@@Base>
  40f058:	cbnz	x0, 40f048 <init_hash_files@@Base+0x180>
  40f05c:	mov	x0, x20
  40f060:	cbz	x19, 40f070 <init_hash_files@@Base+0x1a8>
  40f064:	ldr	x2, [sp, #32]
  40f068:	mov	x1, x19
  40f06c:	bl	40bbb0 <variable_buffer_output@@Base>
  40f070:	ldp	x19, x20, [sp, #16]
  40f074:	ldp	x29, x30, [sp], #48
  40f078:	ret
  40f07c:	nop
  40f080:	stp	x29, x30, [sp, #-80]!
  40f084:	mov	x29, sp
  40f088:	stp	x19, x20, [sp, #16]
  40f08c:	mov	x19, x0
  40f090:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x30e0>
  40f094:	ldp	x2, x0, [x1]
  40f098:	add	x1, sp, #0x40
  40f09c:	str	x21, [sp, #32]
  40f0a0:	add	x20, x20, #0x670
  40f0a4:	stp	x2, x0, [sp, #48]
  40f0a8:	add	x0, sp, #0x30
  40f0ac:	mov	w21, #0x0                   	// #0
  40f0b0:	bl	41ac78 <find_next_token@@Base>
  40f0b4:	mov	x3, x0
  40f0b8:	add	x1, sp, #0x48
  40f0bc:	mov	x0, x19
  40f0c0:	cbz	x3, 40f12c <init_hash_files@@Base+0x264>
  40f0c4:	ldr	x2, [sp, #64]
  40f0c8:	mov	x1, x3
  40f0cc:	bl	40bbb0 <variable_buffer_output@@Base>
  40f0d0:	mov	x19, x0
  40f0d4:	add	x1, sp, #0x48
  40f0d8:	add	x0, sp, #0x38
  40f0dc:	bl	41ac78 <find_next_token@@Base>
  40f0e0:	mov	x1, x0
  40f0e4:	cbz	x0, 40f0f8 <init_hash_files@@Base+0x230>
  40f0e8:	ldr	x2, [sp, #72]
  40f0ec:	mov	x0, x19
  40f0f0:	bl	40bbb0 <variable_buffer_output@@Base>
  40f0f4:	mov	x19, x0
  40f0f8:	mov	x2, #0x1                   	// #1
  40f0fc:	mov	x0, x19
  40f100:	mov	x1, x20
  40f104:	bl	40bbb0 <variable_buffer_output@@Base>
  40f108:	add	x1, sp, #0x40
  40f10c:	mov	x19, x0
  40f110:	add	x0, sp, #0x30
  40f114:	bl	41ac78 <find_next_token@@Base>
  40f118:	add	x1, sp, #0x48
  40f11c:	mov	x3, x0
  40f120:	mov	w21, #0x1                   	// #1
  40f124:	mov	x0, x19
  40f128:	cbnz	x3, 40f0c4 <init_hash_files@@Base+0x1fc>
  40f12c:	add	x0, sp, #0x38
  40f130:	bl	41ac78 <find_next_token@@Base>
  40f134:	mov	x1, x0
  40f138:	cbnz	x0, 40f0e8 <init_hash_files@@Base+0x220>
  40f13c:	and	x0, x21, #0x1
  40f140:	sub	x19, x19, x0
  40f144:	mov	x0, x19
  40f148:	ldp	x19, x20, [sp, #16]
  40f14c:	ldr	x21, [sp, #32]
  40f150:	ldp	x29, x30, [sp], #80
  40f154:	ret
  40f158:	mov	x2, x1
  40f15c:	stp	x29, x30, [sp, #-48]!
  40f160:	mov	x29, sp
  40f164:	ldr	x2, [x2]
  40f168:	add	x1, sp, #0x20
  40f16c:	str	x19, [sp, #16]
  40f170:	mov	x19, x0
  40f174:	add	x0, sp, #0x28
  40f178:	str	x2, [sp, #40]
  40f17c:	bl	41ac78 <find_next_token@@Base>
  40f180:	cbz	x0, 40f1a0 <init_hash_files@@Base+0x2d8>
  40f184:	ldr	x2, [sp, #32]
  40f188:	mov	x1, x0
  40f18c:	mov	x0, x19
  40f190:	bl	40bbb0 <variable_buffer_output@@Base>
  40f194:	ldr	x19, [sp, #16]
  40f198:	ldp	x29, x30, [sp], #48
  40f19c:	ret
  40f1a0:	mov	x0, x19
  40f1a4:	ldr	x19, [sp, #16]
  40f1a8:	ldp	x29, x30, [sp], #48
  40f1ac:	ret
  40f1b0:	stp	x29, x30, [sp, #-80]!
  40f1b4:	mov	w3, #0x8200                	// #33280
  40f1b8:	mov	x29, sp
  40f1bc:	stp	x19, x20, [sp, #16]
  40f1c0:	mov	x19, x0
  40f1c4:	stp	x21, x22, [sp, #32]
  40f1c8:	adrp	x21, 42c000 <_IO_stdin_used@@Base+0x30e0>
  40f1cc:	add	x21, x21, #0x670
  40f1d0:	stp	x23, x24, [sp, #48]
  40f1d4:	mov	w24, #0x8000                	// #32768
  40f1d8:	adrp	x23, 446000 <expanding_var@@Base+0x320>
  40f1dc:	ldrb	w20, [x2]
  40f1e0:	add	x23, x23, #0x4c0
  40f1e4:	ldr	x0, [x1]
  40f1e8:	cmp	w20, #0x73
  40f1ec:	csel	w24, w24, w3, ne  // ne = any
  40f1f0:	mov	w22, #0x0                   	// #0
  40f1f4:	stp	x0, xzr, [sp, #64]
  40f1f8:	add	x1, sp, #0x48
  40f1fc:	add	x0, sp, #0x40
  40f200:	bl	41ac78 <find_next_token@@Base>
  40f204:	cbz	x0, 40f284 <init_hash_files@@Base+0x3bc>
  40f208:	ldr	x2, [sp, #72]
  40f20c:	sub	x3, x2, #0x1
  40f210:	adds	x3, x0, x3
  40f214:	b.cc	40f228 <init_hash_files@@Base+0x360>  // b.lo, b.ul, b.last
  40f218:	b	40f2a4 <init_hash_files@@Base+0x3dc>
  40f21c:	sub	x3, x3, #0x1
  40f220:	cmp	x0, x3
  40f224:	b.hi	40f2a4 <init_hash_files@@Base+0x3dc>  // b.pmore
  40f228:	ldrb	w4, [x3]
  40f22c:	ldrh	w5, [x23, w4, sxtw #1]
  40f230:	tst	w5, w24
  40f234:	b.eq	40f21c <init_hash_files@@Base+0x354>  // b.none
  40f238:	cmp	x3, x0
  40f23c:	b.cc	40f2a4 <init_hash_files@@Base+0x3dc>  // b.lo, b.ul, b.last
  40f240:	cmp	w20, #0x73
  40f244:	b.eq	40f2bc <init_hash_files@@Base+0x3f4>  // b.none
  40f248:	add	x3, x3, #0x1
  40f24c:	sub	x4, x3, x0
  40f250:	mov	x1, x3
  40f254:	sub	x2, x2, x4
  40f258:	mov	x0, x19
  40f25c:	bl	40bbb0 <variable_buffer_output@@Base>
  40f260:	mov	x2, #0x1                   	// #1
  40f264:	mov	x1, x21
  40f268:	bl	40bbb0 <variable_buffer_output@@Base>
  40f26c:	mov	w22, #0x1                   	// #1
  40f270:	mov	x19, x0
  40f274:	add	x1, sp, #0x48
  40f278:	add	x0, sp, #0x40
  40f27c:	bl	41ac78 <find_next_token@@Base>
  40f280:	cbnz	x0, 40f208 <init_hash_files@@Base+0x340>
  40f284:	and	x22, x22, #0x1
  40f288:	sub	x19, x19, x22
  40f28c:	mov	x0, x19
  40f290:	ldp	x19, x20, [sp, #16]
  40f294:	ldp	x21, x22, [sp, #32]
  40f298:	ldp	x23, x24, [sp, #48]
  40f29c:	ldp	x29, x30, [sp], #80
  40f2a0:	ret
  40f2a4:	cmp	w20, #0x73
  40f2a8:	b.eq	40f1f8 <init_hash_files@@Base+0x330>  // b.none
  40f2ac:	mov	x1, x0
  40f2b0:	mov	x0, x19
  40f2b4:	bl	40bbb0 <variable_buffer_output@@Base>
  40f2b8:	b	40f260 <init_hash_files@@Base+0x398>
  40f2bc:	cmp	w4, #0x2e
  40f2c0:	b.eq	40f24c <init_hash_files@@Base+0x384>  // b.none
  40f2c4:	b	40f1f8 <init_hash_files@@Base+0x330>
  40f2c8:	stp	x29, x30, [sp, #-96]!
  40f2cc:	mov	w3, #0x8201                	// #33281
  40f2d0:	mov	x29, sp
  40f2d4:	stp	x19, x20, [sp, #16]
  40f2d8:	adrp	x19, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40f2dc:	add	x19, x19, #0x5f0
  40f2e0:	stp	x21, x22, [sp, #32]
  40f2e4:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  40f2e8:	add	x22, x22, #0x4c0
  40f2ec:	stp	x23, x24, [sp, #48]
  40f2f0:	mov	x24, x0
  40f2f4:	mov	w23, #0x8001                	// #32769
  40f2f8:	ldr	x0, [x1]
  40f2fc:	str	x25, [sp, #64]
  40f300:	add	x1, sp, #0x58
  40f304:	mov	w25, #0x0                   	// #0
  40f308:	ldrb	w20, [x2]
  40f30c:	stp	x0, xzr, [sp, #80]
  40f310:	add	x0, sp, #0x50
  40f314:	cmp	w20, #0x62
  40f318:	cset	w21, ne  // ne = any
  40f31c:	csel	w23, w23, w3, ne  // ne = any
  40f320:	bl	41ac78 <find_next_token@@Base>
  40f324:	mov	x1, x0
  40f328:	cbz	x0, 40f3b4 <init_hash_files@@Base+0x4ec>
  40f32c:	nop
  40f330:	ldr	x2, [sp, #88]
  40f334:	sub	x3, x2, #0x1
  40f338:	adds	x3, x1, x3
  40f33c:	b.cc	40f350 <init_hash_files@@Base+0x488>  // b.lo, b.ul, b.last
  40f340:	b	40f360 <init_hash_files@@Base+0x498>
  40f344:	sub	x3, x3, #0x1
  40f348:	cmp	x1, x3
  40f34c:	b.hi	40f3d4 <init_hash_files@@Base+0x50c>  // b.pmore
  40f350:	ldrb	w4, [x3]
  40f354:	ldrh	w4, [x22, x4, lsl #1]
  40f358:	tst	w4, w23
  40f35c:	b.eq	40f344 <init_hash_files@@Base+0x47c>  // b.none
  40f360:	cmp	w21, #0x0
  40f364:	ccmp	x3, x1, #0x0, ne  // ne = any
  40f368:	b.cs	40f3f0 <init_hash_files@@Base+0x528>  // b.hs, b.nlast
  40f36c:	cmp	x3, x1
  40f370:	b.cc	40f3d4 <init_hash_files@@Base+0x50c>  // b.lo, b.ul, b.last
  40f374:	ldrb	w0, [x3]
  40f378:	cmp	w0, #0x2e
  40f37c:	b.eq	40f404 <init_hash_files@@Base+0x53c>  // b.none
  40f380:	mov	x0, x24
  40f384:	bl	40bbb0 <variable_buffer_output@@Base>
  40f388:	mov	x2, #0x1                   	// #1
  40f38c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  40f390:	add	x1, x1, #0x670
  40f394:	bl	40bbb0 <variable_buffer_output@@Base>
  40f398:	add	x1, sp, #0x58
  40f39c:	mov	x24, x0
  40f3a0:	mov	w25, #0x1                   	// #1
  40f3a4:	add	x0, sp, #0x50
  40f3a8:	bl	41ac78 <find_next_token@@Base>
  40f3ac:	mov	x1, x0
  40f3b0:	cbnz	x0, 40f330 <init_hash_files@@Base+0x468>
  40f3b4:	and	x0, x25, #0x1
  40f3b8:	sub	x0, x24, x0
  40f3bc:	ldp	x19, x20, [sp, #16]
  40f3c0:	ldp	x21, x22, [sp, #32]
  40f3c4:	ldp	x23, x24, [sp, #48]
  40f3c8:	ldr	x25, [sp, #64]
  40f3cc:	ldp	x29, x30, [sp], #96
  40f3d0:	ret
  40f3d4:	cmp	w20, #0x62
  40f3d8:	b.eq	40f380 <init_hash_files@@Base+0x4b8>  // b.none
  40f3dc:	mov	x0, x24
  40f3e0:	mov	x1, x19
  40f3e4:	mov	x2, #0x2                   	// #2
  40f3e8:	bl	40bbb0 <variable_buffer_output@@Base>
  40f3ec:	b	40f388 <init_hash_files@@Base+0x4c0>
  40f3f0:	add	x2, x3, #0x1
  40f3f4:	mov	x0, x24
  40f3f8:	sub	x2, x2, x1
  40f3fc:	bl	40bbb0 <variable_buffer_output@@Base>
  40f400:	b	40f388 <init_hash_files@@Base+0x4c0>
  40f404:	sub	x2, x3, x1
  40f408:	mov	x0, x24
  40f40c:	bl	40bbb0 <variable_buffer_output@@Base>
  40f410:	b	40f388 <init_hash_files@@Base+0x4c0>
  40f414:	nop
  40f418:	stp	x29, x30, [sp, #-96]!
  40f41c:	mov	x29, sp
  40f420:	stp	x19, x20, [sp, #16]
  40f424:	mov	x19, x0
  40f428:	mov	x20, x1
  40f42c:	ldr	x0, [x1]
  40f430:	stp	x21, x22, [sp, #32]
  40f434:	mov	x21, x2
  40f438:	stp	x23, x24, [sp, #48]
  40f43c:	stp	x25, x26, [sp, #64]
  40f440:	bl	406680 <strlen@plt>
  40f444:	mov	x22, x0
  40f448:	ldr	x1, [x20, #8]
  40f44c:	str	x1, [sp, #80]
  40f450:	ldrb	w1, [x21, #3]
  40f454:	cmp	w1, #0x70
  40f458:	b.eq	40f4d4 <init_hash_files@@Base+0x60c>  // b.none
  40f45c:	adrp	x25, 42c000 <_IO_stdin_used@@Base+0x30e0>
  40f460:	add	x24, sp, #0x58
  40f464:	add	x25, x25, #0x670
  40f468:	add	x23, sp, #0x50
  40f46c:	mov	w21, #0x0                   	// #0
  40f470:	b	40f49c <init_hash_files@@Base+0x5d4>
  40f474:	ldr	x2, [sp, #88]
  40f478:	mov	w21, #0x1                   	// #1
  40f47c:	bl	40bbb0 <variable_buffer_output@@Base>
  40f480:	ldr	x1, [x20]
  40f484:	mov	x2, x22
  40f488:	bl	40bbb0 <variable_buffer_output@@Base>
  40f48c:	mov	x1, x25
  40f490:	mov	x2, #0x1                   	// #1
  40f494:	bl	40bbb0 <variable_buffer_output@@Base>
  40f498:	mov	x19, x0
  40f49c:	mov	x1, x24
  40f4a0:	mov	x0, x23
  40f4a4:	bl	41ac78 <find_next_token@@Base>
  40f4a8:	mov	x1, x0
  40f4ac:	mov	x0, x19
  40f4b0:	cbnz	x1, 40f474 <init_hash_files@@Base+0x5ac>
  40f4b4:	and	x0, x21, #0x1
  40f4b8:	sub	x0, x19, x0
  40f4bc:	ldp	x19, x20, [sp, #16]
  40f4c0:	ldp	x21, x22, [sp, #32]
  40f4c4:	ldp	x23, x24, [sp, #48]
  40f4c8:	ldp	x25, x26, [sp, #64]
  40f4cc:	ldp	x29, x30, [sp], #96
  40f4d0:	ret
  40f4d4:	adrp	x26, 42c000 <_IO_stdin_used@@Base+0x30e0>
  40f4d8:	add	x24, sp, #0x58
  40f4dc:	add	x26, x26, #0x670
  40f4e0:	add	x23, sp, #0x50
  40f4e4:	mov	w21, #0x0                   	// #0
  40f4e8:	b	40f514 <init_hash_files@@Base+0x64c>
  40f4ec:	ldr	x1, [x20]
  40f4f0:	mov	w21, #0x1                   	// #1
  40f4f4:	bl	40bbb0 <variable_buffer_output@@Base>
  40f4f8:	ldr	x2, [sp, #88]
  40f4fc:	mov	x1, x25
  40f500:	bl	40bbb0 <variable_buffer_output@@Base>
  40f504:	mov	x1, x26
  40f508:	mov	x2, #0x1                   	// #1
  40f50c:	bl	40bbb0 <variable_buffer_output@@Base>
  40f510:	mov	x19, x0
  40f514:	mov	x1, x24
  40f518:	mov	x0, x23
  40f51c:	bl	41ac78 <find_next_token@@Base>
  40f520:	mov	x25, x0
  40f524:	mov	x2, x22
  40f528:	mov	x0, x19
  40f52c:	cbnz	x25, 40f4ec <init_hash_files@@Base+0x624>
  40f530:	and	x0, x21, #0x1
  40f534:	sub	x0, x19, x0
  40f538:	ldp	x19, x20, [sp, #16]
  40f53c:	ldp	x21, x22, [sp, #32]
  40f540:	ldp	x23, x24, [sp, #48]
  40f544:	ldp	x25, x26, [sp, #64]
  40f548:	ldp	x29, x30, [sp], #96
  40f54c:	ret
  40f550:	stp	x29, x30, [sp, #-64]!
  40f554:	mov	x29, sp
  40f558:	stp	x19, x20, [sp, #16]
  40f55c:	mov	x20, x0
  40f560:	mov	w19, #0x0                   	// #0
  40f564:	ldr	x0, [x1]
  40f568:	str	x0, [sp, #32]
  40f56c:	b	40f574 <init_hash_files@@Base+0x6ac>
  40f570:	add	w19, w19, #0x1
  40f574:	add	x0, sp, #0x20
  40f578:	mov	x1, #0x0                   	// #0
  40f57c:	bl	41ac78 <find_next_token@@Base>
  40f580:	cbnz	x0, 40f570 <init_hash_files@@Base+0x6a8>
  40f584:	mov	w2, w19
  40f588:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40f58c:	add	x1, x1, #0xc20
  40f590:	add	x0, sp, #0x28
  40f594:	bl	406730 <sprintf@plt>
  40f598:	add	x0, sp, #0x28
  40f59c:	bl	406680 <strlen@plt>
  40f5a0:	mov	x2, x0
  40f5a4:	add	x1, sp, #0x28
  40f5a8:	mov	x0, x20
  40f5ac:	bl	40bbb0 <variable_buffer_output@@Base>
  40f5b0:	ldp	x19, x20, [sp, #16]
  40f5b4:	ldp	x29, x30, [sp], #64
  40f5b8:	ret
  40f5bc:	nop
  40f5c0:	stp	x29, x30, [sp, #-64]!
  40f5c4:	mov	x29, sp
  40f5c8:	stp	x19, x20, [sp, #16]
  40f5cc:	mov	w20, w1
  40f5d0:	mov	x1, x2
  40f5d4:	ldrb	w2, [x3, #17]
  40f5d8:	cmp	w2, w20
  40f5dc:	b.gt	40f664 <init_hash_files@@Base+0x79c>
  40f5e0:	mov	x19, x0
  40f5e4:	cbnz	w20, 40f640 <init_hash_files@@Base+0x778>
  40f5e8:	ldrb	w0, [x3, #19]
  40f5ec:	tbz	w0, #1, 40f630 <init_hash_files@@Base+0x768>
  40f5f0:	ldp	x4, x5, [x3]
  40f5f4:	cbz	x4, 40f6b4 <init_hash_files@@Base+0x7ec>
  40f5f8:	mov	x2, x1
  40f5fc:	mov	x0, x5
  40f600:	mov	w1, w20
  40f604:	blr	x4
  40f608:	mov	x20, x0
  40f60c:	cbz	x0, 40f630 <init_hash_files@@Base+0x768>
  40f610:	bl	406680 <strlen@plt>
  40f614:	mov	x2, x0
  40f618:	mov	x1, x20
  40f61c:	mov	x0, x19
  40f620:	bl	40bbb0 <variable_buffer_output@@Base>
  40f624:	mov	x19, x0
  40f628:	mov	x0, x20
  40f62c:	bl	406b90 <free@plt>
  40f630:	mov	x0, x19
  40f634:	ldp	x19, x20, [sp, #16]
  40f638:	ldp	x29, x30, [sp], #64
  40f63c:	ret
  40f640:	ldp	x4, x5, [x3]
  40f644:	cbz	x4, 40f6b4 <init_hash_files@@Base+0x7ec>
  40f648:	ldrb	w2, [x3, #19]
  40f64c:	tbnz	w2, #1, 40f5f8 <init_hash_files@@Base+0x730>
  40f650:	ldp	x19, x20, [sp, #16]
  40f654:	mov	x2, x5
  40f658:	ldp	x29, x30, [sp], #64
  40f65c:	mov	x16, x4
  40f660:	br	x16
  40f664:	adrp	x1, 445000 <memcpy@GLIBC_2.17>
  40f668:	str	x3, [sp, #56]
  40f66c:	ldr	x0, [x3, #8]
  40f670:	str	x21, [sp, #32]
  40f674:	ldr	x1, [x1, #3296]
  40f678:	ldr	x21, [x1]
  40f67c:	bl	406680 <strlen@plt>
  40f680:	mov	w2, #0x5                   	// #5
  40f684:	mov	x19, x0
  40f688:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40f68c:	mov	x0, #0x0                   	// #0
  40f690:	add	x1, x1, #0xc28
  40f694:	bl	406cd0 <dcgettext@plt>
  40f698:	ldr	x3, [sp, #56]
  40f69c:	mov	x2, x0
  40f6a0:	mov	x1, x19
  40f6a4:	mov	x0, x21
  40f6a8:	ldr	x4, [x3, #8]
  40f6ac:	mov	w3, w20
  40f6b0:	bl	41c0a0 <fatal@@Base>
  40f6b4:	adrp	x1, 445000 <memcpy@GLIBC_2.17>
  40f6b8:	str	x3, [sp, #56]
  40f6bc:	ldr	x0, [x3, #8]
  40f6c0:	ldr	x1, [x1, #3296]
  40f6c4:	ldr	x20, [x1]
  40f6c8:	str	x21, [sp, #32]
  40f6cc:	bl	406680 <strlen@plt>
  40f6d0:	mov	x19, x0
  40f6d4:	mov	w2, #0x5                   	// #5
  40f6d8:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40f6dc:	mov	x0, #0x0                   	// #0
  40f6e0:	add	x1, x1, #0xc60
  40f6e4:	bl	406cd0 <dcgettext@plt>
  40f6e8:	mov	x2, x0
  40f6ec:	ldr	x3, [sp, #56]
  40f6f0:	mov	x1, x19
  40f6f4:	mov	x0, x20
  40f6f8:	ldr	x3, [x3, #8]
  40f6fc:	bl	41c0a0 <fatal@@Base>
  40f700:	sub	sp, sp, #0x440
  40f704:	stp	x29, x30, [sp]
  40f708:	mov	x29, sp
  40f70c:	stp	x19, x20, [sp, #16]
  40f710:	ldr	x20, [x1]
  40f714:	stp	x21, x22, [sp, #32]
  40f718:	mov	x22, x1
  40f71c:	stp	x23, x24, [sp, #48]
  40f720:	mov	x23, x0
  40f724:	ldrb	w0, [x20]
  40f728:	cmp	w0, #0x3e
  40f72c:	b.eq	40f844 <init_hash_files@@Base+0x97c>  // b.none
  40f730:	cmp	w0, #0x3c
  40f734:	b.ne	40fb28 <init_hash_files@@Base+0xc60>  // b.any
  40f738:	ldrb	w0, [x20, #1]
  40f73c:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  40f740:	add	x2, x2, #0x4c0
  40f744:	add	x20, x20, #0x1
  40f748:	ldrh	w1, [x2, w0, sxtw #1]
  40f74c:	tst	w1, #0x6
  40f750:	b.eq	40f768 <init_hash_files@@Base+0x8a0>  // b.none
  40f754:	nop
  40f758:	ldrb	w0, [x20, #1]!
  40f75c:	ldrh	w3, [x2, w0, sxtw #1]
  40f760:	tst	w3, #0x6
  40f764:	b.ne	40f758 <init_hash_files@@Base+0x890>  // b.any
  40f768:	cbz	w0, 40fb14 <init_hash_files@@Base+0xc4c>
  40f76c:	ldr	x0, [x22, #8]
  40f770:	cbnz	x0, 40fae4 <init_hash_files@@Base+0xc1c>
  40f774:	adrp	x22, 429000 <_IO_stdin_used@@Base+0xe0>
  40f778:	bl	406d70 <__errno_location@plt>
  40f77c:	add	x22, x22, #0x720
  40f780:	mov	x21, x0
  40f784:	b	40f794 <init_hash_files@@Base+0x8cc>
  40f788:	ldr	w19, [x21]
  40f78c:	cmp	w19, #0x4
  40f790:	b.ne	40f9bc <init_hash_files@@Base+0xaf4>  // b.any
  40f794:	str	wzr, [x21]
  40f798:	mov	x1, x22
  40f79c:	mov	x0, x20
  40f7a0:	bl	4068b0 <fopen@plt>
  40f7a4:	mov	x19, x0
  40f7a8:	cbz	x0, 40f788 <init_hash_files@@Base+0x8c0>
  40f7ac:	mov	x22, x23
  40f7b0:	b	40f7d8 <init_hash_files@@Base+0x910>
  40f7b4:	mov	x0, x19
  40f7b8:	bl	406e00 <ferror@plt>
  40f7bc:	cbz	w0, 40f7cc <init_hash_files@@Base+0x904>
  40f7c0:	ldr	w24, [x21]
  40f7c4:	cmp	w24, #0x4
  40f7c8:	b.ne	40fa18 <init_hash_files@@Base+0xb50>  // b.any
  40f7cc:	mov	x0, x19
  40f7d0:	bl	406ad0 <feof@plt>
  40f7d4:	cbnz	w0, 40f808 <init_hash_files@@Base+0x940>
  40f7d8:	mov	x3, x19
  40f7dc:	add	x0, sp, #0x40
  40f7e0:	mov	x2, #0x400                 	// #1024
  40f7e4:	mov	x1, #0x1                   	// #1
  40f7e8:	bl	406b70 <fread@plt>
  40f7ec:	cbz	x0, 40f7b4 <init_hash_files@@Base+0x8ec>
  40f7f0:	mov	x2, x0
  40f7f4:	add	x1, sp, #0x40
  40f7f8:	mov	x0, x22
  40f7fc:	bl	40bbb0 <variable_buffer_output@@Base>
  40f800:	mov	x22, x0
  40f804:	b	40f7b4 <init_hash_files@@Base+0x8ec>
  40f808:	mov	x0, x19
  40f80c:	bl	406890 <fclose@plt>
  40f810:	cbnz	w0, 40fb68 <init_hash_files@@Base+0xca0>
  40f814:	cmp	x22, x23
  40f818:	b.ls	40f828 <init_hash_files@@Base+0x960>  // b.plast
  40f81c:	ldurb	w0, [x22, #-1]
  40f820:	cmp	w0, #0xa
  40f824:	b.eq	40f9a0 <init_hash_files@@Base+0xad8>  // b.none
  40f828:	mov	x0, x22
  40f82c:	ldp	x29, x30, [sp]
  40f830:	ldp	x19, x20, [sp, #16]
  40f834:	ldp	x21, x22, [sp, #32]
  40f838:	ldp	x23, x24, [sp, #48]
  40f83c:	add	sp, sp, #0x440
  40f840:	ret
  40f844:	ldrb	w0, [x20, #1]
  40f848:	cmp	w0, #0x3e
  40f84c:	b.eq	40f9fc <init_hash_files@@Base+0xb34>  // b.none
  40f850:	adrp	x24, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40f854:	add	x21, x20, #0x1
  40f858:	add	x24, x24, #0xc98
  40f85c:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  40f860:	add	x2, x2, #0x4c0
  40f864:	ldrh	w1, [x2, w0, sxtw #1]
  40f868:	tst	w1, #0x6
  40f86c:	b.eq	40f880 <init_hash_files@@Base+0x9b8>  // b.none
  40f870:	ldrb	w0, [x21, #1]!
  40f874:	ldrh	w1, [x2, w0, sxtw #1]
  40f878:	tst	w1, #0x6
  40f87c:	b.ne	40f870 <init_hash_files@@Base+0x9a8>  // b.any
  40f880:	cbz	w0, 40fb14 <init_hash_files@@Base+0xc4c>
  40f884:	bl	406d70 <__errno_location@plt>
  40f888:	mov	x20, x0
  40f88c:	b	40f89c <init_hash_files@@Base+0x9d4>
  40f890:	ldr	w19, [x20]
  40f894:	cmp	w19, #0x4
  40f898:	b.ne	40faac <init_hash_files@@Base+0xbe4>  // b.any
  40f89c:	str	wzr, [x20]
  40f8a0:	mov	x1, x24
  40f8a4:	mov	x0, x21
  40f8a8:	bl	4068b0 <fopen@plt>
  40f8ac:	mov	x19, x0
  40f8b0:	cbz	x0, 40f890 <init_hash_files@@Base+0x9c8>
  40f8b4:	ldr	x22, [x22, #8]
  40f8b8:	cbz	x22, 40f8f0 <init_hash_files@@Base+0xa28>
  40f8bc:	mov	x0, x22
  40f8c0:	bl	406680 <strlen@plt>
  40f8c4:	cbnz	x0, 40f91c <init_hash_files@@Base+0xa54>
  40f8c8:	mov	x0, x22
  40f8cc:	mov	x1, x19
  40f8d0:	bl	406690 <fputs@plt>
  40f8d4:	cmn	w0, #0x1
  40f8d8:	b.eq	40f940 <init_hash_files@@Base+0xa78>  // b.none
  40f8dc:	mov	x1, x19
  40f8e0:	mov	w0, #0xa                   	// #10
  40f8e4:	bl	406790 <fputc@plt>
  40f8e8:	cmn	w0, #0x1
  40f8ec:	b.eq	40f940 <init_hash_files@@Base+0xa78>  // b.none
  40f8f0:	mov	x0, x19
  40f8f4:	bl	406890 <fclose@plt>
  40f8f8:	cbnz	w0, 40fa78 <init_hash_files@@Base+0xbb0>
  40f8fc:	mov	x22, x23
  40f900:	mov	x0, x22
  40f904:	ldp	x29, x30, [sp]
  40f908:	ldp	x19, x20, [sp, #16]
  40f90c:	ldp	x21, x22, [sp, #32]
  40f910:	ldp	x23, x24, [sp, #48]
  40f914:	add	sp, sp, #0x440
  40f918:	ret
  40f91c:	add	x0, x22, x0
  40f920:	ldurb	w0, [x0, #-1]
  40f924:	cmp	w0, #0xa
  40f928:	b.ne	40f8c8 <init_hash_files@@Base+0xa00>  // b.any
  40f92c:	mov	x0, x22
  40f930:	mov	x1, x19
  40f934:	bl	406690 <fputs@plt>
  40f938:	cmn	w0, #0x1
  40f93c:	b.ne	40f8f0 <init_hash_files@@Base+0xa28>  // b.any
  40f940:	adrp	x1, 448000 <output_context@@Base+0x1208>
  40f944:	mov	x0, x21
  40f948:	ldr	x22, [x1, #3640]
  40f94c:	bl	406680 <strlen@plt>
  40f950:	mov	x19, x0
  40f954:	ldr	w0, [x20]
  40f958:	bl	406a40 <strerror@plt>
  40f95c:	bl	406680 <strlen@plt>
  40f960:	add	x19, x19, x0
  40f964:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40f968:	add	x1, x1, #0xcb8
  40f96c:	mov	w2, #0x5                   	// #5
  40f970:	mov	x0, #0x0                   	// #0
  40f974:	bl	406cd0 <dcgettext@plt>
  40f978:	mov	x1, x0
  40f97c:	ldr	w0, [x20]
  40f980:	mov	x20, x1
  40f984:	bl	406a40 <strerror@plt>
  40f988:	mov	x4, x0
  40f98c:	mov	x3, x21
  40f990:	mov	x2, x20
  40f994:	mov	x1, x19
  40f998:	mov	x0, x22
  40f99c:	bl	41c0a0 <fatal@@Base>
  40f9a0:	sub	x1, x22, #0x1
  40f9a4:	cmp	x23, x1
  40f9a8:	b.cs	40fa10 <init_hash_files@@Base+0xb48>  // b.hs, b.nlast
  40f9ac:	ldrb	w0, [x22, #-2]!
  40f9b0:	cmp	w0, #0xd
  40f9b4:	csel	x22, x22, x1, eq  // eq = none
  40f9b8:	b	40f828 <init_hash_files@@Base+0x960>
  40f9bc:	cmp	w19, #0x2
  40f9c0:	b.eq	40f8fc <init_hash_files@@Base+0xa34>  // b.none
  40f9c4:	adrp	x1, 448000 <output_context@@Base+0x1208>
  40f9c8:	mov	x0, x20
  40f9cc:	ldr	x22, [x1, #3640]
  40f9d0:	bl	406680 <strlen@plt>
  40f9d4:	mov	x1, x0
  40f9d8:	mov	w0, w19
  40f9dc:	mov	x19, x1
  40f9e0:	bl	406a40 <strerror@plt>
  40f9e4:	bl	406680 <strlen@plt>
  40f9e8:	add	x19, x19, x0
  40f9ec:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40f9f0:	mov	w2, #0x5                   	// #5
  40f9f4:	add	x1, x1, #0xcf8
  40f9f8:	b	40fa48 <init_hash_files@@Base+0xb80>
  40f9fc:	adrp	x24, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40fa00:	ldrb	w0, [x20, #2]
  40fa04:	add	x21, x20, #0x2
  40fa08:	add	x24, x24, #0xc90
  40fa0c:	b	40f85c <init_hash_files@@Base+0x994>
  40fa10:	mov	x22, x1
  40fa14:	b	40f828 <init_hash_files@@Base+0x960>
  40fa18:	adrp	x1, 448000 <output_context@@Base+0x1208>
  40fa1c:	mov	x0, x20
  40fa20:	ldr	x22, [x1, #3640]
  40fa24:	bl	406680 <strlen@plt>
  40fa28:	mov	x19, x0
  40fa2c:	mov	w0, w24
  40fa30:	bl	406a40 <strerror@plt>
  40fa34:	bl	406680 <strlen@plt>
  40fa38:	add	x19, x19, x0
  40fa3c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40fa40:	add	x1, x1, #0xd08
  40fa44:	mov	w2, #0x5                   	// #5
  40fa48:	mov	x0, #0x0                   	// #0
  40fa4c:	bl	406cd0 <dcgettext@plt>
  40fa50:	mov	x1, x0
  40fa54:	ldr	w0, [x21]
  40fa58:	mov	x21, x1
  40fa5c:	bl	406a40 <strerror@plt>
  40fa60:	mov	x4, x0
  40fa64:	mov	x3, x20
  40fa68:	mov	x2, x21
  40fa6c:	mov	x1, x19
  40fa70:	mov	x0, x22
  40fa74:	bl	41c0a0 <fatal@@Base>
  40fa78:	adrp	x1, 448000 <output_context@@Base+0x1208>
  40fa7c:	mov	x0, x21
  40fa80:	ldr	x22, [x1, #3640]
  40fa84:	bl	406680 <strlen@plt>
  40fa88:	mov	x19, x0
  40fa8c:	ldr	w0, [x20]
  40fa90:	bl	406a40 <strerror@plt>
  40fa94:	bl	406680 <strlen@plt>
  40fa98:	add	x19, x19, x0
  40fa9c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40faa0:	mov	w2, #0x5                   	// #5
  40faa4:	add	x1, x1, #0xcc8
  40faa8:	b	40f970 <init_hash_files@@Base+0xaa8>
  40faac:	adrp	x1, 448000 <output_context@@Base+0x1208>
  40fab0:	mov	x0, x21
  40fab4:	ldr	x22, [x1, #3640]
  40fab8:	bl	406680 <strlen@plt>
  40fabc:	mov	x1, x0
  40fac0:	mov	w0, w19
  40fac4:	mov	x19, x1
  40fac8:	bl	406a40 <strerror@plt>
  40facc:	bl	406680 <strlen@plt>
  40fad0:	add	x19, x19, x0
  40fad4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40fad8:	mov	w2, #0x5                   	// #5
  40fadc:	add	x1, x1, #0xcf8
  40fae0:	b	40f970 <init_hash_files@@Base+0xaa8>
  40fae4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40fae8:	add	x1, x1, #0xcd8
  40faec:	adrp	x0, 445000 <memcpy@GLIBC_2.17>
  40faf0:	mov	w2, #0x5                   	// #5
  40faf4:	ldr	x3, [x0, #3296]
  40faf8:	mov	x0, #0x0                   	// #0
  40fafc:	ldr	x19, [x3]
  40fb00:	bl	406cd0 <dcgettext@plt>
  40fb04:	mov	x1, #0x0                   	// #0
  40fb08:	mov	x2, x0
  40fb0c:	mov	x0, x19
  40fb10:	bl	41c0a0 <fatal@@Base>
  40fb14:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40fb18:	adrp	x0, 445000 <memcpy@GLIBC_2.17>
  40fb1c:	add	x1, x1, #0xca0
  40fb20:	mov	w2, #0x5                   	// #5
  40fb24:	b	40faf4 <init_hash_files@@Base+0xc2c>
  40fb28:	adrp	x1, 445000 <memcpy@GLIBC_2.17>
  40fb2c:	mov	x0, x20
  40fb30:	ldr	x1, [x1, #3296]
  40fb34:	ldr	x21, [x1]
  40fb38:	bl	406680 <strlen@plt>
  40fb3c:	mov	w2, #0x5                   	// #5
  40fb40:	mov	x19, x0
  40fb44:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40fb48:	mov	x0, #0x0                   	// #0
  40fb4c:	add	x1, x1, #0xd18
  40fb50:	bl	406cd0 <dcgettext@plt>
  40fb54:	mov	x3, x20
  40fb58:	mov	x2, x0
  40fb5c:	mov	x1, x19
  40fb60:	mov	x0, x21
  40fb64:	bl	41c0a0 <fatal@@Base>
  40fb68:	adrp	x1, 448000 <output_context@@Base+0x1208>
  40fb6c:	mov	x0, x20
  40fb70:	ldr	x22, [x1, #3640]
  40fb74:	bl	406680 <strlen@plt>
  40fb78:	mov	x19, x0
  40fb7c:	ldr	w0, [x21]
  40fb80:	bl	406a40 <strerror@plt>
  40fb84:	bl	406680 <strlen@plt>
  40fb88:	add	x19, x19, x0
  40fb8c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40fb90:	mov	w2, #0x5                   	// #5
  40fb94:	add	x1, x1, #0xcc8
  40fb98:	b	40fa48 <init_hash_files@@Base+0xb80>
  40fb9c:	nop
  40fba0:	stp	x29, x30, [sp, #-48]!
  40fba4:	mov	x29, sp
  40fba8:	stp	x19, x20, [sp, #16]
  40fbac:	mov	x20, x1
  40fbb0:	mov	x19, x0
  40fbb4:	add	x1, sp, #0x28
  40fbb8:	add	x0, sp, #0x20
  40fbbc:	bl	40cb48 <install_variable_buffer@@Base>
  40fbc0:	ldr	x0, [x20]
  40fbc4:	mov	x1, #0x0                   	// #0
  40fbc8:	bl	420ca0 <eval_buffer@@Base>
  40fbcc:	ldp	x0, x1, [sp, #32]
  40fbd0:	bl	40cb90 <restore_variable_buffer@@Base>
  40fbd4:	mov	x0, x19
  40fbd8:	ldp	x19, x20, [sp, #16]
  40fbdc:	ldp	x29, x30, [sp], #48
  40fbe0:	ret
  40fbe4:	nop
  40fbe8:	stp	x29, x30, [sp, #-32]!
  40fbec:	mov	x29, sp
  40fbf0:	stp	x19, x20, [sp, #16]
  40fbf4:	mov	x19, x0
  40fbf8:	ldr	x20, [x1]
  40fbfc:	mov	x0, x20
  40fc00:	bl	406680 <strlen@plt>
  40fc04:	mov	x1, x0
  40fc08:	mov	x0, x20
  40fc0c:	bl	4257c8 <lookup_variable@@Base>
  40fc10:	cbz	x0, 40fc38 <init_hash_files@@Base+0xd70>
  40fc14:	ldr	x20, [x0, #8]
  40fc18:	mov	x0, x20
  40fc1c:	bl	406680 <strlen@plt>
  40fc20:	mov	x1, x20
  40fc24:	mov	x2, x0
  40fc28:	mov	x0, x19
  40fc2c:	ldp	x19, x20, [sp, #16]
  40fc30:	ldp	x29, x30, [sp], #32
  40fc34:	b	40bbb0 <variable_buffer_output@@Base>
  40fc38:	mov	x0, x19
  40fc3c:	ldp	x19, x20, [sp, #16]
  40fc40:	ldp	x29, x30, [sp], #32
  40fc44:	ret
  40fc48:	stp	x29, x30, [sp, #-80]!
  40fc4c:	mov	x29, sp
  40fc50:	stp	x21, x22, [sp, #32]
  40fc54:	ldr	x22, [x1]
  40fc58:	stp	x19, x20, [sp, #16]
  40fc5c:	mov	x20, x1
  40fc60:	stp	x23, x24, [sp, #48]
  40fc64:	mov	x24, x0
  40fc68:	mov	x23, x2
  40fc6c:	stp	x25, x26, [sp, #64]
  40fc70:	cbz	x22, 40fdbc <init_hash_files@@Base+0xef4>
  40fc74:	mov	x21, x1
  40fc78:	mov	x0, x22
  40fc7c:	mov	x19, #0x0                   	// #0
  40fc80:	bl	406680 <strlen@plt>
  40fc84:	mov	x3, x0
  40fc88:	ldr	x0, [x21, #8]!
  40fc8c:	add	x3, x3, #0x2
  40fc90:	add	x19, x19, x3
  40fc94:	cbnz	x0, 40fc80 <init_hash_files@@Base+0xdb8>
  40fc98:	add	x0, x19, #0x1
  40fc9c:	add	x0, x0, #0xf
  40fca0:	and	x0, x0, #0xfffffffffffffff0
  40fca4:	sub	sp, sp, x0
  40fca8:	mov	x26, sp
  40fcac:	ldr	x3, [x20, #8]
  40fcb0:	mov	x19, x26
  40fcb4:	strb	wzr, [x26]
  40fcb8:	cbz	x3, 40fcec <init_hash_files@@Base+0xe24>
  40fcbc:	mov	w25, #0x202c                	// #8236
  40fcc0:	ldr	x21, [x20], #8
  40fcc4:	mov	x22, x3
  40fcc8:	mov	x0, x19
  40fccc:	mov	x1, x21
  40fcd0:	bl	406c30 <strcpy@plt>
  40fcd4:	mov	x0, x21
  40fcd8:	bl	406680 <strlen@plt>
  40fcdc:	add	x19, x19, x0
  40fce0:	ldr	x3, [x20, #8]
  40fce4:	strh	w25, [x19], #2
  40fce8:	cbnz	x3, 40fcc0 <init_hash_files@@Base+0xdf8>
  40fcec:	mov	x1, x22
  40fcf0:	mov	x0, x19
  40fcf4:	bl	406c30 <strcpy@plt>
  40fcf8:	ldrb	w0, [x23]
  40fcfc:	cmp	w0, #0x69
  40fd00:	b.eq	40fd80 <init_hash_files@@Base+0xeb8>  // b.none
  40fd04:	cmp	w0, #0x77
  40fd08:	b.ne	40fd50 <init_hash_files@@Base+0xe88>  // b.any
  40fd0c:	mov	x0, x26
  40fd10:	bl	406680 <strlen@plt>
  40fd14:	adrp	x2, 448000 <output_context@@Base+0x1208>
  40fd18:	mov	x1, x0
  40fd1c:	mov	x3, x26
  40fd20:	ldr	x0, [x2, #3640]
  40fd24:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40fd28:	add	x2, x2, #0xff0
  40fd2c:	bl	41bd88 <error@@Base>
  40fd30:	mov	sp, x29
  40fd34:	mov	x0, x24
  40fd38:	ldp	x19, x20, [sp, #16]
  40fd3c:	ldp	x21, x22, [sp, #32]
  40fd40:	ldp	x23, x24, [sp, #48]
  40fd44:	ldp	x25, x26, [sp, #64]
  40fd48:	ldp	x29, x30, [sp], #80
  40fd4c:	ret
  40fd50:	cmp	w0, #0x65
  40fd54:	b.eq	40fdc4 <init_hash_files@@Base+0xefc>  // b.none
  40fd58:	mov	x0, x23
  40fd5c:	bl	406680 <strlen@plt>
  40fd60:	adrp	x2, 445000 <memcpy@GLIBC_2.17>
  40fd64:	mov	x1, x0
  40fd68:	mov	x3, x23
  40fd6c:	ldr	x0, [x2, #3296]
  40fd70:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40fd74:	add	x2, x2, #0xd40
  40fd78:	ldr	x0, [x0]
  40fd7c:	bl	41c0a0 <fatal@@Base>
  40fd80:	mov	x1, x26
  40fd84:	mov	w0, #0x0                   	// #0
  40fd88:	bl	41bbf8 <outputs@@Base>
  40fd8c:	mov	w0, #0x0                   	// #0
  40fd90:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  40fd94:	add	x1, x1, #0x328
  40fd98:	bl	41bbf8 <outputs@@Base>
  40fd9c:	mov	sp, x29
  40fda0:	mov	x0, x24
  40fda4:	ldp	x19, x20, [sp, #16]
  40fda8:	ldp	x21, x22, [sp, #32]
  40fdac:	ldp	x23, x24, [sp, #48]
  40fdb0:	ldp	x25, x26, [sp, #64]
  40fdb4:	ldp	x29, x30, [sp], #80
  40fdb8:	ret
  40fdbc:	mov	x0, #0x1                   	// #1
  40fdc0:	b	40fc9c <init_hash_files@@Base+0xdd4>
  40fdc4:	mov	x0, x26
  40fdc8:	bl	406680 <strlen@plt>
  40fdcc:	adrp	x2, 448000 <output_context@@Base+0x1208>
  40fdd0:	mov	x1, x0
  40fdd4:	mov	x3, x26
  40fdd8:	ldr	x0, [x2, #3640]
  40fddc:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40fde0:	add	x2, x2, #0xff0
  40fde4:	bl	41c0a0 <fatal@@Base>
  40fde8:	stp	x29, x30, [sp, #-144]!
  40fdec:	mov	x29, sp
  40fdf0:	stp	x19, x20, [sp, #16]
  40fdf4:	mov	x20, x0
  40fdf8:	mov	x19, x1
  40fdfc:	ldr	x0, [x1]
  40fe00:	stp	x21, x22, [sp, #32]
  40fe04:	stp	x23, x24, [sp, #48]
  40fe08:	stp	x25, x26, [sp, #64]
  40fe0c:	stp	x27, x28, [sp, #80]
  40fe10:	bl	41ac48 <next_token@@Base>
  40fe14:	mov	x21, x0
  40fe18:	bl	41ac18 <end_of_token@@Base>
  40fe1c:	strb	wzr, [x0]
  40fe20:	ldrb	w1, [x21]
  40fe24:	cbnz	w1, 40fe4c <init_hash_files@@Base+0xf84>
  40fe28:	mov	x0, x20
  40fe2c:	mov	sp, x29
  40fe30:	ldp	x19, x20, [sp, #16]
  40fe34:	ldp	x21, x22, [sp, #32]
  40fe38:	ldp	x23, x24, [sp, #48]
  40fe3c:	ldp	x25, x26, [sp, #64]
  40fe40:	ldp	x27, x28, [sp, #80]
  40fe44:	ldp	x29, x30, [sp], #144
  40fe48:	ret
  40fe4c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40fe50:	add	x0, x0, #0x4c0
  40fe54:	ldrh	w1, [x0, w1, sxtw #1]
  40fe58:	tbz	w1, #13, 40fee8 <init_hash_files@@Base+0x1020>
  40fe5c:	mov	x1, x21
  40fe60:	ldrb	w2, [x1, #1]!
  40fe64:	ldrh	w2, [x0, x2, lsl #1]
  40fe68:	tbnz	w2, #13, 40fe60 <init_hash_files@@Base+0xf98>
  40fe6c:	cmp	x21, x1
  40fe70:	b.eq	40fee8 <init_hash_files@@Base+0x1020>  // b.none
  40fe74:	tst	x2, #0x7
  40fe78:	b.eq	40fee8 <init_hash_files@@Base+0x1020>  // b.none
  40fe7c:	sub	x2, x1, x21
  40fe80:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  40fe84:	add	x1, x29, #0x78
  40fe88:	add	x0, x0, #0x348
  40fe8c:	str	x21, [x29, #128]
  40fe90:	strb	w2, [x29, #136]
  40fe94:	bl	412950 <hash_find_item@@Base>
  40fe98:	mov	x3, x0
  40fe9c:	cbz	x0, 40fee8 <init_hash_files@@Base+0x1020>
  40fea0:	ldr	x0, [x19, #8]
  40fea4:	add	x2, x19, #0x8
  40fea8:	cbz	x0, 4100cc <init_hash_files@@Base+0x1204>
  40feac:	mov	x4, #0x1                   	// #1
  40feb0:	mov	w1, w4
  40feb4:	add	x4, x4, #0x1
  40feb8:	ldr	x5, [x19, x4, lsl #3]
  40febc:	cbnz	x5, 40feb0 <init_hash_files@@Base+0xfe8>
  40fec0:	mov	x0, x20
  40fec4:	bl	40f5c0 <init_hash_files@@Base+0x6f8>
  40fec8:	mov	sp, x29
  40fecc:	ldp	x19, x20, [sp, #16]
  40fed0:	ldp	x21, x22, [sp, #32]
  40fed4:	ldp	x23, x24, [sp, #48]
  40fed8:	ldp	x25, x26, [sp, #64]
  40fedc:	ldp	x27, x28, [sp, #80]
  40fee0:	ldp	x29, x30, [sp], #144
  40fee4:	ret
  40fee8:	mov	x0, x21
  40feec:	bl	406680 <strlen@plt>
  40fef0:	mov	x22, x0
  40fef4:	mov	x0, x21
  40fef8:	mov	x1, x22
  40fefc:	bl	4257c8 <lookup_variable@@Base>
  40ff00:	mov	x25, x0
  40ff04:	cbz	x0, 41008c <init_hash_files@@Base+0x11c4>
  40ff08:	ldr	x0, [x0, #8]
  40ff0c:	ldrb	w0, [x0]
  40ff10:	cbz	w0, 40fe28 <init_hash_files@@Base+0xf60>
  40ff14:	add	x0, x22, #0x13
  40ff18:	mov	x2, x22
  40ff1c:	and	x0, x0, #0xfffffffffffffff0
  40ff20:	mov	w3, #0x2824                	// #10276
  40ff24:	sub	sp, sp, x0
  40ff28:	add	x27, x22, #0x3
  40ff2c:	mov	x26, sp
  40ff30:	mov	x1, x21
  40ff34:	mov	x0, x26
  40ff38:	add	x22, x26, x22
  40ff3c:	strh	w3, [x0], #2
  40ff40:	bl	406640 <memcpy@plt>
  40ff44:	mov	w0, #0x29                  	// #41
  40ff48:	strb	w0, [x22, #2]
  40ff4c:	strb	wzr, [x26, x27]
  40ff50:	bl	425a78 <push_new_variable_scope@@Base>
  40ff54:	ldr	x0, [x19]
  40ff58:	cbz	x0, 4100d4 <init_hash_files@@Base+0x120c>
  40ff5c:	adrp	x24, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ff60:	adrp	x23, 446000 <expanding_var@@Base+0x320>
  40ff64:	add	x24, x24, #0xc20
  40ff68:	add	x23, x23, #0x150
  40ff6c:	add	x22, x29, #0x78
  40ff70:	mov	w21, #0x0                   	// #0
  40ff74:	nop
  40ff78:	mov	w2, w21
  40ff7c:	mov	x1, x24
  40ff80:	mov	x0, x22
  40ff84:	bl	406730 <sprintf@plt>
  40ff88:	mov	x0, x22
  40ff8c:	add	w21, w21, #0x1
  40ff90:	bl	406680 <strlen@plt>
  40ff94:	mov	x1, x0
  40ff98:	ldr	x3, [x23]
  40ff9c:	mov	x0, x22
  40ffa0:	ldr	x2, [x19]
  40ffa4:	mov	x6, #0x0                   	// #0
  40ffa8:	ldr	x5, [x3, #8]
  40ffac:	mov	w4, #0x0                   	// #0
  40ffb0:	mov	w3, #0x6                   	// #6
  40ffb4:	bl	4253c8 <define_variable_in_set@@Base>
  40ffb8:	ldr	x0, [x19, #8]!
  40ffbc:	cbnz	x0, 40ff78 <init_hash_files@@Base+0x10b0>
  40ffc0:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  40ffc4:	add	x19, x19, #0x348
  40ffc8:	ldr	w3, [x19, #88]
  40ffcc:	cmp	w3, w21
  40ffd0:	b.le	41003c <init_hash_files@@Base+0x1174>
  40ffd4:	adrp	x24, 42a000 <_IO_stdin_used@@Base+0x10e0>
  40ffd8:	adrp	x23, 446000 <expanding_var@@Base+0x320>
  40ffdc:	adrp	x28, 42d000 <_IO_stdin_used@@Base+0x40e0>
  40ffe0:	add	x24, x24, #0xc20
  40ffe4:	add	x23, x23, #0x150
  40ffe8:	add	x22, x29, #0x78
  40ffec:	add	x28, x28, #0xed0
  40fff0:	mov	w2, w21
  40fff4:	mov	x1, x24
  40fff8:	mov	x0, x22
  40fffc:	bl	406730 <sprintf@plt>
  410000:	mov	x0, x22
  410004:	add	w21, w21, #0x1
  410008:	bl	406680 <strlen@plt>
  41000c:	mov	x1, x0
  410010:	ldr	x5, [x23]
  410014:	mov	w3, #0x6                   	// #6
  410018:	mov	x2, x28
  41001c:	mov	x0, x22
  410020:	mov	x6, #0x0                   	// #0
  410024:	mov	w4, #0x0                   	// #0
  410028:	ldr	x5, [x5, #8]
  41002c:	bl	4253c8 <define_variable_in_set@@Base>
  410030:	ldr	w3, [x19, #88]
  410034:	cmp	w3, w21
  410038:	b.gt	40fff0 <init_hash_files@@Base+0x1128>
  41003c:	str	w3, [x29, #108]
  410040:	mov	x2, x27
  410044:	mov	x1, x26
  410048:	mov	x0, x20
  41004c:	ldr	w4, [x25, #44]
  410050:	orr	w4, w4, #0x7fff00
  410054:	str	w4, [x25, #44]
  410058:	str	w21, [x19, #88]
  41005c:	bl	40bd68 <variable_expand_string@@Base>
  410060:	mov	x20, x0
  410064:	ldr	w3, [x29, #108]
  410068:	str	w3, [x19, #88]
  41006c:	ldr	w0, [x25, #44]
  410070:	and	w0, w0, #0xff8000ff
  410074:	str	w0, [x25, #44]
  410078:	bl	425b18 <pop_variable_scope@@Base>
  41007c:	mov	x0, x20
  410080:	bl	406680 <strlen@plt>
  410084:	add	x0, x20, x0
  410088:	b	40fe2c <init_hash_files@@Base+0xf64>
  41008c:	adrp	x1, 449000 <commands_started@@Base+0x170>
  410090:	ldr	w1, [x1, #2144]
  410094:	cbz	w1, 40fe28 <init_hash_files@@Base+0xf60>
  410098:	adrp	x3, 448000 <output_context@@Base+0x1208>
  41009c:	mov	w2, #0x5                   	// #5
  4100a0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  4100a4:	add	x1, x1, #0x550
  4100a8:	ldr	x19, [x3, #3640]
  4100ac:	bl	406cd0 <dcgettext@plt>
  4100b0:	mov	x4, x21
  4100b4:	mov	x2, x0
  4100b8:	mov	w3, w22
  4100bc:	mov	x1, x22
  4100c0:	mov	x0, x19
  4100c4:	bl	41bd88 <error@@Base>
  4100c8:	b	40fe28 <init_hash_files@@Base+0xf60>
  4100cc:	mov	w1, #0x0                   	// #0
  4100d0:	b	40fec0 <init_hash_files@@Base+0xff8>
  4100d4:	mov	w21, #0x0                   	// #0
  4100d8:	b	40ffc0 <init_hash_files@@Base+0x10f8>
  4100dc:	nop
  4100e0:	stp	x29, x30, [sp, #-96]!
  4100e4:	mov	x29, sp
  4100e8:	stp	x19, x20, [sp, #16]
  4100ec:	mov	x19, x1
  4100f0:	mov	x20, x0
  4100f4:	mov	x1, #0x0                   	// #0
  4100f8:	stp	x21, x22, [sp, #32]
  4100fc:	mov	w22, #0x0                   	// #0
  410100:	ldr	x0, [x19]
  410104:	stp	x23, x24, [sp, #48]
  410108:	adrp	x23, 42c000 <_IO_stdin_used@@Base+0x30e0>
  41010c:	stp	x25, x26, [sp, #64]
  410110:	add	x23, x23, #0x670
  410114:	bl	40bc38 <expand_argument@@Base>
  410118:	mov	x26, x0
  41011c:	mov	x1, #0x0                   	// #0
  410120:	ldr	x0, [x19, #8]
  410124:	bl	40bc38 <expand_argument@@Base>
  410128:	mov	x25, x0
  41012c:	mov	x0, x26
  410130:	str	x25, [sp, #80]
  410134:	ldr	x24, [x19, #16]
  410138:	bl	41ac48 <next_token@@Base>
  41013c:	mov	x19, x0
  410140:	bl	41ac18 <end_of_token@@Base>
  410144:	strb	wzr, [x0]
  410148:	bl	425a78 <push_new_variable_scope@@Base>
  41014c:	mov	x0, x19
  410150:	bl	406680 <strlen@plt>
  410154:	adrp	x3, 446000 <expanding_var@@Base+0x320>
  410158:	mov	x1, x0
  41015c:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x40e0>
  410160:	mov	x0, x19
  410164:	ldr	x5, [x3, #336]
  410168:	add	x2, x2, #0xed0
  41016c:	mov	x6, #0x0                   	// #0
  410170:	mov	w4, #0x0                   	// #0
  410174:	mov	w3, #0x6                   	// #6
  410178:	ldr	x5, [x5, #8]
  41017c:	bl	4253c8 <define_variable_in_set@@Base>
  410180:	mov	x21, x0
  410184:	b	4101e0 <init_hash_files@@Base+0x1318>
  410188:	ldr	x0, [x21, #8]
  41018c:	mov	w22, #0x1                   	// #1
  410190:	bl	406b90 <free@plt>
  410194:	ldr	x1, [sp, #88]
  410198:	mov	x0, x19
  41019c:	bl	41abd0 <xstrndup@@Base>
  4101a0:	str	x0, [x21, #8]
  4101a4:	mov	x1, #0x0                   	// #0
  4101a8:	mov	x0, x24
  4101ac:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  4101b0:	mov	x19, x0
  4101b4:	bl	406680 <strlen@plt>
  4101b8:	mov	x2, x0
  4101bc:	mov	x1, x19
  4101c0:	mov	x0, x20
  4101c4:	bl	40bbb0 <variable_buffer_output@@Base>
  4101c8:	mov	x1, x23
  4101cc:	mov	x2, #0x1                   	// #1
  4101d0:	bl	40bbb0 <variable_buffer_output@@Base>
  4101d4:	mov	x20, x0
  4101d8:	mov	x0, x19
  4101dc:	bl	406b90 <free@plt>
  4101e0:	add	x1, sp, #0x58
  4101e4:	add	x0, sp, #0x50
  4101e8:	bl	41ac78 <find_next_token@@Base>
  4101ec:	mov	x19, x0
  4101f0:	cbnz	x0, 410188 <init_hash_files@@Base+0x12c0>
  4101f4:	bl	425b18 <pop_variable_scope@@Base>
  4101f8:	and	x22, x22, #0x1
  4101fc:	mov	x0, x26
  410200:	bl	406b90 <free@plt>
  410204:	sub	x20, x20, x22
  410208:	mov	x0, x25
  41020c:	bl	406b90 <free@plt>
  410210:	mov	x0, x20
  410214:	ldp	x19, x20, [sp, #16]
  410218:	ldp	x21, x22, [sp, #32]
  41021c:	ldp	x23, x24, [sp, #48]
  410220:	ldp	x25, x26, [sp, #64]
  410224:	ldp	x29, x30, [sp], #96
  410228:	ret
  41022c:	nop
  410230:	stp	x29, x30, [sp, #-32]!
  410234:	mov	x29, sp
  410238:	stp	x19, x20, [sp, #16]
  41023c:	mov	x19, x0
  410240:	ldr	x20, [x1]
  410244:	mov	x0, x20
  410248:	bl	406680 <strlen@plt>
  41024c:	mov	x1, x0
  410250:	mov	x0, x20
  410254:	bl	4257c8 <lookup_variable@@Base>
  410258:	cbz	x0, 41030c <init_hash_files@@Base+0x1444>
  41025c:	ldrb	w1, [x0, #47]
  410260:	ubfx	x1, x1, #2, #3
  410264:	cmp	w1, #0x3
  410268:	b.eq	410328 <init_hash_files@@Base+0x1460>  // b.none
  41026c:	b.hi	41029c <init_hash_files@@Base+0x13d4>  // b.pmore
  410270:	cmp	w1, #0x1
  410274:	b.eq	410360 <init_hash_files@@Base+0x1498>  // b.none
  410278:	cmp	w1, #0x2
  41027c:	b.ne	4102ec <init_hash_files@@Base+0x1424>  // b.any
  410280:	mov	x0, x19
  410284:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  410288:	ldp	x19, x20, [sp, #16]
  41028c:	add	x1, x1, #0xd90
  410290:	ldp	x29, x30, [sp], #32
  410294:	mov	x2, #0x4                   	// #4
  410298:	b	40bbb0 <variable_buffer_output@@Base>
  41029c:	cmp	w1, #0x5
  4102a0:	b.eq	410344 <init_hash_files@@Base+0x147c>  // b.none
  4102a4:	cmp	w1, #0x6
  4102a8:	b.ne	4102c8 <init_hash_files@@Base+0x1400>  // b.any
  4102ac:	mov	x0, x19
  4102b0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  4102b4:	ldp	x19, x20, [sp, #16]
  4102b8:	add	x1, x1, #0xdd0
  4102bc:	ldp	x29, x30, [sp], #32
  4102c0:	mov	x2, #0x9                   	// #9
  4102c4:	b	40bbb0 <variable_buffer_output@@Base>
  4102c8:	cmp	w1, #0x4
  4102cc:	b.ne	41037c <init_hash_files@@Base+0x14b4>  // b.any
  4102d0:	mov	x0, x19
  4102d4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  4102d8:	ldp	x19, x20, [sp, #16]
  4102dc:	add	x1, x1, #0xdb0
  4102e0:	ldp	x29, x30, [sp], #32
  4102e4:	mov	x2, #0xc                   	// #12
  4102e8:	b	40bbb0 <variable_buffer_output@@Base>
  4102ec:	cbnz	w1, 41037c <init_hash_files@@Base+0x14b4>
  4102f0:	mov	x0, x19
  4102f4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  4102f8:	ldp	x19, x20, [sp, #16]
  4102fc:	add	x1, x1, #0xd78
  410300:	ldp	x29, x30, [sp], #32
  410304:	mov	x2, #0x7                   	// #7
  410308:	b	40bbb0 <variable_buffer_output@@Base>
  41030c:	mov	x0, x19
  410310:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  410314:	ldp	x19, x20, [sp, #16]
  410318:	add	x1, x1, #0xd68
  41031c:	ldp	x29, x30, [sp], #32
  410320:	mov	x2, #0x9                   	// #9
  410324:	b	40bbb0 <variable_buffer_output@@Base>
  410328:	mov	x0, x19
  41032c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  410330:	ldp	x19, x20, [sp, #16]
  410334:	add	x1, x1, #0xd98
  410338:	ldp	x29, x30, [sp], #32
  41033c:	mov	x2, #0x14                  	// #20
  410340:	b	40bbb0 <variable_buffer_output@@Base>
  410344:	mov	x0, x19
  410348:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  41034c:	ldp	x19, x20, [sp, #16]
  410350:	add	x1, x1, #0xdc0
  410354:	ldp	x29, x30, [sp], #32
  410358:	mov	x2, #0x8                   	// #8
  41035c:	b	40bbb0 <variable_buffer_output@@Base>
  410360:	mov	x0, x19
  410364:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  410368:	ldp	x19, x20, [sp, #16]
  41036c:	add	x1, x1, #0xd80
  410370:	ldp	x29, x30, [sp], #32
  410374:	mov	x2, #0xb                   	// #11
  410378:	b	40bbb0 <variable_buffer_output@@Base>
  41037c:	bl	406ab0 <abort@plt>
  410380:	stp	x29, x30, [sp, #-128]!
  410384:	mov	w4, #0x19                  	// #25
  410388:	mov	x3, #0x0                   	// #0
  41038c:	mov	x29, sp
  410390:	ldr	x5, [x1]
  410394:	stp	x21, x22, [sp, #32]
  410398:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  41039c:	add	x21, x21, #0x348
  4103a0:	mov	w2, #0x1                   	// #1
  4103a4:	mov	x1, #0x10                  	// #16
  4103a8:	stp	x19, x20, [sp, #16]
  4103ac:	stp	x23, x24, [sp, #48]
  4103b0:	mov	x24, x0
  4103b4:	add	x0, sp, #0x78
  4103b8:	str	x5, [sp, #120]
  4103bc:	bl	41e790 <parse_file_seq@@Base>
  4103c0:	ldr	x19, [x21, #96]
  4103c4:	mov	x20, x0
  4103c8:	cbz	x19, 4104dc <init_hash_files@@Base+0x1614>
  4103cc:	cbz	x20, 4104d4 <init_hash_files@@Base+0x160c>
  4103d0:	stp	x25, x26, [sp, #64]
  4103d4:	mov	w26, #0x20                  	// #32
  4103d8:	stp	x27, x28, [sp, #80]
  4103dc:	mov	x28, #0x0                   	// #0
  4103e0:	b	410408 <init_hash_files@@Base+0x1540>
  4103e4:	bl	406640 <memcpy@plt>
  4103e8:	strb	w26, [x19, x23]
  4103ec:	ldr	x0, [x20, #8]
  4103f0:	bl	406b90 <free@plt>
  4103f4:	mov	x0, x20
  4103f8:	bl	406b90 <free@plt>
  4103fc:	cbz	x25, 41048c <init_hash_files@@Base+0x15c4>
  410400:	mov	x28, x27
  410404:	mov	x20, x25
  410408:	ldp	x25, x23, [x20]
  41040c:	mov	x0, x23
  410410:	bl	406680 <strlen@plt>
  410414:	mov	x22, x0
  410418:	mov	x1, x23
  41041c:	add	x23, x28, x22
  410420:	add	x0, x19, x28
  410424:	ldr	x4, [x21, #104]
  410428:	add	x3, x19, x23
  41042c:	str	x3, [sp, #104]
  410430:	add	x27, x23, #0x1
  410434:	mov	x2, x22
  410438:	cmp	x27, x4
  41043c:	b.ls	4103e4 <init_hash_files@@Base+0x151c>  // b.plast
  410440:	add	x1, x22, #0x1
  410444:	mov	x0, x19
  410448:	add	x1, x4, x1, lsl #1
  41044c:	str	x1, [x21, #104]
  410450:	bl	41ab78 <xrealloc@@Base>
  410454:	mov	x19, x0
  410458:	ldr	x1, [x20, #8]
  41045c:	add	x3, x19, x23
  410460:	mov	x2, x22
  410464:	add	x0, x0, x28
  410468:	str	x19, [x21, #96]
  41046c:	str	x3, [sp, #104]
  410470:	bl	406640 <memcpy@plt>
  410474:	strb	w26, [x19, x23]
  410478:	ldr	x0, [x20, #8]
  41047c:	bl	406b90 <free@plt>
  410480:	mov	x0, x20
  410484:	bl	406b90 <free@plt>
  410488:	cbnz	x25, 410400 <init_hash_files@@Base+0x1538>
  41048c:	cbz	x27, 4104cc <init_hash_files@@Base+0x1604>
  410490:	ldr	x0, [sp, #104]
  410494:	strb	wzr, [x0]
  410498:	ldp	x25, x26, [sp, #64]
  41049c:	ldp	x27, x28, [sp, #80]
  4104a0:	mov	x0, x19
  4104a4:	bl	406680 <strlen@plt>
  4104a8:	mov	x2, x0
  4104ac:	mov	x1, x19
  4104b0:	mov	x0, x24
  4104b4:	bl	40bbb0 <variable_buffer_output@@Base>
  4104b8:	ldp	x19, x20, [sp, #16]
  4104bc:	ldp	x21, x22, [sp, #32]
  4104c0:	ldp	x23, x24, [sp, #48]
  4104c4:	ldp	x29, x30, [sp], #128
  4104c8:	ret
  4104cc:	ldp	x25, x26, [sp, #64]
  4104d0:	ldp	x27, x28, [sp, #80]
  4104d4:	strb	wzr, [x19]
  4104d8:	b	4104a0 <init_hash_files@@Base+0x15d8>
  4104dc:	mov	x0, #0x64                  	// #100
  4104e0:	str	x0, [x21, #104]
  4104e4:	bl	41ab28 <xmalloc@@Base>
  4104e8:	mov	x19, x0
  4104ec:	str	x0, [x21, #96]
  4104f0:	b	4103cc <init_hash_files@@Base+0x1504>
  4104f4:	nop
  4104f8:	stp	x29, x30, [sp, #-112]!
  4104fc:	mov	x29, sp
  410500:	stp	x19, x20, [sp, #16]
  410504:	mov	x20, x0
  410508:	mov	w19, #0x0                   	// #0
  41050c:	ldr	x0, [x1]
  410510:	stp	x21, x22, [sp, #32]
  410514:	mov	x22, x1
  410518:	str	x0, [sp, #96]
  41051c:	b	410530 <init_hash_files@@Base+0x1668>
  410520:	ldr	x2, [sp, #96]
  410524:	add	w19, w19, #0x1
  410528:	add	x2, x2, #0x1
  41052c:	str	x2, [sp, #96]
  410530:	add	x0, sp, #0x60
  410534:	mov	x1, #0x0                   	// #0
  410538:	bl	41ac78 <find_next_token@@Base>
  41053c:	cbnz	x0, 410520 <init_hash_files@@Base+0x1658>
  410540:	cmp	w19, #0x0
  410544:	sbfiz	x19, x19, #3, #32
  410548:	mov	x0, #0x8                   	// #8
  41054c:	csel	x0, x19, x0, ne  // ne = any
  410550:	mov	x19, #0x0                   	// #0
  410554:	bl	41ab28 <xmalloc@@Base>
  410558:	mov	x21, x0
  41055c:	ldr	x1, [x22]
  410560:	str	x1, [sp, #96]
  410564:	b	410580 <init_hash_files@@Base+0x16b8>
  410568:	ldp	x1, x2, [sp, #96]
  41056c:	add	x1, x1, #0x1
  410570:	str	x1, [sp, #96]
  410574:	strb	wzr, [x0, x2]
  410578:	str	x0, [x21, x19, lsl #3]
  41057c:	add	x19, x19, #0x1
  410580:	add	x1, sp, #0x68
  410584:	add	x0, sp, #0x60
  410588:	mov	w22, w19
  41058c:	bl	41ac78 <find_next_token@@Base>
  410590:	cbnz	x0, 410568 <init_hash_files@@Base+0x16a0>
  410594:	cbnz	w19, 4105b4 <init_hash_files@@Base+0x16ec>
  410598:	mov	x0, x21
  41059c:	bl	406b90 <free@plt>
  4105a0:	mov	x0, x20
  4105a4:	ldp	x19, x20, [sp, #16]
  4105a8:	ldp	x21, x22, [sp, #32]
  4105ac:	ldp	x29, x30, [sp], #112
  4105b0:	ret
  4105b4:	sxtw	x1, w19
  4105b8:	mov	x0, x21
  4105bc:	adrp	x3, 41a000 <die@@Base+0x780>
  4105c0:	mov	x2, #0x8                   	// #8
  4105c4:	add	x3, x3, #0x690
  4105c8:	stp	x23, x24, [sp, #48]
  4105cc:	mov	x24, x21
  4105d0:	mov	w23, #0x0                   	// #0
  4105d4:	stp	x25, x26, [sp, #64]
  4105d8:	adrp	x26, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4105dc:	add	x26, x26, #0x670
  4105e0:	stp	x27, x28, [sp, #80]
  4105e4:	sub	w27, w19, #0x1
  4105e8:	bl	4067b0 <qsort@plt>
  4105ec:	b	41061c <init_hash_files@@Base+0x1754>
  4105f0:	mov	x2, x19
  4105f4:	mov	x1, x25
  4105f8:	mov	x0, x20
  4105fc:	bl	40bbb0 <variable_buffer_output@@Base>
  410600:	mov	x1, x26
  410604:	mov	x2, #0x1                   	// #1
  410608:	bl	40bbb0 <variable_buffer_output@@Base>
  41060c:	add	x24, x24, #0x8
  410610:	mov	x20, x0
  410614:	cmp	w22, w23
  410618:	b.eq	41066c <init_hash_files@@Base+0x17a4>  // b.none
  41061c:	ldr	x25, [x24]
  410620:	mov	x0, x25
  410624:	bl	406680 <strlen@plt>
  410628:	str	x0, [sp, #104]
  41062c:	cmp	w27, w23
  410630:	mov	x19, x0
  410634:	add	w23, w23, #0x1
  410638:	b.eq	4105f0 <init_hash_files@@Base+0x1728>  // b.none
  41063c:	ldr	x28, [x24, #8]
  410640:	mov	x0, x28
  410644:	bl	406680 <strlen@plt>
  410648:	cmp	x19, x0
  41064c:	b.ne	4105f0 <init_hash_files@@Base+0x1728>  // b.any
  410650:	mov	x1, x28
  410654:	mov	x0, x25
  410658:	bl	406b40 <strcmp@plt>
  41065c:	cbnz	w0, 4105f0 <init_hash_files@@Base+0x1728>
  410660:	add	x24, x24, #0x8
  410664:	cmp	w22, w23
  410668:	b.ne	41061c <init_hash_files@@Base+0x1754>  // b.any
  41066c:	mov	x0, x21
  410670:	sub	x20, x20, #0x1
  410674:	ldp	x23, x24, [sp, #48]
  410678:	ldp	x25, x26, [sp, #64]
  41067c:	ldp	x27, x28, [sp, #80]
  410680:	bl	406b90 <free@plt>
  410684:	mov	x0, x20
  410688:	ldp	x19, x20, [sp, #16]
  41068c:	ldp	x21, x22, [sp, #32]
  410690:	ldp	x29, x30, [sp], #112
  410694:	ret
  410698:	mov	x12, #0x20d0                	// #8400
  41069c:	sub	sp, sp, x12
  4106a0:	stp	x29, x30, [sp]
  4106a4:	mov	x29, sp
  4106a8:	stp	x19, x20, [sp, #16]
  4106ac:	mov	x20, x0
  4106b0:	ldr	x0, [x1]
  4106b4:	stp	x21, x22, [sp, #32]
  4106b8:	adrp	x22, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4106bc:	mov	w21, #0x0                   	// #0
  4106c0:	add	x22, x22, #0x670
  4106c4:	stp	x0, xzr, [sp, #48]
  4106c8:	b	4106d8 <init_hash_files@@Base+0x1810>
  4106cc:	ldr	x19, [sp, #56]
  4106d0:	cmp	x19, #0xfff
  4106d4:	b.ls	410708 <init_hash_files@@Base+0x1840>  // b.plast
  4106d8:	add	x1, sp, #0x38
  4106dc:	add	x0, sp, #0x30
  4106e0:	bl	41ac78 <find_next_token@@Base>
  4106e4:	cbnz	x0, 4106cc <init_hash_files@@Base+0x1804>
  4106e8:	and	x0, x21, #0x1
  4106ec:	mov	x12, #0x20d0                	// #8400
  4106f0:	sub	x0, x20, x0
  4106f4:	ldp	x29, x30, [sp]
  4106f8:	ldp	x19, x20, [sp, #16]
  4106fc:	ldp	x21, x22, [sp, #32]
  410700:	add	sp, sp, x12
  410704:	ret
  410708:	mov	x1, x0
  41070c:	mov	x2, x19
  410710:	add	x0, sp, #0xc0
  410714:	bl	406d20 <strncpy@plt>
  410718:	add	x0, sp, #0xc0
  41071c:	strb	wzr, [x0, x19]
  410720:	bl	406d70 <__errno_location@plt>
  410724:	mov	x19, x0
  410728:	b	410738 <init_hash_files@@Base+0x1870>
  41072c:	ldr	w1, [x19]
  410730:	cmp	w1, #0x4
  410734:	b.ne	4106d8 <init_hash_files@@Base+0x1810>  // b.any
  410738:	mov	x4, #0x10c8                	// #4296
  41073c:	str	wzr, [x19]
  410740:	add	x1, sp, x4
  410744:	add	x0, sp, #0xc0
  410748:	bl	406ce0 <realpath@plt>
  41074c:	cbz	x0, 41072c <init_hash_files@@Base+0x1864>
  410750:	mov	x3, #0x10c8                	// #4296
  410754:	add	x2, sp, #0x40
  410758:	add	x1, sp, x3
  41075c:	mov	w0, #0x0                   	// #0
  410760:	bl	406d90 <__xstat@plt>
  410764:	cmn	w0, #0x1
  410768:	b.ne	410798 <init_hash_files@@Base+0x18d0>  // b.any
  41076c:	nop
  410770:	ldr	w0, [x19]
  410774:	cmp	w0, #0x4
  410778:	b.ne	4106d8 <init_hash_files@@Base+0x1810>  // b.any
  41077c:	mov	x3, #0x10c8                	// #4296
  410780:	add	x2, sp, #0x40
  410784:	add	x1, sp, x3
  410788:	mov	w0, #0x0                   	// #0
  41078c:	bl	406d90 <__xstat@plt>
  410790:	cmn	w0, #0x1
  410794:	b.eq	410770 <init_hash_files@@Base+0x18a8>  // b.none
  410798:	cbnz	w0, 4106d8 <init_hash_files@@Base+0x1810>
  41079c:	mov	x0, #0x10c8                	// #4296
  4107a0:	add	x0, sp, x0
  4107a4:	bl	406680 <strlen@plt>
  4107a8:	mov	x2, x0
  4107ac:	mov	x1, #0x10c8                	// #4296
  4107b0:	mov	x0, x20
  4107b4:	add	x1, sp, x1
  4107b8:	bl	40bbb0 <variable_buffer_output@@Base>
  4107bc:	mov	x1, x22
  4107c0:	mov	x2, #0x1                   	// #1
  4107c4:	mov	w21, #0x1                   	// #1
  4107c8:	bl	40bbb0 <variable_buffer_output@@Base>
  4107cc:	mov	x20, x0
  4107d0:	b	4106d8 <init_hash_files@@Base+0x1810>
  4107d4:	nop
  4107d8:	stp	x29, x30, [sp, #-16]!
  4107dc:	mov	x29, sp
  4107e0:	ldr	x0, [x0, #16]
  4107e4:	bl	413218 <jhash_string@@Base>
  4107e8:	mov	w0, w0
  4107ec:	ldp	x29, x30, [sp], #16
  4107f0:	ret
  4107f4:	nop
  4107f8:	mov	x12, #0x2090                	// #8336
  4107fc:	sub	sp, sp, x12
  410800:	stp	x29, x30, [sp]
  410804:	mov	x29, sp
  410808:	stp	x21, x22, [sp, #32]
  41080c:	mov	x22, x0
  410810:	stp	x25, x26, [sp, #64]
  410814:	adrp	x25, 42c000 <_IO_stdin_used@@Base+0x30e0>
  410818:	add	x0, x25, #0x670
  41081c:	str	x0, [sp, #96]
  410820:	ldr	x0, [x1]
  410824:	stp	x19, x20, [sp, #16]
  410828:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  41082c:	add	x20, x20, #0x4c0
  410830:	stp	x23, x24, [sp, #48]
  410834:	mov	w23, #0x0                   	// #0
  410838:	str	x0, [sp, #112]
  41083c:	str	xzr, [sp, #120]
  410840:	b	410850 <init_hash_files@@Base+0x1988>
  410844:	ldr	x19, [sp, #120]
  410848:	cmp	x19, #0xfff
  41084c:	b.ls	410888 <init_hash_files@@Base+0x19c0>  // b.plast
  410850:	add	x1, sp, #0x78
  410854:	add	x0, sp, #0x70
  410858:	bl	41ac78 <find_next_token@@Base>
  41085c:	cbnz	x0, 410844 <init_hash_files@@Base+0x197c>
  410860:	and	x0, x23, #0x1
  410864:	mov	x12, #0x2090                	// #8336
  410868:	sub	x0, x22, x0
  41086c:	ldp	x29, x30, [sp]
  410870:	ldp	x19, x20, [sp, #16]
  410874:	ldp	x21, x22, [sp, #32]
  410878:	ldp	x23, x24, [sp, #48]
  41087c:	ldp	x25, x26, [sp, #64]
  410880:	add	sp, sp, x12
  410884:	ret
  410888:	mov	x1, x0
  41088c:	mov	x2, x19
  410890:	add	x0, sp, #0x80
  410894:	stp	x27, x28, [sp, #80]
  410898:	bl	406d20 <strncpy@plt>
  41089c:	add	x0, sp, #0x80
  4108a0:	strb	wzr, [x0, x19]
  4108a4:	ldrb	w27, [sp, #128]
  4108a8:	cbz	w27, 4109c0 <init_hash_files@@Base+0x1af8>
  4108ac:	cmp	w27, #0x2f
  4108b0:	b.eq	410a18 <init_hash_files@@Base+0x1b50>  // b.none
  4108b4:	adrp	x0, 449000 <commands_started@@Base+0x170>
  4108b8:	ldr	x1, [x0, #2072]
  4108bc:	cbz	x1, 4109c0 <init_hash_files@@Base+0x1af8>
  4108c0:	add	x25, sp, #0x80
  4108c4:	mov	x2, #0x1088                	// #4232
  4108c8:	add	x24, sp, x2
  4108cc:	mov	x0, x24
  4108d0:	bl	406840 <stpcpy@plt>
  4108d4:	ldrh	w19, [x20, w27, sxtw #1]
  4108d8:	add	x21, x24, #0x1, lsl #12
  4108dc:	add	x1, x24, #0x1
  4108e0:	mov	w26, #0x2f                  	// #47
  4108e4:	str	x1, [sp, #104]
  4108e8:	mov	w3, w27
  4108ec:	mov	x1, x25
  4108f0:	tbz	w19, #15, 410908 <init_hash_files@@Base+0x1a40>
  4108f4:	nop
  4108f8:	ldrb	w3, [x25, #1]!
  4108fc:	ldrh	w19, [x20, w3, sxtw #1]
  410900:	tbnz	w19, #15, 4108f8 <init_hash_files@@Base+0x1a30>
  410904:	mov	x1, x25
  410908:	and	w19, w19, #0xffff8001
  41090c:	cbnz	w19, 410970 <init_hash_files@@Base+0x1aa8>
  410910:	ldrb	w27, [x25, #1]!
  410914:	ldrh	w19, [x20, w27, sxtw #1]
  410918:	and	w2, w19, #0xffff8001
  41091c:	cbz	w2, 410910 <init_hash_files@@Base+0x1a48>
  410920:	subs	x28, x25, x1
  410924:	b.eq	410970 <init_hash_files@@Base+0x1aa8>  // b.none
  410928:	cmp	x28, #0x1
  41092c:	b.eq	4109c8 <init_hash_files@@Base+0x1b00>  // b.none
  410930:	cmp	w3, #0x2e
  410934:	ccmp	x28, #0x2, #0x0, eq  // eq = none
  410938:	b.eq	4109d8 <init_hash_files@@Base+0x1b10>  // b.none
  41093c:	ldurb	w2, [x0, #-1]
  410940:	ldrsh	w2, [x20, x2, lsl #1]
  410944:	tbnz	w2, #31, 41094c <init_hash_files@@Base+0x1a84>
  410948:	strb	w26, [x0], #1
  41094c:	add	x2, x0, x28
  410950:	cmp	x21, x2
  410954:	b.ls	4109c0 <init_hash_files@@Base+0x1af8>  // b.plast
  410958:	mov	x2, x28
  41095c:	bl	406640 <memcpy@plt>
  410960:	mov	x1, x0
  410964:	add	x0, x0, x28
  410968:	strb	wzr, [x1, x28]
  41096c:	cbnz	w27, 4108e8 <init_hash_files@@Base+0x1a20>
  410970:	add	x1, x24, #0x1
  410974:	cmp	x0, x1
  410978:	b.ls	410988 <init_hash_files@@Base+0x1ac0>  // b.plast
  41097c:	ldurb	w1, [x0, #-1]
  410980:	ldrsh	x1, [x20, x1, lsl #1]
  410984:	sub	x0, x0, x1, lsr #63
  410988:	strb	wzr, [x0]
  41098c:	mov	x0, x24
  410990:	mov	w23, #0x1                   	// #1
  410994:	bl	406680 <strlen@plt>
  410998:	mov	x2, x0
  41099c:	mov	x1, x24
  4109a0:	mov	x0, x22
  4109a4:	bl	40bbb0 <variable_buffer_output@@Base>
  4109a8:	ldr	x1, [sp, #96]
  4109ac:	mov	x2, #0x1                   	// #1
  4109b0:	bl	40bbb0 <variable_buffer_output@@Base>
  4109b4:	mov	x22, x0
  4109b8:	ldp	x27, x28, [sp, #80]
  4109bc:	b	410850 <init_hash_files@@Base+0x1988>
  4109c0:	ldp	x27, x28, [sp, #80]
  4109c4:	b	410850 <init_hash_files@@Base+0x1988>
  4109c8:	cmp	w3, #0x2e
  4109cc:	b.ne	41093c <init_hash_files@@Base+0x1a74>  // b.any
  4109d0:	cbnz	w27, 4108e8 <init_hash_files@@Base+0x1a20>
  4109d4:	b	410970 <init_hash_files@@Base+0x1aa8>
  4109d8:	ldrb	w2, [x1, #1]
  4109dc:	cmp	w2, #0x2e
  4109e0:	b.ne	41093c <init_hash_files@@Base+0x1a74>  // b.any
  4109e4:	ldr	x1, [sp, #104]
  4109e8:	cmp	x0, x1
  4109ec:	b.ls	41096c <init_hash_files@@Base+0x1aa4>  // b.plast
  4109f0:	ldurb	w1, [x0, #-2]
  4109f4:	sub	x0, x0, #0x1
  4109f8:	ldrsh	w1, [x20, x1, lsl #1]
  4109fc:	tbnz	w1, #31, 41096c <init_hash_files@@Base+0x1aa4>
  410a00:	ldurb	w1, [x0, #-2]
  410a04:	sub	x0, x0, #0x1
  410a08:	ldrsh	w1, [x20, x1, lsl #1]
  410a0c:	tbz	w1, #31, 410a00 <init_hash_files@@Base+0x1b38>
  410a10:	cbnz	w27, 4108e8 <init_hash_files@@Base+0x1a20>
  410a14:	b	410970 <init_hash_files@@Base+0x1aa8>
  410a18:	strh	w27, [sp, #4232]
  410a1c:	mov	x0, #0x1088                	// #4232
  410a20:	ldrb	w27, [sp, #129]
  410a24:	add	x24, sp, x0
  410a28:	add	x0, x24, #0x1
  410a2c:	cbz	w27, 410988 <init_hash_files@@Base+0x1ac0>
  410a30:	add	x25, sp, #0x81
  410a34:	add	x0, x24, #0x1
  410a38:	b	4108d4 <init_hash_files@@Base+0x1a0c>
  410a3c:	nop
  410a40:	ldrb	w2, [x0, #16]
  410a44:	mov	x3, x0
  410a48:	ldrb	w0, [x1, #16]
  410a4c:	subs	w0, w2, w0
  410a50:	b.ne	410a70 <init_hash_files@@Base+0x1ba8>  // b.any
  410a54:	ldr	x1, [x1, #8]
  410a58:	ldr	x3, [x3, #8]
  410a5c:	cmp	x3, x1
  410a60:	b.eq	410a70 <init_hash_files@@Base+0x1ba8>  // b.none
  410a64:	and	x2, x2, #0xff
  410a68:	mov	x0, x3
  410a6c:	b	406b00 <memcmp@plt>
  410a70:	ret
  410a74:	nop
  410a78:	stp	x29, x30, [sp, #-16]!
  410a7c:	mov	x29, sp
  410a80:	ldrb	w1, [x0, #16]
  410a84:	ldr	x0, [x0, #8]
  410a88:	bl	4130c0 <jhash@@Base>
  410a8c:	mov	w0, w0
  410a90:	ldp	x29, x30, [sp], #16
  410a94:	ret
  410a98:	mov	x2, x0
  410a9c:	ldr	x3, [x1, #24]
  410aa0:	ldr	x0, [x0, #24]
  410aa4:	subs	w0, w0, w3
  410aa8:	b.ne	410ac4 <init_hash_files@@Base+0x1bfc>  // b.any
  410aac:	ldr	x1, [x1, #16]
  410ab0:	ldr	x2, [x2, #16]
  410ab4:	cmp	x2, x1
  410ab8:	b.eq	410ac4 <init_hash_files@@Base+0x1bfc>  // b.none
  410abc:	mov	x0, x2
  410ac0:	b	406b40 <strcmp@plt>
  410ac4:	ret
  410ac8:	stp	x29, x30, [sp, #-32]!
  410acc:	mov	x29, sp
  410ad0:	stp	x19, x20, [sp, #16]
  410ad4:	mov	x19, x0
  410ad8:	ldr	x20, [x1]
  410adc:	mov	x0, x20
  410ae0:	bl	406680 <strlen@plt>
  410ae4:	mov	x1, x0
  410ae8:	mov	x0, x20
  410aec:	bl	4257c8 <lookup_variable@@Base>
  410af0:	cbz	x0, 410b34 <init_hash_files@@Base+0x1c6c>
  410af4:	ldrb	w0, [x0, #44]
  410af8:	tbz	w0, #0, 410b18 <init_hash_files@@Base+0x1c50>
  410afc:	mov	x0, x19
  410b00:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  410b04:	ldp	x19, x20, [sp, #16]
  410b08:	add	x1, x1, #0xde0
  410b0c:	ldp	x29, x30, [sp], #32
  410b10:	mov	x2, #0x9                   	// #9
  410b14:	b	40bbb0 <variable_buffer_output@@Base>
  410b18:	mov	x0, x19
  410b1c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  410b20:	ldp	x19, x20, [sp, #16]
  410b24:	add	x1, x1, #0xdf0
  410b28:	ldp	x29, x30, [sp], #32
  410b2c:	mov	x2, #0x6                   	// #6
  410b30:	b	40bbb0 <variable_buffer_output@@Base>
  410b34:	mov	x0, x19
  410b38:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  410b3c:	ldp	x19, x20, [sp, #16]
  410b40:	add	x1, x1, #0xd68
  410b44:	ldp	x29, x30, [sp], #32
  410b48:	mov	x2, #0x9                   	// #9
  410b4c:	b	40bbb0 <variable_buffer_output@@Base>
  410b50:	mov	x0, #0x0                   	// #0
  410b54:	ret
  410b58:	stp	x29, x30, [sp, #-48]!
  410b5c:	mov	x29, sp
  410b60:	stp	x19, x20, [sp, #16]
  410b64:	mov	x20, x1
  410b68:	stp	x21, x22, [sp, #32]
  410b6c:	mov	x22, x0
  410b70:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  410b74:	ldr	x19, [x20]
  410b78:	add	x21, x21, #0x4c0
  410b7c:	mov	x0, x19
  410b80:	bl	406680 <strlen@plt>
  410b84:	sub	x1, x0, #0x1
  410b88:	adds	x1, x19, x1
  410b8c:	b.cc	410ba0 <init_hash_files@@Base+0x1cd8>  // b.lo, b.ul, b.last
  410b90:	b	410c18 <init_hash_files@@Base+0x1d50>
  410b94:	add	x19, x19, #0x1
  410b98:	cmp	x1, x19
  410b9c:	b.cc	410c18 <init_hash_files@@Base+0x1d50>  // b.lo, b.ul, b.last
  410ba0:	ldrb	w0, [x19]
  410ba4:	ldrh	w0, [x21, x0, lsl #1]
  410ba8:	tst	w0, #0x6
  410bac:	b.ne	410b94 <init_hash_files@@Base+0x1ccc>  // b.any
  410bb0:	b	410bb8 <init_hash_files@@Base+0x1cf0>
  410bb4:	sub	x1, x1, #0x1
  410bb8:	cmp	x1, x19
  410bbc:	b.cc	410c18 <init_hash_files@@Base+0x1d50>  // b.lo, b.ul, b.last
  410bc0:	ldrb	w0, [x1]
  410bc4:	ldrh	w0, [x21, x0, lsl #1]
  410bc8:	tst	w0, #0x6
  410bcc:	b.ne	410bb4 <init_hash_files@@Base+0x1cec>  // b.any
  410bd0:	cmp	x19, x1
  410bd4:	b.hi	410c18 <init_hash_files@@Base+0x1d50>  // b.pmore
  410bd8:	add	x1, x1, #0x1
  410bdc:	mov	x0, x19
  410be0:	bl	40bc38 <expand_argument@@Base>
  410be4:	mov	x19, x0
  410be8:	bl	406680 <strlen@plt>
  410bec:	cbz	x0, 410c40 <init_hash_files@@Base+0x1d78>
  410bf0:	ldr	x1, [x20, #8]!
  410bf4:	cbz	x1, 410c2c <init_hash_files@@Base+0x1d64>
  410bf8:	mov	x0, x19
  410bfc:	bl	406b90 <free@plt>
  410c00:	ldr	x19, [x20]
  410c04:	mov	x0, x19
  410c08:	bl	406680 <strlen@plt>
  410c0c:	sub	x1, x0, #0x1
  410c10:	adds	x1, x19, x1
  410c14:	b.cc	410ba0 <init_hash_files@@Base+0x1cd8>  // b.lo, b.ul, b.last
  410c18:	mov	x0, x22
  410c1c:	ldp	x19, x20, [sp, #16]
  410c20:	ldp	x21, x22, [sp, #32]
  410c24:	ldp	x29, x30, [sp], #48
  410c28:	ret
  410c2c:	mov	x2, x0
  410c30:	mov	x1, x19
  410c34:	mov	x0, x22
  410c38:	bl	40bbb0 <variable_buffer_output@@Base>
  410c3c:	mov	x22, x0
  410c40:	mov	x0, x19
  410c44:	bl	406b90 <free@plt>
  410c48:	mov	x0, x22
  410c4c:	ldp	x19, x20, [sp, #16]
  410c50:	ldp	x21, x22, [sp, #32]
  410c54:	ldp	x29, x30, [sp], #48
  410c58:	ret
  410c5c:	nop
  410c60:	stp	x29, x30, [sp, #-48]!
  410c64:	mov	x29, sp
  410c68:	stp	x19, x20, [sp, #16]
  410c6c:	ldr	x19, [x1]
  410c70:	stp	x21, x22, [sp, #32]
  410c74:	mov	x21, x0
  410c78:	cbz	x19, 410d18 <init_hash_files@@Base+0x1e50>
  410c7c:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  410c80:	mov	x22, x1
  410c84:	add	x20, x20, #0x4c0
  410c88:	mov	x0, x19
  410c8c:	bl	406680 <strlen@plt>
  410c90:	sub	x2, x0, #0x1
  410c94:	adds	x2, x19, x2
  410c98:	b.cc	410cac <init_hash_files@@Base+0x1de4>  // b.lo, b.ul, b.last
  410c9c:	b	410d34 <init_hash_files@@Base+0x1e6c>
  410ca0:	add	x19, x19, #0x1
  410ca4:	cmp	x2, x19
  410ca8:	b.cc	410d34 <init_hash_files@@Base+0x1e6c>  // b.lo, b.ul, b.last
  410cac:	ldrb	w0, [x19]
  410cb0:	ldrh	w0, [x20, x0, lsl #1]
  410cb4:	tst	w0, #0x6
  410cb8:	b.ne	410ca0 <init_hash_files@@Base+0x1dd8>  // b.any
  410cbc:	b	410cc4 <init_hash_files@@Base+0x1dfc>
  410cc0:	sub	x2, x2, #0x1
  410cc4:	cmp	x2, x19
  410cc8:	b.cc	410d34 <init_hash_files@@Base+0x1e6c>  // b.lo, b.ul, b.last
  410ccc:	ldrb	w0, [x2]
  410cd0:	ldrh	w0, [x20, x0, lsl #1]
  410cd4:	tst	w0, #0x6
  410cd8:	b.ne	410cc0 <init_hash_files@@Base+0x1df8>  // b.any
  410cdc:	cmp	x2, x19
  410ce0:	b.cc	410d34 <init_hash_files@@Base+0x1e6c>  // b.lo, b.ul, b.last
  410ce4:	add	x1, x2, #0x1
  410ce8:	mov	x0, x19
  410cec:	bl	40bc38 <expand_argument@@Base>
  410cf0:	mov	x19, x0
  410cf4:	bl	406680 <strlen@plt>
  410cf8:	mov	x2, x0
  410cfc:	cbz	x0, 410d2c <init_hash_files@@Base+0x1e64>
  410d00:	mov	x1, x19
  410d04:	mov	x0, x21
  410d08:	bl	40bbb0 <variable_buffer_output@@Base>
  410d0c:	mov	x21, x0
  410d10:	mov	x0, x19
  410d14:	bl	406b90 <free@plt>
  410d18:	mov	x0, x21
  410d1c:	ldp	x19, x20, [sp, #16]
  410d20:	ldp	x21, x22, [sp, #32]
  410d24:	ldp	x29, x30, [sp], #48
  410d28:	ret
  410d2c:	mov	x0, x19
  410d30:	bl	406b90 <free@plt>
  410d34:	ldr	x19, [x22, #8]!
  410d38:	cbnz	x19, 410c88 <init_hash_files@@Base+0x1dc0>
  410d3c:	b	410d18 <init_hash_files@@Base+0x1e50>
  410d40:	stp	x29, x30, [sp, #-48]!
  410d44:	mov	x29, sp
  410d48:	stp	x19, x20, [sp, #16]
  410d4c:	mov	x20, x0
  410d50:	mov	x19, x1
  410d54:	str	x21, [sp, #32]
  410d58:	bl	406680 <strlen@plt>
  410d5c:	sub	x3, x0, #0x1
  410d60:	adrp	x5, 446000 <expanding_var@@Base+0x320>
  410d64:	mov	x21, x0
  410d68:	adds	x3, x20, x3
  410d6c:	mov	x2, x20
  410d70:	add	x5, x5, #0x4c0
  410d74:	b.cc	410d88 <init_hash_files@@Base+0x1ec0>  // b.lo, b.ul, b.last
  410d78:	b	410de8 <init_hash_files@@Base+0x1f20>
  410d7c:	add	x2, x2, #0x1
  410d80:	cmp	x3, x2
  410d84:	b.cc	410de8 <init_hash_files@@Base+0x1f20>  // b.lo, b.ul, b.last
  410d88:	ldrb	w6, [x2]
  410d8c:	ldrh	w6, [x5, x6, lsl #1]
  410d90:	tst	w6, #0x6
  410d94:	b.ne	410d7c <init_hash_files@@Base+0x1eb4>  // b.any
  410d98:	b	410da0 <init_hash_files@@Base+0x1ed8>
  410d9c:	sub	x3, x3, #0x1
  410da0:	cmp	x3, x2
  410da4:	b.cc	410de8 <init_hash_files@@Base+0x1f20>  // b.lo, b.ul, b.last
  410da8:	ldrb	w6, [x3]
  410dac:	ldrh	w6, [x5, x6, lsl #1]
  410db0:	tst	w6, #0x6
  410db4:	b.ne	410d9c <init_hash_files@@Base+0x1ed4>  // b.any
  410db8:	cmp	x2, x3
  410dbc:	b.ls	410dd0 <init_hash_files@@Base+0x1f08>  // b.plast
  410dc0:	b	410de8 <init_hash_files@@Base+0x1f20>
  410dc4:	add	x2, x2, #0x1
  410dc8:	cmp	x2, x3
  410dcc:	b.hi	410de8 <init_hash_files@@Base+0x1f20>  // b.pmore
  410dd0:	ldrb	w5, [x2]
  410dd4:	sub	w5, w5, #0x30
  410dd8:	cmp	w5, #0x9
  410ddc:	b.ls	410dc4 <init_hash_files@@Base+0x1efc>  // b.plast
  410de0:	cmp	x3, x2
  410de4:	b.cs	410e00 <init_hash_files@@Base+0x1f38>  // b.hs, b.nlast
  410de8:	cmp	x3, x20
  410dec:	b.mi	410e00 <init_hash_files@@Base+0x1f38>  // b.first
  410df0:	ldp	x19, x20, [sp, #16]
  410df4:	ldr	x21, [sp, #32]
  410df8:	ldp	x29, x30, [sp], #48
  410dfc:	ret
  410e00:	mov	x0, x19
  410e04:	bl	406680 <strlen@plt>
  410e08:	adrp	x2, 445000 <memcpy@GLIBC_2.17>
  410e0c:	add	x1, x21, x0
  410e10:	mov	x4, x20
  410e14:	mov	x3, x19
  410e18:	ldr	x0, [x2, #3296]
  410e1c:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  410e20:	add	x2, x2, #0xdf8
  410e24:	ldr	x0, [x0]
  410e28:	bl	41c0a0 <fatal@@Base>
  410e2c:	nop
  410e30:	stp	x29, x30, [sp, #-64]!
  410e34:	mov	w2, #0x5                   	// #5
  410e38:	mov	x29, sp
  410e3c:	stp	x19, x20, [sp, #16]
  410e40:	mov	x19, x1
  410e44:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  410e48:	add	x1, x1, #0xe08
  410e4c:	stp	x21, x22, [sp, #32]
  410e50:	mov	x22, x0
  410e54:	ldr	x20, [x19]
  410e58:	mov	x0, #0x0                   	// #0
  410e5c:	bl	406cd0 <dcgettext@plt>
  410e60:	mov	x1, x0
  410e64:	mov	x0, x20
  410e68:	bl	410d40 <init_hash_files@@Base+0x1e78>
  410e6c:	ldr	x20, [x19, #8]
  410e70:	mov	w2, #0x5                   	// #5
  410e74:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  410e78:	mov	x0, #0x0                   	// #0
  410e7c:	add	x1, x1, #0xe40
  410e80:	bl	406cd0 <dcgettext@plt>
  410e84:	mov	x1, x0
  410e88:	mov	x0, x20
  410e8c:	bl	410d40 <init_hash_files@@Base+0x1e78>
  410e90:	ldr	x0, [x19]
  410e94:	mov	w2, #0xa                   	// #10
  410e98:	mov	x1, #0x0                   	// #0
  410e9c:	bl	406b60 <strtol@plt>
  410ea0:	mov	x20, x0
  410ea4:	cmp	w0, #0x0
  410ea8:	b.le	410f50 <init_hash_files@@Base+0x2088>
  410eac:	mov	w21, w0
  410eb0:	mov	w2, #0xa                   	// #10
  410eb4:	ldr	x0, [x19, #8]
  410eb8:	mov	x1, #0x0                   	// #0
  410ebc:	bl	406b60 <strtol@plt>
  410ec0:	sub	w20, w0, w20
  410ec4:	add	w20, w20, #0x1
  410ec8:	cmp	w20, #0x0
  410ecc:	b.le	410ef8 <init_hash_files@@Base+0x2030>
  410ed0:	ldr	x0, [x19, #16]
  410ed4:	str	x0, [sp, #56]
  410ed8:	b	410ee4 <init_hash_files@@Base+0x201c>
  410edc:	subs	w21, w21, #0x1
  410ee0:	b.eq	410f1c <init_hash_files@@Base+0x2054>  // b.none
  410ee4:	add	x0, sp, #0x38
  410ee8:	mov	x1, #0x0                   	// #0
  410eec:	bl	41ac78 <find_next_token@@Base>
  410ef0:	mov	x19, x0
  410ef4:	cbnz	x0, 410edc <init_hash_files@@Base+0x2014>
  410ef8:	mov	x0, x22
  410efc:	ldp	x19, x20, [sp, #16]
  410f00:	ldp	x21, x22, [sp, #32]
  410f04:	ldp	x29, x30, [sp], #64
  410f08:	ret
  410f0c:	add	x0, sp, #0x38
  410f10:	mov	x1, #0x0                   	// #0
  410f14:	bl	41ac78 <find_next_token@@Base>
  410f18:	cbz	x0, 410f24 <init_hash_files@@Base+0x205c>
  410f1c:	subs	w20, w20, #0x1
  410f20:	b.ne	410f0c <init_hash_files@@Base+0x2044>  // b.any
  410f24:	ldr	x2, [sp, #56]
  410f28:	mov	x1, x19
  410f2c:	mov	x0, x22
  410f30:	sub	x2, x2, x19
  410f34:	bl	40bbb0 <variable_buffer_output@@Base>
  410f38:	mov	x22, x0
  410f3c:	mov	x0, x22
  410f40:	ldp	x19, x20, [sp, #16]
  410f44:	ldp	x21, x22, [sp, #32]
  410f48:	ldp	x29, x30, [sp], #64
  410f4c:	ret
  410f50:	adrp	x0, 445000 <memcpy@GLIBC_2.17>
  410f54:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  410f58:	mov	w3, w20
  410f5c:	add	x2, x2, #0xe78
  410f60:	ldr	x0, [x0, #3296]
  410f64:	mov	x1, #0x14                  	// #20
  410f68:	ldr	x0, [x0]
  410f6c:	bl	41c0a0 <fatal@@Base>
  410f70:	stp	x29, x30, [sp, #-64]!
  410f74:	mov	w2, #0x5                   	// #5
  410f78:	mov	x29, sp
  410f7c:	stp	x19, x20, [sp, #16]
  410f80:	mov	x20, x1
  410f84:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  410f88:	add	x1, x1, #0xeb0
  410f8c:	ldr	x19, [x20]
  410f90:	str	x21, [sp, #32]
  410f94:	mov	x21, x0
  410f98:	mov	x0, #0x0                   	// #0
  410f9c:	bl	406cd0 <dcgettext@plt>
  410fa0:	mov	x1, x0
  410fa4:	mov	x0, x19
  410fa8:	bl	410d40 <init_hash_files@@Base+0x1e78>
  410fac:	ldr	x0, [x20]
  410fb0:	mov	w2, #0xa                   	// #10
  410fb4:	mov	x1, #0x0                   	// #0
  410fb8:	bl	406b60 <strtol@plt>
  410fbc:	cbz	w0, 411028 <init_hash_files@@Base+0x2160>
  410fc0:	mov	w19, w0
  410fc4:	ldr	x0, [x20, #8]
  410fc8:	str	x0, [sp, #56]
  410fcc:	b	410fd8 <init_hash_files@@Base+0x2110>
  410fd0:	subs	w19, w19, #0x1
  410fd4:	b.eq	411000 <init_hash_files@@Base+0x2138>  // b.none
  410fd8:	mov	x1, #0x0                   	// #0
  410fdc:	add	x0, sp, #0x38
  410fe0:	bl	41ac78 <find_next_token@@Base>
  410fe4:	mov	x1, x0
  410fe8:	cbnz	x0, 410fd0 <init_hash_files@@Base+0x2108>
  410fec:	mov	x0, x21
  410ff0:	ldp	x19, x20, [sp, #16]
  410ff4:	ldr	x21, [sp, #32]
  410ff8:	ldp	x29, x30, [sp], #64
  410ffc:	ret
  411000:	ldr	x2, [sp, #56]
  411004:	mov	x0, x21
  411008:	sub	x2, x2, x1
  41100c:	bl	40bbb0 <variable_buffer_output@@Base>
  411010:	mov	x21, x0
  411014:	mov	x0, x21
  411018:	ldp	x19, x20, [sp, #16]
  41101c:	ldr	x21, [sp, #32]
  411020:	ldp	x29, x30, [sp], #64
  411024:	ret
  411028:	adrp	x0, 445000 <memcpy@GLIBC_2.17>
  41102c:	mov	w2, #0x5                   	// #5
  411030:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  411034:	add	x1, x1, #0xee0
  411038:	ldr	x3, [x0, #3296]
  41103c:	mov	x0, #0x0                   	// #0
  411040:	ldr	x19, [x3]
  411044:	bl	406cd0 <dcgettext@plt>
  411048:	mov	x1, #0x0                   	// #0
  41104c:	mov	x2, x0
  411050:	mov	x0, x19
  411054:	bl	41c0a0 <fatal@@Base>
  411058:	stp	x29, x30, [sp, #-48]!
  41105c:	mov	x29, sp
  411060:	stp	x19, x20, [sp, #16]
  411064:	mov	x20, x0
  411068:	ldr	x19, [x1]
  41106c:	str	x21, [sp, #32]
  411070:	mov	x21, x1
  411074:	mov	x0, x19
  411078:	bl	406680 <strlen@plt>
  41107c:	sub	x2, x0, #0x1
  411080:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  411084:	adds	x2, x19, x2
  411088:	add	x0, x1, #0x4c0
  41108c:	b.cc	4110a0 <init_hash_files@@Base+0x21d8>  // b.lo, b.ul, b.last
  411090:	b	4110f0 <init_hash_files@@Base+0x2228>
  411094:	add	x19, x19, #0x1
  411098:	cmp	x2, x19
  41109c:	b.cc	4110f0 <init_hash_files@@Base+0x2228>  // b.lo, b.ul, b.last
  4110a0:	ldrb	w1, [x19]
  4110a4:	ldrh	w1, [x0, x1, lsl #1]
  4110a8:	tst	w1, #0x6
  4110ac:	b.ne	411094 <init_hash_files@@Base+0x21cc>  // b.any
  4110b0:	b	4110b8 <init_hash_files@@Base+0x21f0>
  4110b4:	sub	x2, x2, #0x1
  4110b8:	cmp	x2, x19
  4110bc:	b.cc	4110f0 <init_hash_files@@Base+0x2228>  // b.lo, b.ul, b.last
  4110c0:	ldrb	w1, [x2]
  4110c4:	ldrh	w1, [x0, x1, lsl #1]
  4110c8:	tst	w1, #0x6
  4110cc:	b.ne	4110b4 <init_hash_files@@Base+0x21ec>  // b.any
  4110d0:	cmp	x19, x2
  4110d4:	b.hi	4110f0 <init_hash_files@@Base+0x2228>  // b.pmore
  4110d8:	mov	x0, x19
  4110dc:	add	x1, x2, #0x1
  4110e0:	bl	40bc38 <expand_argument@@Base>
  4110e4:	ldrb	w19, [x0]
  4110e8:	bl	406b90 <free@plt>
  4110ec:	cbnz	w19, 411140 <init_hash_files@@Base+0x2278>
  4110f0:	mov	x0, #0x10                  	// #16
  4110f4:	ldr	x0, [x21, x0]
  4110f8:	mov	x19, x20
  4110fc:	cbz	x0, 41112c <init_hash_files@@Base+0x2264>
  411100:	mov	x1, #0x0                   	// #0
  411104:	bl	40bc38 <expand_argument@@Base>
  411108:	mov	x20, x0
  41110c:	bl	406680 <strlen@plt>
  411110:	mov	x2, x0
  411114:	mov	x1, x20
  411118:	mov	x0, x19
  41111c:	bl	40bbb0 <variable_buffer_output@@Base>
  411120:	mov	x19, x0
  411124:	mov	x0, x20
  411128:	bl	406b90 <free@plt>
  41112c:	mov	x0, x19
  411130:	ldp	x19, x20, [sp, #16]
  411134:	ldr	x21, [sp, #32]
  411138:	ldp	x29, x30, [sp], #48
  41113c:	ret
  411140:	mov	x0, #0x8                   	// #8
  411144:	b	4110f4 <init_hash_files@@Base+0x222c>

0000000000411148 <subst_expand@@Base>:
  411148:	stp	x29, x30, [sp, #-112]!
  41114c:	cmp	x4, #0x0
  411150:	mov	x29, sp
  411154:	stp	x21, x22, [sp, #32]
  411158:	cset	w21, eq  // eq = none
  41115c:	cmp	w6, #0x0
  411160:	stp	x23, x24, [sp, #48]
  411164:	ccmp	w21, #0x0, #0x4, eq  // eq = none
  411168:	mov	x24, x5
  41116c:	stp	x25, x26, [sp, #64]
  411170:	mov	x25, x1
  411174:	stp	x27, x28, [sp, #80]
  411178:	mov	x27, x0
  41117c:	str	x3, [sp, #104]
  411180:	b.ne	4112bc <subst_expand@@Base+0x174>  // b.any
  411184:	cmp	w6, #0x0
  411188:	adrp	x26, 446000 <expanding_var@@Base+0x320>
  41118c:	mov	w23, w6
  411190:	mov	x22, x2
  411194:	csel	w21, w21, wzr, ne  // ne = any
  411198:	mov	x28, x1
  41119c:	add	x26, x26, #0x4c0
  4111a0:	stp	x19, x20, [sp, #16]
  4111a4:	mov	x20, x4
  4111a8:	cbnz	w21, 4111fc <subst_expand@@Base+0xb4>
  4111ac:	mov	x1, x22
  4111b0:	mov	x0, x28
  4111b4:	bl	406cc0 <strstr@plt>
  4111b8:	mov	x19, x0
  4111bc:	cbz	x0, 41128c <subst_expand@@Base+0x144>
  4111c0:	cmp	x28, x0
  4111c4:	b.cc	411274 <subst_expand@@Base+0x12c>  // b.lo, b.ul, b.last
  4111c8:	add	x28, x19, x20
  4111cc:	cbnz	w23, 411218 <subst_expand@@Base+0xd0>
  4111d0:	cbnz	x24, 41125c <subst_expand@@Base+0x114>
  4111d4:	ldrb	w0, [x28]
  4111d8:	cbnz	w0, 4111a8 <subst_expand@@Base+0x60>
  4111dc:	ldp	x19, x20, [sp, #16]
  4111e0:	mov	x0, x27
  4111e4:	ldp	x21, x22, [sp, #32]
  4111e8:	ldp	x23, x24, [sp, #48]
  4111ec:	ldp	x25, x26, [sp, #64]
  4111f0:	ldp	x27, x28, [sp, #80]
  4111f4:	ldp	x29, x30, [sp], #112
  4111f8:	ret
  4111fc:	mov	x0, x28
  411200:	bl	41ac48 <next_token@@Base>
  411204:	bl	41ac18 <end_of_token@@Base>
  411208:	mov	x19, x0
  41120c:	cmp	x28, x0
  411210:	b.cc	411274 <subst_expand@@Base+0x12c>  // b.lo, b.ul, b.last
  411214:	mov	x28, x0
  411218:	cmp	x19, x25
  41121c:	b.ls	411248 <subst_expand@@Base+0x100>  // b.plast
  411220:	ldurb	w0, [x19, #-1]
  411224:	ldrh	w0, [x26, x0, lsl #1]
  411228:	tst	w0, #0x6
  41122c:	b.ne	411248 <subst_expand@@Base+0x100>  // b.any
  411230:	mov	x0, x27
  411234:	mov	x2, x20
  411238:	mov	x1, x22
  41123c:	bl	40bbb0 <variable_buffer_output@@Base>
  411240:	mov	x27, x0
  411244:	b	4111d4 <subst_expand@@Base+0x8c>
  411248:	ldrb	w0, [x28]
  41124c:	ldrh	w0, [x26, x0, lsl #1]
  411250:	tst	x0, #0x7
  411254:	b.eq	411230 <subst_expand@@Base+0xe8>  // b.none
  411258:	cbz	x24, 4111d4 <subst_expand@@Base+0x8c>
  41125c:	ldr	x1, [sp, #104]
  411260:	mov	x0, x27
  411264:	mov	x2, x24
  411268:	bl	40bbb0 <variable_buffer_output@@Base>
  41126c:	mov	x27, x0
  411270:	b	4111d4 <subst_expand@@Base+0x8c>
  411274:	mov	x0, x27
  411278:	sub	x2, x19, x28
  41127c:	mov	x1, x28
  411280:	bl	40bbb0 <variable_buffer_output@@Base>
  411284:	mov	x27, x0
  411288:	b	4111c8 <subst_expand@@Base+0x80>
  41128c:	mov	x0, x28
  411290:	bl	406680 <strlen@plt>
  411294:	ldp	x19, x20, [sp, #16]
  411298:	mov	x2, x0
  41129c:	mov	x1, x28
  4112a0:	mov	x0, x27
  4112a4:	ldp	x21, x22, [sp, #32]
  4112a8:	ldp	x23, x24, [sp, #48]
  4112ac:	ldp	x25, x26, [sp, #64]
  4112b0:	ldp	x27, x28, [sp, #80]
  4112b4:	ldp	x29, x30, [sp], #112
  4112b8:	b	40bbb0 <variable_buffer_output@@Base>
  4112bc:	mov	x0, x1
  4112c0:	bl	406680 <strlen@plt>
  4112c4:	mov	x1, x25
  4112c8:	mov	x2, x0
  4112cc:	mov	x0, x27
  4112d0:	bl	40bbb0 <variable_buffer_output@@Base>
  4112d4:	mov	x27, x0
  4112d8:	cbz	x24, 4111e0 <subst_expand@@Base+0x98>
  4112dc:	mov	x2, x24
  4112e0:	ldr	x1, [sp, #104]
  4112e4:	b	4112a4 <subst_expand@@Base+0x15c>
  4112e8:	stp	x29, x30, [sp, #-64]!
  4112ec:	mov	x29, sp
  4112f0:	stp	x19, x20, [sp, #16]
  4112f4:	mov	x19, x1
  4112f8:	mov	x20, x0
  4112fc:	stp	x21, x22, [sp, #32]
  411300:	ldr	x22, [x1]
  411304:	str	x23, [sp, #48]
  411308:	mov	x0, x22
  41130c:	bl	406680 <strlen@plt>
  411310:	ldr	x23, [x19, #8]
  411314:	mov	x21, x0
  411318:	mov	x0, x23
  41131c:	bl	406680 <strlen@plt>
  411320:	mov	x3, x23
  411324:	mov	x5, x0
  411328:	mov	x2, x22
  41132c:	mov	x4, x21
  411330:	mov	x0, x20
  411334:	mov	w6, #0x0                   	// #0
  411338:	ldr	x1, [x19, #16]
  41133c:	ldp	x19, x20, [sp, #16]
  411340:	ldp	x21, x22, [sp, #32]
  411344:	ldr	x23, [sp, #48]
  411348:	ldp	x29, x30, [sp], #64
  41134c:	b	411148 <subst_expand@@Base>

0000000000411350 <patsubst_expand_pat@@Base>:
  411350:	stp	x29, x30, [sp, #-176]!
  411354:	mov	x29, sp
  411358:	stp	x19, x20, [sp, #16]
  41135c:	mov	x19, x4
  411360:	stp	x21, x22, [sp, #32]
  411364:	mov	x21, x5
  411368:	stp	x23, x24, [sp, #48]
  41136c:	stp	x25, x26, [sp, #64]
  411370:	mov	x25, x2
  411374:	stp	x27, x28, [sp, #80]
  411378:	mov	x28, x0
  41137c:	str	x3, [sp, #120]
  411380:	str	x1, [sp, #152]
  411384:	cbz	x5, 411560 <patsubst_expand_pat@@Base+0x210>
  411388:	sub	x22, x5, x3
  41138c:	mov	x0, x5
  411390:	sub	x22, x22, #0x1
  411394:	bl	406680 <strlen@plt>
  411398:	mov	x23, x0
  41139c:	cbz	x19, 411574 <patsubst_expand_pat@@Base+0x224>
  4113a0:	sub	x24, x19, x25
  4113a4:	mov	x0, x19
  4113a8:	bl	406680 <strlen@plt>
  4113ac:	adrp	x27, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4113b0:	mov	x1, x24
  4113b4:	add	x27, x27, #0x670
  4113b8:	sub	x24, x24, #0x1
  4113bc:	sub	x1, x1, #0x2
  4113c0:	add	x20, x24, x0
  4113c4:	mov	w26, #0x0                   	// #0
  4113c8:	stp	x1, x0, [sp, #128]
  4113cc:	sub	x0, x0, #0x1
  4113d0:	str	x0, [sp, #104]
  4113d4:	add	x1, sp, #0xa8
  4113d8:	add	x0, sp, #0x98
  4113dc:	bl	41ac78 <find_next_token@@Base>
  4113e0:	mov	x4, x0
  4113e4:	cbz	x0, 411448 <patsubst_expand_pat@@Base+0xf8>
  4113e8:	ldr	x5, [sp, #168]
  4113ec:	cmp	x20, x5
  4113f0:	b.hi	411408 <patsubst_expand_pat@@Base+0xb8>  // b.pmore
  4113f4:	cbz	x24, 4114a8 <patsubst_expand_pat@@Base+0x158>
  4113f8:	ldrb	w1, [x4]
  4113fc:	ldrb	w0, [x25]
  411400:	cmp	w1, w0
  411404:	b.eq	411470 <patsubst_expand_pat@@Base+0x120>  // b.none
  411408:	mov	x0, x28
  41140c:	mov	x2, x5
  411410:	mov	x1, x4
  411414:	bl	40bbb0 <variable_buffer_output@@Base>
  411418:	mov	x28, x0
  41141c:	mov	x2, #0x1                   	// #1
  411420:	mov	x0, x28
  411424:	mov	x1, x27
  411428:	bl	40bbb0 <variable_buffer_output@@Base>
  41142c:	add	x1, sp, #0xa8
  411430:	mov	x28, x0
  411434:	mov	w26, #0x1                   	// #1
  411438:	add	x0, sp, #0x98
  41143c:	bl	41ac78 <find_next_token@@Base>
  411440:	mov	x4, x0
  411444:	cbnz	x0, 4113e8 <patsubst_expand_pat@@Base+0x98>
  411448:	and	x26, x26, #0x1
  41144c:	sub	x28, x28, x26
  411450:	mov	x0, x28
  411454:	ldp	x19, x20, [sp, #16]
  411458:	ldp	x21, x22, [sp, #32]
  41145c:	ldp	x23, x24, [sp, #48]
  411460:	ldp	x25, x26, [sp, #64]
  411464:	ldp	x27, x28, [sp, #80]
  411468:	ldp	x29, x30, [sp], #176
  41146c:	ret
  411470:	ldr	x0, [sp, #128]
  411474:	ldrb	w1, [x4, x0]
  411478:	ldurb	w0, [x19, #-2]
  41147c:	cmp	w1, w0
  411480:	b.ne	411408 <patsubst_expand_pat@@Base+0xb8>  // b.any
  411484:	ldr	x2, [sp, #128]
  411488:	add	x0, x4, #0x1
  41148c:	add	x1, x25, #0x1
  411490:	str	x4, [sp, #112]
  411494:	str	x5, [sp, #144]
  411498:	bl	406930 <strncmp@plt>
  41149c:	ldr	x4, [sp, #112]
  4114a0:	ldr	x5, [sp, #144]
  4114a4:	cbnz	w0, 411408 <patsubst_expand_pat@@Base+0xb8>
  4114a8:	ldr	x0, [sp, #136]
  4114ac:	cbz	x0, 411504 <patsubst_expand_pat@@Base+0x1b4>
  4114b0:	ldr	x1, [sp, #104]
  4114b4:	add	x0, x4, x5
  4114b8:	ldrb	w1, [x19, x1]
  4114bc:	ldurb	w0, [x0, #-1]
  4114c0:	cmp	w0, w1
  4114c4:	b.ne	411408 <patsubst_expand_pat@@Base+0xb8>  // b.any
  4114c8:	ldr	x0, [sp, #136]
  4114cc:	ldrb	w2, [x19]
  4114d0:	sub	x1, x5, x0
  4114d4:	add	x0, x4, x1
  4114d8:	ldrb	w1, [x4, x1]
  4114dc:	cmp	w1, w2
  4114e0:	b.ne	411408 <patsubst_expand_pat@@Base+0xb8>  // b.any
  4114e4:	ldr	x2, [sp, #104]
  4114e8:	mov	x1, x19
  4114ec:	str	x5, [sp, #112]
  4114f0:	str	x4, [sp, #144]
  4114f4:	bl	406930 <strncmp@plt>
  4114f8:	ldr	x5, [sp, #112]
  4114fc:	ldr	x4, [sp, #144]
  411500:	cbnz	w0, 411408 <patsubst_expand_pat@@Base+0xb8>
  411504:	ldr	x1, [sp, #120]
  411508:	mov	x0, x28
  41150c:	mov	x2, x22
  411510:	str	x4, [sp, #112]
  411514:	bl	40bbb0 <variable_buffer_output@@Base>
  411518:	mov	x28, x0
  41151c:	cbz	x21, 411558 <patsubst_expand_pat@@Base+0x208>
  411520:	ldr	x4, [sp, #112]
  411524:	ldr	x2, [sp, #168]
  411528:	add	x1, x4, x24
  41152c:	sub	x2, x2, x20
  411530:	bl	40bbb0 <variable_buffer_output@@Base>
  411534:	mov	x1, x21
  411538:	mov	x2, x23
  41153c:	bl	40bbb0 <variable_buffer_output@@Base>
  411540:	mov	x28, x0
  411544:	ldr	x1, [sp, #168]
  411548:	add	x1, x23, x1
  41154c:	orr	x1, x1, x22
  411550:	cbz	x1, 4113d4 <patsubst_expand_pat@@Base+0x84>
  411554:	b	41141c <patsubst_expand_pat@@Base+0xcc>
  411558:	cbz	x22, 4113d4 <patsubst_expand_pat@@Base+0x84>
  41155c:	b	41141c <patsubst_expand_pat@@Base+0xcc>
  411560:	mov	x0, x3
  411564:	mov	x23, #0x0                   	// #0
  411568:	bl	406680 <strlen@plt>
  41156c:	mov	x22, x0
  411570:	b	41139c <patsubst_expand_pat@@Base+0x4c>
  411574:	mov	x0, x25
  411578:	bl	406680 <strlen@plt>
  41157c:	ldr	x20, [sp, #120]
  411580:	mov	x19, x0
  411584:	mov	x0, x20
  411588:	bl	406680 <strlen@plt>
  41158c:	ldr	x1, [sp, #152]
  411590:	mov	x5, x0
  411594:	mov	x4, x19
  411598:	mov	x0, x28
  41159c:	mov	x3, x20
  4115a0:	mov	x2, x25
  4115a4:	mov	w6, #0x1                   	// #1
  4115a8:	bl	411148 <subst_expand@@Base>
  4115ac:	mov	x28, x0
  4115b0:	b	411450 <patsubst_expand_pat@@Base+0x100>
  4115b4:	nop
  4115b8:	stp	x29, x30, [sp, #-64]!
  4115bc:	mov	x29, sp
  4115c0:	stp	x21, x22, [sp, #32]
  4115c4:	ldp	x21, x22, [x1]
  4115c8:	stp	x19, x20, [sp, #16]
  4115cc:	mov	x20, x0
  4115d0:	str	x23, [sp, #48]
  4115d4:	ldr	x23, [x1, #16]
  4115d8:	mov	x0, x21
  4115dc:	bl	41d7d8 <find_percent@@Base>
  4115e0:	mov	x19, x0
  4115e4:	mov	x0, x22
  4115e8:	bl	41d7d8 <find_percent@@Base>
  4115ec:	cmp	x0, #0x0
  4115f0:	cinc	x5, x0, ne  // ne = any
  4115f4:	cmp	x19, #0x0
  4115f8:	mov	x3, x22
  4115fc:	mov	x2, x21
  411600:	mov	x1, x23
  411604:	cinc	x4, x19, ne  // ne = any
  411608:	mov	x0, x20
  41160c:	ldp	x19, x20, [sp, #16]
  411610:	ldp	x21, x22, [sp, #32]
  411614:	ldr	x23, [sp, #48]
  411618:	ldp	x29, x30, [sp], #64
  41161c:	b	411350 <patsubst_expand_pat@@Base>

0000000000411620 <patsubst_expand@@Base>:
  411620:	stp	x29, x30, [sp, #-64]!
  411624:	mov	x29, sp
  411628:	stp	x19, x20, [sp, #16]
  41162c:	mov	x20, x2
  411630:	stp	x21, x22, [sp, #32]
  411634:	mov	x21, x3
  411638:	mov	x22, x0
  41163c:	mov	x0, x2
  411640:	str	x23, [sp, #48]
  411644:	mov	x23, x1
  411648:	bl	41d7d8 <find_percent@@Base>
  41164c:	mov	x19, x0
  411650:	mov	x0, x21
  411654:	bl	41d7d8 <find_percent@@Base>
  411658:	cmp	x0, #0x0
  41165c:	cinc	x5, x0, ne  // ne = any
  411660:	cmp	x19, #0x0
  411664:	mov	x3, x21
  411668:	mov	x2, x20
  41166c:	mov	x1, x23
  411670:	cinc	x4, x19, ne  // ne = any
  411674:	mov	x0, x22
  411678:	ldp	x19, x20, [sp, #16]
  41167c:	ldp	x21, x22, [sp, #32]
  411680:	ldr	x23, [sp, #48]
  411684:	ldp	x29, x30, [sp], #64
  411688:	b	411350 <patsubst_expand_pat@@Base>
  41168c:	nop

0000000000411690 <pattern_matches@@Base>:
  411690:	stp	x29, x30, [sp, #-64]!
  411694:	mov	x29, sp
  411698:	stp	x19, x20, [sp, #16]
  41169c:	mov	x20, x2
  4116a0:	mov	x19, x1
  4116a4:	stp	x21, x22, [sp, #32]
  4116a8:	mov	x21, x0
  4116ac:	str	x23, [sp, #48]
  4116b0:	cbz	x1, 411724 <pattern_matches@@Base+0x94>
  4116b4:	add	x23, x19, #0x1
  4116b8:	mov	x0, x23
  4116bc:	bl	406680 <strlen@plt>
  4116c0:	mov	x22, x0
  4116c4:	mov	x0, x20
  4116c8:	bl	406680 <strlen@plt>
  4116cc:	sub	x2, x19, x21
  4116d0:	mov	x19, x0
  4116d4:	add	x0, x2, x22
  4116d8:	cmp	x0, x19
  4116dc:	b.hi	411790 <pattern_matches@@Base+0x100>  // b.pmore
  4116e0:	mov	x0, x21
  4116e4:	mov	x1, x20
  4116e8:	bl	406930 <strncmp@plt>
  4116ec:	cbnz	w0, 411790 <pattern_matches@@Base+0x100>
  4116f0:	sub	x1, x19, x22
  4116f4:	mov	x0, x23
  4116f8:	add	x1, x20, x1
  4116fc:	bl	406b40 <strcmp@plt>
  411700:	mov	sp, x29
  411704:	cmp	w0, #0x0
  411708:	cset	w19, eq  // eq = none
  41170c:	mov	w0, w19
  411710:	ldp	x19, x20, [sp, #16]
  411714:	ldp	x21, x22, [sp, #32]
  411718:	ldr	x23, [sp, #48]
  41171c:	ldp	x29, x30, [sp], #64
  411720:	ret
  411724:	bl	406680 <strlen@plt>
  411728:	add	x3, x0, #0x10
  41172c:	and	x3, x3, #0xfffffffffffffff0
  411730:	mov	x1, x21
  411734:	add	x2, x0, #0x1
  411738:	sub	sp, sp, x3
  41173c:	mov	x22, sp
  411740:	mov	x0, x22
  411744:	bl	406640 <memcpy@plt>
  411748:	mov	x0, x22
  41174c:	mov	x21, x22
  411750:	bl	41d7d8 <find_percent@@Base>
  411754:	mov	x19, x0
  411758:	cbnz	x0, 4116b4 <pattern_matches@@Base+0x24>
  41175c:	cmp	x22, x20
  411760:	mov	w19, #0x1                   	// #1
  411764:	b.eq	411794 <pattern_matches@@Base+0x104>  // b.none
  411768:	ldrb	w1, [x22]
  41176c:	ldrb	w0, [x20]
  411770:	cmp	w0, w1
  411774:	b.ne	411790 <pattern_matches@@Base+0x100>  // b.any
  411778:	cbz	w0, 411794 <pattern_matches@@Base+0x104>
  41177c:	add	x1, x20, #0x1
  411780:	add	x0, x22, #0x1
  411784:	bl	406b40 <strcmp@plt>
  411788:	cbz	w0, 411794 <pattern_matches@@Base+0x104>
  41178c:	nop
  411790:	mov	w19, #0x0                   	// #0
  411794:	mov	sp, x29
  411798:	mov	w0, w19
  41179c:	ldp	x19, x20, [sp, #16]
  4117a0:	ldp	x21, x22, [sp, #32]
  4117a4:	ldr	x23, [sp, #48]
  4117a8:	ldp	x29, x30, [sp], #64
  4117ac:	ret
  4117b0:	stp	x29, x30, [sp, #-256]!
  4117b4:	mov	x29, sp
  4117b8:	stp	x19, x20, [sp, #16]
  4117bc:	mov	x20, x0
  4117c0:	stp	x21, x22, [sp, #32]
  4117c4:	mov	w22, #0x0                   	// #0
  4117c8:	stp	x23, x24, [sp, #48]
  4117cc:	add	x23, x29, #0x60
  4117d0:	stp	x25, x26, [sp, #64]
  4117d4:	ldrb	w21, [x2, #6]
  4117d8:	ldp	x2, x0, [x1]
  4117dc:	stp	x2, x0, [x29, #104]
  4117e0:	b	411838 <pattern_matches@@Base+0x1a8>
  4117e4:	ldr	x2, [x29, #104]
  4117e8:	sub	sp, sp, #0x20
  4117ec:	mov	x19, sp
  4117f0:	str	x19, [x23]
  4117f4:	add	x3, x2, #0x1
  4117f8:	mov	x0, x1
  4117fc:	ldrb	w2, [x2]
  411800:	mov	x23, x19
  411804:	cbz	w2, 41180c <pattern_matches@@Base+0x17c>
  411808:	str	x3, [x29, #104]
  41180c:	ldr	x2, [x29, #120]
  411810:	str	x1, [x19, #8]
  411814:	strb	wzr, [x1, x2]
  411818:	bl	41d7d8 <find_percent@@Base>
  41181c:	mov	x1, x0
  411820:	cmp	x0, #0x0
  411824:	str	x1, [x19, #16]
  411828:	ldr	x0, [x19, #8]
  41182c:	cinc	w22, w22, eq  // eq = none
  411830:	bl	406680 <strlen@plt>
  411834:	str	x0, [x19, #24]
  411838:	add	x1, x29, #0x78
  41183c:	add	x0, x29, #0x68
  411840:	bl	41ac78 <find_next_token@@Base>
  411844:	mov	x1, x0
  411848:	cbnz	x0, 4117e4 <pattern_matches@@Base+0x154>
  41184c:	add	x24, x29, #0x58
  411850:	mov	w19, #0x0                   	// #0
  411854:	str	xzr, [x23]
  411858:	b	41189c <pattern_matches@@Base+0x20c>
  41185c:	ldr	x2, [x29, #112]
  411860:	sub	sp, sp, #0x30
  411864:	mov	x1, sp
  411868:	str	x1, [x24]
  41186c:	add	x3, x2, #0x1
  411870:	add	w19, w19, #0x1
  411874:	ldrb	w2, [x2]
  411878:	mov	x24, x1
  41187c:	cbz	w2, 411884 <pattern_matches@@Base+0x1f4>
  411880:	str	x3, [x29, #112]
  411884:	ldr	x2, [x29, #120]
  411888:	strb	wzr, [x0, x2]
  41188c:	stp	xzr, x0, [x1, #8]
  411890:	ldr	x2, [x29, #120]
  411894:	str	x2, [x1, #24]
  411898:	str	wzr, [x1, #32]
  41189c:	add	x1, x29, #0x78
  4118a0:	add	x0, x29, #0x70
  4118a4:	bl	41ac78 <find_next_token@@Base>
  4118a8:	cbnz	x0, 41185c <pattern_matches@@Base+0x1cc>
  4118ac:	str	xzr, [x24]
  4118b0:	cmp	w22, #0x1
  4118b4:	b.le	411a78 <pattern_matches@@Base+0x3e8>
  4118b8:	mul	w22, w22, w19
  4118bc:	cmp	w22, #0x9
  4118c0:	b.gt	411b04 <pattern_matches@@Base+0x474>
  4118c4:	cbz	w19, 411998 <pattern_matches@@Base+0x308>
  4118c8:	ldp	x23, x22, [x29, #88]
  4118cc:	mov	w24, #0x0                   	// #0
  4118d0:	cbz	x22, 411994 <pattern_matches@@Base+0x304>
  4118d4:	nop
  4118d8:	ldr	x1, [x22, #16]
  4118dc:	cbnz	x1, 4119fc <pattern_matches@@Base+0x36c>
  4118e0:	cbnz	w24, 411a38 <pattern_matches@@Base+0x3a8>
  4118e4:	cbz	x23, 411928 <pattern_matches@@Base+0x298>
  4118e8:	ldr	x26, [x22, #24]
  4118ec:	mov	x19, x23
  4118f0:	ldr	x0, [x19, #24]
  4118f4:	ldr	w25, [x19, #32]
  4118f8:	cmp	x0, x26
  4118fc:	b.ne	41191c <pattern_matches@@Base+0x28c>  // b.any
  411900:	ldr	x0, [x22, #8]
  411904:	mov	x2, x26
  411908:	ldr	x1, [x19, #16]
  41190c:	bl	406930 <strncmp@plt>
  411910:	cmp	w0, #0x0
  411914:	orr	w0, w25, #0x1
  411918:	csel	w25, w0, w25, eq  // eq = none
  41191c:	str	w25, [x19, #32]
  411920:	ldr	x19, [x19]
  411924:	cbnz	x19, 4118f0 <pattern_matches@@Base+0x260>
  411928:	ldr	x22, [x22]
  41192c:	cbnz	x22, 4118d8 <pattern_matches@@Base+0x248>
  411930:	mov	x22, x20
  411934:	cbz	x23, 411960 <pattern_matches@@Base+0x2d0>
  411938:	cbz	w21, 411aa0 <pattern_matches@@Base+0x410>
  41193c:	adrp	x21, 42c000 <_IO_stdin_used@@Base+0x30e0>
  411940:	add	x21, x21, #0x670
  411944:	mov	w1, #0x0                   	// #0
  411948:	ldr	w0, [x23, #32]
  41194c:	cbz	w0, 4119bc <pattern_matches@@Base+0x32c>
  411950:	ldr	x23, [x23]
  411954:	cbnz	x23, 411948 <pattern_matches@@Base+0x2b8>
  411958:	mov	x22, x20
  41195c:	cbnz	w1, 4119f4 <pattern_matches@@Base+0x364>
  411960:	cbz	w24, 41199c <pattern_matches@@Base+0x30c>
  411964:	add	x25, x29, #0xa8
  411968:	mov	x0, x25
  41196c:	mov	w1, #0x0                   	// #0
  411970:	bl	412dc0 <hash_free@@Base>
  411974:	mov	sp, x29
  411978:	mov	x0, x22
  41197c:	ldp	x19, x20, [sp, #16]
  411980:	ldp	x21, x22, [sp, #32]
  411984:	ldp	x23, x24, [sp, #48]
  411988:	ldp	x25, x26, [sp, #64]
  41198c:	ldp	x29, x30, [sp], #256
  411990:	ret
  411994:	cbnz	x23, 411938 <pattern_matches@@Base+0x2a8>
  411998:	mov	x22, x20
  41199c:	mov	sp, x29
  4119a0:	mov	x0, x22
  4119a4:	ldp	x19, x20, [sp, #16]
  4119a8:	ldp	x21, x22, [sp, #32]
  4119ac:	ldp	x23, x24, [sp, #48]
  4119b0:	ldp	x25, x26, [sp, #64]
  4119b4:	ldp	x29, x30, [sp], #256
  4119b8:	ret
  4119bc:	ldr	x19, [x23, #16]
  4119c0:	mov	x0, x19
  4119c4:	bl	406680 <strlen@plt>
  4119c8:	mov	x1, x19
  4119cc:	mov	x2, x0
  4119d0:	mov	x0, x20
  4119d4:	bl	40bbb0 <variable_buffer_output@@Base>
  4119d8:	mov	x1, x21
  4119dc:	mov	x2, #0x1                   	// #1
  4119e0:	bl	40bbb0 <variable_buffer_output@@Base>
  4119e4:	mov	x20, x0
  4119e8:	ldr	x23, [x23]
  4119ec:	mov	w1, #0x1                   	// #1
  4119f0:	cbnz	x23, 411948 <pattern_matches@@Base+0x2b8>
  4119f4:	sub	x22, x20, #0x1
  4119f8:	b	411960 <pattern_matches@@Base+0x2d0>
  4119fc:	mov	x19, x23
  411a00:	cbnz	x23, 411a0c <pattern_matches@@Base+0x37c>
  411a04:	b	411928 <pattern_matches@@Base+0x298>
  411a08:	ldr	x1, [x22, #16]
  411a0c:	ldr	x0, [x22, #8]
  411a10:	ldr	x2, [x19, #16]
  411a14:	bl	411690 <pattern_matches@@Base>
  411a18:	ldr	w1, [x19, #32]
  411a1c:	orr	w1, w1, w0
  411a20:	str	w1, [x19, #32]
  411a24:	ldr	x19, [x19]
  411a28:	cbnz	x19, 411a08 <pattern_matches@@Base+0x378>
  411a2c:	ldr	x22, [x22]
  411a30:	cbnz	x22, 4118d8 <pattern_matches@@Base+0x248>
  411a34:	b	411930 <pattern_matches@@Base+0x2a0>
  411a38:	ldr	x3, [x22, #8]
  411a3c:	add	x1, x29, #0x80
  411a40:	ldr	x2, [x22, #24]
  411a44:	add	x0, x29, #0xa8
  411a48:	stp	x3, x2, [x29, #144]
  411a4c:	bl	412950 <hash_find_item@@Base>
  411a50:	cbz	x0, 411928 <pattern_matches@@Base+0x298>
  411a54:	nop
  411a58:	ldr	w1, [x0, #32]
  411a5c:	orr	w1, w1, #0x1
  411a60:	str	w1, [x0, #32]
  411a64:	ldr	x0, [x0, #8]
  411a68:	cbnz	x0, 411a58 <pattern_matches@@Base+0x3c8>
  411a6c:	ldr	x22, [x22]
  411a70:	cbnz	x22, 4118d8 <pattern_matches@@Base+0x248>
  411a74:	b	411930 <pattern_matches@@Base+0x2a0>
  411a78:	mov	x22, x20
  411a7c:	cbnz	w19, 4118c8 <pattern_matches@@Base+0x238>
  411a80:	mov	sp, x29
  411a84:	mov	x0, x22
  411a88:	ldp	x19, x20, [sp, #16]
  411a8c:	ldp	x21, x22, [sp, #32]
  411a90:	ldp	x23, x24, [sp, #48]
  411a94:	ldp	x25, x26, [sp, #64]
  411a98:	ldp	x29, x30, [sp], #256
  411a9c:	ret
  411aa0:	adrp	x21, 42c000 <_IO_stdin_used@@Base+0x30e0>
  411aa4:	add	x21, x21, #0x670
  411aa8:	mov	w1, #0x0                   	// #0
  411aac:	ldr	w0, [x23, #32]
  411ab0:	cbnz	w0, 411ac4 <pattern_matches@@Base+0x434>
  411ab4:	ldr	x23, [x23]
  411ab8:	cbz	x23, 411958 <pattern_matches@@Base+0x2c8>
  411abc:	ldr	w0, [x23, #32]
  411ac0:	cbz	w0, 411ab4 <pattern_matches@@Base+0x424>
  411ac4:	ldr	x19, [x23, #16]
  411ac8:	mov	x0, x19
  411acc:	bl	406680 <strlen@plt>
  411ad0:	mov	x1, x19
  411ad4:	mov	x2, x0
  411ad8:	mov	x0, x20
  411adc:	bl	40bbb0 <variable_buffer_output@@Base>
  411ae0:	mov	x1, x21
  411ae4:	mov	x2, #0x1                   	// #1
  411ae8:	bl	40bbb0 <variable_buffer_output@@Base>
  411aec:	mov	x20, x0
  411af0:	ldr	x23, [x23]
  411af4:	mov	w1, #0x1                   	// #1
  411af8:	cbnz	x23, 411aac <pattern_matches@@Base+0x41c>
  411afc:	sub	x22, x20, #0x1
  411b00:	b	411960 <pattern_matches@@Base+0x2d0>
  411b04:	add	x25, x29, #0xa8
  411b08:	sxtw	x1, w19
  411b0c:	mov	x0, x25
  411b10:	adrp	x4, 410000 <init_hash_files@@Base+0x1138>
  411b14:	adrp	x3, 410000 <init_hash_files@@Base+0x1138>
  411b18:	add	x4, x4, #0xa98
  411b1c:	add	x3, x3, #0xb50
  411b20:	adrp	x2, 410000 <init_hash_files@@Base+0x1138>
  411b24:	add	x2, x2, #0x7d8
  411b28:	bl	4125d8 <hash_init@@Base>
  411b2c:	ldr	x23, [x29, #88]
  411b30:	mov	x22, x23
  411b34:	cbz	x23, 411b54 <pattern_matches@@Base+0x4c4>
  411b38:	mov	x1, x22
  411b3c:	mov	x0, x25
  411b40:	bl	412980 <hash_insert@@Base>
  411b44:	cbz	x0, 411b70 <pattern_matches@@Base+0x4e0>
  411b48:	str	x0, [x22, #8]
  411b4c:	ldr	x22, [x22]
  411b50:	cbnz	x22, 411b38 <pattern_matches@@Base+0x4a8>
  411b54:	cbz	w19, 411b68 <pattern_matches@@Base+0x4d8>
  411b58:	ldr	x22, [x29, #96]
  411b5c:	mov	w24, #0x1                   	// #1
  411b60:	cbnz	x22, 4118d8 <pattern_matches@@Base+0x248>
  411b64:	cbnz	x23, 411938 <pattern_matches@@Base+0x2a8>
  411b68:	mov	x22, x20
  411b6c:	b	411968 <pattern_matches@@Base+0x2d8>
  411b70:	ldr	x22, [x22]
  411b74:	cbnz	x22, 411b38 <pattern_matches@@Base+0x4a8>
  411b78:	b	411b54 <pattern_matches@@Base+0x4c4>
  411b7c:	nop

0000000000411b80 <strip_whitespace@@Base>:
  411b80:	mov	x3, x0
  411b84:	adrp	x4, 446000 <expanding_var@@Base+0x320>
  411b88:	ldr	x2, [x1]
  411b8c:	add	x4, x4, #0x4c0
  411b90:	ldr	x0, [x0]
  411b94:	cmp	x2, x0
  411b98:	b.cs	411bb4 <strip_whitespace@@Base+0x34>  // b.hs, b.nlast
  411b9c:	b	411bec <strip_whitespace@@Base+0x6c>
  411ba0:	add	x0, x0, #0x1
  411ba4:	str	x0, [x3]
  411ba8:	ldr	x2, [x1]
  411bac:	cmp	x2, x0
  411bb0:	b.cc	411bec <strip_whitespace@@Base+0x6c>  // b.lo, b.ul, b.last
  411bb4:	ldrb	w5, [x0]
  411bb8:	ldrh	w5, [x4, x5, lsl #1]
  411bbc:	tst	w5, #0x6
  411bc0:	b.ne	411ba0 <strip_whitespace@@Base+0x20>  // b.any
  411bc4:	b	411bd0 <strip_whitespace@@Base+0x50>
  411bc8:	str	x2, [x1]
  411bcc:	ldr	x0, [x3]
  411bd0:	cmp	x2, x0
  411bd4:	b.cc	411bec <strip_whitespace@@Base+0x6c>  // b.lo, b.ul, b.last
  411bd8:	ldrb	w5, [x2]
  411bdc:	sub	x2, x2, #0x1
  411be0:	ldrh	w5, [x4, x5, lsl #1]
  411be4:	tst	w5, #0x6
  411be8:	b.ne	411bc8 <strip_whitespace@@Base+0x48>  // b.any
  411bec:	ret

0000000000411bf0 <shell_completed@@Base>:
  411bf0:	stp	x29, x30, [sp, #-272]!
  411bf4:	adrp	x3, 446000 <expanding_var@@Base+0x320>
  411bf8:	add	x3, x3, #0x348
  411bfc:	mov	x29, sp
  411c00:	cmp	w0, #0x7f
  411c04:	str	wzr, [x3, #112]
  411c08:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  411c0c:	b.ne	411c60 <shell_completed@@Base+0x70>  // b.any
  411c10:	mov	w0, #0xffffffff            	// #-1
  411c14:	mov	w2, #0x7f                  	// #127
  411c18:	str	w0, [x3, #116]
  411c1c:	add	x0, sp, #0x10
  411c20:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  411c24:	add	x1, x1, #0xc20
  411c28:	bl	406730 <sprintf@plt>
  411c2c:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  411c30:	add	x2, sp, #0x10
  411c34:	mov	x6, #0x0                   	// #0
  411c38:	mov	w4, #0x0                   	// #0
  411c3c:	ldr	x5, [x1, #336]
  411c40:	mov	w3, #0x5                   	// #5
  411c44:	mov	x1, #0xc                   	// #12
  411c48:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  411c4c:	add	x0, x0, #0xf20
  411c50:	ldr	x5, [x5, #8]
  411c54:	bl	4253c8 <define_variable_in_set@@Base>
  411c58:	ldp	x29, x30, [sp], #272
  411c5c:	ret
  411c60:	cmp	w0, #0x0
  411c64:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  411c68:	add	w1, w1, #0x80
  411c6c:	csel	w2, w1, w0, gt
  411c70:	mov	w0, #0x1                   	// #1
  411c74:	str	w0, [x3, #116]
  411c78:	b	411c1c <shell_completed@@Base+0x2c>
  411c7c:	nop

0000000000411c80 <func_shell_base@@Base>:
  411c80:	stp	x29, x30, [sp, #-368]!
  411c84:	mov	w3, #0x0                   	// #0
  411c88:	mov	x29, sp
  411c8c:	stp	x23, x24, [sp, #48]
  411c90:	mov	x24, x0
  411c94:	add	x4, sp, #0x60
  411c98:	ldr	x0, [x1]
  411c9c:	mov	x1, #0x0                   	// #0
  411ca0:	str	x27, [sp, #80]
  411ca4:	mov	w27, w2
  411ca8:	mov	x2, #0x0                   	// #0
  411cac:	str	xzr, [sp, #96]
  411cb0:	bl	418518 <construct_command_argv@@Base>
  411cb4:	cbz	x0, 411e14 <func_shell_base@@Base+0x194>
  411cb8:	stp	x25, x26, [sp, #64]
  411cbc:	mov	x26, x0
  411cc0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  411cc4:	stp	x19, x20, [sp, #16]
  411cc8:	ldr	x20, [x0, #456]
  411ccc:	bl	41b850 <output_start@@Base>
  411cd0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  411cd4:	ldr	x0, [x0, #3576]
  411cd8:	cbz	x0, 411e28 <func_shell_base@@Base+0x1a8>
  411cdc:	ldr	w19, [x0, #4]
  411ce0:	tbnz	w19, #31, 411e28 <func_shell_base@@Base+0x1a8>
  411ce4:	add	x0, sp, #0x68
  411ce8:	bl	406750 <pipe@plt>
  411cec:	tbnz	w0, #31, 411e44 <func_shell_base@@Base+0x1c4>
  411cf0:	ldr	w0, [sp, #108]
  411cf4:	bl	4286f0 <fd_noinherit@@Base>
  411cf8:	ldr	w0, [sp, #104]
  411cfc:	bl	4286f0 <fd_noinherit@@Base>
  411d00:	stp	xzr, x20, [sp, #112]
  411d04:	ldrb	w3, [sp, #136]
  411d08:	ldr	w4, [sp, #108]
  411d0c:	add	x0, sp, #0x70
  411d10:	orr	w3, w3, #0x1
  411d14:	mov	x2, x26
  411d18:	mov	w1, #0x1                   	// #1
  411d1c:	stp	w4, w19, [sp, #128]
  411d20:	strb	w3, [sp, #136]
  411d24:	bl	415de0 <child_execute_job@@Base>
  411d28:	mov	w19, w0
  411d2c:	ldr	x0, [sp, #112]
  411d30:	bl	406b90 <free@plt>
  411d34:	tbnz	w19, #31, 411f54 <func_shell_base@@Base+0x2d4>
  411d38:	adrp	x25, 446000 <expanding_var@@Base+0x320>
  411d3c:	add	x25, x25, #0x348
  411d40:	ldr	w0, [sp, #108]
  411d44:	stp	x21, x22, [sp, #32]
  411d48:	stp	w19, wzr, [x25, #112]
  411d4c:	tbnz	w0, #31, 411d54 <func_shell_base@@Base+0xd4>
  411d50:	bl	406a50 <close@plt>
  411d54:	mov	x0, #0xc9                  	// #201
  411d58:	bl	41ab28 <xmalloc@@Base>
  411d5c:	mov	x23, x0
  411d60:	mov	x21, #0x0                   	// #0
  411d64:	mov	x22, #0xc8                  	// #200
  411d68:	add	x19, x23, x21
  411d6c:	sub	x20, x22, x21
  411d70:	b	411d84 <func_shell_base@@Base+0x104>
  411d74:	bl	406d70 <__errno_location@plt>
  411d78:	ldr	w0, [x0]
  411d7c:	cmp	w0, #0x4
  411d80:	b.ne	411e8c <func_shell_base@@Base+0x20c>  // b.any
  411d84:	ldr	w0, [sp, #104]
  411d88:	mov	x2, x20
  411d8c:	mov	x1, x19
  411d90:	bl	406c80 <read@plt>
  411d94:	cmn	w0, #0x1
  411d98:	b.eq	411d74 <func_shell_base@@Base+0xf4>  // b.none
  411d9c:	cmp	w0, #0x0
  411da0:	b.le	411e8c <func_shell_base@@Base+0x20c>
  411da4:	add	x21, x21, w0, sxtw
  411da8:	cmp	x21, x22
  411dac:	b.ne	411d68 <func_shell_base@@Base+0xe8>  // b.any
  411db0:	mov	x0, x23
  411db4:	add	x1, x21, #0x201
  411db8:	add	x22, x21, #0x200
  411dbc:	bl	41ab78 <xrealloc@@Base>
  411dc0:	mov	x23, x0
  411dc4:	b	411d68 <func_shell_base@@Base+0xe8>
  411dc8:	cbnz	w27, 411dd8 <func_shell_base@@Base+0x158>
  411dcc:	sub	x1, x1, #0x2
  411dd0:	cmp	x4, x1
  411dd4:	csel	x4, x4, x1, cs  // cs = hs, nlast
  411dd8:	strb	wzr, [x4, #1]!
  411ddc:	mov	x0, x24
  411de0:	mov	x1, x23
  411de4:	sub	x2, x4, x23
  411de8:	bl	40bbb0 <variable_buffer_output@@Base>
  411dec:	mov	x24, x0
  411df0:	mov	x0, x23
  411df4:	bl	406b90 <free@plt>
  411df8:	ldp	x21, x22, [sp, #32]
  411dfc:	ldr	x0, [x26]
  411e00:	bl	406b90 <free@plt>
  411e04:	mov	x0, x26
  411e08:	bl	406b90 <free@plt>
  411e0c:	ldp	x19, x20, [sp, #16]
  411e10:	ldp	x25, x26, [sp, #64]
  411e14:	mov	x0, x24
  411e18:	ldp	x23, x24, [sp, #48]
  411e1c:	ldr	x27, [sp, #80]
  411e20:	ldp	x29, x30, [sp], #368
  411e24:	ret
  411e28:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  411e2c:	ldr	x0, [x0, #416]
  411e30:	bl	406850 <fileno@plt>
  411e34:	mov	w19, w0
  411e38:	add	x0, sp, #0x68
  411e3c:	bl	406750 <pipe@plt>
  411e40:	tbz	w0, #31, 411cf0 <func_shell_base@@Base+0x70>
  411e44:	adrp	x0, 448000 <output_context@@Base+0x1208>
  411e48:	ldr	x20, [x0, #3640]
  411e4c:	bl	406d70 <__errno_location@plt>
  411e50:	mov	x19, x0
  411e54:	ldr	w0, [x0]
  411e58:	bl	406a40 <strerror@plt>
  411e5c:	bl	406680 <strlen@plt>
  411e60:	mov	x1, x0
  411e64:	ldr	w0, [x19]
  411e68:	mov	x19, x1
  411e6c:	bl	406a40 <strerror@plt>
  411e70:	mov	x3, x0
  411e74:	mov	x1, x19
  411e78:	mov	x0, x20
  411e7c:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  411e80:	add	x2, x2, #0xf30
  411e84:	bl	41bd88 <error@@Base>
  411e88:	b	411dfc <func_shell_base@@Base+0x17c>
  411e8c:	strb	wzr, [x19]
  411e90:	ldr	w0, [sp, #104]
  411e94:	bl	406a50 <close@plt>
  411e98:	ldr	w20, [x25, #116]
  411e9c:	cbnz	w20, 411eb4 <func_shell_base@@Base+0x234>
  411ea0:	mov	w1, #0x0                   	// #0
  411ea4:	mov	w0, #0x1                   	// #1
  411ea8:	bl	416790 <reap_children@@Base>
  411eac:	ldr	w20, [x25, #116]
  411eb0:	cbz	w20, 411ea0 <func_shell_base@@Base+0x220>
  411eb4:	ldr	x0, [sp, #96]
  411eb8:	cbz	x0, 411ed4 <func_shell_base@@Base+0x254>
  411ebc:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  411ec0:	ldr	w1, [x1, #1152]
  411ec4:	tbnz	w1, #1, 411fc4 <func_shell_base@@Base+0x344>
  411ec8:	bl	406700 <remove@plt>
  411ecc:	ldr	x0, [sp, #96]
  411ed0:	bl	406b90 <free@plt>
  411ed4:	str	wzr, [x25, #112]
  411ed8:	cmn	w20, #0x1
  411edc:	b.eq	411fa8 <func_shell_base@@Base+0x328>  // b.none
  411ee0:	mov	x4, x23
  411ee4:	strb	wzr, [x19]
  411ee8:	mov	x1, x23
  411eec:	ldrb	w0, [x4], #-1
  411ef0:	cbz	w0, 411dc8 <func_shell_base@@Base+0x148>
  411ef4:	mov	x2, x23
  411ef8:	mov	w6, #0x20                  	// #32
  411efc:	b	411f24 <func_shell_base@@Base+0x2a4>
  411f00:	cmp	w0, #0xa
  411f04:	add	x3, x1, #0x1
  411f08:	b.eq	411f44 <func_shell_base@@Base+0x2c4>  // b.none
  411f0c:	strb	w0, [x1]
  411f10:	mov	x4, x1
  411f14:	mov	x1, x3
  411f18:	ldrb	w0, [x2, #1]
  411f1c:	add	x2, x2, #0x1
  411f20:	cbz	w0, 411dc8 <func_shell_base@@Base+0x148>
  411f24:	cmp	w0, #0xd
  411f28:	b.ne	411f00 <func_shell_base@@Base+0x280>  // b.any
  411f2c:	ldrb	w5, [x2, #1]
  411f30:	add	x3, x1, #0x1
  411f34:	cmp	w5, #0xa
  411f38:	b.ne	411f0c <func_shell_base@@Base+0x28c>  // b.any
  411f3c:	add	x2, x2, #0x1
  411f40:	add	x3, x1, #0x1
  411f44:	strb	w6, [x1]
  411f48:	mov	x1, x3
  411f4c:	ldrb	w0, [x2, #1]
  411f50:	b	411f1c <func_shell_base@@Base+0x29c>
  411f54:	adrp	x3, 446000 <expanding_var@@Base+0x320>
  411f58:	add	x3, x3, #0x348
  411f5c:	mov	w4, #0xffffffff            	// #-1
  411f60:	add	x0, sp, #0x70
  411f64:	mov	w2, #0x7f                  	// #127
  411f68:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  411f6c:	add	x1, x1, #0xc20
  411f70:	stp	wzr, w4, [x3, #112]
  411f74:	bl	406730 <sprintf@plt>
  411f78:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  411f7c:	add	x2, sp, #0x70
  411f80:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  411f84:	mov	x6, #0x0                   	// #0
  411f88:	ldr	x5, [x1, #336]
  411f8c:	mov	w4, #0x0                   	// #0
  411f90:	mov	w3, #0x5                   	// #5
  411f94:	mov	x1, #0xc                   	// #12
  411f98:	add	x0, x0, #0xf20
  411f9c:	ldr	x5, [x5, #8]
  411fa0:	bl	4253c8 <define_variable_in_set@@Base>
  411fa4:	b	411dfc <func_shell_base@@Base+0x17c>
  411fa8:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  411fac:	mov	x0, x23
  411fb0:	ldr	x1, [x19, #416]
  411fb4:	bl	406690 <fputs@plt>
  411fb8:	ldr	x0, [x19, #416]
  411fbc:	bl	406c20 <fflush@plt>
  411fc0:	b	411df0 <func_shell_base@@Base+0x170>
  411fc4:	mov	w2, #0x5                   	// #5
  411fc8:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  411fcc:	mov	x0, #0x0                   	// #0
  411fd0:	add	x1, x1, #0xf40
  411fd4:	bl	406cd0 <dcgettext@plt>
  411fd8:	ldr	x1, [sp, #96]
  411fdc:	bl	406d60 <printf@plt>
  411fe0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  411fe4:	ldr	x0, [x0, #440]
  411fe8:	bl	406c20 <fflush@plt>
  411fec:	ldr	w20, [x25, #116]
  411ff0:	ldr	x0, [sp, #96]
  411ff4:	b	411ec8 <func_shell_base@@Base+0x248>
  411ff8:	mov	w2, #0x1                   	// #1
  411ffc:	b	411c80 <func_shell_base@@Base>

0000000000412000 <handle_function@@Base>:
  412000:	stp	x29, x30, [sp, #-144]!
  412004:	mov	w4, #0x7d                  	// #125
  412008:	mov	x29, sp
  41200c:	stp	x19, x20, [sp, #16]
  412010:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  412014:	add	x19, x19, #0x4c0
  412018:	ldr	x20, [x1]
  41201c:	stp	x21, x22, [sp, #32]
  412020:	mov	x22, x0
  412024:	stp	x23, x24, [sp, #48]
  412028:	stp	x25, x26, [sp, #64]
  41202c:	mov	w26, #0x29                  	// #41
  412030:	stp	x27, x28, [sp, #80]
  412034:	ldrb	w0, [x20, #1]
  412038:	ldrb	w25, [x20], #1
  41203c:	cmp	w25, #0x28
  412040:	ldrh	w0, [x19, x0, lsl #1]
  412044:	csel	w26, w26, w4, eq  // eq = none
  412048:	tbz	w0, #13, 412200 <handle_function@@Base+0x200>
  41204c:	mov	x23, x1
  412050:	mov	x2, x20
  412054:	nop
  412058:	ldrb	w3, [x2, #1]!
  41205c:	ldrh	w3, [x19, x3, lsl #1]
  412060:	tbnz	w3, #13, 412058 <handle_function@@Base+0x58>
  412064:	cmp	x20, x2
  412068:	b.eq	412200 <handle_function@@Base+0x200>  // b.none
  41206c:	tst	x3, #0x7
  412070:	b.eq	412200 <handle_function@@Base+0x200>  // b.none
  412074:	sub	x2, x2, x20
  412078:	add	x1, x29, #0x78
  41207c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  412080:	add	x0, x0, #0x348
  412084:	str	x20, [x29, #128]
  412088:	strb	w2, [x29, #136]
  41208c:	bl	412950 <hash_find_item@@Base>
  412090:	mov	x27, x0
  412094:	cbz	x0, 412200 <handle_function@@Base+0x200>
  412098:	ldrb	w0, [x0, #16]
  41209c:	add	x21, x20, x0
  4120a0:	ldrb	w2, [x20, x0]
  4120a4:	ldrh	w5, [x19, w2, sxtw #1]
  4120a8:	tst	w5, #0x6
  4120ac:	b.eq	4120c0 <handle_function@@Base+0xc0>  // b.none
  4120b0:	ldrb	w2, [x21, #1]!
  4120b4:	ldrh	w5, [x19, w2, sxtw #1]
  4120b8:	tst	w5, #0x6
  4120bc:	b.ne	4120b0 <handle_function@@Base+0xb0>  // b.any
  4120c0:	cbz	w2, 412110 <handle_function@@Base+0x110>
  4120c4:	mov	x20, x21
  4120c8:	mov	w6, #0x1                   	// #1
  4120cc:	mov	w8, #0x0                   	// #0
  4120d0:	mov	w7, #0x480                 	// #1152
  4120d4:	b	4120f4 <handle_function@@Base+0xf4>
  4120d8:	cmp	w25, w2
  4120dc:	b.eq	412154 <handle_function@@Base+0x154>  // b.none
  4120e0:	cmp	w26, w2
  4120e4:	b.eq	41215c <handle_function@@Base+0x15c>  // b.none
  4120e8:	ldrb	w2, [x20, #1]!
  4120ec:	cbz	w2, 412110 <handle_function@@Base+0x110>
  4120f0:	ldrh	w5, [x19, w2, sxtw #1]
  4120f4:	tst	w5, w7
  4120f8:	b.eq	4120e8 <handle_function@@Base+0xe8>  // b.none
  4120fc:	cmp	w2, #0x2c
  412100:	b.ne	4120d8 <handle_function@@Base+0xd8>  // b.any
  412104:	ldrb	w2, [x20, #1]!
  412108:	add	w6, w6, #0x1
  41210c:	cbnz	w2, 4120f0 <handle_function@@Base+0xf0>
  412110:	adrp	x1, 445000 <memcpy@GLIBC_2.17>
  412114:	ldr	x0, [x27, #8]
  412118:	ldr	x1, [x1, #3296]
  41211c:	ldr	x20, [x1]
  412120:	bl	406680 <strlen@plt>
  412124:	mov	w2, #0x5                   	// #5
  412128:	mov	x19, x0
  41212c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  412130:	mov	x0, #0x0                   	// #0
  412134:	add	x1, x1, #0xf68
  412138:	bl	406cd0 <dcgettext@plt>
  41213c:	ldr	x3, [x27, #8]
  412140:	mov	x2, x0
  412144:	mov	w4, w26
  412148:	mov	x1, x19
  41214c:	mov	x0, x20
  412150:	bl	41c0a0 <fatal@@Base>
  412154:	add	w8, w8, #0x1
  412158:	b	4120e8 <handle_function@@Base+0xe8>
  41215c:	sub	w8, w8, #0x1
  412160:	cmn	w8, #0x1
  412164:	b.ne	4120e8 <handle_function@@Base+0xe8>  // b.any
  412168:	add	w6, w6, #0x2
  41216c:	str	x20, [x23]
  412170:	sbfiz	x1, x6, #3, #32
  412174:	ldrb	w0, [x27, #19]
  412178:	add	x1, x1, #0xf
  41217c:	and	x1, x1, #0xfffffffffffffff0
  412180:	sub	sp, sp, x1
  412184:	mov	x23, sp
  412188:	tbz	w0, #0, 412230 <handle_function@@Base+0x230>
  41218c:	mov	x4, x23
  412190:	cmp	x20, x21
  412194:	mov	w28, #0x0                   	// #0
  412198:	b.cs	41229c <handle_function@@Base+0x29c>  // b.hs, b.nlast
  41219c:	mov	x21, #0x0                   	// #0
  4121a0:	ldr	x0, [x22]
  4121a4:	str	xzr, [x4]
  4121a8:	mov	w1, w28
  4121ac:	mov	x3, x27
  4121b0:	mov	x2, x23
  4121b4:	bl	40f5c0 <init_hash_files@@Base+0x6f8>
  4121b8:	str	x0, [x22]
  4121bc:	ldrb	w0, [x27, #19]
  4121c0:	tbz	w0, #0, 412224 <handle_function@@Base+0x224>
  4121c4:	ldr	x0, [x23]
  4121c8:	cbz	x0, 4121dc <handle_function@@Base+0x1dc>
  4121cc:	nop
  4121d0:	bl	406b90 <free@plt>
  4121d4:	ldr	x0, [x23, #8]!
  4121d8:	cbnz	x0, 4121d0 <handle_function@@Base+0x1d0>
  4121dc:	mov	sp, x29
  4121e0:	mov	w0, #0x1                   	// #1
  4121e4:	ldp	x19, x20, [sp, #16]
  4121e8:	ldp	x21, x22, [sp, #32]
  4121ec:	ldp	x23, x24, [sp, #48]
  4121f0:	ldp	x25, x26, [sp, #64]
  4121f4:	ldp	x27, x28, [sp, #80]
  4121f8:	ldp	x29, x30, [sp], #144
  4121fc:	ret
  412200:	mov	sp, x29
  412204:	mov	w0, #0x0                   	// #0
  412208:	ldp	x19, x20, [sp, #16]
  41220c:	ldp	x21, x22, [sp, #32]
  412210:	ldp	x23, x24, [sp, #48]
  412214:	ldp	x25, x26, [sp, #64]
  412218:	ldp	x27, x28, [sp, #80]
  41221c:	ldp	x29, x30, [sp], #144
  412220:	ret
  412224:	mov	x0, x21
  412228:	bl	406b90 <free@plt>
  41222c:	b	4121dc <handle_function@@Base+0x1dc>
  412230:	sub	x20, x20, x21
  412234:	str	x23, [x29, #104]
  412238:	add	x0, x20, #0x1
  41223c:	bl	41ab28 <xmalloc@@Base>
  412240:	mov	x1, x21
  412244:	mov	x21, x0
  412248:	mov	x2, x20
  41224c:	bl	406640 <memcpy@plt>
  412250:	adds	x3, x21, x20
  412254:	mov	w28, #0x0                   	// #0
  412258:	strb	wzr, [x21, x20]
  41225c:	ldr	x4, [x29, #104]
  412260:	b.cs	4121a0 <handle_function@@Base+0x1a0>  // b.hs, b.nlast
  412264:	mov	x7, x21
  412268:	mov	x4, x23
  41226c:	mov	w6, #0x480                 	// #1152
  412270:	ldrb	w0, [x27, #18]
  412274:	add	w28, w28, #0x1
  412278:	mov	x1, x3
  41227c:	cmp	w0, w28
  412280:	b.ne	412348 <handle_function@@Base+0x348>  // b.any
  412284:	str	x7, [x4], #8
  412288:	mov	x7, x1
  41228c:	strb	wzr, [x7], #1
  412290:	cmp	x3, x7
  412294:	b.cc	4121a0 <handle_function@@Base+0x1a0>  // b.lo, b.ul, b.last
  412298:	b	412270 <handle_function@@Base+0x270>
  41229c:	mov	w3, #0x480                 	// #1152
  4122a0:	ldrb	w0, [x27, #18]
  4122a4:	add	w28, w28, #0x1
  4122a8:	mov	x24, x20
  4122ac:	cmp	w0, w28
  4122b0:	b.ne	4122e0 <handle_function@@Base+0x2e0>  // b.any
  4122b4:	mov	x0, x21
  4122b8:	mov	x1, x24
  4122bc:	str	x4, [x29, #104]
  4122c0:	bl	40bc38 <expand_argument@@Base>
  4122c4:	ldr	x4, [x29, #104]
  4122c8:	add	x21, x24, #0x1
  4122cc:	cmp	x21, x20
  4122d0:	mov	w3, #0x480                 	// #1152
  4122d4:	str	x0, [x4], #8
  4122d8:	b.hi	41219c <handle_function@@Base+0x19c>  // b.pmore
  4122dc:	b	4122a0 <handle_function@@Base+0x2a0>
  4122e0:	cmp	x20, x21
  4122e4:	b.ls	412340 <handle_function@@Base+0x340>  // b.plast
  4122e8:	mov	x24, x21
  4122ec:	mov	w2, #0x0                   	// #0
  4122f0:	b	412314 <handle_function@@Base+0x314>
  4122f4:	cmp	w26, w1
  4122f8:	b.eq	412334 <handle_function@@Base+0x334>  // b.none
  4122fc:	cmp	w1, #0x2c
  412300:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  412304:	b.eq	4122b4 <handle_function@@Base+0x2b4>  // b.none
  412308:	add	x24, x24, #0x1
  41230c:	cmp	x24, x20
  412310:	b.eq	4122b4 <handle_function@@Base+0x2b4>  // b.none
  412314:	ldrb	w1, [x24]
  412318:	ldrh	w0, [x19, w1, sxtw #1]
  41231c:	tst	w3, w0
  412320:	b.eq	412308 <handle_function@@Base+0x308>  // b.none
  412324:	cmp	w25, w1
  412328:	b.ne	4122f4 <handle_function@@Base+0x2f4>  // b.any
  41232c:	add	w2, w2, #0x1
  412330:	b	412308 <handle_function@@Base+0x308>
  412334:	sub	w2, w2, #0x1
  412338:	cmn	w2, #0x1
  41233c:	b.ne	412308 <handle_function@@Base+0x308>  // b.any
  412340:	mov	x24, x20
  412344:	b	4122b4 <handle_function@@Base+0x2b4>
  412348:	cmp	x3, x7
  41234c:	b.ls	4123a8 <handle_function@@Base+0x3a8>  // b.plast
  412350:	mov	x1, x7
  412354:	mov	w5, #0x0                   	// #0
  412358:	b	41237c <handle_function@@Base+0x37c>
  41235c:	cmp	w26, w2
  412360:	b.eq	41239c <handle_function@@Base+0x39c>  // b.none
  412364:	cmp	w2, #0x2c
  412368:	ccmp	w5, #0x0, #0x0, eq  // eq = none
  41236c:	b.eq	412284 <handle_function@@Base+0x284>  // b.none
  412370:	add	x1, x1, #0x1
  412374:	cmp	x3, x1
  412378:	b.eq	4123a8 <handle_function@@Base+0x3a8>  // b.none
  41237c:	ldrb	w2, [x1]
  412380:	ldrh	w0, [x19, w2, sxtw #1]
  412384:	tst	w6, w0
  412388:	b.eq	412370 <handle_function@@Base+0x370>  // b.none
  41238c:	cmp	w25, w2
  412390:	b.ne	41235c <handle_function@@Base+0x35c>  // b.any
  412394:	add	w5, w5, #0x1
  412398:	b	412370 <handle_function@@Base+0x370>
  41239c:	sub	w5, w5, #0x1
  4123a0:	cmn	w5, #0x1
  4123a4:	b.ne	412370 <handle_function@@Base+0x370>  // b.any
  4123a8:	mov	x1, x3
  4123ac:	b	412284 <handle_function@@Base+0x284>

00000000004123b0 <define_new_function@@Base>:
  4123b0:	stp	x29, x30, [sp, #-80]!
  4123b4:	adrp	x9, 446000 <expanding_var@@Base+0x320>
  4123b8:	add	x9, x9, #0x4c0
  4123bc:	mov	x29, sp
  4123c0:	stp	x19, x20, [sp, #16]
  4123c4:	mov	w20, w4
  4123c8:	stp	x21, x22, [sp, #32]
  4123cc:	mov	x21, x1
  4123d0:	stp	x23, x24, [sp, #48]
  4123d4:	str	x25, [sp, #64]
  4123d8:	mov	x25, x0
  4123dc:	ldrb	w1, [x1]
  4123e0:	ldrh	w4, [x9, w1, sxtw #1]
  4123e4:	tbz	w4, #13, 412500 <define_new_function@@Base+0x150>
  4123e8:	mov	w24, w2
  4123ec:	mov	w22, w3
  4123f0:	mov	x23, x5
  4123f4:	mov	x6, x21
  4123f8:	ldrb	w7, [x6, #1]!
  4123fc:	ldrh	w8, [x9, w7, sxtw #1]
  412400:	tbnz	w8, #13, 4123f8 <define_new_function@@Base+0x48>
  412404:	subs	x19, x6, x21
  412408:	b.eq	412500 <define_new_function@@Base+0x150>  // b.none
  41240c:	cmp	w1, #0x2e
  412410:	ccmp	w7, #0x0, #0x0, ne  // ne = any
  412414:	b.ne	412494 <define_new_function@@Base+0xe4>  // b.any
  412418:	cmp	x19, #0xff
  41241c:	b.hi	41255c <define_new_function@@Base+0x1ac>  // b.pmore
  412420:	cmp	w24, #0xff
  412424:	b.hi	412524 <define_new_function@@Base+0x174>  // b.pmore
  412428:	cmp	w22, #0xff
  41242c:	b.hi	4124c8 <define_new_function@@Base+0x118>  // b.pmore
  412430:	cmp	w22, #0x0
  412434:	ccmp	w24, w22, #0x0, ne  // ne = any
  412438:	b.hi	4124c8 <define_new_function@@Base+0x118>  // b.pmore
  41243c:	mov	x0, #0x18                  	// #24
  412440:	bl	41ab28 <xmalloc@@Base>
  412444:	mov	x1, x0
  412448:	mvn	w4, w20
  41244c:	and	w4, w4, #0x1
  412450:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  412454:	orr	w4, w4, #0x2
  412458:	add	x0, x0, #0x348
  41245c:	ldrb	w5, [x1, #19]
  412460:	strb	w19, [x1, #16]
  412464:	strb	w24, [x1, #17]
  412468:	and	w5, w5, #0xfffffffc
  41246c:	strb	w22, [x1, #18]
  412470:	orr	w4, w4, w5
  412474:	strb	w4, [x1, #19]
  412478:	ldp	x19, x20, [sp, #16]
  41247c:	ldr	x25, [sp, #64]
  412480:	stp	x23, x21, [x1]
  412484:	ldp	x21, x22, [sp, #32]
  412488:	ldp	x23, x24, [sp, #48]
  41248c:	ldp	x29, x30, [sp], #80
  412490:	b	412980 <hash_insert@@Base>
  412494:	mov	x0, x21
  412498:	bl	406680 <strlen@plt>
  41249c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  4124a0:	mov	x19, x0
  4124a4:	add	x1, x1, #0xfb8
  4124a8:	mov	w2, #0x5                   	// #5
  4124ac:	mov	x0, #0x0                   	// #0
  4124b0:	bl	406cd0 <dcgettext@plt>
  4124b4:	mov	x2, x0
  4124b8:	mov	x3, x21
  4124bc:	mov	x1, x19
  4124c0:	mov	x0, x25
  4124c4:	bl	41c0a0 <fatal@@Base>
  4124c8:	mov	x0, x21
  4124cc:	bl	406680 <strlen@plt>
  4124d0:	mov	w2, #0x5                   	// #5
  4124d4:	mov	x19, x0
  4124d8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4124dc:	mov	x0, #0x0                   	// #0
  4124e0:	add	x1, x1, #0x30
  4124e4:	bl	406cd0 <dcgettext@plt>
  4124e8:	mov	x4, x21
  4124ec:	mov	x2, x0
  4124f0:	mov	w3, w22
  4124f4:	add	x1, x19, #0x14
  4124f8:	mov	x0, x25
  4124fc:	bl	41c0a0 <fatal@@Base>
  412500:	mov	w2, #0x5                   	// #5
  412504:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  412508:	mov	x0, #0x0                   	// #0
  41250c:	add	x1, x1, #0xfa0
  412510:	bl	406cd0 <dcgettext@plt>
  412514:	mov	x2, x0
  412518:	mov	x1, #0x0                   	// #0
  41251c:	mov	x0, x25
  412520:	bl	41c0a0 <fatal@@Base>
  412524:	mov	x0, x21
  412528:	bl	406680 <strlen@plt>
  41252c:	mov	w2, #0x5                   	// #5
  412530:	mov	x19, x0
  412534:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  412538:	mov	x0, #0x0                   	// #0
  41253c:	add	x1, x1, #0xff8
  412540:	bl	406cd0 <dcgettext@plt>
  412544:	mov	x4, x21
  412548:	mov	x2, x0
  41254c:	mov	w3, w24
  412550:	add	x1, x19, #0x14
  412554:	mov	x0, x25
  412558:	bl	41c0a0 <fatal@@Base>
  41255c:	mov	x0, x21
  412560:	bl	406680 <strlen@plt>
  412564:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  412568:	mov	x19, x0
  41256c:	add	x1, x1, #0xfd8
  412570:	b	4124a8 <define_new_function@@Base+0xf8>
  412574:	nop

0000000000412578 <hash_init_function_table@@Base>:
  412578:	stp	x29, x30, [sp, #-32]!
  41257c:	mov	x1, #0x48                  	// #72
  412580:	adrp	x4, 410000 <init_hash_files@@Base+0x1138>
  412584:	mov	x29, sp
  412588:	str	x19, [sp, #16]
  41258c:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  412590:	add	x19, x19, #0x348
  412594:	add	x4, x4, #0xa40
  412598:	mov	x0, x19
  41259c:	adrp	x3, 40e000 <snap_deps@@Base+0x88>
  4125a0:	adrp	x2, 410000 <init_hash_files@@Base+0x1138>
  4125a4:	add	x3, x3, #0xef0
  4125a8:	add	x2, x2, #0xa78
  4125ac:	bl	4125d8 <hash_init@@Base>
  4125b0:	mov	x0, x19
  4125b4:	adrp	x1, 445000 <memcpy@GLIBC_2.17>
  4125b8:	ldr	x19, [sp, #16]
  4125bc:	add	x1, x1, #0xce8
  4125c0:	ldp	x29, x30, [sp], #32
  4125c4:	mov	x3, #0x18                  	// #24
  4125c8:	mov	x2, #0x24                  	// #36
  4125cc:	b	4127d0 <hash_load@@Base>

00000000004125d0 <guile_gmake_setup@@Base>:
  4125d0:	mov	w0, #0x1                   	// #1
  4125d4:	ret

00000000004125d8 <hash_init@@Base>:
  4125d8:	orr	x1, x1, x1, lsr #1
  4125dc:	stp	x29, x30, [sp, #-48]!
  4125e0:	orr	x1, x1, x1, lsr #2
  4125e4:	mov	x29, sp
  4125e8:	orr	x1, x1, x1, lsr #4
  4125ec:	stp	x19, x20, [sp, #16]
  4125f0:	mov	x19, x0
  4125f4:	orr	x1, x1, x1, lsr #8
  4125f8:	stp	x21, x22, [sp, #32]
  4125fc:	mov	x20, x4
  412600:	orr	x1, x1, x1, lsr #16
  412604:	mov	x21, x2
  412608:	mov	x22, x3
  41260c:	orr	x1, x1, x1, lsr #32
  412610:	add	x1, x1, #0x1
  412614:	str	x1, [x0, #32]
  412618:	str	x1, [x0, #56]
  41261c:	lsl	x0, x1, #3
  412620:	bl	41ab50 <xcalloc@@Base>
  412624:	str	x0, [x19]
  412628:	cbz	x0, 412658 <hash_init@@Base+0x80>
  41262c:	ldr	x0, [x19, #32]
  412630:	stp	x21, x22, [x19, #8]
  412634:	str	x20, [x19, #24]
  412638:	sub	x0, x0, x0, lsr #4
  41263c:	stp	x0, xzr, [x19, #40]
  412640:	stp	xzr, xzr, [x19, #64]
  412644:	str	wzr, [x19, #80]
  412648:	ldp	x19, x20, [sp, #16]
  41264c:	ldp	x21, x22, [sp, #32]
  412650:	ldp	x29, x30, [sp], #48
  412654:	ret
  412658:	adrp	x3, 446000 <expanding_var@@Base+0x320>
  41265c:	mov	w2, #0x5                   	// #5
  412660:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  412664:	add	x1, x1, #0x1c8
  412668:	ldr	x20, [x3, #416]
  41266c:	bl	406cd0 <dcgettext@plt>
  412670:	ldr	x2, [x19, #32]
  412674:	mov	x1, x0
  412678:	mov	x0, x20
  41267c:	lsl	x2, x2, #3
  412680:	bl	406dd0 <fprintf@plt>
  412684:	mov	w0, #0x1                   	// #1
  412688:	bl	4066a0 <exit@plt>
  41268c:	nop

0000000000412690 <hash_find_slot@@Base>:
  412690:	stp	x29, x30, [sp, #-80]!
  412694:	mov	x29, sp
  412698:	stp	x23, x24, [sp, #48]
  41269c:	mov	x24, x0
  4126a0:	mov	x0, x1
  4126a4:	str	x25, [sp, #64]
  4126a8:	mov	x25, x1
  4126ac:	ldr	x1, [x24, #8]
  4126b0:	stp	x19, x20, [sp, #16]
  4126b4:	stp	x21, x22, [sp, #32]
  4126b8:	blr	x1
  4126bc:	ldr	x19, [x24, #32]
  4126c0:	ldr	x1, [x24]
  4126c4:	sub	w19, w19, #0x1
  4126c8:	and	w2, w19, w0
  4126cc:	and	w19, w19, w0
  4126d0:	ldr	x0, [x24, #72]
  4126d4:	add	x21, x1, x2, lsl #3
  4126d8:	ldr	x2, [x1, x2, lsl #3]
  4126dc:	add	x0, x0, #0x1
  4126e0:	str	x0, [x24, #72]
  4126e4:	cbz	x2, 412770 <hash_find_slot@@Base+0xe0>
  4126e8:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  4126ec:	add	x22, x22, #0x48
  4126f0:	mov	w20, #0x0                   	// #0
  4126f4:	mov	x23, #0x0                   	// #0
  4126f8:	ldr	x3, [x22]
  4126fc:	mov	x1, x2
  412700:	mov	x0, x25
  412704:	cmp	x3, x2
  412708:	b.eq	4127c0 <hash_find_slot@@Base+0x130>  // b.none
  41270c:	cmp	x25, x2
  412710:	b.eq	412770 <hash_find_slot@@Base+0xe0>  // b.none
  412714:	ldr	x2, [x24, #24]
  412718:	blr	x2
  41271c:	cbz	w0, 412770 <hash_find_slot@@Base+0xe0>
  412720:	ldr	x2, [x24, #64]
  412724:	add	x2, x2, #0x1
  412728:	str	x2, [x24, #64]
  41272c:	mov	x0, x25
  412730:	add	w2, w20, w19
  412734:	cbnz	w20, 41278c <hash_find_slot@@Base+0xfc>
  412738:	ldr	x1, [x24, #16]
  41273c:	blr	x1
  412740:	orr	w20, w0, #0x1
  412744:	ldr	x2, [x24, #32]
  412748:	add	w19, w20, w19
  41274c:	ldr	x3, [x24]
  412750:	sub	w2, w2, #0x1
  412754:	and	w21, w2, w19
  412758:	and	w19, w2, w19
  41275c:	ldr	x2, [x3, x21, lsl #3]
  412760:	add	x21, x3, x21, lsl #3
  412764:	cbnz	x2, 4126f8 <hash_find_slot@@Base+0x68>
  412768:	cmp	x23, #0x0
  41276c:	csel	x21, x21, x23, eq  // eq = none
  412770:	mov	x0, x21
  412774:	ldp	x19, x20, [sp, #16]
  412778:	ldp	x21, x22, [sp, #32]
  41277c:	ldp	x23, x24, [sp, #48]
  412780:	ldr	x25, [sp, #64]
  412784:	ldp	x29, x30, [sp], #80
  412788:	ret
  41278c:	ldr	x19, [x24, #32]
  412790:	ldr	x3, [x24]
  412794:	sub	w19, w19, #0x1
  412798:	and	w4, w19, w2
  41279c:	and	w19, w19, w2
  4127a0:	add	x21, x3, x4, lsl #3
  4127a4:	ldr	x2, [x3, x4, lsl #3]
  4127a8:	cbz	x2, 412768 <hash_find_slot@@Base+0xd8>
  4127ac:	ldr	x3, [x22]
  4127b0:	mov	x1, x2
  4127b4:	mov	x0, x25
  4127b8:	cmp	x3, x2
  4127bc:	b.ne	41270c <hash_find_slot@@Base+0x7c>  // b.any
  4127c0:	cmp	x23, #0x0
  4127c4:	csel	x23, x23, x21, ne  // ne = any
  4127c8:	b	41272c <hash_find_slot@@Base+0x9c>
  4127cc:	nop

00000000004127d0 <hash_load@@Base>:
  4127d0:	cbz	x2, 41294c <hash_load@@Base+0x17c>
  4127d4:	stp	x29, x30, [sp, #-80]!
  4127d8:	mov	x29, sp
  4127dc:	stp	x19, x20, [sp, #16]
  4127e0:	mov	x19, x0
  4127e4:	stp	x21, x22, [sp, #32]
  4127e8:	mov	x21, x1
  4127ec:	stp	x23, x24, [sp, #48]
  4127f0:	sub	x23, x2, #0x1
  4127f4:	adrp	x24, 446000 <expanding_var@@Base+0x320>
  4127f8:	stp	x25, x26, [sp, #64]
  4127fc:	mov	x25, x3
  412800:	b	412838 <hash_load@@Base+0x68>
  412804:	ldr	x2, [x24, #72]
  412808:	cmp	x1, x2
  41280c:	b.eq	41293c <hash_load@@Base+0x16c>  // b.none
  412810:	ldp	x1, x2, [x19, #32]
  412814:	ldr	x3, [x19, #56]
  412818:	str	x21, [x0]
  41281c:	sub	x0, x1, x2
  412820:	cmp	x3, x0
  412824:	b.cc	412934 <hash_load@@Base+0x164>  // b.lo, b.ul, b.last
  412828:	sub	x23, x23, #0x1
  41282c:	add	x21, x21, x25
  412830:	cmn	x23, #0x1
  412834:	b.eq	41291c <hash_load@@Base+0x14c>  // b.none
  412838:	mov	x1, x21
  41283c:	mov	x0, x19
  412840:	bl	412690 <hash_find_slot@@Base>
  412844:	ldr	x1, [x0]
  412848:	cbnz	x1, 412804 <hash_load@@Base+0x34>
  41284c:	ldp	x3, x4, [x19, #48]
  412850:	ldp	x1, x2, [x19, #32]
  412854:	sub	x4, x4, #0x1
  412858:	add	x3, x3, #0x1
  41285c:	stp	x3, x4, [x19, #48]
  412860:	str	x21, [x0]
  412864:	sub	x0, x1, x2
  412868:	cmp	x4, x0
  41286c:	b.cs	412828 <hash_load@@Base+0x58>  // b.hs, b.nlast
  412870:	cmp	x3, x2
  412874:	mov	x0, x1
  412878:	ldr	x26, [x19]
  41287c:	b.cc	41288c <hash_load@@Base+0xbc>  // b.lo, b.ul, b.last
  412880:	lsl	x0, x1, #1
  412884:	sub	x2, x0, x0, lsr #4
  412888:	stp	x0, x2, [x19, #32]
  41288c:	ldr	w2, [x19, #80]
  412890:	add	x22, x26, x1, lsl #3
  412894:	lsl	x0, x0, #3
  412898:	add	w2, w2, #0x1
  41289c:	str	w2, [x19, #80]
  4128a0:	mov	x20, x26
  4128a4:	bl	41ab50 <xcalloc@@Base>
  4128a8:	str	x0, [x19]
  4128ac:	cmp	x22, x26
  4128b0:	b.ls	4128e8 <hash_load@@Base+0x118>  // b.plast
  4128b4:	nop
  4128b8:	ldr	x1, [x20]
  4128bc:	cbz	x1, 4128dc <hash_load@@Base+0x10c>
  4128c0:	ldr	x2, [x24, #72]
  4128c4:	mov	x0, x19
  4128c8:	cmp	x1, x2
  4128cc:	b.eq	4128dc <hash_load@@Base+0x10c>  // b.none
  4128d0:	bl	412690 <hash_find_slot@@Base>
  4128d4:	ldr	x1, [x20]
  4128d8:	str	x1, [x0]
  4128dc:	add	x20, x20, #0x8
  4128e0:	cmp	x22, x20
  4128e4:	b.hi	4128b8 <hash_load@@Base+0xe8>  // b.pmore
  4128e8:	ldr	x1, [x19, #32]
  4128ec:	mov	x0, x26
  4128f0:	ldr	x2, [x19, #48]
  4128f4:	sub	x23, x23, #0x1
  4128f8:	sub	x1, x1, x2
  4128fc:	str	x1, [x19, #56]
  412900:	bl	406b90 <free@plt>
  412904:	mov	x1, x21
  412908:	mov	x0, x19
  41290c:	bl	412690 <hash_find_slot@@Base>
  412910:	add	x21, x21, x25
  412914:	cmn	x23, #0x1
  412918:	b.ne	412838 <hash_load@@Base+0x68>  // b.any
  41291c:	ldp	x19, x20, [sp, #16]
  412920:	ldp	x21, x22, [sp, #32]
  412924:	ldp	x23, x24, [sp, #48]
  412928:	ldp	x25, x26, [sp, #64]
  41292c:	ldp	x29, x30, [sp], #80
  412930:	ret
  412934:	ldr	x3, [x19, #48]
  412938:	b	412870 <hash_load@@Base+0xa0>
  41293c:	ldr	x1, [x19, #48]
  412940:	add	x1, x1, #0x1
  412944:	str	x1, [x19, #48]
  412948:	b	412810 <hash_load@@Base+0x40>
  41294c:	ret

0000000000412950 <hash_find_item@@Base>:
  412950:	stp	x29, x30, [sp, #-16]!
  412954:	mov	x29, sp
  412958:	bl	412690 <hash_find_slot@@Base>
  41295c:	ldr	x0, [x0]
  412960:	cbz	x0, 412974 <hash_find_item@@Base+0x24>
  412964:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  412968:	ldr	x1, [x1, #72]
  41296c:	cmp	x0, x1
  412970:	csel	x0, x0, xzr, ne  // ne = any
  412974:	ldp	x29, x30, [sp], #16
  412978:	ret
  41297c:	nop

0000000000412980 <hash_insert@@Base>:
  412980:	stp	x29, x30, [sp, #-80]!
  412984:	mov	x29, sp
  412988:	stp	x19, x20, [sp, #16]
  41298c:	mov	x19, x0
  412990:	stp	x21, x22, [sp, #32]
  412994:	mov	x22, x1
  412998:	bl	412690 <hash_find_slot@@Base>
  41299c:	ldr	x21, [x0]
  4129a0:	cbz	x21, 412ae4 <hash_insert@@Base+0x164>
  4129a4:	adrp	x3, 446000 <expanding_var@@Base+0x320>
  4129a8:	ldr	x1, [x3, #72]
  4129ac:	cmp	x21, x1
  4129b0:	b.eq	4129ec <hash_insert@@Base+0x6c>  // b.none
  4129b4:	ldp	x2, x4, [x19, #32]
  4129b8:	ldr	x1, [x19, #56]
  4129bc:	str	x22, [x0]
  4129c0:	sub	x0, x2, x4
  4129c4:	cmp	x1, x0
  4129c8:	b.cc	412a10 <hash_insert@@Base+0x90>  // b.lo, b.ul, b.last
  4129cc:	ldr	x0, [x3, #72]
  4129d0:	cmp	x0, x21
  4129d4:	b.eq	412abc <hash_insert@@Base+0x13c>  // b.none
  4129d8:	mov	x0, x21
  4129dc:	ldp	x19, x20, [sp, #16]
  4129e0:	ldp	x21, x22, [sp, #32]
  4129e4:	ldp	x29, x30, [sp], #80
  4129e8:	ret
  4129ec:	ldp	x2, x4, [x19, #32]
  4129f0:	ldr	x1, [x19, #48]
  4129f4:	add	x1, x1, #0x1
  4129f8:	str	x1, [x19, #48]
  4129fc:	ldr	x1, [x19, #56]
  412a00:	str	x22, [x0]
  412a04:	sub	x0, x2, x4
  412a08:	cmp	x1, x0
  412a0c:	b.cs	4129cc <hash_insert@@Base+0x4c>  // b.hs, b.nlast
  412a10:	stp	x23, x24, [sp, #48]
  412a14:	ldr	x1, [x19, #48]
  412a18:	str	x25, [sp, #64]
  412a1c:	cmp	x1, x4
  412a20:	mov	x0, x2
  412a24:	ldr	x24, [x19]
  412a28:	b.cs	412ad4 <hash_insert@@Base+0x154>  // b.hs, b.nlast
  412a2c:	ldr	w1, [x19, #80]
  412a30:	add	x23, x24, x2, lsl #3
  412a34:	lsl	x0, x0, #3
  412a38:	mov	x20, x24
  412a3c:	add	w1, w1, #0x1
  412a40:	str	w1, [x19, #80]
  412a44:	adrp	x25, 446000 <expanding_var@@Base+0x320>
  412a48:	bl	41ab50 <xcalloc@@Base>
  412a4c:	str	x0, [x19]
  412a50:	cmp	x24, x23
  412a54:	b.cs	412a88 <hash_insert@@Base+0x108>  // b.hs, b.nlast
  412a58:	ldr	x1, [x20]
  412a5c:	cbz	x1, 412a7c <hash_insert@@Base+0xfc>
  412a60:	ldr	x2, [x25, #72]
  412a64:	mov	x0, x19
  412a68:	cmp	x1, x2
  412a6c:	b.eq	412a7c <hash_insert@@Base+0xfc>  // b.none
  412a70:	bl	412690 <hash_find_slot@@Base>
  412a74:	ldr	x1, [x20]
  412a78:	str	x1, [x0]
  412a7c:	add	x20, x20, #0x8
  412a80:	cmp	x20, x23
  412a84:	b.cc	412a58 <hash_insert@@Base+0xd8>  // b.lo, b.ul, b.last
  412a88:	ldr	x1, [x19, #32]
  412a8c:	mov	x0, x24
  412a90:	ldr	x2, [x19, #48]
  412a94:	sub	x1, x1, x2
  412a98:	str	x1, [x19, #56]
  412a9c:	bl	406b90 <free@plt>
  412aa0:	mov	x1, x22
  412aa4:	mov	x0, x19
  412aa8:	bl	412690 <hash_find_slot@@Base>
  412aac:	adrp	x3, 446000 <expanding_var@@Base+0x320>
  412ab0:	ldp	x23, x24, [sp, #48]
  412ab4:	ldr	x25, [sp, #64]
  412ab8:	cbnz	x21, 4129cc <hash_insert@@Base+0x4c>
  412abc:	mov	x21, #0x0                   	// #0
  412ac0:	mov	x0, x21
  412ac4:	ldp	x19, x20, [sp, #16]
  412ac8:	ldp	x21, x22, [sp, #32]
  412acc:	ldp	x29, x30, [sp], #80
  412ad0:	ret
  412ad4:	lsl	x0, x2, #1
  412ad8:	sub	x1, x0, x0, lsr #4
  412adc:	stp	x0, x1, [x19, #32]
  412ae0:	b	412a2c <hash_insert@@Base+0xac>
  412ae4:	ldp	x1, x3, [x19, #48]
  412ae8:	ldp	x2, x4, [x19, #32]
  412aec:	sub	x3, x3, #0x1
  412af0:	add	x1, x1, #0x1
  412af4:	stp	x1, x3, [x19, #48]
  412af8:	str	x22, [x0]
  412afc:	sub	x0, x2, x4
  412b00:	cmp	x3, x0
  412b04:	b.cs	412abc <hash_insert@@Base+0x13c>  // b.hs, b.nlast
  412b08:	stp	x23, x24, [sp, #48]
  412b0c:	str	x25, [sp, #64]
  412b10:	b	412a1c <hash_insert@@Base+0x9c>
  412b14:	nop

0000000000412b18 <hash_insert_at@@Base>:
  412b18:	stp	x29, x30, [sp, #-64]!
  412b1c:	mov	x29, sp
  412b20:	stp	x19, x20, [sp, #16]
  412b24:	mov	x19, x0
  412b28:	ldr	x0, [x2]
  412b2c:	stp	x21, x22, [sp, #32]
  412b30:	mov	x21, x1
  412b34:	ldr	x4, [x19, #56]
  412b38:	cbz	x0, 412c4c <hash_insert_at@@Base+0x134>
  412b3c:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  412b40:	ldr	x1, [x1, #72]
  412b44:	cmp	x1, x0
  412b48:	b.eq	412b74 <hash_insert_at@@Base+0x5c>  // b.none
  412b4c:	ldp	x3, x5, [x19, #32]
  412b50:	str	x21, [x2]
  412b54:	sub	x0, x3, x5
  412b58:	cmp	x0, x4
  412b5c:	b.hi	412b94 <hash_insert_at@@Base+0x7c>  // b.pmore
  412b60:	mov	x0, x2
  412b64:	ldp	x19, x20, [sp, #16]
  412b68:	ldp	x21, x22, [sp, #32]
  412b6c:	ldp	x29, x30, [sp], #64
  412b70:	ret
  412b74:	ldp	x3, x5, [x19, #32]
  412b78:	ldr	x0, [x19, #48]
  412b7c:	add	x0, x0, #0x1
  412b80:	str	x0, [x19, #48]
  412b84:	str	x21, [x2]
  412b88:	sub	x0, x3, x5
  412b8c:	cmp	x0, x4
  412b90:	b.ls	412b60 <hash_insert_at@@Base+0x48>  // b.plast
  412b94:	ldr	x1, [x19, #48]
  412b98:	stp	x23, x24, [sp, #48]
  412b9c:	mov	x0, x3
  412ba0:	cmp	x5, x1
  412ba4:	ldr	x23, [x19]
  412ba8:	b.ls	412c3c <hash_insert_at@@Base+0x124>  // b.plast
  412bac:	ldr	w1, [x19, #80]
  412bb0:	add	x22, x23, x3, lsl #3
  412bb4:	lsl	x0, x0, #3
  412bb8:	mov	x20, x23
  412bbc:	add	w1, w1, #0x1
  412bc0:	str	w1, [x19, #80]
  412bc4:	adrp	x24, 446000 <expanding_var@@Base+0x320>
  412bc8:	bl	41ab50 <xcalloc@@Base>
  412bcc:	str	x0, [x19]
  412bd0:	cmp	x23, x22
  412bd4:	b.cs	412c08 <hash_insert_at@@Base+0xf0>  // b.hs, b.nlast
  412bd8:	ldr	x1, [x20]
  412bdc:	cbz	x1, 412bfc <hash_insert_at@@Base+0xe4>
  412be0:	ldr	x2, [x24, #72]
  412be4:	mov	x0, x19
  412be8:	cmp	x1, x2
  412bec:	b.eq	412bfc <hash_insert_at@@Base+0xe4>  // b.none
  412bf0:	bl	412690 <hash_find_slot@@Base>
  412bf4:	ldr	x1, [x20]
  412bf8:	str	x1, [x0]
  412bfc:	add	x20, x20, #0x8
  412c00:	cmp	x20, x22
  412c04:	b.cc	412bd8 <hash_insert_at@@Base+0xc0>  // b.lo, b.ul, b.last
  412c08:	ldr	x1, [x19, #32]
  412c0c:	mov	x0, x23
  412c10:	ldr	x2, [x19, #48]
  412c14:	sub	x1, x1, x2
  412c18:	str	x1, [x19, #56]
  412c1c:	bl	406b90 <free@plt>
  412c20:	mov	x1, x21
  412c24:	mov	x0, x19
  412c28:	ldp	x19, x20, [sp, #16]
  412c2c:	ldp	x21, x22, [sp, #32]
  412c30:	ldp	x23, x24, [sp, #48]
  412c34:	ldp	x29, x30, [sp], #64
  412c38:	b	412690 <hash_find_slot@@Base>
  412c3c:	lsl	x0, x3, #1
  412c40:	sub	x1, x0, x0, lsr #4
  412c44:	stp	x0, x1, [x19, #32]
  412c48:	b	412bac <hash_insert_at@@Base+0x94>
  412c4c:	ldr	x0, [x19, #48]
  412c50:	sub	x4, x4, #0x1
  412c54:	add	x0, x0, #0x1
  412c58:	stp	x0, x4, [x19, #48]
  412c5c:	b	412b4c <hash_insert_at@@Base+0x34>

0000000000412c60 <hash_delete@@Base>:
  412c60:	stp	x29, x30, [sp, #-32]!
  412c64:	mov	x29, sp
  412c68:	str	x19, [sp, #16]
  412c6c:	mov	x19, x0
  412c70:	bl	412690 <hash_find_slot@@Base>
  412c74:	mov	x1, x0
  412c78:	ldr	x0, [x0]
  412c7c:	cbz	x0, 412ca0 <hash_delete@@Base+0x40>
  412c80:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  412c84:	ldr	x3, [x2, #72]
  412c88:	cmp	x0, x3
  412c8c:	b.eq	412cac <hash_delete@@Base+0x4c>  // b.none
  412c90:	ldr	x2, [x19, #48]
  412c94:	str	x3, [x1]
  412c98:	sub	x1, x2, #0x1
  412c9c:	str	x1, [x19, #48]
  412ca0:	ldr	x19, [sp, #16]
  412ca4:	ldp	x29, x30, [sp], #32
  412ca8:	ret
  412cac:	mov	x0, #0x0                   	// #0
  412cb0:	ldr	x19, [sp, #16]
  412cb4:	ldp	x29, x30, [sp], #32
  412cb8:	ret
  412cbc:	nop

0000000000412cc0 <hash_delete_at@@Base>:
  412cc0:	mov	x2, x0
  412cc4:	ldr	x0, [x1]
  412cc8:	cbz	x0, 412cec <hash_delete_at@@Base+0x2c>
  412ccc:	adrp	x3, 446000 <expanding_var@@Base+0x320>
  412cd0:	ldr	x4, [x3, #72]
  412cd4:	cmp	x4, x0
  412cd8:	b.eq	412cf0 <hash_delete_at@@Base+0x30>  // b.none
  412cdc:	ldr	x3, [x2, #48]
  412ce0:	str	x4, [x1]
  412ce4:	sub	x1, x3, #0x1
  412ce8:	str	x1, [x2, #48]
  412cec:	ret
  412cf0:	mov	x0, #0x0                   	// #0
  412cf4:	ret

0000000000412cf8 <hash_free_items@@Base>:
  412cf8:	stp	x29, x30, [sp, #-48]!
  412cfc:	mov	x29, sp
  412d00:	stp	x19, x20, [sp, #16]
  412d04:	stp	x21, x22, [sp, #32]
  412d08:	mov	x21, x0
  412d0c:	ldr	x19, [x0]
  412d10:	ldr	x0, [x0, #32]
  412d14:	add	x20, x19, x0, lsl #3
  412d18:	cmp	x19, x20
  412d1c:	b.cs	412d50 <hash_free_items@@Base+0x58>  // b.hs, b.nlast
  412d20:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  412d24:	nop
  412d28:	ldr	x0, [x19]
  412d2c:	cbz	x0, 412d40 <hash_free_items@@Base+0x48>
  412d30:	ldr	x1, [x22, #72]
  412d34:	cmp	x1, x0
  412d38:	b.eq	412d40 <hash_free_items@@Base+0x48>  // b.none
  412d3c:	bl	406b90 <free@plt>
  412d40:	str	xzr, [x19], #8
  412d44:	cmp	x20, x19
  412d48:	b.hi	412d28 <hash_free_items@@Base+0x30>  // b.pmore
  412d4c:	ldr	x0, [x21, #32]
  412d50:	ldp	x19, x20, [sp, #16]
  412d54:	stp	xzr, x0, [x21, #48]
  412d58:	ldp	x21, x22, [sp, #32]
  412d5c:	ldp	x29, x30, [sp], #48
  412d60:	ret
  412d64:	nop

0000000000412d68 <hash_delete_items@@Base>:
  412d68:	stp	x29, x30, [sp, #-32]!
  412d6c:	mov	x29, sp
  412d70:	stp	x19, x20, [sp, #16]
  412d74:	mov	x19, x0
  412d78:	ldr	x0, [x0]
  412d7c:	ldr	x20, [x19, #32]
  412d80:	add	x1, x0, x20, lsl #3
  412d84:	cmp	x0, x1
  412d88:	b.cs	412da4 <hash_delete_items@@Base+0x3c>  // b.hs, b.nlast
  412d8c:	mvn	x2, x0
  412d90:	add	x2, x1, x2
  412d94:	mov	w1, #0x0                   	// #0
  412d98:	and	x2, x2, #0xfffffffffffffff8
  412d9c:	add	x2, x2, #0x8
  412da0:	bl	406970 <memset@plt>
  412da4:	stp	xzr, x20, [x19, #48]
  412da8:	stp	xzr, xzr, [x19, #64]
  412dac:	str	wzr, [x19, #80]
  412db0:	ldp	x19, x20, [sp, #16]
  412db4:	ldp	x29, x30, [sp], #32
  412db8:	ret
  412dbc:	nop

0000000000412dc0 <hash_free@@Base>:
  412dc0:	stp	x29, x30, [sp, #-48]!
  412dc4:	mov	x29, sp
  412dc8:	stp	x19, x20, [sp, #16]
  412dcc:	mov	x19, x0
  412dd0:	ldr	x20, [x0]
  412dd4:	ldr	x0, [x0, #32]
  412dd8:	cbnz	w1, 412dfc <hash_free@@Base+0x3c>
  412ddc:	stp	xzr, x0, [x19, #48]
  412de0:	mov	x0, x20
  412de4:	bl	406b90 <free@plt>
  412de8:	str	xzr, [x19]
  412dec:	str	xzr, [x19, #40]
  412df0:	ldp	x19, x20, [sp, #16]
  412df4:	ldp	x29, x30, [sp], #48
  412df8:	ret
  412dfc:	stp	x21, x22, [sp, #32]
  412e00:	add	x21, x20, x0, lsl #3
  412e04:	cmp	x21, x20
  412e08:	b.ls	412e3c <hash_free@@Base+0x7c>  // b.plast
  412e0c:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  412e10:	ldr	x0, [x20]
  412e14:	cbz	x0, 412e28 <hash_free@@Base+0x68>
  412e18:	ldr	x1, [x22, #72]
  412e1c:	cmp	x0, x1
  412e20:	b.eq	412e28 <hash_free@@Base+0x68>  // b.none
  412e24:	bl	406b90 <free@plt>
  412e28:	str	xzr, [x20], #8
  412e2c:	cmp	x21, x20
  412e30:	b.hi	412e10 <hash_free@@Base+0x50>  // b.pmore
  412e34:	ldr	x20, [x19]
  412e38:	ldr	x0, [x19, #32]
  412e3c:	ldp	x21, x22, [sp, #32]
  412e40:	stp	xzr, x0, [x19, #48]
  412e44:	mov	x0, x20
  412e48:	bl	406b90 <free@plt>
  412e4c:	str	xzr, [x19]
  412e50:	str	xzr, [x19, #40]
  412e54:	ldp	x19, x20, [sp, #16]
  412e58:	ldp	x29, x30, [sp], #48
  412e5c:	ret

0000000000412e60 <hash_map@@Base>:
  412e60:	stp	x29, x30, [sp, #-48]!
  412e64:	mov	x29, sp
  412e68:	stp	x19, x20, [sp, #16]
  412e6c:	ldr	x19, [x0]
  412e70:	ldr	x20, [x0, #32]
  412e74:	add	x20, x19, x20, lsl #3
  412e78:	cmp	x19, x20
  412e7c:	b.cs	412ebc <hash_map@@Base+0x5c>  // b.hs, b.nlast
  412e80:	stp	x21, x22, [sp, #32]
  412e84:	mov	x21, x1
  412e88:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  412e8c:	nop
  412e90:	ldr	x2, [x19]
  412e94:	add	x19, x19, #0x8
  412e98:	mov	x0, x2
  412e9c:	cbz	x2, 412eb0 <hash_map@@Base+0x50>
  412ea0:	ldr	x3, [x22, #72]
  412ea4:	cmp	x2, x3
  412ea8:	b.eq	412eb0 <hash_map@@Base+0x50>  // b.none
  412eac:	blr	x21
  412eb0:	cmp	x20, x19
  412eb4:	b.hi	412e90 <hash_map@@Base+0x30>  // b.pmore
  412eb8:	ldp	x21, x22, [sp, #32]
  412ebc:	ldp	x19, x20, [sp, #16]
  412ec0:	ldp	x29, x30, [sp], #48
  412ec4:	ret

0000000000412ec8 <hash_map_arg@@Base>:
  412ec8:	stp	x29, x30, [sp, #-64]!
  412ecc:	mov	x29, sp
  412ed0:	stp	x19, x20, [sp, #16]
  412ed4:	ldr	x19, [x0]
  412ed8:	ldr	x20, [x0, #32]
  412edc:	add	x20, x19, x20, lsl #3
  412ee0:	cmp	x19, x20
  412ee4:	b.cs	412f34 <hash_map_arg@@Base+0x6c>  // b.hs, b.nlast
  412ee8:	stp	x21, x22, [sp, #32]
  412eec:	mov	x22, x1
  412ef0:	mov	x21, x2
  412ef4:	str	x23, [sp, #48]
  412ef8:	adrp	x23, 446000 <expanding_var@@Base+0x320>
  412efc:	nop
  412f00:	ldr	x3, [x19]
  412f04:	mov	x1, x21
  412f08:	add	x19, x19, #0x8
  412f0c:	mov	x0, x3
  412f10:	cbz	x3, 412f24 <hash_map_arg@@Base+0x5c>
  412f14:	ldr	x4, [x23, #72]
  412f18:	cmp	x3, x4
  412f1c:	b.eq	412f24 <hash_map_arg@@Base+0x5c>  // b.none
  412f20:	blr	x22
  412f24:	cmp	x20, x19
  412f28:	b.hi	412f00 <hash_map_arg@@Base+0x38>  // b.pmore
  412f2c:	ldp	x21, x22, [sp, #32]
  412f30:	ldr	x23, [sp, #48]
  412f34:	ldp	x19, x20, [sp, #16]
  412f38:	ldp	x29, x30, [sp], #64
  412f3c:	ret

0000000000412f40 <hash_print_stats@@Base>:
  412f40:	stp	x29, x30, [sp, #-48]!
  412f44:	mov	w2, #0x5                   	// #5
  412f48:	mov	x29, sp
  412f4c:	stp	x19, x20, [sp, #16]
  412f50:	mov	x19, x0
  412f54:	mov	x20, x1
  412f58:	mov	x0, #0x0                   	// #0
  412f5c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  412f60:	add	x1, x1, #0x208
  412f64:	str	d8, [sp, #32]
  412f68:	bl	406cd0 <dcgettext@plt>
  412f6c:	mov	x1, x0
  412f70:	ldr	x2, [x19, #48]
  412f74:	mov	x4, #0x4059000000000000    	// #4636737291354636288
  412f78:	ldr	x3, [x19, #32]
  412f7c:	ucvtf	d0, x2
  412f80:	fmov	d8, x4
  412f84:	mov	x0, x20
  412f88:	ucvtf	d1, x3
  412f8c:	fmul	d0, d0, d8
  412f90:	fdiv	d0, d0, d1
  412f94:	bl	406dd0 <fprintf@plt>
  412f98:	mov	w2, #0x5                   	// #5
  412f9c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  412fa0:	mov	x0, #0x0                   	// #0
  412fa4:	add	x1, x1, #0x220
  412fa8:	bl	406cd0 <dcgettext@plt>
  412fac:	mov	x1, x0
  412fb0:	ldr	w2, [x19, #80]
  412fb4:	mov	x0, x20
  412fb8:	bl	406dd0 <fprintf@plt>
  412fbc:	mov	w2, #0x5                   	// #5
  412fc0:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  412fc4:	mov	x0, #0x0                   	// #0
  412fc8:	add	x1, x1, #0x230
  412fcc:	bl	406cd0 <dcgettext@plt>
  412fd0:	mov	x1, x0
  412fd4:	ldp	x2, x3, [x19, #64]
  412fd8:	movi	d0, #0x0
  412fdc:	cbz	x3, 412ff0 <hash_print_stats@@Base+0xb0>
  412fe0:	ucvtf	d0, x2
  412fe4:	ucvtf	d1, x3
  412fe8:	fmul	d0, d0, d8
  412fec:	fdiv	d0, d0, d1
  412ff0:	mov	x0, x20
  412ff4:	ldr	d8, [sp, #32]
  412ff8:	ldp	x19, x20, [sp, #16]
  412ffc:	ldp	x29, x30, [sp], #48
  413000:	b	406dd0 <fprintf@plt>
  413004:	nop

0000000000413008 <hash_dump@@Base>:
  413008:	stp	x29, x30, [sp, #-48]!
  41300c:	mov	x29, sp
  413010:	stp	x19, x20, [sp, #16]
  413014:	mov	x20, x1
  413018:	ldr	x4, [x0]
  41301c:	stp	x21, x22, [sp, #32]
  413020:	mov	x21, x0
  413024:	ldr	x19, [x0, #32]
  413028:	mov	x22, x2
  41302c:	add	x19, x4, x19, lsl #3
  413030:	cbz	x1, 4130a4 <hash_dump@@Base+0x9c>
  413034:	mov	x7, x20
  413038:	cmp	x4, x19
  41303c:	b.cs	413074 <hash_dump@@Base+0x6c>  // b.hs, b.nlast
  413040:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  413044:	nop
  413048:	ldr	x5, [x4]
  41304c:	mov	x6, x7
  413050:	add	x4, x4, #0x8
  413054:	cbz	x5, 41306c <hash_dump@@Base+0x64>
  413058:	ldr	x8, [x1, #72]
  41305c:	cmp	x5, x8
  413060:	b.eq	41306c <hash_dump@@Base+0x64>  // b.none
  413064:	str	x5, [x6], #8
  413068:	mov	x7, x6
  41306c:	cmp	x19, x4
  413070:	b.hi	413048 <hash_dump@@Base+0x40>  // b.pmore
  413074:	str	xzr, [x7]
  413078:	cbz	x22, 413090 <hash_dump@@Base+0x88>
  41307c:	ldr	x1, [x21, #48]
  413080:	mov	x3, x22
  413084:	mov	x0, x20
  413088:	mov	x2, #0x8                   	// #8
  41308c:	bl	4067b0 <qsort@plt>
  413090:	mov	x0, x20
  413094:	ldp	x19, x20, [sp, #16]
  413098:	ldp	x21, x22, [sp, #32]
  41309c:	ldp	x29, x30, [sp], #48
  4130a0:	ret
  4130a4:	ldr	x0, [x0, #48]
  4130a8:	add	x0, x0, #0x1
  4130ac:	lsl	x0, x0, #3
  4130b0:	bl	41ab28 <xmalloc@@Base>
  4130b4:	mov	x20, x0
  4130b8:	ldr	x4, [x21]
  4130bc:	b	413034 <hash_dump@@Base+0x2c>

00000000004130c0 <jhash@@Base>:
  4130c0:	mov	w3, #0xbeef                	// #48879
  4130c4:	mov	x7, x0
  4130c8:	movk	w3, #0xdead, lsl #16
  4130cc:	cmp	w1, #0xc
  4130d0:	add	w0, w1, w3
  4130d4:	b.le	413208 <jhash@@Base+0x148>
  4130d8:	mov	w2, w0
  4130dc:	mov	w3, w0
  4130e0:	ldp	w5, w6, [x7, #4]
  4130e4:	sub	w1, w1, #0xc
  4130e8:	ldr	w4, [x7], #12
  4130ec:	cmp	w1, #0xc
  4130f0:	add	w2, w2, w6
  4130f4:	add	w3, w3, w5
  4130f8:	sub	w4, w4, w2
  4130fc:	add	w6, w3, w2
  413100:	add	w4, w4, w0
  413104:	eor	w2, w4, w2, ror #28
  413108:	sub	w3, w3, w2
  41310c:	add	w5, w2, w6
  413110:	eor	w2, w3, w2, ror #26
  413114:	sub	w6, w6, w2
  413118:	add	w4, w2, w5
  41311c:	eor	w2, w6, w2, ror #24
  413120:	sub	w5, w5, w2
  413124:	add	w3, w2, w4
  413128:	eor	w2, w5, w2, ror #16
  41312c:	sub	w4, w4, w2
  413130:	add	w0, w2, w3
  413134:	eor	w2, w4, w2, ror #13
  413138:	sub	w4, w3, w2
  41313c:	add	w3, w2, w0
  413140:	eor	w2, w4, w2, ror #28
  413144:	b.gt	4130e0 <jhash@@Base+0x20>
  413148:	cmp	w1, #0x8
  41314c:	b.gt	4131cc <jhash@@Base+0x10c>
  413150:	cmp	w1, #0x4
  413154:	b.gt	4131d8 <jhash@@Base+0x118>
  413158:	cmp	w1, #0x4
  41315c:	b.eq	4131ec <jhash@@Base+0x12c>  // b.none
  413160:	cmp	w1, #0x2
  413164:	b.gt	4131f4 <jhash@@Base+0x134>
  413168:	b.eq	4131fc <jhash@@Base+0x13c>  // b.none
  41316c:	ldrb	w1, [x7]
  413170:	ror	w4, w3, #18
  413174:	add	w2, w1, w2
  413178:	eor	w1, w3, w2
  41317c:	sub	w1, w1, w4
  413180:	eor	w0, w1, w0
  413184:	ror	w2, w1, #21
  413188:	sub	w0, w0, w2
  41318c:	eor	w3, w3, w0
  413190:	ror	w2, w0, #7
  413194:	sub	w3, w3, w2
  413198:	eor	w1, w1, w3
  41319c:	ror	w2, w3, #16
  4131a0:	sub	w1, w1, w2
  4131a4:	eor	w0, w0, w1
  4131a8:	ror	w2, w1, #28
  4131ac:	sub	w0, w0, w2
  4131b0:	eor	w3, w3, w0
  4131b4:	ror	w0, w0, #18
  4131b8:	sub	w3, w3, w0
  4131bc:	eor	w4, w1, w3
  4131c0:	ror	w3, w3, #8
  4131c4:	sub	w0, w4, w3
  4131c8:	ret
  4131cc:	ldr	w4, [x7], #4
  4131d0:	sub	w1, w1, #0x4
  4131d4:	add	w0, w0, w4
  4131d8:	ldr	w4, [x7], #4
  4131dc:	sub	w1, w1, #0x4
  4131e0:	cmp	w1, #0x4
  4131e4:	add	w3, w3, w4
  4131e8:	b.ne	413160 <jhash@@Base+0xa0>  // b.any
  4131ec:	ldrb	w1, [x7, #3]
  4131f0:	add	w2, w2, w1, lsl #24
  4131f4:	ldrb	w1, [x7, #2]
  4131f8:	add	w2, w2, w1, lsl #16
  4131fc:	ldrb	w1, [x7, #1]
  413200:	add	w2, w2, w1, lsl #8
  413204:	b	41316c <jhash@@Base+0xac>
  413208:	cbz	w1, 4131c8 <jhash@@Base+0x108>
  41320c:	mov	w3, w0
  413210:	mov	w2, w0
  413214:	b	413148 <jhash@@Base+0x88>

0000000000413218 <jhash_string@@Base>:
  413218:	stp	x29, x30, [sp, #-112]!
  41321c:	mov	x29, sp
  413220:	stp	x19, x20, [sp, #16]
  413224:	mov	w19, #0xbeef                	// #48879
  413228:	movk	w19, #0xdead, lsl #16
  41322c:	mov	w20, w19
  413230:	stp	x21, x22, [sp, #32]
  413234:	mov	w22, #0xfeff                	// #65279
  413238:	mov	w21, w19
  41323c:	stp	x23, x24, [sp, #48]
  413240:	movk	w22, #0xfefe, lsl #16
  413244:	stp	x25, x26, [sp, #64]
  413248:	mov	x25, x0
  41324c:	mov	x26, x0
  413250:	str	x27, [sp, #80]
  413254:	bl	406680 <strlen@plt>
  413258:	mov	x27, x0
  41325c:	mov	x23, #0x4                   	// #4
  413260:	cmp	x27, #0x4
  413264:	mov	x1, x26
  413268:	csel	x2, x27, x23, ls  // ls = plast
  41326c:	add	x0, sp, #0x6c
  413270:	str	wzr, [sp, #108]
  413274:	mov	x24, x26
  413278:	bl	406640 <memcpy@plt>
  41327c:	ldr	w1, [sp, #108]
  413280:	sub	x2, x27, #0x4
  413284:	add	x0, sp, #0x6c
  413288:	add	w3, w1, w22
  41328c:	bic	w3, w3, w1
  413290:	tst	w3, #0x80808080
  413294:	b.eq	413318 <jhash_string@@Base+0x100>  // b.none
  413298:	ands	w0, w1, #0xff
  41329c:	b.ne	413408 <jhash_string@@Base+0x1f0>  // b.any
  4132a0:	eor	w19, w20, w19
  4132a4:	ror	w0, w20, #18
  4132a8:	sub	w19, w19, w0
  4132ac:	sub	x25, x26, x25
  4132b0:	eor	w21, w21, w19
  4132b4:	ror	w0, w19, #21
  4132b8:	sub	w21, w21, w0
  4132bc:	eor	w20, w20, w21
  4132c0:	ror	w0, w21, #7
  4132c4:	sub	w20, w20, w0
  4132c8:	eor	w19, w19, w20
  4132cc:	ror	w0, w20, #16
  4132d0:	sub	w19, w19, w0
  4132d4:	eor	w21, w21, w19
  4132d8:	ror	w0, w19, #28
  4132dc:	sub	w21, w21, w0
  4132e0:	eor	w20, w20, w21
  4132e4:	ror	w21, w21, #18
  4132e8:	sub	w20, w20, w21
  4132ec:	eor	w19, w19, w20
  4132f0:	add	w25, w19, w25
  4132f4:	ror	w20, w20, #8
  4132f8:	sub	w0, w25, w20
  4132fc:	ldp	x19, x20, [sp, #16]
  413300:	ldp	x21, x22, [sp, #32]
  413304:	ldp	x23, x24, [sp, #48]
  413308:	ldp	x25, x26, [sp, #64]
  41330c:	ldr	x27, [sp, #80]
  413310:	ldp	x29, x30, [sp], #112
  413314:	ret
  413318:	cmp	x2, #0x4
  41331c:	add	x26, x26, #0x4
  413320:	csel	x2, x2, x23, ls  // ls = plast
  413324:	add	w21, w21, w1
  413328:	mov	x1, x26
  41332c:	str	wzr, [sp, #108]
  413330:	bl	406640 <memcpy@plt>
  413334:	ldr	w1, [sp, #108]
  413338:	sub	x2, x27, #0x8
  41333c:	add	x0, sp, #0x6c
  413340:	add	w3, w1, w22
  413344:	bic	w3, w3, w1
  413348:	tst	w3, #0x80808080
  41334c:	b.eq	413368 <jhash_string@@Base+0x150>  // b.none
  413350:	ands	w0, w1, #0xff
  413354:	b.eq	4132a0 <jhash_string@@Base+0x88>  // b.none
  413358:	tst	w1, #0xff00
  41335c:	b.ne	41342c <jhash_string@@Base+0x214>  // b.any
  413360:	add	w20, w20, w0
  413364:	b	4132a0 <jhash_string@@Base+0x88>
  413368:	cmp	x2, #0x4
  41336c:	add	x26, x24, #0x8
  413370:	csel	x2, x2, x23, ls  // ls = plast
  413374:	add	w20, w20, w1
  413378:	mov	x1, x26
  41337c:	str	wzr, [sp, #108]
  413380:	bl	406640 <memcpy@plt>
  413384:	sub	x27, x27, #0xc
  413388:	ldr	w0, [sp, #108]
  41338c:	add	w2, w0, w19
  413390:	add	w4, w0, w22
  413394:	sub	w3, w21, w2
  413398:	add	w1, w20, w2
  41339c:	eor	w2, w3, w2, ror #28
  4133a0:	bic	w4, w4, w0
  4133a4:	sub	w5, w20, w2
  4133a8:	add	w3, w2, w1
  4133ac:	eor	w2, w5, w2, ror #26
  4133b0:	tst	w4, #0x80808080
  4133b4:	sub	w1, w1, w2
  4133b8:	add	w4, w2, w3
  4133bc:	eor	w2, w1, w2, ror #24
  4133c0:	b.eq	4133dc <jhash_string@@Base+0x1c4>  // b.none
  4133c4:	ands	w1, w0, #0xff
  4133c8:	b.eq	4132a0 <jhash_string@@Base+0x88>  // b.none
  4133cc:	tst	w0, #0xff00
  4133d0:	b.ne	413440 <jhash_string@@Base+0x228>  // b.any
  4133d4:	add	w19, w19, w1
  4133d8:	b	4132a0 <jhash_string@@Base+0x88>
  4133dc:	sub	w3, w3, w2
  4133e0:	add	w0, w2, w4
  4133e4:	eor	w2, w3, w2, ror #16
  4133e8:	add	x26, x24, #0xc
  4133ec:	sub	w19, w4, w2
  4133f0:	add	w21, w2, w0
  4133f4:	eor	w2, w19, w2, ror #13
  4133f8:	sub	w19, w0, w2
  4133fc:	add	w20, w2, w21
  413400:	eor	w19, w19, w2, ror #28
  413404:	b	413260 <jhash_string@@Base+0x48>
  413408:	tst	w1, #0xff00
  41340c:	b.ne	413418 <jhash_string@@Base+0x200>  // b.any
  413410:	add	w21, w21, w0
  413414:	b	4132a0 <jhash_string@@Base+0x88>
  413418:	add	w0, w21, w1, uxth
  41341c:	tst	w1, #0xff0000
  413420:	add	w21, w21, w1
  413424:	csel	w21, w21, w0, ne  // ne = any
  413428:	b	4132a0 <jhash_string@@Base+0x88>
  41342c:	add	w0, w20, w1, uxth
  413430:	tst	w1, #0xff0000
  413434:	add	w20, w20, w1
  413438:	csel	w20, w20, w0, ne  // ne = any
  41343c:	b	4132a0 <jhash_string@@Base+0x88>
  413440:	add	w1, w19, w0, uxth
  413444:	tst	w0, #0xff0000
  413448:	add	w19, w19, w0
  41344c:	csel	w19, w19, w1, ne  // ne = any
  413450:	b	4132a0 <jhash_string@@Base+0x88>
  413454:	nop

0000000000413458 <stemlen_compare@@Base>:
  413458:	mov	x3, x0
  41345c:	ldr	x0, [x1, #8]
  413460:	ldr	x2, [x3, #8]
  413464:	subs	w0, w2, w0
  413468:	b.ne	413478 <stemlen_compare@@Base+0x20>  // b.any
  41346c:	ldr	w2, [x1, #20]
  413470:	ldr	w0, [x3, #20]
  413474:	sub	w0, w0, w2
  413478:	ret
  41347c:	nop
  413480:	mov	x12, #0x1150                	// #4432
  413484:	sub	sp, sp, x12
  413488:	stp	x29, x30, [sp]
  41348c:	mov	x29, sp
  413490:	stp	x25, x26, [sp, #64]
  413494:	mov	x26, x0
  413498:	adrp	x0, 449000 <commands_started@@Base+0x170>
  41349c:	stp	x19, x20, [sp, #16]
  4134a0:	ldr	w0, [x0, #2324]
  4134a4:	str	w0, [x29, #156]
  4134a8:	stp	x21, x22, [sp, #32]
  4134ac:	ubfiz	x19, x0, #5, #32
  4134b0:	ldr	x0, [x26]
  4134b4:	stp	x23, x24, [sp, #48]
  4134b8:	stp	x27, x28, [sp, #80]
  4134bc:	str	w2, [x29, #188]
  4134c0:	str	x0, [x29, #200]
  4134c4:	str	w3, [x29, #284]
  4134c8:	cbz	w1, 414524 <stemlen_compare@@Base+0x10cc>
  4134cc:	mov	w1, #0x28                  	// #40
  4134d0:	bl	406bb0 <strchr@plt>
  4134d4:	str	x0, [x29, #200]
  4134d8:	bl	406680 <strlen@plt>
  4134dc:	mov	x1, x0
  4134e0:	mov	x0, x19
  4134e4:	mov	x19, x1
  4134e8:	str	x1, [x29, #288]
  4134ec:	bl	41ab28 <xmalloc@@Base>
  4134f0:	str	x0, [x29, #168]
  4134f4:	adrp	x1, 449000 <commands_started@@Base+0x170>
  4134f8:	adrp	x3, 449000 <commands_started@@Base+0x170>
  4134fc:	adrp	x2, 449000 <commands_started@@Base+0x170>
  413500:	str	xzr, [x29, #240]
  413504:	ldr	x1, [x1, #2312]
  413508:	str	xzr, [x29, #296]
  41350c:	ldr	w2, [x2, #2336]
  413510:	ldr	w0, [x3, #2320]
  413514:	add	x1, x19, x1
  413518:	add	x1, x1, #0x13
  41351c:	and	x1, x1, #0xfffffffffffffff0
  413520:	sub	sp, sp, x1
  413524:	mul	w0, w2, w0
  413528:	lsl	x0, x0, #5
  41352c:	bl	41ab28 <xmalloc@@Base>
  413530:	str	x0, [x29, #136]
  413534:	mov	x0, sp
  413538:	str	x0, [x29, #232]
  41353c:	adrp	x0, 449000 <commands_started@@Base+0x170>
  413540:	ldr	x27, [x0, #2304]
  413544:	cbz	x27, 414140 <stemlen_compare@@Base+0xce8>
  413548:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  41354c:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  413550:	add	x1, x1, #0x480
  413554:	add	x0, x0, #0x250
  413558:	mov	x28, x27
  41355c:	str	x26, [x29, #176]
  413560:	str	x0, [x29, #192]
  413564:	str	x1, [x29, #208]
  413568:	str	wzr, [x29, #224]
  41356c:	str	wzr, [x29, #280]
  413570:	ldr	x23, [x29, #200]
  413574:	b	41358c <stemlen_compare@@Base+0x134>
  413578:	ldr	x0, [x29, #208]
  41357c:	ldr	w0, [x0]
  413580:	tbnz	w0, #3, 413ac4 <stemlen_compare@@Base+0x66c>
  413584:	ldr	x28, [x28]
  413588:	cbz	x28, 413758 <stemlen_compare@@Base+0x300>
  41358c:	ldr	x0, [x28, #32]
  413590:	str	x0, [x29, #248]
  413594:	cbz	x0, 4135a0 <stemlen_compare@@Base+0x148>
  413598:	ldr	x0, [x28, #40]
  41359c:	cbz	x0, 413584 <stemlen_compare@@Base+0x12c>
  4135a0:	ldrb	w0, [x28, #51]
  4135a4:	cbnz	w0, 413578 <stemlen_compare@@Base+0x120>
  4135a8:	ldrh	w19, [x28, #48]
  4135ac:	cbz	w19, 413584 <stemlen_compare@@Base+0x12c>
  4135b0:	ldr	x0, [x29, #288]
  4135b4:	mov	x26, #0x0                   	// #0
  4135b8:	ldr	x21, [x28, #8]
  4135bc:	add	x0, x0, #0x1
  4135c0:	str	x0, [x29, #256]
  4135c4:	ldr	x0, [x28, #24]
  4135c8:	str	x0, [x29, #264]
  4135cc:	ldr	x0, [x29, #296]
  4135d0:	add	x0, x0, #0x1
  4135d4:	str	x0, [x29, #216]
  4135d8:	mov	x0, x26
  4135dc:	mov	x26, x28
  4135e0:	mov	x28, x0
  4135e4:	nop
  4135e8:	ldr	w0, [x29, #284]
  4135ec:	mov	w20, w28
  4135f0:	ldr	x24, [x21, x28, lsl #3]
  4135f4:	cbz	w0, 413608 <stemlen_compare@@Base+0x1b0>
  4135f8:	ldrb	w0, [x24, #1]
  4135fc:	cbnz	w0, 413608 <stemlen_compare@@Base+0x1b0>
  413600:	ldrb	w0, [x26, #50]
  413604:	cbz	w0, 413740 <stemlen_compare@@Base+0x2e8>
  413608:	ldr	x0, [x26, #16]
  41360c:	ldr	w4, [x0, x28, lsl #2]
  413610:	ldr	x0, [x29, #288]
  413614:	cmp	x4, x0
  413618:	b.hi	413740 <stemlen_compare@@Base+0x2e8>  // b.pmore
  41361c:	ldr	x0, [x29, #264]
  413620:	ldr	x22, [x0, x28, lsl #3]
  413624:	ldr	x0, [x29, #256]
  413628:	sub	x2, x22, x24
  41362c:	sub	x2, x2, #0x1
  413630:	sub	x27, x0, x4
  413634:	add	x25, x23, x2
  413638:	ldr	x0, [x29, #296]
  41363c:	cbz	x0, 413a8c <stemlen_compare@@Base+0x634>
  413640:	mov	x0, x24
  413644:	mov	w1, #0x2f                  	// #47
  413648:	str	x2, [x29, #272]
  41364c:	bl	406bb0 <strchr@plt>
  413650:	ldr	x2, [x29, #272]
  413654:	cbnz	x0, 413a8c <stemlen_compare@@Base+0x634>
  413658:	ldr	x1, [x29, #240]
  41365c:	cmp	x1, x27
  413660:	b.hi	413740 <stemlen_compare@@Base+0x2e8>  // b.pmore
  413664:	add	x25, x25, x1
  413668:	sub	x27, x27, x1
  41366c:	ldr	x1, [x29, #216]
  413670:	cmp	x1, x25
  413674:	b.cs	413690 <stemlen_compare@@Base+0x238>  // b.hs, b.nlast
  413678:	ldr	x0, [x29, #296]
  41367c:	sub	x2, x25, x0
  413680:	mov	x0, x24
  413684:	sub	x2, x2, #0x1
  413688:	bl	406930 <strncmp@plt>
  41368c:	cbnz	w0, 413740 <stemlen_compare@@Base+0x2e8>
  413690:	mov	w2, #0x1                   	// #1
  413694:	ldrb	w1, [x22]
  413698:	ldrb	w0, [x25, x27]
  41369c:	cmp	w0, w1
  4136a0:	b.ne	413740 <stemlen_compare@@Base+0x2e8>  // b.any
  4136a4:	cbz	w0, 4136ec <stemlen_compare@@Base+0x294>
  4136a8:	add	x1, x27, #0x1
  4136ac:	add	x0, x22, #0x1
  4136b0:	add	x9, x25, x1
  4136b4:	cmp	x9, x0
  4136b8:	b.eq	4136ec <stemlen_compare@@Base+0x294>  // b.none
  4136bc:	ldrb	w0, [x25, x1]
  4136c0:	ldrb	w1, [x22, #1]
  4136c4:	cmp	w0, w1
  4136c8:	b.ne	413740 <stemlen_compare@@Base+0x2e8>  // b.any
  4136cc:	cbz	w0, 4136ec <stemlen_compare@@Base+0x294>
  4136d0:	add	x1, x27, #0x2
  4136d4:	add	x0, x22, #0x2
  4136d8:	add	x1, x25, x1
  4136dc:	str	w2, [x29, #272]
  4136e0:	bl	406b40 <strcmp@plt>
  4136e4:	ldr	w2, [x29, #272]
  4136e8:	cbnz	w0, 413740 <stemlen_compare@@Base+0x2e8>
  4136ec:	ldrb	w0, [x24, #1]
  4136f0:	cmp	w0, #0x0
  4136f4:	ldr	w0, [x29, #224]
  4136f8:	csinc	w0, w0, wzr, eq  // eq = none
  4136fc:	str	w0, [x29, #224]
  413700:	ldr	x0, [x29, #248]
  413704:	cbz	x0, 413aac <stemlen_compare@@Base+0x654>
  413708:	ldr	w3, [x29, #280]
  41370c:	cmp	w2, #0x0
  413710:	ldr	x4, [x29, #136]
  413714:	ubfiz	x1, x3, #5, #32
  413718:	ldr	x5, [x29, #240]
  41371c:	add	x0, x4, x1
  413720:	str	x26, [x4, x1]
  413724:	add	w1, w3, #0x1
  413728:	add	x5, x27, x5
  41372c:	str	w1, [x29, #280]
  413730:	csel	x27, x5, x27, ne  // ne = any
  413734:	str	x27, [x0, #8]
  413738:	stp	w20, w3, [x0, #16]
  41373c:	strb	w2, [x0, #24]
  413740:	add	x28, x28, #0x1
  413744:	cmp	w19, w28
  413748:	b.hi	4135e8 <stemlen_compare@@Base+0x190>  // b.pmore
  41374c:	mov	x28, x26
  413750:	ldr	x28, [x28]
  413754:	cbnz	x28, 41358c <stemlen_compare@@Base+0x134>
  413758:	ldr	w0, [x29, #280]
  41375c:	mov	w19, #0x0                   	// #0
  413760:	ldr	x26, [x29, #176]
  413764:	cbz	w0, 414144 <stemlen_compare@@Base+0xcec>
  413768:	cmp	w0, #0x1
  41376c:	b.hi	41461c <stemlen_compare@@Base+0x11c4>  // b.pmore
  413770:	ldr	w0, [x29, #224]
  413774:	cbnz	w0, 4145b4 <stemlen_compare@@Base+0x115c>
  413778:	mov	x28, x26
  41377c:	str	xzr, [x29, #128]
  413780:	str	xzr, [x29, #160]
  413784:	str	wzr, [x29, #176]
  413788:	str	wzr, [x29, #184]
  41378c:	ldr	x0, [x29, #136]
  413790:	str	x0, [x29, #296]
  413794:	ldr	x0, [x29, #168]
  413798:	mov	x27, x28
  41379c:	str	wzr, [x29, #256]
  4137a0:	mov	x24, x0
  4137a4:	b	4137d0 <stemlen_compare@@Base+0x378>
  4137a8:	cbnz	w0, 413fb0 <stemlen_compare@@Base+0xb58>
  4137ac:	ldr	x1, [x29, #296]
  4137b0:	ldr	w0, [x29, #256]
  4137b4:	add	x1, x1, #0x20
  4137b8:	str	x1, [x29, #296]
  4137bc:	add	w0, w0, #0x1
  4137c0:	ldr	w1, [x29, #280]
  4137c4:	str	w0, [x29, #256]
  4137c8:	cmp	w1, w0
  4137cc:	b.eq	414134 <stemlen_compare@@Base+0xcdc>  // b.none
  4137d0:	ldr	x0, [x29, #296]
  4137d4:	ldr	x0, [x0]
  4137d8:	str	x0, [x29, #264]
  4137dc:	cbz	x0, 4137ac <stemlen_compare@@Base+0x354>
  4137e0:	ldr	w1, [x29, #184]
  4137e4:	cbz	w1, 4137f0 <stemlen_compare@@Base+0x398>
  4137e8:	ldrb	w0, [x0, #50]
  4137ec:	cbnz	w0, 4137ac <stemlen_compare@@Base+0x354>
  4137f0:	ldp	x0, x4, [x29, #288]
  4137f4:	ldr	x3, [x29, #264]
  4137f8:	ldr	w1, [x4, #16]
  4137fc:	add	x19, x0, #0x1
  413800:	ldr	x2, [x3, #8]
  413804:	ldr	x0, [x3, #24]
  413808:	ldr	x3, [x3, #16]
  41380c:	ldr	x0, [x0, x1, lsl #3]
  413810:	ldr	x2, [x2, x1, lsl #3]
  413814:	ldr	w1, [x3, x1, lsl #2]
  413818:	ldrb	w4, [x4, #24]
  41381c:	sub	x0, x0, x2
  413820:	sub	x19, x19, x1
  413824:	sub	x0, x0, #0x1
  413828:	ldr	x1, [x29, #200]
  41382c:	str	w4, [x29, #208]
  413830:	add	x0, x1, x0
  413834:	stp	x19, x0, [x29, #216]
  413838:	cbz	w4, 413858 <stemlen_compare@@Base+0x400>
  41383c:	ldr	x1, [x29, #240]
  413840:	add	x0, x0, x1
  413844:	str	x0, [x29, #224]
  413848:	sub	x0, x19, x1
  41384c:	str	x0, [x29, #216]
  413850:	ldr	x0, [x29, #160]
  413854:	cbz	x0, 4144f4 <stemlen_compare@@Base+0x109c>
  413858:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41385c:	cmp	x19, #0x1, lsl #12
  413860:	ldr	w0, [x0, #1152]
  413864:	and	w0, w0, #0x8
  413868:	b.hi	4137a8 <stemlen_compare@@Base+0x350>  // b.pmore
  41386c:	cbnz	w0, 4144bc <stemlen_compare@@Base+0x1064>
  413870:	ldr	w0, [x29, #208]
  413874:	cbnz	w0, 414180 <stemlen_compare@@Base+0xd28>
  413878:	ldp	x20, x1, [x29, #216]
  41387c:	add	x0, x29, #0x148
  413880:	mov	x19, x0
  413884:	str	x0, [x29, #112]
  413888:	mov	x2, x20
  41388c:	bl	406640 <memcpy@plt>
  413890:	ldr	x1, [x29, #264]
  413894:	strb	wzr, [x19, x20]
  413898:	ldr	x23, [x1, #32]
  41389c:	cbz	x23, 4141d0 <stemlen_compare@@Base+0xd78>
  4138a0:	ldr	x0, [x29, #112]
  4138a4:	str	x0, [x27, #40]
  4138a8:	mov	w0, #0x1                   	// #1
  4138ac:	strb	w0, [x1, #51]
  4138b0:	ldr	x20, [x23, #8]
  4138b4:	cbz	x20, 41459c <stemlen_compare@@Base+0x1144>
  4138b8:	ldr	w0, [x29, #208]
  4138bc:	mov	w24, #0x0                   	// #0
  4138c0:	ldr	x25, [x29, #168]
  4138c4:	cmp	w0, #0x0
  4138c8:	ldp	x1, x0, [x29, #232]
  4138cc:	mov	w19, #0x0                   	// #0
  4138d0:	str	wzr, [x29, #124]
  4138d4:	add	x0, x1, x0
  4138d8:	csel	x0, x1, x0, eq  // eq = none
  4138dc:	str	x0, [x29, #104]
  4138e0:	cbz	x20, 413970 <stemlen_compare@@Base+0x518>
  4138e4:	ldrb	w0, [x23, #33]
  4138e8:	tbz	w0, #3, 413990 <stemlen_compare@@Base+0x538>
  4138ec:	ldrb	w0, [x20]
  4138f0:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  4138f4:	add	x2, x2, #0x4c0
  4138f8:	ldrh	w1, [x2, w0, sxtw #1]
  4138fc:	tst	w1, #0x6
  413900:	b.eq	413918 <stemlen_compare@@Base+0x4c0>  // b.none
  413904:	nop
  413908:	ldrb	w0, [x20, #1]!
  41390c:	ldrh	w1, [x2, w0, sxtw #1]
  413910:	tst	w1, #0x6
  413914:	b.ne	413908 <stemlen_compare@@Base+0x4b0>  // b.any
  413918:	add	x2, x20, #0x1
  41391c:	cbz	w0, 413f74 <stemlen_compare@@Base+0xb1c>
  413920:	mov	x21, x2
  413924:	cmp	w0, #0x24
  413928:	b.eq	413d3c <stemlen_compare@@Base+0x8e4>  // b.none
  41392c:	b.hi	413af0 <stemlen_compare@@Base+0x698>  // b.pmore
  413930:	cmp	w0, #0x9
  413934:	b.eq	413940 <stemlen_compare@@Base+0x4e8>  // b.none
  413938:	and	w0, w0, #0xffffffdf
  41393c:	cbnz	w0, 413da0 <stemlen_compare@@Base+0x948>
  413940:	sub	x21, x21, #0x1
  413944:	eor	w0, w24, #0x1
  413948:	sub	x22, x21, x20
  41394c:	cmp	x22, #0x1
  413950:	csel	w0, w0, wzr, eq  // eq = none
  413954:	cbz	w0, 413b0c <stemlen_compare@@Base+0x6b4>
  413958:	ldrb	w0, [x20]
  41395c:	cmp	w0, #0x7c
  413960:	b.ne	413b0c <stemlen_compare@@Base+0x6b4>  // b.any
  413964:	mov	x20, x2
  413968:	mov	w24, #0x1                   	// #1
  41396c:	cbnz	x20, 4138e4 <stemlen_compare@@Base+0x48c>
  413970:	ldr	x23, [x23]
  413974:	cbz	x23, 414824 <stemlen_compare@@Base+0x13cc>
  413978:	ldr	x20, [x23, #8]
  41397c:	cbnz	x20, 4138e4 <stemlen_compare@@Base+0x48c>
  413980:	ldr	x0, [x23, #16]
  413984:	ldr	x20, [x0]
  413988:	ldrb	w0, [x23, #33]
  41398c:	tbnz	w0, #3, 4138ec <stemlen_compare@@Base+0x494>
  413990:	mov	x0, x20
  413994:	mov	w1, #0x25                  	// #37
  413998:	bl	406bb0 <strchr@plt>
  41399c:	str	x0, [x29, #320]
  4139a0:	mov	x21, x0
  4139a4:	cbz	x0, 414640 <stemlen_compare@@Base+0x11e8>
  4139a8:	ldr	w0, [x29, #208]
  4139ac:	cbnz	w0, 4144ac <stemlen_compare@@Base+0x1054>
  4139b0:	sub	x22, x21, x20
  4139b4:	mov	x1, x20
  4139b8:	ldr	x20, [x29, #104]
  4139bc:	mov	x2, x22
  4139c0:	mov	x0, x20
  4139c4:	bl	406640 <memcpy@plt>
  4139c8:	add	x22, x20, x22
  4139cc:	ldp	x20, x1, [x29, #216]
  4139d0:	mov	x0, x22
  4139d4:	mov	x2, x20
  4139d8:	bl	406640 <memcpy@plt>
  4139dc:	add	x0, x22, x20
  4139e0:	add	x1, x21, #0x1
  4139e4:	bl	406c30 <strcpy@plt>
  4139e8:	ldr	x5, [x29, #232]
  4139ec:	add	x0, x29, #0x140
  4139f0:	mov	w4, #0x20                  	// #32
  4139f4:	mov	x3, #0x0                   	// #0
  4139f8:	mov	w2, #0x1                   	// #1
  4139fc:	mov	x1, #0x28                  	// #40
  413a00:	str	x5, [x29, #320]
  413a04:	bl	41e790 <parse_file_seq@@Base>
  413a08:	str	x0, [x29, #272]
  413a0c:	str	x0, [x29, #312]
  413a10:	cbz	x0, 4146dc <stemlen_compare@@Base+0x1284>
  413a14:	mov	x20, x0
  413a18:	ldrb	w1, [x23, #33]
  413a1c:	add	w19, w19, #0x1
  413a20:	ldrb	w0, [x20, #33]
  413a24:	ubfx	x1, x1, #1, #1
  413a28:	bfi	w0, w1, #1, #1
  413a2c:	strb	w0, [x20, #33]
  413a30:	ldrb	w1, [x23, #33]
  413a34:	ubfx	x1, x1, #4, #1
  413a38:	bfi	w0, w1, #4, #1
  413a3c:	strb	w0, [x20, #33]
  413a40:	ldr	x20, [x20]
  413a44:	cbnz	x20, 413a18 <stemlen_compare@@Base+0x5c0>
  413a48:	ldr	w0, [x29, #156]
  413a4c:	cmp	w0, w19
  413a50:	b.cs	413c2c <stemlen_compare@@Base+0x7d4>  // b.hs, b.nlast
  413a54:	adrp	x0, 449000 <commands_started@@Base+0x170>
  413a58:	adrp	x2, 449000 <commands_started@@Base+0x170>
  413a5c:	ldr	w1, [x0, #2324]
  413a60:	ldr	x0, [x29, #168]
  413a64:	cmp	w1, w19
  413a68:	csel	w1, w1, w19, cs  // cs = hs, nlast
  413a6c:	str	w1, [x2, #2324]
  413a70:	sub	x25, x25, x0
  413a74:	str	w1, [x29, #156]
  413a78:	ubfiz	x1, x1, #5, #32
  413a7c:	bl	41ab78 <xrealloc@@Base>
  413a80:	add	x25, x0, x25
  413a84:	str	x0, [x29, #168]
  413a88:	b	413c2c <stemlen_compare@@Base+0x7d4>
  413a8c:	cmp	x23, x25
  413a90:	b.cs	413aa4 <stemlen_compare@@Base+0x64c>  // b.hs, b.nlast
  413a94:	mov	x1, x23
  413a98:	mov	x0, x24
  413a9c:	bl	406930 <strncmp@plt>
  413aa0:	cbnz	w0, 413740 <stemlen_compare@@Base+0x2e8>
  413aa4:	mov	w2, #0x0                   	// #0
  413aa8:	b	413694 <stemlen_compare@@Base+0x23c>
  413aac:	ldr	x0, [x26, #40]
  413ab0:	cbnz	x0, 413708 <stemlen_compare@@Base+0x2b0>
  413ab4:	add	x28, x28, #0x1
  413ab8:	cmp	w19, w28
  413abc:	b.hi	4135e8 <stemlen_compare@@Base+0x190>  // b.pmore
  413ac0:	b	41374c <stemlen_compare@@Base+0x2f4>
  413ac4:	ldr	w0, [x29, #188]
  413ac8:	bl	41a8e8 <print_spaces@@Base>
  413acc:	ldr	x1, [x29, #192]
  413ad0:	mov	w2, #0x5                   	// #5
  413ad4:	mov	x0, #0x0                   	// #0
  413ad8:	bl	406cd0 <dcgettext@plt>
  413adc:	bl	406d60 <printf@plt>
  413ae0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  413ae4:	ldr	x0, [x0, #440]
  413ae8:	bl	406c20 <fflush@plt>
  413aec:	b	413584 <stemlen_compare@@Base+0x12c>
  413af0:	cmp	w0, #0x7c
  413af4:	b.ne	413da0 <stemlen_compare@@Base+0x948>  // b.any
  413af8:	sub	x22, x21, x20
  413afc:	eor	w0, w24, #0x1
  413b00:	cmp	x22, #0x1
  413b04:	csel	w0, w0, wzr, eq  // eq = none
  413b08:	cbnz	w0, 413958 <stemlen_compare@@Base+0x500>
  413b0c:	mov	x1, x21
  413b10:	mov	x0, x20
  413b14:	mov	w2, #0x25                  	// #37
  413b18:	bl	41abf0 <lindex@@Base>
  413b1c:	str	x0, [x29, #320]
  413b20:	mov	x26, x0
  413b24:	cbz	x0, 414000 <stemlen_compare@@Base+0xba8>
  413b28:	sub	x28, x0, x20
  413b2c:	mov	x1, x20
  413b30:	ldr	x20, [x29, #232]
  413b34:	mov	x2, x28
  413b38:	mov	x0, x20
  413b3c:	bl	406640 <memcpy@plt>
  413b40:	ldr	w1, [x29, #208]
  413b44:	mov	x4, x20
  413b48:	add	x0, x20, x28
  413b4c:	cbz	w1, 413f80 <stemlen_compare@@Base+0xb28>
  413b50:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  413b54:	add	x1, x1, #0x2c0
  413b58:	add	x3, x0, #0x5
  413b5c:	mov	w20, #0x1                   	// #1
  413b60:	ldr	w2, [x1]
  413b64:	ldrb	w1, [x1, #4]
  413b68:	str	w2, [x4, x28]
  413b6c:	strb	w1, [x0, #4]
  413b70:	sub	x22, x22, #0x1
  413b74:	add	x1, x26, #0x1
  413b78:	sub	x22, x22, x28
  413b7c:	mov	x0, x3
  413b80:	mov	x2, x22
  413b84:	bl	406640 <memcpy@plt>
  413b88:	strb	wzr, [x0, x22]
  413b8c:	ldr	w0, [x29, #176]
  413b90:	cbz	w0, 413f98 <stemlen_compare@@Base+0xb40>
  413b94:	ldr	w0, [x29, #124]
  413b98:	cbz	w0, 4140c4 <stemlen_compare@@Base+0xc6c>
  413b9c:	ldr	x0, [x29, #232]
  413ba0:	mov	x1, x27
  413ba4:	mov	w22, #0x100                 	// #256
  413ba8:	bl	40ca18 <variable_expand_for_file@@Base>
  413bac:	str	x0, [x29, #320]
  413bb0:	ldr	x1, [x29, #160]
  413bb4:	cmp	w20, #0x0
  413bb8:	add	x20, x29, #0x138
  413bbc:	csel	x26, x1, xzr, ne  // ne = any
  413bc0:	cmp	w24, #0x0
  413bc4:	csel	w2, w24, w22, ne  // ne = any
  413bc8:	mov	x3, x26
  413bcc:	add	x0, x29, #0x140
  413bd0:	mov	w4, #0x0                   	// #0
  413bd4:	mov	x1, #0x28                  	// #40
  413bd8:	bl	41e790 <parse_file_seq@@Base>
  413bdc:	str	x0, [x20]
  413be0:	cbz	x0, 413bf8 <stemlen_compare@@Base+0x7a0>
  413be4:	cbnz	w24, 413db0 <stemlen_compare@@Base+0x958>
  413be8:	mov	x20, x0
  413bec:	add	w19, w19, #0x1
  413bf0:	ldr	x0, [x0]
  413bf4:	cbnz	x0, 413be8 <stemlen_compare@@Base+0x790>
  413bf8:	ldr	x1, [x29, #320]
  413bfc:	ldrb	w0, [x1]
  413c00:	cmp	w0, #0x7c
  413c04:	b.eq	413eac <stemlen_compare@@Base+0xa54>  // b.none
  413c08:	cbnz	w0, 413bc0 <stemlen_compare@@Base+0x768>
  413c0c:	mov	w0, #0x1                   	// #1
  413c10:	mov	x20, x21
  413c14:	str	w0, [x29, #176]
  413c18:	ldr	x0, [x29, #312]
  413c1c:	str	x0, [x29, #272]
  413c20:	ldr	w0, [x29, #156]
  413c24:	cmp	w0, w19
  413c28:	b.cc	413a54 <stemlen_compare@@Base+0x5fc>  // b.lo, b.ul, b.last
  413c2c:	ldr	x22, [x29, #272]
  413c30:	cbz	x22, 413d30 <stemlen_compare@@Base+0x8d8>
  413c34:	adrp	x26, 42b000 <_IO_stdin_used@@Base+0x20e0>
  413c38:	add	x1, x26, #0x350
  413c3c:	ldr	w26, [x29, #188]
  413c40:	mov	x21, x25
  413c44:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  413c48:	add	x0, x0, #0x330
  413c4c:	str	x20, [x29, #144]
  413c50:	str	w19, [x29, #152]
  413c54:	str	x0, [x29, #192]
  413c58:	str	x1, [x29, #248]
  413c5c:	nop
  413c60:	ldr	x19, [x23, #8]
  413c64:	mov	x25, x21
  413c68:	ldr	x28, [x22, #8]
  413c6c:	cbz	x19, 413e68 <stemlen_compare@@Base+0xa10>
  413c70:	mov	x0, x28
  413c74:	bl	40b678 <file_impossible_p@@Base>
  413c78:	cbnz	w0, 413e7c <stemlen_compare@@Base+0xa24>
  413c7c:	stp	xzr, xzr, [x21]
  413c80:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  413c84:	add	x0, x0, #0x480
  413c88:	stp	xzr, xzr, [x21, #16]
  413c8c:	ldrb	w1, [x22, #33]
  413c90:	ldr	w5, [x0]
  413c94:	ldrb	w2, [x21, #24]
  413c98:	ubfx	x0, x1, #4, #1
  413c9c:	ubfx	x1, x1, #1, #1
  413ca0:	ubfiz	w0, w0, #1, #7
  413ca4:	orr	w0, w0, w1
  413ca8:	mov	w1, w2
  413cac:	bfxil	w1, w0, #0, #2
  413cb0:	strb	w1, [x21, #24]
  413cb4:	tbnz	w5, #3, 413e04 <stemlen_compare@@Base+0x9ac>
  413cb8:	ldr	x20, [x27, #24]
  413cbc:	ldr	x19, [x22, #8]
  413cc0:	cbz	x20, 413e48 <stemlen_compare@@Base+0x9f0>
  413cc4:	add	x28, x19, #0x1
  413cc8:	b	413cd4 <stemlen_compare@@Base+0x87c>
  413ccc:	ldr	x20, [x20]
  413cd0:	cbz	x20, 413e48 <stemlen_compare@@Base+0x9f0>
  413cd4:	ldr	x0, [x20, #8]
  413cd8:	mov	x1, x0
  413cdc:	cbz	x0, 413dec <stemlen_compare@@Base+0x994>
  413ce0:	cmp	x1, x19
  413ce4:	b.eq	413d10 <stemlen_compare@@Base+0x8b8>  // b.none
  413ce8:	ldrb	w2, [x19]
  413cec:	ldrb	w1, [x1]
  413cf0:	cmp	w2, w1
  413cf4:	b.ne	413ccc <stemlen_compare@@Base+0x874>  // b.any
  413cf8:	cbz	w2, 413d10 <stemlen_compare@@Base+0x8b8>
  413cfc:	cbz	x0, 413df8 <stemlen_compare@@Base+0x9a0>
  413d00:	add	x0, x0, #0x1
  413d04:	mov	x1, x28
  413d08:	bl	406b40 <strcmp@plt>
  413d0c:	cbnz	w0, 413ccc <stemlen_compare@@Base+0x874>
  413d10:	add	x0, x21, #0x20
  413d14:	str	x19, [x21]
  413d18:	mov	x25, x0
  413d1c:	ldr	x22, [x22]
  413d20:	mov	x21, x0
  413d24:	cbnz	x22, 413c60 <stemlen_compare@@Base+0x808>
  413d28:	ldr	w19, [x29, #152]
  413d2c:	ldr	x20, [x29, #144]
  413d30:	ldr	x0, [x29, #272]
  413d34:	bl	41aee0 <free_ns_chain@@Base>
  413d38:	b	4138e0 <stemlen_compare@@Base+0x488>
  413d3c:	mov	x1, x21
  413d40:	ldrb	w0, [x21, #1]
  413d44:	ldrb	w3, [x1], #1
  413d48:	cmp	w3, #0x24
  413d4c:	b.eq	413d64 <stemlen_compare@@Base+0x90c>  // b.none
  413d50:	cmp	w3, #0x28
  413d54:	b.eq	413d6c <stemlen_compare@@Base+0x914>  // b.none
  413d58:	cmp	w3, #0x7b
  413d5c:	mov	w5, #0x7d                  	// #125
  413d60:	b.eq	413d70 <stemlen_compare@@Base+0x918>  // b.none
  413d64:	add	x21, x1, #0x1
  413d68:	b	413924 <stemlen_compare@@Base+0x4cc>
  413d6c:	mov	w5, #0x29                  	// #41
  413d70:	add	x21, x21, #0x2
  413d74:	mov	w4, #0x0                   	// #0
  413d78:	cbnz	w0, 413d90 <stemlen_compare@@Base+0x938>
  413d7c:	b	413938 <stemlen_compare@@Base+0x4e0>
  413d80:	cmp	w0, w5
  413d84:	b.eq	413f58 <stemlen_compare@@Base+0xb00>  // b.none
  413d88:	ldrb	w0, [x1, #1]!
  413d8c:	cbz	w0, 413d64 <stemlen_compare@@Base+0x90c>
  413d90:	cmp	w0, w3
  413d94:	b.ne	413d80 <stemlen_compare@@Base+0x928>  // b.any
  413d98:	add	w4, w4, #0x1
  413d9c:	b	413d88 <stemlen_compare@@Base+0x930>
  413da0:	mov	x1, x21
  413da4:	ldrb	w0, [x21]
  413da8:	add	x21, x1, #0x1
  413dac:	b	413924 <stemlen_compare@@Base+0x4cc>
  413db0:	ldrb	w1, [x0, #33]
  413db4:	mov	x20, x0
  413db8:	add	w19, w19, #0x1
  413dbc:	orr	w1, w1, #0x2
  413dc0:	strb	w1, [x0, #33]
  413dc4:	ldr	x0, [x0]
  413dc8:	cbz	x0, 413bf8 <stemlen_compare@@Base+0x7a0>
  413dcc:	ldrb	w1, [x0, #33]
  413dd0:	mov	x20, x0
  413dd4:	add	w19, w19, #0x1
  413dd8:	orr	w1, w1, #0x2
  413ddc:	strb	w1, [x0, #33]
  413de0:	ldr	x0, [x0]
  413de4:	cbnz	x0, 413db0 <stemlen_compare@@Base+0x958>
  413de8:	b	413bf8 <stemlen_compare@@Base+0x7a0>
  413dec:	ldr	x1, [x20, #16]
  413df0:	ldr	x1, [x1]
  413df4:	b	413ce0 <stemlen_compare@@Base+0x888>
  413df8:	ldr	x0, [x20, #16]
  413dfc:	ldr	x0, [x0]
  413e00:	b	413d00 <stemlen_compare@@Base+0x8a8>
  413e04:	mov	w0, w26
  413e08:	bl	41a8e8 <print_spaces@@Base>
  413e0c:	cmp	x28, x19
  413e10:	mov	w2, #0x5                   	// #5
  413e14:	b.eq	413ed8 <stemlen_compare@@Base+0xa80>  // b.none
  413e18:	ldr	x1, [x29, #248]
  413e1c:	mov	x0, #0x0                   	// #0
  413e20:	bl	406cd0 <dcgettext@plt>
  413e24:	ldr	x1, [x22, #8]
  413e28:	bl	406d60 <printf@plt>
  413e2c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  413e30:	ldr	x0, [x0, #440]
  413e34:	bl	406c20 <fflush@plt>
  413e38:	ldr	x20, [x27, #24]
  413e3c:	ldr	x19, [x22, #8]
  413e40:	cbnz	x20, 413cc4 <stemlen_compare@@Base+0x86c>
  413e44:	nop
  413e48:	mov	x0, x19
  413e4c:	bl	40ced8 <lookup_file@@Base>
  413e50:	cbz	x0, 413ee8 <stemlen_compare@@Base+0xa90>
  413e54:	add	x0, x21, #0x20
  413e58:	ldr	x1, [x22, #8]
  413e5c:	mov	x25, x0
  413e60:	str	x1, [x21]
  413e64:	b	413d1c <stemlen_compare@@Base+0x8c4>
  413e68:	ldr	x0, [x23, #16]
  413e6c:	ldr	x19, [x0]
  413e70:	mov	x0, x28
  413e74:	bl	40b678 <file_impossible_p@@Base>
  413e78:	cbz	w0, 413c7c <stemlen_compare@@Base+0x824>
  413e7c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  413e80:	mov	x24, x25
  413e84:	ldr	w0, [x0, #1152]
  413e88:	tbnz	w0, #3, 4140f8 <stemlen_compare@@Base+0xca0>
  413e8c:	ldr	x0, [x29, #296]
  413e90:	str	xzr, [x0]
  413e94:	ldr	x0, [x29, #272]
  413e98:	bl	41aee0 <free_ns_chain@@Base>
  413e9c:	ldr	x0, [x29, #264]
  413ea0:	str	xzr, [x27, #40]
  413ea4:	strb	wzr, [x0, #51]
  413ea8:	b	4137ac <stemlen_compare@@Base+0x354>
  413eac:	add	x0, x1, #0x1
  413eb0:	str	x0, [x29, #320]
  413eb4:	mov	w24, #0x1                   	// #1
  413eb8:	mov	w2, w24
  413ebc:	ldrb	w0, [x1, #1]
  413ec0:	cbnz	w0, 413bc8 <stemlen_compare@@Base+0x770>
  413ec4:	ldr	x0, [x29, #312]
  413ec8:	mov	x20, x21
  413ecc:	str	w24, [x29, #176]
  413ed0:	str	x0, [x29, #272]
  413ed4:	b	413c20 <stemlen_compare@@Base+0x7c8>
  413ed8:	ldr	x1, [x29, #192]
  413edc:	mov	x0, #0x0                   	// #0
  413ee0:	bl	406cd0 <dcgettext@plt>
  413ee4:	b	413e24 <stemlen_compare@@Base+0x9cc>
  413ee8:	ldr	x0, [x22, #8]
  413eec:	bl	40b470 <file_exists_p@@Base>
  413ef0:	cbnz	w0, 413e54 <stemlen_compare@@Base+0x9fc>
  413ef4:	ldr	x0, [x22, #8]
  413ef8:	mov	x3, #0x0                   	// #0
  413efc:	mov	x2, #0x0                   	// #0
  413f00:	mov	x1, #0x0                   	// #0
  413f04:	bl	4278c0 <vpath_search@@Base>
  413f08:	mov	x19, x0
  413f0c:	cbz	x0, 414020 <stemlen_compare@@Base+0xbc8>
  413f10:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  413f14:	add	x0, x0, #0x480
  413f18:	ldr	w0, [x0]
  413f1c:	tbz	w0, #3, 413e54 <stemlen_compare@@Base+0x9fc>
  413f20:	mov	w0, w26
  413f24:	bl	41a8e8 <print_spaces@@Base>
  413f28:	mov	w2, #0x5                   	// #5
  413f2c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  413f30:	mov	x0, #0x0                   	// #0
  413f34:	add	x1, x1, #0x378
  413f38:	bl	406cd0 <dcgettext@plt>
  413f3c:	ldr	x1, [x22, #8]
  413f40:	mov	x2, x19
  413f44:	bl	406d60 <printf@plt>
  413f48:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  413f4c:	ldr	x0, [x0, #440]
  413f50:	bl	406c20 <fflush@plt>
  413f54:	b	413e54 <stemlen_compare@@Base+0x9fc>
  413f58:	sub	w4, w4, #0x1
  413f5c:	cmn	w4, #0x1
  413f60:	b.ne	413d88 <stemlen_compare@@Base+0x930>  // b.any
  413f64:	ldrb	w0, [x1, #1]
  413f68:	add	x1, x1, #0x1
  413f6c:	add	x21, x1, #0x1
  413f70:	b	413924 <stemlen_compare@@Base+0x4cc>
  413f74:	mov	x2, #0x0                   	// #0
  413f78:	mov	x20, x2
  413f7c:	b	41396c <stemlen_compare@@Base+0x514>
  413f80:	ldr	x1, [x29, #232]
  413f84:	add	x3, x0, #0x2
  413f88:	mov	w20, #0x0                   	// #0
  413f8c:	mov	w0, #0x2a24                	// #10788
  413f90:	strh	w0, [x1, x28]
  413f94:	b	413b70 <stemlen_compare@@Base+0x718>
  413f98:	mov	w1, #0x0                   	// #0
  413f9c:	mov	x0, x27
  413fa0:	bl	426890 <initialize_file_variables@@Base>
  413fa4:	mov	x0, x27
  413fa8:	bl	409c90 <set_file_variables@@Base>
  413fac:	b	413b9c <stemlen_compare@@Base+0x744>
  413fb0:	ldr	w0, [x29, #188]
  413fb4:	bl	41a8e8 <print_spaces@@Base>
  413fb8:	mov	w2, #0x5                   	// #5
  413fbc:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  413fc0:	mov	x0, #0x0                   	// #0
  413fc4:	add	x1, x1, #0x278
  413fc8:	bl	406cd0 <dcgettext@plt>
  413fcc:	ldr	w2, [x29, #208]
  413fd0:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  413fd4:	ldr	x4, [x29, #160]
  413fd8:	cmp	w2, #0x0
  413fdc:	ldr	w2, [x29, #216]
  413fe0:	add	x1, x1, #0xed0
  413fe4:	ldr	x3, [x29, #224]
  413fe8:	csel	x1, x1, x4, eq  // eq = none
  413fec:	bl	406d60 <printf@plt>
  413ff0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  413ff4:	ldr	x0, [x0, #440]
  413ff8:	bl	406c20 <fflush@plt>
  413ffc:	b	4137ac <stemlen_compare@@Base+0x354>
  414000:	ldr	x26, [x29, #232]
  414004:	mov	x1, x20
  414008:	mov	x2, x22
  41400c:	mov	w20, #0x0                   	// #0
  414010:	mov	x0, x26
  414014:	bl	406640 <memcpy@plt>
  414018:	strb	wzr, [x26, x22]
  41401c:	b	413b8c <stemlen_compare@@Base+0x734>
  414020:	ldr	w0, [x29, #184]
  414024:	cbz	w0, 41483c <stemlen_compare@@Base+0x13e4>
  414028:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41402c:	add	x0, x0, #0x480
  414030:	ldr	w0, [x0]
  414034:	tbnz	w0, #3, 41467c <stemlen_compare@@Base+0x1224>
  414038:	ldr	x0, [x29, #128]
  41403c:	cbz	x0, 4146b4 <stemlen_compare@@Base+0x125c>
  414040:	ldr	x5, [x29, #128]
  414044:	add	w2, w26, #0x1
  414048:	ldr	w1, [x29, #284]
  41404c:	mov	x0, x5
  414050:	stp	xzr, xzr, [x5]
  414054:	add	w3, w1, #0x1
  414058:	mov	w1, #0x0                   	// #0
  41405c:	stp	xzr, xzr, [x5, #16]
  414060:	stp	xzr, xzr, [x5, #32]
  414064:	stp	xzr, xzr, [x5, #48]
  414068:	stp	xzr, xzr, [x5, #64]
  41406c:	stp	xzr, xzr, [x5, #80]
  414070:	stp	xzr, xzr, [x5, #96]
  414074:	stp	xzr, xzr, [x5, #112]
  414078:	stp	xzr, xzr, [x5, #128]
  41407c:	ldr	x4, [x22, #8]
  414080:	str	x4, [x5]
  414084:	bl	413480 <stemlen_compare@@Base+0x28>
  414088:	cbnz	w0, 414650 <stemlen_compare@@Base+0x11f8>
  41408c:	ldr	x0, [x29, #128]
  414090:	mov	x24, x25
  414094:	ldr	x0, [x0, #80]
  414098:	cbz	x0, 4140a0 <stemlen_compare@@Base+0xc48>
  41409c:	bl	425668 <free_variable_set@@Base>
  4140a0:	ldr	x0, [x29, #128]
  4140a4:	ldr	x0, [x0, #88]
  4140a8:	cbz	x0, 4140b0 <stemlen_compare@@Base+0xc58>
  4140ac:	bl	425668 <free_variable_set@@Base>
  4140b0:	ldr	x0, [x22, #8]
  4140b4:	bl	40b548 <file_impossible@@Base>
  4140b8:	ldr	x0, [x29, #272]
  4140bc:	bl	41aee0 <free_ns_chain@@Base>
  4140c0:	b	413e9c <stemlen_compare@@Base+0xa44>
  4140c4:	ldr	x1, [x27, #80]
  4140c8:	mov	x6, #0x0                   	// #0
  4140cc:	ldr	x2, [x27, #40]
  4140d0:	mov	w4, #0x0                   	// #0
  4140d4:	ldr	x5, [x1, #8]
  4140d8:	mov	w3, #0x6                   	// #6
  4140dc:	ldr	w0, [x29, #176]
  4140e0:	mov	x1, #0x1                   	// #1
  4140e4:	str	w0, [x29, #124]
  4140e8:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  4140ec:	add	x0, x0, #0x118
  4140f0:	bl	4253c8 <define_variable_in_set@@Base>
  4140f4:	b	413b9c <stemlen_compare@@Base+0x744>
  4140f8:	ldr	w0, [x29, #188]
  4140fc:	bl	41a8e8 <print_spaces@@Base>
  414100:	cmp	x28, x19
  414104:	b.eq	4146c4 <stemlen_compare@@Base+0x126c>  // b.none
  414108:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  41410c:	mov	w2, #0x5                   	// #5
  414110:	add	x1, x1, #0x2f8
  414114:	mov	x0, #0x0                   	// #0
  414118:	bl	406cd0 <dcgettext@plt>
  41411c:	ldr	x1, [x22, #8]
  414120:	bl	406d60 <printf@plt>
  414124:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  414128:	ldr	x0, [x0, #440]
  41412c:	bl	406c20 <fflush@plt>
  414130:	b	413e8c <stemlen_compare@@Base+0xa34>
  414134:	mov	x28, x27
  414138:	ldr	w0, [x29, #184]
  41413c:	cbz	w0, 4145a8 <stemlen_compare@@Base+0x1150>
  414140:	mov	w19, #0x0                   	// #0
  414144:	ldr	x0, [x29, #136]
  414148:	bl	406b90 <free@plt>
  41414c:	ldr	x0, [x29, #168]
  414150:	bl	406b90 <free@plt>
  414154:	mov	sp, x29
  414158:	mov	w0, w19
  41415c:	mov	x12, #0x1150                	// #4432
  414160:	ldp	x29, x30, [sp]
  414164:	ldp	x19, x20, [sp, #16]
  414168:	ldp	x21, x22, [sp, #32]
  41416c:	ldp	x23, x24, [sp, #48]
  414170:	ldp	x25, x26, [sp, #64]
  414174:	ldp	x27, x28, [sp, #80]
  414178:	add	sp, sp, x12
  41417c:	ret
  414180:	ldr	x1, [x29, #200]
  414184:	add	x0, x29, #0x148
  414188:	ldr	x20, [x29, #240]
  41418c:	mov	x19, x0
  414190:	str	x0, [x29, #112]
  414194:	mov	x2, x20
  414198:	bl	406640 <memcpy@plt>
  41419c:	ldp	x21, x1, [x29, #216]
  4141a0:	add	x0, x19, x20
  4141a4:	mov	x2, x21
  4141a8:	bl	406640 <memcpy@plt>
  4141ac:	mov	x0, #0x1150                	// #4432
  4141b0:	add	x0, x29, x0
  4141b4:	add	x0, x0, x20
  4141b8:	add	x0, x0, x21
  4141bc:	sub	x0, x0, #0x2, lsl #12
  4141c0:	ldr	x1, [x29, #264]
  4141c4:	strb	wzr, [x0, #4088]
  4141c8:	ldr	x23, [x1, #32]
  4141cc:	cbnz	x23, 4138a0 <stemlen_compare@@Base+0x448>
  4141d0:	mov	x28, x27
  4141d4:	ldr	w1, [x29, #256]
  4141d8:	ldr	w0, [x29, #280]
  4141dc:	cmp	w0, w1
  4141e0:	b.ls	414138 <stemlen_compare@@Base+0xce0>  // b.plast
  4141e4:	ldr	w0, [x29, #284]
  4141e8:	mov	x26, x28
  4141ec:	cbz	w0, 414208 <stemlen_compare@@Base+0xdb0>
  4141f0:	ldr	x0, [x29, #296]
  4141f4:	ldr	w1, [x0, #16]
  4141f8:	ldr	x0, [x29, #264]
  4141fc:	ldr	x0, [x0, #8]
  414200:	ldr	x0, [x0, x1, lsl #3]
  414204:	str	x0, [x28]
  414208:	ldr	x1, [x29, #168]
  41420c:	sub	x19, x24, #0x20
  414210:	cmp	x1, x24
  414214:	b.cs	414318 <stemlen_compare@@Base+0xec0>  // b.hs, b.nlast
  414218:	sub	x23, x24, #0x1
  41421c:	mov	w21, #0xb6ff                	// #46847
  414220:	sub	x23, x23, x1
  414224:	ldr	w25, [x29, #284]
  414228:	mov	w22, #0x4900                	// #18688
  41422c:	movk	w21, #0xfffb, lsl #16
  414230:	neg	x23, x23, lsr #5
  414234:	mov	w20, #0x12                  	// #18
  414238:	ldr	x27, [x29, #296]
  41423c:	add	x23, x24, x23, lsl #5
  414240:	sub	x23, x23, #0x40
  414244:	b	41426c <stemlen_compare@@Base+0xe14>
  414248:	str	x0, [x24, #8]
  41424c:	ldr	x0, [x19, #16]
  414250:	cbz	x0, 4142e0 <stemlen_compare@@Base+0xe88>
  414254:	ldr	x0, [x26, #24]
  414258:	str	x0, [x24]
  41425c:	str	x24, [x26, #24]
  414260:	sub	x19, x19, #0x20
  414264:	cmp	x19, x23
  414268:	b.eq	414318 <stemlen_compare@@Base+0xec0>  // b.none
  41426c:	ldr	x28, [x19, #16]
  414270:	cbnz	x28, 41470c <stemlen_compare@@Base+0x12b4>
  414274:	mov	x0, #0x28                  	// #40
  414278:	bl	41ab50 <xcalloc@@Base>
  41427c:	ldrb	w2, [x19, #24]
  414280:	mov	x24, x0
  414284:	mov	w3, #0xffffffed            	// #-19
  414288:	ubfx	x1, x2, #1, #1
  41428c:	ubfx	x0, x2, #0, #1
  414290:	ldrb	w2, [x24, #33]
  414294:	ubfiz	w0, w0, #1, #7
  414298:	ubfiz	w1, w1, #4, #4
  41429c:	orr	w1, w1, w0
  4142a0:	and	w0, w2, w3
  4142a4:	and	w1, w1, w20
  4142a8:	orr	w1, w1, w0
  4142ac:	strb	w1, [x24, #33]
  4142b0:	ldr	x0, [x19]
  4142b4:	bl	424940 <strcache_add@@Base>
  4142b8:	mov	x28, x0
  4142bc:	cbnz	w25, 414248 <stemlen_compare@@Base+0xdf0>
  4142c0:	bl	40ced8 <lookup_file@@Base>
  4142c4:	str	x0, [x24, #16]
  4142c8:	cbnz	x0, 41424c <stemlen_compare@@Base+0xdf4>
  4142cc:	mov	x0, x28
  4142d0:	bl	40cf50 <enter_file@@Base>
  4142d4:	str	x0, [x24, #16]
  4142d8:	ldr	x0, [x19, #16]
  4142dc:	cbnz	x0, 414254 <stemlen_compare@@Base+0xdfc>
  4142e0:	ldr	x0, [x27]
  4142e4:	ldrb	w0, [x0, #50]
  4142e8:	cbz	w0, 414254 <stemlen_compare@@Base+0xdfc>
  4142ec:	ldr	x0, [x24, #16]
  4142f0:	cbz	x0, 414814 <stemlen_compare@@Base+0x13bc>
  4142f4:	ldrb	w1, [x0, #137]
  4142f8:	sub	x19, x19, #0x20
  4142fc:	cmp	x19, x23
  414300:	orr	w1, w1, #0x1
  414304:	strb	w1, [x0, #137]
  414308:	ldr	x0, [x26, #24]
  41430c:	str	x0, [x24]
  414310:	str	x24, [x26, #24]
  414314:	b.ne	41426c <stemlen_compare@@Base+0xe14>  // b.any
  414318:	ldr	x0, [x29, #296]
  41431c:	ldrb	w0, [x0, #24]
  414320:	cbnz	w0, 4147c0 <stemlen_compare@@Base+0x1368>
  414324:	ldp	x1, x0, [x29, #216]
  414328:	mov	x19, x1
  41432c:	bl	424a48 <strcache_add_len@@Base>
  414330:	str	x0, [x26, #40]
  414334:	ldr	x2, [x29, #264]
  414338:	ldrb	w0, [x26, #137]
  41433c:	orr	w0, w0, #0x8
  414340:	ldr	x1, [x2, #40]
  414344:	strb	w0, [x26, #137]
  414348:	str	x1, [x26, #32]
  41434c:	ldr	x0, [x29, #296]
  414350:	ldr	w1, [x0, #16]
  414354:	ldr	x0, [x2, #8]
  414358:	ldr	x0, [x0, x1, lsl #3]
  41435c:	bl	40ced8 <lookup_file@@Base>
  414360:	cbz	x0, 414378 <stemlen_compare@@Base+0xf20>
  414364:	ldrb	w0, [x0, #136]
  414368:	tbz	w0, #5, 414378 <stemlen_compare@@Base+0xf20>
  41436c:	ldrb	w0, [x26, #136]
  414370:	orr	w0, w0, #0x20
  414374:	strb	w0, [x26, #136]
  414378:	ldr	x21, [x29, #264]
  41437c:	ldrh	w1, [x21, #48]
  414380:	cmp	w1, #0x1
  414384:	b.ls	4144a4 <stemlen_compare@@Base+0x104c>  // b.plast
  414388:	ldr	x24, [x29, #296]
  41438c:	add	x22, x19, #0x1
  414390:	mov	x20, #0x0                   	// #0
  414394:	ldr	w2, [x24, #16]
  414398:	mov	x0, #0x28                  	// #40
  41439c:	cmp	w2, w20
  4143a0:	b.eq	414498 <stemlen_compare@@Base+0x1040>  // b.none
  4143a4:	ldr	x1, [x21, #16]
  4143a8:	ldr	w1, [x1, x20, lsl #2]
  4143ac:	add	x1, x1, x22
  4143b0:	add	x1, x1, #0xf
  4143b4:	and	x1, x1, #0xfffffffffffffff0
  4143b8:	sub	sp, sp, x1
  4143bc:	mov	x25, sp
  4143c0:	bl	41ab50 <xcalloc@@Base>
  4143c4:	mov	x23, x0
  4143c8:	ldr	x1, [x21, #8]
  4143cc:	mov	x0, x25
  4143d0:	ldr	x2, [x21, #24]
  4143d4:	ldr	x1, [x1, x20, lsl #3]
  4143d8:	ldr	x2, [x2, x20, lsl #3]
  4143dc:	sub	x2, x2, x1
  4143e0:	sub	x2, x2, #0x1
  4143e4:	bl	406640 <memcpy@plt>
  4143e8:	ldr	x0, [x21, #8]
  4143ec:	mov	x2, x19
  4143f0:	ldr	x1, [x21, #24]
  4143f4:	ldr	x0, [x0, x20, lsl #3]
  4143f8:	ldr	x3, [x1, x20, lsl #3]
  4143fc:	ldr	x1, [x26, #40]
  414400:	sub	x3, x3, x0
  414404:	sub	x3, x3, #0x1
  414408:	add	x3, x25, x3
  41440c:	mov	x0, x3
  414410:	bl	406640 <memcpy@plt>
  414414:	add	x0, x0, x19
  414418:	ldp	x2, x3, [x21, #8]
  41441c:	ldr	x1, [x21, #24]
  414420:	ldr	x2, [x2, x20, lsl #3]
  414424:	ldr	x1, [x1, x20, lsl #3]
  414428:	ldr	w3, [x3, x20, lsl #2]
  41442c:	sub	x2, x1, x2
  414430:	sub	x2, x3, x2
  414434:	add	x2, x2, #0x1
  414438:	bl	406640 <memcpy@plt>
  41443c:	mov	x0, x25
  414440:	bl	424940 <strcache_add@@Base>
  414444:	str	x0, [x23, #8]
  414448:	bl	40cf50 <enter_file@@Base>
  41444c:	ldr	x1, [x21, #8]
  414450:	str	x0, [x23, #16]
  414454:	ldr	x0, [x26, #48]
  414458:	str	x0, [x23]
  41445c:	ldr	x0, [x1, x20, lsl #3]
  414460:	bl	40ced8 <lookup_file@@Base>
  414464:	mov	x1, x0
  414468:	ldr	x0, [x23, #16]
  41446c:	cbz	x1, 414484 <stemlen_compare@@Base+0x102c>
  414470:	ldrb	w1, [x1, #136]
  414474:	tbz	w1, #5, 414484 <stemlen_compare@@Base+0x102c>
  414478:	ldrb	w1, [x0, #136]
  41447c:	orr	w1, w1, #0x20
  414480:	strb	w1, [x0, #136]
  414484:	ldrb	w1, [x0, #137]
  414488:	orr	w1, w1, #0x8
  41448c:	strb	w1, [x0, #137]
  414490:	ldrh	w1, [x21, #48]
  414494:	str	x23, [x26, #48]
  414498:	add	x20, x20, #0x1
  41449c:	cmp	w1, w20
  4144a0:	b.hi	414394 <stemlen_compare@@Base+0xf3c>  // b.pmore
  4144a4:	mov	w19, #0x1                   	// #1
  4144a8:	b	414144 <stemlen_compare@@Base+0xcec>
  4144ac:	ldp	x0, x2, [x29, #232]
  4144b0:	ldr	x1, [x29, #200]
  4144b4:	bl	406640 <memcpy@plt>
  4144b8:	b	4139b0 <stemlen_compare@@Base+0x558>
  4144bc:	ldr	w0, [x29, #188]
  4144c0:	bl	41a8e8 <print_spaces@@Base>
  4144c4:	mov	w2, #0x5                   	// #5
  4144c8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4144cc:	mov	x0, #0x0                   	// #0
  4144d0:	add	x1, x1, #0x298
  4144d4:	bl	406cd0 <dcgettext@plt>
  4144d8:	ldr	w1, [x29, #216]
  4144dc:	ldr	x2, [x29, #224]
  4144e0:	bl	406d60 <printf@plt>
  4144e4:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4144e8:	ldr	x0, [x0, #440]
  4144ec:	bl	406c20 <fflush@plt>
  4144f0:	b	413870 <stemlen_compare@@Base+0x418>
  4144f4:	add	x0, x1, #0x10
  4144f8:	mov	x20, x1
  4144fc:	and	x0, x0, #0xfffffffffffffff0
  414500:	mov	x2, x1
  414504:	sub	sp, sp, x0
  414508:	mov	x0, sp
  41450c:	str	x0, [x29, #160]
  414510:	ldr	x1, [x29, #200]
  414514:	mov	x21, x0
  414518:	bl	406640 <memcpy@plt>
  41451c:	strb	wzr, [x21, x20]
  414520:	b	413858 <stemlen_compare@@Base+0x400>
  414524:	mov	x20, x0
  414528:	bl	406680 <strlen@plt>
  41452c:	mov	x1, x0
  414530:	mov	x0, x19
  414534:	mov	x19, x1
  414538:	str	x1, [x29, #288]
  41453c:	bl	41ab28 <xmalloc@@Base>
  414540:	str	x0, [x29, #168]
  414544:	adrp	x1, 449000 <commands_started@@Base+0x170>
  414548:	adrp	x3, 449000 <commands_started@@Base+0x170>
  41454c:	adrp	x2, 449000 <commands_started@@Base+0x170>
  414550:	ldr	x1, [x1, #2312]
  414554:	ldr	w2, [x2, #2336]
  414558:	ldr	w0, [x3, #2320]
  41455c:	add	x1, x19, x1
  414560:	add	x1, x1, #0x13
  414564:	and	x1, x1, #0xfffffffffffffff0
  414568:	sub	sp, sp, x1
  41456c:	mul	w0, w2, w0
  414570:	lsl	x0, x0, #5
  414574:	bl	41ab28 <xmalloc@@Base>
  414578:	mov	x1, sp
  41457c:	str	x0, [x29, #136]
  414580:	mov	x0, x20
  414584:	str	x1, [x29, #232]
  414588:	bl	408bd0 <ar_name@@Base>
  41458c:	cbz	w0, 4146e4 <stemlen_compare@@Base+0x128c>
  414590:	str	xzr, [x29, #240]
  414594:	str	xzr, [x29, #296]
  414598:	b	41353c <stemlen_compare@@Base+0xe4>
  41459c:	ldr	x0, [x23, #16]
  4145a0:	ldr	x20, [x0]
  4145a4:	b	4138b8 <stemlen_compare@@Base+0x460>
  4145a8:	mov	w0, #0x1                   	// #1
  4145ac:	str	w0, [x29, #184]
  4145b0:	b	41378c <stemlen_compare@@Base+0x334>
  4145b4:	ldr	x1, [x29, #136]
  4145b8:	mov	w2, #0x20                  	// #32
  4145bc:	ldr	w0, [x29, #280]
  4145c0:	sub	w5, w0, #0x1
  4145c4:	add	x0, x1, #0x20
  4145c8:	umaddl	x5, w5, w2, x0
  4145cc:	b	4145dc <stemlen_compare@@Base+0x1184>
  4145d0:	add	x1, x1, #0x20
  4145d4:	cmp	x5, x1
  4145d8:	b.eq	413778 <stemlen_compare@@Base+0x320>  // b.none
  4145dc:	ldr	x0, [x1]
  4145e0:	ldrb	w2, [x0, #50]
  4145e4:	cbnz	w2, 4145d0 <stemlen_compare@@Base+0x1178>
  4145e8:	ldrh	w3, [x0, #48]
  4145ec:	cbz	w3, 4145d0 <stemlen_compare@@Base+0x1178>
  4145f0:	ldr	x4, [x0, #8]
  4145f4:	mov	x0, #0x0                   	// #0
  4145f8:	b	414600 <stemlen_compare@@Base+0x11a8>
  4145fc:	b.ls	4145d0 <stemlen_compare@@Base+0x1178>  // b.plast
  414600:	ldr	x2, [x4, x0, lsl #3]
  414604:	add	x0, x0, #0x1
  414608:	cmp	w3, w0
  41460c:	ldrb	w2, [x2, #1]
  414610:	cbnz	w2, 4145fc <stemlen_compare@@Base+0x11a4>
  414614:	str	xzr, [x1]
  414618:	b	4145d0 <stemlen_compare@@Base+0x1178>
  41461c:	mov	w1, w0
  414620:	adrp	x3, 413000 <hash_print_stats@@Base+0xc0>
  414624:	ldr	x0, [x29, #136]
  414628:	add	x3, x3, #0x458
  41462c:	mov	x2, #0x20                  	// #32
  414630:	bl	4067b0 <qsort@plt>
  414634:	ldr	w0, [x29, #224]
  414638:	cbz	w0, 413778 <stemlen_compare@@Base+0x320>
  41463c:	b	4145b4 <stemlen_compare@@Base+0x115c>
  414640:	ldr	x0, [x29, #232]
  414644:	mov	x1, x20
  414648:	bl	406c30 <strcpy@plt>
  41464c:	b	4139e8 <stemlen_compare@@Base+0x590>
  414650:	ldr	x2, [x29, #128]
  414654:	str	xzr, [x29, #128]
  414658:	ldr	x0, [x2]
  41465c:	str	x0, [x21, #8]
  414660:	add	x0, x21, #0x20
  414664:	ldr	x1, [x22, #8]
  414668:	str	x1, [x2]
  41466c:	mov	x25, x0
  414670:	str	x1, [x21]
  414674:	str	x2, [x21, #16]
  414678:	b	413d1c <stemlen_compare@@Base+0x8c4>
  41467c:	mov	w0, w26
  414680:	bl	41a8e8 <print_spaces@@Base>
  414684:	mov	w2, #0x5                   	// #5
  414688:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  41468c:	mov	x0, #0x0                   	// #0
  414690:	add	x1, x1, #0x3a0
  414694:	bl	406cd0 <dcgettext@plt>
  414698:	ldr	x1, [x22, #8]
  41469c:	bl	406d60 <printf@plt>
  4146a0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4146a4:	ldr	x0, [x0, #440]
  4146a8:	bl	406c20 <fflush@plt>
  4146ac:	ldr	x0, [x29, #128]
  4146b0:	cbnz	x0, 414040 <stemlen_compare@@Base+0xbe8>
  4146b4:	sub	sp, sp, #0x90
  4146b8:	mov	x0, sp
  4146bc:	str	x0, [x29, #128]
  4146c0:	b	414040 <stemlen_compare@@Base+0xbe8>
  4146c4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4146c8:	mov	w2, #0x5                   	// #5
  4146cc:	add	x1, x1, #0x2c8
  4146d0:	mov	x0, #0x0                   	// #0
  4146d4:	bl	406cd0 <dcgettext@plt>
  4146d8:	b	41411c <stemlen_compare@@Base+0xcc4>
  4146dc:	mov	x20, #0x0                   	// #0
  4146e0:	b	413c20 <stemlen_compare@@Base+0x7c8>
  4146e4:	sub	x2, x19, #0x1
  4146e8:	mov	x0, x20
  4146ec:	mov	w1, #0x2f                  	// #47
  4146f0:	bl	406bd0 <memrchr@plt>
  4146f4:	cmp	x0, #0x0
  4146f8:	str	x0, [x29, #296]
  4146fc:	sub	x0, x0, x20
  414700:	csinc	x0, xzr, x0, eq  // eq = none
  414704:	str	x0, [x29, #240]
  414708:	b	41353c <stemlen_compare@@Base+0xe4>
  41470c:	ldr	x0, [x28]
  414710:	bl	40ced8 <lookup_file@@Base>
  414714:	mov	x24, x0
  414718:	cbz	x0, 414804 <stemlen_compare@@Base+0x13ac>
  41471c:	ldrb	w0, [x0, #137]
  414720:	orr	w0, w0, #0xffffff80
  414724:	strb	w0, [x24, #137]
  414728:	ldur	q0, [x28, #24]
  41472c:	ldr	w0, [x24, #136]
  414730:	stur	q0, [x24, #24]
  414734:	and	w1, w0, w21
  414738:	ldr	q0, [x28, #80]
  41473c:	ldp	x0, x2, [x28, #40]
  414740:	str	x0, [x24, #40]
  414744:	str	q0, [x24, #80]
  414748:	ldrb	w0, [x28, #138]
  41474c:	str	x2, [x24, #48]
  414750:	ubfx	x0, x0, #2, #1
  414754:	orr	w0, w22, w0, lsl #18
  414758:	orr	w0, w0, w1
  41475c:	str	w0, [x24, #136]
  414760:	ldr	x0, [x19, #8]
  414764:	bl	40ced8 <lookup_file@@Base>
  414768:	cbz	x0, 414780 <stemlen_compare@@Base+0x1328>
  41476c:	ldrb	w0, [x0, #136]
  414770:	tbz	w0, #5, 414780 <stemlen_compare@@Base+0x1328>
  414774:	ldrb	w0, [x24, #136]
  414778:	orr	w0, w0, #0x20
  41477c:	strb	w0, [x24, #136]
  414780:	ldr	x24, [x24, #24]
  414784:	cbz	x24, 414274 <stemlen_compare@@Base+0xe1c>
  414788:	ldr	x0, [x24, #8]
  41478c:	bl	40cf50 <enter_file@@Base>
  414790:	ldrb	w1, [x0, #137]
  414794:	ldrb	w2, [x24, #33]
  414798:	mov	w3, w1
  41479c:	stp	xzr, x0, [x24, #8]
  4147a0:	ubfx	x1, x1, #0, #1
  4147a4:	ubfx	x2, x2, #0, #1
  4147a8:	orr	w1, w1, w2
  4147ac:	bfxil	w3, w1, #0, #1
  4147b0:	strb	w3, [x0, #137]
  4147b4:	ldr	x24, [x24]
  4147b8:	cbnz	x24, 414788 <stemlen_compare@@Base+0x1330>
  4147bc:	b	414274 <stemlen_compare@@Base+0xe1c>
  4147c0:	ldr	x1, [x29, #200]
  4147c4:	ldr	x20, [x29, #112]
  4147c8:	ldr	x21, [x29, #240]
  4147cc:	mov	x0, x20
  4147d0:	ldr	x22, [x29, #216]
  4147d4:	mov	x2, x21
  4147d8:	bl	406640 <memcpy@plt>
  4147dc:	ldr	x1, [x29, #224]
  4147e0:	mov	x2, x22
  4147e4:	add	x19, x21, x22
  4147e8:	add	x0, x20, x21
  4147ec:	bl	406640 <memcpy@plt>
  4147f0:	mov	x0, x20
  4147f4:	strb	wzr, [x20, x19]
  4147f8:	bl	424940 <strcache_add@@Base>
  4147fc:	str	x0, [x26, #40]
  414800:	b	414334 <stemlen_compare@@Base+0xedc>
  414804:	ldr	x0, [x28]
  414808:	bl	40cf50 <enter_file@@Base>
  41480c:	mov	x24, x0
  414810:	b	414728 <stemlen_compare@@Base+0x12d0>
  414814:	ldrb	w0, [x24, #33]
  414818:	orr	w0, w0, #0x1
  41481c:	strb	w0, [x24, #33]
  414820:	b	414254 <stemlen_compare@@Base+0xdfc>
  414824:	ldr	x0, [x29, #264]
  414828:	str	xzr, [x27, #40]
  41482c:	mov	x28, x27
  414830:	mov	x24, x25
  414834:	strb	wzr, [x0, #51]
  414838:	b	4141d4 <stemlen_compare@@Base+0xd7c>
  41483c:	ldr	x0, [x29, #272]
  414840:	mov	x24, x25
  414844:	bl	41aee0 <free_ns_chain@@Base>
  414848:	b	413e9c <stemlen_compare@@Base+0xa44>
  41484c:	nop

0000000000414850 <try_implicit_rule@@Base>:
  414850:	stp	x29, x30, [sp, #-48]!
  414854:	mov	x29, sp
  414858:	str	x21, [sp, #32]
  41485c:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  414860:	stp	x19, x20, [sp, #16]
  414864:	mov	x19, x0
  414868:	ldr	w0, [x21, #1152]
  41486c:	mov	w20, w1
  414870:	tbnz	w0, #3, 4148e4 <try_implicit_rule@@Base+0x94>
  414874:	mov	w1, #0x0                   	// #0
  414878:	mov	w2, w20
  41487c:	mov	x0, x19
  414880:	mov	w3, #0x0                   	// #0
  414884:	bl	413480 <stemlen_compare@@Base+0x28>
  414888:	mov	w1, w0
  41488c:	mov	w0, #0x1                   	// #1
  414890:	cbz	w1, 4148a4 <try_implicit_rule@@Base+0x54>
  414894:	ldp	x19, x20, [sp, #16]
  414898:	ldr	x21, [sp, #32]
  41489c:	ldp	x29, x30, [sp], #48
  4148a0:	ret
  4148a4:	ldr	x0, [x19]
  4148a8:	bl	408bd0 <ar_name@@Base>
  4148ac:	cbz	w0, 414894 <try_implicit_rule@@Base+0x44>
  4148b0:	ldr	w0, [x21, #1152]
  4148b4:	tbnz	w0, #3, 414918 <try_implicit_rule@@Base+0xc8>
  4148b8:	mov	w2, w20
  4148bc:	mov	x0, x19
  4148c0:	mov	w3, #0x0                   	// #0
  4148c4:	mov	w1, #0x1                   	// #1
  4148c8:	bl	413480 <stemlen_compare@@Base+0x28>
  4148cc:	cmp	w0, #0x0
  4148d0:	cset	w0, ne  // ne = any
  4148d4:	ldp	x19, x20, [sp, #16]
  4148d8:	ldr	x21, [sp, #32]
  4148dc:	ldp	x29, x30, [sp], #48
  4148e0:	ret
  4148e4:	mov	w0, w1
  4148e8:	bl	41a8e8 <print_spaces@@Base>
  4148ec:	mov	w2, #0x5                   	// #5
  4148f0:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4148f4:	mov	x0, #0x0                   	// #0
  4148f8:	add	x1, x1, #0x3d8
  4148fc:	bl	406cd0 <dcgettext@plt>
  414900:	ldr	x1, [x19]
  414904:	bl	406d60 <printf@plt>
  414908:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41490c:	ldr	x0, [x0, #440]
  414910:	bl	406c20 <fflush@plt>
  414914:	b	414874 <try_implicit_rule@@Base+0x24>
  414918:	mov	w0, w20
  41491c:	bl	41a8e8 <print_spaces@@Base>
  414920:	mov	w2, #0x5                   	// #5
  414924:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  414928:	mov	x0, #0x0                   	// #0
  41492c:	add	x1, x1, #0x400
  414930:	bl	406cd0 <dcgettext@plt>
  414934:	ldr	x1, [x19]
  414938:	bl	406d60 <printf@plt>
  41493c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  414940:	ldr	x0, [x0, #440]
  414944:	bl	406c20 <fflush@plt>
  414948:	b	4148b8 <try_implicit_rule@@Base+0x68>
  41494c:	nop
  414950:	stp	x29, x30, [sp, #-112]!
  414954:	mov	x29, sp
  414958:	stp	x23, x24, [sp, #48]
  41495c:	ldr	x23, [x0, #40]
  414960:	stp	x19, x20, [sp, #16]
  414964:	mov	x19, x0
  414968:	stp	x21, x22, [sp, #32]
  41496c:	mov	w21, w2
  414970:	stp	x25, x26, [sp, #64]
  414974:	mov	w25, w1
  414978:	stp	x27, x28, [sp, #80]
  41497c:	sub	sp, sp, #0x10
  414980:	ldr	x20, [x23, #32]
  414984:	cbz	w4, 4149e8 <try_implicit_rule@@Base+0x198>
  414988:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41498c:	ldr	w0, [x0, #3380]
  414990:	cbnz	w0, 414ae4 <try_implicit_rule@@Base+0x294>
  414994:	cmp	w2, #0x0
  414998:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  41499c:	b.ne	414b84 <try_implicit_rule@@Base+0x334>  // b.any
  4149a0:	adrp	x22, 42d000 <_IO_stdin_used@@Base+0x40e0>
  4149a4:	add	x22, x22, #0xed0
  4149a8:	mov	x27, x22
  4149ac:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4149b0:	mov	w2, #0x5                   	// #5
  4149b4:	add	x1, x1, #0x438
  4149b8:	mov	x0, #0x0                   	// #0
  4149bc:	bl	406cd0 <dcgettext@plt>
  4149c0:	mov	x26, x0
  4149c4:	ldr	x24, [x20]
  4149c8:	cbnz	x24, 414a10 <try_implicit_rule@@Base+0x1c0>
  4149cc:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4149d0:	mov	w2, #0x5                   	// #5
  4149d4:	add	x1, x1, #0x448
  4149d8:	mov	x0, #0x0                   	// #0
  4149dc:	bl	406cd0 <dcgettext@plt>
  4149e0:	mov	x24, x0
  4149e4:	b	414a44 <try_implicit_rule@@Base+0x1f4>
  4149e8:	cmp	w2, #0x0
  4149ec:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  4149f0:	b.ne	414b58 <try_implicit_rule@@Base+0x308>  // b.any
  4149f4:	adrp	x27, 42d000 <_IO_stdin_used@@Base+0x40e0>
  4149f8:	add	x27, x27, #0xed0
  4149fc:	adrp	x22, 42d000 <_IO_stdin_used@@Base+0x40e0>
  414a00:	mov	x26, x27
  414a04:	add	x22, x22, #0xfc0
  414a08:	ldr	x24, [x20]
  414a0c:	cbz	x24, 4149cc <try_implicit_rule@@Base+0x17c>
  414a10:	mov	x0, x24
  414a14:	bl	406680 <strlen@plt>
  414a18:	ldp	x4, x3, [x20, #8]
  414a1c:	add	x0, x0, #0x2a
  414a20:	and	x0, x0, #0xfffffffffffffff0
  414a24:	mov	x2, x24
  414a28:	sub	sp, sp, x0
  414a2c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  414a30:	add	x24, sp, #0x10
  414a34:	add	x1, x1, #0x458
  414a38:	mov	x0, x24
  414a3c:	add	x3, x4, x3
  414a40:	bl	406730 <sprintf@plt>
  414a44:	mov	x0, x22
  414a48:	bl	406680 <strlen@plt>
  414a4c:	mov	x20, x0
  414a50:	mov	x0, x24
  414a54:	bl	406680 <strlen@plt>
  414a58:	mov	x2, x0
  414a5c:	ldr	x0, [x23]
  414a60:	str	x2, [x29, #96]
  414a64:	adrp	x28, 446000 <expanding_var@@Base+0x320>
  414a68:	add	x19, x19, #0x10
  414a6c:	bl	406680 <strlen@plt>
  414a70:	mov	x1, x0
  414a74:	mov	x0, x26
  414a78:	str	x1, [x29, #104]
  414a7c:	bl	406680 <strlen@plt>
  414a80:	ldp	x2, x1, [x29, #96]
  414a84:	ldrb	w3, [x19, #8]
  414a88:	tst	x3, #0x1
  414a8c:	add	x1, x1, x0
  414a90:	add	x20, x20, x2
  414a94:	csel	x19, x19, xzr, ne  // ne = any
  414a98:	add	x20, x1, x20
  414a9c:	str	x19, [x28, #3576]
  414aa0:	bl	420fd8 <show_goal_error@@Base>
  414aa4:	cbnz	w21, 414b04 <try_implicit_rule@@Base+0x2b4>
  414aa8:	mov	w2, #0x5                   	// #5
  414aac:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  414ab0:	mov	x0, #0x0                   	// #0
  414ab4:	add	x1, x1, #0x460
  414ab8:	bl	406cd0 <dcgettext@plt>
  414abc:	mov	x2, x0
  414ac0:	ldr	x5, [x23]
  414ac4:	mov	x7, x26
  414ac8:	mov	w6, w25
  414acc:	mov	x4, x24
  414ad0:	mov	x3, x22
  414ad4:	add	x1, x20, #0x14
  414ad8:	mov	x0, #0x0                   	// #0
  414adc:	bl	41bd88 <error@@Base>
  414ae0:	str	xzr, [x28, #3576]
  414ae4:	mov	sp, x29
  414ae8:	ldp	x19, x20, [sp, #16]
  414aec:	ldp	x21, x22, [sp, #32]
  414af0:	ldp	x23, x24, [sp, #48]
  414af4:	ldp	x25, x26, [sp, #64]
  414af8:	ldp	x27, x28, [sp, #80]
  414afc:	ldp	x29, x30, [sp], #112
  414b00:	ret
  414b04:	mov	w0, w21
  414b08:	bl	406d30 <strsignal@plt>
  414b0c:	mov	x21, x0
  414b10:	bl	406680 <strlen@plt>
  414b14:	mov	x19, x0
  414b18:	mov	x0, x27
  414b1c:	bl	406680 <strlen@plt>
  414b20:	add	x1, x19, x0
  414b24:	ldr	x5, [x23]
  414b28:	str	x26, [sp]
  414b2c:	mov	x6, x21
  414b30:	mov	x7, x27
  414b34:	add	x1, x1, x20
  414b38:	mov	x4, x24
  414b3c:	mov	x3, x22
  414b40:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x20e0>
  414b44:	mov	x0, #0x0                   	// #0
  414b48:	add	x2, x2, #0x478
  414b4c:	bl	41bd88 <error@@Base>
  414b50:	str	xzr, [x28, #3576]
  414b54:	b	414ae4 <try_implicit_rule@@Base+0x294>
  414b58:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  414b5c:	mov	w2, #0x5                   	// #5
  414b60:	add	x1, x1, #0x490
  414b64:	mov	x0, #0x0                   	// #0
  414b68:	adrp	x26, 42d000 <_IO_stdin_used@@Base+0x40e0>
  414b6c:	adrp	x22, 42d000 <_IO_stdin_used@@Base+0x40e0>
  414b70:	bl	406cd0 <dcgettext@plt>
  414b74:	add	x26, x26, #0xed0
  414b78:	mov	x27, x0
  414b7c:	add	x22, x22, #0xfc0
  414b80:	b	414a08 <try_implicit_rule@@Base+0x1b8>
  414b84:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  414b88:	mov	w2, #0x5                   	// #5
  414b8c:	add	x1, x1, #0x490
  414b90:	mov	x0, #0x0                   	// #0
  414b94:	adrp	x22, 42d000 <_IO_stdin_used@@Base+0x40e0>
  414b98:	bl	406cd0 <dcgettext@plt>
  414b9c:	add	x22, x22, #0xed0
  414ba0:	mov	x27, x0
  414ba4:	b	4149ac <try_implicit_rule@@Base+0x15c>
  414ba8:	stp	x29, x30, [sp, #-32]!
  414bac:	mov	x29, sp
  414bb0:	stp	x19, x20, [sp, #16]
  414bb4:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  414bb8:	mov	x20, x0
  414bbc:	add	x0, x0, #0x10
  414bc0:	bl	41b698 <output_close@@Base>
  414bc4:	ldr	w0, [x19, #960]
  414bc8:	cbz	w0, 414cd0 <try_implicit_rule@@Base+0x480>
  414bcc:	bl	427fc8 <jobserver_enabled@@Base>
  414bd0:	cbnz	w0, 414c70 <try_implicit_rule@@Base+0x420>
  414bd4:	ldr	w0, [x19, #960]
  414bd8:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  414bdc:	sub	w0, w0, #0x1
  414be0:	str	w0, [x19, #960]
  414be4:	ldr	w0, [x1, #520]
  414be8:	cbnz	w0, 414cc4 <try_implicit_rule@@Base+0x474>
  414bec:	ldr	x0, [x20, #56]
  414bf0:	cbz	x0, 414c30 <try_implicit_rule@@Base+0x3e0>
  414bf4:	ldr	x1, [x20, #40]
  414bf8:	ldr	x1, [x1, #32]
  414bfc:	ldrh	w1, [x1, #48]
  414c00:	cbz	w1, 414c2c <try_implicit_rule@@Base+0x3dc>
  414c04:	mov	x19, #0x0                   	// #0
  414c08:	ldr	x0, [x0, x19, lsl #3]
  414c0c:	add	x19, x19, #0x1
  414c10:	bl	406b90 <free@plt>
  414c14:	ldr	x0, [x20, #40]
  414c18:	ldr	x0, [x0, #32]
  414c1c:	ldrh	w0, [x0, #48]
  414c20:	cmp	w0, w19
  414c24:	ldr	x0, [x20, #56]
  414c28:	b.hi	414c08 <try_implicit_rule@@Base+0x3b8>  // b.pmore
  414c2c:	bl	406b90 <free@plt>
  414c30:	ldr	x19, [x20, #8]
  414c34:	cbz	x19, 414c58 <try_implicit_rule@@Base+0x408>
  414c38:	ldr	x0, [x19]
  414c3c:	cbz	x0, 414c50 <try_implicit_rule@@Base+0x400>
  414c40:	bl	406b90 <free@plt>
  414c44:	ldr	x0, [x19, #8]!
  414c48:	cbnz	x0, 414c40 <try_implicit_rule@@Base+0x3f0>
  414c4c:	ldr	x19, [x20, #8]
  414c50:	mov	x0, x19
  414c54:	bl	406b90 <free@plt>
  414c58:	ldr	x0, [x20]
  414c5c:	bl	406b90 <free@plt>
  414c60:	mov	x0, x20
  414c64:	ldp	x19, x20, [sp, #16]
  414c68:	ldp	x29, x30, [sp], #32
  414c6c:	b	406b90 <free@plt>
  414c70:	ldr	w0, [x19, #960]
  414c74:	cmp	w0, #0x1
  414c78:	b.ls	414bd8 <try_implicit_rule@@Base+0x388>  // b.plast
  414c7c:	mov	w0, #0x1                   	// #1
  414c80:	bl	428038 <jobserver_release@@Base>
  414c84:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  414c88:	ldr	w0, [x0, #1152]
  414c8c:	tbz	w0, #2, 414bd4 <try_implicit_rule@@Base+0x384>
  414c90:	mov	w2, #0x5                   	// #5
  414c94:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  414c98:	mov	x0, #0x0                   	// #0
  414c9c:	add	x1, x1, #0x4d8
  414ca0:	bl	406cd0 <dcgettext@plt>
  414ca4:	ldr	x2, [x20, #40]
  414ca8:	mov	x1, x20
  414cac:	ldr	x2, [x2]
  414cb0:	bl	406d60 <printf@plt>
  414cb4:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  414cb8:	ldr	x0, [x0, #440]
  414cbc:	bl	406c20 <fflush@plt>
  414cc0:	b	414bd4 <try_implicit_rule@@Base+0x384>
  414cc4:	ldp	x19, x20, [sp, #16]
  414cc8:	ldp	x29, x30, [sp], #32
  414ccc:	ret
  414cd0:	ldr	x0, [x20, #40]
  414cd4:	ldr	x19, [x0]
  414cd8:	mov	x0, x19
  414cdc:	bl	406680 <strlen@plt>
  414ce0:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x20e0>
  414ce4:	add	x1, x0, #0x14
  414ce8:	mov	x4, x19
  414cec:	mov	x3, x20
  414cf0:	add	x2, x2, #0x4a0
  414cf4:	mov	x0, #0x0                   	// #0
  414cf8:	bl	41c0a0 <fatal@@Base>
  414cfc:	nop
  414d00:	stp	x29, x30, [sp, #-160]!
  414d04:	mov	w0, #0x0                   	// #0
  414d08:	mov	x29, sp
  414d0c:	stp	x21, x22, [sp, #32]
  414d10:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  414d14:	ldr	d0, [x21, #192]
  414d18:	fcmpe	d0, #0.0
  414d1c:	b.mi	414f00 <try_implicit_rule@@Base+0x6b0>  // b.first
  414d20:	stp	x19, x20, [sp, #16]
  414d24:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  414d28:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  414d2c:	ldr	w19, [x20, #80]
  414d30:	stp	x23, x24, [sp, #48]
  414d34:	cmn	w19, #0x2
  414d38:	b.eq	414f0c <try_implicit_rule@@Base+0x6bc>  // b.none
  414d3c:	tbz	w19, #31, 414d54 <try_implicit_rule@@Base+0x504>
  414d40:	b	414f68 <try_implicit_rule@@Base+0x718>
  414d44:	bl	406d70 <__errno_location@plt>
  414d48:	ldr	w0, [x0]
  414d4c:	cmp	w0, #0x4
  414d50:	b.ne	414f74 <try_implicit_rule@@Base+0x724>  // b.any
  414d54:	mov	w0, w19
  414d58:	mov	w2, #0x0                   	// #0
  414d5c:	mov	x1, #0x0                   	// #0
  414d60:	bl	406800 <lseek@plt>
  414d64:	cmn	w0, #0x1
  414d68:	b.eq	414d44 <try_implicit_rule@@Base+0x4f4>  // b.none
  414d6c:	tbnz	w0, #31, 414f74 <try_implicit_rule@@Base+0x724>
  414d70:	add	x23, sp, #0x58
  414d74:	add	x24, x20, #0x50
  414d78:	b	414d90 <try_implicit_rule@@Base+0x540>
  414d7c:	bl	406d70 <__errno_location@plt>
  414d80:	ldr	w0, [x0]
  414d84:	cmp	w0, #0x4
  414d88:	b.ne	415044 <try_implicit_rule@@Base+0x7f4>  // b.any
  414d8c:	ldr	w19, [x24]
  414d90:	mov	x2, #0x40                  	// #64
  414d94:	mov	w0, w19
  414d98:	mov	x1, x23
  414d9c:	bl	406c80 <read@plt>
  414da0:	cmn	w0, #0x1
  414da4:	mov	w2, w0
  414da8:	b.eq	414d7c <try_implicit_rule@@Base+0x52c>  // b.none
  414dac:	tbnz	w0, #31, 415044 <try_implicit_rule@@Base+0x7f4>
  414db0:	mov	x0, x23
  414db4:	mov	w1, #0x20                  	// #32
  414db8:	strb	wzr, [x23, w2, sxtw]
  414dbc:	bl	406bb0 <strchr@plt>
  414dc0:	cbz	x0, 414df4 <try_implicit_rule@@Base+0x5a4>
  414dc4:	add	x0, x0, #0x1
  414dc8:	mov	w1, #0x20                  	// #32
  414dcc:	bl	406bb0 <strchr@plt>
  414dd0:	cbz	x0, 414df4 <try_implicit_rule@@Base+0x5a4>
  414dd4:	add	x0, x0, #0x1
  414dd8:	mov	w1, #0x20                  	// #32
  414ddc:	bl	406bb0 <strchr@plt>
  414de0:	cbz	x0, 414df4 <try_implicit_rule@@Base+0x5a4>
  414de4:	ldrb	w1, [x0, #1]
  414de8:	sub	w1, w1, #0x30
  414dec:	cmp	w1, #0x9
  414df0:	b.ls	415098 <try_implicit_rule@@Base+0x848>  // b.plast
  414df4:	ldr	w0, [x22, #1152]
  414df8:	str	d8, [sp, #64]
  414dfc:	tbz	w0, #2, 414e20 <try_implicit_rule@@Base+0x5d0>
  414e00:	mov	x1, x23
  414e04:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  414e08:	add	x0, x0, #0x5a0
  414e0c:	bl	406d60 <printf@plt>
  414e10:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  414e14:	ldr	x0, [x0, #440]
  414e18:	bl	406c20 <fflush@plt>
  414e1c:	nop
  414e20:	ldr	w0, [x20, #80]
  414e24:	bl	406a50 <close@plt>
  414e28:	mov	w0, #0xffffffff            	// #-1
  414e2c:	str	w0, [x20, #80]
  414e30:	bl	41afe0 <make_access@@Base>
  414e34:	mov	x0, x23
  414e38:	mov	w1, #0x1                   	// #1
  414e3c:	bl	406770 <getloadavg@plt>
  414e40:	cmp	w0, #0x1
  414e44:	b.eq	414ea0 <try_implicit_rule@@Base+0x650>  // b.none
  414e48:	add	x19, x20, #0x50
  414e4c:	bl	406d70 <__errno_location@plt>
  414e50:	mov	x20, x0
  414e54:	ldr	w0, [x0]
  414e58:	ldr	w1, [x19, #4]
  414e5c:	cmn	w1, #0x1
  414e60:	b.eq	414e6c <try_implicit_rule@@Base+0x61c>  // b.none
  414e64:	cmp	w1, w0
  414e68:	b.eq	414e98 <try_implicit_rule@@Base+0x648>  // b.none
  414e6c:	cbnz	w0, 41501c <try_implicit_rule@@Base+0x7cc>
  414e70:	mov	w2, #0x5                   	// #5
  414e74:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  414e78:	mov	x0, #0x0                   	// #0
  414e7c:	add	x1, x1, #0x5f0
  414e80:	bl	406cd0 <dcgettext@plt>
  414e84:	mov	x2, x0
  414e88:	mov	x1, #0x0                   	// #0
  414e8c:	mov	x0, #0x0                   	// #0
  414e90:	bl	41bd88 <error@@Base>
  414e94:	ldr	w0, [x20]
  414e98:	str	w0, [x19, #4]
  414e9c:	str	xzr, [sp, #88]
  414ea0:	bl	41afd8 <user_access@@Base>
  414ea4:	mov	x0, #0x0                   	// #0
  414ea8:	bl	4068c0 <time@plt>
  414eac:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  414eb0:	add	x1, x1, #0x3c0
  414eb4:	ldr	x2, [x1, #8]
  414eb8:	cmp	x2, x0
  414ebc:	b.lt	414fb0 <try_implicit_rule@@Base+0x760>  // b.tstop
  414ec0:	ldr	d0, [x1, #16]
  414ec4:	fmov	d1, #2.500000000000000000e-01
  414ec8:	ldr	d2, [x1, #24]
  414ecc:	ldr	w0, [x22, #1152]
  414ed0:	ucvtf	d0, d0
  414ed4:	fadd	d0, d0, d2
  414ed8:	ldr	d2, [x21, #192]
  414edc:	fmul	d0, d0, d1
  414ee0:	ldr	d1, [sp, #88]
  414ee4:	fadd	d8, d1, d0
  414ee8:	tbnz	w0, #2, 414ff8 <try_implicit_rule@@Base+0x7a8>
  414eec:	fcmpe	d8, d2
  414ef0:	ldr	d8, [sp, #64]
  414ef4:	ldp	x19, x20, [sp, #16]
  414ef8:	ldp	x23, x24, [sp, #48]
  414efc:	cset	w0, ge  // ge = tcont
  414f00:	ldp	x21, x22, [sp, #32]
  414f04:	ldp	x29, x30, [sp], #160
  414f08:	ret
  414f0c:	adrp	x22, 42b000 <_IO_stdin_used@@Base+0x20e0>
  414f10:	add	x19, x20, #0x50
  414f14:	add	x22, x22, #0x500
  414f18:	b	414f2c <try_implicit_rule@@Base+0x6dc>
  414f1c:	bl	406d70 <__errno_location@plt>
  414f20:	ldr	w0, [x0]
  414f24:	cmp	w0, #0x4
  414f28:	b.ne	41504c <try_implicit_rule@@Base+0x7fc>  // b.any
  414f2c:	mov	x0, x22
  414f30:	mov	w1, #0x0                   	// #0
  414f34:	bl	406900 <open@plt>
  414f38:	str	w0, [x19]
  414f3c:	cmn	w0, #0x1
  414f40:	b.eq	414f1c <try_implicit_rule@@Base+0x6cc>  // b.none
  414f44:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  414f48:	ldr	w1, [x22, #1152]
  414f4c:	and	w1, w1, #0x4
  414f50:	tbnz	w0, #31, 415050 <try_implicit_rule@@Base+0x800>
  414f54:	cbnz	w1, 415078 <try_implicit_rule@@Base+0x828>
  414f58:	bl	4286f0 <fd_noinherit@@Base>
  414f5c:	ldr	w19, [x20, #80]
  414f60:	tbz	w19, #31, 414d54 <try_implicit_rule@@Base+0x504>
  414f64:	nop
  414f68:	add	x23, sp, #0x58
  414f6c:	str	d8, [sp, #64]
  414f70:	b	414e30 <try_implicit_rule@@Base+0x5e0>
  414f74:	add	x23, sp, #0x58
  414f78:	str	d8, [sp, #64]
  414f7c:	ldr	w0, [x22, #1152]
  414f80:	tbz	w0, #2, 414e20 <try_implicit_rule@@Base+0x5d0>
  414f84:	bl	406d70 <__errno_location@plt>
  414f88:	ldr	w0, [x0]
  414f8c:	bl	406a40 <strerror@plt>
  414f90:	mov	x1, x0
  414f94:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  414f98:	add	x0, x0, #0x5c8
  414f9c:	bl	406d60 <printf@plt>
  414fa0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  414fa4:	ldr	x0, [x0, #440]
  414fa8:	bl	406c20 <fflush@plt>
  414fac:	b	414e20 <try_implicit_rule@@Base+0x5d0>
  414fb0:	movi	d0, #0x0
  414fb4:	sub	x3, x0, #0x1
  414fb8:	cmp	x2, x3
  414fbc:	fmov	d1, d0
  414fc0:	b.ne	414fdc <try_implicit_rule@@Base+0x78c>  // b.any
  414fc4:	ldr	d1, [x1, #16]
  414fc8:	fmov	d2, #2.500000000000000000e-01
  414fcc:	ucvtf	d1, d1
  414fd0:	fmul	d1, d1, d2
  414fd4:	fadd	d0, d1, d0
  414fd8:	fmul	d0, d0, d2
  414fdc:	stp	x0, xzr, [x1, #8]
  414fe0:	ldr	w0, [x22, #1152]
  414fe4:	str	d1, [x1, #24]
  414fe8:	ldr	d1, [sp, #88]
  414fec:	ldr	d2, [x21, #192]
  414ff0:	fadd	d8, d1, d0
  414ff4:	tbz	w0, #2, 414eec <try_implicit_rule@@Base+0x69c>
  414ff8:	fmov	d0, d8
  414ffc:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  415000:	add	x0, x0, #0x658
  415004:	bl	406d60 <printf@plt>
  415008:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41500c:	ldr	x0, [x0, #440]
  415010:	bl	406c20 <fflush@plt>
  415014:	ldr	d2, [x21, #192]
  415018:	b	414eec <try_implicit_rule@@Base+0x69c>
  41501c:	mov	w2, #0x5                   	// #5
  415020:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  415024:	mov	x0, #0x0                   	// #0
  415028:	add	x1, x1, #0x628
  41502c:	bl	406cd0 <dcgettext@plt>
  415030:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  415034:	add	x1, x1, #0x648
  415038:	bl	41bf78 <perror_with_name@@Base>
  41503c:	ldr	w0, [x20]
  415040:	b	414e98 <try_implicit_rule@@Base+0x648>
  415044:	str	d8, [sp, #64]
  415048:	b	414f7c <try_implicit_rule@@Base+0x72c>
  41504c:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  415050:	ldr	w0, [x22, #1152]
  415054:	tbz	w0, #2, 414f68 <try_implicit_rule@@Base+0x718>
  415058:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  41505c:	add	x0, x0, #0x510
  415060:	bl	406ae0 <puts@plt>
  415064:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  415068:	ldr	x0, [x0, #440]
  41506c:	bl	406c20 <fflush@plt>
  415070:	ldr	w19, [x20, #80]
  415074:	b	414d3c <try_implicit_rule@@Base+0x4ec>
  415078:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  41507c:	add	x0, x0, #0x538
  415080:	bl	406ae0 <puts@plt>
  415084:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  415088:	ldr	x0, [x0, #440]
  41508c:	bl	406c20 <fflush@plt>
  415090:	ldr	w0, [x19]
  415094:	b	414f58 <try_implicit_rule@@Base+0x708>
  415098:	mov	x1, #0x0                   	// #0
  41509c:	add	x0, x0, #0x1
  4150a0:	mov	w2, #0xa                   	// #10
  4150a4:	bl	406b60 <strtol@plt>
  4150a8:	ldr	w1, [x22, #1152]
  4150ac:	mov	x19, x0
  4150b0:	tbnz	w1, #2, 4150d0 <try_implicit_rule@@Base+0x880>
  4150b4:	scvtf	d0, w19
  4150b8:	ldr	d1, [x21, #192]
  4150bc:	ldp	x19, x20, [sp, #16]
  4150c0:	ldp	x23, x24, [sp, #48]
  4150c4:	fcmpe	d0, d1
  4150c8:	cset	w0, gt
  4150cc:	b	414f00 <try_implicit_rule@@Base+0x6b0>
  4150d0:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  4150d4:	ldr	d0, [x21, #192]
  4150d8:	mov	w1, w19
  4150dc:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4150e0:	ldr	w2, [x2, #964]
  4150e4:	add	x0, x0, #0x568
  4150e8:	bl	406d60 <printf@plt>
  4150ec:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4150f0:	ldr	x0, [x0, #440]
  4150f4:	bl	406c20 <fflush@plt>
  4150f8:	b	4150b4 <try_implicit_rule@@Base+0x864>
  4150fc:	nop
  415100:	stp	x29, x30, [sp, #-112]!
  415104:	adrp	x4, 446000 <expanding_var@@Base+0x320>
  415108:	mov	x29, sp
  41510c:	stp	x19, x20, [sp, #16]
  415110:	mov	x19, x0
  415114:	ldr	w0, [x4, #3380]
  415118:	stp	x23, x24, [sp, #48]
  41511c:	ldr	x23, [x19, #40]
  415120:	stp	x21, x22, [sp, #32]
  415124:	stp	x25, x26, [sp, #64]
  415128:	stp	x27, x28, [sp, #80]
  41512c:	sub	sp, sp, #0x10
  415130:	str	w1, [x29, #108]
  415134:	ldr	x25, [x23, #32]
  415138:	cbnz	w0, 415230 <try_implicit_rule@@Base+0x9e0>
  41513c:	cmp	w2, #0x0
  415140:	mov	w20, w2
  415144:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  415148:	b.ne	4152a4 <try_implicit_rule@@Base+0xa54>  // b.any
  41514c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  415150:	mov	w2, #0x5                   	// #5
  415154:	add	x1, x1, #0x438
  415158:	mov	x0, #0x0                   	// #0
  41515c:	bl	406cd0 <dcgettext@plt>
  415160:	adrp	x22, 42d000 <_IO_stdin_used@@Base+0x40e0>
  415164:	ldr	x27, [x25]
  415168:	add	x22, x22, #0xed0
  41516c:	mov	x26, x22
  415170:	mov	x21, x0
  415174:	cbz	x27, 4152e4 <try_implicit_rule@@Base+0xa94>
  415178:	mov	x0, x27
  41517c:	bl	406680 <strlen@plt>
  415180:	ldp	x5, x3, [x25, #8]
  415184:	add	x0, x0, #0x2a
  415188:	and	x0, x0, #0xfffffffffffffff0
  41518c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  415190:	sub	sp, sp, x0
  415194:	mov	x2, x27
  415198:	add	x24, sp, #0x10
  41519c:	add	x1, x1, #0x458
  4151a0:	mov	x0, x24
  4151a4:	add	x3, x5, x3
  4151a8:	bl	406730 <sprintf@plt>
  4151ac:	mov	x0, x24
  4151b0:	bl	406680 <strlen@plt>
  4151b4:	mov	x28, x0
  4151b8:	adrp	x25, 446000 <expanding_var@@Base+0x320>
  4151bc:	ldr	x0, [x23]
  4151c0:	add	x19, x19, #0x10
  4151c4:	bl	406680 <strlen@plt>
  4151c8:	mov	x27, x0
  4151cc:	mov	x0, x21
  4151d0:	bl	406680 <strlen@plt>
  4151d4:	ldrb	w1, [x19, #8]
  4151d8:	add	x27, x28, x27
  4151dc:	add	x27, x27, x0
  4151e0:	tst	x1, #0x1
  4151e4:	csel	x19, x19, xzr, ne  // ne = any
  4151e8:	str	x19, [x25, #3576]
  4151ec:	bl	420fd8 <show_goal_error@@Base>
  4151f0:	cbnz	w20, 415250 <try_implicit_rule@@Base+0xa00>
  4151f4:	mov	w2, #0x5                   	// #5
  4151f8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4151fc:	mov	x0, #0x0                   	// #0
  415200:	add	x1, x1, #0x460
  415204:	bl	406cd0 <dcgettext@plt>
  415208:	mov	x2, x0
  41520c:	ldr	w6, [x29, #108]
  415210:	mov	x7, x21
  415214:	ldr	x5, [x23]
  415218:	mov	x4, x24
  41521c:	mov	x3, x22
  415220:	add	x1, x27, #0x14
  415224:	mov	x0, #0x0                   	// #0
  415228:	bl	41bd88 <error@@Base>
  41522c:	str	xzr, [x25, #3576]
  415230:	mov	sp, x29
  415234:	ldp	x19, x20, [sp, #16]
  415238:	ldp	x21, x22, [sp, #32]
  41523c:	ldp	x23, x24, [sp, #48]
  415240:	ldp	x25, x26, [sp, #64]
  415244:	ldp	x27, x28, [sp, #80]
  415248:	ldp	x29, x30, [sp], #112
  41524c:	ret
  415250:	mov	w0, w20
  415254:	bl	406d30 <strsignal@plt>
  415258:	mov	x20, x0
  41525c:	bl	406680 <strlen@plt>
  415260:	mov	x19, x0
  415264:	mov	x0, x26
  415268:	bl	406680 <strlen@plt>
  41526c:	add	x1, x19, x0
  415270:	ldr	x5, [x23]
  415274:	str	x21, [sp]
  415278:	mov	x6, x20
  41527c:	mov	x7, x26
  415280:	add	x1, x1, x27
  415284:	mov	x4, x24
  415288:	mov	x3, x22
  41528c:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x20e0>
  415290:	mov	x0, #0x0                   	// #0
  415294:	add	x2, x2, #0x478
  415298:	bl	41bd88 <error@@Base>
  41529c:	str	xzr, [x25, #3576]
  4152a0:	b	415230 <try_implicit_rule@@Base+0x9e0>
  4152a4:	mov	w2, #0x5                   	// #5
  4152a8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4152ac:	mov	x0, #0x0                   	// #0
  4152b0:	add	x1, x1, #0x490
  4152b4:	bl	406cd0 <dcgettext@plt>
  4152b8:	mov	x26, x0
  4152bc:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4152c0:	mov	w2, #0x5                   	// #5
  4152c4:	add	x1, x1, #0x438
  4152c8:	mov	x0, #0x0                   	// #0
  4152cc:	bl	406cd0 <dcgettext@plt>
  4152d0:	adrp	x22, 42d000 <_IO_stdin_used@@Base+0x40e0>
  4152d4:	ldr	x27, [x25]
  4152d8:	add	x22, x22, #0xed0
  4152dc:	mov	x21, x0
  4152e0:	cbnz	x27, 415178 <try_implicit_rule@@Base+0x928>
  4152e4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4152e8:	mov	w2, #0x5                   	// #5
  4152ec:	add	x1, x1, #0x448
  4152f0:	mov	x0, #0x0                   	// #0
  4152f4:	bl	406cd0 <dcgettext@plt>
  4152f8:	mov	x24, x0
  4152fc:	b	4151ac <try_implicit_rule@@Base+0x95c>

0000000000415300 <is_bourne_compatible_shell@@Base>:
  415300:	stp	x29, x30, [sp, #-48]!
  415304:	mov	w1, #0x2f                  	// #47
  415308:	mov	x29, sp
  41530c:	stp	x19, x20, [sp, #16]
  415310:	str	x21, [sp, #32]
  415314:	mov	x21, x0
  415318:	bl	406a70 <strrchr@plt>
  41531c:	mov	x19, x0
  415320:	mov	w1, #0x5c                  	// #92
  415324:	mov	x0, x21
  415328:	bl	406a70 <strrchr@plt>
  41532c:	mov	x20, x0
  415330:	cmp	x19, #0x0
  415334:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  415338:	b.eq	4153ac <is_bourne_compatible_shell@@Base+0xac>  // b.none
  41533c:	cmp	x0, x19
  415340:	csel	x20, x0, x19, cs  // cs = hs, nlast
  415344:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  415348:	add	x0, x0, #0x50
  41534c:	ldrb	w2, [x20]
  415350:	mov	w3, #0x5c                  	// #92
  415354:	add	x19, x0, #0x10
  415358:	ldr	x1, [x0, #16]
  41535c:	cmp	w2, #0x2f
  415360:	ccmp	w2, w3, #0x4, ne  // ne = any
  415364:	cinc	x20, x20, eq  // eq = none
  415368:	cbnz	x1, 415378 <is_bourne_compatible_shell@@Base+0x78>
  41536c:	b	415398 <is_bourne_compatible_shell@@Base+0x98>
  415370:	ldr	x1, [x19, #8]!
  415374:	cbz	x1, 415398 <is_bourne_compatible_shell@@Base+0x98>
  415378:	mov	x0, x20
  41537c:	bl	406b40 <strcmp@plt>
  415380:	cbnz	w0, 415370 <is_bourne_compatible_shell@@Base+0x70>
  415384:	mov	w0, #0x1                   	// #1
  415388:	ldp	x19, x20, [sp, #16]
  41538c:	ldr	x21, [sp, #32]
  415390:	ldp	x29, x30, [sp], #48
  415394:	ret
  415398:	mov	w0, #0x0                   	// #0
  41539c:	ldp	x19, x20, [sp, #16]
  4153a0:	ldr	x21, [sp, #32]
  4153a4:	ldp	x29, x30, [sp], #48
  4153a8:	ret
  4153ac:	cbnz	x0, 415344 <is_bourne_compatible_shell@@Base+0x44>
  4153b0:	cmp	x19, #0x0
  4153b4:	csel	x20, x19, x21, ne  // ne = any
  4153b8:	b	415344 <is_bourne_compatible_shell@@Base+0x44>
  4153bc:	nop
  4153c0:	stp	x29, x30, [sp, #-208]!
  4153c4:	mov	x29, sp
  4153c8:	stp	x19, x20, [sp, #16]
  4153cc:	mov	x19, x2
  4153d0:	stp	x21, x22, [sp, #32]
  4153d4:	mov	x21, x3
  4153d8:	stp	x23, x24, [sp, #48]
  4153dc:	mov	x24, x0
  4153e0:	mov	x23, x4
  4153e4:	str	x1, [sp, #96]
  4153e8:	str	w5, [sp, #124]
  4153ec:	cbz	x1, 4153f4 <is_bourne_compatible_shell@@Base+0xf4>
  4153f0:	str	xzr, [x1]
  4153f4:	ldrb	w0, [x24]
  4153f8:	adrp	x7, 446000 <expanding_var@@Base+0x320>
  4153fc:	add	x22, x7, #0x4c0
  415400:	ldrh	w1, [x22, w0, sxtw #1]
  415404:	tbz	w1, #1, 415414 <is_bourne_compatible_shell@@Base+0x114>
  415408:	ldrb	w0, [x24, #1]!
  41540c:	ldrh	w1, [x22, w0, sxtw #1]
  415410:	tbnz	w1, #1, 415408 <is_bourne_compatible_shell@@Base+0x108>
  415414:	cbz	w0, 415bb0 <is_bourne_compatible_shell@@Base+0x8b0>
  415418:	stp	x25, x26, [sp, #64]
  41541c:	cbz	x21, 41583c <is_bourne_compatible_shell@@Base+0x53c>
  415420:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  415424:	add	x20, x20, #0x50
  415428:	ldr	x1, [x20, #80]
  41542c:	cbz	x19, 415830 <is_bourne_compatible_shell@@Base+0x530>
  415430:	mov	x0, x19
  415434:	bl	406b40 <strcmp@plt>
  415438:	cbnz	w0, 415490 <is_bourne_compatible_shell@@Base+0x190>
  41543c:	cbz	x23, 415464 <is_bourne_compatible_shell@@Base+0x164>
  415440:	ldrb	w0, [x23]
  415444:	cbz	w0, 415464 <is_bourne_compatible_shell@@Base+0x164>
  415448:	sub	w1, w0, #0x9
  41544c:	cmp	w0, #0x20
  415450:	and	w0, w1, #0xff
  415454:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  415458:	b.hi	415490 <is_bourne_compatible_shell@@Base+0x190>  // b.pmore
  41545c:	ldrb	w0, [x23, #1]!
  415460:	cbnz	w0, 415448 <is_bourne_compatible_shell@@Base+0x148>
  415464:	ldrb	w0, [x21]
  415468:	cmp	w0, #0x2d
  41546c:	b.ne	415490 <is_bourne_compatible_shell@@Base+0x190>  // b.any
  415470:	ldrb	w0, [x21, #1]
  415474:	cmp	w0, #0x63
  415478:	b.eq	41586c <is_bourne_compatible_shell@@Base+0x56c>  // b.none
  41547c:	cmp	w0, #0x65
  415480:	b.ne	415490 <is_bourne_compatible_shell@@Base+0x190>  // b.any
  415484:	ldrb	w0, [x21, #2]
  415488:	cmp	w0, #0x63
  41548c:	b.eq	415c94 <is_bourne_compatible_shell@@Base+0x994>  // b.none
  415490:	adrp	x25, 449000 <commands_started@@Base+0x170>
  415494:	mov	x0, x21
  415498:	bl	406680 <strlen@plt>
  41549c:	ldr	w1, [x25, #2140]
  4154a0:	mov	x23, x0
  4154a4:	cbnz	w1, 415708 <is_bourne_compatible_shell@@Base+0x408>
  4154a8:	mov	x0, x19
  4154ac:	stp	x27, x28, [sp, #80]
  4154b0:	bl	406680 <strlen@plt>
  4154b4:	mov	x28, x0
  4154b8:	mov	x0, x24
  4154bc:	str	x28, [sp, #112]
  4154c0:	bl	406680 <strlen@plt>
  4154c4:	add	x1, x23, #0x3
  4154c8:	add	x0, x28, x0
  4154cc:	add	x0, x1, x0, lsl #1
  4154d0:	bl	41ab28 <xmalloc@@Base>
  4154d4:	ldrb	w26, [x19]
  4154d8:	str	x0, [sp, #104]
  4154dc:	cbz	w26, 415950 <is_bourne_compatible_shell@@Base+0x650>
  4154e0:	adrp	x25, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4154e4:	add	x25, x25, #0x6a8
  4154e8:	mov	x28, x0
  4154ec:	mov	w1, w26
  4154f0:	mov	x0, x25
  4154f4:	bl	406bb0 <strchr@plt>
  4154f8:	add	x5, x28, #0x1
  4154fc:	add	x4, x28, #0x2
  415500:	mov	w27, #0x5c                  	// #92
  415504:	cbz	x0, 41553c <is_bourne_compatible_shell@@Base+0x23c>
  415508:	mov	x3, x28
  41550c:	strb	w27, [x3], #3
  415510:	ldrb	w0, [x19]
  415514:	strb	w0, [x28, #1]
  415518:	ldrb	w26, [x19, #1]!
  41551c:	cbz	w26, 41555c <is_bourne_compatible_shell@@Base+0x25c>
  415520:	mov	x28, x4
  415524:	mov	w1, w26
  415528:	mov	x0, x25
  41552c:	bl	406bb0 <strchr@plt>
  415530:	add	x5, x28, #0x1
  415534:	add	x4, x28, #0x2
  415538:	cbnz	x0, 415508 <is_bourne_compatible_shell@@Base+0x208>
  41553c:	strb	w26, [x28]
  415540:	ldrb	w26, [x19, #1]!
  415544:	cbz	w26, 415554 <is_bourne_compatible_shell@@Base+0x254>
  415548:	mov	x4, x5
  41554c:	mov	x28, x4
  415550:	b	415524 <is_bourne_compatible_shell@@Base+0x224>
  415554:	mov	x3, x4
  415558:	mov	x4, x5
  41555c:	mov	w19, #0x20                  	// #32
  415560:	strb	w19, [x4]
  415564:	mov	x1, x21
  415568:	mov	x0, x3
  41556c:	mov	x2, x23
  415570:	bl	406640 <memcpy@plt>
  415574:	strb	w19, [x0, x23]
  415578:	add	x3, x0, x23
  41557c:	add	x19, x3, #0x1
  415580:	ldrb	w1, [x24]
  415584:	cbz	w1, 415658 <is_bourne_compatible_shell@@Base+0x358>
  415588:	ldr	x0, [sp, #96]
  41558c:	adrp	x27, 446000 <expanding_var@@Base+0x320>
  415590:	mov	w3, #0x27                  	// #39
  415594:	add	x27, x27, #0x3c0
  415598:	cmp	x0, #0x0
  41559c:	mov	w2, #0x22                  	// #34
  4155a0:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4155a4:	cset	w25, ne  // ne = any
  4155a8:	add	x5, x0, #0x6a8
  4155ac:	mov	w4, #0x5c                  	// #92
  4155b0:	mov	w8, #0xa                   	// #10
  4155b4:	b	415604 <is_bourne_compatible_shell@@Base+0x304>
  4155b8:	ldr	w0, [x20, #88]
  4155bc:	cbz	w0, 4155e8 <is_bourne_compatible_shell@@Base+0x2e8>
  4155c0:	ldr	w0, [x27, #32]
  4155c4:	cbnz	w0, 4155e8 <is_bourne_compatible_shell@@Base+0x2e8>
  4155c8:	cmp	w1, #0x5c
  4155cc:	ccmp	w1, w3, #0x4, ne  // ne = any
  4155d0:	ccmp	w1, w2, #0x4, ne  // ne = any
  4155d4:	b.ne	4156cc <is_bourne_compatible_shell@@Base+0x3cc>  // b.any
  4155d8:	mov	x0, x19
  4155dc:	mov	x19, x21
  4155e0:	strb	w4, [x0], #2
  4155e4:	mov	x21, x0
  4155e8:	ldrb	w0, [x24]
  4155ec:	mov	x6, x24
  4155f0:	strb	w0, [x19]
  4155f4:	add	x24, x6, #0x1
  4155f8:	mov	x19, x21
  4155fc:	ldrb	w1, [x6, #1]
  415600:	cbz	w1, 415658 <is_bourne_compatible_shell@@Base+0x358>
  415604:	cmp	w25, #0x0
  415608:	ccmp	w1, #0xa, #0x0, ne  // ne = any
  41560c:	b.eq	415860 <is_bourne_compatible_shell@@Base+0x560>  // b.none
  415610:	cmp	w1, #0x5c
  415614:	add	x21, x19, #0x1
  415618:	b.ne	4155b8 <is_bourne_compatible_shell@@Base+0x2b8>  // b.any
  41561c:	ldrb	w0, [x24, #1]
  415620:	cmp	w0, #0xa
  415624:	b.ne	4155b8 <is_bourne_compatible_shell@@Base+0x2b8>  // b.any
  415628:	strb	w1, [x19]
  41562c:	ldr	w0, [x27, #32]
  415630:	cbnz	w0, 41563c <is_bourne_compatible_shell@@Base+0x33c>
  415634:	add	x21, x19, #0x2
  415638:	strb	w1, [x19, #1]
  41563c:	mov	x19, x21
  415640:	add	x6, x24, #0x1
  415644:	add	x24, x6, #0x1
  415648:	strb	w8, [x19], #1
  41564c:	ldrb	w1, [x6, #1]
  415650:	cbnz	w1, 415604 <is_bourne_compatible_shell@@Base+0x304>
  415654:	nop
  415658:	ldr	x1, [sp, #112]
  41565c:	add	x0, x23, #0x2
  415660:	add	x0, x0, x1
  415664:	ldr	x1, [sp, #104]
  415668:	add	x0, x1, x0
  41566c:	cmp	x19, x0
  415670:	b.eq	415ca0 <is_bourne_compatible_shell@@Base+0x9a0>  // b.none
  415674:	strb	wzr, [x19]
  415678:	ldr	w0, [x20, #88]
  41567c:	cbz	w0, 415d6c <is_bourne_compatible_shell@@Base+0xa6c>
  415680:	ldr	w5, [sp, #124]
  415684:	mov	x19, x1
  415688:	mov	x4, #0x0                   	// #0
  41568c:	mov	x3, #0x0                   	// #0
  415690:	mov	x2, #0x0                   	// #0
  415694:	mov	x1, #0x0                   	// #0
  415698:	mov	x0, x19
  41569c:	bl	4153c0 <is_bourne_compatible_shell@@Base+0xc0>
  4156a0:	mov	x23, x0
  4156a4:	mov	x0, x19
  4156a8:	bl	406b90 <free@plt>
  4156ac:	ldp	x25, x26, [sp, #64]
  4156b0:	ldp	x27, x28, [sp, #80]
  4156b4:	mov	x0, x23
  4156b8:	ldp	x19, x20, [sp, #16]
  4156bc:	ldp	x21, x22, [sp, #32]
  4156c0:	ldp	x23, x24, [sp, #48]
  4156c4:	ldp	x29, x30, [sp], #208
  4156c8:	ret
  4156cc:	ldrh	w0, [x22, w1, sxtw #1]
  4156d0:	tst	w0, #0x6
  4156d4:	b.ne	4155d8 <is_bourne_compatible_shell@@Base+0x2d8>  // b.any
  4156d8:	mov	x0, x5
  4156dc:	str	w4, [sp, #128]
  4156e0:	str	w8, [sp, #136]
  4156e4:	bl	406bb0 <strchr@plt>
  4156e8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4156ec:	ldr	w4, [sp, #128]
  4156f0:	ldr	w8, [sp, #136]
  4156f4:	add	x5, x1, #0x6a8
  4156f8:	mov	w3, #0x27                  	// #39
  4156fc:	mov	w2, #0x22                  	// #34
  415700:	cbnz	x0, 4155d8 <is_bourne_compatible_shell@@Base+0x2d8>
  415704:	b	4155e8 <is_bourne_compatible_shell@@Base+0x2e8>
  415708:	mov	x0, x19
  41570c:	bl	415300 <is_bourne_compatible_shell@@Base>
  415710:	cbz	w0, 4157bc <is_bourne_compatible_shell@@Base+0x4bc>
  415714:	mov	x5, x24
  415718:	mov	x3, x24
  41571c:	ldrb	w1, [x3]
  415720:	cbz	w1, 4157b8 <is_bourne_compatible_shell@@Base+0x4b8>
  415724:	sub	w0, w1, #0x2b
  415728:	ldrh	w2, [x22, w1, sxtw #1]
  41572c:	and	w0, w0, #0xfffffffd
  415730:	cmp	w1, #0x40
  415734:	and	w0, w0, #0xff
  415738:	and	w2, w2, #0x2
  41573c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  415740:	ccmp	w2, #0x0, #0x0, ne  // ne = any
  415744:	b.eq	415774 <is_bourne_compatible_shell@@Base+0x474>  // b.none
  415748:	ldrb	w1, [x3, #1]!
  41574c:	sub	w2, w1, #0x2b
  415750:	cmp	w1, #0x40
  415754:	and	w2, w2, #0xfffffffd
  415758:	ldrh	w4, [x22, w1, sxtw #1]
  41575c:	and	w2, w2, #0xff
  415760:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  415764:	and	w2, w4, #0x2
  415768:	ccmp	w2, #0x0, #0x0, ne  // ne = any
  41576c:	b.ne	415748 <is_bourne_compatible_shell@@Base+0x448>  // b.any
  415770:	cbz	w1, 4157b8 <is_bourne_compatible_shell@@Base+0x4b8>
  415774:	mov	w2, #0x0                   	// #0
  415778:	b	41579c <is_bourne_compatible_shell@@Base+0x49c>
  41577c:	cmp	w1, #0xa
  415780:	eor	w2, w2, #0x1
  415784:	cset	w0, eq  // eq = none
  415788:	tst	w2, w0
  41578c:	b.ne	41571c <is_bourne_compatible_shell@@Base+0x41c>  // b.any
  415790:	ldrb	w1, [x3]
  415794:	mov	w2, #0x0                   	// #0
  415798:	cbz	w1, 4157b8 <is_bourne_compatible_shell@@Base+0x4b8>
  41579c:	strb	w1, [x5], #1
  4157a0:	ldrb	w1, [x3], #1
  4157a4:	cmp	w1, #0x5c
  4157a8:	b.ne	41577c <is_bourne_compatible_shell@@Base+0x47c>  // b.any
  4157ac:	ldrb	w1, [x3]
  4157b0:	eor	w2, w2, #0x1
  4157b4:	cbnz	w1, 41579c <is_bourne_compatible_shell@@Base+0x49c>
  4157b8:	strb	wzr, [x5]
  4157bc:	lsr	x0, x23, #1
  4157c0:	mov	w20, #0x1                   	// #1
  4157c4:	add	x0, x0, #0x4
  4157c8:	lsl	x0, x0, #3
  4157cc:	bl	41ab28 <xmalloc@@Base>
  4157d0:	mov	x23, x0
  4157d4:	mov	x0, x19
  4157d8:	mov	x19, x23
  4157dc:	bl	41abb0 <xstrdup@@Base>
  4157e0:	str	x0, [x19], #8
  4157e4:	str	x21, [sp, #192]
  4157e8:	b	4157f8 <is_bourne_compatible_shell@@Base+0x4f8>
  4157ec:	ldr	x1, [sp, #200]
  4157f0:	bl	41abd0 <xstrndup@@Base>
  4157f4:	str	x0, [x19], #8
  4157f8:	add	w20, w20, #0x1
  4157fc:	add	x1, sp, #0xc8
  415800:	add	x0, sp, #0xc0
  415804:	bl	41ac78 <find_next_token@@Base>
  415808:	cbnz	x0, 4157ec <is_bourne_compatible_shell@@Base+0x4ec>
  41580c:	ldp	x25, x26, [sp, #64]
  415810:	str	x24, [x19]
  415814:	str	xzr, [x23, w20, sxtw #3]
  415818:	mov	x0, x23
  41581c:	ldp	x19, x20, [sp, #16]
  415820:	ldp	x21, x22, [sp, #32]
  415824:	ldp	x23, x24, [sp, #48]
  415828:	ldp	x29, x30, [sp], #208
  41582c:	ret
  415830:	mov	x19, x1
  415834:	cbnz	x23, 415440 <is_bourne_compatible_shell@@Base+0x140>
  415838:	b	415464 <is_bourne_compatible_shell@@Base+0x164>
  41583c:	adrp	x1, 449000 <commands_started@@Base+0x170>
  415840:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  415844:	adrp	x21, 42b000 <_IO_stdin_used@@Base+0x20e0>
  415848:	add	x0, x0, #0x4a0
  41584c:	ldr	w1, [x1, #2088]
  415850:	add	x21, x21, #0x698
  415854:	cmp	w1, #0x0
  415858:	csel	x21, x21, x0, ne  // ne = any
  41585c:	b	415420 <is_bourne_compatible_shell@@Base+0x120>
  415860:	ldr	x0, [sp, #96]
  415864:	str	x24, [x0]
  415868:	b	415658 <is_bourne_compatible_shell@@Base+0x358>
  41586c:	ldrb	w0, [x21, #2]
  415870:	cbnz	w0, 415490 <is_bourne_compatible_shell@@Base+0x190>
  415874:	mov	x0, x24
  415878:	stp	x27, x28, [sp, #80]
  41587c:	bl	406680 <strlen@plt>
  415880:	add	x25, x0, #0x1
  415884:	lsl	x0, x25, #3
  415888:	bl	41ab28 <xmalloc@@Base>
  41588c:	mov	x23, x0
  415890:	mov	x0, x25
  415894:	bl	41ab28 <xmalloc@@Base>
  415898:	str	x0, [sp, #168]
  41589c:	mov	x28, x0
  4158a0:	str	x0, [x23]
  4158a4:	ldrb	w1, [x24]
  4158a8:	cbz	w1, 415d30 <is_bourne_compatible_shell@@Base+0xa30>
  4158ac:	adrp	x26, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4158b0:	adrp	x27, 449000 <commands_started@@Base+0x170>
  4158b4:	add	x0, x26, #0x6a8
  4158b8:	str	x0, [sp, #128]
  4158bc:	add	x0, x27, #0x85c
  4158c0:	mov	x27, x24
  4158c4:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  4158c8:	mov	w26, #0x0                   	// #0
  4158cc:	add	x2, x2, #0x690
  4158d0:	str	x0, [sp, #136]
  4158d4:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4158d8:	add	x0, x0, #0x6a0
  4158dc:	str	wzr, [sp, #144]
  4158e0:	str	xzr, [sp, #152]
  4158e4:	stp	wzr, wzr, [sp, #160]
  4158e8:	str	x0, [sp, #176]
  4158ec:	str	x2, [sp, #184]
  4158f0:	cbz	w26, 41595c <is_bourne_compatible_shell@@Base+0x65c>
  4158f4:	cmp	w26, w1
  4158f8:	b.eq	415ac4 <is_bourne_compatible_shell@@Base+0x7c4>  // b.none
  4158fc:	cmp	w1, #0x5c
  415900:	b.eq	415af4 <is_bourne_compatible_shell@@Base+0x7f4>  // b.none
  415904:	ldr	x0, [sp, #96]
  415908:	cmp	x0, #0x0
  41590c:	ccmp	w1, #0xa, #0x0, ne  // ne = any
  415910:	b.eq	415d24 <is_bourne_compatible_shell@@Base+0xa24>  // b.none
  415914:	cmp	w26, #0x22
  415918:	b.eq	415b30 <is_bourne_compatible_shell@@Base+0x830>  // b.none
  41591c:	mov	x3, x28
  415920:	strb	w1, [x3], #1
  415924:	ldrb	w1, [x27, #1]!
  415928:	mov	x28, x3
  41592c:	cbnz	w1, 4158f0 <is_bourne_compatible_shell@@Base+0x5f0>
  415930:	adrp	x25, 449000 <commands_started@@Base+0x170>
  415934:	cbz	w26, 4159c0 <is_bourne_compatible_shell@@Base+0x6c0>
  415938:	ldr	x0, [sp, #168]
  41593c:	bl	406b90 <free@plt>
  415940:	mov	x0, x23
  415944:	bl	406b90 <free@plt>
  415948:	ldp	x27, x28, [sp, #80]
  41594c:	b	415494 <is_bourne_compatible_shell@@Base+0x194>
  415950:	mov	x4, x0
  415954:	add	x3, x0, #0x1
  415958:	b	41555c <is_bourne_compatible_shell@@Base+0x25c>
  41595c:	ldr	x0, [sp, #128]
  415960:	str	w1, [sp, #104]
  415964:	str	w1, [sp, #112]
  415968:	bl	406bb0 <strchr@plt>
  41596c:	ldr	w1, [sp, #104]
  415970:	ldr	w5, [sp, #112]
  415974:	cbnz	x0, 415b4c <is_bourne_compatible_shell@@Base+0x84c>
  415978:	ldr	x0, [sp, #136]
  41597c:	adrp	x25, 449000 <commands_started@@Base+0x170>
  415980:	ldr	w0, [x0]
  415984:	cmp	w0, #0x0
  415988:	ccmp	w1, #0xa, #0x0, ne  // ne = any
  41598c:	b.eq	415938 <is_bourne_compatible_shell@@Base+0x638>  // b.none
  415990:	cmp	w1, #0x22
  415994:	b.eq	415ab4 <is_bourne_compatible_shell@@Base+0x7b4>  // b.none
  415998:	b.ls	415a20 <is_bourne_compatible_shell@@Base+0x720>  // b.plast
  41599c:	cmp	w1, #0x3d
  4159a0:	b.eq	415b54 <is_bourne_compatible_shell@@Base+0x854>  // b.none
  4159a4:	cmp	w1, #0x5c
  4159a8:	b.ne	415aac <is_bourne_compatible_shell@@Base+0x7ac>  // b.any
  4159ac:	mov	x0, x27
  4159b0:	ldrb	w1, [x0, #1]!
  4159b4:	cmp	w1, #0xa
  4159b8:	b.eq	415be0 <is_bourne_compatible_shell@@Base+0x8e0>  // b.none
  4159bc:	cbnz	w1, 415c7c <is_bourne_compatible_shell@@Base+0x97c>
  4159c0:	ldr	w0, [sp, #144]
  4159c4:	cmp	w0, #0x0
  4159c8:	ldr	x0, [sp, #152]
  4159cc:	cset	w1, ne  // ne = any
  4159d0:	add	x0, x23, x0, lsl #3
  4159d4:	strb	wzr, [x28]
  4159d8:	ldr	x2, [x0]
  4159dc:	ldrb	w2, [x2]
  4159e0:	cmp	w2, #0x0
  4159e4:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  4159e8:	b.eq	4159fc <is_bourne_compatible_shell@@Base+0x6fc>  // b.none
  4159ec:	ldr	x0, [sp, #152]
  4159f0:	add	x0, x0, #0x1
  4159f4:	str	x0, [sp, #152]
  4159f8:	add	x0, x23, x0, lsl #3
  4159fc:	str	xzr, [x0]
  415a00:	ldr	x0, [sp, #152]
  415a04:	cmp	x0, #0x1
  415a08:	b.eq	415ccc <is_bourne_compatible_shell@@Base+0x9cc>  // b.none
  415a0c:	ldr	x0, [x23]
  415a10:	cbz	x0, 415d4c <is_bourne_compatible_shell@@Base+0xa4c>
  415a14:	ldp	x25, x26, [sp, #64]
  415a18:	ldp	x27, x28, [sp, #80]
  415a1c:	b	4156b4 <is_bourne_compatible_shell@@Base+0x3b4>
  415a20:	cmp	w1, #0xa
  415a24:	b.eq	415b88 <is_bourne_compatible_shell@@Base+0x888>  // b.none
  415a28:	cmp	w1, #0x20
  415a2c:	b.ne	415aa0 <is_bourne_compatible_shell@@Base+0x7a0>  // b.any
  415a30:	ldr	x0, [sp, #152]
  415a34:	strb	wzr, [x28], #1
  415a38:	ldp	w2, w3, [sp, #160]
  415a3c:	add	x1, x0, #0x1
  415a40:	str	x1, [sp, #152]
  415a44:	eor	w0, w2, #0x1
  415a48:	orr	w0, w3, w0
  415a4c:	str	x28, [x23, x1, lsl #3]
  415a50:	str	w0, [sp, #164]
  415a54:	eor	w4, w0, #0x1
  415a58:	ands	w26, w4, w2
  415a5c:	b.ne	415938 <is_bourne_compatible_shell@@Base+0x638>  // b.any
  415a60:	cmp	x1, #0x1
  415a64:	b.eq	415c1c <is_bourne_compatible_shell@@Base+0x91c>  // b.none
  415a68:	ldrb	w1, [x27, #1]
  415a6c:	ldrh	w0, [x22, w1, sxtw #1]
  415a70:	tbz	w0, #1, 415cb8 <is_bourne_compatible_shell@@Base+0x9b8>
  415a74:	nop
  415a78:	mov	x5, x27
  415a7c:	add	x27, x27, #0x1
  415a80:	ldrb	w1, [x27, #1]
  415a84:	ldrh	w0, [x22, w1, sxtw #1]
  415a88:	tbnz	w0, #1, 415a78 <is_bourne_compatible_shell@@Base+0x778>
  415a8c:	str	wzr, [sp, #144]
  415a90:	add	x27, x5, #0x2
  415a94:	str	wzr, [sp, #160]
  415a98:	cbnz	w1, 4158f0 <is_bourne_compatible_shell@@Base+0x5f0>
  415a9c:	b	415930 <is_bourne_compatible_shell@@Base+0x630>
  415aa0:	cmp	w1, #0x9
  415aa4:	b.eq	415a30 <is_bourne_compatible_shell@@Base+0x730>  // b.none
  415aa8:	b	41591c <is_bourne_compatible_shell@@Base+0x61c>
  415aac:	cmp	w1, #0x27
  415ab0:	b.ne	41591c <is_bourne_compatible_shell@@Base+0x61c>  // b.any
  415ab4:	ldrb	w1, [x27, #1]!
  415ab8:	mov	w26, w5
  415abc:	cbnz	w1, 4158f0 <is_bourne_compatible_shell@@Base+0x5f0>
  415ac0:	b	415930 <is_bourne_compatible_shell@@Base+0x630>
  415ac4:	ldr	x0, [x23]
  415ac8:	ldrb	w1, [x27, #1]!
  415acc:	cmp	x0, x28
  415ad0:	b.eq	415bcc <is_bourne_compatible_shell@@Base+0x8cc>  // b.none
  415ad4:	ldurb	w0, [x28, #-1]
  415ad8:	mov	w26, #0x0                   	// #0
  415adc:	cmp	w0, #0x0
  415ae0:	ldr	w0, [sp, #144]
  415ae4:	csinc	w0, w0, wzr, ne  // ne = any
  415ae8:	str	w0, [sp, #144]
  415aec:	cbnz	w1, 4158f0 <is_bourne_compatible_shell@@Base+0x5f0>
  415af0:	b	415930 <is_bourne_compatible_shell@@Base+0x630>
  415af4:	ldrb	w0, [x27, #1]
  415af8:	cmp	w0, #0xa
  415afc:	b.ne	415914 <is_bourne_compatible_shell@@Base+0x614>  // b.any
  415b00:	cmp	w26, #0x22
  415b04:	add	x0, x27, #0x2
  415b08:	b.eq	415b20 <is_bourne_compatible_shell@@Base+0x820>  // b.none
  415b0c:	mov	x5, x28
  415b10:	strb	w1, [x5], #2
  415b14:	ldrb	w1, [x27, #1]
  415b18:	strb	w1, [x28, #1]
  415b1c:	mov	x28, x5
  415b20:	ldrb	w1, [x27, #2]
  415b24:	mov	x27, x0
  415b28:	cbnz	w1, 4158f0 <is_bourne_compatible_shell@@Base+0x5f0>
  415b2c:	b	415930 <is_bourne_compatible_shell@@Base+0x630>
  415b30:	ldr	x0, [sp, #176]
  415b34:	str	w1, [sp, #104]
  415b38:	bl	406bb0 <strchr@plt>
  415b3c:	ldr	w1, [sp, #104]
  415b40:	cbz	x0, 41591c <is_bourne_compatible_shell@@Base+0x61c>
  415b44:	ldr	w0, [x20, #88]
  415b48:	cbz	w0, 41591c <is_bourne_compatible_shell@@Base+0x61c>
  415b4c:	adrp	x25, 449000 <commands_started@@Base+0x170>
  415b50:	b	415938 <is_bourne_compatible_shell@@Base+0x638>
  415b54:	ldr	w0, [sp, #164]
  415b58:	cbnz	w0, 415b64 <is_bourne_compatible_shell@@Base+0x864>
  415b5c:	ldr	w0, [x20, #88]
  415b60:	cbnz	w0, 415938 <is_bourne_compatible_shell@@Base+0x638>
  415b64:	mov	x3, x28
  415b68:	mov	w0, #0x1                   	// #1
  415b6c:	str	w0, [sp, #160]
  415b70:	mov	w0, #0x3d                  	// #61
  415b74:	strb	w0, [x3], #1
  415b78:	ldrb	w1, [x27, #1]!
  415b7c:	mov	x28, x3
  415b80:	cbnz	w1, 4158f0 <is_bourne_compatible_shell@@Base+0x5f0>
  415b84:	b	415930 <is_bourne_compatible_shell@@Base+0x630>
  415b88:	ldr	x0, [sp, #96]
  415b8c:	cbz	x0, 41591c <is_bourne_compatible_shell@@Base+0x61c>
  415b90:	mov	x2, x0
  415b94:	ldr	w0, [sp, #144]
  415b98:	cmp	w0, #0x0
  415b9c:	ldr	x0, [sp, #152]
  415ba0:	cset	w1, ne  // ne = any
  415ba4:	str	x27, [x2]
  415ba8:	add	x0, x23, x0, lsl #3
  415bac:	b	4159d4 <is_bourne_compatible_shell@@Base+0x6d4>
  415bb0:	mov	x23, #0x0                   	// #0
  415bb4:	mov	x0, x23
  415bb8:	ldp	x19, x20, [sp, #16]
  415bbc:	ldp	x21, x22, [sp, #32]
  415bc0:	ldp	x23, x24, [sp, #48]
  415bc4:	ldp	x29, x30, [sp], #208
  415bc8:	ret
  415bcc:	mov	w0, #0x1                   	// #1
  415bd0:	str	w0, [sp, #144]
  415bd4:	mov	w26, #0x0                   	// #0
  415bd8:	cbnz	w1, 4158f0 <is_bourne_compatible_shell@@Base+0x5f0>
  415bdc:	b	415930 <is_bourne_compatible_shell@@Base+0x630>
  415be0:	ldr	x1, [sp, #152]
  415be4:	ldr	x5, [x23, x1, lsl #3]
  415be8:	ldrb	w1, [x27, #2]!
  415bec:	cmp	x5, x28
  415bf0:	b.ne	41592c <is_bourne_compatible_shell@@Base+0x62c>  // b.any
  415bf4:	ldrh	w5, [x22, w1, sxtw #1]
  415bf8:	tbz	w5, #1, 41592c <is_bourne_compatible_shell@@Base+0x62c>
  415bfc:	mov	x2, x0
  415c00:	add	x0, x0, #0x1
  415c04:	ldrb	w1, [x0, #1]
  415c08:	ldrh	w5, [x22, w1, sxtw #1]
  415c0c:	tbnz	w5, #1, 415bfc <is_bourne_compatible_shell@@Base+0x8fc>
  415c10:	add	x27, x2, #0x2
  415c14:	cbnz	w1, 4158f0 <is_bourne_compatible_shell@@Base+0x5f0>
  415c18:	b	415930 <is_bourne_compatible_shell@@Base+0x630>
  415c1c:	ldr	x8, [x23]
  415c20:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  415c24:	add	x10, x0, #0xb00
  415c28:	add	x1, x8, #0x1
  415c2c:	ldr	x0, [sp, #184]
  415c30:	b	415c3c <is_bourne_compatible_shell@@Base+0x93c>
  415c34:	ldr	x0, [x10, #8]!
  415c38:	cbz	x0, 415a68 <is_bourne_compatible_shell@@Base+0x768>
  415c3c:	cmp	x8, x0
  415c40:	b.eq	415938 <is_bourne_compatible_shell@@Base+0x638>  // b.none
  415c44:	ldrb	w9, [x0]
  415c48:	ldrb	w5, [x8]
  415c4c:	cmp	w5, w9
  415c50:	b.ne	415c34 <is_bourne_compatible_shell@@Base+0x934>  // b.any
  415c54:	str	x8, [sp, #112]
  415c58:	str	x10, [sp, #144]
  415c5c:	cbz	w5, 415938 <is_bourne_compatible_shell@@Base+0x638>
  415c60:	add	x0, x0, #0x1
  415c64:	str	x1, [sp, #104]
  415c68:	bl	406b40 <strcmp@plt>
  415c6c:	ldp	x1, x8, [sp, #104]
  415c70:	ldr	x10, [sp, #144]
  415c74:	cbnz	w0, 415c34 <is_bourne_compatible_shell@@Base+0x934>
  415c78:	b	415938 <is_bourne_compatible_shell@@Base+0x638>
  415c7c:	mov	x3, x28
  415c80:	strb	w1, [x3], #1
  415c84:	ldrb	w1, [x27, #2]!
  415c88:	mov	x28, x3
  415c8c:	cbnz	w1, 4158f0 <is_bourne_compatible_shell@@Base+0x5f0>
  415c90:	b	415930 <is_bourne_compatible_shell@@Base+0x630>
  415c94:	ldrb	w0, [x21, #3]
  415c98:	cbz	w0, 415874 <is_bourne_compatible_shell@@Base+0x574>
  415c9c:	b	415490 <is_bourne_compatible_shell@@Base+0x190>
  415ca0:	mov	x0, x1
  415ca4:	mov	x23, #0x0                   	// #0
  415ca8:	bl	406b90 <free@plt>
  415cac:	ldp	x25, x26, [sp, #64]
  415cb0:	ldp	x27, x28, [sp, #80]
  415cb4:	b	4156b4 <is_bourne_compatible_shell@@Base+0x3b4>
  415cb8:	str	wzr, [sp, #144]
  415cbc:	add	x27, x27, #0x1
  415cc0:	str	wzr, [sp, #160]
  415cc4:	cbnz	w1, 4158f0 <is_bourne_compatible_shell@@Base+0x5f0>
  415cc8:	b	415930 <is_bourne_compatible_shell@@Base+0x630>
  415ccc:	ldr	x26, [x23]
  415cd0:	adrp	x25, 42b000 <_IO_stdin_used@@Base+0x20e0>
  415cd4:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  415cd8:	add	x25, x25, #0xb00
  415cdc:	add	x0, x0, #0x690
  415ce0:	add	x27, x26, #0x1
  415ce4:	b	415cf0 <is_bourne_compatible_shell@@Base+0x9f0>
  415ce8:	ldr	x0, [x25, #8]!
  415cec:	cbz	x0, 415a14 <is_bourne_compatible_shell@@Base+0x714>
  415cf0:	cmp	x26, x0
  415cf4:	b.eq	415b4c <is_bourne_compatible_shell@@Base+0x84c>  // b.none
  415cf8:	ldrb	w3, [x0]
  415cfc:	ldrb	w2, [x26]
  415d00:	cmp	w2, w3
  415d04:	b.ne	415ce8 <is_bourne_compatible_shell@@Base+0x9e8>  // b.any
  415d08:	cbz	w2, 415b4c <is_bourne_compatible_shell@@Base+0x84c>
  415d0c:	add	x0, x0, #0x1
  415d10:	mov	x1, x27
  415d14:	bl	406b40 <strcmp@plt>
  415d18:	cbnz	w0, 415ce8 <is_bourne_compatible_shell@@Base+0x9e8>
  415d1c:	adrp	x25, 449000 <commands_started@@Base+0x170>
  415d20:	b	415938 <is_bourne_compatible_shell@@Base+0x638>
  415d24:	adrp	x25, 449000 <commands_started@@Base+0x170>
  415d28:	str	x27, [x0]
  415d2c:	b	415938 <is_bourne_compatible_shell@@Base+0x638>
  415d30:	strb	wzr, [x0]
  415d34:	str	xzr, [sp, #152]
  415d38:	ldr	x0, [x23]
  415d3c:	ldrb	w0, [x0]
  415d40:	cbnz	w0, 4159ec <is_bourne_compatible_shell@@Base+0x6ec>
  415d44:	str	xzr, [x23]
  415d48:	b	415a0c <is_bourne_compatible_shell@@Base+0x70c>
  415d4c:	ldr	x0, [sp, #168]
  415d50:	bl	406b90 <free@plt>
  415d54:	mov	x0, x23
  415d58:	mov	x23, #0x0                   	// #0
  415d5c:	bl	406b90 <free@plt>
  415d60:	ldp	x25, x26, [sp, #64]
  415d64:	ldp	x27, x28, [sp, #80]
  415d68:	b	4156b4 <is_bourne_compatible_shell@@Base+0x3b4>
  415d6c:	mov	w2, #0x5                   	// #5
  415d70:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  415d74:	mov	x0, #0x0                   	// #0
  415d78:	add	x1, x1, #0x6c0
  415d7c:	bl	406cd0 <dcgettext@plt>
  415d80:	mov	x2, x0
  415d84:	adrp	x3, 42b000 <_IO_stdin_used@@Base+0x20e0>
  415d88:	mov	w4, #0xe16                 	// #3606
  415d8c:	add	x3, x3, #0x700
  415d90:	mov	x1, #0x1d                  	// #29
  415d94:	mov	x0, #0x0                   	// #0
  415d98:	bl	41c0a0 <fatal@@Base>
  415d9c:	nop

0000000000415da0 <unblock_all_sigs@@Base>:
  415da0:	stp	x29, x30, [sp, #-144]!
  415da4:	mov	x29, sp
  415da8:	add	x0, sp, #0x10
  415dac:	bl	406910 <sigemptyset@plt>
  415db0:	add	x1, sp, #0x10
  415db4:	mov	x2, #0x0                   	// #0
  415db8:	mov	w0, #0x2                   	// #2
  415dbc:	bl	4066e0 <sigprocmask@plt>
  415dc0:	ldp	x29, x30, [sp], #144
  415dc4:	ret

0000000000415dc8 <child_handler@@Base>:
  415dc8:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  415dcc:	add	x0, x0, #0x3c0
  415dd0:	ldr	w1, [x0, #36]
  415dd4:	add	w1, w1, #0x1
  415dd8:	str	w1, [x0, #36]
  415ddc:	b	4283c8 <jobserver_signal@@Base>

0000000000415de0 <child_execute_job@@Base>:
  415de0:	sub	sp, sp, #0x270
  415de4:	stp	x29, x30, [sp]
  415de8:	mov	x29, sp
  415dec:	stp	x19, x20, [sp, #16]
  415df0:	mov	x20, x0
  415df4:	stp	x21, x22, [sp, #32]
  415df8:	mov	x21, x2
  415dfc:	stp	x23, x24, [sp, #48]
  415e00:	stp	x25, x26, [sp, #64]
  415e04:	cbz	w1, 415ed0 <child_execute_job@@Base+0xf0>
  415e08:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  415e0c:	ldr	x0, [x0, #448]
  415e10:	bl	406850 <fileno@plt>
  415e14:	mov	w24, w0
  415e18:	adrp	x25, 446000 <expanding_var@@Base+0x320>
  415e1c:	adrp	x26, 446000 <expanding_var@@Base+0x320>
  415e20:	ldr	x0, [x25, #440]
  415e24:	bl	406850 <fileno@plt>
  415e28:	mov	w22, w0
  415e2c:	ldr	x0, [x26, #416]
  415e30:	bl	406850 <fileno@plt>
  415e34:	mov	w23, w0
  415e38:	ldrb	w1, [x20, #24]
  415e3c:	tbz	w1, #0, 415e54 <child_execute_job@@Base+0x74>
  415e40:	ldp	w1, w0, [x20, #16]
  415e44:	cmp	w1, #0x0
  415e48:	csel	w22, w22, w1, lt  // lt = tstop
  415e4c:	cmp	w0, #0x0
  415e50:	csel	w23, w23, w0, lt  // lt = tstop
  415e54:	add	x0, sp, #0x120
  415e58:	bl	406c70 <posix_spawnattr_init@plt>
  415e5c:	mov	w19, w0
  415e60:	cbz	w0, 415edc <child_execute_job@@Base+0xfc>
  415e64:	mov	w0, #0xffffffff            	// #-1
  415e68:	str	w0, [sp, #160]
  415e6c:	ldr	x0, [x21]
  415e70:	bl	406680 <strlen@plt>
  415e74:	mov	x20, x0
  415e78:	mov	w0, w19
  415e7c:	bl	406a40 <strerror@plt>
  415e80:	bl	406680 <strlen@plt>
  415e84:	add	x20, x20, x0
  415e88:	ldr	x21, [x21]
  415e8c:	mov	w0, w19
  415e90:	bl	406a40 <strerror@plt>
  415e94:	mov	x4, x0
  415e98:	mov	x1, x20
  415e9c:	mov	x0, #0x0                   	// #0
  415ea0:	mov	x3, x21
  415ea4:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x20e0>
  415ea8:	add	x2, x2, #0x710
  415eac:	bl	41bd88 <error@@Base>
  415eb0:	ldr	w0, [sp, #160]
  415eb4:	ldp	x29, x30, [sp]
  415eb8:	ldp	x19, x20, [sp, #16]
  415ebc:	ldp	x21, x22, [sp, #32]
  415ec0:	ldp	x23, x24, [sp, #48]
  415ec4:	ldp	x25, x26, [sp, #64]
  415ec8:	add	sp, sp, #0x270
  415ecc:	ret
  415ed0:	bl	4285c0 <get_bad_stdin@@Base>
  415ed4:	mov	w24, w0
  415ed8:	b	415e18 <child_execute_job@@Base+0x38>
  415edc:	add	x0, sp, #0x50
  415ee0:	bl	406af0 <posix_spawn_file_actions_init@plt>
  415ee4:	mov	w19, w0
  415ee8:	cbnz	w0, 416060 <child_execute_job@@Base+0x280>
  415eec:	add	x0, sp, #0xa0
  415ef0:	bl	406910 <sigemptyset@plt>
  415ef4:	add	x1, sp, #0xa0
  415ef8:	add	x0, sp, #0x120
  415efc:	bl	406ac0 <posix_spawnattr_setsigmask@plt>
  415f00:	mov	w19, w0
  415f04:	cbnz	w0, 416054 <child_execute_job@@Base+0x274>
  415f08:	tbnz	w24, #31, 415f40 <child_execute_job@@Base+0x160>
  415f0c:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  415f10:	ldr	x0, [x19, #448]
  415f14:	bl	406850 <fileno@plt>
  415f18:	cmp	w0, w24
  415f1c:	b.eq	415f40 <child_execute_job@@Base+0x160>  // b.none
  415f20:	ldr	x0, [x19, #448]
  415f24:	bl	406850 <fileno@plt>
  415f28:	mov	w2, w0
  415f2c:	mov	w1, w24
  415f30:	add	x0, sp, #0x50
  415f34:	bl	406870 <posix_spawn_file_actions_adddup2@plt>
  415f38:	mov	w19, w0
  415f3c:	cbnz	w0, 416054 <child_execute_job@@Base+0x274>
  415f40:	ldr	x0, [x25, #440]
  415f44:	bl	406850 <fileno@plt>
  415f48:	cmp	w0, w22
  415f4c:	b.eq	415f70 <child_execute_job@@Base+0x190>  // b.none
  415f50:	ldr	x0, [x25, #440]
  415f54:	bl	406850 <fileno@plt>
  415f58:	mov	w2, w0
  415f5c:	mov	w1, w22
  415f60:	add	x0, sp, #0x50
  415f64:	bl	406870 <posix_spawn_file_actions_adddup2@plt>
  415f68:	mov	w19, w0
  415f6c:	cbnz	w0, 416054 <child_execute_job@@Base+0x274>
  415f70:	ldr	x0, [x26, #416]
  415f74:	bl	406850 <fileno@plt>
  415f78:	cmp	w0, w23
  415f7c:	b.eq	415fa0 <child_execute_job@@Base+0x1c0>  // b.none
  415f80:	ldr	x0, [x26, #416]
  415f84:	bl	406850 <fileno@plt>
  415f88:	mov	w2, w0
  415f8c:	mov	w1, w23
  415f90:	add	x0, sp, #0x50
  415f94:	bl	406870 <posix_spawn_file_actions_adddup2@plt>
  415f98:	mov	w19, w0
  415f9c:	cbnz	w0, 416054 <child_execute_job@@Base+0x274>
  415fa0:	add	x0, sp, #0x120
  415fa4:	mov	w1, #0x49                  	// #73
  415fa8:	bl	406aa0 <posix_spawnattr_setflags@plt>
  415fac:	cbnz	w0, 416150 <child_execute_job@@Base+0x370>
  415fb0:	ldr	x0, [x20, #8]
  415fb4:	ldr	x1, [x0]
  415fb8:	cbnz	x1, 415fc8 <child_execute_job@@Base+0x1e8>
  415fbc:	b	416008 <child_execute_job@@Base+0x228>
  415fc0:	ldr	x1, [x0, #8]!
  415fc4:	cbz	x1, 416008 <child_execute_job@@Base+0x228>
  415fc8:	ldrb	w2, [x1]
  415fcc:	cmp	w2, #0x50
  415fd0:	b.ne	415fc0 <child_execute_job@@Base+0x1e0>  // b.any
  415fd4:	ldrb	w2, [x1, #1]
  415fd8:	cmp	w2, #0x41
  415fdc:	b.ne	415fc0 <child_execute_job@@Base+0x1e0>  // b.any
  415fe0:	ldrb	w2, [x1, #2]
  415fe4:	cmp	w2, #0x54
  415fe8:	b.ne	415fc0 <child_execute_job@@Base+0x1e0>  // b.any
  415fec:	ldrb	w2, [x1, #3]
  415ff0:	cmp	w2, #0x48
  415ff4:	b.ne	415fc0 <child_execute_job@@Base+0x1e0>  // b.any
  415ff8:	ldrb	w2, [x1, #4]
  415ffc:	cmp	w2, #0x3d
  416000:	b.ne	415fc0 <child_execute_job@@Base+0x1e0>  // b.any
  416004:	add	x1, x1, #0x5
  416008:	ldr	x0, [x21]
  41600c:	mov	w2, #0x0                   	// #0
  416010:	bl	4287c8 <find_in_given_path@@Base>
  416014:	mov	x22, x0
  416018:	cbz	x0, 41606c <child_execute_job@@Base+0x28c>
  41601c:	nop
  416020:	ldr	x5, [x20, #8]
  416024:	mov	x4, x21
  416028:	add	x3, sp, #0x120
  41602c:	add	x2, sp, #0x50
  416030:	mov	x1, x22
  416034:	add	x0, sp, #0xa0
  416038:	bl	406c40 <posix_spawn@plt>
  41603c:	mov	w19, w0
  416040:	cmp	w0, #0x4
  416044:	b.eq	416020 <child_execute_job@@Base+0x240>  // b.none
  416048:	cmp	w0, #0x8
  41604c:	b.eq	41609c <child_execute_job@@Base+0x2bc>  // b.none
  416050:	cbz	w19, 416124 <child_execute_job@@Base+0x344>
  416054:	add	x0, sp, #0x50
  416058:	bl	4069e0 <posix_spawn_file_actions_destroy@plt>
  41605c:	nop
  416060:	add	x0, sp, #0x120
  416064:	bl	406920 <posix_spawnattr_destroy@plt>
  416068:	b	415e64 <child_execute_job@@Base+0x84>
  41606c:	bl	406d70 <__errno_location@plt>
  416070:	mov	x1, x0
  416074:	add	x0, sp, #0x50
  416078:	ldr	w19, [x1]
  41607c:	bl	4069e0 <posix_spawn_file_actions_destroy@plt>
  416080:	add	x0, sp, #0x120
  416084:	bl	406920 <posix_spawnattr_destroy@plt>
  416088:	cbnz	w19, 415e64 <child_execute_job@@Base+0x84>
  41608c:	ldr	w0, [sp, #160]
  416090:	tbz	w0, #31, 415eb4 <child_execute_job@@Base+0xd4>
  416094:	mov	w19, #0x0                   	// #0
  416098:	b	415e6c <child_execute_job@@Base+0x8c>
  41609c:	ldr	x0, [x21]
  4160a0:	cbz	x0, 416178 <child_execute_job@@Base+0x398>
  4160a4:	mov	x0, #0x0                   	// #0
  4160a8:	mov	x2, x0
  4160ac:	add	x0, x0, #0x1
  4160b0:	ldr	x1, [x21, x0, lsl #3]
  4160b4:	cbnz	x1, 4160a8 <child_execute_job@@Base+0x2c8>
  4160b8:	add	x0, x2, #0x4
  4160bc:	lsl	x0, x0, #3
  4160c0:	sub	x19, x0, #0x18
  4160c4:	bl	41ab28 <xmalloc@@Base>
  4160c8:	mov	x23, x0
  4160cc:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  4160d0:	mov	x2, x19
  4160d4:	add	x0, x0, #0x10
  4160d8:	ldr	x19, [x1, #160]
  4160dc:	stp	x19, x22, [x23]
  4160e0:	add	x1, x21, #0x8
  4160e4:	bl	406640 <memcpy@plt>
  4160e8:	b	4160f0 <child_execute_job@@Base+0x310>
  4160ec:	ldr	x19, [x23]
  4160f0:	mov	x1, x19
  4160f4:	ldr	x5, [x20, #8]
  4160f8:	mov	x4, x23
  4160fc:	add	x3, sp, #0x120
  416100:	add	x2, sp, #0x50
  416104:	add	x0, sp, #0xa0
  416108:	bl	406c40 <posix_spawn@plt>
  41610c:	mov	w19, w0
  416110:	cmp	w0, #0x4
  416114:	b.eq	4160ec <child_execute_job@@Base+0x30c>  // b.none
  416118:	mov	x0, x23
  41611c:	bl	406b90 <free@plt>
  416120:	cbnz	w19, 416054 <child_execute_job@@Base+0x274>
  416124:	ldr	x0, [x20]
  416128:	bl	406b90 <free@plt>
  41612c:	ldr	x0, [x21]
  416130:	cmp	x0, x22
  416134:	b.eq	416158 <child_execute_job@@Base+0x378>  // b.none
  416138:	str	x22, [x20]
  41613c:	add	x0, sp, #0x50
  416140:	bl	4069e0 <posix_spawn_file_actions_destroy@plt>
  416144:	add	x0, sp, #0x120
  416148:	bl	406920 <posix_spawnattr_destroy@plt>
  41614c:	b	41608c <child_execute_job@@Base+0x2ac>
  416150:	mov	w19, w0
  416154:	b	416054 <child_execute_job@@Base+0x274>
  416158:	mov	x0, x22
  41615c:	bl	41abb0 <xstrdup@@Base>
  416160:	str	x0, [x20]
  416164:	add	x0, sp, #0x50
  416168:	bl	4069e0 <posix_spawn_file_actions_destroy@plt>
  41616c:	add	x0, sp, #0x120
  416170:	bl	406920 <posix_spawnattr_destroy@plt>
  416174:	b	41608c <child_execute_job@@Base+0x2ac>
  416178:	mov	x19, #0x0                   	// #0
  41617c:	mov	x0, #0x18                  	// #24
  416180:	b	4160c4 <child_execute_job@@Base+0x2e4>
  416184:	nop
  416188:	stp	x29, x30, [sp, #-112]!
  41618c:	mov	x29, sp
  416190:	stp	x19, x20, [sp, #16]
  416194:	mov	x20, x0
  416198:	ldr	w1, [x0, #72]
  41619c:	ldr	x0, [x0, #40]
  4161a0:	stp	x21, x22, [sp, #32]
  4161a4:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  4161a8:	ldr	x19, [x20, #64]
  4161ac:	ldr	x4, [x0, #32]
  4161b0:	cbz	x19, 41651c <child_execute_job@@Base+0x73c>
  4161b4:	ldr	x4, [x4, #40]
  4161b8:	sub	w2, w1, #0x1
  4161bc:	stp	x23, x24, [sp, #48]
  4161c0:	ldr	w1, [x0, #132]
  4161c4:	stp	x25, x26, [sp, #64]
  4161c8:	ldrb	w0, [x20, #80]
  4161cc:	stp	x27, x28, [sp, #80]
  4161d0:	ldrb	w21, [x4, w2, uxtw]
  4161d4:	orr	w21, w21, w1
  4161d8:	ubfx	x1, x21, #2, #1
  4161dc:	bfi	w0, w1, #1, #1
  4161e0:	strb	w0, [x20, #80]
  4161e4:	ldrb	w1, [x19]
  4161e8:	cbz	w1, 41622c <child_execute_job@@Base+0x44c>
  4161ec:	adrp	x3, 446000 <expanding_var@@Base+0x320>
  4161f0:	add	x3, x3, #0x4c0
  4161f4:	b	416218 <child_execute_job@@Base+0x438>
  4161f8:	cmp	w1, #0x2b
  4161fc:	b.eq	416570 <child_execute_job@@Base+0x790>  // b.none
  416200:	cmp	w1, #0x2d
  416204:	b.eq	416578 <child_execute_job@@Base+0x798>  // b.none
  416208:	ldrh	w1, [x3, w1, sxtw #1]
  41620c:	tbz	w1, #1, 41622c <child_execute_job@@Base+0x44c>
  416210:	ldrb	w1, [x19, #1]!
  416214:	cbz	w1, 41622c <child_execute_job@@Base+0x44c>
  416218:	cmp	w1, #0x40
  41621c:	b.ne	4161f8 <child_execute_job@@Base+0x418>  // b.any
  416220:	ldrb	w1, [x19, #1]!
  416224:	orr	w21, w21, #0x2
  416228:	cbnz	w1, 416218 <child_execute_job@@Base+0x438>
  41622c:	ldrb	w0, [x20, #80]
  416230:	and	w23, w21, #0x1
  416234:	bfi	w0, w21, #4, #1
  416238:	strb	w0, [x20, #80]
  41623c:	ldrb	w0, [x4, w2, uxtw]
  416240:	orr	w0, w23, w0
  416244:	strb	w0, [x4, w2, uxtw]
  416248:	mov	x2, x19
  41624c:	ldr	x1, [x20, #40]
  416250:	ldrb	w0, [x19]
  416254:	ldr	x1, [x1, #32]
  416258:	ldrb	w4, [x1, #50]
  41625c:	cbz	w0, 416284 <child_execute_job@@Base+0x4a4>
  416260:	mov	x1, x19
  416264:	nop
  416268:	strb	w0, [x2], #1
  41626c:	cmp	w0, #0xa
  416270:	add	x3, x1, #0x1
  416274:	ldrb	w0, [x1, #1]
  416278:	b.eq	416584 <child_execute_job@@Base+0x7a4>  // b.none
  41627c:	mov	x1, x3
  416280:	cbnz	w0, 416268 <child_execute_job@@Base+0x488>
  416284:	strb	wzr, [x2]
  416288:	adrp	x24, 449000 <commands_started@@Base+0x170>
  41628c:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  416290:	add	x0, x0, #0x718
  416294:	ldr	x22, [x20, #40]
  416298:	ldr	w2, [x20, #72]
  41629c:	ldr	w27, [x24, #2144]
  4162a0:	mov	x1, x22
  4162a4:	ldr	x3, [x22, #32]
  4162a8:	sub	w2, w2, #0x1
  4162ac:	ldr	x3, [x3, #40]
  4162b0:	str	xzr, [sp, #104]
  4162b4:	ldrb	w28, [x3, w2, uxtw]
  4162b8:	str	wzr, [x24, #2144]
  4162bc:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  4162c0:	mov	x1, x22
  4162c4:	mov	x26, x0
  4162c8:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4162cc:	add	x0, x0, #0x728
  4162d0:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  4162d4:	mov	x25, x0
  4162d8:	mov	x1, x22
  4162dc:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4162e0:	add	x0, x0, #0x738
  4162e4:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  4162e8:	add	x1, sp, #0x68
  4162ec:	mov	x4, x0
  4162f0:	mov	w5, w28
  4162f4:	mov	x3, x25
  4162f8:	mov	x2, x26
  4162fc:	mov	x22, x0
  416300:	str	w27, [x24, #2144]
  416304:	mov	x0, x19
  416308:	bl	4153c0 <is_bourne_compatible_shell@@Base+0xc0>
  41630c:	mov	x24, x0
  416310:	mov	x0, x26
  416314:	bl	406b90 <free@plt>
  416318:	mov	x0, x25
  41631c:	bl	406b90 <free@plt>
  416320:	mov	x0, x22
  416324:	bl	406b90 <free@plt>
  416328:	ldr	x1, [sp, #104]
  41632c:	cbz	x1, 41665c <child_execute_job@@Base+0x87c>
  416330:	add	x0, x1, #0x1
  416334:	str	x0, [sp, #104]
  416338:	strb	wzr, [x1]
  41633c:	ldr	x1, [sp, #104]
  416340:	str	x1, [x20, #64]
  416344:	cbz	x24, 416664 <child_execute_job@@Base+0x884>
  416348:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41634c:	ldr	w0, [x0, #3484]
  416350:	cbnz	w0, 416598 <child_execute_job@@Base+0x7b8>
  416354:	adrp	x0, 449000 <commands_started@@Base+0x170>
  416358:	ldr	w0, [x0, #2284]
  41635c:	cbnz	w0, 41674c <child_execute_job@@Base+0x96c>
  416360:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  416364:	mov	w2, #0x0                   	// #0
  416368:	ldr	w0, [x0, #3376]
  41636c:	cbz	w0, 41637c <child_execute_job@@Base+0x59c>
  416370:	cmp	w0, #0x3
  416374:	eor	w2, w23, #0x1
  416378:	csinc	w2, w2, wzr, ne  // ne = any
  41637c:	ldrb	w1, [x20, #24]
  416380:	add	x0, x20, #0x10
  416384:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  416388:	bfxil	w1, w2, #0, #1
  41638c:	strb	w1, [x20, #24]
  416390:	tbnz	w1, #0, 416654 <child_execute_job@@Base+0x874>
  416394:	str	xzr, [x22, #3576]
  416398:	bl	41b2f8 <output_dump@@Base>
  41639c:	adrp	x25, 449000 <commands_started@@Base+0x170>
  4163a0:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  4163a4:	ldr	w0, [x25, #2080]
  4163a8:	ldr	w1, [x1, #3468]
  4163ac:	orr	w0, w0, w1
  4163b0:	cbnz	w0, 4165d4 <child_execute_job@@Base+0x7f4>
  4163b4:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  4163b8:	and	w0, w21, #0x2
  4163bc:	ldr	w1, [x1, #3380]
  4163c0:	orr	w0, w0, w1
  4163c4:	cbz	w0, 4165d4 <child_execute_job@@Base+0x7f4>
  4163c8:	adrp	x1, 448000 <output_context@@Base+0x1208>
  4163cc:	ldr	x19, [x24]
  4163d0:	ldr	w0, [x1, #3728]
  4163d4:	add	w0, w0, #0x1
  4163d8:	str	w0, [x1, #3728]
  4163dc:	cbz	x19, 4163ec <child_execute_job@@Base+0x60c>
  4163e0:	mov	x0, x19
  4163e4:	bl	415300 <is_bourne_compatible_shell@@Base>
  4163e8:	cbnz	w0, 41669c <child_execute_job@@Base+0x8bc>
  4163ec:	ldr	w1, [x25, #2080]
  4163f0:	eor	w0, w23, #0x1
  4163f4:	cmp	w1, #0x0
  4163f8:	csel	w0, w0, wzr, ne  // ne = any
  4163fc:	cbnz	w0, 4166fc <child_execute_job@@Base+0x91c>
  416400:	bl	41b850 <output_start@@Base>
  416404:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  416408:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41640c:	add	x19, x19, #0x3c0
  416410:	ldr	x0, [x0, #440]
  416414:	bl	406c20 <fflush@plt>
  416418:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41641c:	ldr	x0, [x0, #416]
  416420:	bl	406c20 <fflush@plt>
  416424:	ldr	w1, [x19, #40]
  416428:	ldrb	w0, [x20, #80]
  41642c:	cmp	w1, #0x0
  416430:	cset	w1, eq  // eq = none
  416434:	bfi	w0, w1, #2, #1
  416438:	strb	w0, [x20, #80]
  41643c:	tbz	w0, #2, 416448 <child_execute_job@@Base+0x668>
  416440:	mov	w0, #0x1                   	// #1
  416444:	str	w0, [x19, #40]
  416448:	ldrb	w2, [x20, #80]
  41644c:	ldr	x21, [x20, #8]
  416450:	and	w2, w2, #0xfffffff7
  416454:	strb	w2, [x20, #80]
  416458:	cbz	x21, 416738 <child_execute_job@@Base+0x958>
  41645c:	ldrb	w1, [x20, #80]
  416460:	tbz	w1, #0, 4165f8 <child_execute_job@@Base+0x818>
  416464:	mov	w2, #0x0                   	// #0
  416468:	tbz	w1, #2, 41672c <child_execute_job@@Base+0x94c>
  41646c:	add	x4, sp, #0x68
  416470:	mov	x1, x21
  416474:	add	x5, sp, #0x64
  416478:	add	x3, sp, #0x60
  41647c:	mov	x0, x24
  416480:	bl	428780 <start_remote_job@@Base>
  416484:	cbnz	w0, 4165f8 <child_execute_job@@Base+0x818>
  416488:	ldrb	w0, [x20, #80]
  41648c:	tbz	w0, #2, 4164a4 <child_execute_job@@Base+0x6c4>
  416490:	ldr	w1, [sp, #100]
  416494:	cbnz	w1, 4164a4 <child_execute_job@@Base+0x6c4>
  416498:	and	w0, w0, #0xfffffffb
  41649c:	str	wzr, [x19, #40]
  4164a0:	strb	w0, [x20, #80]
  4164a4:	ldrb	w1, [x20, #80]
  4164a8:	ldr	w2, [sp, #96]
  4164ac:	ldr	w0, [sp, #104]
  4164b0:	str	w0, [x20, #76]
  4164b4:	bfxil	w1, w2, #0, #1
  4164b8:	strb	w1, [x20, #80]
  4164bc:	tbnz	w0, #31, 4164cc <child_execute_job@@Base+0x6ec>
  4164c0:	ldr	x0, [x19, #16]
  4164c4:	add	x0, x0, #0x1
  4164c8:	str	x0, [x19, #16]
  4164cc:	ldr	x0, [x20, #40]
  4164d0:	mov	w1, #0x2                   	// #2
  4164d4:	bl	40e3c0 <set_command_state@@Base>
  4164d8:	ldr	x0, [x24]
  4164dc:	bl	406b90 <free@plt>
  4164e0:	mov	x0, x24
  4164e4:	bl	406b90 <free@plt>
  4164e8:	str	xzr, [x22, #3576]
  4164ec:	ldp	x19, x20, [sp, #16]
  4164f0:	ldp	x21, x22, [sp, #32]
  4164f4:	ldp	x23, x24, [sp, #48]
  4164f8:	ldp	x25, x26, [sp, #64]
  4164fc:	ldp	x27, x28, [sp, #80]
  416500:	ldp	x29, x30, [sp], #112
  416504:	ret
  416508:	ldr	x3, [x20, #56]
  41650c:	ldr	x19, [x3, w1, uxtw #3]
  416510:	mov	w1, w2
  416514:	str	x19, [x20, #64]
  416518:	str	w2, [x20, #72]
  41651c:	add	w2, w1, #0x1
  416520:	cbz	x19, 41652c <child_execute_job@@Base+0x74c>
  416524:	ldrb	w3, [x19]
  416528:	cbnz	w3, 416688 <child_execute_job@@Base+0x8a8>
  41652c:	ldrh	w3, [x4, #48]
  416530:	cmp	w3, w1
  416534:	b.ne	416508 <child_execute_job@@Base+0x728>  // b.any
  416538:	str	xzr, [x20, #64]
  41653c:	mov	w1, #0x2                   	// #2
  416540:	str	xzr, [x4, #16]
  416544:	bl	40e3c0 <set_command_state@@Base>
  416548:	ldr	x0, [x20, #40]
  41654c:	ldrb	w1, [x0, #136]
  416550:	and	w1, w1, #0xfffffffc
  416554:	strb	w1, [x0, #136]
  416558:	bl	421998 <notice_finished_file@@Base>
  41655c:	str	xzr, [x22, #3576]
  416560:	ldp	x19, x20, [sp, #16]
  416564:	ldp	x21, x22, [sp, #32]
  416568:	ldp	x29, x30, [sp], #112
  41656c:	ret
  416570:	orr	w21, w21, #0x1
  416574:	b	416210 <child_execute_job@@Base+0x430>
  416578:	orr	w0, w0, #0x2
  41657c:	strb	w0, [x20, #80]
  416580:	b	416210 <child_execute_job@@Base+0x430>
  416584:	cmp	w0, w4
  416588:	b.ne	41627c <child_execute_job@@Base+0x49c>  // b.any
  41658c:	ldrb	w0, [x1, #2]!
  416590:	cbnz	w0, 416268 <child_execute_job@@Base+0x488>
  416594:	b	416284 <child_execute_job@@Base+0x4a4>
  416598:	cbnz	w23, 416360 <child_execute_job@@Base+0x580>
  41659c:	ldr	x0, [x24]
  4165a0:	bl	406b90 <free@plt>
  4165a4:	mov	x0, x24
  4165a8:	bl	406b90 <free@plt>
  4165ac:	ldr	x0, [x20, #40]
  4165b0:	mov	w2, #0x2                   	// #2
  4165b4:	ldrb	w1, [x0, #136]
  4165b8:	bfxil	w1, w2, #0, #2
  4165bc:	strb	w1, [x0, #136]
  4165c0:	bl	421998 <notice_finished_file@@Base>
  4165c4:	ldp	x23, x24, [sp, #48]
  4165c8:	ldp	x25, x26, [sp, #64]
  4165cc:	ldp	x27, x28, [sp, #80]
  4165d0:	b	416560 <child_execute_job@@Base+0x780>
  4165d4:	mov	x0, x19
  4165d8:	bl	406680 <strlen@plt>
  4165dc:	mov	x3, x19
  4165e0:	mov	x1, x0
  4165e4:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  4165e8:	mov	w0, #0x0                   	// #0
  4165ec:	add	x2, x2, #0xff0
  4165f0:	bl	41bc10 <message@@Base>
  4165f4:	b	4163c8 <child_execute_job@@Base+0x5e8>
  4165f8:	mov	x2, #0x0                   	// #0
  4165fc:	adrp	x1, 449000 <commands_started@@Base+0x170>
  416600:	mov	w0, #0x0                   	// #0
  416604:	add	x1, x1, #0x868
  416608:	bl	4066e0 <sigprocmask@plt>
  41660c:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  416610:	ldrb	w1, [x20, #80]
  416614:	mov	w0, w23
  416618:	ldr	x25, [x21, #456]
  41661c:	and	w1, w1, #0xfffffffe
  416620:	strb	w1, [x20, #80]
  416624:	bl	4281d8 <jobserver_pre_child@@Base>
  416628:	ldrb	w1, [x20, #80]
  41662c:	mov	x2, x24
  416630:	mov	x0, x20
  416634:	ubfx	x1, x1, #2, #1
  416638:	bl	415de0 <child_execute_job@@Base>
  41663c:	str	w0, [x20, #76]
  416640:	mov	w0, w23
  416644:	str	x25, [x21, #456]
  416648:	bl	4282d0 <jobserver_post_child@@Base>
  41664c:	ldr	w0, [x20, #76]
  416650:	b	4164bc <child_execute_job@@Base+0x6dc>
  416654:	str	x0, [x22, #3576]
  416658:	b	41639c <child_execute_job@@Base+0x5bc>
  41665c:	str	xzr, [x20, #64]
  416660:	cbnz	x24, 416348 <child_execute_job@@Base+0x568>
  416664:	ldr	x0, [x20, #40]
  416668:	mov	x19, x1
  41666c:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  416670:	ldr	w1, [x20, #72]
  416674:	ldp	x23, x24, [sp, #48]
  416678:	ldr	x4, [x0, #32]
  41667c:	ldp	x25, x26, [sp, #64]
  416680:	ldp	x27, x28, [sp, #80]
  416684:	b	41651c <child_execute_job@@Base+0x73c>
  416688:	sub	w1, w1, #0x1
  41668c:	str	x1, [x4, #16]
  416690:	mov	x0, x20
  416694:	bl	416188 <child_execute_job@@Base+0x3a8>
  416698:	b	41655c <child_execute_job@@Base+0x77c>
  41669c:	ldr	x0, [x24, #8]
  4166a0:	cbz	x0, 4163ec <child_execute_job@@Base+0x60c>
  4166a4:	ldrb	w1, [x0]
  4166a8:	cmp	w1, #0x2d
  4166ac:	b.ne	4163ec <child_execute_job@@Base+0x60c>  // b.any
  4166b0:	ldrb	w1, [x0, #1]
  4166b4:	cmp	w1, #0x63
  4166b8:	b.eq	416784 <child_execute_job@@Base+0x9a4>  // b.none
  4166bc:	cmp	w1, #0x65
  4166c0:	b.ne	4163ec <child_execute_job@@Base+0x60c>  // b.any
  4166c4:	ldrb	w1, [x0, #2]
  4166c8:	cmp	w1, #0x63
  4166cc:	b.ne	4163ec <child_execute_job@@Base+0x60c>  // b.any
  4166d0:	ldrb	w0, [x0, #3]
  4166d4:	cbnz	w0, 4163ec <child_execute_job@@Base+0x60c>
  4166d8:	ldr	x0, [x24, #16]
  4166dc:	cbz	x0, 4163ec <child_execute_job@@Base+0x60c>
  4166e0:	ldrb	w1, [x0]
  4166e4:	cmp	w1, #0x3a
  4166e8:	b.ne	4163ec <child_execute_job@@Base+0x60c>  // b.any
  4166ec:	ldrb	w0, [x0, #1]
  4166f0:	cbnz	w0, 4163ec <child_execute_job@@Base+0x60c>
  4166f4:	ldr	x0, [x24, #24]
  4166f8:	cbnz	x0, 4163ec <child_execute_job@@Base+0x60c>
  4166fc:	mov	x0, x19
  416700:	bl	406b90 <free@plt>
  416704:	mov	x0, x24
  416708:	bl	406b90 <free@plt>
  41670c:	ldr	x0, [x20, #40]
  416710:	ldr	w1, [x20, #72]
  416714:	ldp	x23, x24, [sp, #48]
  416718:	ldr	x4, [x0, #32]
  41671c:	ldp	x25, x26, [sp, #64]
  416720:	ldr	x19, [x20, #64]
  416724:	ldp	x27, x28, [sp, #80]
  416728:	b	41651c <child_execute_job@@Base+0x73c>
  41672c:	bl	4285c0 <get_bad_stdin@@Base>
  416730:	mov	w2, w0
  416734:	b	41646c <child_execute_job@@Base+0x68c>
  416738:	ldr	x0, [x20, #40]
  41673c:	bl	426158 <target_environment@@Base>
  416740:	mov	x21, x0
  416744:	str	x0, [x20, #8]
  416748:	b	41645c <child_execute_job@@Base+0x67c>
  41674c:	cbnz	w23, 416360 <child_execute_job@@Base+0x580>
  416750:	ldr	x0, [x24]
  416754:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  416758:	bl	406b90 <free@plt>
  41675c:	mov	x0, x24
  416760:	bl	406b90 <free@plt>
  416764:	ldr	x0, [x20, #40]
  416768:	ldr	w1, [x20, #72]
  41676c:	ldp	x23, x24, [sp, #48]
  416770:	ldr	x4, [x0, #32]
  416774:	ldp	x25, x26, [sp, #64]
  416778:	ldr	x19, [x20, #64]
  41677c:	ldp	x27, x28, [sp, #80]
  416780:	b	41651c <child_execute_job@@Base+0x73c>
  416784:	ldrb	w0, [x0, #2]
  416788:	cbz	w0, 4166d8 <child_execute_job@@Base+0x8f8>
  41678c:	b	4163ec <child_execute_job@@Base+0x60c>

0000000000416790 <reap_children@@Base>:
  416790:	stp	x29, x30, [sp, #-256]!
  416794:	mov	x29, sp
  416798:	stp	x19, x20, [sp, #16]
  41679c:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  4167a0:	add	x20, x20, #0x3c0
  4167a4:	stp	x21, x22, [sp, #32]
  4167a8:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  4167ac:	add	x21, x21, #0x480
  4167b0:	ldr	x19, [x20, #48]
  4167b4:	stp	x23, x24, [sp, #48]
  4167b8:	adrp	x24, 446000 <expanding_var@@Base+0x320>
  4167bc:	add	x24, x24, #0x3b8
  4167c0:	mov	w23, w0
  4167c4:	mov	w0, #0x1                   	// #1
  4167c8:	stp	x25, x26, [sp, #64]
  4167cc:	stp	x27, x28, [sp, #80]
  4167d0:	stp	w0, w1, [sp, #96]
  4167d4:	cbz	x19, 416ba4 <reap_children@@Base+0x414>
  4167d8:	ldr	w0, [sp, #96]
  4167dc:	orr	w0, w0, w23
  4167e0:	cbz	w0, 416bb0 <reap_children@@Base+0x420>
  4167e4:	ldr	w0, [sp, #100]
  4167e8:	cmp	w0, #0x0
  4167ec:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  4167f0:	b.ne	416dc4 <reap_children@@Base+0x634>  // b.any
  4167f4:	ldr	w0, [x20, #36]
  4167f8:	cbz	w0, 416804 <reap_children@@Base+0x74>
  4167fc:	sub	w0, w0, #0x1
  416800:	str	w0, [x20, #36]
  416804:	ldr	w0, [x24]
  416808:	cmp	w0, #0x0
  41680c:	cset	w28, ne  // ne = any
  416810:	cbz	x19, 4168d0 <reap_children@@Base+0x140>
  416814:	adrp	x22, 42b000 <_IO_stdin_used@@Base+0x20e0>
  416818:	mov	w27, #0x0                   	// #0
  41681c:	add	x22, x22, #0x768
  416820:	mov	x25, #0x0                   	// #0
  416824:	b	416838 <reap_children@@Base+0xa8>
  416828:	ldr	x0, [x19, #32]
  41682c:	mov	x25, x19
  416830:	cbz	x0, 4168cc <reap_children@@Base+0x13c>
  416834:	mov	x19, x0
  416838:	ldrb	w2, [x19, #80]
  41683c:	ldr	w1, [x19, #76]
  416840:	mvn	w0, w2
  416844:	and	w2, w2, #0x1
  416848:	and	w0, w0, #0x1
  41684c:	orr	w27, w27, w2
  416850:	orr	w28, w28, w0
  416854:	tbnz	w1, #31, 416a38 <reap_children@@Base+0x2a8>
  416858:	ldr	w0, [x21]
  41685c:	tbz	w0, #2, 416828 <reap_children@@Base+0x98>
  416860:	mov	x1, x22
  416864:	mov	w2, #0x5                   	// #5
  416868:	mov	x0, #0x0                   	// #0
  41686c:	bl	406cd0 <dcgettext@plt>
  416870:	ldrsw	x2, [x19, #76]
  416874:	mov	x25, x0
  416878:	ldr	x4, [x19, #40]
  41687c:	add	x0, x20, #0x40
  416880:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  416884:	add	x1, x1, #0x48
  416888:	ldr	x26, [x4]
  41688c:	bl	406730 <sprintf@plt>
  416890:	ldrb	w0, [x19, #80]
  416894:	adrp	x4, 42d000 <_IO_stdin_used@@Base+0x40e0>
  416898:	add	x4, x4, #0xed0
  41689c:	tbnz	w0, #0, 416a1c <reap_children@@Base+0x28c>
  4168a0:	mov	x2, x26
  4168a4:	mov	x0, x25
  4168a8:	add	x3, x20, #0x40
  4168ac:	mov	x1, x19
  4168b0:	bl	406d60 <printf@plt>
  4168b4:	mov	x25, x19
  4168b8:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4168bc:	ldr	x0, [x0, #440]
  4168c0:	bl	406c20 <fflush@plt>
  4168c4:	ldr	x0, [x19, #32]
  4168c8:	cbnz	x0, 416834 <reap_children@@Base+0xa4>
  4168cc:	cbnz	w27, 416cc8 <reap_children@@Base+0x538>
  4168d0:	cbz	w28, 416bb0 <reap_children@@Base+0x420>
  4168d4:	mov	w27, #0x0                   	// #0
  4168d8:	cbnz	w23, 416c9c <reap_children@@Base+0x50c>
  4168dc:	add	x1, sp, #0x70
  4168e0:	mov	w2, #0x1                   	// #1
  4168e4:	mov	w0, #0xffffffff            	// #-1
  4168e8:	bl	406da0 <waitpid@plt>
  4168ec:	cmp	w0, #0x0
  4168f0:	b.lt	416cbc <reap_children@@Base+0x52c>  // b.tstop
  4168f4:	b.eq	416cf0 <reap_children@@Base+0x560>  // b.none
  4168f8:	ldr	w1, [sp, #112]
  4168fc:	ldr	w5, [x24]
  416900:	and	w3, w1, #0x7f
  416904:	and	w6, w1, #0x80
  416908:	add	w4, w3, #0x1
  41690c:	ubfx	x2, x1, #8, #8
  416910:	str	w6, [sp, #124]
  416914:	sbfx	x1, x4, #1, #7
  416918:	cmp	w1, #0x0
  41691c:	csel	w3, w3, wzr, gt
  416920:	stp	w2, w3, [sp, #116]
  416924:	cmp	w5, w0
  416928:	b.eq	41707c <reap_children@@Base+0x8ec>  // b.none
  41692c:	mov	w2, #0x0                   	// #0
  416930:	ldr	x3, [x20, #48]
  416934:	cbz	x3, 416ba4 <reap_children@@Base+0x414>
  416938:	mov	x19, x3
  41693c:	mov	x25, #0x0                   	// #0
  416940:	b	416954 <reap_children@@Base+0x1c4>
  416944:	ldr	x1, [x19, #32]
  416948:	mov	x25, x19
  41694c:	cbz	x1, 416eb8 <reap_children@@Base+0x728>
  416950:	mov	x19, x1
  416954:	ldr	w1, [x19, #76]
  416958:	cmp	w1, w0
  41695c:	b.ne	416944 <reap_children@@Base+0x1b4>  // b.any
  416960:	ldrb	w1, [x19, #80]
  416964:	and	w1, w1, #0x1
  416968:	cmp	w1, w2
  41696c:	b.ne	416944 <reap_children@@Base+0x1b4>  // b.any
  416970:	ldr	w1, [x21]
  416974:	ldr	w0, [sp, #120]
  416978:	tbz	w1, #2, 4169e4 <reap_children@@Base+0x254>
  41697c:	ldr	w1, [sp, #116]
  416980:	orr	w0, w0, w1
  416984:	cbz	w0, 416fb8 <reap_children@@Base+0x828>
  416988:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  41698c:	mov	w2, #0x5                   	// #5
  416990:	add	x1, x1, #0x7d8
  416994:	mov	x0, #0x0                   	// #0
  416998:	bl	406cd0 <dcgettext@plt>
  41699c:	mov	x22, x0
  4169a0:	ldrsw	x2, [x19, #76]
  4169a4:	add	x0, x20, #0x40
  4169a8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  4169ac:	add	x1, x1, #0x48
  4169b0:	bl	406730 <sprintf@plt>
  4169b4:	ldrb	w0, [x19, #80]
  4169b8:	adrp	x3, 42d000 <_IO_stdin_used@@Base+0x40e0>
  4169bc:	add	x3, x3, #0xed0
  4169c0:	tbnz	w0, #0, 416f7c <reap_children@@Base+0x7ec>
  4169c4:	add	x2, x20, #0x40
  4169c8:	mov	x1, x19
  4169cc:	mov	x0, x22
  4169d0:	bl	406d60 <printf@plt>
  4169d4:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4169d8:	ldr	x0, [x0, #440]
  4169dc:	bl	406c20 <fflush@plt>
  4169e0:	ldr	w0, [sp, #120]
  4169e4:	ldr	x1, [x20, #16]
  4169e8:	cbz	x1, 4169f4 <reap_children@@Base+0x264>
  4169ec:	sub	x1, x1, #0x1
  4169f0:	str	x1, [x20, #16]
  4169f4:	mov	w27, #0x2                   	// #2
  4169f8:	cbnz	w0, 416a50 <reap_children@@Base+0x2c0>
  4169fc:	ldr	w27, [sp, #116]
  416a00:	cmp	w27, #0x7f
  416a04:	b.eq	416a44 <reap_children@@Base+0x2b4>  // b.none
  416a08:	cbz	w27, 416a50 <reap_children@@Base+0x2c0>
  416a0c:	cmp	w27, #0x1
  416a10:	b.eq	416c28 <reap_children@@Base+0x498>  // b.none
  416a14:	mov	w27, #0x2                   	// #2
  416a18:	b	416a50 <reap_children@@Base+0x2c0>
  416a1c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  416a20:	mov	w2, #0x5                   	// #5
  416a24:	add	x1, x1, #0x788
  416a28:	mov	x0, #0x0                   	// #0
  416a2c:	bl	406cd0 <dcgettext@plt>
  416a30:	mov	x4, x0
  416a34:	b	4168a0 <reap_children@@Base+0x110>
  416a38:	mov	w0, #0x7f                  	// #127
  416a3c:	stp	w0, wzr, [sp, #116]
  416a40:	str	wzr, [sp, #124]
  416a44:	ldr	x1, [x19]
  416a48:	mov	w27, #0x2                   	// #2
  416a4c:	cbnz	x1, 416be0 <reap_children@@Base+0x450>
  416a50:	ldr	x22, [x19, #48]
  416a54:	cbz	x22, 416a90 <reap_children@@Base+0x300>
  416a58:	ldr	w0, [x21]
  416a5c:	tbnz	w0, #2, 416e24 <reap_children@@Base+0x694>
  416a60:	bl	406d70 <__errno_location@plt>
  416a64:	mov	x1, x0
  416a68:	mov	x0, x22
  416a6c:	mov	x22, x1
  416a70:	str	wzr, [x1]
  416a74:	bl	406700 <remove@plt>
  416a78:	cbz	w0, 416a84 <reap_children@@Base+0x2f4>
  416a7c:	ldr	w0, [x21]
  416a80:	tbnz	w0, #2, 416f4c <reap_children@@Base+0x7bc>
  416a84:	ldr	x0, [x19, #48]
  416a88:	bl	406b90 <free@plt>
  416a8c:	str	xzr, [x19, #48]
  416a90:	ldrb	w0, [x19, #80]
  416a94:	tbz	w0, #2, 416a9c <reap_children@@Base+0x30c>
  416a98:	str	wzr, [x20, #40]
  416a9c:	cbz	w27, 416c58 <reap_children@@Base+0x4c8>
  416aa0:	tbnz	w0, #1, 416c48 <reap_children@@Base+0x4b8>
  416aa4:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  416aa8:	ldr	w0, [x0, #3488]
  416aac:	cbnz	w0, 416c48 <reap_children@@Base+0x4b8>
  416ab0:	ldrb	w23, [x19, #80]
  416ab4:	cmp	w27, #0x2
  416ab8:	cset	w1, eq  // eq = none
  416abc:	add	w1, w1, #0x2
  416ac0:	ubfx	x23, x23, #6, #1
  416ac4:	eor	w0, w23, #0x1
  416ac8:	csel	w0, w0, wzr, eq  // eq = none
  416acc:	cbnz	w0, 416fe0 <reap_children@@Base+0x850>
  416ad0:	ldr	x2, [x19, #40]
  416ad4:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  416ad8:	add	x22, x22, #0x50
  416adc:	ldrb	w3, [x2, #136]
  416ae0:	ldr	w0, [x22, #92]
  416ae4:	bfxil	w3, w1, #0, #2
  416ae8:	strb	w3, [x2, #136]
  416aec:	cmn	w0, #0x1
  416af0:	b.eq	417054 <reap_children@@Base+0x8c4>  // b.none
  416af4:	ldr	w2, [sp, #100]
  416af8:	ldr	w1, [sp, #120]
  416afc:	cmp	w2, #0x0
  416b00:	csinc	w23, w23, wzr, eq  // eq = none
  416b04:	orr	w0, w0, w1
  416b08:	cbz	w0, 416b14 <reap_children@@Base+0x384>
  416b0c:	mov	x0, x19
  416b10:	bl	40a988 <delete_child_targets@@Base>
  416b14:	adrp	x28, 446000 <expanding_var@@Base+0x320>
  416b18:	adrp	x22, 449000 <commands_started@@Base+0x170>
  416b1c:	add	x28, x28, #0x208
  416b20:	add	x22, x22, #0x868
  416b24:	add	x0, x19, #0x10
  416b28:	bl	41b2f8 <output_dump@@Base>
  416b2c:	ldr	w0, [x28]
  416b30:	cbz	w0, 416d6c <reap_children@@Base+0x5dc>
  416b34:	mov	x1, x22
  416b38:	mov	x2, #0x0                   	// #0
  416b3c:	mov	w0, #0x0                   	// #0
  416b40:	bl	4066e0 <sigprocmask@plt>
  416b44:	ldr	w0, [x19, #76]
  416b48:	cmp	w0, #0x0
  416b4c:	b.le	416b58 <reap_children@@Base+0x3c8>
  416b50:	ldr	w0, [x21]
  416b54:	tbnz	w0, #2, 416ec0 <reap_children@@Base+0x730>
  416b58:	ldr	w0, [x20, #4]
  416b5c:	cbz	w0, 416b70 <reap_children@@Base+0x3e0>
  416b60:	ldrb	w1, [x19, #80]
  416b64:	ubfx	x1, x1, #5, #1
  416b68:	sub	w0, w0, w1
  416b6c:	str	w0, [x20, #4]
  416b70:	ldr	x0, [x19, #32]
  416b74:	cbz	x25, 416de8 <reap_children@@Base+0x658>
  416b78:	str	x0, [x25, #32]
  416b7c:	mov	x0, x19
  416b80:	bl	414ba8 <try_implicit_rule@@Base+0x358>
  416b84:	mov	x1, x22
  416b88:	mov	x2, #0x0                   	// #0
  416b8c:	mov	w0, #0x1                   	// #1
  416b90:	bl	4066e0 <sigprocmask@plt>
  416b94:	cbz	w23, 416e08 <reap_children@@Base+0x678>
  416b98:	ldr	x19, [x20, #48]
  416b9c:	mov	w23, #0x0                   	// #0
  416ba0:	cbnz	x19, 4167d8 <reap_children@@Base+0x48>
  416ba4:	ldr	w0, [x24]
  416ba8:	mov	x19, #0x0                   	// #0
  416bac:	cbnz	w0, 4167d8 <reap_children@@Base+0x48>
  416bb0:	ldp	x19, x20, [sp, #16]
  416bb4:	ldp	x21, x22, [sp, #32]
  416bb8:	ldp	x23, x24, [sp, #48]
  416bbc:	ldp	x25, x26, [sp, #64]
  416bc0:	ldp	x27, x28, [sp, #80]
  416bc4:	ldp	x29, x30, [sp], #256
  416bc8:	ret
  416bcc:	bl	406d70 <__errno_location@plt>
  416bd0:	ldr	w0, [x0]
  416bd4:	cmp	w0, #0x4
  416bd8:	b.ne	417048 <reap_children@@Base+0x8b8>  // b.any
  416bdc:	ldr	x1, [x19]
  416be0:	add	x2, sp, #0x80
  416be4:	mov	w0, #0x0                   	// #0
  416be8:	bl	406d90 <__xstat@plt>
  416bec:	cmn	w0, #0x1
  416bf0:	b.eq	416bcc <reap_children@@Base+0x43c>  // b.none
  416bf4:	tbnz	w0, #31, 4170b8 <reap_children@@Base+0x928>
  416bf8:	ldr	w0, [sp, #144]
  416bfc:	and	w1, w0, #0xf000
  416c00:	cmp	w1, #0x4, lsl #12
  416c04:	b.eq	416ffc <reap_children@@Base+0x86c>  // b.none
  416c08:	tbz	w0, #6, 416ffc <reap_children@@Base+0x86c>
  416c0c:	ldr	x0, [sp, #176]
  416c10:	cbz	x0, 417044 <reap_children@@Base+0x8b4>
  416c14:	ldr	w0, [sp, #120]
  416c18:	cbnz	w0, 416a14 <reap_children@@Base+0x284>
  416c1c:	ldr	w27, [sp, #116]
  416c20:	cbz	w27, 416a50 <reap_children@@Base+0x2c0>
  416c24:	b	416a0c <reap_children@@Base+0x27c>
  416c28:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  416c2c:	ldr	w0, [x0, #3484]
  416c30:	cbz	w0, 416a14 <reap_children@@Base+0x284>
  416c34:	ldrb	w1, [x19, #80]
  416c38:	mov	w0, #0x2                   	// #2
  416c3c:	tst	x1, #0x10
  416c40:	csel	w27, w27, w0, ne  // ne = any
  416c44:	b	416a50 <reap_children@@Base+0x2c0>
  416c48:	ldp	w1, w2, [sp, #116]
  416c4c:	mov	x0, x19
  416c50:	ldr	w3, [sp, #124]
  416c54:	bl	415100 <try_implicit_rule@@Base+0x8b0>
  416c58:	ldr	x4, [x19, #40]
  416c5c:	ldr	w0, [x19, #72]
  416c60:	ldr	x1, [x19, #64]
  416c64:	ldr	x3, [x4, #32]
  416c68:	cbz	x1, 416c74 <reap_children@@Base+0x4e4>
  416c6c:	ldrb	w1, [x1]
  416c70:	cbnz	w1, 416d78 <reap_children@@Base+0x5e8>
  416c74:	ldrh	w1, [x3, #48]
  416c78:	cmp	w1, w0
  416c7c:	b.eq	416d30 <reap_children@@Base+0x5a0>  // b.none
  416c80:	ldr	x1, [x19, #56]
  416c84:	add	w2, w0, #0x1
  416c88:	ldr	x1, [x1, w0, uxtw #3]
  416c8c:	mov	w0, w2
  416c90:	str	x1, [x19, #64]
  416c94:	str	w2, [x19, #72]
  416c98:	b	416c68 <reap_children@@Base+0x4d8>
  416c9c:	add	x0, sp, #0x70
  416ca0:	bl	406c10 <wait@plt>
  416ca4:	cmn	w0, #0x1
  416ca8:	b.ne	4168ec <reap_children@@Base+0x15c>  // b.any
  416cac:	bl	406d70 <__errno_location@plt>
  416cb0:	ldr	w0, [x0]
  416cb4:	cmp	w0, #0x4
  416cb8:	b.eq	416c9c <reap_children@@Base+0x50c>  // b.none
  416cbc:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  416cc0:	add	x0, x0, #0x7a8
  416cc4:	bl	41b730 <pfatal_with_name@@Base>
  416cc8:	add	x2, sp, #0x7c
  416ccc:	add	x1, sp, #0x78
  416cd0:	add	x0, sp, #0x74
  416cd4:	mov	w3, #0x0                   	// #0
  416cd8:	bl	428788 <remote_status@@Base>
  416cdc:	cmp	w0, #0x0
  416ce0:	mov	w2, #0x1                   	// #1
  416ce4:	b.gt	416930 <reap_children@@Base+0x1a0>
  416ce8:	b.ne	4170a4 <reap_children@@Base+0x914>  // b.any
  416cec:	cbnz	w28, 4170b0 <reap_children@@Base+0x920>
  416cf0:	eor	w0, w27, #0x1
  416cf4:	cmp	w23, #0x0
  416cf8:	and	w0, w0, #0x1
  416cfc:	csinc	w0, w0, wzr, ne  // ne = any
  416d00:	cbnz	w0, 416bb0 <reap_children@@Base+0x420>
  416d04:	add	x2, sp, #0x7c
  416d08:	add	x1, sp, #0x78
  416d0c:	add	x0, sp, #0x74
  416d10:	mov	w3, #0x1                   	// #1
  416d14:	bl	428788 <remote_status@@Base>
  416d18:	cmp	w0, #0x0
  416d1c:	b.lt	4170a4 <reap_children@@Base+0x914>  // b.tstop
  416d20:	b.eq	416bb0 <reap_children@@Base+0x420>  // b.none
  416d24:	mov	w2, #0x1                   	// #1
  416d28:	str	wzr, [sp, #96]
  416d2c:	b	416930 <reap_children@@Base+0x1a0>
  416d30:	str	xzr, [x19, #64]
  416d34:	adrp	x28, 446000 <expanding_var@@Base+0x320>
  416d38:	str	xzr, [x3, #16]
  416d3c:	add	x28, x28, #0x208
  416d40:	adrp	x22, 449000 <commands_started@@Base+0x170>
  416d44:	mov	w23, #0x1                   	// #1
  416d48:	ldrb	w0, [x4, #136]
  416d4c:	add	x22, x22, #0x868
  416d50:	mov	w27, #0x0                   	// #0
  416d54:	and	w0, w0, #0xfffffffc
  416d58:	strb	w0, [x4, #136]
  416d5c:	add	x0, x19, #0x10
  416d60:	bl	41b2f8 <output_dump@@Base>
  416d64:	ldr	w0, [x28]
  416d68:	cbnz	w0, 416b34 <reap_children@@Base+0x3a4>
  416d6c:	ldr	x0, [x19, #40]
  416d70:	bl	421998 <notice_finished_file@@Base>
  416d74:	b	416b34 <reap_children@@Base+0x3a4>
  416d78:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  416d7c:	sub	w0, w0, #0x1
  416d80:	str	x0, [x3, #16]
  416d84:	add	x28, x1, #0x208
  416d88:	ldr	w0, [x1, #520]
  416d8c:	cbz	w0, 416e54 <reap_children@@Base+0x6c4>
  416d90:	ldrb	w0, [x4, #136]
  416d94:	adrp	x22, 449000 <commands_started@@Base+0x170>
  416d98:	add	x22, x22, #0x868
  416d9c:	orr	w0, w0, #0x3
  416da0:	strb	w0, [x4, #136]
  416da4:	and	w0, w0, #0xff
  416da8:	tst	x0, #0x3
  416dac:	mov	w23, #0x1                   	// #1
  416db0:	mov	w27, #0x0                   	// #0
  416db4:	b.eq	416b24 <reap_children@@Base+0x394>  // b.none
  416db8:	mov	x0, x19
  416dbc:	bl	40a988 <delete_child_targets@@Base>
  416dc0:	b	416b24 <reap_children@@Base+0x394>
  416dc4:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  416dc8:	ldr	x0, [x0, #440]
  416dcc:	bl	406c20 <fflush@plt>
  416dd0:	ldr	w0, [x20, #56]
  416dd4:	cbz	w0, 416f24 <reap_children@@Base+0x794>
  416dd8:	mov	w0, #0x1                   	// #1
  416ddc:	str	w0, [x20, #56]
  416de0:	ldr	x19, [x20, #48]
  416de4:	b	4167f4 <reap_children@@Base+0x64>
  416de8:	str	x0, [x20, #48]
  416dec:	mov	x0, x19
  416df0:	bl	414ba8 <try_implicit_rule@@Base+0x358>
  416df4:	mov	x1, x22
  416df8:	mov	x2, #0x0                   	// #0
  416dfc:	mov	w0, #0x1                   	// #1
  416e00:	bl	4066e0 <sigprocmask@plt>
  416e04:	cbnz	w23, 416b98 <reap_children@@Base+0x408>
  416e08:	adrp	x0, 449000 <commands_started@@Base+0x170>
  416e0c:	ldr	w1, [x28]
  416e10:	ldr	w0, [x0, #2084]
  416e14:	orr	w0, w0, w1
  416e18:	cbnz	w0, 416b98 <reap_children@@Base+0x408>
  416e1c:	mov	w0, w27
  416e20:	bl	419880 <die@@Base>
  416e24:	mov	w2, #0x5                   	// #5
  416e28:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  416e2c:	mov	x0, #0x0                   	// #0
  416e30:	add	x1, x1, #0x800
  416e34:	bl	406cd0 <dcgettext@plt>
  416e38:	ldr	x1, [x19, #48]
  416e3c:	bl	406d60 <printf@plt>
  416e40:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  416e44:	ldr	x0, [x0, #440]
  416e48:	bl	406c20 <fflush@plt>
  416e4c:	ldr	x22, [x19, #48]
  416e50:	b	416a60 <reap_children@@Base+0x2d0>
  416e54:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  416e58:	ldr	w0, [x0, #3376]
  416e5c:	cmp	w0, #0x1
  416e60:	b.eq	416fd4 <reap_children@@Base+0x844>  // b.none
  416e64:	mov	w0, #0x0                   	// #0
  416e68:	bl	428778 <start_remote_job_p@@Base>
  416e6c:	ldrb	w1, [x19, #80]
  416e70:	mov	w2, w0
  416e74:	adrp	x22, 449000 <commands_started@@Base+0x170>
  416e78:	mov	x0, x19
  416e7c:	add	x22, x22, #0x868
  416e80:	bfxil	w1, w2, #0, #1
  416e84:	strb	w1, [x19, #80]
  416e88:	bl	416188 <child_execute_job@@Base+0x3a8>
  416e8c:	mov	x1, x22
  416e90:	mov	x2, #0x0                   	// #0
  416e94:	mov	w0, #0x1                   	// #1
  416e98:	bl	4066e0 <sigprocmask@plt>
  416e9c:	ldr	x0, [x19, #40]
  416ea0:	ldrb	w0, [x0, #136]
  416ea4:	and	w1, w0, #0xc
  416ea8:	cmp	w1, #0x8
  416eac:	b.ne	416da8 <reap_children@@Base+0x618>  // b.any
  416eb0:	ldr	x3, [x20, #48]
  416eb4:	nop
  416eb8:	mov	x19, x3
  416ebc:	b	4167d4 <reap_children@@Base+0x44>
  416ec0:	mov	w2, #0x5                   	// #5
  416ec4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  416ec8:	mov	x0, #0x0                   	// #0
  416ecc:	add	x1, x1, #0x868
  416ed0:	bl	406cd0 <dcgettext@plt>
  416ed4:	mov	x4, x0
  416ed8:	ldrsw	x2, [x19, #76]
  416edc:	add	x0, x20, #0x40
  416ee0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  416ee4:	add	x1, x1, #0x48
  416ee8:	str	x4, [sp, #104]
  416eec:	bl	406730 <sprintf@plt>
  416ef0:	ldrb	w0, [x19, #80]
  416ef4:	adrp	x3, 42d000 <_IO_stdin_used@@Base+0x40e0>
  416ef8:	add	x3, x3, #0xed0
  416efc:	ldr	x4, [sp, #104]
  416f00:	tbnz	w0, #0, 416f98 <reap_children@@Base+0x808>
  416f04:	mov	x0, x4
  416f08:	add	x2, x20, #0x40
  416f0c:	mov	x1, x19
  416f10:	bl	406d60 <printf@plt>
  416f14:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  416f18:	ldr	x0, [x0, #440]
  416f1c:	bl	406c20 <fflush@plt>
  416f20:	b	416b58 <reap_children@@Base+0x3c8>
  416f24:	mov	w2, #0x5                   	// #5
  416f28:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  416f2c:	mov	x0, #0x0                   	// #0
  416f30:	add	x1, x1, #0x740
  416f34:	bl	406cd0 <dcgettext@plt>
  416f38:	mov	x2, x0
  416f3c:	mov	x1, #0x0                   	// #0
  416f40:	mov	x0, #0x0                   	// #0
  416f44:	bl	41bd88 <error@@Base>
  416f48:	b	416dd8 <reap_children@@Base+0x648>
  416f4c:	mov	w2, #0x5                   	// #5
  416f50:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  416f54:	mov	x0, #0x0                   	// #0
  416f58:	add	x1, x1, #0x820
  416f5c:	bl	406cd0 <dcgettext@plt>
  416f60:	ldr	w2, [x22]
  416f64:	ldr	x1, [x19, #48]
  416f68:	bl	406d60 <printf@plt>
  416f6c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  416f70:	ldr	x0, [x0, #440]
  416f74:	bl	406c20 <fflush@plt>
  416f78:	b	416a84 <reap_children@@Base+0x2f4>
  416f7c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  416f80:	mov	w2, #0x5                   	// #5
  416f84:	add	x1, x1, #0x788
  416f88:	mov	x0, #0x0                   	// #0
  416f8c:	bl	406cd0 <dcgettext@plt>
  416f90:	mov	x3, x0
  416f94:	b	4169c4 <reap_children@@Base+0x234>
  416f98:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  416f9c:	mov	w2, #0x5                   	// #5
  416fa0:	add	x1, x1, #0x788
  416fa4:	mov	x0, #0x0                   	// #0
  416fa8:	bl	406cd0 <dcgettext@plt>
  416fac:	mov	x3, x0
  416fb0:	ldr	x4, [sp, #104]
  416fb4:	b	416f04 <reap_children@@Base+0x774>
  416fb8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  416fbc:	mov	w2, #0x5                   	// #5
  416fc0:	add	x1, x1, #0x7b0
  416fc4:	mov	x0, #0x0                   	// #0
  416fc8:	bl	406cd0 <dcgettext@plt>
  416fcc:	mov	x22, x0
  416fd0:	b	4169a0 <reap_children@@Base+0x210>
  416fd4:	add	x0, x19, #0x10
  416fd8:	bl	41b2f8 <output_dump@@Base>
  416fdc:	b	416e64 <reap_children@@Base+0x6d4>
  416fe0:	ldp	w1, w2, [sp, #116]
  416fe4:	mov	x0, x19
  416fe8:	ldr	w3, [sp, #124]
  416fec:	mov	w4, #0x0                   	// #0
  416ff0:	bl	414950 <try_implicit_rule@@Base+0x100>
  416ff4:	mov	w1, #0x3                   	// #3
  416ff8:	b	416ad0 <reap_children@@Base+0x340>
  416ffc:	mov	w0, #0xd                   	// #13
  417000:	bl	406a40 <strerror@plt>
  417004:	mov	x22, x0
  417008:	cbz	x22, 416c14 <reap_children@@Base+0x484>
  41700c:	ldr	x28, [x19]
  417010:	mov	x0, x28
  417014:	bl	406680 <strlen@plt>
  417018:	mov	x27, x0
  41701c:	mov	x0, x22
  417020:	bl	406680 <strlen@plt>
  417024:	add	x1, x27, x0
  417028:	mov	x3, x28
  41702c:	mov	x4, x22
  417030:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x20e0>
  417034:	mov	x0, #0x0                   	// #0
  417038:	add	x2, x2, #0x710
  41703c:	bl	41bd88 <error@@Base>
  417040:	b	416c14 <reap_children@@Base+0x484>
  417044:	mov	w0, #0x8                   	// #8
  417048:	bl	406a40 <strerror@plt>
  41704c:	mov	x22, x0
  417050:	b	417008 <reap_children@@Base+0x878>
  417054:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  417058:	add	x0, x0, #0x850
  41705c:	bl	40ced8 <lookup_file@@Base>
  417060:	mov	x1, x0
  417064:	mov	w0, #0x0                   	// #0
  417068:	cbz	x1, 417074 <reap_children@@Base+0x8e4>
  41706c:	ldrb	w0, [x1, #137]
  417070:	ubfx	x0, x0, #3, #1
  417074:	str	w0, [x22, #92]
  417078:	b	416af4 <reap_children@@Base+0x364>
  41707c:	mov	w1, w3
  417080:	mov	w0, w2
  417084:	bl	411bf0 <shell_completed@@Base>
  417088:	ldp	x19, x20, [sp, #16]
  41708c:	ldp	x21, x22, [sp, #32]
  417090:	ldp	x23, x24, [sp, #48]
  417094:	ldp	x25, x26, [sp, #64]
  417098:	ldp	x27, x28, [sp, #80]
  41709c:	ldp	x29, x30, [sp], #256
  4170a0:	ret
  4170a4:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4170a8:	add	x0, x0, #0x798
  4170ac:	bl	41b730 <pfatal_with_name@@Base>
  4170b0:	mov	w27, w28
  4170b4:	b	4168d8 <reap_children@@Base+0x148>
  4170b8:	bl	406d70 <__errno_location@plt>
  4170bc:	ldr	w0, [x0]
  4170c0:	b	417048 <reap_children@@Base+0x8b8>
  4170c4:	nop
  4170c8:	stp	x29, x30, [sp, #-48]!
  4170cc:	mov	x29, sp
  4170d0:	stp	x19, x20, [sp, #16]
  4170d4:	mov	x19, x0
  4170d8:	mov	w0, #0x1                   	// #1
  4170dc:	stp	x21, x22, [sp, #32]
  4170e0:	ldr	x21, [x19, #40]
  4170e4:	bl	428778 <start_remote_job_p@@Base>
  4170e8:	ldrb	w1, [x19, #80]
  4170ec:	bfxil	w1, w0, #0, #1
  4170f0:	strb	w1, [x19, #80]
  4170f4:	tbnz	w1, #0, 417108 <reap_children@@Base+0x978>
  4170f8:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  4170fc:	add	x20, x20, #0x3c0
  417100:	ldr	w0, [x20, #4]
  417104:	cbnz	w0, 41715c <reap_children@@Base+0x9cc>
  417108:	mov	x0, x19
  41710c:	bl	416188 <child_execute_job@@Base+0x3a8>
  417110:	ldrb	w1, [x21, #136]
  417114:	ubfx	x0, x1, #2, #2
  417118:	cmp	w0, #0x2
  41711c:	b.eq	417184 <reap_children@@Base+0x9f4>  // b.none
  417120:	cmp	w0, #0x3
  417124:	b.eq	417148 <reap_children@@Base+0x9b8>  // b.none
  417128:	cbz	w0, 417140 <reap_children@@Base+0x9b0>
  41712c:	mov	w0, #0x1                   	// #1
  417130:	ldp	x19, x20, [sp, #16]
  417134:	ldp	x21, x22, [sp, #32]
  417138:	ldp	x29, x30, [sp], #48
  41713c:	ret
  417140:	and	w1, w1, #0xfffffffc
  417144:	strb	w1, [x21, #136]
  417148:	mov	x0, x21
  41714c:	bl	421998 <notice_finished_file@@Base>
  417150:	mov	x0, x19
  417154:	bl	414ba8 <try_implicit_rule@@Base+0x358>
  417158:	b	41712c <reap_children@@Base+0x99c>
  41715c:	bl	414d00 <try_implicit_rule@@Base+0x4b0>
  417160:	cbz	w0, 417108 <reap_children@@Base+0x978>
  417164:	mov	x0, x21
  417168:	mov	w1, #0x2                   	// #2
  41716c:	bl	40e3c0 <set_command_state@@Base>
  417170:	ldr	x1, [x20, #168]
  417174:	mov	w0, #0x0                   	// #0
  417178:	str	x1, [x19, #32]
  41717c:	str	x19, [x20, #168]
  417180:	b	417130 <reap_children@@Base+0x9a0>
  417184:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  417188:	add	x20, x20, #0x3c0
  41718c:	ldr	w0, [x19, #76]
  417190:	ldr	x1, [x20, #48]
  417194:	str	x1, [x19, #32]
  417198:	cmp	w0, #0x0
  41719c:	b.le	4171c4 <reap_children@@Base+0xa34>
  4171a0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4171a4:	ldr	w0, [x0, #1152]
  4171a8:	tbnz	w0, #2, 4171f0 <reap_children@@Base+0xa60>
  4171ac:	ldrb	w0, [x19, #80]
  4171b0:	ldr	w1, [x20, #4]
  4171b4:	orr	w0, w0, #0x20
  4171b8:	strb	w0, [x19, #80]
  4171bc:	add	w1, w1, #0x1
  4171c0:	str	w1, [x20, #4]
  4171c4:	mov	x2, #0x0                   	// #0
  4171c8:	adrp	x1, 449000 <commands_started@@Base+0x170>
  4171cc:	mov	w0, #0x1                   	// #1
  4171d0:	add	x1, x1, #0x868
  4171d4:	str	x19, [x20, #48]
  4171d8:	bl	4066e0 <sigprocmask@plt>
  4171dc:	mov	w0, #0x1                   	// #1
  4171e0:	ldp	x19, x20, [sp, #16]
  4171e4:	ldp	x21, x22, [sp, #32]
  4171e8:	ldp	x29, x30, [sp], #48
  4171ec:	ret
  4171f0:	mov	w2, #0x5                   	// #5
  4171f4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4171f8:	mov	x0, #0x0                   	// #0
  4171fc:	add	x1, x1, #0x890
  417200:	bl	406cd0 <dcgettext@plt>
  417204:	mov	x21, x0
  417208:	ldrsw	x2, [x19, #76]
  41720c:	add	x0, x20, #0x40
  417210:	ldr	x3, [x19, #40]
  417214:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  417218:	add	x1, x1, #0x48
  41721c:	ldr	x22, [x3]
  417220:	bl	406730 <sprintf@plt>
  417224:	ldrb	w0, [x19, #80]
  417228:	adrp	x4, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41722c:	add	x4, x4, #0xed0
  417230:	tbnz	w0, #0, 417258 <reap_children@@Base+0xac8>
  417234:	mov	x2, x22
  417238:	mov	x0, x21
  41723c:	add	x3, x20, #0x40
  417240:	mov	x1, x19
  417244:	bl	406d60 <printf@plt>
  417248:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41724c:	ldr	x0, [x0, #440]
  417250:	bl	406c20 <fflush@plt>
  417254:	b	4171ac <reap_children@@Base+0xa1c>
  417258:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  41725c:	mov	w2, #0x5                   	// #5
  417260:	add	x1, x1, #0x788
  417264:	mov	x0, #0x0                   	// #0
  417268:	bl	406cd0 <dcgettext@plt>
  41726c:	mov	x4, x0
  417270:	b	417234 <reap_children@@Base+0xaa4>
  417274:	nop
  417278:	stp	x29, x30, [sp, #-256]!
  41727c:	mov	x29, sp
  417280:	stp	x19, x20, [sp, #16]
  417284:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  417288:	add	x20, x20, #0x3c0
  41728c:	stp	x21, x22, [sp, #32]
  417290:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  417294:	add	x21, x21, #0x480
  417298:	ldr	x19, [x20, #48]
  41729c:	stp	x23, x24, [sp, #48]
  4172a0:	adrp	x24, 446000 <expanding_var@@Base+0x320>
  4172a4:	add	x24, x24, #0x3b8
  4172a8:	mov	w23, w0
  4172ac:	mov	w0, #0x1                   	// #1
  4172b0:	stp	x25, x26, [sp, #64]
  4172b4:	stp	x27, x28, [sp, #80]
  4172b8:	str	w0, [sp, #100]
  4172bc:	cbz	x19, 417670 <reap_children@@Base+0xee0>
  4172c0:	ldr	w0, [sp, #100]
  4172c4:	orr	w0, w0, w23
  4172c8:	cbz	w0, 41767c <reap_children@@Base+0xeec>
  4172cc:	ldr	w0, [x20, #36]
  4172d0:	cbz	w0, 4172dc <reap_children@@Base+0xb4c>
  4172d4:	sub	w0, w0, #0x1
  4172d8:	str	w0, [x20, #36]
  4172dc:	ldr	w0, [x24]
  4172e0:	cmp	w0, #0x0
  4172e4:	cset	w27, ne  // ne = any
  4172e8:	cbz	x19, 4173a8 <reap_children@@Base+0xc18>
  4172ec:	adrp	x22, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4172f0:	mov	x28, #0x0                   	// #0
  4172f4:	add	x22, x22, #0x768
  4172f8:	mov	w26, #0x0                   	// #0
  4172fc:	b	417310 <reap_children@@Base+0xb80>
  417300:	ldr	x0, [x19, #32]
  417304:	mov	x28, x19
  417308:	cbz	x0, 4173a4 <reap_children@@Base+0xc14>
  41730c:	mov	x19, x0
  417310:	ldrb	w1, [x19, #80]
  417314:	ldr	w0, [x19, #76]
  417318:	mvn	w2, w1
  41731c:	and	w1, w1, #0x1
  417320:	and	w2, w2, #0x1
  417324:	orr	w26, w26, w1
  417328:	orr	w27, w27, w2
  41732c:	tbnz	w0, #31, 417510 <reap_children@@Base+0xd80>
  417330:	ldr	w0, [x21]
  417334:	tbz	w0, #2, 417300 <reap_children@@Base+0xb70>
  417338:	mov	x1, x22
  41733c:	mov	w2, #0x5                   	// #5
  417340:	mov	x0, #0x0                   	// #0
  417344:	bl	406cd0 <dcgettext@plt>
  417348:	ldrsw	x2, [x19, #76]
  41734c:	mov	x28, x0
  417350:	ldr	x3, [x19, #40]
  417354:	add	x0, x20, #0x40
  417358:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  41735c:	add	x1, x1, #0x48
  417360:	ldr	x25, [x3]
  417364:	bl	406730 <sprintf@plt>
  417368:	ldrb	w0, [x19, #80]
  41736c:	adrp	x4, 42d000 <_IO_stdin_used@@Base+0x40e0>
  417370:	add	x4, x4, #0xed0
  417374:	tbnz	w0, #0, 4174f4 <reap_children@@Base+0xd64>
  417378:	mov	x2, x25
  41737c:	mov	x0, x28
  417380:	add	x3, x20, #0x40
  417384:	mov	x1, x19
  417388:	bl	406d60 <printf@plt>
  41738c:	mov	x28, x19
  417390:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  417394:	ldr	x0, [x0, #440]
  417398:	bl	406c20 <fflush@plt>
  41739c:	ldr	x0, [x19, #32]
  4173a0:	cbnz	x0, 41730c <reap_children@@Base+0xb7c>
  4173a4:	cbnz	w26, 417798 <reap_children@@Base+0x1008>
  4173a8:	cbz	w27, 41767c <reap_children@@Base+0xeec>
  4173ac:	mov	w26, #0x0                   	// #0
  4173b0:	cbnz	w23, 41776c <reap_children@@Base+0xfdc>
  4173b4:	add	x1, sp, #0x70
  4173b8:	mov	w2, #0x1                   	// #1
  4173bc:	mov	w0, #0xffffffff            	// #-1
  4173c0:	bl	406da0 <waitpid@plt>
  4173c4:	cmp	w0, #0x0
  4173c8:	b.lt	41778c <reap_children@@Base+0xffc>  // b.tstop
  4173cc:	b.eq	4177c0 <reap_children@@Base+0x1030>  // b.none
  4173d0:	ldr	w1, [sp, #112]
  4173d4:	ldr	w5, [x24]
  4173d8:	and	w3, w1, #0x7f
  4173dc:	and	w6, w1, #0x80
  4173e0:	add	w4, w3, #0x1
  4173e4:	ubfx	x2, x1, #8, #8
  4173e8:	str	w6, [sp, #124]
  4173ec:	sbfx	x1, x4, #1, #7
  4173f0:	cmp	w1, #0x0
  4173f4:	csel	w3, w3, wzr, gt
  4173f8:	stp	w2, w3, [sp, #116]
  4173fc:	cmp	w0, w5
  417400:	b.eq	417afc <reap_children@@Base+0x136c>  // b.none
  417404:	mov	w2, #0x0                   	// #0
  417408:	ldr	x3, [x20, #48]
  41740c:	cbz	x3, 417670 <reap_children@@Base+0xee0>
  417410:	mov	x19, x3
  417414:	mov	x28, #0x0                   	// #0
  417418:	b	41742c <reap_children@@Base+0xc9c>
  41741c:	ldr	x1, [x19, #32]
  417420:	mov	x28, x19
  417424:	cbz	x1, 417960 <reap_children@@Base+0x11d0>
  417428:	mov	x19, x1
  41742c:	ldr	w1, [x19, #76]
  417430:	cmp	w1, w0
  417434:	b.ne	41741c <reap_children@@Base+0xc8c>  // b.any
  417438:	ldrb	w1, [x19, #80]
  41743c:	and	w1, w1, #0x1
  417440:	cmp	w2, w1
  417444:	b.ne	41741c <reap_children@@Base+0xc8c>  // b.any
  417448:	ldr	w1, [x21]
  41744c:	ldr	w0, [sp, #120]
  417450:	tbz	w1, #2, 4174bc <reap_children@@Base+0xd2c>
  417454:	ldr	w1, [sp, #116]
  417458:	orr	w0, w0, w1
  41745c:	cbz	w0, 417a38 <reap_children@@Base+0x12a8>
  417460:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  417464:	mov	w2, #0x5                   	// #5
  417468:	add	x1, x1, #0x7d8
  41746c:	mov	x0, #0x0                   	// #0
  417470:	bl	406cd0 <dcgettext@plt>
  417474:	mov	x22, x0
  417478:	ldrsw	x2, [x19, #76]
  41747c:	add	x0, x20, #0x40
  417480:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  417484:	add	x1, x1, #0x48
  417488:	bl	406730 <sprintf@plt>
  41748c:	ldrb	w0, [x19, #80]
  417490:	adrp	x3, 42d000 <_IO_stdin_used@@Base+0x40e0>
  417494:	add	x3, x3, #0xed0
  417498:	tbnz	w0, #0, 4179fc <reap_children@@Base+0x126c>
  41749c:	add	x2, x20, #0x40
  4174a0:	mov	x1, x19
  4174a4:	mov	x0, x22
  4174a8:	bl	406d60 <printf@plt>
  4174ac:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4174b0:	ldr	x0, [x0, #440]
  4174b4:	bl	406c20 <fflush@plt>
  4174b8:	ldr	w0, [sp, #120]
  4174bc:	ldr	x1, [x20, #16]
  4174c0:	cbz	x1, 4174cc <reap_children@@Base+0xd3c>
  4174c4:	sub	x1, x1, #0x1
  4174c8:	str	x1, [x20, #16]
  4174cc:	mov	w26, #0x2                   	// #2
  4174d0:	cbnz	w0, 417528 <reap_children@@Base+0xd98>
  4174d4:	ldr	w26, [sp, #116]
  4174d8:	cmp	w26, #0x7f
  4174dc:	b.eq	41751c <reap_children@@Base+0xd8c>  // b.none
  4174e0:	cbz	w26, 417528 <reap_children@@Base+0xd98>
  4174e4:	cmp	w26, #0x1
  4174e8:	b.eq	4176f4 <reap_children@@Base+0xf64>  // b.none
  4174ec:	mov	w26, #0x2                   	// #2
  4174f0:	b	417528 <reap_children@@Base+0xd98>
  4174f4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4174f8:	mov	w2, #0x5                   	// #5
  4174fc:	add	x1, x1, #0x788
  417500:	mov	x0, #0x0                   	// #0
  417504:	bl	406cd0 <dcgettext@plt>
  417508:	mov	x4, x0
  41750c:	b	417378 <reap_children@@Base+0xbe8>
  417510:	mov	w0, #0x7f                  	// #127
  417514:	stp	w0, wzr, [sp, #116]
  417518:	str	wzr, [sp, #124]
  41751c:	ldr	x1, [x19]
  417520:	mov	w26, #0x2                   	// #2
  417524:	cbnz	x1, 4176ac <reap_children@@Base+0xf1c>
  417528:	ldr	x22, [x19, #48]
  41752c:	cbz	x22, 417568 <reap_children@@Base+0xdd8>
  417530:	ldr	w0, [x21]
  417534:	tbnz	w0, #2, 4178d0 <reap_children@@Base+0x1140>
  417538:	bl	406d70 <__errno_location@plt>
  41753c:	mov	x1, x0
  417540:	mov	x0, x22
  417544:	mov	x22, x1
  417548:	str	wzr, [x1]
  41754c:	bl	406700 <remove@plt>
  417550:	cbz	w0, 41755c <reap_children@@Base+0xdcc>
  417554:	ldr	w0, [x21]
  417558:	tbnz	w0, #2, 4179cc <reap_children@@Base+0x123c>
  41755c:	ldr	x0, [x19, #48]
  417560:	bl	406b90 <free@plt>
  417564:	str	xzr, [x19, #48]
  417568:	ldrb	w0, [x19, #80]
  41756c:	tbz	w0, #2, 417574 <reap_children@@Base+0xde4>
  417570:	str	wzr, [x20, #40]
  417574:	cbz	w26, 417724 <reap_children@@Base+0xf94>
  417578:	tbnz	w0, #1, 417714 <reap_children@@Base+0xf84>
  41757c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  417580:	ldr	w0, [x0, #3488]
  417584:	cbnz	w0, 417714 <reap_children@@Base+0xf84>
  417588:	ldrb	w23, [x19, #80]
  41758c:	cmp	w26, #0x2
  417590:	cset	w1, eq  // eq = none
  417594:	add	w1, w1, #0x2
  417598:	ubfx	x23, x23, #6, #1
  41759c:	eor	w0, w23, #0x1
  4175a0:	csel	w0, w0, wzr, eq  // eq = none
  4175a4:	cbnz	w0, 417a60 <reap_children@@Base+0x12d0>
  4175a8:	ldr	x2, [x19, #40]
  4175ac:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  4175b0:	add	x22, x22, #0x50
  4175b4:	ldrb	w3, [x2, #136]
  4175b8:	ldr	w0, [x22, #92]
  4175bc:	bfxil	w3, w1, #0, #2
  4175c0:	strb	w3, [x2, #136]
  4175c4:	cmn	w0, #0x1
  4175c8:	b.eq	417ad4 <reap_children@@Base+0x1344>  // b.none
  4175cc:	ldr	w1, [sp, #120]
  4175d0:	orr	w0, w0, w1
  4175d4:	cbz	w0, 4175e0 <reap_children@@Base+0xe50>
  4175d8:	mov	x0, x19
  4175dc:	bl	40a988 <delete_child_targets@@Base>
  4175e0:	adrp	x27, 446000 <expanding_var@@Base+0x320>
  4175e4:	adrp	x22, 449000 <commands_started@@Base+0x170>
  4175e8:	add	x27, x27, #0x208
  4175ec:	add	x22, x22, #0x868
  4175f0:	add	x0, x19, #0x10
  4175f4:	bl	41b2f8 <output_dump@@Base>
  4175f8:	ldr	w0, [x27]
  4175fc:	cbz	w0, 41783c <reap_children@@Base+0x10ac>
  417600:	mov	x1, x22
  417604:	mov	x2, #0x0                   	// #0
  417608:	mov	w0, #0x0                   	// #0
  41760c:	bl	4066e0 <sigprocmask@plt>
  417610:	ldr	w0, [x19, #76]
  417614:	cmp	w0, #0x0
  417618:	b.le	417624 <reap_children@@Base+0xe94>
  41761c:	ldr	w0, [x21]
  417620:	tbnz	w0, #2, 417968 <reap_children@@Base+0x11d8>
  417624:	ldr	w0, [x20, #4]
  417628:	cbz	w0, 41763c <reap_children@@Base+0xeac>
  41762c:	ldrb	w1, [x19, #80]
  417630:	ubfx	x1, x1, #5, #1
  417634:	sub	w0, w0, w1
  417638:	str	w0, [x20, #4]
  41763c:	ldr	x0, [x19, #32]
  417640:	cbz	x28, 417894 <reap_children@@Base+0x1104>
  417644:	str	x0, [x28, #32]
  417648:	mov	x0, x19
  41764c:	bl	414ba8 <try_implicit_rule@@Base+0x358>
  417650:	mov	x1, x22
  417654:	mov	x2, #0x0                   	// #0
  417658:	mov	w0, #0x1                   	// #1
  41765c:	bl	4066e0 <sigprocmask@plt>
  417660:	cbz	w23, 4178b4 <reap_children@@Base+0x1124>
  417664:	ldr	x19, [x20, #48]
  417668:	mov	w23, #0x0                   	// #0
  41766c:	cbnz	x19, 4172c0 <reap_children@@Base+0xb30>
  417670:	ldr	w0, [x24]
  417674:	mov	x19, #0x0                   	// #0
  417678:	cbnz	w0, 4172c0 <reap_children@@Base+0xb30>
  41767c:	ldp	x19, x20, [sp, #16]
  417680:	ldp	x21, x22, [sp, #32]
  417684:	ldp	x23, x24, [sp, #48]
  417688:	ldp	x25, x26, [sp, #64]
  41768c:	ldp	x27, x28, [sp, #80]
  417690:	ldp	x29, x30, [sp], #256
  417694:	ret
  417698:	bl	406d70 <__errno_location@plt>
  41769c:	ldr	w0, [x0]
  4176a0:	cmp	w0, #0x4
  4176a4:	b.ne	417ac8 <reap_children@@Base+0x1338>  // b.any
  4176a8:	ldr	x1, [x19]
  4176ac:	add	x2, sp, #0x80
  4176b0:	mov	w0, #0x0                   	// #0
  4176b4:	bl	406d90 <__xstat@plt>
  4176b8:	cmn	w0, #0x1
  4176bc:	b.eq	417698 <reap_children@@Base+0xf08>  // b.none
  4176c0:	tbnz	w0, #31, 417b38 <reap_children@@Base+0x13a8>
  4176c4:	ldr	w0, [sp, #144]
  4176c8:	and	w1, w0, #0xf000
  4176cc:	cmp	w1, #0x4, lsl #12
  4176d0:	b.eq	417a7c <reap_children@@Base+0x12ec>  // b.none
  4176d4:	tbz	w0, #6, 417a7c <reap_children@@Base+0x12ec>
  4176d8:	ldr	x0, [sp, #176]
  4176dc:	cbz	x0, 417ac4 <reap_children@@Base+0x1334>
  4176e0:	ldr	w0, [sp, #120]
  4176e4:	cbnz	w0, 4174ec <reap_children@@Base+0xd5c>
  4176e8:	ldr	w26, [sp, #116]
  4176ec:	cbz	w26, 417528 <reap_children@@Base+0xd98>
  4176f0:	b	4174e4 <reap_children@@Base+0xd54>
  4176f4:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4176f8:	ldr	w0, [x0, #3484]
  4176fc:	cbz	w0, 4174ec <reap_children@@Base+0xd5c>
  417700:	ldrb	w1, [x19, #80]
  417704:	mov	w0, #0x2                   	// #2
  417708:	tst	x1, #0x10
  41770c:	csel	w26, w26, w0, ne  // ne = any
  417710:	b	417528 <reap_children@@Base+0xd98>
  417714:	ldp	w1, w2, [sp, #116]
  417718:	mov	x0, x19
  41771c:	ldr	w3, [sp, #124]
  417720:	bl	415100 <try_implicit_rule@@Base+0x8b0>
  417724:	ldr	x4, [x19, #40]
  417728:	ldr	w0, [x19, #72]
  41772c:	ldr	x1, [x19, #64]
  417730:	ldr	x3, [x4, #32]
  417734:	nop
  417738:	cbz	x1, 417744 <reap_children@@Base+0xfb4>
  41773c:	ldrb	w1, [x1]
  417740:	cbnz	w1, 417848 <reap_children@@Base+0x10b8>
  417744:	ldrh	w1, [x3, #48]
  417748:	cmp	w1, w0
  41774c:	b.eq	417800 <reap_children@@Base+0x1070>  // b.none
  417750:	ldr	x1, [x19, #56]
  417754:	add	w2, w0, #0x1
  417758:	ldr	x1, [x1, w0, uxtw #3]
  41775c:	mov	w0, w2
  417760:	str	x1, [x19, #64]
  417764:	str	w2, [x19, #72]
  417768:	b	417738 <reap_children@@Base+0xfa8>
  41776c:	add	x0, sp, #0x70
  417770:	bl	406c10 <wait@plt>
  417774:	cmn	w0, #0x1
  417778:	b.ne	4173c4 <reap_children@@Base+0xc34>  // b.any
  41777c:	bl	406d70 <__errno_location@plt>
  417780:	ldr	w0, [x0]
  417784:	cmp	w0, #0x4
  417788:	b.eq	41776c <reap_children@@Base+0xfdc>  // b.none
  41778c:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  417790:	add	x0, x0, #0x7a8
  417794:	bl	41b730 <pfatal_with_name@@Base>
  417798:	add	x2, sp, #0x7c
  41779c:	add	x1, sp, #0x78
  4177a0:	add	x0, sp, #0x74
  4177a4:	mov	w3, #0x0                   	// #0
  4177a8:	bl	428788 <remote_status@@Base>
  4177ac:	cmp	w0, #0x0
  4177b0:	mov	w2, #0x1                   	// #1
  4177b4:	b.gt	417408 <reap_children@@Base+0xc78>
  4177b8:	b.ne	417b24 <reap_children@@Base+0x1394>  // b.any
  4177bc:	cbnz	w27, 417b30 <reap_children@@Base+0x13a0>
  4177c0:	eor	w0, w26, #0x1
  4177c4:	cmp	w23, #0x0
  4177c8:	and	w0, w0, #0x1
  4177cc:	csinc	w0, w0, wzr, ne  // ne = any
  4177d0:	cbnz	w0, 41767c <reap_children@@Base+0xeec>
  4177d4:	add	x2, sp, #0x7c
  4177d8:	add	x1, sp, #0x78
  4177dc:	add	x0, sp, #0x74
  4177e0:	mov	w3, #0x1                   	// #1
  4177e4:	bl	428788 <remote_status@@Base>
  4177e8:	cmp	w0, #0x0
  4177ec:	b.lt	417b24 <reap_children@@Base+0x1394>  // b.tstop
  4177f0:	b.eq	41767c <reap_children@@Base+0xeec>  // b.none
  4177f4:	mov	w2, #0x1                   	// #1
  4177f8:	str	wzr, [sp, #100]
  4177fc:	b	417408 <reap_children@@Base+0xc78>
  417800:	str	xzr, [x19, #64]
  417804:	adrp	x27, 446000 <expanding_var@@Base+0x320>
  417808:	str	xzr, [x3, #16]
  41780c:	add	x27, x27, #0x208
  417810:	adrp	x22, 449000 <commands_started@@Base+0x170>
  417814:	mov	w23, #0x1                   	// #1
  417818:	ldrb	w0, [x4, #136]
  41781c:	add	x22, x22, #0x868
  417820:	mov	w26, #0x0                   	// #0
  417824:	and	w0, w0, #0xfffffffc
  417828:	strb	w0, [x4, #136]
  41782c:	add	x0, x19, #0x10
  417830:	bl	41b2f8 <output_dump@@Base>
  417834:	ldr	w0, [x27]
  417838:	cbnz	w0, 417600 <reap_children@@Base+0xe70>
  41783c:	ldr	x0, [x19, #40]
  417840:	bl	421998 <notice_finished_file@@Base>
  417844:	b	417600 <reap_children@@Base+0xe70>
  417848:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  41784c:	sub	w0, w0, #0x1
  417850:	str	x0, [x3, #16]
  417854:	add	x27, x1, #0x208
  417858:	ldr	w0, [x1, #520]
  41785c:	cbz	w0, 417900 <reap_children@@Base+0x1170>
  417860:	ldrb	w0, [x4, #136]
  417864:	adrp	x22, 449000 <commands_started@@Base+0x170>
  417868:	add	x22, x22, #0x868
  41786c:	orr	w0, w0, #0x3
  417870:	strb	w0, [x4, #136]
  417874:	and	w0, w0, #0xff
  417878:	tst	x0, #0x3
  41787c:	mov	w23, #0x1                   	// #1
  417880:	mov	w26, #0x0                   	// #0
  417884:	b.eq	4175f0 <reap_children@@Base+0xe60>  // b.none
  417888:	mov	x0, x19
  41788c:	bl	40a988 <delete_child_targets@@Base>
  417890:	b	4175f0 <reap_children@@Base+0xe60>
  417894:	str	x0, [x20, #48]
  417898:	mov	x0, x19
  41789c:	bl	414ba8 <try_implicit_rule@@Base+0x358>
  4178a0:	mov	x1, x22
  4178a4:	mov	x2, #0x0                   	// #0
  4178a8:	mov	w0, #0x1                   	// #1
  4178ac:	bl	4066e0 <sigprocmask@plt>
  4178b0:	cbnz	w23, 417664 <reap_children@@Base+0xed4>
  4178b4:	adrp	x0, 449000 <commands_started@@Base+0x170>
  4178b8:	ldr	w1, [x27]
  4178bc:	ldr	w0, [x0, #2084]
  4178c0:	orr	w0, w0, w1
  4178c4:	cbnz	w0, 417664 <reap_children@@Base+0xed4>
  4178c8:	mov	w0, w26
  4178cc:	bl	419880 <die@@Base>
  4178d0:	mov	w2, #0x5                   	// #5
  4178d4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4178d8:	mov	x0, #0x0                   	// #0
  4178dc:	add	x1, x1, #0x800
  4178e0:	bl	406cd0 <dcgettext@plt>
  4178e4:	ldr	x1, [x19, #48]
  4178e8:	bl	406d60 <printf@plt>
  4178ec:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4178f0:	ldr	x0, [x0, #440]
  4178f4:	bl	406c20 <fflush@plt>
  4178f8:	ldr	x22, [x19, #48]
  4178fc:	b	417538 <reap_children@@Base+0xda8>
  417900:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  417904:	ldr	w0, [x0, #3376]
  417908:	cmp	w0, #0x1
  41790c:	b.eq	417a54 <reap_children@@Base+0x12c4>  // b.none
  417910:	mov	w0, #0x0                   	// #0
  417914:	bl	428778 <start_remote_job_p@@Base>
  417918:	ldrb	w1, [x19, #80]
  41791c:	mov	w2, w0
  417920:	adrp	x22, 449000 <commands_started@@Base+0x170>
  417924:	mov	x0, x19
  417928:	add	x22, x22, #0x868
  41792c:	bfxil	w1, w2, #0, #1
  417930:	strb	w1, [x19, #80]
  417934:	bl	416188 <child_execute_job@@Base+0x3a8>
  417938:	mov	x1, x22
  41793c:	mov	x2, #0x0                   	// #0
  417940:	mov	w0, #0x1                   	// #1
  417944:	bl	4066e0 <sigprocmask@plt>
  417948:	ldr	x0, [x19, #40]
  41794c:	ldrb	w0, [x0, #136]
  417950:	and	w1, w0, #0xc
  417954:	cmp	w1, #0x8
  417958:	b.ne	417878 <reap_children@@Base+0x10e8>  // b.any
  41795c:	ldr	x3, [x20, #48]
  417960:	mov	x19, x3
  417964:	b	4172bc <reap_children@@Base+0xb2c>
  417968:	mov	w2, #0x5                   	// #5
  41796c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  417970:	mov	x0, #0x0                   	// #0
  417974:	add	x1, x1, #0x868
  417978:	bl	406cd0 <dcgettext@plt>
  41797c:	mov	x4, x0
  417980:	ldrsw	x2, [x19, #76]
  417984:	add	x0, x20, #0x40
  417988:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  41798c:	add	x1, x1, #0x48
  417990:	str	x4, [sp, #104]
  417994:	bl	406730 <sprintf@plt>
  417998:	ldrb	w0, [x19, #80]
  41799c:	adrp	x3, 42d000 <_IO_stdin_used@@Base+0x40e0>
  4179a0:	add	x3, x3, #0xed0
  4179a4:	ldr	x4, [sp, #104]
  4179a8:	tbnz	w0, #0, 417a18 <reap_children@@Base+0x1288>
  4179ac:	mov	x0, x4
  4179b0:	add	x2, x20, #0x40
  4179b4:	mov	x1, x19
  4179b8:	bl	406d60 <printf@plt>
  4179bc:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4179c0:	ldr	x0, [x0, #440]
  4179c4:	bl	406c20 <fflush@plt>
  4179c8:	b	417624 <reap_children@@Base+0xe94>
  4179cc:	mov	w2, #0x5                   	// #5
  4179d0:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4179d4:	mov	x0, #0x0                   	// #0
  4179d8:	add	x1, x1, #0x820
  4179dc:	bl	406cd0 <dcgettext@plt>
  4179e0:	ldr	w2, [x22]
  4179e4:	ldr	x1, [x19, #48]
  4179e8:	bl	406d60 <printf@plt>
  4179ec:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4179f0:	ldr	x0, [x0, #440]
  4179f4:	bl	406c20 <fflush@plt>
  4179f8:	b	41755c <reap_children@@Base+0xdcc>
  4179fc:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  417a00:	mov	w2, #0x5                   	// #5
  417a04:	add	x1, x1, #0x788
  417a08:	mov	x0, #0x0                   	// #0
  417a0c:	bl	406cd0 <dcgettext@plt>
  417a10:	mov	x3, x0
  417a14:	b	41749c <reap_children@@Base+0xd0c>
  417a18:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  417a1c:	mov	w2, #0x5                   	// #5
  417a20:	add	x1, x1, #0x788
  417a24:	mov	x0, #0x0                   	// #0
  417a28:	bl	406cd0 <dcgettext@plt>
  417a2c:	mov	x3, x0
  417a30:	ldr	x4, [sp, #104]
  417a34:	b	4179ac <reap_children@@Base+0x121c>
  417a38:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  417a3c:	mov	w2, #0x5                   	// #5
  417a40:	add	x1, x1, #0x7b0
  417a44:	mov	x0, #0x0                   	// #0
  417a48:	bl	406cd0 <dcgettext@plt>
  417a4c:	mov	x22, x0
  417a50:	b	417478 <reap_children@@Base+0xce8>
  417a54:	add	x0, x19, #0x10
  417a58:	bl	41b2f8 <output_dump@@Base>
  417a5c:	b	417910 <reap_children@@Base+0x1180>
  417a60:	ldp	w1, w2, [sp, #116]
  417a64:	mov	x0, x19
  417a68:	ldr	w3, [sp, #124]
  417a6c:	mov	w4, #0x0                   	// #0
  417a70:	bl	414950 <try_implicit_rule@@Base+0x100>
  417a74:	mov	w1, #0x3                   	// #3
  417a78:	b	4175a8 <reap_children@@Base+0xe18>
  417a7c:	mov	w0, #0xd                   	// #13
  417a80:	bl	406a40 <strerror@plt>
  417a84:	mov	x22, x0
  417a88:	cbz	x22, 4176e0 <reap_children@@Base+0xf50>
  417a8c:	ldr	x27, [x19]
  417a90:	mov	x0, x27
  417a94:	bl	406680 <strlen@plt>
  417a98:	mov	x26, x0
  417a9c:	mov	x0, x22
  417aa0:	bl	406680 <strlen@plt>
  417aa4:	add	x1, x26, x0
  417aa8:	mov	x3, x27
  417aac:	mov	x4, x22
  417ab0:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x20e0>
  417ab4:	mov	x0, #0x0                   	// #0
  417ab8:	add	x2, x2, #0x710
  417abc:	bl	41bd88 <error@@Base>
  417ac0:	b	4176e0 <reap_children@@Base+0xf50>
  417ac4:	mov	w0, #0x8                   	// #8
  417ac8:	bl	406a40 <strerror@plt>
  417acc:	mov	x22, x0
  417ad0:	b	417a88 <reap_children@@Base+0x12f8>
  417ad4:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  417ad8:	add	x0, x0, #0x850
  417adc:	bl	40ced8 <lookup_file@@Base>
  417ae0:	mov	x1, x0
  417ae4:	mov	w0, #0x0                   	// #0
  417ae8:	cbz	x1, 417af4 <reap_children@@Base+0x1364>
  417aec:	ldrb	w0, [x1, #137]
  417af0:	ubfx	x0, x0, #3, #1
  417af4:	str	w0, [x22, #92]
  417af8:	b	4175cc <reap_children@@Base+0xe3c>
  417afc:	mov	w1, w3
  417b00:	mov	w0, w2
  417b04:	bl	411bf0 <shell_completed@@Base>
  417b08:	ldp	x19, x20, [sp, #16]
  417b0c:	ldp	x21, x22, [sp, #32]
  417b10:	ldp	x23, x24, [sp, #48]
  417b14:	ldp	x25, x26, [sp, #64]
  417b18:	ldp	x27, x28, [sp, #80]
  417b1c:	ldp	x29, x30, [sp], #256
  417b20:	ret
  417b24:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  417b28:	add	x0, x0, #0x798
  417b2c:	bl	41b730 <pfatal_with_name@@Base>
  417b30:	mov	w26, w27
  417b34:	b	4173b0 <reap_children@@Base+0xc20>
  417b38:	bl	406d70 <__errno_location@plt>
  417b3c:	ldr	w0, [x0]
  417b40:	b	417ac8 <reap_children@@Base+0x1338>
  417b44:	nop

0000000000417b48 <new_job@@Base>:
  417b48:	stp	x29, x30, [sp, #-144]!
  417b4c:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  417b50:	mov	x29, sp
  417b54:	stp	x19, x20, [sp, #16]
  417b58:	add	x20, x1, #0x3c0
  417b5c:	stp	x23, x24, [sp, #48]
  417b60:	str	x0, [x29, #112]
  417b64:	ldr	x23, [x0, #32]
  417b68:	stp	x21, x22, [sp, #32]
  417b6c:	ldr	x0, [x20, #168]
  417b70:	stp	x25, x26, [sp, #64]
  417b74:	stp	x27, x28, [sp, #80]
  417b78:	cbnz	x0, 417b88 <new_job@@Base+0x40>
  417b7c:	b	417ba4 <new_job@@Base+0x5c>
  417b80:	ldr	x0, [x20, #168]
  417b84:	cbz	x0, 417ba4 <new_job@@Base+0x5c>
  417b88:	mov	w0, #0x0                   	// #0
  417b8c:	bl	417278 <reap_children@@Base+0xae8>
  417b90:	ldr	x0, [x20, #168]
  417b94:	ldr	x1, [x0, #32]
  417b98:	str	x1, [x20, #168]
  417b9c:	bl	4170c8 <reap_children@@Base+0x938>
  417ba0:	cbnz	w0, 417b80 <new_job@@Base+0x38>
  417ba4:	mov	w0, #0x0                   	// #0
  417ba8:	bl	417278 <reap_children@@Base+0xae8>
  417bac:	mov	x0, x23
  417bb0:	bl	40a3b8 <chop_commands@@Base>
  417bb4:	mov	x0, #0x58                  	// #88
  417bb8:	bl	41ab50 <xcalloc@@Base>
  417bbc:	add	x19, x0, #0x10
  417bc0:	mov	x24, x0
  417bc4:	mov	x0, x19
  417bc8:	str	x24, [x29, #104]
  417bcc:	bl	41b558 <output_init@@Base>
  417bd0:	adrp	x25, 446000 <expanding_var@@Base+0x320>
  417bd4:	ldr	x4, [x29, #112]
  417bd8:	mov	x22, #0x0                   	// #0
  417bdc:	ldrb	w0, [x24, #24]
  417be0:	mov	w21, #0x7b                  	// #123
  417be4:	ldrb	w1, [x24, #80]
  417be8:	ldrb	w2, [x4, #138]
  417bec:	tst	x0, #0x1
  417bf0:	ldrh	w0, [x23, #48]
  417bf4:	stp	x4, xzr, [x24, #40]
  417bf8:	csel	x19, x19, xzr, ne  // ne = any
  417bfc:	bfi	w1, w2, #6, #1
  417c00:	strb	w1, [x24, #80]
  417c04:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  417c08:	lsl	x0, x0, #3
  417c0c:	str	x19, [x1, #3576]
  417c10:	bl	41ab28 <xmalloc@@Base>
  417c14:	ldrh	w1, [x23, #48]
  417c18:	str	x0, [x29, #128]
  417c1c:	add	x0, x25, #0x4c0
  417c20:	str	x0, [x29, #136]
  417c24:	cbz	w1, 41819c <new_job@@Base+0x654>
  417c28:	ldr	x0, [x23, #32]
  417c2c:	lsl	x1, x22, #3
  417c30:	str	x1, [x29, #120]
  417c34:	ldr	x26, [x0, x22, lsl #3]
  417c38:	mov	x28, x26
  417c3c:	mov	x0, x26
  417c40:	mov	w1, #0x24                  	// #36
  417c44:	bl	406bb0 <strchr@plt>
  417c48:	mov	w19, #0x28                  	// #40
  417c4c:	mov	x25, x0
  417c50:	cmp	x26, x28
  417c54:	cbz	x0, 417ca4 <new_job@@Base+0x15c>
  417c58:	add	x27, x25, #0x1
  417c5c:	b.eq	417d48 <new_job@@Base+0x200>  // b.none
  417c60:	sub	x24, x27, x26
  417c64:	mov	x1, x26
  417c68:	mov	x0, x28
  417c6c:	mov	x2, x24
  417c70:	bl	406650 <memmove@plt>
  417c74:	add	x28, x28, x24
  417c78:	ldrb	w1, [x25, #1]
  417c7c:	cmp	w1, #0x7b
  417c80:	ccmp	w1, w19, #0x4, ne  // ne = any
  417c84:	b.eq	417d5c <new_job@@Base+0x214>  // b.none
  417c88:	mov	x26, x27
  417c8c:	mov	w1, #0x24                  	// #36
  417c90:	mov	x0, x26
  417c94:	bl	406bb0 <strchr@plt>
  417c98:	cmp	x26, x28
  417c9c:	mov	x25, x0
  417ca0:	cbnz	x0, 417c58 <new_job@@Base+0x110>
  417ca4:	b.eq	417e2c <new_job@@Base+0x2e4>  // b.none
  417ca8:	mov	x0, x26
  417cac:	bl	406680 <strlen@plt>
  417cb0:	mov	x1, x26
  417cb4:	add	x2, x0, #0x1
  417cb8:	mov	x0, x28
  417cbc:	bl	406650 <memmove@plt>
  417cc0:	ldr	x0, [x23, #32]
  417cc4:	str	x22, [x23, #16]
  417cc8:	ldp	x1, x2, [x29, #112]
  417ccc:	ldr	x0, [x0, x2]
  417cd0:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  417cd4:	ldr	x2, [x29, #128]
  417cd8:	ldrh	w1, [x23, #48]
  417cdc:	str	x0, [x2, x22, lsl #3]
  417ce0:	add	x22, x22, #0x1
  417ce4:	cmp	w1, w22
  417ce8:	b.hi	417c28 <new_job@@Base+0xe0>  // b.pmore
  417cec:	mov	x1, x2
  417cf0:	ldr	x2, [x29, #104]
  417cf4:	ldr	x0, [x2, #40]
  417cf8:	ldr	x3, [x0, #32]
  417cfc:	ldr	w0, [x2, #72]
  417d00:	str	xzr, [x23, #16]
  417d04:	str	x1, [x2, #56]
  417d08:	ldr	x1, [x2, #64]
  417d0c:	nop
  417d10:	cbz	x1, 417d1c <new_job@@Base+0x1d4>
  417d14:	ldrb	w1, [x1]
  417d18:	cbnz	w1, 417f6c <new_job@@Base+0x424>
  417d1c:	ldrh	w1, [x3, #48]
  417d20:	cmp	w1, w0
  417d24:	b.eq	417ea4 <new_job@@Base+0x35c>  // b.none
  417d28:	ldr	x1, [x29, #128]
  417d2c:	add	w2, w0, #0x1
  417d30:	ldr	x4, [x29, #104]
  417d34:	ldr	x1, [x1, w0, uxtw #3]
  417d38:	mov	w0, w2
  417d3c:	str	x1, [x4, #64]
  417d40:	str	w2, [x4, #72]
  417d44:	b	417d10 <new_job@@Base+0x1c8>
  417d48:	ldrb	w1, [x25, #1]
  417d4c:	mov	x28, x27
  417d50:	cmp	w1, #0x28
  417d54:	ccmp	w1, w21, #0x4, ne  // ne = any
  417d58:	b.ne	417c88 <new_job@@Base+0x140>  // b.any
  417d5c:	mov	x9, x28
  417d60:	mov	w0, #0x7d                  	// #125
  417d64:	cmp	w1, #0x28
  417d68:	mov	w7, #0x29                  	// #41
  417d6c:	csel	w7, w7, w0, eq  // eq = none
  417d70:	add	x26, x25, #0x2
  417d74:	strb	w1, [x9], #1
  417d78:	ldrb	w0, [x25, #2]
  417d7c:	mov	x28, x9
  417d80:	cbz	w0, 417c3c <new_job@@Base+0xf4>
  417d84:	mov	w2, #0x0                   	// #0
  417d88:	mov	w10, #0x5c                  	// #92
  417d8c:	mov	w11, #0x20                  	// #32
  417d90:	b	417dbc <new_job@@Base+0x274>
  417d94:	cmp	w0, #0x5c
  417d98:	b.eq	417dd8 <new_job@@Base+0x290>  // b.none
  417d9c:	mov	x3, x28
  417da0:	cmp	w0, w1
  417da4:	cinc	w2, w2, eq  // eq = none
  417da8:	add	x26, x26, #0x1
  417dac:	strb	w0, [x3], #1
  417db0:	mov	x28, x3
  417db4:	ldrb	w0, [x26]
  417db8:	cbz	w0, 417c3c <new_job@@Base+0xf4>
  417dbc:	cmp	w7, w0
  417dc0:	b.ne	417d94 <new_job@@Base+0x24c>  // b.any
  417dc4:	sub	w2, w2, #0x1
  417dc8:	cmn	w2, #0x1
  417dcc:	b.eq	417c3c <new_job@@Base+0xf4>  // b.none
  417dd0:	cmp	w0, #0x5c
  417dd4:	b.ne	417d9c <new_job@@Base+0x254>  // b.any
  417dd8:	ldrb	w4, [x26, #1]
  417ddc:	cmp	w4, #0xa
  417de0:	b.ne	417d9c <new_job@@Base+0x254>  // b.any
  417de4:	sub	x0, x26, #0x1
  417de8:	mov	w4, #0x0                   	// #0
  417dec:	cmp	x27, x0
  417df0:	b.cc	417e08 <new_job@@Base+0x2c0>  // b.lo, b.ul, b.last
  417df4:	b	417e38 <new_job@@Base+0x2f0>
  417df8:	sub	x0, x0, #0x1
  417dfc:	eor	w4, w4, #0x1
  417e00:	cmp	x27, x0
  417e04:	b.eq	417e14 <new_job@@Base+0x2cc>  // b.none
  417e08:	ldrb	w8, [x0]
  417e0c:	cmp	w8, #0x5c
  417e10:	b.eq	417df8 <new_job@@Base+0x2b0>  // b.none
  417e14:	cbz	w4, 417e38 <new_job@@Base+0x2f0>
  417e18:	mov	x3, x28
  417e1c:	add	x26, x26, #0x1
  417e20:	strb	w10, [x3], #1
  417e24:	mov	x28, x3
  417e28:	b	417db4 <new_job@@Base+0x26c>
  417e2c:	str	x22, [x23, #16]
  417e30:	ldr	x0, [x23, #32]
  417e34:	b	417cc8 <new_job@@Base+0x180>
  417e38:	ldrb	w0, [x26, #2]
  417e3c:	add	x5, x26, #0x2
  417e40:	ldr	x3, [x29, #136]
  417e44:	ldrh	w0, [x3, x0, lsl #1]
  417e48:	tst	w0, #0x6
  417e4c:	b.eq	417e64 <new_job@@Base+0x31c>  // b.none
  417e50:	ldrb	w0, [x5, #1]!
  417e54:	ldr	x3, [x29, #136]
  417e58:	ldrh	w0, [x3, x0, lsl #1]
  417e5c:	tst	w0, #0x6
  417e60:	b.ne	417e50 <new_job@@Base+0x308>  // b.any
  417e64:	cmp	x28, x9
  417e68:	b.hi	417e80 <new_job@@Base+0x338>  // b.pmore
  417e6c:	b	417e90 <new_job@@Base+0x348>
  417e70:	sub	x0, x28, #0x1
  417e74:	cmp	x9, x0
  417e78:	b.eq	417e98 <new_job@@Base+0x350>  // b.none
  417e7c:	mov	x28, x0
  417e80:	ldurb	w0, [x28, #-1]
  417e84:	ldr	x3, [x29, #136]
  417e88:	ldrh	w0, [x3, x0, lsl #1]
  417e8c:	tbnz	w0, #1, 417e70 <new_job@@Base+0x328>
  417e90:	mov	x0, x28
  417e94:	add	x28, x28, #0x1
  417e98:	mov	x26, x5
  417e9c:	strb	w11, [x0]
  417ea0:	b	417db4 <new_job@@Base+0x26c>
  417ea4:	ldr	x0, [x29, #104]
  417ea8:	adrp	x19, 449000 <commands_started@@Base+0x170>
  417eac:	str	xzr, [x0, #64]
  417eb0:	ldr	w0, [x19, #2288]
  417eb4:	str	xzr, [x3, #16]
  417eb8:	cbz	w0, 417f80 <new_job@@Base+0x438>
  417ebc:	ldr	w1, [x20, #4]
  417ec0:	add	x21, x19, #0x8f0
  417ec4:	cmp	w0, w1
  417ec8:	b.ne	418138 <new_job@@Base+0x5f0>  // b.any
  417ecc:	nop
  417ed0:	mov	w0, #0x1                   	// #1
  417ed4:	bl	417278 <reap_children@@Base+0xae8>
  417ed8:	ldr	w1, [x20, #4]
  417edc:	ldr	w0, [x21]
  417ee0:	cmp	w1, w0
  417ee4:	b.eq	417ed0 <new_job@@Base+0x388>  // b.none
  417ee8:	ldr	w0, [x20]
  417eec:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  417ef0:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  417ef4:	add	w0, w0, #0x1
  417ef8:	str	w0, [x2, #960]
  417efc:	ldr	w0, [x1, #3468]
  417f00:	cbnz	w0, 418070 <new_job@@Base+0x528>
  417f04:	ldr	x0, [x29, #104]
  417f08:	bl	4170c8 <reap_children@@Base+0x938>
  417f0c:	ldr	w0, [x19, #2288]
  417f10:	cmp	w0, #0x1
  417f14:	b.eq	417f54 <new_job@@Base+0x40c>  // b.none
  417f18:	adrp	x0, 449000 <commands_started@@Base+0x170>
  417f1c:	ldr	w0, [x0, #2116]
  417f20:	cbnz	w0, 417f54 <new_job@@Base+0x40c>
  417f24:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  417f28:	str	xzr, [x0, #3576]
  417f2c:	mov	sp, x29
  417f30:	ldp	x19, x20, [sp, #16]
  417f34:	ldp	x21, x22, [sp, #32]
  417f38:	ldp	x23, x24, [sp, #48]
  417f3c:	ldp	x25, x26, [sp, #64]
  417f40:	ldp	x27, x28, [sp, #80]
  417f44:	ldp	x29, x30, [sp], #144
  417f48:	ret
  417f4c:	mov	w0, #0x1                   	// #1
  417f50:	bl	417278 <reap_children@@Base+0xae8>
  417f54:	ldr	x0, [x29, #112]
  417f58:	ldrb	w0, [x0, #136]
  417f5c:	and	w0, w0, #0xc
  417f60:	cmp	w0, #0x8
  417f64:	b.eq	417f4c <new_job@@Base+0x404>  // b.none
  417f68:	b	417f24 <new_job@@Base+0x3dc>
  417f6c:	adrp	x19, 449000 <commands_started@@Base+0x170>
  417f70:	sub	w0, w0, #0x1
  417f74:	str	x0, [x3, #16]
  417f78:	ldr	w0, [x19, #2288]
  417f7c:	cbnz	w0, 417ebc <new_job@@Base+0x374>
  417f80:	bl	427fc8 <jobserver_enabled@@Base>
  417f84:	cbz	w0, 418138 <new_job@@Base+0x5f0>
  417f88:	adrp	x28, 446000 <expanding_var@@Base+0x320>
  417f8c:	adrp	x22, 42b000 <_IO_stdin_used@@Base+0x20e0>
  417f90:	adrp	x26, 42d000 <_IO_stdin_used@@Base+0x40e0>
  417f94:	add	x21, x28, #0x480
  417f98:	add	x22, x22, #0x8c0
  417f9c:	add	x26, x26, #0xed0
  417fa0:	adrp	x25, 42b000 <_IO_stdin_used@@Base+0x20e0>
  417fa4:	nop
  417fa8:	ldr	w0, [x21]
  417fac:	tbz	w0, #2, 417fd0 <new_job@@Base+0x488>
  417fb0:	ldr	x1, [x20, #48]
  417fb4:	add	x0, x25, #0x8c8
  417fb8:	cmp	x1, #0x0
  417fbc:	csel	x1, x26, x22, ne  // ne = any
  417fc0:	bl	406d60 <printf@plt>
  417fc4:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  417fc8:	ldr	x0, [x0, #440]
  417fcc:	bl	406c20 <fflush@plt>
  417fd0:	ldr	w0, [x20]
  417fd4:	cbz	w0, 417eec <new_job@@Base+0x3a4>
  417fd8:	bl	428400 <jobserver_pre_acquire@@Base>
  417fdc:	mov	w0, #0x0                   	// #0
  417fe0:	bl	417278 <reap_children@@Base+0xae8>
  417fe4:	b	418004 <new_job@@Base+0x4bc>
  417fe8:	mov	w0, #0x0                   	// #0
  417fec:	bl	417278 <reap_children@@Base+0xae8>
  417ff0:	ldr	x0, [x20, #168]
  417ff4:	ldr	x1, [x0, #32]
  417ff8:	str	x1, [x20, #168]
  417ffc:	bl	4170c8 <reap_children@@Base+0x938>
  418000:	cbz	w0, 41800c <new_job@@Base+0x4c4>
  418004:	ldr	x0, [x20, #168]
  418008:	cbnz	x0, 417fe8 <new_job@@Base+0x4a0>
  41800c:	ldr	w0, [x20]
  418010:	cbz	w0, 417eec <new_job@@Base+0x3a4>
  418014:	ldr	x0, [x20, #48]
  418018:	cbz	x0, 4181a4 <new_job@@Base+0x65c>
  41801c:	ldr	x0, [x20, #168]
  418020:	cmp	x0, #0x0
  418024:	cset	w0, ne  // ne = any
  418028:	bl	428408 <jobserver_acquire@@Base>
  41802c:	cmp	w0, #0x1
  418030:	b.ne	417fa8 <new_job@@Base+0x460>  // b.any
  418034:	ldr	w0, [x28, #1152]
  418038:	tbz	w0, #2, 417ee8 <new_job@@Base+0x3a0>
  41803c:	mov	w2, #0x5                   	// #5
  418040:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418044:	mov	x0, #0x0                   	// #0
  418048:	add	x1, x1, #0x928
  41804c:	bl	406cd0 <dcgettext@plt>
  418050:	ldr	x1, [x29, #104]
  418054:	ldr	x2, [x1, #40]
  418058:	ldr	x2, [x2]
  41805c:	bl	406d60 <printf@plt>
  418060:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  418064:	ldr	x0, [x0, #440]
  418068:	bl	406c20 <fflush@plt>
  41806c:	b	417ee8 <new_job@@Base+0x3a0>
  418070:	ldr	x0, [x29, #104]
  418074:	ldr	x1, [x0, #40]
  418078:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  41807c:	add	x0, x0, #0x950
  418080:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  418084:	mov	x20, x0
  418088:	ldr	x21, [x23]
  41808c:	cbz	x21, 418180 <new_job@@Base+0x638>
  418090:	mov	x0, x21
  418094:	bl	406680 <strlen@plt>
  418098:	add	x0, x0, #0x1c
  41809c:	mov	x2, x21
  4180a0:	ldr	x3, [x23, #8]
  4180a4:	and	x0, x0, #0xfffffffffffffff0
  4180a8:	sub	sp, sp, x0
  4180ac:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4180b0:	mov	x21, sp
  4180b4:	add	x1, x1, #0x458
  4180b8:	mov	x0, x21
  4180bc:	bl	406730 <sprintf@plt>
  4180c0:	mov	x0, x21
  4180c4:	bl	406680 <strlen@plt>
  4180c8:	ldr	x24, [x29, #104]
  4180cc:	mov	x22, x0
  4180d0:	ldrb	w1, [x20]
  4180d4:	ldr	x0, [x24, #40]
  4180d8:	ldr	x0, [x0]
  4180dc:	cbz	w1, 418144 <new_job@@Base+0x5fc>
  4180e0:	bl	406680 <strlen@plt>
  4180e4:	mov	x23, x0
  4180e8:	mov	x0, x20
  4180ec:	bl	406680 <strlen@plt>
  4180f0:	mov	w2, #0x5                   	// #5
  4180f4:	mov	x25, x0
  4180f8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4180fc:	mov	x0, #0x0                   	// #0
  418100:	add	x1, x1, #0x978
  418104:	bl	406cd0 <dcgettext@plt>
  418108:	ldr	x4, [x24, #40]
  41810c:	add	x1, x23, x25
  418110:	mov	x2, x0
  418114:	add	x1, x1, x22
  418118:	mov	x3, x21
  41811c:	mov	x5, x20
  418120:	ldr	x4, [x4]
  418124:	mov	w0, #0x0                   	// #0
  418128:	bl	41bc10 <message@@Base>
  41812c:	mov	x0, x20
  418130:	bl	406b90 <free@plt>
  418134:	b	417f04 <new_job@@Base+0x3bc>
  418138:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41813c:	ldr	w0, [x0, #960]
  418140:	b	417eec <new_job@@Base+0x3a4>
  418144:	bl	406680 <strlen@plt>
  418148:	mov	x23, x0
  41814c:	mov	w2, #0x5                   	// #5
  418150:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418154:	mov	x0, #0x0                   	// #0
  418158:	add	x1, x1, #0x958
  41815c:	bl	406cd0 <dcgettext@plt>
  418160:	mov	x2, x0
  418164:	ldr	x4, [x24, #40]
  418168:	add	x1, x23, x22
  41816c:	mov	x3, x21
  418170:	mov	w0, #0x0                   	// #0
  418174:	ldr	x4, [x4]
  418178:	bl	41bc10 <message@@Base>
  41817c:	b	41812c <new_job@@Base+0x5e4>
  418180:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418184:	mov	w2, #0x5                   	// #5
  418188:	add	x1, x1, #0x448
  41818c:	mov	x0, #0x0                   	// #0
  418190:	bl	406cd0 <dcgettext@plt>
  418194:	mov	x21, x0
  418198:	b	4180c0 <new_job@@Base+0x578>
  41819c:	ldr	x1, [x29, #128]
  4181a0:	b	417cf0 <new_job@@Base+0x1a8>
  4181a4:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4181a8:	mov	x1, #0x0                   	// #0
  4181ac:	add	x2, x2, #0x8f0
  4181b0:	bl	41c0a0 <fatal@@Base>
  4181b4:	nop

00000000004181b8 <start_waiting_jobs@@Base>:
  4181b8:	stp	x29, x30, [sp, #-64]!
  4181bc:	mov	x29, sp
  4181c0:	stp	x19, x20, [sp, #16]
  4181c4:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  4181c8:	add	x20, x20, #0x3c0
  4181cc:	ldr	x0, [x20, #168]
  4181d0:	cbz	x0, 418270 <start_waiting_jobs@@Base+0xb8>
  4181d4:	stp	x21, x22, [sp, #32]
  4181d8:	adrp	x22, 449000 <commands_started@@Base+0x170>
  4181dc:	add	x22, x22, #0x868
  4181e0:	stp	x23, x24, [sp, #48]
  4181e4:	adrp	x23, 446000 <expanding_var@@Base+0x320>
  4181e8:	add	x23, x23, #0x480
  4181ec:	b	4181fc <start_waiting_jobs@@Base+0x44>
  4181f0:	cbz	w0, 4182c8 <start_waiting_jobs@@Base+0x110>
  4181f4:	ldr	x0, [x20, #168]
  4181f8:	cbz	x0, 418268 <start_waiting_jobs@@Base+0xb0>
  4181fc:	mov	w0, #0x0                   	// #0
  418200:	bl	417278 <reap_children@@Base+0xae8>
  418204:	ldr	x19, [x20, #168]
  418208:	mov	w0, #0x1                   	// #1
  41820c:	ldp	x1, x21, [x19, #32]
  418210:	str	x1, [x20, #168]
  418214:	bl	428778 <start_remote_job_p@@Base>
  418218:	ldrb	w1, [x19, #80]
  41821c:	bfxil	w1, w0, #0, #1
  418220:	strb	w1, [x19, #80]
  418224:	tbnz	w1, #0, 418230 <start_waiting_jobs@@Base+0x78>
  418228:	ldr	w0, [x20, #4]
  41822c:	cbnz	w0, 4182e4 <start_waiting_jobs@@Base+0x12c>
  418230:	mov	x0, x19
  418234:	bl	416188 <child_execute_job@@Base+0x3a8>
  418238:	ldrb	w1, [x21, #136]
  41823c:	ubfx	x0, x1, #2, #2
  418240:	cmp	w0, #0x2
  418244:	b.eq	41827c <start_waiting_jobs@@Base+0xc4>  // b.none
  418248:	cmp	w0, #0x3
  41824c:	b.ne	4181f0 <start_waiting_jobs@@Base+0x38>  // b.any
  418250:	mov	x0, x21
  418254:	bl	421998 <notice_finished_file@@Base>
  418258:	mov	x0, x19
  41825c:	bl	414ba8 <try_implicit_rule@@Base+0x358>
  418260:	ldr	x0, [x20, #168]
  418264:	cbnz	x0, 4181fc <start_waiting_jobs@@Base+0x44>
  418268:	ldp	x21, x22, [sp, #32]
  41826c:	ldp	x23, x24, [sp, #48]
  418270:	ldp	x19, x20, [sp, #16]
  418274:	ldp	x29, x30, [sp], #64
  418278:	ret
  41827c:	ldr	x0, [x20, #48]
  418280:	str	x0, [x19, #32]
  418284:	ldr	w0, [x19, #76]
  418288:	cmp	w0, #0x0
  41828c:	b.le	4182b0 <start_waiting_jobs@@Base+0xf8>
  418290:	ldr	w0, [x23]
  418294:	tbnz	w0, #2, 418318 <start_waiting_jobs@@Base+0x160>
  418298:	ldrb	w0, [x19, #80]
  41829c:	ldr	w1, [x20, #4]
  4182a0:	orr	w0, w0, #0x20
  4182a4:	strb	w0, [x19, #80]
  4182a8:	add	w1, w1, #0x1
  4182ac:	str	w1, [x20, #4]
  4182b0:	mov	x1, x22
  4182b4:	mov	x2, #0x0                   	// #0
  4182b8:	mov	w0, #0x1                   	// #1
  4182bc:	str	x19, [x20, #48]
  4182c0:	bl	4066e0 <sigprocmask@plt>
  4182c4:	b	4181f4 <start_waiting_jobs@@Base+0x3c>
  4182c8:	and	w1, w1, #0xfffffffc
  4182cc:	strb	w1, [x21, #136]
  4182d0:	mov	x0, x21
  4182d4:	bl	421998 <notice_finished_file@@Base>
  4182d8:	mov	x0, x19
  4182dc:	bl	414ba8 <try_implicit_rule@@Base+0x358>
  4182e0:	b	418260 <start_waiting_jobs@@Base+0xa8>
  4182e4:	bl	414d00 <try_implicit_rule@@Base+0x4b0>
  4182e8:	cbz	w0, 418230 <start_waiting_jobs@@Base+0x78>
  4182ec:	mov	x0, x21
  4182f0:	mov	w1, #0x2                   	// #2
  4182f4:	bl	40e3c0 <set_command_state@@Base>
  4182f8:	ldr	x0, [x20, #168]
  4182fc:	str	x19, [x20, #168]
  418300:	ldp	x21, x22, [sp, #32]
  418304:	ldp	x23, x24, [sp, #48]
  418308:	str	x0, [x19, #32]
  41830c:	ldp	x19, x20, [sp, #16]
  418310:	ldp	x29, x30, [sp], #64
  418314:	ret
  418318:	mov	w2, #0x5                   	// #5
  41831c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418320:	mov	x0, #0x0                   	// #0
  418324:	add	x1, x1, #0x890
  418328:	bl	406cd0 <dcgettext@plt>
  41832c:	mov	x21, x0
  418330:	ldrsw	x2, [x19, #76]
  418334:	add	x0, x20, #0x40
  418338:	ldr	x3, [x19, #40]
  41833c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  418340:	add	x1, x1, #0x48
  418344:	ldr	x24, [x3]
  418348:	bl	406730 <sprintf@plt>
  41834c:	ldrb	w0, [x19, #80]
  418350:	adrp	x4, 42d000 <_IO_stdin_used@@Base+0x40e0>
  418354:	add	x4, x4, #0xed0
  418358:	tbnz	w0, #0, 418380 <start_waiting_jobs@@Base+0x1c8>
  41835c:	mov	x2, x24
  418360:	mov	x0, x21
  418364:	add	x3, x20, #0x40
  418368:	mov	x1, x19
  41836c:	bl	406d60 <printf@plt>
  418370:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  418374:	ldr	x0, [x0, #440]
  418378:	bl	406c20 <fflush@plt>
  41837c:	b	418298 <start_waiting_jobs@@Base+0xe0>
  418380:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418384:	mov	w2, #0x5                   	// #5
  418388:	add	x1, x1, #0x788
  41838c:	mov	x0, #0x0                   	// #0
  418390:	bl	406cd0 <dcgettext@plt>
  418394:	mov	x4, x0
  418398:	b	41835c <start_waiting_jobs@@Base+0x1a4>
  41839c:	nop

00000000004183a0 <exec_command@@Base>:
  4183a0:	stp	x29, x30, [sp, #-48]!
  4183a4:	mov	x29, sp
  4183a8:	stp	x19, x20, [sp, #16]
  4183ac:	mov	x19, x0
  4183b0:	mov	x20, x1
  4183b4:	stp	x21, x22, [sp, #32]
  4183b8:	bl	41afe8 <child_access@@Base>
  4183bc:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  4183c0:	ldr	x0, [x19]
  4183c4:	mov	x1, x19
  4183c8:	str	x20, [x2, #456]
  4183cc:	bl	406b30 <execvp@plt>
  4183d0:	bl	406d70 <__errno_location@plt>
  4183d4:	ldr	w21, [x0]
  4183d8:	mov	x20, x0
  4183dc:	cmp	w21, #0x2
  4183e0:	b.eq	4184b4 <exec_command@@Base+0x114>  // b.none
  4183e4:	cmp	w21, #0x8
  4183e8:	b.ne	4184b4 <exec_command@@Base+0x114>  // b.any
  4183ec:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4183f0:	add	x0, x0, #0x9a0
  4183f4:	bl	406d80 <getenv@plt>
  4183f8:	mov	x22, x0
  4183fc:	cbz	x0, 418500 <exec_command@@Base+0x160>
  418400:	ldr	x0, [x19, #8]
  418404:	cbz	x0, 41850c <exec_command@@Base+0x16c>
  418408:	sub	x4, x19, #0x8
  41840c:	mov	x2, #0x2                   	// #2
  418410:	mov	w1, w2
  418414:	add	x2, x2, #0x1
  418418:	ldr	x3, [x4, x2, lsl #3]
  41841c:	cbnz	x3, 418410 <exec_command@@Base+0x70>
  418420:	add	w3, w1, #0x2
  418424:	sub	w1, w1, #0x1
  418428:	mov	x5, #0xfffffffffffffff8    	// #-8
  41842c:	sbfiz	x3, x3, #3, #32
  418430:	sxtw	x1, w1
  418434:	add	x4, x3, #0xf
  418438:	add	x2, x1, #0x1
  41843c:	and	x4, x4, #0xfffffffffffffff0
  418440:	add	x0, x3, x5
  418444:	mul	x1, x1, x5
  418448:	sub	sp, sp, x4
  41844c:	mov	x21, sp
  418450:	sub	x3, x3, #0x10
  418454:	add	x0, x0, x1
  418458:	add	x1, x3, x1
  41845c:	ldr	x3, [x19]
  418460:	lsl	x2, x2, #3
  418464:	stp	x22, x3, [x21]
  418468:	add	x1, x19, x1
  41846c:	add	x0, x21, x0
  418470:	bl	406640 <memcpy@plt>
  418474:	mov	x1, x21
  418478:	mov	x0, x22
  41847c:	bl	406b30 <execvp@plt>
  418480:	ldr	x0, [x21]
  418484:	bl	406680 <strlen@plt>
  418488:	mov	x19, x0
  41848c:	ldr	w0, [x20]
  418490:	bl	406a40 <strerror@plt>
  418494:	bl	406680 <strlen@plt>
  418498:	add	x19, x19, x0
  41849c:	ldr	w0, [x20]
  4184a0:	ldr	x20, [x21]
  4184a4:	bl	406a40 <strerror@plt>
  4184a8:	mov	x3, x20
  4184ac:	mov	x1, x19
  4184b0:	b	4184e4 <exec_command@@Base+0x144>
  4184b4:	ldr	x0, [x19]
  4184b8:	bl	406680 <strlen@plt>
  4184bc:	mov	x22, x0
  4184c0:	mov	w0, w21
  4184c4:	bl	406a40 <strerror@plt>
  4184c8:	bl	406680 <strlen@plt>
  4184cc:	add	x22, x22, x0
  4184d0:	ldr	w0, [x20]
  4184d4:	ldr	x19, [x19]
  4184d8:	bl	406a40 <strerror@plt>
  4184dc:	mov	x1, x22
  4184e0:	mov	x3, x19
  4184e4:	mov	x4, x0
  4184e8:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4184ec:	add	x2, x2, #0x710
  4184f0:	mov	x0, #0x0                   	// #0
  4184f4:	bl	41bd88 <error@@Base>
  4184f8:	mov	w0, #0x7f                  	// #127
  4184fc:	bl	406660 <_exit@plt>
  418500:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  418504:	ldr	x22, [x0, #160]
  418508:	b	418400 <exec_command@@Base+0x60>
  41850c:	mov	w1, #0x1                   	// #1
  418510:	b	418420 <exec_command@@Base+0x80>
  418514:	nop

0000000000418518 <construct_command_argv@@Base>:
  418518:	stp	x29, x30, [sp, #-80]!
  41851c:	mov	x29, sp
  418520:	stp	x23, x24, [sp, #48]
  418524:	adrp	x23, 449000 <commands_started@@Base+0x170>
  418528:	mov	x24, x1
  41852c:	mov	x1, x2
  418530:	stp	x19, x20, [sp, #16]
  418534:	mov	x19, x2
  418538:	stp	x21, x22, [sp, #32]
  41853c:	mov	x22, x0
  418540:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418544:	add	x0, x0, #0x718
  418548:	stp	x25, x26, [sp, #64]
  41854c:	mov	w25, w3
  418550:	ldr	w26, [x23, #2144]
  418554:	str	wzr, [x23, #2144]
  418558:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  41855c:	mov	x1, x19
  418560:	mov	x21, x0
  418564:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418568:	add	x0, x0, #0x728
  41856c:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  418570:	mov	x20, x0
  418574:	mov	x1, x19
  418578:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  41857c:	add	x0, x0, #0x738
  418580:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  418584:	mov	w5, w25
  418588:	mov	x1, x24
  41858c:	mov	x4, x0
  418590:	mov	x3, x20
  418594:	mov	x2, x21
  418598:	mov	x19, x0
  41859c:	str	w26, [x23, #2144]
  4185a0:	mov	x0, x22
  4185a4:	bl	4153c0 <is_bourne_compatible_shell@@Base+0xc0>
  4185a8:	mov	x22, x0
  4185ac:	mov	x0, x21
  4185b0:	bl	406b90 <free@plt>
  4185b4:	mov	x0, x20
  4185b8:	bl	406b90 <free@plt>
  4185bc:	mov	x0, x19
  4185c0:	bl	406b90 <free@plt>
  4185c4:	mov	x0, x22
  4185c8:	ldp	x19, x20, [sp, #16]
  4185cc:	ldp	x21, x22, [sp, #32]
  4185d0:	ldp	x23, x24, [sp, #48]
  4185d4:	ldp	x25, x26, [sp, #64]
  4185d8:	ldp	x29, x30, [sp], #80
  4185dc:	ret

00000000004185e0 <load_file@@Base>:
  4185e0:	stp	x29, x30, [sp, #-96]!
  4185e4:	mov	x29, sp
  4185e8:	stp	x23, x24, [sp, #48]
  4185ec:	mov	w24, w2
  4185f0:	ldr	x23, [x1]
  4185f4:	stp	x19, x20, [sp, #16]
  4185f8:	mov	x20, x1
  4185fc:	stp	x21, x22, [sp, #32]
  418600:	mov	x22, x0
  418604:	mov	x0, x23
  418608:	stp	x25, x26, [sp, #64]
  41860c:	stp	x27, x28, [sp, #80]
  418610:	bl	406680 <strlen@plt>
  418614:	mov	x26, x0
  418618:	add	x2, x26, #0x1a
  41861c:	mov	x0, x23
  418620:	and	x2, x2, #0xfffffffffffffff0
  418624:	mov	w1, #0x28                  	// #40
  418628:	sub	sp, sp, x2
  41862c:	mov	x25, sp
  418630:	bl	406bb0 <strchr@plt>
  418634:	cbz	x0, 4187b0 <load_file@@Base+0x1d0>
  418638:	add	x28, x0, #0x1
  41863c:	mov	x19, x0
  418640:	mov	w1, #0x29                  	// #41
  418644:	mov	x0, x28
  418648:	bl	406bb0 <strchr@plt>
  41864c:	mov	x21, x0
  418650:	cbz	x0, 4187b0 <load_file@@Base+0x1d0>
  418654:	ldrb	w0, [x0, #1]
  418658:	cbnz	w0, 4187b0 <load_file@@Base+0x1d0>
  41865c:	sub	x19, x19, x23
  418660:	cmp	x28, x21
  418664:	b.eq	418abc <load_file@@Base+0x4dc>  // b.none
  418668:	add	x27, x19, #0x1
  41866c:	sub	x21, x21, x28
  418670:	add	x27, x25, x27
  418674:	mov	x1, x23
  418678:	mov	x2, x19
  41867c:	mov	x0, x25
  418680:	bl	406640 <memcpy@plt>
  418684:	strb	wzr, [x25, x19]
  418688:	str	x25, [x20]
  41868c:	mov	x2, x21
  418690:	mov	x1, x28
  418694:	mov	x0, x27
  418698:	bl	406640 <memcpy@plt>
  41869c:	strb	wzr, [x27, x21]
  4186a0:	mov	x0, x25
  4186a4:	bl	424940 <strcache_add@@Base>
  4186a8:	str	x0, [x20]
  4186ac:	mov	x1, #0x0                   	// #0
  4186b0:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4186b4:	add	x0, x0, #0xc50
  4186b8:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  4186bc:	ldr	x23, [x20]
  4186c0:	mov	x21, x0
  4186c4:	mov	x1, x23
  4186c8:	bl	406cc0 <strstr@plt>
  4186cc:	cbz	x0, 4186ec <load_file@@Base+0x10c>
  4186d0:	mov	x26, x19
  4186d4:	cmp	x21, x0
  4186d8:	b.eq	4188ec <load_file@@Base+0x30c>  // b.none
  4186dc:	ldurb	w1, [x0, #-1]
  4186e0:	cmp	w1, #0x20
  4186e4:	b.eq	4188ec <load_file@@Base+0x30c>  // b.none
  4186e8:	cbz	x27, 4187e4 <load_file@@Base+0x204>
  4186ec:	adrp	x26, 446000 <expanding_var@@Base+0x320>
  4186f0:	ldr	w0, [x26, #1152]
  4186f4:	tbnz	w0, #1, 418868 <load_file@@Base+0x288>
  4186f8:	adrp	x25, 446000 <expanding_var@@Base+0x320>
  4186fc:	ldr	x0, [x25, #1136]
  418700:	cbz	x0, 4188a4 <load_file@@Base+0x2c4>
  418704:	mov	x1, x27
  418708:	bl	4068f0 <dlsym@plt>
  41870c:	mov	x19, x0
  418710:	cbz	x0, 418904 <load_file@@Base+0x324>
  418714:	mov	x0, x22
  418718:	blr	x19
  41871c:	mov	w19, w0
  418720:	cmp	w0, #0x0
  418724:	b.le	418784 <load_file@@Base+0x1a4>
  418728:	mov	x0, x21
  41872c:	bl	406680 <strlen@plt>
  418730:	ldr	x24, [x20]
  418734:	mov	x20, x0
  418738:	mov	x0, x24
  41873c:	bl	406680 <strlen@plt>
  418740:	add	x1, x0, x20
  418744:	add	x1, x1, #0x11
  418748:	and	x1, x1, #0xfffffffffffffff0
  41874c:	sub	sp, sp, x1
  418750:	mov	x23, sp
  418754:	mov	x0, x23
  418758:	cbnz	x20, 4189a8 <load_file@@Base+0x3c8>
  41875c:	mov	x1, x24
  418760:	bl	406c30 <strcpy@plt>
  418764:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418768:	mov	x2, x23
  41876c:	mov	x0, x22
  418770:	add	x1, x1, #0xd38
  418774:	mov	w5, #0x0                   	// #0
  418778:	mov	w4, #0x1                   	// #1
  41877c:	mov	w3, #0x0                   	// #0
  418780:	bl	4264b0 <do_variable_definition@@Base>
  418784:	mov	x0, x21
  418788:	bl	406b90 <free@plt>
  41878c:	mov	sp, x29
  418790:	mov	w0, w19
  418794:	ldp	x19, x20, [sp, #16]
  418798:	ldp	x21, x22, [sp, #32]
  41879c:	ldp	x23, x24, [sp, #48]
  4187a0:	ldp	x25, x26, [sp, #64]
  4187a4:	ldp	x27, x28, [sp, #80]
  4187a8:	ldp	x29, x30, [sp], #96
  4187ac:	ret
  4187b0:	mov	x0, x23
  4187b4:	bl	424940 <strcache_add@@Base>
  4187b8:	str	x0, [x20]
  4187bc:	mov	x1, #0x0                   	// #0
  4187c0:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4187c4:	add	x0, x0, #0xc50
  4187c8:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  4187cc:	mov	x27, #0x0                   	// #0
  4187d0:	ldr	x23, [x20]
  4187d4:	mov	x21, x0
  4187d8:	mov	x1, x23
  4187dc:	bl	406cc0 <strstr@plt>
  4187e0:	cbnz	x0, 4186d4 <load_file@@Base+0xf4>
  4187e4:	mov	w1, #0x2f                  	// #47
  4187e8:	mov	x0, x23
  4187ec:	bl	406a70 <strrchr@plt>
  4187f0:	cmp	x0, #0x0
  4187f4:	csinc	x19, x23, x0, eq  // eq = none
  4187f8:	bl	406b50 <__ctype_b_loc@plt>
  4187fc:	ldrb	w3, [x19]
  418800:	ldr	x2, [x0]
  418804:	cmp	w3, #0x5f
  418808:	ubfiz	x0, x3, #1, #8
  41880c:	ldrh	w0, [x2, x0]
  418810:	and	w0, w0, #0x8
  418814:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  418818:	mov	x0, x25
  41881c:	b.eq	418840 <load_file@@Base+0x260>  // b.none
  418820:	strb	w3, [x0], #1
  418824:	ldrb	w3, [x19, #1]!
  418828:	cmp	w3, #0x5f
  41882c:	ubfiz	x1, x3, #1, #8
  418830:	ldrh	w4, [x2, x1]
  418834:	and	w4, w4, #0x8
  418838:	ccmp	w4, #0x0, #0x0, ne  // ne = any
  41883c:	b.ne	418820 <load_file@@Base+0x240>  // b.any
  418840:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418844:	add	x1, x1, #0xc60
  418848:	adrp	x26, 446000 <expanding_var@@Base+0x320>
  41884c:	mov	x27, x25
  418850:	ldr	x2, [x1]
  418854:	str	x2, [x0]
  418858:	ldur	w1, [x1, #7]
  41885c:	stur	w1, [x0, #7]
  418860:	ldr	w0, [x26, #1152]
  418864:	tbz	w0, #1, 4186f8 <load_file@@Base+0x118>
  418868:	mov	w2, #0x5                   	// #5
  41886c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418870:	mov	x0, #0x0                   	// #0
  418874:	add	x1, x1, #0xc70
  418878:	bl	406cd0 <dcgettext@plt>
  41887c:	adrp	x25, 446000 <expanding_var@@Base+0x320>
  418880:	ldr	x2, [x20]
  418884:	mov	x1, x27
  418888:	bl	406d60 <printf@plt>
  41888c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  418890:	ldr	x0, [x0, #440]
  418894:	bl	406c20 <fflush@plt>
  418898:	ldr	x0, [x25, #1136]
  41889c:	ldr	x23, [x20]
  4188a0:	cbnz	x0, 418704 <load_file@@Base+0x124>
  4188a4:	mov	w1, #0x102                 	// #258
  4188a8:	bl	406820 <dlopen@plt>
  4188ac:	str	x0, [x25, #1136]
  4188b0:	cbnz	x0, 418704 <load_file@@Base+0x124>
  4188b4:	bl	4068e0 <dlerror@plt>
  4188b8:	mov	x20, x0
  4188bc:	bl	406680 <strlen@plt>
  4188c0:	mov	x19, x0
  4188c4:	mov	w2, #0x5                   	// #5
  4188c8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4188cc:	mov	x0, #0x0                   	// #0
  4188d0:	add	x1, x1, #0xc90
  4188d4:	bl	406cd0 <dcgettext@plt>
  4188d8:	mov	x2, x0
  4188dc:	mov	x3, x20
  4188e0:	mov	x1, x19
  4188e4:	mov	x0, x22
  4188e8:	bl	41c0a0 <fatal@@Base>
  4188ec:	ldrb	w1, [x0, x26]
  4188f0:	mov	w0, #0xdf                  	// #223
  4188f4:	tst	w1, w0
  4188f8:	b.ne	4186e8 <load_file@@Base+0x108>  // b.any
  4188fc:	mov	w19, #0x1                   	// #1
  418900:	b	418784 <load_file@@Base+0x1a4>
  418904:	mov	x0, x23
  418908:	mov	w1, #0x2f                  	// #47
  41890c:	bl	406bb0 <strchr@plt>
  418910:	cbz	x0, 418980 <load_file@@Base+0x3a0>
  418914:	mov	x0, x23
  418918:	mov	w1, #0x101                 	// #257
  41891c:	bl	406820 <dlopen@plt>
  418920:	mov	x28, x0
  418924:	cbz	x0, 4189c8 <load_file@@Base+0x3e8>
  418928:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  41892c:	mov	x0, x28
  418930:	add	x1, x1, #0xcb8
  418934:	bl	4068f0 <dlsym@plt>
  418938:	cbz	x0, 418a28 <load_file@@Base+0x448>
  41893c:	mov	x1, x27
  418940:	mov	x0, x28
  418944:	bl	4068f0 <dlsym@plt>
  418948:	mov	x19, x0
  41894c:	cbz	x0, 418a5c <load_file@@Base+0x47c>
  418950:	mov	x0, #0x18                  	// #24
  418954:	bl	41ab28 <xmalloc@@Base>
  418958:	mov	x1, x0
  41895c:	add	x25, x25, #0x470
  418960:	mov	x0, x23
  418964:	mov	x23, x1
  418968:	bl	41abb0 <xstrdup@@Base>
  41896c:	stp	x0, x28, [x23, #8]
  418970:	ldr	x0, [x25, #8]
  418974:	str	x0, [x23]
  418978:	str	x23, [x25, #8]
  41897c:	b	418714 <load_file@@Base+0x134>
  418980:	mov	x2, x23
  418984:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  418988:	mov	w0, #0x2                   	// #2
  41898c:	add	x1, x1, #0x5f0
  418990:	bl	41a930 <concat@@Base>
  418994:	mov	w1, #0x101                 	// #257
  418998:	bl	406820 <dlopen@plt>
  41899c:	mov	x28, x0
  4189a0:	cbnz	x0, 418928 <load_file@@Base+0x348>
  4189a4:	b	418914 <load_file@@Base+0x334>
  4189a8:	mov	x1, x21
  4189ac:	mov	x2, x20
  4189b0:	bl	406640 <memcpy@plt>
  4189b4:	add	x0, x20, #0x1
  4189b8:	mov	w1, #0x20                  	// #32
  4189bc:	add	x0, x23, x0
  4189c0:	strb	w1, [x23, x20]
  4189c4:	b	41875c <load_file@@Base+0x17c>
  4189c8:	bl	4068e0 <dlerror@plt>
  4189cc:	mov	x20, x0
  4189d0:	cbz	w24, 418a04 <load_file@@Base+0x424>
  4189d4:	ldr	w0, [x26, #1152]
  4189d8:	and	w19, w0, #0x1
  4189dc:	tbz	w0, #0, 41878c <load_file@@Base+0x1ac>
  4189e0:	mov	x1, x20
  4189e4:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  4189e8:	add	x0, x0, #0xff0
  4189ec:	bl	406d60 <printf@plt>
  4189f0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4189f4:	mov	w19, #0x0                   	// #0
  4189f8:	ldr	x0, [x0, #440]
  4189fc:	bl	406c20 <fflush@plt>
  418a00:	b	41878c <load_file@@Base+0x1ac>
  418a04:	bl	406680 <strlen@plt>
  418a08:	mov	w19, #0x0                   	// #0
  418a0c:	mov	x1, x0
  418a10:	mov	x3, x20
  418a14:	mov	x0, x22
  418a18:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  418a1c:	add	x2, x2, #0xff0
  418a20:	bl	41bd88 <error@@Base>
  418a24:	b	41878c <load_file@@Base+0x1ac>
  418a28:	mov	x0, x23
  418a2c:	bl	406680 <strlen@plt>
  418a30:	mov	w2, #0x5                   	// #5
  418a34:	mov	x19, x0
  418a38:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418a3c:	mov	x0, #0x0                   	// #0
  418a40:	add	x1, x1, #0xcd8
  418a44:	bl	406cd0 <dcgettext@plt>
  418a48:	mov	x3, x23
  418a4c:	mov	x2, x0
  418a50:	mov	x1, x19
  418a54:	mov	x0, x22
  418a58:	bl	41c0a0 <fatal@@Base>
  418a5c:	bl	4068e0 <dlerror@plt>
  418a60:	mov	x20, x0
  418a64:	mov	x0, x27
  418a68:	bl	406680 <strlen@plt>
  418a6c:	mov	x19, x0
  418a70:	mov	x0, x23
  418a74:	bl	406680 <strlen@plt>
  418a78:	mov	x24, x0
  418a7c:	mov	x0, x20
  418a80:	bl	406680 <strlen@plt>
  418a84:	mov	w2, #0x5                   	// #5
  418a88:	mov	x21, x0
  418a8c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418a90:	mov	x0, #0x0                   	// #0
  418a94:	add	x1, x1, #0xd10
  418a98:	bl	406cd0 <dcgettext@plt>
  418a9c:	add	x1, x19, x24
  418aa0:	mov	x2, x0
  418aa4:	add	x1, x1, x21
  418aa8:	mov	x5, x20
  418aac:	mov	x4, x23
  418ab0:	mov	x3, x27
  418ab4:	mov	x0, x22
  418ab8:	bl	41c0a0 <fatal@@Base>
  418abc:	mov	w2, #0x5                   	// #5
  418ac0:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418ac4:	mov	x0, #0x0                   	// #0
  418ac8:	add	x1, x1, #0xc30
  418acc:	bl	406cd0 <dcgettext@plt>
  418ad0:	mov	x2, x0
  418ad4:	ldr	x3, [x20]
  418ad8:	mov	x1, x26
  418adc:	mov	x0, x22
  418ae0:	bl	41c0a0 <fatal@@Base>
  418ae4:	nop

0000000000418ae8 <unload_file@@Base>:
  418ae8:	stp	x29, x30, [sp, #-48]!
  418aec:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  418af0:	mov	x29, sp
  418af4:	stp	x19, x20, [sp, #16]
  418af8:	ldr	x19, [x1, #1144]
  418afc:	cbz	x19, 418b4c <unload_file@@Base+0x64>
  418b00:	mov	x20, x0
  418b04:	str	x21, [sp, #32]
  418b08:	add	x21, x0, #0x1
  418b0c:	b	418b28 <unload_file@@Base+0x40>
  418b10:	ldrb	w1, [x0]
  418b14:	ldrb	w2, [x20]
  418b18:	cmp	w2, w1
  418b1c:	b.eq	418b58 <unload_file@@Base+0x70>  // b.none
  418b20:	ldr	x19, [x19]
  418b24:	cbz	x19, 418b78 <unload_file@@Base+0x90>
  418b28:	ldr	x0, [x19, #8]
  418b2c:	cmp	x0, x20
  418b30:	b.ne	418b10 <unload_file@@Base+0x28>  // b.any
  418b34:	ldr	x0, [x19, #16]
  418b38:	cbz	x0, 418b20 <unload_file@@Base+0x38>
  418b3c:	bl	4067c0 <dlclose@plt>
  418b40:	cbnz	w0, 418b88 <unload_file@@Base+0xa0>
  418b44:	ldr	x21, [sp, #32]
  418b48:	str	xzr, [x19, #16]
  418b4c:	ldp	x19, x20, [sp, #16]
  418b50:	ldp	x29, x30, [sp], #48
  418b54:	ret
  418b58:	mov	x1, x21
  418b5c:	add	x0, x0, #0x1
  418b60:	cbz	w2, 418b34 <unload_file@@Base+0x4c>
  418b64:	bl	406b40 <strcmp@plt>
  418b68:	cbnz	w0, 418b20 <unload_file@@Base+0x38>
  418b6c:	ldr	x0, [x19, #16]
  418b70:	cbz	x0, 418b20 <unload_file@@Base+0x38>
  418b74:	b	418b3c <unload_file@@Base+0x54>
  418b78:	ldp	x19, x20, [sp, #16]
  418b7c:	ldr	x21, [sp, #32]
  418b80:	ldp	x29, x30, [sp], #48
  418b84:	ret
  418b88:	ldr	x1, [x19, #8]
  418b8c:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418b90:	add	x0, x0, #0xd40
  418b94:	bl	41bf78 <perror_with_name@@Base>
  418b98:	b	418b44 <unload_file@@Base+0x5c>
  418b9c:	nop

0000000000418ba0 <gmk_alloc@@Base>:
  418ba0:	mov	w0, w0
  418ba4:	b	41ab28 <xmalloc@@Base>

0000000000418ba8 <gmk_free@@Base>:
  418ba8:	b	406b90 <free@plt>
  418bac:	nop

0000000000418bb0 <gmk_eval@@Base>:
  418bb0:	stp	x29, x30, [sp, #-80]!
  418bb4:	mov	x29, sp
  418bb8:	stp	x19, x20, [sp, #16]
  418bbc:	mov	x20, x0
  418bc0:	mov	x19, x1
  418bc4:	cbz	x1, 418be0 <gmk_eval@@Base+0x30>
  418bc8:	ldr	x0, [x1]
  418bcc:	add	x19, sp, #0x38
  418bd0:	str	x0, [sp, #56]
  418bd4:	ldr	x0, [x1, #8]
  418bd8:	str	x0, [sp, #64]
  418bdc:	str	xzr, [sp, #72]
  418be0:	add	x1, sp, #0x30
  418be4:	add	x0, sp, #0x28
  418be8:	bl	40cb48 <install_variable_buffer@@Base>
  418bec:	mov	x0, x20
  418bf0:	bl	41abb0 <xstrdup@@Base>
  418bf4:	mov	x1, x19
  418bf8:	mov	x19, x0
  418bfc:	bl	420ca0 <eval_buffer@@Base>
  418c00:	mov	x0, x19
  418c04:	bl	406b90 <free@plt>
  418c08:	ldp	x0, x1, [sp, #40]
  418c0c:	bl	40cb90 <restore_variable_buffer@@Base>
  418c10:	ldp	x19, x20, [sp, #16]
  418c14:	ldp	x29, x30, [sp], #80
  418c18:	ret
  418c1c:	nop

0000000000418c20 <gmk_expand@@Base>:
  418c20:	mov	x1, #0x0                   	// #0
  418c24:	b	40ca98 <allocated_variable_expand_for_file@@Base>

0000000000418c28 <gmk_add_function@@Base>:
  418c28:	adrp	x6, 448000 <output_context@@Base+0x1208>
  418c2c:	mov	x5, x1
  418c30:	mov	x1, x0
  418c34:	ldr	x0, [x6, #3640]
  418c38:	b	4123b0 <define_new_function@@Base>
  418c3c:	nop
  418c40:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  418c44:	ldr	w1, [x0, #1152]
  418c48:	cmp	w1, #0x0
  418c4c:	cset	w1, eq  // eq = none
  418c50:	str	w1, [x0, #1152]
  418c54:	ret
  418c58:	stp	x29, x30, [sp, #-48]!
  418c5c:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x40e0>
  418c60:	add	x0, x0, #0xed0
  418c64:	mov	x29, sp
  418c68:	stp	x19, x20, [sp, #16]
  418c6c:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  418c70:	add	x20, x20, #0x480
  418c74:	adrp	x19, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418c78:	add	x19, x19, #0xd50
  418c7c:	ldp	w2, w1, [x20, #4]
  418c80:	cmp	w2, #0x0
  418c84:	csel	x19, x19, x0, ne  // ne = any
  418c88:	cbz	w1, 418c98 <gmk_add_function@@Base+0x70>
  418c8c:	ldp	x19, x20, [sp, #16]
  418c90:	ldp	x29, x30, [sp], #48
  418c94:	ret
  418c98:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  418c9c:	str	x21, [sp, #32]
  418ca0:	adrp	x21, 449000 <commands_started@@Base+0x170>
  418ca4:	mov	x1, x19
  418ca8:	ldr	x2, [x2, #376]
  418cac:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418cb0:	add	x0, x0, #0xd58
  418cb4:	bl	406d60 <printf@plt>
  418cb8:	ldr	x0, [x21, #1984]
  418cbc:	cbz	x0, 418cc8 <gmk_add_function@@Base+0xa0>
  418cc0:	ldrb	w0, [x0]
  418cc4:	cbnz	w0, 418d40 <gmk_add_function@@Base+0x118>
  418cc8:	mov	w2, #0x5                   	// #5
  418ccc:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418cd0:	mov	x0, #0x0                   	// #0
  418cd4:	add	x1, x1, #0xd68
  418cd8:	bl	406cd0 <dcgettext@plt>
  418cdc:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  418ce0:	mov	x1, x19
  418ce4:	ldr	x2, [x2, #368]
  418ce8:	bl	406d60 <printf@plt>
  418cec:	mov	x1, x19
  418cf0:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418cf4:	add	x0, x0, #0xd90
  418cf8:	bl	406d60 <printf@plt>
  418cfc:	mov	w2, #0x5                   	// #5
  418d00:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418d04:	mov	x0, #0x0                   	// #0
  418d08:	add	x1, x1, #0xdd0
  418d0c:	bl	406cd0 <dcgettext@plt>
  418d10:	mov	x3, x19
  418d14:	mov	x2, x19
  418d18:	mov	x1, x19
  418d1c:	bl	406d60 <printf@plt>
  418d20:	mov	w1, #0x1                   	// #1
  418d24:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  418d28:	str	w1, [x20, #8]
  418d2c:	ldp	x19, x20, [sp, #16]
  418d30:	ldr	x21, [sp, #32]
  418d34:	ldp	x29, x30, [sp], #48
  418d38:	ldr	x0, [x0, #440]
  418d3c:	b	406c20 <fflush@plt>
  418d40:	mov	w2, #0x5                   	// #5
  418d44:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418d48:	mov	x0, #0x0                   	// #0
  418d4c:	add	x1, x1, #0xd78
  418d50:	bl	406cd0 <dcgettext@plt>
  418d54:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  418d58:	mov	x1, x19
  418d5c:	ldr	x3, [x21, #1984]
  418d60:	ldr	x2, [x2, #368]
  418d64:	bl	406d60 <printf@plt>
  418d68:	b	418cec <gmk_add_function@@Base+0xc4>
  418d6c:	nop
  418d70:	stp	x29, x30, [sp, #-336]!
  418d74:	mov	w2, #0x10000000            	// #268435456
  418d78:	mov	x29, sp
  418d7c:	stp	x19, x20, [sp, #16]
  418d80:	add	x20, sp, #0x28
  418d84:	mov	w19, w0
  418d88:	mov	x0, x20
  418d8c:	str	x1, [sp, #32]
  418d90:	str	w2, [sp, #168]
  418d94:	bl	406910 <sigemptyset@plt>
  418d98:	mov	w1, w19
  418d9c:	mov	x0, x20
  418da0:	bl	406d40 <sigaddset@plt>
  418da4:	add	x1, sp, #0x20
  418da8:	add	x2, sp, #0xb8
  418dac:	mov	w0, w19
  418db0:	bl	406a60 <sigaction@plt>
  418db4:	ldr	x1, [sp, #184]
  418db8:	cmp	w0, #0x0
  418dbc:	ldp	x19, x20, [sp, #16]
  418dc0:	csinv	x0, x1, xzr, eq  // eq = none
  418dc4:	ldp	x29, x30, [sp], #336
  418dc8:	ret
  418dcc:	nop
  418dd0:	stp	x29, x30, [sp, #-48]!
  418dd4:	mov	x0, #0x0                   	// #0
  418dd8:	mov	x29, sp
  418ddc:	str	x19, [sp, #16]
  418de0:	bl	4068c0 <time@plt>
  418de4:	str	x0, [sp, #40]
  418de8:	bl	418c58 <gmk_add_function@@Base+0x30>
  418dec:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418df0:	add	x1, x1, #0xea0
  418df4:	mov	w2, #0x5                   	// #5
  418df8:	mov	x0, #0x0                   	// #0
  418dfc:	bl	406cd0 <dcgettext@plt>
  418e00:	mov	x19, x0
  418e04:	add	x0, sp, #0x28
  418e08:	bl	4067d0 <ctime@plt>
  418e0c:	mov	x1, x0
  418e10:	mov	x0, x19
  418e14:	bl	406d60 <printf@plt>
  418e18:	bl	426ee8 <print_variable_data_base@@Base>
  418e1c:	bl	40b778 <print_dir_data_base@@Base>
  418e20:	bl	4244d8 <print_rule_data_base@@Base>
  418e24:	bl	40ec98 <print_file_data_base@@Base>
  418e28:	bl	427a00 <print_vpath_data_base@@Base>
  418e2c:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418e30:	add	x0, x0, #0xec8
  418e34:	bl	424bc0 <strcache_print_stats@@Base>
  418e38:	mov	x0, #0x0                   	// #0
  418e3c:	bl	4068c0 <time@plt>
  418e40:	mov	x3, x0
  418e44:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418e48:	add	x1, x1, #0xed0
  418e4c:	mov	w2, #0x5                   	// #5
  418e50:	mov	x0, #0x0                   	// #0
  418e54:	str	x3, [sp, #40]
  418e58:	bl	406cd0 <dcgettext@plt>
  418e5c:	mov	x19, x0
  418e60:	add	x0, sp, #0x28
  418e64:	bl	4067d0 <ctime@plt>
  418e68:	mov	x1, x0
  418e6c:	mov	x0, x19
  418e70:	bl	406d60 <printf@plt>
  418e74:	ldr	x19, [sp, #16]
  418e78:	ldp	x29, x30, [sp], #48
  418e7c:	ret
  418e80:	stp	x29, x30, [sp, #-32]!
  418e84:	mov	x29, sp
  418e88:	stp	x19, x20, [sp, #16]
  418e8c:	ldrb	w1, [x0]
  418e90:	cbz	w1, 418f40 <gmk_add_function@@Base+0x318>
  418e94:	mov	x19, x0
  418e98:	cmp	w1, #0x7e
  418e9c:	mov	x20, #0x0                   	// #0
  418ea0:	b.eq	418f14 <gmk_add_function@@Base+0x2ec>  // b.none
  418ea4:	cmp	w1, #0x2e
  418ea8:	b.ne	418ef0 <gmk_add_function@@Base+0x2c8>  // b.any
  418eac:	nop
  418eb0:	ldrb	w0, [x19, #1]
  418eb4:	cmp	w0, #0x2f
  418eb8:	b.ne	418ef0 <gmk_add_function@@Base+0x2c8>  // b.any
  418ebc:	ldrb	w0, [x19, #2]
  418ec0:	add	x19, x19, #0x2
  418ec4:	cmp	w0, #0x2f
  418ec8:	b.ne	418edc <gmk_add_function@@Base+0x2b4>  // b.any
  418ecc:	nop
  418ed0:	ldrb	w0, [x19, #1]!
  418ed4:	cmp	w0, #0x2f
  418ed8:	b.eq	418ed0 <gmk_add_function@@Base+0x2a8>  // b.none
  418edc:	cmp	w0, #0x2e
  418ee0:	b.eq	418eb0 <gmk_add_function@@Base+0x288>  // b.none
  418ee4:	cbnz	w0, 418ef0 <gmk_add_function@@Base+0x2c8>
  418ee8:	adrp	x19, 42a000 <_IO_stdin_used@@Base+0x10e0>
  418eec:	add	x19, x19, #0x5f0
  418ef0:	mov	x0, x19
  418ef4:	bl	424940 <strcache_add@@Base>
  418ef8:	mov	x19, x0
  418efc:	mov	x0, x20
  418f00:	bl	406b90 <free@plt>
  418f04:	mov	x0, x19
  418f08:	ldp	x19, x20, [sp, #16]
  418f0c:	ldp	x29, x30, [sp], #32
  418f10:	ret
  418f14:	bl	41e3b0 <tilde_expand@@Base>
  418f18:	mov	x20, x0
  418f1c:	cbz	x0, 418f30 <gmk_add_function@@Base+0x308>
  418f20:	ldrb	w1, [x0]
  418f24:	cbz	w1, 418f30 <gmk_add_function@@Base+0x308>
  418f28:	mov	x19, x0
  418f2c:	b	418ea4 <gmk_add_function@@Base+0x27c>
  418f30:	ldrb	w0, [x19]
  418f34:	cmp	w0, #0x2e
  418f38:	b.eq	418eb0 <gmk_add_function@@Base+0x288>  // b.none
  418f3c:	b	418ee4 <gmk_add_function@@Base+0x2bc>
  418f40:	mov	w2, #0x5                   	// #5
  418f44:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  418f48:	mov	x0, #0x0                   	// #0
  418f4c:	add	x1, x1, #0xef8
  418f50:	bl	406cd0 <dcgettext@plt>
  418f54:	mov	x2, x0
  418f58:	mov	x1, #0x0                   	// #0
  418f5c:	mov	x0, #0x0                   	// #0
  418f60:	bl	41c0a0 <fatal@@Base>
  418f64:	nop
  418f68:	stp	x29, x30, [sp, #-64]!
  418f6c:	mov	x29, sp
  418f70:	stp	x19, x20, [sp, #16]
  418f74:	mov	x20, x0
  418f78:	stp	x21, x22, [sp, #32]
  418f7c:	mov	w21, w1
  418f80:	str	x23, [sp, #48]
  418f84:	ldrb	w0, [x0]
  418f88:	cmp	w0, #0x2d
  418f8c:	b.ne	418f98 <gmk_add_function@@Base+0x370>  // b.any
  418f90:	ldrb	w0, [x20, #1]
  418f94:	cbz	w0, 418fdc <gmk_add_function@@Base+0x3b4>
  418f98:	mov	x1, x20
  418f9c:	mov	w3, #0x0                   	// #0
  418fa0:	mov	w2, #0x4                   	// #4
  418fa4:	mov	x0, #0x0                   	// #0
  418fa8:	bl	426e60 <try_variable_definition@@Base>
  418fac:	mov	x19, x0
  418fb0:	cbz	x0, 418ff4 <gmk_add_function@@Base+0x3cc>
  418fb4:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  418fb8:	add	x20, x20, #0x480
  418fbc:	ldr	x1, [x20, #16]
  418fc0:	cbnz	x1, 418fd0 <gmk_add_function@@Base+0x3a8>
  418fc4:	b	4190e8 <gmk_add_function@@Base+0x4c0>
  418fc8:	ldr	x1, [x1]
  418fcc:	cbz	x1, 4190e8 <gmk_add_function@@Base+0x4c0>
  418fd0:	ldr	x2, [x1, #8]
  418fd4:	cmp	x2, x19
  418fd8:	b.ne	418fc8 <gmk_add_function@@Base+0x3a0>  // b.any
  418fdc:	mov	sp, x29
  418fe0:	ldp	x19, x20, [sp, #16]
  418fe4:	ldp	x21, x22, [sp, #32]
  418fe8:	ldr	x23, [sp, #48]
  418fec:	ldp	x29, x30, [sp], #64
  418ff0:	ret
  418ff4:	cbnz	w21, 418fdc <gmk_add_function@@Base+0x3b4>
  418ff8:	mov	x0, x20
  418ffc:	bl	418e80 <gmk_add_function@@Base+0x258>
  419000:	bl	424940 <strcache_add@@Base>
  419004:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  419008:	bl	40cf50 <enter_file@@Base>
  41900c:	mov	x19, x0
  419010:	ldrb	w0, [x0, #137]
  419014:	add	x20, x20, #0x480
  419018:	orr	w0, w0, #0x10
  41901c:	strb	w0, [x19, #137]
  419020:	ldr	x0, [x20, #24]
  419024:	cbz	x0, 41911c <gmk_add_function@@Base+0x4f4>
  419028:	ldr	x21, [x20, #32]
  41902c:	mov	x0, #0x40                  	// #64
  419030:	bl	41ab50 <xcalloc@@Base>
  419034:	ldr	x1, [x20, #32]
  419038:	str	x0, [x21]
  41903c:	ldr	x0, [x1]
  419040:	str	x0, [x20, #32]
  419044:	str	x19, [x0, #16]
  419048:	adrp	x20, 42b000 <_IO_stdin_used@@Base+0x20e0>
  41904c:	add	x20, x20, #0xf20
  419050:	mov	x1, #0xc                   	// #12
  419054:	mov	x0, x20
  419058:	bl	4257c8 <lookup_variable@@Base>
  41905c:	cbz	x0, 419114 <gmk_add_function@@Base+0x4ec>
  419060:	ldr	x22, [x0, #8]
  419064:	mov	x0, x22
  419068:	bl	406680 <strlen@plt>
  41906c:	mov	x21, x0
  419070:	ldr	x0, [x19]
  419074:	bl	406680 <strlen@plt>
  419078:	add	x3, x21, x0
  41907c:	add	x3, x3, #0x11
  419080:	mov	x1, x22
  419084:	and	x3, x3, #0xfffffffffffffff0
  419088:	mov	x23, x0
  41908c:	sub	sp, sp, x3
  419090:	mov	x2, x21
  419094:	mov	x22, sp
  419098:	mov	x0, x22
  41909c:	bl	406640 <memcpy@plt>
  4190a0:	mov	w1, #0x20                  	// #32
  4190a4:	add	x0, x21, #0x1
  4190a8:	strb	w1, [x22, x21]
  4190ac:	add	x2, x23, #0x1
  4190b0:	add	x0, x22, x0
  4190b4:	ldr	x1, [x19]
  4190b8:	bl	406640 <memcpy@plt>
  4190bc:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  4190c0:	mov	x2, x22
  4190c4:	mov	x0, x20
  4190c8:	mov	x6, #0x0                   	// #0
  4190cc:	ldr	x5, [x1, #336]
  4190d0:	mov	w4, #0x0                   	// #0
  4190d4:	mov	w3, #0x0                   	// #0
  4190d8:	mov	x1, #0xc                   	// #12
  4190dc:	ldr	x5, [x5, #8]
  4190e0:	bl	4253c8 <define_variable_in_set@@Base>
  4190e4:	b	418fdc <gmk_add_function@@Base+0x3b4>
  4190e8:	mov	x0, #0x10                  	// #16
  4190ec:	bl	41ab28 <xmalloc@@Base>
  4190f0:	ldr	x1, [x20, #16]
  4190f4:	stp	x1, x19, [x0]
  4190f8:	str	x0, [x20, #16]
  4190fc:	mov	sp, x29
  419100:	ldp	x19, x20, [sp, #16]
  419104:	ldp	x21, x22, [sp, #32]
  419108:	ldr	x23, [sp, #48]
  41910c:	ldp	x29, x30, [sp], #64
  419110:	ret
  419114:	ldr	x22, [x19]
  419118:	b	4190bc <gmk_add_function@@Base+0x494>
  41911c:	mov	x0, #0x40                  	// #64
  419120:	bl	41ab50 <xcalloc@@Base>
  419124:	stp	x0, x0, [x20, #24]
  419128:	b	419044 <gmk_add_function@@Base+0x41c>
  41912c:	nop
  419130:	stp	x29, x30, [sp, #-32]!
  419134:	mov	x29, sp
  419138:	stp	x19, x20, [sp, #16]
  41913c:	mov	w20, w0
  419140:	bl	427fc8 <jobserver_enabled@@Base>
  419144:	cbz	w0, 419154 <gmk_add_function@@Base+0x52c>
  419148:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  41914c:	ldr	w3, [x19, #960]
  419150:	cbnz	w3, 419170 <gmk_add_function@@Base+0x548>
  419154:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  419158:	add	x19, x19, #0x480
  41915c:	ldr	w0, [x19, #40]
  419160:	cbnz	w0, 4191a4 <gmk_add_function@@Base+0x57c>
  419164:	ldp	x19, x20, [sp, #16]
  419168:	ldp	x29, x30, [sp], #32
  41916c:	ret
  419170:	cmp	w20, #0x2
  419174:	b.ne	4191e4 <gmk_add_function@@Base+0x5bc>  // b.any
  419178:	sub	w3, w3, #0x1
  41917c:	str	w3, [x19, #960]
  419180:	add	x19, x19, #0x3c0
  419184:	cbz	w3, 419154 <gmk_add_function@@Base+0x52c>
  419188:	mov	w0, #0x0                   	// #0
  41918c:	bl	428038 <jobserver_release@@Base>
  419190:	ldr	w0, [x19]
  419194:	sub	w0, w0, #0x1
  419198:	str	w0, [x19]
  41919c:	cbnz	w0, 419188 <gmk_add_function@@Base+0x560>
  4191a0:	b	419154 <gmk_add_function@@Base+0x52c>
  4191a4:	bl	4280d8 <jobserver_acquire_all@@Base>
  4191a8:	add	w3, w0, #0x1
  4191ac:	ldr	w4, [x19, #40]
  4191b0:	cmp	w3, w4
  4191b4:	b.ne	4191cc <gmk_add_function@@Base+0x5a4>  // b.any
  4191b8:	bl	427fe0 <jobserver_clear@@Base>
  4191bc:	ldr	x0, [x19, #48]
  4191c0:	bl	406b90 <free@plt>
  4191c4:	str	xzr, [x19, #48]
  4191c8:	b	419164 <gmk_add_function@@Base+0x53c>
  4191cc:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4191d0:	mov	x1, #0x28                  	// #40
  4191d4:	add	x2, x2, #0xf70
  4191d8:	mov	x0, #0x0                   	// #0
  4191dc:	bl	41bd88 <error@@Base>
  4191e0:	b	4191b8 <gmk_add_function@@Base+0x590>
  4191e4:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4191e8:	mov	x1, #0x14                  	// #20
  4191ec:	add	x2, x2, #0xf30
  4191f0:	mov	x0, #0x0                   	// #0
  4191f4:	bl	41bd88 <error@@Base>
  4191f8:	b	419154 <gmk_add_function@@Base+0x52c>
  4191fc:	nop
  419200:	stp	x29, x30, [sp, #-176]!
  419204:	adrp	x8, 42b000 <_IO_stdin_used@@Base+0x20e0>
  419208:	add	x8, x8, #0xfe0
  41920c:	mov	x29, sp
  419210:	adrp	x5, 42b000 <_IO_stdin_used@@Base+0x20e0>
  419214:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x30e0>
  419218:	add	x5, x5, #0xff0
  41921c:	add	x2, x2, #0x8
  419220:	stp	x21, x22, [sp, #32]
  419224:	mov	w21, w0
  419228:	mov	w22, #0x62                  	// #98
  41922c:	stp	x23, x24, [sp, #48]
  419230:	adrp	x24, 42d000 <_IO_stdin_used@@Base+0x40e0>
  419234:	add	x0, x24, #0xed0
  419238:	ldr	x3, [x8]
  41923c:	adrp	x23, 42e000 <_IO_stdin_used@@Base+0x50e0>
  419240:	add	x23, x23, #0xef0
  419244:	stp	x19, x20, [sp, #16]
  419248:	adrp	x19, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41924c:	add	x19, x19, #0x480
  419250:	stp	x27, x28, [sp, #80]
  419254:	mov	w28, w1
  419258:	stp	x0, x3, [x29, #104]
  41925c:	mov	x20, #0x0                   	// #0
  419260:	ldp	x6, x7, [x2]
  419264:	stp	x25, x26, [sp, #64]
  419268:	ldr	w2, [x2, #16]
  41926c:	ldp	x0, x1, [x5]
  419270:	mov	x26, #0x0                   	// #0
  419274:	ldur	x8, [x8, #6]
  419278:	mov	x25, #0x0                   	// #0
  41927c:	ldr	x5, [x5, #16]
  419280:	stur	x8, [x29, #118]
  419284:	stp	x6, x7, [x29, #128]
  419288:	str	w2, [x29, #144]
  41928c:	stp	x0, x1, [x29, #152]
  419290:	str	x5, [x29, #168]
  419294:	nop
  419298:	ldrb	w0, [x19, #16]
  41929c:	tbz	w0, #1, 4192d8 <gmk_add_function@@Base+0x6b0>
  4192a0:	cbz	w28, 4192a8 <gmk_add_function@@Base+0x680>
  4192a4:	tbnz	w0, #2, 4192d8 <gmk_add_function@@Base+0x6b0>
  4192a8:	ldr	w0, [x19, #4]
  4192ac:	cmp	w0, #0x5
  4192b0:	b.eq	41965c <gmk_add_function@@Base+0xa34>  // b.none
  4192b4:	b.hi	419588 <gmk_add_function@@Base+0x960>  // b.pmore
  4192b8:	cmp	w0, #0x2
  4192bc:	b.eq	4196b0 <gmk_add_function@@Base+0xa88>  // b.none
  4192c0:	b.ls	41951c <gmk_add_function@@Base+0x8f4>  // b.plast
  4192c4:	cbz	w21, 4192d8 <gmk_add_function@@Base+0x6b0>
  4192c8:	ldr	x0, [x19, #8]
  4192cc:	ldr	x2, [x0]
  4192d0:	cbnz	x2, 41974c <gmk_add_function@@Base+0xb24>
  4192d4:	nop
  4192d8:	ldr	w22, [x19, #48]!
  4192dc:	cbnz	w22, 419298 <gmk_add_function@@Base+0x670>
  4192e0:	add	x0, x26, #0x47
  4192e4:	add	x2, x26, #0x38
  4192e8:	and	x0, x0, #0xfffffffffffffff0
  4192ec:	mov	w1, #0x0                   	// #0
  4192f0:	sub	sp, sp, x0
  4192f4:	mov	x26, sp
  4192f8:	mov	x22, x26
  4192fc:	mov	x0, x26
  419300:	bl	406970 <memset@plt>
  419304:	mov	w0, #0x2d                  	// #45
  419308:	strb	w0, [x22], #1
  41930c:	mov	x19, x22
  419310:	cbnz	x20, 419334 <gmk_add_function@@Base+0x70c>
  419314:	b	419728 <gmk_add_function@@Base+0xb00>
  419318:	ldr	x0, [x20, #8]
  41931c:	ldr	w0, [x0]
  419320:	cmp	w0, #0xff
  419324:	b.gt	41933c <gmk_add_function@@Base+0x714>
  419328:	strb	w0, [x19], #1
  41932c:	ldr	x20, [x20]
  419330:	cbz	x20, 41971c <gmk_add_function@@Base+0xaf4>
  419334:	ldr	x0, [x20, #16]
  419338:	cbz	x0, 419318 <gmk_add_function@@Base+0x6f0>
  41933c:	adrp	x23, 446000 <expanding_var@@Base+0x320>
  419340:	add	x23, x23, #0x480
  419344:	add	x25, x23, #0x40
  419348:	mov	w27, #0x2d20                	// #11552
  41934c:	mov	w24, #0x5c                  	// #92
  419350:	mov	x0, x19
  419354:	strh	w27, [x0], #3
  419358:	ldr	x1, [x20, #8]
  41935c:	ldr	w1, [x1]
  419360:	cmp	w1, #0xff
  419364:	b.gt	419640 <gmk_add_function@@Base+0xa18>
  419368:	strb	w1, [x19, #2]
  41936c:	mov	x19, x0
  419370:	ldr	x2, [x20, #16]
  419374:	cbz	x2, 4193f0 <gmk_add_function@@Base+0x7c8>
  419378:	ldrb	w1, [x2]
  41937c:	cbz	w1, 4193f0 <gmk_add_function@@Base+0x7c8>
  419380:	ldr	x0, [x20, #8]
  419384:	ldr	w0, [x0]
  419388:	cmp	w0, #0xff
  41938c:	b.le	4193d0 <gmk_add_function@@Base+0x7a8>
  419390:	mov	w0, #0x3d                  	// #61
  419394:	strb	w0, [x19], #1
  419398:	ldr	x2, [x20, #16]
  41939c:	ldrb	w1, [x2]
  4193a0:	cbnz	w1, 4193d0 <gmk_add_function@@Base+0x7a8>
  4193a4:	b	4193f0 <gmk_add_function@@Base+0x7c8>
  4193a8:	ldrh	w3, [x25, w1, sxtw #1]
  4193ac:	cmp	w1, #0x5c
  4193b0:	and	w1, w3, #0x2
  4193b4:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  4193b8:	b.eq	41950c <gmk_add_function@@Base+0x8e4>  // b.none
  4193bc:	strb	w24, [x19], #2
  4193c0:	ldrb	w1, [x2], #1
  4193c4:	strb	w1, [x0]
  4193c8:	ldrb	w1, [x2]
  4193cc:	cbz	w1, 4193f0 <gmk_add_function@@Base+0x7c8>
  4193d0:	cmp	w1, #0x24
  4193d4:	add	x0, x19, #0x1
  4193d8:	b.ne	4193a8 <gmk_add_function@@Base+0x780>  // b.any
  4193dc:	strb	w1, [x19], #2
  4193e0:	ldrb	w1, [x2], #1
  4193e4:	strb	w1, [x0]
  4193e8:	ldrb	w1, [x2]
  4193ec:	cbnz	w1, 4193d0 <gmk_add_function@@Base+0x7a8>
  4193f0:	ldr	x20, [x20]
  4193f4:	cbnz	x20, 419350 <gmk_add_function@@Base+0x728>
  4193f8:	cmp	x19, x22
  4193fc:	b.eq	419730 <gmk_add_function@@Base+0xb08>  // b.none
  419400:	ldrb	w0, [x26]
  419404:	mov	x2, #0x0                   	// #0
  419408:	cmp	w0, #0x2d
  41940c:	b.eq	419708 <gmk_add_function@@Base+0xae0>  // b.none
  419410:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  419414:	mov	w4, #0x1                   	// #1
  419418:	add	x2, x26, x2
  41941c:	mov	w3, w4
  419420:	ldr	x5, [x20, #336]
  419424:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  419428:	mov	x6, #0x0                   	// #0
  41942c:	add	x0, x0, #0xfc0
  419430:	mov	x1, #0x6                   	// #6
  419434:	ldr	x5, [x5, #8]
  419438:	bl	4253c8 <define_variable_in_set@@Base>
  41943c:	ldr	x0, [x23, #576]
  419440:	cbz	x0, 419464 <gmk_add_function@@Base+0x83c>
  419444:	mov	x0, x19
  419448:	mov	w1, #0x20                  	// #32
  41944c:	ldp	x2, x3, [x29, #128]
  419450:	add	x19, x19, #0x14
  419454:	strb	w1, [x0], #1
  419458:	ldur	w1, [x29, #143]
  41945c:	stp	x2, x3, [x0]
  419460:	stur	w1, [x19, #-4]
  419464:	cbz	w21, 4194ac <gmk_add_function@@Base+0x884>
  419468:	adrp	x1, 449000 <commands_started@@Base+0x170>
  41946c:	add	x0, x29, #0x70
  419470:	add	x21, x29, #0x98
  419474:	ldr	w1, [x1, #2088]
  419478:	cmp	w1, #0x0
  41947c:	csel	x21, x21, x0, ne  // ne = any
  419480:	mov	x0, x21
  419484:	bl	406680 <strlen@plt>
  419488:	mov	x24, x0
  41948c:	mov	x1, x24
  419490:	mov	x0, x21
  419494:	bl	4257c8 <lookup_variable@@Base>
  419498:	cbz	x0, 4194ac <gmk_add_function@@Base+0x884>
  41949c:	ldr	x0, [x0, #8]
  4194a0:	cbz	x0, 4194ac <gmk_add_function@@Base+0x884>
  4194a4:	ldrb	w0, [x0]
  4194a8:	cbnz	w0, 419800 <gmk_add_function@@Base+0xbd8>
  4194ac:	ldr	x2, [x20, #336]
  4194b0:	mov	x6, #0x0                   	// #0
  4194b4:	ldrb	w3, [x26]
  4194b8:	mov	w4, #0x1                   	// #1
  4194bc:	ldr	w1, [x23, #584]
  4194c0:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4194c4:	cmp	w3, #0x2d
  4194c8:	add	x0, x0, #0xfd0
  4194cc:	ldr	x5, [x2, #8]
  4194d0:	csel	x26, x26, x22, ne  // ne = any
  4194d4:	cmp	w1, #0x0
  4194d8:	mov	x2, x26
  4194dc:	cset	w3, ne  // ne = any
  4194e0:	mov	x1, #0x9                   	// #9
  4194e4:	add	w3, w3, #0x2
  4194e8:	bl	4253c8 <define_variable_in_set@@Base>
  4194ec:	mov	sp, x29
  4194f0:	ldp	x19, x20, [sp, #16]
  4194f4:	ldp	x21, x22, [sp, #32]
  4194f8:	ldp	x23, x24, [sp, #48]
  4194fc:	ldp	x25, x26, [sp, #64]
  419500:	ldp	x27, x28, [sp, #80]
  419504:	ldp	x29, x30, [sp], #176
  419508:	ret
  41950c:	mov	x1, x0
  419510:	mov	x0, x19
  419514:	mov	x19, x1
  419518:	b	4193c0 <gmk_add_function@@Base+0x798>
  41951c:	b.eq	41963c <gmk_add_function@@Base+0xa14>  // b.none
  419520:	ldr	x1, [x19, #8]
  419524:	and	w0, w0, #0x1
  419528:	ldr	w1, [x1]
  41952c:	cmp	w1, #0x0
  419530:	cset	w2, ne  // ne = any
  419534:	cmp	w2, w0
  419538:	b.eq	4192d8 <gmk_add_function@@Base+0x6b0>  // b.none
  41953c:	ldr	x0, [x19, #32]
  419540:	cbz	x0, 419550 <gmk_add_function@@Base+0x928>
  419544:	ldr	w0, [x0]
  419548:	cmp	w1, w0
  41954c:	b.eq	4192d8 <gmk_add_function@@Base+0x6b0>  // b.none
  419550:	sub	sp, sp, #0x20
  419554:	mov	x1, sp
  419558:	stp	xzr, x19, [x1]
  41955c:	str	xzr, [x1, #16]
  419560:	cbz	x20, 419854 <gmk_add_function@@Base+0xc2c>
  419564:	str	x1, [x25]
  419568:	cmp	w22, #0xff
  41956c:	b.le	419740 <gmk_add_function@@Base+0xb18>
  419570:	ldr	x0, [x19, #40]
  419574:	add	x26, x26, #0x5
  419578:	mov	x25, x1
  41957c:	bl	406680 <strlen@plt>
  419580:	add	x26, x0, x26
  419584:	b	4192d8 <gmk_add_function@@Base+0x6b0>
  419588:	cmp	w0, #0x6
  41958c:	b.ne	419634 <gmk_add_function@@Base+0xa0c>  // b.any
  419590:	cbz	w21, 4192d8 <gmk_add_function@@Base+0x6b0>
  419594:	ldr	x1, [x19, #32]
  419598:	ldr	x0, [x19, #8]
  41959c:	cbz	x1, 4195b0 <gmk_add_function@@Base+0x988>
  4195a0:	ldr	d1, [x0]
  4195a4:	ldr	d0, [x1]
  4195a8:	fcmp	d1, d0
  4195ac:	b.eq	4192d8 <gmk_add_function@@Base+0x6b0>  // b.none
  4195b0:	ldr	x1, [x19, #24]
  4195b4:	cbz	x1, 4195c8 <gmk_add_function@@Base+0x9a0>
  4195b8:	ldr	d1, [x0]
  4195bc:	ldr	d0, [x1]
  4195c0:	fcmp	d1, d0
  4195c4:	b.eq	41983c <gmk_add_function@@Base+0xc14>  // b.none
  4195c8:	ldr	d0, [x0]
  4195cc:	sub	sp, sp, #0x70
  4195d0:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4195d4:	mov	x27, sp
  4195d8:	add	x1, x0, #0xfb8
  4195dc:	mov	x0, x27
  4195e0:	bl	406730 <sprintf@plt>
  4195e4:	sub	sp, sp, #0x20
  4195e8:	mov	x22, sp
  4195ec:	stp	xzr, x19, [x22]
  4195f0:	str	x27, [x22, #16]
  4195f4:	cbz	x20, 41986c <gmk_add_function@@Base+0xc44>
  4195f8:	str	x22, [x25]
  4195fc:	mov	x0, x27
  419600:	bl	406680 <strlen@plt>
  419604:	add	x0, x0, #0x1
  419608:	ldr	w1, [x19]
  41960c:	add	x0, x0, x0, lsl #1
  419610:	cmp	w1, #0xff
  419614:	add	x26, x26, x0
  419618:	b.le	41985c <gmk_add_function@@Base+0xc34>
  41961c:	ldr	x0, [x19, #40]
  419620:	add	x26, x26, #0x2
  419624:	mov	x25, x22
  419628:	bl	406680 <strlen@plt>
  41962c:	add	x26, x0, x26
  419630:	b	4192d8 <gmk_add_function@@Base+0x6b0>
  419634:	cmp	w0, #0x7
  419638:	b.eq	4192d8 <gmk_add_function@@Base+0x6b0>  // b.none
  41963c:	bl	406ab0 <abort@plt>
  419640:	mov	w1, #0x2d                  	// #45
  419644:	strb	w1, [x19, #2]
  419648:	ldr	x1, [x20, #8]
  41964c:	ldr	x1, [x1, #40]
  419650:	bl	406840 <stpcpy@plt>
  419654:	mov	x19, x0
  419658:	b	419370 <gmk_add_function@@Base+0x748>
  41965c:	cbz	w21, 4192d8 <gmk_add_function@@Base+0x6b0>
  419660:	ldr	x1, [x19, #32]
  419664:	ldr	x0, [x19, #8]
  419668:	cbz	x1, 41967c <gmk_add_function@@Base+0xa54>
  41966c:	ldr	w2, [x0]
  419670:	ldr	w1, [x1]
  419674:	cmp	w2, w1
  419678:	b.eq	4192d8 <gmk_add_function@@Base+0x6b0>  // b.none
  41967c:	ldr	x1, [x19, #24]
  419680:	cbz	x1, 419694 <gmk_add_function@@Base+0xa6c>
  419684:	ldr	w2, [x0]
  419688:	ldr	w1, [x1]
  41968c:	cmp	w2, w1
  419690:	b.eq	41983c <gmk_add_function@@Base+0xc14>  // b.none
  419694:	ldr	w2, [x0]
  419698:	sub	sp, sp, #0x20
  41969c:	mov	x27, sp
  4196a0:	mov	x1, x23
  4196a4:	mov	x0, x27
  4196a8:	bl	406730 <sprintf@plt>
  4196ac:	b	4195e4 <gmk_add_function@@Base+0x9bc>
  4196b0:	cbz	w21, 4192d8 <gmk_add_function@@Base+0x6b0>
  4196b4:	ldr	x0, [x19, #8]
  4196b8:	ldr	x0, [x0]
  4196bc:	cbz	x0, 4192d8 <gmk_add_function@@Base+0x6b0>
  4196c0:	sub	sp, sp, #0x20
  4196c4:	mov	x27, sp
  4196c8:	stp	xzr, x19, [x27]
  4196cc:	str	x0, [x27, #16]
  4196d0:	cbz	x20, 419874 <gmk_add_function@@Base+0xc4c>
  4196d4:	str	x27, [x25]
  4196d8:	bl	406680 <strlen@plt>
  4196dc:	add	x0, x0, #0x1
  4196e0:	cmp	w22, #0xff
  4196e4:	add	x0, x0, x0, lsl #1
  4196e8:	add	x26, x26, x0
  4196ec:	b.le	419864 <gmk_add_function@@Base+0xc3c>
  4196f0:	ldr	x0, [x19, #40]
  4196f4:	add	x26, x26, #0x2
  4196f8:	mov	x25, x27
  4196fc:	bl	406680 <strlen@plt>
  419700:	add	x26, x0, x26
  419704:	b	4192d8 <gmk_add_function@@Base+0x6b0>
  419708:	ldrb	w0, [x26, #1]
  41970c:	cmp	w0, #0x20
  419710:	cset	x2, eq  // eq = none
  419714:	lsl	x2, x2, #1
  419718:	b	419410 <gmk_add_function@@Base+0x7e8>
  41971c:	adrp	x23, 446000 <expanding_var@@Base+0x320>
  419720:	add	x23, x23, #0x480
  419724:	b	4193f8 <gmk_add_function@@Base+0x7d0>
  419728:	adrp	x23, 446000 <expanding_var@@Base+0x320>
  41972c:	add	x23, x23, #0x480
  419730:	mov	x19, x26
  419734:	mov	x2, #0x0                   	// #0
  419738:	strb	wzr, [x26]
  41973c:	b	419410 <gmk_add_function@@Base+0x7e8>
  419740:	add	x26, x26, #0x3
  419744:	mov	x25, x1
  419748:	b	4192d8 <gmk_add_function@@Base+0x6b0>
  41974c:	ldr	w0, [x2, #8]
  419750:	cbz	w0, 4192d8 <gmk_add_function@@Base+0x6b0>
  419754:	sub	w0, w0, #0x1
  419758:	sub	sp, sp, #0x20
  41975c:	ldr	x27, [x2]
  419760:	add	x0, x0, #0x1
  419764:	mov	x24, #0x0                   	// #0
  419768:	mov	x5, x25
  41976c:	mov	x25, sp
  419770:	lsl	x0, x0, #3
  419774:	str	x0, [x29, #96]
  419778:	add	x2, x27, x24
  41977c:	ldr	x0, [x27, x24]
  419780:	stp	xzr, x19, [x25]
  419784:	str	x0, [x25, #16]
  419788:	cbz	x20, 4197f0 <gmk_add_function@@Base+0xbc8>
  41978c:	str	x25, [x5]
  419790:	cbz	x0, 4197f8 <gmk_add_function@@Base+0xbd0>
  419794:	ldr	x0, [x2]
  419798:	bl	406680 <strlen@plt>
  41979c:	add	x0, x0, #0x1
  4197a0:	add	x0, x0, x0, lsl #1
  4197a4:	add	x26, x26, x0
  4197a8:	cmp	w22, #0xff
  4197ac:	b.le	4197c0 <gmk_add_function@@Base+0xb98>
  4197b0:	ldr	x0, [x19, #40]
  4197b4:	add	x26, x26, #0x2
  4197b8:	bl	406680 <strlen@plt>
  4197bc:	add	x26, x0, x26
  4197c0:	ldr	x0, [x29, #96]
  4197c4:	add	x24, x24, #0x8
  4197c8:	cmp	x24, x0
  4197cc:	b.eq	4192d8 <gmk_add_function@@Base+0x6b0>  // b.none
  4197d0:	sub	sp, sp, #0x20
  4197d4:	mov	x5, x25
  4197d8:	mov	x25, sp
  4197dc:	add	x2, x27, x24
  4197e0:	ldr	x0, [x27, x24]
  4197e4:	stp	xzr, x19, [x25]
  4197e8:	str	x0, [x25, #16]
  4197ec:	cbnz	x20, 41978c <gmk_add_function@@Base+0xb64>
  4197f0:	mov	x20, x25
  4197f4:	cbnz	x0, 419794 <gmk_add_function@@Base+0xb6c>
  4197f8:	add	x26, x26, #0x3
  4197fc:	b	4197a8 <gmk_add_function@@Base+0xb80>
  419800:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  419804:	add	x0, x0, #0xfc8
  419808:	mov	x3, x19
  41980c:	mov	w4, #0x2824                	// #10276
  419810:	mov	x1, x21
  419814:	mov	x2, x24
  419818:	ldr	w0, [x0]
  41981c:	str	w0, [x3], #6
  419820:	strh	w4, [x19, #4]
  419824:	mov	x0, x3
  419828:	bl	406640 <memcpy@plt>
  41982c:	mov	x3, x0
  419830:	mov	w0, #0x29                  	// #41
  419834:	strb	w0, [x3, x24]
  419838:	b	4194ac <gmk_add_function@@Base+0x884>
  41983c:	sub	sp, sp, #0x20
  419840:	mov	x1, sp
  419844:	ldr	x0, [x29, #104]
  419848:	stp	xzr, x19, [x1]
  41984c:	str	x0, [x1, #16]
  419850:	cbnz	x20, 419564 <gmk_add_function@@Base+0x93c>
  419854:	mov	x20, x1
  419858:	b	419568 <gmk_add_function@@Base+0x940>
  41985c:	mov	x25, x22
  419860:	b	4192d8 <gmk_add_function@@Base+0x6b0>
  419864:	mov	x25, x27
  419868:	b	4192d8 <gmk_add_function@@Base+0x6b0>
  41986c:	mov	x20, x22
  419870:	b	4195fc <gmk_add_function@@Base+0x9d4>
  419874:	mov	x20, x27
  419878:	b	4196d8 <gmk_add_function@@Base+0xab0>
  41987c:	nop

0000000000419880 <die@@Base>:
  419880:	stp	x29, x30, [sp, #-48]!
  419884:	mov	x29, sp
  419888:	stp	x19, x20, [sp, #16]
  41988c:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  419890:	add	x20, x20, #0x480
  419894:	stp	x21, x22, [sp, #32]
  419898:	mov	w22, w0
  41989c:	ldrb	w1, [x20, #588]
  4198a0:	cbnz	w1, 419950 <die@@Base+0xd0>
  4198a4:	ldr	w0, [x20, #592]
  4198a8:	mov	w1, #0x1                   	// #1
  4198ac:	strb	w1, [x20, #588]
  4198b0:	cbnz	w0, 419958 <die@@Base+0xd8>
  4198b4:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  4198b8:	cmp	w22, #0x0
  4198bc:	cset	w21, ne  // ne = any
  4198c0:	ldr	w0, [x19, #964]
  4198c4:	cbz	w0, 4198e4 <die@@Base+0x64>
  4198c8:	add	x19, x19, #0x3c4
  4198cc:	nop
  4198d0:	mov	w1, w21
  4198d4:	mov	w0, #0x1                   	// #1
  4198d8:	bl	416790 <reap_children@@Base>
  4198dc:	ldr	w2, [x19]
  4198e0:	cbnz	w2, 4198d0 <die@@Base+0x50>
  4198e4:	bl	428770 <remote_cleanup@@Base>
  4198e8:	mov	w0, #0x0                   	// #0
  4198ec:	bl	40d4e8 <remove_intermediates@@Base>
  4198f0:	ldr	w0, [x20, #4]
  4198f4:	cbnz	w0, 419960 <die@@Base+0xe0>
  4198f8:	adrp	x0, 449000 <commands_started@@Base+0x170>
  4198fc:	ldr	w0, [x0, #2016]
  419900:	cbnz	w0, 419968 <die@@Base+0xe8>
  419904:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  419908:	mov	w0, w22
  41990c:	bl	419130 <gmk_add_function@@Base+0x508>
  419910:	ldr	x0, [x19, #3576]
  419914:	cbz	x0, 419938 <die@@Base+0xb8>
  419918:	bl	41b698 <output_close@@Base>
  41991c:	ldr	x1, [x19, #3576]
  419920:	adrp	x0, 449000 <commands_started@@Base+0x170>
  419924:	add	x0, x0, #0x850
  419928:	cmp	x1, x0
  41992c:	b.eq	419934 <die@@Base+0xb4>  // b.none
  419930:	bl	41b698 <output_close@@Base>
  419934:	str	xzr, [x19, #3576]
  419938:	mov	x0, #0x0                   	// #0
  41993c:	bl	41b698 <output_close@@Base>
  419940:	adrp	x0, 449000 <commands_started@@Base+0x170>
  419944:	ldr	x0, [x0, #2008]
  419948:	cbz	x0, 419950 <die@@Base+0xd0>
  41994c:	bl	406b80 <chdir@plt>
  419950:	mov	w0, w22
  419954:	bl	4066a0 <exit@plt>
  419958:	bl	418c58 <gmk_add_function@@Base+0x30>
  41995c:	b	4198b4 <die@@Base+0x34>
  419960:	bl	418dd0 <gmk_add_function@@Base+0x1a8>
  419964:	b	4198f8 <die@@Base+0x78>
  419968:	bl	40ed08 <verify_file_data_base@@Base>
  41996c:	b	419904 <die@@Base+0x84>
  419970:	stp	x29, x30, [sp, #-144]!
  419974:	mov	x29, sp
  419978:	stp	x19, x20, [sp, #16]
  41997c:	mov	w20, w0
  419980:	stp	x23, x24, [sp, #48]
  419984:	adrp	x23, 446000 <expanding_var@@Base+0x320>
  419988:	add	x19, x23, #0x480
  41998c:	stp	x21, x22, [sp, #32]
  419990:	mov	x21, x1
  419994:	mov	w22, w2
  419998:	stp	x25, x26, [sp, #64]
  41999c:	stp	x27, x28, [sp, #80]
  4199a0:	ldrb	w0, [x19, #608]
  4199a4:	cbnz	w0, 419b7c <die@@Base+0x2fc>
  4199a8:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x40e0>
  4199ac:	add	x2, x2, #0x480
  4199b0:	mov	w4, #0x2d                  	// #45
  4199b4:	adrp	x8, 42d000 <_IO_stdin_used@@Base+0x40e0>
  4199b8:	mov	x6, x2
  4199bc:	add	x3, x19, #0x2d0
  4199c0:	add	x8, x8, #0xed0
  4199c4:	add	x1, x19, #0x261
  4199c8:	mov	w5, #0x62                  	// #98
  4199cc:	mov	w11, #0x1                   	// #1
  4199d0:	mov	w10, #0x2                   	// #2
  4199d4:	mov	w9, #0x3a                  	// #58
  4199d8:	strb	w4, [x19, #608]
  4199dc:	b	419a14 <die@@Base+0x194>
  4199e0:	mov	x4, x1
  4199e4:	cmp	w7, #0x6
  4199e8:	strb	w5, [x4], #1
  4199ec:	b.hi	419c70 <die@@Base+0x3f0>  // b.pmore
  4199f0:	cmp	w7, #0x1
  4199f4:	b.hi	419ec4 <die@@Base+0x644>  // b.pmore
  4199f8:	mov	x1, x4
  4199fc:	str	wzr, [x3, #8]
  419a00:	ldr	w5, [x6, #48]!
  419a04:	add	x3, x3, #0x20
  419a08:	add	w4, w0, #0x1
  419a0c:	cbz	w5, 419a6c <die@@Base+0x1ec>
  419a10:	mov	w0, w4
  419a14:	ldr	x4, [x6, #40]
  419a18:	str	xzr, [x3, #16]
  419a1c:	str	w5, [x3, #24]
  419a20:	cmp	x4, #0x0
  419a24:	ldr	w7, [x6, #4]
  419a28:	csel	x4, x8, x4, eq  // eq = none
  419a2c:	str	x4, [x3]
  419a30:	cmp	w5, #0xff
  419a34:	b.le	4199e0 <die@@Base+0x160>
  419a38:	cmp	w7, #0x6
  419a3c:	b.hi	419c60 <die@@Base+0x3e0>  // b.pmore
  419a40:	cmp	w7, #0x1
  419a44:	b.hi	419a50 <die@@Base+0x1d0>  // b.pmore
  419a48:	mov	x4, x1
  419a4c:	b	4199f8 <die@@Base+0x178>
  419a50:	ldr	x4, [x6, #24]
  419a54:	cbz	x4, 419c58 <die@@Base+0x3d8>
  419a58:	str	w10, [x3, #8]
  419a5c:	ldr	w5, [x6, #48]!
  419a60:	add	x3, x3, #0x20
  419a64:	add	w4, w0, #0x1
  419a68:	cbnz	w5, 419a10 <die@@Base+0x190>
  419a6c:	add	x3, x19, #0x2d0
  419a70:	add	x10, x2, #0x800
  419a74:	ubfiz	x4, x4, #5, #32
  419a78:	add	w15, w0, #0x2
  419a7c:	add	x6, x3, x4
  419a80:	add	x9, x2, #0x820
  419a84:	add	w16, w0, #0x3
  419a88:	add	x15, x3, x15, lsl #5
  419a8c:	add	x17, x2, #0x840
  419a90:	add	w8, w0, #0x4
  419a94:	ldp	x4, x5, [x10]
  419a98:	add	x16, x3, x16, lsl #5
  419a9c:	stp	x4, x5, [x6]
  419aa0:	add	x14, x2, #0x860
  419aa4:	add	w7, w0, #0x5
  419aa8:	ldp	x4, x5, [x10, #16]
  419aac:	stp	x4, x5, [x6, #16]
  419ab0:	add	x8, x3, x8, lsl #5
  419ab4:	ldp	x10, x11, [x9]
  419ab8:	add	x13, x2, #0x880
  419abc:	ldp	x4, x5, [x9, #16]
  419ac0:	stp	x10, x11, [x15]
  419ac4:	add	x7, x3, x7, lsl #5
  419ac8:	stp	x4, x5, [x15, #16]
  419acc:	add	w6, w0, #0x6
  419ad0:	add	x12, x2, #0x8a0
  419ad4:	ldp	x4, x5, [x17]
  419ad8:	stp	x4, x5, [x16]
  419adc:	add	x6, x3, x6, lsl #5
  419ae0:	ldp	x4, x5, [x17, #16]
  419ae4:	stp	x4, x5, [x16, #16]
  419ae8:	add	w15, w0, #0x7
  419aec:	ldp	x10, x11, [x14]
  419af0:	stp	x10, x11, [x8]
  419af4:	add	x9, x2, #0x8c0
  419af8:	ldp	x4, x5, [x14, #16]
  419afc:	stp	x4, x5, [x8, #16]
  419b00:	add	w16, w0, #0x8
  419b04:	ldp	x4, x5, [x13]
  419b08:	stp	x4, x5, [x7]
  419b0c:	add	x15, x3, x15, lsl #5
  419b10:	ldp	x4, x5, [x13, #16]
  419b14:	stp	x4, x5, [x7, #16]
  419b18:	add	x10, x2, #0x8e0
  419b1c:	ldp	x4, x5, [x12]
  419b20:	stp	x4, x5, [x6]
  419b24:	add	x8, x3, x16, lsl #5
  419b28:	ldp	x4, x5, [x12, #16]
  419b2c:	add	w11, w0, #0x9
  419b30:	stp	x4, x5, [x6, #16]
  419b34:	add	x2, x2, #0x900
  419b38:	add	w0, w0, #0xa
  419b3c:	ldp	x4, x5, [x9]
  419b40:	stp	x4, x5, [x15]
  419b44:	add	x7, x3, x11, lsl #5
  419b48:	ldp	x4, x5, [x9, #16]
  419b4c:	stp	x4, x5, [x15, #16]
  419b50:	lsl	x6, x0, #5
  419b54:	ldp	x4, x5, [x10]
  419b58:	strb	wzr, [x1]
  419b5c:	stp	x4, x5, [x8]
  419b60:	ldp	x0, x1, [x10, #16]
  419b64:	stp	x0, x1, [x8, #16]
  419b68:	ldp	x0, x1, [x2]
  419b6c:	stp	x0, x1, [x7]
  419b70:	ldp	x0, x1, [x2, #16]
  419b74:	stp	x0, x1, [x7, #16]
  419b78:	str	xzr, [x3, x6]
  419b7c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  419b80:	adrp	x27, 446000 <expanding_var@@Base+0x320>
  419b84:	eor	w1, w22, #0x1
  419b88:	cmp	w20, #0x0
  419b8c:	str	w1, [x0, #464]
  419b90:	str	wzr, [x27, #432]
  419b94:	b.le	41a270 <die@@Base+0x9f0>
  419b98:	adrp	x24, 446000 <expanding_var@@Base+0x320>
  419b9c:	adrp	x28, 42c000 <_IO_stdin_used@@Base+0x30e0>
  419ba0:	add	x24, x24, #0x1a8
  419ba4:	add	x0, x28, #0x78
  419ba8:	add	x25, x27, #0x1b0
  419bac:	mov	w26, #0x0                   	// #0
  419bb0:	str	x0, [sp, #96]
  419bb4:	b	419bcc <die@@Base+0x34c>
  419bb8:	mov	x28, x25
  419bbc:	mov	w26, #0x1                   	// #1
  419bc0:	ldr	w0, [x28]
  419bc4:	cmp	w0, w20
  419bc8:	b.ge	419cb0 <die@@Base+0x430>  // b.tcont
  419bcc:	add	x3, x19, #0x2d0
  419bd0:	add	x2, x19, #0x260
  419bd4:	mov	x1, x21
  419bd8:	mov	w0, w20
  419bdc:	mov	x4, #0x0                   	// #0
  419be0:	bl	406b20 <getopt_long@plt>
  419be4:	cmn	w0, #0x1
  419be8:	ldr	x5, [x24]
  419bec:	b.eq	419ee0 <die@@Base+0x660>  // b.none
  419bf0:	cmp	w0, #0x1
  419bf4:	b.eq	419eb0 <die@@Base+0x630>  // b.none
  419bf8:	cmp	w0, #0x3f
  419bfc:	b.eq	419bb8 <die@@Base+0x338>  // b.none
  419c00:	adrp	x3, 42d000 <_IO_stdin_used@@Base+0x40e0>
  419c04:	mov	w1, #0x62                  	// #98
  419c08:	add	x3, x3, #0x480
  419c0c:	b	419c18 <die@@Base+0x398>
  419c10:	ldr	w1, [x3, #48]!
  419c14:	cbz	w1, 419c9c <die@@Base+0x41c>
  419c18:	cmp	w1, w0
  419c1c:	b.ne	419c10 <die@@Base+0x390>  // b.any
  419c20:	ldr	w1, [x3, #4]
  419c24:	cbz	w22, 419c80 <die@@Base+0x400>
  419c28:	ldrb	w2, [x3, #16]
  419c2c:	cmp	w1, #0x5
  419c30:	and	w2, w2, #0x1
  419c34:	b.eq	41a13c <die@@Base+0x8bc>  // b.none
  419c38:	b.ls	419e00 <die@@Base+0x580>  // b.plast
  419c3c:	cmp	w1, #0x6
  419c40:	b.ne	419c94 <die@@Base+0x414>  // b.any
  419c44:	cbz	x5, 419f30 <die@@Base+0x6b0>
  419c48:	mov	x28, x25
  419c4c:	cbz	w2, 419bc0 <die@@Base+0x340>
  419c50:	b	41a044 <die@@Base+0x7c4>
  419c54:	add	x1, x1, #0x2
  419c58:	str	w11, [x3, #8]
  419c5c:	b	419a00 <die@@Base+0x180>
  419c60:	cmp	w7, #0x7
  419c64:	b.ne	419a00 <die@@Base+0x180>  // b.any
  419c68:	mov	x4, x1
  419c6c:	b	4199f8 <die@@Base+0x178>
  419c70:	mov	x1, x4
  419c74:	cmp	w7, #0x7
  419c78:	b.ne	419a00 <die@@Base+0x180>  // b.any
  419c7c:	b	4199f8 <die@@Base+0x178>
  419c80:	cmp	w1, #0x5
  419c84:	b.eq	41a114 <die@@Base+0x894>  // b.none
  419c88:	b.ls	419f1c <die@@Base+0x69c>  // b.plast
  419c8c:	cmp	w1, #0x6
  419c90:	b.eq	419f28 <die@@Base+0x6a8>  // b.none
  419c94:	cmp	w1, #0x7
  419c98:	b.ne	41a4e0 <die@@Base+0xc60>  // b.any
  419c9c:	mov	x28, x25
  419ca0:	ldr	w0, [x28]
  419ca4:	cmp	w0, w20
  419ca8:	b.lt	419bcc <die@@Base+0x34c>  // b.tstop
  419cac:	nop
  419cb0:	cbnz	w22, 419cc0 <die@@Base+0x440>
  419cb4:	cbnz	w26, 41a3b4 <die@@Base+0xb34>
  419cb8:	ldr	w0, [x19, #2192]
  419cbc:	cbnz	w0, 41a488 <die@@Base+0xc08>
  419cc0:	ldr	w1, [x19, #2208]
  419cc4:	ldr	x0, [x19, #2200]
  419cc8:	cbz	w1, 41a004 <die@@Base+0x784>
  419ccc:	mov	w1, #0xfff                 	// #4095
  419cd0:	str	w1, [x23, #1152]
  419cd4:	cbz	x0, 419f6c <die@@Base+0x6ec>
  419cd8:	ldr	x21, [x0]
  419cdc:	ldr	x20, [x21]
  419ce0:	cbz	x20, 419f6c <die@@Base+0x6ec>
  419ce4:	bl	406830 <__ctype_tolower_loc@plt>
  419ce8:	ldr	x2, [x0]
  419cec:	mov	w5, #0x101                 	// #257
  419cf0:	mov	w4, #0x9                   	// #9
  419cf4:	mov	w3, #0x20                  	// #32
  419cf8:	ldrb	w0, [x20]
  419cfc:	nop
  419d00:	ldr	w0, [x2, x0, lsl #2]
  419d04:	cmp	w0, #0x6a
  419d08:	b.eq	419fc4 <die@@Base+0x744>  // b.none
  419d0c:	b.gt	419f8c <die@@Base+0x70c>
  419d10:	cmp	w0, #0x62
  419d14:	b.eq	419f7c <die@@Base+0x6fc>  // b.none
  419d18:	cmp	w0, #0x69
  419d1c:	b.ne	419fac <die@@Base+0x72c>  // b.any
  419d20:	ldr	w0, [x19]
  419d24:	orr	w0, w0, w4
  419d28:	str	w0, [x19]
  419d2c:	b	419d3c <die@@Base+0x4bc>
  419d30:	cmp	w0, #0x2c
  419d34:	ccmp	w0, w3, #0x4, ne  // ne = any
  419d38:	b.eq	419fd4 <die@@Base+0x754>  // b.none
  419d3c:	mov	x1, x20
  419d40:	ldrb	w0, [x20, #1]!
  419d44:	cbnz	w0, 419d30 <die@@Base+0x4b0>
  419d48:	ldr	x20, [x21, #8]!
  419d4c:	cbnz	x20, 419cf8 <die@@Base+0x478>
  419d50:	ldr	w0, [x23, #1152]
  419d54:	cbnz	w0, 419f6c <die@@Base+0x6ec>
  419d58:	str	wzr, [x19, #2208]
  419d5c:	ldr	x20, [x19, #2216]
  419d60:	cbz	x20, 419ddc <die@@Base+0x55c>
  419d64:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  419d68:	add	x0, x0, #0x170
  419d6c:	cmp	x20, x0
  419d70:	b.eq	41a018 <die@@Base+0x798>  // b.none
  419d74:	ldrb	w21, [x20]
  419d78:	cmp	w21, #0x6e
  419d7c:	b.eq	41a080 <die@@Base+0x800>  // b.none
  419d80:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  419d84:	add	x0, x0, #0xdb8
  419d88:	cmp	x20, x0
  419d8c:	b.eq	41a034 <die@@Base+0x7b4>  // b.none
  419d90:	cmp	w21, #0x6c
  419d94:	b.eq	41a020 <die@@Base+0x7a0>  // b.none
  419d98:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  419d9c:	add	x0, x0, #0x178
  419da0:	cmp	x20, x0
  419da4:	b.eq	41a074 <die@@Base+0x7f4>  // b.none
  419da8:	cmp	w21, #0x74
  419dac:	b.ne	41a0b4 <die@@Base+0x834>  // b.any
  419db0:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  419db4:	add	x0, x20, #0x1
  419db8:	add	x1, x1, #0x179
  419dbc:	bl	406b40 <strcmp@plt>
  419dc0:	cbz	w0, 41a074 <die@@Base+0x7f4>
  419dc4:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  419dc8:	add	x0, x0, #0x180
  419dcc:	cmp	x20, x0
  419dd0:	b.ne	41a0e0 <die@@Base+0x860>  // b.any
  419dd4:	mov	w0, #0x3                   	// #3
  419dd8:	str	w0, [x19, #2224]
  419ddc:	ldr	w0, [x19, #2232]
  419de0:	ldp	x21, x22, [sp, #32]
  419de4:	ldp	x23, x24, [sp, #48]
  419de8:	ldp	x25, x26, [sp, #64]
  419dec:	ldp	x27, x28, [sp, #80]
  419df0:	str	w0, [x19, #2228]
  419df4:	ldp	x19, x20, [sp, #16]
  419df8:	ldp	x29, x30, [sp], #144
  419dfc:	ret
  419e00:	mov	x28, x25
  419e04:	cmp	w1, #0x1
  419e08:	b.hi	419e24 <die@@Base+0x5a4>  // b.pmore
  419e0c:	cbz	w2, 419bc0 <die@@Base+0x340>
  419e10:	ldr	x0, [x3, #8]
  419e14:	eor	w1, w1, #0x1
  419e18:	mov	x28, x25
  419e1c:	str	w1, [x0]
  419e20:	b	419bc0 <die@@Base+0x340>
  419e24:	cbz	w2, 419bc0 <die@@Base+0x340>
  419e28:	cbz	x5, 41a1f0 <die@@Base+0x970>
  419e2c:	ldrb	w2, [x5]
  419e30:	cbnz	w2, 41a208 <die@@Base+0x988>
  419e34:	mov	w1, #0x63                  	// #99
  419e38:	strh	w1, [sp, #136]
  419e3c:	cmp	w0, #0xff
  419e40:	b.gt	41a288 <die@@Base+0xa08>
  419e44:	add	x28, sp, #0x88
  419e48:	strb	w0, [sp, #136]
  419e4c:	mov	x0, x28
  419e50:	str	x3, [sp, #104]
  419e54:	bl	406680 <strlen@plt>
  419e58:	mov	x26, x0
  419e5c:	mov	w2, #0x5                   	// #5
  419e60:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  419e64:	mov	x0, #0x0                   	// #0
  419e68:	add	x1, x1, #0x40
  419e6c:	bl	406cd0 <dcgettext@plt>
  419e70:	mov	x2, x0
  419e74:	ldr	x3, [sp, #104]
  419e78:	adrp	x5, 42c000 <_IO_stdin_used@@Base+0x30e0>
  419e7c:	add	x5, x5, #0x20
  419e80:	mov	x4, x28
  419e84:	mov	x0, #0x0                   	// #0
  419e88:	mov	x28, x25
  419e8c:	ldr	w1, [x3]
  419e90:	adrp	x3, 42c000 <_IO_stdin_used@@Base+0x30e0>
  419e94:	add	x3, x3, #0x28
  419e98:	cmp	w1, #0x100
  419e9c:	mov	x1, x26
  419ea0:	csel	x3, x5, x3, lt  // lt = tstop
  419ea4:	mov	w26, #0x1                   	// #1
  419ea8:	bl	41bd88 <error@@Base>
  419eac:	b	419ca0 <die@@Base+0x420>
  419eb0:	mov	x0, x5
  419eb4:	mov	w1, w22
  419eb8:	mov	x28, x25
  419ebc:	bl	418f68 <gmk_add_function@@Base+0x340>
  419ec0:	b	419bc0 <die@@Base+0x340>
  419ec4:	ldr	x4, [x6, #24]
  419ec8:	strb	w9, [x1, #1]
  419ecc:	cbz	x4, 419c54 <die@@Base+0x3d4>
  419ed0:	add	x1, x1, #0x3
  419ed4:	sturb	w9, [x1, #-1]
  419ed8:	str	w10, [x3, #8]
  419edc:	b	419a5c <die@@Base+0x1dc>
  419ee0:	ldr	w1, [x27, #432]
  419ee4:	cmp	w20, w1
  419ee8:	b.le	419cb0 <die@@Base+0x430>
  419eec:	adrp	x4, 446000 <expanding_var@@Base+0x320>
  419ef0:	add	x28, x4, #0x1b0
  419ef4:	nop
  419ef8:	ldr	x0, [x21, w1, sxtw #3]
  419efc:	add	w2, w1, #0x1
  419f00:	mov	w1, w22
  419f04:	str	w2, [x28]
  419f08:	bl	418f68 <gmk_add_function@@Base+0x340>
  419f0c:	ldr	w1, [x28]
  419f10:	cmp	w1, w20
  419f14:	b.lt	419ef8 <die@@Base+0x678>  // b.tstop
  419f18:	b	419cb0 <die@@Base+0x430>
  419f1c:	cmp	w1, #0x1
  419f20:	b.hi	419e28 <die@@Base+0x5a8>  // b.pmore
  419f24:	b	419e10 <die@@Base+0x590>
  419f28:	cbnz	x5, 41a040 <die@@Base+0x7c0>
  419f2c:	mov	w2, #0x1                   	// #1
  419f30:	ldr	w0, [x27, #432]
  419f34:	add	x28, x27, #0x1b0
  419f38:	cmp	w0, w20
  419f3c:	b.ge	41a278 <die@@Base+0x9f8>  // b.tcont
  419f40:	ldr	x5, [x21, w0, sxtw #3]
  419f44:	ldrb	w6, [x5]
  419f48:	sub	w1, w6, #0x30
  419f4c:	cmp	w6, #0x2e
  419f50:	and	w1, w1, #0xff
  419f54:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  419f58:	b.hi	41a314 <die@@Base+0xa94>  // b.pmore
  419f5c:	add	w0, w0, #0x1
  419f60:	str	w0, [x27, #432]
  419f64:	cbz	w2, 419bc0 <die@@Base+0x340>
  419f68:	b	41a044 <die@@Base+0x7c4>
  419f6c:	adrp	x0, 449000 <commands_started@@Base+0x170>
  419f70:	mov	w1, #0x1                   	// #1
  419f74:	str	w1, [x0, #2016]
  419f78:	b	419d5c <die@@Base+0x4dc>
  419f7c:	ldr	w0, [x19]
  419f80:	orr	w0, w0, #0x1
  419f84:	str	w0, [x19]
  419f88:	b	419d3c <die@@Base+0x4bc>
  419f8c:	cmp	w0, #0x6e
  419f90:	b.eq	419ffc <die@@Base+0x77c>  // b.none
  419f94:	cmp	w0, #0x76
  419f98:	b.ne	419fe4 <die@@Base+0x764>  // b.any
  419f9c:	ldr	w0, [x19]
  419fa0:	orr	w0, w0, #0x3
  419fa4:	str	w0, [x19]
  419fa8:	b	419d3c <die@@Base+0x4bc>
  419fac:	cmp	w0, #0x61
  419fb0:	b.ne	41a1bc <die@@Base+0x93c>  // b.any
  419fb4:	ldr	w0, [x19]
  419fb8:	orr	w0, w0, #0xfff
  419fbc:	str	w0, [x19]
  419fc0:	b	419d3c <die@@Base+0x4bc>
  419fc4:	ldr	w0, [x19]
  419fc8:	orr	w0, w0, #0x4
  419fcc:	str	w0, [x19]
  419fd0:	b	419d3c <die@@Base+0x4bc>
  419fd4:	ldrb	w0, [x1, #2]
  419fd8:	add	x20, x1, #0x2
  419fdc:	cbnz	w0, 419d00 <die@@Base+0x480>
  419fe0:	b	419d48 <die@@Base+0x4c8>
  419fe4:	cmp	w0, #0x6d
  419fe8:	b.ne	41a1bc <die@@Base+0x93c>  // b.any
  419fec:	ldr	w0, [x19]
  419ff0:	orr	w0, w0, w5
  419ff4:	str	w0, [x19]
  419ff8:	b	419d3c <die@@Base+0x4bc>
  419ffc:	str	wzr, [x19]
  41a000:	b	419d3c <die@@Base+0x4bc>
  41a004:	cbz	x0, 419d50 <die@@Base+0x4d0>
  41a008:	ldr	x21, [x0]
  41a00c:	ldr	x20, [x21]
  41a010:	cbnz	x20, 419ce4 <die@@Base+0x464>
  41a014:	b	419d50 <die@@Base+0x4d0>
  41a018:	str	wzr, [x19, #2224]
  41a01c:	b	419ddc <die@@Base+0x55c>
  41a020:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  41a024:	add	x0, x20, #0x1
  41a028:	add	x1, x1, #0xdb9
  41a02c:	bl	406b40 <strcmp@plt>
  41a030:	cbnz	w0, 41a064 <die@@Base+0x7e4>
  41a034:	mov	w0, #0x1                   	// #1
  41a038:	str	w0, [x19, #2224]
  41a03c:	b	419ddc <die@@Base+0x55c>
  41a040:	mov	x28, x25
  41a044:	mov	x0, x5
  41a048:	mov	x1, #0x0                   	// #0
  41a04c:	str	x3, [sp, #104]
  41a050:	bl	4066f0 <strtod@plt>
  41a054:	ldr	x3, [sp, #104]
  41a058:	ldr	x0, [x3, #8]
  41a05c:	str	d0, [x0]
  41a060:	b	419bc0 <die@@Base+0x340>
  41a064:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  41a068:	add	x0, x0, #0x178
  41a06c:	cmp	x20, x0
  41a070:	b.ne	419dc4 <die@@Base+0x544>  // b.any
  41a074:	mov	w0, #0x2                   	// #2
  41a078:	str	w0, [x19, #2224]
  41a07c:	b	419ddc <die@@Base+0x55c>
  41a080:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  41a084:	add	x0, x20, #0x1
  41a088:	add	x1, x1, #0x171
  41a08c:	bl	406b40 <strcmp@plt>
  41a090:	cbz	w0, 41a018 <die@@Base+0x798>
  41a094:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  41a098:	add	x0, x0, #0xdb8
  41a09c:	cmp	x20, x0
  41a0a0:	b.eq	41a034 <die@@Base+0x7b4>  // b.none
  41a0a4:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  41a0a8:	add	x0, x0, #0x178
  41a0ac:	cmp	x20, x0
  41a0b0:	b.eq	41a074 <die@@Base+0x7f4>  // b.none
  41a0b4:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  41a0b8:	add	x0, x0, #0x180
  41a0bc:	cmp	x20, x0
  41a0c0:	b.eq	419dd4 <die@@Base+0x554>  // b.none
  41a0c4:	cmp	w21, #0x72
  41a0c8:	b.ne	41a0e0 <die@@Base+0x860>  // b.any
  41a0cc:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  41a0d0:	add	x0, x20, #0x1
  41a0d4:	add	x1, x1, #0x181
  41a0d8:	bl	406b40 <strcmp@plt>
  41a0dc:	cbz	w0, 419dd4 <die@@Base+0x554>
  41a0e0:	mov	x0, x20
  41a0e4:	bl	406680 <strlen@plt>
  41a0e8:	mov	w2, #0x5                   	// #5
  41a0ec:	mov	x20, x0
  41a0f0:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  41a0f4:	mov	x0, #0x0                   	// #0
  41a0f8:	add	x1, x1, #0x188
  41a0fc:	bl	406cd0 <dcgettext@plt>
  41a100:	ldr	x3, [x19, #2216]
  41a104:	mov	x2, x0
  41a108:	mov	x1, x20
  41a10c:	mov	x0, #0x0                   	// #0
  41a110:	bl	41c0a0 <fatal@@Base>
  41a114:	cbnz	x5, 41a2d0 <die@@Base+0xa50>
  41a118:	ldr	w7, [x27, #432]
  41a11c:	add	x28, x27, #0x1b0
  41a120:	cmp	w20, w7
  41a124:	b.gt	41a2d8 <die@@Base+0xa58>
  41a128:	ldr	x1, [x3, #24]
  41a12c:	ldr	x0, [x3, #8]
  41a130:	ldr	w1, [x1]
  41a134:	str	w1, [x0]
  41a138:	b	419bc0 <die@@Base+0x340>
  41a13c:	cbz	x5, 41a39c <die@@Base+0xb1c>
  41a140:	mov	x28, x25
  41a144:	cbz	w2, 419bc0 <die@@Base+0x340>
  41a148:	mov	x0, x5
  41a14c:	mov	w2, #0xa                   	// #10
  41a150:	mov	x1, #0x0                   	// #0
  41a154:	stp	x5, x3, [sp, #104]
  41a158:	bl	406b60 <strtol@plt>
  41a15c:	mov	x2, x0
  41a160:	ldp	x5, x3, [sp, #104]
  41a164:	b	41a16c <die@@Base+0x8ec>
  41a168:	add	x5, x5, #0x1
  41a16c:	ldrb	w0, [x5]
  41a170:	sub	w1, w0, #0x30
  41a174:	cmp	w1, #0x9
  41a178:	b.ls	41a168 <die@@Base+0x8e8>  // b.plast
  41a17c:	cmp	w0, #0x0
  41a180:	ccmp	w2, #0x0, #0x4, eq  // eq = none
  41a184:	b.gt	41a31c <die@@Base+0xa9c>
  41a188:	ldr	x1, [sp, #96]
  41a18c:	mov	w2, #0x5                   	// #5
  41a190:	mov	x0, #0x0                   	// #0
  41a194:	str	x3, [sp, #104]
  41a198:	mov	w26, #0x1                   	// #1
  41a19c:	bl	406cd0 <dcgettext@plt>
  41a1a0:	mov	x2, x0
  41a1a4:	ldr	x3, [sp, #104]
  41a1a8:	mov	x1, #0x0                   	// #0
  41a1ac:	mov	x0, #0x0                   	// #0
  41a1b0:	ldr	w3, [x3]
  41a1b4:	bl	41bd88 <error@@Base>
  41a1b8:	b	419bc0 <die@@Base+0x340>
  41a1bc:	mov	x0, x20
  41a1c0:	bl	406680 <strlen@plt>
  41a1c4:	mov	w2, #0x5                   	// #5
  41a1c8:	mov	x19, x0
  41a1cc:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  41a1d0:	mov	x0, #0x0                   	// #0
  41a1d4:	add	x1, x1, #0x148
  41a1d8:	bl	406cd0 <dcgettext@plt>
  41a1dc:	mov	x3, x20
  41a1e0:	mov	x2, x0
  41a1e4:	mov	x1, x19
  41a1e8:	mov	x0, #0x0                   	// #0
  41a1ec:	bl	41c0a0 <fatal@@Base>
  41a1f0:	ldr	x0, [x3, #24]
  41a1f4:	str	x3, [sp, #104]
  41a1f8:	bl	41abb0 <xstrdup@@Base>
  41a1fc:	mov	x5, x0
  41a200:	ldr	x3, [sp, #104]
  41a204:	ldr	w1, [x3, #4]
  41a208:	ldr	x6, [x3, #8]
  41a20c:	cmp	w1, #0x2
  41a210:	ldr	x2, [x6]
  41a214:	b.eq	41a328 <die@@Base+0xaa8>  // b.none
  41a218:	cbz	x2, 41a350 <die@@Base+0xad0>
  41a21c:	ldp	w6, w4, [x2, #8]
  41a220:	sub	w0, w4, #0x1
  41a224:	cmp	w6, w0
  41a228:	b.eq	41a2a0 <die@@Base+0xa20>  // b.none
  41a22c:	ldr	w0, [x2, #8]
  41a230:	cmp	w1, #0x4
  41a234:	ldr	x3, [x2]
  41a238:	add	w4, w0, #0x1
  41a23c:	str	w4, [x2, #8]
  41a240:	ubfiz	x28, x0, #3, #32
  41a244:	stp	x2, x3, [sp, #104]
  41a248:	mov	x0, x5
  41a24c:	b.eq	41a290 <die@@Base+0xa10>  // b.none
  41a250:	bl	41abb0 <xstrdup@@Base>
  41a254:	ldp	x2, x3, [sp, #104]
  41a258:	str	x0, [x3, x28]
  41a25c:	ldr	w1, [x2, #8]
  41a260:	mov	x28, x25
  41a264:	ldr	x0, [x2]
  41a268:	str	xzr, [x0, x1, lsl #3]
  41a26c:	b	419bc0 <die@@Base+0x340>
  41a270:	cbz	w22, 419cb8 <die@@Base+0x438>
  41a274:	b	419cc0 <die@@Base+0x440>
  41a278:	cbz	w2, 419cb0 <die@@Base+0x430>
  41a27c:	ldr	x0, [x3, #24]
  41a280:	ldr	d0, [x0]
  41a284:	b	41a058 <die@@Base+0x7d8>
  41a288:	ldr	x28, [x3, #40]
  41a28c:	b	419e4c <die@@Base+0x5cc>
  41a290:	bl	418e80 <gmk_add_function@@Base+0x258>
  41a294:	ldp	x2, x3, [sp, #104]
  41a298:	str	x0, [x3, x28]
  41a29c:	b	41a25c <die@@Base+0x9dc>
  41a2a0:	ldr	x0, [x2]
  41a2a4:	add	w1, w4, #0x5
  41a2a8:	str	w1, [x2, #12]
  41a2ac:	ubfiz	x1, x1, #3, #32
  41a2b0:	stp	x2, x5, [sp, #104]
  41a2b4:	str	x3, [sp, #120]
  41a2b8:	bl	41ab78 <xrealloc@@Base>
  41a2bc:	ldr	x3, [sp, #120]
  41a2c0:	ldp	x2, x5, [sp, #104]
  41a2c4:	ldr	w1, [x3, #4]
  41a2c8:	str	x0, [x2]
  41a2cc:	b	41a22c <die@@Base+0x9ac>
  41a2d0:	mov	x28, x25
  41a2d4:	b	41a148 <die@@Base+0x8c8>
  41a2d8:	mov	w2, #0x1                   	// #1
  41a2dc:	ldr	x5, [x21, w7, sxtw #3]
  41a2e0:	mov	x0, x5
  41a2e4:	b	41a2ec <die@@Base+0xa6c>
  41a2e8:	add	x0, x0, #0x1
  41a2ec:	ldrb	w1, [x0]
  41a2f0:	sub	w6, w1, #0x30
  41a2f4:	cmp	w6, #0x9
  41a2f8:	b.ls	41a2e8 <die@@Base+0xa68>  // b.plast
  41a2fc:	cbnz	w1, 41a394 <die@@Base+0xb14>
  41a300:	add	w7, w7, #0x1
  41a304:	str	w7, [x28]
  41a308:	cbz	w2, 419bc0 <die@@Base+0x340>
  41a30c:	cbz	x5, 41a128 <die@@Base+0x8a8>
  41a310:	b	41a148 <die@@Base+0x8c8>
  41a314:	cbnz	w2, 41a27c <die@@Base+0x9fc>
  41a318:	b	419bcc <die@@Base+0x34c>
  41a31c:	ldr	x0, [x3, #8]
  41a320:	str	w2, [x0]
  41a324:	b	419bc0 <die@@Base+0x340>
  41a328:	mov	x0, x2
  41a32c:	stp	x5, x6, [sp, #104]
  41a330:	bl	406b90 <free@plt>
  41a334:	ldr	x5, [sp, #104]
  41a338:	mov	x28, x25
  41a33c:	mov	x0, x5
  41a340:	bl	41abb0 <xstrdup@@Base>
  41a344:	ldr	x6, [sp, #112]
  41a348:	str	x0, [x6]
  41a34c:	b	419bc0 <die@@Base+0x340>
  41a350:	mov	x0, #0x10                  	// #16
  41a354:	stp	x5, x3, [sp, #112]
  41a358:	bl	41ab28 <xmalloc@@Base>
  41a35c:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41a360:	mov	x2, x0
  41a364:	mov	x0, #0x28                  	// #40
  41a368:	str	x2, [sp, #104]
  41a36c:	ldr	d0, [x1, #1112]
  41a370:	str	d0, [x2, #8]
  41a374:	bl	41ab28 <xmalloc@@Base>
  41a378:	ldr	x3, [sp, #120]
  41a37c:	ldp	x2, x5, [sp, #104]
  41a380:	ldr	w1, [x3, #4]
  41a384:	str	x0, [x2]
  41a388:	ldr	x0, [x3, #8]
  41a38c:	str	x2, [x0]
  41a390:	b	41a22c <die@@Base+0x9ac>
  41a394:	cbnz	w2, 41a128 <die@@Base+0x8a8>
  41a398:	b	419bcc <die@@Base+0x34c>
  41a39c:	ldr	w7, [x27, #432]
  41a3a0:	add	x28, x27, #0x1b0
  41a3a4:	cmp	w7, w20
  41a3a8:	b.lt	41a2dc <die@@Base+0xa5c>  // b.tstop
  41a3ac:	cbnz	w2, 41a128 <die@@Base+0x8a8>
  41a3b0:	b	419cb0 <die@@Base+0x430>
  41a3b4:	ldr	w0, [x19, #592]
  41a3b8:	cbnz	w0, 41a4a8 <die@@Base+0xc28>
  41a3bc:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41a3c0:	ldr	x19, [x0, #416]
  41a3c4:	mov	w2, #0x5                   	// #5
  41a3c8:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  41a3cc:	mov	x0, #0x0                   	// #0
  41a3d0:	add	x1, x1, #0xb0
  41a3d4:	bl	406cd0 <dcgettext@plt>
  41a3d8:	adrp	x2, 449000 <commands_started@@Base+0x170>
  41a3dc:	mov	x1, x0
  41a3e0:	adrp	x20, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41a3e4:	mov	x0, x19
  41a3e8:	ldr	x2, [x2, #2096]
  41a3ec:	add	x20, x20, #0x480
  41a3f0:	add	x20, x20, #0x6f0
  41a3f4:	bl	406dd0 <fprintf@plt>
  41a3f8:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  41a3fc:	add	x1, x1, #0x30
  41a400:	mov	w2, #0x5                   	// #5
  41a404:	mov	x0, #0x0                   	// #0
  41a408:	bl	406cd0 <dcgettext@plt>
  41a40c:	mov	x1, x19
  41a410:	bl	406690 <fputs@plt>
  41a414:	ldr	x1, [x20, #8]!
  41a418:	cbnz	x1, 41a400 <die@@Base+0xb80>
  41a41c:	adrp	x20, 449000 <commands_started@@Base+0x170>
  41a420:	ldr	x0, [x20, #1984]
  41a424:	cbz	x0, 41a430 <die@@Base+0xbb0>
  41a428:	ldrb	w0, [x0]
  41a42c:	cbnz	w0, 41a4b0 <die@@Base+0xc30>
  41a430:	mov	w2, #0x5                   	// #5
  41a434:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  41a438:	mov	x0, #0x0                   	// #0
  41a43c:	add	x1, x1, #0xd8
  41a440:	bl	406cd0 <dcgettext@plt>
  41a444:	mov	x1, x0
  41a448:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  41a44c:	mov	x0, x19
  41a450:	ldr	x2, [x2, #368]
  41a454:	bl	406dd0 <fprintf@plt>
  41a458:	mov	w2, #0x5                   	// #5
  41a45c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  41a460:	mov	x0, #0x0                   	// #0
  41a464:	add	x1, x1, #0x120
  41a468:	bl	406cd0 <dcgettext@plt>
  41a46c:	mov	x1, x0
  41a470:	mov	x0, x19
  41a474:	bl	406dd0 <fprintf@plt>
  41a478:	cmp	w26, #0x0
  41a47c:	mov	w0, #0x2                   	// #2
  41a480:	csel	w0, w26, w0, eq  // eq = none
  41a484:	bl	419880 <die@@Base>
  41a488:	ldr	w0, [x19, #592]
  41a48c:	cbnz	w0, 41a4a0 <die@@Base+0xc20>
  41a490:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41a494:	mov	w26, #0x0                   	// #0
  41a498:	ldr	x19, [x0, #440]
  41a49c:	b	41a3c4 <die@@Base+0xb44>
  41a4a0:	bl	418c58 <gmk_add_function@@Base+0x30>
  41a4a4:	b	41a490 <die@@Base+0xc10>
  41a4a8:	bl	418c58 <gmk_add_function@@Base+0x30>
  41a4ac:	b	41a3bc <die@@Base+0xb3c>
  41a4b0:	mov	w2, #0x5                   	// #5
  41a4b4:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  41a4b8:	mov	x0, #0x0                   	// #0
  41a4bc:	add	x1, x1, #0xf8
  41a4c0:	bl	406cd0 <dcgettext@plt>
  41a4c4:	mov	x1, x0
  41a4c8:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  41a4cc:	mov	x0, x19
  41a4d0:	ldr	x3, [x20, #1984]
  41a4d4:	ldr	x2, [x2, #368]
  41a4d8:	bl	406dd0 <fprintf@plt>
  41a4dc:	b	41a458 <die@@Base+0xbd8>
  41a4e0:	bl	406ab0 <abort@plt>
  41a4e4:	nop
  41a4e8:	stp	x29, x30, [sp, #-48]!
  41a4ec:	add	x2, x1, #0x13
  41a4f0:	mov	w3, #0x2824                	// #10276
  41a4f4:	mov	x29, sp
  41a4f8:	stp	x19, x20, [sp, #16]
  41a4fc:	mov	x19, x1
  41a500:	mov	x1, x0
  41a504:	and	x0, x2, #0xfffffffffffffff0
  41a508:	stp	x21, x22, [sp, #32]
  41a50c:	sub	sp, sp, x0
  41a510:	mov	x20, sp
  41a514:	mov	x2, x19
  41a518:	mov	x0, x20
  41a51c:	add	x19, x20, x19
  41a520:	strh	w3, [x0], #2
  41a524:	bl	406640 <memcpy@plt>
  41a528:	strb	wzr, [x19, #3]
  41a52c:	mov	w1, #0x29                  	// #41
  41a530:	strb	w1, [x19, #2]
  41a534:	mov	x0, x20
  41a538:	bl	40c808 <variable_expand@@Base>
  41a53c:	mov	x19, x0
  41a540:	adrp	x5, 446000 <expanding_var@@Base+0x320>
  41a544:	ldrb	w0, [x0]
  41a548:	add	x20, x5, #0x480
  41a54c:	add	x1, x20, #0x40
  41a550:	ldrh	w0, [x1, x0, lsl #1]
  41a554:	tst	w0, #0x6
  41a558:	b.eq	41a570 <die@@Base+0xcf0>  // b.none
  41a55c:	nop
  41a560:	ldrb	w0, [x19, #1]!
  41a564:	ldrh	w0, [x1, x0, lsl #1]
  41a568:	tst	w0, #0x6
  41a56c:	b.ne	41a560 <die@@Base+0xce0>  // b.any
  41a570:	mov	x0, x19
  41a574:	bl	406680 <strlen@plt>
  41a578:	cbz	x0, 41a624 <die@@Base+0xda4>
  41a57c:	lsl	x1, x0, #3
  41a580:	add	x0, x0, #0x11
  41a584:	add	x1, x1, #0x1f
  41a588:	and	x0, x0, #0xfffffffffffffff0
  41a58c:	and	x1, x1, #0xfffffffffffffff0
  41a590:	mov	w2, #0x2d                  	// #45
  41a594:	sub	sp, sp, x1
  41a598:	mov	x21, sp
  41a59c:	sub	sp, sp, x0
  41a5a0:	mov	x22, sp
  41a5a4:	mov	x3, x22
  41a5a8:	strb	w2, [x3], #1
  41a5ac:	stp	xzr, x3, [x21]
  41a5b0:	ldrb	w1, [x19]
  41a5b4:	cbz	w1, 41a684 <die@@Base+0xe04>
  41a5b8:	add	x5, x20, #0x40
  41a5bc:	mov	w0, #0x1                   	// #1
  41a5c0:	add	x4, x19, #0x1
  41a5c4:	add	x3, x3, #0x1
  41a5c8:	cmp	w1, #0x5c
  41a5cc:	mov	x2, x4
  41a5d0:	b.eq	41a638 <die@@Base+0xdb8>  // b.none
  41a5d4:	ldrh	w6, [x5, w1, sxtw #1]
  41a5d8:	tbnz	w6, #1, 41a654 <die@@Base+0xdd4>
  41a5dc:	sturb	w1, [x3, #-1]
  41a5e0:	ldrb	w1, [x19, #1]
  41a5e4:	mov	x19, x4
  41a5e8:	cbnz	w1, 41a5c0 <die@@Base+0xd40>
  41a5ec:	add	w19, w0, #0x1
  41a5f0:	strb	wzr, [x3]
  41a5f4:	str	xzr, [x21, w19, sxtw #3]
  41a5f8:	ldr	x0, [x21, #8]
  41a5fc:	ldrb	w1, [x0]
  41a600:	cmp	w1, #0x2d
  41a604:	b.eq	41a614 <die@@Base+0xd94>  // b.none
  41a608:	mov	w1, #0x3d                  	// #61
  41a60c:	bl	406bb0 <strchr@plt>
  41a610:	cbz	x0, 41a67c <die@@Base+0xdfc>
  41a614:	mov	x1, x21
  41a618:	mov	w0, w19
  41a61c:	mov	w2, #0x1                   	// #1
  41a620:	bl	419970 <die@@Base+0xf0>
  41a624:	mov	sp, x29
  41a628:	ldp	x19, x20, [sp, #16]
  41a62c:	ldp	x21, x22, [sp, #32]
  41a630:	ldp	x29, x30, [sp], #48
  41a634:	ret
  41a638:	ldrb	w6, [x19, #1]
  41a63c:	cbz	w6, 41a5d4 <die@@Base+0xd54>
  41a640:	add	x2, x19, #0x2
  41a644:	mov	w1, w6
  41a648:	mov	x19, x4
  41a64c:	mov	x4, x2
  41a650:	b	41a5dc <die@@Base+0xd5c>
  41a654:	add	w0, w0, #0x1
  41a658:	sturb	wzr, [x3, #-1]
  41a65c:	str	x3, [x21, w0, sxtw #3]
  41a660:	ldrb	w1, [x2]
  41a664:	mov	x19, x2
  41a668:	add	x2, x2, #0x1
  41a66c:	ldrh	w4, [x5, w1, sxtw #1]
  41a670:	tbnz	w4, #1, 41a660 <die@@Base+0xde0>
  41a674:	cbnz	w1, 41a5c0 <die@@Base+0xd40>
  41a678:	b	41a5ec <die@@Base+0xd6c>
  41a67c:	str	x22, [x21, #8]
  41a680:	b	41a614 <die@@Base+0xd94>
  41a684:	mov	w0, #0x1                   	// #1
  41a688:	b	41a5ec <die@@Base+0xd6c>
  41a68c:	nop

000000000041a690 <alpha_compare@@Base>:
  41a690:	ldr	x0, [x0]
  41a694:	ldr	x1, [x1]
  41a698:	ldrb	w2, [x0]
  41a69c:	ldrb	w3, [x1]
  41a6a0:	cmp	w2, w3
  41a6a4:	b.eq	41a6b0 <alpha_compare@@Base+0x20>  // b.none
  41a6a8:	sub	w0, w2, w3
  41a6ac:	ret
  41a6b0:	b	406b40 <strcmp@plt>
  41a6b4:	nop

000000000041a6b8 <collapse_continuations@@Base>:
  41a6b8:	stp	x29, x30, [sp, #-96]!
  41a6bc:	mov	w1, #0xa                   	// #10
  41a6c0:	mov	x29, sp
  41a6c4:	stp	x21, x22, [sp, #32]
  41a6c8:	mov	x22, x0
  41a6cc:	bl	406bb0 <strchr@plt>
  41a6d0:	cbz	x0, 41a8b4 <collapse_continuations@@Base+0x1fc>
  41a6d4:	stp	x19, x20, [sp, #16]
  41a6d8:	mov	x20, x0
  41a6dc:	mov	x19, x22
  41a6e0:	stp	x23, x24, [sp, #48]
  41a6e4:	adrp	x24, 449000 <commands_started@@Base+0x170>
  41a6e8:	sub	x23, x22, #0x1
  41a6ec:	add	x24, x24, #0x828
  41a6f0:	stp	x25, x26, [sp, #64]
  41a6f4:	adrp	x26, 446000 <expanding_var@@Base+0x320>
  41a6f8:	mov	x25, x22
  41a6fc:	add	x26, x26, #0x4c0
  41a700:	cmp	x20, x22
  41a704:	b.ls	41a714 <collapse_continuations@@Base+0x5c>  // b.plast
  41a708:	ldurb	w0, [x20, #-1]
  41a70c:	cmp	w0, #0x5c
  41a710:	b.eq	41a784 <collapse_continuations@@Base+0xcc>  // b.none
  41a714:	sub	x2, x20, x19
  41a718:	cmp	x25, x19
  41a71c:	add	x20, x20, #0x1
  41a720:	add	x21, x25, x2
  41a724:	b.eq	41a734 <collapse_continuations@@Base+0x7c>  // b.none
  41a728:	mov	x1, x19
  41a72c:	mov	x0, x25
  41a730:	bl	406650 <memmove@plt>
  41a734:	mov	x25, x21
  41a738:	mov	x19, x20
  41a73c:	mov	w0, #0xa                   	// #10
  41a740:	strb	w0, [x25], #1
  41a744:	mov	x0, x19
  41a748:	mov	w1, #0xa                   	// #10
  41a74c:	bl	406bb0 <strchr@plt>
  41a750:	mov	x20, x0
  41a754:	cbnz	x0, 41a700 <collapse_continuations@@Base+0x48>
  41a758:	mov	x0, x19
  41a75c:	bl	406680 <strlen@plt>
  41a760:	mov	x1, x19
  41a764:	add	x2, x0, #0x1
  41a768:	mov	x0, x25
  41a76c:	ldp	x19, x20, [sp, #16]
  41a770:	ldp	x21, x22, [sp, #32]
  41a774:	ldp	x23, x24, [sp, #48]
  41a778:	ldp	x25, x26, [sp, #64]
  41a77c:	ldp	x29, x30, [sp], #96
  41a780:	b	406650 <memmove@plt>
  41a784:	stp	x27, x28, [sp, #80]
  41a788:	sub	x1, x20, #0x2
  41a78c:	mov	w3, #0xfffffffe            	// #-2
  41a790:	cmp	x22, x1
  41a794:	sub	w3, w3, w1
  41a798:	b.ls	41a7a8 <collapse_continuations@@Base+0xf0>  // b.plast
  41a79c:	b	41a8c0 <collapse_continuations@@Base+0x208>
  41a7a0:	cmp	x1, x23
  41a7a4:	b.eq	41a864 <collapse_continuations@@Base+0x1ac>  // b.none
  41a7a8:	ldrb	w0, [x1]
  41a7ac:	add	w2, w3, w1
  41a7b0:	sub	x1, x1, #0x1
  41a7b4:	cmp	w0, #0x5c
  41a7b8:	b.eq	41a7a0 <collapse_continuations@@Base+0xe8>  // b.none
  41a7bc:	add	w2, w2, #0x1
  41a7c0:	cmp	x25, x19
  41a7c4:	and	w28, w2, #0x1
  41a7c8:	add	x27, x20, #0x1
  41a7cc:	add	w0, w2, w2, lsr #31
  41a7d0:	sxtw	x1, w2
  41a7d4:	sub	x2, x20, x19
  41a7d8:	asr	w0, w0, #1
  41a7dc:	add	x2, x2, x1
  41a7e0:	sxtw	x0, w0
  41a7e4:	sub	x2, x2, x0
  41a7e8:	add	x21, x25, x2
  41a7ec:	b.eq	41a894 <collapse_continuations@@Base+0x1dc>  // b.none
  41a7f0:	mov	x1, x19
  41a7f4:	mov	x0, x25
  41a7f8:	mov	x19, x27
  41a7fc:	bl	406650 <memmove@plt>
  41a800:	cbz	w28, 41a89c <collapse_continuations@@Base+0x1e4>
  41a804:	ldrb	w0, [x20, #1]
  41a808:	ldrh	w0, [x26, x0, lsl #1]
  41a80c:	tbz	w0, #1, 41a81c <collapse_continuations@@Base+0x164>
  41a810:	ldrb	w1, [x19, #1]!
  41a814:	ldrh	w1, [x26, x1, lsl #1]
  41a818:	tbnz	w1, #1, 41a810 <collapse_continuations@@Base+0x158>
  41a81c:	ldr	w0, [x24]
  41a820:	cbz	w0, 41a838 <collapse_continuations@@Base+0x180>
  41a824:	add	x25, x21, #0x1
  41a828:	mov	w0, #0x20                  	// #32
  41a82c:	strb	w0, [x21]
  41a830:	ldp	x27, x28, [sp, #80]
  41a834:	b	41a744 <collapse_continuations@@Base+0x8c>
  41a838:	cmp	x22, x21
  41a83c:	b.cc	41a850 <collapse_continuations@@Base+0x198>  // b.lo, b.ul, b.last
  41a840:	b	41a824 <collapse_continuations@@Base+0x16c>
  41a844:	cmp	x22, x0
  41a848:	b.eq	41a8a8 <collapse_continuations@@Base+0x1f0>  // b.none
  41a84c:	mov	x21, x0
  41a850:	ldurb	w1, [x21, #-1]
  41a854:	sub	x0, x21, #0x1
  41a858:	ldrh	w1, [x26, x1, lsl #1]
  41a85c:	tbnz	w1, #1, 41a844 <collapse_continuations@@Base+0x18c>
  41a860:	b	41a824 <collapse_continuations@@Base+0x16c>
  41a864:	add	w0, w2, w2, lsr #31
  41a868:	sxtw	x1, w2
  41a86c:	and	w28, w2, #0x1
  41a870:	sub	x2, x20, x19
  41a874:	asr	w0, w0, #1
  41a878:	add	x2, x2, x1
  41a87c:	cmp	x25, x19
  41a880:	add	x27, x20, #0x1
  41a884:	sxtw	x0, w0
  41a888:	sub	x2, x2, x0
  41a88c:	add	x21, x25, x2
  41a890:	b.ne	41a7f0 <collapse_continuations@@Base+0x138>  // b.any
  41a894:	mov	x19, x27
  41a898:	cbnz	w28, 41a804 <collapse_continuations@@Base+0x14c>
  41a89c:	mov	x20, x27
  41a8a0:	ldp	x27, x28, [sp, #80]
  41a8a4:	b	41a734 <collapse_continuations@@Base+0x7c>
  41a8a8:	mov	x25, x21
  41a8ac:	mov	x21, x22
  41a8b0:	b	41a828 <collapse_continuations@@Base+0x170>
  41a8b4:	ldp	x21, x22, [sp, #32]
  41a8b8:	ldp	x29, x30, [sp], #96
  41a8bc:	ret
  41a8c0:	sub	x2, x20, x19
  41a8c4:	cmp	x25, x19
  41a8c8:	sub	x2, x2, #0x1
  41a8cc:	add	x27, x20, #0x1
  41a8d0:	add	x21, x25, x2
  41a8d4:	mov	w28, #0x1                   	// #1
  41a8d8:	b.ne	41a7f0 <collapse_continuations@@Base+0x138>  // b.any
  41a8dc:	mov	x19, x27
  41a8e0:	b	41a804 <collapse_continuations@@Base+0x14c>
  41a8e4:	nop

000000000041a8e8 <print_spaces@@Base>:
  41a8e8:	cbz	w0, 41a92c <print_spaces@@Base+0x44>
  41a8ec:	stp	x29, x30, [sp, #-32]!
  41a8f0:	mov	x29, sp
  41a8f4:	stp	x19, x20, [sp, #16]
  41a8f8:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  41a8fc:	sub	w19, w0, #0x1
  41a900:	add	x20, x20, #0x1b8
  41a904:	nop
  41a908:	ldr	x1, [x20]
  41a90c:	sub	w19, w19, #0x1
  41a910:	mov	w0, #0x20                  	// #32
  41a914:	bl	406740 <putc@plt>
  41a918:	cmn	w19, #0x1
  41a91c:	b.ne	41a908 <print_spaces@@Base+0x20>  // b.any
  41a920:	ldp	x19, x20, [sp, #16]
  41a924:	ldp	x29, x30, [sp], #32
  41a928:	ret
  41a92c:	ret

000000000041a930 <concat@@Base>:
  41a930:	stp	x29, x30, [sp, #-192]!
  41a934:	mov	x29, sp
  41a938:	add	x8, sp, #0x80
  41a93c:	stp	x19, x20, [sp, #16]
  41a940:	stp	x23, x24, [sp, #48]
  41a944:	mov	w23, #0xffffffc8            	// #-56
  41a948:	stp	x25, x26, [sp, #64]
  41a94c:	adrp	x26, 446000 <expanding_var@@Base+0x320>
  41a950:	add	x25, x26, #0xda8
  41a954:	str	x8, [sp, #112]
  41a958:	stp	w23, wzr, [sp, #120]
  41a95c:	stp	x1, x2, [sp, #136]
  41a960:	add	x1, sp, #0xc0
  41a964:	stp	x1, x1, [sp, #96]
  41a968:	stp	x3, x4, [sp, #152]
  41a96c:	stp	x5, x6, [sp, #168]
  41a970:	str	x7, [sp, #184]
  41a974:	ldr	x20, [x26, #3496]
  41a978:	cbz	w0, 41aafc <concat@@Base+0x1cc>
  41a97c:	stp	x21, x22, [sp, #32]
  41a980:	sub	w21, w0, #0x1
  41a984:	mov	x22, x1
  41a988:	mov	x24, #0x0                   	// #0
  41a98c:	stp	x27, x28, [sp, #80]
  41a990:	tbnz	w23, #31, 41aa4c <concat@@Base+0x11c>
  41a994:	add	x1, x22, #0x8
  41a998:	mov	x0, x22
  41a99c:	mov	x22, x1
  41a9a0:	str	x1, [sp, #96]
  41a9a4:	ldr	x27, [x0]
  41a9a8:	cbz	x27, 41aa10 <concat@@Base+0xe0>
  41a9ac:	mov	x0, x27
  41a9b0:	bl	406680 <strlen@plt>
  41a9b4:	mov	x19, x0
  41a9b8:	cbz	x0, 41aa10 <concat@@Base+0xe0>
  41a9bc:	add	x28, x0, x24
  41a9c0:	cmp	x28, x20
  41a9c4:	ldr	x0, [x25, #8]
  41a9c8:	b.ls	41a9fc <concat@@Base+0xcc>  // b.plast
  41a9cc:	cmp	x20, #0x0
  41a9d0:	mov	x1, #0x3c                  	// #60
  41a9d4:	csel	x20, x20, x1, ne  // ne = any
  41a9d8:	add	x20, x20, x19
  41a9dc:	lsl	x20, x20, #1
  41a9e0:	str	x20, [x25]
  41a9e4:	cmp	x20, #0x0
  41a9e8:	csinc	x1, x20, xzr, ne  // ne = any
  41a9ec:	cbz	x0, 41aa84 <concat@@Base+0x154>
  41a9f0:	bl	406a00 <realloc@plt>
  41a9f4:	cbz	x0, 41ab20 <concat@@Base+0x1f0>
  41a9f8:	str	x0, [x25, #8]
  41a9fc:	add	x0, x0, x24
  41aa00:	mov	x2, x19
  41aa04:	mov	x24, x28
  41aa08:	mov	x1, x27
  41aa0c:	bl	406640 <memcpy@plt>
  41aa10:	sub	w21, w21, #0x1
  41aa14:	cmn	w21, #0x1
  41aa18:	b.ne	41a990 <concat@@Base+0x60>  // b.any
  41aa1c:	cmp	x24, x20
  41aa20:	ldr	x0, [x25, #8]
  41aa24:	b.eq	41aa90 <concat@@Base+0x160>  // b.none
  41aa28:	ldp	x21, x22, [sp, #32]
  41aa2c:	add	x24, x0, x24
  41aa30:	ldp	x27, x28, [sp, #80]
  41aa34:	strb	wzr, [x24]
  41aa38:	ldp	x19, x20, [sp, #16]
  41aa3c:	ldp	x23, x24, [sp, #48]
  41aa40:	ldp	x25, x26, [sp, #64]
  41aa44:	ldp	x29, x30, [sp], #192
  41aa48:	ret
  41aa4c:	add	w1, w23, #0x8
  41aa50:	str	w1, [sp, #120]
  41aa54:	cmp	w1, #0x0
  41aa58:	b.le	41aa74 <concat@@Base+0x144>
  41aa5c:	add	x2, x22, #0x8
  41aa60:	mov	x0, x22
  41aa64:	mov	w23, w1
  41aa68:	mov	x22, x2
  41aa6c:	str	x2, [sp, #96]
  41aa70:	b	41a9a4 <concat@@Base+0x74>
  41aa74:	ldr	x0, [sp, #104]
  41aa78:	add	x0, x0, w23, sxtw
  41aa7c:	mov	w23, w1
  41aa80:	b	41a9a4 <concat@@Base+0x74>
  41aa84:	mov	x0, x1
  41aa88:	bl	4068d0 <malloc@plt>
  41aa8c:	b	41a9f4 <concat@@Base+0xc4>
  41aa90:	cbz	x24, 41aad8 <concat@@Base+0x1a8>
  41aa94:	ldp	x21, x22, [sp, #32]
  41aa98:	lsl	x2, x24, #1
  41aa9c:	ldp	x27, x28, [sp, #80]
  41aaa0:	cmp	x2, #0x0
  41aaa4:	csinc	x1, x2, xzr, ne  // ne = any
  41aaa8:	str	x2, [x26, #3496]
  41aaac:	cbz	x0, 41aaf0 <concat@@Base+0x1c0>
  41aab0:	bl	406a00 <realloc@plt>
  41aab4:	cbz	x0, 41ab18 <concat@@Base+0x1e8>
  41aab8:	add	x24, x0, x24
  41aabc:	str	x0, [x25, #8]
  41aac0:	strb	wzr, [x24]
  41aac4:	ldp	x19, x20, [sp, #16]
  41aac8:	ldp	x23, x24, [sp, #48]
  41aacc:	ldp	x25, x26, [sp, #64]
  41aad0:	ldp	x29, x30, [sp], #192
  41aad4:	ret
  41aad8:	mov	x1, #0x78                  	// #120
  41aadc:	mov	x2, x1
  41aae0:	str	x2, [x26, #3496]
  41aae4:	ldp	x21, x22, [sp, #32]
  41aae8:	ldp	x27, x28, [sp, #80]
  41aaec:	cbnz	x0, 41aab0 <concat@@Base+0x180>
  41aaf0:	mov	x0, x1
  41aaf4:	bl	4068d0 <malloc@plt>
  41aaf8:	b	41aab4 <concat@@Base+0x184>
  41aafc:	ldr	x0, [x25, #8]
  41ab00:	mov	x24, x0
  41ab04:	cbnz	x20, 41aa34 <concat@@Base+0x104>
  41ab08:	mov	x1, #0x78                  	// #120
  41ab0c:	mov	x24, #0x0                   	// #0
  41ab10:	mov	x2, x1
  41ab14:	b	41aaa8 <concat@@Base+0x178>
  41ab18:	stp	x21, x22, [sp, #32]
  41ab1c:	stp	x27, x28, [sp, #80]
  41ab20:	bl	41c260 <out_of_memory@@Base>
  41ab24:	nop

000000000041ab28 <xmalloc@@Base>:
  41ab28:	cmp	x0, #0x0
  41ab2c:	stp	x29, x30, [sp, #-16]!
  41ab30:	csinc	x0, x0, xzr, ne  // ne = any
  41ab34:	mov	x29, sp
  41ab38:	bl	4068d0 <malloc@plt>
  41ab3c:	cbz	x0, 41ab48 <xmalloc@@Base+0x20>
  41ab40:	ldp	x29, x30, [sp], #16
  41ab44:	ret
  41ab48:	bl	41c260 <out_of_memory@@Base>
  41ab4c:	nop

000000000041ab50 <xcalloc@@Base>:
  41ab50:	cmp	x0, #0x0
  41ab54:	stp	x29, x30, [sp, #-16]!
  41ab58:	mov	x1, #0x1                   	// #1
  41ab5c:	mov	x29, sp
  41ab60:	csel	x0, x0, x1, ne  // ne = any
  41ab64:	bl	4069d0 <calloc@plt>
  41ab68:	cbz	x0, 41ab74 <xcalloc@@Base+0x24>
  41ab6c:	ldp	x29, x30, [sp], #16
  41ab70:	ret
  41ab74:	bl	41c260 <out_of_memory@@Base>

000000000041ab78 <xrealloc@@Base>:
  41ab78:	stp	x29, x30, [sp, #-16]!
  41ab7c:	cmp	x1, #0x0
  41ab80:	csinc	x1, x1, xzr, ne  // ne = any
  41ab84:	mov	x29, sp
  41ab88:	cbz	x0, 41ab9c <xrealloc@@Base+0x24>
  41ab8c:	bl	406a00 <realloc@plt>
  41ab90:	cbz	x0, 41aba8 <xrealloc@@Base+0x30>
  41ab94:	ldp	x29, x30, [sp], #16
  41ab98:	ret
  41ab9c:	mov	x0, x1
  41aba0:	bl	4068d0 <malloc@plt>
  41aba4:	b	41ab90 <xrealloc@@Base+0x18>
  41aba8:	bl	41c260 <out_of_memory@@Base>
  41abac:	nop

000000000041abb0 <xstrdup@@Base>:
  41abb0:	stp	x29, x30, [sp, #-16]!
  41abb4:	mov	x29, sp
  41abb8:	bl	406a20 <strdup@plt>
  41abbc:	cbz	x0, 41abc8 <xstrdup@@Base+0x18>
  41abc0:	ldp	x29, x30, [sp], #16
  41abc4:	ret
  41abc8:	bl	41c260 <out_of_memory@@Base>
  41abcc:	nop

000000000041abd0 <xstrndup@@Base>:
  41abd0:	stp	x29, x30, [sp, #-16]!
  41abd4:	mov	x29, sp
  41abd8:	bl	406ba0 <strndup@plt>
  41abdc:	cbz	x0, 41abe8 <xstrndup@@Base+0x18>
  41abe0:	ldp	x29, x30, [sp], #16
  41abe4:	ret
  41abe8:	bl	41c260 <out_of_memory@@Base>
  41abec:	nop

000000000041abf0 <lindex@@Base>:
  41abf0:	b	41ac04 <lindex@@Base+0x14>
  41abf4:	ldrb	w4, [x3], #1
  41abf8:	cmp	w4, w2
  41abfc:	b.eq	41ac14 <lindex@@Base+0x24>  // b.none
  41ac00:	mov	x0, x3
  41ac04:	mov	x3, x0
  41ac08:	cmp	x0, x1
  41ac0c:	b.cc	41abf4 <lindex@@Base+0x4>  // b.lo, b.ul, b.last
  41ac10:	mov	x0, #0x0                   	// #0
  41ac14:	ret

000000000041ac18 <end_of_token@@Base>:
  41ac18:	ldrb	w1, [x0]
  41ac1c:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  41ac20:	add	x2, x2, #0x4c0
  41ac24:	ldrh	w1, [x2, x1, lsl #1]
  41ac28:	tst	x1, #0x7
  41ac2c:	b.ne	41ac40 <end_of_token@@Base+0x28>  // b.any
  41ac30:	ldrb	w1, [x0, #1]!
  41ac34:	ldrh	w1, [x2, x1, lsl #1]
  41ac38:	tst	x1, #0x7
  41ac3c:	b.eq	41ac30 <end_of_token@@Base+0x18>  // b.none
  41ac40:	ret
  41ac44:	nop

000000000041ac48 <next_token@@Base>:
  41ac48:	ldrb	w1, [x0]
  41ac4c:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  41ac50:	add	x2, x2, #0x4c0
  41ac54:	ldrh	w1, [x2, x1, lsl #1]
  41ac58:	tst	w1, #0x6
  41ac5c:	b.eq	41ac70 <next_token@@Base+0x28>  // b.none
  41ac60:	ldrb	w1, [x0, #1]!
  41ac64:	ldrh	w1, [x2, x1, lsl #1]
  41ac68:	tst	w1, #0x6
  41ac6c:	b.ne	41ac60 <next_token@@Base+0x18>  // b.any
  41ac70:	ret
  41ac74:	nop

000000000041ac78 <find_next_token@@Base>:
  41ac78:	mov	x5, x0
  41ac7c:	adrp	x4, 446000 <expanding_var@@Base+0x320>
  41ac80:	ldr	x0, [x0]
  41ac84:	add	x4, x4, #0x4c0
  41ac88:	ldrb	w2, [x0]
  41ac8c:	ldrh	w3, [x4, w2, sxtw #1]
  41ac90:	tst	w3, #0x6
  41ac94:	b.eq	41aca8 <find_next_token@@Base+0x30>  // b.none
  41ac98:	ldrb	w2, [x0, #1]!
  41ac9c:	ldrh	w3, [x4, w2, sxtw #1]
  41aca0:	tst	w3, #0x6
  41aca4:	b.ne	41ac98 <find_next_token@@Base+0x20>  // b.any
  41aca8:	cbz	w2, 41acdc <find_next_token@@Base+0x64>
  41acac:	mov	x2, x0
  41acb0:	tst	x3, #0x7
  41acb4:	b.ne	41acc8 <find_next_token@@Base+0x50>  // b.any
  41acb8:	ldrb	w3, [x2, #1]!
  41acbc:	ldrh	w3, [x4, x3, lsl #1]
  41acc0:	tst	x3, #0x7
  41acc4:	b.eq	41acb8 <find_next_token@@Base+0x40>  // b.none
  41acc8:	str	x2, [x5]
  41accc:	cbz	x1, 41acd8 <find_next_token@@Base+0x60>
  41acd0:	sub	x2, x2, x0
  41acd4:	str	x2, [x1]
  41acd8:	ret
  41acdc:	mov	x0, #0x0                   	// #0
  41ace0:	ret
  41ace4:	nop

000000000041ace8 <writebuf@@Base>:
  41ace8:	stp	x29, x30, [sp, #-64]!
  41acec:	mov	x29, sp
  41acf0:	stp	x19, x20, [sp, #16]
  41acf4:	str	x23, [sp, #48]
  41acf8:	mov	x23, x2
  41acfc:	cbz	x2, 41ad54 <writebuf@@Base+0x6c>
  41ad00:	mov	x20, x2
  41ad04:	stp	x21, x22, [sp, #32]
  41ad08:	mov	w22, w0
  41ad0c:	mov	x21, x1
  41ad10:	b	41ad24 <writebuf@@Base+0x3c>
  41ad14:	bl	406d70 <__errno_location@plt>
  41ad18:	ldr	w3, [x0]
  41ad1c:	cmp	w3, #0x4
  41ad20:	b.ne	41ad6c <writebuf@@Base+0x84>  // b.any
  41ad24:	mov	x2, x20
  41ad28:	mov	x1, x21
  41ad2c:	mov	w0, w22
  41ad30:	bl	406a90 <write@plt>
  41ad34:	mov	x19, x0
  41ad38:	cmn	x0, #0x1
  41ad3c:	b.eq	41ad14 <writebuf@@Base+0x2c>  // b.none
  41ad40:	add	x21, x21, x0
  41ad44:	tbnz	x0, #63, 41ad6c <writebuf@@Base+0x84>
  41ad48:	subs	x20, x20, x0
  41ad4c:	b.ne	41ad24 <writebuf@@Base+0x3c>  // b.any
  41ad50:	ldp	x21, x22, [sp, #32]
  41ad54:	mov	x19, x23
  41ad58:	mov	x0, x19
  41ad5c:	ldp	x19, x20, [sp, #16]
  41ad60:	ldr	x23, [sp, #48]
  41ad64:	ldp	x29, x30, [sp], #64
  41ad68:	ret
  41ad6c:	mov	x0, x19
  41ad70:	ldp	x19, x20, [sp, #16]
  41ad74:	ldp	x21, x22, [sp, #32]
  41ad78:	ldr	x23, [sp, #48]
  41ad7c:	ldp	x29, x30, [sp], #64
  41ad80:	ret
  41ad84:	nop

000000000041ad88 <readbuf@@Base>:
  41ad88:	stp	x29, x30, [sp, #-64]!
  41ad8c:	mov	x29, sp
  41ad90:	stp	x19, x20, [sp, #16]
  41ad94:	cbz	x2, 41ae2c <readbuf@@Base+0xa4>
  41ad98:	mov	x20, x2
  41ad9c:	stp	x21, x22, [sp, #32]
  41ada0:	mov	w22, w0
  41ada4:	mov	x21, x1
  41ada8:	str	x23, [sp, #48]
  41adac:	mov	x23, x1
  41adb0:	b	41adc4 <readbuf@@Base+0x3c>
  41adb4:	bl	406d70 <__errno_location@plt>
  41adb8:	ldr	w3, [x0]
  41adbc:	cmp	w3, #0x4
  41adc0:	b.ne	41ae14 <readbuf@@Base+0x8c>  // b.any
  41adc4:	mov	x2, x20
  41adc8:	mov	x1, x21
  41adcc:	mov	w0, w22
  41add0:	bl	406c80 <read@plt>
  41add4:	mov	x19, x0
  41add8:	cmn	x0, #0x1
  41addc:	b.eq	41adb4 <readbuf@@Base+0x2c>  // b.none
  41ade0:	cmp	x0, #0x0
  41ade4:	b.lt	41ae14 <readbuf@@Base+0x8c>  // b.tstop
  41ade8:	b.eq	41adf8 <readbuf@@Base+0x70>  // b.none
  41adec:	add	x21, x21, x0
  41adf0:	subs	x20, x20, x0
  41adf4:	b.ne	41adc4 <readbuf@@Base+0x3c>  // b.any
  41adf8:	sub	x19, x21, x23
  41adfc:	ldp	x21, x22, [sp, #32]
  41ae00:	ldr	x23, [sp, #48]
  41ae04:	mov	x0, x19
  41ae08:	ldp	x19, x20, [sp, #16]
  41ae0c:	ldp	x29, x30, [sp], #64
  41ae10:	ret
  41ae14:	mov	x0, x19
  41ae18:	ldp	x19, x20, [sp, #16]
  41ae1c:	ldp	x21, x22, [sp, #32]
  41ae20:	ldr	x23, [sp, #48]
  41ae24:	ldp	x29, x30, [sp], #64
  41ae28:	ret
  41ae2c:	mov	x19, #0x0                   	// #0
  41ae30:	b	41ae04 <readbuf@@Base+0x7c>
  41ae34:	nop

000000000041ae38 <copy_dep_chain@@Base>:
  41ae38:	stp	x29, x30, [sp, #-48]!
  41ae3c:	mov	x29, sp
  41ae40:	stp	x21, x22, [sp, #32]
  41ae44:	cbz	x0, 41aed4 <copy_dep_chain@@Base+0x9c>
  41ae48:	stp	x19, x20, [sp, #16]
  41ae4c:	mov	x20, x0
  41ae50:	mov	x21, #0x0                   	// #0
  41ae54:	mov	x22, #0x0                   	// #0
  41ae58:	mov	x0, #0x28                  	// #40
  41ae5c:	bl	4068d0 <malloc@plt>
  41ae60:	mov	x19, x0
  41ae64:	cbz	x0, 41aedc <copy_dep_chain@@Base+0xa4>
  41ae68:	ldp	x0, x1, [x20]
  41ae6c:	stp	x0, x1, [x19]
  41ae70:	ldp	x0, x1, [x20, #16]
  41ae74:	stp	x0, x1, [x19, #16]
  41ae78:	ldr	x0, [x20, #32]
  41ae7c:	str	x0, [x19, #32]
  41ae80:	tbnz	w0, #11, 41aec0 <copy_dep_chain@@Base+0x88>
  41ae84:	str	xzr, [x19]
  41ae88:	cbz	x22, 41aea0 <copy_dep_chain@@Base+0x68>
  41ae8c:	str	x19, [x21]
  41ae90:	ldr	x20, [x20]
  41ae94:	cbz	x20, 41aeac <copy_dep_chain@@Base+0x74>
  41ae98:	mov	x21, x19
  41ae9c:	b	41ae58 <copy_dep_chain@@Base+0x20>
  41aea0:	ldr	x20, [x20]
  41aea4:	mov	x22, x19
  41aea8:	cbnz	x20, 41ae98 <copy_dep_chain@@Base+0x60>
  41aeac:	ldp	x19, x20, [sp, #16]
  41aeb0:	mov	x0, x22
  41aeb4:	ldp	x21, x22, [sp, #32]
  41aeb8:	ldp	x29, x30, [sp], #48
  41aebc:	ret
  41aec0:	ldr	x0, [x19, #8]
  41aec4:	bl	406a20 <strdup@plt>
  41aec8:	cbz	x0, 41aedc <copy_dep_chain@@Base+0xa4>
  41aecc:	str	x0, [x19, #8]
  41aed0:	b	41ae84 <copy_dep_chain@@Base+0x4c>
  41aed4:	mov	x22, #0x0                   	// #0
  41aed8:	b	41aeb0 <copy_dep_chain@@Base+0x78>
  41aedc:	bl	41c260 <out_of_memory@@Base>

000000000041aee0 <free_ns_chain@@Base>:
  41aee0:	cbz	x0, 41af14 <free_ns_chain@@Base+0x34>
  41aee4:	stp	x29, x30, [sp, #-32]!
  41aee8:	mov	x29, sp
  41aeec:	str	x19, [sp, #16]
  41aef0:	mov	x19, x0
  41aef4:	nop
  41aef8:	mov	x0, x19
  41aefc:	ldr	x19, [x19]
  41af00:	bl	406b90 <free@plt>
  41af04:	cbnz	x19, 41aef8 <free_ns_chain@@Base+0x18>
  41af08:	ldr	x19, [sp, #16]
  41af0c:	ldp	x29, x30, [sp], #32
  41af10:	ret
  41af14:	ret

000000000041af18 <get_tmpfile@@Base>:
  41af18:	stp	x29, x30, [sp, #-48]!
  41af1c:	mov	x29, sp
  41af20:	stp	x19, x20, [sp, #16]
  41af24:	mov	x20, x0
  41af28:	mov	w0, #0x3f                  	// #63
  41af2c:	stp	x21, x22, [sp, #32]
  41af30:	mov	x21, x1
  41af34:	bl	406d50 <umask@plt>
  41af38:	mov	w22, w0
  41af3c:	mov	x0, x21
  41af40:	bl	406680 <strlen@plt>
  41af44:	add	x0, x0, #0x1
  41af48:	bl	4068d0 <malloc@plt>
  41af4c:	cbz	x0, 41afd4 <get_tmpfile@@Base+0xbc>
  41af50:	str	x0, [x20]
  41af54:	mov	x19, x0
  41af58:	mov	x1, x21
  41af5c:	bl	406c30 <strcpy@plt>
  41af60:	b	41af78 <get_tmpfile@@Base+0x60>
  41af64:	bl	406d70 <__errno_location@plt>
  41af68:	ldr	w1, [x0]
  41af6c:	cmp	w1, #0x4
  41af70:	b.ne	41afb4 <get_tmpfile@@Base+0x9c>  // b.any
  41af74:	ldr	x19, [x20]
  41af78:	mov	x0, x19
  41af7c:	bl	406c90 <mkstemp@plt>
  41af80:	cmn	w0, #0x1
  41af84:	b.eq	41af64 <get_tmpfile@@Base+0x4c>  // b.none
  41af88:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  41af8c:	add	x1, x1, #0xc98
  41af90:	bl	406980 <fdopen@plt>
  41af94:	mov	x19, x0
  41af98:	mov	w0, w22
  41af9c:	bl	406d50 <umask@plt>
  41afa0:	mov	x0, x19
  41afa4:	ldp	x19, x20, [sp, #16]
  41afa8:	ldp	x21, x22, [sp, #32]
  41afac:	ldp	x29, x30, [sp], #48
  41afb0:	ret
  41afb4:	mov	w0, w22
  41afb8:	mov	x19, #0x0                   	// #0
  41afbc:	bl	406d50 <umask@plt>
  41afc0:	mov	x0, x19
  41afc4:	ldp	x19, x20, [sp, #16]
  41afc8:	ldp	x21, x22, [sp, #32]
  41afcc:	ldp	x29, x30, [sp], #48
  41afd0:	ret
  41afd4:	bl	41c260 <out_of_memory@@Base>

000000000041afd8 <user_access@@Base>:
  41afd8:	ret
  41afdc:	nop

000000000041afe0 <make_access@@Base>:
  41afe0:	ret
  41afe4:	nop

000000000041afe8 <child_access@@Base>:
  41afe8:	ret
  41afec:	nop
  41aff0:	stp	x29, x30, [sp, #-48]!
  41aff4:	mov	w2, #0x0                   	// #0
  41aff8:	mov	x29, sp
  41affc:	stp	x19, x20, [sp, #16]
  41b000:	mov	x20, x1
  41b004:	mov	x1, #0x0                   	// #0
  41b008:	str	x21, [sp, #32]
  41b00c:	mov	w21, w0
  41b010:	bl	406800 <lseek@plt>
  41b014:	cmn	x0, #0x1
  41b018:	b.eq	41b0c8 <child_access@@Base+0xe0>  // b.none
  41b01c:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  41b020:	add	x19, x19, #0xe10
  41b024:	mov	x2, #0x2000                	// #8192
  41b028:	mov	x1, x19
  41b02c:	mov	w0, w21
  41b030:	bl	406c80 <read@plt>
  41b034:	mov	x3, x20
  41b038:	cmn	w0, #0x1
  41b03c:	mov	x2, #0x1                   	// #1
  41b040:	b.eq	41b088 <child_access@@Base+0xa0>  // b.none
  41b044:	cmp	w0, #0x0
  41b048:	b.lt	41b098 <child_access@@Base+0xb0>  // b.tstop
  41b04c:	b.eq	41b0d8 <child_access@@Base+0xf0>  // b.none
  41b050:	sxtw	x1, w0
  41b054:	mov	x0, x19
  41b058:	bl	406be0 <fwrite@plt>
  41b05c:	cbz	x0, 41b0b0 <child_access@@Base+0xc8>
  41b060:	mov	x0, x20
  41b064:	bl	406c20 <fflush@plt>
  41b068:	mov	x2, #0x2000                	// #8192
  41b06c:	mov	x1, x19
  41b070:	mov	w0, w21
  41b074:	bl	406c80 <read@plt>
  41b078:	mov	x3, x20
  41b07c:	cmn	w0, #0x1
  41b080:	mov	x2, #0x1                   	// #1
  41b084:	b.ne	41b044 <child_access@@Base+0x5c>  // b.any
  41b088:	bl	406d70 <__errno_location@plt>
  41b08c:	ldr	w0, [x0]
  41b090:	cmp	w0, #0x4
  41b094:	b.eq	41b024 <child_access@@Base+0x3c>  // b.none
  41b098:	ldp	x19, x20, [sp, #16]
  41b09c:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41b0a0:	ldr	x21, [sp, #32]
  41b0a4:	add	x0, x0, #0xdb8
  41b0a8:	ldp	x29, x30, [sp], #48
  41b0ac:	b	4066c0 <perror@plt>
  41b0b0:	ldp	x19, x20, [sp, #16]
  41b0b4:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41b0b8:	ldr	x21, [sp, #32]
  41b0bc:	add	x0, x0, #0xdc0
  41b0c0:	ldp	x29, x30, [sp], #48
  41b0c4:	b	4066c0 <perror@plt>
  41b0c8:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41b0cc:	add	x0, x0, #0xdb0
  41b0d0:	bl	4066c0 <perror@plt>
  41b0d4:	b	41b01c <child_access@@Base+0x34>
  41b0d8:	ldp	x19, x20, [sp, #16]
  41b0dc:	ldr	x21, [sp, #32]
  41b0e0:	ldp	x29, x30, [sp], #48
  41b0e4:	ret
  41b0e8:	stp	x29, x30, [sp, #-80]!
  41b0ec:	mov	x29, sp
  41b0f0:	stp	x21, x22, [sp, #32]
  41b0f4:	adrp	x22, 449000 <commands_started@@Base+0x170>
  41b0f8:	adrp	x21, 449000 <commands_started@@Base+0x170>
  41b0fc:	stp	x19, x20, [sp, #16]
  41b100:	mov	w20, w0
  41b104:	ldr	x0, [x22, #2096]
  41b108:	stp	x23, x24, [sp, #48]
  41b10c:	adrp	x23, 449000 <commands_started@@Base+0x170>
  41b110:	str	x25, [sp, #64]
  41b114:	bl	406680 <strlen@plt>
  41b118:	ldr	w24, [x23, #2112]
  41b11c:	ldr	x2, [x21, #2072]
  41b120:	add	x19, x0, #0x17
  41b124:	cbz	x2, 41b208 <child_access@@Base+0x220>
  41b128:	mov	x0, x2
  41b12c:	bl	406680 <strlen@plt>
  41b130:	add	x19, x19, x0
  41b134:	cbnz	w24, 41b1e8 <child_access@@Base+0x200>
  41b138:	cbnz	w20, 41b22c <child_access@@Base+0x244>
  41b13c:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41b140:	mov	w2, #0x5                   	// #5
  41b144:	add	x1, x1, #0xe40
  41b148:	mov	x0, #0x0                   	// #0
  41b14c:	bl	406cd0 <dcgettext@plt>
  41b150:	mov	x20, x0
  41b154:	nop
  41b158:	adrp	x24, 446000 <expanding_var@@Base+0x320>
  41b15c:	add	x25, x24, #0xdc0
  41b160:	mov	x0, x20
  41b164:	bl	406680 <strlen@plt>
  41b168:	add	x19, x0, x19
  41b16c:	ldr	x1, [x25, #8]
  41b170:	ldr	x0, [x24, #3520]
  41b174:	cmp	x1, x19
  41b178:	b.cc	41b294 <child_access@@Base+0x2ac>  // b.lo, b.ul, b.last
  41b17c:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  41b180:	ldr	w1, [x1, #1156]
  41b184:	cbz	w1, 41b190 <child_access@@Base+0x1a8>
  41b188:	mov	w1, #0x2023                	// #8227
  41b18c:	strh	w1, [x0], #2
  41b190:	ldr	w3, [x23, #2112]
  41b194:	ldr	x4, [x21, #2072]
  41b198:	ldr	x2, [x22, #2096]
  41b19c:	cbnz	w3, 41b284 <child_access@@Base+0x29c>
  41b1a0:	cbz	x4, 41b2a8 <child_access@@Base+0x2c0>
  41b1a4:	mov	x3, x4
  41b1a8:	mov	x1, x20
  41b1ac:	bl	406730 <sprintf@plt>
  41b1b0:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  41b1b4:	ldr	x0, [x24, #3520]
  41b1b8:	ldr	x19, [x1, #440]
  41b1bc:	mov	x1, x19
  41b1c0:	bl	406690 <fputs@plt>
  41b1c4:	mov	x0, x19
  41b1c8:	bl	406c20 <fflush@plt>
  41b1cc:	mov	w0, #0x1                   	// #1
  41b1d0:	ldp	x19, x20, [sp, #16]
  41b1d4:	ldp	x21, x22, [sp, #32]
  41b1d8:	ldp	x23, x24, [sp, #48]
  41b1dc:	ldr	x25, [sp, #64]
  41b1e0:	ldp	x29, x30, [sp], #80
  41b1e4:	ret
  41b1e8:	cbz	w20, 41b248 <child_access@@Base+0x260>
  41b1ec:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41b1f0:	mov	w2, #0x5                   	// #5
  41b1f4:	add	x1, x1, #0xeb0
  41b1f8:	mov	x0, #0x0                   	// #0
  41b1fc:	bl	406cd0 <dcgettext@plt>
  41b200:	mov	x20, x0
  41b204:	b	41b158 <child_access@@Base+0x170>
  41b208:	cbnz	w24, 41b264 <child_access@@Base+0x27c>
  41b20c:	cbz	w20, 41b2bc <child_access@@Base+0x2d4>
  41b210:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41b214:	mov	w2, #0x5                   	// #5
  41b218:	add	x1, x1, #0xdd0
  41b21c:	mov	x0, #0x0                   	// #0
  41b220:	bl	406cd0 <dcgettext@plt>
  41b224:	mov	x20, x0
  41b228:	b	41b158 <child_access@@Base+0x170>
  41b22c:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41b230:	mov	w2, #0x5                   	// #5
  41b234:	add	x1, x1, #0xe20
  41b238:	mov	x0, #0x0                   	// #0
  41b23c:	bl	406cd0 <dcgettext@plt>
  41b240:	mov	x20, x0
  41b244:	b	41b158 <child_access@@Base+0x170>
  41b248:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41b24c:	mov	w2, #0x5                   	// #5
  41b250:	add	x1, x1, #0xed8
  41b254:	mov	x0, #0x0                   	// #0
  41b258:	bl	406cd0 <dcgettext@plt>
  41b25c:	mov	x20, x0
  41b260:	b	41b158 <child_access@@Base+0x170>
  41b264:	cbz	w20, 41b2d8 <child_access@@Base+0x2f0>
  41b268:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41b26c:	mov	w2, #0x5                   	// #5
  41b270:	add	x1, x1, #0xe60
  41b274:	mov	x0, #0x0                   	// #0
  41b278:	bl	406cd0 <dcgettext@plt>
  41b27c:	mov	x20, x0
  41b280:	b	41b158 <child_access@@Base+0x170>
  41b284:	mov	x1, x20
  41b288:	cbz	x4, 41b2b4 <child_access@@Base+0x2cc>
  41b28c:	bl	406730 <sprintf@plt>
  41b290:	b	41b1b0 <child_access@@Base+0x1c8>
  41b294:	mov	x1, x19
  41b298:	bl	41ab78 <xrealloc@@Base>
  41b29c:	str	x0, [x24, #3520]
  41b2a0:	str	x19, [x25, #8]
  41b2a4:	b	41b17c <child_access@@Base+0x194>
  41b2a8:	mov	x1, x20
  41b2ac:	bl	406730 <sprintf@plt>
  41b2b0:	b	41b1b0 <child_access@@Base+0x1c8>
  41b2b4:	bl	406730 <sprintf@plt>
  41b2b8:	b	41b1b0 <child_access@@Base+0x1c8>
  41b2bc:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41b2c0:	mov	w2, #0x5                   	// #5
  41b2c4:	add	x1, x1, #0xdf8
  41b2c8:	mov	x0, #0x0                   	// #0
  41b2cc:	bl	406cd0 <dcgettext@plt>
  41b2d0:	mov	x20, x0
  41b2d4:	b	41b158 <child_access@@Base+0x170>
  41b2d8:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41b2dc:	mov	w2, #0x5                   	// #5
  41b2e0:	add	x1, x1, #0xe88
  41b2e4:	mov	x0, #0x0                   	// #0
  41b2e8:	bl	406cd0 <dcgettext@plt>
  41b2ec:	mov	x20, x0
  41b2f0:	b	41b158 <child_access@@Base+0x170>
  41b2f4:	nop

000000000041b2f8 <output_dump@@Base>:
  41b2f8:	stp	x29, x30, [sp, #-64]!
  41b2fc:	mov	x29, sp
  41b300:	stp	x19, x20, [sp, #16]
  41b304:	mov	x19, x0
  41b308:	ldr	w0, [x0]
  41b30c:	cmn	w0, #0x1
  41b310:	b.ne	41b464 <output_dump@@Base+0x16c>  // b.any
  41b314:	ldr	w0, [x19, #4]
  41b318:	cmn	w0, #0x1
  41b31c:	b.ne	41b32c <output_dump@@Base+0x34>  // b.any
  41b320:	ldp	x19, x20, [sp, #16]
  41b324:	ldp	x29, x30, [sp], #64
  41b328:	ret
  41b32c:	mov	w2, #0x2                   	// #2
  41b330:	mov	x1, #0x0                   	// #0
  41b334:	stp	x21, x22, [sp, #32]
  41b338:	mov	w22, #0x0                   	// #0
  41b33c:	stp	x23, x24, [sp, #48]
  41b340:	bl	406800 <lseek@plt>
  41b344:	mov	w23, #0x1                   	// #1
  41b348:	cmp	x0, #0x0
  41b34c:	b.le	41b450 <output_dump@@Base+0x158>
  41b350:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41b354:	adrp	x24, 446000 <expanding_var@@Base+0x320>
  41b358:	adrp	x3, 446000 <expanding_var@@Base+0x320>
  41b35c:	add	x3, x3, #0xdc0
  41b360:	ldr	q0, [x0, #4080]
  41b364:	mov	w4, #0x1                   	// #1
  41b368:	ldr	w0, [x24, #200]
  41b36c:	add	x2, x3, #0x10
  41b370:	str	w4, [x3, #16]
  41b374:	mov	x21, x2
  41b378:	mov	w1, #0x7                   	// #7
  41b37c:	stur	q0, [x2, #8]
  41b380:	bl	428a48 <rpl_fcntl@@Base>
  41b384:	cmn	w0, #0x1
  41b388:	b.eq	41b530 <output_dump@@Base+0x238>  // b.none
  41b38c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41b390:	ldr	w20, [x0, #3408]
  41b394:	cbz	w20, 41b3b8 <output_dump@@Base+0xc0>
  41b398:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41b39c:	mov	w20, #0x0                   	// #0
  41b3a0:	ldr	w0, [x0, #3376]
  41b3a4:	cmp	w0, #0x3
  41b3a8:	b.eq	41b3b8 <output_dump@@Base+0xc0>  // b.none
  41b3ac:	mov	w0, #0x1                   	// #1
  41b3b0:	bl	41b0e8 <child_access@@Base+0x100>
  41b3b4:	mov	w20, w0
  41b3b8:	cbnz	w22, 41b518 <output_dump@@Base+0x220>
  41b3bc:	cbz	w23, 41b3d8 <output_dump@@Base+0xe0>
  41b3c0:	ldp	w1, w0, [x19]
  41b3c4:	cmp	w0, w1
  41b3c8:	b.eq	41b3d8 <output_dump@@Base+0xe0>  // b.none
  41b3cc:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  41b3d0:	ldr	x1, [x1, #416]
  41b3d4:	bl	41aff0 <child_access@@Base+0x8>
  41b3d8:	cbnz	w20, 41b508 <output_dump@@Base+0x210>
  41b3dc:	cbz	x21, 41b400 <output_dump@@Base+0x108>
  41b3e0:	ldr	w0, [x24, #200]
  41b3e4:	mov	w1, #0x2                   	// #2
  41b3e8:	strh	w1, [x21]
  41b3ec:	mov	x2, x21
  41b3f0:	mov	w1, #0x7                   	// #7
  41b3f4:	bl	428a48 <rpl_fcntl@@Base>
  41b3f8:	cmn	w0, #0x1
  41b3fc:	b.eq	41b544 <output_dump@@Base+0x24c>  // b.none
  41b400:	ldr	w0, [x19]
  41b404:	cmn	w0, #0x1
  41b408:	b.ne	41b4b0 <output_dump@@Base+0x1b8>  // b.any
  41b40c:	ldr	w0, [x19, #4]
  41b410:	cmn	w0, #0x1
  41b414:	b.eq	41b450 <output_dump@@Base+0x158>  // b.none
  41b418:	mov	w2, #0x0                   	// #0
  41b41c:	mov	x1, #0x0                   	// #0
  41b420:	bl	406800 <lseek@plt>
  41b424:	b	41b438 <output_dump@@Base+0x140>
  41b428:	bl	406d70 <__errno_location@plt>
  41b42c:	ldr	w0, [x0]
  41b430:	cmp	w0, #0x4
  41b434:	b.ne	41b450 <output_dump@@Base+0x158>  // b.any
  41b438:	ldr	w0, [x19, #4]
  41b43c:	mov	x1, #0x0                   	// #0
  41b440:	bl	406d10 <ftruncate@plt>
  41b444:	cmn	w0, #0x1
  41b448:	b.eq	41b428 <output_dump@@Base+0x130>  // b.none
  41b44c:	nop
  41b450:	ldp	x21, x22, [sp, #32]
  41b454:	ldp	x23, x24, [sp, #48]
  41b458:	ldp	x19, x20, [sp, #16]
  41b45c:	ldp	x29, x30, [sp], #64
  41b460:	ret
  41b464:	mov	w2, #0x2                   	// #2
  41b468:	mov	x1, #0x0                   	// #0
  41b46c:	bl	406800 <lseek@plt>
  41b470:	cmp	x0, #0x0
  41b474:	b.le	41b314 <output_dump@@Base+0x1c>
  41b478:	ldr	w0, [x19, #4]
  41b47c:	stp	x21, x22, [sp, #32]
  41b480:	mov	w22, #0x1                   	// #1
  41b484:	cmn	w0, #0x1
  41b488:	stp	x23, x24, [sp, #48]
  41b48c:	mov	w23, #0x0                   	// #0
  41b490:	b.eq	41b350 <output_dump@@Base+0x58>  // b.none
  41b494:	mov	w2, #0x2                   	// #2
  41b498:	mov	x1, #0x0                   	// #0
  41b49c:	bl	406800 <lseek@plt>
  41b4a0:	cmp	x0, #0x0
  41b4a4:	cset	w23, gt
  41b4a8:	mov	w22, #0x1                   	// #1
  41b4ac:	b	41b350 <output_dump@@Base+0x58>
  41b4b0:	mov	w2, #0x0                   	// #0
  41b4b4:	mov	x1, #0x0                   	// #0
  41b4b8:	bl	406800 <lseek@plt>
  41b4bc:	b	41b4d0 <output_dump@@Base+0x1d8>
  41b4c0:	bl	406d70 <__errno_location@plt>
  41b4c4:	ldr	w0, [x0]
  41b4c8:	cmp	w0, #0x4
  41b4cc:	b.ne	41b4e4 <output_dump@@Base+0x1ec>  // b.any
  41b4d0:	ldr	w0, [x19]
  41b4d4:	mov	x1, #0x0                   	// #0
  41b4d8:	bl	406d10 <ftruncate@plt>
  41b4dc:	cmn	w0, #0x1
  41b4e0:	b.eq	41b4c0 <output_dump@@Base+0x1c8>  // b.none
  41b4e4:	ldr	w0, [x19, #4]
  41b4e8:	cmn	w0, #0x1
  41b4ec:	b.eq	41b450 <output_dump@@Base+0x158>  // b.none
  41b4f0:	ldr	w1, [x19]
  41b4f4:	cmp	w0, w1
  41b4f8:	b.ne	41b418 <output_dump@@Base+0x120>  // b.any
  41b4fc:	ldp	x21, x22, [sp, #32]
  41b500:	ldp	x23, x24, [sp, #48]
  41b504:	b	41b458 <output_dump@@Base+0x160>
  41b508:	mov	w0, #0x0                   	// #0
  41b50c:	bl	41b0e8 <child_access@@Base+0x100>
  41b510:	cbnz	x21, 41b3e0 <output_dump@@Base+0xe8>
  41b514:	b	41b400 <output_dump@@Base+0x108>
  41b518:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  41b51c:	ldr	w0, [x19]
  41b520:	ldr	x1, [x1, #440]
  41b524:	bl	41aff0 <child_access@@Base+0x8>
  41b528:	cbz	w23, 41b3d8 <output_dump@@Base+0xe0>
  41b52c:	b	41b3c0 <output_dump@@Base+0xc8>
  41b530:	mov	x21, #0x0                   	// #0
  41b534:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41b538:	add	x0, x0, #0xef8
  41b53c:	bl	4066c0 <perror@plt>
  41b540:	b	41b38c <output_dump@@Base+0x94>
  41b544:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41b548:	add	x0, x0, #0xef8
  41b54c:	bl	4066c0 <perror@plt>
  41b550:	b	41b400 <output_dump@@Base+0x108>
  41b554:	nop

000000000041b558 <output_init@@Base>:
  41b558:	cbz	x0, 41b584 <output_init@@Base+0x2c>
  41b55c:	mvni	v0.2s, #0x0
  41b560:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  41b564:	ldrb	w1, [x0, #8]
  41b568:	str	d0, [x0]
  41b56c:	ldr	w2, [x2, #3376]
  41b570:	cmp	w2, #0x0
  41b574:	cset	w2, ne  // ne = any
  41b578:	bfxil	w1, w2, #0, #1
  41b57c:	strb	w1, [x0, #8]
  41b580:	ret
  41b584:	stp	x29, x30, [sp, #-48]!
  41b588:	mov	x3, #0x2000                	// #8192
  41b58c:	mov	w2, #0x1                   	// #1
  41b590:	mov	x29, sp
  41b594:	stp	x19, x20, [sp, #16]
  41b598:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  41b59c:	mov	x1, #0x0                   	// #0
  41b5a0:	ldr	x0, [x20, #440]
  41b5a4:	str	x21, [sp, #32]
  41b5a8:	bl	4067f0 <setvbuf@plt>
  41b5ac:	ldr	x0, [x20, #440]
  41b5b0:	bl	406850 <fileno@plt>
  41b5b4:	mov	w19, w0
  41b5b8:	mov	w2, #0x0                   	// #0
  41b5bc:	mov	w1, #0x3                   	// #3
  41b5c0:	bl	428a48 <rpl_fcntl@@Base>
  41b5c4:	orr	w21, w0, #0x400
  41b5c8:	tbz	w0, #31, 41b638 <output_init@@Base+0xe0>
  41b5cc:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41b5d0:	ldr	x0, [x0, #416]
  41b5d4:	bl	406850 <fileno@plt>
  41b5d8:	mov	w19, w0
  41b5dc:	mov	w2, #0x0                   	// #0
  41b5e0:	mov	w1, #0x3                   	// #3
  41b5e4:	bl	428a48 <rpl_fcntl@@Base>
  41b5e8:	orr	w21, w0, #0x400
  41b5ec:	tbz	w0, #31, 41b664 <output_init@@Base+0x10c>
  41b5f0:	ldr	x0, [x20, #440]
  41b5f4:	bl	406850 <fileno@plt>
  41b5f8:	mov	w1, #0x1                   	// #1
  41b5fc:	bl	428a48 <rpl_fcntl@@Base>
  41b600:	cmn	w0, #0x1
  41b604:	b.ne	41b680 <output_init@@Base+0x128>  // b.any
  41b608:	bl	406d70 <__errno_location@plt>
  41b60c:	ldr	w0, [x0]
  41b610:	cmp	w0, #0x9
  41b614:	b.ne	41b680 <output_init@@Base+0x128>  // b.any
  41b618:	ldp	x19, x20, [sp, #16]
  41b61c:	ldr	x21, [sp, #32]
  41b620:	ldp	x29, x30, [sp], #48
  41b624:	ret
  41b628:	bl	406d70 <__errno_location@plt>
  41b62c:	ldr	w1, [x0]
  41b630:	cmp	w1, #0x4
  41b634:	b.ne	41b5cc <output_init@@Base+0x74>  // b.any
  41b638:	mov	w2, w21
  41b63c:	mov	w0, w19
  41b640:	mov	w1, #0x4                   	// #4
  41b644:	bl	428a48 <rpl_fcntl@@Base>
  41b648:	cmn	w0, #0x1
  41b64c:	b.eq	41b628 <output_init@@Base+0xd0>  // b.none
  41b650:	b	41b5cc <output_init@@Base+0x74>
  41b654:	bl	406d70 <__errno_location@plt>
  41b658:	ldr	w1, [x0]
  41b65c:	cmp	w1, #0x4
  41b660:	b.ne	41b5f0 <output_init@@Base+0x98>  // b.any
  41b664:	mov	w2, w21
  41b668:	mov	w0, w19
  41b66c:	mov	w1, #0x4                   	// #4
  41b670:	bl	428a48 <rpl_fcntl@@Base>
  41b674:	cmn	w0, #0x1
  41b678:	b.eq	41b654 <output_init@@Base+0xfc>  // b.none
  41b67c:	b	41b5f0 <output_init@@Base+0x98>
  41b680:	ldp	x19, x20, [sp, #16]
  41b684:	adrp	x0, 41c000 <perror_with_name@@Base+0x88>
  41b688:	ldr	x21, [sp, #32]
  41b68c:	add	x0, x0, #0x10
  41b690:	ldp	x29, x30, [sp], #48
  41b694:	b	428ed8 <__libc_csu_fini@@Base+0x8>

000000000041b698 <output_close@@Base>:
  41b698:	cbz	x0, 41b70c <output_close@@Base+0x74>
  41b69c:	stp	x29, x30, [sp, #-32]!
  41b6a0:	mov	x29, sp
  41b6a4:	str	x19, [sp, #16]
  41b6a8:	mov	x19, x0
  41b6ac:	bl	41b2f8 <output_dump@@Base>
  41b6b0:	ldr	w0, [x19]
  41b6b4:	tbz	w0, #31, 41b6fc <output_close@@Base+0x64>
  41b6b8:	ldr	w0, [x19, #4]
  41b6bc:	tbnz	w0, #31, 41b6cc <output_close@@Base+0x34>
  41b6c0:	ldr	w1, [x19]
  41b6c4:	cmp	w0, w1
  41b6c8:	b.ne	41b71c <output_close@@Base+0x84>  // b.any
  41b6cc:	mvni	v0.2s, #0x0
  41b6d0:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  41b6d4:	ldrb	w0, [x19, #8]
  41b6d8:	str	d0, [x19]
  41b6dc:	ldr	w1, [x1, #3376]
  41b6e0:	cmp	w1, #0x0
  41b6e4:	cset	w1, ne  // ne = any
  41b6e8:	bfxil	w0, w1, #0, #1
  41b6ec:	strb	w0, [x19, #8]
  41b6f0:	ldr	x19, [sp, #16]
  41b6f4:	ldp	x29, x30, [sp], #32
  41b6f8:	ret
  41b6fc:	bl	406a50 <close@plt>
  41b700:	ldr	w0, [x19, #4]
  41b704:	tbz	w0, #31, 41b6c0 <output_close@@Base+0x28>
  41b708:	b	41b6cc <output_close@@Base+0x34>
  41b70c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41b710:	ldr	w0, [x0, #3568]
  41b714:	cbnz	w0, 41b724 <output_close@@Base+0x8c>
  41b718:	ret
  41b71c:	bl	406a50 <close@plt>
  41b720:	b	41b6cc <output_close@@Base+0x34>
  41b724:	mov	w0, #0x0                   	// #0
  41b728:	b	41b0e8 <child_access@@Base+0x100>
  41b72c:	nop

000000000041b730 <pfatal_with_name@@Base>:
  41b730:	stp	x29, x30, [sp, #-48]!
  41b734:	mov	x29, sp
  41b738:	stp	x19, x20, [sp, #16]
  41b73c:	mov	x19, x0
  41b740:	stp	x21, x22, [sp, #32]
  41b744:	bl	406d70 <__errno_location@plt>
  41b748:	ldr	w0, [x0]
  41b74c:	bl	406a40 <strerror@plt>
  41b750:	mov	x20, x0
  41b754:	mov	x0, x19
  41b758:	bl	406680 <strlen@plt>
  41b75c:	mov	x22, x0
  41b760:	mov	x0, x20
  41b764:	bl	406680 <strlen@plt>
  41b768:	mov	x21, x0
  41b76c:	mov	w2, #0x5                   	// #5
  41b770:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  41b774:	mov	x0, #0x0                   	// #0
  41b778:	add	x1, x1, #0x710
  41b77c:	bl	406cd0 <dcgettext@plt>
  41b780:	mov	x2, x0
  41b784:	mov	x4, x20
  41b788:	mov	x3, x19
  41b78c:	add	x1, x22, x21
  41b790:	mov	x0, #0x0                   	// #0
  41b794:	bl	41c0a0 <fatal@@Base>

000000000041b798 <output_tmpfd@@Base>:
  41b798:	stp	x29, x30, [sp, #-48]!
  41b79c:	mov	w0, #0x3f                  	// #63
  41b7a0:	mov	x29, sp
  41b7a4:	stp	x19, x20, [sp, #16]
  41b7a8:	str	x21, [sp, #32]
  41b7ac:	bl	406d50 <umask@plt>
  41b7b0:	mov	w21, w0
  41b7b4:	bl	4066d0 <tmpfile@plt>
  41b7b8:	cbz	x0, 41b838 <output_tmpfd@@Base+0xa0>
  41b7bc:	mov	x20, x0
  41b7c0:	bl	406850 <fileno@plt>
  41b7c4:	bl	4066b0 <dup@plt>
  41b7c8:	mov	w19, w0
  41b7cc:	tbnz	w0, #31, 41b844 <output_tmpfd@@Base+0xac>
  41b7d0:	mov	x0, x20
  41b7d4:	bl	406890 <fclose@plt>
  41b7d8:	mov	w0, w19
  41b7dc:	mov	w2, #0x0                   	// #0
  41b7e0:	mov	w1, #0x3                   	// #3
  41b7e4:	bl	428a48 <rpl_fcntl@@Base>
  41b7e8:	orr	w20, w0, #0x400
  41b7ec:	tbz	w0, #31, 41b804 <output_tmpfd@@Base+0x6c>
  41b7f0:	b	41b81c <output_tmpfd@@Base+0x84>
  41b7f4:	bl	406d70 <__errno_location@plt>
  41b7f8:	ldr	w0, [x0]
  41b7fc:	cmp	w0, #0x4
  41b800:	b.ne	41b81c <output_tmpfd@@Base+0x84>  // b.any
  41b804:	mov	w2, w20
  41b808:	mov	w0, w19
  41b80c:	mov	w1, #0x4                   	// #4
  41b810:	bl	428a48 <rpl_fcntl@@Base>
  41b814:	cmn	w0, #0x1
  41b818:	b.eq	41b7f4 <output_tmpfd@@Base+0x5c>  // b.none
  41b81c:	mov	w0, w21
  41b820:	bl	406d50 <umask@plt>
  41b824:	mov	w0, w19
  41b828:	ldp	x19, x20, [sp, #16]
  41b82c:	ldr	x21, [sp, #32]
  41b830:	ldp	x29, x30, [sp], #48
  41b834:	ret
  41b838:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41b83c:	add	x0, x0, #0xf00
  41b840:	bl	41b730 <pfatal_with_name@@Base>
  41b844:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41b848:	add	x0, x0, #0xf08
  41b84c:	bl	41b730 <pfatal_with_name@@Base>

000000000041b850 <output_start@@Base>:
  41b850:	stp	x29, x30, [sp, #-336]!
  41b854:	mov	x29, sp
  41b858:	stp	x19, x20, [sp, #16]
  41b85c:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  41b860:	add	x19, x19, #0xdc0
  41b864:	stp	x21, x22, [sp, #32]
  41b868:	ldr	x20, [x19, #56]
  41b86c:	cbz	x20, 41b878 <output_start@@Base+0x28>
  41b870:	ldrb	w0, [x20, #8]
  41b874:	tbnz	w0, #0, 41b914 <output_start@@Base+0xc4>
  41b878:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  41b87c:	ldr	w0, [x21, #3376]
  41b880:	cmp	w0, #0x0
  41b884:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  41b888:	b.eq	41b8f0 <output_start@@Base+0xa0>  // b.none
  41b88c:	ldp	x19, x20, [sp, #16]
  41b890:	ldp	x21, x22, [sp, #32]
  41b894:	ldp	x29, x30, [sp], #336
  41b898:	ret
  41b89c:	mov	x0, x20
  41b8a0:	bl	41b2f8 <output_dump@@Base>
  41b8a4:	ldr	w0, [x20]
  41b8a8:	tbz	w0, #31, 41ba5c <output_start@@Base+0x20c>
  41b8ac:	ldr	w0, [x20, #4]
  41b8b0:	tbnz	w0, #31, 41b8c4 <output_start@@Base+0x74>
  41b8b4:	ldr	w1, [x20]
  41b8b8:	cmp	w0, w1
  41b8bc:	b.eq	41b8c4 <output_start@@Base+0x74>  // b.none
  41b8c0:	bl	406a50 <close@plt>
  41b8c4:	mvni	v0.2s, #0x0
  41b8c8:	ldrb	w0, [x20, #8]
  41b8cc:	ldp	x23, x24, [sp, #48]
  41b8d0:	str	d0, [x20]
  41b8d4:	ldr	w1, [x21, #3376]
  41b8d8:	str	wzr, [x21, #3376]
  41b8dc:	cmp	w1, #0x0
  41b8e0:	cset	w1, ne  // ne = any
  41b8e4:	bfxil	w0, w1, #0, #1
  41b8e8:	strb	w0, [x20, #8]
  41b8ec:	nop
  41b8f0:	ldr	w0, [x19, #48]
  41b8f4:	cbnz	w0, 41b88c <output_start@@Base+0x3c>
  41b8f8:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41b8fc:	ldr	w0, [x0, #3408]
  41b900:	cbz	w0, 41b88c <output_start@@Base+0x3c>
  41b904:	mov	w0, #0x1                   	// #1
  41b908:	bl	41b0e8 <child_access@@Base+0x100>
  41b90c:	str	w0, [x19, #48]
  41b910:	b	41b88c <output_start@@Base+0x3c>
  41b914:	ldr	w0, [x20]
  41b918:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  41b91c:	tbz	w0, #31, 41b87c <output_start@@Base+0x2c>
  41b920:	ldr	w0, [x20, #4]
  41b924:	tbz	w0, #31, 41b87c <output_start@@Base+0x2c>
  41b928:	stp	x23, x24, [sp, #48]
  41b92c:	adrp	x24, 446000 <expanding_var@@Base+0x320>
  41b930:	add	x23, x24, #0xc8
  41b934:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  41b938:	ldr	w1, [x23, #4]
  41b93c:	ldr	x0, [x22, #440]
  41b940:	tbnz	w1, #31, 41b9d4 <output_start@@Base+0x184>
  41b944:	bl	406850 <fileno@plt>
  41b948:	mov	w1, #0x1                   	// #1
  41b94c:	bl	428a48 <rpl_fcntl@@Base>
  41b950:	cmn	w0, #0x1
  41b954:	b.ne	41b968 <output_start@@Base+0x118>  // b.any
  41b958:	bl	406d70 <__errno_location@plt>
  41b95c:	ldr	w0, [x0]
  41b960:	cmp	w0, #0x9
  41b964:	b.eq	41b97c <output_start@@Base+0x12c>  // b.none
  41b968:	bl	41b798 <output_tmpfd@@Base>
  41b96c:	mov	w22, w0
  41b970:	tbnz	w0, #31, 41b89c <output_start@@Base+0x4c>
  41b974:	bl	4286f0 <fd_noinherit@@Base>
  41b978:	str	w22, [x20]
  41b97c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41b980:	ldr	x0, [x0, #416]
  41b984:	bl	406850 <fileno@plt>
  41b988:	mov	w1, #0x1                   	// #1
  41b98c:	bl	428a48 <rpl_fcntl@@Base>
  41b990:	cmn	w0, #0x1
  41b994:	b.eq	41ba44 <output_start@@Base+0x1f4>  // b.none
  41b998:	ldr	w0, [x20]
  41b99c:	cmn	w0, #0x1
  41b9a0:	b.eq	41b9b8 <output_start@@Base+0x168>  // b.none
  41b9a4:	ldr	w1, [x23, #4]
  41b9a8:	cbz	w1, 41b9b8 <output_start@@Base+0x168>
  41b9ac:	ldp	x23, x24, [sp, #48]
  41b9b0:	str	w0, [x20, #4]
  41b9b4:	b	41b87c <output_start@@Base+0x2c>
  41b9b8:	bl	41b798 <output_tmpfd@@Base>
  41b9bc:	mov	w22, w0
  41b9c0:	tbnz	w0, #31, 41b89c <output_start@@Base+0x4c>
  41b9c4:	bl	4286f0 <fd_noinherit@@Base>
  41b9c8:	ldp	x23, x24, [sp, #48]
  41b9cc:	str	w22, [x20, #4]
  41b9d0:	b	41b87c <output_start@@Base+0x2c>
  41b9d4:	bl	406850 <fileno@plt>
  41b9d8:	mov	w1, #0x1                   	// #1
  41b9dc:	bl	428a48 <rpl_fcntl@@Base>
  41b9e0:	cmn	w0, #0x1
  41b9e4:	b.ne	41ba04 <output_start@@Base+0x1b4>  // b.any
  41b9e8:	stp	x25, x26, [sp, #64]
  41b9ec:	bl	406d70 <__errno_location@plt>
  41b9f0:	mov	x25, x0
  41b9f4:	ldr	w0, [x0]
  41b9f8:	cmp	w0, #0x9
  41b9fc:	b.eq	41baac <output_start@@Base+0x25c>  // b.none
  41ba00:	ldp	x25, x26, [sp, #64]
  41ba04:	ldr	x0, [x22, #440]
  41ba08:	bl	406850 <fileno@plt>
  41ba0c:	mov	w1, w0
  41ba10:	ldr	x0, [x22, #440]
  41ba14:	str	w1, [x24, #200]
  41ba18:	bl	406850 <fileno@plt>
  41ba1c:	mov	w1, w0
  41ba20:	add	x2, sp, #0x50
  41ba24:	mov	w0, #0x0                   	// #0
  41ba28:	bl	406cb0 <__fxstat@plt>
  41ba2c:	cbz	w0, 41ba64 <output_start@@Base+0x214>
  41ba30:	mov	w1, #0x0                   	// #0
  41ba34:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  41ba38:	ldr	x0, [x22, #440]
  41ba3c:	str	w1, [x23, #4]
  41ba40:	b	41b944 <output_start@@Base+0xf4>
  41ba44:	bl	406d70 <__errno_location@plt>
  41ba48:	ldr	w0, [x0]
  41ba4c:	cmp	w0, #0x9
  41ba50:	b.ne	41b998 <output_start@@Base+0x148>  // b.any
  41ba54:	ldp	x23, x24, [sp, #48]
  41ba58:	b	41b87c <output_start@@Base+0x2c>
  41ba5c:	bl	406a50 <close@plt>
  41ba60:	b	41b8ac <output_start@@Base+0x5c>
  41ba64:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41ba68:	ldr	x0, [x0, #416]
  41ba6c:	bl	406850 <fileno@plt>
  41ba70:	mov	w1, w0
  41ba74:	add	x2, sp, #0xd0
  41ba78:	mov	w0, #0x0                   	// #0
  41ba7c:	bl	406cb0 <__fxstat@plt>
  41ba80:	cbnz	w0, 41ba30 <output_start@@Base+0x1e0>
  41ba84:	ldr	x1, [sp, #80]
  41ba88:	ldr	x0, [sp, #208]
  41ba8c:	cmp	x1, x0
  41ba90:	b.ne	41ba30 <output_start@@Base+0x1e0>  // b.any
  41ba94:	ldr	x1, [sp, #88]
  41ba98:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  41ba9c:	ldr	x0, [sp, #216]
  41baa0:	cmp	x1, x0
  41baa4:	cset	w1, eq  // eq = none
  41baa8:	b	41ba38 <output_start@@Base+0x1e8>
  41baac:	adrp	x26, 446000 <expanding_var@@Base+0x320>
  41bab0:	ldr	x0, [x26, #416]
  41bab4:	bl	406850 <fileno@plt>
  41bab8:	mov	w1, #0x1                   	// #1
  41babc:	bl	428a48 <rpl_fcntl@@Base>
  41bac0:	cmn	w0, #0x1
  41bac4:	b.ne	41bad4 <output_start@@Base+0x284>  // b.any
  41bac8:	ldr	w0, [x25]
  41bacc:	cmp	w0, #0x9
  41bad0:	b.eq	41baf0 <output_start@@Base+0x2a0>  // b.none
  41bad4:	ldr	x0, [x26, #416]
  41bad8:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  41badc:	bl	406850 <fileno@plt>
  41bae0:	str	w0, [x24, #200]
  41bae4:	mov	w1, #0x0                   	// #0
  41bae8:	ldp	x25, x26, [sp, #64]
  41baec:	b	41ba38 <output_start@@Base+0x1e8>
  41baf0:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41baf4:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41baf8:	add	x1, x1, #0xf10
  41bafc:	add	x0, x0, #0xf18
  41bb00:	bl	41bf78 <perror_with_name@@Base>
  41bb04:	str	wzr, [x21, #3376]
  41bb08:	mov	w1, #0x0                   	// #0
  41bb0c:	ldp	x25, x26, [sp, #64]
  41bb10:	b	41ba38 <output_start@@Base+0x1e8>
  41bb14:	nop
  41bb18:	stp	x29, x30, [sp, #-48]!
  41bb1c:	mov	x29, sp
  41bb20:	stp	x19, x20, [sp, #16]
  41bb24:	mov	w20, w0
  41bb28:	mov	x19, x1
  41bb2c:	bl	41b850 <output_start@@Base>
  41bb30:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41bb34:	ldr	x0, [x0, #3576]
  41bb38:	cbz	x0, 41bba8 <output_start@@Base+0x358>
  41bb3c:	ldrb	w1, [x0, #8]
  41bb40:	tbz	w1, #0, 41bba8 <output_start@@Base+0x358>
  41bb44:	cmp	w20, #0x0
  41bb48:	ldp	w1, w20, [x0]
  41bb4c:	mov	x0, x19
  41bb50:	str	x21, [sp, #32]
  41bb54:	csel	w20, w20, w1, ne  // ne = any
  41bb58:	bl	406680 <strlen@plt>
  41bb5c:	mov	x21, x0
  41bb60:	b	41bb74 <output_start@@Base+0x324>
  41bb64:	bl	406d70 <__errno_location@plt>
  41bb68:	ldr	w1, [x0]
  41bb6c:	cmp	w1, #0x4
  41bb70:	b.ne	41bb8c <output_start@@Base+0x33c>  // b.any
  41bb74:	mov	w0, w20
  41bb78:	mov	w2, #0x2                   	// #2
  41bb7c:	mov	x1, #0x0                   	// #0
  41bb80:	bl	406800 <lseek@plt>
  41bb84:	cmn	w0, #0x1
  41bb88:	b.eq	41bb64 <output_start@@Base+0x314>  // b.none
  41bb8c:	mov	x2, x21
  41bb90:	mov	x1, x19
  41bb94:	mov	w0, w20
  41bb98:	ldp	x19, x20, [sp, #16]
  41bb9c:	ldr	x21, [sp, #32]
  41bba0:	ldp	x29, x30, [sp], #48
  41bba4:	b	41ace8 <writebuf@@Base>
  41bba8:	cbnz	w20, 41bbd0 <output_start@@Base+0x380>
  41bbac:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41bbb0:	ldr	x20, [x0, #440]
  41bbb4:	mov	x0, x19
  41bbb8:	mov	x1, x20
  41bbbc:	bl	406690 <fputs@plt>
  41bbc0:	mov	x0, x20
  41bbc4:	ldp	x19, x20, [sp, #16]
  41bbc8:	ldp	x29, x30, [sp], #48
  41bbcc:	b	406c20 <fflush@plt>
  41bbd0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41bbd4:	ldr	x20, [x0, #416]
  41bbd8:	mov	x0, x19
  41bbdc:	mov	x1, x20
  41bbe0:	bl	406690 <fputs@plt>
  41bbe4:	mov	x0, x20
  41bbe8:	ldp	x19, x20, [sp, #16]
  41bbec:	ldp	x29, x30, [sp], #48
  41bbf0:	b	406c20 <fflush@plt>
  41bbf4:	nop

000000000041bbf8 <outputs@@Base>:
  41bbf8:	cbz	x1, 41bc04 <outputs@@Base+0xc>
  41bbfc:	ldrb	w2, [x1]
  41bc00:	cbnz	w2, 41bc08 <outputs@@Base+0x10>
  41bc04:	ret
  41bc08:	b	41bb18 <output_start@@Base+0x2c8>
  41bc0c:	nop

000000000041bc10 <message@@Base>:
  41bc10:	stp	x29, x30, [sp, #-304]!
  41bc14:	mov	x29, sp
  41bc18:	stp	x23, x24, [sp, #48]
  41bc1c:	adrp	x24, 449000 <commands_started@@Base+0x170>
  41bc20:	mov	w23, w0
  41bc24:	mov	x0, x2
  41bc28:	stp	x19, x20, [sp, #16]
  41bc2c:	mov	x19, x1
  41bc30:	stp	x21, x22, [sp, #32]
  41bc34:	mov	x22, x2
  41bc38:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  41bc3c:	str	q0, [sp, #128]
  41bc40:	add	x21, x21, #0xdc0
  41bc44:	str	q1, [sp, #144]
  41bc48:	str	q2, [sp, #160]
  41bc4c:	str	q3, [sp, #176]
  41bc50:	str	q4, [sp, #192]
  41bc54:	str	q5, [sp, #208]
  41bc58:	str	q6, [sp, #224]
  41bc5c:	str	q7, [sp, #240]
  41bc60:	stp	x3, x4, [sp, #264]
  41bc64:	stp	x5, x6, [sp, #280]
  41bc68:	str	x7, [sp, #296]
  41bc6c:	bl	406680 <strlen@plt>
  41bc70:	mov	x20, x0
  41bc74:	ldr	x0, [x24, #2096]
  41bc78:	bl	406680 <strlen@plt>
  41bc7c:	add	x20, x20, x0
  41bc80:	add	x19, x20, x19
  41bc84:	ldp	x20, x0, [x21, #64]
  41bc88:	add	x1, x19, #0x1a
  41bc8c:	cmp	x1, x0
  41bc90:	b.hi	41bd6c <message@@Base+0x15c>  // b.pmore
  41bc94:	add	x19, x20, x19
  41bc98:	strb	wzr, [x19, #25]
  41bc9c:	cbz	w23, 41bccc <message@@Base+0xbc>
  41bca0:	adrp	x0, 449000 <commands_started@@Base+0x170>
  41bca4:	ldr	x2, [x24, #2096]
  41bca8:	ldr	w3, [x0, #2112]
  41bcac:	cbz	w3, 41bd58 <message@@Base+0x148>
  41bcb0:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41bcb4:	mov	x0, x20
  41bcb8:	add	x1, x1, #0xf40
  41bcbc:	bl	406730 <sprintf@plt>
  41bcc0:	mov	x0, x20
  41bcc4:	bl	406680 <strlen@plt>
  41bcc8:	add	x20, x20, x0
  41bccc:	add	x0, sp, #0x130
  41bcd0:	stp	x0, x0, [sp, #96]
  41bcd4:	mov	w3, #0xffffff80            	// #-128
  41bcd8:	add	x5, sp, #0x100
  41bcdc:	mov	w4, #0xffffffd8            	// #-40
  41bce0:	str	x5, [sp, #112]
  41bce4:	mov	x1, x22
  41bce8:	stp	w4, w3, [sp, #120]
  41bcec:	add	x2, sp, #0x40
  41bcf0:	ldp	x4, x5, [sp, #96]
  41bcf4:	stp	x4, x5, [sp, #64]
  41bcf8:	mov	x0, x20
  41bcfc:	ldp	x4, x5, [sp, #112]
  41bd00:	stp	x4, x5, [sp, #80]
  41bd04:	bl	406c50 <vsprintf@plt>
  41bd08:	mov	x0, x20
  41bd0c:	bl	406680 <strlen@plt>
  41bd10:	ldr	x1, [x21, #64]
  41bd14:	mov	w2, #0xa                   	// #10
  41bd18:	strh	w2, [x20, x0]
  41bd1c:	cbz	x1, 41bd28 <message@@Base+0x118>
  41bd20:	ldrb	w0, [x1]
  41bd24:	cbnz	w0, 41bd3c <message@@Base+0x12c>
  41bd28:	ldp	x19, x20, [sp, #16]
  41bd2c:	ldp	x21, x22, [sp, #32]
  41bd30:	ldp	x23, x24, [sp, #48]
  41bd34:	ldp	x29, x30, [sp], #304
  41bd38:	ret
  41bd3c:	mov	w0, #0x0                   	// #0
  41bd40:	bl	41bb18 <output_start@@Base+0x2c8>
  41bd44:	ldp	x19, x20, [sp, #16]
  41bd48:	ldp	x21, x22, [sp, #32]
  41bd4c:	ldp	x23, x24, [sp, #48]
  41bd50:	ldp	x29, x30, [sp], #304
  41bd54:	ret
  41bd58:	mov	x0, x20
  41bd5c:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41bd60:	add	x1, x1, #0xf38
  41bd64:	bl	406730 <sprintf@plt>
  41bd68:	b	41bcc0 <message@@Base+0xb0>
  41bd6c:	add	x1, x0, x1, lsl #1
  41bd70:	mov	x0, x20
  41bd74:	str	x1, [x21, #72]
  41bd78:	bl	41ab78 <xrealloc@@Base>
  41bd7c:	mov	x20, x0
  41bd80:	str	x0, [x21, #64]
  41bd84:	b	41bc94 <message@@Base+0x84>

000000000041bd88 <error@@Base>:
  41bd88:	stp	x29, x30, [sp, #-320]!
  41bd8c:	mov	x29, sp
  41bd90:	stp	x23, x24, [sp, #48]
  41bd94:	adrp	x24, 449000 <commands_started@@Base+0x170>
  41bd98:	mov	x23, x2
  41bd9c:	stp	x19, x20, [sp, #16]
  41bda0:	mov	x19, x1
  41bda4:	stp	x21, x22, [sp, #32]
  41bda8:	str	x25, [sp, #64]
  41bdac:	mov	x25, x0
  41bdb0:	mov	x0, x2
  41bdb4:	str	q0, [sp, #144]
  41bdb8:	str	q1, [sp, #160]
  41bdbc:	str	q2, [sp, #176]
  41bdc0:	str	q3, [sp, #192]
  41bdc4:	str	q4, [sp, #208]
  41bdc8:	str	q5, [sp, #224]
  41bdcc:	str	q6, [sp, #240]
  41bdd0:	str	q7, [sp, #256]
  41bdd4:	stp	x3, x4, [sp, #280]
  41bdd8:	stp	x5, x6, [sp, #296]
  41bddc:	str	x7, [sp, #312]
  41bde0:	bl	406680 <strlen@plt>
  41bde4:	mov	x20, x0
  41bde8:	ldr	x0, [x24, #2096]
  41bdec:	bl	406680 <strlen@plt>
  41bdf0:	add	x20, x20, x0
  41bdf4:	cbz	x25, 41bed4 <error@@Base+0x14c>
  41bdf8:	ldr	x0, [x25]
  41bdfc:	cbz	x0, 41be08 <error@@Base+0x80>
  41be00:	bl	406680 <strlen@plt>
  41be04:	add	x19, x19, x0
  41be08:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  41be0c:	add	x21, x21, #0xdc0
  41be10:	add	x19, x20, x19
  41be14:	add	x1, x19, #0x1a
  41be18:	ldp	x22, x0, [x21, #64]
  41be1c:	cmp	x0, x1
  41be20:	b.cc	41bf30 <error@@Base+0x1a8>  // b.lo, b.ul, b.last
  41be24:	add	x19, x22, x19
  41be28:	strb	wzr, [x19, #25]
  41be2c:	ldr	x2, [x25]
  41be30:	cbz	x2, 41bef8 <error@@Base+0x170>
  41be34:	ldp	x4, x3, [x25, #8]
  41be38:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41be3c:	mov	x0, x22
  41be40:	add	x1, x1, #0xf50
  41be44:	add	x3, x4, x3
  41be48:	bl	406730 <sprintf@plt>
  41be4c:	mov	x0, x22
  41be50:	bl	406680 <strlen@plt>
  41be54:	add	x6, sp, #0x140
  41be58:	stp	x6, x6, [sp, #112]
  41be5c:	mov	w3, #0xffffff80            	// #-128
  41be60:	add	x5, sp, #0x110
  41be64:	mov	w4, #0xffffffd8            	// #-40
  41be68:	str	x5, [sp, #128]
  41be6c:	mov	x1, x23
  41be70:	stp	w4, w3, [sp, #136]
  41be74:	add	x2, sp, #0x50
  41be78:	ldp	x4, x5, [sp, #112]
  41be7c:	stp	x4, x5, [sp, #80]
  41be80:	add	x22, x22, x0
  41be84:	ldp	x4, x5, [sp, #128]
  41be88:	mov	x0, x22
  41be8c:	stp	x4, x5, [sp, #96]
  41be90:	bl	406c50 <vsprintf@plt>
  41be94:	mov	x0, x22
  41be98:	bl	406680 <strlen@plt>
  41be9c:	ldr	x1, [x21, #64]
  41bea0:	mov	w2, #0xa                   	// #10
  41bea4:	strh	w2, [x22, x0]
  41bea8:	cbz	x1, 41bebc <error@@Base+0x134>
  41beac:	ldrb	w0, [x1]
  41beb0:	cbz	w0, 41bebc <error@@Base+0x134>
  41beb4:	mov	w0, #0x1                   	// #1
  41beb8:	bl	41bb18 <output_start@@Base+0x2c8>
  41bebc:	ldp	x19, x20, [sp, #16]
  41bec0:	ldp	x21, x22, [sp, #32]
  41bec4:	ldp	x23, x24, [sp, #48]
  41bec8:	ldr	x25, [sp, #64]
  41becc:	ldp	x29, x30, [sp], #320
  41bed0:	ret
  41bed4:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  41bed8:	add	x21, x21, #0xdc0
  41bedc:	add	x19, x19, x20
  41bee0:	add	x1, x19, #0x1a
  41bee4:	ldp	x22, x0, [x21, #64]
  41bee8:	cmp	x0, x1
  41beec:	b.cc	41bf5c <error@@Base+0x1d4>  // b.lo, b.ul, b.last
  41bef0:	add	x19, x22, x19
  41bef4:	strb	wzr, [x19, #25]
  41bef8:	adrp	x0, 449000 <commands_started@@Base+0x170>
  41befc:	ldr	x2, [x24, #2096]
  41bf00:	ldr	w3, [x0, #2112]
  41bf04:	cbnz	w3, 41bf1c <error@@Base+0x194>
  41bf08:	mov	x0, x22
  41bf0c:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41bf10:	add	x1, x1, #0xf38
  41bf14:	bl	406730 <sprintf@plt>
  41bf18:	b	41be4c <error@@Base+0xc4>
  41bf1c:	mov	x0, x22
  41bf20:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41bf24:	add	x1, x1, #0xf40
  41bf28:	bl	406730 <sprintf@plt>
  41bf2c:	b	41be4c <error@@Base+0xc4>
  41bf30:	add	x1, x0, x1, lsl #1
  41bf34:	mov	x0, x22
  41bf38:	str	x1, [x21, #72]
  41bf3c:	bl	41ab78 <xrealloc@@Base>
  41bf40:	mov	x22, x0
  41bf44:	str	x0, [x21, #64]
  41bf48:	add	x19, x22, x19
  41bf4c:	strb	wzr, [x19, #25]
  41bf50:	ldr	x2, [x25]
  41bf54:	cbnz	x2, 41be34 <error@@Base+0xac>
  41bf58:	b	41bef8 <error@@Base+0x170>
  41bf5c:	add	x1, x0, x1, lsl #1
  41bf60:	mov	x0, x22
  41bf64:	str	x1, [x21, #72]
  41bf68:	bl	41ab78 <xrealloc@@Base>
  41bf6c:	mov	x22, x0
  41bf70:	str	x0, [x21, #64]
  41bf74:	b	41bef0 <error@@Base+0x168>

000000000041bf78 <perror_with_name@@Base>:
  41bf78:	stp	x29, x30, [sp, #-64]!
  41bf7c:	mov	x29, sp
  41bf80:	stp	x19, x20, [sp, #16]
  41bf84:	mov	x20, x0
  41bf88:	stp	x21, x22, [sp, #32]
  41bf8c:	mov	x21, x1
  41bf90:	stp	x23, x24, [sp, #48]
  41bf94:	bl	406d70 <__errno_location@plt>
  41bf98:	ldr	w0, [x0]
  41bf9c:	bl	406a40 <strerror@plt>
  41bfa0:	mov	x22, x0
  41bfa4:	mov	x0, x20
  41bfa8:	bl	406680 <strlen@plt>
  41bfac:	mov	x19, x0
  41bfb0:	mov	x0, x21
  41bfb4:	bl	406680 <strlen@plt>
  41bfb8:	mov	x24, x0
  41bfbc:	mov	x0, x22
  41bfc0:	bl	406680 <strlen@plt>
  41bfc4:	add	x19, x19, x24
  41bfc8:	mov	x23, x0
  41bfcc:	mov	w2, #0x5                   	// #5
  41bfd0:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41bfd4:	mov	x0, #0x0                   	// #0
  41bfd8:	add	x1, x1, #0xf60
  41bfdc:	bl	406cd0 <dcgettext@plt>
  41bfe0:	mov	x2, x0
  41bfe4:	add	x1, x19, x23
  41bfe8:	mov	x5, x22
  41bfec:	mov	x4, x21
  41bff0:	mov	x3, x20
  41bff4:	ldp	x19, x20, [sp, #16]
  41bff8:	mov	x0, #0x0                   	// #0
  41bffc:	ldp	x21, x22, [sp, #32]
  41c000:	ldp	x23, x24, [sp, #48]
  41c004:	ldp	x29, x30, [sp], #64
  41c008:	b	41bd88 <error@@Base>
  41c00c:	nop
  41c010:	stp	x29, x30, [sp, #-32]!
  41c014:	mov	x29, sp
  41c018:	stp	x19, x20, [sp, #16]
  41c01c:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  41c020:	ldr	x0, [x20, #440]
  41c024:	bl	406e00 <ferror@plt>
  41c028:	mov	w19, w0
  41c02c:	ldr	x0, [x20, #440]
  41c030:	bl	406890 <fclose@plt>
  41c034:	orr	w19, w19, w0
  41c038:	cbnz	w19, 41c048 <perror_with_name@@Base+0xd0>
  41c03c:	ldp	x19, x20, [sp, #16]
  41c040:	ldp	x29, x30, [sp], #32
  41c044:	ret
  41c048:	cbz	w0, 41c074 <perror_with_name@@Base+0xfc>
  41c04c:	mov	w2, #0x5                   	// #5
  41c050:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41c054:	mov	x0, #0x0                   	// #0
  41c058:	add	x1, x1, #0xf70
  41c05c:	bl	406cd0 <dcgettext@plt>
  41c060:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41c064:	add	x1, x1, #0xed0
  41c068:	bl	41bf78 <perror_with_name@@Base>
  41c06c:	mov	w0, #0x1                   	// #1
  41c070:	bl	4066a0 <exit@plt>
  41c074:	mov	w2, #0x5                   	// #5
  41c078:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41c07c:	mov	x0, #0x0                   	// #0
  41c080:	add	x1, x1, #0xf70
  41c084:	bl	406cd0 <dcgettext@plt>
  41c088:	mov	x2, x0
  41c08c:	mov	x1, #0x0                   	// #0
  41c090:	mov	x0, #0x0                   	// #0
  41c094:	bl	41bd88 <error@@Base>
  41c098:	b	41c06c <perror_with_name@@Base+0xf4>
  41c09c:	nop

000000000041c0a0 <fatal@@Base>:
  41c0a0:	stp	x29, x30, [sp, #-320]!
  41c0a4:	mov	x29, sp
  41c0a8:	stp	x25, x26, [sp, #64]
  41c0ac:	mov	x26, x1
  41c0b0:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41c0b4:	add	x1, x1, #0xf88
  41c0b8:	stp	x23, x24, [sp, #48]
  41c0bc:	mov	x23, x2
  41c0c0:	mov	w2, #0x5                   	// #5
  41c0c4:	adrp	x24, 449000 <commands_started@@Base+0x170>
  41c0c8:	stp	x19, x20, [sp, #16]
  41c0cc:	mov	x19, #0x0                   	// #0
  41c0d0:	stp	x21, x22, [sp, #32]
  41c0d4:	mov	x21, x0
  41c0d8:	mov	x0, #0x0                   	// #0
  41c0dc:	str	q0, [sp, #144]
  41c0e0:	str	q1, [sp, #160]
  41c0e4:	str	q2, [sp, #176]
  41c0e8:	str	q3, [sp, #192]
  41c0ec:	str	q4, [sp, #208]
  41c0f0:	str	q5, [sp, #224]
  41c0f4:	str	q6, [sp, #240]
  41c0f8:	str	q7, [sp, #256]
  41c0fc:	stp	x3, x4, [sp, #280]
  41c100:	stp	x5, x6, [sp, #296]
  41c104:	str	x7, [sp, #312]
  41c108:	bl	406cd0 <dcgettext@plt>
  41c10c:	mov	x22, x0
  41c110:	mov	x0, x23
  41c114:	bl	406680 <strlen@plt>
  41c118:	mov	x20, x0
  41c11c:	ldr	x0, [x24, #2096]
  41c120:	bl	406680 <strlen@plt>
  41c124:	add	x20, x20, x0
  41c128:	cbz	x21, 41c13c <fatal@@Base+0x9c>
  41c12c:	ldr	x0, [x21]
  41c130:	cbz	x0, 41c13c <fatal@@Base+0x9c>
  41c134:	bl	406680 <strlen@plt>
  41c138:	mov	x19, x0
  41c13c:	adrp	x25, 446000 <expanding_var@@Base+0x320>
  41c140:	add	x25, x25, #0xdc0
  41c144:	mov	x0, x22
  41c148:	bl	406680 <strlen@plt>
  41c14c:	add	x19, x0, x19
  41c150:	add	x19, x19, x20
  41c154:	ldp	x20, x0, [x25, #64]
  41c158:	add	x19, x19, x26
  41c15c:	add	x1, x19, #0x1d
  41c160:	cmp	x1, x0
  41c164:	b.hi	41c240 <fatal@@Base+0x1a0>  // b.pmore
  41c168:	add	x19, x20, x19
  41c16c:	strb	wzr, [x19, #28]
  41c170:	cbz	x21, 41c208 <fatal@@Base+0x168>
  41c174:	ldr	x2, [x21]
  41c178:	cbz	x2, 41c208 <fatal@@Base+0x168>
  41c17c:	ldp	x4, x3, [x21, #8]
  41c180:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41c184:	mov	x0, x20
  41c188:	add	x1, x1, #0xf98
  41c18c:	add	x3, x4, x3
  41c190:	bl	406730 <sprintf@plt>
  41c194:	mov	x0, x20
  41c198:	bl	406680 <strlen@plt>
  41c19c:	add	x5, sp, #0x140
  41c1a0:	stp	x5, x5, [sp, #112]
  41c1a4:	mov	w3, #0xffffff80            	// #-128
  41c1a8:	add	x1, sp, #0x110
  41c1ac:	mov	w4, #0xffffffd8            	// #-40
  41c1b0:	str	x1, [sp, #128]
  41c1b4:	add	x2, sp, #0x50
  41c1b8:	stp	w4, w3, [sp, #136]
  41c1bc:	add	x20, x20, x0
  41c1c0:	ldp	x4, x5, [sp, #112]
  41c1c4:	stp	x4, x5, [sp, #80]
  41c1c8:	mov	x1, x23
  41c1cc:	ldp	x4, x5, [sp, #128]
  41c1d0:	mov	x0, x20
  41c1d4:	stp	x4, x5, [sp, #96]
  41c1d8:	bl	406c50 <vsprintf@plt>
  41c1dc:	mov	x1, x22
  41c1e0:	mov	x0, x20
  41c1e4:	bl	406960 <strcat@plt>
  41c1e8:	ldr	x1, [x25, #64]
  41c1ec:	cbz	x1, 41c200 <fatal@@Base+0x160>
  41c1f0:	ldrb	w0, [x1]
  41c1f4:	cbz	w0, 41c200 <fatal@@Base+0x160>
  41c1f8:	mov	w0, #0x1                   	// #1
  41c1fc:	bl	41bb18 <output_start@@Base+0x2c8>
  41c200:	mov	w0, #0x2                   	// #2
  41c204:	bl	419880 <die@@Base>
  41c208:	adrp	x0, 449000 <commands_started@@Base+0x170>
  41c20c:	ldr	x2, [x24, #2096]
  41c210:	ldr	w3, [x0, #2112]
  41c214:	cbnz	w3, 41c22c <fatal@@Base+0x18c>
  41c218:	mov	x0, x20
  41c21c:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41c220:	add	x1, x1, #0xfa8
  41c224:	bl	406730 <sprintf@plt>
  41c228:	b	41c194 <fatal@@Base+0xf4>
  41c22c:	mov	x0, x20
  41c230:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41c234:	add	x1, x1, #0xfb8
  41c238:	bl	406730 <sprintf@plt>
  41c23c:	b	41c194 <fatal@@Base+0xf4>
  41c240:	add	x1, x0, x1, lsl #1
  41c244:	mov	x0, x20
  41c248:	str	x1, [x25, #72]
  41c24c:	bl	41ab78 <xrealloc@@Base>
  41c250:	mov	x20, x0
  41c254:	str	x0, [x25, #64]
  41c258:	b	41c168 <fatal@@Base+0xc8>
  41c25c:	nop

000000000041c260 <out_of_memory@@Base>:
  41c260:	stp	x29, x30, [sp, #-48]!
  41c264:	mov	x29, sp
  41c268:	stp	x19, x20, [sp, #16]
  41c26c:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  41c270:	ldr	x0, [x20, #440]
  41c274:	str	x21, [sp, #32]
  41c278:	bl	406850 <fileno@plt>
  41c27c:	mov	w19, w0
  41c280:	adrp	x1, 449000 <commands_started@@Base+0x170>
  41c284:	ldr	x21, [x1, #2096]
  41c288:	mov	x0, x21
  41c28c:	bl	406680 <strlen@plt>
  41c290:	mov	x1, x21
  41c294:	mov	x2, x0
  41c298:	mov	w0, w19
  41c29c:	bl	41ace8 <writebuf@@Base>
  41c2a0:	ldr	x0, [x20, #440]
  41c2a4:	bl	406850 <fileno@plt>
  41c2a8:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41c2ac:	add	x1, x1, #0xfc8
  41c2b0:	mov	x2, #0x1f                  	// #31
  41c2b4:	bl	41ace8 <writebuf@@Base>
  41c2b8:	mov	w0, #0x2                   	// #2
  41c2bc:	bl	4066a0 <exit@plt>
  41c2c0:	ldrb	w3, [x0]
  41c2c4:	adrp	x4, 446000 <expanding_var@@Base+0x320>
  41c2c8:	add	x4, x4, #0x4c0
  41c2cc:	mov	x5, x0
  41c2d0:	ldrh	w0, [x4, w3, sxtw #1]
  41c2d4:	tbz	w0, #1, 41c2e4 <out_of_memory@@Base+0x84>
  41c2d8:	ldrb	w3, [x5, #1]!
  41c2dc:	ldrh	w0, [x4, w3, sxtw #1]
  41c2e0:	tbnz	w0, #1, 41c2d8 <out_of_memory@@Base+0x78>
  41c2e4:	cmp	w3, #0x3a
  41c2e8:	add	x8, x5, #0x1
  41c2ec:	b.eq	41c4b0 <out_of_memory@@Base+0x250>  // b.none
  41c2f0:	b.hi	41c390 <out_of_memory@@Base+0x130>  // b.pmore
  41c2f4:	cmp	w3, #0x26
  41c2f8:	b.eq	41c4f0 <out_of_memory@@Base+0x290>  // b.none
  41c2fc:	b.ls	41c3bc <out_of_memory@@Base+0x15c>  // b.plast
  41c300:	cmp	w3, #0x2b
  41c304:	b.ne	41c318 <out_of_memory@@Base+0xb8>  // b.any
  41c308:	ldrb	w0, [x5, #1]
  41c30c:	cmp	w0, #0x3d
  41c310:	b.eq	41c4a4 <out_of_memory@@Base+0x244>  // b.none
  41c314:	nop
  41c318:	mov	x6, #0xb                   	// #11
  41c31c:	cmp	w3, #0x26
  41c320:	mov	w0, #0x2                   	// #2
  41c324:	mov	x7, #0x1                   	// #1
  41c328:	movk	x6, #0x4, lsl #32
  41c32c:	b.eq	41c378 <out_of_memory@@Base+0x118>  // b.none
  41c330:	b.ls	41c414 <out_of_memory@@Base+0x1b4>  // b.plast
  41c334:	cmp	w3, #0x3f
  41c338:	b.eq	41c400 <out_of_memory@@Base+0x1a0>  // b.none
  41c33c:	b.ls	41c3d4 <out_of_memory@@Base+0x174>  // b.plast
  41c340:	cmp	w3, #0x5c
  41c344:	b.ne	41c470 <out_of_memory@@Base+0x210>  // b.any
  41c348:	mov	x9, x8
  41c34c:	ldrb	w3, [x9], #1
  41c350:	sub	w4, w3, #0x3a
  41c354:	and	w4, w4, #0xff
  41c358:	cmp	w4, #0x22
  41c35c:	b.hi	41c36c <out_of_memory@@Base+0x10c>  // b.pmore
  41c360:	lsl	x4, x7, x4
  41c364:	tst	x4, x6
  41c368:	b.ne	41c494 <out_of_memory@@Base+0x234>  // b.any
  41c36c:	mov	x8, x9
  41c370:	cmp	w3, #0x26
  41c374:	b.ne	41c330 <out_of_memory@@Base+0xd0>  // b.any
  41c378:	ldrb	w3, [x8]
  41c37c:	cmp	w3, #0x3a
  41c380:	b.eq	41c3e4 <out_of_memory@@Base+0x184>  // b.none
  41c384:	add	x9, x8, #0x1
  41c388:	mov	x8, x9
  41c38c:	b	41c370 <out_of_memory@@Base+0x110>
  41c390:	cmp	w3, #0x3d
  41c394:	b.eq	41c480 <out_of_memory@@Base+0x220>  // b.none
  41c398:	cmp	w3, #0x3f
  41c39c:	b.eq	41c308 <out_of_memory@@Base+0xa8>  // b.none
  41c3a0:	cmp	w3, #0x3b
  41c3a4:	b.ne	41c318 <out_of_memory@@Base+0xb8>  // b.any
  41c3a8:	mov	x4, #0x1                   	// #1
  41c3ac:	mov	w0, #0x6                   	// #6
  41c3b0:	str	x5, [x1]
  41c3b4:	str	x4, [x2]
  41c3b8:	ret
  41c3bc:	mov	x4, #0x1                   	// #1
  41c3c0:	mov	w0, w4
  41c3c4:	cbz	w3, 41c3b0 <out_of_memory@@Base+0x150>
  41c3c8:	cmp	w3, #0x21
  41c3cc:	b.eq	41c308 <out_of_memory@@Base+0xa8>  // b.none
  41c3d0:	b	41c318 <out_of_memory@@Base+0xb8>
  41c3d4:	cmp	w3, #0x3a
  41c3d8:	b.eq	41c3e4 <out_of_memory@@Base+0x184>  // b.none
  41c3dc:	cmp	w3, #0x3d
  41c3e0:	b.ne	41c3f8 <out_of_memory@@Base+0x198>  // b.any
  41c3e4:	sub	x8, x8, #0x1
  41c3e8:	str	x5, [x1]
  41c3ec:	sub	x4, x8, x5
  41c3f0:	str	x4, [x2]
  41c3f4:	ret
  41c3f8:	cmp	w3, #0x2b
  41c3fc:	b.ne	41c470 <out_of_memory@@Base+0x210>  // b.any
  41c400:	ldrb	w3, [x8]
  41c404:	cmp	w3, #0x3d
  41c408:	b.eq	41c3e4 <out_of_memory@@Base+0x184>  // b.none
  41c40c:	add	x9, x8, #0x1
  41c410:	b	41c388 <out_of_memory@@Base+0x128>
  41c414:	cmp	w3, #0x20
  41c418:	b.eq	41c3e4 <out_of_memory@@Base+0x184>  // b.none
  41c41c:	cmp	w3, #0x20
  41c420:	b.ls	41c464 <out_of_memory@@Base+0x204>  // b.plast
  41c424:	cmp	w3, #0x24
  41c428:	b.ne	41c470 <out_of_memory@@Base+0x210>  // b.any
  41c42c:	mov	x4, x8
  41c430:	ldrb	w10, [x4], #1
  41c434:	cmp	w10, #0x24
  41c438:	b.eq	41c494 <out_of_memory@@Base+0x234>  // b.none
  41c43c:	cbz	w10, 41c3e8 <out_of_memory@@Base+0x188>
  41c440:	cmp	w10, #0x28
  41c444:	add	x9, x8, #0x2
  41c448:	b.eq	41c520 <out_of_memory@@Base+0x2c0>  // b.none
  41c44c:	cmp	w10, #0x7b
  41c450:	b.eq	41c58c <out_of_memory@@Base+0x32c>  // b.none
  41c454:	ldrb	w3, [x8, #1]
  41c458:	mov	w0, #0x3                   	// #3
  41c45c:	mov	x8, x9
  41c460:	b	41c370 <out_of_memory@@Base+0x110>
  41c464:	cbz	w3, 41c3e4 <out_of_memory@@Base+0x184>
  41c468:	cmp	w3, #0x9
  41c46c:	b.eq	41c3e4 <out_of_memory@@Base+0x184>  // b.none
  41c470:	mov	x9, x8
  41c474:	ldrb	w3, [x9], #1
  41c478:	mov	x8, x9
  41c47c:	b	41c370 <out_of_memory@@Base+0x110>
  41c480:	str	x5, [x1]
  41c484:	mov	x4, #0x1                   	// #1
  41c488:	mov	w0, #0x7                   	// #7
  41c48c:	str	x4, [x2]
  41c490:	ret
  41c494:	add	x9, x8, #0x2
  41c498:	ldrb	w3, [x8, #1]
  41c49c:	mov	x8, x9
  41c4a0:	b	41c370 <out_of_memory@@Base+0x110>
  41c4a4:	mov	x4, #0x2                   	// #2
  41c4a8:	mov	w0, #0x7                   	// #7
  41c4ac:	b	41c3b0 <out_of_memory@@Base+0x150>
  41c4b0:	ldrb	w0, [x5, #1]
  41c4b4:	cmp	w0, #0x3d
  41c4b8:	b.eq	41c4a4 <out_of_memory@@Base+0x244>  // b.none
  41c4bc:	cmp	w0, #0x3a
  41c4c0:	mov	x4, #0x1                   	// #1
  41c4c4:	mov	w0, #0x4                   	// #4
  41c4c8:	b.ne	41c3b0 <out_of_memory@@Base+0x150>  // b.any
  41c4cc:	ldrb	w3, [x5, #3]
  41c4d0:	mov	x4, #0x3                   	// #3
  41c4d4:	mov	x7, #0x2                   	// #2
  41c4d8:	mov	w0, #0x7                   	// #7
  41c4dc:	cmp	w3, #0x3d
  41c4e0:	mov	w6, #0x5                   	// #5
  41c4e4:	csel	x4, x4, x7, eq  // eq = none
  41c4e8:	csel	w0, w0, w6, eq  // eq = none
  41c4ec:	b	41c3b0 <out_of_memory@@Base+0x150>
  41c4f0:	ldrb	w0, [x5, #1]
  41c4f4:	cmp	w0, #0x3a
  41c4f8:	b.ne	41c318 <out_of_memory@@Base+0xb8>  // b.any
  41c4fc:	ldrb	w3, [x5, #2]
  41c500:	mov	x4, #0x3                   	// #3
  41c504:	mov	x7, #0x2                   	// #2
  41c508:	mov	w0, #0x9                   	// #9
  41c50c:	cmp	w3, #0x3a
  41c510:	mov	w6, #0x8                   	// #8
  41c514:	csel	x4, x4, x7, eq  // eq = none
  41c518:	csel	w0, w0, w6, eq  // eq = none
  41c51c:	b	41c3b0 <out_of_memory@@Base+0x150>
  41c520:	mov	w11, #0x29                  	// #41
  41c524:	ldrb	w3, [x8, #1]
  41c528:	mov	w0, #0x3                   	// #3
  41c52c:	cbz	w3, 41c594 <out_of_memory@@Base+0x334>
  41c530:	mov	w8, #0x0                   	// #0
  41c534:	b	41c550 <out_of_memory@@Base+0x2f0>
  41c538:	cmp	w3, w11
  41c53c:	b.eq	41c560 <out_of_memory@@Base+0x300>  // b.none
  41c540:	ldrb	w3, [x4, #1]
  41c544:	add	x0, x4, #0x1
  41c548:	cbz	w3, 41c580 <out_of_memory@@Base+0x320>
  41c54c:	mov	x4, x0
  41c550:	cmp	w3, w10
  41c554:	b.ne	41c538 <out_of_memory@@Base+0x2d8>  // b.any
  41c558:	add	w8, w8, #0x1
  41c55c:	b	41c540 <out_of_memory@@Base+0x2e0>
  41c560:	sub	w8, w8, #0x1
  41c564:	cmn	w8, #0x1
  41c568:	b.ne	41c540 <out_of_memory@@Base+0x2e0>  // b.any
  41c56c:	add	x9, x4, #0x2
  41c570:	ldrb	w3, [x4, #1]
  41c574:	mov	x8, x9
  41c578:	mov	w0, #0x3                   	// #3
  41c57c:	b	41c370 <out_of_memory@@Base+0x110>
  41c580:	add	x8, x4, #0x2
  41c584:	mov	w0, #0x3                   	// #3
  41c588:	b	41c41c <out_of_memory@@Base+0x1bc>
  41c58c:	mov	w11, #0x7d                  	// #125
  41c590:	b	41c524 <out_of_memory@@Base+0x2c4>
  41c594:	mov	x8, x9
  41c598:	sub	x8, x8, #0x1
  41c59c:	b	41c3e8 <out_of_memory@@Base+0x188>
  41c5a0:	stp	x29, x30, [sp, #-96]!
  41c5a4:	cmp	x1, #0x5
  41c5a8:	mov	x29, sp
  41c5ac:	stp	x19, x20, [sp, #16]
  41c5b0:	mov	x20, x1
  41c5b4:	mov	x19, x0
  41c5b8:	stp	x21, x22, [sp, #32]
  41c5bc:	mov	x22, x2
  41c5c0:	stp	x23, x24, [sp, #48]
  41c5c4:	stp	x25, x26, [sp, #64]
  41c5c8:	str	x27, [sp, #80]
  41c5cc:	b.eq	41c714 <out_of_memory@@Base+0x4b4>  // b.none
  41c5d0:	cmp	x1, #0x6
  41c5d4:	b.eq	41c6d4 <out_of_memory@@Base+0x474>  // b.none
  41c5d8:	cmp	x1, #0x4
  41c5dc:	b.ne	41c6f0 <out_of_memory@@Base+0x490>  // b.any
  41c5e0:	adrp	x21, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41c5e4:	add	x21, x21, #0x10
  41c5e8:	mov	x2, x1
  41c5ec:	mov	x0, x21
  41c5f0:	mov	x1, x19
  41c5f4:	bl	406930 <strncmp@plt>
  41c5f8:	cbz	w0, 41c828 <out_of_memory@@Base+0x5c8>
  41c5fc:	adrp	x21, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41c600:	add	x21, x21, #0x0
  41c604:	mov	x0, x21
  41c608:	mov	x2, x20
  41c60c:	mov	x1, x19
  41c610:	bl	406930 <strncmp@plt>
  41c614:	cbnz	w0, 41c6f0 <out_of_memory@@Base+0x490>
  41c618:	ldrb	w4, [x19, #4]
  41c61c:	adrp	x23, 446000 <expanding_var@@Base+0x320>
  41c620:	add	x23, x23, #0x4c0
  41c624:	add	x19, x19, #0x4
  41c628:	mov	w26, w20
  41c62c:	ldrh	w0, [x23, w4, sxtw #1]
  41c630:	tst	w0, #0x6
  41c634:	b.ne	41c770 <out_of_memory@@Base+0x510>  // b.any
  41c638:	adrp	x24, 446000 <expanding_var@@Base+0x320>
  41c63c:	ldr	x25, [x24, #208]
  41c640:	ldr	w27, [x25]
  41c644:	cbz	w27, 41cdb4 <out_of_memory@@Base+0xb54>
  41c648:	ldr	x0, [x25, #16]
  41c64c:	sub	w26, w27, #0x1
  41c650:	ldrb	w0, [x0, w26, uxtw]
  41c654:	cbnz	w0, 41ce10 <out_of_memory@@Base+0xbb0>
  41c658:	ldr	x1, [x25, #8]
  41c65c:	ldrb	w0, [x1, w26, uxtw]
  41c660:	cbz	w0, 41cc64 <out_of_memory@@Base+0xa04>
  41c664:	cmp	w0, #0x1
  41c668:	b.ne	41c674 <out_of_memory@@Base+0x414>  // b.any
  41c66c:	strb	wzr, [x1, w26, uxtw]
  41c670:	ldrb	w4, [x19]
  41c674:	cbnz	w4, 41cab8 <out_of_memory@@Base+0x858>
  41c678:	ldr	x0, [x25, #16]
  41c67c:	mov	w1, #0x1                   	// #1
  41c680:	strb	w1, [x0, w26, uxtw]
  41c684:	ldr	w2, [x25]
  41c688:	cbz	w2, 41c830 <out_of_memory@@Base+0x5d0>
  41c68c:	ldr	x0, [x25, #8]
  41c690:	sub	w2, w2, #0x1
  41c694:	add	x2, x2, x0
  41c698:	b	41c6a8 <out_of_memory@@Base+0x448>
  41c69c:	cmp	x2, x0
  41c6a0:	add	x0, x0, #0x1
  41c6a4:	b.eq	41c830 <out_of_memory@@Base+0x5d0>  // b.none
  41c6a8:	ldrb	w1, [x0]
  41c6ac:	cbz	w1, 41c69c <out_of_memory@@Base+0x43c>
  41c6b0:	mov	sp, x29
  41c6b4:	mov	w0, #0x1                   	// #1
  41c6b8:	ldp	x19, x20, [sp, #16]
  41c6bc:	ldp	x21, x22, [sp, #32]
  41c6c0:	ldp	x23, x24, [sp, #48]
  41c6c4:	ldp	x25, x26, [sp, #64]
  41c6c8:	ldr	x27, [sp, #80]
  41c6cc:	ldp	x29, x30, [sp], #96
  41c6d0:	ret
  41c6d4:	adrp	x21, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41c6d8:	add	x21, x21, #0x18
  41c6dc:	mov	x2, x1
  41c6e0:	mov	x0, x21
  41c6e4:	mov	x1, x19
  41c6e8:	bl	406930 <strncmp@plt>
  41c6ec:	cbz	w0, 41c820 <out_of_memory@@Base+0x5c0>
  41c6f0:	mov	w0, #0xfffffffe            	// #-2
  41c6f4:	mov	sp, x29
  41c6f8:	ldp	x19, x20, [sp, #16]
  41c6fc:	ldp	x21, x22, [sp, #32]
  41c700:	ldp	x23, x24, [sp, #48]
  41c704:	ldp	x25, x26, [sp, #64]
  41c708:	ldr	x27, [sp, #80]
  41c70c:	ldp	x29, x30, [sp], #96
  41c710:	ret
  41c714:	adrp	x21, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41c718:	add	x21, x21, #0x20
  41c71c:	mov	x2, x1
  41c720:	mov	x0, x21
  41c724:	mov	x1, x19
  41c728:	bl	406930 <strncmp@plt>
  41c72c:	cbz	w0, 41c818 <out_of_memory@@Base+0x5b8>
  41c730:	adrp	x21, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41c734:	add	x21, x21, #0x28
  41c738:	mov	x0, x21
  41c73c:	mov	x2, x20
  41c740:	mov	x1, x19
  41c744:	bl	406930 <strncmp@plt>
  41c748:	cbnz	w0, 41c854 <out_of_memory@@Base+0x5f4>
  41c74c:	mov	w26, #0x3                   	// #3
  41c750:	ldrb	w0, [x19, x20]
  41c754:	adrp	x23, 446000 <expanding_var@@Base+0x320>
  41c758:	add	x23, x23, #0x4c0
  41c75c:	add	x19, x19, x20
  41c760:	ldrh	w0, [x23, x0, lsl #1]
  41c764:	tst	w0, #0x6
  41c768:	b.eq	41c790 <out_of_memory@@Base+0x530>  // b.none
  41c76c:	nop
  41c770:	ldrb	w4, [x19, #1]!
  41c774:	ldrh	w3, [x23, w4, sxtw #1]
  41c778:	tst	w3, #0x6
  41c77c:	b.ne	41c770 <out_of_memory@@Base+0x510>  // b.any
  41c780:	cmp	w26, #0x5
  41c784:	b.eq	41c890 <out_of_memory@@Base+0x630>  // b.none
  41c788:	cmp	w26, #0x4
  41c78c:	b.eq	41c638 <out_of_memory@@Base+0x3d8>  // b.none
  41c790:	adrp	x24, 446000 <expanding_var@@Base+0x320>
  41c794:	ldr	x20, [x24, #208]
  41c798:	ldr	w1, [x20, #4]
  41c79c:	cbz	w1, 41ca1c <out_of_memory@@Base+0x7bc>
  41c7a0:	ldr	w27, [x20]
  41c7a4:	add	w0, w27, #0x1
  41c7a8:	str	w0, [x20]
  41c7ac:	cmp	w0, w1
  41c7b0:	b.hi	41ca5c <out_of_memory@@Base+0x7fc>  // b.pmore
  41c7b4:	ldr	x0, [x20, #16]
  41c7b8:	strb	wzr, [x0, w27, uxtw]
  41c7bc:	cbz	w27, 41c8b0 <out_of_memory@@Base+0x650>
  41c7c0:	ldr	x2, [x20, #8]
  41c7c4:	sub	w0, w27, #0x1
  41c7c8:	add	x0, x0, #0x1
  41c7cc:	add	x0, x0, x2
  41c7d0:	mov	x1, x2
  41c7d4:	b	41c7e4 <out_of_memory@@Base+0x584>
  41c7d8:	add	x1, x1, #0x1
  41c7dc:	cmp	x0, x1
  41c7e0:	b.eq	41c8b0 <out_of_memory@@Base+0x650>  // b.none
  41c7e4:	ldrb	w3, [x1]
  41c7e8:	cbz	w3, 41c7d8 <out_of_memory@@Base+0x578>
  41c7ec:	mov	w1, #0x1                   	// #1
  41c7f0:	strb	w1, [x2, w27, uxtw]
  41c7f4:	mov	w0, #0x1                   	// #1
  41c7f8:	mov	sp, x29
  41c7fc:	ldp	x19, x20, [sp, #16]
  41c800:	ldp	x21, x22, [sp, #32]
  41c804:	ldp	x23, x24, [sp, #48]
  41c808:	ldp	x25, x26, [sp, #64]
  41c80c:	ldr	x27, [sp, #80]
  41c810:	ldp	x29, x30, [sp], #96
  41c814:	ret
  41c818:	mov	w26, #0x0                   	// #0
  41c81c:	b	41c750 <out_of_memory@@Base+0x4f0>
  41c820:	mov	w26, #0x1                   	// #1
  41c824:	b	41c750 <out_of_memory@@Base+0x4f0>
  41c828:	mov	w26, #0x2                   	// #2
  41c82c:	b	41c750 <out_of_memory@@Base+0x4f0>
  41c830:	mov	sp, x29
  41c834:	mov	w0, #0x0                   	// #0
  41c838:	ldp	x19, x20, [sp, #16]
  41c83c:	ldp	x21, x22, [sp, #32]
  41c840:	ldp	x23, x24, [sp, #48]
  41c844:	ldp	x25, x26, [sp, #64]
  41c848:	ldr	x27, [sp, #80]
  41c84c:	ldp	x29, x30, [sp], #96
  41c850:	ret
  41c854:	adrp	x21, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41c858:	add	x21, x21, #0x8
  41c85c:	mov	x0, x21
  41c860:	mov	x2, x20
  41c864:	mov	x1, x19
  41c868:	bl	406930 <strncmp@plt>
  41c86c:	cbnz	w0, 41c6f0 <out_of_memory@@Base+0x490>
  41c870:	ldrb	w4, [x19, #5]
  41c874:	adrp	x23, 446000 <expanding_var@@Base+0x320>
  41c878:	add	x23, x23, #0x4c0
  41c87c:	add	x19, x19, #0x5
  41c880:	mov	w26, w20
  41c884:	ldrh	w0, [x23, w4, sxtw #1]
  41c888:	tst	w0, #0x6
  41c88c:	b.ne	41c770 <out_of_memory@@Base+0x510>  // b.any
  41c890:	cbnz	w4, 41ca8c <out_of_memory@@Base+0x82c>
  41c894:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41c898:	ldr	x25, [x0, #208]
  41c89c:	ldr	w1, [x25]
  41c8a0:	cbz	w1, 41cddc <out_of_memory@@Base+0xb7c>
  41c8a4:	sub	w2, w1, #0x1
  41c8a8:	str	w2, [x25]
  41c8ac:	b	41c688 <out_of_memory@@Base+0x428>
  41c8b0:	cmp	w26, #0x1
  41c8b4:	b.ls	41cc74 <out_of_memory@@Base+0xa14>  // b.plast
  41c8b8:	ldrb	w3, [x19]
  41c8bc:	cmp	w3, #0x28
  41c8c0:	b.eq	41cdac <out_of_memory@@Base+0xb4c>  // b.none
  41c8c4:	cmp	w3, #0x2c
  41c8c8:	mov	w0, #0x22                  	// #34
  41c8cc:	ccmp	w3, w0, #0x4, ne  // ne = any
  41c8d0:	b.eq	41cb90 <out_of_memory@@Base+0x930>  // b.none
  41c8d4:	add	x0, x19, #0x1
  41c8d8:	cmp	w3, #0x27
  41c8dc:	b.ne	41cc5c <out_of_memory@@Base+0x9fc>  // b.any
  41c8e0:	ldrb	w1, [x0]
  41c8e4:	mov	x25, x0
  41c8e8:	cmp	w1, #0x0
  41c8ec:	ccmp	w1, w3, #0x4, ne  // ne = any
  41c8f0:	b.eq	41c908 <out_of_memory@@Base+0x6a8>  // b.none
  41c8f4:	nop
  41c8f8:	ldrb	w1, [x25, #1]!
  41c8fc:	cmp	w1, #0x0
  41c900:	ccmp	w1, w3, #0x4, ne  // ne = any
  41c904:	b.ne	41c8f8 <out_of_memory@@Base+0x698>  // b.any
  41c908:	cbz	w1, 41cc5c <out_of_memory@@Base+0x9fc>
  41c90c:	mov	x20, x25
  41c910:	strb	wzr, [x20], #1
  41c914:	bl	40c808 <variable_expand@@Base>
  41c918:	mov	x19, x0
  41c91c:	bl	406680 <strlen@plt>
  41c920:	add	x3, x0, #0x10
  41c924:	and	x3, x3, #0xfffffffffffffff0
  41c928:	mov	x1, x19
  41c92c:	sub	sp, sp, x3
  41c930:	add	x2, x0, #0x1
  41c934:	mov	x19, sp
  41c938:	mov	x0, x19
  41c93c:	bl	406640 <memcpy@plt>
  41c940:	ldrb	w2, [x25, #1]
  41c944:	ldrh	w0, [x23, w2, sxtw #1]
  41c948:	tst	w0, #0x6
  41c94c:	b.eq	41c960 <out_of_memory@@Base+0x700>  // b.none
  41c950:	ldrb	w2, [x20, #1]!
  41c954:	ldrh	w0, [x23, w2, sxtw #1]
  41c958:	tst	w0, #0x6
  41c95c:	b.ne	41c950 <out_of_memory@@Base+0x6f0>  // b.any
  41c960:	cmp	w2, #0x29
  41c964:	mov	w0, #0x22                  	// #34
  41c968:	ccmp	w2, w0, #0x4, ne  // ne = any
  41c96c:	b.eq	41cbec <out_of_memory@@Base+0x98c>  // b.none
  41c970:	cmp	w2, #0x27
  41c974:	b.ne	41cc5c <out_of_memory@@Base+0x9fc>  // b.any
  41c978:	ldrb	w0, [x20, #1]
  41c97c:	add	x20, x20, #0x1
  41c980:	mov	x1, x20
  41c984:	cmp	w0, #0x0
  41c988:	ccmp	w0, w2, #0x4, ne  // ne = any
  41c98c:	b.eq	41c9a0 <out_of_memory@@Base+0x740>  // b.none
  41c990:	ldrb	w0, [x1, #1]!
  41c994:	cmp	w0, #0x0
  41c998:	ccmp	w0, w2, #0x4, ne  // ne = any
  41c99c:	b.ne	41c990 <out_of_memory@@Base+0x730>  // b.any
  41c9a0:	cbz	w0, 41cc5c <out_of_memory@@Base+0x9fc>
  41c9a4:	mov	x2, x1
  41c9a8:	strb	wzr, [x2], #1
  41c9ac:	ldrb	w0, [x1, #1]
  41c9b0:	ldrh	w1, [x23, w0, sxtw #1]
  41c9b4:	tst	w1, #0x6
  41c9b8:	b.eq	41c9d0 <out_of_memory@@Base+0x770>  // b.none
  41c9bc:	nop
  41c9c0:	ldrb	w0, [x2, #1]!
  41c9c4:	ldrh	w1, [x23, w0, sxtw #1]
  41c9c8:	tst	w1, #0x6
  41c9cc:	b.ne	41c9c0 <out_of_memory@@Base+0x760>  // b.any
  41c9d0:	cbnz	w0, 41cd00 <out_of_memory@@Base+0xaa0>
  41c9d4:	mov	x0, x20
  41c9d8:	bl	40c808 <variable_expand@@Base>
  41c9dc:	mov	w1, #0x1                   	// #1
  41c9e0:	cmp	x0, x19
  41c9e4:	b.eq	41c9fc <out_of_memory@@Base+0x79c>  // b.none
  41c9e8:	ldrb	w3, [x19]
  41c9ec:	mov	w1, #0x0                   	// #0
  41c9f0:	ldrb	w2, [x0]
  41c9f4:	cmp	w2, w3
  41c9f8:	b.eq	41cd70 <out_of_memory@@Base+0xb10>  // b.none
  41c9fc:	ldr	x25, [x24, #208]
  41ca00:	cmp	w26, #0x3
  41ca04:	cset	w0, ne  // ne = any
  41ca08:	eor	w0, w0, w1
  41ca0c:	ldr	x1, [x25, #8]
  41ca10:	strb	w0, [x1, w27, uxtw]
  41ca14:	ldr	w2, [x25]
  41ca18:	b	41c688 <out_of_memory@@Base+0x428>
  41ca1c:	mov	w0, #0x5                   	// #5
  41ca20:	str	w0, [x20, #4]
  41ca24:	mov	x0, #0x5                   	// #5
  41ca28:	bl	41ab28 <xmalloc@@Base>
  41ca2c:	str	x0, [x20, #8]
  41ca30:	ldr	x25, [x24, #208]
  41ca34:	ldr	w0, [x25, #4]
  41ca38:	bl	41ab28 <xmalloc@@Base>
  41ca3c:	ldr	x20, [x24, #208]
  41ca40:	ldr	w27, [x20]
  41ca44:	ldr	w1, [x20, #4]
  41ca48:	str	x0, [x25, #16]
  41ca4c:	add	w0, w27, #0x1
  41ca50:	str	w0, [x20]
  41ca54:	cmp	w0, w1
  41ca58:	b.ls	41c7b4 <out_of_memory@@Base+0x554>  // b.plast
  41ca5c:	ldr	x0, [x20, #8]
  41ca60:	add	w1, w1, #0x5
  41ca64:	str	w1, [x20, #4]
  41ca68:	bl	41ab78 <xrealloc@@Base>
  41ca6c:	ldr	x25, [x24, #208]
  41ca70:	ldr	w1, [x25, #4]
  41ca74:	str	x0, [x20, #8]
  41ca78:	ldr	x0, [x25, #16]
  41ca7c:	bl	41ab78 <xrealloc@@Base>
  41ca80:	str	x0, [x25, #16]
  41ca84:	ldr	x20, [x24, #208]
  41ca88:	b	41c7b4 <out_of_memory@@Base+0x554>
  41ca8c:	mov	w2, #0x5                   	// #5
  41ca90:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41ca94:	mov	x0, #0x0                   	// #0
  41ca98:	add	x1, x1, #0x30
  41ca9c:	bl	406cd0 <dcgettext@plt>
  41caa0:	mov	x2, x0
  41caa4:	mov	x3, x21
  41caa8:	mov	x1, x20
  41caac:	mov	x0, x22
  41cab0:	bl	41bd88 <error@@Base>
  41cab4:	b	41c894 <out_of_memory@@Base+0x634>
  41cab8:	ldrb	w1, [x19, #1]
  41cabc:	add	x0, x19, #0x1
  41cac0:	ldrh	w1, [x23, x1, lsl #1]
  41cac4:	tst	x1, #0x7
  41cac8:	b.ne	41cb4c <out_of_memory@@Base+0x8ec>  // b.any
  41cacc:	nop
  41cad0:	ldrb	w1, [x0, #1]!
  41cad4:	ldrh	w1, [x23, x1, lsl #1]
  41cad8:	tst	x1, #0x7
  41cadc:	b.eq	41cad0 <out_of_memory@@Base+0x870>  // b.none
  41cae0:	sub	x20, x0, x19
  41cae4:	cmp	x20, #0x4
  41cae8:	b.eq	41cd90 <out_of_memory@@Base+0xb30>  // b.none
  41caec:	cmp	x20, #0x5
  41caf0:	b.ne	41cb50 <out_of_memory@@Base+0x8f0>  // b.any
  41caf4:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41caf8:	mov	x2, x20
  41cafc:	add	x0, x0, #0x8
  41cb00:	mov	x1, x19
  41cb04:	bl	406930 <strncmp@plt>
  41cb08:	cbnz	w0, 41cb50 <out_of_memory@@Base+0x8f0>
  41cb0c:	mov	x0, x21
  41cb10:	bl	406680 <strlen@plt>
  41cb14:	mov	w2, #0x5                   	// #5
  41cb18:	mov	x19, x0
  41cb1c:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41cb20:	mov	x0, #0x0                   	// #0
  41cb24:	add	x1, x1, #0x30
  41cb28:	bl	406cd0 <dcgettext@plt>
  41cb2c:	mov	x3, x21
  41cb30:	mov	x2, x0
  41cb34:	mov	x1, x19
  41cb38:	mov	x0, x22
  41cb3c:	bl	41bd88 <error@@Base>
  41cb40:	ldr	x25, [x24, #208]
  41cb44:	ldr	w2, [x25]
  41cb48:	b	41c688 <out_of_memory@@Base+0x428>
  41cb4c:	mov	x20, #0x1                   	// #1
  41cb50:	mov	x1, x20
  41cb54:	mov	x0, x19
  41cb58:	mov	x2, x22
  41cb5c:	bl	41c5a0 <out_of_memory@@Base+0x340>
  41cb60:	tbnz	w0, #31, 41cb0c <out_of_memory@@Base+0x8ac>
  41cb64:	ldr	x25, [x24, #208]
  41cb68:	ldr	x0, [x25, #8]
  41cb6c:	ldrb	w1, [x0, w26, uxtw]
  41cb70:	cmp	w1, #0x1
  41cb74:	b.hi	41cb80 <out_of_memory@@Base+0x920>  // b.pmore
  41cb78:	ldrb	w1, [x0, w27, uxtw]
  41cb7c:	strb	w1, [x0, w26, uxtw]
  41cb80:	ldr	w2, [x25]
  41cb84:	sub	w2, w2, #0x1
  41cb88:	str	w2, [x25]
  41cb8c:	b	41c688 <out_of_memory@@Base+0x428>
  41cb90:	add	x0, x19, #0x1
  41cb94:	cmp	w3, #0x2c
  41cb98:	b.ne	41c8e0 <out_of_memory@@Base+0x680>  // b.any
  41cb9c:	ldrb	w1, [x0]
  41cba0:	cbz	w1, 41cc5c <out_of_memory@@Base+0x9fc>
  41cba4:	mov	x2, x0
  41cba8:	mov	w5, #0x0                   	// #0
  41cbac:	b	41cbd4 <out_of_memory@@Base+0x974>
  41cbb0:	cmp	w1, #0x29
  41cbb4:	b.eq	41cbe4 <out_of_memory@@Base+0x984>  // b.none
  41cbb8:	cmp	w1, #0x2c
  41cbbc:	ccmp	w5, #0x0, #0x0, eq  // eq = none
  41cbc0:	b.le	41cbf8 <out_of_memory@@Base+0x998>
  41cbc4:	ldrb	w4, [x2, #1]!
  41cbc8:	mov	w3, w1
  41cbcc:	cbz	w4, 41cc5c <out_of_memory@@Base+0x9fc>
  41cbd0:	mov	w1, w4
  41cbd4:	cmp	w1, #0x28
  41cbd8:	b.ne	41cbb0 <out_of_memory@@Base+0x950>  // b.any
  41cbdc:	add	w5, w5, #0x1
  41cbe0:	b	41cbc4 <out_of_memory@@Base+0x964>
  41cbe4:	sub	w5, w5, #0x1
  41cbe8:	b	41cbc4 <out_of_memory@@Base+0x964>
  41cbec:	cmp	w2, #0x29
  41cbf0:	b.ne	41c978 <out_of_memory@@Base+0x718>  // b.any
  41cbf4:	b	41cc48 <out_of_memory@@Base+0x9e8>
  41cbf8:	ldrh	w1, [x23, w3, sxtw #1]
  41cbfc:	add	x20, x2, #0x1
  41cc00:	tbz	w1, #1, 41cc18 <out_of_memory@@Base+0x9b8>
  41cc04:	nop
  41cc08:	ldurb	w1, [x2, #-2]
  41cc0c:	sub	x2, x2, #0x1
  41cc10:	ldrh	w1, [x23, x1, lsl #1]
  41cc14:	tbnz	w1, #1, 41cc08 <out_of_memory@@Base+0x9a8>
  41cc18:	strb	wzr, [x2]
  41cc1c:	bl	40c808 <variable_expand@@Base>
  41cc20:	mov	x19, x0
  41cc24:	bl	406680 <strlen@plt>
  41cc28:	add	x3, x0, #0x10
  41cc2c:	and	x3, x3, #0xfffffffffffffff0
  41cc30:	mov	x1, x19
  41cc34:	sub	sp, sp, x3
  41cc38:	add	x2, x0, #0x1
  41cc3c:	mov	x19, sp
  41cc40:	mov	x0, x19
  41cc44:	bl	406640 <memcpy@plt>
  41cc48:	mov	x0, x20
  41cc4c:	bl	41ac48 <next_token@@Base>
  41cc50:	mov	x20, x0
  41cc54:	ldrb	w0, [x0]
  41cc58:	cbnz	w0, 41cd38 <out_of_memory@@Base+0xad8>
  41cc5c:	mov	w0, #0xffffffff            	// #-1
  41cc60:	b	41c6f4 <out_of_memory@@Base+0x494>
  41cc64:	mov	w0, #0x2                   	// #2
  41cc68:	strb	w0, [x1, w26, uxtw]
  41cc6c:	ldrb	w4, [x19]
  41cc70:	b	41c674 <out_of_memory@@Base+0x414>
  41cc74:	mov	x1, #0x0                   	// #0
  41cc78:	mov	x0, x19
  41cc7c:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  41cc80:	mov	x19, x0
  41cc84:	bl	41ac18 <end_of_token@@Base>
  41cc88:	ldrb	w2, [x0]
  41cc8c:	sub	x1, x0, x19
  41cc90:	ldrh	w3, [x23, w2, sxtw #1]
  41cc94:	tst	w3, #0x6
  41cc98:	b.eq	41ccb0 <out_of_memory@@Base+0xa50>  // b.none
  41cc9c:	mov	x3, x0
  41cca0:	ldrb	w2, [x3, #1]!
  41cca4:	ldrh	w4, [x23, w2, sxtw #1]
  41cca8:	tst	w4, #0x6
  41ccac:	b.ne	41cca0 <out_of_memory@@Base+0xa40>  // b.any
  41ccb0:	cbnz	w2, 41cc5c <out_of_memory@@Base+0x9fc>
  41ccb4:	strb	wzr, [x0]
  41ccb8:	mov	x0, x19
  41ccbc:	bl	4257c8 <lookup_variable@@Base>
  41ccc0:	mov	w1, #0x0                   	// #0
  41ccc4:	cbz	x0, 41ccd8 <out_of_memory@@Base+0xa78>
  41ccc8:	ldr	x0, [x0, #8]
  41cccc:	ldrb	w0, [x0]
  41ccd0:	cmp	w0, #0x0
  41ccd4:	cset	w1, ne  // ne = any
  41ccd8:	ldr	x25, [x24, #208]
  41ccdc:	and	w26, w26, #0x1
  41cce0:	eor	w1, w1, w26
  41cce4:	mov	x0, x19
  41cce8:	eor	w1, w1, #0x1
  41ccec:	ldr	x2, [x25, #8]
  41ccf0:	strb	w1, [x2, w27, uxtw]
  41ccf4:	bl	406b90 <free@plt>
  41ccf8:	ldr	w2, [x25]
  41ccfc:	b	41c688 <out_of_memory@@Base+0x428>
  41cd00:	mov	x0, x21
  41cd04:	bl	406680 <strlen@plt>
  41cd08:	mov	w2, #0x5                   	// #5
  41cd0c:	mov	x23, x0
  41cd10:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41cd14:	mov	x0, #0x0                   	// #0
  41cd18:	add	x1, x1, #0x30
  41cd1c:	bl	406cd0 <dcgettext@plt>
  41cd20:	mov	x3, x21
  41cd24:	mov	x2, x0
  41cd28:	mov	x1, x23
  41cd2c:	mov	x0, x22
  41cd30:	bl	41bd88 <error@@Base>
  41cd34:	b	41c9d4 <out_of_memory@@Base+0x774>
  41cd38:	mov	x1, x20
  41cd3c:	mov	w2, #0x0                   	// #0
  41cd40:	b	41cd54 <out_of_memory@@Base+0xaf4>
  41cd44:	cmp	w0, #0x29
  41cd48:	b.eq	41cd64 <out_of_memory@@Base+0xb04>  // b.none
  41cd4c:	ldrb	w0, [x1, #1]!
  41cd50:	cbz	w0, 41cc5c <out_of_memory@@Base+0x9fc>
  41cd54:	cmp	w0, #0x28
  41cd58:	b.ne	41cd44 <out_of_memory@@Base+0xae4>  // b.any
  41cd5c:	add	w2, w2, #0x1
  41cd60:	b	41cd4c <out_of_memory@@Base+0xaec>
  41cd64:	cbz	w2, 41c9a4 <out_of_memory@@Base+0x744>
  41cd68:	sub	w2, w2, #0x1
  41cd6c:	b	41cd4c <out_of_memory@@Base+0xaec>
  41cd70:	mov	w1, #0x1                   	// #1
  41cd74:	cbz	w2, 41c9fc <out_of_memory@@Base+0x79c>
  41cd78:	add	x1, x0, #0x1
  41cd7c:	add	x0, x19, #0x1
  41cd80:	bl	406b40 <strcmp@plt>
  41cd84:	cmp	w0, #0x0
  41cd88:	cset	w1, eq  // eq = none
  41cd8c:	b	41c9fc <out_of_memory@@Base+0x79c>
  41cd90:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41cd94:	mov	x2, x20
  41cd98:	add	x0, x0, #0x0
  41cd9c:	mov	x1, x19
  41cda0:	bl	406930 <strncmp@plt>
  41cda4:	cbnz	w0, 41cb50 <out_of_memory@@Base+0x8f0>
  41cda8:	b	41cb0c <out_of_memory@@Base+0x8ac>
  41cdac:	add	x0, x19, #0x1
  41cdb0:	b	41cb9c <out_of_memory@@Base+0x93c>
  41cdb4:	mov	w2, #0x5                   	// #5
  41cdb8:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41cdbc:	mov	x0, #0x0                   	// #0
  41cdc0:	add	x1, x1, #0x58
  41cdc4:	bl	406cd0 <dcgettext@plt>
  41cdc8:	mov	x2, x0
  41cdcc:	mov	x3, x21
  41cdd0:	mov	x1, x20
  41cdd4:	mov	x0, x22
  41cdd8:	bl	41c0a0 <fatal@@Base>
  41cddc:	mov	x0, x21
  41cde0:	bl	406680 <strlen@plt>
  41cde4:	mov	w2, #0x5                   	// #5
  41cde8:	mov	x19, x0
  41cdec:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41cdf0:	mov	x0, #0x0                   	// #0
  41cdf4:	add	x1, x1, #0x58
  41cdf8:	bl	406cd0 <dcgettext@plt>
  41cdfc:	mov	x3, x21
  41ce00:	mov	x2, x0
  41ce04:	mov	x1, x19
  41ce08:	mov	x0, x22
  41ce0c:	bl	41c0a0 <fatal@@Base>
  41ce10:	mov	w2, #0x5                   	// #5
  41ce14:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41ce18:	mov	x0, #0x0                   	// #0
  41ce1c:	add	x1, x1, #0x68
  41ce20:	bl	406cd0 <dcgettext@plt>
  41ce24:	mov	x2, x0
  41ce28:	mov	x1, #0x0                   	// #0
  41ce2c:	mov	x0, x22
  41ce30:	bl	41c0a0 <fatal@@Base>
  41ce34:	nop
  41ce38:	stp	x29, x30, [sp, #-112]!
  41ce3c:	mov	x29, sp
  41ce40:	stp	x19, x20, [sp, #16]
  41ce44:	mov	x19, x0
  41ce48:	mov	x20, #0x1                   	// #1
  41ce4c:	stp	x21, x22, [sp, #32]
  41ce50:	stp	x23, x24, [sp, #48]
  41ce54:	sub	x24, x0, #0x1
  41ce58:	stp	x25, x26, [sp, #64]
  41ce5c:	adrp	x26, 446000 <expanding_var@@Base+0x320>
  41ce60:	mov	x25, x0
  41ce64:	stp	x27, x28, [sp, #80]
  41ce68:	add	x26, x26, #0x4c0
  41ce6c:	orr	w27, w1, #0x1
  41ce70:	ldrb	w2, [x0]
  41ce74:	mov	x28, #0x0                   	// #0
  41ce78:	ldrh	w3, [x26, w2, sxtw #1]
  41ce7c:	tst	w3, w27
  41ce80:	b.eq	41cf08 <out_of_memory@@Base+0xca8>  // b.none
  41ce84:	cbz	w2, 41cfc8 <out_of_memory@@Base+0xd68>
  41ce88:	cmp	w2, #0x24
  41ce8c:	b.ne	41cf14 <out_of_memory@@Base+0xcb4>  // b.any
  41ce90:	ldrb	w4, [x19, #1]
  41ce94:	cbz	w4, 41cfc8 <out_of_memory@@Base+0xd68>
  41ce98:	cmp	w4, #0x28
  41ce9c:	add	x3, x19, #0x2
  41cea0:	ldrb	w2, [x19, #2]
  41cea4:	mov	w0, #0x7b                  	// #123
  41cea8:	mov	x19, x3
  41ceac:	ccmp	w4, w0, #0x4, ne  // ne = any
  41ceb0:	b.ne	41ce78 <out_of_memory@@Base+0xc18>  // b.any
  41ceb4:	cmp	w4, #0x28
  41ceb8:	mov	w0, #0x7d                  	// #125
  41cebc:	mov	w1, #0x29                  	// #41
  41cec0:	mov	w5, #0x1                   	// #1
  41cec4:	csel	w0, w0, w1, ne  // ne = any
  41cec8:	cbnz	w2, 41cee0 <out_of_memory@@Base+0xc80>
  41cecc:	b	41cfbc <out_of_memory@@Base+0xd5c>
  41ced0:	cmp	w0, w2
  41ced4:	b.eq	41cfec <out_of_memory@@Base+0xd8c>  // b.none
  41ced8:	ldrb	w2, [x3, #1]!
  41cedc:	cbz	w2, 41cef4 <out_of_memory@@Base+0xc94>
  41cee0:	cmp	w4, w2
  41cee4:	b.ne	41ced0 <out_of_memory@@Base+0xc70>  // b.any
  41cee8:	ldrb	w2, [x3, #1]!
  41ceec:	add	w5, w5, #0x1
  41cef0:	cbnz	w2, 41cee0 <out_of_memory@@Base+0xc80>
  41cef4:	mov	x19, x3
  41cef8:	ldrh	w3, [x26, w2, sxtw #1]
  41cefc:	tst	w3, w27
  41cf00:	b.ne	41ce84 <out_of_memory@@Base+0xc24>  // b.any
  41cf04:	nop
  41cf08:	ldrb	w2, [x19, #1]
  41cf0c:	add	x19, x19, #0x1
  41cf10:	b	41ce78 <out_of_memory@@Base+0xc18>
  41cf14:	cmp	x19, x25
  41cf18:	b.ls	41cfcc <out_of_memory@@Base+0xd6c>  // b.plast
  41cf1c:	ldurb	w0, [x19, #-1]
  41cf20:	cmp	w0, #0x5c
  41cf24:	b.ne	41cfcc <out_of_memory@@Base+0xd6c>  // b.any
  41cf28:	sub	x2, x19, #0x2
  41cf2c:	cmp	x25, x2
  41cf30:	b.hi	41d000 <out_of_memory@@Base+0xda0>  // b.pmore
  41cf34:	mov	w0, #0xfffffffe            	// #-2
  41cf38:	sub	w5, w0, w2
  41cf3c:	b	41cf48 <out_of_memory@@Base+0xce8>
  41cf40:	cmp	x2, x24
  41cf44:	b.eq	41cf60 <out_of_memory@@Base+0xd00>  // b.none
  41cf48:	ldrb	w3, [x2]
  41cf4c:	add	w4, w5, w2
  41cf50:	sub	x2, x2, #0x1
  41cf54:	cmp	w3, #0x5c
  41cf58:	b.eq	41cf40 <out_of_memory@@Base+0xce0>  // b.none
  41cf5c:	add	w4, w4, #0x1
  41cf60:	add	w22, w4, w4, lsr #31
  41cf64:	add	x3, x19, w4, sxtw
  41cf68:	and	w23, w4, #0x1
  41cf6c:	asr	w22, w22, #1
  41cf70:	sxtw	x22, w22
  41cf74:	add	x21, x19, x22
  41cf78:	cbnz	x28, 41cf90 <out_of_memory@@Base+0xd30>
  41cf7c:	mov	x0, x25
  41cf80:	str	x3, [sp, #104]
  41cf84:	bl	406680 <strlen@plt>
  41cf88:	mov	x28, x0
  41cf8c:	ldr	x3, [sp, #104]
  41cf90:	sub	x2, x19, x25
  41cf94:	sub	x22, x28, x22
  41cf98:	sub	x2, x20, x2
  41cf9c:	mov	x0, x3
  41cfa0:	add	x2, x2, x22
  41cfa4:	mov	x1, x21
  41cfa8:	bl	406650 <memmove@plt>
  41cfac:	cbz	w23, 41d038 <out_of_memory@@Base+0xdd8>
  41cfb0:	ldrb	w2, [x21]
  41cfb4:	mov	x19, x21
  41cfb8:	b	41ce78 <out_of_memory@@Base+0xc18>
  41cfbc:	ldrh	w0, [x26]
  41cfc0:	tst	w0, w27
  41cfc4:	b.eq	41cf08 <out_of_memory@@Base+0xca8>  // b.none
  41cfc8:	mov	x19, #0x0                   	// #0
  41cfcc:	mov	x0, x19
  41cfd0:	ldp	x19, x20, [sp, #16]
  41cfd4:	ldp	x21, x22, [sp, #32]
  41cfd8:	ldp	x23, x24, [sp, #48]
  41cfdc:	ldp	x25, x26, [sp, #64]
  41cfe0:	ldp	x27, x28, [sp, #80]
  41cfe4:	ldp	x29, x30, [sp], #112
  41cfe8:	ret
  41cfec:	subs	w5, w5, #0x1
  41cff0:	b.ne	41ced8 <out_of_memory@@Base+0xc78>  // b.any
  41cff4:	ldrb	w2, [x3, #1]
  41cff8:	add	x19, x3, #0x1
  41cffc:	b	41ce78 <out_of_memory@@Base+0xc18>
  41d000:	sub	x3, x19, #0x1
  41d004:	cbnz	x28, 41d018 <out_of_memory@@Base+0xdb8>
  41d008:	mov	x21, x19
  41d00c:	mov	x22, #0x0                   	// #0
  41d010:	mov	w23, #0x1                   	// #1
  41d014:	b	41cf7c <out_of_memory@@Base+0xd1c>
  41d018:	sub	x1, x19, x25
  41d01c:	add	x2, x28, #0x1
  41d020:	sub	x2, x2, x1
  41d024:	mov	x0, x3
  41d028:	mov	x1, x19
  41d02c:	bl	406650 <memmove@plt>
  41d030:	ldrb	w2, [x19]
  41d034:	b	41ce78 <out_of_memory@@Base+0xc18>
  41d038:	mov	x19, x21
  41d03c:	b	41cfcc <out_of_memory@@Base+0xd6c>
  41d040:	stp	x29, x30, [sp, #-112]!
  41d044:	mov	x29, sp
  41d048:	stp	x19, x20, [sp, #16]
  41d04c:	mov	x20, x0
  41d050:	stp	x21, x22, [sp, #32]
  41d054:	mov	w22, w1
  41d058:	mov	x21, #0x0                   	// #0
  41d05c:	stp	x27, x28, [sp, #80]
  41d060:	mov	x28, x0
  41d064:	sub	x27, x0, #0x1
  41d068:	stp	x23, x24, [sp, #48]
  41d06c:	mov	x23, #0x1                   	// #1
  41d070:	mov	w24, #0xfffffffe            	// #-2
  41d074:	stp	x25, x26, [sp, #64]
  41d078:	mov	x0, x28
  41d07c:	mov	w1, w22
  41d080:	bl	406bb0 <strchr@plt>
  41d084:	mov	x19, x0
  41d088:	cbz	x0, 41d128 <out_of_memory@@Base+0xec8>
  41d08c:	cmp	x20, x0
  41d090:	b.cs	41d128 <out_of_memory@@Base+0xec8>  // b.hs, b.nlast
  41d094:	ldurb	w0, [x0, #-1]
  41d098:	cmp	w0, #0x5c
  41d09c:	b.ne	41d128 <out_of_memory@@Base+0xec8>  // b.any
  41d0a0:	sub	x2, x19, #0x2
  41d0a4:	cmp	x2, x20
  41d0a8:	b.cc	41d148 <out_of_memory@@Base+0xee8>  // b.lo, b.ul, b.last
  41d0ac:	sub	w1, w24, w2
  41d0b0:	b	41d0bc <out_of_memory@@Base+0xe5c>
  41d0b4:	cmp	x2, x27
  41d0b8:	b.eq	41d0d4 <out_of_memory@@Base+0xe74>  // b.none
  41d0bc:	ldrb	w3, [x2]
  41d0c0:	add	w0, w1, w2
  41d0c4:	sub	x2, x2, #0x1
  41d0c8:	cmp	w3, #0x5c
  41d0cc:	b.eq	41d0b4 <out_of_memory@@Base+0xe54>  // b.none
  41d0d0:	add	w0, w0, #0x1
  41d0d4:	add	w26, w0, w0, lsr #31
  41d0d8:	add	x1, x19, w0, sxtw
  41d0dc:	and	w25, w0, #0x1
  41d0e0:	asr	w26, w26, #1
  41d0e4:	sxtw	x26, w26
  41d0e8:	add	x28, x19, x26
  41d0ec:	cbnz	x21, 41d104 <out_of_memory@@Base+0xea4>
  41d0f0:	mov	x0, x20
  41d0f4:	str	x1, [sp, #104]
  41d0f8:	bl	406680 <strlen@plt>
  41d0fc:	mov	x21, x0
  41d100:	ldr	x1, [sp, #104]
  41d104:	sub	x19, x19, x20
  41d108:	sub	x2, x21, x26
  41d10c:	sub	x19, x23, x19
  41d110:	mov	x0, x1
  41d114:	add	x2, x19, x2
  41d118:	mov	x1, x28
  41d11c:	bl	406650 <memmove@plt>
  41d120:	cbnz	w25, 41d078 <out_of_memory@@Base+0xe18>
  41d124:	mov	x19, x28
  41d128:	mov	x0, x19
  41d12c:	ldp	x19, x20, [sp, #16]
  41d130:	ldp	x21, x22, [sp, #32]
  41d134:	ldp	x23, x24, [sp, #48]
  41d138:	ldp	x25, x26, [sp, #64]
  41d13c:	ldp	x27, x28, [sp, #80]
  41d140:	ldp	x29, x30, [sp], #112
  41d144:	ret
  41d148:	sub	x1, x19, #0x1
  41d14c:	cbnz	x21, 41d160 <out_of_memory@@Base+0xf00>
  41d150:	mov	x28, x19
  41d154:	mov	x26, #0x0                   	// #0
  41d158:	mov	w25, #0x1                   	// #1
  41d15c:	b	41d0f0 <out_of_memory@@Base+0xe90>
  41d160:	add	x3, x21, #0x1
  41d164:	sub	x2, x19, x20
  41d168:	mov	x0, x1
  41d16c:	sub	x2, x3, x2
  41d170:	mov	x1, x19
  41d174:	mov	x28, x19
  41d178:	bl	406650 <memmove@plt>
  41d17c:	b	41d078 <out_of_memory@@Base+0xe18>
  41d180:	stp	x29, x30, [sp, #-96]!
  41d184:	mov	x29, sp
  41d188:	str	x27, [sp, #80]
  41d18c:	mov	x27, x0
  41d190:	stp	x21, x22, [sp, #32]
  41d194:	stp	x25, x26, [sp, #64]
  41d198:	ldp	x26, x21, [x27, #16]
  41d19c:	stp	x19, x20, [sp, #16]
  41d1a0:	ldr	x0, [x0, #32]
  41d1a4:	add	x20, x26, x21
  41d1a8:	cbz	x0, 41d370 <out_of_memory@@Base+0x1110>
  41d1ac:	stp	x23, x24, [sp, #48]
  41d1b0:	adrp	x22, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41d1b4:	mov	x19, x26
  41d1b8:	add	x22, x22, #0x88
  41d1bc:	sub	x1, x20, x26
  41d1c0:	add	x24, x27, #0x28
  41d1c4:	mov	x21, #0x0                   	// #0
  41d1c8:	mov	w23, #0xa                   	// #10
  41d1cc:	strb	wzr, [x26]
  41d1d0:	b	41d21c <out_of_memory@@Base+0xfbc>
  41d1d4:	add	x26, x26, x1
  41d1d8:	sub	x25, x26, x19
  41d1dc:	ldurb	w1, [x26, #-1]
  41d1e0:	cmp	w1, #0xa
  41d1e4:	b.eq	41d274 <out_of_memory@@Base+0x1014>  // b.none
  41d1e8:	ldr	x1, [x27, #24]
  41d1ec:	mov	x0, x19
  41d1f0:	lsl	x1, x1, #1
  41d1f4:	str	x1, [x27, #24]
  41d1f8:	bl	41ab78 <xrealloc@@Base>
  41d1fc:	add	x26, x0, x25
  41d200:	ldr	x20, [x27, #24]
  41d204:	mov	x19, x0
  41d208:	str	x0, [x27]
  41d20c:	add	x20, x0, x20
  41d210:	str	x0, [x27, #16]
  41d214:	sub	x1, x20, x26
  41d218:	strb	wzr, [x0, x25]
  41d21c:	ldr	x2, [x27, #32]
  41d220:	mov	x0, x26
  41d224:	bl	406de0 <fgets@plt>
  41d228:	cbz	x0, 41d2d8 <out_of_memory@@Base+0x1078>
  41d22c:	mov	x0, x26
  41d230:	bl	406680 <strlen@plt>
  41d234:	mov	x1, x0
  41d238:	cbnz	x0, 41d1d4 <out_of_memory@@Base+0xf74>
  41d23c:	mov	x1, x22
  41d240:	mov	w2, #0x5                   	// #5
  41d244:	bl	406cd0 <dcgettext@plt>
  41d248:	mov	x2, x0
  41d24c:	mov	x1, #0x0                   	// #0
  41d250:	mov	x0, x24
  41d254:	bl	41bd88 <error@@Base>
  41d258:	strb	w23, [x26]
  41d25c:	mov	x1, #0x1                   	// #1
  41d260:	add	x26, x26, x1
  41d264:	sub	x25, x26, x19
  41d268:	ldurb	w1, [x26, #-1]
  41d26c:	cmp	w1, #0xa
  41d270:	b.ne	41d1e8 <out_of_memory@@Base+0xf88>  // b.any
  41d274:	add	x21, x21, #0x1
  41d278:	cmp	x25, #0x1
  41d27c:	b.le	41d28c <out_of_memory@@Base+0x102c>
  41d280:	ldurb	w0, [x26, #-2]
  41d284:	cmp	w0, #0xd
  41d288:	b.eq	41d348 <out_of_memory@@Base+0x10e8>  // b.none
  41d28c:	sub	x1, x26, #0x2
  41d290:	cmp	x19, x1
  41d294:	b.hi	41d318 <out_of_memory@@Base+0x10b8>  // b.pmore
  41d298:	sub	x4, x19, #0x1
  41d29c:	mov	w2, #0x0                   	// #0
  41d2a0:	b	41d2b4 <out_of_memory@@Base+0x1054>
  41d2a4:	sub	x1, x1, #0x1
  41d2a8:	eor	w2, w2, #0x1
  41d2ac:	cmp	x1, x4
  41d2b0:	b.eq	41d2c0 <out_of_memory@@Base+0x1060>  // b.none
  41d2b4:	ldrb	w3, [x1]
  41d2b8:	cmp	w3, #0x5c
  41d2bc:	b.eq	41d2a4 <out_of_memory@@Base+0x1044>  // b.none
  41d2c0:	cbz	w2, 41d318 <out_of_memory@@Base+0x10b8>
  41d2c4:	sub	x1, x20, x26
  41d2c8:	cmp	x1, #0x4f
  41d2cc:	b.gt	41d21c <out_of_memory@@Base+0xfbc>
  41d2d0:	sub	x25, x26, x19
  41d2d4:	b	41d1e8 <out_of_memory@@Base+0xf88>
  41d2d8:	ldr	x0, [x27, #32]
  41d2dc:	bl	406e00 <ferror@plt>
  41d2e0:	cbnz	w0, 41d3f8 <out_of_memory@@Base+0x1198>
  41d2e4:	cbnz	x21, 41d328 <out_of_memory@@Base+0x10c8>
  41d2e8:	ldr	x0, [x27, #16]
  41d2ec:	mov	x21, #0x1                   	// #1
  41d2f0:	ldp	x23, x24, [sp, #48]
  41d2f4:	cmp	x0, x26
  41d2f8:	b.eq	41d3f0 <out_of_memory@@Base+0x1190>  // b.none
  41d2fc:	mov	x0, x21
  41d300:	ldp	x19, x20, [sp, #16]
  41d304:	ldp	x21, x22, [sp, #32]
  41d308:	ldp	x25, x26, [sp, #64]
  41d30c:	ldr	x27, [sp, #80]
  41d310:	ldp	x29, x30, [sp], #96
  41d314:	ret
  41d318:	sturb	wzr, [x26, #-1]
  41d31c:	ldr	x0, [x27, #32]
  41d320:	bl	406e00 <ferror@plt>
  41d324:	cbnz	w0, 41d3f8 <out_of_memory@@Base+0x1198>
  41d328:	mov	x0, x21
  41d32c:	ldp	x19, x20, [sp, #16]
  41d330:	ldp	x21, x22, [sp, #32]
  41d334:	ldp	x23, x24, [sp, #48]
  41d338:	ldp	x25, x26, [sp, #64]
  41d33c:	ldr	x27, [sp, #80]
  41d340:	ldp	x29, x30, [sp], #96
  41d344:	ret
  41d348:	sub	x25, x26, #0x1
  41d34c:	mov	x0, x25
  41d350:	bl	406680 <strlen@plt>
  41d354:	mov	x2, x0
  41d358:	mov	x1, x25
  41d35c:	sub	x0, x26, #0x2
  41d360:	add	x2, x2, #0x1
  41d364:	mov	x26, x25
  41d368:	bl	406650 <memmove@plt>
  41d36c:	b	41d28c <out_of_memory@@Base+0x102c>
  41d370:	ldr	x19, [x27, #8]
  41d374:	cmp	x20, x19
  41d378:	b.ls	41d3f0 <out_of_memory@@Base+0x1190>  // b.plast
  41d37c:	str	x19, [x27]
  41d380:	mov	x0, x19
  41d384:	mov	w1, #0xa                   	// #10
  41d388:	bl	406bb0 <strchr@plt>
  41d38c:	cbz	x0, 41d3d4 <out_of_memory@@Base+0x1174>
  41d390:	cmp	x19, x0
  41d394:	b.cs	41d3e8 <out_of_memory@@Base+0x1188>  // b.hs, b.nlast
  41d398:	mov	x1, x0
  41d39c:	mov	w2, #0x0                   	// #0
  41d3a0:	b	41d3b0 <out_of_memory@@Base+0x1150>
  41d3a4:	eor	w2, w2, #0x1
  41d3a8:	cmp	x19, x1
  41d3ac:	b.eq	41d3bc <out_of_memory@@Base+0x115c>  // b.none
  41d3b0:	ldrb	w3, [x1, #-1]!
  41d3b4:	cmp	w3, #0x5c
  41d3b8:	b.eq	41d3a4 <out_of_memory@@Base+0x1144>  // b.none
  41d3bc:	add	x19, x0, #0x1
  41d3c0:	cbnz	w2, 41d380 <out_of_memory@@Base+0x1120>
  41d3c4:	strb	wzr, [x0]
  41d3c8:	mov	x21, #0x0                   	// #0
  41d3cc:	str	x19, [x27, #8]
  41d3d0:	b	41d2fc <out_of_memory@@Base+0x109c>
  41d3d4:	add	x0, x21, #0x1
  41d3d8:	mov	x21, #0x0                   	// #0
  41d3dc:	add	x26, x26, x0
  41d3e0:	str	x26, [x27, #8]
  41d3e4:	b	41d2fc <out_of_memory@@Base+0x109c>
  41d3e8:	add	x19, x0, #0x1
  41d3ec:	b	41d3c4 <out_of_memory@@Base+0x1164>
  41d3f0:	mov	x21, #0xffffffffffffffff    	// #-1
  41d3f4:	b	41d2fc <out_of_memory@@Base+0x109c>
  41d3f8:	ldr	x0, [x27, #40]
  41d3fc:	bl	41b730 <pfatal_with_name@@Base>
  41d400:	stp	x29, x30, [sp, #-128]!
  41d404:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  41d408:	add	x2, x2, #0x4c0
  41d40c:	mov	x29, sp
  41d410:	stp	x21, x22, [sp, #32]
  41d414:	mov	x22, x0
  41d418:	stp	x23, x24, [sp, #48]
  41d41c:	mov	x23, x1
  41d420:	str	wzr, [x1]
  41d424:	ldrb	w0, [x0]
  41d428:	ldrh	w1, [x2, w0, sxtw #1]
  41d42c:	tst	w1, #0x6
  41d430:	b.eq	41d448 <out_of_memory@@Base+0x11e8>  // b.none
  41d434:	nop
  41d438:	ldrb	w0, [x22, #1]!
  41d43c:	ldrh	w1, [x2, w0, sxtw #1]
  41d440:	tst	w1, #0x6
  41d444:	b.ne	41d438 <out_of_memory@@Base+0x11d8>  // b.any
  41d448:	cbz	w0, 41d510 <out_of_memory@@Base+0x12b0>
  41d44c:	adrp	x24, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41d450:	add	x24, x24, #0xc0
  41d454:	stp	x19, x20, [sp, #16]
  41d458:	mov	x19, x22
  41d45c:	str	x25, [sp, #64]
  41d460:	adrp	x25, 42a000 <_IO_stdin_used@@Base+0x10e0>
  41d464:	add	x25, x25, #0xdc0
  41d468:	b	41d4b0 <out_of_memory@@Base+0x1250>
  41d46c:	cmp	x21, #0x8
  41d470:	b.eq	41d524 <out_of_memory@@Base+0x12c4>  // b.none
  41d474:	cmp	x21, #0x7
  41d478:	b.ne	41d508 <out_of_memory@@Base+0x12a8>  // b.any
  41d47c:	mov	x2, x21
  41d480:	mov	x1, x19
  41d484:	mov	x0, x24
  41d488:	bl	406930 <strncmp@plt>
  41d48c:	cbnz	w0, 41d508 <out_of_memory@@Base+0x12a8>
  41d490:	ldrb	w0, [x23]
  41d494:	orr	w0, w0, #0x20
  41d498:	strb	w0, [x23]
  41d49c:	mov	x0, x20
  41d4a0:	bl	41ac48 <next_token@@Base>
  41d4a4:	mov	x19, x0
  41d4a8:	ldrb	w0, [x0]
  41d4ac:	cbz	w0, 41d508 <out_of_memory@@Base+0x12a8>
  41d4b0:	add	x1, sp, #0x50
  41d4b4:	mov	x0, x19
  41d4b8:	bl	426b40 <parse_variable_definition@@Base>
  41d4bc:	cbnz	x0, 41d568 <out_of_memory@@Base+0x1308>
  41d4c0:	mov	x0, x19
  41d4c4:	bl	41ac18 <end_of_token@@Base>
  41d4c8:	sub	x21, x0, x19
  41d4cc:	mov	x20, x0
  41d4d0:	cmp	x21, #0x6
  41d4d4:	b.ne	41d46c <out_of_memory@@Base+0x120c>  // b.any
  41d4d8:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  41d4dc:	mov	x2, x21
  41d4e0:	add	x0, x0, #0x9f8
  41d4e4:	mov	x1, x19
  41d4e8:	bl	406930 <strncmp@plt>
  41d4ec:	cbz	w0, 41d594 <out_of_memory@@Base+0x1334>
  41d4f0:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41d4f4:	mov	x2, x21
  41d4f8:	mov	x1, x19
  41d4fc:	add	x0, x0, #0xd8
  41d500:	bl	406930 <strncmp@plt>
  41d504:	cbz	w0, 41d5b4 <out_of_memory@@Base+0x1354>
  41d508:	ldp	x19, x20, [sp, #16]
  41d50c:	ldr	x25, [sp, #64]
  41d510:	mov	x0, x22
  41d514:	ldp	x21, x22, [sp, #32]
  41d518:	ldp	x23, x24, [sp, #48]
  41d51c:	ldp	x29, x30, [sp], #128
  41d520:	ret
  41d524:	mov	x2, x21
  41d528:	mov	x1, x19
  41d52c:	mov	x0, x25
  41d530:	bl	406930 <strncmp@plt>
  41d534:	cbz	w0, 41d5a4 <out_of_memory@@Base+0x1344>
  41d538:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41d53c:	mov	x2, x21
  41d540:	mov	x1, x19
  41d544:	add	x0, x0, #0xc8
  41d548:	bl	406930 <strncmp@plt>
  41d54c:	cbnz	w0, 41d508 <out_of_memory@@Base+0x12a8>
  41d550:	ldrb	w1, [x23]
  41d554:	mov	x0, x20
  41d558:	orr	w1, w1, #0x4
  41d55c:	strb	w1, [x23]
  41d560:	bl	41ac48 <next_token@@Base>
  41d564:	mov	x19, x0
  41d568:	ldrb	w0, [x23]
  41d56c:	mov	x22, x19
  41d570:	ldp	x19, x20, [sp, #16]
  41d574:	orr	w0, w0, #0x1
  41d578:	strb	w0, [x23]
  41d57c:	mov	x0, x22
  41d580:	ldp	x21, x22, [sp, #32]
  41d584:	ldp	x23, x24, [sp, #48]
  41d588:	ldr	x25, [sp, #64]
  41d58c:	ldp	x29, x30, [sp], #128
  41d590:	ret
  41d594:	ldrb	w0, [x23]
  41d598:	orr	w0, w0, #0x8
  41d59c:	strb	w0, [x23]
  41d5a0:	b	41d49c <out_of_memory@@Base+0x123c>
  41d5a4:	ldrb	w0, [x23]
  41d5a8:	orr	w0, w0, #0x10
  41d5ac:	strb	w0, [x23]
  41d5b0:	b	41d49c <out_of_memory@@Base+0x123c>
  41d5b4:	ldrb	w1, [x23]
  41d5b8:	mov	x0, x20
  41d5bc:	orr	w1, w1, #0x2
  41d5c0:	strb	w1, [x23]
  41d5c4:	bl	41ac48 <next_token@@Base>
  41d5c8:	mov	x19, x0
  41d5cc:	b	41d568 <out_of_memory@@Base+0x1308>
  41d5d0:	stp	x29, x30, [sp, #-112]!
  41d5d4:	mov	x29, sp
  41d5d8:	stp	x19, x20, [sp, #16]
  41d5dc:	mov	x19, x0
  41d5e0:	mov	x20, #0x1                   	// #1
  41d5e4:	stp	x21, x22, [sp, #32]
  41d5e8:	stp	x23, x24, [sp, #48]
  41d5ec:	mov	x24, x0
  41d5f0:	sub	x23, x0, #0x1
  41d5f4:	stp	x25, x26, [sp, #64]
  41d5f8:	adrp	x25, 446000 <expanding_var@@Base+0x320>
  41d5fc:	add	x25, x25, #0x4c0
  41d600:	stp	x27, x28, [sp, #80]
  41d604:	mov	w26, #0x4009                	// #16393
  41d608:	mov	x27, #0x0                   	// #0
  41d60c:	ldrb	w2, [x0]
  41d610:	ldrh	w1, [x25, w2, sxtw #1]
  41d614:	tst	w26, w1
  41d618:	b.eq	41d6a0 <out_of_memory@@Base+0x1440>  // b.none
  41d61c:	cbz	w2, 41d760 <out_of_memory@@Base+0x1500>
  41d620:	cmp	w2, #0x24
  41d624:	b.ne	41d6ac <out_of_memory@@Base+0x144c>  // b.any
  41d628:	ldrb	w3, [x19, #1]
  41d62c:	cbz	w3, 41d760 <out_of_memory@@Base+0x1500>
  41d630:	cmp	w3, #0x28
  41d634:	add	x1, x19, #0x2
  41d638:	ldrb	w2, [x19, #2]
  41d63c:	mov	w0, #0x7b                  	// #123
  41d640:	mov	x19, x1
  41d644:	ccmp	w3, w0, #0x4, ne  // ne = any
  41d648:	b.ne	41d610 <out_of_memory@@Base+0x13b0>  // b.any
  41d64c:	cmp	w3, #0x28
  41d650:	mov	w0, #0x7d                  	// #125
  41d654:	mov	w5, #0x29                  	// #41
  41d658:	mov	w4, #0x1                   	// #1
  41d65c:	csel	w0, w0, w5, ne  // ne = any
  41d660:	cbnz	w2, 41d678 <out_of_memory@@Base+0x1418>
  41d664:	b	41d754 <out_of_memory@@Base+0x14f4>
  41d668:	cmp	w0, w2
  41d66c:	b.eq	41d784 <out_of_memory@@Base+0x1524>  // b.none
  41d670:	ldrb	w2, [x1, #1]!
  41d674:	cbz	w2, 41d68c <out_of_memory@@Base+0x142c>
  41d678:	cmp	w3, w2
  41d67c:	b.ne	41d668 <out_of_memory@@Base+0x1408>  // b.any
  41d680:	ldrb	w2, [x1, #1]!
  41d684:	add	w4, w4, #0x1
  41d688:	cbnz	w2, 41d678 <out_of_memory@@Base+0x1418>
  41d68c:	mov	x19, x1
  41d690:	ldrh	w1, [x25, w2, sxtw #1]
  41d694:	tst	w26, w1
  41d698:	b.ne	41d61c <out_of_memory@@Base+0x13bc>  // b.any
  41d69c:	nop
  41d6a0:	ldrb	w2, [x19, #1]
  41d6a4:	add	x19, x19, #0x1
  41d6a8:	b	41d610 <out_of_memory@@Base+0x13b0>
  41d6ac:	cmp	x19, x24
  41d6b0:	b.ls	41d764 <out_of_memory@@Base+0x1504>  // b.plast
  41d6b4:	ldurb	w0, [x19, #-1]
  41d6b8:	cmp	w0, #0x5c
  41d6bc:	b.ne	41d764 <out_of_memory@@Base+0x1504>  // b.any
  41d6c0:	sub	x2, x19, #0x2
  41d6c4:	cmp	x24, x2
  41d6c8:	b.hi	41d798 <out_of_memory@@Base+0x1538>  // b.pmore
  41d6cc:	mov	w4, #0xfffffffe            	// #-2
  41d6d0:	sub	w4, w4, w2
  41d6d4:	b	41d6e0 <out_of_memory@@Base+0x1480>
  41d6d8:	cmp	x2, x23
  41d6dc:	b.eq	41d6f8 <out_of_memory@@Base+0x1498>  // b.none
  41d6e0:	ldrb	w1, [x2]
  41d6e4:	add	w3, w4, w2
  41d6e8:	sub	x2, x2, #0x1
  41d6ec:	cmp	w1, #0x5c
  41d6f0:	b.eq	41d6d8 <out_of_memory@@Base+0x1478>  // b.none
  41d6f4:	add	w3, w3, #0x1
  41d6f8:	add	w21, w3, w3, lsr #31
  41d6fc:	add	x1, x19, w3, sxtw
  41d700:	and	w22, w3, #0x1
  41d704:	asr	w21, w21, #1
  41d708:	sxtw	x21, w21
  41d70c:	add	x28, x19, x21
  41d710:	cbnz	x27, 41d728 <out_of_memory@@Base+0x14c8>
  41d714:	mov	x0, x24
  41d718:	str	x1, [sp, #104]
  41d71c:	bl	406680 <strlen@plt>
  41d720:	mov	x27, x0
  41d724:	ldr	x1, [sp, #104]
  41d728:	sub	x2, x19, x24
  41d72c:	sub	x21, x27, x21
  41d730:	sub	x2, x20, x2
  41d734:	mov	x0, x1
  41d738:	add	x2, x2, x21
  41d73c:	mov	x1, x28
  41d740:	bl	406650 <memmove@plt>
  41d744:	cbz	w22, 41d7d0 <out_of_memory@@Base+0x1570>
  41d748:	ldrb	w2, [x28]
  41d74c:	mov	x19, x28
  41d750:	b	41d610 <out_of_memory@@Base+0x13b0>
  41d754:	ldrh	w0, [x25]
  41d758:	tst	w26, w0
  41d75c:	b.eq	41d6a0 <out_of_memory@@Base+0x1440>  // b.none
  41d760:	mov	x19, #0x0                   	// #0
  41d764:	mov	x0, x19
  41d768:	ldp	x19, x20, [sp, #16]
  41d76c:	ldp	x21, x22, [sp, #32]
  41d770:	ldp	x23, x24, [sp, #48]
  41d774:	ldp	x25, x26, [sp, #64]
  41d778:	ldp	x27, x28, [sp, #80]
  41d77c:	ldp	x29, x30, [sp], #112
  41d780:	ret
  41d784:	subs	w4, w4, #0x1
  41d788:	b.ne	41d670 <out_of_memory@@Base+0x1410>  // b.any
  41d78c:	ldrb	w2, [x1, #1]
  41d790:	add	x19, x1, #0x1
  41d794:	b	41d610 <out_of_memory@@Base+0x13b0>
  41d798:	sub	x1, x19, #0x1
  41d79c:	cbnz	x27, 41d7b0 <out_of_memory@@Base+0x1550>
  41d7a0:	mov	x28, x19
  41d7a4:	mov	x21, #0x0                   	// #0
  41d7a8:	mov	w22, #0x1                   	// #1
  41d7ac:	b	41d714 <out_of_memory@@Base+0x14b4>
  41d7b0:	sub	x3, x19, x24
  41d7b4:	add	x2, x27, #0x1
  41d7b8:	mov	x0, x1
  41d7bc:	sub	x2, x2, x3
  41d7c0:	mov	x1, x19
  41d7c4:	bl	406650 <memmove@plt>
  41d7c8:	ldrb	w2, [x19]
  41d7cc:	b	41d610 <out_of_memory@@Base+0x13b0>
  41d7d0:	mov	x19, x28
  41d7d4:	b	41d764 <out_of_memory@@Base+0x1504>

000000000041d7d8 <find_percent@@Base>:
  41d7d8:	mov	w1, #0x25                  	// #37
  41d7dc:	b	41d040 <out_of_memory@@Base+0xde0>

000000000041d7e0 <find_percent_cached@@Base>:
  41d7e0:	stp	x29, x30, [sp, #-112]!
  41d7e4:	mov	x29, sp
  41d7e8:	stp	x25, x26, [sp, #64]
  41d7ec:	ldr	x25, [x0]
  41d7f0:	stp	x19, x20, [sp, #16]
  41d7f4:	stp	x21, x22, [sp, #32]
  41d7f8:	stp	x23, x24, [sp, #48]
  41d7fc:	stp	x27, x28, [sp, #80]
  41d800:	str	x0, [x29, #104]
  41d804:	ldrb	w0, [x25]
  41d808:	cmp	w0, #0x25
  41d80c:	b.eq	41d8d8 <find_percent_cached@@Base+0xf8>  // b.none
  41d810:	mov	x19, x25
  41d814:	mov	x21, #0x0                   	// #0
  41d818:	mov	x20, #0x0                   	// #0
  41d81c:	mov	w22, #0xfffffffe            	// #-2
  41d820:	mov	x23, #0x1                   	// #1
  41d824:	nop
  41d828:	mov	x0, x25
  41d82c:	mov	w1, #0x25                  	// #37
  41d830:	bl	406bb0 <strchr@plt>
  41d834:	mov	x25, x0
  41d838:	cbz	x0, 41d98c <find_percent_cached@@Base+0x1ac>
  41d83c:	ldurb	w0, [x0, #-1]
  41d840:	cmp	w0, #0x5c
  41d844:	b.ne	41d9b8 <find_percent_cached@@Base+0x1d8>  // b.any
  41d848:	sub	x1, x25, #0x2
  41d84c:	sub	x4, x19, #0x1
  41d850:	cmp	x1, x19
  41d854:	sub	w0, w22, w1
  41d858:	b.cs	41d868 <find_percent_cached@@Base+0x88>  // b.hs, b.nlast
  41d85c:	b	41d9a4 <find_percent_cached@@Base+0x1c4>
  41d860:	cmp	x1, x4
  41d864:	b.eq	41d8fc <find_percent_cached@@Base+0x11c>  // b.none
  41d868:	ldrb	w2, [x1]
  41d86c:	add	w3, w0, w1
  41d870:	sub	x1, x1, #0x1
  41d874:	cmp	w2, #0x5c
  41d878:	b.eq	41d860 <find_percent_cached@@Base+0x80>  // b.none
  41d87c:	add	w3, w3, #0x1
  41d880:	and	w24, w3, #0x1
  41d884:	add	w26, w3, w3, lsr #31
  41d888:	sxtw	x5, w3
  41d88c:	asr	w26, w26, #1
  41d890:	sxtw	x26, w26
  41d894:	sub	x28, x23, x26
  41d898:	sub	x27, x25, x19
  41d89c:	cbz	x20, 41d91c <find_percent_cached@@Base+0x13c>
  41d8a0:	add	x1, x20, x27
  41d8a4:	sub	x2, x28, x27
  41d8a8:	add	x0, x1, x5
  41d8ac:	add	x2, x2, x21
  41d8b0:	add	x1, x1, x26
  41d8b4:	add	x25, x25, x26
  41d8b8:	bl	406650 <memmove@plt>
  41d8bc:	cbnz	w24, 41d828 <find_percent_cached@@Base+0x48>
  41d8c0:	mov	x0, x19
  41d8c4:	bl	424940 <strcache_add@@Base>
  41d8c8:	ldr	x1, [x29, #104]
  41d8cc:	sub	x25, x25, x20
  41d8d0:	add	x25, x0, x25
  41d8d4:	str	x0, [x1]
  41d8d8:	mov	sp, x29
  41d8dc:	mov	x0, x25
  41d8e0:	ldp	x19, x20, [sp, #16]
  41d8e4:	ldp	x21, x22, [sp, #32]
  41d8e8:	ldp	x23, x24, [sp, #48]
  41d8ec:	ldp	x25, x26, [sp, #64]
  41d8f0:	ldp	x27, x28, [sp, #80]
  41d8f4:	ldp	x29, x30, [sp], #112
  41d8f8:	ret
  41d8fc:	add	w26, w3, w3, lsr #31
  41d900:	sxtw	x5, w3
  41d904:	and	w24, w3, #0x1
  41d908:	sub	x27, x25, x19
  41d90c:	asr	w26, w26, #1
  41d910:	sxtw	x26, w26
  41d914:	sub	x28, x23, x26
  41d918:	cbnz	x20, 41d8a0 <find_percent_cached@@Base+0xc0>
  41d91c:	mov	x0, x19
  41d920:	str	x5, [x29, #96]
  41d924:	bl	406680 <strlen@plt>
  41d928:	mov	x21, x0
  41d92c:	add	x0, x0, #0x10
  41d930:	mov	x1, x19
  41d934:	and	x0, x0, #0xfffffffffffffff0
  41d938:	add	x2, x21, #0x1
  41d93c:	sub	sp, sp, x0
  41d940:	mov	x20, sp
  41d944:	mov	x0, x20
  41d948:	bl	406640 <memcpy@plt>
  41d94c:	ldp	x5, x1, [x29, #96]
  41d950:	add	x0, x20, x27
  41d954:	add	x25, x0, x26
  41d958:	sub	x2, x28, x27
  41d95c:	add	x2, x2, x21
  41d960:	mov	x19, x20
  41d964:	str	x20, [x1]
  41d968:	add	x0, x0, x5
  41d96c:	mov	x1, x25
  41d970:	bl	406650 <memmove@plt>
  41d974:	cbz	w24, 41d8c0 <find_percent_cached@@Base+0xe0>
  41d978:	mov	x0, x25
  41d97c:	mov	w1, #0x25                  	// #37
  41d980:	bl	406bb0 <strchr@plt>
  41d984:	mov	x25, x0
  41d988:	cbnz	x0, 41d83c <find_percent_cached@@Base+0x5c>
  41d98c:	cbz	x20, 41d8d8 <find_percent_cached@@Base+0xf8>
  41d990:	mov	x0, x19
  41d994:	bl	424940 <strcache_add@@Base>
  41d998:	ldr	x1, [x29, #104]
  41d99c:	str	x0, [x1]
  41d9a0:	b	41d8d8 <find_percent_cached@@Base+0xf8>
  41d9a4:	mov	x28, #0x1                   	// #1
  41d9a8:	mov	x26, #0x0                   	// #0
  41d9ac:	mov	w24, w28
  41d9b0:	mov	x5, #0xffffffffffffffff    	// #-1
  41d9b4:	b	41d898 <find_percent_cached@@Base+0xb8>
  41d9b8:	cbz	x20, 41d8d8 <find_percent_cached@@Base+0xf8>
  41d9bc:	b	41d8c0 <find_percent_cached@@Base+0xe0>
  41d9c0:	stp	x29, x30, [sp, #-144]!
  41d9c4:	adrp	x8, 446000 <expanding_var@@Base+0x320>
  41d9c8:	mov	x29, sp
  41d9cc:	ldr	w8, [x8, #828]
  41d9d0:	stp	x19, x20, [sp, #16]
  41d9d4:	stp	x21, x22, [sp, #32]
  41d9d8:	stp	x23, x24, [sp, #48]
  41d9dc:	stp	x25, x26, [sp, #64]
  41d9e0:	ldrb	w26, [sp, #152]
  41d9e4:	stp	x27, x28, [sp, #80]
  41d9e8:	str	w1, [sp, #96]
  41d9ec:	cbnz	w8, 41e338 <find_percent_cached@@Base+0xb58>
  41d9f0:	mov	x19, x0
  41d9f4:	mov	x20, x2
  41d9f8:	mov	x23, x3
  41d9fc:	mov	x22, x4
  41da00:	mov	w28, w5
  41da04:	mov	x24, x6
  41da08:	ldr	x2, [x19, #8]
  41da0c:	mov	x27, x7
  41da10:	add	x0, sp, #0x88
  41da14:	str	x2, [sp, #136]
  41da18:	bl	41d7e0 <find_percent_cached@@Base>
  41da1c:	mov	x25, x0
  41da20:	cbnz	x27, 41de4c <find_percent_cached@@Base+0x66c>
  41da24:	ldr	w0, [sp, #96]
  41da28:	mov	x21, #0x0                   	// #0
  41da2c:	cbnz	w0, 41e34c <find_percent_cached@@Base+0xb6c>
  41da30:	cbz	x22, 41db18 <find_percent_cached@@Base+0x338>
  41da34:	ldrb	w3, [x22]
  41da38:	mov	x0, x22
  41da3c:	cbz	w3, 41dac8 <find_percent_cached@@Base+0x2e8>
  41da40:	mov	x1, x22
  41da44:	b	41da5c <find_percent_cached@@Base+0x27c>
  41da48:	mov	x0, x26
  41da4c:	add	x1, x24, #0x1
  41da50:	strb	w3, [x0], #1
  41da54:	ldrb	w3, [x24, #1]
  41da58:	cbz	w3, 41dac8 <find_percent_cached@@Base+0x2e8>
  41da5c:	cmp	w3, #0x5c
  41da60:	mov	x24, x1
  41da64:	mov	x26, x0
  41da68:	b.ne	41da48 <find_percent_cached@@Base+0x268>  // b.any
  41da6c:	nop
  41da70:	mov	x28, x24
  41da74:	ldrb	w3, [x24, #1]!
  41da78:	cmp	w3, #0x5c
  41da7c:	b.eq	41da70 <find_percent_cached@@Base+0x290>  // b.none
  41da80:	cmp	w3, #0x3a
  41da84:	sub	x2, x24, x1
  41da88:	b.ne	41dbf8 <find_percent_cached@@Base+0x418>  // b.any
  41da8c:	tbz	w2, #0, 41dbf8 <find_percent_cached@@Base+0x418>
  41da90:	mov	x26, x0
  41da94:	cmp	x2, #0x1
  41da98:	b.eq	41da48 <find_percent_cached@@Base+0x268>  // b.none
  41da9c:	lsr	x27, x2, #1
  41daa0:	mov	x2, x27
  41daa4:	add	x26, x26, x27
  41daa8:	bl	406650 <memmove@plt>
  41daac:	mov	x0, x26
  41dab0:	ldrb	w3, [x28, #1]
  41dab4:	add	x1, x24, #0x1
  41dab8:	strb	w3, [x0], #1
  41dabc:	ldrb	w3, [x24, #1]
  41dac0:	cbnz	w3, 41da5c <find_percent_cached@@Base+0x27c>
  41dac4:	nop
  41dac8:	adrp	x1, 449000 <commands_started@@Base+0x170>
  41dacc:	strb	wzr, [x0]
  41dad0:	ldr	w0, [x1, #2092]
  41dad4:	cbz	w0, 41dc10 <find_percent_cached@@Base+0x430>
  41dad8:	mov	x0, x22
  41dadc:	mov	w1, #0x24                  	// #36
  41dae0:	bl	406bb0 <strchr@plt>
  41dae4:	cbz	x0, 41dc10 <find_percent_cached@@Base+0x430>
  41dae8:	mov	x0, #0x28                  	// #40
  41daec:	bl	41ab50 <xcalloc@@Base>
  41daf0:	cmp	x20, #0x0
  41daf4:	ldrb	w2, [x0, #33]
  41daf8:	cset	w1, ne  // ne = any
  41dafc:	str	x22, [x0, #8]
  41db00:	and	w2, w2, #0xfffffff3
  41db04:	mov	x22, x0
  41db08:	ubfiz	w1, w1, #2, #6
  41db0c:	orr	w1, w1, #0x8
  41db10:	orr	w1, w1, w2
  41db14:	strb	w1, [x0, #33]
  41db18:	cbz	x25, 41dc40 <find_percent_cached@@Base+0x460>
  41db1c:	cbnz	x20, 41e39c <find_percent_cached@@Base+0xbbc>
  41db20:	ldr	x24, [x19]
  41db24:	mov	x0, x19
  41db28:	bl	406b90 <free@plt>
  41db2c:	cbz	x24, 41e2b8 <find_percent_cached@@Base+0xad8>
  41db30:	mov	x1, x24
  41db34:	mov	w0, #0x1                   	// #1
  41db38:	ldr	x1, [x1]
  41db3c:	add	w0, w0, #0x1
  41db40:	and	w0, w0, #0xffff
  41db44:	cbnz	x1, 41db38 <find_percent_cached@@Base+0x358>
  41db48:	ubfiz	x20, x0, #3, #16
  41db4c:	mov	w19, #0x1                   	// #1
  41db50:	mov	x0, x20
  41db54:	bl	41ab28 <xmalloc@@Base>
  41db58:	mov	x23, x0
  41db5c:	mov	x0, x20
  41db60:	bl	41ab28 <xmalloc@@Base>
  41db64:	mov	x20, x0
  41db68:	ldr	x0, [sp, #136]
  41db6c:	str	x0, [x23]
  41db70:	str	x25, [x20]
  41db74:	b	41db7c <find_percent_cached@@Base+0x39c>
  41db78:	mov	x24, x25
  41db7c:	ldr	x1, [x24, #8]
  41db80:	add	x0, sp, #0x88
  41db84:	str	x1, [sp, #136]
  41db88:	bl	41d7e0 <find_percent_cached@@Base>
  41db8c:	mov	x1, x0
  41db90:	cbz	x0, 41e2e4 <find_percent_cached@@Base+0xb04>
  41db94:	mov	w0, w19
  41db98:	add	w19, w19, #0x1
  41db9c:	ldr	x25, [x24]
  41dba0:	and	w19, w19, #0xffff
  41dba4:	ldr	x2, [sp, #136]
  41dba8:	str	x2, [x23, x0, lsl #3]
  41dbac:	str	x1, [x20, x0, lsl #3]
  41dbb0:	mov	x0, x24
  41dbb4:	bl	406b90 <free@plt>
  41dbb8:	cbnz	x25, 41db78 <find_percent_cached@@Base+0x398>
  41dbbc:	ldr	w3, [sp, #144]
  41dbc0:	mov	x5, x21
  41dbc4:	mov	x4, x22
  41dbc8:	mov	w2, w19
  41dbcc:	mov	x1, x20
  41dbd0:	mov	x0, x23
  41dbd4:	mov	w6, #0x1                   	// #1
  41dbd8:	bl	424410 <create_pattern_rule@@Base>
  41dbdc:	ldp	x19, x20, [sp, #16]
  41dbe0:	ldp	x21, x22, [sp, #32]
  41dbe4:	ldp	x23, x24, [sp, #48]
  41dbe8:	ldp	x25, x26, [sp, #64]
  41dbec:	ldp	x27, x28, [sp, #80]
  41dbf0:	ldp	x29, x30, [sp], #144
  41dbf4:	ret
  41dbf8:	add	x26, x0, x2
  41dbfc:	bl	406650 <memmove@plt>
  41dc00:	ldrb	w3, [x24]
  41dc04:	cbnz	w3, 41da48 <find_percent_cached@@Base+0x268>
  41dc08:	mov	x0, x26
  41dc0c:	b	41dac8 <find_percent_cached@@Base+0x2e8>
  41dc10:	mov	x0, x22
  41dc14:	bl	40d760 <split_prereqs@@Base>
  41dc18:	mov	x1, x0
  41dc1c:	mov	x0, x22
  41dc20:	mov	x22, x1
  41dc24:	bl	406b90 <free@plt>
  41dc28:	orr	x0, x25, x20
  41dc2c:	cbnz	x0, 41db18 <find_percent_cached@@Base+0x338>
  41dc30:	mov	x0, x22
  41dc34:	mov	x1, #0x0                   	// #0
  41dc38:	bl	40d820 <enter_prereqs@@Base>
  41dc3c:	mov	x22, x0
  41dc40:	adrp	x24, 449000 <commands_started@@Base+0x170>
  41dc44:	adrp	x26, 449000 <commands_started@@Base+0x170>
  41dc48:	adrp	x28, 449000 <commands_started@@Base+0x170>
  41dc4c:	add	x24, x24, #0x828
  41dc50:	add	x26, x26, #0x82c
  41dc54:	add	x28, x28, #0x85c
  41dc58:	str	xzr, [sp, #112]
  41dc5c:	nop
  41dc60:	mov	x0, x19
  41dc64:	ldr	x19, [x19]
  41dc68:	bl	406b90 <free@plt>
  41dc6c:	ldr	w0, [x24]
  41dc70:	cbnz	w0, 41dc94 <find_percent_cached@@Base+0x4b4>
  41dc74:	ldr	x0, [sp, #136]
  41dc78:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41dc7c:	add	x1, x1, #0x180
  41dc80:	cmp	x0, x1
  41dc84:	b.eq	41e0d0 <find_percent_cached@@Base+0x8f0>  // b.none
  41dc88:	ldrb	w1, [x0]
  41dc8c:	cmp	w1, #0x2e
  41dc90:	b.eq	41e0bc <find_percent_cached@@Base+0x8dc>  // b.none
  41dc94:	ldr	w0, [x26]
  41dc98:	cbnz	w0, 41dcbc <find_percent_cached@@Base+0x4dc>
  41dc9c:	ldr	x0, [sp, #136]
  41dca0:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41dca4:	add	x1, x1, #0x1d0
  41dca8:	cmp	x0, x1
  41dcac:	b.eq	41e0b0 <find_percent_cached@@Base+0x8d0>  // b.none
  41dcb0:	ldrb	w1, [x0]
  41dcb4:	cmp	w1, #0x2e
  41dcb8:	b.eq	41e09c <find_percent_cached@@Base+0x8bc>  // b.none
  41dcbc:	ldr	w0, [x28]
  41dcc0:	cbnz	w0, 41dce8 <find_percent_cached@@Base+0x508>
  41dcc4:	ldr	x0, [sp, #136]
  41dcc8:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41dccc:	add	x1, x1, #0x1e8
  41dcd0:	cmp	x0, x1
  41dcd4:	b.eq	41df54 <find_percent_cached@@Base+0x774>  // b.none
  41dcd8:	ldrb	w1, [x0]
  41dcdc:	cmp	w1, #0x2e
  41dce0:	b.eq	41df40 <find_percent_cached@@Base+0x760>  // b.none
  41dce4:	nop
  41dce8:	cbz	x20, 41dd00 <find_percent_cached@@Base+0x520>
  41dcec:	ldr	x2, [sp, #136]
  41dcf0:	mov	x1, x23
  41dcf4:	mov	x0, x20
  41dcf8:	bl	411690 <pattern_matches@@Base>
  41dcfc:	cbz	w0, 41e060 <find_percent_cached@@Base+0x880>
  41dd00:	mov	x25, #0x0                   	// #0
  41dd04:	cbz	x22, 41dd1c <find_percent_cached@@Base+0x53c>
  41dd08:	mov	x25, x22
  41dd0c:	cbz	x19, 41dd1c <find_percent_cached@@Base+0x53c>
  41dd10:	mov	x0, x22
  41dd14:	bl	41ae38 <copy_dep_chain@@Base>
  41dd18:	mov	x25, x0
  41dd1c:	ldr	w1, [sp, #144]
  41dd20:	ldr	x0, [sp, #136]
  41dd24:	cbnz	w1, 41dff4 <find_percent_cached@@Base+0x814>
  41dd28:	bl	424940 <strcache_add@@Base>
  41dd2c:	bl	40cf50 <enter_file@@Base>
  41dd30:	mov	x27, x0
  41dd34:	ldr	x0, [x0, #104]
  41dd38:	cbnz	x0, 41e304 <find_percent_cached@@Base+0xb24>
  41dd3c:	cbz	x21, 41e214 <find_percent_cached@@Base+0xa34>
  41dd40:	ldr	x0, [x27, #32]
  41dd44:	cmp	x21, x0
  41dd48:	b.eq	41e250 <find_percent_cached@@Base+0xa70>  // b.none
  41dd4c:	cbz	x0, 41dd58 <find_percent_cached@@Base+0x578>
  41dd50:	ldrb	w0, [x27, #137]
  41dd54:	tbnz	w0, #3, 41df60 <find_percent_cached@@Base+0x780>
  41dd58:	str	x21, [x27, #32]
  41dd5c:	adrp	x0, 449000 <commands_started@@Base+0x170>
  41dd60:	cmp	x25, #0x0
  41dd64:	ldr	x0, [x0, #2296]
  41dd68:	ccmp	x0, x27, #0x0, eq  // eq = none
  41dd6c:	b.eq	41e240 <find_percent_cached@@Base+0xa60>  // b.none
  41dd70:	ldr	w0, [sp, #96]
  41dd74:	cbnz	w0, 41e034 <find_percent_cached@@Base+0x854>
  41dd78:	ldrb	w0, [x27, #137]
  41dd7c:	orr	w0, w0, #0x8
  41dd80:	strb	w0, [x27, #137]
  41dd84:	cbz	x20, 41dfec <find_percent_cached@@Base+0x80c>
  41dd88:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x40e0>
  41dd8c:	add	x0, x0, #0xed0
  41dd90:	bl	40c808 <variable_expand@@Base>
  41dd94:	str	x0, [sp, #104]
  41dd98:	ldr	x1, [sp, #136]
  41dd9c:	add	x4, x23, #0x1
  41dda0:	mov	x2, x20
  41dda4:	adrp	x3, 42b000 <_IO_stdin_used@@Base+0x20e0>
  41dda8:	adrp	x5, 42b000 <_IO_stdin_used@@Base+0x20e0>
  41ddac:	add	x3, x3, #0x248
  41ddb0:	add	x5, x5, #0x249
  41ddb4:	bl	411350 <patsubst_expand_pat@@Base>
  41ddb8:	ldr	x8, [sp, #104]
  41ddbc:	sub	x1, x0, x8
  41ddc0:	mov	x0, x8
  41ddc4:	bl	424a48 <strcache_add_len@@Base>
  41ddc8:	str	x0, [x27, #40]
  41ddcc:	cbz	x25, 41de04 <find_percent_cached@@Base+0x624>
  41ddd0:	ldrb	w1, [x25, #33]
  41ddd4:	tbz	w1, #3, 41dfdc <find_percent_cached@@Base+0x7fc>
  41ddd8:	str	x0, [x25, #24]
  41dddc:	ldr	x2, [x27, #24]
  41dde0:	cbz	x2, 41de00 <find_percent_cached@@Base+0x620>
  41dde4:	cbz	x21, 41de80 <find_percent_cached@@Base+0x6a0>
  41dde8:	mov	x1, x25
  41ddec:	nop
  41ddf0:	mov	x0, x1
  41ddf4:	ldr	x1, [x1]
  41ddf8:	cbnz	x1, 41ddf0 <find_percent_cached@@Base+0x610>
  41ddfc:	str	x2, [x0]
  41de00:	str	x25, [x27, #24]
  41de04:	ldr	x0, [x27]
  41de08:	str	x0, [sp, #136]
  41de0c:	cbz	x19, 41dea0 <find_percent_cached@@Base+0x6c0>
  41de10:	ldr	x1, [x19, #8]
  41de14:	add	x0, sp, #0x88
  41de18:	str	x1, [sp, #136]
  41de1c:	bl	41d7e0 <find_percent_cached@@Base>
  41de20:	cbz	x0, 41dc60 <find_percent_cached@@Base+0x480>
  41de24:	mov	w2, #0x5                   	// #5
  41de28:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41de2c:	mov	x0, #0x0                   	// #0
  41de30:	add	x1, x1, #0x2f0
  41de34:	bl	406cd0 <dcgettext@plt>
  41de38:	mov	x2, x0
  41de3c:	ldr	x0, [sp, #160]
  41de40:	mov	x1, #0x0                   	// #0
  41de44:	bl	41bd88 <error@@Base>
  41de48:	b	41dc60 <find_percent_cached@@Base+0x480>
  41de4c:	mov	x0, #0x38                  	// #56
  41de50:	bl	41ab28 <xmalloc@@Base>
  41de54:	mov	x21, x0
  41de58:	mov	x1, x27
  41de5c:	ldr	x0, [sp, #160]
  41de60:	ldr	x2, [x0]
  41de64:	stp	x2, x28, [x21]
  41de68:	mov	x0, x24
  41de6c:	str	xzr, [x21, #16]
  41de70:	bl	41abd0 <xstrndup@@Base>
  41de74:	stp	x0, xzr, [x21, #24]
  41de78:	strb	w26, [x21, #50]
  41de7c:	b	41da30 <find_percent_cached@@Base+0x250>
  41de80:	mov	x0, x2
  41de84:	ldr	x2, [x2]
  41de88:	cbnz	x2, 41de80 <find_percent_cached@@Base+0x6a0>
  41de8c:	str	x25, [x0]
  41de90:	ldr	x0, [x27]
  41de94:	str	x0, [sp, #136]
  41de98:	cbnz	x19, 41de10 <find_percent_cached@@Base+0x630>
  41de9c:	nop
  41dea0:	ldr	x0, [sp, #112]
  41dea4:	adrp	x24, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41dea8:	add	x24, x24, #0x328
  41deac:	mov	x19, x0
  41deb0:	cbz	x0, 41dbdc <find_percent_cached@@Base+0x3fc>
  41deb4:	nop
  41deb8:	ldr	x0, [x19]
  41debc:	ldr	x1, [sp, #112]
  41dec0:	ldr	x20, [x19, #16]
  41dec4:	mov	x22, x1
  41dec8:	cbz	x0, 41ded8 <find_percent_cached@@Base+0x6f8>
  41decc:	mov	x0, x1
  41ded0:	bl	41ae38 <copy_dep_chain@@Base>
  41ded4:	mov	x22, x0
  41ded8:	ldr	x0, [x20, #48]
  41dedc:	cbz	x0, 41e290 <find_percent_cached@@Base+0xab0>
  41dee0:	ldr	x0, [x20]
  41dee4:	bl	406680 <strlen@plt>
  41dee8:	mov	x23, x0
  41deec:	mov	x1, x24
  41def0:	mov	w2, #0x5                   	// #5
  41def4:	mov	x0, #0x0                   	// #0
  41def8:	bl	406cd0 <dcgettext@plt>
  41defc:	ldr	x3, [x20]
  41df00:	mov	x2, x0
  41df04:	mov	x1, x23
  41df08:	mov	x0, x21
  41df0c:	bl	41bd88 <error@@Base>
  41df10:	ldr	x0, [x20, #48]
  41df14:	bl	41aee0 <free_ns_chain@@Base>
  41df18:	ldr	x19, [x19]
  41df1c:	str	x22, [x20, #48]
  41df20:	cbnz	x19, 41deb8 <find_percent_cached@@Base+0x6d8>
  41df24:	ldp	x19, x20, [sp, #16]
  41df28:	ldp	x21, x22, [sp, #32]
  41df2c:	ldp	x23, x24, [sp, #48]
  41df30:	ldp	x25, x26, [sp, #64]
  41df34:	ldp	x27, x28, [sp, #80]
  41df38:	ldp	x29, x30, [sp], #144
  41df3c:	ret
  41df40:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41df44:	add	x0, x0, #0x1
  41df48:	add	x1, x1, #0x1e9
  41df4c:	bl	406b40 <strcmp@plt>
  41df50:	cbnz	w0, 41dce8 <find_percent_cached@@Base+0x508>
  41df54:	mov	w0, #0x1                   	// #1
  41df58:	str	w0, [x28]
  41df5c:	b	41dce8 <find_percent_cached@@Base+0x508>
  41df60:	ldr	x0, [x27]
  41df64:	bl	406680 <strlen@plt>
  41df68:	mov	x4, x0
  41df6c:	mov	w2, #0x5                   	// #5
  41df70:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41df74:	mov	x0, #0x0                   	// #0
  41df78:	add	x1, x1, #0x290
  41df7c:	str	x4, [sp, #104]
  41df80:	bl	406cd0 <dcgettext@plt>
  41df84:	ldr	x3, [x27]
  41df88:	mov	x2, x0
  41df8c:	ldr	x4, [sp, #104]
  41df90:	mov	x0, x21
  41df94:	str	x4, [sp, #120]
  41df98:	mov	x1, x4
  41df9c:	bl	41bd88 <error@@Base>
  41dfa0:	ldr	x5, [x27, #32]
  41dfa4:	mov	w2, #0x5                   	// #5
  41dfa8:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41dfac:	mov	x0, #0x0                   	// #0
  41dfb0:	add	x1, x1, #0x2c0
  41dfb4:	str	x5, [sp, #104]
  41dfb8:	bl	406cd0 <dcgettext@plt>
  41dfbc:	mov	x2, x0
  41dfc0:	ldr	x3, [x27]
  41dfc4:	ldr	x5, [sp, #104]
  41dfc8:	ldr	x4, [sp, #120]
  41dfcc:	mov	x0, x5
  41dfd0:	mov	x1, x4
  41dfd4:	bl	41bd88 <error@@Base>
  41dfd8:	b	41dd58 <find_percent_cached@@Base+0x578>
  41dfdc:	mov	x1, x0
  41dfe0:	mov	x0, x25
  41dfe4:	bl	40d820 <enter_prereqs@@Base>
  41dfe8:	mov	x25, x0
  41dfec:	cbnz	x25, 41dddc <find_percent_cached@@Base+0x5fc>
  41dff0:	b	41de04 <find_percent_cached@@Base+0x624>
  41dff4:	bl	40ced8 <lookup_file@@Base>
  41dff8:	mov	x3, x0
  41dffc:	cbz	x0, 41e010 <find_percent_cached@@Base+0x830>
  41e000:	ldrb	w0, [x0, #137]
  41e004:	tbz	w0, #3, 41e010 <find_percent_cached@@Base+0x830>
  41e008:	ldr	x0, [x3, #104]
  41e00c:	cbz	x0, 41e360 <find_percent_cached@@Base+0xb80>
  41e010:	ldr	x0, [sp, #136]
  41e014:	bl	424940 <strcache_add@@Base>
  41e018:	bl	40cf50 <enter_file@@Base>
  41e01c:	mov	x27, x0
  41e020:	ldr	x0, [x0, #104]
  41e024:	cbz	x0, 41e054 <find_percent_cached@@Base+0x874>
  41e028:	str	x21, [x27, #32]
  41e02c:	ldr	w0, [sp, #96]
  41e030:	cbz	w0, 41dd78 <find_percent_cached@@Base+0x598>
  41e034:	mov	x0, #0x28                  	// #40
  41e038:	bl	41ab50 <xcalloc@@Base>
  41e03c:	ldr	x1, [x27]
  41e040:	str	x27, [x0, #16]
  41e044:	ldr	x2, [sp, #112]
  41e048:	stp	x2, x1, [x0]
  41e04c:	str	x0, [sp, #112]
  41e050:	b	41dd78 <find_percent_cached@@Base+0x598>
  41e054:	str	x21, [x27, #32]
  41e058:	str	x27, [x27, #104]
  41e05c:	b	41e02c <find_percent_cached@@Base+0x84c>
  41e060:	ldr	x0, [sp, #136]
  41e064:	mov	x25, #0x0                   	// #0
  41e068:	bl	406680 <strlen@plt>
  41e06c:	mov	x27, x0
  41e070:	mov	w2, #0x5                   	// #5
  41e074:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e078:	mov	x0, #0x0                   	// #0
  41e07c:	add	x1, x1, #0x1f8
  41e080:	bl	406cd0 <dcgettext@plt>
  41e084:	mov	x2, x0
  41e088:	ldr	x3, [sp, #136]
  41e08c:	mov	x1, x27
  41e090:	ldr	x0, [sp, #160]
  41e094:	bl	41bd88 <error@@Base>
  41e098:	b	41dd1c <find_percent_cached@@Base+0x53c>
  41e09c:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e0a0:	add	x0, x0, #0x1
  41e0a4:	add	x1, x1, #0x1d1
  41e0a8:	bl	406b40 <strcmp@plt>
  41e0ac:	cbnz	w0, 41dcbc <find_percent_cached@@Base+0x4dc>
  41e0b0:	mov	w0, #0x1                   	// #1
  41e0b4:	str	w0, [x26]
  41e0b8:	b	41dce8 <find_percent_cached@@Base+0x508>
  41e0bc:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e0c0:	add	x0, x0, #0x1
  41e0c4:	add	x1, x1, #0x181
  41e0c8:	bl	406b40 <strcmp@plt>
  41e0cc:	cbnz	w0, 41dc94 <find_percent_cached@@Base+0x4b4>
  41e0d0:	adrp	x25, 446000 <expanding_var@@Base+0x320>
  41e0d4:	mov	w8, #0x1                   	// #1
  41e0d8:	mov	x6, #0x0                   	// #0
  41e0dc:	mov	w4, #0x0                   	// #0
  41e0e0:	ldr	x1, [x25, #336]
  41e0e4:	mov	w3, #0x0                   	// #0
  41e0e8:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x20e0>
  41e0ec:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  41e0f0:	add	x2, x2, #0x698
  41e0f4:	add	x0, x0, #0x200
  41e0f8:	ldr	x5, [x1, #8]
  41e0fc:	mov	x1, #0xb                   	// #11
  41e100:	str	w8, [x24]
  41e104:	bl	4253c8 <define_variable_in_set@@Base>
  41e108:	ldr	x1, [x25, #336]
  41e10c:	mov	x6, #0x0                   	// #0
  41e110:	mov	w4, #0x0                   	// #0
  41e114:	mov	w3, #0x0                   	// #0
  41e118:	adrp	x2, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e11c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  41e120:	ldr	x5, [x1, #8]
  41e124:	add	x2, x2, #0x188
  41e128:	mov	x1, #0x7                   	// #7
  41e12c:	add	x0, x0, #0x1c8
  41e130:	bl	4253c8 <define_variable_in_set@@Base>
  41e134:	ldr	x1, [x25, #336]
  41e138:	mov	x6, #0x0                   	// #0
  41e13c:	mov	w4, #0x0                   	// #0
  41e140:	mov	w3, #0x0                   	// #0
  41e144:	adrp	x2, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e148:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  41e14c:	ldr	x5, [x1, #8]
  41e150:	add	x2, x2, #0x190
  41e154:	mov	x1, #0x2                   	// #2
  41e158:	add	x0, x0, #0x1e8
  41e15c:	bl	4253c8 <define_variable_in_set@@Base>
  41e160:	ldr	x1, [x25, #336]
  41e164:	adrp	x8, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e168:	add	x27, x8, #0x198
  41e16c:	mov	x6, #0x0                   	// #0
  41e170:	mov	x2, x27
  41e174:	mov	w4, #0x0                   	// #0
  41e178:	ldr	x5, [x1, #8]
  41e17c:	mov	w3, #0x0                   	// #0
  41e180:	mov	x1, #0x6                   	// #6
  41e184:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e188:	add	x0, x0, #0x1a0
  41e18c:	bl	4253c8 <define_variable_in_set@@Base>
  41e190:	ldr	x1, [x25, #336]
  41e194:	mov	x6, #0x0                   	// #0
  41e198:	mov	w4, #0x0                   	// #0
  41e19c:	mov	w3, #0x0                   	// #0
  41e1a0:	adrp	x2, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e1a4:	adrp	x0, 429000 <_IO_stdin_used@@Base+0xe0>
  41e1a8:	ldr	x5, [x1, #8]
  41e1ac:	add	x2, x2, #0x1a8
  41e1b0:	mov	x1, #0x2                   	// #2
  41e1b4:	add	x0, x0, #0x278
  41e1b8:	bl	4253c8 <define_variable_in_set@@Base>
  41e1bc:	ldr	x1, [x25, #336]
  41e1c0:	mov	x2, x27
  41e1c4:	mov	x6, #0x0                   	// #0
  41e1c8:	mov	w4, #0x0                   	// #0
  41e1cc:	mov	w3, #0x0                   	// #0
  41e1d0:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e1d4:	ldr	x5, [x1, #8]
  41e1d8:	add	x0, x0, #0x1b0
  41e1dc:	mov	x1, #0x6                   	// #6
  41e1e0:	bl	4253c8 <define_variable_in_set@@Base>
  41e1e4:	ldr	x1, [x25, #336]
  41e1e8:	adrp	x2, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e1ec:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e1f0:	add	x2, x2, #0x1b8
  41e1f4:	mov	x6, #0x0                   	// #0
  41e1f8:	mov	w4, #0x0                   	// #0
  41e1fc:	ldr	x5, [x1, #8]
  41e200:	mov	w3, #0x0                   	// #0
  41e204:	mov	x1, #0xc                   	// #12
  41e208:	add	x0, x0, #0x1c0
  41e20c:	bl	4253c8 <define_variable_in_set@@Base>
  41e210:	b	41dce8 <find_percent_cached@@Base+0x508>
  41e214:	adrp	x0, 449000 <commands_started@@Base+0x170>
  41e218:	ldr	x0, [x0, #2120]
  41e21c:	cmp	x27, x0
  41e220:	b.ne	41dd5c <find_percent_cached@@Base+0x57c>  // b.any
  41e224:	cbnz	x25, 41dd70 <find_percent_cached@@Base+0x590>
  41e228:	adrp	x0, 449000 <commands_started@@Base+0x170>
  41e22c:	str	xzr, [x27, #32]
  41e230:	cmp	x25, #0x0
  41e234:	ldr	x0, [x0, #2296]
  41e238:	ccmp	x0, x27, #0x0, eq  // eq = none
  41e23c:	b.ne	41dd70 <find_percent_cached@@Base+0x590>  // b.any
  41e240:	ldr	x0, [x27, #24]
  41e244:	bl	41aee0 <free_ns_chain@@Base>
  41e248:	str	xzr, [x27, #24]
  41e24c:	b	41dd70 <find_percent_cached@@Base+0x590>
  41e250:	ldr	x0, [x27]
  41e254:	bl	406680 <strlen@plt>
  41e258:	mov	x3, x0
  41e25c:	mov	w2, #0x5                   	// #5
  41e260:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e264:	mov	x0, #0x0                   	// #0
  41e268:	add	x1, x1, #0x258
  41e26c:	str	x3, [sp, #104]
  41e270:	bl	406cd0 <dcgettext@plt>
  41e274:	ldr	x3, [sp, #104]
  41e278:	mov	x2, x0
  41e27c:	ldr	x0, [sp, #160]
  41e280:	mov	x1, x3
  41e284:	ldr	x3, [x27]
  41e288:	bl	41bd88 <error@@Base>
  41e28c:	b	41dd58 <find_percent_cached@@Base+0x578>
  41e290:	ldr	x19, [x19]
  41e294:	str	x22, [x20, #48]
  41e298:	cbnz	x19, 41deb8 <find_percent_cached@@Base+0x6d8>
  41e29c:	ldp	x19, x20, [sp, #16]
  41e2a0:	ldp	x21, x22, [sp, #32]
  41e2a4:	ldp	x23, x24, [sp, #48]
  41e2a8:	ldp	x25, x26, [sp, #64]
  41e2ac:	ldp	x27, x28, [sp, #80]
  41e2b0:	ldp	x29, x30, [sp], #144
  41e2b4:	ret
  41e2b8:	mov	x0, #0x8                   	// #8
  41e2bc:	bl	41ab28 <xmalloc@@Base>
  41e2c0:	mov	x23, x0
  41e2c4:	mov	x0, #0x8                   	// #8
  41e2c8:	bl	41ab28 <xmalloc@@Base>
  41e2cc:	mov	x20, x0
  41e2d0:	ldr	x0, [sp, #136]
  41e2d4:	str	x0, [x23]
  41e2d8:	mov	w19, #0x1                   	// #1
  41e2dc:	str	x25, [x20]
  41e2e0:	b	41dbbc <find_percent_cached@@Base+0x3dc>
  41e2e4:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e2e8:	add	x1, x1, #0x160
  41e2ec:	mov	w2, #0x5                   	// #5
  41e2f0:	bl	406cd0 <dcgettext@plt>
  41e2f4:	mov	x2, x0
  41e2f8:	ldr	x0, [sp, #160]
  41e2fc:	mov	x1, #0x0                   	// #0
  41e300:	bl	41c0a0 <fatal@@Base>
  41e304:	ldr	x0, [x27]
  41e308:	bl	406680 <strlen@plt>
  41e30c:	mov	x19, x0
  41e310:	mov	w2, #0x5                   	// #5
  41e314:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e318:	mov	x0, #0x0                   	// #0
  41e31c:	add	x1, x1, #0x228
  41e320:	bl	406cd0 <dcgettext@plt>
  41e324:	mov	x2, x0
  41e328:	ldr	x3, [x27]
  41e32c:	mov	x1, x19
  41e330:	ldr	x0, [sp, #160]
  41e334:	bl	41c0a0 <fatal@@Base>
  41e338:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e33c:	mov	w2, #0x5                   	// #5
  41e340:	add	x1, x1, #0xe0
  41e344:	mov	x0, #0x0                   	// #0
  41e348:	b	41e2f0 <find_percent_cached@@Base+0xb10>
  41e34c:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e350:	mov	w2, #0x5                   	// #5
  41e354:	add	x1, x1, #0x110
  41e358:	mov	x0, #0x0                   	// #0
  41e35c:	b	41e2f0 <find_percent_cached@@Base+0xb10>
  41e360:	ldr	x0, [x3]
  41e364:	str	x3, [sp, #96]
  41e368:	bl	406680 <strlen@plt>
  41e36c:	mov	x19, x0
  41e370:	mov	w2, #0x5                   	// #5
  41e374:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e378:	mov	x0, #0x0                   	// #0
  41e37c:	add	x1, x1, #0x228
  41e380:	bl	406cd0 <dcgettext@plt>
  41e384:	mov	x2, x0
  41e388:	ldr	x3, [sp, #96]
  41e38c:	mov	x1, x19
  41e390:	ldr	x0, [sp, #160]
  41e394:	ldr	x3, [x3]
  41e398:	bl	41c0a0 <fatal@@Base>
  41e39c:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e3a0:	mov	w2, #0x5                   	// #5
  41e3a4:	add	x1, x1, #0x138
  41e3a8:	mov	x0, #0x0                   	// #0
  41e3ac:	b	41e2f0 <find_percent_cached@@Base+0xb10>

000000000041e3b0 <tilde_expand@@Base>:
  41e3b0:	stp	x29, x30, [sp, #-48]!
  41e3b4:	mov	x29, sp
  41e3b8:	stp	x19, x20, [sp, #16]
  41e3bc:	mov	x19, x0
  41e3c0:	ldrb	w0, [x0, #1]
  41e3c4:	cmp	w0, #0x2f
  41e3c8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  41e3cc:	b.eq	41e480 <tilde_expand@@Base+0xd0>  // b.none
  41e3d0:	add	x19, x19, #0x1
  41e3d4:	mov	w1, #0x2f                  	// #47
  41e3d8:	mov	x0, x19
  41e3dc:	bl	406bb0 <strchr@plt>
  41e3e0:	mov	x20, x0
  41e3e4:	cbz	x0, 41e420 <tilde_expand@@Base+0x70>
  41e3e8:	strb	wzr, [x0]
  41e3ec:	mov	x0, x19
  41e3f0:	bl	4069b0 <getpwnam@plt>
  41e3f4:	mov	x19, x0
  41e3f8:	cbz	x0, 41e4d8 <tilde_expand@@Base+0x128>
  41e3fc:	ldr	x1, [x19, #32]
  41e400:	add	x3, x20, #0x1
  41e404:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  41e408:	mov	w0, #0x3                   	// #3
  41e40c:	add	x2, x2, #0x428
  41e410:	bl	41a930 <concat@@Base>
  41e414:	ldp	x19, x20, [sp, #16]
  41e418:	ldp	x29, x30, [sp], #48
  41e41c:	b	41abb0 <xstrdup@@Base>
  41e420:	mov	x0, x19
  41e424:	bl	4069b0 <getpwnam@plt>
  41e428:	cbz	x0, 41e46c <tilde_expand@@Base+0xbc>
  41e42c:	ldp	x19, x20, [sp, #16]
  41e430:	ldp	x29, x30, [sp], #48
  41e434:	ldr	x0, [x0, #32]
  41e438:	b	41abb0 <xstrdup@@Base>
  41e43c:	bl	406b90 <free@plt>
  41e440:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e444:	add	x0, x0, #0x368
  41e448:	bl	406d80 <getenv@plt>
  41e44c:	cbnz	x0, 41e4f0 <tilde_expand@@Base+0x140>
  41e450:	bl	406dc0 <getlogin@plt>
  41e454:	cbz	x0, 41e468 <tilde_expand@@Base+0xb8>
  41e458:	bl	4069b0 <getpwnam@plt>
  41e45c:	cbz	x0, 41e468 <tilde_expand@@Base+0xb8>
  41e460:	ldr	x1, [x0, #32]
  41e464:	cbnz	x1, 41e504 <tilde_expand@@Base+0x154>
  41e468:	ldr	x21, [sp, #32]
  41e46c:	mov	x19, #0x0                   	// #0
  41e470:	mov	x0, x19
  41e474:	ldp	x19, x20, [sp, #16]
  41e478:	ldp	x29, x30, [sp], #48
  41e47c:	ret
  41e480:	adrp	x20, 449000 <commands_started@@Base+0x170>
  41e484:	str	x21, [sp, #32]
  41e488:	mov	x1, #0x0                   	// #0
  41e48c:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e490:	ldr	w21, [x20, #2144]
  41e494:	add	x0, x0, #0x360
  41e498:	str	wzr, [x20, #2144]
  41e49c:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  41e4a0:	str	w21, [x20, #2144]
  41e4a4:	mov	x20, x0
  41e4a8:	ldrb	w1, [x0]
  41e4ac:	cbz	w1, 41e43c <tilde_expand@@Base+0x8c>
  41e4b0:	add	x2, x19, #0x1
  41e4b4:	mov	x1, x0
  41e4b8:	mov	w0, #0x2                   	// #2
  41e4bc:	bl	41a930 <concat@@Base>
  41e4c0:	bl	41abb0 <xstrdup@@Base>
  41e4c4:	mov	x19, x0
  41e4c8:	mov	x0, x20
  41e4cc:	bl	406b90 <free@plt>
  41e4d0:	ldr	x21, [sp, #32]
  41e4d4:	b	41e470 <tilde_expand@@Base+0xc0>
  41e4d8:	mov	w0, #0x2f                  	// #47
  41e4dc:	strb	w0, [x20]
  41e4e0:	mov	x0, x19
  41e4e4:	ldp	x19, x20, [sp, #16]
  41e4e8:	ldp	x29, x30, [sp], #48
  41e4ec:	ret
  41e4f0:	ldrb	w1, [x0]
  41e4f4:	cbz	w1, 41e450 <tilde_expand@@Base+0xa0>
  41e4f8:	add	x2, x19, #0x1
  41e4fc:	mov	x1, x0
  41e500:	b	41e508 <tilde_expand@@Base+0x158>
  41e504:	add	x2, x19, #0x1
  41e508:	mov	w0, #0x2                   	// #2
  41e50c:	bl	41a930 <concat@@Base>
  41e510:	ldp	x19, x20, [sp, #16]
  41e514:	ldr	x21, [sp, #32]
  41e518:	ldp	x29, x30, [sp], #48
  41e51c:	b	41abb0 <xstrdup@@Base>

000000000041e520 <construct_include_path@@Base>:
  41e520:	stp	x29, x30, [sp, #-208]!
  41e524:	mov	x29, sp
  41e528:	stp	x19, x20, [sp, #16]
  41e52c:	stp	x21, x22, [sp, #32]
  41e530:	stp	x23, x24, [sp, #48]
  41e534:	stp	x25, x26, [sp, #64]
  41e538:	cbz	x0, 41e768 <construct_include_path@@Base+0x248>
  41e53c:	mov	x24, x0
  41e540:	ldr	x0, [x0]
  41e544:	cbz	x0, 41e788 <construct_include_path@@Base+0x268>
  41e548:	sub	x2, x24, #0x28
  41e54c:	mov	x0, #0x5                   	// #5
  41e550:	add	x0, x0, #0x1
  41e554:	ldr	x1, [x2, x0, lsl #3]
  41e558:	cbnz	x1, 41e550 <construct_include_path@@Base+0x30>
  41e55c:	lsl	x0, x0, #3
  41e560:	bl	41ab28 <xmalloc@@Base>
  41e564:	mov	x21, #0x0                   	// #0
  41e568:	adrp	x1, 448000 <output_context@@Base+0x1208>
  41e56c:	mov	x20, x0
  41e570:	ldr	x23, [x24]
  41e574:	str	xzr, [x1, #3600]
  41e578:	add	x22, x1, #0xe10
  41e57c:	cbz	x23, 41e5f0 <construct_include_path@@Base+0xd0>
  41e580:	add	x19, sp, #0x50
  41e584:	mov	x21, #0x0                   	// #0
  41e588:	ldrb	w0, [x23]
  41e58c:	add	x24, x24, #0x8
  41e590:	mov	x25, #0x0                   	// #0
  41e594:	cmp	w0, #0x7e
  41e598:	b.ne	41e5b0 <construct_include_path@@Base+0x90>  // b.any
  41e59c:	b	41e6ac <construct_include_path@@Base+0x18c>
  41e5a0:	bl	406d70 <__errno_location@plt>
  41e5a4:	ldr	w1, [x0]
  41e5a8:	cmp	w1, #0x4
  41e5ac:	b.ne	41e5dc <construct_include_path@@Base+0xbc>  // b.any
  41e5b0:	mov	x2, x19
  41e5b4:	mov	x1, x23
  41e5b8:	mov	w0, #0x0                   	// #0
  41e5bc:	bl	406d90 <__xstat@plt>
  41e5c0:	cmn	w0, #0x1
  41e5c4:	b.eq	41e5a0 <construct_include_path@@Base+0x80>  // b.none
  41e5c8:	cbnz	w0, 41e5dc <construct_include_path@@Base+0xbc>
  41e5cc:	ldr	w0, [sp, #96]
  41e5d0:	and	w0, w0, #0xf000
  41e5d4:	cmp	w0, #0x4, lsl #12
  41e5d8:	b.eq	41e718 <construct_include_path@@Base+0x1f8>  // b.none
  41e5dc:	mov	x0, x25
  41e5e0:	bl	406b90 <free@plt>
  41e5e4:	ldr	x23, [x24]
  41e5e8:	cbnz	x23, 41e588 <construct_include_path@@Base+0x68>
  41e5ec:	add	x0, x20, x21, lsl #3
  41e5f0:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  41e5f4:	add	x1, x1, #0xd0
  41e5f8:	add	x23, x1, #0x10
  41e5fc:	add	x19, sp, #0x50
  41e600:	ldr	x1, [x1, #16]
  41e604:	cbnz	x1, 41e620 <construct_include_path@@Base+0x100>
  41e608:	b	41e654 <construct_include_path@@Base+0x134>
  41e60c:	bl	406d70 <__errno_location@plt>
  41e610:	ldr	w1, [x0]
  41e614:	cmp	w1, #0x4
  41e618:	b.ne	41e648 <construct_include_path@@Base+0x128>  // b.any
  41e61c:	ldr	x1, [x23]
  41e620:	mov	x2, x19
  41e624:	mov	w0, #0x0                   	// #0
  41e628:	bl	406d90 <__xstat@plt>
  41e62c:	cmn	w0, #0x1
  41e630:	b.eq	41e60c <construct_include_path@@Base+0xec>  // b.none
  41e634:	cbnz	w0, 41e648 <construct_include_path@@Base+0x128>
  41e638:	ldr	w0, [sp, #96]
  41e63c:	and	w0, w0, #0xf000
  41e640:	cmp	w0, #0x4, lsl #12
  41e644:	b.eq	41e6c4 <construct_include_path@@Base+0x1a4>  // b.none
  41e648:	ldr	x1, [x23, #8]!
  41e64c:	cbnz	x1, 41e620 <construct_include_path@@Base+0x100>
  41e650:	add	x0, x20, x21, lsl #3
  41e654:	str	xzr, [x0]
  41e658:	adrp	x21, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e65c:	mov	x19, x20
  41e660:	add	x21, x21, #0x370
  41e664:	ldr	x2, [x20]
  41e668:	cbz	x2, 41e690 <construct_include_path@@Base+0x170>
  41e66c:	nop
  41e670:	mov	x1, x21
  41e674:	mov	w5, #0x0                   	// #0
  41e678:	mov	w4, #0x3                   	// #3
  41e67c:	mov	w3, #0x0                   	// #0
  41e680:	mov	x0, #0x0                   	// #0
  41e684:	bl	4264b0 <do_variable_definition@@Base>
  41e688:	ldr	x2, [x19, #8]!
  41e68c:	cbnz	x2, 41e670 <construct_include_path@@Base+0x150>
  41e690:	str	x20, [x22, #8]
  41e694:	ldp	x19, x20, [sp, #16]
  41e698:	ldp	x21, x22, [sp, #32]
  41e69c:	ldp	x23, x24, [sp, #48]
  41e6a0:	ldp	x25, x26, [sp, #64]
  41e6a4:	ldp	x29, x30, [sp], #208
  41e6a8:	ret
  41e6ac:	mov	x0, x23
  41e6b0:	bl	41e3b0 <tilde_expand@@Base>
  41e6b4:	cmp	x0, #0x0
  41e6b8:	mov	x25, x0
  41e6bc:	csel	x23, x23, x0, eq  // eq = none
  41e6c0:	b	41e5b0 <construct_include_path@@Base+0x90>
  41e6c4:	ldr	x24, [x23]
  41e6c8:	mov	x0, x24
  41e6cc:	bl	406680 <strlen@plt>
  41e6d0:	mov	x1, x0
  41e6d4:	b	41e6e8 <construct_include_path@@Base+0x1c8>
  41e6d8:	ldrb	w2, [x24, x0]
  41e6dc:	cmp	w2, #0x2f
  41e6e0:	b.ne	41e6f0 <construct_include_path@@Base+0x1d0>  // b.any
  41e6e4:	mov	x1, x0
  41e6e8:	subs	x0, x1, #0x1
  41e6ec:	b.hi	41e6d8 <construct_include_path@@Base+0x1b8>  // b.pmore
  41e6f0:	ldr	x0, [x22]
  41e6f4:	cmp	x0, x1
  41e6f8:	b.cs	41e700 <construct_include_path@@Base+0x1e0>  // b.hs, b.nlast
  41e6fc:	str	x1, [x22]
  41e700:	add	x25, x21, #0x1
  41e704:	mov	x0, x24
  41e708:	bl	424a48 <strcache_add_len@@Base>
  41e70c:	str	x0, [x20, x21, lsl #3]
  41e710:	mov	x21, x25
  41e714:	b	41e648 <construct_include_path@@Base+0x128>
  41e718:	mov	x0, x23
  41e71c:	bl	406680 <strlen@plt>
  41e720:	mov	x1, x0
  41e724:	b	41e738 <construct_include_path@@Base+0x218>
  41e728:	ldrb	w2, [x23, x0]
  41e72c:	cmp	w2, #0x2f
  41e730:	b.ne	41e740 <construct_include_path@@Base+0x220>  // b.any
  41e734:	mov	x1, x0
  41e738:	subs	x0, x1, #0x1
  41e73c:	b.hi	41e728 <construct_include_path@@Base+0x208>  // b.pmore
  41e740:	ldr	x0, [x22]
  41e744:	cmp	x0, x1
  41e748:	b.cs	41e750 <construct_include_path@@Base+0x230>  // b.hs, b.nlast
  41e74c:	str	x1, [x22]
  41e750:	add	x26, x21, #0x1
  41e754:	mov	x0, x23
  41e758:	bl	424a48 <strcache_add_len@@Base>
  41e75c:	str	x0, [x20, x21, lsl #3]
  41e760:	mov	x21, x26
  41e764:	b	41e5dc <construct_include_path@@Base+0xbc>
  41e768:	mov	x0, #0x28                  	// #40
  41e76c:	bl	41ab28 <xmalloc@@Base>
  41e770:	adrp	x1, 448000 <output_context@@Base+0x1208>
  41e774:	mov	x20, x0
  41e778:	add	x22, x1, #0xe10
  41e77c:	mov	x21, #0x0                   	// #0
  41e780:	str	xzr, [x1, #3600]
  41e784:	b	41e5f0 <construct_include_path@@Base+0xd0>
  41e788:	mov	x0, #0x28                  	// #40
  41e78c:	b	41e560 <construct_include_path@@Base+0x40>

000000000041e790 <parse_file_seq@@Base>:
  41e790:	stp	x29, x30, [sp, #-304]!
  41e794:	mov	x29, sp
  41e798:	stp	x19, x20, [sp, #16]
  41e79c:	mov	w19, w4
  41e7a0:	orr	w4, w2, #0x1
  41e7a4:	tst	x19, #0x20
  41e7a8:	orr	w2, w2, #0x3
  41e7ac:	stp	x25, x26, [sp, #64]
  41e7b0:	mov	x26, x1
  41e7b4:	csel	w1, w2, w4, eq  // eq = none
  41e7b8:	cmp	x26, #0x10
  41e7bc:	str	x0, [sp, #184]
  41e7c0:	mov	x0, #0x10                  	// #16
  41e7c4:	csel	x26, x26, x0, cs  // cs = hs, nlast
  41e7c8:	and	w0, w19, #0x4
  41e7cc:	stp	x21, x22, [sp, #32]
  41e7d0:	stp	x23, x24, [sp, #48]
  41e7d4:	mov	x23, x3
  41e7d8:	stp	x27, x28, [sp, #80]
  41e7dc:	stp	w4, w1, [sp, #152]
  41e7e0:	and	w1, w19, #0x10
  41e7e4:	stp	w0, w1, [sp, #172]
  41e7e8:	str	xzr, [sp, #200]
  41e7ec:	tbz	w19, #2, 41ed7c <parse_file_seq@@Base+0x5ec>
  41e7f0:	ldr	x0, [sp, #184]
  41e7f4:	ldr	x20, [x0]
  41e7f8:	mov	x0, x20
  41e7fc:	bl	406680 <strlen@plt>
  41e800:	adrp	x1, 448000 <output_context@@Base+0x1208>
  41e804:	add	x1, x1, #0xe10
  41e808:	add	x21, x0, #0x1
  41e80c:	str	x1, [sp, #160]
  41e810:	ldr	x0, [x1, #24]
  41e814:	ldr	x1, [x1, #16]
  41e818:	str	x1, [sp, #104]
  41e81c:	cmp	x0, x21
  41e820:	b.cc	41ed58 <parse_file_seq@@Base+0x5c8>  // b.lo, b.ul, b.last
  41e824:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  41e828:	add	x0, x0, #0x430
  41e82c:	str	x0, [sp, #120]
  41e830:	adrp	x0, 428000 <jobserver_clear@@Base+0x20>
  41e834:	add	x0, x0, #0xf38
  41e838:	str	x0, [sp, #128]
  41e83c:	and	w0, w19, #0x2
  41e840:	and	w1, w19, #0x1
  41e844:	adrp	x24, 446000 <expanding_var@@Base+0x320>
  41e848:	add	x24, x24, #0x4c0
  41e84c:	str	w0, [sp, #136]
  41e850:	and	w0, w19, #0x8
  41e854:	add	x19, sp, #0xc8
  41e858:	str	w1, [sp, #168]
  41e85c:	str	w0, [sp, #180]
  41e860:	stp	xzr, xzr, [sp, #216]
  41e864:	ldrb	w0, [x20]
  41e868:	ldrh	w0, [x24, x0, lsl #1]
  41e86c:	tst	w0, #0x6
  41e870:	b.eq	41e888 <parse_file_seq@@Base+0xf8>  // b.none
  41e874:	nop
  41e878:	ldrb	w0, [x20, #1]!
  41e87c:	ldrh	w0, [x24, x0, lsl #1]
  41e880:	tst	w0, #0x6
  41e884:	b.ne	41e878 <parse_file_seq@@Base+0xe8>  // b.any
  41e888:	ldr	w1, [sp, #152]
  41e88c:	mov	x21, x20
  41e890:	tst	w1, w0
  41e894:	b.ne	41ed28 <parse_file_seq@@Base+0x598>  // b.any
  41e898:	ldr	w1, [sp, #156]
  41e89c:	mov	x0, x20
  41e8a0:	bl	41ce38 <out_of_memory@@Base+0xbd8>
  41e8a4:	mov	x20, x0
  41e8a8:	cbz	x0, 41eaf0 <parse_file_seq@@Base+0x360>
  41e8ac:	ldr	w0, [sp, #168]
  41e8b0:	cbz	w0, 41eb04 <parse_file_seq@@Base+0x374>
  41e8b4:	cmp	x20, x21
  41e8b8:	b.eq	41ead8 <parse_file_seq@@Base+0x348>  // b.none
  41e8bc:	sub	x25, x20, x21
  41e8c0:	mov	x1, x21
  41e8c4:	ldr	x21, [sp, #104]
  41e8c8:	mov	x2, x25
  41e8cc:	mov	x0, x21
  41e8d0:	bl	406640 <memcpy@plt>
  41e8d4:	strb	wzr, [x21, x25]
  41e8d8:	ldr	x0, [sp, #160]
  41e8dc:	ldr	x22, [x0, #16]
  41e8e0:	ldr	w0, [sp, #136]
  41e8e4:	cbnz	w0, 41e8f4 <parse_file_seq@@Base+0x164>
  41e8e8:	ldr	x0, [sp, #104]
  41e8ec:	cmp	x0, x22
  41e8f0:	b.eq	41ec50 <parse_file_seq@@Base+0x4c0>  // b.none
  41e8f4:	ldr	x0, [sp, #104]
  41e8f8:	cmp	x0, x22
  41e8fc:	b.ls	41e920 <parse_file_seq@@Base+0x190>  // b.plast
  41e900:	add	x0, x0, x25
  41e904:	ldurb	w1, [x0, #-1]
  41e908:	cmp	w1, #0x29
  41e90c:	b.eq	41ec24 <parse_file_seq@@Base+0x494>  // b.none
  41e910:	ldr	x2, [sp, #104]
  41e914:	mov	w1, #0x29                  	// #41
  41e918:	strb	w1, [x2, x25]
  41e91c:	strb	wzr, [x0, #1]
  41e920:	ldr	w0, [sp, #172]
  41e924:	cbnz	w0, 41ebe4 <parse_file_seq@@Base+0x454>
  41e928:	ldrb	w0, [x22]
  41e92c:	str	xzr, [sp, #112]
  41e930:	str	x22, [sp, #208]
  41e934:	cmp	w0, #0x7e
  41e938:	b.eq	41ec34 <parse_file_seq@@Base+0x4a4>  // b.none
  41e93c:	ldr	w0, [sp, #136]
  41e940:	cbz	w0, 41eb5c <parse_file_seq@@Base+0x3cc>
  41e944:	ldr	w0, [sp, #180]
  41e948:	cbnz	w0, 41eb88 <parse_file_seq@@Base+0x3f8>
  41e94c:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41e950:	mov	x0, x22
  41e954:	add	x1, x1, #0x380
  41e958:	bl	406990 <strpbrk@plt>
  41e95c:	cbz	x0, 41ebb4 <parse_file_seq@@Base+0x424>
  41e960:	add	x21, sp, #0xe8
  41e964:	mov	x0, x22
  41e968:	mov	x3, x21
  41e96c:	mov	x2, #0x0                   	// #0
  41e970:	mov	w1, #0x200                 	// #512
  41e974:	bl	406d00 <glob@plt>
  41e978:	cbz	w0, 41ebcc <parse_file_seq@@Base+0x43c>
  41e97c:	cmp	w0, #0x1
  41e980:	b.eq	41eda4 <parse_file_seq@@Base+0x614>  // b.none
  41e984:	add	x25, sp, #0xd0
  41e988:	mov	w27, #0x1                   	// #1
  41e98c:	str	w27, [sp, #140]
  41e990:	ldr	w28, [sp, #176]
  41e994:	mov	x21, #0x0                   	// #0
  41e998:	str	x20, [sp, #144]
  41e99c:	nop
  41e9a0:	ldr	x1, [sp, #224]
  41e9a4:	cbz	x1, 41ea64 <parse_file_seq@@Base+0x2d4>
  41e9a8:	ldr	x0, [x25, x21, lsl #3]
  41e9ac:	mov	x2, x26
  41e9b0:	bl	408f68 <ar_glob@@Base>
  41e9b4:	mov	x20, x0
  41e9b8:	cbz	x0, 41eab4 <parse_file_seq@@Base+0x324>
  41e9bc:	ldr	x0, [x19]
  41e9c0:	cbz	x0, 41ead0 <parse_file_seq@@Base+0x340>
  41e9c4:	str	x20, [x0]
  41e9c8:	cbnz	w28, 41ea20 <parse_file_seq@@Base+0x290>
  41e9cc:	cbz	x23, 41ea48 <parse_file_seq@@Base+0x2b8>
  41e9d0:	mov	x2, x22
  41e9d4:	mov	x1, x23
  41e9d8:	mov	x19, x20
  41e9dc:	mov	w0, #0x2                   	// #2
  41e9e0:	bl	41a930 <concat@@Base>
  41e9e4:	bl	424940 <strcache_add@@Base>
  41e9e8:	str	x0, [x20, #8]
  41e9ec:	ldr	x20, [x20]
  41e9f0:	cbnz	x20, 41e9d0 <parse_file_seq@@Base+0x240>
  41e9f4:	add	x21, x21, #0x1
  41e9f8:	cmp	w27, w21
  41e9fc:	b.gt	41e9a0 <parse_file_seq@@Base+0x210>
  41ea00:	ldr	w0, [sp, #140]
  41ea04:	ldr	x20, [sp, #144]
  41ea08:	cbnz	w0, 41ed18 <parse_file_seq@@Base+0x588>
  41ea0c:	ldr	x0, [sp, #216]
  41ea10:	bl	406b90 <free@plt>
  41ea14:	ldr	x0, [sp, #112]
  41ea18:	bl	406b90 <free@plt>
  41ea1c:	b	41e860 <parse_file_seq@@Base+0xd0>
  41ea20:	mov	x2, x22
  41ea24:	mov	x1, x23
  41ea28:	mov	x19, x20
  41ea2c:	mov	w0, #0x2                   	// #2
  41ea30:	bl	41a930 <concat@@Base>
  41ea34:	bl	41abb0 <xstrdup@@Base>
  41ea38:	str	x0, [x20, #8]
  41ea3c:	ldr	x20, [x20]
  41ea40:	cbnz	x20, 41ea20 <parse_file_seq@@Base+0x290>
  41ea44:	b	41e9f4 <parse_file_seq@@Base+0x264>
  41ea48:	mov	x19, x20
  41ea4c:	ldr	x20, [x20]
  41ea50:	cbz	x20, 41e9f4 <parse_file_seq@@Base+0x264>
  41ea54:	mov	x19, x20
  41ea58:	ldr	x20, [x20]
  41ea5c:	cbnz	x20, 41ea48 <parse_file_seq@@Base+0x2b8>
  41ea60:	b	41e9f4 <parse_file_seq@@Base+0x264>
  41ea64:	ldr	x2, [x25, x21, lsl #3]
  41ea68:	mov	x1, x23
  41ea6c:	mov	w0, #0x2                   	// #2
  41ea70:	bl	41a930 <concat@@Base>
  41ea74:	mov	x20, x0
  41ea78:	mov	x0, x26
  41ea7c:	bl	41ab50 <xcalloc@@Base>
  41ea80:	str	x0, [x19]
  41ea84:	mov	x0, x20
  41ea88:	cbnz	w28, 41eaac <parse_file_seq@@Base+0x31c>
  41ea8c:	bl	424940 <strcache_add@@Base>
  41ea90:	ldr	x1, [x19]
  41ea94:	add	x21, x21, #0x1
  41ea98:	cmp	w27, w21
  41ea9c:	mov	x19, x1
  41eaa0:	str	x0, [x1, #8]
  41eaa4:	b.gt	41e9a0 <parse_file_seq@@Base+0x210>
  41eaa8:	b	41ea00 <parse_file_seq@@Base+0x270>
  41eaac:	bl	41abb0 <xstrdup@@Base>
  41eab0:	b	41ea90 <parse_file_seq@@Base+0x300>
  41eab4:	ldp	x5, x3, [sp, #120]
  41eab8:	mov	x1, x23
  41eabc:	ldr	x2, [x25, x21, lsl #3]
  41eac0:	mov	w0, #0x5                   	// #5
  41eac4:	ldr	x4, [sp, #224]
  41eac8:	bl	41a930 <concat@@Base>
  41eacc:	b	41ea74 <parse_file_seq@@Base+0x2e4>
  41ead0:	str	x20, [x19]
  41ead4:	b	41e9c8 <parse_file_seq@@Base+0x238>
  41ead8:	ldr	x1, [sp, #104]
  41eadc:	mov	w0, #0x2f2e                	// #12078
  41eae0:	mov	x25, #0x2                   	// #2
  41eae4:	strh	w0, [x1]
  41eae8:	strb	wzr, [x1, #2]
  41eaec:	b	41e8d8 <parse_file_seq@@Base+0x148>
  41eaf0:	mov	x0, x21
  41eaf4:	bl	406680 <strlen@plt>
  41eaf8:	add	x20, x21, x0
  41eafc:	ldr	w0, [sp, #168]
  41eb00:	cbnz	w0, 41e8b4 <parse_file_seq@@Base+0x124>
  41eb04:	sub	x0, x20, x21
  41eb08:	cmp	x0, #0x2
  41eb0c:	b.le	41e8b4 <parse_file_seq@@Base+0x124>
  41eb10:	ldrb	w0, [x21]
  41eb14:	nop
  41eb18:	cmp	w0, #0x2e
  41eb1c:	b.ne	41e8b4 <parse_file_seq@@Base+0x124>  // b.any
  41eb20:	ldrb	w0, [x21, #1]
  41eb24:	cmp	w0, #0x2f
  41eb28:	b.ne	41e8b4 <parse_file_seq@@Base+0x124>  // b.any
  41eb2c:	ldrb	w0, [x21, #2]
  41eb30:	add	x21, x21, #0x2
  41eb34:	cmp	w0, #0x2f
  41eb38:	b.ne	41eb4c <parse_file_seq@@Base+0x3bc>  // b.any
  41eb3c:	nop
  41eb40:	ldrb	w0, [x21, #1]!
  41eb44:	cmp	w0, #0x2f
  41eb48:	b.eq	41eb40 <parse_file_seq@@Base+0x3b0>  // b.none
  41eb4c:	sub	x1, x20, x21
  41eb50:	cmp	x1, #0x2
  41eb54:	b.gt	41eb18 <parse_file_seq@@Base+0x388>
  41eb58:	b	41e8b4 <parse_file_seq@@Base+0x124>
  41eb5c:	mov	x0, x22
  41eb60:	bl	408bd0 <ar_name@@Base>
  41eb64:	cbz	w0, 41e944 <parse_file_seq@@Base+0x1b4>
  41eb68:	mov	x0, x22
  41eb6c:	add	x2, sp, #0xe0
  41eb70:	add	x1, sp, #0xd8
  41eb74:	bl	408c80 <ar_parse_name@@Base>
  41eb78:	ldr	w0, [sp, #180]
  41eb7c:	ldr	x22, [sp, #216]
  41eb80:	str	x22, [sp, #208]
  41eb84:	cbz	w0, 41e94c <parse_file_seq@@Base+0x1bc>
  41eb88:	add	x21, sp, #0xe8
  41eb8c:	mov	x0, x22
  41eb90:	mov	x3, x21
  41eb94:	mov	x2, #0x0                   	// #0
  41eb98:	mov	w1, #0x200                 	// #512
  41eb9c:	bl	406d00 <glob@plt>
  41eba0:	cmp	w0, #0x3
  41eba4:	b.ne	41ebc4 <parse_file_seq@@Base+0x434>  // b.any
  41eba8:	mov	x0, x21
  41ebac:	bl	406bc0 <globfree@plt>
  41ebb0:	b	41ea0c <parse_file_seq@@Base+0x27c>
  41ebb4:	add	x25, sp, #0xd0
  41ebb8:	mov	w27, #0x1                   	// #1
  41ebbc:	str	wzr, [sp, #140]
  41ebc0:	b	41e990 <parse_file_seq@@Base+0x200>
  41ebc4:	b.gt	41e984 <parse_file_seq@@Base+0x1f4>
  41ebc8:	cbnz	w0, 41e97c <parse_file_seq@@Base+0x1ec>
  41ebcc:	ldp	x27, x25, [sp, #232]
  41ebd0:	cmp	w27, #0x0
  41ebd4:	b.le	41eba8 <parse_file_seq@@Base+0x418>
  41ebd8:	mov	w0, #0x1                   	// #1
  41ebdc:	str	w0, [sp, #140]
  41ebe0:	b	41e990 <parse_file_seq@@Base+0x200>
  41ebe4:	mov	x2, x22
  41ebe8:	mov	x1, x23
  41ebec:	mov	w0, #0x2                   	// #2
  41ebf0:	bl	41a930 <concat@@Base>
  41ebf4:	mov	x21, x0
  41ebf8:	mov	x0, x26
  41ebfc:	bl	41ab50 <xcalloc@@Base>
  41ec00:	str	x0, [x19]
  41ec04:	ldr	w0, [sp, #176]
  41ec08:	cbnz	w0, 41ed0c <parse_file_seq@@Base+0x57c>
  41ec0c:	mov	x0, x21
  41ec10:	bl	424940 <strcache_add@@Base>
  41ec14:	ldr	x1, [x19]
  41ec18:	mov	x19, x1
  41ec1c:	str	x0, [x1, #8]
  41ec20:	b	41e860 <parse_file_seq@@Base+0xd0>
  41ec24:	str	x22, [sp, #104]
  41ec28:	cmp	x25, #0x1
  41ec2c:	b.ne	41e920 <parse_file_seq@@Base+0x190>  // b.any
  41ec30:	b	41e860 <parse_file_seq@@Base+0xd0>
  41ec34:	mov	x0, x22
  41ec38:	bl	41e3b0 <tilde_expand@@Base>
  41ec3c:	str	x0, [sp, #112]
  41ec40:	cbz	x0, 41e93c <parse_file_seq@@Base+0x1ac>
  41ec44:	mov	x22, x0
  41ec48:	str	x0, [sp, #208]
  41ec4c:	b	41e93c <parse_file_seq@@Base+0x1ac>
  41ec50:	mov	x2, x0
  41ec54:	ldrb	w0, [x0]
  41ec58:	cmp	w0, #0x28
  41ec5c:	b.eq	41e920 <parse_file_seq@@Base+0x190>  // b.none
  41ec60:	add	x0, x2, x25
  41ec64:	ldurb	w0, [x0, #-1]
  41ec68:	cmp	w0, #0x29
  41ec6c:	b.eq	41e920 <parse_file_seq@@Base+0x190>  // b.none
  41ec70:	mov	x0, x2
  41ec74:	mov	w1, #0x28                  	// #40
  41ec78:	bl	406bb0 <strchr@plt>
  41ec7c:	mov	x4, x0
  41ec80:	cbz	x0, 41e920 <parse_file_seq@@Base+0x190>
  41ec84:	mov	x2, x20
  41ec88:	ldr	w5, [sp, #156]
  41ec8c:	ldrb	w0, [x2]
  41ec90:	ldrh	w0, [x24, x0, lsl #1]
  41ec94:	tst	w0, #0x6
  41ec98:	b.eq	41ecfc <parse_file_seq@@Base+0x56c>  // b.none
  41ec9c:	nop
  41eca0:	mov	x0, x2
  41eca4:	nop
  41eca8:	ldrb	w1, [x0, #1]!
  41ecac:	ldrh	w3, [x24, w1, sxtw #1]
  41ecb0:	tst	w3, #0x6
  41ecb4:	b.ne	41eca8 <parse_file_seq@@Base+0x518>  // b.any
  41ecb8:	tst	w3, w5
  41ecbc:	b.ne	41ecd0 <parse_file_seq@@Base+0x540>  // b.any
  41ecc0:	ldrb	w1, [x0, #1]!
  41ecc4:	ldrh	w3, [x24, w1, sxtw #1]
  41ecc8:	tst	w3, w5
  41eccc:	b.eq	41ecc0 <parse_file_seq@@Base+0x530>  // b.none
  41ecd0:	cmp	x2, x0
  41ecd4:	b.eq	41ed50 <parse_file_seq@@Base+0x5c0>  // b.none
  41ecd8:	ldurb	w2, [x0, #-1]
  41ecdc:	cmp	w2, #0x29
  41ece0:	b.eq	41ed88 <parse_file_seq@@Base+0x5f8>  // b.none
  41ece4:	cbz	w1, 41ed50 <parse_file_seq@@Base+0x5c0>
  41ece8:	mov	x2, x0
  41ecec:	ldrb	w0, [x2]
  41ecf0:	ldrh	w0, [x24, x0, lsl #1]
  41ecf4:	tst	w0, #0x6
  41ecf8:	b.ne	41eca0 <parse_file_seq@@Base+0x510>  // b.any
  41ecfc:	tst	w0, w5
  41ed00:	b.ne	41ed50 <parse_file_seq@@Base+0x5c0>  // b.any
  41ed04:	mov	x0, x2
  41ed08:	b	41ecc0 <parse_file_seq@@Base+0x530>
  41ed0c:	mov	x0, x21
  41ed10:	bl	41abb0 <xstrdup@@Base>
  41ed14:	b	41ec14 <parse_file_seq@@Base+0x484>
  41ed18:	add	x21, sp, #0xe8
  41ed1c:	mov	x0, x21
  41ed20:	bl	406bc0 <globfree@plt>
  41ed24:	b	41ea0c <parse_file_seq@@Base+0x27c>
  41ed28:	ldr	x0, [sp, #184]
  41ed2c:	ldp	x21, x22, [sp, #32]
  41ed30:	ldp	x23, x24, [sp, #48]
  41ed34:	ldp	x25, x26, [sp, #64]
  41ed38:	ldp	x27, x28, [sp, #80]
  41ed3c:	str	x20, [x0]
  41ed40:	ldp	x19, x20, [sp, #16]
  41ed44:	ldr	x0, [sp, #200]
  41ed48:	ldp	x29, x30, [sp], #304
  41ed4c:	ret
  41ed50:	str	x22, [sp, #104]
  41ed54:	b	41e920 <parse_file_seq@@Base+0x190>
  41ed58:	mov	x0, x1
  41ed5c:	mov	x1, x21
  41ed60:	bl	41ab78 <xrealloc@@Base>
  41ed64:	str	x0, [sp, #104]
  41ed68:	ldr	x1, [sp, #184]
  41ed6c:	ldr	x20, [x1]
  41ed70:	ldr	x1, [sp, #160]
  41ed74:	stp	x0, x21, [x1, #16]
  41ed78:	b	41e824 <parse_file_seq@@Base+0x94>
  41ed7c:	add	x0, sp, #0xe8
  41ed80:	bl	40bb08 <dir_setup_glob@@Base>
  41ed84:	b	41e7f0 <parse_file_seq@@Base+0x60>
  41ed88:	ldr	x0, [sp, #104]
  41ed8c:	add	x4, x4, #0x1
  41ed90:	str	x4, [sp, #104]
  41ed94:	sub	x0, x4, x0
  41ed98:	subs	x25, x25, x0
  41ed9c:	b.eq	41e860 <parse_file_seq@@Base+0xd0>  // b.none
  41eda0:	b	41e8f4 <parse_file_seq@@Base+0x164>
  41eda4:	bl	41c260 <out_of_memory@@Base>
  41eda8:	sub	sp, sp, #0x1a0
  41edac:	stp	x29, x30, [sp, #32]
  41edb0:	add	x29, sp, #0x20
  41edb4:	stp	x27, x28, [sp, #112]
  41edb8:	mov	x28, x0
  41edbc:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41edc0:	str	w1, [sp, #276]
  41edc4:	add	x1, x28, #0x28
  41edc8:	str	x1, [sp, #176]
  41edcc:	ldr	x1, [x28, #40]
  41edd0:	stp	x19, x20, [sp, #48]
  41edd4:	ldrb	w0, [x0, #180]
  41edd8:	stp	x21, x22, [sp, #64]
  41eddc:	mov	w19, #0x0                   	// #0
  41ede0:	mov	x22, #0x0                   	// #0
  41ede4:	stp	x23, x24, [sp, #80]
  41ede8:	mov	x23, #0x0                   	// #0
  41edec:	stp	x25, x26, [sp, #96]
  41edf0:	mov	x25, #0x0                   	// #0
  41edf4:	str	w0, [sp, #240]
  41edf8:	mov	x0, #0xc8                  	// #200
  41edfc:	str	x1, [sp, #320]
  41ee00:	bl	41ab28 <xmalloc@@Base>
  41ee04:	str	x0, [sp, #184]
  41ee08:	mov	w0, #0x1                   	// #1
  41ee0c:	str	wzr, [sp, #136]
  41ee10:	str	xzr, [sp, #144]
  41ee14:	stp	xzr, xzr, [sp, #160]
  41ee18:	str	wzr, [sp, #200]
  41ee1c:	str	wzr, [sp, #216]
  41ee20:	str	w0, [sp, #220]
  41ee24:	str	xzr, [sp, #232]
  41ee28:	str	w0, [sp, #244]
  41ee2c:	mov	x0, #0xc8                  	// #200
  41ee30:	str	x0, [sp, #208]
  41ee34:	str	xzr, [sp, #248]
  41ee38:	str	wzr, [sp, #272]
  41ee3c:	nop
  41ee40:	ldr	x1, [x28, #48]
  41ee44:	mov	x0, x28
  41ee48:	ldr	x2, [sp, #144]
  41ee4c:	add	x1, x1, x2
  41ee50:	str	x1, [x28, #48]
  41ee54:	bl	41d180 <out_of_memory@@Base+0xf20>
  41ee58:	str	x0, [sp, #144]
  41ee5c:	tbnz	x0, #63, 41ef08 <parse_file_seq@@Base+0x778>
  41ee60:	ldr	x27, [x28]
  41ee64:	ldr	x0, [x28, #48]
  41ee68:	ldrb	w21, [x27]
  41ee6c:	cmp	x0, #0x1
  41ee70:	b.eq	41ef90 <parse_file_seq@@Base+0x800>  // b.none
  41ee74:	cbz	w21, 41ee40 <parse_file_seq@@Base+0x6b0>
  41ee78:	mov	x0, x27
  41ee7c:	bl	406680 <strlen@plt>
  41ee80:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  41ee84:	mov	x20, x0
  41ee88:	ldrb	w1, [x1, #180]
  41ee8c:	cmp	w1, w21
  41ee90:	b.ne	41eff0 <parse_file_seq@@Base+0x860>  // b.any
  41ee94:	cbnz	w19, 41ee40 <parse_file_seq@@Base+0x6b0>
  41ee98:	cbz	x25, 41eff0 <parse_file_seq@@Base+0x860>
  41ee9c:	ldr	w0, [sp, #216]
  41eea0:	cbnz	w0, 41ee40 <parse_file_seq@@Base+0x6b0>
  41eea4:	cbnz	x22, 41eeb0 <parse_file_seq@@Base+0x720>
  41eea8:	ldr	w0, [x28, #48]
  41eeac:	str	w0, [sp, #220]
  41eeb0:	ldr	x0, [sp, #208]
  41eeb4:	add	x19, x22, x20
  41eeb8:	cmp	x19, x0
  41eebc:	b.hi	41f444 <parse_file_seq@@Base+0xcb4>  // b.pmore
  41eec0:	sub	x2, x20, #0x1
  41eec4:	add	x1, x27, #0x1
  41eec8:	ldr	x20, [sp, #184]
  41eecc:	add	x0, x20, x22
  41eed0:	bl	406640 <memcpy@plt>
  41eed4:	add	x0, x20, x19
  41eed8:	mov	w1, #0xa                   	// #10
  41eedc:	ldr	x2, [sp, #144]
  41eee0:	mov	x22, x19
  41eee4:	sturb	w1, [x0, #-1]
  41eee8:	mov	x0, x28
  41eeec:	mov	w19, #0x0                   	// #0
  41eef0:	ldr	x1, [x28, #48]
  41eef4:	add	x1, x1, x2
  41eef8:	str	x1, [x28, #48]
  41eefc:	bl	41d180 <out_of_memory@@Base+0xf20>
  41ef00:	str	x0, [sp, #144]
  41ef04:	tbz	x0, #63, 41ee60 <parse_file_seq@@Base+0x6d0>
  41ef08:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41ef0c:	ldr	x0, [x0, #208]
  41ef10:	ldr	w0, [x0]
  41ef14:	cbnz	w0, 4205c0 <parse_file_seq@@Base+0x1e30>
  41ef18:	cbz	x25, 41ef60 <parse_file_seq@@Base+0x7d0>
  41ef1c:	ldr	w1, [sp, #272]
  41ef20:	add	x0, sp, #0x140
  41ef24:	str	w1, [sp]
  41ef28:	mov	x7, x22
  41ef2c:	ldrb	w1, [sp, #240]
  41ef30:	mov	x2, x23
  41ef34:	ldr	w8, [sp, #244]
  41ef38:	ldr	w5, [sp, #220]
  41ef3c:	strb	w1, [sp, #8]
  41ef40:	ldr	w1, [sp, #136]
  41ef44:	ldr	x6, [sp, #184]
  41ef48:	str	x0, [sp, #16]
  41ef4c:	ldr	x4, [sp, #232]
  41ef50:	mov	x0, x25
  41ef54:	ldr	x3, [sp, #248]
  41ef58:	stp	x8, xzr, [sp, #328]
  41ef5c:	bl	41d9c0 <find_percent_cached@@Base+0x1e0>
  41ef60:	ldr	x0, [sp, #160]
  41ef64:	bl	406b90 <free@plt>
  41ef68:	ldr	x0, [sp, #184]
  41ef6c:	bl	406b90 <free@plt>
  41ef70:	ldp	x29, x30, [sp, #32]
  41ef74:	ldp	x19, x20, [sp, #48]
  41ef78:	ldp	x21, x22, [sp, #64]
  41ef7c:	ldp	x23, x24, [sp, #80]
  41ef80:	ldp	x25, x26, [sp, #96]
  41ef84:	ldp	x27, x28, [sp, #112]
  41ef88:	add	sp, sp, #0x1a0
  41ef8c:	ret
  41ef90:	cmp	w21, #0xef
  41ef94:	b.ne	41ee74 <parse_file_seq@@Base+0x6e4>  // b.any
  41ef98:	ldrb	w0, [x27, #1]
  41ef9c:	cmp	w0, #0xbb
  41efa0:	b.ne	41ee78 <parse_file_seq@@Base+0x6e8>  // b.any
  41efa4:	ldrb	w0, [x27, #2]
  41efa8:	cmp	w0, #0xbf
  41efac:	b.ne	41ee78 <parse_file_seq@@Base+0x6e8>  // b.any
  41efb0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41efb4:	add	x20, x27, #0x3
  41efb8:	ldr	w0, [x0, #1152]
  41efbc:	tbz	w0, #0, 41f568 <parse_file_seq@@Base+0xdd8>
  41efc0:	ldr	x0, [x28, #40]
  41efc4:	cbz	x0, 41f550 <parse_file_seq@@Base+0xdc0>
  41efc8:	mov	w2, #0x5                   	// #5
  41efcc:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41efd0:	mov	x0, #0x0                   	// #0
  41efd4:	add	x1, x1, #0x388
  41efd8:	bl	406cd0 <dcgettext@plt>
  41efdc:	ldr	x1, [x28, #40]
  41efe0:	bl	406d60 <printf@plt>
  41efe4:	ldrb	w21, [x27, #3]
  41efe8:	mov	x27, x20
  41efec:	b	41ee74 <parse_file_seq@@Base+0x6e4>
  41eff0:	ldr	x0, [sp, #168]
  41eff4:	add	x20, x20, #0x1
  41eff8:	cmp	x20, x0
  41effc:	b.hi	41f418 <parse_file_seq@@Base+0xc88>  // b.pmore
  41f000:	ldr	x20, [sp, #160]
  41f004:	mov	x1, x27
  41f008:	mov	x0, x20
  41f00c:	bl	406c30 <strcpy@plt>
  41f010:	mov	x0, x20
  41f014:	bl	41a6b8 <collapse_continuations@@Base>
  41f018:	mov	x0, x20
  41f01c:	bl	41d5d0 <out_of_memory@@Base+0x1370>
  41f020:	cbz	x0, 41f028 <parse_file_seq@@Base+0x898>
  41f024:	strb	wzr, [x0]
  41f028:	ldr	x1, [sp, #160]
  41f02c:	adrp	x24, 446000 <expanding_var@@Base+0x320>
  41f030:	add	x24, x24, #0x4c0
  41f034:	ldrb	w0, [x1]
  41f038:	ldrh	w0, [x24, x0, lsl #1]
  41f03c:	tst	w0, #0x6
  41f040:	mov	x0, x1
  41f044:	b.eq	41f058 <parse_file_seq@@Base+0x8c8>  // b.none
  41f048:	ldrb	w1, [x0, #1]!
  41f04c:	ldrh	w1, [x24, x1, lsl #1]
  41f050:	tst	w1, #0x6
  41f054:	b.ne	41f048 <parse_file_seq@@Base+0x8b8>  // b.any
  41f058:	add	x1, sp, #0x120
  41f05c:	bl	41d400 <out_of_memory@@Base+0x11a0>
  41f060:	ldrb	w1, [sp, #288]
  41f064:	mov	x21, x0
  41f068:	tbz	w1, #0, 41f39c <parse_file_seq@@Base+0xc0c>
  41f06c:	tst	x1, #0x10
  41f070:	mov	w2, #0x5                   	// #5
  41f074:	mov	w0, #0x2                   	// #2
  41f078:	csel	w0, w2, w0, ne  // ne = any
  41f07c:	str	w0, [sp, #192]
  41f080:	ldr	w0, [sp, #216]
  41f084:	cbnz	w0, 41f430 <parse_file_seq@@Base+0xca0>
  41f088:	cbz	x25, 41f0d4 <parse_file_seq@@Base+0x944>
  41f08c:	ldr	w1, [sp, #272]
  41f090:	add	x0, sp, #0x140
  41f094:	ldr	w3, [sp, #244]
  41f098:	mov	x7, x22
  41f09c:	str	w1, [sp]
  41f0a0:	mov	x2, x23
  41f0a4:	ldrb	w1, [sp, #240]
  41f0a8:	ldr	w5, [sp, #220]
  41f0ac:	strb	w1, [sp, #8]
  41f0b0:	ldr	w1, [sp, #136]
  41f0b4:	stp	x3, xzr, [sp, #328]
  41f0b8:	ldr	x6, [sp, #184]
  41f0bc:	str	x0, [sp, #16]
  41f0c0:	ldr	x4, [sp, #232]
  41f0c4:	mov	x0, x25
  41f0c8:	ldr	x3, [sp, #248]
  41f0cc:	bl	41d9c0 <find_percent_cached@@Base+0x1e0>
  41f0d0:	ldrb	w1, [sp, #288]
  41f0d4:	tbnz	w1, #2, 41f47c <parse_file_seq@@Base+0xcec>
  41f0d8:	tbz	w1, #1, 41f460 <parse_file_seq@@Base+0xcd0>
  41f0dc:	mov	x0, #0x64                  	// #100
  41f0e0:	bl	41ab28 <xmalloc@@Base>
  41f0e4:	ldr	x4, [sp, #176]
  41f0e8:	mov	x20, x0
  41f0ec:	add	x0, sp, #0x200
  41f0f0:	add	x1, sp, #0x170
  41f0f4:	ldp	x2, x3, [x4]
  41f0f8:	stp	x2, x3, [x0, #-168]
  41f0fc:	mov	x0, x21
  41f100:	ldr	x2, [x4, #16]
  41f104:	str	x2, [sp, #360]
  41f108:	bl	426b40 <parse_variable_definition@@Base>
  41f10c:	add	x1, sp, #0x158
  41f110:	str	x1, [sp, #256]
  41f114:	cbz	x0, 41f574 <parse_file_seq@@Base+0xde4>
  41f118:	ldr	x0, [sp, #376]
  41f11c:	ldrb	w0, [x0]
  41f120:	cbnz	w0, 41f588 <parse_file_seq@@Base+0xdf8>
  41f124:	ldr	w0, [sp, #408]
  41f128:	ldr	x1, [sp, #368]
  41f12c:	strb	wzr, [x1, x0]
  41f130:	mov	x1, #0x0                   	// #0
  41f134:	mov	x0, x21
  41f138:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  41f13c:	str	x0, [sp, #264]
  41f140:	bl	41ac48 <next_token@@Base>
  41f144:	ldrb	w1, [x0]
  41f148:	str	x0, [sp, #224]
  41f14c:	cbz	w1, 4205b0 <parse_file_seq@@Base+0x1e20>
  41f150:	bl	406680 <strlen@plt>
  41f154:	sub	x0, x0, #0x1
  41f158:	ldr	x1, [sp, #224]
  41f15c:	add	x0, x1, x0
  41f160:	mov	x2, x1
  41f164:	cmp	x1, x0
  41f168:	b.cc	41f17c <parse_file_seq@@Base+0x9ec>  // b.lo, b.ul, b.last
  41f16c:	b	41f188 <parse_file_seq@@Base+0x9f8>
  41f170:	sub	x0, x0, #0x1
  41f174:	cmp	x2, x0
  41f178:	b.eq	41f188 <parse_file_seq@@Base+0x9f8>  // b.none
  41f17c:	ldrb	w1, [x0]
  41f180:	ldrh	w1, [x24, x1, lsl #1]
  41f184:	tbnz	w1, #1, 41f170 <parse_file_seq@@Base+0x9e0>
  41f188:	adrp	x27, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41f18c:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41f190:	add	x27, x27, #0xd8
  41f194:	add	x1, x1, #0x448
  41f198:	mov	x22, #0x0                   	// #0
  41f19c:	mov	x23, #0x64                  	// #100
  41f1a0:	strb	wzr, [x0, #1]
  41f1a4:	mov	w0, #0x1                   	// #1
  41f1a8:	str	w0, [sp, #136]
  41f1ac:	str	x1, [sp, #152]
  41f1b0:	b	41f1d0 <parse_file_seq@@Base+0xa40>
  41f1b4:	add	x0, x20, x22
  41f1b8:	mov	x2, x21
  41f1bc:	mov	x1, x19
  41f1c0:	mov	x22, x25
  41f1c4:	bl	406640 <memcpy@plt>
  41f1c8:	mov	w0, #0xa                   	// #10
  41f1cc:	strb	w0, [x20, x26]
  41f1d0:	mov	x0, x28
  41f1d4:	bl	41d180 <out_of_memory@@Base+0xf20>
  41f1d8:	tbnz	x0, #63, 41f7c0 <parse_file_seq@@Base+0x1030>
  41f1dc:	ldr	x1, [x28, #48]
  41f1e0:	ldr	x19, [x28]
  41f1e4:	add	x0, x1, x0
  41f1e8:	str	x0, [x28, #48]
  41f1ec:	mov	x0, x19
  41f1f0:	bl	41a6b8 <collapse_continuations@@Base>
  41f1f4:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41f1f8:	add	x0, x0, #0xb4
  41f1fc:	ldrb	w1, [x19]
  41f200:	ldrb	w0, [x0]
  41f204:	cmp	w1, w0
  41f208:	b.eq	41f258 <parse_file_seq@@Base+0xac8>  // b.none
  41f20c:	mov	x0, x19
  41f210:	bl	41ac48 <next_token@@Base>
  41f214:	mov	x21, x0
  41f218:	bl	406680 <strlen@plt>
  41f21c:	cmp	x0, #0x6
  41f220:	b.eq	41f28c <parse_file_seq@@Base+0xafc>  // b.none
  41f224:	b.ls	41f2b0 <parse_file_seq@@Base+0xb20>  // b.plast
  41f228:	ldrb	w0, [x21, #6]
  41f22c:	ldrh	w0, [x24, x0, lsl #1]
  41f230:	tbnz	w0, #1, 41f28c <parse_file_seq@@Base+0xafc>
  41f234:	ldrb	w0, [x21, #5]
  41f238:	ldrh	w0, [x24, x0, lsl #1]
  41f23c:	tbz	w0, #1, 41f258 <parse_file_seq@@Base+0xac8>
  41f240:	ldr	x1, [sp, #152]
  41f244:	mov	x0, x21
  41f248:	mov	x2, #0x5                   	// #5
  41f24c:	bl	406930 <strncmp@plt>
  41f250:	cbz	w0, 41f2c4 <parse_file_seq@@Base+0xb34>
  41f254:	nop
  41f258:	mov	x0, x19
  41f25c:	bl	406680 <strlen@plt>
  41f260:	add	x26, x0, x22
  41f264:	mov	x21, x0
  41f268:	add	x25, x26, #0x1
  41f26c:	cmp	x25, x23
  41f270:	b.ls	41f1b4 <parse_file_seq@@Base+0xa24>  // b.plast
  41f274:	lsl	x23, x26, #1
  41f278:	mov	x0, x20
  41f27c:	add	x1, x23, #0x1
  41f280:	bl	41ab78 <xrealloc@@Base>
  41f284:	mov	x20, x0
  41f288:	b	41f1b4 <parse_file_seq@@Base+0xa24>
  41f28c:	mov	x1, x27
  41f290:	mov	x0, x21
  41f294:	mov	x2, #0x6                   	// #6
  41f298:	bl	406930 <strncmp@plt>
  41f29c:	cbnz	w0, 41f234 <parse_file_seq@@Base+0xaa4>
  41f2a0:	ldr	w0, [sp, #136]
  41f2a4:	add	w0, w0, #0x1
  41f2a8:	str	w0, [sp, #136]
  41f2ac:	b	41f258 <parse_file_seq@@Base+0xac8>
  41f2b0:	cmp	x0, #0x5
  41f2b4:	b.eq	41f240 <parse_file_seq@@Base+0xab0>  // b.none
  41f2b8:	cmp	x0, #0x6
  41f2bc:	b.ne	41f258 <parse_file_seq@@Base+0xac8>  // b.any
  41f2c0:	b	41f234 <parse_file_seq@@Base+0xaa4>
  41f2c4:	add	x21, x21, #0x5
  41f2c8:	mov	x0, x21
  41f2cc:	bl	41d5d0 <out_of_memory@@Base+0x1370>
  41f2d0:	cbz	x0, 41f2d8 <parse_file_seq@@Base+0xb48>
  41f2d4:	strb	wzr, [x0]
  41f2d8:	mov	x0, x21
  41f2dc:	bl	41ac48 <next_token@@Base>
  41f2e0:	ldrb	w0, [x0]
  41f2e4:	cbnz	w0, 41f374 <parse_file_seq@@Base+0xbe4>
  41f2e8:	ldr	w0, [sp, #136]
  41f2ec:	subs	w0, w0, #0x1
  41f2f0:	str	w0, [sp, #136]
  41f2f4:	b.ne	41f258 <parse_file_seq@@Base+0xac8>  // b.any
  41f2f8:	cbnz	x22, 41f544 <parse_file_seq@@Base+0xdb4>
  41f2fc:	strb	wzr, [x20]
  41f300:	ldr	w3, [sp, #192]
  41f304:	mov	x2, x20
  41f308:	ldr	x1, [sp, #224]
  41f30c:	mov	w5, #0x0                   	// #0
  41f310:	ldr	x0, [sp, #256]
  41f314:	ldrh	w4, [sp, #414]
  41f318:	ubfx	x4, x4, #7, #3
  41f31c:	bl	4264b0 <do_variable_definition@@Base>
  41f320:	mov	x1, x0
  41f324:	mov	x0, x20
  41f328:	mov	x20, x1
  41f32c:	bl	406b90 <free@plt>
  41f330:	ldr	x0, [sp, #264]
  41f334:	bl	406b90 <free@plt>
  41f338:	ldrb	w0, [sp, #288]
  41f33c:	tbz	w0, #3, 41f34c <parse_file_seq@@Base+0xbbc>
  41f340:	ldrb	w1, [x20, #47]
  41f344:	and	w1, w1, #0xffffff9f
  41f348:	strb	w1, [x20, #47]
  41f34c:	tbz	w0, #5, 41f508 <parse_file_seq@@Base+0xd78>
  41f350:	ldrb	w0, [x20, #44]
  41f354:	mov	w19, #0x0                   	// #0
  41f358:	mov	x23, #0x0                   	// #0
  41f35c:	mov	x25, #0x0                   	// #0
  41f360:	orr	w0, w0, #0xffffff80
  41f364:	mov	x22, #0x0                   	// #0
  41f368:	strb	w0, [x20, #44]
  41f36c:	str	wzr, [sp, #136]
  41f370:	b	41ee40 <parse_file_seq@@Base+0x6b0>
  41f374:	mov	w2, #0x5                   	// #5
  41f378:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41f37c:	mov	x0, #0x0                   	// #0
  41f380:	add	x1, x1, #0x450
  41f384:	bl	406cd0 <dcgettext@plt>
  41f388:	mov	x2, x0
  41f38c:	ldr	x0, [sp, #176]
  41f390:	mov	x1, #0x0                   	// #0
  41f394:	bl	41bd88 <error@@Base>
  41f398:	b	41f2e8 <parse_file_seq@@Base+0xb58>
  41f39c:	ldrb	w1, [x0]
  41f3a0:	cbz	w1, 41ee40 <parse_file_seq@@Base+0x6b0>
  41f3a4:	bl	41ac18 <end_of_token@@Base>
  41f3a8:	sub	x1, x0, x21
  41f3ac:	stp	x1, x0, [sp, #296]
  41f3b0:	mov	x3, x0
  41f3b4:	ldrb	w0, [x0]
  41f3b8:	ldrh	w20, [x24, x0, lsl #1]
  41f3bc:	tst	w20, #0x6
  41f3c0:	b.eq	41f3dc <parse_file_seq@@Base+0xc4c>  // b.none
  41f3c4:	add	x3, x3, #0x1
  41f3c8:	str	x3, [sp, #304]
  41f3cc:	ldrb	w0, [x3], #1
  41f3d0:	ldrh	w20, [x24, x0, lsl #1]
  41f3d4:	tst	w20, #0x6
  41f3d8:	b.ne	41f3c8 <parse_file_seq@@Base+0xc38>  // b.any
  41f3dc:	ldr	w0, [sp, #200]
  41f3e0:	cbz	w0, 41f520 <parse_file_seq@@Base+0xd90>
  41f3e4:	cmp	x1, #0x5
  41f3e8:	b.ne	41ee40 <parse_file_seq@@Base+0x6b0>  // b.any
  41f3ec:	mov	x2, x1
  41f3f0:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41f3f4:	mov	x1, x21
  41f3f8:	add	x0, x0, #0x448
  41f3fc:	bl	406930 <strncmp@plt>
  41f400:	cbnz	w0, 41ee40 <parse_file_seq@@Base+0x6b0>
  41f404:	mov	w0, #0x9                   	// #9
  41f408:	tst	w20, w0
  41f40c:	cset	w0, eq  // eq = none
  41f410:	str	w0, [sp, #200]
  41f414:	b	41ee40 <parse_file_seq@@Base+0x6b0>
  41f418:	ldr	x0, [sp, #160]
  41f41c:	bl	406b90 <free@plt>
  41f420:	mov	x0, x20
  41f424:	bl	41ab28 <xmalloc@@Base>
  41f428:	stp	x0, x20, [sp, #160]
  41f42c:	b	41f000 <parse_file_seq@@Base+0x870>
  41f430:	ldr	w0, [sp, #200]
  41f434:	tst	x1, #0x2
  41f438:	csinc	w0, w0, wzr, eq  // eq = none
  41f43c:	str	w0, [sp, #200]
  41f440:	b	41ee40 <parse_file_seq@@Base+0x6b0>
  41f444:	lsl	x0, x19, #1
  41f448:	mov	x1, x0
  41f44c:	str	x1, [sp, #208]
  41f450:	ldr	x0, [sp, #184]
  41f454:	bl	41ab78 <xrealloc@@Base>
  41f458:	str	x0, [sp, #184]
  41f45c:	b	41eec0 <parse_file_seq@@Base+0x730>
  41f460:	ldr	w2, [sp, #192]
  41f464:	mov	x1, x21
  41f468:	ldr	x0, [sp, #176]
  41f46c:	mov	w3, #0x0                   	// #0
  41f470:	bl	426e60 <try_variable_definition@@Base>
  41f474:	mov	x20, x0
  41f478:	b	41f338 <parse_file_seq@@Base+0xba8>
  41f47c:	mov	x1, #0x0                   	// #0
  41f480:	mov	x0, x21
  41f484:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  41f488:	mov	x19, x0
  41f48c:	bl	41ac48 <next_token@@Base>
  41f490:	ldrb	w1, [x0]
  41f494:	mov	x20, x0
  41f498:	cbz	w1, 420574 <parse_file_seq@@Base+0x1de4>
  41f49c:	bl	406680 <strlen@plt>
  41f4a0:	sub	x3, x0, #0x1
  41f4a4:	add	x3, x20, x3
  41f4a8:	cmp	x20, x3
  41f4ac:	b.cc	41f4c0 <parse_file_seq@@Base+0xd30>  // b.lo, b.ul, b.last
  41f4b0:	b	41f4cc <parse_file_seq@@Base+0xd3c>
  41f4b4:	sub	x3, x3, #0x1
  41f4b8:	cmp	x20, x3
  41f4bc:	b.eq	41f4cc <parse_file_seq@@Base+0xd3c>  // b.none
  41f4c0:	ldrb	w0, [x3]
  41f4c4:	ldrh	w0, [x24, x0, lsl #1]
  41f4c8:	tbnz	w0, #1, 41f4b4 <parse_file_seq@@Base+0xd24>
  41f4cc:	ldr	w2, [sp, #192]
  41f4d0:	sub	x1, x3, x20
  41f4d4:	add	x1, x1, #0x1
  41f4d8:	strb	wzr, [x3, #1]
  41f4dc:	mov	x3, #0x0                   	// #0
  41f4e0:	mov	x0, x20
  41f4e4:	mov	x23, #0x0                   	// #0
  41f4e8:	mov	x25, #0x0                   	// #0
  41f4ec:	bl	4256b0 <undefine_variable_in_set@@Base>
  41f4f0:	mov	x22, #0x0                   	// #0
  41f4f4:	mov	x0, x19
  41f4f8:	mov	w19, #0x0                   	// #0
  41f4fc:	str	wzr, [sp, #136]
  41f500:	bl	406b90 <free@plt>
  41f504:	b	41ee40 <parse_file_seq@@Base+0x6b0>
  41f508:	mov	w19, #0x0                   	// #0
  41f50c:	mov	x23, #0x0                   	// #0
  41f510:	mov	x25, #0x0                   	// #0
  41f514:	mov	x22, #0x0                   	// #0
  41f518:	str	wzr, [sp, #136]
  41f51c:	b	41ee40 <parse_file_seq@@Base+0x6b0>
  41f520:	ldr	x2, [sp, #176]
  41f524:	mov	x0, x21
  41f528:	bl	41c5a0 <out_of_memory@@Base+0x340>
  41f52c:	cmn	w0, #0x2
  41f530:	b.eq	41f5b0 <parse_file_seq@@Base+0xe20>  // b.none
  41f534:	cmn	w0, #0x1
  41f538:	b.eq	420588 <parse_file_seq@@Base+0x1df8>  // b.none
  41f53c:	str	w0, [sp, #216]
  41f540:	b	41ee40 <parse_file_seq@@Base+0x6b0>
  41f544:	add	x22, x20, x22
  41f548:	sturb	wzr, [x22, #-1]
  41f54c:	b	41f300 <parse_file_seq@@Base+0xb70>
  41f550:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41f554:	add	x1, x1, #0x3b0
  41f558:	mov	w2, #0x5                   	// #5
  41f55c:	mov	x0, #0x0                   	// #0
  41f560:	bl	406cd0 <dcgettext@plt>
  41f564:	bl	406d60 <printf@plt>
  41f568:	ldrb	w21, [x27, #3]
  41f56c:	mov	x27, x20
  41f570:	b	41ee74 <parse_file_seq@@Base+0x6e4>
  41f574:	ldrh	w0, [sp, #414]
  41f578:	mov	w1, #0x2                   	// #2
  41f57c:	bfi	w0, w1, #7, #3
  41f580:	strh	w0, [sp, #414]
  41f584:	b	41f130 <parse_file_seq@@Base+0x9a0>
  41f588:	mov	w2, #0x5                   	// #5
  41f58c:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41f590:	mov	x0, #0x0                   	// #0
  41f594:	add	x1, x1, #0x3f0
  41f598:	bl	406cd0 <dcgettext@plt>
  41f59c:	mov	x2, x0
  41f5a0:	ldr	x0, [sp, #256]
  41f5a4:	mov	x1, #0x0                   	// #0
  41f5a8:	bl	41bd88 <error@@Base>
  41f5ac:	b	41f124 <parse_file_seq@@Base+0x994>
  41f5b0:	ldr	w0, [sp, #216]
  41f5b4:	cbnz	w0, 41ee40 <parse_file_seq@@Base+0x6b0>
  41f5b8:	ldr	x19, [sp, #296]
  41f5bc:	cmp	x19, #0x6
  41f5c0:	b.eq	41f7e4 <parse_file_seq@@Base+0x1054>  // b.none
  41f5c4:	cmp	x19, #0x8
  41f5c8:	b.eq	41f880 <parse_file_seq@@Base+0x10f0>  // b.none
  41f5cc:	cmp	x19, #0x5
  41f5d0:	b.eq	41f94c <parse_file_seq@@Base+0x11bc>  // b.none
  41f5d4:	cmp	x19, #0x7
  41f5d8:	b.ne	41fb00 <parse_file_seq@@Base+0x1370>  // b.any
  41f5dc:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41f5e0:	mov	x2, x19
  41f5e4:	mov	x1, x21
  41f5e8:	add	x0, x0, #0x4a8
  41f5ec:	bl	406930 <strncmp@plt>
  41f5f0:	cbz	w0, 41f8c8 <parse_file_seq@@Base+0x1138>
  41f5f4:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41f5f8:	ldrb	w1, [x27]
  41f5fc:	ldrb	w0, [x0, #180]
  41f600:	cmp	w1, w0
  41f604:	b.eq	42014c <parse_file_seq@@Base+0x19bc>  // b.none
  41f608:	cbz	x25, 41f650 <parse_file_seq@@Base+0xec0>
  41f60c:	ldr	w1, [sp, #272]
  41f610:	add	x0, sp, #0x140
  41f614:	ldr	w3, [sp, #244]
  41f618:	mov	x7, x22
  41f61c:	str	w1, [sp]
  41f620:	mov	x2, x23
  41f624:	ldrb	w1, [sp, #240]
  41f628:	ldr	w5, [sp, #220]
  41f62c:	strb	w1, [sp, #8]
  41f630:	ldr	w1, [sp, #136]
  41f634:	stp	x3, xzr, [sp, #328]
  41f638:	ldr	x6, [sp, #184]
  41f63c:	str	x0, [sp, #16]
  41f640:	ldr	x4, [sp, #232]
  41f644:	mov	x0, x25
  41f648:	ldr	x3, [sp, #248]
  41f64c:	bl	41d9c0 <find_percent_cached@@Base+0x1e0>
  41f650:	ldr	x2, [sp, #176]
  41f654:	mov	x0, x27
  41f658:	mov	w1, #0x4018                	// #16408
  41f65c:	ldr	w2, [x2, #8]
  41f660:	str	w2, [sp, #244]
  41f664:	bl	41ce38 <out_of_memory@@Base+0xbd8>
  41f668:	mov	x20, x0
  41f66c:	cbz	x0, 41fab0 <parse_file_seq@@Base+0x1320>
  41f670:	ldrb	w0, [x0]
  41f674:	strb	wzr, [x20]
  41f678:	cmp	w0, #0x23
  41f67c:	b.eq	41fab0 <parse_file_seq@@Base+0x1320>  // b.none
  41f680:	mov	x0, x27
  41f684:	add	x23, sp, #0x128
  41f688:	bl	41a6b8 <collapse_continuations@@Base>
  41f68c:	add	x24, sp, #0x138
  41f690:	mov	x2, x23
  41f694:	mov	x1, x24
  41f698:	mov	x0, x27
  41f69c:	bl	41c2c0 <out_of_memory@@Base+0x60>
  41f6a0:	cmp	w0, #0x5
  41f6a4:	b.hi	41fcb8 <parse_file_seq@@Base+0x1528>  // b.pmore
  41f6a8:	cmp	w0, #0x3
  41f6ac:	b.hi	41fcc4 <parse_file_seq@@Base+0x1534>  // b.pmore
  41f6b0:	cmp	w0, #0x1
  41f6b4:	b.eq	420230 <parse_file_seq@@Base+0x1aa0>  // b.none
  41f6b8:	add	x22, x20, #0x1
  41f6bc:	ldr	x2, [sp, #296]
  41f6c0:	mov	x0, #0x0                   	// #0
  41f6c4:	ldr	x1, [sp, #312]
  41f6c8:	adrp	x21, 449000 <commands_started@@Base+0x170>
  41f6cc:	mov	x19, x22
  41f6d0:	add	x25, x21, #0x7d0
  41f6d4:	bl	40bd68 <variable_expand_string@@Base>
  41f6d8:	str	x0, [sp, #304]
  41f6dc:	b	41f738 <parse_file_seq@@Base+0xfa8>
  41f6e0:	mov	w1, #0x3a                  	// #58
  41f6e4:	bl	41d040 <out_of_memory@@Base+0xde0>
  41f6e8:	mov	x26, x0
  41f6ec:	cbnz	x0, 41fcec <parse_file_seq@@Base+0x155c>
  41f6f0:	ldr	x0, [sp, #312]
  41f6f4:	mov	x2, x23
  41f6f8:	mov	x1, x24
  41f6fc:	bl	41c2c0 <out_of_memory@@Base+0x60>
  41f700:	cmp	w0, #0x1
  41f704:	b.eq	420160 <parse_file_seq@@Base+0x19d0>  // b.none
  41f708:	ldr	x26, [sp, #304]
  41f70c:	mov	x0, x26
  41f710:	bl	406680 <strlen@plt>
  41f714:	add	x1, x26, x0
  41f718:	add	x1, x1, #0x1
  41f71c:	str	x1, [sp, #304]
  41f720:	mov	w1, #0x20                  	// #32
  41f724:	strb	w1, [x26, x0]
  41f728:	ldp	x2, x0, [sp, #296]
  41f72c:	ldr	x1, [sp, #312]
  41f730:	bl	40bd68 <variable_expand_string@@Base>
  41f734:	str	x0, [sp, #304]
  41f738:	ldr	x2, [sp, #296]
  41f73c:	ldr	x1, [sp, #312]
  41f740:	add	x1, x1, x2
  41f744:	str	x1, [sp, #312]
  41f748:	cbnz	x19, 41f6e0 <parse_file_seq@@Base+0xf50>
  41f74c:	mov	w1, #0x3b                  	// #59
  41f750:	bl	41d040 <out_of_memory@@Base+0xde0>
  41f754:	mov	x19, x0
  41f758:	cbz	x0, 41fce4 <parse_file_seq@@Base+0x1554>
  41f75c:	ldr	x3, [x25]
  41f760:	str	x3, [sp, #152]
  41f764:	ldr	x26, [sp, #304]
  41f768:	mov	x0, x26
  41f76c:	bl	406680 <strlen@plt>
  41f770:	strb	wzr, [x19]
  41f774:	add	x0, x26, x0
  41f778:	mov	x2, #0xffffffffffffffff    	// #-1
  41f77c:	ldr	x1, [sp, #312]
  41f780:	bl	40bd68 <variable_expand_string@@Base>
  41f784:	ldr	x2, [sp, #312]
  41f788:	str	x2, [sp, #136]
  41f78c:	mov	x0, x2
  41f790:	bl	406680 <strlen@plt>
  41f794:	ldr	x3, [sp, #152]
  41f798:	ldr	x1, [x25]
  41f79c:	sub	x19, x19, x3
  41f7a0:	ldr	x2, [sp, #136]
  41f7a4:	add	x19, x19, #0x1
  41f7a8:	sub	x26, x26, x3
  41f7ac:	add	x19, x1, x19
  41f7b0:	add	x2, x2, x0
  41f7b4:	add	x0, x1, x26
  41f7b8:	stp	x0, x2, [sp, #304]
  41f7bc:	b	41f6e0 <parse_file_seq@@Base+0xf50>
  41f7c0:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41f7c4:	add	x1, x1, #0x420
  41f7c8:	mov	w2, #0x5                   	// #5
  41f7cc:	mov	x0, #0x0                   	// #0
  41f7d0:	bl	406cd0 <dcgettext@plt>
  41f7d4:	mov	x2, x0
  41f7d8:	mov	x1, #0x0                   	// #0
  41f7dc:	ldr	x0, [sp, #256]
  41f7e0:	bl	41c0a0 <fatal@@Base>
  41f7e4:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  41f7e8:	mov	x2, x19
  41f7ec:	mov	x1, x21
  41f7f0:	add	x0, x0, #0x9f8
  41f7f4:	bl	406930 <strncmp@plt>
  41f7f8:	cbnz	w0, 41f5f4 <parse_file_seq@@Base+0xe64>
  41f7fc:	ldrb	w21, [x21]
  41f800:	cmp	w21, #0x75
  41f804:	cset	w20, ne  // ne = any
  41f808:	cbz	x25, 41f850 <parse_file_seq@@Base+0x10c0>
  41f80c:	ldr	w1, [sp, #272]
  41f810:	add	x0, sp, #0x140
  41f814:	ldr	w3, [sp, #244]
  41f818:	mov	x7, x22
  41f81c:	str	w1, [sp]
  41f820:	mov	x2, x23
  41f824:	ldrb	w1, [sp, #240]
  41f828:	ldr	w5, [sp, #220]
  41f82c:	strb	w1, [sp, #8]
  41f830:	ldr	w1, [sp, #136]
  41f834:	stp	x3, xzr, [sp, #328]
  41f838:	ldr	x6, [sp, #184]
  41f83c:	str	x0, [sp, #16]
  41f840:	ldr	x4, [sp, #232]
  41f844:	mov	x0, x25
  41f848:	ldr	x3, [sp, #248]
  41f84c:	bl	41d9c0 <find_percent_cached@@Base+0x1e0>
  41f850:	ldr	x0, [sp, #304]
  41f854:	ldrb	w1, [x0]
  41f858:	cbnz	w1, 4205d4 <parse_file_seq@@Base+0x1e44>
  41f85c:	adrp	x0, 449000 <commands_started@@Base+0x170>
  41f860:	mov	w19, #0x0                   	// #0
  41f864:	mov	x23, #0x0                   	// #0
  41f868:	mov	x25, #0x0                   	// #0
  41f86c:	str	w20, [x0, #2340]
  41f870:	mov	x22, #0x0                   	// #0
  41f874:	str	wzr, [sp, #136]
  41f878:	str	wzr, [sp, #200]
  41f87c:	b	41ee40 <parse_file_seq@@Base+0x6b0>
  41f880:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41f884:	mov	x2, x19
  41f888:	add	x0, x0, #0x498
  41f88c:	mov	x1, x21
  41f890:	bl	406930 <strncmp@plt>
  41f894:	cbz	w0, 41f7fc <parse_file_seq@@Base+0x106c>
  41f898:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41f89c:	mov	x2, x19
  41f8a0:	add	x0, x0, #0x4b0
  41f8a4:	mov	x1, x21
  41f8a8:	bl	406930 <strncmp@plt>
  41f8ac:	cbz	w0, 41f8c8 <parse_file_seq@@Base+0x1138>
  41f8b0:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41f8b4:	mov	x2, x19
  41f8b8:	mov	x1, x21
  41f8bc:	add	x0, x0, #0x4c0
  41f8c0:	bl	406930 <strncmp@plt>
  41f8c4:	cbnz	w0, 41f5f4 <parse_file_seq@@Base+0xe64>
  41f8c8:	ldrb	w21, [x21]
  41f8cc:	cbz	x25, 41f914 <parse_file_seq@@Base+0x1184>
  41f8d0:	ldr	w1, [sp, #272]
  41f8d4:	add	x0, sp, #0x140
  41f8d8:	ldr	w3, [sp, #244]
  41f8dc:	mov	x7, x22
  41f8e0:	str	w1, [sp]
  41f8e4:	mov	x2, x23
  41f8e8:	ldrb	w1, [sp, #240]
  41f8ec:	ldr	w5, [sp, #220]
  41f8f0:	strb	w1, [sp, #8]
  41f8f4:	ldr	w1, [sp, #136]
  41f8f8:	stp	x3, xzr, [sp, #328]
  41f8fc:	ldr	x6, [sp, #184]
  41f900:	str	x0, [sp, #16]
  41f904:	ldr	x4, [sp, #232]
  41f908:	mov	x0, x25
  41f90c:	ldr	x3, [sp, #248]
  41f910:	bl	41d9c0 <find_percent_cached@@Base+0x1e0>
  41f914:	ldr	x0, [sp, #304]
  41f918:	mov	x1, #0x0                   	// #0
  41f91c:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  41f920:	ldrb	w1, [x0]
  41f924:	mov	x22, x0
  41f928:	cbnz	w1, 41fbdc <parse_file_seq@@Base+0x144c>
  41f92c:	bl	406b90 <free@plt>
  41f930:	str	wzr, [sp, #136]
  41f934:	mov	w19, #0x0                   	// #0
  41f938:	mov	x23, #0x0                   	// #0
  41f93c:	mov	x25, #0x0                   	// #0
  41f940:	mov	x22, #0x0                   	// #0
  41f944:	str	wzr, [sp, #200]
  41f948:	b	41ee40 <parse_file_seq@@Base+0x6b0>
  41f94c:	mov	x2, x19
  41f950:	mov	x1, x21
  41f954:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  41f958:	add	x0, x0, #0x5e0
  41f95c:	bl	406930 <strncmp@plt>
  41f960:	str	w0, [sp, #200]
  41f964:	cbz	w0, 41fb24 <parse_file_seq@@Base+0x1394>
  41f968:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41f96c:	mov	x2, x19
  41f970:	mov	x1, x21
  41f974:	add	x0, x0, #0x4d0
  41f978:	bl	406930 <strncmp@plt>
  41f97c:	cbnz	w0, 41f5f4 <parse_file_seq@@Base+0xe64>
  41f980:	ldrb	w20, [x21]
  41f984:	cbz	x25, 41f9cc <parse_file_seq@@Base+0x123c>
  41f988:	ldr	w1, [sp, #272]
  41f98c:	add	x0, sp, #0x140
  41f990:	ldr	w3, [sp, #244]
  41f994:	mov	x7, x22
  41f998:	str	w1, [sp]
  41f99c:	mov	x2, x23
  41f9a0:	ldrb	w1, [sp, #240]
  41f9a4:	ldr	w5, [sp, #220]
  41f9a8:	strb	w1, [sp, #8]
  41f9ac:	ldr	w1, [sp, #136]
  41f9b0:	stp	x3, xzr, [sp, #328]
  41f9b4:	ldr	x6, [sp, #184]
  41f9b8:	str	x0, [sp, #16]
  41f9bc:	ldr	x4, [sp, #232]
  41f9c0:	mov	x0, x25
  41f9c4:	ldr	x3, [sp, #248]
  41f9c8:	bl	41d9c0 <find_percent_cached@@Base+0x1e0>
  41f9cc:	ldr	x0, [sp, #304]
  41f9d0:	mov	x1, #0x0                   	// #0
  41f9d4:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  41f9d8:	ldrb	w1, [x0]
  41f9dc:	mov	x19, x0
  41f9e0:	cbz	w1, 41f92c <parse_file_seq@@Base+0x119c>
  41f9e4:	mov	w4, #0x2                   	// #2
  41f9e8:	mov	x3, #0x0                   	// #0
  41f9ec:	mov	w2, #0x1                   	// #1
  41f9f0:	mov	x1, #0x10                  	// #16
  41f9f4:	add	x0, sp, #0x130
  41f9f8:	str	x19, [sp, #304]
  41f9fc:	bl	41e790 <parse_file_seq@@Base>
  41fa00:	mov	x25, x0
  41fa04:	mov	x0, x19
  41fa08:	bl	406b90 <free@plt>
  41fa0c:	cbz	x25, 41fa98 <parse_file_seq@@Base+0x1308>
  41fa10:	cmp	w20, #0x2d
  41fa14:	add	x19, sp, #0x170
  41fa18:	adrp	x20, 448000 <output_context@@Base+0x1208>
  41fa1c:	cset	w21, eq  // eq = none
  41fa20:	add	x20, x20, #0xe10
  41fa24:	ldr	x3, [x25, #8]
  41fa28:	mov	x23, x25
  41fa2c:	ldr	x0, [sp, #176]
  41fa30:	mov	w2, w21
  41fa34:	mov	x1, x19
  41fa38:	ldr	x25, [x25]
  41fa3c:	str	x3, [sp, #368]
  41fa40:	bl	4185e0 <load_file@@Base>
  41fa44:	mov	w22, w0
  41fa48:	orr	w0, w21, w0
  41fa4c:	cbz	w0, 420540 <parse_file_seq@@Base+0x1db0>
  41fa50:	mov	x0, x23
  41fa54:	bl	406b90 <free@plt>
  41fa58:	cmn	w22, #0x1
  41fa5c:	b.eq	41fa94 <parse_file_seq@@Base+0x1304>  // b.none
  41fa60:	mov	x0, #0x40                  	// #64
  41fa64:	bl	41ab50 <xcalloc@@Base>
  41fa68:	mov	x22, x0
  41fa6c:	ldr	x1, [x20, #32]
  41fa70:	str	x22, [x20, #32]
  41fa74:	ldr	x0, [sp, #368]
  41fa78:	str	x1, [x22]
  41fa7c:	bl	40ced8 <lookup_file@@Base>
  41fa80:	str	x0, [x22, #16]
  41fa84:	cbz	x0, 420244 <parse_file_seq@@Base+0x1ab4>
  41fa88:	ldrb	w1, [x0, #136]
  41fa8c:	orr	w1, w1, #0x40
  41fa90:	strb	w1, [x0, #136]
  41fa94:	cbnz	x25, 41fa24 <parse_file_seq@@Base+0x1294>
  41fa98:	mov	x23, #0x0                   	// #0
  41fa9c:	mov	w19, #0x0                   	// #0
  41faa0:	mov	x22, #0x0                   	// #0
  41faa4:	str	wzr, [sp, #136]
  41faa8:	str	wzr, [sp, #200]
  41faac:	b	41ee40 <parse_file_seq@@Base+0x6b0>
  41fab0:	mov	x0, x27
  41fab4:	add	x23, sp, #0x128
  41fab8:	bl	41a6b8 <collapse_continuations@@Base>
  41fabc:	add	x24, sp, #0x138
  41fac0:	mov	x2, x23
  41fac4:	mov	x1, x24
  41fac8:	mov	x0, x27
  41facc:	bl	41c2c0 <out_of_memory@@Base+0x60>
  41fad0:	str	wzr, [sp, #136]
  41fad4:	cmp	w0, #0x1
  41fad8:	mov	w19, #0x0                   	// #0
  41fadc:	b.eq	41f938 <parse_file_seq@@Base+0x11a8>  // b.none
  41fae0:	cbz	w0, 41faf4 <parse_file_seq@@Base+0x1364>
  41fae4:	cmp	w0, #0x5
  41fae8:	b.hi	41fcd0 <parse_file_seq@@Base+0x1540>  // b.pmore
  41faec:	cmp	w0, #0x3
  41faf0:	b.hi	41fcdc <parse_file_seq@@Base+0x154c>  // b.pmore
  41faf4:	mov	x20, #0xffffffffffffffff    	// #-1
  41faf8:	mov	x22, #0x0                   	// #0
  41fafc:	b	41f6bc <parse_file_seq@@Base+0xf2c>
  41fb00:	cmp	x19, #0x4
  41fb04:	b.ne	41f5f4 <parse_file_seq@@Base+0xe64>  // b.any
  41fb08:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  41fb0c:	mov	x2, x19
  41fb10:	mov	x1, x21
  41fb14:	add	x0, x0, #0x2b8
  41fb18:	bl	406930 <strncmp@plt>
  41fb1c:	cbz	w0, 41f980 <parse_file_seq@@Base+0x11f0>
  41fb20:	b	41f5f4 <parse_file_seq@@Base+0xe64>
  41fb24:	cbz	x25, 41fb6c <parse_file_seq@@Base+0x13dc>
  41fb28:	ldr	w1, [sp, #272]
  41fb2c:	add	x0, sp, #0x140
  41fb30:	ldr	w3, [sp, #244]
  41fb34:	mov	x7, x22
  41fb38:	str	w1, [sp]
  41fb3c:	mov	x2, x23
  41fb40:	ldrb	w1, [sp, #240]
  41fb44:	ldr	w5, [sp, #220]
  41fb48:	strb	w1, [sp, #8]
  41fb4c:	ldr	w1, [sp, #136]
  41fb50:	stp	x3, xzr, [sp, #328]
  41fb54:	ldr	x6, [sp, #184]
  41fb58:	str	x0, [sp, #16]
  41fb5c:	ldr	x4, [sp, #232]
  41fb60:	mov	x0, x25
  41fb64:	ldr	x3, [sp, #248]
  41fb68:	bl	41d9c0 <find_percent_cached@@Base+0x1e0>
  41fb6c:	ldr	x0, [sp, #304]
  41fb70:	add	x19, sp, #0x170
  41fb74:	mov	x20, #0x0                   	// #0
  41fb78:	bl	40c808 <variable_expand@@Base>
  41fb7c:	str	x0, [sp, #344]
  41fb80:	mov	x1, x19
  41fb84:	add	x0, sp, #0x158
  41fb88:	bl	41ac78 <find_next_token@@Base>
  41fb8c:	mov	x1, x0
  41fb90:	cbz	x0, 41fbb0 <parse_file_seq@@Base+0x1420>
  41fb94:	ldr	x1, [sp, #368]
  41fb98:	bl	41abd0 <xstrndup@@Base>
  41fb9c:	mov	x20, x0
  41fba0:	mov	x1, x19
  41fba4:	add	x0, sp, #0x158
  41fba8:	bl	41ac78 <find_next_token@@Base>
  41fbac:	mov	x1, x0
  41fbb0:	mov	x0, x20
  41fbb4:	str	wzr, [sp, #136]
  41fbb8:	bl	4273e0 <construct_vpath_list@@Base>
  41fbbc:	mov	w19, #0x0                   	// #0
  41fbc0:	mov	x0, x20
  41fbc4:	mov	x23, #0x0                   	// #0
  41fbc8:	bl	406b90 <free@plt>
  41fbcc:	mov	x25, #0x0                   	// #0
  41fbd0:	mov	x22, #0x0                   	// #0
  41fbd4:	str	wzr, [sp, #216]
  41fbd8:	b	41ee40 <parse_file_seq@@Base+0x6b0>
  41fbdc:	mov	w4, #0x2                   	// #2
  41fbe0:	mov	x3, #0x0                   	// #0
  41fbe4:	mov	w2, #0x1                   	// #1
  41fbe8:	mov	x1, #0x10                  	// #16
  41fbec:	adrp	x23, 446000 <expanding_var@@Base+0x320>
  41fbf0:	add	x0, sp, #0x130
  41fbf4:	str	x22, [sp, #304]
  41fbf8:	bl	41e790 <parse_file_seq@@Base>
  41fbfc:	add	x19, sp, #0x170
  41fc00:	mov	x20, x0
  41fc04:	mov	x0, x22
  41fc08:	bl	406b90 <free@plt>
  41fc0c:	ldr	x22, [x23, #208]
  41fc10:	str	x19, [x23, #208]
  41fc14:	stp	xzr, xzr, [sp, #368]
  41fc18:	str	xzr, [sp, #384]
  41fc1c:	cbz	x20, 41fc9c <parse_file_seq@@Base+0x150c>
  41fc20:	cmp	w21, #0x69
  41fc24:	ldr	w1, [sp, #276]
  41fc28:	mov	w19, #0xa                   	// #10
  41fc2c:	mov	w0, #0xe                   	// #14
  41fc30:	csel	w0, w0, w19, ne  // ne = any
  41fc34:	eor	w19, w1, #0x1
  41fc38:	orr	w19, w19, w0
  41fc3c:	and	w19, w19, #0xffff
  41fc40:	bl	406d70 <__errno_location@plt>
  41fc44:	mov	x21, x0
  41fc48:	ldr	x25, [sp, #176]
  41fc4c:	mov	w1, w19
  41fc50:	ldp	x24, x0, [x20]
  41fc54:	bl	420698 <parse_file_seq@@Base+0x1f08>
  41fc58:	mov	x1, x0
  41fc5c:	ldr	w2, [x21]
  41fc60:	cbz	w2, 41fc88 <parse_file_seq@@Base+0x14f8>
  41fc64:	ldp	x2, x3, [x25]
  41fc68:	stp	x2, x3, [x0, #40]
  41fc6c:	mov	x0, x20
  41fc70:	ldr	x2, [x25, #16]
  41fc74:	str	x2, [x1, #56]
  41fc78:	bl	406b90 <free@plt>
  41fc7c:	cbz	x24, 41fc94 <parse_file_seq@@Base+0x1504>
  41fc80:	mov	x20, x24
  41fc84:	b	41fc4c <parse_file_seq@@Base+0x14bc>
  41fc88:	mov	x0, x20
  41fc8c:	bl	406b90 <free@plt>
  41fc90:	cbnz	x24, 41fc80 <parse_file_seq@@Base+0x14f0>
  41fc94:	ldr	x19, [x23, #208]
  41fc98:	ldr	x20, [x19, #8]
  41fc9c:	mov	x0, x20
  41fca0:	bl	406b90 <free@plt>
  41fca4:	ldr	x0, [x19, #16]
  41fca8:	bl	406b90 <free@plt>
  41fcac:	str	x22, [x23, #208]
  41fcb0:	str	wzr, [sp, #136]
  41fcb4:	b	41f934 <parse_file_seq@@Base+0x11a4>
  41fcb8:	sub	w0, w0, #0x8
  41fcbc:	cmp	w0, #0x1
  41fcc0:	b.hi	41f6b8 <parse_file_seq@@Base+0xf28>  // b.pmore
  41fcc4:	mov	w19, #0x1                   	// #1
  41fcc8:	str	wzr, [sp, #136]
  41fccc:	b	41f938 <parse_file_seq@@Base+0x11a8>
  41fcd0:	sub	w0, w0, #0x8
  41fcd4:	cmp	w0, #0x1
  41fcd8:	b.hi	41faf4 <parse_file_seq@@Base+0x1364>  // b.pmore
  41fcdc:	mov	w19, #0x1                   	// #1
  41fce0:	b	41f938 <parse_file_seq@@Base+0x11a8>
  41fce4:	ldr	x0, [sp, #304]
  41fce8:	b	41f6e0 <parse_file_seq@@Base+0xf50>
  41fcec:	ldr	x0, [sp, #304]
  41fcf0:	cmp	x0, x26
  41fcf4:	b.cs	41fd08 <parse_file_seq@@Base+0x1578>  // b.hs, b.nlast
  41fcf8:	ldurb	w0, [x26, #-1]
  41fcfc:	cmp	w0, #0x26
  41fd00:	cset	x0, eq  // eq = none
  41fd04:	sub	x26, x26, x0
  41fd08:	ldr	x0, [x21, #2000]
  41fd0c:	bl	41ac48 <next_token@@Base>
  41fd10:	str	x0, [sp, #304]
  41fd14:	mov	x1, #0x10                  	// #16
  41fd18:	add	x0, sp, #0x130
  41fd1c:	ldrb	w23, [x26]
  41fd20:	mov	w4, #0x0                   	// #0
  41fd24:	strb	wzr, [x26]
  41fd28:	mov	x3, #0x0                   	// #0
  41fd2c:	cmp	w23, #0x26
  41fd30:	mov	w2, #0x1                   	// #1
  41fd34:	cset	w5, eq  // eq = none
  41fd38:	str	w5, [sp, #136]
  41fd3c:	mov	w24, w5
  41fd40:	bl	41e790 <parse_file_seq@@Base>
  41fd44:	strb	w23, [x26]
  41fd48:	and	x1, x24, #0xff
  41fd4c:	mov	x25, x0
  41fd50:	add	x5, x26, x1
  41fd54:	cbz	x0, 41fcdc <parse_file_seq@@Base+0x154c>
  41fd58:	add	x23, x5, #0x1
  41fd5c:	str	x23, [sp, #304]
  41fd60:	ldrb	w0, [x5, #1]
  41fd64:	cmp	w0, #0x3a
  41fd68:	cset	w1, eq  // eq = none
  41fd6c:	str	w1, [sp, #272]
  41fd70:	b.ne	41fd7c <parse_file_seq@@Base+0x15ec>  // b.any
  41fd74:	add	x23, x5, #0x2
  41fd78:	str	x23, [sp, #304]
  41fd7c:	ldr	x27, [sp, #312]
  41fd80:	mov	x24, #0x0                   	// #0
  41fd84:	ldrb	w0, [x27]
  41fd88:	cbnz	w0, 4201f0 <parse_file_seq@@Base+0x1a60>
  41fd8c:	mov	x0, x23
  41fd90:	add	x1, sp, #0x120
  41fd94:	bl	41d400 <out_of_memory@@Base+0x11a0>
  41fd98:	str	x0, [sp, #304]
  41fd9c:	ldrb	w1, [sp, #288]
  41fda0:	mov	x23, x0
  41fda4:	tbz	w1, #0, 420014 <parse_file_seq@@Base+0x1884>
  41fda8:	cbz	x22, 41fe00 <parse_file_seq@@Base+0x1670>
  41fdac:	ldr	x1, [x21, #2000]
  41fdb0:	mov	w0, #0x3b                  	// #59
  41fdb4:	sturb	w0, [x22, #-1]
  41fdb8:	mov	x0, x20
  41fdbc:	sub	x23, x23, x1
  41fdc0:	bl	41a6b8 <collapse_continuations@@Base>
  41fdc4:	ldr	x22, [sp, #304]
  41fdc8:	mov	x0, x22
  41fdcc:	bl	406680 <strlen@plt>
  41fdd0:	mov	x19, x0
  41fdd4:	mov	x0, x20
  41fdd8:	bl	406680 <strlen@plt>
  41fddc:	mov	x2, x0
  41fde0:	mov	x1, x20
  41fde4:	add	x0, x22, x19
  41fde8:	add	x2, x2, #0x1
  41fdec:	bl	40bbb0 <variable_buffer_output@@Base>
  41fdf0:	ldr	x0, [x21, #2000]
  41fdf4:	ldrb	w1, [sp, #288]
  41fdf8:	add	x23, x0, x23
  41fdfc:	str	x23, [sp, #304]
  41fe00:	tbnz	w1, #4, 41ffd4 <parse_file_seq@@Base+0x1844>
  41fe04:	mov	w20, #0x2                   	// #2
  41fe08:	mov	w22, w20
  41fe0c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  41fe10:	add	x19, sp, #0x170
  41fe14:	ldr	x27, [sp, #176]
  41fe18:	add	x21, x0, #0x150
  41fe1c:	ldr	x26, [x0, #336]
  41fe20:	str	x28, [sp, #152]
  41fe24:	ldr	x1, [x25, #8]
  41fe28:	mov	x0, x25
  41fe2c:	ldr	x25, [x25]
  41fe30:	str	x1, [sp, #368]
  41fe34:	bl	406b90 <free@plt>
  41fe38:	mov	x0, x19
  41fe3c:	bl	41d7e0 <find_percent_cached@@Base>
  41fe40:	mov	x1, x0
  41fe44:	ldr	x0, [sp, #368]
  41fe48:	cbz	x1, 41ff74 <parse_file_seq@@Base+0x17e4>
  41fe4c:	bl	4252c8 <create_pattern_var@@Base>
  41fe50:	mov	x2, x0
  41fe54:	ldp	x4, x5, [x27]
  41fe58:	stp	x4, x5, [x0, #48]
  41fe5c:	mov	x1, x23
  41fe60:	ldr	x3, [x27, #16]
  41fe64:	str	x3, [x2, #64]
  41fe68:	add	x0, x0, #0x20
  41fe6c:	bl	426db0 <assign_variable_definition@@Base>
  41fe70:	mov	x24, x0
  41fe74:	ldrb	w0, [x0, #47]
  41fe78:	bfi	w0, w20, #2, #3
  41fe7c:	strb	w0, [x24, #47]
  41fe80:	ldrh	w0, [x24, #46]
  41fe84:	and	w0, w0, #0x380
  41fe88:	cmp	w0, #0x80
  41fe8c:	ldr	x0, [x24, #8]
  41fe90:	b.eq	41ffc4 <parse_file_seq@@Base+0x1834>  // b.none
  41fe94:	bl	41abb0 <xstrdup@@Base>
  41fe98:	str	x0, [x24, #8]
  41fe9c:	ldrb	w1, [sp, #288]
  41fea0:	mov	w3, #0xff77                	// #65399
  41fea4:	ldr	w2, [x24, #44]
  41fea8:	movk	w3, #0x9fff, lsl #16
  41feac:	eor	x0, x1, #0x8
  41feb0:	ubfx	x1, x1, #5, #1
  41feb4:	and	w2, w2, w3
  41feb8:	sbfx	w0, w0, #3, #1
  41febc:	lsl	w1, w1, #7
  41fec0:	ubfiz	w0, w0, #29, #2
  41fec4:	orr	w1, w1, #0x8
  41fec8:	orr	w0, w0, w1
  41fecc:	orr	w0, w0, w2
  41fed0:	str	w0, [x24, #44]
  41fed4:	lsr	w0, w0, #24
  41fed8:	and	w0, w0, #0x1c
  41fedc:	cmp	w0, #0x14
  41fee0:	b.eq	41ff20 <parse_file_seq@@Base+0x1790>  // b.none
  41fee4:	ldr	x28, [x24]
  41fee8:	mov	x0, x28
  41feec:	bl	406680 <strlen@plt>
  41fef0:	mov	x1, x0
  41fef4:	mov	x0, x28
  41fef8:	bl	4257c8 <lookup_variable@@Base>
  41fefc:	cmp	x0, #0x0
  41ff00:	mov	x28, x0
  41ff04:	ccmp	x24, x0, #0x4, ne  // ne = any
  41ff08:	b.eq	41ff20 <parse_file_seq@@Base+0x1790>  // b.none
  41ff0c:	ldrb	w0, [x0, #47]
  41ff10:	and	w0, w0, #0x1c
  41ff14:	sub	w0, w0, #0xc
  41ff18:	tst	w0, #0xf8
  41ff1c:	b.eq	41ff30 <parse_file_seq@@Base+0x17a0>  // b.none
  41ff20:	cbnz	x25, 41fe24 <parse_file_seq@@Base+0x1694>
  41ff24:	mov	w19, #0x0                   	// #0
  41ff28:	ldr	x28, [sp, #152]
  41ff2c:	b	41f938 <parse_file_seq@@Base+0x11a8>
  41ff30:	ldr	x0, [x24, #8]
  41ff34:	bl	406b90 <free@plt>
  41ff38:	ldr	x0, [x28, #8]
  41ff3c:	bl	41abb0 <xstrdup@@Base>
  41ff40:	ldrb	w2, [x28, #47]
  41ff44:	ldrb	w3, [x28, #44]
  41ff48:	ldr	w1, [x24, #44]
  41ff4c:	str	x0, [x24, #8]
  41ff50:	ubfx	x0, x2, #2, #3
  41ff54:	and	w3, w3, #0x1
  41ff58:	mov	w2, #0xfffc                	// #65532
  41ff5c:	orr	w0, w3, w0, lsl #26
  41ff60:	movk	w2, #0xe3ff, lsl #16
  41ff64:	and	w1, w1, w2
  41ff68:	orr	w0, w0, w1
  41ff6c:	str	w0, [x24, #44]
  41ff70:	b	41ff20 <parse_file_seq@@Base+0x1790>
  41ff74:	bl	40ced8 <lookup_file@@Base>
  41ff78:	mov	x24, x0
  41ff7c:	cbz	x0, 420000 <parse_file_seq@@Base+0x1870>
  41ff80:	ldr	x0, [x0, #104]
  41ff84:	cmp	x0, #0x0
  41ff88:	csel	x24, x24, x0, eq  // eq = none
  41ff8c:	mov	x0, x24
  41ff90:	mov	w1, #0x1                   	// #1
  41ff94:	bl	426890 <initialize_file_variables@@Base>
  41ff98:	ldr	x0, [x24, #80]
  41ff9c:	mov	w2, w22
  41ffa0:	mov	x1, x23
  41ffa4:	mov	w3, #0x1                   	// #1
  41ffa8:	str	x0, [x21]
  41ffac:	mov	x0, x27
  41ffb0:	bl	426e60 <try_variable_definition@@Base>
  41ffb4:	mov	x24, x0
  41ffb8:	cbz	x0, 41ffe0 <parse_file_seq@@Base+0x1850>
  41ffbc:	str	x26, [x21]
  41ffc0:	b	41fe9c <parse_file_seq@@Base+0x170c>
  41ffc4:	mov	x1, #0x0                   	// #0
  41ffc8:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  41ffcc:	str	x0, [x24, #8]
  41ffd0:	b	41fe9c <parse_file_seq@@Base+0x170c>
  41ffd4:	mov	w20, #0x5                   	// #5
  41ffd8:	mov	w22, w20
  41ffdc:	b	41fe0c <parse_file_seq@@Base+0x167c>
  41ffe0:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  41ffe4:	add	x1, x1, #0x5a0
  41ffe8:	mov	w2, #0x5                   	// #5
  41ffec:	bl	406cd0 <dcgettext@plt>
  41fff0:	mov	x2, x0
  41fff4:	ldr	x0, [sp, #176]
  41fff8:	mov	x1, #0x0                   	// #0
  41fffc:	bl	41c0a0 <fatal@@Base>
  420000:	ldr	x0, [sp, #368]
  420004:	bl	424940 <strcache_add@@Base>
  420008:	bl	40cf50 <enter_file@@Base>
  42000c:	mov	x24, x0
  420010:	b	41ff8c <parse_file_seq@@Base+0x17fc>
  420014:	ldr	x0, [sp, #312]
  420018:	mov	w1, #0x3d                  	// #61
  42001c:	bl	41d040 <out_of_memory@@Base+0xde0>
  420020:	ldr	x1, [sp, #312]
  420024:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  420028:	ldrb	w0, [x0, #180]
  42002c:	str	w0, [sp, #240]
  420030:	ldrb	w0, [x1]
  420034:	cbnz	w0, 4201b0 <parse_file_seq@@Base+0x1a20>
  420038:	ldr	x20, [sp, #304]
  42003c:	mov	w1, #0x3a                  	// #58
  420040:	mov	x0, x20
  420044:	bl	406bb0 <strchr@plt>
  420048:	mov	x23, x0
  42004c:	cbz	x0, 420094 <parse_file_seq@@Base+0x1904>
  420050:	ldurb	w0, [x23, #-1]
  420054:	cmp	w0, #0x5c
  420058:	b.ne	420254 <parse_file_seq@@Base+0x1ac4>  // b.any
  42005c:	sub	x1, x23, #0x2
  420060:	mov	w0, #0x0                   	// #0
  420064:	ldrb	w3, [x1], #-1
  420068:	mov	w2, w0
  42006c:	eor	w0, w0, #0x1
  420070:	cmp	w3, #0x5c
  420074:	b.eq	420064 <parse_file_seq@@Base+0x18d4>  // b.none
  420078:	cmp	w2, #0x1
  42007c:	b.eq	420254 <parse_file_seq@@Base+0x1ac4>  // b.none
  420080:	add	x0, x23, #0x1
  420084:	mov	w1, #0x3a                  	// #58
  420088:	bl	406bb0 <strchr@plt>
  42008c:	mov	x23, x0
  420090:	cbnz	x0, 420050 <parse_file_seq@@Base+0x18c0>
  420094:	mov	x0, x20
  420098:	str	x20, [sp, #368]
  42009c:	bl	406680 <strlen@plt>
  4200a0:	sub	x2, x0, #0x1
  4200a4:	add	x1, sp, #0x158
  4200a8:	add	x20, x20, x2
  4200ac:	add	x0, sp, #0x170
  4200b0:	str	x20, [sp, #344]
  4200b4:	bl	411b80 <strip_whitespace@@Base>
  4200b8:	str	xzr, [sp, #232]
  4200bc:	ldr	x1, [sp, #344]
  4200c0:	ldr	x0, [sp, #368]
  4200c4:	cmp	x0, x1
  4200c8:	b.hi	4200d4 <parse_file_seq@@Base+0x1944>  // b.pmore
  4200cc:	ldrb	w2, [x0]
  4200d0:	cbnz	w2, 4202ac <parse_file_seq@@Base+0x1b1c>
  4200d4:	mov	x22, #0x0                   	// #0
  4200d8:	cbz	x19, 420124 <parse_file_seq@@Base+0x1994>
  4200dc:	mov	x0, x19
  4200e0:	bl	406680 <strlen@plt>
  4200e4:	ldr	x1, [sp, #176]
  4200e8:	mov	x20, x0
  4200ec:	add	x0, x0, #0x2
  4200f0:	ldr	w1, [x1, #8]
  4200f4:	str	w1, [sp, #220]
  4200f8:	ldr	x1, [sp, #208]
  4200fc:	cmp	x0, x1
  420100:	b.hi	4202f4 <parse_file_seq@@Base+0x1b64>  // b.pmore
  420104:	mov	x1, x19
  420108:	mov	x2, x20
  42010c:	ldr	x19, [sp, #184]
  420110:	add	x22, x20, #0x1
  420114:	mov	x0, x19
  420118:	bl	406640 <memcpy@plt>
  42011c:	mov	w0, #0xa                   	// #10
  420120:	strb	w0, [x19, x20]
  420124:	ldr	w0, [sp, #276]
  420128:	cbz	w0, 420140 <parse_file_seq@@Base+0x19b0>
  42012c:	adrp	x0, 449000 <commands_started@@Base+0x170>
  420130:	ldr	x0, [x0, #2104]
  420134:	ldr	x0, [x0, #8]
  420138:	ldrb	w0, [x0]
  42013c:	cbz	w0, 420310 <parse_file_seq@@Base+0x1b80>
  420140:	mov	w19, #0x0                   	// #0
  420144:	str	wzr, [sp, #200]
  420148:	b	41ee40 <parse_file_seq@@Base+0x6b0>
  42014c:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  420150:	mov	w2, #0x5                   	// #5
  420154:	add	x1, x1, #0x4f0
  420158:	mov	x0, #0x0                   	// #0
  42015c:	b	41ffec <parse_file_seq@@Base+0x185c>
  420160:	ldr	x0, [x21, #2000]
  420164:	bl	41ac48 <next_token@@Base>
  420168:	str	x0, [sp, #304]
  42016c:	ldrb	w0, [x0]
  420170:	cbz	w0, 41f930 <parse_file_seq@@Base+0x11a0>
  420174:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  420178:	ldrb	w0, [x0, #180]
  42017c:	cmp	w0, #0x9
  420180:	b.ne	42019c <parse_file_seq@@Base+0x1a0c>  // b.any
  420184:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  420188:	mov	x0, x27
  42018c:	add	x1, x1, #0x538
  420190:	mov	x2, #0x8                   	// #8
  420194:	bl	406930 <strncmp@plt>
  420198:	cbz	w0, 42059c <parse_file_seq@@Base+0x1e0c>
  42019c:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4201a0:	mov	w2, #0x5                   	// #5
  4201a4:	add	x1, x1, #0x588
  4201a8:	mov	x0, #0x0                   	// #0
  4201ac:	b	41ffec <parse_file_seq@@Base+0x185c>
  4201b0:	ldr	x3, [sp, #304]
  4201b4:	mov	x2, #0xffffffffffffffff    	// #-1
  4201b8:	ldr	x20, [x21, #2000]
  4201bc:	add	x0, x3, x24
  4201c0:	sub	x20, x3, x20
  4201c4:	bl	40bd68 <variable_expand_string@@Base>
  4201c8:	ldr	x0, [x21, #2000]
  4201cc:	add	x0, x0, x20
  4201d0:	str	x0, [sp, #304]
  4201d4:	cbnz	x19, 420038 <parse_file_seq@@Base+0x18a8>
  4201d8:	mov	w1, #0x3b                  	// #59
  4201dc:	bl	41d040 <out_of_memory@@Base+0xde0>
  4201e0:	mov	x19, x0
  4201e4:	cbz	x0, 420038 <parse_file_seq@@Base+0x18a8>
  4201e8:	strb	wzr, [x19], #1
  4201ec:	b	420038 <parse_file_seq@@Base+0x18a8>
  4201f0:	ldr	x26, [x21, #2000]
  4201f4:	mov	x0, x23
  4201f8:	bl	406680 <strlen@plt>
  4201fc:	mov	x24, x0
  420200:	mov	x0, x27
  420204:	bl	406680 <strlen@plt>
  420208:	mov	x2, x0
  42020c:	sub	x26, x23, x26
  420210:	add	x0, x23, x24
  420214:	mov	x1, x27
  420218:	add	x2, x2, #0x1
  42021c:	bl	40bbb0 <variable_buffer_output@@Base>
  420220:	ldr	x23, [x21, #2000]
  420224:	add	x23, x23, x26
  420228:	str	x23, [sp, #304]
  42022c:	b	41fd8c <parse_file_seq@@Base+0x15fc>
  420230:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  420234:	mov	w2, #0x5                   	// #5
  420238:	add	x1, x1, #0x518
  42023c:	mov	x0, #0x0                   	// #0
  420240:	b	41ffec <parse_file_seq@@Base+0x185c>
  420244:	ldr	x0, [sp, #368]
  420248:	bl	40cf50 <enter_file@@Base>
  42024c:	str	x0, [x22, #16]
  420250:	b	41fa88 <parse_file_seq@@Base+0x12f8>
  420254:	mov	x1, #0x10                  	// #16
  420258:	add	x0, sp, #0x130
  42025c:	mov	w4, #0x4                   	// #4
  420260:	mov	x3, #0x0                   	// #0
  420264:	mov	w2, #0x40                  	// #64
  420268:	bl	41e790 <parse_file_seq@@Base>
  42026c:	ldr	x1, [sp, #304]
  420270:	mov	x20, x0
  420274:	add	x1, x1, #0x1
  420278:	str	x1, [sp, #304]
  42027c:	cbz	x0, 4202e4 <parse_file_seq@@Base+0x1b54>
  420280:	ldr	x0, [x20]
  420284:	cbnz	x0, 4202d0 <parse_file_seq@@Base+0x1b40>
  420288:	add	x0, x20, #0x8
  42028c:	bl	41d7e0 <find_percent_cached@@Base>
  420290:	str	x0, [sp, #248]
  420294:	ldr	x23, [x20, #8]
  420298:	cbz	x0, 4202c0 <parse_file_seq@@Base+0x1b30>
  42029c:	mov	x0, x20
  4202a0:	bl	406b90 <free@plt>
  4202a4:	ldr	x20, [sp, #304]
  4202a8:	b	420094 <parse_file_seq@@Base+0x1904>
  4202ac:	sub	x1, x1, x0
  4202b0:	add	x1, x1, #0x1
  4202b4:	bl	41abd0 <xstrndup@@Base>
  4202b8:	str	x0, [sp, #232]
  4202bc:	b	4200d4 <parse_file_seq@@Base+0x1944>
  4202c0:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4202c4:	mov	w2, #0x5                   	// #5
  4202c8:	add	x1, x1, #0x608
  4202cc:	b	41ffec <parse_file_seq@@Base+0x185c>
  4202d0:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4202d4:	mov	w2, #0x5                   	// #5
  4202d8:	add	x1, x1, #0x5e8
  4202dc:	mov	x0, #0x0                   	// #0
  4202e0:	b	41ffec <parse_file_seq@@Base+0x185c>
  4202e4:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4202e8:	mov	w2, #0x5                   	// #5
  4202ec:	add	x1, x1, #0x5d0
  4202f0:	b	41ffec <parse_file_seq@@Base+0x185c>
  4202f4:	lsl	x0, x0, #1
  4202f8:	mov	x1, x0
  4202fc:	str	x1, [sp, #208]
  420300:	ldr	x0, [sp, #184]
  420304:	bl	41ab78 <xrealloc@@Base>
  420308:	str	x0, [sp, #184]
  42030c:	b	420104 <parse_file_seq@@Base+0x1974>
  420310:	adrp	x0, 449000 <commands_started@@Base+0x170>
  420314:	str	x22, [sp, #152]
  420318:	stp	x25, x23, [sp, #192]
  42031c:	ldr	x0, [x0, #2296]
  420320:	str	x28, [sp, #224]
  420324:	stp	x25, x0, [sp, #256]
  420328:	mov	w1, #0x25                  	// #37
  42032c:	ldr	x0, [sp, #256]
  420330:	ldr	x26, [x0, #8]
  420334:	mov	x0, x26
  420338:	bl	406bb0 <strchr@plt>
  42033c:	cbnz	x0, 420428 <parse_file_seq@@Base+0x1c98>
  420340:	ldrb	w25, [x26]
  420344:	cmp	w25, #0x2e
  420348:	b.ne	42035c <parse_file_seq@@Base+0x1bcc>  // b.any
  42034c:	mov	x0, x26
  420350:	mov	w1, #0x2f                  	// #47
  420354:	bl	406bb0 <strchr@plt>
  420358:	cbz	x0, 420418 <parse_file_seq@@Base+0x1c88>
  42035c:	ldr	x0, [sp, #264]
  420360:	ldr	x24, [x0, #24]
  420364:	cbz	x24, 420440 <parse_file_seq@@Base+0x1cb0>
  420368:	mov	x21, x24
  42036c:	add	x27, x26, #0x1
  420370:	ldr	x20, [x21, #8]
  420374:	cbz	x20, 42050c <parse_file_seq@@Base+0x1d7c>
  420378:	ldrb	w22, [x20]
  42037c:	mov	x23, x20
  420380:	cmp	w22, #0x2e
  420384:	b.eq	42039c <parse_file_seq@@Base+0x1c0c>  // b.none
  420388:	cmp	x26, x23
  42038c:	b.eq	420418 <parse_file_seq@@Base+0x1c88>  // b.none
  420390:	cmp	w25, w22
  420394:	b.eq	420524 <parse_file_seq@@Base+0x1d94>  // b.none
  420398:	cbz	x20, 42048c <parse_file_seq@@Base+0x1cfc>
  42039c:	add	x0, x20, #0x1
  4203a0:	mov	x28, x24
  4203a4:	str	x0, [sp, #280]
  4203a8:	b	4203ec <parse_file_seq@@Base+0x1c5c>
  4203ac:	mov	x0, x20
  4203b0:	bl	406680 <strlen@plt>
  4203b4:	mov	x1, x20
  4203b8:	mov	x19, x0
  4203bc:	mov	x2, x0
  4203c0:	mov	x0, x26
  4203c4:	bl	406930 <strncmp@plt>
  4203c8:	cbnz	w0, 4203e4 <parse_file_seq@@Base+0x1c54>
  4203cc:	add	x0, x26, x19
  4203d0:	cmp	x0, x23
  4203d4:	b.eq	420418 <parse_file_seq@@Base+0x1c88>  // b.none
  4203d8:	ldrb	w0, [x26, x19]
  4203dc:	cmp	w0, w22
  4203e0:	b.eq	420400 <parse_file_seq@@Base+0x1c70>  // b.none
  4203e4:	ldr	x28, [x28]
  4203e8:	cbz	x28, 420438 <parse_file_seq@@Base+0x1ca8>
  4203ec:	ldr	x20, [x28, #8]
  4203f0:	cbnz	x20, 4203ac <parse_file_seq@@Base+0x1c1c>
  4203f4:	ldr	x0, [x28, #16]
  4203f8:	ldr	x20, [x0]
  4203fc:	b	4203ac <parse_file_seq@@Base+0x1c1c>
  420400:	cbz	w22, 420418 <parse_file_seq@@Base+0x1c88>
  420404:	ldr	x1, [sp, #280]
  420408:	add	x0, x19, #0x1
  42040c:	add	x0, x26, x0
  420410:	bl	406b40 <strcmp@plt>
  420414:	cbnz	w0, 4203e4 <parse_file_seq@@Base+0x1c54>
  420418:	ldr	x0, [sp, #256]
  42041c:	ldr	x0, [x0]
  420420:	str	x0, [sp, #256]
  420424:	cbnz	x0, 420328 <parse_file_seq@@Base+0x1b98>
  420428:	ldr	x22, [sp, #152]
  42042c:	ldp	x25, x23, [sp, #192]
  420430:	ldr	x28, [sp, #224]
  420434:	b	420140 <parse_file_seq@@Base+0x19b0>
  420438:	ldr	x21, [x21]
  42043c:	cbnz	x21, 420370 <parse_file_seq@@Base+0x1be0>
  420440:	mov	x2, x26
  420444:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  420448:	mov	x6, #0x0                   	// #0
  42044c:	mov	x5, #0x0                   	// #0
  420450:	mov	w4, #0x0                   	// #0
  420454:	mov	w3, #0x2                   	// #2
  420458:	mov	x1, #0xd                   	// #13
  42045c:	add	x0, x0, #0x4a0
  420460:	ldr	x22, [sp, #152]
  420464:	ldp	x25, x23, [sp, #192]
  420468:	ldr	x28, [sp, #224]
  42046c:	bl	4253c8 <define_variable_in_set@@Base>
  420470:	b	420140 <parse_file_seq@@Base+0x19b0>
  420474:	ldr	x1, [x21, #16]
  420478:	mov	x0, x27
  42047c:	ldr	x1, [x1]
  420480:	add	x1, x1, #0x1
  420484:	bl	406b40 <strcmp@plt>
  420488:	cbz	w0, 420418 <parse_file_seq@@Base+0x1c88>
  42048c:	mov	x20, x24
  420490:	b	4204d4 <parse_file_seq@@Base+0x1d44>
  420494:	mov	x0, x28
  420498:	bl	406680 <strlen@plt>
  42049c:	mov	x1, x28
  4204a0:	mov	x19, x0
  4204a4:	mov	x2, x0
  4204a8:	mov	x0, x26
  4204ac:	bl	406930 <strncmp@plt>
  4204b0:	cbnz	w0, 4204cc <parse_file_seq@@Base+0x1d3c>
  4204b4:	add	x0, x26, x19
  4204b8:	cmp	x23, x0
  4204bc:	b.eq	420418 <parse_file_seq@@Base+0x1c88>  // b.none
  4204c0:	ldrb	w0, [x26, x19]
  4204c4:	cmp	w22, w0
  4204c8:	b.eq	4204e8 <parse_file_seq@@Base+0x1d58>  // b.none
  4204cc:	ldr	x20, [x20]
  4204d0:	cbz	x20, 420438 <parse_file_seq@@Base+0x1ca8>
  4204d4:	ldr	x28, [x20, #8]
  4204d8:	cbnz	x28, 420494 <parse_file_seq@@Base+0x1d04>
  4204dc:	ldr	x0, [x20, #16]
  4204e0:	ldr	x28, [x0]
  4204e4:	b	420494 <parse_file_seq@@Base+0x1d04>
  4204e8:	cbz	w22, 420418 <parse_file_seq@@Base+0x1c88>
  4204ec:	ldr	x1, [x21, #16]
  4204f0:	add	x0, x19, #0x1
  4204f4:	add	x0, x26, x0
  4204f8:	ldr	x1, [x1]
  4204fc:	add	x1, x1, #0x1
  420500:	bl	406b40 <strcmp@plt>
  420504:	cbnz	w0, 4204cc <parse_file_seq@@Base+0x1d3c>
  420508:	b	420418 <parse_file_seq@@Base+0x1c88>
  42050c:	ldr	x0, [x21, #16]
  420510:	ldr	x23, [x0]
  420514:	ldrb	w22, [x23]
  420518:	cmp	w22, #0x2e
  42051c:	b.ne	420388 <parse_file_seq@@Base+0x1bf8>  // b.any
  420520:	b	42048c <parse_file_seq@@Base+0x1cfc>
  420524:	cbz	w25, 420418 <parse_file_seq@@Base+0x1c88>
  420528:	cbz	x20, 420474 <parse_file_seq@@Base+0x1ce4>
  42052c:	add	x1, x20, #0x1
  420530:	mov	x0, x27
  420534:	bl	406b40 <strcmp@plt>
  420538:	cbnz	w0, 42039c <parse_file_seq@@Base+0x1c0c>
  42053c:	b	420418 <parse_file_seq@@Base+0x1c88>
  420540:	ldr	x0, [sp, #368]
  420544:	bl	406680 <strlen@plt>
  420548:	mov	x19, x0
  42054c:	mov	w2, #0x5                   	// #5
  420550:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  420554:	mov	x0, #0x0                   	// #0
  420558:	add	x1, x1, #0x4d8
  42055c:	bl	406cd0 <dcgettext@plt>
  420560:	mov	x2, x0
  420564:	ldr	x0, [sp, #176]
  420568:	mov	x1, x19
  42056c:	ldr	x3, [sp, #368]
  420570:	bl	41c0a0 <fatal@@Base>
  420574:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  420578:	mov	w2, #0x5                   	// #5
  42057c:	add	x1, x1, #0x3d8
  420580:	mov	x0, #0x0                   	// #0
  420584:	b	41ffec <parse_file_seq@@Base+0x185c>
  420588:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  42058c:	mov	w2, #0x5                   	// #5
  420590:	add	x1, x1, #0x478
  420594:	mov	x0, #0x0                   	// #0
  420598:	b	41ffec <parse_file_seq@@Base+0x185c>
  42059c:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4205a0:	mov	w2, #0x5                   	// #5
  4205a4:	add	x1, x1, #0x548
  4205a8:	mov	x0, #0x0                   	// #0
  4205ac:	b	41ffec <parse_file_seq@@Base+0x185c>
  4205b0:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4205b4:	mov	w2, #0x5                   	// #5
  4205b8:	add	x1, x1, #0x3d8
  4205bc:	b	41f7cc <parse_file_seq@@Base+0x103c>
  4205c0:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4205c4:	mov	w2, #0x5                   	// #5
  4205c8:	add	x1, x1, #0x628
  4205cc:	mov	x0, #0x0                   	// #0
  4205d0:	b	41ffec <parse_file_seq@@Base+0x185c>
  4205d4:	add	x20, sp, #0x158
  4205d8:	mov	x1, #0x0                   	// #0
  4205dc:	add	x19, sp, #0x170
  4205e0:	str	x20, [sp, #256]
  4205e4:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  4205e8:	mov	x22, x0
  4205ec:	mov	x1, x20
  4205f0:	mov	x0, x19
  4205f4:	str	x22, [sp, #368]
  4205f8:	bl	41ac78 <find_next_token@@Base>
  4205fc:	mov	x20, x0
  420600:	cbz	x0, 420684 <parse_file_seq@@Base+0x1ef4>
  420604:	cmp	w21, #0x75
  420608:	adrp	x21, 42d000 <_IO_stdin_used@@Base+0x40e0>
  42060c:	cset	w23, eq  // eq = none
  420610:	add	x21, x21, #0xed0
  420614:	ldr	x24, [sp, #256]
  420618:	b	42063c <parse_file_seq@@Base+0x1eac>
  42061c:	ldrb	w3, [x0, #47]
  420620:	mov	x1, x24
  420624:	mov	x0, x19
  420628:	bfi	w3, w23, #5, #2
  42062c:	strb	w3, [x2, #47]
  420630:	bl	41ac78 <find_next_token@@Base>
  420634:	mov	x20, x0
  420638:	cbz	x0, 420684 <parse_file_seq@@Base+0x1ef4>
  42063c:	ldr	x1, [sp, #344]
  420640:	mov	x0, x20
  420644:	bl	4257c8 <lookup_variable@@Base>
  420648:	mov	x2, x0
  42064c:	cbnz	x0, 42061c <parse_file_seq@@Base+0x1e8c>
  420650:	ldr	x6, [sp, #176]
  420654:	mov	x2, x21
  420658:	ldr	x1, [sp, #344]
  42065c:	mov	w3, #0x2                   	// #2
  420660:	mov	x0, x20
  420664:	mov	x5, #0x0                   	// #0
  420668:	mov	w4, #0x0                   	// #0
  42066c:	bl	4253c8 <define_variable_in_set@@Base>
  420670:	mov	x2, x0
  420674:	mov	x1, x24
  420678:	mov	x0, x19
  42067c:	ldrb	w3, [x2, #47]
  420680:	b	420628 <parse_file_seq@@Base+0x1e98>
  420684:	mov	x0, x22
  420688:	str	wzr, [sp, #136]
  42068c:	bl	406b90 <free@plt>
  420690:	b	41f934 <parse_file_seq@@Base+0x11a4>
  420694:	nop
  420698:	stp	x29, x30, [sp, #-160]!
  42069c:	mov	x29, sp
  4206a0:	stp	x19, x20, [sp, #16]
  4206a4:	mov	x20, x0
  4206a8:	mov	x0, #0x40                  	// #64
  4206ac:	stp	x21, x22, [sp, #32]
  4206b0:	stp	x23, x24, [sp, #48]
  4206b4:	and	w24, w1, #0xffff
  4206b8:	adrp	x23, 448000 <output_context@@Base+0x1208>
  4206bc:	stp	x25, x26, [sp, #64]
  4206c0:	bl	41ab50 <xcalloc@@Base>
  4206c4:	add	x23, x23, #0xe10
  4206c8:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4206cc:	mov	x22, x0
  4206d0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4206d4:	and	w19, w24, #0x8
  4206d8:	ldr	q0, [x1, #1840]
  4206dc:	ldr	w0, [x0, #1152]
  4206e0:	ldr	x1, [x23, #32]
  4206e4:	str	x1, [x22]
  4206e8:	str	x22, [x23, #32]
  4206ec:	str	x20, [sp, #136]
  4206f0:	str	q0, [sp, #144]
  4206f4:	tbnz	w0, #1, 420868 <parse_file_seq@@Base+0x20d8>
  4206f8:	mov	x25, #0x0                   	// #0
  4206fc:	cbnz	w19, 42070c <parse_file_seq@@Base+0x1f7c>
  420700:	ldrb	w0, [x20]
  420704:	cmp	w0, #0x7e
  420708:	b.eq	4209bc <parse_file_seq@@Base+0x222c>  // b.none
  42070c:	adrp	x21, 429000 <_IO_stdin_used@@Base+0xe0>
  420710:	bl	406d70 <__errno_location@plt>
  420714:	add	x21, x21, #0x720
  420718:	mov	x19, x0
  42071c:	b	420728 <parse_file_seq@@Base+0x1f98>
  420720:	cmp	w1, #0x4
  420724:	b.ne	420824 <parse_file_seq@@Base+0x2094>  // b.any
  420728:	str	wzr, [x19]
  42072c:	mov	x1, x21
  420730:	mov	x0, x20
  420734:	bl	4068b0 <fopen@plt>
  420738:	str	x0, [sp, #128]
  42073c:	ldr	w1, [x19]
  420740:	cbz	x0, 420720 <parse_file_seq@@Base+0x1f90>
  420744:	str	w1, [x22, #36]
  420748:	cmp	w1, #0xc
  42074c:	b.eq	42083c <parse_file_seq@@Base+0x20ac>  // b.none
  420750:	sub	w0, w1, #0x17
  420754:	cmp	w0, #0x1
  420758:	b.ls	42083c <parse_file_seq@@Base+0x20ac>  // b.plast
  42075c:	mov	x0, x20
  420760:	bl	424940 <strcache_add@@Base>
  420764:	mov	x20, x0
  420768:	bl	40ced8 <lookup_file@@Base>
  42076c:	str	x0, [x22, #16]
  420770:	cbz	x0, 4209d4 <parse_file_seq@@Base+0x2244>
  420774:	ldr	x21, [x0]
  420778:	strb	w24, [x22, #32]
  42077c:	mov	x0, x25
  420780:	bl	406b90 <free@plt>
  420784:	ldr	x0, [sp, #128]
  420788:	cbz	x0, 4208a4 <parse_file_seq@@Base+0x2114>
  42078c:	str	wzr, [x22, #36]
  420790:	add	x20, sp, #0x88
  420794:	bl	406850 <fileno@plt>
  420798:	bl	4286f0 <fd_noinherit@@Base>
  42079c:	mov	x2, x21
  4207a0:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4207a4:	add	x1, x1, #0x6a8
  4207a8:	mov	w5, #0x0                   	// #0
  4207ac:	mov	w4, #0x6                   	// #6
  4207b0:	mov	w3, #0x2                   	// #2
  4207b4:	mov	x0, x20
  4207b8:	bl	4264b0 <do_variable_definition@@Base>
  4207bc:	mov	x0, #0xc8                  	// #200
  4207c0:	str	x0, [sp, #120]
  4207c4:	bl	41ab28 <xmalloc@@Base>
  4207c8:	fmov	d0, x0
  4207cc:	mvn	w1, w24
  4207d0:	add	x0, sp, #0x60
  4207d4:	str	d0, [sp, #112]
  4207d8:	and	w1, w1, #0x1
  4207dc:	dup	v0.2d, v0.d[0]
  4207e0:	ldr	x21, [x23, #40]
  4207e4:	str	x20, [x23, #40]
  4207e8:	str	q0, [sp, #96]
  4207ec:	bl	41eda8 <parse_file_seq@@Base+0x618>
  4207f0:	ldr	x0, [sp, #128]
  4207f4:	str	x21, [x23, #40]
  4207f8:	bl	406890 <fclose@plt>
  4207fc:	ldr	x0, [sp, #112]
  420800:	bl	406b90 <free@plt>
  420804:	str	wzr, [x19]
  420808:	mov	x0, x22
  42080c:	ldp	x19, x20, [sp, #16]
  420810:	ldp	x21, x22, [sp, #32]
  420814:	ldp	x23, x24, [sp, #48]
  420818:	ldp	x25, x26, [sp, #64]
  42081c:	ldp	x29, x30, [sp], #160
  420820:	ret
  420824:	str	w1, [x22, #36]
  420828:	cmp	w1, #0xc
  42082c:	b.eq	42083c <parse_file_seq@@Base+0x20ac>  // b.none
  420830:	sub	w0, w1, #0x17
  420834:	cmp	w0, #0x1
  420838:	b.hi	4208d4 <parse_file_seq@@Base+0x2144>  // b.pmore
  42083c:	mov	w0, w1
  420840:	stp	x27, x28, [sp, #80]
  420844:	bl	406a40 <strerror@plt>
  420848:	mov	x19, x0
  42084c:	bl	406680 <strlen@plt>
  420850:	mov	x1, x0
  420854:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  420858:	ldr	x0, [x23, #40]
  42085c:	mov	x3, x19
  420860:	add	x2, x2, #0xff0
  420864:	bl	41c0a0 <fatal@@Base>
  420868:	mov	w2, #0x5                   	// #5
  42086c:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  420870:	mov	x0, #0x0                   	// #0
  420874:	add	x1, x1, #0x638
  420878:	bl	406cd0 <dcgettext@plt>
  42087c:	mov	x1, x20
  420880:	bl	406d60 <printf@plt>
  420884:	tbnz	w24, #0, 42099c <parse_file_seq@@Base+0x220c>
  420888:	tbnz	w24, #1, 42097c <parse_file_seq@@Base+0x21ec>
  42088c:	tbnz	w24, #2, 420944 <parse_file_seq@@Base+0x21b4>
  420890:	cbnz	w19, 420960 <parse_file_seq@@Base+0x21d0>
  420894:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  420898:	add	x0, x0, #0x760
  42089c:	bl	406ae0 <puts@plt>
  4208a0:	b	4206f8 <parse_file_seq@@Base+0x1f68>
  4208a4:	ldr	x0, [x22, #16]
  4208a8:	mov	x1, #0x1                   	// #1
  4208ac:	ldr	w2, [x22, #36]
  4208b0:	str	w2, [x19]
  4208b4:	str	x1, [x0, #112]
  4208b8:	mov	x0, x22
  4208bc:	ldp	x19, x20, [sp, #16]
  4208c0:	ldp	x21, x22, [sp, #32]
  4208c4:	ldp	x23, x24, [sp, #48]
  4208c8:	ldp	x25, x26, [sp, #64]
  4208cc:	ldp	x29, x30, [sp], #160
  4208d0:	ret
  4208d4:	tbz	w24, #1, 42075c <parse_file_seq@@Base+0x1fcc>
  4208d8:	ldrb	w0, [x20]
  4208dc:	cmp	w0, #0x2f
  4208e0:	b.eq	42075c <parse_file_seq@@Base+0x1fcc>  // b.none
  4208e4:	ldr	x0, [x23, #8]
  4208e8:	ldr	x1, [x0]
  4208ec:	cbz	x1, 42075c <parse_file_seq@@Base+0x1fcc>
  4208f0:	stp	x27, x28, [sp, #80]
  4208f4:	adrp	x27, 42a000 <_IO_stdin_used@@Base+0x10e0>
  4208f8:	mov	w28, #0x0                   	// #0
  4208fc:	add	x27, x27, #0x428
  420900:	b	420914 <parse_file_seq@@Base+0x2184>
  420904:	ldr	x0, [x23, #8]
  420908:	add	w28, w28, #0x1
  42090c:	ldr	x1, [x0, w28, uxtw #3]
  420910:	cbz	x1, 42093c <parse_file_seq@@Base+0x21ac>
  420914:	mov	x3, x20
  420918:	mov	x2, x27
  42091c:	mov	w0, #0x3                   	// #3
  420920:	bl	41a930 <concat@@Base>
  420924:	mov	x1, x21
  420928:	mov	x26, x0
  42092c:	bl	4068b0 <fopen@plt>
  420930:	str	x0, [sp, #128]
  420934:	cbz	x0, 420904 <parse_file_seq@@Base+0x2174>
  420938:	mov	x20, x26
  42093c:	ldp	x27, x28, [sp, #80]
  420940:	b	42075c <parse_file_seq@@Base+0x1fcc>
  420944:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  420948:	add	x1, x1, #0x678
  42094c:	mov	w2, #0x5                   	// #5
  420950:	mov	x0, #0x0                   	// #0
  420954:	bl	406cd0 <dcgettext@plt>
  420958:	bl	406d60 <printf@plt>
  42095c:	cbz	w19, 420894 <parse_file_seq@@Base+0x2104>
  420960:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  420964:	add	x1, x1, #0x688
  420968:	mov	w2, #0x5                   	// #5
  42096c:	mov	x0, #0x0                   	// #0
  420970:	bl	406cd0 <dcgettext@plt>
  420974:	bl	406d60 <printf@plt>
  420978:	b	420894 <parse_file_seq@@Base+0x2104>
  42097c:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  420980:	add	x1, x1, #0x668
  420984:	mov	w2, #0x5                   	// #5
  420988:	mov	x0, #0x0                   	// #0
  42098c:	bl	406cd0 <dcgettext@plt>
  420990:	bl	406d60 <printf@plt>
  420994:	tbz	w24, #2, 420890 <parse_file_seq@@Base+0x2100>
  420998:	b	420944 <parse_file_seq@@Base+0x21b4>
  42099c:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4209a0:	add	x1, x1, #0x650
  4209a4:	mov	w2, #0x5                   	// #5
  4209a8:	mov	x0, #0x0                   	// #0
  4209ac:	bl	406cd0 <dcgettext@plt>
  4209b0:	bl	406d60 <printf@plt>
  4209b4:	tbz	w24, #1, 42088c <parse_file_seq@@Base+0x20fc>
  4209b8:	b	42097c <parse_file_seq@@Base+0x21ec>
  4209bc:	mov	x0, x20
  4209c0:	bl	41e3b0 <tilde_expand@@Base>
  4209c4:	cmp	x0, #0x0
  4209c8:	mov	x25, x0
  4209cc:	csel	x20, x20, x0, eq  // eq = none
  4209d0:	b	42070c <parse_file_seq@@Base+0x1f7c>
  4209d4:	mov	x0, x20
  4209d8:	bl	40cf50 <enter_file@@Base>
  4209dc:	str	x0, [x22, #16]
  4209e0:	b	420774 <parse_file_seq@@Base+0x1fe4>
  4209e4:	nop

00000000004209e8 <read_all_makefiles@@Base>:
  4209e8:	stp	x29, x30, [sp, #-80]!
  4209ec:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  4209f0:	mov	x6, #0x0                   	// #0
  4209f4:	mov	x29, sp
  4209f8:	ldr	x1, [x1, #336]
  4209fc:	stp	x21, x22, [sp, #32]
  420a00:	adrp	x21, 42d000 <_IO_stdin_used@@Base+0x40e0>
  420a04:	add	x21, x21, #0xed0
  420a08:	mov	w4, #0x0                   	// #0
  420a0c:	ldr	x5, [x1, #8]
  420a10:	mov	x2, x21
  420a14:	mov	w3, #0x2                   	// #2
  420a18:	mov	x1, #0xd                   	// #13
  420a1c:	stp	x19, x20, [sp, #16]
  420a20:	mov	x20, x0
  420a24:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  420a28:	add	x0, x0, #0x6a8
  420a2c:	bl	4253c8 <define_variable_in_set@@Base>
  420a30:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  420a34:	ldr	w0, [x0, #1152]
  420a38:	tbnz	w0, #0, 420ba8 <read_all_makefiles@@Base+0x1c0>
  420a3c:	adrp	x19, 449000 <commands_started@@Base+0x170>
  420a40:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  420a44:	mov	x1, #0x0                   	// #0
  420a48:	add	x0, x0, #0x6b8
  420a4c:	ldr	w22, [x19, #2144]
  420a50:	str	wzr, [x19, #2144]
  420a54:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  420a58:	str	w22, [x19, #2144]
  420a5c:	mov	x19, x0
  420a60:	str	x0, [sp, #64]
  420a64:	b	420a8c <read_all_makefiles@@Base+0xa4>
  420a68:	ldr	x1, [sp, #64]
  420a6c:	add	x3, x1, #0x1
  420a70:	ldrb	w2, [x1]
  420a74:	cbz	w2, 420a80 <read_all_makefiles@@Base+0x98>
  420a78:	str	x3, [sp, #64]
  420a7c:	strb	wzr, [x1]
  420a80:	bl	424940 <strcache_add@@Base>
  420a84:	mov	w1, #0x7                   	// #7
  420a88:	bl	420698 <parse_file_seq@@Base+0x1f08>
  420a8c:	add	x1, sp, #0x48
  420a90:	add	x0, sp, #0x40
  420a94:	bl	41ac78 <find_next_token@@Base>
  420a98:	cbnz	x0, 420a68 <read_all_makefiles@@Base+0x80>
  420a9c:	mov	x0, x19
  420aa0:	bl	406b90 <free@plt>
  420aa4:	cbz	x20, 420b48 <read_all_makefiles@@Base+0x160>
  420aa8:	ldr	x19, [x20]
  420aac:	cbz	x19, 420b48 <read_all_makefiles@@Base+0x160>
  420ab0:	str	x23, [sp, #48]
  420ab4:	bl	406d70 <__errno_location@plt>
  420ab8:	mov	x23, x0
  420abc:	mov	w22, #0x0                   	// #0
  420ac0:	mov	x0, x19
  420ac4:	mov	w1, #0x0                   	// #0
  420ac8:	bl	420698 <parse_file_seq@@Base+0x1f08>
  420acc:	mov	x19, x0
  420ad0:	ldr	w1, [x23]
  420ad4:	cbnz	w1, 420b14 <read_all_makefiles@@Base+0x12c>
  420ad8:	ldr	x1, [x19, #8]
  420adc:	cbz	x1, 420b28 <read_all_makefiles@@Base+0x140>
  420ae0:	str	x1, [x20]
  420ae4:	add	w22, w22, #0x1
  420ae8:	ldr	x19, [x20, #8]!
  420aec:	cbnz	x19, 420ac0 <read_all_makefiles@@Base+0xd8>
  420af0:	cbz	w22, 420b44 <read_all_makefiles@@Base+0x15c>
  420af4:	adrp	x0, 448000 <output_context@@Base+0x1208>
  420af8:	ldr	x23, [sp, #48]
  420afc:	ldr	x2, [x0, #3632]
  420b00:	mov	x0, x2
  420b04:	ldp	x19, x20, [sp, #16]
  420b08:	ldp	x21, x22, [sp, #32]
  420b0c:	ldp	x29, x30, [sp], #80
  420b10:	ret
  420b14:	ldr	x1, [x20]
  420b18:	mov	x0, x21
  420b1c:	bl	41bf78 <perror_with_name@@Base>
  420b20:	ldr	x1, [x19, #8]
  420b24:	cbnz	x1, 420ae0 <read_all_makefiles@@Base+0xf8>
  420b28:	ldr	x0, [x19, #16]
  420b2c:	add	w22, w22, #0x1
  420b30:	ldr	x0, [x0]
  420b34:	str	x0, [x20]
  420b38:	ldr	x19, [x20, #8]!
  420b3c:	cbnz	x19, 420ac0 <read_all_makefiles@@Base+0xd8>
  420b40:	cbnz	w22, 420af4 <read_all_makefiles@@Base+0x10c>
  420b44:	ldr	x23, [sp, #48]
  420b48:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  420b4c:	add	x22, x22, #0xd0
  420b50:	add	x19, x22, #0x40
  420b54:	ldr	x0, [x22, #64]
  420b58:	cbnz	x0, 420b68 <read_all_makefiles@@Base+0x180>
  420b5c:	b	420c90 <read_all_makefiles@@Base+0x2a8>
  420b60:	ldr	x0, [x19, #8]!
  420b64:	cbz	x0, 420bd0 <read_all_makefiles@@Base+0x1e8>
  420b68:	bl	40b470 <file_exists_p@@Base>
  420b6c:	cbz	w0, 420b60 <read_all_makefiles@@Base+0x178>
  420b70:	ldr	x0, [x19]
  420b74:	cbz	x0, 420bd0 <read_all_makefiles@@Base+0x1e8>
  420b78:	mov	w1, #0x0                   	// #0
  420b7c:	bl	420698 <parse_file_seq@@Base+0x1f08>
  420b80:	bl	406d70 <__errno_location@plt>
  420b84:	ldr	w0, [x0]
  420b88:	cbnz	w0, 420c80 <read_all_makefiles@@Base+0x298>
  420b8c:	adrp	x0, 448000 <output_context@@Base+0x1208>
  420b90:	ldp	x19, x20, [sp, #16]
  420b94:	ldr	x2, [x0, #3632]
  420b98:	ldp	x21, x22, [sp, #32]
  420b9c:	mov	x0, x2
  420ba0:	ldp	x29, x30, [sp], #80
  420ba4:	ret
  420ba8:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  420bac:	add	x1, x1, #0x6a0
  420bb0:	mov	w2, #0x5                   	// #5
  420bb4:	mov	x0, #0x0                   	// #0
  420bb8:	bl	406cd0 <dcgettext@plt>
  420bbc:	bl	406d60 <printf@plt>
  420bc0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  420bc4:	ldr	x0, [x0, #440]
  420bc8:	bl	406c20 <fflush@plt>
  420bcc:	b	420a3c <read_all_makefiles@@Base+0x54>
  420bd0:	ldr	x0, [x22, #64]
  420bd4:	str	x23, [sp, #48]
  420bd8:	adrp	x23, 448000 <output_context@@Base+0x1208>
  420bdc:	add	x23, x23, #0xe10
  420be0:	ldr	x2, [x23, #32]
  420be4:	mov	x20, x2
  420be8:	cbz	x20, 420c00 <read_all_makefiles@@Base+0x218>
  420bec:	nop
  420bf0:	ldr	x1, [x20]
  420bf4:	cbz	x1, 420c48 <read_all_makefiles@@Base+0x260>
  420bf8:	mov	x20, x1
  420bfc:	cbnz	x20, 420bf0 <read_all_makefiles@@Base+0x208>
  420c00:	cbz	x0, 420c98 <read_all_makefiles@@Base+0x2b0>
  420c04:	add	x21, x22, #0x40
  420c08:	mov	w22, #0x4                   	// #4
  420c0c:	nop
  420c10:	mov	x0, #0x40                  	// #64
  420c14:	bl	41ab50 <xcalloc@@Base>
  420c18:	mov	x19, x0
  420c1c:	ldr	x0, [x21]
  420c20:	bl	424940 <strcache_add@@Base>
  420c24:	bl	40cf50 <enter_file@@Base>
  420c28:	str	x0, [x19, #16]
  420c2c:	strb	w22, [x19, #32]
  420c30:	ldr	x0, [x21, #8]!
  420c34:	cbz	x20, 420c70 <read_all_makefiles@@Base+0x288>
  420c38:	str	x19, [x20]
  420c3c:	cbz	x0, 420c50 <read_all_makefiles@@Base+0x268>
  420c40:	mov	x20, x19
  420c44:	b	420c10 <read_all_makefiles@@Base+0x228>
  420c48:	mov	x19, x20
  420c4c:	cbnz	x0, 420c04 <read_all_makefiles@@Base+0x21c>
  420c50:	ldr	x2, [x23, #32]
  420c54:	ldr	x23, [sp, #48]
  420c58:	str	xzr, [x19]
  420c5c:	mov	x0, x2
  420c60:	ldp	x19, x20, [sp, #16]
  420c64:	ldp	x21, x22, [sp, #32]
  420c68:	ldp	x29, x30, [sp], #80
  420c6c:	ret
  420c70:	str	x19, [x23, #32]
  420c74:	cbz	x0, 420c50 <read_all_makefiles@@Base+0x268>
  420c78:	mov	x20, x19
  420c7c:	b	420c10 <read_all_makefiles@@Base+0x228>
  420c80:	ldr	x1, [x19]
  420c84:	mov	x0, x21
  420c88:	bl	41bf78 <perror_with_name@@Base>
  420c8c:	b	420b8c <read_all_makefiles@@Base+0x1a4>
  420c90:	str	x23, [sp, #48]
  420c94:	b	420bd8 <read_all_makefiles@@Base+0x1f0>
  420c98:	ldr	x23, [sp, #48]
  420c9c:	b	420b00 <read_all_makefiles@@Base+0x118>

0000000000420ca0 <eval_buffer@@Base>:
  420ca0:	stp	x29, x30, [sp, #-160]!
  420ca4:	mov	x29, sp
  420ca8:	str	d8, [sp, #56]
  420cac:	fmov	d8, x0
  420cb0:	stp	x19, x20, [sp, #16]
  420cb4:	mov	x20, x1
  420cb8:	adrp	x19, 448000 <output_context@@Base+0x1208>
  420cbc:	stp	x21, x22, [sp, #32]
  420cc0:	add	x19, x19, #0xe10
  420cc4:	str	x23, [sp, #48]
  420cc8:	bl	406680 <strlen@plt>
  420ccc:	dup	v0.2d, v8.d[0]
  420cd0:	str	d8, [sp, #112]
  420cd4:	stp	x0, xzr, [sp, #120]
  420cd8:	ldr	x22, [x19, #40]
  420cdc:	str	q0, [sp, #96]
  420ce0:	cbz	x20, 420d58 <eval_buffer@@Base+0xb8>
  420ce4:	ldp	x0, x1, [x20]
  420ce8:	stp	x0, x1, [sp, #136]
  420cec:	ldr	x0, [x20, #16]
  420cf0:	str	x0, [sp, #152]
  420cf4:	add	x2, sp, #0x88
  420cf8:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  420cfc:	add	x0, sp, #0x48
  420d00:	add	x1, sp, #0x60
  420d04:	ldr	x23, [x20, #208]
  420d08:	str	x0, [x20, #208]
  420d0c:	mov	x0, x1
  420d10:	mov	w1, #0x1                   	// #1
  420d14:	str	x2, [x19, #40]
  420d18:	stp	xzr, xzr, [sp, #72]
  420d1c:	str	xzr, [sp, #88]
  420d20:	bl	41eda8 <parse_file_seq@@Base+0x618>
  420d24:	ldr	x21, [x20, #208]
  420d28:	ldr	x0, [x21, #8]
  420d2c:	bl	406b90 <free@plt>
  420d30:	ldr	x0, [x21, #16]
  420d34:	bl	406b90 <free@plt>
  420d38:	str	x23, [x20, #208]
  420d3c:	str	x22, [x19, #40]
  420d40:	ldp	x19, x20, [sp, #16]
  420d44:	ldp	x21, x22, [sp, #32]
  420d48:	ldr	x23, [sp, #48]
  420d4c:	ldr	d8, [sp, #56]
  420d50:	ldp	x29, x30, [sp], #160
  420d54:	ret
  420d58:	cbz	x22, 420d70 <eval_buffer@@Base+0xd0>
  420d5c:	ldp	x0, x1, [x22]
  420d60:	stp	x0, x1, [sp, #136]
  420d64:	ldr	x0, [x22, #16]
  420d68:	str	x0, [sp, #152]
  420d6c:	b	420cf4 <eval_buffer@@Base+0x54>
  420d70:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  420d74:	str	xzr, [sp, #136]
  420d78:	ldr	q0, [x0, #1840]
  420d7c:	str	q0, [sp, #144]
  420d80:	b	420cf4 <eval_buffer@@Base+0x54>
  420d84:	nop
  420d88:	mov	x12, #0x20c0                	// #8384
  420d8c:	sub	sp, sp, x12
  420d90:	stp	x29, x30, [sp]
  420d94:	mov	x29, sp
  420d98:	stp	x19, x20, [sp, #16]
  420d9c:	mov	x19, x0
  420da0:	str	x21, [sp, #32]
  420da4:	b	420db8 <eval_buffer@@Base+0x118>
  420da8:	bl	406d70 <__errno_location@plt>
  420dac:	ldr	w1, [x0]
  420db0:	cmp	w1, #0x4
  420db4:	b.ne	420e24 <eval_buffer@@Base+0x184>  // b.any
  420db8:	add	x2, sp, #0x30
  420dbc:	mov	x1, x19
  420dc0:	mov	w0, #0x0                   	// #0
  420dc4:	bl	406d90 <__xstat@plt>
  420dc8:	cmn	w0, #0x1
  420dcc:	b.eq	420da8 <eval_buffer@@Base+0x108>  // b.none
  420dd0:	cbnz	w0, 420e1c <eval_buffer@@Base+0x17c>
  420dd4:	ldp	x1, x2, [sp, #136]
  420dd8:	mov	x0, x19
  420ddc:	bl	40e500 <file_timestamp_cons@@Base>
  420de0:	mov	x21, x0
  420de4:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  420de8:	ldr	w0, [x0, #3480]
  420dec:	cbz	w0, 420e00 <eval_buffer@@Base+0x160>
  420df0:	mov	x0, x19
  420df4:	bl	406680 <strlen@plt>
  420df8:	cmp	x0, #0x1, lsl #12
  420dfc:	b.ls	420e50 <eval_buffer@@Base+0x1b0>  // b.plast
  420e00:	mov	x0, x21
  420e04:	mov	x12, #0x20c0                	// #8384
  420e08:	ldp	x29, x30, [sp]
  420e0c:	ldp	x19, x20, [sp, #16]
  420e10:	ldr	x21, [sp, #32]
  420e14:	add	sp, sp, x12
  420e18:	ret
  420e1c:	bl	406d70 <__errno_location@plt>
  420e20:	ldr	w1, [x0]
  420e24:	cmp	w1, #0x2
  420e28:	mov	x21, #0x1                   	// #1
  420e2c:	ccmp	w1, #0x14, #0x4, ne  // ne = any
  420e30:	b.ne	420f88 <eval_buffer@@Base+0x2e8>  // b.any
  420e34:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  420e38:	ldr	w0, [x0, #3480]
  420e3c:	cbz	w0, 420e00 <eval_buffer@@Base+0x160>
  420e40:	mov	x0, x19
  420e44:	bl	406680 <strlen@plt>
  420e48:	cmp	x0, #0x1, lsl #12
  420e4c:	b.hi	420e00 <eval_buffer@@Base+0x160>  // b.pmore
  420e50:	add	x20, sp, #0xb0
  420e54:	add	x2, x0, #0x1
  420e58:	mov	x1, x19
  420e5c:	mov	x0, x20
  420e60:	bl	406640 <memcpy@plt>
  420e64:	nop
  420e68:	add	x2, sp, #0x30
  420e6c:	mov	x1, x20
  420e70:	mov	w0, #0x0                   	// #0
  420e74:	bl	406c60 <__lxstat@plt>
  420e78:	cmn	w0, #0x1
  420e7c:	b.eq	420f44 <eval_buffer@@Base+0x2a4>  // b.none
  420e80:	cbnz	w0, 420fc8 <eval_buffer@@Base+0x328>
  420e84:	ldr	w0, [sp, #64]
  420e88:	and	w0, w0, #0xf000
  420e8c:	cmp	w0, #0xa, lsl #12
  420e90:	b.ne	420e00 <eval_buffer@@Base+0x160>  // b.any
  420e94:	ldp	x1, x2, [sp, #136]
  420e98:	mov	x0, x20
  420e9c:	bl	40e500 <file_timestamp_cons@@Base>
  420ea0:	cmp	x21, x0
  420ea4:	csel	x21, x21, x0, cs  // cs = hs, nlast
  420ea8:	b	420ebc <eval_buffer@@Base+0x21c>
  420eac:	bl	406d70 <__errno_location@plt>
  420eb0:	ldr	w1, [x0]
  420eb4:	cmp	w1, #0x4
  420eb8:	b.ne	420fb4 <eval_buffer@@Base+0x314>  // b.any
  420ebc:	mov	x4, #0x10b8                	// #4280
  420ec0:	mov	x0, x20
  420ec4:	add	x1, sp, x4
  420ec8:	mov	x2, #0x1000                	// #4096
  420ecc:	bl	406720 <readlink@plt>
  420ed0:	mov	x19, x0
  420ed4:	cmn	x0, #0x1
  420ed8:	b.eq	420eac <eval_buffer@@Base+0x20c>  // b.none
  420edc:	tbnz	x0, #63, 420fb4 <eval_buffer@@Base+0x314>
  420ee0:	mov	x3, #0x10b8                	// #4280
  420ee4:	add	x0, sp, x3
  420ee8:	strb	wzr, [x0, x19]
  420eec:	add	x0, sp, #0x1, lsl #12
  420ef0:	ldrb	w0, [x0, #184]
  420ef4:	cmp	w0, #0x2f
  420ef8:	b.eq	420f74 <eval_buffer@@Base+0x2d4>  // b.none
  420efc:	mov	x0, x20
  420f00:	mov	w1, #0x2f                  	// #47
  420f04:	bl	406a70 <strrchr@plt>
  420f08:	cbz	x0, 420f74 <eval_buffer@@Base+0x2d4>
  420f0c:	sub	x1, x0, x20
  420f10:	add	x19, x1, x19
  420f14:	cmp	x19, #0xffe
  420f18:	b.gt	420e00 <eval_buffer@@Base+0x160>
  420f1c:	add	x0, x0, #0x1
  420f20:	mov	x1, #0x10b8                	// #4280
  420f24:	add	x1, sp, x1
  420f28:	bl	406c30 <strcpy@plt>
  420f2c:	add	x2, sp, #0x30
  420f30:	mov	x1, x20
  420f34:	mov	w0, #0x0                   	// #0
  420f38:	bl	406c60 <__lxstat@plt>
  420f3c:	cmn	w0, #0x1
  420f40:	b.ne	420e80 <eval_buffer@@Base+0x1e0>  // b.any
  420f44:	bl	406d70 <__errno_location@plt>
  420f48:	ldr	w0, [x0]
  420f4c:	cmp	w0, #0x4
  420f50:	b.eq	420e68 <eval_buffer@@Base+0x1c8>  // b.none
  420f54:	cmp	w0, #0x2
  420f58:	ccmp	w0, #0x14, #0x4, ne  // ne = any
  420f5c:	b.eq	420e00 <eval_buffer@@Base+0x160>  // b.none
  420f60:	mov	x1, x20
  420f64:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  420f68:	add	x0, x0, #0x740
  420f6c:	bl	41bf78 <perror_with_name@@Base>
  420f70:	b	420e00 <eval_buffer@@Base+0x160>
  420f74:	mov	x2, #0x10b8                	// #4280
  420f78:	mov	x0, x20
  420f7c:	add	x1, sp, x2
  420f80:	bl	406c30 <strcpy@plt>
  420f84:	b	420e68 <eval_buffer@@Base+0x1c8>
  420f88:	mov	x1, x19
  420f8c:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  420f90:	add	x0, x0, #0x860
  420f94:	bl	41bf78 <perror_with_name@@Base>
  420f98:	mov	x0, x21
  420f9c:	mov	x12, #0x20c0                	// #8384
  420fa0:	ldp	x29, x30, [sp]
  420fa4:	ldp	x19, x20, [sp, #16]
  420fa8:	ldr	x21, [sp, #32]
  420fac:	add	sp, sp, x12
  420fb0:	ret
  420fb4:	mov	x1, x20
  420fb8:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  420fbc:	add	x0, x0, #0x748
  420fc0:	bl	41bf78 <perror_with_name@@Base>
  420fc4:	b	420e00 <eval_buffer@@Base+0x160>
  420fc8:	bl	406d70 <__errno_location@plt>
  420fcc:	ldr	w0, [x0]
  420fd0:	b	420f54 <eval_buffer@@Base+0x2b4>
  420fd4:	nop

0000000000420fd8 <show_goal_error@@Base>:
  420fd8:	adrp	x0, 448000 <output_context@@Base+0x1208>
  420fdc:	add	x2, x0, #0xe58
  420fe0:	ldr	x1, [x0, #3672]
  420fe4:	ldrb	w0, [x1, #32]
  420fe8:	and	w0, w0, #0x6
  420fec:	cmp	w0, #0x2
  420ff0:	b.ne	421038 <show_goal_error@@Base+0x60>  // b.any
  420ff4:	stp	x29, x30, [sp, #-48]!
  420ff8:	mov	x29, sp
  420ffc:	stp	x19, x20, [sp, #16]
  421000:	ldr	x19, [x2, #8]
  421004:	cbz	x19, 42102c <show_goal_error@@Base+0x54>
  421008:	ldr	x1, [x1, #16]
  42100c:	b	421018 <show_goal_error@@Base+0x40>
  421010:	ldr	x19, [x19]
  421014:	cbz	x19, 42102c <show_goal_error@@Base+0x54>
  421018:	ldr	x0, [x19, #16]
  42101c:	cmp	x1, x0
  421020:	b.ne	421010 <show_goal_error@@Base+0x38>  // b.any
  421024:	ldr	w20, [x19, #36]
  421028:	cbnz	w20, 42103c <show_goal_error@@Base+0x64>
  42102c:	ldp	x19, x20, [sp, #16]
  421030:	ldp	x29, x30, [sp], #48
  421034:	ret
  421038:	ret
  42103c:	ldr	x0, [x1]
  421040:	str	x21, [sp, #32]
  421044:	bl	406680 <strlen@plt>
  421048:	mov	x21, x0
  42104c:	mov	w0, w20
  421050:	bl	406a40 <strerror@plt>
  421054:	bl	406680 <strlen@plt>
  421058:	add	x20, x21, x0
  42105c:	ldr	x1, [x19, #16]
  421060:	ldr	w0, [x19, #36]
  421064:	ldr	x21, [x1]
  421068:	bl	406a40 <strerror@plt>
  42106c:	mov	x4, x0
  421070:	mov	x3, x21
  421074:	mov	x1, x20
  421078:	add	x0, x19, #0x28
  42107c:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x20e0>
  421080:	add	x2, x2, #0x710
  421084:	bl	41bd88 <error@@Base>
  421088:	ldr	x21, [sp, #32]
  42108c:	str	wzr, [x19, #36]
  421090:	b	42102c <show_goal_error@@Base+0x54>
  421094:	nop
  421098:	stp	x29, x30, [sp, #-32]!
  42109c:	mov	x29, sp
  4210a0:	stp	x19, x20, [sp, #16]
  4210a4:	mov	x19, x0
  4210a8:	ldr	x1, [x19, #24]
  4210ac:	cbz	x1, 4210dc <show_goal_error@@Base+0x104>
  4210b0:	ldr	x2, [x1, #16]
  4210b4:	ldrb	w3, [x2, #137]
  4210b8:	tbz	w3, #2, 4210d4 <show_goal_error@@Base+0xfc>
  4210bc:	ldrb	w3, [x2, #136]
  4210c0:	and	w3, w3, #0x3
  4210c4:	cmp	w3, #0x1
  4210c8:	b.ls	4210d4 <show_goal_error@@Base+0xfc>  // b.plast
  4210cc:	ldrb	w0, [x19, #138]
  4210d0:	tbnz	w0, #3, 42116c <show_goal_error@@Base+0x194>
  4210d4:	ldr	x1, [x1]
  4210d8:	cbnz	x1, 4210b0 <show_goal_error@@Base+0xd8>
  4210dc:	bl	420fd8 <show_goal_error@@Base>
  4210e0:	ldr	x20, [x19, #96]
  4210e4:	cbz	x20, 421174 <show_goal_error@@Base+0x19c>
  4210e8:	ldr	x0, [x19]
  4210ec:	bl	406680 <strlen@plt>
  4210f0:	mov	x1, x0
  4210f4:	ldr	x0, [x20]
  4210f8:	mov	x20, x1
  4210fc:	bl	406680 <strlen@plt>
  421100:	add	x20, x20, x0
  421104:	mov	w2, #0x5                   	// #5
  421108:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  42110c:	mov	x0, #0x0                   	// #0
  421110:	add	x1, x1, #0x758
  421114:	bl	406cd0 <dcgettext@plt>
  421118:	mov	x2, x0
  42111c:	adrp	x1, 449000 <commands_started@@Base+0x170>
  421120:	add	x20, x20, #0x4
  421124:	ldr	w0, [x1, #2084]
  421128:	cbz	w0, 4211e0 <show_goal_error@@Base+0x208>
  42112c:	ldr	x0, [x19, #96]
  421130:	adrp	x6, 42a000 <_IO_stdin_used@@Base+0x10e0>
  421134:	ldr	x4, [x19]
  421138:	adrp	x3, 42d000 <_IO_stdin_used@@Base+0x40e0>
  42113c:	ldr	x5, [x0]
  421140:	mov	x1, x20
  421144:	add	x6, x6, #0x690
  421148:	add	x3, x3, #0xfc0
  42114c:	mov	x0, #0x0                   	// #0
  421150:	bl	41bd88 <error@@Base>
  421154:	ldrb	w0, [x19, #138]
  421158:	and	w0, w0, #0xfffffff7
  42115c:	strb	w0, [x19, #138]
  421160:	ldp	x19, x20, [sp, #16]
  421164:	ldp	x29, x30, [sp], #32
  421168:	ret
  42116c:	mov	x19, x2
  421170:	b	4210a8 <show_goal_error@@Base+0xd0>
  421174:	ldr	x0, [x19]
  421178:	bl	406680 <strlen@plt>
  42117c:	add	x20, x0, #0x4
  421180:	mov	w2, #0x5                   	// #5
  421184:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  421188:	mov	x0, #0x0                   	// #0
  42118c:	add	x1, x1, #0x788
  421190:	bl	406cd0 <dcgettext@plt>
  421194:	mov	x2, x0
  421198:	adrp	x1, 449000 <commands_started@@Base+0x170>
  42119c:	ldr	x4, [x19]
  4211a0:	ldr	w0, [x1, #2084]
  4211a4:	cbz	w0, 4211c8 <show_goal_error@@Base+0x1f0>
  4211a8:	mov	x1, x20
  4211ac:	adrp	x5, 42a000 <_IO_stdin_used@@Base+0x10e0>
  4211b0:	adrp	x3, 42d000 <_IO_stdin_used@@Base+0x40e0>
  4211b4:	add	x5, x5, #0x690
  4211b8:	add	x3, x3, #0xfc0
  4211bc:	mov	x0, #0x0                   	// #0
  4211c0:	bl	41bd88 <error@@Base>
  4211c4:	b	421154 <show_goal_error@@Base+0x17c>
  4211c8:	adrp	x5, 42d000 <_IO_stdin_used@@Base+0x40e0>
  4211cc:	add	x5, x5, #0xed0
  4211d0:	mov	x1, x20
  4211d4:	mov	x3, x5
  4211d8:	mov	x0, #0x0                   	// #0
  4211dc:	bl	41c0a0 <fatal@@Base>
  4211e0:	ldr	x0, [x19, #96]
  4211e4:	adrp	x6, 42d000 <_IO_stdin_used@@Base+0x40e0>
  4211e8:	ldr	x4, [x19]
  4211ec:	add	x6, x6, #0xed0
  4211f0:	ldr	x5, [x0]
  4211f4:	mov	x1, x20
  4211f8:	mov	x3, x6
  4211fc:	mov	x0, #0x0                   	// #0
  421200:	bl	41c0a0 <fatal@@Base>
  421204:	nop

0000000000421208 <f_mtime@@Base>:
  421208:	stp	x29, x30, [sp, #-288]!
  42120c:	mov	x29, sp
  421210:	stp	x25, x26, [sp, #64]
  421214:	mov	x26, x0
  421218:	ldr	x0, [x0]
  42121c:	stp	x19, x20, [sp, #16]
  421220:	stp	x21, x22, [sp, #32]
  421224:	mov	w21, w1
  421228:	stp	x23, x24, [sp, #48]
  42122c:	stp	x27, x28, [sp, #80]
  421230:	bl	408bd0 <ar_name@@Base>
  421234:	cbz	w0, 421394 <f_mtime@@Base+0x18c>
  421238:	ldr	x0, [x26]
  42123c:	add	x2, x29, #0xb8
  421240:	add	x1, x29, #0xb0
  421244:	bl	408c80 <ar_parse_name@@Base>
  421248:	ldr	x0, [x29, #176]
  42124c:	bl	40ced8 <lookup_file@@Base>
  421250:	mov	x19, x0
  421254:	cbz	x0, 421494 <f_mtime@@Base+0x28c>
  421258:	mov	w1, w21
  42125c:	mov	x0, x19
  421260:	bl	421208 <f_mtime@@Base>
  421264:	str	x0, [x29, #160]
  421268:	mov	x20, x19
  42126c:	ldr	x19, [x19, #72]
  421270:	cbnz	x19, 421268 <f_mtime@@Base+0x60>
  421274:	ldr	x19, [x29, #176]
  421278:	cbz	w21, 421290 <f_mtime@@Base+0x88>
  42127c:	ldr	x21, [x20, #8]
  421280:	mov	x1, x19
  421284:	mov	x0, x21
  421288:	bl	406b40 <strcmp@plt>
  42128c:	cbnz	w0, 4214a8 <f_mtime@@Base+0x2a0>
  421290:	mov	x0, x19
  421294:	bl	406b90 <free@plt>
  421298:	ldrb	w0, [x26, #136]
  42129c:	ldr	x20, [x29, #160]
  4212a0:	orr	w0, w0, #0xffffff80
  4212a4:	strb	w0, [x26, #136]
  4212a8:	cmp	x20, #0x1
  4212ac:	b.eq	421370 <f_mtime@@Base+0x168>  // b.none
  4212b0:	ldr	x0, [x26, #8]
  4212b4:	mov	x20, #0x1                   	// #1
  4212b8:	bl	408cd8 <ar_member_date@@Base>
  4212bc:	mov	x1, x0
  4212c0:	cmn	x0, #0x1
  4212c4:	b.ne	421480 <f_mtime@@Base+0x278>  // b.any
  4212c8:	str	x20, [x29, #160]
  4212cc:	adrp	x19, 449000 <commands_started@@Base+0x170>
  4212d0:	ldr	w0, [x19, #2280]
  4212d4:	cbnz	w0, 421300 <f_mtime@@Base+0xf8>
  4212d8:	cmp	x20, #0x1
  4212dc:	ccmn	x20, #0x1, #0x4, ne  // ne = any
  4212e0:	b.eq	421300 <f_mtime@@Base+0xf8>  // b.none
  4212e4:	ldrb	w0, [x26, #137]
  4212e8:	tbnz	w0, #2, 421300 <f_mtime@@Base+0xf8>
  4212ec:	adrp	x21, 448000 <output_context@@Base+0x1208>
  4212f0:	add	x21, x21, #0xe58
  4212f4:	ldr	x0, [x21, #48]
  4212f8:	cmp	x0, x20
  4212fc:	b.cc	421550 <f_mtime@@Base+0x348>  // b.lo, b.ul, b.last
  421300:	ldr	x1, [x26, #104]
  421304:	mov	w0, #0x410c                	// #16652
  421308:	cmp	x1, #0x0
  42130c:	csel	x1, x1, x26, ne  // ne = any
  421310:	cmp	x20, #0x1
  421314:	ldrb	w4, [x1, #137]
  421318:	ubfx	x4, x4, #2, #1
  42131c:	mov	w3, w4
  421320:	b.ne	421340 <f_mtime@@Base+0x138>  // b.any
  421324:	b	42144c <f_mtime@@Base+0x244>
  421328:	cmp	w4, w3
  42132c:	b.eq	421364 <f_mtime@@Base+0x15c>  // b.none
  421330:	ldr	x1, [x1, #56]
  421334:	cbz	x1, 421370 <f_mtime@@Base+0x168>
  421338:	ldrb	w3, [x1, #137]
  42133c:	ubfx	x3, x3, #2, #1
  421340:	ldrh	w2, [x1, #136]
  421344:	and	w2, w0, w2
  421348:	cmp	w2, #0x4, lsl #12
  42134c:	b.ne	421328 <f_mtime@@Base+0x120>  // b.any
  421350:	ldrb	w2, [x1, #137]
  421354:	cmp	w4, w3
  421358:	and	w2, w2, #0xffffffbf
  42135c:	strb	w2, [x1, #137]
  421360:	b.ne	421330 <f_mtime@@Base+0x128>  // b.any
  421364:	str	x20, [x1, #112]
  421368:	ldr	x1, [x1, #56]
  42136c:	cbnz	x1, 421338 <f_mtime@@Base+0x130>
  421370:	mov	sp, x29
  421374:	mov	x0, x20
  421378:	ldp	x19, x20, [sp, #16]
  42137c:	ldp	x21, x22, [sp, #32]
  421380:	ldp	x23, x24, [sp, #48]
  421384:	ldp	x25, x26, [sp, #64]
  421388:	ldp	x27, x28, [sp, #80]
  42138c:	ldp	x29, x30, [sp], #288
  421390:	ret
  421394:	ldr	x0, [x26]
  421398:	bl	420d88 <eval_buffer@@Base+0xe8>
  42139c:	str	x0, [x29, #160]
  4213a0:	cmp	w21, #0x0
  4213a4:	mov	x20, x0
  4213a8:	ccmp	x0, #0x1, #0x0, ne  // ne = any
  4213ac:	b.ne	4212cc <f_mtime@@Base+0xc4>  // b.any
  4213b0:	ldrb	w0, [x26, #138]
  4213b4:	mov	x20, #0x1                   	// #1
  4213b8:	tbnz	w0, #1, 421300 <f_mtime@@Base+0xf8>
  4213bc:	ldr	x0, [x26]
  4213c0:	add	x1, x29, #0xa0
  4213c4:	mov	x3, #0x0                   	// #0
  4213c8:	mov	x2, #0x0                   	// #0
  4213cc:	bl	4278c0 <vpath_search@@Base>
  4213d0:	mov	x19, x0
  4213d4:	cbz	x0, 42166c <f_mtime@@Base+0x464>
  4213d8:	ldr	x0, [x29, #160]
  4213dc:	cbz	x0, 4213e4 <f_mtime@@Base+0x1dc>
  4213e0:	str	x0, [x26, #112]
  4213e4:	mov	x0, x19
  4213e8:	bl	406680 <strlen@plt>
  4213ec:	sub	x20, x0, #0x1
  4213f0:	ldr	x0, [x26]
  4213f4:	bl	406680 <strlen@plt>
  4213f8:	mov	x1, x0
  4213fc:	sub	x1, x20, x1
  421400:	mov	x0, x19
  421404:	bl	427810 <gpath_search@@Base>
  421408:	mov	x1, x19
  42140c:	cbnz	w0, 421640 <f_mtime@@Base+0x438>
  421410:	mov	x0, x26
  421414:	bl	40d088 <rehash_file@@Base>
  421418:	mov	x0, x26
  42141c:	nop
  421420:	mov	x26, x0
  421424:	ldr	x0, [x0, #72]
  421428:	cbnz	x0, 421420 <f_mtime@@Base+0x218>
  42142c:	ldr	x20, [x29, #160]
  421430:	cmp	x20, #0x2
  421434:	ccmn	x20, #0x1, #0x4, ne  // ne = any
  421438:	b.eq	4212cc <f_mtime@@Base+0xc4>  // b.none
  42143c:	mov	x0, x19
  421440:	bl	420d88 <eval_buffer@@Base+0xe8>
  421444:	mov	x20, x0
  421448:	b	4212c8 <f_mtime@@Base+0xc0>
  42144c:	mov	w0, w4
  421450:	mov	x2, x20
  421454:	b	421468 <f_mtime@@Base+0x260>
  421458:	ldr	x1, [x1, #56]
  42145c:	cbz	x1, 421370 <f_mtime@@Base+0x168>
  421460:	ldrb	w0, [x1, #137]
  421464:	ubfx	x0, x0, #2, #1
  421468:	cmp	w4, w0
  42146c:	b.ne	421458 <f_mtime@@Base+0x250>  // b.any
  421470:	str	x2, [x1, #112]
  421474:	ldr	x1, [x1, #56]
  421478:	cbnz	x1, 421460 <f_mtime@@Base+0x258>
  42147c:	b	421370 <f_mtime@@Base+0x168>
  421480:	ldr	x0, [x26, #8]
  421484:	mov	x2, #0x0                   	// #0
  421488:	bl	40e500 <file_timestamp_cons@@Base>
  42148c:	mov	x20, x0
  421490:	b	4212c8 <f_mtime@@Base+0xc0>
  421494:	ldr	x0, [x29, #176]
  421498:	bl	424940 <strcache_add@@Base>
  42149c:	bl	40cf50 <enter_file@@Base>
  4214a0:	mov	x19, x0
  4214a4:	b	421258 <f_mtime@@Base+0x50>
  4214a8:	mov	x0, x21
  4214ac:	bl	406680 <strlen@plt>
  4214b0:	ldr	x24, [x29, #184]
  4214b4:	mov	x19, x0
  4214b8:	mov	x0, x24
  4214bc:	bl	406680 <strlen@plt>
  4214c0:	mov	x1, x21
  4214c4:	add	x21, x19, x0
  4214c8:	mov	x23, x0
  4214cc:	add	x0, x21, #0x12
  4214d0:	and	x0, x0, #0xfffffffffffffff0
  4214d4:	mov	x2, x19
  4214d8:	sub	sp, sp, x0
  4214dc:	mov	x22, sp
  4214e0:	mov	x0, x22
  4214e4:	bl	406640 <memcpy@plt>
  4214e8:	add	x21, x22, x21
  4214ec:	mov	w3, #0x28                  	// #40
  4214f0:	strb	w3, [x22, x19]
  4214f4:	add	x0, x19, #0x1
  4214f8:	mov	x1, x24
  4214fc:	mov	x2, x23
  421500:	add	x0, x22, x0
  421504:	bl	406640 <memcpy@plt>
  421508:	mov	w0, #0x29                  	// #41
  42150c:	strb	w0, [x21, #1]
  421510:	strb	wzr, [x21, #2]
  421514:	ldp	x1, x0, [x20]
  421518:	cmp	x1, x0
  42151c:	mov	x0, x22
  421520:	b.eq	42182c <f_mtime@@Base+0x624>  // b.none
  421524:	bl	424940 <strcache_add@@Base>
  421528:	mov	x1, x0
  42152c:	mov	x0, x26
  421530:	bl	40d088 <rehash_file@@Base>
  421534:	nop
  421538:	mov	x0, x26
  42153c:	ldr	x26, [x26, #72]
  421540:	cbnz	x26, 421538 <f_mtime@@Base+0x330>
  421544:	mov	x26, x0
  421548:	ldr	x19, [x29, #176]
  42154c:	b	421290 <f_mtime@@Base+0x88>
  421550:	add	x0, x29, #0xb0
  421554:	bl	40e5d8 <file_timestamp_now@@Base>
  421558:	ldr	w1, [x29, #176]
  42155c:	sub	w1, w1, #0x1
  421560:	add	x1, x0, w1, sxtw
  421564:	str	x1, [x21, #48]
  421568:	cmp	x1, x20
  42156c:	b.cs	421638 <f_mtime@@Base+0x430>  // b.hs, b.nlast
  421570:	ldr	x2, [x29, #160]
  421574:	sub	w1, w0, #0x3
  421578:	and	w4, w1, #0x3fffffff
  42157c:	mov	x3, #0xcd6500000000        	// #225833675390976
  421580:	sub	w1, w2, #0x3
  421584:	movk	x3, #0x41cd, lsl #48
  421588:	and	w1, w1, #0x3fffffff
  42158c:	fmov	d3, x3
  421590:	sub	w1, w1, w4
  421594:	sub	x2, x2, #0x3
  421598:	sub	x0, x0, #0x3
  42159c:	mov	x3, #0xc00000000000        	// #211106232532992
  4215a0:	scvtf	d1, w1
  4215a4:	lsr	x2, x2, #30
  4215a8:	sub	x0, x2, x0, lsr #30
  4215ac:	movk	x3, #0x4058, lsl #48
  4215b0:	fmov	d2, x3
  4215b4:	ucvtf	d0, x0
  4215b8:	fdiv	d1, d1, d3
  4215bc:	fadd	d0, d1, d0
  4215c0:	fcmpe	d0, d2
  4215c4:	b.lt	4215d8 <f_mtime@@Base+0x3d0>  // b.tstop
  4215c8:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
  4215cc:	fmov	d1, x0
  4215d0:	fcmpe	d0, d1
  4215d4:	b.ls	421940 <f_mtime@@Base+0x738>  // b.plast
  4215d8:	add	x24, x29, #0xb8
  4215dc:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4215e0:	mov	x0, x24
  4215e4:	add	x1, x1, #0x7f0
  4215e8:	bl	406730 <sprintf@plt>
  4215ec:	ldr	x0, [x26]
  4215f0:	bl	406680 <strlen@plt>
  4215f4:	mov	x21, x0
  4215f8:	mov	x0, x24
  4215fc:	bl	406680 <strlen@plt>
  421600:	mov	w2, #0x5                   	// #5
  421604:	mov	x20, x0
  421608:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  42160c:	mov	x0, #0x0                   	// #0
  421610:	add	x1, x1, #0x7f8
  421614:	bl	406cd0 <dcgettext@plt>
  421618:	ldr	x3, [x26]
  42161c:	mov	x2, x0
  421620:	mov	x4, x24
  421624:	mov	x0, #0x0                   	// #0
  421628:	add	x1, x21, x20
  42162c:	bl	41bd88 <error@@Base>
  421630:	mov	w0, #0x1                   	// #1
  421634:	str	w0, [x19, #2280]
  421638:	ldr	x20, [x29, #160]
  42163c:	b	421300 <f_mtime@@Base+0xf8>
  421640:	mov	x0, x26
  421644:	bl	40d4b0 <rename_file@@Base>
  421648:	mov	x0, x26
  42164c:	ldr	x26, [x26, #72]
  421650:	cbnz	x26, 421648 <f_mtime@@Base+0x440>
  421654:	ldr	x20, [x0, #112]
  421658:	cbnz	x20, 421370 <f_mtime@@Base+0x168>
  42165c:	mov	w1, #0x1                   	// #1
  421660:	bl	421208 <f_mtime@@Base>
  421664:	mov	x20, x0
  421668:	b	421370 <f_mtime@@Base+0x168>
  42166c:	ldr	x25, [x26]
  421670:	ldrb	w0, [x25]
  421674:	cmp	w0, #0x2d
  421678:	b.eq	421684 <f_mtime@@Base+0x47c>  // b.none
  42167c:	ldr	x20, [x29, #160]
  421680:	b	4212cc <f_mtime@@Base+0xc4>
  421684:	ldrb	w0, [x25, #1]
  421688:	cmp	w0, #0x6c
  42168c:	b.ne	42167c <f_mtime@@Base+0x474>  // b.any
  421690:	add	x20, x25, #0x2
  421694:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  421698:	add	x0, x0, #0x7a8
  42169c:	str	x20, [x29, #104]
  4216a0:	bl	40c808 <variable_expand@@Base>
  4216a4:	add	x24, x29, #0xb8
  4216a8:	bl	41abb0 <xstrdup@@Base>
  4216ac:	mov	x21, x0
  4216b0:	mov	x0, x20
  4216b4:	str	x21, [x29, #112]
  4216b8:	bl	406680 <strlen@plt>
  4216bc:	adrp	x27, 42d000 <_IO_stdin_used@@Base+0x40e0>
  4216c0:	mov	w23, #0x0                   	// #0
  4216c4:	str	x0, [x29, #96]
  4216c8:	add	x0, x27, #0xed0
  4216cc:	str	x0, [x29, #120]
  4216d0:	str	wzr, [x29, #132]
  4216d4:	str	x21, [x29, #176]
  4216d8:	mov	x1, x24
  4216dc:	add	x0, x29, #0xb0
  4216e0:	bl	41ac78 <find_next_token@@Base>
  4216e4:	mov	x21, x0
  4216e8:	cbz	x0, 42196c <f_mtime@@Base+0x764>
  4216ec:	ldr	x0, [x29, #120]
  4216f0:	bl	40c808 <variable_expand@@Base>
  4216f4:	mov	x22, x0
  4216f8:	ldr	x1, [x29, #184]
  4216fc:	mov	x0, x21
  421700:	ldrb	w20, [x21, x1]
  421704:	strb	wzr, [x21, x1]
  421708:	bl	41d7d8 <find_percent@@Base>
  42170c:	mov	x28, x0
  421710:	cbz	x0, 421840 <f_mtime@@Base+0x638>
  421714:	sub	x25, x0, x21
  421718:	mov	x1, x21
  42171c:	mov	x2, x25
  421720:	mov	x0, x22
  421724:	bl	40bbb0 <variable_buffer_output@@Base>
  421728:	ldp	x2, x1, [x29, #96]
  42172c:	bl	40bbb0 <variable_buffer_output@@Base>
  421730:	ldr	x2, [x29, #184]
  421734:	add	x1, x28, #0x1
  421738:	sub	x2, x2, x25
  42173c:	bl	40bbb0 <variable_buffer_output@@Base>
  421740:	ldr	x1, [x29, #184]
  421744:	mov	x0, x22
  421748:	strb	w20, [x21, x1]
  42174c:	bl	420d88 <eval_buffer@@Base+0xe8>
  421750:	str	x0, [x29, #168]
  421754:	mov	x1, x0
  421758:	cmp	x0, #0x1
  42175c:	b.ne	42195c <f_mtime@@Base+0x754>  // b.any
  421760:	add	x3, x29, #0x9c
  421764:	add	x2, x29, #0x98
  421768:	add	x1, x29, #0xa8
  42176c:	mov	x0, x22
  421770:	bl	4278c0 <vpath_search@@Base>
  421774:	cbz	x0, 42178c <f_mtime@@Base+0x584>
  421778:	ldr	w2, [x29, #152]
  42177c:	cbz	x19, 421880 <f_mtime@@Base+0x678>
  421780:	cmp	w23, w2
  421784:	b.hi	421880 <f_mtime@@Base+0x678>  // b.pmore
  421788:	b.eq	421980 <f_mtime@@Base+0x778>  // b.none
  42178c:	adrp	x20, 448000 <output_context@@Base+0x1208>
  421790:	add	x20, x20, #0xe58
  421794:	ldr	x28, [x20, #16]
  421798:	cbz	x28, 4218bc <f_mtime@@Base+0x6b4>
  42179c:	mov	x0, x22
  4217a0:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  4217a4:	bl	406680 <strlen@plt>
  4217a8:	add	x21, x21, #0x130
  4217ac:	mov	x1, x0
  4217b0:	cmp	x28, x0
  4217b4:	b.cc	42189c <f_mtime@@Base+0x694>  // b.lo, b.ul, b.last
  4217b8:	ldr	x2, [x21]
  4217bc:	ldr	w4, [x20, #32]
  4217c0:	mvn	w25, w4
  4217c4:	cbz	x2, 4216d8 <f_mtime@@Base+0x4d0>
  4217c8:	adrp	x28, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4217cc:	add	x28, x28, #0x7e8
  4217d0:	b	4217e0 <f_mtime@@Base+0x5d8>
  4217d4:	ldr	x2, [x21, #8]!
  4217d8:	add	w25, w25, #0x1
  4217dc:	cbz	x2, 4216d8 <f_mtime@@Base+0x4d0>
  4217e0:	ldr	x0, [x20, #40]
  4217e4:	mov	x3, x22
  4217e8:	mov	x1, x28
  4217ec:	bl	406730 <sprintf@plt>
  4217f0:	ldr	x0, [x20, #40]
  4217f4:	bl	420d88 <eval_buffer@@Base+0xe8>
  4217f8:	str	x0, [x29, #168]
  4217fc:	cmp	x0, #0x1
  421800:	b.eq	4217d4 <f_mtime@@Base+0x5cc>  // b.none
  421804:	cmp	x19, #0x0
  421808:	ccmp	w25, w23, #0x0, ne  // ne = any
  42180c:	b.cs	4217d4 <f_mtime@@Base+0x5cc>  // b.hs, b.nlast
  421810:	ldr	x0, [x20, #40]
  421814:	mov	w23, w25
  421818:	bl	424940 <strcache_add@@Base>
  42181c:	mov	x19, x0
  421820:	ldr	x0, [x29, #168]
  421824:	str	x0, [x29, #160]
  421828:	b	4217d4 <f_mtime@@Base+0x5cc>
  42182c:	bl	424940 <strcache_add@@Base>
  421830:	mov	x1, x0
  421834:	mov	x0, x26
  421838:	bl	40d4b0 <rename_file@@Base>
  42183c:	b	421538 <f_mtime@@Base+0x330>
  421840:	mov	x0, x21
  421844:	bl	406680 <strlen@plt>
  421848:	mov	w2, #0x5                   	// #5
  42184c:	mov	x22, x0
  421850:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  421854:	mov	x0, #0x0                   	// #0
  421858:	add	x1, x1, #0x7b8
  42185c:	bl	406cd0 <dcgettext@plt>
  421860:	mov	x3, x21
  421864:	mov	x2, x0
  421868:	mov	x1, x22
  42186c:	mov	x0, #0x0                   	// #0
  421870:	bl	41bd88 <error@@Base>
  421874:	ldr	x0, [x29, #184]
  421878:	strb	w20, [x21, x0]
  42187c:	b	4216d8 <f_mtime@@Base+0x4d0>
  421880:	ldr	w1, [x29, #156]
  421884:	mov	x19, x0
  421888:	mov	w23, w2
  42188c:	ldr	x0, [x29, #168]
  421890:	str	w1, [x29, #132]
  421894:	str	x0, [x29, #160]
  421898:	b	42178c <f_mtime@@Base+0x584>
  42189c:	ldr	x2, [x20, #24]
  4218a0:	str	x1, [x20, #16]
  4218a4:	ldr	x0, [x20, #40]
  4218a8:	add	x2, x2, #0x2
  4218ac:	add	x1, x2, x1
  4218b0:	bl	41ab78 <xrealloc@@Base>
  4218b4:	str	x0, [x20, #40]
  4218b8:	b	4217b8 <f_mtime@@Base+0x5b0>
  4218bc:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4218c0:	add	x21, x0, #0x130
  4218c4:	ldr	x27, [x20, #24]
  4218c8:	ldr	x0, [x0, #304]
  4218cc:	cbz	x0, 421938 <f_mtime@@Base+0x730>
  4218d0:	ldr	w2, [x20, #32]
  4218d4:	str	x21, [x29, #136]
  4218d8:	add	w28, w2, #0x1
  4218dc:	bl	406680 <strlen@plt>
  4218e0:	mov	x25, x0
  4218e4:	ldr	x1, [x29, #136]
  4218e8:	cmp	x0, x27
  4218ec:	ldr	x0, [x1, #8]!
  4218f0:	str	x1, [x29, #136]
  4218f4:	b.ls	42192c <f_mtime@@Base+0x724>  // b.plast
  4218f8:	str	x25, [x20, #24]
  4218fc:	mov	x27, x25
  421900:	str	w28, [x20, #32]
  421904:	add	w28, w28, #0x1
  421908:	cbnz	x0, 4218dc <f_mtime@@Base+0x6d4>
  42190c:	mov	x0, x22
  421910:	bl	406680 <strlen@plt>
  421914:	str	x0, [x20, #16]
  421918:	add	x0, x0, x25
  42191c:	add	x0, x0, #0x2
  421920:	bl	41ab28 <xmalloc@@Base>
  421924:	str	x0, [x20, #40]
  421928:	b	4217b8 <f_mtime@@Base+0x5b0>
  42192c:	str	w28, [x20, #32]
  421930:	add	w28, w28, #0x1
  421934:	cbnz	x0, 4218dc <f_mtime@@Base+0x6d4>
  421938:	mov	x25, x27
  42193c:	b	42190c <f_mtime@@Base+0x704>
  421940:	fcvtzu	x2, d0
  421944:	add	x24, x29, #0xb8
  421948:	mov	x0, x24
  42194c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0xe0>
  421950:	add	x1, x1, #0x48
  421954:	bl	406730 <sprintf@plt>
  421958:	b	4215ec <f_mtime@@Base+0x3e4>
  42195c:	mov	x0, x22
  421960:	str	x1, [x29, #160]
  421964:	bl	424940 <strcache_add@@Base>
  421968:	mov	x19, x0
  42196c:	ldr	x0, [x29, #112]
  421970:	bl	406b90 <free@plt>
  421974:	cbnz	x19, 4213d8 <f_mtime@@Base+0x1d0>
  421978:	ldr	x20, [x29, #160]
  42197c:	b	4212cc <f_mtime@@Base+0xc4>
  421980:	ldr	w3, [x29, #132]
  421984:	ldr	w1, [x29, #156]
  421988:	cmp	w1, w3
  42198c:	b.cs	42178c <f_mtime@@Base+0x584>  // b.hs, b.nlast
  421990:	b	421884 <f_mtime@@Base+0x67c>
  421994:	nop

0000000000421998 <notice_finished_file@@Base>:
  421998:	stp	x29, x30, [sp, #-192]!
  42199c:	mov	w2, #0x40c                 	// #1036
  4219a0:	mov	x29, sp
  4219a4:	stp	x21, x22, [sp, #32]
  4219a8:	adrp	x21, 449000 <commands_started@@Base+0x170>
  4219ac:	stp	x19, x20, [sp, #16]
  4219b0:	mov	x19, x0
  4219b4:	ldr	w1, [x21, #2284]
  4219b8:	ldrh	w0, [x0, #136]
  4219bc:	ldrb	w20, [x19, #136]
  4219c0:	orr	w0, w0, w2
  4219c4:	strh	w0, [x19, #136]
  4219c8:	and	w20, w20, #0xc
  4219cc:	ldrb	w4, [x19, #136]
  4219d0:	cbnz	w1, 421ac0 <notice_finished_file@@Base+0x128>
  4219d4:	and	w4, w4, #0x3
  4219d8:	ldr	x0, [x19, #120]
  4219dc:	cbnz	x0, 4219e8 <notice_finished_file@@Base+0x50>
  4219e0:	ldr	x0, [x19, #112]
  4219e4:	str	x0, [x19, #120]
  4219e8:	cmp	w20, #0x8
  4219ec:	b.eq	421a5c <notice_finished_file@@Base+0xc4>  // b.none
  4219f0:	cbnz	w1, 421a64 <notice_finished_file@@Base+0xcc>
  4219f4:	ldr	x3, [x19, #104]
  4219f8:	cbz	x3, 421a3c <notice_finished_file@@Base+0xa4>
  4219fc:	ldr	x2, [x19, #112]
  421a00:	mov	x1, x3
  421a04:	nop
  421a08:	ldrb	w0, [x1, #137]
  421a0c:	tbz	w0, #2, 421a3c <notice_finished_file@@Base+0xa4>
  421a10:	cbz	x2, 421a24 <notice_finished_file@@Base+0x8c>
  421a14:	ldr	x0, [x1, #112]
  421a18:	cmp	x0, #0x0
  421a1c:	ccmp	x0, x2, #0x2, ne  // ne = any
  421a20:	csel	x2, x2, x0, ls  // ls = plast
  421a24:	ldr	x1, [x1, #56]
  421a28:	cbnz	x1, 421a08 <notice_finished_file@@Base+0x70>
  421a2c:	nop
  421a30:	str	x2, [x3, #112]
  421a34:	ldr	x3, [x3, #56]
  421a38:	cbnz	x3, 421a30 <notice_finished_file@@Base+0x98>
  421a3c:	cmp	w20, #0x8
  421a40:	b.eq	421b40 <notice_finished_file@@Base+0x1a8>  // b.none
  421a44:	cmp	w4, #0x1
  421a48:	b.eq	421b9c <notice_finished_file@@Base+0x204>  // b.none
  421a4c:	ldp	x19, x20, [sp, #16]
  421a50:	ldp	x21, x22, [sp, #32]
  421a54:	ldp	x29, x30, [sp], #192
  421a58:	ret
  421a5c:	ldrb	w0, [x19, #137]
  421a60:	tbnz	w0, #5, 4219f0 <notice_finished_file@@Base+0x58>
  421a64:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  421a68:	adrp	x2, 449000 <commands_started@@Base+0x170>
  421a6c:	ldr	w1, [x21, #2284]
  421a70:	ldr	w0, [x0, #3484]
  421a74:	ldr	w2, [x2, #2080]
  421a78:	orr	w0, w0, w2
  421a7c:	orr	w0, w0, w1
  421a80:	cbz	w0, 421b24 <notice_finished_file@@Base+0x18c>
  421a84:	ldr	x1, [x19, #32]
  421a88:	cbz	x1, 421b24 <notice_finished_file@@Base+0x18c>
  421a8c:	ldrh	w0, [x1, #48]
  421a90:	cbz	w0, 421bcc <notice_finished_file@@Base+0x234>
  421a94:	ldr	x2, [x1, #40]
  421a98:	and	x0, x0, #0xffff
  421a9c:	sub	x2, x2, #0x1
  421aa0:	b	421aa8 <notice_finished_file@@Base+0x110>
  421aa4:	cbz	w0, 421bcc <notice_finished_file@@Base+0x234>
  421aa8:	ldrb	w1, [x2, x0]
  421aac:	sub	x0, x0, #0x1
  421ab0:	tbnz	w1, #0, 421aa4 <notice_finished_file@@Base+0x10c>
  421ab4:	mvni	v0.4s, #0x0
  421ab8:	str	d0, [x19, #112]
  421abc:	b	4219f4 <notice_finished_file@@Base+0x5c>
  421ac0:	ands	w4, w4, #0x3
  421ac4:	mov	w1, #0x0                   	// #0
  421ac8:	b.ne	4219d8 <notice_finished_file@@Base+0x40>  // b.any
  421acc:	ldr	x0, [x19, #32]
  421ad0:	cbz	x0, 421bb8 <notice_finished_file@@Base+0x220>
  421ad4:	ldrb	w2, [x0, #51]
  421ad8:	tbz	w2, #0, 421b04 <notice_finished_file@@Base+0x16c>
  421adc:	ldrh	w2, [x0, #48]
  421ae0:	cbz	w2, 4219d8 <notice_finished_file@@Base+0x40>
  421ae4:	ldr	x3, [x0, #40]
  421ae8:	mov	x0, #0x0                   	// #0
  421aec:	b	421af8 <notice_finished_file@@Base+0x160>
  421af0:	cmp	w2, w0
  421af4:	b.ls	421bc4 <notice_finished_file@@Base+0x22c>  // b.plast
  421af8:	ldrb	w1, [x3, x0]
  421afc:	add	x0, x0, #0x1
  421b00:	tbnz	w1, #0, 421af0 <notice_finished_file@@Base+0x158>
  421b04:	ldrb	w0, [x19, #137]
  421b08:	tbz	w0, #5, 421bd8 <notice_finished_file@@Base+0x240>
  421b0c:	ldrb	w0, [x19, #136]
  421b10:	mov	w4, #0x0                   	// #0
  421b14:	mov	w1, #0x0                   	// #0
  421b18:	and	w0, w0, #0xfffffffc
  421b1c:	strb	w0, [x19, #136]
  421b20:	b	4219d8 <notice_finished_file@@Base+0x40>
  421b24:	ldrb	w0, [x19, #137]
  421b28:	fmov	d0, xzr
  421b2c:	tbz	w0, #3, 421ab8 <notice_finished_file@@Base+0x120>
  421b30:	ldr	d0, [x19, #32]
  421b34:	cmeq	d0, d0, #0
  421b38:	str	d0, [x19, #112]
  421b3c:	b	4219f4 <notice_finished_file@@Base+0x5c>
  421b40:	cmp	w4, #0x1
  421b44:	b.eq	421b9c <notice_finished_file@@Base+0x204>  // b.none
  421b48:	ldr	x20, [x19, #48]
  421b4c:	mov	w22, #0x40c                 	// #1036
  421b50:	mov	w21, #0xfffffbf0            	// #-1040
  421b54:	cbz	x20, 421a4c <notice_finished_file@@Base+0xb4>
  421b58:	ldr	x0, [x20, #16]
  421b5c:	ldrb	w1, [x19, #136]
  421b60:	ldrh	w2, [x0, #136]
  421b64:	and	w1, w1, #0x3
  421b68:	orr	w1, w1, w22
  421b6c:	and	w2, w2, w21
  421b70:	orr	w1, w1, w2
  421b74:	strh	w1, [x0, #136]
  421b78:	tbz	w1, #13, 421b88 <notice_finished_file@@Base+0x1f0>
  421b7c:	ldr	x20, [x20]
  421b80:	cbnz	x20, 421b58 <notice_finished_file@@Base+0x1c0>
  421b84:	b	421a4c <notice_finished_file@@Base+0xb4>
  421b88:	mov	w1, #0x0                   	// #0
  421b8c:	bl	421208 <f_mtime@@Base>
  421b90:	ldr	x20, [x20]
  421b94:	cbnz	x20, 421b58 <notice_finished_file@@Base+0x1c0>
  421b98:	b	421a4c <notice_finished_file@@Base+0xb4>
  421b9c:	ldrb	w0, [x19, #136]
  421ba0:	ldp	x21, x22, [sp, #32]
  421ba4:	and	w0, w0, #0xfffffffc
  421ba8:	strb	w0, [x19, #136]
  421bac:	ldp	x19, x20, [sp, #16]
  421bb0:	ldp	x29, x30, [sp], #192
  421bb4:	ret
  421bb8:	ldrb	w0, [x19, #137]
  421bbc:	and	w4, w0, #0x20
  421bc0:	tbnz	w0, #5, 421b0c <notice_finished_file@@Base+0x174>
  421bc4:	mov	w1, #0x0                   	// #0
  421bc8:	b	4219d8 <notice_finished_file@@Base+0x40>
  421bcc:	fmov	d0, xzr
  421bd0:	str	d0, [x19, #112]
  421bd4:	b	4219f4 <notice_finished_file@@Base+0x5c>
  421bd8:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  421bdc:	ldr	w0, [x0, #3380]
  421be0:	cbz	w0, 421d78 <notice_finished_file@@Base+0x3e0>
  421be4:	adrp	x0, 449000 <commands_started@@Base+0x170>
  421be8:	ldr	w0, [x0, #2080]
  421bec:	cbz	w0, 421c20 <notice_finished_file@@Base+0x288>
  421bf0:	mov	w3, #0x0                   	// #0
  421bf4:	adrp	x0, 448000 <output_context@@Base+0x1208>
  421bf8:	add	x0, x0, #0xe58
  421bfc:	ldrb	w4, [x19, #136]
  421c00:	mov	w1, #0x1                   	// #1
  421c04:	ldr	w2, [x0, #56]
  421c08:	bfxil	w4, w3, #0, #2
  421c0c:	strb	w4, [x19, #136]
  421c10:	add	w2, w2, w1
  421c14:	and	w4, w4, #0x3
  421c18:	str	w2, [x0, #56]
  421c1c:	b	4219d8 <notice_finished_file@@Base+0x40>
  421c20:	ldr	x0, [x19]
  421c24:	bl	408bd0 <ar_name@@Base>
  421c28:	cbz	w0, 421c40 <notice_finished_file@@Base+0x2a8>
  421c2c:	b	421da0 <notice_finished_file@@Base+0x408>
  421c30:	bl	406d70 <__errno_location@plt>
  421c34:	ldr	w0, [x0]
  421c38:	cmp	w0, #0x4
  421c3c:	b.ne	421db4 <notice_finished_file@@Base+0x41c>  // b.any
  421c40:	ldr	x0, [x19]
  421c44:	mov	w2, #0x1b6                 	// #438
  421c48:	mov	w1, #0x42                  	// #66
  421c4c:	bl	406900 <open@plt>
  421c50:	mov	w22, w0
  421c54:	cmn	w0, #0x1
  421c58:	b.eq	421c30 <notice_finished_file@@Base+0x298>  // b.none
  421c5c:	tbnz	w0, #31, 421db4 <notice_finished_file@@Base+0x41c>
  421c60:	mov	w0, #0x78                  	// #120
  421c64:	strb	w0, [sp, #63]
  421c68:	b	421c7c <notice_finished_file@@Base+0x2e4>
  421c6c:	bl	406d70 <__errno_location@plt>
  421c70:	ldr	w0, [x0]
  421c74:	cmp	w0, #0x4
  421c78:	b.ne	421dcc <notice_finished_file@@Base+0x434>  // b.any
  421c7c:	add	x2, sp, #0x40
  421c80:	mov	w1, w22
  421c84:	mov	w0, #0x0                   	// #0
  421c88:	bl	406cb0 <__fxstat@plt>
  421c8c:	cmn	w0, #0x1
  421c90:	b.eq	421c6c <notice_finished_file@@Base+0x2d4>  // b.none
  421c94:	tbz	w0, #31, 421cac <notice_finished_file@@Base+0x314>
  421c98:	b	421dcc <notice_finished_file@@Base+0x434>
  421c9c:	bl	406d70 <__errno_location@plt>
  421ca0:	ldr	w0, [x0]
  421ca4:	cmp	w0, #0x4
  421ca8:	b.ne	421de4 <notice_finished_file@@Base+0x44c>  // b.any
  421cac:	add	x1, sp, #0x3f
  421cb0:	mov	w0, w22
  421cb4:	mov	x2, #0x1                   	// #1
  421cb8:	bl	406c80 <read@plt>
  421cbc:	cmn	w0, #0x1
  421cc0:	b.eq	421c9c <notice_finished_file@@Base+0x304>  // b.none
  421cc4:	tbz	w0, #31, 421cdc <notice_finished_file@@Base+0x344>
  421cc8:	b	421de4 <notice_finished_file@@Base+0x44c>
  421ccc:	bl	406d70 <__errno_location@plt>
  421cd0:	ldr	w0, [x0]
  421cd4:	cmp	w0, #0x4
  421cd8:	b.ne	421dfc <notice_finished_file@@Base+0x464>  // b.any
  421cdc:	mov	w0, w22
  421ce0:	mov	w2, #0x0                   	// #0
  421ce4:	mov	x1, #0x0                   	// #0
  421ce8:	bl	406800 <lseek@plt>
  421cec:	cmn	x0, #0x1
  421cf0:	b.eq	421ccc <notice_finished_file@@Base+0x334>  // b.none
  421cf4:	tbz	x0, #63, 421d0c <notice_finished_file@@Base+0x374>
  421cf8:	b	421dfc <notice_finished_file@@Base+0x464>
  421cfc:	bl	406d70 <__errno_location@plt>
  421d00:	ldr	w0, [x0]
  421d04:	cmp	w0, #0x4
  421d08:	b.ne	421e14 <notice_finished_file@@Base+0x47c>  // b.any
  421d0c:	add	x1, sp, #0x3f
  421d10:	mov	w0, w22
  421d14:	mov	x2, #0x1                   	// #1
  421d18:	bl	406a90 <write@plt>
  421d1c:	cmn	w0, #0x1
  421d20:	b.eq	421cfc <notice_finished_file@@Base+0x364>  // b.none
  421d24:	tbnz	w0, #31, 421e14 <notice_finished_file@@Base+0x47c>
  421d28:	ldr	x0, [sp, #112]
  421d2c:	cbnz	x0, 421d6c <notice_finished_file@@Base+0x3d4>
  421d30:	mov	w0, w22
  421d34:	bl	406a50 <close@plt>
  421d38:	b	421d4c <notice_finished_file@@Base+0x3b4>
  421d3c:	bl	406d70 <__errno_location@plt>
  421d40:	ldr	w0, [x0]
  421d44:	cmp	w0, #0x4
  421d48:	b.ne	421e2c <notice_finished_file@@Base+0x494>  // b.any
  421d4c:	ldr	x0, [x19]
  421d50:	mov	w2, #0x1b6                 	// #438
  421d54:	mov	w1, #0x202                 	// #514
  421d58:	bl	406900 <open@plt>
  421d5c:	mov	w22, w0
  421d60:	cmn	w0, #0x1
  421d64:	b.eq	421d3c <notice_finished_file@@Base+0x3a4>  // b.none
  421d68:	tbnz	w0, #31, 421e2c <notice_finished_file@@Base+0x494>
  421d6c:	mov	w0, w22
  421d70:	bl	406a50 <close@plt>
  421d74:	b	421bf0 <notice_finished_file@@Base+0x258>
  421d78:	ldr	x22, [x19]
  421d7c:	mov	x0, x22
  421d80:	bl	406680 <strlen@plt>
  421d84:	mov	x3, x22
  421d88:	mov	x1, x0
  421d8c:	adrp	x2, 42e000 <_IO_stdin_used@@Base+0x50e0>
  421d90:	mov	w0, #0x0                   	// #0
  421d94:	add	x2, x2, #0x838
  421d98:	bl	41bc10 <message@@Base>
  421d9c:	b	421be4 <notice_finished_file@@Base+0x24c>
  421da0:	ldr	x0, [x19]
  421da4:	bl	408d80 <ar_touch@@Base>
  421da8:	mov	w3, #0x3                   	// #3
  421dac:	cbnz	w0, 421bf4 <notice_finished_file@@Base+0x25c>
  421db0:	b	421bf0 <notice_finished_file@@Base+0x258>
  421db4:	ldr	x1, [x19]
  421db8:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  421dbc:	add	x0, x0, #0x848
  421dc0:	bl	41bf78 <perror_with_name@@Base>
  421dc4:	mov	w3, #0x3                   	// #3
  421dc8:	b	421bf4 <notice_finished_file@@Base+0x25c>
  421dcc:	ldr	x1, [x19]
  421dd0:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  421dd4:	add	x0, x0, #0x858
  421dd8:	bl	41bf78 <perror_with_name@@Base>
  421ddc:	mov	w3, #0x3                   	// #3
  421de0:	b	421bf4 <notice_finished_file@@Base+0x25c>
  421de4:	ldr	x1, [x19]
  421de8:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  421dec:	add	x0, x0, #0x868
  421df0:	bl	41bf78 <perror_with_name@@Base>
  421df4:	mov	w3, #0x3                   	// #3
  421df8:	b	421bf4 <notice_finished_file@@Base+0x25c>
  421dfc:	ldr	x1, [x19]
  421e00:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  421e04:	add	x0, x0, #0x878
  421e08:	bl	41bf78 <perror_with_name@@Base>
  421e0c:	mov	w3, #0x3                   	// #3
  421e10:	b	421bf4 <notice_finished_file@@Base+0x25c>
  421e14:	ldr	x1, [x19]
  421e18:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  421e1c:	add	x0, x0, #0x888
  421e20:	bl	41bf78 <perror_with_name@@Base>
  421e24:	mov	w3, #0x3                   	// #3
  421e28:	b	421bf4 <notice_finished_file@@Base+0x25c>
  421e2c:	ldr	x1, [x19]
  421e30:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  421e34:	add	x0, x0, #0x848
  421e38:	bl	41bf78 <perror_with_name@@Base>
  421e3c:	mov	w3, #0x3                   	// #3
  421e40:	b	421bf4 <notice_finished_file@@Base+0x25c>
  421e44:	nop
  421e48:	stp	x29, x30, [sp, #-224]!
  421e4c:	adrp	x2, 448000 <output_context@@Base+0x1208>
  421e50:	mov	x29, sp
  421e54:	stp	x19, x20, [sp, #16]
  421e58:	mov	x20, x0
  421e5c:	add	x0, x2, #0xe58
  421e60:	str	wzr, [sp, #148]
  421e64:	ldr	x19, [x20, #104]
  421e68:	str	x0, [sp, #160]
  421e6c:	str	w1, [sp, #168]
  421e70:	cmp	x19, #0x0
  421e74:	ldr	w1, [x0, #60]
  421e78:	csel	x19, x19, x20, ne  // ne = any
  421e7c:	ldr	w0, [x19, #128]
  421e80:	cmp	w0, w1
  421e84:	b.eq	4229e8 <notice_finished_file@@Base+0x1050>  // b.none
  421e88:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  421e8c:	add	x0, x0, #0x480
  421e90:	str	x0, [sp, #128]
  421e94:	stp	x21, x22, [sp, #32]
  421e98:	ldr	x0, [sp, #128]
  421e9c:	stp	x23, x24, [sp, #48]
  421ea0:	stp	x25, x26, [sp, #64]
  421ea4:	adrp	x25, 446000 <expanding_var@@Base+0x320>
  421ea8:	ldr	w0, [x0]
  421eac:	stp	x27, x28, [sp, #80]
  421eb0:	add	x25, x25, #0xd88
  421eb4:	str	w1, [x19, #128]
  421eb8:	tbnz	w0, #1, 421f68 <notice_finished_file@@Base+0x5d0>
  421ebc:	nop
  421ec0:	ldrb	w0, [x19, #137]
  421ec4:	tbz	w0, #2, 421fa0 <notice_finished_file@@Base+0x608>
  421ec8:	ldr	x1, [sp, #128]
  421ecc:	ldrb	w0, [x19, #136]
  421ed0:	ldr	w1, [x1]
  421ed4:	and	w0, w0, #0x3
  421ed8:	cmp	w0, #0x1
  421edc:	and	w1, w1, #0x2
  421ee0:	b.ls	42228c <notice_finished_file@@Base+0x8f4>  // b.plast
  421ee4:	cbnz	w1, 42233c <notice_finished_file@@Base+0x9a4>
  421ee8:	ldrb	w1, [x19, #138]
  421eec:	mov	w0, #0x9                   	// #9
  421ef0:	and	w0, w0, w1
  421ef4:	cmp	w0, #0x8
  421ef8:	b.eq	422380 <notice_finished_file@@Base+0x9e8>  // b.none
  421efc:	ldrb	w20, [x19, #136]
  421f00:	and	w20, w20, #0x3
  421f04:	nop
  421f08:	mov	x0, x19
  421f0c:	ldr	x19, [x19, #72]
  421f10:	cbnz	x19, 421f08 <notice_finished_file@@Base+0x570>
  421f14:	cbz	w20, 421f24 <notice_finished_file@@Base+0x58c>
  421f18:	adrp	x1, 449000 <commands_started@@Base+0x170>
  421f1c:	ldr	w1, [x1, #2084]
  421f20:	cbz	w1, 422ca0 <notice_finished_file@@Base+0x1308>
  421f24:	ldrb	w1, [x0, #136]
  421f28:	and	w1, w1, #0xc
  421f2c:	sub	w1, w1, #0x4
  421f30:	tst	w1, #0xf8
  421f34:	b.eq	422aa0 <notice_finished_file@@Base+0x1108>  // b.none
  421f38:	ldr	x19, [x0, #56]
  421f3c:	ldr	w0, [sp, #148]
  421f40:	cmp	w0, w20
  421f44:	csel	w0, w0, w20, cs  // cs = hs, nlast
  421f48:	str	w0, [sp, #148]
  421f4c:	cbz	x19, 422a80 <notice_finished_file@@Base+0x10e8>
  421f50:	ldr	x0, [sp, #160]
  421f54:	ldr	w1, [x0, #60]
  421f58:	ldr	x0, [sp, #128]
  421f5c:	str	w1, [x19, #128]
  421f60:	ldr	w0, [x0]
  421f64:	tbz	w0, #1, 421ec0 <notice_finished_file@@Base+0x528>
  421f68:	ldr	w0, [sp, #168]
  421f6c:	bl	41a8e8 <print_spaces@@Base>
  421f70:	mov	w2, #0x5                   	// #5
  421f74:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  421f78:	mov	x0, #0x0                   	// #0
  421f7c:	add	x1, x1, #0x8b0
  421f80:	bl	406cd0 <dcgettext@plt>
  421f84:	ldr	x1, [x19]
  421f88:	bl	406d60 <printf@plt>
  421f8c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  421f90:	ldr	x0, [x0, #440]
  421f94:	bl	406c20 <fflush@plt>
  421f98:	ldrb	w0, [x19, #137]
  421f9c:	tbnz	w0, #2, 421ec8 <notice_finished_file@@Base+0x530>
  421fa0:	ldrb	w20, [x19, #136]
  421fa4:	ubfx	x0, x20, #2, #2
  421fa8:	cmp	w0, #0x2
  421fac:	b.eq	422314 <notice_finished_file@@Base+0x97c>  // b.none
  421fb0:	cmp	w0, #0x3
  421fb4:	b.eq	4222d0 <notice_finished_file@@Base+0x938>  // b.none
  421fb8:	ldr	x0, [x19, #104]
  421fbc:	ldrb	w2, [x19, #138]
  421fc0:	ldr	w1, [sp, #168]
  421fc4:	cmp	x0, #0x0
  421fc8:	csel	x0, x0, x19, ne  // ne = any
  421fcc:	add	w27, w1, #0x1
  421fd0:	mov	w1, w2
  421fd4:	bfi	w1, w2, #3, #1
  421fd8:	strb	w1, [x19, #138]
  421fdc:	ldrb	w1, [x0, #137]
  421fe0:	orr	w1, w1, #0x2
  421fe4:	strb	w1, [x0, #137]
  421fe8:	ldr	x0, [x19, #112]
  421fec:	str	x0, [sp, #152]
  421ff0:	cbz	x0, 4228c8 <notice_finished_file@@Base+0xf30>
  421ff4:	mov	x0, x19
  421ff8:	mov	x22, x0
  421ffc:	ldr	x0, [x0, #72]
  422000:	cbnz	x0, 421ff8 <notice_finished_file@@Base+0x660>
  422004:	ldr	x0, [sp, #152]
  422008:	cmp	x0, #0x1
  42200c:	cset	w23, eq  // eq = none
  422010:	str	w23, [sp, #172]
  422014:	b.eq	4228f8 <notice_finished_file@@Base+0xf60>  // b.none
  422018:	mov	x2, x0
  42201c:	str	x2, [sp, #112]
  422020:	sub	x1, x0, #0x3
  422024:	mov	x0, #0xffffffffffffc9ff    	// #-13825
  422028:	movk	x0, #0xfb9a, lsl #16
  42202c:	cmp	x1, x0
  422030:	b.ls	422898 <notice_finished_file@@Base+0xf00>  // b.plast
  422034:	ldrb	w0, [x22, #137]
  422038:	ldr	x1, [x22, #32]
  42203c:	tbnz	w0, #5, 4223c0 <notice_finished_file@@Base+0xa28>
  422040:	cbz	x1, 422390 <notice_finished_file@@Base+0x9f8>
  422044:	mov	x0, x22
  422048:	mov	w21, #0x0                   	// #0
  42204c:	ldr	x1, [x22, #48]
  422050:	mov	w20, #0x0                   	// #0
  422054:	str	x1, [sp, #136]
  422058:	str	x1, [sp, #184]
  42205c:	str	x22, [sp, #200]
  422060:	ldr	x28, [x0, #24]
  422064:	adrp	x0, 449000 <commands_started@@Base+0x170>
  422068:	add	x0, x0, #0x824
  42206c:	str	x0, [sp, #120]
  422070:	mov	x24, #0x0                   	// #0
  422074:	cbz	x28, 4221e0 <notice_finished_file@@Base+0x848>
  422078:	ldr	x2, [x28, #16]
  42207c:	ldr	x0, [x2, #72]
  422080:	cbz	x0, 422098 <notice_finished_file@@Base+0x700>
  422084:	nop
  422088:	mov	x2, x0
  42208c:	ldr	x0, [x0, #72]
  422090:	cbnz	x0, 422088 <notice_finished_file@@Base+0x6f0>
  422094:	str	x2, [x28, #16]
  422098:	ldr	x26, [x2, #112]
  42209c:	cbnz	x26, 4220d0 <notice_finished_file@@Base+0x738>
  4220a0:	mov	x0, x2
  4220a4:	mov	w1, #0x1                   	// #1
  4220a8:	bl	421208 <f_mtime@@Base>
  4220ac:	mov	x26, x0
  4220b0:	ldr	x2, [x28, #16]
  4220b4:	ldr	x0, [x2, #72]
  4220b8:	cbz	x0, 4220d0 <notice_finished_file@@Base+0x738>
  4220bc:	nop
  4220c0:	mov	x2, x0
  4220c4:	ldr	x0, [x0, #72]
  4220c8:	cbnz	x0, 4220c0 <notice_finished_file@@Base+0x728>
  4220cc:	str	x2, [x28, #16]
  4220d0:	ldr	x0, [x2, #104]
  4220d4:	cmp	x0, #0x0
  4220d8:	csel	x0, x0, x2, ne  // ne = any
  4220dc:	ldrb	w0, [x0, #137]
  4220e0:	tbnz	w0, #1, 4221f8 <notice_finished_file@@Base+0x860>
  4220e4:	ldr	w0, [x25]
  4220e8:	mov	w24, #0x0                   	// #0
  4220ec:	str	x22, [x2, #96]
  4220f0:	str	w23, [sp, #180]
  4220f4:	cbz	w0, 422110 <notice_finished_file@@Base+0x778>
  4220f8:	ldrb	w24, [x2, #138]
  4220fc:	ldrb	w1, [x22, #138]
  422100:	mov	w0, w24
  422104:	and	w24, w24, #0x1
  422108:	bfxil	w0, w1, #0, #1
  42210c:	strb	w0, [x2, #138]
  422110:	mov	x0, x2
  422114:	mov	w1, w27
  422118:	ldr	x2, [sp, #112]
  42211c:	add	x3, sp, #0xb4
  422120:	bl	422f18 <notice_finished_file@@Base+0x1580>
  422124:	cmp	w20, w0
  422128:	ldr	w1, [x25]
  42212c:	csel	w20, w20, w0, cs  // cs = hs, nlast
  422130:	ldr	x0, [x28, #16]
  422134:	cbz	w1, 422144 <notice_finished_file@@Base+0x7ac>
  422138:	ldrb	w1, [x0, #138]
  42213c:	bfxil	w1, w24, #0, #1
  422140:	strb	w1, [x0, #138]
  422144:	ldrb	w3, [x28, #33]
  422148:	ldr	x1, [x0, #72]
  42214c:	ldr	w2, [sp, #180]
  422150:	tst	x3, #0x2
  422154:	csel	w23, w2, w23, eq  // eq = none
  422158:	cbz	x1, 422170 <notice_finished_file@@Base+0x7d8>
  42215c:	nop
  422160:	mov	x0, x1
  422164:	ldr	x1, [x1, #72]
  422168:	cbnz	x1, 422160 <notice_finished_file@@Base+0x7c8>
  42216c:	str	x0, [x28, #16]
  422170:	ldr	x1, [x0, #104]
  422174:	cmp	x1, #0x0
  422178:	csel	x1, x1, x0, ne  // ne = any
  42217c:	nop
  422180:	ldrb	w2, [x1, #136]
  422184:	ldr	x1, [x1, #56]
  422188:	and	w2, w2, #0xc
  42218c:	sub	w2, w2, #0x4
  422190:	tst	w2, #0xf8
  422194:	cset	w2, eq  // eq = none
  422198:	orr	w21, w21, w2
  42219c:	cbnz	x1, 422180 <notice_finished_file@@Base+0x7e8>
  4221a0:	cbz	w20, 4221b0 <notice_finished_file@@Base+0x818>
  4221a4:	ldr	x1, [sp, #120]
  4221a8:	ldr	w1, [x1]
  4221ac:	cbz	w1, 4221e0 <notice_finished_file@@Base+0x848>
  4221b0:	cbnz	w21, 4221d4 <notice_finished_file@@Base+0x83c>
  4221b4:	ldr	x1, [x0, #112]
  4221b8:	cbz	x1, 42227c <notice_finished_file@@Base+0x8e4>
  4221bc:	cmp	x1, x26
  4221c0:	ldrb	w0, [x28, #33]
  4221c4:	ccmp	x26, #0x1, #0x4, eq  // eq = none
  4221c8:	cset	w1, eq  // eq = none
  4221cc:	bfxil	w0, w1, #0, #1
  4221d0:	strb	w0, [x28, #33]
  4221d4:	mov	x24, x28
  4221d8:	ldr	x28, [x28]
  4221dc:	cbnz	x28, 422078 <notice_finished_file@@Base+0x6e0>
  4221e0:	ldr	x1, [sp, #136]
  4221e4:	cbz	x1, 4223f4 <notice_finished_file@@Base+0xa5c>
  4221e8:	ldr	x0, [x1, #16]
  4221ec:	ldr	x1, [x1]
  4221f0:	str	x1, [sp, #136]
  4221f4:	b	422060 <notice_finished_file@@Base+0x6c8>
  4221f8:	ldr	x0, [x22]
  4221fc:	str	x2, [sp, #104]
  422200:	bl	406680 <strlen@plt>
  422204:	mov	x4, x0
  422208:	ldr	x2, [sp, #104]
  42220c:	str	x4, [sp, #104]
  422210:	ldr	x0, [x2]
  422214:	bl	406680 <strlen@plt>
  422218:	mov	x26, x0
  42221c:	mov	w2, #0x5                   	// #5
  422220:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422224:	mov	x0, #0x0                   	// #0
  422228:	add	x1, x1, #0xa48
  42222c:	bl	406cd0 <dcgettext@plt>
  422230:	mov	x2, x0
  422234:	ldr	x4, [sp, #104]
  422238:	mov	x0, #0x0                   	// #0
  42223c:	ldr	x3, [x22]
  422240:	add	x1, x4, x26
  422244:	ldr	x4, [x28, #16]
  422248:	ldr	x4, [x4]
  42224c:	bl	41bd88 <error@@Base>
  422250:	cbz	x24, 42226c <notice_finished_file@@Base+0x8d4>
  422254:	ldr	x0, [x28]
  422258:	str	x0, [x24]
  42225c:	ldr	x5, [x28]
  422260:	mov	x28, x5
  422264:	cbnz	x28, 422078 <notice_finished_file@@Base+0x6e0>
  422268:	b	4221e0 <notice_finished_file@@Base+0x848>
  42226c:	ldr	x5, [x28]
  422270:	str	x5, [x22, #24]
  422274:	mov	x28, x5
  422278:	b	422264 <notice_finished_file@@Base+0x8cc>
  42227c:	mov	w1, #0x1                   	// #1
  422280:	bl	421208 <f_mtime@@Base>
  422284:	mov	x1, x0
  422288:	b	4221bc <notice_finished_file@@Base+0x824>
  42228c:	cbnz	w1, 422298 <notice_finished_file@@Base+0x900>
  422290:	mov	w20, #0x0                   	// #0
  422294:	b	421f08 <notice_finished_file@@Base+0x570>
  422298:	ldr	w0, [sp, #168]
  42229c:	bl	41a8e8 <print_spaces@@Base>
  4222a0:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4222a4:	add	x1, x1, #0x900
  4222a8:	mov	w2, #0x5                   	// #5
  4222ac:	mov	x0, #0x0                   	// #0
  4222b0:	bl	406cd0 <dcgettext@plt>
  4222b4:	mov	w20, #0x0                   	// #0
  4222b8:	ldr	x1, [x19]
  4222bc:	bl	406d60 <printf@plt>
  4222c0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4222c4:	ldr	x0, [x0, #440]
  4222c8:	bl	406c20 <fflush@plt>
  4222cc:	b	421f08 <notice_finished_file@@Base+0x570>
  4222d0:	ldr	x0, [sp, #128]
  4222d4:	ldr	w0, [x0]
  4222d8:	tbz	w0, #1, 421f00 <notice_finished_file@@Base+0x568>
  4222dc:	ldr	w0, [sp, #168]
  4222e0:	bl	41a8e8 <print_spaces@@Base>
  4222e4:	mov	w2, #0x5                   	// #5
  4222e8:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4222ec:	mov	x0, #0x0                   	// #0
  4222f0:	add	x1, x1, #0x948
  4222f4:	bl	406cd0 <dcgettext@plt>
  4222f8:	ldr	x1, [x19]
  4222fc:	bl	406d60 <printf@plt>
  422300:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  422304:	ldr	x0, [x0, #440]
  422308:	bl	406c20 <fflush@plt>
  42230c:	ldrb	w20, [x19, #136]
  422310:	b	421f00 <notice_finished_file@@Base+0x568>
  422314:	ldr	x0, [sp, #128]
  422318:	ldr	w0, [x0]
  42231c:	tbz	w0, #1, 422290 <notice_finished_file@@Base+0x8f8>
  422320:	ldr	w0, [sp, #168]
  422324:	bl	41a8e8 <print_spaces@@Base>
  422328:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  42232c:	mov	w2, #0x5                   	// #5
  422330:	add	x1, x1, #0x928
  422334:	mov	x0, #0x0                   	// #0
  422338:	b	4222b0 <notice_finished_file@@Base+0x918>
  42233c:	ldr	w0, [sp, #168]
  422340:	bl	41a8e8 <print_spaces@@Base>
  422344:	mov	w2, #0x5                   	// #5
  422348:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  42234c:	mov	x0, #0x0                   	// #0
  422350:	add	x1, x1, #0x8d0
  422354:	bl	406cd0 <dcgettext@plt>
  422358:	ldr	x1, [x19]
  42235c:	bl	406d60 <printf@plt>
  422360:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  422364:	ldr	x0, [x0, #440]
  422368:	bl	406c20 <fflush@plt>
  42236c:	ldrb	w1, [x19, #138]
  422370:	mov	w0, #0x9                   	// #9
  422374:	and	w0, w0, w1
  422378:	cmp	w0, #0x8
  42237c:	b.ne	421efc <notice_finished_file@@Base+0x564>  // b.any
  422380:	mov	x0, x19
  422384:	bl	421098 <show_goal_error@@Base+0xc0>
  422388:	ldrb	w20, [x19, #136]
  42238c:	b	421f00 <notice_finished_file@@Base+0x568>
  422390:	tbnz	w0, #0, 4223c8 <notice_finished_file@@Base+0xa30>
  422394:	mov	w1, w27
  422398:	mov	x0, x22
  42239c:	bl	414850 <try_implicit_rule@@Base>
  4223a0:	cbnz	w0, 422e08 <notice_finished_file@@Base+0x1470>
  4223a4:	ldr	x0, [sp, #128]
  4223a8:	ldr	w0, [x0]
  4223ac:	tbnz	w0, #3, 422ef8 <notice_finished_file@@Base+0x1560>
  4223b0:	ldrb	w0, [x22, #137]
  4223b4:	ldr	x1, [x22, #32]
  4223b8:	orr	w0, w0, #0x1
  4223bc:	strb	w0, [x22, #137]
  4223c0:	cbnz	x1, 422044 <notice_finished_file@@Base+0x6ac>
  4223c4:	ldrb	w0, [x22, #137]
  4223c8:	tbnz	w0, #3, 422044 <notice_finished_file@@Base+0x6ac>
  4223cc:	adrp	x20, 449000 <commands_started@@Base+0x170>
  4223d0:	ldr	x0, [x20, #2120]
  4223d4:	cbz	x0, 422044 <notice_finished_file@@Base+0x6ac>
  4223d8:	ldr	x0, [x0, #32]
  4223dc:	cbz	x0, 422044 <notice_finished_file@@Base+0x6ac>
  4223e0:	ldr	x1, [sp, #128]
  4223e4:	ldr	w1, [x1]
  4223e8:	tbnz	w1, #3, 422e48 <notice_finished_file@@Base+0x14b0>
  4223ec:	str	x0, [x22, #32]
  4223f0:	b	422044 <notice_finished_file@@Base+0x6ac>
  4223f4:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4223f8:	ldr	w0, [x0, #3388]
  4223fc:	orr	w0, w23, w0
  422400:	cbz	w0, 422530 <notice_finished_file@@Base+0xb98>
  422404:	ldr	x28, [x22, #24]
  422408:	cbz	x28, 422530 <notice_finished_file@@Base+0xb98>
  42240c:	adrp	x24, 449000 <commands_started@@Base+0x170>
  422410:	add	x26, x24, #0x824
  422414:	b	422420 <notice_finished_file@@Base+0xa88>
  422418:	ldr	x28, [x28]
  42241c:	cbz	x28, 422530 <notice_finished_file@@Base+0xb98>
  422420:	ldr	x0, [x28, #16]
  422424:	ldrb	w1, [x0, #137]
  422428:	tbz	w1, #6, 422418 <notice_finished_file@@Base+0xa80>
  42242c:	ldr	x24, [x0, #112]
  422430:	cbz	x24, 4227ac <notice_finished_file@@Base+0xe14>
  422434:	ldr	x1, [x0, #72]
  422438:	cbz	x1, 422450 <notice_finished_file@@Base+0xab8>
  42243c:	nop
  422440:	mov	x0, x1
  422444:	ldr	x1, [x1, #72]
  422448:	cbnz	x1, 422440 <notice_finished_file@@Base+0xaa8>
  42244c:	str	x0, [x28, #16]
  422450:	ldr	w1, [x25]
  422454:	mov	w2, #0x0                   	// #0
  422458:	str	x22, [x0, #96]
  42245c:	cbz	w1, 422478 <notice_finished_file@@Base+0xae0>
  422460:	ldrb	w2, [x0, #138]
  422464:	ldrb	w5, [x22, #138]
  422468:	mov	w1, w2
  42246c:	and	w2, w2, #0x1
  422470:	bfxil	w1, w5, #0, #1
  422474:	strb	w1, [x0, #138]
  422478:	str	wzr, [x0, #128]
  42247c:	mov	w1, w27
  422480:	str	w2, [sp, #104]
  422484:	bl	421e48 <notice_finished_file@@Base+0x4b0>
  422488:	cmp	w20, w0
  42248c:	ldr	w1, [x25]
  422490:	csel	w20, w20, w0, cs  // cs = hs, nlast
  422494:	ldr	x0, [x28, #16]
  422498:	cbz	w1, 4224ac <notice_finished_file@@Base+0xb14>
  42249c:	ldrb	w1, [x0, #138]
  4224a0:	ldr	w2, [sp, #104]
  4224a4:	bfxil	w1, w2, #0, #1
  4224a8:	strb	w1, [x0, #138]
  4224ac:	ldr	x1, [x0, #72]
  4224b0:	cbz	x1, 4224c8 <notice_finished_file@@Base+0xb30>
  4224b4:	nop
  4224b8:	mov	x0, x1
  4224bc:	ldr	x1, [x1, #72]
  4224c0:	cbnz	x1, 4224b8 <notice_finished_file@@Base+0xb20>
  4224c4:	str	x0, [x28, #16]
  4224c8:	ldr	x2, [x0, #104]
  4224cc:	cmp	x2, #0x0
  4224d0:	csel	x2, x2, x0, ne  // ne = any
  4224d4:	nop
  4224d8:	ldrb	w1, [x2, #136]
  4224dc:	ldr	x2, [x2, #56]
  4224e0:	and	w1, w1, #0xc
  4224e4:	sub	w1, w1, #0x4
  4224e8:	tst	w1, #0xf8
  4224ec:	cset	w1, eq  // eq = none
  4224f0:	orr	w21, w21, w1
  4224f4:	cbnz	x2, 4224d8 <notice_finished_file@@Base+0xb40>
  4224f8:	cbz	w20, 422504 <notice_finished_file@@Base+0xb6c>
  4224fc:	ldr	w1, [x26]
  422500:	cbz	w1, 422530 <notice_finished_file@@Base+0xb98>
  422504:	cbnz	w21, 422418 <notice_finished_file@@Base+0xa80>
  422508:	ldrb	w1, [x22, #137]
  42250c:	tbz	w1, #5, 4227c0 <notice_finished_file@@Base+0xe28>
  422510:	ldr	x2, [x22, #32]
  422514:	mov	w1, #0x1                   	// #1
  422518:	cbz	x2, 4227c0 <notice_finished_file@@Base+0xe28>
  42251c:	ldrb	w0, [x28, #33]
  422520:	bfxil	w0, w1, #0, #1
  422524:	strb	w0, [x28, #33]
  422528:	ldr	x28, [x28]
  42252c:	cbnz	x28, 422420 <notice_finished_file@@Base+0xa88>
  422530:	ldr	x0, [x22, #104]
  422534:	cmp	x0, #0x0
  422538:	csel	x0, x0, x22, ne  // ne = any
  42253c:	ldrb	w1, [x0, #137]
  422540:	and	w1, w1, #0xfffffffd
  422544:	strb	w1, [x0, #137]
  422548:	ldr	x0, [x19, #104]
  42254c:	cmp	x0, #0x0
  422550:	csel	x0, x0, x19, ne  // ne = any
  422554:	ldrb	w1, [x0, #137]
  422558:	and	w1, w1, #0xfffffffd
  42255c:	strb	w1, [x0, #137]
  422560:	ldr	x0, [sp, #128]
  422564:	ldr	w0, [x0]
  422568:	tbnz	w0, #1, 422828 <notice_finished_file@@Base+0xe90>
  42256c:	cbnz	w21, 42285c <notice_finished_file@@Base+0xec4>
  422570:	cbnz	w20, 422958 <notice_finished_file@@Base+0xfc0>
  422574:	ldrb	w0, [x22, #136]
  422578:	and	w0, w0, #0xc
  42257c:	cmp	w0, #0x4
  422580:	b.eq	422c90 <notice_finished_file@@Base+0x12f8>  // b.none
  422584:	ldr	x24, [x22, #24]
  422588:	cbz	x24, 422b24 <notice_finished_file@@Base+0x118c>
  42258c:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422590:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422594:	add	x1, x1, #0xbc0
  422598:	add	x0, x0, #0xb90
  42259c:	mov	w26, #0x1                   	// #1
  4225a0:	str	x1, [sp, #104]
  4225a4:	str	x0, [sp, #120]
  4225a8:	ldr	x2, [x24, #16]
  4225ac:	ldr	x0, [x2, #112]
  4225b0:	cbz	x0, 422798 <notice_finished_file@@Base+0xe00>
  4225b4:	ldr	x1, [x2, #72]
  4225b8:	cbz	x1, 4225d0 <notice_finished_file@@Base+0xc38>
  4225bc:	nop
  4225c0:	mov	x2, x1
  4225c4:	ldr	x1, [x1, #72]
  4225c8:	cbnz	x1, 4225c0 <notice_finished_file@@Base+0xc28>
  4225cc:	str	x2, [x24, #16]
  4225d0:	ldrb	w4, [x24, #33]
  4225d4:	and	w1, w4, #0x1
  4225d8:	tbnz	w4, #1, 4225e8 <notice_finished_file@@Base+0xc50>
  4225dc:	cmp	x0, #0x1
  4225e0:	b.eq	422788 <notice_finished_file@@Base+0xdf0>  // b.none
  4225e4:	orr	w21, w21, w1
  4225e8:	ldr	x2, [sp, #112]
  4225ec:	ldrb	w4, [x24, #33]
  4225f0:	cmp	x2, x0
  4225f4:	ldr	w2, [sp, #172]
  4225f8:	orr	w1, w2, w1
  4225fc:	cset	w2, cc  // cc = lo, ul, last
  422600:	orr	w1, w2, w1
  422604:	ldr	x2, [sp, #152]
  422608:	bfxil	w4, w1, #0, #1
  42260c:	strb	w4, [x24, #33]
  422610:	cmp	x2, #0x1
  422614:	b.eq	422638 <notice_finished_file@@Base+0xca0>  // b.none
  422618:	ldr	x1, [sp, #128]
  42261c:	ldr	w1, [x1]
  422620:	tst	x1, #0x3
  422624:	b.eq	422638 <notice_finished_file@@Base+0xca0>  // b.none
  422628:	and	w2, w4, #0xff
  42262c:	tbz	w2, #1, 4227d4 <notice_finished_file@@Base+0xe3c>
  422630:	tbnz	w1, #1, 422a64 <notice_finished_file@@Base+0x10cc>
  422634:	nop
  422638:	ldr	x24, [x24]
  42263c:	cbnz	x24, 4225a8 <notice_finished_file@@Base+0xc10>
  422640:	ldr	x0, [x22, #104]
  422644:	cbz	x0, 422650 <notice_finished_file@@Base+0xcb8>
  422648:	ldr	x0, [x22, #24]
  42264c:	cbz	x0, 422b2c <notice_finished_file@@Base+0x1194>
  422650:	ldr	x0, [sp, #152]
  422654:	cmp	x0, #0x1
  422658:	ldr	x0, [sp, #128]
  42265c:	ldr	w0, [x0]
  422660:	b.eq	422678 <notice_finished_file@@Base+0xce0>  // b.none
  422664:	ldrb	w2, [x22, #137]
  422668:	eor	w1, w21, #0x1
  42266c:	and	w1, w1, #0x1
  422670:	tst	w1, w2, lsr #3
  422674:	b.ne	422b74 <notice_finished_file@@Base+0x11dc>  // b.any
  422678:	cbnz	w23, 422698 <notice_finished_file@@Base+0xd00>
  42267c:	ldr	x2, [x22, #32]
  422680:	and	w1, w0, #0x2
  422684:	cbz	x2, 422c68 <notice_finished_file@@Base+0x12d0>
  422688:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  42268c:	ldr	w2, [x2, #3388]
  422690:	cbz	w2, 422c68 <notice_finished_file@@Base+0x12d0>
  422694:	cbnz	w1, 422e88 <notice_finished_file@@Base+0x14f0>
  422698:	tbz	w0, #0, 4226cc <notice_finished_file@@Base+0xd34>
  42269c:	ldr	w0, [sp, #168]
  4226a0:	bl	41a8e8 <print_spaces@@Base>
  4226a4:	mov	w2, #0x5                   	// #5
  4226a8:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4226ac:	mov	x0, #0x0                   	// #0
  4226b0:	add	x1, x1, #0xcc8
  4226b4:	bl	406cd0 <dcgettext@plt>
  4226b8:	ldr	x1, [x22]
  4226bc:	bl	406d60 <printf@plt>
  4226c0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4226c4:	ldr	x0, [x0, #440]
  4226c8:	bl	406c20 <fflush@plt>
  4226cc:	ldp	x0, x1, [x22]
  4226d0:	cmp	x0, x1
  4226d4:	b.eq	422700 <notice_finished_file@@Base+0xd68>  // b.none
  4226d8:	ldrb	w3, [x0]
  4226dc:	ldrb	w2, [x1]
  4226e0:	cmp	w2, w3
  4226e4:	b.eq	422cc4 <notice_finished_file@@Base+0x132c>  // b.none
  4226e8:	ldr	x0, [sp, #128]
  4226ec:	ldr	w0, [x0]
  4226f0:	tbnz	w0, #0, 422b88 <notice_finished_file@@Base+0x11f0>
  4226f4:	ldrb	w0, [x22, #138]
  4226f8:	orr	w0, w0, #0x2
  4226fc:	strb	w0, [x22, #138]
  422700:	ldr	x0, [x22, #32]
  422704:	cbz	x0, 422af0 <notice_finished_file@@Base+0x1158>
  422708:	bl	40a3b8 <chop_commands@@Base>
  42270c:	adrp	x0, 449000 <commands_started@@Base+0x170>
  422710:	ldr	w0, [x0, #2284]
  422714:	cbz	w0, 422c1c <notice_finished_file@@Base+0x1284>
  422718:	ldr	x0, [x22, #32]
  42271c:	ldrb	w0, [x0, #51]
  422720:	tbnz	w0, #0, 422c1c <notice_finished_file@@Base+0x1284>
  422724:	ldrb	w0, [x22, #136]
  422728:	and	w0, w0, #0xfffffffc
  42272c:	strb	w0, [x22, #136]
  422730:	mov	x0, x22
  422734:	bl	421998 <notice_finished_file@@Base>
  422738:	ldrb	w0, [x22, #136]
  42273c:	and	w1, w0, #0xc
  422740:	cmp	w1, #0xc
  422744:	b.eq	422ab4 <notice_finished_file@@Base+0x111c>  // b.none
  422748:	ldr	x0, [sp, #128]
  42274c:	ldr	w0, [x0]
  422750:	tbz	w0, #1, 422290 <notice_finished_file@@Base+0x8f8>
  422754:	ldr	w0, [sp, #168]
  422758:	bl	41a8e8 <print_spaces@@Base>
  42275c:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422760:	mov	w2, #0x5                   	// #5
  422764:	add	x1, x1, #0xd08
  422768:	mov	x0, #0x0                   	// #0
  42276c:	bl	406cd0 <dcgettext@plt>
  422770:	ldr	x1, [x22]
  422774:	bl	406d60 <printf@plt>
  422778:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  42277c:	ldr	x0, [x0, #440]
  422780:	bl	406c20 <fflush@plt>
  422784:	b	421f08 <notice_finished_file@@Base+0x570>
  422788:	ldrb	w2, [x2, #137]
  42278c:	tst	x2, #0x40
  422790:	csel	w23, w23, w26, ne  // ne = any
  422794:	b	4225e4 <notice_finished_file@@Base+0xc4c>
  422798:	mov	x0, x2
  42279c:	mov	w1, #0x1                   	// #1
  4227a0:	bl	421208 <f_mtime@@Base>
  4227a4:	ldr	x2, [x24, #16]
  4227a8:	b	4225b4 <notice_finished_file@@Base+0xc1c>
  4227ac:	mov	w1, #0x1                   	// #1
  4227b0:	bl	421208 <f_mtime@@Base>
  4227b4:	mov	x24, x0
  4227b8:	ldr	x0, [x28, #16]
  4227bc:	b	422434 <notice_finished_file@@Base+0xa9c>
  4227c0:	ldr	x1, [x0, #112]
  4227c4:	cbz	x1, 422948 <notice_finished_file@@Base+0xfb0>
  4227c8:	cmp	x24, x1
  4227cc:	cset	w1, ne  // ne = any
  4227d0:	b	42251c <notice_finished_file@@Base+0xb84>
  4227d4:	cmp	x0, #0x1
  4227d8:	b.eq	422a44 <notice_finished_file@@Base+0x10ac>  // b.none
  4227dc:	tbz	w2, #0, 4228dc <notice_finished_file@@Base+0xf44>
  4227e0:	tbz	w1, #0, 422638 <notice_finished_file@@Base+0xca0>
  4227e4:	ldr	x1, [sp, #120]
  4227e8:	mov	w2, #0x5                   	// #5
  4227ec:	mov	x0, #0x0                   	// #0
  4227f0:	bl	406cd0 <dcgettext@plt>
  4227f4:	mov	x28, x0
  4227f8:	cbz	x28, 422638 <notice_finished_file@@Base+0xca0>
  4227fc:	mov	w0, w27
  422800:	bl	41a8e8 <print_spaces@@Base>
  422804:	ldr	x1, [x24, #8]
  422808:	cbz	x1, 422d10 <notice_finished_file@@Base+0x1378>
  42280c:	ldr	x2, [x22]
  422810:	mov	x0, x28
  422814:	bl	406d60 <printf@plt>
  422818:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  42281c:	ldr	x0, [x0, #440]
  422820:	bl	406c20 <fflush@plt>
  422824:	b	422638 <notice_finished_file@@Base+0xca0>
  422828:	mov	w0, w27
  42282c:	bl	41a8e8 <print_spaces@@Base>
  422830:	mov	w2, #0x5                   	// #5
  422834:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422838:	mov	x0, #0x0                   	// #0
  42283c:	add	x1, x1, #0xa70
  422840:	bl	406cd0 <dcgettext@plt>
  422844:	ldr	x1, [x22]
  422848:	bl	406d60 <printf@plt>
  42284c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  422850:	ldr	x0, [x0, #440]
  422854:	bl	406c20 <fflush@plt>
  422858:	cbz	w21, 422570 <notice_finished_file@@Base+0xbd8>
  42285c:	mov	x0, x22
  422860:	mov	w1, #0x1                   	// #1
  422864:	bl	40e3c0 <set_command_state@@Base>
  422868:	ldr	x0, [sp, #128]
  42286c:	ldr	w0, [x0]
  422870:	tbz	w0, #1, 422290 <notice_finished_file@@Base+0x8f8>
  422874:	ldr	w0, [sp, #168]
  422878:	mov	w20, #0x0                   	// #0
  42287c:	bl	41a8e8 <print_spaces@@Base>
  422880:	mov	w2, #0x5                   	// #5
  422884:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422888:	mov	x0, #0x0                   	// #0
  42288c:	add	x1, x1, #0xaa0
  422890:	bl	406cd0 <dcgettext@plt>
  422894:	b	422770 <notice_finished_file@@Base+0xdd8>
  422898:	ldrsb	w0, [x22, #136]
  42289c:	tbz	w0, #31, 422034 <notice_finished_file@@Base+0x69c>
  4228a0:	sub	w0, w2, #0x3
  4228a4:	ands	w20, w0, #0x3fffffff
  4228a8:	b.ne	422d44 <notice_finished_file@@Base+0x13ac>  // b.any
  4228ac:	ldr	x1, [sp, #152]
  4228b0:	mov	w0, #0xc9ff                	// #51711
  4228b4:	movk	w0, #0x3b9a, lsl #16
  4228b8:	sub	w0, w0, w20
  4228bc:	add	x0, x1, w0, sxtw
  4228c0:	str	x0, [sp, #112]
  4228c4:	b	422034 <notice_finished_file@@Base+0x69c>
  4228c8:	mov	x0, x19
  4228cc:	mov	w1, #0x1                   	// #1
  4228d0:	bl	421208 <f_mtime@@Base>
  4228d4:	str	x0, [sp, #152]
  4228d8:	b	421ff4 <notice_finished_file@@Base+0x65c>
  4228dc:	tbz	w1, #1, 422638 <notice_finished_file@@Base+0xca0>
  4228e0:	ldr	x1, [sp, #104]
  4228e4:	mov	w2, #0x5                   	// #5
  4228e8:	mov	x0, #0x0                   	// #0
  4228ec:	bl	406cd0 <dcgettext@plt>
  4228f0:	mov	x28, x0
  4228f4:	b	4227f8 <notice_finished_file@@Base+0xe60>
  4228f8:	mov	x1, x0
  4228fc:	str	x1, [sp, #112]
  422900:	ldr	x0, [sp, #128]
  422904:	ldr	w0, [x0]
  422908:	tbz	w0, #0, 422034 <notice_finished_file@@Base+0x69c>
  42290c:	mov	w0, w27
  422910:	bl	41a8e8 <print_spaces@@Base>
  422914:	mov	w2, #0x5                   	// #5
  422918:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  42291c:	mov	x0, #0x0                   	// #0
  422920:	add	x1, x1, #0x968
  422924:	bl	406cd0 <dcgettext@plt>
  422928:	ldr	x1, [sp, #152]
  42292c:	str	x1, [sp, #112]
  422930:	ldr	x1, [x22]
  422934:	bl	406d60 <printf@plt>
  422938:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  42293c:	ldr	x0, [x0, #440]
  422940:	bl	406c20 <fflush@plt>
  422944:	b	422034 <notice_finished_file@@Base+0x69c>
  422948:	mov	w1, #0x1                   	// #1
  42294c:	bl	421208 <f_mtime@@Base>
  422950:	mov	x1, x0
  422954:	b	4227c8 <notice_finished_file@@Base+0xe30>
  422958:	ldrb	w2, [x22, #136]
  42295c:	cmp	w20, #0x1
  422960:	mov	w1, #0x3                   	// #3
  422964:	csel	w1, w20, w1, ne  // ne = any
  422968:	mov	x0, x22
  42296c:	bfxil	w2, w1, #0, #2
  422970:	strb	w2, [x22, #136]
  422974:	bl	421998 <notice_finished_file@@Base>
  422978:	ldr	x0, [sp, #128]
  42297c:	ldr	w0, [x0]
  422980:	tbnz	w0, #1, 422cdc <notice_finished_file@@Base+0x1344>
  422984:	adrp	x0, 449000 <commands_started@@Base+0x170>
  422988:	ldr	w0, [x0, #2084]
  42298c:	cbz	w0, 421f08 <notice_finished_file@@Base+0x570>
  422990:	adrp	x0, 449000 <commands_started@@Base+0x170>
  422994:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  422998:	ldr	w0, [x0, #2080]
  42299c:	ldr	w1, [x1, #3484]
  4229a0:	orr	w0, w0, w1
  4229a4:	ldr	w1, [sp, #168]
  4229a8:	orr	w0, w0, w1
  4229ac:	cbnz	w0, 421f08 <notice_finished_file@@Base+0x570>
  4229b0:	ldr	x0, [x22]
  4229b4:	bl	406680 <strlen@plt>
  4229b8:	mov	x21, x0
  4229bc:	mov	w2, #0x5                   	// #5
  4229c0:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4229c4:	mov	x0, #0x0                   	// #0
  4229c8:	add	x1, x1, #0xaf0
  4229cc:	bl	406cd0 <dcgettext@plt>
  4229d0:	mov	x2, x0
  4229d4:	ldr	x3, [x22]
  4229d8:	mov	x1, x21
  4229dc:	mov	x0, #0x0                   	// #0
  4229e0:	bl	41bd88 <error@@Base>
  4229e4:	b	421f08 <notice_finished_file@@Base+0x570>
  4229e8:	ldrb	w0, [x19, #137]
  4229ec:	tbz	w0, #2, 422a14 <notice_finished_file@@Base+0x107c>
  4229f0:	ldrb	w0, [x19, #136]
  4229f4:	and	w0, w0, #0x3
  4229f8:	cmp	w0, #0x1
  4229fc:	b.ls	422a14 <notice_finished_file@@Base+0x107c>  // b.plast
  422a00:	ldrb	w2, [x19, #138]
  422a04:	mov	w0, #0x9                   	// #9
  422a08:	and	w0, w0, w2
  422a0c:	cmp	w0, #0x8
  422a10:	b.eq	421e88 <notice_finished_file@@Base+0x4f0>  // b.none
  422a14:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  422a18:	ldr	w0, [x0, #1152]
  422a1c:	tbnz	w0, #1, 422bb4 <notice_finished_file@@Base+0x121c>
  422a20:	ldrb	w0, [x19, #136]
  422a24:	and	w1, w0, #0xc
  422a28:	cmp	w1, #0xc
  422a2c:	b.eq	422be8 <notice_finished_file@@Base+0x1250>  // b.none
  422a30:	str	wzr, [sp, #148]
  422a34:	ldr	w0, [sp, #148]
  422a38:	ldp	x19, x20, [sp, #16]
  422a3c:	ldp	x29, x30, [sp], #224
  422a40:	ret
  422a44:	tbz	w1, #0, 422638 <notice_finished_file@@Base+0xca0>
  422a48:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422a4c:	mov	w2, #0x5                   	// #5
  422a50:	add	x1, x1, #0xb58
  422a54:	mov	x0, #0x0                   	// #0
  422a58:	bl	406cd0 <dcgettext@plt>
  422a5c:	mov	x28, x0
  422a60:	b	4227f8 <notice_finished_file@@Base+0xe60>
  422a64:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422a68:	mov	w2, #0x5                   	// #5
  422a6c:	add	x1, x1, #0xb20
  422a70:	mov	x0, #0x0                   	// #0
  422a74:	bl	406cd0 <dcgettext@plt>
  422a78:	mov	x28, x0
  422a7c:	b	4227f8 <notice_finished_file@@Base+0xe60>
  422a80:	ldr	w0, [sp, #148]
  422a84:	ldp	x19, x20, [sp, #16]
  422a88:	ldp	x21, x22, [sp, #32]
  422a8c:	ldp	x23, x24, [sp, #48]
  422a90:	ldp	x25, x26, [sp, #64]
  422a94:	ldp	x27, x28, [sp, #80]
  422a98:	ldp	x29, x30, [sp], #224
  422a9c:	ret
  422aa0:	ldp	x21, x22, [sp, #32]
  422aa4:	ldp	x23, x24, [sp, #48]
  422aa8:	ldp	x25, x26, [sp, #64]
  422aac:	ldp	x27, x28, [sp, #80]
  422ab0:	b	422a30 <notice_finished_file@@Base+0x1098>
  422ab4:	and	w20, w0, #0x3
  422ab8:	cmp	w20, #0x2
  422abc:	b.eq	422d1c <notice_finished_file@@Base+0x1384>  // b.none
  422ac0:	cmp	w20, #0x3
  422ac4:	b.eq	422bf4 <notice_finished_file@@Base+0x125c>  // b.none
  422ac8:	cmp	w20, #0x1
  422acc:	b.eq	422ae0 <notice_finished_file@@Base+0x1148>  // b.none
  422ad0:	ldr	x0, [sp, #128]
  422ad4:	mov	w20, #0x0                   	// #0
  422ad8:	ldr	w0, [x0]
  422adc:	tbnz	w0, #0, 422ea4 <notice_finished_file@@Base+0x150c>
  422ae0:	ldrb	w0, [x22, #137]
  422ae4:	orr	w0, w0, #0x4
  422ae8:	strb	w0, [x22, #137]
  422aec:	b	421f08 <notice_finished_file@@Base+0x570>
  422af0:	ldrb	w0, [x22, #137]
  422af4:	tbnz	w0, #5, 422724 <notice_finished_file@@Base+0xd8c>
  422af8:	tbnz	w0, #3, 422724 <notice_finished_file@@Base+0xd8c>
  422afc:	ldr	w0, [x25]
  422b00:	cbz	w0, 422b0c <notice_finished_file@@Base+0x1174>
  422b04:	ldrb	w0, [x22, #138]
  422b08:	tbnz	w0, #0, 422b14 <notice_finished_file@@Base+0x117c>
  422b0c:	mov	x0, x22
  422b10:	bl	421098 <show_goal_error@@Base+0xc0>
  422b14:	ldrb	w0, [x22, #136]
  422b18:	orr	w0, w0, #0x3
  422b1c:	strb	w0, [x22, #136]
  422b20:	b	422730 <notice_finished_file@@Base+0xd98>
  422b24:	ldr	x0, [x22, #104]
  422b28:	cbz	x0, 422650 <notice_finished_file@@Base+0xcb8>
  422b2c:	ldr	x0, [sp, #128]
  422b30:	ldr	w0, [x0]
  422b34:	tbz	w0, #0, 4226cc <notice_finished_file@@Base+0xd34>
  422b38:	ldr	w0, [sp, #168]
  422b3c:	bl	41a8e8 <print_spaces@@Base>
  422b40:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422b44:	add	x1, x1, #0xbf0
  422b48:	mov	w2, #0x5                   	// #5
  422b4c:	mov	x0, #0x0                   	// #0
  422b50:	bl	406cd0 <dcgettext@plt>
  422b54:	ldr	x1, [x22]
  422b58:	bl	406d60 <printf@plt>
  422b5c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  422b60:	ldr	x0, [x0, #440]
  422b64:	bl	406c20 <fflush@plt>
  422b68:	ldr	x0, [sp, #128]
  422b6c:	ldr	w0, [x0]
  422b70:	b	422698 <notice_finished_file@@Base+0xd00>
  422b74:	ldr	x1, [x22, #32]
  422b78:	cbz	x1, 422ee0 <notice_finished_file@@Base+0x1548>
  422b7c:	and	w1, w0, #0x2
  422b80:	cbz	w23, 422688 <notice_finished_file@@Base+0xcf0>
  422b84:	b	422698 <notice_finished_file@@Base+0xd00>
  422b88:	mov	w2, #0x5                   	// #5
  422b8c:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422b90:	mov	x0, #0x0                   	// #0
  422b94:	add	x1, x1, #0xce8
  422b98:	bl	406cd0 <dcgettext@plt>
  422b9c:	ldr	x1, [x22, #8]
  422ba0:	bl	406d60 <printf@plt>
  422ba4:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  422ba8:	ldr	x0, [x0, #440]
  422bac:	bl	406c20 <fflush@plt>
  422bb0:	b	4226f4 <notice_finished_file@@Base+0xd5c>
  422bb4:	ldr	w0, [sp, #168]
  422bb8:	bl	41a8e8 <print_spaces@@Base>
  422bbc:	mov	w2, #0x5                   	// #5
  422bc0:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422bc4:	mov	x0, #0x0                   	// #0
  422bc8:	add	x1, x1, #0x898
  422bcc:	bl	406cd0 <dcgettext@plt>
  422bd0:	ldr	x1, [x20]
  422bd4:	bl	406d60 <printf@plt>
  422bd8:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  422bdc:	ldr	x0, [x0, #440]
  422be0:	bl	406c20 <fflush@plt>
  422be4:	b	422a20 <notice_finished_file@@Base+0x1088>
  422be8:	and	w0, w0, #0x3
  422bec:	str	w0, [sp, #148]
  422bf0:	b	422a34 <notice_finished_file@@Base+0x109c>
  422bf4:	ldr	x0, [sp, #128]
  422bf8:	ldr	w0, [x0]
  422bfc:	tbz	w0, #0, 422ae0 <notice_finished_file@@Base+0x1148>
  422c00:	ldr	w0, [sp, #168]
  422c04:	bl	41a8e8 <print_spaces@@Base>
  422c08:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422c0c:	mov	w2, #0x5                   	// #5
  422c10:	add	x1, x1, #0xd28
  422c14:	mov	x0, #0x0                   	// #0
  422c18:	b	422ebc <notice_finished_file@@Base+0x1524>
  422c1c:	mov	x0, x22
  422c20:	bl	40a720 <execute_file_commands@@Base>
  422c24:	b	422738 <notice_finished_file@@Base+0xda0>
  422c28:	tbz	w0, #1, 422c6c <notice_finished_file@@Base+0x12d4>
  422c2c:	ldr	w0, [sp, #168]
  422c30:	bl	41a8e8 <print_spaces@@Base>
  422c34:	mov	w2, #0x5                   	// #5
  422c38:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422c3c:	mov	x0, #0x0                   	// #0
  422c40:	add	x1, x1, #0xc28
  422c44:	bl	406cd0 <dcgettext@plt>
  422c48:	ldr	x1, [x22]
  422c4c:	bl	406d60 <printf@plt>
  422c50:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  422c54:	ldr	x0, [x0, #440]
  422c58:	bl	406c20 <fflush@plt>
  422c5c:	ldr	x0, [sp, #128]
  422c60:	ldr	w1, [x0]
  422c64:	and	w1, w1, #0x2
  422c68:	cbnz	w1, 422d7c <notice_finished_file@@Base+0x13e4>
  422c6c:	mov	x0, x22
  422c70:	bl	421998 <notice_finished_file@@Base>
  422c74:	nop
  422c78:	ldr	x0, [x22, #8]
  422c7c:	str	x0, [x22]
  422c80:	ldr	x22, [x22, #56]
  422c84:	cbnz	x22, 422c78 <notice_finished_file@@Base+0x12e0>
  422c88:	mov	w20, #0x0                   	// #0
  422c8c:	b	421f08 <notice_finished_file@@Base+0x570>
  422c90:	mov	x0, x22
  422c94:	mov	w1, #0x0                   	// #0
  422c98:	bl	40e3c0 <set_command_state@@Base>
  422c9c:	b	422584 <notice_finished_file@@Base+0xbec>
  422ca0:	str	w20, [sp, #148]
  422ca4:	ldp	x19, x20, [sp, #16]
  422ca8:	ldr	w0, [sp, #148]
  422cac:	ldp	x21, x22, [sp, #32]
  422cb0:	ldp	x23, x24, [sp, #48]
  422cb4:	ldp	x25, x26, [sp, #64]
  422cb8:	ldp	x27, x28, [sp, #80]
  422cbc:	ldp	x29, x30, [sp], #224
  422cc0:	ret
  422cc4:	cbz	w2, 422700 <notice_finished_file@@Base+0xd68>
  422cc8:	add	x1, x1, #0x1
  422ccc:	add	x0, x0, #0x1
  422cd0:	bl	406b40 <strcmp@plt>
  422cd4:	cbz	w0, 422700 <notice_finished_file@@Base+0xd68>
  422cd8:	b	4226e8 <notice_finished_file@@Base+0xd50>
  422cdc:	ldr	w0, [sp, #168]
  422ce0:	bl	41a8e8 <print_spaces@@Base>
  422ce4:	mov	w2, #0x5                   	// #5
  422ce8:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422cec:	mov	x0, #0x0                   	// #0
  422cf0:	add	x1, x1, #0xad0
  422cf4:	bl	406cd0 <dcgettext@plt>
  422cf8:	ldr	x1, [x22]
  422cfc:	bl	406d60 <printf@plt>
  422d00:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  422d04:	ldr	x0, [x0, #440]
  422d08:	bl	406c20 <fflush@plt>
  422d0c:	b	422984 <notice_finished_file@@Base+0xfec>
  422d10:	ldr	x0, [x24, #16]
  422d14:	ldr	x1, [x0]
  422d18:	b	42280c <notice_finished_file@@Base+0xe74>
  422d1c:	ldr	x0, [sp, #128]
  422d20:	ldr	w0, [x0]
  422d24:	tbz	w0, #0, 422ae0 <notice_finished_file@@Base+0x1148>
  422d28:	ldr	w0, [sp, #168]
  422d2c:	bl	41a8e8 <print_spaces@@Base>
  422d30:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422d34:	mov	w2, #0x5                   	// #5
  422d38:	add	x1, x1, #0xd78
  422d3c:	mov	x0, #0x0                   	// #0
  422d40:	b	422ebc <notice_finished_file@@Base+0x1524>
  422d44:	ldr	x0, [x22]
  422d48:	bl	406680 <strlen@plt>
  422d4c:	mov	x21, x0
  422d50:	mov	w2, #0x5                   	// #5
  422d54:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422d58:	mov	x0, #0x0                   	// #0
  422d5c:	add	x1, x1, #0x988
  422d60:	bl	406cd0 <dcgettext@plt>
  422d64:	mov	x2, x0
  422d68:	ldr	x3, [x22]
  422d6c:	mov	x1, x21
  422d70:	mov	x0, #0x0                   	// #0
  422d74:	bl	41bd88 <error@@Base>
  422d78:	b	4228ac <notice_finished_file@@Base+0xf14>
  422d7c:	ldr	w0, [sp, #168]
  422d80:	bl	41a8e8 <print_spaces@@Base>
  422d84:	mov	w2, #0x5                   	// #5
  422d88:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422d8c:	mov	x0, #0x0                   	// #0
  422d90:	add	x1, x1, #0xc90
  422d94:	bl	406cd0 <dcgettext@plt>
  422d98:	ldr	x1, [x22]
  422d9c:	bl	406d60 <printf@plt>
  422da0:	ldp	x0, x1, [x22]
  422da4:	cmp	x0, x1
  422da8:	b.eq	422dec <notice_finished_file@@Base+0x1454>  // b.none
  422dac:	ldrb	w3, [x0]
  422db0:	ldrb	w2, [x1]
  422db4:	cmp	w2, w3
  422db8:	b.ne	422dd0 <notice_finished_file@@Base+0x1438>  // b.any
  422dbc:	cbz	w2, 422dec <notice_finished_file@@Base+0x1454>
  422dc0:	add	x1, x1, #0x1
  422dc4:	add	x0, x0, #0x1
  422dc8:	bl	406b40 <strcmp@plt>
  422dcc:	cbz	w0, 422dec <notice_finished_file@@Base+0x1454>
  422dd0:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422dd4:	mov	w2, #0x5                   	// #5
  422dd8:	add	x1, x1, #0xcb0
  422ddc:	mov	x0, #0x0                   	// #0
  422de0:	bl	406cd0 <dcgettext@plt>
  422de4:	ldr	x1, [x22, #8]
  422de8:	bl	406d60 <printf@plt>
  422dec:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  422df0:	add	x0, x0, #0x690
  422df4:	bl	406ae0 <puts@plt>
  422df8:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  422dfc:	ldr	x0, [x0, #440]
  422e00:	bl	406c20 <fflush@plt>
  422e04:	b	422c6c <notice_finished_file@@Base+0x12d4>
  422e08:	ldr	x0, [sp, #128]
  422e0c:	ldr	w0, [x0]
  422e10:	tbz	w0, #3, 4223b0 <notice_finished_file@@Base+0xa18>
  422e14:	mov	w0, w27
  422e18:	bl	41a8e8 <print_spaces@@Base>
  422e1c:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422e20:	add	x1, x1, #0x9d8
  422e24:	mov	w2, #0x5                   	// #5
  422e28:	mov	x0, #0x0                   	// #0
  422e2c:	bl	406cd0 <dcgettext@plt>
  422e30:	ldr	x1, [x22]
  422e34:	bl	406d60 <printf@plt>
  422e38:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  422e3c:	ldr	x0, [x0, #440]
  422e40:	bl	406c20 <fflush@plt>
  422e44:	b	4223b0 <notice_finished_file@@Base+0xa18>
  422e48:	mov	w0, w27
  422e4c:	bl	41a8e8 <print_spaces@@Base>
  422e50:	mov	w2, #0x5                   	// #5
  422e54:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422e58:	mov	x0, #0x0                   	// #0
  422e5c:	add	x1, x1, #0xa28
  422e60:	bl	406cd0 <dcgettext@plt>
  422e64:	ldr	x1, [x22]
  422e68:	bl	406d60 <printf@plt>
  422e6c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  422e70:	ldr	x0, [x0, #440]
  422e74:	bl	406c20 <fflush@plt>
  422e78:	ldr	x0, [x20, #2120]
  422e7c:	ldr	x0, [x0, #32]
  422e80:	str	x0, [x22, #32]
  422e84:	b	422044 <notice_finished_file@@Base+0x6ac>
  422e88:	ldr	w0, [sp, #168]
  422e8c:	bl	41a8e8 <print_spaces@@Base>
  422e90:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422e94:	mov	w2, #0x5                   	// #5
  422e98:	add	x1, x1, #0xc68
  422e9c:	mov	x0, #0x0                   	// #0
  422ea0:	b	422b50 <notice_finished_file@@Base+0x11b8>
  422ea4:	ldr	w0, [sp, #168]
  422ea8:	bl	41a8e8 <print_spaces@@Base>
  422eac:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422eb0:	add	x1, x1, #0xd50
  422eb4:	mov	w2, #0x5                   	// #5
  422eb8:	mov	x0, #0x0                   	// #0
  422ebc:	bl	406cd0 <dcgettext@plt>
  422ec0:	ldr	x1, [x22]
  422ec4:	bl	406d60 <printf@plt>
  422ec8:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  422ecc:	ldr	x0, [x0, #440]
  422ed0:	bl	406c20 <fflush@plt>
  422ed4:	ldrb	w20, [x22, #136]
  422ed8:	and	w20, w20, #0x3
  422edc:	b	422ae0 <notice_finished_file@@Base+0x1148>
  422ee0:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  422ee4:	ldr	w1, [x1, #3388]
  422ee8:	cbz	w1, 422c28 <notice_finished_file@@Base+0x1290>
  422eec:	and	w1, w0, #0x2
  422ef0:	cbz	w23, 422c68 <notice_finished_file@@Base+0x12d0>
  422ef4:	b	422698 <notice_finished_file@@Base+0xd00>
  422ef8:	mov	w0, w27
  422efc:	bl	41a8e8 <print_spaces@@Base>
  422f00:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  422f04:	mov	w2, #0x5                   	// #5
  422f08:	add	x1, x1, #0xa00
  422f0c:	mov	x0, #0x0                   	// #0
  422f10:	b	422e2c <notice_finished_file@@Base+0x1494>
  422f14:	nop
  422f18:	stp	x29, x30, [sp, #-144]!
  422f1c:	mov	x29, sp
  422f20:	stp	x23, x24, [sp, #48]
  422f24:	add	w24, w1, #0x1
  422f28:	mov	x23, x3
  422f2c:	ldr	x1, [x0, #104]
  422f30:	stp	x19, x20, [sp, #16]
  422f34:	cmp	x1, #0x0
  422f38:	stp	x21, x22, [sp, #32]
  422f3c:	csel	x1, x1, x0, ne  // ne = any
  422f40:	stp	x27, x28, [sp, #80]
  422f44:	mov	x22, x2
  422f48:	mov	x27, x0
  422f4c:	ldrb	w2, [x1, #137]
  422f50:	orr	w2, w2, #0x2
  422f54:	strb	w2, [x1, #137]
  422f58:	ldrb	w1, [x0, #137]
  422f5c:	and	w2, w1, #0x60
  422f60:	cmp	w2, #0x40
  422f64:	b.ne	423054 <notice_finished_file@@Base+0x16bc>  // b.any
  422f68:	ldr	x2, [x0, #32]
  422f6c:	tbnz	w1, #5, 423020 <notice_finished_file@@Base+0x1688>
  422f70:	cbz	x2, 422ff0 <notice_finished_file@@Base+0x1658>
  422f74:	mov	x20, x27
  422f78:	mov	x19, x20
  422f7c:	ldr	x20, [x20, #72]
  422f80:	cbnz	x20, 422f78 <notice_finished_file@@Base+0x15e0>
  422f84:	ldr	x0, [x19, #112]
  422f88:	cbz	x0, 423238 <notice_finished_file@@Base+0x18a0>
  422f8c:	cmp	x0, #0x1
  422f90:	ccmp	x22, x0, #0x2, ne  // ne = any
  422f94:	b.cs	423094 <notice_finished_file@@Base+0x16fc>  // b.hs, b.nlast
  422f98:	mov	w0, #0x1                   	// #1
  422f9c:	mov	w21, #0x0                   	// #0
  422fa0:	str	w0, [x23]
  422fa4:	ldr	x1, [x19, #104]
  422fa8:	mov	w0, w21
  422fac:	cmp	x1, #0x0
  422fb0:	csel	x1, x1, x19, ne  // ne = any
  422fb4:	ldrb	w2, [x1, #137]
  422fb8:	and	w2, w2, #0xfffffffd
  422fbc:	strb	w2, [x1, #137]
  422fc0:	ldr	x1, [x27, #104]
  422fc4:	cmp	x1, #0x0
  422fc8:	csel	x1, x1, x27, ne  // ne = any
  422fcc:	ldrb	w2, [x1, #137]
  422fd0:	and	w2, w2, #0xfffffffd
  422fd4:	strb	w2, [x1, #137]
  422fd8:	ldp	x19, x20, [sp, #16]
  422fdc:	ldp	x21, x22, [sp, #32]
  422fe0:	ldp	x23, x24, [sp, #48]
  422fe4:	ldp	x27, x28, [sp, #80]
  422fe8:	ldp	x29, x30, [sp], #144
  422fec:	ret
  422ff0:	tbnz	w1, #0, 423028 <notice_finished_file@@Base+0x1690>
  422ff4:	mov	w1, w24
  422ff8:	bl	414850 <try_implicit_rule@@Base>
  422ffc:	cbz	w0, 4232c0 <notice_finished_file@@Base+0x1928>
  423000:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  423004:	ldr	w0, [x0, #1152]
  423008:	tbnz	w0, #3, 423300 <notice_finished_file@@Base+0x1968>
  42300c:	ldrb	w0, [x27, #137]
  423010:	ldr	x2, [x27, #32]
  423014:	orr	w0, w0, #0x1
  423018:	strb	w0, [x27, #137]
  42301c:	nop
  423020:	cbnz	x2, 422f74 <notice_finished_file@@Base+0x15dc>
  423024:	ldrb	w1, [x27, #137]
  423028:	tbnz	w1, #3, 422f74 <notice_finished_file@@Base+0x15dc>
  42302c:	adrp	x19, 449000 <commands_started@@Base+0x170>
  423030:	ldr	x0, [x19, #2120]
  423034:	cbz	x0, 422f74 <notice_finished_file@@Base+0x15dc>
  423038:	ldr	x0, [x0, #32]
  42303c:	cbz	x0, 422f74 <notice_finished_file@@Base+0x15dc>
  423040:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  423044:	ldr	w1, [x1, #1152]
  423048:	tbnz	w1, #3, 423278 <notice_finished_file@@Base+0x18e0>
  42304c:	str	x0, [x27, #32]
  423050:	b	422f74 <notice_finished_file@@Base+0x15dc>
  423054:	mov	w1, w24
  423058:	bl	421e48 <notice_finished_file@@Base+0x4b0>
  42305c:	mov	x1, x27
  423060:	mov	w21, w0
  423064:	nop
  423068:	mov	x19, x1
  42306c:	ldr	x1, [x1, #72]
  423070:	cbnz	x1, 423068 <notice_finished_file@@Base+0x16d0>
  423074:	ldr	x0, [x19, #112]
  423078:	cbz	x0, 423258 <notice_finished_file@@Base+0x18c0>
  42307c:	cmp	x0, #0x1
  423080:	ccmp	x22, x0, #0x0, ne  // ne = any
  423084:	b.cs	422fa4 <notice_finished_file@@Base+0x160c>  // b.hs, b.nlast
  423088:	mov	w0, #0x1                   	// #1
  42308c:	str	w0, [x23]
  423090:	b	422fa4 <notice_finished_file@@Base+0x160c>
  423094:	ldrb	w0, [x19, #136]
  423098:	and	w0, w0, #0xc
  42309c:	cmp	w0, #0x8
  4230a0:	b.eq	4230bc <notice_finished_file@@Base+0x1724>  // b.none
  4230a4:	cmp	w0, #0x4
  4230a8:	b.ne	4230b0 <notice_finished_file@@Base+0x1718>  // b.any
  4230ac:	str	wzr, [x19, #128]
  4230b0:	mov	x0, x19
  4230b4:	mov	w1, #0x0                   	// #0
  4230b8:	bl	40e3c0 <set_command_state@@Base>
  4230bc:	ldr	x28, [x19, #24]
  4230c0:	cbz	x28, 4232b8 <notice_finished_file@@Base+0x1920>
  4230c4:	stp	x25, x26, [sp, #64]
  4230c8:	adrp	x26, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4230cc:	add	x26, x26, #0xa48
  4230d0:	adrp	x0, 449000 <commands_started@@Base+0x170>
  4230d4:	mov	w21, #0x0                   	// #0
  4230d8:	add	x0, x0, #0x824
  4230dc:	str	wzr, [sp, #116]
  4230e0:	str	x0, [sp, #120]
  4230e4:	nop
  4230e8:	ldr	x25, [x28, #16]
  4230ec:	ldr	x0, [x25, #104]
  4230f0:	cmp	x0, #0x0
  4230f4:	csel	x0, x0, x25, ne  // ne = any
  4230f8:	ldrb	w0, [x0, #137]
  4230fc:	tbz	w0, #1, 423178 <notice_finished_file@@Base+0x17e0>
  423100:	ldr	x0, [x19]
  423104:	bl	406680 <strlen@plt>
  423108:	mov	x4, x0
  42310c:	ldr	x0, [x25]
  423110:	str	x4, [sp, #104]
  423114:	bl	406680 <strlen@plt>
  423118:	mov	x25, x0
  42311c:	mov	x1, x26
  423120:	mov	w2, #0x5                   	// #5
  423124:	mov	x0, #0x0                   	// #0
  423128:	bl	406cd0 <dcgettext@plt>
  42312c:	ldr	x6, [x28, #16]
  423130:	mov	x2, x0
  423134:	ldr	x4, [sp, #104]
  423138:	mov	x0, #0x0                   	// #0
  42313c:	ldr	x3, [x19]
  423140:	add	x1, x4, x25
  423144:	ldr	x4, [x6]
  423148:	bl	41bd88 <error@@Base>
  42314c:	ldr	x0, [x28]
  423150:	cbz	x20, 42320c <notice_finished_file@@Base+0x1874>
  423154:	str	x0, [x20]
  423158:	mov	x0, x28
  42315c:	bl	406b90 <free@plt>
  423160:	ldr	x28, [x20]
  423164:	cbnz	x28, 4230e8 <notice_finished_file@@Base+0x1750>
  423168:	ldr	w0, [sp, #116]
  42316c:	cbnz	w0, 423224 <notice_finished_file@@Base+0x188c>
  423170:	ldp	x25, x26, [sp, #64]
  423174:	b	422fa4 <notice_finished_file@@Base+0x160c>
  423178:	ldr	w4, [x23]
  42317c:	mov	w1, w24
  423180:	str	x19, [x25, #96]
  423184:	mov	x0, x25
  423188:	add	x3, sp, #0x8c
  42318c:	mov	x2, x22
  423190:	str	w4, [sp, #140]
  423194:	bl	422f18 <notice_finished_file@@Base+0x1580>
  423198:	cmp	w21, w0
  42319c:	ldrb	w1, [x28, #33]
  4231a0:	csel	w21, w21, w0, cs  // cs = hs, nlast
  4231a4:	tbnz	w1, #1, 4231b0 <notice_finished_file@@Base+0x1818>
  4231a8:	ldr	w0, [sp, #140]
  4231ac:	str	w0, [x23]
  4231b0:	ldr	x0, [x28, #16]
  4231b4:	ldr	x4, [x0, #72]
  4231b8:	cbz	x4, 4231d0 <notice_finished_file@@Base+0x1838>
  4231bc:	nop
  4231c0:	mov	x0, x4
  4231c4:	ldr	x4, [x4, #72]
  4231c8:	cbnz	x4, 4231c0 <notice_finished_file@@Base+0x1828>
  4231cc:	str	x0, [x28, #16]
  4231d0:	cbz	w21, 4231e0 <notice_finished_file@@Base+0x1848>
  4231d4:	ldr	x1, [sp, #120]
  4231d8:	ldr	w1, [x1]
  4231dc:	cbz	w1, 423168 <notice_finished_file@@Base+0x17d0>
  4231e0:	ldrb	w0, [x0, #136]
  4231e4:	mov	x20, x28
  4231e8:	ldr	x28, [x28]
  4231ec:	and	w0, w0, #0xc
  4231f0:	sub	w0, w0, #0x4
  4231f4:	tst	w0, #0xf8
  4231f8:	ldr	w0, [sp, #116]
  4231fc:	csinc	w0, w0, wzr, ne  // ne = any
  423200:	str	w0, [sp, #116]
  423204:	cbnz	x28, 4230e8 <notice_finished_file@@Base+0x1750>
  423208:	b	423168 <notice_finished_file@@Base+0x17d0>
  42320c:	str	x0, [x19, #24]
  423210:	mov	x0, x28
  423214:	bl	406b90 <free@plt>
  423218:	ldr	x28, [x19, #24]
  42321c:	cbnz	x28, 4230e8 <notice_finished_file@@Base+0x1750>
  423220:	b	423168 <notice_finished_file@@Base+0x17d0>
  423224:	mov	x0, x19
  423228:	mov	w1, #0x1                   	// #1
  42322c:	bl	40e3c0 <set_command_state@@Base>
  423230:	ldp	x25, x26, [sp, #64]
  423234:	b	422fa4 <notice_finished_file@@Base+0x160c>
  423238:	mov	x0, x19
  42323c:	mov	w1, #0x1                   	// #1
  423240:	bl	421208 <f_mtime@@Base>
  423244:	mov	x4, x19
  423248:	mov	x19, x4
  42324c:	ldr	x4, [x4, #72]
  423250:	cbnz	x4, 423248 <notice_finished_file@@Base+0x18b0>
  423254:	b	422f8c <notice_finished_file@@Base+0x15f4>
  423258:	mov	w1, #0x1                   	// #1
  42325c:	mov	x0, x19
  423260:	bl	421208 <f_mtime@@Base>
  423264:	mov	x1, x19
  423268:	mov	x19, x1
  42326c:	ldr	x1, [x1, #72]
  423270:	cbnz	x1, 423268 <notice_finished_file@@Base+0x18d0>
  423274:	b	42307c <notice_finished_file@@Base+0x16e4>
  423278:	mov	w0, w24
  42327c:	bl	41a8e8 <print_spaces@@Base>
  423280:	mov	w2, #0x5                   	// #5
  423284:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  423288:	mov	x0, #0x0                   	// #0
  42328c:	add	x1, x1, #0xda8
  423290:	bl	406cd0 <dcgettext@plt>
  423294:	ldr	x1, [x27]
  423298:	bl	406d60 <printf@plt>
  42329c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4232a0:	ldr	x0, [x0, #440]
  4232a4:	bl	406c20 <fflush@plt>
  4232a8:	ldr	x0, [x19, #2120]
  4232ac:	ldr	x0, [x0, #32]
  4232b0:	str	x0, [x27, #32]
  4232b4:	b	422f74 <notice_finished_file@@Base+0x15dc>
  4232b8:	mov	w21, #0x0                   	// #0
  4232bc:	b	422fa4 <notice_finished_file@@Base+0x160c>
  4232c0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4232c4:	ldr	w0, [x0, #1152]
  4232c8:	tbz	w0, #3, 42300c <notice_finished_file@@Base+0x1674>
  4232cc:	mov	w0, w24
  4232d0:	bl	41a8e8 <print_spaces@@Base>
  4232d4:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4232d8:	add	x1, x1, #0xa00
  4232dc:	mov	w2, #0x5                   	// #5
  4232e0:	mov	x0, #0x0                   	// #0
  4232e4:	bl	406cd0 <dcgettext@plt>
  4232e8:	ldr	x1, [x27]
  4232ec:	bl	406d60 <printf@plt>
  4232f0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4232f4:	ldr	x0, [x0, #440]
  4232f8:	bl	406c20 <fflush@plt>
  4232fc:	b	42300c <notice_finished_file@@Base+0x1674>
  423300:	mov	w0, w24
  423304:	bl	41a8e8 <print_spaces@@Base>
  423308:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  42330c:	mov	w2, #0x5                   	// #5
  423310:	add	x1, x1, #0x9d8
  423314:	mov	x0, #0x0                   	// #0
  423318:	b	4232e4 <notice_finished_file@@Base+0x194c>
  42331c:	nop

0000000000423320 <update_goal_chain@@Base>:
  423320:	stp	x29, x30, [sp, #-144]!
  423324:	adrp	x1, 449000 <commands_started@@Base+0x170>
  423328:	mov	x29, sp
  42332c:	ldr	w1, [x1, #2284]
  423330:	str	w1, [sp, #100]
  423334:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  423338:	stp	x19, x20, [sp, #16]
  42333c:	mov	x19, x0
  423340:	ldr	w1, [x1, #3484]
  423344:	str	w1, [sp, #104]
  423348:	adrp	x1, 449000 <commands_started@@Base+0x170>
  42334c:	stp	x21, x22, [sp, #32]
  423350:	ldr	w1, [x1, #2080]
  423354:	stp	x27, x28, [sp, #80]
  423358:	str	w1, [sp, #108]
  42335c:	bl	41ae38 <copy_dep_chain@@Base>
  423360:	str	x0, [sp, #128]
  423364:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  423368:	ldr	w1, [x1, #3464]
  42336c:	cbz	w1, 42373c <update_goal_chain@@Base+0x41c>
  423370:	adrp	x5, 448000 <output_context@@Base+0x1208>
  423374:	add	x28, x5, #0xe58
  423378:	mov	w21, #0x1                   	// #1
  42337c:	ldr	w0, [x28, #60]
  423380:	str	x19, [x28, #8]
  423384:	add	w0, w0, #0x1
  423388:	str	w0, [x28, #60]
  42338c:	ldr	x0, [sp, #128]
  423390:	cbz	x0, 4234e4 <update_goal_chain@@Base+0x1c4>
  423394:	adrp	x0, 449000 <commands_started@@Base+0x170>
  423398:	add	x0, x0, #0x824
  42339c:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  4233a0:	add	x20, x20, #0xd88
  4233a4:	stp	x23, x24, [sp, #48]
  4233a8:	mov	w21, #0x1                   	// #1
  4233ac:	str	x0, [sp, #120]
  4233b0:	adrp	x0, 449000 <commands_started@@Base+0x170>
  4233b4:	add	x24, x0, #0x820
  4233b8:	stp	x25, x26, [sp, #64]
  4233bc:	str	xzr, [sp, #112]
  4233c0:	ldr	x25, [sp, #128]
  4233c4:	bl	4181b8 <start_waiting_jobs@@Base>
  4233c8:	mov	w1, #0x0                   	// #0
  4233cc:	mov	w0, #0x1                   	// #1
  4233d0:	bl	416790 <reap_children@@Base>
  4233d4:	nop
  4233d8:	ldr	x1, [x25, #16]
  4233dc:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4233e0:	add	x22, x0, #0xd9c
  4233e4:	adrp	x0, 449000 <commands_started@@Base+0x170>
  4233e8:	add	x23, x0, #0x8ec
  4233ec:	mov	w19, #0x0                   	// #0
  4233f0:	ldr	x0, [x1, #104]
  4233f4:	str	x25, [x28]
  4233f8:	cmp	x0, #0x0
  4233fc:	csel	x0, x0, x1, ne  // ne = any
  423400:	ldrb	w1, [x25, #32]
  423404:	ldrb	w2, [x0, #138]
  423408:	ubfx	x1, x1, #2, #1
  42340c:	bfxil	w2, w1, #0, #1
  423410:	strb	w2, [x0, #138]
  423414:	nop
  423418:	mov	x27, x0
  42341c:	ldr	x0, [x0, #72]
  423420:	cbnz	x0, 423418 <update_goal_chain@@Base+0xf8>
  423424:	ldr	w0, [x20]
  423428:	cbz	w0, 42344c <update_goal_chain@@Base+0x12c>
  42342c:	ldrb	w1, [x27, #137]
  423430:	tbz	w1, #4, 423624 <update_goal_chain@@Base+0x304>
  423434:	ldr	w1, [sp, #100]
  423438:	str	w1, [x23]
  42343c:	ldr	w1, [sp, #104]
  423440:	str	w1, [x22]
  423444:	ldr	w1, [sp, #108]
  423448:	str	w1, [x24]
  42344c:	cmp	w0, #0x0
  423450:	ldr	w26, [x28, #56]
  423454:	mov	x0, x27
  423458:	cset	w1, ne  // ne = any
  42345c:	bl	421e48 <notice_finished_file@@Base+0x4b0>
  423460:	mov	x3, x27
  423464:	ldr	x27, [x27, #72]
  423468:	cbnz	x27, 423460 <update_goal_chain@@Base+0x140>
  42346c:	ldr	w1, [x28, #56]
  423470:	cmp	w1, w26
  423474:	b.ls	423484 <update_goal_chain@@Base+0x164>  // b.plast
  423478:	ldrb	w1, [x25, #33]
  42347c:	orr	w1, w1, #0x1
  423480:	strb	w1, [x25, #33]
  423484:	cbnz	w0, 423520 <update_goal_chain@@Base+0x200>
  423488:	ldrb	w0, [x3, #137]
  42348c:	tbnz	w0, #2, 423520 <update_goal_chain@@Base+0x200>
  423490:	ldrb	w0, [x3, #138]
  423494:	mov	w19, #0x1                   	// #1
  423498:	and	w0, w0, #0xfffffffe
  42349c:	strb	w0, [x3, #138]
  4234a0:	ldr	x0, [x3, #56]
  4234a4:	cbnz	x0, 423400 <update_goal_chain@@Base+0xe0>
  4234a8:	cmp	w19, #0x1
  4234ac:	b.ne	4236e8 <update_goal_chain@@Base+0x3c8>  // b.any
  4234b0:	str	x25, [sp, #112]
  4234b4:	ldr	x25, [x25]
  4234b8:	cbnz	x25, 4233d8 <update_goal_chain@@Base+0xb8>
  4234bc:	ldr	w0, [x28, #60]
  4234c0:	add	w0, w0, #0x1
  4234c4:	str	w0, [x28, #60]
  4234c8:	ldr	x0, [sp, #128]
  4234cc:	cbnz	x0, 4233bc <update_goal_chain@@Base+0x9c>
  4234d0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4234d4:	ldp	x23, x24, [sp, #48]
  4234d8:	ldr	w0, [x0, #3464]
  4234dc:	ldp	x25, x26, [sp, #64]
  4234e0:	cbz	w0, 423508 <update_goal_chain@@Base+0x1e8>
  4234e4:	adrp	x0, 449000 <commands_started@@Base+0x170>
  4234e8:	ldr	w1, [sp, #100]
  4234ec:	str	w1, [x0, #2284]
  4234f0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4234f4:	ldr	w1, [sp, #104]
  4234f8:	str	w1, [x0, #3484]
  4234fc:	adrp	x0, 449000 <commands_started@@Base+0x170>
  423500:	ldr	w1, [sp, #108]
  423504:	str	w1, [x0, #2080]
  423508:	mov	w0, w21
  42350c:	ldp	x19, x20, [sp, #16]
  423510:	ldp	x21, x22, [sp, #32]
  423514:	ldp	x27, x28, [sp, #80]
  423518:	ldp	x29, x30, [sp], #144
  42351c:	ret
  423520:	cmp	w21, #0x1
  423524:	b.ls	423548 <update_goal_chain@@Base+0x228>  // b.plast
  423528:	ldrb	w0, [x3, #137]
  42352c:	ldrb	w1, [x3, #138]
  423530:	eor	x0, x0, #0x4
  423534:	and	w1, w1, #0xfffffffe
  423538:	strb	w1, [x3, #138]
  42353c:	ubfx	x0, x0, #2, #1
  423540:	orr	w19, w19, w0
  423544:	b	4234a0 <update_goal_chain@@Base+0x180>
  423548:	ldrb	w0, [x3, #136]
  42354c:	tst	x0, #0x3
  423550:	b.eq	423634 <update_goal_chain@@Base+0x314>  // b.none
  423554:	ldr	w1, [x22]
  423558:	and	w21, w0, #0x3
  42355c:	cbz	w1, 423528 <update_goal_chain@@Base+0x208>
  423560:	ldr	x0, [sp, #120]
  423564:	ldr	w1, [x20]
  423568:	ldr	w0, [x0]
  42356c:	orr	w0, w0, w1
  423570:	cbnz	w0, 423528 <update_goal_chain@@Base+0x208>
  423574:	ldrb	w0, [x3, #138]
  423578:	mov	w19, #0x1                   	// #1
  42357c:	and	w0, w0, #0xfffffffe
  423580:	strb	w0, [x3, #138]
  423584:	ldr	x23, [x25, #16]
  423588:	ldrb	w0, [x23, #136]
  42358c:	tst	x0, #0x3
  423590:	b.ne	4235f8 <update_goal_chain@@Base+0x2d8>  // b.any
  423594:	ldrb	w0, [x25, #33]
  423598:	tbnz	w0, #0, 4235f8 <update_goal_chain@@Base+0x2d8>
  42359c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4235a0:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  4235a4:	ldr	w0, [x0, #3380]
  4235a8:	ldr	w1, [x1, #3484]
  4235ac:	orr	w0, w0, w1
  4235b0:	cbnz	w0, 4235f8 <update_goal_chain@@Base+0x2d8>
  4235b4:	ldr	x0, [x23]
  4235b8:	bl	406680 <strlen@plt>
  4235bc:	mov	x22, x0
  4235c0:	ldrb	w1, [x23, #137]
  4235c4:	tbnz	w1, #5, 423720 <update_goal_chain@@Base+0x400>
  4235c8:	ldr	x0, [x23, #32]
  4235cc:	cbz	x0, 423720 <update_goal_chain@@Base+0x400>
  4235d0:	mov	w2, #0x5                   	// #5
  4235d4:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4235d8:	mov	x0, #0x0                   	// #0
  4235dc:	add	x1, x1, #0xdf0
  4235e0:	bl	406cd0 <dcgettext@plt>
  4235e4:	mov	x2, x0
  4235e8:	ldr	x3, [x23]
  4235ec:	mov	x1, x22
  4235f0:	mov	w0, #0x1                   	// #1
  4235f4:	bl	41bc10 <message@@Base>
  4235f8:	ldr	x0, [sp, #112]
  4235fc:	cbz	x0, 423698 <update_goal_chain@@Base+0x378>
  423600:	mov	x22, x0
  423604:	ldr	x0, [x25]
  423608:	str	x0, [x22]
  42360c:	mov	x0, x25
  423610:	bl	406b90 <free@plt>
  423614:	ldr	x25, [x22]
  423618:	cbz	w19, 4234b8 <update_goal_chain@@Base+0x198>
  42361c:	cbnz	x25, 4234c8 <update_goal_chain@@Base+0x1a8>
  423620:	b	4234bc <update_goal_chain@@Base+0x19c>
  423624:	str	wzr, [x22]
  423628:	str	wzr, [x23]
  42362c:	str	wzr, [x24]
  423630:	b	42344c <update_goal_chain@@Base+0x12c>
  423634:	ldr	w0, [x20]
  423638:	ldr	x1, [x3, #112]
  42363c:	cbz	w0, 4236b8 <update_goal_chain@@Base+0x398>
  423640:	cbz	x1, 4236c0 <update_goal_chain@@Base+0x3a0>
  423644:	ldrb	w0, [x3, #137]
  423648:	tbz	w0, #2, 423490 <update_goal_chain@@Base+0x170>
  42364c:	ldrb	w0, [x25, #33]
  423650:	tbz	w0, #0, 4236fc <update_goal_chain@@Base+0x3dc>
  423654:	ldr	x0, [x3, #120]
  423658:	cmp	x0, x1
  42365c:	b.eq	4236fc <update_goal_chain@@Base+0x3dc>  // b.none
  423660:	ldr	w0, [x20]
  423664:	cbz	w0, 42370c <update_goal_chain@@Base+0x3ec>
  423668:	ldr	w2, [x22]
  42366c:	ldr	w0, [x24]
  423670:	ldrb	w1, [x3, #138]
  423674:	orr	w0, w0, w2
  423678:	cmp	w0, #0x0
  42367c:	and	w0, w1, #0xfffffffe
  423680:	strb	w0, [x3, #138]
  423684:	csel	w21, w21, wzr, ne  // ne = any
  423688:	tbz	w1, #0, 4234a0 <update_goal_chain@@Base+0x180>
  42368c:	ldr	x0, [sp, #112]
  423690:	mov	w19, #0x1                   	// #1
  423694:	cbnz	x0, 423600 <update_goal_chain@@Base+0x2e0>
  423698:	ldr	x0, [x25]
  42369c:	mov	x22, x0
  4236a0:	mov	x0, x25
  4236a4:	mov	x25, x22
  4236a8:	str	x22, [sp, #128]
  4236ac:	bl	406b90 <free@plt>
  4236b0:	cbz	w19, 4234b8 <update_goal_chain@@Base+0x198>
  4236b4:	b	42361c <update_goal_chain@@Base+0x2fc>
  4236b8:	cbnz	x1, 423644 <update_goal_chain@@Base+0x324>
  4236bc:	mov	w1, #0x1                   	// #1
  4236c0:	mov	x0, x3
  4236c4:	str	x3, [sp, #136]
  4236c8:	bl	421208 <f_mtime@@Base>
  4236cc:	mov	x1, x0
  4236d0:	ldr	x3, [sp, #136]
  4236d4:	mov	x0, x3
  4236d8:	mov	x3, x0
  4236dc:	ldr	x0, [x0, #72]
  4236e0:	cbnz	x0, 4236d8 <update_goal_chain@@Base+0x3b8>
  4236e4:	b	423644 <update_goal_chain@@Base+0x324>
  4236e8:	ldr	w0, [x20]
  4236ec:	ldr	x23, [x25, #16]
  4236f0:	cbnz	w0, 4235f8 <update_goal_chain@@Base+0x2d8>
  4236f4:	mov	w19, #0x0                   	// #0
  4236f8:	b	423588 <update_goal_chain@@Base+0x268>
  4236fc:	ldrb	w0, [x3, #138]
  423700:	and	w0, w0, #0xfffffffe
  423704:	strb	w0, [x3, #138]
  423708:	b	4234a0 <update_goal_chain@@Base+0x180>
  42370c:	ldrb	w0, [x3, #138]
  423710:	mov	w21, #0x0                   	// #0
  423714:	and	w0, w0, #0xfffffffe
  423718:	strb	w0, [x3, #138]
  42371c:	b	4234a0 <update_goal_chain@@Base+0x180>
  423720:	mov	w2, #0x5                   	// #5
  423724:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  423728:	mov	x0, #0x0                   	// #0
  42372c:	add	x1, x1, #0xdd0
  423730:	bl	406cd0 <dcgettext@plt>
  423734:	mov	x2, x0
  423738:	b	4235e8 <update_goal_chain@@Base+0x2c8>
  42373c:	adrp	x5, 448000 <output_context@@Base+0x1208>
  423740:	add	x28, x5, #0xe58
  423744:	ldr	w0, [x28, #60]
  423748:	str	xzr, [x28, #8]
  42374c:	add	w0, w0, #0x1
  423750:	str	w0, [x28, #60]
  423754:	ldr	x0, [sp, #128]
  423758:	cbnz	x0, 423394 <update_goal_chain@@Base+0x74>
  42375c:	mov	w21, #0x1                   	// #1
  423760:	b	423508 <update_goal_chain@@Base+0x1e8>
  423764:	nop
  423768:	stp	x29, x30, [sp, #-112]!
  42376c:	mov	x29, sp
  423770:	stp	x23, x24, [sp, #48]
  423774:	mov	x23, x0
  423778:	adrp	x0, 449000 <commands_started@@Base+0x170>
  42377c:	stp	x21, x22, [sp, #32]
  423780:	ldr	x22, [x0, #2304]
  423784:	str	xzr, [x23]
  423788:	strh	wzr, [x23, #50]
  42378c:	adrp	x0, 449000 <commands_started@@Base+0x170>
  423790:	str	w1, [sp, #108]
  423794:	cbz	x22, 423a18 <update_goal_chain@@Base+0x6f8>
  423798:	ldrh	w0, [x23, #48]
  42379c:	stp	x19, x20, [sp, #16]
  4237a0:	sub	w24, w0, #0x1
  4237a4:	add	x24, x24, #0x1
  4237a8:	stp	x25, x26, [sp, #64]
  4237ac:	mov	x25, #0x0                   	// #0
  4237b0:	lsl	x24, x24, #3
  4237b4:	stp	x27, x28, [sp, #80]
  4237b8:	str	w0, [sp, #104]
  4237bc:	ldr	w0, [sp, #104]
  4237c0:	cbz	w0, 42383c <update_goal_chain@@Base+0x51c>
  4237c4:	ldrh	w28, [x22, #48]
  4237c8:	mov	x21, #0x0                   	// #0
  4237cc:	nop
  4237d0:	cbz	w28, 423850 <update_goal_chain@@Base+0x530>
  4237d4:	ldr	x0, [x23, #8]
  4237d8:	mov	x19, #0x0                   	// #0
  4237dc:	ldr	x27, [x22, #8]
  4237e0:	ldr	x26, [x0, x21]
  4237e4:	add	x20, x26, #0x1
  4237e8:	ldr	x1, [x27, x19, lsl #3]
  4237ec:	cmp	x26, x1
  4237f0:	b.eq	423818 <update_goal_chain@@Base+0x4f8>  // b.none
  4237f4:	ldrb	w3, [x26]
  4237f8:	ldrb	w0, [x1]
  4237fc:	cmp	w0, w3
  423800:	b.ne	423830 <update_goal_chain@@Base+0x510>  // b.any
  423804:	cbz	w0, 423818 <update_goal_chain@@Base+0x4f8>
  423808:	add	x1, x1, #0x1
  42380c:	mov	x0, x20
  423810:	bl	406b40 <strcmp@plt>
  423814:	cbnz	w0, 423830 <update_goal_chain@@Base+0x510>
  423818:	add	w0, w19, #0x1
  42381c:	add	x19, x19, #0x1
  423820:	cmp	w28, w19
  423824:	b.hi	4237e8 <update_goal_chain@@Base+0x4c8>  // b.pmore
  423828:	cmp	w0, w28
  42382c:	b.eq	423850 <update_goal_chain@@Base+0x530>  // b.none
  423830:	add	x21, x21, #0x8
  423834:	cmp	x24, x21
  423838:	b.ne	4237d0 <update_goal_chain@@Base+0x4b0>  // b.any
  42383c:	ldr	x0, [x22]
  423840:	mov	x25, x22
  423844:	cbz	x0, 423a24 <update_goal_chain@@Base+0x704>
  423848:	mov	x22, x0
  42384c:	b	4237bc <update_goal_chain@@Base+0x49c>
  423850:	ldr	x19, [x23, #32]
  423854:	ldr	x20, [x22, #32]
  423858:	cmp	x19, #0x0
  42385c:	mov	x26, x19
  423860:	mov	x27, x20
  423864:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  423868:	b.ne	4238c4 <update_goal_chain@@Base+0x5a4>  // b.any
  42386c:	b	423908 <update_goal_chain@@Base+0x5e8>
  423870:	ldr	x1, [x27, #8]
  423874:	mov	x5, x1
  423878:	cbz	x1, 4238e4 <update_goal_chain@@Base+0x5c4>
  42387c:	cmp	x6, x5
  423880:	b.eq	4238b0 <update_goal_chain@@Base+0x590>  // b.none
  423884:	ldrb	w6, [x6]
  423888:	ldrb	w5, [x5]
  42388c:	cmp	w5, w6
  423890:	b.ne	423830 <update_goal_chain@@Base+0x510>  // b.any
  423894:	cbz	w5, 4238b0 <update_goal_chain@@Base+0x590>
  423898:	cbz	x0, 4238fc <update_goal_chain@@Base+0x5dc>
  42389c:	add	x0, x0, #0x1
  4238a0:	cbz	x1, 4238f0 <update_goal_chain@@Base+0x5d0>
  4238a4:	add	x1, x1, #0x1
  4238a8:	bl	406b40 <strcmp@plt>
  4238ac:	cbnz	w0, 423830 <update_goal_chain@@Base+0x510>
  4238b0:	ldr	x26, [x26]
  4238b4:	ldr	x27, [x27]
  4238b8:	cmp	x26, #0x0
  4238bc:	ccmp	x27, #0x0, #0x4, ne  // ne = any
  4238c0:	b.eq	423908 <update_goal_chain@@Base+0x5e8>  // b.none
  4238c4:	ldr	x0, [x26, #8]
  4238c8:	mov	x6, x0
  4238cc:	cbnz	x0, 423870 <update_goal_chain@@Base+0x550>
  4238d0:	ldr	x1, [x26, #16]
  4238d4:	ldr	x6, [x1]
  4238d8:	ldr	x1, [x27, #8]
  4238dc:	mov	x5, x1
  4238e0:	cbnz	x1, 42387c <update_goal_chain@@Base+0x55c>
  4238e4:	ldr	x5, [x27, #16]
  4238e8:	ldr	x5, [x5]
  4238ec:	b	42387c <update_goal_chain@@Base+0x55c>
  4238f0:	ldr	x1, [x27, #16]
  4238f4:	ldr	x1, [x1]
  4238f8:	b	4238a4 <update_goal_chain@@Base+0x584>
  4238fc:	ldr	x0, [x26, #16]
  423900:	ldr	x0, [x0]
  423904:	b	42389c <update_goal_chain@@Base+0x57c>
  423908:	orr	x2, x26, x27
  42390c:	cbnz	x2, 423830 <update_goal_chain@@Base+0x510>
  423910:	ldr	w0, [sp, #108]
  423914:	cbnz	w0, 423980 <update_goal_chain@@Base+0x660>
  423918:	mov	x0, x19
  42391c:	bl	41aee0 <free_ns_chain@@Base>
  423920:	ldr	x0, [x23, #8]
  423924:	bl	406b90 <free@plt>
  423928:	ldr	x0, [x23, #24]
  42392c:	bl	406b90 <free@plt>
  423930:	ldr	x0, [x23, #16]
  423934:	bl	406b90 <free@plt>
  423938:	mov	x0, x23
  42393c:	bl	406b90 <free@plt>
  423940:	adrp	x0, 449000 <commands_started@@Base+0x170>
  423944:	ldr	x0, [x0, #2304]
  423948:	cmp	x23, x0
  42394c:	b.eq	423a60 <update_goal_chain@@Base+0x740>  // b.none
  423950:	adrp	x1, 449000 <commands_started@@Base+0x170>
  423954:	mov	w0, #0x0                   	// #0
  423958:	ldr	x2, [x1, #2328]
  42395c:	cmp	x23, x2
  423960:	b.eq	423a40 <update_goal_chain@@Base+0x720>  // b.none
  423964:	ldp	x19, x20, [sp, #16]
  423968:	ldp	x21, x22, [sp, #32]
  42396c:	ldp	x23, x24, [sp, #48]
  423970:	ldp	x25, x26, [sp, #64]
  423974:	ldp	x27, x28, [sp, #80]
  423978:	ldp	x29, x30, [sp], #112
  42397c:	ret
  423980:	mov	x0, x20
  423984:	ldr	x19, [x22]
  423988:	bl	41aee0 <free_ns_chain@@Base>
  42398c:	ldr	x0, [x22, #8]
  423990:	bl	406b90 <free@plt>
  423994:	ldr	x0, [x22, #24]
  423998:	bl	406b90 <free@plt>
  42399c:	ldr	x0, [x22, #16]
  4239a0:	bl	406b90 <free@plt>
  4239a4:	mov	x0, x22
  4239a8:	bl	406b90 <free@plt>
  4239ac:	adrp	x0, 449000 <commands_started@@Base+0x170>
  4239b0:	ldr	x2, [x0, #2304]
  4239b4:	cmp	x2, x22
  4239b8:	b.eq	423a6c <update_goal_chain@@Base+0x74c>  // b.none
  4239bc:	cbz	x25, 4239c4 <update_goal_chain@@Base+0x6a4>
  4239c0:	str	x19, [x25]
  4239c4:	adrp	x0, 449000 <commands_started@@Base+0x170>
  4239c8:	ldr	x1, [x0, #2328]
  4239cc:	cmp	x1, x22
  4239d0:	b.eq	423a00 <update_goal_chain@@Base+0x6e0>  // b.none
  4239d4:	cbz	x2, 423a0c <update_goal_chain@@Base+0x6ec>
  4239d8:	ldp	x19, x20, [sp, #16]
  4239dc:	ldp	x25, x26, [sp, #64]
  4239e0:	ldp	x27, x28, [sp, #80]
  4239e4:	str	x23, [x1]
  4239e8:	str	x23, [x0, #2328]
  4239ec:	mov	w0, #0x1                   	// #1
  4239f0:	ldp	x21, x22, [sp, #32]
  4239f4:	ldp	x23, x24, [sp, #48]
  4239f8:	ldp	x29, x30, [sp], #112
  4239fc:	ret
  423a00:	str	x25, [x0, #2328]
  423a04:	mov	x1, x25
  423a08:	cbnz	x2, 4239d8 <update_goal_chain@@Base+0x6b8>
  423a0c:	ldp	x19, x20, [sp, #16]
  423a10:	ldp	x25, x26, [sp, #64]
  423a14:	ldp	x27, x28, [sp, #80]
  423a18:	adrp	x1, 449000 <commands_started@@Base+0x170>
  423a1c:	str	x23, [x1, #2304]
  423a20:	b	4239e8 <update_goal_chain@@Base+0x6c8>
  423a24:	adrp	x0, 449000 <commands_started@@Base+0x170>
  423a28:	ldp	x19, x20, [sp, #16]
  423a2c:	ldr	x1, [x0, #2328]
  423a30:	ldp	x25, x26, [sp, #64]
  423a34:	ldp	x27, x28, [sp, #80]
  423a38:	str	x23, [x1]
  423a3c:	b	4239e8 <update_goal_chain@@Base+0x6c8>
  423a40:	str	xzr, [x1, #2328]
  423a44:	ldp	x19, x20, [sp, #16]
  423a48:	ldp	x21, x22, [sp, #32]
  423a4c:	ldp	x23, x24, [sp, #48]
  423a50:	ldp	x25, x26, [sp, #64]
  423a54:	ldp	x27, x28, [sp, #80]
  423a58:	ldp	x29, x30, [sp], #112
  423a5c:	ret
  423a60:	adrp	x0, 449000 <commands_started@@Base+0x170>
  423a64:	str	xzr, [x0, #2304]
  423a68:	b	423950 <update_goal_chain@@Base+0x630>
  423a6c:	cbnz	x25, 423a90 <update_goal_chain@@Base+0x770>
  423a70:	adrp	x0, 449000 <commands_started@@Base+0x170>
  423a74:	mov	x2, x19
  423a78:	str	x19, [x0, #2304]
  423a7c:	adrp	x0, 449000 <commands_started@@Base+0x170>
  423a80:	ldr	x1, [x0, #2328]
  423a84:	cmp	x1, x22
  423a88:	b.ne	4239d4 <update_goal_chain@@Base+0x6b4>  // b.any
  423a8c:	b	423a00 <update_goal_chain@@Base+0x6e0>
  423a90:	bl	406ab0 <abort@plt>
  423a94:	nop
  423a98:	stp	x29, x30, [sp, #-64]!
  423a9c:	mov	x29, sp
  423aa0:	stp	x19, x20, [sp, #16]
  423aa4:	mov	x20, x1
  423aa8:	stp	x21, x22, [sp, #32]
  423aac:	mov	x22, x0
  423ab0:	mov	x0, #0x8                   	// #8
  423ab4:	stp	x23, x24, [sp, #48]
  423ab8:	mov	x24, x2
  423abc:	bl	41ab28 <xmalloc@@Base>
  423ac0:	mov	x21, x0
  423ac4:	mov	x0, #0x8                   	// #8
  423ac8:	bl	41ab28 <xmalloc@@Base>
  423acc:	mov	x23, x0
  423ad0:	cbz	x22, 423bec <update_goal_chain@@Base+0x8cc>
  423ad4:	mov	x0, x22
  423ad8:	bl	406680 <strlen@plt>
  423adc:	mov	x19, x0
  423ae0:	add	x0, x0, #0x11
  423ae4:	and	x0, x0, #0xfffffffffffffff0
  423ae8:	mov	x1, x22
  423aec:	sub	sp, sp, x0
  423af0:	add	x19, x19, #0x1
  423af4:	mov	x22, sp
  423af8:	mov	w3, #0x25                  	// #37
  423afc:	mov	x0, x22
  423b00:	mov	x2, x19
  423b04:	strb	w3, [x0], #1
  423b08:	bl	406640 <memcpy@plt>
  423b0c:	mov	x1, x19
  423b10:	mov	x0, x22
  423b14:	bl	424a48 <strcache_add_len@@Base>
  423b18:	str	x0, [x21]
  423b1c:	str	x0, [x23]
  423b20:	cbz	x20, 423b74 <update_goal_chain@@Base+0x854>
  423b24:	mov	x0, x20
  423b28:	bl	406680 <strlen@plt>
  423b2c:	add	x2, x0, #0x11
  423b30:	add	x19, x0, #0x1
  423b34:	and	x0, x2, #0xfffffffffffffff0
  423b38:	mov	x1, x20
  423b3c:	sub	sp, sp, x0
  423b40:	mov	w3, #0x25                  	// #37
  423b44:	mov	x22, sp
  423b48:	mov	x2, x19
  423b4c:	mov	x0, x22
  423b50:	strb	w3, [x0], #1
  423b54:	bl	406640 <memcpy@plt>
  423b58:	mov	x0, #0x28                  	// #40
  423b5c:	bl	41ab50 <xcalloc@@Base>
  423b60:	mov	x20, x0
  423b64:	mov	x1, x19
  423b68:	mov	x0, x22
  423b6c:	bl	424a48 <strcache_add_len@@Base>
  423b70:	str	x0, [x20, #8]
  423b74:	mov	x0, #0x38                  	// #56
  423b78:	bl	41ab28 <xmalloc@@Base>
  423b7c:	mov	x19, x0
  423b80:	mov	w1, #0x1                   	// #1
  423b84:	mov	x0, #0x4                   	// #4
  423b88:	str	x21, [x19, #8]
  423b8c:	stp	x23, x20, [x19, #24]
  423b90:	str	x24, [x19, #40]
  423b94:	strh	w1, [x19, #48]
  423b98:	bl	41ab28 <xmalloc@@Base>
  423b9c:	mov	x20, x0
  423ba0:	ldr	x0, [x21]
  423ba4:	str	x20, [x19, #16]
  423ba8:	bl	406680 <strlen@plt>
  423bac:	ldr	x3, [x19, #24]
  423bb0:	mov	w1, #0x0                   	// #0
  423bb4:	ldr	x2, [x3]
  423bb8:	str	w0, [x20]
  423bbc:	mov	x0, x19
  423bc0:	add	x2, x2, #0x1
  423bc4:	str	x2, [x3]
  423bc8:	bl	423768 <update_goal_chain@@Base+0x448>
  423bcc:	cbz	w0, 423bd4 <update_goal_chain@@Base+0x8b4>
  423bd0:	strb	wzr, [x19, #50]
  423bd4:	mov	sp, x29
  423bd8:	ldp	x19, x20, [sp, #16]
  423bdc:	ldp	x21, x22, [sp, #32]
  423be0:	ldp	x23, x24, [sp, #48]
  423be4:	ldp	x29, x30, [sp], #64
  423be8:	ret
  423bec:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  423bf0:	mov	x1, #0x5                   	// #5
  423bf4:	add	x0, x0, #0xe20
  423bf8:	bl	424a48 <strcache_add_len@@Base>
  423bfc:	str	x0, [x21]
  423c00:	add	x0, x0, #0x1
  423c04:	str	x0, [x23]
  423c08:	b	423b20 <update_goal_chain@@Base+0x800>
  423c0c:	nop
  423c10:	stp	x29, x30, [sp, #-48]!
  423c14:	mov	x29, sp
  423c18:	stp	x19, x20, [sp, #16]
  423c1c:	stp	x21, x22, [sp, #32]
  423c20:	mov	x21, x0
  423c24:	mov	x0, #0x8                   	// #8
  423c28:	bl	41ab28 <xmalloc@@Base>
  423c2c:	mov	x20, x0
  423c30:	mov	x0, #0x8                   	// #8
  423c34:	bl	41ab28 <xmalloc@@Base>
  423c38:	mov	x22, x0
  423c3c:	cbz	x21, 423d04 <update_goal_chain@@Base+0x9e4>
  423c40:	mov	x0, x21
  423c44:	bl	406680 <strlen@plt>
  423c48:	mov	x19, x0
  423c4c:	add	x0, x0, #0x11
  423c50:	and	x0, x0, #0xfffffffffffffff0
  423c54:	mov	x1, x21
  423c58:	sub	sp, sp, x0
  423c5c:	add	x19, x19, #0x1
  423c60:	mov	x21, sp
  423c64:	mov	w3, #0x25                  	// #37
  423c68:	mov	x0, x21
  423c6c:	mov	x2, x19
  423c70:	strb	w3, [x0], #1
  423c74:	bl	406640 <memcpy@plt>
  423c78:	mov	x1, x19
  423c7c:	mov	x0, x21
  423c80:	bl	424a48 <strcache_add_len@@Base>
  423c84:	str	x0, [x20]
  423c88:	str	x0, [x22]
  423c8c:	mov	x0, #0x38                  	// #56
  423c90:	bl	41ab28 <xmalloc@@Base>
  423c94:	mov	x19, x0
  423c98:	mov	w1, #0x1                   	// #1
  423c9c:	mov	x0, #0x4                   	// #4
  423ca0:	str	x20, [x19, #8]
  423ca4:	stp	x22, xzr, [x19, #24]
  423ca8:	str	xzr, [x19, #40]
  423cac:	strh	w1, [x19, #48]
  423cb0:	bl	41ab28 <xmalloc@@Base>
  423cb4:	mov	x1, x0
  423cb8:	ldr	x0, [x20]
  423cbc:	str	x1, [x19, #16]
  423cc0:	mov	x20, x1
  423cc4:	bl	406680 <strlen@plt>
  423cc8:	ldr	x3, [x19, #24]
  423ccc:	mov	w1, #0x0                   	// #0
  423cd0:	ldr	x2, [x3]
  423cd4:	str	w0, [x20]
  423cd8:	mov	x0, x19
  423cdc:	add	x2, x2, #0x1
  423ce0:	str	x2, [x3]
  423ce4:	bl	423768 <update_goal_chain@@Base+0x448>
  423ce8:	cbz	w0, 423cf0 <update_goal_chain@@Base+0x9d0>
  423cec:	strb	wzr, [x19, #50]
  423cf0:	mov	sp, x29
  423cf4:	ldp	x19, x20, [sp, #16]
  423cf8:	ldp	x21, x22, [sp, #32]
  423cfc:	ldp	x29, x30, [sp], #48
  423d00:	ret
  423d04:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  423d08:	mov	x1, #0x5                   	// #5
  423d0c:	add	x0, x0, #0xe20
  423d10:	bl	424a48 <strcache_add_len@@Base>
  423d14:	str	x0, [x20]
  423d18:	add	x0, x0, #0x1
  423d1c:	str	x0, [x22]
  423d20:	b	423c8c <update_goal_chain@@Base+0x96c>
  423d24:	nop

0000000000423d28 <snap_implicit_rules@@Base>:
  423d28:	stp	x29, x30, [sp, #-144]!
  423d2c:	mov	x1, #0xe                   	// #14
  423d30:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x10e0>
  423d34:	mov	x29, sp
  423d38:	stp	x21, x22, [sp, #32]
  423d3c:	adrp	x21, 449000 <commands_started@@Base+0x170>
  423d40:	add	x0, x0, #0x7a0
  423d44:	stp	x19, x20, [sp, #16]
  423d48:	bl	4257c8 <lookup_variable@@Base>
  423d4c:	bl	40dc90 <expand_extra_prereqs@@Base>
  423d50:	str	xzr, [x21, #2312]
  423d54:	str	x0, [sp, #128]
  423d58:	cbz	x0, 423fdc <snap_implicit_rules@@Base+0x2b4>
  423d5c:	mov	x19, x0
  423d60:	mov	x20, #0x0                   	// #0
  423d64:	str	wzr, [sp, #116]
  423d68:	ldr	x0, [x19, #8]
  423d6c:	cbz	x0, 423f84 <snap_implicit_rules@@Base+0x25c>
  423d70:	bl	406680 <strlen@plt>
  423d74:	cmp	x20, x0
  423d78:	ldr	x19, [x19]
  423d7c:	b.cs	423f6c <snap_implicit_rules@@Base+0x244>  // b.hs, b.nlast
  423d80:	ldr	w1, [sp, #116]
  423d84:	mov	x20, x0
  423d88:	str	x0, [x21, #2312]
  423d8c:	add	w1, w1, #0x1
  423d90:	str	w1, [sp, #116]
  423d94:	cbnz	x19, 423d68 <snap_implicit_rules@@Base+0x40>
  423d98:	adrp	x2, 449000 <commands_started@@Base+0x170>
  423d9c:	adrp	x0, 449000 <commands_started@@Base+0x170>
  423da0:	adrp	x1, 449000 <commands_started@@Base+0x170>
  423da4:	adrp	x3, 449000 <commands_started@@Base+0x170>
  423da8:	ldr	x2, [x2, #2304]
  423dac:	str	wzr, [x0, #2324]
  423db0:	str	wzr, [x3, #2320]
  423db4:	str	wzr, [x1, #2336]
  423db8:	str	x2, [sp, #104]
  423dbc:	cbz	x2, 423fe4 <snap_implicit_rules@@Base+0x2bc>
  423dc0:	add	x0, x0, #0x914
  423dc4:	stp	x25, x26, [sp, #64]
  423dc8:	adrp	x25, 42d000 <_IO_stdin_used@@Base+0x40e0>
  423dcc:	add	x25, x25, #0xed0
  423dd0:	add	x1, x1, #0x920
  423dd4:	mov	w2, #0x0                   	// #0
  423dd8:	mov	x20, #0x0                   	// #0
  423ddc:	stp	x23, x24, [sp, #48]
  423de0:	mov	x24, #0x0                   	// #0
  423de4:	stp	x27, x28, [sp, #80]
  423de8:	str	x1, [sp, #120]
  423dec:	str	x0, [sp, #136]
  423df0:	mov	w0, #0x0                   	// #0
  423df4:	nop
  423df8:	ldr	x1, [sp, #104]
  423dfc:	add	w0, w0, #0x1
  423e00:	ldr	x3, [sp, #120]
  423e04:	ldrh	w1, [x1, #48]
  423e08:	str	w0, [x3]
  423e0c:	cmp	w1, w2
  423e10:	b.ls	423e1c <snap_implicit_rules@@Base+0xf4>  // b.plast
  423e14:	adrp	x0, 449000 <commands_started@@Base+0x170>
  423e18:	str	w1, [x0, #2320]
  423e1c:	ldr	x0, [sp, #104]
  423e20:	ldr	x28, [x0, #32]
  423e24:	cbz	x28, 423fbc <snap_implicit_rules@@Base+0x294>
  423e28:	ldr	w21, [sp, #116]
  423e2c:	adrp	x23, 449000 <commands_started@@Base+0x170>
  423e30:	add	x23, x23, #0x908
  423e34:	mov	x22, #0x0                   	// #0
  423e38:	ldr	x27, [x28, #8]
  423e3c:	cbz	x27, 423f48 <snap_implicit_rules@@Base+0x220>
  423e40:	mov	x0, x27
  423e44:	bl	406680 <strlen@plt>
  423e48:	mov	w1, #0x2f                  	// #47
  423e4c:	mov	x19, x0
  423e50:	mov	x0, x27
  423e54:	bl	406a70 <strrchr@plt>
  423e58:	mov	x1, #0x0                   	// #0
  423e5c:	mov	x26, x0
  423e60:	cbz	x0, 423e70 <snap_implicit_rules@@Base+0x148>
  423e64:	mov	w1, #0x25                  	// #37
  423e68:	bl	406bb0 <strchr@plt>
  423e6c:	mov	x1, x0
  423e70:	ldr	x0, [x23]
  423e74:	add	w21, w21, #0x1
  423e78:	cmp	x0, x19
  423e7c:	b.cs	423e84 <snap_implicit_rules@@Base+0x15c>  // b.hs, b.nlast
  423e80:	str	x19, [x23]
  423e84:	ldr	x0, [x28]
  423e88:	cmp	x0, #0x0
  423e8c:	csel	x22, x22, x28, ne  // ne = any
  423e90:	cbz	x1, 423f30 <snap_implicit_rules@@Base+0x208>
  423e94:	cmp	x27, x26
  423e98:	csinc	x26, x26, x27, ne  // ne = any
  423e9c:	sub	x19, x26, x27
  423ea0:	cmp	x19, x24
  423ea4:	b.hi	423f54 <snap_implicit_rules@@Base+0x22c>  // b.pmore
  423ea8:	mov	x2, x19
  423eac:	mov	x1, x27
  423eb0:	mov	x0, x20
  423eb4:	bl	406640 <memcpy@plt>
  423eb8:	strb	wzr, [x20, x19]
  423ebc:	mov	x1, x25
  423ec0:	mov	x0, x20
  423ec4:	bl	40b448 <dir_file_exists_p@@Base>
  423ec8:	cmp	w0, #0x0
  423ecc:	ldrb	w0, [x28, #33]
  423ed0:	cset	w1, eq  // eq = none
  423ed4:	bfxil	w0, w1, #0, #1
  423ed8:	strb	w0, [x28, #33]
  423edc:	ldr	x28, [x28]
  423ee0:	cbnz	x28, 423e38 <snap_implicit_rules@@Base+0x110>
  423ee4:	ldr	x0, [sp, #128]
  423ee8:	cbz	x0, 423ef8 <snap_implicit_rules@@Base+0x1d0>
  423eec:	cbz	x22, 423fc8 <snap_implicit_rules@@Base+0x2a0>
  423ef0:	bl	41ae38 <copy_dep_chain@@Base>
  423ef4:	str	x0, [x22]
  423ef8:	ldr	x1, [sp, #136]
  423efc:	ldr	w0, [x1]
  423f00:	cmp	w0, w21
  423f04:	ldr	x0, [sp, #104]
  423f08:	ldr	x0, [x0]
  423f0c:	str	x0, [sp, #104]
  423f10:	b.cs	423f90 <snap_implicit_rules@@Base+0x268>  // b.hs, b.nlast
  423f14:	str	w21, [x1]
  423f18:	cbz	x0, 423f94 <snap_implicit_rules@@Base+0x26c>
  423f1c:	adrp	x0, 449000 <commands_started@@Base+0x170>
  423f20:	ldr	w2, [x0, #2320]
  423f24:	ldr	x0, [sp, #120]
  423f28:	ldr	w0, [x0]
  423f2c:	b	423df8 <snap_implicit_rules@@Base+0xd0>
  423f30:	ldrb	w1, [x28, #33]
  423f34:	and	w1, w1, #0xfffffffe
  423f38:	strb	w1, [x28, #33]
  423f3c:	mov	x28, x0
  423f40:	cbnz	x28, 423e38 <snap_implicit_rules@@Base+0x110>
  423f44:	b	423ee4 <snap_implicit_rules@@Base+0x1bc>
  423f48:	ldr	x0, [x28, #16]
  423f4c:	ldr	x27, [x0]
  423f50:	b	423e40 <snap_implicit_rules@@Base+0x118>
  423f54:	mov	x0, x20
  423f58:	add	x1, x19, #0x1
  423f5c:	mov	x24, x19
  423f60:	bl	41ab78 <xrealloc@@Base>
  423f64:	mov	x20, x0
  423f68:	b	423ea8 <snap_implicit_rules@@Base+0x180>
  423f6c:	ldr	w0, [sp, #116]
  423f70:	add	w0, w0, #0x1
  423f74:	str	w0, [sp, #116]
  423f78:	cbz	x19, 423d98 <snap_implicit_rules@@Base+0x70>
  423f7c:	ldr	x0, [x19, #8]
  423f80:	cbnz	x0, 423d70 <snap_implicit_rules@@Base+0x48>
  423f84:	ldr	x0, [x19, #16]
  423f88:	ldr	x0, [x0]
  423f8c:	b	423d70 <snap_implicit_rules@@Base+0x48>
  423f90:	cbnz	x0, 423f1c <snap_implicit_rules@@Base+0x1f4>
  423f94:	mov	x0, x20
  423f98:	ldp	x23, x24, [sp, #48]
  423f9c:	ldp	x25, x26, [sp, #64]
  423fa0:	ldp	x27, x28, [sp, #80]
  423fa4:	bl	406b90 <free@plt>
  423fa8:	ldp	x19, x20, [sp, #16]
  423fac:	ldp	x21, x22, [sp, #32]
  423fb0:	ldr	x0, [sp, #128]
  423fb4:	ldp	x29, x30, [sp], #144
  423fb8:	b	41aee0 <free_ns_chain@@Base>
  423fbc:	ldr	x0, [sp, #128]
  423fc0:	ldr	w21, [sp, #116]
  423fc4:	cbz	x0, 423ef8 <snap_implicit_rules@@Base+0x1d0>
  423fc8:	ldr	x0, [sp, #128]
  423fcc:	bl	41ae38 <copy_dep_chain@@Base>
  423fd0:	ldr	x1, [sp, #104]
  423fd4:	str	x0, [x1, #32]
  423fd8:	b	423ef8 <snap_implicit_rules@@Base+0x1d0>
  423fdc:	str	wzr, [sp, #116]
  423fe0:	b	423d98 <snap_implicit_rules@@Base+0x70>
  423fe4:	mov	x20, #0x0                   	// #0
  423fe8:	mov	x0, x20
  423fec:	bl	406b90 <free@plt>
  423ff0:	ldp	x19, x20, [sp, #16]
  423ff4:	ldp	x21, x22, [sp, #32]
  423ff8:	ldr	x0, [sp, #128]
  423ffc:	ldp	x29, x30, [sp], #144
  424000:	b	41aee0 <free_ns_chain@@Base>
  424004:	nop

0000000000424008 <convert_to_pattern@@Base>:
  424008:	stp	x29, x30, [sp, #-112]!
  42400c:	adrp	x0, 449000 <commands_started@@Base+0x170>
  424010:	mov	x29, sp
  424014:	ldr	x0, [x0, #2296]
  424018:	stp	x21, x22, [sp, #32]
  42401c:	adrp	x22, 448000 <output_context@@Base+0x1208>
  424020:	stp	x19, x20, [sp, #16]
  424024:	mov	x20, #0x0                   	// #0
  424028:	ldr	x21, [x0, #24]
  42402c:	str	xzr, [x22, #3736]
  424030:	stp	x23, x24, [sp, #48]
  424034:	mov	x19, x21
  424038:	stp	x25, x26, [sp, #64]
  42403c:	stp	x27, x28, [sp, #80]
  424040:	cbz	x21, 4241d8 <convert_to_pattern@@Base+0x1d0>
  424044:	nop
  424048:	ldr	x0, [x19, #8]
  42404c:	cbz	x0, 424288 <convert_to_pattern@@Base+0x280>
  424050:	bl	406680 <strlen@plt>
  424054:	cmp	x20, x0
  424058:	ldr	x19, [x19]
  42405c:	b.cs	42427c <convert_to_pattern@@Base+0x274>  // b.hs, b.nlast
  424060:	str	x0, [x22, #3736]
  424064:	mov	x20, x0
  424068:	cbnz	x19, 424048 <convert_to_pattern@@Base+0x40>
  42406c:	lsl	x0, x0, #1
  424070:	adrp	x26, 449000 <commands_started@@Base+0x170>
  424074:	add	x0, x0, #0x10
  424078:	add	x26, x26, #0x828
  42407c:	and	x0, x0, #0xfffffffffffffff0
  424080:	adrp	x27, 449000 <commands_started@@Base+0x170>
  424084:	sub	sp, sp, x0
  424088:	add	x1, x27, #0x8f8
  42408c:	mov	x24, sp
  424090:	adrp	x28, 42d000 <_IO_stdin_used@@Base+0x40e0>
  424094:	add	x0, x28, #0xed0
  424098:	stp	x0, x1, [x29, #96]
  42409c:	nop
  4240a0:	ldr	x0, [x21, #8]
  4240a4:	cbz	x0, 4242a0 <convert_to_pattern@@Base+0x298>
  4240a8:	bl	423c10 <update_goal_chain@@Base+0x8f0>
  4240ac:	ldr	x0, [x21, #16]
  4240b0:	ldr	x2, [x0, #32]
  4240b4:	cbz	x2, 4240c8 <convert_to_pattern@@Base+0xc0>
  4240b8:	ldr	x1, [x21, #8]
  4240bc:	cbz	x1, 4242c8 <convert_to_pattern@@Base+0x2c0>
  4240c0:	ldr	x0, [x29, #96]
  4240c4:	bl	423a98 <update_goal_chain@@Base+0x778>
  4240c8:	ldr	x19, [x21, #8]
  4240cc:	cbz	x19, 424294 <convert_to_pattern@@Base+0x28c>
  4240d0:	mov	x0, x19
  4240d4:	bl	406680 <strlen@plt>
  4240d8:	mov	x1, x19
  4240dc:	mov	x22, x0
  4240e0:	mov	x2, x0
  4240e4:	mov	x0, x24
  4240e8:	bl	406640 <memcpy@plt>
  4240ec:	adrp	x25, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4240f0:	ldr	x0, [x29, #104]
  4240f4:	add	x23, x24, x22
  4240f8:	add	x25, x25, #0xe28
  4240fc:	ldr	x0, [x0]
  424100:	ldr	x28, [x0, #24]
  424104:	cbz	x28, 4241d0 <convert_to_pattern@@Base+0x1c8>
  424108:	ldr	x27, [x28, #8]
  42410c:	mov	x20, x27
  424110:	cbz	x27, 424210 <convert_to_pattern@@Base+0x208>
  424114:	mov	x0, x20
  424118:	bl	406680 <strlen@plt>
  42411c:	mov	x19, x0
  424120:	cmp	x22, x0
  424124:	b.ne	42414c <convert_to_pattern@@Base+0x144>  // b.any
  424128:	ldr	x0, [x21, #8]
  42412c:	mov	x2, x0
  424130:	cbz	x0, 42421c <convert_to_pattern@@Base+0x214>
  424134:	cmp	x20, x2
  424138:	b.eq	4241c8 <convert_to_pattern@@Base+0x1c0>  // b.none
  42413c:	ldrb	w3, [x2]
  424140:	ldrb	w2, [x20]
  424144:	cmp	w2, w3
  424148:	b.eq	424228 <convert_to_pattern@@Base+0x220>  // b.none
  42414c:	mov	x1, x20
  424150:	add	x2, x19, #0x1
  424154:	mov	x0, x23
  424158:	bl	406640 <memcpy@plt>
  42415c:	mov	x0, x24
  424160:	bl	40ced8 <lookup_file@@Base>
  424164:	mov	x20, x0
  424168:	cbz	x0, 4241c8 <convert_to_pattern@@Base+0x1c0>
  42416c:	ldr	x27, [x0, #32]
  424170:	cbz	x27, 4241c8 <convert_to_pattern@@Base+0x1c0>
  424174:	ldr	x0, [x0, #24]
  424178:	cbz	x0, 4241a8 <convert_to_pattern@@Base+0x1a0>
  42417c:	ldr	w0, [x26]
  424180:	cbnz	w0, 4241c8 <convert_to_pattern@@Base+0x1c0>
  424184:	mov	x1, x25
  424188:	mov	w2, #0x5                   	// #5
  42418c:	mov	x0, #0x0                   	// #0
  424190:	bl	406cd0 <dcgettext@plt>
  424194:	mov	x1, #0x0                   	// #0
  424198:	mov	x2, x0
  42419c:	mov	x0, x27
  4241a0:	bl	41bd88 <error@@Base>
  4241a4:	ldr	x27, [x20, #32]
  4241a8:	cmp	x19, #0x2
  4241ac:	ldr	x1, [x21, #8]
  4241b0:	b.eq	424248 <convert_to_pattern@@Base+0x240>  // b.none
  4241b4:	ldr	x0, [x28, #8]
  4241b8:	cbz	x0, 4241f8 <convert_to_pattern@@Base+0x1f0>
  4241bc:	cbz	x1, 424204 <convert_to_pattern@@Base+0x1fc>
  4241c0:	mov	x2, x27
  4241c4:	bl	423a98 <update_goal_chain@@Base+0x778>
  4241c8:	ldr	x28, [x28]
  4241cc:	cbnz	x28, 424108 <convert_to_pattern@@Base+0x100>
  4241d0:	ldr	x21, [x21]
  4241d4:	cbnz	x21, 4240a0 <convert_to_pattern@@Base+0x98>
  4241d8:	mov	sp, x29
  4241dc:	ldp	x19, x20, [sp, #16]
  4241e0:	ldp	x21, x22, [sp, #32]
  4241e4:	ldp	x23, x24, [sp, #48]
  4241e8:	ldp	x25, x26, [sp, #64]
  4241ec:	ldp	x27, x28, [sp, #80]
  4241f0:	ldp	x29, x30, [sp], #112
  4241f4:	ret
  4241f8:	ldr	x0, [x28, #16]
  4241fc:	ldr	x0, [x0]
  424200:	cbnz	x1, 4241c0 <convert_to_pattern@@Base+0x1b8>
  424204:	ldr	x1, [x21, #16]
  424208:	ldr	x1, [x1]
  42420c:	b	4241c0 <convert_to_pattern@@Base+0x1b8>
  424210:	ldr	x0, [x28, #16]
  424214:	ldr	x20, [x0]
  424218:	b	424114 <convert_to_pattern@@Base+0x10c>
  42421c:	ldr	x2, [x21, #16]
  424220:	ldr	x2, [x2]
  424224:	b	424134 <convert_to_pattern@@Base+0x12c>
  424228:	cbz	w2, 4241c8 <convert_to_pattern@@Base+0x1c0>
  42422c:	cbz	x0, 4242bc <convert_to_pattern@@Base+0x2b4>
  424230:	add	x0, x0, #0x1
  424234:	add	x1, x27, #0x1
  424238:	cbz	x27, 4242ac <convert_to_pattern@@Base+0x2a4>
  42423c:	bl	406b40 <strcmp@plt>
  424240:	cbnz	w0, 42414c <convert_to_pattern@@Base+0x144>
  424244:	b	4241c8 <convert_to_pattern@@Base+0x1c0>
  424248:	ldrb	w0, [x23]
  42424c:	cmp	w0, #0x2e
  424250:	b.ne	4241b4 <convert_to_pattern@@Base+0x1ac>  // b.any
  424254:	ldrb	w0, [x23, #1]
  424258:	cmp	w0, #0x61
  42425c:	b.ne	4241b4 <convert_to_pattern@@Base+0x1ac>  // b.any
  424260:	cbz	x1, 4242d0 <convert_to_pattern@@Base+0x2c8>
  424264:	mov	x2, x27
  424268:	mov	x0, #0x0                   	// #0
  42426c:	bl	423a98 <update_goal_chain@@Base+0x778>
  424270:	ldr	x1, [x21, #8]
  424274:	ldr	x27, [x20, #32]
  424278:	b	4241b4 <convert_to_pattern@@Base+0x1ac>
  42427c:	cbnz	x19, 424048 <convert_to_pattern@@Base+0x40>
  424280:	mov	x0, x20
  424284:	b	42406c <convert_to_pattern@@Base+0x64>
  424288:	ldr	x0, [x19, #16]
  42428c:	ldr	x0, [x0]
  424290:	b	424050 <convert_to_pattern@@Base+0x48>
  424294:	ldr	x0, [x21, #16]
  424298:	ldr	x19, [x0]
  42429c:	b	4240d0 <convert_to_pattern@@Base+0xc8>
  4242a0:	ldr	x0, [x21, #16]
  4242a4:	ldr	x0, [x0]
  4242a8:	b	4240a8 <convert_to_pattern@@Base+0xa0>
  4242ac:	ldr	x1, [x28, #16]
  4242b0:	ldr	x1, [x1]
  4242b4:	add	x1, x1, #0x1
  4242b8:	b	42423c <convert_to_pattern@@Base+0x234>
  4242bc:	ldr	x0, [x21, #16]
  4242c0:	ldr	x0, [x0]
  4242c4:	b	424230 <convert_to_pattern@@Base+0x228>
  4242c8:	ldr	x1, [x0]
  4242cc:	b	4240c0 <convert_to_pattern@@Base+0xb8>
  4242d0:	ldr	x0, [x21, #16]
  4242d4:	ldr	x1, [x0]
  4242d8:	b	424264 <convert_to_pattern@@Base+0x25c>
  4242dc:	nop

00000000004242e0 <install_pattern_rule@@Base>:
  4242e0:	stp	x29, x30, [sp, #-80]!
  4242e4:	mov	x29, sp
  4242e8:	stp	x19, x20, [sp, #16]
  4242ec:	mov	x20, x0
  4242f0:	mov	x0, #0x38                  	// #56
  4242f4:	stp	x21, x22, [sp, #32]
  4242f8:	mov	w22, w1
  4242fc:	str	x23, [sp, #48]
  424300:	bl	41ab28 <xmalloc@@Base>
  424304:	mov	x19, x0
  424308:	mov	w1, #0x1                   	// #1
  42430c:	mov	x0, #0x8                   	// #8
  424310:	strh	w1, [x19, #48]
  424314:	bl	41ab28 <xmalloc@@Base>
  424318:	str	x0, [x19, #8]
  42431c:	mov	x0, #0x8                   	// #8
  424320:	bl	41ab28 <xmalloc@@Base>
  424324:	str	x0, [x19, #24]
  424328:	mov	x0, #0x4                   	// #4
  42432c:	bl	41ab28 <xmalloc@@Base>
  424330:	mov	x21, x0
  424334:	ldr	x23, [x20]
  424338:	str	x0, [x19, #16]
  42433c:	mov	x0, x23
  424340:	bl	406680 <strlen@plt>
  424344:	ldr	x1, [x19, #8]
  424348:	str	w0, [x21]
  42434c:	ldr	x21, [x19, #24]
  424350:	mov	x0, x1
  424354:	str	x23, [x1]
  424358:	bl	41d7e0 <find_percent_cached@@Base>
  42435c:	ldr	x6, [x19, #24]
  424360:	str	x0, [x21]
  424364:	mov	x1, #0x28                  	// #40
  424368:	add	x0, sp, #0x48
  42436c:	mov	w4, #0x0                   	// #0
  424370:	mov	x3, #0x0                   	// #0
  424374:	ldr	x5, [x6]
  424378:	mov	w2, #0x1                   	// #1
  42437c:	add	x5, x5, #0x1
  424380:	str	x5, [x6]
  424384:	ldr	x5, [x20, #8]
  424388:	str	x5, [sp, #72]
  42438c:	bl	41e790 <parse_file_seq@@Base>
  424390:	str	x0, [x19, #32]
  424394:	mov	w1, #0x0                   	// #0
  424398:	mov	x0, x19
  42439c:	bl	423768 <update_goal_chain@@Base+0x448>
  4243a0:	cbnz	w0, 4243b8 <install_pattern_rule@@Base+0xd8>
  4243a4:	ldp	x19, x20, [sp, #16]
  4243a8:	ldp	x21, x22, [sp, #32]
  4243ac:	ldr	x23, [sp, #48]
  4243b0:	ldp	x29, x30, [sp], #80
  4243b4:	ret
  4243b8:	cmp	w22, #0x0
  4243bc:	mov	x0, #0x38                  	// #56
  4243c0:	cset	w1, ne  // ne = any
  4243c4:	strb	w1, [x19, #50]
  4243c8:	bl	41ab28 <xmalloc@@Base>
  4243cc:	mov	x21, x0
  4243d0:	ldr	x0, [x20, #16]
  4243d4:	str	x21, [x19, #40]
  4243d8:	str	xzr, [x21]
  4243dc:	stp	xzr, xzr, [x21, #8]
  4243e0:	bl	41abb0 <xstrdup@@Base>
  4243e4:	ldr	x1, [x19, #40]
  4243e8:	str	x0, [x21, #24]
  4243ec:	mov	w0, #0x9                   	// #9
  4243f0:	str	xzr, [x1, #32]
  4243f4:	strb	w0, [x1, #50]
  4243f8:	ldp	x19, x20, [sp, #16]
  4243fc:	ldp	x21, x22, [sp, #32]
  424400:	ldr	x23, [sp, #48]
  424404:	ldp	x29, x30, [sp], #80
  424408:	ret
  42440c:	nop

0000000000424410 <create_pattern_rule@@Base>:
  424410:	stp	x29, x30, [sp, #-80]!
  424414:	mov	x29, sp
  424418:	stp	x19, x20, [sp, #16]
  42441c:	mov	x20, x4
  424420:	mov	x19, x5
  424424:	stp	x21, x22, [sp, #32]
  424428:	mov	x21, x1
  42442c:	mov	x22, x0
  424430:	mov	x0, #0x38                  	// #56
  424434:	stp	x23, x24, [sp, #48]
  424438:	and	w23, w2, #0xffff
  42443c:	stp	x25, x26, [sp, #64]
  424440:	mov	w26, w3
  424444:	mov	w25, w6
  424448:	bl	41ab28 <xmalloc@@Base>
  42444c:	mov	x24, x0
  424450:	ubfiz	x0, x23, #2, #16
  424454:	str	x22, [x24, #8]
  424458:	stp	x21, x20, [x24, #24]
  42445c:	str	x19, [x24, #40]
  424460:	strh	w23, [x24, #48]
  424464:	bl	41ab28 <xmalloc@@Base>
  424468:	str	x0, [x24, #16]
  42446c:	cbz	w23, 4244a4 <create_pattern_rule@@Base+0x94>
  424470:	ldr	x20, [x24, #24]
  424474:	mov	x21, x0
  424478:	mov	x19, #0x0                   	// #0
  42447c:	nop
  424480:	ldr	x0, [x22, x19, lsl #3]
  424484:	bl	406680 <strlen@plt>
  424488:	ldr	x1, [x20, x19, lsl #3]
  42448c:	str	w0, [x21, x19, lsl #2]
  424490:	add	x1, x1, #0x1
  424494:	str	x1, [x20, x19, lsl #3]
  424498:	add	x19, x19, #0x1
  42449c:	cmp	w23, w19
  4244a0:	b.hi	424480 <create_pattern_rule@@Base+0x70>  // b.pmore
  4244a4:	mov	w1, w25
  4244a8:	mov	x0, x24
  4244ac:	bl	423768 <update_goal_chain@@Base+0x448>
  4244b0:	cbz	w0, 4244c0 <create_pattern_rule@@Base+0xb0>
  4244b4:	cmp	w26, #0x0
  4244b8:	cset	w0, ne  // ne = any
  4244bc:	strb	w0, [x24, #50]
  4244c0:	ldp	x19, x20, [sp, #16]
  4244c4:	ldp	x21, x22, [sp, #32]
  4244c8:	ldp	x23, x24, [sp, #48]
  4244cc:	ldp	x25, x26, [sp, #64]
  4244d0:	ldp	x29, x30, [sp], #80
  4244d4:	ret

00000000004244d8 <print_rule_data_base@@Base>:
  4244d8:	stp	x29, x30, [sp, #-64]!
  4244dc:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4244e0:	add	x1, x1, #0xe68
  4244e4:	mov	w2, #0x5                   	// #5
  4244e8:	mov	x29, sp
  4244ec:	mov	x0, #0x0                   	// #0
  4244f0:	stp	x19, x20, [sp, #16]
  4244f4:	stp	x23, x24, [sp, #48]
  4244f8:	bl	406cd0 <dcgettext@plt>
  4244fc:	bl	406ae0 <puts@plt>
  424500:	adrp	x0, 449000 <commands_started@@Base+0x170>
  424504:	ldr	x19, [x0, #2304]
  424508:	cbz	x19, 424640 <print_rule_data_base@@Base+0x168>
  42450c:	stp	x21, x22, [sp, #32]
  424510:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  424514:	add	x22, x22, #0x1b8
  424518:	mov	w24, #0x0                   	// #0
  42451c:	mov	w23, #0x0                   	// #0
  424520:	ldr	x1, [x22]
  424524:	mov	w0, #0xa                   	// #10
  424528:	add	w23, w23, #0x1
  42452c:	bl	406740 <putc@plt>
  424530:	ldrh	w0, [x19, #48]
  424534:	cbz	w0, 424598 <print_rule_data_base@@Base+0xc0>
  424538:	mov	x21, #0x0                   	// #0
  42453c:	mov	w20, #0x0                   	// #0
  424540:	b	42455c <print_rule_data_base@@Base+0x84>
  424544:	mov	w0, #0x20                  	// #32
  424548:	bl	406740 <putc@plt>
  42454c:	ldrh	w0, [x19, #48]
  424550:	add	x21, x21, #0x8
  424554:	cmp	w20, w0
  424558:	b.cs	424598 <print_rule_data_base@@Base+0xc0>  // b.hs, b.nlast
  42455c:	ldr	x0, [x19, #8]
  424560:	add	w20, w20, #0x1
  424564:	ldr	x1, [x22]
  424568:	ldr	x0, [x0, x21]
  42456c:	bl	406690 <fputs@plt>
  424570:	ldrh	w0, [x19, #48]
  424574:	ldr	x1, [x22]
  424578:	cmp	w20, w0
  42457c:	b.ne	424544 <print_rule_data_base@@Base+0x6c>  // b.any
  424580:	mov	w0, #0x3a                  	// #58
  424584:	bl	406740 <putc@plt>
  424588:	ldrh	w0, [x19, #48]
  42458c:	add	x21, x21, #0x8
  424590:	cmp	w20, w0
  424594:	b.cc	42455c <print_rule_data_base@@Base+0x84>  // b.lo, b.ul, b.last
  424598:	ldrb	w0, [x19, #50]
  42459c:	cbnz	w0, 42462c <print_rule_data_base@@Base+0x154>
  4245a0:	ldr	x0, [x19, #32]
  4245a4:	bl	40e700 <print_prereqs@@Base>
  4245a8:	ldr	x0, [x19, #40]
  4245ac:	cbz	x0, 4245b4 <print_rule_data_base@@Base+0xdc>
  4245b0:	bl	40a9f8 <print_commands@@Base>
  4245b4:	ldrb	w0, [x19, #50]
  4245b8:	ldr	x19, [x19]
  4245bc:	cmp	w0, #0x0
  4245c0:	cinc	w24, w24, ne  // ne = any
  4245c4:	cbnz	x19, 424520 <print_rule_data_base@@Base+0x48>
  4245c8:	cbz	w23, 42463c <print_rule_data_base@@Base+0x164>
  4245cc:	mov	w2, #0x5                   	// #5
  4245d0:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  4245d4:	mov	x0, #0x0                   	// #0
  4245d8:	add	x1, x1, #0xe98
  4245dc:	bl	406cd0 <dcgettext@plt>
  4245e0:	ucvtf	d2, w24
  4245e4:	ucvtf	d0, w23
  4245e8:	mov	x1, #0x4059000000000000    	// #4636737291354636288
  4245ec:	fmov	d1, x1
  4245f0:	mov	w2, w24
  4245f4:	mov	w1, w23
  4245f8:	fdiv	d0, d2, d0
  4245fc:	fmul	d0, d0, d1
  424600:	bl	406d60 <printf@plt>
  424604:	ldp	x21, x22, [sp, #32]
  424608:	adrp	x19, 449000 <commands_started@@Base+0x170>
  42460c:	ldr	w0, [x19, #2336]
  424610:	cmp	w0, #0x0
  424614:	ccmp	w0, w23, #0x4, ne  // ne = any
  424618:	b.ne	424660 <print_rule_data_base@@Base+0x188>  // b.any
  42461c:	ldp	x19, x20, [sp, #16]
  424620:	ldp	x23, x24, [sp, #48]
  424624:	ldp	x29, x30, [sp], #64
  424628:	ret
  42462c:	ldr	x1, [x22]
  424630:	mov	w0, #0x3a                  	// #58
  424634:	bl	406740 <putc@plt>
  424638:	b	4245a0 <print_rule_data_base@@Base+0xc8>
  42463c:	ldp	x21, x22, [sp, #32]
  424640:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  424644:	add	x1, x1, #0xe80
  424648:	mov	w2, #0x5                   	// #5
  42464c:	mov	w23, #0x0                   	// #0
  424650:	mov	x0, #0x0                   	// #0
  424654:	bl	406cd0 <dcgettext@plt>
  424658:	bl	406ae0 <puts@plt>
  42465c:	b	424608 <print_rule_data_base@@Base+0x130>
  424660:	mov	w2, #0x5                   	// #5
  424664:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  424668:	mov	x0, #0x0                   	// #0
  42466c:	add	x1, x1, #0xec8
  424670:	stp	x21, x22, [sp, #32]
  424674:	bl	406cd0 <dcgettext@plt>
  424678:	ldr	w3, [x19, #2336]
  42467c:	mov	x2, x0
  424680:	mov	w4, w23
  424684:	mov	x1, #0x28                  	// #40
  424688:	mov	x0, #0x0                   	// #0
  42468c:	bl	41c0a0 <fatal@@Base>
  424690:	mov	x0, #0x0                   	// #0
  424694:	ret
  424698:	cmp	x1, x0
  42469c:	b.eq	4246a4 <print_rule_data_base@@Base+0x1cc>  // b.none
  4246a0:	b	406b40 <strcmp@plt>
  4246a4:	mov	w0, #0x0                   	// #0
  4246a8:	ret
  4246ac:	nop
  4246b0:	stp	x29, x30, [sp, #-16]!
  4246b4:	mov	x29, sp
  4246b8:	bl	413218 <jhash_string@@Base>
  4246bc:	mov	w0, w0
  4246c0:	ldp	x29, x30, [sp], #16
  4246c4:	ret
  4246c8:	stp	x29, x30, [sp, #-80]!
  4246cc:	and	w1, w1, #0xffff
  4246d0:	add	w3, w1, #0x1
  4246d4:	mov	x29, sp
  4246d8:	stp	x21, x22, [sp, #32]
  4246dc:	mov	w2, #0x1fe2                	// #8162
  4246e0:	cmp	w2, w3, uxth
  4246e4:	stp	x25, x26, [sp, #64]
  4246e8:	adrp	x26, 448000 <output_context@@Base+0x1208>
  4246ec:	add	x21, x26, #0xea0
  4246f0:	stp	x23, x24, [sp, #48]
  4246f4:	mov	x25, x0
  4246f8:	and	x23, x1, #0xffff
  4246fc:	ldp	x24, x4, [x21, #8]
  424700:	stp	x19, x20, [sp, #16]
  424704:	and	w20, w3, #0xffff
  424708:	add	x4, x4, w3, uxth
  42470c:	add	x24, x24, #0x1
  424710:	stp	x24, x4, [x21, #8]
  424714:	b.cc	4247d8 <print_rule_data_base@@Base+0x300>  // b.lo, b.ul, b.last
  424718:	ldr	x19, [x26, #3744]
  42471c:	mov	x22, x21
  424720:	cbnz	x19, 424734 <print_rule_data_base@@Base+0x25c>
  424724:	b	424860 <print_rule_data_base@@Base+0x388>
  424728:	mov	x22, x19
  42472c:	ldr	x19, [x19]
  424730:	cbz	x19, 424860 <print_rule_data_base@@Base+0x388>
  424734:	ldrh	w3, [x19, #10]
  424738:	cmp	w3, w20
  42473c:	b.ls	424728 <print_rule_data_base@@Base+0x250>  // b.plast
  424740:	ldrh	w3, [x19, #8]
  424744:	add	x3, x3, #0xe
  424748:	add	x3, x19, x3
  42474c:	mov	x1, x25
  424750:	mov	x0, x3
  424754:	mov	x2, x23
  424758:	bl	406650 <memmove@plt>
  42475c:	strb	wzr, [x0, x23]
  424760:	mov	x3, x0
  424764:	cmp	x24, #0x14
  424768:	ldrh	w0, [x19, #10]
  42476c:	ldrh	w2, [x19, #8]
  424770:	ldrh	w1, [x19, #12]
  424774:	sub	w0, w0, w20
  424778:	and	w0, w0, #0xffff
  42477c:	add	w20, w20, w2
  424780:	add	w1, w1, #0x1
  424784:	strh	w20, [x19, #8]
  424788:	strh	w0, [x19, #10]
  42478c:	strh	w1, [x19, #12]
  424790:	b.ls	4247bc <print_rule_data_base@@Base+0x2e4>  // b.plast
  424794:	ldr	x1, [x21, #16]
  424798:	udiv	x24, x1, x24
  42479c:	add	x24, x24, #0x1
  4247a0:	cmp	x24, w0, uxth
  4247a4:	b.ls	4247bc <print_rule_data_base@@Base+0x2e4>  // b.plast
  4247a8:	ldr	x0, [x19]
  4247ac:	str	x0, [x22]
  4247b0:	ldr	x0, [x21, #24]
  4247b4:	str	x0, [x19]
  4247b8:	str	x19, [x21, #24]
  4247bc:	mov	x0, x3
  4247c0:	ldp	x19, x20, [sp, #16]
  4247c4:	ldp	x21, x22, [sp, #32]
  4247c8:	ldp	x23, x24, [sp, #48]
  4247cc:	ldp	x25, x26, [sp, #64]
  4247d0:	ldp	x29, x30, [sp], #80
  4247d4:	ret
  4247d8:	and	x3, x3, #0xffff
  4247dc:	add	x0, x3, #0xe
  4247e0:	bl	41ab28 <xmalloc@@Base>
  4247e4:	mov	x19, x0
  4247e8:	add	x3, x0, #0xe
  4247ec:	strh	wzr, [x0, #8]
  4247f0:	strh	w20, [x0, #10]
  4247f4:	mov	x1, x25
  4247f8:	strh	wzr, [x0, #12]
  4247fc:	mov	x2, x23
  424800:	ldp	x0, x4, [x21, #24]
  424804:	str	x0, [x19]
  424808:	mov	x0, x3
  42480c:	add	x4, x4, #0x1
  424810:	stp	x19, x4, [x21, #24]
  424814:	bl	406650 <memmove@plt>
  424818:	strb	wzr, [x0, x23]
  42481c:	mov	x3, x0
  424820:	ldrh	w2, [x19, #8]
  424824:	ldrh	w1, [x19, #10]
  424828:	ldrh	w0, [x19, #12]
  42482c:	add	w2, w20, w2
  424830:	sub	w20, w1, w20
  424834:	strh	w2, [x19, #8]
  424838:	add	w0, w0, #0x1
  42483c:	strh	w20, [x19, #10]
  424840:	strh	w0, [x19, #12]
  424844:	mov	x0, x3
  424848:	ldp	x19, x20, [sp, #16]
  42484c:	ldp	x21, x22, [sp, #32]
  424850:	ldp	x23, x24, [sp, #48]
  424854:	ldp	x25, x26, [sp, #64]
  424858:	ldp	x29, x30, [sp], #80
  42485c:	ret
  424860:	mov	x0, #0x1ff0                	// #8176
  424864:	bl	41ab28 <xmalloc@@Base>
  424868:	mov	x19, x0
  42486c:	strh	wzr, [x0, #12]
  424870:	ldr	x0, [x21, #32]
  424874:	mov	w1, #0x1fe20000            	// #534904832
  424878:	ldr	x2, [x26, #3744]
  42487c:	str	x2, [x19]
  424880:	add	x0, x0, #0x1
  424884:	mov	x22, x21
  424888:	mov	x3, #0xe                   	// #14
  42488c:	str	x19, [x26, #3744]
  424890:	str	w1, [x19, #8]
  424894:	str	x0, [x21, #32]
  424898:	ldr	x24, [x21, #8]
  42489c:	b	424748 <print_rule_data_base@@Base+0x270>

00000000004248a0 <strcache_iscached@@Base>:
  4248a0:	adrp	x4, 448000 <output_context@@Base+0x1208>
  4248a4:	ldr	x1, [x4, #3744]
  4248a8:	cbz	x1, 4248d4 <strcache_iscached@@Base+0x34>
  4248ac:	nop
  4248b0:	add	x2, x1, #0xe
  4248b4:	cmp	x2, x0
  4248b8:	b.hi	4248cc <strcache_iscached@@Base+0x2c>  // b.pmore
  4248bc:	ldrh	w3, [x1, #8]
  4248c0:	add	x2, x2, x3
  4248c4:	cmp	x0, x2
  4248c8:	b.cc	424938 <strcache_iscached@@Base+0x98>  // b.lo, b.ul, b.last
  4248cc:	ldr	x1, [x1]
  4248d0:	cbnz	x1, 4248b0 <strcache_iscached@@Base+0x10>
  4248d4:	add	x4, x4, #0xea0
  4248d8:	ldr	x1, [x4, #24]
  4248dc:	cbz	x1, 424904 <strcache_iscached@@Base+0x64>
  4248e0:	add	x2, x1, #0xe
  4248e4:	cmp	x2, x0
  4248e8:	b.hi	4248fc <strcache_iscached@@Base+0x5c>  // b.pmore
  4248ec:	ldrh	w3, [x1, #8]
  4248f0:	add	x2, x2, x3
  4248f4:	cmp	x0, x2
  4248f8:	b.cc	424938 <strcache_iscached@@Base+0x98>  // b.lo, b.ul, b.last
  4248fc:	ldr	x1, [x1]
  424900:	cbnz	x1, 4248e0 <strcache_iscached@@Base+0x40>
  424904:	ldr	x1, [x4, #40]
  424908:	cbz	x1, 424930 <strcache_iscached@@Base+0x90>
  42490c:	add	x2, x1, #0x8
  424910:	cmp	x0, x2
  424914:	b.ne	424924 <strcache_iscached@@Base+0x84>  // b.any
  424918:	b	424938 <strcache_iscached@@Base+0x98>
  42491c:	cmp	x0, x2
  424920:	b.eq	424938 <strcache_iscached@@Base+0x98>  // b.none
  424924:	ldr	x1, [x1]
  424928:	add	x2, x1, #0x8
  42492c:	cbnz	x1, 42491c <strcache_iscached@@Base+0x7c>
  424930:	mov	w0, #0x0                   	// #0
  424934:	ret
  424938:	mov	w0, #0x1                   	// #1
  42493c:	ret

0000000000424940 <strcache_add@@Base>:
  424940:	stp	x29, x30, [sp, #-64]!
  424944:	mov	x29, sp
  424948:	stp	x19, x20, [sp, #16]
  42494c:	stp	x21, x22, [sp, #32]
  424950:	mov	x21, x0
  424954:	bl	406680 <strlen@plt>
  424958:	mov	x1, #0xfffe                	// #65534
  42495c:	mov	x19, x0
  424960:	cmp	x0, x1
  424964:	b.hi	4249f8 <strcache_add@@Base+0xb8>  // b.pmore
  424968:	adrp	x22, 448000 <output_context@@Base+0x1208>
  42496c:	add	x22, x22, #0xea0
  424970:	add	x0, x22, #0x30
  424974:	mov	x1, x21
  424978:	str	x23, [sp, #48]
  42497c:	bl	412690 <hash_find_slot@@Base>
  424980:	mov	x23, x0
  424984:	ldr	x0, [x22, #136]
  424988:	ldr	x20, [x23]
  42498c:	add	x0, x0, #0x1
  424990:	str	x0, [x22, #136]
  424994:	cbz	x20, 4249c0 <strcache_add@@Base+0x80>
  424998:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  42499c:	ldr	x0, [x0, #72]
  4249a0:	cmp	x20, x0
  4249a4:	b.eq	4249c0 <strcache_add@@Base+0x80>  // b.none
  4249a8:	mov	x0, x20
  4249ac:	ldp	x19, x20, [sp, #16]
  4249b0:	ldp	x21, x22, [sp, #32]
  4249b4:	ldr	x23, [sp, #48]
  4249b8:	ldp	x29, x30, [sp], #64
  4249bc:	ret
  4249c0:	mov	w1, w19
  4249c4:	mov	x0, x21
  4249c8:	bl	4246c8 <print_rule_data_base@@Base+0x1f0>
  4249cc:	mov	x20, x0
  4249d0:	mov	x2, x23
  4249d4:	mov	x1, x20
  4249d8:	add	x0, x22, #0x30
  4249dc:	bl	412b18 <hash_insert_at@@Base>
  4249e0:	mov	x0, x20
  4249e4:	ldp	x19, x20, [sp, #16]
  4249e8:	ldp	x21, x22, [sp, #32]
  4249ec:	ldr	x23, [sp, #48]
  4249f0:	ldp	x29, x30, [sp], #64
  4249f4:	ret
  4249f8:	add	x0, x0, #0x10
  4249fc:	bl	41ab28 <xmalloc@@Base>
  424a00:	add	x20, x0, #0x8
  424a04:	mov	x1, x21
  424a08:	mov	x2, x19
  424a0c:	mov	x21, x0
  424a10:	mov	x0, x20
  424a14:	bl	406640 <memcpy@plt>
  424a18:	add	x19, x21, x19
  424a1c:	adrp	x0, 448000 <output_context@@Base+0x1208>
  424a20:	add	x0, x0, #0xea0
  424a24:	strb	wzr, [x19, #8]
  424a28:	ldr	x1, [x0, #40]
  424a2c:	str	x1, [x21]
  424a30:	str	x21, [x0, #40]
  424a34:	mov	x0, x20
  424a38:	ldp	x19, x20, [sp, #16]
  424a3c:	ldp	x21, x22, [sp, #32]
  424a40:	ldp	x29, x30, [sp], #64
  424a44:	ret

0000000000424a48 <strcache_add_len@@Base>:
  424a48:	stp	x29, x30, [sp, #-64]!
  424a4c:	mov	x29, sp
  424a50:	stp	x19, x20, [sp, #16]
  424a54:	mov	x20, x0
  424a58:	mov	x19, x1
  424a5c:	stp	x21, x22, [sp, #32]
  424a60:	str	x23, [sp, #48]
  424a64:	ldrb	w0, [x0, x1]
  424a68:	cbnz	w0, 424b64 <strcache_add_len@@Base+0x11c>
  424a6c:	mov	x0, #0xfffe                	// #65534
  424a70:	cmp	x19, x0
  424a74:	b.hi	424b0c <strcache_add_len@@Base+0xc4>  // b.pmore
  424a78:	adrp	x22, 448000 <output_context@@Base+0x1208>
  424a7c:	add	x22, x22, #0xea0
  424a80:	add	x0, x22, #0x30
  424a84:	mov	x1, x20
  424a88:	bl	412690 <hash_find_slot@@Base>
  424a8c:	mov	x23, x0
  424a90:	ldr	x0, [x22, #136]
  424a94:	ldr	x21, [x23]
  424a98:	add	x0, x0, #0x1
  424a9c:	str	x0, [x22, #136]
  424aa0:	cbz	x21, 424ad0 <strcache_add_len@@Base+0x88>
  424aa4:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  424aa8:	ldr	x0, [x0, #72]
  424aac:	cmp	x21, x0
  424ab0:	b.eq	424ad0 <strcache_add_len@@Base+0x88>  // b.none
  424ab4:	mov	sp, x29
  424ab8:	mov	x0, x21
  424abc:	ldp	x19, x20, [sp, #16]
  424ac0:	ldp	x21, x22, [sp, #32]
  424ac4:	ldr	x23, [sp, #48]
  424ac8:	ldp	x29, x30, [sp], #64
  424acc:	ret
  424ad0:	mov	w1, w19
  424ad4:	mov	x0, x20
  424ad8:	bl	4246c8 <print_rule_data_base@@Base+0x1f0>
  424adc:	mov	x21, x0
  424ae0:	mov	x2, x23
  424ae4:	mov	x1, x21
  424ae8:	add	x0, x22, #0x30
  424aec:	bl	412b18 <hash_insert_at@@Base>
  424af0:	mov	sp, x29
  424af4:	mov	x0, x21
  424af8:	ldp	x19, x20, [sp, #16]
  424afc:	ldp	x21, x22, [sp, #32]
  424b00:	ldr	x23, [sp, #48]
  424b04:	ldp	x29, x30, [sp], #64
  424b08:	ret
  424b0c:	add	x0, x19, #0x10
  424b10:	bl	41ab28 <xmalloc@@Base>
  424b14:	add	x21, x0, #0x8
  424b18:	mov	x1, x20
  424b1c:	mov	x2, x19
  424b20:	mov	x20, x0
  424b24:	mov	x0, x21
  424b28:	bl	406640 <memcpy@plt>
  424b2c:	add	x19, x20, x19
  424b30:	adrp	x0, 448000 <output_context@@Base+0x1208>
  424b34:	add	x0, x0, #0xea0
  424b38:	strb	wzr, [x19, #8]
  424b3c:	ldr	x1, [x0, #40]
  424b40:	str	x1, [x20]
  424b44:	str	x20, [x0, #40]
  424b48:	mov	x0, x21
  424b4c:	mov	sp, x29
  424b50:	ldp	x19, x20, [sp, #16]
  424b54:	ldp	x21, x22, [sp, #32]
  424b58:	ldr	x23, [sp, #48]
  424b5c:	ldp	x29, x30, [sp], #64
  424b60:	ret
  424b64:	add	x0, x1, #0x10
  424b68:	mov	x2, x19
  424b6c:	and	x0, x0, #0xfffffffffffffff0
  424b70:	mov	x1, x20
  424b74:	sub	sp, sp, x0
  424b78:	mov	x3, sp
  424b7c:	mov	x20, x3
  424b80:	mov	x0, x3
  424b84:	bl	406640 <memcpy@plt>
  424b88:	strb	wzr, [x0, x19]
  424b8c:	b	424a6c <strcache_add_len@@Base+0x24>

0000000000424b90 <strcache_init@@Base>:
  424b90:	adrp	x0, 448000 <output_context@@Base+0x1208>
  424b94:	add	x0, x0, #0xea0
  424b98:	add	x0, x0, #0x30
  424b9c:	adrp	x4, 424000 <snap_implicit_rules@@Base+0x2d8>
  424ba0:	adrp	x3, 424000 <snap_implicit_rules@@Base+0x2d8>
  424ba4:	add	x4, x4, #0x698
  424ba8:	add	x3, x3, #0x690
  424bac:	adrp	x2, 424000 <snap_implicit_rules@@Base+0x2d8>
  424bb0:	mov	x1, #0x1f40                	// #8000
  424bb4:	add	x2, x2, #0x6b0
  424bb8:	b	4125d8 <hash_init@@Base>
  424bbc:	nop

0000000000424bc0 <strcache_print_stats@@Base>:
  424bc0:	stp	x29, x30, [sp, #-96]!
  424bc4:	mov	x29, sp
  424bc8:	str	x27, [sp, #80]
  424bcc:	adrp	x27, 448000 <output_context@@Base+0x1208>
  424bd0:	stp	x21, x22, [sp, #32]
  424bd4:	mov	x22, x0
  424bd8:	ldr	x0, [x27, #3744]
  424bdc:	cbz	x0, 424df4 <strcache_print_stats@@Base+0x234>
  424be0:	ldr	x4, [x0]
  424be4:	stp	x19, x20, [sp, #16]
  424be8:	stp	x23, x24, [sp, #48]
  424bec:	stp	x25, x26, [sp, #64]
  424bf0:	cbz	x4, 424ddc <strcache_print_stats@@Base+0x21c>
  424bf4:	mov	x20, #0x1fe2                	// #8162
  424bf8:	mov	x19, #0x0                   	// #0
  424bfc:	mov	x21, #0x0                   	// #0
  424c00:	mov	x3, #0x0                   	// #0
  424c04:	nop
  424c08:	ldrh	w1, [x4, #10]
  424c0c:	mov	x2, x3
  424c10:	ldr	x4, [x4]
  424c14:	cmp	x19, x1
  424c18:	csel	x19, x19, x1, cs  // cs = hs, nlast
  424c1c:	cmp	x20, x1
  424c20:	csel	x20, x20, x1, ls  // ls = plast
  424c24:	add	x21, x21, x1
  424c28:	add	x3, x3, #0x1
  424c2c:	cbnz	x4, 424c08 <strcache_print_stats@@Base+0x48>
  424c30:	add	x24, x2, #0x2
  424c34:	add	x26, x27, #0xea0
  424c38:	ldr	x4, [x26, #24]
  424c3c:	cbz	x4, 424dd0 <strcache_print_stats@@Base+0x210>
  424c40:	add	x2, x3, #0x1
  424c44:	mov	x23, #0x0                   	// #0
  424c48:	ldrh	w1, [x4, #10]
  424c4c:	add	x25, x2, x23
  424c50:	ldr	x4, [x4]
  424c54:	cmp	x19, x1
  424c58:	csel	x19, x19, x1, cs  // cs = hs, nlast
  424c5c:	cmp	x20, x1
  424c60:	csel	x20, x20, x1, ls  // ls = plast
  424c64:	add	x21, x21, x1
  424c68:	add	x23, x23, #0x1
  424c6c:	cbnz	x4, 424c48 <strcache_print_stats@@Base+0x88>
  424c70:	add	x24, x25, #0x1
  424c74:	mov	w2, #0x5                   	// #5
  424c78:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  424c7c:	mov	x0, #0x0                   	// #0
  424c80:	add	x1, x1, #0xf18
  424c84:	bl	406cd0 <dcgettext@plt>
  424c88:	ldp	x4, x5, [x26, #8]
  424c8c:	mov	x3, x23
  424c90:	mov	x2, x24
  424c94:	mov	x1, x22
  424c98:	udiv	x6, x5, x4
  424c9c:	bl	406d60 <printf@plt>
  424ca0:	mov	w2, #0x5                   	// #5
  424ca4:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  424ca8:	mov	x0, #0x0                   	// #0
  424cac:	add	x1, x1, #0xf70
  424cb0:	bl	406cd0 <dcgettext@plt>
  424cb4:	ldr	x4, [x27, #3744]
  424cb8:	mov	x1, x22
  424cbc:	mov	w2, #0x1fe2                	// #8162
  424cc0:	ldrh	w3, [x4, #8]
  424cc4:	ldrh	w4, [x4, #12]
  424cc8:	udiv	w5, w3, w4
  424ccc:	bl	406d60 <printf@plt>
  424cd0:	cbnz	x25, 424d5c <strcache_print_stats@@Base+0x19c>
  424cd4:	mov	w2, #0x5                   	// #5
  424cd8:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  424cdc:	mov	x0, #0x0                   	// #0
  424ce0:	add	x1, x1, #0x40
  424ce4:	bl	406cd0 <dcgettext@plt>
  424ce8:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  424cec:	ldr	x3, [x26, #8]
  424cf0:	mov	x1, #0x4059000000000000    	// #4636737291354636288
  424cf4:	ldr	x2, [x26, #136]
  424cf8:	fmov	d2, x1
  424cfc:	mov	x1, x22
  424d00:	sub	x3, x2, x3
  424d04:	ucvtf	d1, x2
  424d08:	ucvtf	d0, x3
  424d0c:	fmul	d0, d0, d2
  424d10:	fdiv	d0, d0, d1
  424d14:	fcvtzu	x3, d0
  424d18:	bl	406d60 <printf@plt>
  424d1c:	mov	w2, #0x5                   	// #5
  424d20:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  424d24:	mov	x0, #0x0                   	// #0
  424d28:	add	x1, x1, #0x80
  424d2c:	bl	406cd0 <dcgettext@plt>
  424d30:	ldr	x1, [x19, #440]
  424d34:	bl	406690 <fputs@plt>
  424d38:	ldr	x1, [x19, #440]
  424d3c:	add	x0, x26, #0x30
  424d40:	ldp	x19, x20, [sp, #16]
  424d44:	ldp	x21, x22, [sp, #32]
  424d48:	ldp	x23, x24, [sp, #48]
  424d4c:	ldp	x25, x26, [sp, #64]
  424d50:	ldr	x27, [sp, #80]
  424d54:	ldp	x29, x30, [sp], #96
  424d58:	b	412f40 <hash_print_stats@@Base>
  424d5c:	ldr	x3, [x27, #3744]
  424d60:	mov	w2, #0x5                   	// #5
  424d64:	ldp	x23, x24, [x26, #8]
  424d68:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  424d6c:	ldrh	w4, [x3, #8]
  424d70:	add	x1, x1, #0xfb8
  424d74:	ldrh	w3, [x3, #12]
  424d78:	mov	x0, #0x0                   	// #0
  424d7c:	sub	x24, x24, x4
  424d80:	sub	x23, x23, x3
  424d84:	bl	406cd0 <dcgettext@plt>
  424d88:	mov	x3, x23
  424d8c:	mov	x2, x24
  424d90:	udiv	x4, x24, x23
  424d94:	mov	x1, x22
  424d98:	bl	406d60 <printf@plt>
  424d9c:	mov	w2, #0x5                   	// #5
  424da0:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  424da4:	mov	x0, #0x0                   	// #0
  424da8:	add	x1, x1, #0xff8
  424dac:	bl	406cd0 <dcgettext@plt>
  424db0:	udiv	x5, x21, x25
  424db4:	mov	x4, x20
  424db8:	mov	x3, x19
  424dbc:	mov	x2, x21
  424dc0:	mov	x1, x22
  424dc4:	and	w5, w5, #0xffff
  424dc8:	bl	406d60 <printf@plt>
  424dcc:	b	424cd4 <strcache_print_stats@@Base+0x114>
  424dd0:	mov	x25, x3
  424dd4:	mov	x23, #0x0                   	// #0
  424dd8:	b	424c74 <strcache_print_stats@@Base+0xb4>
  424ddc:	mov	x24, #0x1                   	// #1
  424de0:	mov	x20, #0x1fe2                	// #8162
  424de4:	mov	x19, #0x0                   	// #0
  424de8:	mov	x21, #0x0                   	// #0
  424dec:	mov	x3, #0x0                   	// #0
  424df0:	b	424c34 <strcache_print_stats@@Base+0x74>
  424df4:	mov	w2, #0x5                   	// #5
  424df8:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  424dfc:	add	x1, x1, #0xef8
  424e00:	bl	406cd0 <dcgettext@plt>
  424e04:	mov	x1, x22
  424e08:	ldp	x21, x22, [sp, #32]
  424e0c:	ldr	x27, [sp, #80]
  424e10:	ldp	x29, x30, [sp], #96
  424e14:	b	406d60 <printf@plt>
  424e18:	mov	x0, #0x0                   	// #0
  424e1c:	ret
  424e20:	mov	x3, x0
  424e24:	ldr	w0, [x1, #40]
  424e28:	ldr	w2, [x3, #40]
  424e2c:	subs	w0, w2, w0
  424e30:	b.ne	424e50 <strcache_print_stats@@Base+0x290>  // b.any
  424e34:	ldr	x1, [x1]
  424e38:	ldr	x3, [x3]
  424e3c:	cmp	x3, x1
  424e40:	b.eq	424e50 <strcache_print_stats@@Base+0x290>  // b.none
  424e44:	mov	w2, w2
  424e48:	mov	x0, x3
  424e4c:	b	406b00 <memcmp@plt>
  424e50:	ret
  424e54:	nop
  424e58:	mov	x1, x0
  424e5c:	stp	x29, x30, [sp, #-16]!
  424e60:	mov	x29, sp
  424e64:	ldr	w1, [x1, #40]
  424e68:	ldr	x0, [x0]
  424e6c:	bl	4130c0 <jhash@@Base>
  424e70:	mov	w0, w0
  424e74:	ldp	x29, x30, [sp], #16
  424e78:	ret
  424e7c:	nop
  424e80:	stp	x29, x30, [sp, #-32]!
  424e84:	mov	x29, sp
  424e88:	str	x19, [sp, #16]
  424e8c:	mov	x19, x0
  424e90:	ldr	x0, [x0]
  424e94:	bl	406b90 <free@plt>
  424e98:	ldr	x0, [x19, #8]
  424e9c:	ldr	x19, [sp, #16]
  424ea0:	ldp	x29, x30, [sp], #32
  424ea4:	b	406b90 <free@plt>
  424ea8:	stp	x29, x30, [sp, #-80]!
  424eac:	mov	x29, sp
  424eb0:	stp	x19, x20, [sp, #16]
  424eb4:	mov	x19, x0
  424eb8:	mov	x0, x1
  424ebc:	stp	x21, x22, [sp, #32]
  424ec0:	mov	x22, x1
  424ec4:	stp	x23, x24, [sp, #48]
  424ec8:	bl	406680 <strlen@plt>
  424ecc:	mov	x23, x0
  424ed0:	cbz	x19, 424f94 <strcache_print_stats@@Base+0x3d4>
  424ed4:	ldr	x19, [x19]
  424ed8:	cbz	x19, 424f7c <strcache_print_stats@@Base+0x3bc>
  424edc:	str	x25, [sp, #64]
  424ee0:	b	424eec <strcache_print_stats@@Base+0x32c>
  424ee4:	ldr	x19, [x19]
  424ee8:	cbz	x19, 424f78 <strcache_print_stats@@Base+0x3b8>
  424eec:	ldr	x2, [x19, #24]
  424ef0:	sub	x24, x23, x2
  424ef4:	cmp	x2, x23
  424ef8:	b.hi	424ee4 <strcache_print_stats@@Base+0x324>  // b.pmore
  424efc:	ldp	x20, x0, [x19, #8]
  424f00:	add	x25, x24, #0x1
  424f04:	mov	x1, x22
  424f08:	sub	x2, x20, x0
  424f0c:	sub	x2, x2, #0x1
  424f10:	add	x21, x22, x2
  424f14:	cmp	x22, x21
  424f18:	b.cs	424f24 <strcache_print_stats@@Base+0x364>  // b.hs, b.nlast
  424f1c:	bl	406930 <strncmp@plt>
  424f20:	cbnz	w0, 424ee4 <strcache_print_stats@@Base+0x324>
  424f24:	ldrb	w1, [x20]
  424f28:	ldrb	w0, [x21, x25]
  424f2c:	cmp	w0, w1
  424f30:	b.ne	424ee4 <strcache_print_stats@@Base+0x324>  // b.any
  424f34:	add	x1, x24, #0x2
  424f38:	add	x2, x20, #0x1
  424f3c:	add	x3, x21, x1
  424f40:	cbz	w0, 424f78 <strcache_print_stats@@Base+0x3b8>
  424f44:	cmp	x3, x2
  424f48:	b.eq	424f78 <strcache_print_stats@@Base+0x3b8>  // b.none
  424f4c:	ldrb	w0, [x20, #1]
  424f50:	ldrb	w2, [x21, x1]
  424f54:	cmp	w2, w0
  424f58:	b.ne	424ee4 <strcache_print_stats@@Base+0x324>  // b.any
  424f5c:	add	x1, x24, #0x3
  424f60:	add	x0, x20, #0x2
  424f64:	cbz	w2, 424f78 <strcache_print_stats@@Base+0x3b8>
  424f68:	add	x1, x21, x1
  424f6c:	bl	406b40 <strcmp@plt>
  424f70:	cbnz	w0, 424ee4 <strcache_print_stats@@Base+0x324>
  424f74:	nop
  424f78:	ldr	x25, [sp, #64]
  424f7c:	mov	x0, x19
  424f80:	ldp	x19, x20, [sp, #16]
  424f84:	ldp	x21, x22, [sp, #32]
  424f88:	ldp	x23, x24, [sp, #48]
  424f8c:	ldp	x29, x30, [sp], #80
  424f90:	ret
  424f94:	adrp	x0, 448000 <output_context@@Base+0x1208>
  424f98:	ldr	x19, [x0, #3888]
  424f9c:	b	424ed8 <strcache_print_stats@@Base+0x318>
  424fa0:	stp	x29, x30, [sp, #-48]!
  424fa4:	mov	x29, sp
  424fa8:	ldrb	w2, [x0, #47]
  424fac:	stp	x19, x20, [sp, #16]
  424fb0:	mov	x19, x0
  424fb4:	mov	x20, x1
  424fb8:	stp	x21, x22, [sp, #32]
  424fbc:	ubfx	x2, x2, #2, #3
  424fc0:	cmp	w2, #0x3
  424fc4:	b.eq	425278 <strcache_print_stats@@Base+0x6b8>  // b.none
  424fc8:	b.hi	425140 <strcache_print_stats@@Base+0x580>  // b.pmore
  424fcc:	cmp	w2, #0x1
  424fd0:	b.eq	425244 <strcache_print_stats@@Base+0x684>  // b.none
  424fd4:	cmp	w2, #0x2
  424fd8:	b.ne	425120 <strcache_print_stats@@Base+0x560>  // b.any
  424fdc:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  424fe0:	mov	w2, #0x5                   	// #5
  424fe4:	add	x1, x1, #0x7b8
  424fe8:	mov	x0, #0x0                   	// #0
  424fec:	bl	406cd0 <dcgettext@plt>
  424ff0:	mov	x22, x0
  424ff4:	nop
  424ff8:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  424ffc:	mov	x2, #0x2                   	// #2
  425000:	mov	x1, #0x1                   	// #1
  425004:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  425008:	ldr	x3, [x21, #440]
  42500c:	add	x0, x0, #0xd50
  425010:	bl	406be0 <fwrite@plt>
  425014:	ldr	x1, [x21, #440]
  425018:	mov	x0, x22
  42501c:	bl	406690 <fputs@plt>
  425020:	ldrsb	w0, [x19, #44]
  425024:	tbnz	w0, #31, 4251e0 <strcache_print_stats@@Base+0x620>
  425028:	ldr	x0, [x19, #16]
  42502c:	cbz	x0, 425054 <strcache_print_stats@@Base+0x494>
  425030:	mov	w2, #0x5                   	// #5
  425034:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425038:	mov	x0, #0x0                   	// #0
  42503c:	add	x1, x1, #0xd8
  425040:	bl	406cd0 <dcgettext@plt>
  425044:	ldp	x1, x3, [x19, #16]
  425048:	ldr	x2, [x19, #32]
  42504c:	add	x2, x3, x2
  425050:	bl	406d60 <printf@plt>
  425054:	ldr	x1, [x21, #440]
  425058:	mov	w0, #0xa                   	// #10
  42505c:	bl	406740 <putc@plt>
  425060:	ldr	x1, [x21, #440]
  425064:	mov	x0, x20
  425068:	bl	406690 <fputs@plt>
  42506c:	ldrb	w20, [x19, #44]
  425070:	tbnz	w20, #0, 425190 <strcache_print_stats@@Base+0x5d0>
  425074:	ldr	x1, [x19]
  425078:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x30e0>
  42507c:	add	x2, x2, #0x610
  425080:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425084:	add	x0, x0, #0x108
  425088:	bl	406d60 <printf@plt>
  42508c:	ldr	x0, [x19, #8]
  425090:	bl	41ac48 <next_token@@Base>
  425094:	ldr	x20, [x19, #8]
  425098:	cmp	x20, x0
  42509c:	b.eq	4250a8 <strcache_print_stats@@Base+0x4e8>  // b.none
  4250a0:	ldrb	w0, [x0]
  4250a4:	cbz	w0, 42521c <strcache_print_stats@@Base+0x65c>
  4250a8:	ldrb	w0, [x19, #44]
  4250ac:	ldr	x1, [x21, #440]
  4250b0:	tbnz	w0, #0, 4251fc <strcache_print_stats@@Base+0x63c>
  4250b4:	ldrb	w0, [x20]
  4250b8:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  4250bc:	add	x22, x22, #0x1b8
  4250c0:	cbz	w0, 42510c <strcache_print_stats@@Base+0x54c>
  4250c4:	cmp	w0, #0x24
  4250c8:	b.eq	4250ec <strcache_print_stats@@Base+0x52c>  // b.none
  4250cc:	nop
  4250d0:	bl	406740 <putc@plt>
  4250d4:	ldrb	w0, [x20, #1]!
  4250d8:	cbz	w0, 425108 <strcache_print_stats@@Base+0x548>
  4250dc:	mov	x19, x22
  4250e0:	cmp	w0, #0x24
  4250e4:	ldr	x1, [x19]
  4250e8:	b.ne	4250d0 <strcache_print_stats@@Base+0x510>  // b.any
  4250ec:	bl	406740 <putc@plt>
  4250f0:	add	x19, x21, #0x1b8
  4250f4:	ldrb	w0, [x20]
  4250f8:	ldr	x1, [x21, #440]
  4250fc:	bl	406740 <putc@plt>
  425100:	ldrb	w0, [x20, #1]!
  425104:	cbnz	w0, 4250e0 <strcache_print_stats@@Base+0x520>
  425108:	ldr	x1, [x21, #440]
  42510c:	mov	w0, #0xa                   	// #10
  425110:	ldp	x19, x20, [sp, #16]
  425114:	ldp	x21, x22, [sp, #32]
  425118:	ldp	x29, x30, [sp], #48
  42511c:	b	406740 <putc@plt>
  425120:	cbnz	w2, 425294 <strcache_print_stats@@Base+0x6d4>
  425124:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  425128:	mov	w2, #0x5                   	// #5
  42512c:	add	x1, x1, #0xd78
  425130:	mov	x0, #0x0                   	// #0
  425134:	bl	406cd0 <dcgettext@plt>
  425138:	mov	x22, x0
  42513c:	b	424ff8 <strcache_print_stats@@Base+0x438>
  425140:	cmp	w2, #0x5
  425144:	b.eq	425260 <strcache_print_stats@@Base+0x6a0>  // b.none
  425148:	cmp	w2, #0x6
  42514c:	b.ne	42516c <strcache_print_stats@@Base+0x5ac>  // b.any
  425150:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  425154:	mov	w2, #0x5                   	// #5
  425158:	add	x1, x1, #0xdd0
  42515c:	mov	x0, #0x0                   	// #0
  425160:	bl	406cd0 <dcgettext@plt>
  425164:	mov	x22, x0
  425168:	b	424ff8 <strcache_print_stats@@Base+0x438>
  42516c:	cmp	w2, #0x4
  425170:	b.ne	425294 <strcache_print_stats@@Base+0x6d4>  // b.any
  425174:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  425178:	mov	w2, #0x5                   	// #5
  42517c:	add	x1, x1, #0xdb0
  425180:	mov	x0, #0x0                   	// #0
  425184:	bl	406cd0 <dcgettext@plt>
  425188:	mov	x22, x0
  42518c:	b	424ff8 <strcache_print_stats@@Base+0x438>
  425190:	ldr	x22, [x19, #8]
  425194:	mov	w1, #0xa                   	// #10
  425198:	mov	x0, x22
  42519c:	bl	406bb0 <strchr@plt>
  4251a0:	ldr	x1, [x19]
  4251a4:	cbz	x0, 4251c4 <strcache_print_stats@@Base+0x604>
  4251a8:	mov	x2, x22
  4251ac:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  4251b0:	ldp	x19, x20, [sp, #16]
  4251b4:	add	x0, x0, #0xf0
  4251b8:	ldp	x21, x22, [sp, #32]
  4251bc:	ldp	x29, x30, [sp], #48
  4251c0:	b	406d60 <printf@plt>
  4251c4:	tst	x20, #0x2
  4251c8:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x40e0>
  4251cc:	adrp	x2, 429000 <_IO_stdin_used@@Base+0xe0>
  4251d0:	add	x0, x0, #0xed0
  4251d4:	add	x2, x2, #0x120
  4251d8:	csel	x2, x2, x0, ne  // ne = any
  4251dc:	b	425080 <strcache_print_stats@@Base+0x4c0>
  4251e0:	ldr	x3, [x21, #440]
  4251e4:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  4251e8:	mov	x2, #0x8                   	// #8
  4251ec:	mov	x1, #0x1                   	// #1
  4251f0:	add	x0, x0, #0xc8
  4251f4:	bl	406be0 <fwrite@plt>
  4251f8:	b	425028 <strcache_print_stats@@Base+0x468>
  4251fc:	mov	x0, x20
  425200:	bl	406690 <fputs@plt>
  425204:	ldr	x1, [x21, #440]
  425208:	mov	w0, #0xa                   	// #10
  42520c:	ldp	x19, x20, [sp, #16]
  425210:	ldp	x21, x22, [sp, #32]
  425214:	ldp	x29, x30, [sp], #48
  425218:	b	406740 <putc@plt>
  42521c:	mov	x1, x20
  425220:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425224:	add	x0, x0, #0x110
  425228:	bl	406d60 <printf@plt>
  42522c:	ldr	x1, [x21, #440]
  425230:	mov	w0, #0xa                   	// #10
  425234:	ldp	x19, x20, [sp, #16]
  425238:	ldp	x21, x22, [sp, #32]
  42523c:	ldp	x29, x30, [sp], #48
  425240:	b	406740 <putc@plt>
  425244:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x10e0>
  425248:	mov	w2, #0x5                   	// #5
  42524c:	add	x1, x1, #0xd80
  425250:	mov	x0, #0x0                   	// #0
  425254:	bl	406cd0 <dcgettext@plt>
  425258:	mov	x22, x0
  42525c:	b	424ff8 <strcache_print_stats@@Base+0x438>
  425260:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425264:	mov	x0, #0x0                   	// #0
  425268:	add	x1, x1, #0xb0
  42526c:	bl	406cd0 <dcgettext@plt>
  425270:	mov	x22, x0
  425274:	b	424ff8 <strcache_print_stats@@Base+0x438>
  425278:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  42527c:	mov	w2, #0x5                   	// #5
  425280:	add	x1, x1, #0x98
  425284:	mov	x0, #0x0                   	// #0
  425288:	bl	406cd0 <dcgettext@plt>
  42528c:	mov	x22, x0
  425290:	b	424ff8 <strcache_print_stats@@Base+0x438>
  425294:	bl	406ab0 <abort@plt>
  425298:	ldrb	w2, [x0, #47]
  42529c:	and	w2, w2, #0x1c
  4252a0:	cmp	w2, #0x18
  4252a4:	b.eq	4252ac <strcache_print_stats@@Base+0x6ec>  // b.none
  4252a8:	ret
  4252ac:	b	424fa0 <strcache_print_stats@@Base+0x3e0>
  4252b0:	ldrb	w2, [x0, #47]
  4252b4:	and	w2, w2, #0x1c
  4252b8:	cmp	w2, #0x18
  4252bc:	b.ne	4252c4 <strcache_print_stats@@Base+0x704>  // b.any
  4252c0:	ret
  4252c4:	b	424fa0 <strcache_print_stats@@Base+0x3e0>

00000000004252c8 <create_pattern_var@@Base>:
  4252c8:	stp	x29, x30, [sp, #-48]!
  4252cc:	mov	x29, sp
  4252d0:	stp	x19, x20, [sp, #16]
  4252d4:	add	x20, x1, #0x1
  4252d8:	str	x21, [sp, #32]
  4252dc:	mov	x21, x0
  4252e0:	bl	406680 <strlen@plt>
  4252e4:	mov	x19, x0
  4252e8:	mov	x0, #0x50                  	// #80
  4252ec:	bl	41ab50 <xcalloc@@Base>
  4252f0:	adrp	x2, 448000 <output_context@@Base+0x1208>
  4252f4:	add	x4, x2, #0xf30
  4252f8:	ldr	x1, [x2, #3888]
  4252fc:	cbz	x1, 425388 <create_pattern_var@@Base+0xc0>
  425300:	cmp	x19, #0xff
  425304:	b.hi	425340 <create_pattern_var@@Base+0x78>  // b.pmore
  425308:	add	x2, x4, #0x10
  42530c:	ldr	x2, [x2, x19, lsl #3]
  425310:	cbz	x2, 425340 <create_pattern_var@@Base+0x78>
  425314:	ldr	x1, [x2]
  425318:	str	x1, [x0]
  42531c:	str	x0, [x2]
  425320:	stp	x20, x21, [x0, #8]
  425324:	str	x19, [x0, #24]
  425328:	add	x4, x4, #0x10
  42532c:	ldr	x21, [sp, #32]
  425330:	str	x0, [x4, x19, lsl #3]
  425334:	ldp	x19, x20, [sp, #16]
  425338:	ldp	x29, x30, [sp], #48
  42533c:	ret
  425340:	mov	x3, x4
  425344:	b	425354 <create_pattern_var@@Base+0x8c>
  425348:	mov	x3, x1
  42534c:	ldr	x1, [x1]
  425350:	cbz	x1, 425360 <create_pattern_var@@Base+0x98>
  425354:	ldr	x2, [x1, #24]
  425358:	cmp	x2, x19
  42535c:	b.ls	425348 <create_pattern_var@@Base+0x80>  // b.plast
  425360:	str	x1, [x0]
  425364:	str	x0, [x3]
  425368:	stp	x20, x21, [x0, #8]
  42536c:	cmp	x19, #0xff
  425370:	str	x19, [x0, #24]
  425374:	b.ls	425328 <create_pattern_var@@Base+0x60>  // b.plast
  425378:	ldp	x19, x20, [sp, #16]
  42537c:	ldr	x21, [sp, #32]
  425380:	ldp	x29, x30, [sp], #48
  425384:	ret
  425388:	str	x0, [x2, #3888]
  42538c:	str	xzr, [x0]
  425390:	b	425368 <create_pattern_var@@Base+0xa0>
  425394:	nop

0000000000425398 <init_hash_global_variable_set@@Base>:
  425398:	adrp	x0, 448000 <output_context@@Base+0x1208>
  42539c:	add	x0, x0, #0xf30
  4253a0:	add	x0, x0, #0x810
  4253a4:	adrp	x4, 424000 <snap_implicit_rules@@Base+0x2d8>
  4253a8:	adrp	x3, 424000 <snap_implicit_rules@@Base+0x2d8>
  4253ac:	add	x4, x4, #0xe20
  4253b0:	add	x3, x3, #0xe18
  4253b4:	adrp	x2, 424000 <snap_implicit_rules@@Base+0x2d8>
  4253b8:	mov	x1, #0x20b                 	// #523
  4253bc:	add	x2, x2, #0xe58
  4253c0:	b	4125d8 <hash_init@@Base>
  4253c4:	nop

00000000004253c8 <define_variable_in_set@@Base>:
  4253c8:	stp	x29, x30, [sp, #-144]!
  4253cc:	adrp	x7, 448000 <output_context@@Base+0x1208>
  4253d0:	add	x7, x7, #0xf30
  4253d4:	cmp	x5, #0x0
  4253d8:	add	x7, x7, #0x810
  4253dc:	mov	x29, sp
  4253e0:	str	x27, [sp, #80]
  4253e4:	csel	x27, x7, x5, eq  // eq = none
  4253e8:	stp	x19, x20, [sp, #16]
  4253ec:	mov	x19, x0
  4253f0:	stp	x21, x22, [sp, #32]
  4253f4:	mov	w21, w3
  4253f8:	mov	w22, w4
  4253fc:	stp	x23, x24, [sp, #48]
  425400:	mov	x23, x1
  425404:	add	x1, sp, #0x60
  425408:	stp	x25, x26, [sp, #64]
  42540c:	mov	x26, x2
  425410:	mov	x25, x6
  425414:	str	x0, [sp, #96]
  425418:	mov	x0, x27
  42541c:	str	w23, [sp, #136]
  425420:	bl	412690 <hash_find_slot@@Base>
  425424:	mov	x24, x0
  425428:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  42542c:	mov	w1, #0x3                   	// #3
  425430:	ldr	w0, [x2, #1736]
  425434:	ldr	x20, [x24]
  425438:	cmp	w0, #0x0
  42543c:	ccmp	w21, #0x1, #0x0, ne  // ne = any
  425440:	csel	w21, w21, w1, ne  // ne = any
  425444:	cbz	x20, 42548c <define_variable_in_set@@Base+0xc4>
  425448:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  42544c:	ldr	x2, [x2, #72]
  425450:	cmp	x2, x20
  425454:	b.eq	42548c <define_variable_in_set@@Base+0xc4>  // b.none
  425458:	cbnz	w0, 4255a8 <define_variable_in_set@@Base+0x1e0>
  42545c:	ldrb	w0, [x20, #47]
  425460:	ubfx	x0, x0, #2, #3
  425464:	cmp	w21, w0
  425468:	b.ge	4255c4 <define_variable_in_set@@Base+0x1fc>  // b.tcont
  42546c:	mov	x0, x20
  425470:	ldp	x19, x20, [sp, #16]
  425474:	ldp	x21, x22, [sp, #32]
  425478:	ldp	x23, x24, [sp, #48]
  42547c:	ldp	x25, x26, [sp, #64]
  425480:	ldr	x27, [sp, #80]
  425484:	ldp	x29, x30, [sp], #144
  425488:	ret
  42548c:	mov	x0, #0x30                  	// #48
  425490:	bl	41ab50 <xcalloc@@Base>
  425494:	mov	x20, x0
  425498:	mov	x1, x23
  42549c:	mov	x0, x19
  4254a0:	bl	41abd0 <xstrndup@@Base>
  4254a4:	mov	x1, x20
  4254a8:	mov	x2, x24
  4254ac:	str	x0, [x20]
  4254b0:	mov	x0, x27
  4254b4:	str	w23, [x20, #40]
  4254b8:	bl	412b18 <hash_insert_at@@Base>
  4254bc:	adrp	x0, 448000 <output_context@@Base+0x1208>
  4254c0:	add	x0, x0, #0xf30
  4254c4:	add	x1, x0, #0x810
  4254c8:	cmp	x27, x1
  4254cc:	b.eq	42562c <define_variable_in_set@@Base+0x264>  // b.none
  4254d0:	mov	x0, x26
  4254d4:	bl	41abb0 <xstrdup@@Base>
  4254d8:	str	x0, [x20, #8]
  4254dc:	cbz	x25, 4254f0 <define_variable_in_set@@Base+0x128>
  4254e0:	ldp	x0, x1, [x25]
  4254e4:	stp	x0, x1, [x20, #16]
  4254e8:	ldr	x0, [x25, #16]
  4254ec:	str	x0, [x20, #32]
  4254f0:	ldr	w1, [x20, #44]
  4254f4:	ubfiz	w0, w21, #26, #3
  4254f8:	and	w22, w22, #0x1
  4254fc:	mov	w21, #0x20                  	// #32
  425500:	movk	w21, #0x6000, lsl #16
  425504:	mov	w2, #0xffde                	// #65502
  425508:	orr	w21, w22, w21
  42550c:	movk	w2, #0x83ff, lsl #16
  425510:	orr	w0, w0, w21
  425514:	and	w1, w1, w2
  425518:	orr	w0, w0, w1
  42551c:	str	w0, [x20, #44]
  425520:	ldrb	w1, [x19]
  425524:	and	w0, w1, #0xffffffdf
  425528:	cmp	w1, #0x5f
  42552c:	sub	w0, w0, #0x41
  425530:	and	w0, w0, #0xff
  425534:	ccmp	w0, #0x19, #0x0, ne  // ne = any
  425538:	b.hi	42557c <define_variable_in_set@@Base+0x1b4>  // b.pmore
  42553c:	ldrb	w2, [x19, #1]
  425540:	add	x3, x19, #0x1
  425544:	cbnz	w2, 425554 <define_variable_in_set@@Base+0x18c>
  425548:	b	42546c <define_variable_in_set@@Base+0xa4>
  42554c:	ldrb	w2, [x3, #1]!
  425550:	cbz	w2, 42546c <define_variable_in_set@@Base+0xa4>
  425554:	and	w1, w2, #0xffffffdf
  425558:	cmp	w2, #0x5f
  42555c:	sub	w1, w1, #0x41
  425560:	b.eq	42554c <define_variable_in_set@@Base+0x184>  // b.none
  425564:	and	w1, w1, #0xff
  425568:	sub	w2, w2, #0x30
  42556c:	cmp	w1, #0x19
  425570:	b.ls	42554c <define_variable_in_set@@Base+0x184>  // b.plast
  425574:	cmp	w2, #0x9
  425578:	b.ls	42554c <define_variable_in_set@@Base+0x184>  // b.plast
  42557c:	ldrb	w0, [x20, #44]
  425580:	ldp	x21, x22, [sp, #32]
  425584:	and	w0, w0, #0xffffffdf
  425588:	strb	w0, [x20, #44]
  42558c:	mov	x0, x20
  425590:	ldp	x19, x20, [sp, #16]
  425594:	ldp	x23, x24, [sp, #48]
  425598:	ldp	x25, x26, [sp, #64]
  42559c:	ldr	x27, [sp, #80]
  4255a0:	ldp	x29, x30, [sp], #144
  4255a4:	ret
  4255a8:	ldrb	w0, [x20, #47]
  4255ac:	and	w2, w0, #0x1c
  4255b0:	cmp	w2, #0x4
  4255b4:	b.eq	42564c <define_variable_in_set@@Base+0x284>  // b.none
  4255b8:	ubfx	x0, x0, #2, #3
  4255bc:	cmp	w21, w0
  4255c0:	b.lt	42546c <define_variable_in_set@@Base+0xa4>  // b.tstop
  4255c4:	ldr	x0, [x20, #8]
  4255c8:	bl	406b90 <free@plt>
  4255cc:	mov	x0, x26
  4255d0:	bl	41abb0 <xstrdup@@Base>
  4255d4:	str	x0, [x20, #8]
  4255d8:	cbz	x25, 425660 <define_variable_in_set@@Base+0x298>
  4255dc:	ldp	x0, x1, [x25]
  4255e0:	stp	x0, x1, [x20, #16]
  4255e4:	ldr	x0, [x25, #16]
  4255e8:	str	x0, [x20, #32]
  4255ec:	ldr	w1, [x20, #44]
  4255f0:	ubfiz	w0, w21, #26, #3
  4255f4:	and	w22, w22, #0x1
  4255f8:	and	w1, w1, #0xfffffffe
  4255fc:	orr	w0, w0, w22
  425600:	and	w1, w1, #0xe3ffffff
  425604:	orr	w0, w0, w1
  425608:	str	w0, [x20, #44]
  42560c:	mov	x0, x20
  425610:	ldp	x19, x20, [sp, #16]
  425614:	ldp	x21, x22, [sp, #32]
  425618:	ldp	x23, x24, [sp, #48]
  42561c:	ldp	x25, x26, [sp, #64]
  425620:	ldr	x27, [sp, #80]
  425624:	ldp	x29, x30, [sp], #144
  425628:	ret
  42562c:	ldr	x1, [x0, #2152]
  425630:	add	x1, x1, #0x1
  425634:	str	x1, [x0, #2152]
  425638:	mov	x0, x26
  42563c:	bl	41abb0 <xstrdup@@Base>
  425640:	str	x0, [x20, #8]
  425644:	cbnz	x25, 4254e0 <define_variable_in_set@@Base+0x118>
  425648:	b	4254f0 <define_variable_in_set@@Base+0x128>
  42564c:	mov	w2, w0
  425650:	mov	w0, w1
  425654:	bfi	w2, w1, #2, #3
  425658:	strb	w2, [x20, #47]
  42565c:	b	425464 <define_variable_in_set@@Base+0x9c>
  425660:	str	xzr, [x20, #16]
  425664:	b	4255ec <define_variable_in_set@@Base+0x224>

0000000000425668 <free_variable_set@@Base>:
  425668:	stp	x29, x30, [sp, #-32]!
  42566c:	adrp	x1, 424000 <snap_implicit_rules@@Base+0x2d8>
  425670:	add	x1, x1, #0xe80
  425674:	mov	x29, sp
  425678:	str	x19, [sp, #16]
  42567c:	mov	x19, x0
  425680:	ldr	x0, [x0, #8]
  425684:	bl	412e60 <hash_map@@Base>
  425688:	ldr	x0, [x19, #8]
  42568c:	mov	w1, #0x1                   	// #1
  425690:	bl	412dc0 <hash_free@@Base>
  425694:	ldr	x0, [x19, #8]
  425698:	bl	406b90 <free@plt>
  42569c:	mov	x0, x19
  4256a0:	ldr	x19, [sp, #16]
  4256a4:	ldp	x29, x30, [sp], #32
  4256a8:	b	406b90 <free@plt>
  4256ac:	nop

00000000004256b0 <undefine_variable_in_set@@Base>:
  4256b0:	stp	x29, x30, [sp, #-96]!
  4256b4:	adrp	x4, 448000 <output_context@@Base+0x1208>
  4256b8:	mov	x29, sp
  4256bc:	stp	x19, x20, [sp, #16]
  4256c0:	mov	x19, x3
  4256c4:	add	x3, x4, #0xf30
  4256c8:	cmp	x19, #0x0
  4256cc:	add	x3, x3, #0x810
  4256d0:	csel	x19, x3, x19, eq  // eq = none
  4256d4:	mov	w20, w2
  4256d8:	mov	x3, x0
  4256dc:	mov	x2, x1
  4256e0:	mov	x0, x19
  4256e4:	add	x1, sp, #0x30
  4256e8:	str	x21, [sp, #32]
  4256ec:	str	x3, [sp, #48]
  4256f0:	str	w2, [sp, #88]
  4256f4:	bl	412690 <hash_find_slot@@Base>
  4256f8:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  4256fc:	mov	w2, #0x3                   	// #3
  425700:	ldr	x21, [x0]
  425704:	ldr	w1, [x1, #1736]
  425708:	cmp	w1, #0x0
  42570c:	ccmp	w20, #0x1, #0x0, ne  // ne = any
  425710:	csel	w20, w20, w2, ne  // ne = any
  425714:	cbz	x21, 42573c <undefine_variable_in_set@@Base+0x8c>
  425718:	adrp	x3, 446000 <expanding_var@@Base+0x320>
  42571c:	ldr	x3, [x3, #72]
  425720:	cmp	x3, x21
  425724:	b.eq	42573c <undefine_variable_in_set@@Base+0x8c>  // b.none
  425728:	cbnz	w1, 42574c <undefine_variable_in_set@@Base+0x9c>
  42572c:	ldrb	w1, [x21, #47]
  425730:	ubfx	x1, x1, #2, #3
  425734:	cmp	w20, w1
  425738:	b.ge	425768 <undefine_variable_in_set@@Base+0xb8>  // b.tcont
  42573c:	ldp	x19, x20, [sp, #16]
  425740:	ldr	x21, [sp, #32]
  425744:	ldp	x29, x30, [sp], #96
  425748:	ret
  42574c:	ldrb	w1, [x21, #47]
  425750:	and	w3, w1, #0x1c
  425754:	cmp	w3, #0x4
  425758:	b.eq	4257b0 <undefine_variable_in_set@@Base+0x100>  // b.none
  42575c:	ubfx	x1, x1, #2, #3
  425760:	cmp	w20, w1
  425764:	b.lt	42573c <undefine_variable_in_set@@Base+0x8c>  // b.tstop
  425768:	mov	x1, x0
  42576c:	mov	x0, x19
  425770:	bl	412cc0 <hash_delete_at@@Base>
  425774:	ldr	x0, [x21]
  425778:	bl	406b90 <free@plt>
  42577c:	ldr	x0, [x21, #8]
  425780:	bl	406b90 <free@plt>
  425784:	mov	x0, x21
  425788:	bl	406b90 <free@plt>
  42578c:	adrp	x0, 448000 <output_context@@Base+0x1208>
  425790:	add	x0, x0, #0xf30
  425794:	add	x1, x0, #0x810
  425798:	cmp	x19, x1
  42579c:	b.ne	42573c <undefine_variable_in_set@@Base+0x8c>  // b.any
  4257a0:	ldr	x1, [x0, #2152]
  4257a4:	add	x1, x1, #0x1
  4257a8:	str	x1, [x0, #2152]
  4257ac:	b	42573c <undefine_variable_in_set@@Base+0x8c>
  4257b0:	mov	w3, w1
  4257b4:	mov	w1, w2
  4257b8:	bfi	w3, w2, #2, #3
  4257bc:	strb	w3, [x21, #47]
  4257c0:	b	425734 <undefine_variable_in_set@@Base+0x84>
  4257c4:	nop

00000000004257c8 <lookup_variable@@Base>:
  4257c8:	stp	x29, x30, [sp, #-160]!
  4257cc:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  4257d0:	mov	x29, sp
  4257d4:	stp	x19, x20, [sp, #16]
  4257d8:	ldr	x19, [x2, #336]
  4257dc:	str	x0, [sp, #112]
  4257e0:	str	w1, [sp, #152]
  4257e4:	cbz	x19, 425824 <lookup_variable@@Base+0x5c>
  4257e8:	stp	x21, x22, [sp, #32]
  4257ec:	mov	w21, #0x0                   	// #0
  4257f0:	add	x1, sp, #0x70
  4257f4:	ldr	x0, [x19, #8]
  4257f8:	bl	412950 <hash_find_item@@Base>
  4257fc:	mov	x20, x0
  425800:	cbz	x0, 425810 <lookup_variable@@Base+0x48>
  425804:	ldrb	w0, [x0, #44]
  425808:	cbz	w21, 425838 <lookup_variable@@Base+0x70>
  42580c:	tbz	w0, #7, 425838 <lookup_variable@@Base+0x70>
  425810:	ldr	w0, [x19, #16]
  425814:	ldr	x19, [x19]
  425818:	orr	w21, w21, w0
  42581c:	cbnz	x19, 4257f0 <lookup_variable@@Base+0x28>
  425820:	ldp	x21, x22, [sp, #32]
  425824:	mov	x20, #0x0                   	// #0
  425828:	mov	x0, x20
  42582c:	ldp	x19, x20, [sp, #16]
  425830:	ldp	x29, x30, [sp], #160
  425834:	ret
  425838:	tbnz	w0, #4, 425850 <lookup_variable@@Base+0x88>
  42583c:	mov	x0, x20
  425840:	ldp	x19, x20, [sp, #16]
  425844:	ldp	x21, x22, [sp, #32]
  425848:	ldp	x29, x30, [sp], #160
  42584c:	ret
  425850:	stp	x27, x28, [sp, #80]
  425854:	adrp	x28, 448000 <output_context@@Base+0x1208>
  425858:	add	x28, x28, #0xf30
  42585c:	ldr	x1, [x28, #2152]
  425860:	ldr	x0, [x28, #2160]
  425864:	cmp	x1, x0
  425868:	b.eq	42588c <lookup_variable@@Base+0xc4>  // b.none
  42586c:	ldr	x0, [x20]
  425870:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  425874:	add	x1, x1, #0x1e0
  425878:	cmp	x0, x1
  42587c:	b.eq	4258b8 <lookup_variable@@Base+0xf0>  // b.none
  425880:	ldrb	w1, [x0]
  425884:	cmp	w1, #0x2e
  425888:	b.eq	4258a4 <lookup_variable@@Base+0xdc>  // b.none
  42588c:	mov	x0, x20
  425890:	ldp	x19, x20, [sp, #16]
  425894:	ldp	x21, x22, [sp, #32]
  425898:	ldp	x27, x28, [sp, #80]
  42589c:	ldp	x29, x30, [sp], #160
  4258a0:	ret
  4258a4:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4258a8:	add	x0, x0, #0x1
  4258ac:	add	x1, x1, #0x1e1
  4258b0:	bl	406b40 <strcmp@plt>
  4258b4:	cbnz	w0, 42588c <lookup_variable@@Base+0xc4>
  4258b8:	ldr	x21, [x20, #8]
  4258bc:	stp	x23, x24, [sp, #48]
  4258c0:	mov	x0, x21
  4258c4:	bl	406680 <strlen@plt>
  4258c8:	mov	x2, #0xf7cf                	// #63439
  4258cc:	lsr	x1, x0, #2
  4258d0:	movk	x2, #0xe353, lsl #16
  4258d4:	mov	x0, x21
  4258d8:	movk	x2, #0x9ba5, lsl #32
  4258dc:	movk	x2, #0x20c4, lsl #48
  4258e0:	ldr	x19, [x28, #2064]
  4258e4:	umulh	x1, x1, x2
  4258e8:	ldr	x24, [x28, #2096]
  4258ec:	lsr	x1, x1, #4
  4258f0:	add	x1, x1, #0x1
  4258f4:	add	x24, x19, x24, lsl #3
  4258f8:	lsl	x23, x1, #5
  4258fc:	sub	x23, x23, x1
  425900:	add	x1, x1, x23, lsl #2
  425904:	lsl	x23, x1, #2
  425908:	mov	x1, x23
  42590c:	bl	41ab78 <xrealloc@@Base>
  425910:	str	x0, [x20, #8]
  425914:	cmp	x19, x24
  425918:	mov	x21, x0
  42591c:	b.cs	4259c8 <lookup_variable@@Base+0x200>  // b.hs, b.nlast
  425920:	adrp	x27, 446000 <expanding_var@@Base+0x320>
  425924:	stp	x25, x26, [sp, #64]
  425928:	mov	x26, #0x0                   	// #0
  42592c:	mov	w25, #0x20                  	// #32
  425930:	b	425950 <lookup_variable@@Base+0x188>
  425934:	ldr	x1, [x22]
  425938:	mov	x0, x21
  42593c:	add	x21, x21, x2
  425940:	bl	406640 <memcpy@plt>
  425944:	strb	w25, [x21], #1
  425948:	cmp	x24, x19
  42594c:	b.ls	4259c4 <lookup_variable@@Base+0x1fc>  // b.plast
  425950:	ldr	x22, [x19]
  425954:	add	x19, x19, #0x8
  425958:	cbz	x22, 425948 <lookup_variable@@Base+0x180>
  42595c:	ldr	x0, [x27, #72]
  425960:	cmp	x22, x0
  425964:	b.eq	425948 <lookup_variable@@Base+0x180>  // b.none
  425968:	ldr	w2, [x22, #40]
  42596c:	add	w1, w2, #0x1
  425970:	sxtw	x2, w2
  425974:	add	x26, x26, w1, sxtw
  425978:	cmp	x23, x26
  42597c:	b.cs	425934 <lookup_variable@@Base+0x16c>  // b.hs, b.nlast
  425980:	mov	w0, #0x4dd3                	// #19923
  425984:	str	x2, [sp, #104]
  425988:	movk	w0, #0x1062, lsl #16
  42598c:	mov	w2, #0x1f4                 	// #500
  425990:	smull	x5, w1, w0
  425994:	ldr	x0, [x20, #8]
  425998:	asr	x5, x5, #37
  42599c:	sub	w1, w5, w1, asr #31
  4259a0:	sub	x21, x21, x0
  4259a4:	madd	w1, w1, w2, w2
  4259a8:	add	x23, x23, w1, sxtw
  4259ac:	mov	x1, x23
  4259b0:	bl	41ab78 <xrealloc@@Base>
  4259b4:	add	x21, x0, x21
  4259b8:	str	x0, [x20, #8]
  4259bc:	ldr	x2, [sp, #104]
  4259c0:	b	425934 <lookup_variable@@Base+0x16c>
  4259c4:	ldp	x25, x26, [sp, #64]
  4259c8:	sturb	wzr, [x21, #-1]
  4259cc:	ldr	x0, [x28, #2152]
  4259d0:	str	x0, [x28, #2160]
  4259d4:	ldp	x21, x22, [sp, #32]
  4259d8:	ldp	x23, x24, [sp, #48]
  4259dc:	ldp	x27, x28, [sp, #80]
  4259e0:	b	425828 <lookup_variable@@Base+0x60>
  4259e4:	nop

00000000004259e8 <lookup_variable_in_set@@Base>:
  4259e8:	stp	x29, x30, [sp, #-64]!
  4259ec:	mov	x4, x0
  4259f0:	mov	x3, x1
  4259f4:	mov	x29, sp
  4259f8:	add	x1, sp, #0x10
  4259fc:	mov	x0, x2
  425a00:	str	x4, [sp, #16]
  425a04:	str	w3, [sp, #56]
  425a08:	bl	412950 <hash_find_item@@Base>
  425a0c:	ldp	x29, x30, [sp], #64
  425a10:	ret
  425a14:	nop

0000000000425a18 <create_new_variable_set@@Base>:
  425a18:	stp	x29, x30, [sp, #-32]!
  425a1c:	mov	x0, #0x58                  	// #88
  425a20:	mov	x29, sp
  425a24:	str	x19, [sp, #16]
  425a28:	bl	41ab28 <xmalloc@@Base>
  425a2c:	adrp	x4, 424000 <snap_implicit_rules@@Base+0x2d8>
  425a30:	adrp	x3, 424000 <snap_implicit_rules@@Base+0x2d8>
  425a34:	add	x4, x4, #0xe20
  425a38:	add	x3, x3, #0xe18
  425a3c:	adrp	x2, 424000 <snap_implicit_rules@@Base+0x2d8>
  425a40:	add	x2, x2, #0xe58
  425a44:	mov	x1, #0xd                   	// #13
  425a48:	mov	x19, x0
  425a4c:	bl	4125d8 <hash_init@@Base>
  425a50:	mov	x0, #0x18                  	// #24
  425a54:	bl	41ab28 <xmalloc@@Base>
  425a58:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  425a5c:	str	wzr, [x0, #16]
  425a60:	ldr	x2, [x2, #336]
  425a64:	stp	x2, x19, [x0]
  425a68:	ldr	x19, [sp, #16]
  425a6c:	ldp	x29, x30, [sp], #32
  425a70:	ret
  425a74:	nop

0000000000425a78 <push_new_variable_scope@@Base>:
  425a78:	stp	x29, x30, [sp, #-32]!
  425a7c:	mov	x0, #0x58                  	// #88
  425a80:	mov	x29, sp
  425a84:	str	x19, [sp, #16]
  425a88:	bl	41ab28 <xmalloc@@Base>
  425a8c:	adrp	x4, 424000 <snap_implicit_rules@@Base+0x2d8>
  425a90:	adrp	x3, 424000 <snap_implicit_rules@@Base+0x2d8>
  425a94:	add	x4, x4, #0xe20
  425a98:	add	x3, x3, #0xe18
  425a9c:	adrp	x2, 424000 <snap_implicit_rules@@Base+0x2d8>
  425aa0:	add	x2, x2, #0xe58
  425aa4:	mov	x1, #0xd                   	// #13
  425aa8:	mov	x19, x0
  425aac:	bl	4125d8 <hash_init@@Base>
  425ab0:	mov	x0, #0x18                  	// #24
  425ab4:	bl	41ab28 <xmalloc@@Base>
  425ab8:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  425abc:	add	x3, x2, #0x150
  425ac0:	str	wzr, [x0, #16]
  425ac4:	add	x3, x3, #0x8
  425ac8:	ldr	x1, [x2, #336]
  425acc:	stp	x1, x19, [x0]
  425ad0:	str	x0, [x2, #336]
  425ad4:	cmp	x1, x3
  425ad8:	b.eq	425ae8 <push_new_variable_scope@@Base+0x70>  // b.none
  425adc:	ldr	x19, [sp, #16]
  425ae0:	ldp	x29, x30, [sp], #32
  425ae4:	ret
  425ae8:	ldr	x3, [x1, #8]
  425aec:	str	x3, [x0, #8]
  425af0:	str	x19, [x1, #8]
  425af4:	ldr	x3, [x1]
  425af8:	str	x3, [x0]
  425afc:	str	x0, [x1]
  425b00:	mov	x0, x1
  425b04:	str	x1, [x2, #336]
  425b08:	ldr	x19, [sp, #16]
  425b0c:	ldp	x29, x30, [sp], #32
  425b10:	ret
  425b14:	nop

0000000000425b18 <pop_variable_scope@@Base>:
  425b18:	stp	x29, x30, [sp, #-32]!
  425b1c:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  425b20:	add	x3, x1, #0x150
  425b24:	mov	x29, sp
  425b28:	ldr	x0, [x1, #336]
  425b2c:	str	x19, [sp, #16]
  425b30:	add	x2, x3, #0x8
  425b34:	cmp	x0, x2
  425b38:	b.eq	425b74 <pop_variable_scope@@Base+0x5c>  // b.none
  425b3c:	ldp	x2, x19, [x0]
  425b40:	str	x2, [x1, #336]
  425b44:	bl	406b90 <free@plt>
  425b48:	mov	x0, x19
  425b4c:	adrp	x1, 424000 <snap_implicit_rules@@Base+0x2d8>
  425b50:	add	x1, x1, #0xe80
  425b54:	bl	412e60 <hash_map@@Base>
  425b58:	mov	x0, x19
  425b5c:	mov	w1, #0x1                   	// #1
  425b60:	bl	412dc0 <hash_free@@Base>
  425b64:	mov	x0, x19
  425b68:	ldr	x19, [sp, #16]
  425b6c:	ldp	x29, x30, [sp], #32
  425b70:	b	406b90 <free@plt>
  425b74:	ldr	x0, [x0]
  425b78:	ldr	x19, [x2, #8]
  425b7c:	ldr	q0, [x0]
  425b80:	ldr	w1, [x0, #16]
  425b84:	str	w1, [x2, #16]
  425b88:	stur	q0, [x3, #8]
  425b8c:	b	425b44 <pop_variable_scope@@Base+0x2c>

0000000000425b90 <merge_variable_set_lists@@Base>:
  425b90:	stp	x29, x30, [sp, #-112]!
  425b94:	cmp	x1, #0x0
  425b98:	mov	x29, sp
  425b9c:	stp	x19, x20, [sp, #16]
  425ba0:	mov	x20, x1
  425ba4:	stp	x25, x26, [sp, #64]
  425ba8:	adrp	x26, 446000 <expanding_var@@Base+0x320>
  425bac:	add	x26, x26, #0x150
  425bb0:	add	x1, x26, #0x8
  425bb4:	ccmp	x20, x1, #0x4, ne  // ne = any
  425bb8:	b.eq	425ce8 <merge_variable_set_lists@@Base+0x158>  // b.none
  425bbc:	ldr	x25, [x0]
  425bc0:	cbz	x25, 425ce4 <merge_variable_set_lists@@Base+0x154>
  425bc4:	cmp	x25, x1
  425bc8:	b.eq	425ce4 <merge_variable_set_lists@@Base+0x154>  // b.none
  425bcc:	cmp	x25, x20
  425bd0:	b.eq	425ce8 <merge_variable_set_lists@@Base+0x158>  // b.none
  425bd4:	mov	x0, x25
  425bd8:	b	425be4 <merge_variable_set_lists@@Base+0x54>
  425bdc:	cmp	x20, x0
  425be0:	b.eq	425ce8 <merge_variable_set_lists@@Base+0x158>  // b.none
  425be4:	ldr	x0, [x0]
  425be8:	cmp	x0, x1
  425bec:	b.ne	425bdc <merge_variable_set_lists@@Base+0x4c>  // b.any
  425bf0:	add	x26, x26, #0x8
  425bf4:	stp	x27, x28, [sp, #80]
  425bf8:	adrp	x27, 448000 <output_context@@Base+0x1208>
  425bfc:	add	x27, x27, #0xf30
  425c00:	stp	x21, x22, [sp, #32]
  425c04:	add	x0, x27, #0x810
  425c08:	stp	x23, x24, [sp, #48]
  425c0c:	adrp	x24, 446000 <expanding_var@@Base+0x320>
  425c10:	str	x0, [sp, #104]
  425c14:	nop
  425c18:	ldr	x0, [x20, #8]
  425c1c:	ldr	x21, [x25, #8]
  425c20:	ldr	x28, [x0]
  425c24:	ldr	x22, [x0, #32]
  425c28:	ldr	x1, [sp, #104]
  425c2c:	add	x22, x28, x22, lsl #3
  425c30:	cmp	x21, x1
  425c34:	cset	w23, eq  // eq = none
  425c38:	cmp	x28, x22
  425c3c:	ldr	x20, [x20]
  425c40:	b.cs	425cc8 <merge_variable_set_lists@@Base+0x138>  // b.hs, b.nlast
  425c44:	and	x23, x23, #0xff
  425c48:	b	425c68 <merge_variable_set_lists@@Base+0xd8>
  425c4c:	ldr	x0, [x19, #8]
  425c50:	bl	406b90 <free@plt>
  425c54:	mov	x0, x19
  425c58:	bl	406b90 <free@plt>
  425c5c:	add	x28, x28, #0x8
  425c60:	cmp	x22, x28
  425c64:	b.ls	425cc8 <merge_variable_set_lists@@Base+0x138>  // b.plast
  425c68:	ldr	x19, [x28]
  425c6c:	cbz	x19, 425c5c <merge_variable_set_lists@@Base+0xcc>
  425c70:	ldr	x2, [x24, #72]
  425c74:	mov	x1, x19
  425c78:	mov	x0, x21
  425c7c:	cmp	x19, x2
  425c80:	b.eq	425c5c <merge_variable_set_lists@@Base+0xcc>  // b.none
  425c84:	bl	412690 <hash_find_slot@@Base>
  425c88:	mov	x2, x0
  425c8c:	mov	x1, x19
  425c90:	mov	x0, x21
  425c94:	ldr	x4, [x2]
  425c98:	cbz	x4, 425ca8 <merge_variable_set_lists@@Base+0x118>
  425c9c:	ldr	x5, [x24, #72]
  425ca0:	cmp	x4, x5
  425ca4:	b.ne	425c4c <merge_variable_set_lists@@Base+0xbc>  // b.any
  425ca8:	bl	412b18 <hash_insert_at@@Base>
  425cac:	add	x28, x28, #0x8
  425cb0:	ldr	x0, [x27, #2152]
  425cb4:	cmp	x22, x28
  425cb8:	add	x0, x0, x23
  425cbc:	str	x0, [x27, #2152]
  425cc0:	b.hi	425c68 <merge_variable_set_lists@@Base+0xd8>  // b.pmore
  425cc4:	nop
  425cc8:	cmp	x20, x26
  425ccc:	ldr	x0, [x25]
  425cd0:	b.eq	425d18 <merge_variable_set_lists@@Base+0x188>  // b.none
  425cd4:	cmp	x0, x26
  425cd8:	b.eq	425cf8 <merge_variable_set_lists@@Base+0x168>  // b.none
  425cdc:	mov	x25, x0
  425ce0:	b	425c18 <merge_variable_set_lists@@Base+0x88>
  425ce4:	str	x20, [x0]
  425ce8:	ldp	x19, x20, [sp, #16]
  425cec:	ldp	x25, x26, [sp, #64]
  425cf0:	ldp	x29, x30, [sp], #112
  425cf4:	ret
  425cf8:	ldp	x21, x22, [sp, #32]
  425cfc:	ldp	x23, x24, [sp, #48]
  425d00:	ldp	x27, x28, [sp, #80]
  425d04:	str	x20, [x25]
  425d08:	ldp	x19, x20, [sp, #16]
  425d0c:	ldp	x25, x26, [sp, #64]
  425d10:	ldp	x29, x30, [sp], #112
  425d14:	ret
  425d18:	ldp	x19, x20, [sp, #16]
  425d1c:	ldp	x21, x22, [sp, #32]
  425d20:	ldp	x23, x24, [sp, #48]
  425d24:	ldp	x25, x26, [sp, #64]
  425d28:	ldp	x27, x28, [sp, #80]
  425d2c:	ldp	x29, x30, [sp], #112
  425d30:	ret
  425d34:	nop

0000000000425d38 <define_automatic_variables@@Base>:
  425d38:	stp	x29, x30, [sp, #-256]!
  425d3c:	adrp	x0, 449000 <commands_started@@Base+0x170>
  425d40:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  425d44:	mov	x29, sp
  425d48:	ldr	w2, [x0, #2112]
  425d4c:	add	x1, x1, #0xef0
  425d50:	stp	x19, x20, [sp, #16]
  425d54:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  425d58:	add	x0, sp, #0x38
  425d5c:	stp	x21, x22, [sp, #32]
  425d60:	bl	406730 <sprintf@plt>
  425d64:	ldr	x1, [x19, #336]
  425d68:	add	x2, sp, #0x38
  425d6c:	mov	w4, #0x0                   	// #0
  425d70:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x30e0>
  425d74:	mov	x6, #0x0                   	// #0
  425d78:	add	x0, x0, #0x300
  425d7c:	ldr	x5, [x1, #8]
  425d80:	mov	w3, #0x1                   	// #1
  425d84:	mov	x1, #0x9                   	// #9
  425d88:	bl	4253c8 <define_variable_in_set@@Base>
  425d8c:	adrp	x1, 449000 <commands_started@@Base+0x170>
  425d90:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  425d94:	ldr	x4, [x1, #1984]
  425d98:	ldr	x2, [x0, #376]
  425d9c:	cbz	x4, 425da8 <define_automatic_variables@@Base+0x70>
  425da0:	ldrb	w0, [x4]
  425da4:	cbnz	w0, 426140 <define_automatic_variables@@Base+0x408>
  425da8:	adrp	x21, 42d000 <_IO_stdin_used@@Base+0x40e0>
  425dac:	add	x21, x21, #0xed0
  425db0:	mov	x3, x21
  425db4:	mov	x4, x21
  425db8:	add	x0, sp, #0x38
  425dbc:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425dc0:	add	x1, x1, #0x120
  425dc4:	bl	406730 <sprintf@plt>
  425dc8:	ldr	x1, [x19, #336]
  425dcc:	add	x2, sp, #0x38
  425dd0:	mov	x6, #0x0                   	// #0
  425dd4:	mov	w4, #0x0                   	// #0
  425dd8:	mov	w3, #0x0                   	// #0
  425ddc:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425de0:	ldr	x5, [x1, #8]
  425de4:	add	x0, x0, #0x128
  425de8:	mov	x1, #0xc                   	// #12
  425dec:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  425df0:	bl	4253c8 <define_variable_in_set@@Base>
  425df4:	ldr	x1, [x19, #336]
  425df8:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  425dfc:	mov	x6, #0x0                   	// #0
  425e00:	mov	w4, #0x0                   	// #0
  425e04:	ldr	x2, [x2, #368]
  425e08:	mov	w3, #0x0                   	// #0
  425e0c:	ldr	x5, [x1, #8]
  425e10:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425e14:	mov	x1, #0x9                   	// #9
  425e18:	add	x0, x0, #0x138
  425e1c:	bl	4253c8 <define_variable_in_set@@Base>
  425e20:	ldr	x1, [x19, #336]
  425e24:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x20e0>
  425e28:	ldr	x2, [x22, #160]
  425e2c:	add	x0, x0, #0x9a0
  425e30:	ldr	x5, [x1, #8]
  425e34:	mov	x6, #0x0                   	// #0
  425e38:	mov	x1, #0x5                   	// #5
  425e3c:	mov	w4, #0x0                   	// #0
  425e40:	mov	w3, #0x0                   	// #0
  425e44:	bl	4253c8 <define_variable_in_set@@Base>
  425e48:	mov	x20, x0
  425e4c:	ldr	x0, [x0, #8]
  425e50:	ldrb	w1, [x0]
  425e54:	cbz	w1, 425e6c <define_automatic_variables@@Base+0x134>
  425e58:	ldrb	w2, [x20, #47]
  425e5c:	mov	w1, #0x14                  	// #20
  425e60:	and	w1, w1, w2
  425e64:	cmp	w1, #0x4
  425e68:	b.ne	425e8c <define_automatic_variables@@Base+0x154>  // b.any
  425e6c:	bl	406b90 <free@plt>
  425e70:	ldrb	w0, [x20, #47]
  425e74:	mov	w1, #0x2                   	// #2
  425e78:	bfi	w0, w1, #2, #3
  425e7c:	strb	w0, [x20, #47]
  425e80:	ldr	x0, [x22, #160]
  425e84:	bl	41abb0 <xstrdup@@Base>
  425e88:	str	x0, [x20, #8]
  425e8c:	ldr	x1, [x19, #336]
  425e90:	mov	x2, x21
  425e94:	mov	x6, #0x0                   	// #0
  425e98:	mov	w4, #0x0                   	// #0
  425e9c:	mov	w3, #0x0                   	// #0
  425ea0:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425ea4:	ldr	x5, [x1, #8]
  425ea8:	add	x0, x0, #0x148
  425eac:	mov	x1, #0x9                   	// #9
  425eb0:	bl	4253c8 <define_variable_in_set@@Base>
  425eb4:	mov	x5, x0
  425eb8:	mov	w8, #0x2                   	// #2
  425ebc:	mov	x6, #0x0                   	// #0
  425ec0:	mov	w4, #0x1                   	// #1
  425ec4:	mov	w3, #0x6                   	// #6
  425ec8:	ldrb	w7, [x5, #47]
  425ecc:	mov	x1, #0x2                   	// #2
  425ed0:	adrp	x2, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425ed4:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425ed8:	add	x2, x2, #0x158
  425edc:	add	x0, x0, #0x178
  425ee0:	bfi	w7, w8, #5, #2
  425ee4:	strb	w7, [x5, #47]
  425ee8:	ldr	x5, [x19, #336]
  425eec:	ldr	x5, [x5, #8]
  425ef0:	bl	4253c8 <define_variable_in_set@@Base>
  425ef4:	ldr	x1, [x19, #336]
  425ef8:	mov	x6, #0x0                   	// #0
  425efc:	mov	w4, #0x1                   	// #1
  425f00:	mov	w3, #0x6                   	// #6
  425f04:	adrp	x2, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425f08:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425f0c:	ldr	x5, [x1, #8]
  425f10:	add	x2, x2, #0x180
  425f14:	mov	x1, #0x2                   	// #2
  425f18:	add	x0, x0, #0x1a0
  425f1c:	bl	4253c8 <define_variable_in_set@@Base>
  425f20:	ldr	x1, [x19, #336]
  425f24:	mov	x6, #0x0                   	// #0
  425f28:	mov	w4, #0x1                   	// #1
  425f2c:	mov	w3, #0x6                   	// #6
  425f30:	adrp	x2, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425f34:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425f38:	ldr	x5, [x1, #8]
  425f3c:	add	x2, x2, #0x1a8
  425f40:	mov	x1, #0x2                   	// #2
  425f44:	add	x0, x0, #0x1c8
  425f48:	bl	4253c8 <define_variable_in_set@@Base>
  425f4c:	ldr	x1, [x19, #336]
  425f50:	mov	x6, #0x0                   	// #0
  425f54:	mov	w4, #0x1                   	// #1
  425f58:	mov	w3, #0x6                   	// #6
  425f5c:	adrp	x2, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425f60:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425f64:	ldr	x5, [x1, #8]
  425f68:	add	x2, x2, #0x1d0
  425f6c:	mov	x1, #0x2                   	// #2
  425f70:	add	x0, x0, #0x1f0
  425f74:	bl	4253c8 <define_variable_in_set@@Base>
  425f78:	ldr	x1, [x19, #336]
  425f7c:	mov	x6, #0x0                   	// #0
  425f80:	mov	w4, #0x1                   	// #1
  425f84:	mov	w3, #0x6                   	// #6
  425f88:	adrp	x2, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425f8c:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425f90:	ldr	x5, [x1, #8]
  425f94:	add	x2, x2, #0x1f8
  425f98:	mov	x1, #0x2                   	// #2
  425f9c:	add	x0, x0, #0x218
  425fa0:	bl	4253c8 <define_variable_in_set@@Base>
  425fa4:	ldr	x1, [x19, #336]
  425fa8:	mov	x6, #0x0                   	// #0
  425fac:	mov	w4, #0x1                   	// #1
  425fb0:	mov	w3, #0x6                   	// #6
  425fb4:	adrp	x2, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425fb8:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425fbc:	ldr	x5, [x1, #8]
  425fc0:	add	x2, x2, #0x220
  425fc4:	mov	x1, #0x2                   	// #2
  425fc8:	add	x0, x0, #0x240
  425fcc:	bl	4253c8 <define_variable_in_set@@Base>
  425fd0:	ldr	x1, [x19, #336]
  425fd4:	mov	x6, #0x0                   	// #0
  425fd8:	mov	w4, #0x1                   	// #1
  425fdc:	mov	w3, #0x6                   	// #6
  425fe0:	adrp	x2, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425fe4:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  425fe8:	ldr	x5, [x1, #8]
  425fec:	add	x2, x2, #0x248
  425ff0:	mov	x1, #0x2                   	// #2
  425ff4:	add	x0, x0, #0x268
  425ff8:	bl	4253c8 <define_variable_in_set@@Base>
  425ffc:	ldr	x1, [x19, #336]
  426000:	mov	x6, #0x0                   	// #0
  426004:	mov	w4, #0x1                   	// #1
  426008:	mov	w3, #0x6                   	// #6
  42600c:	adrp	x2, 42f000 <_IO_stdin_used@@Base+0x60e0>
  426010:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  426014:	ldr	x5, [x1, #8]
  426018:	add	x2, x2, #0x270
  42601c:	mov	x1, #0x2                   	// #2
  426020:	add	x0, x0, #0x280
  426024:	bl	4253c8 <define_variable_in_set@@Base>
  426028:	ldr	x1, [x19, #336]
  42602c:	mov	x6, #0x0                   	// #0
  426030:	mov	w4, #0x1                   	// #1
  426034:	mov	w3, #0x6                   	// #6
  426038:	adrp	x2, 42f000 <_IO_stdin_used@@Base+0x60e0>
  42603c:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  426040:	ldr	x5, [x1, #8]
  426044:	add	x2, x2, #0x288
  426048:	mov	x1, #0x2                   	// #2
  42604c:	add	x0, x0, #0x298
  426050:	bl	4253c8 <define_variable_in_set@@Base>
  426054:	ldr	x1, [x19, #336]
  426058:	mov	x6, #0x0                   	// #0
  42605c:	mov	w4, #0x1                   	// #1
  426060:	mov	w3, #0x6                   	// #6
  426064:	adrp	x2, 42f000 <_IO_stdin_used@@Base+0x60e0>
  426068:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  42606c:	ldr	x5, [x1, #8]
  426070:	add	x2, x2, #0x2a0
  426074:	mov	x1, #0x2                   	// #2
  426078:	add	x0, x0, #0x2b0
  42607c:	bl	4253c8 <define_variable_in_set@@Base>
  426080:	ldr	x1, [x19, #336]
  426084:	mov	x6, #0x0                   	// #0
  426088:	mov	w4, #0x1                   	// #1
  42608c:	mov	w3, #0x6                   	// #6
  426090:	adrp	x2, 42f000 <_IO_stdin_used@@Base+0x60e0>
  426094:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  426098:	ldr	x5, [x1, #8]
  42609c:	add	x2, x2, #0x2b8
  4260a0:	mov	x1, #0x2                   	// #2
  4260a4:	add	x0, x0, #0x2c8
  4260a8:	bl	4253c8 <define_variable_in_set@@Base>
  4260ac:	ldr	x1, [x19, #336]
  4260b0:	mov	x6, #0x0                   	// #0
  4260b4:	mov	w4, #0x1                   	// #1
  4260b8:	mov	w3, #0x6                   	// #6
  4260bc:	adrp	x2, 42f000 <_IO_stdin_used@@Base+0x60e0>
  4260c0:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  4260c4:	ldr	x5, [x1, #8]
  4260c8:	add	x2, x2, #0x2d0
  4260cc:	mov	x1, #0x2                   	// #2
  4260d0:	add	x0, x0, #0x2e0
  4260d4:	bl	4253c8 <define_variable_in_set@@Base>
  4260d8:	ldr	x1, [x19, #336]
  4260dc:	mov	x6, #0x0                   	// #0
  4260e0:	mov	w4, #0x1                   	// #1
  4260e4:	mov	w3, #0x6                   	// #6
  4260e8:	adrp	x2, 42f000 <_IO_stdin_used@@Base+0x60e0>
  4260ec:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  4260f0:	ldr	x5, [x1, #8]
  4260f4:	add	x2, x2, #0x2e8
  4260f8:	mov	x1, #0x2                   	// #2
  4260fc:	add	x0, x0, #0x2f8
  426100:	bl	4253c8 <define_variable_in_set@@Base>
  426104:	ldr	x1, [x19, #336]
  426108:	mov	x6, #0x0                   	// #0
  42610c:	mov	w4, #0x1                   	// #1
  426110:	mov	w3, #0x6                   	// #6
  426114:	adrp	x2, 42f000 <_IO_stdin_used@@Base+0x60e0>
  426118:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  42611c:	ldr	x5, [x1, #8]
  426120:	add	x2, x2, #0x300
  426124:	mov	x1, #0x2                   	// #2
  426128:	add	x0, x0, #0x310
  42612c:	bl	4253c8 <define_variable_in_set@@Base>
  426130:	ldp	x19, x20, [sp, #16]
  426134:	ldp	x21, x22, [sp, #32]
  426138:	ldp	x29, x30, [sp], #256
  42613c:	ret
  426140:	adrp	x3, 42c000 <_IO_stdin_used@@Base+0x30e0>
  426144:	adrp	x21, 42d000 <_IO_stdin_used@@Base+0x40e0>
  426148:	add	x3, x3, #0x20
  42614c:	add	x21, x21, #0xed0
  426150:	b	425db8 <define_automatic_variables@@Base+0x80>
  426154:	nop

0000000000426158 <target_environment@@Base>:
  426158:	stp	x29, x30, [sp, #-256]!
  42615c:	mov	x29, sp
  426160:	stp	x19, x20, [sp, #16]
  426164:	stp	x21, x22, [sp, #32]
  426168:	stp	x23, x24, [sp, #48]
  42616c:	mov	x24, x0
  426170:	stp	x25, x26, [sp, #64]
  426174:	stp	x27, x28, [sp, #80]
  426178:	cbz	x0, 4264a0 <target_environment@@Base+0x348>
  42617c:	ldr	x21, [x0, #80]
  426180:	adrp	x4, 424000 <snap_implicit_rules@@Base+0x2d8>
  426184:	adrp	x3, 424000 <snap_implicit_rules@@Base+0x2d8>
  426188:	adrp	x2, 424000 <snap_implicit_rules@@Base+0x2d8>
  42618c:	add	x0, sp, #0xa8
  426190:	add	x4, x4, #0xe20
  426194:	add	x3, x3, #0xe18
  426198:	add	x2, x2, #0xe58
  42619c:	mov	x1, #0x20b                 	// #523
  4261a0:	bl	4125d8 <hash_init@@Base>
  4261a4:	cbz	x21, 4262b8 <target_environment@@Base+0x160>
  4261a8:	adrp	x23, 449000 <commands_started@@Base+0x170>
  4261ac:	mov	w22, #0x8                   	// #8
  4261b0:	add	x23, x23, #0x7e8
  4261b4:	movk	w22, #0x6000, lsl #16
  4261b8:	ldr	x0, [x21, #8]
  4261bc:	adrp	x26, 446000 <expanding_var@@Base+0x320>
  4261c0:	ldr	x20, [x0]
  4261c4:	ldr	x25, [x0, #32]
  4261c8:	add	x25, x20, x25, lsl #3
  4261cc:	cmp	x20, x25
  4261d0:	b.cc	426210 <target_environment@@Base+0xb8>  // b.lo, b.ul, b.last
  4261d4:	b	4262b0 <target_environment@@Base+0x158>
  4261d8:	cmp	w1, #0x1
  4261dc:	b.eq	4263c4 <target_environment@@Base+0x26c>  // b.none
  4261e0:	mov	x1, x19
  4261e4:	add	x0, sp, #0xa8
  4261e8:	bl	412690 <hash_find_slot@@Base>
  4261ec:	mov	x2, x0
  4261f0:	ldr	x0, [x0]
  4261f4:	cbz	x0, 426298 <target_environment@@Base+0x140>
  4261f8:	ldr	x1, [x26, #72]
  4261fc:	cmp	x0, x1
  426200:	b.eq	426298 <target_environment@@Base+0x140>  // b.none
  426204:	add	x20, x20, #0x8
  426208:	cmp	x25, x20
  42620c:	b.ls	4262b0 <target_environment@@Base+0x158>  // b.plast
  426210:	ldr	x19, [x20]
  426214:	cbz	x19, 426204 <target_environment@@Base+0xac>
  426218:	ldr	x0, [x26, #72]
  42621c:	cmp	x19, x0
  426220:	b.eq	426204 <target_environment@@Base+0xac>  // b.none
  426224:	ldr	w0, [x19, #44]
  426228:	bics	wzr, w22, w0
  42622c:	b.eq	426418 <target_environment@@Base+0x2c0>  // b.none
  426230:	ldrb	w1, [x19, #47]
  426234:	ubfx	x1, x1, #5, #2
  426238:	cmp	w1, #0x2
  42623c:	b.eq	426408 <target_environment@@Base+0x2b0>  // b.none
  426240:	cmp	w1, #0x3
  426244:	b.ne	4261d8 <target_environment@@Base+0x80>  // b.any
  426248:	ldrb	w0, [x19, #47]
  42624c:	ands	w1, w0, #0x1c
  426250:	ccmp	w1, #0x18, #0x4, ne  // ne = any
  426254:	b.eq	426204 <target_environment@@Base+0xac>  // b.none
  426258:	ldrb	w2, [x19, #44]
  42625c:	tbz	w2, #5, 426204 <target_environment@@Base+0xac>
  426260:	adrp	x2, 449000 <commands_started@@Base+0x170>
  426264:	mov	w3, #0x14                  	// #20
  426268:	and	w0, w0, w3
  42626c:	cmp	w0, #0x4
  426270:	ldr	w0, [x2, #2340]
  426274:	ccmp	w1, #0x10, #0x4, ne  // ne = any
  426278:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  42627c:	b.eq	426204 <target_environment@@Base+0xac>  // b.none
  426280:	mov	x1, x19
  426284:	add	x0, sp, #0xa8
  426288:	bl	412690 <hash_find_slot@@Base>
  42628c:	mov	x2, x0
  426290:	ldr	x0, [x0]
  426294:	cbnz	x0, 4261f8 <target_environment@@Base+0xa0>
  426298:	mov	x1, x19
  42629c:	add	x0, sp, #0xa8
  4262a0:	add	x20, x20, #0x8
  4262a4:	bl	412b18 <hash_insert_at@@Base>
  4262a8:	cmp	x25, x20
  4262ac:	b.hi	426210 <target_environment@@Base+0xb8>  // b.pmore
  4262b0:	ldr	x21, [x21]
  4262b4:	cbnz	x21, 4261b8 <target_environment@@Base+0x60>
  4262b8:	mov	w2, #0x9                   	// #9
  4262bc:	add	x1, sp, #0x78
  4262c0:	add	x0, sp, #0xa8
  4262c4:	adrp	x26, 42c000 <_IO_stdin_used@@Base+0x30e0>
  4262c8:	add	x26, x26, #0x300
  4262cc:	str	x26, [sp, #120]
  4262d0:	str	w2, [sp, #160]
  4262d4:	bl	412c60 <hash_delete@@Base>
  4262d8:	ldr	x0, [sp, #216]
  4262dc:	add	x0, x0, #0x2
  4262e0:	lsl	x0, x0, #3
  4262e4:	bl	41ab28 <xmalloc@@Base>
  4262e8:	ldr	x20, [sp, #168]
  4262ec:	mov	x25, x0
  4262f0:	ldr	x23, [sp, #200]
  4262f4:	mov	x21, x0
  4262f8:	add	x23, x20, x23, lsl #3
  4262fc:	cmp	x20, x23
  426300:	b.cs	42636c <target_environment@@Base+0x214>  // b.hs, b.nlast
  426304:	adrp	x28, 42f000 <_IO_stdin_used@@Base+0x60e0>
  426308:	add	x28, x28, #0x318
  42630c:	adrp	x27, 446000 <expanding_var@@Base+0x320>
  426310:	ldr	x19, [x20]
  426314:	add	x22, x21, #0x8
  426318:	cbz	x19, 426360 <target_environment@@Base+0x208>
  42631c:	ldr	x1, [x27, #72]
  426320:	mov	x2, x28
  426324:	mov	w0, #0x3                   	// #3
  426328:	cmp	x19, x1
  42632c:	b.eq	426360 <target_environment@@Base+0x208>  // b.none
  426330:	ldrb	w1, [x19, #44]
  426334:	tbz	w1, #0, 42634c <target_environment@@Base+0x1f4>
  426338:	ldrb	w1, [x19, #47]
  42633c:	mov	w3, #0x14                  	// #20
  426340:	and	w1, w3, w1
  426344:	cmp	w1, #0x4
  426348:	b.ne	426460 <target_environment@@Base+0x308>  // b.any
  42634c:	ldp	x1, x3, [x19]
  426350:	bl	41a930 <concat@@Base>
  426354:	bl	41abb0 <xstrdup@@Base>
  426358:	str	x0, [x21]
  42635c:	mov	x21, x22
  426360:	add	x20, x20, #0x8
  426364:	cmp	x23, x20
  426368:	b.hi	426310 <target_environment@@Base+0x1b8>  // b.pmore
  42636c:	mov	x0, #0x64                  	// #100
  426370:	bl	41ab28 <xmalloc@@Base>
  426374:	adrp	x1, 449000 <commands_started@@Base+0x170>
  426378:	mov	x2, x26
  42637c:	ldr	w3, [x1, #2112]
  426380:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  426384:	str	x0, [x21]
  426388:	add	x1, x1, #0x628
  42638c:	add	w3, w3, #0x1
  426390:	bl	406730 <sprintf@plt>
  426394:	str	xzr, [x21, #8]
  426398:	add	x0, sp, #0xa8
  42639c:	mov	w1, #0x0                   	// #0
  4263a0:	bl	412dc0 <hash_free@@Base>
  4263a4:	mov	x0, x25
  4263a8:	ldp	x19, x20, [sp, #16]
  4263ac:	ldp	x21, x22, [sp, #32]
  4263b0:	ldp	x23, x24, [sp, #48]
  4263b4:	ldp	x25, x26, [sp, #64]
  4263b8:	ldp	x27, x28, [sp, #80]
  4263bc:	ldp	x29, x30, [sp], #256
  4263c0:	ret
  4263c4:	ldr	x0, [x19]
  4263c8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4263cc:	add	x1, x1, #0x9a0
  4263d0:	cmp	x0, x1
  4263d4:	b.eq	4263f8 <target_environment@@Base+0x2a0>  // b.none
  4263d8:	ldrb	w1, [x0]
  4263dc:	cmp	w1, #0x53
  4263e0:	b.ne	426204 <target_environment@@Base+0xac>  // b.any
  4263e4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x20e0>
  4263e8:	add	x0, x0, #0x1
  4263ec:	add	x1, x1, #0x9a1
  4263f0:	bl	406b40 <strcmp@plt>
  4263f4:	cbnz	w0, 426204 <target_environment@@Base+0xac>
  4263f8:	ldr	x0, [x23, #8]
  4263fc:	mov	x19, x23
  426400:	cbnz	x0, 4261e0 <target_environment@@Base+0x88>
  426404:	b	426204 <target_environment@@Base+0xac>
  426408:	ldrb	w0, [x19, #47]
  42640c:	tst	w0, #0x1c
  426410:	b.ne	4261e0 <target_environment@@Base+0x88>  // b.any
  426414:	b	426204 <target_environment@@Base+0xac>
  426418:	ldr	x27, [x19]
  42641c:	mov	x0, x27
  426420:	bl	406680 <strlen@plt>
  426424:	mov	x2, x0
  426428:	adrp	x0, 448000 <output_context@@Base+0x1208>
  42642c:	add	x0, x0, #0xf30
  426430:	add	x1, sp, #0x78
  426434:	add	x0, x0, #0x810
  426438:	str	x27, [sp, #120]
  42643c:	str	w2, [sp, #160]
  426440:	bl	412950 <hash_find_item@@Base>
  426444:	cbz	x0, 426230 <target_environment@@Base+0xd8>
  426448:	ldrb	w1, [x0, #47]
  42644c:	ldrb	w0, [x19, #47]
  426450:	ubfx	x1, x1, #5, #2
  426454:	bfi	w0, w1, #5, #2
  426458:	strb	w0, [x19, #47]
  42645c:	b	426238 <target_environment@@Base+0xe0>
  426460:	mov	x1, x24
  426464:	mov	x0, x19
  426468:	bl	40c818 <recursively_expand_for_file@@Base>
  42646c:	mov	x3, x0
  426470:	ldr	x1, [x19]
  426474:	mov	x2, x28
  426478:	mov	w0, #0x3                   	// #3
  42647c:	str	x3, [sp, #104]
  426480:	bl	41a930 <concat@@Base>
  426484:	bl	41abb0 <xstrdup@@Base>
  426488:	str	x0, [x21]
  42648c:	ldr	x3, [sp, #104]
  426490:	mov	x21, x22
  426494:	mov	x0, x3
  426498:	bl	406b90 <free@plt>
  42649c:	b	426360 <target_environment@@Base+0x208>
  4264a0:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  4264a4:	ldr	x21, [x0, #336]
  4264a8:	b	426180 <target_environment@@Base+0x28>
  4264ac:	nop

00000000004264b0 <do_variable_definition@@Base>:
  4264b0:	stp	x29, x30, [sp, #-176]!
  4264b4:	cmp	w4, #0x3
  4264b8:	mov	x29, sp
  4264bc:	stp	x19, x20, [sp, #16]
  4264c0:	mov	w20, w4
  4264c4:	stp	x21, x22, [sp, #32]
  4264c8:	mov	w22, w5
  4264cc:	stp	x23, x24, [sp, #48]
  4264d0:	mov	x23, x0
  4264d4:	mov	w24, w3
  4264d8:	stp	x25, x26, [sp, #64]
  4264dc:	stp	x27, x28, [sp, #80]
  4264e0:	mov	x28, x1
  4264e4:	mov	x27, x2
  4264e8:	b.eq	426500 <do_variable_definition@@Base+0x50>  // b.none
  4264ec:	b.ls	426640 <do_variable_definition@@Base+0x190>  // b.plast
  4264f0:	cmp	w4, #0x5
  4264f4:	b.eq	426768 <do_variable_definition@@Base+0x2b8>  // b.none
  4264f8:	cmp	w4, #0x6
  4264fc:	b.ne	4266b0 <do_variable_definition@@Base+0x200>  // b.any
  426500:	mov	x0, x28
  426504:	bl	406680 <strlen@plt>
  426508:	mov	x3, x0
  42650c:	cbz	w22, 4267dc <do_variable_definition@@Base+0x32c>
  426510:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  426514:	add	x1, sp, #0x80
  426518:	str	x2, [sp, #96]
  42651c:	ldr	x0, [x2, #336]
  426520:	ldr	x0, [x0, #8]
  426524:	str	x28, [sp, #128]
  426528:	str	w3, [sp, #168]
  42652c:	bl	412950 <hash_find_item@@Base>
  426530:	mov	x19, x0
  426534:	ldr	x2, [sp, #96]
  426538:	cbz	x0, 426844 <do_variable_definition@@Base+0x394>
  42653c:	ldrb	w0, [x0, #44]
  426540:	ubfx	x21, x0, #1, #1
  426544:	tbnz	w0, #0, 4267fc <do_variable_definition@@Base+0x34c>
  426548:	cmp	w20, #0x6
  42654c:	mov	x25, #0x0                   	// #0
  426550:	b.ne	426808 <do_variable_definition@@Base+0x358>  // b.any
  426554:	mov	x0, x27
  426558:	bl	406680 <strlen@plt>
  42655c:	mov	x26, x0
  426560:	cbz	x0, 426610 <do_variable_definition@@Base+0x160>
  426564:	ldr	x0, [x19, #8]
  426568:	bl	406680 <strlen@plt>
  42656c:	mov	x2, x0
  426570:	add	x0, x26, #0x2
  426574:	str	x2, [sp, #96]
  426578:	add	x0, x0, x2
  42657c:	bl	41ab28 <xmalloc@@Base>
  426580:	mov	x3, x0
  426584:	ldr	x2, [sp, #96]
  426588:	mov	x4, x0
  42658c:	cbnz	x2, 426820 <do_variable_definition@@Base+0x370>
  426590:	add	x2, x26, #0x1
  426594:	mov	x1, x27
  426598:	mov	x0, x4
  42659c:	str	x3, [sp, #96]
  4265a0:	bl	406640 <memcpy@plt>
  4265a4:	ldr	x3, [sp, #96]
  4265a8:	mov	x0, x25
  4265ac:	mov	x25, x3
  4265b0:	bl	406b90 <free@plt>
  4265b4:	mov	x27, x25
  4265b8:	cmp	w20, #0x2
  4265bc:	mov	w20, #0x0                   	// #0
  4265c0:	cset	w26, eq  // eq = none
  4265c4:	mov	x0, x28
  4265c8:	mov	x19, #0x0                   	// #0
  4265cc:	bl	406680 <strlen@plt>
  4265d0:	mov	x1, x0
  4265d4:	cbnz	w22, 4266e8 <do_variable_definition@@Base+0x238>
  4265d8:	mov	x5, x19
  4265dc:	mov	x6, x23
  4265e0:	mov	w4, w26
  4265e4:	mov	w3, w24
  4265e8:	mov	x2, x27
  4265ec:	mov	x0, x28
  4265f0:	bl	4253c8 <define_variable_in_set@@Base>
  4265f4:	mov	x19, x0
  4265f8:	ldrb	w0, [x0, #44]
  4265fc:	lsl	w21, w21, #1
  426600:	orr	w21, w21, w20, lsl #2
  426604:	and	w0, w0, #0xfffffff9
  426608:	orr	w21, w21, w0
  42660c:	strb	w21, [x19, #44]
  426610:	mov	x0, x25
  426614:	bl	406b90 <free@plt>
  426618:	ldrb	w0, [x19, #44]
  42661c:	tbnz	w0, #4, 4266f8 <do_variable_definition@@Base+0x248>
  426620:	mov	x0, x19
  426624:	ldp	x19, x20, [sp, #16]
  426628:	ldp	x21, x22, [sp, #32]
  42662c:	ldp	x23, x24, [sp, #48]
  426630:	ldp	x25, x26, [sp, #64]
  426634:	ldp	x27, x28, [sp, #80]
  426638:	ldp	x29, x30, [sp], #176
  42663c:	ret
  426640:	cmp	w4, #0x1
  426644:	b.ne	426680 <do_variable_definition@@Base+0x1d0>  // b.any
  426648:	mov	x1, #0x0                   	// #0
  42664c:	mov	x0, x2
  426650:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  426654:	mov	w20, #0x0                   	// #0
  426658:	mov	x27, x0
  42665c:	mov	x25, x0
  426660:	mov	w21, #0x0                   	// #0
  426664:	mov	x0, x28
  426668:	mov	w26, #0x0                   	// #0
  42666c:	bl	406680 <strlen@plt>
  426670:	mov	x19, #0x0                   	// #0
  426674:	mov	x1, x0
  426678:	cbz	w22, 4265d8 <do_variable_definition@@Base+0x128>
  42667c:	b	4266e8 <do_variable_definition@@Base+0x238>
  426680:	cmp	w4, #0x2
  426684:	b.ne	42688c <do_variable_definition@@Base+0x3dc>  // b.any
  426688:	mov	x0, x28
  42668c:	mov	w20, #0x0                   	// #0
  426690:	bl	406680 <strlen@plt>
  426694:	mov	w21, #0x0                   	// #0
  426698:	mov	x1, x0
  42669c:	mov	w26, #0x1                   	// #1
  4266a0:	mov	x25, #0x0                   	// #0
  4266a4:	mov	x19, #0x0                   	// #0
  4266a8:	cbz	w22, 4265d8 <do_variable_definition@@Base+0x128>
  4266ac:	b	4266e8 <do_variable_definition@@Base+0x238>
  4266b0:	cmp	w4, #0x4
  4266b4:	b.ne	42688c <do_variable_definition@@Base+0x3dc>  // b.any
  4266b8:	mov	x0, x1
  4266bc:	bl	406680 <strlen@plt>
  4266c0:	mov	x25, #0x0                   	// #0
  4266c4:	mov	x1, x0
  4266c8:	mov	x0, x28
  4266cc:	bl	4257c8 <lookup_variable@@Base>
  4266d0:	mov	x19, x0
  4266d4:	cbnz	x0, 426610 <do_variable_definition@@Base+0x160>
  4266d8:	mov	w20, #0x1                   	// #1
  4266dc:	mov	w21, #0x0                   	// #0
  4266e0:	mov	w26, w20
  4266e4:	b	4265c4 <do_variable_definition@@Base+0x114>
  4266e8:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  4266ec:	ldr	x0, [x2, #336]
  4266f0:	ldr	x19, [x0, #8]
  4266f4:	b	4265d8 <do_variable_definition@@Base+0x128>
  4266f8:	ldr	x0, [x19]
  4266fc:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  426700:	add	x1, x1, #0x1f0
  426704:	cmp	x0, x1
  426708:	b.eq	42672c <do_variable_definition@@Base+0x27c>  // b.none
  42670c:	ldrb	w1, [x0]
  426710:	cmp	w1, #0x2e
  426714:	b.ne	426620 <do_variable_definition@@Base+0x170>  // b.any
  426718:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x30e0>
  42671c:	add	x0, x0, #0x1
  426720:	add	x1, x1, #0x1f1
  426724:	bl	406b40 <strcmp@plt>
  426728:	cbnz	w0, 426620 <do_variable_definition@@Base+0x170>
  42672c:	ldr	x0, [x19, #8]
  426730:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  426734:	mov	w2, #0x9                   	// #9
  426738:	ldp	x21, x22, [sp, #32]
  42673c:	ldrb	w0, [x0]
  426740:	ldp	x23, x24, [sp, #48]
  426744:	cmp	w0, #0x0
  426748:	csel	w0, w0, w2, ne  // ne = any
  42674c:	strb	w0, [x1, #180]
  426750:	mov	x0, x19
  426754:	ldp	x19, x20, [sp, #16]
  426758:	ldp	x25, x26, [sp, #64]
  42675c:	ldp	x27, x28, [sp, #80]
  426760:	ldp	x29, x30, [sp], #176
  426764:	ret
  426768:	mov	x0, x2
  42676c:	adrp	x25, 449000 <commands_started@@Base+0x170>
  426770:	mov	x1, #0x0                   	// #0
  426774:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  426778:	add	x1, sp, #0x78
  42677c:	mov	x19, x0
  426780:	add	x0, sp, #0x70
  426784:	bl	40cb48 <install_variable_buffer@@Base>
  426788:	ldr	x0, [x25, #2000]
  42678c:	add	x1, sp, #0x80
  426790:	mov	w2, #0x0                   	// #0
  426794:	stp	x19, xzr, [sp, #128]
  426798:	mov	w20, #0x0                   	// #0
  42679c:	bl	411c80 <func_shell_base@@Base>
  4267a0:	mov	w21, #0x0                   	// #0
  4267a4:	mov	x2, #0x1                   	// #1
  4267a8:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  4267ac:	add	x1, x1, #0x3d8
  4267b0:	bl	40bbb0 <variable_buffer_output@@Base>
  4267b4:	ldr	x0, [x25, #2000]
  4267b8:	mov	w26, #0x1                   	// #1
  4267bc:	bl	406a20 <strdup@plt>
  4267c0:	mov	x27, x0
  4267c4:	mov	x25, x0
  4267c8:	ldp	x0, x1, [sp, #112]
  4267cc:	bl	40cb90 <restore_variable_buffer@@Base>
  4267d0:	mov	x0, x19
  4267d4:	bl	406b90 <free@plt>
  4267d8:	b	4265c4 <do_variable_definition@@Base+0x114>
  4267dc:	mov	x1, x0
  4267e0:	mov	x0, x28
  4267e4:	bl	4257c8 <lookup_variable@@Base>
  4267e8:	mov	x19, x0
  4267ec:	cbz	x0, 42686c <do_variable_definition@@Base+0x3bc>
  4267f0:	ldrb	w0, [x0, #44]
  4267f4:	mov	w21, #0x0                   	// #0
  4267f8:	b	426544 <do_variable_definition@@Base+0x94>
  4267fc:	mov	x25, #0x0                   	// #0
  426800:	mov	w20, #0x2                   	// #2
  426804:	b	426554 <do_variable_definition@@Base+0xa4>
  426808:	mov	x0, x27
  42680c:	mov	x1, #0x0                   	// #0
  426810:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  426814:	mov	x27, x0
  426818:	mov	x25, x0
  42681c:	b	426554 <do_variable_definition@@Base+0xa4>
  426820:	ldr	x1, [x19, #8]
  426824:	str	x0, [sp, #104]
  426828:	bl	406640 <memcpy@plt>
  42682c:	ldp	x2, x3, [sp, #96]
  426830:	mov	w0, #0x20                  	// #32
  426834:	add	x4, x2, #0x1
  426838:	strb	w0, [x3, x2]
  42683c:	add	x4, x3, x4
  426840:	b	426590 <do_variable_definition@@Base+0xe0>
  426844:	mov	x0, x28
  426848:	str	x2, [sp, #96]
  42684c:	bl	406680 <strlen@plt>
  426850:	mov	w21, #0x1                   	// #1
  426854:	mov	x1, x0
  426858:	mov	w26, w21
  42685c:	mov	x25, #0x0                   	// #0
  426860:	mov	w20, #0x0                   	// #0
  426864:	ldr	x2, [sp, #96]
  426868:	b	4266ec <do_variable_definition@@Base+0x23c>
  42686c:	mov	x0, x28
  426870:	mov	x25, #0x0                   	// #0
  426874:	bl	406680 <strlen@plt>
  426878:	mov	w20, #0x0                   	// #0
  42687c:	mov	x1, x0
  426880:	mov	w21, #0x0                   	// #0
  426884:	mov	w26, #0x1                   	// #1
  426888:	b	4265d8 <do_variable_definition@@Base+0x128>
  42688c:	bl	406ab0 <abort@plt>

0000000000426890 <initialize_file_variables@@Base>:
  426890:	stp	x29, x30, [sp, #-80]!
  426894:	mov	x29, sp
  426898:	stp	x21, x22, [sp, #32]
  42689c:	ldr	x21, [x0, #80]
  4268a0:	stp	x19, x20, [sp, #16]
  4268a4:	mov	x19, x0
  4268a8:	mov	w20, w1
  4268ac:	cbz	x21, 42695c <initialize_file_variables@@Base+0xcc>
  4268b0:	ldr	x0, [x19, #104]
  4268b4:	cmp	x0, #0x0
  4268b8:	ccmp	x0, x19, #0x4, ne  // ne = any
  4268bc:	b.ne	426934 <initialize_file_variables@@Base+0xa4>  // b.any
  4268c0:	ldr	x0, [x19, #96]
  4268c4:	cbz	x0, 426920 <initialize_file_variables@@Base+0x90>
  4268c8:	mov	w1, w20
  4268cc:	bl	426890 <initialize_file_variables@@Base>
  4268d0:	ldr	x0, [x19, #96]
  4268d4:	ldr	x0, [x0, #80]
  4268d8:	str	x0, [x21]
  4268dc:	mov	w0, #0x1                   	// #1
  4268e0:	str	w0, [x21, #16]
  4268e4:	cbnz	w20, 4268f0 <initialize_file_variables@@Base+0x60>
  4268e8:	ldrb	w0, [x19, #138]
  4268ec:	tbz	w0, #2, 42699c <initialize_file_variables@@Base+0x10c>
  4268f0:	ldr	x0, [x19, #88]
  4268f4:	cbz	x0, 426910 <initialize_file_variables@@Base+0x80>
  4268f8:	ldr	x1, [x21]
  4268fc:	str	x1, [x0]
  426900:	ldr	w1, [x21, #16]
  426904:	str	w1, [x0, #16]
  426908:	str	x0, [x21]
  42690c:	str	wzr, [x21, #16]
  426910:	ldp	x19, x20, [sp, #16]
  426914:	ldp	x21, x22, [sp, #32]
  426918:	ldp	x29, x30, [sp], #80
  42691c:	ret
  426920:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  426924:	add	x0, x0, #0x150
  426928:	add	x0, x0, #0x8
  42692c:	str	x0, [x21]
  426930:	b	4268dc <initialize_file_variables@@Base+0x4c>
  426934:	mov	w1, w20
  426938:	bl	426890 <initialize_file_variables@@Base>
  42693c:	ldr	x0, [x19, #104]
  426940:	ldp	x19, x20, [sp, #16]
  426944:	ldr	x0, [x0, #80]
  426948:	str	x0, [x21]
  42694c:	str	wzr, [x21, #16]
  426950:	ldp	x21, x22, [sp, #32]
  426954:	ldp	x29, x30, [sp], #80
  426958:	ret
  42695c:	mov	x0, #0x18                  	// #24
  426960:	bl	41ab28 <xmalloc@@Base>
  426964:	mov	x21, x0
  426968:	mov	x0, #0x58                  	// #88
  42696c:	bl	41ab28 <xmalloc@@Base>
  426970:	adrp	x4, 424000 <snap_implicit_rules@@Base+0x2d8>
  426974:	adrp	x3, 424000 <snap_implicit_rules@@Base+0x2d8>
  426978:	str	x0, [x21, #8]
  42697c:	add	x4, x4, #0xe20
  426980:	add	x3, x3, #0xe18
  426984:	adrp	x2, 424000 <snap_implicit_rules@@Base+0x2d8>
  426988:	mov	x1, #0x17                  	// #23
  42698c:	add	x2, x2, #0xe58
  426990:	bl	4125d8 <hash_init@@Base>
  426994:	str	x21, [x19, #80]
  426998:	b	4268b0 <initialize_file_variables@@Base+0x20>
  42699c:	ldr	x1, [x19]
  4269a0:	mov	x0, #0x0                   	// #0
  4269a4:	bl	424ea8 <strcache_print_stats@@Base+0x2e8>
  4269a8:	mov	x20, x0
  4269ac:	cbz	x0, 426aa4 <initialize_file_variables@@Base+0x214>
  4269b0:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  4269b4:	mov	x0, #0x58                  	// #88
  4269b8:	stp	x23, x24, [sp, #48]
  4269bc:	mov	w23, #0xff7f                	// #65407
  4269c0:	movk	w23, #0x9c7f, lsl #16
  4269c4:	ldr	x24, [x22, #336]
  4269c8:	stp	x25, x26, [sp, #64]
  4269cc:	bl	41ab28 <xmalloc@@Base>
  4269d0:	adrp	x4, 424000 <snap_implicit_rules@@Base+0x2d8>
  4269d4:	adrp	x3, 424000 <snap_implicit_rules@@Base+0x2d8>
  4269d8:	add	x4, x4, #0xe20
  4269dc:	add	x3, x3, #0xe18
  4269e0:	adrp	x2, 424000 <snap_implicit_rules@@Base+0x2d8>
  4269e4:	add	x2, x2, #0xe58
  4269e8:	mov	x1, #0xd                   	// #13
  4269ec:	mov	x25, x0
  4269f0:	bl	4125d8 <hash_init@@Base>
  4269f4:	mov	x0, #0x18                  	// #24
  4269f8:	bl	41ab28 <xmalloc@@Base>
  4269fc:	ldr	x1, [x22, #336]
  426a00:	stp	x1, x25, [x0]
  426a04:	str	wzr, [x0, #16]
  426a08:	str	x0, [x22, #336]
  426a0c:	str	x0, [x19, #88]
  426a10:	ldrh	w4, [x20, #78]
  426a14:	add	x25, x20, #0x30
  426a18:	mov	x0, x25
  426a1c:	mov	w5, #0x1                   	// #1
  426a20:	and	w1, w4, #0x380
  426a24:	cmp	w1, #0x80
  426a28:	ubfx	x4, x4, #7, #3
  426a2c:	ldr	x26, [x20, #32]
  426a30:	b.eq	426ab4 <initialize_file_variables@@Base+0x224>  // b.none
  426a34:	ldr	x2, [x20, #40]
  426a38:	mov	x1, x26
  426a3c:	ldrb	w3, [x20, #79]
  426a40:	ubfx	x3, x3, #2, #3
  426a44:	bl	4264b0 <do_variable_definition@@Base>
  426a48:	ldrb	w2, [x20, #76]
  426a4c:	mov	x1, x0
  426a50:	mov	x0, x20
  426a54:	ubfx	x3, x2, #3, #1
  426a58:	ldrb	w2, [x1, #44]
  426a5c:	ldrb	w4, [x1, #47]
  426a60:	bfi	w2, w3, #3, #1
  426a64:	strb	w2, [x1, #44]
  426a68:	ldrb	w3, [x20, #79]
  426a6c:	ubfx	x3, x3, #5, #2
  426a70:	bfi	w4, w3, #5, #2
  426a74:	strb	w4, [x1, #47]
  426a78:	ldrb	w3, [x20, #76]
  426a7c:	ubfx	x3, x3, #7, #1
  426a80:	bfi	w2, w3, #7, #1
  426a84:	strb	w2, [x1, #44]
  426a88:	ldr	x1, [x19]
  426a8c:	bl	424ea8 <strcache_print_stats@@Base+0x2e8>
  426a90:	mov	x20, x0
  426a94:	cbnz	x0, 426a10 <initialize_file_variables@@Base+0x180>
  426a98:	str	x24, [x22, #336]
  426a9c:	ldp	x23, x24, [sp, #48]
  426aa0:	ldp	x25, x26, [sp, #64]
  426aa4:	ldrb	w0, [x19, #138]
  426aa8:	orr	w0, w0, #0x4
  426aac:	strb	w0, [x19, #138]
  426ab0:	b	4268f0 <initialize_file_variables@@Base+0x60>
  426ab4:	mov	x0, x26
  426ab8:	bl	406680 <strlen@plt>
  426abc:	ldr	x4, [x22, #336]
  426ac0:	mov	x1, x0
  426ac4:	ldrb	w3, [x20, #79]
  426ac8:	mov	x6, x25
  426acc:	ldr	x2, [x20, #40]
  426ad0:	mov	x0, x26
  426ad4:	ldr	x5, [x4, #8]
  426ad8:	ubfx	x3, x3, #2, #3
  426adc:	mov	w4, #0x0                   	// #0
  426ae0:	bl	4253c8 <define_variable_in_set@@Base>
  426ae4:	mov	x3, x0
  426ae8:	ldrb	w1, [x20, #76]
  426aec:	mov	x0, x20
  426af0:	ldrb	w2, [x3, #44]
  426af4:	ubfx	x1, x1, #3, #1
  426af8:	bfi	w2, w1, #3, #1
  426afc:	strb	w2, [x3, #44]
  426b00:	ldrb	w2, [x20, #79]
  426b04:	ldrb	w4, [x20, #76]
  426b08:	ldr	w5, [x3, #44]
  426b0c:	and	w4, w4, #0x80
  426b10:	ubfx	x2, x2, #5, #2
  426b14:	orr	w4, w4, #0x800000
  426b18:	and	w5, w5, w23
  426b1c:	orr	w2, w4, w2, lsl #29
  426b20:	ldr	x1, [x19]
  426b24:	orr	w2, w2, w5
  426b28:	str	w2, [x3, #44]
  426b2c:	bl	424ea8 <strcache_print_stats@@Base+0x2e8>
  426b30:	mov	x20, x0
  426b34:	cbnz	x0, 426a10 <initialize_file_variables@@Base+0x180>
  426b38:	b	426a98 <initialize_file_variables@@Base+0x208>
  426b3c:	nop

0000000000426b40 <parse_variable_definition@@Base>:
  426b40:	stp	x29, x30, [sp, #-32]!
  426b44:	adrp	x2, 446000 <expanding_var@@Base+0x320>
  426b48:	add	x2, x2, #0x4c0
  426b4c:	mov	x29, sp
  426b50:	stp	x19, x20, [sp, #16]
  426b54:	mov	x20, x1
  426b58:	ldrb	w3, [x0]
  426b5c:	ldrh	w3, [x2, x3, lsl #1]
  426b60:	tst	w3, #0x6
  426b64:	b.eq	426b78 <parse_variable_definition@@Base+0x38>  // b.none
  426b68:	ldrb	w3, [x0, #1]!
  426b6c:	ldrh	w3, [x2, x3, lsl #1]
  426b70:	tst	w3, #0x6
  426b74:	b.ne	426b68 <parse_variable_definition@@Base+0x28>  // b.any
  426b78:	mov	x19, x0
  426b7c:	str	x0, [x20]
  426b80:	str	wzr, [x20, #40]
  426b84:	mov	w4, #0x9                   	// #9
  426b88:	ldrb	w3, [x19], #1
  426b8c:	ldrh	w5, [x2, w3, sxtw #1]
  426b90:	tst	w5, w4
  426b94:	b.ne	426bec <parse_variable_definition@@Base+0xac>  // b.any
  426b98:	mov	w7, w4
  426b9c:	mov	x6, x0
  426ba0:	mov	x9, #0x0                   	// #0
  426ba4:	cmp	w3, #0x24
  426ba8:	b.eq	426c00 <parse_variable_definition@@Base+0xc0>  // b.none
  426bac:	mov	w8, #0x0                   	// #0
  426bb0:	tbnz	w5, #1, 426ca4 <parse_variable_definition@@Base+0x164>
  426bb4:	cmp	w3, #0x3d
  426bb8:	b.eq	426d8c <parse_variable_definition@@Base+0x24c>  // b.none
  426bbc:	ldrb	w4, [x19]
  426bc0:	cmp	w4, #0x3d
  426bc4:	b.eq	426c28 <parse_variable_definition@@Base+0xe8>  // b.none
  426bc8:	cmp	w3, #0x3a
  426bcc:	b.eq	426d54 <parse_variable_definition@@Base+0x214>  // b.none
  426bd0:	cbnz	w8, 426bec <parse_variable_definition@@Base+0xac>
  426bd4:	mov	x6, x19
  426bd8:	ldrh	w5, [x2, w4, sxtw #1]
  426bdc:	mov	w3, w4
  426be0:	add	x19, x6, #0x1
  426be4:	tst	w5, w7
  426be8:	b.eq	426ba4 <parse_variable_definition@@Base+0x64>  // b.none
  426bec:	mov	x19, #0x0                   	// #0
  426bf0:	mov	x0, x19
  426bf4:	ldp	x19, x20, [sp, #16]
  426bf8:	ldp	x29, x30, [sp], #32
  426bfc:	ret
  426c00:	ldrb	w8, [x6, #1]
  426c04:	add	x5, x6, #0x2
  426c08:	cmp	w8, #0x28
  426c0c:	b.eq	426d04 <parse_variable_definition@@Base+0x1c4>  // b.none
  426c10:	cmp	w8, #0x7b
  426c14:	b.eq	426d4c <parse_variable_definition@@Base+0x20c>  // b.none
  426c18:	cbz	w8, 426bec <parse_variable_definition@@Base+0xac>
  426c1c:	ldrb	w4, [x6, #2]
  426c20:	mov	x6, x5
  426c24:	b	426bd8 <parse_variable_definition@@Base+0x98>
  426c28:	cmp	w3, #0x3a
  426c2c:	b.eq	426cf0 <parse_variable_definition@@Base+0x1b0>  // b.none
  426c30:	b.gt	426c88 <parse_variable_definition@@Base+0x148>
  426c34:	cmp	w3, #0x21
  426c38:	b.eq	426cdc <parse_variable_definition@@Base+0x19c>  // b.none
  426c3c:	cmp	w3, #0x2b
  426c40:	b.ne	426bd0 <parse_variable_definition@@Base+0x90>  // b.any
  426c44:	ldrh	w1, [x20, #46]
  426c48:	mov	w2, #0x3                   	// #3
  426c4c:	bfi	w1, w2, #7, #3
  426c50:	strh	w1, [x20, #46]
  426c54:	sub	x1, x19, #0x1
  426c58:	cmp	x9, #0x0
  426c5c:	csel	x9, x1, x9, eq  // eq = none
  426c60:	add	x19, x19, #0x1
  426c64:	sub	x0, x9, x0
  426c68:	str	w0, [x20, #40]
  426c6c:	mov	x0, x19
  426c70:	bl	41ac48 <next_token@@Base>
  426c74:	str	x0, [x20, #8]
  426c78:	mov	x0, x19
  426c7c:	ldp	x19, x20, [sp, #16]
  426c80:	ldp	x29, x30, [sp], #32
  426c84:	ret
  426c88:	cmp	w3, #0x3f
  426c8c:	b.ne	426bd0 <parse_variable_definition@@Base+0x90>  // b.any
  426c90:	ldrh	w1, [x20, #46]
  426c94:	mov	w2, #0x4                   	// #4
  426c98:	bfi	w1, w2, #7, #3
  426c9c:	strh	w1, [x20, #46]
  426ca0:	b	426c54 <parse_variable_definition@@Base+0x114>
  426ca4:	ldrb	w3, [x19]
  426ca8:	ldrh	w1, [x2, w3, sxtw #1]
  426cac:	tst	w1, #0x6
  426cb0:	b.eq	426cc8 <parse_variable_definition@@Base+0x188>  // b.none
  426cb4:	nop
  426cb8:	ldrb	w3, [x19, #1]!
  426cbc:	ldrh	w4, [x2, w3, sxtw #1]
  426cc0:	tst	w4, #0x6
  426cc4:	b.ne	426cb8 <parse_variable_definition@@Base+0x178>  // b.any
  426cc8:	cbz	w3, 426bec <parse_variable_definition@@Base+0xac>
  426ccc:	add	x19, x19, #0x1
  426cd0:	mov	x9, x6
  426cd4:	mov	w8, #0x1                   	// #1
  426cd8:	b	426bb4 <parse_variable_definition@@Base+0x74>
  426cdc:	ldrh	w1, [x20, #46]
  426ce0:	mov	w2, #0x5                   	// #5
  426ce4:	bfi	w1, w2, #7, #3
  426ce8:	strh	w1, [x20, #46]
  426cec:	b	426c54 <parse_variable_definition@@Base+0x114>
  426cf0:	ldrh	w1, [x20, #46]
  426cf4:	mov	w2, #0x1                   	// #1
  426cf8:	bfi	w1, w2, #7, #3
  426cfc:	strh	w1, [x20, #46]
  426d00:	b	426c54 <parse_variable_definition@@Base+0x114>
  426d04:	mov	w1, #0x29                  	// #41
  426d08:	ldrb	w4, [x6, #2]
  426d0c:	cbz	w4, 426d44 <parse_variable_definition@@Base+0x204>
  426d10:	mov	w3, #0x1                   	// #1
  426d14:	b	426d28 <parse_variable_definition@@Base+0x1e8>
  426d18:	cmp	w8, w4
  426d1c:	ldrb	w4, [x5, #1]!
  426d20:	cinc	w3, w3, eq  // eq = none
  426d24:	cbz	w4, 426d44 <parse_variable_definition@@Base+0x204>
  426d28:	cmp	w1, w4
  426d2c:	b.ne	426d18 <parse_variable_definition@@Base+0x1d8>  // b.any
  426d30:	subs	w3, w3, #0x1
  426d34:	b.ne	426d18 <parse_variable_definition@@Base+0x1d8>  // b.any
  426d38:	ldrb	w4, [x5, #1]
  426d3c:	add	x6, x5, #0x1
  426d40:	b	426bd8 <parse_variable_definition@@Base+0x98>
  426d44:	mov	x6, x5
  426d48:	b	426bd8 <parse_variable_definition@@Base+0x98>
  426d4c:	mov	w1, #0x7d                  	// #125
  426d50:	b	426d08 <parse_variable_definition@@Base+0x1c8>
  426d54:	cmp	w4, #0x3a
  426d58:	b.ne	426bec <parse_variable_definition@@Base+0xac>  // b.any
  426d5c:	ldrb	w1, [x19, #1]
  426d60:	cmp	w1, #0x3d
  426d64:	b.ne	426bec <parse_variable_definition@@Base+0xac>  // b.any
  426d68:	ldrh	w1, [x20, #46]
  426d6c:	sub	x3, x19, #0x1
  426d70:	cmp	x9, #0x0
  426d74:	mov	w2, #0x1                   	// #1
  426d78:	csel	x9, x3, x9, eq  // eq = none
  426d7c:	add	x19, x19, #0x2
  426d80:	bfi	w1, w2, #7, #3
  426d84:	strh	w1, [x20, #46]
  426d88:	b	426c64 <parse_variable_definition@@Base+0x124>
  426d8c:	ldrh	w2, [x20, #46]
  426d90:	cmp	x9, #0x0
  426d94:	sub	x1, x19, #0x1
  426d98:	mov	w3, #0x2                   	// #2
  426d9c:	csel	x9, x1, x9, eq  // eq = none
  426da0:	bfi	w2, w3, #7, #3
  426da4:	strh	w2, [x20, #46]
  426da8:	b	426c64 <parse_variable_definition@@Base+0x124>
  426dac:	nop

0000000000426db0 <assign_variable_definition@@Base>:
  426db0:	stp	x29, x30, [sp, #-32]!
  426db4:	mov	x29, sp
  426db8:	stp	x19, x20, [sp, #16]
  426dbc:	mov	x19, x0
  426dc0:	mov	x0, x1
  426dc4:	mov	x1, x19
  426dc8:	bl	426b40 <parse_variable_definition@@Base>
  426dcc:	cbz	x0, 426e24 <assign_variable_definition@@Base+0x74>
  426dd0:	ldr	w20, [x19, #40]
  426dd4:	ldr	x1, [x19]
  426dd8:	add	w0, w20, #0x1
  426ddc:	add	x0, x0, #0xf
  426de0:	mov	w2, w20
  426de4:	and	x0, x0, #0x1fffffff0
  426de8:	sub	sp, sp, x0
  426dec:	mov	x3, sp
  426df0:	mov	x0, x3
  426df4:	bl	406640 <memcpy@plt>
  426df8:	strb	wzr, [x0, w20, uxtw]
  426dfc:	mov	x1, #0x0                   	// #0
  426e00:	bl	40ca98 <allocated_variable_expand_for_file@@Base>
  426e04:	str	x0, [x19]
  426e08:	ldrb	w0, [x0]
  426e0c:	cbz	w0, 426e3c <assign_variable_definition@@Base+0x8c>
  426e10:	mov	sp, x29
  426e14:	mov	x0, x19
  426e18:	ldp	x19, x20, [sp, #16]
  426e1c:	ldp	x29, x30, [sp], #32
  426e20:	ret
  426e24:	mov	sp, x29
  426e28:	mov	x19, #0x0                   	// #0
  426e2c:	mov	x0, x19
  426e30:	ldp	x19, x20, [sp, #16]
  426e34:	ldp	x29, x30, [sp], #32
  426e38:	ret
  426e3c:	mov	w2, #0x5                   	// #5
  426e40:	adrp	x1, 42e000 <_IO_stdin_used@@Base+0x50e0>
  426e44:	mov	x0, #0x0                   	// #0
  426e48:	add	x1, x1, #0x3d8
  426e4c:	bl	406cd0 <dcgettext@plt>
  426e50:	mov	x2, x0
  426e54:	mov	x1, #0x0                   	// #0
  426e58:	add	x0, x19, #0x10
  426e5c:	bl	41c0a0 <fatal@@Base>

0000000000426e60 <try_variable_definition@@Base>:
  426e60:	stp	x29, x30, [sp, #-96]!
  426e64:	mov	x29, sp
  426e68:	stp	x19, x20, [sp, #16]
  426e6c:	mov	x20, x0
  426e70:	stp	x21, x22, [sp, #32]
  426e74:	mov	w21, w2
  426e78:	mov	w22, w3
  426e7c:	cbz	x0, 426edc <try_variable_definition@@Base+0x7c>
  426e80:	ldp	x2, x3, [x0]
  426e84:	stp	x2, x3, [sp, #64]
  426e88:	ldr	x0, [x0, #16]
  426e8c:	str	x0, [sp, #80]
  426e90:	add	x0, sp, #0x30
  426e94:	bl	426db0 <assign_variable_definition@@Base>
  426e98:	mov	x19, x0
  426e9c:	cbz	x0, 426ec8 <try_variable_definition@@Base+0x68>
  426ea0:	ldp	x1, x2, [sp, #48]
  426ea4:	mov	w5, w22
  426ea8:	ldrh	w4, [sp, #94]
  426eac:	mov	w3, w21
  426eb0:	mov	x0, x20
  426eb4:	ubfx	x4, x4, #7, #3
  426eb8:	bl	4264b0 <do_variable_definition@@Base>
  426ebc:	mov	x19, x0
  426ec0:	ldr	x0, [sp, #48]
  426ec4:	bl	406b90 <free@plt>
  426ec8:	mov	x0, x19
  426ecc:	ldp	x19, x20, [sp, #16]
  426ed0:	ldp	x21, x22, [sp, #32]
  426ed4:	ldp	x29, x30, [sp], #96
  426ed8:	ret
  426edc:	str	xzr, [sp, #64]
  426ee0:	b	426e90 <try_variable_definition@@Base+0x30>
  426ee4:	nop

0000000000426ee8 <print_variable_data_base@@Base>:
  426ee8:	stp	x29, x30, [sp, #-48]!
  426eec:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  426ef0:	add	x1, x1, #0x320
  426ef4:	mov	x29, sp
  426ef8:	mov	w2, #0x5                   	// #5
  426efc:	mov	x0, #0x0                   	// #0
  426f00:	stp	x19, x20, [sp, #16]
  426f04:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  426f08:	stp	x21, x22, [sp, #32]
  426f0c:	adrp	x22, 448000 <output_context@@Base+0x1208>
  426f10:	add	x20, x22, #0xf30
  426f14:	bl	406cd0 <dcgettext@plt>
  426f18:	add	x20, x20, #0x810
  426f1c:	bl	406ae0 <puts@plt>
  426f20:	adrp	x21, 42b000 <_IO_stdin_used@@Base+0x20e0>
  426f24:	mov	x0, x20
  426f28:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x40e0>
  426f2c:	adrp	x1, 424000 <snap_implicit_rules@@Base+0x2d8>
  426f30:	add	x2, x2, #0xed0
  426f34:	add	x1, x1, #0xfa0
  426f38:	bl	412ec8 <hash_map_arg@@Base>
  426f3c:	mov	w2, #0x5                   	// #5
  426f40:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  426f44:	mov	x0, #0x0                   	// #0
  426f48:	add	x1, x1, #0x330
  426f4c:	bl	406cd0 <dcgettext@plt>
  426f50:	add	x21, x21, #0xd50
  426f54:	ldr	x1, [x19, #440]
  426f58:	bl	406690 <fputs@plt>
  426f5c:	ldr	x3, [x19, #440]
  426f60:	mov	x2, #0x2                   	// #2
  426f64:	mov	x1, #0x1                   	// #1
  426f68:	mov	x0, x21
  426f6c:	bl	406be0 <fwrite@plt>
  426f70:	ldr	x1, [x19, #440]
  426f74:	mov	x0, x20
  426f78:	bl	412f40 <hash_print_stats@@Base>
  426f7c:	ldr	x1, [x19, #440]
  426f80:	mov	w0, #0xa                   	// #10
  426f84:	bl	406740 <putc@plt>
  426f88:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  426f8c:	add	x1, x1, #0x358
  426f90:	mov	w2, #0x5                   	// #5
  426f94:	mov	x0, #0x0                   	// #0
  426f98:	bl	406cd0 <dcgettext@plt>
  426f9c:	bl	406ae0 <puts@plt>
  426fa0:	ldr	x19, [x22, #3888]
  426fa4:	cbz	x19, 427008 <print_variable_data_base@@Base+0x120>
  426fa8:	adrp	x22, 42f000 <_IO_stdin_used@@Base+0x60e0>
  426fac:	add	x22, x22, #0x380
  426fb0:	mov	w20, #0x0                   	// #0
  426fb4:	nop
  426fb8:	ldr	x1, [x19, #16]
  426fbc:	mov	x0, x22
  426fc0:	add	w20, w20, #0x1
  426fc4:	bl	406d60 <printf@plt>
  426fc8:	add	x0, x19, #0x20
  426fcc:	mov	x1, x21
  426fd0:	bl	424fa0 <strcache_print_stats@@Base+0x3e0>
  426fd4:	ldr	x19, [x19]
  426fd8:	cbnz	x19, 426fb8 <print_variable_data_base@@Base+0xd0>
  426fdc:	cbz	w20, 427008 <print_variable_data_base@@Base+0x120>
  426fe0:	mov	w2, #0x5                   	// #5
  426fe4:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  426fe8:	mov	x0, #0x0                   	// #0
  426fec:	add	x1, x1, #0x3b0
  426ff0:	bl	406cd0 <dcgettext@plt>
  426ff4:	mov	w1, w20
  426ff8:	ldp	x19, x20, [sp, #16]
  426ffc:	ldp	x21, x22, [sp, #32]
  427000:	ldp	x29, x30, [sp], #48
  427004:	b	406d60 <printf@plt>
  427008:	mov	w2, #0x5                   	// #5
  42700c:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427010:	mov	x0, #0x0                   	// #0
  427014:	add	x1, x1, #0x388
  427018:	bl	406cd0 <dcgettext@plt>
  42701c:	ldp	x19, x20, [sp, #16]
  427020:	ldp	x21, x22, [sp, #32]
  427024:	ldp	x29, x30, [sp], #48
  427028:	b	406ae0 <puts@plt>
  42702c:	nop

0000000000427030 <print_file_variables@@Base>:
  427030:	ldr	x0, [x0, #80]
  427034:	cbz	x0, 4270c0 <print_file_variables@@Base+0x90>
  427038:	stp	x29, x30, [sp, #-48]!
  42703c:	adrp	x1, 425000 <strcache_print_stats@@Base+0x440>
  427040:	add	x1, x1, #0x298
  427044:	mov	x29, sp
  427048:	str	x21, [sp, #32]
  42704c:	ldr	x21, [x0, #8]
  427050:	stp	x19, x20, [sp, #16]
  427054:	adrp	x20, 42b000 <_IO_stdin_used@@Base+0x20e0>
  427058:	add	x20, x20, #0xd50
  42705c:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  427060:	mov	x2, x20
  427064:	mov	x0, x21
  427068:	bl	412ec8 <hash_map_arg@@Base>
  42706c:	mov	w2, #0x5                   	// #5
  427070:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427074:	mov	x0, #0x0                   	// #0
  427078:	add	x1, x1, #0x330
  42707c:	bl	406cd0 <dcgettext@plt>
  427080:	ldr	x1, [x19, #440]
  427084:	bl	406690 <fputs@plt>
  427088:	ldr	x3, [x19, #440]
  42708c:	mov	x2, #0x2                   	// #2
  427090:	mov	x0, x20
  427094:	mov	x1, #0x1                   	// #1
  427098:	bl	406be0 <fwrite@plt>
  42709c:	ldr	x1, [x19, #440]
  4270a0:	mov	x0, x21
  4270a4:	bl	412f40 <hash_print_stats@@Base>
  4270a8:	ldr	x1, [x19, #440]
  4270ac:	mov	w0, #0xa                   	// #10
  4270b0:	ldp	x19, x20, [sp, #16]
  4270b4:	ldr	x21, [sp, #32]
  4270b8:	ldp	x29, x30, [sp], #48
  4270bc:	b	406740 <putc@plt>
  4270c0:	ret
  4270c4:	nop

00000000004270c8 <print_target_variables@@Base>:
  4270c8:	stp	x29, x30, [sp, #-32]!
  4270cc:	mov	x29, sp
  4270d0:	stp	x19, x20, [sp, #16]
  4270d4:	ldr	x20, [x0, #80]
  4270d8:	cbz	x20, 42713c <print_target_variables@@Base+0x74>
  4270dc:	ldr	x19, [x0]
  4270e0:	mov	x0, x19
  4270e4:	bl	406680 <strlen@plt>
  4270e8:	mov	x1, x19
  4270ec:	mov	x19, x0
  4270f0:	add	x0, x0, #0x12
  4270f4:	mov	x2, x19
  4270f8:	and	x0, x0, #0xfffffffffffffff0
  4270fc:	sub	sp, sp, x0
  427100:	mov	x3, sp
  427104:	mov	x0, x3
  427108:	bl	406640 <memcpy@plt>
  42710c:	mov	x3, x0
  427110:	add	x0, x0, x19
  427114:	mov	w1, #0x3a                  	// #58
  427118:	mov	w4, #0x20                  	// #32
  42711c:	mov	x2, x3
  427120:	strb	w1, [x3, x19]
  427124:	adrp	x1, 425000 <strcache_print_stats@@Base+0x440>
  427128:	strb	w4, [x0, #1]
  42712c:	add	x1, x1, #0x2b0
  427130:	strb	wzr, [x0, #2]
  427134:	ldr	x0, [x20, #8]
  427138:	bl	412ec8 <hash_map_arg@@Base>
  42713c:	mov	sp, x29
  427140:	ldp	x19, x20, [sp, #16]
  427144:	ldp	x29, x30, [sp], #32
  427148:	ret
  42714c:	nop
  427150:	stp	x29, x30, [sp, #-256]!
  427154:	mov	x29, sp
  427158:	stp	x19, x20, [sp, #16]
  42715c:	add	x19, x1, #0x3
  427160:	stp	x21, x22, [sp, #32]
  427164:	stp	x23, x24, [sp, #48]
  427168:	mov	x24, x2
  42716c:	stp	x25, x26, [sp, #64]
  427170:	mov	x25, x0
  427174:	mov	x26, x3
  427178:	mov	x0, x2
  42717c:	stp	x27, x28, [sp, #80]
  427180:	str	x4, [x29, #104]
  427184:	bl	40ced8 <lookup_file@@Base>
  427188:	mov	w1, #0x1                   	// #1
  42718c:	str	w1, [x29, #120]
  427190:	cbz	x0, 4271a4 <print_target_variables@@Base+0xdc>
  427194:	ldrb	w0, [x0, #137]
  427198:	eor	x0, x0, #0x8
  42719c:	ubfx	x0, x0, #3, #1
  4271a0:	str	x0, [x29, #120]
  4271a4:	mov	x0, x24
  4271a8:	bl	406680 <strlen@plt>
  4271ac:	mov	w1, #0x2f                  	// #47
  4271b0:	mov	x20, x0
  4271b4:	mov	x0, x24
  4271b8:	str	x20, [x29, #112]
  4271bc:	bl	406a70 <strrchr@plt>
  4271c0:	cbz	x0, 4273bc <print_target_variables@@Base+0x2f4>
  4271c4:	subs	x23, x0, x24
  4271c8:	b.eq	4273ac <print_target_variables@@Base+0x2e4>  // b.none
  4271cc:	sub	x2, x20, #0x1
  4271d0:	add	x21, x0, #0x1
  4271d4:	sub	x0, x2, x23
  4271d8:	str	x0, [x29, #112]
  4271dc:	mov	x1, x0
  4271e0:	add	x0, x2, x19
  4271e4:	add	x27, x1, #0x1
  4271e8:	ldr	x20, [x25]
  4271ec:	add	x0, x0, #0xf
  4271f0:	and	x0, x0, #0xfffffffffffffff0
  4271f4:	mov	w22, #0x0                   	// #0
  4271f8:	sub	sp, sp, x0
  4271fc:	mov	x19, sp
  427200:	cbz	x20, 4272a4 <print_target_variables@@Base+0x1dc>
  427204:	nop
  427208:	mov	x0, x20
  42720c:	bl	406680 <strlen@plt>
  427210:	mov	x28, x0
  427214:	mov	x1, x20
  427218:	mov	x0, x19
  42721c:	mov	x2, x28
  427220:	add	x20, x19, x28
  427224:	bl	406640 <memcpy@plt>
  427228:	cbnz	x23, 4272dc <print_target_variables@@Base+0x214>
  42722c:	cmp	x19, x20
  427230:	b.eq	4272c8 <print_target_variables@@Base+0x200>  // b.none
  427234:	ldurb	w0, [x20, #-1]
  427238:	cmp	w0, #0x2f
  42723c:	b.eq	4272c8 <print_target_variables@@Base+0x200>  // b.none
  427240:	mov	x0, x20
  427244:	mov	w3, #0x2f                  	// #47
  427248:	mov	x2, x27
  42724c:	mov	x1, x21
  427250:	strb	w3, [x0], #1
  427254:	bl	406640 <memcpy@plt>
  427258:	mov	x0, x19
  42725c:	bl	40ced8 <lookup_file@@Base>
  427260:	cbz	x0, 427284 <print_target_variables@@Base+0x1bc>
  427264:	ldr	w1, [x29, #120]
  427268:	cbnz	w1, 427274 <print_target_variables@@Base+0x1ac>
  42726c:	ldrb	w1, [x0, #137]
  427270:	tbz	w1, #3, 427284 <print_target_variables@@Base+0x1bc>
  427274:	cbnz	x26, 4272fc <print_target_variables@@Base+0x234>
  427278:	mov	w0, #0x2f                  	// #47
  42727c:	strb	w0, [x20]
  427280:	b	427318 <print_target_variables@@Base+0x250>
  427284:	strb	wzr, [x20]
  427288:	mov	x1, x21
  42728c:	mov	x0, x19
  427290:	bl	40b448 <dir_file_exists_p@@Base>
  427294:	cbnz	w0, 42735c <print_target_variables@@Base+0x294>
  427298:	add	w22, w22, #0x1
  42729c:	ldr	x20, [x25, w22, uxtw #3]
  4272a0:	cbnz	x20, 427208 <print_target_variables@@Base+0x140>
  4272a4:	mov	sp, x29
  4272a8:	mov	x0, #0x0                   	// #0
  4272ac:	ldp	x19, x20, [sp, #16]
  4272b0:	ldp	x21, x22, [sp, #32]
  4272b4:	ldp	x23, x24, [sp, #48]
  4272b8:	ldp	x25, x26, [sp, #64]
  4272bc:	ldp	x27, x28, [sp, #80]
  4272c0:	ldp	x29, x30, [sp], #256
  4272c4:	ret
  4272c8:	mov	x2, x27
  4272cc:	mov	x1, x21
  4272d0:	mov	x0, x20
  4272d4:	bl	406640 <memcpy@plt>
  4272d8:	b	427258 <print_target_variables@@Base+0x190>
  4272dc:	mov	w3, #0x2f                  	// #47
  4272e0:	strb	w3, [x19, x28]
  4272e4:	add	x0, x20, #0x1
  4272e8:	mov	x2, x23
  4272ec:	add	x20, x0, x23
  4272f0:	mov	x1, x24
  4272f4:	bl	406640 <memcpy@plt>
  4272f8:	b	42722c <print_target_variables@@Base+0x164>
  4272fc:	ldr	x0, [x0, #112]
  427300:	cmp	x0, #0x2
  427304:	ccmn	x0, #0x1, #0x4, ne  // ne = any
  427308:	b.ne	4273d0 <print_target_variables@@Base+0x308>  // b.any
  42730c:	mov	w1, #0x2f                  	// #47
  427310:	str	x0, [x26]
  427314:	strb	w1, [x20]
  427318:	ldr	x0, [x29, #104]
  42731c:	cbz	x0, 427324 <print_target_variables@@Base+0x25c>
  427320:	str	w22, [x0]
  427324:	ldr	x2, [x29, #112]
  427328:	add	x1, x20, #0x1
  42732c:	sub	x1, x1, x19
  427330:	mov	x0, x19
  427334:	add	x1, x1, x2
  427338:	bl	424a48 <strcache_add_len@@Base>
  42733c:	mov	sp, x29
  427340:	ldp	x19, x20, [sp, #16]
  427344:	ldp	x21, x22, [sp, #32]
  427348:	ldp	x23, x24, [sp, #48]
  42734c:	ldp	x25, x26, [sp, #64]
  427350:	ldp	x27, x28, [sp, #80]
  427354:	ldp	x29, x30, [sp], #256
  427358:	ret
  42735c:	mov	w0, #0x2f                  	// #47
  427360:	strb	w0, [x20]
  427364:	b	427378 <print_target_variables@@Base+0x2b0>
  427368:	bl	406d70 <__errno_location@plt>
  42736c:	ldr	w0, [x0]
  427370:	cmp	w0, #0x4
  427374:	b.ne	427298 <print_target_variables@@Base+0x1d0>  // b.any
  427378:	add	x2, x29, #0x80
  42737c:	mov	x1, x19
  427380:	mov	w0, #0x0                   	// #0
  427384:	bl	406d90 <__xstat@plt>
  427388:	cmn	w0, #0x1
  42738c:	b.eq	427368 <print_target_variables@@Base+0x2a0>  // b.none
  427390:	cbnz	w0, 427298 <print_target_variables@@Base+0x1d0>
  427394:	cbz	x26, 427318 <print_target_variables@@Base+0x250>
  427398:	ldp	x1, x2, [x29, #216]
  42739c:	mov	x0, x19
  4273a0:	bl	40e500 <file_timestamp_cons@@Base>
  4273a4:	str	x0, [x26]
  4273a8:	b	427318 <print_target_variables@@Base+0x250>
  4273ac:	mov	x2, x20
  4273b0:	mov	x21, x24
  4273b4:	mov	x1, x20
  4273b8:	b	4271e0 <print_target_variables@@Base+0x118>
  4273bc:	mov	x2, x20
  4273c0:	mov	x21, x24
  4273c4:	mov	x1, x20
  4273c8:	mov	x23, #0x0                   	// #0
  4273cc:	b	4271e0 <print_target_variables@@Base+0x118>
  4273d0:	mov	w0, #0x2f                  	// #47
  4273d4:	str	xzr, [x26]
  4273d8:	strb	w0, [x20]
  4273dc:	b	427318 <print_target_variables@@Base+0x250>

00000000004273e0 <construct_vpath_list@@Base>:
  4273e0:	stp	x29, x30, [sp, #-112]!
  4273e4:	mov	x29, sp
  4273e8:	stp	x19, x20, [sp, #16]
  4273ec:	mov	x19, x1
  4273f0:	stp	x21, x22, [sp, #32]
  4273f4:	stp	xzr, x0, [sp, #96]
  4273f8:	cbz	x0, 427404 <construct_vpath_list@@Base+0x24>
  4273fc:	bl	41d7d8 <find_percent@@Base>
  427400:	str	x0, [sp, #96]
  427404:	cbz	x19, 4275f8 <construct_vpath_list@@Base+0x218>
  427408:	stp	x23, x24, [sp, #48]
  42740c:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  427410:	add	x21, x21, #0x4c0
  427414:	stp	x25, x26, [sp, #64]
  427418:	mov	w2, #0x42                  	// #66
  42741c:	stp	x27, x28, [sp, #80]
  427420:	ldrb	w1, [x19]
  427424:	ldrh	w0, [x21, w1, sxtw #1]
  427428:	tst	w0, w2
  42742c:	b.eq	427440 <construct_vpath_list@@Base+0x60>  // b.none
  427430:	ldrb	w1, [x19, #1]!
  427434:	ldrh	w0, [x21, w1, sxtw #1]
  427438:	tst	w0, w2
  42743c:	b.ne	427430 <construct_vpath_list@@Base+0x50>  // b.any
  427440:	cbz	w1, 4276a4 <construct_vpath_list@@Base+0x2c4>
  427444:	mov	x2, x19
  427448:	mov	w23, #0x2                   	// #2
  42744c:	mov	w3, #0x42                  	// #66
  427450:	b	427458 <construct_vpath_list@@Base+0x78>
  427454:	ldrh	w0, [x21, w1, sxtw #1]
  427458:	ldrb	w1, [x2, #1]!
  42745c:	tst	w0, w3
  427460:	cinc	w23, w23, ne  // ne = any
  427464:	cbnz	w1, 427454 <construct_vpath_list@@Base+0x74>
  427468:	ubfiz	x0, x23, #3, #32
  42746c:	bl	41ab28 <xmalloc@@Base>
  427470:	mov	x28, #0x0                   	// #0
  427474:	ldrb	w3, [x19]
  427478:	mov	x22, x0
  42747c:	mov	w27, #0x0                   	// #0
  427480:	mov	w25, #0x42                  	// #66
  427484:	cbz	w3, 4275c0 <construct_vpath_list@@Base+0x1e0>
  427488:	cmp	w3, #0x3a
  42748c:	mov	w2, w3
  427490:	mov	x20, x19
  427494:	mov	x26, #0x0                   	// #0
  427498:	b.ne	4274b0 <construct_vpath_list@@Base+0xd0>  // b.any
  42749c:	b	4274d0 <construct_vpath_list@@Base+0xf0>
  4274a0:	ldrb	w2, [x20, #1]!
  4274a4:	cmp	w2, #0x3a
  4274a8:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  4274ac:	b.eq	4274b8 <construct_vpath_list@@Base+0xd8>  // b.none
  4274b0:	ldrh	w1, [x21, w2, sxtw #1]
  4274b4:	tbz	w1, #1, 4274a0 <construct_vpath_list@@Base+0xc0>
  4274b8:	sub	x26, x20, x19
  4274bc:	cmp	x26, #0x1
  4274c0:	b.ls	4275b0 <construct_vpath_list@@Base+0x1d0>  // b.plast
  4274c4:	ldurb	w0, [x20, #-1]
  4274c8:	cmp	w0, #0x2f
  4274cc:	b.eq	4275a4 <construct_vpath_list@@Base+0x1c4>  // b.none
  4274d0:	mov	x1, x26
  4274d4:	mov	w24, w27
  4274d8:	mov	x0, x19
  4274dc:	bl	424a48 <strcache_add_len@@Base>
  4274e0:	add	w27, w27, #0x1
  4274e4:	mov	x19, x20
  4274e8:	bl	40b760 <dir_name@@Base>
  4274ec:	str	x0, [x22, x24, lsl #3]
  4274f0:	cmp	x28, x26
  4274f4:	csel	x28, x28, x26, cs  // cs = hs, nlast
  4274f8:	ldrb	w3, [x20]
  4274fc:	ldrh	w0, [x21, w3, sxtw #1]
  427500:	tst	w25, w0
  427504:	b.eq	427518 <construct_vpath_list@@Base+0x138>  // b.none
  427508:	ldrb	w3, [x19, #1]!
  42750c:	ldrh	w1, [x21, w3, sxtw #1]
  427510:	tst	w25, w1
  427514:	b.ne	427508 <construct_vpath_list@@Base+0x128>  // b.any
  427518:	cbnz	w3, 427488 <construct_vpath_list@@Base+0xa8>
  42751c:	cbz	w27, 4275c0 <construct_vpath_list@@Base+0x1e0>
  427520:	sub	w4, w23, #0x1
  427524:	cmp	w4, w27
  427528:	b.hi	4275e0 <construct_vpath_list@@Base+0x200>  // b.pmore
  42752c:	str	xzr, [x22, w27, uxtw #3]
  427530:	mov	x0, #0x30                  	// #48
  427534:	bl	41ab28 <xmalloc@@Base>
  427538:	mov	x19, x0
  42753c:	adrp	x1, 449000 <commands_started@@Base+0x170>
  427540:	ldr	x21, [sp, #104]
  427544:	stp	x22, x28, [x19, #32]
  427548:	ldr	x2, [x1, #1960]
  42754c:	str	x2, [x19]
  427550:	str	x0, [x1, #1960]
  427554:	mov	x0, x21
  427558:	bl	424940 <strcache_add@@Base>
  42755c:	mov	x20, x0
  427560:	str	x20, [x19, #8]
  427564:	mov	x0, x21
  427568:	bl	406680 <strlen@plt>
  42756c:	ldr	x1, [sp, #96]
  427570:	ldp	x25, x26, [sp, #64]
  427574:	sub	x23, x1, x21
  427578:	add	x23, x20, x23
  42757c:	cmp	x1, #0x0
  427580:	ldp	x27, x28, [sp, #80]
  427584:	str	x0, [x19, #24]
  427588:	csel	x0, x23, x1, ne  // ne = any
  42758c:	ldp	x23, x24, [sp, #48]
  427590:	str	x0, [x19, #16]
  427594:	ldp	x19, x20, [sp, #16]
  427598:	ldp	x21, x22, [sp, #32]
  42759c:	ldp	x29, x30, [sp], #112
  4275a0:	ret
  4275a4:	sub	x26, x26, #0x1
  4275a8:	cmp	x26, #0x1
  4275ac:	b.ne	4274d0 <construct_vpath_list@@Base+0xf0>  // b.any
  4275b0:	cmp	w3, #0x2e
  4275b4:	b.ne	4274d0 <construct_vpath_list@@Base+0xf0>  // b.any
  4275b8:	mov	x19, x20
  4275bc:	b	4274f8 <construct_vpath_list@@Base+0x118>
  4275c0:	mov	x0, x22
  4275c4:	ldp	x19, x20, [sp, #16]
  4275c8:	ldp	x21, x22, [sp, #32]
  4275cc:	ldp	x23, x24, [sp, #48]
  4275d0:	ldp	x25, x26, [sp, #64]
  4275d4:	ldp	x27, x28, [sp, #80]
  4275d8:	ldp	x29, x30, [sp], #112
  4275dc:	b	406b90 <free@plt>
  4275e0:	add	w1, w27, #0x1
  4275e4:	mov	x0, x22
  4275e8:	lsl	x1, x1, #3
  4275ec:	bl	41ab78 <xrealloc@@Base>
  4275f0:	mov	x22, x0
  4275f4:	b	42752c <construct_vpath_list@@Base+0x14c>
  4275f8:	adrp	x22, 449000 <commands_started@@Base+0x170>
  4275fc:	ldr	x20, [x22, #1960]
  427600:	cbz	x20, 427594 <construct_vpath_list@@Base+0x1b4>
  427604:	ldr	x0, [sp, #104]
  427608:	cbz	x0, 4276c8 <construct_vpath_list@@Base+0x2e8>
  42760c:	ldr	x1, [sp, #96]
  427610:	stp	x25, x26, [sp, #64]
  427614:	add	x26, x0, #0x1
  427618:	sub	x25, x1, x0
  42761c:	nop
  427620:	ldr	x2, [sp, #96]
  427624:	mov	x21, x20
  427628:	ldr	x20, [x20]
  42762c:	ldp	x1, x0, [x21, #8]
  427630:	cbz	x2, 42765c <construct_vpath_list@@Base+0x27c>
  427634:	sub	x0, x0, x1
  427638:	cmp	x0, x25
  42763c:	b.eq	427660 <construct_vpath_list@@Base+0x280>  // b.none
  427640:	mov	x19, x21
  427644:	cbnz	x20, 427620 <construct_vpath_list@@Base+0x240>
  427648:	ldp	x19, x20, [sp, #16]
  42764c:	ldp	x21, x22, [sp, #32]
  427650:	ldp	x25, x26, [sp, #64]
  427654:	ldp	x29, x30, [sp], #112
  427658:	ret
  42765c:	cbnz	x0, 427634 <construct_vpath_list@@Base+0x254>
  427660:	ldr	x0, [sp, #104]
  427664:	cmp	x0, x1
  427668:	b.eq	427680 <construct_vpath_list@@Base+0x2a0>  // b.none
  42766c:	ldrb	w2, [x0]
  427670:	ldrb	w0, [x1]
  427674:	cmp	w0, w2
  427678:	b.ne	427640 <construct_vpath_list@@Base+0x260>  // b.any
  42767c:	cbnz	w0, 4276b0 <construct_vpath_list@@Base+0x2d0>
  427680:	cbz	x19, 42769c <construct_vpath_list@@Base+0x2bc>
  427684:	str	x20, [x19]
  427688:	ldr	x0, [x21, #32]
  42768c:	bl	406b90 <free@plt>
  427690:	mov	x0, x21
  427694:	bl	406b90 <free@plt>
  427698:	b	427644 <construct_vpath_list@@Base+0x264>
  42769c:	str	x20, [x22, #1960]
  4276a0:	b	427688 <construct_vpath_list@@Base+0x2a8>
  4276a4:	mov	x0, #0x10                  	// #16
  4276a8:	mov	w23, #0x2                   	// #2
  4276ac:	b	42746c <construct_vpath_list@@Base+0x8c>
  4276b0:	add	x1, x1, #0x1
  4276b4:	mov	x0, x26
  4276b8:	bl	406b40 <strcmp@plt>
  4276bc:	cbz	w0, 427680 <construct_vpath_list@@Base+0x2a0>
  4276c0:	mov	x19, x21
  4276c4:	b	427644 <construct_vpath_list@@Base+0x264>
  4276c8:	add	x22, x22, #0x7a8
  4276cc:	ldr	x0, [x20, #32]
  4276d0:	mov	x19, x20
  4276d4:	ldr	x20, [x20]
  4276d8:	str	x20, [x22]
  4276dc:	bl	406b90 <free@plt>
  4276e0:	mov	x0, x19
  4276e4:	bl	406b90 <free@plt>
  4276e8:	cbnz	x20, 4276cc <construct_vpath_list@@Base+0x2ec>
  4276ec:	b	427594 <construct_vpath_list@@Base+0x1b4>

00000000004276f0 <build_vpath_lists@@Base>:
  4276f0:	stp	x29, x30, [sp, #-80]!
  4276f4:	mov	x29, sp
  4276f8:	stp	x19, x20, [sp, #16]
  4276fc:	adrp	x19, 449000 <commands_started@@Base+0x170>
  427700:	ldr	x0, [x19, #1960]
  427704:	stp	x21, x22, [sp, #32]
  427708:	cbz	x0, 427808 <build_vpath_lists@@Base+0x118>
  42770c:	mov	x2, #0x0                   	// #0
  427710:	mov	x1, x0
  427714:	ldr	x0, [x0]
  427718:	str	x2, [x1]
  42771c:	mov	x2, x1
  427720:	cbnz	x0, 427710 <build_vpath_lists@@Base+0x20>
  427724:	adrp	x20, 449000 <commands_started@@Base+0x170>
  427728:	str	x1, [x19, #1960]
  42772c:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427730:	add	x0, x0, #0x408
  427734:	ldr	w21, [x20, #2144]
  427738:	add	x22, x19, #0x7a8
  42773c:	str	wzr, [x20, #2144]
  427740:	bl	40c808 <variable_expand@@Base>
  427744:	str	w21, [x20, #2144]
  427748:	mov	x1, x0
  42774c:	ldrb	w0, [x0]
  427750:	cbnz	w0, 427784 <build_vpath_lists@@Base+0x94>
  427754:	str	wzr, [x20, #2144]
  427758:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  42775c:	add	x0, x0, #0x420
  427760:	bl	40c808 <variable_expand@@Base>
  427764:	str	w21, [x20, #2144]
  427768:	mov	x1, x0
  42776c:	ldrb	w0, [x0]
  427770:	cbnz	w0, 4277d4 <build_vpath_lists@@Base+0xe4>
  427774:	ldp	x19, x20, [sp, #16]
  427778:	ldp	x21, x22, [sp, #32]
  42777c:	ldp	x29, x30, [sp], #80
  427780:	ret
  427784:	mov	w2, #0x25                  	// #37
  427788:	add	x0, sp, #0x48
  42778c:	str	x23, [sp, #48]
  427790:	ldr	x23, [x19, #1960]
  427794:	str	xzr, [x19, #1960]
  427798:	strh	w2, [sp, #72]
  42779c:	bl	4273e0 <construct_vpath_list@@Base>
  4277a0:	ldr	x0, [x19, #1960]
  4277a4:	str	x23, [x19, #1960]
  4277a8:	ldr	w21, [x20, #2144]
  4277ac:	str	wzr, [x20, #2144]
  4277b0:	str	x0, [x22, #8]
  4277b4:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  4277b8:	add	x0, x0, #0x420
  4277bc:	ldr	x23, [sp, #48]
  4277c0:	bl	40c808 <variable_expand@@Base>
  4277c4:	str	w21, [x20, #2144]
  4277c8:	mov	x1, x0
  4277cc:	ldrb	w0, [x0]
  4277d0:	cbz	w0, 427774 <build_vpath_lists@@Base+0x84>
  4277d4:	mov	w2, #0x25                  	// #37
  4277d8:	add	x0, sp, #0x48
  4277dc:	ldr	x20, [x19, #1960]
  4277e0:	str	xzr, [x19, #1960]
  4277e4:	strh	w2, [sp, #72]
  4277e8:	bl	4273e0 <construct_vpath_list@@Base>
  4277ec:	ldr	x0, [x19, #1960]
  4277f0:	str	x20, [x19, #1960]
  4277f4:	str	x0, [x22, #16]
  4277f8:	ldp	x19, x20, [sp, #16]
  4277fc:	ldp	x21, x22, [sp, #32]
  427800:	ldp	x29, x30, [sp], #80
  427804:	ret
  427808:	mov	x1, #0x0                   	// #0
  42780c:	b	427724 <build_vpath_lists@@Base+0x34>

0000000000427810 <gpath_search@@Base>:
  427810:	stp	x29, x30, [sp, #-48]!
  427814:	adrp	x2, 449000 <commands_started@@Base+0x170>
  427818:	mov	x29, sp
  42781c:	stp	x19, x20, [sp, #16]
  427820:	mov	x20, x1
  427824:	ldr	x1, [x2, #1976]
  427828:	cbz	x1, 427898 <gpath_search@@Base+0x88>
  42782c:	ldr	x2, [x1, #40]
  427830:	stp	x21, x22, [sp, #32]
  427834:	mov	x22, x0
  427838:	cmp	x2, x20
  42783c:	mov	w0, #0x0                   	// #0
  427840:	b.cc	427888 <gpath_search@@Base+0x78>  // b.lo, b.ul, b.last
  427844:	ldr	x21, [x1, #32]
  427848:	ldr	x19, [x21]
  42784c:	cbz	x19, 427888 <gpath_search@@Base+0x78>
  427850:	mov	x2, x20
  427854:	mov	x1, x22
  427858:	mov	x0, x19
  42785c:	bl	406930 <strncmp@plt>
  427860:	cbnz	w0, 42786c <gpath_search@@Base+0x5c>
  427864:	ldrb	w0, [x19, x20]
  427868:	cbz	w0, 4278a8 <gpath_search@@Base+0x98>
  42786c:	ldr	x19, [x21, #8]!
  427870:	cbnz	x19, 427850 <gpath_search@@Base+0x40>
  427874:	mov	w0, #0x0                   	// #0
  427878:	ldp	x19, x20, [sp, #16]
  42787c:	ldp	x21, x22, [sp, #32]
  427880:	ldp	x29, x30, [sp], #48
  427884:	ret
  427888:	ldp	x19, x20, [sp, #16]
  42788c:	ldp	x21, x22, [sp, #32]
  427890:	ldp	x29, x30, [sp], #48
  427894:	ret
  427898:	mov	w0, #0x0                   	// #0
  42789c:	ldp	x19, x20, [sp, #16]
  4278a0:	ldp	x29, x30, [sp], #48
  4278a4:	ret
  4278a8:	mov	w0, #0x1                   	// #1
  4278ac:	ldp	x19, x20, [sp, #16]
  4278b0:	ldp	x21, x22, [sp, #32]
  4278b4:	ldp	x29, x30, [sp], #48
  4278b8:	ret
  4278bc:	nop

00000000004278c0 <vpath_search@@Base>:
  4278c0:	stp	x29, x30, [sp, #-80]!
  4278c4:	mov	x29, sp
  4278c8:	str	x0, [sp, #72]
  4278cc:	ldrb	w0, [x0]
  4278d0:	cmp	w0, #0x2f
  4278d4:	b.eq	4279d4 <vpath_search@@Base+0x114>  // b.none
  4278d8:	adrp	x0, 449000 <commands_started@@Base+0x170>
  4278dc:	stp	x19, x20, [sp, #16]
  4278e0:	mov	x20, x2
  4278e4:	ldr	x19, [x0, #1960]
  4278e8:	stp	x21, x22, [sp, #32]
  4278ec:	mov	x22, x1
  4278f0:	str	x23, [sp, #48]
  4278f4:	mov	x21, x3
  4278f8:	add	x23, x0, #0x7a8
  4278fc:	cbz	x19, 4279e0 <vpath_search@@Base+0x120>
  427900:	cbz	x2, 427980 <vpath_search@@Base+0xc0>
  427904:	str	wzr, [x2]
  427908:	str	wzr, [x3]
  42790c:	b	427924 <vpath_search@@Base+0x64>
  427910:	ldr	w0, [x20]
  427914:	ldr	x19, [x19]
  427918:	add	w0, w0, #0x1
  42791c:	str	w0, [x20]
  427920:	cbz	x19, 427998 <vpath_search@@Base+0xd8>
  427924:	ldp	x0, x1, [x19, #8]
  427928:	ldr	x2, [sp, #72]
  42792c:	bl	411690 <pattern_matches@@Base>
  427930:	cbz	w0, 427910 <vpath_search@@Base+0x50>
  427934:	ldp	x0, x1, [x19, #32]
  427938:	mov	x4, x21
  42793c:	ldr	x2, [sp, #72]
  427940:	mov	x3, x22
  427944:	bl	427150 <print_target_variables@@Base+0x88>
  427948:	cbz	x0, 427910 <vpath_search@@Base+0x50>
  42794c:	ldp	x19, x20, [sp, #16]
  427950:	ldp	x21, x22, [sp, #32]
  427954:	ldr	x23, [sp, #48]
  427958:	ldp	x29, x30, [sp], #80
  42795c:	ret
  427960:	ldp	x0, x1, [x19, #32]
  427964:	mov	x4, x21
  427968:	ldr	x2, [sp, #72]
  42796c:	mov	x3, x22
  427970:	bl	427150 <print_target_variables@@Base+0x88>
  427974:	cbnz	x0, 42794c <vpath_search@@Base+0x8c>
  427978:	ldr	x19, [x19]
  42797c:	cbz	x19, 427998 <vpath_search@@Base+0xd8>
  427980:	ldp	x0, x1, [x19, #8]
  427984:	ldr	x2, [sp, #72]
  427988:	bl	411690 <pattern_matches@@Base>
  42798c:	cbnz	w0, 427960 <vpath_search@@Base+0xa0>
  427990:	ldr	x19, [x19]
  427994:	cbnz	x19, 427980 <vpath_search@@Base+0xc0>
  427998:	ldr	x1, [x23, #8]
  42799c:	cbz	x1, 4279c8 <vpath_search@@Base+0x108>
  4279a0:	ldp	x0, x1, [x1, #32]
  4279a4:	mov	x4, x21
  4279a8:	ldr	x2, [sp, #72]
  4279ac:	mov	x3, x22
  4279b0:	bl	427150 <print_target_variables@@Base+0x88>
  4279b4:	ldp	x19, x20, [sp, #16]
  4279b8:	ldp	x21, x22, [sp, #32]
  4279bc:	ldr	x23, [sp, #48]
  4279c0:	ldp	x29, x30, [sp], #80
  4279c4:	ret
  4279c8:	ldp	x19, x20, [sp, #16]
  4279cc:	ldp	x21, x22, [sp, #32]
  4279d0:	ldr	x23, [sp, #48]
  4279d4:	mov	x0, #0x0                   	// #0
  4279d8:	ldp	x29, x30, [sp], #80
  4279dc:	ret
  4279e0:	ldr	x1, [x23, #8]
  4279e4:	cbz	x1, 4279c8 <vpath_search@@Base+0x108>
  4279e8:	cbz	x2, 4279a0 <vpath_search@@Base+0xe0>
  4279ec:	str	wzr, [x2]
  4279f0:	str	wzr, [x3]
  4279f4:	cbnz	x1, 4279a0 <vpath_search@@Base+0xe0>
  4279f8:	b	4279c8 <vpath_search@@Base+0x108>
  4279fc:	nop

0000000000427a00 <print_vpath_data_base@@Base>:
  427a00:	stp	x29, x30, [sp, #-80]!
  427a04:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427a08:	add	x1, x1, #0x438
  427a0c:	mov	x29, sp
  427a10:	mov	w2, #0x5                   	// #5
  427a14:	str	x25, [sp, #64]
  427a18:	adrp	x25, 449000 <commands_started@@Base+0x170>
  427a1c:	mov	x0, #0x0                   	// #0
  427a20:	stp	x19, x20, [sp, #16]
  427a24:	stp	x21, x22, [sp, #32]
  427a28:	bl	406cd0 <dcgettext@plt>
  427a2c:	bl	406ae0 <puts@plt>
  427a30:	ldr	x21, [x25, #1960]
  427a34:	cbz	x21, 427b90 <print_vpath_data_base@@Base+0x190>
  427a38:	adrp	x22, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427a3c:	add	x22, x22, #0x480
  427a40:	stp	x23, x24, [sp, #48]
  427a44:	adrp	x24, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427a48:	add	x24, x24, #0x470
  427a4c:	mov	w23, #0x0                   	// #0
  427a50:	ldr	x1, [x21, #8]
  427a54:	mov	x0, x24
  427a58:	add	w23, w23, #0x1
  427a5c:	bl	406d60 <printf@plt>
  427a60:	ldr	x3, [x21, #32]
  427a64:	ldr	x1, [x3]
  427a68:	cbz	x1, 427a98 <print_vpath_data_base@@Base+0x98>
  427a6c:	mov	w19, #0x0                   	// #0
  427a70:	add	w20, w19, #0x1
  427a74:	mov	x0, x22
  427a78:	mov	x19, x20
  427a7c:	mov	w2, #0x3a                  	// #58
  427a80:	ldr	x3, [x3, x20, lsl #3]
  427a84:	cbz	x3, 427b48 <print_vpath_data_base@@Base+0x148>
  427a88:	bl	406d60 <printf@plt>
  427a8c:	ldr	x3, [x21, #32]
  427a90:	ldr	x1, [x3, x20, lsl #3]
  427a94:	cbnz	x1, 427a70 <print_vpath_data_base@@Base+0x70>
  427a98:	ldr	x21, [x21]
  427a9c:	cbnz	x21, 427a50 <print_vpath_data_base@@Base+0x50>
  427aa0:	ldr	x0, [x25, #1960]
  427aa4:	cbz	x0, 427b8c <print_vpath_data_base@@Base+0x18c>
  427aa8:	mov	w2, #0x5                   	// #5
  427aac:	add	x25, x25, #0x7a8
  427ab0:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427ab4:	mov	x0, #0x0                   	// #0
  427ab8:	add	x1, x1, #0x488
  427abc:	bl	406cd0 <dcgettext@plt>
  427ac0:	mov	w1, w23
  427ac4:	bl	406d60 <printf@plt>
  427ac8:	ldr	x3, [x25, #8]
  427acc:	ldp	x23, x24, [sp, #48]
  427ad0:	cbz	x3, 427bb4 <print_vpath_data_base@@Base+0x1b4>
  427ad4:	mov	w2, #0x5                   	// #5
  427ad8:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427adc:	mov	x0, #0x0                   	// #0
  427ae0:	add	x1, x1, #0x4d8
  427ae4:	ldr	x21, [x3, #32]
  427ae8:	bl	406cd0 <dcgettext@plt>
  427aec:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  427af0:	ldr	x1, [x1, #440]
  427af4:	bl	406690 <fputs@plt>
  427af8:	ldr	x1, [x21]
  427afc:	cbz	x1, 427b34 <print_vpath_data_base@@Base+0x134>
  427b00:	adrp	x22, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427b04:	add	x22, x22, #0x480
  427b08:	mov	w19, #0x0                   	// #0
  427b0c:	nop
  427b10:	add	w20, w19, #0x1
  427b14:	mov	x0, x22
  427b18:	mov	x19, x20
  427b1c:	mov	w2, #0x3a                  	// #58
  427b20:	ldr	x3, [x21, x20, lsl #3]
  427b24:	cbz	x3, 427b68 <print_vpath_data_base@@Base+0x168>
  427b28:	bl	406d60 <printf@plt>
  427b2c:	ldr	x1, [x21, x20, lsl #3]
  427b30:	cbnz	x1, 427b10 <print_vpath_data_base@@Base+0x110>
  427b34:	ldp	x19, x20, [sp, #16]
  427b38:	ldp	x21, x22, [sp, #32]
  427b3c:	ldr	x25, [sp, #64]
  427b40:	ldp	x29, x30, [sp], #80
  427b44:	ret
  427b48:	mov	w2, #0xa                   	// #10
  427b4c:	bl	406d60 <printf@plt>
  427b50:	ldr	x3, [x21, #32]
  427b54:	ldr	x1, [x3, x20, lsl #3]
  427b58:	cbnz	x1, 427a70 <print_vpath_data_base@@Base+0x70>
  427b5c:	ldr	x21, [x21]
  427b60:	cbnz	x21, 427a50 <print_vpath_data_base@@Base+0x50>
  427b64:	b	427aa0 <print_vpath_data_base@@Base+0xa0>
  427b68:	mov	w2, #0xa                   	// #10
  427b6c:	bl	406d60 <printf@plt>
  427b70:	ldr	x1, [x21, x20, lsl #3]
  427b74:	cbnz	x1, 427b10 <print_vpath_data_base@@Base+0x110>
  427b78:	ldp	x19, x20, [sp, #16]
  427b7c:	ldp	x21, x22, [sp, #32]
  427b80:	ldr	x25, [sp, #64]
  427b84:	ldp	x29, x30, [sp], #80
  427b88:	ret
  427b8c:	ldp	x23, x24, [sp, #48]
  427b90:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427b94:	add	x1, x1, #0x450
  427b98:	mov	w2, #0x5                   	// #5
  427b9c:	add	x25, x25, #0x7a8
  427ba0:	mov	x0, #0x0                   	// #0
  427ba4:	bl	406cd0 <dcgettext@plt>
  427ba8:	bl	406ae0 <puts@plt>
  427bac:	ldr	x3, [x25, #8]
  427bb0:	cbnz	x3, 427ad4 <print_vpath_data_base@@Base+0xd4>
  427bb4:	mov	w2, #0x5                   	// #5
  427bb8:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427bbc:	mov	x0, #0x0                   	// #0
  427bc0:	add	x1, x1, #0x4a8
  427bc4:	bl	406cd0 <dcgettext@plt>
  427bc8:	ldp	x19, x20, [sp, #16]
  427bcc:	ldp	x21, x22, [sp, #32]
  427bd0:	ldr	x25, [sp, #64]
  427bd4:	ldp	x29, x30, [sp], #80
  427bd8:	b	406ae0 <puts@plt>
  427bdc:	nop

0000000000427be0 <jobserver_setup@@Base>:
  427be0:	stp	x29, x30, [sp, #-64]!
  427be4:	mov	x29, sp
  427be8:	stp	x19, x20, [sp, #16]
  427bec:	stp	x21, x22, [sp, #32]
  427bf0:	adrp	x22, 446000 <expanding_var@@Base+0x320>
  427bf4:	mov	w21, w0
  427bf8:	add	x19, x22, #0x180
  427bfc:	str	x23, [sp, #48]
  427c00:	b	427c14 <jobserver_setup@@Base+0x34>
  427c04:	bl	406d70 <__errno_location@plt>
  427c08:	ldr	w0, [x0]
  427c0c:	cmp	w0, #0x4
  427c10:	b.ne	427dc4 <jobserver_setup@@Base+0x1e4>  // b.any
  427c14:	mov	x0, x19
  427c18:	bl	406750 <pipe@plt>
  427c1c:	cmn	w0, #0x1
  427c20:	b.eq	427c04 <jobserver_setup@@Base+0x24>  // b.none
  427c24:	tbnz	w0, #31, 427dc4 <jobserver_setup@@Base+0x1e4>
  427c28:	ldr	w23, [x19]
  427c2c:	b	427c40 <jobserver_setup@@Base+0x60>
  427c30:	bl	406d70 <__errno_location@plt>
  427c34:	ldr	w0, [x0]
  427c38:	cmp	w0, #0x4
  427c3c:	b.ne	427c88 <jobserver_setup@@Base+0xa8>  // b.any
  427c40:	mov	w0, w23
  427c44:	mov	w1, #0x1                   	// #1
  427c48:	bl	428a48 <rpl_fcntl@@Base>
  427c4c:	cmn	w0, #0x1
  427c50:	b.eq	427c30 <jobserver_setup@@Base+0x50>  // b.none
  427c54:	tbnz	w0, #31, 427c88 <jobserver_setup@@Base+0xa8>
  427c58:	orr	w20, w0, #0x1
  427c5c:	b	427c70 <jobserver_setup@@Base+0x90>
  427c60:	bl	406d70 <__errno_location@plt>
  427c64:	ldr	w0, [x0]
  427c68:	cmp	w0, #0x4
  427c6c:	b.ne	427c88 <jobserver_setup@@Base+0xa8>  // b.any
  427c70:	mov	w2, w20
  427c74:	mov	w0, w23
  427c78:	mov	w1, #0x2                   	// #2
  427c7c:	bl	428a48 <rpl_fcntl@@Base>
  427c80:	cmn	w0, #0x1
  427c84:	b.eq	427c60 <jobserver_setup@@Base+0x80>  // b.none
  427c88:	ldr	w23, [x19, #4]
  427c8c:	b	427ca0 <jobserver_setup@@Base+0xc0>
  427c90:	bl	406d70 <__errno_location@plt>
  427c94:	ldr	w0, [x0]
  427c98:	cmp	w0, #0x4
  427c9c:	b.ne	427ce8 <jobserver_setup@@Base+0x108>  // b.any
  427ca0:	mov	w0, w23
  427ca4:	mov	w1, #0x1                   	// #1
  427ca8:	bl	428a48 <rpl_fcntl@@Base>
  427cac:	cmn	w0, #0x1
  427cb0:	b.eq	427c90 <jobserver_setup@@Base+0xb0>  // b.none
  427cb4:	tbnz	w0, #31, 427ce8 <jobserver_setup@@Base+0x108>
  427cb8:	orr	w20, w0, #0x1
  427cbc:	b	427cd0 <jobserver_setup@@Base+0xf0>
  427cc0:	bl	406d70 <__errno_location@plt>
  427cc4:	ldr	w0, [x0]
  427cc8:	cmp	w0, #0x4
  427ccc:	b.ne	427ce8 <jobserver_setup@@Base+0x108>  // b.any
  427cd0:	mov	w2, w20
  427cd4:	mov	w0, w23
  427cd8:	mov	w1, #0x2                   	// #2
  427cdc:	bl	428a48 <rpl_fcntl@@Base>
  427ce0:	cmn	w0, #0x1
  427ce4:	b.eq	427cc0 <jobserver_setup@@Base+0xe0>  // b.none
  427ce8:	add	x20, x19, #0x8
  427cec:	nop
  427cf0:	cbnz	w21, 427d08 <jobserver_setup@@Base+0x128>
  427cf4:	b	427d48 <jobserver_setup@@Base+0x168>
  427cf8:	bl	406d70 <__errno_location@plt>
  427cfc:	ldr	w0, [x0]
  427d00:	cmp	w0, #0x4
  427d04:	b.ne	427d30 <jobserver_setup@@Base+0x150>  // b.any
  427d08:	ldr	w0, [x19, #4]
  427d0c:	mov	x1, x20
  427d10:	mov	x2, #0x1                   	// #1
  427d14:	bl	406a90 <write@plt>
  427d18:	cmn	w0, #0x1
  427d1c:	b.eq	427cf8 <jobserver_setup@@Base+0x118>  // b.none
  427d20:	sub	w21, w21, #0x1
  427d24:	cmp	w0, #0x1
  427d28:	b.eq	427cf0 <jobserver_setup@@Base+0x110>  // b.none
  427d2c:	nop
  427d30:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427d34:	add	x1, x1, #0x520
  427d38:	mov	w2, #0x5                   	// #5
  427d3c:	mov	x0, #0x0                   	// #0
  427d40:	bl	406cd0 <dcgettext@plt>
  427d44:	bl	41b730 <pfatal_with_name@@Base>
  427d48:	ldr	w20, [x22, #384]
  427d4c:	b	427d60 <jobserver_setup@@Base+0x180>
  427d50:	bl	406d70 <__errno_location@plt>
  427d54:	ldr	w0, [x0]
  427d58:	cmp	w0, #0x4
  427d5c:	b.ne	427dac <jobserver_setup@@Base+0x1cc>  // b.any
  427d60:	mov	w0, w20
  427d64:	mov	w1, #0x3                   	// #3
  427d68:	bl	428a48 <rpl_fcntl@@Base>
  427d6c:	cmn	w0, #0x1
  427d70:	b.eq	427d50 <jobserver_setup@@Base+0x170>  // b.none
  427d74:	tbnz	w0, #31, 427dac <jobserver_setup@@Base+0x1cc>
  427d78:	orr	w19, w0, #0x800
  427d7c:	b	427d90 <jobserver_setup@@Base+0x1b0>
  427d80:	bl	406d70 <__errno_location@plt>
  427d84:	ldr	w0, [x0]
  427d88:	cmp	w0, #0x4
  427d8c:	b.ne	427ddc <jobserver_setup@@Base+0x1fc>  // b.any
  427d90:	mov	w2, w19
  427d94:	mov	w0, w20
  427d98:	mov	w1, #0x4                   	// #4
  427d9c:	bl	428a48 <rpl_fcntl@@Base>
  427da0:	cmn	w0, #0x1
  427da4:	b.eq	427d80 <jobserver_setup@@Base+0x1a0>  // b.none
  427da8:	tbnz	w0, #31, 427ddc <jobserver_setup@@Base+0x1fc>
  427dac:	mov	w0, #0x1                   	// #1
  427db0:	ldp	x19, x20, [sp, #16]
  427db4:	ldp	x21, x22, [sp, #32]
  427db8:	ldr	x23, [sp, #48]
  427dbc:	ldp	x29, x30, [sp], #64
  427dc0:	ret
  427dc4:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427dc8:	add	x1, x1, #0x508
  427dcc:	mov	w2, #0x5                   	// #5
  427dd0:	mov	x0, #0x0                   	// #0
  427dd4:	bl	406cd0 <dcgettext@plt>
  427dd8:	bl	41b730 <pfatal_with_name@@Base>
  427ddc:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427de0:	add	x0, x0, #0x538
  427de4:	bl	41b730 <pfatal_with_name@@Base>

0000000000427de8 <jobserver_parse_auth@@Base>:
  427de8:	stp	x29, x30, [sp, #-48]!
  427dec:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427df0:	add	x1, x1, #0x550
  427df4:	mov	x29, sp
  427df8:	stp	x19, x20, [sp, #16]
  427dfc:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  427e00:	add	x20, x19, #0x180
  427e04:	add	x3, x20, #0x4
  427e08:	mov	x2, x20
  427e0c:	str	x21, [sp, #32]
  427e10:	mov	x21, x0
  427e14:	bl	406cf0 <__isoc99_sscanf@plt>
  427e18:	cmp	w0, #0x2
  427e1c:	b.ne	427f28 <jobserver_parse_auth@@Base+0x140>  // b.any
  427e20:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  427e24:	ldr	w0, [x0, #1152]
  427e28:	tbnz	w0, #2, 427ef8 <jobserver_parse_auth@@Base+0x110>
  427e2c:	ldr	w0, [x19, #384]
  427e30:	mov	w1, #0x1                   	// #1
  427e34:	bl	428a48 <rpl_fcntl@@Base>
  427e38:	cmn	w0, #0x1
  427e3c:	b.ne	427e6c <jobserver_parse_auth@@Base+0x84>  // b.any
  427e40:	bl	406d70 <__errno_location@plt>
  427e44:	ldr	w0, [x0]
  427e48:	cmp	w0, #0x9
  427e4c:	b.ne	427f5c <jobserver_parse_auth@@Base+0x174>  // b.any
  427e50:	mvni	v0.2s, #0x0
  427e54:	mov	w0, #0x0                   	// #0
  427e58:	ldr	x21, [sp, #32]
  427e5c:	str	d0, [x19, #384]
  427e60:	ldp	x19, x20, [sp, #16]
  427e64:	ldp	x29, x30, [sp], #48
  427e68:	ret
  427e6c:	ldr	w0, [x20, #4]
  427e70:	mov	w1, #0x1                   	// #1
  427e74:	bl	428a48 <rpl_fcntl@@Base>
  427e78:	cmn	w0, #0x1
  427e7c:	b.eq	427e40 <jobserver_parse_auth@@Base+0x58>  // b.none
  427e80:	ldr	w20, [x19, #384]
  427e84:	b	427e98 <jobserver_parse_auth@@Base+0xb0>
  427e88:	bl	406d70 <__errno_location@plt>
  427e8c:	ldr	w0, [x0]
  427e90:	cmp	w0, #0x4
  427e94:	b.ne	427ee4 <jobserver_parse_auth@@Base+0xfc>  // b.any
  427e98:	mov	w0, w20
  427e9c:	mov	w1, #0x3                   	// #3
  427ea0:	bl	428a48 <rpl_fcntl@@Base>
  427ea4:	cmn	w0, #0x1
  427ea8:	b.eq	427e88 <jobserver_parse_auth@@Base+0xa0>  // b.none
  427eac:	tbnz	w0, #31, 427ee4 <jobserver_parse_auth@@Base+0xfc>
  427eb0:	orr	w19, w0, #0x800
  427eb4:	b	427ec8 <jobserver_parse_auth@@Base+0xe0>
  427eb8:	bl	406d70 <__errno_location@plt>
  427ebc:	ldr	w0, [x0]
  427ec0:	cmp	w0, #0x4
  427ec4:	b.ne	427f74 <jobserver_parse_auth@@Base+0x18c>  // b.any
  427ec8:	mov	w2, w19
  427ecc:	mov	w0, w20
  427ed0:	mov	w1, #0x4                   	// #4
  427ed4:	bl	428a48 <rpl_fcntl@@Base>
  427ed8:	cmn	w0, #0x1
  427edc:	b.eq	427eb8 <jobserver_parse_auth@@Base+0xd0>  // b.none
  427ee0:	tbnz	w0, #31, 427f74 <jobserver_parse_auth@@Base+0x18c>
  427ee4:	mov	w0, #0x1                   	// #1
  427ee8:	ldp	x19, x20, [sp, #16]
  427eec:	ldr	x21, [sp, #32]
  427ef0:	ldp	x29, x30, [sp], #48
  427ef4:	ret
  427ef8:	mov	w2, #0x5                   	// #5
  427efc:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427f00:	mov	x0, #0x0                   	// #0
  427f04:	add	x1, x1, #0x590
  427f08:	bl	406cd0 <dcgettext@plt>
  427f0c:	ldr	w1, [x19, #384]
  427f10:	ldr	w2, [x20, #4]
  427f14:	bl	406d60 <printf@plt>
  427f18:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  427f1c:	ldr	x0, [x0, #440]
  427f20:	bl	406c20 <fflush@plt>
  427f24:	b	427e2c <jobserver_parse_auth@@Base+0x44>
  427f28:	mov	x0, x21
  427f2c:	bl	406680 <strlen@plt>
  427f30:	mov	w2, #0x5                   	// #5
  427f34:	mov	x19, x0
  427f38:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427f3c:	mov	x0, #0x0                   	// #0
  427f40:	add	x1, x1, #0x558
  427f44:	bl	406cd0 <dcgettext@plt>
  427f48:	mov	x3, x21
  427f4c:	mov	x2, x0
  427f50:	mov	x1, x19
  427f54:	mov	x0, #0x0                   	// #0
  427f58:	bl	41c0a0 <fatal@@Base>
  427f5c:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427f60:	add	x1, x1, #0x5b0
  427f64:	mov	w2, #0x5                   	// #5
  427f68:	mov	x0, #0x0                   	// #0
  427f6c:	bl	406cd0 <dcgettext@plt>
  427f70:	bl	41b730 <pfatal_with_name@@Base>
  427f74:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427f78:	add	x0, x0, #0x538
  427f7c:	bl	41b730 <pfatal_with_name@@Base>

0000000000427f80 <jobserver_get_auth@@Base>:
  427f80:	stp	x29, x30, [sp, #-32]!
  427f84:	mov	x0, #0x2a                  	// #42
  427f88:	mov	x29, sp
  427f8c:	str	x19, [sp, #16]
  427f90:	bl	41ab28 <xmalloc@@Base>
  427f94:	adrp	x1, 446000 <expanding_var@@Base+0x320>
  427f98:	add	x3, x1, #0x180
  427f9c:	mov	x19, x0
  427fa0:	ldr	w2, [x1, #384]
  427fa4:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  427fa8:	ldr	w3, [x3, #4]
  427fac:	add	x1, x1, #0x550
  427fb0:	bl	406730 <sprintf@plt>
  427fb4:	mov	x0, x19
  427fb8:	ldr	x19, [sp, #16]
  427fbc:	ldp	x29, x30, [sp], #32
  427fc0:	ret
  427fc4:	nop

0000000000427fc8 <jobserver_enabled@@Base>:
  427fc8:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  427fcc:	ldr	w0, [x0, #384]
  427fd0:	mvn	w0, w0
  427fd4:	lsr	w0, w0, #31
  427fd8:	ret
  427fdc:	nop

0000000000427fe0 <jobserver_clear@@Base>:
  427fe0:	stp	x29, x30, [sp, #-32]!
  427fe4:	mov	x29, sp
  427fe8:	stp	x19, x20, [sp, #16]
  427fec:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  427ff0:	ldr	w0, [x19, #384]
  427ff4:	tbnz	w0, #31, 427ffc <jobserver_clear@@Base+0x1c>
  427ff8:	bl	406a50 <close@plt>
  427ffc:	add	x20, x19, #0x180
  428000:	ldr	w0, [x20, #4]
  428004:	tbnz	w0, #31, 42800c <jobserver_clear@@Base+0x2c>
  428008:	bl	406a50 <close@plt>
  42800c:	ldr	w0, [x20, #12]
  428010:	tbnz	w0, #31, 428018 <jobserver_clear@@Base+0x38>
  428014:	bl	406a50 <close@plt>
  428018:	mvni	v0.2s, #0x0
  42801c:	mov	w0, #0xffffffff            	// #-1
  428020:	str	w0, [x20, #12]
  428024:	str	d0, [x19, #384]
  428028:	ldp	x19, x20, [sp, #16]
  42802c:	ldp	x29, x30, [sp], #32
  428030:	ret
  428034:	nop

0000000000428038 <jobserver_release@@Base>:
  428038:	stp	x29, x30, [sp, #-48]!
  42803c:	mov	x29, sp
  428040:	stp	x19, x20, [sp, #16]
  428044:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  428048:	add	x19, x19, #0x180
  42804c:	add	x20, x19, #0x8
  428050:	str	x21, [sp, #32]
  428054:	mov	w21, w0
  428058:	b	42806c <jobserver_release@@Base+0x34>
  42805c:	bl	406d70 <__errno_location@plt>
  428060:	ldr	w1, [x0]
  428064:	cmp	w1, #0x4
  428068:	b.ne	42809c <jobserver_release@@Base+0x64>  // b.any
  42806c:	ldr	w0, [x19, #4]
  428070:	mov	x1, x20
  428074:	mov	x2, #0x1                   	// #1
  428078:	bl	406a90 <write@plt>
  42807c:	cmn	w0, #0x1
  428080:	b.eq	42805c <jobserver_release@@Base+0x24>  // b.none
  428084:	cmp	w0, #0x1
  428088:	b.ne	42809c <jobserver_release@@Base+0x64>  // b.any
  42808c:	ldp	x19, x20, [sp, #16]
  428090:	ldr	x21, [sp, #32]
  428094:	ldp	x29, x30, [sp], #48
  428098:	ret
  42809c:	cbnz	w21, 4280c0 <jobserver_release@@Base+0x88>
  4280a0:	ldp	x19, x20, [sp, #16]
  4280a4:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x40e0>
  4280a8:	ldr	x21, [sp, #32]
  4280ac:	add	x1, x1, #0xed0
  4280b0:	ldp	x29, x30, [sp], #48
  4280b4:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  4280b8:	add	x0, x0, #0x5d8
  4280bc:	b	41bf78 <perror_with_name@@Base>
  4280c0:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  4280c4:	add	x1, x1, #0x5c8
  4280c8:	mov	w2, #0x5                   	// #5
  4280cc:	mov	x0, #0x0                   	// #0
  4280d0:	bl	406cd0 <dcgettext@plt>
  4280d4:	bl	41b730 <pfatal_with_name@@Base>

00000000004280d8 <jobserver_acquire_all@@Base>:
  4280d8:	stp	x29, x30, [sp, #-64]!
  4280dc:	mov	x29, sp
  4280e0:	stp	x19, x20, [sp, #16]
  4280e4:	adrp	x20, 446000 <expanding_var@@Base+0x320>
  4280e8:	str	x21, [sp, #32]
  4280ec:	ldr	w21, [x20, #384]
  4280f0:	b	428104 <jobserver_acquire_all@@Base+0x2c>
  4280f4:	bl	406d70 <__errno_location@plt>
  4280f8:	ldr	w0, [x0]
  4280fc:	cmp	w0, #0x4
  428100:	b.ne	428150 <jobserver_acquire_all@@Base+0x78>  // b.any
  428104:	mov	w0, w21
  428108:	mov	w1, #0x3                   	// #3
  42810c:	bl	428a48 <rpl_fcntl@@Base>
  428110:	cmn	w0, #0x1
  428114:	b.eq	4280f4 <jobserver_acquire_all@@Base+0x1c>  // b.none
  428118:	tbnz	w0, #31, 428150 <jobserver_acquire_all@@Base+0x78>
  42811c:	and	w19, w0, #0xfffff7ff
  428120:	b	428134 <jobserver_acquire_all@@Base+0x5c>
  428124:	bl	406d70 <__errno_location@plt>
  428128:	ldr	w0, [x0]
  42812c:	cmp	w0, #0x4
  428130:	b.ne	4281c8 <jobserver_acquire_all@@Base+0xf0>  // b.any
  428134:	mov	w2, w19
  428138:	mov	w0, w21
  42813c:	mov	w1, #0x4                   	// #4
  428140:	bl	428a48 <rpl_fcntl@@Base>
  428144:	cmn	w0, #0x1
  428148:	b.eq	428124 <jobserver_acquire_all@@Base+0x4c>  // b.none
  42814c:	tbnz	w0, #31, 4281c8 <jobserver_acquire_all@@Base+0xf0>
  428150:	add	x20, x20, #0x180
  428154:	mov	w19, #0x0                   	// #0
  428158:	ldr	w0, [x20, #4]
  42815c:	bl	406a50 <close@plt>
  428160:	mov	w0, #0xffffffff            	// #-1
  428164:	str	w0, [x20, #4]
  428168:	ldr	w0, [x20]
  42816c:	add	x1, sp, #0x3f
  428170:	mov	x2, #0x1                   	// #1
  428174:	bl	406c80 <read@plt>
  428178:	cmn	w0, #0x1
  42817c:	b.eq	4281a4 <jobserver_acquire_all@@Base+0xcc>  // b.none
  428180:	cmp	w0, #0x1
  428184:	b.ne	4281b4 <jobserver_acquire_all@@Base+0xdc>  // b.any
  428188:	ldr	w0, [x20]
  42818c:	add	x1, sp, #0x3f
  428190:	mov	x2, #0x1                   	// #1
  428194:	add	w19, w19, #0x1
  428198:	bl	406c80 <read@plt>
  42819c:	cmn	w0, #0x1
  4281a0:	b.ne	428180 <jobserver_acquire_all@@Base+0xa8>  // b.any
  4281a4:	bl	406d70 <__errno_location@plt>
  4281a8:	ldr	w0, [x0]
  4281ac:	cmp	w0, #0x4
  4281b0:	b.eq	428168 <jobserver_acquire_all@@Base+0x90>  // b.none
  4281b4:	mov	w0, w19
  4281b8:	ldp	x19, x20, [sp, #16]
  4281bc:	ldr	x21, [sp, #32]
  4281c0:	ldp	x29, x30, [sp], #64
  4281c4:	ret
  4281c8:	adrp	x0, 42f000 <_IO_stdin_used@@Base+0x60e0>
  4281cc:	add	x0, x0, #0x538
  4281d0:	bl	41b730 <pfatal_with_name@@Base>
  4281d4:	nop

00000000004281d8 <jobserver_pre_child@@Base>:
  4281d8:	cbz	w0, 4282c8 <jobserver_pre_child@@Base+0xf0>
  4281dc:	stp	x29, x30, [sp, #-48]!
  4281e0:	mov	x29, sp
  4281e4:	str	x21, [sp, #32]
  4281e8:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  4281ec:	stp	x19, x20, [sp, #16]
  4281f0:	ldr	w20, [x21, #384]
  4281f4:	tbz	w20, #31, 428218 <jobserver_pre_child@@Base+0x40>
  4281f8:	ldp	x19, x20, [sp, #16]
  4281fc:	ldr	x21, [sp, #32]
  428200:	ldp	x29, x30, [sp], #48
  428204:	ret
  428208:	bl	406d70 <__errno_location@plt>
  42820c:	ldr	w0, [x0]
  428210:	cmp	w0, #0x4
  428214:	b.ne	428260 <jobserver_pre_child@@Base+0x88>  // b.any
  428218:	mov	w0, w20
  42821c:	mov	w1, #0x1                   	// #1
  428220:	bl	428a48 <rpl_fcntl@@Base>
  428224:	cmn	w0, #0x1
  428228:	b.eq	428208 <jobserver_pre_child@@Base+0x30>  // b.none
  42822c:	tbnz	w0, #31, 428260 <jobserver_pre_child@@Base+0x88>
  428230:	and	w19, w0, #0xfffffffe
  428234:	b	428248 <jobserver_pre_child@@Base+0x70>
  428238:	bl	406d70 <__errno_location@plt>
  42823c:	ldr	w0, [x0]
  428240:	cmp	w0, #0x4
  428244:	b.ne	428260 <jobserver_pre_child@@Base+0x88>  // b.any
  428248:	mov	w2, w19
  42824c:	mov	w0, w20
  428250:	mov	w1, #0x2                   	// #2
  428254:	bl	428a48 <rpl_fcntl@@Base>
  428258:	cmn	w0, #0x1
  42825c:	b.eq	428238 <jobserver_pre_child@@Base+0x60>  // b.none
  428260:	add	x21, x21, #0x180
  428264:	ldr	w20, [x21, #4]
  428268:	b	42827c <jobserver_pre_child@@Base+0xa4>
  42826c:	bl	406d70 <__errno_location@plt>
  428270:	ldr	w0, [x0]
  428274:	cmp	w0, #0x4
  428278:	b.ne	4281f8 <jobserver_pre_child@@Base+0x20>  // b.any
  42827c:	mov	w0, w20
  428280:	mov	w1, #0x1                   	// #1
  428284:	bl	428a48 <rpl_fcntl@@Base>
  428288:	cmn	w0, #0x1
  42828c:	b.eq	42826c <jobserver_pre_child@@Base+0x94>  // b.none
  428290:	tbnz	w0, #31, 4281f8 <jobserver_pre_child@@Base+0x20>
  428294:	and	w19, w0, #0xfffffffe
  428298:	b	4282ac <jobserver_pre_child@@Base+0xd4>
  42829c:	bl	406d70 <__errno_location@plt>
  4282a0:	ldr	w0, [x0]
  4282a4:	cmp	w0, #0x4
  4282a8:	b.ne	4281f8 <jobserver_pre_child@@Base+0x20>  // b.any
  4282ac:	mov	w2, w19
  4282b0:	mov	w0, w20
  4282b4:	mov	w1, #0x2                   	// #2
  4282b8:	bl	428a48 <rpl_fcntl@@Base>
  4282bc:	cmn	w0, #0x1
  4282c0:	b.eq	42829c <jobserver_pre_child@@Base+0xc4>  // b.none
  4282c4:	b	4281f8 <jobserver_pre_child@@Base+0x20>
  4282c8:	ret
  4282cc:	nop

00000000004282d0 <jobserver_post_child@@Base>:
  4282d0:	cbz	w0, 4283c0 <jobserver_post_child@@Base+0xf0>
  4282d4:	stp	x29, x30, [sp, #-48]!
  4282d8:	mov	x29, sp
  4282dc:	str	x21, [sp, #32]
  4282e0:	adrp	x21, 446000 <expanding_var@@Base+0x320>
  4282e4:	stp	x19, x20, [sp, #16]
  4282e8:	ldr	w20, [x21, #384]
  4282ec:	tbz	w20, #31, 428310 <jobserver_post_child@@Base+0x40>
  4282f0:	ldp	x19, x20, [sp, #16]
  4282f4:	ldr	x21, [sp, #32]
  4282f8:	ldp	x29, x30, [sp], #48
  4282fc:	ret
  428300:	bl	406d70 <__errno_location@plt>
  428304:	ldr	w0, [x0]
  428308:	cmp	w0, #0x4
  42830c:	b.ne	428358 <jobserver_post_child@@Base+0x88>  // b.any
  428310:	mov	w0, w20
  428314:	mov	w1, #0x1                   	// #1
  428318:	bl	428a48 <rpl_fcntl@@Base>
  42831c:	cmn	w0, #0x1
  428320:	b.eq	428300 <jobserver_post_child@@Base+0x30>  // b.none
  428324:	tbnz	w0, #31, 428358 <jobserver_post_child@@Base+0x88>
  428328:	orr	w19, w0, #0x1
  42832c:	b	428340 <jobserver_post_child@@Base+0x70>
  428330:	bl	406d70 <__errno_location@plt>
  428334:	ldr	w0, [x0]
  428338:	cmp	w0, #0x4
  42833c:	b.ne	428358 <jobserver_post_child@@Base+0x88>  // b.any
  428340:	mov	w2, w19
  428344:	mov	w0, w20
  428348:	mov	w1, #0x2                   	// #2
  42834c:	bl	428a48 <rpl_fcntl@@Base>
  428350:	cmn	w0, #0x1
  428354:	b.eq	428330 <jobserver_post_child@@Base+0x60>  // b.none
  428358:	add	x21, x21, #0x180
  42835c:	ldr	w20, [x21, #4]
  428360:	b	428374 <jobserver_post_child@@Base+0xa4>
  428364:	bl	406d70 <__errno_location@plt>
  428368:	ldr	w0, [x0]
  42836c:	cmp	w0, #0x4
  428370:	b.ne	4282f0 <jobserver_post_child@@Base+0x20>  // b.any
  428374:	mov	w0, w20
  428378:	mov	w1, #0x1                   	// #1
  42837c:	bl	428a48 <rpl_fcntl@@Base>
  428380:	cmn	w0, #0x1
  428384:	b.eq	428364 <jobserver_post_child@@Base+0x94>  // b.none
  428388:	tbnz	w0, #31, 4282f0 <jobserver_post_child@@Base+0x20>
  42838c:	orr	w19, w0, #0x1
  428390:	b	4283a4 <jobserver_post_child@@Base+0xd4>
  428394:	bl	406d70 <__errno_location@plt>
  428398:	ldr	w0, [x0]
  42839c:	cmp	w0, #0x4
  4283a0:	b.ne	4282f0 <jobserver_post_child@@Base+0x20>  // b.any
  4283a4:	mov	w2, w19
  4283a8:	mov	w0, w20
  4283ac:	mov	w1, #0x2                   	// #2
  4283b0:	bl	428a48 <rpl_fcntl@@Base>
  4283b4:	cmn	w0, #0x1
  4283b8:	b.eq	428394 <jobserver_post_child@@Base+0xc4>  // b.none
  4283bc:	b	4282f0 <jobserver_post_child@@Base+0x20>
  4283c0:	ret
  4283c4:	nop

00000000004283c8 <jobserver_signal@@Base>:
  4283c8:	stp	x29, x30, [sp, #-32]!
  4283cc:	mov	x29, sp
  4283d0:	str	x19, [sp, #16]
  4283d4:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  4283d8:	add	x19, x19, #0x180
  4283dc:	ldr	w0, [x19, #12]
  4283e0:	tbnz	w0, #31, 4283f0 <jobserver_signal@@Base+0x28>
  4283e4:	bl	406a50 <close@plt>
  4283e8:	mov	w0, #0xffffffff            	// #-1
  4283ec:	str	w0, [x19, #12]
  4283f0:	ldr	x19, [sp, #16]
  4283f4:	ldp	x29, x30, [sp], #32
  4283f8:	ret
  4283fc:	nop

0000000000428400 <jobserver_pre_acquire@@Base>:
  428400:	ret
  428404:	nop

0000000000428408 <jobserver_acquire@@Base>:
  428408:	stp	x29, x30, [sp, #-336]!
  42840c:	mov	x29, sp
  428410:	stp	x19, x20, [sp, #16]
  428414:	mov	w19, w0
  428418:	add	x0, sp, #0xd0
  42841c:	stp	x21, x22, [sp, #32]
  428420:	mov	x21, #0x0                   	// #0
  428424:	bl	406910 <sigemptyset@plt>
  428428:	cbz	w19, 42843c <jobserver_acquire@@Base+0x34>
  42842c:	adrp	x0, 42e000 <_IO_stdin_used@@Base+0x50e0>
  428430:	add	x21, sp, #0x40
  428434:	ldr	q0, [x0, #1840]
  428438:	str	q0, [sp, #64]
  42843c:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  428440:	add	x20, sp, #0x50
  428444:	add	x19, x19, #0x180
  428448:	mov	x22, #0x1                   	// #1
  42844c:	nop
  428450:	ldr	w0, [x19]
  428454:	add	x5, sp, #0xd0
  428458:	stp	xzr, xzr, [sp, #80]
  42845c:	mov	x4, x21
  428460:	cmp	w0, #0x0
  428464:	add	w7, w0, #0x3f
  428468:	stp	xzr, xzr, [sp, #96]
  42846c:	csel	w7, w7, w0, lt  // lt = tstop
  428470:	stp	xzr, xzr, [sp, #112]
  428474:	negs	w6, w0
  428478:	asr	w7, w7, #6
  42847c:	stp	xzr, xzr, [sp, #128]
  428480:	and	w1, w0, #0x3f
  428484:	sxtw	x7, w7
  428488:	stp	xzr, xzr, [sp, #144]
  42848c:	and	w6, w6, #0x3f
  428490:	csneg	w6, w1, w6, mi  // mi = first
  428494:	stp	xzr, xzr, [sp, #160]
  428498:	add	w0, w0, #0x1
  42849c:	lsl	x6, x22, x6
  4284a0:	stp	xzr, xzr, [sp, #176]
  4284a4:	mov	x1, x20
  4284a8:	mov	x3, #0x0                   	// #0
  4284ac:	stp	xzr, xzr, [sp, #192]
  4284b0:	mov	x2, #0x0                   	// #0
  4284b4:	ldr	x8, [x20, x7, lsl #3]
  4284b8:	orr	x6, x6, x8
  4284bc:	str	x6, [x20, x7, lsl #3]
  4284c0:	bl	4069c0 <pselect@plt>
  4284c4:	cmp	w0, #0x0
  4284c8:	b.lt	42852c <jobserver_acquire@@Base+0x124>  // b.tstop
  4284cc:	b.ne	4284e4 <jobserver_acquire@@Base+0xdc>  // b.any
  4284d0:	b	428554 <jobserver_acquire@@Base+0x14c>
  4284d4:	bl	406d70 <__errno_location@plt>
  4284d8:	ldr	w0, [x0]
  4284dc:	cmp	w0, #0x4
  4284e0:	b.ne	42850c <jobserver_acquire@@Base+0x104>  // b.any
  4284e4:	ldr	w0, [x19]
  4284e8:	add	x1, sp, #0x3f
  4284ec:	mov	x2, #0x1                   	// #1
  4284f0:	bl	406c80 <read@plt>
  4284f4:	cmn	w0, #0x1
  4284f8:	b.eq	4284d4 <jobserver_acquire@@Base+0xcc>  // b.none
  4284fc:	cmp	w0, #0x0
  428500:	b.ge	428588 <jobserver_acquire@@Base+0x180>  // b.tcont
  428504:	bl	406d70 <__errno_location@plt>
  428508:	ldr	w0, [x0]
  42850c:	cmp	w0, #0xb
  428510:	b.eq	428450 <jobserver_acquire@@Base+0x48>  // b.none
  428514:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  428518:	add	x1, x1, #0x610
  42851c:	mov	w2, #0x5                   	// #5
  428520:	mov	x0, #0x0                   	// #0
  428524:	bl	406cd0 <dcgettext@plt>
  428528:	bl	41b730 <pfatal_with_name@@Base>
  42852c:	bl	406d70 <__errno_location@plt>
  428530:	mov	x1, x0
  428534:	mov	w0, #0x0                   	// #0
  428538:	ldr	w1, [x1]
  42853c:	cmp	w1, #0x4
  428540:	b.ne	428568 <jobserver_acquire@@Base+0x160>  // b.any
  428544:	ldp	x19, x20, [sp, #16]
  428548:	ldp	x21, x22, [sp, #32]
  42854c:	ldp	x29, x30, [sp], #336
  428550:	ret
  428554:	mov	w0, #0x0                   	// #0
  428558:	ldp	x19, x20, [sp, #16]
  42855c:	ldp	x21, x22, [sp, #32]
  428560:	ldp	x29, x30, [sp], #336
  428564:	ret
  428568:	cmp	w1, #0x9
  42856c:	b.eq	42859c <jobserver_acquire@@Base+0x194>  // b.none
  428570:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  428574:	add	x1, x1, #0x5f8
  428578:	mov	w2, #0x5                   	// #5
  42857c:	mov	x0, #0x0                   	// #0
  428580:	bl	406cd0 <dcgettext@plt>
  428584:	bl	41b730 <pfatal_with_name@@Base>
  428588:	cset	w0, gt
  42858c:	ldp	x19, x20, [sp, #16]
  428590:	ldp	x21, x22, [sp, #32]
  428594:	ldp	x29, x30, [sp], #336
  428598:	ret
  42859c:	mov	w2, #0x5                   	// #5
  4285a0:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  4285a4:	mov	x0, #0x0                   	// #0
  4285a8:	add	x1, x1, #0x5e0
  4285ac:	bl	406cd0 <dcgettext@plt>
  4285b0:	mov	x2, x0
  4285b4:	mov	x1, #0x0                   	// #0
  4285b8:	mov	x0, #0x0                   	// #0
  4285bc:	bl	41c0a0 <fatal@@Base>

00000000004285c0 <get_bad_stdin@@Base>:
  4285c0:	stp	x29, x30, [sp, #-64]!
  4285c4:	mov	x29, sp
  4285c8:	stp	x19, x20, [sp, #16]
  4285cc:	adrp	x19, 446000 <expanding_var@@Base+0x320>
  4285d0:	add	x19, x19, #0x180
  4285d4:	ldr	w20, [x19, #16]
  4285d8:	cmn	w20, #0x1
  4285dc:	b.eq	4285f0 <get_bad_stdin@@Base+0x30>  // b.none
  4285e0:	mov	w0, w20
  4285e4:	ldp	x19, x20, [sp, #16]
  4285e8:	ldp	x29, x30, [sp], #64
  4285ec:	ret
  4285f0:	add	x0, sp, #0x38
  4285f4:	bl	406750 <pipe@plt>
  4285f8:	cbnz	w0, 4285e0 <get_bad_stdin@@Base+0x20>
  4285fc:	ldr	w0, [sp, #60]
  428600:	str	x21, [sp, #32]
  428604:	bl	406a50 <close@plt>
  428608:	ldr	w21, [sp, #56]
  42860c:	str	w21, [x19, #16]
  428610:	b	428624 <get_bad_stdin@@Base+0x64>
  428614:	bl	406d70 <__errno_location@plt>
  428618:	ldr	w0, [x0]
  42861c:	cmp	w0, #0x4
  428620:	b.ne	42866c <get_bad_stdin@@Base+0xac>  // b.any
  428624:	mov	w0, w21
  428628:	mov	w1, #0x1                   	// #1
  42862c:	bl	428a48 <rpl_fcntl@@Base>
  428630:	cmn	w0, #0x1
  428634:	b.eq	428614 <get_bad_stdin@@Base+0x54>  // b.none
  428638:	tbnz	w0, #31, 42866c <get_bad_stdin@@Base+0xac>
  42863c:	orr	w20, w0, #0x1
  428640:	b	428654 <get_bad_stdin@@Base+0x94>
  428644:	bl	406d70 <__errno_location@plt>
  428648:	ldr	w0, [x0]
  42864c:	cmp	w0, #0x4
  428650:	b.ne	42866c <get_bad_stdin@@Base+0xac>  // b.any
  428654:	mov	w2, w20
  428658:	mov	w0, w21
  42865c:	mov	w1, #0x2                   	// #2
  428660:	bl	428a48 <rpl_fcntl@@Base>
  428664:	cmn	w0, #0x1
  428668:	b.eq	428644 <get_bad_stdin@@Base+0x84>  // b.none
  42866c:	ldr	w20, [x19, #16]
  428670:	ldr	x21, [sp, #32]
  428674:	b	4285e0 <get_bad_stdin@@Base+0x20>

0000000000428678 <fd_inherit@@Base>:
  428678:	stp	x29, x30, [sp, #-32]!
  42867c:	mov	x29, sp
  428680:	stp	x19, x20, [sp, #16]
  428684:	mov	w20, w0
  428688:	b	42869c <fd_inherit@@Base+0x24>
  42868c:	bl	406d70 <__errno_location@plt>
  428690:	ldr	w0, [x0]
  428694:	cmp	w0, #0x4
  428698:	b.ne	4286e4 <fd_inherit@@Base+0x6c>  // b.any
  42869c:	mov	w0, w20
  4286a0:	mov	w1, #0x1                   	// #1
  4286a4:	bl	428a48 <rpl_fcntl@@Base>
  4286a8:	cmn	w0, #0x1
  4286ac:	b.eq	42868c <fd_inherit@@Base+0x14>  // b.none
  4286b0:	tbnz	w0, #31, 4286e4 <fd_inherit@@Base+0x6c>
  4286b4:	and	w19, w0, #0xfffffffe
  4286b8:	b	4286cc <fd_inherit@@Base+0x54>
  4286bc:	bl	406d70 <__errno_location@plt>
  4286c0:	ldr	w0, [x0]
  4286c4:	cmp	w0, #0x4
  4286c8:	b.ne	4286e4 <fd_inherit@@Base+0x6c>  // b.any
  4286cc:	mov	w2, w19
  4286d0:	mov	w0, w20
  4286d4:	mov	w1, #0x2                   	// #2
  4286d8:	bl	428a48 <rpl_fcntl@@Base>
  4286dc:	cmn	w0, #0x1
  4286e0:	b.eq	4286bc <fd_inherit@@Base+0x44>  // b.none
  4286e4:	ldp	x19, x20, [sp, #16]
  4286e8:	ldp	x29, x30, [sp], #32
  4286ec:	ret

00000000004286f0 <fd_noinherit@@Base>:
  4286f0:	stp	x29, x30, [sp, #-32]!
  4286f4:	mov	x29, sp
  4286f8:	stp	x19, x20, [sp, #16]
  4286fc:	mov	w20, w0
  428700:	b	428714 <fd_noinherit@@Base+0x24>
  428704:	bl	406d70 <__errno_location@plt>
  428708:	ldr	w0, [x0]
  42870c:	cmp	w0, #0x4
  428710:	b.ne	42875c <fd_noinherit@@Base+0x6c>  // b.any
  428714:	mov	w0, w20
  428718:	mov	w1, #0x1                   	// #1
  42871c:	bl	428a48 <rpl_fcntl@@Base>
  428720:	cmn	w0, #0x1
  428724:	b.eq	428704 <fd_noinherit@@Base+0x14>  // b.none
  428728:	tbnz	w0, #31, 42875c <fd_noinherit@@Base+0x6c>
  42872c:	orr	w19, w0, #0x1
  428730:	b	428744 <fd_noinherit@@Base+0x54>
  428734:	bl	406d70 <__errno_location@plt>
  428738:	ldr	w0, [x0]
  42873c:	cmp	w0, #0x4
  428740:	b.ne	42875c <fd_noinherit@@Base+0x6c>  // b.any
  428744:	mov	w2, w19
  428748:	mov	w0, w20
  42874c:	mov	w1, #0x2                   	// #2
  428750:	bl	428a48 <rpl_fcntl@@Base>
  428754:	cmn	w0, #0x1
  428758:	b.eq	428734 <fd_noinherit@@Base+0x44>  // b.none
  42875c:	ldp	x19, x20, [sp, #16]
  428760:	ldp	x29, x30, [sp], #32
  428764:	ret

0000000000428768 <remote_setup@@Base>:
  428768:	ret
  42876c:	nop

0000000000428770 <remote_cleanup@@Base>:
  428770:	ret
  428774:	nop

0000000000428778 <start_remote_job_p@@Base>:
  428778:	mov	w0, #0x0                   	// #0
  42877c:	ret

0000000000428780 <start_remote_job@@Base>:
  428780:	mov	w0, #0xffffffff            	// #-1
  428784:	ret

0000000000428788 <remote_status@@Base>:
  428788:	stp	x29, x30, [sp, #-16]!
  42878c:	mov	x29, sp
  428790:	bl	406d70 <__errno_location@plt>
  428794:	mov	x1, x0
  428798:	mov	w2, #0xa                   	// #10
  42879c:	mov	w0, #0xffffffff            	// #-1
  4287a0:	str	w2, [x1]
  4287a4:	ldp	x29, x30, [sp], #16
  4287a8:	ret
  4287ac:	nop

00000000004287b0 <block_remote_children@@Base>:
  4287b0:	ret
  4287b4:	nop

00000000004287b8 <unblock_remote_children@@Base>:
  4287b8:	ret
  4287bc:	nop

00000000004287c0 <remote_kill@@Base>:
  4287c0:	mov	w0, #0xffffffff            	// #-1
  4287c4:	ret

00000000004287c8 <find_in_given_path@@Base>:
  4287c8:	stp	x29, x30, [sp, #-96]!
  4287cc:	mov	x29, sp
  4287d0:	stp	x23, x24, [sp, #48]
  4287d4:	mov	x23, x0
  4287d8:	mov	x0, x1
  4287dc:	stp	x21, x22, [sp, #32]
  4287e0:	ldrb	w3, [x23]
  4287e4:	cbz	w3, 428868 <find_in_given_path@@Base+0xa0>
  4287e8:	and	w2, w2, #0xff
  4287ec:	mov	x4, x23
  4287f0:	b	4287fc <find_in_given_path@@Base+0x34>
  4287f4:	ldrb	w3, [x4, #1]!
  4287f8:	cbz	w3, 428868 <find_in_given_path@@Base+0xa0>
  4287fc:	cmp	w3, #0x2f
  428800:	b.ne	4287f4 <find_in_given_path@@Base+0x2c>  // b.any
  428804:	mov	x21, x23
  428808:	cbnz	w2, 428854 <find_in_given_path@@Base+0x8c>
  42880c:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x40e0>
  428810:	add	x2, x2, #0xed0
  428814:	mov	x1, x21
  428818:	mov	x0, x2
  42881c:	bl	428a28 <xconcatenated_filename@@Base>
  428820:	mov	x21, x0
  428824:	mov	w1, #0x1                   	// #1
  428828:	bl	406810 <eaccess@plt>
  42882c:	cbz	w0, 428a08 <find_in_given_path@@Base+0x240>
  428830:	stp	x19, x20, [sp, #16]
  428834:	bl	406d70 <__errno_location@plt>
  428838:	mov	x19, x0
  42883c:	mov	x0, x21
  428840:	mov	x21, #0x0                   	// #0
  428844:	ldr	w20, [x19]
  428848:	bl	406b90 <free@plt>
  42884c:	str	w20, [x19]
  428850:	ldp	x19, x20, [sp, #16]
  428854:	mov	x0, x21
  428858:	ldp	x21, x22, [sp, #32]
  42885c:	ldp	x23, x24, [sp, #48]
  428860:	ldp	x29, x30, [sp], #96
  428864:	ret
  428868:	cmp	x0, #0x0
  42886c:	adrp	x24, 42d000 <_IO_stdin_used@@Base+0x40e0>
  428870:	add	x24, x24, #0xed0
  428874:	stp	x19, x20, [sp, #16]
  428878:	csel	x1, x0, x24, ne  // ne = any
  42887c:	csel	x24, x24, x1, ne  // ne = any
  428880:	mov	x0, x1
  428884:	stp	x25, x26, [sp, #64]
  428888:	adrp	x25, 42a000 <_IO_stdin_used@@Base+0x10e0>
  42888c:	mov	w26, #0x2                   	// #2
  428890:	stp	x27, x28, [sp, #80]
  428894:	bl	41abb0 <xstrdup@@Base>
  428898:	ldrb	w19, [x0]
  42889c:	mov	x27, x0
  4288a0:	add	x25, x25, #0x690
  4288a4:	cmp	w19, #0x3a
  4288a8:	mov	x20, x0
  4288ac:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  4288b0:	b.eq	42892c <find_in_given_path@@Base+0x164>  // b.none
  4288b4:	nop
  4288b8:	ldrb	w19, [x20, #1]!
  4288bc:	cmp	w19, #0x3a
  4288c0:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  4288c4:	b.ne	4288b8 <find_in_given_path@@Base+0xf0>  // b.any
  4288c8:	cmp	x0, x20
  4288cc:	mov	x2, x24
  4288d0:	strb	wzr, [x20]
  4288d4:	mov	x1, x23
  4288d8:	csel	x0, x25, x0, eq  // eq = none
  4288dc:	bl	428a28 <xconcatenated_filename@@Base>
  4288e0:	mov	x21, x0
  4288e4:	mov	w1, #0x1                   	// #1
  4288e8:	bl	406810 <eaccess@plt>
  4288ec:	cbz	w0, 428950 <find_in_given_path@@Base+0x188>
  4288f0:	bl	406d70 <__errno_location@plt>
  4288f4:	mov	x22, x0
  4288f8:	mov	x0, x21
  4288fc:	ldr	w28, [x22]
  428900:	cmp	w28, #0x2
  428904:	b.eq	428988 <find_in_given_path@@Base+0x1c0>  // b.none
  428908:	bl	406b90 <free@plt>
  42890c:	cbz	w19, 428994 <find_in_given_path@@Base+0x1cc>
  428910:	mov	w26, w28
  428914:	ldrb	w19, [x20, #1]
  428918:	add	x0, x20, #0x1
  42891c:	mov	x20, x0
  428920:	cmp	w19, #0x3a
  428924:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  428928:	b.ne	4288b8 <find_in_given_path@@Base+0xf0>  // b.any
  42892c:	mov	x2, x24
  428930:	strb	wzr, [x0]
  428934:	mov	x1, x23
  428938:	mov	x0, x25
  42893c:	bl	428a28 <xconcatenated_filename@@Base>
  428940:	mov	x21, x0
  428944:	mov	w1, #0x1                   	// #1
  428948:	bl	406810 <eaccess@plt>
  42894c:	cbnz	w0, 4288f0 <find_in_given_path@@Base+0x128>
  428950:	mov	x1, x23
  428954:	mov	x0, x21
  428958:	bl	406b40 <strcmp@plt>
  42895c:	cbz	w0, 4289c4 <find_in_given_path@@Base+0x1fc>
  428960:	mov	x0, x27
  428964:	bl	406b90 <free@plt>
  428968:	mov	x0, x21
  42896c:	ldp	x19, x20, [sp, #16]
  428970:	ldp	x21, x22, [sp, #32]
  428974:	ldp	x23, x24, [sp, #48]
  428978:	ldp	x25, x26, [sp, #64]
  42897c:	ldp	x27, x28, [sp, #80]
  428980:	ldp	x29, x30, [sp], #96
  428984:	ret
  428988:	bl	406b90 <free@plt>
  42898c:	cbnz	w19, 428914 <find_in_given_path@@Base+0x14c>
  428990:	mov	w28, w26
  428994:	mov	x0, x27
  428998:	bl	406b90 <free@plt>
  42899c:	ldp	x19, x20, [sp, #16]
  4289a0:	mov	x21, #0x0                   	// #0
  4289a4:	ldp	x25, x26, [sp, #64]
  4289a8:	str	w28, [x22]
  4289ac:	mov	x0, x21
  4289b0:	ldp	x21, x22, [sp, #32]
  4289b4:	ldp	x23, x24, [sp, #48]
  4289b8:	ldp	x27, x28, [sp, #80]
  4289bc:	ldp	x29, x30, [sp], #96
  4289c0:	ret
  4289c4:	mov	x0, x21
  4289c8:	bl	406b90 <free@plt>
  4289cc:	mov	x0, x23
  4289d0:	bl	406680 <strlen@plt>
  4289d4:	add	x0, x0, #0x3
  4289d8:	bl	41ab28 <xmalloc@@Base>
  4289dc:	mov	x21, x0
  4289e0:	mov	w1, #0x2f2e                	// #12078
  4289e4:	mov	x19, x21
  4289e8:	mov	x0, x23
  4289ec:	strh	w1, [x19], #2
  4289f0:	bl	406680 <strlen@plt>
  4289f4:	add	x2, x0, #0x1
  4289f8:	mov	x1, x23
  4289fc:	mov	x0, x19
  428a00:	bl	406640 <memcpy@plt>
  428a04:	b	428960 <find_in_given_path@@Base+0x198>
  428a08:	mov	x1, x23
  428a0c:	mov	x0, x21
  428a10:	bl	406b40 <strcmp@plt>
  428a14:	cbnz	w0, 428854 <find_in_given_path@@Base+0x8c>
  428a18:	mov	x0, x21
  428a1c:	mov	x21, x23
  428a20:	bl	406b90 <free@plt>
  428a24:	b	428854 <find_in_given_path@@Base+0x8c>

0000000000428a28 <xconcatenated_filename@@Base>:
  428a28:	stp	x29, x30, [sp, #-16]!
  428a2c:	mov	x29, sp
  428a30:	bl	428ca0 <concatenated_filename@@Base>
  428a34:	cbz	x0, 428a40 <xconcatenated_filename@@Base+0x18>
  428a38:	ldp	x29, x30, [sp], #16
  428a3c:	ret
  428a40:	bl	428e08 <xalloc_die@@Base>
  428a44:	nop

0000000000428a48 <rpl_fcntl@@Base>:
  428a48:	stp	x29, x30, [sp, #-112]!
  428a4c:	mov	w6, #0xffffffe0            	// #-32
  428a50:	mov	x29, sp
  428a54:	add	x7, sp, #0x50
  428a58:	stp	x19, x20, [sp, #16]
  428a5c:	str	x7, [sp, #64]
  428a60:	stp	w6, wzr, [sp, #72]
  428a64:	stp	x2, x3, [sp, #80]
  428a68:	add	x2, sp, #0x70
  428a6c:	stp	x2, x2, [sp, #48]
  428a70:	stp	x4, x5, [sp, #96]
  428a74:	cbz	w1, 428b34 <rpl_fcntl@@Base+0xec>
  428a78:	mov	w20, w0
  428a7c:	mov	w3, w1
  428a80:	cmp	w1, #0x406
  428a84:	b.eq	428b50 <rpl_fcntl@@Base+0x108>  // b.none
  428a88:	cmp	w1, #0xb
  428a8c:	b.gt	428ad8 <rpl_fcntl@@Base+0x90>
  428a90:	cmp	w1, #0x0
  428a94:	b.le	428b04 <rpl_fcntl@@Base+0xbc>
  428a98:	mov	x1, #0x1                   	// #1
  428a9c:	mov	x2, #0x514                 	// #1300
  428aa0:	lsl	x1, x1, x3
  428aa4:	tst	x1, x2
  428aa8:	b.ne	428bcc <rpl_fcntl@@Base+0x184>  // b.any
  428aac:	mov	x2, #0xa0a                 	// #2570
  428ab0:	tst	x1, x2
  428ab4:	b.eq	428b04 <rpl_fcntl@@Base+0xbc>  // b.none
  428ab8:	mov	w1, w3
  428abc:	mov	w0, w20
  428ac0:	bl	406c00 <fcntl@plt>
  428ac4:	mov	w19, w0
  428ac8:	mov	w0, w19
  428acc:	ldp	x19, x20, [sp, #16]
  428ad0:	ldp	x29, x30, [sp], #112
  428ad4:	ret
  428ad8:	sub	w0, w1, #0x400
  428adc:	cmp	w0, #0xa
  428ae0:	b.hi	428b04 <rpl_fcntl@@Base+0xbc>  // b.pmore
  428ae4:	mov	x1, #0x1                   	// #1
  428ae8:	mov	x2, #0x2c5                 	// #709
  428aec:	lsl	x1, x1, x0
  428af0:	tst	x1, x2
  428af4:	b.ne	428bcc <rpl_fcntl@@Base+0x184>  // b.any
  428af8:	mov	x2, #0x502                 	// #1282
  428afc:	tst	x1, x2
  428b00:	b.ne	428ab8 <rpl_fcntl@@Base+0x70>  // b.any
  428b04:	ldr	w0, [sp, #72]
  428b08:	ldr	x1, [sp, #48]
  428b0c:	tbnz	w0, #31, 428c78 <rpl_fcntl@@Base+0x230>
  428b10:	ldr	x2, [x1]
  428b14:	mov	w0, w20
  428b18:	mov	w1, w3
  428b1c:	bl	406c00 <fcntl@plt>
  428b20:	mov	w19, w0
  428b24:	mov	w0, w19
  428b28:	ldp	x19, x20, [sp, #16]
  428b2c:	ldp	x29, x30, [sp], #112
  428b30:	ret
  428b34:	ldr	w2, [sp, #80]
  428b38:	bl	406c00 <fcntl@plt>
  428b3c:	mov	w19, w0
  428b40:	mov	w0, w19
  428b44:	ldp	x19, x20, [sp, #16]
  428b48:	ldp	x29, x30, [sp], #112
  428b4c:	ret
  428b50:	stp	x21, x22, [sp, #32]
  428b54:	adrp	x21, 449000 <commands_started@@Base+0x170>
  428b58:	mov	w2, #0xffffffe8            	// #-24
  428b5c:	str	w2, [sp, #72]
  428b60:	ldr	w2, [x21, #1992]
  428b64:	ldr	w22, [sp, #80]
  428b68:	tbnz	w2, #31, 428b98 <rpl_fcntl@@Base+0x150>
  428b6c:	mov	w2, w22
  428b70:	bl	406c00 <fcntl@plt>
  428b74:	mov	w19, w0
  428b78:	tbnz	w0, #31, 428bfc <rpl_fcntl@@Base+0x1b4>
  428b7c:	mov	w0, #0x1                   	// #1
  428b80:	str	w0, [x21, #1992]
  428b84:	mov	w0, w19
  428b88:	ldp	x19, x20, [sp, #16]
  428b8c:	ldp	x21, x22, [sp, #32]
  428b90:	ldp	x29, x30, [sp], #112
  428b94:	ret
  428b98:	mov	w2, w22
  428b9c:	mov	w1, #0x0                   	// #0
  428ba0:	bl	406c00 <fcntl@plt>
  428ba4:	mov	w19, w0
  428ba8:	tbnz	w0, #31, 428bb8 <rpl_fcntl@@Base+0x170>
  428bac:	ldr	w0, [x21, #1992]
  428bb0:	cmn	w0, #0x1
  428bb4:	b.eq	428c2c <rpl_fcntl@@Base+0x1e4>  // b.none
  428bb8:	mov	w0, w19
  428bbc:	ldp	x19, x20, [sp, #16]
  428bc0:	ldp	x21, x22, [sp, #32]
  428bc4:	ldp	x29, x30, [sp], #112
  428bc8:	ret
  428bcc:	ldr	w0, [sp, #72]
  428bd0:	ldr	x1, [sp, #48]
  428bd4:	tbnz	w0, #31, 428c8c <rpl_fcntl@@Base+0x244>
  428bd8:	ldr	w2, [x1]
  428bdc:	mov	w0, w20
  428be0:	mov	w1, w3
  428be4:	bl	406c00 <fcntl@plt>
  428be8:	mov	w19, w0
  428bec:	mov	w0, w19
  428bf0:	ldp	x19, x20, [sp, #16]
  428bf4:	ldp	x29, x30, [sp], #112
  428bf8:	ret
  428bfc:	bl	406d70 <__errno_location@plt>
  428c00:	ldr	w0, [x0]
  428c04:	cmp	w0, #0x16
  428c08:	b.ne	428b7c <rpl_fcntl@@Base+0x134>  // b.any
  428c0c:	mov	w2, w22
  428c10:	mov	w0, w20
  428c14:	mov	w1, #0x0                   	// #0
  428c18:	bl	406c00 <fcntl@plt>
  428c1c:	mov	w19, w0
  428c20:	tbnz	w0, #31, 428bb8 <rpl_fcntl@@Base+0x170>
  428c24:	mov	w0, #0xffffffff            	// #-1
  428c28:	str	w0, [x21, #1992]
  428c2c:	mov	w0, w19
  428c30:	mov	w1, #0x1                   	// #1
  428c34:	bl	406c00 <fcntl@plt>
  428c38:	tbnz	w0, #31, 428c54 <rpl_fcntl@@Base+0x20c>
  428c3c:	orr	w2, w0, #0x1
  428c40:	mov	w1, #0x2                   	// #2
  428c44:	mov	w0, w19
  428c48:	bl	406c00 <fcntl@plt>
  428c4c:	cmn	w0, #0x1
  428c50:	b.ne	428bb8 <rpl_fcntl@@Base+0x170>  // b.any
  428c54:	bl	406d70 <__errno_location@plt>
  428c58:	mov	x20, x0
  428c5c:	mov	w0, w19
  428c60:	mov	w19, #0xffffffff            	// #-1
  428c64:	ldr	w21, [x20]
  428c68:	bl	406a50 <close@plt>
  428c6c:	str	w21, [x20]
  428c70:	ldp	x21, x22, [sp, #32]
  428c74:	b	428ac8 <rpl_fcntl@@Base+0x80>
  428c78:	cmn	w0, #0x7
  428c7c:	b.ge	428b10 <rpl_fcntl@@Base+0xc8>  // b.tcont
  428c80:	ldr	x1, [sp, #56]
  428c84:	add	x1, x1, w0, sxtw
  428c88:	b	428b10 <rpl_fcntl@@Base+0xc8>
  428c8c:	cmn	w0, #0x7
  428c90:	b.ge	428bd8 <rpl_fcntl@@Base+0x190>  // b.tcont
  428c94:	ldr	x1, [sp, #56]
  428c98:	add	x1, x1, w0, sxtw
  428c9c:	b	428bd8 <rpl_fcntl@@Base+0x190>

0000000000428ca0 <concatenated_filename@@Base>:
  428ca0:	stp	x29, x30, [sp, #-80]!
  428ca4:	mov	x29, sp
  428ca8:	stp	x19, x20, [sp, #16]
  428cac:	mov	x20, x0
  428cb0:	stp	x21, x22, [sp, #32]
  428cb4:	mov	x21, x2
  428cb8:	stp	x23, x24, [sp, #48]
  428cbc:	mov	x23, x1
  428cc0:	ldrb	w0, [x0]
  428cc4:	subs	w19, w0, #0x2e
  428cc8:	b.ne	428cd0 <concatenated_filename@@Base+0x30>  // b.any
  428ccc:	ldrb	w19, [x20, #1]
  428cd0:	mov	x0, x23
  428cd4:	bl	406680 <strlen@plt>
  428cd8:	mov	x22, x0
  428cdc:	cbnz	w19, 428d28 <concatenated_filename@@Base+0x88>
  428ce0:	add	x22, x0, #0x1
  428ce4:	cbz	x21, 428dc8 <concatenated_filename@@Base+0x128>
  428ce8:	mov	x0, x21
  428cec:	bl	406680 <strlen@plt>
  428cf0:	add	x0, x0, x22
  428cf4:	bl	4068d0 <malloc@plt>
  428cf8:	mov	x19, x0
  428cfc:	cbz	x0, 428dfc <concatenated_filename@@Base+0x15c>
  428d00:	mov	x1, x23
  428d04:	bl	406840 <stpcpy@plt>
  428d08:	mov	x1, x21
  428d0c:	bl	406c30 <strcpy@plt>
  428d10:	mov	x0, x19
  428d14:	ldp	x19, x20, [sp, #16]
  428d18:	ldp	x21, x22, [sp, #32]
  428d1c:	ldp	x23, x24, [sp, #48]
  428d20:	ldp	x29, x30, [sp], #80
  428d24:	ret
  428d28:	mov	x0, x20
  428d2c:	str	x25, [sp, #64]
  428d30:	bl	406680 <strlen@plt>
  428d34:	mov	w25, #0x0                   	// #0
  428d38:	mov	x24, x0
  428d3c:	add	x0, x0, #0x1
  428d40:	cbz	x24, 428d5c <concatenated_filename@@Base+0xbc>
  428d44:	add	x1, x20, x24
  428d48:	ldurb	w1, [x1, #-1]
  428d4c:	cmp	w1, #0x2f
  428d50:	b.eq	428d5c <concatenated_filename@@Base+0xbc>  // b.none
  428d54:	add	x22, x22, #0x1
  428d58:	mov	w25, #0x1                   	// #1
  428d5c:	add	x22, x0, x22
  428d60:	cbz	x21, 428d70 <concatenated_filename@@Base+0xd0>
  428d64:	mov	x0, x21
  428d68:	bl	406680 <strlen@plt>
  428d6c:	add	x22, x22, x0
  428d70:	mov	x0, x22
  428d74:	bl	4068d0 <malloc@plt>
  428d78:	mov	x19, x0
  428d7c:	cbz	x0, 428df8 <concatenated_filename@@Base+0x158>
  428d80:	mov	x1, x20
  428d84:	mov	x2, x24
  428d88:	bl	406640 <memcpy@plt>
  428d8c:	add	x0, x19, x24
  428d90:	cbz	w25, 428da0 <concatenated_filename@@Base+0x100>
  428d94:	add	x0, x0, #0x1
  428d98:	mov	w1, #0x2f                  	// #47
  428d9c:	strb	w1, [x19, x24]
  428da0:	mov	x1, x23
  428da4:	bl	406840 <stpcpy@plt>
  428da8:	ldr	x25, [sp, #64]
  428dac:	cbnz	x21, 428d08 <concatenated_filename@@Base+0x68>
  428db0:	mov	x0, x19
  428db4:	ldp	x19, x20, [sp, #16]
  428db8:	ldp	x21, x22, [sp, #32]
  428dbc:	ldp	x23, x24, [sp, #48]
  428dc0:	ldp	x29, x30, [sp], #80
  428dc4:	ret
  428dc8:	mov	x0, x22
  428dcc:	bl	4068d0 <malloc@plt>
  428dd0:	mov	x19, x0
  428dd4:	cbz	x0, 428dfc <concatenated_filename@@Base+0x15c>
  428dd8:	mov	x1, x23
  428ddc:	bl	406c30 <strcpy@plt>
  428de0:	mov	x0, x19
  428de4:	ldp	x19, x20, [sp, #16]
  428de8:	ldp	x21, x22, [sp, #32]
  428dec:	ldp	x23, x24, [sp, #48]
  428df0:	ldp	x29, x30, [sp], #80
  428df4:	ret
  428df8:	ldr	x25, [sp, #64]
  428dfc:	mov	x19, #0x0                   	// #0
  428e00:	b	428d10 <concatenated_filename@@Base+0x70>
  428e04:	nop

0000000000428e08 <xalloc_die@@Base>:
  428e08:	stp	x29, x30, [sp, #-32]!
  428e0c:	adrp	x0, 446000 <expanding_var@@Base+0x320>
  428e10:	mov	w2, #0x5                   	// #5
  428e14:	mov	x29, sp
  428e18:	str	x19, [sp, #16]
  428e1c:	adrp	x1, 42f000 <_IO_stdin_used@@Base+0x60e0>
  428e20:	ldr	w19, [x0, #404]
  428e24:	add	x1, x1, #0x620
  428e28:	mov	x0, #0x0                   	// #0
  428e2c:	bl	406cd0 <dcgettext@plt>
  428e30:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x10e0>
  428e34:	mov	x3, x0
  428e38:	add	x2, x2, #0xff0
  428e3c:	mov	w0, w19
  428e40:	mov	w1, #0x0                   	// #0
  428e44:	bl	41bd88 <error@@Base>
  428e48:	bl	406ab0 <abort@plt>
  428e4c:	nop

0000000000428e50 <__libc_csu_init@@Base>:
  428e50:	stp	x29, x30, [sp, #-64]!
  428e54:	mov	x29, sp
  428e58:	stp	x19, x20, [sp, #16]
  428e5c:	adrp	x20, 444000 <_IO_stdin_used@@Base+0x1b0e0>
  428e60:	add	x20, x20, #0xde0
  428e64:	stp	x21, x22, [sp, #32]
  428e68:	adrp	x21, 444000 <_IO_stdin_used@@Base+0x1b0e0>
  428e6c:	add	x21, x21, #0xdd8
  428e70:	sub	x20, x20, x21
  428e74:	mov	w22, w0
  428e78:	stp	x23, x24, [sp, #48]
  428e7c:	mov	x23, x1
  428e80:	mov	x24, x2
  428e84:	bl	406608 <memcpy@plt-0x38>
  428e88:	cmp	xzr, x20, asr #3
  428e8c:	b.eq	428eb8 <__libc_csu_init@@Base+0x68>  // b.none
  428e90:	asr	x20, x20, #3
  428e94:	mov	x19, #0x0                   	// #0
  428e98:	ldr	x3, [x21, x19, lsl #3]
  428e9c:	mov	x2, x24
  428ea0:	add	x19, x19, #0x1
  428ea4:	mov	x1, x23
  428ea8:	mov	w0, w22
  428eac:	blr	x3
  428eb0:	cmp	x20, x19
  428eb4:	b.ne	428e98 <__libc_csu_init@@Base+0x48>  // b.any
  428eb8:	ldp	x19, x20, [sp, #16]
  428ebc:	ldp	x21, x22, [sp, #32]
  428ec0:	ldp	x23, x24, [sp, #48]
  428ec4:	ldp	x29, x30, [sp], #64
  428ec8:	ret
  428ecc:	nop

0000000000428ed0 <__libc_csu_fini@@Base>:
  428ed0:	ret
  428ed4:	nop
  428ed8:	adrp	x2, 445000 <memcpy@GLIBC_2.17>
  428edc:	mov	x1, #0x0                   	// #0
  428ee0:	ldr	x2, [x2, #1016]
  428ee4:	b	406780 <__cxa_atexit@plt>
  428ee8:	mov	x2, x1
  428eec:	mov	x1, x0
  428ef0:	mov	w0, #0x0                   	// #0
  428ef4:	b	406d90 <__xstat@plt>
  428ef8:	mov	x2, x1
  428efc:	mov	x1, x0
  428f00:	mov	w0, #0x0                   	// #0
  428f04:	b	406c60 <__lxstat@plt>

Disassembly of section .fini:

0000000000428f08 <.fini>:
  428f08:	stp	x29, x30, [sp, #-16]!
  428f0c:	mov	x29, sp
  428f10:	ldp	x29, x30, [sp], #16
  428f14:	ret
