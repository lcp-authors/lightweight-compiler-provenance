
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libubsan.so.1.0.0_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000006548 <.init>:
    6548:	stp	x29, x30, [sp, #-16]!
    654c:	mov	x29, sp
    6550:	bl	6c80 <__asan_backtrace_open@plt+0x10>
    6554:	ldp	x29, x30, [sp], #16
    6558:	ret

Disassembly of section .plt:

0000000000006560 <_Unwind_Backtrace@plt-0x20>:
    6560:	stp	x16, x30, [sp, #-16]!
    6564:	adrp	x16, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    6568:	ldr	x17, [x16, #4088]
    656c:	add	x16, x16, #0xff8
    6570:	br	x17
    6574:	nop
    6578:	nop
    657c:	nop

0000000000006580 <_Unwind_Backtrace@plt>:
    6580:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6584:	ldr	x17, [x16]
    6588:	add	x16, x16, #0x0
    658c:	br	x17

0000000000006590 <__fxstat@plt>:
    6590:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6594:	ldr	x17, [x16, #8]
    6598:	add	x16, x16, #0x8
    659c:	br	x17

00000000000065a0 <__sanitizer_report_error_summary@plt>:
    65a0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    65a4:	ldr	x17, [x16, #16]
    65a8:	add	x16, x16, #0x10
    65ac:	br	x17

00000000000065b0 <OnPrint@plt>:
    65b0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    65b4:	ldr	x17, [x16, #24]
    65b8:	add	x16, x16, #0x18
    65bc:	br	x17

00000000000065c0 <__asan_cplus_demangle_init_info@plt>:
    65c0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    65c4:	ldr	x17, [x16, #32]
    65c8:	add	x16, x16, #0x20
    65cc:	br	x17

00000000000065d0 <__asan_backtrace_qsort@plt>:
    65d0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    65d4:	ldr	x17, [x16, #40]
    65d8:	add	x16, x16, #0x28
    65dc:	br	x17

00000000000065e0 <readlink@plt>:
    65e0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    65e4:	ldr	x17, [x16, #48]
    65e8:	add	x16, x16, #0x30
    65ec:	br	x17

00000000000065f0 <shm_open@plt>:
    65f0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    65f4:	ldr	x17, [x16, #56]
    65f8:	add	x16, x16, #0x38
    65fc:	br	x17

0000000000006600 <sched_getaffinity@plt>:
    6600:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6604:	ldr	x17, [x16, #64]
    6608:	add	x16, x16, #0x40
    660c:	br	x17

0000000000006610 <__asan_backtrace_pcinfo@plt>:
    6610:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6614:	ldr	x17, [x16, #72]
    6618:	add	x16, x16, #0x48
    661c:	br	x17

0000000000006620 <execv@plt>:
    6620:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6624:	ldr	x17, [x16, #80]
    6628:	add	x16, x16, #0x50
    662c:	br	x17

0000000000006630 <pipe@plt>:
    6630:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6634:	ldr	x17, [x16, #88]
    6638:	add	x16, x16, #0x58
    663c:	br	x17

0000000000006640 <__sanitizer_get_module_and_offset_for_pc@plt>:
    6640:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6644:	ldr	x17, [x16, #96]
    6648:	add	x16, x16, #0x60
    664c:	br	x17

0000000000006650 <__asan_cplus_demangle_type@plt>:
    6650:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6654:	ldr	x17, [x16, #104]
    6658:	add	x16, x16, #0x68
    665c:	br	x17

0000000000006660 <__asan_backtrace_release_view@plt>:
    6660:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6664:	ldr	x17, [x16, #112]
    6668:	add	x16, x16, #0x70
    666c:	br	x17

0000000000006670 <__asan_backtrace_dwarf_add@plt>:
    6670:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6674:	ldr	x17, [x16, #120]
    6678:	add	x16, x16, #0x78
    667c:	br	x17

0000000000006680 <dlvsym@plt>:
    6680:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6684:	ldr	x17, [x16, #128]
    6688:	add	x16, x16, #0x80
    668c:	br	x17

0000000000006690 <pthread_getattr_np@plt>:
    6690:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6694:	ldr	x17, [x16, #136]
    6698:	add	x16, x16, #0x88
    669c:	br	x17

00000000000066a0 <_ZN11__sanitizer14real_sigactionEiPKvPv@plt>:
    66a0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    66a4:	ldr	x17, [x16, #144]
    66a8:	add	x16, x16, #0x90
    66ac:	br	x17

00000000000066b0 <__sanitizer_symbolize_demangle@plt>:
    66b0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    66b4:	ldr	x17, [x16, #152]
    66b8:	add	x16, x16, #0x98
    66bc:	br	x17

00000000000066c0 <__asan_cplus_demangle_fill_name@plt>:
    66c0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    66c4:	ldr	x17, [x16, #160]
    66c8:	add	x16, x16, #0xa0
    66cc:	br	x17

00000000000066d0 <__asan_internal_memcpy@plt>:
    66d0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    66d4:	ldr	x17, [x16, #168]
    66d8:	add	x16, x16, #0xa8
    66dc:	br	x17

00000000000066e0 <__asan_internal_strlen@plt>:
    66e0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    66e4:	ldr	x17, [x16, #176]
    66e8:	add	x16, x16, #0xb0
    66ec:	br	x17

00000000000066f0 <open@plt>:
    66f0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    66f4:	ldr	x17, [x16, #184]
    66f8:	add	x16, x16, #0xb8
    66fc:	br	x17

0000000000006700 <pthread_attr_init@plt>:
    6700:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6704:	ldr	x17, [x16, #192]
    6708:	add	x16, x16, #0xc0
    670c:	br	x17

0000000000006710 <real_pthread_attr_getstack@plt>:
    6710:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6714:	ldr	x17, [x16, #200]
    6718:	add	x16, x16, #0xc8
    671c:	br	x17

0000000000006720 <sleep@plt>:
    6720:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6724:	ldr	x17, [x16, #208]
    6728:	add	x16, x16, #0xd0
    672c:	br	x17

0000000000006730 <confstr@plt>:
    6730:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6734:	ldr	x17, [x16, #216]
    6738:	add	x16, x16, #0xd8
    673c:	br	x17

0000000000006740 <dlsym@plt>:
    6740:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6744:	ldr	x17, [x16, #224]
    6748:	add	x16, x16, #0xe0
    674c:	br	x17

0000000000006750 <__asan_backtrace_vector_grow@plt>:
    6750:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6754:	ldr	x17, [x16, #232]
    6758:	add	x16, x16, #0xe8
    675c:	br	x17

0000000000006760 <__asan_backtrace_syminfo@plt>:
    6760:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6764:	ldr	x17, [x16, #240]
    6768:	add	x16, x16, #0xf0
    676c:	br	x17

0000000000006770 <__asan_internal_memset@plt>:
    6770:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6774:	ldr	x17, [x16, #248]
    6778:	add	x16, x16, #0xf8
    677c:	br	x17

0000000000006780 <free@plt>:
    6780:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6784:	ldr	x17, [x16, #256]
    6788:	add	x16, x16, #0x100
    678c:	br	x17

0000000000006790 <__sanitizer_symbolize_data@plt>:
    6790:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6794:	ldr	x17, [x16, #264]
    6798:	add	x16, x16, #0x108
    679c:	br	x17

00000000000067a0 <isatty@plt>:
    67a0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    67a4:	ldr	x17, [x16, #272]
    67a8:	add	x16, x16, #0x110
    67ac:	br	x17

00000000000067b0 <dlerror@plt>:
    67b0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    67b4:	ldr	x17, [x16, #280]
    67b8:	add	x16, x16, #0x118
    67bc:	br	x17

00000000000067c0 <__cxa_finalize@plt>:
    67c0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    67c4:	ldr	x17, [x16, #288]
    67c8:	add	x16, x16, #0x120
    67cc:	br	x17

00000000000067d0 <realloc@plt>:
    67d0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    67d4:	ldr	x17, [x16, #296]
    67d8:	add	x16, x16, #0x128
    67dc:	br	x17

00000000000067e0 <_ZN7__ubsan31RegisterUndefinedBehaviorReportEPNS_23UndefinedBehaviorReportE@plt>:
    67e0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    67e4:	ldr	x17, [x16, #304]
    67e8:	add	x16, x16, #0x130
    67ec:	br	x17

00000000000067f0 <__asan_backtrace_alloc@plt>:
    67f0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    67f4:	ldr	x17, [x16, #312]
    67f8:	add	x16, x16, #0x138
    67fc:	br	x17

0000000000006800 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>:
    6800:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6804:	ldr	x17, [x16, #320]
    6808:	add	x16, x16, #0x140
    680c:	br	x17

0000000000006810 <getrusage@plt>:
    6810:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6814:	ldr	x17, [x16, #328]
    6818:	add	x16, x16, #0x148
    681c:	br	x17

0000000000006820 <pthread_attr_destroy@plt>:
    6820:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6824:	ldr	x17, [x16, #336]
    6828:	add	x16, x16, #0x150
    682c:	br	x17

0000000000006830 <sprintf@plt>:
    6830:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6834:	ldr	x17, [x16, #344]
    6838:	add	x16, x16, #0x158
    683c:	br	x17

0000000000006840 <__asan_backtrace_vector_release@plt>:
    6840:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6844:	ldr	x17, [x16, #352]
    6848:	add	x16, x16, #0x160
    684c:	br	x17

0000000000006850 <real_clock_gettime@plt>:
    6850:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6854:	ldr	x17, [x16, #360]
    6858:	add	x16, x16, #0x168
    685c:	br	x17

0000000000006860 <__cxa_demangle@plt>:
    6860:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6864:	ldr	x17, [x16, #368]
    6868:	add	x16, x16, #0x170
    686c:	br	x17

0000000000006870 <__sanitizer_symbolize_code@plt>:
    6870:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6874:	ldr	x17, [x16, #376]
    6878:	add	x16, x16, #0x178
    687c:	br	x17

0000000000006880 <dl_iterate_phdr@plt>:
    6880:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6884:	ldr	x17, [x16, #384]
    6888:	add	x16, x16, #0x180
    688c:	br	x17

0000000000006890 <__sanitizer_dump_coverage@plt>:
    6890:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6894:	ldr	x17, [x16, #392]
    6898:	add	x16, x16, #0x188
    689c:	br	x17

00000000000068a0 <clock_gettime@plt>:
    68a0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    68a4:	ldr	x17, [x16, #400]
    68a8:	add	x16, x16, #0x190
    68ac:	br	x17

00000000000068b0 <getpid@plt>:
    68b0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    68b4:	ldr	x17, [x16, #408]
    68b8:	add	x16, x16, #0x198
    68bc:	br	x17

00000000000068c0 <__sanitizer_symbolize_flush@plt>:
    68c0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    68c4:	ldr	x17, [x16, #416]
    68c8:	add	x16, x16, #0x1a0
    68cc:	br	x17

00000000000068d0 <__asan_backtrace_create_state@plt>:
    68d0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    68d4:	ldr	x17, [x16, #424]
    68d8:	add	x16, x16, #0x1a8
    68dc:	br	x17

00000000000068e0 <mmap@plt>:
    68e0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    68e4:	ldr	x17, [x16, #432]
    68e8:	add	x16, x16, #0x1b0
    68ec:	br	x17

00000000000068f0 <munmap@plt>:
    68f0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    68f4:	ldr	x17, [x16, #440]
    68f8:	add	x16, x16, #0x1b8
    68fc:	br	x17

0000000000006900 <__asan_cplus_demangle_print_callback@plt>:
    6900:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6904:	ldr	x17, [x16, #448]
    6908:	add	x16, x16, #0x1c0
    690c:	br	x17

0000000000006910 <__ubsan_on_report@plt>:
    6910:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6914:	ldr	x17, [x16, #456]
    6918:	add	x16, x16, #0x1c8
    691c:	br	x17

0000000000006920 <__dynamic_cast@plt>:
    6920:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6924:	ldr	x17, [x16, #464]
    6928:	add	x16, x16, #0x1d0
    692c:	br	x17

0000000000006930 <__cxa_atexit@plt>:
    6930:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6934:	ldr	x17, [x16, #472]
    6938:	add	x16, x16, #0x1d8
    693c:	br	x17

0000000000006940 <snprintf@plt>:
    6940:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6944:	ldr	x17, [x16, #480]
    6948:	add	x16, x16, #0x1e0
    694c:	br	x17

0000000000006950 <pthread_attr_getstack@plt>:
    6950:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6954:	ldr	x17, [x16, #488]
    6958:	add	x16, x16, #0x1e8
    695c:	br	x17

0000000000006960 <pthread_attr_setstacksize@plt>:
    6960:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6964:	ldr	x17, [x16, #496]
    6968:	add	x16, x16, #0x1f0
    696c:	br	x17

0000000000006970 <_Unwind_GetIP@plt>:
    6970:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6974:	ldr	x17, [x16, #504]
    6978:	add	x16, x16, #0x1f8
    697c:	br	x17

0000000000006980 <madvise@plt>:
    6980:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6984:	ldr	x17, [x16, #512]
    6988:	add	x16, x16, #0x200
    698c:	br	x17

0000000000006990 <usleep@plt>:
    6990:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6994:	ldr	x17, [x16, #520]
    6998:	add	x16, x16, #0x208
    699c:	br	x17

00000000000069a0 <shm_unlink@plt>:
    69a0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    69a4:	ldr	x17, [x16, #528]
    69a8:	add	x16, x16, #0x210
    69ac:	br	x17

00000000000069b0 <__sched_cpucount@plt>:
    69b0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    69b4:	ldr	x17, [x16, #536]
    69b8:	add	x16, x16, #0x218
    69bc:	br	x17

00000000000069c0 <strrchr@plt>:
    69c0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    69c4:	ldr	x17, [x16, #544]
    69c8:	add	x16, x16, #0x220
    69cc:	br	x17

00000000000069d0 <__errno_location@plt>:
    69d0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    69d4:	ldr	x17, [x16, #552]
    69d8:	add	x16, x16, #0x228
    69dc:	br	x17

00000000000069e0 <sched_yield@plt>:
    69e0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    69e4:	ldr	x17, [x16, #560]
    69e8:	add	x16, x16, #0x230
    69ec:	br	x17

00000000000069f0 <__asan_backtrace_get_view@plt>:
    69f0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    69f4:	ldr	x17, [x16, #568]
    69f8:	add	x16, x16, #0x238
    69fc:	br	x17

0000000000006a00 <syslog@plt>:
    6a00:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6a04:	ldr	x17, [x16, #576]
    6a08:	add	x16, x16, #0x240
    6a0c:	br	x17

0000000000006a10 <__sanitizer_dump_trace_pc_guard_coverage@plt>:
    6a10:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6a14:	ldr	x17, [x16, #584]
    6a18:	add	x16, x16, #0x248
    6a1c:	br	x17

0000000000006a20 <__asan_cplus_demangle_fill_extended_operator@plt>:
    6a20:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6a24:	ldr	x17, [x16, #592]
    6a28:	add	x16, x16, #0x250
    6a2c:	br	x17

0000000000006a30 <__asan_internal_strcmp@plt>:
    6a30:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6a34:	ldr	x17, [x16, #600]
    6a38:	add	x16, x16, #0x258
    6a3c:	br	x17

0000000000006a40 <__asan_internal_strnlen@plt>:
    6a40:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6a44:	ldr	x17, [x16, #608]
    6a48:	add	x16, x16, #0x260
    6a4c:	br	x17

0000000000006a50 <close@plt>:
    6a50:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6a54:	ldr	x17, [x16, #616]
    6a58:	add	x16, x16, #0x268
    6a5c:	br	x17

0000000000006a60 <__extenddftf2@plt>:
    6a60:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6a64:	ldr	x17, [x16, #624]
    6a68:	add	x16, x16, #0x270
    6a6c:	br	x17

0000000000006a70 <__asan_internal_strncmp@plt>:
    6a70:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6a74:	ldr	x17, [x16, #632]
    6a78:	add	x16, x16, #0x278
    6a7c:	br	x17

0000000000006a80 <__ubsan_handle_cfi_bad_type@plt>:
    6a80:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6a84:	ldr	x17, [x16, #640]
    6a88:	add	x16, x16, #0x280
    6a8c:	br	x17

0000000000006a90 <__asan_cplus_demangle_fill_ctor@plt>:
    6a90:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6a94:	ldr	x17, [x16, #648]
    6a98:	add	x16, x16, #0x288
    6a9c:	br	x17

0000000000006aa0 <setrlimit@plt>:
    6aa0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6aa4:	ldr	x17, [x16, #656]
    6aa8:	add	x16, x16, #0x290
    6aac:	br	x17

0000000000006ab0 <getauxval@plt>:
    6ab0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6ab4:	ldr	x17, [x16, #664]
    6ab8:	add	x16, x16, #0x298
    6abc:	br	x17

0000000000006ac0 <__asan_backtrace_free@plt>:
    6ac0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6ac4:	ldr	x17, [x16, #672]
    6ac8:	add	x16, x16, #0x2a0
    6acc:	br	x17

0000000000006ad0 <__lxstat@plt>:
    6ad0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6ad4:	ldr	x17, [x16, #680]
    6ad8:	add	x16, x16, #0x2a8
    6adc:	br	x17

0000000000006ae0 <abort@plt>:
    6ae0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6ae4:	ldr	x17, [x16, #688]
    6ae8:	add	x16, x16, #0x2b0
    6aec:	br	x17

0000000000006af0 <bsearch@plt>:
    6af0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6af4:	ldr	x17, [x16, #696]
    6af8:	add	x16, x16, #0x2b8
    6afc:	br	x17

0000000000006b00 <getenv@plt>:
    6b00:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6b04:	ldr	x17, [x16, #704]
    6b08:	add	x16, x16, #0x2c0
    6b0c:	br	x17

0000000000006b10 <__asan_backtrace_initialize@plt>:
    6b10:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6b14:	ldr	x17, [x16, #712]
    6b18:	add	x16, x16, #0x2c8
    6b1c:	br	x17

0000000000006b20 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>:
    6b20:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6b24:	ldr	x17, [x16, #720]
    6b28:	add	x16, x16, #0x2d0
    6b2c:	br	x17

0000000000006b30 <__asan_internal_memcmp@plt>:
    6b30:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6b34:	ldr	x17, [x16, #728]
    6b38:	add	x16, x16, #0x2d8
    6b3c:	br	x17

0000000000006b40 <sysconf@plt>:
    6b40:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6b44:	ldr	x17, [x16, #736]
    6b48:	add	x16, x16, #0x2e0
    6b4c:	br	x17

0000000000006b50 <__extendsftf2@plt>:
    6b50:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6b54:	ldr	x17, [x16, #744]
    6b58:	add	x16, x16, #0x2e8
    6b5c:	br	x17

0000000000006b60 <pthread_self@plt>:
    6b60:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6b64:	ldr	x17, [x16, #752]
    6b68:	add	x16, x16, #0x2f0
    6b6c:	br	x17

0000000000006b70 <getuid@plt>:
    6b70:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6b74:	ldr	x17, [x16, #760]
    6b78:	add	x16, x16, #0x2f8
    6b7c:	br	x17

0000000000006b80 <getpagesize@plt>:
    6b80:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6b84:	ldr	x17, [x16, #768]
    6b88:	add	x16, x16, #0x300
    6b8c:	br	x17

0000000000006b90 <__asan_backtrace_vector_finish@plt>:
    6b90:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6b94:	ldr	x17, [x16, #776]
    6b98:	add	x16, x16, #0x308
    6b9c:	br	x17

0000000000006ba0 <__asan_backtrace_close@plt>:
    6ba0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6ba4:	ldr	x17, [x16, #784]
    6ba8:	add	x16, x16, #0x310
    6bac:	br	x17

0000000000006bb0 <__asan_cplus_demangle_mangled_name@plt>:
    6bb0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6bb4:	ldr	x17, [x16, #792]
    6bb8:	add	x16, x16, #0x318
    6bbc:	br	x17

0000000000006bc0 <__ubsan_default_options@plt>:
    6bc0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6bc4:	ldr	x17, [x16, #800]
    6bc8:	add	x16, x16, #0x320
    6bcc:	br	x17

0000000000006bd0 <getrlimit@plt>:
    6bd0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6bd4:	ldr	x17, [x16, #808]
    6bd8:	add	x16, x16, #0x328
    6bdc:	br	x17

0000000000006be0 <sigaltstack@plt>:
    6be0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6be4:	ldr	x17, [x16, #816]
    6be8:	add	x16, x16, #0x330
    6bec:	br	x17

0000000000006bf0 <fcntl@plt>:
    6bf0:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6bf4:	ldr	x17, [x16, #824]
    6bf8:	add	x16, x16, #0x338
    6bfc:	br	x17

0000000000006c00 <__gmon_start__@plt>:
    6c00:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6c04:	ldr	x17, [x16, #832]
    6c08:	add	x16, x16, #0x340
    6c0c:	br	x17

0000000000006c10 <sigaction@plt>:
    6c10:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6c14:	ldr	x17, [x16, #840]
    6c18:	add	x16, x16, #0x348
    6c1c:	br	x17

0000000000006c20 <__sanitizer_set_report_path@plt>:
    6c20:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6c24:	ldr	x17, [x16, #848]
    6c28:	add	x16, x16, #0x350
    6c2c:	br	x17

0000000000006c30 <__asan_cplus_demangle_v3_callback@plt>:
    6c30:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6c34:	ldr	x17, [x16, #856]
    6c38:	add	x16, x16, #0x358
    6c3c:	br	x17

0000000000006c40 <__sanitizer_print_memory_profile@plt>:
    6c40:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6c44:	ldr	x17, [x16, #864]
    6c48:	add	x16, x16, #0x360
    6c4c:	br	x17

0000000000006c50 <__asan_cplus_demangle_fill_dtor@plt>:
    6c50:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6c54:	ldr	x17, [x16, #872]
    6c58:	add	x16, x16, #0x368
    6c5c:	br	x17

0000000000006c60 <__sancov_default_options@plt>:
    6c60:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6c64:	ldr	x17, [x16, #880]
    6c68:	add	x16, x16, #0x370
    6c6c:	br	x17

0000000000006c70 <__asan_backtrace_open@plt>:
    6c70:	adrp	x16, 77000 <_Unwind_Backtrace@GCC_3.3>
    6c74:	ldr	x17, [x16, #888]
    6c78:	add	x16, x16, #0x378
    6c7c:	br	x17

Disassembly of section .text:

0000000000006c80 <__ubsan_default_options@@Base-0x29e4>:
    6c80:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    6c84:	ldr	x0, [x0, #4032]
    6c88:	cbz	x0, 6c90 <__asan_backtrace_open@plt+0x20>
    6c8c:	b	6c00 <__gmon_start__@plt>
    6c90:	ret
    6c94:	stp	x29, x30, [sp, #-32]!
    6c98:	mov	x29, sp
    6c9c:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    6ca0:	add	x0, x0, #0xd80
    6ca4:	str	x0, [sp, #24]
    6ca8:	ldr	x0, [sp, #24]
    6cac:	str	x0, [sp, #24]
    6cb0:	ldr	x1, [sp, #24]
    6cb4:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    6cb8:	add	x0, x0, #0xd80
    6cbc:	cmp	x1, x0
    6cc0:	b.eq	6cf8 <__asan_backtrace_open@plt+0x88>  // b.none
    6cc4:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    6cc8:	ldr	x0, [x0, #4000]
    6ccc:	str	x0, [sp, #16]
    6cd0:	ldr	x0, [sp, #16]
    6cd4:	str	x0, [sp, #16]
    6cd8:	ldr	x0, [sp, #16]
    6cdc:	cmp	x0, #0x0
    6ce0:	b.eq	6cfc <__asan_backtrace_open@plt+0x8c>  // b.none
    6ce4:	ldr	x1, [sp, #16]
    6ce8:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    6cec:	add	x0, x0, #0xd80
    6cf0:	blr	x1
    6cf4:	b	6cfc <__asan_backtrace_open@plt+0x8c>
    6cf8:	nop
    6cfc:	ldp	x29, x30, [sp], #32
    6d00:	ret
    6d04:	stp	x29, x30, [sp, #-48]!
    6d08:	mov	x29, sp
    6d0c:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    6d10:	add	x0, x0, #0xd80
    6d14:	str	x0, [sp, #40]
    6d18:	ldr	x0, [sp, #40]
    6d1c:	str	x0, [sp, #40]
    6d20:	ldr	x1, [sp, #40]
    6d24:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    6d28:	add	x0, x0, #0xd80
    6d2c:	sub	x0, x1, x0
    6d30:	asr	x0, x0, #3
    6d34:	lsr	x1, x0, #63
    6d38:	add	x0, x1, x0
    6d3c:	asr	x0, x0, #1
    6d40:	str	x0, [sp, #32]
    6d44:	ldr	x0, [sp, #32]
    6d48:	cmp	x0, #0x0
    6d4c:	b.eq	6d88 <__asan_backtrace_open@plt+0x118>  // b.none
    6d50:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    6d54:	ldr	x0, [x0, #4040]
    6d58:	str	x0, [sp, #24]
    6d5c:	ldr	x0, [sp, #24]
    6d60:	str	x0, [sp, #24]
    6d64:	ldr	x0, [sp, #24]
    6d68:	cmp	x0, #0x0
    6d6c:	b.eq	6d8c <__asan_backtrace_open@plt+0x11c>  // b.none
    6d70:	ldr	x2, [sp, #24]
    6d74:	ldr	x1, [sp, #32]
    6d78:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    6d7c:	add	x0, x0, #0xd80
    6d80:	blr	x2
    6d84:	b	6d8c <__asan_backtrace_open@plt+0x11c>
    6d88:	nop
    6d8c:	ldp	x29, x30, [sp], #48
    6d90:	ret
    6d94:	stp	x29, x30, [sp, #-16]!
    6d98:	mov	x29, sp
    6d9c:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    6da0:	add	x0, x0, #0xd80
    6da4:	ldrb	w0, [x0]
    6da8:	and	x0, x0, #0xff
    6dac:	cmp	x0, #0x0
    6db0:	b.ne	6dec <__asan_backtrace_open@plt+0x17c>  // b.any
    6db4:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    6db8:	ldr	x0, [x0, #3864]
    6dbc:	cmp	x0, #0x0
    6dc0:	b.eq	6dd4 <__asan_backtrace_open@plt+0x164>  // b.none
    6dc4:	adrp	x0, 77000 <_Unwind_Backtrace@GCC_3.3>
    6dc8:	add	x0, x0, #0x380
    6dcc:	ldr	x0, [x0]
    6dd0:	bl	67c0 <__cxa_finalize@plt>
    6dd4:	bl	6c94 <__asan_backtrace_open@plt+0x24>
    6dd8:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    6ddc:	add	x0, x0, #0xd80
    6de0:	mov	w1, #0x1                   	// #1
    6de4:	strb	w1, [x0]
    6de8:	b	6df0 <__asan_backtrace_open@plt+0x180>
    6dec:	nop
    6df0:	ldp	x29, x30, [sp], #16
    6df4:	ret
    6df8:	stp	x29, x30, [sp, #-16]!
    6dfc:	mov	x29, sp
    6e00:	bl	6d04 <__asan_backtrace_open@plt+0x94>
    6e04:	nop
    6e08:	ldp	x29, x30, [sp], #16
    6e0c:	ret
    6e10:	str	x30, [sp, #-80]!
    6e14:	str	x0, [sp, #56]
    6e18:	str	x1, [sp, #48]
    6e1c:	str	x2, [sp, #40]
    6e20:	str	x3, [sp, #32]
    6e24:	str	x4, [sp, #24]
    6e28:	strb	w5, [sp, #23]
    6e2c:	str	xzr, [sp, #72]
    6e30:	str	xzr, [sp, #64]
    6e34:	ldrb	w0, [sp, #23]
    6e38:	cmp	w0, #0x0
    6e3c:	b.eq	6e58 <__asan_backtrace_open@plt+0x1e8>  // b.none
    6e40:	add	x1, sp, #0x40
    6e44:	add	x0, sp, #0x48
    6e48:	mov	x2, x1
    6e4c:	mov	x1, x0
    6e50:	mov	w0, #0x0                   	// #0
    6e54:	bl	20b2c <__sanitizer_set_report_fd@@Base+0x6980>
    6e58:	ldr	x0, [sp, #48]
    6e5c:	mov	w8, w0
    6e60:	ldr	x0, [sp, #72]
    6e64:	ldr	x1, [sp, #64]
    6e68:	ldrb	w7, [sp, #23]
    6e6c:	mov	x6, x1
    6e70:	mov	x5, x0
    6e74:	ldr	x4, [sp, #24]
    6e78:	ldr	x3, [sp, #32]
    6e7c:	ldr	x2, [sp, #40]
    6e80:	mov	w1, w8
    6e84:	ldr	x0, [sp, #56]
    6e88:	bl	28dd0 <OnPrint@@Base+0x37b0>
    6e8c:	nop
    6e90:	ldr	x30, [sp], #80
    6e94:	ret
    6e98:	sub	sp, sp, #0x840
    6e9c:	str	x30, [sp]
    6ea0:	str	x0, [sp, #24]
    6ea4:	str	x1, [sp, #16]
    6ea8:	bl	9110 <__asan_backtrace_open@plt+0x24a0>
    6eac:	ldrb	w0, [x0, #1]
    6eb0:	eor	w0, w0, #0x1
    6eb4:	and	w0, w0, #0xff
    6eb8:	cmp	w0, #0x0
    6ebc:	b.ne	6ef8 <__asan_backtrace_open@plt+0x288>  // b.any
    6ec0:	add	x0, sp, #0x28
    6ec4:	bl	8c24 <__asan_backtrace_open@plt+0x1fb4>
    6ec8:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
    6ecc:	ldrb	w1, [x0, #33]
    6ed0:	add	x0, sp, #0x28
    6ed4:	mov	w5, w1
    6ed8:	mov	x4, #0x0                   	// #0
    6edc:	ldr	x3, [sp, #16]
    6ee0:	ldr	x2, [sp, #24]
    6ee4:	mov	x1, #0x100                 	// #256
    6ee8:	bl	6e10 <__asan_backtrace_open@plt+0x1a0>
    6eec:	add	x0, sp, #0x28
    6ef0:	bl	28b1c <OnPrint@@Base+0x34fc>
    6ef4:	b	6efc <__asan_backtrace_open@plt+0x28c>
    6ef8:	nop
    6efc:	ldr	x30, [sp]
    6f00:	add	sp, sp, #0x840
    6f04:	ret
    6f08:	str	x30, [sp, #-48]!
    6f0c:	str	w0, [sp, #28]
    6f10:	ldr	w0, [sp, #28]
    6f14:	cmp	w0, #0x19
    6f18:	b.hi	706c <__asan_backtrace_open@plt+0x3fc>  // b.pmore
    6f1c:	adrp	x1, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    6f20:	add	x1, x1, #0xbd8
    6f24:	ldr	w0, [x1, w0, uxtw #2]
    6f28:	adr	x1, 6f34 <__asan_backtrace_open@plt+0x2c4>
    6f2c:	add	x0, x1, w0, sxtw #2
    6f30:	br	x0
    6f34:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    6f38:	add	x0, x0, #0x8f0
    6f3c:	b	70b8 <__asan_backtrace_open@plt+0x448>
    6f40:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    6f44:	add	x0, x0, #0x908
    6f48:	b	70b8 <__asan_backtrace_open@plt+0x448>
    6f4c:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    6f50:	add	x0, x0, #0x920
    6f54:	b	70b8 <__asan_backtrace_open@plt+0x448>
    6f58:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    6f5c:	add	x0, x0, #0x938
    6f60:	b	70b8 <__asan_backtrace_open@plt+0x448>
    6f64:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    6f68:	add	x0, x0, #0x950
    6f6c:	b	70b8 <__asan_backtrace_open@plt+0x448>
    6f70:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    6f74:	add	x0, x0, #0x970
    6f78:	b	70b8 <__asan_backtrace_open@plt+0x448>
    6f7c:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    6f80:	add	x0, x0, #0x988
    6f84:	b	70b8 <__asan_backtrace_open@plt+0x448>
    6f88:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    6f8c:	add	x0, x0, #0x9a8
    6f90:	b	70b8 <__asan_backtrace_open@plt+0x448>
    6f94:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    6f98:	add	x0, x0, #0x9c0
    6f9c:	b	70b8 <__asan_backtrace_open@plt+0x448>
    6fa0:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    6fa4:	add	x0, x0, #0x9d8
    6fa8:	b	70b8 <__asan_backtrace_open@plt+0x448>
    6fac:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    6fb0:	add	x0, x0, #0x9f0
    6fb4:	b	70b8 <__asan_backtrace_open@plt+0x448>
    6fb8:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    6fbc:	add	x0, x0, #0xa18
    6fc0:	b	70b8 <__asan_backtrace_open@plt+0x448>
    6fc4:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    6fc8:	add	x0, x0, #0xa40
    6fcc:	b	70b8 <__asan_backtrace_open@plt+0x448>
    6fd0:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    6fd4:	add	x0, x0, #0xa58
    6fd8:	b	70b8 <__asan_backtrace_open@plt+0x448>
    6fdc:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    6fe0:	add	x0, x0, #0xa70
    6fe4:	b	70b8 <__asan_backtrace_open@plt+0x448>
    6fe8:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    6fec:	add	x0, x0, #0xa88
    6ff0:	b	70b8 <__asan_backtrace_open@plt+0x448>
    6ff4:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    6ff8:	add	x0, x0, #0xaa0
    6ffc:	b	70b8 <__asan_backtrace_open@plt+0x448>
    7000:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7004:	add	x0, x0, #0xab0
    7008:	b	70b8 <__asan_backtrace_open@plt+0x448>
    700c:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7010:	add	x0, x0, #0xac8
    7014:	b	70b8 <__asan_backtrace_open@plt+0x448>
    7018:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    701c:	add	x0, x0, #0xae0
    7020:	b	70b8 <__asan_backtrace_open@plt+0x448>
    7024:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7028:	add	x0, x0, #0xaf8
    702c:	b	70b8 <__asan_backtrace_open@plt+0x448>
    7030:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7034:	add	x0, x0, #0xb10
    7038:	b	70b8 <__asan_backtrace_open@plt+0x448>
    703c:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7040:	add	x0, x0, #0xb28
    7044:	b	70b8 <__asan_backtrace_open@plt+0x448>
    7048:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    704c:	add	x0, x0, #0xb40
    7050:	b	70b8 <__asan_backtrace_open@plt+0x448>
    7054:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7058:	add	x0, x0, #0xb58
    705c:	b	70b8 <__asan_backtrace_open@plt+0x448>
    7060:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7064:	add	x0, x0, #0xb70
    7068:	b	70b8 <__asan_backtrace_open@plt+0x448>
    706c:	str	xzr, [sp, #40]
    7070:	str	xzr, [sp, #32]
    7074:	ldr	x1, [sp, #40]
    7078:	ldr	x0, [sp, #32]
    707c:	cmp	x1, x0
    7080:	cset	w0, eq  // eq = none
    7084:	and	w0, w0, #0xff
    7088:	and	x0, x0, #0xff
    708c:	cmp	x0, #0x0
    7090:	b.eq	70b4 <__asan_backtrace_open@plt+0x444>  // b.none
    7094:	ldr	x4, [sp, #32]
    7098:	ldr	x3, [sp, #40]
    709c:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    70a0:	add	x2, x0, #0xb80
    70a4:	mov	w1, #0x39                  	// #57
    70a8:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    70ac:	add	x0, x0, #0xba8
    70b0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    70b4:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    70b8:	ldr	x30, [sp], #48
    70bc:	ret
    70c0:	str	x30, [sp, #-48]!
    70c4:	str	w0, [sp, #28]
    70c8:	ldr	w0, [sp, #28]
    70cc:	cmp	w0, #0x19
    70d0:	b.hi	7224 <__asan_backtrace_open@plt+0x5b4>  // b.pmore
    70d4:	adrp	x1, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    70d8:	add	x1, x1, #0xd2c
    70dc:	ldr	w0, [x1, w0, uxtw #2]
    70e0:	adr	x1, 70ec <__asan_backtrace_open@plt+0x47c>
    70e4:	add	x0, x1, w0, sxtw #2
    70e8:	br	x0
    70ec:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    70f0:	add	x0, x0, #0xc40
    70f4:	b	7270 <__asan_backtrace_open@plt+0x600>
    70f8:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    70fc:	add	x0, x0, #0xc50
    7100:	b	7270 <__asan_backtrace_open@plt+0x600>
    7104:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7108:	add	x0, x0, #0x920
    710c:	b	7270 <__asan_backtrace_open@plt+0x600>
    7110:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7114:	add	x0, x0, #0xc58
    7118:	b	7270 <__asan_backtrace_open@plt+0x600>
    711c:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7120:	add	x0, x0, #0xc68
    7124:	b	7270 <__asan_backtrace_open@plt+0x600>
    7128:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    712c:	add	x0, x0, #0x970
    7130:	b	7270 <__asan_backtrace_open@plt+0x600>
    7134:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7138:	add	x0, x0, #0x988
    713c:	b	7270 <__asan_backtrace_open@plt+0x600>
    7140:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7144:	add	x0, x0, #0x9a8
    7148:	b	7270 <__asan_backtrace_open@plt+0x600>
    714c:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7150:	add	x0, x0, #0x9c0
    7154:	b	7270 <__asan_backtrace_open@plt+0x600>
    7158:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    715c:	add	x0, x0, #0x9d8
    7160:	b	7270 <__asan_backtrace_open@plt+0x600>
    7164:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7168:	add	x0, x0, #0x9f0
    716c:	b	7270 <__asan_backtrace_open@plt+0x600>
    7170:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7174:	add	x0, x0, #0xa18
    7178:	b	7270 <__asan_backtrace_open@plt+0x600>
    717c:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7180:	add	x0, x0, #0xc78
    7184:	b	7270 <__asan_backtrace_open@plt+0x600>
    7188:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    718c:	add	x0, x0, #0xc88
    7190:	b	7270 <__asan_backtrace_open@plt+0x600>
    7194:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7198:	add	x0, x0, #0xc98
    719c:	b	7270 <__asan_backtrace_open@plt+0x600>
    71a0:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    71a4:	add	x0, x0, #0xca0
    71a8:	b	7270 <__asan_backtrace_open@plt+0x600>
    71ac:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    71b0:	add	x0, x0, #0xcb0
    71b4:	b	7270 <__asan_backtrace_open@plt+0x600>
    71b8:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    71bc:	add	x0, x0, #0xcb8
    71c0:	b	7270 <__asan_backtrace_open@plt+0x600>
    71c4:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    71c8:	add	x0, x0, #0xac8
    71cc:	b	7270 <__asan_backtrace_open@plt+0x600>
    71d0:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    71d4:	add	x0, x0, #0xcc8
    71d8:	b	7270 <__asan_backtrace_open@plt+0x600>
    71dc:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    71e0:	add	x0, x0, #0xcd0
    71e4:	b	7270 <__asan_backtrace_open@plt+0x600>
    71e8:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    71ec:	add	x0, x0, #0xcd8
    71f0:	b	7270 <__asan_backtrace_open@plt+0x600>
    71f4:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    71f8:	add	x0, x0, #0xce8
    71fc:	b	7270 <__asan_backtrace_open@plt+0x600>
    7200:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7204:	add	x0, x0, #0xd08
    7208:	b	7270 <__asan_backtrace_open@plt+0x600>
    720c:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7210:	add	x0, x0, #0xd20
    7214:	b	7270 <__asan_backtrace_open@plt+0x600>
    7218:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    721c:	add	x0, x0, #0xd28
    7220:	b	7270 <__asan_backtrace_open@plt+0x600>
    7224:	str	xzr, [sp, #40]
    7228:	str	xzr, [sp, #32]
    722c:	ldr	x1, [sp, #40]
    7230:	ldr	x0, [sp, #32]
    7234:	cmp	x1, x0
    7238:	cset	w0, eq  // eq = none
    723c:	and	w0, w0, #0xff
    7240:	and	x0, x0, #0xff
    7244:	cmp	x0, #0x0
    7248:	b.eq	726c <__asan_backtrace_open@plt+0x5fc>  // b.none
    724c:	ldr	x4, [sp, #32]
    7250:	ldr	x3, [sp, #40]
    7254:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7258:	add	x2, x0, #0xb80
    725c:	mov	w1, #0x44                  	// #68
    7260:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7264:	add	x0, x0, #0xba8
    7268:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    726c:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    7270:	ldr	x30, [sp], #48
    7274:	ret
    7278:	stp	x19, x30, [sp, #-128]!
    727c:	mov	x19, x0
    7280:	str	w1, [sp, #28]
    7284:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
    7288:	ldrb	w0, [x0, #60]
    728c:	eor	w0, w0, #0x1
    7290:	and	w0, w0, #0xff
    7294:	cmp	w0, #0x0
    7298:	b.ne	73b8 <__asan_backtrace_open@plt+0x748>  // b.any
    729c:	bl	9110 <__asan_backtrace_open@plt+0x24a0>
    72a0:	ldrb	w0, [x0, #16]
    72a4:	eor	w0, w0, #0x1
    72a8:	and	w0, w0, #0xff
    72ac:	cmp	w0, #0x0
    72b0:	b.eq	72b8 <__asan_backtrace_open@plt+0x648>  // b.none
    72b4:	str	wzr, [sp, #28]
    72b8:	ldr	w0, [sp, #28]
    72bc:	bl	6f08 <__asan_backtrace_open@plt+0x298>
    72c0:	str	x0, [sp, #120]
    72c4:	mov	x0, x19
    72c8:	bl	8d48 <__asan_backtrace_open@plt+0x20d8>
    72cc:	and	w0, w0, #0xff
    72d0:	cmp	w0, #0x0
    72d4:	b.eq	7368 <__asan_backtrace_open@plt+0x6f8>  // b.none
    72d8:	mov	x0, x19
    72dc:	bl	8db4 <__asan_backtrace_open@plt+0x2144>
    72e0:	stp	x0, x1, [sp, #96]
    72e4:	add	x0, sp, #0x60
    72e8:	bl	8a64 <__asan_backtrace_open@plt+0x1df4>
    72ec:	and	w0, w0, #0xff
    72f0:	eor	w0, w0, #0x1
    72f4:	and	w0, w0, #0xff
    72f8:	cmp	w0, #0x0
    72fc:	b.eq	73a4 <__asan_backtrace_open@plt+0x734>  // b.none
    7300:	add	x0, sp, #0x20
    7304:	bl	2d0a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e20>
    7308:	add	x0, sp, #0x60
    730c:	bl	8a88 <__asan_backtrace_open@plt+0x1e18>
    7310:	bl	1ca68 <__sanitizer_set_report_fd@@Base+0x28bc>
    7314:	str	x0, [sp, #80]
    7318:	add	x0, sp, #0x60
    731c:	bl	8aa0 <__asan_backtrace_open@plt+0x1e30>
    7320:	str	w0, [sp, #88]
    7324:	add	x0, sp, #0x60
    7328:	bl	8ab8 <__asan_backtrace_open@plt+0x1e48>
    732c:	str	w0, [sp, #92]
    7330:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7334:	add	x0, x0, #0x8a8
    7338:	bl	1ca68 <__sanitizer_set_report_fd@@Base+0x28bc>
    733c:	str	x0, [sp, #64]
    7340:	bl	ee24 <__ubsan_handle_cfi_bad_type@@Base+0x708>
    7344:	mov	x1, x0
    7348:	add	x0, sp, #0x20
    734c:	mov	x2, x1
    7350:	mov	x1, x0
    7354:	ldr	x0, [sp, #120]
    7358:	bl	292cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x44>
    735c:	add	x0, sp, #0x20
    7360:	bl	2d0d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e50>
    7364:	b	73bc <__asan_backtrace_open@plt+0x74c>
    7368:	mov	x0, x19
    736c:	bl	8d90 <__asan_backtrace_open@plt+0x2120>
    7370:	and	w0, w0, #0xff
    7374:	cmp	w0, #0x0
    7378:	b.eq	73a4 <__asan_backtrace_open@plt+0x734>  // b.none
    737c:	mov	x0, x19
    7380:	bl	8e94 <__asan_backtrace_open@plt+0x2224>
    7384:	add	x0, x0, #0x8
    7388:	str	x0, [sp, #112]
    738c:	bl	ee24 <__ubsan_handle_cfi_bad_type@@Base+0x708>
    7390:	mov	x2, x0
    7394:	ldr	x1, [sp, #112]
    7398:	ldr	x0, [sp, #120]
    739c:	bl	292cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x44>
    73a0:	b	73bc <__asan_backtrace_open@plt+0x74c>
    73a4:	bl	ee24 <__ubsan_handle_cfi_bad_type@@Base+0x708>
    73a8:	mov	x1, x0
    73ac:	ldr	x0, [sp, #120]
    73b0:	bl	13e3c <__sancov_default_options@@Base+0x3a90>
    73b4:	b	73bc <__asan_backtrace_open@plt+0x74c>
    73b8:	nop
    73bc:	ldp	x19, x30, [sp], #128
    73c0:	ret
    73c4:	str	x30, [sp, #-32]!
    73c8:	str	x0, [sp, #24]
    73cc:	ldr	x0, [sp, #24]
    73d0:	bl	9134 <__asan_backtrace_open@plt+0x24c4>
    73d4:	nop
    73d8:	ldr	x30, [sp], #32
    73dc:	ret
    73e0:	str	x30, [sp, #-32]!
    73e4:	str	x0, [sp, #24]
    73e8:	ldr	x0, [sp, #24]
    73ec:	bl	9240 <__asan_backtrace_open@plt+0x25d0>
    73f0:	ldr	x30, [sp], #32
    73f4:	ret
    73f8:	str	x30, [sp, #-32]!
    73fc:	str	x0, [sp, #24]
    7400:	ldr	x0, [sp, #24]
    7404:	bl	91d8 <__asan_backtrace_open@plt+0x2568>
    7408:	ldr	x30, [sp], #32
    740c:	ret
    7410:	str	x30, [sp, #-32]!
    7414:	str	x0, [sp, #24]
    7418:	bl	eefc <__ubsan_handle_cfi_bad_type@@Base+0x7e0>
    741c:	bl	2e194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f0c>
    7420:	ldr	x1, [sp, #24]
    7424:	bl	2e48c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5204>
    7428:	ldr	x30, [sp], #32
    742c:	ret
    7430:	str	x30, [sp, #-96]!
    7434:	str	x0, [sp, #56]
    7438:	str	x1, [sp, #48]
    743c:	ldr	x0, [sp, #48]
    7440:	bl	8ad0 <__asan_backtrace_open@plt+0x1e60>
    7444:	mov	x1, x0
    7448:	add	x0, sp, #0x40
    744c:	bl	8f88 <__asan_backtrace_open@plt+0x2318>
    7450:	add	x2, sp, #0x10
    7454:	add	x3, sp, #0x40
    7458:	ldp	x0, x1, [x3]
    745c:	stp	x0, x1, [x2]
    7460:	ldp	x0, x1, [x3, #16]
    7464:	stp	x0, x1, [x2, #16]
    7468:	add	x0, sp, #0x10
    746c:	mov	x1, x0
    7470:	ldr	x0, [sp, #56]
    7474:	bl	9044 <__asan_backtrace_open@plt+0x23d4>
    7478:	ldr	x30, [sp], #96
    747c:	ret
    7480:	str	x30, [sp, #-192]!
    7484:	str	x0, [sp, #56]
    7488:	str	x1, [sp, #48]
    748c:	ldr	x0, [sp, #48]
    7490:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
    7494:	bl	8b24 <__asan_backtrace_open@plt+0x1eb4>
    7498:	and	w0, w0, #0xff
    749c:	cmp	w0, #0x0
    74a0:	b.eq	74ec <__asan_backtrace_open@plt+0x87c>  // b.none
    74a4:	ldr	x0, [sp, #48]
    74a8:	bl	fc54 <__ubsan_get_current_report_data@@Base+0x970>
    74ac:	add	x4, sp, #0x40
    74b0:	mov	x2, x0
    74b4:	mov	x3, x1
    74b8:	mov	x0, x4
    74bc:	bl	8fe4 <__asan_backtrace_open@plt+0x2374>
    74c0:	add	x2, sp, #0x10
    74c4:	add	x3, sp, #0x40
    74c8:	ldp	x0, x1, [x3]
    74cc:	stp	x0, x1, [x2]
    74d0:	ldp	x0, x1, [x3, #16]
    74d4:	stp	x0, x1, [x2, #16]
    74d8:	add	x0, sp, #0x10
    74dc:	mov	x1, x0
    74e0:	ldr	x0, [sp, #56]
    74e4:	bl	9044 <__asan_backtrace_open@plt+0x23d4>
    74e8:	b	75dc <__asan_backtrace_open@plt+0x96c>
    74ec:	ldr	x0, [sp, #48]
    74f0:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
    74f4:	bl	8b68 <__asan_backtrace_open@plt+0x1ef8>
    74f8:	and	w0, w0, #0xff
    74fc:	cmp	w0, #0x0
    7500:	b.eq	754c <__asan_backtrace_open@plt+0x8dc>  // b.none
    7504:	ldr	x0, [sp, #48]
    7508:	bl	fe6c <__ubsan_get_current_report_data@@Base+0xb88>
    750c:	add	x4, sp, #0x60
    7510:	mov	x2, x0
    7514:	mov	x3, x1
    7518:	mov	x0, x4
    751c:	bl	8fb4 <__asan_backtrace_open@plt+0x2344>
    7520:	add	x2, sp, #0x10
    7524:	add	x3, sp, #0x60
    7528:	ldp	x0, x1, [x3]
    752c:	stp	x0, x1, [x2]
    7530:	ldp	x0, x1, [x3, #16]
    7534:	stp	x0, x1, [x2, #16]
    7538:	add	x0, sp, #0x10
    753c:	mov	x1, x0
    7540:	ldr	x0, [sp, #56]
    7544:	bl	9044 <__asan_backtrace_open@plt+0x23d4>
    7548:	b	75dc <__asan_backtrace_open@plt+0x96c>
    754c:	ldr	x0, [sp, #48]
    7550:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
    7554:	bl	8bac <__asan_backtrace_open@plt+0x1f3c>
    7558:	and	w0, w0, #0xff
    755c:	cmp	w0, #0x0
    7560:	b.eq	75a0 <__asan_backtrace_open@plt+0x930>  // b.none
    7564:	ldr	x0, [sp, #48]
    7568:	bl	10064 <__ubsan_get_current_report_data@@Base+0xd80>
    756c:	add	x0, sp, #0x80
    7570:	bl	9014 <__asan_backtrace_open@plt+0x23a4>
    7574:	add	x2, sp, #0x10
    7578:	add	x3, sp, #0x80
    757c:	ldp	x0, x1, [x3]
    7580:	stp	x0, x1, [x2]
    7584:	ldp	x0, x1, [x3, #16]
    7588:	stp	x0, x1, [x2, #16]
    758c:	add	x0, sp, #0x10
    7590:	mov	x1, x0
    7594:	ldr	x0, [sp, #56]
    7598:	bl	9044 <__asan_backtrace_open@plt+0x23d4>
    759c:	b	75dc <__asan_backtrace_open@plt+0x96c>
    75a0:	add	x2, sp, #0xa0
    75a4:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    75a8:	add	x1, x0, #0xd98
    75ac:	mov	x0, x2
    75b0:	bl	8f88 <__asan_backtrace_open@plt+0x2318>
    75b4:	add	x2, sp, #0x10
    75b8:	add	x3, sp, #0xa0
    75bc:	ldp	x0, x1, [x3]
    75c0:	stp	x0, x1, [x2]
    75c4:	ldp	x0, x1, [x3, #16]
    75c8:	stp	x0, x1, [x2, #16]
    75cc:	add	x0, sp, #0x10
    75d0:	mov	x1, x0
    75d4:	ldr	x0, [sp, #56]
    75d8:	bl	9044 <__asan_backtrace_open@plt+0x23d4>
    75dc:	ldr	x0, [sp, #56]
    75e0:	ldr	x30, [sp], #192
    75e4:	ret
    75e8:	str	x30, [sp, #-48]!
    75ec:	str	x0, [sp, #40]
    75f0:	stp	x2, x3, [sp, #16]
    75f4:	ldr	x0, [sp, #24]
    75f8:	lsr	x6, x0, #32
    75fc:	mov	x7, #0x0                   	// #0
    7600:	mov	w2, w6
    7604:	ldr	x0, [sp, #24]
    7608:	mov	x8, x0
    760c:	mov	x9, #0x0                   	// #0
    7610:	mov	w3, w8
    7614:	ldr	x0, [sp, #24]
    7618:	lsl	x0, x0, #32
    761c:	ldr	x1, [sp, #16]
    7620:	lsr	x4, x1, #32
    7624:	orr	x4, x0, x4
    7628:	ldr	x0, [sp, #24]
    762c:	lsr	x5, x0, #32
    7630:	mov	w1, w4
    7634:	ldr	x0, [sp, #16]
    7638:	mov	w5, w0
    763c:	mov	w4, w1
    7640:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7644:	add	x1, x0, #0xda8
    7648:	ldr	x0, [sp, #40]
    764c:	bl	25bdc <OnPrint@@Base+0x5bc>
    7650:	nop
    7654:	ldr	x30, [sp], #48
    7658:	ret
    765c:	stp	x19, x20, [sp, #-96]!
    7660:	stp	x21, x22, [sp, #16]
    7664:	str	x30, [sp, #32]
    7668:	str	x0, [sp, #56]
    766c:	mov	x19, x1
    7670:	mov	x0, x19
    7674:	bl	8d30 <__asan_backtrace_open@plt+0x20c0>
    7678:	cmp	w0, #0x3
    767c:	b.eq	7750 <__asan_backtrace_open@plt+0xae0>  // b.none
    7680:	cmp	w0, #0x3
    7684:	b.gt	7838 <__asan_backtrace_open@plt+0xbc8>
    7688:	cmp	w0, #0x2
    768c:	b.eq	7730 <__asan_backtrace_open@plt+0xac0>  // b.none
    7690:	cmp	w0, #0x2
    7694:	b.gt	7838 <__asan_backtrace_open@plt+0xbc8>
    7698:	cmp	w0, #0x0
    769c:	b.eq	7824 <__asan_backtrace_open@plt+0xbb4>  // b.none
    76a0:	cmp	w0, #0x1
    76a4:	b.ne	7838 <__asan_backtrace_open@plt+0xbc8>  // b.any
    76a8:	mov	x0, x19
    76ac:	bl	8db4 <__asan_backtrace_open@plt+0x2144>
    76b0:	stp	x0, x1, [sp, #72]
    76b4:	add	x0, sp, #0x48
    76b8:	bl	8a64 <__asan_backtrace_open@plt+0x1df4>
    76bc:	and	w0, w0, #0xff
    76c0:	cmp	w0, #0x0
    76c4:	b.eq	76dc <__asan_backtrace_open@plt+0xa6c>  // b.none
    76c8:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    76cc:	add	x1, x0, #0xd98
    76d0:	ldr	x0, [sp, #56]
    76d4:	bl	25bdc <OnPrint@@Base+0x5bc>
    76d8:	b	7838 <__asan_backtrace_open@plt+0xbc8>
    76dc:	add	x0, sp, #0x48
    76e0:	bl	8a88 <__asan_backtrace_open@plt+0x1e18>
    76e4:	mov	x19, x0
    76e8:	add	x0, sp, #0x48
    76ec:	bl	8aa0 <__asan_backtrace_open@plt+0x1e30>
    76f0:	mov	w21, w0
    76f4:	add	x0, sp, #0x48
    76f8:	bl	8ab8 <__asan_backtrace_open@plt+0x1e48>
    76fc:	mov	w22, w0
    7700:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
    7704:	ldrb	w20, [x0, #181]
    7708:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
    770c:	ldr	x0, [x0, #24]
    7710:	mov	x5, x0
    7714:	mov	w4, w20
    7718:	mov	w3, w22
    771c:	mov	w2, w21
    7720:	mov	x1, x19
    7724:	ldr	x0, [sp, #56]
    7728:	bl	2a944 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16bc>
    772c:	b	7838 <__asan_backtrace_open@plt+0xbc8>
    7730:	mov	x0, x19
    7734:	bl	8e24 <__asan_backtrace_open@plt+0x21b4>
    7738:	mov	x2, x0
    773c:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7740:	add	x1, x0, #0xdc0
    7744:	ldr	x0, [sp, #56]
    7748:	bl	25bdc <OnPrint@@Base+0x5bc>
    774c:	b	7838 <__asan_backtrace_open@plt+0xbc8>
    7750:	mov	x0, x19
    7754:	bl	8e94 <__asan_backtrace_open@plt+0x2224>
    7758:	add	x0, x0, #0x8
    775c:	str	x0, [sp, #88]
    7760:	ldr	x0, [sp, #88]
    7764:	ldr	x0, [x0, #48]
    7768:	cmp	x0, #0x0
    776c:	b.eq	77b8 <__asan_backtrace_open@plt+0xb48>  // b.none
    7770:	ldr	x0, [sp, #88]
    7774:	ldr	x19, [x0, #48]
    7778:	ldr	x0, [sp, #88]
    777c:	ldr	w20, [x0, #56]
    7780:	ldr	x0, [sp, #88]
    7784:	ldr	w21, [x0, #60]
    7788:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
    778c:	ldrb	w22, [x0, #181]
    7790:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
    7794:	ldr	x0, [x0, #24]
    7798:	mov	x5, x0
    779c:	mov	w4, w22
    77a0:	mov	w3, w21
    77a4:	mov	w2, w20
    77a8:	mov	x1, x19
    77ac:	ldr	x0, [sp, #56]
    77b0:	bl	2a944 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16bc>
    77b4:	b	7838 <__asan_backtrace_open@plt+0xbc8>
    77b8:	ldr	x0, [sp, #88]
    77bc:	ldr	x0, [x0, #8]
    77c0:	cmp	x0, #0x0
    77c4:	b.eq	7804 <__asan_backtrace_open@plt+0xb94>  // b.none
    77c8:	ldr	x0, [sp, #88]
    77cc:	ldr	x19, [x0, #8]
    77d0:	ldr	x0, [sp, #88]
    77d4:	ldr	x20, [x0, #16]
    77d8:	ldr	x0, [sp, #88]
    77dc:	ldr	w21, [x0, #24]
    77e0:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
    77e4:	ldr	x0, [x0, #24]
    77e8:	mov	x4, x0
    77ec:	mov	w3, w21
    77f0:	mov	x2, x20
    77f4:	mov	x1, x19
    77f8:	ldr	x0, [sp, #56]
    77fc:	bl	2aa38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17b0>
    7800:	b	7838 <__asan_backtrace_open@plt+0xbc8>
    7804:	ldr	x0, [sp, #88]
    7808:	ldr	x0, [x0]
    780c:	mov	x2, x0
    7810:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7814:	add	x1, x0, #0xdc0
    7818:	ldr	x0, [sp, #56]
    781c:	bl	25bdc <OnPrint@@Base+0x5bc>
    7820:	b	7838 <__asan_backtrace_open@plt+0xbc8>
    7824:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7828:	add	x1, x0, #0xd98
    782c:	ldr	x0, [sp, #56]
    7830:	bl	25bdc <OnPrint@@Base+0x5bc>
    7834:	nop
    7838:	ldp	x21, x22, [sp, #16]
    783c:	ldr	x30, [sp, #32]
    7840:	ldp	x19, x20, [sp], #96
    7844:	ret
    7848:	str	x30, [sp, #-96]!
    784c:	str	x0, [sp, #40]
    7850:	str	x1, [sp, #32]
    7854:	str	x2, [sp, #24]
    7858:	ldr	x0, [sp, #32]
    785c:	str	x0, [sp, #88]
    7860:	ldr	x0, [sp, #88]
    7864:	ldrb	w0, [x0]
    7868:	cmp	w0, #0x0
    786c:	b.eq	7abc <__asan_backtrace_open@plt+0xe4c>  // b.none
    7870:	ldr	x0, [sp, #88]
    7874:	ldrb	w0, [x0]
    7878:	cmp	w0, #0x25
    787c:	b.eq	78a0 <__asan_backtrace_open@plt+0xc30>  // b.none
    7880:	ldr	x0, [sp, #88]
    7884:	ldrb	w0, [x0]
    7888:	mov	w2, w0
    788c:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7890:	add	x1, x0, #0xdc8
    7894:	ldr	x0, [sp, #40]
    7898:	bl	25bdc <OnPrint@@Base+0x5bc>
    789c:	b	7aac <__asan_backtrace_open@plt+0xe3c>
    78a0:	ldr	x0, [sp, #88]
    78a4:	add	x0, x0, #0x1
    78a8:	str	x0, [sp, #88]
    78ac:	ldr	x0, [sp, #88]
    78b0:	ldrb	w0, [x0]
    78b4:	and	x0, x0, #0xff
    78b8:	lsl	x0, x0, #5
    78bc:	sub	x0, x0, #0x600
    78c0:	ldr	x1, [sp, #24]
    78c4:	add	x0, x1, x0
    78c8:	str	x0, [sp, #80]
    78cc:	ldr	x0, [sp, #80]
    78d0:	ldr	w0, [x0]
    78d4:	cmp	w0, #0x5
    78d8:	b.eq	7a8c <__asan_backtrace_open@plt+0xe1c>  // b.none
    78dc:	cmp	w0, #0x5
    78e0:	b.gt	7aac <__asan_backtrace_open@plt+0xe3c>
    78e4:	cmp	w0, #0x4
    78e8:	b.eq	7a50 <__asan_backtrace_open@plt+0xde0>  // b.none
    78ec:	cmp	w0, #0x4
    78f0:	b.gt	7aac <__asan_backtrace_open@plt+0xe3c>
    78f4:	cmp	w0, #0x3
    78f8:	b.eq	797c <__asan_backtrace_open@plt+0xd0c>  // b.none
    78fc:	cmp	w0, #0x3
    7900:	b.gt	7aac <__asan_backtrace_open@plt+0xe3c>
    7904:	cmp	w0, #0x2
    7908:	b.eq	7a00 <__asan_backtrace_open@plt+0xd90>  // b.none
    790c:	cmp	w0, #0x2
    7910:	b.gt	7aac <__asan_backtrace_open@plt+0xe3c>
    7914:	cmp	w0, #0x0
    7918:	b.eq	7928 <__asan_backtrace_open@plt+0xcb8>  // b.none
    791c:	cmp	w0, #0x1
    7920:	b.eq	7948 <__asan_backtrace_open@plt+0xcd8>  // b.none
    7924:	b	7aac <__asan_backtrace_open@plt+0xe3c>
    7928:	ldr	x0, [sp, #80]
    792c:	ldr	x0, [x0, #16]
    7930:	mov	x2, x0
    7934:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7938:	add	x1, x0, #0xdd0
    793c:	ldr	x0, [sp, #40]
    7940:	bl	25bdc <OnPrint@@Base+0x5bc>
    7944:	b	7aac <__asan_backtrace_open@plt+0xe3c>
    7948:	bl	2e194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f0c>
    794c:	mov	x2, x0
    7950:	ldr	x0, [sp, #80]
    7954:	ldr	x0, [x0, #16]
    7958:	mov	x1, x0
    795c:	mov	x0, x2
    7960:	bl	2e884 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55fc>
    7964:	mov	x2, x0
    7968:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    796c:	add	x1, x0, #0xdd8
    7970:	ldr	x0, [sp, #40]
    7974:	bl	25bdc <OnPrint@@Base+0x5bc>
    7978:	b	7aac <__asan_backtrace_open@plt+0xe3c>
    797c:	ldr	x0, [sp, #80]
    7980:	ldp	x0, x1, [x0, #16]
    7984:	cmn	x1, #0x1
    7988:	b.lt	79e4 <__asan_backtrace_open@plt+0xd74>  // b.tstop
    798c:	cmn	x1, #0x1
    7990:	b.ne	79a0 <__asan_backtrace_open@plt+0xd30>  // b.any
    7994:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
    7998:	cmp	x0, x2
    799c:	b.cc	79e4 <__asan_backtrace_open@plt+0xd74>  // b.lo, b.ul, b.last
    79a0:	ldr	x0, [sp, #80]
    79a4:	ldp	x0, x1, [x0, #16]
    79a8:	cmp	x1, #0x0
    79ac:	b.gt	79e4 <__asan_backtrace_open@plt+0xd74>
    79b0:	cmp	x1, #0x0
    79b4:	b.ne	79c4 <__asan_backtrace_open@plt+0xd54>  // b.any
    79b8:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    79bc:	cmp	x0, x2
    79c0:	b.hi	79e4 <__asan_backtrace_open@plt+0xd74>  // b.pmore
    79c4:	ldr	x0, [sp, #80]
    79c8:	ldp	x0, x1, [x0, #16]
    79cc:	mov	x2, x0
    79d0:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    79d4:	add	x1, x0, #0xde0
    79d8:	ldr	x0, [sp, #40]
    79dc:	bl	25bdc <OnPrint@@Base+0x5bc>
    79e0:	b	7aac <__asan_backtrace_open@plt+0xe3c>
    79e4:	ldr	x0, [sp, #80]
    79e8:	ldp	x0, x1, [x0, #16]
    79ec:	mov	x2, x0
    79f0:	mov	x3, x1
    79f4:	ldr	x0, [sp, #40]
    79f8:	bl	75e8 <__asan_backtrace_open@plt+0x978>
    79fc:	b	7aac <__asan_backtrace_open@plt+0xe3c>
    7a00:	ldr	x0, [sp, #80]
    7a04:	ldp	x0, x1, [x0, #16]
    7a08:	cmp	x1, #0x0
    7a0c:	b.ne	7a34 <__asan_backtrace_open@plt+0xdc4>  // b.any
    7a10:	cmp	x1, #0x0
    7a14:	ldr	x0, [sp, #80]
    7a18:	ldp	x0, x1, [x0, #16]
    7a1c:	mov	x2, x0
    7a20:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7a24:	add	x1, x0, #0xde8
    7a28:	ldr	x0, [sp, #40]
    7a2c:	bl	25bdc <OnPrint@@Base+0x5bc>
    7a30:	b	7aac <__asan_backtrace_open@plt+0xe3c>
    7a34:	ldr	x0, [sp, #80]
    7a38:	ldp	x0, x1, [x0, #16]
    7a3c:	mov	x2, x0
    7a40:	mov	x3, x1
    7a44:	ldr	x0, [sp, #40]
    7a48:	bl	75e8 <__asan_backtrace_open@plt+0x978>
    7a4c:	b	7aac <__asan_backtrace_open@plt+0xe3c>
    7a50:	ldr	x0, [sp, #80]
    7a54:	ldr	q0, [x0, #16]
    7a58:	add	x3, sp, #0x30
    7a5c:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7a60:	add	x2, x0, #0xdf0
    7a64:	mov	x1, #0x20                  	// #32
    7a68:	mov	x0, x3
    7a6c:	bl	6940 <snprintf@plt>
    7a70:	add	x0, sp, #0x30
    7a74:	mov	x2, x0
    7a78:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7a7c:	add	x1, x0, #0xdd0
    7a80:	ldr	x0, [sp, #40]
    7a84:	bl	25bdc <OnPrint@@Base+0x5bc>
    7a88:	b	7aac <__asan_backtrace_open@plt+0xe3c>
    7a8c:	ldr	x0, [sp, #80]
    7a90:	ldr	x0, [x0, #16]
    7a94:	mov	x2, x0
    7a98:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7a9c:	add	x1, x0, #0xdc0
    7aa0:	ldr	x0, [sp, #40]
    7aa4:	bl	25bdc <OnPrint@@Base+0x5bc>
    7aa8:	nop
    7aac:	ldr	x0, [sp, #88]
    7ab0:	add	x0, x0, #0x1
    7ab4:	str	x0, [sp, #88]
    7ab8:	b	7860 <__asan_backtrace_open@plt+0xbf0>
    7abc:	nop
    7ac0:	ldr	x30, [sp], #96
    7ac4:	ret
    7ac8:	stp	x19, x30, [sp, #-192]!
    7acc:	str	x0, [sp, #40]
    7ad0:	str	x1, [sp, #32]
    7ad4:	str	w2, [sp, #28]
    7ad8:	str	xzr, [sp, #184]
    7adc:	str	wzr, [sp, #180]
    7ae0:	ldr	w1, [sp, #180]
    7ae4:	ldr	w0, [sp, #28]
    7ae8:	cmp	w1, w0
    7aec:	b.eq	7bf8 <__asan_backtrace_open@plt+0xf88>  // b.none
    7af0:	ldr	w1, [sp, #180]
    7af4:	mov	x0, x1
    7af8:	lsl	x0, x0, #1
    7afc:	add	x0, x0, x1
    7b00:	lsl	x0, x0, #2
    7b04:	sub	x0, x0, x1
    7b08:	lsl	x0, x0, #3
    7b0c:	mov	x1, x0
    7b10:	ldr	x0, [sp, #32]
    7b14:	add	x0, x0, x1
    7b18:	add	x1, sp, #0x38
    7b1c:	mov	x8, x1
    7b20:	bl	8f38 <__asan_backtrace_open@plt+0x22c8>
    7b24:	add	x0, sp, #0x38
    7b28:	bl	8e24 <__asan_backtrace_open@plt+0x21b4>
    7b2c:	mov	x1, x0
    7b30:	ldr	x0, [sp, #40]
    7b34:	cmp	x0, x1
    7b38:	b.cs	7bb0 <__asan_backtrace_open@plt+0xf40>  // b.hs, b.nlast
    7b3c:	ldr	x0, [sp, #184]
    7b40:	cmp	x0, #0x0
    7b44:	b.eq	7ba8 <__asan_backtrace_open@plt+0xf38>  // b.none
    7b48:	add	x0, sp, #0x60
    7b4c:	mov	x8, x0
    7b50:	ldr	x0, [sp, #184]
    7b54:	bl	8f04 <__asan_backtrace_open@plt+0x2294>
    7b58:	add	x0, sp, #0x60
    7b5c:	bl	8e24 <__asan_backtrace_open@plt+0x21b4>
    7b60:	mov	x19, x0
    7b64:	ldr	w1, [sp, #180]
    7b68:	mov	x0, x1
    7b6c:	lsl	x0, x0, #1
    7b70:	add	x0, x0, x1
    7b74:	lsl	x0, x0, #2
    7b78:	sub	x0, x0, x1
    7b7c:	lsl	x0, x0, #3
    7b80:	mov	x1, x0
    7b84:	ldr	x0, [sp, #32]
    7b88:	add	x0, x0, x1
    7b8c:	add	x1, sp, #0x88
    7b90:	mov	x8, x1
    7b94:	bl	8f04 <__asan_backtrace_open@plt+0x2294>
    7b98:	add	x0, sp, #0x88
    7b9c:	bl	8e24 <__asan_backtrace_open@plt+0x21b4>
    7ba0:	cmp	x19, x0
    7ba4:	b.ls	7bb0 <__asan_backtrace_open@plt+0xf40>  // b.plast
    7ba8:	mov	w0, #0x1                   	// #1
    7bac:	b	7bb4 <__asan_backtrace_open@plt+0xf44>
    7bb0:	mov	w0, #0x0                   	// #0
    7bb4:	cmp	w0, #0x0
    7bb8:	b.eq	7be8 <__asan_backtrace_open@plt+0xf78>  // b.none
    7bbc:	ldr	w1, [sp, #180]
    7bc0:	mov	x0, x1
    7bc4:	lsl	x0, x0, #1
    7bc8:	add	x0, x0, x1
    7bcc:	lsl	x0, x0, #2
    7bd0:	sub	x0, x0, x1
    7bd4:	lsl	x0, x0, #3
    7bd8:	mov	x1, x0
    7bdc:	ldr	x0, [sp, #32]
    7be0:	add	x0, x0, x1
    7be4:	str	x0, [sp, #184]
    7be8:	ldr	w0, [sp, #180]
    7bec:	add	w0, w0, #0x1
    7bf0:	str	w0, [sp, #180]
    7bf4:	b	7ae0 <__asan_backtrace_open@plt+0xe70>
    7bf8:	ldr	x0, [sp, #184]
    7bfc:	ldp	x19, x30, [sp], #192
    7c00:	ret
    7c04:	sub	sp, sp, #0x10
    7c08:	str	x0, [sp, #8]
    7c0c:	str	x1, [sp]
    7c10:	ldr	x1, [sp, #8]
    7c14:	ldr	x0, [sp]
    7c18:	cmp	x1, x0
    7c1c:	b.cc	7c30 <__asan_backtrace_open@plt+0xfc0>  // b.lo, b.ul, b.last
    7c20:	ldr	x1, [sp, #8]
    7c24:	ldr	x0, [sp]
    7c28:	sub	x0, x1, x0
    7c2c:	b	7c34 <__asan_backtrace_open@plt+0xfc4>
    7c30:	mov	x0, #0x0                   	// #0
    7c34:	add	sp, sp, #0x10
    7c38:	ret
    7c3c:	sub	sp, sp, #0x20
    7c40:	str	x0, [sp, #8]
    7c44:	str	x1, [sp]
    7c48:	mov	x0, #0xffffffffffffffff    	// #-1
    7c4c:	str	x0, [sp, #24]
    7c50:	ldr	x0, [sp]
    7c54:	mvn	x0, x0
    7c58:	ldr	x1, [sp, #8]
    7c5c:	cmp	x1, x0
    7c60:	b.hi	7c74 <__asan_backtrace_open@plt+0x1004>  // b.pmore
    7c64:	ldr	x1, [sp, #8]
    7c68:	ldr	x0, [sp]
    7c6c:	add	x0, x1, x0
    7c70:	b	7c78 <__asan_backtrace_open@plt+0x1008>
    7c74:	mov	x0, #0xffffffffffffffff    	// #-1
    7c78:	add	sp, sp, #0x20
    7c7c:	ret
    7c80:	sub	sp, sp, #0x1d0
    7c84:	str	x30, [sp]
    7c88:	str	x0, [sp, #56]
    7c8c:	str	x1, [sp, #48]
    7c90:	str	x2, [sp, #40]
    7c94:	str	w3, [sp, #36]
    7c98:	str	x4, [sp, #24]
    7c9c:	mov	w0, #0x4                   	// #4
    7ca0:	str	w0, [sp, #396]
    7ca4:	mov	x1, #0x4                   	// #4
    7ca8:	ldr	x0, [sp, #48]
    7cac:	bl	7c04 <__asan_backtrace_open@plt+0xf94>
    7cb0:	str	x0, [sp, #456]
    7cb4:	mov	x1, #0x4                   	// #4
    7cb8:	ldr	x0, [sp, #48]
    7cbc:	bl	7c3c <__asan_backtrace_open@plt+0xfcc>
    7cc0:	str	x0, [sp, #448]
    7cc4:	ldr	x0, [sp, #456]
    7cc8:	str	x0, [sp, #384]
    7ccc:	str	wzr, [sp, #444]
    7cd0:	ldr	w1, [sp, #444]
    7cd4:	ldr	w0, [sp, #36]
    7cd8:	cmp	w1, w0
    7cdc:	b.cs	7d80 <__asan_backtrace_open@plt+0x1110>  // b.hs, b.nlast
    7ce0:	ldr	w1, [sp, #444]
    7ce4:	mov	x0, x1
    7ce8:	lsl	x0, x0, #1
    7cec:	add	x0, x0, x1
    7cf0:	lsl	x0, x0, #2
    7cf4:	sub	x0, x0, x1
    7cf8:	lsl	x0, x0, #3
    7cfc:	mov	x1, x0
    7d00:	ldr	x0, [sp, #40]
    7d04:	add	x0, x0, x1
    7d08:	add	x1, sp, #0x60
    7d0c:	mov	x8, x1
    7d10:	bl	8f04 <__asan_backtrace_open@plt+0x2294>
    7d14:	add	x0, sp, #0x60
    7d18:	bl	8e24 <__asan_backtrace_open@plt+0x21b4>
    7d1c:	ldr	x1, [sp, #456]
    7d20:	bl	9374 <__asan_backtrace_open@plt+0x2704>
    7d24:	str	x0, [sp, #456]
    7d28:	ldr	w1, [sp, #444]
    7d2c:	mov	x0, x1
    7d30:	lsl	x0, x0, #1
    7d34:	add	x0, x0, x1
    7d38:	lsl	x0, x0, #2
    7d3c:	sub	x0, x0, x1
    7d40:	lsl	x0, x0, #3
    7d44:	mov	x1, x0
    7d48:	ldr	x0, [sp, #40]
    7d4c:	add	x0, x0, x1
    7d50:	add	x1, sp, #0x88
    7d54:	mov	x8, x1
    7d58:	bl	8f38 <__asan_backtrace_open@plt+0x22c8>
    7d5c:	add	x0, sp, #0x88
    7d60:	bl	8e24 <__asan_backtrace_open@plt+0x21b4>
    7d64:	ldr	x1, [sp, #448]
    7d68:	bl	93a4 <__asan_backtrace_open@plt+0x2734>
    7d6c:	str	x0, [sp, #448]
    7d70:	ldr	w0, [sp, #444]
    7d74:	add	w0, w0, #0x1
    7d78:	str	w0, [sp, #444]
    7d7c:	b	7cd0 <__asan_backtrace_open@plt+0x1060>
    7d80:	mov	w0, #0x20                  	// #32
    7d84:	str	w0, [sp, #380]
    7d88:	ldr	x1, [sp, #448]
    7d8c:	ldr	x0, [sp, #456]
    7d90:	sub	x0, x1, x0
    7d94:	cmp	x0, #0x20
    7d98:	b.ls	7db0 <__asan_backtrace_open@plt+0x1140>  // b.plast
    7d9c:	ldr	x0, [sp, #448]
    7da0:	sub	x0, x0, #0x20
    7da4:	ldr	x1, [sp, #384]
    7da8:	bl	9374 <__asan_backtrace_open@plt+0x2704>
    7dac:	str	x0, [sp, #456]
    7db0:	mov	x1, #0x20                  	// #32
    7db4:	ldr	x0, [sp, #456]
    7db8:	bl	7c3c <__asan_backtrace_open@plt+0xfcc>
    7dbc:	str	x0, [sp, #448]
    7dc0:	ldr	x1, [sp, #448]
    7dc4:	ldr	x0, [sp, #456]
    7dc8:	sub	x0, x1, x0
    7dcc:	mov	x1, x0
    7dd0:	ldr	x0, [sp, #456]
    7dd4:	bl	23908 <__sanitizer_set_report_fd@@Base+0x975c>
    7dd8:	and	w0, w0, #0xff
    7ddc:	eor	w0, w0, #0x1
    7de0:	and	w0, w0, #0xff
    7de4:	cmp	w0, #0x0
    7de8:	b.eq	7dfc <__asan_backtrace_open@plt+0x118c>  // b.none
    7dec:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7df0:	add	x0, x0, #0xdf8
    7df4:	bl	259c8 <OnPrint@@Base+0x3a8>
    7df8:	b	8268 <__asan_backtrace_open@plt+0x15f8>
    7dfc:	add	x0, sp, #0x40
    7e00:	mov	x1, #0x400                 	// #1024
    7e04:	bl	89fc <__asan_backtrace_open@plt+0x1d8c>
    7e08:	ldr	x0, [sp, #456]
    7e0c:	str	x0, [sp, #432]
    7e10:	ldr	x1, [sp, #432]
    7e14:	ldr	x0, [sp, #448]
    7e18:	cmp	x1, x0
    7e1c:	b.eq	7e80 <__asan_backtrace_open@plt+0x1210>  // b.none
    7e20:	ldr	x0, [sp, #432]
    7e24:	ldrb	w0, [x0]
    7e28:	strb	w0, [sp, #379]
    7e2c:	ldr	x0, [sp, #432]
    7e30:	and	x0, x0, #0x7
    7e34:	cmp	x0, #0x0
    7e38:	b.ne	7e48 <__asan_backtrace_open@plt+0x11d8>  // b.any
    7e3c:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7e40:	add	x0, x0, #0xe18
    7e44:	b	7e50 <__asan_backtrace_open@plt+0x11e0>
    7e48:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7e4c:	add	x0, x0, #0xe20
    7e50:	ldrb	w1, [sp, #379]
    7e54:	add	x4, sp, #0x40
    7e58:	mov	w3, w1
    7e5c:	mov	x2, x0
    7e60:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7e64:	add	x1, x0, #0xe28
    7e68:	mov	x0, x4
    7e6c:	bl	25bdc <OnPrint@@Base+0x5bc>
    7e70:	ldr	x0, [sp, #432]
    7e74:	add	x0, x0, #0x1
    7e78:	str	x0, [sp, #432]
    7e7c:	b	7e10 <__asan_backtrace_open@plt+0x11a0>
    7e80:	add	x2, sp, #0x40
    7e84:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    7e88:	add	x1, x0, #0xe30
    7e8c:	mov	x0, x2
    7e90:	bl	25bdc <OnPrint@@Base+0x5bc>
    7e94:	ldr	x0, [sp, #56]
    7e98:	bl	73e0 <__asan_backtrace_open@plt+0x770>
    7e9c:	mov	x1, x0
    7ea0:	add	x0, sp, #0x40
    7ea4:	bl	25bdc <OnPrint@@Base+0x5bc>
    7ea8:	ldr	w2, [sp, #36]
    7eac:	ldr	x1, [sp, #40]
    7eb0:	ldr	x0, [sp, #456]
    7eb4:	bl	7ac8 <__asan_backtrace_open@plt+0xe58>
    7eb8:	str	x0, [sp, #424]
    7ebc:	ldr	x0, [sp, #456]
    7ec0:	str	x0, [sp, #416]
    7ec4:	ldr	x1, [sp, #416]
    7ec8:	ldr	x0, [sp, #448]
    7ecc:	cmp	x1, x0
    7ed0:	b.eq	80a8 <__asan_backtrace_open@plt+0x1438>  // b.none
    7ed4:	mov	w0, #0x20                  	// #32
    7ed8:	strb	w0, [sp, #415]
    7edc:	mov	w0, #0x20                  	// #32
    7ee0:	strb	w0, [sp, #414]
    7ee4:	ldr	x0, [sp, #424]
    7ee8:	cmp	x0, #0x0
    7eec:	b.eq	7f20 <__asan_backtrace_open@plt+0x12b0>  // b.none
    7ef0:	add	x0, sp, #0xb0
    7ef4:	mov	x8, x0
    7ef8:	ldr	x0, [sp, #424]
    7efc:	bl	8f38 <__asan_backtrace_open@plt+0x22c8>
    7f00:	add	x0, sp, #0xb0
    7f04:	bl	8e24 <__asan_backtrace_open@plt+0x21b4>
    7f08:	mov	x1, x0
    7f0c:	ldr	x0, [sp, #416]
    7f10:	cmp	x0, x1
    7f14:	b.ne	7f20 <__asan_backtrace_open@plt+0x12b0>  // b.any
    7f18:	mov	w0, #0x1                   	// #1
    7f1c:	b	7f24 <__asan_backtrace_open@plt+0x12b4>
    7f20:	mov	w0, #0x0                   	// #0
    7f24:	cmp	w0, #0x0
    7f28:	b.eq	7f40 <__asan_backtrace_open@plt+0x12d0>  // b.none
    7f2c:	ldr	w2, [sp, #36]
    7f30:	ldr	x1, [sp, #40]
    7f34:	ldr	x0, [sp, #416]
    7f38:	bl	7ac8 <__asan_backtrace_open@plt+0xe58>
    7f3c:	str	x0, [sp, #424]
    7f40:	ldr	x0, [sp, #424]
    7f44:	cmp	x0, #0x0
    7f48:	b.ne	7f5c <__asan_backtrace_open@plt+0x12ec>  // b.any
    7f4c:	ldr	x1, [sp, #416]
    7f50:	ldr	x0, [sp, #48]
    7f54:	cmp	x1, x0
    7f58:	b.hi	80a4 <__asan_backtrace_open@plt+0x1434>  // b.pmore
    7f5c:	ldr	x0, [sp, #424]
    7f60:	cmp	x0, #0x0
    7f64:	b.eq	7f98 <__asan_backtrace_open@plt+0x1328>  // b.none
    7f68:	add	x0, sp, #0xd8
    7f6c:	mov	x8, x0
    7f70:	ldr	x0, [sp, #424]
    7f74:	bl	8f04 <__asan_backtrace_open@plt+0x2294>
    7f78:	add	x0, sp, #0xd8
    7f7c:	bl	8e24 <__asan_backtrace_open@plt+0x21b4>
    7f80:	mov	x1, x0
    7f84:	ldr	x0, [sp, #416]
    7f88:	cmp	x0, x1
    7f8c:	b.ls	7f98 <__asan_backtrace_open@plt+0x1328>  // b.plast
    7f90:	mov	w0, #0x1                   	// #1
    7f94:	b	7f9c <__asan_backtrace_open@plt+0x132c>
    7f98:	mov	w0, #0x0                   	// #0
    7f9c:	cmp	w0, #0x0
    7fa0:	b.eq	7fac <__asan_backtrace_open@plt+0x133c>  // b.none
    7fa4:	mov	w0, #0x7e                  	// #126
    7fa8:	strb	w0, [sp, #415]
    7fac:	ldr	x0, [sp, #424]
    7fb0:	cmp	x0, #0x0
    7fb4:	b.eq	7fe8 <__asan_backtrace_open@plt+0x1378>  // b.none
    7fb8:	add	x0, sp, #0x100
    7fbc:	mov	x8, x0
    7fc0:	ldr	x0, [sp, #424]
    7fc4:	bl	8f04 <__asan_backtrace_open@plt+0x2294>
    7fc8:	add	x0, sp, #0x100
    7fcc:	bl	8e24 <__asan_backtrace_open@plt+0x21b4>
    7fd0:	mov	x1, x0
    7fd4:	ldr	x0, [sp, #416]
    7fd8:	cmp	x0, x1
    7fdc:	b.cc	7fe8 <__asan_backtrace_open@plt+0x1378>  // b.lo, b.ul, b.last
    7fe0:	mov	w0, #0x1                   	// #1
    7fe4:	b	7fec <__asan_backtrace_open@plt+0x137c>
    7fe8:	mov	w0, #0x0                   	// #0
    7fec:	cmp	w0, #0x0
    7ff0:	b.eq	7ffc <__asan_backtrace_open@plt+0x138c>  // b.none
    7ff4:	mov	w0, #0x7e                  	// #126
    7ff8:	strb	w0, [sp, #414]
    7ffc:	ldr	x0, [sp, #416]
    8000:	and	x0, x0, #0x7
    8004:	cmp	x0, #0x0
    8008:	b.ne	8028 <__asan_backtrace_open@plt+0x13b8>  // b.any
    800c:	ldrb	w0, [sp, #415]
    8010:	add	x3, sp, #0x40
    8014:	mov	w2, w0
    8018:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    801c:	add	x1, x0, #0xdc8
    8020:	mov	x0, x3
    8024:	bl	25bdc <OnPrint@@Base+0x5bc>
    8028:	ldrb	w0, [sp, #415]
    802c:	add	x3, sp, #0x40
    8030:	mov	w2, w0
    8034:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    8038:	add	x1, x0, #0xdc8
    803c:	mov	x0, x3
    8040:	bl	25bdc <OnPrint@@Base+0x5bc>
    8044:	ldr	x1, [sp, #416]
    8048:	ldr	x0, [sp, #48]
    804c:	cmp	x1, x0
    8050:	b.eq	805c <__asan_backtrace_open@plt+0x13ec>  // b.none
    8054:	ldrb	w0, [sp, #414]
    8058:	b	8060 <__asan_backtrace_open@plt+0x13f0>
    805c:	mov	w0, #0x5e                  	// #94
    8060:	add	x3, sp, #0x40
    8064:	mov	w2, w0
    8068:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    806c:	add	x1, x0, #0xdc8
    8070:	mov	x0, x3
    8074:	bl	25bdc <OnPrint@@Base+0x5bc>
    8078:	ldrb	w0, [sp, #414]
    807c:	add	x3, sp, #0x40
    8080:	mov	w2, w0
    8084:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    8088:	add	x1, x0, #0xdc8
    808c:	mov	x0, x3
    8090:	bl	25bdc <OnPrint@@Base+0x5bc>
    8094:	ldr	x0, [sp, #416]
    8098:	add	x0, x0, #0x1
    809c:	str	x0, [sp, #416]
    80a0:	b	7ec4 <__asan_backtrace_open@plt+0x1254>
    80a4:	nop
    80a8:	ldr	x0, [sp, #56]
    80ac:	bl	918c <__asan_backtrace_open@plt+0x251c>
    80b0:	add	x3, sp, #0x40
    80b4:	mov	x2, x0
    80b8:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    80bc:	add	x1, x0, #0xe38
    80c0:	mov	x0, x3
    80c4:	bl	25bdc <OnPrint@@Base+0x5bc>
    80c8:	str	xzr, [sp, #424]
    80cc:	str	wzr, [sp, #408]
    80d0:	ldr	x0, [sp, #456]
    80d4:	str	x0, [sp, #400]
    80d8:	ldr	x1, [sp, #400]
    80dc:	ldr	x0, [sp, #448]
    80e0:	cmp	x1, x0
    80e4:	b.eq	8248 <__asan_backtrace_open@plt+0x15d8>  // b.none
    80e8:	ldr	x0, [sp, #424]
    80ec:	cmp	x0, #0x0
    80f0:	b.eq	811c <__asan_backtrace_open@plt+0x14ac>  // b.none
    80f4:	add	x0, sp, #0x128
    80f8:	mov	x8, x0
    80fc:	ldr	x0, [sp, #424]
    8100:	bl	8f38 <__asan_backtrace_open@plt+0x22c8>
    8104:	add	x0, sp, #0x128
    8108:	bl	8e24 <__asan_backtrace_open@plt+0x21b4>
    810c:	mov	x1, x0
    8110:	ldr	x0, [sp, #400]
    8114:	cmp	x0, x1
    8118:	b.ne	8124 <__asan_backtrace_open@plt+0x14b4>  // b.any
    811c:	mov	w0, #0x1                   	// #1
    8120:	b	8128 <__asan_backtrace_open@plt+0x14b8>
    8124:	mov	w0, #0x0                   	// #0
    8128:	cmp	w0, #0x0
    812c:	b.eq	8144 <__asan_backtrace_open@plt+0x14d4>  // b.none
    8130:	ldr	w2, [sp, #36]
    8134:	ldr	x1, [sp, #40]
    8138:	ldr	x0, [sp, #400]
    813c:	bl	7ac8 <__asan_backtrace_open@plt+0xe58>
    8140:	str	x0, [sp, #424]
    8144:	ldr	x0, [sp, #424]
    8148:	cmp	x0, #0x0
    814c:	b.eq	8244 <__asan_backtrace_open@plt+0x15d4>  // b.none
    8150:	ldr	x0, [sp, #400]
    8154:	and	x0, x0, #0x7
    8158:	cmp	x0, #0x0
    815c:	b.ne	8168 <__asan_backtrace_open@plt+0x14f8>  // b.any
    8160:	mov	w0, #0x2                   	// #2
    8164:	b	816c <__asan_backtrace_open@plt+0x14fc>
    8168:	mov	w0, #0x1                   	// #1
    816c:	ldr	w1, [sp, #408]
    8170:	add	w0, w1, w0
    8174:	str	w0, [sp, #408]
    8178:	ldr	x0, [sp, #424]
    817c:	cmp	x0, #0x0
    8180:	b.eq	81b4 <__asan_backtrace_open@plt+0x1544>  // b.none
    8184:	add	x0, sp, #0x150
    8188:	mov	x8, x0
    818c:	ldr	x0, [sp, #424]
    8190:	bl	8f04 <__asan_backtrace_open@plt+0x2294>
    8194:	add	x0, sp, #0x150
    8198:	bl	8e24 <__asan_backtrace_open@plt+0x21b4>
    819c:	mov	x1, x0
    81a0:	ldr	x0, [sp, #400]
    81a4:	cmp	x0, x1
    81a8:	b.ne	81b4 <__asan_backtrace_open@plt+0x1544>  // b.any
    81ac:	mov	w0, #0x1                   	// #1
    81b0:	b	81b8 <__asan_backtrace_open@plt+0x1548>
    81b4:	mov	w0, #0x0                   	// #0
    81b8:	cmp	w0, #0x0
    81bc:	b.eq	8228 <__asan_backtrace_open@plt+0x15b8>  // b.none
    81c0:	ldr	w0, [sp, #408]
    81c4:	sub	w1, w0, #0x1
    81c8:	str	w1, [sp, #408]
    81cc:	cmp	w0, #0x0
    81d0:	cset	w0, ne  // ne = any
    81d4:	and	w0, w0, #0xff
    81d8:	cmp	w0, #0x0
    81dc:	b.eq	81f8 <__asan_backtrace_open@plt+0x1588>  // b.none
    81e0:	add	x2, sp, #0x40
    81e4:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    81e8:	add	x1, x0, #0xe20
    81ec:	mov	x0, x2
    81f0:	bl	25bdc <OnPrint@@Base+0x5bc>
    81f4:	b	81c0 <__asan_backtrace_open@plt+0x1550>
    81f8:	ldr	x0, [sp, #424]
    81fc:	bl	8f70 <__asan_backtrace_open@plt+0x2300>
    8200:	mov	x1, x0
    8204:	add	x0, sp, #0x40
    8208:	ldr	x2, [sp, #24]
    820c:	bl	7848 <__asan_backtrace_open@plt+0xbd8>
    8210:	add	x2, sp, #0x40
    8214:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    8218:	add	x1, x0, #0xe30
    821c:	mov	x0, x2
    8220:	bl	25bdc <OnPrint@@Base+0x5bc>
    8224:	b	8248 <__asan_backtrace_open@plt+0x15d8>
    8228:	ldr	w0, [sp, #408]
    822c:	add	w0, w0, #0x2
    8230:	str	w0, [sp, #408]
    8234:	ldr	x0, [sp, #400]
    8238:	add	x0, x0, #0x1
    823c:	str	x0, [sp, #400]
    8240:	b	80d8 <__asan_backtrace_open@plt+0x1468>
    8244:	nop
    8248:	add	x0, sp, #0x40
    824c:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
    8250:	mov	x1, x0
    8254:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    8258:	add	x0, x0, #0xdd0
    825c:	bl	259c8 <OnPrint@@Base+0x3a8>
    8260:	add	x0, sp, #0x40
    8264:	bl	9274 <__asan_backtrace_open@plt+0x2604>
    8268:	ldr	x30, [sp]
    826c:	add	sp, sp, #0x1d0
    8270:	ret
    8274:	stp	x19, x20, [sp, #-192]!
    8278:	str	x30, [sp, #16]
    827c:	str	x0, [sp, #88]
    8280:	bl	90fc <__asan_backtrace_open@plt+0x248c>
    8284:	add	x0, sp, #0xb8
    8288:	bl	73c4 <__asan_backtrace_open@plt+0x754>
    828c:	add	x0, sp, #0x68
    8290:	mov	x1, #0x400                 	// #1024
    8294:	bl	89fc <__asan_backtrace_open@plt+0x1d8c>
    8298:	ldr	x0, [sp, #88]
    829c:	ldr	w0, [x0, #40]
    82a0:	cmp	w0, #0x0
    82a4:	b.ne	82fc <__asan_backtrace_open@plt+0x168c>  // b.any
    82a8:	ldr	x0, [sp, #88]
    82ac:	ldr	x1, [x0, #48]
    82b0:	ldr	x0, [sp, #88]
    82b4:	add	x2, x0, #0x40
    82b8:	add	x0, sp, #0x68
    82bc:	bl	7848 <__asan_backtrace_open@plt+0xbd8>
    82c0:	ldr	x0, [sp, #88]
    82c4:	ldr	w0, [x0, #44]
    82c8:	bl	6f08 <__asan_backtrace_open@plt+0x298>
    82cc:	mov	x4, x0
    82d0:	ldr	x1, [sp, #88]
    82d4:	add	x2, sp, #0x68
    82d8:	add	x0, sp, #0x88
    82dc:	mov	x3, x2
    82e0:	mov	x2, x1
    82e4:	mov	x1, x4
    82e8:	bl	f230 <__ubsan_handle_cfi_bad_type@@Base+0xb14>
    82ec:	add	x0, sp, #0x68
    82f0:	bl	8a38 <__asan_backtrace_open@plt+0x1dc8>
    82f4:	add	x0, sp, #0x88
    82f8:	bl	9290 <__asan_backtrace_open@plt+0x2620>
    82fc:	add	x0, sp, #0xb8
    8300:	bl	9158 <__asan_backtrace_open@plt+0x24e8>
    8304:	mov	x1, x0
    8308:	add	x0, sp, #0x68
    830c:	bl	25bdc <OnPrint@@Base+0x5bc>
    8310:	ldr	x1, [sp, #88]
    8314:	add	x0, sp, #0x20
    8318:	ldp	x2, x3, [x1]
    831c:	stp	x2, x3, [x0]
    8320:	ldp	x2, x3, [x1, #16]
    8324:	stp	x2, x3, [x0, #16]
    8328:	ldr	x1, [x1, #32]
    832c:	str	x1, [x0, #32]
    8330:	add	x1, sp, #0x20
    8334:	add	x0, sp, #0x68
    8338:	bl	765c <__asan_backtrace_open@plt+0x9ec>
    833c:	add	x2, sp, #0x68
    8340:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    8344:	add	x1, x0, #0xe40
    8348:	mov	x0, x2
    834c:	bl	25bdc <OnPrint@@Base+0x5bc>
    8350:	ldr	x0, [sp, #88]
    8354:	ldr	w0, [x0, #40]
    8358:	cmp	w0, #0x0
    835c:	b.eq	836c <__asan_backtrace_open@plt+0x16fc>  // b.none
    8360:	cmp	w0, #0x1
    8364:	b.eq	83b0 <__asan_backtrace_open@plt+0x1740>  // b.none
    8368:	b	83e4 <__asan_backtrace_open@plt+0x1774>
    836c:	add	x0, sp, #0xb8
    8370:	bl	91c0 <__asan_backtrace_open@plt+0x2550>
    8374:	mov	x19, x0
    8378:	add	x0, sp, #0xb8
    837c:	bl	918c <__asan_backtrace_open@plt+0x251c>
    8380:	mov	x20, x0
    8384:	add	x0, sp, #0xb8
    8388:	bl	9158 <__asan_backtrace_open@plt+0x24e8>
    838c:	add	x5, sp, #0x68
    8390:	mov	x4, x0
    8394:	mov	x3, x20
    8398:	mov	x2, x19
    839c:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    83a0:	add	x1, x0, #0xe48
    83a4:	mov	x0, x5
    83a8:	bl	25bdc <OnPrint@@Base+0x5bc>
    83ac:	b	83e4 <__asan_backtrace_open@plt+0x1774>
    83b0:	add	x0, sp, #0xb8
    83b4:	bl	73f8 <__asan_backtrace_open@plt+0x788>
    83b8:	mov	x19, x0
    83bc:	add	x0, sp, #0xb8
    83c0:	bl	918c <__asan_backtrace_open@plt+0x251c>
    83c4:	add	x4, sp, #0x68
    83c8:	mov	x3, x0
    83cc:	mov	x2, x19
    83d0:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    83d4:	add	x1, x0, #0xe60
    83d8:	mov	x0, x4
    83dc:	bl	25bdc <OnPrint@@Base+0x5bc>
    83e0:	nop
    83e4:	ldr	x0, [sp, #88]
    83e8:	ldr	x1, [x0, #48]
    83ec:	ldr	x0, [sp, #88]
    83f0:	add	x2, x0, #0x40
    83f4:	add	x0, sp, #0x68
    83f8:	bl	7848 <__asan_backtrace_open@plt+0xbd8>
    83fc:	add	x0, sp, #0xb8
    8400:	bl	918c <__asan_backtrace_open@plt+0x251c>
    8404:	add	x3, sp, #0x68
    8408:	mov	x2, x0
    840c:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    8410:	add	x1, x0, #0xe38
    8414:	mov	x0, x3
    8418:	bl	25bdc <OnPrint@@Base+0x5bc>
    841c:	add	x0, sp, #0x68
    8420:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
    8424:	mov	x1, x0
    8428:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    842c:	add	x0, x0, #0xdd0
    8430:	bl	259c8 <OnPrint@@Base+0x3a8>
    8434:	ldr	x0, [sp, #88]
    8438:	bl	8d6c <__asan_backtrace_open@plt+0x20fc>
    843c:	and	w0, w0, #0xff
    8440:	cmp	w0, #0x0
    8444:	b.eq	8484 <__asan_backtrace_open@plt+0x1814>  // b.none
    8448:	ldr	x0, [sp, #88]
    844c:	bl	8e24 <__asan_backtrace_open@plt+0x21b4>
    8450:	mov	x5, x0
    8454:	ldr	x0, [sp, #88]
    8458:	add	x1, x0, #0x148
    845c:	ldr	x0, [sp, #88]
    8460:	ldr	w2, [x0, #416]
    8464:	ldr	x0, [sp, #88]
    8468:	add	x3, x0, #0x40
    846c:	add	x0, sp, #0xb8
    8470:	mov	x4, x3
    8474:	mov	w3, w2
    8478:	mov	x2, x1
    847c:	mov	x1, x5
    8480:	bl	7c80 <__asan_backtrace_open@plt+0x1010>
    8484:	add	x0, sp, #0x68
    8488:	bl	9274 <__asan_backtrace_open@plt+0x2604>
    848c:	nop
    8490:	ldr	x30, [sp, #16]
    8494:	ldp	x19, x20, [sp], #192
    8498:	ret
    849c:	str	x30, [sp, #-32]!
    84a0:	str	x0, [sp, #24]
    84a4:	bl	eefc <__ubsan_handle_cfi_bad_type@@Base+0x7e0>
    84a8:	nop
    84ac:	ldr	x30, [sp], #32
    84b0:	ret
    84b4:	stp	x19, x20, [sp, #-48]!
    84b8:	str	x30, [sp, #16]
    84bc:	str	x0, [sp, #40]
    84c0:	mov	x20, x1
    84c4:	mov	x19, x2
    84c8:	str	w3, [sp, #36]
    84cc:	ldr	x0, [sp, #40]
    84d0:	bl	849c <__asan_backtrace_open@plt+0x182c>
    84d4:	ldr	x0, [sp, #40]
    84d8:	add	x0, x0, #0x1
    84dc:	bl	29cec <__sanitizer_get_module_and_offset_for_pc@@Base+0xa64>
    84e0:	ldr	x0, [sp, #40]
    84e4:	add	x0, x0, #0x8
    84e8:	mov	x2, x0
    84ec:	mov	x3, x20
    84f0:	ldp	x0, x1, [x3]
    84f4:	stp	x0, x1, [x2]
    84f8:	ldr	x0, [x3, #16]
    84fc:	str	x0, [x2, #16]
    8500:	ldr	x0, [sp, #40]
    8504:	add	x0, x0, #0x20
    8508:	mov	x1, x19
    850c:	ldp	x2, x3, [x1]
    8510:	stp	x2, x3, [x0]
    8514:	ldp	x2, x3, [x1, #16]
    8518:	stp	x2, x3, [x0, #16]
    851c:	ldr	x1, [x1, #32]
    8520:	str	x1, [x0, #32]
    8524:	ldr	x0, [sp, #40]
    8528:	ldr	w1, [sp, #36]
    852c:	str	w1, [x0, #72]
    8530:	nop
    8534:	ldr	x30, [sp, #16]
    8538:	ldp	x19, x20, [sp], #48
    853c:	ret
    8540:	str	x30, [sp, #-80]!
    8544:	str	x0, [sp, #72]
    8548:	ldr	x0, [sp, #72]
    854c:	ldr	x2, [x0, #16]
    8550:	ldr	x0, [sp, #72]
    8554:	ldr	x0, [x0, #24]
    8558:	mov	x1, x0
    855c:	mov	x0, x2
    8560:	bl	6e98 <__asan_backtrace_open@plt+0x228>
    8564:	ldr	x0, [sp, #72]
    8568:	ldr	w4, [x0, #72]
    856c:	ldr	x0, [sp, #72]
    8570:	add	x1, x0, #0x20
    8574:	add	x0, sp, #0x10
    8578:	ldp	x2, x3, [x1]
    857c:	stp	x2, x3, [x0]
    8580:	ldp	x2, x3, [x1, #16]
    8584:	stp	x2, x3, [x0, #16]
    8588:	ldr	x1, [x1, #32]
    858c:	str	x1, [x0, #32]
    8590:	add	x0, sp, #0x10
    8594:	mov	w1, w4
    8598:	bl	7278 <__asan_backtrace_open@plt+0x608>
    859c:	bl	9110 <__asan_backtrace_open@plt+0x24a0>
    85a0:	ldrb	w0, [x0]
    85a4:	cmp	w0, #0x0
    85a8:	b.eq	85b0 <__asan_backtrace_open@plt+0x1940>  // b.none
    85ac:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    85b0:	ldr	x0, [sp, #72]
    85b4:	add	x0, x0, #0x1
    85b8:	bl	29d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0xb14>
    85bc:	nop
    85c0:	ldr	x30, [sp], #80
    85c4:	ret
    85c8:	stp	x19, x30, [sp, #-32]!
    85cc:	str	xzr, [sp, #24]
    85d0:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    85d4:	add	x0, x0, #0xe10
    85d8:	ldr	x0, [x0]
    85dc:	str	x0, [sp, #16]
    85e0:	ldr	x1, [sp, #24]
    85e4:	ldr	x0, [sp, #16]
    85e8:	cmp	x1, x0
    85ec:	cset	w0, ne  // ne = any
    85f0:	and	w0, w0, #0xff
    85f4:	and	x0, x0, #0xff
    85f8:	cmp	x0, #0x0
    85fc:	b.eq	8620 <__asan_backtrace_open@plt+0x19b0>  // b.none
    8600:	ldr	x4, [sp, #16]
    8604:	ldr	x3, [sp, #24]
    8608:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    860c:	add	x2, x0, #0xe80
    8610:	mov	w1, #0x18d                 	// #397
    8614:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    8618:	add	x0, x0, #0xba8
    861c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    8620:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    8624:	add	x1, x0, #0xdc0
    8628:	mov	x0, #0x50                  	// #80
    862c:	bl	911c <__asan_backtrace_open@plt+0x24ac>
    8630:	mov	x19, x0
    8634:	mov	w2, #0x1b                  	// #27
    8638:	adrp	x0, 77000 <_Unwind_Backtrace@GCC_3.3>
    863c:	add	x1, x0, #0x388
    8640:	mov	x0, x19
    8644:	bl	2c0f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e68>
    8648:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    864c:	add	x0, x0, #0xe10
    8650:	str	x19, [x0]
    8654:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    8658:	add	x0, x0, #0xe10
    865c:	ldr	x19, [x0]
    8660:	bl	9110 <__asan_backtrace_open@plt+0x24a0>
    8664:	ldr	x0, [x0, #8]
    8668:	mov	x1, x0
    866c:	mov	x0, x19
    8670:	bl	2c2a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3020>
    8674:	nop
    8678:	ldp	x19, x30, [sp], #32
    867c:	ret
    8680:	str	x30, [sp, #-64]!
    8684:	str	x0, [sp, #24]
    8688:	bl	eefc <__ubsan_handle_cfi_bad_type@@Base+0x7e0>
    868c:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    8690:	add	x0, x0, #0xe10
    8694:	ldr	x0, [x0]
    8698:	str	x0, [sp, #56]
    869c:	str	xzr, [sp, #48]
    86a0:	ldr	x1, [sp, #56]
    86a4:	ldr	x0, [sp, #48]
    86a8:	cmp	x1, x0
    86ac:	cset	w0, eq  // eq = none
    86b0:	and	w0, w0, #0xff
    86b4:	and	x0, x0, #0xff
    86b8:	cmp	x0, #0x0
    86bc:	b.eq	86e0 <__asan_backtrace_open@plt+0x1a70>  // b.none
    86c0:	ldr	x4, [sp, #48]
    86c4:	ldr	x3, [sp, #56]
    86c8:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    86cc:	add	x2, x0, #0xea8
    86d0:	mov	w1, #0x195                 	// #405
    86d4:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    86d8:	add	x0, x0, #0xba8
    86dc:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    86e0:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    86e4:	add	x0, x0, #0xe10
    86e8:	ldr	x4, [x0]
    86ec:	add	x0, sp, #0x28
    86f0:	mov	x3, x0
    86f4:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    86f8:	add	x2, x0, #0xe70
    86fc:	ldr	x1, [sp, #24]
    8700:	mov	x0, x4
    8704:	bl	2c418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3190>
    8708:	and	w0, w0, #0xff
    870c:	ldr	x30, [sp], #64
    8710:	ret
    8714:	stp	x19, x30, [sp, #-112]!
    8718:	str	w0, [sp, #44]
    871c:	str	x1, [sp, #32]
    8720:	str	x2, [sp, #24]
    8724:	bl	eefc <__ubsan_handle_cfi_bad_type@@Base+0x7e0>
    8728:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    872c:	add	x0, x0, #0xe10
    8730:	ldr	x0, [x0]
    8734:	str	x0, [sp, #104]
    8738:	str	xzr, [sp, #96]
    873c:	ldr	x1, [sp, #104]
    8740:	ldr	x0, [sp, #96]
    8744:	cmp	x1, x0
    8748:	cset	w0, eq  // eq = none
    874c:	and	w0, w0, #0xff
    8750:	and	x0, x0, #0xff
    8754:	cmp	x0, #0x0
    8758:	b.eq	877c <__asan_backtrace_open@plt+0x1b0c>  // b.none
    875c:	ldr	x4, [sp, #96]
    8760:	ldr	x3, [sp, #104]
    8764:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    8768:	add	x2, x0, #0xea8
    876c:	mov	w1, #0x19c                 	// #412
    8770:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    8774:	add	x0, x0, #0xba8
    8778:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    877c:	ldr	w0, [sp, #44]
    8780:	bl	70c0 <__asan_backtrace_open@plt+0x450>
    8784:	str	x0, [sp, #88]
    8788:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    878c:	add	x0, x0, #0xe10
    8790:	ldr	x0, [x0]
    8794:	ldr	x1, [sp, #88]
    8798:	bl	2c884 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35fc>
    879c:	and	w0, w0, #0xff
    87a0:	eor	w0, w0, #0x1
    87a4:	and	w0, w0, #0xff
    87a8:	cmp	w0, #0x0
    87ac:	b.eq	87b8 <__asan_backtrace_open@plt+0x1b48>  // b.none
    87b0:	mov	w19, #0x0                   	// #0
    87b4:	b	890c <__asan_backtrace_open@plt+0x1c9c>
    87b8:	str	xzr, [sp, #64]
    87bc:	ldr	x0, [sp, #24]
    87c0:	cmp	x0, #0x0
    87c4:	b.eq	87fc <__asan_backtrace_open@plt+0x1b8c>  // b.none
    87c8:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    87cc:	add	x0, x0, #0xe10
    87d0:	ldr	x0, [x0]
    87d4:	add	x1, sp, #0x40
    87d8:	mov	x3, x1
    87dc:	ldr	x2, [sp, #88]
    87e0:	ldr	x1, [sp, #24]
    87e4:	bl	2c418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3190>
    87e8:	and	w0, w0, #0xff
    87ec:	cmp	w0, #0x0
    87f0:	b.eq	87fc <__asan_backtrace_open@plt+0x1b8c>  // b.none
    87f4:	mov	w0, #0x1                   	// #1
    87f8:	b	8800 <__asan_backtrace_open@plt+0x1b90>
    87fc:	mov	w0, #0x0                   	// #0
    8800:	cmp	w0, #0x0
    8804:	b.eq	8810 <__asan_backtrace_open@plt+0x1ba0>  // b.none
    8808:	mov	w19, #0x1                   	// #1
    880c:	b	890c <__asan_backtrace_open@plt+0x1c9c>
    8810:	bl	2e194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f0c>
    8814:	ldr	x1, [sp, #32]
    8818:	bl	8c5c <__asan_backtrace_open@plt+0x1fec>
    881c:	str	x0, [sp, #80]
    8820:	ldr	x0, [sp, #80]
    8824:	cmp	x0, #0x0
    8828:	b.eq	8860 <__asan_backtrace_open@plt+0x1bf0>  // b.none
    882c:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    8830:	add	x0, x0, #0xe10
    8834:	ldr	x0, [x0]
    8838:	add	x1, sp, #0x40
    883c:	mov	x3, x1
    8840:	ldr	x2, [sp, #88]
    8844:	ldr	x1, [sp, #80]
    8848:	bl	2c418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3190>
    884c:	and	w0, w0, #0xff
    8850:	cmp	w0, #0x0
    8854:	b.eq	8860 <__asan_backtrace_open@plt+0x1bf0>  // b.none
    8858:	mov	w19, #0x1                   	// #1
    885c:	b	890c <__asan_backtrace_open@plt+0x1c9c>
    8860:	bl	2e194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f0c>
    8864:	ldr	x1, [sp, #32]
    8868:	bl	2e48c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5204>
    886c:	mov	x1, x0
    8870:	add	x0, sp, #0x38
    8874:	bl	8cd8 <__asan_backtrace_open@plt+0x2068>
    8878:	add	x0, sp, #0x38
    887c:	bl	8d18 <__asan_backtrace_open@plt+0x20a8>
    8880:	add	x0, x0, #0x8
    8884:	str	x0, [sp, #72]
    8888:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    888c:	add	x0, x0, #0xe10
    8890:	ldr	x4, [x0]
    8894:	ldr	x0, [sp, #72]
    8898:	ldr	x0, [x0, #32]
    889c:	add	x1, sp, #0x40
    88a0:	mov	x3, x1
    88a4:	ldr	x2, [sp, #88]
    88a8:	mov	x1, x0
    88ac:	mov	x0, x4
    88b0:	bl	2c418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3190>
    88b4:	and	w0, w0, #0xff
    88b8:	cmp	w0, #0x0
    88bc:	b.ne	88f8 <__asan_backtrace_open@plt+0x1c88>  // b.any
    88c0:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    88c4:	add	x0, x0, #0xe10
    88c8:	ldr	x4, [x0]
    88cc:	ldr	x0, [sp, #72]
    88d0:	ldr	x0, [x0, #48]
    88d4:	add	x1, sp, #0x40
    88d8:	mov	x3, x1
    88dc:	ldr	x2, [sp, #88]
    88e0:	mov	x1, x0
    88e4:	mov	x0, x4
    88e8:	bl	2c418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3190>
    88ec:	and	w0, w0, #0xff
    88f0:	cmp	w0, #0x0
    88f4:	b.eq	8900 <__asan_backtrace_open@plt+0x1c90>  // b.none
    88f8:	mov	w19, #0x1                   	// #1
    88fc:	b	8904 <__asan_backtrace_open@plt+0x1c94>
    8900:	mov	w19, #0x0                   	// #0
    8904:	add	x0, sp, #0x38
    8908:	bl	8cfc <__asan_backtrace_open@plt+0x208c>
    890c:	mov	w0, w19
    8910:	ldp	x19, x30, [sp], #112
    8914:	ret
    8918:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    891c:	ldr	x0, [x0, #4056]
    8920:	ret
    8924:	str	x30, [sp, #-16]!
    8928:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    892c:	ldr	x0, [x0, #4016]
    8930:	ldr	x0, [x0]
    8934:	cmp	x0, #0x0
    8938:	b.ne	8950 <__asan_backtrace_open@plt+0x1ce0>  // b.any
    893c:	bl	1fa58 <__sanitizer_set_report_fd@@Base+0x58ac>
    8940:	mov	x1, x0
    8944:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    8948:	ldr	x0, [x0, #4016]
    894c:	str	x1, [x0]
    8950:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    8954:	ldr	x0, [x0, #4016]
    8958:	ldr	x0, [x0]
    895c:	ldr	x30, [sp], #16
    8960:	ret
    8964:	sub	sp, sp, #0x10
    8968:	str	x0, [sp, #8]
    896c:	ldr	x0, [sp, #8]
    8970:	sub	x1, x0, #0x1
    8974:	ldr	x0, [sp, #8]
    8978:	and	x0, x1, x0
    897c:	cmp	x0, #0x0
    8980:	cset	w0, eq  // eq = none
    8984:	and	w0, w0, #0xff
    8988:	add	sp, sp, #0x10
    898c:	ret
    8990:	str	x30, [sp, #-32]!
    8994:	str	x0, [sp, #24]
    8998:	str	x1, [sp, #16]
    899c:	ldr	x0, [sp, #16]
    89a0:	bl	8964 <__asan_backtrace_open@plt+0x1cf4>
    89a4:	and	w0, w0, #0xff
    89a8:	eor	w0, w0, #0x1
    89ac:	and	w0, w0, #0xff
    89b0:	and	x0, x0, #0xff
    89b4:	cmp	x0, #0x0
    89b8:	cset	w0, ne  // ne = any
    89bc:	and	w0, w0, #0xff
    89c0:	cmp	w0, #0x0
    89c4:	b.eq	89d8 <__asan_backtrace_open@plt+0x1d68>  // b.none
    89c8:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    89cc:	add	x0, x0, #0x7c0
    89d0:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
    89d4:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    89d8:	ldr	x1, [sp, #24]
    89dc:	ldr	x0, [sp, #16]
    89e0:	add	x0, x1, x0
    89e4:	sub	x1, x0, #0x1
    89e8:	ldr	x0, [sp, #16]
    89ec:	neg	x0, x0
    89f0:	and	x0, x1, x0
    89f4:	ldr	x30, [sp], #32
    89f8:	ret
    89fc:	str	x30, [sp, #-32]!
    8a00:	str	x0, [sp, #24]
    8a04:	str	x1, [sp, #16]
    8a08:	ldr	x0, [sp, #24]
    8a0c:	ldr	x1, [sp, #16]
    8a10:	bl	92b0 <__asan_backtrace_open@plt+0x2640>
    8a14:	ldr	x0, [sp, #24]
    8a18:	str	xzr, [x0, #24]
    8a1c:	ldr	x0, [sp, #24]
    8a20:	mov	x1, #0x0                   	// #0
    8a24:	bl	92fc <__asan_backtrace_open@plt+0x268c>
    8a28:	strb	wzr, [x0]
    8a2c:	nop
    8a30:	ldr	x30, [sp], #32
    8a34:	ret
    8a38:	str	x30, [sp, #-32]!
    8a3c:	str	x0, [sp, #24]
    8a40:	ldr	x0, [sp, #24]
    8a44:	mov	x1, #0x0                   	// #0
    8a48:	bl	92fc <__asan_backtrace_open@plt+0x268c>
    8a4c:	strb	wzr, [x0]
    8a50:	ldr	x0, [sp, #24]
    8a54:	str	xzr, [x0, #24]
    8a58:	nop
    8a5c:	ldr	x30, [sp], #32
    8a60:	ret
    8a64:	sub	sp, sp, #0x10
    8a68:	str	x0, [sp, #8]
    8a6c:	ldr	x0, [sp, #8]
    8a70:	ldr	x0, [x0]
    8a74:	cmp	x0, #0x0
    8a78:	cset	w0, eq  // eq = none
    8a7c:	and	w0, w0, #0xff
    8a80:	add	sp, sp, #0x10
    8a84:	ret
    8a88:	sub	sp, sp, #0x10
    8a8c:	str	x0, [sp, #8]
    8a90:	ldr	x0, [sp, #8]
    8a94:	ldr	x0, [x0]
    8a98:	add	sp, sp, #0x10
    8a9c:	ret
    8aa0:	sub	sp, sp, #0x10
    8aa4:	str	x0, [sp, #8]
    8aa8:	ldr	x0, [sp, #8]
    8aac:	ldr	w0, [x0, #8]
    8ab0:	add	sp, sp, #0x10
    8ab4:	ret
    8ab8:	sub	sp, sp, #0x10
    8abc:	str	x0, [sp, #8]
    8ac0:	ldr	x0, [sp, #8]
    8ac4:	ldr	w0, [x0, #12]
    8ac8:	add	sp, sp, #0x10
    8acc:	ret
    8ad0:	sub	sp, sp, #0x10
    8ad4:	str	x0, [sp, #8]
    8ad8:	ldr	x0, [sp, #8]
    8adc:	add	x0, x0, #0x4
    8ae0:	add	sp, sp, #0x10
    8ae4:	ret
    8ae8:	sub	sp, sp, #0x10
    8aec:	str	x0, [sp, #8]
    8af0:	ldr	x0, [sp, #8]
    8af4:	ldrh	w0, [x0]
    8af8:	add	sp, sp, #0x10
    8afc:	ret
    8b00:	str	x30, [sp, #-32]!
    8b04:	str	x0, [sp, #24]
    8b08:	ldr	x0, [sp, #24]
    8b0c:	bl	8ae8 <__asan_backtrace_open@plt+0x1e78>
    8b10:	cmp	w0, #0x0
    8b14:	cset	w0, eq  // eq = none
    8b18:	and	w0, w0, #0xff
    8b1c:	ldr	x30, [sp], #32
    8b20:	ret
    8b24:	str	x30, [sp, #-32]!
    8b28:	str	x0, [sp, #24]
    8b2c:	ldr	x0, [sp, #24]
    8b30:	bl	8b00 <__asan_backtrace_open@plt+0x1e90>
    8b34:	and	w0, w0, #0xff
    8b38:	cmp	w0, #0x0
    8b3c:	b.eq	8b5c <__asan_backtrace_open@plt+0x1eec>  // b.none
    8b40:	ldr	x0, [sp, #24]
    8b44:	ldrh	w0, [x0, #2]
    8b48:	and	w0, w0, #0x1
    8b4c:	cmp	w0, #0x0
    8b50:	b.eq	8b5c <__asan_backtrace_open@plt+0x1eec>  // b.none
    8b54:	mov	w0, #0x1                   	// #1
    8b58:	b	8b60 <__asan_backtrace_open@plt+0x1ef0>
    8b5c:	mov	w0, #0x0                   	// #0
    8b60:	ldr	x30, [sp], #32
    8b64:	ret
    8b68:	str	x30, [sp, #-32]!
    8b6c:	str	x0, [sp, #24]
    8b70:	ldr	x0, [sp, #24]
    8b74:	bl	8b00 <__asan_backtrace_open@plt+0x1e90>
    8b78:	and	w0, w0, #0xff
    8b7c:	cmp	w0, #0x0
    8b80:	b.eq	8ba0 <__asan_backtrace_open@plt+0x1f30>  // b.none
    8b84:	ldr	x0, [sp, #24]
    8b88:	ldrh	w0, [x0, #2]
    8b8c:	and	w0, w0, #0x1
    8b90:	cmp	w0, #0x0
    8b94:	b.ne	8ba0 <__asan_backtrace_open@plt+0x1f30>  // b.any
    8b98:	mov	w0, #0x1                   	// #1
    8b9c:	b	8ba4 <__asan_backtrace_open@plt+0x1f34>
    8ba0:	mov	w0, #0x0                   	// #0
    8ba4:	ldr	x30, [sp], #32
    8ba8:	ret
    8bac:	str	x30, [sp, #-32]!
    8bb0:	str	x0, [sp, #24]
    8bb4:	ldr	x0, [sp, #24]
    8bb8:	bl	8ae8 <__asan_backtrace_open@plt+0x1e78>
    8bbc:	cmp	w0, #0x1
    8bc0:	cset	w0, eq  // eq = none
    8bc4:	and	w0, w0, #0xff
    8bc8:	ldr	x30, [sp], #32
    8bcc:	ret
    8bd0:	sub	sp, sp, #0x10
    8bd4:	str	x0, [sp, #8]
    8bd8:	ldr	x0, [sp, #8]
    8bdc:	ldr	x0, [x0]
    8be0:	add	sp, sp, #0x10
    8be4:	ret
    8be8:	sub	sp, sp, #0x20
    8bec:	str	x0, [sp, #24]
    8bf0:	str	x1, [sp, #16]
    8bf4:	str	w2, [sp, #12]
    8bf8:	ldr	x0, [sp, #24]
    8bfc:	ldr	x1, [sp, #16]
    8c00:	str	x1, [x0]
    8c04:	ldr	x0, [sp, #24]
    8c08:	ldr	w1, [sp, #12]
    8c0c:	str	w1, [x0, #8]
    8c10:	ldr	x0, [sp, #24]
    8c14:	str	wzr, [x0, #12]
    8c18:	nop
    8c1c:	add	sp, sp, #0x20
    8c20:	ret
    8c24:	str	x30, [sp, #-32]!
    8c28:	str	x0, [sp, #24]
    8c2c:	ldr	x3, [sp, #24]
    8c30:	ldr	x0, [sp, #24]
    8c34:	add	x0, x0, #0x10
    8c38:	mov	w2, #0x0                   	// #0
    8c3c:	mov	x1, x0
    8c40:	mov	x0, x3
    8c44:	bl	8be8 <__asan_backtrace_open@plt+0x1f78>
    8c48:	ldr	x0, [sp, #24]
    8c4c:	str	xzr, [x0, #2064]
    8c50:	nop
    8c54:	ldr	x30, [sp], #32
    8c58:	ret
    8c5c:	str	x30, [sp, #-48]!
    8c60:	str	x0, [sp, #24]
    8c64:	str	x1, [sp, #16]
    8c68:	str	xzr, [sp, #40]
    8c6c:	add	x1, sp, #0x20
    8c70:	add	x0, sp, #0x28
    8c74:	mov	x3, x1
    8c78:	mov	x2, x0
    8c7c:	ldr	x1, [sp, #16]
    8c80:	ldr	x0, [sp, #24]
    8c84:	bl	2e738 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54b0>
    8c88:	and	w0, w0, #0xff
    8c8c:	cmp	w0, #0x0
    8c90:	b.eq	8c9c <__asan_backtrace_open@plt+0x202c>  // b.none
    8c94:	ldr	x0, [sp, #40]
    8c98:	b	8ca0 <__asan_backtrace_open@plt+0x2030>
    8c9c:	mov	x0, #0x0                   	// #0
    8ca0:	ldr	x30, [sp], #48
    8ca4:	ret
    8ca8:	str	x30, [sp, #-32]!
    8cac:	str	x0, [sp, #24]
    8cb0:	ldr	x0, [sp, #24]
    8cb4:	ldr	x0, [x0]
    8cb8:	cmp	x0, #0x0
    8cbc:	b.eq	8ccc <__asan_backtrace_open@plt+0x205c>  // b.none
    8cc0:	ldr	x0, [sp, #24]
    8cc4:	ldr	x0, [x0]
    8cc8:	bl	2d200 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f78>
    8ccc:	nop
    8cd0:	ldr	x30, [sp], #32
    8cd4:	ret
    8cd8:	sub	sp, sp, #0x10
    8cdc:	str	x0, [sp, #8]
    8ce0:	str	x1, [sp]
    8ce4:	ldr	x0, [sp, #8]
    8ce8:	ldr	x1, [sp]
    8cec:	str	x1, [x0]
    8cf0:	nop
    8cf4:	add	sp, sp, #0x10
    8cf8:	ret
    8cfc:	str	x30, [sp, #-32]!
    8d00:	str	x0, [sp, #24]
    8d04:	ldr	x0, [sp, #24]
    8d08:	bl	8ca8 <__asan_backtrace_open@plt+0x2038>
    8d0c:	nop
    8d10:	ldr	x30, [sp], #32
    8d14:	ret
    8d18:	sub	sp, sp, #0x10
    8d1c:	str	x0, [sp, #8]
    8d20:	ldr	x0, [sp, #8]
    8d24:	ldr	x0, [x0]
    8d28:	add	sp, sp, #0x10
    8d2c:	ret
    8d30:	sub	sp, sp, #0x10
    8d34:	str	x0, [sp, #8]
    8d38:	ldr	x0, [sp, #8]
    8d3c:	ldr	w0, [x0]
    8d40:	add	sp, sp, #0x10
    8d44:	ret
    8d48:	sub	sp, sp, #0x10
    8d4c:	str	x0, [sp, #8]
    8d50:	ldr	x0, [sp, #8]
    8d54:	ldr	w0, [x0]
    8d58:	cmp	w0, #0x1
    8d5c:	cset	w0, eq  // eq = none
    8d60:	and	w0, w0, #0xff
    8d64:	add	sp, sp, #0x10
    8d68:	ret
    8d6c:	sub	sp, sp, #0x10
    8d70:	str	x0, [sp, #8]
    8d74:	ldr	x0, [sp, #8]
    8d78:	ldr	w0, [x0]
    8d7c:	cmp	w0, #0x2
    8d80:	cset	w0, eq  // eq = none
    8d84:	and	w0, w0, #0xff
    8d88:	add	sp, sp, #0x10
    8d8c:	ret
    8d90:	sub	sp, sp, #0x10
    8d94:	str	x0, [sp, #8]
    8d98:	ldr	x0, [sp, #8]
    8d9c:	ldr	w0, [x0]
    8da0:	cmp	w0, #0x3
    8da4:	cset	w0, eq  // eq = none
    8da8:	and	w0, w0, #0xff
    8dac:	add	sp, sp, #0x10
    8db0:	ret
    8db4:	str	x30, [sp, #-48]!
    8db8:	str	x0, [sp, #24]
    8dbc:	ldr	x0, [sp, #24]
    8dc0:	bl	8d48 <__asan_backtrace_open@plt+0x20d8>
    8dc4:	and	w0, w0, #0xff
    8dc8:	and	x0, x0, #0xff
    8dcc:	str	x0, [sp, #40]
    8dd0:	str	xzr, [sp, #32]
    8dd4:	ldr	x1, [sp, #40]
    8dd8:	ldr	x0, [sp, #32]
    8ddc:	cmp	x1, x0
    8de0:	cset	w0, eq  // eq = none
    8de4:	and	w0, w0, #0xff
    8de8:	and	x0, x0, #0xff
    8dec:	cmp	x0, #0x0
    8df0:	b.eq	8e14 <__asan_backtrace_open@plt+0x21a4>  // b.none
    8df4:	ldr	x4, [sp, #32]
    8df8:	ldr	x3, [sp, #40]
    8dfc:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    8e00:	add	x2, x0, #0x7f0
    8e04:	mov	w1, #0x51                  	// #81
    8e08:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    8e0c:	add	x0, x0, #0x810
    8e10:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    8e14:	ldr	x0, [sp, #24]
    8e18:	ldp	x0, x1, [x0, #8]
    8e1c:	ldr	x30, [sp], #48
    8e20:	ret
    8e24:	str	x30, [sp, #-48]!
    8e28:	str	x0, [sp, #24]
    8e2c:	ldr	x0, [sp, #24]
    8e30:	bl	8d6c <__asan_backtrace_open@plt+0x20fc>
    8e34:	and	w0, w0, #0xff
    8e38:	and	x0, x0, #0xff
    8e3c:	str	x0, [sp, #40]
    8e40:	str	xzr, [sp, #32]
    8e44:	ldr	x1, [sp, #40]
    8e48:	ldr	x0, [sp, #32]
    8e4c:	cmp	x1, x0
    8e50:	cset	w0, eq  // eq = none
    8e54:	and	w0, w0, #0xff
    8e58:	and	x0, x0, #0xff
    8e5c:	cmp	x0, #0x0
    8e60:	b.eq	8e84 <__asan_backtrace_open@plt+0x2214>  // b.none
    8e64:	ldr	x4, [sp, #32]
    8e68:	ldr	x3, [sp, #40]
    8e6c:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    8e70:	add	x2, x0, #0x840
    8e74:	mov	w1, #0x55                  	// #85
    8e78:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    8e7c:	add	x0, x0, #0x810
    8e80:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    8e84:	ldr	x0, [sp, #24]
    8e88:	ldr	x0, [x0, #24]
    8e8c:	ldr	x30, [sp], #48
    8e90:	ret
    8e94:	str	x30, [sp, #-48]!
    8e98:	str	x0, [sp, #24]
    8e9c:	ldr	x0, [sp, #24]
    8ea0:	bl	8d90 <__asan_backtrace_open@plt+0x2120>
    8ea4:	and	w0, w0, #0xff
    8ea8:	and	x0, x0, #0xff
    8eac:	str	x0, [sp, #40]
    8eb0:	str	xzr, [sp, #32]
    8eb4:	ldr	x1, [sp, #40]
    8eb8:	ldr	x0, [sp, #32]
    8ebc:	cmp	x1, x0
    8ec0:	cset	w0, eq  // eq = none
    8ec4:	and	w0, w0, #0xff
    8ec8:	and	x0, x0, #0xff
    8ecc:	cmp	x0, #0x0
    8ed0:	b.eq	8ef4 <__asan_backtrace_open@plt+0x2284>  // b.none
    8ed4:	ldr	x4, [sp, #32]
    8ed8:	ldr	x3, [sp, #40]
    8edc:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    8ee0:	add	x2, x0, #0x860
    8ee4:	mov	w1, #0x59                  	// #89
    8ee8:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    8eec:	add	x0, x0, #0x810
    8ef0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    8ef4:	ldr	x0, [sp, #24]
    8ef8:	ldr	x0, [x0, #32]
    8efc:	ldr	x30, [sp], #48
    8f00:	ret
    8f04:	sub	sp, sp, #0x10
    8f08:	mov	x2, x8
    8f0c:	str	x0, [sp, #8]
    8f10:	ldr	x1, [sp, #8]
    8f14:	mov	x0, x2
    8f18:	ldp	x2, x3, [x1]
    8f1c:	stp	x2, x3, [x0]
    8f20:	ldp	x2, x3, [x1, #16]
    8f24:	stp	x2, x3, [x0, #16]
    8f28:	ldr	x1, [x1, #32]
    8f2c:	str	x1, [x0, #32]
    8f30:	add	sp, sp, #0x10
    8f34:	ret
    8f38:	sub	sp, sp, #0x10
    8f3c:	mov	x2, x8
    8f40:	str	x0, [sp, #8]
    8f44:	ldr	x0, [sp, #8]
    8f48:	add	x1, x0, #0x28
    8f4c:	mov	x0, x2
    8f50:	ldp	x2, x3, [x1]
    8f54:	stp	x2, x3, [x0]
    8f58:	ldp	x2, x3, [x1, #16]
    8f5c:	stp	x2, x3, [x0, #16]
    8f60:	ldr	x1, [x1, #32]
    8f64:	str	x1, [x0, #32]
    8f68:	add	sp, sp, #0x10
    8f6c:	ret
    8f70:	sub	sp, sp, #0x10
    8f74:	str	x0, [sp, #8]
    8f78:	ldr	x0, [sp, #8]
    8f7c:	ldr	x0, [x0, #80]
    8f80:	add	sp, sp, #0x10
    8f84:	ret
    8f88:	sub	sp, sp, #0x10
    8f8c:	str	x0, [sp, #8]
    8f90:	str	x1, [sp]
    8f94:	ldr	x0, [sp, #8]
    8f98:	str	wzr, [x0]
    8f9c:	ldr	x0, [sp, #8]
    8fa0:	ldr	x1, [sp]
    8fa4:	str	x1, [x0, #16]
    8fa8:	nop
    8fac:	add	sp, sp, #0x10
    8fb0:	ret
    8fb4:	sub	sp, sp, #0x20
    8fb8:	str	x0, [sp, #24]
    8fbc:	stp	x2, x3, [sp]
    8fc0:	ldr	x0, [sp, #24]
    8fc4:	mov	w1, #0x2                   	// #2
    8fc8:	str	w1, [x0]
    8fcc:	ldr	x2, [sp, #24]
    8fd0:	ldp	x0, x1, [sp]
    8fd4:	stp	x0, x1, [x2, #16]
    8fd8:	nop
    8fdc:	add	sp, sp, #0x20
    8fe0:	ret
    8fe4:	sub	sp, sp, #0x20
    8fe8:	str	x0, [sp, #24]
    8fec:	stp	x2, x3, [sp]
    8ff0:	ldr	x0, [sp, #24]
    8ff4:	mov	w1, #0x3                   	// #3
    8ff8:	str	w1, [x0]
    8ffc:	ldr	x2, [sp, #24]
    9000:	ldp	x0, x1, [sp]
    9004:	stp	x0, x1, [x2, #16]
    9008:	nop
    900c:	add	sp, sp, #0x20
    9010:	ret
    9014:	sub	sp, sp, #0x20
    9018:	str	x0, [sp, #24]
    901c:	str	q0, [sp]
    9020:	ldr	x0, [sp, #24]
    9024:	mov	w1, #0x4                   	// #4
    9028:	str	w1, [x0]
    902c:	ldr	x0, [sp, #24]
    9030:	ldr	q0, [sp]
    9034:	str	q0, [x0, #16]
    9038:	nop
    903c:	add	sp, sp, #0x20
    9040:	ret
    9044:	stp	x19, x30, [sp, #-48]!
    9048:	str	x0, [sp, #24]
    904c:	mov	x19, x1
    9050:	ldr	x0, [sp, #24]
    9054:	ldr	w0, [x0, #320]
    9058:	cmp	w0, #0x8
    905c:	cset	w0, ne  // ne = any
    9060:	and	w0, w0, #0xff
    9064:	and	x0, x0, #0xff
    9068:	str	x0, [sp, #40]
    906c:	str	xzr, [sp, #32]
    9070:	ldr	x1, [sp, #40]
    9074:	ldr	x0, [sp, #32]
    9078:	cmp	x1, x0
    907c:	cset	w0, eq  // eq = none
    9080:	and	w0, w0, #0xff
    9084:	and	x0, x0, #0xff
    9088:	cmp	x0, #0x0
    908c:	b.eq	90b0 <__asan_backtrace_open@plt+0x2440>  // b.none
    9090:	ldr	x4, [sp, #32]
    9094:	ldr	x3, [sp, #40]
    9098:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    909c:	add	x2, x0, #0x880
    90a0:	mov	w1, #0xbf                  	// #191
    90a4:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    90a8:	add	x0, x0, #0x810
    90ac:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    90b0:	ldr	x0, [sp, #24]
    90b4:	ldr	w0, [x0, #320]
    90b8:	add	w2, w0, #0x1
    90bc:	ldr	x1, [sp, #24]
    90c0:	str	w2, [x1, #320]
    90c4:	ldr	x1, [sp, #24]
    90c8:	mov	w0, w0
    90cc:	add	x0, x0, #0x2
    90d0:	lsl	x0, x0, #5
    90d4:	add	x0, x1, x0
    90d8:	mov	x2, x0
    90dc:	mov	x3, x19
    90e0:	ldp	x0, x1, [x3]
    90e4:	stp	x0, x1, [x2]
    90e8:	ldp	x0, x1, [x3, #16]
    90ec:	stp	x0, x1, [x2, #16]
    90f0:	ldr	x0, [sp, #24]
    90f4:	ldp	x19, x30, [sp], #48
    90f8:	ret
    90fc:	str	x30, [sp, #-16]!
    9100:	bl	29dcc <__sanitizer_get_module_and_offset_for_pc@@Base+0xb44>
    9104:	nop
    9108:	ldr	x30, [sp], #16
    910c:	ret
    9110:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    9114:	ldr	x0, [x0, #3816]
    9118:	ret
    911c:	sub	sp, sp, #0x10
    9120:	str	x0, [sp, #8]
    9124:	str	x1, [sp]
    9128:	ldr	x0, [sp]
    912c:	add	sp, sp, #0x10
    9130:	ret
    9134:	str	x30, [sp, #-32]!
    9138:	str	x0, [sp, #24]
    913c:	bl	293e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x158>
    9140:	and	w1, w0, #0xff
    9144:	ldr	x0, [sp, #24]
    9148:	strb	w1, [x0]
    914c:	nop
    9150:	ldr	x30, [sp], #32
    9154:	ret
    9158:	sub	sp, sp, #0x10
    915c:	str	x0, [sp, #8]
    9160:	ldr	x0, [sp, #8]
    9164:	ldrb	w0, [x0]
    9168:	cmp	w0, #0x0
    916c:	b.eq	917c <__asan_backtrace_open@plt+0x250c>  // b.none
    9170:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    9174:	add	x0, x0, #0x8a0
    9178:	b	9184 <__asan_backtrace_open@plt+0x2514>
    917c:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    9180:	add	x0, x0, #0x8a8
    9184:	add	sp, sp, #0x10
    9188:	ret
    918c:	sub	sp, sp, #0x10
    9190:	str	x0, [sp, #8]
    9194:	ldr	x0, [sp, #8]
    9198:	ldrb	w0, [x0]
    919c:	cmp	w0, #0x0
    91a0:	b.eq	91b0 <__asan_backtrace_open@plt+0x2540>  // b.none
    91a4:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    91a8:	add	x0, x0, #0x8b0
    91ac:	b	91b8 <__asan_backtrace_open@plt+0x2548>
    91b0:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    91b4:	add	x0, x0, #0x8a8
    91b8:	add	sp, sp, #0x10
    91bc:	ret
    91c0:	str	x30, [sp, #-32]!
    91c4:	str	x0, [sp, #24]
    91c8:	ldr	x0, [sp, #24]
    91cc:	bl	920c <__asan_backtrace_open@plt+0x259c>
    91d0:	ldr	x30, [sp], #32
    91d4:	ret
    91d8:	sub	sp, sp, #0x10
    91dc:	str	x0, [sp, #8]
    91e0:	ldr	x0, [sp, #8]
    91e4:	ldrb	w0, [x0]
    91e8:	cmp	w0, #0x0
    91ec:	b.eq	91fc <__asan_backtrace_open@plt+0x258c>  // b.none
    91f0:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    91f4:	add	x0, x0, #0x8c0
    91f8:	b	9204 <__asan_backtrace_open@plt+0x2594>
    91fc:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    9200:	add	x0, x0, #0x8a8
    9204:	add	sp, sp, #0x10
    9208:	ret
    920c:	sub	sp, sp, #0x10
    9210:	str	x0, [sp, #8]
    9214:	ldr	x0, [sp, #8]
    9218:	ldrb	w0, [x0]
    921c:	cmp	w0, #0x0
    9220:	b.eq	9230 <__asan_backtrace_open@plt+0x25c0>  // b.none
    9224:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    9228:	add	x0, x0, #0x8d0
    922c:	b	9238 <__asan_backtrace_open@plt+0x25c8>
    9230:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    9234:	add	x0, x0, #0x8a8
    9238:	add	sp, sp, #0x10
    923c:	ret
    9240:	sub	sp, sp, #0x10
    9244:	str	x0, [sp, #8]
    9248:	ldr	x0, [sp, #8]
    924c:	ldrb	w0, [x0]
    9250:	cmp	w0, #0x0
    9254:	b.eq	9264 <__asan_backtrace_open@plt+0x25f4>  // b.none
    9258:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    925c:	add	x0, x0, #0x8e0
    9260:	b	926c <__asan_backtrace_open@plt+0x25fc>
    9264:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    9268:	add	x0, x0, #0x8a8
    926c:	add	sp, sp, #0x10
    9270:	ret
    9274:	str	x30, [sp, #-32]!
    9278:	str	x0, [sp, #24]
    927c:	ldr	x0, [sp, #24]
    9280:	bl	92e0 <__asan_backtrace_open@plt+0x2670>
    9284:	nop
    9288:	ldr	x30, [sp], #32
    928c:	ret
    9290:	str	x30, [sp, #-32]!
    9294:	str	x0, [sp, #24]
    9298:	ldr	x0, [sp, #24]
    929c:	add	x0, x0, #0x10
    92a0:	bl	9274 <__asan_backtrace_open@plt+0x2604>
    92a4:	nop
    92a8:	ldr	x30, [sp], #32
    92ac:	ret
    92b0:	str	x30, [sp, #-32]!
    92b4:	str	x0, [sp, #24]
    92b8:	str	x1, [sp, #16]
    92bc:	ldr	x0, [sp, #24]
    92c0:	ldr	x1, [sp, #16]
    92c4:	bl	93ec <__asan_backtrace_open@plt+0x277c>
    92c8:	ldr	x0, [sp, #24]
    92cc:	ldr	x1, [sp, #16]
    92d0:	bl	9428 <__asan_backtrace_open@plt+0x27b8>
    92d4:	nop
    92d8:	ldr	x30, [sp], #32
    92dc:	ret
    92e0:	str	x30, [sp, #-32]!
    92e4:	str	x0, [sp, #24]
    92e8:	ldr	x0, [sp, #24]
    92ec:	bl	94a0 <__asan_backtrace_open@plt+0x2830>
    92f0:	nop
    92f4:	ldr	x30, [sp], #32
    92f8:	ret
    92fc:	str	x30, [sp, #-48]!
    9300:	str	x0, [sp, #24]
    9304:	str	x1, [sp, #16]
    9308:	ldr	x0, [sp, #16]
    930c:	str	x0, [sp, #40]
    9310:	ldr	x0, [sp, #24]
    9314:	ldr	x0, [x0, #16]
    9318:	str	x0, [sp, #32]
    931c:	ldr	x1, [sp, #40]
    9320:	ldr	x0, [sp, #32]
    9324:	cmp	x1, x0
    9328:	cset	w0, cs  // cs = hs, nlast
    932c:	and	w0, w0, #0xff
    9330:	and	x0, x0, #0xff
    9334:	cmp	x0, #0x0
    9338:	b.eq	935c <__asan_backtrace_open@plt+0x26ec>  // b.none
    933c:	ldr	x4, [sp, #32]
    9340:	ldr	x3, [sp, #40]
    9344:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    9348:	add	x2, x0, #0xec8
    934c:	mov	w1, #0x1b6                 	// #438
    9350:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    9354:	add	x0, x0, #0xee0
    9358:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    935c:	ldr	x0, [sp, #24]
    9360:	ldr	x1, [x0]
    9364:	ldr	x0, [sp, #16]
    9368:	add	x0, x1, x0
    936c:	ldr	x30, [sp], #48
    9370:	ret
    9374:	sub	sp, sp, #0x10
    9378:	str	x0, [sp, #8]
    937c:	str	x1, [sp]
    9380:	ldr	x1, [sp, #8]
    9384:	ldr	x0, [sp]
    9388:	cmp	x1, x0
    938c:	b.cs	9398 <__asan_backtrace_open@plt+0x2728>  // b.hs, b.nlast
    9390:	ldr	x0, [sp, #8]
    9394:	b	939c <__asan_backtrace_open@plt+0x272c>
    9398:	ldr	x0, [sp]
    939c:	add	sp, sp, #0x10
    93a0:	ret
    93a4:	sub	sp, sp, #0x10
    93a8:	str	x0, [sp, #8]
    93ac:	str	x1, [sp]
    93b0:	ldr	x1, [sp, #8]
    93b4:	ldr	x0, [sp]
    93b8:	cmp	x1, x0
    93bc:	b.ls	93c8 <__asan_backtrace_open@plt+0x2758>  // b.plast
    93c0:	ldr	x0, [sp, #8]
    93c4:	b	93cc <__asan_backtrace_open@plt+0x275c>
    93c8:	ldr	x0, [sp]
    93cc:	add	sp, sp, #0x10
    93d0:	ret
    93d4:	sub	sp, sp, #0x10
    93d8:	str	x0, [sp, #8]
    93dc:	ldr	x0, [sp, #8]
    93e0:	ldr	x0, [x0]
    93e4:	add	sp, sp, #0x10
    93e8:	ret
    93ec:	str	x30, [sp, #-32]!
    93f0:	str	x0, [sp, #24]
    93f4:	str	x1, [sp, #16]
    93f8:	ldr	x0, [sp, #24]
    93fc:	str	xzr, [x0, #8]
    9400:	ldr	x0, [sp, #24]
    9404:	str	xzr, [x0, #16]
    9408:	ldr	x0, [sp, #24]
    940c:	str	xzr, [x0]
    9410:	ldr	x1, [sp, #16]
    9414:	ldr	x0, [sp, #24]
    9418:	bl	94d0 <__asan_backtrace_open@plt+0x2860>
    941c:	nop
    9420:	ldr	x30, [sp], #32
    9424:	ret
    9428:	str	x30, [sp, #-32]!
    942c:	str	x0, [sp, #24]
    9430:	str	x1, [sp, #16]
    9434:	ldr	x0, [sp, #24]
    9438:	ldr	x0, [x0, #16]
    943c:	ldr	x1, [sp, #16]
    9440:	cmp	x1, x0
    9444:	b.ls	9488 <__asan_backtrace_open@plt+0x2818>  // b.plast
    9448:	ldr	x1, [sp, #16]
    944c:	ldr	x0, [sp, #24]
    9450:	bl	94d0 <__asan_backtrace_open@plt+0x2860>
    9454:	ldr	x0, [sp, #24]
    9458:	ldr	x1, [x0]
    945c:	ldr	x0, [sp, #24]
    9460:	ldr	x0, [x0, #16]
    9464:	add	x3, x1, x0
    9468:	ldr	x0, [sp, #24]
    946c:	ldr	x0, [x0, #16]
    9470:	ldr	x1, [sp, #16]
    9474:	sub	x0, x1, x0
    9478:	mov	x2, x0
    947c:	mov	w1, #0x0                   	// #0
    9480:	mov	x0, x3
    9484:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
    9488:	ldr	x0, [sp, #24]
    948c:	ldr	x1, [sp, #16]
    9490:	str	x1, [x0, #16]
    9494:	nop
    9498:	ldr	x30, [sp], #32
    949c:	ret
    94a0:	str	x30, [sp, #-32]!
    94a4:	str	x0, [sp, #24]
    94a8:	ldr	x0, [sp, #24]
    94ac:	ldr	x2, [x0]
    94b0:	ldr	x0, [sp, #24]
    94b4:	ldr	x0, [x0, #8]
    94b8:	mov	x1, x0
    94bc:	mov	x0, x2
    94c0:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
    94c4:	nop
    94c8:	ldr	x30, [sp], #32
    94cc:	ret
    94d0:	str	x30, [sp, #-32]!
    94d4:	str	x0, [sp, #24]
    94d8:	str	x1, [sp, #16]
    94dc:	ldr	x0, [sp, #24]
    94e0:	bl	9518 <__asan_backtrace_open@plt+0x28a8>
    94e4:	mov	x1, x0
    94e8:	ldr	x0, [sp, #16]
    94ec:	cmp	x0, x1
    94f0:	cset	w0, hi  // hi = pmore
    94f4:	and	w0, w0, #0xff
    94f8:	cmp	w0, #0x0
    94fc:	b.eq	950c <__asan_backtrace_open@plt+0x289c>  // b.none
    9500:	ldr	x1, [sp, #16]
    9504:	ldr	x0, [sp, #24]
    9508:	bl	9530 <__asan_backtrace_open@plt+0x28c0>
    950c:	nop
    9510:	ldr	x30, [sp], #32
    9514:	ret
    9518:	sub	sp, sp, #0x10
    951c:	str	x0, [sp, #8]
    9520:	ldr	x0, [sp, #8]
    9524:	ldr	x0, [x0, #8]
    9528:	add	sp, sp, #0x10
    952c:	ret
    9530:	str	x30, [sp, #-80]!
    9534:	str	x0, [sp, #24]
    9538:	str	x1, [sp, #16]
    953c:	ldr	x0, [sp, #16]
    9540:	str	x0, [sp, #72]
    9544:	str	xzr, [sp, #64]
    9548:	ldr	x1, [sp, #72]
    954c:	ldr	x0, [sp, #64]
    9550:	cmp	x1, x0
    9554:	cset	w0, ls  // ls = plast
    9558:	and	w0, w0, #0xff
    955c:	and	x0, x0, #0xff
    9560:	cmp	x0, #0x0
    9564:	b.eq	9588 <__asan_backtrace_open@plt+0x2918>  // b.none
    9568:	ldr	x4, [sp, #64]
    956c:	ldr	x3, [sp, #72]
    9570:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    9574:	add	x2, x0, #0xf20
    9578:	mov	w1, #0x1fc                 	// #508
    957c:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    9580:	add	x0, x0, #0xee0
    9584:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    9588:	ldr	x0, [sp, #24]
    958c:	ldr	x0, [x0, #16]
    9590:	str	x0, [sp, #56]
    9594:	ldr	x0, [sp, #16]
    9598:	str	x0, [sp, #48]
    959c:	ldr	x1, [sp, #56]
    95a0:	ldr	x0, [sp, #48]
    95a4:	cmp	x1, x0
    95a8:	cset	w0, hi  // hi = pmore
    95ac:	and	w0, w0, #0xff
    95b0:	and	x0, x0, #0xff
    95b4:	cmp	x0, #0x0
    95b8:	b.eq	95dc <__asan_backtrace_open@plt+0x296c>  // b.none
    95bc:	ldr	x4, [sp, #48]
    95c0:	ldr	x3, [sp, #56]
    95c4:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    95c8:	add	x2, x0, #0xf40
    95cc:	mov	w1, #0x1fd                 	// #509
    95d0:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    95d4:	add	x0, x0, #0xee0
    95d8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    95dc:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
    95e0:	mov	x1, x0
    95e4:	ldr	x0, [sp, #16]
    95e8:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
    95ec:	str	x0, [sp, #40]
    95f0:	mov	w2, #0x0                   	// #0
    95f4:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    95f8:	add	x1, x0, #0xf60
    95fc:	ldr	x0, [sp, #40]
    9600:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
    9604:	str	x0, [sp, #32]
    9608:	ldr	x0, [sp, #24]
    960c:	ldr	x1, [x0]
    9610:	ldr	x0, [sp, #24]
    9614:	ldr	x0, [x0, #16]
    9618:	mov	x2, x0
    961c:	ldr	x0, [sp, #32]
    9620:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
    9624:	ldr	x0, [sp, #24]
    9628:	ldr	x2, [x0]
    962c:	ldr	x0, [sp, #24]
    9630:	ldr	x0, [x0, #8]
    9634:	mov	x1, x0
    9638:	mov	x0, x2
    963c:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
    9640:	ldr	x0, [sp, #24]
    9644:	ldr	x1, [sp, #32]
    9648:	str	x1, [x0]
    964c:	ldr	x0, [sp, #24]
    9650:	ldr	x1, [sp, #40]
    9654:	str	x1, [x0, #8]
    9658:	nop
    965c:	ldr	x30, [sp], #80
    9660:	ret

0000000000009664 <__ubsan_default_options@@Base>:
    9664:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    9668:	add	x0, x0, #0x30
    966c:	ret
    9670:	str	x30, [sp, #-16]!
    9674:	bl	6bc0 <__ubsan_default_options@plt>
    9678:	nop
    967c:	ldr	x30, [sp], #16
    9680:	ret
    9684:	str	x30, [sp, #-32]!
    9688:	str	x0, [sp, #24]
    968c:	ldr	x0, [sp, #24]
    9690:	bl	6b00 <getenv@plt>
    9694:	nop
    9698:	ldr	x30, [sp], #32
    969c:	ret
    96a0:	sub	sp, sp, #0x10
    96a4:	str	x0, [sp, #8]
    96a8:	ldr	x0, [sp, #8]
    96ac:	strb	wzr, [x0]
    96b0:	ldr	x0, [sp, #8]
    96b4:	strb	wzr, [x0, #1]
    96b8:	ldr	x0, [sp, #8]
    96bc:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    96c0:	add	x1, x1, #0x30
    96c4:	str	x1, [x0, #8]
    96c8:	ldr	x0, [sp, #8]
    96cc:	strb	wzr, [x0, #16]
    96d0:	ldr	x0, [sp, #8]
    96d4:	strb	wzr, [x0, #17]
    96d8:	nop
    96dc:	add	sp, sp, #0x10
    96e0:	ret
    96e4:	str	x30, [sp, #-32]!
    96e8:	str	x0, [sp, #24]
    96ec:	str	x1, [sp, #16]
    96f0:	ldr	x0, [sp, #16]
    96f4:	mov	x3, x0
    96f8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    96fc:	add	x2, x0, #0x38
    9700:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    9704:	add	x1, x0, #0x70
    9708:	ldr	x0, [sp, #24]
    970c:	bl	9894 <__ubsan_default_options@@Base+0x230>
    9710:	ldr	x0, [sp, #16]
    9714:	add	x0, x0, #0x1
    9718:	mov	x3, x0
    971c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    9720:	add	x2, x0, #0x80
    9724:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    9728:	add	x1, x0, #0xb0
    972c:	ldr	x0, [sp, #24]
    9730:	bl	9894 <__ubsan_default_options@@Base+0x230>
    9734:	ldr	x0, [sp, #16]
    9738:	add	x0, x0, #0x8
    973c:	mov	x3, x0
    9740:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    9744:	add	x2, x0, #0xc8
    9748:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    974c:	add	x1, x0, #0xe0
    9750:	ldr	x0, [sp, #24]
    9754:	bl	98ec <__ubsan_default_options@@Base+0x288>
    9758:	ldr	x0, [sp, #16]
    975c:	add	x0, x0, #0x10
    9760:	mov	x3, x0
    9764:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    9768:	add	x2, x0, #0xf0
    976c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    9770:	add	x1, x0, #0x138
    9774:	ldr	x0, [sp, #24]
    9778:	bl	9894 <__ubsan_default_options@@Base+0x230>
    977c:	ldr	x0, [sp, #16]
    9780:	add	x0, x0, #0x11
    9784:	mov	x3, x0
    9788:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    978c:	add	x2, x0, #0x150
    9790:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    9794:	add	x1, x0, #0x1c8
    9798:	ldr	x0, [sp, #24]
    979c:	bl	9894 <__ubsan_default_options@@Base+0x230>
    97a0:	nop
    97a4:	ldr	x30, [sp], #32
    97a8:	ret
    97ac:	sub	sp, sp, #0x130
    97b0:	str	x30, [sp]
    97b4:	bl	9944 <__ubsan_default_options@@Base+0x2e0>
    97b8:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
    97bc:	mov	x1, x0
    97c0:	add	x0, sp, #0x18
    97c4:	bl	1a5c0 <__sanitizer_set_report_fd@@Base+0x414>
    97c8:	strb	wzr, [sp, #84]
    97cc:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    97d0:	add	x0, x0, #0x1e8
    97d4:	bl	9684 <__ubsan_default_options@@Base+0x20>
    97d8:	str	x0, [sp, #32]
    97dc:	add	x0, sp, #0x18
    97e0:	bl	9960 <__ubsan_default_options@@Base+0x2fc>
    97e4:	bl	9110 <__asan_backtrace_open@plt+0x24a0>
    97e8:	str	x0, [sp, #296]
    97ec:	ldr	x0, [sp, #296]
    97f0:	bl	96a0 <__ubsan_default_options@@Base+0x3c>
    97f4:	add	x0, sp, #0x108
    97f8:	bl	1c400 <__sanitizer_set_report_fd@@Base+0x2254>
    97fc:	add	x2, sp, #0x108
    9800:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    9804:	ldr	x1, [x0, #4056]
    9808:	mov	x0, x2
    980c:	bl	1a964 <__sanitizer_set_report_fd@@Base+0x7b8>
    9810:	add	x0, sp, #0x108
    9814:	ldr	x1, [sp, #296]
    9818:	bl	96e4 <__ubsan_default_options@@Base+0x80>
    981c:	bl	9670 <__ubsan_default_options@@Base+0xc>
    9820:	mov	x1, x0
    9824:	add	x0, sp, #0x108
    9828:	bl	1c0a4 <__sanitizer_set_report_fd@@Base+0x1ef8>
    982c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    9830:	add	x0, x0, #0x200
    9834:	bl	9684 <__ubsan_default_options@@Base+0x20>
    9838:	mov	x1, x0
    983c:	add	x0, sp, #0x108
    9840:	bl	1c0a4 <__sanitizer_set_report_fd@@Base+0x1ef8>
    9844:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    9848:	ldr	x0, [x0, #4056]
    984c:	bl	1b410 <__sanitizer_set_report_fd@@Base+0x1264>
    9850:	bl	9984 <__ubsan_default_options@@Base+0x320>
    9854:	cmp	w0, #0x0
    9858:	cset	w0, ne  // ne = any
    985c:	and	w0, w0, #0xff
    9860:	cmp	w0, #0x0
    9864:	b.eq	986c <__ubsan_default_options@@Base+0x208>  // b.none
    9868:	bl	1ba1c <__sanitizer_set_report_fd@@Base+0x1870>
    986c:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
    9870:	ldrb	w0, [x0, #122]
    9874:	cmp	w0, #0x0
    9878:	b.eq	9884 <__ubsan_default_options@@Base+0x220>  // b.none
    987c:	add	x0, sp, #0x108
    9880:	bl	1baa0 <__sanitizer_set_report_fd@@Base+0x18f4>
    9884:	nop
    9888:	ldr	x30, [sp]
    988c:	add	sp, sp, #0x130
    9890:	ret
    9894:	stp	x19, x30, [sp, #-64]!
    9898:	str	x0, [sp, #40]
    989c:	str	x1, [sp, #32]
    98a0:	str	x2, [sp, #24]
    98a4:	str	x3, [sp, #16]
    98a8:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    98ac:	ldr	x1, [x0, #3776]
    98b0:	mov	x0, #0x10                  	// #16
    98b4:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
    98b8:	mov	x19, x0
    98bc:	ldr	x1, [sp, #16]
    98c0:	mov	x0, x19
    98c4:	bl	9bec <__ubsan_default_options@@Base+0x588>
    98c8:	str	x19, [sp, #56]
    98cc:	ldr	x3, [sp, #24]
    98d0:	ldr	x2, [sp, #56]
    98d4:	ldr	x1, [sp, #32]
    98d8:	ldr	x0, [sp, #40]
    98dc:	bl	1c2e4 <__sanitizer_set_report_fd@@Base+0x2138>
    98e0:	nop
    98e4:	ldp	x19, x30, [sp], #64
    98e8:	ret
    98ec:	stp	x19, x30, [sp, #-64]!
    98f0:	str	x0, [sp, #40]
    98f4:	str	x1, [sp, #32]
    98f8:	str	x2, [sp, #24]
    98fc:	str	x3, [sp, #16]
    9900:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    9904:	ldr	x1, [x0, #3776]
    9908:	mov	x0, #0x10                  	// #16
    990c:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
    9910:	mov	x19, x0
    9914:	ldr	x1, [sp, #16]
    9918:	mov	x0, x19
    991c:	bl	9c28 <__ubsan_default_options@@Base+0x5c4>
    9920:	str	x19, [sp, #56]
    9924:	ldr	x3, [sp, #24]
    9928:	ldr	x2, [sp, #56]
    992c:	ldr	x1, [sp, #32]
    9930:	ldr	x0, [sp, #40]
    9934:	bl	1c2e4 <__sanitizer_set_report_fd@@Base+0x2138>
    9938:	nop
    993c:	ldp	x19, x30, [sp], #64
    9940:	ret
    9944:	str	x30, [sp, #-16]!
    9948:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    994c:	ldr	x0, [x0, #4056]
    9950:	bl	1a290 <__sanitizer_set_report_fd@@Base+0xe4>
    9954:	nop
    9958:	ldr	x30, [sp], #16
    995c:	ret
    9960:	str	x30, [sp, #-32]!
    9964:	str	x0, [sp, #24]
    9968:	ldr	x1, [sp, #24]
    996c:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    9970:	ldr	x0, [x0, #4056]
    9974:	bl	1a5c0 <__sanitizer_set_report_fd@@Base+0x414>
    9978:	nop
    997c:	ldr	x30, [sp], #32
    9980:	ret
    9984:	str	x30, [sp, #-16]!
    9988:	mov	w1, #0x1                   	// #1
    998c:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    9990:	ldr	x0, [x0, #3896]
    9994:	bl	9b44 <__ubsan_default_options@@Base+0x4e0>
    9998:	ldr	x30, [sp], #16
    999c:	ret
    99a0:	str	x30, [sp, #-32]!
    99a4:	str	x0, [sp, #24]
    99a8:	str	x1, [sp, #16]
    99ac:	ldr	x1, [sp, #24]
    99b0:	ldr	x0, [sp, #16]
    99b4:	bl	10aa0 <__sancov_default_options@@Base+0x6f4>
    99b8:	ldr	x30, [sp], #32
    99bc:	ret
    99c0:	sub	sp, sp, #0x10
    99c4:	str	x0, [sp, #8]
    99c8:	str	x1, [sp]
    99cc:	mov	w0, #0x0                   	// #0
    99d0:	add	sp, sp, #0x10
    99d4:	ret
    99d8:	str	x30, [sp, #-32]!
    99dc:	str	x0, [sp, #24]
    99e0:	str	x1, [sp, #16]
    99e4:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    99e8:	add	x1, x0, #0xfd0
    99ec:	ldr	x0, [sp, #24]
    99f0:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
    99f4:	cmp	w0, #0x0
    99f8:	b.eq	9a2c <__ubsan_default_options@@Base+0x3c8>  // b.none
    99fc:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    9a00:	add	x1, x0, #0xfd8
    9a04:	ldr	x0, [sp, #24]
    9a08:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
    9a0c:	cmp	w0, #0x0
    9a10:	b.eq	9a2c <__ubsan_default_options@@Base+0x3c8>  // b.none
    9a14:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    9a18:	add	x1, x0, #0xfe0
    9a1c:	ldr	x0, [sp, #24]
    9a20:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
    9a24:	cmp	w0, #0x0
    9a28:	b.ne	9a34 <__ubsan_default_options@@Base+0x3d0>  // b.any
    9a2c:	mov	w0, #0x1                   	// #1
    9a30:	b	9a38 <__ubsan_default_options@@Base+0x3d4>
    9a34:	mov	w0, #0x0                   	// #0
    9a38:	cmp	w0, #0x0
    9a3c:	b.eq	9a50 <__ubsan_default_options@@Base+0x3ec>  // b.none
    9a40:	ldr	x0, [sp, #16]
    9a44:	strb	wzr, [x0]
    9a48:	mov	w0, #0x1                   	// #1
    9a4c:	b	9ac4 <__ubsan_default_options@@Base+0x460>
    9a50:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    9a54:	add	x1, x0, #0xfe8
    9a58:	ldr	x0, [sp, #24]
    9a5c:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
    9a60:	cmp	w0, #0x0
    9a64:	b.eq	9a98 <__ubsan_default_options@@Base+0x434>  // b.none
    9a68:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    9a6c:	add	x1, x0, #0xff0
    9a70:	ldr	x0, [sp, #24]
    9a74:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
    9a78:	cmp	w0, #0x0
    9a7c:	b.eq	9a98 <__ubsan_default_options@@Base+0x434>  // b.none
    9a80:	adrp	x0, 4a000 <__asan_backtrace_release_view@@Base+0x5c>
    9a84:	add	x1, x0, #0xff8
    9a88:	ldr	x0, [sp, #24]
    9a8c:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
    9a90:	cmp	w0, #0x0
    9a94:	b.ne	9aa0 <__ubsan_default_options@@Base+0x43c>  // b.any
    9a98:	mov	w0, #0x1                   	// #1
    9a9c:	b	9aa4 <__ubsan_default_options@@Base+0x440>
    9aa0:	mov	w0, #0x0                   	// #0
    9aa4:	cmp	w0, #0x0
    9aa8:	b.eq	9ac0 <__ubsan_default_options@@Base+0x45c>  // b.none
    9aac:	ldr	x0, [sp, #16]
    9ab0:	mov	w1, #0x1                   	// #1
    9ab4:	strb	w1, [x0]
    9ab8:	mov	w0, #0x1                   	// #1
    9abc:	b	9ac4 <__ubsan_default_options@@Base+0x460>
    9ac0:	mov	w0, #0x0                   	// #0
    9ac4:	ldr	x30, [sp], #32
    9ac8:	ret
    9acc:	str	x30, [sp, #-32]!
    9ad0:	str	x0, [sp, #24]
    9ad4:	str	x1, [sp, #16]
    9ad8:	ldr	x0, [sp, #24]
    9adc:	ldr	x0, [x0, #8]
    9ae0:	mov	x1, x0
    9ae4:	ldr	x0, [sp, #16]
    9ae8:	bl	99d8 <__ubsan_default_options@@Base+0x374>
    9aec:	and	w0, w0, #0xff
    9af0:	cmp	w0, #0x0
    9af4:	b.eq	9b00 <__ubsan_default_options@@Base+0x49c>  // b.none
    9af8:	mov	w0, #0x1                   	// #1
    9afc:	b	9b14 <__ubsan_default_options@@Base+0x4b0>
    9b00:	ldr	x1, [sp, #16]
    9b04:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    9b08:	add	x0, x0, #0x0
    9b0c:	bl	259c8 <OnPrint@@Base+0x3a8>
    9b10:	mov	w0, #0x0                   	// #0
    9b14:	ldr	x30, [sp], #32
    9b18:	ret
    9b1c:	sub	sp, sp, #0x10
    9b20:	str	x0, [sp, #8]
    9b24:	str	x1, [sp]
    9b28:	ldr	x0, [sp, #8]
    9b2c:	ldr	x0, [x0, #8]
    9b30:	ldr	x1, [sp]
    9b34:	str	x1, [x0]
    9b38:	mov	w0, #0x1                   	// #1
    9b3c:	add	sp, sp, #0x10
    9b40:	ret
    9b44:	sub	sp, sp, #0x20
    9b48:	str	x0, [sp, #8]
    9b4c:	str	w1, [sp, #4]
    9b50:	ldr	w0, [sp, #4]
    9b54:	cmp	w0, #0x1
    9b58:	b.ne	9b6c <__ubsan_default_options@@Base+0x508>  // b.any
    9b5c:	ldr	x0, [sp, #8]
    9b60:	ldr	w0, [x0]
    9b64:	str	w0, [sp, #28]
    9b68:	b	9bbc <__ubsan_default_options@@Base+0x558>
    9b6c:	ldr	w0, [sp, #4]
    9b70:	cmp	w0, #0x2
    9b74:	b.ne	9b88 <__ubsan_default_options@@Base+0x524>  // b.any
    9b78:	ldr	x0, [sp, #8]
    9b7c:	ldr	w0, [x0]
    9b80:	str	w0, [sp, #28]
    9b84:	b	9bbc <__ubsan_default_options@@Base+0x558>
    9b88:	ldr	w0, [sp, #4]
    9b8c:	cmp	w0, #0x4
    9b90:	b.ne	9ba8 <__ubsan_default_options@@Base+0x544>  // b.any
    9b94:	ldr	x0, [sp, #8]
    9b98:	ldr	w0, [x0]
    9b9c:	str	w0, [sp, #28]
    9ba0:	dmb	ish
    9ba4:	b	9bbc <__ubsan_default_options@@Base+0x558>
    9ba8:	dmb	ish
    9bac:	ldr	x0, [sp, #8]
    9bb0:	ldr	w0, [x0]
    9bb4:	str	w0, [sp, #28]
    9bb8:	dmb	ish
    9bbc:	ldr	w0, [sp, #28]
    9bc0:	add	sp, sp, #0x20
    9bc4:	ret
    9bc8:	sub	sp, sp, #0x10
    9bcc:	str	x0, [sp, #8]
    9bd0:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
    9bd4:	add	x1, x0, #0xca0
    9bd8:	ldr	x0, [sp, #8]
    9bdc:	str	x1, [x0]
    9be0:	nop
    9be4:	add	sp, sp, #0x10
    9be8:	ret
    9bec:	str	x30, [sp, #-32]!
    9bf0:	str	x0, [sp, #24]
    9bf4:	str	x1, [sp, #16]
    9bf8:	ldr	x0, [sp, #24]
    9bfc:	bl	9bc8 <__ubsan_default_options@@Base+0x564>
    9c00:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
    9c04:	add	x1, x0, #0xc88
    9c08:	ldr	x0, [sp, #24]
    9c0c:	str	x1, [x0]
    9c10:	ldr	x0, [sp, #24]
    9c14:	ldr	x1, [sp, #16]
    9c18:	str	x1, [x0, #8]
    9c1c:	nop
    9c20:	ldr	x30, [sp], #32
    9c24:	ret
    9c28:	str	x30, [sp, #-32]!
    9c2c:	str	x0, [sp, #24]
    9c30:	str	x1, [sp, #16]
    9c34:	ldr	x0, [sp, #24]
    9c38:	bl	9bc8 <__ubsan_default_options@@Base+0x564>
    9c3c:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
    9c40:	add	x1, x0, #0xc70
    9c44:	ldr	x0, [sp, #24]
    9c48:	str	x1, [x0]
    9c4c:	ldr	x0, [sp, #24]
    9c50:	ldr	x1, [sp, #16]
    9c54:	str	x1, [x0, #8]
    9c58:	nop
    9c5c:	ldr	x30, [sp], #32
    9c60:	ret
    9c64:	stp	x19, x30, [sp, #-48]!
    9c68:	stp	x0, x1, [sp, #32]
    9c6c:	mov	x19, x2
    9c70:	str	w3, [sp, #28]
    9c74:	ldrb	w0, [x19]
    9c78:	cmp	w0, #0x0
    9c7c:	b.eq	9c88 <__ubsan_default_options@@Base+0x624>  // b.none
    9c80:	mov	w0, #0x0                   	// #0
    9c84:	b	9cd4 <__ubsan_default_options@@Base+0x670>
    9c88:	add	x0, sp, #0x20
    9c8c:	bl	db18 <__ubsan_handle_cfi_check_fail_abort@@Base+0x3b4>
    9c90:	and	w0, w0, #0xff
    9c94:	cmp	w0, #0x0
    9c98:	b.ne	9cc4 <__ubsan_default_options@@Base+0x660>  // b.any
    9c9c:	ldr	x19, [x19, #8]
    9ca0:	add	x0, sp, #0x20
    9ca4:	bl	8a88 <__asan_backtrace_open@plt+0x1e18>
    9ca8:	mov	x2, x0
    9cac:	mov	x1, x19
    9cb0:	ldr	w0, [sp, #28]
    9cb4:	bl	8714 <__asan_backtrace_open@plt+0x1aa4>
    9cb8:	and	w0, w0, #0xff
    9cbc:	cmp	w0, #0x0
    9cc0:	b.eq	9ccc <__ubsan_default_options@@Base+0x668>  // b.none
    9cc4:	mov	w0, #0x1                   	// #1
    9cc8:	b	9cd0 <__ubsan_default_options@@Base+0x66c>
    9ccc:	mov	w0, #0x0                   	// #0
    9cd0:	nop
    9cd4:	ldp	x19, x30, [sp], #48
    9cd8:	ret
    9cdc:	sub	sp, sp, #0x830
    9ce0:	stp	x19, x30, [sp]
    9ce4:	str	x0, [sp, #104]
    9ce8:	str	x1, [sp, #96]
    9cec:	mov	x19, x2
    9cf0:	ldr	x0, [sp, #104]
    9cf4:	bl	dad0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x36c>
    9cf8:	add	x3, sp, #0xd0
    9cfc:	mov	x2, x1
    9d00:	mov	x1, x0
    9d04:	mov	x0, x3
    9d08:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    9d0c:	ldr	x0, [sp, #104]
    9d10:	ldrb	w0, [x0, #24]
    9d14:	mov	w1, w0
    9d18:	mov	x0, #0x1                   	// #1
    9d1c:	lsl	x0, x0, x1
    9d20:	str	x0, [sp, #2080]
    9d24:	ldr	x0, [sp, #96]
    9d28:	cmp	x0, #0x0
    9d2c:	b.ne	9d3c <__ubsan_default_options@@Base+0x6d8>  // b.any
    9d30:	mov	w0, #0x1                   	// #1
    9d34:	str	w0, [sp, #2092]
    9d38:	b	9d68 <__ubsan_default_options@@Base+0x704>
    9d3c:	ldr	x0, [sp, #2080]
    9d40:	sub	x1, x0, #0x1
    9d44:	ldr	x0, [sp, #96]
    9d48:	and	x0, x1, x0
    9d4c:	cmp	x0, #0x0
    9d50:	b.eq	9d60 <__ubsan_default_options@@Base+0x6fc>  // b.none
    9d54:	mov	w0, #0x3                   	// #3
    9d58:	str	w0, [sp, #2092]
    9d5c:	b	9d68 <__ubsan_default_options@@Base+0x704>
    9d60:	mov	w0, #0x4                   	// #4
    9d64:	str	w0, [sp, #2092]
    9d68:	add	x0, sp, #0xd0
    9d6c:	bl	8db4 <__asan_backtrace_open@plt+0x2144>
    9d70:	mov	x4, x0
    9d74:	mov	x5, x1
    9d78:	add	x2, sp, #0x40
    9d7c:	mov	x3, x19
    9d80:	ldp	x0, x1, [x3]
    9d84:	stp	x0, x1, [x2]
    9d88:	ldr	x0, [x3, #16]
    9d8c:	str	x0, [x2, #16]
    9d90:	add	x0, sp, #0x40
    9d94:	ldr	w3, [sp, #2092]
    9d98:	mov	x2, x0
    9d9c:	mov	x0, x4
    9da0:	mov	x1, x5
    9da4:	bl	9c64 <__ubsan_default_options@@Base+0x600>
    9da8:	and	w0, w0, #0xff
    9dac:	cmp	w0, #0x0
    9db0:	b.ne	a11c <__ubsan_default_options@@Base+0xab8>  // b.any
    9db4:	add	x0, sp, #0xc8
    9db8:	mov	x1, #0x0                   	// #0
    9dbc:	bl	8cd8 <__asan_backtrace_open@plt+0x2068>
    9dc0:	ldr	x0, [sp, #104]
    9dc4:	bl	8a64 <__asan_backtrace_open@plt+0x1df4>
    9dc8:	and	w0, w0, #0xff
    9dcc:	cmp	w0, #0x0
    9dd0:	b.eq	9e14 <__ubsan_default_options@@Base+0x7b0>  // b.none
    9dd4:	ldr	x0, [x19, #8]
    9dd8:	bl	dcbc <__ubsan_handle_cfi_check_fail_abort@@Base+0x558>
    9ddc:	mov	x1, x0
    9de0:	add	x0, sp, #0xc8
    9de4:	bl	dc7c <__ubsan_handle_cfi_check_fail_abort@@Base+0x518>
    9de8:	add	x1, sp, #0xc8
    9dec:	add	x0, sp, #0xf8
    9df0:	bl	ddc8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x664>
    9df4:	add	x0, sp, #0xd0
    9df8:	add	x1, sp, #0xf8
    9dfc:	ldp	x2, x3, [x1]
    9e00:	stp	x2, x3, [x0]
    9e04:	ldp	x2, x3, [x1, #16]
    9e08:	stp	x2, x3, [x0, #16]
    9e0c:	ldr	x1, [x1, #32]
    9e10:	str	x1, [x0, #32]
    9e14:	add	x2, sp, #0x40
    9e18:	mov	x3, x19
    9e1c:	ldp	x0, x1, [x3]
    9e20:	stp	x0, x1, [x2]
    9e24:	ldr	x0, [x3, #16]
    9e28:	str	x0, [x2, #16]
    9e2c:	add	x0, sp, #0x10
    9e30:	add	x1, sp, #0xd0
    9e34:	ldp	x2, x3, [x1]
    9e38:	stp	x2, x3, [x0]
    9e3c:	ldp	x2, x3, [x1, #16]
    9e40:	stp	x2, x3, [x0, #16]
    9e44:	ldr	x1, [x1, #32]
    9e48:	str	x1, [x0, #32]
    9e4c:	add	x2, sp, #0x10
    9e50:	add	x1, sp, #0x40
    9e54:	add	x0, sp, #0x78
    9e58:	ldr	w3, [sp, #2092]
    9e5c:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    9e60:	ldr	w0, [sp, #2092]
    9e64:	cmp	w0, #0x4
    9e68:	b.eq	9fc0 <__ubsan_default_options@@Base+0x95c>  // b.none
    9e6c:	ldr	w0, [sp, #2092]
    9e70:	cmp	w0, #0x4
    9e74:	b.gt	a05c <__ubsan_default_options@@Base+0x9f8>
    9e78:	ldr	w0, [sp, #2092]
    9e7c:	cmp	w0, #0x1
    9e80:	b.eq	9e94 <__ubsan_default_options@@Base+0x830>  // b.none
    9e84:	ldr	w0, [sp, #2092]
    9e88:	cmp	w0, #0x3
    9e8c:	b.eq	9f1c <__ubsan_default_options@@Base+0x8b8>  // b.none
    9e90:	b	a05c <__ubsan_default_options@@Base+0x9f8>
    9e94:	add	x0, sp, #0x10
    9e98:	add	x1, sp, #0xd0
    9e9c:	ldp	x2, x3, [x1]
    9ea0:	stp	x2, x3, [x0]
    9ea4:	ldp	x2, x3, [x1, #16]
    9ea8:	stp	x2, x3, [x0, #16]
    9eac:	ldr	x1, [x1, #32]
    9eb0:	str	x1, [x0, #32]
    9eb4:	add	x1, sp, #0x10
    9eb8:	add	x5, sp, #0x120
    9ebc:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    9ec0:	add	x4, x0, #0x420
    9ec4:	ldr	w3, [sp, #2092]
    9ec8:	mov	w2, #0x0                   	// #0
    9ecc:	mov	x0, x5
    9ed0:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    9ed4:	ldr	x0, [sp, #104]
    9ed8:	ldrb	w0, [x0, #25]
    9edc:	mov	w1, w0
    9ee0:	adrp	x0, 77000 <_Unwind_Backtrace@GCC_3.3>
    9ee4:	add	x0, x0, #0x460
    9ee8:	sxtw	x1, w1
    9eec:	ldr	x1, [x0, x1, lsl #3]
    9ef0:	add	x0, sp, #0x120
    9ef4:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    9ef8:	mov	x2, x0
    9efc:	ldr	x0, [sp, #104]
    9f00:	ldr	x0, [x0, #16]
    9f04:	mov	x1, x0
    9f08:	mov	x0, x2
    9f0c:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    9f10:	add	x0, sp, #0x120
    9f14:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    9f18:	b	a0a8 <__ubsan_default_options@@Base+0xa44>
    9f1c:	add	x0, sp, #0x10
    9f20:	add	x1, sp, #0xd0
    9f24:	ldp	x2, x3, [x1]
    9f28:	stp	x2, x3, [x0]
    9f2c:	ldp	x2, x3, [x1, #16]
    9f30:	stp	x2, x3, [x0, #16]
    9f34:	ldr	x1, [x1, #32]
    9f38:	str	x1, [x0, #32]
    9f3c:	add	x1, sp, #0x10
    9f40:	add	x5, sp, #0x2d0
    9f44:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    9f48:	add	x4, x0, #0x440
    9f4c:	ldr	w3, [sp, #2092]
    9f50:	mov	w2, #0x0                   	// #0
    9f54:	mov	x0, x5
    9f58:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    9f5c:	ldr	x0, [sp, #104]
    9f60:	ldrb	w0, [x0, #25]
    9f64:	mov	w1, w0
    9f68:	adrp	x0, 77000 <_Unwind_Backtrace@GCC_3.3>
    9f6c:	add	x0, x0, #0x460
    9f70:	sxtw	x1, w1
    9f74:	ldr	x1, [x0, x1, lsl #3]
    9f78:	add	x0, sp, #0x2d0
    9f7c:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    9f80:	mov	x2, x0
    9f84:	ldr	x0, [sp, #96]
    9f88:	mov	x1, x0
    9f8c:	mov	x0, x2
    9f90:	bl	dff0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x88c>
    9f94:	ldr	x1, [sp, #2080]
    9f98:	bl	dfa0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x83c>
    9f9c:	mov	x2, x0
    9fa0:	ldr	x0, [sp, #104]
    9fa4:	ldr	x0, [x0, #16]
    9fa8:	mov	x1, x0
    9fac:	mov	x0, x2
    9fb0:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    9fb4:	add	x0, sp, #0x2d0
    9fb8:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    9fbc:	b	a0a8 <__ubsan_default_options@@Base+0xa44>
    9fc0:	add	x0, sp, #0x10
    9fc4:	add	x1, sp, #0xd0
    9fc8:	ldp	x2, x3, [x1]
    9fcc:	stp	x2, x3, [x0]
    9fd0:	ldp	x2, x3, [x1, #16]
    9fd4:	stp	x2, x3, [x0, #16]
    9fd8:	ldr	x1, [x1, #32]
    9fdc:	str	x1, [x0, #32]
    9fe0:	add	x1, sp, #0x10
    9fe4:	add	x5, sp, #0x480
    9fe8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    9fec:	add	x4, x0, #0x488
    9ff0:	ldr	w3, [sp, #2092]
    9ff4:	mov	w2, #0x0                   	// #0
    9ff8:	mov	x0, x5
    9ffc:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    a000:	ldr	x0, [sp, #104]
    a004:	ldrb	w0, [x0, #25]
    a008:	mov	w1, w0
    a00c:	adrp	x0, 77000 <_Unwind_Backtrace@GCC_3.3>
    a010:	add	x0, x0, #0x460
    a014:	sxtw	x1, w1
    a018:	ldr	x1, [x0, x1, lsl #3]
    a01c:	add	x0, sp, #0x480
    a020:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    a024:	mov	x2, x0
    a028:	ldr	x0, [sp, #96]
    a02c:	mov	x1, x0
    a030:	mov	x0, x2
    a034:	bl	dff0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x88c>
    a038:	mov	x2, x0
    a03c:	ldr	x0, [sp, #104]
    a040:	ldr	x0, [x0, #16]
    a044:	mov	x1, x0
    a048:	mov	x0, x2
    a04c:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    a050:	add	x0, sp, #0x480
    a054:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    a058:	b	a0a8 <__ubsan_default_options@@Base+0xa44>
    a05c:	str	xzr, [sp, #2072]
    a060:	str	xzr, [sp, #2064]
    a064:	ldr	x1, [sp, #2072]
    a068:	ldr	x0, [sp, #2064]
    a06c:	cmp	x1, x0
    a070:	cset	w0, eq  // eq = none
    a074:	and	w0, w0, #0xff
    a078:	and	x0, x0, #0xff
    a07c:	cmp	x0, #0x0
    a080:	b.eq	a0a4 <__ubsan_default_options@@Base+0xa40>  // b.none
    a084:	ldr	x4, [sp, #2064]
    a088:	ldr	x3, [sp, #2072]
    a08c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    a090:	add	x2, x0, #0x4c8
    a094:	mov	w1, #0x58                  	// #88
    a098:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    a09c:	add	x0, x0, #0x4f8
    a0a0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    a0a4:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    a0a8:	ldr	x0, [sp, #96]
    a0ac:	cmp	x0, #0x0
    a0b0:	b.eq	a108 <__ubsan_default_options@@Base+0xaa4>  // b.none
    a0b4:	add	x0, sp, #0x7e8
    a0b8:	ldr	x1, [sp, #96]
    a0bc:	bl	dd8c <__ubsan_handle_cfi_check_fail_abort@@Base+0x628>
    a0c0:	add	x0, sp, #0x10
    a0c4:	add	x1, sp, #0x7e8
    a0c8:	ldp	x2, x3, [x1]
    a0cc:	stp	x2, x3, [x0]
    a0d0:	ldp	x2, x3, [x1, #16]
    a0d4:	stp	x2, x3, [x0, #16]
    a0d8:	ldr	x1, [x1, #32]
    a0dc:	str	x1, [x0, #32]
    a0e0:	add	x1, sp, #0x10
    a0e4:	add	x5, sp, #0x630
    a0e8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    a0ec:	add	x4, x0, #0x530
    a0f0:	ldr	w3, [sp, #2092]
    a0f4:	mov	w2, #0x1                   	// #1
    a0f8:	mov	x0, x5
    a0fc:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    a100:	add	x0, sp, #0x630
    a104:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    a108:	add	x0, sp, #0x78
    a10c:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    a110:	add	x0, sp, #0xc8
    a114:	bl	8cfc <__asan_backtrace_open@plt+0x208c>
    a118:	b	a120 <__ubsan_default_options@@Base+0xabc>
    a11c:	nop
    a120:	ldp	x19, x30, [sp]
    a124:	add	sp, sp, #0x830
    a128:	ret

000000000000a12c <__ubsan_handle_type_mismatch_v1@@Base>:
    a12c:	stp	x29, x30, [sp, #-112]!
    a130:	mov	x29, sp
    a134:	mov	x2, x30
    a138:	str	x0, [x29, #56]
    a13c:	str	x1, [x29, #48]
    a140:	mov	x0, x29
    a144:	str	x0, [x29, #104]
    a148:	mov	x0, x2
    a14c:	str	x0, [x29, #96]
    a150:	stp	xzr, xzr, [x29, #72]
    a154:	str	xzr, [x29, #88]
    a158:	ldr	x0, [x29, #96]
    a15c:	str	x0, [x29, #80]
    a160:	ldr	x0, [x29, #104]
    a164:	str	x0, [x29, #88]
    a168:	add	x2, x29, #0x10
    a16c:	add	x3, x29, #0x48
    a170:	ldp	x0, x1, [x3]
    a174:	stp	x0, x1, [x2]
    a178:	ldr	x0, [x3, #16]
    a17c:	str	x0, [x2, #16]
    a180:	add	x0, x29, #0x10
    a184:	mov	x2, x0
    a188:	ldr	x1, [x29, #48]
    a18c:	ldr	x0, [x29, #56]
    a190:	bl	9cdc <__ubsan_default_options@@Base+0x678>
    a194:	nop
    a198:	ldp	x29, x30, [sp], #112
    a19c:	ret

000000000000a1a0 <__ubsan_handle_type_mismatch_v1_abort@@Base>:
    a1a0:	stp	x29, x30, [sp, #-112]!
    a1a4:	mov	x29, sp
    a1a8:	mov	x2, x30
    a1ac:	str	x0, [x29, #56]
    a1b0:	str	x1, [x29, #48]
    a1b4:	mov	x0, x29
    a1b8:	str	x0, [x29, #104]
    a1bc:	mov	x0, x2
    a1c0:	str	x0, [x29, #96]
    a1c4:	stp	xzr, xzr, [x29, #72]
    a1c8:	str	xzr, [x29, #88]
    a1cc:	mov	w0, #0x1                   	// #1
    a1d0:	strb	w0, [x29, #72]
    a1d4:	ldr	x0, [x29, #96]
    a1d8:	str	x0, [x29, #80]
    a1dc:	ldr	x0, [x29, #104]
    a1e0:	str	x0, [x29, #88]
    a1e4:	add	x2, x29, #0x10
    a1e8:	add	x3, x29, #0x48
    a1ec:	ldp	x0, x1, [x3]
    a1f0:	stp	x0, x1, [x2]
    a1f4:	ldr	x0, [x3, #16]
    a1f8:	str	x0, [x2, #16]
    a1fc:	add	x0, x29, #0x10
    a200:	mov	x2, x0
    a204:	ldr	x1, [x29, #48]
    a208:	ldr	x0, [x29, #56]
    a20c:	bl	9cdc <__ubsan_default_options@@Base+0x678>
    a210:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>

000000000000a214 <__ubsan_handle_add_overflow@@Base>:
    a214:	stp	x29, x30, [sp, #-144]!
    a218:	mov	x29, sp
    a21c:	mov	x3, x30
    a220:	str	x0, [x29, #72]
    a224:	str	x1, [x29, #64]
    a228:	str	x2, [x29, #56]
    a22c:	mov	x0, x29
    a230:	str	x0, [x29, #136]
    a234:	mov	x0, x3
    a238:	str	x0, [x29, #128]
    a23c:	stp	xzr, xzr, [x29, #88]
    a240:	str	xzr, [x29, #104]
    a244:	ldr	x0, [x29, #128]
    a248:	str	x0, [x29, #96]
    a24c:	ldr	x0, [x29, #136]
    a250:	str	x0, [x29, #104]
    a254:	ldr	x0, [x29, #72]
    a258:	ldr	x1, [x0, #16]
    a25c:	add	x0, x29, #0x70
    a260:	ldr	x2, [x29, #56]
    a264:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    a268:	add	x2, x29, #0x10
    a26c:	add	x3, x29, #0x58
    a270:	ldp	x0, x1, [x3]
    a274:	stp	x0, x1, [x2]
    a278:	ldr	x0, [x3, #16]
    a27c:	str	x0, [x2, #16]
    a280:	add	x0, x29, #0x10
    a284:	mov	x5, x0
    a288:	ldp	x3, x4, [x29, #112]
    a28c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    a290:	add	x2, x0, #0x548
    a294:	ldr	x1, [x29, #64]
    a298:	ldr	x0, [x29, #72]
    a29c:	bl	d840 <__ubsan_handle_cfi_check_fail_abort@@Base+0xdc>
    a2a0:	nop
    a2a4:	ldp	x29, x30, [sp], #144
    a2a8:	ret

000000000000a2ac <__ubsan_handle_add_overflow_abort@@Base>:
    a2ac:	stp	x29, x30, [sp, #-144]!
    a2b0:	mov	x29, sp
    a2b4:	mov	x3, x30
    a2b8:	str	x0, [x29, #72]
    a2bc:	str	x1, [x29, #64]
    a2c0:	str	x2, [x29, #56]
    a2c4:	mov	x0, x29
    a2c8:	str	x0, [x29, #136]
    a2cc:	mov	x0, x3
    a2d0:	str	x0, [x29, #128]
    a2d4:	stp	xzr, xzr, [x29, #88]
    a2d8:	str	xzr, [x29, #104]
    a2dc:	mov	w0, #0x1                   	// #1
    a2e0:	strb	w0, [x29, #88]
    a2e4:	ldr	x0, [x29, #128]
    a2e8:	str	x0, [x29, #96]
    a2ec:	ldr	x0, [x29, #136]
    a2f0:	str	x0, [x29, #104]
    a2f4:	ldr	x0, [x29, #72]
    a2f8:	ldr	x1, [x0, #16]
    a2fc:	add	x0, x29, #0x70
    a300:	ldr	x2, [x29, #56]
    a304:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    a308:	add	x2, x29, #0x10
    a30c:	add	x3, x29, #0x58
    a310:	ldp	x0, x1, [x3]
    a314:	stp	x0, x1, [x2]
    a318:	ldr	x0, [x3, #16]
    a31c:	str	x0, [x2, #16]
    a320:	add	x0, x29, #0x10
    a324:	mov	x5, x0
    a328:	ldp	x3, x4, [x29, #112]
    a32c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    a330:	add	x2, x0, #0x548
    a334:	ldr	x1, [x29, #64]
    a338:	ldr	x0, [x29, #72]
    a33c:	bl	d840 <__ubsan_handle_cfi_check_fail_abort@@Base+0xdc>
    a340:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>

000000000000a344 <__ubsan_handle_sub_overflow@@Base>:
    a344:	stp	x29, x30, [sp, #-144]!
    a348:	mov	x29, sp
    a34c:	mov	x3, x30
    a350:	str	x0, [x29, #72]
    a354:	str	x1, [x29, #64]
    a358:	str	x2, [x29, #56]
    a35c:	mov	x0, x29
    a360:	str	x0, [x29, #136]
    a364:	mov	x0, x3
    a368:	str	x0, [x29, #128]
    a36c:	stp	xzr, xzr, [x29, #88]
    a370:	str	xzr, [x29, #104]
    a374:	ldr	x0, [x29, #128]
    a378:	str	x0, [x29, #96]
    a37c:	ldr	x0, [x29, #136]
    a380:	str	x0, [x29, #104]
    a384:	ldr	x0, [x29, #72]
    a388:	ldr	x1, [x0, #16]
    a38c:	add	x0, x29, #0x70
    a390:	ldr	x2, [x29, #56]
    a394:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    a398:	add	x2, x29, #0x10
    a39c:	add	x3, x29, #0x58
    a3a0:	ldp	x0, x1, [x3]
    a3a4:	stp	x0, x1, [x2]
    a3a8:	ldr	x0, [x3, #16]
    a3ac:	str	x0, [x2, #16]
    a3b0:	add	x0, x29, #0x10
    a3b4:	mov	x5, x0
    a3b8:	ldp	x3, x4, [x29, #112]
    a3bc:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    a3c0:	add	x2, x0, #0x550
    a3c4:	ldr	x1, [x29, #64]
    a3c8:	ldr	x0, [x29, #72]
    a3cc:	bl	d840 <__ubsan_handle_cfi_check_fail_abort@@Base+0xdc>
    a3d0:	nop
    a3d4:	ldp	x29, x30, [sp], #144
    a3d8:	ret

000000000000a3dc <__ubsan_handle_sub_overflow_abort@@Base>:
    a3dc:	stp	x29, x30, [sp, #-144]!
    a3e0:	mov	x29, sp
    a3e4:	mov	x3, x30
    a3e8:	str	x0, [x29, #72]
    a3ec:	str	x1, [x29, #64]
    a3f0:	str	x2, [x29, #56]
    a3f4:	mov	x0, x29
    a3f8:	str	x0, [x29, #136]
    a3fc:	mov	x0, x3
    a400:	str	x0, [x29, #128]
    a404:	stp	xzr, xzr, [x29, #88]
    a408:	str	xzr, [x29, #104]
    a40c:	mov	w0, #0x1                   	// #1
    a410:	strb	w0, [x29, #88]
    a414:	ldr	x0, [x29, #128]
    a418:	str	x0, [x29, #96]
    a41c:	ldr	x0, [x29, #136]
    a420:	str	x0, [x29, #104]
    a424:	ldr	x0, [x29, #72]
    a428:	ldr	x1, [x0, #16]
    a42c:	add	x0, x29, #0x70
    a430:	ldr	x2, [x29, #56]
    a434:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    a438:	add	x2, x29, #0x10
    a43c:	add	x3, x29, #0x58
    a440:	ldp	x0, x1, [x3]
    a444:	stp	x0, x1, [x2]
    a448:	ldr	x0, [x3, #16]
    a44c:	str	x0, [x2, #16]
    a450:	add	x0, x29, #0x10
    a454:	mov	x5, x0
    a458:	ldp	x3, x4, [x29, #112]
    a45c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    a460:	add	x2, x0, #0x550
    a464:	ldr	x1, [x29, #64]
    a468:	ldr	x0, [x29, #72]
    a46c:	bl	d840 <__ubsan_handle_cfi_check_fail_abort@@Base+0xdc>
    a470:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>

000000000000a474 <__ubsan_handle_mul_overflow@@Base>:
    a474:	stp	x29, x30, [sp, #-144]!
    a478:	mov	x29, sp
    a47c:	mov	x3, x30
    a480:	str	x0, [x29, #72]
    a484:	str	x1, [x29, #64]
    a488:	str	x2, [x29, #56]
    a48c:	mov	x0, x29
    a490:	str	x0, [x29, #136]
    a494:	mov	x0, x3
    a498:	str	x0, [x29, #128]
    a49c:	stp	xzr, xzr, [x29, #88]
    a4a0:	str	xzr, [x29, #104]
    a4a4:	ldr	x0, [x29, #128]
    a4a8:	str	x0, [x29, #96]
    a4ac:	ldr	x0, [x29, #136]
    a4b0:	str	x0, [x29, #104]
    a4b4:	ldr	x0, [x29, #72]
    a4b8:	ldr	x1, [x0, #16]
    a4bc:	add	x0, x29, #0x70
    a4c0:	ldr	x2, [x29, #56]
    a4c4:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    a4c8:	add	x2, x29, #0x10
    a4cc:	add	x3, x29, #0x58
    a4d0:	ldp	x0, x1, [x3]
    a4d4:	stp	x0, x1, [x2]
    a4d8:	ldr	x0, [x3, #16]
    a4dc:	str	x0, [x2, #16]
    a4e0:	add	x0, x29, #0x10
    a4e4:	mov	x5, x0
    a4e8:	ldp	x3, x4, [x29, #112]
    a4ec:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    a4f0:	add	x2, x0, #0x558
    a4f4:	ldr	x1, [x29, #64]
    a4f8:	ldr	x0, [x29, #72]
    a4fc:	bl	d840 <__ubsan_handle_cfi_check_fail_abort@@Base+0xdc>
    a500:	nop
    a504:	ldp	x29, x30, [sp], #144
    a508:	ret

000000000000a50c <__ubsan_handle_mul_overflow_abort@@Base>:
    a50c:	stp	x29, x30, [sp, #-144]!
    a510:	mov	x29, sp
    a514:	mov	x3, x30
    a518:	str	x0, [x29, #72]
    a51c:	str	x1, [x29, #64]
    a520:	str	x2, [x29, #56]
    a524:	mov	x0, x29
    a528:	str	x0, [x29, #136]
    a52c:	mov	x0, x3
    a530:	str	x0, [x29, #128]
    a534:	stp	xzr, xzr, [x29, #88]
    a538:	str	xzr, [x29, #104]
    a53c:	mov	w0, #0x1                   	// #1
    a540:	strb	w0, [x29, #88]
    a544:	ldr	x0, [x29, #128]
    a548:	str	x0, [x29, #96]
    a54c:	ldr	x0, [x29, #136]
    a550:	str	x0, [x29, #104]
    a554:	ldr	x0, [x29, #72]
    a558:	ldr	x1, [x0, #16]
    a55c:	add	x0, x29, #0x70
    a560:	ldr	x2, [x29, #56]
    a564:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    a568:	add	x2, x29, #0x10
    a56c:	add	x3, x29, #0x58
    a570:	ldp	x0, x1, [x3]
    a574:	stp	x0, x1, [x2]
    a578:	ldr	x0, [x3, #16]
    a57c:	str	x0, [x2, #16]
    a580:	add	x0, x29, #0x10
    a584:	mov	x5, x0
    a588:	ldp	x3, x4, [x29, #112]
    a58c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    a590:	add	x2, x0, #0x558
    a594:	ldr	x1, [x29, #64]
    a598:	ldr	x0, [x29, #72]
    a59c:	bl	d840 <__ubsan_handle_cfi_check_fail_abort@@Base+0xdc>
    a5a0:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    a5a4:	sub	sp, sp, #0x4e0
    a5a8:	stp	x19, x30, [sp]
    a5ac:	str	x0, [sp, #104]
    a5b0:	str	x1, [sp, #96]
    a5b4:	mov	x19, x2
    a5b8:	ldr	x0, [sp, #104]
    a5bc:	bl	dad0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x36c>
    a5c0:	stp	x0, x1, [sp, #200]
    a5c4:	ldr	x0, [sp, #104]
    a5c8:	ldr	x0, [x0, #16]
    a5cc:	bl	8b24 <__asan_backtrace_open@plt+0x1eb4>
    a5d0:	strb	w0, [sp, #1247]
    a5d4:	ldrb	w0, [sp, #1247]
    a5d8:	cmp	w0, #0x0
    a5dc:	b.eq	a5e8 <__ubsan_handle_mul_overflow_abort@@Base+0xdc>  // b.none
    a5e0:	mov	w0, #0x5                   	// #5
    a5e4:	b	a5ec <__ubsan_handle_mul_overflow_abort@@Base+0xe0>
    a5e8:	mov	w0, #0x6                   	// #6
    a5ec:	str	w0, [sp, #1240]
    a5f0:	add	x2, sp, #0x40
    a5f4:	mov	x3, x19
    a5f8:	ldp	x0, x1, [x3]
    a5fc:	stp	x0, x1, [x2]
    a600:	ldr	x0, [x3, #16]
    a604:	str	x0, [x2, #16]
    a608:	add	x0, sp, #0x40
    a60c:	ldr	w3, [sp, #1240]
    a610:	mov	x2, x0
    a614:	ldp	x0, x1, [sp, #200]
    a618:	bl	9c64 <__ubsan_default_options@@Base+0x600>
    a61c:	and	w0, w0, #0xff
    a620:	cmp	w0, #0x0
    a624:	b.ne	a7ec <__ubsan_handle_mul_overflow_abort@@Base+0x2e0>  // b.any
    a628:	ldrb	w0, [sp, #1247]
    a62c:	eor	w0, w0, #0x1
    a630:	and	w0, w0, #0xff
    a634:	cmp	w0, #0x0
    a638:	b.eq	a654 <__ubsan_handle_mul_overflow_abort@@Base+0x148>  // b.none
    a63c:	bl	9110 <__asan_backtrace_open@plt+0x24a0>
    a640:	ldrb	w0, [x0, #17]
    a644:	cmp	w0, #0x0
    a648:	b.eq	a654 <__ubsan_handle_mul_overflow_abort@@Base+0x148>  // b.none
    a64c:	mov	w0, #0x1                   	// #1
    a650:	b	a658 <__ubsan_handle_mul_overflow_abort@@Base+0x14c>
    a654:	mov	w0, #0x0                   	// #0
    a658:	cmp	w0, #0x0
    a65c:	b.ne	a7f4 <__ubsan_handle_mul_overflow_abort@@Base+0x2e8>  // b.any
    a660:	add	x0, sp, #0xd8
    a664:	ldp	x1, x2, [sp, #200]
    a668:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    a66c:	add	x2, sp, #0x40
    a670:	mov	x3, x19
    a674:	ldp	x0, x1, [x3]
    a678:	stp	x0, x1, [x2]
    a67c:	ldr	x0, [x3, #16]
    a680:	str	x0, [x2, #16]
    a684:	add	x0, sp, #0x10
    a688:	add	x1, sp, #0xd8
    a68c:	ldp	x2, x3, [x1]
    a690:	stp	x2, x3, [x0]
    a694:	ldp	x2, x3, [x1, #16]
    a698:	stp	x2, x3, [x0, #16]
    a69c:	ldr	x1, [x1, #32]
    a6a0:	str	x1, [x0, #32]
    a6a4:	add	x2, sp, #0x10
    a6a8:	add	x1, sp, #0x40
    a6ac:	add	x0, sp, #0x78
    a6b0:	ldr	w3, [sp, #1240]
    a6b4:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    a6b8:	ldrb	w0, [sp, #1247]
    a6bc:	cmp	w0, #0x0
    a6c0:	b.eq	a754 <__ubsan_handle_mul_overflow_abort@@Base+0x248>  // b.none
    a6c4:	add	x0, sp, #0x2b8
    a6c8:	ldp	x1, x2, [sp, #200]
    a6cc:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    a6d0:	add	x0, sp, #0x10
    a6d4:	add	x1, sp, #0x2b8
    a6d8:	ldp	x2, x3, [x1]
    a6dc:	stp	x2, x3, [x0]
    a6e0:	ldp	x2, x3, [x1, #16]
    a6e4:	stp	x2, x3, [x0, #16]
    a6e8:	ldr	x1, [x1, #32]
    a6ec:	str	x1, [x0, #32]
    a6f0:	add	x1, sp, #0x10
    a6f4:	add	x5, sp, #0x100
    a6f8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    a6fc:	add	x4, x0, #0x560
    a700:	ldr	w3, [sp, #1240]
    a704:	mov	w2, #0x0                   	// #0
    a708:	mov	x0, x5
    a70c:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    a710:	ldr	x0, [sp, #104]
    a714:	ldr	x1, [x0, #16]
    a718:	add	x0, sp, #0x2e0
    a71c:	ldr	x2, [sp, #96]
    a720:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    a724:	add	x1, sp, #0x2e0
    a728:	add	x0, sp, #0x100
    a72c:	bl	7480 <__asan_backtrace_open@plt+0x810>
    a730:	mov	x2, x0
    a734:	ldr	x0, [sp, #104]
    a738:	ldr	x0, [x0, #16]
    a73c:	mov	x1, x0
    a740:	mov	x0, x2
    a744:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    a748:	add	x0, sp, #0x100
    a74c:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    a750:	b	a7e0 <__ubsan_handle_mul_overflow_abort@@Base+0x2d4>
    a754:	add	x0, sp, #0x4a0
    a758:	ldp	x1, x2, [sp, #200]
    a75c:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    a760:	add	x0, sp, #0x10
    a764:	add	x1, sp, #0x4a0
    a768:	ldp	x2, x3, [x1]
    a76c:	stp	x2, x3, [x0]
    a770:	ldp	x2, x3, [x1, #16]
    a774:	stp	x2, x3, [x0, #16]
    a778:	ldr	x1, [x1, #32]
    a77c:	str	x1, [x0, #32]
    a780:	add	x1, sp, #0x10
    a784:	add	x5, sp, #0x2f0
    a788:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    a78c:	add	x4, x0, #0x5d0
    a790:	ldr	w3, [sp, #1240]
    a794:	mov	w2, #0x0                   	// #0
    a798:	mov	x0, x5
    a79c:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    a7a0:	ldr	x0, [sp, #104]
    a7a4:	ldr	x1, [x0, #16]
    a7a8:	add	x0, sp, #0x4c8
    a7ac:	ldr	x2, [sp, #96]
    a7b0:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    a7b4:	add	x1, sp, #0x4c8
    a7b8:	add	x0, sp, #0x2f0
    a7bc:	bl	7480 <__asan_backtrace_open@plt+0x810>
    a7c0:	mov	x2, x0
    a7c4:	ldr	x0, [sp, #104]
    a7c8:	ldr	x0, [x0, #16]
    a7cc:	mov	x1, x0
    a7d0:	mov	x0, x2
    a7d4:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    a7d8:	add	x0, sp, #0x2f0
    a7dc:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    a7e0:	add	x0, sp, #0x78
    a7e4:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    a7e8:	b	a7f8 <__ubsan_handle_mul_overflow_abort@@Base+0x2ec>
    a7ec:	nop
    a7f0:	b	a7f8 <__ubsan_handle_mul_overflow_abort@@Base+0x2ec>
    a7f4:	nop
    a7f8:	ldp	x19, x30, [sp]
    a7fc:	add	sp, sp, #0x4e0
    a800:	ret

000000000000a804 <__ubsan_handle_negate_overflow@@Base>:
    a804:	stp	x29, x30, [sp, #-112]!
    a808:	mov	x29, sp
    a80c:	mov	x2, x30
    a810:	str	x0, [x29, #56]
    a814:	str	x1, [x29, #48]
    a818:	mov	x0, x29
    a81c:	str	x0, [x29, #104]
    a820:	mov	x0, x2
    a824:	str	x0, [x29, #96]
    a828:	stp	xzr, xzr, [x29, #72]
    a82c:	str	xzr, [x29, #88]
    a830:	ldr	x0, [x29, #96]
    a834:	str	x0, [x29, #80]
    a838:	ldr	x0, [x29, #104]
    a83c:	str	x0, [x29, #88]
    a840:	add	x2, x29, #0x10
    a844:	add	x3, x29, #0x48
    a848:	ldp	x0, x1, [x3]
    a84c:	stp	x0, x1, [x2]
    a850:	ldr	x0, [x3, #16]
    a854:	str	x0, [x2, #16]
    a858:	add	x0, x29, #0x10
    a85c:	mov	x2, x0
    a860:	ldr	x1, [x29, #48]
    a864:	ldr	x0, [x29, #56]
    a868:	bl	a5a4 <__ubsan_handle_mul_overflow_abort@@Base+0x98>
    a86c:	nop
    a870:	ldp	x29, x30, [sp], #112
    a874:	ret

000000000000a878 <__ubsan_handle_negate_overflow_abort@@Base>:
    a878:	stp	x29, x30, [sp, #-112]!
    a87c:	mov	x29, sp
    a880:	mov	x2, x30
    a884:	str	x0, [x29, #56]
    a888:	str	x1, [x29, #48]
    a88c:	mov	x0, x29
    a890:	str	x0, [x29, #104]
    a894:	mov	x0, x2
    a898:	str	x0, [x29, #96]
    a89c:	stp	xzr, xzr, [x29, #72]
    a8a0:	str	xzr, [x29, #88]
    a8a4:	mov	w0, #0x1                   	// #1
    a8a8:	strb	w0, [x29, #72]
    a8ac:	ldr	x0, [x29, #96]
    a8b0:	str	x0, [x29, #80]
    a8b4:	ldr	x0, [x29, #104]
    a8b8:	str	x0, [x29, #88]
    a8bc:	add	x2, x29, #0x10
    a8c0:	add	x3, x29, #0x48
    a8c4:	ldp	x0, x1, [x3]
    a8c8:	stp	x0, x1, [x2]
    a8cc:	ldr	x0, [x3, #16]
    a8d0:	str	x0, [x2, #16]
    a8d4:	add	x0, x29, #0x10
    a8d8:	mov	x2, x0
    a8dc:	ldr	x1, [x29, #48]
    a8e0:	ldr	x0, [x29, #56]
    a8e4:	bl	a5a4 <__ubsan_handle_mul_overflow_abort@@Base+0x98>
    a8e8:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    a8ec:	sub	sp, sp, #0x4f0
    a8f0:	stp	x19, x30, [sp]
    a8f4:	str	x0, [sp, #120]
    a8f8:	str	x1, [sp, #112]
    a8fc:	str	x2, [sp, #104]
    a900:	mov	x19, x3
    a904:	ldr	x0, [sp, #120]
    a908:	bl	dad0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x36c>
    a90c:	stp	x0, x1, [sp, #248]
    a910:	ldr	x0, [sp, #120]
    a914:	ldr	x1, [x0, #16]
    a918:	add	x0, sp, #0xe8
    a91c:	ldr	x2, [sp, #112]
    a920:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    a924:	ldr	x0, [sp, #120]
    a928:	ldr	x1, [x0, #16]
    a92c:	add	x0, sp, #0xd8
    a930:	ldr	x2, [sp, #104]
    a934:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    a938:	add	x0, sp, #0xd8
    a93c:	bl	dbec <__ubsan_handle_cfi_check_fail_abort@@Base+0x488>
    a940:	and	w0, w0, #0xff
    a944:	cmp	w0, #0x0
    a948:	b.eq	a958 <__ubsan_handle_negate_overflow_abort@@Base+0xe0>  // b.none
    a94c:	mov	w0, #0x5                   	// #5
    a950:	str	w0, [sp, #1260]
    a954:	b	a984 <__ubsan_handle_negate_overflow_abort@@Base+0x10c>
    a958:	ldr	x0, [sp, #120]
    a95c:	ldr	x0, [x0, #16]
    a960:	bl	8b00 <__asan_backtrace_open@plt+0x1e90>
    a964:	and	w0, w0, #0xff
    a968:	cmp	w0, #0x0
    a96c:	b.eq	a97c <__ubsan_handle_negate_overflow_abort@@Base+0x104>  // b.none
    a970:	mov	w0, #0x7                   	// #7
    a974:	str	w0, [sp, #1260]
    a978:	b	a984 <__ubsan_handle_negate_overflow_abort@@Base+0x10c>
    a97c:	mov	w0, #0x8                   	// #8
    a980:	str	w0, [sp, #1260]
    a984:	add	x2, sp, #0x40
    a988:	mov	x3, x19
    a98c:	ldp	x0, x1, [x3]
    a990:	stp	x0, x1, [x2]
    a994:	ldr	x0, [x3, #16]
    a998:	str	x0, [x2, #16]
    a99c:	add	x0, sp, #0x40
    a9a0:	ldr	w3, [sp, #1260]
    a9a4:	mov	x2, x0
    a9a8:	ldp	x0, x1, [sp, #248]
    a9ac:	bl	9c64 <__ubsan_default_options@@Base+0x600>
    a9b0:	and	w0, w0, #0xff
    a9b4:	cmp	w0, #0x0
    a9b8:	b.ne	ab00 <__ubsan_handle_negate_overflow_abort@@Base+0x288>  // b.any
    a9bc:	add	x0, sp, #0x108
    a9c0:	ldp	x1, x2, [sp, #248]
    a9c4:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    a9c8:	add	x2, sp, #0x40
    a9cc:	mov	x3, x19
    a9d0:	ldp	x0, x1, [x3]
    a9d4:	stp	x0, x1, [x2]
    a9d8:	ldr	x0, [x3, #16]
    a9dc:	str	x0, [x2, #16]
    a9e0:	add	x0, sp, #0x10
    a9e4:	add	x1, sp, #0x108
    a9e8:	ldp	x2, x3, [x1]
    a9ec:	stp	x2, x3, [x0]
    a9f0:	ldp	x2, x3, [x1, #16]
    a9f4:	stp	x2, x3, [x0, #16]
    a9f8:	ldr	x1, [x1, #32]
    a9fc:	str	x1, [x0, #32]
    aa00:	add	x2, sp, #0x10
    aa04:	add	x1, sp, #0x40
    aa08:	add	x0, sp, #0x88
    aa0c:	ldr	w3, [sp, #1260]
    aa10:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    aa14:	ldr	w0, [sp, #1260]
    aa18:	cmp	w0, #0x5
    aa1c:	b.ne	aa9c <__ubsan_handle_negate_overflow_abort@@Base+0x224>  // b.any
    aa20:	add	x0, sp, #0x2e8
    aa24:	ldp	x1, x2, [sp, #248]
    aa28:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    aa2c:	add	x0, sp, #0x10
    aa30:	add	x1, sp, #0x2e8
    aa34:	ldp	x2, x3, [x1]
    aa38:	stp	x2, x3, [x0]
    aa3c:	ldp	x2, x3, [x1, #16]
    aa40:	stp	x2, x3, [x0, #16]
    aa44:	ldr	x1, [x1, #32]
    aa48:	str	x1, [x0, #32]
    aa4c:	add	x1, sp, #0x10
    aa50:	add	x5, sp, #0x130
    aa54:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    aa58:	add	x4, x0, #0x600
    aa5c:	ldr	w3, [sp, #1260]
    aa60:	mov	w2, #0x0                   	// #0
    aa64:	mov	x0, x5
    aa68:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    aa6c:	add	x1, sp, #0xe8
    aa70:	add	x0, sp, #0x130
    aa74:	bl	7480 <__asan_backtrace_open@plt+0x810>
    aa78:	mov	x2, x0
    aa7c:	ldr	x0, [sp, #120]
    aa80:	ldr	x0, [x0, #16]
    aa84:	mov	x1, x0
    aa88:	mov	x0, x2
    aa8c:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    aa90:	add	x0, sp, #0x130
    aa94:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    aa98:	b	aaf4 <__ubsan_handle_negate_overflow_abort@@Base+0x27c>
    aa9c:	add	x0, sp, #0x4c0
    aaa0:	ldp	x1, x2, [sp, #248]
    aaa4:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    aaa8:	add	x0, sp, #0x10
    aaac:	add	x1, sp, #0x4c0
    aab0:	ldp	x2, x3, [x1]
    aab4:	stp	x2, x3, [x0]
    aab8:	ldp	x2, x3, [x1, #16]
    aabc:	stp	x2, x3, [x0, #16]
    aac0:	ldr	x1, [x1, #32]
    aac4:	str	x1, [x0, #32]
    aac8:	add	x1, sp, #0x10
    aacc:	add	x5, sp, #0x310
    aad0:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    aad4:	add	x4, x0, #0x638
    aad8:	ldr	w3, [sp, #1260]
    aadc:	mov	w2, #0x0                   	// #0
    aae0:	mov	x0, x5
    aae4:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    aae8:	add	x0, sp, #0x310
    aaec:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    aaf0:	nop
    aaf4:	add	x0, sp, #0x88
    aaf8:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    aafc:	b	ab04 <__ubsan_handle_negate_overflow_abort@@Base+0x28c>
    ab00:	nop
    ab04:	ldp	x19, x30, [sp]
    ab08:	add	sp, sp, #0x4f0
    ab0c:	ret

000000000000ab10 <__ubsan_handle_divrem_overflow@@Base>:
    ab10:	stp	x29, x30, [sp, #-128]!
    ab14:	mov	x29, sp
    ab18:	mov	x3, x30
    ab1c:	str	x0, [x29, #72]
    ab20:	str	x1, [x29, #64]
    ab24:	str	x2, [x29, #56]
    ab28:	mov	x0, x29
    ab2c:	str	x0, [x29, #120]
    ab30:	mov	x0, x3
    ab34:	str	x0, [x29, #112]
    ab38:	stp	xzr, xzr, [x29, #88]
    ab3c:	str	xzr, [x29, #104]
    ab40:	ldr	x0, [x29, #112]
    ab44:	str	x0, [x29, #96]
    ab48:	ldr	x0, [x29, #120]
    ab4c:	str	x0, [x29, #104]
    ab50:	add	x2, x29, #0x10
    ab54:	add	x3, x29, #0x58
    ab58:	ldp	x0, x1, [x3]
    ab5c:	stp	x0, x1, [x2]
    ab60:	ldr	x0, [x3, #16]
    ab64:	str	x0, [x2, #16]
    ab68:	add	x0, x29, #0x10
    ab6c:	mov	x3, x0
    ab70:	ldr	x2, [x29, #56]
    ab74:	ldr	x1, [x29, #64]
    ab78:	ldr	x0, [x29, #72]
    ab7c:	bl	a8ec <__ubsan_handle_negate_overflow_abort@@Base+0x74>
    ab80:	nop
    ab84:	ldp	x29, x30, [sp], #128
    ab88:	ret

000000000000ab8c <__ubsan_handle_divrem_overflow_abort@@Base>:
    ab8c:	stp	x29, x30, [sp, #-128]!
    ab90:	mov	x29, sp
    ab94:	mov	x3, x30
    ab98:	str	x0, [x29, #72]
    ab9c:	str	x1, [x29, #64]
    aba0:	str	x2, [x29, #56]
    aba4:	mov	x0, x29
    aba8:	str	x0, [x29, #120]
    abac:	mov	x0, x3
    abb0:	str	x0, [x29, #112]
    abb4:	stp	xzr, xzr, [x29, #88]
    abb8:	str	xzr, [x29, #104]
    abbc:	mov	w0, #0x1                   	// #1
    abc0:	strb	w0, [x29, #88]
    abc4:	ldr	x0, [x29, #112]
    abc8:	str	x0, [x29, #96]
    abcc:	ldr	x0, [x29, #120]
    abd0:	str	x0, [x29, #104]
    abd4:	add	x2, x29, #0x10
    abd8:	add	x3, x29, #0x58
    abdc:	ldp	x0, x1, [x3]
    abe0:	stp	x0, x1, [x2]
    abe4:	ldr	x0, [x3, #16]
    abe8:	str	x0, [x2, #16]
    abec:	add	x0, x29, #0x10
    abf0:	mov	x3, x0
    abf4:	ldr	x2, [x29, #56]
    abf8:	ldr	x1, [x29, #64]
    abfc:	ldr	x0, [x29, #72]
    ac00:	bl	a8ec <__ubsan_handle_negate_overflow_abort@@Base+0x74>
    ac04:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    ac08:	sub	sp, sp, #0x8d0
    ac0c:	stp	x19, x20, [sp]
    ac10:	stp	x21, x22, [sp, #16]
    ac14:	stp	x23, x30, [sp, #32]
    ac18:	str	x0, [sp, #152]
    ac1c:	str	x1, [sp, #144]
    ac20:	str	x2, [sp, #136]
    ac24:	mov	x19, x3
    ac28:	ldr	x0, [sp, #152]
    ac2c:	bl	dad0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x36c>
    ac30:	add	x2, sp, #0x200
    ac34:	stp	x0, x1, [x2, #-232]
    ac38:	ldr	x0, [sp, #152]
    ac3c:	ldr	x1, [x0, #16]
    ac40:	add	x0, sp, #0x108
    ac44:	ldr	x2, [sp, #144]
    ac48:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    ac4c:	ldr	x0, [sp, #152]
    ac50:	ldr	x1, [x0, #24]
    ac54:	add	x0, sp, #0xf8
    ac58:	ldr	x2, [sp, #136]
    ac5c:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    ac60:	add	x0, sp, #0xf8
    ac64:	bl	dc38 <__ubsan_handle_cfi_check_fail_abort@@Base+0x4d4>
    ac68:	and	w0, w0, #0xff
    ac6c:	cmp	w0, #0x0
    ac70:	b.ne	acb4 <__ubsan_handle_divrem_overflow_abort@@Base+0x128>  // b.any
    ac74:	add	x0, sp, #0xf8
    ac78:	bl	ffc4 <__ubsan_get_current_report_data@@Base+0xce0>
    ac7c:	mov	x20, x0
    ac80:	mov	x21, x1
    ac84:	ldr	x0, [sp, #152]
    ac88:	ldr	x0, [x0, #16]
    ac8c:	bl	db3c <__ubsan_handle_cfi_check_fail_abort@@Base+0x3d8>
    ac90:	mov	w0, w0
    ac94:	mov	x22, x0
    ac98:	mov	x23, #0x0                   	// #0
    ac9c:	cmp	x23, x21
    aca0:	b.hi	acbc <__ubsan_handle_divrem_overflow_abort@@Base+0x130>  // b.pmore
    aca4:	cmp	x23, x21
    aca8:	b.ne	acb4 <__ubsan_handle_divrem_overflow_abort@@Base+0x128>  // b.any
    acac:	cmp	x22, x20
    acb0:	b.hi	acbc <__ubsan_handle_divrem_overflow_abort@@Base+0x130>  // b.pmore
    acb4:	mov	w0, #0x1                   	// #1
    acb8:	b	acc0 <__ubsan_handle_divrem_overflow_abort@@Base+0x134>
    acbc:	mov	w0, #0x0                   	// #0
    acc0:	cmp	w0, #0x0
    acc4:	b.eq	acd4 <__ubsan_handle_divrem_overflow_abort@@Base+0x148>  // b.none
    acc8:	mov	w0, #0xd                   	// #13
    accc:	str	w0, [sp, #2252]
    acd0:	b	acdc <__ubsan_handle_divrem_overflow_abort@@Base+0x150>
    acd4:	mov	w0, #0xc                   	// #12
    acd8:	str	w0, [sp, #2252]
    acdc:	add	x2, sp, #0x60
    ace0:	mov	x3, x19
    ace4:	ldp	x0, x1, [x3]
    ace8:	stp	x0, x1, [x2]
    acec:	ldr	x0, [x3, #16]
    acf0:	str	x0, [x2, #16]
    acf4:	add	x0, sp, #0x60
    acf8:	ldr	w3, [sp, #2252]
    acfc:	mov	x2, x0
    ad00:	add	x0, sp, #0x200
    ad04:	ldp	x0, x1, [x0, #-232]
    ad08:	bl	9c64 <__ubsan_default_options@@Base+0x600>
    ad0c:	and	w0, w0, #0xff
    ad10:	cmp	w0, #0x0
    ad14:	b.ne	afb4 <__ubsan_handle_divrem_overflow_abort@@Base+0x428>  // b.any
    ad18:	add	x0, sp, #0x128
    ad1c:	add	x1, sp, #0x200
    ad20:	ldp	x1, x2, [x1, #-232]
    ad24:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    ad28:	add	x2, sp, #0x60
    ad2c:	mov	x3, x19
    ad30:	ldp	x0, x1, [x3]
    ad34:	stp	x0, x1, [x2]
    ad38:	ldr	x0, [x3, #16]
    ad3c:	str	x0, [x2, #16]
    ad40:	add	x0, sp, #0x30
    ad44:	add	x1, sp, #0x128
    ad48:	ldp	x2, x3, [x1]
    ad4c:	stp	x2, x3, [x0]
    ad50:	ldp	x2, x3, [x1, #16]
    ad54:	stp	x2, x3, [x0, #16]
    ad58:	ldr	x1, [x1, #32]
    ad5c:	str	x1, [x0, #32]
    ad60:	add	x2, sp, #0x30
    ad64:	add	x1, sp, #0x60
    ad68:	add	x0, sp, #0xa8
    ad6c:	ldr	w3, [sp, #2252]
    ad70:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    ad74:	ldr	w0, [sp, #2252]
    ad78:	cmp	w0, #0xd
    ad7c:	b.ne	ae9c <__ubsan_handle_divrem_overflow_abort@@Base+0x310>  // b.any
    ad80:	add	x0, sp, #0xf8
    ad84:	bl	dc38 <__ubsan_handle_cfi_check_fail_abort@@Base+0x4d4>
    ad88:	and	w0, w0, #0xff
    ad8c:	cmp	w0, #0x0
    ad90:	b.eq	adfc <__ubsan_handle_divrem_overflow_abort@@Base+0x270>  // b.none
    ad94:	add	x0, sp, #0x308
    ad98:	add	x1, sp, #0x200
    ad9c:	ldp	x1, x2, [x1, #-232]
    ada0:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    ada4:	add	x0, sp, #0x30
    ada8:	add	x1, sp, #0x308
    adac:	ldp	x2, x3, [x1]
    adb0:	stp	x2, x3, [x0]
    adb4:	ldp	x2, x3, [x1, #16]
    adb8:	stp	x2, x3, [x0, #16]
    adbc:	ldr	x1, [x1, #32]
    adc0:	str	x1, [x0, #32]
    adc4:	add	x1, sp, #0x30
    adc8:	add	x5, sp, #0x150
    adcc:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    add0:	add	x4, x0, #0x650
    add4:	ldr	w3, [sp, #2252]
    add8:	mov	w2, #0x0                   	// #0
    addc:	mov	x0, x5
    ade0:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    ade4:	add	x1, sp, #0xf8
    ade8:	add	x0, sp, #0x150
    adec:	bl	7480 <__asan_backtrace_open@plt+0x810>
    adf0:	add	x0, sp, #0x150
    adf4:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    adf8:	b	afa8 <__ubsan_handle_divrem_overflow_abort@@Base+0x41c>
    adfc:	add	x0, sp, #0x4e8
    ae00:	add	x1, sp, #0x200
    ae04:	ldp	x1, x2, [x1, #-232]
    ae08:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    ae0c:	add	x0, sp, #0x30
    ae10:	add	x1, sp, #0x4e8
    ae14:	ldp	x2, x3, [x1]
    ae18:	stp	x2, x3, [x0]
    ae1c:	ldp	x2, x3, [x1, #16]
    ae20:	stp	x2, x3, [x0, #16]
    ae24:	ldr	x1, [x1, #32]
    ae28:	str	x1, [x0, #32]
    ae2c:	add	x1, sp, #0x30
    ae30:	add	x5, sp, #0x330
    ae34:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    ae38:	add	x4, x0, #0x670
    ae3c:	ldr	w3, [sp, #2252]
    ae40:	mov	w2, #0x0                   	// #0
    ae44:	mov	x0, x5
    ae48:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    ae4c:	add	x1, sp, #0xf8
    ae50:	add	x0, sp, #0x330
    ae54:	bl	7480 <__asan_backtrace_open@plt+0x810>
    ae58:	mov	x19, x0
    ae5c:	ldr	x0, [sp, #152]
    ae60:	ldr	x0, [x0, #16]
    ae64:	bl	db3c <__ubsan_handle_cfi_check_fail_abort@@Base+0x3d8>
    ae68:	mov	w0, w0
    ae6c:	mov	x1, x0
    ae70:	mov	x0, x19
    ae74:	bl	dfa0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x83c>
    ae78:	mov	x2, x0
    ae7c:	ldr	x0, [sp, #152]
    ae80:	ldr	x0, [x0, #16]
    ae84:	mov	x1, x0
    ae88:	mov	x0, x2
    ae8c:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    ae90:	add	x0, sp, #0x330
    ae94:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    ae98:	b	afa8 <__ubsan_handle_divrem_overflow_abort@@Base+0x41c>
    ae9c:	add	x0, sp, #0x108
    aea0:	bl	dc38 <__ubsan_handle_cfi_check_fail_abort@@Base+0x4d4>
    aea4:	and	w0, w0, #0xff
    aea8:	cmp	w0, #0x0
    aeac:	b.eq	af18 <__ubsan_handle_divrem_overflow_abort@@Base+0x38c>  // b.none
    aeb0:	add	x0, sp, #0x6c8
    aeb4:	add	x1, sp, #0x200
    aeb8:	ldp	x1, x2, [x1, #-232]
    aebc:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    aec0:	add	x0, sp, #0x30
    aec4:	add	x1, sp, #0x6c8
    aec8:	ldp	x2, x3, [x1]
    aecc:	stp	x2, x3, [x0]
    aed0:	ldp	x2, x3, [x1, #16]
    aed4:	stp	x2, x3, [x0, #16]
    aed8:	ldr	x1, [x1, #32]
    aedc:	str	x1, [x0, #32]
    aee0:	add	x1, sp, #0x30
    aee4:	add	x5, sp, #0x510
    aee8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    aeec:	add	x4, x0, #0x6a8
    aef0:	ldr	w3, [sp, #2252]
    aef4:	mov	w2, #0x0                   	// #0
    aef8:	mov	x0, x5
    aefc:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    af00:	add	x1, sp, #0x108
    af04:	add	x0, sp, #0x510
    af08:	bl	7480 <__asan_backtrace_open@plt+0x810>
    af0c:	add	x0, sp, #0x510
    af10:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    af14:	b	afa8 <__ubsan_handle_divrem_overflow_abort@@Base+0x41c>
    af18:	add	x0, sp, #0x8a0
    af1c:	add	x1, sp, #0x200
    af20:	ldp	x1, x2, [x1, #-232]
    af24:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    af28:	add	x0, sp, #0x30
    af2c:	add	x1, sp, #0x8a0
    af30:	ldp	x2, x3, [x1]
    af34:	stp	x2, x3, [x0]
    af38:	ldp	x2, x3, [x1, #16]
    af3c:	stp	x2, x3, [x0, #16]
    af40:	ldr	x1, [x1, #32]
    af44:	str	x1, [x0, #32]
    af48:	add	x1, sp, #0x30
    af4c:	add	x5, sp, #0x6f0
    af50:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    af54:	add	x4, x0, #0x6c8
    af58:	ldr	w3, [sp, #2252]
    af5c:	mov	w2, #0x0                   	// #0
    af60:	mov	x0, x5
    af64:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    af68:	add	x1, sp, #0x108
    af6c:	add	x0, sp, #0x6f0
    af70:	bl	7480 <__asan_backtrace_open@plt+0x810>
    af74:	mov	x2, x0
    af78:	add	x0, sp, #0xf8
    af7c:	mov	x1, x0
    af80:	mov	x0, x2
    af84:	bl	7480 <__asan_backtrace_open@plt+0x810>
    af88:	mov	x2, x0
    af8c:	ldr	x0, [sp, #152]
    af90:	ldr	x0, [x0, #16]
    af94:	mov	x1, x0
    af98:	mov	x0, x2
    af9c:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    afa0:	add	x0, sp, #0x6f0
    afa4:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    afa8:	add	x0, sp, #0xa8
    afac:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    afb0:	b	afb8 <__ubsan_handle_divrem_overflow_abort@@Base+0x42c>
    afb4:	nop
    afb8:	ldp	x19, x20, [sp]
    afbc:	ldp	x21, x22, [sp, #16]
    afc0:	ldp	x23, x30, [sp, #32]
    afc4:	add	sp, sp, #0x8d0
    afc8:	ret

000000000000afcc <__ubsan_handle_shift_out_of_bounds@@Base>:
    afcc:	stp	x29, x30, [sp, #-128]!
    afd0:	mov	x29, sp
    afd4:	mov	x3, x30
    afd8:	str	x0, [x29, #72]
    afdc:	str	x1, [x29, #64]
    afe0:	str	x2, [x29, #56]
    afe4:	mov	x0, x29
    afe8:	str	x0, [x29, #120]
    afec:	mov	x0, x3
    aff0:	str	x0, [x29, #112]
    aff4:	stp	xzr, xzr, [x29, #88]
    aff8:	str	xzr, [x29, #104]
    affc:	ldr	x0, [x29, #112]
    b000:	str	x0, [x29, #96]
    b004:	ldr	x0, [x29, #120]
    b008:	str	x0, [x29, #104]
    b00c:	add	x2, x29, #0x10
    b010:	add	x3, x29, #0x58
    b014:	ldp	x0, x1, [x3]
    b018:	stp	x0, x1, [x2]
    b01c:	ldr	x0, [x3, #16]
    b020:	str	x0, [x2, #16]
    b024:	add	x0, x29, #0x10
    b028:	mov	x3, x0
    b02c:	ldr	x2, [x29, #56]
    b030:	ldr	x1, [x29, #64]
    b034:	ldr	x0, [x29, #72]
    b038:	bl	ac08 <__ubsan_handle_divrem_overflow_abort@@Base+0x7c>
    b03c:	nop
    b040:	ldp	x29, x30, [sp], #128
    b044:	ret

000000000000b048 <__ubsan_handle_shift_out_of_bounds_abort@@Base>:
    b048:	stp	x29, x30, [sp, #-128]!
    b04c:	mov	x29, sp
    b050:	mov	x3, x30
    b054:	str	x0, [x29, #72]
    b058:	str	x1, [x29, #64]
    b05c:	str	x2, [x29, #56]
    b060:	mov	x0, x29
    b064:	str	x0, [x29, #120]
    b068:	mov	x0, x3
    b06c:	str	x0, [x29, #112]
    b070:	stp	xzr, xzr, [x29, #88]
    b074:	str	xzr, [x29, #104]
    b078:	mov	w0, #0x1                   	// #1
    b07c:	strb	w0, [x29, #88]
    b080:	ldr	x0, [x29, #112]
    b084:	str	x0, [x29, #96]
    b088:	ldr	x0, [x29, #120]
    b08c:	str	x0, [x29, #104]
    b090:	add	x2, x29, #0x10
    b094:	add	x3, x29, #0x58
    b098:	ldp	x0, x1, [x3]
    b09c:	stp	x0, x1, [x2]
    b0a0:	ldr	x0, [x3, #16]
    b0a4:	str	x0, [x2, #16]
    b0a8:	add	x0, x29, #0x10
    b0ac:	mov	x3, x0
    b0b0:	ldr	x2, [x29, #56]
    b0b4:	ldr	x1, [x29, #64]
    b0b8:	ldr	x0, [x29, #72]
    b0bc:	bl	ac08 <__ubsan_handle_divrem_overflow_abort@@Base+0x7c>
    b0c0:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    b0c4:	sub	sp, sp, #0x2f0
    b0c8:	stp	x19, x30, [sp]
    b0cc:	str	x0, [sp, #104]
    b0d0:	str	x1, [sp, #96]
    b0d4:	mov	x19, x2
    b0d8:	ldr	x0, [sp, #104]
    b0dc:	bl	dad0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x36c>
    b0e0:	stp	x0, x1, [sp, #216]
    b0e4:	mov	w0, #0xe                   	// #14
    b0e8:	str	w0, [sp, #748]
    b0ec:	add	x2, sp, #0x40
    b0f0:	mov	x3, x19
    b0f4:	ldp	x0, x1, [x3]
    b0f8:	stp	x0, x1, [x2]
    b0fc:	ldr	x0, [x3, #16]
    b100:	str	x0, [x2, #16]
    b104:	add	x0, sp, #0x40
    b108:	ldr	w3, [sp, #748]
    b10c:	mov	x2, x0
    b110:	ldp	x0, x1, [sp, #216]
    b114:	bl	9c64 <__ubsan_default_options@@Base+0x600>
    b118:	and	w0, w0, #0xff
    b11c:	cmp	w0, #0x0
    b120:	b.ne	b214 <__ubsan_handle_shift_out_of_bounds_abort@@Base+0x1cc>  // b.any
    b124:	add	x0, sp, #0xe8
    b128:	ldp	x1, x2, [sp, #216]
    b12c:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    b130:	add	x2, sp, #0x40
    b134:	mov	x3, x19
    b138:	ldp	x0, x1, [x3]
    b13c:	stp	x0, x1, [x2]
    b140:	ldr	x0, [x3, #16]
    b144:	str	x0, [x2, #16]
    b148:	add	x0, sp, #0x10
    b14c:	add	x1, sp, #0xe8
    b150:	ldp	x2, x3, [x1]
    b154:	stp	x2, x3, [x0]
    b158:	ldp	x2, x3, [x1, #16]
    b15c:	stp	x2, x3, [x0, #16]
    b160:	ldr	x1, [x1, #32]
    b164:	str	x1, [x0, #32]
    b168:	add	x2, sp, #0x10
    b16c:	add	x1, sp, #0x40
    b170:	add	x0, sp, #0x88
    b174:	ldr	w3, [sp, #748]
    b178:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    b17c:	ldr	x0, [sp, #104]
    b180:	ldr	x1, [x0, #24]
    b184:	add	x0, sp, #0x78
    b188:	ldr	x2, [sp, #96]
    b18c:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    b190:	add	x0, sp, #0x2c0
    b194:	ldp	x1, x2, [sp, #216]
    b198:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    b19c:	add	x0, sp, #0x10
    b1a0:	add	x1, sp, #0x2c0
    b1a4:	ldp	x2, x3, [x1]
    b1a8:	stp	x2, x3, [x0]
    b1ac:	ldp	x2, x3, [x1, #16]
    b1b0:	stp	x2, x3, [x0, #16]
    b1b4:	ldr	x1, [x1, #32]
    b1b8:	str	x1, [x0, #32]
    b1bc:	add	x1, sp, #0x10
    b1c0:	add	x5, sp, #0x110
    b1c4:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    b1c8:	add	x4, x0, #0x708
    b1cc:	ldr	w3, [sp, #748]
    b1d0:	mov	w2, #0x0                   	// #0
    b1d4:	mov	x0, x5
    b1d8:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    b1dc:	add	x1, sp, #0x78
    b1e0:	add	x0, sp, #0x110
    b1e4:	bl	7480 <__asan_backtrace_open@plt+0x810>
    b1e8:	mov	x2, x0
    b1ec:	ldr	x0, [sp, #104]
    b1f0:	ldr	x0, [x0, #16]
    b1f4:	mov	x1, x0
    b1f8:	mov	x0, x2
    b1fc:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    b200:	add	x0, sp, #0x110
    b204:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    b208:	add	x0, sp, #0x88
    b20c:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    b210:	b	b218 <__ubsan_handle_shift_out_of_bounds_abort@@Base+0x1d0>
    b214:	nop
    b218:	ldp	x19, x30, [sp]
    b21c:	add	sp, sp, #0x2f0
    b220:	ret

000000000000b224 <__ubsan_handle_out_of_bounds@@Base>:
    b224:	stp	x29, x30, [sp, #-112]!
    b228:	mov	x29, sp
    b22c:	mov	x2, x30
    b230:	str	x0, [x29, #56]
    b234:	str	x1, [x29, #48]
    b238:	mov	x0, x29
    b23c:	str	x0, [x29, #104]
    b240:	mov	x0, x2
    b244:	str	x0, [x29, #96]
    b248:	stp	xzr, xzr, [x29, #72]
    b24c:	str	xzr, [x29, #88]
    b250:	ldr	x0, [x29, #96]
    b254:	str	x0, [x29, #80]
    b258:	ldr	x0, [x29, #104]
    b25c:	str	x0, [x29, #88]
    b260:	add	x2, x29, #0x10
    b264:	add	x3, x29, #0x48
    b268:	ldp	x0, x1, [x3]
    b26c:	stp	x0, x1, [x2]
    b270:	ldr	x0, [x3, #16]
    b274:	str	x0, [x2, #16]
    b278:	add	x0, x29, #0x10
    b27c:	mov	x2, x0
    b280:	ldr	x1, [x29, #48]
    b284:	ldr	x0, [x29, #56]
    b288:	bl	b0c4 <__ubsan_handle_shift_out_of_bounds_abort@@Base+0x7c>
    b28c:	nop
    b290:	ldp	x29, x30, [sp], #112
    b294:	ret

000000000000b298 <__ubsan_handle_out_of_bounds_abort@@Base>:
    b298:	stp	x29, x30, [sp, #-112]!
    b29c:	mov	x29, sp
    b2a0:	mov	x2, x30
    b2a4:	str	x0, [x29, #56]
    b2a8:	str	x1, [x29, #48]
    b2ac:	mov	x0, x29
    b2b0:	str	x0, [x29, #104]
    b2b4:	mov	x0, x2
    b2b8:	str	x0, [x29, #96]
    b2bc:	stp	xzr, xzr, [x29, #72]
    b2c0:	str	xzr, [x29, #88]
    b2c4:	mov	w0, #0x1                   	// #1
    b2c8:	strb	w0, [x29, #72]
    b2cc:	ldr	x0, [x29, #96]
    b2d0:	str	x0, [x29, #80]
    b2d4:	ldr	x0, [x29, #104]
    b2d8:	str	x0, [x29, #88]
    b2dc:	add	x2, x29, #0x10
    b2e0:	add	x3, x29, #0x48
    b2e4:	ldp	x0, x1, [x3]
    b2e8:	stp	x0, x1, [x2]
    b2ec:	ldr	x0, [x3, #16]
    b2f0:	str	x0, [x2, #16]
    b2f4:	add	x0, x29, #0x10
    b2f8:	mov	x2, x0
    b2fc:	ldr	x1, [x29, #48]
    b300:	ldr	x0, [x29, #56]
    b304:	bl	b0c4 <__ubsan_handle_shift_out_of_bounds_abort@@Base+0x7c>
    b308:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    b30c:	sub	sp, sp, #0x2d0
    b310:	stp	x19, x30, [sp]
    b314:	str	x0, [sp, #104]
    b318:	mov	x19, x1
    b31c:	mov	w0, #0xf                   	// #15
    b320:	str	w0, [sp, #716]
    b324:	ldr	x0, [sp, #104]
    b328:	add	x3, sp, #0xc8
    b32c:	ldp	x1, x2, [x0]
    b330:	mov	x0, x3
    b334:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    b338:	add	x2, sp, #0x40
    b33c:	mov	x3, x19
    b340:	ldp	x0, x1, [x3]
    b344:	stp	x0, x1, [x2]
    b348:	ldr	x0, [x3, #16]
    b34c:	str	x0, [x2, #16]
    b350:	add	x0, sp, #0x10
    b354:	add	x1, sp, #0xc8
    b358:	ldp	x2, x3, [x1]
    b35c:	stp	x2, x3, [x0]
    b360:	ldp	x2, x3, [x1, #16]
    b364:	stp	x2, x3, [x0, #16]
    b368:	ldr	x1, [x1, #32]
    b36c:	str	x1, [x0, #32]
    b370:	add	x2, sp, #0x10
    b374:	add	x1, sp, #0x40
    b378:	add	x0, sp, #0x78
    b37c:	ldr	w3, [sp, #716]
    b380:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    b384:	ldr	x0, [sp, #104]
    b388:	add	x3, sp, #0x2a0
    b38c:	ldp	x1, x2, [x0]
    b390:	mov	x0, x3
    b394:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    b398:	add	x0, sp, #0x10
    b39c:	add	x1, sp, #0x2a0
    b3a0:	ldp	x2, x3, [x1]
    b3a4:	stp	x2, x3, [x0]
    b3a8:	ldp	x2, x3, [x1, #16]
    b3ac:	stp	x2, x3, [x0, #16]
    b3b0:	ldr	x1, [x1, #32]
    b3b4:	str	x1, [x0, #32]
    b3b8:	add	x1, sp, #0x10
    b3bc:	add	x5, sp, #0xf0
    b3c0:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    b3c4:	add	x4, x0, #0x730
    b3c8:	ldr	w3, [sp, #716]
    b3cc:	mov	w2, #0x0                   	// #0
    b3d0:	mov	x0, x5
    b3d4:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    b3d8:	add	x0, sp, #0xf0
    b3dc:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    b3e0:	add	x0, sp, #0x78
    b3e4:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    b3e8:	nop
    b3ec:	ldp	x19, x30, [sp]
    b3f0:	add	sp, sp, #0x2d0
    b3f4:	ret

000000000000b3f8 <__ubsan_handle_builtin_unreachable@@Base>:
    b3f8:	stp	x29, x30, [sp, #-112]!
    b3fc:	mov	x29, sp
    b400:	mov	x1, x30
    b404:	str	x0, [x29, #56]
    b408:	mov	x0, x29
    b40c:	str	x0, [x29, #104]
    b410:	mov	x0, x1
    b414:	str	x0, [x29, #96]
    b418:	stp	xzr, xzr, [x29, #72]
    b41c:	str	xzr, [x29, #88]
    b420:	mov	w0, #0x1                   	// #1
    b424:	strb	w0, [x29, #72]
    b428:	ldr	x0, [x29, #96]
    b42c:	str	x0, [x29, #80]
    b430:	ldr	x0, [x29, #104]
    b434:	str	x0, [x29, #88]
    b438:	add	x2, x29, #0x10
    b43c:	add	x3, x29, #0x48
    b440:	ldp	x0, x1, [x3]
    b444:	stp	x0, x1, [x2]
    b448:	ldr	x0, [x3, #16]
    b44c:	str	x0, [x2, #16]
    b450:	add	x0, x29, #0x10
    b454:	mov	x1, x0
    b458:	ldr	x0, [x29, #56]
    b45c:	bl	b30c <__ubsan_handle_out_of_bounds_abort@@Base+0x74>
    b460:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    b464:	sub	sp, sp, #0x2d0
    b468:	stp	x19, x30, [sp]
    b46c:	str	x0, [sp, #104]
    b470:	mov	x19, x1
    b474:	mov	w0, #0x10                  	// #16
    b478:	str	w0, [sp, #716]
    b47c:	ldr	x0, [sp, #104]
    b480:	add	x3, sp, #0xc8
    b484:	ldp	x1, x2, [x0]
    b488:	mov	x0, x3
    b48c:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    b490:	add	x2, sp, #0x40
    b494:	mov	x3, x19
    b498:	ldp	x0, x1, [x3]
    b49c:	stp	x0, x1, [x2]
    b4a0:	ldr	x0, [x3, #16]
    b4a4:	str	x0, [x2, #16]
    b4a8:	add	x0, sp, #0x10
    b4ac:	add	x1, sp, #0xc8
    b4b0:	ldp	x2, x3, [x1]
    b4b4:	stp	x2, x3, [x0]
    b4b8:	ldp	x2, x3, [x1, #16]
    b4bc:	stp	x2, x3, [x0, #16]
    b4c0:	ldr	x1, [x1, #32]
    b4c4:	str	x1, [x0, #32]
    b4c8:	add	x2, sp, #0x10
    b4cc:	add	x1, sp, #0x40
    b4d0:	add	x0, sp, #0x78
    b4d4:	ldr	w3, [sp, #716]
    b4d8:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    b4dc:	ldr	x0, [sp, #104]
    b4e0:	add	x3, sp, #0x2a0
    b4e4:	ldp	x1, x2, [x0]
    b4e8:	mov	x0, x3
    b4ec:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    b4f0:	add	x0, sp, #0x10
    b4f4:	add	x1, sp, #0x2a0
    b4f8:	ldp	x2, x3, [x1]
    b4fc:	stp	x2, x3, [x0]
    b500:	ldp	x2, x3, [x1, #16]
    b504:	stp	x2, x3, [x0, #16]
    b508:	ldr	x1, [x1, #32]
    b50c:	str	x1, [x0, #32]
    b510:	add	x1, sp, #0x10
    b514:	add	x5, sp, #0xf0
    b518:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    b51c:	add	x4, x0, #0x760
    b520:	ldr	w3, [sp, #716]
    b524:	mov	w2, #0x0                   	// #0
    b528:	mov	x0, x5
    b52c:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    b530:	add	x0, sp, #0xf0
    b534:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    b538:	add	x0, sp, #0x78
    b53c:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    b540:	nop
    b544:	ldp	x19, x30, [sp]
    b548:	add	sp, sp, #0x2d0
    b54c:	ret

000000000000b550 <__ubsan_handle_missing_return@@Base>:
    b550:	stp	x29, x30, [sp, #-112]!
    b554:	mov	x29, sp
    b558:	mov	x1, x30
    b55c:	str	x0, [x29, #56]
    b560:	mov	x0, x29
    b564:	str	x0, [x29, #104]
    b568:	mov	x0, x1
    b56c:	str	x0, [x29, #96]
    b570:	stp	xzr, xzr, [x29, #72]
    b574:	str	xzr, [x29, #88]
    b578:	mov	w0, #0x1                   	// #1
    b57c:	strb	w0, [x29, #72]
    b580:	ldr	x0, [x29, #96]
    b584:	str	x0, [x29, #80]
    b588:	ldr	x0, [x29, #104]
    b58c:	str	x0, [x29, #88]
    b590:	add	x2, x29, #0x10
    b594:	add	x3, x29, #0x48
    b598:	ldp	x0, x1, [x3]
    b59c:	stp	x0, x1, [x2]
    b5a0:	ldr	x0, [x3, #16]
    b5a4:	str	x0, [x2, #16]
    b5a8:	add	x0, x29, #0x10
    b5ac:	mov	x1, x0
    b5b0:	ldr	x0, [x29, #56]
    b5b4:	bl	b464 <__ubsan_handle_builtin_unreachable@@Base+0x6c>
    b5b8:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    b5bc:	sub	sp, sp, #0x2f0
    b5c0:	stp	x19, x30, [sp]
    b5c4:	str	x0, [sp, #104]
    b5c8:	str	x1, [sp, #96]
    b5cc:	mov	x19, x2
    b5d0:	ldr	x0, [sp, #104]
    b5d4:	bl	dad0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x36c>
    b5d8:	stp	x0, x1, [sp, #200]
    b5dc:	mov	w0, #0x11                  	// #17
    b5e0:	str	w0, [sp, #748]
    b5e4:	add	x2, sp, #0x40
    b5e8:	mov	x3, x19
    b5ec:	ldp	x0, x1, [x3]
    b5f0:	stp	x0, x1, [x2]
    b5f4:	ldr	x0, [x3, #16]
    b5f8:	str	x0, [x2, #16]
    b5fc:	add	x0, sp, #0x40
    b600:	ldr	w3, [sp, #748]
    b604:	mov	x2, x0
    b608:	ldp	x0, x1, [sp, #200]
    b60c:	bl	9c64 <__ubsan_default_options@@Base+0x600>
    b610:	and	w0, w0, #0xff
    b614:	cmp	w0, #0x0
    b618:	b.ne	b6f4 <__ubsan_handle_missing_return@@Base+0x1a4>  // b.any
    b61c:	add	x0, sp, #0xd8
    b620:	ldp	x1, x2, [sp, #200]
    b624:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    b628:	add	x2, sp, #0x40
    b62c:	mov	x3, x19
    b630:	ldp	x0, x1, [x3]
    b634:	stp	x0, x1, [x2]
    b638:	ldr	x0, [x3, #16]
    b63c:	str	x0, [x2, #16]
    b640:	add	x0, sp, #0x10
    b644:	add	x1, sp, #0xd8
    b648:	ldp	x2, x3, [x1]
    b64c:	stp	x2, x3, [x0]
    b650:	ldp	x2, x3, [x1, #16]
    b654:	stp	x2, x3, [x0, #16]
    b658:	ldr	x1, [x1, #32]
    b65c:	str	x1, [x0, #32]
    b660:	add	x2, sp, #0x10
    b664:	add	x1, sp, #0x40
    b668:	add	x0, sp, #0x78
    b66c:	ldr	w3, [sp, #748]
    b670:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    b674:	add	x0, sp, #0x2b0
    b678:	ldp	x1, x2, [sp, #200]
    b67c:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    b680:	add	x0, sp, #0x10
    b684:	add	x1, sp, #0x2b0
    b688:	ldp	x2, x3, [x1]
    b68c:	stp	x2, x3, [x0]
    b690:	ldp	x2, x3, [x1, #16]
    b694:	stp	x2, x3, [x0, #16]
    b698:	ldr	x1, [x1, #32]
    b69c:	str	x1, [x0, #32]
    b6a0:	add	x1, sp, #0x10
    b6a4:	add	x5, sp, #0x100
    b6a8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    b6ac:	add	x4, x0, #0x7b8
    b6b0:	ldr	w3, [sp, #748]
    b6b4:	mov	w2, #0x0                   	// #0
    b6b8:	mov	x0, x5
    b6bc:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    b6c0:	ldr	x0, [sp, #104]
    b6c4:	ldr	x1, [x0, #16]
    b6c8:	add	x0, sp, #0x2d8
    b6cc:	ldr	x2, [sp, #96]
    b6d0:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    b6d4:	add	x1, sp, #0x2d8
    b6d8:	add	x0, sp, #0x100
    b6dc:	bl	7480 <__asan_backtrace_open@plt+0x810>
    b6e0:	add	x0, sp, #0x100
    b6e4:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    b6e8:	add	x0, sp, #0x78
    b6ec:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    b6f0:	b	b6f8 <__ubsan_handle_missing_return@@Base+0x1a8>
    b6f4:	nop
    b6f8:	ldp	x19, x30, [sp]
    b6fc:	add	sp, sp, #0x2f0
    b700:	ret

000000000000b704 <__ubsan_handle_vla_bound_not_positive@@Base>:
    b704:	stp	x29, x30, [sp, #-112]!
    b708:	mov	x29, sp
    b70c:	mov	x2, x30
    b710:	str	x0, [x29, #56]
    b714:	str	x1, [x29, #48]
    b718:	mov	x0, x29
    b71c:	str	x0, [x29, #104]
    b720:	mov	x0, x2
    b724:	str	x0, [x29, #96]
    b728:	stp	xzr, xzr, [x29, #72]
    b72c:	str	xzr, [x29, #88]
    b730:	ldr	x0, [x29, #96]
    b734:	str	x0, [x29, #80]
    b738:	ldr	x0, [x29, #104]
    b73c:	str	x0, [x29, #88]
    b740:	add	x2, x29, #0x10
    b744:	add	x3, x29, #0x48
    b748:	ldp	x0, x1, [x3]
    b74c:	stp	x0, x1, [x2]
    b750:	ldr	x0, [x3, #16]
    b754:	str	x0, [x2, #16]
    b758:	add	x0, x29, #0x10
    b75c:	mov	x2, x0
    b760:	ldr	x1, [x29, #48]
    b764:	ldr	x0, [x29, #56]
    b768:	bl	b5bc <__ubsan_handle_missing_return@@Base+0x6c>
    b76c:	nop
    b770:	ldp	x29, x30, [sp], #112
    b774:	ret

000000000000b778 <__ubsan_handle_vla_bound_not_positive_abort@@Base>:
    b778:	stp	x29, x30, [sp, #-112]!
    b77c:	mov	x29, sp
    b780:	mov	x2, x30
    b784:	str	x0, [x29, #56]
    b788:	str	x1, [x29, #48]
    b78c:	mov	x0, x29
    b790:	str	x0, [x29, #104]
    b794:	mov	x0, x2
    b798:	str	x0, [x29, #96]
    b79c:	stp	xzr, xzr, [x29, #72]
    b7a0:	str	xzr, [x29, #88]
    b7a4:	mov	w0, #0x1                   	// #1
    b7a8:	strb	w0, [x29, #72]
    b7ac:	ldr	x0, [x29, #96]
    b7b0:	str	x0, [x29, #80]
    b7b4:	ldr	x0, [x29, #104]
    b7b8:	str	x0, [x29, #88]
    b7bc:	add	x2, x29, #0x10
    b7c0:	add	x3, x29, #0x48
    b7c4:	ldp	x0, x1, [x3]
    b7c8:	stp	x0, x1, [x2]
    b7cc:	ldr	x0, [x3, #16]
    b7d0:	str	x0, [x2, #16]
    b7d4:	add	x0, x29, #0x10
    b7d8:	mov	x2, x0
    b7dc:	ldr	x1, [x29, #48]
    b7e0:	ldr	x0, [x29, #56]
    b7e4:	bl	b5bc <__ubsan_handle_missing_return@@Base+0x6c>
    b7e8:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    b7ec:	str	x30, [sp, #-48]!
    b7f0:	str	x0, [sp, #24]
    b7f4:	add	x0, sp, #0x20
    b7f8:	mov	x2, #0x8                   	// #8
    b7fc:	ldr	x1, [sp, #24]
    b800:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
    b804:	ldr	x0, [sp, #32]
    b808:	ldrb	w0, [x0]
    b80c:	and	w1, w0, #0xffff
    b810:	ldr	x0, [sp, #32]
    b814:	add	x0, x0, #0x1
    b818:	ldrb	w0, [x0]
    b81c:	and	w0, w0, #0xffff
    b820:	add	w0, w1, w0
    b824:	strh	w0, [sp, #46]
    b828:	ldrh	w0, [sp, #46]
    b82c:	cmp	w0, #0x1
    b830:	b.ls	b858 <__ubsan_handle_vla_bound_not_positive_abort@@Base+0xe0>  // b.plast
    b834:	ldr	x0, [sp, #32]
    b838:	ldrb	w0, [x0]
    b83c:	cmp	w0, #0xff
    b840:	b.eq	b858 <__ubsan_handle_vla_bound_not_positive_abort@@Base+0xe0>  // b.none
    b844:	ldr	x0, [sp, #32]
    b848:	add	x0, x0, #0x1
    b84c:	ldrb	w0, [x0]
    b850:	cmp	w0, #0xff
    b854:	b.ne	b860 <__ubsan_handle_vla_bound_not_positive_abort@@Base+0xe8>  // b.any
    b858:	mov	w0, #0x1                   	// #1
    b85c:	b	b864 <__ubsan_handle_vla_bound_not_positive_abort@@Base+0xec>
    b860:	mov	w0, #0x0                   	// #0
    b864:	ldr	x30, [sp], #48
    b868:	ret
    b86c:	sub	sp, sp, #0x340
    b870:	stp	x19, x30, [sp]
    b874:	str	x0, [sp, #104]
    b878:	str	x1, [sp, #96]
    b87c:	mov	x19, x2
    b880:	add	x0, sp, #0xf8
    b884:	mov	x1, #0x0                   	// #0
    b888:	bl	8cd8 <__asan_backtrace_open@plt+0x2068>
    b88c:	add	x0, sp, #0xd0
    b890:	bl	dd34 <__ubsan_handle_cfi_check_fail_abort@@Base+0x5d0>
    b894:	mov	w0, #0x12                  	// #18
    b898:	str	w0, [sp, #812]
    b89c:	ldr	x0, [sp, #104]
    b8a0:	bl	b7ec <__ubsan_handle_vla_bound_not_positive_abort@@Base+0x74>
    b8a4:	and	w0, w0, #0xff
    b8a8:	cmp	w0, #0x0
    b8ac:	b.eq	b914 <__ubsan_handle_vla_bound_not_positive_abort@@Base+0x19c>  // b.none
    b8b0:	ldr	x0, [sp, #104]
    b8b4:	str	x0, [sp, #792]
    b8b8:	ldr	x0, [x19, #8]
    b8bc:	bl	dcbc <__ubsan_handle_cfi_check_fail_abort@@Base+0x558>
    b8c0:	mov	x1, x0
    b8c4:	add	x0, sp, #0xf8
    b8c8:	bl	dc7c <__ubsan_handle_cfi_check_fail_abort@@Base+0x518>
    b8cc:	add	x1, sp, #0xf8
    b8d0:	add	x0, sp, #0x100
    b8d4:	bl	ddc8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x664>
    b8d8:	add	x0, sp, #0xd0
    b8dc:	add	x1, sp, #0x100
    b8e0:	ldp	x2, x3, [x1]
    b8e4:	stp	x2, x3, [x0]
    b8e8:	ldp	x2, x3, [x1, #16]
    b8ec:	stp	x2, x3, [x0, #16]
    b8f0:	ldr	x1, [x1, #32]
    b8f4:	str	x1, [x0, #32]
    b8f8:	ldr	x0, [sp, #792]
    b8fc:	ldr	x0, [x0]
    b900:	str	x0, [sp, #824]
    b904:	ldr	x0, [sp, #792]
    b908:	ldr	x0, [x0, #8]
    b90c:	str	x0, [sp, #816]
    b910:	b	b9ac <__ubsan_handle_vla_bound_not_positive_abort@@Base+0x234>
    b914:	ldr	x0, [sp, #104]
    b918:	str	x0, [sp, #800]
    b91c:	ldr	x0, [sp, #800]
    b920:	bl	dad0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x36c>
    b924:	stp	x0, x1, [sp, #112]
    b928:	add	x2, sp, #0x40
    b92c:	mov	x3, x19
    b930:	ldp	x0, x1, [x3]
    b934:	stp	x0, x1, [x2]
    b938:	ldr	x0, [x3, #16]
    b93c:	str	x0, [x2, #16]
    b940:	add	x0, sp, #0x40
    b944:	ldr	w3, [sp, #812]
    b948:	mov	x2, x0
    b94c:	ldp	x0, x1, [sp, #112]
    b950:	bl	9c64 <__ubsan_default_options@@Base+0x600>
    b954:	and	w0, w0, #0xff
    b958:	cmp	w0, #0x0
    b95c:	b.eq	b968 <__ubsan_handle_vla_bound_not_positive_abort@@Base+0x1f0>  // b.none
    b960:	mov	w19, #0x0                   	// #0
    b964:	b	ba78 <__ubsan_handle_vla_bound_not_positive_abort@@Base+0x300>
    b968:	add	x0, sp, #0x128
    b96c:	ldp	x1, x2, [sp, #112]
    b970:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    b974:	add	x0, sp, #0xd0
    b978:	add	x1, sp, #0x128
    b97c:	ldp	x2, x3, [x1]
    b980:	stp	x2, x3, [x0]
    b984:	ldp	x2, x3, [x1, #16]
    b988:	stp	x2, x3, [x0, #16]
    b98c:	ldr	x1, [x1, #32]
    b990:	str	x1, [x0, #32]
    b994:	ldr	x0, [sp, #800]
    b998:	ldr	x0, [x0, #16]
    b99c:	str	x0, [sp, #824]
    b9a0:	ldr	x0, [sp, #800]
    b9a4:	ldr	x0, [x0, #24]
    b9a8:	str	x0, [sp, #816]
    b9ac:	add	x2, sp, #0x40
    b9b0:	mov	x3, x19
    b9b4:	ldp	x0, x1, [x3]
    b9b8:	stp	x0, x1, [x2]
    b9bc:	ldr	x0, [x3, #16]
    b9c0:	str	x0, [x2, #16]
    b9c4:	add	x0, sp, #0x10
    b9c8:	add	x1, sp, #0xd0
    b9cc:	ldp	x2, x3, [x1]
    b9d0:	stp	x2, x3, [x0]
    b9d4:	ldp	x2, x3, [x1, #16]
    b9d8:	stp	x2, x3, [x0, #16]
    b9dc:	ldr	x1, [x1, #32]
    b9e0:	str	x1, [x0, #32]
    b9e4:	add	x2, sp, #0x10
    b9e8:	add	x1, sp, #0x40
    b9ec:	add	x0, sp, #0x80
    b9f0:	ldr	w3, [sp, #812]
    b9f4:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    b9f8:	add	x0, sp, #0x10
    b9fc:	add	x1, sp, #0xd0
    ba00:	ldp	x2, x3, [x1]
    ba04:	stp	x2, x3, [x0]
    ba08:	ldp	x2, x3, [x1, #16]
    ba0c:	stp	x2, x3, [x0, #16]
    ba10:	ldr	x1, [x1, #32]
    ba14:	str	x1, [x0, #32]
    ba18:	add	x1, sp, #0x10
    ba1c:	add	x5, sp, #0x150
    ba20:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    ba24:	add	x4, x0, #0x7f8
    ba28:	ldr	w3, [sp, #812]
    ba2c:	mov	w2, #0x0                   	// #0
    ba30:	mov	x0, x5
    ba34:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    ba38:	add	x0, sp, #0x308
    ba3c:	ldr	x2, [sp, #96]
    ba40:	ldr	x1, [sp, #824]
    ba44:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    ba48:	add	x1, sp, #0x308
    ba4c:	add	x0, sp, #0x150
    ba50:	bl	7480 <__asan_backtrace_open@plt+0x810>
    ba54:	ldr	x1, [sp, #824]
    ba58:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    ba5c:	ldr	x1, [sp, #816]
    ba60:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    ba64:	add	x0, sp, #0x150
    ba68:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    ba6c:	add	x0, sp, #0x80
    ba70:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    ba74:	mov	w19, #0x1                   	// #1
    ba78:	add	x0, sp, #0xf8
    ba7c:	bl	8cfc <__asan_backtrace_open@plt+0x208c>
    ba80:	cmp	w19, #0x1
    ba84:	ldp	x19, x30, [sp]
    ba88:	add	sp, sp, #0x340
    ba8c:	ret

000000000000ba90 <__ubsan_handle_float_cast_overflow@@Base>:
    ba90:	stp	x29, x30, [sp, #-112]!
    ba94:	mov	x29, sp
    ba98:	mov	x2, x30
    ba9c:	str	x0, [x29, #56]
    baa0:	str	x1, [x29, #48]
    baa4:	mov	x0, x29
    baa8:	str	x0, [x29, #104]
    baac:	mov	x0, x2
    bab0:	str	x0, [x29, #96]
    bab4:	stp	xzr, xzr, [x29, #72]
    bab8:	str	xzr, [x29, #88]
    babc:	ldr	x0, [x29, #96]
    bac0:	str	x0, [x29, #80]
    bac4:	ldr	x0, [x29, #104]
    bac8:	str	x0, [x29, #88]
    bacc:	add	x2, x29, #0x10
    bad0:	add	x3, x29, #0x48
    bad4:	ldp	x0, x1, [x3]
    bad8:	stp	x0, x1, [x2]
    badc:	ldr	x0, [x3, #16]
    bae0:	str	x0, [x2, #16]
    bae4:	add	x0, x29, #0x10
    bae8:	mov	x2, x0
    baec:	ldr	x1, [x29, #48]
    baf0:	ldr	x0, [x29, #56]
    baf4:	bl	b86c <__ubsan_handle_vla_bound_not_positive_abort@@Base+0xf4>
    baf8:	nop
    bafc:	ldp	x29, x30, [sp], #112
    bb00:	ret

000000000000bb04 <__ubsan_handle_float_cast_overflow_abort@@Base>:
    bb04:	stp	x29, x30, [sp, #-112]!
    bb08:	mov	x29, sp
    bb0c:	mov	x2, x30
    bb10:	str	x0, [x29, #56]
    bb14:	str	x1, [x29, #48]
    bb18:	mov	x0, x29
    bb1c:	str	x0, [x29, #104]
    bb20:	mov	x0, x2
    bb24:	str	x0, [x29, #96]
    bb28:	stp	xzr, xzr, [x29, #72]
    bb2c:	str	xzr, [x29, #88]
    bb30:	mov	w0, #0x1                   	// #1
    bb34:	strb	w0, [x29, #72]
    bb38:	ldr	x0, [x29, #96]
    bb3c:	str	x0, [x29, #80]
    bb40:	ldr	x0, [x29, #104]
    bb44:	str	x0, [x29, #88]
    bb48:	add	x2, x29, #0x10
    bb4c:	add	x3, x29, #0x48
    bb50:	ldp	x0, x1, [x3]
    bb54:	stp	x0, x1, [x2]
    bb58:	ldr	x0, [x3, #16]
    bb5c:	str	x0, [x2, #16]
    bb60:	add	x0, x29, #0x10
    bb64:	mov	x2, x0
    bb68:	ldr	x1, [x29, #48]
    bb6c:	ldr	x0, [x29, #56]
    bb70:	bl	b86c <__ubsan_handle_vla_bound_not_positive_abort@@Base+0xf4>
    bb74:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    bb78:	sub	sp, sp, #0x2f0
    bb7c:	stp	x19, x30, [sp]
    bb80:	str	x0, [sp, #104]
    bb84:	str	x1, [sp, #96]
    bb88:	mov	x19, x2
    bb8c:	ldr	x0, [sp, #104]
    bb90:	bl	dad0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x36c>
    bb94:	stp	x0, x1, [sp, #200]
    bb98:	ldr	x0, [sp, #104]
    bb9c:	ldr	x0, [x0, #16]
    bba0:	bl	8ad0 <__asan_backtrace_open@plt+0x1e60>
    bba4:	mov	x2, x0
    bba8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    bbac:	add	x1, x0, #0x838
    bbb0:	mov	x0, x2
    bbb4:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
    bbb8:	cmp	w0, #0x0
    bbbc:	b.eq	bbec <__ubsan_handle_float_cast_overflow_abort@@Base+0xe8>  // b.none
    bbc0:	ldr	x0, [sp, #104]
    bbc4:	ldr	x0, [x0, #16]
    bbc8:	bl	8ad0 <__asan_backtrace_open@plt+0x1e60>
    bbcc:	mov	x3, x0
    bbd0:	mov	x2, #0x6                   	// #6
    bbd4:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    bbd8:	add	x1, x0, #0x840
    bbdc:	mov	x0, x3
    bbe0:	bl	1cb4c <__sanitizer_set_report_fd@@Base+0x29a0>
    bbe4:	cmp	w0, #0x0
    bbe8:	b.ne	bbf4 <__ubsan_handle_float_cast_overflow_abort@@Base+0xf0>  // b.any
    bbec:	mov	w0, #0x1                   	// #1
    bbf0:	b	bbf8 <__ubsan_handle_float_cast_overflow_abort@@Base+0xf4>
    bbf4:	mov	w0, #0x0                   	// #0
    bbf8:	strb	w0, [sp, #751]
    bbfc:	ldrb	w0, [sp, #751]
    bc00:	cmp	w0, #0x0
    bc04:	b.eq	bc10 <__ubsan_handle_float_cast_overflow_abort@@Base+0x10c>  // b.none
    bc08:	mov	w0, #0x13                  	// #19
    bc0c:	b	bc14 <__ubsan_handle_float_cast_overflow_abort@@Base+0x110>
    bc10:	mov	w0, #0x14                  	// #20
    bc14:	str	w0, [sp, #744]
    bc18:	add	x2, sp, #0x40
    bc1c:	mov	x3, x19
    bc20:	ldp	x0, x1, [x3]
    bc24:	stp	x0, x1, [x2]
    bc28:	ldr	x0, [x3, #16]
    bc2c:	str	x0, [x2, #16]
    bc30:	add	x0, sp, #0x40
    bc34:	ldr	w3, [sp, #744]
    bc38:	mov	x2, x0
    bc3c:	ldp	x0, x1, [sp, #200]
    bc40:	bl	9c64 <__ubsan_default_options@@Base+0x600>
    bc44:	and	w0, w0, #0xff
    bc48:	cmp	w0, #0x0
    bc4c:	b.ne	bd40 <__ubsan_handle_float_cast_overflow_abort@@Base+0x23c>  // b.any
    bc50:	add	x0, sp, #0xd8
    bc54:	ldp	x1, x2, [sp, #200]
    bc58:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    bc5c:	add	x2, sp, #0x40
    bc60:	mov	x3, x19
    bc64:	ldp	x0, x1, [x3]
    bc68:	stp	x0, x1, [x2]
    bc6c:	ldr	x0, [x3, #16]
    bc70:	str	x0, [x2, #16]
    bc74:	add	x0, sp, #0x10
    bc78:	add	x1, sp, #0xd8
    bc7c:	ldp	x2, x3, [x1]
    bc80:	stp	x2, x3, [x0]
    bc84:	ldp	x2, x3, [x1, #16]
    bc88:	stp	x2, x3, [x0, #16]
    bc8c:	ldr	x1, [x1, #32]
    bc90:	str	x1, [x0, #32]
    bc94:	add	x2, sp, #0x10
    bc98:	add	x1, sp, #0x40
    bc9c:	add	x0, sp, #0x78
    bca0:	ldr	w3, [sp, #744]
    bca4:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    bca8:	add	x0, sp, #0x2b0
    bcac:	ldp	x1, x2, [sp, #200]
    bcb0:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    bcb4:	add	x0, sp, #0x10
    bcb8:	add	x1, sp, #0x2b0
    bcbc:	ldp	x2, x3, [x1]
    bcc0:	stp	x2, x3, [x0]
    bcc4:	ldp	x2, x3, [x1, #16]
    bcc8:	stp	x2, x3, [x0, #16]
    bccc:	ldr	x1, [x1, #32]
    bcd0:	str	x1, [x0, #32]
    bcd4:	add	x1, sp, #0x10
    bcd8:	add	x5, sp, #0x100
    bcdc:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    bce0:	add	x4, x0, #0x848
    bce4:	ldr	w3, [sp, #744]
    bce8:	mov	w2, #0x0                   	// #0
    bcec:	mov	x0, x5
    bcf0:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    bcf4:	ldr	x0, [sp, #104]
    bcf8:	ldr	x1, [x0, #16]
    bcfc:	add	x0, sp, #0x2d8
    bd00:	ldr	x2, [sp, #96]
    bd04:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    bd08:	add	x1, sp, #0x2d8
    bd0c:	add	x0, sp, #0x100
    bd10:	bl	7480 <__asan_backtrace_open@plt+0x810>
    bd14:	mov	x2, x0
    bd18:	ldr	x0, [sp, #104]
    bd1c:	ldr	x0, [x0, #16]
    bd20:	mov	x1, x0
    bd24:	mov	x0, x2
    bd28:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    bd2c:	add	x0, sp, #0x100
    bd30:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    bd34:	add	x0, sp, #0x78
    bd38:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    bd3c:	b	bd44 <__ubsan_handle_float_cast_overflow_abort@@Base+0x240>
    bd40:	nop
    bd44:	ldp	x19, x30, [sp]
    bd48:	add	sp, sp, #0x2f0
    bd4c:	ret

000000000000bd50 <__ubsan_handle_load_invalid_value@@Base>:
    bd50:	stp	x29, x30, [sp, #-112]!
    bd54:	mov	x29, sp
    bd58:	mov	x2, x30
    bd5c:	str	x0, [x29, #56]
    bd60:	str	x1, [x29, #48]
    bd64:	mov	x0, x29
    bd68:	str	x0, [x29, #104]
    bd6c:	mov	x0, x2
    bd70:	str	x0, [x29, #96]
    bd74:	stp	xzr, xzr, [x29, #72]
    bd78:	str	xzr, [x29, #88]
    bd7c:	ldr	x0, [x29, #96]
    bd80:	str	x0, [x29, #80]
    bd84:	ldr	x0, [x29, #104]
    bd88:	str	x0, [x29, #88]
    bd8c:	add	x2, x29, #0x10
    bd90:	add	x3, x29, #0x48
    bd94:	ldp	x0, x1, [x3]
    bd98:	stp	x0, x1, [x2]
    bd9c:	ldr	x0, [x3, #16]
    bda0:	str	x0, [x2, #16]
    bda4:	add	x0, x29, #0x10
    bda8:	mov	x2, x0
    bdac:	ldr	x1, [x29, #48]
    bdb0:	ldr	x0, [x29, #56]
    bdb4:	bl	bb78 <__ubsan_handle_float_cast_overflow_abort@@Base+0x74>
    bdb8:	nop
    bdbc:	ldp	x29, x30, [sp], #112
    bdc0:	ret

000000000000bdc4 <__ubsan_handle_load_invalid_value_abort@@Base>:
    bdc4:	stp	x29, x30, [sp, #-112]!
    bdc8:	mov	x29, sp
    bdcc:	mov	x2, x30
    bdd0:	str	x0, [x29, #56]
    bdd4:	str	x1, [x29, #48]
    bdd8:	mov	x0, x29
    bddc:	str	x0, [x29, #104]
    bde0:	mov	x0, x2
    bde4:	str	x0, [x29, #96]
    bde8:	stp	xzr, xzr, [x29, #72]
    bdec:	str	xzr, [x29, #88]
    bdf0:	mov	w0, #0x1                   	// #1
    bdf4:	strb	w0, [x29, #72]
    bdf8:	ldr	x0, [x29, #96]
    bdfc:	str	x0, [x29, #80]
    be00:	ldr	x0, [x29, #104]
    be04:	str	x0, [x29, #88]
    be08:	add	x2, x29, #0x10
    be0c:	add	x3, x29, #0x48
    be10:	ldp	x0, x1, [x3]
    be14:	stp	x0, x1, [x2]
    be18:	ldr	x0, [x3, #16]
    be1c:	str	x0, [x2, #16]
    be20:	add	x0, x29, #0x10
    be24:	mov	x2, x0
    be28:	ldr	x1, [x29, #48]
    be2c:	ldr	x0, [x29, #56]
    be30:	bl	bb78 <__ubsan_handle_float_cast_overflow_abort@@Base+0x74>
    be34:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    be38:	sub	sp, sp, #0x330
    be3c:	stp	x19, x30, [sp]
    be40:	str	x0, [sp, #120]
    be44:	mov	x19, x1
    be48:	str	x2, [sp, #112]
    be4c:	str	x3, [sp, #104]
    be50:	ldr	x0, [sp, #120]
    be54:	bl	dad0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x36c>
    be58:	stp	x0, x1, [sp, #216]
    be5c:	str	wzr, [sp, #812]
    be60:	ldr	x0, [sp, #120]
    be64:	ldr	x0, [x0, #16]
    be68:	str	x0, [sp, #800]
    be6c:	ldr	x0, [sp, #120]
    be70:	ldr	x0, [x0, #24]
    be74:	str	x0, [sp, #792]
    be78:	ldr	x0, [sp, #800]
    be7c:	bl	8b24 <__asan_backtrace_open@plt+0x1eb4>
    be80:	strb	w0, [sp, #791]
    be84:	ldr	x0, [sp, #792]
    be88:	bl	8b24 <__asan_backtrace_open@plt+0x1eb4>
    be8c:	strb	w0, [sp, #790]
    be90:	ldr	x0, [sp, #120]
    be94:	ldrb	w0, [x0, #32]
    be98:	cmp	w0, #0x2
    be9c:	b.eq	bf08 <__ubsan_handle_load_invalid_value_abort@@Base+0x144>  // b.none
    bea0:	cmp	w0, #0x2
    bea4:	b.gt	bf14 <__ubsan_handle_load_invalid_value_abort@@Base+0x150>
    bea8:	cmp	w0, #0x0
    beac:	b.eq	bebc <__ubsan_handle_load_invalid_value_abort@@Base+0xf8>  // b.none
    beb0:	cmp	w0, #0x1
    beb4:	b.eq	befc <__ubsan_handle_load_invalid_value_abort@@Base+0x138>  // b.none
    beb8:	b	bf14 <__ubsan_handle_load_invalid_value_abort@@Base+0x150>
    bebc:	ldrb	w0, [sp, #791]
    bec0:	eor	w0, w0, #0x1
    bec4:	and	w0, w0, #0xff
    bec8:	cmp	w0, #0x0
    becc:	b.eq	bef0 <__ubsan_handle_load_invalid_value_abort@@Base+0x12c>  // b.none
    bed0:	ldrb	w0, [sp, #790]
    bed4:	eor	w0, w0, #0x1
    bed8:	and	w0, w0, #0xff
    bedc:	cmp	w0, #0x0
    bee0:	b.eq	bef0 <__ubsan_handle_load_invalid_value_abort@@Base+0x12c>  // b.none
    bee4:	mov	w0, #0xa                   	// #10
    bee8:	str	w0, [sp, #812]
    beec:	b	bf14 <__ubsan_handle_load_invalid_value_abort@@Base+0x150>
    bef0:	mov	w0, #0xb                   	// #11
    bef4:	str	w0, [sp, #812]
    bef8:	b	bf14 <__ubsan_handle_load_invalid_value_abort@@Base+0x150>
    befc:	mov	w0, #0xa                   	// #10
    bf00:	str	w0, [sp, #812]
    bf04:	b	bf14 <__ubsan_handle_load_invalid_value_abort@@Base+0x150>
    bf08:	mov	w0, #0xb                   	// #11
    bf0c:	str	w0, [sp, #812]
    bf10:	nop
    bf14:	add	x2, sp, #0x40
    bf18:	mov	x3, x19
    bf1c:	ldp	x0, x1, [x3]
    bf20:	stp	x0, x1, [x2]
    bf24:	ldr	x0, [x3, #16]
    bf28:	str	x0, [x2, #16]
    bf2c:	add	x0, sp, #0x40
    bf30:	ldr	w3, [sp, #812]
    bf34:	mov	x2, x0
    bf38:	ldp	x0, x1, [sp, #216]
    bf3c:	bl	9c64 <__ubsan_default_options@@Base+0x600>
    bf40:	and	w0, w0, #0xff
    bf44:	cmp	w0, #0x0
    bf48:	b.ne	c0f8 <__ubsan_handle_load_invalid_value_abort@@Base+0x334>  // b.any
    bf4c:	add	x0, sp, #0xe8
    bf50:	ldp	x1, x2, [sp, #216]
    bf54:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    bf58:	add	x2, sp, #0x40
    bf5c:	mov	x3, x19
    bf60:	ldp	x0, x1, [x3]
    bf64:	stp	x0, x1, [x2]
    bf68:	ldr	x0, [x3, #16]
    bf6c:	str	x0, [x2, #16]
    bf70:	add	x0, sp, #0x10
    bf74:	add	x1, sp, #0xe8
    bf78:	ldp	x2, x3, [x1]
    bf7c:	stp	x2, x3, [x0]
    bf80:	ldp	x2, x3, [x1, #16]
    bf84:	stp	x2, x3, [x0, #16]
    bf88:	ldr	x1, [x1, #32]
    bf8c:	str	x1, [x0, #32]
    bf90:	add	x2, sp, #0x10
    bf94:	add	x1, sp, #0x40
    bf98:	add	x0, sp, #0x88
    bf9c:	ldr	w3, [sp, #812]
    bfa0:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    bfa4:	add	x0, sp, #0x2c8
    bfa8:	ldp	x1, x2, [sp, #216]
    bfac:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    bfb0:	add	x0, sp, #0x10
    bfb4:	add	x1, sp, #0x2c8
    bfb8:	ldp	x2, x3, [x1]
    bfbc:	stp	x2, x3, [x0]
    bfc0:	ldp	x2, x3, [x1, #16]
    bfc4:	stp	x2, x3, [x0, #16]
    bfc8:	ldr	x1, [x1, #32]
    bfcc:	str	x1, [x0, #32]
    bfd0:	add	x1, sp, #0x10
    bfd4:	add	x5, sp, #0x110
    bfd8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    bfdc:	add	x4, x0, #0x888
    bfe0:	ldr	w3, [sp, #812]
    bfe4:	mov	w2, #0x0                   	// #0
    bfe8:	mov	x0, x5
    bfec:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    bff0:	add	x0, sp, #0x110
    bff4:	ldr	x1, [sp, #800]
    bff8:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    bffc:	mov	x19, x0
    c000:	add	x0, sp, #0x2f0
    c004:	ldr	x2, [sp, #112]
    c008:	ldr	x1, [sp, #800]
    c00c:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    c010:	add	x0, sp, #0x2f0
    c014:	mov	x1, x0
    c018:	mov	x0, x19
    c01c:	bl	7480 <__asan_backtrace_open@plt+0x810>
    c020:	mov	x19, x0
    c024:	ldr	x0, [sp, #800]
    c028:	bl	db3c <__ubsan_handle_cfi_check_fail_abort@@Base+0x3d8>
    c02c:	mov	w0, w0
    c030:	mov	x1, x0
    c034:	mov	x0, x19
    c038:	bl	dfa0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x83c>
    c03c:	mov	x2, x0
    c040:	ldrb	w0, [sp, #791]
    c044:	cmp	w0, #0x0
    c048:	b.eq	c058 <__ubsan_handle_load_invalid_value_abort@@Base+0x294>  // b.none
    c04c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    c050:	add	x0, x0, #0x900
    c054:	b	c060 <__ubsan_handle_load_invalid_value_abort@@Base+0x29c>
    c058:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    c05c:	add	x0, x0, #0x908
    c060:	mov	x1, x0
    c064:	mov	x0, x2
    c068:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    c06c:	ldr	x1, [sp, #792]
    c070:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    c074:	mov	x19, x0
    c078:	add	x0, sp, #0x300
    c07c:	ldr	x2, [sp, #104]
    c080:	ldr	x1, [sp, #792]
    c084:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    c088:	add	x0, sp, #0x300
    c08c:	mov	x1, x0
    c090:	mov	x0, x19
    c094:	bl	7480 <__asan_backtrace_open@plt+0x810>
    c098:	mov	x19, x0
    c09c:	ldr	x0, [sp, #792]
    c0a0:	bl	db3c <__ubsan_handle_cfi_check_fail_abort@@Base+0x3d8>
    c0a4:	mov	w0, w0
    c0a8:	mov	x1, x0
    c0ac:	mov	x0, x19
    c0b0:	bl	dfa0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x83c>
    c0b4:	mov	x2, x0
    c0b8:	ldrb	w0, [sp, #790]
    c0bc:	cmp	w0, #0x0
    c0c0:	b.eq	c0d0 <__ubsan_handle_load_invalid_value_abort@@Base+0x30c>  // b.none
    c0c4:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    c0c8:	add	x0, x0, #0x900
    c0cc:	b	c0d8 <__ubsan_handle_load_invalid_value_abort@@Base+0x314>
    c0d0:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    c0d4:	add	x0, x0, #0x908
    c0d8:	mov	x1, x0
    c0dc:	mov	x0, x2
    c0e0:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    c0e4:	add	x0, sp, #0x110
    c0e8:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    c0ec:	add	x0, sp, #0x88
    c0f0:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    c0f4:	b	c0fc <__ubsan_handle_load_invalid_value_abort@@Base+0x338>
    c0f8:	nop
    c0fc:	ldp	x19, x30, [sp]
    c100:	add	sp, sp, #0x330
    c104:	ret

000000000000c108 <__ubsan_handle_implicit_conversion@@Base>:
    c108:	stp	x29, x30, [sp, #-128]!
    c10c:	mov	x29, sp
    c110:	mov	x3, x30
    c114:	str	x0, [x29, #72]
    c118:	str	x1, [x29, #64]
    c11c:	str	x2, [x29, #56]
    c120:	mov	x0, x29
    c124:	str	x0, [x29, #120]
    c128:	mov	x0, x3
    c12c:	str	x0, [x29, #112]
    c130:	stp	xzr, xzr, [x29, #88]
    c134:	str	xzr, [x29, #104]
    c138:	ldr	x0, [x29, #112]
    c13c:	str	x0, [x29, #96]
    c140:	ldr	x0, [x29, #120]
    c144:	str	x0, [x29, #104]
    c148:	add	x2, x29, #0x10
    c14c:	add	x3, x29, #0x58
    c150:	ldp	x0, x1, [x3]
    c154:	stp	x0, x1, [x2]
    c158:	ldr	x0, [x3, #16]
    c15c:	str	x0, [x2, #16]
    c160:	add	x0, x29, #0x10
    c164:	ldr	x3, [x29, #56]
    c168:	ldr	x2, [x29, #64]
    c16c:	mov	x1, x0
    c170:	ldr	x0, [x29, #72]
    c174:	bl	be38 <__ubsan_handle_load_invalid_value_abort@@Base+0x74>
    c178:	nop
    c17c:	ldp	x29, x30, [sp], #128
    c180:	ret

000000000000c184 <__ubsan_handle_implicit_conversion_abort@@Base>:
    c184:	stp	x29, x30, [sp, #-128]!
    c188:	mov	x29, sp
    c18c:	mov	x3, x30
    c190:	str	x0, [x29, #72]
    c194:	str	x1, [x29, #64]
    c198:	str	x2, [x29, #56]
    c19c:	mov	x0, x29
    c1a0:	str	x0, [x29, #120]
    c1a4:	mov	x0, x3
    c1a8:	str	x0, [x29, #112]
    c1ac:	stp	xzr, xzr, [x29, #88]
    c1b0:	str	xzr, [x29, #104]
    c1b4:	mov	w0, #0x1                   	// #1
    c1b8:	strb	w0, [x29, #88]
    c1bc:	ldr	x0, [x29, #112]
    c1c0:	str	x0, [x29, #96]
    c1c4:	ldr	x0, [x29, #120]
    c1c8:	str	x0, [x29, #104]
    c1cc:	add	x2, x29, #0x10
    c1d0:	add	x3, x29, #0x58
    c1d4:	ldp	x0, x1, [x3]
    c1d8:	stp	x0, x1, [x2]
    c1dc:	ldr	x0, [x3, #16]
    c1e0:	str	x0, [x2, #16]
    c1e4:	add	x0, x29, #0x10
    c1e8:	ldr	x3, [x29, #56]
    c1ec:	ldr	x2, [x29, #64]
    c1f0:	mov	x1, x0
    c1f4:	ldr	x0, [x29, #72]
    c1f8:	bl	be38 <__ubsan_handle_load_invalid_value_abort@@Base+0x74>
    c1fc:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    c200:	sub	sp, sp, #0x2e0
    c204:	stp	x19, x30, [sp]
    c208:	str	x0, [sp, #104]
    c20c:	mov	x19, x1
    c210:	ldr	x0, [sp, #104]
    c214:	bl	dad0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x36c>
    c218:	stp	x0, x1, [sp, #200]
    c21c:	mov	w0, #0x9                   	// #9
    c220:	str	w0, [sp, #732]
    c224:	add	x2, sp, #0x40
    c228:	mov	x3, x19
    c22c:	ldp	x0, x1, [x3]
    c230:	stp	x0, x1, [x2]
    c234:	ldr	x0, [x3, #16]
    c238:	str	x0, [x2, #16]
    c23c:	add	x0, sp, #0x40
    c240:	ldr	w3, [sp, #732]
    c244:	mov	x2, x0
    c248:	ldp	x0, x1, [sp, #200]
    c24c:	bl	9c64 <__ubsan_default_options@@Base+0x600>
    c250:	and	w0, w0, #0xff
    c254:	cmp	w0, #0x0
    c258:	b.ne	c348 <__ubsan_handle_implicit_conversion_abort@@Base+0x1c4>  // b.any
    c25c:	add	x0, sp, #0xd8
    c260:	ldp	x1, x2, [sp, #200]
    c264:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    c268:	add	x2, sp, #0x40
    c26c:	mov	x3, x19
    c270:	ldp	x0, x1, [x3]
    c274:	stp	x0, x1, [x2]
    c278:	ldr	x0, [x3, #16]
    c27c:	str	x0, [x2, #16]
    c280:	add	x0, sp, #0x10
    c284:	add	x1, sp, #0xd8
    c288:	ldp	x2, x3, [x1]
    c28c:	stp	x2, x3, [x0]
    c290:	ldp	x2, x3, [x1, #16]
    c294:	stp	x2, x3, [x0, #16]
    c298:	ldr	x1, [x1, #32]
    c29c:	str	x1, [x0, #32]
    c2a0:	add	x2, sp, #0x10
    c2a4:	add	x1, sp, #0x40
    c2a8:	add	x0, sp, #0x78
    c2ac:	ldr	w3, [sp, #732]
    c2b0:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    c2b4:	add	x0, sp, #0x2b0
    c2b8:	ldp	x1, x2, [sp, #200]
    c2bc:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    c2c0:	add	x0, sp, #0x10
    c2c4:	add	x1, sp, #0x2b0
    c2c8:	ldp	x2, x3, [x1]
    c2cc:	stp	x2, x3, [x0]
    c2d0:	ldp	x2, x3, [x1, #16]
    c2d4:	stp	x2, x3, [x0, #16]
    c2d8:	ldr	x1, [x1, #32]
    c2dc:	str	x1, [x0, #32]
    c2e0:	add	x1, sp, #0x10
    c2e4:	add	x5, sp, #0x100
    c2e8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    c2ec:	add	x4, x0, #0x910
    c2f0:	ldr	w3, [sp, #732]
    c2f4:	mov	w2, #0x0                   	// #0
    c2f8:	mov	x0, x5
    c2fc:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    c300:	ldr	x0, [sp, #104]
    c304:	ldrb	w0, [x0, #16]
    c308:	cmp	w0, #0x0
    c30c:	b.ne	c31c <__ubsan_handle_implicit_conversion_abort@@Base+0x198>  // b.any
    c310:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    c314:	add	x0, x0, #0x948
    c318:	b	c324 <__ubsan_handle_implicit_conversion_abort@@Base+0x1a0>
    c31c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    c320:	add	x0, x0, #0x950
    c324:	add	x2, sp, #0x100
    c328:	mov	x1, x0
    c32c:	mov	x0, x2
    c330:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    c334:	add	x0, sp, #0x100
    c338:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    c33c:	add	x0, sp, #0x78
    c340:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    c344:	b	c34c <__ubsan_handle_implicit_conversion_abort@@Base+0x1c8>
    c348:	nop
    c34c:	ldp	x19, x30, [sp]
    c350:	add	sp, sp, #0x2e0
    c354:	ret

000000000000c358 <__ubsan_handle_invalid_builtin@@Base>:
    c358:	stp	x29, x30, [sp, #-112]!
    c35c:	mov	x29, sp
    c360:	mov	x1, x30
    c364:	str	x0, [x29, #56]
    c368:	mov	x0, x29
    c36c:	str	x0, [x29, #104]
    c370:	mov	x0, x1
    c374:	str	x0, [x29, #96]
    c378:	stp	xzr, xzr, [x29, #72]
    c37c:	str	xzr, [x29, #88]
    c380:	mov	w0, #0x1                   	// #1
    c384:	strb	w0, [x29, #72]
    c388:	ldr	x0, [x29, #96]
    c38c:	str	x0, [x29, #80]
    c390:	ldr	x0, [x29, #104]
    c394:	str	x0, [x29, #88]
    c398:	add	x2, x29, #0x10
    c39c:	add	x3, x29, #0x48
    c3a0:	ldp	x0, x1, [x3]
    c3a4:	stp	x0, x1, [x2]
    c3a8:	ldr	x0, [x3, #16]
    c3ac:	str	x0, [x2, #16]
    c3b0:	add	x0, x29, #0x10
    c3b4:	mov	x1, x0
    c3b8:	ldr	x0, [x29, #56]
    c3bc:	bl	c200 <__ubsan_handle_implicit_conversion_abort@@Base+0x7c>
    c3c0:	nop
    c3c4:	ldp	x29, x30, [sp], #112
    c3c8:	ret

000000000000c3cc <__ubsan_handle_invalid_builtin_abort@@Base>:
    c3cc:	stp	x29, x30, [sp, #-112]!
    c3d0:	mov	x29, sp
    c3d4:	mov	x1, x30
    c3d8:	str	x0, [x29, #56]
    c3dc:	mov	x0, x29
    c3e0:	str	x0, [x29, #104]
    c3e4:	mov	x0, x1
    c3e8:	str	x0, [x29, #96]
    c3ec:	stp	xzr, xzr, [x29, #72]
    c3f0:	str	xzr, [x29, #88]
    c3f4:	mov	w0, #0x1                   	// #1
    c3f8:	strb	w0, [x29, #72]
    c3fc:	ldr	x0, [x29, #96]
    c400:	str	x0, [x29, #80]
    c404:	ldr	x0, [x29, #104]
    c408:	str	x0, [x29, #88]
    c40c:	add	x2, x29, #0x10
    c410:	add	x3, x29, #0x48
    c414:	ldp	x0, x1, [x3]
    c418:	stp	x0, x1, [x2]
    c41c:	ldr	x0, [x3, #16]
    c420:	str	x0, [x2, #16]
    c424:	add	x0, x29, #0x10
    c428:	mov	x1, x0
    c42c:	ldr	x0, [x29, #56]
    c430:	bl	c200 <__ubsan_handle_implicit_conversion_abort@@Base+0x7c>
    c434:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    c438:	sub	sp, sp, #0x4d0
    c43c:	stp	x19, x30, [sp]
    c440:	str	x0, [sp, #104]
    c444:	str	x1, [sp, #96]
    c448:	mov	x19, x2
    c44c:	ldr	x0, [sp, #104]
    c450:	bl	dad0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x36c>
    c454:	stp	x0, x1, [sp, #200]
    c458:	mov	w0, #0x15                  	// #21
    c45c:	str	w0, [sp, #1220]
    c460:	add	x2, sp, #0x40
    c464:	mov	x3, x19
    c468:	ldp	x0, x1, [x3]
    c46c:	stp	x0, x1, [x2]
    c470:	ldr	x0, [x3, #16]
    c474:	str	x0, [x2, #16]
    c478:	add	x0, sp, #0x40
    c47c:	ldr	w3, [sp, #1220]
    c480:	mov	x2, x0
    c484:	ldp	x0, x1, [sp, #200]
    c488:	bl	9c64 <__ubsan_default_options@@Base+0x600>
    c48c:	and	w0, w0, #0xff
    c490:	cmp	w0, #0x0
    c494:	b.ne	c618 <__ubsan_handle_invalid_builtin_abort@@Base+0x24c>  // b.any
    c498:	add	x0, sp, #0xd8
    c49c:	ldp	x1, x2, [sp, #200]
    c4a0:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    c4a4:	add	x2, sp, #0x40
    c4a8:	mov	x3, x19
    c4ac:	ldp	x0, x1, [x3]
    c4b0:	stp	x0, x1, [x2]
    c4b4:	ldr	x0, [x3, #16]
    c4b8:	str	x0, [x2, #16]
    c4bc:	add	x0, sp, #0x10
    c4c0:	add	x1, sp, #0xd8
    c4c4:	ldp	x2, x3, [x1]
    c4c8:	stp	x2, x3, [x0]
    c4cc:	ldp	x2, x3, [x1, #16]
    c4d0:	stp	x2, x3, [x0, #16]
    c4d4:	ldr	x1, [x1, #32]
    c4d8:	str	x1, [x0, #32]
    c4dc:	add	x2, sp, #0x10
    c4e0:	add	x1, sp, #0x40
    c4e4:	add	x0, sp, #0x78
    c4e8:	ldr	w3, [sp, #1220]
    c4ec:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    c4f0:	ldr	x0, [sp, #96]
    c4f4:	bl	7410 <__asan_backtrace_open@plt+0x7a0>
    c4f8:	mov	x1, x0
    c4fc:	add	x0, sp, #0x70
    c500:	bl	8cd8 <__asan_backtrace_open@plt+0x2068>
    c504:	add	x0, sp, #0x70
    c508:	bl	8d18 <__asan_backtrace_open@plt+0x20a8>
    c50c:	ldr	x0, [x0, #40]
    c510:	str	x0, [sp, #1224]
    c514:	ldr	x0, [sp, #1224]
    c518:	cmp	x0, #0x0
    c51c:	b.ne	c52c <__ubsan_handle_invalid_builtin_abort@@Base+0x160>  // b.any
    c520:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    c524:	add	x0, x0, #0x958
    c528:	str	x0, [sp, #1224]
    c52c:	add	x0, sp, #0x2b8
    c530:	ldp	x1, x2, [sp, #200]
    c534:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    c538:	add	x0, sp, #0x10
    c53c:	add	x1, sp, #0x2b8
    c540:	ldp	x2, x3, [x1]
    c544:	stp	x2, x3, [x0]
    c548:	ldp	x2, x3, [x1, #16]
    c54c:	stp	x2, x3, [x0, #16]
    c550:	ldr	x1, [x1, #32]
    c554:	str	x1, [x0, #32]
    c558:	add	x1, sp, #0x10
    c55c:	add	x5, sp, #0x100
    c560:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    c564:	add	x4, x0, #0x968
    c568:	ldr	w3, [sp, #1220]
    c56c:	mov	w2, #0x0                   	// #0
    c570:	mov	x0, x5
    c574:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    c578:	add	x0, sp, #0x100
    c57c:	ldr	x1, [sp, #1224]
    c580:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    c584:	mov	x2, x0
    c588:	ldr	x0, [sp, #104]
    c58c:	ldr	x0, [x0, #16]
    c590:	mov	x1, x0
    c594:	mov	x0, x2
    c598:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    c59c:	add	x0, sp, #0x100
    c5a0:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    c5a4:	add	x1, sp, #0x70
    c5a8:	add	x0, sp, #0x498
    c5ac:	bl	ddc8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x664>
    c5b0:	add	x0, sp, #0x10
    c5b4:	add	x1, sp, #0x498
    c5b8:	ldp	x2, x3, [x1]
    c5bc:	stp	x2, x3, [x0]
    c5c0:	ldp	x2, x3, [x1, #16]
    c5c4:	stp	x2, x3, [x0, #16]
    c5c8:	ldr	x1, [x1, #32]
    c5cc:	str	x1, [x0, #32]
    c5d0:	add	x1, sp, #0x10
    c5d4:	add	x5, sp, #0x2e0
    c5d8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    c5dc:	add	x4, x0, #0x9b0
    c5e0:	ldr	w3, [sp, #1220]
    c5e4:	mov	w2, #0x1                   	// #1
    c5e8:	mov	x0, x5
    c5ec:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    c5f0:	add	x0, sp, #0x2e0
    c5f4:	ldr	x1, [sp, #1224]
    c5f8:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    c5fc:	add	x0, sp, #0x2e0
    c600:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    c604:	add	x0, sp, #0x70
    c608:	bl	8cfc <__asan_backtrace_open@plt+0x208c>
    c60c:	add	x0, sp, #0x78
    c610:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    c614:	b	c61c <__ubsan_handle_invalid_builtin_abort@@Base+0x250>
    c618:	nop
    c61c:	ldp	x19, x30, [sp]
    c620:	add	sp, sp, #0x4d0
    c624:	ret

000000000000c628 <__ubsan_handle_function_type_mismatch@@Base>:
    c628:	stp	x29, x30, [sp, #-112]!
    c62c:	mov	x29, sp
    c630:	mov	x2, x30
    c634:	str	x0, [x29, #56]
    c638:	str	x1, [x29, #48]
    c63c:	mov	x0, x29
    c640:	str	x0, [x29, #104]
    c644:	mov	x0, x2
    c648:	str	x0, [x29, #96]
    c64c:	stp	xzr, xzr, [x29, #72]
    c650:	str	xzr, [x29, #88]
    c654:	ldr	x0, [x29, #96]
    c658:	str	x0, [x29, #80]
    c65c:	ldr	x0, [x29, #104]
    c660:	str	x0, [x29, #88]
    c664:	add	x2, x29, #0x10
    c668:	add	x3, x29, #0x48
    c66c:	ldp	x0, x1, [x3]
    c670:	stp	x0, x1, [x2]
    c674:	ldr	x0, [x3, #16]
    c678:	str	x0, [x2, #16]
    c67c:	add	x0, x29, #0x10
    c680:	mov	x2, x0
    c684:	ldr	x1, [x29, #48]
    c688:	ldr	x0, [x29, #56]
    c68c:	bl	c438 <__ubsan_handle_invalid_builtin_abort@@Base+0x6c>
    c690:	nop
    c694:	ldp	x29, x30, [sp], #112
    c698:	ret

000000000000c69c <__ubsan_handle_function_type_mismatch_abort@@Base>:
    c69c:	stp	x29, x30, [sp, #-112]!
    c6a0:	mov	x29, sp
    c6a4:	mov	x2, x30
    c6a8:	str	x0, [x29, #56]
    c6ac:	str	x1, [x29, #48]
    c6b0:	mov	x0, x29
    c6b4:	str	x0, [x29, #104]
    c6b8:	mov	x0, x2
    c6bc:	str	x0, [x29, #96]
    c6c0:	stp	xzr, xzr, [x29, #72]
    c6c4:	str	xzr, [x29, #88]
    c6c8:	mov	w0, #0x1                   	// #1
    c6cc:	strb	w0, [x29, #72]
    c6d0:	ldr	x0, [x29, #96]
    c6d4:	str	x0, [x29, #80]
    c6d8:	ldr	x0, [x29, #104]
    c6dc:	str	x0, [x29, #88]
    c6e0:	add	x2, x29, #0x10
    c6e4:	add	x3, x29, #0x48
    c6e8:	ldp	x0, x1, [x3]
    c6ec:	stp	x0, x1, [x2]
    c6f0:	ldr	x0, [x3, #16]
    c6f4:	str	x0, [x2, #16]
    c6f8:	add	x0, x29, #0x10
    c6fc:	mov	x2, x0
    c700:	ldr	x1, [x29, #48]
    c704:	ldr	x0, [x29, #56]
    c708:	bl	c438 <__ubsan_handle_invalid_builtin_abort@@Base+0x6c>
    c70c:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    c710:	sub	sp, sp, #0x4e0
    c714:	stp	x19, x30, [sp]
    c718:	str	x0, [sp, #120]
    c71c:	str	x1, [sp, #112]
    c720:	mov	x19, x2
    c724:	strb	w3, [sp, #111]
    c728:	ldr	x0, [sp, #112]
    c72c:	cmp	x0, #0x0
    c730:	b.ne	c780 <__ubsan_handle_function_type_mismatch_abort@@Base+0xe4>  // b.any
    c734:	str	xzr, [sp, #1232]
    c738:	str	xzr, [sp, #1224]
    c73c:	ldr	x1, [sp, #1232]
    c740:	ldr	x0, [sp, #1224]
    c744:	cmp	x1, x0
    c748:	cset	w0, eq  // eq = none
    c74c:	and	w0, w0, #0xff
    c750:	and	x0, x0, #0xff
    c754:	cmp	x0, #0x0
    c758:	b.eq	c77c <__ubsan_handle_function_type_mismatch_abort@@Base+0xe0>  // b.none
    c75c:	ldr	x4, [sp, #1224]
    c760:	ldr	x3, [sp, #1232]
    c764:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    c768:	add	x2, x0, #0x9c0
    c76c:	mov	w1, #0x23f                 	// #575
    c770:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    c774:	add	x0, x0, #0x4f8
    c778:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    c77c:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    c780:	ldr	x0, [sp, #112]
    c784:	bl	dad0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x36c>
    c788:	stp	x0, x1, [sp, #216]
    c78c:	mov	w0, #0x16                  	// #22
    c790:	str	w0, [sp, #1244]
    c794:	add	x2, sp, #0x40
    c798:	mov	x3, x19
    c79c:	ldp	x0, x1, [x3]
    c7a0:	stp	x0, x1, [x2]
    c7a4:	ldr	x0, [x3, #16]
    c7a8:	str	x0, [x2, #16]
    c7ac:	add	x0, sp, #0x40
    c7b0:	ldr	w3, [sp, #1244]
    c7b4:	mov	x2, x0
    c7b8:	ldp	x0, x1, [sp, #216]
    c7bc:	bl	9c64 <__ubsan_default_options@@Base+0x600>
    c7c0:	and	w0, w0, #0xff
    c7c4:	cmp	w0, #0x0
    c7c8:	b.ne	c92c <__ubsan_handle_function_type_mismatch_abort@@Base+0x290>  // b.any
    c7cc:	add	x0, sp, #0xe8
    c7d0:	ldp	x1, x2, [sp, #216]
    c7d4:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    c7d8:	add	x2, sp, #0x40
    c7dc:	mov	x3, x19
    c7e0:	ldp	x0, x1, [x3]
    c7e4:	stp	x0, x1, [x2]
    c7e8:	ldr	x0, [x3, #16]
    c7ec:	str	x0, [x2, #16]
    c7f0:	add	x0, sp, #0x10
    c7f4:	add	x1, sp, #0xe8
    c7f8:	ldp	x2, x3, [x1]
    c7fc:	stp	x2, x3, [x0]
    c800:	ldp	x2, x3, [x1, #16]
    c804:	stp	x2, x3, [x0, #16]
    c808:	ldr	x1, [x1, #32]
    c80c:	str	x1, [x0, #32]
    c810:	add	x2, sp, #0x10
    c814:	add	x1, sp, #0x40
    c818:	add	x0, sp, #0x88
    c81c:	ldr	w3, [sp, #1244]
    c820:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    c824:	add	x0, sp, #0x2c8
    c828:	ldp	x1, x2, [sp, #216]
    c82c:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    c830:	add	x0, sp, #0x10
    c834:	add	x1, sp, #0x2c8
    c838:	ldp	x2, x3, [x1]
    c83c:	stp	x2, x3, [x0]
    c840:	ldp	x2, x3, [x1, #16]
    c844:	stp	x2, x3, [x0, #16]
    c848:	ldr	x1, [x1, #32]
    c84c:	str	x1, [x0, #32]
    c850:	add	x1, sp, #0x10
    c854:	add	x5, sp, #0x110
    c858:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    c85c:	add	x4, x0, #0x9f8
    c860:	ldr	w3, [sp, #1244]
    c864:	mov	w2, #0x0                   	// #0
    c868:	mov	x0, x5
    c86c:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    c870:	add	x0, sp, #0x110
    c874:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    c878:	ldr	x0, [sp, #120]
    c87c:	bl	8a64 <__asan_backtrace_open@plt+0x1df4>
    c880:	and	w0, w0, #0xff
    c884:	eor	w0, w0, #0x1
    c888:	and	w0, w0, #0xff
    c88c:	cmp	w0, #0x0
    c890:	b.eq	c920 <__ubsan_handle_function_type_mismatch_abort@@Base+0x284>  // b.none
    c894:	ldr	x0, [sp, #120]
    c898:	add	x3, sp, #0x4a0
    c89c:	ldp	x1, x2, [x0]
    c8a0:	mov	x0, x3
    c8a4:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    c8a8:	add	x0, sp, #0x10
    c8ac:	add	x1, sp, #0x4a0
    c8b0:	ldp	x2, x3, [x1]
    c8b4:	stp	x2, x3, [x0]
    c8b8:	ldp	x2, x3, [x1, #16]
    c8bc:	stp	x2, x3, [x0, #16]
    c8c0:	ldr	x1, [x1, #32]
    c8c4:	str	x1, [x0, #32]
    c8c8:	add	x1, sp, #0x10
    c8cc:	add	x5, sp, #0x2f0
    c8d0:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    c8d4:	add	x4, x0, #0xa40
    c8d8:	ldr	w3, [sp, #1244]
    c8dc:	mov	w2, #0x1                   	// #1
    c8e0:	mov	x0, x5
    c8e4:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    c8e8:	ldrb	w0, [sp, #111]
    c8ec:	cmp	w0, #0x0
    c8f0:	b.eq	c900 <__ubsan_handle_function_type_mismatch_abort@@Base+0x264>  // b.none
    c8f4:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    c8f8:	add	x0, x0, #0xa58
    c8fc:	b	c908 <__ubsan_handle_function_type_mismatch_abort@@Base+0x26c>
    c900:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    c904:	add	x0, x0, #0xa78
    c908:	add	x2, sp, #0x2f0
    c90c:	mov	x1, x0
    c910:	mov	x0, x2
    c914:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    c918:	add	x0, sp, #0x2f0
    c91c:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    c920:	add	x0, sp, #0x88
    c924:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    c928:	b	c930 <__ubsan_handle_function_type_mismatch_abort@@Base+0x294>
    c92c:	nop
    c930:	ldp	x19, x30, [sp]
    c934:	add	sp, sp, #0x4e0
    c938:	ret

000000000000c93c <__ubsan_handle_nonnull_return_v1@@Base>:
    c93c:	stp	x29, x30, [sp, #-112]!
    c940:	mov	x29, sp
    c944:	mov	x2, x30
    c948:	str	x0, [x29, #56]
    c94c:	str	x1, [x29, #48]
    c950:	mov	x0, x29
    c954:	str	x0, [x29, #104]
    c958:	mov	x0, x2
    c95c:	str	x0, [x29, #96]
    c960:	stp	xzr, xzr, [x29, #72]
    c964:	str	xzr, [x29, #88]
    c968:	ldr	x0, [x29, #96]
    c96c:	str	x0, [x29, #80]
    c970:	ldr	x0, [x29, #104]
    c974:	str	x0, [x29, #88]
    c978:	add	x2, x29, #0x10
    c97c:	add	x3, x29, #0x48
    c980:	ldp	x0, x1, [x3]
    c984:	stp	x0, x1, [x2]
    c988:	ldr	x0, [x3, #16]
    c98c:	str	x0, [x2, #16]
    c990:	add	x0, x29, #0x10
    c994:	mov	w3, #0x1                   	// #1
    c998:	mov	x2, x0
    c99c:	ldr	x1, [x29, #48]
    c9a0:	ldr	x0, [x29, #56]
    c9a4:	bl	c710 <__ubsan_handle_function_type_mismatch_abort@@Base+0x74>
    c9a8:	nop
    c9ac:	ldp	x29, x30, [sp], #112
    c9b0:	ret

000000000000c9b4 <__ubsan_handle_nonnull_return_v1_abort@@Base>:
    c9b4:	stp	x29, x30, [sp, #-112]!
    c9b8:	mov	x29, sp
    c9bc:	mov	x2, x30
    c9c0:	str	x0, [x29, #56]
    c9c4:	str	x1, [x29, #48]
    c9c8:	mov	x0, x29
    c9cc:	str	x0, [x29, #104]
    c9d0:	mov	x0, x2
    c9d4:	str	x0, [x29, #96]
    c9d8:	stp	xzr, xzr, [x29, #72]
    c9dc:	str	xzr, [x29, #88]
    c9e0:	mov	w0, #0x1                   	// #1
    c9e4:	strb	w0, [x29, #72]
    c9e8:	ldr	x0, [x29, #96]
    c9ec:	str	x0, [x29, #80]
    c9f0:	ldr	x0, [x29, #104]
    c9f4:	str	x0, [x29, #88]
    c9f8:	add	x2, x29, #0x10
    c9fc:	add	x3, x29, #0x48
    ca00:	ldp	x0, x1, [x3]
    ca04:	stp	x0, x1, [x2]
    ca08:	ldr	x0, [x3, #16]
    ca0c:	str	x0, [x2, #16]
    ca10:	add	x0, x29, #0x10
    ca14:	mov	w3, #0x1                   	// #1
    ca18:	mov	x2, x0
    ca1c:	ldr	x1, [x29, #48]
    ca20:	ldr	x0, [x29, #56]
    ca24:	bl	c710 <__ubsan_handle_function_type_mismatch_abort@@Base+0x74>
    ca28:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>

000000000000ca2c <__ubsan_handle_nullability_return_v1@@Base>:
    ca2c:	stp	x29, x30, [sp, #-112]!
    ca30:	mov	x29, sp
    ca34:	mov	x2, x30
    ca38:	str	x0, [x29, #56]
    ca3c:	str	x1, [x29, #48]
    ca40:	mov	x0, x29
    ca44:	str	x0, [x29, #104]
    ca48:	mov	x0, x2
    ca4c:	str	x0, [x29, #96]
    ca50:	stp	xzr, xzr, [x29, #72]
    ca54:	str	xzr, [x29, #88]
    ca58:	ldr	x0, [x29, #96]
    ca5c:	str	x0, [x29, #80]
    ca60:	ldr	x0, [x29, #104]
    ca64:	str	x0, [x29, #88]
    ca68:	add	x2, x29, #0x10
    ca6c:	add	x3, x29, #0x48
    ca70:	ldp	x0, x1, [x3]
    ca74:	stp	x0, x1, [x2]
    ca78:	ldr	x0, [x3, #16]
    ca7c:	str	x0, [x2, #16]
    ca80:	add	x0, x29, #0x10
    ca84:	mov	w3, #0x0                   	// #0
    ca88:	mov	x2, x0
    ca8c:	ldr	x1, [x29, #48]
    ca90:	ldr	x0, [x29, #56]
    ca94:	bl	c710 <__ubsan_handle_function_type_mismatch_abort@@Base+0x74>
    ca98:	nop
    ca9c:	ldp	x29, x30, [sp], #112
    caa0:	ret

000000000000caa4 <__ubsan_handle_nullability_return_v1_abort@@Base>:
    caa4:	stp	x29, x30, [sp, #-112]!
    caa8:	mov	x29, sp
    caac:	mov	x2, x30
    cab0:	str	x0, [x29, #56]
    cab4:	str	x1, [x29, #48]
    cab8:	mov	x0, x29
    cabc:	str	x0, [x29, #104]
    cac0:	mov	x0, x2
    cac4:	str	x0, [x29, #96]
    cac8:	stp	xzr, xzr, [x29, #72]
    cacc:	str	xzr, [x29, #88]
    cad0:	mov	w0, #0x1                   	// #1
    cad4:	strb	w0, [x29, #72]
    cad8:	ldr	x0, [x29, #96]
    cadc:	str	x0, [x29, #80]
    cae0:	ldr	x0, [x29, #104]
    cae4:	str	x0, [x29, #88]
    cae8:	add	x2, x29, #0x10
    caec:	add	x3, x29, #0x48
    caf0:	ldp	x0, x1, [x3]
    caf4:	stp	x0, x1, [x2]
    caf8:	ldr	x0, [x3, #16]
    cafc:	str	x0, [x2, #16]
    cb00:	add	x0, x29, #0x10
    cb04:	mov	w3, #0x0                   	// #0
    cb08:	mov	x2, x0
    cb0c:	ldr	x1, [x29, #48]
    cb10:	ldr	x0, [x29, #56]
    cb14:	bl	c710 <__ubsan_handle_function_type_mismatch_abort@@Base+0x74>
    cb18:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    cb1c:	sub	sp, sp, #0x4c0
    cb20:	stp	x19, x30, [sp]
    cb24:	str	x0, [sp, #104]
    cb28:	mov	x19, x1
    cb2c:	strb	w2, [sp, #103]
    cb30:	ldr	x0, [sp, #104]
    cb34:	bl	dad0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x36c>
    cb38:	stp	x0, x1, [sp, #200]
    cb3c:	mov	w0, #0x17                  	// #23
    cb40:	str	w0, [sp, #1212]
    cb44:	add	x2, sp, #0x40
    cb48:	mov	x3, x19
    cb4c:	ldp	x0, x1, [x3]
    cb50:	stp	x0, x1, [x2]
    cb54:	ldr	x0, [x3, #16]
    cb58:	str	x0, [x2, #16]
    cb5c:	add	x0, sp, #0x40
    cb60:	ldr	w3, [sp, #1212]
    cb64:	mov	x2, x0
    cb68:	ldp	x0, x1, [sp, #200]
    cb6c:	bl	9c64 <__ubsan_default_options@@Base+0x600>
    cb70:	and	w0, w0, #0xff
    cb74:	cmp	w0, #0x0
    cb78:	b.ne	ccf4 <__ubsan_handle_nullability_return_v1_abort@@Base+0x250>  // b.any
    cb7c:	add	x0, sp, #0xd8
    cb80:	ldp	x1, x2, [sp, #200]
    cb84:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    cb88:	add	x2, sp, #0x40
    cb8c:	mov	x3, x19
    cb90:	ldp	x0, x1, [x3]
    cb94:	stp	x0, x1, [x2]
    cb98:	ldr	x0, [x3, #16]
    cb9c:	str	x0, [x2, #16]
    cba0:	add	x0, sp, #0x10
    cba4:	add	x1, sp, #0xd8
    cba8:	ldp	x2, x3, [x1]
    cbac:	stp	x2, x3, [x0]
    cbb0:	ldp	x2, x3, [x1, #16]
    cbb4:	stp	x2, x3, [x0, #16]
    cbb8:	ldr	x1, [x1, #32]
    cbbc:	str	x1, [x0, #32]
    cbc0:	add	x2, sp, #0x10
    cbc4:	add	x1, sp, #0x40
    cbc8:	add	x0, sp, #0x78
    cbcc:	ldr	w3, [sp, #1212]
    cbd0:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    cbd4:	add	x0, sp, #0x2b8
    cbd8:	ldp	x1, x2, [sp, #200]
    cbdc:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    cbe0:	add	x0, sp, #0x10
    cbe4:	add	x1, sp, #0x2b8
    cbe8:	ldp	x2, x3, [x1]
    cbec:	stp	x2, x3, [x0]
    cbf0:	ldp	x2, x3, [x1, #16]
    cbf4:	stp	x2, x3, [x0, #16]
    cbf8:	ldr	x1, [x1, #32]
    cbfc:	str	x1, [x0, #32]
    cc00:	add	x1, sp, #0x10
    cc04:	add	x5, sp, #0x100
    cc08:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    cc0c:	add	x4, x0, #0xa98
    cc10:	ldr	w3, [sp, #1212]
    cc14:	mov	w2, #0x0                   	// #0
    cc18:	mov	x0, x5
    cc1c:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    cc20:	ldr	x0, [sp, #104]
    cc24:	ldr	w0, [x0, #32]
    cc28:	sxtw	x1, w0
    cc2c:	add	x0, sp, #0x100
    cc30:	bl	dfa0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x83c>
    cc34:	add	x0, sp, #0x100
    cc38:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    cc3c:	ldr	x0, [sp, #104]
    cc40:	add	x0, x0, #0x10
    cc44:	bl	8a64 <__asan_backtrace_open@plt+0x1df4>
    cc48:	and	w0, w0, #0xff
    cc4c:	eor	w0, w0, #0x1
    cc50:	and	w0, w0, #0xff
    cc54:	cmp	w0, #0x0
    cc58:	b.eq	cce8 <__ubsan_handle_nullability_return_v1_abort@@Base+0x244>  // b.none
    cc5c:	ldr	x0, [sp, #104]
    cc60:	add	x3, sp, #0x490
    cc64:	ldp	x1, x2, [x0, #16]
    cc68:	mov	x0, x3
    cc6c:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    cc70:	add	x0, sp, #0x10
    cc74:	add	x1, sp, #0x490
    cc78:	ldp	x2, x3, [x1]
    cc7c:	stp	x2, x3, [x0]
    cc80:	ldp	x2, x3, [x1, #16]
    cc84:	stp	x2, x3, [x0, #16]
    cc88:	ldr	x1, [x1, #32]
    cc8c:	str	x1, [x0, #32]
    cc90:	add	x1, sp, #0x10
    cc94:	add	x5, sp, #0x2e0
    cc98:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    cc9c:	add	x4, x0, #0xa40
    cca0:	ldr	w3, [sp, #1212]
    cca4:	mov	w2, #0x1                   	// #1
    cca8:	mov	x0, x5
    ccac:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    ccb0:	ldrb	w0, [sp, #103]
    ccb4:	cmp	w0, #0x0
    ccb8:	b.eq	ccc8 <__ubsan_handle_nullability_return_v1_abort@@Base+0x224>  // b.none
    ccbc:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    ccc0:	add	x0, x0, #0xae0
    ccc4:	b	ccd0 <__ubsan_handle_nullability_return_v1_abort@@Base+0x22c>
    ccc8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    cccc:	add	x0, x0, #0xaf8
    ccd0:	add	x2, sp, #0x2e0
    ccd4:	mov	x1, x0
    ccd8:	mov	x0, x2
    ccdc:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    cce0:	add	x0, sp, #0x2e0
    cce4:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    cce8:	add	x0, sp, #0x78
    ccec:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    ccf0:	b	ccf8 <__ubsan_handle_nullability_return_v1_abort@@Base+0x254>
    ccf4:	nop
    ccf8:	ldp	x19, x30, [sp]
    ccfc:	add	sp, sp, #0x4c0
    cd00:	ret

000000000000cd04 <__ubsan_handle_nonnull_arg@@Base>:
    cd04:	stp	x29, x30, [sp, #-112]!
    cd08:	mov	x29, sp
    cd0c:	mov	x1, x30
    cd10:	str	x0, [x29, #56]
    cd14:	mov	x0, x29
    cd18:	str	x0, [x29, #104]
    cd1c:	mov	x0, x1
    cd20:	str	x0, [x29, #96]
    cd24:	stp	xzr, xzr, [x29, #72]
    cd28:	str	xzr, [x29, #88]
    cd2c:	ldr	x0, [x29, #96]
    cd30:	str	x0, [x29, #80]
    cd34:	ldr	x0, [x29, #104]
    cd38:	str	x0, [x29, #88]
    cd3c:	add	x2, x29, #0x10
    cd40:	add	x3, x29, #0x48
    cd44:	ldp	x0, x1, [x3]
    cd48:	stp	x0, x1, [x2]
    cd4c:	ldr	x0, [x3, #16]
    cd50:	str	x0, [x2, #16]
    cd54:	add	x0, x29, #0x10
    cd58:	mov	w2, #0x1                   	// #1
    cd5c:	mov	x1, x0
    cd60:	ldr	x0, [x29, #56]
    cd64:	bl	cb1c <__ubsan_handle_nullability_return_v1_abort@@Base+0x78>
    cd68:	nop
    cd6c:	ldp	x29, x30, [sp], #112
    cd70:	ret

000000000000cd74 <__ubsan_handle_nonnull_arg_abort@@Base>:
    cd74:	stp	x29, x30, [sp, #-112]!
    cd78:	mov	x29, sp
    cd7c:	mov	x1, x30
    cd80:	str	x0, [x29, #56]
    cd84:	mov	x0, x29
    cd88:	str	x0, [x29, #104]
    cd8c:	mov	x0, x1
    cd90:	str	x0, [x29, #96]
    cd94:	stp	xzr, xzr, [x29, #72]
    cd98:	str	xzr, [x29, #88]
    cd9c:	mov	w0, #0x1                   	// #1
    cda0:	strb	w0, [x29, #72]
    cda4:	ldr	x0, [x29, #96]
    cda8:	str	x0, [x29, #80]
    cdac:	ldr	x0, [x29, #104]
    cdb0:	str	x0, [x29, #88]
    cdb4:	add	x2, x29, #0x10
    cdb8:	add	x3, x29, #0x48
    cdbc:	ldp	x0, x1, [x3]
    cdc0:	stp	x0, x1, [x2]
    cdc4:	ldr	x0, [x3, #16]
    cdc8:	str	x0, [x2, #16]
    cdcc:	add	x0, x29, #0x10
    cdd0:	mov	w2, #0x1                   	// #1
    cdd4:	mov	x1, x0
    cdd8:	ldr	x0, [x29, #56]
    cddc:	bl	cb1c <__ubsan_handle_nullability_return_v1_abort@@Base+0x78>
    cde0:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>

000000000000cde4 <__ubsan_handle_nullability_arg@@Base>:
    cde4:	stp	x29, x30, [sp, #-112]!
    cde8:	mov	x29, sp
    cdec:	mov	x1, x30
    cdf0:	str	x0, [x29, #56]
    cdf4:	mov	x0, x29
    cdf8:	str	x0, [x29, #104]
    cdfc:	mov	x0, x1
    ce00:	str	x0, [x29, #96]
    ce04:	stp	xzr, xzr, [x29, #72]
    ce08:	str	xzr, [x29, #88]
    ce0c:	ldr	x0, [x29, #96]
    ce10:	str	x0, [x29, #80]
    ce14:	ldr	x0, [x29, #104]
    ce18:	str	x0, [x29, #88]
    ce1c:	add	x2, x29, #0x10
    ce20:	add	x3, x29, #0x48
    ce24:	ldp	x0, x1, [x3]
    ce28:	stp	x0, x1, [x2]
    ce2c:	ldr	x0, [x3, #16]
    ce30:	str	x0, [x2, #16]
    ce34:	add	x0, x29, #0x10
    ce38:	mov	w2, #0x0                   	// #0
    ce3c:	mov	x1, x0
    ce40:	ldr	x0, [x29, #56]
    ce44:	bl	cb1c <__ubsan_handle_nullability_return_v1_abort@@Base+0x78>
    ce48:	nop
    ce4c:	ldp	x29, x30, [sp], #112
    ce50:	ret

000000000000ce54 <__ubsan_handle_nullability_arg_abort@@Base>:
    ce54:	stp	x29, x30, [sp, #-112]!
    ce58:	mov	x29, sp
    ce5c:	mov	x1, x30
    ce60:	str	x0, [x29, #56]
    ce64:	mov	x0, x29
    ce68:	str	x0, [x29, #104]
    ce6c:	mov	x0, x1
    ce70:	str	x0, [x29, #96]
    ce74:	stp	xzr, xzr, [x29, #72]
    ce78:	str	xzr, [x29, #88]
    ce7c:	mov	w0, #0x1                   	// #1
    ce80:	strb	w0, [x29, #72]
    ce84:	ldr	x0, [x29, #96]
    ce88:	str	x0, [x29, #80]
    ce8c:	ldr	x0, [x29, #104]
    ce90:	str	x0, [x29, #88]
    ce94:	add	x2, x29, #0x10
    ce98:	add	x3, x29, #0x48
    ce9c:	ldp	x0, x1, [x3]
    cea0:	stp	x0, x1, [x2]
    cea4:	ldr	x0, [x3, #16]
    cea8:	str	x0, [x2, #16]
    ceac:	add	x0, x29, #0x10
    ceb0:	mov	w2, #0x0                   	// #0
    ceb4:	mov	x1, x0
    ceb8:	ldr	x0, [x29, #56]
    cebc:	bl	cb1c <__ubsan_handle_nullability_return_v1_abort@@Base+0x78>
    cec0:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    cec4:	sub	sp, sp, #0x6b0
    cec8:	stp	x19, x30, [sp]
    cecc:	str	x0, [sp, #120]
    ced0:	str	x1, [sp, #112]
    ced4:	str	x2, [sp, #104]
    ced8:	mov	x19, x3
    cedc:	ldr	x0, [sp, #120]
    cee0:	bl	dad0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x36c>
    cee4:	stp	x0, x1, [sp, #216]
    cee8:	mov	w0, #0x2                   	// #2
    ceec:	str	w0, [sp, #1708]
    cef0:	add	x2, sp, #0x40
    cef4:	mov	x3, x19
    cef8:	ldp	x0, x1, [x3]
    cefc:	stp	x0, x1, [x2]
    cf00:	ldr	x0, [x3, #16]
    cf04:	str	x0, [x2, #16]
    cf08:	add	x0, sp, #0x40
    cf0c:	ldr	w3, [sp, #1708]
    cf10:	mov	x2, x0
    cf14:	ldp	x0, x1, [sp, #216]
    cf18:	bl	9c64 <__ubsan_default_options@@Base+0x600>
    cf1c:	and	w0, w0, #0xff
    cf20:	cmp	w0, #0x0
    cf24:	b.ne	d12c <__ubsan_handle_nullability_arg_abort@@Base+0x2d8>  // b.any
    cf28:	add	x0, sp, #0xe8
    cf2c:	ldp	x1, x2, [sp, #216]
    cf30:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    cf34:	add	x2, sp, #0x40
    cf38:	mov	x3, x19
    cf3c:	ldp	x0, x1, [x3]
    cf40:	stp	x0, x1, [x2]
    cf44:	ldr	x0, [x3, #16]
    cf48:	str	x0, [x2, #16]
    cf4c:	add	x0, sp, #0x10
    cf50:	add	x1, sp, #0xe8
    cf54:	ldp	x2, x3, [x1]
    cf58:	stp	x2, x3, [x0]
    cf5c:	ldp	x2, x3, [x1, #16]
    cf60:	stp	x2, x3, [x0, #16]
    cf64:	ldr	x1, [x1, #32]
    cf68:	str	x1, [x0, #32]
    cf6c:	add	x2, sp, #0x10
    cf70:	add	x1, sp, #0x40
    cf74:	add	x0, sp, #0x88
    cf78:	ldr	w3, [sp, #1708]
    cf7c:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    cf80:	ldr	x0, [sp, #112]
    cf84:	mvn	x0, x0
    cf88:	lsr	x0, x0, #63
    cf8c:	and	w0, w0, #0xff
    cf90:	mov	w1, w0
    cf94:	ldr	x0, [sp, #104]
    cf98:	mvn	x0, x0
    cf9c:	lsr	x0, x0, #63
    cfa0:	and	w0, w0, #0xff
    cfa4:	cmp	w1, w0
    cfa8:	b.ne	d0ac <__ubsan_handle_nullability_arg_abort@@Base+0x258>  // b.any
    cfac:	ldr	x1, [sp, #112]
    cfb0:	ldr	x0, [sp, #104]
    cfb4:	cmp	x1, x0
    cfb8:	b.ls	d034 <__ubsan_handle_nullability_arg_abort@@Base+0x1e0>  // b.plast
    cfbc:	add	x0, sp, #0x2c8
    cfc0:	ldp	x1, x2, [sp, #216]
    cfc4:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    cfc8:	add	x0, sp, #0x10
    cfcc:	add	x1, sp, #0x2c8
    cfd0:	ldp	x2, x3, [x1]
    cfd4:	stp	x2, x3, [x0]
    cfd8:	ldp	x2, x3, [x1, #16]
    cfdc:	stp	x2, x3, [x0, #16]
    cfe0:	ldr	x1, [x1, #32]
    cfe4:	str	x1, [x0, #32]
    cfe8:	add	x1, sp, #0x10
    cfec:	add	x5, sp, #0x110
    cff0:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    cff4:	add	x4, x0, #0xb18
    cff8:	ldr	w3, [sp, #1708]
    cffc:	mov	w2, #0x0                   	// #0
    d000:	mov	x0, x5
    d004:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    d008:	ldr	x1, [sp, #112]
    d00c:	add	x0, sp, #0x110
    d010:	bl	dff0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x88c>
    d014:	mov	x2, x0
    d018:	ldr	x0, [sp, #104]
    d01c:	mov	x1, x0
    d020:	mov	x0, x2
    d024:	bl	dff0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x88c>
    d028:	add	x0, sp, #0x110
    d02c:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    d030:	b	d120 <__ubsan_handle_nullability_arg_abort@@Base+0x2cc>
    d034:	add	x0, sp, #0x4a8
    d038:	ldp	x1, x2, [sp, #216]
    d03c:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    d040:	add	x0, sp, #0x10
    d044:	add	x1, sp, #0x4a8
    d048:	ldp	x2, x3, [x1]
    d04c:	stp	x2, x3, [x0]
    d050:	ldp	x2, x3, [x1, #16]
    d054:	stp	x2, x3, [x0, #16]
    d058:	ldr	x1, [x1, #32]
    d05c:	str	x1, [x0, #32]
    d060:	add	x1, sp, #0x10
    d064:	add	x5, sp, #0x2f0
    d068:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    d06c:	add	x4, x0, #0xb50
    d070:	ldr	w3, [sp, #1708]
    d074:	mov	w2, #0x0                   	// #0
    d078:	mov	x0, x5
    d07c:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    d080:	ldr	x1, [sp, #112]
    d084:	add	x0, sp, #0x2f0
    d088:	bl	dff0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x88c>
    d08c:	mov	x2, x0
    d090:	ldr	x0, [sp, #104]
    d094:	mov	x1, x0
    d098:	mov	x0, x2
    d09c:	bl	dff0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x88c>
    d0a0:	add	x0, sp, #0x2f0
    d0a4:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    d0a8:	b	d120 <__ubsan_handle_nullability_arg_abort@@Base+0x2cc>
    d0ac:	add	x0, sp, #0x680
    d0b0:	ldp	x1, x2, [sp, #216]
    d0b4:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    d0b8:	add	x0, sp, #0x10
    d0bc:	add	x1, sp, #0x680
    d0c0:	ldp	x2, x3, [x1]
    d0c4:	stp	x2, x3, [x0]
    d0c8:	ldp	x2, x3, [x1, #16]
    d0cc:	stp	x2, x3, [x0, #16]
    d0d0:	ldr	x1, [x1, #32]
    d0d4:	str	x1, [x0, #32]
    d0d8:	add	x1, sp, #0x10
    d0dc:	add	x5, sp, #0x4d0
    d0e0:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    d0e4:	add	x4, x0, #0xb88
    d0e8:	ldr	w3, [sp, #1708]
    d0ec:	mov	w2, #0x0                   	// #0
    d0f0:	mov	x0, x5
    d0f4:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    d0f8:	ldr	x1, [sp, #112]
    d0fc:	add	x0, sp, #0x4d0
    d100:	bl	dff0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x88c>
    d104:	mov	x2, x0
    d108:	ldr	x0, [sp, #104]
    d10c:	mov	x1, x0
    d110:	mov	x0, x2
    d114:	bl	dff0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x88c>
    d118:	add	x0, sp, #0x4d0
    d11c:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    d120:	add	x0, sp, #0x88
    d124:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    d128:	b	d130 <__ubsan_handle_nullability_arg_abort@@Base+0x2dc>
    d12c:	nop
    d130:	ldp	x19, x30, [sp]
    d134:	add	sp, sp, #0x6b0
    d138:	ret

000000000000d13c <__ubsan_handle_pointer_overflow@@Base>:
    d13c:	stp	x29, x30, [sp, #-128]!
    d140:	mov	x29, sp
    d144:	mov	x3, x30
    d148:	str	x0, [x29, #72]
    d14c:	str	x1, [x29, #64]
    d150:	str	x2, [x29, #56]
    d154:	mov	x0, x29
    d158:	str	x0, [x29, #120]
    d15c:	mov	x0, x3
    d160:	str	x0, [x29, #112]
    d164:	stp	xzr, xzr, [x29, #88]
    d168:	str	xzr, [x29, #104]
    d16c:	ldr	x0, [x29, #112]
    d170:	str	x0, [x29, #96]
    d174:	ldr	x0, [x29, #120]
    d178:	str	x0, [x29, #104]
    d17c:	add	x2, x29, #0x10
    d180:	add	x3, x29, #0x58
    d184:	ldp	x0, x1, [x3]
    d188:	stp	x0, x1, [x2]
    d18c:	ldr	x0, [x3, #16]
    d190:	str	x0, [x2, #16]
    d194:	add	x0, x29, #0x10
    d198:	mov	x3, x0
    d19c:	ldr	x2, [x29, #56]
    d1a0:	ldr	x1, [x29, #64]
    d1a4:	ldr	x0, [x29, #72]
    d1a8:	bl	cec4 <__ubsan_handle_nullability_arg_abort@@Base+0x70>
    d1ac:	nop
    d1b0:	ldp	x29, x30, [sp], #128
    d1b4:	ret

000000000000d1b8 <__ubsan_handle_pointer_overflow_abort@@Base>:
    d1b8:	stp	x29, x30, [sp, #-128]!
    d1bc:	mov	x29, sp
    d1c0:	mov	x3, x30
    d1c4:	str	x0, [x29, #72]
    d1c8:	str	x1, [x29, #64]
    d1cc:	str	x2, [x29, #56]
    d1d0:	mov	x0, x29
    d1d4:	str	x0, [x29, #120]
    d1d8:	mov	x0, x3
    d1dc:	str	x0, [x29, #112]
    d1e0:	stp	xzr, xzr, [x29, #88]
    d1e4:	str	xzr, [x29, #104]
    d1e8:	mov	w0, #0x1                   	// #1
    d1ec:	strb	w0, [x29, #88]
    d1f0:	ldr	x0, [x29, #112]
    d1f4:	str	x0, [x29, #96]
    d1f8:	ldr	x0, [x29, #120]
    d1fc:	str	x0, [x29, #104]
    d200:	add	x2, x29, #0x10
    d204:	add	x3, x29, #0x58
    d208:	ldp	x0, x1, [x3]
    d20c:	stp	x0, x1, [x2]
    d210:	ldr	x0, [x3, #16]
    d214:	str	x0, [x2, #16]
    d218:	add	x0, x29, #0x10
    d21c:	mov	x3, x0
    d220:	ldr	x2, [x29, #56]
    d224:	ldr	x1, [x29, #64]
    d228:	ldr	x0, [x29, #72]
    d22c:	bl	cec4 <__ubsan_handle_nullability_arg_abort@@Base+0x70>
    d230:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    d234:	sub	sp, sp, #0x6c0
    d238:	stp	x19, x30, [sp]
    d23c:	str	x0, [sp, #104]
    d240:	str	x1, [sp, #96]
    d244:	mov	x19, x2
    d248:	ldr	x0, [sp, #104]
    d24c:	ldrb	w0, [x0]
    d250:	cmp	w0, #0x4
    d254:	b.eq	d26c <__ubsan_handle_pointer_overflow_abort@@Base+0xb4>  // b.none
    d258:	ldr	x0, [sp, #104]
    d25c:	ldrb	w0, [x0]
    d260:	cmp	w0, #0x5
    d264:	b.eq	d26c <__ubsan_handle_pointer_overflow_abort@@Base+0xb4>  // b.none
    d268:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    d26c:	ldr	x0, [sp, #104]
    d270:	add	x0, x0, #0x8
    d274:	bl	dad0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x36c>
    d278:	stp	x0, x1, [sp, #200]
    d27c:	mov	w0, #0x19                  	// #25
    d280:	str	w0, [sp, #1700]
    d284:	add	x2, sp, #0x40
    d288:	mov	x3, x19
    d28c:	ldp	x0, x1, [x3]
    d290:	stp	x0, x1, [x2]
    d294:	ldr	x0, [x3, #16]
    d298:	str	x0, [x2, #16]
    d29c:	add	x0, sp, #0x40
    d2a0:	ldr	w3, [sp, #1700]
    d2a4:	mov	x2, x0
    d2a8:	ldp	x0, x1, [sp, #200]
    d2ac:	bl	9c64 <__ubsan_default_options@@Base+0x600>
    d2b0:	and	w0, w0, #0xff
    d2b4:	cmp	w0, #0x0
    d2b8:	b.ne	d53c <__ubsan_handle_pointer_overflow_abort@@Base+0x384>  // b.any
    d2bc:	add	x0, sp, #0xd8
    d2c0:	ldp	x1, x2, [sp, #200]
    d2c4:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    d2c8:	add	x2, sp, #0x40
    d2cc:	mov	x3, x19
    d2d0:	ldp	x0, x1, [x3]
    d2d4:	stp	x0, x1, [x2]
    d2d8:	ldr	x0, [x3, #16]
    d2dc:	str	x0, [x2, #16]
    d2e0:	add	x0, sp, #0x10
    d2e4:	add	x1, sp, #0xd8
    d2e8:	ldp	x2, x3, [x1]
    d2ec:	stp	x2, x3, [x0]
    d2f0:	ldp	x2, x3, [x1, #16]
    d2f4:	stp	x2, x3, [x0, #16]
    d2f8:	ldr	x1, [x1, #32]
    d2fc:	str	x1, [x0, #32]
    d300:	add	x2, sp, #0x10
    d304:	add	x1, sp, #0x40
    d308:	add	x0, sp, #0x78
    d30c:	ldr	w3, [sp, #1700]
    d310:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    d314:	ldr	x0, [sp, #104]
    d318:	ldrb	w0, [x0]
    d31c:	cmp	w0, #0x5
    d320:	b.ne	d330 <__ubsan_handle_pointer_overflow_abort@@Base+0x178>  // b.any
    d324:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    d328:	add	x0, x0, #0xbc0
    d32c:	b	d338 <__ubsan_handle_pointer_overflow_abort@@Base+0x180>
    d330:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    d334:	add	x0, x0, #0xbf0
    d338:	str	x0, [sp, #1688]
    d33c:	add	x0, sp, #0x2b8
    d340:	ldp	x1, x2, [sp, #200]
    d344:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    d348:	add	x0, sp, #0x10
    d34c:	add	x1, sp, #0x2b8
    d350:	ldp	x2, x3, [x1]
    d354:	stp	x2, x3, [x0]
    d358:	ldp	x2, x3, [x1, #16]
    d35c:	stp	x2, x3, [x0, #16]
    d360:	ldr	x1, [x1, #32]
    d364:	str	x1, [x0, #32]
    d368:	add	x1, sp, #0x10
    d36c:	add	x5, sp, #0x100
    d370:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    d374:	add	x4, x0, #0xc08
    d378:	ldr	w3, [sp, #1700]
    d37c:	mov	w2, #0x0                   	// #0
    d380:	mov	x0, x5
    d384:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    d388:	ldr	x0, [sp, #104]
    d38c:	ldr	x1, [x0, #24]
    d390:	add	x0, sp, #0x100
    d394:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    d398:	ldr	x1, [sp, #1688]
    d39c:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    d3a0:	add	x0, sp, #0x100
    d3a4:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    d3a8:	ldr	x0, [sp, #96]
    d3ac:	bl	7410 <__asan_backtrace_open@plt+0x7a0>
    d3b0:	mov	x1, x0
    d3b4:	add	x0, sp, #0x70
    d3b8:	bl	8cd8 <__asan_backtrace_open@plt+0x2068>
    d3bc:	add	x0, sp, #0x70
    d3c0:	bl	8d18 <__asan_backtrace_open@plt+0x20a8>
    d3c4:	ldr	x0, [x0, #40]
    d3c8:	str	x0, [sp, #1720]
    d3cc:	ldr	x0, [sp, #1720]
    d3d0:	cmp	x0, #0x0
    d3d4:	b.ne	d3e4 <__ubsan_handle_pointer_overflow_abort@@Base+0x22c>  // b.any
    d3d8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    d3dc:	add	x0, x0, #0x958
    d3e0:	str	x0, [sp, #1720]
    d3e4:	add	x1, sp, #0x70
    d3e8:	add	x0, sp, #0x498
    d3ec:	bl	ddc8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x664>
    d3f0:	add	x0, sp, #0x10
    d3f4:	add	x1, sp, #0x498
    d3f8:	ldp	x2, x3, [x1]
    d3fc:	stp	x2, x3, [x0]
    d400:	ldp	x2, x3, [x1, #16]
    d404:	stp	x2, x3, [x0, #16]
    d408:	ldr	x1, [x1, #32]
    d40c:	str	x1, [x0, #32]
    d410:	add	x1, sp, #0x10
    d414:	add	x5, sp, #0x2e0
    d418:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    d41c:	add	x4, x0, #0x9b0
    d420:	ldr	w3, [sp, #1700]
    d424:	mov	w2, #0x1                   	// #1
    d428:	mov	x0, x5
    d42c:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    d430:	add	x0, sp, #0x2e0
    d434:	ldr	x1, [sp, #1720]
    d438:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    d43c:	add	x0, sp, #0x2e0
    d440:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    d444:	add	x0, sp, #0x70
    d448:	bl	8d18 <__asan_backtrace_open@plt+0x20a8>
    d44c:	ldr	x0, [x0, #16]
    d450:	str	x0, [sp, #1712]
    d454:	ldr	x0, [sp, #1712]
    d458:	cmp	x0, #0x0
    d45c:	b.ne	d46c <__ubsan_handle_pointer_overflow_abort@@Base+0x2b4>  // b.any
    d460:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    d464:	add	x0, x0, #0x958
    d468:	str	x0, [sp, #1712]
    d46c:	bl	2e194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f0c>
    d470:	mov	x2, x0
    d474:	ldr	x0, [x19, #8]
    d478:	mov	x1, x0
    d47c:	mov	x0, x2
    d480:	bl	8c5c <__asan_backtrace_open@plt+0x1fec>
    d484:	str	x0, [sp, #1704]
    d488:	ldr	x0, [sp, #1704]
    d48c:	cmp	x0, #0x0
    d490:	b.ne	d4a0 <__ubsan_handle_pointer_overflow_abort@@Base+0x2e8>  // b.any
    d494:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    d498:	add	x0, x0, #0x958
    d49c:	str	x0, [sp, #1704]
    d4a0:	ldr	x1, [sp, #1712]
    d4a4:	ldr	x0, [sp, #1704]
    d4a8:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
    d4ac:	cmp	w0, #0x0
    d4b0:	cset	w0, ne  // ne = any
    d4b4:	and	w0, w0, #0xff
    d4b8:	cmp	w0, #0x0
    d4bc:	b.eq	d528 <__ubsan_handle_pointer_overflow_abort@@Base+0x370>  // b.none
    d4c0:	add	x0, sp, #0x670
    d4c4:	ldp	x1, x2, [sp, #200]
    d4c8:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    d4cc:	add	x0, sp, #0x10
    d4d0:	add	x1, sp, #0x670
    d4d4:	ldp	x2, x3, [x1]
    d4d8:	stp	x2, x3, [x0]
    d4dc:	ldp	x2, x3, [x1, #16]
    d4e0:	stp	x2, x3, [x0, #16]
    d4e4:	ldr	x1, [x1, #32]
    d4e8:	str	x1, [x0, #32]
    d4ec:	add	x1, sp, #0x10
    d4f0:	add	x5, sp, #0x4c0
    d4f4:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    d4f8:	add	x4, x0, #0xc48
    d4fc:	ldr	w3, [sp, #1700]
    d500:	mov	w2, #0x1                   	// #1
    d504:	mov	x0, x5
    d508:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    d50c:	add	x0, sp, #0x4c0
    d510:	ldr	x1, [sp, #1704]
    d514:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    d518:	ldr	x1, [sp, #1712]
    d51c:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    d520:	add	x0, sp, #0x4c0
    d524:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    d528:	add	x0, sp, #0x70
    d52c:	bl	8cfc <__asan_backtrace_open@plt+0x208c>
    d530:	add	x0, sp, #0x78
    d534:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    d538:	b	d540 <__ubsan_handle_pointer_overflow_abort@@Base+0x388>
    d53c:	nop
    d540:	ldp	x19, x30, [sp]
    d544:	add	sp, sp, #0x6c0
    d548:	ret

000000000000d54c <__ubsan_handle_cfi_bad_icall@@Base>:
    d54c:	stp	x29, x30, [sp, #-144]!
    d550:	mov	x29, sp
    d554:	mov	x2, x30
    d558:	str	x0, [x29, #56]
    d55c:	str	x1, [x29, #48]
    d560:	mov	x0, x29
    d564:	str	x0, [x29, #136]
    d568:	mov	x0, x2
    d56c:	str	x0, [x29, #128]
    d570:	stp	xzr, xzr, [x29, #104]
    d574:	str	xzr, [x29, #120]
    d578:	ldr	x0, [x29, #128]
    d57c:	str	x0, [x29, #112]
    d580:	ldr	x0, [x29, #136]
    d584:	str	x0, [x29, #120]
    d588:	stp	xzr, xzr, [x29, #72]
    d58c:	stp	xzr, xzr, [x29, #88]
    d590:	mov	w0, #0x4                   	// #4
    d594:	strb	w0, [x29, #72]
    d598:	ldr	x0, [x29, #56]
    d59c:	ldp	x0, x1, [x0]
    d5a0:	stp	x0, x1, [x29, #80]
    d5a4:	ldr	x0, [x29, #56]
    d5a8:	ldr	x0, [x0, #16]
    d5ac:	str	x0, [x29, #96]
    d5b0:	add	x2, x29, #0x10
    d5b4:	add	x3, x29, #0x68
    d5b8:	ldp	x0, x1, [x3]
    d5bc:	stp	x0, x1, [x2]
    d5c0:	ldr	x0, [x3, #16]
    d5c4:	str	x0, [x2, #16]
    d5c8:	add	x1, x29, #0x10
    d5cc:	add	x0, x29, #0x48
    d5d0:	mov	x2, x1
    d5d4:	ldr	x1, [x29, #48]
    d5d8:	bl	d234 <__ubsan_handle_pointer_overflow_abort@@Base+0x7c>
    d5dc:	nop
    d5e0:	ldp	x29, x30, [sp], #144
    d5e4:	ret

000000000000d5e8 <__ubsan_handle_cfi_bad_icall_abort@@Base>:
    d5e8:	stp	x29, x30, [sp, #-144]!
    d5ec:	mov	x29, sp
    d5f0:	mov	x2, x30
    d5f4:	str	x0, [x29, #56]
    d5f8:	str	x1, [x29, #48]
    d5fc:	mov	x0, x29
    d600:	str	x0, [x29, #136]
    d604:	mov	x0, x2
    d608:	str	x0, [x29, #128]
    d60c:	stp	xzr, xzr, [x29, #104]
    d610:	str	xzr, [x29, #120]
    d614:	mov	w0, #0x1                   	// #1
    d618:	strb	w0, [x29, #104]
    d61c:	ldr	x0, [x29, #128]
    d620:	str	x0, [x29, #112]
    d624:	ldr	x0, [x29, #136]
    d628:	str	x0, [x29, #120]
    d62c:	stp	xzr, xzr, [x29, #72]
    d630:	stp	xzr, xzr, [x29, #88]
    d634:	mov	w0, #0x4                   	// #4
    d638:	strb	w0, [x29, #72]
    d63c:	ldr	x0, [x29, #56]
    d640:	ldp	x0, x1, [x0]
    d644:	stp	x0, x1, [x29, #80]
    d648:	ldr	x0, [x29, #56]
    d64c:	ldr	x0, [x0, #16]
    d650:	str	x0, [x29, #96]
    d654:	add	x2, x29, #0x10
    d658:	add	x3, x29, #0x68
    d65c:	ldp	x0, x1, [x3]
    d660:	stp	x0, x1, [x2]
    d664:	ldr	x0, [x3, #16]
    d668:	str	x0, [x2, #16]
    d66c:	add	x1, x29, #0x10
    d670:	add	x0, x29, #0x48
    d674:	mov	x2, x1
    d678:	ldr	x1, [x29, #48]
    d67c:	bl	d234 <__ubsan_handle_pointer_overflow_abort@@Base+0x7c>
    d680:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>

000000000000d684 <__ubsan_handle_cfi_check_fail@@Base>:
    d684:	stp	x29, x30, [sp, #-128]!
    d688:	mov	x29, sp
    d68c:	mov	x3, x30
    d690:	str	x0, [x29, #72]
    d694:	str	x1, [x29, #64]
    d698:	str	x2, [x29, #56]
    d69c:	mov	x0, x29
    d6a0:	str	x0, [x29, #120]
    d6a4:	mov	x0, x3
    d6a8:	str	x0, [x29, #112]
    d6ac:	stp	xzr, xzr, [x29, #88]
    d6b0:	str	xzr, [x29, #104]
    d6b4:	ldr	x0, [x29, #112]
    d6b8:	str	x0, [x29, #96]
    d6bc:	ldr	x0, [x29, #120]
    d6c0:	str	x0, [x29, #104]
    d6c4:	ldr	x0, [x29, #72]
    d6c8:	ldrb	w0, [x0]
    d6cc:	cmp	w0, #0x4
    d6d0:	b.eq	d6e4 <__ubsan_handle_cfi_check_fail@@Base+0x60>  // b.none
    d6d4:	ldr	x0, [x29, #72]
    d6d8:	ldrb	w0, [x0]
    d6dc:	cmp	w0, #0x5
    d6e0:	b.ne	d714 <__ubsan_handle_cfi_check_fail@@Base+0x90>  // b.any
    d6e4:	add	x2, x29, #0x10
    d6e8:	add	x3, x29, #0x58
    d6ec:	ldp	x0, x1, [x3]
    d6f0:	stp	x0, x1, [x2]
    d6f4:	ldr	x0, [x3, #16]
    d6f8:	str	x0, [x2, #16]
    d6fc:	add	x0, x29, #0x10
    d700:	mov	x2, x0
    d704:	ldr	x1, [x29, #64]
    d708:	ldr	x0, [x29, #72]
    d70c:	bl	d234 <__ubsan_handle_pointer_overflow_abort@@Base+0x7c>
    d710:	b	d758 <__ubsan_handle_cfi_check_fail@@Base+0xd4>
    d714:	ldr	x0, [x29, #56]
    d718:	cmp	x0, #0x0
    d71c:	cset	w0, ne  // ne = any
    d720:	and	w4, w0, #0xff
    d724:	add	x2, x29, #0x10
    d728:	add	x3, x29, #0x58
    d72c:	ldp	x0, x1, [x3]
    d730:	stp	x0, x1, [x2]
    d734:	ldr	x0, [x3, #16]
    d738:	str	x0, [x2, #16]
    d73c:	add	x0, x29, #0x10
    d740:	mov	x3, x0
    d744:	mov	w2, w4
    d748:	ldr	x1, [x29, #64]
    d74c:	ldr	x0, [x29, #72]
    d750:	bl	6a80 <__ubsan_handle_cfi_bad_type@plt>
    d754:	nop
    d758:	nop
    d75c:	ldp	x29, x30, [sp], #128
    d760:	ret

000000000000d764 <__ubsan_handle_cfi_check_fail_abort@@Base>:
    d764:	stp	x29, x30, [sp, #-128]!
    d768:	mov	x29, sp
    d76c:	mov	x3, x30
    d770:	str	x0, [x29, #72]
    d774:	str	x1, [x29, #64]
    d778:	str	x2, [x29, #56]
    d77c:	mov	x0, x29
    d780:	str	x0, [x29, #120]
    d784:	mov	x0, x3
    d788:	str	x0, [x29, #112]
    d78c:	stp	xzr, xzr, [x29, #88]
    d790:	str	xzr, [x29, #104]
    d794:	mov	w0, #0x1                   	// #1
    d798:	strb	w0, [x29, #88]
    d79c:	ldr	x0, [x29, #112]
    d7a0:	str	x0, [x29, #96]
    d7a4:	ldr	x0, [x29, #120]
    d7a8:	str	x0, [x29, #104]
    d7ac:	ldr	x0, [x29, #72]
    d7b0:	ldrb	w0, [x0]
    d7b4:	cmp	w0, #0x4
    d7b8:	b.eq	d7cc <__ubsan_handle_cfi_check_fail_abort@@Base+0x68>  // b.none
    d7bc:	ldr	x0, [x29, #72]
    d7c0:	ldrb	w0, [x0]
    d7c4:	cmp	w0, #0x5
    d7c8:	b.ne	d7fc <__ubsan_handle_cfi_check_fail_abort@@Base+0x98>  // b.any
    d7cc:	add	x2, x29, #0x10
    d7d0:	add	x3, x29, #0x58
    d7d4:	ldp	x0, x1, [x3]
    d7d8:	stp	x0, x1, [x2]
    d7dc:	ldr	x0, [x3, #16]
    d7e0:	str	x0, [x2, #16]
    d7e4:	add	x0, x29, #0x10
    d7e8:	mov	x2, x0
    d7ec:	ldr	x1, [x29, #64]
    d7f0:	ldr	x0, [x29, #72]
    d7f4:	bl	d234 <__ubsan_handle_pointer_overflow_abort@@Base+0x7c>
    d7f8:	b	d83c <__ubsan_handle_cfi_check_fail_abort@@Base+0xd8>
    d7fc:	ldr	x0, [x29, #56]
    d800:	cmp	x0, #0x0
    d804:	cset	w0, ne  // ne = any
    d808:	and	w4, w0, #0xff
    d80c:	add	x2, x29, #0x10
    d810:	add	x3, x29, #0x58
    d814:	ldp	x0, x1, [x3]
    d818:	stp	x0, x1, [x2]
    d81c:	ldr	x0, [x3, #16]
    d820:	str	x0, [x2, #16]
    d824:	add	x0, x29, #0x10
    d828:	mov	x3, x0
    d82c:	mov	w2, w4
    d830:	ldr	x1, [x29, #64]
    d834:	ldr	x0, [x29, #72]
    d838:	bl	6a80 <__ubsan_handle_cfi_bad_type@plt>
    d83c:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    d840:	sub	sp, sp, #0x310
    d844:	stp	x19, x30, [sp]
    d848:	str	x0, [sp, #136]
    d84c:	str	x1, [sp, #128]
    d850:	str	x2, [sp, #120]
    d854:	stp	x3, x4, [sp, #104]
    d858:	mov	x19, x5
    d85c:	ldr	x0, [sp, #136]
    d860:	bl	dad0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x36c>
    d864:	stp	x0, x1, [sp, #232]
    d868:	ldr	x0, [sp, #136]
    d86c:	ldr	x0, [x0, #16]
    d870:	bl	8b24 <__asan_backtrace_open@plt+0x1eb4>
    d874:	strb	w0, [sp, #783]
    d878:	ldrb	w0, [sp, #783]
    d87c:	cmp	w0, #0x0
    d880:	b.eq	d88c <__ubsan_handle_cfi_check_fail_abort@@Base+0x128>  // b.none
    d884:	mov	w0, #0x5                   	// #5
    d888:	b	d890 <__ubsan_handle_cfi_check_fail_abort@@Base+0x12c>
    d88c:	mov	w0, #0x6                   	// #6
    d890:	str	w0, [sp, #776]
    d894:	add	x2, sp, #0x40
    d898:	mov	x3, x19
    d89c:	ldp	x0, x1, [x3]
    d8a0:	stp	x0, x1, [x2]
    d8a4:	ldr	x0, [x3, #16]
    d8a8:	str	x0, [x2, #16]
    d8ac:	add	x0, sp, #0x40
    d8b0:	ldr	w3, [sp, #776]
    d8b4:	mov	x2, x0
    d8b8:	ldp	x0, x1, [sp, #232]
    d8bc:	bl	9c64 <__ubsan_default_options@@Base+0x600>
    d8c0:	and	w0, w0, #0xff
    d8c4:	cmp	w0, #0x0
    d8c8:	b.ne	da48 <__ubsan_handle_cfi_check_fail_abort@@Base+0x2e4>  // b.any
    d8cc:	ldrb	w0, [sp, #783]
    d8d0:	eor	w0, w0, #0x1
    d8d4:	and	w0, w0, #0xff
    d8d8:	cmp	w0, #0x0
    d8dc:	b.eq	d8f8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x194>  // b.none
    d8e0:	bl	9110 <__asan_backtrace_open@plt+0x24a0>
    d8e4:	ldrb	w0, [x0, #17]
    d8e8:	cmp	w0, #0x0
    d8ec:	b.eq	d8f8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x194>  // b.none
    d8f0:	mov	w0, #0x1                   	// #1
    d8f4:	b	d8fc <__ubsan_handle_cfi_check_fail_abort@@Base+0x198>
    d8f8:	mov	w0, #0x0                   	// #0
    d8fc:	cmp	w0, #0x0
    d900:	b.ne	da50 <__ubsan_handle_cfi_check_fail_abort@@Base+0x2ec>  // b.any
    d904:	add	x0, sp, #0xf8
    d908:	ldp	x1, x2, [sp, #232]
    d90c:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    d910:	add	x2, sp, #0x40
    d914:	mov	x3, x19
    d918:	ldp	x0, x1, [x3]
    d91c:	stp	x0, x1, [x2]
    d920:	ldr	x0, [x3, #16]
    d924:	str	x0, [x2, #16]
    d928:	add	x0, sp, #0x10
    d92c:	add	x1, sp, #0xf8
    d930:	ldp	x2, x3, [x1]
    d934:	stp	x2, x3, [x0]
    d938:	ldp	x2, x3, [x1, #16]
    d93c:	stp	x2, x3, [x0, #16]
    d940:	ldr	x1, [x1, #32]
    d944:	str	x1, [x0, #32]
    d948:	add	x2, sp, #0x10
    d94c:	add	x1, sp, #0x40
    d950:	add	x0, sp, #0x98
    d954:	ldr	w3, [sp, #776]
    d958:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    d95c:	add	x0, sp, #0x2d0
    d960:	ldp	x1, x2, [sp, #232]
    d964:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    d968:	add	x0, sp, #0x10
    d96c:	add	x1, sp, #0x2d0
    d970:	ldp	x2, x3, [x1]
    d974:	stp	x2, x3, [x0]
    d978:	ldp	x2, x3, [x1, #16]
    d97c:	stp	x2, x3, [x0, #16]
    d980:	ldr	x1, [x1, #32]
    d984:	str	x1, [x0, #32]
    d988:	add	x1, sp, #0x10
    d98c:	add	x5, sp, #0x120
    d990:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    d994:	add	x4, x0, #0xc80
    d998:	ldr	w3, [sp, #776]
    d99c:	mov	w2, #0x0                   	// #0
    d9a0:	mov	x0, x5
    d9a4:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    d9a8:	ldrb	w0, [sp, #783]
    d9ac:	cmp	w0, #0x0
    d9b0:	b.eq	d9c0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x25c>  // b.none
    d9b4:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    d9b8:	add	x0, x0, #0xcc0
    d9bc:	b	d9c8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x264>
    d9c0:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    d9c4:	add	x0, x0, #0xcc8
    d9c8:	add	x2, sp, #0x120
    d9cc:	mov	x1, x0
    d9d0:	mov	x0, x2
    d9d4:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    d9d8:	mov	x19, x0
    d9dc:	ldr	x0, [sp, #136]
    d9e0:	ldr	x1, [x0, #16]
    d9e4:	add	x0, sp, #0x2f8
    d9e8:	ldr	x2, [sp, #128]
    d9ec:	bl	dbb8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x454>
    d9f0:	add	x0, sp, #0x2f8
    d9f4:	mov	x1, x0
    d9f8:	mov	x0, x19
    d9fc:	bl	7480 <__asan_backtrace_open@plt+0x810>
    da00:	ldr	x1, [sp, #120]
    da04:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    da08:	mov	x2, x0
    da0c:	add	x0, sp, #0x68
    da10:	mov	x1, x0
    da14:	mov	x0, x2
    da18:	bl	7480 <__asan_backtrace_open@plt+0x810>
    da1c:	mov	x2, x0
    da20:	ldr	x0, [sp, #136]
    da24:	ldr	x0, [x0, #16]
    da28:	mov	x1, x0
    da2c:	mov	x0, x2
    da30:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    da34:	add	x0, sp, #0x120
    da38:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    da3c:	add	x0, sp, #0x98
    da40:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    da44:	b	da54 <__ubsan_handle_cfi_check_fail_abort@@Base+0x2f0>
    da48:	nop
    da4c:	b	da54 <__ubsan_handle_cfi_check_fail_abort@@Base+0x2f0>
    da50:	nop
    da54:	ldp	x19, x30, [sp]
    da58:	add	sp, sp, #0x310
    da5c:	ret
    da60:	sub	sp, sp, #0x10
    da64:	str	x0, [sp, #8]
    da68:	ldr	x0, [sp, #8]
    da6c:	str	xzr, [x0]
    da70:	ldr	x0, [sp, #8]
    da74:	str	wzr, [x0, #8]
    da78:	ldr	x0, [sp, #8]
    da7c:	str	wzr, [x0, #12]
    da80:	nop
    da84:	add	sp, sp, #0x10
    da88:	ret
    da8c:	sub	sp, sp, #0x20
    da90:	str	x0, [sp, #24]
    da94:	str	x1, [sp, #16]
    da98:	str	w2, [sp, #12]
    da9c:	str	w3, [sp, #8]
    daa0:	ldr	x0, [sp, #24]
    daa4:	ldr	x1, [sp, #16]
    daa8:	str	x1, [x0]
    daac:	ldr	x0, [sp, #24]
    dab0:	ldr	w1, [sp, #12]
    dab4:	str	w1, [x0, #8]
    dab8:	ldr	x0, [sp, #24]
    dabc:	ldr	w1, [sp, #8]
    dac0:	str	w1, [x0, #12]
    dac4:	nop
    dac8:	add	sp, sp, #0x20
    dacc:	ret
    dad0:	str	x30, [sp, #-64]!
    dad4:	str	x0, [sp, #24]
    dad8:	ldr	x0, [sp, #24]
    dadc:	add	x0, x0, #0xc
    dae0:	mov	w2, #0x1                   	// #1
    dae4:	mov	w1, #0xffffffff            	// #-1
    dae8:	bl	e038 <__ubsan_handle_cfi_check_fail_abort@@Base+0x8d4>
    daec:	str	w0, [sp, #60]
    daf0:	ldr	x0, [sp, #24]
    daf4:	ldr	x1, [x0]
    daf8:	ldr	x0, [sp, #24]
    dafc:	ldr	w2, [x0, #8]
    db00:	add	x0, sp, #0x28
    db04:	ldr	w3, [sp, #60]
    db08:	bl	da8c <__ubsan_handle_cfi_check_fail_abort@@Base+0x328>
    db0c:	ldp	x0, x1, [sp, #40]
    db10:	ldr	x30, [sp], #64
    db14:	ret
    db18:	sub	sp, sp, #0x10
    db1c:	str	x0, [sp, #8]
    db20:	ldr	x0, [sp, #8]
    db24:	ldr	w0, [x0, #12]
    db28:	cmn	w0, #0x1
    db2c:	cset	w0, eq  // eq = none
    db30:	and	w0, w0, #0xff
    db34:	add	sp, sp, #0x10
    db38:	ret
    db3c:	str	x30, [sp, #-48]!
    db40:	str	x0, [sp, #24]
    db44:	ldr	x0, [sp, #24]
    db48:	bl	8b00 <__asan_backtrace_open@plt+0x1e90>
    db4c:	and	w0, w0, #0xff
    db50:	and	x0, x0, #0xff
    db54:	str	x0, [sp, #40]
    db58:	str	xzr, [sp, #32]
    db5c:	ldr	x1, [sp, #40]
    db60:	ldr	x0, [sp, #32]
    db64:	cmp	x1, x0
    db68:	cset	w0, eq  // eq = none
    db6c:	and	w0, w0, #0xff
    db70:	and	x0, x0, #0xff
    db74:	cmp	x0, #0x0
    db78:	b.eq	db9c <__ubsan_handle_cfi_check_fail_abort@@Base+0x438>  // b.none
    db7c:	ldr	x4, [sp, #32]
    db80:	ldr	x3, [sp, #40]
    db84:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    db88:	add	x2, x0, #0x268
    db8c:	mov	w1, #0x7b                  	// #123
    db90:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    db94:	add	x0, x0, #0x288
    db98:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    db9c:	ldr	x0, [sp, #24]
    dba0:	ldrh	w0, [x0, #2]
    dba4:	asr	w0, w0, #1
    dba8:	mov	w1, #0x1                   	// #1
    dbac:	lsl	w0, w1, w0
    dbb0:	ldr	x30, [sp], #48
    dbb4:	ret
    dbb8:	sub	sp, sp, #0x20
    dbbc:	str	x0, [sp, #24]
    dbc0:	str	x1, [sp, #16]
    dbc4:	str	x2, [sp, #8]
    dbc8:	ldr	x0, [sp, #24]
    dbcc:	ldr	x1, [sp, #16]
    dbd0:	str	x1, [x0]
    dbd4:	ldr	x0, [sp, #24]
    dbd8:	ldr	x1, [sp, #8]
    dbdc:	str	x1, [x0, #8]
    dbe0:	nop
    dbe4:	add	sp, sp, #0x20
    dbe8:	ret
    dbec:	str	x30, [sp, #-32]!
    dbf0:	str	x0, [sp, #24]
    dbf4:	ldr	x0, [sp, #24]
    dbf8:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
    dbfc:	bl	8b24 <__asan_backtrace_open@plt+0x1eb4>
    dc00:	and	w0, w0, #0xff
    dc04:	cmp	w0, #0x0
    dc08:	b.eq	dc2c <__ubsan_handle_cfi_check_fail_abort@@Base+0x4c8>  // b.none
    dc0c:	ldr	x0, [sp, #24]
    dc10:	bl	fc54 <__ubsan_get_current_report_data@@Base+0x970>
    dc14:	cmn	x0, #0x1
    dc18:	b.ne	dc2c <__ubsan_handle_cfi_check_fail_abort@@Base+0x4c8>  // b.any
    dc1c:	cmn	x1, #0x1
    dc20:	b.ne	dc2c <__ubsan_handle_cfi_check_fail_abort@@Base+0x4c8>  // b.any
    dc24:	mov	w0, #0x1                   	// #1
    dc28:	b	dc30 <__ubsan_handle_cfi_check_fail_abort@@Base+0x4cc>
    dc2c:	mov	w0, #0x0                   	// #0
    dc30:	ldr	x30, [sp], #32
    dc34:	ret
    dc38:	str	x30, [sp, #-32]!
    dc3c:	str	x0, [sp, #24]
    dc40:	ldr	x0, [sp, #24]
    dc44:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
    dc48:	bl	8b24 <__asan_backtrace_open@plt+0x1eb4>
    dc4c:	and	w0, w0, #0xff
    dc50:	cmp	w0, #0x0
    dc54:	b.eq	dc70 <__ubsan_handle_cfi_check_fail_abort@@Base+0x50c>  // b.none
    dc58:	ldr	x0, [sp, #24]
    dc5c:	bl	fc54 <__ubsan_get_current_report_data@@Base+0x970>
    dc60:	cmp	x1, #0x0
    dc64:	b.ge	dc70 <__ubsan_handle_cfi_check_fail_abort@@Base+0x50c>  // b.tcont
    dc68:	mov	w0, #0x1                   	// #1
    dc6c:	b	dc74 <__ubsan_handle_cfi_check_fail_abort@@Base+0x510>
    dc70:	mov	w0, #0x0                   	// #0
    dc74:	ldr	x30, [sp], #32
    dc78:	ret
    dc7c:	str	x30, [sp, #-32]!
    dc80:	str	x0, [sp, #24]
    dc84:	str	x1, [sp, #16]
    dc88:	ldr	x0, [sp, #24]
    dc8c:	ldr	x0, [x0]
    dc90:	ldr	x1, [sp, #16]
    dc94:	cmp	x1, x0
    dc98:	b.eq	dca4 <__ubsan_handle_cfi_check_fail_abort@@Base+0x540>  // b.none
    dc9c:	ldr	x0, [sp, #24]
    dca0:	bl	8ca8 <__asan_backtrace_open@plt+0x2038>
    dca4:	ldr	x0, [sp, #24]
    dca8:	ldr	x1, [sp, #16]
    dcac:	str	x1, [x0]
    dcb0:	nop
    dcb4:	ldr	x30, [sp], #32
    dcb8:	ret
    dcbc:	str	x30, [sp, #-64]!
    dcc0:	str	x0, [sp, #24]
    dcc4:	ldr	x0, [sp, #24]
    dcc8:	str	x0, [sp, #56]
    dccc:	str	xzr, [sp, #48]
    dcd0:	ldr	x1, [sp, #56]
    dcd4:	ldr	x0, [sp, #48]
    dcd8:	cmp	x1, x0
    dcdc:	cset	w0, eq  // eq = none
    dce0:	and	w0, w0, #0xff
    dce4:	and	x0, x0, #0xff
    dce8:	cmp	x0, #0x0
    dcec:	b.eq	dd10 <__ubsan_handle_cfi_check_fail_abort@@Base+0x5ac>  // b.none
    dcf0:	ldr	x4, [sp, #48]
    dcf4:	ldr	x3, [sp, #56]
    dcf8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    dcfc:	add	x2, x0, #0x2c0
    dd00:	mov	w1, #0x2b                  	// #43
    dd04:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    dd08:	add	x0, x0, #0x2d8
    dd0c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    dd10:	ldr	x0, [sp, #24]
    dd14:	str	x0, [sp, #32]
    dd18:	ldr	x0, [sp, #32]
    dd1c:	sub	x0, x0, #0x4
    dd20:	str	x0, [sp, #40]
    dd24:	ldr	x0, [sp, #40]
    dd28:	bl	7410 <__asan_backtrace_open@plt+0x7a0>
    dd2c:	ldr	x30, [sp], #64
    dd30:	ret
    dd34:	str	x30, [sp, #-32]!
    dd38:	str	x0, [sp, #24]
    dd3c:	ldr	x0, [sp, #24]
    dd40:	str	wzr, [x0]
    dd44:	ldr	x0, [sp, #24]
    dd48:	add	x0, x0, #0x8
    dd4c:	bl	da60 <__ubsan_handle_cfi_check_fail_abort@@Base+0x2fc>
    dd50:	nop
    dd54:	ldr	x30, [sp], #32
    dd58:	ret
    dd5c:	sub	sp, sp, #0x20
    dd60:	str	x0, [sp, #24]
    dd64:	stp	x1, x2, [sp, #8]
    dd68:	ldr	x0, [sp, #24]
    dd6c:	mov	w1, #0x1                   	// #1
    dd70:	str	w1, [x0]
    dd74:	ldr	x2, [sp, #24]
    dd78:	ldp	x0, x1, [sp, #8]
    dd7c:	stp	x0, x1, [x2, #8]
    dd80:	nop
    dd84:	add	sp, sp, #0x20
    dd88:	ret
    dd8c:	str	x30, [sp, #-32]!
    dd90:	str	x0, [sp, #24]
    dd94:	str	x1, [sp, #16]
    dd98:	ldr	x0, [sp, #24]
    dd9c:	mov	w1, #0x2                   	// #2
    dda0:	str	w1, [x0]
    dda4:	ldr	x0, [sp, #24]
    dda8:	add	x0, x0, #0x8
    ddac:	bl	da60 <__ubsan_handle_cfi_check_fail_abort@@Base+0x2fc>
    ddb0:	ldr	x0, [sp, #24]
    ddb4:	ldr	x1, [sp, #16]
    ddb8:	str	x1, [x0, #24]
    ddbc:	nop
    ddc0:	ldr	x30, [sp], #32
    ddc4:	ret
    ddc8:	str	x30, [sp, #-32]!
    ddcc:	str	x0, [sp, #24]
    ddd0:	str	x1, [sp, #16]
    ddd4:	ldr	x0, [sp, #24]
    ddd8:	mov	w1, #0x3                   	// #3
    dddc:	str	w1, [x0]
    dde0:	ldr	x0, [sp, #24]
    dde4:	add	x0, x0, #0x8
    dde8:	bl	da60 <__ubsan_handle_cfi_check_fail_abort@@Base+0x2fc>
    ddec:	ldr	x0, [sp, #16]
    ddf0:	bl	8d18 <__asan_backtrace_open@plt+0x20a8>
    ddf4:	mov	x1, x0
    ddf8:	ldr	x0, [sp, #24]
    ddfc:	str	x1, [x0, #32]
    de00:	nop
    de04:	ldr	x30, [sp], #32
    de08:	ret
    de0c:	str	x30, [sp, #-32]!
    de10:	str	x0, [sp, #24]
    de14:	ldr	x0, [sp, #24]
    de18:	bl	dd34 <__ubsan_handle_cfi_check_fail_abort@@Base+0x5d0>
    de1c:	ldr	x0, [sp, #24]
    de20:	add	x0, x0, #0x28
    de24:	bl	dd34 <__ubsan_handle_cfi_check_fail_abort@@Base+0x5d0>
    de28:	ldr	x0, [sp, #24]
    de2c:	str	xzr, [x0, #80]
    de30:	nop
    de34:	ldr	x30, [sp], #32
    de38:	ret
    de3c:	sub	sp, sp, #0x10
    de40:	str	x0, [sp, #8]
    de44:	nop
    de48:	add	sp, sp, #0x10
    de4c:	ret
    de50:	sub	sp, sp, #0x10
    de54:	str	x0, [sp, #8]
    de58:	str	x1, [sp]
    de5c:	ldr	x0, [sp, #8]
    de60:	mov	w1, #0x5                   	// #5
    de64:	str	w1, [x0]
    de68:	ldr	x0, [sp, #8]
    de6c:	ldr	x1, [sp]
    de70:	str	x1, [x0, #16]
    de74:	nop
    de78:	add	sp, sp, #0x10
    de7c:	ret
    de80:	stp	x19, x20, [sp, #-64]!
    de84:	str	x30, [sp, #16]
    de88:	str	x0, [sp, #56]
    de8c:	mov	x19, x1
    de90:	str	w2, [sp, #52]
    de94:	str	w3, [sp, #48]
    de98:	str	x4, [sp, #40]
    de9c:	ldr	x0, [sp, #56]
    dea0:	mov	x1, x19
    dea4:	ldp	x2, x3, [x1]
    dea8:	stp	x2, x3, [x0]
    deac:	ldp	x2, x3, [x1, #16]
    deb0:	stp	x2, x3, [x0, #16]
    deb4:	ldr	x1, [x1, #32]
    deb8:	str	x1, [x0, #32]
    debc:	ldr	x0, [sp, #56]
    dec0:	ldr	w1, [sp, #52]
    dec4:	str	w1, [x0, #40]
    dec8:	ldr	x0, [sp, #56]
    decc:	ldr	w1, [sp, #48]
    ded0:	str	w1, [x0, #44]
    ded4:	ldr	x0, [sp, #56]
    ded8:	ldr	x1, [sp, #40]
    dedc:	str	x1, [x0, #48]
    dee0:	ldr	x0, [sp, #56]
    dee4:	add	x0, x0, #0x40
    dee8:	mov	x19, #0x7                   	// #7
    deec:	mov	x20, x0
    def0:	cmp	x19, #0x0
    def4:	b.lt	df0c <__ubsan_handle_cfi_check_fail_abort@@Base+0x7a8>  // b.tstop
    def8:	mov	x0, x20
    defc:	bl	de3c <__ubsan_handle_cfi_check_fail_abort@@Base+0x6d8>
    df00:	add	x20, x20, #0x20
    df04:	sub	x19, x19, #0x1
    df08:	b	def0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x78c>
    df0c:	ldr	x0, [sp, #56]
    df10:	str	wzr, [x0, #320]
    df14:	ldr	x0, [sp, #56]
    df18:	add	x0, x0, #0x148
    df1c:	mov	x19, #0x0                   	// #0
    df20:	mov	x20, x0
    df24:	cmp	x19, #0x0
    df28:	b.lt	df40 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7dc>  // b.tstop
    df2c:	mov	x0, x20
    df30:	bl	de0c <__ubsan_handle_cfi_check_fail_abort@@Base+0x6a8>
    df34:	add	x20, x20, #0x58
    df38:	sub	x19, x19, #0x1
    df3c:	b	df24 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7c0>
    df40:	ldr	x0, [sp, #56]
    df44:	str	wzr, [x0, #416]
    df48:	nop
    df4c:	ldr	x30, [sp, #16]
    df50:	ldp	x19, x20, [sp], #64
    df54:	ret
    df58:	str	x30, [sp, #-96]!
    df5c:	str	x0, [sp, #56]
    df60:	str	x1, [sp, #48]
    df64:	add	x0, sp, #0x40
    df68:	ldr	x1, [sp, #48]
    df6c:	bl	8f88 <__asan_backtrace_open@plt+0x2318>
    df70:	add	x2, sp, #0x10
    df74:	add	x3, sp, #0x40
    df78:	ldp	x0, x1, [x3]
    df7c:	stp	x0, x1, [x2]
    df80:	ldp	x0, x1, [x3, #16]
    df84:	stp	x0, x1, [x2, #16]
    df88:	add	x0, sp, #0x10
    df8c:	mov	x1, x0
    df90:	ldr	x0, [sp, #56]
    df94:	bl	9044 <__asan_backtrace_open@plt+0x23d4>
    df98:	ldr	x30, [sp], #96
    df9c:	ret
    dfa0:	str	x30, [sp, #-96]!
    dfa4:	str	x0, [sp, #56]
    dfa8:	str	x1, [sp, #48]
    dfac:	ldr	x0, [sp, #48]
    dfb0:	mov	x2, x0
    dfb4:	mov	x3, #0x0                   	// #0
    dfb8:	add	x0, sp, #0x40
    dfbc:	bl	8fb4 <__asan_backtrace_open@plt+0x2344>
    dfc0:	add	x2, sp, #0x10
    dfc4:	add	x3, sp, #0x40
    dfc8:	ldp	x0, x1, [x3]
    dfcc:	stp	x0, x1, [x2]
    dfd0:	ldp	x0, x1, [x3, #16]
    dfd4:	stp	x0, x1, [x2, #16]
    dfd8:	add	x0, sp, #0x10
    dfdc:	mov	x1, x0
    dfe0:	ldr	x0, [sp, #56]
    dfe4:	bl	9044 <__asan_backtrace_open@plt+0x23d4>
    dfe8:	ldr	x30, [sp], #96
    dfec:	ret
    dff0:	str	x30, [sp, #-96]!
    dff4:	str	x0, [sp, #56]
    dff8:	str	x1, [sp, #48]
    dffc:	add	x0, sp, #0x40
    e000:	ldr	x1, [sp, #48]
    e004:	bl	de50 <__ubsan_handle_cfi_check_fail_abort@@Base+0x6ec>
    e008:	add	x2, sp, #0x10
    e00c:	add	x3, sp, #0x40
    e010:	ldp	x0, x1, [x3]
    e014:	stp	x0, x1, [x2]
    e018:	ldp	x0, x1, [x3, #16]
    e01c:	stp	x0, x1, [x2, #16]
    e020:	add	x0, sp, #0x10
    e024:	mov	x1, x0
    e028:	ldr	x0, [sp, #56]
    e02c:	bl	9044 <__asan_backtrace_open@plt+0x23d4>
    e030:	ldr	x30, [sp], #96
    e034:	ret
    e038:	sub	sp, sp, #0x10
    e03c:	str	x0, [sp, #8]
    e040:	str	w1, [sp, #4]
    e044:	str	w2, [sp]
    e048:	ldr	w0, [sp]
    e04c:	and	w0, w0, #0x38
    e050:	cmp	w0, #0x0
    e054:	b.eq	e05c <__ubsan_handle_cfi_check_fail_abort@@Base+0x8f8>  // b.none
    e058:	dmb	ish
    e05c:	ldr	x1, [sp, #8]
    e060:	ldr	w2, [sp, #4]
    e064:	ldxr	w0, [x1]
    e068:	stxr	w3, w2, [x1]
    e06c:	cbnz	w3, e064 <__ubsan_handle_cfi_check_fail_abort@@Base+0x900>
    e070:	dmb	ish
    e074:	str	w0, [sp, #4]
    e078:	ldr	w0, [sp]
    e07c:	cmp	w0, #0x20
    e080:	b.ne	e088 <__ubsan_handle_cfi_check_fail_abort@@Base+0x924>  // b.any
    e084:	dmb	ish
    e088:	ldr	w0, [sp, #4]
    e08c:	add	sp, sp, #0x10
    e090:	ret
    e094:	sub	sp, sp, #0xc10
    e098:	stp	x19, x30, [sp]
    e09c:	str	x0, [sp, #120]
    e0a0:	str	x1, [sp, #112]
    e0a4:	str	x2, [sp, #104]
    e0a8:	mov	x19, x3
    e0ac:	ldr	x3, [sp, #112]
    e0b0:	ldr	x0, [sp, #120]
    e0b4:	ldr	x0, [x0, #24]
    e0b8:	ldr	x2, [sp, #104]
    e0bc:	mov	x1, x0
    e0c0:	mov	x0, x3
    e0c4:	bl	fa0c <__ubsan_get_current_report_data@@Base+0x728>
    e0c8:	and	w0, w0, #0xff
    e0cc:	cmp	w0, #0x0
    e0d0:	b.eq	e0dc <__ubsan_handle_cfi_check_fail_abort@@Base+0x978>  // b.none
    e0d4:	mov	w19, #0x0                   	// #0
    e0d8:	b	e604 <__ubsan_handle_cfi_check_fail_abort@@Base+0xea0>
    e0dc:	ldr	x0, [sp, #112]
    e0e0:	add	x1, sp, #0xe0
    e0e4:	mov	x8, x1
    e0e8:	bl	f530 <__ubsan_get_current_report_data@@Base+0x24c>
    e0ec:	add	x0, sp, #0xe0
    e0f0:	bl	edb8 <__ubsan_handle_cfi_bad_type@@Base+0x69c>
    e0f4:	and	w0, w0, #0xff
    e0f8:	cmp	w0, #0x0
    e0fc:	b.eq	e120 <__ubsan_handle_cfi_check_fail_abort@@Base+0x9bc>  // b.none
    e100:	add	x0, sp, #0xe0
    e104:	bl	eddc <__ubsan_handle_cfi_bad_type@@Base+0x6c0>
    e108:	bl	8680 <__asan_backtrace_open@plt+0x1a10>
    e10c:	and	w0, w0, #0xff
    e110:	cmp	w0, #0x0
    e114:	b.eq	e120 <__ubsan_handle_cfi_check_fail_abort@@Base+0x9bc>  // b.none
    e118:	mov	w0, #0x1                   	// #1
    e11c:	b	e124 <__ubsan_handle_cfi_check_fail_abort@@Base+0x9c0>
    e120:	mov	w0, #0x0                   	// #0
    e124:	cmp	w0, #0x0
    e128:	b.eq	e134 <__ubsan_handle_cfi_check_fail_abort@@Base+0x9d0>  // b.none
    e12c:	mov	w19, #0x0                   	// #0
    e130:	b	e604 <__ubsan_handle_cfi_check_fail_abort@@Base+0xea0>
    e134:	ldr	x0, [sp, #120]
    e138:	bl	dad0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x36c>
    e13c:	stp	x0, x1, [sp, #208]
    e140:	mov	w0, #0x18                  	// #24
    e144:	str	w0, [sp, #3084]
    e148:	add	x2, sp, #0x40
    e14c:	mov	x3, x19
    e150:	ldp	x0, x1, [x3]
    e154:	stp	x0, x1, [x2]
    e158:	ldr	x0, [x3, #16]
    e15c:	str	x0, [x2, #16]
    e160:	add	x0, sp, #0x40
    e164:	ldr	w3, [sp, #3084]
    e168:	mov	x2, x0
    e16c:	ldp	x0, x1, [sp, #208]
    e170:	bl	9c64 <__ubsan_default_options@@Base+0x600>
    e174:	and	w0, w0, #0xff
    e178:	cmp	w0, #0x0
    e17c:	b.eq	e188 <__ubsan_handle_cfi_check_fail_abort@@Base+0xa24>  // b.none
    e180:	mov	w19, #0x0                   	// #0
    e184:	b	e604 <__ubsan_handle_cfi_check_fail_abort@@Base+0xea0>
    e188:	add	x0, sp, #0xf8
    e18c:	ldp	x1, x2, [sp, #208]
    e190:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    e194:	add	x2, sp, #0x40
    e198:	mov	x3, x19
    e19c:	ldp	x0, x1, [x3]
    e1a0:	stp	x0, x1, [x2]
    e1a4:	ldr	x0, [x3, #16]
    e1a8:	str	x0, [x2, #16]
    e1ac:	add	x0, sp, #0x10
    e1b0:	add	x1, sp, #0xf8
    e1b4:	ldp	x2, x3, [x1]
    e1b8:	stp	x2, x3, [x0]
    e1bc:	ldp	x2, x3, [x1, #16]
    e1c0:	stp	x2, x3, [x0, #16]
    e1c4:	ldr	x1, [x1, #32]
    e1c8:	str	x1, [x0, #32]
    e1cc:	add	x2, sp, #0x10
    e1d0:	add	x1, sp, #0x40
    e1d4:	add	x0, sp, #0x80
    e1d8:	ldr	w3, [sp, #3084]
    e1dc:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    e1e0:	add	x0, sp, #0x2d8
    e1e4:	ldp	x1, x2, [sp, #208]
    e1e8:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    e1ec:	add	x0, sp, #0x10
    e1f0:	add	x1, sp, #0x2d8
    e1f4:	ldp	x2, x3, [x1]
    e1f8:	stp	x2, x3, [x0]
    e1fc:	ldp	x2, x3, [x1, #16]
    e200:	stp	x2, x3, [x0, #16]
    e204:	ldr	x1, [x1, #32]
    e208:	str	x1, [x0, #32]
    e20c:	add	x1, sp, #0x10
    e210:	add	x5, sp, #0x120
    e214:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    e218:	add	x4, x0, #0xdb0
    e21c:	ldr	w3, [sp, #3084]
    e220:	mov	w2, #0x0                   	// #0
    e224:	mov	x0, x5
    e228:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    e22c:	ldr	x0, [sp, #120]
    e230:	ldrb	w0, [x0, #32]
    e234:	mov	w1, w0
    e238:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    e23c:	ldr	x0, [x0, #3760]
    e240:	sxtw	x1, w1
    e244:	ldr	x1, [x0, x1, lsl #3]
    e248:	add	x0, sp, #0x120
    e24c:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    e250:	mov	x2, x0
    e254:	ldr	x0, [sp, #112]
    e258:	mov	x1, x0
    e25c:	mov	x0, x2
    e260:	bl	dff0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x88c>
    e264:	mov	x2, x0
    e268:	ldr	x0, [sp, #120]
    e26c:	ldr	x0, [x0, #16]
    e270:	mov	x1, x0
    e274:	mov	x0, x2
    e278:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    e27c:	add	x0, sp, #0x120
    e280:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    e284:	add	x0, sp, #0xe0
    e288:	bl	edb8 <__ubsan_handle_cfi_bad_type@@Base+0x69c>
    e28c:	and	w0, w0, #0xff
    e290:	eor	w0, w0, #0x1
    e294:	and	w0, w0, #0xff
    e298:	cmp	w0, #0x0
    e29c:	b.eq	e434 <__ubsan_handle_cfi_check_fail_abort@@Base+0xcd0>  // b.none
    e2a0:	add	x0, sp, #0xe0
    e2a4:	bl	edf4 <__ubsan_handle_cfi_bad_type@@Base+0x6d8>
    e2a8:	cmn	x0, #0x100, lsl #12
    e2ac:	b.lt	e2c0 <__ubsan_handle_cfi_check_fail_abort@@Base+0xb5c>  // b.tstop
    e2b0:	add	x0, sp, #0xe0
    e2b4:	bl	edf4 <__ubsan_handle_cfi_bad_type@@Base+0x6d8>
    e2b8:	cmp	x0, #0x100, lsl #12
    e2bc:	b.le	e2c8 <__ubsan_handle_cfi_check_fail_abort@@Base+0xb64>
    e2c0:	mov	w0, #0x1                   	// #1
    e2c4:	b	e2cc <__ubsan_handle_cfi_check_fail_abort@@Base+0xb68>
    e2c8:	mov	w0, #0x0                   	// #0
    e2cc:	cmp	w0, #0x0
    e2d0:	b.eq	e384 <__ubsan_handle_cfi_check_fail_abort@@Base+0xc20>  // b.none
    e2d4:	add	x0, sp, #0x4b8
    e2d8:	ldr	x1, [sp, #112]
    e2dc:	bl	dd8c <__ubsan_handle_cfi_check_fail_abort@@Base+0x628>
    e2e0:	add	x0, sp, #0x10
    e2e4:	add	x1, sp, #0x4b8
    e2e8:	ldp	x2, x3, [x1]
    e2ec:	stp	x2, x3, [x0]
    e2f0:	ldp	x2, x3, [x1, #16]
    e2f4:	stp	x2, x3, [x0, #16]
    e2f8:	ldr	x1, [x1, #32]
    e2fc:	str	x1, [x0, #32]
    e300:	add	x1, sp, #0x10
    e304:	add	x5, sp, #0x300
    e308:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    e30c:	add	x4, x0, #0xdf0
    e310:	ldr	w3, [sp, #3084]
    e314:	mov	w2, #0x1                   	// #1
    e318:	mov	x0, x5
    e31c:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    e320:	add	x0, sp, #0xe0
    e324:	bl	eddc <__ubsan_handle_cfi_bad_type@@Base+0x6c0>
    e328:	mov	x1, x0
    e32c:	add	x0, sp, #0x4e0
    e330:	bl	eb70 <__ubsan_handle_cfi_bad_type@@Base+0x454>
    e334:	add	x0, sp, #0x300
    e338:	ldr	x1, [sp, #1248]
    e33c:	bl	ecd0 <__ubsan_handle_cfi_bad_type@@Base+0x5b4>
    e340:	mov	x19, x0
    e344:	ldr	x0, [sp, #112]
    e348:	add	x1, x0, #0x8
    e34c:	add	x4, sp, #0x4e8
    e350:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    e354:	add	x3, x0, #0xe30
    e358:	mov	x2, x1
    e35c:	ldr	x1, [sp, #112]
    e360:	mov	x0, x4
    e364:	bl	eb28 <__ubsan_handle_cfi_bad_type@@Base+0x40c>
    e368:	add	x0, sp, #0x4e8
    e36c:	mov	x1, x0
    e370:	mov	x0, x19
    e374:	bl	ed18 <__ubsan_handle_cfi_bad_type@@Base+0x5fc>
    e378:	add	x0, sp, #0x300
    e37c:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    e380:	b	e5f8 <__ubsan_handle_cfi_check_fail_abort@@Base+0xe94>
    e384:	add	x0, sp, #0x6f8
    e388:	ldr	x1, [sp, #112]
    e38c:	bl	dd8c <__ubsan_handle_cfi_check_fail_abort@@Base+0x628>
    e390:	add	x0, sp, #0x10
    e394:	add	x1, sp, #0x6f8
    e398:	ldp	x2, x3, [x1]
    e39c:	stp	x2, x3, [x0]
    e3a0:	ldp	x2, x3, [x1, #16]
    e3a4:	stp	x2, x3, [x0, #16]
    e3a8:	ldr	x1, [x1, #32]
    e3ac:	str	x1, [x0, #32]
    e3b0:	add	x1, sp, #0x10
    e3b4:	add	x5, sp, #0x540
    e3b8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    e3bc:	add	x4, x0, #0xe48
    e3c0:	ldr	w3, [sp, #3084]
    e3c4:	mov	w2, #0x1                   	// #1
    e3c8:	mov	x0, x5
    e3cc:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    e3d0:	add	x0, sp, #0xe0
    e3d4:	bl	eddc <__ubsan_handle_cfi_bad_type@@Base+0x6c0>
    e3d8:	mov	x1, x0
    e3dc:	add	x0, sp, #0x720
    e3e0:	bl	eb70 <__ubsan_handle_cfi_bad_type@@Base+0x454>
    e3e4:	add	x0, sp, #0x540
    e3e8:	ldr	x1, [sp, #1824]
    e3ec:	bl	ecd0 <__ubsan_handle_cfi_bad_type@@Base+0x5b4>
    e3f0:	mov	x19, x0
    e3f4:	ldr	x0, [sp, #112]
    e3f8:	add	x1, x0, #0x8
    e3fc:	add	x4, sp, #0x728
    e400:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    e404:	add	x3, x0, #0xe60
    e408:	mov	x2, x1
    e40c:	ldr	x1, [sp, #112]
    e410:	mov	x0, x4
    e414:	bl	eb28 <__ubsan_handle_cfi_bad_type@@Base+0x40c>
    e418:	add	x0, sp, #0x728
    e41c:	mov	x1, x0
    e420:	mov	x0, x19
    e424:	bl	ed18 <__ubsan_handle_cfi_bad_type@@Base+0x5fc>
    e428:	add	x0, sp, #0x540
    e42c:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    e430:	b	e5f8 <__ubsan_handle_cfi_check_fail_abort@@Base+0xe94>
    e434:	add	x0, sp, #0xe0
    e438:	bl	edf4 <__ubsan_handle_cfi_bad_type@@Base+0x6d8>
    e43c:	cmp	x0, #0x0
    e440:	cset	w0, eq  // eq = none
    e444:	and	w0, w0, #0xff
    e448:	cmp	w0, #0x0
    e44c:	b.eq	e500 <__ubsan_handle_cfi_check_fail_abort@@Base+0xd9c>  // b.none
    e450:	add	x0, sp, #0x938
    e454:	ldr	x1, [sp, #112]
    e458:	bl	dd8c <__ubsan_handle_cfi_check_fail_abort@@Base+0x628>
    e45c:	add	x0, sp, #0x10
    e460:	add	x1, sp, #0x938
    e464:	ldp	x2, x3, [x1]
    e468:	stp	x2, x3, [x0]
    e46c:	ldp	x2, x3, [x1, #16]
    e470:	stp	x2, x3, [x0, #16]
    e474:	ldr	x1, [x1, #32]
    e478:	str	x1, [x0, #32]
    e47c:	add	x1, sp, #0x10
    e480:	add	x5, sp, #0x780
    e484:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    e488:	add	x4, x0, #0xe70
    e48c:	ldr	w3, [sp, #3084]
    e490:	mov	w2, #0x1                   	// #1
    e494:	mov	x0, x5
    e498:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    e49c:	add	x0, sp, #0xe0
    e4a0:	bl	eddc <__ubsan_handle_cfi_bad_type@@Base+0x6c0>
    e4a4:	mov	x1, x0
    e4a8:	add	x0, sp, #0x960
    e4ac:	bl	eb70 <__ubsan_handle_cfi_bad_type@@Base+0x454>
    e4b0:	add	x0, sp, #0x780
    e4b4:	ldr	x1, [sp, #2400]
    e4b8:	bl	ecd0 <__ubsan_handle_cfi_bad_type@@Base+0x5b4>
    e4bc:	mov	x19, x0
    e4c0:	ldr	x0, [sp, #112]
    e4c4:	add	x1, x0, #0x8
    e4c8:	add	x4, sp, #0x968
    e4cc:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    e4d0:	add	x3, x0, #0xe88
    e4d4:	mov	x2, x1
    e4d8:	ldr	x1, [sp, #112]
    e4dc:	mov	x0, x4
    e4e0:	bl	eb28 <__ubsan_handle_cfi_bad_type@@Base+0x40c>
    e4e4:	add	x0, sp, #0x968
    e4e8:	mov	x1, x0
    e4ec:	mov	x0, x19
    e4f0:	bl	ed18 <__ubsan_handle_cfi_bad_type@@Base+0x5fc>
    e4f4:	add	x0, sp, #0x780
    e4f8:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    e4fc:	b	e5f8 <__ubsan_handle_cfi_check_fail_abort@@Base+0xe94>
    e500:	add	x0, sp, #0xe0
    e504:	bl	edf4 <__ubsan_handle_cfi_bad_type@@Base+0x6d8>
    e508:	mov	x1, x0
    e50c:	ldr	x0, [sp, #112]
    e510:	sub	x1, x0, x1
    e514:	add	x0, sp, #0xb78
    e518:	bl	dd8c <__ubsan_handle_cfi_check_fail_abort@@Base+0x628>
    e51c:	add	x0, sp, #0x10
    e520:	add	x1, sp, #0xb78
    e524:	ldp	x2, x3, [x1]
    e528:	stp	x2, x3, [x0]
    e52c:	ldp	x2, x3, [x1, #16]
    e530:	stp	x2, x3, [x0, #16]
    e534:	ldr	x1, [x1, #32]
    e538:	str	x1, [x0, #32]
    e53c:	add	x1, sp, #0x10
    e540:	add	x5, sp, #0x9c0
    e544:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    e548:	add	x4, x0, #0xe98
    e54c:	ldr	w3, [sp, #3084]
    e550:	mov	w2, #0x1                   	// #1
    e554:	mov	x0, x5
    e558:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    e55c:	add	x0, sp, #0xe0
    e560:	bl	edf4 <__ubsan_handle_cfi_bad_type@@Base+0x6d8>
    e564:	mov	x1, x0
    e568:	add	x0, sp, #0x9c0
    e56c:	bl	dfa0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x83c>
    e570:	mov	x19, x0
    e574:	add	x0, sp, #0xe0
    e578:	bl	eddc <__ubsan_handle_cfi_bad_type@@Base+0x6c0>
    e57c:	mov	x1, x0
    e580:	add	x0, sp, #0xba0
    e584:	bl	eb70 <__ubsan_handle_cfi_bad_type@@Base+0x454>
    e588:	ldr	x1, [sp, #2976]
    e58c:	mov	x0, x19
    e590:	bl	ecd0 <__ubsan_handle_cfi_bad_type@@Base+0x5b4>
    e594:	mov	x19, x0
    e598:	add	x0, sp, #0xe0
    e59c:	bl	ee0c <__ubsan_handle_cfi_bad_type@@Base+0x6f0>
    e5a0:	mov	x1, x0
    e5a4:	add	x0, sp, #0xba8
    e5a8:	bl	eb70 <__ubsan_handle_cfi_bad_type@@Base+0x454>
    e5ac:	ldr	x1, [sp, #2984]
    e5b0:	mov	x0, x19
    e5b4:	bl	ecd0 <__ubsan_handle_cfi_bad_type@@Base+0x5b4>
    e5b8:	mov	x19, x0
    e5bc:	ldr	x0, [sp, #112]
    e5c0:	add	x1, x0, #0x8
    e5c4:	add	x4, sp, #0xbb0
    e5c8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    e5cc:	add	x3, x0, #0xee0
    e5d0:	mov	x2, x1
    e5d4:	ldr	x1, [sp, #112]
    e5d8:	mov	x0, x4
    e5dc:	bl	eb28 <__ubsan_handle_cfi_bad_type@@Base+0x40c>
    e5e0:	add	x0, sp, #0xbb0
    e5e4:	mov	x1, x0
    e5e8:	mov	x0, x19
    e5ec:	bl	ed18 <__ubsan_handle_cfi_bad_type@@Base+0x5fc>
    e5f0:	add	x0, sp, #0x9c0
    e5f4:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    e5f8:	mov	w19, #0x1                   	// #1
    e5fc:	add	x0, sp, #0x80
    e600:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    e604:	mov	w0, w19
    e608:	ldp	x19, x30, [sp]
    e60c:	add	sp, sp, #0xc10
    e610:	ret

000000000000e614 <__ubsan_handle_dynamic_type_cache_miss@@Base>:
    e614:	stp	x29, x30, [sp, #-128]!
    e618:	mov	x29, sp
    e61c:	mov	x3, x30
    e620:	str	x0, [x29, #72]
    e624:	str	x1, [x29, #64]
    e628:	str	x2, [x29, #56]
    e62c:	mov	x0, x29
    e630:	str	x0, [x29, #120]
    e634:	mov	x0, x3
    e638:	str	x0, [x29, #112]
    e63c:	stp	xzr, xzr, [x29, #88]
    e640:	str	xzr, [x29, #104]
    e644:	ldr	x0, [x29, #112]
    e648:	str	x0, [x29, #96]
    e64c:	ldr	x0, [x29, #120]
    e650:	str	x0, [x29, #104]
    e654:	add	x2, x29, #0x10
    e658:	add	x3, x29, #0x58
    e65c:	ldp	x0, x1, [x3]
    e660:	stp	x0, x1, [x2]
    e664:	ldr	x0, [x3, #16]
    e668:	str	x0, [x2, #16]
    e66c:	add	x0, x29, #0x10
    e670:	mov	x3, x0
    e674:	ldr	x2, [x29, #56]
    e678:	ldr	x1, [x29, #64]
    e67c:	ldr	x0, [x29, #72]
    e680:	bl	e094 <__ubsan_handle_cfi_check_fail_abort@@Base+0x930>
    e684:	nop
    e688:	ldp	x29, x30, [sp], #128
    e68c:	ret

000000000000e690 <__ubsan_handle_dynamic_type_cache_miss_abort@@Base>:
    e690:	stp	x29, x30, [sp, #-128]!
    e694:	mov	x29, sp
    e698:	mov	x3, x30
    e69c:	str	x0, [x29, #72]
    e6a0:	str	x1, [x29, #64]
    e6a4:	str	x2, [x29, #56]
    e6a8:	mov	x0, x29
    e6ac:	str	x0, [x29, #120]
    e6b0:	mov	x0, x3
    e6b4:	str	x0, [x29, #112]
    e6b8:	stp	xzr, xzr, [x29, #88]
    e6bc:	str	xzr, [x29, #104]
    e6c0:	ldr	x0, [x29, #112]
    e6c4:	str	x0, [x29, #96]
    e6c8:	ldr	x0, [x29, #120]
    e6cc:	str	x0, [x29, #104]
    e6d0:	add	x2, x29, #0x10
    e6d4:	add	x3, x29, #0x58
    e6d8:	ldp	x0, x1, [x3]
    e6dc:	stp	x0, x1, [x2]
    e6e0:	ldr	x0, [x3, #16]
    e6e4:	str	x0, [x2, #16]
    e6e8:	add	x0, x29, #0x10
    e6ec:	mov	x3, x0
    e6f0:	ldr	x2, [x29, #56]
    e6f4:	ldr	x1, [x29, #64]
    e6f8:	ldr	x0, [x29, #72]
    e6fc:	bl	e094 <__ubsan_handle_cfi_check_fail_abort@@Base+0x930>
    e700:	and	w0, w0, #0xff
    e704:	cmp	w0, #0x0
    e708:	b.eq	e710 <__ubsan_handle_dynamic_type_cache_miss_abort@@Base+0x80>  // b.none
    e70c:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    e710:	nop
    e714:	ldp	x29, x30, [sp], #128
    e718:	ret

000000000000e71c <__ubsan_handle_cfi_bad_type@@Base>:
    e71c:	sub	sp, sp, #0x8c0
    e720:	stp	x19, x30, [sp]
    e724:	str	x0, [sp, #120]
    e728:	str	x1, [sp, #112]
    e72c:	strb	w2, [sp, #111]
    e730:	mov	x19, x3
    e734:	ldr	x0, [sp, #120]
    e738:	add	x0, x0, #0x8
    e73c:	bl	dad0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x36c>
    e740:	stp	x0, x1, [sp, #232]
    e744:	mov	w0, #0x19                  	// #25
    e748:	str	w0, [sp, #2212]
    e74c:	add	x2, sp, #0x40
    e750:	mov	x3, x19
    e754:	ldp	x0, x1, [x3]
    e758:	stp	x0, x1, [x2]
    e75c:	ldr	x0, [x3, #16]
    e760:	str	x0, [x2, #16]
    e764:	add	x0, sp, #0x40
    e768:	ldr	w3, [sp, #2212]
    e76c:	mov	x2, x0
    e770:	ldp	x0, x1, [sp, #232]
    e774:	bl	9c64 <__ubsan_default_options@@Base+0x600>
    e778:	and	w0, w0, #0xff
    e77c:	cmp	w0, #0x0
    e780:	b.ne	eb18 <__ubsan_handle_cfi_bad_type@@Base+0x3fc>  // b.any
    e784:	add	x0, sp, #0xf8
    e788:	ldp	x1, x2, [sp, #232]
    e78c:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    e790:	add	x2, sp, #0x40
    e794:	mov	x3, x19
    e798:	ldp	x0, x1, [x3]
    e79c:	stp	x0, x1, [x2]
    e7a0:	ldr	x0, [x3, #16]
    e7a4:	str	x0, [x2, #16]
    e7a8:	add	x0, sp, #0x10
    e7ac:	add	x1, sp, #0xf8
    e7b0:	ldp	x2, x3, [x1]
    e7b4:	stp	x2, x3, [x0]
    e7b8:	ldp	x2, x3, [x1, #16]
    e7bc:	stp	x2, x3, [x0, #16]
    e7c0:	ldr	x1, [x1, #32]
    e7c4:	str	x1, [x0, #32]
    e7c8:	add	x2, sp, #0x10
    e7cc:	add	x1, sp, #0x40
    e7d0:	add	x0, sp, #0x98
    e7d4:	ldr	w3, [sp, #2212]
    e7d8:	bl	84b4 <__asan_backtrace_open@plt+0x1844>
    e7dc:	ldrb	w0, [sp, #111]
    e7e0:	cmp	w0, #0x0
    e7e4:	b.eq	e7fc <__ubsan_handle_cfi_bad_type@@Base+0xe0>  // b.none
    e7e8:	ldr	x0, [sp, #112]
    e7ec:	add	x1, sp, #0x80
    e7f0:	mov	x8, x1
    e7f4:	bl	fb68 <__ubsan_get_current_report_data@@Base+0x884>
    e7f8:	b	e810 <__ubsan_handle_cfi_bad_type@@Base+0xf4>
    e7fc:	add	x0, sp, #0x80
    e800:	mov	x3, #0x0                   	// #0
    e804:	mov	x2, #0x0                   	// #0
    e808:	mov	x1, #0x0                   	// #0
    e80c:	bl	ed74 <__ubsan_handle_cfi_bad_type@@Base+0x658>
    e810:	ldr	x0, [sp, #120]
    e814:	ldrb	w0, [x0]
    e818:	cmp	w0, #0x6
    e81c:	b.eq	e8ac <__ubsan_handle_cfi_bad_type@@Base+0x190>  // b.none
    e820:	cmp	w0, #0x6
    e824:	b.gt	e8c0 <__ubsan_handle_cfi_bad_type@@Base+0x1a4>
    e828:	cmp	w0, #0x5
    e82c:	b.gt	e8c0 <__ubsan_handle_cfi_bad_type@@Base+0x1a4>
    e830:	cmp	w0, #0x4
    e834:	b.ge	e8bc <__ubsan_handle_cfi_bad_type@@Base+0x1a0>  // b.tcont
    e838:	cmp	w0, #0x3
    e83c:	b.eq	e89c <__ubsan_handle_cfi_bad_type@@Base+0x180>  // b.none
    e840:	cmp	w0, #0x3
    e844:	b.gt	e8c0 <__ubsan_handle_cfi_bad_type@@Base+0x1a4>
    e848:	cmp	w0, #0x2
    e84c:	b.eq	e88c <__ubsan_handle_cfi_bad_type@@Base+0x170>  // b.none
    e850:	cmp	w0, #0x2
    e854:	b.gt	e8c0 <__ubsan_handle_cfi_bad_type@@Base+0x1a4>
    e858:	cmp	w0, #0x0
    e85c:	b.eq	e86c <__ubsan_handle_cfi_bad_type@@Base+0x150>  // b.none
    e860:	cmp	w0, #0x1
    e864:	b.eq	e87c <__ubsan_handle_cfi_bad_type@@Base+0x160>  // b.none
    e868:	b	e8c0 <__ubsan_handle_cfi_bad_type@@Base+0x1a4>
    e86c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    e870:	add	x0, x0, #0xf00
    e874:	str	x0, [sp, #2232]
    e878:	b	e8c0 <__ubsan_handle_cfi_bad_type@@Base+0x1a4>
    e87c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    e880:	add	x0, x0, #0xf10
    e884:	str	x0, [sp, #2232]
    e888:	b	e8c0 <__ubsan_handle_cfi_bad_type@@Base+0x1a4>
    e88c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    e890:	add	x0, x0, #0xf28
    e894:	str	x0, [sp, #2232]
    e898:	b	e8c0 <__ubsan_handle_cfi_bad_type@@Base+0x1a4>
    e89c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    e8a0:	add	x0, x0, #0xf40
    e8a4:	str	x0, [sp, #2232]
    e8a8:	b	e8c0 <__ubsan_handle_cfi_bad_type@@Base+0x1a4>
    e8ac:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    e8b0:	add	x0, x0, #0xf58
    e8b4:	str	x0, [sp, #2232]
    e8b8:	b	e8c0 <__ubsan_handle_cfi_bad_type@@Base+0x1a4>
    e8bc:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    e8c0:	add	x0, sp, #0x2d8
    e8c4:	ldp	x1, x2, [sp, #232]
    e8c8:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    e8cc:	add	x0, sp, #0x10
    e8d0:	add	x1, sp, #0x2d8
    e8d4:	ldp	x2, x3, [x1]
    e8d8:	stp	x2, x3, [x0]
    e8dc:	ldp	x2, x3, [x1, #16]
    e8e0:	stp	x2, x3, [x0, #16]
    e8e4:	ldr	x1, [x1, #32]
    e8e8:	str	x1, [x0, #32]
    e8ec:	add	x1, sp, #0x10
    e8f0:	add	x5, sp, #0x120
    e8f4:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    e8f8:	add	x4, x0, #0xf80
    e8fc:	ldr	w3, [sp, #2212]
    e900:	mov	w2, #0x0                   	// #0
    e904:	mov	x0, x5
    e908:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    e90c:	ldr	x0, [sp, #120]
    e910:	ldr	x1, [x0, #24]
    e914:	add	x0, sp, #0x120
    e918:	bl	7430 <__asan_backtrace_open@plt+0x7c0>
    e91c:	ldr	x1, [sp, #2232]
    e920:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    e924:	mov	x2, x0
    e928:	ldr	x0, [sp, #112]
    e92c:	mov	x1, x0
    e930:	mov	x0, x2
    e934:	bl	dff0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x88c>
    e938:	add	x0, sp, #0x120
    e93c:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    e940:	add	x0, sp, #0x80
    e944:	bl	edb8 <__ubsan_handle_cfi_bad_type@@Base+0x69c>
    e948:	and	w0, w0, #0xff
    e94c:	eor	w0, w0, #0x1
    e950:	and	w0, w0, #0xff
    e954:	cmp	w0, #0x0
    e958:	b.eq	e9b4 <__ubsan_handle_cfi_bad_type@@Base+0x298>  // b.none
    e95c:	add	x0, sp, #0x4b8
    e960:	ldr	x1, [sp, #112]
    e964:	bl	dd8c <__ubsan_handle_cfi_check_fail_abort@@Base+0x628>
    e968:	add	x0, sp, #0x10
    e96c:	add	x1, sp, #0x4b8
    e970:	ldp	x2, x3, [x1]
    e974:	stp	x2, x3, [x0]
    e978:	ldp	x2, x3, [x1, #16]
    e97c:	stp	x2, x3, [x0, #16]
    e980:	ldr	x1, [x1, #32]
    e984:	str	x1, [x0, #32]
    e988:	add	x1, sp, #0x10
    e98c:	add	x5, sp, #0x300
    e990:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    e994:	add	x4, x0, #0xfd0
    e998:	ldr	w3, [sp, #2212]
    e99c:	mov	w2, #0x1                   	// #1
    e9a0:	mov	x0, x5
    e9a4:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    e9a8:	add	x0, sp, #0x300
    e9ac:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    e9b0:	b	ea28 <__ubsan_handle_cfi_bad_type@@Base+0x30c>
    e9b4:	add	x0, sp, #0x690
    e9b8:	ldr	x1, [sp, #112]
    e9bc:	bl	dd8c <__ubsan_handle_cfi_check_fail_abort@@Base+0x628>
    e9c0:	add	x0, sp, #0x10
    e9c4:	add	x1, sp, #0x690
    e9c8:	ldp	x2, x3, [x1]
    e9cc:	stp	x2, x3, [x0]
    e9d0:	ldp	x2, x3, [x1, #16]
    e9d4:	stp	x2, x3, [x0, #16]
    e9d8:	ldr	x1, [x1, #32]
    e9dc:	str	x1, [x0, #32]
    e9e0:	add	x1, sp, #0x10
    e9e4:	add	x5, sp, #0x4e0
    e9e8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    e9ec:	add	x4, x0, #0xfe0
    e9f0:	ldr	w3, [sp, #2212]
    e9f4:	mov	w2, #0x1                   	// #1
    e9f8:	mov	x0, x5
    e9fc:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    ea00:	add	x0, sp, #0x80
    ea04:	bl	eddc <__ubsan_handle_cfi_bad_type@@Base+0x6c0>
    ea08:	mov	x1, x0
    ea0c:	add	x0, sp, #0x6b8
    ea10:	bl	eb70 <__ubsan_handle_cfi_bad_type@@Base+0x454>
    ea14:	add	x0, sp, #0x4e0
    ea18:	ldr	x1, [sp, #1720]
    ea1c:	bl	ecd0 <__ubsan_handle_cfi_bad_type@@Base+0x5b4>
    ea20:	add	x0, sp, #0x4e0
    ea24:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    ea28:	bl	2e194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f0c>
    ea2c:	ldr	x1, [sp, #112]
    ea30:	bl	8c5c <__asan_backtrace_open@plt+0x1fec>
    ea34:	str	x0, [sp, #2224]
    ea38:	ldr	x0, [sp, #2224]
    ea3c:	cmp	x0, #0x0
    ea40:	b.ne	ea50 <__ubsan_handle_cfi_bad_type@@Base+0x334>  // b.any
    ea44:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    ea48:	add	x0, x0, #0xff8
    ea4c:	str	x0, [sp, #2224]
    ea50:	bl	2e194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f0c>
    ea54:	mov	x2, x0
    ea58:	ldr	x0, [x19, #8]
    ea5c:	mov	x1, x0
    ea60:	mov	x0, x2
    ea64:	bl	8c5c <__asan_backtrace_open@plt+0x1fec>
    ea68:	str	x0, [sp, #2216]
    ea6c:	ldr	x0, [sp, #2216]
    ea70:	cmp	x0, #0x0
    ea74:	b.ne	ea84 <__ubsan_handle_cfi_bad_type@@Base+0x368>  // b.any
    ea78:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    ea7c:	add	x0, x0, #0xff8
    ea80:	str	x0, [sp, #2216]
    ea84:	ldr	x1, [sp, #2224]
    ea88:	ldr	x0, [sp, #2216]
    ea8c:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
    ea90:	cmp	w0, #0x0
    ea94:	cset	w0, ne  // ne = any
    ea98:	and	w0, w0, #0xff
    ea9c:	cmp	w0, #0x0
    eaa0:	b.eq	eb0c <__ubsan_handle_cfi_bad_type@@Base+0x3f0>  // b.none
    eaa4:	add	x0, sp, #0x878
    eaa8:	ldp	x1, x2, [sp, #232]
    eaac:	bl	dd5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x5f8>
    eab0:	add	x0, sp, #0x10
    eab4:	add	x1, sp, #0x878
    eab8:	ldp	x2, x3, [x1]
    eabc:	stp	x2, x3, [x0]
    eac0:	ldp	x2, x3, [x1, #16]
    eac4:	stp	x2, x3, [x0, #16]
    eac8:	ldr	x1, [x1, #32]
    eacc:	str	x1, [x0, #32]
    ead0:	add	x1, sp, #0x10
    ead4:	add	x5, sp, #0x6c0
    ead8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
    eadc:	add	x4, x0, #0x8
    eae0:	ldr	w3, [sp, #2212]
    eae4:	mov	w2, #0x1                   	// #1
    eae8:	mov	x0, x5
    eaec:	bl	de80 <__ubsan_handle_cfi_check_fail_abort@@Base+0x71c>
    eaf0:	add	x0, sp, #0x6c0
    eaf4:	ldr	x1, [sp, #2216]
    eaf8:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    eafc:	ldr	x1, [sp, #2224]
    eb00:	bl	df58 <__ubsan_handle_cfi_check_fail_abort@@Base+0x7f4>
    eb04:	add	x0, sp, #0x6c0
    eb08:	bl	8274 <__asan_backtrace_open@plt+0x1604>
    eb0c:	add	x0, sp, #0x98
    eb10:	bl	8540 <__asan_backtrace_open@plt+0x18d0>
    eb14:	b	eb1c <__ubsan_handle_cfi_bad_type@@Base+0x400>
    eb18:	nop
    eb1c:	ldp	x19, x30, [sp]
    eb20:	add	sp, sp, #0x8c0
    eb24:	ret
    eb28:	str	x30, [sp, #-48]!
    eb2c:	str	x0, [sp, #40]
    eb30:	str	x1, [sp, #32]
    eb34:	str	x2, [sp, #24]
    eb38:	str	x3, [sp, #16]
    eb3c:	ldr	x0, [sp, #40]
    eb40:	ldr	x1, [sp, #32]
    eb44:	bl	dd8c <__ubsan_handle_cfi_check_fail_abort@@Base+0x628>
    eb48:	ldr	x0, [sp, #40]
    eb4c:	add	x0, x0, #0x28
    eb50:	ldr	x1, [sp, #24]
    eb54:	bl	dd8c <__ubsan_handle_cfi_check_fail_abort@@Base+0x628>
    eb58:	ldr	x0, [sp, #40]
    eb5c:	ldr	x1, [sp, #16]
    eb60:	str	x1, [x0, #80]
    eb64:	nop
    eb68:	ldr	x30, [sp], #48
    eb6c:	ret
    eb70:	sub	sp, sp, #0x10
    eb74:	str	x0, [sp, #8]
    eb78:	str	x1, [sp]
    eb7c:	ldr	x0, [sp, #8]
    eb80:	ldr	x1, [sp]
    eb84:	str	x1, [x0]
    eb88:	nop
    eb8c:	add	sp, sp, #0x10
    eb90:	ret
    eb94:	sub	sp, sp, #0x10
    eb98:	str	x0, [sp, #8]
    eb9c:	ldr	x0, [sp, #8]
    eba0:	ldr	x0, [x0]
    eba4:	add	sp, sp, #0x10
    eba8:	ret
    ebac:	str	x30, [sp, #-32]!
    ebb0:	str	x0, [sp, #24]
    ebb4:	str	x1, [sp, #16]
    ebb8:	ldr	x0, [sp, #24]
    ebbc:	mov	w1, #0x1                   	// #1
    ebc0:	str	w1, [x0]
    ebc4:	add	x0, sp, #0x10
    ebc8:	bl	eb94 <__ubsan_handle_cfi_bad_type@@Base+0x478>
    ebcc:	mov	x1, x0
    ebd0:	ldr	x0, [sp, #24]
    ebd4:	str	x1, [x0, #16]
    ebd8:	nop
    ebdc:	ldr	x30, [sp], #32
    ebe0:	ret
    ebe4:	stp	x19, x30, [sp, #-48]!
    ebe8:	str	x0, [sp, #24]
    ebec:	mov	x19, x1
    ebf0:	ldr	x0, [sp, #24]
    ebf4:	ldr	w0, [x0, #416]
    ebf8:	cmp	w0, #0x1
    ebfc:	cset	w0, ne  // ne = any
    ec00:	and	w0, w0, #0xff
    ec04:	and	x0, x0, #0xff
    ec08:	str	x0, [sp, #40]
    ec0c:	str	xzr, [sp, #32]
    ec10:	ldr	x1, [sp, #40]
    ec14:	ldr	x0, [sp, #32]
    ec18:	cmp	x1, x0
    ec1c:	cset	w0, eq  // eq = none
    ec20:	and	w0, w0, #0xff
    ec24:	and	x0, x0, #0xff
    ec28:	cmp	x0, #0x0
    ec2c:	b.eq	ec50 <__ubsan_handle_cfi_bad_type@@Base+0x534>  // b.none
    ec30:	ldr	x4, [sp, #32]
    ec34:	ldr	x3, [sp, #40]
    ec38:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    ec3c:	add	x2, x0, #0xd80
    ec40:	mov	w1, #0xc5                  	// #197
    ec44:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x970>
    ec48:	add	x0, x0, #0xd50
    ec4c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    ec50:	ldr	x0, [sp, #24]
    ec54:	ldr	w0, [x0, #416]
    ec58:	add	w2, w0, #0x1
    ec5c:	ldr	x1, [sp, #24]
    ec60:	str	w2, [x1, #416]
    ec64:	ldr	x2, [sp, #24]
    ec68:	mov	w1, w0
    ec6c:	mov	x0, x1
    ec70:	lsl	x0, x0, #1
    ec74:	add	x0, x0, x1
    ec78:	lsl	x0, x0, #2
    ec7c:	sub	x0, x0, x1
    ec80:	lsl	x0, x0, #3
    ec84:	add	x0, x2, x0
    ec88:	add	x0, x0, #0x140
    ec8c:	add	x0, x0, #0x8
    ec90:	mov	x1, x19
    ec94:	ldp	x2, x3, [x1]
    ec98:	stp	x2, x3, [x0]
    ec9c:	ldp	x2, x3, [x1, #16]
    eca0:	stp	x2, x3, [x0, #16]
    eca4:	ldp	x2, x3, [x1, #32]
    eca8:	stp	x2, x3, [x0, #32]
    ecac:	ldp	x2, x3, [x1, #48]
    ecb0:	stp	x2, x3, [x0, #48]
    ecb4:	ldp	x2, x3, [x1, #64]
    ecb8:	stp	x2, x3, [x0, #64]
    ecbc:	ldr	x1, [x1, #80]
    ecc0:	str	x1, [x0, #80]
    ecc4:	ldr	x0, [sp, #24]
    ecc8:	ldp	x19, x30, [sp], #48
    eccc:	ret
    ecd0:	str	x30, [sp, #-96]!
    ecd4:	str	x0, [sp, #56]
    ecd8:	str	x1, [sp, #48]
    ecdc:	add	x0, sp, #0x40
    ece0:	ldr	x1, [sp, #48]
    ece4:	bl	ebac <__ubsan_handle_cfi_bad_type@@Base+0x490>
    ece8:	add	x2, sp, #0x10
    ecec:	add	x3, sp, #0x40
    ecf0:	ldp	x0, x1, [x3]
    ecf4:	stp	x0, x1, [x2]
    ecf8:	ldp	x0, x1, [x3, #16]
    ecfc:	stp	x0, x1, [x2, #16]
    ed00:	add	x0, sp, #0x10
    ed04:	mov	x1, x0
    ed08:	ldr	x0, [sp, #56]
    ed0c:	bl	9044 <__asan_backtrace_open@plt+0x23d4>
    ed10:	ldr	x30, [sp], #96
    ed14:	ret
    ed18:	str	x30, [sp, #-128]!
    ed1c:	str	x0, [sp, #120]
    ed20:	str	x1, [sp, #112]
    ed24:	ldr	x1, [sp, #112]
    ed28:	add	x0, sp, #0x10
    ed2c:	ldp	x2, x3, [x1]
    ed30:	stp	x2, x3, [x0]
    ed34:	ldp	x2, x3, [x1, #16]
    ed38:	stp	x2, x3, [x0, #16]
    ed3c:	ldp	x2, x3, [x1, #32]
    ed40:	stp	x2, x3, [x0, #32]
    ed44:	ldp	x2, x3, [x1, #48]
    ed48:	stp	x2, x3, [x0, #48]
    ed4c:	ldp	x2, x3, [x1, #64]
    ed50:	stp	x2, x3, [x0, #64]
    ed54:	ldr	x1, [x1, #80]
    ed58:	str	x1, [x0, #80]
    ed5c:	add	x0, sp, #0x10
    ed60:	mov	x1, x0
    ed64:	ldr	x0, [sp, #120]
    ed68:	bl	ebe4 <__ubsan_handle_cfi_bad_type@@Base+0x4c8>
    ed6c:	ldr	x30, [sp], #128
    ed70:	ret
    ed74:	sub	sp, sp, #0x20
    ed78:	str	x0, [sp, #24]
    ed7c:	str	x1, [sp, #16]
    ed80:	str	x2, [sp, #8]
    ed84:	str	x3, [sp]
    ed88:	ldr	x0, [sp, #24]
    ed8c:	ldr	x1, [sp, #16]
    ed90:	str	x1, [x0]
    ed94:	ldr	x0, [sp, #24]
    ed98:	ldr	x1, [sp, #8]
    ed9c:	str	x1, [x0, #8]
    eda0:	ldr	x0, [sp, #24]
    eda4:	ldr	x1, [sp]
    eda8:	str	x1, [x0, #16]
    edac:	nop
    edb0:	add	sp, sp, #0x20
    edb4:	ret
    edb8:	sub	sp, sp, #0x10
    edbc:	str	x0, [sp, #8]
    edc0:	ldr	x0, [sp, #8]
    edc4:	ldr	x0, [x0]
    edc8:	cmp	x0, #0x0
    edcc:	cset	w0, ne  // ne = any
    edd0:	and	w0, w0, #0xff
    edd4:	add	sp, sp, #0x10
    edd8:	ret
    eddc:	sub	sp, sp, #0x10
    ede0:	str	x0, [sp, #8]
    ede4:	ldr	x0, [sp, #8]
    ede8:	ldr	x0, [x0]
    edec:	add	sp, sp, #0x10
    edf0:	ret
    edf4:	sub	sp, sp, #0x10
    edf8:	str	x0, [sp, #8]
    edfc:	ldr	x0, [sp, #8]
    ee00:	ldr	x0, [x0, #8]
    ee04:	add	sp, sp, #0x10
    ee08:	ret
    ee0c:	sub	sp, sp, #0x10
    ee10:	str	x0, [sp, #8]
    ee14:	ldr	x0, [sp, #8]
    ee18:	ldr	x0, [x0, #16]
    ee1c:	add	sp, sp, #0x10
    ee20:	ret
    ee24:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
    ee28:	add	x0, x0, #0x90
    ee2c:	ret
    ee30:	str	x30, [sp, #-16]!
    ee34:	bl	85c8 <__asan_backtrace_open@plt+0x1958>
    ee38:	nop
    ee3c:	ldr	x30, [sp], #16
    ee40:	ret
    ee44:	stp	x19, x30, [sp, #-16]!
    ee48:	bl	ee24 <__ubsan_handle_cfi_bad_type@@Base+0x708>
    ee4c:	mov	x1, x0
    ee50:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    ee54:	ldr	x0, [x0, #4024]
    ee58:	str	x1, [x0]
    ee5c:	bl	14630 <__sancov_default_options@@Base+0x4284>
    ee60:	bl	97ac <__ubsan_default_options@@Base+0x148>
    ee64:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
    ee68:	ldr	x0, [x0, #40]
    ee6c:	bl	6c20 <__sanitizer_set_report_path@plt>
    ee70:	bl	218f4 <__sanitizer_set_report_fd@@Base+0x7748>
    ee74:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
    ee78:	ldrb	w19, [x0, #161]
    ee7c:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
    ee80:	ldr	x0, [x0, #168]
    ee84:	mov	x1, x0
    ee88:	mov	w0, w19
    ee8c:	bl	158ec <__sanitizer_sandbox_on_notify@@Base+0x748>
    ee90:	bl	ee30 <__ubsan_handle_cfi_bad_type@@Base+0x714>
    ee94:	nop
    ee98:	ldp	x19, x30, [sp], #16
    ee9c:	ret
    eea0:	str	x30, [sp, #-32]!
    eea4:	add	x2, sp, #0x18
    eea8:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    eeac:	add	x1, x0, #0xe38
    eeb0:	mov	x0, x2
    eeb4:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
    eeb8:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    eebc:	add	x0, x0, #0xe30
    eec0:	ldrb	w0, [x0]
    eec4:	eor	w0, w0, #0x1
    eec8:	and	w0, w0, #0xff
    eecc:	cmp	w0, #0x0
    eed0:	b.eq	eee8 <__ubsan_handle_cfi_bad_type@@Base+0x7cc>  // b.none
    eed4:	bl	ee44 <__ubsan_handle_cfi_bad_type@@Base+0x728>
    eed8:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    eedc:	add	x0, x0, #0xe30
    eee0:	mov	w1, #0x1                   	// #1
    eee4:	strb	w1, [x0]
    eee8:	add	x0, sp, #0x18
    eeec:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
    eef0:	nop
    eef4:	ldr	x30, [sp], #32
    eef8:	ret
    eefc:	str	x30, [sp, #-16]!
    ef00:	bl	eea0 <__ubsan_handle_cfi_bad_type@@Base+0x784>
    ef04:	nop
    ef08:	ldr	x30, [sp], #16
    ef0c:	ret
    ef10:	str	x30, [sp, #-32]!
    ef14:	add	x2, sp, #0x18
    ef18:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    ef1c:	add	x1, x0, #0xe38
    ef20:	mov	x0, x2
    ef24:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
    ef28:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    ef2c:	add	x0, x0, #0xe30
    ef30:	ldrb	w0, [x0]
    ef34:	eor	w0, w0, #0x1
    ef38:	and	w0, w0, #0xff
    ef3c:	cmp	w0, #0x0
    ef40:	b.eq	ef58 <__ubsan_handle_cfi_bad_type@@Base+0x83c>  // b.none
    ef44:	bl	ee30 <__ubsan_handle_cfi_bad_type@@Base+0x714>
    ef48:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    ef4c:	add	x0, x0, #0xe30
    ef50:	mov	w1, #0x1                   	// #1
    ef54:	strb	w1, [x0]
    ef58:	add	x0, sp, #0x18
    ef5c:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
    ef60:	nop
    ef64:	ldr	x30, [sp], #32
    ef68:	ret
    ef6c:	sub	sp, sp, #0x10
    ef70:	str	w0, [sp, #12]
    ef74:	nop
    ef78:	add	sp, sp, #0x10
    ef7c:	ret
    ef80:	str	x30, [sp, #-32]!
    ef84:	str	x0, [sp, #24]
    ef88:	ldr	x0, [sp, #24]
    ef8c:	bl	efb4 <__ubsan_handle_cfi_bad_type@@Base+0x898>
    ef90:	and	w0, w0, #0xff
    ef94:	cmp	w0, #0x0
    ef98:	b.ne	efa8 <__ubsan_handle_cfi_bad_type@@Base+0x88c>  // b.any
    ef9c:	ldr	x0, [sp, #24]
    efa0:	bl	f008 <__ubsan_handle_cfi_bad_type@@Base+0x8ec>
    efa4:	b	efac <__ubsan_handle_cfi_bad_type@@Base+0x890>
    efa8:	nop
    efac:	ldr	x30, [sp], #32
    efb0:	ret
    efb4:	str	x30, [sp, #-32]!
    efb8:	str	x0, [sp, #24]
    efbc:	ldr	x0, [sp, #24]
    efc0:	mov	w2, #0x4                   	// #4
    efc4:	mov	w1, #0x1                   	// #1
    efc8:	bl	f100 <__ubsan_handle_cfi_bad_type@@Base+0x9e4>
    efcc:	and	w0, w0, #0xff
    efd0:	cmp	w0, #0x0
    efd4:	cset	w0, eq  // eq = none
    efd8:	and	w0, w0, #0xff
    efdc:	ldr	x30, [sp], #32
    efe0:	ret
    efe4:	str	x30, [sp, #-32]!
    efe8:	str	x0, [sp, #24]
    efec:	ldr	x0, [sp, #24]
    eff0:	mov	w2, #0x8                   	// #8
    eff4:	mov	w1, #0x0                   	// #0
    eff8:	bl	f094 <__ubsan_handle_cfi_bad_type@@Base+0x978>
    effc:	nop
    f000:	ldr	x30, [sp], #32
    f004:	ret
    f008:	str	x30, [sp, #-48]!
    f00c:	str	x0, [sp, #24]
    f010:	str	wzr, [sp, #44]
    f014:	ldr	w0, [sp, #44]
    f018:	cmp	w0, #0x9
    f01c:	b.gt	f02c <__ubsan_handle_cfi_bad_type@@Base+0x910>
    f020:	mov	w0, #0xa                   	// #10
    f024:	bl	ef6c <__ubsan_handle_cfi_bad_type@@Base+0x850>
    f028:	b	f030 <__ubsan_handle_cfi_bad_type@@Base+0x914>
    f02c:	bl	1e668 <__sanitizer_set_report_fd@@Base+0x44bc>
    f030:	ldr	x0, [sp, #24]
    f034:	mov	w1, #0x1                   	// #1
    f038:	bl	f15c <__ubsan_handle_cfi_bad_type@@Base+0xa40>
    f03c:	and	w0, w0, #0xff
    f040:	cmp	w0, #0x0
    f044:	b.ne	f06c <__ubsan_handle_cfi_bad_type@@Base+0x950>  // b.any
    f048:	ldr	x0, [sp, #24]
    f04c:	mov	w2, #0x4                   	// #4
    f050:	mov	w1, #0x1                   	// #1
    f054:	bl	f100 <__ubsan_handle_cfi_bad_type@@Base+0x9e4>
    f058:	and	w0, w0, #0xff
    f05c:	cmp	w0, #0x0
    f060:	b.ne	f06c <__ubsan_handle_cfi_bad_type@@Base+0x950>  // b.any
    f064:	mov	w0, #0x1                   	// #1
    f068:	b	f070 <__ubsan_handle_cfi_bad_type@@Base+0x954>
    f06c:	mov	w0, #0x0                   	// #0
    f070:	cmp	w0, #0x0
    f074:	b.ne	f088 <__ubsan_handle_cfi_bad_type@@Base+0x96c>  // b.any
    f078:	ldr	w0, [sp, #44]
    f07c:	add	w0, w0, #0x1
    f080:	str	w0, [sp, #44]
    f084:	b	f014 <__ubsan_handle_cfi_bad_type@@Base+0x8f8>
    f088:	nop
    f08c:	ldr	x30, [sp], #48
    f090:	ret
    f094:	sub	sp, sp, #0x10
    f098:	str	x0, [sp, #8]
    f09c:	strb	w1, [sp, #7]
    f0a0:	str	w2, [sp]
    f0a4:	ldr	w0, [sp]
    f0a8:	cmp	w0, #0x1
    f0ac:	b.ne	f0c0 <__ubsan_handle_cfi_bad_type@@Base+0x9a4>  // b.any
    f0b0:	ldr	x0, [sp, #8]
    f0b4:	ldrb	w1, [sp, #7]
    f0b8:	strb	w1, [x0]
    f0bc:	b	f0f4 <__ubsan_handle_cfi_bad_type@@Base+0x9d8>
    f0c0:	ldr	w0, [sp]
    f0c4:	cmp	w0, #0x8
    f0c8:	b.ne	f0e0 <__ubsan_handle_cfi_bad_type@@Base+0x9c4>  // b.any
    f0cc:	dmb	ish
    f0d0:	ldr	x0, [sp, #8]
    f0d4:	ldrb	w1, [sp, #7]
    f0d8:	strb	w1, [x0]
    f0dc:	b	f0f4 <__ubsan_handle_cfi_bad_type@@Base+0x9d8>
    f0e0:	dmb	ish
    f0e4:	ldr	x0, [sp, #8]
    f0e8:	ldrb	w1, [sp, #7]
    f0ec:	strb	w1, [x0]
    f0f0:	dmb	ish
    f0f4:	nop
    f0f8:	add	sp, sp, #0x10
    f0fc:	ret
    f100:	sub	sp, sp, #0x10
    f104:	str	x0, [sp, #8]
    f108:	strb	w1, [sp, #7]
    f10c:	str	w2, [sp]
    f110:	ldr	w0, [sp]
    f114:	and	w0, w0, #0x38
    f118:	cmp	w0, #0x0
    f11c:	b.eq	f124 <__ubsan_handle_cfi_bad_type@@Base+0xa08>  // b.none
    f120:	dmb	ish
    f124:	ldr	x1, [sp, #8]
    f128:	ldrb	w2, [sp, #7]
    f12c:	ldxrb	w0, [x1]
    f130:	stxrb	w3, w2, [x1]
    f134:	cbnz	w3, f12c <__ubsan_handle_cfi_bad_type@@Base+0xa10>
    f138:	dmb	ish
    f13c:	strb	w0, [sp, #7]
    f140:	ldr	w0, [sp]
    f144:	cmp	w0, #0x20
    f148:	b.ne	f150 <__ubsan_handle_cfi_bad_type@@Base+0xa34>  // b.any
    f14c:	dmb	ish
    f150:	ldrb	w0, [sp, #7]
    f154:	add	sp, sp, #0x10
    f158:	ret
    f15c:	sub	sp, sp, #0x20
    f160:	str	x0, [sp, #8]
    f164:	str	w1, [sp, #4]
    f168:	ldr	w0, [sp, #4]
    f16c:	cmp	w0, #0x1
    f170:	b.ne	f184 <__ubsan_handle_cfi_bad_type@@Base+0xa68>  // b.any
    f174:	ldr	x0, [sp, #8]
    f178:	ldrb	w0, [x0]
    f17c:	strb	w0, [sp, #31]
    f180:	b	f1d4 <__ubsan_handle_cfi_bad_type@@Base+0xab8>
    f184:	ldr	w0, [sp, #4]
    f188:	cmp	w0, #0x2
    f18c:	b.ne	f1a0 <__ubsan_handle_cfi_bad_type@@Base+0xa84>  // b.any
    f190:	ldr	x0, [sp, #8]
    f194:	ldrb	w0, [x0]
    f198:	strb	w0, [sp, #31]
    f19c:	b	f1d4 <__ubsan_handle_cfi_bad_type@@Base+0xab8>
    f1a0:	ldr	w0, [sp, #4]
    f1a4:	cmp	w0, #0x4
    f1a8:	b.ne	f1c0 <__ubsan_handle_cfi_bad_type@@Base+0xaa4>  // b.any
    f1ac:	ldr	x0, [sp, #8]
    f1b0:	ldrb	w0, [x0]
    f1b4:	strb	w0, [sp, #31]
    f1b8:	dmb	ish
    f1bc:	b	f1d4 <__ubsan_handle_cfi_bad_type@@Base+0xab8>
    f1c0:	dmb	ish
    f1c4:	ldr	x0, [sp, #8]
    f1c8:	ldrb	w0, [x0]
    f1cc:	strb	w0, [sp, #31]
    f1d0:	dmb	ish
    f1d4:	ldrb	w0, [sp, #31]
    f1d8:	add	sp, sp, #0x20
    f1dc:	ret
    f1e0:	str	x30, [sp, #-32]!
    f1e4:	str	x0, [sp, #24]
    f1e8:	str	x1, [sp, #16]
    f1ec:	ldr	x0, [sp, #24]
    f1f0:	ldr	x1, [sp, #16]
    f1f4:	str	x1, [x0]
    f1f8:	ldr	x0, [sp, #24]
    f1fc:	ldr	x0, [x0]
    f200:	bl	ef80 <__ubsan_handle_cfi_bad_type@@Base+0x864>
    f204:	nop
    f208:	ldr	x30, [sp], #32
    f20c:	ret
    f210:	str	x30, [sp, #-32]!
    f214:	str	x0, [sp, #24]
    f218:	ldr	x0, [sp, #24]
    f21c:	ldr	x0, [x0]
    f220:	bl	efe4 <__ubsan_handle_cfi_bad_type@@Base+0x8c8>
    f224:	nop
    f228:	ldr	x30, [sp], #32
    f22c:	ret
    f230:	stp	x19, x30, [sp, #-48]!
    f234:	str	x0, [sp, #40]
    f238:	str	x1, [sp, #32]
    f23c:	str	x2, [sp, #24]
    f240:	str	x3, [sp, #16]
    f244:	ldr	x0, [sp, #40]
    f248:	ldr	x1, [sp, #32]
    f24c:	str	x1, [x0]
    f250:	ldr	x0, [sp, #40]
    f254:	ldr	x1, [sp, #24]
    f258:	str	x1, [x0, #8]
    f25c:	ldr	x0, [sp, #40]
    f260:	add	x19, x0, #0x10
    f264:	ldr	x0, [sp, #16]
    f268:	bl	f518 <__ubsan_get_current_report_data@@Base+0x234>
    f26c:	add	x0, x0, #0x1
    f270:	mov	x1, x0
    f274:	mov	x0, x19
    f278:	bl	89fc <__asan_backtrace_open@plt+0x1d8c>
    f27c:	ldr	x0, [sp, #40]
    f280:	bl	67e0 <_ZN7__ubsan31RegisterUndefinedBehaviorReportEPNS_23UndefinedBehaviorReportE@plt>
    f284:	ldr	x0, [sp, #40]
    f288:	add	x19, x0, #0x10
    f28c:	ldr	x0, [sp, #16]
    f290:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
    f294:	mov	x2, x0
    f298:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
    f29c:	add	x1, x0, #0x190
    f2a0:	mov	x0, x19
    f2a4:	bl	25bdc <OnPrint@@Base+0x5bc>
    f2a8:	bl	6910 <__ubsan_on_report@plt>
    f2ac:	nop
    f2b0:	ldp	x19, x30, [sp], #48
    f2b4:	ret

000000000000f2b8 <_ZN7__ubsan31RegisterUndefinedBehaviorReportEPNS_23UndefinedBehaviorReportE@@Base>:
    f2b8:	sub	sp, sp, #0x10
    f2bc:	str	x0, [sp, #8]
    f2c0:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    f2c4:	add	x0, x0, #0xe40
    f2c8:	ldr	x1, [sp, #8]
    f2cc:	str	x1, [x0]
    f2d0:	nop
    f2d4:	add	sp, sp, #0x10
    f2d8:	ret

000000000000f2dc <__ubsan_on_report@@Base>:
    f2dc:	nop
    f2e0:	ret

000000000000f2e4 <__ubsan_get_current_report_data@@Base>:
    f2e4:	str	x30, [sp, #-112]!
    f2e8:	str	x0, [sp, #56]
    f2ec:	str	x1, [sp, #48]
    f2f0:	str	x2, [sp, #40]
    f2f4:	str	x3, [sp, #32]
    f2f8:	str	x4, [sp, #24]
    f2fc:	str	x5, [sp, #16]
    f300:	ldr	x0, [sp, #56]
    f304:	cmp	x0, #0x0
    f308:	b.eq	f348 <__ubsan_get_current_report_data@@Base+0x64>  // b.none
    f30c:	ldr	x0, [sp, #48]
    f310:	cmp	x0, #0x0
    f314:	b.eq	f348 <__ubsan_get_current_report_data@@Base+0x64>  // b.none
    f318:	ldr	x0, [sp, #40]
    f31c:	cmp	x0, #0x0
    f320:	b.eq	f348 <__ubsan_get_current_report_data@@Base+0x64>  // b.none
    f324:	ldr	x0, [sp, #32]
    f328:	cmp	x0, #0x0
    f32c:	b.eq	f348 <__ubsan_get_current_report_data@@Base+0x64>  // b.none
    f330:	ldr	x0, [sp, #24]
    f334:	cmp	x0, #0x0
    f338:	b.eq	f348 <__ubsan_get_current_report_data@@Base+0x64>  // b.none
    f33c:	ldr	x0, [sp, #16]
    f340:	cmp	x0, #0x0
    f344:	b.ne	f394 <__ubsan_get_current_report_data@@Base+0xb0>  // b.any
    f348:	str	xzr, [sp, #88]
    f34c:	str	xzr, [sp, #80]
    f350:	ldr	x1, [sp, #88]
    f354:	ldr	x0, [sp, #80]
    f358:	cmp	x1, x0
    f35c:	cset	w0, eq  // eq = none
    f360:	and	w0, w0, #0xff
    f364:	and	x0, x0, #0xff
    f368:	cmp	x0, #0x0
    f36c:	b.eq	f390 <__ubsan_get_current_report_data@@Base+0xac>  // b.none
    f370:	ldr	x4, [sp, #80]
    f374:	ldr	x3, [sp, #88]
    f378:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
    f37c:	add	x2, x0, #0x198
    f380:	mov	w1, #0x30                  	// #48
    f384:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
    f388:	add	x0, x0, #0x1e8
    f38c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    f390:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    f394:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    f398:	add	x0, x0, #0xe40
    f39c:	ldr	x0, [x0]
    f3a0:	add	x0, x0, #0x10
    f3a4:	str	x0, [sp, #104]
    f3a8:	ldr	x0, [sp, #104]
    f3ac:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
    f3b0:	ldrb	w0, [x0]
    f3b4:	strb	w0, [sp, #103]
    f3b8:	ldrb	w0, [sp, #103]
    f3bc:	cmp	w0, #0x60
    f3c0:	b.ls	f3ec <__ubsan_get_current_report_data@@Base+0x108>  // b.plast
    f3c4:	ldrb	w0, [sp, #103]
    f3c8:	cmp	w0, #0x7a
    f3cc:	b.hi	f3ec <__ubsan_get_current_report_data@@Base+0x108>  // b.pmore
    f3d0:	ldr	x0, [sp, #104]
    f3d4:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
    f3d8:	mov	x1, x0
    f3dc:	ldrb	w0, [sp, #103]
    f3e0:	sub	w0, w0, #0x20
    f3e4:	and	w0, w0, #0xff
    f3e8:	strb	w0, [x1]
    f3ec:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    f3f0:	add	x0, x0, #0xe40
    f3f4:	ldr	x0, [x0]
    f3f8:	ldr	x1, [x0]
    f3fc:	ldr	x0, [sp, #56]
    f400:	str	x1, [x0]
    f404:	ldr	x0, [sp, #104]
    f408:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
    f40c:	mov	x1, x0
    f410:	ldr	x0, [sp, #48]
    f414:	str	x1, [x0]
    f418:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    f41c:	add	x0, x0, #0xe40
    f420:	ldr	x0, [x0]
    f424:	ldr	x0, [x0, #8]
    f428:	bl	8d48 <__asan_backtrace_open@plt+0x20d8>
    f42c:	and	w0, w0, #0xff
    f430:	eor	w0, w0, #0x1
    f434:	and	w0, w0, #0xff
    f438:	cmp	w0, #0x0
    f43c:	b.eq	f46c <__ubsan_get_current_report_data@@Base+0x188>  // b.none
    f440:	ldr	x0, [sp, #40]
    f444:	adrp	x1, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
    f448:	add	x1, x1, #0x218
    f44c:	str	x1, [x0]
    f450:	ldr	x0, [sp, #24]
    f454:	str	wzr, [x0]
    f458:	ldr	x0, [sp, #24]
    f45c:	ldr	w1, [x0]
    f460:	ldr	x0, [sp, #32]
    f464:	str	w1, [x0]
    f468:	b	f4c0 <__ubsan_get_current_report_data@@Base+0x1dc>
    f46c:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    f470:	add	x0, x0, #0xe40
    f474:	ldr	x0, [x0]
    f478:	ldr	x0, [x0, #8]
    f47c:	bl	8db4 <__asan_backtrace_open@plt+0x2144>
    f480:	stp	x0, x1, [sp, #64]
    f484:	add	x0, sp, #0x40
    f488:	bl	8a88 <__asan_backtrace_open@plt+0x1e18>
    f48c:	mov	x1, x0
    f490:	ldr	x0, [sp, #40]
    f494:	str	x1, [x0]
    f498:	add	x0, sp, #0x40
    f49c:	bl	8aa0 <__asan_backtrace_open@plt+0x1e30>
    f4a0:	mov	w1, w0
    f4a4:	ldr	x0, [sp, #32]
    f4a8:	str	w1, [x0]
    f4ac:	add	x0, sp, #0x40
    f4b0:	bl	8ab8 <__asan_backtrace_open@plt+0x1e48>
    f4b4:	mov	w1, w0
    f4b8:	ldr	x0, [sp, #24]
    f4bc:	str	w1, [x0]
    f4c0:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    f4c4:	add	x0, x0, #0xe40
    f4c8:	ldr	x0, [x0]
    f4cc:	ldr	x0, [x0, #8]
    f4d0:	bl	8d6c <__asan_backtrace_open@plt+0x20fc>
    f4d4:	and	w0, w0, #0xff
    f4d8:	cmp	w0, #0x0
    f4dc:	b.eq	f504 <__ubsan_get_current_report_data@@Base+0x220>  // b.none
    f4e0:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
    f4e4:	add	x0, x0, #0xe40
    f4e8:	ldr	x0, [x0]
    f4ec:	ldr	x0, [x0, #8]
    f4f0:	bl	8e24 <__asan_backtrace_open@plt+0x21b4>
    f4f4:	mov	x1, x0
    f4f8:	ldr	x0, [sp, #16]
    f4fc:	str	x1, [x0]
    f500:	b	f50c <__ubsan_get_current_report_data@@Base+0x228>
    f504:	ldr	x0, [sp, #16]
    f508:	str	xzr, [x0]
    f50c:	nop
    f510:	ldr	x30, [sp], #112
    f514:	ret
    f518:	sub	sp, sp, #0x10
    f51c:	str	x0, [sp, #8]
    f520:	ldr	x0, [sp, #8]
    f524:	ldr	x0, [x0, #24]
    f528:	add	sp, sp, #0x10
    f52c:	ret
    f530:	str	x30, [sp, #-48]!
    f534:	mov	x1, x8
    f538:	str	x0, [sp, #24]
    f53c:	ldr	x0, [sp, #24]
    f540:	ldr	x0, [x0]
    f544:	str	x0, [sp, #40]
    f548:	mov	x8, x1
    f54c:	ldr	x0, [sp, #40]
    f550:	bl	fb68 <__ubsan_get_current_report_data@@Base+0x884>
    f554:	ldr	x30, [sp], #48
    f558:	ret
    f55c:	sub	sp, sp, #0x20
    f560:	str	x0, [sp, #8]
    f564:	ldr	x0, [sp, #8]
    f568:	and	w0, w0, #0xffff
    f56c:	eor	w0, w0, #0x1
    f570:	str	w0, [sp, #20]
    f574:	ldr	w0, [sp, #20]
    f578:	str	w0, [sp, #28]
    f57c:	mov	w0, #0x5                   	// #5
    f580:	str	w0, [sp, #24]
    f584:	ldr	w0, [sp, #24]
    f588:	cmp	w0, #0x0
    f58c:	b.eq	f624 <__ubsan_get_current_report_data@@Base+0x340>  // b.none
    f590:	adrp	x0, 7a000 <__ubsan_vptr_type_cache@@Base+0x1b8>
    f594:	add	x0, x0, #0x248
    f598:	ldr	w1, [sp, #28]
    f59c:	ldr	x0, [x0, x1, lsl #3]
    f5a0:	cmp	x0, #0x0
    f5a4:	b.eq	f5c4 <__ubsan_get_current_report_data@@Base+0x2e0>  // b.none
    f5a8:	adrp	x0, 7a000 <__ubsan_vptr_type_cache@@Base+0x1b8>
    f5ac:	add	x0, x0, #0x248
    f5b0:	ldr	w1, [sp, #28]
    f5b4:	ldr	x0, [x0, x1, lsl #3]
    f5b8:	ldr	x1, [sp, #8]
    f5bc:	cmp	x1, x0
    f5c0:	b.ne	f5dc <__ubsan_get_current_report_data@@Base+0x2f8>  // b.any
    f5c4:	ldr	w0, [sp, #28]
    f5c8:	lsl	x1, x0, #3
    f5cc:	adrp	x0, 7a000 <__ubsan_vptr_type_cache@@Base+0x1b8>
    f5d0:	add	x0, x0, #0x248
    f5d4:	add	x0, x1, x0
    f5d8:	b	f638 <__ubsan_get_current_report_data@@Base+0x354>
    f5dc:	ldr	x0, [sp, #8]
    f5e0:	lsr	x0, x0, #16
    f5e4:	and	w1, w0, #0xffff
    f5e8:	ldr	w0, [sp, #28]
    f5ec:	add	w0, w1, w0
    f5f0:	add	w0, w0, #0x1
    f5f4:	str	w0, [sp, #28]
    f5f8:	ldr	w0, [sp, #28]
    f5fc:	cmp	w0, #0x10, lsl #12
    f600:	b.ls	f614 <__ubsan_get_current_report_data@@Base+0x330>  // b.plast
    f604:	ldr	w1, [sp, #28]
    f608:	mov	w0, #0xfffeffff            	// #-65537
    f60c:	add	w0, w1, w0
    f610:	str	w0, [sp, #28]
    f614:	ldr	w0, [sp, #24]
    f618:	sub	w0, w0, #0x1
    f61c:	str	w0, [sp, #24]
    f620:	b	f584 <__ubsan_get_current_report_data@@Base+0x2a0>
    f624:	ldr	w0, [sp, #20]
    f628:	lsl	x1, x0, #3
    f62c:	adrp	x0, 7a000 <__ubsan_vptr_type_cache@@Base+0x1b8>
    f630:	add	x0, x0, #0x248
    f634:	add	x0, x1, x0
    f638:	add	sp, sp, #0x20
    f63c:	ret
    f640:	str	x30, [sp, #-80]!
    f644:	str	x0, [sp, #40]
    f648:	str	x1, [sp, #32]
    f64c:	str	x2, [sp, #24]
    f650:	ldr	x0, [sp, #40]
    f654:	ldr	x1, [x0, #8]
    f658:	ldr	x0, [sp, #32]
    f65c:	ldr	x0, [x0, #8]
    f660:	cmp	x1, x0
    f664:	b.eq	f6a0 <__ubsan_get_current_report_data@@Base+0x3bc>  // b.none
    f668:	ldr	x0, [sp, #40]
    f66c:	ldr	x0, [x0, #8]
    f670:	ldrb	w0, [x0]
    f674:	cmp	w0, #0x2a
    f678:	b.eq	f6a8 <__ubsan_get_current_report_data@@Base+0x3c4>  // b.none
    f67c:	ldr	x0, [sp, #40]
    f680:	ldr	x2, [x0, #8]
    f684:	ldr	x0, [sp, #32]
    f688:	ldr	x0, [x0, #8]
    f68c:	mov	x1, x0
    f690:	mov	x0, x2
    f694:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
    f698:	cmp	w0, #0x0
    f69c:	b.ne	f6a8 <__ubsan_get_current_report_data@@Base+0x3c4>  // b.any
    f6a0:	mov	w0, #0x1                   	// #1
    f6a4:	b	f6ac <__ubsan_get_current_report_data@@Base+0x3c8>
    f6a8:	mov	w0, #0x0                   	// #0
    f6ac:	cmp	w0, #0x0
    f6b0:	b.eq	f6c8 <__ubsan_get_current_report_data@@Base+0x3e4>  // b.none
    f6b4:	ldr	x0, [sp, #24]
    f6b8:	cmp	x0, #0x0
    f6bc:	cset	w0, eq  // eq = none
    f6c0:	and	w0, w0, #0xff
    f6c4:	b	f824 <__ubsan_get_current_report_data@@Base+0x540>
    f6c8:	ldr	x0, [sp, #40]
    f6cc:	cmp	x0, #0x0
    f6d0:	b.eq	f6f0 <__ubsan_get_current_report_data@@Base+0x40c>  // b.none
    f6d4:	mov	x3, #0x0                   	// #0
    f6d8:	adrp	x1, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    f6dc:	ldr	x2, [x1, #3960]
    f6e0:	adrp	x1, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    f6e4:	ldr	x1, [x1, #4064]
    f6e8:	bl	6920 <__dynamic_cast@plt>
    f6ec:	b	f6f4 <__ubsan_get_current_report_data@@Base+0x410>
    f6f0:	mov	x0, #0x0                   	// #0
    f6f4:	str	x0, [sp, #64]
    f6f8:	ldr	x0, [sp, #64]
    f6fc:	cmp	x0, #0x0
    f700:	b.eq	f720 <__ubsan_get_current_report_data@@Base+0x43c>  // b.none
    f704:	ldr	x0, [sp, #64]
    f708:	ldr	x0, [x0, #16]
    f70c:	ldr	x2, [sp, #24]
    f710:	ldr	x1, [sp, #32]
    f714:	bl	f640 <__ubsan_get_current_report_data@@Base+0x35c>
    f718:	and	w0, w0, #0xff
    f71c:	b	f824 <__ubsan_get_current_report_data@@Base+0x540>
    f720:	ldr	x0, [sp, #40]
    f724:	cmp	x0, #0x0
    f728:	b.eq	f748 <__ubsan_get_current_report_data@@Base+0x464>  // b.none
    f72c:	mov	x3, #0x0                   	// #0
    f730:	adrp	x1, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    f734:	ldr	x2, [x1, #3920]
    f738:	adrp	x1, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    f73c:	ldr	x1, [x1, #4064]
    f740:	bl	6920 <__dynamic_cast@plt>
    f744:	b	f74c <__ubsan_get_current_report_data@@Base+0x468>
    f748:	mov	x0, #0x0                   	// #0
    f74c:	str	x0, [sp, #56]
    f750:	ldr	x0, [sp, #56]
    f754:	cmp	x0, #0x0
    f758:	b.ne	f764 <__ubsan_get_current_report_data@@Base+0x480>  // b.any
    f75c:	mov	w0, #0x0                   	// #0
    f760:	b	f824 <__ubsan_get_current_report_data@@Base+0x540>
    f764:	str	wzr, [sp, #76]
    f768:	ldr	x0, [sp, #56]
    f76c:	ldr	w0, [x0, #20]
    f770:	ldr	w1, [sp, #76]
    f774:	cmp	w1, w0
    f778:	b.eq	f820 <__ubsan_get_current_report_data@@Base+0x53c>  // b.none
    f77c:	ldr	x1, [sp, #56]
    f780:	ldr	w0, [sp, #76]
    f784:	add	x0, x0, #0x1
    f788:	lsl	x0, x0, #4
    f78c:	add	x0, x1, x0
    f790:	ldr	x0, [x0, #16]
    f794:	asr	x0, x0, #8
    f798:	str	x0, [sp, #48]
    f79c:	ldr	x1, [sp, #56]
    f7a0:	ldr	w0, [sp, #76]
    f7a4:	add	x0, x0, #0x1
    f7a8:	lsl	x0, x0, #4
    f7ac:	add	x0, x1, x0
    f7b0:	ldr	x0, [x0, #16]
    f7b4:	and	x0, x0, #0x1
    f7b8:	cmp	x0, #0x0
    f7bc:	b.eq	f7c8 <__ubsan_get_current_report_data@@Base+0x4e4>  // b.none
    f7c0:	mov	w0, #0x1                   	// #1
    f7c4:	b	f824 <__ubsan_get_current_report_data@@Base+0x540>
    f7c8:	ldr	x1, [sp, #56]
    f7cc:	ldr	w0, [sp, #76]
    f7d0:	add	x0, x0, #0x1
    f7d4:	lsl	x0, x0, #4
    f7d8:	add	x0, x1, x0
    f7dc:	ldr	x3, [x0, #8]
    f7e0:	ldr	x1, [sp, #24]
    f7e4:	ldr	x0, [sp, #48]
    f7e8:	sub	x0, x1, x0
    f7ec:	mov	x2, x0
    f7f0:	ldr	x1, [sp, #32]
    f7f4:	mov	x0, x3
    f7f8:	bl	f640 <__ubsan_get_current_report_data@@Base+0x35c>
    f7fc:	and	w0, w0, #0xff
    f800:	cmp	w0, #0x0
    f804:	b.eq	f810 <__ubsan_get_current_report_data@@Base+0x52c>  // b.none
    f808:	mov	w0, #0x1                   	// #1
    f80c:	b	f824 <__ubsan_get_current_report_data@@Base+0x540>
    f810:	ldr	w0, [sp, #76]
    f814:	add	w0, w0, #0x1
    f818:	str	w0, [sp, #76]
    f81c:	b	f768 <__ubsan_get_current_report_data@@Base+0x484>
    f820:	mov	w0, #0x0                   	// #0
    f824:	ldr	x30, [sp], #80
    f828:	ret
    f82c:	str	x30, [sp, #-80]!
    f830:	str	x0, [sp, #24]
    f834:	str	x1, [sp, #16]
    f838:	ldr	x0, [sp, #16]
    f83c:	cmp	x0, #0x0
    f840:	b.ne	f84c <__ubsan_get_current_report_data@@Base+0x568>  // b.any
    f844:	ldr	x0, [sp, #24]
    f848:	b	f99c <__ubsan_get_current_report_data@@Base+0x6b8>
    f84c:	ldr	x0, [sp, #24]
    f850:	cmp	x0, #0x0
    f854:	b.eq	f874 <__ubsan_get_current_report_data@@Base+0x590>  // b.none
    f858:	mov	x3, #0x0                   	// #0
    f85c:	adrp	x1, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    f860:	ldr	x2, [x1, #3960]
    f864:	adrp	x1, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    f868:	ldr	x1, [x1, #4064]
    f86c:	bl	6920 <__dynamic_cast@plt>
    f870:	b	f878 <__ubsan_get_current_report_data@@Base+0x594>
    f874:	mov	x0, #0x0                   	// #0
    f878:	str	x0, [sp, #64]
    f87c:	ldr	x0, [sp, #64]
    f880:	cmp	x0, #0x0
    f884:	b.eq	f89c <__ubsan_get_current_report_data@@Base+0x5b8>  // b.none
    f888:	ldr	x0, [sp, #64]
    f88c:	ldr	x0, [x0, #16]
    f890:	ldr	x1, [sp, #16]
    f894:	bl	f82c <__ubsan_get_current_report_data@@Base+0x548>
    f898:	b	f99c <__ubsan_get_current_report_data@@Base+0x6b8>
    f89c:	ldr	x0, [sp, #24]
    f8a0:	cmp	x0, #0x0
    f8a4:	b.eq	f8c4 <__ubsan_get_current_report_data@@Base+0x5e0>  // b.none
    f8a8:	mov	x3, #0x0                   	// #0
    f8ac:	adrp	x1, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    f8b0:	ldr	x2, [x1, #3920]
    f8b4:	adrp	x1, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    f8b8:	ldr	x1, [x1, #4064]
    f8bc:	bl	6920 <__dynamic_cast@plt>
    f8c0:	b	f8c8 <__ubsan_get_current_report_data@@Base+0x5e4>
    f8c4:	mov	x0, #0x0                   	// #0
    f8c8:	str	x0, [sp, #56]
    f8cc:	ldr	x0, [sp, #56]
    f8d0:	cmp	x0, #0x0
    f8d4:	b.ne	f8e0 <__ubsan_get_current_report_data@@Base+0x5fc>  // b.any
    f8d8:	mov	x0, #0x0                   	// #0
    f8dc:	b	f99c <__ubsan_get_current_report_data@@Base+0x6b8>
    f8e0:	str	wzr, [sp, #76]
    f8e4:	ldr	x0, [sp, #56]
    f8e8:	ldr	w0, [x0, #20]
    f8ec:	ldr	w1, [sp, #76]
    f8f0:	cmp	w1, w0
    f8f4:	b.eq	f998 <__ubsan_get_current_report_data@@Base+0x6b4>  // b.none
    f8f8:	ldr	x1, [sp, #56]
    f8fc:	ldr	w0, [sp, #76]
    f900:	add	x0, x0, #0x1
    f904:	lsl	x0, x0, #4
    f908:	add	x0, x1, x0
    f90c:	ldr	x0, [x0, #16]
    f910:	asr	x0, x0, #8
    f914:	str	x0, [sp, #48]
    f918:	ldr	x1, [sp, #56]
    f91c:	ldr	w0, [sp, #76]
    f920:	add	x0, x0, #0x1
    f924:	lsl	x0, x0, #4
    f928:	add	x0, x1, x0
    f92c:	ldr	x0, [x0, #16]
    f930:	and	x0, x0, #0x1
    f934:	cmp	x0, #0x0
    f938:	b.ne	f984 <__ubsan_get_current_report_data@@Base+0x6a0>  // b.any
    f93c:	ldr	x1, [sp, #56]
    f940:	ldr	w0, [sp, #76]
    f944:	add	x0, x0, #0x1
    f948:	lsl	x0, x0, #4
    f94c:	add	x0, x1, x0
    f950:	ldr	x2, [x0, #8]
    f954:	ldr	x1, [sp, #16]
    f958:	ldr	x0, [sp, #48]
    f95c:	sub	x0, x1, x0
    f960:	mov	x1, x0
    f964:	mov	x0, x2
    f968:	bl	f82c <__ubsan_get_current_report_data@@Base+0x548>
    f96c:	str	x0, [sp, #40]
    f970:	ldr	x0, [sp, #40]
    f974:	cmp	x0, #0x0
    f978:	b.eq	f988 <__ubsan_get_current_report_data@@Base+0x6a4>  // b.none
    f97c:	ldr	x0, [sp, #40]
    f980:	b	f99c <__ubsan_get_current_report_data@@Base+0x6b8>
    f984:	nop
    f988:	ldr	w0, [sp, #76]
    f98c:	add	w0, w0, #0x1
    f990:	str	w0, [sp, #76]
    f994:	b	f8e4 <__ubsan_get_current_report_data@@Base+0x600>
    f998:	mov	x0, #0x0                   	// #0
    f99c:	ldr	x30, [sp], #80
    f9a0:	ret
    f9a4:	str	x30, [sp, #-48]!
    f9a8:	str	x0, [sp, #24]
    f9ac:	ldr	x0, [sp, #24]
    f9b0:	str	x0, [sp, #40]
    f9b4:	ldr	x0, [sp, #40]
    f9b8:	sub	x0, x0, #0x10
    f9bc:	str	x0, [sp, #32]
    f9c0:	ldr	x0, [sp, #32]
    f9c4:	mov	x1, #0x10                  	// #16
    f9c8:	bl	23908 <__sanitizer_set_report_fd@@Base+0x975c>
    f9cc:	and	w0, w0, #0xff
    f9d0:	eor	w0, w0, #0x1
    f9d4:	and	w0, w0, #0xff
    f9d8:	cmp	w0, #0x0
    f9dc:	b.eq	f9e8 <__ubsan_get_current_report_data@@Base+0x704>  // b.none
    f9e0:	mov	x0, #0x0                   	// #0
    f9e4:	b	fa04 <__ubsan_get_current_report_data@@Base+0x720>
    f9e8:	ldr	x0, [sp, #32]
    f9ec:	ldr	x0, [x0, #8]
    f9f0:	cmp	x0, #0x0
    f9f4:	b.ne	fa00 <__ubsan_get_current_report_data@@Base+0x71c>  // b.any
    f9f8:	mov	x0, #0x0                   	// #0
    f9fc:	b	fa04 <__ubsan_get_current_report_data@@Base+0x720>
    fa00:	ldr	x0, [sp, #32]
    fa04:	ldr	x30, [sp], #48
    fa08:	ret
    fa0c:	str	x30, [sp, #-96]!
    fa10:	str	x0, [sp, #40]
    fa14:	str	x1, [sp, #32]
    fa18:	str	x2, [sp, #24]
    fa1c:	ldr	x0, [sp, #24]
    fa20:	bl	f55c <__ubsan_get_current_report_data@@Base+0x278>
    fa24:	str	x0, [sp, #88]
    fa28:	ldr	x0, [sp, #88]
    fa2c:	ldr	x0, [x0]
    fa30:	ldr	x1, [sp, #24]
    fa34:	cmp	x1, x0
    fa38:	b.ne	fa5c <__ubsan_get_current_report_data@@Base+0x778>  // b.any
    fa3c:	ldr	x0, [sp, #24]
    fa40:	and	x1, x0, #0x7f
    fa44:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    fa48:	ldr	x0, [x0, #3792]
    fa4c:	ldr	x2, [sp, #24]
    fa50:	str	x2, [x0, x1, lsl #3]
    fa54:	mov	w0, #0x1                   	// #1
    fa58:	b	fb60 <__ubsan_get_current_report_data@@Base+0x87c>
    fa5c:	ldr	x0, [sp, #40]
    fa60:	ldr	x0, [x0]
    fa64:	str	x0, [sp, #80]
    fa68:	ldr	x0, [sp, #80]
    fa6c:	bl	f9a4 <__ubsan_get_current_report_data@@Base+0x6c0>
    fa70:	str	x0, [sp, #72]
    fa74:	ldr	x0, [sp, #72]
    fa78:	cmp	x0, #0x0
    fa7c:	b.ne	fa88 <__ubsan_get_current_report_data@@Base+0x7a4>  // b.any
    fa80:	mov	w0, #0x0                   	// #0
    fa84:	b	fb60 <__ubsan_get_current_report_data@@Base+0x87c>
    fa88:	ldr	x0, [sp, #72]
    fa8c:	ldr	x0, [x0]
    fa90:	cmn	x0, #0x100, lsl #12
    fa94:	b.lt	faa8 <__ubsan_get_current_report_data@@Base+0x7c4>  // b.tstop
    fa98:	ldr	x0, [sp, #72]
    fa9c:	ldr	x0, [x0]
    faa0:	cmp	x0, #0x100, lsl #12
    faa4:	b.le	fab0 <__ubsan_get_current_report_data@@Base+0x7cc>
    faa8:	mov	w0, #0x0                   	// #0
    faac:	b	fb60 <__ubsan_get_current_report_data@@Base+0x87c>
    fab0:	ldr	x0, [sp, #72]
    fab4:	ldr	x0, [x0, #8]
    fab8:	cmp	x0, #0x0
    fabc:	b.eq	fadc <__ubsan_get_current_report_data@@Base+0x7f8>  // b.none
    fac0:	mov	x3, #0x0                   	// #0
    fac4:	adrp	x1, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    fac8:	ldr	x2, [x1, #4064]
    facc:	adrp	x1, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    fad0:	ldr	x1, [x1, #3928]
    fad4:	bl	6920 <__dynamic_cast@plt>
    fad8:	b	fae0 <__ubsan_get_current_report_data@@Base+0x7fc>
    fadc:	mov	x0, #0x0                   	// #0
    fae0:	str	x0, [sp, #64]
    fae4:	ldr	x0, [sp, #64]
    fae8:	cmp	x0, #0x0
    faec:	b.ne	faf8 <__ubsan_get_current_report_data@@Base+0x814>  // b.any
    faf0:	mov	w0, #0x0                   	// #0
    faf4:	b	fb60 <__ubsan_get_current_report_data@@Base+0x87c>
    faf8:	ldr	x0, [sp, #32]
    fafc:	str	x0, [sp, #56]
    fb00:	ldr	x0, [sp, #72]
    fb04:	ldr	x0, [x0]
    fb08:	neg	x0, x0
    fb0c:	mov	x2, x0
    fb10:	ldr	x1, [sp, #56]
    fb14:	ldr	x0, [sp, #64]
    fb18:	bl	f640 <__ubsan_get_current_report_data@@Base+0x35c>
    fb1c:	and	w0, w0, #0xff
    fb20:	eor	w0, w0, #0x1
    fb24:	and	w0, w0, #0xff
    fb28:	cmp	w0, #0x0
    fb2c:	b.eq	fb38 <__ubsan_get_current_report_data@@Base+0x854>  // b.none
    fb30:	mov	w0, #0x0                   	// #0
    fb34:	b	fb60 <__ubsan_get_current_report_data@@Base+0x87c>
    fb38:	ldr	x0, [sp, #24]
    fb3c:	and	x1, x0, #0x7f
    fb40:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
    fb44:	ldr	x0, [x0, #3792]
    fb48:	ldr	x2, [sp, #24]
    fb4c:	str	x2, [x0, x1, lsl #3]
    fb50:	ldr	x0, [sp, #88]
    fb54:	ldr	x1, [sp, #24]
    fb58:	str	x1, [x0]
    fb5c:	mov	w0, #0x1                   	// #1
    fb60:	ldr	x30, [sp], #96
    fb64:	ret
    fb68:	stp	x19, x30, [sp, #-48]!
    fb6c:	mov	x19, x8
    fb70:	str	x0, [sp, #24]
    fb74:	ldr	x0, [sp, #24]
    fb78:	bl	f9a4 <__ubsan_get_current_report_data@@Base+0x6c0>
    fb7c:	str	x0, [sp, #40]
    fb80:	ldr	x0, [sp, #40]
    fb84:	cmp	x0, #0x0
    fb88:	b.ne	fba4 <__ubsan_get_current_report_data@@Base+0x8c0>  // b.any
    fb8c:	mov	x3, #0x0                   	// #0
    fb90:	mov	x2, #0x0                   	// #0
    fb94:	mov	x1, #0x0                   	// #0
    fb98:	mov	x0, x19
    fb9c:	bl	ed74 <__ubsan_handle_cfi_bad_type@@Base+0x658>
    fba0:	b	fc4c <__ubsan_get_current_report_data@@Base+0x968>
    fba4:	ldr	x0, [sp, #40]
    fba8:	ldr	x0, [x0]
    fbac:	cmn	x0, #0x100, lsl #12
    fbb0:	b.lt	fbc4 <__ubsan_get_current_report_data@@Base+0x8e0>  // b.tstop
    fbb4:	ldr	x0, [sp, #40]
    fbb8:	ldr	x0, [x0]
    fbbc:	cmp	x0, #0x100, lsl #12
    fbc0:	b.le	fbe4 <__ubsan_get_current_report_data@@Base+0x900>
    fbc4:	ldr	x0, [sp, #40]
    fbc8:	ldr	x0, [x0]
    fbcc:	mov	x3, #0x0                   	// #0
    fbd0:	mov	x2, x0
    fbd4:	mov	x1, #0x0                   	// #0
    fbd8:	mov	x0, x19
    fbdc:	bl	ed74 <__ubsan_handle_cfi_bad_type@@Base+0x658>
    fbe0:	b	fc4c <__ubsan_get_current_report_data@@Base+0x968>
    fbe4:	ldr	x0, [sp, #40]
    fbe8:	ldr	x2, [x0, #8]
    fbec:	ldr	x0, [sp, #40]
    fbf0:	ldr	x0, [x0]
    fbf4:	neg	x0, x0
    fbf8:	mov	x1, x0
    fbfc:	mov	x0, x2
    fc00:	bl	f82c <__ubsan_get_current_report_data@@Base+0x548>
    fc04:	str	x0, [sp, #32]
    fc08:	ldr	x0, [sp, #40]
    fc0c:	ldr	x0, [x0, #8]
    fc10:	ldr	x1, [x0, #8]
    fc14:	ldr	x0, [sp, #40]
    fc18:	ldr	x0, [x0]
    fc1c:	neg	x2, x0
    fc20:	ldr	x0, [sp, #32]
    fc24:	cmp	x0, #0x0
    fc28:	b.eq	fc38 <__ubsan_get_current_report_data@@Base+0x954>  // b.none
    fc2c:	ldr	x0, [sp, #32]
    fc30:	ldr	x0, [x0, #8]
    fc34:	b	fc40 <__ubsan_get_current_report_data@@Base+0x95c>
    fc38:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
    fc3c:	add	x0, x0, #0x398
    fc40:	mov	x3, x0
    fc44:	mov	x0, x19
    fc48:	bl	ed74 <__ubsan_handle_cfi_bad_type@@Base+0x658>
    fc4c:	ldp	x19, x30, [sp], #48
    fc50:	ret
    fc54:	stp	x20, x21, [sp, #-128]!
    fc58:	stp	x22, x23, [sp, #16]
    fc5c:	stp	x24, x25, [sp, #32]
    fc60:	str	x30, [sp, #48]
    fc64:	str	x0, [sp, #72]
    fc68:	ldr	x0, [sp, #72]
    fc6c:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
    fc70:	bl	8b24 <__asan_backtrace_open@plt+0x1eb4>
    fc74:	and	w0, w0, #0xff
    fc78:	and	x0, x0, #0xff
    fc7c:	str	x0, [sp, #120]
    fc80:	str	xzr, [sp, #112]
    fc84:	ldr	x1, [sp, #120]
    fc88:	ldr	x0, [sp, #112]
    fc8c:	cmp	x1, x0
    fc90:	cset	w0, eq  // eq = none
    fc94:	and	w0, w0, #0xff
    fc98:	and	x0, x0, #0xff
    fc9c:	cmp	x0, #0x0
    fca0:	b.eq	fcc4 <__ubsan_get_current_report_data@@Base+0x9e0>  // b.none
    fca4:	ldr	x4, [sp, #112]
    fca8:	ldr	x3, [sp, #120]
    fcac:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
    fcb0:	add	x2, x0, #0x4b8
    fcb4:	mov	w1, #0x16                  	// #22
    fcb8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
    fcbc:	add	x0, x0, #0x4e8
    fcc0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    fcc4:	ldr	x0, [sp, #72]
    fcc8:	bl	10284 <__ubsan_get_current_report_data@@Base+0xfa0>
    fccc:	and	w0, w0, #0xff
    fcd0:	cmp	w0, #0x0
    fcd4:	b.eq	fd98 <__ubsan_get_current_report_data@@Base+0xab4>  // b.none
    fcd8:	ldr	x0, [sp, #72]
    fcdc:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
    fce0:	bl	db3c <__ubsan_handle_cfi_check_fail_abort@@Base+0x3d8>
    fce4:	mov	w1, w0
    fce8:	mov	w0, #0x80                  	// #128
    fcec:	sub	w0, w0, w1
    fcf0:	str	w0, [sp, #92]
    fcf4:	ldr	x0, [sp, #72]
    fcf8:	ldr	x0, [x0, #8]
    fcfc:	mov	x24, x0
    fd00:	mov	x25, #0x0                   	// #0
    fd04:	ldr	w0, [sp, #92]
    fd08:	sub	w0, w0, #0x40
    fd0c:	lsl	x1, x24, x0
    fd10:	mov	x5, #0x0                   	// #0
    fd14:	lsr	x3, x24, #1
    fd18:	mov	w4, #0x3f                  	// #63
    fd1c:	ldr	w2, [sp, #92]
    fd20:	sub	w2, w4, w2
    fd24:	lsr	x2, x3, x2
    fd28:	ldr	w3, [sp, #92]
    fd2c:	lsl	x21, x25, x3
    fd30:	orr	x21, x2, x21
    fd34:	ldr	w2, [sp, #92]
    fd38:	lsl	x20, x24, x2
    fd3c:	cmp	w0, #0x0
    fd40:	csel	x21, x1, x21, ge  // ge = tcont
    fd44:	cmp	w0, #0x0
    fd48:	csel	x20, x5, x20, ge  // ge = tcont
    fd4c:	ldr	w0, [sp, #92]
    fd50:	sub	w0, w0, #0x40
    fd54:	asr	x2, x21, x0
    fd58:	asr	x1, x21, #63
    fd5c:	lsl	x4, x21, #1
    fd60:	mov	w5, #0x3f                  	// #63
    fd64:	ldr	w3, [sp, #92]
    fd68:	sub	w3, w5, w3
    fd6c:	lsl	x3, x4, x3
    fd70:	ldr	w4, [sp, #92]
    fd74:	lsr	x22, x20, x4
    fd78:	orr	x22, x3, x22
    fd7c:	ldr	w3, [sp, #92]
    fd80:	asr	x23, x21, x3
    fd84:	cmp	w0, #0x0
    fd88:	csel	x22, x2, x22, ge  // ge = tcont
    fd8c:	cmp	w0, #0x0
    fd90:	csel	x23, x1, x23, ge  // ge = tcont
    fd94:	b	fe50 <__ubsan_get_current_report_data@@Base+0xb6c>
    fd98:	ldr	x0, [sp, #72]
    fd9c:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
    fda0:	bl	db3c <__ubsan_handle_cfi_check_fail_abort@@Base+0x3d8>
    fda4:	cmp	w0, #0x40
    fda8:	cset	w0, eq  // eq = none
    fdac:	and	w0, w0, #0xff
    fdb0:	cmp	w0, #0x0
    fdb4:	b.eq	fdd4 <__ubsan_get_current_report_data@@Base+0xaf0>  // b.none
    fdb8:	ldr	x0, [sp, #72]
    fdbc:	ldr	x0, [x0, #8]
    fdc0:	ldr	x0, [x0]
    fdc4:	mov	x22, x0
    fdc8:	asr	x0, x0, #63
    fdcc:	mov	x23, x0
    fdd0:	b	fe50 <__ubsan_get_current_report_data@@Base+0xb6c>
    fdd4:	ldr	x0, [sp, #72]
    fdd8:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
    fddc:	bl	db3c <__ubsan_handle_cfi_check_fail_abort@@Base+0x3d8>
    fde0:	cmp	w0, #0x80
    fde4:	cset	w0, eq  // eq = none
    fde8:	and	w0, w0, #0xff
    fdec:	cmp	w0, #0x0
    fdf0:	b.eq	fe04 <__ubsan_get_current_report_data@@Base+0xb20>  // b.none
    fdf4:	ldr	x0, [sp, #72]
    fdf8:	ldr	x0, [x0, #8]
    fdfc:	ldp	x22, x23, [x0]
    fe00:	b	fe50 <__ubsan_get_current_report_data@@Base+0xb6c>
    fe04:	str	xzr, [sp, #104]
    fe08:	str	xzr, [sp, #96]
    fe0c:	ldr	x1, [sp, #104]
    fe10:	ldr	x0, [sp, #96]
    fe14:	cmp	x1, x0
    fe18:	cset	w0, eq  // eq = none
    fe1c:	and	w0, w0, #0xff
    fe20:	and	x0, x0, #0xff
    fe24:	cmp	x0, #0x0
    fe28:	b.eq	fe4c <__ubsan_get_current_report_data@@Base+0xb68>  // b.none
    fe2c:	ldr	x4, [sp, #96]
    fe30:	ldr	x3, [sp, #104]
    fe34:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
    fe38:	add	x2, x0, #0x518
    fe3c:	mov	w1, #0x27                  	// #39
    fe40:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
    fe44:	add	x0, x0, #0x4e8
    fe48:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    fe4c:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    fe50:	mov	x0, x22
    fe54:	mov	x1, x23
    fe58:	ldp	x22, x23, [sp, #16]
    fe5c:	ldp	x24, x25, [sp, #32]
    fe60:	ldr	x30, [sp, #48]
    fe64:	ldp	x20, x21, [sp], #128
    fe68:	ret
    fe6c:	stp	x20, x21, [sp, #-80]!
    fe70:	str	x30, [sp, #16]
    fe74:	str	x0, [sp, #40]
    fe78:	ldr	x0, [sp, #40]
    fe7c:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
    fe80:	bl	8b68 <__asan_backtrace_open@plt+0x1ef8>
    fe84:	and	w0, w0, #0xff
    fe88:	and	x0, x0, #0xff
    fe8c:	str	x0, [sp, #72]
    fe90:	str	xzr, [sp, #64]
    fe94:	ldr	x1, [sp, #72]
    fe98:	ldr	x0, [sp, #64]
    fe9c:	cmp	x1, x0
    fea0:	cset	w0, eq  // eq = none
    fea4:	and	w0, w0, #0xff
    fea8:	and	x0, x0, #0xff
    feac:	cmp	x0, #0x0
    feb0:	b.eq	fed4 <__ubsan_get_current_report_data@@Base+0xbf0>  // b.none
    feb4:	ldr	x4, [sp, #64]
    feb8:	ldr	x3, [sp, #72]
    febc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
    fec0:	add	x2, x0, #0x540
    fec4:	mov	w1, #0x2b                  	// #43
    fec8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
    fecc:	add	x0, x0, #0x4e8
    fed0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    fed4:	ldr	x0, [sp, #40]
    fed8:	bl	10284 <__ubsan_get_current_report_data@@Base+0xfa0>
    fedc:	and	w0, w0, #0xff
    fee0:	cmp	w0, #0x0
    fee4:	b.eq	fefc <__ubsan_get_current_report_data@@Base+0xc18>  // b.none
    fee8:	ldr	x0, [sp, #40]
    feec:	ldr	x0, [x0, #8]
    fef0:	mov	x20, x0
    fef4:	mov	x21, #0x0                   	// #0
    fef8:	b	ffb0 <__ubsan_get_current_report_data@@Base+0xccc>
    fefc:	ldr	x0, [sp, #40]
    ff00:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
    ff04:	bl	db3c <__ubsan_handle_cfi_check_fail_abort@@Base+0x3d8>
    ff08:	cmp	w0, #0x40
    ff0c:	cset	w0, eq  // eq = none
    ff10:	and	w0, w0, #0xff
    ff14:	cmp	w0, #0x0
    ff18:	b.eq	ff34 <__ubsan_get_current_report_data@@Base+0xc50>  // b.none
    ff1c:	ldr	x0, [sp, #40]
    ff20:	ldr	x0, [x0, #8]
    ff24:	ldr	x0, [x0]
    ff28:	mov	x20, x0
    ff2c:	mov	x21, #0x0                   	// #0
    ff30:	b	ffb0 <__ubsan_get_current_report_data@@Base+0xccc>
    ff34:	ldr	x0, [sp, #40]
    ff38:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
    ff3c:	bl	db3c <__ubsan_handle_cfi_check_fail_abort@@Base+0x3d8>
    ff40:	cmp	w0, #0x80
    ff44:	cset	w0, eq  // eq = none
    ff48:	and	w0, w0, #0xff
    ff4c:	cmp	w0, #0x0
    ff50:	b.eq	ff64 <__ubsan_get_current_report_data@@Base+0xc80>  // b.none
    ff54:	ldr	x0, [sp, #40]
    ff58:	ldr	x0, [x0, #8]
    ff5c:	ldp	x20, x21, [x0]
    ff60:	b	ffb0 <__ubsan_get_current_report_data@@Base+0xccc>
    ff64:	str	xzr, [sp, #56]
    ff68:	str	xzr, [sp, #48]
    ff6c:	ldr	x1, [sp, #56]
    ff70:	ldr	x0, [sp, #48]
    ff74:	cmp	x1, x0
    ff78:	cset	w0, eq  // eq = none
    ff7c:	and	w0, w0, #0xff
    ff80:	and	x0, x0, #0xff
    ff84:	cmp	x0, #0x0
    ff88:	b.eq	ffac <__ubsan_get_current_report_data@@Base+0xcc8>  // b.none
    ff8c:	ldr	x4, [sp, #48]
    ff90:	ldr	x3, [sp, #56]
    ff94:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
    ff98:	add	x2, x0, #0x518
    ff9c:	mov	w1, #0x37                  	// #55
    ffa0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
    ffa4:	add	x0, x0, #0x4e8
    ffa8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
    ffac:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
    ffb0:	mov	x0, x20
    ffb4:	mov	x1, x21
    ffb8:	ldr	x30, [sp, #16]
    ffbc:	ldp	x20, x21, [sp], #80
    ffc0:	ret
    ffc4:	str	x30, [sp, #-64]!
    ffc8:	str	x0, [sp, #24]
    ffcc:	ldr	x0, [sp, #24]
    ffd0:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
    ffd4:	bl	8b68 <__asan_backtrace_open@plt+0x1ef8>
    ffd8:	and	w0, w0, #0xff
    ffdc:	cmp	w0, #0x0
    ffe0:	b.eq	fff0 <__ubsan_get_current_report_data@@Base+0xd0c>  // b.none
    ffe4:	ldr	x0, [sp, #24]
    ffe8:	bl	fe6c <__ubsan_get_current_report_data@@Base+0xb88>
    ffec:	b	1005c <__ubsan_get_current_report_data@@Base+0xd78>
    fff0:	ldr	x0, [sp, #24]
    fff4:	bl	fc54 <__ubsan_get_current_report_data@@Base+0x970>
    fff8:	stp	x0, x1, [sp, #48]
    fffc:	ldr	x0, [sp, #56]
   10000:	mvn	x0, x0
   10004:	lsr	x0, x0, #63
   10008:	and	w0, w0, #0xff
   1000c:	and	x0, x0, #0xff
   10010:	str	x0, [sp, #40]
   10014:	str	xzr, [sp, #32]
   10018:	ldr	x1, [sp, #40]
   1001c:	ldr	x0, [sp, #32]
   10020:	cmp	x1, x0
   10024:	cset	w0, eq  // eq = none
   10028:	and	w0, w0, #0xff
   1002c:	and	x0, x0, #0xff
   10030:	cmp	x0, #0x0
   10034:	b.eq	10058 <__ubsan_get_current_report_data@@Base+0xd74>  // b.none
   10038:	ldr	x4, [sp, #32]
   1003c:	ldr	x3, [sp, #40]
   10040:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10044:	add	x2, x0, #0x570
   10048:	mov	w1, #0x3e                  	// #62
   1004c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10050:	add	x0, x0, #0x4e8
   10054:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   10058:	ldp	x0, x1, [sp, #48]
   1005c:	ldr	x30, [sp], #64
   10060:	ret
   10064:	str	x30, [sp, #-80]!
   10068:	str	x0, [sp, #24]
   1006c:	ldr	x0, [sp, #24]
   10070:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
   10074:	bl	8bac <__asan_backtrace_open@plt+0x1f3c>
   10078:	and	w0, w0, #0xff
   1007c:	and	x0, x0, #0xff
   10080:	str	x0, [sp, #72]
   10084:	str	xzr, [sp, #64]
   10088:	ldr	x1, [sp, #72]
   1008c:	ldr	x0, [sp, #64]
   10090:	cmp	x1, x0
   10094:	cset	w0, eq  // eq = none
   10098:	and	w0, w0, #0xff
   1009c:	and	x0, x0, #0xff
   100a0:	cmp	x0, #0x0
   100a4:	b.eq	100c8 <__ubsan_get_current_report_data@@Base+0xde4>  // b.none
   100a8:	ldr	x4, [sp, #64]
   100ac:	ldr	x3, [sp, #72]
   100b0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   100b4:	add	x2, x0, #0x490
   100b8:	mov	w1, #0x46                  	// #70
   100bc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   100c0:	add	x0, x0, #0x4e8
   100c4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   100c8:	ldr	x0, [sp, #24]
   100cc:	bl	10318 <__ubsan_get_current_report_data@@Base+0x1034>
   100d0:	and	w0, w0, #0xff
   100d4:	cmp	w0, #0x0
   100d8:	b.eq	1013c <__ubsan_get_current_report_data@@Base+0xe58>  // b.none
   100dc:	ldr	x0, [sp, #24]
   100e0:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
   100e4:	bl	10214 <__ubsan_get_current_report_data@@Base+0xf30>
   100e8:	cmp	w0, #0x20
   100ec:	b.eq	100fc <__ubsan_get_current_report_data@@Base+0xe18>  // b.none
   100f0:	cmp	w0, #0x40
   100f4:	b.eq	1011c <__ubsan_get_current_report_data@@Base+0xe38>  // b.none
   100f8:	b	101c0 <__ubsan_get_current_report_data@@Base+0xedc>
   100fc:	ldr	x0, [sp, #24]
   10100:	add	x1, x0, #0x8
   10104:	add	x0, sp, #0x2c
   10108:	mov	x2, #0x4                   	// #4
   1010c:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   10110:	ldr	s0, [sp, #44]
   10114:	bl	6b50 <__extendsftf2@plt>
   10118:	b	1020c <__ubsan_get_current_report_data@@Base+0xf28>
   1011c:	ldr	x0, [sp, #24]
   10120:	add	x1, x0, #0x8
   10124:	add	x0, sp, #0x20
   10128:	mov	x2, #0x8                   	// #8
   1012c:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   10130:	ldr	d0, [sp, #32]
   10134:	bl	6a60 <__extenddftf2@plt>
   10138:	b	1020c <__ubsan_get_current_report_data@@Base+0xf28>
   1013c:	ldr	x0, [sp, #24]
   10140:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
   10144:	bl	10214 <__ubsan_get_current_report_data@@Base+0xf30>
   10148:	cmp	w0, #0x80
   1014c:	b.eq	101b0 <__ubsan_get_current_report_data@@Base+0xecc>  // b.none
   10150:	cmp	w0, #0x80
   10154:	b.hi	101c0 <__ubsan_get_current_report_data@@Base+0xedc>  // b.pmore
   10158:	cmp	w0, #0x60
   1015c:	b.eq	101a0 <__ubsan_get_current_report_data@@Base+0xebc>  // b.none
   10160:	cmp	w0, #0x60
   10164:	b.hi	101c0 <__ubsan_get_current_report_data@@Base+0xedc>  // b.pmore
   10168:	cmp	w0, #0x40
   1016c:	b.eq	1017c <__ubsan_get_current_report_data@@Base+0xe98>  // b.none
   10170:	cmp	w0, #0x50
   10174:	b.eq	10190 <__ubsan_get_current_report_data@@Base+0xeac>  // b.none
   10178:	b	101c0 <__ubsan_get_current_report_data@@Base+0xedc>
   1017c:	ldr	x0, [sp, #24]
   10180:	ldr	x0, [x0, #8]
   10184:	ldr	d0, [x0]
   10188:	bl	6a60 <__extenddftf2@plt>
   1018c:	b	1020c <__ubsan_get_current_report_data@@Base+0xf28>
   10190:	ldr	x0, [sp, #24]
   10194:	ldr	x0, [x0, #8]
   10198:	ldr	q0, [x0]
   1019c:	b	1020c <__ubsan_get_current_report_data@@Base+0xf28>
   101a0:	ldr	x0, [sp, #24]
   101a4:	ldr	x0, [x0, #8]
   101a8:	ldr	q0, [x0]
   101ac:	b	1020c <__ubsan_get_current_report_data@@Base+0xf28>
   101b0:	ldr	x0, [sp, #24]
   101b4:	ldr	x0, [x0, #8]
   101b8:	ldr	q0, [x0]
   101bc:	b	1020c <__ubsan_get_current_report_data@@Base+0xf28>
   101c0:	str	xzr, [sp, #56]
   101c4:	str	xzr, [sp, #48]
   101c8:	ldr	x1, [sp, #56]
   101cc:	ldr	x0, [sp, #48]
   101d0:	cmp	x1, x0
   101d4:	cset	w0, eq  // eq = none
   101d8:	and	w0, w0, #0xff
   101dc:	and	x0, x0, #0xff
   101e0:	cmp	x0, #0x0
   101e4:	b.eq	10208 <__ubsan_get_current_report_data@@Base+0xf24>  // b.none
   101e8:	ldr	x4, [sp, #48]
   101ec:	ldr	x3, [sp, #56]
   101f0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   101f4:	add	x2, x0, #0x588
   101f8:	mov	w1, #0x6c                  	// #108
   101fc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10200:	add	x0, x0, #0x4e8
   10204:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   10208:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   1020c:	ldr	x30, [sp], #80
   10210:	ret
   10214:	str	x30, [sp, #-48]!
   10218:	str	x0, [sp, #24]
   1021c:	ldr	x0, [sp, #24]
   10220:	bl	8bac <__asan_backtrace_open@plt+0x1f3c>
   10224:	and	w0, w0, #0xff
   10228:	and	x0, x0, #0xff
   1022c:	str	x0, [sp, #40]
   10230:	str	xzr, [sp, #32]
   10234:	ldr	x1, [sp, #40]
   10238:	ldr	x0, [sp, #32]
   1023c:	cmp	x1, x0
   10240:	cset	w0, eq  // eq = none
   10244:	and	w0, w0, #0xff
   10248:	and	x0, x0, #0xff
   1024c:	cmp	x0, #0x0
   10250:	b.eq	10274 <__ubsan_get_current_report_data@@Base+0xf90>  // b.none
   10254:	ldr	x4, [sp, #32]
   10258:	ldr	x3, [sp, #40]
   1025c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10260:	add	x2, x0, #0x450
   10264:	mov	w1, #0x81                  	// #129
   10268:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   1026c:	add	x0, x0, #0x420
   10270:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   10274:	ldr	x0, [sp, #24]
   10278:	ldrh	w0, [x0, #2]
   1027c:	ldr	x30, [sp], #48
   10280:	ret
   10284:	str	x30, [sp, #-64]!
   10288:	str	x0, [sp, #24]
   1028c:	ldr	x0, [sp, #24]
   10290:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
   10294:	bl	8b00 <__asan_backtrace_open@plt+0x1e90>
   10298:	and	w0, w0, #0xff
   1029c:	and	x0, x0, #0xff
   102a0:	str	x0, [sp, #56]
   102a4:	str	xzr, [sp, #48]
   102a8:	ldr	x1, [sp, #56]
   102ac:	ldr	x0, [sp, #48]
   102b0:	cmp	x1, x0
   102b4:	cset	w0, eq  // eq = none
   102b8:	and	w0, w0, #0xff
   102bc:	and	x0, x0, #0xff
   102c0:	cmp	x0, #0x0
   102c4:	b.eq	102e8 <__ubsan_get_current_report_data@@Base+0x1004>  // b.none
   102c8:	ldr	x4, [sp, #48]
   102cc:	ldr	x3, [sp, #56]
   102d0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   102d4:	add	x2, x0, #0x468
   102d8:	mov	w1, #0x97                  	// #151
   102dc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   102e0:	add	x0, x0, #0x420
   102e4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   102e8:	mov	w0, #0x40                  	// #64
   102ec:	str	w0, [sp, #44]
   102f0:	ldr	x0, [sp, #24]
   102f4:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
   102f8:	bl	db3c <__ubsan_handle_cfi_check_fail_abort@@Base+0x3d8>
   102fc:	str	w0, [sp, #40]
   10300:	ldr	w0, [sp, #40]
   10304:	cmp	w0, #0x40
   10308:	cset	w0, ls  // ls = plast
   1030c:	and	w0, w0, #0xff
   10310:	ldr	x30, [sp], #64
   10314:	ret
   10318:	str	x30, [sp, #-64]!
   1031c:	str	x0, [sp, #24]
   10320:	ldr	x0, [sp, #24]
   10324:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
   10328:	bl	8bac <__asan_backtrace_open@plt+0x1f3c>
   1032c:	and	w0, w0, #0xff
   10330:	and	x0, x0, #0xff
   10334:	str	x0, [sp, #56]
   10338:	str	xzr, [sp, #48]
   1033c:	ldr	x1, [sp, #56]
   10340:	ldr	x0, [sp, #48]
   10344:	cmp	x1, x0
   10348:	cset	w0, eq  // eq = none
   1034c:	and	w0, w0, #0xff
   10350:	and	x0, x0, #0xff
   10354:	cmp	x0, #0x0
   10358:	b.eq	1037c <__ubsan_get_current_report_data@@Base+0x1098>  // b.none
   1035c:	ldr	x4, [sp, #48]
   10360:	ldr	x3, [sp, #56]
   10364:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10368:	add	x2, x0, #0x490
   1036c:	mov	w1, #0x9f                  	// #159
   10370:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10374:	add	x0, x0, #0x420
   10378:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1037c:	mov	w0, #0x40                  	// #64
   10380:	str	w0, [sp, #44]
   10384:	ldr	x0, [sp, #24]
   10388:	bl	8bd0 <__asan_backtrace_open@plt+0x1f60>
   1038c:	bl	10214 <__ubsan_get_current_report_data@@Base+0xf30>
   10390:	str	w0, [sp, #40]
   10394:	ldr	w0, [sp, #40]
   10398:	cmp	w0, #0x40
   1039c:	cset	w0, ls  // ls = plast
   103a0:	and	w0, w0, #0xff
   103a4:	ldr	x30, [sp], #64
   103a8:	ret

00000000000103ac <__sancov_default_options@@Base>:
   103ac:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   103b0:	add	x0, x0, #0x678
   103b4:	ret
   103b8:	sub	sp, sp, #0x10
   103bc:	str	x0, [sp, #8]
   103c0:	ldr	x0, [sp, #8]
   103c4:	mov	w1, #0x1                   	// #1
   103c8:	strb	w1, [x0]
   103cc:	ldr	x0, [sp, #8]
   103d0:	strb	wzr, [x0, #1]
   103d4:	nop
   103d8:	add	sp, sp, #0x10
   103dc:	ret
   103e0:	str	x30, [sp, #-32]!
   103e4:	str	x0, [sp, #24]
   103e8:	str	x1, [sp, #16]
   103ec:	ldr	x0, [sp, #16]
   103f0:	mov	x3, x0
   103f4:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   103f8:	add	x2, x0, #0x680
   103fc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10400:	add	x1, x0, #0x6d0
   10404:	ldr	x0, [sp, #24]
   10408:	bl	104c4 <__sancov_default_options@@Base+0x118>
   1040c:	ldr	x0, [sp, #16]
   10410:	add	x0, x0, #0x1
   10414:	mov	x3, x0
   10418:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   1041c:	add	x2, x0, #0x6e0
   10420:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10424:	add	x1, x0, #0x6f8
   10428:	ldr	x0, [sp, #24]
   1042c:	bl	104c4 <__sancov_default_options@@Base+0x118>
   10430:	nop
   10434:	ldr	x30, [sp], #32
   10438:	ret
   1043c:	str	x30, [sp, #-16]!
   10440:	bl	6c60 <__sancov_default_options@plt>
   10444:	ldr	x30, [sp], #16
   10448:	ret
   1044c:	str	x30, [sp, #-64]!
   10450:	bl	1051c <__sancov_default_options@@Base+0x170>
   10454:	str	x0, [sp, #56]
   10458:	ldr	x0, [sp, #56]
   1045c:	bl	103b8 <__sancov_default_options@@Base+0xc>
   10460:	add	x0, sp, #0x18
   10464:	bl	1c400 <__sanitizer_set_report_fd@@Base+0x2254>
   10468:	add	x0, sp, #0x18
   1046c:	ldr	x1, [sp, #56]
   10470:	bl	103e0 <__sancov_default_options@@Base+0x34>
   10474:	bl	1043c <__sancov_default_options@@Base+0x90>
   10478:	mov	x1, x0
   1047c:	add	x0, sp, #0x18
   10480:	bl	1c0a4 <__sanitizer_set_report_fd@@Base+0x1ef8>
   10484:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10488:	add	x0, x0, #0x700
   1048c:	bl	1e85c <__sanitizer_set_report_fd@@Base+0x46b0>
   10490:	mov	x1, x0
   10494:	add	x0, sp, #0x18
   10498:	bl	1c0a4 <__sanitizer_set_report_fd@@Base+0x1ef8>
   1049c:	bl	1ba1c <__sanitizer_set_report_fd@@Base+0x1870>
   104a0:	ldr	x0, [sp, #56]
   104a4:	ldrb	w0, [x0, #1]
   104a8:	cmp	w0, #0x0
   104ac:	b.eq	104b8 <__sancov_default_options@@Base+0x10c>  // b.none
   104b0:	add	x0, sp, #0x18
   104b4:	bl	1baa0 <__sanitizer_set_report_fd@@Base+0x18f4>
   104b8:	nop
   104bc:	ldr	x30, [sp], #64
   104c0:	ret
   104c4:	stp	x19, x30, [sp, #-64]!
   104c8:	str	x0, [sp, #40]
   104cc:	str	x1, [sp, #32]
   104d0:	str	x2, [sp, #24]
   104d4:	str	x3, [sp, #16]
   104d8:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   104dc:	ldr	x1, [x0, #3776]
   104e0:	mov	x0, #0x10                  	// #16
   104e4:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
   104e8:	mov	x19, x0
   104ec:	ldr	x1, [sp, #16]
   104f0:	mov	x0, x19
   104f4:	bl	9bec <__ubsan_default_options@@Base+0x588>
   104f8:	str	x19, [sp, #56]
   104fc:	ldr	x3, [sp, #24]
   10500:	ldr	x2, [sp, #56]
   10504:	ldr	x1, [sp, #32]
   10508:	ldr	x0, [sp, #40]
   1050c:	bl	1c2e4 <__sanitizer_set_report_fd@@Base+0x2138>
   10510:	nop
   10514:	ldp	x19, x30, [sp], #64
   10518:	ret
   1051c:	adrp	x0, fa000 <__ubsan_vptr_type_cache@@Base+0x801b8>
   10520:	add	x0, x0, #0x250
   10524:	ret
   10528:	str	x30, [sp, #-32]!
   1052c:	adrp	x0, fa000 <__ubsan_vptr_type_cache@@Base+0x801b8>
   10530:	add	x0, x0, #0x280
   10534:	str	x0, [sp, #24]
   10538:	mov	w1, #0x4                   	// #4
   1053c:	adrp	x0, 1bb000 <__ubsan_vptr_type_cache@@Base+0x1411b8>
   10540:	add	x0, x0, #0x2c0
   10544:	bl	f15c <__ubsan_handle_cfi_bad_type@@Base+0xa40>
   10548:	and	w0, w0, #0xff
   1054c:	cmp	w0, #0x0
   10550:	cset	w0, eq  // eq = none
   10554:	and	w0, w0, #0xff
   10558:	cmp	w0, #0x0
   1055c:	b.eq	105c4 <__sancov_default_options@@Base+0x218>  // b.none
   10560:	add	x2, sp, #0x10
   10564:	adrp	x0, 1bb000 <__ubsan_vptr_type_cache@@Base+0x1411b8>
   10568:	add	x1, x0, #0x2c8
   1056c:	mov	x0, x2
   10570:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   10574:	mov	w1, #0x1                   	// #1
   10578:	adrp	x0, 1bb000 <__ubsan_vptr_type_cache@@Base+0x1411b8>
   1057c:	add	x0, x0, #0x2c0
   10580:	bl	f15c <__ubsan_handle_cfi_bad_type@@Base+0xa40>
   10584:	and	w0, w0, #0xff
   10588:	cmp	w0, #0x0
   1058c:	cset	w0, eq  // eq = none
   10590:	and	w0, w0, #0xff
   10594:	cmp	w0, #0x0
   10598:	b.eq	105bc <__sancov_default_options@@Base+0x210>  // b.none
   1059c:	mov	w1, #0xffffffff            	// #-1
   105a0:	ldr	x0, [sp, #24]
   105a4:	bl	11170 <__sancov_default_options@@Base+0xdc4>
   105a8:	mov	w2, #0x8                   	// #8
   105ac:	mov	w1, #0x1                   	// #1
   105b0:	adrp	x0, 1bb000 <__ubsan_vptr_type_cache@@Base+0x1411b8>
   105b4:	add	x0, x0, #0x2c0
   105b8:	bl	f094 <__ubsan_handle_cfi_bad_type@@Base+0x978>
   105bc:	add	x0, sp, #0x10
   105c0:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   105c4:	ldr	x0, [sp, #24]
   105c8:	ldr	x30, [sp], #32
   105cc:	ret
   105d0:	stp	x19, x30, [sp, #-64]!
   105d4:	str	x0, [sp, #40]
   105d8:	str	x1, [sp, #32]
   105dc:	str	x2, [sp, #24]
   105e0:	ldr	x0, [sp, #24]
   105e4:	cmp	x0, #0x0
   105e8:	b.ne	105f4 <__sancov_default_options@@Base+0x248>  // b.any
   105ec:	mov	x0, #0x8                   	// #8
   105f0:	str	x0, [sp, #24]
   105f4:	ldr	x0, [sp, #32]
   105f8:	cmp	x0, #0x0
   105fc:	b.ne	10648 <__sancov_default_options@@Base+0x29c>  // b.any
   10600:	add	x2, sp, #0x38
   10604:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   10608:	add	x1, x0, #0xaf0
   1060c:	mov	x0, x2
   10610:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   10614:	bl	10528 <__sancov_default_options@@Base+0x17c>
   10618:	mov	x4, x0
   1061c:	ldr	x3, [sp, #24]
   10620:	ldr	x2, [sp, #40]
   10624:	adrp	x0, 1bb000 <__ubsan_vptr_type_cache@@Base+0x1411b8>
   10628:	add	x1, x0, #0x2d0
   1062c:	mov	x0, x4
   10630:	bl	111bc <__sancov_default_options@@Base+0xe10>
   10634:	mov	x19, x0
   10638:	nop
   1063c:	add	x0, sp, #0x38
   10640:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   10644:	b	10664 <__sancov_default_options@@Base+0x2b8>
   10648:	bl	10528 <__sancov_default_options@@Base+0x17c>
   1064c:	ldr	x3, [sp, #24]
   10650:	ldr	x2, [sp, #40]
   10654:	ldr	x1, [sp, #32]
   10658:	bl	111bc <__sancov_default_options@@Base+0xe10>
   1065c:	mov	x19, x0
   10660:	nop
   10664:	mov	x0, x19
   10668:	ldp	x19, x30, [sp], #64
   1066c:	ret
   10670:	stp	x19, x30, [sp, #-64]!
   10674:	str	x0, [sp, #40]
   10678:	str	x1, [sp, #32]
   1067c:	str	x2, [sp, #24]
   10680:	mov	x0, #0x8                   	// #8
   10684:	str	x0, [sp, #56]
   10688:	ldr	x0, [sp, #24]
   1068c:	cmp	x0, #0x0
   10690:	b.ne	106e0 <__sancov_default_options@@Base+0x334>  // b.any
   10694:	add	x2, sp, #0x30
   10698:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   1069c:	add	x1, x0, #0xaf0
   106a0:	mov	x0, x2
   106a4:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   106a8:	bl	10528 <__sancov_default_options@@Base+0x17c>
   106ac:	mov	x5, x0
   106b0:	ldr	x4, [sp, #56]
   106b4:	ldr	x3, [sp, #32]
   106b8:	ldr	x2, [sp, #40]
   106bc:	adrp	x0, 1bb000 <__ubsan_vptr_type_cache@@Base+0x1411b8>
   106c0:	add	x1, x0, #0x2d0
   106c4:	mov	x0, x5
   106c8:	bl	11340 <__sancov_default_options@@Base+0xf94>
   106cc:	mov	x19, x0
   106d0:	nop
   106d4:	add	x0, sp, #0x30
   106d8:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   106dc:	b	10700 <__sancov_default_options@@Base+0x354>
   106e0:	bl	10528 <__sancov_default_options@@Base+0x17c>
   106e4:	ldr	x4, [sp, #56]
   106e8:	ldr	x3, [sp, #32]
   106ec:	ldr	x2, [sp, #40]
   106f0:	ldr	x1, [sp, #24]
   106f4:	bl	11340 <__sancov_default_options@@Base+0xf94>
   106f8:	mov	x19, x0
   106fc:	nop
   10700:	mov	x0, x19
   10704:	ldp	x19, x30, [sp], #64
   10708:	ret
   1070c:	str	x30, [sp, #-48]!
   10710:	str	x0, [sp, #24]
   10714:	str	x1, [sp, #16]
   10718:	ldr	x0, [sp, #16]
   1071c:	cmp	x0, #0x0
   10720:	b.ne	10760 <__sancov_default_options@@Base+0x3b4>  // b.any
   10724:	add	x2, sp, #0x28
   10728:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   1072c:	add	x1, x0, #0xaf0
   10730:	mov	x0, x2
   10734:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   10738:	bl	10528 <__sancov_default_options@@Base+0x17c>
   1073c:	mov	x3, x0
   10740:	ldr	x2, [sp, #24]
   10744:	adrp	x0, 1bb000 <__ubsan_vptr_type_cache@@Base+0x1411b8>
   10748:	add	x1, x0, #0x2d0
   1074c:	mov	x0, x3
   10750:	bl	1146c <__sancov_default_options@@Base+0x10c0>
   10754:	add	x0, sp, #0x28
   10758:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   1075c:	b	10770 <__sancov_default_options@@Base+0x3c4>
   10760:	bl	10528 <__sancov_default_options@@Base+0x17c>
   10764:	ldr	x2, [sp, #24]
   10768:	ldr	x1, [sp, #16]
   1076c:	bl	1146c <__sancov_default_options@@Base+0x10c0>
   10770:	ldr	x30, [sp], #48
   10774:	ret
   10778:	str	x30, [sp, #-32]!
   1077c:	str	x0, [sp, #24]
   10780:	bl	10ce4 <__sancov_default_options@@Base+0x938>
   10784:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   10788:	ldr	x0, [x0, #4024]
   1078c:	ldr	x0, [x0]
   10790:	ldr	x2, [sp, #24]
   10794:	mov	x1, x0
   10798:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   1079c:	add	x0, x0, #0x8d8
   107a0:	bl	25a74 <OnPrint@@Base+0x454>
   107a4:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   107a8:	str	x30, [sp, #-64]!
   107ac:	str	x0, [sp, #40]
   107b0:	str	x1, [sp, #32]
   107b4:	str	x2, [sp, #24]
   107b8:	ldr	x0, [sp, #40]
   107bc:	cmn	x0, #0x9
   107c0:	b.ls	107cc <__sancov_default_options@@Base+0x420>  // b.plast
   107c4:	mov	x0, #0x0                   	// #0
   107c8:	b	1082c <__sancov_default_options@@Base+0x480>
   107cc:	ldr	x0, [sp, #40]
   107d0:	add	x0, x0, #0x8
   107d4:	ldr	x2, [sp, #24]
   107d8:	ldr	x1, [sp, #32]
   107dc:	bl	105d0 <__sancov_default_options@@Base+0x224>
   107e0:	str	x0, [sp, #56]
   107e4:	ldr	x0, [sp, #56]
   107e8:	cmp	x0, #0x0
   107ec:	cset	w0, eq  // eq = none
   107f0:	and	w0, w0, #0xff
   107f4:	and	x0, x0, #0xff
   107f8:	cmp	x0, #0x0
   107fc:	b.eq	1080c <__sancov_default_options@@Base+0x460>  // b.none
   10800:	ldr	x0, [sp, #40]
   10804:	add	x0, x0, #0x8
   10808:	bl	10778 <__sancov_default_options@@Base+0x3cc>
   1080c:	ldr	x0, [sp, #56]
   10810:	mov	x1, #0xc041                	// #49217
   10814:	movk	x1, #0xbceb, lsl #16
   10818:	movk	x1, #0xb03a, lsl #32
   1081c:	movk	x1, #0x6a6c, lsl #48
   10820:	str	x1, [x0]
   10824:	ldr	x0, [sp, #56]
   10828:	add	x0, x0, #0x8
   1082c:	ldr	x30, [sp], #64
   10830:	ret
   10834:	str	x30, [sp, #-80]!
   10838:	str	x0, [sp, #40]
   1083c:	str	x1, [sp, #32]
   10840:	str	x2, [sp, #24]
   10844:	ldr	x0, [sp, #40]
   10848:	cmp	x0, #0x0
   1084c:	b.ne	10864 <__sancov_default_options@@Base+0x4b8>  // b.any
   10850:	mov	x2, #0x0                   	// #0
   10854:	ldr	x1, [sp, #24]
   10858:	ldr	x0, [sp, #32]
   1085c:	bl	107a8 <__sancov_default_options@@Base+0x3fc>
   10860:	b	10930 <__sancov_default_options@@Base+0x584>
   10864:	ldr	x0, [sp, #32]
   10868:	cmn	x0, #0x9
   1086c:	b.ls	10878 <__sancov_default_options@@Base+0x4cc>  // b.plast
   10870:	mov	x0, #0x0                   	// #0
   10874:	b	10930 <__sancov_default_options@@Base+0x584>
   10878:	ldr	x0, [sp, #40]
   1087c:	sub	x0, x0, #0x8
   10880:	str	x0, [sp, #40]
   10884:	ldr	x0, [sp, #32]
   10888:	add	x0, x0, #0x8
   1088c:	str	x0, [sp, #32]
   10890:	mov	x0, #0xc041                	// #49217
   10894:	movk	x0, #0xbceb, lsl #16
   10898:	movk	x0, #0xb03a, lsl #32
   1089c:	movk	x0, #0x6a6c, lsl #48
   108a0:	str	x0, [sp, #72]
   108a4:	ldr	x0, [sp, #40]
   108a8:	ldr	x0, [x0]
   108ac:	str	x0, [sp, #64]
   108b0:	ldr	x1, [sp, #72]
   108b4:	ldr	x0, [sp, #64]
   108b8:	cmp	x1, x0
   108bc:	cset	w0, ne  // ne = any
   108c0:	and	w0, w0, #0xff
   108c4:	and	x0, x0, #0xff
   108c8:	cmp	x0, #0x0
   108cc:	b.eq	108f0 <__sancov_default_options@@Base+0x544>  // b.none
   108d0:	ldr	x4, [sp, #64]
   108d4:	ldr	x3, [sp, #72]
   108d8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   108dc:	add	x2, x0, #0x928
   108e0:	mov	w1, #0xa5                  	// #165
   108e4:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   108e8:	add	x0, x0, #0x950
   108ec:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   108f0:	ldr	x2, [sp, #24]
   108f4:	ldr	x1, [sp, #32]
   108f8:	ldr	x0, [sp, #40]
   108fc:	bl	10670 <__sancov_default_options@@Base+0x2c4>
   10900:	str	x0, [sp, #56]
   10904:	ldr	x0, [sp, #56]
   10908:	cmp	x0, #0x0
   1090c:	cset	w0, eq  // eq = none
   10910:	and	w0, w0, #0xff
   10914:	and	x0, x0, #0xff
   10918:	cmp	x0, #0x0
   1091c:	b.eq	10928 <__sancov_default_options@@Base+0x57c>  // b.none
   10920:	ldr	x0, [sp, #32]
   10924:	bl	10778 <__sancov_default_options@@Base+0x3cc>
   10928:	ldr	x0, [sp, #56]
   1092c:	add	x0, x0, #0x8
   10930:	ldr	x30, [sp], #80
   10934:	ret
   10938:	str	x30, [sp, #-64]!
   1093c:	str	x0, [sp, #40]
   10940:	str	x1, [sp, #32]
   10944:	str	x2, [sp, #24]
   10948:	ldr	x1, [sp, #32]
   1094c:	ldr	x0, [sp, #40]
   10950:	bl	11034 <__sancov_default_options@@Base+0xc88>
   10954:	and	w0, w0, #0xff
   10958:	and	x0, x0, #0xff
   1095c:	cmp	x0, #0x0
   10960:	cset	w0, ne  // ne = any
   10964:	and	w0, w0, #0xff
   10968:	cmp	w0, #0x0
   1096c:	b.eq	10998 <__sancov_default_options@@Base+0x5ec>  // b.none
   10970:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   10974:	ldr	x0, [x0, #4024]
   10978:	ldr	x0, [x0]
   1097c:	ldr	x3, [sp, #32]
   10980:	ldr	x2, [sp, #40]
   10984:	mov	x1, x0
   10988:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   1098c:	add	x0, x0, #0x998
   10990:	bl	25a74 <OnPrint@@Base+0x454>
   10994:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   10998:	ldr	x1, [sp, #40]
   1099c:	ldr	x0, [sp, #32]
   109a0:	mul	x0, x1, x0
   109a4:	mov	x2, #0x0                   	// #0
   109a8:	ldr	x1, [sp, #24]
   109ac:	bl	107a8 <__sancov_default_options@@Base+0x3fc>
   109b0:	str	x0, [sp, #56]
   109b4:	ldr	x0, [sp, #56]
   109b8:	cmp	x0, #0x0
   109bc:	cset	w0, ne  // ne = any
   109c0:	and	w0, w0, #0xff
   109c4:	and	x0, x0, #0xff
   109c8:	cmp	x0, #0x0
   109cc:	b.eq	109ec <__sancov_default_options@@Base+0x640>  // b.none
   109d0:	ldr	x1, [sp, #40]
   109d4:	ldr	x0, [sp, #32]
   109d8:	mul	x0, x1, x0
   109dc:	mov	x2, x0
   109e0:	mov	w1, #0x0                   	// #0
   109e4:	ldr	x0, [sp, #56]
   109e8:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   109ec:	ldr	x0, [sp, #56]
   109f0:	ldr	x30, [sp], #64
   109f4:	ret
   109f8:	str	x30, [sp, #-48]!
   109fc:	str	x0, [sp, #24]
   10a00:	str	x1, [sp, #16]
   10a04:	ldr	x0, [sp, #24]
   10a08:	cmp	x0, #0x0
   10a0c:	b.eq	10a94 <__sancov_default_options@@Base+0x6e8>  // b.none
   10a10:	ldr	x0, [sp, #24]
   10a14:	sub	x0, x0, #0x8
   10a18:	str	x0, [sp, #24]
   10a1c:	mov	x0, #0xc041                	// #49217
   10a20:	movk	x0, #0xbceb, lsl #16
   10a24:	movk	x0, #0xb03a, lsl #32
   10a28:	movk	x0, #0x6a6c, lsl #48
   10a2c:	str	x0, [sp, #40]
   10a30:	ldr	x0, [sp, #24]
   10a34:	ldr	x0, [x0]
   10a38:	str	x0, [sp, #32]
   10a3c:	ldr	x1, [sp, #40]
   10a40:	ldr	x0, [sp, #32]
   10a44:	cmp	x1, x0
   10a48:	cset	w0, ne  // ne = any
   10a4c:	and	w0, w0, #0xff
   10a50:	and	x0, x0, #0xff
   10a54:	cmp	x0, #0x0
   10a58:	b.eq	10a7c <__sancov_default_options@@Base+0x6d0>  // b.none
   10a5c:	ldr	x4, [sp, #32]
   10a60:	ldr	x3, [sp, #40]
   10a64:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10a68:	add	x2, x0, #0x928
   10a6c:	mov	w1, #0xbd                  	// #189
   10a70:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10a74:	add	x0, x0, #0x950
   10a78:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   10a7c:	ldr	x0, [sp, #24]
   10a80:	str	xzr, [x0]
   10a84:	ldr	x1, [sp, #16]
   10a88:	ldr	x0, [sp, #24]
   10a8c:	bl	1070c <__sancov_default_options@@Base+0x360>
   10a90:	b	10a98 <__sancov_default_options@@Base+0x6ec>
   10a94:	nop
   10a98:	ldr	x30, [sp], #48
   10a9c:	ret
   10aa0:	str	x30, [sp, #-64]!
   10aa4:	str	x0, [sp, #24]
   10aa8:	str	x1, [sp, #16]
   10aac:	adrp	x0, 77000 <_Unwind_Backtrace@GCC_3.3>
   10ab0:	add	x0, x0, #0x4c0
   10ab4:	ldr	x0, [x0]
   10ab8:	mov	x1, x0
   10abc:	ldr	x0, [sp, #16]
   10ac0:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   10ac4:	str	x0, [sp, #16]
   10ac8:	ldr	x0, [sp, #24]
   10acc:	ldr	x1, [x0]
   10ad0:	ldr	x0, [sp, #24]
   10ad4:	ldr	x0, [x0, #8]
   10ad8:	sub	x1, x1, x0
   10adc:	ldr	x0, [sp, #16]
   10ae0:	cmp	x1, x0
   10ae4:	b.ge	10b64 <__sancov_default_options@@Base+0x7b8>  // b.tcont
   10ae8:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   10aec:	mov	x1, x0
   10af0:	ldr	x0, [sp, #16]
   10af4:	bl	93a4 <__asan_backtrace_open@plt+0x2734>
   10af8:	str	x0, [sp, #56]
   10afc:	mov	w2, #0x0                   	// #0
   10b00:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10b04:	add	x1, x0, #0xa08
   10b08:	ldr	x0, [sp, #56]
   10b0c:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   10b10:	mov	x1, x0
   10b14:	ldr	x0, [sp, #24]
   10b18:	str	x1, [x0, #8]
   10b1c:	ldr	x0, [sp, #24]
   10b20:	ldr	x1, [x0, #8]
   10b24:	ldr	x0, [sp, #56]
   10b28:	add	x1, x1, x0
   10b2c:	ldr	x0, [sp, #24]
   10b30:	str	x1, [x0]
   10b34:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   10b38:	add	x0, x0, #0xaf8
   10b3c:	ldr	x0, [x0]
   10b40:	cmp	x0, #0x0
   10b44:	b.eq	10b64 <__sancov_default_options@@Base+0x7b8>  // b.none
   10b48:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   10b4c:	add	x0, x0, #0xaf8
   10b50:	ldr	x2, [x0]
   10b54:	ldr	x0, [sp, #24]
   10b58:	ldr	x0, [x0, #8]
   10b5c:	ldr	x1, [sp, #56]
   10b60:	blr	x2
   10b64:	ldr	x0, [sp, #24]
   10b68:	ldr	x1, [x0]
   10b6c:	ldr	x0, [sp, #24]
   10b70:	ldr	x0, [x0, #8]
   10b74:	sub	x1, x1, x0
   10b78:	ldr	x0, [sp, #16]
   10b7c:	cmp	x1, x0
   10b80:	cset	w0, ge  // ge = tcont
   10b84:	and	w0, w0, #0xff
   10b88:	and	x0, x0, #0xff
   10b8c:	str	x0, [sp, #48]
   10b90:	str	xzr, [sp, #40]
   10b94:	ldr	x1, [sp, #48]
   10b98:	ldr	x0, [sp, #40]
   10b9c:	cmp	x1, x0
   10ba0:	cset	w0, eq  // eq = none
   10ba4:	and	w0, w0, #0xff
   10ba8:	and	x0, x0, #0xff
   10bac:	cmp	x0, #0x0
   10bb0:	b.eq	10bd4 <__sancov_default_options@@Base+0x828>  // b.none
   10bb4:	ldr	x4, [sp, #40]
   10bb8:	ldr	x3, [sp, #48]
   10bbc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10bc0:	add	x2, x0, #0xa18
   10bc4:	mov	w1, #0xd4                  	// #212
   10bc8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10bcc:	add	x0, x0, #0x950
   10bd0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   10bd4:	ldr	x0, [sp, #24]
   10bd8:	ldr	x0, [x0, #8]
   10bdc:	str	x0, [sp, #32]
   10be0:	ldr	x0, [sp, #24]
   10be4:	ldr	x1, [x0, #8]
   10be8:	ldr	x0, [sp, #16]
   10bec:	add	x1, x1, x0
   10bf0:	ldr	x0, [sp, #24]
   10bf4:	str	x1, [x0, #8]
   10bf8:	ldr	x0, [sp, #32]
   10bfc:	ldr	x30, [sp], #64
   10c00:	ret
   10c04:	str	x30, [sp, #-48]!
   10c08:	str	x0, [sp, #24]
   10c0c:	ldr	x0, [sp, #24]
   10c10:	bl	8964 <__asan_backtrace_open@plt+0x1cf4>
   10c14:	and	w0, w0, #0xff
   10c18:	and	x0, x0, #0xff
   10c1c:	str	x0, [sp, #40]
   10c20:	str	xzr, [sp, #32]
   10c24:	ldr	x1, [sp, #40]
   10c28:	ldr	x0, [sp, #32]
   10c2c:	cmp	x1, x0
   10c30:	cset	w0, eq  // eq = none
   10c34:	and	w0, w0, #0xff
   10c38:	and	x0, x0, #0xff
   10c3c:	cmp	x0, #0x0
   10c40:	b.eq	10c64 <__sancov_default_options@@Base+0x8b8>  // b.none
   10c44:	ldr	x4, [sp, #32]
   10c48:	ldr	x3, [sp, #40]
   10c4c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10c50:	add	x2, x0, #0xa58
   10c54:	mov	w1, #0xdb                  	// #219
   10c58:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10c5c:	add	x0, x0, #0x950
   10c60:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   10c64:	adrp	x0, 77000 <_Unwind_Backtrace@GCC_3.3>
   10c68:	add	x0, x0, #0x4c0
   10c6c:	ldr	x0, [x0]
   10c70:	mov	x1, x0
   10c74:	ldr	x0, [sp, #24]
   10c78:	bl	93a4 <__asan_backtrace_open@plt+0x2734>
   10c7c:	mov	x1, x0
   10c80:	adrp	x0, 77000 <_Unwind_Backtrace@GCC_3.3>
   10c84:	add	x0, x0, #0x4c0
   10c88:	str	x1, [x0]
   10c8c:	nop
   10c90:	ldr	x30, [sp], #48
   10c94:	ret
   10c98:	sub	sp, sp, #0x10
   10c9c:	str	x0, [sp, #8]
   10ca0:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   10ca4:	add	x0, x0, #0xaf8
   10ca8:	ldr	x1, [sp, #8]
   10cac:	str	x1, [x0]
   10cb0:	nop
   10cb4:	add	sp, sp, #0x10
   10cb8:	ret
   10cbc:	str	x30, [sp, #-16]!
   10cc0:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   10cc4:	add	x0, x0, #0xb00
   10cc8:	bl	11514 <__sancov_default_options@@Base+0x1168>
   10ccc:	and	w0, w0, #0xff
   10cd0:	cmp	w0, #0x0
   10cd4:	cset	w0, ne  // ne = any
   10cd8:	and	w0, w0, #0xff
   10cdc:	ldr	x30, [sp], #16
   10ce0:	ret
   10ce4:	str	x30, [sp, #-16]!
   10ce8:	mov	w1, #0x1                   	// #1
   10cec:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   10cf0:	add	x0, x0, #0xb00
   10cf4:	bl	11534 <__sancov_default_options@@Base+0x1188>
   10cf8:	nop
   10cfc:	ldr	x30, [sp], #16
   10d00:	ret
   10d04:	str	x30, [sp, #-16]!
   10d08:	mov	w1, #0x1                   	// #1
   10d0c:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   10d10:	add	x0, x0, #0xb08
   10d14:	bl	f15c <__ubsan_handle_cfi_bad_type@@Base+0xa40>
   10d18:	and	w0, w0, #0xff
   10d1c:	cmp	w0, #0x0
   10d20:	cset	w0, ne  // ne = any
   10d24:	and	w0, w0, #0xff
   10d28:	ldr	x30, [sp], #16
   10d2c:	ret
   10d30:	str	x30, [sp, #-32]!
   10d34:	strb	w0, [sp, #31]
   10d38:	ldrb	w0, [sp, #31]
   10d3c:	mov	w2, #0x1                   	// #1
   10d40:	mov	w1, w0
   10d44:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   10d48:	add	x0, x0, #0xb08
   10d4c:	bl	f094 <__ubsan_handle_cfi_bad_type@@Base+0x978>
   10d50:	nop
   10d54:	ldr	x30, [sp], #32
   10d58:	ret
   10d5c:	str	x30, [sp, #-16]!
   10d60:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10d64:	add	x0, x0, #0xa80
   10d68:	bl	25a74 <OnPrint@@Base+0x454>
   10d6c:	nop
   10d70:	ldr	x30, [sp], #16
   10d74:	ret
   10d78:	str	x30, [sp, #-32]!
   10d7c:	str	x0, [sp, #24]
   10d80:	ldr	x0, [sp, #24]
   10d84:	mov	w2, #0x1                   	// #1
   10d88:	mov	w1, #0x0                   	// #0
   10d8c:	bl	f094 <__ubsan_handle_cfi_bad_type@@Base+0x978>
   10d90:	nop
   10d94:	ldr	x30, [sp], #32
   10d98:	ret
   10d9c:	str	x30, [sp, #-64]!
   10da0:	str	x0, [sp, #24]
   10da4:	ldr	x0, [sp, #24]
   10da8:	str	x0, [sp, #56]
   10dac:	str	xzr, [sp, #48]
   10db0:	ldr	x1, [sp, #56]
   10db4:	ldr	x0, [sp, #48]
   10db8:	cmp	x1, x0
   10dbc:	cset	w0, eq  // eq = none
   10dc0:	and	w0, w0, #0xff
   10dc4:	and	x0, x0, #0xff
   10dc8:	cmp	x0, #0x0
   10dcc:	b.eq	10df0 <__sancov_default_options@@Base+0xa44>  // b.none
   10dd0:	ldr	x4, [sp, #48]
   10dd4:	ldr	x3, [sp, #56]
   10dd8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10ddc:	add	x2, x0, #0x750
   10de0:	mov	w1, #0x151                 	// #337
   10de4:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   10de8:	add	x0, x0, #0x760
   10dec:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   10df0:	ldr	x0, [sp, #24]
   10df4:	clz	x0, x0
   10df8:	mov	w1, w0
   10dfc:	mov	w0, #0x3f                  	// #63
   10e00:	sub	w0, w0, w1
   10e04:	sxtw	x0, w0
   10e08:	str	x0, [sp, #40]
   10e0c:	ldr	x0, [sp, #40]
   10e10:	ldr	x30, [sp], #64
   10e14:	ret
   10e18:	sub	sp, sp, #0x10
   10e1c:	str	x0, [sp, #8]
   10e20:	str	x1, [sp]
   10e24:	ldr	x0, [sp]
   10e28:	sub	x1, x0, #0x1
   10e2c:	ldr	x0, [sp, #8]
   10e30:	and	x0, x1, x0
   10e34:	cmp	x0, #0x0
   10e38:	cset	w0, eq  // eq = none
   10e3c:	and	w0, w0, #0xff
   10e40:	add	sp, sp, #0x10
   10e44:	ret
   10e48:	sub	sp, sp, #0x20
   10e4c:	str	x0, [sp, #24]
   10e50:	str	x1, [sp, #16]
   10e54:	str	x2, [sp, #8]
   10e58:	nop
   10e5c:	add	sp, sp, #0x20
   10e60:	ret
   10e64:	sub	sp, sp, #0x20
   10e68:	str	x0, [sp, #24]
   10e6c:	str	x1, [sp, #16]
   10e70:	str	x2, [sp, #8]
   10e74:	nop
   10e78:	add	sp, sp, #0x20
   10e7c:	ret
   10e80:	str	x30, [sp, #-48]!
   10e84:	str	x0, [sp, #40]
   10e88:	str	w1, [sp, #36]
   10e8c:	str	x2, [sp, #24]
   10e90:	ldr	w0, [sp, #36]
   10e94:	sxtw	x0, w0
   10e98:	add	x0, x0, #0x2
   10e9c:	lsl	x0, x0, #3
   10ea0:	ldr	x1, [sp, #40]
   10ea4:	add	x0, x1, x0
   10ea8:	mov	w1, #0x1                   	// #1
   10eac:	bl	11080 <__sancov_default_options@@Base+0xcd4>
   10eb0:	mov	x1, x0
   10eb4:	ldr	x0, [sp, #24]
   10eb8:	add	x0, x0, x1
   10ebc:	str	x0, [sp, #24]
   10ec0:	ldr	w0, [sp, #36]
   10ec4:	sxtw	x0, w0
   10ec8:	add	x0, x0, #0x2
   10ecc:	lsl	x0, x0, #3
   10ed0:	ldr	x1, [sp, #40]
   10ed4:	add	x0, x1, x0
   10ed8:	mov	w2, #0x1                   	// #1
   10edc:	ldr	x1, [sp, #24]
   10ee0:	bl	11104 <__sancov_default_options@@Base+0xd58>
   10ee4:	nop
   10ee8:	ldr	x30, [sp], #48
   10eec:	ret
   10ef0:	str	x30, [sp, #-48]!
   10ef4:	str	x0, [sp, #40]
   10ef8:	str	w1, [sp, #36]
   10efc:	str	x2, [sp, #24]
   10f00:	ldr	w0, [sp, #36]
   10f04:	sxtw	x0, w0
   10f08:	add	x0, x0, #0x2
   10f0c:	lsl	x0, x0, #3
   10f10:	ldr	x1, [sp, #40]
   10f14:	add	x0, x1, x0
   10f18:	mov	w1, #0x1                   	// #1
   10f1c:	bl	11080 <__sancov_default_options@@Base+0xcd4>
   10f20:	mov	x1, x0
   10f24:	ldr	x0, [sp, #24]
   10f28:	sub	x0, x1, x0
   10f2c:	str	x0, [sp, #24]
   10f30:	ldr	w0, [sp, #36]
   10f34:	sxtw	x0, w0
   10f38:	add	x0, x0, #0x2
   10f3c:	lsl	x0, x0, #3
   10f40:	ldr	x1, [sp, #40]
   10f44:	add	x0, x1, x0
   10f48:	mov	w2, #0x1                   	// #1
   10f4c:	ldr	x1, [sp, #24]
   10f50:	bl	11104 <__sancov_default_options@@Base+0xd58>
   10f54:	nop
   10f58:	ldr	x30, [sp], #48
   10f5c:	ret
   10f60:	sub	sp, sp, #0x10
   10f64:	str	x0, [sp, #8]
   10f68:	ldr	x1, [sp, #8]
   10f6c:	ldr	x0, [sp, #8]
   10f70:	str	x1, [x0]
   10f74:	ldr	x1, [sp, #8]
   10f78:	ldr	x0, [sp, #8]
   10f7c:	str	x1, [x0, #8]
   10f80:	nop
   10f84:	add	sp, sp, #0x10
   10f88:	ret
   10f8c:	str	x30, [sp, #-32]!
   10f90:	str	x0, [sp, #24]
   10f94:	mov	x2, #0x28                  	// #40
   10f98:	mov	w1, #0x0                   	// #0
   10f9c:	ldr	x0, [sp, #24]
   10fa0:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   10fa4:	ldr	x0, [sp, #24]
   10fa8:	bl	10f60 <__sancov_default_options@@Base+0xbb4>
   10fac:	nop
   10fb0:	ldr	x30, [sp], #32
   10fb4:	ret
   10fb8:	sub	sp, sp, #0x10
   10fbc:	str	x0, [sp, #8]
   10fc0:	ldr	x0, [sp, #8]
   10fc4:	add	sp, sp, #0x10
   10fc8:	ret
   10fcc:	str	x30, [sp, #-48]!
   10fd0:	str	x0, [sp, #24]
   10fd4:	str	x1, [sp, #16]
   10fd8:	ldr	x0, [sp, #16]
   10fdc:	str	x0, [sp, #40]
   10fe0:	mov	x0, #0x8000                	// #32768
   10fe4:	str	x0, [sp, #32]
   10fe8:	ldr	x1, [sp, #40]
   10fec:	ldr	x0, [sp, #32]
   10ff0:	cmp	x1, x0
   10ff4:	cset	w0, cs  // cs = hs, nlast
   10ff8:	and	w0, w0, #0xff
   10ffc:	and	x0, x0, #0xff
   11000:	cmp	x0, #0x0
   11004:	b.eq	11028 <__sancov_default_options@@Base+0xc7c>  // b.none
   11008:	ldr	x4, [sp, #32]
   1100c:	ldr	x3, [sp, #40]
   11010:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11014:	add	x2, x0, #0x820
   11018:	mov	w1, #0x15                  	// #21
   1101c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11020:	add	x0, x0, #0x840
   11024:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   11028:	nop
   1102c:	ldr	x30, [sp], #48
   11030:	ret
   11034:	sub	sp, sp, #0x20
   11038:	str	x0, [sp, #8]
   1103c:	str	x1, [sp]
   11040:	ldr	x0, [sp, #8]
   11044:	cmp	x0, #0x0
   11048:	b.ne	11054 <__sancov_default_options@@Base+0xca8>  // b.any
   1104c:	mov	w0, #0x0                   	// #0
   11050:	b	11078 <__sancov_default_options@@Base+0xccc>
   11054:	mov	x0, #0xffffffffffffffff    	// #-1
   11058:	str	x0, [sp, #24]
   1105c:	ldr	x1, [sp, #24]
   11060:	ldr	x0, [sp, #8]
   11064:	udiv	x0, x1, x0
   11068:	ldr	x1, [sp]
   1106c:	cmp	x1, x0
   11070:	cset	w0, hi  // hi = pmore
   11074:	and	w0, w0, #0xff
   11078:	add	sp, sp, #0x20
   1107c:	ret
   11080:	sub	sp, sp, #0x20
   11084:	str	x0, [sp, #8]
   11088:	str	w1, [sp, #4]
   1108c:	ldr	w0, [sp, #4]
   11090:	cmp	w0, #0x1
   11094:	b.ne	110a8 <__sancov_default_options@@Base+0xcfc>  // b.any
   11098:	ldr	x0, [sp, #8]
   1109c:	ldr	x0, [x0]
   110a0:	str	x0, [sp, #24]
   110a4:	b	110f8 <__sancov_default_options@@Base+0xd4c>
   110a8:	ldr	w0, [sp, #4]
   110ac:	cmp	w0, #0x2
   110b0:	b.ne	110c4 <__sancov_default_options@@Base+0xd18>  // b.any
   110b4:	ldr	x0, [sp, #8]
   110b8:	ldr	x0, [x0]
   110bc:	str	x0, [sp, #24]
   110c0:	b	110f8 <__sancov_default_options@@Base+0xd4c>
   110c4:	ldr	w0, [sp, #4]
   110c8:	cmp	w0, #0x4
   110cc:	b.ne	110e4 <__sancov_default_options@@Base+0xd38>  // b.any
   110d0:	ldr	x0, [sp, #8]
   110d4:	ldr	x0, [x0]
   110d8:	str	x0, [sp, #24]
   110dc:	dmb	ish
   110e0:	b	110f8 <__sancov_default_options@@Base+0xd4c>
   110e4:	dmb	ish
   110e8:	ldr	x0, [sp, #8]
   110ec:	ldr	x0, [x0]
   110f0:	str	x0, [sp, #24]
   110f4:	dmb	ish
   110f8:	ldr	x0, [sp, #24]
   110fc:	add	sp, sp, #0x20
   11100:	ret
   11104:	sub	sp, sp, #0x20
   11108:	str	x0, [sp, #24]
   1110c:	str	x1, [sp, #16]
   11110:	str	w2, [sp, #12]
   11114:	ldr	w0, [sp, #12]
   11118:	cmp	w0, #0x1
   1111c:	b.ne	11130 <__sancov_default_options@@Base+0xd84>  // b.any
   11120:	ldr	x0, [sp, #24]
   11124:	ldr	x1, [sp, #16]
   11128:	str	x1, [x0]
   1112c:	b	11164 <__sancov_default_options@@Base+0xdb8>
   11130:	ldr	w0, [sp, #12]
   11134:	cmp	w0, #0x8
   11138:	b.ne	11150 <__sancov_default_options@@Base+0xda4>  // b.any
   1113c:	dmb	ish
   11140:	ldr	x0, [sp, #24]
   11144:	ldr	x1, [sp, #16]
   11148:	str	x1, [x0]
   1114c:	b	11164 <__sancov_default_options@@Base+0xdb8>
   11150:	dmb	ish
   11154:	ldr	x0, [sp, #24]
   11158:	ldr	x1, [sp, #16]
   1115c:	str	x1, [x0]
   11160:	dmb	ish
   11164:	nop
   11168:	add	sp, sp, #0x20
   1116c:	ret
   11170:	str	x30, [sp, #-32]!
   11174:	str	x0, [sp, #24]
   11178:	str	w1, [sp, #20]
   1117c:	ldr	x0, [sp, #24]
   11180:	ldr	w1, [sp, #20]
   11184:	bl	1155c <__sancov_default_options@@Base+0x11b0>
   11188:	ldr	x1, [sp, #24]
   1118c:	mov	x0, #0xdc0                 	// #3520
   11190:	movk	x0, #0x8, lsl #16
   11194:	add	x0, x1, x0
   11198:	bl	11598 <__sancov_default_options@@Base+0x11ec>
   1119c:	ldr	x1, [sp, #24]
   111a0:	mov	x0, #0x1008                	// #4104
   111a4:	movk	x0, #0xc, lsl #16
   111a8:	add	x0, x1, x0
   111ac:	bl	10f8c <__sancov_default_options@@Base+0xbe0>
   111b0:	nop
   111b4:	ldr	x30, [sp], #32
   111b8:	ret
   111bc:	stp	x19, x20, [sp, #-96]!
   111c0:	str	x30, [sp, #16]
   111c4:	str	x0, [sp, #56]
   111c8:	str	x1, [sp, #48]
   111cc:	str	x2, [sp, #40]
   111d0:	str	x3, [sp, #32]
   111d4:	ldr	x0, [sp, #40]
   111d8:	cmp	x0, #0x0
   111dc:	b.ne	111e8 <__sancov_default_options@@Base+0xe3c>  // b.any
   111e0:	mov	x0, #0x1                   	// #1
   111e4:	str	x0, [sp, #40]
   111e8:	ldr	x1, [sp, #40]
   111ec:	ldr	x0, [sp, #32]
   111f0:	add	x0, x1, x0
   111f4:	ldr	x1, [sp, #40]
   111f8:	cmp	x1, x0
   111fc:	b.ls	1122c <__sancov_default_options@@Base+0xe80>  // b.plast
   11200:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   11204:	ldr	x0, [x0, #4024]
   11208:	ldr	x0, [x0]
   1120c:	ldr	x3, [sp, #32]
   11210:	ldr	x2, [sp, #40]
   11214:	mov	x1, x0
   11218:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   1121c:	add	x0, x0, #0xad8
   11220:	bl	25a74 <OnPrint@@Base+0x454>
   11224:	mov	x0, #0x0                   	// #0
   11228:	b	11334 <__sancov_default_options@@Base+0xf88>
   1122c:	ldr	x0, [sp, #40]
   11230:	str	x0, [sp, #80]
   11234:	ldr	x0, [sp, #32]
   11238:	cmp	x0, #0x8
   1123c:	b.ls	11250 <__sancov_default_options@@Base+0xea4>  // b.plast
   11240:	ldr	x1, [sp, #32]
   11244:	ldr	x0, [sp, #40]
   11248:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   1124c:	str	x0, [sp, #40]
   11250:	ldr	x1, [sp, #32]
   11254:	ldr	x0, [sp, #40]
   11258:	bl	115c8 <__sancov_default_options@@Base+0x121c>
   1125c:	and	w0, w0, #0xff
   11260:	cmp	w0, #0x0
   11264:	b.eq	11294 <__sancov_default_options@@Base+0xee8>  // b.none
   11268:	ldr	x19, [sp, #48]
   1126c:	ldr	x20, [sp, #56]
   11270:	ldr	x0, [sp, #56]
   11274:	ldr	x1, [sp, #40]
   11278:	bl	11600 <__sancov_default_options@@Base+0x1254>
   1127c:	mov	x2, x0
   11280:	mov	x1, x20
   11284:	mov	x0, x19
   11288:	bl	1161c <__sancov_default_options@@Base+0x1270>
   1128c:	str	x0, [sp, #88]
   11290:	b	112cc <__sancov_default_options@@Base+0xf20>
   11294:	ldr	x1, [sp, #56]
   11298:	mov	x0, #0xdc0                 	// #3520
   1129c:	movk	x0, #0x8, lsl #16
   112a0:	add	x4, x1, x0
   112a4:	ldr	x1, [sp, #56]
   112a8:	mov	x0, #0x1008                	// #4104
   112ac:	movk	x0, #0xc, lsl #16
   112b0:	add	x0, x1, x0
   112b4:	ldr	x3, [sp, #32]
   112b8:	ldr	x2, [sp, #80]
   112bc:	mov	x1, x0
   112c0:	mov	x0, x4
   112c4:	bl	117b4 <__sancov_default_options@@Base+0x1408>
   112c8:	str	x0, [sp, #88]
   112cc:	ldr	x0, [sp, #32]
   112d0:	cmp	x0, #0x8
   112d4:	b.ls	11330 <__sancov_default_options@@Base+0xf84>  // b.plast
   112d8:	ldr	x0, [sp, #32]
   112dc:	sub	x1, x0, #0x1
   112e0:	ldr	x0, [sp, #88]
   112e4:	and	x0, x1, x0
   112e8:	str	x0, [sp, #72]
   112ec:	str	xzr, [sp, #64]
   112f0:	ldr	x1, [sp, #72]
   112f4:	ldr	x0, [sp, #64]
   112f8:	cmp	x1, x0
   112fc:	cset	w0, ne  // ne = any
   11300:	and	w0, w0, #0xff
   11304:	and	x0, x0, #0xff
   11308:	cmp	x0, #0x0
   1130c:	b.eq	11330 <__sancov_default_options@@Base+0xf84>  // b.none
   11310:	ldr	x4, [sp, #64]
   11314:	ldr	x3, [sp, #72]
   11318:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   1131c:	add	x2, x0, #0xb38
   11320:	mov	w1, #0x42                  	// #66
   11324:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11328:	add	x0, x0, #0xb78
   1132c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   11330:	ldr	x0, [sp, #88]
   11334:	ldr	x30, [sp, #16]
   11338:	ldp	x19, x20, [sp], #96
   1133c:	ret
   11340:	str	x30, [sp, #-112]!
   11344:	str	x0, [sp, #56]
   11348:	str	x1, [sp, #48]
   1134c:	str	x2, [sp, #40]
   11350:	str	x3, [sp, #32]
   11354:	str	x4, [sp, #24]
   11358:	ldr	x0, [sp, #40]
   1135c:	cmp	x0, #0x0
   11360:	b.ne	1137c <__sancov_default_options@@Base+0xfd0>  // b.any
   11364:	ldr	x3, [sp, #24]
   11368:	ldr	x2, [sp, #32]
   1136c:	ldr	x1, [sp, #48]
   11370:	ldr	x0, [sp, #56]
   11374:	bl	111bc <__sancov_default_options@@Base+0xe10>
   11378:	b	11464 <__sancov_default_options@@Base+0x10b8>
   1137c:	ldr	x0, [sp, #32]
   11380:	cmp	x0, #0x0
   11384:	b.ne	113a0 <__sancov_default_options@@Base+0xff4>  // b.any
   11388:	ldr	x2, [sp, #40]
   1138c:	ldr	x1, [sp, #48]
   11390:	ldr	x0, [sp, #56]
   11394:	bl	1146c <__sancov_default_options@@Base+0x10c0>
   11398:	mov	x0, #0x0                   	// #0
   1139c:	b	11464 <__sancov_default_options@@Base+0x10b8>
   113a0:	ldr	x1, [sp, #40]
   113a4:	ldr	x0, [sp, #56]
   113a8:	bl	11cf0 <__sancov_default_options@@Base+0x1944>
   113ac:	and	w0, w0, #0xff
   113b0:	and	x0, x0, #0xff
   113b4:	str	x0, [sp, #104]
   113b8:	str	xzr, [sp, #96]
   113bc:	ldr	x1, [sp, #104]
   113c0:	ldr	x0, [sp, #96]
   113c4:	cmp	x1, x0
   113c8:	cset	w0, eq  // eq = none
   113cc:	and	w0, w0, #0xff
   113d0:	and	x0, x0, #0xff
   113d4:	cmp	x0, #0x0
   113d8:	b.eq	113fc <__sancov_default_options@@Base+0x1050>  // b.none
   113dc:	ldr	x4, [sp, #96]
   113e0:	ldr	x3, [sp, #104]
   113e4:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   113e8:	add	x2, x0, #0xbc8
   113ec:	mov	w1, #0x62                  	// #98
   113f0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   113f4:	add	x0, x0, #0xb78
   113f8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   113fc:	ldr	x1, [sp, #40]
   11400:	ldr	x0, [sp, #56]
   11404:	bl	11d40 <__sancov_default_options@@Base+0x1994>
   11408:	str	x0, [sp, #88]
   1140c:	ldr	x1, [sp, #88]
   11410:	ldr	x0, [sp, #32]
   11414:	bl	9374 <__asan_backtrace_open@plt+0x2704>
   11418:	str	x0, [sp, #80]
   1141c:	ldr	x3, [sp, #24]
   11420:	ldr	x2, [sp, #32]
   11424:	ldr	x1, [sp, #48]
   11428:	ldr	x0, [sp, #56]
   1142c:	bl	111bc <__sancov_default_options@@Base+0xe10>
   11430:	str	x0, [sp, #72]
   11434:	ldr	x0, [sp, #72]
   11438:	cmp	x0, #0x0
   1143c:	b.eq	11450 <__sancov_default_options@@Base+0x10a4>  // b.none
   11440:	ldr	x2, [sp, #80]
   11444:	ldr	x1, [sp, #40]
   11448:	ldr	x0, [sp, #72]
   1144c:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   11450:	ldr	x2, [sp, #40]
   11454:	ldr	x1, [sp, #48]
   11458:	ldr	x0, [sp, #56]
   1145c:	bl	1146c <__sancov_default_options@@Base+0x10c0>
   11460:	ldr	x0, [sp, #72]
   11464:	ldr	x30, [sp], #112
   11468:	ret
   1146c:	stp	x19, x20, [sp, #-64]!
   11470:	str	x30, [sp, #16]
   11474:	str	x0, [sp, #56]
   11478:	str	x1, [sp, #48]
   1147c:	str	x2, [sp, #40]
   11480:	ldr	x0, [sp, #40]
   11484:	cmp	x0, #0x0
   11488:	b.eq	11504 <__sancov_default_options@@Base+0x1158>  // b.none
   1148c:	ldr	x0, [sp, #56]
   11490:	ldr	x1, [sp, #40]
   11494:	bl	11d94 <__sancov_default_options@@Base+0x19e8>
   11498:	and	w0, w0, #0xff
   1149c:	cmp	w0, #0x0
   114a0:	b.eq	114d0 <__sancov_default_options@@Base+0x1124>  // b.none
   114a4:	ldr	x19, [sp, #48]
   114a8:	ldr	x20, [sp, #56]
   114ac:	ldr	x0, [sp, #56]
   114b0:	ldr	x1, [sp, #40]
   114b4:	bl	11de0 <__sancov_default_options@@Base+0x1a34>
   114b8:	ldr	x3, [sp, #40]
   114bc:	mov	x2, x0
   114c0:	mov	x1, x20
   114c4:	mov	x0, x19
   114c8:	bl	11e1c <__sancov_default_options@@Base+0x1a70>
   114cc:	b	11508 <__sancov_default_options@@Base+0x115c>
   114d0:	ldr	x1, [sp, #56]
   114d4:	mov	x0, #0xdc0                 	// #3520
   114d8:	movk	x0, #0x8, lsl #16
   114dc:	add	x3, x1, x0
   114e0:	ldr	x1, [sp, #56]
   114e4:	mov	x0, #0x1008                	// #4104
   114e8:	movk	x0, #0xc, lsl #16
   114ec:	add	x0, x1, x0
   114f0:	ldr	x2, [sp, #40]
   114f4:	mov	x1, x0
   114f8:	mov	x0, x3
   114fc:	bl	11f7c <__sancov_default_options@@Base+0x1bd0>
   11500:	b	11508 <__sancov_default_options@@Base+0x115c>
   11504:	nop
   11508:	ldr	x30, [sp, #16]
   1150c:	ldp	x19, x20, [sp], #64
   11510:	ret
   11514:	str	x30, [sp, #-32]!
   11518:	str	x0, [sp, #24]
   1151c:	mov	w1, #0x1                   	// #1
   11520:	ldr	x0, [sp, #24]
   11524:	bl	f15c <__ubsan_handle_cfi_bad_type@@Base+0xa40>
   11528:	and	w0, w0, #0xff
   1152c:	ldr	x30, [sp], #32
   11530:	ret
   11534:	str	x30, [sp, #-32]!
   11538:	str	x0, [sp, #24]
   1153c:	strb	w1, [sp, #23]
   11540:	mov	w2, #0x1                   	// #1
   11544:	ldrb	w1, [sp, #23]
   11548:	ldr	x0, [sp, #24]
   1154c:	bl	f094 <__ubsan_handle_cfi_bad_type@@Base+0x978>
   11550:	nop
   11554:	ldr	x30, [sp], #32
   11558:	ret
   1155c:	str	x30, [sp, #-32]!
   11560:	str	x0, [sp, #24]
   11564:	str	w1, [sp, #20]
   11568:	ldr	x0, [sp, #24]
   1156c:	bl	121b8 <__sancov_default_options@@Base+0x1e0c>
   11570:	ldr	x1, [sp, #24]
   11574:	mov	x0, #0x40                  	// #64
   11578:	movk	x0, #0x8, lsl #16
   1157c:	add	x0, x1, x0
   11580:	mov	x2, #0xd80                 	// #3456
   11584:	mov	w1, #0x0                   	// #0
   11588:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   1158c:	nop
   11590:	ldr	x30, [sp], #32
   11594:	ret
   11598:	str	x30, [sp, #-32]!
   1159c:	str	x0, [sp, #24]
   115a0:	mov	x2, #0x248                 	// #584
   115a4:	movk	x2, #0x4, lsl #16
   115a8:	mov	w1, #0x0                   	// #0
   115ac:	ldr	x0, [sp, #24]
   115b0:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   115b4:	ldr	x0, [sp, #24]
   115b8:	bl	121e8 <__sancov_default_options@@Base+0x1e3c>
   115bc:	nop
   115c0:	ldr	x30, [sp], #32
   115c4:	ret
   115c8:	sub	sp, sp, #0x10
   115cc:	str	x0, [sp, #8]
   115d0:	str	x1, [sp]
   115d4:	ldr	x0, [sp, #8]
   115d8:	cmp	x0, #0x20, lsl #12
   115dc:	b.hi	115f4 <__sancov_default_options@@Base+0x1248>  // b.pmore
   115e0:	ldr	x0, [sp]
   115e4:	cmp	x0, #0x20, lsl #12
   115e8:	b.hi	115f4 <__sancov_default_options@@Base+0x1248>  // b.pmore
   115ec:	mov	w0, #0x1                   	// #1
   115f0:	b	115f8 <__sancov_default_options@@Base+0x124c>
   115f4:	mov	w0, #0x0                   	// #0
   115f8:	add	sp, sp, #0x10
   115fc:	ret
   11600:	str	x30, [sp, #-32]!
   11604:	str	x0, [sp, #24]
   11608:	str	x1, [sp, #16]
   1160c:	ldr	x0, [sp, #16]
   11610:	bl	12224 <__sancov_default_options@@Base+0x1e78>
   11614:	ldr	x30, [sp], #32
   11618:	ret
   1161c:	str	x30, [sp, #-96]!
   11620:	str	x0, [sp, #40]
   11624:	str	x1, [sp, #32]
   11628:	str	x2, [sp, #24]
   1162c:	ldr	x0, [sp, #24]
   11630:	str	x0, [sp, #88]
   11634:	str	xzr, [sp, #80]
   11638:	ldr	x1, [sp, #88]
   1163c:	ldr	x0, [sp, #80]
   11640:	cmp	x1, x0
   11644:	cset	w0, eq  // eq = none
   11648:	and	w0, w0, #0xff
   1164c:	and	x0, x0, #0xff
   11650:	cmp	x0, #0x0
   11654:	b.eq	11678 <__sancov_default_options@@Base+0x12cc>  // b.none
   11658:	ldr	x4, [sp, #80]
   1165c:	ldr	x3, [sp, #88]
   11660:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11664:	add	x2, x0, #0xbe8
   11668:	mov	w1, #0x9f                  	// #159
   1166c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11670:	add	x0, x0, #0xc00
   11674:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   11678:	ldr	x0, [sp, #24]
   1167c:	str	x0, [sp, #72]
   11680:	mov	x0, #0x36                  	// #54
   11684:	str	x0, [sp, #64]
   11688:	ldr	x1, [sp, #72]
   1168c:	ldr	x0, [sp, #64]
   11690:	cmp	x1, x0
   11694:	cset	w0, cs  // cs = hs, nlast
   11698:	and	w0, w0, #0xff
   1169c:	and	x0, x0, #0xff
   116a0:	cmp	x0, #0x0
   116a4:	b.eq	116c8 <__sancov_default_options@@Base+0x131c>  // b.none
   116a8:	ldr	x4, [sp, #64]
   116ac:	ldr	x3, [sp, #72]
   116b0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   116b4:	add	x2, x0, #0xc50
   116b8:	mov	w1, #0xa0                  	// #160
   116bc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   116c0:	add	x0, x0, #0xc00
   116c4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   116c8:	ldr	x0, [sp, #24]
   116cc:	lsl	x0, x0, #10
   116d0:	ldr	x1, [sp, #40]
   116d4:	add	x0, x1, x0
   116d8:	str	x0, [sp, #56]
   116dc:	ldr	x0, [sp, #56]
   116e0:	ldr	x0, [x0]
   116e4:	cmp	x0, #0x0
   116e8:	cset	w0, eq  // eq = none
   116ec:	and	w0, w0, #0xff
   116f0:	and	x0, x0, #0xff
   116f4:	cmp	x0, #0x0
   116f8:	b.eq	1173c <__sancov_default_options@@Base+0x1390>  // b.none
   116fc:	ldr	x3, [sp, #24]
   11700:	ldr	x2, [sp, #32]
   11704:	ldr	x1, [sp, #56]
   11708:	ldr	x0, [sp, #40]
   1170c:	bl	122f4 <__sancov_default_options@@Base+0x1f48>
   11710:	and	w0, w0, #0xff
   11714:	eor	w0, w0, #0x1
   11718:	and	w0, w0, #0xff
   1171c:	and	x0, x0, #0xff
   11720:	cmp	x0, #0x0
   11724:	cset	w0, ne  // ne = any
   11728:	and	w0, w0, #0xff
   1172c:	cmp	w0, #0x0
   11730:	b.eq	1173c <__sancov_default_options@@Base+0x1390>  // b.none
   11734:	mov	x0, #0x0                   	// #0
   11738:	b	117ac <__sancov_default_options@@Base+0x1400>
   1173c:	ldr	x0, [sp, #56]
   11740:	ldr	x0, [x0]
   11744:	sub	x1, x0, #0x1
   11748:	ldr	x0, [sp, #56]
   1174c:	str	x1, [x0]
   11750:	ldr	x0, [sp, #56]
   11754:	ldr	x1, [x0]
   11758:	ldr	x0, [sp, #56]
   1175c:	add	x1, x1, #0x4
   11760:	ldr	x0, [x0, x1, lsl #3]
   11764:	str	x0, [sp, #48]
   11768:	ldr	x0, [sp, #56]
   1176c:	ldr	x0, [x0]
   11770:	sub	x1, x0, #0x1
   11774:	ldr	x0, [sp, #56]
   11778:	add	x1, x1, #0x4
   1177c:	ldr	x0, [x0, x1, lsl #3]
   11780:	prfm	pldl1keep, [x0]
   11784:	ldr	x1, [sp, #40]
   11788:	mov	x0, #0xd800                	// #55296
   1178c:	add	x3, x1, x0
   11790:	ldr	x0, [sp, #56]
   11794:	ldr	x0, [x0, #16]
   11798:	mov	x2, x0
   1179c:	mov	w1, #0x0                   	// #0
   117a0:	mov	x0, x3
   117a4:	bl	10e80 <__sancov_default_options@@Base+0xad4>
   117a8:	ldr	x0, [sp, #48]
   117ac:	ldr	x30, [sp], #96
   117b0:	ret
   117b4:	str	x30, [sp, #-240]!
   117b8:	str	x0, [sp, #40]
   117bc:	str	x1, [sp, #32]
   117c0:	str	x2, [sp, #24]
   117c4:	str	x3, [sp, #16]
   117c8:	ldr	x0, [sp, #16]
   117cc:	bl	8964 <__asan_backtrace_open@plt+0x1cf4>
   117d0:	and	w0, w0, #0xff
   117d4:	and	x0, x0, #0xff
   117d8:	str	x0, [sp, #216]
   117dc:	str	xzr, [sp, #208]
   117e0:	ldr	x1, [sp, #216]
   117e4:	ldr	x0, [sp, #208]
   117e8:	cmp	x1, x0
   117ec:	cset	w0, eq  // eq = none
   117f0:	and	w0, w0, #0xff
   117f4:	and	x0, x0, #0xff
   117f8:	cmp	x0, #0x0
   117fc:	b.eq	11820 <__sancov_default_options@@Base+0x1474>  // b.none
   11800:	ldr	x4, [sp, #208]
   11804:	ldr	x3, [sp, #216]
   11808:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   1180c:	add	x2, x0, #0xa58
   11810:	mov	w1, #0x53                  	// #83
   11814:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11818:	add	x0, x0, #0x840
   1181c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   11820:	ldr	x1, [sp, #24]
   11824:	ldr	x0, [sp, #40]
   11828:	bl	123f4 <__sancov_default_options@@Base+0x2048>
   1182c:	str	x0, [sp, #232]
   11830:	ldr	x0, [sp, #40]
   11834:	ldr	x0, [x0]
   11838:	ldr	x1, [sp, #16]
   1183c:	cmp	x1, x0
   11840:	b.ls	11854 <__sancov_default_options@@Base+0x14a8>  // b.plast
   11844:	ldr	x1, [sp, #232]
   11848:	ldr	x0, [sp, #16]
   1184c:	add	x0, x1, x0
   11850:	str	x0, [sp, #232]
   11854:	ldr	x1, [sp, #232]
   11858:	ldr	x0, [sp, #24]
   1185c:	cmp	x1, x0
   11860:	b.cs	11890 <__sancov_default_options@@Base+0x14e4>  // b.hs, b.nlast
   11864:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   11868:	ldr	x0, [x0, #4024]
   1186c:	ldr	x0, [x0]
   11870:	ldr	x3, [sp, #16]
   11874:	ldr	x2, [sp, #232]
   11878:	mov	x1, x0
   1187c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11880:	add	x0, x0, #0xc70
   11884:	bl	25a74 <OnPrint@@Base+0x454>
   11888:	mov	x0, #0x0                   	// #0
   1188c:	b	11ce8 <__sancov_default_options@@Base+0x193c>
   11890:	adrp	x0, 77000 <_Unwind_Backtrace@GCC_3.3>
   11894:	add	x0, x0, #0x4d0
   11898:	ldr	x0, [x0]
   1189c:	mov	x1, x0
   118a0:	ldr	x0, [sp, #232]
   118a4:	bl	22250 <__sanitizer_set_report_fd@@Base+0x80a4>
   118a8:	str	x0, [sp, #200]
   118ac:	ldr	x0, [sp, #200]
   118b0:	cmp	x0, #0x0
   118b4:	b.ne	118c0 <__sancov_default_options@@Base+0x1514>  // b.any
   118b8:	mov	x0, #0x0                   	// #0
   118bc:	b	11ce8 <__sancov_default_options@@Base+0x193c>
   118c0:	ldr	x0, [sp, #40]
   118c4:	ldr	x0, [x0]
   118c8:	mov	x1, x0
   118cc:	ldr	x0, [sp, #200]
   118d0:	bl	10e18 <__sancov_default_options@@Base+0xa6c>
   118d4:	and	w0, w0, #0xff
   118d8:	and	x0, x0, #0xff
   118dc:	str	x0, [sp, #192]
   118e0:	str	xzr, [sp, #184]
   118e4:	ldr	x1, [sp, #192]
   118e8:	ldr	x0, [sp, #184]
   118ec:	cmp	x1, x0
   118f0:	cset	w0, eq  // eq = none
   118f4:	and	w0, w0, #0xff
   118f8:	and	x0, x0, #0xff
   118fc:	cmp	x0, #0x0
   11900:	b.eq	11924 <__sancov_default_options@@Base+0x1578>  // b.none
   11904:	ldr	x4, [sp, #184]
   11908:	ldr	x3, [sp, #192]
   1190c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11910:	add	x2, x0, #0xcd8
   11914:	mov	w1, #0x62                  	// #98
   11918:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   1191c:	add	x0, x0, #0x840
   11920:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   11924:	add	x0, sp, #0x40
   11928:	ldr	x2, [sp, #232]
   1192c:	ldr	x1, [sp, #200]
   11930:	bl	10e48 <__sancov_default_options@@Base+0xa9c>
   11934:	ldr	x1, [sp, #200]
   11938:	ldr	x0, [sp, #232]
   1193c:	add	x0, x1, x0
   11940:	str	x0, [sp, #176]
   11944:	ldr	x0, [sp, #40]
   11948:	ldr	x0, [x0]
   1194c:	ldr	x1, [sp, #200]
   11950:	add	x0, x1, x0
   11954:	str	x0, [sp, #224]
   11958:	ldr	x0, [sp, #16]
   1195c:	sub	x1, x0, #0x1
   11960:	ldr	x0, [sp, #224]
   11964:	and	x0, x1, x0
   11968:	cmp	x0, #0x0
   1196c:	b.eq	11994 <__sancov_default_options@@Base+0x15e8>  // b.none
   11970:	ldr	x0, [sp, #16]
   11974:	sub	x1, x0, #0x1
   11978:	ldr	x0, [sp, #224]
   1197c:	and	x0, x1, x0
   11980:	ldr	x1, [sp, #16]
   11984:	sub	x0, x1, x0
   11988:	ldr	x1, [sp, #224]
   1198c:	add	x0, x1, x0
   11990:	str	x0, [sp, #224]
   11994:	ldr	x1, [sp, #16]
   11998:	ldr	x0, [sp, #224]
   1199c:	bl	10e18 <__sancov_default_options@@Base+0xa6c>
   119a0:	and	w0, w0, #0xff
   119a4:	and	x0, x0, #0xff
   119a8:	str	x0, [sp, #168]
   119ac:	str	xzr, [sp, #160]
   119b0:	ldr	x1, [sp, #168]
   119b4:	ldr	x0, [sp, #160]
   119b8:	cmp	x1, x0
   119bc:	cset	w0, eq  // eq = none
   119c0:	and	w0, w0, #0xff
   119c4:	and	x0, x0, #0xff
   119c8:	cmp	x0, #0x0
   119cc:	b.eq	119f0 <__sancov_default_options@@Base+0x1644>  // b.none
   119d0:	ldr	x4, [sp, #160]
   119d4:	ldr	x3, [sp, #168]
   119d8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   119dc:	add	x2, x0, #0xd08
   119e0:	mov	w1, #0x68                  	// #104
   119e4:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   119e8:	add	x0, x0, #0x840
   119ec:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   119f0:	ldr	x0, [sp, #40]
   119f4:	ldr	x0, [x0]
   119f8:	mov	x1, x0
   119fc:	ldr	x0, [sp, #224]
   11a00:	bl	10e18 <__sancov_default_options@@Base+0xa6c>
   11a04:	and	w0, w0, #0xff
   11a08:	and	x0, x0, #0xff
   11a0c:	str	x0, [sp, #152]
   11a10:	str	xzr, [sp, #144]
   11a14:	ldr	x1, [sp, #152]
   11a18:	ldr	x0, [sp, #144]
   11a1c:	cmp	x1, x0
   11a20:	cset	w0, eq  // eq = none
   11a24:	and	w0, w0, #0xff
   11a28:	and	x0, x0, #0xff
   11a2c:	cmp	x0, #0x0
   11a30:	b.eq	11a54 <__sancov_default_options@@Base+0x16a8>  // b.none
   11a34:	ldr	x4, [sp, #144]
   11a38:	ldr	x3, [sp, #152]
   11a3c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11a40:	add	x2, x0, #0xd30
   11a44:	mov	w1, #0x69                  	// #105
   11a48:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11a4c:	add	x0, x0, #0x840
   11a50:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   11a54:	ldr	x1, [sp, #224]
   11a58:	ldr	x0, [sp, #24]
   11a5c:	add	x0, x1, x0
   11a60:	str	x0, [sp, #136]
   11a64:	ldr	x0, [sp, #200]
   11a68:	str	x0, [sp, #128]
   11a6c:	ldr	x1, [sp, #136]
   11a70:	ldr	x0, [sp, #128]
   11a74:	cmp	x1, x0
   11a78:	cset	w0, cc  // cc = lo, ul, last
   11a7c:	and	w0, w0, #0xff
   11a80:	and	x0, x0, #0xff
   11a84:	cmp	x0, #0x0
   11a88:	b.eq	11aac <__sancov_default_options@@Base+0x1700>  // b.none
   11a8c:	ldr	x4, [sp, #128]
   11a90:	ldr	x3, [sp, #136]
   11a94:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11a98:	add	x2, x0, #0xd58
   11a9c:	mov	w1, #0x6a                  	// #106
   11aa0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11aa4:	add	x0, x0, #0x840
   11aa8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   11aac:	ldr	x1, [sp, #224]
   11ab0:	ldr	x0, [sp, #24]
   11ab4:	add	x0, x1, x0
   11ab8:	str	x0, [sp, #120]
   11abc:	ldr	x0, [sp, #176]
   11ac0:	str	x0, [sp, #112]
   11ac4:	ldr	x1, [sp, #120]
   11ac8:	ldr	x0, [sp, #112]
   11acc:	cmp	x1, x0
   11ad0:	cset	w0, hi  // hi = pmore
   11ad4:	and	w0, w0, #0xff
   11ad8:	and	x0, x0, #0xff
   11adc:	cmp	x0, #0x0
   11ae0:	b.eq	11b04 <__sancov_default_options@@Base+0x1758>  // b.none
   11ae4:	ldr	x4, [sp, #112]
   11ae8:	ldr	x3, [sp, #120]
   11aec:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11af0:	add	x2, x0, #0xd78
   11af4:	mov	w1, #0x6b                  	// #107
   11af8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11afc:	add	x0, x0, #0x840
   11b00:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   11b04:	ldr	x1, [sp, #224]
   11b08:	ldr	x0, [sp, #40]
   11b0c:	bl	1242c <__sancov_default_options@@Base+0x2080>
   11b10:	str	x0, [sp, #104]
   11b14:	ldr	x0, [sp, #104]
   11b18:	ldr	x1, [sp, #24]
   11b1c:	str	x1, [x0, #16]
   11b20:	ldr	x0, [sp, #104]
   11b24:	ldr	x1, [sp, #200]
   11b28:	str	x1, [x0]
   11b2c:	ldr	x0, [sp, #104]
   11b30:	ldr	x1, [sp, #232]
   11b34:	str	x1, [x0, #8]
   11b38:	ldr	x0, [sp, #232]
   11b3c:	bl	10d9c <__sancov_default_options@@Base+0x9f0>
   11b40:	str	x0, [sp, #96]
   11b44:	ldr	x0, [sp, #96]
   11b48:	str	x0, [sp, #88]
   11b4c:	mov	x0, #0x40                  	// #64
   11b50:	str	x0, [sp, #80]
   11b54:	ldr	x1, [sp, #88]
   11b58:	ldr	x0, [sp, #80]
   11b5c:	cmp	x1, x0
   11b60:	cset	w0, cs  // cs = hs, nlast
   11b64:	and	w0, w0, #0xff
   11b68:	and	x0, x0, #0xff
   11b6c:	cmp	x0, #0x0
   11b70:	b.eq	11b94 <__sancov_default_options@@Base+0x17e8>  // b.none
   11b74:	ldr	x4, [sp, #80]
   11b78:	ldr	x3, [sp, #88]
   11b7c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11b80:	add	x2, x0, #0xd98
   11b84:	mov	w1, #0x71                  	// #113
   11b88:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11b8c:	add	x0, x0, #0x840
   11b90:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   11b94:	ldr	x1, [sp, #40]
   11b98:	mov	x0, #0x240                 	// #576
   11b9c:	movk	x0, #0x4, lsl #16
   11ba0:	add	x1, x1, x0
   11ba4:	add	x0, sp, #0x38
   11ba8:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   11bac:	ldr	x0, [sp, #40]
   11bb0:	add	x2, x0, #0x10
   11bb4:	ldr	x0, [sp, #40]
   11bb8:	add	x0, x0, #0x40, lsl #12
   11bbc:	ldr	x0, [x0, #16]
   11bc0:	mov	x1, x0
   11bc4:	mov	x0, x2
   11bc8:	bl	10fcc <__sancov_default_options@@Base+0xc20>
   11bcc:	ldr	x0, [sp, #40]
   11bd0:	add	x0, x0, #0x40, lsl #12
   11bd4:	ldr	x0, [x0, #16]
   11bd8:	add	x2, x0, #0x1
   11bdc:	ldr	x1, [sp, #40]
   11be0:	add	x1, x1, #0x40, lsl #12
   11be4:	str	x2, [x1, #16]
   11be8:	str	x0, [sp, #72]
   11bec:	ldr	x0, [sp, #104]
   11bf0:	ldr	x1, [sp, #72]
   11bf4:	str	x1, [x0, #24]
   11bf8:	ldr	x0, [sp, #40]
   11bfc:	ldr	x1, [x0, #8]
   11c00:	ldr	x0, [sp, #72]
   11c04:	lsl	x0, x0, #3
   11c08:	add	x0, x1, x0
   11c0c:	ldr	x1, [sp, #104]
   11c10:	str	x1, [x0]
   11c14:	ldr	x0, [sp, #40]
   11c18:	add	x0, x0, #0x40, lsl #12
   11c1c:	strb	wzr, [x0, #24]
   11c20:	ldr	x0, [sp, #40]
   11c24:	add	x0, x0, #0x40, lsl #12
   11c28:	ldr	x0, [x0, #32]
   11c2c:	add	x1, x0, #0x1
   11c30:	ldr	x0, [sp, #40]
   11c34:	add	x0, x0, #0x40, lsl #12
   11c38:	str	x1, [x0, #32]
   11c3c:	ldr	x0, [sp, #40]
   11c40:	add	x0, x0, #0x40, lsl #12
   11c44:	ldr	x1, [x0, #48]
   11c48:	ldr	x0, [sp, #232]
   11c4c:	add	x1, x1, x0
   11c50:	ldr	x0, [sp, #40]
   11c54:	add	x0, x0, #0x40, lsl #12
   11c58:	str	x1, [x0, #48]
   11c5c:	ldr	x0, [sp, #40]
   11c60:	add	x0, x0, #0x40, lsl #12
   11c64:	ldr	x2, [x0, #56]
   11c68:	ldr	x0, [sp, #40]
   11c6c:	add	x0, x0, #0x40, lsl #12
   11c70:	ldr	x0, [x0, #48]
   11c74:	mov	x1, x0
   11c78:	mov	x0, x2
   11c7c:	bl	93a4 <__asan_backtrace_open@plt+0x2734>
   11c80:	mov	x1, x0
   11c84:	ldr	x0, [sp, #40]
   11c88:	add	x0, x0, #0x40, lsl #12
   11c8c:	str	x1, [x0, #56]
   11c90:	ldr	x0, [sp, #40]
   11c94:	ldr	x2, [sp, #96]
   11c98:	mov	x1, #0x8008                	// #32776
   11c9c:	add	x1, x2, x1
   11ca0:	ldr	x0, [x0, x1, lsl #3]
   11ca4:	add	x2, x0, #0x1
   11ca8:	ldr	x0, [sp, #40]
   11cac:	ldr	x3, [sp, #96]
   11cb0:	mov	x1, #0x8008                	// #32776
   11cb4:	add	x1, x3, x1
   11cb8:	str	x2, [x0, x1, lsl #3]
   11cbc:	ldr	x2, [sp, #232]
   11cc0:	mov	w1, #0x0                   	// #0
   11cc4:	ldr	x0, [sp, #32]
   11cc8:	bl	10e80 <__sancov_default_options@@Base+0xad4>
   11ccc:	ldr	x2, [sp, #232]
   11cd0:	mov	w1, #0x1                   	// #1
   11cd4:	ldr	x0, [sp, #32]
   11cd8:	bl	10e80 <__sancov_default_options@@Base+0xad4>
   11cdc:	add	x0, sp, #0x38
   11ce0:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   11ce4:	ldr	x0, [sp, #224]
   11ce8:	ldr	x30, [sp], #240
   11cec:	ret
   11cf0:	str	x30, [sp, #-32]!
   11cf4:	str	x0, [sp, #24]
   11cf8:	str	x1, [sp, #16]
   11cfc:	ldr	x0, [sp, #24]
   11d00:	ldr	x1, [sp, #16]
   11d04:	bl	11d94 <__sancov_default_options@@Base+0x19e8>
   11d08:	and	w0, w0, #0xff
   11d0c:	cmp	w0, #0x0
   11d10:	b.eq	11d1c <__sancov_default_options@@Base+0x1970>  // b.none
   11d14:	mov	w0, #0x1                   	// #1
   11d18:	b	11d38 <__sancov_default_options@@Base+0x198c>
   11d1c:	ldr	x1, [sp, #24]
   11d20:	mov	x0, #0xdc0                 	// #3520
   11d24:	movk	x0, #0x8, lsl #16
   11d28:	add	x0, x1, x0
   11d2c:	ldr	x1, [sp, #16]
   11d30:	bl	124b4 <__sancov_default_options@@Base+0x2108>
   11d34:	and	w0, w0, #0xff
   11d38:	ldr	x30, [sp], #32
   11d3c:	ret
   11d40:	str	x30, [sp, #-32]!
   11d44:	str	x0, [sp, #24]
   11d48:	str	x1, [sp, #16]
   11d4c:	ldr	x0, [sp, #24]
   11d50:	ldr	x1, [sp, #16]
   11d54:	bl	11d94 <__sancov_default_options@@Base+0x19e8>
   11d58:	and	w0, w0, #0xff
   11d5c:	cmp	w0, #0x0
   11d60:	b.eq	11d74 <__sancov_default_options@@Base+0x19c8>  // b.none
   11d64:	ldr	x0, [sp, #24]
   11d68:	ldr	x1, [sp, #16]
   11d6c:	bl	124e0 <__sancov_default_options@@Base+0x2134>
   11d70:	b	11d8c <__sancov_default_options@@Base+0x19e0>
   11d74:	ldr	x1, [sp, #24]
   11d78:	mov	x0, #0xdc0                 	// #3520
   11d7c:	movk	x0, #0x8, lsl #16
   11d80:	add	x0, x1, x0
   11d84:	ldr	x1, [sp, #16]
   11d88:	bl	12560 <__sancov_default_options@@Base+0x21b4>
   11d8c:	ldr	x30, [sp], #32
   11d90:	ret
   11d94:	str	x30, [sp, #-48]!
   11d98:	str	x0, [sp, #24]
   11d9c:	str	x1, [sp, #16]
   11da0:	ldr	x0, [sp, #16]
   11da4:	str	x0, [sp, #40]
   11da8:	ldr	x1, [sp, #40]
   11dac:	mov	x0, #0xffffffffffff        	// #281474976710655
   11db0:	cmp	x1, x0
   11db4:	b.ls	11dc0 <__sancov_default_options@@Base+0x1a14>  // b.plast
   11db8:	mov	w0, #0x0                   	// #0
   11dbc:	b	11dd8 <__sancov_default_options@@Base+0x1a2c>
   11dc0:	ldr	x1, [sp, #16]
   11dc4:	ldr	x0, [sp, #24]
   11dc8:	bl	11de0 <__sancov_default_options@@Base+0x1a34>
   11dcc:	cmp	x0, #0x0
   11dd0:	cset	w0, ne  // ne = any
   11dd4:	and	w0, w0, #0xff
   11dd8:	ldr	x30, [sp], #48
   11ddc:	ret
   11de0:	stp	x19, x30, [sp, #-32]!
   11de4:	str	x0, [sp, #24]
   11de8:	str	x1, [sp, #16]
   11dec:	ldr	x19, [sp, #24]
   11df0:	ldr	x0, [sp, #16]
   11df4:	mov	x1, x0
   11df8:	ldr	x0, [sp, #24]
   11dfc:	bl	12598 <__sancov_default_options@@Base+0x21ec>
   11e00:	mov	x1, x0
   11e04:	mov	x0, x19
   11e08:	bl	1260c <__sancov_default_options@@Base+0x2260>
   11e0c:	and	w0, w0, #0xff
   11e10:	and	x0, x0, #0xff
   11e14:	ldp	x19, x30, [sp], #32
   11e18:	ret
   11e1c:	str	x30, [sp, #-96]!
   11e20:	str	x0, [sp, #40]
   11e24:	str	x1, [sp, #32]
   11e28:	str	x2, [sp, #24]
   11e2c:	str	x3, [sp, #16]
   11e30:	ldr	x0, [sp, #24]
   11e34:	str	x0, [sp, #88]
   11e38:	str	xzr, [sp, #80]
   11e3c:	ldr	x1, [sp, #88]
   11e40:	ldr	x0, [sp, #80]
   11e44:	cmp	x1, x0
   11e48:	cset	w0, eq  // eq = none
   11e4c:	and	w0, w0, #0xff
   11e50:	and	x0, x0, #0xff
   11e54:	cmp	x0, #0x0
   11e58:	b.eq	11e7c <__sancov_default_options@@Base+0x1ad0>  // b.none
   11e5c:	ldr	x4, [sp, #80]
   11e60:	ldr	x3, [sp, #88]
   11e64:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11e68:	add	x2, x0, #0xbe8
   11e6c:	mov	w1, #0xae                  	// #174
   11e70:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11e74:	add	x0, x0, #0xc00
   11e78:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   11e7c:	ldr	x0, [sp, #24]
   11e80:	str	x0, [sp, #72]
   11e84:	mov	x0, #0x36                  	// #54
   11e88:	str	x0, [sp, #64]
   11e8c:	ldr	x1, [sp, #72]
   11e90:	ldr	x0, [sp, #64]
   11e94:	cmp	x1, x0
   11e98:	cset	w0, cs  // cs = hs, nlast
   11e9c:	and	w0, w0, #0xff
   11ea0:	and	x0, x0, #0xff
   11ea4:	cmp	x0, #0x0
   11ea8:	b.eq	11ecc <__sancov_default_options@@Base+0x1b20>  // b.none
   11eac:	ldr	x4, [sp, #64]
   11eb0:	ldr	x3, [sp, #72]
   11eb4:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11eb8:	add	x2, x0, #0xc50
   11ebc:	mov	w1, #0xaf                  	// #175
   11ec0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   11ec4:	add	x0, x0, #0xc00
   11ec8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   11ecc:	ldr	x0, [sp, #24]
   11ed0:	lsl	x0, x0, #10
   11ed4:	ldr	x1, [sp, #40]
   11ed8:	add	x0, x1, x0
   11edc:	str	x0, [sp, #56]
   11ee0:	ldr	x1, [sp, #56]
   11ee4:	ldr	x0, [sp, #40]
   11ee8:	bl	126b0 <__sancov_default_options@@Base+0x2304>
   11eec:	ldr	x0, [sp, #56]
   11ef0:	ldr	x1, [x0]
   11ef4:	ldr	x0, [sp, #56]
   11ef8:	ldr	x0, [x0, #8]
   11efc:	cmp	x1, x0
   11f00:	cset	w0, eq  // eq = none
   11f04:	and	w0, w0, #0xff
   11f08:	and	x0, x0, #0xff
   11f0c:	cmp	x0, #0x0
   11f10:	b.eq	11f28 <__sancov_default_options@@Base+0x1b7c>  // b.none
   11f14:	ldr	x3, [sp, #24]
   11f18:	ldr	x2, [sp, #32]
   11f1c:	ldr	x1, [sp, #56]
   11f20:	ldr	x0, [sp, #40]
   11f24:	bl	1278c <__sancov_default_options@@Base+0x23e0>
   11f28:	ldr	x0, [sp, #56]
   11f2c:	ldr	x0, [x0]
   11f30:	add	x2, x0, #0x1
   11f34:	ldr	x1, [sp, #56]
   11f38:	str	x2, [x1]
   11f3c:	ldr	x1, [sp, #56]
   11f40:	add	x0, x0, #0x4
   11f44:	ldr	x2, [sp, #16]
   11f48:	str	x2, [x1, x0, lsl #3]
   11f4c:	ldr	x1, [sp, #40]
   11f50:	mov	x0, #0xd800                	// #55296
   11f54:	add	x3, x1, x0
   11f58:	ldr	x0, [sp, #56]
   11f5c:	ldr	x0, [x0, #16]
   11f60:	mov	x2, x0
   11f64:	mov	w1, #0x0                   	// #0
   11f68:	mov	x0, x3
   11f6c:	bl	10ef0 <__sancov_default_options@@Base+0xb44>
   11f70:	nop
   11f74:	ldr	x30, [sp], #96
   11f78:	ret
   11f7c:	str	x30, [sp, #-112]!
   11f80:	str	x0, [sp, #40]
   11f84:	str	x1, [sp, #32]
   11f88:	str	x2, [sp, #24]
   11f8c:	ldr	x1, [sp, #24]
   11f90:	ldr	x0, [sp, #40]
   11f94:	bl	128a4 <__sancov_default_options@@Base+0x24f8>
   11f98:	str	x0, [sp, #104]
   11f9c:	ldr	x1, [sp, #40]
   11fa0:	mov	x0, #0x240                 	// #576
   11fa4:	movk	x0, #0x4, lsl #16
   11fa8:	add	x1, x1, x0
   11fac:	add	x0, sp, #0x30
   11fb0:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   11fb4:	ldr	x0, [sp, #104]
   11fb8:	ldr	x0, [x0, #24]
   11fbc:	str	x0, [sp, #96]
   11fc0:	ldr	x0, [sp, #40]
   11fc4:	ldr	x1, [x0, #8]
   11fc8:	ldr	x0, [sp, #96]
   11fcc:	lsl	x0, x0, #3
   11fd0:	add	x0, x1, x0
   11fd4:	ldr	x0, [x0]
   11fd8:	str	x0, [sp, #88]
   11fdc:	ldr	x0, [sp, #104]
   11fe0:	str	x0, [sp, #80]
   11fe4:	ldr	x1, [sp, #88]
   11fe8:	ldr	x0, [sp, #80]
   11fec:	cmp	x1, x0
   11ff0:	cset	w0, ne  // ne = any
   11ff4:	and	w0, w0, #0xff
   11ff8:	and	x0, x0, #0xff
   11ffc:	cmp	x0, #0x0
   12000:	b.eq	12024 <__sancov_default_options@@Base+0x1c78>  // b.none
   12004:	ldr	x4, [sp, #80]
   12008:	ldr	x3, [sp, #88]
   1200c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12010:	add	x2, x0, #0xde8
   12014:	mov	w1, #0x88                  	// #136
   12018:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   1201c:	add	x0, x0, #0x840
   12020:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   12024:	ldr	x0, [sp, #96]
   12028:	str	x0, [sp, #72]
   1202c:	ldr	x0, [sp, #40]
   12030:	add	x0, x0, #0x40, lsl #12
   12034:	ldr	x0, [x0, #16]
   12038:	str	x0, [sp, #64]
   1203c:	ldr	x1, [sp, #72]
   12040:	ldr	x0, [sp, #64]
   12044:	cmp	x1, x0
   12048:	cset	w0, cs  // cs = hs, nlast
   1204c:	and	w0, w0, #0xff
   12050:	and	x0, x0, #0xff
   12054:	cmp	x0, #0x0
   12058:	b.eq	1207c <__sancov_default_options@@Base+0x1cd0>  // b.none
   1205c:	ldr	x4, [sp, #64]
   12060:	ldr	x3, [sp, #72]
   12064:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12068:	add	x2, x0, #0xe08
   1206c:	mov	w1, #0x89                  	// #137
   12070:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12074:	add	x0, x0, #0x840
   12078:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1207c:	ldr	x0, [sp, #40]
   12080:	ldr	x1, [x0, #8]
   12084:	ldr	x0, [sp, #40]
   12088:	add	x0, x0, #0x40, lsl #12
   1208c:	ldr	x0, [x0, #16]
   12090:	sub	x2, x0, #0x1
   12094:	ldr	x0, [sp, #40]
   12098:	add	x0, x0, #0x40, lsl #12
   1209c:	str	x2, [x0, #16]
   120a0:	ldr	x0, [sp, #40]
   120a4:	add	x0, x0, #0x40, lsl #12
   120a8:	ldr	x0, [x0, #16]
   120ac:	lsl	x0, x0, #3
   120b0:	add	x1, x1, x0
   120b4:	ldr	x0, [sp, #40]
   120b8:	ldr	x2, [x0, #8]
   120bc:	ldr	x0, [sp, #96]
   120c0:	lsl	x0, x0, #3
   120c4:	add	x0, x2, x0
   120c8:	ldr	x1, [x1]
   120cc:	str	x1, [x0]
   120d0:	ldr	x0, [sp, #40]
   120d4:	ldr	x1, [x0, #8]
   120d8:	ldr	x0, [sp, #96]
   120dc:	lsl	x0, x0, #3
   120e0:	add	x0, x1, x0
   120e4:	ldr	x0, [x0]
   120e8:	ldr	x1, [sp, #96]
   120ec:	str	x1, [x0, #24]
   120f0:	ldr	x0, [sp, #40]
   120f4:	add	x0, x0, #0x40, lsl #12
   120f8:	strb	wzr, [x0, #24]
   120fc:	ldr	x0, [sp, #40]
   12100:	add	x0, x0, #0x40, lsl #12
   12104:	ldr	x0, [x0, #40]
   12108:	add	x1, x0, #0x1
   1210c:	ldr	x0, [sp, #40]
   12110:	add	x0, x0, #0x40, lsl #12
   12114:	str	x1, [x0, #40]
   12118:	ldr	x0, [sp, #40]
   1211c:	add	x0, x0, #0x40, lsl #12
   12120:	ldr	x1, [x0, #48]
   12124:	ldr	x0, [sp, #104]
   12128:	ldr	x0, [x0, #8]
   1212c:	sub	x1, x1, x0
   12130:	ldr	x0, [sp, #40]
   12134:	add	x0, x0, #0x40, lsl #12
   12138:	str	x1, [x0, #48]
   1213c:	ldr	x0, [sp, #104]
   12140:	ldr	x0, [x0, #8]
   12144:	mov	x2, x0
   12148:	mov	w1, #0x0                   	// #0
   1214c:	ldr	x0, [sp, #32]
   12150:	bl	10ef0 <__sancov_default_options@@Base+0xb44>
   12154:	ldr	x0, [sp, #104]
   12158:	ldr	x0, [x0, #8]
   1215c:	mov	x2, x0
   12160:	mov	w1, #0x1                   	// #1
   12164:	ldr	x0, [sp, #32]
   12168:	bl	10ef0 <__sancov_default_options@@Base+0xb44>
   1216c:	add	x0, sp, #0x30
   12170:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   12174:	ldr	x0, [sp, #104]
   12178:	ldr	x1, [x0]
   1217c:	ldr	x0, [sp, #104]
   12180:	ldr	x2, [x0, #8]
   12184:	add	x0, sp, #0x38
   12188:	bl	10e64 <__sancov_default_options@@Base+0xab8>
   1218c:	ldr	x0, [sp, #104]
   12190:	ldr	x0, [x0]
   12194:	mov	x2, x0
   12198:	ldr	x0, [sp, #104]
   1219c:	ldr	x0, [x0, #8]
   121a0:	mov	x1, x0
   121a4:	mov	x0, x2
   121a8:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   121ac:	nop
   121b0:	ldr	x30, [sp], #112
   121b4:	ret
   121b8:	str	x30, [sp, #-32]!
   121bc:	str	x0, [sp, #24]
   121c0:	ldr	x0, [sp, #24]
   121c4:	mov	x2, #0x80000               	// #524288
   121c8:	mov	w1, #0x0                   	// #0
   121cc:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   121d0:	ldr	x0, [sp, #24]
   121d4:	add	x0, x0, #0x80, lsl #12
   121d8:	bl	10d78 <__sancov_default_options@@Base+0x9cc>
   121dc:	nop
   121e0:	ldr	x30, [sp], #32
   121e4:	ret
   121e8:	str	x30, [sp, #-32]!
   121ec:	str	x0, [sp, #24]
   121f0:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   121f4:	mov	x1, x0
   121f8:	ldr	x0, [sp, #24]
   121fc:	str	x1, [x0]
   12200:	ldr	x0, [sp, #24]
   12204:	add	x0, x0, #0x10
   12208:	bl	10fb8 <__sancov_default_options@@Base+0xc0c>
   1220c:	mov	x1, x0
   12210:	ldr	x0, [sp, #24]
   12214:	str	x1, [x0, #8]
   12218:	nop
   1221c:	ldr	x30, [sp], #32
   12220:	ret
   12224:	str	x30, [sp, #-64]!
   12228:	str	x0, [sp, #24]
   1222c:	ldr	x0, [sp, #24]
   12230:	cmp	x0, #0x20, lsl #12
   12234:	cset	w0, hi  // hi = pmore
   12238:	and	w0, w0, #0xff
   1223c:	and	x0, x0, #0xff
   12240:	cmp	x0, #0x0
   12244:	b.eq	12250 <__sancov_default_options@@Base+0x1ea4>  // b.none
   12248:	mov	x0, #0x0                   	// #0
   1224c:	b	122ec <__sancov_default_options@@Base+0x1f40>
   12250:	ldr	x0, [sp, #24]
   12254:	cmp	x0, #0x100
   12258:	b.hi	1226c <__sancov_default_options@@Base+0x1ec0>  // b.pmore
   1225c:	ldr	x0, [sp, #24]
   12260:	add	x0, x0, #0xf
   12264:	lsr	x0, x0, #4
   12268:	b	122ec <__sancov_default_options@@Base+0x1f40>
   1226c:	ldr	x0, [sp, #24]
   12270:	bl	10d9c <__sancov_default_options@@Base+0x9f0>
   12274:	str	x0, [sp, #56]
   12278:	ldr	x0, [sp, #56]
   1227c:	sub	w0, w0, #0x2
   12280:	ldr	x1, [sp, #24]
   12284:	lsr	x0, x1, x0
   12288:	and	x0, x0, #0x3
   1228c:	str	x0, [sp, #48]
   12290:	ldr	x0, [sp, #56]
   12294:	sub	w0, w0, #0x2
   12298:	mov	w1, #0x1                   	// #1
   1229c:	lsl	w0, w1, w0
   122a0:	sub	w0, w0, #0x1
   122a4:	mov	w0, w0
   122a8:	ldr	x1, [sp, #24]
   122ac:	and	x0, x1, x0
   122b0:	str	x0, [sp, #40]
   122b4:	ldr	x0, [sp, #56]
   122b8:	sub	x0, x0, #0x8
   122bc:	str	x0, [sp, #32]
   122c0:	ldr	x0, [sp, #32]
   122c4:	lsl	x1, x0, #2
   122c8:	ldr	x0, [sp, #48]
   122cc:	add	x1, x1, x0
   122d0:	ldr	x0, [sp, #40]
   122d4:	cmp	x0, #0x0
   122d8:	cset	w0, ne  // ne = any
   122dc:	and	w0, w0, #0xff
   122e0:	and	x0, x0, #0xff
   122e4:	add	x0, x1, x0
   122e8:	add	x0, x0, #0x10
   122ec:	ldr	x30, [sp], #64
   122f0:	ret
   122f4:	str	x30, [sp, #-80]!
   122f8:	str	x0, [sp, #40]
   122fc:	str	x1, [sp, #32]
   12300:	str	x2, [sp, #24]
   12304:	str	x3, [sp, #16]
   12308:	ldr	x1, [sp, #32]
   1230c:	ldr	x0, [sp, #40]
   12310:	bl	126b0 <__sancov_default_options@@Base+0x2304>
   12314:	ldr	x1, [sp, #40]
   12318:	mov	x0, #0xd800                	// #55296
   1231c:	add	x0, x1, x0
   12320:	ldr	x3, [sp, #16]
   12324:	ldr	x2, [sp, #40]
   12328:	mov	x1, x0
   1232c:	ldr	x0, [sp, #24]
   12330:	bl	128c8 <__sancov_default_options@@Base+0x251c>
   12334:	str	x0, [sp, #72]
   12338:	ldr	x0, [sp, #72]
   1233c:	cmp	x0, #0x0
   12340:	cset	w0, eq  // eq = none
   12344:	and	w0, w0, #0xff
   12348:	and	x0, x0, #0xff
   1234c:	cmp	x0, #0x0
   12350:	b.eq	1235c <__sancov_default_options@@Base+0x1fb0>  // b.none
   12354:	mov	w0, #0x0                   	// #0
   12358:	b	123ec <__sancov_default_options@@Base+0x2040>
   1235c:	ldr	x0, [sp, #72]
   12360:	bl	12988 <__sancov_default_options@@Base+0x25dc>
   12364:	str	x0, [sp, #64]
   12368:	str	xzr, [sp, #56]
   1236c:	ldr	x1, [sp, #64]
   12370:	ldr	x0, [sp, #56]
   12374:	cmp	x1, x0
   12378:	cset	w0, ls  // ls = plast
   1237c:	and	w0, w0, #0xff
   12380:	and	x0, x0, #0xff
   12384:	cmp	x0, #0x0
   12388:	b.eq	123ac <__sancov_default_options@@Base+0x2000>  // b.none
   1238c:	ldr	x4, [sp, #56]
   12390:	ldr	x3, [sp, #64]
   12394:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12398:	add	x2, x0, #0xe20
   1239c:	mov	w1, #0xf6                  	// #246
   123a0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   123a4:	add	x0, x0, #0xc00
   123a8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   123ac:	ldr	x0, [sp, #32]
   123b0:	add	x0, x0, #0x20
   123b4:	mov	x1, x0
   123b8:	ldr	x0, [sp, #72]
   123bc:	bl	129a0 <__sancov_default_options@@Base+0x25f4>
   123c0:	ldr	x0, [sp, #72]
   123c4:	bl	12988 <__sancov_default_options@@Base+0x25dc>
   123c8:	mov	x1, x0
   123cc:	ldr	x0, [sp, #32]
   123d0:	str	x1, [x0]
   123d4:	ldr	x3, [sp, #72]
   123d8:	ldr	x2, [sp, #24]
   123dc:	ldr	x1, [sp, #16]
   123e0:	ldr	x0, [sp, #40]
   123e4:	bl	12a0c <__sancov_default_options@@Base+0x2660>
   123e8:	mov	w0, #0x1                   	// #1
   123ec:	ldr	x30, [sp], #80
   123f0:	ret
   123f4:	str	x30, [sp, #-32]!
   123f8:	str	x0, [sp, #24]
   123fc:	str	x1, [sp, #16]
   12400:	ldr	x0, [sp, #24]
   12404:	ldr	x0, [x0]
   12408:	mov	x1, x0
   1240c:	ldr	x0, [sp, #16]
   12410:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   12414:	mov	x1, x0
   12418:	ldr	x0, [sp, #24]
   1241c:	ldr	x0, [x0]
   12420:	add	x0, x1, x0
   12424:	ldr	x30, [sp], #32
   12428:	ret
   1242c:	str	x30, [sp, #-48]!
   12430:	str	x0, [sp, #24]
   12434:	str	x1, [sp, #16]
   12438:	ldr	x0, [sp, #24]
   1243c:	ldr	x0, [x0]
   12440:	mov	x1, x0
   12444:	ldr	x0, [sp, #16]
   12448:	bl	10e18 <__sancov_default_options@@Base+0xa6c>
   1244c:	and	w0, w0, #0xff
   12450:	and	x0, x0, #0xff
   12454:	str	x0, [sp, #40]
   12458:	str	xzr, [sp, #32]
   1245c:	ldr	x1, [sp, #40]
   12460:	ldr	x0, [sp, #32]
   12464:	cmp	x1, x0
   12468:	cset	w0, eq  // eq = none
   1246c:	and	w0, w0, #0xff
   12470:	and	x0, x0, #0xff
   12474:	cmp	x0, #0x0
   12478:	b.eq	1249c <__sancov_default_options@@Base+0x20f0>  // b.none
   1247c:	ldr	x4, [sp, #32]
   12480:	ldr	x3, [sp, #40]
   12484:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12488:	add	x2, x0, #0xe38
   1248c:	mov	w1, #0x123                 	// #291
   12490:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12494:	add	x0, x0, #0x840
   12498:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1249c:	ldr	x0, [sp, #24]
   124a0:	ldr	x0, [x0]
   124a4:	ldr	x1, [sp, #16]
   124a8:	sub	x0, x1, x0
   124ac:	ldr	x30, [sp], #48
   124b0:	ret
   124b4:	str	x30, [sp, #-32]!
   124b8:	str	x0, [sp, #24]
   124bc:	str	x1, [sp, #16]
   124c0:	ldr	x1, [sp, #16]
   124c4:	ldr	x0, [sp, #24]
   124c8:	bl	12a64 <__sancov_default_options@@Base+0x26b8>
   124cc:	cmp	x0, #0x0
   124d0:	cset	w0, ne  // ne = any
   124d4:	and	w0, w0, #0xff
   124d8:	ldr	x30, [sp], #32
   124dc:	ret
   124e0:	str	x30, [sp, #-48]!
   124e4:	str	x0, [sp, #24]
   124e8:	str	x1, [sp, #16]
   124ec:	ldr	x1, [sp, #16]
   124f0:	ldr	x0, [sp, #24]
   124f4:	bl	11d94 <__sancov_default_options@@Base+0x19e8>
   124f8:	and	w0, w0, #0xff
   124fc:	and	x0, x0, #0xff
   12500:	str	x0, [sp, #40]
   12504:	str	xzr, [sp, #32]
   12508:	ldr	x1, [sp, #40]
   1250c:	ldr	x0, [sp, #32]
   12510:	cmp	x1, x0
   12514:	cset	w0, eq  // eq = none
   12518:	and	w0, w0, #0xff
   1251c:	and	x0, x0, #0xff
   12520:	cmp	x0, #0x0
   12524:	b.eq	12548 <__sancov_default_options@@Base+0x219c>  // b.none
   12528:	ldr	x4, [sp, #32]
   1252c:	ldr	x3, [sp, #40]
   12530:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12534:	add	x2, x0, #0xbc8
   12538:	mov	w1, #0xcc                  	// #204
   1253c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12540:	add	x0, x0, #0xe60
   12544:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   12548:	ldr	x1, [sp, #16]
   1254c:	ldr	x0, [sp, #24]
   12550:	bl	11de0 <__sancov_default_options@@Base+0x1a34>
   12554:	bl	12c88 <__sancov_default_options@@Base+0x28dc>
   12558:	ldr	x30, [sp], #48
   1255c:	ret
   12560:	str	x30, [sp, #-32]!
   12564:	str	x0, [sp, #24]
   12568:	str	x1, [sp, #16]
   1256c:	ldr	x1, [sp, #16]
   12570:	ldr	x0, [sp, #24]
   12574:	bl	128a4 <__sancov_default_options@@Base+0x24f8>
   12578:	ldr	x2, [x0, #16]
   1257c:	ldr	x0, [sp, #24]
   12580:	ldr	x0, [x0]
   12584:	mov	x1, x0
   12588:	mov	x0, x2
   1258c:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   12590:	ldr	x30, [sp], #32
   12594:	ret
   12598:	str	x30, [sp, #-64]!
   1259c:	str	x0, [sp, #24]
   125a0:	str	x1, [sp, #16]
   125a4:	ldr	x0, [sp, #16]
   125a8:	lsr	x0, x0, #20
   125ac:	str	x0, [sp, #56]
   125b0:	ldr	x0, [sp, #56]
   125b4:	str	x0, [sp, #48]
   125b8:	mov	x0, #0x10000000            	// #268435456
   125bc:	str	x0, [sp, #40]
   125c0:	ldr	x1, [sp, #48]
   125c4:	ldr	x0, [sp, #40]
   125c8:	cmp	x1, x0
   125cc:	cset	w0, cs  // cs = hs, nlast
   125d0:	and	w0, w0, #0xff
   125d4:	and	x0, x0, #0xff
   125d8:	cmp	x0, #0x0
   125dc:	b.eq	12600 <__sancov_default_options@@Base+0x2254>  // b.none
   125e0:	ldr	x4, [sp, #40]
   125e4:	ldr	x3, [sp, #48]
   125e8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   125ec:	add	x2, x0, #0xeb0
   125f0:	mov	w1, #0x116                 	// #278
   125f4:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   125f8:	add	x0, x0, #0xe60
   125fc:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   12600:	ldr	x0, [sp, #56]
   12604:	ldr	x30, [sp], #64
   12608:	ret
   1260c:	str	x30, [sp, #-64]!
   12610:	str	x0, [sp, #24]
   12614:	str	x1, [sp, #16]
   12618:	ldr	x0, [sp, #16]
   1261c:	str	x0, [sp, #56]
   12620:	mov	x0, #0x10000000            	// #268435456
   12624:	str	x0, [sp, #48]
   12628:	ldr	x1, [sp, #56]
   1262c:	ldr	x0, [sp, #48]
   12630:	cmp	x1, x0
   12634:	cset	w0, cs  // cs = hs, nlast
   12638:	and	w0, w0, #0xff
   1263c:	and	x0, x0, #0xff
   12640:	cmp	x0, #0x0
   12644:	b.eq	12668 <__sancov_default_options@@Base+0x22bc>  // b.none
   12648:	ldr	x4, [sp, #48]
   1264c:	ldr	x3, [sp, #56]
   12650:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12654:	add	x2, x0, #0xed8
   12658:	mov	w1, #0x47                  	// #71
   1265c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12660:	add	x0, x0, #0xef8
   12664:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   12668:	ldr	x0, [sp, #16]
   1266c:	lsr	x0, x0, #12
   12670:	mov	x1, x0
   12674:	ldr	x0, [sp, #24]
   12678:	bl	12cb4 <__sancov_default_options@@Base+0x2908>
   1267c:	str	x0, [sp, #40]
   12680:	ldr	x0, [sp, #40]
   12684:	cmp	x0, #0x0
   12688:	b.ne	12694 <__sancov_default_options@@Base+0x22e8>  // b.any
   1268c:	mov	w0, #0x0                   	// #0
   12690:	b	126a8 <__sancov_default_options@@Base+0x22fc>
   12694:	ldr	x0, [sp, #16]
   12698:	and	x0, x0, #0xfff
   1269c:	ldr	x1, [sp, #40]
   126a0:	add	x0, x1, x0
   126a4:	ldrb	w0, [x0]
   126a8:	ldr	x30, [sp], #64
   126ac:	ret
   126b0:	str	x30, [sp, #-80]!
   126b4:	str	x0, [sp, #24]
   126b8:	str	x1, [sp, #16]
   126bc:	ldr	x0, [sp, #16]
   126c0:	ldr	x0, [x0, #8]
   126c4:	cmp	x0, #0x0
   126c8:	cset	w0, ne  // ne = any
   126cc:	and	w0, w0, #0xff
   126d0:	and	x0, x0, #0xff
   126d4:	cmp	x0, #0x0
   126d8:	b.ne	12780 <__sancov_default_options@@Base+0x23d4>  // b.any
   126dc:	mov	x0, #0x200                 	// #512
   126e0:	bl	12224 <__sancov_default_options@@Base+0x1e78>
   126e4:	str	x0, [sp, #64]
   126e8:	mov	x0, #0x1                   	// #1
   126ec:	str	x0, [sp, #72]
   126f0:	ldr	x0, [sp, #72]
   126f4:	cmp	x0, #0x35
   126f8:	b.hi	12784 <__sancov_default_options@@Base+0x23d8>  // b.pmore
   126fc:	ldr	x0, [sp, #72]
   12700:	lsl	x0, x0, #10
   12704:	ldr	x1, [sp, #24]
   12708:	add	x0, x1, x0
   1270c:	str	x0, [sp, #56]
   12710:	ldr	x0, [sp, #72]
   12714:	bl	12c88 <__sancov_default_options@@Base+0x28dc>
   12718:	str	x0, [sp, #48]
   1271c:	ldr	x0, [sp, #48]
   12720:	bl	12d30 <__sancov_default_options@@Base+0x2984>
   12724:	str	x0, [sp, #40]
   12728:	ldr	x0, [sp, #40]
   1272c:	lsl	x1, x0, #1
   12730:	ldr	x0, [sp, #56]
   12734:	str	x1, [x0, #8]
   12738:	ldr	x0, [sp, #56]
   1273c:	ldr	x1, [sp, #48]
   12740:	str	x1, [x0, #16]
   12744:	ldr	x0, [sp, #40]
   12748:	bl	12d54 <__sancov_default_options@@Base+0x29a8>
   1274c:	mov	x1, x0
   12750:	ldr	x0, [sp, #48]
   12754:	cmp	x0, x1
   12758:	b.cs	12764 <__sancov_default_options@@Base+0x23b8>  // b.hs, b.nlast
   1275c:	ldr	x0, [sp, #64]
   12760:	b	12768 <__sancov_default_options@@Base+0x23bc>
   12764:	mov	x0, #0x0                   	// #0
   12768:	ldr	x1, [sp, #56]
   1276c:	str	x0, [x1, #24]
   12770:	ldr	x0, [sp, #72]
   12774:	add	x0, x0, #0x1
   12778:	str	x0, [sp, #72]
   1277c:	b	126f0 <__sancov_default_options@@Base+0x2344>
   12780:	nop
   12784:	ldr	x30, [sp], #80
   12788:	ret
   1278c:	str	x30, [sp, #-80]!
   12790:	str	x0, [sp, #40]
   12794:	str	x1, [sp, #32]
   12798:	str	x2, [sp, #24]
   1279c:	str	x3, [sp, #16]
   127a0:	ldr	x0, [sp, #32]
   127a4:	ldr	x0, [x0, #8]
   127a8:	lsr	x2, x0, #1
   127ac:	ldr	x0, [sp, #32]
   127b0:	ldr	x0, [x0]
   127b4:	mov	x1, x0
   127b8:	mov	x0, x2
   127bc:	bl	9374 <__asan_backtrace_open@plt+0x2704>
   127c0:	str	x0, [sp, #72]
   127c4:	ldr	x0, [sp, #32]
   127c8:	ldr	x1, [x0]
   127cc:	ldr	x0, [sp, #72]
   127d0:	sub	x0, x1, x0
   127d4:	str	x0, [sp, #64]
   127d8:	ldr	x0, [sp, #32]
   127dc:	ldr	x1, [sp, #64]
   127e0:	add	x1, x1, #0x4
   127e4:	ldr	x0, [x0, x1, lsl #3]
   127e8:	mov	x3, x0
   127ec:	ldr	x2, [sp, #24]
   127f0:	ldr	x1, [sp, #16]
   127f4:	ldr	x0, [sp, #40]
   127f8:	bl	12d70 <__sancov_default_options@@Base+0x29c4>
   127fc:	str	x0, [sp, #56]
   12800:	ldr	x0, [sp, #56]
   12804:	cmp	x0, #0x0
   12808:	cset	w0, eq  // eq = none
   1280c:	and	w0, w0, #0xff
   12810:	and	x0, x0, #0xff
   12814:	cmp	x0, #0x0
   12818:	b.eq	1283c <__sancov_default_options@@Base+0x2490>  // b.none
   1281c:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   12820:	ldr	x0, [x0, #4024]
   12824:	ldr	x0, [x0]
   12828:	mov	x1, x0
   1282c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12830:	add	x0, x0, #0xf40
   12834:	bl	25a74 <OnPrint@@Base+0x454>
   12838:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   1283c:	ldr	x0, [sp, #64]
   12840:	add	x0, x0, #0x4
   12844:	lsl	x0, x0, #3
   12848:	ldr	x1, [sp, #32]
   1284c:	add	x0, x1, x0
   12850:	ldr	x2, [sp, #72]
   12854:	mov	x1, x0
   12858:	ldr	x0, [sp, #56]
   1285c:	bl	12dc8 <__sancov_default_options@@Base+0x2a1c>
   12860:	ldr	x0, [sp, #32]
   12864:	ldr	x1, [x0]
   12868:	ldr	x0, [sp, #72]
   1286c:	sub	x1, x1, x0
   12870:	ldr	x0, [sp, #32]
   12874:	str	x1, [x0]
   12878:	ldr	x1, [sp, #40]
   1287c:	mov	x0, #0xd800                	// #55296
   12880:	add	x0, x1, x0
   12884:	ldr	x3, [sp, #56]
   12888:	ldr	x2, [sp, #16]
   1288c:	mov	x1, x0
   12890:	ldr	x0, [sp, #24]
   12894:	bl	12e38 <__sancov_default_options@@Base+0x2a8c>
   12898:	nop
   1289c:	ldr	x30, [sp], #80
   128a0:	ret
   128a4:	str	x30, [sp, #-32]!
   128a8:	str	x0, [sp, #24]
   128ac:	str	x1, [sp, #16]
   128b0:	ldr	x0, [sp, #16]
   128b4:	mov	x1, x0
   128b8:	ldr	x0, [sp, #24]
   128bc:	bl	1242c <__sancov_default_options@@Base+0x2080>
   128c0:	ldr	x30, [sp], #32
   128c4:	ret
   128c8:	stp	x19, x30, [sp, #-80]!
   128cc:	str	x0, [sp, #40]
   128d0:	str	x1, [sp, #32]
   128d4:	str	x2, [sp, #24]
   128d8:	str	x3, [sp, #16]
   128dc:	ldr	x1, [sp, #16]
   128e0:	ldr	x0, [sp, #40]
   128e4:	bl	12edc <__sancov_default_options@@Base+0x2b30>
   128e8:	str	x0, [sp, #72]
   128ec:	ldr	x1, [sp, #72]
   128f0:	add	x0, sp, #0x38
   128f4:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   128f8:	ldr	x0, [sp, #72]
   128fc:	add	x0, x0, #0x8
   12900:	bl	12f08 <__sancov_default_options@@Base+0x2b5c>
   12904:	and	w0, w0, #0xff
   12908:	cmp	w0, #0x0
   1290c:	b.eq	12954 <__sancov_default_options@@Base+0x25a8>  // b.none
   12910:	ldr	x4, [sp, #16]
   12914:	ldr	x3, [sp, #72]
   12918:	ldr	x2, [sp, #24]
   1291c:	ldr	x1, [sp, #32]
   12920:	ldr	x0, [sp, #40]
   12924:	bl	12f2c <__sancov_default_options@@Base+0x2b80>
   12928:	and	w0, w0, #0xff
   1292c:	eor	w0, w0, #0x1
   12930:	and	w0, w0, #0xff
   12934:	and	x0, x0, #0xff
   12938:	cmp	x0, #0x0
   1293c:	cset	w0, ne  // ne = any
   12940:	and	w0, w0, #0xff
   12944:	cmp	w0, #0x0
   12948:	b.eq	12954 <__sancov_default_options@@Base+0x25a8>  // b.none
   1294c:	mov	x19, #0x0                   	// #0
   12950:	b	12974 <__sancov_default_options@@Base+0x25c8>
   12954:	ldr	x0, [sp, #72]
   12958:	add	x0, x0, #0x8
   1295c:	bl	13158 <__sancov_default_options@@Base+0x2dac>
   12960:	str	x0, [sp, #64]
   12964:	ldr	x0, [sp, #72]
   12968:	add	x0, x0, #0x8
   1296c:	bl	13170 <__sancov_default_options@@Base+0x2dc4>
   12970:	ldr	x19, [sp, #64]
   12974:	add	x0, sp, #0x38
   12978:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   1297c:	mov	x0, x19
   12980:	ldp	x19, x30, [sp], #80
   12984:	ret
   12988:	sub	sp, sp, #0x10
   1298c:	str	x0, [sp, #8]
   12990:	ldr	x0, [sp, #8]
   12994:	ldr	x0, [x0, #8]
   12998:	add	sp, sp, #0x10
   1299c:	ret
   129a0:	str	x30, [sp, #-48]!
   129a4:	str	x0, [sp, #24]
   129a8:	str	x1, [sp, #16]
   129ac:	str	xzr, [sp, #40]
   129b0:	ldr	x0, [sp, #24]
   129b4:	bl	12988 <__sancov_default_options@@Base+0x25dc>
   129b8:	str	x0, [sp, #32]
   129bc:	ldr	x1, [sp, #40]
   129c0:	ldr	x0, [sp, #32]
   129c4:	cmp	x1, x0
   129c8:	b.cs	12a00 <__sancov_default_options@@Base+0x2654>  // b.hs, b.nlast
   129cc:	ldr	x0, [sp, #40]
   129d0:	lsl	x0, x0, #3
   129d4:	ldr	x1, [sp, #16]
   129d8:	add	x0, x1, x0
   129dc:	ldr	x1, [sp, #24]
   129e0:	ldr	x2, [sp, #40]
   129e4:	add	x2, x2, #0x2
   129e8:	ldr	x1, [x1, x2, lsl #3]
   129ec:	str	x1, [x0]
   129f0:	ldr	x0, [sp, #40]
   129f4:	add	x0, x0, #0x1
   129f8:	str	x0, [sp, #40]
   129fc:	b	129bc <__sancov_default_options@@Base+0x2610>
   12a00:	nop
   12a04:	ldr	x30, [sp], #48
   12a08:	ret
   12a0c:	str	x30, [sp, #-64]!
   12a10:	str	x0, [sp, #40]
   12a14:	str	x1, [sp, #32]
   12a18:	str	x2, [sp, #24]
   12a1c:	str	x3, [sp, #16]
   12a20:	ldr	x1, [sp, #40]
   12a24:	ldr	x0, [sp, #32]
   12a28:	lsl	x0, x0, #10
   12a2c:	add	x0, x1, x0
   12a30:	ldr	x0, [x0, #24]
   12a34:	str	x0, [sp, #56]
   12a38:	ldr	x0, [sp, #56]
   12a3c:	cmp	x0, #0x0
   12a40:	b.eq	12a58 <__sancov_default_options@@Base+0x26ac>  // b.none
   12a44:	ldr	x3, [sp, #16]
   12a48:	ldr	x2, [sp, #56]
   12a4c:	ldr	x1, [sp, #24]
   12a50:	ldr	x0, [sp, #40]
   12a54:	bl	11e1c <__sancov_default_options@@Base+0x1a70>
   12a58:	nop
   12a5c:	ldr	x30, [sp], #64
   12a60:	ret
   12a64:	stp	x19, x30, [sp, #-128]!
   12a68:	str	x0, [sp, #24]
   12a6c:	str	x1, [sp, #16]
   12a70:	ldr	x0, [sp, #16]
   12a74:	str	x0, [sp, #104]
   12a78:	ldr	x1, [sp, #24]
   12a7c:	mov	x0, #0x240                 	// #576
   12a80:	movk	x0, #0x4, lsl #16
   12a84:	add	x1, x1, x0
   12a88:	add	x0, sp, #0x20
   12a8c:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   12a90:	str	xzr, [sp, #120]
   12a94:	str	xzr, [sp, #112]
   12a98:	ldr	x0, [sp, #24]
   12a9c:	add	x0, x0, #0x40, lsl #12
   12aa0:	ldr	x0, [x0, #16]
   12aa4:	ldr	x1, [sp, #112]
   12aa8:	cmp	x1, x0
   12aac:	b.cs	12b1c <__sancov_default_options@@Base+0x2770>  // b.hs, b.nlast
   12ab0:	ldr	x0, [sp, #24]
   12ab4:	ldr	x1, [x0, #8]
   12ab8:	ldr	x0, [sp, #112]
   12abc:	lsl	x0, x0, #3
   12ac0:	add	x0, x1, x0
   12ac4:	ldr	x0, [x0]
   12ac8:	str	x0, [sp, #96]
   12acc:	ldr	x1, [sp, #104]
   12ad0:	ldr	x0, [sp, #96]
   12ad4:	cmp	x1, x0
   12ad8:	b.cc	12b08 <__sancov_default_options@@Base+0x275c>  // b.lo, b.ul, b.last
   12adc:	ldr	x1, [sp, #104]
   12ae0:	ldr	x0, [sp, #96]
   12ae4:	sub	x1, x1, x0
   12ae8:	ldr	x2, [sp, #104]
   12aec:	ldr	x0, [sp, #120]
   12af0:	sub	x0, x2, x0
   12af4:	cmp	x1, x0
   12af8:	b.cs	12b0c <__sancov_default_options@@Base+0x2760>  // b.hs, b.nlast
   12afc:	ldr	x0, [sp, #96]
   12b00:	str	x0, [sp, #120]
   12b04:	b	12b0c <__sancov_default_options@@Base+0x2760>
   12b08:	nop
   12b0c:	ldr	x0, [sp, #112]
   12b10:	add	x0, x0, #0x1
   12b14:	str	x0, [sp, #112]
   12b18:	b	12a98 <__sancov_default_options@@Base+0x26ec>
   12b1c:	ldr	x0, [sp, #120]
   12b20:	cmp	x0, #0x0
   12b24:	b.ne	12b30 <__sancov_default_options@@Base+0x2784>  // b.any
   12b28:	mov	x19, #0x0                   	// #0
   12b2c:	b	12c74 <__sancov_default_options@@Base+0x28c8>
   12b30:	ldr	x0, [sp, #120]
   12b34:	str	x0, [sp, #88]
   12b38:	ldr	x0, [sp, #120]
   12b3c:	str	x0, [sp, #80]
   12b40:	ldr	x0, [sp, #88]
   12b44:	ldr	x0, [x0]
   12b48:	str	x0, [sp, #72]
   12b4c:	ldr	x1, [sp, #80]
   12b50:	ldr	x0, [sp, #72]
   12b54:	cmp	x1, x0
   12b58:	cset	w0, cc  // cc = lo, ul, last
   12b5c:	and	w0, w0, #0xff
   12b60:	and	x0, x0, #0xff
   12b64:	cmp	x0, #0x0
   12b68:	b.eq	12b8c <__sancov_default_options@@Base+0x27e0>  // b.none
   12b6c:	ldr	x4, [sp, #72]
   12b70:	ldr	x3, [sp, #80]
   12b74:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12b78:	add	x2, x0, #0xf90
   12b7c:	mov	w1, #0xc1                  	// #193
   12b80:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12b84:	add	x0, x0, #0x840
   12b88:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   12b8c:	ldr	x0, [sp, #120]
   12b90:	str	x0, [sp, #64]
   12b94:	ldr	x0, [sp, #88]
   12b98:	ldr	x1, [x0]
   12b9c:	ldr	x0, [sp, #88]
   12ba0:	ldr	x0, [x0, #8]
   12ba4:	add	x0, x1, x0
   12ba8:	str	x0, [sp, #56]
   12bac:	ldr	x1, [sp, #64]
   12bb0:	ldr	x0, [sp, #56]
   12bb4:	cmp	x1, x0
   12bb8:	cset	w0, cs  // cs = hs, nlast
   12bbc:	and	w0, w0, #0xff
   12bc0:	and	x0, x0, #0xff
   12bc4:	cmp	x0, #0x0
   12bc8:	b.eq	12bec <__sancov_default_options@@Base+0x2840>  // b.none
   12bcc:	ldr	x4, [sp, #56]
   12bd0:	ldr	x3, [sp, #64]
   12bd4:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12bd8:	add	x2, x0, #0xfb8
   12bdc:	mov	w1, #0xc2                  	// #194
   12be0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12be4:	add	x0, x0, #0x840
   12be8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   12bec:	ldr	x0, [sp, #120]
   12bf0:	str	x0, [sp, #48]
   12bf4:	ldr	x0, [sp, #104]
   12bf8:	str	x0, [sp, #40]
   12bfc:	ldr	x1, [sp, #48]
   12c00:	ldr	x0, [sp, #40]
   12c04:	cmp	x1, x0
   12c08:	cset	w0, hi  // hi = pmore
   12c0c:	and	w0, w0, #0xff
   12c10:	and	x0, x0, #0xff
   12c14:	cmp	x0, #0x0
   12c18:	b.eq	12c3c <__sancov_default_options@@Base+0x2890>  // b.none
   12c1c:	ldr	x4, [sp, #40]
   12c20:	ldr	x3, [sp, #48]
   12c24:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12c28:	add	x2, x0, #0xff0
   12c2c:	mov	w1, #0xc3                  	// #195
   12c30:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12c34:	add	x0, x0, #0x840
   12c38:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   12c3c:	ldr	x0, [sp, #88]
   12c40:	ldr	x1, [x0]
   12c44:	ldr	x0, [sp, #88]
   12c48:	ldr	x0, [x0, #8]
   12c4c:	add	x0, x1, x0
   12c50:	ldr	x1, [sp, #104]
   12c54:	cmp	x1, x0
   12c58:	b.cc	12c64 <__sancov_default_options@@Base+0x28b8>  // b.lo, b.ul, b.last
   12c5c:	mov	x19, #0x0                   	// #0
   12c60:	b	12c74 <__sancov_default_options@@Base+0x28c8>
   12c64:	ldr	x1, [sp, #88]
   12c68:	ldr	x0, [sp, #24]
   12c6c:	bl	13224 <__sancov_default_options@@Base+0x2e78>
   12c70:	mov	x19, x0
   12c74:	add	x0, sp, #0x20
   12c78:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   12c7c:	mov	x0, x19
   12c80:	ldp	x19, x30, [sp], #128
   12c84:	ret
   12c88:	str	x30, [sp, #-32]!
   12c8c:	str	x0, [sp, #24]
   12c90:	ldr	x0, [sp, #24]
   12c94:	cmp	x0, #0x35
   12c98:	b.eq	12ca8 <__sancov_default_options@@Base+0x28fc>  // b.none
   12c9c:	ldr	x0, [sp, #24]
   12ca0:	bl	132b0 <__sancov_default_options@@Base+0x2f04>
   12ca4:	b	12cac <__sancov_default_options@@Base+0x2900>
   12ca8:	mov	x0, #0x200                 	// #512
   12cac:	ldr	x30, [sp], #32
   12cb0:	ret
   12cb4:	str	x30, [sp, #-48]!
   12cb8:	str	x0, [sp, #24]
   12cbc:	str	x1, [sp, #16]
   12cc0:	ldr	x0, [sp, #16]
   12cc4:	str	x0, [sp, #40]
   12cc8:	mov	x0, #0x10000               	// #65536
   12ccc:	str	x0, [sp, #32]
   12cd0:	ldr	x1, [sp, #40]
   12cd4:	ldr	x0, [sp, #32]
   12cd8:	cmp	x1, x0
   12cdc:	cset	w0, cs  // cs = hs, nlast
   12ce0:	and	w0, w0, #0xff
   12ce4:	and	x0, x0, #0xff
   12ce8:	cmp	x0, #0x0
   12cec:	b.eq	12d10 <__sancov_default_options@@Base+0x2964>  // b.none
   12cf0:	ldr	x4, [sp, #32]
   12cf4:	ldr	x3, [sp, #40]
   12cf8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   12cfc:	add	x2, x0, #0x10
   12d00:	mov	w1, #0x4f                  	// #79
   12d04:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12d08:	add	x0, x0, #0xef8
   12d0c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   12d10:	ldr	x0, [sp, #16]
   12d14:	lsl	x0, x0, #3
   12d18:	ldr	x1, [sp, #24]
   12d1c:	add	x0, x1, x0
   12d20:	mov	w1, #0x4                   	// #4
   12d24:	bl	11080 <__sancov_default_options@@Base+0xcd4>
   12d28:	ldr	x30, [sp], #48
   12d2c:	ret
   12d30:	str	x30, [sp, #-32]!
   12d34:	str	x0, [sp, #24]
   12d38:	ldr	x0, [sp, #24]
   12d3c:	bl	1333c <__sancov_default_options@@Base+0x2f90>
   12d40:	mov	x1, x0
   12d44:	mov	x0, #0x3e                  	// #62
   12d48:	bl	9374 <__asan_backtrace_open@plt+0x2704>
   12d4c:	ldr	x30, [sp], #32
   12d50:	ret
   12d54:	sub	sp, sp, #0x10
   12d58:	str	x0, [sp, #8]
   12d5c:	ldr	x0, [sp, #8]
   12d60:	add	x0, x0, #0x2
   12d64:	lsl	x0, x0, #3
   12d68:	add	sp, sp, #0x10
   12d6c:	ret
   12d70:	str	x30, [sp, #-64]!
   12d74:	str	x0, [sp, #40]
   12d78:	str	x1, [sp, #32]
   12d7c:	str	x2, [sp, #24]
   12d80:	str	x3, [sp, #16]
   12d84:	ldr	x1, [sp, #40]
   12d88:	ldr	x0, [sp, #32]
   12d8c:	lsl	x0, x0, #10
   12d90:	add	x0, x1, x0
   12d94:	ldr	x0, [x0, #24]
   12d98:	str	x0, [sp, #56]
   12d9c:	ldr	x0, [sp, #56]
   12da0:	cmp	x0, #0x0
   12da4:	b.eq	12dbc <__sancov_default_options@@Base+0x2a10>  // b.none
   12da8:	ldr	x2, [sp, #56]
   12dac:	ldr	x1, [sp, #24]
   12db0:	ldr	x0, [sp, #40]
   12db4:	bl	1161c <__sancov_default_options@@Base+0x1270>
   12db8:	b	12dc0 <__sancov_default_options@@Base+0x2a14>
   12dbc:	ldr	x0, [sp, #16]
   12dc0:	ldr	x30, [sp], #64
   12dc4:	ret
   12dc8:	sub	sp, sp, #0x30
   12dcc:	str	x0, [sp, #24]
   12dd0:	str	x1, [sp, #16]
   12dd4:	str	x2, [sp, #8]
   12dd8:	ldr	x0, [sp, #24]
   12ddc:	ldr	x1, [sp, #8]
   12de0:	str	x1, [x0, #8]
   12de4:	str	xzr, [sp, #40]
   12de8:	ldr	x1, [sp, #40]
   12dec:	ldr	x0, [sp, #8]
   12df0:	cmp	x1, x0
   12df4:	b.cs	12e2c <__sancov_default_options@@Base+0x2a80>  // b.hs, b.nlast
   12df8:	ldr	x0, [sp, #40]
   12dfc:	lsl	x0, x0, #3
   12e00:	ldr	x1, [sp, #16]
   12e04:	add	x0, x1, x0
   12e08:	ldr	x2, [x0]
   12e0c:	ldr	x0, [sp, #24]
   12e10:	ldr	x1, [sp, #40]
   12e14:	add	x1, x1, #0x2
   12e18:	str	x2, [x0, x1, lsl #3]
   12e1c:	ldr	x0, [sp, #40]
   12e20:	add	x0, x0, #0x1
   12e24:	str	x0, [sp, #40]
   12e28:	b	12de8 <__sancov_default_options@@Base+0x2a3c>
   12e2c:	nop
   12e30:	add	sp, sp, #0x30
   12e34:	ret
   12e38:	str	x30, [sp, #-80]!
   12e3c:	str	x0, [sp, #40]
   12e40:	str	x1, [sp, #32]
   12e44:	str	x2, [sp, #24]
   12e48:	str	x3, [sp, #16]
   12e4c:	ldr	x0, [sp, #16]
   12e50:	bl	12988 <__sancov_default_options@@Base+0x25dc>
   12e54:	str	x0, [sp, #72]
   12e58:	str	xzr, [sp, #64]
   12e5c:	ldr	x1, [sp, #72]
   12e60:	ldr	x0, [sp, #64]
   12e64:	cmp	x1, x0
   12e68:	cset	w0, ls  // ls = plast
   12e6c:	and	w0, w0, #0xff
   12e70:	and	x0, x0, #0xff
   12e74:	cmp	x0, #0x0
   12e78:	b.eq	12e9c <__sancov_default_options@@Base+0x2af0>  // b.none
   12e7c:	ldr	x4, [sp, #64]
   12e80:	ldr	x3, [sp, #72]
   12e84:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12e88:	add	x2, x0, #0xe20
   12e8c:	mov	w1, #0xad                  	// #173
   12e90:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   12e94:	add	x0, x0, #0xe60
   12e98:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   12e9c:	ldr	x1, [sp, #24]
   12ea0:	ldr	x0, [sp, #40]
   12ea4:	bl	12edc <__sancov_default_options@@Base+0x2b30>
   12ea8:	str	x0, [sp, #56]
   12eac:	ldr	x1, [sp, #56]
   12eb0:	add	x0, sp, #0x30
   12eb4:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   12eb8:	ldr	x0, [sp, #56]
   12ebc:	add	x0, x0, #0x8
   12ec0:	ldr	x1, [sp, #16]
   12ec4:	bl	133a4 <__sancov_default_options@@Base+0x2ff8>
   12ec8:	add	x0, sp, #0x30
   12ecc:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   12ed0:	nop
   12ed4:	ldr	x30, [sp], #80
   12ed8:	ret
   12edc:	sub	sp, sp, #0x10
   12ee0:	str	x0, [sp, #8]
   12ee4:	str	x1, [sp]
   12ee8:	ldr	x1, [sp]
   12eec:	mov	x0, #0x2001                	// #8193
   12ef0:	add	x0, x1, x0
   12ef4:	lsl	x0, x0, #6
   12ef8:	ldr	x1, [sp, #8]
   12efc:	add	x0, x1, x0
   12f00:	add	sp, sp, #0x10
   12f04:	ret
   12f08:	sub	sp, sp, #0x10
   12f0c:	str	x0, [sp, #8]
   12f10:	ldr	x0, [sp, #8]
   12f14:	ldr	x0, [x0]
   12f18:	cmp	x0, #0x0
   12f1c:	cset	w0, eq  // eq = none
   12f20:	and	w0, w0, #0xff
   12f24:	add	sp, sp, #0x10
   12f28:	ret
   12f2c:	sub	sp, sp, #0x210
   12f30:	str	x30, [sp]
   12f34:	str	x0, [sp, #56]
   12f38:	str	x1, [sp, #48]
   12f3c:	str	x2, [sp, #40]
   12f40:	str	x3, [sp, #32]
   12f44:	str	x4, [sp, #24]
   12f48:	ldr	x2, [sp, #24]
   12f4c:	ldr	x1, [sp, #48]
   12f50:	ldr	x0, [sp, #56]
   12f54:	bl	13434 <__sancov_default_options@@Base+0x3088>
   12f58:	str	x0, [sp, #504]
   12f5c:	ldr	x0, [sp, #504]
   12f60:	cmp	x0, #0x0
   12f64:	cset	w0, eq  // eq = none
   12f68:	and	w0, w0, #0xff
   12f6c:	and	x0, x0, #0xff
   12f70:	cmp	x0, #0x0
   12f74:	b.eq	12f80 <__sancov_default_options@@Base+0x2bd4>  // b.none
   12f78:	mov	w0, #0x0                   	// #0
   12f7c:	b	1314c <__sancov_default_options@@Base+0x2da0>
   12f80:	ldr	x0, [sp, #24]
   12f84:	bl	12c88 <__sancov_default_options@@Base+0x28dc>
   12f88:	str	x0, [sp, #496]
   12f8c:	mov	x1, #0x100000              	// #1048576
   12f90:	ldr	x0, [sp, #496]
   12f94:	udiv	x0, x1, x0
   12f98:	str	x0, [sp, #488]
   12f9c:	ldr	x0, [sp, #496]
   12fa0:	bl	12d30 <__sancov_default_options@@Base+0x2984>
   12fa4:	str	x0, [sp, #480]
   12fa8:	str	xzr, [sp, #448]
   12fac:	mov	x0, #0x30                  	// #48
   12fb0:	str	x0, [sp, #472]
   12fb4:	str	xzr, [sp, #520]
   12fb8:	ldr	x0, [sp, #504]
   12fbc:	str	x0, [sp, #512]
   12fc0:	ldr	x1, [sp, #488]
   12fc4:	ldr	x0, [sp, #496]
   12fc8:	mul	x1, x1, x0
   12fcc:	ldr	x0, [sp, #504]
   12fd0:	add	x0, x1, x0
   12fd4:	ldr	x1, [sp, #512]
   12fd8:	cmp	x1, x0
   12fdc:	b.cs	13078 <__sancov_default_options@@Base+0x2ccc>  // b.hs, b.nlast
   12fe0:	ldr	x0, [sp, #520]
   12fe4:	add	x1, x0, #0x1
   12fe8:	str	x1, [sp, #520]
   12fec:	lsl	x0, x0, #3
   12ff0:	add	x1, sp, #0x40
   12ff4:	ldr	x2, [sp, #512]
   12ff8:	str	x2, [x1, x0]
   12ffc:	ldr	x0, [sp, #520]
   13000:	cmp	x0, #0x30
   13004:	b.ne	13064 <__sancov_default_options@@Base+0x2cb8>  // b.any
   13008:	add	x1, sp, #0x40
   1300c:	add	x0, sp, #0x1c0
   13010:	ldr	x7, [sp, #520]
   13014:	mov	x6, x1
   13018:	ldr	x5, [sp, #480]
   1301c:	mov	x4, x0
   13020:	ldr	x3, [sp, #24]
   13024:	ldr	x2, [sp, #32]
   13028:	ldr	x1, [sp, #40]
   1302c:	ldr	x0, [sp, #56]
   13030:	bl	13538 <__sancov_default_options@@Base+0x318c>
   13034:	and	w0, w0, #0xff
   13038:	eor	w0, w0, #0x1
   1303c:	and	w0, w0, #0xff
   13040:	and	x0, x0, #0xff
   13044:	cmp	x0, #0x0
   13048:	cset	w0, ne  // ne = any
   1304c:	and	w0, w0, #0xff
   13050:	cmp	w0, #0x0
   13054:	b.eq	13060 <__sancov_default_options@@Base+0x2cb4>  // b.none
   13058:	mov	w0, #0x0                   	// #0
   1305c:	b	1314c <__sancov_default_options@@Base+0x2da0>
   13060:	str	xzr, [sp, #520]
   13064:	ldr	x1, [sp, #512]
   13068:	ldr	x0, [sp, #496]
   1306c:	add	x0, x1, x0
   13070:	str	x0, [sp, #512]
   13074:	b	12fc0 <__sancov_default_options@@Base+0x2c14>
   13078:	ldr	x0, [sp, #520]
   1307c:	cmp	x0, #0x0
   13080:	b.eq	130dc <__sancov_default_options@@Base+0x2d30>  // b.none
   13084:	add	x1, sp, #0x40
   13088:	add	x0, sp, #0x1c0
   1308c:	ldr	x7, [sp, #520]
   13090:	mov	x6, x1
   13094:	ldr	x5, [sp, #480]
   13098:	mov	x4, x0
   1309c:	ldr	x3, [sp, #24]
   130a0:	ldr	x2, [sp, #32]
   130a4:	ldr	x1, [sp, #40]
   130a8:	ldr	x0, [sp, #56]
   130ac:	bl	13538 <__sancov_default_options@@Base+0x318c>
   130b0:	and	w0, w0, #0xff
   130b4:	eor	w0, w0, #0x1
   130b8:	and	w0, w0, #0xff
   130bc:	and	x0, x0, #0xff
   130c0:	cmp	x0, #0x0
   130c4:	cset	w0, ne  // ne = any
   130c8:	and	w0, w0, #0xff
   130cc:	cmp	w0, #0x0
   130d0:	b.eq	130dc <__sancov_default_options@@Base+0x2d30>  // b.none
   130d4:	mov	w0, #0x0                   	// #0
   130d8:	b	1314c <__sancov_default_options@@Base+0x2da0>
   130dc:	ldr	x0, [sp, #448]
   130e0:	cmp	x0, #0x0
   130e4:	b.eq	13148 <__sancov_default_options@@Base+0x2d9c>  // b.none
   130e8:	ldr	x0, [sp, #448]
   130ec:	bl	12988 <__sancov_default_options@@Base+0x25dc>
   130f0:	str	x0, [sp, #464]
   130f4:	str	xzr, [sp, #456]
   130f8:	ldr	x1, [sp, #464]
   130fc:	ldr	x0, [sp, #456]
   13100:	cmp	x1, x0
   13104:	cset	w0, ls  // ls = plast
   13108:	and	w0, w0, #0xff
   1310c:	and	x0, x0, #0xff
   13110:	cmp	x0, #0x0
   13114:	b.eq	13138 <__sancov_default_options@@Base+0x2d8c>  // b.none
   13118:	ldr	x4, [sp, #456]
   1311c:	ldr	x3, [sp, #464]
   13120:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   13124:	add	x2, x0, #0xe20
   13128:	mov	w1, #0x169                 	// #361
   1312c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   13130:	add	x0, x0, #0xe60
   13134:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   13138:	ldr	x0, [sp, #32]
   1313c:	add	x0, x0, #0x8
   13140:	ldr	x1, [sp, #448]
   13144:	bl	13660 <__sancov_default_options@@Base+0x32b4>
   13148:	mov	w0, #0x1                   	// #1
   1314c:	ldr	x30, [sp]
   13150:	add	sp, sp, #0x210
   13154:	ret
   13158:	sub	sp, sp, #0x10
   1315c:	str	x0, [sp, #8]
   13160:	ldr	x0, [sp, #8]
   13164:	ldr	x0, [x0, #8]
   13168:	add	sp, sp, #0x10
   1316c:	ret
   13170:	str	x30, [sp, #-48]!
   13174:	str	x0, [sp, #24]
   13178:	ldr	x0, [sp, #24]
   1317c:	bl	12f08 <__sancov_default_options@@Base+0x2b5c>
   13180:	and	w0, w0, #0xff
   13184:	eor	w0, w0, #0x1
   13188:	and	w0, w0, #0xff
   1318c:	and	x0, x0, #0xff
   13190:	str	x0, [sp, #40]
   13194:	str	xzr, [sp, #32]
   13198:	ldr	x1, [sp, #40]
   1319c:	ldr	x0, [sp, #32]
   131a0:	cmp	x1, x0
   131a4:	cset	w0, eq  // eq = none
   131a8:	and	w0, w0, #0xff
   131ac:	and	x0, x0, #0xff
   131b0:	cmp	x0, #0x0
   131b4:	b.eq	131d8 <__sancov_default_options@@Base+0x2e2c>  // b.none
   131b8:	ldr	x4, [sp, #32]
   131bc:	ldr	x3, [sp, #40]
   131c0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   131c4:	add	x2, x0, #0x28
   131c8:	mov	w1, #0x40                  	// #64
   131cc:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   131d0:	add	x0, x0, #0x40
   131d4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   131d8:	ldr	x0, [sp, #24]
   131dc:	ldr	x0, [x0, #8]
   131e0:	ldr	x1, [x0]
   131e4:	ldr	x0, [sp, #24]
   131e8:	str	x1, [x0, #8]
   131ec:	ldr	x0, [sp, #24]
   131f0:	ldr	x0, [x0, #8]
   131f4:	cmp	x0, #0x0
   131f8:	b.ne	13204 <__sancov_default_options@@Base+0x2e58>  // b.any
   131fc:	ldr	x0, [sp, #24]
   13200:	str	xzr, [x0, #16]
   13204:	ldr	x0, [sp, #24]
   13208:	ldr	x0, [x0]
   1320c:	sub	x1, x0, #0x1
   13210:	ldr	x0, [sp, #24]
   13214:	str	x1, [x0]
   13218:	nop
   1321c:	ldr	x30, [sp], #48
   13220:	ret
   13224:	str	x30, [sp, #-48]!
   13228:	str	x0, [sp, #24]
   1322c:	str	x1, [sp, #16]
   13230:	ldr	x2, [sp, #16]
   13234:	ldr	x0, [sp, #24]
   13238:	ldr	x0, [x0]
   1323c:	mov	x1, x0
   13240:	mov	x0, x2
   13244:	bl	10e18 <__sancov_default_options@@Base+0xa6c>
   13248:	and	w0, w0, #0xff
   1324c:	and	x0, x0, #0xff
   13250:	str	x0, [sp, #40]
   13254:	str	xzr, [sp, #32]
   13258:	ldr	x1, [sp, #40]
   1325c:	ldr	x0, [sp, #32]
   13260:	cmp	x1, x0
   13264:	cset	w0, eq  // eq = none
   13268:	and	w0, w0, #0xff
   1326c:	and	x0, x0, #0xff
   13270:	cmp	x0, #0x0
   13274:	b.eq	13298 <__sancov_default_options@@Base+0x2eec>  // b.none
   13278:	ldr	x4, [sp, #32]
   1327c:	ldr	x3, [sp, #40]
   13280:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13284:	add	x2, x0, #0x80
   13288:	mov	w1, #0x12b                 	// #299
   1328c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   13290:	add	x0, x0, #0x840
   13294:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   13298:	ldr	x0, [sp, #24]
   1329c:	ldr	x1, [x0]
   132a0:	ldr	x0, [sp, #16]
   132a4:	add	x0, x1, x0
   132a8:	ldr	x30, [sp], #48
   132ac:	ret
   132b0:	sub	sp, sp, #0x20
   132b4:	str	x0, [sp, #8]
   132b8:	ldr	x0, [sp, #8]
   132bc:	cmp	x0, #0x35
   132c0:	cset	w0, eq  // eq = none
   132c4:	and	w0, w0, #0xff
   132c8:	and	x0, x0, #0xff
   132cc:	cmp	x0, #0x0
   132d0:	b.eq	132dc <__sancov_default_options@@Base+0x2f30>  // b.none
   132d4:	mov	x0, #0x200                 	// #512
   132d8:	b	13334 <__sancov_default_options@@Base+0x2f88>
   132dc:	ldr	x0, [sp, #8]
   132e0:	cmp	x0, #0x10
   132e4:	b.hi	132f4 <__sancov_default_options@@Base+0x2f48>  // b.pmore
   132e8:	ldr	x0, [sp, #8]
   132ec:	lsl	x0, x0, #4
   132f0:	b	13334 <__sancov_default_options@@Base+0x2f88>
   132f4:	ldr	x0, [sp, #8]
   132f8:	sub	x0, x0, #0x10
   132fc:	str	x0, [sp, #8]
   13300:	ldr	x0, [sp, #8]
   13304:	lsr	x0, x0, #2
   13308:	mov	w1, w0
   1330c:	mov	x0, #0x100                 	// #256
   13310:	lsl	x0, x0, x1
   13314:	str	x0, [sp, #24]
   13318:	ldr	x0, [sp, #24]
   1331c:	lsr	x1, x0, #2
   13320:	ldr	x0, [sp, #8]
   13324:	and	x0, x0, #0x3
   13328:	mul	x1, x1, x0
   1332c:	ldr	x0, [sp, #24]
   13330:	add	x0, x1, x0
   13334:	add	sp, sp, #0x20
   13338:	ret
   1333c:	str	x30, [sp, #-48]!
   13340:	str	x0, [sp, #24]
   13344:	ldr	x0, [sp, #24]
   13348:	cmp	x0, #0x0
   1334c:	cset	w0, eq  // eq = none
   13350:	and	w0, w0, #0xff
   13354:	and	x0, x0, #0xff
   13358:	cmp	x0, #0x0
   1335c:	b.eq	13368 <__sancov_default_options@@Base+0x2fbc>  // b.none
   13360:	mov	x0, #0x0                   	// #0
   13364:	b	1339c <__sancov_default_options@@Base+0x2ff0>
   13368:	ldr	x0, [sp, #24]
   1336c:	mov	w1, w0
   13370:	mov	w0, #0x4000                	// #16384
   13374:	udiv	w0, w0, w1
   13378:	mov	w0, w0
   1337c:	str	x0, [sp, #40]
   13380:	ldr	x1, [sp, #40]
   13384:	mov	x0, #0x40                  	// #64
   13388:	bl	9374 <__asan_backtrace_open@plt+0x2704>
   1338c:	mov	x1, x0
   13390:	mov	x0, #0x1                   	// #1
   13394:	bl	93a4 <__asan_backtrace_open@plt+0x2734>
   13398:	nop
   1339c:	ldr	x30, [sp], #48
   133a0:	ret
   133a4:	str	x30, [sp, #-32]!
   133a8:	str	x0, [sp, #24]
   133ac:	str	x1, [sp, #16]
   133b0:	ldr	x0, [sp, #24]
   133b4:	bl	12f08 <__sancov_default_options@@Base+0x2b5c>
   133b8:	and	w0, w0, #0xff
   133bc:	cmp	w0, #0x0
   133c0:	b.eq	133f8 <__sancov_default_options@@Base+0x304c>  // b.none
   133c4:	ldr	x0, [sp, #16]
   133c8:	str	xzr, [x0]
   133cc:	ldr	x0, [sp, #24]
   133d0:	ldr	x1, [sp, #16]
   133d4:	str	x1, [x0, #16]
   133d8:	ldr	x0, [sp, #24]
   133dc:	ldr	x1, [x0, #16]
   133e0:	ldr	x0, [sp, #24]
   133e4:	str	x1, [x0, #8]
   133e8:	ldr	x0, [sp, #24]
   133ec:	mov	x1, #0x1                   	// #1
   133f0:	str	x1, [x0]
   133f4:	b	13428 <__sancov_default_options@@Base+0x307c>
   133f8:	ldr	x0, [sp, #24]
   133fc:	ldr	x1, [x0, #8]
   13400:	ldr	x0, [sp, #16]
   13404:	str	x1, [x0]
   13408:	ldr	x0, [sp, #24]
   1340c:	ldr	x1, [sp, #16]
   13410:	str	x1, [x0, #8]
   13414:	ldr	x0, [sp, #24]
   13418:	ldr	x0, [x0]
   1341c:	add	x1, x0, #0x1
   13420:	ldr	x0, [sp, #24]
   13424:	str	x1, [x0]
   13428:	nop
   1342c:	ldr	x30, [sp], #32
   13430:	ret
   13434:	stp	x19, x30, [sp, #-80]!
   13438:	str	x0, [sp, #40]
   1343c:	str	x1, [sp, #32]
   13440:	str	x2, [sp, #24]
   13444:	adrp	x0, 77000 <_Unwind_Backtrace@GCC_3.3>
   13448:	add	x0, x0, #0x4c8
   1344c:	ldr	x0, [x0]
   13450:	mov	x2, x0
   13454:	mov	x1, #0x100000              	// #1048576
   13458:	mov	x0, #0x100000              	// #1048576
   1345c:	bl	22304 <__sanitizer_set_report_fd@@Base+0x8158>
   13460:	str	x0, [sp, #72]
   13464:	ldr	x0, [sp, #72]
   13468:	cmp	x0, #0x0
   1346c:	cset	w0, eq  // eq = none
   13470:	and	w0, w0, #0xff
   13474:	and	x0, x0, #0xff
   13478:	cmp	x0, #0x0
   1347c:	b.eq	13488 <__sancov_default_options@@Base+0x30dc>  // b.none
   13480:	mov	x0, #0x0                   	// #0
   13484:	b	13530 <__sancov_default_options@@Base+0x3184>
   13488:	add	x0, sp, #0x30
   1348c:	mov	x2, #0x100000              	// #1048576
   13490:	ldr	x1, [sp, #72]
   13494:	bl	10e48 <__sancov_default_options@@Base+0xa9c>
   13498:	mov	x2, #0x100000              	// #1048576
   1349c:	mov	w1, #0x1                   	// #1
   134a0:	ldr	x0, [sp, #32]
   134a4:	bl	10e80 <__sancov_default_options@@Base+0xad4>
   134a8:	mov	x1, #0x100000              	// #1048576
   134ac:	ldr	x0, [sp, #72]
   134b0:	bl	10e18 <__sancov_default_options@@Base+0xa6c>
   134b4:	and	w0, w0, #0xff
   134b8:	and	x0, x0, #0xff
   134bc:	str	x0, [sp, #64]
   134c0:	str	xzr, [sp, #56]
   134c4:	ldr	x1, [sp, #64]
   134c8:	ldr	x0, [sp, #56]
   134cc:	cmp	x1, x0
   134d0:	cset	w0, eq  // eq = none
   134d4:	and	w0, w0, #0xff
   134d8:	and	x0, x0, #0xff
   134dc:	cmp	x0, #0x0
   134e0:	b.eq	13504 <__sancov_default_options@@Base+0x3158>  // b.none
   134e4:	ldr	x4, [sp, #56]
   134e8:	ldr	x3, [sp, #64]
   134ec:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   134f0:	add	x2, x0, #0xb0
   134f4:	mov	w1, #0x126                 	// #294
   134f8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   134fc:	add	x0, x0, #0xe60
   13500:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   13504:	ldr	x19, [sp, #40]
   13508:	ldr	x1, [sp, #72]
   1350c:	ldr	x0, [sp, #40]
   13510:	bl	12598 <__sancov_default_options@@Base+0x21ec>
   13514:	ldr	x1, [sp, #24]
   13518:	and	w1, w1, #0xff
   1351c:	mov	w2, w1
   13520:	mov	x1, x0
   13524:	mov	x0, x19
   13528:	bl	136f8 <__sancov_default_options@@Base+0x334c>
   1352c:	ldr	x0, [sp, #72]
   13530:	ldp	x19, x30, [sp], #80
   13534:	ret
   13538:	str	x30, [sp, #-96]!
   1353c:	str	x0, [sp, #72]
   13540:	str	x1, [sp, #64]
   13544:	str	x2, [sp, #56]
   13548:	str	x3, [sp, #48]
   1354c:	str	x4, [sp, #40]
   13550:	str	x5, [sp, #32]
   13554:	str	x6, [sp, #24]
   13558:	str	x7, [sp, #16]
   1355c:	ldr	x0, [sp, #40]
   13560:	ldr	x0, [x0]
   13564:	str	x0, [sp, #88]
   13568:	str	xzr, [sp, #80]
   1356c:	ldr	x1, [sp, #80]
   13570:	ldr	x0, [sp, #16]
   13574:	cmp	x1, x0
   13578:	b.cs	13648 <__sancov_default_options@@Base+0x329c>  // b.hs, b.nlast
   1357c:	ldr	x0, [sp, #88]
   13580:	cmp	x0, #0x0
   13584:	b.ne	135e0 <__sancov_default_options@@Base+0x3234>  // b.any
   13588:	ldr	x0, [sp, #80]
   1358c:	lsl	x0, x0, #3
   13590:	ldr	x1, [sp, #24]
   13594:	add	x0, x1, x0
   13598:	ldr	x0, [x0]
   1359c:	mov	x3, x0
   135a0:	ldr	x2, [sp, #72]
   135a4:	ldr	x1, [sp, #48]
   135a8:	ldr	x0, [sp, #64]
   135ac:	bl	12d70 <__sancov_default_options@@Base+0x29c4>
   135b0:	str	x0, [sp, #88]
   135b4:	ldr	x0, [sp, #88]
   135b8:	cmp	x0, #0x0
   135bc:	cset	w0, eq  // eq = none
   135c0:	and	w0, w0, #0xff
   135c4:	and	x0, x0, #0xff
   135c8:	cmp	x0, #0x0
   135cc:	b.eq	135d8 <__sancov_default_options@@Base+0x322c>  // b.none
   135d0:	mov	w0, #0x0                   	// #0
   135d4:	b	13658 <__sancov_default_options@@Base+0x32ac>
   135d8:	ldr	x0, [sp, #88]
   135dc:	bl	137f4 <__sancov_default_options@@Base+0x3448>
   135e0:	ldr	x0, [sp, #80]
   135e4:	lsl	x0, x0, #3
   135e8:	ldr	x1, [sp, #24]
   135ec:	add	x0, x1, x0
   135f0:	ldr	x0, [x0]
   135f4:	mov	x1, x0
   135f8:	ldr	x0, [sp, #88]
   135fc:	bl	13810 <__sancov_default_options@@Base+0x3464>
   13600:	ldr	x0, [sp, #88]
   13604:	bl	12988 <__sancov_default_options@@Base+0x25dc>
   13608:	mov	x1, x0
   1360c:	ldr	x0, [sp, #32]
   13610:	cmp	x0, x1
   13614:	cset	w0, eq  // eq = none
   13618:	and	w0, w0, #0xff
   1361c:	cmp	w0, #0x0
   13620:	b.eq	13638 <__sancov_default_options@@Base+0x328c>  // b.none
   13624:	ldr	x0, [sp, #56]
   13628:	add	x0, x0, #0x8
   1362c:	ldr	x1, [sp, #88]
   13630:	bl	13660 <__sancov_default_options@@Base+0x32b4>
   13634:	str	xzr, [sp, #88]
   13638:	ldr	x0, [sp, #80]
   1363c:	add	x0, x0, #0x1
   13640:	str	x0, [sp, #80]
   13644:	b	1356c <__sancov_default_options@@Base+0x31c0>
   13648:	ldr	x0, [sp, #40]
   1364c:	ldr	x1, [sp, #88]
   13650:	str	x1, [x0]
   13654:	mov	w0, #0x1                   	// #1
   13658:	ldr	x30, [sp], #96
   1365c:	ret
   13660:	str	x30, [sp, #-32]!
   13664:	str	x0, [sp, #24]
   13668:	str	x1, [sp, #16]
   1366c:	ldr	x0, [sp, #24]
   13670:	bl	12f08 <__sancov_default_options@@Base+0x2b5c>
   13674:	and	w0, w0, #0xff
   13678:	cmp	w0, #0x0
   1367c:	b.eq	136b4 <__sancov_default_options@@Base+0x3308>  // b.none
   13680:	ldr	x0, [sp, #16]
   13684:	str	xzr, [x0]
   13688:	ldr	x0, [sp, #24]
   1368c:	ldr	x1, [sp, #16]
   13690:	str	x1, [x0, #16]
   13694:	ldr	x0, [sp, #24]
   13698:	ldr	x1, [x0, #16]
   1369c:	ldr	x0, [sp, #24]
   136a0:	str	x1, [x0, #8]
   136a4:	ldr	x0, [sp, #24]
   136a8:	mov	x1, #0x1                   	// #1
   136ac:	str	x1, [x0]
   136b0:	b	136ec <__sancov_default_options@@Base+0x3340>
   136b4:	ldr	x0, [sp, #16]
   136b8:	str	xzr, [x0]
   136bc:	ldr	x0, [sp, #24]
   136c0:	ldr	x0, [x0, #16]
   136c4:	ldr	x1, [sp, #16]
   136c8:	str	x1, [x0]
   136cc:	ldr	x0, [sp, #24]
   136d0:	ldr	x1, [sp, #16]
   136d4:	str	x1, [x0, #16]
   136d8:	ldr	x0, [sp, #24]
   136dc:	ldr	x0, [x0]
   136e0:	add	x1, x0, #0x1
   136e4:	ldr	x0, [sp, #24]
   136e8:	str	x1, [x0]
   136ec:	nop
   136f0:	ldr	x30, [sp], #32
   136f4:	ret
   136f8:	str	x30, [sp, #-96]!
   136fc:	str	x0, [sp, #40]
   13700:	str	x1, [sp, #32]
   13704:	strb	w2, [sp, #31]
   13708:	ldr	x0, [sp, #32]
   1370c:	str	x0, [sp, #88]
   13710:	mov	x0, #0x10000000            	// #268435456
   13714:	str	x0, [sp, #80]
   13718:	ldr	x1, [sp, #88]
   1371c:	ldr	x0, [sp, #80]
   13720:	cmp	x1, x0
   13724:	cset	w0, cs  // cs = hs, nlast
   13728:	and	w0, w0, #0xff
   1372c:	and	x0, x0, #0xff
   13730:	cmp	x0, #0x0
   13734:	b.eq	13758 <__sancov_default_options@@Base+0x33ac>  // b.none
   13738:	ldr	x4, [sp, #80]
   1373c:	ldr	x3, [sp, #88]
   13740:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   13744:	add	x2, x0, #0xed8
   13748:	mov	w1, #0x40                  	// #64
   1374c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   13750:	add	x0, x0, #0xef8
   13754:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   13758:	ldr	x0, [sp, #32]
   1375c:	lsr	x0, x0, #12
   13760:	mov	x1, x0
   13764:	ldr	x0, [sp, #40]
   13768:	bl	1384c <__sancov_default_options@@Base+0x34a0>
   1376c:	str	x0, [sp, #72]
   13770:	str	xzr, [sp, #64]
   13774:	ldr	x0, [sp, #32]
   13778:	and	x0, x0, #0xfff
   1377c:	ldr	x1, [sp, #72]
   13780:	add	x0, x1, x0
   13784:	ldrb	w0, [x0]
   13788:	and	x0, x0, #0xff
   1378c:	str	x0, [sp, #56]
   13790:	ldr	x1, [sp, #64]
   13794:	ldr	x0, [sp, #56]
   13798:	cmp	x1, x0
   1379c:	cset	w0, ne  // ne = any
   137a0:	and	w0, w0, #0xff
   137a4:	and	x0, x0, #0xff
   137a8:	cmp	x0, #0x0
   137ac:	b.eq	137d0 <__sancov_default_options@@Base+0x3424>  // b.none
   137b0:	ldr	x4, [sp, #56]
   137b4:	ldr	x3, [sp, #64]
   137b8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   137bc:	add	x2, x0, #0xd8
   137c0:	mov	w1, #0x42                  	// #66
   137c4:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x1970>
   137c8:	add	x0, x0, #0xef8
   137cc:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   137d0:	ldr	x0, [sp, #32]
   137d4:	and	x0, x0, #0xfff
   137d8:	ldr	x1, [sp, #72]
   137dc:	add	x0, x1, x0
   137e0:	ldrb	w1, [sp, #31]
   137e4:	strb	w1, [x0]
   137e8:	nop
   137ec:	ldr	x30, [sp], #96
   137f0:	ret
   137f4:	sub	sp, sp, #0x10
   137f8:	str	x0, [sp, #8]
   137fc:	ldr	x0, [sp, #8]
   13800:	str	xzr, [x0, #8]
   13804:	nop
   13808:	add	sp, sp, #0x10
   1380c:	ret
   13810:	sub	sp, sp, #0x10
   13814:	str	x0, [sp, #8]
   13818:	str	x1, [sp]
   1381c:	ldr	x0, [sp, #8]
   13820:	ldr	x0, [x0, #8]
   13824:	add	x2, x0, #0x1
   13828:	ldr	x1, [sp, #8]
   1382c:	str	x2, [x1, #8]
   13830:	ldr	x1, [sp, #8]
   13834:	add	x0, x0, #0x2
   13838:	ldr	x2, [sp]
   1383c:	str	x2, [x1, x0, lsl #3]
   13840:	nop
   13844:	add	sp, sp, #0x10
   13848:	ret
   1384c:	str	x30, [sp, #-64]!
   13850:	str	x0, [sp, #24]
   13854:	str	x1, [sp, #16]
   13858:	ldr	x1, [sp, #16]
   1385c:	ldr	x0, [sp, #24]
   13860:	bl	12cb4 <__sancov_default_options@@Base+0x2908>
   13864:	str	x0, [sp, #56]
   13868:	ldr	x0, [sp, #56]
   1386c:	cmp	x0, #0x0
   13870:	b.ne	138f8 <__sancov_default_options@@Base+0x354c>  // b.any
   13874:	ldr	x0, [sp, #24]
   13878:	add	x1, x0, #0x80, lsl #12
   1387c:	add	x0, sp, #0x28
   13880:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   13884:	ldr	x1, [sp, #16]
   13888:	ldr	x0, [sp, #24]
   1388c:	bl	12cb4 <__sancov_default_options@@Base+0x2908>
   13890:	str	x0, [sp, #56]
   13894:	ldr	x0, [sp, #56]
   13898:	cmp	x0, #0x0
   1389c:	cset	w0, eq  // eq = none
   138a0:	and	w0, w0, #0xff
   138a4:	cmp	w0, #0x0
   138a8:	b.eq	138f0 <__sancov_default_options@@Base+0x3544>  // b.none
   138ac:	mov	w2, #0x0                   	// #0
   138b0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   138b4:	add	x1, x0, #0x100
   138b8:	mov	x0, #0x1000                	// #4096
   138bc:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   138c0:	str	x0, [sp, #56]
   138c4:	ldr	x1, [sp, #56]
   138c8:	add	x0, sp, #0x30
   138cc:	mov	x2, #0x1000                	// #4096
   138d0:	bl	10e48 <__sancov_default_options@@Base+0xa9c>
   138d4:	ldr	x0, [sp, #16]
   138d8:	lsl	x0, x0, #3
   138dc:	ldr	x1, [sp, #24]
   138e0:	add	x0, x1, x0
   138e4:	ldr	x1, [sp, #56]
   138e8:	mov	w2, #0x8                   	// #8
   138ec:	bl	11104 <__sancov_default_options@@Base+0xd58>
   138f0:	add	x0, sp, #0x28
   138f4:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   138f8:	ldr	x0, [sp, #56]
   138fc:	ldr	x30, [sp], #64
   13900:	ret
   13904:	str	x30, [sp, #-16]!
   13908:	bl	69d0 <__errno_location@plt>
   1390c:	mov	x1, x0
   13910:	mov	w0, #0xc                   	// #12
   13914:	str	w0, [x1]
   13918:	nop
   1391c:	ldr	x30, [sp], #16
   13920:	ret
   13924:	str	x30, [sp, #-80]!
   13928:	str	x0, [sp, #40]
   1392c:	str	x1, [sp, #32]
   13930:	str	x2, [sp, #24]
   13934:	add	x3, sp, #0x30
   13938:	ldr	x2, [sp, #24]
   1393c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13940:	add	x1, x0, #0x1f0
   13944:	mov	x0, x3
   13948:	bl	13b90 <__sancov_default_options@@Base+0x37e4>
   1394c:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   13950:	ldr	x0, [x0, #4024]
   13954:	ldr	x0, [x0]
   13958:	ldr	x3, [sp, #32]
   1395c:	ldr	x2, [sp, #40]
   13960:	mov	x1, x0
   13964:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13968:	add	x0, x0, #0x200
   1396c:	bl	25a74 <OnPrint@@Base+0x454>
   13970:	add	x0, sp, #0x30
   13974:	bl	13bf4 <__sancov_default_options@@Base+0x3848>
   13978:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   1397c:	stp	x19, x30, [sp, #-64]!
   13980:	str	x0, [sp, #24]
   13984:	str	x1, [sp, #16]
   13988:	add	x3, sp, #0x20
   1398c:	ldr	x2, [sp, #16]
   13990:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13994:	add	x1, x0, #0x268
   13998:	mov	x0, x3
   1399c:	bl	13b90 <__sancov_default_options@@Base+0x37e4>
   139a0:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   139a4:	ldr	x0, [x0, #4024]
   139a8:	ldr	x19, [x0]
   139ac:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   139b0:	mov	x3, x0
   139b4:	ldr	x2, [sp, #24]
   139b8:	mov	x1, x19
   139bc:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   139c0:	add	x0, x0, #0x280
   139c4:	bl	25a74 <OnPrint@@Base+0x454>
   139c8:	add	x0, sp, #0x20
   139cc:	bl	13bf4 <__sancov_default_options@@Base+0x3848>
   139d0:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   139d4:	str	x30, [sp, #-64]!
   139d8:	str	x0, [sp, #24]
   139dc:	str	x1, [sp, #16]
   139e0:	add	x3, sp, #0x20
   139e4:	ldr	x2, [sp, #16]
   139e8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   139ec:	add	x1, x0, #0x300
   139f0:	mov	x0, x3
   139f4:	bl	13b90 <__sancov_default_options@@Base+0x37e4>
   139f8:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   139fc:	ldr	x0, [x0, #4024]
   13a00:	ldr	x0, [x0]
   13a04:	ldr	x2, [sp, #24]
   13a08:	mov	x1, x0
   13a0c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13a10:	add	x0, x0, #0x320
   13a14:	bl	25a74 <OnPrint@@Base+0x454>
   13a18:	add	x0, sp, #0x20
   13a1c:	bl	13bf4 <__sancov_default_options@@Base+0x3848>
   13a20:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   13a24:	str	x30, [sp, #-80]!
   13a28:	str	x0, [sp, #40]
   13a2c:	str	x1, [sp, #32]
   13a30:	str	x2, [sp, #24]
   13a34:	add	x3, sp, #0x30
   13a38:	ldr	x2, [sp, #24]
   13a3c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13a40:	add	x1, x0, #0x370
   13a44:	mov	x0, x3
   13a48:	bl	13b90 <__sancov_default_options@@Base+0x37e4>
   13a4c:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   13a50:	ldr	x0, [x0, #4024]
   13a54:	ldr	x0, [x0]
   13a58:	ldr	x3, [sp, #40]
   13a5c:	ldr	x2, [sp, #32]
   13a60:	mov	x1, x0
   13a64:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13a68:	add	x0, x0, #0x390
   13a6c:	bl	25a74 <OnPrint@@Base+0x454>
   13a70:	add	x0, sp, #0x30
   13a74:	bl	13bf4 <__sancov_default_options@@Base+0x3848>
   13a78:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   13a7c:	str	x30, [sp, #-64]!
   13a80:	str	x0, [sp, #24]
   13a84:	str	x1, [sp, #16]
   13a88:	add	x3, sp, #0x20
   13a8c:	ldr	x2, [sp, #16]
   13a90:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13a94:	add	x1, x0, #0x430
   13a98:	mov	x0, x3
   13a9c:	bl	13b90 <__sancov_default_options@@Base+0x37e4>
   13aa0:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   13aa4:	ldr	x0, [x0, #4024]
   13aa8:	ldr	x0, [x0]
   13aac:	mov	x3, #0x8                   	// #8
   13ab0:	ldr	x2, [sp, #24]
   13ab4:	mov	x1, x0
   13ab8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13abc:	add	x0, x0, #0x458
   13ac0:	bl	25a74 <OnPrint@@Base+0x454>
   13ac4:	add	x0, sp, #0x20
   13ac8:	bl	13bf4 <__sancov_default_options@@Base+0x3848>
   13acc:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   13ad0:	str	x30, [sp, #-80]!
   13ad4:	str	x0, [sp, #40]
   13ad8:	str	x1, [sp, #32]
   13adc:	str	x2, [sp, #24]
   13ae0:	add	x3, sp, #0x30
   13ae4:	ldr	x2, [sp, #24]
   13ae8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13aec:	add	x1, x0, #0x4e0
   13af0:	mov	x0, x3
   13af4:	bl	13b90 <__sancov_default_options@@Base+0x37e4>
   13af8:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   13afc:	ldr	x0, [x0, #4024]
   13b00:	ldr	x0, [x0]
   13b04:	ldr	x3, [sp, #32]
   13b08:	ldr	x2, [sp, #40]
   13b0c:	mov	x1, x0
   13b10:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13b14:	add	x0, x0, #0x4f8
   13b18:	bl	25a74 <OnPrint@@Base+0x454>
   13b1c:	add	x0, sp, #0x30
   13b20:	bl	13bf4 <__sancov_default_options@@Base+0x3848>
   13b24:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   13b28:	str	x30, [sp, #-64]!
   13b2c:	str	x0, [sp, #24]
   13b30:	str	x1, [sp, #16]
   13b34:	add	x3, sp, #0x20
   13b38:	ldr	x2, [sp, #16]
   13b3c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13b40:	add	x1, x0, #0x550
   13b44:	mov	x0, x3
   13b48:	bl	13b90 <__sancov_default_options@@Base+0x37e4>
   13b4c:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   13b50:	ldr	x0, [x0, #4024]
   13b54:	ldr	x0, [x0]
   13b58:	ldr	x2, [sp, #24]
   13b5c:	mov	x1, x0
   13b60:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13b64:	add	x0, x0, #0x560
   13b68:	bl	25a74 <OnPrint@@Base+0x454>
   13b6c:	add	x0, sp, #0x20
   13b70:	bl	13bf4 <__sancov_default_options@@Base+0x3848>
   13b74:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   13b78:	str	x30, [sp, #-32]!
   13b7c:	str	x0, [sp, #24]
   13b80:	ldr	x0, [sp, #24]
   13b84:	bl	920c <__asan_backtrace_open@plt+0x259c>
   13b88:	ldr	x30, [sp], #32
   13b8c:	ret
   13b90:	str	x30, [sp, #-48]!
   13b94:	str	x0, [sp, #40]
   13b98:	str	x1, [sp, #32]
   13b9c:	str	x2, [sp, #24]
   13ba0:	ldr	x0, [sp, #40]
   13ba4:	bl	29cec <__sanitizer_get_module_and_offset_for_pc@@Base+0xa64>
   13ba8:	ldr	x0, [sp, #40]
   13bac:	ldr	x1, [sp, #32]
   13bb0:	str	x1, [x0, #8]
   13bb4:	ldr	x0, [sp, #40]
   13bb8:	ldr	x1, [sp, #24]
   13bbc:	str	x1, [x0, #16]
   13bc0:	ldr	x0, [sp, #40]
   13bc4:	add	x0, x0, #0x18
   13bc8:	bl	9134 <__asan_backtrace_open@plt+0x24c4>
   13bcc:	ldr	x0, [sp, #40]
   13bd0:	add	x0, x0, #0x18
   13bd4:	bl	13b78 <__sancov_default_options@@Base+0x37cc>
   13bd8:	mov	x1, x0
   13bdc:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13be0:	add	x0, x0, #0x1e8
   13be4:	bl	259c8 <OnPrint@@Base+0x3a8>
   13be8:	nop
   13bec:	ldr	x30, [sp], #48
   13bf0:	ret
   13bf4:	str	x30, [sp, #-32]!
   13bf8:	str	x0, [sp, #24]
   13bfc:	ldr	x0, [sp, #24]
   13c00:	add	x0, x0, #0x18
   13c04:	bl	918c <__asan_backtrace_open@plt+0x251c>
   13c08:	mov	x1, x0
   13c0c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13c10:	add	x0, x0, #0x1e8
   13c14:	bl	259c8 <OnPrint@@Base+0x3a8>
   13c18:	ldr	x0, [sp, #24]
   13c1c:	ldr	x0, [x0, #16]
   13c20:	bl	28b1c <OnPrint@@Base+0x34fc>
   13c24:	bl	10d5c <__sancov_default_options@@Base+0x9b0>
   13c28:	ldr	x0, [sp, #24]
   13c2c:	ldr	x3, [x0, #8]
   13c30:	ldr	x0, [sp, #24]
   13c34:	ldr	x0, [x0, #16]
   13c38:	mov	x2, #0x0                   	// #0
   13c3c:	mov	x1, x0
   13c40:	mov	x0, x3
   13c44:	bl	29444 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bc>
   13c48:	ldr	x0, [sp, #24]
   13c4c:	bl	29d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0xb14>
   13c50:	nop
   13c54:	ldr	x30, [sp], #32
   13c58:	ret
   13c5c:	str	x30, [sp, #-64]!
   13c60:	str	x0, [sp, #40]
   13c64:	str	x1, [sp, #32]
   13c68:	str	x2, [sp, #24]
   13c6c:	str	w3, [sp, #20]
   13c70:	strb	w4, [sp, #19]
   13c74:	ldrb	w0, [sp, #19]
   13c78:	cmp	w0, #0x0
   13c7c:	b.ne	13c94 <__sancov_default_options@@Base+0x38e8>  // b.any
   13c80:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   13c84:	add	x0, x0, #0xb38
   13c88:	ldr	w0, [x0]
   13c8c:	cmp	w0, #0x0
   13c90:	b.eq	13ca4 <__sancov_default_options@@Base+0x38f8>  // b.none
   13c94:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13c98:	add	x0, x0, #0x690
   13c9c:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   13ca0:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   13ca4:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   13ca8:	add	x0, x0, #0xb38
   13cac:	ldr	w0, [x0]
   13cb0:	add	w1, w0, #0x1
   13cb4:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   13cb8:	add	x0, x0, #0xb38
   13cbc:	str	w1, [x0]
   13cc0:	adrp	x0, 77000 <_Unwind_Backtrace@GCC_3.3>
   13cc4:	add	x0, x0, #0x4d8
   13cc8:	ldr	x0, [x0]
   13ccc:	ldr	w6, [sp, #20]
   13cd0:	ldr	x5, [sp, #32]
   13cd4:	ldr	x4, [sp, #40]
   13cd8:	ldr	x3, [sp, #40]
   13cdc:	ldr	x2, [sp, #24]
   13ce0:	mov	x1, x0
   13ce4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13ce8:	add	x0, x0, #0x6a8
   13cec:	bl	25a74 <OnPrint@@Base+0x454>
   13cf0:	bl	22d3c <__sanitizer_set_report_fd@@Base+0x8b90>
   13cf4:	str	xzr, [sp, #56]
   13cf8:	str	xzr, [sp, #48]
   13cfc:	ldr	x1, [sp, #56]
   13d00:	ldr	x0, [sp, #48]
   13d04:	cmp	x1, x0
   13d08:	cset	w0, eq  // eq = none
   13d0c:	and	w0, w0, #0xff
   13d10:	and	x0, x0, #0xff
   13d14:	cmp	x0, #0x0
   13d18:	b.eq	13d3c <__sancov_default_options@@Base+0x3990>  // b.none
   13d1c:	ldr	x4, [sp, #48]
   13d20:	ldr	x3, [sp, #56]
   13d24:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13d28:	add	x2, x0, #0x6f0
   13d2c:	mov	w1, #0x35                  	// #53
   13d30:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13d34:	add	x0, x0, #0x718
   13d38:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   13d3c:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   13d40:	str	x30, [sp, #-48]!
   13d44:	str	x0, [sp, #24]
   13d48:	str	x1, [sp, #16]
   13d4c:	ldr	x0, [sp, #24]
   13d50:	cmp	x0, #0x0
   13d54:	b.ne	13d60 <__sancov_default_options@@Base+0x39b4>  // b.any
   13d58:	mov	x0, #0x0                   	// #0
   13d5c:	b	13de4 <__sancov_default_options@@Base+0x3a38>
   13d60:	ldr	x0, [sp, #16]
   13d64:	cmp	x0, #0x0
   13d68:	b.ne	13d74 <__sancov_default_options@@Base+0x39c8>  // b.any
   13d6c:	ldr	x0, [sp, #24]
   13d70:	b	13de4 <__sancov_default_options@@Base+0x3a38>
   13d74:	ldr	x0, [sp, #24]
   13d78:	str	x0, [sp, #40]
   13d7c:	ldr	x1, [sp, #16]
   13d80:	ldr	x0, [sp, #24]
   13d84:	bl	1d060 <__sanitizer_set_report_fd@@Base+0x2eb4>
   13d88:	str	x0, [sp, #32]
   13d8c:	ldr	x0, [sp, #32]
   13d90:	cmp	x0, #0x0
   13d94:	b.eq	13db0 <__sancov_default_options@@Base+0x3a04>  // b.none
   13d98:	ldr	x0, [sp, #16]
   13d9c:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   13da0:	mov	x1, x0
   13da4:	ldr	x0, [sp, #32]
   13da8:	add	x0, x0, x1
   13dac:	str	x0, [sp, #40]
   13db0:	ldr	x0, [sp, #40]
   13db4:	ldrb	w0, [x0]
   13db8:	cmp	w0, #0x2e
   13dbc:	b.ne	13de0 <__sancov_default_options@@Base+0x3a34>  // b.any
   13dc0:	ldr	x0, [sp, #40]
   13dc4:	add	x0, x0, #0x1
   13dc8:	ldrb	w0, [x0]
   13dcc:	cmp	w0, #0x2f
   13dd0:	b.ne	13de0 <__sancov_default_options@@Base+0x3a34>  // b.any
   13dd4:	ldr	x0, [sp, #40]
   13dd8:	add	x0, x0, #0x2
   13ddc:	str	x0, [sp, #40]
   13de0:	ldr	x0, [sp, #40]
   13de4:	ldr	x30, [sp], #48
   13de8:	ret
   13dec:	str	x30, [sp, #-48]!
   13df0:	str	x0, [sp, #24]
   13df4:	ldr	x0, [sp, #24]
   13df8:	cmp	x0, #0x0
   13dfc:	b.ne	13e08 <__sancov_default_options@@Base+0x3a5c>  // b.any
   13e00:	mov	x0, #0x0                   	// #0
   13e04:	b	13e34 <__sancov_default_options@@Base+0x3a88>
   13e08:	mov	w1, #0x2f                  	// #47
   13e0c:	ldr	x0, [sp, #24]
   13e10:	bl	1cca4 <__sanitizer_set_report_fd@@Base+0x2af8>
   13e14:	str	x0, [sp, #40]
   13e18:	ldr	x0, [sp, #40]
   13e1c:	cmp	x0, #0x0
   13e20:	b.eq	13e30 <__sancov_default_options@@Base+0x3a84>  // b.none
   13e24:	ldr	x0, [sp, #40]
   13e28:	add	x0, x0, #0x1
   13e2c:	b	13e34 <__sancov_default_options@@Base+0x3a88>
   13e30:	ldr	x0, [sp, #24]
   13e34:	ldr	x30, [sp], #48
   13e38:	ret
   13e3c:	str	x30, [sp, #-64]!
   13e40:	str	x0, [sp, #24]
   13e44:	str	x1, [sp, #16]
   13e48:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   13e4c:	ldrb	w0, [x0, #60]
   13e50:	eor	w0, w0, #0x1
   13e54:	and	w0, w0, #0xff
   13e58:	cmp	w0, #0x0
   13e5c:	b.ne	13ec0 <__sancov_default_options@@Base+0x3b14>  // b.any
   13e60:	add	x0, sp, #0x20
   13e64:	mov	x1, #0x400                 	// #1024
   13e68:	bl	89fc <__asan_backtrace_open@plt+0x1d8c>
   13e6c:	ldr	x0, [sp, #16]
   13e70:	cmp	x0, #0x0
   13e74:	b.eq	13e80 <__sancov_default_options@@Base+0x3ad4>  // b.none
   13e78:	ldr	x0, [sp, #16]
   13e7c:	b	13e8c <__sancov_default_options@@Base+0x3ae0>
   13e80:	adrp	x0, 77000 <_Unwind_Backtrace@GCC_3.3>
   13e84:	add	x0, x0, #0x4d8
   13e88:	ldr	x0, [x0]
   13e8c:	add	x4, sp, #0x20
   13e90:	ldr	x3, [sp, #24]
   13e94:	mov	x2, x0
   13e98:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13e9c:	add	x1, x0, #0x758
   13ea0:	mov	x0, x4
   13ea4:	bl	25bdc <OnPrint@@Base+0x5bc>
   13ea8:	add	x0, sp, #0x20
   13eac:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   13eb0:	bl	65a0 <__sanitizer_report_error_summary@plt>
   13eb4:	add	x0, sp, #0x20
   13eb8:	bl	9274 <__asan_backtrace_open@plt+0x2604>
   13ebc:	b	13ec4 <__sancov_default_options@@Base+0x3b18>
   13ec0:	nop
   13ec4:	ldr	x30, [sp], #64
   13ec8:	ret
   13ecc:	str	x30, [sp, #-64]!
   13ed0:	str	x0, [sp, #24]
   13ed4:	ldr	x0, [sp, #24]
   13ed8:	cmp	x0, #0x0
   13edc:	b.eq	13ff0 <__sancov_default_options@@Base+0x3c44>  // b.none
   13ee0:	ldr	x0, [sp, #24]
   13ee4:	str	x0, [sp, #56]
   13ee8:	ldr	x0, [sp, #24]
   13eec:	str	x0, [sp, #48]
   13ef0:	ldr	x0, [sp, #56]
   13ef4:	ldrb	w0, [x0]
   13ef8:	cmp	w0, #0x0
   13efc:	b.eq	13fe4 <__sancov_default_options@@Base+0x3c38>  // b.none
   13f00:	ldr	x0, [sp, #56]
   13f04:	str	x0, [sp, #40]
   13f08:	ldr	x0, [sp, #48]
   13f0c:	str	x0, [sp, #32]
   13f10:	ldr	x1, [sp, #40]
   13f14:	ldr	x0, [sp, #32]
   13f18:	cmp	x1, x0
   13f1c:	cset	w0, cc  // cc = lo, ul, last
   13f20:	and	w0, w0, #0xff
   13f24:	and	x0, x0, #0xff
   13f28:	cmp	x0, #0x0
   13f2c:	b.eq	13f50 <__sancov_default_options@@Base+0x3ba4>  // b.none
   13f30:	ldr	x4, [sp, #32]
   13f34:	ldr	x3, [sp, #40]
   13f38:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13f3c:	add	x2, x0, #0x768
   13f40:	mov	w1, #0x68                  	// #104
   13f44:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   13f48:	add	x0, x0, #0x718
   13f4c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   13f50:	ldr	x0, [sp, #56]
   13f54:	ldrb	w0, [x0]
   13f58:	cmp	w0, #0x1b
   13f5c:	b.ne	13fa4 <__sancov_default_options@@Base+0x3bf8>  // b.any
   13f60:	ldr	x0, [sp, #56]
   13f64:	add	x0, x0, #0x1
   13f68:	ldrb	w0, [x0]
   13f6c:	cmp	w0, #0x5b
   13f70:	b.ne	13fa4 <__sancov_default_options@@Base+0x3bf8>  // b.any
   13f74:	mov	w1, #0x6d                  	// #109
   13f78:	ldr	x0, [sp, #56]
   13f7c:	bl	1cc58 <__sanitizer_set_report_fd@@Base+0x2aac>
   13f80:	str	x0, [sp, #56]
   13f84:	ldr	x0, [sp, #56]
   13f88:	ldrb	w0, [x0]
   13f8c:	cmp	w0, #0x0
   13f90:	b.eq	13fe0 <__sancov_default_options@@Base+0x3c34>  // b.none
   13f94:	ldr	x0, [sp, #56]
   13f98:	add	x0, x0, #0x1
   13f9c:	str	x0, [sp, #56]
   13fa0:	b	13fdc <__sancov_default_options@@Base+0x3c30>
   13fa4:	ldr	x1, [sp, #56]
   13fa8:	ldr	x0, [sp, #48]
   13fac:	cmp	x1, x0
   13fb0:	b.eq	13fc4 <__sancov_default_options@@Base+0x3c18>  // b.none
   13fb4:	ldr	x0, [sp, #56]
   13fb8:	ldrb	w1, [x0]
   13fbc:	ldr	x0, [sp, #48]
   13fc0:	strb	w1, [x0]
   13fc4:	ldr	x0, [sp, #48]
   13fc8:	add	x0, x0, #0x1
   13fcc:	str	x0, [sp, #48]
   13fd0:	ldr	x0, [sp, #56]
   13fd4:	add	x0, x0, #0x1
   13fd8:	str	x0, [sp, #56]
   13fdc:	b	13ef0 <__sancov_default_options@@Base+0x3b44>
   13fe0:	nop
   13fe4:	ldr	x0, [sp, #48]
   13fe8:	strb	wzr, [x0]
   13fec:	b	13ff4 <__sancov_default_options@@Base+0x3c48>
   13ff0:	nop
   13ff4:	ldr	x30, [sp], #64
   13ff8:	ret
   13ffc:	str	x30, [sp, #-48]!
   14000:	str	x0, [sp, #40]
   14004:	str	x1, [sp, #32]
   14008:	str	x2, [sp, #24]
   1400c:	ldr	x0, [sp, #40]
   14010:	bl	140a4 <__sancov_default_options@@Base+0x3cf8>
   14014:	ldr	x0, [sp, #32]
   14018:	bl	1ca68 <__sanitizer_set_report_fd@@Base+0x28bc>
   1401c:	mov	x1, x0
   14020:	ldr	x0, [sp, #40]
   14024:	str	x1, [x0]
   14028:	ldr	x0, [sp, #40]
   1402c:	ldr	x1, [sp, #24]
   14030:	str	x1, [x0, #8]
   14034:	nop
   14038:	ldr	x30, [sp], #48
   1403c:	ret
   14040:	str	x30, [sp, #-64]!
   14044:	str	x0, [sp, #56]
   14048:	str	x1, [sp, #48]
   1404c:	str	x2, [sp, #40]
   14050:	str	w3, [sp, #36]
   14054:	str	x4, [sp, #24]
   14058:	strb	w5, [sp, #35]
   1405c:	ldr	x2, [sp, #40]
   14060:	ldr	x1, [sp, #48]
   14064:	ldr	x0, [sp, #56]
   14068:	bl	13ffc <__sancov_default_options@@Base+0x3c50>
   1406c:	ldr	x0, [sp, #56]
   14070:	ldr	w1, [sp, #36]
   14074:	str	w1, [x0, #24]
   14078:	ldr	x0, [sp, #56]
   1407c:	add	x0, x0, #0x1c
   14080:	mov	x2, #0x10                  	// #16
   14084:	ldr	x1, [sp, #24]
   14088:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   1408c:	ldr	x0, [sp, #56]
   14090:	ldrb	w1, [sp, #35]
   14094:	strb	w1, [x0, #44]
   14098:	nop
   1409c:	ldr	x30, [sp], #64
   140a0:	ret
   140a4:	str	x30, [sp, #-48]!
   140a8:	str	x0, [sp, #24]
   140ac:	ldr	x0, [sp, #24]
   140b0:	ldr	x0, [x0]
   140b4:	mov	x1, #0x0                   	// #0
   140b8:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   140bc:	ldr	x0, [sp, #24]
   140c0:	str	xzr, [x0, #8]
   140c4:	ldr	x0, [sp, #24]
   140c8:	str	xzr, [x0, #16]
   140cc:	ldr	x0, [sp, #24]
   140d0:	str	xzr, [x0]
   140d4:	ldr	x0, [sp, #24]
   140d8:	str	wzr, [x0, #24]
   140dc:	ldr	x0, [sp, #24]
   140e0:	add	x0, x0, #0x1c
   140e4:	mov	x2, #0x10                  	// #16
   140e8:	mov	w1, #0x0                   	// #0
   140ec:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   140f0:	ldr	x0, [sp, #24]
   140f4:	strb	wzr, [x0, #44]
   140f8:	ldr	x0, [sp, #24]
   140fc:	add	x0, x0, #0x30
   14100:	bl	14a40 <__sanitizer_install_malloc_and_free_hooks@@Base+0xcc>
   14104:	and	w0, w0, #0xff
   14108:	eor	w0, w0, #0x1
   1410c:	and	w0, w0, #0xff
   14110:	cmp	w0, #0x0
   14114:	b.eq	14144 <__sancov_default_options@@Base+0x3d98>  // b.none
   14118:	ldr	x0, [sp, #24]
   1411c:	add	x0, x0, #0x30
   14120:	bl	14a64 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf0>
   14124:	str	x0, [sp, #40]
   14128:	ldr	x0, [sp, #24]
   1412c:	add	x0, x0, #0x30
   14130:	bl	14a7c <__sanitizer_install_malloc_and_free_hooks@@Base+0x108>
   14134:	mov	x1, #0x0                   	// #0
   14138:	ldr	x0, [sp, #40]
   1413c:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   14140:	b	140f8 <__sancov_default_options@@Base+0x3d4c>
   14144:	nop
   14148:	ldr	x30, [sp], #48
   1414c:	ret
   14150:	stp	x19, x30, [sp, #-80]!
   14154:	str	x0, [sp, #56]
   14158:	str	x1, [sp, #48]
   1415c:	str	x2, [sp, #40]
   14160:	strb	w3, [sp, #39]
   14164:	strb	w4, [sp, #38]
   14168:	str	x5, [sp, #24]
   1416c:	mov	x2, #0x0                   	// #0
   14170:	mov	x1, #0x0                   	// #0
   14174:	mov	x0, #0x30                  	// #48
   14178:	bl	107a8 <__sancov_default_options@@Base+0x3fc>
   1417c:	str	x0, [sp, #72]
   14180:	ldr	x0, [sp, #72]
   14184:	mov	x1, x0
   14188:	mov	x0, #0x30                  	// #48
   1418c:	bl	911c <__asan_backtrace_open@plt+0x24ac>
   14190:	mov	x19, x0
   14194:	ldr	x5, [sp, #24]
   14198:	ldrb	w4, [sp, #38]
   1419c:	ldrb	w3, [sp, #39]
   141a0:	ldr	x2, [sp, #40]
   141a4:	ldr	x1, [sp, #48]
   141a8:	mov	x0, x19
   141ac:	bl	14994 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20>
   141b0:	str	x19, [sp, #64]
   141b4:	ldr	x0, [sp, #56]
   141b8:	add	x0, x0, #0x30
   141bc:	ldr	x1, [sp, #64]
   141c0:	bl	14b30 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bc>
   141c4:	ldrb	w0, [sp, #39]
   141c8:	cmp	w0, #0x0
   141cc:	b.eq	141f0 <__sancov_default_options@@Base+0x3e44>  // b.none
   141d0:	ldr	x0, [sp, #56]
   141d4:	ldr	x0, [x0, #16]
   141d8:	ldr	x1, [sp, #40]
   141dc:	cmp	x1, x0
   141e0:	b.ls	141f0 <__sancov_default_options@@Base+0x3e44>  // b.plast
   141e4:	ldr	x0, [sp, #56]
   141e8:	ldr	x1, [sp, #40]
   141ec:	str	x1, [x0, #16]
   141f0:	nop
   141f4:	ldp	x19, x30, [sp], #80
   141f8:	ret
   141fc:	str	x30, [sp, #-64]!
   14200:	str	x0, [sp, #24]
   14204:	str	x1, [sp, #16]
   14208:	ldr	x0, [sp, #24]
   1420c:	bl	14a28 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb4>
   14210:	str	x0, [sp, #56]
   14214:	ldr	x0, [sp, #56]
   14218:	bl	14bc8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x254>
   1421c:	str	x0, [sp, #40]
   14220:	ldr	x0, [sp, #56]
   14224:	bl	14bec <__sanitizer_install_malloc_and_free_hooks@@Base+0x278>
   14228:	str	x0, [sp, #32]
   1422c:	add	x0, sp, #0x28
   14230:	ldr	x1, [sp, #32]
   14234:	bl	14c0c <__sanitizer_install_malloc_and_free_hooks@@Base+0x298>
   14238:	and	w0, w0, #0xff
   1423c:	cmp	w0, #0x0
   14240:	b.eq	1428c <__sancov_default_options@@Base+0x3ee0>  // b.none
   14244:	add	x0, sp, #0x28
   14248:	bl	14c60 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2ec>
   1424c:	str	x0, [sp, #48]
   14250:	ldr	x0, [sp, #48]
   14254:	ldr	x0, [x0, #8]
   14258:	ldr	x1, [sp, #16]
   1425c:	cmp	x1, x0
   14260:	b.cc	14280 <__sancov_default_options@@Base+0x3ed4>  // b.lo, b.ul, b.last
   14264:	ldr	x0, [sp, #48]
   14268:	ldr	x0, [x0, #16]
   1426c:	ldr	x1, [sp, #16]
   14270:	cmp	x1, x0
   14274:	b.cs	14280 <__sancov_default_options@@Base+0x3ed4>  // b.hs, b.nlast
   14278:	mov	w0, #0x1                   	// #1
   1427c:	b	14290 <__sancov_default_options@@Base+0x3ee4>
   14280:	add	x0, sp, #0x28
   14284:	bl	14c38 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2c4>
   14288:	b	1422c <__sancov_default_options@@Base+0x3e80>
   1428c:	mov	w0, #0x0                   	// #0
   14290:	ldr	x30, [sp], #64
   14294:	ret
   14298:	stp	x19, x30, [sp, #-48]!
   1429c:	str	x0, [sp, #24]
   142a0:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   142a4:	ldr	x0, [x0, #128]
   142a8:	cmp	x0, #0x0
   142ac:	cset	w0, eq  // eq = none
   142b0:	and	w0, w0, #0xff
   142b4:	cmp	w0, #0x0
   142b8:	b.ne	14324 <__sancov_default_options@@Base+0x3f78>  // b.any
   142bc:	mov	w2, #0x1                   	// #1
   142c0:	ldr	x1, [sp, #24]
   142c4:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   142c8:	add	x0, x0, #0xb40
   142cc:	bl	14c78 <__sanitizer_install_malloc_and_free_hooks@@Base+0x304>
   142d0:	mov	x1, x0
   142d4:	ldr	x0, [sp, #24]
   142d8:	add	x0, x0, x1
   142dc:	str	x0, [sp, #40]
   142e0:	ldr	x0, [sp, #40]
   142e4:	lsr	x19, x0, #20
   142e8:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   142ec:	ldr	x0, [x0, #128]
   142f0:	cmp	x19, x0
   142f4:	cset	w0, cs  // cs = hs, nlast
   142f8:	and	w0, w0, #0xff
   142fc:	and	x0, x0, #0xff
   14300:	cmp	x0, #0x0
   14304:	cset	w0, ne  // ne = any
   14308:	and	w0, w0, #0xff
   1430c:	cmp	w0, #0x0
   14310:	b.eq	14328 <__sancov_default_options@@Base+0x3f7c>  // b.none
   14314:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   14318:	add	x0, x0, #0x778
   1431c:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   14320:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   14324:	nop
   14328:	ldp	x19, x30, [sp], #48
   1432c:	ret
   14330:	str	x30, [sp, #-32]!
   14334:	str	x0, [sp, #24]
   14338:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   1433c:	ldr	x0, [x0, #128]
   14340:	cmp	x0, #0x0
   14344:	cset	w0, eq  // eq = none
   14348:	and	w0, w0, #0xff
   1434c:	cmp	w0, #0x0
   14350:	b.ne	1436c <__sancov_default_options@@Base+0x3fc0>  // b.any
   14354:	mov	w2, #0x1                   	// #1
   14358:	ldr	x1, [sp, #24]
   1435c:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   14360:	add	x0, x0, #0xb40
   14364:	bl	14cb0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x33c>
   14368:	b	14370 <__sancov_default_options@@Base+0x3fc4>
   1436c:	nop
   14370:	ldr	x30, [sp], #32
   14374:	ret
   14378:	str	x30, [sp, #-80]!
   1437c:	str	x0, [sp, #24]
   14380:	str	x1, [sp, #16]
   14384:	ldr	x0, [sp, #16]
   14388:	cmp	x0, #0x0
   1438c:	b.eq	143a0 <__sancov_default_options@@Base+0x3ff4>  // b.none
   14390:	ldr	x0, [sp, #16]
   14394:	ldrb	w0, [x0]
   14398:	cmp	w0, #0x0
   1439c:	b.ne	143a8 <__sancov_default_options@@Base+0x3ffc>  // b.any
   143a0:	mov	w0, #0x0                   	// #0
   143a4:	b	14590 <__sancov_default_options@@Base+0x41e4>
   143a8:	strb	wzr, [sp, #79]
   143ac:	ldr	x0, [sp, #24]
   143b0:	cmp	x0, #0x0
   143b4:	b.eq	143dc <__sancov_default_options@@Base+0x4030>  // b.none
   143b8:	ldr	x0, [sp, #24]
   143bc:	ldrb	w0, [x0]
   143c0:	cmp	w0, #0x5e
   143c4:	b.ne	143dc <__sancov_default_options@@Base+0x4030>  // b.any
   143c8:	mov	w0, #0x1                   	// #1
   143cc:	strb	w0, [sp, #79]
   143d0:	ldr	x0, [sp, #24]
   143d4:	add	x0, x0, #0x1
   143d8:	str	x0, [sp, #24]
   143dc:	strb	wzr, [sp, #78]
   143e0:	ldr	x0, [sp, #24]
   143e4:	cmp	x0, #0x0
   143e8:	b.eq	1458c <__sancov_default_options@@Base+0x41e0>  // b.none
   143ec:	ldr	x0, [sp, #24]
   143f0:	ldrb	w0, [x0]
   143f4:	cmp	w0, #0x0
   143f8:	b.eq	1458c <__sancov_default_options@@Base+0x41e0>  // b.none
   143fc:	ldr	x0, [sp, #24]
   14400:	ldrb	w0, [x0]
   14404:	cmp	w0, #0x2a
   14408:	b.ne	14428 <__sancov_default_options@@Base+0x407c>  // b.any
   1440c:	ldr	x0, [sp, #24]
   14410:	add	x0, x0, #0x1
   14414:	str	x0, [sp, #24]
   14418:	strb	wzr, [sp, #79]
   1441c:	mov	w0, #0x1                   	// #1
   14420:	strb	w0, [sp, #78]
   14424:	b	14588 <__sancov_default_options@@Base+0x41dc>
   14428:	ldr	x0, [sp, #24]
   1442c:	ldrb	w0, [x0]
   14430:	cmp	w0, #0x24
   14434:	b.ne	14464 <__sancov_default_options@@Base+0x40b8>  // b.any
   14438:	ldr	x0, [sp, #16]
   1443c:	ldrb	w0, [x0]
   14440:	cmp	w0, #0x0
   14444:	b.eq	14454 <__sancov_default_options@@Base+0x40a8>  // b.none
   14448:	ldrb	w0, [sp, #78]
   1444c:	cmp	w0, #0x0
   14450:	b.eq	1445c <__sancov_default_options@@Base+0x40b0>  // b.none
   14454:	mov	w0, #0x1                   	// #1
   14458:	b	14590 <__sancov_default_options@@Base+0x41e4>
   1445c:	mov	w0, #0x0                   	// #0
   14460:	b	14590 <__sancov_default_options@@Base+0x41e4>
   14464:	ldr	x0, [sp, #16]
   14468:	ldrb	w0, [x0]
   1446c:	cmp	w0, #0x0
   14470:	b.ne	1447c <__sancov_default_options@@Base+0x40d0>  // b.any
   14474:	mov	w0, #0x0                   	// #0
   14478:	b	14590 <__sancov_default_options@@Base+0x41e4>
   1447c:	mov	w1, #0x2a                  	// #42
   14480:	ldr	x0, [sp, #24]
   14484:	bl	1cbfc <__sanitizer_set_report_fd@@Base+0x2a50>
   14488:	str	x0, [sp, #64]
   1448c:	mov	w1, #0x24                  	// #36
   14490:	ldr	x0, [sp, #24]
   14494:	bl	1cbfc <__sanitizer_set_report_fd@@Base+0x2a50>
   14498:	str	x0, [sp, #56]
   1449c:	ldr	x0, [sp, #64]
   144a0:	cmp	x0, #0x0
   144a4:	b.eq	144c4 <__sancov_default_options@@Base+0x4118>  // b.none
   144a8:	ldr	x0, [sp, #56]
   144ac:	cmp	x0, #0x0
   144b0:	b.eq	144cc <__sancov_default_options@@Base+0x4120>  // b.none
   144b4:	ldr	x1, [sp, #56]
   144b8:	ldr	x0, [sp, #64]
   144bc:	cmp	x1, x0
   144c0:	b.cs	144cc <__sancov_default_options@@Base+0x4120>  // b.hs, b.nlast
   144c4:	ldr	x0, [sp, #56]
   144c8:	str	x0, [sp, #64]
   144cc:	ldr	x0, [sp, #64]
   144d0:	cmp	x0, #0x0
   144d4:	b.eq	144e0 <__sancov_default_options@@Base+0x4134>  // b.none
   144d8:	ldr	x0, [sp, #64]
   144dc:	strb	wzr, [x0]
   144e0:	ldr	x0, [sp, #16]
   144e4:	str	x0, [sp, #48]
   144e8:	ldr	x1, [sp, #24]
   144ec:	ldr	x0, [sp, #16]
   144f0:	bl	1d060 <__sanitizer_set_report_fd@@Base+0x2eb4>
   144f4:	str	x0, [sp, #40]
   144f8:	ldr	x0, [sp, #24]
   144fc:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   14500:	mov	x1, x0
   14504:	ldr	x0, [sp, #40]
   14508:	add	x0, x0, x1
   1450c:	str	x0, [sp, #16]
   14510:	ldr	x0, [sp, #64]
   14514:	str	x0, [sp, #24]
   14518:	ldr	x0, [sp, #64]
   1451c:	cmp	x0, #0x0
   14520:	b.eq	14548 <__sancov_default_options@@Base+0x419c>  // b.none
   14524:	ldr	x1, [sp, #64]
   14528:	ldr	x0, [sp, #56]
   1452c:	cmp	x1, x0
   14530:	b.ne	1453c <__sancov_default_options@@Base+0x4190>  // b.any
   14534:	mov	w0, #0x24                  	// #36
   14538:	b	14540 <__sancov_default_options@@Base+0x4194>
   1453c:	mov	w0, #0x2a                  	// #42
   14540:	ldr	x1, [sp, #64]
   14544:	strb	w0, [x1]
   14548:	ldr	x0, [sp, #40]
   1454c:	cmp	x0, #0x0
   14550:	b.ne	1455c <__sancov_default_options@@Base+0x41b0>  // b.any
   14554:	mov	w0, #0x0                   	// #0
   14558:	b	14590 <__sancov_default_options@@Base+0x41e4>
   1455c:	ldrb	w0, [sp, #79]
   14560:	cmp	w0, #0x0
   14564:	b.eq	14580 <__sancov_default_options@@Base+0x41d4>  // b.none
   14568:	ldr	x1, [sp, #40]
   1456c:	ldr	x0, [sp, #48]
   14570:	cmp	x1, x0
   14574:	b.eq	14580 <__sancov_default_options@@Base+0x41d4>  // b.none
   14578:	mov	w0, #0x0                   	// #0
   1457c:	b	14590 <__sancov_default_options@@Base+0x41e4>
   14580:	strb	wzr, [sp, #79]
   14584:	strb	wzr, [sp, #78]
   14588:	b	143e0 <__sancov_default_options@@Base+0x4034>
   1458c:	mov	w0, #0x1                   	// #1
   14590:	ldr	x30, [sp], #80
   14594:	ret
   14598:	adrp	x0, 1c9000 <__ubsan_vptr_type_cache@@Base+0x14f1b8>
   1459c:	add	x0, x0, #0xb48
   145a0:	ret
   145a4:	str	x30, [sp, #-48]!
   145a8:	str	x0, [sp, #24]
   145ac:	str	x1, [sp, #16]
   145b0:	ldr	x1, [sp, #16]
   145b4:	ldr	x0, [sp, #24]
   145b8:	bl	1fb48 <__sanitizer_set_report_fd@@Base+0x599c>
   145bc:	ldr	x0, [sp, #24]
   145c0:	bl	13dec <__sancov_default_options@@Base+0x3a40>
   145c4:	str	x0, [sp, #40]
   145c8:	ldr	x0, [sp, #40]
   145cc:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   145d0:	str	x0, [sp, #32]
   145d4:	ldr	x1, [sp, #40]
   145d8:	ldr	x0, [sp, #24]
   145dc:	cmp	x1, x0
   145e0:	b.eq	14604 <__sancov_default_options@@Base+0x4258>  // b.none
   145e4:	ldr	x2, [sp, #32]
   145e8:	ldr	x1, [sp, #40]
   145ec:	ldr	x0, [sp, #24]
   145f0:	bl	1c78c <__sanitizer_set_report_fd@@Base+0x25e0>
   145f4:	ldr	x1, [sp, #24]
   145f8:	ldr	x0, [sp, #32]
   145fc:	add	x0, x1, x0
   14600:	strb	wzr, [x0]
   14604:	ldr	x0, [sp, #32]
   14608:	ldr	x30, [sp], #48
   1460c:	ret
   14610:	str	x30, [sp, #-16]!
   14614:	mov	x1, #0x1000                	// #4096
   14618:	adrp	x0, 1c9000 <__ubsan_vptr_type_cache@@Base+0x14f1b8>
   1461c:	add	x0, x0, #0xb48
   14620:	bl	145a4 <__sancov_default_options@@Base+0x41f8>
   14624:	nop
   14628:	ldr	x30, [sp], #16
   1462c:	ret
   14630:	str	x30, [sp, #-16]!
   14634:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   14638:	add	x0, x0, #0xb48
   1463c:	ldrb	w0, [x0]
   14640:	cmp	w0, #0x0
   14644:	b.ne	1466c <__sancov_default_options@@Base+0x42c0>  // b.any
   14648:	mov	x1, #0x1000                	// #4096
   1464c:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   14650:	add	x0, x0, #0xb48
   14654:	bl	1fa6c <__sanitizer_set_report_fd@@Base+0x58c0>
   14658:	mov	x1, #0x1000                	// #4096
   1465c:	adrp	x0, 1c9000 <__ubsan_vptr_type_cache@@Base+0x14f1b8>
   14660:	add	x0, x0, #0xb48
   14664:	bl	145a4 <__sancov_default_options@@Base+0x41f8>
   14668:	b	14670 <__sancov_default_options@@Base+0x42c4>
   1466c:	nop
   14670:	ldr	x30, [sp], #16
   14674:	ret
   14678:	str	x30, [sp, #-48]!
   1467c:	str	x0, [sp, #24]
   14680:	str	x1, [sp, #16]
   14684:	bl	14630 <__sancov_default_options@@Base+0x4284>
   14688:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   1468c:	add	x0, x0, #0xb48
   14690:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   14694:	str	x0, [sp, #40]
   14698:	ldr	x0, [sp, #16]
   1469c:	sub	x0, x0, #0x1
   146a0:	ldr	x2, [sp, #40]
   146a4:	ldr	x1, [sp, #40]
   146a8:	cmp	x2, x0
   146ac:	csel	x0, x1, x0, ls  // ls = plast
   146b0:	str	x0, [sp, #40]
   146b4:	ldr	x0, [sp, #16]
   146b8:	cmp	x0, #0x0
   146bc:	b.ne	146c8 <__sancov_default_options@@Base+0x431c>  // b.any
   146c0:	mov	x0, #0x0                   	// #0
   146c4:	b	146f0 <__sancov_default_options@@Base+0x4344>
   146c8:	ldr	x2, [sp, #40]
   146cc:	adrp	x0, 1c8000 <__ubsan_vptr_type_cache@@Base+0x14e1b8>
   146d0:	add	x1, x0, #0xb48
   146d4:	ldr	x0, [sp, #24]
   146d8:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   146dc:	ldr	x1, [sp, #24]
   146e0:	ldr	x0, [sp, #40]
   146e4:	add	x0, x1, x0
   146e8:	strb	wzr, [x0]
   146ec:	ldr	x0, [sp, #40]
   146f0:	ldr	x30, [sp], #48
   146f4:	ret
   146f8:	str	x30, [sp, #-32]!
   146fc:	bl	1ec2c <__sanitizer_set_report_fd@@Base+0x4a80>
   14700:	str	x0, [sp, #16]
   14704:	ldr	x0, [sp, #16]
   14708:	cmp	x0, #0x0
   1470c:	b.eq	14780 <__sancov_default_options@@Base+0x43d4>  // b.none
   14710:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   14714:	add	x0, x0, #0x7b0
   14718:	bl	259c8 <OnPrint@@Base+0x3a8>
   1471c:	str	xzr, [sp, #24]
   14720:	ldr	x0, [sp, #24]
   14724:	lsl	x0, x0, #3
   14728:	ldr	x1, [sp, #16]
   1472c:	add	x0, x1, x0
   14730:	ldr	x0, [x0]
   14734:	cmp	x0, #0x0
   14738:	b.eq	14770 <__sancov_default_options@@Base+0x43c4>  // b.none
   1473c:	ldr	x0, [sp, #24]
   14740:	lsl	x0, x0, #3
   14744:	ldr	x1, [sp, #16]
   14748:	add	x0, x1, x0
   1474c:	ldr	x0, [x0]
   14750:	mov	x1, x0
   14754:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   14758:	add	x0, x0, #0x7c0
   1475c:	bl	259c8 <OnPrint@@Base+0x3a8>
   14760:	ldr	x0, [sp, #24]
   14764:	add	x0, x0, #0x1
   14768:	str	x0, [sp, #24]
   1476c:	b	14720 <__sancov_default_options@@Base+0x4374>
   14770:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   14774:	add	x0, x0, #0x7c8
   14778:	bl	259c8 <OnPrint@@Base+0x3a8>
   1477c:	b	14784 <__sancov_default_options@@Base+0x43d8>
   14780:	nop
   14784:	ldr	x30, [sp], #32
   14788:	ret
   1478c:	str	x30, [sp, #-48]!
   14790:	str	x0, [sp, #24]
   14794:	str	x1, [sp, #16]
   14798:	str	wzr, [sp, #44]
   1479c:	ldr	w0, [sp, #44]
   147a0:	cmp	w0, #0x4
   147a4:	b.gt	147f4 <__sancov_default_options@@Base+0x4448>
   147a8:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   147ac:	add	x1, x0, #0xb48
   147b0:	ldrsw	x0, [sp, #44]
   147b4:	lsl	x0, x0, #4
   147b8:	add	x0, x1, x0
   147bc:	ldr	x0, [x0]
   147c0:	str	x0, [sp, #32]
   147c4:	ldr	x0, [sp, #32]
   147c8:	cmp	x0, #0x0
   147cc:	b.eq	147f0 <__sancov_default_options@@Base+0x4444>  // b.none
   147d0:	ldr	x2, [sp, #32]
   147d4:	ldr	x1, [sp, #16]
   147d8:	ldr	x0, [sp, #24]
   147dc:	blr	x2
   147e0:	ldr	w0, [sp, #44]
   147e4:	add	w0, w0, #0x1
   147e8:	str	w0, [sp, #44]
   147ec:	b	1479c <__sancov_default_options@@Base+0x43f0>
   147f0:	nop
   147f4:	ldr	x30, [sp], #48
   147f8:	ret
   147fc:	str	x30, [sp, #-48]!
   14800:	str	x0, [sp, #24]
   14804:	str	wzr, [sp, #44]
   14808:	ldr	w0, [sp, #44]
   1480c:	cmp	w0, #0x4
   14810:	b.gt	1485c <__sancov_default_options@@Base+0x44b0>
   14814:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   14818:	add	x1, x0, #0xb48
   1481c:	ldrsw	x0, [sp, #44]
   14820:	lsl	x0, x0, #4
   14824:	add	x0, x1, x0
   14828:	ldr	x0, [x0, #8]
   1482c:	str	x0, [sp, #32]
   14830:	ldr	x0, [sp, #32]
   14834:	cmp	x0, #0x0
   14838:	b.eq	14858 <__sancov_default_options@@Base+0x44ac>  // b.none
   1483c:	ldr	x1, [sp, #32]
   14840:	ldr	x0, [sp, #24]
   14844:	blr	x1
   14848:	ldr	w0, [sp, #44]
   1484c:	add	w0, w0, #0x1
   14850:	str	w0, [sp, #44]
   14854:	b	14808 <__sancov_default_options@@Base+0x445c>
   14858:	nop
   1485c:	ldr	x30, [sp], #48
   14860:	ret
   14864:	sub	sp, sp, #0x20
   14868:	str	x0, [sp, #8]
   1486c:	str	x1, [sp]
   14870:	ldr	x0, [sp, #8]
   14874:	cmp	x0, #0x0
   14878:	b.eq	14888 <__sancov_default_options@@Base+0x44dc>  // b.none
   1487c:	ldr	x0, [sp]
   14880:	cmp	x0, #0x0
   14884:	b.ne	14890 <__sancov_default_options@@Base+0x44e4>  // b.any
   14888:	mov	w0, #0x0                   	// #0
   1488c:	b	14918 <__sancov_default_options@@Base+0x456c>
   14890:	str	wzr, [sp, #28]
   14894:	ldr	w0, [sp, #28]
   14898:	cmp	w0, #0x4
   1489c:	b.gt	14914 <__sancov_default_options@@Base+0x4568>
   148a0:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   148a4:	add	x1, x0, #0xb48
   148a8:	ldrsw	x0, [sp, #28]
   148ac:	lsl	x0, x0, #4
   148b0:	add	x0, x1, x0
   148b4:	ldr	x0, [x0]
   148b8:	cmp	x0, #0x0
   148bc:	b.ne	14904 <__sancov_default_options@@Base+0x4558>  // b.any
   148c0:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   148c4:	add	x1, x0, #0xb48
   148c8:	ldrsw	x0, [sp, #28]
   148cc:	lsl	x0, x0, #4
   148d0:	add	x0, x1, x0
   148d4:	ldr	x1, [sp, #8]
   148d8:	str	x1, [x0]
   148dc:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   148e0:	add	x1, x0, #0xb48
   148e4:	ldrsw	x0, [sp, #28]
   148e8:	lsl	x0, x0, #4
   148ec:	add	x0, x1, x0
   148f0:	ldr	x1, [sp]
   148f4:	str	x1, [x0, #8]
   148f8:	ldr	w0, [sp, #28]
   148fc:	add	w0, w0, #0x1
   14900:	b	14918 <__sancov_default_options@@Base+0x456c>
   14904:	ldr	w0, [sp, #28]
   14908:	add	w0, w0, #0x1
   1490c:	str	w0, [sp, #28]
   14910:	b	14894 <__sancov_default_options@@Base+0x44e8>
   14914:	mov	w0, #0x0                   	// #0
   14918:	add	sp, sp, #0x20
   1491c:	ret

0000000000014920 <__sanitizer_report_error_summary@@Base>:
   14920:	str	x30, [sp, #-32]!
   14924:	str	x0, [sp, #24]
   14928:	ldr	x1, [sp, #24]
   1492c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   14930:	add	x0, x0, #0x7d0
   14934:	bl	259c8 <OnPrint@@Base+0x3a8>
   14938:	nop
   1493c:	ldr	x30, [sp], #32
   14940:	ret

0000000000014944 <__sanitizer_acquire_crash_state@@Base>:
   14944:	str	x30, [sp, #-16]!
   14948:	mov	w2, #0x1                   	// #1
   1494c:	mov	w1, #0x1                   	// #1
   14950:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   14954:	add	x0, x0, #0xb98
   14958:	bl	f100 <__ubsan_handle_cfi_bad_type@@Base+0x9e4>
   1495c:	and	w0, w0, #0xff
   14960:	cmp	w0, #0x0
   14964:	cset	w0, eq  // eq = none
   14968:	and	w0, w0, #0xff
   1496c:	ldr	x30, [sp], #16
   14970:	ret

0000000000014974 <__sanitizer_install_malloc_and_free_hooks@@Base>:
   14974:	str	x30, [sp, #-32]!
   14978:	str	x0, [sp, #24]
   1497c:	str	x1, [sp, #16]
   14980:	ldr	x1, [sp, #16]
   14984:	ldr	x0, [sp, #24]
   14988:	bl	14864 <__sancov_default_options@@Base+0x44b8>
   1498c:	ldr	x30, [sp], #32
   14990:	ret
   14994:	str	x30, [sp, #-64]!
   14998:	str	x0, [sp, #56]
   1499c:	str	x1, [sp, #48]
   149a0:	str	x2, [sp, #40]
   149a4:	strb	w3, [sp, #39]
   149a8:	strb	w4, [sp, #38]
   149ac:	str	x5, [sp, #24]
   149b0:	ldr	x0, [sp, #56]
   149b4:	str	xzr, [x0]
   149b8:	ldr	x0, [sp, #56]
   149bc:	ldr	x1, [sp, #48]
   149c0:	str	x1, [x0, #8]
   149c4:	ldr	x0, [sp, #56]
   149c8:	ldr	x1, [sp, #40]
   149cc:	str	x1, [x0, #16]
   149d0:	ldr	x0, [sp, #56]
   149d4:	ldrb	w1, [sp, #39]
   149d8:	strb	w1, [x0, #24]
   149dc:	ldr	x0, [sp, #56]
   149e0:	ldrb	w1, [sp, #38]
   149e4:	strb	w1, [x0, #25]
   149e8:	ldr	x0, [sp, #56]
   149ec:	add	x3, x0, #0x1a
   149f0:	ldr	x0, [sp, #24]
   149f4:	cmp	x0, #0x0
   149f8:	b.eq	14a04 <__sanitizer_install_malloc_and_free_hooks@@Base+0x90>  // b.none
   149fc:	ldr	x0, [sp, #24]
   14a00:	b	14a0c <__sanitizer_install_malloc_and_free_hooks@@Base+0x98>
   14a04:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   14a08:	add	x0, x0, #0x610
   14a0c:	mov	x2, #0x10                  	// #16
   14a10:	mov	x1, x0
   14a14:	mov	x0, x3
   14a18:	bl	1cf6c <__sanitizer_set_report_fd@@Base+0x2dc0>
   14a1c:	nop
   14a20:	ldr	x30, [sp], #64
   14a24:	ret
   14a28:	sub	sp, sp, #0x10
   14a2c:	str	x0, [sp, #8]
   14a30:	ldr	x0, [sp, #8]
   14a34:	add	x0, x0, #0x30
   14a38:	add	sp, sp, #0x10
   14a3c:	ret
   14a40:	sub	sp, sp, #0x10
   14a44:	str	x0, [sp, #8]
   14a48:	ldr	x0, [sp, #8]
   14a4c:	ldr	x0, [x0]
   14a50:	cmp	x0, #0x0
   14a54:	cset	w0, eq  // eq = none
   14a58:	and	w0, w0, #0xff
   14a5c:	add	sp, sp, #0x10
   14a60:	ret
   14a64:	sub	sp, sp, #0x10
   14a68:	str	x0, [sp, #8]
   14a6c:	ldr	x0, [sp, #8]
   14a70:	ldr	x0, [x0, #8]
   14a74:	add	sp, sp, #0x10
   14a78:	ret
   14a7c:	str	x30, [sp, #-48]!
   14a80:	str	x0, [sp, #24]
   14a84:	ldr	x0, [sp, #24]
   14a88:	bl	14a40 <__sanitizer_install_malloc_and_free_hooks@@Base+0xcc>
   14a8c:	and	w0, w0, #0xff
   14a90:	eor	w0, w0, #0x1
   14a94:	and	w0, w0, #0xff
   14a98:	and	x0, x0, #0xff
   14a9c:	str	x0, [sp, #40]
   14aa0:	str	xzr, [sp, #32]
   14aa4:	ldr	x1, [sp, #40]
   14aa8:	ldr	x0, [sp, #32]
   14aac:	cmp	x1, x0
   14ab0:	cset	w0, eq  // eq = none
   14ab4:	and	w0, w0, #0xff
   14ab8:	and	x0, x0, #0xff
   14abc:	cmp	x0, #0x0
   14ac0:	b.eq	14ae4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x170>  // b.none
   14ac4:	ldr	x4, [sp, #32]
   14ac8:	ldr	x3, [sp, #40]
   14acc:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   14ad0:	add	x2, x0, #0x830
   14ad4:	mov	w1, #0x40                  	// #64
   14ad8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   14adc:	add	x0, x0, #0x848
   14ae0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   14ae4:	ldr	x0, [sp, #24]
   14ae8:	ldr	x0, [x0, #8]
   14aec:	ldr	x1, [x0]
   14af0:	ldr	x0, [sp, #24]
   14af4:	str	x1, [x0, #8]
   14af8:	ldr	x0, [sp, #24]
   14afc:	ldr	x0, [x0, #8]
   14b00:	cmp	x0, #0x0
   14b04:	b.ne	14b10 <__sanitizer_install_malloc_and_free_hooks@@Base+0x19c>  // b.any
   14b08:	ldr	x0, [sp, #24]
   14b0c:	str	xzr, [x0, #16]
   14b10:	ldr	x0, [sp, #24]
   14b14:	ldr	x0, [x0]
   14b18:	sub	x1, x0, #0x1
   14b1c:	ldr	x0, [sp, #24]
   14b20:	str	x1, [x0]
   14b24:	nop
   14b28:	ldr	x30, [sp], #48
   14b2c:	ret
   14b30:	str	x30, [sp, #-32]!
   14b34:	str	x0, [sp, #24]
   14b38:	str	x1, [sp, #16]
   14b3c:	ldr	x0, [sp, #24]
   14b40:	bl	14a40 <__sanitizer_install_malloc_and_free_hooks@@Base+0xcc>
   14b44:	and	w0, w0, #0xff
   14b48:	cmp	w0, #0x0
   14b4c:	b.eq	14b84 <__sanitizer_install_malloc_and_free_hooks@@Base+0x210>  // b.none
   14b50:	ldr	x0, [sp, #16]
   14b54:	str	xzr, [x0]
   14b58:	ldr	x0, [sp, #24]
   14b5c:	ldr	x1, [sp, #16]
   14b60:	str	x1, [x0, #16]
   14b64:	ldr	x0, [sp, #24]
   14b68:	ldr	x1, [x0, #16]
   14b6c:	ldr	x0, [sp, #24]
   14b70:	str	x1, [x0, #8]
   14b74:	ldr	x0, [sp, #24]
   14b78:	mov	x1, #0x1                   	// #1
   14b7c:	str	x1, [x0]
   14b80:	b	14bbc <__sanitizer_install_malloc_and_free_hooks@@Base+0x248>
   14b84:	ldr	x0, [sp, #16]
   14b88:	str	xzr, [x0]
   14b8c:	ldr	x0, [sp, #24]
   14b90:	ldr	x0, [x0, #16]
   14b94:	ldr	x1, [sp, #16]
   14b98:	str	x1, [x0]
   14b9c:	ldr	x0, [sp, #24]
   14ba0:	ldr	x1, [sp, #16]
   14ba4:	str	x1, [x0, #16]
   14ba8:	ldr	x0, [sp, #24]
   14bac:	ldr	x0, [x0]
   14bb0:	add	x1, x0, #0x1
   14bb4:	ldr	x0, [sp, #24]
   14bb8:	str	x1, [x0]
   14bbc:	nop
   14bc0:	ldr	x30, [sp], #32
   14bc4:	ret
   14bc8:	str	x30, [sp, #-48]!
   14bcc:	str	x0, [sp, #24]
   14bd0:	ldr	x0, [sp, #24]
   14bd4:	ldr	x1, [x0, #8]
   14bd8:	add	x0, sp, #0x28
   14bdc:	bl	14cec <__sanitizer_install_malloc_and_free_hooks@@Base+0x378>
   14be0:	ldr	x0, [sp, #40]
   14be4:	ldr	x30, [sp], #48
   14be8:	ret
   14bec:	str	x30, [sp, #-48]!
   14bf0:	str	x0, [sp, #24]
   14bf4:	add	x0, sp, #0x28
   14bf8:	mov	x1, #0x0                   	// #0
   14bfc:	bl	14cec <__sanitizer_install_malloc_and_free_hooks@@Base+0x378>
   14c00:	ldr	x0, [sp, #40]
   14c04:	ldr	x30, [sp], #48
   14c08:	ret
   14c0c:	sub	sp, sp, #0x10
   14c10:	str	x0, [sp, #8]
   14c14:	str	x1, [sp]
   14c18:	ldr	x0, [sp, #8]
   14c1c:	ldr	x1, [x0]
   14c20:	ldr	x0, [sp]
   14c24:	cmp	x1, x0
   14c28:	cset	w0, ne  // ne = any
   14c2c:	and	w0, w0, #0xff
   14c30:	add	sp, sp, #0x10
   14c34:	ret
   14c38:	sub	sp, sp, #0x10
   14c3c:	str	x0, [sp, #8]
   14c40:	ldr	x0, [sp, #8]
   14c44:	ldr	x0, [x0]
   14c48:	ldr	x1, [x0]
   14c4c:	ldr	x0, [sp, #8]
   14c50:	str	x1, [x0]
   14c54:	ldr	x0, [sp, #8]
   14c58:	add	sp, sp, #0x10
   14c5c:	ret
   14c60:	sub	sp, sp, #0x10
   14c64:	str	x0, [sp, #8]
   14c68:	ldr	x0, [sp, #8]
   14c6c:	ldr	x0, [x0]
   14c70:	add	sp, sp, #0x10
   14c74:	ret
   14c78:	sub	sp, sp, #0x20
   14c7c:	str	x0, [sp, #24]
   14c80:	str	x1, [sp, #16]
   14c84:	str	w2, [sp, #12]
   14c88:	ldr	x0, [sp, #24]
   14c8c:	ldr	x1, [sp, #16]
   14c90:	ldxr	x2, [x0]
   14c94:	add	x3, x2, x1
   14c98:	stlxr	w4, x3, [x0]
   14c9c:	cbnz	w4, 14c90 <__sanitizer_install_malloc_and_free_hooks@@Base+0x31c>
   14ca0:	dmb	ish
   14ca4:	mov	x0, x2
   14ca8:	add	sp, sp, #0x20
   14cac:	ret
   14cb0:	sub	sp, sp, #0x20
   14cb4:	str	x0, [sp, #24]
   14cb8:	str	x1, [sp, #16]
   14cbc:	str	w2, [sp, #12]
   14cc0:	ldr	x0, [sp, #24]
   14cc4:	ldr	x1, [sp, #16]
   14cc8:	neg	x1, x1
   14ccc:	ldxr	x2, [x0]
   14cd0:	add	x3, x2, x1
   14cd4:	stlxr	w4, x3, [x0]
   14cd8:	cbnz	w4, 14ccc <__sanitizer_install_malloc_and_free_hooks@@Base+0x358>
   14cdc:	dmb	ish
   14ce0:	mov	x0, x2
   14ce4:	add	sp, sp, #0x20
   14ce8:	ret
   14cec:	sub	sp, sp, #0x10
   14cf0:	str	x0, [sp, #8]
   14cf4:	str	x1, [sp]
   14cf8:	ldr	x0, [sp, #8]
   14cfc:	ldr	x1, [sp]
   14d00:	str	x1, [x0]
   14d04:	nop
   14d08:	add	sp, sp, #0x10
   14d0c:	ret
   14d10:	str	x30, [sp, #-48]!
   14d14:	str	x0, [sp, #24]
   14d18:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   14d1c:	add	x0, x0, #0xba0
   14d20:	ldr	x0, [x0]
   14d24:	str	x0, [sp, #40]
   14d28:	str	xzr, [sp, #32]
   14d2c:	ldr	x1, [sp, #40]
   14d30:	ldr	x0, [sp, #32]
   14d34:	cmp	x1, x0
   14d38:	cset	w0, ne  // ne = any
   14d3c:	and	w0, w0, #0xff
   14d40:	and	x0, x0, #0xff
   14d44:	cmp	x0, #0x0
   14d48:	b.eq	14d6c <__sanitizer_install_malloc_and_free_hooks@@Base+0x3f8>  // b.none
   14d4c:	ldr	x4, [sp, #32]
   14d50:	ldr	x3, [sp, #40]
   14d54:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   14d58:	add	x2, x0, #0x9a0
   14d5c:	mov	w1, #0x16                  	// #22
   14d60:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   14d64:	add	x0, x0, #0x9d0
   14d68:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   14d6c:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   14d70:	add	x0, x0, #0xba0
   14d74:	ldr	x1, [sp, #24]
   14d78:	str	x1, [x0]
   14d7c:	nop
   14d80:	ldr	x30, [sp], #48
   14d84:	ret
   14d88:	mov	x0, #0x0                   	// #0
   14d8c:	ret
   14d90:	str	x30, [sp, #-112]!
   14d94:	str	x0, [sp, #24]
   14d98:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   14d9c:	ldr	x0, [x0, #136]
   14da0:	str	x0, [sp, #72]
   14da4:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   14da8:	ldr	x0, [x0, #144]
   14dac:	str	x0, [sp, #64]
   14db0:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   14db4:	ldrb	w0, [x0, #152]
   14db8:	strb	w0, [sp, #63]
   14dbc:	str	xzr, [sp, #104]
   14dc0:	str	xzr, [sp, #96]
   14dc4:	strb	wzr, [sp, #95]
   14dc8:	str	xzr, [sp, #80]
   14dcc:	mov	w0, #0x64                  	// #100
   14dd0:	bl	234a8 <__sanitizer_set_report_fd@@Base+0x92fc>
   14dd4:	bl	216f8 <__sanitizer_set_report_fd@@Base+0x754c>
   14dd8:	lsr	x0, x0, #20
   14ddc:	str	x0, [sp, #48]
   14de0:	bl	9984 <__ubsan_default_options@@Base+0x320>
   14de4:	cmp	w0, #0x0
   14de8:	cset	w0, ne  // ne = any
   14dec:	and	w0, w0, #0xff
   14df0:	cmp	w0, #0x0
   14df4:	b.eq	14edc <__sanitizer_install_malloc_and_free_hooks@@Base+0x568>  // b.none
   14df8:	ldr	x1, [sp, #104]
   14dfc:	mov	x0, x1
   14e00:	lsl	x0, x0, #1
   14e04:	add	x0, x0, x1
   14e08:	lsl	x0, x0, #2
   14e0c:	sub	x1, x0, x1
   14e10:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   14e14:	movk	x0, #0xcccd
   14e18:	umulh	x0, x1, x0
   14e1c:	lsr	x0, x0, #3
   14e20:	ldr	x1, [sp, #48]
   14e24:	cmp	x1, x0
   14e28:	b.ls	14e54 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4e0>  // b.plast
   14e2c:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   14e30:	ldr	x0, [x0, #4024]
   14e34:	ldr	x0, [x0]
   14e38:	ldr	x2, [sp, #48]
   14e3c:	mov	x1, x0
   14e40:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   14e44:	add	x0, x0, #0xa18
   14e48:	bl	259c8 <OnPrint@@Base+0x3a8>
   14e4c:	ldr	x0, [sp, #48]
   14e50:	str	x0, [sp, #104]
   14e54:	bl	26e74 <OnPrint@@Base+0x1854>
   14e58:	str	x0, [sp, #40]
   14e5c:	ldr	x0, [sp, #40]
   14e60:	cmp	x0, #0x0
   14e64:	b.eq	14edc <__sanitizer_install_malloc_and_free_hooks@@Base+0x568>  // b.none
   14e68:	ldr	x1, [sp, #96]
   14e6c:	mov	x0, x1
   14e70:	lsl	x0, x0, #1
   14e74:	add	x0, x0, x1
   14e78:	lsl	x0, x0, #2
   14e7c:	sub	x1, x0, x1
   14e80:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   14e84:	movk	x0, #0xcccd
   14e88:	umulh	x0, x1, x0
   14e8c:	lsr	x1, x0, #3
   14e90:	ldr	x0, [sp, #40]
   14e94:	ldr	x0, [x0, #8]
   14e98:	cmp	x1, x0
   14e9c:	b.cs	14edc <__sanitizer_install_malloc_and_free_hooks@@Base+0x568>  // b.hs, b.nlast
   14ea0:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   14ea4:	ldr	x0, [x0, #4024]
   14ea8:	ldr	x1, [x0]
   14eac:	ldr	x0, [sp, #40]
   14eb0:	ldr	x2, [x0]
   14eb4:	ldr	x0, [sp, #40]
   14eb8:	ldr	x0, [x0, #8]
   14ebc:	lsr	x0, x0, #20
   14ec0:	mov	x3, x0
   14ec4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   14ec8:	add	x0, x0, #0xa28
   14ecc:	bl	259c8 <OnPrint@@Base+0x3a8>
   14ed0:	ldr	x0, [sp, #40]
   14ed4:	ldr	x0, [x0, #8]
   14ed8:	str	x0, [sp, #96]
   14edc:	ldr	x0, [sp, #72]
   14ee0:	cmp	x0, #0x0
   14ee4:	b.eq	14f24 <__sanitizer_install_malloc_and_free_hooks@@Base+0x5b0>  // b.none
   14ee8:	ldr	x1, [sp, #72]
   14eec:	ldr	x0, [sp, #48]
   14ef0:	cmp	x1, x0
   14ef4:	b.cs	14f24 <__sanitizer_install_malloc_and_free_hooks@@Base+0x5b0>  // b.hs, b.nlast
   14ef8:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   14efc:	ldr	x0, [x0, #4024]
   14f00:	ldr	x0, [x0]
   14f04:	ldr	x3, [sp, #48]
   14f08:	ldr	x2, [sp, #72]
   14f0c:	mov	x1, x0
   14f10:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   14f14:	add	x0, x0, #0xa58
   14f18:	bl	25a74 <OnPrint@@Base+0x454>
   14f1c:	bl	22d3c <__sanitizer_set_report_fd@@Base+0x8b90>
   14f20:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   14f24:	ldr	x0, [sp, #64]
   14f28:	cmp	x0, #0x0
   14f2c:	b.eq	14ff4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x680>  // b.none
   14f30:	ldr	x1, [sp, #64]
   14f34:	ldr	x0, [sp, #48]
   14f38:	cmp	x1, x0
   14f3c:	b.cs	14fac <__sanitizer_install_malloc_and_free_hooks@@Base+0x638>  // b.hs, b.nlast
   14f40:	ldrb	w0, [sp, #95]
   14f44:	eor	w0, w0, #0x1
   14f48:	and	w0, w0, #0xff
   14f4c:	cmp	w0, #0x0
   14f50:	b.eq	14fac <__sanitizer_install_malloc_and_free_hooks@@Base+0x638>  // b.none
   14f54:	mov	w0, #0x1                   	// #1
   14f58:	strb	w0, [sp, #95]
   14f5c:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   14f60:	ldr	x0, [x0, #4024]
   14f64:	ldr	x0, [x0]
   14f68:	ldr	x3, [sp, #48]
   14f6c:	ldr	x2, [sp, #64]
   14f70:	mov	x1, x0
   14f74:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   14f78:	add	x0, x0, #0xa88
   14f7c:	bl	25a74 <OnPrint@@Base+0x454>
   14f80:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   14f84:	add	x0, x0, #0xba0
   14f88:	ldr	x0, [x0]
   14f8c:	cmp	x0, #0x0
   14f90:	b.eq	14ff4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x680>  // b.none
   14f94:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   14f98:	add	x0, x0, #0xba0
   14f9c:	ldr	x1, [x0]
   14fa0:	mov	w0, #0x1                   	// #1
   14fa4:	blr	x1
   14fa8:	b	14ff4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x680>
   14fac:	ldr	x1, [sp, #64]
   14fb0:	ldr	x0, [sp, #48]
   14fb4:	cmp	x1, x0
   14fb8:	b.cc	14ff4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x680>  // b.lo, b.ul, b.last
   14fbc:	ldrb	w0, [sp, #95]
   14fc0:	cmp	w0, #0x0
   14fc4:	b.eq	14ff4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x680>  // b.none
   14fc8:	strb	wzr, [sp, #95]
   14fcc:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   14fd0:	add	x0, x0, #0xba0
   14fd4:	ldr	x0, [x0]
   14fd8:	cmp	x0, #0x0
   14fdc:	b.eq	14ff4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x680>  // b.none
   14fe0:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   14fe4:	add	x0, x0, #0xba0
   14fe8:	ldr	x1, [x0]
   14fec:	mov	w0, #0x0                   	// #0
   14ff0:	blr	x1
   14ff4:	ldrb	w0, [sp, #63]
   14ff8:	cmp	w0, #0x0
   14ffc:	b.eq	14dcc <__sanitizer_install_malloc_and_free_hooks@@Base+0x458>  // b.none
   15000:	ldr	d0, [sp, #48]
   15004:	ucvtf	d1, d0
   15008:	ldr	d0, [sp, #80]
   1500c:	ucvtf	d0, d0
   15010:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   15014:	ldr	d2, [x0, #2960]
   15018:	fmul	d0, d0, d2
   1501c:	fcmpe	d1, d0
   15020:	b.le	15048 <__sanitizer_install_malloc_and_free_hooks@@Base+0x6d4>
   15024:	ldr	x1, [sp, #48]
   15028:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   1502c:	add	x0, x0, #0xab8
   15030:	bl	259c8 <OnPrint@@Base+0x3a8>
   15034:	mov	x1, #0x14                  	// #20
   15038:	mov	x0, #0x5a                  	// #90
   1503c:	bl	6c40 <__sanitizer_print_memory_profile@plt>
   15040:	ldr	x0, [sp, #48]
   15044:	str	x0, [sp, #80]
   15048:	b	14dcc <__sanitizer_install_malloc_and_free_hooks@@Base+0x458>
   1504c:	str	x30, [sp, #-80]!
   15050:	str	x0, [sp, #24]
   15054:	add	x0, sp, #0x20
   15058:	mov	x1, #0x10000               	// #65536
   1505c:	bl	89fc <__asan_backtrace_open@plt+0x1d8c>
   15060:	add	x3, sp, #0x20
   15064:	ldr	x2, [sp, #24]
   15068:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   1506c:	add	x1, x0, #0xad8
   15070:	mov	x0, x3
   15074:	bl	25bdc <OnPrint@@Base+0x5bc>
   15078:	add	x0, sp, #0x20
   1507c:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   15080:	str	x0, [sp, #72]
   15084:	mov	w1, #0xa                   	// #10
   15088:	ldr	x0, [sp, #72]
   1508c:	bl	1cbfc <__sanitizer_set_report_fd@@Base+0x2a50>
   15090:	str	x0, [sp, #64]
   15094:	ldr	x0, [sp, #64]
   15098:	cmp	x0, #0x0
   1509c:	cset	w0, ne  // ne = any
   150a0:	and	w0, w0, #0xff
   150a4:	cmp	w0, #0x0
   150a8:	b.eq	150cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x758>  // b.none
   150ac:	ldr	x0, [sp, #64]
   150b0:	strb	wzr, [x0]
   150b4:	ldr	x0, [sp, #72]
   150b8:	bl	21904 <__sanitizer_set_report_fd@@Base+0x7758>
   150bc:	ldr	x0, [sp, #64]
   150c0:	add	x0, x0, #0x1
   150c4:	str	x0, [sp, #72]
   150c8:	b	15084 <__sanitizer_install_malloc_and_free_hooks@@Base+0x710>
   150cc:	ldr	x0, [sp, #72]
   150d0:	ldrb	w0, [x0]
   150d4:	cmp	w0, #0x0
   150d8:	b.eq	150e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x770>  // b.none
   150dc:	ldr	x0, [sp, #72]
   150e0:	bl	21904 <__sanitizer_set_report_fd@@Base+0x7758>
   150e4:	add	x0, sp, #0x20
   150e8:	bl	9274 <__asan_backtrace_open@plt+0x2604>
   150ec:	nop
   150f0:	ldr	x30, [sp], #80
   150f4:	ret
   150f8:	str	x30, [sp, #-16]!
   150fc:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   15100:	ldr	x0, [x0, #136]
   15104:	cmp	x0, #0x0
   15108:	b.ne	1513c <__sanitizer_install_malloc_and_free_hooks@@Base+0x7c8>  // b.any
   1510c:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   15110:	ldr	x0, [x0, #144]
   15114:	cmp	x0, #0x0
   15118:	b.ne	1513c <__sanitizer_install_malloc_and_free_hooks@@Base+0x7c8>  // b.any
   1511c:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   15120:	ldrb	w0, [x0, #152]
   15124:	eor	w0, w0, #0x1
   15128:	and	w0, w0, #0xff
   1512c:	cmp	w0, #0x0
   15130:	b.eq	1513c <__sanitizer_install_malloc_and_free_hooks@@Base+0x7c8>  // b.none
   15134:	mov	w0, #0x1                   	// #1
   15138:	b	15140 <__sanitizer_install_malloc_and_free_hooks@@Base+0x7cc>
   1513c:	mov	w0, #0x0                   	// #0
   15140:	cmp	w0, #0x0
   15144:	b.ne	1516c <__sanitizer_install_malloc_and_free_hooks@@Base+0x7f8>  // b.any
   15148:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1514c:	ldr	x0, [x0, #3992]
   15150:	cmp	x0, #0x0
   15154:	b.eq	15174 <__sanitizer_install_malloc_and_free_hooks@@Base+0x800>  // b.none
   15158:	mov	x1, #0x0                   	// #0
   1515c:	adrp	x0, 14000 <__sancov_default_options@@Base+0x3c54>
   15160:	add	x0, x0, #0xd90
   15164:	bl	20110 <__sanitizer_set_report_fd@@Base+0x5f64>
   15168:	b	15178 <__sanitizer_install_malloc_and_free_hooks@@Base+0x804>
   1516c:	nop
   15170:	b	15178 <__sanitizer_install_malloc_and_free_hooks@@Base+0x804>
   15174:	nop
   15178:	ldr	x30, [sp], #16
   1517c:	ret
   15180:	sub	sp, sp, #0x10
   15184:	str	x0, [sp, #8]
   15188:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   1518c:	add	x0, x0, #0xba8
   15190:	ldr	x1, [sp, #8]
   15194:	str	x1, [x0]
   15198:	nop
   1519c:	add	sp, sp, #0x10
   151a0:	ret

00000000000151a4 <__sanitizer_sandbox_on_notify@@Base>:
   151a4:	str	x30, [sp, #-32]!
   151a8:	str	x0, [sp, #24]
   151ac:	ldr	x0, [sp, #24]
   151b0:	bl	23a5c <__sanitizer_set_report_fd@@Base+0x98b0>
   151b4:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   151b8:	add	x0, x0, #0xba8
   151bc:	ldr	x0, [x0]
   151c0:	cmp	x0, #0x0
   151c4:	b.eq	151d8 <__sanitizer_sandbox_on_notify@@Base+0x34>  // b.none
   151c8:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   151cc:	add	x0, x0, #0xba8
   151d0:	ldr	x0, [x0]
   151d4:	blr	x0
   151d8:	nop
   151dc:	ldr	x30, [sp], #32
   151e0:	ret
   151e4:	str	x30, [sp, #-48]!
   151e8:	str	x0, [sp, #24]
   151ec:	add	x0, sp, #0x28
   151f0:	mov	x2, x0
   151f4:	mov	w1, #0x1                   	// #1
   151f8:	ldr	x0, [sp, #24]
   151fc:	bl	22718 <__sanitizer_set_report_fd@@Base+0x856c>
   15200:	str	w0, [sp, #44]
   15204:	ldr	w0, [sp, #44]
   15208:	cmn	w0, #0x1
   1520c:	b.ne	15228 <__sanitizer_sandbox_on_notify@@Base+0x84>  // b.any
   15210:	ldr	w0, [sp, #40]
   15214:	mov	w2, w0
   15218:	ldr	x1, [sp, #24]
   1521c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   15220:	add	x0, x0, #0xc80
   15224:	bl	25a74 <OnPrint@@Base+0x454>
   15228:	ldr	w0, [sp, #44]
   1522c:	ldr	x30, [sp], #48
   15230:	ret
   15234:	stp	x19, x30, [sp, #-64]!
   15238:	str	x0, [sp, #40]
   1523c:	str	x1, [sp, #32]
   15240:	str	x2, [sp, #24]
   15244:	ldr	x0, [sp, #32]
   15248:	str	x0, [sp, #56]
   1524c:	str	xzr, [sp, #48]
   15250:	ldr	x1, [sp, #56]
   15254:	ldr	x0, [sp, #48]
   15258:	cmp	x1, x0
   1525c:	cset	w0, eq  // eq = none
   15260:	and	w0, w0, #0xff
   15264:	and	x0, x0, #0xff
   15268:	cmp	x0, #0x0
   1526c:	b.eq	15290 <__sanitizer_sandbox_on_notify@@Base+0xec>  // b.none
   15270:	ldr	x4, [sp, #48]
   15274:	ldr	x3, [sp, #56]
   15278:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   1527c:	add	x2, x0, #0xcc0
   15280:	mov	w1, #0x28                  	// #40
   15284:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   15288:	add	x0, x0, #0xcd0
   1528c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   15290:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   15294:	ldr	x19, [x0, #168]
   15298:	bl	1ef9c <__sanitizer_set_report_fd@@Base+0x4df0>
   1529c:	ldr	x6, [sp, #24]
   152a0:	mov	x5, x0
   152a4:	ldr	x4, [sp, #32]
   152a8:	mov	x3, x19
   152ac:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   152b0:	add	x2, x0, #0xd20
   152b4:	mov	x1, #0x1000                	// #4096
   152b8:	ldr	x0, [sp, #40]
   152bc:	bl	25b20 <OnPrint@@Base+0x500>
   152c0:	nop
   152c4:	ldp	x19, x30, [sp], #64
   152c8:	ret
   152cc:	str	x30, [sp, #-64]!
   152d0:	str	x0, [sp, #40]
   152d4:	str	x1, [sp, #32]
   152d8:	str	x2, [sp, #24]
   152dc:	str	x3, [sp, #16]
   152e0:	ldr	x0, [sp, #32]
   152e4:	bl	13dec <__sancov_default_options@@Base+0x3a40>
   152e8:	mov	x1, x0
   152ec:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   152f0:	add	x2, x0, #0xd30
   152f4:	ldr	x0, [sp, #40]
   152f8:	bl	15234 <__sanitizer_sandbox_on_notify@@Base+0x90>
   152fc:	ldr	x0, [sp, #40]
   15300:	bl	151e4 <__sanitizer_sandbox_on_notify@@Base+0x40>
   15304:	str	w0, [sp, #60]
   15308:	mov	x4, #0x0                   	// #0
   1530c:	mov	x3, #0x0                   	// #0
   15310:	mov	x2, #0x8                   	// #8
   15314:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   15318:	add	x1, x0, #0xc78
   1531c:	ldr	w0, [sp, #60]
   15320:	bl	2283c <__sanitizer_set_report_fd@@Base+0x8690>
   15324:	ldr	x0, [sp, #16]
   15328:	lsl	x0, x0, #3
   1532c:	mov	x4, #0x0                   	// #0
   15330:	mov	x3, #0x0                   	// #0
   15334:	mov	x2, x0
   15338:	ldr	x1, [sp, #24]
   1533c:	ldr	w0, [sp, #60]
   15340:	bl	2283c <__sanitizer_set_report_fd@@Base+0x8690>
   15344:	ldr	w0, [sp, #60]
   15348:	bl	227b0 <__sanitizer_set_report_fd@@Base+0x8604>
   1534c:	ldr	x2, [sp, #16]
   15350:	ldr	x1, [sp, #40]
   15354:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   15358:	add	x0, x0, #0xd38
   1535c:	bl	259c8 <OnPrint@@Base+0x3a8>
   15360:	nop
   15364:	ldr	x30, [sp], #64
   15368:	ret
   1536c:	stp	x19, x30, [sp, #-112]!
   15370:	str	x0, [sp, #24]
   15374:	str	x1, [sp, #16]
   15378:	ldr	x0, [sp, #16]
   1537c:	cmp	x0, #0x0
   15380:	b.eq	155ac <__sanitizer_sandbox_on_notify@@Base+0x408>  // b.none
   15384:	mov	x2, #0x0                   	// #0
   15388:	mov	x1, #0x0                   	// #0
   1538c:	mov	x0, #0x1000                	// #4096
   15390:	bl	107a8 <__sancov_default_options@@Base+0x3fc>
   15394:	str	x0, [sp, #72]
   15398:	mov	x2, #0x0                   	// #0
   1539c:	mov	x1, #0x0                   	// #0
   153a0:	mov	x0, #0x1000                	// #4096
   153a4:	bl	107a8 <__sancov_default_options@@Base+0x3fc>
   153a8:	str	x0, [sp, #64]
   153ac:	ldr	x0, [sp, #16]
   153b0:	lsl	x0, x0, #3
   153b4:	mov	x2, #0x0                   	// #0
   153b8:	mov	x1, #0x0                   	// #0
   153bc:	bl	107a8 <__sancov_default_options@@Base+0x3fc>
   153c0:	str	x0, [sp, #56]
   153c4:	ldr	x0, [sp, #16]
   153c8:	lsl	x0, x0, #3
   153cc:	mov	x2, x0
   153d0:	ldr	x1, [sp, #24]
   153d4:	ldr	x0, [sp, #56]
   153d8:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   153dc:	mov	w2, w19
   153e0:	ldr	x1, [sp, #16]
   153e4:	ldr	x0, [sp, #56]
   153e8:	bl	15acc <__sanitizer_cov_pcs_init@@Base+0x8>
   153ec:	strb	wzr, [sp, #111]
   153f0:	str	xzr, [sp, #96]
   153f4:	str	xzr, [sp, #88]
   153f8:	str	xzr, [sp, #80]
   153fc:	ldr	x1, [sp, #80]
   15400:	ldr	x0, [sp, #16]
   15404:	cmp	x1, x0
   15408:	b.cs	1554c <__sanitizer_sandbox_on_notify@@Base+0x3a8>  // b.hs, b.nlast
   1540c:	ldr	x0, [sp, #80]
   15410:	lsl	x0, x0, #3
   15414:	ldr	x1, [sp, #56]
   15418:	add	x0, x1, x0
   1541c:	ldr	x0, [x0]
   15420:	str	x0, [sp, #48]
   15424:	ldr	x0, [sp, #48]
   15428:	cmp	x0, #0x0
   1542c:	b.eq	15538 <__sanitizer_sandbox_on_notify@@Base+0x394>  // b.none
   15430:	ldr	x0, [sp, #80]
   15434:	lsl	x0, x0, #3
   15438:	ldr	x1, [sp, #56]
   1543c:	add	x0, x1, x0
   15440:	mov	x3, x0
   15444:	mov	x2, #0x0                   	// #0
   15448:	mov	x1, #0x0                   	// #0
   1544c:	ldr	x0, [sp, #48]
   15450:	bl	6640 <__sanitizer_get_module_and_offset_for_pc@plt>
   15454:	cmp	w0, #0x0
   15458:	cset	w0, eq  // eq = none
   1545c:	and	w0, w0, #0xff
   15460:	cmp	w0, #0x0
   15464:	b.eq	1547c <__sanitizer_sandbox_on_notify@@Base+0x2d8>  // b.none
   15468:	ldr	x1, [sp, #48]
   1546c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   15470:	add	x0, x0, #0xd60
   15474:	bl	259c8 <OnPrint@@Base+0x3a8>
   15478:	b	1553c <__sanitizer_sandbox_on_notify@@Base+0x398>
   1547c:	ldr	x0, [sp, #80]
   15480:	lsl	x0, x0, #3
   15484:	ldr	x1, [sp, #56]
   15488:	add	x0, x1, x0
   1548c:	ldr	x0, [x0]
   15490:	ldr	x1, [sp, #48]
   15494:	sub	x0, x1, x0
   15498:	str	x0, [sp, #40]
   1549c:	ldr	x1, [sp, #40]
   154a0:	ldr	x0, [sp, #96]
   154a4:	cmp	x1, x0
   154a8:	b.ne	154c0 <__sanitizer_sandbox_on_notify@@Base+0x31c>  // b.any
   154ac:	ldrb	w0, [sp, #111]
   154b0:	eor	w0, w0, #0x1
   154b4:	and	w0, w0, #0xff
   154b8:	cmp	w0, #0x0
   154bc:	b.eq	1553c <__sanitizer_sandbox_on_notify@@Base+0x398>  // b.none
   154c0:	ldrb	w0, [sp, #111]
   154c4:	cmp	w0, #0x0
   154c8:	b.eq	154f8 <__sanitizer_sandbox_on_notify@@Base+0x354>  // b.none
   154cc:	ldr	x0, [sp, #88]
   154d0:	lsl	x0, x0, #3
   154d4:	ldr	x1, [sp, #56]
   154d8:	add	x2, x1, x0
   154dc:	ldr	x1, [sp, #80]
   154e0:	ldr	x0, [sp, #88]
   154e4:	sub	x0, x1, x0
   154e8:	mov	x3, x0
   154ec:	ldr	x1, [sp, #64]
   154f0:	ldr	x0, [sp, #72]
   154f4:	bl	152cc <__sanitizer_sandbox_on_notify@@Base+0x128>
   154f8:	ldr	x0, [sp, #40]
   154fc:	str	x0, [sp, #96]
   15500:	ldr	x0, [sp, #80]
   15504:	str	x0, [sp, #88]
   15508:	mov	w0, #0x1                   	// #1
   1550c:	strb	w0, [sp, #111]
   15510:	ldr	x0, [sp, #80]
   15514:	lsl	x0, x0, #3
   15518:	ldr	x1, [sp, #56]
   1551c:	add	x0, x1, x0
   15520:	mov	x3, x0
   15524:	mov	x2, #0x1000                	// #4096
   15528:	ldr	x1, [sp, #64]
   1552c:	ldr	x0, [sp, #48]
   15530:	bl	6640 <__sanitizer_get_module_and_offset_for_pc@plt>
   15534:	b	1553c <__sanitizer_sandbox_on_notify@@Base+0x398>
   15538:	nop
   1553c:	ldr	x0, [sp, #80]
   15540:	add	x0, x0, #0x1
   15544:	str	x0, [sp, #80]
   15548:	b	153fc <__sanitizer_sandbox_on_notify@@Base+0x258>
   1554c:	ldrb	w0, [sp, #111]
   15550:	cmp	w0, #0x0
   15554:	b.eq	15584 <__sanitizer_sandbox_on_notify@@Base+0x3e0>  // b.none
   15558:	ldr	x0, [sp, #88]
   1555c:	lsl	x0, x0, #3
   15560:	ldr	x1, [sp, #56]
   15564:	add	x2, x1, x0
   15568:	ldr	x1, [sp, #16]
   1556c:	ldr	x0, [sp, #88]
   15570:	sub	x0, x1, x0
   15574:	mov	x3, x0
   15578:	ldr	x1, [sp, #64]
   1557c:	ldr	x0, [sp, #72]
   15580:	bl	152cc <__sanitizer_sandbox_on_notify@@Base+0x128>
   15584:	mov	x1, #0x0                   	// #0
   15588:	ldr	x0, [sp, #72]
   1558c:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   15590:	mov	x1, #0x0                   	// #0
   15594:	ldr	x0, [sp, #64]
   15598:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   1559c:	mov	x1, #0x0                   	// #0
   155a0:	ldr	x0, [sp, #56]
   155a4:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   155a8:	b	155b0 <__sanitizer_sandbox_on_notify@@Base+0x40c>
   155ac:	nop
   155b0:	ldp	x19, x30, [sp], #112
   155b4:	ret
   155b8:	str	x30, [sp, #-48]!
   155bc:	str	x0, [sp, #24]
   155c0:	ldr	x0, [sp, #24]
   155c4:	ldrb	w0, [x0]
   155c8:	eor	w0, w0, #0x1
   155cc:	and	w0, w0, #0xff
   155d0:	and	x0, x0, #0xff
   155d4:	str	x0, [sp, #40]
   155d8:	str	xzr, [sp, #32]
   155dc:	ldr	x1, [sp, #40]
   155e0:	ldr	x0, [sp, #32]
   155e4:	cmp	x1, x0
   155e8:	cset	w0, eq  // eq = none
   155ec:	and	w0, w0, #0xff
   155f0:	and	x0, x0, #0xff
   155f4:	cmp	x0, #0x0
   155f8:	b.eq	1561c <__sanitizer_sandbox_on_notify@@Base+0x478>  // b.none
   155fc:	ldr	x4, [sp, #32]
   15600:	ldr	x3, [sp, #40]
   15604:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   15608:	add	x2, x0, #0xd98
   1560c:	mov	w1, #0x6d                  	// #109
   15610:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   15614:	add	x0, x0, #0xcd0
   15618:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1561c:	ldr	x0, [sp, #24]
   15620:	mov	w1, #0x1                   	// #1
   15624:	strb	w1, [x0]
   15628:	bl	1044c <__sancov_default_options@@Base+0xa0>
   1562c:	ldr	x0, [sp, #24]
   15630:	add	x0, x0, #0x8
   15634:	mov	x1, #0x0                   	// #0
   15638:	bl	15d54 <__sanitizer_cov_pcs_init@@Base+0x290>
   1563c:	nop
   15640:	ldr	x30, [sp], #48
   15644:	ret
   15648:	str	x30, [sp, #-96]!
   1564c:	str	x0, [sp, #40]
   15650:	str	x1, [sp, #32]
   15654:	str	x2, [sp, #24]
   15658:	ldr	x0, [sp, #40]
   1565c:	ldrb	w0, [x0]
   15660:	eor	w0, w0, #0x1
   15664:	and	w0, w0, #0xff
   15668:	cmp	w0, #0x0
   1566c:	b.eq	15678 <__sanitizer_sandbox_on_notify@@Base+0x4d4>  // b.none
   15670:	ldr	x0, [sp, #40]
   15674:	bl	155b8 <__sanitizer_sandbox_on_notify@@Base+0x414>
   15678:	ldr	x0, [sp, #32]
   1567c:	ldr	w0, [x0]
   15680:	cmp	w0, #0x0
   15684:	cset	w0, eq  // eq = none
   15688:	and	w0, w0, #0xff
   1568c:	and	x0, x0, #0xff
   15690:	str	x0, [sp, #72]
   15694:	str	xzr, [sp, #64]
   15698:	ldr	x1, [sp, #72]
   1569c:	ldr	x0, [sp, #64]
   156a0:	cmp	x1, x0
   156a4:	cset	w0, eq  // eq = none
   156a8:	and	w0, w0, #0xff
   156ac:	and	x0, x0, #0xff
   156b0:	cmp	x0, #0x0
   156b4:	b.eq	156d8 <__sanitizer_sandbox_on_notify@@Base+0x534>  // b.none
   156b8:	ldr	x4, [sp, #64]
   156bc:	ldr	x3, [sp, #72]
   156c0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   156c4:	add	x2, x0, #0xdb0
   156c8:	mov	w1, #0x77                  	// #119
   156cc:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   156d0:	add	x0, x0, #0xcd0
   156d4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   156d8:	ldr	x0, [sp, #32]
   156dc:	str	x0, [sp, #56]
   156e0:	ldr	x0, [sp, #24]
   156e4:	str	x0, [sp, #48]
   156e8:	ldr	x1, [sp, #56]
   156ec:	ldr	x0, [sp, #48]
   156f0:	cmp	x1, x0
   156f4:	cset	w0, eq  // eq = none
   156f8:	and	w0, w0, #0xff
   156fc:	and	x0, x0, #0xff
   15700:	cmp	x0, #0x0
   15704:	b.eq	15728 <__sanitizer_sandbox_on_notify@@Base+0x584>  // b.none
   15708:	ldr	x4, [sp, #48]
   1570c:	ldr	x3, [sp, #56]
   15710:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   15714:	add	x2, x0, #0xdc8
   15718:	mov	w1, #0x78                  	// #120
   1571c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   15720:	add	x0, x0, #0xcd0
   15724:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   15728:	ldr	x0, [sp, #40]
   1572c:	add	x0, x0, #0x8
   15730:	bl	15d90 <__sanitizer_cov_pcs_init@@Base+0x2cc>
   15734:	str	w0, [sp, #92]
   15738:	ldr	x0, [sp, #32]
   1573c:	str	x0, [sp, #80]
   15740:	ldr	x1, [sp, #80]
   15744:	ldr	x0, [sp, #24]
   15748:	cmp	x1, x0
   1574c:	b.cs	15778 <__sanitizer_sandbox_on_notify@@Base+0x5d4>  // b.hs, b.nlast
   15750:	ldr	w0, [sp, #92]
   15754:	add	w0, w0, #0x1
   15758:	str	w0, [sp, #92]
   1575c:	ldr	x0, [sp, #80]
   15760:	ldr	w1, [sp, #92]
   15764:	str	w1, [x0]
   15768:	ldr	x0, [sp, #80]
   1576c:	add	x0, x0, #0x4
   15770:	str	x0, [sp, #80]
   15774:	b	15740 <__sanitizer_sandbox_on_notify@@Base+0x59c>
   15778:	ldr	x0, [sp, #40]
   1577c:	add	x0, x0, #0x8
   15780:	ldr	w1, [sp, #92]
   15784:	bl	15da8 <__sanitizer_cov_pcs_init@@Base+0x2e4>
   15788:	nop
   1578c:	ldr	x30, [sp], #96
   15790:	ret
   15794:	str	x30, [sp, #-64]!
   15798:	str	x0, [sp, #40]
   1579c:	str	x1, [sp, #32]
   157a0:	str	x2, [sp, #24]
   157a4:	ldr	x0, [sp, #32]
   157a8:	ldr	w0, [x0]
   157ac:	str	w0, [sp, #60]
   157b0:	ldr	w0, [sp, #60]
   157b4:	cmp	w0, #0x0
   157b8:	b.eq	15814 <__sanitizer_sandbox_on_notify@@Base+0x670>  // b.none
   157bc:	ldr	x0, [sp, #40]
   157c0:	add	x2, x0, #0x8
   157c4:	ldr	w0, [sp, #60]
   157c8:	sub	w0, w0, #0x1
   157cc:	mov	w0, w0
   157d0:	mov	x1, x0
   157d4:	mov	x0, x2
   157d8:	bl	15e28 <__sanitizer_cov_pcs_init@@Base+0x364>
   157dc:	str	x0, [sp, #48]
   157e0:	mov	w1, #0x1                   	// #1
   157e4:	ldr	x0, [sp, #48]
   157e8:	bl	11080 <__sancov_default_options@@Base+0xcd4>
   157ec:	cmp	x0, #0x0
   157f0:	cset	w0, eq  // eq = none
   157f4:	and	w0, w0, #0xff
   157f8:	cmp	w0, #0x0
   157fc:	b.eq	15818 <__sanitizer_sandbox_on_notify@@Base+0x674>  // b.none
   15800:	mov	w2, #0x1                   	// #1
   15804:	ldr	x1, [sp, #24]
   15808:	ldr	x0, [sp, #48]
   1580c:	bl	11104 <__sancov_default_options@@Base+0xd58>
   15810:	b	15818 <__sanitizer_sandbox_on_notify@@Base+0x674>
   15814:	nop
   15818:	ldr	x30, [sp], #64
   1581c:	ret
   15820:	stp	x19, x30, [sp, #-32]!
   15824:	str	x0, [sp, #24]
   15828:	ldr	x0, [sp, #24]
   1582c:	add	x0, x0, #0x8
   15830:	mov	x1, #0x0                   	// #0
   15834:	bl	15e28 <__sanitizer_cov_pcs_init@@Base+0x364>
   15838:	mov	x19, x0
   1583c:	ldr	x0, [sp, #24]
   15840:	add	x0, x0, #0x8
   15844:	bl	15d90 <__sanitizer_cov_pcs_init@@Base+0x2cc>
   15848:	lsl	x0, x0, #3
   1584c:	mov	x2, x0
   15850:	mov	w1, #0x0                   	// #0
   15854:	mov	x0, x19
   15858:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   1585c:	nop
   15860:	ldp	x19, x30, [sp], #32
   15864:	ret
   15868:	stp	x19, x30, [sp, #-32]!
   1586c:	str	x0, [sp, #24]
   15870:	ldr	x0, [sp, #24]
   15874:	ldrb	w0, [x0]
   15878:	eor	w0, w0, #0x1
   1587c:	and	w0, w0, #0xff
   15880:	cmp	w0, #0x0
   15884:	b.ne	158a0 <__sanitizer_sandbox_on_notify@@Base+0x6fc>  // b.any
   15888:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   1588c:	ldrb	w0, [x0, #161]
   15890:	eor	w0, w0, #0x1
   15894:	and	w0, w0, #0xff
   15898:	cmp	w0, #0x0
   1589c:	b.eq	158a8 <__sanitizer_sandbox_on_notify@@Base+0x704>  // b.none
   158a0:	mov	w0, #0x1                   	// #1
   158a4:	b	158ac <__sanitizer_sandbox_on_notify@@Base+0x708>
   158a8:	mov	w0, #0x0                   	// #0
   158ac:	cmp	w0, #0x0
   158b0:	b.ne	158e0 <__sanitizer_sandbox_on_notify@@Base+0x73c>  // b.any
   158b4:	ldr	x0, [sp, #24]
   158b8:	add	x0, x0, #0x8
   158bc:	bl	15ea4 <__sanitizer_cov_pcs_init@@Base+0x3e0>
   158c0:	mov	x19, x0
   158c4:	ldr	x0, [sp, #24]
   158c8:	add	x0, x0, #0x8
   158cc:	bl	15d90 <__sanitizer_cov_pcs_init@@Base+0x2cc>
   158d0:	mov	x1, x0
   158d4:	mov	x0, x19
   158d8:	bl	6890 <__sanitizer_dump_coverage@plt>
   158dc:	b	158e4 <__sanitizer_sandbox_on_notify@@Base+0x740>
   158e0:	nop
   158e4:	ldp	x19, x30, [sp], #32
   158e8:	ret
   158ec:	str	x30, [sp, #-32]!
   158f0:	strb	w0, [sp, #31]
   158f4:	str	x1, [sp, #16]
   158f8:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   158fc:	add	x0, x0, #0xbd0
   15900:	ldrb	w0, [x0]
   15904:	cmp	w0, #0x0
   15908:	b.ne	15938 <__sanitizer_sandbox_on_notify@@Base+0x794>  // b.any
   1590c:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   15910:	add	x0, x0, #0xbd0
   15914:	ldrb	w1, [sp, #31]
   15918:	strb	w1, [x0]
   1591c:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   15920:	ldr	x0, [x0, #3952]
   15924:	bl	23518 <__sanitizer_set_report_fd@@Base+0x936c>
   15928:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1592c:	ldr	x0, [x0, #3952]
   15930:	bl	31308 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8080>
   15934:	b	1593c <__sanitizer_sandbox_on_notify@@Base+0x798>
   15938:	nop
   1593c:	ldr	x30, [sp], #32
   15940:	ret

0000000000015944 <__sanitizer_dump_coverage@@Base>:
   15944:	str	x30, [sp, #-32]!
   15948:	str	x0, [sp, #24]
   1594c:	str	x1, [sp, #16]
   15950:	ldr	x1, [sp, #16]
   15954:	ldr	x0, [sp, #24]
   15958:	bl	1536c <__sanitizer_sandbox_on_notify@@Base+0x1c8>
   1595c:	nop
   15960:	ldr	x30, [sp], #32
   15964:	ret

0000000000015968 <__sanitizer_cov_trace_pc_guard@@Base>:
   15968:	str	x30, [sp, #-32]!
   1596c:	mov	x1, x30
   15970:	str	x0, [sp, #24]
   15974:	ldr	x0, [sp, #24]
   15978:	ldr	w0, [x0]
   1597c:	cmp	w0, #0x0
   15980:	b.eq	159a4 <__sanitizer_cov_trace_pc_guard@@Base+0x3c>  // b.none
   15984:	mov	x0, x1
   15988:	sub	x0, x0, #0x1
   1598c:	mov	x2, x0
   15990:	ldr	x1, [sp, #24]
   15994:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   15998:	add	x0, x0, #0xbb0
   1599c:	bl	15794 <__sanitizer_sandbox_on_notify@@Base+0x5f0>
   159a0:	b	159a8 <__sanitizer_cov_trace_pc_guard@@Base+0x40>
   159a4:	nop
   159a8:	ldr	x30, [sp], #32
   159ac:	ret

00000000000159b0 <__sanitizer_cov_trace_pc_guard_init@@Base>:
   159b0:	str	x30, [sp, #-32]!
   159b4:	str	x0, [sp, #24]
   159b8:	str	x1, [sp, #16]
   159bc:	ldr	x1, [sp, #24]
   159c0:	ldr	x0, [sp, #16]
   159c4:	cmp	x1, x0
   159c8:	b.eq	159f4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x44>  // b.none
   159cc:	ldr	x0, [sp, #24]
   159d0:	ldr	w0, [x0]
   159d4:	cmp	w0, #0x0
   159d8:	b.ne	159f4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x44>  // b.any
   159dc:	ldr	x2, [sp, #16]
   159e0:	ldr	x1, [sp, #24]
   159e4:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   159e8:	add	x0, x0, #0xbb0
   159ec:	bl	15648 <__sanitizer_sandbox_on_notify@@Base+0x4a4>
   159f0:	b	159f8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x48>
   159f4:	nop
   159f8:	ldr	x30, [sp], #32
   159fc:	ret

0000000000015a00 <__sanitizer_dump_trace_pc_guard_coverage@@Base>:
   15a00:	str	x30, [sp, #-16]!
   15a04:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   15a08:	add	x0, x0, #0xbb0
   15a0c:	bl	15868 <__sanitizer_sandbox_on_notify@@Base+0x6c4>
   15a10:	nop
   15a14:	ldr	x30, [sp], #16
   15a18:	ret

0000000000015a1c <__sanitizer_cov_dump@@Base>:
   15a1c:	str	x30, [sp, #-16]!
   15a20:	bl	6a10 <__sanitizer_dump_trace_pc_guard_coverage@plt>
   15a24:	nop
   15a28:	ldr	x30, [sp], #16
   15a2c:	ret

0000000000015a30 <__sanitizer_cov_reset@@Base>:
   15a30:	str	x30, [sp, #-16]!
   15a34:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   15a38:	add	x0, x0, #0xbb0
   15a3c:	bl	15820 <__sanitizer_sandbox_on_notify@@Base+0x67c>
   15a40:	nop
   15a44:	ldr	x30, [sp], #16
   15a48:	ret

0000000000015a4c <__sanitizer_cov_trace_cmp@@Base>:
   15a4c:	nop
   15a50:	ret

0000000000015a54 <__sanitizer_cov_trace_cmp1@@Base>:
   15a54:	nop
   15a58:	ret

0000000000015a5c <__sanitizer_cov_trace_cmp2@@Base>:
   15a5c:	nop
   15a60:	ret

0000000000015a64 <__sanitizer_cov_trace_cmp4@@Base>:
   15a64:	nop
   15a68:	ret

0000000000015a6c <__sanitizer_cov_trace_cmp8@@Base>:
   15a6c:	nop
   15a70:	ret

0000000000015a74 <__sanitizer_cov_trace_const_cmp1@@Base>:
   15a74:	nop
   15a78:	ret

0000000000015a7c <__sanitizer_cov_trace_const_cmp2@@Base>:
   15a7c:	nop
   15a80:	ret

0000000000015a84 <__sanitizer_cov_trace_const_cmp4@@Base>:
   15a84:	nop
   15a88:	ret

0000000000015a8c <__sanitizer_cov_trace_const_cmp8@@Base>:
   15a8c:	nop
   15a90:	ret

0000000000015a94 <__sanitizer_cov_trace_switch@@Base>:
   15a94:	nop
   15a98:	ret

0000000000015a9c <__sanitizer_cov_trace_div4@@Base>:
   15a9c:	nop
   15aa0:	ret

0000000000015aa4 <__sanitizer_cov_trace_div8@@Base>:
   15aa4:	nop
   15aa8:	ret

0000000000015aac <__sanitizer_cov_trace_gep@@Base>:
   15aac:	nop
   15ab0:	ret

0000000000015ab4 <__sanitizer_cov_trace_pc_indir@@Base>:
   15ab4:	nop
   15ab8:	ret

0000000000015abc <__sanitizer_cov_8bit_counters_init@@Base>:
   15abc:	nop
   15ac0:	ret

0000000000015ac4 <__sanitizer_cov_pcs_init@@Base>:
   15ac4:	nop
   15ac8:	ret
   15acc:	str	x30, [sp, #-112]!
   15ad0:	str	x0, [sp, #40]
   15ad4:	str	x1, [sp, #32]
   15ad8:	strb	w2, [sp, #24]
   15adc:	ldr	x0, [sp, #32]
   15ae0:	cmp	x0, #0x1
   15ae4:	b.ls	15d48 <__sanitizer_cov_pcs_init@@Base+0x284>  // b.plast
   15ae8:	mov	x0, #0x1                   	// #1
   15aec:	str	x0, [sp, #104]
   15af0:	ldr	x1, [sp, #104]
   15af4:	ldr	x0, [sp, #32]
   15af8:	cmp	x1, x0
   15afc:	b.cs	15bac <__sanitizer_cov_pcs_init@@Base+0xe8>  // b.hs, b.nlast
   15b00:	ldr	x0, [sp, #104]
   15b04:	str	x0, [sp, #96]
   15b08:	ldr	x0, [sp, #96]
   15b0c:	cmp	x0, #0x0
   15b10:	b.eq	15b9c <__sanitizer_cov_pcs_init@@Base+0xd8>  // b.none
   15b14:	ldr	x0, [sp, #96]
   15b18:	sub	x0, x0, #0x1
   15b1c:	lsr	x0, x0, #1
   15b20:	str	x0, [sp, #64]
   15b24:	ldr	x0, [sp, #64]
   15b28:	lsl	x0, x0, #3
   15b2c:	ldr	x1, [sp, #40]
   15b30:	add	x3, x1, x0
   15b34:	ldr	x0, [sp, #96]
   15b38:	lsl	x0, x0, #3
   15b3c:	ldr	x1, [sp, #40]
   15b40:	add	x1, x1, x0
   15b44:	add	x0, sp, #0x18
   15b48:	mov	x2, x1
   15b4c:	mov	x1, x3
   15b50:	bl	15ebc <__sanitizer_cov_pcs_init@@Base+0x3f8>
   15b54:	and	w0, w0, #0xff
   15b58:	cmp	w0, #0x0
   15b5c:	b.eq	15b98 <__sanitizer_cov_pcs_init@@Base+0xd4>  // b.none
   15b60:	ldr	x0, [sp, #96]
   15b64:	lsl	x0, x0, #3
   15b68:	ldr	x1, [sp, #40]
   15b6c:	add	x2, x1, x0
   15b70:	ldr	x0, [sp, #64]
   15b74:	lsl	x0, x0, #3
   15b78:	ldr	x1, [sp, #40]
   15b7c:	add	x0, x1, x0
   15b80:	mov	x1, x0
   15b84:	mov	x0, x2
   15b88:	bl	15ef0 <__sanitizer_cov_pcs_init@@Base+0x42c>
   15b8c:	ldr	x0, [sp, #64]
   15b90:	str	x0, [sp, #96]
   15b94:	b	15b08 <__sanitizer_cov_pcs_init@@Base+0x44>
   15b98:	nop
   15b9c:	ldr	x0, [sp, #104]
   15ba0:	add	x0, x0, #0x1
   15ba4:	str	x0, [sp, #104]
   15ba8:	b	15af0 <__sanitizer_cov_pcs_init@@Base+0x2c>
   15bac:	ldr	x0, [sp, #32]
   15bb0:	sub	x0, x0, #0x1
   15bb4:	str	x0, [sp, #88]
   15bb8:	ldr	x0, [sp, #88]
   15bbc:	cmp	x0, #0x0
   15bc0:	b.eq	15d4c <__sanitizer_cov_pcs_init@@Base+0x288>  // b.none
   15bc4:	ldr	x0, [sp, #88]
   15bc8:	lsl	x0, x0, #3
   15bcc:	ldr	x1, [sp, #40]
   15bd0:	add	x0, x1, x0
   15bd4:	mov	x1, x0
   15bd8:	ldr	x0, [sp, #40]
   15bdc:	bl	15ef0 <__sanitizer_cov_pcs_init@@Base+0x42c>
   15be0:	str	xzr, [sp, #80]
   15be4:	ldr	x1, [sp, #80]
   15be8:	ldr	x0, [sp, #88]
   15bec:	cmp	x1, x0
   15bf0:	b.cs	15d38 <__sanitizer_cov_pcs_init@@Base+0x274>  // b.hs, b.nlast
   15bf4:	ldr	x0, [sp, #80]
   15bf8:	lsl	x0, x0, #1
   15bfc:	add	x0, x0, #0x1
   15c00:	str	x0, [sp, #56]
   15c04:	ldr	x0, [sp, #80]
   15c08:	add	x0, x0, #0x1
   15c0c:	lsl	x0, x0, #1
   15c10:	str	x0, [sp, #48]
   15c14:	ldr	x0, [sp, #80]
   15c18:	str	x0, [sp, #72]
   15c1c:	ldr	x1, [sp, #56]
   15c20:	ldr	x0, [sp, #88]
   15c24:	cmp	x1, x0
   15c28:	b.cs	15c70 <__sanitizer_cov_pcs_init@@Base+0x1ac>  // b.hs, b.nlast
   15c2c:	ldr	x0, [sp, #72]
   15c30:	lsl	x0, x0, #3
   15c34:	ldr	x1, [sp, #40]
   15c38:	add	x3, x1, x0
   15c3c:	ldr	x0, [sp, #56]
   15c40:	lsl	x0, x0, #3
   15c44:	ldr	x1, [sp, #40]
   15c48:	add	x1, x1, x0
   15c4c:	add	x0, sp, #0x18
   15c50:	mov	x2, x1
   15c54:	mov	x1, x3
   15c58:	bl	15ebc <__sanitizer_cov_pcs_init@@Base+0x3f8>
   15c5c:	and	w0, w0, #0xff
   15c60:	cmp	w0, #0x0
   15c64:	b.eq	15c70 <__sanitizer_cov_pcs_init@@Base+0x1ac>  // b.none
   15c68:	mov	w0, #0x1                   	// #1
   15c6c:	b	15c74 <__sanitizer_cov_pcs_init@@Base+0x1b0>
   15c70:	mov	w0, #0x0                   	// #0
   15c74:	cmp	w0, #0x0
   15c78:	b.eq	15c84 <__sanitizer_cov_pcs_init@@Base+0x1c0>  // b.none
   15c7c:	ldr	x0, [sp, #56]
   15c80:	str	x0, [sp, #72]
   15c84:	ldr	x1, [sp, #48]
   15c88:	ldr	x0, [sp, #88]
   15c8c:	cmp	x1, x0
   15c90:	b.cs	15cd8 <__sanitizer_cov_pcs_init@@Base+0x214>  // b.hs, b.nlast
   15c94:	ldr	x0, [sp, #72]
   15c98:	lsl	x0, x0, #3
   15c9c:	ldr	x1, [sp, #40]
   15ca0:	add	x3, x1, x0
   15ca4:	ldr	x0, [sp, #48]
   15ca8:	lsl	x0, x0, #3
   15cac:	ldr	x1, [sp, #40]
   15cb0:	add	x1, x1, x0
   15cb4:	add	x0, sp, #0x18
   15cb8:	mov	x2, x1
   15cbc:	mov	x1, x3
   15cc0:	bl	15ebc <__sanitizer_cov_pcs_init@@Base+0x3f8>
   15cc4:	and	w0, w0, #0xff
   15cc8:	cmp	w0, #0x0
   15ccc:	b.eq	15cd8 <__sanitizer_cov_pcs_init@@Base+0x214>  // b.none
   15cd0:	mov	w0, #0x1                   	// #1
   15cd4:	b	15cdc <__sanitizer_cov_pcs_init@@Base+0x218>
   15cd8:	mov	w0, #0x0                   	// #0
   15cdc:	cmp	w0, #0x0
   15ce0:	b.eq	15cec <__sanitizer_cov_pcs_init@@Base+0x228>  // b.none
   15ce4:	ldr	x0, [sp, #48]
   15ce8:	str	x0, [sp, #72]
   15cec:	ldr	x1, [sp, #72]
   15cf0:	ldr	x0, [sp, #80]
   15cf4:	cmp	x1, x0
   15cf8:	b.eq	15d34 <__sanitizer_cov_pcs_init@@Base+0x270>  // b.none
   15cfc:	ldr	x0, [sp, #80]
   15d00:	lsl	x0, x0, #3
   15d04:	ldr	x1, [sp, #40]
   15d08:	add	x2, x1, x0
   15d0c:	ldr	x0, [sp, #72]
   15d10:	lsl	x0, x0, #3
   15d14:	ldr	x1, [sp, #40]
   15d18:	add	x0, x1, x0
   15d1c:	mov	x1, x0
   15d20:	mov	x0, x2
   15d24:	bl	15ef0 <__sanitizer_cov_pcs_init@@Base+0x42c>
   15d28:	ldr	x0, [sp, #72]
   15d2c:	str	x0, [sp, #80]
   15d30:	b	15be4 <__sanitizer_cov_pcs_init@@Base+0x120>
   15d34:	nop
   15d38:	ldr	x0, [sp, #88]
   15d3c:	sub	x0, x0, #0x1
   15d40:	str	x0, [sp, #88]
   15d44:	b	15bb8 <__sanitizer_cov_pcs_init@@Base+0xf4>
   15d48:	nop
   15d4c:	ldr	x30, [sp], #112
   15d50:	ret
   15d54:	str	x30, [sp, #-32]!
   15d58:	str	x0, [sp, #24]
   15d5c:	str	x1, [sp, #16]
   15d60:	ldr	x0, [sp, #24]
   15d64:	str	xzr, [x0, #8]
   15d68:	ldr	x0, [sp, #24]
   15d6c:	str	xzr, [x0, #16]
   15d70:	ldr	x0, [sp, #24]
   15d74:	str	xzr, [x0]
   15d78:	ldr	x1, [sp, #16]
   15d7c:	ldr	x0, [sp, #24]
   15d80:	bl	15f30 <__sanitizer_cov_pcs_init@@Base+0x46c>
   15d84:	nop
   15d88:	ldr	x30, [sp], #32
   15d8c:	ret
   15d90:	sub	sp, sp, #0x10
   15d94:	str	x0, [sp, #8]
   15d98:	ldr	x0, [sp, #8]
   15d9c:	ldr	x0, [x0, #16]
   15da0:	add	sp, sp, #0x10
   15da4:	ret
   15da8:	str	x30, [sp, #-32]!
   15dac:	str	x0, [sp, #24]
   15db0:	str	x1, [sp, #16]
   15db4:	ldr	x0, [sp, #24]
   15db8:	ldr	x0, [x0, #16]
   15dbc:	ldr	x1, [sp, #16]
   15dc0:	cmp	x1, x0
   15dc4:	b.ls	15e10 <__sanitizer_cov_pcs_init@@Base+0x34c>  // b.plast
   15dc8:	ldr	x1, [sp, #16]
   15dcc:	ldr	x0, [sp, #24]
   15dd0:	bl	15f30 <__sanitizer_cov_pcs_init@@Base+0x46c>
   15dd4:	ldr	x0, [sp, #24]
   15dd8:	ldr	x1, [x0]
   15ddc:	ldr	x0, [sp, #24]
   15de0:	ldr	x0, [x0, #16]
   15de4:	lsl	x0, x0, #3
   15de8:	add	x3, x1, x0
   15dec:	ldr	x0, [sp, #24]
   15df0:	ldr	x0, [x0, #16]
   15df4:	ldr	x1, [sp, #16]
   15df8:	sub	x0, x1, x0
   15dfc:	lsl	x0, x0, #3
   15e00:	mov	x2, x0
   15e04:	mov	w1, #0x0                   	// #0
   15e08:	mov	x0, x3
   15e0c:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   15e10:	ldr	x0, [sp, #24]
   15e14:	ldr	x1, [sp, #16]
   15e18:	str	x1, [x0, #16]
   15e1c:	nop
   15e20:	ldr	x30, [sp], #32
   15e24:	ret
   15e28:	str	x30, [sp, #-48]!
   15e2c:	str	x0, [sp, #24]
   15e30:	str	x1, [sp, #16]
   15e34:	ldr	x0, [sp, #16]
   15e38:	str	x0, [sp, #40]
   15e3c:	ldr	x0, [sp, #24]
   15e40:	ldr	x0, [x0, #16]
   15e44:	str	x0, [sp, #32]
   15e48:	ldr	x1, [sp, #40]
   15e4c:	ldr	x0, [sp, #32]
   15e50:	cmp	x1, x0
   15e54:	cset	w0, cs  // cs = hs, nlast
   15e58:	and	w0, w0, #0xff
   15e5c:	and	x0, x0, #0xff
   15e60:	cmp	x0, #0x0
   15e64:	b.eq	15e88 <__sanitizer_cov_pcs_init@@Base+0x3c4>  // b.none
   15e68:	ldr	x4, [sp, #32]
   15e6c:	ldr	x3, [sp, #40]
   15e70:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   15e74:	add	x2, x0, #0xde0
   15e78:	mov	w1, #0x1b6                 	// #438
   15e7c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   15e80:	add	x0, x0, #0xdf8
   15e84:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   15e88:	ldr	x0, [sp, #24]
   15e8c:	ldr	x1, [x0]
   15e90:	ldr	x0, [sp, #16]
   15e94:	lsl	x0, x0, #3
   15e98:	add	x0, x1, x0
   15e9c:	ldr	x30, [sp], #48
   15ea0:	ret
   15ea4:	sub	sp, sp, #0x10
   15ea8:	str	x0, [sp, #8]
   15eac:	ldr	x0, [sp, #8]
   15eb0:	ldr	x0, [x0]
   15eb4:	add	sp, sp, #0x10
   15eb8:	ret
   15ebc:	sub	sp, sp, #0x20
   15ec0:	str	x0, [sp, #24]
   15ec4:	str	x1, [sp, #16]
   15ec8:	str	x2, [sp, #8]
   15ecc:	ldr	x0, [sp, #16]
   15ed0:	ldr	x1, [x0]
   15ed4:	ldr	x0, [sp, #8]
   15ed8:	ldr	x0, [x0]
   15edc:	cmp	x1, x0
   15ee0:	cset	w0, cc  // cc = lo, ul, last
   15ee4:	and	w0, w0, #0xff
   15ee8:	add	sp, sp, #0x20
   15eec:	ret
   15ef0:	sub	sp, sp, #0x20
   15ef4:	str	x0, [sp, #8]
   15ef8:	str	x1, [sp]
   15efc:	ldr	x0, [sp, #8]
   15f00:	ldr	x0, [x0]
   15f04:	str	x0, [sp, #24]
   15f08:	ldr	x0, [sp]
   15f0c:	ldr	x1, [x0]
   15f10:	ldr	x0, [sp, #8]
   15f14:	str	x1, [x0]
   15f18:	ldr	x0, [sp]
   15f1c:	ldr	x1, [sp, #24]
   15f20:	str	x1, [x0]
   15f24:	nop
   15f28:	add	sp, sp, #0x20
   15f2c:	ret
   15f30:	str	x30, [sp, #-32]!
   15f34:	str	x0, [sp, #24]
   15f38:	str	x1, [sp, #16]
   15f3c:	ldr	x0, [sp, #24]
   15f40:	bl	15f78 <__sanitizer_cov_pcs_init@@Base+0x4b4>
   15f44:	mov	x1, x0
   15f48:	ldr	x0, [sp, #16]
   15f4c:	cmp	x0, x1
   15f50:	cset	w0, hi  // hi = pmore
   15f54:	and	w0, w0, #0xff
   15f58:	cmp	w0, #0x0
   15f5c:	b.eq	15f6c <__sanitizer_cov_pcs_init@@Base+0x4a8>  // b.none
   15f60:	ldr	x1, [sp, #16]
   15f64:	ldr	x0, [sp, #24]
   15f68:	bl	15f94 <__sanitizer_cov_pcs_init@@Base+0x4d0>
   15f6c:	nop
   15f70:	ldr	x30, [sp], #32
   15f74:	ret
   15f78:	sub	sp, sp, #0x10
   15f7c:	str	x0, [sp, #8]
   15f80:	ldr	x0, [sp, #8]
   15f84:	ldr	x0, [x0, #8]
   15f88:	lsr	x0, x0, #3
   15f8c:	add	sp, sp, #0x10
   15f90:	ret
   15f94:	stp	x19, x30, [sp, #-80]!
   15f98:	str	x0, [sp, #24]
   15f9c:	str	x1, [sp, #16]
   15fa0:	ldr	x0, [sp, #16]
   15fa4:	str	x0, [sp, #72]
   15fa8:	str	xzr, [sp, #64]
   15fac:	ldr	x1, [sp, #72]
   15fb0:	ldr	x0, [sp, #64]
   15fb4:	cmp	x1, x0
   15fb8:	cset	w0, ls  // ls = plast
   15fbc:	and	w0, w0, #0xff
   15fc0:	and	x0, x0, #0xff
   15fc4:	cmp	x0, #0x0
   15fc8:	b.eq	15fec <__sanitizer_cov_pcs_init@@Base+0x528>  // b.none
   15fcc:	ldr	x4, [sp, #64]
   15fd0:	ldr	x3, [sp, #72]
   15fd4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   15fd8:	add	x2, x0, #0xe38
   15fdc:	mov	w1, #0x1fc                 	// #508
   15fe0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   15fe4:	add	x0, x0, #0xdf8
   15fe8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   15fec:	ldr	x0, [sp, #24]
   15ff0:	ldr	x0, [x0, #16]
   15ff4:	str	x0, [sp, #56]
   15ff8:	ldr	x0, [sp, #16]
   15ffc:	str	x0, [sp, #48]
   16000:	ldr	x1, [sp, #56]
   16004:	ldr	x0, [sp, #48]
   16008:	cmp	x1, x0
   1600c:	cset	w0, hi  // hi = pmore
   16010:	and	w0, w0, #0xff
   16014:	and	x0, x0, #0xff
   16018:	cmp	x0, #0x0
   1601c:	b.eq	16040 <__sanitizer_cov_pcs_init@@Base+0x57c>  // b.none
   16020:	ldr	x4, [sp, #48]
   16024:	ldr	x3, [sp, #56]
   16028:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   1602c:	add	x2, x0, #0xe58
   16030:	mov	w1, #0x1fd                 	// #509
   16034:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   16038:	add	x0, x0, #0xdf8
   1603c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   16040:	ldr	x0, [sp, #16]
   16044:	lsl	x19, x0, #3
   16048:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   1604c:	mov	x1, x0
   16050:	mov	x0, x19
   16054:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   16058:	str	x0, [sp, #40]
   1605c:	mov	w2, #0x0                   	// #0
   16060:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   16064:	add	x1, x0, #0xe78
   16068:	ldr	x0, [sp, #40]
   1606c:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   16070:	str	x0, [sp, #32]
   16074:	ldr	x0, [sp, #24]
   16078:	ldr	x1, [x0]
   1607c:	ldr	x0, [sp, #24]
   16080:	ldr	x0, [x0, #16]
   16084:	lsl	x0, x0, #3
   16088:	mov	x2, x0
   1608c:	ldr	x0, [sp, #32]
   16090:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   16094:	ldr	x0, [sp, #24]
   16098:	ldr	x2, [x0]
   1609c:	ldr	x0, [sp, #24]
   160a0:	ldr	x0, [x0, #8]
   160a4:	mov	x1, x0
   160a8:	mov	x0, x2
   160ac:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   160b0:	ldr	x0, [sp, #24]
   160b4:	ldr	x1, [sp, #32]
   160b8:	str	x1, [x0]
   160bc:	ldr	x0, [sp, #24]
   160c0:	ldr	x1, [sp, #40]
   160c4:	str	x1, [x0, #8]
   160c8:	nop
   160cc:	ldp	x19, x30, [sp], #80
   160d0:	ret
   160d4:	stp	x19, x30, [sp, #-48]!
   160d8:	str	x0, [sp, #24]
   160dc:	mov	w2, #0x0                   	// #0
   160e0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   160e4:	add	x1, x0, #0xf98
   160e8:	mov	x0, #0xa50                 	// #2640
   160ec:	movk	x0, #0x41, lsl #16
   160f0:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   160f4:	str	x0, [sp, #40]
   160f8:	ldr	x0, [sp, #40]
   160fc:	mov	x1, x0
   16100:	mov	x0, #0xa50                 	// #2640
   16104:	movk	x0, #0x41, lsl #16
   16108:	bl	911c <__asan_backtrace_open@plt+0x24ac>
   1610c:	mov	x19, x0
   16110:	ldr	x1, [sp, #24]
   16114:	mov	x0, x19
   16118:	bl	16128 <__sanitizer_cov_pcs_init@@Base+0x664>
   1611c:	mov	x0, x19
   16120:	ldp	x19, x30, [sp], #48
   16124:	ret
   16128:	str	x30, [sp, #-32]!
   1612c:	str	x0, [sp, #24]
   16130:	str	x1, [sp, #16]
   16134:	ldr	x0, [sp, #24]
   16138:	bl	16be8 <__sanitizer_cov_pcs_init@@Base+0x1124>
   1613c:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   16140:	add	x1, x0, #0xcb8
   16144:	ldr	x0, [sp, #24]
   16148:	str	x1, [x0]
   1614c:	ldr	x0, [sp, #24]
   16150:	add	x0, x0, #0x8
   16154:	bl	16b58 <__sanitizer_cov_pcs_init@@Base+0x1094>
   16158:	ldr	x0, [sp, #24]
   1615c:	add	x0, x0, #0x410, lsl #12
   16160:	ldr	x1, [sp, #16]
   16164:	ldrb	w1, [x1]
   16168:	strb	w1, [x0, #2632]
   1616c:	ldr	x0, [sp, #24]
   16170:	add	x0, x0, #0x10
   16174:	bl	16c0c <__sanitizer_cov_pcs_init@@Base+0x1148>
   16178:	nop
   1617c:	ldr	x30, [sp], #32
   16180:	ret
   16184:	sub	sp, sp, #0x10
   16188:	str	x0, [sp, #8]
   1618c:	mov	x0, #0x0                   	// #0
   16190:	add	sp, sp, #0x10
   16194:	ret
   16198:	sub	sp, sp, #0x10
   1619c:	str	x0, [sp, #8]
   161a0:	str	x1, [sp]
   161a4:	nop
   161a8:	add	sp, sp, #0x10
   161ac:	ret
   161b0:	str	x30, [sp, #-48]!
   161b4:	str	x0, [sp, #24]
   161b8:	str	x1, [sp, #16]
   161bc:	mov	x2, #0x0                   	// #0
   161c0:	mov	x1, #0x0                   	// #0
   161c4:	mov	x0, #0x8b8                 	// #2232
   161c8:	bl	107a8 <__sancov_default_options@@Base+0x3fc>
   161cc:	str	x0, [sp, #40]
   161d0:	ldr	x0, [sp, #40]
   161d4:	ldr	x1, [sp, #16]
   161d8:	str	x1, [x0]
   161dc:	ldr	x0, [sp, #40]
   161e0:	add	x0, x0, #0x8
   161e4:	bl	16c58 <__sanitizer_cov_pcs_init@@Base+0x1194>
   161e8:	ldr	x0, [sp, #40]
   161ec:	strb	wzr, [x0, #2224]
   161f0:	ldr	x0, [sp, #40]
   161f4:	ldr	x30, [sp], #48
   161f8:	ret
   161fc:	str	x30, [sp, #-32]!
   16200:	str	x0, [sp, #24]
   16204:	str	x1, [sp, #16]
   16208:	mov	x1, #0x0                   	// #0
   1620c:	ldr	x0, [sp, #16]
   16210:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   16214:	nop
   16218:	ldr	x30, [sp], #32
   1621c:	ret
   16220:	str	x30, [sp, #-48]!
   16224:	str	x0, [sp, #40]
   16228:	str	x1, [sp, #32]
   1622c:	str	x2, [sp, #24]
   16230:	ldr	x0, [sp, #24]
   16234:	str	xzr, [x0]
   16238:	ldr	x0, [sp, #32]
   1623c:	ldr	x0, [x0]
   16240:	ldr	x1, [x0]
   16244:	ldr	x0, [sp, #32]
   16248:	blr	x1
   1624c:	mov	w1, w0
   16250:	ldr	x0, [sp, #24]
   16254:	str	w1, [x0, #8]
   16258:	nop
   1625c:	ldr	x30, [sp], #48
   16260:	ret
   16264:	str	x30, [sp, #-48]!
   16268:	str	x0, [sp, #40]
   1626c:	str	x1, [sp, #32]
   16270:	str	x2, [sp, #24]
   16274:	ldr	x0, [sp, #40]
   16278:	add	x2, x0, #0x10
   1627c:	ldr	x0, [sp, #24]
   16280:	ldr	x0, [x0]
   16284:	mov	x1, x0
   16288:	mov	x0, x2
   1628c:	bl	16c8c <__sanitizer_cov_pcs_init@@Base+0x11c8>
   16290:	and	w0, w0, #0xff
   16294:	eor	w0, w0, #0x1
   16298:	and	w0, w0, #0xff
   1629c:	cmp	w0, #0x0
   162a0:	b.eq	162c0 <__sanitizer_cov_pcs_init@@Base+0x7fc>  // b.none
   162a4:	ldr	x0, [sp, #40]
   162a8:	add	x0, x0, #0x10
   162ac:	ldr	x1, [sp, #24]
   162b0:	bl	16ce8 <__sanitizer_cov_pcs_init@@Base+0x1224>
   162b4:	mov	x1, x0
   162b8:	ldr	x0, [sp, #24]
   162bc:	str	x1, [x0]
   162c0:	ldr	x0, [sp, #40]
   162c4:	add	x2, x0, #0x10
   162c8:	ldr	x0, [sp, #32]
   162cc:	add	x0, x0, #0x8
   162d0:	mov	x1, x0
   162d4:	mov	x0, x2
   162d8:	bl	16f90 <__sanitizer_cov_pcs_init@@Base+0x14cc>
   162dc:	nop
   162e0:	ldr	x30, [sp], #48
   162e4:	ret
   162e8:	stp	x19, x20, [sp, #-96]!
   162ec:	stp	x21, x22, [sp, #16]
   162f0:	str	x30, [sp, #32]
   162f4:	str	x0, [sp, #72]
   162f8:	str	x1, [sp, #64]
   162fc:	str	x2, [sp, #56]
   16300:	strb	w3, [sp, #55]
   16304:	ldr	x0, [sp, #64]
   16308:	ldr	x0, [x0, #16]
   1630c:	str	x0, [sp, #88]
   16310:	ldr	x0, [sp, #88]
   16314:	add	x0, x0, #0x8
   16318:	bl	16fbc <__sanitizer_cov_pcs_init@@Base+0x14f8>
   1631c:	and	w0, w0, #0xff
   16320:	cmp	w0, #0x0
   16324:	b.ne	16464 <__sanitizer_cov_pcs_init@@Base+0x9a0>  // b.any
   16328:	ldr	x0, [sp, #72]
   1632c:	add	x3, x0, #0x10
   16330:	ldr	x0, [sp, #88]
   16334:	add	x1, x0, #0x8
   16338:	ldr	x0, [sp, #56]
   1633c:	ldr	x0, [x0]
   16340:	mov	x2, x0
   16344:	mov	x0, x3
   16348:	bl	16fd8 <__sanitizer_cov_pcs_init@@Base+0x1514>
   1634c:	and	w0, w0, #0xff
   16350:	cmp	w0, #0x0
   16354:	b.ne	1646c <__sanitizer_cov_pcs_init@@Base+0x9a8>  // b.any
   16358:	ldr	x0, [sp, #72]
   1635c:	add	x1, x0, #0x8
   16360:	add	x0, sp, #0x50
   16364:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   16368:	ldr	x2, [sp, #56]
   1636c:	ldr	x1, [sp, #88]
   16370:	ldr	x0, [sp, #72]
   16374:	bl	16264 <__sanitizer_cov_pcs_init@@Base+0x7a0>
   16378:	ldr	x0, [sp, #72]
   1637c:	add	x3, x0, #0x10
   16380:	ldr	x0, [sp, #88]
   16384:	add	x1, x0, #0x8
   16388:	ldr	x0, [sp, #56]
   1638c:	ldr	x0, [x0]
   16390:	mov	x2, x0
   16394:	mov	x0, x3
   16398:	bl	170d8 <__sanitizer_cov_pcs_init@@Base+0x1614>
   1639c:	and	w0, w0, #0xff
   163a0:	cmp	w0, #0x0
   163a4:	b.eq	163b0 <__sanitizer_cov_pcs_init@@Base+0x8ec>  // b.none
   163a8:	mov	w19, #0x0                   	// #0
   163ac:	b	16454 <__sanitizer_cov_pcs_init@@Base+0x990>
   163b0:	ldr	x0, [sp, #72]
   163b4:	add	x3, x0, #0x10
   163b8:	ldr	x0, [sp, #88]
   163bc:	add	x1, x0, #0x8
   163c0:	ldr	x0, [sp, #56]
   163c4:	ldr	x0, [x0]
   163c8:	mov	x2, x0
   163cc:	mov	x0, x3
   163d0:	bl	17124 <__sanitizer_cov_pcs_init@@Base+0x1660>
   163d4:	and	w0, w0, #0xff
   163d8:	cmp	w0, #0x0
   163dc:	b.eq	16450 <__sanitizer_cov_pcs_init@@Base+0x98c>  // b.none
   163e0:	ldr	x0, [sp, #72]
   163e4:	add	x19, x0, #0x10
   163e8:	ldr	x0, [sp, #88]
   163ec:	add	x20, x0, #0x8
   163f0:	ldr	x0, [sp, #56]
   163f4:	ldr	x21, [x0]
   163f8:	ldr	x0, [sp, #64]
   163fc:	ldr	x0, [x0]
   16400:	ldr	x1, [x0]
   16404:	ldr	x0, [sp, #64]
   16408:	blr	x1
   1640c:	mov	w22, w0
   16410:	ldr	x0, [sp, #64]
   16414:	ldr	x0, [x0]
   16418:	add	x0, x0, #0x8
   1641c:	ldr	x1, [x0]
   16420:	ldr	x0, [sp, #64]
   16424:	blr	x1
   16428:	mov	w4, w0
   1642c:	mov	w3, w22
   16430:	mov	x2, x21
   16434:	mov	x1, x20
   16438:	mov	x0, x19
   1643c:	bl	17188 <__sanitizer_cov_pcs_init@@Base+0x16c4>
   16440:	ldr	x2, [sp, #56]
   16444:	ldr	x1, [sp, #64]
   16448:	ldr	x0, [sp, #72]
   1644c:	bl	16480 <__sanitizer_cov_pcs_init@@Base+0x9bc>
   16450:	mov	w19, #0x1                   	// #1
   16454:	add	x0, sp, #0x50
   16458:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   1645c:	cmp	w19, #0x1
   16460:	b	16470 <__sanitizer_cov_pcs_init@@Base+0x9ac>
   16464:	nop
   16468:	b	16470 <__sanitizer_cov_pcs_init@@Base+0x9ac>
   1646c:	nop
   16470:	ldp	x21, x22, [sp, #16]
   16474:	ldr	x30, [sp, #32]
   16478:	ldp	x19, x20, [sp], #96
   1647c:	ret
   16480:	sub	sp, sp, #0x130
   16484:	str	x30, [sp]
   16488:	str	x0, [sp, #40]
   1648c:	str	x1, [sp, #32]
   16490:	str	x2, [sp, #24]
   16494:	ldr	x0, [sp, #32]
   16498:	ldr	x0, [x0, #16]
   1649c:	str	x0, [sp, #288]
   164a0:	ldr	x0, [sp, #40]
   164a4:	add	x5, x0, #0x10
   164a8:	ldr	x0, [sp, #288]
   164ac:	add	x1, x0, #0x8
   164b0:	ldr	x0, [sp, #24]
   164b4:	ldr	x0, [x0]
   164b8:	add	x2, sp, #0x40
   164bc:	mov	x4, #0x14                  	// #20
   164c0:	mov	x3, x2
   164c4:	mov	x2, x0
   164c8:	mov	x0, x5
   164cc:	bl	172d0 <__sanitizer_cov_pcs_init@@Base+0x180c>
   164d0:	str	x0, [sp, #280]
   164d4:	ldr	x0, [sp, #280]
   164d8:	cmp	x0, #0x0
   164dc:	b.ne	164f0 <__sanitizer_cov_pcs_init@@Base+0xa2c>  // b.any
   164e0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   164e4:	add	x0, x0, #0xfb0
   164e8:	bl	259c8 <OnPrint@@Base+0x3a8>
   164ec:	b	166cc <__sanitizer_cov_pcs_init@@Base+0xc08>
   164f0:	ldr	x0, [sp, #24]
   164f4:	ldr	x0, [x0]
   164f8:	str	x0, [sp, #272]
   164fc:	ldr	x0, [sp, #64]
   16500:	str	x0, [sp, #264]
   16504:	ldr	x1, [sp, #272]
   16508:	ldr	x0, [sp, #264]
   1650c:	cmp	x1, x0
   16510:	cset	w0, ne  // ne = any
   16514:	and	w0, w0, #0xff
   16518:	and	x0, x0, #0xff
   1651c:	cmp	x0, #0x0
   16520:	b.eq	16544 <__sanitizer_cov_pcs_init@@Base+0xa80>  // b.none
   16524:	ldr	x4, [sp, #264]
   16528:	ldr	x3, [sp, #272]
   1652c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   16530:	add	x2, x0, #0xfd8
   16534:	mov	w1, #0x7f                  	// #127
   16538:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   1653c:	add	x0, x0, #0xff8
   16540:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   16544:	ldr	x0, [sp, #288]
   16548:	mov	w1, #0x1                   	// #1
   1654c:	strb	w1, [x0, #2224]
   16550:	mov	x1, #0x14                  	// #20
   16554:	ldr	x0, [sp, #280]
   16558:	bl	9374 <__asan_backtrace_open@plt+0x2704>
   1655c:	str	x0, [sp, #280]
   16560:	ldr	x0, [sp, #288]
   16564:	add	x0, x0, #0x628
   16568:	str	x0, [sp, #256]
   1656c:	ldr	x0, [sp, #280]
   16570:	mov	w1, w0
   16574:	ldr	x0, [sp, #256]
   16578:	str	w1, [x0]
   1657c:	str	xzr, [sp, #296]
   16580:	ldr	x1, [sp, #296]
   16584:	ldr	x0, [sp, #280]
   16588:	cmp	x1, x0
   1658c:	b.cs	166cc <__sanitizer_cov_pcs_init@@Base+0xc08>  // b.hs, b.nlast
   16590:	ldr	x0, [sp, #296]
   16594:	lsl	x0, x0, #3
   16598:	add	x1, sp, #0x40
   1659c:	ldr	x0, [x1, x0]
   165a0:	str	x0, [sp, #248]
   165a4:	ldr	x0, [sp, #296]
   165a8:	add	x0, x0, #0x1
   165ac:	ldr	x1, [sp, #280]
   165b0:	udiv	x2, x0, x1
   165b4:	ldr	x1, [sp, #280]
   165b8:	mul	x1, x2, x1
   165bc:	sub	x0, x0, x1
   165c0:	lsl	x0, x0, #3
   165c4:	add	x1, sp, #0x40
   165c8:	ldr	x0, [x1, x0]
   165cc:	str	x0, [sp, #240]
   165d0:	ldr	x0, [sp, #40]
   165d4:	add	x0, x0, #0x10
   165d8:	ldr	x1, [sp, #248]
   165dc:	bl	17478 <__sanitizer_cov_pcs_init@@Base+0x19b4>
   165e0:	str	x0, [sp, #232]
   165e4:	ldr	x0, [sp, #40]
   165e8:	add	x0, x0, #0x10
   165ec:	ldr	x1, [sp, #240]
   165f0:	bl	17478 <__sanitizer_cov_pcs_init@@Base+0x19b4>
   165f4:	str	x0, [sp, #224]
   165f8:	mov	w0, #0xffffffff            	// #-1
   165fc:	str	w0, [sp, #60]
   16600:	mov	w0, #0xffffffff            	// #-1
   16604:	str	w0, [sp, #56]
   16608:	str	wzr, [sp, #52]
   1660c:	ldr	x0, [sp, #40]
   16610:	add	x0, x0, #0x10
   16614:	add	x3, sp, #0x34
   16618:	add	x2, sp, #0x38
   1661c:	add	x1, sp, #0x3c
   16620:	mov	x5, x3
   16624:	mov	x4, x2
   16628:	mov	x3, x1
   1662c:	ldr	x2, [sp, #240]
   16630:	ldr	x1, [sp, #248]
   16634:	bl	174b0 <__sanitizer_cov_pcs_init@@Base+0x19ec>
   16638:	ldr	w0, [sp, #52]
   1663c:	sxtw	x1, w0
   16640:	ldr	x2, [sp, #256]
   16644:	ldr	x0, [sp, #296]
   16648:	lsl	x0, x0, #5
   1664c:	add	x0, x2, x0
   16650:	str	x1, [x0, #8]
   16654:	ldr	x0, [sp, #232]
   16658:	ldr	x1, [x0, #16]
   1665c:	ldr	x2, [sp, #256]
   16660:	ldr	x0, [sp, #296]
   16664:	lsl	x0, x0, #5
   16668:	add	x0, x2, x0
   1666c:	str	x1, [x0, #16]
   16670:	ldr	x0, [sp, #224]
   16674:	ldr	x1, [x0, #16]
   16678:	ldr	x2, [sp, #256]
   1667c:	ldr	x0, [sp, #296]
   16680:	lsl	x0, x0, #5
   16684:	add	x0, x2, x0
   16688:	str	x1, [x0, #24]
   1668c:	ldr	w1, [sp, #56]
   16690:	ldr	x2, [sp, #256]
   16694:	ldr	x0, [sp, #296]
   16698:	lsl	x0, x0, #5
   1669c:	add	x0, x2, x0
   166a0:	str	w1, [x0, #32]
   166a4:	ldr	w1, [sp, #60]
   166a8:	ldr	x2, [sp, #256]
   166ac:	ldr	x0, [sp, #296]
   166b0:	lsl	x0, x0, #5
   166b4:	add	x0, x2, x0
   166b8:	str	w1, [x0, #36]
   166bc:	ldr	x0, [sp, #296]
   166c0:	add	x0, x0, #0x1
   166c4:	str	x0, [sp, #296]
   166c8:	b	16580 <__sanitizer_cov_pcs_init@@Base+0xabc>
   166cc:	ldr	x30, [sp]
   166d0:	add	sp, sp, #0x130
   166d4:	ret
   166d8:	stp	x19, x20, [sp, #-128]!
   166dc:	stp	x21, x22, [sp, #16]
   166e0:	str	x30, [sp, #32]
   166e4:	str	x0, [sp, #72]
   166e8:	str	x1, [sp, #64]
   166ec:	str	x2, [sp, #56]
   166f0:	strb	w3, [sp, #55]
   166f4:	strb	w4, [sp, #54]
   166f8:	ldr	x0, [sp, #64]
   166fc:	ldr	x0, [x0, #16]
   16700:	str	x0, [sp, #112]
   16704:	str	wzr, [sp, #124]
   16708:	ldr	x0, [sp, #72]
   1670c:	add	x0, x0, #0x410, lsl #12
   16710:	ldrb	w0, [x0, #2632]
   16714:	cmp	w0, #0x0
   16718:	b.eq	16734 <__sanitizer_cov_pcs_init@@Base+0xc70>  // b.none
   1671c:	ldr	x0, [sp, #64]
   16720:	ldr	x0, [x0]
   16724:	ldr	x1, [x0]
   16728:	ldr	x0, [sp, #64]
   1672c:	blr	x1
   16730:	str	w0, [sp, #124]
   16734:	ldr	x0, [sp, #72]
   16738:	add	x4, x0, #0x10
   1673c:	ldr	x0, [sp, #112]
   16740:	add	x1, x0, #0x8
   16744:	ldr	x0, [sp, #56]
   16748:	ldr	x0, [x0]
   1674c:	ldr	w3, [sp, #124]
   16750:	mov	x2, x0
   16754:	mov	x0, x4
   16758:	bl	17604 <__sanitizer_cov_pcs_init@@Base+0x1b40>
   1675c:	and	w0, w0, #0xff
   16760:	cmp	w0, #0x0
   16764:	b.ne	16900 <__sanitizer_cov_pcs_init@@Base+0xe3c>  // b.any
   16768:	ldr	x0, [sp, #72]
   1676c:	add	x4, x0, #0x10
   16770:	ldr	x0, [sp, #112]
   16774:	add	x1, x0, #0x8
   16778:	ldr	x0, [sp, #56]
   1677c:	ldr	x0, [x0]
   16780:	ldr	w3, [sp, #124]
   16784:	mov	x2, x0
   16788:	mov	x0, x4
   1678c:	bl	176c4 <__sanitizer_cov_pcs_init@@Base+0x1c00>
   16790:	and	w0, w0, #0xff
   16794:	cmp	w0, #0x0
   16798:	b.ne	16908 <__sanitizer_cov_pcs_init@@Base+0xe44>  // b.any
   1679c:	ldr	x0, [sp, #72]
   167a0:	add	x1, x0, #0x8
   167a4:	add	x0, sp, #0x58
   167a8:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   167ac:	ldr	x2, [sp, #56]
   167b0:	ldr	x1, [sp, #112]
   167b4:	ldr	x0, [sp, #72]
   167b8:	bl	16264 <__sanitizer_cov_pcs_init@@Base+0x7a0>
   167bc:	ldrb	w0, [sp, #55]
   167c0:	cmp	w0, #0x0
   167c4:	b.eq	16844 <__sanitizer_cov_pcs_init@@Base+0xd80>  // b.none
   167c8:	ldr	x0, [sp, #72]
   167cc:	add	x3, x0, #0x10
   167d0:	ldr	x0, [sp, #112]
   167d4:	add	x1, x0, #0x8
   167d8:	ldr	x0, [sp, #56]
   167dc:	ldr	x0, [x0]
   167e0:	mov	x2, x0
   167e4:	mov	x0, x3
   167e8:	bl	170d8 <__sanitizer_cov_pcs_init@@Base+0x1614>
   167ec:	and	w0, w0, #0xff
   167f0:	eor	w0, w0, #0x1
   167f4:	and	w0, w0, #0xff
   167f8:	and	x0, x0, #0xff
   167fc:	str	x0, [sp, #104]
   16800:	str	xzr, [sp, #96]
   16804:	ldr	x1, [sp, #104]
   16808:	ldr	x0, [sp, #96]
   1680c:	cmp	x1, x0
   16810:	cset	w0, eq  // eq = none
   16814:	and	w0, w0, #0xff
   16818:	and	x0, x0, #0xff
   1681c:	cmp	x0, #0x0
   16820:	b.eq	16844 <__sanitizer_cov_pcs_init@@Base+0xd80>  // b.none
   16824:	ldr	x4, [sp, #96]
   16828:	ldr	x3, [sp, #104]
   1682c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   16830:	add	x2, x0, #0x48
   16834:	mov	w1, #0xa5                  	// #165
   16838:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   1683c:	add	x0, x0, #0xff8
   16840:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   16844:	ldrb	w0, [sp, #54]
   16848:	eor	w0, w0, #0x1
   1684c:	and	w0, w0, #0xff
   16850:	cmp	w0, #0x0
   16854:	b.eq	168cc <__sanitizer_cov_pcs_init@@Base+0xe08>  // b.none
   16858:	ldr	x0, [sp, #72]
   1685c:	add	x20, x0, #0x10
   16860:	ldr	x0, [sp, #112]
   16864:	add	x21, x0, #0x8
   16868:	ldr	x0, [sp, #56]
   1686c:	ldr	x22, [x0]
   16870:	ldr	w0, [sp, #124]
   16874:	cmp	w0, #0x0
   16878:	b.ne	16898 <__sanitizer_cov_pcs_init@@Base+0xdd4>  // b.any
   1687c:	ldr	x0, [sp, #64]
   16880:	ldr	x0, [x0]
   16884:	ldr	x1, [x0]
   16888:	ldr	x0, [sp, #64]
   1688c:	blr	x1
   16890:	mov	w19, w0
   16894:	b	1689c <__sanitizer_cov_pcs_init@@Base+0xdd8>
   16898:	ldr	w19, [sp, #124]
   1689c:	ldr	x0, [sp, #64]
   168a0:	ldr	x0, [x0]
   168a4:	add	x0, x0, #0x8
   168a8:	ldr	x1, [x0]
   168ac:	ldr	x0, [sp, #64]
   168b0:	blr	x1
   168b4:	mov	w4, w0
   168b8:	mov	w3, w19
   168bc:	mov	x2, x22
   168c0:	mov	x1, x21
   168c4:	mov	x0, x20
   168c8:	bl	17188 <__sanitizer_cov_pcs_init@@Base+0x16c4>
   168cc:	ldr	x0, [sp, #72]
   168d0:	add	x4, x0, #0x10
   168d4:	ldr	x0, [sp, #112]
   168d8:	add	x1, x0, #0x8
   168dc:	ldr	x0, [sp, #56]
   168e0:	ldr	x0, [x0]
   168e4:	ldr	w3, [sp, #124]
   168e8:	mov	x2, x0
   168ec:	mov	x0, x4
   168f0:	bl	17738 <__sanitizer_cov_pcs_init@@Base+0x1c74>
   168f4:	add	x0, sp, #0x58
   168f8:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   168fc:	b	1690c <__sanitizer_cov_pcs_init@@Base+0xe48>
   16900:	nop
   16904:	b	1690c <__sanitizer_cov_pcs_init@@Base+0xe48>
   16908:	nop
   1690c:	ldp	x21, x22, [sp, #16]
   16910:	ldr	x30, [sp, #32]
   16914:	ldp	x19, x20, [sp], #128
   16918:	ret
   1691c:	str	x30, [sp, #-48]!
   16920:	str	x0, [sp, #40]
   16924:	str	x1, [sp, #32]
   16928:	str	x2, [sp, #24]
   1692c:	strb	w3, [sp, #23]
   16930:	ldr	x0, [sp, #40]
   16934:	add	x3, x0, #0x10
   16938:	ldr	x0, [sp, #32]
   1693c:	ldr	x0, [x0, #16]
   16940:	add	x1, x0, #0x8
   16944:	ldr	x0, [sp, #24]
   16948:	ldr	x0, [x0]
   1694c:	mov	x2, x0
   16950:	mov	x0, x3
   16954:	bl	17790 <__sanitizer_cov_pcs_init@@Base+0x1ccc>
   16958:	nop
   1695c:	ldr	x30, [sp], #48
   16960:	ret
   16964:	str	x30, [sp, #-64]!
   16968:	str	x0, [sp, #40]
   1696c:	str	x1, [sp, #32]
   16970:	str	x2, [sp, #24]
   16974:	ldr	x0, [sp, #24]
   16978:	ldr	x0, [x0]
   1697c:	cmp	x0, #0x0
   16980:	b.eq	169ec <__sanitizer_cov_pcs_init@@Base+0xf28>  // b.none
   16984:	ldr	x0, [sp, #40]
   16988:	add	x1, x0, #0x8
   1698c:	add	x0, sp, #0x38
   16990:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   16994:	ldr	x0, [sp, #40]
   16998:	add	x2, x0, #0x10
   1699c:	ldr	x0, [sp, #24]
   169a0:	ldr	x0, [x0]
   169a4:	mov	x1, x0
   169a8:	mov	x0, x2
   169ac:	bl	16c8c <__sanitizer_cov_pcs_init@@Base+0x11c8>
   169b0:	and	w0, w0, #0xff
   169b4:	cmp	w0, #0x0
   169b8:	b.eq	169d8 <__sanitizer_cov_pcs_init@@Base+0xf14>  // b.none
   169bc:	ldr	x0, [sp, #40]
   169c0:	add	x2, x0, #0x10
   169c4:	ldr	x0, [sp, #24]
   169c8:	ldr	x0, [x0]
   169cc:	mov	x1, x0
   169d0:	mov	x0, x2
   169d4:	bl	177f0 <__sanitizer_cov_pcs_init@@Base+0x1d2c>
   169d8:	ldr	x0, [sp, #24]
   169dc:	str	xzr, [x0]
   169e0:	add	x0, sp, #0x38
   169e4:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   169e8:	b	169f0 <__sanitizer_cov_pcs_init@@Base+0xf2c>
   169ec:	nop
   169f0:	ldr	x30, [sp], #64
   169f4:	ret
   169f8:	sub	sp, sp, #0x10
   169fc:	str	x0, [sp, #8]
   16a00:	str	x1, [sp]
   16a04:	ldr	x0, [sp]
   16a08:	ldr	x0, [x0, #16]
   16a0c:	ldrb	w0, [x0, #2224]
   16a10:	eor	w0, w0, #0x1
   16a14:	and	w0, w0, #0xff
   16a18:	cmp	w0, #0x0
   16a1c:	b.eq	16a28 <__sanitizer_cov_pcs_init@@Base+0xf64>  // b.none
   16a20:	mov	x0, #0x0                   	// #0
   16a24:	b	16a40 <__sanitizer_cov_pcs_init@@Base+0xf7c>
   16a28:	ldr	x0, [sp]
   16a2c:	ldr	x0, [x0, #16]
   16a30:	strb	wzr, [x0, #2224]
   16a34:	ldr	x0, [sp]
   16a38:	ldr	x0, [x0, #16]
   16a3c:	add	x0, x0, #0x628
   16a40:	add	sp, sp, #0x10
   16a44:	ret
   16a48:	sub	sp, sp, #0x10
   16a4c:	str	x0, [sp, #8]
   16a50:	mov	x0, #0x0                   	// #0
   16a54:	add	sp, sp, #0x10
   16a58:	ret
   16a5c:	sub	sp, sp, #0x10
   16a60:	str	x0, [sp, #8]
   16a64:	str	x1, [sp]
   16a68:	nop
   16a6c:	add	sp, sp, #0x10
   16a70:	ret
   16a74:	sub	sp, sp, #0x10
   16a78:	str	x0, [sp, #8]
   16a7c:	str	x1, [sp]
   16a80:	mov	x0, #0x0                   	// #0
   16a84:	add	sp, sp, #0x10
   16a88:	ret
   16a8c:	sub	sp, sp, #0x10
   16a90:	str	x0, [sp, #8]
   16a94:	str	x1, [sp]
   16a98:	nop
   16a9c:	add	sp, sp, #0x10
   16aa0:	ret
   16aa4:	sub	sp, sp, #0x20
   16aa8:	str	x0, [sp, #24]
   16aac:	str	x1, [sp, #16]
   16ab0:	str	x2, [sp, #8]
   16ab4:	nop
   16ab8:	add	sp, sp, #0x20
   16abc:	ret
   16ac0:	sub	sp, sp, #0x20
   16ac4:	str	x0, [sp, #24]
   16ac8:	str	x1, [sp, #16]
   16acc:	str	x2, [sp, #8]
   16ad0:	strb	w3, [sp, #7]
   16ad4:	nop
   16ad8:	add	sp, sp, #0x20
   16adc:	ret
   16ae0:	sub	sp, sp, #0x20
   16ae4:	str	x0, [sp, #24]
   16ae8:	str	x1, [sp, #16]
   16aec:	str	x2, [sp, #8]
   16af0:	strb	w3, [sp, #7]
   16af4:	strb	w4, [sp, #6]
   16af8:	nop
   16afc:	add	sp, sp, #0x20
   16b00:	ret
   16b04:	sub	sp, sp, #0x20
   16b08:	str	x0, [sp, #24]
   16b0c:	str	x1, [sp, #16]
   16b10:	str	x2, [sp, #8]
   16b14:	strb	w3, [sp, #7]
   16b18:	nop
   16b1c:	add	sp, sp, #0x20
   16b20:	ret
   16b24:	sub	sp, sp, #0x20
   16b28:	str	x0, [sp, #24]
   16b2c:	str	x1, [sp, #16]
   16b30:	str	x2, [sp, #8]
   16b34:	nop
   16b38:	add	sp, sp, #0x20
   16b3c:	ret
   16b40:	sub	sp, sp, #0x10
   16b44:	str	x0, [sp, #8]
   16b48:	str	x1, [sp]
   16b4c:	mov	x0, #0x0                   	// #0
   16b50:	add	sp, sp, #0x10
   16b54:	ret
   16b58:	str	x30, [sp, #-32]!
   16b5c:	str	x0, [sp, #24]
   16b60:	ldr	x0, [sp, #24]
   16b64:	bl	10d78 <__sancov_default_options@@Base+0x9cc>
   16b68:	nop
   16b6c:	ldr	x30, [sp], #32
   16b70:	ret
   16b74:	str	x30, [sp, #-64]!
   16b78:	str	x0, [sp, #24]
   16b7c:	ldr	x0, [sp, #24]
   16b80:	str	x0, [sp, #56]
   16b84:	str	xzr, [sp, #48]
   16b88:	ldr	x1, [sp, #56]
   16b8c:	ldr	x0, [sp, #48]
   16b90:	cmp	x1, x0
   16b94:	cset	w0, eq  // eq = none
   16b98:	and	w0, w0, #0xff
   16b9c:	and	x0, x0, #0xff
   16ba0:	cmp	x0, #0x0
   16ba4:	b.eq	16bc8 <__sanitizer_cov_pcs_init@@Base+0x1104>  // b.none
   16ba8:	ldr	x4, [sp, #48]
   16bac:	ldr	x3, [sp, #56]
   16bb0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   16bb4:	add	x2, x0, #0xed0
   16bb8:	mov	w1, #0x162                 	// #354
   16bbc:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x2970>
   16bc0:	add	x0, x0, #0xee0
   16bc4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   16bc8:	ldr	x0, [sp, #24]
   16bcc:	rbit	x0, x0
   16bd0:	clz	x0, x0
   16bd4:	sxtw	x0, w0
   16bd8:	str	x0, [sp, #40]
   16bdc:	ldr	x0, [sp, #40]
   16be0:	ldr	x30, [sp], #64
   16be4:	ret
   16be8:	sub	sp, sp, #0x10
   16bec:	str	x0, [sp, #8]
   16bf0:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   16bf4:	add	x1, x0, #0xd18
   16bf8:	ldr	x0, [sp, #8]
   16bfc:	str	x1, [x0]
   16c00:	nop
   16c04:	add	sp, sp, #0x10
   16c08:	ret
   16c0c:	str	x30, [sp, #-32]!
   16c10:	str	x0, [sp, #24]
   16c14:	ldr	x0, [sp, #24]
   16c18:	str	xzr, [x0]
   16c1c:	ldr	x0, [sp, #24]
   16c20:	add	x0, x0, #0x8
   16c24:	bl	178f0 <__sanitizer_cov_pcs_init@@Base+0x1e2c>
   16c28:	ldr	x0, [sp, #24]
   16c2c:	add	x0, x0, #0x210
   16c30:	bl	178f0 <__sanitizer_cov_pcs_init@@Base+0x1e2c>
   16c34:	ldr	x0, [sp, #24]
   16c38:	add	x0, x0, #0x620
   16c3c:	bl	17938 <__sanitizer_cov_pcs_init@@Base+0x1e74>
   16c40:	ldr	x0, [sp, #24]
   16c44:	add	x0, x0, #0x410, lsl #12
   16c48:	str	xzr, [x0, #2608]
   16c4c:	nop
   16c50:	ldr	x30, [sp], #32
   16c54:	ret
   16c58:	str	x30, [sp, #-32]!
   16c5c:	str	x0, [sp, #24]
   16c60:	ldr	x0, [sp, #24]
   16c64:	bl	178f0 <__sanitizer_cov_pcs_init@@Base+0x1e2c>
   16c68:	ldr	x0, [sp, #24]
   16c6c:	str	xzr, [x0, #520]
   16c70:	ldr	x0, [sp, #24]
   16c74:	str	xzr, [x0, #1040]
   16c78:	ldr	x0, [sp, #24]
   16c7c:	str	xzr, [x0, #1560]
   16c80:	nop
   16c84:	ldr	x30, [sp], #32
   16c88:	ret
   16c8c:	stp	x19, x30, [sp, #-32]!
   16c90:	str	x0, [sp, #24]
   16c94:	str	x1, [sp, #16]
   16c98:	ldr	x0, [sp, #16]
   16c9c:	cmp	x0, #0x0
   16ca0:	b.eq	16cdc <__sanitizer_cov_pcs_init@@Base+0x1218>  // b.none
   16ca4:	ldr	x0, [sp, #24]
   16ca8:	bl	179a4 <__sanitizer_cov_pcs_init@@Base+0x1ee0>
   16cac:	mov	x1, x0
   16cb0:	ldr	x0, [sp, #16]
   16cb4:	udiv	x19, x0, x1
   16cb8:	ldr	x0, [sp, #24]
   16cbc:	bl	179a4 <__sanitizer_cov_pcs_init@@Base+0x1ee0>
   16cc0:	mul	x1, x19, x0
   16cc4:	ldr	x0, [sp, #24]
   16cc8:	ldr	x0, [x0]
   16ccc:	cmp	x1, x0
   16cd0:	b.ne	16cdc <__sanitizer_cov_pcs_init@@Base+0x1218>  // b.any
   16cd4:	mov	w0, #0x1                   	// #1
   16cd8:	b	16ce0 <__sanitizer_cov_pcs_init@@Base+0x121c>
   16cdc:	mov	w0, #0x0                   	// #0
   16ce0:	ldp	x19, x30, [sp], #32
   16ce4:	ret
   16ce8:	str	x30, [sp, #-64]!
   16cec:	str	x0, [sp, #24]
   16cf0:	str	x1, [sp, #16]
   16cf4:	ldr	x0, [sp, #24]
   16cf8:	add	x0, x0, #0x8
   16cfc:	bl	179c0 <__sanitizer_cov_pcs_init@@Base+0x1efc>
   16d00:	and	w0, w0, #0xff
   16d04:	eor	w0, w0, #0x1
   16d08:	and	w0, w0, #0xff
   16d0c:	cmp	w0, #0x0
   16d10:	b.eq	16d24 <__sanitizer_cov_pcs_init@@Base+0x1260>  // b.none
   16d14:	ldr	x1, [sp, #16]
   16d18:	ldr	x0, [sp, #24]
   16d1c:	bl	17a24 <__sanitizer_cov_pcs_init@@Base+0x1f60>
   16d20:	b	16f88 <__sanitizer_cov_pcs_init@@Base+0x14c4>
   16d24:	ldr	x0, [sp, #24]
   16d28:	add	x0, x0, #0x210
   16d2c:	bl	179c0 <__sanitizer_cov_pcs_init@@Base+0x1efc>
   16d30:	and	w0, w0, #0xff
   16d34:	eor	w0, w0, #0x1
   16d38:	and	w0, w0, #0xff
   16d3c:	cmp	w0, #0x0
   16d40:	b.eq	16f2c <__sanitizer_cov_pcs_init@@Base+0x1468>  // b.none
   16d44:	ldr	x0, [sp, #24]
   16d48:	add	x0, x0, #0x410, lsl #12
   16d4c:	ldr	x0, [x0, #2608]
   16d50:	sub	x0, x0, #0x1
   16d54:	str	x0, [sp, #56]
   16d58:	ldr	x0, [sp, #56]
   16d5c:	cmp	x0, #0x0
   16d60:	b.lt	16e7c <__sanitizer_cov_pcs_init@@Base+0x13b8>  // b.tstop
   16d64:	ldr	x0, [sp, #24]
   16d68:	add	x3, x0, #0x210
   16d6c:	ldr	x1, [sp, #24]
   16d70:	ldr	x2, [sp, #56]
   16d74:	mov	x0, #0x10a3                	// #4259
   16d78:	movk	x0, #0x2, lsl #16
   16d7c:	add	x0, x2, x0
   16d80:	lsl	x0, x0, #4
   16d84:	add	x0, x1, x0
   16d88:	ldrh	w0, [x0]
   16d8c:	and	x0, x0, #0xffff
   16d90:	mov	x1, x0
   16d94:	mov	x0, x3
   16d98:	bl	17a70 <__sanitizer_cov_pcs_init@@Base+0x1fac>
   16d9c:	and	w0, w0, #0xff
   16da0:	cmp	w0, #0x0
   16da4:	b.ne	16dec <__sanitizer_cov_pcs_init@@Base+0x1328>  // b.any
   16da8:	ldr	x0, [sp, #24]
   16dac:	add	x3, x0, #0x210
   16db0:	ldr	x1, [sp, #24]
   16db4:	ldr	x2, [sp, #56]
   16db8:	mov	x0, #0x10a3                	// #4259
   16dbc:	movk	x0, #0x2, lsl #16
   16dc0:	add	x0, x2, x0
   16dc4:	lsl	x0, x0, #4
   16dc8:	add	x0, x1, x0
   16dcc:	ldrh	w0, [x0, #2]
   16dd0:	and	x0, x0, #0xffff
   16dd4:	mov	x1, x0
   16dd8:	mov	x0, x3
   16ddc:	bl	17a70 <__sanitizer_cov_pcs_init@@Base+0x1fac>
   16de0:	and	w0, w0, #0xff
   16de4:	cmp	w0, #0x0
   16de8:	b.eq	16df4 <__sanitizer_cov_pcs_init@@Base+0x1330>  // b.none
   16dec:	mov	w0, #0x1                   	// #1
   16df0:	b	16df8 <__sanitizer_cov_pcs_init@@Base+0x1334>
   16df4:	mov	w0, #0x0                   	// #0
   16df8:	cmp	w0, #0x0
   16dfc:	b.eq	16e6c <__sanitizer_cov_pcs_init@@Base+0x13a8>  // b.none
   16e00:	ldr	x1, [sp, #56]
   16e04:	mov	x0, #0x10a3                	// #4259
   16e08:	movk	x0, #0x2, lsl #16
   16e0c:	add	x0, x1, x0
   16e10:	lsl	x0, x0, #4
   16e14:	ldr	x1, [sp, #24]
   16e18:	add	x2, x1, x0
   16e1c:	ldr	x0, [sp, #24]
   16e20:	add	x0, x0, #0x410, lsl #12
   16e24:	ldr	x0, [x0, #2608]
   16e28:	sub	x1, x0, #0x1
   16e2c:	mov	x0, #0x10a3                	// #4259
   16e30:	movk	x0, #0x2, lsl #16
   16e34:	add	x0, x1, x0
   16e38:	lsl	x0, x0, #4
   16e3c:	ldr	x1, [sp, #24]
   16e40:	add	x0, x1, x0
   16e44:	mov	x1, x0
   16e48:	mov	x0, x2
   16e4c:	bl	17b24 <__sanitizer_cov_pcs_init@@Base+0x2060>
   16e50:	ldr	x0, [sp, #24]
   16e54:	add	x0, x0, #0x410, lsl #12
   16e58:	ldr	x0, [x0, #2608]
   16e5c:	sub	x1, x0, #0x1
   16e60:	ldr	x0, [sp, #24]
   16e64:	add	x0, x0, #0x410, lsl #12
   16e68:	str	x1, [x0, #2608]
   16e6c:	ldr	x0, [sp, #56]
   16e70:	sub	x0, x0, #0x1
   16e74:	str	x0, [sp, #56]
   16e78:	b	16d58 <__sanitizer_cov_pcs_init@@Base+0x1294>
   16e7c:	ldr	x0, [sp, #24]
   16e80:	add	x0, x0, #0x8
   16e84:	bl	179c0 <__sanitizer_cov_pcs_init@@Base+0x1efc>
   16e88:	and	w0, w0, #0xff
   16e8c:	and	x0, x0, #0xff
   16e90:	str	x0, [sp, #48]
   16e94:	str	xzr, [sp, #40]
   16e98:	ldr	x1, [sp, #48]
   16e9c:	ldr	x0, [sp, #40]
   16ea0:	cmp	x1, x0
   16ea4:	cset	w0, eq  // eq = none
   16ea8:	and	w0, w0, #0xff
   16eac:	and	x0, x0, #0xff
   16eb0:	cmp	x0, #0x0
   16eb4:	b.eq	16ed8 <__sanitizer_cov_pcs_init@@Base+0x1414>  // b.none
   16eb8:	ldr	x4, [sp, #40]
   16ebc:	ldr	x3, [sp, #48]
   16ec0:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   16ec4:	add	x2, x0, #0x70
   16ec8:	mov	w1, #0xa7                  	// #167
   16ecc:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   16ed0:	add	x0, x0, #0x98
   16ed4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   16ed8:	ldr	x0, [sp, #24]
   16edc:	add	x2, x0, #0x620
   16ee0:	ldr	x0, [sp, #24]
   16ee4:	add	x0, x0, #0x210
   16ee8:	mov	x1, x0
   16eec:	mov	x0, x2
   16ef0:	bl	17b64 <__sanitizer_cov_pcs_init@@Base+0x20a0>
   16ef4:	ldr	x0, [sp, #24]
   16ef8:	add	x2, x0, #0x8
   16efc:	ldr	x0, [sp, #24]
   16f00:	add	x0, x0, #0x210
   16f04:	mov	x1, x0
   16f08:	mov	x0, x2
   16f0c:	bl	17bf0 <__sanitizer_cov_pcs_init@@Base+0x212c>
   16f10:	ldr	x0, [sp, #24]
   16f14:	add	x0, x0, #0x210
   16f18:	bl	178f0 <__sanitizer_cov_pcs_init@@Base+0x1e2c>
   16f1c:	ldr	x1, [sp, #16]
   16f20:	ldr	x0, [sp, #24]
   16f24:	bl	17a24 <__sanitizer_cov_pcs_init@@Base+0x1f60>
   16f28:	b	16f88 <__sanitizer_cov_pcs_init@@Base+0x14c4>
   16f2c:	ldr	x0, [sp, #24]
   16f30:	bl	179a4 <__sanitizer_cov_pcs_init@@Base+0x1ee0>
   16f34:	mov	x1, x0
   16f38:	ldr	x0, [sp, #24]
   16f3c:	ldr	x0, [x0]
   16f40:	add	x1, x1, x0
   16f44:	ldr	x0, [sp, #24]
   16f48:	str	x1, [x0]
   16f4c:	ldr	x0, [sp, #24]
   16f50:	add	x0, x0, #0x210
   16f54:	bl	178f0 <__sanitizer_cov_pcs_init@@Base+0x1e2c>
   16f58:	ldr	x0, [sp, #24]
   16f5c:	add	x0, x0, #0x8
   16f60:	bl	17d10 <__sanitizer_cov_pcs_init@@Base+0x224c>
   16f64:	ldr	x0, [sp, #24]
   16f68:	add	x0, x0, #0x620
   16f6c:	bl	17938 <__sanitizer_cov_pcs_init@@Base+0x1e74>
   16f70:	ldr	x0, [sp, #24]
   16f74:	add	x0, x0, #0x410, lsl #12
   16f78:	str	xzr, [x0, #2608]
   16f7c:	ldr	x1, [sp, #16]
   16f80:	ldr	x0, [sp, #24]
   16f84:	bl	17a24 <__sanitizer_cov_pcs_init@@Base+0x1f60>
   16f88:	ldr	x30, [sp], #64
   16f8c:	ret
   16f90:	str	x30, [sp, #-32]!
   16f94:	str	x0, [sp, #24]
   16f98:	str	x1, [sp, #16]
   16f9c:	ldr	x0, [sp, #24]
   16fa0:	ldr	x0, [x0]
   16fa4:	mov	x1, x0
   16fa8:	ldr	x0, [sp, #16]
   16fac:	bl	17d9c <__sanitizer_cov_pcs_init@@Base+0x22d8>
   16fb0:	nop
   16fb4:	ldr	x30, [sp], #32
   16fb8:	ret
   16fbc:	str	x30, [sp, #-32]!
   16fc0:	str	x0, [sp, #24]
   16fc4:	ldr	x0, [sp, #24]
   16fc8:	bl	179c0 <__sanitizer_cov_pcs_init@@Base+0x1efc>
   16fcc:	and	w0, w0, #0xff
   16fd0:	ldr	x30, [sp], #32
   16fd4:	ret
   16fd8:	stp	x19, x30, [sp, #-80]!
   16fdc:	str	x0, [sp, #40]
   16fe0:	str	x1, [sp, #32]
   16fe4:	str	x2, [sp, #24]
   16fe8:	ldr	x0, [sp, #32]
   16fec:	bl	17df0 <__sanitizer_cov_pcs_init@@Base+0x232c>
   16ff0:	str	x0, [sp, #64]
   16ff4:	ldr	x0, [sp, #24]
   16ff8:	cmp	x0, #0x0
   16ffc:	b.eq	17038 <__sanitizer_cov_pcs_init@@Base+0x1574>  // b.none
   17000:	ldr	x0, [sp, #40]
   17004:	ldr	x0, [x0]
   17008:	ldr	x1, [sp, #64]
   1700c:	cmp	x1, x0
   17010:	b.ne	17038 <__sanitizer_cov_pcs_init@@Base+0x1574>  // b.any
   17014:	ldr	x1, [sp, #24]
   17018:	ldr	x0, [sp, #40]
   1701c:	bl	17e08 <__sanitizer_cov_pcs_init@@Base+0x2344>
   17020:	mov	x1, x0
   17024:	ldr	x0, [sp, #64]
   17028:	cmp	x0, x1
   1702c:	b.ne	17038 <__sanitizer_cov_pcs_init@@Base+0x1574>  // b.any
   17030:	mov	w0, #0x1                   	// #1
   17034:	b	1703c <__sanitizer_cov_pcs_init@@Base+0x1578>
   17038:	mov	w0, #0x0                   	// #0
   1703c:	cmp	w0, #0x0
   17040:	b.eq	170cc <__sanitizer_cov_pcs_init@@Base+0x1608>  // b.none
   17044:	ldr	x1, [sp, #24]
   17048:	ldr	x0, [sp, #40]
   1704c:	bl	17e3c <__sanitizer_cov_pcs_init@@Base+0x2378>
   17050:	str	x0, [sp, #56]
   17054:	str	xzr, [sp, #72]
   17058:	ldr	x0, [sp, #32]
   1705c:	bl	17e6c <__sanitizer_cov_pcs_init@@Base+0x23a8>
   17060:	str	x0, [sp, #48]
   17064:	ldr	x1, [sp, #72]
   17068:	ldr	x0, [sp, #48]
   1706c:	cmp	x1, x0
   17070:	b.cs	170c4 <__sanitizer_cov_pcs_init@@Base+0x1600>  // b.hs, b.nlast
   17074:	ldr	x0, [sp, #40]
   17078:	add	x19, x0, #0x620
   1707c:	ldr	x1, [sp, #72]
   17080:	ldr	x0, [sp, #32]
   17084:	bl	17e84 <__sanitizer_cov_pcs_init@@Base+0x23c0>
   17088:	ldr	x2, [sp, #56]
   1708c:	mov	x1, x0
   17090:	mov	x0, x19
   17094:	bl	17eb4 <__sanitizer_cov_pcs_init@@Base+0x23f0>
   17098:	and	w0, w0, #0xff
   1709c:	eor	w0, w0, #0x1
   170a0:	and	w0, w0, #0xff
   170a4:	cmp	w0, #0x0
   170a8:	b.eq	170b4 <__sanitizer_cov_pcs_init@@Base+0x15f0>  // b.none
   170ac:	mov	w0, #0x0                   	// #0
   170b0:	b	170d0 <__sanitizer_cov_pcs_init@@Base+0x160c>
   170b4:	ldr	x0, [sp, #72]
   170b8:	add	x0, x0, #0x1
   170bc:	str	x0, [sp, #72]
   170c0:	b	17064 <__sanitizer_cov_pcs_init@@Base+0x15a0>
   170c4:	mov	w0, #0x1                   	// #1
   170c8:	b	170d0 <__sanitizer_cov_pcs_init@@Base+0x160c>
   170cc:	mov	w0, #0x0                   	// #0
   170d0:	ldp	x19, x30, [sp], #80
   170d4:	ret
   170d8:	stp	x19, x30, [sp, #-48]!
   170dc:	str	x0, [sp, #40]
   170e0:	str	x1, [sp, #32]
   170e4:	str	x2, [sp, #24]
   170e8:	ldr	x0, [sp, #40]
   170ec:	ldr	x0, [x0]
   170f0:	mov	x1, x0
   170f4:	ldr	x0, [sp, #32]
   170f8:	bl	17ef4 <__sanitizer_cov_pcs_init@@Base+0x2430>
   170fc:	mov	x19, x0
   17100:	ldr	x1, [sp, #24]
   17104:	ldr	x0, [sp, #40]
   17108:	bl	17f60 <__sanitizer_cov_pcs_init@@Base+0x249c>
   1710c:	mov	x1, x0
   17110:	mov	x0, x19
   17114:	bl	17a70 <__sanitizer_cov_pcs_init@@Base+0x1fac>
   17118:	and	w0, w0, #0xff
   1711c:	ldp	x19, x30, [sp], #48
   17120:	ret
   17124:	stp	x19, x30, [sp, #-64]!
   17128:	str	x0, [sp, #40]
   1712c:	str	x1, [sp, #32]
   17130:	str	x2, [sp, #24]
   17134:	ldr	x1, [sp, #32]
   17138:	ldr	x0, [sp, #40]
   1713c:	bl	16f90 <__sanitizer_cov_pcs_init@@Base+0x14cc>
   17140:	ldr	x1, [sp, #24]
   17144:	ldr	x0, [sp, #40]
   17148:	bl	17f60 <__sanitizer_cov_pcs_init@@Base+0x249c>
   1714c:	str	x0, [sp, #56]
   17150:	ldr	x0, [sp, #40]
   17154:	add	x19, x0, #0x620
   17158:	ldr	x0, [sp, #40]
   1715c:	ldr	x0, [x0]
   17160:	mov	x1, x0
   17164:	ldr	x0, [sp, #32]
   17168:	bl	17ef4 <__sanitizer_cov_pcs_init@@Base+0x2430>
   1716c:	mov	x2, x0
   17170:	ldr	x1, [sp, #56]
   17174:	mov	x0, x19
   17178:	bl	17f8c <__sanitizer_cov_pcs_init@@Base+0x24c8>
   1717c:	and	w0, w0, #0xff
   17180:	ldp	x19, x30, [sp], #64
   17184:	ret
   17188:	stp	x19, x30, [sp, #-416]!
   1718c:	str	x0, [sp, #40]
   17190:	str	x1, [sp, #32]
   17194:	str	x2, [sp, #24]
   17198:	str	w3, [sp, #20]
   1719c:	str	w4, [sp, #16]
   171a0:	ldr	x1, [sp, #32]
   171a4:	ldr	x0, [sp, #40]
   171a8:	bl	16f90 <__sanitizer_cov_pcs_init@@Base+0x14cc>
   171ac:	ldr	x1, [sp, #24]
   171b0:	ldr	x0, [sp, #40]
   171b4:	bl	17f60 <__sanitizer_cov_pcs_init@@Base+0x249c>
   171b8:	str	x0, [sp, #400]
   171bc:	ldr	x0, [sp, #40]
   171c0:	add	x19, x0, #0x620
   171c4:	ldr	x0, [sp, #40]
   171c8:	ldr	x0, [x0]
   171cc:	mov	x1, x0
   171d0:	ldr	x0, [sp, #32]
   171d4:	bl	17ef4 <__sanitizer_cov_pcs_init@@Base+0x2430>
   171d8:	mov	x1, x0
   171dc:	add	x0, sp, #0x48
   171e0:	mov	x4, #0x28                  	// #40
   171e4:	mov	x3, x0
   171e8:	ldr	x2, [sp, #400]
   171ec:	mov	x0, x19
   171f0:	bl	1807c <__sanitizer_cov_pcs_init@@Base+0x25b8>
   171f4:	str	x0, [sp, #392]
   171f8:	str	xzr, [sp, #408]
   171fc:	ldr	x1, [sp, #408]
   17200:	ldr	x0, [sp, #392]
   17204:	cmp	x1, x0
   17208:	b.cs	172c4 <__sanitizer_cov_pcs_init@@Base+0x1800>  // b.hs, b.nlast
   1720c:	ldr	x0, [sp, #40]
   17210:	add	x0, x0, #0x410, lsl #12
   17214:	ldr	x1, [x0, #2608]
   17218:	mov	x0, #0x1ffff               	// #131071
   1721c:	cmp	x1, x0
   17220:	b.hi	172b4 <__sanitizer_cov_pcs_init@@Base+0x17f0>  // b.pmore
   17224:	ldr	x0, [sp, #408]
   17228:	lsl	x0, x0, #3
   1722c:	add	x1, sp, #0x48
   17230:	ldr	x0, [x1, x0]
   17234:	and	w0, w0, #0xffff
   17238:	strh	w0, [sp, #56]
   1723c:	ldr	x0, [sp, #400]
   17240:	and	w0, w0, #0xffff
   17244:	strh	w0, [sp, #58]
   17248:	ldr	x0, [sp, #408]
   1724c:	lsl	x0, x0, #3
   17250:	add	x1, sp, #0x48
   17254:	ldr	x0, [x1, x0]
   17258:	mov	x1, x0
   1725c:	ldr	x0, [sp, #32]
   17260:	bl	18148 <__sanitizer_cov_pcs_init@@Base+0x2684>
   17264:	str	w0, [sp, #60]
   17268:	ldr	w0, [sp, #20]
   1726c:	str	w0, [sp, #64]
   17270:	ldr	w0, [sp, #16]
   17274:	str	w0, [sp, #68]
   17278:	ldr	x0, [sp, #40]
   1727c:	add	x0, x0, #0x410, lsl #12
   17280:	ldr	x0, [x0, #2608]
   17284:	add	x2, x0, #0x1
   17288:	ldr	x1, [sp, #40]
   1728c:	add	x1, x1, #0x410, lsl #12
   17290:	str	x2, [x1, #2608]
   17294:	ldr	x1, [sp, #40]
   17298:	mov	x2, #0x10a3                	// #4259
   1729c:	movk	x2, #0x2, lsl #16
   172a0:	add	x0, x0, x2
   172a4:	lsl	x0, x0, #4
   172a8:	add	x2, x1, x0
   172ac:	ldp	x0, x1, [sp, #56]
   172b0:	stp	x0, x1, [x2]
   172b4:	ldr	x0, [sp, #408]
   172b8:	add	x0, x0, #0x1
   172bc:	str	x0, [sp, #408]
   172c0:	b	171fc <__sanitizer_cov_pcs_init@@Base+0x1738>
   172c4:	ldr	x0, [sp, #392]
   172c8:	ldp	x19, x30, [sp], #416
   172cc:	ret
   172d0:	stp	x19, x30, [sp, #-128]!
   172d4:	str	x0, [sp, #56]
   172d8:	str	x1, [sp, #48]
   172dc:	str	x2, [sp, #40]
   172e0:	str	x3, [sp, #32]
   172e4:	str	x4, [sp, #24]
   172e8:	ldr	x0, [sp, #56]
   172ec:	add	x19, x0, #0x418
   172f0:	ldr	x0, [sp, #56]
   172f4:	ldr	x0, [x0]
   172f8:	mov	x1, x0
   172fc:	ldr	x0, [sp, #48]
   17300:	bl	17ef4 <__sanitizer_cov_pcs_init@@Base+0x2430>
   17304:	mov	x1, x0
   17308:	mov	x0, x19
   1730c:	bl	181c8 <__sanitizer_cov_pcs_init@@Base+0x2704>
   17310:	ldr	x1, [sp, #40]
   17314:	ldr	x0, [sp, #56]
   17318:	bl	17f60 <__sanitizer_cov_pcs_init@@Base+0x249c>
   1731c:	str	x0, [sp, #112]
   17320:	ldr	x0, [sp, #56]
   17324:	add	x0, x0, #0x418
   17328:	ldr	x1, [sp, #112]
   1732c:	bl	17a70 <__sanitizer_cov_pcs_init@@Base+0x1fac>
   17330:	and	w0, w0, #0xff
   17334:	eor	w0, w0, #0x1
   17338:	and	w0, w0, #0xff
   1733c:	and	x0, x0, #0xff
   17340:	str	x0, [sp, #104]
   17344:	str	xzr, [sp, #96]
   17348:	ldr	x1, [sp, #104]
   1734c:	ldr	x0, [sp, #96]
   17350:	cmp	x1, x0
   17354:	cset	w0, eq  // eq = none
   17358:	and	w0, w0, #0xff
   1735c:	and	x0, x0, #0xff
   17360:	cmp	x0, #0x0
   17364:	b.eq	17388 <__sanitizer_cov_pcs_init@@Base+0x18c4>  // b.none
   17368:	ldr	x4, [sp, #96]
   1736c:	ldr	x3, [sp, #104]
   17370:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   17374:	add	x2, x0, #0xe0
   17378:	mov	w1, #0x13e                 	// #318
   1737c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   17380:	add	x0, x0, #0x98
   17384:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   17388:	ldr	x0, [sp, #56]
   1738c:	add	x5, x0, #0x620
   17390:	ldr	x0, [sp, #56]
   17394:	add	x0, x0, #0x418
   17398:	ldr	x4, [sp, #24]
   1739c:	ldr	x3, [sp, #32]
   173a0:	mov	x2, x0
   173a4:	ldr	x1, [sp, #112]
   173a8:	mov	x0, x5
   173ac:	bl	181f4 <__sanitizer_cov_pcs_init@@Base+0x2730>
   173b0:	str	x0, [sp, #88]
   173b4:	str	xzr, [sp, #120]
   173b8:	ldr	x1, [sp, #120]
   173bc:	ldr	x0, [sp, #88]
   173c0:	cmp	x1, x0
   173c4:	b.cs	1740c <__sanitizer_cov_pcs_init@@Base+0x1948>  // b.hs, b.nlast
   173c8:	ldr	x0, [sp, #120]
   173cc:	lsl	x0, x0, #3
   173d0:	ldr	x1, [sp, #32]
   173d4:	add	x0, x1, x0
   173d8:	ldr	x2, [x0]
   173dc:	ldr	x0, [sp, #120]
   173e0:	lsl	x0, x0, #3
   173e4:	ldr	x1, [sp, #32]
   173e8:	add	x19, x1, x0
   173ec:	mov	x1, x2
   173f0:	ldr	x0, [sp, #56]
   173f4:	bl	1827c <__sanitizer_cov_pcs_init@@Base+0x27b8>
   173f8:	str	x0, [x19]
   173fc:	ldr	x0, [sp, #120]
   17400:	add	x0, x0, #0x1
   17404:	str	x0, [sp, #120]
   17408:	b	173b8 <__sanitizer_cov_pcs_init@@Base+0x18f4>
   1740c:	ldr	x0, [sp, #88]
   17410:	cmp	x0, #0x0
   17414:	b.eq	1746c <__sanitizer_cov_pcs_init@@Base+0x19a8>  // b.none
   17418:	ldr	x0, [sp, #32]
   1741c:	ldr	x0, [x0]
   17420:	str	x0, [sp, #80]
   17424:	ldr	x0, [sp, #40]
   17428:	str	x0, [sp, #72]
   1742c:	ldr	x1, [sp, #80]
   17430:	ldr	x0, [sp, #72]
   17434:	cmp	x1, x0
   17438:	cset	w0, ne  // ne = any
   1743c:	and	w0, w0, #0xff
   17440:	and	x0, x0, #0xff
   17444:	cmp	x0, #0x0
   17448:	b.eq	1746c <__sanitizer_cov_pcs_init@@Base+0x19a8>  // b.none
   1744c:	ldr	x4, [sp, #72]
   17450:	ldr	x3, [sp, #80]
   17454:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   17458:	add	x2, x0, #0x100
   1745c:	mov	w1, #0x143                 	// #323
   17460:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   17464:	add	x0, x0, #0x98
   17468:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1746c:	ldr	x0, [sp, #88]
   17470:	ldp	x19, x30, [sp], #128
   17474:	ret
   17478:	str	x30, [sp, #-32]!
   1747c:	str	x0, [sp, #24]
   17480:	str	x1, [sp, #16]
   17484:	ldr	x1, [sp, #16]
   17488:	ldr	x0, [sp, #24]
   1748c:	bl	17f60 <__sanitizer_cov_pcs_init@@Base+0x249c>
   17490:	mov	x2, x0
   17494:	ldr	x0, [sp, #24]
   17498:	mov	x1, #0x1146                	// #4422
   1749c:	movk	x1, #0x4, lsl #16
   174a0:	add	x1, x2, x1
   174a4:	ldr	x0, [x0, x1, lsl #3]
   174a8:	ldr	x30, [sp], #32
   174ac:	ret
   174b0:	str	x30, [sp, #-96]!
   174b4:	str	x0, [sp, #56]
   174b8:	str	x1, [sp, #48]
   174bc:	str	x2, [sp, #40]
   174c0:	str	x3, [sp, #32]
   174c4:	str	x4, [sp, #24]
   174c8:	str	x5, [sp, #16]
   174cc:	ldr	x1, [sp, #48]
   174d0:	ldr	x0, [sp, #56]
   174d4:	bl	17f60 <__sanitizer_cov_pcs_init@@Base+0x249c>
   174d8:	str	x0, [sp, #80]
   174dc:	ldr	x1, [sp, #40]
   174e0:	ldr	x0, [sp, #56]
   174e4:	bl	17f60 <__sanitizer_cov_pcs_init@@Base+0x249c>
   174e8:	str	x0, [sp, #72]
   174ec:	str	xzr, [sp, #88]
   174f0:	ldr	x0, [sp, #56]
   174f4:	add	x0, x0, #0x410, lsl #12
   174f8:	ldr	x0, [x0, #2608]
   174fc:	ldr	x1, [sp, #88]
   17500:	cmp	x1, x0
   17504:	b.cs	175f8 <__sanitizer_cov_pcs_init@@Base+0x1b34>  // b.hs, b.nlast
   17508:	ldr	x1, [sp, #56]
   1750c:	ldr	x2, [sp, #88]
   17510:	mov	x0, #0x10a3                	// #4259
   17514:	movk	x0, #0x2, lsl #16
   17518:	add	x0, x2, x0
   1751c:	lsl	x0, x0, #4
   17520:	add	x0, x1, x0
   17524:	ldrh	w0, [x0]
   17528:	and	x0, x0, #0xffff
   1752c:	ldr	x1, [sp, #80]
   17530:	cmp	x1, x0
   17534:	b.ne	175e8 <__sanitizer_cov_pcs_init@@Base+0x1b24>  // b.any
   17538:	ldr	x1, [sp, #56]
   1753c:	ldr	x2, [sp, #88]
   17540:	mov	x0, #0x10a3                	// #4259
   17544:	movk	x0, #0x2, lsl #16
   17548:	add	x0, x2, x0
   1754c:	lsl	x0, x0, #4
   17550:	add	x0, x1, x0
   17554:	ldrh	w0, [x0, #2]
   17558:	and	x0, x0, #0xffff
   1755c:	ldr	x1, [sp, #72]
   17560:	cmp	x1, x0
   17564:	b.ne	175e8 <__sanitizer_cov_pcs_init@@Base+0x1b24>  // b.any
   17568:	ldr	x1, [sp, #56]
   1756c:	ldr	x2, [sp, #88]
   17570:	mov	x0, #0x10a3                	// #4259
   17574:	movk	x0, #0x2, lsl #16
   17578:	add	x0, x2, x0
   1757c:	lsl	x0, x0, #4
   17580:	add	x0, x1, x0
   17584:	ldr	w1, [x0, #4]
   17588:	ldr	x0, [sp, #32]
   1758c:	str	w1, [x0]
   17590:	ldr	x1, [sp, #56]
   17594:	ldr	x2, [sp, #88]
   17598:	mov	x0, #0x10a3                	// #4259
   1759c:	movk	x0, #0x2, lsl #16
   175a0:	add	x0, x2, x0
   175a4:	lsl	x0, x0, #4
   175a8:	add	x0, x1, x0
   175ac:	ldr	w1, [x0, #8]
   175b0:	ldr	x0, [sp, #24]
   175b4:	str	w1, [x0]
   175b8:	ldr	x1, [sp, #56]
   175bc:	ldr	x2, [sp, #88]
   175c0:	mov	x0, #0x10a3                	// #4259
   175c4:	movk	x0, #0x2, lsl #16
   175c8:	add	x0, x2, x0
   175cc:	lsl	x0, x0, #4
   175d0:	add	x0, x1, x0
   175d4:	ldr	w1, [x0, #12]
   175d8:	ldr	x0, [sp, #16]
   175dc:	str	w1, [x0]
   175e0:	mov	w0, #0x1                   	// #1
   175e4:	b	175fc <__sanitizer_cov_pcs_init@@Base+0x1b38>
   175e8:	ldr	x0, [sp, #88]
   175ec:	add	x0, x0, #0x1
   175f0:	str	x0, [sp, #88]
   175f4:	b	174f0 <__sanitizer_cov_pcs_init@@Base+0x1a2c>
   175f8:	mov	w0, #0x0                   	// #0
   175fc:	ldr	x30, [sp], #96
   17600:	ret
   17604:	stp	x19, x30, [sp, #-48]!
   17608:	str	x0, [sp, #40]
   1760c:	str	x1, [sp, #32]
   17610:	str	x2, [sp, #24]
   17614:	str	w3, [sp, #20]
   17618:	ldr	x0, [sp, #32]
   1761c:	bl	16fbc <__sanitizer_cov_pcs_init@@Base+0x14f8>
   17620:	and	w0, w0, #0xff
   17624:	eor	w0, w0, #0x1
   17628:	and	w0, w0, #0xff
   1762c:	cmp	w0, #0x0
   17630:	b.eq	1763c <__sanitizer_cov_pcs_init@@Base+0x1b78>  // b.none
   17634:	mov	w0, #0x0                   	// #0
   17638:	b	176bc <__sanitizer_cov_pcs_init@@Base+0x1bf8>
   1763c:	ldr	x0, [sp, #32]
   17640:	bl	17df0 <__sanitizer_cov_pcs_init@@Base+0x232c>
   17644:	cmp	x0, #0x0
   17648:	b.eq	17674 <__sanitizer_cov_pcs_init@@Base+0x1bb0>  // b.none
   1764c:	ldr	x0, [sp, #32]
   17650:	bl	17df0 <__sanitizer_cov_pcs_init@@Base+0x232c>
   17654:	mov	x19, x0
   17658:	ldr	x1, [sp, #24]
   1765c:	ldr	x0, [sp, #40]
   17660:	bl	17e08 <__sanitizer_cov_pcs_init@@Base+0x2344>
   17664:	cmp	x19, x0
   17668:	b.ne	17674 <__sanitizer_cov_pcs_init@@Base+0x1bb0>  // b.any
   1766c:	mov	w0, #0x1                   	// #1
   17670:	b	17678 <__sanitizer_cov_pcs_init@@Base+0x1bb4>
   17674:	mov	w0, #0x0                   	// #0
   17678:	cmp	w0, #0x0
   1767c:	b.eq	176b8 <__sanitizer_cov_pcs_init@@Base+0x1bf4>  // b.none
   17680:	ldr	x1, [sp, #24]
   17684:	ldr	x0, [sp, #40]
   17688:	bl	17e3c <__sanitizer_cov_pcs_init@@Base+0x2378>
   1768c:	mov	x19, x0
   17690:	ldr	x1, [sp, #24]
   17694:	ldr	x0, [sp, #40]
   17698:	bl	17e08 <__sanitizer_cov_pcs_init@@Base+0x2344>
   1769c:	ldr	w3, [sp, #20]
   176a0:	mov	x2, x0
   176a4:	mov	x1, x19
   176a8:	ldr	x0, [sp, #32]
   176ac:	bl	182ac <__sanitizer_cov_pcs_init@@Base+0x27e8>
   176b0:	mov	w0, #0x1                   	// #1
   176b4:	b	176bc <__sanitizer_cov_pcs_init@@Base+0x1bf8>
   176b8:	mov	w0, #0x0                   	// #0
   176bc:	ldp	x19, x30, [sp], #48
   176c0:	ret
   176c4:	stp	x19, x30, [sp, #-48]!
   176c8:	str	x0, [sp, #40]
   176cc:	str	x1, [sp, #32]
   176d0:	str	x2, [sp, #24]
   176d4:	str	w3, [sp, #20]
   176d8:	ldr	x2, [sp, #24]
   176dc:	ldr	x1, [sp, #32]
   176e0:	ldr	x0, [sp, #40]
   176e4:	bl	16fd8 <__sanitizer_cov_pcs_init@@Base+0x1514>
   176e8:	and	w0, w0, #0xff
   176ec:	cmp	w0, #0x0
   176f0:	b.eq	1772c <__sanitizer_cov_pcs_init@@Base+0x1c68>  // b.none
   176f4:	ldr	x1, [sp, #24]
   176f8:	ldr	x0, [sp, #40]
   176fc:	bl	17e3c <__sanitizer_cov_pcs_init@@Base+0x2378>
   17700:	mov	x19, x0
   17704:	ldr	x1, [sp, #24]
   17708:	ldr	x0, [sp, #40]
   1770c:	bl	17e08 <__sanitizer_cov_pcs_init@@Base+0x2344>
   17710:	ldr	w3, [sp, #20]
   17714:	mov	x2, x0
   17718:	mov	x1, x19
   1771c:	ldr	x0, [sp, #32]
   17720:	bl	182ac <__sanitizer_cov_pcs_init@@Base+0x27e8>
   17724:	mov	w0, #0x1                   	// #1
   17728:	b	17730 <__sanitizer_cov_pcs_init@@Base+0x1c6c>
   1772c:	mov	w0, #0x0                   	// #0
   17730:	ldp	x19, x30, [sp], #48
   17734:	ret
   17738:	str	x30, [sp, #-64]!
   1773c:	str	x0, [sp, #40]
   17740:	str	x1, [sp, #32]
   17744:	str	x2, [sp, #24]
   17748:	str	w3, [sp, #20]
   1774c:	ldr	x1, [sp, #32]
   17750:	ldr	x0, [sp, #40]
   17754:	bl	16f90 <__sanitizer_cov_pcs_init@@Base+0x14cc>
   17758:	ldr	x1, [sp, #24]
   1775c:	ldr	x0, [sp, #40]
   17760:	bl	17f60 <__sanitizer_cov_pcs_init@@Base+0x249c>
   17764:	str	x0, [sp, #56]
   17768:	ldr	x0, [sp, #40]
   1776c:	ldr	x0, [x0]
   17770:	ldr	w3, [sp, #20]
   17774:	mov	x2, x0
   17778:	ldr	x1, [sp, #56]
   1777c:	ldr	x0, [sp, #32]
   17780:	bl	182ac <__sanitizer_cov_pcs_init@@Base+0x27e8>
   17784:	nop
   17788:	ldr	x30, [sp], #64
   1778c:	ret
   17790:	stp	x19, x30, [sp, #-48]!
   17794:	str	x0, [sp, #40]
   17798:	str	x1, [sp, #32]
   1779c:	str	x2, [sp, #24]
   177a0:	ldr	x0, [sp, #32]
   177a4:	bl	17df0 <__sanitizer_cov_pcs_init@@Base+0x232c>
   177a8:	mov	x19, x0
   177ac:	ldr	x1, [sp, #24]
   177b0:	ldr	x0, [sp, #40]
   177b4:	bl	17e08 <__sanitizer_cov_pcs_init@@Base+0x2344>
   177b8:	cmp	x19, x0
   177bc:	cset	w0, eq  // eq = none
   177c0:	and	w0, w0, #0xff
   177c4:	cmp	w0, #0x0
   177c8:	b.eq	177e4 <__sanitizer_cov_pcs_init@@Base+0x1d20>  // b.none
   177cc:	ldr	x1, [sp, #24]
   177d0:	ldr	x0, [sp, #40]
   177d4:	bl	17e3c <__sanitizer_cov_pcs_init@@Base+0x2378>
   177d8:	mov	x1, x0
   177dc:	ldr	x0, [sp, #32]
   177e0:	bl	18458 <__sanitizer_cov_pcs_init@@Base+0x2994>
   177e4:	nop
   177e8:	ldp	x19, x30, [sp], #48
   177ec:	ret
   177f0:	str	x30, [sp, #-80]!
   177f4:	str	x0, [sp, #24]
   177f8:	str	x1, [sp, #16]
   177fc:	ldr	x1, [sp, #16]
   17800:	ldr	x0, [sp, #24]
   17804:	bl	17f60 <__sanitizer_cov_pcs_init@@Base+0x249c>
   17808:	str	x0, [sp, #72]
   1780c:	ldr	x0, [sp, #24]
   17810:	add	x0, x0, #0x8
   17814:	ldr	x1, [sp, #72]
   17818:	bl	17a70 <__sanitizer_cov_pcs_init@@Base+0x1fac>
   1781c:	and	w0, w0, #0xff
   17820:	eor	w0, w0, #0x1
   17824:	and	w0, w0, #0xff
   17828:	and	x0, x0, #0xff
   1782c:	str	x0, [sp, #64]
   17830:	str	xzr, [sp, #56]
   17834:	ldr	x1, [sp, #64]
   17838:	ldr	x0, [sp, #56]
   1783c:	cmp	x1, x0
   17840:	cset	w0, eq  // eq = none
   17844:	and	w0, w0, #0xff
   17848:	and	x0, x0, #0xff
   1784c:	cmp	x0, #0x0
   17850:	b.eq	17874 <__sanitizer_cov_pcs_init@@Base+0x1db0>  // b.none
   17854:	ldr	x4, [sp, #56]
   17858:	ldr	x3, [sp, #64]
   1785c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   17860:	add	x2, x0, #0x120
   17864:	mov	w1, #0xc0                  	// #192
   17868:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1786c:	add	x0, x0, #0x98
   17870:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   17874:	ldr	x0, [sp, #24]
   17878:	add	x0, x0, #0x210
   1787c:	ldr	x1, [sp, #72]
   17880:	bl	185f4 <__sanitizer_cov_pcs_init@@Base+0x2b30>
   17884:	and	w0, w0, #0xff
   17888:	and	x0, x0, #0xff
   1788c:	str	x0, [sp, #48]
   17890:	str	xzr, [sp, #40]
   17894:	ldr	x1, [sp, #48]
   17898:	ldr	x0, [sp, #40]
   1789c:	cmp	x1, x0
   178a0:	cset	w0, eq  // eq = none
   178a4:	and	w0, w0, #0xff
   178a8:	and	x0, x0, #0xff
   178ac:	cmp	x0, #0x0
   178b0:	b.eq	178d4 <__sanitizer_cov_pcs_init@@Base+0x1e10>  // b.none
   178b4:	ldr	x4, [sp, #40]
   178b8:	ldr	x3, [sp, #48]
   178bc:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   178c0:	add	x2, x0, #0x150
   178c4:	mov	w1, #0xc1                  	// #193
   178c8:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   178cc:	add	x0, x0, #0x98
   178d0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   178d4:	ldr	x0, [sp, #24]
   178d8:	add	x0, x0, #0x620
   178dc:	ldr	x1, [sp, #72]
   178e0:	bl	186dc <__sanitizer_cov_pcs_init@@Base+0x2c18>
   178e4:	nop
   178e8:	ldr	x30, [sp], #80
   178ec:	ret
   178f0:	str	x30, [sp, #-48]!
   178f4:	str	x0, [sp, #24]
   178f8:	str	xzr, [sp, #40]
   178fc:	ldr	x0, [sp, #40]
   17900:	cmp	x0, #0x0
   17904:	b.ne	1792c <__sanitizer_cov_pcs_init@@Base+0x1e68>  // b.any
   17908:	ldr	x0, [sp, #40]
   1790c:	lsl	x0, x0, #3
   17910:	ldr	x1, [sp, #24]
   17914:	add	x0, x1, x0
   17918:	bl	18710 <__sanitizer_cov_pcs_init@@Base+0x2c4c>
   1791c:	ldr	x0, [sp, #40]
   17920:	add	x0, x0, #0x1
   17924:	str	x0, [sp, #40]
   17928:	b	178fc <__sanitizer_cov_pcs_init@@Base+0x1e38>
   1792c:	nop
   17930:	ldr	x30, [sp], #48
   17934:	ret
   17938:	str	x30, [sp, #-48]!
   1793c:	str	x0, [sp, #24]
   17940:	str	xzr, [sp, #40]
   17944:	ldr	x0, [sp, #24]
   17948:	bl	1872c <__sanitizer_cov_pcs_init@@Base+0x2c68>
   1794c:	mov	x1, x0
   17950:	ldr	x0, [sp, #40]
   17954:	cmp	x0, x1
   17958:	cset	w0, cc  // cc = lo, ul, last
   1795c:	and	w0, w0, #0xff
   17960:	cmp	w0, #0x0
   17964:	b.eq	17998 <__sanitizer_cov_pcs_init@@Base+0x1ed4>  // b.none
   17968:	ldr	x1, [sp, #40]
   1796c:	mov	x0, x1
   17970:	lsl	x0, x0, #6
   17974:	add	x0, x0, x1
   17978:	lsl	x0, x0, #3
   1797c:	ldr	x1, [sp, #24]
   17980:	add	x0, x1, x0
   17984:	bl	178f0 <__sanitizer_cov_pcs_init@@Base+0x1e2c>
   17988:	ldr	x0, [sp, #40]
   1798c:	add	x0, x0, #0x1
   17990:	str	x0, [sp, #40]
   17994:	b	17944 <__sanitizer_cov_pcs_init@@Base+0x1e80>
   17998:	nop
   1799c:	ldr	x30, [sp], #48
   179a0:	ret
   179a4:	str	x30, [sp, #-32]!
   179a8:	str	x0, [sp, #24]
   179ac:	ldr	x0, [sp, #24]
   179b0:	add	x0, x0, #0x620
   179b4:	bl	1872c <__sanitizer_cov_pcs_init@@Base+0x2c68>
   179b8:	ldr	x30, [sp], #32
   179bc:	ret
   179c0:	str	x30, [sp, #-48]!
   179c4:	str	x0, [sp, #24]
   179c8:	str	xzr, [sp, #40]
   179cc:	ldr	x0, [sp, #40]
   179d0:	cmp	x0, #0x0
   179d4:	b.ne	17a18 <__sanitizer_cov_pcs_init@@Base+0x1f54>  // b.any
   179d8:	ldr	x0, [sp, #40]
   179dc:	lsl	x0, x0, #3
   179e0:	ldr	x1, [sp, #24]
   179e4:	add	x0, x1, x0
   179e8:	bl	18740 <__sanitizer_cov_pcs_init@@Base+0x2c7c>
   179ec:	and	w0, w0, #0xff
   179f0:	eor	w0, w0, #0x1
   179f4:	and	w0, w0, #0xff
   179f8:	cmp	w0, #0x0
   179fc:	b.eq	17a08 <__sanitizer_cov_pcs_init@@Base+0x1f44>  // b.none
   17a00:	mov	w0, #0x0                   	// #0
   17a04:	b	17a1c <__sanitizer_cov_pcs_init@@Base+0x1f58>
   17a08:	ldr	x0, [sp, #40]
   17a0c:	add	x0, x0, #0x1
   17a10:	str	x0, [sp, #40]
   17a14:	b	179cc <__sanitizer_cov_pcs_init@@Base+0x1f08>
   17a18:	mov	w0, #0x1                   	// #1
   17a1c:	ldr	x30, [sp], #48
   17a20:	ret
   17a24:	str	x30, [sp, #-48]!
   17a28:	str	x0, [sp, #24]
   17a2c:	str	x1, [sp, #16]
   17a30:	ldr	x0, [sp, #24]
   17a34:	add	x0, x0, #0x8
   17a38:	bl	18764 <__sanitizer_cov_pcs_init@@Base+0x2ca0>
   17a3c:	str	x0, [sp, #40]
   17a40:	ldr	x0, [sp, #24]
   17a44:	ldr	x2, [sp, #40]
   17a48:	mov	x1, #0x1146                	// #4422
   17a4c:	movk	x1, #0x4, lsl #16
   17a50:	add	x1, x2, x1
   17a54:	ldr	x2, [sp, #16]
   17a58:	str	x2, [x0, x1, lsl #3]
   17a5c:	ldr	x1, [sp, #40]
   17a60:	ldr	x0, [sp, #24]
   17a64:	bl	1827c <__sanitizer_cov_pcs_init@@Base+0x27b8>
   17a68:	ldr	x30, [sp], #48
   17a6c:	ret
   17a70:	str	x30, [sp, #-64]!
   17a74:	str	x0, [sp, #24]
   17a78:	str	x1, [sp, #16]
   17a7c:	ldr	x1, [sp, #16]
   17a80:	ldr	x0, [sp, #24]
   17a84:	bl	188bc <__sanitizer_cov_pcs_init@@Base+0x2df8>
   17a88:	ldr	x1, [sp, #16]
   17a8c:	ldr	x0, [sp, #24]
   17a90:	bl	18928 <__sanitizer_cov_pcs_init@@Base+0x2e64>
   17a94:	str	x0, [sp, #56]
   17a98:	ldr	x1, [sp, #16]
   17a9c:	ldr	x0, [sp, #24]
   17aa0:	bl	1899c <__sanitizer_cov_pcs_init@@Base+0x2ed8>
   17aa4:	str	x0, [sp, #48]
   17aa8:	ldr	x1, [sp, #16]
   17aac:	ldr	x0, [sp, #24]
   17ab0:	bl	18a14 <__sanitizer_cov_pcs_init@@Base+0x2f50>
   17ab4:	str	x0, [sp, #40]
   17ab8:	ldr	x0, [sp, #56]
   17abc:	lsl	x0, x0, #3
   17ac0:	ldr	x1, [sp, #24]
   17ac4:	add	x0, x1, x0
   17ac8:	ldr	x1, [sp, #48]
   17acc:	bl	18a88 <__sanitizer_cov_pcs_init@@Base+0x2fc4>
   17ad0:	and	w0, w0, #0xff
   17ad4:	cmp	w0, #0x0
   17ad8:	b.eq	17b18 <__sanitizer_cov_pcs_init@@Base+0x2054>  // b.none
   17adc:	ldr	x0, [sp, #56]
   17ae0:	lsl	x1, x0, #6
   17ae4:	ldr	x0, [sp, #48]
   17ae8:	add	x0, x1, x0
   17aec:	lsl	x0, x0, #3
   17af0:	ldr	x1, [sp, #24]
   17af4:	add	x0, x1, x0
   17af8:	add	x0, x0, #0x8
   17afc:	ldr	x1, [sp, #40]
   17b00:	bl	18a88 <__sanitizer_cov_pcs_init@@Base+0x2fc4>
   17b04:	and	w0, w0, #0xff
   17b08:	cmp	w0, #0x0
   17b0c:	b.eq	17b18 <__sanitizer_cov_pcs_init@@Base+0x2054>  // b.none
   17b10:	mov	w0, #0x1                   	// #1
   17b14:	b	17b1c <__sanitizer_cov_pcs_init@@Base+0x2058>
   17b18:	mov	w0, #0x0                   	// #0
   17b1c:	ldr	x30, [sp], #64
   17b20:	ret
   17b24:	sub	sp, sp, #0x20
   17b28:	str	x0, [sp, #8]
   17b2c:	str	x1, [sp]
   17b30:	ldr	x0, [sp, #8]
   17b34:	ldp	x0, x1, [x0]
   17b38:	stp	x0, x1, [sp, #16]
   17b3c:	ldr	x2, [sp, #8]
   17b40:	ldr	x0, [sp]
   17b44:	ldp	x0, x1, [x0]
   17b48:	stp	x0, x1, [x2]
   17b4c:	ldr	x2, [sp]
   17b50:	ldp	x0, x1, [sp, #16]
   17b54:	stp	x0, x1, [x2]
   17b58:	nop
   17b5c:	add	sp, sp, #0x20
   17b60:	ret
   17b64:	str	x30, [sp, #-48]!
   17b68:	str	x0, [sp, #24]
   17b6c:	str	x1, [sp, #16]
   17b70:	strb	wzr, [sp, #47]
   17b74:	str	xzr, [sp, #32]
   17b78:	ldr	x0, [sp, #24]
   17b7c:	bl	1872c <__sanitizer_cov_pcs_init@@Base+0x2c68>
   17b80:	mov	x1, x0
   17b84:	ldr	x0, [sp, #32]
   17b88:	cmp	x0, x1
   17b8c:	cset	w0, cc  // cc = lo, ul, last
   17b90:	and	w0, w0, #0xff
   17b94:	cmp	w0, #0x0
   17b98:	b.eq	17be4 <__sanitizer_cov_pcs_init@@Base+0x2120>  // b.none
   17b9c:	ldr	x1, [sp, #32]
   17ba0:	mov	x0, x1
   17ba4:	lsl	x0, x0, #6
   17ba8:	add	x0, x0, x1
   17bac:	lsl	x0, x0, #3
   17bb0:	ldr	x1, [sp, #24]
   17bb4:	add	x0, x1, x0
   17bb8:	ldr	x1, [sp, #16]
   17bbc:	bl	18ac0 <__sanitizer_cov_pcs_init@@Base+0x2ffc>
   17bc0:	and	w0, w0, #0xff
   17bc4:	cmp	w0, #0x0
   17bc8:	b.eq	17bd4 <__sanitizer_cov_pcs_init@@Base+0x2110>  // b.none
   17bcc:	mov	w0, #0x1                   	// #1
   17bd0:	strb	w0, [sp, #47]
   17bd4:	ldr	x0, [sp, #32]
   17bd8:	add	x0, x0, #0x1
   17bdc:	str	x0, [sp, #32]
   17be0:	b	17b78 <__sanitizer_cov_pcs_init@@Base+0x20b4>
   17be4:	ldrb	w0, [sp, #47]
   17be8:	ldr	x30, [sp], #48
   17bec:	ret
   17bf0:	str	x30, [sp, #-64]!
   17bf4:	str	x0, [sp, #24]
   17bf8:	str	x1, [sp, #16]
   17bfc:	strb	wzr, [sp, #63]
   17c00:	str	xzr, [sp, #48]
   17c04:	ldr	x0, [sp, #48]
   17c08:	cmp	x0, #0x0
   17c0c:	b.ne	17d04 <__sanitizer_cov_pcs_init@@Base+0x2240>  // b.any
   17c10:	ldr	x0, [sp, #16]
   17c14:	ldr	x1, [sp, #48]
   17c18:	ldr	x0, [x0, x1, lsl #3]
   17c1c:	str	x0, [sp, #32]
   17c20:	add	x0, sp, #0x20
   17c24:	bl	18740 <__sanitizer_cov_pcs_init@@Base+0x2c7c>
   17c28:	and	w0, w0, #0xff
   17c2c:	eor	w0, w0, #0x1
   17c30:	and	w0, w0, #0xff
   17c34:	cmp	w0, #0x0
   17c38:	b.eq	17cf4 <__sanitizer_cov_pcs_init@@Base+0x2230>  // b.none
   17c3c:	add	x0, sp, #0x20
   17c40:	bl	18bf8 <__sanitizer_cov_pcs_init@@Base+0x3134>
   17c44:	str	x0, [sp, #40]
   17c48:	ldr	x0, [sp, #48]
   17c4c:	lsl	x0, x0, #3
   17c50:	ldr	x1, [sp, #24]
   17c54:	add	x0, x1, x0
   17c58:	ldr	x1, [sp, #40]
   17c5c:	bl	18c88 <__sanitizer_cov_pcs_init@@Base+0x31c4>
   17c60:	and	w0, w0, #0xff
   17c64:	cmp	w0, #0x0
   17c68:	b.eq	17c90 <__sanitizer_cov_pcs_init@@Base+0x21cc>  // b.none
   17c6c:	ldr	x0, [sp, #48]
   17c70:	lsl	x1, x0, #6
   17c74:	ldr	x0, [sp, #40]
   17c78:	add	x0, x1, x0
   17c7c:	lsl	x0, x0, #3
   17c80:	ldr	x1, [sp, #24]
   17c84:	add	x0, x1, x0
   17c88:	add	x0, x0, #0x8
   17c8c:	bl	18710 <__sanitizer_cov_pcs_init@@Base+0x2c4c>
   17c90:	ldr	x0, [sp, #48]
   17c94:	lsl	x1, x0, #6
   17c98:	ldr	x0, [sp, #40]
   17c9c:	add	x0, x1, x0
   17ca0:	lsl	x0, x0, #3
   17ca4:	ldr	x1, [sp, #24]
   17ca8:	add	x0, x1, x0
   17cac:	add	x2, x0, #0x8
   17cb0:	ldr	x0, [sp, #48]
   17cb4:	lsl	x1, x0, #6
   17cb8:	ldr	x0, [sp, #40]
   17cbc:	add	x0, x1, x0
   17cc0:	lsl	x0, x0, #3
   17cc4:	ldr	x1, [sp, #16]
   17cc8:	add	x0, x1, x0
   17ccc:	add	x0, x0, #0x8
   17cd0:	mov	x1, x0
   17cd4:	mov	x0, x2
   17cd8:	bl	18ce4 <__sanitizer_cov_pcs_init@@Base+0x3220>
   17cdc:	and	w0, w0, #0xff
   17ce0:	cmp	w0, #0x0
   17ce4:	b.eq	17c20 <__sanitizer_cov_pcs_init@@Base+0x215c>  // b.none
   17ce8:	mov	w0, #0x1                   	// #1
   17cec:	strb	w0, [sp, #63]
   17cf0:	b	17c20 <__sanitizer_cov_pcs_init@@Base+0x215c>
   17cf4:	ldr	x0, [sp, #48]
   17cf8:	add	x0, x0, #0x1
   17cfc:	str	x0, [sp, #48]
   17d00:	b	17c04 <__sanitizer_cov_pcs_init@@Base+0x2140>
   17d04:	ldrb	w0, [sp, #63]
   17d08:	ldr	x30, [sp], #64
   17d0c:	ret
   17d10:	str	x30, [sp, #-48]!
   17d14:	str	x0, [sp, #24]
   17d18:	str	xzr, [sp, #40]
   17d1c:	ldr	x0, [sp, #40]
   17d20:	cmp	x0, #0x0
   17d24:	b.ne	17d90 <__sanitizer_cov_pcs_init@@Base+0x22cc>  // b.any
   17d28:	ldr	x0, [sp, #40]
   17d2c:	lsl	x0, x0, #3
   17d30:	ldr	x1, [sp, #24]
   17d34:	add	x0, x1, x0
   17d38:	bl	18d38 <__sanitizer_cov_pcs_init@@Base+0x3274>
   17d3c:	str	xzr, [sp, #32]
   17d40:	ldr	x0, [sp, #32]
   17d44:	cmp	x0, #0x3f
   17d48:	b.hi	17d80 <__sanitizer_cov_pcs_init@@Base+0x22bc>  // b.pmore
   17d4c:	ldr	x0, [sp, #40]
   17d50:	lsl	x1, x0, #6
   17d54:	ldr	x0, [sp, #32]
   17d58:	add	x0, x1, x0
   17d5c:	lsl	x0, x0, #3
   17d60:	ldr	x1, [sp, #24]
   17d64:	add	x0, x1, x0
   17d68:	add	x0, x0, #0x8
   17d6c:	bl	18d38 <__sanitizer_cov_pcs_init@@Base+0x3274>
   17d70:	ldr	x0, [sp, #32]
   17d74:	add	x0, x0, #0x1
   17d78:	str	x0, [sp, #32]
   17d7c:	b	17d40 <__sanitizer_cov_pcs_init@@Base+0x227c>
   17d80:	ldr	x0, [sp, #40]
   17d84:	add	x0, x0, #0x1
   17d88:	str	x0, [sp, #40]
   17d8c:	b	17d1c <__sanitizer_cov_pcs_init@@Base+0x2258>
   17d90:	nop
   17d94:	ldr	x30, [sp], #48
   17d98:	ret
   17d9c:	str	x30, [sp, #-32]!
   17da0:	str	x0, [sp, #24]
   17da4:	str	x1, [sp, #16]
   17da8:	ldr	x0, [sp, #24]
   17dac:	ldr	x0, [x0, #520]
   17db0:	ldr	x1, [sp, #16]
   17db4:	cmp	x1, x0
   17db8:	b.eq	17de4 <__sanitizer_cov_pcs_init@@Base+0x2320>  // b.none
   17dbc:	ldr	x0, [sp, #24]
   17dc0:	bl	178f0 <__sanitizer_cov_pcs_init@@Base+0x1e2c>
   17dc4:	ldr	x0, [sp, #24]
   17dc8:	ldr	x1, [sp, #16]
   17dcc:	str	x1, [x0, #520]
   17dd0:	ldr	x0, [sp, #24]
   17dd4:	str	xzr, [x0, #1040]
   17dd8:	ldr	x0, [sp, #24]
   17ddc:	str	xzr, [x0, #1560]
   17de0:	b	17de8 <__sanitizer_cov_pcs_init@@Base+0x2324>
   17de4:	nop
   17de8:	ldr	x30, [sp], #32
   17dec:	ret
   17df0:	sub	sp, sp, #0x10
   17df4:	str	x0, [sp, #8]
   17df8:	ldr	x0, [sp, #8]
   17dfc:	ldr	x0, [x0, #520]
   17e00:	add	sp, sp, #0x10
   17e04:	ret
   17e08:	stp	x19, x30, [sp, #-32]!
   17e0c:	str	x0, [sp, #24]
   17e10:	str	x1, [sp, #16]
   17e14:	ldr	x0, [sp, #24]
   17e18:	bl	179a4 <__sanitizer_cov_pcs_init@@Base+0x1ee0>
   17e1c:	mov	x1, x0
   17e20:	ldr	x0, [sp, #16]
   17e24:	udiv	x19, x0, x1
   17e28:	ldr	x0, [sp, #24]
   17e2c:	bl	179a4 <__sanitizer_cov_pcs_init@@Base+0x1ee0>
   17e30:	mul	x0, x19, x0
   17e34:	ldp	x19, x30, [sp], #32
   17e38:	ret
   17e3c:	str	x30, [sp, #-32]!
   17e40:	str	x0, [sp, #24]
   17e44:	str	x1, [sp, #16]
   17e48:	ldr	x0, [sp, #24]
   17e4c:	bl	179a4 <__sanitizer_cov_pcs_init@@Base+0x1ee0>
   17e50:	mov	x1, x0
   17e54:	ldr	x0, [sp, #16]
   17e58:	udiv	x2, x0, x1
   17e5c:	mul	x1, x2, x1
   17e60:	sub	x0, x0, x1
   17e64:	ldr	x30, [sp], #32
   17e68:	ret
   17e6c:	sub	sp, sp, #0x10
   17e70:	str	x0, [sp, #8]
   17e74:	ldr	x0, [sp, #8]
   17e78:	ldr	x0, [x0, #1560]
   17e7c:	add	sp, sp, #0x10
   17e80:	ret
   17e84:	sub	sp, sp, #0x10
   17e88:	str	x0, [sp, #8]
   17e8c:	str	x1, [sp]
   17e90:	ldr	x1, [sp, #8]
   17e94:	ldr	x0, [sp]
   17e98:	add	x0, x0, #0x82
   17e9c:	lsl	x0, x0, #3
   17ea0:	add	x0, x1, x0
   17ea4:	ldr	w0, [x0, #8]
   17ea8:	mov	w0, w0
   17eac:	add	sp, sp, #0x10
   17eb0:	ret
   17eb4:	str	x30, [sp, #-48]!
   17eb8:	str	x0, [sp, #40]
   17ebc:	str	x1, [sp, #32]
   17ec0:	str	x2, [sp, #24]
   17ec4:	ldr	x1, [sp, #32]
   17ec8:	mov	x0, x1
   17ecc:	lsl	x0, x0, #6
   17ed0:	add	x0, x0, x1
   17ed4:	lsl	x0, x0, #3
   17ed8:	ldr	x1, [sp, #40]
   17edc:	add	x0, x1, x0
   17ee0:	ldr	x1, [sp, #24]
   17ee4:	bl	17a70 <__sanitizer_cov_pcs_init@@Base+0x1fac>
   17ee8:	and	w0, w0, #0xff
   17eec:	ldr	x30, [sp], #48
   17ef0:	ret
   17ef4:	str	x30, [sp, #-48]!
   17ef8:	str	x0, [sp, #24]
   17efc:	str	x1, [sp, #16]
   17f00:	ldr	x0, [sp, #24]
   17f04:	ldr	x0, [x0, #520]
   17f08:	str	x0, [sp, #40]
   17f0c:	ldr	x0, [sp, #16]
   17f10:	str	x0, [sp, #32]
   17f14:	ldr	x1, [sp, #40]
   17f18:	ldr	x0, [sp, #32]
   17f1c:	cmp	x1, x0
   17f20:	cset	w0, ne  // ne = any
   17f24:	and	w0, w0, #0xff
   17f28:	and	x0, x0, #0xff
   17f2c:	cmp	x0, #0x0
   17f30:	b.eq	17f54 <__sanitizer_cov_pcs_init@@Base+0x2490>  // b.none
   17f34:	ldr	x4, [sp, #32]
   17f38:	ldr	x3, [sp, #40]
   17f3c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   17f40:	add	x2, x0, #0x178
   17f44:	mov	w1, #0x6c                  	// #108
   17f48:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   17f4c:	add	x0, x0, #0x98
   17f50:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   17f54:	ldr	x0, [sp, #24]
   17f58:	ldr	x30, [sp], #48
   17f5c:	ret
   17f60:	str	x30, [sp, #-32]!
   17f64:	str	x0, [sp, #24]
   17f68:	str	x1, [sp, #16]
   17f6c:	ldr	x1, [sp, #16]
   17f70:	ldr	x0, [sp, #24]
   17f74:	bl	18d58 <__sanitizer_cov_pcs_init@@Base+0x3294>
   17f78:	ldr	x1, [sp, #16]
   17f7c:	ldr	x0, [sp, #24]
   17f80:	bl	17e3c <__sanitizer_cov_pcs_init@@Base+0x2378>
   17f84:	ldr	x30, [sp], #32
   17f88:	ret
   17f8c:	str	x30, [sp, #-80]!
   17f90:	str	x0, [sp, #40]
   17f94:	str	x1, [sp, #32]
   17f98:	str	x2, [sp, #24]
   17f9c:	ldr	x0, [sp, #40]
   17fa0:	add	x0, x0, #0x208, lsl #12
   17fa4:	str	x0, [sp, #72]
   17fa8:	ldr	x1, [sp, #40]
   17fac:	mov	x0, #0x8208                	// #33288
   17fb0:	movk	x0, #0x20, lsl #16
   17fb4:	add	x0, x1, x0
   17fb8:	str	x0, [sp, #64]
   17fbc:	ldr	x1, [sp, #32]
   17fc0:	mov	x0, x1
   17fc4:	lsl	x0, x0, #6
   17fc8:	add	x0, x0, x1
   17fcc:	lsl	x0, x0, #3
   17fd0:	ldr	x1, [sp, #40]
   17fd4:	add	x0, x1, x0
   17fd8:	mov	x1, x0
   17fdc:	ldr	x0, [sp, #72]
   17fe0:	bl	181c8 <__sanitizer_cov_pcs_init@@Base+0x2704>
   17fe4:	ldr	x0, [sp, #64]
   17fe8:	bl	178f0 <__sanitizer_cov_pcs_init@@Base+0x1e2c>
   17fec:	ldr	x1, [sp, #32]
   17ff0:	ldr	x0, [sp, #64]
   17ff4:	bl	185f4 <__sanitizer_cov_pcs_init@@Base+0x2b30>
   17ff8:	ldr	x0, [sp, #72]
   17ffc:	bl	179c0 <__sanitizer_cov_pcs_init@@Base+0x1efc>
   18000:	and	w0, w0, #0xff
   18004:	eor	w0, w0, #0x1
   18008:	and	w0, w0, #0xff
   1800c:	cmp	w0, #0x0
   18010:	b.eq	18064 <__sanitizer_cov_pcs_init@@Base+0x25a0>  // b.none
   18014:	ldr	x0, [sp, #72]
   18018:	bl	18764 <__sanitizer_cov_pcs_init@@Base+0x2ca0>
   1801c:	str	x0, [sp, #56]
   18020:	ldr	x1, [sp, #56]
   18024:	ldr	x0, [sp, #64]
   18028:	bl	185f4 <__sanitizer_cov_pcs_init@@Base+0x2b30>
   1802c:	and	w0, w0, #0xff
   18030:	cmp	w0, #0x0
   18034:	b.eq	17ff8 <__sanitizer_cov_pcs_init@@Base+0x2534>  // b.none
   18038:	ldr	x1, [sp, #56]
   1803c:	mov	x0, x1
   18040:	lsl	x0, x0, #6
   18044:	add	x0, x0, x1
   18048:	lsl	x0, x0, #3
   1804c:	ldr	x1, [sp, #40]
   18050:	add	x0, x1, x0
   18054:	mov	x1, x0
   18058:	ldr	x0, [sp, #72]
   1805c:	bl	17bf0 <__sanitizer_cov_pcs_init@@Base+0x212c>
   18060:	b	17ff8 <__sanitizer_cov_pcs_init@@Base+0x2534>
   18064:	ldr	x1, [sp, #64]
   18068:	ldr	x0, [sp, #24]
   1806c:	bl	18e20 <__sanitizer_cov_pcs_init@@Base+0x335c>
   18070:	and	w0, w0, #0xff
   18074:	ldr	x30, [sp], #80
   18078:	ret
   1807c:	str	x30, [sp, #-80]!
   18080:	str	x0, [sp, #56]
   18084:	str	x1, [sp, #48]
   18088:	str	x2, [sp, #40]
   1808c:	str	x3, [sp, #32]
   18090:	str	x4, [sp, #24]
   18094:	str	xzr, [sp, #72]
   18098:	ldr	x0, [sp, #56]
   1809c:	add	x0, x0, #0x208, lsl #12
   180a0:	ldr	x1, [sp, #48]
   180a4:	bl	181c8 <__sanitizer_cov_pcs_init@@Base+0x2704>
   180a8:	ldr	x0, [sp, #56]
   180ac:	add	x0, x0, #0x208, lsl #12
   180b0:	bl	179c0 <__sanitizer_cov_pcs_init@@Base+0x1efc>
   180b4:	and	w0, w0, #0xff
   180b8:	eor	w0, w0, #0x1
   180bc:	and	w0, w0, #0xff
   180c0:	cmp	w0, #0x0
   180c4:	b.eq	1813c <__sanitizer_cov_pcs_init@@Base+0x2678>  // b.none
   180c8:	ldr	x0, [sp, #56]
   180cc:	add	x0, x0, #0x208, lsl #12
   180d0:	bl	18764 <__sanitizer_cov_pcs_init@@Base+0x2ca0>
   180d4:	str	x0, [sp, #64]
   180d8:	ldr	x1, [sp, #64]
   180dc:	mov	x0, x1
   180e0:	lsl	x0, x0, #6
   180e4:	add	x0, x0, x1
   180e8:	lsl	x0, x0, #3
   180ec:	ldr	x1, [sp, #56]
   180f0:	add	x0, x1, x0
   180f4:	ldr	x1, [sp, #40]
   180f8:	bl	185f4 <__sanitizer_cov_pcs_init@@Base+0x2b30>
   180fc:	and	w0, w0, #0xff
   18100:	cmp	w0, #0x0
   18104:	b.eq	180a8 <__sanitizer_cov_pcs_init@@Base+0x25e4>  // b.none
   18108:	ldr	x1, [sp, #72]
   1810c:	ldr	x0, [sp, #24]
   18110:	cmp	x1, x0
   18114:	b.cs	180a8 <__sanitizer_cov_pcs_init@@Base+0x25e4>  // b.hs, b.nlast
   18118:	ldr	x0, [sp, #72]
   1811c:	add	x1, x0, #0x1
   18120:	str	x1, [sp, #72]
   18124:	lsl	x0, x0, #3
   18128:	ldr	x1, [sp, #32]
   1812c:	add	x0, x1, x0
   18130:	ldr	x1, [sp, #64]
   18134:	str	x1, [x0]
   18138:	b	180a8 <__sanitizer_cov_pcs_init@@Base+0x25e4>
   1813c:	ldr	x0, [sp, #72]
   18140:	ldr	x30, [sp], #80
   18144:	ret
   18148:	sub	sp, sp, #0x20
   1814c:	str	x0, [sp, #8]
   18150:	str	x1, [sp]
   18154:	str	xzr, [sp, #24]
   18158:	ldr	x0, [sp, #8]
   1815c:	ldr	x0, [x0, #1560]
   18160:	ldr	x1, [sp, #24]
   18164:	cmp	x1, x0
   18168:	b.cs	181bc <__sanitizer_cov_pcs_init@@Base+0x26f8>  // b.hs, b.nlast
   1816c:	ldr	x1, [sp, #8]
   18170:	ldr	x0, [sp, #24]
   18174:	add	x0, x0, #0x82
   18178:	lsl	x0, x0, #3
   1817c:	add	x0, x1, x0
   18180:	ldr	w0, [x0, #8]
   18184:	ldr	x1, [sp]
   18188:	cmp	w0, w1
   1818c:	b.ne	181ac <__sanitizer_cov_pcs_init@@Base+0x26e8>  // b.any
   18190:	ldr	x1, [sp, #8]
   18194:	ldr	x0, [sp, #24]
   18198:	add	x0, x0, #0x82
   1819c:	lsl	x0, x0, #3
   181a0:	add	x0, x1, x0
   181a4:	ldr	w0, [x0, #12]
   181a8:	b	181c0 <__sanitizer_cov_pcs_init@@Base+0x26fc>
   181ac:	ldr	x0, [sp, #24]
   181b0:	add	x0, x0, #0x1
   181b4:	str	x0, [sp, #24]
   181b8:	b	18158 <__sanitizer_cov_pcs_init@@Base+0x2694>
   181bc:	mov	w0, #0x0                   	// #0
   181c0:	add	sp, sp, #0x20
   181c4:	ret
   181c8:	str	x30, [sp, #-32]!
   181cc:	str	x0, [sp, #24]
   181d0:	str	x1, [sp, #16]
   181d4:	ldr	x0, [sp, #24]
   181d8:	bl	178f0 <__sanitizer_cov_pcs_init@@Base+0x1e2c>
   181dc:	ldr	x1, [sp, #16]
   181e0:	ldr	x0, [sp, #24]
   181e4:	bl	17bf0 <__sanitizer_cov_pcs_init@@Base+0x212c>
   181e8:	nop
   181ec:	ldr	x30, [sp], #32
   181f0:	ret
   181f4:	str	x30, [sp, #-80]!
   181f8:	str	x0, [sp, #56]
   181fc:	str	x1, [sp, #48]
   18200:	str	x2, [sp, #40]
   18204:	str	x3, [sp, #32]
   18208:	str	x4, [sp, #24]
   1820c:	mov	x0, #0x1                   	// #1
   18210:	str	x0, [sp, #72]
   18214:	ldr	x1, [sp, #72]
   18218:	ldr	x0, [sp, #24]
   1821c:	cmp	x1, x0
   18220:	b.hi	18270 <__sanitizer_cov_pcs_init@@Base+0x27ac>  // b.pmore
   18224:	ldr	x4, [sp, #72]
   18228:	ldr	x3, [sp, #32]
   1822c:	ldr	x2, [sp, #40]
   18230:	ldr	x1, [sp, #48]
   18234:	ldr	x0, [sp, #56]
   18238:	bl	18f3c <__sanitizer_cov_pcs_init@@Base+0x3478>
   1823c:	mov	x1, x0
   18240:	ldr	x0, [sp, #72]
   18244:	cmp	x0, x1
   18248:	cset	w0, eq  // eq = none
   1824c:	and	w0, w0, #0xff
   18250:	cmp	w0, #0x0
   18254:	b.eq	18260 <__sanitizer_cov_pcs_init@@Base+0x279c>  // b.none
   18258:	ldr	x0, [sp, #72]
   1825c:	b	18274 <__sanitizer_cov_pcs_init@@Base+0x27b0>
   18260:	ldr	x0, [sp, #72]
   18264:	add	x0, x0, #0x1
   18268:	str	x0, [sp, #72]
   1826c:	b	18214 <__sanitizer_cov_pcs_init@@Base+0x2750>
   18270:	mov	x0, #0x0                   	// #0
   18274:	ldr	x30, [sp], #80
   18278:	ret
   1827c:	str	x30, [sp, #-32]!
   18280:	str	x0, [sp, #24]
   18284:	str	x1, [sp, #16]
   18288:	ldr	x1, [sp, #16]
   1828c:	ldr	x0, [sp, #24]
   18290:	bl	19028 <__sanitizer_cov_pcs_init@@Base+0x3564>
   18294:	ldr	x0, [sp, #24]
   18298:	ldr	x1, [x0]
   1829c:	ldr	x0, [sp, #16]
   182a0:	add	x0, x1, x0
   182a4:	ldr	x30, [sp], #32
   182a8:	ret
   182ac:	str	x30, [sp, #-112]!
   182b0:	str	x0, [sp, #40]
   182b4:	str	x1, [sp, #32]
   182b8:	str	x2, [sp, #24]
   182bc:	str	w3, [sp, #20]
   182c0:	ldr	x0, [sp, #40]
   182c4:	ldr	x0, [x0, #520]
   182c8:	str	x0, [sp, #104]
   182cc:	ldr	x0, [sp, #24]
   182d0:	str	x0, [sp, #96]
   182d4:	ldr	x1, [sp, #104]
   182d8:	ldr	x0, [sp, #96]
   182dc:	cmp	x1, x0
   182e0:	cset	w0, ne  // ne = any
   182e4:	and	w0, w0, #0xff
   182e8:	and	x0, x0, #0xff
   182ec:	cmp	x0, #0x0
   182f0:	b.eq	18314 <__sanitizer_cov_pcs_init@@Base+0x2850>  // b.none
   182f4:	ldr	x4, [sp, #96]
   182f8:	ldr	x3, [sp, #104]
   182fc:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   18300:	add	x2, x0, #0x178
   18304:	mov	w1, #0x3c                  	// #60
   18308:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1830c:	add	x0, x0, #0x98
   18310:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   18314:	ldr	x0, [sp, #40]
   18318:	ldr	x1, [sp, #32]
   1831c:	bl	185f4 <__sanitizer_cov_pcs_init@@Base+0x2b30>
   18320:	and	w0, w0, #0xff
   18324:	eor	w0, w0, #0x1
   18328:	and	w0, w0, #0xff
   1832c:	cmp	w0, #0x0
   18330:	b.eq	183b4 <__sanitizer_cov_pcs_init@@Base+0x28f0>  // b.none
   18334:	ldr	x0, [sp, #40]
   18338:	ldr	x0, [x0, #1040]
   1833c:	str	x0, [sp, #64]
   18340:	mov	x0, #0x40                  	// #64
   18344:	str	x0, [sp, #56]
   18348:	ldr	x1, [sp, #64]
   1834c:	ldr	x0, [sp, #56]
   18350:	cmp	x1, x0
   18354:	cset	w0, cs  // cs = hs, nlast
   18358:	and	w0, w0, #0xff
   1835c:	and	x0, x0, #0xff
   18360:	cmp	x0, #0x0
   18364:	b.eq	18388 <__sanitizer_cov_pcs_init@@Base+0x28c4>  // b.none
   18368:	ldr	x4, [sp, #56]
   1836c:	ldr	x3, [sp, #64]
   18370:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   18374:	add	x2, x0, #0x198
   18378:	mov	w1, #0x3f                  	// #63
   1837c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   18380:	add	x0, x0, #0x98
   18384:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   18388:	ldr	x0, [sp, #40]
   1838c:	ldr	x0, [x0, #1040]
   18390:	add	x2, x0, #0x1
   18394:	ldr	x1, [sp, #40]
   18398:	str	x2, [x1, #1040]
   1839c:	ldr	x1, [sp, #40]
   183a0:	add	x0, x0, #0x42
   183a4:	ldr	x2, [sp, #32]
   183a8:	str	x2, [x1, x0, lsl #3]
   183ac:	mov	w0, #0x0                   	// #0
   183b0:	b	18450 <__sanitizer_cov_pcs_init@@Base+0x298c>
   183b4:	ldr	x0, [sp, #40]
   183b8:	ldr	x0, [x0, #1560]
   183bc:	str	x0, [sp, #88]
   183c0:	mov	x0, #0x40                  	// #64
   183c4:	str	x0, [sp, #80]
   183c8:	ldr	x1, [sp, #88]
   183cc:	ldr	x0, [sp, #80]
   183d0:	cmp	x1, x0
   183d4:	cset	w0, cs  // cs = hs, nlast
   183d8:	and	w0, w0, #0xff
   183dc:	and	x0, x0, #0xff
   183e0:	cmp	x0, #0x0
   183e4:	b.eq	18408 <__sanitizer_cov_pcs_init@@Base+0x2944>  // b.none
   183e8:	ldr	x4, [sp, #80]
   183ec:	ldr	x3, [sp, #88]
   183f0:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   183f4:	add	x2, x0, #0x1f0
   183f8:	mov	w1, #0x43                  	// #67
   183fc:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   18400:	add	x0, x0, #0x98
   18404:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   18408:	ldr	x0, [sp, #32]
   1840c:	str	w0, [sp, #76]
   18410:	ldr	w0, [sp, #76]
   18414:	str	w0, [sp, #48]
   18418:	ldr	w0, [sp, #20]
   1841c:	str	w0, [sp, #52]
   18420:	ldr	x0, [sp, #40]
   18424:	ldr	x0, [x0, #1560]
   18428:	add	x2, x0, #0x1
   1842c:	ldr	x1, [sp, #40]
   18430:	str	x2, [x1, #1560]
   18434:	ldr	x1, [sp, #40]
   18438:	add	x0, x0, #0x82
   1843c:	lsl	x0, x0, #3
   18440:	add	x0, x1, x0
   18444:	ldr	x1, [sp, #48]
   18448:	str	x1, [x0, #8]
   1844c:	mov	w0, #0x1                   	// #1
   18450:	ldr	x30, [sp], #112
   18454:	ret
   18458:	str	x30, [sp, #-48]!
   1845c:	str	x0, [sp, #24]
   18460:	str	x1, [sp, #16]
   18464:	ldr	x0, [sp, #24]
   18468:	ldr	x0, [x0, #1040]
   1846c:	cmp	x0, #0x0
   18470:	b.eq	1850c <__sanitizer_cov_pcs_init@@Base+0x2a48>  // b.none
   18474:	ldr	x0, [sp, #24]
   18478:	ldr	x0, [x0, #1040]
   1847c:	sub	x0, x0, #0x1
   18480:	str	x0, [sp, #40]
   18484:	ldr	x0, [sp, #40]
   18488:	cmp	x0, #0x0
   1848c:	b.lt	1850c <__sanitizer_cov_pcs_init@@Base+0x2a48>  // b.tstop
   18490:	ldr	x0, [sp, #24]
   18494:	ldr	x1, [sp, #40]
   18498:	add	x1, x1, #0x42
   1849c:	ldr	x0, [x0, x1, lsl #3]
   184a0:	ldr	x1, [sp, #16]
   184a4:	cmp	x1, x0
   184a8:	b.ne	184fc <__sanitizer_cov_pcs_init@@Base+0x2a38>  // b.any
   184ac:	ldr	x0, [sp, #24]
   184b0:	ldr	x0, [x0, #1040]
   184b4:	sub	x1, x0, #0x1
   184b8:	ldr	x0, [sp, #24]
   184bc:	str	x1, [x0, #1040]
   184c0:	ldr	x0, [sp, #40]
   184c4:	add	x0, x0, #0x42
   184c8:	lsl	x0, x0, #3
   184cc:	ldr	x1, [sp, #24]
   184d0:	add	x2, x1, x0
   184d4:	ldr	x0, [sp, #24]
   184d8:	ldr	x0, [x0, #1040]
   184dc:	add	x0, x0, #0x42
   184e0:	lsl	x0, x0, #3
   184e4:	ldr	x1, [sp, #24]
   184e8:	add	x0, x1, x0
   184ec:	mov	x1, x0
   184f0:	mov	x0, x2
   184f4:	bl	15ef0 <__sanitizer_cov_pcs_init@@Base+0x42c>
   184f8:	b	185ec <__sanitizer_cov_pcs_init@@Base+0x2b28>
   184fc:	ldr	x0, [sp, #40]
   18500:	sub	x0, x0, #0x1
   18504:	str	x0, [sp, #40]
   18508:	b	18484 <__sanitizer_cov_pcs_init@@Base+0x29c0>
   1850c:	ldr	x0, [sp, #24]
   18510:	ldr	x1, [sp, #16]
   18514:	bl	19094 <__sanitizer_cov_pcs_init@@Base+0x35d0>
   18518:	and	w0, w0, #0xff
   1851c:	eor	w0, w0, #0x1
   18520:	and	w0, w0, #0xff
   18524:	cmp	w0, #0x0
   18528:	b.ne	185e8 <__sanitizer_cov_pcs_init@@Base+0x2b24>  // b.any
   1852c:	ldr	x0, [sp, #24]
   18530:	ldr	x0, [x0, #1560]
   18534:	cmp	x0, #0x0
   18538:	b.eq	185ec <__sanitizer_cov_pcs_init@@Base+0x2b28>  // b.none
   1853c:	ldr	x0, [sp, #24]
   18540:	ldr	x0, [x0, #1560]
   18544:	sub	x0, x0, #0x1
   18548:	str	x0, [sp, #32]
   1854c:	ldr	x0, [sp, #32]
   18550:	cmp	x0, #0x0
   18554:	b.lt	185ec <__sanitizer_cov_pcs_init@@Base+0x2b28>  // b.tstop
   18558:	ldr	x1, [sp, #24]
   1855c:	ldr	x0, [sp, #32]
   18560:	add	x0, x0, #0x82
   18564:	lsl	x0, x0, #3
   18568:	add	x0, x1, x0
   1856c:	ldr	w0, [x0, #8]
   18570:	ldr	x1, [sp, #16]
   18574:	cmp	w0, w1
   18578:	b.ne	185d8 <__sanitizer_cov_pcs_init@@Base+0x2b14>  // b.any
   1857c:	ldr	x0, [sp, #32]
   18580:	add	x0, x0, #0x82
   18584:	lsl	x0, x0, #3
   18588:	ldr	x1, [sp, #24]
   1858c:	add	x0, x1, x0
   18590:	add	x2, x0, #0x8
   18594:	ldr	x0, [sp, #24]
   18598:	ldr	x0, [x0, #1560]
   1859c:	sub	x0, x0, #0x1
   185a0:	add	x0, x0, #0x82
   185a4:	lsl	x0, x0, #3
   185a8:	ldr	x1, [sp, #24]
   185ac:	add	x0, x1, x0
   185b0:	add	x0, x0, #0x8
   185b4:	mov	x1, x0
   185b8:	mov	x0, x2
   185bc:	bl	19184 <__sanitizer_cov_pcs_init@@Base+0x36c0>
   185c0:	ldr	x0, [sp, #24]
   185c4:	ldr	x0, [x0, #1560]
   185c8:	sub	x1, x0, #0x1
   185cc:	ldr	x0, [sp, #24]
   185d0:	str	x1, [x0, #1560]
   185d4:	b	185ec <__sanitizer_cov_pcs_init@@Base+0x2b28>
   185d8:	ldr	x0, [sp, #32]
   185dc:	sub	x0, x0, #0x1
   185e0:	str	x0, [sp, #32]
   185e4:	b	1854c <__sanitizer_cov_pcs_init@@Base+0x2a88>
   185e8:	nop
   185ec:	ldr	x30, [sp], #48
   185f0:	ret
   185f4:	str	x30, [sp, #-64]!
   185f8:	str	x0, [sp, #24]
   185fc:	str	x1, [sp, #16]
   18600:	ldr	x1, [sp, #16]
   18604:	ldr	x0, [sp, #24]
   18608:	bl	188bc <__sanitizer_cov_pcs_init@@Base+0x2df8>
   1860c:	ldr	x1, [sp, #16]
   18610:	ldr	x0, [sp, #24]
   18614:	bl	18928 <__sanitizer_cov_pcs_init@@Base+0x2e64>
   18618:	str	x0, [sp, #56]
   1861c:	ldr	x1, [sp, #16]
   18620:	ldr	x0, [sp, #24]
   18624:	bl	1899c <__sanitizer_cov_pcs_init@@Base+0x2ed8>
   18628:	str	x0, [sp, #48]
   1862c:	ldr	x1, [sp, #16]
   18630:	ldr	x0, [sp, #24]
   18634:	bl	18a14 <__sanitizer_cov_pcs_init@@Base+0x2f50>
   18638:	str	x0, [sp, #40]
   1863c:	ldr	x0, [sp, #56]
   18640:	lsl	x0, x0, #3
   18644:	ldr	x1, [sp, #24]
   18648:	add	x0, x1, x0
   1864c:	ldr	x1, [sp, #48]
   18650:	bl	18a88 <__sanitizer_cov_pcs_init@@Base+0x2fc4>
   18654:	and	w0, w0, #0xff
   18658:	eor	w0, w0, #0x1
   1865c:	and	w0, w0, #0xff
   18660:	cmp	w0, #0x0
   18664:	b.eq	186a4 <__sanitizer_cov_pcs_init@@Base+0x2be0>  // b.none
   18668:	ldr	x0, [sp, #56]
   1866c:	lsl	x0, x0, #3
   18670:	ldr	x1, [sp, #24]
   18674:	add	x0, x1, x0
   18678:	ldr	x1, [sp, #48]
   1867c:	bl	18c88 <__sanitizer_cov_pcs_init@@Base+0x31c4>
   18680:	ldr	x0, [sp, #56]
   18684:	lsl	x1, x0, #6
   18688:	ldr	x0, [sp, #48]
   1868c:	add	x0, x1, x0
   18690:	lsl	x0, x0, #3
   18694:	ldr	x1, [sp, #24]
   18698:	add	x0, x1, x0
   1869c:	add	x0, x0, #0x8
   186a0:	bl	18710 <__sanitizer_cov_pcs_init@@Base+0x2c4c>
   186a4:	ldr	x0, [sp, #56]
   186a8:	lsl	x1, x0, #6
   186ac:	ldr	x0, [sp, #48]
   186b0:	add	x0, x1, x0
   186b4:	lsl	x0, x0, #3
   186b8:	ldr	x1, [sp, #24]
   186bc:	add	x0, x1, x0
   186c0:	add	x0, x0, #0x8
   186c4:	ldr	x1, [sp, #40]
   186c8:	bl	18c88 <__sanitizer_cov_pcs_init@@Base+0x31c4>
   186cc:	strb	w0, [sp, #39]
   186d0:	ldrb	w0, [sp, #39]
   186d4:	ldr	x30, [sp], #64
   186d8:	ret
   186dc:	str	x30, [sp, #-32]!
   186e0:	str	x0, [sp, #24]
   186e4:	str	x1, [sp, #16]
   186e8:	ldr	x1, [sp, #16]
   186ec:	mov	x0, x1
   186f0:	lsl	x0, x0, #6
   186f4:	add	x0, x0, x1
   186f8:	lsl	x0, x0, #3
   186fc:	ldr	x1, [sp, #24]
   18700:	add	x0, x1, x0
   18704:	bl	178f0 <__sanitizer_cov_pcs_init@@Base+0x1e2c>
   18708:	ldr	x30, [sp], #32
   1870c:	ret
   18710:	sub	sp, sp, #0x10
   18714:	str	x0, [sp, #8]
   18718:	ldr	x0, [sp, #8]
   1871c:	str	xzr, [x0]
   18720:	nop
   18724:	add	sp, sp, #0x10
   18728:	ret
   1872c:	sub	sp, sp, #0x10
   18730:	str	x0, [sp, #8]
   18734:	mov	x0, #0x1000                	// #4096
   18738:	add	sp, sp, #0x10
   1873c:	ret
   18740:	sub	sp, sp, #0x10
   18744:	str	x0, [sp, #8]
   18748:	ldr	x0, [sp, #8]
   1874c:	ldr	x0, [x0]
   18750:	cmp	x0, #0x0
   18754:	cset	w0, eq  // eq = none
   18758:	and	w0, w0, #0xff
   1875c:	add	sp, sp, #0x10
   18760:	ret
   18764:	str	x30, [sp, #-80]!
   18768:	str	x0, [sp, #24]
   1876c:	str	xzr, [sp, #72]
   18770:	ldr	x0, [sp, #72]
   18774:	cmp	x0, #0x0
   18778:	b.ne	18868 <__sanitizer_cov_pcs_init@@Base+0x2da4>  // b.any
   1877c:	ldr	x0, [sp, #72]
   18780:	lsl	x0, x0, #3
   18784:	ldr	x1, [sp, #24]
   18788:	add	x0, x1, x0
   1878c:	bl	18740 <__sanitizer_cov_pcs_init@@Base+0x2c7c>
   18790:	and	w0, w0, #0xff
   18794:	cmp	w0, #0x0
   18798:	b.ne	18854 <__sanitizer_cov_pcs_init@@Base+0x2d90>  // b.any
   1879c:	ldr	x0, [sp, #72]
   187a0:	lsl	x0, x0, #3
   187a4:	ldr	x1, [sp, #24]
   187a8:	add	x0, x1, x0
   187ac:	bl	18bf8 <__sanitizer_cov_pcs_init@@Base+0x3134>
   187b0:	str	x0, [sp, #64]
   187b4:	ldr	x0, [sp, #72]
   187b8:	lsl	x1, x0, #6
   187bc:	ldr	x0, [sp, #64]
   187c0:	add	x0, x1, x0
   187c4:	lsl	x0, x0, #3
   187c8:	ldr	x1, [sp, #24]
   187cc:	add	x0, x1, x0
   187d0:	add	x0, x0, #0x8
   187d4:	bl	18bf8 <__sanitizer_cov_pcs_init@@Base+0x3134>
   187d8:	str	x0, [sp, #56]
   187dc:	ldr	x0, [sp, #72]
   187e0:	lsl	x1, x0, #6
   187e4:	ldr	x0, [sp, #64]
   187e8:	add	x0, x1, x0
   187ec:	lsl	x0, x0, #3
   187f0:	ldr	x1, [sp, #24]
   187f4:	add	x0, x1, x0
   187f8:	add	x0, x0, #0x8
   187fc:	bl	18740 <__sanitizer_cov_pcs_init@@Base+0x2c7c>
   18800:	and	w0, w0, #0xff
   18804:	eor	w0, w0, #0x1
   18808:	and	w0, w0, #0xff
   1880c:	cmp	w0, #0x0
   18810:	b.eq	1882c <__sanitizer_cov_pcs_init@@Base+0x2d68>  // b.none
   18814:	ldr	x0, [sp, #72]
   18818:	lsl	x0, x0, #3
   1881c:	ldr	x1, [sp, #24]
   18820:	add	x0, x1, x0
   18824:	ldr	x1, [sp, #64]
   18828:	bl	18c88 <__sanitizer_cov_pcs_init@@Base+0x31c4>
   1882c:	ldr	x0, [sp, #72]
   18830:	lsl	x1, x0, #6
   18834:	ldr	x0, [sp, #64]
   18838:	add	x0, x1, x0
   1883c:	lsl	x0, x0, #6
   18840:	ldr	x1, [sp, #56]
   18844:	add	x0, x1, x0
   18848:	str	x0, [sp, #48]
   1884c:	ldr	x0, [sp, #48]
   18850:	b	188b4 <__sanitizer_cov_pcs_init@@Base+0x2df0>
   18854:	nop
   18858:	ldr	x0, [sp, #72]
   1885c:	add	x0, x0, #0x1
   18860:	str	x0, [sp, #72]
   18864:	b	18770 <__sanitizer_cov_pcs_init@@Base+0x2cac>
   18868:	str	xzr, [sp, #40]
   1886c:	str	xzr, [sp, #32]
   18870:	ldr	x1, [sp, #40]
   18874:	ldr	x0, [sp, #32]
   18878:	cmp	x1, x0
   1887c:	cset	w0, eq  // eq = none
   18880:	and	w0, w0, #0xff
   18884:	and	x0, x0, #0xff
   18888:	cmp	x0, #0x0
   1888c:	b.eq	188b0 <__sanitizer_cov_pcs_init@@Base+0x2dec>  // b.none
   18890:	ldr	x4, [sp, #32]
   18894:	ldr	x3, [sp, #40]
   18898:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1889c:	add	x2, x0, #0x250
   188a0:	mov	w1, #0xbf                  	// #191
   188a4:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   188a8:	add	x0, x0, #0x260
   188ac:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   188b0:	mov	x0, #0x0                   	// #0
   188b4:	ldr	x30, [sp], #80
   188b8:	ret
   188bc:	str	x30, [sp, #-48]!
   188c0:	str	x0, [sp, #24]
   188c4:	str	x1, [sp, #16]
   188c8:	ldr	x0, [sp, #16]
   188cc:	str	x0, [sp, #40]
   188d0:	ldr	x0, [sp, #24]
   188d4:	bl	191c4 <__sanitizer_cov_pcs_init@@Base+0x3700>
   188d8:	str	x0, [sp, #32]
   188dc:	ldr	x1, [sp, #40]
   188e0:	ldr	x0, [sp, #32]
   188e4:	cmp	x1, x0
   188e8:	cset	w0, hi  // hi = pmore
   188ec:	and	w0, w0, #0xff
   188f0:	and	x0, x0, #0xff
   188f4:	cmp	x0, #0x0
   188f8:	b.eq	1891c <__sanitizer_cov_pcs_init@@Base+0x2e58>  // b.none
   188fc:	ldr	x4, [sp, #32]
   18900:	ldr	x3, [sp, #40]
   18904:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   18908:	add	x2, x0, #0x2a0
   1890c:	mov	w1, #0x143                 	// #323
   18910:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   18914:	add	x0, x0, #0x260
   18918:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1891c:	nop
   18920:	ldr	x30, [sp], #48
   18924:	ret
   18928:	str	x30, [sp, #-64]!
   1892c:	str	x0, [sp, #24]
   18930:	str	x1, [sp, #16]
   18934:	ldr	x0, [sp, #16]
   18938:	lsr	x0, x0, #12
   1893c:	str	x0, [sp, #56]
   18940:	ldr	x0, [sp, #56]
   18944:	str	x0, [sp, #48]
   18948:	mov	x0, #0x1                   	// #1
   1894c:	str	x0, [sp, #40]
   18950:	ldr	x1, [sp, #48]
   18954:	ldr	x0, [sp, #40]
   18958:	cmp	x1, x0
   1895c:	cset	w0, hi  // hi = pmore
   18960:	and	w0, w0, #0xff
   18964:	and	x0, x0, #0xff
   18968:	cmp	x0, #0x0
   1896c:	b.eq	18990 <__sanitizer_cov_pcs_init@@Base+0x2ecc>  // b.none
   18970:	ldr	x4, [sp, #40]
   18974:	ldr	x3, [sp, #48]
   18978:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1897c:	add	x2, x0, #0x2b8
   18980:	mov	w1, #0x147                 	// #327
   18984:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   18988:	add	x0, x0, #0x260
   1898c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   18990:	ldr	x0, [sp, #56]
   18994:	ldr	x30, [sp], #64
   18998:	ret
   1899c:	str	x30, [sp, #-64]!
   189a0:	str	x0, [sp, #24]
   189a4:	str	x1, [sp, #16]
   189a8:	ldr	x0, [sp, #16]
   189ac:	lsr	x0, x0, #6
   189b0:	and	x0, x0, #0x3f
   189b4:	str	x0, [sp, #56]
   189b8:	ldr	x0, [sp, #56]
   189bc:	str	x0, [sp, #48]
   189c0:	mov	x0, #0x40                  	// #64
   189c4:	str	x0, [sp, #40]
   189c8:	ldr	x1, [sp, #48]
   189cc:	ldr	x0, [sp, #40]
   189d0:	cmp	x1, x0
   189d4:	cset	w0, hi  // hi = pmore
   189d8:	and	w0, w0, #0xff
   189dc:	and	x0, x0, #0xff
   189e0:	cmp	x0, #0x0
   189e4:	b.eq	18a08 <__sanitizer_cov_pcs_init@@Base+0x2f44>  // b.none
   189e8:	ldr	x4, [sp, #40]
   189ec:	ldr	x3, [sp, #48]
   189f0:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   189f4:	add	x2, x0, #0x2d8
   189f8:	mov	w1, #0x14d                 	// #333
   189fc:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   18a00:	add	x0, x0, #0x260
   18a04:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   18a08:	ldr	x0, [sp, #56]
   18a0c:	ldr	x30, [sp], #64
   18a10:	ret
   18a14:	str	x30, [sp, #-64]!
   18a18:	str	x0, [sp, #24]
   18a1c:	str	x1, [sp, #16]
   18a20:	ldr	x0, [sp, #16]
   18a24:	and	x0, x0, #0x3f
   18a28:	str	x0, [sp, #56]
   18a2c:	ldr	x0, [sp, #56]
   18a30:	str	x0, [sp, #48]
   18a34:	mov	x0, #0x40                  	// #64
   18a38:	str	x0, [sp, #40]
   18a3c:	ldr	x1, [sp, #48]
   18a40:	ldr	x0, [sp, #40]
   18a44:	cmp	x1, x0
   18a48:	cset	w0, hi  // hi = pmore
   18a4c:	and	w0, w0, #0xff
   18a50:	and	x0, x0, #0xff
   18a54:	cmp	x0, #0x0
   18a58:	b.eq	18a7c <__sanitizer_cov_pcs_init@@Base+0x2fb8>  // b.none
   18a5c:	ldr	x4, [sp, #40]
   18a60:	ldr	x3, [sp, #48]
   18a64:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   18a68:	add	x2, x0, #0x2d8
   18a6c:	mov	w1, #0x153                 	// #339
   18a70:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   18a74:	add	x0, x0, #0x260
   18a78:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   18a7c:	ldr	x0, [sp, #56]
   18a80:	ldr	x30, [sp], #64
   18a84:	ret
   18a88:	stp	x19, x30, [sp, #-32]!
   18a8c:	str	x0, [sp, #24]
   18a90:	str	x1, [sp, #16]
   18a94:	ldr	x0, [sp, #24]
   18a98:	ldr	x19, [x0]
   18a9c:	ldr	x1, [sp, #16]
   18aa0:	ldr	x0, [sp, #24]
   18aa4:	bl	191d8 <__sanitizer_cov_pcs_init@@Base+0x3714>
   18aa8:	and	x0, x19, x0
   18aac:	cmp	x0, #0x0
   18ab0:	cset	w0, ne  // ne = any
   18ab4:	and	w0, w0, #0xff
   18ab8:	ldp	x19, x30, [sp], #32
   18abc:	ret
   18ac0:	str	x30, [sp, #-64]!
   18ac4:	str	x0, [sp, #24]
   18ac8:	str	x1, [sp, #16]
   18acc:	strb	wzr, [sp, #63]
   18ad0:	str	xzr, [sp, #48]
   18ad4:	ldr	x0, [sp, #48]
   18ad8:	cmp	x0, #0x0
   18adc:	b.ne	18bec <__sanitizer_cov_pcs_init@@Base+0x3128>  // b.any
   18ae0:	ldr	x0, [sp, #24]
   18ae4:	ldr	x1, [sp, #48]
   18ae8:	ldr	x0, [x0, x1, lsl #3]
   18aec:	str	x0, [sp, #32]
   18af0:	ldr	x0, [sp, #48]
   18af4:	lsl	x0, x0, #3
   18af8:	ldr	x1, [sp, #16]
   18afc:	add	x1, x1, x0
   18b00:	add	x0, sp, #0x20
   18b04:	bl	19250 <__sanitizer_cov_pcs_init@@Base+0x378c>
   18b08:	add	x0, sp, #0x20
   18b0c:	bl	18740 <__sanitizer_cov_pcs_init@@Base+0x2c7c>
   18b10:	and	w0, w0, #0xff
   18b14:	eor	w0, w0, #0x1
   18b18:	and	w0, w0, #0xff
   18b1c:	cmp	w0, #0x0
   18b20:	b.eq	18bdc <__sanitizer_cov_pcs_init@@Base+0x3118>  // b.none
   18b24:	add	x0, sp, #0x20
   18b28:	bl	18bf8 <__sanitizer_cov_pcs_init@@Base+0x3134>
   18b2c:	str	x0, [sp, #40]
   18b30:	ldr	x0, [sp, #48]
   18b34:	lsl	x1, x0, #6
   18b38:	ldr	x0, [sp, #40]
   18b3c:	add	x0, x1, x0
   18b40:	lsl	x0, x0, #3
   18b44:	ldr	x1, [sp, #24]
   18b48:	add	x0, x1, x0
   18b4c:	add	x2, x0, #0x8
   18b50:	ldr	x0, [sp, #48]
   18b54:	lsl	x1, x0, #6
   18b58:	ldr	x0, [sp, #40]
   18b5c:	add	x0, x1, x0
   18b60:	lsl	x0, x0, #3
   18b64:	ldr	x1, [sp, #16]
   18b68:	add	x0, x1, x0
   18b6c:	add	x0, x0, #0x8
   18b70:	mov	x1, x0
   18b74:	mov	x0, x2
   18b78:	bl	192a4 <__sanitizer_cov_pcs_init@@Base+0x37e0>
   18b7c:	and	w0, w0, #0xff
   18b80:	cmp	w0, #0x0
   18b84:	b.eq	18b90 <__sanitizer_cov_pcs_init@@Base+0x30cc>  // b.none
   18b88:	mov	w0, #0x1                   	// #1
   18b8c:	strb	w0, [sp, #63]
   18b90:	ldr	x0, [sp, #48]
   18b94:	lsl	x1, x0, #6
   18b98:	ldr	x0, [sp, #40]
   18b9c:	add	x0, x1, x0
   18ba0:	lsl	x0, x0, #3
   18ba4:	ldr	x1, [sp, #24]
   18ba8:	add	x0, x1, x0
   18bac:	add	x0, x0, #0x8
   18bb0:	bl	18740 <__sanitizer_cov_pcs_init@@Base+0x2c7c>
   18bb4:	and	w0, w0, #0xff
   18bb8:	cmp	w0, #0x0
   18bbc:	b.eq	18b08 <__sanitizer_cov_pcs_init@@Base+0x3044>  // b.none
   18bc0:	ldr	x0, [sp, #48]
   18bc4:	lsl	x0, x0, #3
   18bc8:	ldr	x1, [sp, #24]
   18bcc:	add	x0, x1, x0
   18bd0:	ldr	x1, [sp, #40]
   18bd4:	bl	192fc <__sanitizer_cov_pcs_init@@Base+0x3838>
   18bd8:	b	18b08 <__sanitizer_cov_pcs_init@@Base+0x3044>
   18bdc:	ldr	x0, [sp, #48]
   18be0:	add	x0, x0, #0x1
   18be4:	str	x0, [sp, #48]
   18be8:	b	18ad4 <__sanitizer_cov_pcs_init@@Base+0x3010>
   18bec:	ldrb	w0, [sp, #63]
   18bf0:	ldr	x30, [sp], #64
   18bf4:	ret
   18bf8:	str	x30, [sp, #-64]!
   18bfc:	str	x0, [sp, #24]
   18c00:	ldr	x0, [sp, #24]
   18c04:	bl	18740 <__sanitizer_cov_pcs_init@@Base+0x2c7c>
   18c08:	and	w0, w0, #0xff
   18c0c:	eor	w0, w0, #0x1
   18c10:	and	w0, w0, #0xff
   18c14:	and	x0, x0, #0xff
   18c18:	str	x0, [sp, #56]
   18c1c:	str	xzr, [sp, #48]
   18c20:	ldr	x1, [sp, #56]
   18c24:	ldr	x0, [sp, #48]
   18c28:	cmp	x1, x0
   18c2c:	cset	w0, eq  // eq = none
   18c30:	and	w0, w0, #0xff
   18c34:	and	x0, x0, #0xff
   18c38:	cmp	x0, #0x0
   18c3c:	b.eq	18c60 <__sanitizer_cov_pcs_init@@Base+0x319c>  // b.none
   18c40:	ldr	x4, [sp, #48]
   18c44:	ldr	x3, [sp, #56]
   18c48:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   18c4c:	add	x2, x0, #0x2f8
   18c50:	mov	w1, #0x30                  	// #48
   18c54:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   18c58:	add	x0, x0, #0x260
   18c5c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   18c60:	ldr	x0, [sp, #24]
   18c64:	ldr	x0, [x0]
   18c68:	bl	16b74 <__sanitizer_cov_pcs_init@@Base+0x10b0>
   18c6c:	str	x0, [sp, #40]
   18c70:	ldr	x1, [sp, #40]
   18c74:	ldr	x0, [sp, #24]
   18c78:	bl	192fc <__sanitizer_cov_pcs_init@@Base+0x3838>
   18c7c:	ldr	x0, [sp, #40]
   18c80:	ldr	x30, [sp], #64
   18c84:	ret
   18c88:	str	x30, [sp, #-48]!
   18c8c:	str	x0, [sp, #24]
   18c90:	str	x1, [sp, #16]
   18c94:	ldr	x0, [sp, #24]
   18c98:	ldr	x0, [x0]
   18c9c:	str	x0, [sp, #40]
   18ca0:	ldr	x1, [sp, #16]
   18ca4:	ldr	x0, [sp, #24]
   18ca8:	bl	191d8 <__sanitizer_cov_pcs_init@@Base+0x3714>
   18cac:	mov	x1, x0
   18cb0:	ldr	x0, [sp, #24]
   18cb4:	ldr	x0, [x0]
   18cb8:	orr	x1, x1, x0
   18cbc:	ldr	x0, [sp, #24]
   18cc0:	str	x1, [x0]
   18cc4:	ldr	x0, [sp, #24]
   18cc8:	ldr	x0, [x0]
   18ccc:	ldr	x1, [sp, #40]
   18cd0:	cmp	x1, x0
   18cd4:	cset	w0, ne  // ne = any
   18cd8:	and	w0, w0, #0xff
   18cdc:	ldr	x30, [sp], #48
   18ce0:	ret
   18ce4:	sub	sp, sp, #0x20
   18ce8:	str	x0, [sp, #8]
   18cec:	str	x1, [sp]
   18cf0:	ldr	x0, [sp, #8]
   18cf4:	ldr	x0, [x0]
   18cf8:	str	x0, [sp, #24]
   18cfc:	ldr	x0, [sp, #8]
   18d00:	ldr	x1, [x0]
   18d04:	ldr	x0, [sp]
   18d08:	ldr	x0, [x0]
   18d0c:	orr	x1, x1, x0
   18d10:	ldr	x0, [sp, #8]
   18d14:	str	x1, [x0]
   18d18:	ldr	x0, [sp, #8]
   18d1c:	ldr	x0, [x0]
   18d20:	ldr	x1, [sp, #24]
   18d24:	cmp	x1, x0
   18d28:	cset	w0, ne  // ne = any
   18d2c:	and	w0, w0, #0xff
   18d30:	add	sp, sp, #0x20
   18d34:	ret
   18d38:	sub	sp, sp, #0x10
   18d3c:	str	x0, [sp, #8]
   18d40:	ldr	x0, [sp, #8]
   18d44:	mov	x1, #0xffffffffffffffff    	// #-1
   18d48:	str	x1, [x0]
   18d4c:	nop
   18d50:	add	sp, sp, #0x10
   18d54:	ret
   18d58:	str	x30, [sp, #-64]!
   18d5c:	str	x0, [sp, #24]
   18d60:	str	x1, [sp, #16]
   18d64:	ldr	x0, [sp, #16]
   18d68:	str	x0, [sp, #56]
   18d6c:	ldr	x0, [sp, #24]
   18d70:	bl	179a4 <__sanitizer_cov_pcs_init@@Base+0x1ee0>
   18d74:	str	x0, [sp, #48]
   18d78:	ldr	x1, [sp, #56]
   18d7c:	ldr	x0, [sp, #48]
   18d80:	cmp	x1, x0
   18d84:	cset	w0, cc  // cc = lo, ul, last
   18d88:	and	w0, w0, #0xff
   18d8c:	and	x0, x0, #0xff
   18d90:	cmp	x0, #0x0
   18d94:	b.eq	18db8 <__sanitizer_cov_pcs_init@@Base+0x32f4>  // b.none
   18d98:	ldr	x4, [sp, #48]
   18d9c:	ldr	x3, [sp, #56]
   18da0:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   18da4:	add	x2, x0, #0x310
   18da8:	mov	w1, #0x172                 	// #370
   18dac:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   18db0:	add	x0, x0, #0x98
   18db4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   18db8:	ldr	x0, [sp, #24]
   18dbc:	ldr	x0, [x0]
   18dc0:	str	x0, [sp, #40]
   18dc4:	ldr	x1, [sp, #16]
   18dc8:	ldr	x0, [sp, #24]
   18dcc:	bl	17e08 <__sanitizer_cov_pcs_init@@Base+0x2344>
   18dd0:	str	x0, [sp, #32]
   18dd4:	ldr	x1, [sp, #40]
   18dd8:	ldr	x0, [sp, #32]
   18ddc:	cmp	x1, x0
   18de0:	cset	w0, ne  // ne = any
   18de4:	and	w0, w0, #0xff
   18de8:	and	x0, x0, #0xff
   18dec:	cmp	x0, #0x0
   18df0:	b.eq	18e14 <__sanitizer_cov_pcs_init@@Base+0x3350>  // b.none
   18df4:	ldr	x4, [sp, #32]
   18df8:	ldr	x3, [sp, #40]
   18dfc:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   18e00:	add	x2, x0, #0x328
   18e04:	mov	w1, #0x173                 	// #371
   18e08:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   18e0c:	add	x0, x0, #0x98
   18e10:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   18e14:	nop
   18e18:	ldr	x30, [sp], #64
   18e1c:	ret
   18e20:	str	x30, [sp, #-64]!
   18e24:	str	x0, [sp, #24]
   18e28:	str	x1, [sp, #16]
   18e2c:	str	xzr, [sp, #56]
   18e30:	ldr	x0, [sp, #56]
   18e34:	cmp	x0, #0x0
   18e38:	b.ne	18f30 <__sanitizer_cov_pcs_init@@Base+0x346c>  // b.any
   18e3c:	ldr	x0, [sp, #24]
   18e40:	ldr	x1, [sp, #56]
   18e44:	ldr	x0, [x0, x1, lsl #3]
   18e48:	str	x0, [sp, #40]
   18e4c:	ldr	x0, [sp, #56]
   18e50:	lsl	x0, x0, #3
   18e54:	ldr	x1, [sp, #16]
   18e58:	add	x1, x1, x0
   18e5c:	add	x0, sp, #0x28
   18e60:	bl	19250 <__sanitizer_cov_pcs_init@@Base+0x378c>
   18e64:	add	x0, sp, #0x28
   18e68:	bl	18740 <__sanitizer_cov_pcs_init@@Base+0x2c7c>
   18e6c:	and	w0, w0, #0xff
   18e70:	eor	w0, w0, #0x1
   18e74:	and	w0, w0, #0xff
   18e78:	cmp	w0, #0x0
   18e7c:	b.eq	18f20 <__sanitizer_cov_pcs_init@@Base+0x345c>  // b.none
   18e80:	add	x0, sp, #0x28
   18e84:	bl	18bf8 <__sanitizer_cov_pcs_init@@Base+0x3134>
   18e88:	str	x0, [sp, #48]
   18e8c:	ldr	x0, [sp, #56]
   18e90:	lsl	x0, x0, #3
   18e94:	ldr	x1, [sp, #16]
   18e98:	add	x0, x1, x0
   18e9c:	ldr	x1, [sp, #48]
   18ea0:	bl	18a88 <__sanitizer_cov_pcs_init@@Base+0x2fc4>
   18ea4:	and	w0, w0, #0xff
   18ea8:	eor	w0, w0, #0x1
   18eac:	and	w0, w0, #0xff
   18eb0:	cmp	w0, #0x0
   18eb4:	b.ne	18f18 <__sanitizer_cov_pcs_init@@Base+0x3454>  // b.any
   18eb8:	ldr	x0, [sp, #56]
   18ebc:	lsl	x1, x0, #6
   18ec0:	ldr	x0, [sp, #48]
   18ec4:	add	x0, x1, x0
   18ec8:	lsl	x0, x0, #3
   18ecc:	ldr	x1, [sp, #24]
   18ed0:	add	x0, x1, x0
   18ed4:	add	x2, x0, #0x8
   18ed8:	ldr	x0, [sp, #56]
   18edc:	lsl	x1, x0, #6
   18ee0:	ldr	x0, [sp, #48]
   18ee4:	add	x0, x1, x0
   18ee8:	lsl	x0, x0, #3
   18eec:	ldr	x1, [sp, #16]
   18ef0:	add	x0, x1, x0
   18ef4:	add	x0, x0, #0x8
   18ef8:	mov	x1, x0
   18efc:	mov	x0, x2
   18f00:	bl	19358 <__sanitizer_cov_pcs_init@@Base+0x3894>
   18f04:	and	w0, w0, #0xff
   18f08:	cmp	w0, #0x0
   18f0c:	b.eq	18e64 <__sanitizer_cov_pcs_init@@Base+0x33a0>  // b.none
   18f10:	mov	w0, #0x1                   	// #1
   18f14:	b	18f34 <__sanitizer_cov_pcs_init@@Base+0x3470>
   18f18:	nop
   18f1c:	b	18e64 <__sanitizer_cov_pcs_init@@Base+0x33a0>
   18f20:	ldr	x0, [sp, #56]
   18f24:	add	x0, x0, #0x1
   18f28:	str	x0, [sp, #56]
   18f2c:	b	18e30 <__sanitizer_cov_pcs_init@@Base+0x336c>
   18f30:	mov	w0, #0x0                   	// #0
   18f34:	ldr	x30, [sp], #64
   18f38:	ret
   18f3c:	str	x30, [sp, #-128]!
   18f40:	str	x0, [sp, #56]
   18f44:	str	x1, [sp, #48]
   18f48:	str	x2, [sp, #40]
   18f4c:	str	x3, [sp, #32]
   18f50:	str	x4, [sp, #24]
   18f54:	ldr	x0, [sp, #24]
   18f58:	cmp	x0, #0x0
   18f5c:	b.ne	18f68 <__sanitizer_cov_pcs_init@@Base+0x34a4>  // b.any
   18f60:	mov	x0, #0x0                   	// #0
   18f64:	b	19020 <__sanitizer_cov_pcs_init@@Base+0x355c>
   18f68:	ldr	x0, [sp, #32]
   18f6c:	ldr	x1, [sp, #48]
   18f70:	str	x1, [x0]
   18f74:	ldr	x1, [sp, #48]
   18f78:	ldr	x0, [sp, #40]
   18f7c:	bl	17a70 <__sanitizer_cov_pcs_init@@Base+0x1fac>
   18f80:	and	w0, w0, #0xff
   18f84:	cmp	w0, #0x0
   18f88:	b.eq	18f94 <__sanitizer_cov_pcs_init@@Base+0x34d0>  // b.none
   18f8c:	mov	x0, #0x1                   	// #1
   18f90:	b	19020 <__sanitizer_cov_pcs_init@@Base+0x355c>
   18f94:	ldr	x1, [sp, #48]
   18f98:	mov	x0, x1
   18f9c:	lsl	x0, x0, #6
   18fa0:	add	x0, x0, x1
   18fa4:	lsl	x0, x0, #3
   18fa8:	ldr	x1, [sp, #56]
   18fac:	add	x1, x1, x0
   18fb0:	add	x0, sp, #0x48
   18fb4:	bl	1938c <__sanitizer_cov_pcs_init@@Base+0x38c8>
   18fb8:	add	x0, sp, #0x48
   18fbc:	bl	193f0 <__sanitizer_cov_pcs_init@@Base+0x392c>
   18fc0:	and	w0, w0, #0xff
   18fc4:	cmp	w0, #0x0
   18fc8:	b.eq	1901c <__sanitizer_cov_pcs_init@@Base+0x3558>  // b.none
   18fcc:	add	x0, sp, #0x48
   18fd0:	bl	19480 <__sanitizer_cov_pcs_init@@Base+0x39bc>
   18fd4:	str	x0, [sp, #120]
   18fd8:	ldr	x0, [sp, #32]
   18fdc:	add	x1, x0, #0x8
   18fe0:	ldr	x0, [sp, #24]
   18fe4:	sub	x0, x0, #0x1
   18fe8:	mov	x4, x0
   18fec:	mov	x3, x1
   18ff0:	ldr	x2, [sp, #40]
   18ff4:	ldr	x1, [sp, #120]
   18ff8:	ldr	x0, [sp, #56]
   18ffc:	bl	18f3c <__sanitizer_cov_pcs_init@@Base+0x3478>
   19000:	str	x0, [sp, #112]
   19004:	ldr	x0, [sp, #112]
   19008:	cmp	x0, #0x0
   1900c:	b.eq	18fb8 <__sanitizer_cov_pcs_init@@Base+0x34f4>  // b.none
   19010:	ldr	x0, [sp, #112]
   19014:	add	x0, x0, #0x1
   19018:	b	19020 <__sanitizer_cov_pcs_init@@Base+0x355c>
   1901c:	mov	x0, #0x0                   	// #0
   19020:	ldr	x30, [sp], #128
   19024:	ret
   19028:	str	x30, [sp, #-48]!
   1902c:	str	x0, [sp, #24]
   19030:	str	x1, [sp, #16]
   19034:	ldr	x0, [sp, #16]
   19038:	str	x0, [sp, #40]
   1903c:	ldr	x0, [sp, #24]
   19040:	bl	179a4 <__sanitizer_cov_pcs_init@@Base+0x1ee0>
   19044:	str	x0, [sp, #32]
   19048:	ldr	x1, [sp, #40]
   1904c:	ldr	x0, [sp, #32]
   19050:	cmp	x1, x0
   19054:	cset	w0, cs  // cs = hs, nlast
   19058:	and	w0, w0, #0xff
   1905c:	and	x0, x0, #0xff
   19060:	cmp	x0, #0x0
   19064:	b.eq	19088 <__sanitizer_cov_pcs_init@@Base+0x35c4>  // b.none
   19068:	ldr	x4, [sp, #32]
   1906c:	ldr	x3, [sp, #40]
   19070:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   19074:	add	x2, x0, #0x358
   19078:	mov	w1, #0x16f                 	// #367
   1907c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   19080:	add	x0, x0, #0x98
   19084:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   19088:	nop
   1908c:	ldr	x30, [sp], #48
   19090:	ret
   19094:	str	x30, [sp, #-64]!
   19098:	str	x0, [sp, #24]
   1909c:	str	x1, [sp, #16]
   190a0:	ldr	x1, [sp, #16]
   190a4:	ldr	x0, [sp, #24]
   190a8:	bl	188bc <__sanitizer_cov_pcs_init@@Base+0x2df8>
   190ac:	ldr	x1, [sp, #16]
   190b0:	ldr	x0, [sp, #24]
   190b4:	bl	18928 <__sanitizer_cov_pcs_init@@Base+0x2e64>
   190b8:	str	x0, [sp, #48]
   190bc:	ldr	x1, [sp, #16]
   190c0:	ldr	x0, [sp, #24]
   190c4:	bl	1899c <__sanitizer_cov_pcs_init@@Base+0x2ed8>
   190c8:	str	x0, [sp, #40]
   190cc:	ldr	x1, [sp, #16]
   190d0:	ldr	x0, [sp, #24]
   190d4:	bl	18a14 <__sanitizer_cov_pcs_init@@Base+0x2f50>
   190d8:	str	x0, [sp, #32]
   190dc:	strb	wzr, [sp, #63]
   190e0:	ldr	x0, [sp, #48]
   190e4:	lsl	x0, x0, #3
   190e8:	ldr	x1, [sp, #24]
   190ec:	add	x0, x1, x0
   190f0:	ldr	x1, [sp, #40]
   190f4:	bl	18a88 <__sanitizer_cov_pcs_init@@Base+0x2fc4>
   190f8:	and	w0, w0, #0xff
   190fc:	cmp	w0, #0x0
   19100:	b.eq	19178 <__sanitizer_cov_pcs_init@@Base+0x36b4>  // b.none
   19104:	ldr	x0, [sp, #48]
   19108:	lsl	x1, x0, #6
   1910c:	ldr	x0, [sp, #40]
   19110:	add	x0, x1, x0
   19114:	lsl	x0, x0, #3
   19118:	ldr	x1, [sp, #24]
   1911c:	add	x0, x1, x0
   19120:	add	x0, x0, #0x8
   19124:	ldr	x1, [sp, #32]
   19128:	bl	192fc <__sanitizer_cov_pcs_init@@Base+0x3838>
   1912c:	strb	w0, [sp, #63]
   19130:	ldr	x0, [sp, #48]
   19134:	lsl	x1, x0, #6
   19138:	ldr	x0, [sp, #40]
   1913c:	add	x0, x1, x0
   19140:	lsl	x0, x0, #3
   19144:	ldr	x1, [sp, #24]
   19148:	add	x0, x1, x0
   1914c:	add	x0, x0, #0x8
   19150:	bl	18740 <__sanitizer_cov_pcs_init@@Base+0x2c7c>
   19154:	and	w0, w0, #0xff
   19158:	cmp	w0, #0x0
   1915c:	b.eq	19178 <__sanitizer_cov_pcs_init@@Base+0x36b4>  // b.none
   19160:	ldr	x0, [sp, #48]
   19164:	lsl	x0, x0, #3
   19168:	ldr	x1, [sp, #24]
   1916c:	add	x0, x1, x0
   19170:	ldr	x1, [sp, #40]
   19174:	bl	192fc <__sanitizer_cov_pcs_init@@Base+0x3838>
   19178:	ldrb	w0, [sp, #63]
   1917c:	ldr	x30, [sp], #64
   19180:	ret
   19184:	sub	sp, sp, #0x20
   19188:	str	x0, [sp, #8]
   1918c:	str	x1, [sp]
   19190:	ldr	x0, [sp, #8]
   19194:	ldr	x0, [x0]
   19198:	str	x0, [sp, #24]
   1919c:	ldr	x0, [sp, #8]
   191a0:	ldr	x1, [sp]
   191a4:	ldr	x1, [x1]
   191a8:	str	x1, [x0]
   191ac:	ldr	x0, [sp]
   191b0:	ldr	x1, [sp, #24]
   191b4:	str	x1, [x0]
   191b8:	nop
   191bc:	add	sp, sp, #0x20
   191c0:	ret
   191c4:	sub	sp, sp, #0x10
   191c8:	str	x0, [sp, #8]
   191cc:	mov	x0, #0x1000                	// #4096
   191d0:	add	sp, sp, #0x10
   191d4:	ret
   191d8:	str	x30, [sp, #-48]!
   191dc:	str	x0, [sp, #24]
   191e0:	str	x1, [sp, #16]
   191e4:	ldr	x0, [sp, #16]
   191e8:	str	x0, [sp, #40]
   191ec:	ldr	x0, [sp, #24]
   191f0:	bl	1973c <__sanitizer_cov_pcs_init@@Base+0x3c78>
   191f4:	str	x0, [sp, #32]
   191f8:	ldr	x1, [sp, #40]
   191fc:	ldr	x0, [sp, #32]
   19200:	cmp	x1, x0
   19204:	cset	w0, cs  // cs = hs, nlast
   19208:	and	w0, w0, #0xff
   1920c:	and	x0, x0, #0xff
   19210:	cmp	x0, #0x0
   19214:	b.eq	19238 <__sanitizer_cov_pcs_init@@Base+0x3774>  // b.none
   19218:	ldr	x4, [sp, #32]
   1921c:	ldr	x3, [sp, #40]
   19220:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   19224:	add	x2, x0, #0x358
   19228:	mov	w1, #0x63                  	// #99
   1922c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   19230:	add	x0, x0, #0x260
   19234:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   19238:	ldr	x0, [sp, #16]
   1923c:	mov	w1, w0
   19240:	mov	x0, #0x1                   	// #1
   19244:	lsl	x0, x0, x1
   19248:	ldr	x30, [sp], #48
   1924c:	ret
   19250:	sub	sp, sp, #0x20
   19254:	str	x0, [sp, #8]
   19258:	str	x1, [sp]
   1925c:	ldr	x0, [sp, #8]
   19260:	ldr	x0, [x0]
   19264:	str	x0, [sp, #24]
   19268:	ldr	x0, [sp, #8]
   1926c:	ldr	x1, [x0]
   19270:	ldr	x0, [sp]
   19274:	ldr	x0, [x0]
   19278:	and	x1, x1, x0
   1927c:	ldr	x0, [sp, #8]
   19280:	str	x1, [x0]
   19284:	ldr	x0, [sp, #8]
   19288:	ldr	x0, [x0]
   1928c:	ldr	x1, [sp, #24]
   19290:	cmp	x1, x0
   19294:	cset	w0, ne  // ne = any
   19298:	and	w0, w0, #0xff
   1929c:	add	sp, sp, #0x20
   192a0:	ret
   192a4:	sub	sp, sp, #0x20
   192a8:	str	x0, [sp, #8]
   192ac:	str	x1, [sp]
   192b0:	ldr	x0, [sp, #8]
   192b4:	ldr	x0, [x0]
   192b8:	str	x0, [sp, #24]
   192bc:	ldr	x0, [sp, #8]
   192c0:	ldr	x1, [x0]
   192c4:	ldr	x0, [sp]
   192c8:	ldr	x0, [x0]
   192cc:	mvn	x0, x0
   192d0:	and	x1, x1, x0
   192d4:	ldr	x0, [sp, #8]
   192d8:	str	x1, [x0]
   192dc:	ldr	x0, [sp, #8]
   192e0:	ldr	x0, [x0]
   192e4:	ldr	x1, [sp, #24]
   192e8:	cmp	x1, x0
   192ec:	cset	w0, ne  // ne = any
   192f0:	and	w0, w0, #0xff
   192f4:	add	sp, sp, #0x20
   192f8:	ret
   192fc:	str	x30, [sp, #-48]!
   19300:	str	x0, [sp, #24]
   19304:	str	x1, [sp, #16]
   19308:	ldr	x0, [sp, #24]
   1930c:	ldr	x0, [x0]
   19310:	str	x0, [sp, #40]
   19314:	ldr	x1, [sp, #16]
   19318:	ldr	x0, [sp, #24]
   1931c:	bl	191d8 <__sanitizer_cov_pcs_init@@Base+0x3714>
   19320:	mvn	x1, x0
   19324:	ldr	x0, [sp, #24]
   19328:	ldr	x0, [x0]
   1932c:	and	x1, x1, x0
   19330:	ldr	x0, [sp, #24]
   19334:	str	x1, [x0]
   19338:	ldr	x0, [sp, #24]
   1933c:	ldr	x0, [x0]
   19340:	ldr	x1, [sp, #40]
   19344:	cmp	x1, x0
   19348:	cset	w0, ne  // ne = any
   1934c:	and	w0, w0, #0xff
   19350:	ldr	x30, [sp], #48
   19354:	ret
   19358:	sub	sp, sp, #0x10
   1935c:	str	x0, [sp, #8]
   19360:	str	x1, [sp]
   19364:	ldr	x0, [sp, #8]
   19368:	ldr	x1, [x0]
   1936c:	ldr	x0, [sp]
   19370:	ldr	x0, [x0]
   19374:	and	x0, x1, x0
   19378:	cmp	x0, #0x0
   1937c:	cset	w0, ne  // ne = any
   19380:	and	w0, w0, #0xff
   19384:	add	sp, sp, #0x10
   19388:	ret
   1938c:	str	x30, [sp, #-32]!
   19390:	str	x0, [sp, #24]
   19394:	str	x1, [sp, #16]
   19398:	ldr	x0, [sp, #24]
   1939c:	ldr	x1, [sp, #16]
   193a0:	str	x1, [x0]
   193a4:	ldr	x0, [sp, #24]
   193a8:	str	xzr, [x0, #8]
   193ac:	ldr	x0, [sp, #24]
   193b0:	str	xzr, [x0, #16]
   193b4:	ldr	x0, [sp, #24]
   193b8:	add	x0, x0, #0x18
   193bc:	bl	19750 <__sanitizer_cov_pcs_init@@Base+0x3c8c>
   193c0:	ldr	x0, [sp, #24]
   193c4:	add	x0, x0, #0x20
   193c8:	bl	19750 <__sanitizer_cov_pcs_init@@Base+0x3c8c>
   193cc:	ldr	x0, [sp, #24]
   193d0:	add	x0, x0, #0x18
   193d4:	bl	19764 <__sanitizer_cov_pcs_init@@Base+0x3ca0>
   193d8:	ldr	x0, [sp, #24]
   193dc:	add	x0, x0, #0x20
   193e0:	bl	19764 <__sanitizer_cov_pcs_init@@Base+0x3ca0>
   193e4:	nop
   193e8:	ldr	x30, [sp], #32
   193ec:	ret
   193f0:	str	x30, [sp, #-48]!
   193f4:	str	x0, [sp, #24]
   193f8:	ldr	x0, [sp, #24]
   193fc:	add	x0, x0, #0x18
   19400:	bl	19780 <__sanitizer_cov_pcs_init@@Base+0x3cbc>
   19404:	and	w0, w0, #0xff
   19408:	cmp	w0, #0x0
   1940c:	b.eq	19418 <__sanitizer_cov_pcs_init@@Base+0x3954>  // b.none
   19410:	mov	w0, #0x1                   	// #1
   19414:	b	19478 <__sanitizer_cov_pcs_init@@Base+0x39b4>
   19418:	ldr	x0, [sp, #24]
   1941c:	ldr	x0, [x0, #8]
   19420:	str	x0, [sp, #40]
   19424:	ldr	x0, [sp, #40]
   19428:	cmp	x0, #0x0
   1942c:	b.ne	19474 <__sanitizer_cov_pcs_init@@Base+0x39b0>  // b.any
   19430:	ldr	x0, [sp, #24]
   19434:	ldr	x1, [x0]
   19438:	ldr	x0, [sp, #40]
   1943c:	lsl	x0, x0, #3
   19440:	add	x0, x1, x0
   19444:	bl	18740 <__sanitizer_cov_pcs_init@@Base+0x2c7c>
   19448:	and	w0, w0, #0xff
   1944c:	eor	w0, w0, #0x1
   19450:	and	w0, w0, #0xff
   19454:	cmp	w0, #0x0
   19458:	b.eq	19464 <__sanitizer_cov_pcs_init@@Base+0x39a0>  // b.none
   1945c:	mov	w0, #0x1                   	// #1
   19460:	b	19478 <__sanitizer_cov_pcs_init@@Base+0x39b4>
   19464:	ldr	x0, [sp, #40]
   19468:	add	x0, x0, #0x1
   1946c:	str	x0, [sp, #40]
   19470:	b	19424 <__sanitizer_cov_pcs_init@@Base+0x3960>
   19474:	mov	w0, #0x0                   	// #0
   19478:	ldr	x30, [sp], #48
   1947c:	ret
   19480:	str	x30, [sp, #-96]!
   19484:	str	x0, [sp, #24]
   19488:	ldr	x0, [sp, #24]
   1948c:	add	x0, x0, #0x18
   19490:	bl	19780 <__sanitizer_cov_pcs_init@@Base+0x3cbc>
   19494:	and	w0, w0, #0xff
   19498:	eor	w0, w0, #0x1
   1949c:	and	w0, w0, #0xff
   194a0:	cmp	w0, #0x0
   194a4:	b.eq	194d0 <__sanitizer_cov_pcs_init@@Base+0x3a0c>  // b.none
   194a8:	ldr	x0, [sp, #24]
   194ac:	add	x0, x0, #0x20
   194b0:	bl	19780 <__sanitizer_cov_pcs_init@@Base+0x3cbc>
   194b4:	and	w0, w0, #0xff
   194b8:	eor	w0, w0, #0x1
   194bc:	and	w0, w0, #0xff
   194c0:	cmp	w0, #0x0
   194c4:	b.eq	194d0 <__sanitizer_cov_pcs_init@@Base+0x3a0c>  // b.none
   194c8:	mov	w0, #0x1                   	// #1
   194cc:	b	194d4 <__sanitizer_cov_pcs_init@@Base+0x3a10>
   194d0:	mov	w0, #0x0                   	// #0
   194d4:	cmp	w0, #0x0
   194d8:	b.eq	19560 <__sanitizer_cov_pcs_init@@Base+0x3a9c>  // b.none
   194dc:	ldr	x0, [sp, #24]
   194e0:	ldr	x0, [x0, #8]
   194e4:	cmp	x0, #0x0
   194e8:	b.ne	19560 <__sanitizer_cov_pcs_init@@Base+0x3a9c>  // b.any
   194ec:	ldr	x0, [sp, #24]
   194f0:	ldr	x1, [x0]
   194f4:	ldr	x0, [sp, #24]
   194f8:	ldr	x0, [x0, #8]
   194fc:	lsl	x0, x0, #3
   19500:	add	x0, x1, x0
   19504:	bl	18740 <__sanitizer_cov_pcs_init@@Base+0x2c7c>
   19508:	and	w0, w0, #0xff
   1950c:	cmp	w0, #0x0
   19510:	b.ne	19544 <__sanitizer_cov_pcs_init@@Base+0x3a80>  // b.any
   19514:	ldr	x0, [sp, #24]
   19518:	ldr	x1, [x0]
   1951c:	ldr	x0, [sp, #24]
   19520:	ldr	x0, [x0, #8]
   19524:	lsl	x0, x0, #3
   19528:	add	x1, x1, x0
   1952c:	add	x0, sp, #0x20
   19530:	bl	197a4 <__sanitizer_cov_pcs_init@@Base+0x3ce0>
   19534:	ldr	x0, [sp, #24]
   19538:	ldr	x1, [sp, #32]
   1953c:	str	x1, [x0, #24]
   19540:	b	19560 <__sanitizer_cov_pcs_init@@Base+0x3a9c>
   19544:	nop
   19548:	ldr	x0, [sp, #24]
   1954c:	ldr	x0, [x0, #8]
   19550:	add	x1, x0, #0x1
   19554:	ldr	x0, [sp, #24]
   19558:	str	x1, [x0, #8]
   1955c:	b	194dc <__sanitizer_cov_pcs_init@@Base+0x3a18>
   19560:	ldr	x0, [sp, #24]
   19564:	add	x0, x0, #0x20
   19568:	bl	19780 <__sanitizer_cov_pcs_init@@Base+0x3cbc>
   1956c:	and	w0, w0, #0xff
   19570:	eor	w0, w0, #0x1
   19574:	and	w0, w0, #0xff
   19578:	cmp	w0, #0x0
   1957c:	b.eq	19634 <__sanitizer_cov_pcs_init@@Base+0x3b70>  // b.none
   19580:	ldr	x0, [sp, #24]
   19584:	add	x0, x0, #0x18
   19588:	bl	19780 <__sanitizer_cov_pcs_init@@Base+0x3cbc>
   1958c:	and	w0, w0, #0xff
   19590:	and	x0, x0, #0xff
   19594:	str	x0, [sp, #88]
   19598:	str	xzr, [sp, #80]
   1959c:	ldr	x1, [sp, #88]
   195a0:	ldr	x0, [sp, #80]
   195a4:	cmp	x1, x0
   195a8:	cset	w0, eq  // eq = none
   195ac:	and	w0, w0, #0xff
   195b0:	and	x0, x0, #0xff
   195b4:	cmp	x0, #0x0
   195b8:	b.eq	195dc <__sanitizer_cov_pcs_init@@Base+0x3b18>  // b.none
   195bc:	ldr	x4, [sp, #80]
   195c0:	ldr	x3, [sp, #88]
   195c4:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   195c8:	add	x2, x0, #0x370
   195cc:	mov	w1, #0x12c                 	// #300
   195d0:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   195d4:	add	x0, x0, #0x260
   195d8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   195dc:	ldr	x0, [sp, #24]
   195e0:	add	x0, x0, #0x18
   195e4:	bl	197cc <__sanitizer_cov_pcs_init@@Base+0x3d08>
   195e8:	mov	x1, x0
   195ec:	ldr	x0, [sp, #24]
   195f0:	str	x1, [x0, #16]
   195f4:	ldr	x0, [sp, #24]
   195f8:	ldr	x1, [x0]
   195fc:	ldr	x0, [sp, #24]
   19600:	ldr	x2, [x0, #8]
   19604:	ldr	x0, [sp, #24]
   19608:	ldr	x0, [x0, #16]
   1960c:	lsl	x2, x2, #6
   19610:	add	x0, x2, x0
   19614:	lsl	x0, x0, #3
   19618:	add	x0, x1, x0
   1961c:	add	x1, x0, #0x8
   19620:	add	x0, sp, #0x28
   19624:	bl	197a4 <__sanitizer_cov_pcs_init@@Base+0x3ce0>
   19628:	ldr	x0, [sp, #24]
   1962c:	ldr	x1, [sp, #40]
   19630:	str	x1, [x0, #32]
   19634:	ldr	x0, [sp, #24]
   19638:	add	x0, x0, #0x20
   1963c:	bl	19780 <__sanitizer_cov_pcs_init@@Base+0x3cbc>
   19640:	and	w0, w0, #0xff
   19644:	and	x0, x0, #0xff
   19648:	str	x0, [sp, #72]
   1964c:	str	xzr, [sp, #64]
   19650:	ldr	x1, [sp, #72]
   19654:	ldr	x0, [sp, #64]
   19658:	cmp	x1, x0
   1965c:	cset	w0, eq  // eq = none
   19660:	and	w0, w0, #0xff
   19664:	and	x0, x0, #0xff
   19668:	cmp	x0, #0x0
   1966c:	b.eq	19690 <__sanitizer_cov_pcs_init@@Base+0x3bcc>  // b.none
   19670:	ldr	x4, [sp, #64]
   19674:	ldr	x3, [sp, #72]
   19678:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1967c:	add	x2, x0, #0x390
   19680:	mov	w1, #0x132                 	// #306
   19684:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   19688:	add	x0, x0, #0x260
   1968c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   19690:	ldr	x0, [sp, #24]
   19694:	add	x0, x0, #0x20
   19698:	bl	197cc <__sanitizer_cov_pcs_init@@Base+0x3d08>
   1969c:	str	x0, [sp, #56]
   196a0:	ldr	x0, [sp, #24]
   196a4:	ldr	x0, [x0, #8]
   196a8:	lsl	x1, x0, #6
   196ac:	ldr	x0, [sp, #24]
   196b0:	ldr	x0, [x0, #16]
   196b4:	add	x0, x1, x0
   196b8:	lsl	x0, x0, #6
   196bc:	ldr	x1, [sp, #56]
   196c0:	add	x0, x1, x0
   196c4:	str	x0, [sp, #48]
   196c8:	ldr	x0, [sp, #24]
   196cc:	add	x0, x0, #0x18
   196d0:	bl	19780 <__sanitizer_cov_pcs_init@@Base+0x3cbc>
   196d4:	and	w0, w0, #0xff
   196d8:	eor	w0, w0, #0x1
   196dc:	and	w0, w0, #0xff
   196e0:	cmp	w0, #0x0
   196e4:	b.eq	19710 <__sanitizer_cov_pcs_init@@Base+0x3c4c>  // b.none
   196e8:	ldr	x0, [sp, #24]
   196ec:	add	x0, x0, #0x20
   196f0:	bl	19780 <__sanitizer_cov_pcs_init@@Base+0x3cbc>
   196f4:	and	w0, w0, #0xff
   196f8:	eor	w0, w0, #0x1
   196fc:	and	w0, w0, #0xff
   19700:	cmp	w0, #0x0
   19704:	b.eq	19710 <__sanitizer_cov_pcs_init@@Base+0x3c4c>  // b.none
   19708:	mov	w0, #0x1                   	// #1
   1970c:	b	19714 <__sanitizer_cov_pcs_init@@Base+0x3c50>
   19710:	mov	w0, #0x0                   	// #0
   19714:	cmp	w0, #0x0
   19718:	b.eq	19730 <__sanitizer_cov_pcs_init@@Base+0x3c6c>  // b.none
   1971c:	ldr	x0, [sp, #24]
   19720:	ldr	x0, [x0, #8]
   19724:	add	x1, x0, #0x1
   19728:	ldr	x0, [sp, #24]
   1972c:	str	x1, [x0, #8]
   19730:	ldr	x0, [sp, #48]
   19734:	ldr	x30, [sp], #96
   19738:	ret
   1973c:	sub	sp, sp, #0x10
   19740:	str	x0, [sp, #8]
   19744:	mov	x0, #0x40                  	// #64
   19748:	add	sp, sp, #0x10
   1974c:	ret
   19750:	sub	sp, sp, #0x10
   19754:	str	x0, [sp, #8]
   19758:	nop
   1975c:	add	sp, sp, #0x10
   19760:	ret
   19764:	str	x30, [sp, #-32]!
   19768:	str	x0, [sp, #24]
   1976c:	ldr	x0, [sp, #24]
   19770:	bl	18710 <__sanitizer_cov_pcs_init@@Base+0x2c4c>
   19774:	nop
   19778:	ldr	x30, [sp], #32
   1977c:	ret
   19780:	str	x30, [sp, #-32]!
   19784:	str	x0, [sp, #24]
   19788:	ldr	x0, [sp, #24]
   1978c:	bl	18740 <__sanitizer_cov_pcs_init@@Base+0x2c7c>
   19790:	and	w0, w0, #0xff
   19794:	eor	w0, w0, #0x1
   19798:	and	w0, w0, #0xff
   1979c:	ldr	x30, [sp], #32
   197a0:	ret
   197a4:	sub	sp, sp, #0x10
   197a8:	str	x0, [sp, #8]
   197ac:	str	x1, [sp]
   197b0:	ldr	x0, [sp, #8]
   197b4:	ldr	x1, [sp]
   197b8:	ldr	x1, [x1]
   197bc:	str	x1, [x0]
   197c0:	nop
   197c4:	add	sp, sp, #0x10
   197c8:	ret
   197cc:	str	x30, [sp, #-32]!
   197d0:	str	x0, [sp, #24]
   197d4:	ldr	x0, [sp, #24]
   197d8:	bl	18bf8 <__sanitizer_cov_pcs_init@@Base+0x3134>
   197dc:	ldr	x30, [sp], #32
   197e0:	ret
   197e4:	str	x30, [sp, #-32]!
   197e8:	str	x0, [sp, #24]
   197ec:	str	x1, [sp, #16]
   197f0:	mov	x4, #0x0                   	// #0
   197f4:	mov	x3, #0x0                   	// #0
   197f8:	ldr	x2, [sp, #16]
   197fc:	ldr	x1, [sp, #24]
   19800:	mov	w0, #0x2                   	// #2
   19804:	bl	2283c <__sanitizer_set_report_fd@@Base+0x8690>
   19808:	nop
   1980c:	ldr	x30, [sp], #32
   19810:	ret
   19814:	str	x30, [sp, #-32]!
   19818:	str	x0, [sp, #24]
   1981c:	ldr	x0, [sp, #24]
   19820:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   19824:	mov	x2, x0
   19828:	ldr	x1, [sp, #24]
   1982c:	adrp	x0, 77000 <_Unwind_Backtrace@GCC_3.3>
   19830:	add	x0, x0, #0x4e0
   19834:	bl	22e74 <__sanitizer_set_report_fd@@Base+0x8cc8>
   19838:	nop
   1983c:	ldr	x30, [sp], #32
   19840:	ret
   19844:	stp	x19, x30, [sp, #-64]!
   19848:	str	x0, [sp, #24]
   1984c:	ldr	x0, [sp, #24]
   19850:	ldr	x0, [x0]
   19854:	bl	1a1e8 <__sanitizer_set_report_fd@@Base+0x3c>
   19858:	ldr	x0, [sp, #24]
   1985c:	ldr	w0, [x0, #8]
   19860:	cmp	w0, #0x1
   19864:	b.eq	19a20 <__sanitizer_cov_pcs_init@@Base+0x3f5c>  // b.none
   19868:	ldr	x0, [sp, #24]
   1986c:	ldr	w0, [x0, #8]
   19870:	cmp	w0, #0x2
   19874:	b.eq	19a20 <__sanitizer_cov_pcs_init@@Base+0x3f5c>  // b.none
   19878:	bl	1ef9c <__sanitizer_set_report_fd@@Base+0x4df0>
   1987c:	str	x0, [sp, #56]
   19880:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   19884:	ldr	x0, [x0, #3848]
   19888:	ldr	x0, [x0]
   1988c:	ldr	x1, [sp, #56]
   19890:	cmp	x1, x0
   19894:	b.ne	198a8 <__sanitizer_cov_pcs_init@@Base+0x3de4>  // b.any
   19898:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1989c:	ldr	x0, [x0, #3840]
   198a0:	ldr	x0, [x0]
   198a4:	str	x0, [sp, #56]
   198a8:	ldr	x0, [sp, #24]
   198ac:	ldr	w0, [x0, #8]
   198b0:	cmn	w0, #0x1
   198b4:	b.eq	198d8 <__sanitizer_cov_pcs_init@@Base+0x3e14>  // b.none
   198b8:	ldr	x0, [sp, #24]
   198bc:	ldr	x0, [x0, #8208]
   198c0:	ldr	x1, [sp, #56]
   198c4:	cmp	x1, x0
   198c8:	b.eq	19a28 <__sanitizer_cov_pcs_init@@Base+0x3f64>  // b.none
   198cc:	ldr	x0, [sp, #24]
   198d0:	ldr	w0, [x0, #8]
   198d4:	bl	227b0 <__sanitizer_set_report_fd@@Base+0x8604>
   198d8:	bl	14598 <__sancov_default_options@@Base+0x41ec>
   198dc:	str	x0, [sp, #48]
   198e0:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   198e4:	ldrb	w0, [x0, #48]
   198e8:	cmp	w0, #0x0
   198ec:	b.eq	19904 <__sanitizer_cov_pcs_init@@Base+0x3e40>  // b.none
   198f0:	ldr	x0, [sp, #48]
   198f4:	cmp	x0, #0x0
   198f8:	b.eq	19904 <__sanitizer_cov_pcs_init@@Base+0x3e40>  // b.none
   198fc:	mov	w0, #0x1                   	// #1
   19900:	b	19908 <__sanitizer_cov_pcs_init@@Base+0x3e44>
   19904:	mov	w0, #0x0                   	// #0
   19908:	cmp	w0, #0x0
   1990c:	b.eq	19948 <__sanitizer_cov_pcs_init@@Base+0x3e84>  // b.none
   19910:	ldr	x1, [sp, #24]
   19914:	mov	x0, #0x100c                	// #4108
   19918:	add	x6, x1, x0
   1991c:	ldr	x0, [sp, #24]
   19920:	add	x0, x0, #0xc
   19924:	ldr	x5, [sp, #56]
   19928:	ldr	x4, [sp, #48]
   1992c:	mov	x3, x0
   19930:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   19934:	add	x2, x0, #0x558
   19938:	mov	x1, #0x1000                	// #4096
   1993c:	mov	x0, x6
   19940:	bl	25b20 <OnPrint@@Base+0x500>
   19944:	b	19978 <__sanitizer_cov_pcs_init@@Base+0x3eb4>
   19948:	ldr	x1, [sp, #24]
   1994c:	mov	x0, #0x100c                	// #4108
   19950:	add	x5, x1, x0
   19954:	ldr	x0, [sp, #24]
   19958:	add	x0, x0, #0xc
   1995c:	ldr	x4, [sp, #56]
   19960:	mov	x3, x0
   19964:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   19968:	add	x2, x0, #0x568
   1996c:	mov	x1, #0x1000                	// #4096
   19970:	mov	x0, x5
   19974:	bl	25b20 <OnPrint@@Base+0x500>
   19978:	ldr	x1, [sp, #24]
   1997c:	mov	x0, #0x100c                	// #4108
   19980:	add	x0, x1, x0
   19984:	mov	x2, #0x0                   	// #0
   19988:	mov	w1, #0x1                   	// #1
   1998c:	bl	22718 <__sanitizer_set_report_fd@@Base+0x856c>
   19990:	mov	w1, w0
   19994:	ldr	x0, [sp, #24]
   19998:	str	w1, [x0, #8]
   1999c:	ldr	x0, [sp, #24]
   199a0:	ldr	w0, [x0, #8]
   199a4:	cmn	w0, #0x1
   199a8:	b.ne	19a10 <__sanitizer_cov_pcs_init@@Base+0x3f4c>  // b.any
   199ac:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   199b0:	add	x0, x0, #0x570
   199b4:	str	x0, [sp, #40]
   199b8:	ldr	x0, [sp, #40]
   199bc:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   199c0:	mov	x4, #0x0                   	// #0
   199c4:	mov	x3, #0x0                   	// #0
   199c8:	mov	x2, x0
   199cc:	ldr	x1, [sp, #40]
   199d0:	mov	w0, #0x2                   	// #2
   199d4:	bl	2283c <__sanitizer_set_report_fd@@Base+0x8690>
   199d8:	ldr	x1, [sp, #24]
   199dc:	mov	x0, #0x100c                	// #4108
   199e0:	add	x19, x1, x0
   199e4:	ldr	x1, [sp, #24]
   199e8:	mov	x0, #0x100c                	// #4108
   199ec:	add	x0, x1, x0
   199f0:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   199f4:	mov	x4, #0x0                   	// #0
   199f8:	mov	x3, #0x0                   	// #0
   199fc:	mov	x2, x0
   19a00:	mov	x1, x19
   19a04:	mov	w0, #0x2                   	// #2
   19a08:	bl	2283c <__sanitizer_set_report_fd@@Base+0x8690>
   19a0c:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   19a10:	ldr	x0, [sp, #24]
   19a14:	ldr	x1, [sp, #56]
   19a18:	str	x1, [x0, #8208]
   19a1c:	b	19a2c <__sanitizer_cov_pcs_init@@Base+0x3f68>
   19a20:	nop
   19a24:	b	19a2c <__sanitizer_cov_pcs_init@@Base+0x3f68>
   19a28:	nop
   19a2c:	ldp	x19, x30, [sp], #64
   19a30:	ret
   19a34:	sub	sp, sp, #0x40
   19a38:	str	x30, [sp, #16]
   19a3c:	str	x0, [sp, #40]
   19a40:	str	x1, [sp, #32]
   19a44:	ldr	x0, [sp, #32]
   19a48:	cmp	x0, #0x0
   19a4c:	b.eq	19be0 <__sanitizer_cov_pcs_init@@Base+0x411c>  // b.none
   19a50:	ldr	x0, [sp, #32]
   19a54:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   19a58:	str	x0, [sp, #56]
   19a5c:	ldr	x0, [sp, #56]
   19a60:	cmp	x0, #0xf9c
   19a64:	b.ls	19af4 <__sanitizer_cov_pcs_init@@Base+0x4030>  // b.plast
   19a68:	ldr	x0, [sp, #32]
   19a6c:	ldrb	w0, [x0]
   19a70:	mov	w1, w0
   19a74:	ldr	x0, [sp, #32]
   19a78:	add	x0, x0, #0x1
   19a7c:	ldrb	w0, [x0]
   19a80:	mov	w2, w0
   19a84:	ldr	x0, [sp, #32]
   19a88:	add	x0, x0, #0x2
   19a8c:	ldrb	w0, [x0]
   19a90:	mov	w3, w0
   19a94:	ldr	x0, [sp, #32]
   19a98:	add	x0, x0, #0x3
   19a9c:	ldrb	w0, [x0]
   19aa0:	mov	w4, w0
   19aa4:	ldr	x0, [sp, #32]
   19aa8:	add	x0, x0, #0x4
   19aac:	ldrb	w0, [x0]
   19ab0:	mov	w5, w0
   19ab4:	ldr	x0, [sp, #32]
   19ab8:	add	x0, x0, #0x5
   19abc:	ldrb	w0, [x0]
   19ac0:	mov	w6, w0
   19ac4:	ldr	x0, [sp, #32]
   19ac8:	add	x0, x0, #0x6
   19acc:	ldrb	w0, [x0]
   19ad0:	mov	w7, w0
   19ad4:	ldr	x0, [sp, #32]
   19ad8:	add	x0, x0, #0x7
   19adc:	ldrb	w0, [x0]
   19ae0:	str	w0, [sp]
   19ae4:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   19ae8:	add	x0, x0, #0x590
   19aec:	bl	25a74 <OnPrint@@Base+0x454>
   19af0:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   19af4:	ldr	x0, [sp, #40]
   19af8:	ldr	x1, [x0]
   19afc:	add	x0, sp, #0x30
   19b00:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   19b04:	ldr	x0, [sp, #40]
   19b08:	ldr	w0, [x0, #8]
   19b0c:	cmp	w0, #0x1
   19b10:	b.eq	19b40 <__sanitizer_cov_pcs_init@@Base+0x407c>  // b.none
   19b14:	ldr	x0, [sp, #40]
   19b18:	ldr	w0, [x0, #8]
   19b1c:	cmp	w0, #0x2
   19b20:	b.eq	19b40 <__sanitizer_cov_pcs_init@@Base+0x407c>  // b.none
   19b24:	ldr	x0, [sp, #40]
   19b28:	ldr	w0, [x0, #8]
   19b2c:	cmn	w0, #0x1
   19b30:	b.eq	19b40 <__sanitizer_cov_pcs_init@@Base+0x407c>  // b.none
   19b34:	ldr	x0, [sp, #40]
   19b38:	ldr	w0, [x0, #8]
   19b3c:	bl	227b0 <__sanitizer_set_report_fd@@Base+0x8604>
   19b40:	ldr	x0, [sp, #40]
   19b44:	mov	w1, #0xffffffff            	// #-1
   19b48:	str	w1, [x0, #8]
   19b4c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   19b50:	add	x1, x0, #0x5c0
   19b54:	ldr	x0, [sp, #32]
   19b58:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   19b5c:	cmp	w0, #0x0
   19b60:	cset	w0, eq  // eq = none
   19b64:	and	w0, w0, #0xff
   19b68:	cmp	w0, #0x0
   19b6c:	b.eq	19b80 <__sanitizer_cov_pcs_init@@Base+0x40bc>  // b.none
   19b70:	ldr	x0, [sp, #40]
   19b74:	mov	w1, #0x1                   	// #1
   19b78:	str	w1, [x0, #8]
   19b7c:	b	19bd4 <__sanitizer_cov_pcs_init@@Base+0x4110>
   19b80:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   19b84:	add	x1, x0, #0x5c8
   19b88:	ldr	x0, [sp, #32]
   19b8c:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   19b90:	cmp	w0, #0x0
   19b94:	cset	w0, eq  // eq = none
   19b98:	and	w0, w0, #0xff
   19b9c:	cmp	w0, #0x0
   19ba0:	b.eq	19bb4 <__sanitizer_cov_pcs_init@@Base+0x40f0>  // b.none
   19ba4:	ldr	x0, [sp, #40]
   19ba8:	mov	w1, #0x2                   	// #2
   19bac:	str	w1, [x0, #8]
   19bb0:	b	19bd4 <__sanitizer_cov_pcs_init@@Base+0x4110>
   19bb4:	ldr	x0, [sp, #40]
   19bb8:	add	x4, x0, #0xc
   19bbc:	ldr	x3, [sp, #32]
   19bc0:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   19bc4:	add	x2, x0, #0x5d0
   19bc8:	mov	x1, #0x1000                	// #4096
   19bcc:	mov	x0, x4
   19bd0:	bl	25b20 <OnPrint@@Base+0x500>
   19bd4:	add	x0, sp, #0x30
   19bd8:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   19bdc:	b	19be4 <__sanitizer_cov_pcs_init@@Base+0x4120>
   19be0:	nop
   19be4:	ldr	x30, [sp, #16]
   19be8:	add	sp, sp, #0x40
   19bec:	ret
   19bf0:	str	x30, [sp, #-112]!
   19bf4:	str	x0, [sp, #56]
   19bf8:	str	x1, [sp, #48]
   19bfc:	str	x2, [sp, #40]
   19c00:	str	x3, [sp, #32]
   19c04:	str	x4, [sp, #24]
   19c08:	str	x5, [sp, #16]
   19c0c:	ldr	x0, [sp, #48]
   19c10:	str	xzr, [x0]
   19c14:	ldr	x0, [sp, #40]
   19c18:	str	xzr, [x0]
   19c1c:	ldr	x0, [sp, #32]
   19c20:	str	xzr, [x0]
   19c24:	ldr	x0, [sp, #24]
   19c28:	cmp	x0, #0x0
   19c2c:	b.ne	19c38 <__sanitizer_cov_pcs_init@@Base+0x4174>  // b.any
   19c30:	mov	w0, #0x1                   	// #1
   19c34:	b	19df8 <__sanitizer_cov_pcs_init@@Base+0x4334>
   19c38:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   19c3c:	str	x0, [sp, #88]
   19c40:	ldr	x1, [sp, #24]
   19c44:	ldr	x0, [sp, #88]
   19c48:	bl	9374 <__asan_backtrace_open@plt+0x2704>
   19c4c:	str	x0, [sp, #80]
   19c50:	ldr	x0, [sp, #80]
   19c54:	str	x0, [sp, #104]
   19c58:	ldr	x0, [sp, #48]
   19c5c:	ldr	x2, [x0]
   19c60:	ldr	x0, [sp, #40]
   19c64:	ldr	x0, [x0]
   19c68:	mov	x1, x0
   19c6c:	mov	x0, x2
   19c70:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   19c74:	mov	w2, #0x0                   	// #0
   19c78:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   19c7c:	add	x1, x0, #0x5d8
   19c80:	ldr	x0, [sp, #104]
   19c84:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   19c88:	mov	x1, x0
   19c8c:	ldr	x0, [sp, #48]
   19c90:	str	x1, [x0]
   19c94:	ldr	x0, [sp, #40]
   19c98:	ldr	x1, [sp, #104]
   19c9c:	str	x1, [x0]
   19ca0:	ldr	x2, [sp, #16]
   19ca4:	mov	w1, #0x0                   	// #0
   19ca8:	ldr	x0, [sp, #56]
   19cac:	bl	22718 <__sanitizer_set_report_fd@@Base+0x856c>
   19cb0:	str	w0, [sp, #76]
   19cb4:	ldr	w0, [sp, #76]
   19cb8:	cmn	w0, #0x1
   19cbc:	b.ne	19ce4 <__sanitizer_cov_pcs_init@@Base+0x4220>  // b.any
   19cc0:	ldr	x0, [sp, #48]
   19cc4:	ldr	x2, [x0]
   19cc8:	ldr	x0, [sp, #40]
   19ccc:	ldr	x0, [x0]
   19cd0:	mov	x1, x0
   19cd4:	mov	x0, x2
   19cd8:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   19cdc:	mov	w0, #0x0                   	// #0
   19ce0:	b	19df8 <__sanitizer_cov_pcs_init@@Base+0x4334>
   19ce4:	ldr	x0, [sp, #32]
   19ce8:	str	xzr, [x0]
   19cec:	strb	wzr, [sp, #103]
   19cf0:	ldr	x0, [sp, #32]
   19cf4:	ldr	x0, [x0]
   19cf8:	ldr	x1, [sp, #104]
   19cfc:	cmp	x1, x0
   19d00:	b.ls	19dc4 <__sanitizer_cov_pcs_init@@Base+0x4300>  // b.plast
   19d04:	ldr	x0, [sp, #48]
   19d08:	ldr	x1, [x0]
   19d0c:	ldr	x0, [sp, #32]
   19d10:	ldr	x0, [x0]
   19d14:	add	x5, x1, x0
   19d18:	ldr	x0, [sp, #32]
   19d1c:	ldr	x0, [x0]
   19d20:	ldr	x1, [sp, #104]
   19d24:	sub	x0, x1, x0
   19d28:	add	x1, sp, #0x40
   19d2c:	ldr	x4, [sp, #16]
   19d30:	mov	x3, x1
   19d34:	mov	x2, x0
   19d38:	mov	x1, x5
   19d3c:	ldr	w0, [sp, #76]
   19d40:	bl	227cc <__sanitizer_set_report_fd@@Base+0x8620>
   19d44:	and	w0, w0, #0xff
   19d48:	eor	w0, w0, #0x1
   19d4c:	and	w0, w0, #0xff
   19d50:	cmp	w0, #0x0
   19d54:	b.eq	19d84 <__sanitizer_cov_pcs_init@@Base+0x42c0>  // b.none
   19d58:	ldr	x0, [sp, #48]
   19d5c:	ldr	x2, [x0]
   19d60:	ldr	x0, [sp, #40]
   19d64:	ldr	x0, [x0]
   19d68:	mov	x1, x0
   19d6c:	mov	x0, x2
   19d70:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   19d74:	ldr	w0, [sp, #76]
   19d78:	bl	227b0 <__sanitizer_set_report_fd@@Base+0x8604>
   19d7c:	mov	w0, #0x0                   	// #0
   19d80:	b	19df8 <__sanitizer_cov_pcs_init@@Base+0x4334>
   19d84:	ldr	x0, [sp, #32]
   19d88:	ldr	x1, [x0]
   19d8c:	ldr	x0, [sp, #64]
   19d90:	add	x1, x1, x0
   19d94:	ldr	x0, [sp, #32]
   19d98:	str	x1, [x0]
   19d9c:	ldr	x0, [sp, #64]
   19da0:	cmp	x0, #0x0
   19da4:	b.eq	19dbc <__sanitizer_cov_pcs_init@@Base+0x42f8>  // b.none
   19da8:	ldr	x0, [sp, #32]
   19dac:	ldr	x0, [x0]
   19db0:	ldr	x1, [sp, #24]
   19db4:	cmp	x1, x0
   19db8:	b.ne	19cf0 <__sanitizer_cov_pcs_init@@Base+0x422c>  // b.any
   19dbc:	mov	w0, #0x1                   	// #1
   19dc0:	strb	w0, [sp, #103]
   19dc4:	ldr	w0, [sp, #76]
   19dc8:	bl	227b0 <__sanitizer_set_report_fd@@Base+0x8604>
   19dcc:	ldrb	w0, [sp, #103]
   19dd0:	cmp	w0, #0x0
   19dd4:	b.ne	19df0 <__sanitizer_cov_pcs_init@@Base+0x432c>  // b.any
   19dd8:	ldr	x0, [sp, #104]
   19ddc:	lsl	x0, x0, #1
   19de0:	ldr	x1, [sp, #24]
   19de4:	bl	9374 <__asan_backtrace_open@plt+0x2704>
   19de8:	str	x0, [sp, #104]
   19dec:	b	19c58 <__sanitizer_cov_pcs_init@@Base+0x4194>
   19df0:	nop
   19df4:	mov	w0, #0x1                   	// #1
   19df8:	ldr	x30, [sp], #112
   19dfc:	ret
   19e00:	stp	x19, x30, [sp, #-112]!
   19e04:	str	x0, [sp, #40]
   19e08:	str	x1, [sp, #32]
   19e0c:	str	x2, [sp, #24]
   19e10:	str	x3, [sp, #16]
   19e14:	ldr	x0, [sp, #32]
   19e18:	bl	1a25c <__sanitizer_set_report_fd@@Base+0xb0>
   19e1c:	ldr	x0, [sp, #24]
   19e20:	cmp	x0, #0x0
   19e24:	b.ne	19e30 <__sanitizer_cov_pcs_init@@Base+0x436c>  // b.any
   19e28:	mov	w0, #0x1                   	// #1
   19e2c:	b	1a00c <__sanitizer_cov_pcs_init@@Base+0x4548>
   19e30:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   19e34:	str	x0, [sp, #96]
   19e38:	ldr	x2, [sp, #16]
   19e3c:	mov	w1, #0x0                   	// #0
   19e40:	ldr	x0, [sp, #40]
   19e44:	bl	22718 <__sanitizer_set_report_fd@@Base+0x856c>
   19e48:	str	w0, [sp, #92]
   19e4c:	ldr	w0, [sp, #92]
   19e50:	cmn	w0, #0x1
   19e54:	b.ne	19e60 <__sanitizer_cov_pcs_init@@Base+0x439c>  // b.any
   19e58:	mov	w0, #0x0                   	// #0
   19e5c:	b	1a00c <__sanitizer_cov_pcs_init@@Base+0x4548>
   19e60:	str	xzr, [sp, #104]
   19e64:	ldr	x1, [sp, #104]
   19e68:	ldr	x0, [sp, #24]
   19e6c:	cmp	x1, x0
   19e70:	b.cs	19ff4 <__sanitizer_cov_pcs_init@@Base+0x4530>  // b.hs, b.nlast
   19e74:	ldr	x0, [sp, #32]
   19e78:	bl	1a278 <__sanitizer_set_report_fd@@Base+0xcc>
   19e7c:	mov	x1, x0
   19e80:	ldr	x0, [sp, #104]
   19e84:	cmp	x0, x1
   19e88:	cset	w0, cs  // cs = hs, nlast
   19e8c:	and	w0, w0, #0xff
   19e90:	cmp	w0, #0x0
   19e94:	b.eq	19ec0 <__sanitizer_cov_pcs_init@@Base+0x43fc>  // b.none
   19e98:	ldr	x0, [sp, #104]
   19e9c:	lsl	x0, x0, #1
   19ea0:	mov	x1, x0
   19ea4:	ldr	x0, [sp, #96]
   19ea8:	bl	93a4 <__asan_backtrace_open@plt+0x2734>
   19eac:	ldr	x1, [sp, #24]
   19eb0:	bl	9374 <__asan_backtrace_open@plt+0x2704>
   19eb4:	mov	x1, x0
   19eb8:	ldr	x0, [sp, #32]
   19ebc:	bl	9428 <__asan_backtrace_open@plt+0x27b8>
   19ec0:	ldr	x0, [sp, #104]
   19ec4:	str	x0, [sp, #80]
   19ec8:	ldr	x0, [sp, #32]
   19ecc:	bl	1a278 <__sanitizer_set_report_fd@@Base+0xcc>
   19ed0:	str	x0, [sp, #72]
   19ed4:	ldr	x1, [sp, #80]
   19ed8:	ldr	x0, [sp, #72]
   19edc:	cmp	x1, x0
   19ee0:	cset	w0, cs  // cs = hs, nlast
   19ee4:	and	w0, w0, #0xff
   19ee8:	and	x0, x0, #0xff
   19eec:	cmp	x0, #0x0
   19ef0:	b.eq	19f14 <__sanitizer_cov_pcs_init@@Base+0x4450>  // b.none
   19ef4:	ldr	x4, [sp, #72]
   19ef8:	ldr	x3, [sp, #80]
   19efc:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   19f00:	add	x2, x0, #0x5f0
   19f04:	mov	w1, #0x98                  	// #152
   19f08:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   19f0c:	add	x0, x0, #0x610
   19f10:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   19f14:	ldr	x0, [sp, #32]
   19f18:	bl	1a278 <__sanitizer_set_report_fd@@Base+0xcc>
   19f1c:	str	x0, [sp, #64]
   19f20:	ldr	x0, [sp, #24]
   19f24:	str	x0, [sp, #56]
   19f28:	ldr	x1, [sp, #64]
   19f2c:	ldr	x0, [sp, #56]
   19f30:	cmp	x1, x0
   19f34:	cset	w0, hi  // hi = pmore
   19f38:	and	w0, w0, #0xff
   19f3c:	and	x0, x0, #0xff
   19f40:	cmp	x0, #0x0
   19f44:	b.eq	19f68 <__sanitizer_cov_pcs_init@@Base+0x44a4>  // b.none
   19f48:	ldr	x4, [sp, #56]
   19f4c:	ldr	x3, [sp, #64]
   19f50:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   19f54:	add	x2, x0, #0x650
   19f58:	mov	w1, #0x99                  	// #153
   19f5c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   19f60:	add	x0, x0, #0x610
   19f64:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   19f68:	ldr	x0, [sp, #32]
   19f6c:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   19f70:	mov	x1, x0
   19f74:	ldr	x0, [sp, #104]
   19f78:	add	x19, x1, x0
   19f7c:	ldr	x0, [sp, #32]
   19f80:	bl	1a278 <__sanitizer_set_report_fd@@Base+0xcc>
   19f84:	mov	x1, x0
   19f88:	ldr	x0, [sp, #104]
   19f8c:	sub	x0, x1, x0
   19f90:	add	x1, sp, #0x30
   19f94:	ldr	x4, [sp, #16]
   19f98:	mov	x3, x1
   19f9c:	mov	x2, x0
   19fa0:	mov	x1, x19
   19fa4:	ldr	w0, [sp, #92]
   19fa8:	bl	227cc <__sanitizer_set_report_fd@@Base+0x8620>
   19fac:	and	w0, w0, #0xff
   19fb0:	eor	w0, w0, #0x1
   19fb4:	and	w0, w0, #0xff
   19fb8:	cmp	w0, #0x0
   19fbc:	b.eq	19fd0 <__sanitizer_cov_pcs_init@@Base+0x450c>  // b.none
   19fc0:	ldr	w0, [sp, #92]
   19fc4:	bl	227b0 <__sanitizer_set_report_fd@@Base+0x8604>
   19fc8:	mov	w0, #0x0                   	// #0
   19fcc:	b	1a00c <__sanitizer_cov_pcs_init@@Base+0x4548>
   19fd0:	ldr	x0, [sp, #48]
   19fd4:	ldr	x1, [sp, #104]
   19fd8:	add	x0, x1, x0
   19fdc:	str	x0, [sp, #104]
   19fe0:	ldr	x0, [sp, #48]
   19fe4:	cmp	x0, #0x0
   19fe8:	b.eq	19ff0 <__sanitizer_cov_pcs_init@@Base+0x452c>  // b.none
   19fec:	b	19e64 <__sanitizer_cov_pcs_init@@Base+0x43a0>
   19ff0:	nop
   19ff4:	ldr	w0, [sp, #92]
   19ff8:	bl	227b0 <__sanitizer_set_report_fd@@Base+0x8604>
   19ffc:	ldr	x1, [sp, #104]
   1a000:	ldr	x0, [sp, #32]
   1a004:	bl	9428 <__asan_backtrace_open@plt+0x27b8>
   1a008:	mov	w0, #0x1                   	// #1
   1a00c:	ldp	x19, x30, [sp], #112
   1a010:	ret
   1a014:	stp	x19, x30, [sp, #-96]!
   1a018:	str	x0, [sp, #24]
   1a01c:	ldr	x0, [sp, #24]
   1a020:	bl	1e720 <__sanitizer_set_report_fd@@Base+0x4574>
   1a024:	and	w0, w0, #0xff
   1a028:	cmp	w0, #0x0
   1a02c:	b.eq	1a040 <__sanitizer_cov_pcs_init@@Base+0x457c>  // b.none
   1a030:	ldr	x0, [sp, #24]
   1a034:	bl	1ca68 <__sanitizer_set_report_fd@@Base+0x28bc>
   1a038:	mov	x19, x0
   1a03c:	b	1a17c <__sanitizer_cov_pcs_init@@Base+0x46b8>
   1a040:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a044:	add	x0, x0, #0x678
   1a048:	bl	1e85c <__sanitizer_set_report_fd@@Base+0x46b0>
   1a04c:	str	x0, [sp, #80]
   1a050:	ldr	x0, [sp, #80]
   1a054:	cmp	x0, #0x0
   1a058:	b.ne	1a064 <__sanitizer_cov_pcs_init@@Base+0x45a0>  // b.any
   1a05c:	mov	x19, #0x0                   	// #0
   1a060:	b	1a17c <__sanitizer_cov_pcs_init@@Base+0x46b8>
   1a064:	ldr	x0, [sp, #24]
   1a068:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   1a06c:	str	x0, [sp, #72]
   1a070:	add	x0, sp, #0x20
   1a074:	mov	x1, #0x1000                	// #4096
   1a078:	bl	92b0 <__asan_backtrace_open@plt+0x2640>
   1a07c:	ldr	x0, [sp, #80]
   1a080:	str	x0, [sp, #88]
   1a084:	mov	w1, #0x3a                  	// #58
   1a088:	ldr	x0, [sp, #88]
   1a08c:	bl	1cc58 <__sanitizer_set_report_fd@@Base+0x2aac>
   1a090:	str	x0, [sp, #64]
   1a094:	ldr	x1, [sp, #64]
   1a098:	ldr	x0, [sp, #88]
   1a09c:	sub	x0, x1, x0
   1a0a0:	str	x0, [sp, #56]
   1a0a4:	ldr	x1, [sp, #56]
   1a0a8:	ldr	x0, [sp, #72]
   1a0ac:	add	x0, x1, x0
   1a0b0:	add	x0, x0, #0x2
   1a0b4:	cmp	x0, #0x1, lsl #12
   1a0b8:	b.hi	1a14c <__sanitizer_cov_pcs_init@@Base+0x4688>  // b.pmore
   1a0bc:	add	x0, sp, #0x20
   1a0c0:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   1a0c4:	ldr	x2, [sp, #56]
   1a0c8:	ldr	x1, [sp, #88]
   1a0cc:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   1a0d0:	add	x0, sp, #0x20
   1a0d4:	ldr	x1, [sp, #56]
   1a0d8:	bl	92fc <__asan_backtrace_open@plt+0x268c>
   1a0dc:	mov	x1, x0
   1a0e0:	mov	w0, #0x2f                  	// #47
   1a0e4:	strb	w0, [x1]
   1a0e8:	ldr	x0, [sp, #56]
   1a0ec:	add	x1, x0, #0x1
   1a0f0:	add	x0, sp, #0x20
   1a0f4:	bl	92fc <__asan_backtrace_open@plt+0x268c>
   1a0f8:	ldr	x2, [sp, #72]
   1a0fc:	ldr	x1, [sp, #24]
   1a100:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   1a104:	ldr	x1, [sp, #56]
   1a108:	ldr	x0, [sp, #72]
   1a10c:	add	x0, x1, x0
   1a110:	add	x1, x0, #0x1
   1a114:	add	x0, sp, #0x20
   1a118:	bl	92fc <__asan_backtrace_open@plt+0x268c>
   1a11c:	strb	wzr, [x0]
   1a120:	add	x0, sp, #0x20
   1a124:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   1a128:	bl	1e720 <__sanitizer_set_report_fd@@Base+0x4574>
   1a12c:	and	w0, w0, #0xff
   1a130:	cmp	w0, #0x0
   1a134:	b.eq	1a14c <__sanitizer_cov_pcs_init@@Base+0x4688>  // b.none
   1a138:	add	x0, sp, #0x20
   1a13c:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   1a140:	bl	1ca68 <__sanitizer_set_report_fd@@Base+0x28bc>
   1a144:	mov	x19, x0
   1a148:	b	1a174 <__sanitizer_cov_pcs_init@@Base+0x46b0>
   1a14c:	ldr	x0, [sp, #64]
   1a150:	ldrb	w0, [x0]
   1a154:	cmp	w0, #0x0
   1a158:	b.eq	1a16c <__sanitizer_cov_pcs_init@@Base+0x46a8>  // b.none
   1a15c:	ldr	x0, [sp, #64]
   1a160:	add	x0, x0, #0x1
   1a164:	str	x0, [sp, #88]
   1a168:	b	1a084 <__sanitizer_cov_pcs_init@@Base+0x45c0>
   1a16c:	nop
   1a170:	mov	x19, #0x0                   	// #0
   1a174:	add	x0, sp, #0x20
   1a178:	bl	92e0 <__asan_backtrace_open@plt+0x2670>
   1a17c:	mov	x0, x19
   1a180:	ldp	x19, x30, [sp], #96
   1a184:	ret

000000000001a188 <__sanitizer_set_report_path@@Base>:
   1a188:	str	x30, [sp, #-32]!
   1a18c:	str	x0, [sp, #24]
   1a190:	ldr	x1, [sp, #24]
   1a194:	adrp	x0, 77000 <_Unwind_Backtrace@GCC_3.3>
   1a198:	add	x0, x0, #0x4e0
   1a19c:	bl	19a34 <__sanitizer_cov_pcs_init@@Base+0x3f70>
   1a1a0:	nop
   1a1a4:	ldr	x30, [sp], #32
   1a1a8:	ret

000000000001a1ac <__sanitizer_set_report_fd@@Base>:
   1a1ac:	str	x30, [sp, #-32]!
   1a1b0:	str	x0, [sp, #24]
   1a1b4:	ldr	x0, [sp, #24]
   1a1b8:	mov	w1, w0
   1a1bc:	adrp	x0, 77000 <_Unwind_Backtrace@GCC_3.3>
   1a1c0:	add	x0, x0, #0x4e0
   1a1c4:	str	w1, [x0, #8]
   1a1c8:	bl	1ef9c <__sanitizer_set_report_fd@@Base+0x4df0>
   1a1cc:	mov	x1, x0
   1a1d0:	adrp	x0, 77000 <_Unwind_Backtrace@GCC_3.3>
   1a1d4:	add	x0, x0, #0x4e0
   1a1d8:	str	x1, [x0, #8208]
   1a1dc:	nop
   1a1e0:	ldr	x30, [sp], #32
   1a1e4:	ret
   1a1e8:	str	x30, [sp, #-48]!
   1a1ec:	str	x0, [sp, #24]
   1a1f0:	ldr	x0, [sp, #24]
   1a1f4:	mov	w1, #0x1                   	// #1
   1a1f8:	bl	f15c <__ubsan_handle_cfi_bad_type@@Base+0xa40>
   1a1fc:	and	w0, w0, #0xff
   1a200:	and	x0, x0, #0xff
   1a204:	str	x0, [sp, #40]
   1a208:	mov	x0, #0x1                   	// #1
   1a20c:	str	x0, [sp, #32]
   1a210:	ldr	x1, [sp, #40]
   1a214:	ldr	x0, [sp, #32]
   1a218:	cmp	x1, x0
   1a21c:	cset	w0, ne  // ne = any
   1a220:	and	w0, w0, #0xff
   1a224:	and	x0, x0, #0xff
   1a228:	cmp	x0, #0x0
   1a22c:	b.eq	1a250 <__sanitizer_set_report_fd@@Base+0xa4>  // b.none
   1a230:	ldr	x4, [sp, #32]
   1a234:	ldr	x3, [sp, #40]
   1a238:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a23c:	add	x2, x0, #0x470
   1a240:	mov	w1, #0x2a                  	// #42
   1a244:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a248:	add	x0, x0, #0x4a8
   1a24c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1a250:	nop
   1a254:	ldr	x30, [sp], #48
   1a258:	ret
   1a25c:	sub	sp, sp, #0x10
   1a260:	str	x0, [sp, #8]
   1a264:	ldr	x0, [sp, #8]
   1a268:	str	xzr, [x0, #16]
   1a26c:	nop
   1a270:	add	sp, sp, #0x10
   1a274:	ret
   1a278:	sub	sp, sp, #0x10
   1a27c:	str	x0, [sp, #8]
   1a280:	ldr	x0, [sp, #8]
   1a284:	ldr	x0, [x0, #16]
   1a288:	add	sp, sp, #0x10
   1a28c:	ret
   1a290:	sub	sp, sp, #0x10
   1a294:	str	x0, [sp, #8]
   1a298:	ldr	x0, [sp, #8]
   1a29c:	mov	w1, #0x1                   	// #1
   1a2a0:	strb	w1, [x0]
   1a2a4:	ldr	x0, [sp, #8]
   1a2a8:	str	xzr, [x0, #8]
   1a2ac:	ldr	x0, [sp, #8]
   1a2b0:	strb	wzr, [x0, #16]
   1a2b4:	ldr	x0, [sp, #8]
   1a2b8:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a2bc:	add	x1, x1, #0x898
   1a2c0:	str	x1, [x0, #24]
   1a2c4:	ldr	x0, [sp, #8]
   1a2c8:	strb	wzr, [x0, #32]
   1a2cc:	ldr	x0, [sp, #8]
   1a2d0:	strb	wzr, [x0, #33]
   1a2d4:	ldr	x0, [sp, #8]
   1a2d8:	mov	w1, #0x1                   	// #1
   1a2dc:	strb	w1, [x0, #34]
   1a2e0:	ldr	x0, [sp, #8]
   1a2e4:	strb	wzr, [x0, #35]
   1a2e8:	ldr	x0, [sp, #8]
   1a2ec:	mov	w1, #0x1                   	// #1
   1a2f0:	str	w1, [x0, #36]
   1a2f4:	ldr	x0, [sp, #8]
   1a2f8:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a2fc:	add	x1, x1, #0x8a0
   1a300:	str	x1, [x0, #40]
   1a304:	ldr	x0, [sp, #8]
   1a308:	strb	wzr, [x0, #48]
   1a30c:	ldr	x0, [sp, #8]
   1a310:	strb	wzr, [x0, #49]
   1a314:	ldr	x0, [sp, #8]
   1a318:	str	wzr, [x0, #52]
   1a31c:	ldr	x0, [sp, #8]
   1a320:	mov	w1, #0x1                   	// #1
   1a324:	strb	w1, [x0, #56]
   1a328:	ldr	x0, [sp, #8]
   1a32c:	mov	w1, #0x1                   	// #1
   1a330:	strb	w1, [x0, #57]
   1a334:	ldr	x0, [sp, #8]
   1a338:	mov	w1, #0x1                   	// #1
   1a33c:	strb	w1, [x0, #58]
   1a340:	ldr	x0, [sp, #8]
   1a344:	strb	wzr, [x0, #59]
   1a348:	ldr	x0, [sp, #8]
   1a34c:	mov	w1, #0x1                   	// #1
   1a350:	strb	w1, [x0, #60]
   1a354:	ldr	x0, [sp, #8]
   1a358:	str	wzr, [x0, #64]
   1a35c:	ldr	x0, [sp, #8]
   1a360:	mov	w1, #0x1                   	// #1
   1a364:	strb	w1, [x0, #68]
   1a368:	ldr	x0, [sp, #8]
   1a36c:	mov	w1, #0x1                   	// #1
   1a370:	str	w1, [x0, #72]
   1a374:	ldr	x0, [sp, #8]
   1a378:	mov	w1, #0x1                   	// #1
   1a37c:	str	w1, [x0, #76]
   1a380:	ldr	x0, [sp, #8]
   1a384:	str	wzr, [x0, #80]
   1a388:	ldr	x0, [sp, #8]
   1a38c:	str	wzr, [x0, #84]
   1a390:	ldr	x0, [sp, #8]
   1a394:	str	wzr, [x0, #88]
   1a398:	ldr	x0, [sp, #8]
   1a39c:	mov	w1, #0x1                   	// #1
   1a3a0:	str	w1, [x0, #92]
   1a3a4:	ldr	x0, [sp, #8]
   1a3a8:	mov	w1, #0x1                   	// #1
   1a3ac:	strb	w1, [x0, #96]
   1a3b0:	ldr	x0, [sp, #8]
   1a3b4:	mov	w1, #0x1                   	// #1
   1a3b8:	strb	w1, [x0, #97]
   1a3bc:	ldr	x0, [sp, #8]
   1a3c0:	strb	wzr, [x0, #98]
   1a3c4:	ldr	x0, [sp, #8]
   1a3c8:	mov	x1, #0x10000               	// #65536
   1a3cc:	str	x1, [x0, #104]
   1a3d0:	ldr	x0, [sp, #8]
   1a3d4:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a3d8:	add	x1, x1, #0x8a8
   1a3dc:	str	x1, [x0, #112]
   1a3e0:	ldr	x0, [sp, #8]
   1a3e4:	strb	wzr, [x0, #120]
   1a3e8:	ldr	x0, [sp, #8]
   1a3ec:	strb	wzr, [x0, #121]
   1a3f0:	ldr	x0, [sp, #8]
   1a3f4:	strb	wzr, [x0, #122]
   1a3f8:	ldr	x0, [sp, #8]
   1a3fc:	str	xzr, [x0, #128]
   1a400:	ldr	x0, [sp, #8]
   1a404:	str	xzr, [x0, #136]
   1a408:	ldr	x0, [sp, #8]
   1a40c:	str	xzr, [x0, #144]
   1a410:	ldr	x0, [sp, #8]
   1a414:	strb	wzr, [x0, #152]
   1a418:	ldr	x0, [sp, #8]
   1a41c:	mov	w1, #0x1388                	// #5000
   1a420:	str	w1, [x0, #156]
   1a424:	ldr	x0, [sp, #8]
   1a428:	mov	w1, #0x1                   	// #1
   1a42c:	strb	w1, [x0, #160]
   1a430:	ldr	x0, [sp, #8]
   1a434:	strb	wzr, [x0, #161]
   1a438:	ldr	x0, [sp, #8]
   1a43c:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a440:	add	x1, x1, #0x8b0
   1a444:	str	x1, [x0, #168]
   1a448:	ldr	x0, [sp, #8]
   1a44c:	strb	wzr, [x0, #176]
   1a450:	ldr	x0, [sp, #8]
   1a454:	mov	w1, #0x1                   	// #1
   1a458:	strb	w1, [x0, #177]
   1a45c:	ldr	x0, [sp, #8]
   1a460:	mov	w1, #0x1                   	// #1
   1a464:	strb	w1, [x0, #178]
   1a468:	ldr	x0, [sp, #8]
   1a46c:	mov	w1, #0x1                   	// #1
   1a470:	strb	w1, [x0, #179]
   1a474:	ldr	x0, [sp, #8]
   1a478:	mov	w1, #0x1                   	// #1
   1a47c:	strb	w1, [x0, #180]
   1a480:	ldr	x0, [sp, #8]
   1a484:	strb	wzr, [x0, #181]
   1a488:	ldr	x0, [sp, #8]
   1a48c:	str	wzr, [x0, #184]
   1a490:	ldr	x0, [sp, #8]
   1a494:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a498:	add	x1, x1, #0x8b8
   1a49c:	str	x1, [x0, #192]
   1a4a0:	ldr	x0, [sp, #8]
   1a4a4:	mov	w1, #0x1                   	// #1
   1a4a8:	strb	w1, [x0, #200]
   1a4ac:	ldr	x0, [sp, #8]
   1a4b0:	strb	wzr, [x0, #201]
   1a4b4:	ldr	x0, [sp, #8]
   1a4b8:	mov	w1, #0x1                   	// #1
   1a4bc:	strb	w1, [x0, #202]
   1a4c0:	ldr	x0, [sp, #8]
   1a4c4:	mov	w1, #0x1                   	// #1
   1a4c8:	strb	w1, [x0, #203]
   1a4cc:	ldr	x0, [sp, #8]
   1a4d0:	mov	w1, #0x1                   	// #1
   1a4d4:	strb	w1, [x0, #204]
   1a4d8:	ldr	x0, [sp, #8]
   1a4dc:	mov	w1, #0x1                   	// #1
   1a4e0:	strb	w1, [x0, #205]
   1a4e4:	ldr	x0, [sp, #8]
   1a4e8:	mov	w1, #0x1                   	// #1
   1a4ec:	strb	w1, [x0, #206]
   1a4f0:	ldr	x0, [sp, #8]
   1a4f4:	mov	w1, #0x1                   	// #1
   1a4f8:	strb	w1, [x0, #207]
   1a4fc:	ldr	x0, [sp, #8]
   1a500:	mov	w1, #0x1                   	// #1
   1a504:	strb	w1, [x0, #208]
   1a508:	ldr	x0, [sp, #8]
   1a50c:	mov	w1, #0x1                   	// #1
   1a510:	strb	w1, [x0, #209]
   1a514:	ldr	x0, [sp, #8]
   1a518:	mov	w1, #0x1                   	// #1
   1a51c:	strb	w1, [x0, #210]
   1a520:	ldr	x0, [sp, #8]
   1a524:	mov	w1, #0x1                   	// #1
   1a528:	strb	w1, [x0, #211]
   1a52c:	ldr	x0, [sp, #8]
   1a530:	mov	w1, #0x1                   	// #1
   1a534:	strb	w1, [x0, #212]
   1a538:	ldr	x0, [sp, #8]
   1a53c:	mov	w1, #0x1                   	// #1
   1a540:	strb	w1, [x0, #213]
   1a544:	ldr	x0, [sp, #8]
   1a548:	mov	w1, #0x1                   	// #1
   1a54c:	strb	w1, [x0, #214]
   1a550:	ldr	x0, [sp, #8]
   1a554:	strb	wzr, [x0, #215]
   1a558:	ldr	x0, [sp, #8]
   1a55c:	mov	w1, #0x1                   	// #1
   1a560:	str	w1, [x0, #216]
   1a564:	ldr	x0, [sp, #8]
   1a568:	strb	wzr, [x0, #220]
   1a56c:	ldr	x0, [sp, #8]
   1a570:	mov	w1, #0x1                   	// #1
   1a574:	strb	w1, [x0, #221]
   1a578:	ldr	x0, [sp, #8]
   1a57c:	strb	wzr, [x0, #222]
   1a580:	ldr	x0, [sp, #8]
   1a584:	strb	wzr, [x0, #223]
   1a588:	ldr	x0, [sp, #8]
   1a58c:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a590:	add	x1, x1, #0x8c0
   1a594:	str	x1, [x0, #224]
   1a598:	ldr	x0, [sp, #8]
   1a59c:	strb	wzr, [x0, #232]
   1a5a0:	ldr	x0, [sp, #8]
   1a5a4:	mov	w1, #0x1                   	// #1
   1a5a8:	strb	w1, [x0, #233]
   1a5ac:	ldr	x0, [sp, #8]
   1a5b0:	strb	wzr, [x0, #234]
   1a5b4:	nop
   1a5b8:	add	sp, sp, #0x10
   1a5bc:	ret
   1a5c0:	str	x30, [sp, #-32]!
   1a5c4:	str	x0, [sp, #24]
   1a5c8:	str	x1, [sp, #16]
   1a5cc:	mov	x2, #0xf0                  	// #240
   1a5d0:	ldr	x1, [sp, #16]
   1a5d4:	ldr	x0, [sp, #24]
   1a5d8:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   1a5dc:	nop
   1a5e0:	ldr	x30, [sp], #32
   1a5e4:	ret
   1a5e8:	str	x30, [sp, #-144]!
   1a5ec:	str	x0, [sp, #40]
   1a5f0:	str	x1, [sp, #32]
   1a5f4:	str	x2, [sp, #24]
   1a5f8:	ldr	x1, [sp, #32]
   1a5fc:	ldr	x0, [sp, #24]
   1a600:	add	x0, x1, x0
   1a604:	str	x0, [sp, #112]
   1a608:	ldr	x0, [sp, #40]
   1a60c:	ldrb	w0, [x0]
   1a610:	cmp	w0, #0x0
   1a614:	b.eq	1a84c <__sanitizer_set_report_fd@@Base+0x6a0>  // b.none
   1a618:	ldr	x0, [sp, #112]
   1a61c:	sub	x0, x0, #0x1
   1a620:	ldr	x1, [sp, #32]
   1a624:	cmp	x1, x0
   1a628:	b.cs	1a84c <__sanitizer_set_report_fd@@Base+0x6a0>  // b.hs, b.nlast
   1a62c:	ldr	x0, [sp, #40]
   1a630:	ldrb	w0, [x0]
   1a634:	cmp	w0, #0x25
   1a638:	b.eq	1a660 <__sanitizer_set_report_fd@@Base+0x4b4>  // b.none
   1a63c:	ldr	x1, [sp, #40]
   1a640:	add	x0, x1, #0x1
   1a644:	str	x0, [sp, #40]
   1a648:	ldr	x0, [sp, #32]
   1a64c:	add	x2, x0, #0x1
   1a650:	str	x2, [sp, #32]
   1a654:	ldrb	w1, [x1]
   1a658:	strb	w1, [x0]
   1a65c:	b	1a848 <__sanitizer_set_report_fd@@Base+0x69c>
   1a660:	ldr	x0, [sp, #40]
   1a664:	add	x0, x0, #0x1
   1a668:	ldrb	w0, [x0]
   1a66c:	cmp	w0, #0x62
   1a670:	b.eq	1a680 <__sanitizer_set_report_fd@@Base+0x4d4>  // b.none
   1a674:	cmp	w0, #0x70
   1a678:	b.eq	1a72c <__sanitizer_set_report_fd@@Base+0x580>  // b.none
   1a67c:	b	1a824 <__sanitizer_set_report_fd@@Base+0x678>
   1a680:	bl	14598 <__sancov_default_options@@Base+0x41ec>
   1a684:	str	x0, [sp, #136]
   1a688:	ldr	x0, [sp, #136]
   1a68c:	str	x0, [sp, #104]
   1a690:	str	xzr, [sp, #96]
   1a694:	ldr	x1, [sp, #104]
   1a698:	ldr	x0, [sp, #96]
   1a69c:	cmp	x1, x0
   1a6a0:	cset	w0, eq  // eq = none
   1a6a4:	and	w0, w0, #0xff
   1a6a8:	and	x0, x0, #0xff
   1a6ac:	cmp	x0, #0x0
   1a6b0:	b.eq	1a6d4 <__sanitizer_set_report_fd@@Base+0x528>  // b.none
   1a6b4:	ldr	x4, [sp, #96]
   1a6b8:	ldr	x3, [sp, #104]
   1a6bc:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a6c0:	add	x2, x0, #0x8c8
   1a6c4:	mov	w1, #0x2e                  	// #46
   1a6c8:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a6cc:	add	x0, x0, #0x8d8
   1a6d0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1a6d4:	ldr	x0, [sp, #136]
   1a6d8:	ldrb	w0, [x0]
   1a6dc:	cmp	w0, #0x0
   1a6e0:	b.eq	1a71c <__sanitizer_set_report_fd@@Base+0x570>  // b.none
   1a6e4:	ldr	x0, [sp, #112]
   1a6e8:	sub	x0, x0, #0x1
   1a6ec:	ldr	x1, [sp, #32]
   1a6f0:	cmp	x1, x0
   1a6f4:	b.cs	1a71c <__sanitizer_set_report_fd@@Base+0x570>  // b.hs, b.nlast
   1a6f8:	ldr	x1, [sp, #136]
   1a6fc:	add	x0, x1, #0x1
   1a700:	str	x0, [sp, #136]
   1a704:	ldr	x0, [sp, #32]
   1a708:	add	x2, x0, #0x1
   1a70c:	str	x2, [sp, #32]
   1a710:	ldrb	w1, [x1]
   1a714:	strb	w1, [x0]
   1a718:	b	1a6d4 <__sanitizer_set_report_fd@@Base+0x528>
   1a71c:	ldr	x0, [sp, #40]
   1a720:	add	x0, x0, #0x2
   1a724:	str	x0, [sp, #40]
   1a728:	b	1a848 <__sanitizer_set_report_fd@@Base+0x69c>
   1a72c:	bl	1ef9c <__sanitizer_set_report_fd@@Base+0x4df0>
   1a730:	str	w0, [sp, #132]
   1a734:	add	x0, sp, #0x30
   1a738:	add	x0, x0, #0x20
   1a73c:	str	x0, [sp, #120]
   1a740:	ldr	w1, [sp, #132]
   1a744:	mov	w0, #0x6667                	// #26215
   1a748:	movk	w0, #0x6666, lsl #16
   1a74c:	smull	x0, w1, w0
   1a750:	lsr	x0, x0, #32
   1a754:	asr	w2, w0, #2
   1a758:	asr	w0, w1, #31
   1a75c:	sub	w2, w2, w0
   1a760:	mov	w0, w2
   1a764:	lsl	w0, w0, #2
   1a768:	add	w0, w0, w2
   1a76c:	lsl	w0, w0, #1
   1a770:	sub	w2, w1, w0
   1a774:	and	w0, w2, #0xff
   1a778:	ldr	x1, [sp, #120]
   1a77c:	sub	x1, x1, #0x1
   1a780:	str	x1, [sp, #120]
   1a784:	add	w0, w0, #0x30
   1a788:	and	w1, w0, #0xff
   1a78c:	ldr	x0, [sp, #120]
   1a790:	strb	w1, [x0]
   1a794:	ldr	w0, [sp, #132]
   1a798:	mov	w1, #0x6667                	// #26215
   1a79c:	movk	w1, #0x6666, lsl #16
   1a7a0:	smull	x1, w0, w1
   1a7a4:	lsr	x1, x1, #32
   1a7a8:	asr	w1, w1, #2
   1a7ac:	asr	w0, w0, #31
   1a7b0:	sub	w0, w1, w0
   1a7b4:	str	w0, [sp, #132]
   1a7b8:	ldr	w0, [sp, #132]
   1a7bc:	cmp	w0, #0x0
   1a7c0:	b.eq	1a7c8 <__sanitizer_set_report_fd@@Base+0x61c>  // b.none
   1a7c4:	b	1a740 <__sanitizer_set_report_fd@@Base+0x594>
   1a7c8:	add	x0, sp, #0x30
   1a7cc:	add	x0, x0, #0x20
   1a7d0:	ldr	x1, [sp, #120]
   1a7d4:	cmp	x1, x0
   1a7d8:	b.cs	1a814 <__sanitizer_set_report_fd@@Base+0x668>  // b.hs, b.nlast
   1a7dc:	ldr	x0, [sp, #112]
   1a7e0:	sub	x0, x0, #0x1
   1a7e4:	ldr	x1, [sp, #32]
   1a7e8:	cmp	x1, x0
   1a7ec:	b.cs	1a814 <__sanitizer_set_report_fd@@Base+0x668>  // b.hs, b.nlast
   1a7f0:	ldr	x1, [sp, #120]
   1a7f4:	add	x0, x1, #0x1
   1a7f8:	str	x0, [sp, #120]
   1a7fc:	ldr	x0, [sp, #32]
   1a800:	add	x2, x0, #0x1
   1a804:	str	x2, [sp, #32]
   1a808:	ldrb	w1, [x1]
   1a80c:	strb	w1, [x0]
   1a810:	b	1a7c8 <__sanitizer_set_report_fd@@Base+0x61c>
   1a814:	ldr	x0, [sp, #40]
   1a818:	add	x0, x0, #0x2
   1a81c:	str	x0, [sp, #40]
   1a820:	b	1a848 <__sanitizer_set_report_fd@@Base+0x69c>
   1a824:	ldr	x1, [sp, #40]
   1a828:	add	x0, x1, #0x1
   1a82c:	str	x0, [sp, #40]
   1a830:	ldr	x0, [sp, #32]
   1a834:	add	x2, x0, #0x1
   1a838:	str	x2, [sp, #32]
   1a83c:	ldrb	w1, [x1]
   1a840:	strb	w1, [x0]
   1a844:	nop
   1a848:	b	1a608 <__sanitizer_set_report_fd@@Base+0x45c>
   1a84c:	ldr	x0, [sp, #112]
   1a850:	sub	x0, x0, #0x1
   1a854:	ldr	x1, [sp, #32]
   1a858:	cmp	x1, x0
   1a85c:	cset	w0, cc  // cc = lo, ul, last
   1a860:	and	w0, w0, #0xff
   1a864:	and	x0, x0, #0xff
   1a868:	str	x0, [sp, #88]
   1a86c:	str	xzr, [sp, #80]
   1a870:	ldr	x1, [sp, #88]
   1a874:	ldr	x0, [sp, #80]
   1a878:	cmp	x1, x0
   1a87c:	cset	w0, eq  // eq = none
   1a880:	and	w0, w0, #0xff
   1a884:	and	x0, x0, #0xff
   1a888:	cmp	x0, #0x0
   1a88c:	b.eq	1a8b0 <__sanitizer_set_report_fd@@Base+0x704>  // b.none
   1a890:	ldr	x4, [sp, #80]
   1a894:	ldr	x3, [sp, #88]
   1a898:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a89c:	add	x2, x0, #0x918
   1a8a0:	mov	w1, #0x46                  	// #70
   1a8a4:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a8a8:	add	x0, x0, #0x8d8
   1a8ac:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1a8b0:	ldr	x0, [sp, #32]
   1a8b4:	strb	wzr, [x0]
   1a8b8:	nop
   1a8bc:	ldr	x30, [sp], #144
   1a8c0:	ret
   1a8c4:	stp	x19, x30, [sp, #-48]!
   1a8c8:	str	x0, [sp, #24]
   1a8cc:	str	x1, [sp, #16]
   1a8d0:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1a8d4:	ldr	x1, [x0, #3776]
   1a8d8:	mov	x0, #0x18                  	// #24
   1a8dc:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
   1a8e0:	mov	x19, x0
   1a8e4:	mov	w2, #0x0                   	// #0
   1a8e8:	ldr	x1, [sp, #24]
   1a8ec:	mov	x0, x19
   1a8f0:	bl	1b7f4 <__sanitizer_set_report_fd@@Base+0x1648>
   1a8f4:	str	x19, [sp, #40]
   1a8f8:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a8fc:	add	x3, x0, #0x950
   1a900:	ldr	x2, [sp, #40]
   1a904:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a908:	add	x1, x0, #0x978
   1a90c:	ldr	x0, [sp, #24]
   1a910:	bl	1c2e4 <__sanitizer_set_report_fd@@Base+0x2138>
   1a914:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1a918:	ldr	x1, [x0, #3776]
   1a91c:	mov	x0, #0x18                  	// #24
   1a920:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
   1a924:	mov	x19, x0
   1a928:	mov	w2, #0x1                   	// #1
   1a92c:	ldr	x1, [sp, #24]
   1a930:	mov	x0, x19
   1a934:	bl	1b7f4 <__sanitizer_set_report_fd@@Base+0x1648>
   1a938:	str	x19, [sp, #32]
   1a93c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a940:	add	x3, x0, #0x980
   1a944:	ldr	x2, [sp, #32]
   1a948:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a94c:	add	x1, x0, #0x9b8
   1a950:	ldr	x0, [sp, #24]
   1a954:	bl	1c2e4 <__sanitizer_set_report_fd@@Base+0x2138>
   1a958:	nop
   1a95c:	ldp	x19, x30, [sp], #48
   1a960:	ret
   1a964:	str	x30, [sp, #-32]!
   1a968:	str	x0, [sp, #24]
   1a96c:	str	x1, [sp, #16]
   1a970:	ldr	x0, [sp, #16]
   1a974:	mov	x3, x0
   1a978:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a97c:	add	x2, x0, #0x9d0
   1a980:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a984:	add	x1, x0, #0xa48
   1a988:	ldr	x0, [sp, #24]
   1a98c:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1a990:	ldr	x0, [sp, #16]
   1a994:	add	x0, x0, #0x8
   1a998:	mov	x3, x0
   1a99c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a9a0:	add	x2, x0, #0xa58
   1a9a4:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a9a8:	add	x1, x0, #0xab0
   1a9ac:	ldr	x0, [sp, #24]
   1a9b0:	bl	1b4b4 <__sanitizer_set_report_fd@@Base+0x1308>
   1a9b4:	ldr	x0, [sp, #16]
   1a9b8:	add	x0, x0, #0x10
   1a9bc:	mov	x3, x0
   1a9c0:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a9c4:	add	x2, x0, #0xad0
   1a9c8:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a9cc:	add	x1, x0, #0xb70
   1a9d0:	ldr	x0, [sp, #24]
   1a9d4:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1a9d8:	ldr	x0, [sp, #16]
   1a9dc:	add	x0, x0, #0x18
   1a9e0:	mov	x3, x0
   1a9e4:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a9e8:	add	x2, x0, #0xb80
   1a9ec:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1a9f0:	add	x1, x0, #0xbb8
   1a9f4:	ldr	x0, [sp, #24]
   1a9f8:	bl	1b4b4 <__sanitizer_set_report_fd@@Base+0x1308>
   1a9fc:	ldr	x0, [sp, #16]
   1aa00:	add	x0, x0, #0x20
   1aa04:	mov	x3, x0
   1aa08:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1aa0c:	add	x2, x0, #0xbd0
   1aa10:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1aa14:	add	x1, x0, #0xc28
   1aa18:	ldr	x0, [sp, #24]
   1aa1c:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1aa20:	ldr	x0, [sp, #16]
   1aa24:	add	x0, x0, #0x21
   1aa28:	mov	x3, x0
   1aa2c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1aa30:	add	x2, x0, #0xc40
   1aa34:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1aa38:	add	x1, x0, #0xc90
   1aa3c:	ldr	x0, [sp, #24]
   1aa40:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1aa44:	ldr	x0, [sp, #16]
   1aa48:	add	x0, x0, #0x22
   1aa4c:	mov	x3, x0
   1aa50:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1aa54:	add	x2, x0, #0xca8
   1aa58:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1aa5c:	add	x1, x0, #0xcf0
   1aa60:	ldr	x0, [sp, #24]
   1aa64:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1aa68:	ldr	x0, [sp, #16]
   1aa6c:	add	x0, x0, #0x23
   1aa70:	mov	x3, x0
   1aa74:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1aa78:	add	x2, x0, #0xd08
   1aa7c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1aa80:	add	x1, x0, #0xd30
   1aa84:	ldr	x0, [sp, #24]
   1aa88:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1aa8c:	ldr	x0, [sp, #16]
   1aa90:	add	x0, x0, #0x24
   1aa94:	mov	x3, x0
   1aa98:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1aa9c:	add	x2, x0, #0xd40
   1aaa0:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1aaa4:	add	x1, x0, #0xd88
   1aaa8:	ldr	x0, [sp, #24]
   1aaac:	bl	1b50c <__sanitizer_set_report_fd@@Base+0x1360>
   1aab0:	ldr	x0, [sp, #16]
   1aab4:	add	x0, x0, #0x28
   1aab8:	mov	x3, x0
   1aabc:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1aac0:	add	x2, x0, #0xda0
   1aac4:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1aac8:	add	x1, x0, #0xe08
   1aacc:	ldr	x0, [sp, #24]
   1aad0:	bl	1b4b4 <__sanitizer_set_report_fd@@Base+0x1308>
   1aad4:	ldr	x0, [sp, #16]
   1aad8:	add	x0, x0, #0x30
   1aadc:	mov	x3, x0
   1aae0:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1aae4:	add	x2, x0, #0xe18
   1aae8:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1aaec:	add	x1, x0, #0xe90
   1aaf0:	ldr	x0, [sp, #24]
   1aaf4:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1aaf8:	ldr	x0, [sp, #16]
   1aafc:	add	x0, x0, #0x31
   1ab00:	mov	x3, x0
   1ab04:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1ab08:	add	x2, x0, #0xea0
   1ab0c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1ab10:	add	x1, x0, #0xef0
   1ab14:	ldr	x0, [sp, #24]
   1ab18:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1ab1c:	ldr	x0, [sp, #16]
   1ab20:	add	x0, x0, #0x34
   1ab24:	mov	x3, x0
   1ab28:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1ab2c:	add	x2, x0, #0xf00
   1ab30:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1ab34:	add	x1, x0, #0xf48
   1ab38:	ldr	x0, [sp, #24]
   1ab3c:	bl	1b50c <__sanitizer_set_report_fd@@Base+0x1360>
   1ab40:	ldr	x0, [sp, #16]
   1ab44:	add	x0, x0, #0x38
   1ab48:	mov	x3, x0
   1ab4c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1ab50:	add	x2, x0, #0xf58
   1ab54:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1ab58:	add	x1, x0, #0xfc8
   1ab5c:	ldr	x0, [sp, #24]
   1ab60:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1ab64:	ldr	x0, [sp, #16]
   1ab68:	add	x0, x0, #0x39
   1ab6c:	mov	x3, x0
   1ab70:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1ab74:	add	x2, x0, #0xfd8
   1ab78:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1ab7c:	add	x1, x0, #0xff8
   1ab80:	ldr	x0, [sp, #24]
   1ab84:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1ab88:	ldr	x0, [sp, #16]
   1ab8c:	add	x0, x0, #0x3a
   1ab90:	mov	x3, x0
   1ab94:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ab98:	add	x2, x0, #0x8
   1ab9c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1aba0:	add	x1, x0, #0xa8
   1aba4:	ldr	x0, [sp, #24]
   1aba8:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1abac:	ldr	x0, [sp, #16]
   1abb0:	add	x0, x0, #0x3b
   1abb4:	mov	x3, x0
   1abb8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1abbc:	add	x2, x0, #0xc0
   1abc0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1abc4:	add	x1, x0, #0x110
   1abc8:	ldr	x0, [sp, #24]
   1abcc:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1abd0:	ldr	x0, [sp, #16]
   1abd4:	add	x0, x0, #0x3c
   1abd8:	mov	x3, x0
   1abdc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1abe0:	add	x2, x0, #0x130
   1abe4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1abe8:	add	x1, x0, #0x180
   1abec:	ldr	x0, [sp, #24]
   1abf0:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1abf4:	ldr	x0, [sp, #16]
   1abf8:	add	x0, x0, #0x40
   1abfc:	mov	x3, x0
   1ac00:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ac04:	add	x2, x0, #0x190
   1ac08:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ac0c:	add	x1, x0, #0x1f8
   1ac10:	ldr	x0, [sp, #24]
   1ac14:	bl	1b50c <__sanitizer_set_report_fd@@Base+0x1360>
   1ac18:	ldr	x0, [sp, #16]
   1ac1c:	add	x0, x0, #0x44
   1ac20:	mov	x3, x0
   1ac24:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ac28:	add	x2, x0, #0x210
   1ac2c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ac30:	add	x1, x0, #0x228
   1ac34:	ldr	x0, [sp, #24]
   1ac38:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1ac3c:	ldr	x0, [sp, #16]
   1ac40:	add	x0, x0, #0x48
   1ac44:	mov	x3, x0
   1ac48:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ac4c:	add	x2, x0, #0x238
   1ac50:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ac54:	add	x1, x0, #0x2f8
   1ac58:	ldr	x0, [sp, #24]
   1ac5c:	bl	1b564 <__sanitizer_set_report_fd@@Base+0x13b8>
   1ac60:	ldr	x0, [sp, #16]
   1ac64:	add	x0, x0, #0x4c
   1ac68:	mov	x3, x0
   1ac6c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ac70:	add	x2, x0, #0x308
   1ac74:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ac78:	add	x1, x0, #0x3c8
   1ac7c:	ldr	x0, [sp, #24]
   1ac80:	bl	1b564 <__sanitizer_set_report_fd@@Base+0x13b8>
   1ac84:	ldr	x0, [sp, #16]
   1ac88:	add	x0, x0, #0x50
   1ac8c:	mov	x3, x0
   1ac90:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ac94:	add	x2, x0, #0x3d8
   1ac98:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ac9c:	add	x1, x0, #0x498
   1aca0:	ldr	x0, [sp, #24]
   1aca4:	bl	1b564 <__sanitizer_set_report_fd@@Base+0x13b8>
   1aca8:	ldr	x0, [sp, #16]
   1acac:	add	x0, x0, #0x54
   1acb0:	mov	x3, x0
   1acb4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1acb8:	add	x2, x0, #0x4a8
   1acbc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1acc0:	add	x1, x0, #0x568
   1acc4:	ldr	x0, [sp, #24]
   1acc8:	bl	1b564 <__sanitizer_set_report_fd@@Base+0x13b8>
   1accc:	ldr	x0, [sp, #16]
   1acd0:	add	x0, x0, #0x58
   1acd4:	mov	x3, x0
   1acd8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1acdc:	add	x2, x0, #0x578
   1ace0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ace4:	add	x1, x0, #0x638
   1ace8:	ldr	x0, [sp, #24]
   1acec:	bl	1b564 <__sanitizer_set_report_fd@@Base+0x13b8>
   1acf0:	ldr	x0, [sp, #16]
   1acf4:	add	x0, x0, #0x5c
   1acf8:	mov	x3, x0
   1acfc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ad00:	add	x2, x0, #0x648
   1ad04:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ad08:	add	x1, x0, #0x708
   1ad0c:	ldr	x0, [sp, #24]
   1ad10:	bl	1b564 <__sanitizer_set_report_fd@@Base+0x13b8>
   1ad14:	ldr	x0, [sp, #16]
   1ad18:	add	x0, x0, #0x60
   1ad1c:	mov	x3, x0
   1ad20:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ad24:	add	x2, x0, #0x718
   1ad28:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ad2c:	add	x1, x0, #0x788
   1ad30:	ldr	x0, [sp, #24]
   1ad34:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1ad38:	ldr	x0, [sp, #16]
   1ad3c:	add	x0, x0, #0x61
   1ad40:	mov	x3, x0
   1ad44:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ad48:	add	x2, x0, #0x7a0
   1ad4c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ad50:	add	x1, x0, #0x7d8
   1ad54:	ldr	x0, [sp, #24]
   1ad58:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1ad5c:	ldr	x0, [sp, #16]
   1ad60:	add	x0, x0, #0x62
   1ad64:	mov	x3, x0
   1ad68:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ad6c:	add	x2, x0, #0x7e8
   1ad70:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ad74:	add	x1, x0, #0x810
   1ad78:	ldr	x0, [sp, #24]
   1ad7c:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1ad80:	ldr	x0, [sp, #16]
   1ad84:	add	x0, x0, #0x68
   1ad88:	mov	x3, x0
   1ad8c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ad90:	add	x2, x0, #0x828
   1ad94:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ad98:	add	x1, x0, #0x8a0
   1ad9c:	ldr	x0, [sp, #24]
   1ada0:	bl	1b5bc <__sanitizer_set_report_fd@@Base+0x1410>
   1ada4:	ldr	x0, [sp, #16]
   1ada8:	add	x0, x0, #0x70
   1adac:	mov	x3, x0
   1adb0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1adb4:	add	x2, x0, #0x8c0
   1adb8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1adbc:	add	x1, x0, #0x8e8
   1adc0:	ldr	x0, [sp, #24]
   1adc4:	bl	1b4b4 <__sanitizer_set_report_fd@@Base+0x1308>
   1adc8:	ldr	x0, [sp, #16]
   1adcc:	add	x0, x0, #0x78
   1add0:	mov	x3, x0
   1add4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1add8:	add	x2, x0, #0x8f0
   1addc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ade0:	add	x1, x0, #0x938
   1ade4:	ldr	x0, [sp, #24]
   1ade8:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1adec:	ldr	x0, [sp, #16]
   1adf0:	add	x0, x0, #0x79
   1adf4:	mov	x3, x0
   1adf8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1adfc:	add	x2, x0, #0x950
   1ae00:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ae04:	add	x1, x0, #0x970
   1ae08:	ldr	x0, [sp, #24]
   1ae0c:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1ae10:	ldr	x0, [sp, #16]
   1ae14:	add	x0, x0, #0x7a
   1ae18:	mov	x3, x0
   1ae1c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ae20:	add	x2, x0, #0x988
   1ae24:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ae28:	add	x1, x0, #0x9a8
   1ae2c:	ldr	x0, [sp, #24]
   1ae30:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1ae34:	ldr	x0, [sp, #16]
   1ae38:	add	x0, x0, #0x80
   1ae3c:	mov	x3, x0
   1ae40:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ae44:	add	x2, x0, #0x9b0
   1ae48:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ae4c:	add	x1, x0, #0xa28
   1ae50:	ldr	x0, [sp, #24]
   1ae54:	bl	1b5bc <__sanitizer_set_report_fd@@Base+0x1410>
   1ae58:	ldr	x0, [sp, #16]
   1ae5c:	add	x0, x0, #0x88
   1ae60:	mov	x3, x0
   1ae64:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ae68:	add	x2, x0, #0xa38
   1ae6c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ae70:	add	x1, x0, #0xad8
   1ae74:	ldr	x0, [sp, #24]
   1ae78:	bl	1b5bc <__sanitizer_set_report_fd@@Base+0x1410>
   1ae7c:	ldr	x0, [sp, #16]
   1ae80:	add	x0, x0, #0x90
   1ae84:	mov	x3, x0
   1ae88:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ae8c:	add	x2, x0, #0xaf0
   1ae90:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1ae94:	add	x1, x0, #0xc50
   1ae98:	ldr	x0, [sp, #24]
   1ae9c:	bl	1b5bc <__sanitizer_set_report_fd@@Base+0x1410>
   1aea0:	ldr	x0, [sp, #16]
   1aea4:	add	x0, x0, #0x98
   1aea8:	mov	x3, x0
   1aeac:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1aeb0:	add	x2, x0, #0xc68
   1aeb4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1aeb8:	add	x1, x0, #0xc90
   1aebc:	ldr	x0, [sp, #24]
   1aec0:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1aec4:	ldr	x0, [sp, #16]
   1aec8:	add	x0, x0, #0x9c
   1aecc:	mov	x3, x0
   1aed0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1aed4:	add	x2, x0, #0xca0
   1aed8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1aedc:	add	x1, x0, #0xd70
   1aee0:	ldr	x0, [sp, #24]
   1aee4:	bl	1b50c <__sanitizer_set_report_fd@@Base+0x1360>
   1aee8:	ldr	x0, [sp, #16]
   1aeec:	add	x0, x0, #0xa0
   1aef0:	mov	x3, x0
   1aef4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1aef8:	add	x2, x0, #0xd98
   1aefc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1af00:	add	x1, x0, #0xdf8
   1af04:	ldr	x0, [sp, #24]
   1af08:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1af0c:	ldr	x0, [sp, #16]
   1af10:	add	x0, x0, #0xa1
   1af14:	mov	x3, x0
   1af18:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1af1c:	add	x2, x0, #0xe10
   1af20:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1af24:	add	x1, x0, #0xe90
   1af28:	ldr	x0, [sp, #24]
   1af2c:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1af30:	ldr	x0, [sp, #16]
   1af34:	add	x0, x0, #0xa8
   1af38:	mov	x3, x0
   1af3c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1af40:	add	x2, x0, #0xea0
   1af44:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1af48:	add	x1, x0, #0xee8
   1af4c:	ldr	x0, [sp, #24]
   1af50:	bl	1b4b4 <__sanitizer_set_report_fd@@Base+0x1308>
   1af54:	ldr	x0, [sp, #16]
   1af58:	add	x0, x0, #0xb0
   1af5c:	mov	x3, x0
   1af60:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1af64:	add	x2, x0, #0xef8
   1af68:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1af6c:	add	x1, x0, #0xf60
   1af70:	ldr	x0, [sp, #24]
   1af74:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1af78:	ldr	x0, [sp, #16]
   1af7c:	add	x0, x0, #0xb1
   1af80:	mov	x3, x0
   1af84:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1af88:	add	x2, x0, #0xf78
   1af8c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1af90:	add	x1, x0, #0xfa0
   1af94:	ldr	x0, [sp, #24]
   1af98:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1af9c:	ldr	x0, [sp, #16]
   1afa0:	add	x0, x0, #0xb2
   1afa4:	mov	x3, x0
   1afa8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x4970>
   1afac:	add	x2, x0, #0xfb8
   1afb0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1afb4:	add	x1, x0, #0x88
   1afb8:	ldr	x0, [sp, #24]
   1afbc:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1afc0:	ldr	x0, [sp, #16]
   1afc4:	add	x0, x0, #0xb3
   1afc8:	mov	x3, x0
   1afcc:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1afd0:	add	x2, x0, #0xa0
   1afd4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1afd8:	add	x1, x0, #0xe8
   1afdc:	ldr	x0, [sp, #24]
   1afe0:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1afe4:	ldr	x0, [sp, #16]
   1afe8:	add	x0, x0, #0xb4
   1afec:	mov	x3, x0
   1aff0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1aff4:	add	x2, x0, #0x100
   1aff8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1affc:	add	x1, x0, #0x138
   1b000:	ldr	x0, [sp, #24]
   1b004:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b008:	ldr	x0, [sp, #16]
   1b00c:	add	x0, x0, #0xb5
   1b010:	mov	x3, x0
   1b014:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b018:	add	x2, x0, #0x150
   1b01c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b020:	add	x1, x0, #0x198
   1b024:	ldr	x0, [sp, #24]
   1b028:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b02c:	ldr	x0, [sp, #16]
   1b030:	add	x0, x0, #0xb8
   1b034:	mov	x3, x0
   1b038:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b03c:	add	x2, x0, #0x1b0
   1b040:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b044:	add	x1, x0, #0x280
   1b048:	ldr	x0, [sp, #24]
   1b04c:	bl	1b50c <__sanitizer_set_report_fd@@Base+0x1360>
   1b050:	ldr	x0, [sp, #16]
   1b054:	add	x0, x0, #0xc0
   1b058:	mov	x3, x0
   1b05c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b060:	add	x2, x0, #0x298
   1b064:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b068:	add	x1, x0, #0x328
   1b06c:	ldr	x0, [sp, #24]
   1b070:	bl	1b4b4 <__sanitizer_set_report_fd@@Base+0x1308>
   1b074:	ldr	x0, [sp, #16]
   1b078:	add	x0, x0, #0xc8
   1b07c:	mov	x3, x0
   1b080:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b084:	add	x2, x0, #0x340
   1b088:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b08c:	add	x1, x0, #0x378
   1b090:	ldr	x0, [sp, #24]
   1b094:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b098:	ldr	x0, [sp, #16]
   1b09c:	add	x0, x0, #0xc9
   1b0a0:	mov	x3, x0
   1b0a4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b0a8:	add	x2, x0, #0x398
   1b0ac:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b0b0:	add	x1, x0, #0x3d8
   1b0b4:	ldr	x0, [sp, #24]
   1b0b8:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b0bc:	ldr	x0, [sp, #16]
   1b0c0:	add	x0, x0, #0xca
   1b0c4:	mov	x3, x0
   1b0c8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b0cc:	add	x2, x0, #0x3f0
   1b0d0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b0d4:	add	x1, x0, #0x448
   1b0d8:	ldr	x0, [sp, #24]
   1b0dc:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b0e0:	ldr	x0, [sp, #16]
   1b0e4:	add	x0, x0, #0xcb
   1b0e8:	mov	x3, x0
   1b0ec:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b0f0:	add	x2, x0, #0x460
   1b0f4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b0f8:	add	x1, x0, #0x4b8
   1b0fc:	ldr	x0, [sp, #24]
   1b100:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b104:	ldr	x0, [sp, #16]
   1b108:	add	x0, x0, #0xcc
   1b10c:	mov	x3, x0
   1b110:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b114:	add	x2, x0, #0x4d0
   1b118:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b11c:	add	x1, x0, #0x520
   1b120:	ldr	x0, [sp, #24]
   1b124:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b128:	ldr	x0, [sp, #16]
   1b12c:	add	x0, x0, #0xcd
   1b130:	mov	x3, x0
   1b134:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b138:	add	x2, x0, #0x538
   1b13c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b140:	add	x1, x0, #0x580
   1b144:	ldr	x0, [sp, #24]
   1b148:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b14c:	ldr	x0, [sp, #16]
   1b150:	add	x0, x0, #0xce
   1b154:	mov	x3, x0
   1b158:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b15c:	add	x2, x0, #0x598
   1b160:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b164:	add	x1, x0, #0x5f0
   1b168:	ldr	x0, [sp, #24]
   1b16c:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b170:	ldr	x0, [sp, #16]
   1b174:	add	x0, x0, #0xcf
   1b178:	mov	x3, x0
   1b17c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b180:	add	x2, x0, #0x608
   1b184:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b188:	add	x1, x0, #0x650
   1b18c:	ldr	x0, [sp, #24]
   1b190:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b194:	ldr	x0, [sp, #16]
   1b198:	add	x0, x0, #0xd0
   1b19c:	mov	x3, x0
   1b1a0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b1a4:	add	x2, x0, #0x668
   1b1a8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b1ac:	add	x1, x0, #0x6c8
   1b1b0:	ldr	x0, [sp, #24]
   1b1b4:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b1b8:	ldr	x0, [sp, #16]
   1b1bc:	add	x0, x0, #0xd1
   1b1c0:	mov	x3, x0
   1b1c4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b1c8:	add	x2, x0, #0x6e0
   1b1cc:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b1d0:	add	x1, x0, #0x728
   1b1d4:	ldr	x0, [sp, #24]
   1b1d8:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b1dc:	ldr	x0, [sp, #16]
   1b1e0:	add	x0, x0, #0xd2
   1b1e4:	mov	x3, x0
   1b1e8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b1ec:	add	x2, x0, #0x740
   1b1f0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b1f4:	add	x1, x0, #0x798
   1b1f8:	ldr	x0, [sp, #24]
   1b1fc:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b200:	ldr	x0, [sp, #16]
   1b204:	add	x0, x0, #0xd3
   1b208:	mov	x3, x0
   1b20c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b210:	add	x2, x0, #0x7a8
   1b214:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b218:	add	x1, x0, #0x7e8
   1b21c:	ldr	x0, [sp, #24]
   1b220:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b224:	ldr	x0, [sp, #16]
   1b228:	add	x0, x0, #0xd4
   1b22c:	mov	x3, x0
   1b230:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b234:	add	x2, x0, #0x800
   1b238:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b23c:	add	x1, x0, #0x858
   1b240:	ldr	x0, [sp, #24]
   1b244:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b248:	ldr	x0, [sp, #16]
   1b24c:	add	x0, x0, #0xd5
   1b250:	mov	x3, x0
   1b254:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b258:	add	x2, x0, #0x870
   1b25c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b260:	add	x1, x0, #0x8b8
   1b264:	ldr	x0, [sp, #24]
   1b268:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b26c:	ldr	x0, [sp, #16]
   1b270:	add	x0, x0, #0xd6
   1b274:	mov	x3, x0
   1b278:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b27c:	add	x2, x0, #0x8c8
   1b280:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b284:	add	x1, x0, #0x910
   1b288:	ldr	x0, [sp, #24]
   1b28c:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b290:	ldr	x0, [sp, #16]
   1b294:	add	x0, x0, #0xd7
   1b298:	mov	x3, x0
   1b29c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b2a0:	add	x2, x0, #0x920
   1b2a4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b2a8:	add	x1, x0, #0x970
   1b2ac:	ldr	x0, [sp, #24]
   1b2b0:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b2b4:	ldr	x0, [sp, #16]
   1b2b8:	add	x0, x0, #0xd8
   1b2bc:	mov	x3, x0
   1b2c0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b2c4:	add	x2, x0, #0x988
   1b2c8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b2cc:	add	x1, x0, #0x9c8
   1b2d0:	ldr	x0, [sp, #24]
   1b2d4:	bl	1b50c <__sanitizer_set_report_fd@@Base+0x1360>
   1b2d8:	ldr	x0, [sp, #16]
   1b2dc:	add	x0, x0, #0xdc
   1b2e0:	mov	x3, x0
   1b2e4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b2e8:	add	x2, x0, #0x9d8
   1b2ec:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b2f0:	add	x1, x0, #0xa30
   1b2f4:	ldr	x0, [sp, #24]
   1b2f8:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b2fc:	ldr	x0, [sp, #16]
   1b300:	add	x0, x0, #0xdd
   1b304:	mov	x3, x0
   1b308:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b30c:	add	x2, x0, #0xa40
   1b310:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b314:	add	x1, x0, #0xaa8
   1b318:	ldr	x0, [sp, #24]
   1b31c:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b320:	ldr	x0, [sp, #16]
   1b324:	add	x0, x0, #0xde
   1b328:	mov	x3, x0
   1b32c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b330:	add	x2, x0, #0xac0
   1b334:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b338:	add	x1, x0, #0xaf0
   1b33c:	ldr	x0, [sp, #24]
   1b340:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b344:	ldr	x0, [sp, #16]
   1b348:	add	x0, x0, #0xdf
   1b34c:	mov	x3, x0
   1b350:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b354:	add	x2, x0, #0xb00
   1b358:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b35c:	add	x1, x0, #0xb20
   1b360:	ldr	x0, [sp, #24]
   1b364:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b368:	ldr	x0, [sp, #16]
   1b36c:	add	x0, x0, #0xe0
   1b370:	mov	x3, x0
   1b374:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b378:	add	x2, x0, #0xb30
   1b37c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b380:	add	x1, x0, #0xb48
   1b384:	ldr	x0, [sp, #24]
   1b388:	bl	1b4b4 <__sanitizer_set_report_fd@@Base+0x1308>
   1b38c:	ldr	x0, [sp, #16]
   1b390:	add	x0, x0, #0xe8
   1b394:	mov	x3, x0
   1b398:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b39c:	add	x2, x0, #0xb58
   1b3a0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b3a4:	add	x1, x0, #0xba0
   1b3a8:	ldr	x0, [sp, #24]
   1b3ac:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b3b0:	ldr	x0, [sp, #16]
   1b3b4:	add	x0, x0, #0xe9
   1b3b8:	mov	x3, x0
   1b3bc:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b3c0:	add	x2, x0, #0xbb8
   1b3c4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b3c8:	add	x1, x0, #0xc18
   1b3cc:	ldr	x0, [sp, #24]
   1b3d0:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b3d4:	ldr	x0, [sp, #16]
   1b3d8:	add	x0, x0, #0xea
   1b3dc:	mov	x3, x0
   1b3e0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b3e4:	add	x2, x0, #0xc28
   1b3e8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1b3ec:	add	x1, x0, #0xc80
   1b3f0:	ldr	x0, [sp, #24]
   1b3f4:	bl	1b45c <__sanitizer_set_report_fd@@Base+0x12b0>
   1b3f8:	ldr	x1, [sp, #16]
   1b3fc:	ldr	x0, [sp, #24]
   1b400:	bl	1a8c4 <__sanitizer_set_report_fd@@Base+0x718>
   1b404:	nop
   1b408:	ldr	x30, [sp], #32
   1b40c:	ret
   1b410:	str	x30, [sp, #-32]!
   1b414:	str	x0, [sp, #24]
   1b418:	ldr	x0, [sp, #24]
   1b41c:	ldrb	w1, [x0, #161]
   1b420:	ldr	x0, [sp, #24]
   1b424:	ldrb	w0, [x0, #223]
   1b428:	orr	w0, w1, w0
   1b42c:	and	w0, w0, #0xff
   1b430:	cmp	w0, #0x0
   1b434:	cset	w0, ne  // ne = any
   1b438:	and	w1, w0, #0xff
   1b43c:	ldr	x0, [sp, #24]
   1b440:	strb	w1, [x0, #161]
   1b444:	ldr	x0, [sp, #24]
   1b448:	ldr	w0, [x0, #52]
   1b44c:	bl	1b614 <__sanitizer_set_report_fd@@Base+0x1468>
   1b450:	nop
   1b454:	ldr	x30, [sp], #32
   1b458:	ret
   1b45c:	stp	x19, x30, [sp, #-64]!
   1b460:	str	x0, [sp, #40]
   1b464:	str	x1, [sp, #32]
   1b468:	str	x2, [sp, #24]
   1b46c:	str	x3, [sp, #16]
   1b470:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1b474:	ldr	x1, [x0, #3776]
   1b478:	mov	x0, #0x10                  	// #16
   1b47c:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
   1b480:	mov	x19, x0
   1b484:	ldr	x1, [sp, #16]
   1b488:	mov	x0, x19
   1b48c:	bl	9bec <__ubsan_default_options@@Base+0x588>
   1b490:	str	x19, [sp, #56]
   1b494:	ldr	x3, [sp, #24]
   1b498:	ldr	x2, [sp, #56]
   1b49c:	ldr	x1, [sp, #32]
   1b4a0:	ldr	x0, [sp, #40]
   1b4a4:	bl	1c2e4 <__sanitizer_set_report_fd@@Base+0x2138>
   1b4a8:	nop
   1b4ac:	ldp	x19, x30, [sp], #64
   1b4b0:	ret
   1b4b4:	stp	x19, x30, [sp, #-64]!
   1b4b8:	str	x0, [sp, #40]
   1b4bc:	str	x1, [sp, #32]
   1b4c0:	str	x2, [sp, #24]
   1b4c4:	str	x3, [sp, #16]
   1b4c8:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1b4cc:	ldr	x1, [x0, #3776]
   1b4d0:	mov	x0, #0x10                  	// #16
   1b4d4:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
   1b4d8:	mov	x19, x0
   1b4dc:	ldr	x1, [sp, #16]
   1b4e0:	mov	x0, x19
   1b4e4:	bl	9c28 <__ubsan_default_options@@Base+0x5c4>
   1b4e8:	str	x19, [sp, #56]
   1b4ec:	ldr	x3, [sp, #24]
   1b4f0:	ldr	x2, [sp, #56]
   1b4f4:	ldr	x1, [sp, #32]
   1b4f8:	ldr	x0, [sp, #40]
   1b4fc:	bl	1c2e4 <__sanitizer_set_report_fd@@Base+0x2138>
   1b500:	nop
   1b504:	ldp	x19, x30, [sp], #64
   1b508:	ret
   1b50c:	stp	x19, x30, [sp, #-64]!
   1b510:	str	x0, [sp, #40]
   1b514:	str	x1, [sp, #32]
   1b518:	str	x2, [sp, #24]
   1b51c:	str	x3, [sp, #16]
   1b520:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1b524:	ldr	x1, [x0, #3776]
   1b528:	mov	x0, #0x10                  	// #16
   1b52c:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
   1b530:	mov	x19, x0
   1b534:	ldr	x1, [sp, #16]
   1b538:	mov	x0, x19
   1b53c:	bl	1b968 <__sanitizer_set_report_fd@@Base+0x17bc>
   1b540:	str	x19, [sp, #56]
   1b544:	ldr	x3, [sp, #24]
   1b548:	ldr	x2, [sp, #56]
   1b54c:	ldr	x1, [sp, #32]
   1b550:	ldr	x0, [sp, #40]
   1b554:	bl	1c2e4 <__sanitizer_set_report_fd@@Base+0x2138>
   1b558:	nop
   1b55c:	ldp	x19, x30, [sp], #64
   1b560:	ret
   1b564:	stp	x19, x30, [sp, #-64]!
   1b568:	str	x0, [sp, #40]
   1b56c:	str	x1, [sp, #32]
   1b570:	str	x2, [sp, #24]
   1b574:	str	x3, [sp, #16]
   1b578:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1b57c:	ldr	x1, [x0, #3776]
   1b580:	mov	x0, #0x10                  	// #16
   1b584:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
   1b588:	mov	x19, x0
   1b58c:	ldr	x1, [sp, #16]
   1b590:	mov	x0, x19
   1b594:	bl	1b9a4 <__sanitizer_set_report_fd@@Base+0x17f8>
   1b598:	str	x19, [sp, #56]
   1b59c:	ldr	x3, [sp, #24]
   1b5a0:	ldr	x2, [sp, #56]
   1b5a4:	ldr	x1, [sp, #32]
   1b5a8:	ldr	x0, [sp, #40]
   1b5ac:	bl	1c2e4 <__sanitizer_set_report_fd@@Base+0x2138>
   1b5b0:	nop
   1b5b4:	ldp	x19, x30, [sp], #64
   1b5b8:	ret
   1b5bc:	stp	x19, x30, [sp, #-64]!
   1b5c0:	str	x0, [sp, #40]
   1b5c4:	str	x1, [sp, #32]
   1b5c8:	str	x2, [sp, #24]
   1b5cc:	str	x3, [sp, #16]
   1b5d0:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1b5d4:	ldr	x1, [x0, #3776]
   1b5d8:	mov	x0, #0x10                  	// #16
   1b5dc:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
   1b5e0:	mov	x19, x0
   1b5e4:	ldr	x1, [sp, #16]
   1b5e8:	mov	x0, x19
   1b5ec:	bl	1b9e0 <__sanitizer_set_report_fd@@Base+0x1834>
   1b5f0:	str	x19, [sp, #56]
   1b5f4:	ldr	x3, [sp, #24]
   1b5f8:	ldr	x2, [sp, #56]
   1b5fc:	ldr	x1, [sp, #32]
   1b600:	ldr	x0, [sp, #40]
   1b604:	bl	1c2e4 <__sanitizer_set_report_fd@@Base+0x2138>
   1b608:	nop
   1b60c:	ldp	x19, x30, [sp], #64
   1b610:	ret
   1b614:	str	x30, [sp, #-32]!
   1b618:	str	w0, [sp, #28]
   1b61c:	ldr	w0, [sp, #28]
   1b620:	mov	w2, #0x1                   	// #1
   1b624:	mov	w1, w0
   1b628:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1b62c:	ldr	x0, [x0, #3896]
   1b630:	bl	1b8fc <__sanitizer_set_report_fd@@Base+0x1750>
   1b634:	nop
   1b638:	ldr	x30, [sp], #32
   1b63c:	ret
   1b640:	str	x30, [sp, #-48]!
   1b644:	str	x0, [sp, #24]
   1b648:	str	x1, [sp, #16]
   1b64c:	add	x0, sp, #0x2f
   1b650:	mov	x1, x0
   1b654:	ldr	x0, [sp, #16]
   1b658:	bl	99d8 <__ubsan_default_options@@Base+0x374>
   1b65c:	and	w0, w0, #0xff
   1b660:	cmp	w0, #0x0
   1b664:	b.eq	1b694 <__sanitizer_set_report_fd@@Base+0x14e8>  // b.none
   1b668:	ldrb	w0, [sp, #47]
   1b66c:	cmp	w0, #0x0
   1b670:	b.eq	1b67c <__sanitizer_set_report_fd@@Base+0x14d0>  // b.none
   1b674:	mov	w0, #0x1                   	// #1
   1b678:	b	1b680 <__sanitizer_set_report_fd@@Base+0x14d4>
   1b67c:	mov	w0, #0x0                   	// #0
   1b680:	ldr	x1, [sp, #24]
   1b684:	ldr	x1, [x1, #8]
   1b688:	str	w0, [x1]
   1b68c:	mov	w0, #0x1                   	// #1
   1b690:	b	1b704 <__sanitizer_set_report_fd@@Base+0x1558>
   1b694:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1b698:	add	x1, x0, #0x7e8
   1b69c:	ldr	x0, [sp, #16]
   1b6a0:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   1b6a4:	cmp	w0, #0x0
   1b6a8:	b.eq	1b6c4 <__sanitizer_set_report_fd@@Base+0x1518>  // b.none
   1b6ac:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1b6b0:	add	x1, x0, #0x7f0
   1b6b4:	ldr	x0, [sp, #16]
   1b6b8:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   1b6bc:	cmp	w0, #0x0
   1b6c0:	b.ne	1b6cc <__sanitizer_set_report_fd@@Base+0x1520>  // b.any
   1b6c4:	mov	w0, #0x1                   	// #1
   1b6c8:	b	1b6d0 <__sanitizer_set_report_fd@@Base+0x1524>
   1b6cc:	mov	w0, #0x0                   	// #0
   1b6d0:	cmp	w0, #0x0
   1b6d4:	b.eq	1b6f0 <__sanitizer_set_report_fd@@Base+0x1544>  // b.none
   1b6d8:	ldr	x0, [sp, #24]
   1b6dc:	ldr	x0, [x0, #8]
   1b6e0:	mov	w1, #0x2                   	// #2
   1b6e4:	str	w1, [x0]
   1b6e8:	mov	w0, #0x1                   	// #1
   1b6ec:	b	1b704 <__sanitizer_set_report_fd@@Base+0x1558>
   1b6f0:	ldr	x1, [sp, #16]
   1b6f4:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1b6f8:	add	x0, x0, #0x800
   1b6fc:	bl	259c8 <OnPrint@@Base+0x3a8>
   1b700:	mov	w0, #0x0                   	// #0
   1b704:	ldr	x30, [sp], #48
   1b708:	ret
   1b70c:	str	x30, [sp, #-48]!
   1b710:	str	x0, [sp, #24]
   1b714:	str	x1, [sp, #16]
   1b718:	add	x0, sp, #0x20
   1b71c:	mov	w2, #0xa                   	// #10
   1b720:	mov	x1, x0
   1b724:	ldr	x0, [sp, #16]
   1b728:	bl	1d110 <__sanitizer_set_report_fd@@Base+0x2f64>
   1b72c:	mov	x1, x0
   1b730:	ldr	x0, [sp, #24]
   1b734:	ldr	x0, [x0, #8]
   1b738:	str	w1, [x0]
   1b73c:	ldr	x0, [sp, #32]
   1b740:	ldrb	w0, [x0]
   1b744:	cmp	w0, #0x0
   1b748:	cset	w0, eq  // eq = none
   1b74c:	strb	w0, [sp, #47]
   1b750:	ldrb	w0, [sp, #47]
   1b754:	eor	w0, w0, #0x1
   1b758:	and	w0, w0, #0xff
   1b75c:	cmp	w0, #0x0
   1b760:	b.eq	1b774 <__sanitizer_set_report_fd@@Base+0x15c8>  // b.none
   1b764:	ldr	x1, [sp, #16]
   1b768:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1b76c:	add	x0, x0, #0x838
   1b770:	bl	259c8 <OnPrint@@Base+0x3a8>
   1b774:	ldrb	w0, [sp, #47]
   1b778:	ldr	x30, [sp], #48
   1b77c:	ret
   1b780:	str	x30, [sp, #-48]!
   1b784:	str	x0, [sp, #24]
   1b788:	str	x1, [sp, #16]
   1b78c:	add	x0, sp, #0x20
   1b790:	mov	w2, #0xa                   	// #10
   1b794:	mov	x1, x0
   1b798:	ldr	x0, [sp, #16]
   1b79c:	bl	1d110 <__sanitizer_set_report_fd@@Base+0x2f64>
   1b7a0:	mov	x1, x0
   1b7a4:	ldr	x0, [sp, #24]
   1b7a8:	ldr	x0, [x0, #8]
   1b7ac:	str	x1, [x0]
   1b7b0:	ldr	x0, [sp, #32]
   1b7b4:	ldrb	w0, [x0]
   1b7b8:	cmp	w0, #0x0
   1b7bc:	cset	w0, eq  // eq = none
   1b7c0:	strb	w0, [sp, #47]
   1b7c4:	ldrb	w0, [sp, #47]
   1b7c8:	eor	w0, w0, #0x1
   1b7cc:	and	w0, w0, #0xff
   1b7d0:	cmp	w0, #0x0
   1b7d4:	b.eq	1b7e8 <__sanitizer_set_report_fd@@Base+0x163c>  // b.none
   1b7d8:	ldr	x1, [sp, #16]
   1b7dc:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1b7e0:	add	x0, x0, #0x868
   1b7e4:	bl	259c8 <OnPrint@@Base+0x3a8>
   1b7e8:	ldrb	w0, [sp, #47]
   1b7ec:	ldr	x30, [sp], #48
   1b7f0:	ret
   1b7f4:	str	x30, [sp, #-48]!
   1b7f8:	str	x0, [sp, #40]
   1b7fc:	str	x1, [sp, #32]
   1b800:	strb	w2, [sp, #31]
   1b804:	ldr	x0, [sp, #40]
   1b808:	bl	9bc8 <__ubsan_default_options@@Base+0x564>
   1b80c:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   1b810:	add	x1, x0, #0xd78
   1b814:	ldr	x0, [sp, #40]
   1b818:	str	x1, [x0]
   1b81c:	ldr	x0, [sp, #40]
   1b820:	ldr	x1, [sp, #32]
   1b824:	str	x1, [x0, #8]
   1b828:	ldr	x0, [sp, #40]
   1b82c:	ldrb	w1, [sp, #31]
   1b830:	strb	w1, [x0, #16]
   1b834:	nop
   1b838:	ldr	x30, [sp], #48
   1b83c:	ret
   1b840:	str	x30, [sp, #-48]!
   1b844:	str	x0, [sp, #24]
   1b848:	str	x1, [sp, #16]
   1b84c:	mov	w1, #0x25                  	// #37
   1b850:	ldr	x0, [sp, #16]
   1b854:	bl	1cbfc <__sanitizer_set_report_fd@@Base+0x2a50>
   1b858:	cmp	x0, #0x0
   1b85c:	cset	w0, ne  // ne = any
   1b860:	and	w0, w0, #0xff
   1b864:	cmp	w0, #0x0
   1b868:	b.eq	1b8cc <__sanitizer_set_report_fd@@Base+0x1720>  // b.none
   1b86c:	mov	w2, #0x0                   	// #0
   1b870:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x3970>
   1b874:	add	x1, x0, #0x938
   1b878:	mov	x0, #0x1000                	// #4096
   1b87c:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   1b880:	str	x0, [sp, #40]
   1b884:	mov	x2, #0x1000                	// #4096
   1b888:	ldr	x1, [sp, #40]
   1b88c:	ldr	x0, [sp, #16]
   1b890:	bl	1a5e8 <__sanitizer_set_report_fd@@Base+0x43c>
   1b894:	ldr	x0, [sp, #24]
   1b898:	ldr	x3, [x0, #8]
   1b89c:	ldr	x0, [sp, #24]
   1b8a0:	ldrb	w0, [x0, #16]
   1b8a4:	mov	w2, w0
   1b8a8:	ldr	x1, [sp, #40]
   1b8ac:	mov	x0, x3
   1b8b0:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x1f6c>
   1b8b4:	strb	w0, [sp, #39]
   1b8b8:	mov	x1, #0x1000                	// #4096
   1b8bc:	ldr	x0, [sp, #40]
   1b8c0:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   1b8c4:	ldrb	w0, [sp, #39]
   1b8c8:	b	1b8f4 <__sanitizer_set_report_fd@@Base+0x1748>
   1b8cc:	ldr	x0, [sp, #24]
   1b8d0:	ldr	x3, [x0, #8]
   1b8d4:	ldr	x0, [sp, #24]
   1b8d8:	ldrb	w0, [x0, #16]
   1b8dc:	mov	w2, w0
   1b8e0:	ldr	x1, [sp, #16]
   1b8e4:	mov	x0, x3
   1b8e8:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x1f6c>
   1b8ec:	and	w0, w0, #0xff
   1b8f0:	nop
   1b8f4:	ldr	x30, [sp], #48
   1b8f8:	ret
   1b8fc:	sub	sp, sp, #0x10
   1b900:	str	x0, [sp, #8]
   1b904:	str	w1, [sp, #4]
   1b908:	str	w2, [sp]
   1b90c:	ldr	w0, [sp]
   1b910:	cmp	w0, #0x1
   1b914:	b.ne	1b928 <__sanitizer_set_report_fd@@Base+0x177c>  // b.any
   1b918:	ldr	x0, [sp, #8]
   1b91c:	ldr	w1, [sp, #4]
   1b920:	str	w1, [x0]
   1b924:	b	1b95c <__sanitizer_set_report_fd@@Base+0x17b0>
   1b928:	ldr	w0, [sp]
   1b92c:	cmp	w0, #0x8
   1b930:	b.ne	1b948 <__sanitizer_set_report_fd@@Base+0x179c>  // b.any
   1b934:	dmb	ish
   1b938:	ldr	x0, [sp, #8]
   1b93c:	ldr	w1, [sp, #4]
   1b940:	str	w1, [x0]
   1b944:	b	1b95c <__sanitizer_set_report_fd@@Base+0x17b0>
   1b948:	dmb	ish
   1b94c:	ldr	x0, [sp, #8]
   1b950:	ldr	w1, [sp, #4]
   1b954:	str	w1, [x0]
   1b958:	dmb	ish
   1b95c:	nop
   1b960:	add	sp, sp, #0x10
   1b964:	ret
   1b968:	str	x30, [sp, #-32]!
   1b96c:	str	x0, [sp, #24]
   1b970:	str	x1, [sp, #16]
   1b974:	ldr	x0, [sp, #24]
   1b978:	bl	9bc8 <__ubsan_default_options@@Base+0x564>
   1b97c:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   1b980:	add	x1, x0, #0xda8
   1b984:	ldr	x0, [sp, #24]
   1b988:	str	x1, [x0]
   1b98c:	ldr	x0, [sp, #24]
   1b990:	ldr	x1, [sp, #16]
   1b994:	str	x1, [x0, #8]
   1b998:	nop
   1b99c:	ldr	x30, [sp], #32
   1b9a0:	ret
   1b9a4:	str	x30, [sp, #-32]!
   1b9a8:	str	x0, [sp, #24]
   1b9ac:	str	x1, [sp, #16]
   1b9b0:	ldr	x0, [sp, #24]
   1b9b4:	bl	9bc8 <__ubsan_default_options@@Base+0x564>
   1b9b8:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   1b9bc:	add	x1, x0, #0xdc0
   1b9c0:	ldr	x0, [sp, #24]
   1b9c4:	str	x1, [x0]
   1b9c8:	ldr	x0, [sp, #24]
   1b9cc:	ldr	x1, [sp, #16]
   1b9d0:	str	x1, [x0, #8]
   1b9d4:	nop
   1b9d8:	ldr	x30, [sp], #32
   1b9dc:	ret
   1b9e0:	str	x30, [sp, #-32]!
   1b9e4:	str	x0, [sp, #24]
   1b9e8:	str	x1, [sp, #16]
   1b9ec:	ldr	x0, [sp, #24]
   1b9f0:	bl	9bc8 <__ubsan_default_options@@Base+0x564>
   1b9f4:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   1b9f8:	add	x1, x0, #0xd90
   1b9fc:	ldr	x0, [sp, #24]
   1ba00:	str	x1, [x0]
   1ba04:	ldr	x0, [sp, #24]
   1ba08:	ldr	x1, [sp, #16]
   1ba0c:	str	x1, [x0, #8]
   1ba10:	nop
   1ba14:	ldr	x30, [sp], #32
   1ba18:	ret
   1ba1c:	str	x30, [sp, #-16]!
   1ba20:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   1ba24:	add	x0, x0, #0xce0
   1ba28:	bl	1c4dc <__sanitizer_set_report_fd@@Base+0x2330>
   1ba2c:	nop
   1ba30:	ldr	x30, [sp], #16
   1ba34:	ret
   1ba38:	str	x30, [sp, #-64]!
   1ba3c:	str	x0, [sp, #40]
   1ba40:	str	x1, [sp, #32]
   1ba44:	str	x2, [sp, #24]
   1ba48:	ldr	x1, [sp, #24]
   1ba4c:	ldr	x0, [sp, #32]
   1ba50:	bl	1d00c <__sanitizer_set_report_fd@@Base+0x2e60>
   1ba54:	str	x0, [sp, #56]
   1ba58:	ldr	x0, [sp, #56]
   1ba5c:	add	x0, x0, #0x1
   1ba60:	mov	x1, x0
   1ba64:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   1ba68:	add	x0, x0, #0xcd0
   1ba6c:	bl	10aa0 <__sancov_default_options@@Base+0x6f4>
   1ba70:	str	x0, [sp, #48]
   1ba74:	ldr	x2, [sp, #56]
   1ba78:	ldr	x1, [sp, #32]
   1ba7c:	ldr	x0, [sp, #48]
   1ba80:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   1ba84:	ldr	x1, [sp, #48]
   1ba88:	ldr	x0, [sp, #56]
   1ba8c:	add	x0, x1, x0
   1ba90:	strb	wzr, [x0]
   1ba94:	ldr	x0, [sp, #48]
   1ba98:	ldr	x30, [sp], #64
   1ba9c:	ret
   1baa0:	str	x30, [sp, #-48]!
   1baa4:	str	x0, [sp, #24]
   1baa8:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1baac:	ldr	x0, [x0, #4024]
   1bab0:	ldr	x0, [x0]
   1bab4:	mov	x1, x0
   1bab8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1babc:	add	x0, x0, #0xda0
   1bac0:	bl	259c8 <OnPrint@@Base+0x3a8>
   1bac4:	str	wzr, [sp, #44]
   1bac8:	ldr	x0, [sp, #24]
   1bacc:	ldr	w0, [x0, #8]
   1bad0:	ldr	w1, [sp, #44]
   1bad4:	cmp	w1, w0
   1bad8:	b.ge	1bb48 <__sanitizer_set_report_fd@@Base+0x199c>  // b.tcont
   1badc:	ldr	x0, [sp, #24]
   1bae0:	ldr	x2, [x0]
   1bae4:	ldrsw	x1, [sp, #44]
   1bae8:	mov	x0, x1
   1baec:	lsl	x0, x0, #1
   1baf0:	add	x0, x0, x1
   1baf4:	lsl	x0, x0, #3
   1baf8:	add	x0, x2, x0
   1bafc:	ldr	x3, [x0]
   1bb00:	ldr	x0, [sp, #24]
   1bb04:	ldr	x2, [x0]
   1bb08:	ldrsw	x1, [sp, #44]
   1bb0c:	mov	x0, x1
   1bb10:	lsl	x0, x0, #1
   1bb14:	add	x0, x0, x1
   1bb18:	lsl	x0, x0, #3
   1bb1c:	add	x0, x2, x0
   1bb20:	ldr	x0, [x0, #8]
   1bb24:	mov	x2, x0
   1bb28:	mov	x1, x3
   1bb2c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1bb30:	add	x0, x0, #0xdc0
   1bb34:	bl	259c8 <OnPrint@@Base+0x3a8>
   1bb38:	ldr	w0, [sp, #44]
   1bb3c:	add	w0, w0, #0x1
   1bb40:	str	w0, [sp, #44]
   1bb44:	b	1bac8 <__sanitizer_set_report_fd@@Base+0x191c>
   1bb48:	nop
   1bb4c:	ldr	x30, [sp], #48
   1bb50:	ret
   1bb54:	str	x30, [sp, #-32]!
   1bb58:	str	x0, [sp, #24]
   1bb5c:	str	x1, [sp, #16]
   1bb60:	ldr	x1, [sp, #16]
   1bb64:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1bb68:	add	x0, x0, #0xdd0
   1bb6c:	bl	259c8 <OnPrint@@Base+0x3a8>
   1bb70:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   1bb74:	sub	sp, sp, #0x10
   1bb78:	str	x0, [sp, #8]
   1bb7c:	strb	w1, [sp, #7]
   1bb80:	ldrb	w0, [sp, #7]
   1bb84:	cmp	w0, #0x20
   1bb88:	b.eq	1bbc8 <__sanitizer_set_report_fd@@Base+0x1a1c>  // b.none
   1bb8c:	ldrb	w0, [sp, #7]
   1bb90:	cmp	w0, #0x2c
   1bb94:	b.eq	1bbc8 <__sanitizer_set_report_fd@@Base+0x1a1c>  // b.none
   1bb98:	ldrb	w0, [sp, #7]
   1bb9c:	cmp	w0, #0x3a
   1bba0:	b.eq	1bbc8 <__sanitizer_set_report_fd@@Base+0x1a1c>  // b.none
   1bba4:	ldrb	w0, [sp, #7]
   1bba8:	cmp	w0, #0xa
   1bbac:	b.eq	1bbc8 <__sanitizer_set_report_fd@@Base+0x1a1c>  // b.none
   1bbb0:	ldrb	w0, [sp, #7]
   1bbb4:	cmp	w0, #0x9
   1bbb8:	b.eq	1bbc8 <__sanitizer_set_report_fd@@Base+0x1a1c>  // b.none
   1bbbc:	ldrb	w0, [sp, #7]
   1bbc0:	cmp	w0, #0xd
   1bbc4:	b.ne	1bbd0 <__sanitizer_set_report_fd@@Base+0x1a24>  // b.any
   1bbc8:	mov	w0, #0x1                   	// #1
   1bbcc:	b	1bbd4 <__sanitizer_set_report_fd@@Base+0x1a28>
   1bbd0:	mov	w0, #0x0                   	// #0
   1bbd4:	add	sp, sp, #0x10
   1bbd8:	ret
   1bbdc:	str	x30, [sp, #-32]!
   1bbe0:	str	x0, [sp, #24]
   1bbe4:	ldr	x0, [sp, #24]
   1bbe8:	ldr	x1, [x0, #16]
   1bbec:	ldr	x0, [sp, #24]
   1bbf0:	ldr	x0, [x0, #24]
   1bbf4:	add	x0, x1, x0
   1bbf8:	ldrb	w0, [x0]
   1bbfc:	mov	w1, w0
   1bc00:	ldr	x0, [sp, #24]
   1bc04:	bl	1bb74 <__sanitizer_set_report_fd@@Base+0x19c8>
   1bc08:	and	w0, w0, #0xff
   1bc0c:	cmp	w0, #0x0
   1bc10:	b.eq	1bc2c <__sanitizer_set_report_fd@@Base+0x1a80>  // b.none
   1bc14:	ldr	x0, [sp, #24]
   1bc18:	ldr	x0, [x0, #24]
   1bc1c:	add	x1, x0, #0x1
   1bc20:	ldr	x0, [sp, #24]
   1bc24:	str	x1, [x0, #24]
   1bc28:	b	1bbe4 <__sanitizer_set_report_fd@@Base+0x1a38>
   1bc2c:	nop
   1bc30:	ldr	x30, [sp], #32
   1bc34:	ret
   1bc38:	str	x30, [sp, #-80]!
   1bc3c:	str	x0, [sp, #24]
   1bc40:	ldr	x0, [sp, #24]
   1bc44:	ldr	x0, [x0, #24]
   1bc48:	str	x0, [sp, #64]
   1bc4c:	ldr	x0, [sp, #24]
   1bc50:	ldr	x1, [x0, #16]
   1bc54:	ldr	x0, [sp, #24]
   1bc58:	ldr	x0, [x0, #24]
   1bc5c:	add	x0, x1, x0
   1bc60:	ldrb	w0, [x0]
   1bc64:	cmp	w0, #0x0
   1bc68:	b.eq	1bccc <__sanitizer_set_report_fd@@Base+0x1b20>  // b.none
   1bc6c:	ldr	x0, [sp, #24]
   1bc70:	ldr	x1, [x0, #16]
   1bc74:	ldr	x0, [sp, #24]
   1bc78:	ldr	x0, [x0, #24]
   1bc7c:	add	x0, x1, x0
   1bc80:	ldrb	w0, [x0]
   1bc84:	cmp	w0, #0x3d
   1bc88:	b.eq	1bccc <__sanitizer_set_report_fd@@Base+0x1b20>  // b.none
   1bc8c:	ldr	x0, [sp, #24]
   1bc90:	ldr	x1, [x0, #16]
   1bc94:	ldr	x0, [sp, #24]
   1bc98:	ldr	x0, [x0, #24]
   1bc9c:	add	x0, x1, x0
   1bca0:	ldrb	w0, [x0]
   1bca4:	mov	w1, w0
   1bca8:	ldr	x0, [sp, #24]
   1bcac:	bl	1bb74 <__sanitizer_set_report_fd@@Base+0x19c8>
   1bcb0:	and	w0, w0, #0xff
   1bcb4:	eor	w0, w0, #0x1
   1bcb8:	and	w0, w0, #0xff
   1bcbc:	cmp	w0, #0x0
   1bcc0:	b.eq	1bccc <__sanitizer_set_report_fd@@Base+0x1b20>  // b.none
   1bcc4:	mov	w0, #0x1                   	// #1
   1bcc8:	b	1bcd0 <__sanitizer_set_report_fd@@Base+0x1b24>
   1bccc:	mov	w0, #0x0                   	// #0
   1bcd0:	cmp	w0, #0x0
   1bcd4:	b.eq	1bcf0 <__sanitizer_set_report_fd@@Base+0x1b44>  // b.none
   1bcd8:	ldr	x0, [sp, #24]
   1bcdc:	ldr	x0, [x0, #24]
   1bce0:	add	x1, x0, #0x1
   1bce4:	ldr	x0, [sp, #24]
   1bce8:	str	x1, [x0, #24]
   1bcec:	b	1bc4c <__sanitizer_set_report_fd@@Base+0x1aa0>
   1bcf0:	ldr	x0, [sp, #24]
   1bcf4:	ldr	x1, [x0, #16]
   1bcf8:	ldr	x0, [sp, #24]
   1bcfc:	ldr	x0, [x0, #24]
   1bd00:	add	x0, x1, x0
   1bd04:	ldrb	w0, [x0]
   1bd08:	cmp	w0, #0x3d
   1bd0c:	b.eq	1bd20 <__sanitizer_set_report_fd@@Base+0x1b74>  // b.none
   1bd10:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1bd14:	add	x1, x0, #0xde0
   1bd18:	ldr	x0, [sp, #24]
   1bd1c:	bl	1bb54 <__sanitizer_set_report_fd@@Base+0x19a8>
   1bd20:	ldr	x0, [sp, #24]
   1bd24:	ldr	x1, [x0, #16]
   1bd28:	ldr	x0, [sp, #64]
   1bd2c:	add	x3, x1, x0
   1bd30:	ldr	x0, [sp, #24]
   1bd34:	ldr	x1, [x0, #24]
   1bd38:	ldr	x0, [sp, #64]
   1bd3c:	sub	x0, x1, x0
   1bd40:	mov	x2, x0
   1bd44:	mov	x1, x3
   1bd48:	ldr	x0, [sp, #24]
   1bd4c:	bl	1ba38 <__sanitizer_set_report_fd@@Base+0x188c>
   1bd50:	str	x0, [sp, #56]
   1bd54:	ldr	x0, [sp, #24]
   1bd58:	ldr	x0, [x0, #24]
   1bd5c:	add	x1, x0, #0x1
   1bd60:	ldr	x0, [sp, #24]
   1bd64:	str	x1, [x0, #24]
   1bd68:	ldr	x0, [sp, #24]
   1bd6c:	ldr	x0, [x0, #24]
   1bd70:	str	x0, [sp, #48]
   1bd74:	ldr	x0, [sp, #24]
   1bd78:	ldr	x1, [x0, #16]
   1bd7c:	ldr	x0, [sp, #24]
   1bd80:	ldr	x0, [x0, #24]
   1bd84:	add	x0, x1, x0
   1bd88:	ldrb	w0, [x0]
   1bd8c:	cmp	w0, #0x27
   1bd90:	b.eq	1bdb4 <__sanitizer_set_report_fd@@Base+0x1c08>  // b.none
   1bd94:	ldr	x0, [sp, #24]
   1bd98:	ldr	x1, [x0, #16]
   1bd9c:	ldr	x0, [sp, #24]
   1bda0:	ldr	x0, [x0, #24]
   1bda4:	add	x0, x1, x0
   1bda8:	ldrb	w0, [x0]
   1bdac:	cmp	w0, #0x22
   1bdb0:	b.ne	1bebc <__sanitizer_set_report_fd@@Base+0x1d10>  // b.any
   1bdb4:	ldr	x0, [sp, #24]
   1bdb8:	ldr	x1, [x0, #16]
   1bdbc:	ldr	x0, [sp, #24]
   1bdc0:	ldr	x0, [x0, #24]
   1bdc4:	add	x3, x0, #0x1
   1bdc8:	ldr	x2, [sp, #24]
   1bdcc:	str	x3, [x2, #24]
   1bdd0:	add	x0, x1, x0
   1bdd4:	ldrb	w0, [x0]
   1bdd8:	strb	w0, [sp, #47]
   1bddc:	ldr	x0, [sp, #24]
   1bde0:	ldr	x1, [x0, #16]
   1bde4:	ldr	x0, [sp, #24]
   1bde8:	ldr	x0, [x0, #24]
   1bdec:	add	x0, x1, x0
   1bdf0:	ldrb	w0, [x0]
   1bdf4:	cmp	w0, #0x0
   1bdf8:	b.eq	1be38 <__sanitizer_set_report_fd@@Base+0x1c8c>  // b.none
   1bdfc:	ldr	x0, [sp, #24]
   1be00:	ldr	x1, [x0, #16]
   1be04:	ldr	x0, [sp, #24]
   1be08:	ldr	x0, [x0, #24]
   1be0c:	add	x0, x1, x0
   1be10:	ldrb	w0, [x0]
   1be14:	ldrb	w1, [sp, #47]
   1be18:	cmp	w1, w0
   1be1c:	b.eq	1be38 <__sanitizer_set_report_fd@@Base+0x1c8c>  // b.none
   1be20:	ldr	x0, [sp, #24]
   1be24:	ldr	x0, [x0, #24]
   1be28:	add	x1, x0, #0x1
   1be2c:	ldr	x0, [sp, #24]
   1be30:	str	x1, [x0, #24]
   1be34:	b	1bddc <__sanitizer_set_report_fd@@Base+0x1c30>
   1be38:	ldr	x0, [sp, #24]
   1be3c:	ldr	x1, [x0, #16]
   1be40:	ldr	x0, [sp, #24]
   1be44:	ldr	x0, [x0, #24]
   1be48:	add	x0, x1, x0
   1be4c:	ldrb	w0, [x0]
   1be50:	cmp	w0, #0x0
   1be54:	b.ne	1be68 <__sanitizer_set_report_fd@@Base+0x1cbc>  // b.any
   1be58:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1be5c:	add	x1, x0, #0xdf0
   1be60:	ldr	x0, [sp, #24]
   1be64:	bl	1bb54 <__sanitizer_set_report_fd@@Base+0x19a8>
   1be68:	ldr	x0, [sp, #24]
   1be6c:	ldr	x1, [x0, #16]
   1be70:	ldr	x0, [sp, #48]
   1be74:	add	x0, x0, #0x1
   1be78:	add	x3, x1, x0
   1be7c:	ldr	x0, [sp, #24]
   1be80:	ldr	x1, [x0, #24]
   1be84:	ldr	x0, [sp, #48]
   1be88:	sub	x0, x1, x0
   1be8c:	sub	x0, x0, #0x1
   1be90:	mov	x2, x0
   1be94:	mov	x1, x3
   1be98:	ldr	x0, [sp, #24]
   1be9c:	bl	1ba38 <__sanitizer_set_report_fd@@Base+0x188c>
   1bea0:	str	x0, [sp, #72]
   1bea4:	ldr	x0, [sp, #24]
   1bea8:	ldr	x0, [x0, #24]
   1beac:	add	x1, x0, #0x1
   1beb0:	ldr	x0, [sp, #24]
   1beb4:	str	x1, [x0, #24]
   1beb8:	b	1bff0 <__sanitizer_set_report_fd@@Base+0x1e44>
   1bebc:	ldr	x0, [sp, #24]
   1bec0:	ldr	x1, [x0, #16]
   1bec4:	ldr	x0, [sp, #24]
   1bec8:	ldr	x0, [x0, #24]
   1becc:	add	x0, x1, x0
   1bed0:	ldrb	w0, [x0]
   1bed4:	cmp	w0, #0x0
   1bed8:	b.eq	1bf1c <__sanitizer_set_report_fd@@Base+0x1d70>  // b.none
   1bedc:	ldr	x0, [sp, #24]
   1bee0:	ldr	x1, [x0, #16]
   1bee4:	ldr	x0, [sp, #24]
   1bee8:	ldr	x0, [x0, #24]
   1beec:	add	x0, x1, x0
   1bef0:	ldrb	w0, [x0]
   1bef4:	mov	w1, w0
   1bef8:	ldr	x0, [sp, #24]
   1befc:	bl	1bb74 <__sanitizer_set_report_fd@@Base+0x19c8>
   1bf00:	and	w0, w0, #0xff
   1bf04:	eor	w0, w0, #0x1
   1bf08:	and	w0, w0, #0xff
   1bf0c:	cmp	w0, #0x0
   1bf10:	b.eq	1bf1c <__sanitizer_set_report_fd@@Base+0x1d70>  // b.none
   1bf14:	mov	w0, #0x1                   	// #1
   1bf18:	b	1bf20 <__sanitizer_set_report_fd@@Base+0x1d74>
   1bf1c:	mov	w0, #0x0                   	// #0
   1bf20:	cmp	w0, #0x0
   1bf24:	b.eq	1bf40 <__sanitizer_set_report_fd@@Base+0x1d94>  // b.none
   1bf28:	ldr	x0, [sp, #24]
   1bf2c:	ldr	x0, [x0, #24]
   1bf30:	add	x1, x0, #0x1
   1bf34:	ldr	x0, [sp, #24]
   1bf38:	str	x1, [x0, #24]
   1bf3c:	b	1bebc <__sanitizer_set_report_fd@@Base+0x1d10>
   1bf40:	ldr	x0, [sp, #24]
   1bf44:	ldr	x1, [x0, #16]
   1bf48:	ldr	x0, [sp, #24]
   1bf4c:	ldr	x0, [x0, #24]
   1bf50:	add	x0, x1, x0
   1bf54:	ldrb	w0, [x0]
   1bf58:	cmp	w0, #0x0
   1bf5c:	b.eq	1bfa0 <__sanitizer_set_report_fd@@Base+0x1df4>  // b.none
   1bf60:	ldr	x0, [sp, #24]
   1bf64:	ldr	x1, [x0, #16]
   1bf68:	ldr	x0, [sp, #24]
   1bf6c:	ldr	x0, [x0, #24]
   1bf70:	add	x0, x1, x0
   1bf74:	ldrb	w0, [x0]
   1bf78:	mov	w1, w0
   1bf7c:	ldr	x0, [sp, #24]
   1bf80:	bl	1bb74 <__sanitizer_set_report_fd@@Base+0x19c8>
   1bf84:	and	w0, w0, #0xff
   1bf88:	eor	w0, w0, #0x1
   1bf8c:	and	w0, w0, #0xff
   1bf90:	cmp	w0, #0x0
   1bf94:	b.eq	1bfa0 <__sanitizer_set_report_fd@@Base+0x1df4>  // b.none
   1bf98:	mov	w0, #0x1                   	// #1
   1bf9c:	b	1bfa4 <__sanitizer_set_report_fd@@Base+0x1df8>
   1bfa0:	mov	w0, #0x0                   	// #0
   1bfa4:	cmp	w0, #0x0
   1bfa8:	b.eq	1bfbc <__sanitizer_set_report_fd@@Base+0x1e10>  // b.none
   1bfac:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1bfb0:	add	x1, x0, #0xe08
   1bfb4:	ldr	x0, [sp, #24]
   1bfb8:	bl	1bb54 <__sanitizer_set_report_fd@@Base+0x19a8>
   1bfbc:	ldr	x0, [sp, #24]
   1bfc0:	ldr	x1, [x0, #16]
   1bfc4:	ldr	x0, [sp, #48]
   1bfc8:	add	x3, x1, x0
   1bfcc:	ldr	x0, [sp, #24]
   1bfd0:	ldr	x1, [x0, #24]
   1bfd4:	ldr	x0, [sp, #48]
   1bfd8:	sub	x0, x1, x0
   1bfdc:	mov	x2, x0
   1bfe0:	mov	x1, x3
   1bfe4:	ldr	x0, [sp, #24]
   1bfe8:	bl	1ba38 <__sanitizer_set_report_fd@@Base+0x188c>
   1bfec:	str	x0, [sp, #72]
   1bff0:	ldr	x2, [sp, #72]
   1bff4:	ldr	x1, [sp, #56]
   1bff8:	ldr	x0, [sp, #24]
   1bffc:	bl	1c1d4 <__sanitizer_set_report_fd@@Base+0x2028>
   1c000:	strb	w0, [sp, #46]
   1c004:	ldrb	w0, [sp, #46]
   1c008:	eor	w0, w0, #0x1
   1c00c:	and	w0, w0, #0xff
   1c010:	cmp	w0, #0x0
   1c014:	b.eq	1c028 <__sanitizer_set_report_fd@@Base+0x1e7c>  // b.none
   1c018:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1c01c:	add	x1, x0, #0xe28
   1c020:	ldr	x0, [sp, #24]
   1c024:	bl	1bb54 <__sanitizer_set_report_fd@@Base+0x19a8>
   1c028:	nop
   1c02c:	ldr	x30, [sp], #80
   1c030:	ret
   1c034:	str	x30, [sp, #-32]!
   1c038:	str	x0, [sp, #24]
   1c03c:	ldr	x0, [sp, #24]
   1c040:	bl	1bbdc <__sanitizer_set_report_fd@@Base+0x1a30>
   1c044:	ldr	x0, [sp, #24]
   1c048:	ldr	x1, [x0, #16]
   1c04c:	ldr	x0, [sp, #24]
   1c050:	ldr	x0, [x0, #24]
   1c054:	add	x0, x1, x0
   1c058:	ldrb	w0, [x0]
   1c05c:	cmp	w0, #0x0
   1c060:	b.eq	1c070 <__sanitizer_set_report_fd@@Base+0x1ec4>  // b.none
   1c064:	ldr	x0, [sp, #24]
   1c068:	bl	1bc38 <__sanitizer_set_report_fd@@Base+0x1a8c>
   1c06c:	b	1c03c <__sanitizer_set_report_fd@@Base+0x1e90>
   1c070:	nop
   1c074:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1c078:	ldr	x0, [x0, #4056]
   1c07c:	ldr	w0, [x0, #36]
   1c080:	cmp	w0, #0x0
   1c084:	b.gt	1c098 <__sanitizer_set_report_fd@@Base+0x1eec>
   1c088:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1c08c:	ldr	x0, [x0, #4056]
   1c090:	mov	w1, #0x1                   	// #1
   1c094:	str	w1, [x0, #36]
   1c098:	nop
   1c09c:	ldr	x30, [sp], #32
   1c0a0:	ret
   1c0a4:	str	x30, [sp, #-48]!
   1c0a8:	str	x0, [sp, #24]
   1c0ac:	str	x1, [sp, #16]
   1c0b0:	ldr	x0, [sp, #16]
   1c0b4:	cmp	x0, #0x0
   1c0b8:	b.eq	1c10c <__sanitizer_set_report_fd@@Base+0x1f60>  // b.none
   1c0bc:	ldr	x0, [sp, #24]
   1c0c0:	ldr	x0, [x0, #16]
   1c0c4:	str	x0, [sp, #40]
   1c0c8:	ldr	x0, [sp, #24]
   1c0cc:	ldr	x0, [x0, #24]
   1c0d0:	str	x0, [sp, #32]
   1c0d4:	ldr	x0, [sp, #24]
   1c0d8:	ldr	x1, [sp, #16]
   1c0dc:	str	x1, [x0, #16]
   1c0e0:	ldr	x0, [sp, #24]
   1c0e4:	str	xzr, [x0, #24]
   1c0e8:	ldr	x0, [sp, #24]
   1c0ec:	bl	1c034 <__sanitizer_set_report_fd@@Base+0x1e88>
   1c0f0:	ldr	x0, [sp, #24]
   1c0f4:	ldr	x1, [sp, #40]
   1c0f8:	str	x1, [x0, #16]
   1c0fc:	ldr	x0, [sp, #24]
   1c100:	ldr	x1, [sp, #32]
   1c104:	str	x1, [x0, #24]
   1c108:	b	1c110 <__sanitizer_set_report_fd@@Base+0x1f64>
   1c10c:	nop
   1c110:	ldr	x30, [sp], #48
   1c114:	ret
   1c118:	str	x30, [sp, #-80]!
   1c11c:	str	x0, [sp, #40]
   1c120:	str	x1, [sp, #32]
   1c124:	strb	w2, [sp, #31]
   1c128:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   1c12c:	mov	x1, x0
   1c130:	mov	x0, #0x8000                	// #32768
   1c134:	bl	93a4 <__asan_backtrace_open@plt+0x2734>
   1c138:	mov	x4, x0
   1c13c:	add	x3, sp, #0x3c
   1c140:	add	x2, sp, #0x30
   1c144:	add	x1, sp, #0x40
   1c148:	add	x0, sp, #0x48
   1c14c:	mov	x5, x3
   1c150:	mov	x3, x2
   1c154:	mov	x2, x1
   1c158:	mov	x1, x0
   1c15c:	ldr	x0, [sp, #32]
   1c160:	bl	19bf0 <__sanitizer_cov_pcs_init@@Base+0x412c>
   1c164:	and	w0, w0, #0xff
   1c168:	eor	w0, w0, #0x1
   1c16c:	and	w0, w0, #0xff
   1c170:	cmp	w0, #0x0
   1c174:	b.eq	1c1ac <__sanitizer_set_report_fd@@Base+0x2000>  // b.none
   1c178:	ldrb	w0, [sp, #31]
   1c17c:	cmp	w0, #0x0
   1c180:	b.eq	1c18c <__sanitizer_set_report_fd@@Base+0x1fe0>  // b.none
   1c184:	mov	w0, #0x1                   	// #1
   1c188:	b	1c1cc <__sanitizer_set_report_fd@@Base+0x2020>
   1c18c:	ldr	w0, [sp, #60]
   1c190:	mov	w2, w0
   1c194:	ldr	x1, [sp, #32]
   1c198:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1c19c:	add	x0, x0, #0xe48
   1c1a0:	bl	259c8 <OnPrint@@Base+0x3a8>
   1c1a4:	mov	w0, #0x0                   	// #0
   1c1a8:	b	1c1cc <__sanitizer_set_report_fd@@Base+0x2020>
   1c1ac:	ldr	x0, [sp, #72]
   1c1b0:	mov	x1, x0
   1c1b4:	ldr	x0, [sp, #40]
   1c1b8:	bl	1c0a4 <__sanitizer_set_report_fd@@Base+0x1ef8>
   1c1bc:	ldr	x0, [sp, #72]
   1c1c0:	ldr	x1, [sp, #64]
   1c1c4:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   1c1c8:	mov	w0, #0x1                   	// #1
   1c1cc:	ldr	x30, [sp], #80
   1c1d0:	ret
   1c1d4:	str	x30, [sp, #-64]!
   1c1d8:	str	x0, [sp, #40]
   1c1dc:	str	x1, [sp, #32]
   1c1e0:	str	x2, [sp, #24]
   1c1e4:	str	wzr, [sp, #60]
   1c1e8:	ldr	x0, [sp, #40]
   1c1ec:	ldr	w0, [x0, #8]
   1c1f0:	ldr	w1, [sp, #60]
   1c1f4:	cmp	w1, w0
   1c1f8:	b.ge	1c2c8 <__sanitizer_set_report_fd@@Base+0x211c>  // b.tcont
   1c1fc:	ldr	x0, [sp, #40]
   1c200:	ldr	x2, [x0]
   1c204:	ldrsw	x1, [sp, #60]
   1c208:	mov	x0, x1
   1c20c:	lsl	x0, x0, #1
   1c210:	add	x0, x0, x1
   1c214:	lsl	x0, x0, #3
   1c218:	add	x0, x2, x0
   1c21c:	ldr	x0, [x0]
   1c220:	mov	x1, x0
   1c224:	ldr	x0, [sp, #32]
   1c228:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   1c22c:	cmp	w0, #0x0
   1c230:	cset	w0, eq  // eq = none
   1c234:	and	w0, w0, #0xff
   1c238:	cmp	w0, #0x0
   1c23c:	b.eq	1c2b8 <__sanitizer_set_report_fd@@Base+0x210c>  // b.none
   1c240:	ldr	x0, [sp, #40]
   1c244:	ldr	x2, [x0]
   1c248:	ldrsw	x1, [sp, #60]
   1c24c:	mov	x0, x1
   1c250:	lsl	x0, x0, #1
   1c254:	add	x0, x0, x1
   1c258:	lsl	x0, x0, #3
   1c25c:	add	x0, x2, x0
   1c260:	ldr	x3, [x0, #16]
   1c264:	ldrsw	x1, [sp, #60]
   1c268:	mov	x0, x1
   1c26c:	lsl	x0, x0, #1
   1c270:	add	x0, x0, x1
   1c274:	lsl	x0, x0, #3
   1c278:	ldr	x0, [sp, #40]
   1c27c:	ldr	x2, [x0]
   1c280:	ldrsw	x1, [sp, #60]
   1c284:	mov	x0, x1
   1c288:	lsl	x0, x0, #1
   1c28c:	add	x0, x0, x1
   1c290:	lsl	x0, x0, #3
   1c294:	add	x0, x2, x0
   1c298:	ldr	x0, [x0, #16]
   1c29c:	ldr	x0, [x0]
   1c2a0:	ldr	x2, [x0]
   1c2a4:	ldr	x1, [sp, #24]
   1c2a8:	mov	x0, x3
   1c2ac:	blr	x2
   1c2b0:	and	w0, w0, #0xff
   1c2b4:	b	1c2dc <__sanitizer_set_report_fd@@Base+0x2130>
   1c2b8:	ldr	w0, [sp, #60]
   1c2bc:	add	w0, w0, #0x1
   1c2c0:	str	w0, [sp, #60]
   1c2c4:	b	1c1e8 <__sanitizer_set_report_fd@@Base+0x203c>
   1c2c8:	ldr	x1, [sp, #32]
   1c2cc:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   1c2d0:	add	x0, x0, #0xce0
   1c2d4:	bl	1c448 <__sanitizer_set_report_fd@@Base+0x229c>
   1c2d8:	mov	w0, #0x1                   	// #1
   1c2dc:	ldr	x30, [sp], #64
   1c2e0:	ret
   1c2e4:	str	x30, [sp, #-64]!
   1c2e8:	str	x0, [sp, #40]
   1c2ec:	str	x1, [sp, #32]
   1c2f0:	str	x2, [sp, #24]
   1c2f4:	str	x3, [sp, #16]
   1c2f8:	ldr	x0, [sp, #40]
   1c2fc:	ldr	w0, [x0, #8]
   1c300:	sxtw	x0, w0
   1c304:	str	x0, [sp, #56]
   1c308:	mov	x0, #0xc8                  	// #200
   1c30c:	str	x0, [sp, #48]
   1c310:	ldr	x1, [sp, #56]
   1c314:	ldr	x0, [sp, #48]
   1c318:	cmp	x1, x0
   1c31c:	cset	w0, cs  // cs = hs, nlast
   1c320:	and	w0, w0, #0xff
   1c324:	and	x0, x0, #0xff
   1c328:	cmp	x0, #0x0
   1c32c:	b.eq	1c350 <__sanitizer_set_report_fd@@Base+0x21a4>  // b.none
   1c330:	ldr	x4, [sp, #48]
   1c334:	ldr	x3, [sp, #56]
   1c338:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1c33c:	add	x2, x0, #0xe78
   1c340:	mov	w1, #0x9e                  	// #158
   1c344:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1c348:	add	x0, x0, #0xd20
   1c34c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1c350:	ldr	x0, [sp, #40]
   1c354:	ldr	x2, [x0]
   1c358:	ldr	x0, [sp, #40]
   1c35c:	ldr	w0, [x0, #8]
   1c360:	sxtw	x1, w0
   1c364:	mov	x0, x1
   1c368:	lsl	x0, x0, #1
   1c36c:	add	x0, x0, x1
   1c370:	lsl	x0, x0, #3
   1c374:	add	x0, x2, x0
   1c378:	ldr	x1, [sp, #32]
   1c37c:	str	x1, [x0]
   1c380:	ldr	x0, [sp, #40]
   1c384:	ldr	x2, [x0]
   1c388:	ldr	x0, [sp, #40]
   1c38c:	ldr	w0, [x0, #8]
   1c390:	sxtw	x1, w0
   1c394:	mov	x0, x1
   1c398:	lsl	x0, x0, #1
   1c39c:	add	x0, x0, x1
   1c3a0:	lsl	x0, x0, #3
   1c3a4:	add	x0, x2, x0
   1c3a8:	ldr	x1, [sp, #16]
   1c3ac:	str	x1, [x0, #8]
   1c3b0:	ldr	x0, [sp, #40]
   1c3b4:	ldr	x2, [x0]
   1c3b8:	ldr	x0, [sp, #40]
   1c3bc:	ldr	w0, [x0, #8]
   1c3c0:	sxtw	x1, w0
   1c3c4:	mov	x0, x1
   1c3c8:	lsl	x0, x0, #1
   1c3cc:	add	x0, x0, x1
   1c3d0:	lsl	x0, x0, #3
   1c3d4:	add	x0, x2, x0
   1c3d8:	ldr	x1, [sp, #24]
   1c3dc:	str	x1, [x0, #16]
   1c3e0:	ldr	x0, [sp, #40]
   1c3e4:	ldr	w0, [x0, #8]
   1c3e8:	add	w1, w0, #0x1
   1c3ec:	ldr	x0, [sp, #40]
   1c3f0:	str	w1, [x0, #8]
   1c3f4:	nop
   1c3f8:	ldr	x30, [sp], #64
   1c3fc:	ret
   1c400:	str	x30, [sp, #-32]!
   1c404:	str	x0, [sp, #24]
   1c408:	ldr	x0, [sp, #24]
   1c40c:	str	wzr, [x0, #8]
   1c410:	ldr	x0, [sp, #24]
   1c414:	str	xzr, [x0, #16]
   1c418:	ldr	x0, [sp, #24]
   1c41c:	str	xzr, [x0, #24]
   1c420:	mov	x1, #0x12c0                	// #4800
   1c424:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   1c428:	add	x0, x0, #0xcd0
   1c42c:	bl	10aa0 <__sancov_default_options@@Base+0x6f4>
   1c430:	mov	x1, x0
   1c434:	ldr	x0, [sp, #24]
   1c438:	str	x1, [x0]
   1c43c:	nop
   1c440:	ldr	x30, [sp], #32
   1c444:	ret
   1c448:	str	x30, [sp, #-48]!
   1c44c:	str	x0, [sp, #24]
   1c450:	str	x1, [sp, #16]
   1c454:	ldr	x0, [sp, #24]
   1c458:	ldr	w0, [x0, #160]
   1c45c:	sxtw	x0, w0
   1c460:	str	x0, [sp, #40]
   1c464:	mov	x0, #0x14                  	// #20
   1c468:	str	x0, [sp, #32]
   1c46c:	ldr	x1, [sp, #40]
   1c470:	ldr	x0, [sp, #32]
   1c474:	cmp	x1, x0
   1c478:	cset	w0, cs  // cs = hs, nlast
   1c47c:	and	w0, w0, #0xff
   1c480:	and	x0, x0, #0xff
   1c484:	cmp	x0, #0x0
   1c488:	b.eq	1c4ac <__sanitizer_set_report_fd@@Base+0x2300>  // b.none
   1c48c:	ldr	x4, [sp, #32]
   1c490:	ldr	x3, [sp, #40]
   1c494:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1c498:	add	x2, x0, #0xcf0
   1c49c:	mov	w1, #0x1e                  	// #30
   1c4a0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1c4a4:	add	x0, x0, #0xd20
   1c4a8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1c4ac:	ldr	x0, [sp, #24]
   1c4b0:	ldr	w0, [x0, #160]
   1c4b4:	add	w2, w0, #0x1
   1c4b8:	ldr	x1, [sp, #24]
   1c4bc:	str	w2, [x1, #160]
   1c4c0:	ldr	x1, [sp, #24]
   1c4c4:	sxtw	x0, w0
   1c4c8:	ldr	x2, [sp, #16]
   1c4cc:	str	x2, [x1, x0, lsl #3]
   1c4d0:	nop
   1c4d4:	ldr	x30, [sp], #48
   1c4d8:	ret
   1c4dc:	str	x30, [sp, #-48]!
   1c4e0:	str	x0, [sp, #24]
   1c4e4:	ldr	x0, [sp, #24]
   1c4e8:	ldr	w0, [x0, #160]
   1c4ec:	cmp	w0, #0x0
   1c4f0:	b.eq	1c55c <__sanitizer_set_report_fd@@Base+0x23b0>  // b.none
   1c4f4:	ldr	x0, [sp, #24]
   1c4f8:	ldr	w0, [x0, #160]
   1c4fc:	mov	w1, w0
   1c500:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1c504:	add	x0, x0, #0xd68
   1c508:	bl	259c8 <OnPrint@@Base+0x3a8>
   1c50c:	str	wzr, [sp, #44]
   1c510:	ldr	x0, [sp, #24]
   1c514:	ldr	w0, [x0, #160]
   1c518:	ldr	w1, [sp, #44]
   1c51c:	cmp	w1, w0
   1c520:	b.ge	1c550 <__sanitizer_set_report_fd@@Base+0x23a4>  // b.tcont
   1c524:	ldr	x0, [sp, #24]
   1c528:	ldrsw	x1, [sp, #44]
   1c52c:	ldr	x0, [x0, x1, lsl #3]
   1c530:	mov	x1, x0
   1c534:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1c538:	add	x0, x0, #0xd98
   1c53c:	bl	259c8 <OnPrint@@Base+0x3a8>
   1c540:	ldr	w0, [sp, #44]
   1c544:	add	w0, w0, #0x1
   1c548:	str	w0, [sp, #44]
   1c54c:	b	1c510 <__sanitizer_set_report_fd@@Base+0x2364>
   1c550:	ldr	x0, [sp, #24]
   1c554:	str	wzr, [x0, #160]
   1c558:	b	1c560 <__sanitizer_set_report_fd@@Base+0x23b4>
   1c55c:	nop
   1c560:	ldr	x30, [sp], #48
   1c564:	ret
   1c568:	str	x30, [sp, #-32]!
   1c56c:	str	x0, [sp, #24]
   1c570:	mov	w2, #0xa                   	// #10
   1c574:	mov	x1, #0x0                   	// #0
   1c578:	ldr	x0, [sp, #24]
   1c57c:	bl	1d110 <__sanitizer_set_report_fd@@Base+0x2f64>
   1c580:	ldr	x30, [sp], #32
   1c584:	ret
   1c588:	sub	sp, sp, #0x30
   1c58c:	str	x0, [sp, #24]
   1c590:	str	w1, [sp, #20]
   1c594:	str	x2, [sp, #8]
   1c598:	ldr	x0, [sp, #24]
   1c59c:	str	x0, [sp, #40]
   1c5a0:	str	xzr, [sp, #32]
   1c5a4:	ldr	x1, [sp, #32]
   1c5a8:	ldr	x0, [sp, #8]
   1c5ac:	cmp	x1, x0
   1c5b0:	b.cs	1c5f0 <__sanitizer_set_report_fd@@Base+0x2444>  // b.hs, b.nlast
   1c5b4:	ldr	x0, [sp, #40]
   1c5b8:	ldrb	w0, [x0]
   1c5bc:	mov	w1, w0
   1c5c0:	ldr	w0, [sp, #20]
   1c5c4:	cmp	w0, w1
   1c5c8:	b.ne	1c5d4 <__sanitizer_set_report_fd@@Base+0x2428>  // b.any
   1c5cc:	ldr	x0, [sp, #40]
   1c5d0:	b	1c5f4 <__sanitizer_set_report_fd@@Base+0x2448>
   1c5d4:	ldr	x0, [sp, #32]
   1c5d8:	add	x0, x0, #0x1
   1c5dc:	str	x0, [sp, #32]
   1c5e0:	ldr	x0, [sp, #40]
   1c5e4:	add	x0, x0, #0x1
   1c5e8:	str	x0, [sp, #40]
   1c5ec:	b	1c5a4 <__sanitizer_set_report_fd@@Base+0x23f8>
   1c5f0:	mov	x0, #0x0                   	// #0
   1c5f4:	add	sp, sp, #0x30
   1c5f8:	ret
   1c5fc:	sub	sp, sp, #0x40
   1c600:	str	x0, [sp, #24]
   1c604:	str	w1, [sp, #20]
   1c608:	str	x2, [sp, #8]
   1c60c:	ldr	x0, [sp, #24]
   1c610:	str	x0, [sp, #56]
   1c614:	str	xzr, [sp, #48]
   1c618:	str	xzr, [sp, #40]
   1c61c:	ldr	x1, [sp, #40]
   1c620:	ldr	x0, [sp, #8]
   1c624:	cmp	x1, x0
   1c628:	b.cs	1c668 <__sanitizer_set_report_fd@@Base+0x24bc>  // b.hs, b.nlast
   1c62c:	ldr	x0, [sp, #56]
   1c630:	ldrb	w0, [x0]
   1c634:	mov	w1, w0
   1c638:	ldr	w0, [sp, #20]
   1c63c:	cmp	w0, w1
   1c640:	b.ne	1c64c <__sanitizer_set_report_fd@@Base+0x24a0>  // b.any
   1c644:	ldr	x0, [sp, #56]
   1c648:	str	x0, [sp, #48]
   1c64c:	ldr	x0, [sp, #40]
   1c650:	add	x0, x0, #0x1
   1c654:	str	x0, [sp, #40]
   1c658:	ldr	x0, [sp, #56]
   1c65c:	add	x0, x0, #0x1
   1c660:	str	x0, [sp, #56]
   1c664:	b	1c61c <__sanitizer_set_report_fd@@Base+0x2470>
   1c668:	ldr	x0, [sp, #48]
   1c66c:	add	sp, sp, #0x40
   1c670:	ret
   1c674:	sub	sp, sp, #0x40
   1c678:	str	x0, [sp, #24]
   1c67c:	str	x1, [sp, #16]
   1c680:	str	x2, [sp, #8]
   1c684:	ldr	x0, [sp, #24]
   1c688:	str	x0, [sp, #56]
   1c68c:	ldr	x0, [sp, #16]
   1c690:	str	x0, [sp, #48]
   1c694:	str	xzr, [sp, #40]
   1c698:	ldr	x1, [sp, #40]
   1c69c:	ldr	x0, [sp, #8]
   1c6a0:	cmp	x1, x0
   1c6a4:	b.cs	1c710 <__sanitizer_set_report_fd@@Base+0x2564>  // b.hs, b.nlast
   1c6a8:	ldr	x0, [sp, #56]
   1c6ac:	ldrb	w1, [x0]
   1c6b0:	ldr	x0, [sp, #48]
   1c6b4:	ldrb	w0, [x0]
   1c6b8:	cmp	w1, w0
   1c6bc:	b.eq	1c6e8 <__sanitizer_set_report_fd@@Base+0x253c>  // b.none
   1c6c0:	ldr	x0, [sp, #56]
   1c6c4:	ldrb	w1, [x0]
   1c6c8:	ldr	x0, [sp, #48]
   1c6cc:	ldrb	w0, [x0]
   1c6d0:	cmp	w1, w0
   1c6d4:	b.cs	1c6e0 <__sanitizer_set_report_fd@@Base+0x2534>  // b.hs, b.nlast
   1c6d8:	mov	w0, #0xffffffff            	// #-1
   1c6dc:	b	1c714 <__sanitizer_set_report_fd@@Base+0x2568>
   1c6e0:	mov	w0, #0x1                   	// #1
   1c6e4:	b	1c714 <__sanitizer_set_report_fd@@Base+0x2568>
   1c6e8:	ldr	x0, [sp, #40]
   1c6ec:	add	x0, x0, #0x1
   1c6f0:	str	x0, [sp, #40]
   1c6f4:	ldr	x0, [sp, #56]
   1c6f8:	add	x0, x0, #0x1
   1c6fc:	str	x0, [sp, #56]
   1c700:	ldr	x0, [sp, #48]
   1c704:	add	x0, x0, #0x1
   1c708:	str	x0, [sp, #48]
   1c70c:	b	1c698 <__sanitizer_set_report_fd@@Base+0x24ec>
   1c710:	mov	w0, #0x0                   	// #0
   1c714:	add	sp, sp, #0x40
   1c718:	ret
   1c71c:	sub	sp, sp, #0x40
   1c720:	str	x0, [sp, #24]
   1c724:	str	x1, [sp, #16]
   1c728:	str	x2, [sp, #8]
   1c72c:	ldr	x0, [sp, #24]
   1c730:	str	x0, [sp, #48]
   1c734:	ldr	x0, [sp, #16]
   1c738:	str	x0, [sp, #40]
   1c73c:	str	xzr, [sp, #56]
   1c740:	ldr	x1, [sp, #56]
   1c744:	ldr	x0, [sp, #8]
   1c748:	cmp	x1, x0
   1c74c:	b.cs	1c780 <__sanitizer_set_report_fd@@Base+0x25d4>  // b.hs, b.nlast
   1c750:	ldr	x1, [sp, #40]
   1c754:	ldr	x0, [sp, #56]
   1c758:	add	x1, x1, x0
   1c75c:	ldr	x2, [sp, #48]
   1c760:	ldr	x0, [sp, #56]
   1c764:	add	x0, x2, x0
   1c768:	ldrb	w1, [x1]
   1c76c:	strb	w1, [x0]
   1c770:	ldr	x0, [sp, #56]
   1c774:	add	x0, x0, #0x1
   1c778:	str	x0, [sp, #56]
   1c77c:	b	1c740 <__sanitizer_set_report_fd@@Base+0x2594>
   1c780:	ldr	x0, [sp, #24]
   1c784:	add	sp, sp, #0x40
   1c788:	ret
   1c78c:	str	x30, [sp, #-96]!
   1c790:	str	x0, [sp, #40]
   1c794:	str	x1, [sp, #32]
   1c798:	str	x2, [sp, #24]
   1c79c:	ldr	x0, [sp, #40]
   1c7a0:	str	x0, [sp, #80]
   1c7a4:	ldr	x0, [sp, #32]
   1c7a8:	str	x0, [sp, #72]
   1c7ac:	ldr	x0, [sp, #24]
   1c7b0:	str	x0, [sp, #64]
   1c7b4:	ldr	x0, [sp, #64]
   1c7b8:	str	x0, [sp, #56]
   1c7bc:	str	xzr, [sp, #48]
   1c7c0:	ldr	x1, [sp, #56]
   1c7c4:	ldr	x0, [sp, #48]
   1c7c8:	cmp	x1, x0
   1c7cc:	cset	w0, cc  // cc = lo, ul, last
   1c7d0:	and	w0, w0, #0xff
   1c7d4:	and	x0, x0, #0xff
   1c7d8:	cmp	x0, #0x0
   1c7dc:	b.eq	1c800 <__sanitizer_set_report_fd@@Base+0x2654>  // b.none
   1c7e0:	ldr	x4, [sp, #48]
   1c7e4:	ldr	x3, [sp, #56]
   1c7e8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1c7ec:	add	x2, x0, #0xf68
   1c7f0:	mov	w1, #0x3c                  	// #60
   1c7f4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1c7f8:	add	x0, x0, #0xf80
   1c7fc:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1c800:	ldr	x1, [sp, #80]
   1c804:	ldr	x0, [sp, #72]
   1c808:	cmp	x1, x0
   1c80c:	b.cs	1c854 <__sanitizer_set_report_fd@@Base+0x26a8>  // b.hs, b.nlast
   1c810:	str	xzr, [sp, #88]
   1c814:	ldr	x1, [sp, #88]
   1c818:	ldr	x0, [sp, #64]
   1c81c:	cmp	x1, x0
   1c820:	b.ge	1c8b8 <__sanitizer_set_report_fd@@Base+0x270c>  // b.tcont
   1c824:	ldr	x0, [sp, #88]
   1c828:	ldr	x1, [sp, #72]
   1c82c:	add	x1, x1, x0
   1c830:	ldr	x0, [sp, #88]
   1c834:	ldr	x2, [sp, #80]
   1c838:	add	x0, x2, x0
   1c83c:	ldrb	w1, [x1]
   1c840:	strb	w1, [x0]
   1c844:	ldr	x0, [sp, #88]
   1c848:	add	x0, x0, #0x1
   1c84c:	str	x0, [sp, #88]
   1c850:	b	1c814 <__sanitizer_set_report_fd@@Base+0x2668>
   1c854:	ldr	x1, [sp, #80]
   1c858:	ldr	x0, [sp, #72]
   1c85c:	cmp	x1, x0
   1c860:	b.ls	1c8b8 <__sanitizer_set_report_fd@@Base+0x270c>  // b.plast
   1c864:	ldr	x0, [sp, #64]
   1c868:	cmp	x0, #0x0
   1c86c:	b.le	1c8b8 <__sanitizer_set_report_fd@@Base+0x270c>
   1c870:	ldr	x0, [sp, #64]
   1c874:	sub	x0, x0, #0x1
   1c878:	str	x0, [sp, #88]
   1c87c:	ldr	x0, [sp, #88]
   1c880:	cmp	x0, #0x0
   1c884:	b.lt	1c8b8 <__sanitizer_set_report_fd@@Base+0x270c>  // b.tstop
   1c888:	ldr	x0, [sp, #88]
   1c88c:	ldr	x1, [sp, #72]
   1c890:	add	x1, x1, x0
   1c894:	ldr	x0, [sp, #88]
   1c898:	ldr	x2, [sp, #80]
   1c89c:	add	x0, x2, x0
   1c8a0:	ldrb	w1, [x1]
   1c8a4:	strb	w1, [x0]
   1c8a8:	ldr	x0, [sp, #88]
   1c8ac:	sub	x0, x0, #0x1
   1c8b0:	str	x0, [sp, #88]
   1c8b4:	b	1c87c <__sanitizer_set_report_fd@@Base+0x26d0>
   1c8b8:	ldr	x0, [sp, #40]
   1c8bc:	ldr	x30, [sp], #96
   1c8c0:	ret
   1c8c4:	sub	sp, sp, #0x50
   1c8c8:	str	x0, [sp, #24]
   1c8cc:	str	w1, [sp, #20]
   1c8d0:	str	x2, [sp, #8]
   1c8d4:	ldr	x0, [sp, #24]
   1c8d8:	and	x0, x0, #0xf
   1c8dc:	cmp	x0, #0x0
   1c8e0:	b.ne	1c998 <__sanitizer_set_report_fd@@Base+0x27ec>  // b.any
   1c8e4:	ldr	x0, [sp, #8]
   1c8e8:	and	x0, x0, #0xf
   1c8ec:	cmp	x0, #0x0
   1c8f0:	b.ne	1c998 <__sanitizer_set_report_fd@@Base+0x27ec>  // b.any
   1c8f4:	ldr	x0, [sp, #24]
   1c8f8:	str	x0, [sp, #72]
   1c8fc:	ldr	x0, [sp, #8]
   1c900:	and	x0, x0, #0xfffffffffffffff8
   1c904:	ldr	x1, [sp, #72]
   1c908:	add	x0, x1, x0
   1c90c:	str	x0, [sp, #48]
   1c910:	ldrsw	x0, [sp, #20]
   1c914:	str	x0, [sp, #40]
   1c918:	ldr	x0, [sp, #40]
   1c91c:	lsl	x0, x0, #8
   1c920:	ldr	x1, [sp, #40]
   1c924:	orr	x0, x1, x0
   1c928:	str	x0, [sp, #40]
   1c92c:	ldr	x0, [sp, #40]
   1c930:	lsl	x0, x0, #16
   1c934:	ldr	x1, [sp, #40]
   1c938:	orr	x0, x1, x0
   1c93c:	str	x0, [sp, #40]
   1c940:	ldr	x0, [sp, #40]
   1c944:	lsl	x0, x0, #32
   1c948:	ldr	x1, [sp, #40]
   1c94c:	orr	x0, x1, x0
   1c950:	str	x0, [sp, #40]
   1c954:	ldr	x1, [sp, #72]
   1c958:	ldr	x0, [sp, #48]
   1c95c:	cmp	x1, x0
   1c960:	b.cs	1c990 <__sanitizer_set_report_fd@@Base+0x27e4>  // b.hs, b.nlast
   1c964:	ldr	x0, [sp, #72]
   1c968:	add	x0, x0, #0x8
   1c96c:	ldr	x1, [sp, #40]
   1c970:	str	x1, [x0]
   1c974:	ldr	x1, [x0]
   1c978:	ldr	x0, [sp, #72]
   1c97c:	str	x1, [x0]
   1c980:	ldr	x0, [sp, #72]
   1c984:	add	x0, x0, #0x10
   1c988:	str	x0, [sp, #72]
   1c98c:	b	1c954 <__sanitizer_set_report_fd@@Base+0x27a8>
   1c990:	ldr	x0, [sp, #24]
   1c994:	b	1c9e4 <__sanitizer_set_report_fd@@Base+0x2838>
   1c998:	ldr	x0, [sp, #24]
   1c99c:	str	x0, [sp, #64]
   1c9a0:	str	xzr, [sp, #56]
   1c9a4:	ldr	x1, [sp, #56]
   1c9a8:	ldr	x0, [sp, #8]
   1c9ac:	cmp	x1, x0
   1c9b0:	b.cs	1c9e0 <__sanitizer_set_report_fd@@Base+0x2834>  // b.hs, b.nlast
   1c9b4:	ldr	w0, [sp, #20]
   1c9b8:	and	w1, w0, #0xff
   1c9bc:	ldr	x0, [sp, #64]
   1c9c0:	strb	w1, [x0]
   1c9c4:	ldr	x0, [sp, #56]
   1c9c8:	add	x0, x0, #0x1
   1c9cc:	str	x0, [sp, #56]
   1c9d0:	ldr	x0, [sp, #64]
   1c9d4:	add	x0, x0, #0x1
   1c9d8:	str	x0, [sp, #64]
   1c9dc:	b	1c9a4 <__sanitizer_set_report_fd@@Base+0x27f8>
   1c9e0:	ldr	x0, [sp, #24]
   1c9e4:	add	sp, sp, #0x50
   1c9e8:	ret
   1c9ec:	str	x30, [sp, #-48]!
   1c9f0:	str	x0, [sp, #24]
   1c9f4:	str	x1, [sp, #16]
   1c9f8:	str	xzr, [sp, #40]
   1c9fc:	ldr	x1, [sp, #24]
   1ca00:	ldr	x0, [sp, #40]
   1ca04:	add	x0, x1, x0
   1ca08:	ldrb	w0, [x0]
   1ca0c:	cmp	w0, #0x0
   1ca10:	b.eq	1ca5c <__sanitizer_set_report_fd@@Base+0x28b0>  // b.none
   1ca14:	ldr	x1, [sp, #24]
   1ca18:	ldr	x0, [sp, #40]
   1ca1c:	add	x0, x1, x0
   1ca20:	ldrb	w0, [x0]
   1ca24:	mov	w1, w0
   1ca28:	ldr	x0, [sp, #16]
   1ca2c:	bl	1cbfc <__sanitizer_set_report_fd@@Base+0x2a50>
   1ca30:	cmp	x0, #0x0
   1ca34:	cset	w0, ne  // ne = any
   1ca38:	and	w0, w0, #0xff
   1ca3c:	cmp	w0, #0x0
   1ca40:	b.eq	1ca4c <__sanitizer_set_report_fd@@Base+0x28a0>  // b.none
   1ca44:	ldr	x0, [sp, #40]
   1ca48:	b	1ca60 <__sanitizer_set_report_fd@@Base+0x28b4>
   1ca4c:	ldr	x0, [sp, #40]
   1ca50:	add	x0, x0, #0x1
   1ca54:	str	x0, [sp, #40]
   1ca58:	b	1c9fc <__sanitizer_set_report_fd@@Base+0x2850>
   1ca5c:	ldr	x0, [sp, #40]
   1ca60:	ldr	x30, [sp], #48
   1ca64:	ret
   1ca68:	str	x30, [sp, #-48]!
   1ca6c:	str	x0, [sp, #24]
   1ca70:	ldr	x0, [sp, #24]
   1ca74:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   1ca78:	str	x0, [sp, #40]
   1ca7c:	ldr	x0, [sp, #40]
   1ca80:	add	x0, x0, #0x1
   1ca84:	mov	x2, #0x0                   	// #0
   1ca88:	mov	x1, #0x0                   	// #0
   1ca8c:	bl	107a8 <__sancov_default_options@@Base+0x3fc>
   1ca90:	str	x0, [sp, #32]
   1ca94:	ldr	x2, [sp, #40]
   1ca98:	ldr	x1, [sp, #24]
   1ca9c:	ldr	x0, [sp, #32]
   1caa0:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   1caa4:	ldr	x1, [sp, #32]
   1caa8:	ldr	x0, [sp, #40]
   1caac:	add	x0, x1, x0
   1cab0:	strb	wzr, [x0]
   1cab4:	ldr	x0, [sp, #32]
   1cab8:	ldr	x30, [sp], #48
   1cabc:	ret
   1cac0:	sub	sp, sp, #0x20
   1cac4:	str	x0, [sp, #8]
   1cac8:	str	x1, [sp]
   1cacc:	ldr	x0, [sp, #8]
   1cad0:	ldrb	w0, [x0]
   1cad4:	str	w0, [sp, #28]
   1cad8:	ldr	x0, [sp]
   1cadc:	ldrb	w0, [x0]
   1cae0:	str	w0, [sp, #24]
   1cae4:	ldr	w1, [sp, #28]
   1cae8:	ldr	w0, [sp, #24]
   1caec:	cmp	w1, w0
   1caf0:	b.eq	1cb14 <__sanitizer_set_report_fd@@Base+0x2968>  // b.none
   1caf4:	ldr	w1, [sp, #28]
   1caf8:	ldr	w0, [sp, #24]
   1cafc:	cmp	w1, w0
   1cb00:	b.cs	1cb0c <__sanitizer_set_report_fd@@Base+0x2960>  // b.hs, b.nlast
   1cb04:	mov	w0, #0xffffffff            	// #-1
   1cb08:	b	1cb44 <__sanitizer_set_report_fd@@Base+0x2998>
   1cb0c:	mov	w0, #0x1                   	// #1
   1cb10:	b	1cb44 <__sanitizer_set_report_fd@@Base+0x2998>
   1cb14:	ldr	w0, [sp, #28]
   1cb18:	cmp	w0, #0x0
   1cb1c:	b.eq	1cb3c <__sanitizer_set_report_fd@@Base+0x2990>  // b.none
   1cb20:	ldr	x0, [sp, #8]
   1cb24:	add	x0, x0, #0x1
   1cb28:	str	x0, [sp, #8]
   1cb2c:	ldr	x0, [sp]
   1cb30:	add	x0, x0, #0x1
   1cb34:	str	x0, [sp]
   1cb38:	b	1cacc <__sanitizer_set_report_fd@@Base+0x2920>
   1cb3c:	nop
   1cb40:	mov	w0, #0x0                   	// #0
   1cb44:	add	sp, sp, #0x20
   1cb48:	ret
   1cb4c:	sub	sp, sp, #0x30
   1cb50:	str	x0, [sp, #24]
   1cb54:	str	x1, [sp, #16]
   1cb58:	str	x2, [sp, #8]
   1cb5c:	str	xzr, [sp, #40]
   1cb60:	ldr	x1, [sp, #40]
   1cb64:	ldr	x0, [sp, #8]
   1cb68:	cmp	x1, x0
   1cb6c:	b.cs	1cbf0 <__sanitizer_set_report_fd@@Base+0x2a44>  // b.hs, b.nlast
   1cb70:	ldr	x0, [sp, #24]
   1cb74:	ldrb	w0, [x0]
   1cb78:	str	w0, [sp, #36]
   1cb7c:	ldr	x0, [sp, #16]
   1cb80:	ldrb	w0, [x0]
   1cb84:	str	w0, [sp, #32]
   1cb88:	ldr	w1, [sp, #36]
   1cb8c:	ldr	w0, [sp, #32]
   1cb90:	cmp	w1, w0
   1cb94:	b.eq	1cbb8 <__sanitizer_set_report_fd@@Base+0x2a0c>  // b.none
   1cb98:	ldr	w1, [sp, #36]
   1cb9c:	ldr	w0, [sp, #32]
   1cba0:	cmp	w1, w0
   1cba4:	b.cs	1cbb0 <__sanitizer_set_report_fd@@Base+0x2a04>  // b.hs, b.nlast
   1cba8:	mov	w0, #0xffffffff            	// #-1
   1cbac:	b	1cbf4 <__sanitizer_set_report_fd@@Base+0x2a48>
   1cbb0:	mov	w0, #0x1                   	// #1
   1cbb4:	b	1cbf4 <__sanitizer_set_report_fd@@Base+0x2a48>
   1cbb8:	ldr	w0, [sp, #36]
   1cbbc:	cmp	w0, #0x0
   1cbc0:	b.eq	1cbec <__sanitizer_set_report_fd@@Base+0x2a40>  // b.none
   1cbc4:	ldr	x0, [sp, #24]
   1cbc8:	add	x0, x0, #0x1
   1cbcc:	str	x0, [sp, #24]
   1cbd0:	ldr	x0, [sp, #16]
   1cbd4:	add	x0, x0, #0x1
   1cbd8:	str	x0, [sp, #16]
   1cbdc:	ldr	x0, [sp, #40]
   1cbe0:	add	x0, x0, #0x1
   1cbe4:	str	x0, [sp, #40]
   1cbe8:	b	1cb60 <__sanitizer_set_report_fd@@Base+0x29b4>
   1cbec:	nop
   1cbf0:	mov	w0, #0x0                   	// #0
   1cbf4:	add	sp, sp, #0x30
   1cbf8:	ret
   1cbfc:	sub	sp, sp, #0x10
   1cc00:	str	x0, [sp, #8]
   1cc04:	str	w1, [sp, #4]
   1cc08:	ldr	x0, [sp, #8]
   1cc0c:	ldrb	w1, [x0]
   1cc10:	ldr	w0, [sp, #4]
   1cc14:	and	w0, w0, #0xff
   1cc18:	cmp	w1, w0
   1cc1c:	b.ne	1cc28 <__sanitizer_set_report_fd@@Base+0x2a7c>  // b.any
   1cc20:	ldr	x0, [sp, #8]
   1cc24:	b	1cc50 <__sanitizer_set_report_fd@@Base+0x2aa4>
   1cc28:	ldr	x0, [sp, #8]
   1cc2c:	ldrb	w0, [x0]
   1cc30:	cmp	w0, #0x0
   1cc34:	b.ne	1cc40 <__sanitizer_set_report_fd@@Base+0x2a94>  // b.any
   1cc38:	mov	x0, #0x0                   	// #0
   1cc3c:	b	1cc50 <__sanitizer_set_report_fd@@Base+0x2aa4>
   1cc40:	ldr	x0, [sp, #8]
   1cc44:	add	x0, x0, #0x1
   1cc48:	str	x0, [sp, #8]
   1cc4c:	b	1cc08 <__sanitizer_set_report_fd@@Base+0x2a5c>
   1cc50:	add	sp, sp, #0x10
   1cc54:	ret
   1cc58:	str	x30, [sp, #-48]!
   1cc5c:	str	x0, [sp, #24]
   1cc60:	str	w1, [sp, #20]
   1cc64:	ldr	w1, [sp, #20]
   1cc68:	ldr	x0, [sp, #24]
   1cc6c:	bl	1cbfc <__sanitizer_set_report_fd@@Base+0x2a50>
   1cc70:	str	x0, [sp, #40]
   1cc74:	ldr	x0, [sp, #40]
   1cc78:	cmp	x0, #0x0
   1cc7c:	b.ne	1cc98 <__sanitizer_set_report_fd@@Base+0x2aec>  // b.any
   1cc80:	ldr	x0, [sp, #24]
   1cc84:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   1cc88:	mov	x1, x0
   1cc8c:	ldr	x0, [sp, #24]
   1cc90:	add	x0, x0, x1
   1cc94:	str	x0, [sp, #40]
   1cc98:	ldr	x0, [sp, #40]
   1cc9c:	ldr	x30, [sp], #48
   1cca0:	ret
   1cca4:	sub	sp, sp, #0x20
   1cca8:	str	x0, [sp, #8]
   1ccac:	str	w1, [sp, #4]
   1ccb0:	str	xzr, [sp, #24]
   1ccb4:	str	xzr, [sp, #16]
   1ccb8:	ldr	x1, [sp, #8]
   1ccbc:	ldr	x0, [sp, #16]
   1ccc0:	add	x0, x1, x0
   1ccc4:	ldrb	w0, [x0]
   1ccc8:	cmp	w0, #0x0
   1cccc:	b.eq	1cd10 <__sanitizer_set_report_fd@@Base+0x2b64>  // b.none
   1ccd0:	ldr	x1, [sp, #8]
   1ccd4:	ldr	x0, [sp, #16]
   1ccd8:	add	x0, x1, x0
   1ccdc:	ldrb	w0, [x0]
   1cce0:	mov	w1, w0
   1cce4:	ldr	w0, [sp, #4]
   1cce8:	cmp	w0, w1
   1ccec:	b.ne	1cd00 <__sanitizer_set_report_fd@@Base+0x2b54>  // b.any
   1ccf0:	ldr	x1, [sp, #8]
   1ccf4:	ldr	x0, [sp, #16]
   1ccf8:	add	x0, x1, x0
   1ccfc:	str	x0, [sp, #24]
   1cd00:	ldr	x0, [sp, #16]
   1cd04:	add	x0, x0, #0x1
   1cd08:	str	x0, [sp, #16]
   1cd0c:	b	1ccb8 <__sanitizer_set_report_fd@@Base+0x2b0c>
   1cd10:	ldr	x0, [sp, #24]
   1cd14:	add	sp, sp, #0x20
   1cd18:	ret
   1cd1c:	sub	sp, sp, #0x20
   1cd20:	str	x0, [sp, #8]
   1cd24:	str	xzr, [sp, #24]
   1cd28:	ldr	x1, [sp, #8]
   1cd2c:	ldr	x0, [sp, #24]
   1cd30:	add	x0, x1, x0
   1cd34:	ldrb	w0, [x0]
   1cd38:	cmp	w0, #0x0
   1cd3c:	b.eq	1cd50 <__sanitizer_set_report_fd@@Base+0x2ba4>  // b.none
   1cd40:	ldr	x0, [sp, #24]
   1cd44:	add	x0, x0, #0x1
   1cd48:	str	x0, [sp, #24]
   1cd4c:	b	1cd28 <__sanitizer_set_report_fd@@Base+0x2b7c>
   1cd50:	ldr	x0, [sp, #24]
   1cd54:	add	sp, sp, #0x20
   1cd58:	ret
   1cd5c:	str	x30, [sp, #-64]!
   1cd60:	str	x0, [sp, #40]
   1cd64:	str	x1, [sp, #32]
   1cd68:	str	x2, [sp, #24]
   1cd6c:	ldr	x0, [sp, #32]
   1cd70:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   1cd74:	str	x0, [sp, #56]
   1cd78:	ldr	x1, [sp, #24]
   1cd7c:	ldr	x0, [sp, #40]
   1cd80:	bl	1d00c <__sanitizer_set_report_fd@@Base+0x2e60>
   1cd84:	str	x0, [sp, #48]
   1cd88:	ldr	x1, [sp, #48]
   1cd8c:	ldr	x0, [sp, #24]
   1cd90:	cmp	x1, x0
   1cd94:	b.ne	1cda8 <__sanitizer_set_report_fd@@Base+0x2bfc>  // b.any
   1cd98:	ldr	x1, [sp, #24]
   1cd9c:	ldr	x0, [sp, #56]
   1cda0:	add	x0, x1, x0
   1cda4:	b	1ce34 <__sanitizer_set_report_fd@@Base+0x2c88>
   1cda8:	ldr	x1, [sp, #24]
   1cdac:	ldr	x0, [sp, #48]
   1cdb0:	sub	x0, x1, x0
   1cdb4:	ldr	x1, [sp, #56]
   1cdb8:	cmp	x1, x0
   1cdbc:	b.cs	1cde8 <__sanitizer_set_report_fd@@Base+0x2c3c>  // b.hs, b.nlast
   1cdc0:	ldr	x1, [sp, #40]
   1cdc4:	ldr	x0, [sp, #48]
   1cdc8:	add	x3, x1, x0
   1cdcc:	ldr	x0, [sp, #56]
   1cdd0:	add	x0, x0, #0x1
   1cdd4:	mov	x2, x0
   1cdd8:	ldr	x1, [sp, #32]
   1cddc:	mov	x0, x3
   1cde0:	bl	1c78c <__sanitizer_set_report_fd@@Base+0x25e0>
   1cde4:	b	1ce28 <__sanitizer_set_report_fd@@Base+0x2c7c>
   1cde8:	ldr	x1, [sp, #40]
   1cdec:	ldr	x0, [sp, #48]
   1cdf0:	add	x3, x1, x0
   1cdf4:	ldr	x1, [sp, #24]
   1cdf8:	ldr	x0, [sp, #48]
   1cdfc:	sub	x0, x1, x0
   1ce00:	sub	x0, x0, #0x1
   1ce04:	mov	x2, x0
   1ce08:	ldr	x1, [sp, #32]
   1ce0c:	mov	x0, x3
   1ce10:	bl	1c78c <__sanitizer_set_report_fd@@Base+0x25e0>
   1ce14:	ldr	x0, [sp, #24]
   1ce18:	sub	x0, x0, #0x1
   1ce1c:	ldr	x1, [sp, #40]
   1ce20:	add	x0, x1, x0
   1ce24:	strb	wzr, [x0]
   1ce28:	ldr	x1, [sp, #48]
   1ce2c:	ldr	x0, [sp, #56]
   1ce30:	add	x0, x1, x0
   1ce34:	ldr	x30, [sp], #64
   1ce38:	ret
   1ce3c:	str	x30, [sp, #-64]!
   1ce40:	str	x0, [sp, #40]
   1ce44:	str	x1, [sp, #32]
   1ce48:	str	x2, [sp, #24]
   1ce4c:	ldr	x0, [sp, #40]
   1ce50:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   1ce54:	str	x0, [sp, #48]
   1ce58:	str	xzr, [sp, #56]
   1ce5c:	ldr	x1, [sp, #56]
   1ce60:	ldr	x0, [sp, #24]
   1ce64:	cmp	x1, x0
   1ce68:	b.cs	1cebc <__sanitizer_set_report_fd@@Base+0x2d10>  // b.hs, b.nlast
   1ce6c:	ldr	x1, [sp, #32]
   1ce70:	ldr	x0, [sp, #56]
   1ce74:	add	x0, x1, x0
   1ce78:	ldrb	w0, [x0]
   1ce7c:	cmp	w0, #0x0
   1ce80:	b.eq	1cebc <__sanitizer_set_report_fd@@Base+0x2d10>  // b.none
   1ce84:	ldr	x1, [sp, #32]
   1ce88:	ldr	x0, [sp, #56]
   1ce8c:	add	x1, x1, x0
   1ce90:	ldr	x2, [sp, #48]
   1ce94:	ldr	x0, [sp, #56]
   1ce98:	add	x0, x2, x0
   1ce9c:	ldr	x2, [sp, #40]
   1cea0:	add	x0, x2, x0
   1cea4:	ldrb	w1, [x1]
   1cea8:	strb	w1, [x0]
   1ceac:	ldr	x0, [sp, #56]
   1ceb0:	add	x0, x0, #0x1
   1ceb4:	str	x0, [sp, #56]
   1ceb8:	b	1ce5c <__sanitizer_set_report_fd@@Base+0x2cb0>
   1cebc:	ldr	x1, [sp, #48]
   1cec0:	ldr	x0, [sp, #56]
   1cec4:	add	x0, x1, x0
   1cec8:	ldr	x1, [sp, #40]
   1cecc:	add	x0, x1, x0
   1ced0:	strb	wzr, [x0]
   1ced4:	ldr	x0, [sp, #40]
   1ced8:	ldr	x30, [sp], #64
   1cedc:	ret
   1cee0:	str	x30, [sp, #-64]!
   1cee4:	str	x0, [sp, #40]
   1cee8:	str	x1, [sp, #32]
   1ceec:	str	x2, [sp, #24]
   1cef0:	ldr	x0, [sp, #32]
   1cef4:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   1cef8:	str	x0, [sp, #56]
   1cefc:	ldr	x1, [sp, #56]
   1cf00:	ldr	x0, [sp, #24]
   1cf04:	cmp	x1, x0
   1cf08:	b.cs	1cf28 <__sanitizer_set_report_fd@@Base+0x2d7c>  // b.hs, b.nlast
   1cf0c:	ldr	x0, [sp, #56]
   1cf10:	add	x0, x0, #0x1
   1cf14:	mov	x2, x0
   1cf18:	ldr	x1, [sp, #32]
   1cf1c:	ldr	x0, [sp, #40]
   1cf20:	bl	1c78c <__sanitizer_set_report_fd@@Base+0x25e0>
   1cf24:	b	1cf60 <__sanitizer_set_report_fd@@Base+0x2db4>
   1cf28:	ldr	x0, [sp, #24]
   1cf2c:	cmp	x0, #0x0
   1cf30:	b.eq	1cf60 <__sanitizer_set_report_fd@@Base+0x2db4>  // b.none
   1cf34:	ldr	x0, [sp, #24]
   1cf38:	sub	x0, x0, #0x1
   1cf3c:	mov	x2, x0
   1cf40:	ldr	x1, [sp, #32]
   1cf44:	ldr	x0, [sp, #40]
   1cf48:	bl	1c78c <__sanitizer_set_report_fd@@Base+0x25e0>
   1cf4c:	ldr	x0, [sp, #24]
   1cf50:	sub	x0, x0, #0x1
   1cf54:	ldr	x1, [sp, #40]
   1cf58:	add	x0, x1, x0
   1cf5c:	strb	wzr, [x0]
   1cf60:	ldr	x0, [sp, #56]
   1cf64:	ldr	x30, [sp], #64
   1cf68:	ret
   1cf6c:	str	x30, [sp, #-64]!
   1cf70:	str	x0, [sp, #40]
   1cf74:	str	x1, [sp, #32]
   1cf78:	str	x2, [sp, #24]
   1cf7c:	str	xzr, [sp, #56]
   1cf80:	ldr	x1, [sp, #56]
   1cf84:	ldr	x0, [sp, #24]
   1cf88:	cmp	x1, x0
   1cf8c:	b.cs	1cfd8 <__sanitizer_set_report_fd@@Base+0x2e2c>  // b.hs, b.nlast
   1cf90:	ldr	x1, [sp, #32]
   1cf94:	ldr	x0, [sp, #56]
   1cf98:	add	x0, x1, x0
   1cf9c:	ldrb	w0, [x0]
   1cfa0:	cmp	w0, #0x0
   1cfa4:	b.eq	1cfd8 <__sanitizer_set_report_fd@@Base+0x2e2c>  // b.none
   1cfa8:	ldr	x1, [sp, #32]
   1cfac:	ldr	x0, [sp, #56]
   1cfb0:	add	x1, x1, x0
   1cfb4:	ldr	x2, [sp, #40]
   1cfb8:	ldr	x0, [sp, #56]
   1cfbc:	add	x0, x2, x0
   1cfc0:	ldrb	w1, [x1]
   1cfc4:	strb	w1, [x0]
   1cfc8:	ldr	x0, [sp, #56]
   1cfcc:	add	x0, x0, #0x1
   1cfd0:	str	x0, [sp, #56]
   1cfd4:	b	1cf80 <__sanitizer_set_report_fd@@Base+0x2dd4>
   1cfd8:	ldr	x1, [sp, #40]
   1cfdc:	ldr	x0, [sp, #56]
   1cfe0:	add	x3, x1, x0
   1cfe4:	ldr	x1, [sp, #24]
   1cfe8:	ldr	x0, [sp, #56]
   1cfec:	sub	x0, x1, x0
   1cff0:	mov	x2, x0
   1cff4:	mov	w1, #0x0                   	// #0
   1cff8:	mov	x0, x3
   1cffc:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   1d000:	ldr	x0, [sp, #40]
   1d004:	ldr	x30, [sp], #64
   1d008:	ret
   1d00c:	sub	sp, sp, #0x20
   1d010:	str	x0, [sp, #8]
   1d014:	str	x1, [sp]
   1d018:	str	xzr, [sp, #24]
   1d01c:	ldr	x1, [sp, #24]
   1d020:	ldr	x0, [sp]
   1d024:	cmp	x1, x0
   1d028:	b.cs	1d054 <__sanitizer_set_report_fd@@Base+0x2ea8>  // b.hs, b.nlast
   1d02c:	ldr	x1, [sp, #8]
   1d030:	ldr	x0, [sp, #24]
   1d034:	add	x0, x1, x0
   1d038:	ldrb	w0, [x0]
   1d03c:	cmp	w0, #0x0
   1d040:	b.eq	1d054 <__sanitizer_set_report_fd@@Base+0x2ea8>  // b.none
   1d044:	ldr	x0, [sp, #24]
   1d048:	add	x0, x0, #0x1
   1d04c:	str	x0, [sp, #24]
   1d050:	b	1d01c <__sanitizer_set_report_fd@@Base+0x2e70>
   1d054:	ldr	x0, [sp, #24]
   1d058:	add	sp, sp, #0x20
   1d05c:	ret
   1d060:	str	x30, [sp, #-64]!
   1d064:	str	x0, [sp, #24]
   1d068:	str	x1, [sp, #16]
   1d06c:	ldr	x0, [sp, #24]
   1d070:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   1d074:	str	x0, [sp, #48]
   1d078:	ldr	x0, [sp, #16]
   1d07c:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   1d080:	str	x0, [sp, #40]
   1d084:	ldr	x1, [sp, #48]
   1d088:	ldr	x0, [sp, #40]
   1d08c:	cmp	x1, x0
   1d090:	b.cs	1d09c <__sanitizer_set_report_fd@@Base+0x2ef0>  // b.hs, b.nlast
   1d094:	mov	x0, #0x0                   	// #0
   1d098:	b	1d108 <__sanitizer_set_report_fd@@Base+0x2f5c>
   1d09c:	str	xzr, [sp, #56]
   1d0a0:	ldr	x1, [sp, #48]
   1d0a4:	ldr	x0, [sp, #40]
   1d0a8:	sub	x0, x1, x0
   1d0ac:	ldr	x1, [sp, #56]
   1d0b0:	cmp	x1, x0
   1d0b4:	b.hi	1d104 <__sanitizer_set_report_fd@@Base+0x2f58>  // b.pmore
   1d0b8:	ldr	x1, [sp, #24]
   1d0bc:	ldr	x0, [sp, #56]
   1d0c0:	add	x0, x1, x0
   1d0c4:	ldr	x2, [sp, #40]
   1d0c8:	ldr	x1, [sp, #16]
   1d0cc:	bl	1c674 <__sanitizer_set_report_fd@@Base+0x24c8>
   1d0d0:	cmp	w0, #0x0
   1d0d4:	cset	w0, eq  // eq = none
   1d0d8:	and	w0, w0, #0xff
   1d0dc:	cmp	w0, #0x0
   1d0e0:	b.eq	1d0f4 <__sanitizer_set_report_fd@@Base+0x2f48>  // b.none
   1d0e4:	ldr	x1, [sp, #24]
   1d0e8:	ldr	x0, [sp, #56]
   1d0ec:	add	x0, x1, x0
   1d0f0:	b	1d108 <__sanitizer_set_report_fd@@Base+0x2f5c>
   1d0f4:	ldr	x0, [sp, #56]
   1d0f8:	add	x0, x0, #0x1
   1d0fc:	str	x0, [sp, #56]
   1d100:	b	1d0a0 <__sanitizer_set_report_fd@@Base+0x2ef4>
   1d104:	mov	x0, #0x0                   	// #0
   1d108:	ldr	x30, [sp], #64
   1d10c:	ret
   1d110:	str	x30, [sp, #-112]!
   1d114:	str	x0, [sp, #40]
   1d118:	str	x1, [sp, #32]
   1d11c:	str	w2, [sp, #28]
   1d120:	ldrsw	x0, [sp, #28]
   1d124:	str	x0, [sp, #80]
   1d128:	mov	x0, #0xa                   	// #10
   1d12c:	str	x0, [sp, #72]
   1d130:	ldr	x1, [sp, #80]
   1d134:	ldr	x0, [sp, #72]
   1d138:	cmp	x1, x0
   1d13c:	cset	w0, ne  // ne = any
   1d140:	and	w0, w0, #0xff
   1d144:	and	x0, x0, #0xff
   1d148:	cmp	x0, #0x0
   1d14c:	b.eq	1d170 <__sanitizer_set_report_fd@@Base+0x2fc4>  // b.none
   1d150:	ldr	x4, [sp, #72]
   1d154:	ldr	x3, [sp, #80]
   1d158:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1d15c:	add	x2, x0, #0xfc0
   1d160:	mov	w1, #0xe5                  	// #229
   1d164:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1d168:	add	x0, x0, #0xf80
   1d16c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1d170:	ldr	x0, [sp, #40]
   1d174:	ldrb	w0, [x0]
   1d178:	bl	1d4ac <__sanitizer_set_report_fd@@Base+0x3300>
   1d17c:	and	w0, w0, #0xff
   1d180:	cmp	w0, #0x0
   1d184:	b.eq	1d198 <__sanitizer_set_report_fd@@Base+0x2fec>  // b.none
   1d188:	ldr	x0, [sp, #40]
   1d18c:	add	x0, x0, #0x1
   1d190:	str	x0, [sp, #40]
   1d194:	b	1d170 <__sanitizer_set_report_fd@@Base+0x2fc4>
   1d198:	mov	w0, #0x1                   	// #1
   1d19c:	str	w0, [sp, #108]
   1d1a0:	str	xzr, [sp, #96]
   1d1a4:	strb	wzr, [sp, #95]
   1d1a8:	ldr	x0, [sp, #40]
   1d1ac:	str	x0, [sp, #64]
   1d1b0:	ldr	x0, [sp, #40]
   1d1b4:	ldrb	w0, [x0]
   1d1b8:	cmp	w0, #0x2b
   1d1bc:	b.ne	1d1d8 <__sanitizer_set_report_fd@@Base+0x302c>  // b.any
   1d1c0:	mov	w0, #0x1                   	// #1
   1d1c4:	str	w0, [sp, #108]
   1d1c8:	ldr	x0, [sp, #40]
   1d1cc:	add	x0, x0, #0x1
   1d1d0:	str	x0, [sp, #40]
   1d1d4:	b	1d1fc <__sanitizer_set_report_fd@@Base+0x3050>
   1d1d8:	ldr	x0, [sp, #40]
   1d1dc:	ldrb	w0, [x0]
   1d1e0:	cmp	w0, #0x2d
   1d1e4:	b.ne	1d1fc <__sanitizer_set_report_fd@@Base+0x3050>  // b.any
   1d1e8:	mov	w0, #0xffffffff            	// #-1
   1d1ec:	str	w0, [sp, #108]
   1d1f0:	ldr	x0, [sp, #40]
   1d1f4:	add	x0, x0, #0x1
   1d1f8:	str	x0, [sp, #40]
   1d1fc:	ldr	x0, [sp, #40]
   1d200:	ldrb	w0, [x0]
   1d204:	bl	1d510 <__sanitizer_set_report_fd@@Base+0x3364>
   1d208:	and	w0, w0, #0xff
   1d20c:	cmp	w0, #0x0
   1d210:	b.eq	1d29c <__sanitizer_set_report_fd@@Base+0x30f0>  // b.none
   1d214:	ldr	x1, [sp, #96]
   1d218:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   1d21c:	movk	x0, #0x1999, lsl #48
   1d220:	cmp	x1, x0
   1d224:	b.hi	1d240 <__sanitizer_set_report_fd@@Base+0x3094>  // b.pmore
   1d228:	ldr	x1, [sp, #96]
   1d22c:	mov	x0, x1
   1d230:	lsl	x0, x0, #2
   1d234:	add	x0, x0, x1
   1d238:	lsl	x0, x0, #1
   1d23c:	b	1d244 <__sanitizer_set_report_fd@@Base+0x3098>
   1d240:	mov	x0, #0xffffffffffffffff    	// #-1
   1d244:	str	x0, [sp, #96]
   1d248:	ldr	x0, [sp, #40]
   1d24c:	ldrb	w0, [x0]
   1d250:	sub	w0, w0, #0x30
   1d254:	str	w0, [sp, #60]
   1d258:	ldrsw	x0, [sp, #60]
   1d25c:	mvn	x0, x0
   1d260:	ldr	x1, [sp, #96]
   1d264:	cmp	x1, x0
   1d268:	b.hi	1d27c <__sanitizer_set_report_fd@@Base+0x30d0>  // b.pmore
   1d26c:	ldrsw	x1, [sp, #60]
   1d270:	ldr	x0, [sp, #96]
   1d274:	add	x0, x1, x0
   1d278:	b	1d280 <__sanitizer_set_report_fd@@Base+0x30d4>
   1d27c:	mov	x0, #0xffffffffffffffff    	// #-1
   1d280:	str	x0, [sp, #96]
   1d284:	mov	w0, #0x1                   	// #1
   1d288:	strb	w0, [sp, #95]
   1d28c:	ldr	x0, [sp, #40]
   1d290:	add	x0, x0, #0x1
   1d294:	str	x0, [sp, #40]
   1d298:	b	1d1fc <__sanitizer_set_report_fd@@Base+0x3050>
   1d29c:	ldr	x0, [sp, #32]
   1d2a0:	cmp	x0, #0x0
   1d2a4:	b.eq	1d2c8 <__sanitizer_set_report_fd@@Base+0x311c>  // b.none
   1d2a8:	ldrb	w0, [sp, #95]
   1d2ac:	cmp	w0, #0x0
   1d2b0:	b.eq	1d2bc <__sanitizer_set_report_fd@@Base+0x3110>  // b.none
   1d2b4:	ldr	x0, [sp, #40]
   1d2b8:	b	1d2c0 <__sanitizer_set_report_fd@@Base+0x3114>
   1d2bc:	ldr	x0, [sp, #64]
   1d2c0:	ldr	x1, [sp, #32]
   1d2c4:	str	x0, [x1]
   1d2c8:	ldr	w0, [sp, #108]
   1d2cc:	cmp	w0, #0x0
   1d2d0:	b.le	1d2e4 <__sanitizer_set_report_fd@@Base+0x3138>
   1d2d4:	ldr	x1, [sp, #96]
   1d2d8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   1d2dc:	bl	1d544 <__sanitizer_set_report_fd@@Base+0x3398>
   1d2e0:	b	1d304 <__sanitizer_set_report_fd@@Base+0x3158>
   1d2e4:	ldr	x0, [sp, #96]
   1d2e8:	cmp	x0, #0x0
   1d2ec:	b.lt	1d2fc <__sanitizer_set_report_fd@@Base+0x3150>  // b.tstop
   1d2f0:	ldr	x0, [sp, #96]
   1d2f4:	neg	x0, x0
   1d2f8:	b	1d300 <__sanitizer_set_report_fd@@Base+0x3154>
   1d2fc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1d300:	nop
   1d304:	ldr	x30, [sp], #112
   1d308:	ret
   1d30c:	str	x30, [sp, #-96]!
   1d310:	str	x0, [sp, #24]
   1d314:	str	x1, [sp, #16]
   1d318:	ldr	x0, [sp, #16]
   1d31c:	str	x0, [sp, #56]
   1d320:	mov	x0, #0x10000000000         	// #1099511627776
   1d324:	str	x0, [sp, #48]
   1d328:	ldr	x1, [sp, #56]
   1d32c:	ldr	x0, [sp, #48]
   1d330:	cmp	x1, x0
   1d334:	cset	w0, hi  // hi = pmore
   1d338:	and	w0, w0, #0xff
   1d33c:	and	x0, x0, #0xff
   1d340:	cmp	x0, #0x0
   1d344:	b.eq	1d368 <__sanitizer_set_report_fd@@Base+0x31bc>  // b.none
   1d348:	ldr	x4, [sp, #48]
   1d34c:	ldr	x3, [sp, #56]
   1d350:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1d354:	add	x2, x0, #0xfd8
   1d358:	mov	w1, #0x104                 	// #260
   1d35c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x5970>
   1d360:	add	x0, x0, #0xf80
   1d364:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1d368:	ldr	x1, [sp, #24]
   1d36c:	ldr	x0, [sp, #16]
   1d370:	add	x0, x1, x0
   1d374:	str	x0, [sp, #40]
   1d378:	ldr	x0, [sp, #24]
   1d37c:	mov	x1, #0x8                   	// #8
   1d380:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   1d384:	str	x0, [sp, #88]
   1d388:	ldr	x0, [sp, #40]
   1d38c:	mov	x1, #0x8                   	// #8
   1d390:	bl	1d488 <__sanitizer_set_report_fd@@Base+0x32dc>
   1d394:	str	x0, [sp, #32]
   1d398:	str	xzr, [sp, #80]
   1d39c:	ldr	x0, [sp, #24]
   1d3a0:	str	x0, [sp, #72]
   1d3a4:	ldr	x1, [sp, #72]
   1d3a8:	ldr	x0, [sp, #88]
   1d3ac:	cmp	x1, x0
   1d3b0:	b.cs	1d3ec <__sanitizer_set_report_fd@@Base+0x3240>  // b.hs, b.nlast
   1d3b4:	ldr	x1, [sp, #72]
   1d3b8:	ldr	x0, [sp, #40]
   1d3bc:	cmp	x1, x0
   1d3c0:	b.cs	1d3ec <__sanitizer_set_report_fd@@Base+0x3240>  // b.hs, b.nlast
   1d3c4:	ldr	x0, [sp, #72]
   1d3c8:	ldrb	w0, [x0]
   1d3cc:	and	x0, x0, #0xff
   1d3d0:	ldr	x1, [sp, #80]
   1d3d4:	orr	x0, x1, x0
   1d3d8:	str	x0, [sp, #80]
   1d3dc:	ldr	x0, [sp, #72]
   1d3e0:	add	x0, x0, #0x1
   1d3e4:	str	x0, [sp, #72]
   1d3e8:	b	1d3a4 <__sanitizer_set_report_fd@@Base+0x31f8>
   1d3ec:	ldr	x1, [sp, #88]
   1d3f0:	ldr	x0, [sp, #32]
   1d3f4:	cmp	x1, x0
   1d3f8:	b.cs	1d420 <__sanitizer_set_report_fd@@Base+0x3274>  // b.hs, b.nlast
   1d3fc:	ldr	x0, [sp, #88]
   1d400:	ldr	x0, [x0]
   1d404:	ldr	x1, [sp, #80]
   1d408:	orr	x0, x1, x0
   1d40c:	str	x0, [sp, #80]
   1d410:	ldr	x0, [sp, #88]
   1d414:	add	x0, x0, #0x8
   1d418:	str	x0, [sp, #88]
   1d41c:	b	1d3ec <__sanitizer_set_report_fd@@Base+0x3240>
   1d420:	ldr	x1, [sp, #32]
   1d424:	ldr	x0, [sp, #24]
   1d428:	cmp	x1, x0
   1d42c:	b.cc	1d470 <__sanitizer_set_report_fd@@Base+0x32c4>  // b.lo, b.ul, b.last
   1d430:	ldr	x0, [sp, #32]
   1d434:	str	x0, [sp, #64]
   1d438:	ldr	x1, [sp, #64]
   1d43c:	ldr	x0, [sp, #40]
   1d440:	cmp	x1, x0
   1d444:	b.cs	1d470 <__sanitizer_set_report_fd@@Base+0x32c4>  // b.hs, b.nlast
   1d448:	ldr	x0, [sp, #64]
   1d44c:	ldrb	w0, [x0]
   1d450:	and	x0, x0, #0xff
   1d454:	ldr	x1, [sp, #80]
   1d458:	orr	x0, x1, x0
   1d45c:	str	x0, [sp, #80]
   1d460:	ldr	x0, [sp, #64]
   1d464:	add	x0, x0, #0x1
   1d468:	str	x0, [sp, #64]
   1d46c:	b	1d438 <__sanitizer_set_report_fd@@Base+0x328c>
   1d470:	ldr	x0, [sp, #80]
   1d474:	cmp	x0, #0x0
   1d478:	cset	w0, eq  // eq = none
   1d47c:	and	w0, w0, #0xff
   1d480:	ldr	x30, [sp], #96
   1d484:	ret
   1d488:	sub	sp, sp, #0x10
   1d48c:	str	x0, [sp, #8]
   1d490:	str	x1, [sp]
   1d494:	ldr	x0, [sp]
   1d498:	neg	x1, x0
   1d49c:	ldr	x0, [sp, #8]
   1d4a0:	and	x0, x1, x0
   1d4a4:	add	sp, sp, #0x10
   1d4a8:	ret
   1d4ac:	sub	sp, sp, #0x10
   1d4b0:	str	w0, [sp, #12]
   1d4b4:	ldr	w0, [sp, #12]
   1d4b8:	cmp	w0, #0x20
   1d4bc:	b.eq	1d4fc <__sanitizer_set_report_fd@@Base+0x3350>  // b.none
   1d4c0:	ldr	w0, [sp, #12]
   1d4c4:	cmp	w0, #0xa
   1d4c8:	b.eq	1d4fc <__sanitizer_set_report_fd@@Base+0x3350>  // b.none
   1d4cc:	ldr	w0, [sp, #12]
   1d4d0:	cmp	w0, #0x9
   1d4d4:	b.eq	1d4fc <__sanitizer_set_report_fd@@Base+0x3350>  // b.none
   1d4d8:	ldr	w0, [sp, #12]
   1d4dc:	cmp	w0, #0xc
   1d4e0:	b.eq	1d4fc <__sanitizer_set_report_fd@@Base+0x3350>  // b.none
   1d4e4:	ldr	w0, [sp, #12]
   1d4e8:	cmp	w0, #0xd
   1d4ec:	b.eq	1d4fc <__sanitizer_set_report_fd@@Base+0x3350>  // b.none
   1d4f0:	ldr	w0, [sp, #12]
   1d4f4:	cmp	w0, #0xb
   1d4f8:	b.ne	1d504 <__sanitizer_set_report_fd@@Base+0x3358>  // b.any
   1d4fc:	mov	w0, #0x1                   	// #1
   1d500:	b	1d508 <__sanitizer_set_report_fd@@Base+0x335c>
   1d504:	mov	w0, #0x0                   	// #0
   1d508:	add	sp, sp, #0x10
   1d50c:	ret
   1d510:	sub	sp, sp, #0x10
   1d514:	str	w0, [sp, #12]
   1d518:	ldr	w0, [sp, #12]
   1d51c:	cmp	w0, #0x2f
   1d520:	b.le	1d538 <__sanitizer_set_report_fd@@Base+0x338c>
   1d524:	ldr	w0, [sp, #12]
   1d528:	cmp	w0, #0x39
   1d52c:	b.gt	1d538 <__sanitizer_set_report_fd@@Base+0x338c>
   1d530:	mov	w0, #0x1                   	// #1
   1d534:	b	1d53c <__sanitizer_set_report_fd@@Base+0x3390>
   1d538:	mov	w0, #0x0                   	// #0
   1d53c:	add	sp, sp, #0x10
   1d540:	ret
   1d544:	sub	sp, sp, #0x10
   1d548:	str	x0, [sp, #8]
   1d54c:	str	x1, [sp]
   1d550:	ldr	x1, [sp, #8]
   1d554:	ldr	x0, [sp]
   1d558:	cmp	x1, x0
   1d55c:	b.cs	1d568 <__sanitizer_set_report_fd@@Base+0x33bc>  // b.hs, b.nlast
   1d560:	ldr	x0, [sp, #8]
   1d564:	b	1d56c <__sanitizer_set_report_fd@@Base+0x33c0>
   1d568:	ldr	x0, [sp]
   1d56c:	add	sp, sp, #0x10
   1d570:	ret
   1d574:	str	x30, [sp, #-32]!
   1d578:	str	x0, [sp, #24]
   1d57c:	str	w1, [sp, #20]
   1d580:	ldr	x1, [sp, #24]
   1d584:	mov	x0, #0x4810                	// #18448
   1d588:	add	x0, x1, x0
   1d58c:	bl	1ecfc <__sanitizer_set_report_fd@@Base+0x4b50>
   1d590:	nop
   1d594:	ldr	x30, [sp], #32
   1d598:	ret
   1d59c:	str	x30, [sp, #-48]!
   1d5a0:	str	x0, [sp, #24]
   1d5a4:	str	x1, [sp, #16]
   1d5a8:	ldr	x1, [sp, #24]
   1d5ac:	mov	x0, #0x4810                	// #18448
   1d5b0:	add	x1, x1, x0
   1d5b4:	add	x0, sp, #0x20
   1d5b8:	bl	1e018 <__sanitizer_set_report_fd@@Base+0x3e6c>
   1d5bc:	ldr	x0, [sp, #24]
   1d5c0:	ldr	x0, [x0, #18536]
   1d5c4:	cmp	x0, #0x3ff
   1d5c8:	b.ls	1d5f0 <__sanitizer_set_report_fd@@Base+0x3444>  // b.plast
   1d5cc:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1d5d0:	ldr	x0, [x0, #4024]
   1d5d4:	ldr	x0, [x0]
   1d5d8:	mov	x2, #0x400                 	// #1024
   1d5dc:	mov	x1, x0
   1d5e0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1d5e4:	add	x0, x0, #0xb8
   1d5e8:	bl	25a74 <OnPrint@@Base+0x454>
   1d5ec:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   1d5f0:	ldr	x0, [sp, #24]
   1d5f4:	ldr	x0, [x0, #18536]
   1d5f8:	add	x2, x0, #0x1
   1d5fc:	ldr	x1, [sp, #24]
   1d600:	str	x2, [x1, #18536]
   1d604:	lsl	x1, x0, #5
   1d608:	mov	x0, #0x4870                	// #18544
   1d60c:	add	x0, x1, x0
   1d610:	ldr	x1, [sp, #24]
   1d614:	add	x0, x1, x0
   1d618:	str	x0, [sp, #40]
   1d61c:	ldr	x0, [sp, #16]
   1d620:	bl	1ca68 <__sanitizer_set_report_fd@@Base+0x28bc>
   1d624:	mov	x1, x0
   1d628:	ldr	x0, [sp, #40]
   1d62c:	str	x1, [x0]
   1d630:	ldr	x0, [sp, #40]
   1d634:	str	xzr, [x0, #8]
   1d638:	ldr	x0, [sp, #40]
   1d63c:	str	xzr, [x0, #16]
   1d640:	ldr	x0, [sp, #40]
   1d644:	strb	wzr, [x0, #24]
   1d648:	add	x0, sp, #0x20
   1d64c:	bl	1e048 <__sanitizer_set_report_fd@@Base+0x3e9c>
   1d650:	nop
   1d654:	ldr	x30, [sp], #48
   1d658:	ret
   1d65c:	stp	x19, x20, [sp, #-336]!
   1d660:	stp	x21, x30, [sp, #16]
   1d664:	str	x0, [sp, #40]
   1d668:	str	x1, [sp, #32]
   1d66c:	ldr	x1, [sp, #40]
   1d670:	mov	x0, #0x4810                	// #18448
   1d674:	add	x1, x1, x0
   1d678:	add	x0, sp, #0x90
   1d67c:	bl	1e018 <__sanitizer_set_report_fd@@Base+0x3e6c>
   1d680:	add	x0, sp, #0x70
   1d684:	mov	x1, #0x1000                	// #4096
   1d688:	bl	89fc <__asan_backtrace_open@plt+0x1d8c>
   1d68c:	ldr	x0, [sp, #32]
   1d690:	cmp	x0, #0x0
   1d694:	b.eq	1d6e8 <__sanitizer_set_report_fd@@Base+0x353c>  // b.none
   1d698:	add	x0, sp, #0x70
   1d69c:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   1d6a0:	mov	x19, x0
   1d6a4:	add	x0, sp, #0x70
   1d6a8:	bl	1a278 <__sanitizer_set_report_fd@@Base+0xcc>
   1d6ac:	sub	x0, x0, #0x1
   1d6b0:	mov	x2, x0
   1d6b4:	mov	x1, x19
   1d6b8:	ldr	x0, [sp, #32]
   1d6bc:	bl	1e5d4 <__sanitizer_set_report_fd@@Base+0x4428>
   1d6c0:	cmp	x0, #0x0
   1d6c4:	b.eq	1d6e8 <__sanitizer_set_report_fd@@Base+0x353c>  // b.none
   1d6c8:	add	x0, sp, #0x70
   1d6cc:	mov	x1, #0x0                   	// #0
   1d6d0:	bl	92fc <__asan_backtrace_open@plt+0x268c>
   1d6d4:	ldrb	w0, [x0]
   1d6d8:	cmp	w0, #0x0
   1d6dc:	b.eq	1d6e8 <__sanitizer_set_report_fd@@Base+0x353c>  // b.none
   1d6e0:	mov	w0, #0x1                   	// #1
   1d6e4:	b	1d6ec <__sanitizer_set_report_fd@@Base+0x3540>
   1d6e8:	mov	w0, #0x0                   	// #0
   1d6ec:	cmp	w0, #0x0
   1d6f0:	b.eq	1d7a8 <__sanitizer_set_report_fd@@Base+0x35fc>  // b.none
   1d6f4:	str	xzr, [sp, #328]
   1d6f8:	ldr	x0, [sp, #40]
   1d6fc:	ldr	x0, [x0, #18536]
   1d700:	ldr	x1, [sp, #328]
   1d704:	cmp	x1, x0
   1d708:	b.cs	1d7a8 <__sanitizer_set_report_fd@@Base+0x35fc>  // b.hs, b.nlast
   1d70c:	ldr	x0, [sp, #328]
   1d710:	lsl	x1, x0, #5
   1d714:	mov	x0, #0x4870                	// #18544
   1d718:	add	x0, x1, x0
   1d71c:	ldr	x1, [sp, #40]
   1d720:	add	x0, x1, x0
   1d724:	str	x0, [sp, #288]
   1d728:	ldr	x0, [sp, #288]
   1d72c:	ldrb	w0, [x0, #24]
   1d730:	eor	w0, w0, #0x1
   1d734:	and	w0, w0, #0xff
   1d738:	cmp	w0, #0x0
   1d73c:	b.eq	1d774 <__sanitizer_set_report_fd@@Base+0x35c8>  // b.none
   1d740:	ldr	x0, [sp, #288]
   1d744:	ldr	x0, [x0, #16]
   1d748:	cmp	x0, #0x0
   1d74c:	b.ne	1d774 <__sanitizer_set_report_fd@@Base+0x35c8>  // b.any
   1d750:	ldr	x0, [sp, #288]
   1d754:	ldr	x0, [x0]
   1d758:	ldr	x1, [sp, #32]
   1d75c:	bl	14378 <__sancov_default_options@@Base+0x3fcc>
   1d760:	and	w0, w0, #0xff
   1d764:	cmp	w0, #0x0
   1d768:	b.eq	1d774 <__sanitizer_set_report_fd@@Base+0x35c8>  // b.none
   1d76c:	mov	w0, #0x1                   	// #1
   1d770:	b	1d778 <__sanitizer_set_report_fd@@Base+0x35cc>
   1d774:	mov	w0, #0x0                   	// #0
   1d778:	cmp	w0, #0x0
   1d77c:	b.eq	1d798 <__sanitizer_set_report_fd@@Base+0x35ec>  // b.none
   1d780:	add	x0, sp, #0x70
   1d784:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   1d788:	bl	1ca68 <__sanitizer_set_report_fd@@Base+0x28bc>
   1d78c:	mov	x1, x0
   1d790:	ldr	x0, [sp, #288]
   1d794:	str	x1, [x0, #16]
   1d798:	ldr	x0, [sp, #328]
   1d79c:	add	x0, x0, #0x1
   1d7a0:	str	x0, [sp, #328]
   1d7a4:	b	1d6f8 <__sanitizer_set_report_fd@@Base+0x354c>
   1d7a8:	add	x0, sp, #0x50
   1d7ac:	bl	1dde8 <__sanitizer_set_report_fd@@Base+0x3c3c>
   1d7b0:	add	x0, sp, #0x50
   1d7b4:	bl	21610 <__sanitizer_set_report_fd@@Base+0x7464>
   1d7b8:	str	xzr, [sp, #320]
   1d7bc:	ldr	x0, [sp, #40]
   1d7c0:	ldr	x0, [x0, #18536]
   1d7c4:	ldr	x1, [sp, #320]
   1d7c8:	cmp	x1, x0
   1d7cc:	b.cs	1db14 <__sanitizer_set_report_fd@@Base+0x3968>  // b.hs, b.nlast
   1d7d0:	ldr	x0, [sp, #320]
   1d7d4:	lsl	x1, x0, #5
   1d7d8:	mov	x0, #0x4870                	// #18544
   1d7dc:	add	x0, x1, x0
   1d7e0:	ldr	x1, [sp, #40]
   1d7e4:	add	x0, x1, x0
   1d7e8:	str	x0, [sp, #280]
   1d7ec:	strb	wzr, [sp, #319]
   1d7f0:	add	x0, sp, #0x50
   1d7f4:	str	x0, [sp, #272]
   1d7f8:	ldr	x0, [sp, #272]
   1d7fc:	bl	1de20 <__sanitizer_set_report_fd@@Base+0x3c74>
   1d800:	str	x0, [sp, #304]
   1d804:	ldr	x0, [sp, #272]
   1d808:	bl	1de38 <__sanitizer_set_report_fd@@Base+0x3c8c>
   1d80c:	str	x0, [sp, #264]
   1d810:	ldr	x1, [sp, #304]
   1d814:	ldr	x0, [sp, #264]
   1d818:	cmp	x1, x0
   1d81c:	b.eq	1dab0 <__sanitizer_set_report_fd@@Base+0x3904>  // b.none
   1d820:	ldr	x0, [sp, #304]
   1d824:	str	x0, [sp, #256]
   1d828:	ldr	x0, [sp, #256]
   1d82c:	bl	14a28 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb4>
   1d830:	str	x0, [sp, #248]
   1d834:	ldr	x0, [sp, #248]
   1d838:	bl	14bc8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x254>
   1d83c:	str	x0, [sp, #72]
   1d840:	ldr	x0, [sp, #248]
   1d844:	bl	14bec <__sanitizer_install_malloc_and_free_hooks@@Base+0x278>
   1d848:	str	x0, [sp, #64]
   1d84c:	add	x0, sp, #0x48
   1d850:	ldr	x1, [sp, #64]
   1d854:	bl	14c0c <__sanitizer_install_malloc_and_free_hooks@@Base+0x298>
   1d858:	and	w0, w0, #0xff
   1d85c:	cmp	w0, #0x0
   1d860:	b.eq	1daa0 <__sanitizer_set_report_fd@@Base+0x38f4>  // b.none
   1d864:	add	x0, sp, #0x48
   1d868:	bl	14c60 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2ec>
   1d86c:	str	x0, [sp, #240]
   1d870:	ldr	x0, [sp, #240]
   1d874:	ldrb	w0, [x0, #24]
   1d878:	eor	w0, w0, #0x1
   1d87c:	and	w0, w0, #0xff
   1d880:	cmp	w0, #0x0
   1d884:	b.ne	1da80 <__sanitizer_set_report_fd@@Base+0x38d4>  // b.any
   1d888:	ldr	x0, [sp, #280]
   1d88c:	ldr	x19, [x0]
   1d890:	ldr	x0, [sp, #256]
   1d894:	bl	1ddb8 <__sanitizer_set_report_fd@@Base+0x3c0c>
   1d898:	mov	x1, x0
   1d89c:	mov	x0, x19
   1d8a0:	bl	14378 <__sancov_default_options@@Base+0x3fcc>
   1d8a4:	and	w0, w0, #0xff
   1d8a8:	eor	w0, w0, #0x1
   1d8ac:	and	w0, w0, #0xff
   1d8b0:	cmp	w0, #0x0
   1d8b4:	b.eq	1d8f4 <__sanitizer_set_report_fd@@Base+0x3748>  // b.none
   1d8b8:	ldr	x0, [sp, #280]
   1d8bc:	ldr	x0, [x0, #16]
   1d8c0:	cmp	x0, #0x0
   1d8c4:	b.eq	1d8ec <__sanitizer_set_report_fd@@Base+0x3740>  // b.none
   1d8c8:	ldr	x0, [sp, #280]
   1d8cc:	ldr	x19, [x0, #16]
   1d8d0:	ldr	x0, [sp, #256]
   1d8d4:	bl	1ddb8 <__sanitizer_set_report_fd@@Base+0x3c0c>
   1d8d8:	mov	x1, x0
   1d8dc:	mov	x0, x19
   1d8e0:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   1d8e4:	cmp	w0, #0x0
   1d8e8:	b.eq	1d8f4 <__sanitizer_set_report_fd@@Base+0x3748>  // b.none
   1d8ec:	mov	w0, #0x1                   	// #1
   1d8f0:	b	1d8f8 <__sanitizer_set_report_fd@@Base+0x374c>
   1d8f4:	mov	w0, #0x0                   	// #0
   1d8f8:	cmp	w0, #0x0
   1d8fc:	b.ne	1da88 <__sanitizer_set_report_fd@@Base+0x38dc>  // b.any
   1d900:	ldrb	w0, [sp, #319]
   1d904:	cmp	w0, #0x0
   1d908:	b.eq	1d950 <__sanitizer_set_report_fd@@Base+0x37a4>  // b.none
   1d90c:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1d910:	ldr	x0, [x0, #4024]
   1d914:	ldr	x19, [x0]
   1d918:	ldr	x0, [sp, #280]
   1d91c:	ldr	x20, [x0]
   1d920:	ldr	x0, [sp, #280]
   1d924:	ldr	x21, [x0, #8]
   1d928:	ldr	x0, [sp, #256]
   1d92c:	bl	1ddb8 <__sanitizer_set_report_fd@@Base+0x3c0c>
   1d930:	mov	x4, x0
   1d934:	mov	x3, x21
   1d938:	mov	x2, x20
   1d93c:	mov	x1, x19
   1d940:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1d944:	add	x0, x0, #0xe8
   1d948:	bl	25a74 <OnPrint@@Base+0x454>
   1d94c:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   1d950:	mov	w0, #0x1                   	// #1
   1d954:	strb	w0, [sp, #319]
   1d958:	ldr	x0, [sp, #280]
   1d95c:	ldrb	w0, [x0, #24]
   1d960:	cmp	w0, #0x0
   1d964:	b.ne	1da90 <__sanitizer_set_report_fd@@Base+0x38e4>  // b.any
   1d968:	bl	9984 <__ubsan_default_options@@Base+0x320>
   1d96c:	cmp	w0, #0x0
   1d970:	cset	w0, ne  // ne = any
   1d974:	and	w0, w0, #0xff
   1d978:	cmp	w0, #0x0
   1d97c:	b.eq	1d9a4 <__sanitizer_set_report_fd@@Base+0x37f8>  // b.none
   1d980:	ldr	x0, [sp, #280]
   1d984:	ldr	x19, [x0]
   1d988:	ldr	x0, [sp, #256]
   1d98c:	bl	1ddb8 <__sanitizer_set_report_fd@@Base+0x3c0c>
   1d990:	mov	x2, x0
   1d994:	mov	x1, x19
   1d998:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1d99c:	add	x0, x0, #0x140
   1d9a0:	bl	25a74 <OnPrint@@Base+0x454>
   1d9a4:	ldr	x0, [sp, #280]
   1d9a8:	mov	w1, #0x1                   	// #1
   1d9ac:	strb	w1, [x0, #24]
   1d9b0:	ldr	x0, [sp, #256]
   1d9b4:	bl	1ddb8 <__sanitizer_set_report_fd@@Base+0x3c0c>
   1d9b8:	bl	1ca68 <__sanitizer_set_report_fd@@Base+0x28bc>
   1d9bc:	mov	x1, x0
   1d9c0:	ldr	x0, [sp, #280]
   1d9c4:	str	x1, [x0, #8]
   1d9c8:	ldr	x0, [sp, #40]
   1d9cc:	mov	w1, #0x1                   	// #1
   1d9d0:	bl	11080 <__sancov_default_options@@Base+0xcd4>
   1d9d4:	str	x0, [sp, #232]
   1d9d8:	ldr	x0, [sp, #232]
   1d9dc:	str	x0, [sp, #224]
   1d9e0:	mov	x0, #0x80                  	// #128
   1d9e4:	str	x0, [sp, #216]
   1d9e8:	ldr	x1, [sp, #224]
   1d9ec:	ldr	x0, [sp, #216]
   1d9f0:	cmp	x1, x0
   1d9f4:	cset	w0, cs  // cs = hs, nlast
   1d9f8:	and	w0, w0, #0xff
   1d9fc:	and	x0, x0, #0xff
   1da00:	cmp	x0, #0x0
   1da04:	b.eq	1da28 <__sanitizer_set_report_fd@@Base+0x387c>  // b.none
   1da08:	ldr	x4, [sp, #216]
   1da0c:	ldr	x3, [sp, #224]
   1da10:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1da14:	add	x2, x0, #0x180
   1da18:	mov	w1, #0x52                  	// #82
   1da1c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1da20:	add	x0, x0, #0x1d0
   1da24:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1da28:	ldr	x0, [sp, #240]
   1da2c:	ldr	x1, [x0, #8]
   1da30:	ldr	x2, [sp, #40]
   1da34:	ldr	x0, [sp, #232]
   1da38:	lsl	x0, x0, #4
   1da3c:	add	x0, x2, x0
   1da40:	str	x1, [x0, #8]
   1da44:	ldr	x0, [sp, #240]
   1da48:	ldr	x1, [x0, #16]
   1da4c:	ldr	x2, [sp, #40]
   1da50:	ldr	x0, [sp, #232]
   1da54:	lsl	x0, x0, #4
   1da58:	add	x0, x2, x0
   1da5c:	str	x1, [x0, #16]
   1da60:	ldr	x3, [sp, #40]
   1da64:	ldr	x0, [sp, #232]
   1da68:	add	x0, x0, #0x1
   1da6c:	mov	w2, #0x8                   	// #8
   1da70:	mov	x1, x0
   1da74:	mov	x0, x3
   1da78:	bl	11104 <__sancov_default_options@@Base+0xd58>
   1da7c:	b	1daa0 <__sanitizer_set_report_fd@@Base+0x38f4>
   1da80:	nop
   1da84:	b	1da94 <__sanitizer_set_report_fd@@Base+0x38e8>
   1da88:	nop
   1da8c:	b	1da94 <__sanitizer_set_report_fd@@Base+0x38e8>
   1da90:	nop
   1da94:	add	x0, sp, #0x48
   1da98:	bl	14c38 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2c4>
   1da9c:	b	1d84c <__sanitizer_set_report_fd@@Base+0x36a0>
   1daa0:	ldr	x0, [sp, #304]
   1daa4:	add	x0, x0, #0x48
   1daa8:	str	x0, [sp, #304]
   1daac:	b	1d810 <__sanitizer_set_report_fd@@Base+0x3664>
   1dab0:	ldr	x0, [sp, #280]
   1dab4:	ldrb	w0, [x0, #24]
   1dab8:	cmp	w0, #0x0
   1dabc:	b.eq	1db04 <__sanitizer_set_report_fd@@Base+0x3958>  // b.none
   1dac0:	ldrb	w0, [sp, #319]
   1dac4:	eor	w0, w0, #0x1
   1dac8:	and	w0, w0, #0xff
   1dacc:	cmp	w0, #0x0
   1dad0:	b.eq	1db04 <__sanitizer_set_report_fd@@Base+0x3958>  // b.none
   1dad4:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1dad8:	ldr	x0, [x0, #4024]
   1dadc:	ldr	x1, [x0]
   1dae0:	ldr	x0, [sp, #280]
   1dae4:	ldr	x2, [x0, #8]
   1dae8:	ldr	x0, [sp, #280]
   1daec:	ldr	x0, [x0]
   1daf0:	mov	x3, x0
   1daf4:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1daf8:	add	x0, x0, #0x218
   1dafc:	bl	25a74 <OnPrint@@Base+0x454>
   1db00:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   1db04:	ldr	x0, [sp, #320]
   1db08:	add	x0, x0, #0x1
   1db0c:	str	x0, [sp, #320]
   1db10:	b	1d7bc <__sanitizer_set_report_fd@@Base+0x3610>
   1db14:	ldr	x0, [sp, #40]
   1db18:	add	x0, x0, #0xc, lsl #12
   1db1c:	ldrb	w0, [x0, #2160]
   1db20:	cmp	w0, #0x0
   1db24:	b.eq	1dd70 <__sanitizer_set_report_fd@@Base+0x3bc4>  // b.none
   1db28:	add	x0, sp, #0x50
   1db2c:	str	x0, [sp, #208]
   1db30:	ldr	x0, [sp, #208]
   1db34:	bl	1de20 <__sanitizer_set_report_fd@@Base+0x3c74>
   1db38:	str	x0, [sp, #296]
   1db3c:	ldr	x0, [sp, #208]
   1db40:	bl	1de38 <__sanitizer_set_report_fd@@Base+0x3c8c>
   1db44:	str	x0, [sp, #200]
   1db48:	ldr	x1, [sp, #296]
   1db4c:	ldr	x0, [sp, #200]
   1db50:	cmp	x1, x0
   1db54:	b.eq	1dd70 <__sanitizer_set_report_fd@@Base+0x3bc4>  // b.none
   1db58:	ldr	x0, [sp, #296]
   1db5c:	str	x0, [sp, #192]
   1db60:	ldr	x0, [sp, #192]
   1db64:	bl	1ddd0 <__sanitizer_set_report_fd@@Base+0x3c24>
   1db68:	and	w0, w0, #0xff
   1db6c:	eor	w0, w0, #0x1
   1db70:	and	w0, w0, #0xff
   1db74:	cmp	w0, #0x0
   1db78:	b.ne	1dd5c <__sanitizer_set_report_fd@@Base+0x3bb0>  // b.any
   1db7c:	ldr	x0, [sp, #192]
   1db80:	bl	14a28 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb4>
   1db84:	str	x0, [sp, #184]
   1db88:	ldr	x0, [sp, #184]
   1db8c:	bl	14bc8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x254>
   1db90:	str	x0, [sp, #56]
   1db94:	ldr	x0, [sp, #184]
   1db98:	bl	14bec <__sanitizer_install_malloc_and_free_hooks@@Base+0x278>
   1db9c:	str	x0, [sp, #48]
   1dba0:	add	x0, sp, #0x38
   1dba4:	ldr	x1, [sp, #48]
   1dba8:	bl	14c0c <__sanitizer_install_malloc_and_free_hooks@@Base+0x298>
   1dbac:	and	w0, w0, #0xff
   1dbb0:	cmp	w0, #0x0
   1dbb4:	b.eq	1dd60 <__sanitizer_set_report_fd@@Base+0x3bb4>  // b.none
   1dbb8:	add	x0, sp, #0x38
   1dbbc:	bl	14c60 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2ec>
   1dbc0:	str	x0, [sp, #176]
   1dbc4:	ldr	x0, [sp, #176]
   1dbc8:	ldrb	w0, [x0, #24]
   1dbcc:	eor	w0, w0, #0x1
   1dbd0:	and	w0, w0, #0xff
   1dbd4:	cmp	w0, #0x0
   1dbd8:	b.ne	1dd44 <__sanitizer_set_report_fd@@Base+0x3b98>  // b.any
   1dbdc:	ldr	x0, [sp, #176]
   1dbe0:	ldr	x0, [x0, #8]
   1dbe4:	mov	x1, x0
   1dbe8:	ldr	x0, [sp, #40]
   1dbec:	bl	1df08 <__sanitizer_set_report_fd@@Base+0x3d5c>
   1dbf0:	and	w0, w0, #0xff
   1dbf4:	cmp	w0, #0x0
   1dbf8:	b.eq	1dc28 <__sanitizer_set_report_fd@@Base+0x3a7c>  // b.none
   1dbfc:	ldr	x0, [sp, #176]
   1dc00:	ldr	x0, [x0, #16]
   1dc04:	sub	x0, x0, #0x1
   1dc08:	mov	x1, x0
   1dc0c:	ldr	x0, [sp, #40]
   1dc10:	bl	1df08 <__sanitizer_set_report_fd@@Base+0x3d5c>
   1dc14:	and	w0, w0, #0xff
   1dc18:	cmp	w0, #0x0
   1dc1c:	b.eq	1dc28 <__sanitizer_set_report_fd@@Base+0x3a7c>  // b.none
   1dc20:	mov	w0, #0x1                   	// #1
   1dc24:	b	1dc2c <__sanitizer_set_report_fd@@Base+0x3a80>
   1dc28:	mov	w0, #0x0                   	// #0
   1dc2c:	cmp	w0, #0x0
   1dc30:	b.ne	1dd4c <__sanitizer_set_report_fd@@Base+0x3ba0>  // b.any
   1dc34:	bl	9984 <__ubsan_default_options@@Base+0x320>
   1dc38:	cmp	w0, #0x0
   1dc3c:	cset	w0, ne  // ne = any
   1dc40:	and	w0, w0, #0xff
   1dc44:	cmp	w0, #0x0
   1dc48:	b.eq	1dc7c <__sanitizer_set_report_fd@@Base+0x3ad0>  // b.none
   1dc4c:	ldr	x0, [sp, #176]
   1dc50:	ldr	x19, [x0, #8]
   1dc54:	ldr	x0, [sp, #176]
   1dc58:	ldr	x20, [x0, #16]
   1dc5c:	ldr	x0, [sp, #192]
   1dc60:	bl	1ddb8 <__sanitizer_set_report_fd@@Base+0x3c0c>
   1dc64:	mov	x3, x0
   1dc68:	mov	x2, x20
   1dc6c:	mov	x1, x19
   1dc70:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1dc74:	add	x0, x0, #0x270
   1dc78:	bl	25a74 <OnPrint@@Base+0x454>
   1dc7c:	ldr	x0, [sp, #40]
   1dc80:	add	x0, x0, #0x808
   1dc84:	mov	w1, #0x1                   	// #1
   1dc88:	bl	11080 <__sancov_default_options@@Base+0xcd4>
   1dc8c:	str	x0, [sp, #168]
   1dc90:	ldr	x0, [sp, #168]
   1dc94:	str	x0, [sp, #160]
   1dc98:	mov	x0, #0x400                 	// #1024
   1dc9c:	str	x0, [sp, #152]
   1dca0:	ldr	x1, [sp, #160]
   1dca4:	ldr	x0, [sp, #152]
   1dca8:	cmp	x1, x0
   1dcac:	cset	w0, cs  // cs = hs, nlast
   1dcb0:	and	w0, w0, #0xff
   1dcb4:	and	x0, x0, #0xff
   1dcb8:	cmp	x0, #0x0
   1dcbc:	b.eq	1dce0 <__sanitizer_set_report_fd@@Base+0x3b34>  // b.none
   1dcc0:	ldr	x4, [sp, #152]
   1dcc4:	ldr	x3, [sp, #160]
   1dcc8:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1dccc:	add	x2, x0, #0x2a8
   1dcd0:	mov	w1, #0x6f                  	// #111
   1dcd4:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1dcd8:	add	x0, x0, #0x1d0
   1dcdc:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1dce0:	ldr	x0, [sp, #176]
   1dce4:	ldr	x1, [x0, #8]
   1dce8:	ldr	x2, [sp, #40]
   1dcec:	ldr	x0, [sp, #168]
   1dcf0:	add	x0, x0, #0x81
   1dcf4:	lsl	x0, x0, #4
   1dcf8:	add	x0, x2, x0
   1dcfc:	str	x1, [x0]
   1dd00:	ldr	x0, [sp, #176]
   1dd04:	ldr	x1, [x0, #16]
   1dd08:	ldr	x2, [sp, #40]
   1dd0c:	ldr	x0, [sp, #168]
   1dd10:	add	x0, x0, #0x81
   1dd14:	lsl	x0, x0, #4
   1dd18:	add	x0, x2, x0
   1dd1c:	str	x1, [x0, #8]
   1dd20:	ldr	x0, [sp, #40]
   1dd24:	add	x3, x0, #0x808
   1dd28:	ldr	x0, [sp, #168]
   1dd2c:	add	x0, x0, #0x1
   1dd30:	mov	w2, #0x8                   	// #8
   1dd34:	mov	x1, x0
   1dd38:	mov	x0, x3
   1dd3c:	bl	11104 <__sancov_default_options@@Base+0xd58>
   1dd40:	b	1dd50 <__sanitizer_set_report_fd@@Base+0x3ba4>
   1dd44:	nop
   1dd48:	b	1dd50 <__sanitizer_set_report_fd@@Base+0x3ba4>
   1dd4c:	nop
   1dd50:	add	x0, sp, #0x38
   1dd54:	bl	14c38 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2c4>
   1dd58:	b	1dba0 <__sanitizer_set_report_fd@@Base+0x39f4>
   1dd5c:	nop
   1dd60:	ldr	x0, [sp, #296]
   1dd64:	add	x0, x0, #0x48
   1dd68:	str	x0, [sp, #296]
   1dd6c:	b	1db48 <__sanitizer_set_report_fd@@Base+0x399c>
   1dd70:	add	x0, sp, #0x50
   1dd74:	bl	1de04 <__sanitizer_set_report_fd@@Base+0x3c58>
   1dd78:	add	x0, sp, #0x70
   1dd7c:	bl	9274 <__asan_backtrace_open@plt+0x2604>
   1dd80:	add	x0, sp, #0x90
   1dd84:	bl	1e048 <__sanitizer_set_report_fd@@Base+0x3e9c>
   1dd88:	nop
   1dd8c:	ldp	x21, x30, [sp, #16]
   1dd90:	ldp	x19, x20, [sp], #336
   1dd94:	ret
   1dd98:	str	x30, [sp, #-32]!
   1dd9c:	str	x0, [sp, #24]
   1dda0:	mov	x1, #0x0                   	// #0
   1dda4:	ldr	x0, [sp, #24]
   1dda8:	bl	1d65c <__sanitizer_set_report_fd@@Base+0x34b0>
   1ddac:	nop
   1ddb0:	ldr	x30, [sp], #32
   1ddb4:	ret
   1ddb8:	sub	sp, sp, #0x10
   1ddbc:	str	x0, [sp, #8]
   1ddc0:	ldr	x0, [sp, #8]
   1ddc4:	ldr	x0, [x0]
   1ddc8:	add	sp, sp, #0x10
   1ddcc:	ret
   1ddd0:	sub	sp, sp, #0x10
   1ddd4:	str	x0, [sp, #8]
   1ddd8:	ldr	x0, [sp, #8]
   1dddc:	ldrb	w0, [x0, #44]
   1dde0:	add	sp, sp, #0x10
   1dde4:	ret
   1dde8:	sub	sp, sp, #0x10
   1ddec:	str	x0, [sp, #8]
   1ddf0:	ldr	x0, [sp, #8]
   1ddf4:	strb	wzr, [x0, #24]
   1ddf8:	nop
   1ddfc:	add	sp, sp, #0x10
   1de00:	ret
   1de04:	str	x30, [sp, #-32]!
   1de08:	str	x0, [sp, #24]
   1de0c:	ldr	x0, [sp, #24]
   1de10:	bl	1de50 <__sanitizer_set_report_fd@@Base+0x3ca4>
   1de14:	nop
   1de18:	ldr	x30, [sp], #32
   1de1c:	ret
   1de20:	str	x30, [sp, #-32]!
   1de24:	str	x0, [sp, #24]
   1de28:	ldr	x0, [sp, #24]
   1de2c:	bl	1df90 <__sanitizer_set_report_fd@@Base+0x3de4>
   1de30:	ldr	x30, [sp], #32
   1de34:	ret
   1de38:	str	x30, [sp, #-32]!
   1de3c:	str	x0, [sp, #24]
   1de40:	ldr	x0, [sp, #24]
   1de44:	bl	1dfa8 <__sanitizer_set_report_fd@@Base+0x3dfc>
   1de48:	ldr	x30, [sp], #32
   1de4c:	ret
   1de50:	str	x30, [sp, #-64]!
   1de54:	str	x0, [sp, #24]
   1de58:	ldr	x0, [sp, #24]
   1de5c:	str	x0, [sp, #48]
   1de60:	ldr	x0, [sp, #48]
   1de64:	bl	1df90 <__sanitizer_set_report_fd@@Base+0x3de4>
   1de68:	str	x0, [sp, #56]
   1de6c:	ldr	x0, [sp, #48]
   1de70:	bl	1dfa8 <__sanitizer_set_report_fd@@Base+0x3dfc>
   1de74:	str	x0, [sp, #40]
   1de78:	ldr	x1, [sp, #56]
   1de7c:	ldr	x0, [sp, #40]
   1de80:	cmp	x1, x0
   1de84:	b.eq	1dea8 <__sanitizer_set_report_fd@@Base+0x3cfc>  // b.none
   1de88:	ldr	x0, [sp, #56]
   1de8c:	str	x0, [sp, #32]
   1de90:	ldr	x0, [sp, #32]
   1de94:	bl	140a4 <__sancov_default_options@@Base+0x3cf8>
   1de98:	ldr	x0, [sp, #56]
   1de9c:	add	x0, x0, #0x48
   1dea0:	str	x0, [sp, #56]
   1dea4:	b	1de78 <__sanitizer_set_report_fd@@Base+0x3ccc>
   1dea8:	ldr	x0, [sp, #24]
   1deac:	bl	1dffc <__sanitizer_set_report_fd@@Base+0x3e50>
   1deb0:	nop
   1deb4:	ldr	x30, [sp], #64
   1deb8:	ret
   1debc:	sub	sp, sp, #0x20
   1dec0:	str	x0, [sp, #24]
   1dec4:	str	x1, [sp, #16]
   1dec8:	str	x2, [sp, #8]
   1decc:	ldr	x0, [sp, #8]
   1ded0:	ldr	x0, [x0]
   1ded4:	ldr	x1, [sp, #16]
   1ded8:	cmp	x1, x0
   1dedc:	b.cc	1defc <__sanitizer_set_report_fd@@Base+0x3d50>  // b.lo, b.ul, b.last
   1dee0:	ldr	x0, [sp, #8]
   1dee4:	ldr	x0, [x0, #8]
   1dee8:	ldr	x1, [sp, #16]
   1deec:	cmp	x1, x0
   1def0:	b.cs	1defc <__sanitizer_set_report_fd@@Base+0x3d50>  // b.hs, b.nlast
   1def4:	mov	w0, #0x1                   	// #1
   1def8:	b	1df00 <__sanitizer_set_report_fd@@Base+0x3d54>
   1defc:	mov	w0, #0x0                   	// #0
   1df00:	add	sp, sp, #0x20
   1df04:	ret
   1df08:	str	x30, [sp, #-48]!
   1df0c:	str	x0, [sp, #24]
   1df10:	str	x1, [sp, #16]
   1df14:	ldr	x0, [sp, #24]
   1df18:	add	x0, x0, #0x808
   1df1c:	mov	w1, #0x4                   	// #4
   1df20:	bl	11080 <__sancov_default_options@@Base+0xcd4>
   1df24:	str	x0, [sp, #32]
   1df28:	str	xzr, [sp, #40]
   1df2c:	ldr	x1, [sp, #40]
   1df30:	ldr	x0, [sp, #32]
   1df34:	cmp	x1, x0
   1df38:	b.cs	1df84 <__sanitizer_set_report_fd@@Base+0x3dd8>  // b.hs, b.nlast
   1df3c:	ldr	x0, [sp, #40]
   1df40:	add	x0, x0, #0x81
   1df44:	lsl	x0, x0, #4
   1df48:	ldr	x1, [sp, #24]
   1df4c:	add	x0, x1, x0
   1df50:	mov	x2, x0
   1df54:	ldr	x1, [sp, #16]
   1df58:	ldr	x0, [sp, #24]
   1df5c:	bl	1debc <__sanitizer_set_report_fd@@Base+0x3d10>
   1df60:	and	w0, w0, #0xff
   1df64:	cmp	w0, #0x0
   1df68:	b.eq	1df74 <__sanitizer_set_report_fd@@Base+0x3dc8>  // b.none
   1df6c:	mov	w0, #0x1                   	// #1
   1df70:	b	1df88 <__sanitizer_set_report_fd@@Base+0x3ddc>
   1df74:	ldr	x0, [sp, #40]
   1df78:	add	x0, x0, #0x1
   1df7c:	str	x0, [sp, #40]
   1df80:	b	1df2c <__sanitizer_set_report_fd@@Base+0x3d80>
   1df84:	mov	w0, #0x0                   	// #0
   1df88:	ldr	x30, [sp], #48
   1df8c:	ret
   1df90:	str	x30, [sp, #-32]!
   1df94:	str	x0, [sp, #24]
   1df98:	ldr	x0, [sp, #24]
   1df9c:	bl	1e068 <__sanitizer_set_report_fd@@Base+0x3ebc>
   1dfa0:	ldr	x30, [sp], #32
   1dfa4:	ret
   1dfa8:	stp	x19, x30, [sp, #-32]!
   1dfac:	str	x0, [sp, #24]
   1dfb0:	ldr	x0, [sp, #24]
   1dfb4:	bl	1e068 <__sanitizer_set_report_fd@@Base+0x3ebc>
   1dfb8:	mov	x19, x0
   1dfbc:	ldr	x0, [sp, #24]
   1dfc0:	bl	1dfe4 <__sanitizer_set_report_fd@@Base+0x3e38>
   1dfc4:	mov	x1, x0
   1dfc8:	mov	x0, x1
   1dfcc:	lsl	x0, x0, #3
   1dfd0:	add	x0, x0, x1
   1dfd4:	lsl	x0, x0, #3
   1dfd8:	add	x0, x19, x0
   1dfdc:	ldp	x19, x30, [sp], #32
   1dfe0:	ret
   1dfe4:	sub	sp, sp, #0x10
   1dfe8:	str	x0, [sp, #8]
   1dfec:	ldr	x0, [sp, #8]
   1dff0:	ldr	x0, [x0, #16]
   1dff4:	add	sp, sp, #0x10
   1dff8:	ret
   1dffc:	sub	sp, sp, #0x10
   1e000:	str	x0, [sp, #8]
   1e004:	ldr	x0, [sp, #8]
   1e008:	str	xzr, [x0, #16]
   1e00c:	nop
   1e010:	add	sp, sp, #0x10
   1e014:	ret
   1e018:	str	x30, [sp, #-32]!
   1e01c:	str	x0, [sp, #24]
   1e020:	str	x1, [sp, #16]
   1e024:	ldr	x0, [sp, #24]
   1e028:	ldr	x1, [sp, #16]
   1e02c:	str	x1, [x0]
   1e030:	ldr	x0, [sp, #24]
   1e034:	ldr	x0, [x0]
   1e038:	bl	1ed20 <__sanitizer_set_report_fd@@Base+0x4b74>
   1e03c:	nop
   1e040:	ldr	x30, [sp], #32
   1e044:	ret
   1e048:	str	x30, [sp, #-32]!
   1e04c:	str	x0, [sp, #24]
   1e050:	ldr	x0, [sp, #24]
   1e054:	ldr	x0, [x0]
   1e058:	bl	1edfc <__sanitizer_set_report_fd@@Base+0x4c50>
   1e05c:	nop
   1e060:	ldr	x30, [sp], #32
   1e064:	ret
   1e068:	sub	sp, sp, #0x10
   1e06c:	str	x0, [sp, #8]
   1e070:	ldr	x0, [sp, #8]
   1e074:	ldr	x0, [x0]
   1e078:	add	sp, sp, #0x10
   1e07c:	ret
   1e080:	sub	sp, sp, #0x10
   1e084:	str	x0, [sp, #8]
   1e088:	ldr	x8, [sp, #8]
   1e08c:	svc	#0x0
   1e090:	add	sp, sp, #0x10
   1e094:	ret
   1e098:	sub	sp, sp, #0x10
   1e09c:	str	x0, [sp, #8]
   1e0a0:	str	x1, [sp]
   1e0a4:	ldr	x8, [sp, #8]
   1e0a8:	ldr	x0, [sp]
   1e0ac:	svc	#0x0
   1e0b0:	add	sp, sp, #0x10
   1e0b4:	ret
   1e0b8:	sub	sp, sp, #0x20
   1e0bc:	str	x0, [sp, #24]
   1e0c0:	str	x1, [sp, #16]
   1e0c4:	str	x2, [sp, #8]
   1e0c8:	ldr	x8, [sp, #24]
   1e0cc:	ldr	x0, [sp, #16]
   1e0d0:	ldr	x1, [sp, #8]
   1e0d4:	svc	#0x0
   1e0d8:	add	sp, sp, #0x20
   1e0dc:	ret
   1e0e0:	sub	sp, sp, #0x20
   1e0e4:	str	x0, [sp, #24]
   1e0e8:	str	x1, [sp, #16]
   1e0ec:	str	x2, [sp, #8]
   1e0f0:	str	x3, [sp]
   1e0f4:	ldr	x8, [sp, #24]
   1e0f8:	ldr	x0, [sp, #16]
   1e0fc:	ldr	x1, [sp, #8]
   1e100:	ldr	x2, [sp]
   1e104:	svc	#0x0
   1e108:	add	sp, sp, #0x20
   1e10c:	ret
   1e110:	sub	sp, sp, #0x30
   1e114:	str	x0, [sp, #40]
   1e118:	str	x1, [sp, #32]
   1e11c:	str	x2, [sp, #24]
   1e120:	str	x3, [sp, #16]
   1e124:	str	x4, [sp, #8]
   1e128:	ldr	x8, [sp, #40]
   1e12c:	ldr	x0, [sp, #32]
   1e130:	ldr	x1, [sp, #24]
   1e134:	ldr	x2, [sp, #16]
   1e138:	ldr	x3, [sp, #8]
   1e13c:	svc	#0x0
   1e140:	add	sp, sp, #0x30
   1e144:	ret
   1e148:	sub	sp, sp, #0x30
   1e14c:	str	x0, [sp, #40]
   1e150:	str	x1, [sp, #32]
   1e154:	str	x2, [sp, #24]
   1e158:	str	x3, [sp, #16]
   1e15c:	str	x4, [sp, #8]
   1e160:	str	x5, [sp]
   1e164:	ldr	x8, [sp, #40]
   1e168:	ldr	x0, [sp, #32]
   1e16c:	ldr	x1, [sp, #24]
   1e170:	ldr	x2, [sp, #16]
   1e174:	ldr	x3, [sp, #8]
   1e178:	ldr	x4, [sp]
   1e17c:	svc	#0x0
   1e180:	add	sp, sp, #0x30
   1e184:	ret
   1e188:	sub	sp, sp, #0x40
   1e18c:	str	x0, [sp, #56]
   1e190:	str	x1, [sp, #48]
   1e194:	str	x2, [sp, #40]
   1e198:	str	x3, [sp, #32]
   1e19c:	str	x4, [sp, #24]
   1e1a0:	str	x5, [sp, #16]
   1e1a4:	str	x6, [sp, #8]
   1e1a8:	ldr	x8, [sp, #56]
   1e1ac:	ldr	x0, [sp, #48]
   1e1b0:	ldr	x1, [sp, #40]
   1e1b4:	ldr	x2, [sp, #32]
   1e1b8:	ldr	x3, [sp, #24]
   1e1bc:	ldr	x4, [sp, #16]
   1e1c0:	ldr	x5, [sp, #8]
   1e1c4:	svc	#0x0
   1e1c8:	add	sp, sp, #0x40
   1e1cc:	ret
   1e1d0:	sub	sp, sp, #0x10
   1e1d4:	str	x0, [sp, #8]
   1e1d8:	str	x1, [sp]
   1e1dc:	ldr	x0, [sp, #8]
   1e1e0:	cmn	x0, #0x1, lsl #12
   1e1e4:	b.ls	1e210 <__sanitizer_set_report_fd@@Base+0x4064>  // b.plast
   1e1e8:	ldr	x0, [sp]
   1e1ec:	cmp	x0, #0x0
   1e1f0:	b.eq	1e208 <__sanitizer_set_report_fd@@Base+0x405c>  // b.none
   1e1f4:	ldr	x0, [sp, #8]
   1e1f8:	neg	w0, w0
   1e1fc:	mov	w1, w0
   1e200:	ldr	x0, [sp]
   1e204:	str	w1, [x0]
   1e208:	mov	w0, #0x1                   	// #1
   1e20c:	b	1e214 <__sanitizer_set_report_fd@@Base+0x4068>
   1e210:	mov	w0, #0x0                   	// #0
   1e214:	add	sp, sp, #0x10
   1e218:	ret
   1e21c:	str	x30, [sp, #-64]!
   1e220:	str	x0, [sp, #56]
   1e224:	str	x1, [sp, #48]
   1e228:	str	w2, [sp, #44]
   1e22c:	str	w3, [sp, #40]
   1e230:	str	w4, [sp, #36]
   1e234:	str	x5, [sp, #24]
   1e238:	ldr	x0, [sp, #56]
   1e23c:	ldr	x1, [sp, #48]
   1e240:	ldrsw	x2, [sp, #44]
   1e244:	ldrsw	x3, [sp, #40]
   1e248:	ldrsw	x4, [sp, #36]
   1e24c:	ldr	x5, [sp, #24]
   1e250:	mov	x6, x5
   1e254:	mov	x5, x4
   1e258:	mov	x4, x3
   1e25c:	mov	x3, x2
   1e260:	mov	x2, x1
   1e264:	mov	x1, x0
   1e268:	mov	x0, #0xde                  	// #222
   1e26c:	bl	1e188 <__sanitizer_set_report_fd@@Base+0x3fdc>
   1e270:	ldr	x30, [sp], #64
   1e274:	ret
   1e278:	str	x30, [sp, #-32]!
   1e27c:	str	x0, [sp, #24]
   1e280:	str	x1, [sp, #16]
   1e284:	ldr	x0, [sp, #24]
   1e288:	ldr	x1, [sp, #16]
   1e28c:	mov	x2, x1
   1e290:	mov	x1, x0
   1e294:	mov	x0, #0xd7                  	// #215
   1e298:	bl	1e0b8 <__sanitizer_set_report_fd@@Base+0x3f0c>
   1e29c:	ldr	x30, [sp], #32
   1e2a0:	ret
   1e2a4:	str	x30, [sp, #-48]!
   1e2a8:	str	x0, [sp, #40]
   1e2ac:	str	x1, [sp, #32]
   1e2b0:	str	w2, [sp, #28]
   1e2b4:	ldr	x0, [sp, #40]
   1e2b8:	ldr	x1, [sp, #32]
   1e2bc:	ldrsw	x2, [sp, #28]
   1e2c0:	mov	x3, x2
   1e2c4:	mov	x2, x1
   1e2c8:	mov	x1, x0
   1e2cc:	mov	x0, #0xe2                  	// #226
   1e2d0:	bl	1e0e0 <__sanitizer_set_report_fd@@Base+0x3f34>
   1e2d4:	ldr	x30, [sp], #48
   1e2d8:	ret
   1e2dc:	str	x30, [sp, #-32]!
   1e2e0:	str	w0, [sp, #28]
   1e2e4:	ldrsw	x0, [sp, #28]
   1e2e8:	mov	x1, x0
   1e2ec:	mov	x0, #0x39                  	// #57
   1e2f0:	bl	1e098 <__sanitizer_set_report_fd@@Base+0x3eec>
   1e2f4:	ldr	x30, [sp], #32
   1e2f8:	ret
   1e2fc:	str	x30, [sp, #-32]!
   1e300:	str	x0, [sp, #24]
   1e304:	str	w1, [sp, #20]
   1e308:	ldr	x0, [sp, #24]
   1e30c:	ldrsw	x1, [sp, #20]
   1e310:	mov	x3, x1
   1e314:	mov	x2, x0
   1e318:	mov	x1, #0xffffffffffffff9c    	// #-100
   1e31c:	mov	x0, #0x38                  	// #56
   1e320:	bl	1e0e0 <__sanitizer_set_report_fd@@Base+0x3f34>
   1e324:	ldr	x30, [sp], #32
   1e328:	ret
   1e32c:	str	x30, [sp, #-32]!
   1e330:	str	x0, [sp, #24]
   1e334:	str	w1, [sp, #20]
   1e338:	str	w2, [sp, #16]
   1e33c:	ldr	x0, [sp, #24]
   1e340:	ldrsw	x1, [sp, #20]
   1e344:	ldr	w2, [sp, #16]
   1e348:	mov	x4, x2
   1e34c:	mov	x3, x1
   1e350:	mov	x2, x0
   1e354:	mov	x1, #0xffffffffffffff9c    	// #-100
   1e358:	mov	x0, #0x38                  	// #56
   1e35c:	bl	1e110 <__sanitizer_set_report_fd@@Base+0x3f64>
   1e360:	ldr	x30, [sp], #32
   1e364:	ret
   1e368:	str	x30, [sp, #-64]!
   1e36c:	str	w0, [sp, #44]
   1e370:	str	x1, [sp, #32]
   1e374:	str	x2, [sp, #24]
   1e378:	ldrsw	x0, [sp, #44]
   1e37c:	ldr	x1, [sp, #32]
   1e380:	ldr	x2, [sp, #24]
   1e384:	mov	x3, x2
   1e388:	mov	x2, x1
   1e38c:	mov	x1, x0
   1e390:	mov	x0, #0x3f                  	// #63
   1e394:	bl	1e0e0 <__sanitizer_set_report_fd@@Base+0x3f34>
   1e398:	str	x0, [sp, #56]
   1e39c:	ldr	x0, [sp, #56]
   1e3a0:	add	x1, sp, #0x34
   1e3a4:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   1e3a8:	and	w0, w0, #0xff
   1e3ac:	cmp	w0, #0x0
   1e3b0:	b.eq	1e3c8 <__sanitizer_set_report_fd@@Base+0x421c>  // b.none
   1e3b4:	ldr	w0, [sp, #52]
   1e3b8:	cmp	w0, #0x4
   1e3bc:	b.ne	1e3c8 <__sanitizer_set_report_fd@@Base+0x421c>  // b.any
   1e3c0:	mov	w0, #0x1                   	// #1
   1e3c4:	b	1e3cc <__sanitizer_set_report_fd@@Base+0x4220>
   1e3c8:	mov	w0, #0x0                   	// #0
   1e3cc:	cmp	w0, #0x0
   1e3d0:	b.eq	1e3d8 <__sanitizer_set_report_fd@@Base+0x422c>  // b.none
   1e3d4:	b	1e378 <__sanitizer_set_report_fd@@Base+0x41cc>
   1e3d8:	ldr	x0, [sp, #56]
   1e3dc:	ldr	x30, [sp], #64
   1e3e0:	ret
   1e3e4:	str	x30, [sp, #-64]!
   1e3e8:	str	w0, [sp, #44]
   1e3ec:	str	x1, [sp, #32]
   1e3f0:	str	x2, [sp, #24]
   1e3f4:	ldrsw	x0, [sp, #44]
   1e3f8:	ldr	x1, [sp, #32]
   1e3fc:	ldr	x2, [sp, #24]
   1e400:	mov	x3, x2
   1e404:	mov	x2, x1
   1e408:	mov	x1, x0
   1e40c:	mov	x0, #0x40                  	// #64
   1e410:	bl	1e0e0 <__sanitizer_set_report_fd@@Base+0x3f34>
   1e414:	str	x0, [sp, #56]
   1e418:	ldr	x0, [sp, #56]
   1e41c:	add	x1, sp, #0x34
   1e420:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   1e424:	and	w0, w0, #0xff
   1e428:	cmp	w0, #0x0
   1e42c:	b.eq	1e444 <__sanitizer_set_report_fd@@Base+0x4298>  // b.none
   1e430:	ldr	w0, [sp, #52]
   1e434:	cmp	w0, #0x4
   1e438:	b.ne	1e444 <__sanitizer_set_report_fd@@Base+0x4298>  // b.any
   1e43c:	mov	w0, #0x1                   	// #1
   1e440:	b	1e448 <__sanitizer_set_report_fd@@Base+0x429c>
   1e444:	mov	w0, #0x0                   	// #0
   1e448:	cmp	w0, #0x0
   1e44c:	b.eq	1e454 <__sanitizer_set_report_fd@@Base+0x42a8>  // b.none
   1e450:	b	1e3f4 <__sanitizer_set_report_fd@@Base+0x4248>
   1e454:	ldr	x0, [sp, #56]
   1e458:	ldr	x30, [sp], #64
   1e45c:	ret
   1e460:	str	x30, [sp, #-48]!
   1e464:	str	w0, [sp, #28]
   1e468:	str	x1, [sp, #16]
   1e46c:	ldrsw	x0, [sp, #28]
   1e470:	ldr	x1, [sp, #16]
   1e474:	mov	x2, x1
   1e478:	mov	x1, x0
   1e47c:	mov	x0, #0x2e                  	// #46
   1e480:	bl	1e0b8 <__sanitizer_set_report_fd@@Base+0x3f0c>
   1e484:	str	x0, [sp, #40]
   1e488:	ldr	x0, [sp, #40]
   1e48c:	add	x1, sp, #0x24
   1e490:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   1e494:	and	w0, w0, #0xff
   1e498:	cmp	w0, #0x0
   1e49c:	b.eq	1e4b4 <__sanitizer_set_report_fd@@Base+0x4308>  // b.none
   1e4a0:	ldr	w0, [sp, #36]
   1e4a4:	cmp	w0, #0x4
   1e4a8:	b.ne	1e4b4 <__sanitizer_set_report_fd@@Base+0x4308>  // b.any
   1e4ac:	mov	w0, #0x1                   	// #1
   1e4b0:	b	1e4b8 <__sanitizer_set_report_fd@@Base+0x430c>
   1e4b4:	mov	w0, #0x0                   	// #0
   1e4b8:	cmp	w0, #0x0
   1e4bc:	b.eq	1e4c4 <__sanitizer_set_report_fd@@Base+0x4318>  // b.none
   1e4c0:	b	1e46c <__sanitizer_set_report_fd@@Base+0x42c0>
   1e4c4:	ldr	x0, [sp, #40]
   1e4c8:	ldr	x30, [sp], #48
   1e4cc:	ret
   1e4d0:	str	x30, [sp, #-32]!
   1e4d4:	str	x0, [sp, #24]
   1e4d8:	str	x1, [sp, #16]
   1e4dc:	ldr	x0, [sp, #24]
   1e4e0:	ldr	x1, [sp, #16]
   1e4e4:	mov	x4, #0x0                   	// #0
   1e4e8:	mov	x3, x1
   1e4ec:	mov	x2, x0
   1e4f0:	mov	x1, #0xffffffffffffff9c    	// #-100
   1e4f4:	mov	x0, #0x4f                  	// #79
   1e4f8:	bl	1e110 <__sanitizer_set_report_fd@@Base+0x3f64>
   1e4fc:	ldr	x30, [sp], #32
   1e500:	ret
   1e504:	str	x30, [sp, #-32]!
   1e508:	str	x0, [sp, #24]
   1e50c:	str	x1, [sp, #16]
   1e510:	ldr	x0, [sp, #24]
   1e514:	ldr	x1, [sp, #16]
   1e518:	mov	x4, #0x100                 	// #256
   1e51c:	mov	x3, x1
   1e520:	mov	x2, x0
   1e524:	mov	x1, #0xffffffffffffff9c    	// #-100
   1e528:	mov	x0, #0x4f                  	// #79
   1e52c:	bl	1e110 <__sanitizer_set_report_fd@@Base+0x3f64>
   1e530:	ldr	x30, [sp], #32
   1e534:	ret
   1e538:	str	x30, [sp, #-32]!
   1e53c:	str	w0, [sp, #28]
   1e540:	str	x1, [sp, #16]
   1e544:	ldrsw	x0, [sp, #28]
   1e548:	ldr	x1, [sp, #16]
   1e54c:	mov	x2, x1
   1e550:	mov	x1, x0
   1e554:	mov	x0, #0x50                  	// #80
   1e558:	bl	1e0b8 <__sanitizer_set_report_fd@@Base+0x3f0c>
   1e55c:	ldr	x30, [sp], #32
   1e560:	ret
   1e564:	str	x30, [sp, #-160]!
   1e568:	str	w0, [sp, #28]
   1e56c:	add	x0, sp, #0x20
   1e570:	mov	x1, x0
   1e574:	ldr	w0, [sp, #28]
   1e578:	bl	1e538 <__sanitizer_set_report_fd@@Base+0x438c>
   1e57c:	cmp	x0, #0x0
   1e580:	cset	w0, ne  // ne = any
   1e584:	and	w0, w0, #0xff
   1e588:	cmp	w0, #0x0
   1e58c:	b.eq	1e598 <__sanitizer_set_report_fd@@Base+0x43ec>  // b.none
   1e590:	mov	x0, #0xffffffffffffffff    	// #-1
   1e594:	b	1e59c <__sanitizer_set_report_fd@@Base+0x43f0>
   1e598:	ldr	x0, [sp, #80]
   1e59c:	ldr	x30, [sp], #160
   1e5a0:	ret
   1e5a4:	str	x30, [sp, #-32]!
   1e5a8:	str	w0, [sp, #28]
   1e5ac:	str	w1, [sp, #24]
   1e5b0:	ldrsw	x0, [sp, #28]
   1e5b4:	ldrsw	x1, [sp, #24]
   1e5b8:	mov	x3, #0x0                   	// #0
   1e5bc:	mov	x2, x1
   1e5c0:	mov	x1, x0
   1e5c4:	mov	x0, #0x18                  	// #24
   1e5c8:	bl	1e0e0 <__sanitizer_set_report_fd@@Base+0x3f34>
   1e5cc:	ldr	x30, [sp], #32
   1e5d0:	ret
   1e5d4:	str	x30, [sp, #-48]!
   1e5d8:	str	x0, [sp, #40]
   1e5dc:	str	x1, [sp, #32]
   1e5e0:	str	x2, [sp, #24]
   1e5e4:	ldr	x0, [sp, #40]
   1e5e8:	ldr	x1, [sp, #32]
   1e5ec:	ldr	x4, [sp, #24]
   1e5f0:	mov	x3, x1
   1e5f4:	mov	x2, x0
   1e5f8:	mov	x1, #0xffffffffffffff9c    	// #-100
   1e5fc:	mov	x0, #0x4e                  	// #78
   1e600:	bl	1e110 <__sanitizer_set_report_fd@@Base+0x3f64>
   1e604:	ldr	x30, [sp], #48
   1e608:	ret
   1e60c:	str	x30, [sp, #-32]!
   1e610:	str	x0, [sp, #24]
   1e614:	ldr	x0, [sp, #24]
   1e618:	mov	x3, #0x0                   	// #0
   1e61c:	mov	x2, x0
   1e620:	mov	x1, #0xffffffffffffff9c    	// #-100
   1e624:	mov	x0, #0x23                  	// #35
   1e628:	bl	1e0e0 <__sanitizer_set_report_fd@@Base+0x3f34>
   1e62c:	ldr	x30, [sp], #32
   1e630:	ret
   1e634:	str	x30, [sp, #-32]!
   1e638:	str	x0, [sp, #24]
   1e63c:	str	x1, [sp, #16]
   1e640:	ldr	x0, [sp, #24]
   1e644:	ldr	x1, [sp, #16]
   1e648:	mov	x4, x1
   1e64c:	mov	x3, #0xffffffffffffff9c    	// #-100
   1e650:	mov	x2, x0
   1e654:	mov	x1, #0xffffffffffffff9c    	// #-100
   1e658:	mov	x0, #0x26                  	// #38
   1e65c:	bl	1e110 <__sanitizer_set_report_fd@@Base+0x3f64>
   1e660:	ldr	x30, [sp], #32
   1e664:	ret
   1e668:	str	x30, [sp, #-16]!
   1e66c:	mov	x0, #0x7c                  	// #124
   1e670:	bl	1e080 <__sanitizer_set_report_fd@@Base+0x3ed4>
   1e674:	ldr	x30, [sp], #16
   1e678:	ret
   1e67c:	str	x30, [sp, #-32]!
   1e680:	str	w0, [sp, #28]
   1e684:	ldrsw	x0, [sp, #28]
   1e688:	mov	x1, x0
   1e68c:	mov	x0, #0x5e                  	// #94
   1e690:	bl	1e098 <__sanitizer_set_report_fd@@Base+0x3eec>
   1e694:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   1e698:	str	x30, [sp, #-64]!
   1e69c:	str	w0, [sp, #28]
   1e6a0:	mov	x0, #0x1                   	// #1
   1e6a4:	str	x0, [sp, #40]
   1e6a8:	str	xzr, [sp, #48]
   1e6ac:	add	x0, sp, #0x28
   1e6b0:	add	x1, sp, #0x28
   1e6b4:	mov	x2, x1
   1e6b8:	mov	x1, x0
   1e6bc:	mov	x0, #0x65                  	// #101
   1e6c0:	bl	1e0b8 <__sanitizer_set_report_fd@@Base+0x3f0c>
   1e6c4:	str	w0, [sp, #60]
   1e6c8:	ldr	w0, [sp, #60]
   1e6cc:	cmp	w0, #0x0
   1e6d0:	b.eq	1e6dc <__sanitizer_set_report_fd@@Base+0x4530>  // b.none
   1e6d4:	ldr	x0, [sp, #40]
   1e6d8:	b	1e6e0 <__sanitizer_set_report_fd@@Base+0x4534>
   1e6dc:	mov	w0, #0x0                   	// #0
   1e6e0:	ldr	x30, [sp], #64
   1e6e4:	ret
   1e6e8:	str	x30, [sp, #-48]!
   1e6ec:	str	x0, [sp, #40]
   1e6f0:	str	x1, [sp, #32]
   1e6f4:	str	x2, [sp, #24]
   1e6f8:	ldr	x0, [sp, #40]
   1e6fc:	ldr	x1, [sp, #32]
   1e700:	ldr	x2, [sp, #24]
   1e704:	mov	x3, x2
   1e708:	mov	x2, x1
   1e70c:	mov	x1, x0
   1e710:	mov	x0, #0xdd                  	// #221
   1e714:	bl	1e0e0 <__sanitizer_set_report_fd@@Base+0x3f34>
   1e718:	ldr	x30, [sp], #48
   1e71c:	ret
   1e720:	str	x30, [sp, #-160]!
   1e724:	str	x0, [sp, #24]
   1e728:	ldr	x0, [sp, #24]
   1e72c:	add	x1, sp, #0x20
   1e730:	mov	x4, #0x0                   	// #0
   1e734:	mov	x3, x1
   1e738:	mov	x2, x0
   1e73c:	mov	x1, #0xffffffffffffff9c    	// #-100
   1e740:	mov	x0, #0x4f                  	// #79
   1e744:	bl	1e110 <__sanitizer_set_report_fd@@Base+0x3f64>
   1e748:	cmp	x0, #0x0
   1e74c:	cset	w0, ne  // ne = any
   1e750:	and	w0, w0, #0xff
   1e754:	cmp	w0, #0x0
   1e758:	b.eq	1e764 <__sanitizer_set_report_fd@@Base+0x45b8>  // b.none
   1e75c:	mov	w0, #0x0                   	// #0
   1e760:	b	1e778 <__sanitizer_set_report_fd@@Base+0x45cc>
   1e764:	ldr	w0, [sp, #48]
   1e768:	and	w0, w0, #0xf000
   1e76c:	cmp	w0, #0x8, lsl #12
   1e770:	cset	w0, eq  // eq = none
   1e774:	and	w0, w0, #0xff
   1e778:	ldr	x30, [sp], #160
   1e77c:	ret
   1e780:	str	x30, [sp, #-16]!
   1e784:	mov	x0, #0xb2                  	// #178
   1e788:	bl	1e080 <__sanitizer_set_report_fd@@Base+0x3ed4>
   1e78c:	ldr	x30, [sp], #16
   1e790:	ret
   1e794:	str	x30, [sp, #-32]!
   1e798:	str	w0, [sp, #28]
   1e79c:	str	x1, [sp, #16]
   1e7a0:	str	w2, [sp, #24]
   1e7a4:	ldrsw	x0, [sp, #28]
   1e7a8:	ldr	x1, [sp, #16]
   1e7ac:	ldrsw	x2, [sp, #24]
   1e7b0:	mov	x3, x2
   1e7b4:	mov	x2, x1
   1e7b8:	mov	x1, x0
   1e7bc:	mov	x0, #0x83                  	// #131
   1e7c0:	bl	1e0e0 <__sanitizer_set_report_fd@@Base+0x3f34>
   1e7c4:	ldr	x30, [sp], #32
   1e7c8:	ret
   1e7cc:	str	x30, [sp, #-32]!
   1e7d0:	add	x0, sp, #0x10
   1e7d4:	mov	x2, #0x10                  	// #16
   1e7d8:	mov	w1, #0x0                   	// #0
   1e7dc:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   1e7e0:	add	x0, sp, #0x10
   1e7e4:	mov	x2, #0x0                   	// #0
   1e7e8:	mov	x1, x0
   1e7ec:	mov	x0, #0xa9                  	// #169
   1e7f0:	bl	1e0b8 <__sanitizer_set_report_fd@@Base+0x3f0c>
   1e7f4:	ldr	x0, [sp, #16]
   1e7f8:	mov	x1, x0
   1e7fc:	mov	x0, #0xca00                	// #51712
   1e800:	movk	x0, #0x3b9a, lsl #16
   1e804:	mul	x2, x1, x0
   1e808:	ldr	x1, [sp, #24]
   1e80c:	mov	x0, x1
   1e810:	lsl	x0, x0, #5
   1e814:	sub	x0, x0, x1
   1e818:	lsl	x0, x0, #2
   1e81c:	add	x0, x0, x1
   1e820:	lsl	x0, x0, #3
   1e824:	add	x0, x2, x0
   1e828:	ldr	x30, [sp], #32
   1e82c:	ret
   1e830:	str	x30, [sp, #-32]!
   1e834:	str	w0, [sp, #28]
   1e838:	str	x1, [sp, #16]
   1e83c:	ldrsw	x0, [sp, #28]
   1e840:	ldr	x1, [sp, #16]
   1e844:	mov	x2, x1
   1e848:	mov	x1, x0
   1e84c:	mov	x0, #0x71                  	// #113
   1e850:	bl	1e0b8 <__sanitizer_set_report_fd@@Base+0x3f0c>
   1e854:	ldr	x30, [sp], #32
   1e858:	ret
   1e85c:	str	x30, [sp, #-64]!
   1e860:	str	x0, [sp, #24]
   1e864:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   1e868:	add	x0, x0, #0xd98
   1e86c:	ldrb	w0, [x0]
   1e870:	eor	w0, w0, #0x1
   1e874:	and	w0, w0, #0xff
   1e878:	cmp	w0, #0x0
   1e87c:	b.eq	1e8dc <__sanitizer_set_report_fd@@Base+0x4730>  // b.none
   1e880:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   1e884:	add	x0, x0, #0xd98
   1e888:	mov	w1, #0x1                   	// #1
   1e88c:	strb	w1, [x0]
   1e890:	add	x1, sp, #0x20
   1e894:	mov	x5, #0x0                   	// #0
   1e898:	mov	x4, #0x4000000             	// #67108864
   1e89c:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   1e8a0:	add	x3, x0, #0xd90
   1e8a4:	mov	x2, x1
   1e8a8:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   1e8ac:	add	x1, x0, #0xd88
   1e8b0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1e8b4:	add	x0, x0, #0x538
   1e8b8:	bl	19bf0 <__sanitizer_cov_pcs_init@@Base+0x412c>
   1e8bc:	and	w0, w0, #0xff
   1e8c0:	eor	w0, w0, #0x1
   1e8c4:	and	w0, w0, #0xff
   1e8c8:	cmp	w0, #0x0
   1e8cc:	b.eq	1e8dc <__sanitizer_set_report_fd@@Base+0x4730>  // b.none
   1e8d0:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   1e8d4:	add	x0, x0, #0xd88
   1e8d8:	str	xzr, [x0]
   1e8dc:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   1e8e0:	add	x0, x0, #0xd88
   1e8e4:	ldr	x0, [x0]
   1e8e8:	cmp	x0, #0x0
   1e8ec:	b.eq	1e904 <__sanitizer_set_report_fd@@Base+0x4758>  // b.none
   1e8f0:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   1e8f4:	add	x0, x0, #0xd90
   1e8f8:	ldr	x0, [x0]
   1e8fc:	cmp	x0, #0x0
   1e900:	b.ne	1e90c <__sanitizer_set_report_fd@@Base+0x4760>  // b.any
   1e904:	mov	x0, #0x0                   	// #0
   1e908:	b	1e9f0 <__sanitizer_set_report_fd@@Base+0x4844>
   1e90c:	ldr	x0, [sp, #24]
   1e910:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   1e914:	str	x0, [sp, #48]
   1e918:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   1e91c:	add	x0, x0, #0xd88
   1e920:	ldr	x0, [x0]
   1e924:	str	x0, [sp, #56]
   1e928:	ldr	x0, [sp, #56]
   1e92c:	ldrb	w0, [x0]
   1e930:	cmp	w0, #0x0
   1e934:	b.eq	1e9ec <__sanitizer_set_report_fd@@Base+0x4840>  // b.none
   1e938:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   1e93c:	add	x0, x0, #0xd90
   1e940:	ldr	x0, [x0]
   1e944:	adrp	x1, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   1e948:	add	x1, x1, #0xd88
   1e94c:	ldr	x1, [x1]
   1e950:	ldr	x2, [sp, #56]
   1e954:	sub	x1, x2, x1
   1e958:	sub	x0, x0, x1
   1e95c:	mov	x2, x0
   1e960:	mov	w1, #0x0                   	// #0
   1e964:	ldr	x0, [sp, #56]
   1e968:	bl	1c588 <__sanitizer_set_report_fd@@Base+0x23dc>
   1e96c:	str	x0, [sp, #40]
   1e970:	ldr	x0, [sp, #40]
   1e974:	cmp	x0, #0x0
   1e978:	b.ne	1e984 <__sanitizer_set_report_fd@@Base+0x47d8>  // b.any
   1e97c:	mov	x0, #0x0                   	// #0
   1e980:	b	1e9f0 <__sanitizer_set_report_fd@@Base+0x4844>
   1e984:	ldr	x2, [sp, #48]
   1e988:	ldr	x1, [sp, #24]
   1e98c:	ldr	x0, [sp, #56]
   1e990:	bl	1c674 <__sanitizer_set_report_fd@@Base+0x24c8>
   1e994:	cmp	w0, #0x0
   1e998:	b.ne	1e9bc <__sanitizer_set_report_fd@@Base+0x4810>  // b.any
   1e99c:	ldr	x1, [sp, #56]
   1e9a0:	ldr	x0, [sp, #48]
   1e9a4:	add	x0, x1, x0
   1e9a8:	ldrb	w0, [x0]
   1e9ac:	cmp	w0, #0x3d
   1e9b0:	b.ne	1e9bc <__sanitizer_set_report_fd@@Base+0x4810>  // b.any
   1e9b4:	mov	w0, #0x1                   	// #1
   1e9b8:	b	1e9c0 <__sanitizer_set_report_fd@@Base+0x4814>
   1e9bc:	mov	w0, #0x0                   	// #0
   1e9c0:	cmp	w0, #0x0
   1e9c4:	b.eq	1e9dc <__sanitizer_set_report_fd@@Base+0x4830>  // b.none
   1e9c8:	ldr	x0, [sp, #48]
   1e9cc:	add	x0, x0, #0x1
   1e9d0:	ldr	x1, [sp, #56]
   1e9d4:	add	x0, x1, x0
   1e9d8:	b	1e9f0 <__sanitizer_set_report_fd@@Base+0x4844>
   1e9dc:	ldr	x0, [sp, #40]
   1e9e0:	add	x0, x0, #0x1
   1e9e4:	str	x0, [sp, #56]
   1e9e8:	b	1e928 <__sanitizer_set_report_fd@@Base+0x477c>
   1e9ec:	mov	x0, #0x0                   	// #0
   1e9f0:	ldr	x30, [sp], #64
   1e9f4:	ret
   1e9f8:	str	x30, [sp, #-96]!
   1e9fc:	str	x0, [sp, #40]
   1ea00:	str	x1, [sp, #32]
   1ea04:	str	w2, [sp, #28]
   1ea08:	ldrsw	x0, [sp, #28]
   1ea0c:	lsl	x3, x0, #3
   1ea10:	mov	w2, #0x0                   	// #0
   1ea14:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1ea18:	add	x1, x0, #0x550
   1ea1c:	mov	x0, x3
   1ea20:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   1ea24:	mov	x1, x0
   1ea28:	ldr	x0, [sp, #32]
   1ea2c:	str	x1, [x0]
   1ea30:	add	x2, sp, #0x30
   1ea34:	add	x1, sp, #0x38
   1ea38:	add	x0, sp, #0x40
   1ea3c:	mov	x5, #0x0                   	// #0
   1ea40:	mov	x4, #0x100000              	// #1048576
   1ea44:	mov	x3, x2
   1ea48:	mov	x2, x1
   1ea4c:	mov	x1, x0
   1ea50:	ldr	x0, [sp, #40]
   1ea54:	bl	19bf0 <__sanitizer_cov_pcs_init@@Base+0x412c>
   1ea58:	and	w0, w0, #0xff
   1ea5c:	eor	w0, w0, #0x1
   1ea60:	and	w0, w0, #0xff
   1ea64:	cmp	w0, #0x0
   1ea68:	b.eq	1ea7c <__sanitizer_set_report_fd@@Base+0x48d0>  // b.none
   1ea6c:	ldr	x0, [sp, #32]
   1ea70:	ldr	x0, [x0]
   1ea74:	str	xzr, [x0]
   1ea78:	b	1eb88 <__sanitizer_set_report_fd@@Base+0x49dc>
   1ea7c:	ldr	x0, [sp, #32]
   1ea80:	ldr	x0, [x0]
   1ea84:	ldr	x1, [sp, #64]
   1ea88:	str	x1, [x0]
   1ea8c:	mov	w0, #0x1                   	// #1
   1ea90:	str	w0, [sp, #92]
   1ea94:	mov	w0, #0x1                   	// #1
   1ea98:	str	w0, [sp, #88]
   1ea9c:	ldr	x1, [sp, #64]
   1eaa0:	ldrsw	x0, [sp, #88]
   1eaa4:	add	x0, x1, x0
   1eaa8:	ldrb	w0, [x0]
   1eaac:	cmp	w0, #0x0
   1eab0:	b.ne	1eb5c <__sanitizer_set_report_fd@@Base+0x49b0>  // b.any
   1eab4:	ldr	x1, [sp, #64]
   1eab8:	ldrsw	x0, [sp, #88]
   1eabc:	add	x0, x0, #0x1
   1eac0:	add	x0, x1, x0
   1eac4:	ldrb	w0, [x0]
   1eac8:	cmp	w0, #0x0
   1eacc:	b.eq	1eb6c <__sanitizer_set_report_fd@@Base+0x49c0>  // b.none
   1ead0:	ldr	x2, [sp, #64]
   1ead4:	ldrsw	x0, [sp, #88]
   1ead8:	add	x1, x0, #0x1
   1eadc:	ldr	x0, [sp, #32]
   1eae0:	ldr	x3, [x0]
   1eae4:	ldrsw	x0, [sp, #92]
   1eae8:	lsl	x0, x0, #3
   1eaec:	add	x0, x3, x0
   1eaf0:	add	x1, x2, x1
   1eaf4:	str	x1, [x0]
   1eaf8:	ldrsw	x0, [sp, #92]
   1eafc:	str	x0, [sp, #80]
   1eb00:	ldr	w0, [sp, #28]
   1eb04:	sub	w0, w0, #0x1
   1eb08:	sxtw	x0, w0
   1eb0c:	str	x0, [sp, #72]
   1eb10:	ldr	x1, [sp, #80]
   1eb14:	ldr	x0, [sp, #72]
   1eb18:	cmp	x1, x0
   1eb1c:	cset	w0, hi  // hi = pmore
   1eb20:	and	w0, w0, #0xff
   1eb24:	and	x0, x0, #0xff
   1eb28:	cmp	x0, #0x0
   1eb2c:	b.eq	1eb50 <__sanitizer_set_report_fd@@Base+0x49a4>  // b.none
   1eb30:	ldr	x4, [sp, #72]
   1eb34:	ldr	x3, [sp, #80]
   1eb38:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1eb3c:	add	x2, x0, #0x568
   1eb40:	mov	w1, #0x23f                 	// #575
   1eb44:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1eb48:	add	x0, x0, #0x588
   1eb4c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1eb50:	ldr	w0, [sp, #92]
   1eb54:	add	w0, w0, #0x1
   1eb58:	str	w0, [sp, #92]
   1eb5c:	ldr	w0, [sp, #88]
   1eb60:	add	w0, w0, #0x1
   1eb64:	str	w0, [sp, #88]
   1eb68:	b	1ea9c <__sanitizer_set_report_fd@@Base+0x48f0>
   1eb6c:	nop
   1eb70:	ldr	x0, [sp, #32]
   1eb74:	ldr	x1, [x0]
   1eb78:	ldrsw	x0, [sp, #92]
   1eb7c:	lsl	x0, x0, #3
   1eb80:	add	x0, x1, x0
   1eb84:	str	xzr, [x0]
   1eb88:	ldr	x30, [sp], #96
   1eb8c:	ret
   1eb90:	str	x30, [sp, #-48]!
   1eb94:	str	x0, [sp, #24]
   1eb98:	str	x1, [sp, #16]
   1eb9c:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1eba0:	ldr	x0, [x0, #4048]
   1eba4:	cmp	x0, #0x0
   1eba8:	b.eq	1ebf8 <__sanitizer_set_report_fd@@Base+0x4a4c>  // b.none
   1ebac:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   1ebb0:	ldr	x0, [x0, #4048]
   1ebb4:	ldr	x0, [x0]
   1ebb8:	str	x0, [sp, #40]
   1ebbc:	ldr	x0, [sp, #40]
   1ebc0:	ldr	x0, [x0]
   1ebc4:	str	w0, [sp, #36]
   1ebc8:	ldr	x0, [sp, #40]
   1ebcc:	add	x1, x0, #0x8
   1ebd0:	ldr	x0, [sp, #24]
   1ebd4:	str	x1, [x0]
   1ebd8:	ldrsw	x0, [sp, #36]
   1ebdc:	add	x0, x0, #0x2
   1ebe0:	lsl	x0, x0, #3
   1ebe4:	ldr	x1, [sp, #40]
   1ebe8:	add	x1, x1, x0
   1ebec:	ldr	x0, [sp, #16]
   1ebf0:	str	x1, [x0]
   1ebf4:	b	1ec20 <__sanitizer_set_report_fd@@Base+0x4a74>
   1ebf8:	mov	w2, #0x7d0                 	// #2000
   1ebfc:	ldr	x1, [sp, #24]
   1ec00:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1ec04:	add	x0, x0, #0x5d0
   1ec08:	bl	1e9f8 <__sanitizer_set_report_fd@@Base+0x484c>
   1ec0c:	mov	w2, #0x7d0                 	// #2000
   1ec10:	ldr	x1, [sp, #16]
   1ec14:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1ec18:	add	x0, x0, #0x538
   1ec1c:	bl	1e9f8 <__sanitizer_set_report_fd@@Base+0x484c>
   1ec20:	nop
   1ec24:	ldr	x30, [sp], #48
   1ec28:	ret
   1ec2c:	str	x30, [sp, #-32]!
   1ec30:	add	x1, sp, #0x10
   1ec34:	add	x0, sp, #0x18
   1ec38:	bl	1eb90 <__sanitizer_set_report_fd@@Base+0x49e4>
   1ec3c:	ldr	x0, [sp, #24]
   1ec40:	ldr	x30, [sp], #32
   1ec44:	ret
   1ec48:	str	x30, [sp, #-80]!
   1ec4c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1ec50:	add	x0, x0, #0x5e8
   1ec54:	str	x0, [sp, #72]
   1ec58:	add	x1, sp, #0x20
   1ec5c:	add	x0, sp, #0x28
   1ec60:	bl	1eb90 <__sanitizer_set_report_fd@@Base+0x49e4>
   1ec64:	ldr	x0, [sp, #40]
   1ec68:	ldr	x1, [sp, #32]
   1ec6c:	mov	x2, x1
   1ec70:	mov	x1, x0
   1ec74:	ldr	x0, [sp, #72]
   1ec78:	bl	1e6e8 <__sanitizer_set_report_fd@@Base+0x453c>
   1ec7c:	str	x0, [sp, #64]
   1ec80:	add	x0, sp, #0x1c
   1ec84:	mov	x1, x0
   1ec88:	ldr	x0, [sp, #64]
   1ec8c:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   1ec90:	and	w0, w0, #0xff
   1ec94:	and	x0, x0, #0xff
   1ec98:	str	x0, [sp, #56]
   1ec9c:	mov	x0, #0x1                   	// #1
   1eca0:	str	x0, [sp, #48]
   1eca4:	ldr	x1, [sp, #56]
   1eca8:	ldr	x0, [sp, #48]
   1ecac:	cmp	x1, x0
   1ecb0:	cset	w0, ne  // ne = any
   1ecb4:	and	w0, w0, #0xff
   1ecb8:	and	x0, x0, #0xff
   1ecbc:	cmp	x0, #0x0
   1ecc0:	b.eq	1ece4 <__sanitizer_set_report_fd@@Base+0x4b38>  // b.none
   1ecc4:	ldr	x4, [sp, #48]
   1ecc8:	ldr	x3, [sp, #56]
   1eccc:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1ecd0:	add	x2, x0, #0x5f8
   1ecd4:	mov	w1, #0x286                 	// #646
   1ecd8:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1ecdc:	add	x0, x0, #0x588
   1ece0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1ece4:	ldr	w0, [sp, #28]
   1ece8:	mov	w1, w0
   1ecec:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1ecf0:	add	x0, x0, #0x628
   1ecf4:	bl	259c8 <OnPrint@@Base+0x3a8>
   1ecf8:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   1ecfc:	str	x30, [sp, #-32]!
   1ed00:	str	x0, [sp, #24]
   1ed04:	mov	x2, #0x58                  	// #88
   1ed08:	mov	w1, #0x0                   	// #0
   1ed0c:	ldr	x0, [sp, #24]
   1ed10:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   1ed14:	nop
   1ed18:	ldr	x30, [sp], #32
   1ed1c:	ret
   1ed20:	str	x30, [sp, #-64]!
   1ed24:	str	x0, [sp, #24]
   1ed28:	ldr	x0, [sp, #24]
   1ed2c:	ldr	x0, [x0, #80]
   1ed30:	str	x0, [sp, #56]
   1ed34:	str	xzr, [sp, #48]
   1ed38:	ldr	x1, [sp, #56]
   1ed3c:	ldr	x0, [sp, #48]
   1ed40:	cmp	x1, x0
   1ed44:	cset	w0, ne  // ne = any
   1ed48:	and	w0, w0, #0xff
   1ed4c:	and	x0, x0, #0xff
   1ed50:	cmp	x0, #0x0
   1ed54:	b.eq	1ed78 <__sanitizer_set_report_fd@@Base+0x4bcc>  // b.none
   1ed58:	ldr	x4, [sp, #48]
   1ed5c:	ldr	x3, [sp, #56]
   1ed60:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1ed64:	add	x2, x0, #0x648
   1ed68:	mov	w1, #0x298                 	// #664
   1ed6c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1ed70:	add	x0, x0, #0x588
   1ed74:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1ed78:	ldr	x0, [sp, #24]
   1ed7c:	str	x0, [sp, #40]
   1ed80:	mov	w2, #0x4                   	// #4
   1ed84:	mov	w1, #0x1                   	// #1
   1ed88:	ldr	x0, [sp, #40]
   1ed8c:	bl	e038 <__ubsan_handle_cfi_check_fail_abort@@Base+0x8d4>
   1ed90:	cmp	w0, #0x0
   1ed94:	cset	w0, eq  // eq = none
   1ed98:	and	w0, w0, #0xff
   1ed9c:	cmp	w0, #0x0
   1eda0:	b.ne	1edf0 <__sanitizer_set_report_fd@@Base+0x4c44>  // b.any
   1eda4:	mov	w2, #0x4                   	// #4
   1eda8:	mov	w1, #0x2                   	// #2
   1edac:	ldr	x0, [sp, #40]
   1edb0:	bl	e038 <__ubsan_handle_cfi_check_fail_abort@@Base+0x8d4>
   1edb4:	cmp	w0, #0x0
   1edb8:	cset	w0, ne  // ne = any
   1edbc:	and	w0, w0, #0xff
   1edc0:	cmp	w0, #0x0
   1edc4:	b.eq	1edf4 <__sanitizer_set_report_fd@@Base+0x4c48>  // b.none
   1edc8:	ldr	x0, [sp, #40]
   1edcc:	mov	x6, #0x0                   	// #0
   1edd0:	mov	x5, #0x0                   	// #0
   1edd4:	mov	x4, #0x0                   	// #0
   1edd8:	mov	x3, #0x2                   	// #2
   1eddc:	mov	x2, #0x80                  	// #128
   1ede0:	mov	x1, x0
   1ede4:	mov	x0, #0x62                  	// #98
   1ede8:	bl	1e188 <__sanitizer_set_report_fd@@Base+0x3fdc>
   1edec:	b	1eda4 <__sanitizer_set_report_fd@@Base+0x4bf8>
   1edf0:	nop
   1edf4:	ldr	x30, [sp], #64
   1edf8:	ret
   1edfc:	str	x30, [sp, #-64]!
   1ee00:	str	x0, [sp, #24]
   1ee04:	ldr	x0, [sp, #24]
   1ee08:	str	x0, [sp, #56]
   1ee0c:	mov	w2, #0x8                   	// #8
   1ee10:	mov	w1, #0x0                   	// #0
   1ee14:	ldr	x0, [sp, #56]
   1ee18:	bl	e038 <__ubsan_handle_cfi_check_fail_abort@@Base+0x8d4>
   1ee1c:	str	w0, [sp, #52]
   1ee20:	ldr	w0, [sp, #52]
   1ee24:	str	x0, [sp, #40]
   1ee28:	str	xzr, [sp, #32]
   1ee2c:	ldr	x1, [sp, #40]
   1ee30:	ldr	x0, [sp, #32]
   1ee34:	cmp	x1, x0
   1ee38:	cset	w0, eq  // eq = none
   1ee3c:	and	w0, w0, #0xff
   1ee40:	and	x0, x0, #0xff
   1ee44:	cmp	x0, #0x0
   1ee48:	b.eq	1ee6c <__sanitizer_set_report_fd@@Base+0x4cc0>  // b.none
   1ee4c:	ldr	x4, [sp, #32]
   1ee50:	ldr	x3, [sp, #40]
   1ee54:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1ee58:	add	x2, x0, #0x660
   1ee5c:	mov	w1, #0x2ab                 	// #683
   1ee60:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1ee64:	add	x0, x0, #0x588
   1ee68:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1ee6c:	ldr	w0, [sp, #52]
   1ee70:	cmp	w0, #0x2
   1ee74:	b.ne	1ee9c <__sanitizer_set_report_fd@@Base+0x4cf0>  // b.any
   1ee78:	ldr	x0, [sp, #56]
   1ee7c:	mov	x6, #0x0                   	// #0
   1ee80:	mov	x5, #0x0                   	// #0
   1ee84:	mov	x4, #0x0                   	// #0
   1ee88:	mov	x3, #0x1                   	// #1
   1ee8c:	mov	x2, #0x81                  	// #129
   1ee90:	mov	x1, x0
   1ee94:	mov	x0, #0x62                  	// #98
   1ee98:	bl	1e188 <__sanitizer_set_report_fd@@Base+0x3fdc>
   1ee9c:	nop
   1eea0:	ldr	x30, [sp], #64
   1eea4:	ret
   1eea8:	str	x30, [sp, #-64]!
   1eeac:	str	x0, [sp, #24]
   1eeb0:	ldr	x0, [sp, #24]
   1eeb4:	str	x0, [sp, #56]
   1eeb8:	str	xzr, [sp, #48]
   1eebc:	mov	w1, #0x1                   	// #1
   1eec0:	ldr	x0, [sp, #56]
   1eec4:	bl	9b44 <__ubsan_default_options@@Base+0x4e0>
   1eec8:	mov	w0, w0
   1eecc:	str	x0, [sp, #40]
   1eed0:	ldr	x1, [sp, #48]
   1eed4:	ldr	x0, [sp, #40]
   1eed8:	cmp	x1, x0
   1eedc:	cset	w0, eq  // eq = none
   1eee0:	and	w0, w0, #0xff
   1eee4:	and	x0, x0, #0xff
   1eee8:	cmp	x0, #0x0
   1eeec:	b.eq	1ef10 <__sanitizer_set_report_fd@@Base+0x4d64>  // b.none
   1eef0:	ldr	x4, [sp, #40]
   1eef4:	ldr	x3, [sp, #48]
   1eef8:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1eefc:	add	x2, x0, #0x680
   1ef00:	mov	w1, #0x2b9                 	// #697
   1ef04:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1ef08:	add	x0, x0, #0x588
   1ef0c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1ef10:	nop
   1ef14:	ldr	x30, [sp], #64
   1ef18:	ret
   1ef1c:	str	x30, [sp, #-48]!
   1ef20:	str	w0, [sp, #44]
   1ef24:	str	w1, [sp, #40]
   1ef28:	str	x2, [sp, #32]
   1ef2c:	str	x3, [sp, #24]
   1ef30:	ldrsw	x0, [sp, #44]
   1ef34:	ldrsw	x1, [sp, #40]
   1ef38:	ldr	x2, [sp, #32]
   1ef3c:	ldr	x3, [sp, #24]
   1ef40:	mov	x4, x3
   1ef44:	mov	x3, x2
   1ef48:	mov	x2, x1
   1ef4c:	mov	x1, x0
   1ef50:	mov	x0, #0x75                  	// #117
   1ef54:	bl	1e110 <__sanitizer_set_report_fd@@Base+0x3f64>
   1ef58:	ldr	x30, [sp], #48
   1ef5c:	ret
   1ef60:	str	x30, [sp, #-32]!
   1ef64:	str	w0, [sp, #28]
   1ef68:	str	x1, [sp, #16]
   1ef6c:	str	w2, [sp, #24]
   1ef70:	ldrsw	x0, [sp, #28]
   1ef74:	ldr	x1, [sp, #16]
   1ef78:	ldrsw	x2, [sp, #24]
   1ef7c:	mov	x4, #0x0                   	// #0
   1ef80:	mov	x3, x2
   1ef84:	mov	x2, x1
   1ef88:	mov	x1, x0
   1ef8c:	mov	x0, #0x104                 	// #260
   1ef90:	bl	1e110 <__sanitizer_set_report_fd@@Base+0x3f64>
   1ef94:	ldr	x30, [sp], #32
   1ef98:	ret
   1ef9c:	str	x30, [sp, #-16]!
   1efa0:	mov	x0, #0xac                  	// #172
   1efa4:	bl	1e080 <__sanitizer_set_report_fd@@Base+0x3ed4>
   1efa8:	ldr	x30, [sp], #16
   1efac:	ret
   1efb0:	str	x30, [sp, #-16]!
   1efb4:	mov	x0, #0xad                  	// #173
   1efb8:	bl	1e080 <__sanitizer_set_report_fd@@Base+0x3ed4>
   1efbc:	ldr	x30, [sp], #16
   1efc0:	ret
   1efc4:	str	x30, [sp, #-32]!
   1efc8:	str	w0, [sp, #28]
   1efcc:	str	x1, [sp, #16]
   1efd0:	str	w2, [sp, #24]
   1efd4:	ldrsw	x0, [sp, #28]
   1efd8:	ldr	x1, [sp, #16]
   1efdc:	ldr	w2, [sp, #24]
   1efe0:	mov	x3, x2
   1efe4:	mov	x2, x1
   1efe8:	mov	x1, x0
   1efec:	mov	x0, #0x3d                  	// #61
   1eff0:	bl	1e0e0 <__sanitizer_set_report_fd@@Base+0x3f34>
   1eff4:	ldr	x30, [sp], #32
   1eff8:	ret
   1effc:	str	x30, [sp, #-32]!
   1f000:	str	w0, [sp, #28]
   1f004:	str	x1, [sp, #16]
   1f008:	str	w2, [sp, #24]
   1f00c:	ldrsw	x0, [sp, #28]
   1f010:	ldr	x1, [sp, #16]
   1f014:	ldrsw	x2, [sp, #24]
   1f018:	mov	x3, x2
   1f01c:	mov	x2, x1
   1f020:	mov	x1, x0
   1f024:	mov	x0, #0x3e                  	// #62
   1f028:	bl	1e0e0 <__sanitizer_set_report_fd@@Base+0x3f34>
   1f02c:	ldr	x30, [sp], #32
   1f030:	ret
   1f034:	str	x30, [sp, #-64]!
   1f038:	str	w0, [sp, #60]
   1f03c:	str	x1, [sp, #48]
   1f040:	str	x2, [sp, #40]
   1f044:	str	x3, [sp, #32]
   1f048:	str	x4, [sp, #24]
   1f04c:	ldrsw	x0, [sp, #60]
   1f050:	ldr	x1, [sp, #48]
   1f054:	ldr	x2, [sp, #40]
   1f058:	ldr	x3, [sp, #24]
   1f05c:	mov	x5, x3
   1f060:	ldr	x4, [sp, #32]
   1f064:	mov	x3, x2
   1f068:	mov	x2, x1
   1f06c:	mov	x1, x0
   1f070:	mov	x0, #0xa7                  	// #167
   1f074:	bl	1e148 <__sanitizer_set_report_fd@@Base+0x3f9c>
   1f078:	ldr	x30, [sp], #64
   1f07c:	ret
   1f080:	str	x30, [sp, #-32]!
   1f084:	str	x0, [sp, #24]
   1f088:	str	x1, [sp, #16]
   1f08c:	ldr	x0, [sp, #24]
   1f090:	ldr	x1, [sp, #16]
   1f094:	mov	x2, x1
   1f098:	mov	x1, x0
   1f09c:	mov	x0, #0x84                  	// #132
   1f0a0:	bl	1e0b8 <__sanitizer_set_report_fd@@Base+0x3f0c>
   1f0a4:	ldr	x30, [sp], #32
   1f0a8:	ret
   1f0ac:	str	x30, [sp, #-16]!
   1f0b0:	mov	x2, #0x0                   	// #0
   1f0b4:	mov	x1, #0x11                  	// #17
   1f0b8:	mov	x0, #0xdc                  	// #220
   1f0bc:	bl	1e0b8 <__sanitizer_set_report_fd@@Base+0x3f0c>
   1f0c0:	ldr	x30, [sp], #16
   1f0c4:	ret
   1f0c8:	str	x30, [sp, #-144]!
   1f0cc:	str	w0, [sp, #44]
   1f0d0:	str	x1, [sp, #32]
   1f0d4:	str	x2, [sp, #24]
   1f0d8:	add	x0, sp, #0x58
   1f0dc:	mov	x2, #0x20                  	// #32
   1f0e0:	mov	w1, #0x0                   	// #0
   1f0e4:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   1f0e8:	add	x0, sp, #0x38
   1f0ec:	mov	x2, #0x20                  	// #32
   1f0f0:	mov	w1, #0x0                   	// #0
   1f0f4:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   1f0f8:	ldr	x0, [sp, #32]
   1f0fc:	str	x0, [sp, #136]
   1f100:	ldr	x0, [sp, #24]
   1f104:	str	x0, [sp, #128]
   1f108:	ldr	x0, [sp, #136]
   1f10c:	cmp	x0, #0x0
   1f110:	b.eq	1f164 <__sanitizer_set_report_fd@@Base+0x4fb8>  // b.none
   1f114:	ldr	x0, [sp, #136]
   1f118:	ldr	x0, [x0]
   1f11c:	str	x0, [sp, #88]
   1f120:	ldr	x0, [sp, #136]
   1f124:	ldr	x0, [x0]
   1f128:	str	x0, [sp, #88]
   1f12c:	ldr	x0, [sp, #136]
   1f130:	add	x1, x0, #0x8
   1f134:	add	x0, sp, #0x58
   1f138:	add	x0, x0, #0x18
   1f13c:	mov	x2, #0x8                   	// #8
   1f140:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   1f144:	ldr	x0, [sp, #136]
   1f148:	ldr	w0, [x0, #136]
   1f14c:	orr	w0, w0, #0x4000000
   1f150:	sxtw	x0, w0
   1f154:	str	x0, [sp, #96]
   1f158:	ldr	x0, [sp, #136]
   1f15c:	ldr	x0, [x0, #144]
   1f160:	str	x0, [sp, #104]
   1f164:	ldrsw	x5, [sp, #44]
   1f168:	ldr	x0, [sp, #136]
   1f16c:	cmp	x0, #0x0
   1f170:	b.eq	1f17c <__sanitizer_set_report_fd@@Base+0x4fd0>  // b.none
   1f174:	add	x0, sp, #0x58
   1f178:	b	1f180 <__sanitizer_set_report_fd@@Base+0x4fd4>
   1f17c:	mov	x0, #0x0                   	// #0
   1f180:	ldr	x1, [sp, #128]
   1f184:	cmp	x1, #0x0
   1f188:	b.eq	1f194 <__sanitizer_set_report_fd@@Base+0x4fe8>  // b.none
   1f18c:	add	x1, sp, #0x38
   1f190:	b	1f198 <__sanitizer_set_report_fd@@Base+0x4fec>
   1f194:	mov	x1, #0x0                   	// #0
   1f198:	mov	x4, #0x8                   	// #8
   1f19c:	mov	x3, x1
   1f1a0:	mov	x2, x0
   1f1a4:	mov	x1, x5
   1f1a8:	mov	x0, #0x86                  	// #134
   1f1ac:	bl	1e110 <__sanitizer_set_report_fd@@Base+0x3f64>
   1f1b0:	str	x0, [sp, #120]
   1f1b4:	ldr	x0, [sp, #120]
   1f1b8:	cmp	x0, #0x0
   1f1bc:	b.ne	1f220 <__sanitizer_set_report_fd@@Base+0x5074>  // b.any
   1f1c0:	ldr	x0, [sp, #128]
   1f1c4:	cmp	x0, #0x0
   1f1c8:	b.eq	1f220 <__sanitizer_set_report_fd@@Base+0x5074>  // b.none
   1f1cc:	ldr	x1, [sp, #56]
   1f1d0:	ldr	x0, [sp, #128]
   1f1d4:	str	x1, [x0]
   1f1d8:	ldr	x1, [sp, #56]
   1f1dc:	ldr	x0, [sp, #128]
   1f1e0:	str	x1, [x0]
   1f1e4:	ldr	x0, [sp, #128]
   1f1e8:	add	x3, x0, #0x8
   1f1ec:	add	x0, sp, #0x38
   1f1f0:	add	x0, x0, #0x18
   1f1f4:	mov	x2, #0x8                   	// #8
   1f1f8:	mov	x1, x0
   1f1fc:	mov	x0, x3
   1f200:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   1f204:	ldr	x0, [sp, #64]
   1f208:	mov	w1, w0
   1f20c:	ldr	x0, [sp, #128]
   1f210:	str	w1, [x0, #136]
   1f214:	ldr	x1, [sp, #72]
   1f218:	ldr	x0, [sp, #128]
   1f21c:	str	x1, [x0, #144]
   1f220:	ldr	x0, [sp, #120]
   1f224:	ldr	x30, [sp], #144
   1f228:	ret
   1f22c:	str	x30, [sp, #-64]!
   1f230:	str	w0, [sp, #44]
   1f234:	str	x1, [sp, #32]
   1f238:	str	x2, [sp, #24]
   1f23c:	ldr	x0, [sp, #32]
   1f240:	str	x0, [sp, #56]
   1f244:	ldr	x0, [sp, #24]
   1f248:	str	x0, [sp, #48]
   1f24c:	ldrsw	x0, [sp, #44]
   1f250:	ldr	x1, [sp, #56]
   1f254:	mov	x2, x1
   1f258:	ldr	x1, [sp, #48]
   1f25c:	mov	x4, #0x8                   	// #8
   1f260:	mov	x3, x1
   1f264:	mov	x1, x0
   1f268:	mov	x0, #0x87                  	// #135
   1f26c:	bl	1e110 <__sanitizer_set_report_fd@@Base+0x3f64>
   1f270:	ldr	x30, [sp], #64
   1f274:	ret
   1f278:	str	x30, [sp, #-32]!
   1f27c:	str	x0, [sp, #24]
   1f280:	mov	x2, #0x80                  	// #128
   1f284:	mov	w1, #0xff                  	// #255
   1f288:	ldr	x0, [sp, #24]
   1f28c:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   1f290:	nop
   1f294:	ldr	x30, [sp], #32
   1f298:	ret
   1f29c:	str	x30, [sp, #-32]!
   1f2a0:	str	x0, [sp, #24]
   1f2a4:	mov	x2, #0x80                  	// #128
   1f2a8:	mov	w1, #0x0                   	// #0
   1f2ac:	ldr	x0, [sp, #24]
   1f2b0:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   1f2b4:	nop
   1f2b8:	ldr	x30, [sp], #32
   1f2bc:	ret
   1f2c0:	str	x30, [sp, #-96]!
   1f2c4:	str	x0, [sp, #24]
   1f2c8:	str	w1, [sp, #20]
   1f2cc:	ldr	w0, [sp, #20]
   1f2d0:	sub	w0, w0, #0x1
   1f2d4:	str	w0, [sp, #20]
   1f2d8:	ldrsw	x0, [sp, #20]
   1f2dc:	str	x0, [sp, #88]
   1f2e0:	str	xzr, [sp, #80]
   1f2e4:	ldr	x1, [sp, #88]
   1f2e8:	ldr	x0, [sp, #80]
   1f2ec:	cmp	x1, x0
   1f2f0:	cset	w0, cc  // cc = lo, ul, last
   1f2f4:	and	w0, w0, #0xff
   1f2f8:	and	x0, x0, #0xff
   1f2fc:	cmp	x0, #0x0
   1f300:	b.eq	1f324 <__sanitizer_set_report_fd@@Base+0x5178>  // b.none
   1f304:	ldr	x4, [sp, #80]
   1f308:	ldr	x3, [sp, #88]
   1f30c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1f310:	add	x2, x0, #0x6c0
   1f314:	mov	w1, #0x380                 	// #896
   1f318:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1f31c:	add	x0, x0, #0x588
   1f320:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1f324:	ldrsw	x0, [sp, #20]
   1f328:	str	x0, [sp, #72]
   1f32c:	mov	x0, #0x400                 	// #1024
   1f330:	str	x0, [sp, #64]
   1f334:	ldr	x1, [sp, #72]
   1f338:	ldr	x0, [sp, #64]
   1f33c:	cmp	x1, x0
   1f340:	cset	w0, cs  // cs = hs, nlast
   1f344:	and	w0, w0, #0xff
   1f348:	and	x0, x0, #0xff
   1f34c:	cmp	x0, #0x0
   1f350:	b.eq	1f374 <__sanitizer_set_report_fd@@Base+0x51c8>  // b.none
   1f354:	ldr	x4, [sp, #64]
   1f358:	ldr	x3, [sp, #72]
   1f35c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1f360:	add	x2, x0, #0x6d8
   1f364:	mov	w1, #0x381                 	// #897
   1f368:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1f36c:	add	x0, x0, #0x588
   1f370:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1f374:	ldr	x0, [sp, #24]
   1f378:	str	x0, [sp, #56]
   1f37c:	ldrsw	x0, [sp, #20]
   1f380:	lsr	x0, x0, #3
   1f384:	str	x0, [sp, #48]
   1f388:	ldrsw	x0, [sp, #20]
   1f38c:	and	x0, x0, #0x7
   1f390:	str	x0, [sp, #40]
   1f394:	ldr	x1, [sp, #56]
   1f398:	ldr	x0, [sp, #48]
   1f39c:	add	x0, x1, x0
   1f3a0:	ldrb	w0, [x0]
   1f3a4:	sxtb	w1, w0
   1f3a8:	ldr	x0, [sp, #40]
   1f3ac:	mov	w2, w0
   1f3b0:	mov	w0, #0x1                   	// #1
   1f3b4:	lsl	w0, w0, w2
   1f3b8:	sxtb	w0, w0
   1f3bc:	mvn	w0, w0
   1f3c0:	sxtb	w0, w0
   1f3c4:	and	w0, w1, w0
   1f3c8:	sxtb	w0, w0
   1f3cc:	and	w2, w0, #0xff
   1f3d0:	ldr	x1, [sp, #56]
   1f3d4:	ldr	x0, [sp, #48]
   1f3d8:	add	x0, x1, x0
   1f3dc:	mov	w1, w2
   1f3e0:	strb	w1, [x0]
   1f3e4:	nop
   1f3e8:	ldr	x30, [sp], #96
   1f3ec:	ret
   1f3f0:	str	x30, [sp, #-96]!
   1f3f4:	str	x0, [sp, #24]
   1f3f8:	str	w1, [sp, #20]
   1f3fc:	ldr	w0, [sp, #20]
   1f400:	sub	w0, w0, #0x1
   1f404:	str	w0, [sp, #20]
   1f408:	ldrsw	x0, [sp, #20]
   1f40c:	str	x0, [sp, #88]
   1f410:	str	xzr, [sp, #80]
   1f414:	ldr	x1, [sp, #88]
   1f418:	ldr	x0, [sp, #80]
   1f41c:	cmp	x1, x0
   1f420:	cset	w0, cc  // cc = lo, ul, last
   1f424:	and	w0, w0, #0xff
   1f428:	and	x0, x0, #0xff
   1f42c:	cmp	x0, #0x0
   1f430:	b.eq	1f454 <__sanitizer_set_report_fd@@Base+0x52a8>  // b.none
   1f434:	ldr	x4, [sp, #80]
   1f438:	ldr	x3, [sp, #88]
   1f43c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1f440:	add	x2, x0, #0x6c0
   1f444:	mov	w1, #0x38a                 	// #906
   1f448:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1f44c:	add	x0, x0, #0x588
   1f450:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1f454:	ldrsw	x0, [sp, #20]
   1f458:	str	x0, [sp, #72]
   1f45c:	mov	x0, #0x400                 	// #1024
   1f460:	str	x0, [sp, #64]
   1f464:	ldr	x1, [sp, #72]
   1f468:	ldr	x0, [sp, #64]
   1f46c:	cmp	x1, x0
   1f470:	cset	w0, cs  // cs = hs, nlast
   1f474:	and	w0, w0, #0xff
   1f478:	and	x0, x0, #0xff
   1f47c:	cmp	x0, #0x0
   1f480:	b.eq	1f4a4 <__sanitizer_set_report_fd@@Base+0x52f8>  // b.none
   1f484:	ldr	x4, [sp, #64]
   1f488:	ldr	x3, [sp, #72]
   1f48c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1f490:	add	x2, x0, #0x6d8
   1f494:	mov	w1, #0x38b                 	// #907
   1f498:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1f49c:	add	x0, x0, #0x588
   1f4a0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1f4a4:	ldr	x0, [sp, #24]
   1f4a8:	str	x0, [sp, #56]
   1f4ac:	ldrsw	x0, [sp, #20]
   1f4b0:	lsr	x0, x0, #3
   1f4b4:	str	x0, [sp, #48]
   1f4b8:	ldrsw	x0, [sp, #20]
   1f4bc:	and	x0, x0, #0x7
   1f4c0:	str	x0, [sp, #40]
   1f4c4:	ldr	x1, [sp, #56]
   1f4c8:	ldr	x0, [sp, #48]
   1f4cc:	add	x0, x1, x0
   1f4d0:	ldrb	w0, [x0]
   1f4d4:	mov	w1, w0
   1f4d8:	ldr	x0, [sp, #40]
   1f4dc:	asr	w0, w1, w0
   1f4e0:	and	w0, w0, #0x1
   1f4e4:	cmp	w0, #0x0
   1f4e8:	cset	w0, ne  // ne = any
   1f4ec:	and	w0, w0, #0xff
   1f4f0:	ldr	x30, [sp], #96
   1f4f4:	ret
   1f4f8:	str	x30, [sp, #-112]!
   1f4fc:	str	x0, [sp, #24]
   1f500:	str	w1, [sp, #20]
   1f504:	ldr	x0, [sp, #24]
   1f508:	ldr	w1, [sp, #20]
   1f50c:	str	w1, [x0]
   1f510:	ldr	x0, [sp, #24]
   1f514:	mov	w1, #0xffffffff            	// #-1
   1f518:	str	w1, [x0, #4]
   1f51c:	ldr	x0, [sp, #24]
   1f520:	add	x0, x0, #0x8
   1f524:	mov	x1, #0x1000                	// #4096
   1f528:	bl	92b0 <__asan_backtrace_open@plt+0x2640>
   1f52c:	add	x4, sp, #0x20
   1f530:	ldr	w3, [sp, #20]
   1f534:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1f538:	add	x2, x0, #0x700
   1f53c:	mov	x1, #0x50                  	// #80
   1f540:	mov	x0, x4
   1f544:	bl	25b20 <OnPrint@@Base+0x500>
   1f548:	add	x0, sp, #0x20
   1f54c:	mov	w1, #0x4000                	// #16384
   1f550:	bl	1e2fc <__sanitizer_set_report_fd@@Base+0x4150>
   1f554:	mov	w1, w0
   1f558:	ldr	x0, [sp, #24]
   1f55c:	str	w1, [x0, #4]
   1f560:	ldr	x0, [sp, #24]
   1f564:	ldr	w0, [x0, #4]
   1f568:	sxtw	x0, w0
   1f56c:	mov	x1, #0x0                   	// #0
   1f570:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   1f574:	and	w0, w0, #0xff
   1f578:	cmp	w0, #0x0
   1f57c:	b.eq	1f590 <__sanitizer_set_report_fd@@Base+0x53e4>  // b.none
   1f580:	ldr	w1, [sp, #20]
   1f584:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1f588:	add	x0, x0, #0x710
   1f58c:	bl	25a74 <OnPrint@@Base+0x454>
   1f590:	nop
   1f594:	ldr	x30, [sp], #112
   1f598:	ret
   1f59c:	stp	x19, x20, [sp, #-112]!
   1f5a0:	str	x30, [sp, #16]
   1f5a4:	str	x0, [sp, #40]
   1f5a8:	str	x1, [sp, #32]
   1f5ac:	ldr	x0, [sp, #40]
   1f5b0:	ldr	w0, [x0, #4]
   1f5b4:	sxtw	x0, w0
   1f5b8:	mov	x1, #0x0                   	// #0
   1f5bc:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   1f5c0:	and	w0, w0, #0xff
   1f5c4:	cmp	w0, #0x0
   1f5c8:	b.eq	1f5d4 <__sanitizer_set_report_fd@@Base+0x5428>  // b.none
   1f5cc:	mov	w0, #0x0                   	// #0
   1f5d0:	b	1f8a0 <__sanitizer_set_report_fd@@Base+0x56f4>
   1f5d4:	ldr	x0, [sp, #40]
   1f5d8:	ldr	w0, [x0, #4]
   1f5dc:	mov	w2, #0x0                   	// #0
   1f5e0:	mov	x1, #0x0                   	// #0
   1f5e4:	bl	1effc <__sanitizer_set_report_fd@@Base+0x4e50>
   1f5e8:	ldr	x0, [sp, #32]
   1f5ec:	bl	206c4 <__sanitizer_set_report_fd@@Base+0x6518>
   1f5f0:	mov	w0, #0x2                   	// #2
   1f5f4:	str	w0, [sp, #108]
   1f5f8:	mov	w0, #0x1                   	// #1
   1f5fc:	strb	w0, [sp, #107]
   1f600:	ldr	x0, [sp, #40]
   1f604:	add	x19, x0, #0x8
   1f608:	ldr	x0, [sp, #40]
   1f60c:	add	x0, x0, #0x8
   1f610:	bl	9518 <__asan_backtrace_open@plt+0x28a8>
   1f614:	mov	x1, x0
   1f618:	mov	x0, x19
   1f61c:	bl	9428 <__asan_backtrace_open@plt+0x27b8>
   1f620:	ldr	x0, [sp, #40]
   1f624:	add	x0, x0, #0x8
   1f628:	bl	1a278 <__sanitizer_set_report_fd@@Base+0xcc>
   1f62c:	str	x0, [sp, #88]
   1f630:	mov	x0, #0x1000                	// #4096
   1f634:	str	x0, [sp, #80]
   1f638:	ldr	x1, [sp, #88]
   1f63c:	ldr	x0, [sp, #80]
   1f640:	cmp	x1, x0
   1f644:	cset	w0, cc  // cc = lo, ul, last
   1f648:	and	w0, w0, #0xff
   1f64c:	and	x0, x0, #0xff
   1f650:	cmp	x0, #0x0
   1f654:	b.eq	1f678 <__sanitizer_set_report_fd@@Base+0x54cc>  // b.none
   1f658:	ldr	x4, [sp, #80]
   1f65c:	ldr	x3, [sp, #88]
   1f660:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1f664:	add	x2, x0, #0x738
   1f668:	mov	w1, #0x3b5                 	// #949
   1f66c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1f670:	add	x0, x0, #0x588
   1f674:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1f678:	ldr	x0, [sp, #40]
   1f67c:	ldr	w19, [x0, #4]
   1f680:	ldr	x0, [sp, #40]
   1f684:	add	x0, x0, #0x8
   1f688:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   1f68c:	mov	x20, x0
   1f690:	ldr	x0, [sp, #40]
   1f694:	add	x0, x0, #0x8
   1f698:	bl	1a278 <__sanitizer_set_report_fd@@Base+0xcc>
   1f69c:	mov	w2, w0
   1f6a0:	mov	x1, x20
   1f6a4:	mov	w0, w19
   1f6a8:	bl	1efc4 <__sanitizer_set_report_fd@@Base+0x4e18>
   1f6ac:	str	x0, [sp, #72]
   1f6b0:	ldr	x0, [sp, #72]
   1f6b4:	cmp	x0, #0x0
   1f6b8:	b.ne	1f6c4 <__sanitizer_set_report_fd@@Base+0x5518>  // b.any
   1f6bc:	ldr	w0, [sp, #108]
   1f6c0:	b	1f8a0 <__sanitizer_set_report_fd@@Base+0x56f4>
   1f6c4:	mov	x1, #0x0                   	// #0
   1f6c8:	ldr	x0, [sp, #72]
   1f6cc:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   1f6d0:	and	w0, w0, #0xff
   1f6d4:	cmp	w0, #0x0
   1f6d8:	b.eq	1f6fc <__sanitizer_set_report_fd@@Base+0x5550>  // b.none
   1f6dc:	ldr	x0, [sp, #40]
   1f6e0:	ldr	w0, [x0]
   1f6e4:	mov	w1, w0
   1f6e8:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1f6ec:	add	x0, x0, #0x758
   1f6f0:	bl	25a74 <OnPrint@@Base+0x454>
   1f6f4:	mov	w0, #0x0                   	// #0
   1f6f8:	b	1f8a0 <__sanitizer_set_report_fd@@Base+0x56f4>
   1f6fc:	ldr	x0, [sp, #40]
   1f700:	add	x0, x0, #0x8
   1f704:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   1f708:	str	x0, [sp, #96]
   1f70c:	ldr	x1, [sp, #96]
   1f710:	ldr	x0, [sp, #72]
   1f714:	add	x0, x1, x0
   1f718:	str	x0, [sp, #64]
   1f71c:	ldr	x1, [sp, #96]
   1f720:	ldr	x0, [sp, #64]
   1f724:	cmp	x1, x0
   1f728:	b.cs	1f7bc <__sanitizer_set_report_fd@@Base+0x5610>  // b.hs, b.nlast
   1f72c:	ldr	x0, [sp, #96]
   1f730:	str	x0, [sp, #56]
   1f734:	ldr	x0, [sp, #56]
   1f738:	ldrh	w0, [x0, #16]
   1f73c:	and	x0, x0, #0xffff
   1f740:	ldr	x1, [sp, #96]
   1f744:	add	x0, x1, x0
   1f748:	str	x0, [sp, #96]
   1f74c:	ldr	x0, [sp, #56]
   1f750:	ldr	x0, [x0]
   1f754:	cmp	x0, #0x1
   1f758:	b.ne	1f764 <__sanitizer_set_report_fd@@Base+0x55b8>  // b.any
   1f75c:	mov	w0, #0x1                   	// #1
   1f760:	str	w0, [sp, #108]
   1f764:	ldr	x0, [sp, #56]
   1f768:	ldr	x0, [x0]
   1f76c:	cmp	x0, #0x0
   1f770:	b.eq	1f71c <__sanitizer_set_report_fd@@Base+0x5570>  // b.none
   1f774:	ldr	x0, [sp, #56]
   1f778:	ldrb	w0, [x0, #19]
   1f77c:	cmp	w0, #0x2f
   1f780:	b.ls	1f71c <__sanitizer_set_report_fd@@Base+0x5570>  // b.plast
   1f784:	ldr	x0, [sp, #56]
   1f788:	ldrb	w0, [x0, #19]
   1f78c:	cmp	w0, #0x39
   1f790:	b.hi	1f71c <__sanitizer_set_report_fd@@Base+0x5570>  // b.pmore
   1f794:	ldr	x19, [sp, #32]
   1f798:	ldr	x0, [sp, #56]
   1f79c:	add	x0, x0, #0x13
   1f7a0:	bl	1c568 <__sanitizer_set_report_fd@@Base+0x23bc>
   1f7a4:	str	x0, [sp, #48]
   1f7a8:	add	x0, sp, #0x30
   1f7ac:	mov	x1, x0
   1f7b0:	mov	x0, x19
   1f7b4:	bl	206e0 <__sanitizer_set_report_fd@@Base+0x6534>
   1f7b8:	b	1f71c <__sanitizer_set_report_fd@@Base+0x5570>
   1f7bc:	ldrb	w0, [sp, #107]
   1f7c0:	eor	w0, w0, #0x1
   1f7c4:	and	w0, w0, #0xff
   1f7c8:	cmp	w0, #0x0
   1f7cc:	b.eq	1f7dc <__sanitizer_set_report_fd@@Base+0x5630>  // b.none
   1f7d0:	mov	w0, #0x1                   	// #1
   1f7d4:	str	w0, [sp, #108]
   1f7d8:	b	1f898 <__sanitizer_set_report_fd@@Base+0x56ec>
   1f7dc:	ldr	x0, [sp, #40]
   1f7e0:	add	x0, x0, #0x8
   1f7e4:	bl	1a278 <__sanitizer_set_report_fd@@Base+0xcc>
   1f7e8:	sub	x0, x0, #0x400
   1f7ec:	ldr	x1, [sp, #72]
   1f7f0:	cmp	x1, x0
   1f7f4:	cset	w0, hi  // hi = pmore
   1f7f8:	and	w0, w0, #0xff
   1f7fc:	cmp	w0, #0x0
   1f800:	b.eq	1f834 <__sanitizer_set_report_fd@@Base+0x5688>  // b.none
   1f804:	ldr	x0, [sp, #40]
   1f808:	add	x19, x0, #0x8
   1f80c:	ldr	x0, [sp, #40]
   1f810:	add	x0, x0, #0x8
   1f814:	bl	1a278 <__sanitizer_set_report_fd@@Base+0xcc>
   1f818:	lsl	x0, x0, #1
   1f81c:	mov	x1, x0
   1f820:	mov	x0, x19
   1f824:	bl	9428 <__asan_backtrace_open@plt+0x27b8>
   1f828:	mov	w0, #0x1                   	// #1
   1f82c:	str	w0, [sp, #108]
   1f830:	b	1f898 <__sanitizer_set_report_fd@@Base+0x56ec>
   1f834:	ldr	x0, [sp, #32]
   1f838:	bl	207c4 <__sanitizer_set_report_fd@@Base+0x6618>
   1f83c:	and	w0, w0, #0xff
   1f840:	eor	w0, w0, #0x1
   1f844:	and	w0, w0, #0xff
   1f848:	cmp	w0, #0x0
   1f84c:	b.eq	1f884 <__sanitizer_set_report_fd@@Base+0x56d8>  // b.none
   1f850:	ldr	x0, [sp, #32]
   1f854:	bl	207e8 <__sanitizer_set_report_fd@@Base+0x663c>
   1f858:	ldr	x0, [x0]
   1f85c:	mov	w1, w0
   1f860:	ldr	x0, [sp, #40]
   1f864:	bl	1f8ac <__sanitizer_set_report_fd@@Base+0x5700>
   1f868:	and	w0, w0, #0xff
   1f86c:	eor	w0, w0, #0x1
   1f870:	and	w0, w0, #0xff
   1f874:	cmp	w0, #0x0
   1f878:	b.eq	1f884 <__sanitizer_set_report_fd@@Base+0x56d8>  // b.none
   1f87c:	mov	w0, #0x1                   	// #1
   1f880:	b	1f888 <__sanitizer_set_report_fd@@Base+0x56dc>
   1f884:	mov	w0, #0x0                   	// #0
   1f888:	cmp	w0, #0x0
   1f88c:	b.eq	1f898 <__sanitizer_set_report_fd@@Base+0x56ec>  // b.none
   1f890:	mov	w0, #0x1                   	// #1
   1f894:	str	w0, [sp, #108]
   1f898:	strb	wzr, [sp, #107]
   1f89c:	b	1f600 <__sanitizer_set_report_fd@@Base+0x5454>
   1f8a0:	ldr	x30, [sp, #16]
   1f8a4:	ldp	x19, x20, [sp], #112
   1f8a8:	ret
   1f8ac:	str	x30, [sp, #-128]!
   1f8b0:	str	x0, [sp, #24]
   1f8b4:	str	w1, [sp, #20]
   1f8b8:	ldr	x0, [sp, #24]
   1f8bc:	ldr	w0, [x0]
   1f8c0:	add	x5, sp, #0x20
   1f8c4:	ldr	w4, [sp, #20]
   1f8c8:	mov	w3, w0
   1f8cc:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1f8d0:	add	x2, x0, #0x798
   1f8d4:	mov	x1, #0x50                  	// #80
   1f8d8:	mov	x0, x5
   1f8dc:	bl	25b20 <OnPrint@@Base+0x500>
   1f8e0:	ldr	x0, [sp, #24]
   1f8e4:	add	x1, x0, #0x8
   1f8e8:	add	x0, sp, #0x20
   1f8ec:	mov	x3, #0x0                   	// #0
   1f8f0:	mov	x2, #0x4000000             	// #67108864
   1f8f4:	bl	19e00 <__sanitizer_cov_pcs_init@@Base+0x433c>
   1f8f8:	and	w0, w0, #0xff
   1f8fc:	eor	w0, w0, #0x1
   1f900:	and	w0, w0, #0xff
   1f904:	cmp	w0, #0x0
   1f908:	b.ne	1f924 <__sanitizer_set_report_fd@@Base+0x5778>  // b.any
   1f90c:	ldr	x0, [sp, #24]
   1f910:	add	x0, x0, #0x8
   1f914:	bl	20864 <__sanitizer_set_report_fd@@Base+0x66b8>
   1f918:	and	w0, w0, #0xff
   1f91c:	cmp	w0, #0x0
   1f920:	b.eq	1f92c <__sanitizer_set_report_fd@@Base+0x5780>  // b.none
   1f924:	mov	w0, #0x1                   	// #1
   1f928:	b	1f930 <__sanitizer_set_report_fd@@Base+0x5784>
   1f92c:	mov	w0, #0x0                   	// #0
   1f930:	cmp	w0, #0x0
   1f934:	b.eq	1f940 <__sanitizer_set_report_fd@@Base+0x5794>  // b.none
   1f938:	mov	w0, #0x0                   	// #0
   1f93c:	b	1f9bc <__sanitizer_set_report_fd@@Base+0x5810>
   1f940:	ldr	x0, [sp, #24]
   1f944:	add	x0, x0, #0x8
   1f948:	strb	wzr, [sp, #119]
   1f94c:	add	x1, sp, #0x77
   1f950:	bl	20888 <__sanitizer_set_report_fd@@Base+0x66dc>
   1f954:	ldr	x0, [sp, #24]
   1f958:	add	x0, x0, #0x8
   1f95c:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   1f960:	mov	x2, x0
   1f964:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1f968:	add	x1, x0, #0x790
   1f96c:	mov	x0, x2
   1f970:	bl	1d060 <__sanitizer_set_report_fd@@Base+0x2eb4>
   1f974:	str	x0, [sp, #120]
   1f978:	ldr	x0, [sp, #120]
   1f97c:	cmp	x0, #0x0
   1f980:	b.ne	1f98c <__sanitizer_set_report_fd@@Base+0x57e0>  // b.any
   1f984:	mov	w0, #0x0                   	// #0
   1f988:	b	1f9bc <__sanitizer_set_report_fd@@Base+0x5810>
   1f98c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1f990:	add	x0, x0, #0x790
   1f994:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   1f998:	mov	x1, x0
   1f99c:	ldr	x0, [sp, #120]
   1f9a0:	add	x0, x0, x1
   1f9a4:	str	x0, [sp, #120]
   1f9a8:	ldr	x0, [sp, #120]
   1f9ac:	bl	1c568 <__sanitizer_set_report_fd@@Base+0x23bc>
   1f9b0:	cmp	w0, #0x0
   1f9b4:	cset	w0, ne  // ne = any
   1f9b8:	and	w0, w0, #0xff
   1f9bc:	ldr	x30, [sp], #128
   1f9c0:	ret
   1f9c4:	str	x30, [sp, #-32]!
   1f9c8:	str	x0, [sp, #24]
   1f9cc:	ldr	x0, [sp, #24]
   1f9d0:	ldr	w0, [x0, #4]
   1f9d4:	sxtw	x0, w0
   1f9d8:	mov	x1, #0x0                   	// #0
   1f9dc:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   1f9e0:	and	w0, w0, #0xff
   1f9e4:	eor	w0, w0, #0x1
   1f9e8:	and	w0, w0, #0xff
   1f9ec:	cmp	w0, #0x0
   1f9f0:	b.eq	1fa00 <__sanitizer_set_report_fd@@Base+0x5854>  // b.none
   1f9f4:	ldr	x0, [sp, #24]
   1f9f8:	ldr	w0, [x0, #4]
   1f9fc:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   1fa00:	ldr	x0, [sp, #24]
   1fa04:	add	x0, x0, #0x8
   1fa08:	bl	92e0 <__asan_backtrace_open@plt+0x2670>
   1fa0c:	nop
   1fa10:	ldr	x30, [sp], #32
   1fa14:	ret
   1fa18:	stp	x29, x30, [sp, #-16]!
   1fa1c:	mov	x29, sp
   1fa20:	mov	x0, x29
   1fa24:	bl	10d9c <__sancov_default_options@@Base+0x9f0>
   1fa28:	add	w0, w0, #0x1
   1fa2c:	mov	x1, #0x1                   	// #1
   1fa30:	lsl	x0, x1, x0
   1fa34:	sub	x0, x0, #0x1
   1fa38:	ldp	x29, x30, [sp], #16
   1fa3c:	ret
   1fa40:	str	x30, [sp, #-32]!
   1fa44:	bl	1fa18 <__sanitizer_set_report_fd@@Base+0x586c>
   1fa48:	str	x0, [sp, #24]
   1fa4c:	ldr	x0, [sp, #24]
   1fa50:	ldr	x30, [sp], #32
   1fa54:	ret
   1fa58:	str	x30, [sp, #-16]!
   1fa5c:	mov	x0, #0x6                   	// #6
   1fa60:	bl	6ab0 <getauxval@plt>
   1fa64:	ldr	x30, [sp], #16
   1fa68:	ret
   1fa6c:	str	x30, [sp, #-80]!
   1fa70:	str	x0, [sp, #24]
   1fa74:	str	x1, [sp, #16]
   1fa78:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1fa7c:	add	x0, x0, #0x5e8
   1fa80:	str	x0, [sp, #64]
   1fa84:	ldr	x2, [sp, #16]
   1fa88:	ldr	x1, [sp, #24]
   1fa8c:	ldr	x0, [sp, #64]
   1fa90:	bl	1e5d4 <__sanitizer_set_report_fd@@Base+0x4428>
   1fa94:	str	x0, [sp, #72]
   1fa98:	add	x0, sp, #0x24
   1fa9c:	mov	x1, x0
   1faa0:	ldr	x0, [sp, #72]
   1faa4:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   1faa8:	strb	w0, [sp, #63]
   1faac:	ldrb	w0, [sp, #63]
   1fab0:	cmp	w0, #0x0
   1fab4:	b.eq	1fb3c <__sanitizer_set_report_fd@@Base+0x5990>  // b.none
   1fab8:	ldr	w0, [sp, #36]
   1fabc:	mov	w1, w0
   1fac0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1fac4:	add	x0, x0, #0x7b0
   1fac8:	bl	25a74 <OnPrint@@Base+0x454>
   1facc:	ldr	x3, [sp, #64]
   1fad0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1fad4:	add	x2, x0, #0x810
   1fad8:	ldr	x1, [sp, #16]
   1fadc:	ldr	x0, [sp, #24]
   1fae0:	bl	25b20 <OnPrint@@Base+0x500>
   1fae4:	sxtw	x0, w0
   1fae8:	str	x0, [sp, #72]
   1faec:	ldr	x0, [sp, #72]
   1faf0:	str	x0, [sp, #48]
   1faf4:	ldr	x0, [sp, #16]
   1faf8:	str	x0, [sp, #40]
   1fafc:	ldr	x1, [sp, #48]
   1fb00:	ldr	x0, [sp, #40]
   1fb04:	cmp	x1, x0
   1fb08:	cset	w0, cs  // cs = hs, nlast
   1fb0c:	and	w0, w0, #0xff
   1fb10:	and	x0, x0, #0xff
   1fb14:	cmp	x0, #0x0
   1fb18:	b.eq	1fb3c <__sanitizer_set_report_fd@@Base+0x5990>  // b.none
   1fb1c:	ldr	x4, [sp, #40]
   1fb20:	ldr	x3, [sp, #48]
   1fb24:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1fb28:	add	x2, x0, #0x818
   1fb2c:	mov	w1, #0x470                 	// #1136
   1fb30:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1fb34:	add	x0, x0, #0x588
   1fb38:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1fb3c:	ldr	x0, [sp, #72]
   1fb40:	ldr	x30, [sp], #80
   1fb44:	ret
   1fb48:	str	x30, [sp, #-64]!
   1fb4c:	str	x0, [sp, #24]
   1fb50:	str	x1, [sp, #16]
   1fb54:	add	x2, sp, #0x28
   1fb58:	add	x1, sp, #0x30
   1fb5c:	add	x0, sp, #0x38
   1fb60:	mov	x5, #0x0                   	// #0
   1fb64:	mov	x4, #0x100000              	// #1048576
   1fb68:	mov	x3, x2
   1fb6c:	mov	x2, x1
   1fb70:	mov	x1, x0
   1fb74:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1fb78:	add	x0, x0, #0x5d0
   1fb7c:	bl	19bf0 <__sanitizer_cov_pcs_init@@Base+0x412c>
   1fb80:	and	w0, w0, #0xff
   1fb84:	cmp	w0, #0x0
   1fb88:	b.eq	1fbb8 <__sanitizer_set_report_fd@@Base+0x5a0c>  // b.none
   1fb8c:	ldr	x0, [sp, #56]
   1fb90:	ldr	x2, [sp, #16]
   1fb94:	mov	x1, x0
   1fb98:	ldr	x0, [sp, #24]
   1fb9c:	bl	1cf6c <__sanitizer_set_report_fd@@Base+0x2dc0>
   1fba0:	ldr	x0, [sp, #56]
   1fba4:	ldr	x1, [sp, #48]
   1fba8:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   1fbac:	ldr	x0, [sp, #24]
   1fbb0:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   1fbb4:	b	1fbc8 <__sanitizer_set_report_fd@@Base+0x5a1c>
   1fbb8:	ldr	x1, [sp, #16]
   1fbbc:	ldr	x0, [sp, #24]
   1fbc0:	bl	1fa6c <__sanitizer_set_report_fd@@Base+0x58c0>
   1fbc4:	nop
   1fbc8:	ldr	x30, [sp], #64
   1fbcc:	ret
   1fbd0:	str	x30, [sp, #-48]!
   1fbd4:	str	x0, [sp, #24]
   1fbd8:	str	x1, [sp, #16]
   1fbdc:	ldr	x0, [sp, #24]
   1fbe0:	str	x0, [sp, #40]
   1fbe4:	ldr	x0, [sp, #40]
   1fbe8:	ldrb	w0, [x0]
   1fbec:	cmp	w0, #0x0
   1fbf0:	b.eq	1fc04 <__sanitizer_set_report_fd@@Base+0x5a58>  // b.none
   1fbf4:	ldr	x0, [sp, #40]
   1fbf8:	add	x0, x0, #0x1
   1fbfc:	str	x0, [sp, #40]
   1fc00:	b	1fbe4 <__sanitizer_set_report_fd@@Base+0x5a38>
   1fc04:	ldr	x1, [sp, #40]
   1fc08:	ldr	x0, [sp, #24]
   1fc0c:	cmp	x1, x0
   1fc10:	b.ls	1fc34 <__sanitizer_set_report_fd@@Base+0x5a88>  // b.plast
   1fc14:	ldr	x0, [sp, #40]
   1fc18:	ldrb	w0, [x0]
   1fc1c:	cmp	w0, #0x2f
   1fc20:	b.eq	1fc34 <__sanitizer_set_report_fd@@Base+0x5a88>  // b.none
   1fc24:	ldr	x0, [sp, #40]
   1fc28:	sub	x0, x0, #0x1
   1fc2c:	str	x0, [sp, #40]
   1fc30:	b	1fc04 <__sanitizer_set_report_fd@@Base+0x5a58>
   1fc34:	ldr	x0, [sp, #40]
   1fc38:	ldrb	w0, [x0]
   1fc3c:	cmp	w0, #0x2f
   1fc40:	b.ne	1fc50 <__sanitizer_set_report_fd@@Base+0x5aa4>  // b.any
   1fc44:	ldr	x0, [sp, #40]
   1fc48:	add	x0, x0, #0x1
   1fc4c:	str	x0, [sp, #40]
   1fc50:	ldr	x0, [sp, #16]
   1fc54:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   1fc58:	str	x0, [sp, #32]
   1fc5c:	ldr	x2, [sp, #32]
   1fc60:	ldr	x1, [sp, #16]
   1fc64:	ldr	x0, [sp, #40]
   1fc68:	bl	1cb4c <__sanitizer_set_report_fd@@Base+0x29a0>
   1fc6c:	cmp	w0, #0x0
   1fc70:	cset	w0, ne  // ne = any
   1fc74:	and	w0, w0, #0xff
   1fc78:	cmp	w0, #0x0
   1fc7c:	b.eq	1fc88 <__sanitizer_set_report_fd@@Base+0x5adc>  // b.none
   1fc80:	mov	w0, #0x0                   	// #0
   1fc84:	b	1fcc8 <__sanitizer_set_report_fd@@Base+0x5b1c>
   1fc88:	ldr	x1, [sp, #40]
   1fc8c:	ldr	x0, [sp, #32]
   1fc90:	add	x0, x1, x0
   1fc94:	ldrb	w0, [x0]
   1fc98:	cmp	w0, #0x2d
   1fc9c:	b.eq	1fcb8 <__sanitizer_set_report_fd@@Base+0x5b0c>  // b.none
   1fca0:	ldr	x1, [sp, #40]
   1fca4:	ldr	x0, [sp, #32]
   1fca8:	add	x0, x1, x0
   1fcac:	ldrb	w0, [x0]
   1fcb0:	cmp	w0, #0x2e
   1fcb4:	b.ne	1fcc0 <__sanitizer_set_report_fd@@Base+0x5b14>  // b.any
   1fcb8:	mov	w0, #0x1                   	// #1
   1fcbc:	b	1fcc4 <__sanitizer_set_report_fd@@Base+0x5b18>
   1fcc0:	mov	w0, #0x0                   	// #0
   1fcc4:	nop
   1fcc8:	ldr	x30, [sp], #48
   1fccc:	ret
   1fcd0:	str	x30, [sp, #-144]!
   1fcd4:	str	x0, [sp, #24]
   1fcd8:	str	x1, [sp, #16]
   1fcdc:	ldr	x0, [sp, #24]
   1fce0:	str	x0, [sp, #112]
   1fce4:	str	xzr, [sp, #104]
   1fce8:	ldr	x1, [sp, #112]
   1fcec:	ldr	x0, [sp, #104]
   1fcf0:	cmp	x1, x0
   1fcf4:	cset	w0, eq  // eq = none
   1fcf8:	and	w0, w0, #0xff
   1fcfc:	and	x0, x0, #0xff
   1fd00:	cmp	x0, #0x0
   1fd04:	b.eq	1fd28 <__sanitizer_set_report_fd@@Base+0x5b7c>  // b.none
   1fd08:	ldr	x4, [sp, #104]
   1fd0c:	ldr	x3, [sp, #112]
   1fd10:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1fd14:	add	x2, x0, #0x840
   1fd18:	mov	w1, #0x495                 	// #1173
   1fd1c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1fd20:	add	x0, x0, #0x588
   1fd24:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1fd28:	ldr	x0, [sp, #24]
   1fd2c:	ldr	x0, [x0]
   1fd30:	str	x0, [sp, #96]
   1fd34:	ldr	x0, [sp, #96]
   1fd38:	str	x0, [sp, #88]
   1fd3c:	ldr	x0, [sp, #88]
   1fd40:	ldr	x0, [x0, #32]
   1fd44:	ldr	x1, [sp, #96]
   1fd48:	add	x0, x1, x0
   1fd4c:	str	x0, [sp, #80]
   1fd50:	ldr	x0, [sp, #88]
   1fd54:	ldrh	w0, [x0, #56]
   1fd58:	mov	w1, w0
   1fd5c:	ldr	x0, [sp, #88]
   1fd60:	ldrh	w0, [x0, #54]
   1fd64:	mul	w0, w1, w0
   1fd68:	sxtw	x0, w0
   1fd6c:	ldr	x1, [sp, #80]
   1fd70:	add	x0, x1, x0
   1fd74:	str	x0, [sp, #72]
   1fd78:	mov	x0, #0xffffffffffffffff    	// #-1
   1fd7c:	str	x0, [sp, #136]
   1fd80:	ldr	x0, [sp, #80]
   1fd84:	str	x0, [sp, #128]
   1fd88:	ldr	x1, [sp, #128]
   1fd8c:	ldr	x0, [sp, #72]
   1fd90:	cmp	x1, x0
   1fd94:	b.eq	1fdec <__sanitizer_set_report_fd@@Base+0x5c40>  // b.none
   1fd98:	ldr	x0, [sp, #128]
   1fd9c:	str	x0, [sp, #64]
   1fda0:	ldr	x0, [sp, #64]
   1fda4:	ldr	w0, [x0]
   1fda8:	cmp	w0, #0x1
   1fdac:	b.ne	1fdd0 <__sanitizer_set_report_fd@@Base+0x5c24>  // b.any
   1fdb0:	ldr	x0, [sp, #64]
   1fdb4:	ldr	x0, [x0, #16]
   1fdb8:	ldr	x1, [sp, #136]
   1fdbc:	cmp	x1, x0
   1fdc0:	b.ls	1fdd0 <__sanitizer_set_report_fd@@Base+0x5c24>  // b.plast
   1fdc4:	ldr	x0, [sp, #64]
   1fdc8:	ldr	x0, [x0, #16]
   1fdcc:	str	x0, [sp, #136]
   1fdd0:	ldr	x0, [sp, #88]
   1fdd4:	ldrh	w0, [x0, #54]
   1fdd8:	and	x0, x0, #0xffff
   1fddc:	ldr	x1, [sp, #128]
   1fde0:	add	x0, x1, x0
   1fde4:	str	x0, [sp, #128]
   1fde8:	b	1fd88 <__sanitizer_set_report_fd@@Base+0x5bdc>
   1fdec:	ldr	x1, [sp, #96]
   1fdf0:	ldr	x0, [sp, #136]
   1fdf4:	sub	x0, x1, x0
   1fdf8:	str	x0, [sp, #56]
   1fdfc:	ldr	x0, [sp, #80]
   1fe00:	str	x0, [sp, #120]
   1fe04:	ldr	x1, [sp, #120]
   1fe08:	ldr	x0, [sp, #72]
   1fe0c:	cmp	x1, x0
   1fe10:	b.eq	1feb8 <__sanitizer_set_report_fd@@Base+0x5d0c>  // b.none
   1fe14:	ldr	x0, [sp, #120]
   1fe18:	str	x0, [sp, #48]
   1fe1c:	ldr	x0, [sp, #48]
   1fe20:	ldr	w0, [x0]
   1fe24:	cmp	w0, #0x1
   1fe28:	b.ne	1fe9c <__sanitizer_set_report_fd@@Base+0x5cf0>  // b.any
   1fe2c:	ldr	x0, [sp, #48]
   1fe30:	ldr	x1, [x0, #16]
   1fe34:	ldr	x0, [sp, #56]
   1fe38:	add	x0, x1, x0
   1fe3c:	str	x0, [sp, #40]
   1fe40:	ldr	x0, [sp, #48]
   1fe44:	ldr	x0, [x0, #40]
   1fe48:	ldr	x1, [sp, #40]
   1fe4c:	add	x0, x1, x0
   1fe50:	str	x0, [sp, #32]
   1fe54:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   1fe58:	mov	x1, x0
   1fe5c:	ldr	x0, [sp, #40]
   1fe60:	bl	1d488 <__sanitizer_set_report_fd@@Base+0x32dc>
   1fe64:	str	x0, [sp, #40]
   1fe68:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   1fe6c:	mov	x1, x0
   1fe70:	ldr	x0, [sp, #32]
   1fe74:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   1fe78:	str	x0, [sp, #32]
   1fe7c:	ldr	x3, [sp, #40]
   1fe80:	ldr	x1, [sp, #32]
   1fe84:	ldr	x0, [sp, #40]
   1fe88:	sub	x0, x1, x0
   1fe8c:	ldr	x2, [sp, #16]
   1fe90:	mov	x1, x0
   1fe94:	mov	x0, x3
   1fe98:	blr	x2
   1fe9c:	ldr	x0, [sp, #88]
   1fea0:	ldrh	w0, [x0, #54]
   1fea4:	and	x0, x0, #0xffff
   1fea8:	ldr	x1, [sp, #120]
   1feac:	add	x0, x1, x0
   1feb0:	str	x0, [sp, #120]
   1feb4:	b	1fe04 <__sanitizer_set_report_fd@@Base+0x5c58>
   1feb8:	nop
   1febc:	ldr	x30, [sp], #144
   1fec0:	ret
   1fec4:	str	x30, [sp, #-112]!
   1fec8:	str	x0, [sp, #72]
   1fecc:	str	x1, [sp, #64]
   1fed0:	str	w2, [sp, #60]
   1fed4:	str	x3, [sp, #48]
   1fed8:	str	x4, [sp, #40]
   1fedc:	str	x5, [sp, #32]
   1fee0:	str	x6, [sp, #24]
   1fee4:	ldr	x0, [sp, #72]
   1fee8:	cmp	x0, #0x0
   1feec:	b.eq	1fefc <__sanitizer_set_report_fd@@Base+0x5d50>  // b.none
   1fef0:	ldr	x0, [sp, #64]
   1fef4:	cmp	x0, #0x0
   1fef8:	b.ne	1ff04 <__sanitizer_set_report_fd@@Base+0x5d58>  // b.any
   1fefc:	mov	x0, #0xffffffffffffffea    	// #-22
   1ff00:	b	1ffd0 <__sanitizer_set_report_fd@@Base+0x5e24>
   1ff04:	str	xzr, [sp, #104]
   1ff08:	ldr	x0, [sp, #64]
   1ff0c:	and	x0, x0, #0xf
   1ff10:	str	x0, [sp, #96]
   1ff14:	ldr	x1, [sp, #104]
   1ff18:	ldr	x0, [sp, #96]
   1ff1c:	cmp	x1, x0
   1ff20:	cset	w0, ne  // ne = any
   1ff24:	and	w0, w0, #0xff
   1ff28:	and	x0, x0, #0xff
   1ff2c:	cmp	x0, #0x0
   1ff30:	b.eq	1ff54 <__sanitizer_set_report_fd@@Base+0x5da8>  // b.none
   1ff34:	ldr	x4, [sp, #96]
   1ff38:	ldr	x3, [sp, #104]
   1ff3c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1ff40:	add	x2, x0, #0x858
   1ff44:	mov	w1, #0x54b                 	// #1355
   1ff48:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   1ff4c:	add	x0, x0, #0x588
   1ff50:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   1ff54:	ldr	x0, [sp, #64]
   1ff58:	sub	x0, x0, #0x10
   1ff5c:	str	x0, [sp, #64]
   1ff60:	ldr	x1, [sp, #72]
   1ff64:	ldr	x0, [sp, #64]
   1ff68:	str	x1, [x0]
   1ff6c:	ldr	x0, [sp, #64]
   1ff70:	add	x0, x0, #0x8
   1ff74:	ldr	x1, [sp, #48]
   1ff78:	str	x1, [x0]
   1ff7c:	ldr	x0, [sp, #72]
   1ff80:	ldr	x1, [sp, #64]
   1ff84:	ldr	w2, [sp, #60]
   1ff88:	ldr	x3, [sp, #48]
   1ff8c:	ldr	x4, [sp, #40]
   1ff90:	ldr	x5, [sp, #32]
   1ff94:	ldr	x6, [sp, #24]
   1ff98:	mov	x0, x2
   1ff9c:	mov	x2, x4
   1ffa0:	mov	x3, x5
   1ffa4:	mov	x4, x6
   1ffa8:	mov	x8, #0xdc                  	// #220
   1ffac:	svc	#0x0
   1ffb0:	cmp	x0, #0x0
   1ffb4:	b.ne	1ffc8 <__sanitizer_set_report_fd@@Base+0x5e1c>  // b.any
   1ffb8:	ldp	x1, x0, [sp], #16
   1ffbc:	blr	x1
   1ffc0:	mov	x8, #0x5d                  	// #93
   1ffc4:	svc	#0x0
   1ffc8:	str	x0, [sp, #88]
   1ffcc:	ldr	x0, [sp, #88]
   1ffd0:	ldr	x30, [sp], #112
   1ffd4:	ret
   1ffd8:	str	x30, [sp, #-32]!
   1ffdc:	str	w0, [sp, #28]
   1ffe0:	ldr	w0, [sp, #28]
   1ffe4:	cmp	w0, #0xb
   1ffe8:	b.eq	2008c <__sanitizer_set_report_fd@@Base+0x5ee0>  // b.none
   1ffec:	ldr	w0, [sp, #28]
   1fff0:	cmp	w0, #0xb
   1fff4:	b.gt	200a4 <__sanitizer_set_report_fd@@Base+0x5ef8>
   1fff8:	ldr	w0, [sp, #28]
   1fffc:	cmp	w0, #0x8
   20000:	b.eq	20080 <__sanitizer_set_report_fd@@Base+0x5ed4>  // b.none
   20004:	ldr	w0, [sp, #28]
   20008:	cmp	w0, #0x8
   2000c:	b.gt	200a4 <__sanitizer_set_report_fd@@Base+0x5ef8>
   20010:	ldr	w0, [sp, #28]
   20014:	cmp	w0, #0x7
   20018:	b.eq	20098 <__sanitizer_set_report_fd@@Base+0x5eec>  // b.none
   2001c:	ldr	w0, [sp, #28]
   20020:	cmp	w0, #0x7
   20024:	b.gt	200a4 <__sanitizer_set_report_fd@@Base+0x5ef8>
   20028:	ldr	w0, [sp, #28]
   2002c:	cmp	w0, #0x6
   20030:	b.eq	2005c <__sanitizer_set_report_fd@@Base+0x5eb0>  // b.none
   20034:	ldr	w0, [sp, #28]
   20038:	cmp	w0, #0x6
   2003c:	b.gt	200a4 <__sanitizer_set_report_fd@@Base+0x5ef8>
   20040:	ldr	w0, [sp, #28]
   20044:	cmp	w0, #0x4
   20048:	b.eq	20068 <__sanitizer_set_report_fd@@Base+0x5ebc>  // b.none
   2004c:	ldr	w0, [sp, #28]
   20050:	cmp	w0, #0x5
   20054:	b.eq	20074 <__sanitizer_set_report_fd@@Base+0x5ec8>  // b.none
   20058:	b	200a4 <__sanitizer_set_report_fd@@Base+0x5ef8>
   2005c:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   20060:	ldr	w0, [x0, #80]
   20064:	b	200a8 <__sanitizer_set_report_fd@@Base+0x5efc>
   20068:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   2006c:	ldr	w0, [x0, #84]
   20070:	b	200a8 <__sanitizer_set_report_fd@@Base+0x5efc>
   20074:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   20078:	ldr	w0, [x0, #88]
   2007c:	b	200a8 <__sanitizer_set_report_fd@@Base+0x5efc>
   20080:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   20084:	ldr	w0, [x0, #92]
   20088:	b	200a8 <__sanitizer_set_report_fd@@Base+0x5efc>
   2008c:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   20090:	ldr	w0, [x0, #72]
   20094:	b	200a8 <__sanitizer_set_report_fd@@Base+0x5efc>
   20098:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   2009c:	ldr	w0, [x0, #76]
   200a0:	b	200a8 <__sanitizer_set_report_fd@@Base+0x5efc>
   200a4:	mov	w0, #0x0                   	// #0
   200a8:	ldr	x30, [sp], #32
   200ac:	ret
   200b0:	str	x30, [sp, #-48]!
   200b4:	str	w0, [sp, #28]
   200b8:	ldr	w0, [sp, #28]
   200bc:	bl	1ffd8 <__sanitizer_set_report_fd@@Base+0x5e2c>
   200c0:	str	w0, [sp, #44]
   200c4:	ldr	w0, [sp, #44]
   200c8:	cmp	w0, #0x1
   200cc:	b.ne	200f0 <__sanitizer_set_report_fd@@Base+0x5f44>  // b.any
   200d0:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   200d4:	ldrb	w0, [x0, #96]
   200d8:	eor	w0, w0, #0x1
   200dc:	and	w0, w0, #0xff
   200e0:	cmp	w0, #0x0
   200e4:	b.eq	200f0 <__sanitizer_set_report_fd@@Base+0x5f44>  // b.none
   200e8:	mov	w0, #0x1                   	// #1
   200ec:	b	200f4 <__sanitizer_set_report_fd@@Base+0x5f48>
   200f0:	mov	w0, #0x0                   	// #0
   200f4:	cmp	w0, #0x0
   200f8:	b.eq	20104 <__sanitizer_set_report_fd@@Base+0x5f58>  // b.none
   200fc:	mov	w0, #0x2                   	// #2
   20100:	b	20108 <__sanitizer_set_report_fd@@Base+0x5f5c>
   20104:	ldr	w0, [sp, #44]
   20108:	ldr	x30, [sp], #48
   2010c:	ret
   20110:	sub	sp, sp, #0x130
   20114:	str	x30, [sp]
   20118:	str	x0, [sp, #24]
   2011c:	str	x1, [sp, #16]
   20120:	add	x0, sp, #0xb0
   20124:	bl	1f278 <__sanitizer_set_report_fd@@Base+0x50cc>
   20128:	add	x0, sp, #0xb0
   2012c:	mov	w1, #0x21                  	// #33
   20130:	bl	1f2c0 <__sanitizer_set_report_fd@@Base+0x5114>
   20134:	add	x1, sp, #0x30
   20138:	add	x0, sp, #0xb0
   2013c:	mov	x2, x1
   20140:	mov	x1, x0
   20144:	mov	w0, #0x2                   	// #2
   20148:	bl	1f22c <__sanitizer_set_report_fd@@Base+0x5080>
   2014c:	add	x0, sp, #0x28
   20150:	ldr	x3, [sp, #16]
   20154:	ldr	x2, [sp, #24]
   20158:	mov	x1, #0x0                   	// #0
   2015c:	bl	6b20 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>
   20160:	add	x0, sp, #0x30
   20164:	mov	x2, #0x0                   	// #0
   20168:	mov	x1, x0
   2016c:	mov	w0, #0x2                   	// #2
   20170:	bl	1f22c <__sanitizer_set_report_fd@@Base+0x5080>
   20174:	ldr	x0, [sp, #40]
   20178:	ldr	x30, [sp]
   2017c:	add	sp, sp, #0x130
   20180:	ret
   20184:	str	x30, [sp, #-32]!
   20188:	str	x0, [sp, #24]
   2018c:	mov	x1, #0x0                   	// #0
   20190:	ldr	x0, [sp, #24]
   20194:	bl	6800 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>
   20198:	nop
   2019c:	ldr	x30, [sp], #32
   201a0:	ret
   201a4:	sub	sp, sp, #0x20
   201a8:	str	x0, [sp, #8]
   201ac:	str	x1, [sp]
   201b0:	ldr	x0, [sp, #8]
   201b4:	add	x0, x0, #0x1d0
   201b8:	str	x0, [sp, #24]
   201bc:	ldr	x0, [sp, #24]
   201c0:	str	x0, [sp, #16]
   201c4:	ldr	x0, [sp, #16]
   201c8:	ldr	w0, [x0, #4]
   201cc:	cmp	w0, #0x0
   201d0:	b.eq	20220 <__sanitizer_set_report_fd@@Base+0x6074>  // b.none
   201d4:	ldr	x0, [sp, #16]
   201d8:	ldr	w1, [x0]
   201dc:	mov	w0, #0x5201                	// #20993
   201e0:	movk	w0, #0x4553, lsl #16
   201e4:	cmp	w1, w0
   201e8:	b.ne	20204 <__sanitizer_set_report_fd@@Base+0x6058>  // b.any
   201ec:	ldr	x0, [sp, #16]
   201f0:	ldr	x1, [x0, #8]
   201f4:	ldr	x0, [sp]
   201f8:	str	x1, [x0]
   201fc:	mov	w0, #0x1                   	// #1
   20200:	b	20228 <__sanitizer_set_report_fd@@Base+0x607c>
   20204:	ldr	x0, [sp, #16]
   20208:	ldr	w0, [x0, #4]
   2020c:	mov	w0, w0
   20210:	ldr	x1, [sp, #24]
   20214:	add	x0, x1, x0
   20218:	str	x0, [sp, #24]
   2021c:	b	201bc <__sanitizer_set_report_fd@@Base+0x6010>
   20220:	nop
   20224:	mov	w0, #0x0                   	// #0
   20228:	add	sp, sp, #0x20
   2022c:	ret
   20230:	str	x30, [sp, #-48]!
   20234:	str	x0, [sp, #24]
   20238:	ldr	x0, [sp, #24]
   2023c:	ldr	x0, [x0, #8]
   20240:	str	x0, [sp, #40]
   20244:	add	x0, sp, #0x20
   20248:	mov	x1, x0
   2024c:	ldr	x0, [sp, #40]
   20250:	bl	201a4 <__sanitizer_set_report_fd@@Base+0x5ff8>
   20254:	and	w0, w0, #0xff
   20258:	eor	w0, w0, #0x1
   2025c:	and	w0, w0, #0xff
   20260:	cmp	w0, #0x0
   20264:	b.eq	20270 <__sanitizer_set_report_fd@@Base+0x60c4>  // b.none
   20268:	mov	w0, #0x0                   	// #0
   2026c:	b	20290 <__sanitizer_set_report_fd@@Base+0x60e4>
   20270:	ldr	x0, [sp, #32]
   20274:	and	x0, x0, #0x40
   20278:	cmp	x0, #0x0
   2027c:	b.eq	20288 <__sanitizer_set_report_fd@@Base+0x60dc>  // b.none
   20280:	mov	w0, #0x2                   	// #2
   20284:	b	2028c <__sanitizer_set_report_fd@@Base+0x60e0>
   20288:	mov	w0, #0x1                   	// #1
   2028c:	nop
   20290:	ldr	x30, [sp], #48
   20294:	ret
   20298:	sub	sp, sp, #0x10
   2029c:	str	x0, [sp, #8]
   202a0:	nop
   202a4:	add	sp, sp, #0x10
   202a8:	ret
   202ac:	sub	sp, sp, #0x30
   202b0:	str	x0, [sp, #24]
   202b4:	str	x1, [sp, #16]
   202b8:	str	x2, [sp, #8]
   202bc:	str	x3, [sp]
   202c0:	ldr	x0, [sp, #24]
   202c4:	str	x0, [sp, #40]
   202c8:	ldr	x0, [sp, #40]
   202cc:	ldr	x1, [x0, #440]
   202d0:	ldr	x0, [sp, #16]
   202d4:	str	x1, [x0]
   202d8:	ldr	x0, [sp, #40]
   202dc:	ldr	x1, [x0, #416]
   202e0:	ldr	x0, [sp]
   202e4:	str	x1, [x0]
   202e8:	ldr	x0, [sp, #40]
   202ec:	ldr	x1, [x0, #432]
   202f0:	ldr	x0, [sp, #8]
   202f4:	str	x1, [x0]
   202f8:	nop
   202fc:	add	sp, sp, #0x30
   20300:	ret
   20304:	str	x30, [sp, #-32]!
   20308:	str	x0, [sp, #24]
   2030c:	ldr	x0, [sp, #24]
   20310:	ldr	x4, [x0, #8]
   20314:	ldr	x0, [sp, #24]
   20318:	add	x1, x0, #0x18
   2031c:	ldr	x0, [sp, #24]
   20320:	add	x2, x0, #0x20
   20324:	ldr	x0, [sp, #24]
   20328:	add	x0, x0, #0x28
   2032c:	mov	x3, x0
   20330:	mov	x0, x4
   20334:	bl	202ac <__sanitizer_set_report_fd@@Base+0x6100>
   20338:	nop
   2033c:	ldr	x30, [sp], #32
   20340:	ret
   20344:	nop
   20348:	ret
   2034c:	nop
   20350:	ret
   20354:	nop
   20358:	ret
   2035c:	str	x30, [sp, #-32]!
   20360:	str	x0, [sp, #24]
   20364:	str	w1, [sp, #20]
   20368:	ldr	w0, [sp, #20]
   2036c:	and	w0, w0, #0x8
   20370:	cmp	w0, #0x0
   20374:	b.eq	20390 <__sanitizer_set_report_fd@@Base+0x61e4>  // b.none
   20378:	ldr	x2, [sp, #24]
   2037c:	ldr	x1, [sp, #24]
   20380:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20384:	add	x0, x0, #0x888
   20388:	bl	25a74 <OnPrint@@Base+0x454>
   2038c:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   20390:	nop
   20394:	ldr	x30, [sp], #32
   20398:	ret
   2039c:	str	x30, [sp, #-80]!
   203a0:	str	x0, [sp, #56]
   203a4:	str	x1, [sp, #48]
   203a8:	str	x2, [sp, #40]
   203ac:	str	x3, [sp, #32]
   203b0:	str	x4, [sp, #24]
   203b4:	str	xzr, [sp, #72]
   203b8:	str	xzr, [sp, #64]
   203bc:	ldr	x1, [sp, #72]
   203c0:	ldr	x0, [sp, #64]
   203c4:	cmp	x1, x0
   203c8:	cset	w0, eq  // eq = none
   203cc:	and	w0, w0, #0xff
   203d0:	and	x0, x0, #0xff
   203d4:	cmp	x0, #0x0
   203d8:	b.eq	203fc <__sanitizer_set_report_fd@@Base+0x6250>  // b.none
   203dc:	ldr	x4, [sp, #64]
   203e0:	ldr	x3, [sp, #72]
   203e4:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   203e8:	add	x2, x0, #0x9a0
   203ec:	mov	w1, #0x80a                 	// #2058
   203f0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   203f4:	add	x0, x0, #0x588
   203f8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   203fc:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   20400:	str	x30, [sp, #-80]!
   20404:	str	x0, [sp, #40]
   20408:	str	x1, [sp, #32]
   2040c:	strb	w2, [sp, #31]
   20410:	ldr	x0, [sp, #40]
   20414:	cmp	x0, #0x0
   20418:	b.eq	20434 <__sanitizer_set_report_fd@@Base+0x6288>  // b.none
   2041c:	ldr	x0, [sp, #32]
   20420:	cmp	x0, #0x0
   20424:	b.eq	20434 <__sanitizer_set_report_fd@@Base+0x6288>  // b.none
   20428:	ldr	x0, [sp, #32]
   2042c:	cmp	x0, #0x100
   20430:	b.ls	2043c <__sanitizer_set_report_fd@@Base+0x6290>  // b.plast
   20434:	mov	w0, #0x0                   	// #0
   20438:	b	20570 <__sanitizer_set_report_fd@@Base+0x63c4>
   2043c:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   20440:	add	x0, x0, #0xda0
   20444:	bl	11514 <__sancov_default_options@@Base+0x1168>
   20448:	and	w0, w0, #0xff
   2044c:	cmp	w0, #0x0
   20450:	cset	w0, eq  // eq = none
   20454:	and	w0, w0, #0xff
   20458:	cmp	w0, #0x0
   2045c:	b.eq	204fc <__sanitizer_set_report_fd@@Base+0x6350>  // b.none
   20460:	ldr	x1, [sp, #40]
   20464:	ldr	x2, [sp, #32]
   20468:	ldrb	w0, [sp, #31]
   2046c:	cmp	w0, #0x0
   20470:	b.eq	2047c <__sanitizer_set_report_fd@@Base+0x62d0>  // b.none
   20474:	mov	x0, #0x0                   	// #0
   20478:	b	20480 <__sanitizer_set_report_fd@@Base+0x62d4>
   2047c:	mov	x0, #0x1                   	// #1
   20480:	mov	x3, x0
   20484:	mov	x0, #0x116                 	// #278
   20488:	bl	1e0e0 <__sanitizer_set_report_fd@@Base+0x3f34>
   2048c:	str	x0, [sp, #72]
   20490:	str	wzr, [sp, #52]
   20494:	add	x0, sp, #0x34
   20498:	mov	x1, x0
   2049c:	ldr	x0, [sp, #72]
   204a0:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   204a4:	and	w0, w0, #0xff
   204a8:	cmp	w0, #0x0
   204ac:	b.eq	204c4 <__sanitizer_set_report_fd@@Base+0x6318>  // b.none
   204b0:	ldr	w0, [sp, #52]
   204b4:	cmp	w0, #0x26
   204b8:	b.ne	204c4 <__sanitizer_set_report_fd@@Base+0x6318>  // b.any
   204bc:	mov	w0, #0x1                   	// #1
   204c0:	b	204c8 <__sanitizer_set_report_fd@@Base+0x631c>
   204c4:	mov	w0, #0x0                   	// #0
   204c8:	cmp	w0, #0x0
   204cc:	b.eq	204e4 <__sanitizer_set_report_fd@@Base+0x6338>  // b.none
   204d0:	mov	w1, #0x1                   	// #1
   204d4:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   204d8:	add	x0, x0, #0xda0
   204dc:	bl	11534 <__sancov_default_options@@Base+0x1188>
   204e0:	b	204fc <__sanitizer_set_report_fd@@Base+0x6350>
   204e4:	ldr	x1, [sp, #72]
   204e8:	ldr	x0, [sp, #32]
   204ec:	cmp	x1, x0
   204f0:	b.ne	204fc <__sanitizer_set_report_fd@@Base+0x6350>  // b.any
   204f4:	mov	w0, #0x1                   	// #1
   204f8:	b	20570 <__sanitizer_set_report_fd@@Base+0x63c4>
   204fc:	mov	w1, #0x0                   	// #0
   20500:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20504:	add	x0, x0, #0x9e0
   20508:	bl	1e2fc <__sanitizer_set_report_fd@@Base+0x4150>
   2050c:	str	x0, [sp, #64]
   20510:	mov	x1, #0x0                   	// #0
   20514:	ldr	x0, [sp, #64]
   20518:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   2051c:	and	w0, w0, #0xff
   20520:	cmp	w0, #0x0
   20524:	b.eq	20530 <__sanitizer_set_report_fd@@Base+0x6384>  // b.none
   20528:	mov	w0, #0x0                   	// #0
   2052c:	b	20570 <__sanitizer_set_report_fd@@Base+0x63c4>
   20530:	ldr	x0, [sp, #64]
   20534:	ldr	x2, [sp, #32]
   20538:	ldr	x1, [sp, #40]
   2053c:	bl	1e368 <__sanitizer_set_report_fd@@Base+0x41bc>
   20540:	str	x0, [sp, #56]
   20544:	mov	x1, #0x0                   	// #0
   20548:	ldr	x0, [sp, #56]
   2054c:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   20550:	and	w0, w0, #0xff
   20554:	cmp	w0, #0x0
   20558:	b.eq	20564 <__sanitizer_set_report_fd@@Base+0x63b8>  // b.none
   2055c:	mov	w0, #0x0                   	// #0
   20560:	b	20570 <__sanitizer_set_report_fd@@Base+0x63c4>
   20564:	ldr	x0, [sp, #64]
   20568:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   2056c:	mov	w0, #0x1                   	// #1
   20570:	ldr	x30, [sp], #80
   20574:	ret
   20578:	str	x30, [sp, #-96]!
   2057c:	str	x0, [sp, #24]
   20580:	ldr	x0, [sp, #24]
   20584:	str	x0, [sp, #88]
   20588:	str	xzr, [sp, #80]
   2058c:	ldr	x1, [sp, #88]
   20590:	ldr	x0, [sp, #80]
   20594:	cmp	x1, x0
   20598:	cset	w0, eq  // eq = none
   2059c:	and	w0, w0, #0xff
   205a0:	and	x0, x0, #0xff
   205a4:	cmp	x0, #0x0
   205a8:	b.eq	205cc <__sanitizer_set_report_fd@@Base+0x6420>  // b.none
   205ac:	ldr	x4, [sp, #80]
   205b0:	ldr	x3, [sp, #88]
   205b4:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   205b8:	add	x2, x0, #0x448
   205bc:	mov	w1, #0x177                 	// #375
   205c0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   205c4:	add	x0, x0, #0x408
   205c8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   205cc:	ldr	x0, [sp, #24]
   205d0:	bl	8964 <__asan_backtrace_open@plt+0x1cf4>
   205d4:	and	w0, w0, #0xff
   205d8:	cmp	w0, #0x0
   205dc:	b.eq	205e8 <__sanitizer_set_report_fd@@Base+0x643c>  // b.none
   205e0:	ldr	x0, [sp, #24]
   205e4:	b	206bc <__sanitizer_set_report_fd@@Base+0x6510>
   205e8:	ldr	x0, [sp, #24]
   205ec:	bl	10d9c <__sancov_default_options@@Base+0x9f0>
   205f0:	str	x0, [sp, #72]
   205f4:	ldr	x0, [sp, #24]
   205f8:	str	x0, [sp, #64]
   205fc:	ldr	x0, [sp, #72]
   20600:	add	w0, w0, #0x1
   20604:	mov	x1, #0x1                   	// #1
   20608:	lsl	x0, x1, x0
   2060c:	str	x0, [sp, #56]
   20610:	ldr	x1, [sp, #64]
   20614:	ldr	x0, [sp, #56]
   20618:	cmp	x1, x0
   2061c:	cset	w0, cs  // cs = hs, nlast
   20620:	and	w0, w0, #0xff
   20624:	and	x0, x0, #0xff
   20628:	cmp	x0, #0x0
   2062c:	b.eq	20650 <__sanitizer_set_report_fd@@Base+0x64a4>  // b.none
   20630:	ldr	x4, [sp, #56]
   20634:	ldr	x3, [sp, #64]
   20638:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   2063c:	add	x2, x0, #0x458
   20640:	mov	w1, #0x17b                 	// #379
   20644:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20648:	add	x0, x0, #0x408
   2064c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   20650:	ldr	x0, [sp, #24]
   20654:	str	x0, [sp, #48]
   20658:	ldr	x0, [sp, #72]
   2065c:	mov	w1, w0
   20660:	mov	x0, #0x1                   	// #1
   20664:	lsl	x0, x0, x1
   20668:	str	x0, [sp, #40]
   2066c:	ldr	x1, [sp, #48]
   20670:	ldr	x0, [sp, #40]
   20674:	cmp	x1, x0
   20678:	cset	w0, ls  // ls = plast
   2067c:	and	w0, w0, #0xff
   20680:	and	x0, x0, #0xff
   20684:	cmp	x0, #0x0
   20688:	b.eq	206ac <__sanitizer_set_report_fd@@Base+0x6500>  // b.none
   2068c:	ldr	x4, [sp, #40]
   20690:	ldr	x3, [sp, #48]
   20694:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20698:	add	x2, x0, #0x480
   2069c:	mov	w1, #0x17c                 	// #380
   206a0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   206a4:	add	x0, x0, #0x408
   206a8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   206ac:	ldr	x0, [sp, #72]
   206b0:	add	w0, w0, #0x1
   206b4:	mov	x1, #0x1                   	// #1
   206b8:	lsl	x0, x1, x0
   206bc:	ldr	x30, [sp], #96
   206c0:	ret
   206c4:	sub	sp, sp, #0x10
   206c8:	str	x0, [sp, #8]
   206cc:	ldr	x0, [sp, #8]
   206d0:	str	xzr, [x0, #16]
   206d4:	nop
   206d8:	add	sp, sp, #0x10
   206dc:	ret
   206e0:	stp	x19, x30, [sp, #-64]!
   206e4:	str	x0, [sp, #24]
   206e8:	str	x1, [sp, #16]
   206ec:	ldr	x0, [sp, #24]
   206f0:	ldr	x0, [x0, #16]
   206f4:	str	x0, [sp, #56]
   206f8:	ldr	x0, [sp, #24]
   206fc:	bl	20968 <__sanitizer_set_report_fd@@Base+0x67bc>
   20700:	str	x0, [sp, #48]
   20704:	ldr	x1, [sp, #56]
   20708:	ldr	x0, [sp, #48]
   2070c:	cmp	x1, x0
   20710:	cset	w0, hi  // hi = pmore
   20714:	and	w0, w0, #0xff
   20718:	and	x0, x0, #0xff
   2071c:	cmp	x0, #0x0
   20720:	b.eq	20744 <__sanitizer_set_report_fd@@Base+0x6598>  // b.none
   20724:	ldr	x4, [sp, #48]
   20728:	ldr	x3, [sp, #56]
   2072c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20730:	add	x2, x0, #0x9f0
   20734:	mov	w1, #0x1be                 	// #446
   20738:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   2073c:	add	x0, x0, #0x408
   20740:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   20744:	ldr	x0, [sp, #24]
   20748:	ldr	x19, [x0, #16]
   2074c:	ldr	x0, [sp, #24]
   20750:	bl	20968 <__sanitizer_set_report_fd@@Base+0x67bc>
   20754:	cmp	x19, x0
   20758:	cset	w0, eq  // eq = none
   2075c:	and	w0, w0, #0xff
   20760:	cmp	w0, #0x0
   20764:	b.eq	20788 <__sanitizer_set_report_fd@@Base+0x65dc>  // b.none
   20768:	ldr	x0, [sp, #24]
   2076c:	ldr	x0, [x0, #16]
   20770:	add	x0, x0, #0x1
   20774:	bl	20578 <__sanitizer_set_report_fd@@Base+0x63cc>
   20778:	str	x0, [sp, #40]
   2077c:	ldr	x1, [sp, #40]
   20780:	ldr	x0, [sp, #24]
   20784:	bl	20984 <__sanitizer_set_report_fd@@Base+0x67d8>
   20788:	ldr	x0, [sp, #24]
   2078c:	ldr	x1, [x0]
   20790:	ldr	x0, [sp, #24]
   20794:	ldr	x0, [x0, #16]
   20798:	add	x3, x0, #0x1
   2079c:	ldr	x2, [sp, #24]
   207a0:	str	x3, [x2, #16]
   207a4:	lsl	x0, x0, #3
   207a8:	add	x0, x1, x0
   207ac:	mov	x2, #0x8                   	// #8
   207b0:	ldr	x1, [sp, #16]
   207b4:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   207b8:	nop
   207bc:	ldp	x19, x30, [sp], #64
   207c0:	ret
   207c4:	str	x30, [sp, #-32]!
   207c8:	str	x0, [sp, #24]
   207cc:	ldr	x0, [sp, #24]
   207d0:	bl	20ac4 <__sanitizer_set_report_fd@@Base+0x6918>
   207d4:	cmp	x0, #0x0
   207d8:	cset	w0, eq  // eq = none
   207dc:	and	w0, w0, #0xff
   207e0:	ldr	x30, [sp], #32
   207e4:	ret
   207e8:	str	x30, [sp, #-48]!
   207ec:	str	x0, [sp, #24]
   207f0:	ldr	x0, [sp, #24]
   207f4:	ldr	x0, [x0, #16]
   207f8:	str	x0, [sp, #40]
   207fc:	str	xzr, [sp, #32]
   20800:	ldr	x1, [sp, #40]
   20804:	ldr	x0, [sp, #32]
   20808:	cmp	x1, x0
   2080c:	cset	w0, ls  // ls = plast
   20810:	and	w0, w0, #0xff
   20814:	and	x0, x0, #0xff
   20818:	cmp	x0, #0x0
   2081c:	b.eq	20840 <__sanitizer_set_report_fd@@Base+0x6694>  // b.none
   20820:	ldr	x4, [sp, #32]
   20824:	ldr	x3, [sp, #40]
   20828:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   2082c:	add	x2, x0, #0xa10
   20830:	mov	w1, #0x1c6                 	// #454
   20834:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20838:	add	x0, x0, #0x408
   2083c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   20840:	ldr	x0, [sp, #24]
   20844:	ldr	x1, [x0]
   20848:	ldr	x0, [sp, #24]
   2084c:	ldr	x0, [x0, #16]
   20850:	lsl	x0, x0, #3
   20854:	sub	x0, x0, #0x8
   20858:	add	x0, x1, x0
   2085c:	ldr	x30, [sp], #48
   20860:	ret
   20864:	str	x30, [sp, #-32]!
   20868:	str	x0, [sp, #24]
   2086c:	ldr	x0, [sp, #24]
   20870:	bl	1a278 <__sanitizer_set_report_fd@@Base+0xcc>
   20874:	cmp	x0, #0x0
   20878:	cset	w0, eq  // eq = none
   2087c:	and	w0, w0, #0xff
   20880:	ldr	x30, [sp], #32
   20884:	ret
   20888:	stp	x19, x30, [sp, #-64]!
   2088c:	str	x0, [sp, #24]
   20890:	str	x1, [sp, #16]
   20894:	ldr	x0, [sp, #24]
   20898:	ldr	x0, [x0, #16]
   2089c:	str	x0, [sp, #56]
   208a0:	ldr	x0, [sp, #24]
   208a4:	bl	9518 <__asan_backtrace_open@plt+0x28a8>
   208a8:	str	x0, [sp, #48]
   208ac:	ldr	x1, [sp, #56]
   208b0:	ldr	x0, [sp, #48]
   208b4:	cmp	x1, x0
   208b8:	cset	w0, hi  // hi = pmore
   208bc:	and	w0, w0, #0xff
   208c0:	and	x0, x0, #0xff
   208c4:	cmp	x0, #0x0
   208c8:	b.eq	208ec <__sanitizer_set_report_fd@@Base+0x6740>  // b.none
   208cc:	ldr	x4, [sp, #48]
   208d0:	ldr	x3, [sp, #56]
   208d4:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   208d8:	add	x2, x0, #0x9f0
   208dc:	mov	w1, #0x1be                 	// #446
   208e0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   208e4:	add	x0, x0, #0x408
   208e8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   208ec:	ldr	x0, [sp, #24]
   208f0:	ldr	x19, [x0, #16]
   208f4:	ldr	x0, [sp, #24]
   208f8:	bl	9518 <__asan_backtrace_open@plt+0x28a8>
   208fc:	cmp	x19, x0
   20900:	cset	w0, eq  // eq = none
   20904:	and	w0, w0, #0xff
   20908:	cmp	w0, #0x0
   2090c:	b.eq	20930 <__sanitizer_set_report_fd@@Base+0x6784>  // b.none
   20910:	ldr	x0, [sp, #24]
   20914:	ldr	x0, [x0, #16]
   20918:	add	x0, x0, #0x1
   2091c:	bl	20578 <__sanitizer_set_report_fd@@Base+0x63cc>
   20920:	str	x0, [sp, #40]
   20924:	ldr	x1, [sp, #40]
   20928:	ldr	x0, [sp, #24]
   2092c:	bl	9530 <__asan_backtrace_open@plt+0x28c0>
   20930:	ldr	x0, [sp, #24]
   20934:	ldr	x1, [x0]
   20938:	ldr	x0, [sp, #24]
   2093c:	ldr	x0, [x0, #16]
   20940:	add	x3, x0, #0x1
   20944:	ldr	x2, [sp, #24]
   20948:	str	x3, [x2, #16]
   2094c:	add	x0, x1, x0
   20950:	mov	x2, #0x1                   	// #1
   20954:	ldr	x1, [sp, #16]
   20958:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   2095c:	nop
   20960:	ldp	x19, x30, [sp], #64
   20964:	ret
   20968:	sub	sp, sp, #0x10
   2096c:	str	x0, [sp, #8]
   20970:	ldr	x0, [sp, #8]
   20974:	ldr	x0, [x0, #8]
   20978:	lsr	x0, x0, #3
   2097c:	add	sp, sp, #0x10
   20980:	ret
   20984:	stp	x19, x30, [sp, #-80]!
   20988:	str	x0, [sp, #24]
   2098c:	str	x1, [sp, #16]
   20990:	ldr	x0, [sp, #16]
   20994:	str	x0, [sp, #72]
   20998:	str	xzr, [sp, #64]
   2099c:	ldr	x1, [sp, #72]
   209a0:	ldr	x0, [sp, #64]
   209a4:	cmp	x1, x0
   209a8:	cset	w0, ls  // ls = plast
   209ac:	and	w0, w0, #0xff
   209b0:	and	x0, x0, #0xff
   209b4:	cmp	x0, #0x0
   209b8:	b.eq	209dc <__sanitizer_set_report_fd@@Base+0x6830>  // b.none
   209bc:	ldr	x4, [sp, #64]
   209c0:	ldr	x3, [sp, #72]
   209c4:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   209c8:	add	x2, x0, #0xa28
   209cc:	mov	w1, #0x1fc                 	// #508
   209d0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   209d4:	add	x0, x0, #0x408
   209d8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   209dc:	ldr	x0, [sp, #24]
   209e0:	ldr	x0, [x0, #16]
   209e4:	str	x0, [sp, #56]
   209e8:	ldr	x0, [sp, #16]
   209ec:	str	x0, [sp, #48]
   209f0:	ldr	x1, [sp, #56]
   209f4:	ldr	x0, [sp, #48]
   209f8:	cmp	x1, x0
   209fc:	cset	w0, hi  // hi = pmore
   20a00:	and	w0, w0, #0xff
   20a04:	and	x0, x0, #0xff
   20a08:	cmp	x0, #0x0
   20a0c:	b.eq	20a30 <__sanitizer_set_report_fd@@Base+0x6884>  // b.none
   20a10:	ldr	x4, [sp, #48]
   20a14:	ldr	x3, [sp, #56]
   20a18:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20a1c:	add	x2, x0, #0xa48
   20a20:	mov	w1, #0x1fd                 	// #509
   20a24:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20a28:	add	x0, x0, #0x408
   20a2c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   20a30:	ldr	x0, [sp, #16]
   20a34:	lsl	x19, x0, #3
   20a38:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   20a3c:	mov	x1, x0
   20a40:	mov	x0, x19
   20a44:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   20a48:	str	x0, [sp, #40]
   20a4c:	mov	w2, #0x0                   	// #0
   20a50:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20a54:	add	x1, x0, #0xa68
   20a58:	ldr	x0, [sp, #40]
   20a5c:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   20a60:	str	x0, [sp, #32]
   20a64:	ldr	x0, [sp, #24]
   20a68:	ldr	x1, [x0]
   20a6c:	ldr	x0, [sp, #24]
   20a70:	ldr	x0, [x0, #16]
   20a74:	lsl	x0, x0, #3
   20a78:	mov	x2, x0
   20a7c:	ldr	x0, [sp, #32]
   20a80:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   20a84:	ldr	x0, [sp, #24]
   20a88:	ldr	x2, [x0]
   20a8c:	ldr	x0, [sp, #24]
   20a90:	ldr	x0, [x0, #8]
   20a94:	mov	x1, x0
   20a98:	mov	x0, x2
   20a9c:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   20aa0:	ldr	x0, [sp, #24]
   20aa4:	ldr	x1, [sp, #32]
   20aa8:	str	x1, [x0]
   20aac:	ldr	x0, [sp, #24]
   20ab0:	ldr	x1, [sp, #40]
   20ab4:	str	x1, [x0, #8]
   20ab8:	nop
   20abc:	ldp	x19, x30, [sp], #80
   20ac0:	ret
   20ac4:	sub	sp, sp, #0x10
   20ac8:	str	x0, [sp, #8]
   20acc:	ldr	x0, [sp, #8]
   20ad0:	ldr	x0, [x0, #16]
   20ad4:	add	sp, sp, #0x10
   20ad8:	ret
   20adc:	str	x30, [sp, #-48]!
   20ae0:	str	w0, [sp, #44]
   20ae4:	str	x1, [sp, #32]
   20ae8:	str	x2, [sp, #24]
   20aec:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   20af0:	ldr	x0, [x0, #3800]
   20af4:	cmp	x0, #0x0
   20af8:	b.eq	20b10 <__sanitizer_set_report_fd@@Base+0x6964>  // b.none
   20afc:	ldr	x2, [sp, #24]
   20b00:	ldr	x1, [sp, #32]
   20b04:	ldr	w0, [sp, #44]
   20b08:	bl	66a0 <_ZN11__sanitizer14real_sigactionEiPKvPv@plt>
   20b0c:	b	20b24 <__sanitizer_set_report_fd@@Base+0x6978>
   20b10:	ldr	x2, [sp, #24]
   20b14:	ldr	x1, [sp, #32]
   20b18:	ldr	w0, [sp, #44]
   20b1c:	bl	6c10 <sigaction@plt>
   20b20:	nop
   20b24:	ldr	x30, [sp], #48
   20b28:	ret
   20b2c:	sub	sp, sp, #0x160
   20b30:	str	x30, [sp]
   20b34:	strb	w0, [sp, #47]
   20b38:	str	x1, [sp, #32]
   20b3c:	str	x2, [sp, #24]
   20b40:	ldr	x0, [sp, #32]
   20b44:	str	x0, [sp, #328]
   20b48:	str	xzr, [sp, #320]
   20b4c:	ldr	x1, [sp, #328]
   20b50:	ldr	x0, [sp, #320]
   20b54:	cmp	x1, x0
   20b58:	cset	w0, eq  // eq = none
   20b5c:	and	w0, w0, #0xff
   20b60:	and	x0, x0, #0xff
   20b64:	cmp	x0, #0x0
   20b68:	b.eq	20b8c <__sanitizer_set_report_fd@@Base+0x69e0>  // b.none
   20b6c:	ldr	x4, [sp, #320]
   20b70:	ldr	x3, [sp, #328]
   20b74:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20b78:	add	x2, x0, #0xbf8
   20b7c:	mov	w1, #0x5b                  	// #91
   20b80:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20b84:	add	x0, x0, #0xc10
   20b88:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   20b8c:	ldr	x0, [sp, #24]
   20b90:	str	x0, [sp, #312]
   20b94:	str	xzr, [sp, #304]
   20b98:	ldr	x1, [sp, #312]
   20b9c:	ldr	x0, [sp, #304]
   20ba0:	cmp	x1, x0
   20ba4:	cset	w0, eq  // eq = none
   20ba8:	and	w0, w0, #0xff
   20bac:	and	x0, x0, #0xff
   20bb0:	cmp	x0, #0x0
   20bb4:	b.eq	20bd8 <__sanitizer_set_report_fd@@Base+0x6a2c>  // b.none
   20bb8:	ldr	x4, [sp, #304]
   20bbc:	ldr	x3, [sp, #312]
   20bc0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20bc4:	add	x2, x0, #0xc58
   20bc8:	mov	w1, #0x5c                  	// #92
   20bcc:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20bd0:	add	x0, x0, #0xc10
   20bd4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   20bd8:	ldrb	w0, [sp, #47]
   20bdc:	cmp	w0, #0x0
   20be0:	b.eq	20d8c <__sanitizer_set_report_fd@@Base+0x6be0>  // b.none
   20be4:	add	x0, sp, #0xa0
   20be8:	mov	x1, x0
   20bec:	mov	w0, #0x3                   	// #3
   20bf0:	bl	6bd0 <getrlimit@plt>
   20bf4:	sxtw	x0, w0
   20bf8:	str	x0, [sp, #280]
   20bfc:	str	xzr, [sp, #272]
   20c00:	ldr	x1, [sp, #280]
   20c04:	ldr	x0, [sp, #272]
   20c08:	cmp	x1, x0
   20c0c:	cset	w0, ne  // ne = any
   20c10:	and	w0, w0, #0xff
   20c14:	and	x0, x0, #0xff
   20c18:	cmp	x0, #0x0
   20c1c:	b.eq	20c40 <__sanitizer_set_report_fd@@Base+0x6a94>  // b.none
   20c20:	ldr	x4, [sp, #272]
   20c24:	ldr	x3, [sp, #280]
   20c28:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20c2c:	add	x2, x0, #0xc70
   20c30:	mov	w1, #0x60                  	// #96
   20c34:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20c38:	add	x0, x0, #0xc10
   20c3c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   20c40:	add	x0, sp, #0x30
   20c44:	mov	w1, #0x1                   	// #1
   20c48:	bl	26098 <OnPrint@@Base+0xa78>
   20c4c:	add	x0, sp, #0x50
   20c50:	mov	x2, #0x0                   	// #0
   20c54:	mov	x1, #0x0                   	// #0
   20c58:	bl	21c64 <__sanitizer_set_report_fd@@Base+0x7ab8>
   20c5c:	str	xzr, [sp, #344]
   20c60:	add	x1, sp, #0x50
   20c64:	add	x0, sp, #0x30
   20c68:	bl	266a8 <OnPrint@@Base+0x1088>
   20c6c:	and	w0, w0, #0xff
   20c70:	cmp	w0, #0x0
   20c74:	b.eq	20c98 <__sanitizer_set_report_fd@@Base+0x6aec>  // b.none
   20c78:	add	x1, sp, #0xa0
   20c7c:	ldr	x0, [sp, #88]
   20c80:	cmp	x1, x0
   20c84:	b.cc	20c94 <__sanitizer_set_report_fd@@Base+0x6ae8>  // b.lo, b.ul, b.last
   20c88:	ldr	x0, [sp, #88]
   20c8c:	str	x0, [sp, #344]
   20c90:	b	20c60 <__sanitizer_set_report_fd@@Base+0x6ab4>
   20c94:	nop
   20c98:	add	x1, sp, #0xa0
   20c9c:	ldr	x0, [sp, #80]
   20ca0:	cmp	x1, x0
   20ca4:	b.cc	20cc0 <__sanitizer_set_report_fd@@Base+0x6b14>  // b.lo, b.ul, b.last
   20ca8:	add	x1, sp, #0xa0
   20cac:	ldr	x0, [sp, #88]
   20cb0:	cmp	x1, x0
   20cb4:	b.cs	20cc0 <__sanitizer_set_report_fd@@Base+0x6b14>  // b.hs, b.nlast
   20cb8:	mov	w0, #0x1                   	// #1
   20cbc:	b	20cc4 <__sanitizer_set_report_fd@@Base+0x6b18>
   20cc0:	mov	w0, #0x0                   	// #0
   20cc4:	and	x0, x0, #0xff
   20cc8:	str	x0, [sp, #264]
   20ccc:	str	xzr, [sp, #256]
   20cd0:	ldr	x1, [sp, #264]
   20cd4:	ldr	x0, [sp, #256]
   20cd8:	cmp	x1, x0
   20cdc:	cset	w0, eq  // eq = none
   20ce0:	and	w0, w0, #0xff
   20ce4:	and	x0, x0, #0xff
   20ce8:	cmp	x0, #0x0
   20cec:	b.eq	20d10 <__sanitizer_set_report_fd@@Base+0x6b64>  // b.none
   20cf0:	ldr	x4, [sp, #256]
   20cf4:	ldr	x3, [sp, #264]
   20cf8:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20cfc:	add	x2, x0, #0xca0
   20d00:	mov	w1, #0x6a                  	// #106
   20d04:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20d08:	add	x0, x0, #0xc10
   20d0c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   20d10:	ldr	x0, [sp, #160]
   20d14:	str	x0, [sp, #336]
   20d18:	ldr	x1, [sp, #88]
   20d1c:	ldr	x0, [sp, #344]
   20d20:	sub	x0, x1, x0
   20d24:	ldr	x1, [sp, #336]
   20d28:	cmp	x1, x0
   20d2c:	b.ls	20d40 <__sanitizer_set_report_fd@@Base+0x6b94>  // b.plast
   20d30:	ldr	x1, [sp, #88]
   20d34:	ldr	x0, [sp, #344]
   20d38:	sub	x0, x1, x0
   20d3c:	str	x0, [sp, #336]
   20d40:	ldr	x1, [sp, #336]
   20d44:	mov	x0, #0x40000000            	// #1073741824
   20d48:	cmp	x1, x0
   20d4c:	b.ls	20d58 <__sanitizer_set_report_fd@@Base+0x6bac>  // b.plast
   20d50:	mov	x0, #0x40000000            	// #1073741824
   20d54:	str	x0, [sp, #336]
   20d58:	ldr	x1, [sp, #88]
   20d5c:	ldr	x0, [sp, #32]
   20d60:	str	x1, [x0]
   20d64:	ldr	x1, [sp, #88]
   20d68:	ldr	x0, [sp, #336]
   20d6c:	sub	x1, x1, x0
   20d70:	ldr	x0, [sp, #24]
   20d74:	str	x1, [x0]
   20d78:	add	x0, sp, #0x50
   20d7c:	bl	21ca0 <__sanitizer_set_report_fd@@Base+0x7af4>
   20d80:	add	x0, sp, #0x30
   20d84:	bl	26194 <OnPrint@@Base+0xb74>
   20d88:	b	20e40 <__sanitizer_set_report_fd@@Base+0x6c94>
   20d8c:	str	xzr, [sp, #248]
   20d90:	str	xzr, [sp, #240]
   20d94:	add	x0, sp, #0xb0
   20d98:	bl	6700 <pthread_attr_init@plt>
   20d9c:	bl	6b60 <pthread_self@plt>
   20da0:	mov	x2, x0
   20da4:	add	x0, sp, #0xb0
   20da8:	mov	x1, x0
   20dac:	mov	x0, x2
   20db0:	bl	6690 <pthread_getattr_np@plt>
   20db4:	sxtw	x0, w0
   20db8:	str	x0, [sp, #296]
   20dbc:	str	xzr, [sp, #288]
   20dc0:	ldr	x1, [sp, #296]
   20dc4:	ldr	x0, [sp, #288]
   20dc8:	cmp	x1, x0
   20dcc:	cset	w0, ne  // ne = any
   20dd0:	and	w0, w0, #0xff
   20dd4:	and	x0, x0, #0xff
   20dd8:	cmp	x0, #0x0
   20ddc:	b.eq	20e00 <__sanitizer_set_report_fd@@Base+0x6c54>  // b.none
   20de0:	ldr	x4, [sp, #288]
   20de4:	ldr	x3, [sp, #296]
   20de8:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20dec:	add	x2, x0, #0xce8
   20df0:	mov	w1, #0x88                  	// #136
   20df4:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20df8:	add	x0, x0, #0xc10
   20dfc:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   20e00:	add	x2, sp, #0xf8
   20e04:	add	x1, sp, #0xf0
   20e08:	add	x0, sp, #0xb0
   20e0c:	bl	2400c <__sanitizer_set_report_fd@@Base+0x9e60>
   20e10:	add	x0, sp, #0xb0
   20e14:	bl	6820 <pthread_attr_destroy@plt>
   20e18:	ldr	x0, [sp, #240]
   20e1c:	mov	x1, x0
   20e20:	ldr	x0, [sp, #248]
   20e24:	add	x1, x1, x0
   20e28:	ldr	x0, [sp, #32]
   20e2c:	str	x1, [x0]
   20e30:	ldr	x0, [sp, #240]
   20e34:	mov	x1, x0
   20e38:	ldr	x0, [sp, #24]
   20e3c:	str	x1, [x0]
   20e40:	ldr	x30, [sp]
   20e44:	add	sp, sp, #0x160
   20e48:	ret
   20e4c:	str	x30, [sp, #-64]!
   20e50:	str	x0, [sp, #24]
   20e54:	str	x1, [sp, #16]
   20e58:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20e5c:	add	x1, x0, #0xd20
   20e60:	mov	x0, #0xffffffffffffffff    	// #-1
   20e64:	bl	6740 <dlsym@plt>
   20e68:	str	x0, [sp, #40]
   20e6c:	ldr	x0, [sp, #40]
   20e70:	cmp	x0, #0x0
   20e74:	b.ne	20e80 <__sanitizer_set_report_fd@@Base+0x6cd4>  // b.any
   20e78:	mov	w0, #0x0                   	// #0
   20e7c:	b	20f00 <__sanitizer_set_report_fd@@Base+0x6d54>
   20e80:	mov	x0, #0x8                   	// #8
   20e84:	str	x0, [sp, #56]
   20e88:	mov	x0, #0x8                   	// #8
   20e8c:	str	x0, [sp, #48]
   20e90:	ldr	x1, [sp, #56]
   20e94:	ldr	x0, [sp, #48]
   20e98:	cmp	x1, x0
   20e9c:	cset	w0, ne  // ne = any
   20ea0:	and	w0, w0, #0xff
   20ea4:	and	x0, x0, #0xff
   20ea8:	cmp	x0, #0x0
   20eac:	b.eq	20ed0 <__sanitizer_set_report_fd@@Base+0x6d24>  // b.none
   20eb0:	ldr	x4, [sp, #48]
   20eb4:	ldr	x3, [sp, #56]
   20eb8:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20ebc:	add	x2, x0, #0xd28
   20ec0:	mov	w1, #0x98                  	// #152
   20ec4:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20ec8:	add	x0, x0, #0xc10
   20ecc:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   20ed0:	add	x1, sp, #0x28
   20ed4:	add	x0, sp, #0x20
   20ed8:	mov	x2, #0x8                   	// #8
   20edc:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   20ee0:	ldr	x3, [sp, #32]
   20ee4:	mov	w2, #0x1                   	// #1
   20ee8:	ldr	x1, [sp, #16]
   20eec:	ldr	x0, [sp, #24]
   20ef0:	blr	x3
   20ef4:	cmp	w0, #0x0
   20ef8:	cset	w0, eq  // eq = none
   20efc:	and	w0, w0, #0xff
   20f00:	ldr	x30, [sp], #64
   20f04:	ret
   20f08:	str	x30, [sp, #-128]!
   20f0c:	str	x0, [sp, #40]
   20f10:	str	x1, [sp, #32]
   20f14:	str	x2, [sp, #24]
   20f18:	add	x0, sp, #0x38
   20f1c:	mov	x2, #0x40                  	// #64
   20f20:	mov	x1, x0
   20f24:	mov	w0, #0x2                   	// #2
   20f28:	bl	6730 <confstr@plt>
   20f2c:	str	x0, [sp, #120]
   20f30:	ldr	x0, [sp, #120]
   20f34:	cmp	x0, #0x3f
   20f38:	b.ls	20f44 <__sanitizer_set_report_fd@@Base+0x6d98>  // b.plast
   20f3c:	mov	w0, #0x0                   	// #0
   20f40:	b	21020 <__sanitizer_set_report_fd@@Base+0x6e74>
   20f44:	ldr	x0, [sp, #120]
   20f48:	add	x1, sp, #0x38
   20f4c:	strb	wzr, [x1, x0]
   20f50:	add	x3, sp, #0x38
   20f54:	mov	x2, #0x6                   	// #6
   20f58:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   20f5c:	add	x1, x0, #0xd50
   20f60:	mov	x0, x3
   20f64:	bl	1cb4c <__sanitizer_set_report_fd@@Base+0x29a0>
   20f68:	cmp	w0, #0x0
   20f6c:	cset	w0, ne  // ne = any
   20f70:	and	w0, w0, #0xff
   20f74:	cmp	w0, #0x0
   20f78:	b.eq	20f84 <__sanitizer_set_report_fd@@Base+0x6dd8>  // b.none
   20f7c:	mov	w0, #0x0                   	// #0
   20f80:	b	21020 <__sanitizer_set_report_fd@@Base+0x6e74>
   20f84:	add	x0, sp, #0x38
   20f88:	add	x0, x0, #0x6
   20f8c:	str	x0, [sp, #48]
   20f90:	ldr	x0, [sp, #48]
   20f94:	add	x1, sp, #0x30
   20f98:	mov	w2, #0xa                   	// #10
   20f9c:	bl	1d110 <__sanitizer_set_report_fd@@Base+0x2f64>
   20fa0:	mov	w1, w0
   20fa4:	ldr	x0, [sp, #40]
   20fa8:	str	w1, [x0]
   20fac:	ldr	x0, [sp, #48]
   20fb0:	ldrb	w0, [x0]
   20fb4:	cmp	w0, #0x2e
   20fb8:	b.ne	20fd8 <__sanitizer_set_report_fd@@Base+0x6e2c>  // b.any
   20fbc:	ldr	x0, [sp, #48]
   20fc0:	add	x0, x0, #0x1
   20fc4:	add	x1, sp, #0x30
   20fc8:	mov	w2, #0xa                   	// #10
   20fcc:	bl	1d110 <__sanitizer_set_report_fd@@Base+0x2f64>
   20fd0:	mov	w1, w0
   20fd4:	b	20fdc <__sanitizer_set_report_fd@@Base+0x6e30>
   20fd8:	mov	w1, #0x0                   	// #0
   20fdc:	ldr	x0, [sp, #32]
   20fe0:	str	w1, [x0]
   20fe4:	ldr	x0, [sp, #48]
   20fe8:	ldrb	w0, [x0]
   20fec:	cmp	w0, #0x2e
   20ff0:	b.ne	21010 <__sanitizer_set_report_fd@@Base+0x6e64>  // b.any
   20ff4:	ldr	x0, [sp, #48]
   20ff8:	add	x0, x0, #0x1
   20ffc:	add	x1, sp, #0x30
   21000:	mov	w2, #0xa                   	// #10
   21004:	bl	1d110 <__sanitizer_set_report_fd@@Base+0x2f64>
   21008:	mov	w1, w0
   2100c:	b	21014 <__sanitizer_set_report_fd@@Base+0x6e68>
   21010:	mov	w1, #0x0                   	// #0
   21014:	ldr	x0, [sp, #24]
   21018:	str	w1, [x0]
   2101c:	mov	w0, #0x1                   	// #1
   21020:	ldr	x30, [sp], #128
   21024:	ret
   21028:	str	x30, [sp, #-48]!
   2102c:	str	w0, [sp, #28]
   21030:	str	w1, [sp, #24]
   21034:	str	w2, [sp, #20]
   21038:	add	x2, sp, #0x24
   2103c:	add	x1, sp, #0x28
   21040:	add	x0, sp, #0x2c
   21044:	bl	20f08 <__sanitizer_set_report_fd@@Base+0x6d5c>
   21048:	and	w0, w0, #0xff
   2104c:	eor	w0, w0, #0x1
   21050:	and	w0, w0, #0xff
   21054:	cmp	w0, #0x0
   21058:	b.eq	21064 <__sanitizer_set_report_fd@@Base+0x6eb8>  // b.none
   2105c:	mov	w0, #0x0                   	// #0
   21060:	b	210d8 <__sanitizer_set_report_fd@@Base+0x6f2c>
   21064:	ldr	w0, [sp, #44]
   21068:	ldr	w1, [sp, #28]
   2106c:	cmp	w1, w0
   21070:	b.ge	2107c <__sanitizer_set_report_fd@@Base+0x6ed0>  // b.tcont
   21074:	mov	w0, #0x1                   	// #1
   21078:	b	210d8 <__sanitizer_set_report_fd@@Base+0x6f2c>
   2107c:	ldr	w0, [sp, #44]
   21080:	ldr	w1, [sp, #28]
   21084:	cmp	w1, w0
   21088:	b.le	21094 <__sanitizer_set_report_fd@@Base+0x6ee8>
   2108c:	mov	w0, #0x0                   	// #0
   21090:	b	210d8 <__sanitizer_set_report_fd@@Base+0x6f2c>
   21094:	ldr	w0, [sp, #40]
   21098:	ldr	w1, [sp, #24]
   2109c:	cmp	w1, w0
   210a0:	b.ge	210ac <__sanitizer_set_report_fd@@Base+0x6f00>  // b.tcont
   210a4:	mov	w0, #0x1                   	// #1
   210a8:	b	210d8 <__sanitizer_set_report_fd@@Base+0x6f2c>
   210ac:	ldr	w0, [sp, #40]
   210b0:	ldr	w1, [sp, #24]
   210b4:	cmp	w1, w0
   210b8:	b.le	210c4 <__sanitizer_set_report_fd@@Base+0x6f18>
   210bc:	mov	w0, #0x0                   	// #0
   210c0:	b	210d8 <__sanitizer_set_report_fd@@Base+0x6f2c>
   210c4:	ldr	w0, [sp, #36]
   210c8:	ldr	w1, [sp, #20]
   210cc:	cmp	w1, w0
   210d0:	cset	w0, le
   210d4:	and	w0, w0, #0xff
   210d8:	ldr	x30, [sp], #48
   210dc:	ret
   210e0:	str	x30, [sp, #-48]!
   210e4:	mov	x0, #0x10                  	// #16
   210e8:	str	x0, [sp, #40]
   210ec:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   210f0:	add	x1, x0, #0xd58
   210f4:	mov	x0, #0xffffffffffffffff    	// #-1
   210f8:	bl	6740 <dlsym@plt>
   210fc:	str	x0, [sp, #32]
   21100:	str	xzr, [sp, #24]
   21104:	str	xzr, [sp, #16]
   21108:	add	x1, sp, #0x10
   2110c:	add	x0, sp, #0x18
   21110:	mov	x2, x1
   21114:	mov	x1, x0
   21118:	ldr	x0, [sp, #32]
   2111c:	bl	21ae8 <__sanitizer_set_report_fd@@Base+0x793c>
   21120:	ldr	x0, [sp, #16]
   21124:	cmp	x0, #0xf
   21128:	b.hi	21134 <__sanitizer_set_report_fd@@Base+0x6f88>  // b.pmore
   2112c:	mov	x0, #0x10                  	// #16
   21130:	str	x0, [sp, #16]
   21134:	ldr	x0, [sp, #24]
   21138:	ldr	x1, [sp, #16]
   2113c:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   21140:	mov	x1, x0
   21144:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   21148:	add	x0, x0, #0xda8
   2114c:	str	x1, [x0]
   21150:	nop
   21154:	ldr	x30, [sp], #48
   21158:	ret
   2115c:	str	x30, [sp, #-32]!
   21160:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   21164:	add	x0, x0, #0xdb0
   21168:	bl	21d70 <__sanitizer_set_report_fd@@Base+0x7bc4>
   2116c:	str	x0, [sp, #24]
   21170:	ldr	x0, [sp, #24]
   21174:	cmp	x0, #0x0
   21178:	b.eq	21184 <__sanitizer_set_report_fd@@Base+0x6fd8>  // b.none
   2117c:	ldr	x0, [sp, #24]
   21180:	b	211ac <__sanitizer_set_report_fd@@Base+0x7000>
   21184:	mov	x0, #0x6f0                 	// #1776
   21188:	str	x0, [sp, #24]
   2118c:	ldr	x0, [sp, #24]
   21190:	cmp	x0, #0x0
   21194:	b.eq	211a8 <__sanitizer_set_report_fd@@Base+0x6ffc>  // b.none
   21198:	ldr	x1, [sp, #24]
   2119c:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   211a0:	add	x0, x0, #0xdb0
   211a4:	bl	21d8c <__sanitizer_set_report_fd@@Base+0x7be0>
   211a8:	ldr	x0, [sp, #24]
   211ac:	ldr	x30, [sp], #32
   211b0:	ret
   211b4:	mov	x0, #0x10                  	// #16
   211b8:	ret
   211bc:	stp	x19, x30, [sp, #-32]!
   211c0:	mrs	x0, tpidr_el0
   211c4:	mov	x19, x0
   211c8:	bl	2115c <__sanitizer_set_report_fd@@Base+0x6fb0>
   211cc:	sub	x0, x19, x0
   211d0:	str	x0, [sp, #24]
   211d4:	ldr	x0, [sp, #24]
   211d8:	ldp	x19, x30, [sp], #32
   211dc:	ret
   211e0:	str	x30, [sp, #-32]!
   211e4:	str	x0, [sp, #24]
   211e8:	str	x1, [sp, #16]
   211ec:	bl	211bc <__sanitizer_set_report_fd@@Base+0x7010>
   211f0:	mov	x1, x0
   211f4:	ldr	x0, [sp, #24]
   211f8:	str	x1, [x0]
   211fc:	bl	21218 <__sanitizer_set_report_fd@@Base+0x706c>
   21200:	mov	x1, x0
   21204:	ldr	x0, [sp, #16]
   21208:	str	x1, [x0]
   2120c:	nop
   21210:	ldr	x30, [sp], #32
   21214:	ret
   21218:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   2121c:	add	x0, x0, #0xda8
   21220:	ldr	x0, [x0]
   21224:	ret
   21228:	str	x30, [sp, #-112]!
   2122c:	strb	w0, [sp, #63]
   21230:	str	x1, [sp, #48]
   21234:	str	x2, [sp, #40]
   21238:	str	x3, [sp, #32]
   2123c:	str	x4, [sp, #24]
   21240:	ldr	x1, [sp, #24]
   21244:	ldr	x0, [sp, #32]
   21248:	bl	211e0 <__sanitizer_set_report_fd@@Base+0x7034>
   2124c:	add	x1, sp, #0x40
   21250:	add	x0, sp, #0x48
   21254:	mov	x2, x1
   21258:	mov	x1, x0
   2125c:	ldrb	w0, [sp, #63]
   21260:	bl	20b2c <__sanitizer_set_report_fd@@Base+0x6980>
   21264:	ldr	x1, [sp, #64]
   21268:	ldr	x0, [sp, #48]
   2126c:	str	x1, [x0]
   21270:	ldr	x1, [sp, #72]
   21274:	ldr	x0, [sp, #64]
   21278:	sub	x1, x1, x0
   2127c:	ldr	x0, [sp, #40]
   21280:	str	x1, [x0]
   21284:	ldrb	w0, [sp, #63]
   21288:	eor	w0, w0, #0x1
   2128c:	and	w0, w0, #0xff
   21290:	cmp	w0, #0x0
   21294:	b.eq	213e0 <__sanitizer_set_report_fd@@Base+0x7234>  // b.none
   21298:	ldr	x0, [sp, #32]
   2129c:	ldr	x1, [x0]
   212a0:	ldr	x0, [sp, #48]
   212a4:	ldr	x0, [x0]
   212a8:	cmp	x1, x0
   212ac:	b.ls	213e0 <__sanitizer_set_report_fd@@Base+0x7234>  // b.plast
   212b0:	ldr	x0, [sp, #32]
   212b4:	ldr	x1, [x0]
   212b8:	ldr	x0, [sp, #48]
   212bc:	ldr	x2, [x0]
   212c0:	ldr	x0, [sp, #40]
   212c4:	ldr	x0, [x0]
   212c8:	add	x0, x2, x0
   212cc:	cmp	x1, x0
   212d0:	b.cs	213e0 <__sanitizer_set_report_fd@@Base+0x7234>  // b.hs, b.nlast
   212d4:	ldr	x0, [sp, #32]
   212d8:	ldr	x1, [x0]
   212dc:	ldr	x0, [sp, #24]
   212e0:	ldr	x0, [x0]
   212e4:	add	x0, x1, x0
   212e8:	str	x0, [sp, #104]
   212ec:	ldr	x0, [sp, #48]
   212f0:	ldr	x0, [x0]
   212f4:	str	x0, [sp, #96]
   212f8:	ldr	x1, [sp, #104]
   212fc:	ldr	x0, [sp, #96]
   21300:	cmp	x1, x0
   21304:	cset	w0, ls  // ls = plast
   21308:	and	w0, w0, #0xff
   2130c:	and	x0, x0, #0xff
   21310:	cmp	x0, #0x0
   21314:	b.eq	21338 <__sanitizer_set_report_fd@@Base+0x718c>  // b.none
   21318:	ldr	x4, [sp, #96]
   2131c:	ldr	x3, [sp, #104]
   21320:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21324:	add	x2, x0, #0xd78
   21328:	mov	w1, #0x203                 	// #515
   2132c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21330:	add	x0, x0, #0xc10
   21334:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   21338:	ldr	x0, [sp, #32]
   2133c:	ldr	x1, [x0]
   21340:	ldr	x0, [sp, #24]
   21344:	ldr	x0, [x0]
   21348:	add	x0, x1, x0
   2134c:	str	x0, [sp, #88]
   21350:	ldr	x0, [sp, #48]
   21354:	ldr	x1, [x0]
   21358:	ldr	x0, [sp, #40]
   2135c:	ldr	x0, [x0]
   21360:	add	x0, x1, x0
   21364:	str	x0, [sp, #80]
   21368:	ldr	x1, [sp, #88]
   2136c:	ldr	x0, [sp, #80]
   21370:	cmp	x1, x0
   21374:	cset	w0, hi  // hi = pmore
   21378:	and	w0, w0, #0xff
   2137c:	and	x0, x0, #0xff
   21380:	cmp	x0, #0x0
   21384:	b.eq	213a8 <__sanitizer_set_report_fd@@Base+0x71fc>  // b.none
   21388:	ldr	x4, [sp, #80]
   2138c:	ldr	x3, [sp, #88]
   21390:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21394:	add	x2, x0, #0xda8
   21398:	mov	w1, #0x204                 	// #516
   2139c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   213a0:	add	x0, x0, #0xc10
   213a4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   213a8:	ldr	x0, [sp, #40]
   213ac:	ldr	x1, [x0]
   213b0:	ldr	x0, [sp, #24]
   213b4:	ldr	x0, [x0]
   213b8:	sub	x1, x1, x0
   213bc:	ldr	x0, [sp, #40]
   213c0:	str	x1, [x0]
   213c4:	ldr	x0, [sp, #48]
   213c8:	ldr	x1, [x0]
   213cc:	ldr	x0, [sp, #40]
   213d0:	ldr	x0, [x0]
   213d4:	add	x1, x1, x0
   213d8:	ldr	x0, [sp, #32]
   213dc:	str	x1, [x0]
   213e0:	nop
   213e4:	ldr	x30, [sp], #112
   213e8:	ret
   213ec:	stp	x19, x30, [sp, #-208]!
   213f0:	str	x0, [sp, #40]
   213f4:	str	x1, [sp, #32]
   213f8:	str	x2, [sp, #24]
   213fc:	ldr	x0, [sp, #24]
   21400:	str	x0, [sp, #192]
   21404:	add	x0, sp, #0x80
   21408:	mov	x1, #0x1000                	// #4096
   2140c:	bl	89fc <__asan_backtrace_open@plt+0x1d8c>
   21410:	ldr	x0, [sp, #192]
   21414:	ldrb	w0, [x0, #8]
   21418:	cmp	w0, #0x0
   2141c:	b.eq	2144c <__sanitizer_set_report_fd@@Base+0x72a0>  // b.none
   21420:	ldr	x0, [sp, #192]
   21424:	strb	wzr, [x0, #8]
   21428:	add	x0, sp, #0x80
   2142c:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   21430:	mov	x19, x0
   21434:	add	x0, sp, #0x80
   21438:	bl	1a278 <__sanitizer_set_report_fd@@Base+0xcc>
   2143c:	mov	x1, x0
   21440:	mov	x0, x19
   21444:	bl	14678 <__sancov_default_options@@Base+0x42cc>
   21448:	b	2147c <__sanitizer_set_report_fd@@Base+0x72d0>
   2144c:	ldr	x0, [sp, #40]
   21450:	ldr	x0, [x0, #8]
   21454:	cmp	x0, #0x0
   21458:	b.eq	2147c <__sanitizer_set_report_fd@@Base+0x72d0>  // b.none
   2145c:	ldr	x0, [sp, #40]
   21460:	ldr	x0, [x0, #8]
   21464:	add	x3, sp, #0x80
   21468:	mov	x2, x0
   2146c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21470:	add	x1, x0, #0xde0
   21474:	mov	x0, x3
   21478:	bl	25bdc <OnPrint@@Base+0x5bc>
   2147c:	add	x0, sp, #0x80
   21480:	mov	x1, #0x0                   	// #0
   21484:	bl	92fc <__asan_backtrace_open@plt+0x268c>
   21488:	ldrb	w0, [x0]
   2148c:	cmp	w0, #0x0
   21490:	cset	w0, eq  // eq = none
   21494:	and	w0, w0, #0xff
   21498:	cmp	w0, #0x0
   2149c:	b.eq	214a8 <__sanitizer_set_report_fd@@Base+0x72fc>  // b.none
   214a0:	mov	w19, #0x0                   	// #0
   214a4:	b	215c0 <__sanitizer_set_report_fd@@Base+0x7414>
   214a8:	add	x0, sp, #0x38
   214ac:	bl	21bc0 <__sanitizer_set_report_fd@@Base+0x7a14>
   214b0:	add	x0, sp, #0x80
   214b4:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   214b8:	mov	x3, x0
   214bc:	ldr	x0, [sp, #40]
   214c0:	ldr	x1, [x0]
   214c4:	add	x0, sp, #0x38
   214c8:	mov	x2, x1
   214cc:	mov	x1, x3
   214d0:	bl	13ffc <__sancov_default_options@@Base+0x3c50>
   214d4:	str	wzr, [sp, #204]
   214d8:	ldr	x0, [sp, #40]
   214dc:	ldrh	w0, [x0, #24]
   214e0:	mov	w1, w0
   214e4:	ldr	w0, [sp, #204]
   214e8:	cmp	w0, w1
   214ec:	b.ge	215ac <__sanitizer_set_report_fd@@Base+0x7400>  // b.tcont
   214f0:	ldr	x0, [sp, #40]
   214f4:	ldr	x2, [x0, #16]
   214f8:	ldrsw	x1, [sp, #204]
   214fc:	mov	x0, x1
   21500:	lsl	x0, x0, #3
   21504:	sub	x0, x0, x1
   21508:	lsl	x0, x0, #3
   2150c:	add	x0, x2, x0
   21510:	str	x0, [sp, #184]
   21514:	ldr	x0, [sp, #184]
   21518:	ldr	w0, [x0]
   2151c:	cmp	w0, #0x1
   21520:	b.ne	2159c <__sanitizer_set_report_fd@@Base+0x73f0>  // b.any
   21524:	ldr	x0, [sp, #40]
   21528:	ldr	x1, [x0]
   2152c:	ldr	x0, [sp, #184]
   21530:	ldr	x0, [x0, #16]
   21534:	add	x0, x1, x0
   21538:	str	x0, [sp, #176]
   2153c:	ldr	x0, [sp, #184]
   21540:	ldr	x0, [x0, #40]
   21544:	ldr	x1, [sp, #176]
   21548:	add	x0, x1, x0
   2154c:	str	x0, [sp, #168]
   21550:	ldr	x0, [sp, #184]
   21554:	ldr	w0, [x0, #4]
   21558:	and	w0, w0, #0x1
   2155c:	cmp	w0, #0x0
   21560:	cset	w0, ne  // ne = any
   21564:	strb	w0, [sp, #167]
   21568:	ldr	x0, [sp, #184]
   2156c:	ldr	w0, [x0, #4]
   21570:	and	w0, w0, #0x2
   21574:	cmp	w0, #0x0
   21578:	cset	w0, ne  // ne = any
   2157c:	strb	w0, [sp, #166]
   21580:	add	x0, sp, #0x38
   21584:	mov	x5, #0x0                   	// #0
   21588:	ldrb	w4, [sp, #166]
   2158c:	ldrb	w3, [sp, #167]
   21590:	ldr	x2, [sp, #168]
   21594:	ldr	x1, [sp, #176]
   21598:	bl	14150 <__sancov_default_options@@Base+0x3da4>
   2159c:	ldr	w0, [sp, #204]
   215a0:	add	w0, w0, #0x1
   215a4:	str	w0, [sp, #204]
   215a8:	b	214d8 <__sanitizer_set_report_fd@@Base+0x732c>
   215ac:	ldr	x0, [sp, #192]
   215b0:	ldr	x0, [x0]
   215b4:	add	x1, sp, #0x38
   215b8:	bl	21db4 <__sanitizer_set_report_fd@@Base+0x7c08>
   215bc:	mov	w19, #0x0                   	// #0
   215c0:	add	x0, sp, #0x80
   215c4:	bl	9274 <__asan_backtrace_open@plt+0x2604>
   215c8:	mov	w0, w19
   215cc:	ldp	x19, x30, [sp], #208
   215d0:	ret
   215d4:	mov	w0, #0x0                   	// #0
   215d8:	ret
   215dc:	str	x30, [sp, #-64]!
   215e0:	str	x0, [sp, #24]
   215e4:	add	x0, sp, #0x20
   215e8:	mov	w1, #0x1                   	// #1
   215ec:	bl	26098 <OnPrint@@Base+0xa78>
   215f0:	add	x0, sp, #0x20
   215f4:	ldr	x1, [sp, #24]
   215f8:	bl	26308 <OnPrint@@Base+0xce8>
   215fc:	add	x0, sp, #0x20
   21600:	bl	26194 <OnPrint@@Base+0xb74>
   21604:	nop
   21608:	ldr	x30, [sp], #64
   2160c:	ret
   21610:	str	x30, [sp, #-48]!
   21614:	str	x0, [sp, #24]
   21618:	ldr	x0, [sp, #24]
   2161c:	bl	21c1c <__sanitizer_set_report_fd@@Base+0x7a70>
   21620:	bl	215d4 <__sanitizer_set_report_fd@@Base+0x7428>
   21624:	and	w0, w0, #0xff
   21628:	cmp	w0, #0x0
   2162c:	b.eq	2163c <__sanitizer_set_report_fd@@Base+0x7490>  // b.none
   21630:	ldr	x0, [sp, #24]
   21634:	bl	215dc <__sanitizer_set_report_fd@@Base+0x7430>
   21638:	b	21664 <__sanitizer_set_report_fd@@Base+0x74b8>
   2163c:	stp	xzr, xzr, [sp, #32]
   21640:	mov	w0, #0x1                   	// #1
   21644:	strb	w0, [sp, #40]
   21648:	ldr	x0, [sp, #24]
   2164c:	str	x0, [sp, #32]
   21650:	add	x0, sp, #0x20
   21654:	mov	x1, x0
   21658:	adrp	x0, 21000 <__sanitizer_set_report_fd@@Base+0x6e54>
   2165c:	add	x0, x0, #0x3ec
   21660:	bl	6880 <dl_iterate_phdr@plt>
   21664:	nop
   21668:	ldr	x30, [sp], #48
   2166c:	ret
   21670:	str	x30, [sp, #-32]!
   21674:	str	x0, [sp, #24]
   21678:	bl	215d4 <__sanitizer_set_report_fd@@Base+0x7428>
   2167c:	and	w0, w0, #0xff
   21680:	eor	w0, w0, #0x1
   21684:	and	w0, w0, #0xff
   21688:	cmp	w0, #0x0
   2168c:	b.eq	216a4 <__sanitizer_set_report_fd@@Base+0x74f8>  // b.none
   21690:	ldr	x0, [sp, #24]
   21694:	bl	21c1c <__sanitizer_set_report_fd@@Base+0x7a70>
   21698:	ldr	x0, [sp, #24]
   2169c:	bl	215dc <__sanitizer_set_report_fd@@Base+0x7430>
   216a0:	b	216ac <__sanitizer_set_report_fd@@Base+0x7500>
   216a4:	ldr	x0, [sp, #24]
   216a8:	bl	1de50 <__sanitizer_set_report_fd@@Base+0x3ca4>
   216ac:	nop
   216b0:	ldr	x30, [sp], #32
   216b4:	ret
   216b8:	str	x30, [sp, #-160]!
   216bc:	add	x0, sp, #0x10
   216c0:	mov	x1, x0
   216c4:	mov	w0, #0x0                   	// #0
   216c8:	bl	6810 <getrusage@plt>
   216cc:	cmp	w0, #0x0
   216d0:	cset	w0, ne  // ne = any
   216d4:	and	w0, w0, #0xff
   216d8:	cmp	w0, #0x0
   216dc:	b.eq	216e8 <__sanitizer_set_report_fd@@Base+0x753c>  // b.none
   216e0:	mov	x0, #0x0                   	// #0
   216e4:	b	216f0 <__sanitizer_set_report_fd@@Base+0x7544>
   216e8:	ldr	x0, [sp, #48]
   216ec:	lsl	x0, x0, #10
   216f0:	ldr	x30, [sp], #160
   216f4:	ret
   216f8:	str	x30, [sp, #-112]!
   216fc:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   21700:	ldrb	w0, [x0, #160]
   21704:	eor	w0, w0, #0x1
   21708:	and	w0, w0, #0xff
   2170c:	cmp	w0, #0x0
   21710:	b.eq	2171c <__sanitizer_set_report_fd@@Base+0x7570>  // b.none
   21714:	bl	216b8 <__sanitizer_set_report_fd@@Base+0x750c>
   21718:	b	21870 <__sanitizer_set_report_fd@@Base+0x76c4>
   2171c:	mov	x2, #0x0                   	// #0
   21720:	mov	w1, #0x0                   	// #0
   21724:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21728:	add	x0, x0, #0xde8
   2172c:	bl	22718 <__sanitizer_set_report_fd@@Base+0x856c>
   21730:	str	w0, [sp, #92]
   21734:	ldr	w0, [sp, #92]
   21738:	cmn	w0, #0x1
   2173c:	b.ne	21748 <__sanitizer_set_report_fd@@Base+0x759c>  // b.any
   21740:	bl	216b8 <__sanitizer_set_report_fd@@Base+0x750c>
   21744:	b	21870 <__sanitizer_set_report_fd@@Base+0x76c4>
   21748:	add	x0, sp, #0x10
   2174c:	mov	x2, #0x3f                  	// #63
   21750:	mov	x1, x0
   21754:	ldr	w0, [sp, #92]
   21758:	bl	1e368 <__sanitizer_set_report_fd@@Base+0x41bc>
   2175c:	str	x0, [sp, #80]
   21760:	ldr	w0, [sp, #92]
   21764:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   21768:	ldr	x0, [sp, #80]
   2176c:	cmp	x0, #0x0
   21770:	b.gt	2177c <__sanitizer_set_report_fd@@Base+0x75d0>
   21774:	mov	x0, #0x0                   	// #0
   21778:	b	21870 <__sanitizer_set_report_fd@@Base+0x76c4>
   2177c:	ldr	x0, [sp, #80]
   21780:	add	x1, sp, #0x10
   21784:	strb	wzr, [x1, x0]
   21788:	add	x0, sp, #0x10
   2178c:	str	x0, [sp, #104]
   21790:	ldr	x0, [sp, #104]
   21794:	ldrb	w0, [x0]
   21798:	cmp	w0, #0x2f
   2179c:	b.ls	217c0 <__sanitizer_set_report_fd@@Base+0x7614>  // b.plast
   217a0:	ldr	x0, [sp, #104]
   217a4:	ldrb	w0, [x0]
   217a8:	cmp	w0, #0x39
   217ac:	b.hi	217c0 <__sanitizer_set_report_fd@@Base+0x7614>  // b.pmore
   217b0:	ldr	x0, [sp, #104]
   217b4:	add	x0, x0, #0x1
   217b8:	str	x0, [sp, #104]
   217bc:	b	21790 <__sanitizer_set_report_fd@@Base+0x75e4>
   217c0:	ldr	x0, [sp, #104]
   217c4:	ldrb	w0, [x0]
   217c8:	cmp	w0, #0x2f
   217cc:	b.ls	217e0 <__sanitizer_set_report_fd@@Base+0x7634>  // b.plast
   217d0:	ldr	x0, [sp, #104]
   217d4:	ldrb	w0, [x0]
   217d8:	cmp	w0, #0x39
   217dc:	b.ls	21800 <__sanitizer_set_report_fd@@Base+0x7654>  // b.plast
   217e0:	ldr	x0, [sp, #104]
   217e4:	ldrb	w0, [x0]
   217e8:	cmp	w0, #0x0
   217ec:	b.eq	21800 <__sanitizer_set_report_fd@@Base+0x7654>  // b.none
   217f0:	ldr	x0, [sp, #104]
   217f4:	add	x0, x0, #0x1
   217f8:	str	x0, [sp, #104]
   217fc:	b	217c0 <__sanitizer_set_report_fd@@Base+0x7614>
   21800:	str	xzr, [sp, #96]
   21804:	ldr	x0, [sp, #104]
   21808:	ldrb	w0, [x0]
   2180c:	cmp	w0, #0x2f
   21810:	b.ls	21860 <__sanitizer_set_report_fd@@Base+0x76b4>  // b.plast
   21814:	ldr	x0, [sp, #104]
   21818:	ldrb	w0, [x0]
   2181c:	cmp	w0, #0x39
   21820:	b.hi	21860 <__sanitizer_set_report_fd@@Base+0x76b4>  // b.pmore
   21824:	ldr	x1, [sp, #96]
   21828:	mov	x0, x1
   2182c:	lsl	x0, x0, #2
   21830:	add	x0, x0, x1
   21834:	lsl	x0, x0, #1
   21838:	mov	x2, x0
   2183c:	ldr	x0, [sp, #104]
   21840:	add	x1, x0, #0x1
   21844:	str	x1, [sp, #104]
   21848:	ldrb	w0, [x0]
   2184c:	and	x0, x0, #0xff
   21850:	add	x0, x2, x0
   21854:	sub	x0, x0, #0x30
   21858:	str	x0, [sp, #96]
   2185c:	b	21804 <__sanitizer_set_report_fd@@Base+0x7658>
   21860:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   21864:	mov	x1, x0
   21868:	ldr	x0, [sp, #96]
   2186c:	mul	x0, x1, x0
   21870:	ldr	x30, [sp], #112
   21874:	ret
   21878:	str	x30, [sp, #-160]!
   2187c:	add	x0, sp, #0x10
   21880:	mov	x2, x0
   21884:	mov	x1, #0x80                  	// #128
   21888:	mov	w0, #0x0                   	// #0
   2188c:	bl	6600 <sched_getaffinity@plt>
   21890:	sxtw	x0, w0
   21894:	str	x0, [sp, #152]
   21898:	str	xzr, [sp, #144]
   2189c:	ldr	x1, [sp, #152]
   218a0:	ldr	x0, [sp, #144]
   218a4:	cmp	x1, x0
   218a8:	cset	w0, ne  // ne = any
   218ac:	and	w0, w0, #0xff
   218b0:	and	x0, x0, #0xff
   218b4:	cmp	x0, #0x0
   218b8:	b.eq	218dc <__sanitizer_set_report_fd@@Base+0x7730>  // b.none
   218bc:	ldr	x4, [sp, #144]
   218c0:	ldr	x3, [sp, #152]
   218c4:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   218c8:	add	x2, x0, #0xe00
   218cc:	mov	w1, #0x2bb                 	// #699
   218d0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   218d4:	add	x0, x0, #0xc10
   218d8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   218dc:	add	x0, sp, #0x10
   218e0:	mov	x1, x0
   218e4:	mov	x0, #0x80                  	// #128
   218e8:	bl	69b0 <__sched_cpucount@plt>
   218ec:	ldr	x30, [sp], #160
   218f0:	ret
   218f4:	nop
   218f8:	ret
   218fc:	mov	w0, #0x1                   	// #1
   21900:	ret
   21904:	str	x30, [sp, #-32]!
   21908:	str	x0, [sp, #24]
   2190c:	ldr	x2, [sp, #24]
   21910:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21914:	add	x1, x0, #0xde0
   21918:	mov	w0, #0x6                   	// #6
   2191c:	bl	6a00 <syslog@plt>
   21920:	nop
   21924:	ldr	x30, [sp], #32
   21928:	ret
   2192c:	sub	sp, sp, #0x10
   21930:	str	x0, [sp, #8]
   21934:	nop
   21938:	add	sp, sp, #0x10
   2193c:	ret
   21940:	str	x30, [sp, #-32]!
   21944:	str	x0, [sp, #24]
   21948:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   2194c:	ldrb	w0, [x0, #49]
   21950:	cmp	w0, #0x0
   21954:	b.eq	21970 <__sanitizer_set_report_fd@@Base+0x77c4>  // b.none
   21958:	bl	218fc <__sanitizer_set_report_fd@@Base+0x7750>
   2195c:	and	w0, w0, #0xff
   21960:	cmp	w0, #0x0
   21964:	b.eq	21970 <__sanitizer_set_report_fd@@Base+0x77c4>  // b.none
   21968:	mov	w0, #0x1                   	// #1
   2196c:	b	21974 <__sanitizer_set_report_fd@@Base+0x77c8>
   21970:	mov	w0, #0x0                   	// #0
   21974:	cmp	w0, #0x0
   21978:	b.eq	21984 <__sanitizer_set_report_fd@@Base+0x77d8>  // b.none
   2197c:	ldr	x0, [sp, #24]
   21980:	bl	1504c <__sanitizer_install_malloc_and_free_hooks@@Base+0x6d8>
   21984:	nop
   21988:	ldr	x30, [sp], #32
   2198c:	ret
   21990:	str	x30, [sp, #-32]!
   21994:	bl	21cb4 <__sanitizer_set_report_fd@@Base+0x7b08>
   21998:	and	w0, w0, #0xff
   2199c:	cmp	w0, #0x0
   219a0:	b.eq	219dc <__sanitizer_set_report_fd@@Base+0x7830>  // b.none
   219a4:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   219a8:	ldr	x0, [x0, #3872]
   219ac:	cmp	x0, #0x0
   219b0:	b.eq	219c8 <__sanitizer_set_report_fd@@Base+0x781c>  // b.none
   219b4:	add	x0, sp, #0x10
   219b8:	mov	x1, x0
   219bc:	mov	w0, #0x1                   	// #1
   219c0:	bl	6850 <real_clock_gettime@plt>
   219c4:	b	219ec <__sanitizer_set_report_fd@@Base+0x7840>
   219c8:	add	x0, sp, #0x10
   219cc:	mov	x1, x0
   219d0:	mov	w0, #0x1                   	// #1
   219d4:	bl	68a0 <clock_gettime@plt>
   219d8:	b	219ec <__sanitizer_set_report_fd@@Base+0x7840>
   219dc:	add	x0, sp, #0x10
   219e0:	mov	x1, x0
   219e4:	mov	w0, #0x1                   	// #1
   219e8:	bl	1e830 <__sanitizer_set_report_fd@@Base+0x4684>
   219ec:	ldr	x0, [sp, #16]
   219f0:	mov	x1, x0
   219f4:	mov	x0, #0xca00                	// #51712
   219f8:	movk	x0, #0x3b9a, lsl #16
   219fc:	mul	x0, x1, x0
   21a00:	ldr	x1, [sp, #24]
   21a04:	add	x0, x0, x1
   21a08:	ldr	x30, [sp], #32
   21a0c:	ret
   21a10:	str	x30, [sp, #-96]!
   21a14:	str	x0, [sp, #40]
   21a18:	str	x1, [sp, #32]
   21a1c:	str	x2, [sp, #24]
   21a20:	mov	x0, #0x8                   	// #8
   21a24:	str	x0, [sp, #88]
   21a28:	mov	x0, #0x8                   	// #8
   21a2c:	str	x0, [sp, #80]
   21a30:	ldr	x1, [sp, #88]
   21a34:	ldr	x0, [sp, #80]
   21a38:	cmp	x1, x0
   21a3c:	cset	w0, ne  // ne = any
   21a40:	and	w0, w0, #0xff
   21a44:	and	x0, x0, #0xff
   21a48:	cmp	x0, #0x0
   21a4c:	b.eq	21a70 <__sanitizer_set_report_fd@@Base+0x78c4>  // b.none
   21a50:	ldr	x4, [sp, #80]
   21a54:	ldr	x3, [sp, #88]
   21a58:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21a5c:	add	x2, x0, #0xe58
   21a60:	mov	w1, #0xd2                  	// #210
   21a64:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21a68:	add	x0, x0, #0xc10
   21a6c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   21a70:	add	x1, sp, #0x28
   21a74:	add	x0, sp, #0x38
   21a78:	mov	x2, #0x8                   	// #8
   21a7c:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   21a80:	ldr	x0, [sp, #56]
   21a84:	str	x0, [sp, #72]
   21a88:	str	xzr, [sp, #64]
   21a8c:	ldr	x1, [sp, #72]
   21a90:	ldr	x0, [sp, #64]
   21a94:	cmp	x1, x0
   21a98:	cset	w0, eq  // eq = none
   21a9c:	and	w0, w0, #0xff
   21aa0:	and	x0, x0, #0xff
   21aa4:	cmp	x0, #0x0
   21aa8:	b.eq	21acc <__sanitizer_set_report_fd@@Base+0x7920>  // b.none
   21aac:	ldr	x4, [sp, #64]
   21ab0:	ldr	x3, [sp, #72]
   21ab4:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21ab8:	add	x2, x0, #0xe80
   21abc:	mov	w1, #0xd4                  	// #212
   21ac0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21ac4:	add	x0, x0, #0xc10
   21ac8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   21acc:	ldr	x2, [sp, #56]
   21ad0:	ldr	x1, [sp, #24]
   21ad4:	ldr	x0, [sp, #32]
   21ad8:	blr	x2
   21adc:	nop
   21ae0:	ldr	x30, [sp], #96
   21ae4:	ret
   21ae8:	str	x30, [sp, #-96]!
   21aec:	str	x0, [sp, #40]
   21af0:	str	x1, [sp, #32]
   21af4:	str	x2, [sp, #24]
   21af8:	mov	x0, #0x8                   	// #8
   21afc:	str	x0, [sp, #88]
   21b00:	mov	x0, #0x8                   	// #8
   21b04:	str	x0, [sp, #80]
   21b08:	ldr	x1, [sp, #88]
   21b0c:	ldr	x0, [sp, #80]
   21b10:	cmp	x1, x0
   21b14:	cset	w0, ne  // ne = any
   21b18:	and	w0, w0, #0xff
   21b1c:	and	x0, x0, #0xff
   21b20:	cmp	x0, #0x0
   21b24:	b.eq	21b48 <__sanitizer_set_report_fd@@Base+0x799c>  // b.none
   21b28:	ldr	x4, [sp, #80]
   21b2c:	ldr	x3, [sp, #88]
   21b30:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21b34:	add	x2, x0, #0xe58
   21b38:	mov	w1, #0xd2                  	// #210
   21b3c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21b40:	add	x0, x0, #0xc10
   21b44:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   21b48:	add	x1, sp, #0x28
   21b4c:	add	x0, sp, #0x38
   21b50:	mov	x2, #0x8                   	// #8
   21b54:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   21b58:	ldr	x0, [sp, #56]
   21b5c:	str	x0, [sp, #72]
   21b60:	str	xzr, [sp, #64]
   21b64:	ldr	x1, [sp, #72]
   21b68:	ldr	x0, [sp, #64]
   21b6c:	cmp	x1, x0
   21b70:	cset	w0, eq  // eq = none
   21b74:	and	w0, w0, #0xff
   21b78:	and	x0, x0, #0xff
   21b7c:	cmp	x0, #0x0
   21b80:	b.eq	21ba4 <__sanitizer_set_report_fd@@Base+0x79f8>  // b.none
   21b84:	ldr	x4, [sp, #64]
   21b88:	ldr	x3, [sp, #72]
   21b8c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21b90:	add	x2, x0, #0xe80
   21b94:	mov	w1, #0xd4                  	// #212
   21b98:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21b9c:	add	x0, x0, #0xc10
   21ba0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   21ba4:	ldr	x2, [sp, #56]
   21ba8:	ldr	x1, [sp, #24]
   21bac:	ldr	x0, [sp, #32]
   21bb0:	blr	x2
   21bb4:	nop
   21bb8:	ldr	x30, [sp], #96
   21bbc:	ret
   21bc0:	str	x30, [sp, #-32]!
   21bc4:	str	x0, [sp, #24]
   21bc8:	ldr	x0, [sp, #24]
   21bcc:	str	xzr, [x0]
   21bd0:	ldr	x0, [sp, #24]
   21bd4:	str	xzr, [x0, #8]
   21bd8:	ldr	x0, [sp, #24]
   21bdc:	str	xzr, [x0, #16]
   21be0:	ldr	x0, [sp, #24]
   21be4:	str	wzr, [x0, #24]
   21be8:	ldr	x0, [sp, #24]
   21bec:	strb	wzr, [x0, #44]
   21bf0:	ldr	x0, [sp, #24]
   21bf4:	add	x0, x0, #0x1c
   21bf8:	mov	x2, #0x10                  	// #16
   21bfc:	mov	w1, #0x0                   	// #0
   21c00:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   21c04:	ldr	x0, [sp, #24]
   21c08:	add	x0, x0, #0x30
   21c0c:	bl	21d00 <__sanitizer_set_report_fd@@Base+0x7b54>
   21c10:	nop
   21c14:	ldr	x30, [sp], #32
   21c18:	ret
   21c1c:	str	x30, [sp, #-32]!
   21c20:	str	x0, [sp, #24]
   21c24:	ldr	x0, [sp, #24]
   21c28:	ldrb	w0, [x0, #24]
   21c2c:	cmp	w0, #0x0
   21c30:	b.eq	21c40 <__sanitizer_set_report_fd@@Base+0x7a94>  // b.none
   21c34:	ldr	x0, [sp, #24]
   21c38:	bl	1de50 <__sanitizer_set_report_fd@@Base+0x3ca4>
   21c3c:	b	21c4c <__sanitizer_set_report_fd@@Base+0x7aa0>
   21c40:	ldr	x0, [sp, #24]
   21c44:	mov	x1, #0x4000                	// #16384
   21c48:	bl	21d34 <__sanitizer_set_report_fd@@Base+0x7b88>
   21c4c:	ldr	x0, [sp, #24]
   21c50:	mov	w1, #0x1                   	// #1
   21c54:	strb	w1, [x0, #24]
   21c58:	nop
   21c5c:	ldr	x30, [sp], #32
   21c60:	ret
   21c64:	sub	sp, sp, #0x20
   21c68:	str	x0, [sp, #24]
   21c6c:	str	x1, [sp, #16]
   21c70:	str	x2, [sp, #8]
   21c74:	ldr	x0, [sp, #24]
   21c78:	ldr	x1, [sp, #16]
   21c7c:	str	x1, [x0, #24]
   21c80:	ldr	x0, [sp, #24]
   21c84:	ldr	x1, [sp, #8]
   21c88:	str	x1, [x0, #32]
   21c8c:	ldr	x0, [sp, #24]
   21c90:	str	xzr, [x0, #72]
   21c94:	nop
   21c98:	add	sp, sp, #0x20
   21c9c:	ret
   21ca0:	sub	sp, sp, #0x10
   21ca4:	str	x0, [sp, #8]
   21ca8:	nop
   21cac:	add	sp, sp, #0x10
   21cb0:	ret
   21cb4:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   21cb8:	ldr	x0, [x0, #4008]
   21cbc:	cmp	x0, #0x0
   21cc0:	b.eq	21cf8 <__sanitizer_set_report_fd@@Base+0x7b4c>  // b.none
   21cc4:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   21cc8:	ldr	x0, [x0, #4008]
   21ccc:	ldr	x0, [x0]
   21cd0:	cmp	x0, #0x0
   21cd4:	b.eq	21cf8 <__sanitizer_set_report_fd@@Base+0x7b4c>  // b.none
   21cd8:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   21cdc:	ldr	x0, [x0, #4008]
   21ce0:	ldr	x0, [x0]
   21ce4:	ldrb	w0, [x0]
   21ce8:	cmp	w0, #0x0
   21cec:	b.eq	21cf8 <__sanitizer_set_report_fd@@Base+0x7b4c>  // b.none
   21cf0:	mov	w0, #0x1                   	// #1
   21cf4:	b	21cfc <__sanitizer_set_report_fd@@Base+0x7b50>
   21cf8:	mov	w0, #0x0                   	// #0
   21cfc:	ret
   21d00:	sub	sp, sp, #0x10
   21d04:	str	x0, [sp, #8]
   21d08:	ldr	x0, [sp, #8]
   21d0c:	str	xzr, [x0, #16]
   21d10:	ldr	x0, [sp, #8]
   21d14:	ldr	x1, [x0, #16]
   21d18:	ldr	x0, [sp, #8]
   21d1c:	str	x1, [x0, #8]
   21d20:	ldr	x0, [sp, #8]
   21d24:	str	xzr, [x0]
   21d28:	nop
   21d2c:	add	sp, sp, #0x10
   21d30:	ret
   21d34:	str	x30, [sp, #-32]!
   21d38:	str	x0, [sp, #24]
   21d3c:	str	x1, [sp, #16]
   21d40:	ldr	x0, [sp, #24]
   21d44:	str	xzr, [x0, #8]
   21d48:	ldr	x0, [sp, #24]
   21d4c:	str	xzr, [x0, #16]
   21d50:	ldr	x0, [sp, #24]
   21d54:	str	xzr, [x0]
   21d58:	ldr	x1, [sp, #16]
   21d5c:	ldr	x0, [sp, #24]
   21d60:	bl	21ea4 <__sanitizer_set_report_fd@@Base+0x7cf8>
   21d64:	nop
   21d68:	ldr	x30, [sp], #32
   21d6c:	ret
   21d70:	str	x30, [sp, #-32]!
   21d74:	str	x0, [sp, #24]
   21d78:	mov	w1, #0x1                   	// #1
   21d7c:	ldr	x0, [sp, #24]
   21d80:	bl	11080 <__sancov_default_options@@Base+0xcd4>
   21d84:	ldr	x30, [sp], #32
   21d88:	ret
   21d8c:	str	x30, [sp, #-32]!
   21d90:	str	x0, [sp, #24]
   21d94:	str	x1, [sp, #16]
   21d98:	mov	w2, #0x1                   	// #1
   21d9c:	ldr	x1, [sp, #16]
   21da0:	ldr	x0, [sp, #24]
   21da4:	bl	11104 <__sancov_default_options@@Base+0xd58>
   21da8:	nop
   21dac:	ldr	x30, [sp], #32
   21db0:	ret
   21db4:	stp	x19, x30, [sp, #-64]!
   21db8:	str	x0, [sp, #24]
   21dbc:	str	x1, [sp, #16]
   21dc0:	ldr	x0, [sp, #24]
   21dc4:	ldr	x0, [x0, #16]
   21dc8:	str	x0, [sp, #56]
   21dcc:	ldr	x0, [sp, #24]
   21dd0:	bl	21eec <__sanitizer_set_report_fd@@Base+0x7d40>
   21dd4:	str	x0, [sp, #48]
   21dd8:	ldr	x1, [sp, #56]
   21ddc:	ldr	x0, [sp, #48]
   21de0:	cmp	x1, x0
   21de4:	cset	w0, hi  // hi = pmore
   21de8:	and	w0, w0, #0xff
   21dec:	and	x0, x0, #0xff
   21df0:	cmp	x0, #0x0
   21df4:	b.eq	21e18 <__sanitizer_set_report_fd@@Base+0x7c6c>  // b.none
   21df8:	ldr	x4, [sp, #48]
   21dfc:	ldr	x3, [sp, #56]
   21e00:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21e04:	add	x2, x0, #0xe98
   21e08:	mov	w1, #0x1be                 	// #446
   21e0c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21e10:	add	x0, x0, #0xad0
   21e14:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   21e18:	ldr	x0, [sp, #24]
   21e1c:	ldr	x19, [x0, #16]
   21e20:	ldr	x0, [sp, #24]
   21e24:	bl	21eec <__sanitizer_set_report_fd@@Base+0x7d40>
   21e28:	cmp	x19, x0
   21e2c:	cset	w0, eq  // eq = none
   21e30:	and	w0, w0, #0xff
   21e34:	cmp	w0, #0x0
   21e38:	b.eq	21e5c <__sanitizer_set_report_fd@@Base+0x7cb0>  // b.none
   21e3c:	ldr	x0, [sp, #24]
   21e40:	ldr	x0, [x0, #16]
   21e44:	add	x0, x0, #0x1
   21e48:	bl	20578 <__sanitizer_set_report_fd@@Base+0x63cc>
   21e4c:	str	x0, [sp, #40]
   21e50:	ldr	x1, [sp, #40]
   21e54:	ldr	x0, [sp, #24]
   21e58:	bl	21f1c <__sanitizer_set_report_fd@@Base+0x7d70>
   21e5c:	ldr	x0, [sp, #24]
   21e60:	ldr	x2, [x0]
   21e64:	ldr	x0, [sp, #24]
   21e68:	ldr	x1, [x0, #16]
   21e6c:	add	x3, x1, #0x1
   21e70:	ldr	x0, [sp, #24]
   21e74:	str	x3, [x0, #16]
   21e78:	mov	x0, x1
   21e7c:	lsl	x0, x0, #3
   21e80:	add	x0, x0, x1
   21e84:	lsl	x0, x0, #3
   21e88:	add	x0, x2, x0
   21e8c:	mov	x2, #0x48                  	// #72
   21e90:	ldr	x1, [sp, #16]
   21e94:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   21e98:	nop
   21e9c:	ldp	x19, x30, [sp], #64
   21ea0:	ret
   21ea4:	str	x30, [sp, #-32]!
   21ea8:	str	x0, [sp, #24]
   21eac:	str	x1, [sp, #16]
   21eb0:	ldr	x0, [sp, #24]
   21eb4:	bl	21eec <__sanitizer_set_report_fd@@Base+0x7d40>
   21eb8:	mov	x1, x0
   21ebc:	ldr	x0, [sp, #16]
   21ec0:	cmp	x0, x1
   21ec4:	cset	w0, hi  // hi = pmore
   21ec8:	and	w0, w0, #0xff
   21ecc:	cmp	w0, #0x0
   21ed0:	b.eq	21ee0 <__sanitizer_set_report_fd@@Base+0x7d34>  // b.none
   21ed4:	ldr	x1, [sp, #16]
   21ed8:	ldr	x0, [sp, #24]
   21edc:	bl	21f1c <__sanitizer_set_report_fd@@Base+0x7d70>
   21ee0:	nop
   21ee4:	ldr	x30, [sp], #32
   21ee8:	ret
   21eec:	sub	sp, sp, #0x10
   21ef0:	str	x0, [sp, #8]
   21ef4:	ldr	x0, [sp, #8]
   21ef8:	ldr	x1, [x0, #8]
   21efc:	mov	x0, #0xe38f                	// #58255
   21f00:	movk	x0, #0x8e38, lsl #16
   21f04:	movk	x0, #0x38e3, lsl #32
   21f08:	movk	x0, #0xe38e, lsl #48
   21f0c:	umulh	x0, x1, x0
   21f10:	lsr	x0, x0, #6
   21f14:	add	sp, sp, #0x10
   21f18:	ret
   21f1c:	stp	x19, x30, [sp, #-80]!
   21f20:	str	x0, [sp, #24]
   21f24:	str	x1, [sp, #16]
   21f28:	ldr	x0, [sp, #16]
   21f2c:	str	x0, [sp, #72]
   21f30:	str	xzr, [sp, #64]
   21f34:	ldr	x1, [sp, #72]
   21f38:	ldr	x0, [sp, #64]
   21f3c:	cmp	x1, x0
   21f40:	cset	w0, ls  // ls = plast
   21f44:	and	w0, w0, #0xff
   21f48:	and	x0, x0, #0xff
   21f4c:	cmp	x0, #0x0
   21f50:	b.eq	21f74 <__sanitizer_set_report_fd@@Base+0x7dc8>  // b.none
   21f54:	ldr	x4, [sp, #64]
   21f58:	ldr	x3, [sp, #72]
   21f5c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21f60:	add	x2, x0, #0xeb8
   21f64:	mov	w1, #0x1fc                 	// #508
   21f68:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21f6c:	add	x0, x0, #0xad0
   21f70:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   21f74:	ldr	x0, [sp, #24]
   21f78:	ldr	x0, [x0, #16]
   21f7c:	str	x0, [sp, #56]
   21f80:	ldr	x0, [sp, #16]
   21f84:	str	x0, [sp, #48]
   21f88:	ldr	x1, [sp, #56]
   21f8c:	ldr	x0, [sp, #48]
   21f90:	cmp	x1, x0
   21f94:	cset	w0, hi  // hi = pmore
   21f98:	and	w0, w0, #0xff
   21f9c:	and	x0, x0, #0xff
   21fa0:	cmp	x0, #0x0
   21fa4:	b.eq	21fc8 <__sanitizer_set_report_fd@@Base+0x7e1c>  // b.none
   21fa8:	ldr	x4, [sp, #48]
   21fac:	ldr	x3, [sp, #56]
   21fb0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21fb4:	add	x2, x0, #0xed8
   21fb8:	mov	w1, #0x1fd                 	// #509
   21fbc:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21fc0:	add	x0, x0, #0xad0
   21fc4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   21fc8:	ldr	x1, [sp, #16]
   21fcc:	mov	x0, x1
   21fd0:	lsl	x0, x0, #3
   21fd4:	add	x0, x0, x1
   21fd8:	lsl	x0, x0, #3
   21fdc:	mov	x19, x0
   21fe0:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   21fe4:	mov	x1, x0
   21fe8:	mov	x0, x19
   21fec:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   21ff0:	str	x0, [sp, #40]
   21ff4:	mov	w2, #0x0                   	// #0
   21ff8:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x6970>
   21ffc:	add	x1, x0, #0xef8
   22000:	ldr	x0, [sp, #40]
   22004:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   22008:	str	x0, [sp, #32]
   2200c:	ldr	x0, [sp, #24]
   22010:	ldr	x3, [x0]
   22014:	ldr	x0, [sp, #24]
   22018:	ldr	x1, [x0, #16]
   2201c:	mov	x0, x1
   22020:	lsl	x0, x0, #3
   22024:	add	x0, x0, x1
   22028:	lsl	x0, x0, #3
   2202c:	mov	x2, x0
   22030:	mov	x1, x3
   22034:	ldr	x0, [sp, #32]
   22038:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   2203c:	ldr	x0, [sp, #24]
   22040:	ldr	x2, [x0]
   22044:	ldr	x0, [sp, #24]
   22048:	ldr	x0, [x0, #8]
   2204c:	mov	x1, x0
   22050:	mov	x0, x2
   22054:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   22058:	ldr	x0, [sp, #24]
   2205c:	ldr	x1, [sp, #32]
   22060:	str	x1, [x0]
   22064:	ldr	x0, [sp, #24]
   22068:	ldr	x1, [sp, #40]
   2206c:	str	x1, [x0, #8]
   22070:	nop
   22074:	ldp	x19, x30, [sp], #80
   22078:	ret
   2207c:	sub	sp, sp, #0x10
   22080:	str	w0, [sp, #12]
   22084:	ldr	w0, [sp, #12]
   22088:	cmp	w0, #0x2
   2208c:	b.ne	22098 <__sanitizer_set_report_fd@@Base+0x7eec>  // b.any
   22090:	mov	x0, #0x4                   	// #4
   22094:	b	220b0 <__sanitizer_set_report_fd@@Base+0x7f04>
   22098:	ldr	w0, [sp, #12]
   2209c:	cmp	w0, #0xa
   220a0:	b.ne	220ac <__sanitizer_set_report_fd@@Base+0x7f00>  // b.any
   220a4:	mov	x0, #0x10                  	// #16
   220a8:	b	220b0 <__sanitizer_set_report_fd@@Base+0x7f04>
   220ac:	mov	x0, #0x0                   	// #0
   220b0:	add	sp, sp, #0x10
   220b4:	ret
   220b8:	str	x30, [sp, #-16]!
   220bc:	bl	1fa58 <__sanitizer_set_report_fd@@Base+0x58ac>
   220c0:	ldr	x30, [sp], #16
   220c4:	ret
   220c8:	str	x30, [sp, #-64]!
   220cc:	str	x0, [sp, #40]
   220d0:	str	x1, [sp, #32]
   220d4:	strb	w2, [sp, #31]
   220d8:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   220dc:	mov	x1, x0
   220e0:	ldr	x0, [sp, #40]
   220e4:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   220e8:	str	x0, [sp, #40]
   220ec:	mov	x5, #0x0                   	// #0
   220f0:	mov	w4, #0xffffffff            	// #-1
   220f4:	mov	w3, #0x22                  	// #34
   220f8:	mov	w2, #0x3                   	// #3
   220fc:	ldr	x1, [sp, #40]
   22100:	mov	x0, #0x0                   	// #0
   22104:	bl	1e21c <__sanitizer_set_report_fd@@Base+0x4070>
   22108:	str	x0, [sp, #56]
   2210c:	add	x0, sp, #0x34
   22110:	mov	x1, x0
   22114:	ldr	x0, [sp, #56]
   22118:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   2211c:	and	w0, w0, #0xff
   22120:	and	x0, x0, #0xff
   22124:	cmp	x0, #0x0
   22128:	cset	w0, ne  // ne = any
   2212c:	and	w0, w0, #0xff
   22130:	cmp	w0, #0x0
   22134:	b.eq	22158 <__sanitizer_set_report_fd@@Base+0x7fac>  // b.none
   22138:	ldr	w0, [sp, #52]
   2213c:	ldrb	w4, [sp, #31]
   22140:	mov	w3, w0
   22144:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22148:	add	x2, x0, #0xc0
   2214c:	ldr	x1, [sp, #32]
   22150:	ldr	x0, [sp, #40]
   22154:	bl	13c5c <__sancov_default_options@@Base+0x38b0>
   22158:	ldr	x0, [sp, #40]
   2215c:	bl	14298 <__sancov_default_options@@Base+0x3eec>
   22160:	ldr	x0, [sp, #56]
   22164:	ldr	x30, [sp], #64
   22168:	ret
   2216c:	str	x30, [sp, #-64]!
   22170:	str	x0, [sp, #24]
   22174:	str	x1, [sp, #16]
   22178:	ldr	x0, [sp, #24]
   2217c:	cmp	x0, #0x0
   22180:	b.eq	22244 <__sanitizer_set_report_fd@@Base+0x8098>  // b.none
   22184:	ldr	x0, [sp, #16]
   22188:	cmp	x0, #0x0
   2218c:	b.eq	22244 <__sanitizer_set_report_fd@@Base+0x8098>  // b.none
   22190:	ldr	x1, [sp, #16]
   22194:	ldr	x0, [sp, #24]
   22198:	bl	1e278 <__sanitizer_set_report_fd@@Base+0x40cc>
   2219c:	str	x0, [sp, #56]
   221a0:	mov	x1, #0x0                   	// #0
   221a4:	ldr	x0, [sp, #56]
   221a8:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   221ac:	and	w0, w0, #0xff
   221b0:	and	x0, x0, #0xff
   221b4:	cmp	x0, #0x0
   221b8:	cset	w0, ne  // ne = any
   221bc:	and	w0, w0, #0xff
   221c0:	cmp	w0, #0x0
   221c4:	b.eq	22238 <__sanitizer_set_report_fd@@Base+0x808c>  // b.none
   221c8:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   221cc:	ldr	x0, [x0, #4024]
   221d0:	ldr	x0, [x0]
   221d4:	ldr	x4, [sp, #24]
   221d8:	ldr	x3, [sp, #16]
   221dc:	ldr	x2, [sp, #16]
   221e0:	mov	x1, x0
   221e4:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   221e8:	add	x0, x0, #0xd0
   221ec:	bl	25a74 <OnPrint@@Base+0x454>
   221f0:	str	xzr, [sp, #48]
   221f4:	str	xzr, [sp, #40]
   221f8:	ldr	x1, [sp, #48]
   221fc:	ldr	x0, [sp, #40]
   22200:	cmp	x1, x0
   22204:	cset	w0, eq  // eq = none
   22208:	and	w0, w0, #0xff
   2220c:	and	x0, x0, #0xff
   22210:	cmp	x0, #0x0
   22214:	b.eq	22238 <__sanitizer_set_report_fd@@Base+0x808c>  // b.none
   22218:	ldr	x4, [sp, #40]
   2221c:	ldr	x3, [sp, #48]
   22220:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22224:	add	x2, x0, #0x110
   22228:	mov	w1, #0x3c                  	// #60
   2222c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22230:	add	x0, x0, #0x138
   22234:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   22238:	ldr	x0, [sp, #16]
   2223c:	bl	14330 <__sancov_default_options@@Base+0x3f84>
   22240:	b	22248 <__sanitizer_set_report_fd@@Base+0x809c>
   22244:	nop
   22248:	ldr	x30, [sp], #64
   2224c:	ret
   22250:	str	x30, [sp, #-48]!
   22254:	str	x0, [sp, #24]
   22258:	str	x1, [sp, #16]
   2225c:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   22260:	mov	x1, x0
   22264:	ldr	x0, [sp, #24]
   22268:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   2226c:	str	x0, [sp, #24]
   22270:	mov	x5, #0x0                   	// #0
   22274:	mov	w4, #0xffffffff            	// #-1
   22278:	mov	w3, #0x22                  	// #34
   2227c:	mov	w2, #0x3                   	// #3
   22280:	ldr	x1, [sp, #24]
   22284:	mov	x0, #0x0                   	// #0
   22288:	bl	1e21c <__sanitizer_set_report_fd@@Base+0x4070>
   2228c:	str	x0, [sp, #40]
   22290:	add	x0, sp, #0x24
   22294:	mov	x1, x0
   22298:	ldr	x0, [sp, #40]
   2229c:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   222a0:	and	w0, w0, #0xff
   222a4:	and	x0, x0, #0xff
   222a8:	cmp	x0, #0x0
   222ac:	cset	w0, ne  // ne = any
   222b0:	and	w0, w0, #0xff
   222b4:	cmp	w0, #0x0
   222b8:	b.eq	222f0 <__sanitizer_set_report_fd@@Base+0x8144>  // b.none
   222bc:	ldr	w0, [sp, #36]
   222c0:	cmp	w0, #0xc
   222c4:	b.ne	222d0 <__sanitizer_set_report_fd@@Base+0x8124>  // b.any
   222c8:	mov	x0, #0x0                   	// #0
   222cc:	b	222fc <__sanitizer_set_report_fd@@Base+0x8150>
   222d0:	ldr	w0, [sp, #36]
   222d4:	mov	w4, #0x0                   	// #0
   222d8:	mov	w3, w0
   222dc:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   222e0:	add	x2, x0, #0xc0
   222e4:	ldr	x1, [sp, #16]
   222e8:	ldr	x0, [sp, #24]
   222ec:	bl	13c5c <__sancov_default_options@@Base+0x38b0>
   222f0:	ldr	x0, [sp, #24]
   222f4:	bl	14298 <__sancov_default_options@@Base+0x3eec>
   222f8:	ldr	x0, [sp, #40]
   222fc:	ldr	x30, [sp], #48
   22300:	ret
   22304:	str	x30, [sp, #-128]!
   22308:	str	x0, [sp, #40]
   2230c:	str	x1, [sp, #32]
   22310:	str	x2, [sp, #24]
   22314:	ldr	x0, [sp, #40]
   22318:	bl	8964 <__asan_backtrace_open@plt+0x1cf4>
   2231c:	and	w0, w0, #0xff
   22320:	and	x0, x0, #0xff
   22324:	str	x0, [sp, #112]
   22328:	str	xzr, [sp, #104]
   2232c:	ldr	x1, [sp, #112]
   22330:	ldr	x0, [sp, #104]
   22334:	cmp	x1, x0
   22338:	cset	w0, eq  // eq = none
   2233c:	and	w0, w0, #0xff
   22340:	and	x0, x0, #0xff
   22344:	cmp	x0, #0x0
   22348:	b.eq	2236c <__sanitizer_set_report_fd@@Base+0x81c0>  // b.none
   2234c:	ldr	x4, [sp, #104]
   22350:	ldr	x3, [sp, #112]
   22354:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22358:	add	x2, x0, #0x178
   2235c:	mov	w1, #0x55                  	// #85
   22360:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22364:	add	x0, x0, #0x138
   22368:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2236c:	ldr	x0, [sp, #32]
   22370:	bl	8964 <__asan_backtrace_open@plt+0x1cf4>
   22374:	and	w0, w0, #0xff
   22378:	and	x0, x0, #0xff
   2237c:	str	x0, [sp, #96]
   22380:	str	xzr, [sp, #88]
   22384:	ldr	x1, [sp, #96]
   22388:	ldr	x0, [sp, #88]
   2238c:	cmp	x1, x0
   22390:	cset	w0, eq  // eq = none
   22394:	and	w0, w0, #0xff
   22398:	and	x0, x0, #0xff
   2239c:	cmp	x0, #0x0
   223a0:	b.eq	223c4 <__sanitizer_set_report_fd@@Base+0x8218>  // b.none
   223a4:	ldr	x4, [sp, #88]
   223a8:	ldr	x3, [sp, #96]
   223ac:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   223b0:	add	x2, x0, #0x198
   223b4:	mov	w1, #0x56                  	// #86
   223b8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   223bc:	add	x0, x0, #0x138
   223c0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   223c4:	ldr	x1, [sp, #40]
   223c8:	ldr	x0, [sp, #32]
   223cc:	add	x0, x1, x0
   223d0:	str	x0, [sp, #80]
   223d4:	ldr	x1, [sp, #24]
   223d8:	ldr	x0, [sp, #80]
   223dc:	bl	22250 <__sanitizer_set_report_fd@@Base+0x80a4>
   223e0:	str	x0, [sp, #72]
   223e4:	ldr	x0, [sp, #72]
   223e8:	cmp	x0, #0x0
   223ec:	cset	w0, eq  // eq = none
   223f0:	and	w0, w0, #0xff
   223f4:	and	x0, x0, #0xff
   223f8:	cmp	x0, #0x0
   223fc:	b.eq	22408 <__sanitizer_set_report_fd@@Base+0x825c>  // b.none
   22400:	mov	x0, #0x0                   	// #0
   22404:	b	224bc <__sanitizer_set_report_fd@@Base+0x8310>
   22408:	ldr	x1, [sp, #72]
   2240c:	ldr	x0, [sp, #80]
   22410:	add	x0, x1, x0
   22414:	str	x0, [sp, #64]
   22418:	ldr	x0, [sp, #72]
   2241c:	str	x0, [sp, #120]
   22420:	ldr	x1, [sp, #32]
   22424:	ldr	x0, [sp, #120]
   22428:	bl	10e18 <__sancov_default_options@@Base+0xa6c>
   2242c:	and	w0, w0, #0xff
   22430:	eor	w0, w0, #0x1
   22434:	and	w0, w0, #0xff
   22438:	cmp	w0, #0x0
   2243c:	b.eq	2247c <__sanitizer_set_report_fd@@Base+0x82d0>  // b.none
   22440:	ldr	x1, [sp, #72]
   22444:	ldr	x0, [sp, #32]
   22448:	add	x0, x1, x0
   2244c:	sub	x1, x0, #0x1
   22450:	ldr	x0, [sp, #32]
   22454:	neg	x0, x0
   22458:	and	x0, x1, x0
   2245c:	str	x0, [sp, #120]
   22460:	ldr	x2, [sp, #72]
   22464:	ldr	x1, [sp, #120]
   22468:	ldr	x0, [sp, #72]
   2246c:	sub	x0, x1, x0
   22470:	mov	x1, x0
   22474:	mov	x0, x2
   22478:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   2247c:	ldr	x1, [sp, #120]
   22480:	ldr	x0, [sp, #40]
   22484:	add	x0, x1, x0
   22488:	str	x0, [sp, #56]
   2248c:	ldr	x1, [sp, #56]
   22490:	ldr	x0, [sp, #64]
   22494:	cmp	x1, x0
   22498:	b.eq	224b8 <__sanitizer_set_report_fd@@Base+0x830c>  // b.none
   2249c:	ldr	x2, [sp, #56]
   224a0:	ldr	x1, [sp, #64]
   224a4:	ldr	x0, [sp, #56]
   224a8:	sub	x0, x1, x0
   224ac:	mov	x1, x0
   224b0:	mov	x0, x2
   224b4:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   224b8:	ldr	x0, [sp, #120]
   224bc:	ldr	x30, [sp], #128
   224c0:	ret
   224c4:	str	x30, [sp, #-64]!
   224c8:	str	x0, [sp, #24]
   224cc:	str	x1, [sp, #16]
   224d0:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   224d4:	str	x0, [sp, #56]
   224d8:	ldr	x1, [sp, #56]
   224dc:	ldr	x0, [sp, #24]
   224e0:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   224e4:	mov	x5, #0x0                   	// #0
   224e8:	mov	w4, #0xffffffff            	// #-1
   224ec:	mov	w3, #0x4022                	// #16418
   224f0:	mov	w2, #0x3                   	// #3
   224f4:	mov	x1, x0
   224f8:	mov	x0, #0x0                   	// #0
   224fc:	bl	1e21c <__sanitizer_set_report_fd@@Base+0x4070>
   22500:	str	x0, [sp, #48]
   22504:	add	x0, sp, #0x2c
   22508:	mov	x1, x0
   2250c:	ldr	x0, [sp, #48]
   22510:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   22514:	and	w0, w0, #0xff
   22518:	and	x0, x0, #0xff
   2251c:	cmp	x0, #0x0
   22520:	cset	w0, ne  // ne = any
   22524:	and	w0, w0, #0xff
   22528:	cmp	w0, #0x0
   2252c:	b.eq	22550 <__sanitizer_set_report_fd@@Base+0x83a4>  // b.none
   22530:	ldr	w0, [sp, #44]
   22534:	mov	w4, #0x0                   	// #0
   22538:	mov	w3, w0
   2253c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22540:	add	x2, x0, #0x1c0
   22544:	ldr	x1, [sp, #16]
   22548:	ldr	x0, [sp, #24]
   2254c:	bl	13c5c <__sancov_default_options@@Base+0x38b0>
   22550:	ldr	x0, [sp, #24]
   22554:	bl	14298 <__sancov_default_options@@Base+0x3eec>
   22558:	ldr	x0, [sp, #48]
   2255c:	ldr	x30, [sp], #64
   22560:	ret
   22564:	stp	x19, x30, [sp, #-112]!
   22568:	str	x0, [sp, #40]
   2256c:	str	x1, [sp, #32]
   22570:	strb	w2, [sp, #31]
   22574:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   22578:	str	x0, [sp, #104]
   2257c:	ldr	x0, [sp, #104]
   22580:	neg	x1, x0
   22584:	ldr	x0, [sp, #40]
   22588:	and	x0, x1, x0
   2258c:	mov	x19, x0
   22590:	ldr	x1, [sp, #104]
   22594:	ldr	x0, [sp, #32]
   22598:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   2259c:	mov	x5, #0x0                   	// #0
   225a0:	mov	w4, #0xffffffff            	// #-1
   225a4:	mov	w3, #0x32                  	// #50
   225a8:	mov	w2, #0x3                   	// #3
   225ac:	mov	x1, x0
   225b0:	mov	x0, x19
   225b4:	bl	1e21c <__sanitizer_set_report_fd@@Base+0x4070>
   225b8:	str	x0, [sp, #96]
   225bc:	add	x0, sp, #0x5c
   225c0:	mov	x1, x0
   225c4:	ldr	x0, [sp, #96]
   225c8:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   225cc:	and	w0, w0, #0xff
   225d0:	and	x0, x0, #0xff
   225d4:	cmp	x0, #0x0
   225d8:	cset	w0, ne  // ne = any
   225dc:	and	w0, w0, #0xff
   225e0:	cmp	w0, #0x0
   225e4:	b.eq	22644 <__sanitizer_set_report_fd@@Base+0x8498>  // b.none
   225e8:	ldrb	w0, [sp, #31]
   225ec:	cmp	w0, #0x0
   225f0:	b.eq	22608 <__sanitizer_set_report_fd@@Base+0x845c>  // b.none
   225f4:	ldr	w0, [sp, #92]
   225f8:	cmp	w0, #0xc
   225fc:	b.ne	22608 <__sanitizer_set_report_fd@@Base+0x845c>  // b.any
   22600:	mov	x0, #0x0                   	// #0
   22604:	b	22650 <__sanitizer_set_report_fd@@Base+0x84a4>
   22608:	add	x4, sp, #0x30
   2260c:	ldr	x3, [sp, #40]
   22610:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22614:	add	x2, x0, #0x1d8
   22618:	mov	x1, #0x28                  	// #40
   2261c:	mov	x0, x4
   22620:	bl	25b20 <OnPrint@@Base+0x500>
   22624:	ldr	w0, [sp, #92]
   22628:	add	x1, sp, #0x30
   2262c:	mov	w4, #0x0                   	// #0
   22630:	mov	w3, w0
   22634:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22638:	add	x2, x0, #0xc0
   2263c:	ldr	x0, [sp, #32]
   22640:	bl	13c5c <__sancov_default_options@@Base+0x38b0>
   22644:	ldr	x0, [sp, #32]
   22648:	bl	14298 <__sancov_default_options@@Base+0x3eec>
   2264c:	ldr	x0, [sp, #96]
   22650:	ldp	x19, x30, [sp], #112
   22654:	ret
   22658:	str	x30, [sp, #-32]!
   2265c:	str	x0, [sp, #24]
   22660:	str	x1, [sp, #16]
   22664:	mov	w2, #0x0                   	// #0
   22668:	ldr	x1, [sp, #16]
   2266c:	ldr	x0, [sp, #24]
   22670:	bl	22564 <__sanitizer_set_report_fd@@Base+0x83b8>
   22674:	ldr	x30, [sp], #32
   22678:	ret
   2267c:	str	x30, [sp, #-32]!
   22680:	str	x0, [sp, #24]
   22684:	str	x1, [sp, #16]
   22688:	mov	w2, #0x1                   	// #1
   2268c:	ldr	x1, [sp, #16]
   22690:	ldr	x0, [sp, #24]
   22694:	bl	22564 <__sanitizer_set_report_fd@@Base+0x83b8>
   22698:	ldr	x30, [sp], #32
   2269c:	ret
   226a0:	str	x30, [sp, #-32]!
   226a4:	str	x0, [sp, #24]
   226a8:	str	x1, [sp, #16]
   226ac:	ldr	x0, [sp, #24]
   226b0:	mov	w2, #0x0                   	// #0
   226b4:	ldr	x1, [sp, #16]
   226b8:	bl	1e2a4 <__sanitizer_set_report_fd@@Base+0x40f8>
   226bc:	cmp	w0, #0x0
   226c0:	cset	w0, eq  // eq = none
   226c4:	and	w0, w0, #0xff
   226c8:	ldr	x30, [sp], #32
   226cc:	ret
   226d0:	str	x30, [sp, #-32]!
   226d4:	str	x0, [sp, #24]
   226d8:	str	x1, [sp, #16]
   226dc:	ldr	x0, [sp, #24]
   226e0:	mov	w2, #0x1                   	// #1
   226e4:	ldr	x1, [sp, #16]
   226e8:	bl	1e2a4 <__sanitizer_set_report_fd@@Base+0x40f8>
   226ec:	cmp	w0, #0x0
   226f0:	cset	w0, eq  // eq = none
   226f4:	and	w0, w0, #0xff
   226f8:	ldr	x30, [sp], #32
   226fc:	ret
   22700:	sub	sp, sp, #0x10
   22704:	str	x0, [sp, #8]
   22708:	str	w1, [sp, #4]
   2270c:	nop
   22710:	add	sp, sp, #0x10
   22714:	ret
   22718:	str	x30, [sp, #-64]!
   2271c:	str	x0, [sp, #40]
   22720:	str	w1, [sp, #36]
   22724:	str	x2, [sp, #24]
   22728:	ldr	w0, [sp, #36]
   2272c:	cmp	w0, #0x2
   22730:	b.eq	22764 <__sanitizer_set_report_fd@@Base+0x85b8>  // b.none
   22734:	cmp	w0, #0x2
   22738:	b.gt	22770 <__sanitizer_set_report_fd@@Base+0x85c4>
   2273c:	cmp	w0, #0x0
   22740:	b.eq	22750 <__sanitizer_set_report_fd@@Base+0x85a4>  // b.none
   22744:	cmp	w0, #0x1
   22748:	b.eq	22758 <__sanitizer_set_report_fd@@Base+0x85ac>  // b.none
   2274c:	b	22770 <__sanitizer_set_report_fd@@Base+0x85c4>
   22750:	str	wzr, [sp, #60]
   22754:	b	22770 <__sanitizer_set_report_fd@@Base+0x85c4>
   22758:	mov	w0, #0x241                 	// #577
   2275c:	str	w0, [sp, #60]
   22760:	b	22770 <__sanitizer_set_report_fd@@Base+0x85c4>
   22764:	mov	w0, #0x42                  	// #66
   22768:	str	w0, [sp, #60]
   2276c:	nop
   22770:	mov	w2, #0x1b0                 	// #432
   22774:	ldr	w1, [sp, #60]
   22778:	ldr	x0, [sp, #40]
   2277c:	bl	1e32c <__sanitizer_set_report_fd@@Base+0x4180>
   22780:	str	w0, [sp, #56]
   22784:	ldrsw	x0, [sp, #56]
   22788:	ldr	x1, [sp, #24]
   2278c:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   22790:	and	w0, w0, #0xff
   22794:	cmp	w0, #0x0
   22798:	b.eq	227a4 <__sanitizer_set_report_fd@@Base+0x85f8>  // b.none
   2279c:	mov	w0, #0xffffffff            	// #-1
   227a0:	b	227a8 <__sanitizer_set_report_fd@@Base+0x85fc>
   227a4:	ldr	w0, [sp, #56]
   227a8:	ldr	x30, [sp], #64
   227ac:	ret
   227b0:	str	x30, [sp, #-32]!
   227b4:	str	w0, [sp, #28]
   227b8:	ldr	w0, [sp, #28]
   227bc:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   227c0:	nop
   227c4:	ldr	x30, [sp], #32
   227c8:	ret
   227cc:	str	x30, [sp, #-80]!
   227d0:	str	w0, [sp, #60]
   227d4:	str	x1, [sp, #48]
   227d8:	str	x2, [sp, #40]
   227dc:	str	x3, [sp, #32]
   227e0:	str	x4, [sp, #24]
   227e4:	ldr	x2, [sp, #40]
   227e8:	ldr	x1, [sp, #48]
   227ec:	ldr	w0, [sp, #60]
   227f0:	bl	1e368 <__sanitizer_set_report_fd@@Base+0x41bc>
   227f4:	str	x0, [sp, #72]
   227f8:	ldr	x1, [sp, #24]
   227fc:	ldr	x0, [sp, #72]
   22800:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   22804:	and	w0, w0, #0xff
   22808:	cmp	w0, #0x0
   2280c:	b.eq	22818 <__sanitizer_set_report_fd@@Base+0x866c>  // b.none
   22810:	mov	w0, #0x0                   	// #0
   22814:	b	22834 <__sanitizer_set_report_fd@@Base+0x8688>
   22818:	ldr	x0, [sp, #32]
   2281c:	cmp	x0, #0x0
   22820:	b.eq	22830 <__sanitizer_set_report_fd@@Base+0x8684>  // b.none
   22824:	ldr	x0, [sp, #32]
   22828:	ldr	x1, [sp, #72]
   2282c:	str	x1, [x0]
   22830:	mov	w0, #0x1                   	// #1
   22834:	ldr	x30, [sp], #80
   22838:	ret
   2283c:	str	x30, [sp, #-80]!
   22840:	str	w0, [sp, #60]
   22844:	str	x1, [sp, #48]
   22848:	str	x2, [sp, #40]
   2284c:	str	x3, [sp, #32]
   22850:	str	x4, [sp, #24]
   22854:	ldr	x2, [sp, #40]
   22858:	ldr	x1, [sp, #48]
   2285c:	ldr	w0, [sp, #60]
   22860:	bl	1e3e4 <__sanitizer_set_report_fd@@Base+0x4238>
   22864:	str	x0, [sp, #72]
   22868:	ldr	x1, [sp, #24]
   2286c:	ldr	x0, [sp, #72]
   22870:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   22874:	and	w0, w0, #0xff
   22878:	cmp	w0, #0x0
   2287c:	b.eq	22888 <__sanitizer_set_report_fd@@Base+0x86dc>  // b.none
   22880:	mov	w0, #0x0                   	// #0
   22884:	b	228a4 <__sanitizer_set_report_fd@@Base+0x86f8>
   22888:	ldr	x0, [sp, #32]
   2288c:	cmp	x0, #0x0
   22890:	b.eq	228a0 <__sanitizer_set_report_fd@@Base+0x86f4>  // b.none
   22894:	ldr	x0, [sp, #32]
   22898:	ldr	x1, [sp, #72]
   2289c:	str	x1, [x0]
   228a0:	mov	w0, #0x1                   	// #1
   228a4:	ldr	x30, [sp], #80
   228a8:	ret
   228ac:	str	x30, [sp, #-64]!
   228b0:	str	x0, [sp, #40]
   228b4:	str	x1, [sp, #32]
   228b8:	str	x2, [sp, #24]
   228bc:	ldr	x1, [sp, #32]
   228c0:	ldr	x0, [sp, #40]
   228c4:	bl	1e634 <__sanitizer_set_report_fd@@Base+0x4488>
   228c8:	str	x0, [sp, #56]
   228cc:	ldr	x1, [sp, #24]
   228d0:	ldr	x0, [sp, #56]
   228d4:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   228d8:	and	w0, w0, #0xff
   228dc:	eor	w0, w0, #0x1
   228e0:	and	w0, w0, #0xff
   228e4:	ldr	x30, [sp], #64
   228e8:	ret
   228ec:	str	x30, [sp, #-112]!
   228f0:	str	x0, [sp, #24]
   228f4:	str	x1, [sp, #16]
   228f8:	mov	x2, #0x0                   	// #0
   228fc:	mov	w1, #0x0                   	// #0
   22900:	ldr	x0, [sp, #24]
   22904:	bl	22718 <__sanitizer_set_report_fd@@Base+0x856c>
   22908:	str	w0, [sp, #108]
   2290c:	ldr	w0, [sp, #108]
   22910:	cmn	w0, #0x1
   22914:	cset	w0, ne  // ne = any
   22918:	and	w0, w0, #0xff
   2291c:	and	x0, x0, #0xff
   22920:	str	x0, [sp, #96]
   22924:	str	xzr, [sp, #88]
   22928:	ldr	x1, [sp, #96]
   2292c:	ldr	x0, [sp, #88]
   22930:	cmp	x1, x0
   22934:	cset	w0, eq  // eq = none
   22938:	and	w0, w0, #0xff
   2293c:	and	x0, x0, #0xff
   22940:	cmp	x0, #0x0
   22944:	b.eq	22968 <__sanitizer_set_report_fd@@Base+0x87bc>  // b.none
   22948:	ldr	x4, [sp, #88]
   2294c:	ldr	x3, [sp, #96]
   22950:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22954:	add	x2, x0, #0x1f0
   22958:	mov	w1, #0xc9                  	// #201
   2295c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22960:	add	x0, x0, #0x138
   22964:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   22968:	ldr	w0, [sp, #108]
   2296c:	bl	1e564 <__sanitizer_set_report_fd@@Base+0x43b8>
   22970:	str	x0, [sp, #80]
   22974:	ldr	x0, [sp, #80]
   22978:	str	x0, [sp, #72]
   2297c:	mov	x0, #0xffffffffffffffff    	// #-1
   22980:	str	x0, [sp, #64]
   22984:	ldr	x1, [sp, #72]
   22988:	ldr	x0, [sp, #64]
   2298c:	cmp	x1, x0
   22990:	cset	w0, eq  // eq = none
   22994:	and	w0, w0, #0xff
   22998:	and	x0, x0, #0xff
   2299c:	cmp	x0, #0x0
   229a0:	b.eq	229c4 <__sanitizer_set_report_fd@@Base+0x8818>  // b.none
   229a4:	ldr	x4, [sp, #64]
   229a8:	ldr	x3, [sp, #72]
   229ac:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   229b0:	add	x2, x0, #0x210
   229b4:	mov	w1, #0xcb                  	// #203
   229b8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   229bc:	add	x0, x0, #0x138
   229c0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   229c4:	ldr	x0, [sp, #80]
   229c8:	str	x0, [sp, #56]
   229cc:	str	xzr, [sp, #48]
   229d0:	ldr	x1, [sp, #56]
   229d4:	ldr	x0, [sp, #48]
   229d8:	cmp	x1, x0
   229dc:	cset	w0, ls  // ls = plast
   229e0:	and	w0, w0, #0xff
   229e4:	and	x0, x0, #0xff
   229e8:	cmp	x0, #0x0
   229ec:	b.eq	22a10 <__sanitizer_set_report_fd@@Base+0x8864>  // b.none
   229f0:	ldr	x4, [sp, #48]
   229f4:	ldr	x3, [sp, #56]
   229f8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   229fc:	add	x2, x0, #0x230
   22a00:	mov	w1, #0xcc                  	// #204
   22a04:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22a08:	add	x0, x0, #0x138
   22a0c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   22a10:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   22a14:	mov	x1, x0
   22a18:	ldr	x0, [sp, #80]
   22a1c:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   22a20:	mov	x1, x0
   22a24:	ldr	x0, [sp, #16]
   22a28:	str	x1, [x0]
   22a2c:	ldr	x0, [sp, #16]
   22a30:	ldr	x0, [x0]
   22a34:	mov	x5, #0x0                   	// #0
   22a38:	ldr	w4, [sp, #108]
   22a3c:	mov	w3, #0x2                   	// #2
   22a40:	mov	w2, #0x1                   	// #1
   22a44:	mov	x1, x0
   22a48:	mov	x0, #0x0                   	// #0
   22a4c:	bl	1e21c <__sanitizer_set_report_fd@@Base+0x4070>
   22a50:	str	x0, [sp, #40]
   22a54:	mov	x1, #0x0                   	// #0
   22a58:	ldr	x0, [sp, #40]
   22a5c:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   22a60:	and	w0, w0, #0xff
   22a64:	cmp	w0, #0x0
   22a68:	b.eq	22a74 <__sanitizer_set_report_fd@@Base+0x88c8>  // b.none
   22a6c:	mov	x0, #0x0                   	// #0
   22a70:	b	22a78 <__sanitizer_set_report_fd@@Base+0x88cc>
   22a74:	ldr	x0, [sp, #40]
   22a78:	ldr	x30, [sp], #112
   22a7c:	ret
   22a80:	str	x30, [sp, #-80]!
   22a84:	str	x0, [sp, #40]
   22a88:	str	x1, [sp, #32]
   22a8c:	str	w2, [sp, #28]
   22a90:	str	x3, [sp, #16]
   22a94:	mov	x0, #0x1                   	// #1
   22a98:	str	x0, [sp, #72]
   22a9c:	ldr	x0, [sp, #40]
   22aa0:	cmp	x0, #0x0
   22aa4:	b.eq	22ab4 <__sanitizer_set_report_fd@@Base+0x8908>  // b.none
   22aa8:	ldr	x0, [sp, #72]
   22aac:	orr	x0, x0, #0x10
   22ab0:	str	x0, [sp, #72]
   22ab4:	ldr	x0, [sp, #72]
   22ab8:	ldr	x5, [sp, #16]
   22abc:	ldr	w4, [sp, #28]
   22ac0:	mov	w3, w0
   22ac4:	mov	w2, #0x3                   	// #3
   22ac8:	ldr	x1, [sp, #32]
   22acc:	ldr	x0, [sp, #40]
   22ad0:	bl	1e21c <__sanitizer_set_report_fd@@Base+0x4070>
   22ad4:	str	x0, [sp, #64]
   22ad8:	str	wzr, [sp, #60]
   22adc:	add	x0, sp, #0x3c
   22ae0:	mov	x1, x0
   22ae4:	ldr	x0, [sp, #64]
   22ae8:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   22aec:	and	w0, w0, #0xff
   22af0:	cmp	w0, #0x0
   22af4:	b.eq	22b28 <__sanitizer_set_report_fd@@Base+0x897c>  // b.none
   22af8:	ldr	x0, [sp, #16]
   22afc:	ldr	w1, [sp, #60]
   22b00:	mov	w5, w1
   22b04:	ldr	x4, [sp, #64]
   22b08:	ldr	x3, [sp, #32]
   22b0c:	mov	x2, x0
   22b10:	ldr	w1, [sp, #28]
   22b14:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22b18:	add	x0, x0, #0x248
   22b1c:	bl	259c8 <OnPrint@@Base+0x3a8>
   22b20:	mov	x0, #0x0                   	// #0
   22b24:	b	22b2c <__sanitizer_set_report_fd@@Base+0x8980>
   22b28:	ldr	x0, [sp, #64]
   22b2c:	ldr	x30, [sp], #80
   22b30:	ret
   22b34:	str	x30, [sp, #-80]!
   22b38:	str	x0, [sp, #40]
   22b3c:	str	x1, [sp, #32]
   22b40:	str	x2, [sp, #24]
   22b44:	str	x3, [sp, #16]
   22b48:	ldr	x1, [sp, #40]
   22b4c:	ldr	x0, [sp, #32]
   22b50:	cmp	x1, x0
   22b54:	cset	w0, ls  // ls = plast
   22b58:	and	w0, w0, #0xff
   22b5c:	and	x0, x0, #0xff
   22b60:	str	x0, [sp, #72]
   22b64:	str	xzr, [sp, #64]
   22b68:	ldr	x1, [sp, #72]
   22b6c:	ldr	x0, [sp, #64]
   22b70:	cmp	x1, x0
   22b74:	cset	w0, eq  // eq = none
   22b78:	and	w0, w0, #0xff
   22b7c:	and	x0, x0, #0xff
   22b80:	cmp	x0, #0x0
   22b84:	b.eq	22ba8 <__sanitizer_set_report_fd@@Base+0x89fc>  // b.none
   22b88:	ldr	x4, [sp, #64]
   22b8c:	ldr	x3, [sp, #72]
   22b90:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22b94:	add	x2, x0, #0x288
   22b98:	mov	w1, #0xe1                  	// #225
   22b9c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22ba0:	add	x0, x0, #0x138
   22ba4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   22ba8:	ldr	x1, [sp, #24]
   22bac:	ldr	x0, [sp, #16]
   22bb0:	cmp	x1, x0
   22bb4:	cset	w0, ls  // ls = plast
   22bb8:	and	w0, w0, #0xff
   22bbc:	and	x0, x0, #0xff
   22bc0:	str	x0, [sp, #56]
   22bc4:	str	xzr, [sp, #48]
   22bc8:	ldr	x1, [sp, #56]
   22bcc:	ldr	x0, [sp, #48]
   22bd0:	cmp	x1, x0
   22bd4:	cset	w0, eq  // eq = none
   22bd8:	and	w0, w0, #0xff
   22bdc:	and	x0, x0, #0xff
   22be0:	cmp	x0, #0x0
   22be4:	b.eq	22c08 <__sanitizer_set_report_fd@@Base+0x8a5c>  // b.none
   22be8:	ldr	x4, [sp, #48]
   22bec:	ldr	x3, [sp, #56]
   22bf0:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22bf4:	add	x2, x0, #0x2a8
   22bf8:	mov	w1, #0xe2                  	// #226
   22bfc:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22c00:	add	x0, x0, #0x138
   22c04:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   22c08:	ldr	x1, [sp, #32]
   22c0c:	ldr	x0, [sp, #24]
   22c10:	cmp	x1, x0
   22c14:	b.cc	22c28 <__sanitizer_set_report_fd@@Base+0x8a7c>  // b.lo, b.ul, b.last
   22c18:	ldr	x1, [sp, #16]
   22c1c:	ldr	x0, [sp, #40]
   22c20:	cmp	x1, x0
   22c24:	b.cs	22c30 <__sanitizer_set_report_fd@@Base+0x8a84>  // b.hs, b.nlast
   22c28:	mov	w0, #0x1                   	// #1
   22c2c:	b	22c34 <__sanitizer_set_report_fd@@Base+0x8a88>
   22c30:	mov	w0, #0x0                   	// #0
   22c34:	ldr	x30, [sp], #80
   22c38:	ret
   22c3c:	stp	x19, x30, [sp, #-160]!
   22c40:	str	x0, [sp, #24]
   22c44:	str	x1, [sp, #16]
   22c48:	add	x0, sp, #0x70
   22c4c:	mov	w1, #0x1                   	// #1
   22c50:	bl	26098 <OnPrint@@Base+0xa78>
   22c54:	add	x0, sp, #0x20
   22c58:	mov	x2, #0x0                   	// #0
   22c5c:	mov	x1, #0x0                   	// #0
   22c60:	bl	21c64 <__sanitizer_set_report_fd@@Base+0x7ab8>
   22c64:	add	x1, sp, #0x20
   22c68:	add	x0, sp, #0x70
   22c6c:	bl	266a8 <OnPrint@@Base+0x1088>
   22c70:	and	w0, w0, #0xff
   22c74:	cmp	w0, #0x0
   22c78:	b.eq	22d1c <__sanitizer_set_report_fd@@Base+0x8b70>  // b.none
   22c7c:	ldr	x1, [sp, #32]
   22c80:	ldr	x0, [sp, #40]
   22c84:	cmp	x1, x0
   22c88:	b.eq	22d14 <__sanitizer_set_report_fd@@Base+0x8b68>  // b.none
   22c8c:	str	xzr, [sp, #152]
   22c90:	ldr	x0, [sp, #40]
   22c94:	str	x0, [sp, #144]
   22c98:	ldr	x1, [sp, #152]
   22c9c:	ldr	x0, [sp, #144]
   22ca0:	cmp	x1, x0
   22ca4:	cset	w0, eq  // eq = none
   22ca8:	and	w0, w0, #0xff
   22cac:	and	x0, x0, #0xff
   22cb0:	cmp	x0, #0x0
   22cb4:	b.eq	22cd8 <__sanitizer_set_report_fd@@Base+0x8b2c>  // b.none
   22cb8:	ldr	x4, [sp, #144]
   22cbc:	ldr	x3, [sp, #152]
   22cc0:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22cc4:	add	x2, x0, #0x2c8
   22cc8:	mov	w1, #0xef                  	// #239
   22ccc:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22cd0:	add	x0, x0, #0x138
   22cd4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   22cd8:	ldr	x4, [sp, #32]
   22cdc:	ldr	x0, [sp, #40]
   22ce0:	sub	x0, x0, #0x1
   22ce4:	ldr	x3, [sp, #16]
   22ce8:	ldr	x2, [sp, #24]
   22cec:	mov	x1, x0
   22cf0:	mov	x0, x4
   22cf4:	bl	22b34 <__sanitizer_set_report_fd@@Base+0x8988>
   22cf8:	and	w0, w0, #0xff
   22cfc:	eor	w0, w0, #0x1
   22d00:	and	w0, w0, #0xff
   22d04:	cmp	w0, #0x0
   22d08:	b.eq	22c64 <__sanitizer_set_report_fd@@Base+0x8ab8>  // b.none
   22d0c:	mov	w19, #0x0                   	// #0
   22d10:	b	22d20 <__sanitizer_set_report_fd@@Base+0x8b74>
   22d14:	nop
   22d18:	b	22c64 <__sanitizer_set_report_fd@@Base+0x8ab8>
   22d1c:	mov	w19, #0x1                   	// #1
   22d20:	add	x0, sp, #0x20
   22d24:	bl	21ca0 <__sanitizer_set_report_fd@@Base+0x7af4>
   22d28:	add	x0, sp, #0x70
   22d2c:	bl	26194 <OnPrint@@Base+0xb74>
   22d30:	mov	w0, w19
   22d34:	ldp	x19, x30, [sp], #160
   22d38:	ret
   22d3c:	str	x30, [sp, #-144]!
   22d40:	add	x0, sp, #0x60
   22d44:	mov	w1, #0x1                   	// #1
   22d48:	bl	26098 <OnPrint@@Base+0xa78>
   22d4c:	mov	x0, #0xfff                 	// #4095
   22d50:	str	x0, [sp, #136]
   22d54:	mov	w2, #0x0                   	// #0
   22d58:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22d5c:	add	x1, x0, #0x2e8
   22d60:	mov	x0, #0xfff                 	// #4095
   22d64:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   22d68:	str	x0, [sp, #128]
   22d6c:	add	x0, sp, #0x10
   22d70:	mov	x2, #0xfff                 	// #4095
   22d74:	ldr	x1, [sp, #128]
   22d78:	bl	21c64 <__sanitizer_set_report_fd@@Base+0x7ab8>
   22d7c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22d80:	add	x0, x0, #0x2f8
   22d84:	bl	25a74 <OnPrint@@Base+0x454>
   22d88:	add	x1, sp, #0x10
   22d8c:	add	x0, sp, #0x60
   22d90:	bl	266a8 <OnPrint@@Base+0x1088>
   22d94:	and	w0, w0, #0xff
   22d98:	cmp	w0, #0x0
   22d9c:	b.eq	22dc8 <__sanitizer_set_report_fd@@Base+0x8c1c>  // b.none
   22da0:	ldr	x0, [sp, #16]
   22da4:	mov	x1, x0
   22da8:	ldr	x0, [sp, #24]
   22dac:	mov	x2, x0
   22db0:	ldr	x0, [sp, #40]
   22db4:	mov	x3, x0
   22db8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22dbc:	add	x0, x0, #0x318
   22dc0:	bl	259c8 <OnPrint@@Base+0x3a8>
   22dc4:	b	22d88 <__sanitizer_set_report_fd@@Base+0x8bdc>
   22dc8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22dcc:	add	x0, x0, #0x328
   22dd0:	bl	25a74 <OnPrint@@Base+0x454>
   22dd4:	mov	x1, #0xfff                 	// #4095
   22dd8:	ldr	x0, [sp, #128]
   22ddc:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   22de0:	add	x0, sp, #0x10
   22de4:	bl	21ca0 <__sanitizer_set_report_fd@@Base+0x7af4>
   22de8:	add	x0, sp, #0x60
   22dec:	bl	26194 <OnPrint@@Base+0xb74>
   22df0:	nop
   22df4:	ldr	x30, [sp], #144
   22df8:	ret
   22dfc:	str	x30, [sp, #-16]!
   22e00:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   22e04:	add	x0, x0, #0x348
   22e08:	bl	1e85c <__sanitizer_set_report_fd@@Base+0x46b0>
   22e0c:	ldr	x30, [sp], #16
   22e10:	ret
   22e14:	sub	sp, sp, #0x10
   22e18:	strb	w0, [sp, #15]
   22e1c:	ldrb	w0, [sp, #15]
   22e20:	cmp	w0, #0x2f
   22e24:	cset	w0, eq  // eq = none
   22e28:	and	w0, w0, #0xff
   22e2c:	add	sp, sp, #0x10
   22e30:	ret
   22e34:	str	x30, [sp, #-32]!
   22e38:	str	x0, [sp, #24]
   22e3c:	ldr	x0, [sp, #24]
   22e40:	cmp	x0, #0x0
   22e44:	b.eq	22e68 <__sanitizer_set_report_fd@@Base+0x8cbc>  // b.none
   22e48:	ldr	x0, [sp, #24]
   22e4c:	ldrb	w0, [x0]
   22e50:	bl	22e14 <__sanitizer_set_report_fd@@Base+0x8c68>
   22e54:	and	w0, w0, #0xff
   22e58:	cmp	w0, #0x0
   22e5c:	b.eq	22e68 <__sanitizer_set_report_fd@@Base+0x8cbc>  // b.none
   22e60:	mov	w0, #0x1                   	// #1
   22e64:	b	22e6c <__sanitizer_set_report_fd@@Base+0x8cc0>
   22e68:	mov	w0, #0x0                   	// #0
   22e6c:	ldr	x30, [sp], #32
   22e70:	ret
   22e74:	stp	x19, x20, [sp, #-80]!
   22e78:	str	x30, [sp, #16]
   22e7c:	str	x0, [sp, #56]
   22e80:	str	x1, [sp, #48]
   22e84:	str	x2, [sp, #40]
   22e88:	ldr	x0, [sp, #56]
   22e8c:	ldr	x1, [x0]
   22e90:	add	x0, sp, #0x48
   22e94:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   22e98:	ldr	x0, [sp, #56]
   22e9c:	bl	19844 <__sanitizer_cov_pcs_init@@Base+0x3d80>
   22ea0:	ldr	x0, [sp, #56]
   22ea4:	ldr	w0, [x0, #8]
   22ea8:	ldr	x2, [sp, #40]
   22eac:	ldr	x1, [sp, #48]
   22eb0:	bl	1e3e4 <__sanitizer_set_report_fd@@Base+0x4238>
   22eb4:	mov	x1, x0
   22eb8:	ldr	x0, [sp, #40]
   22ebc:	cmp	x0, x1
   22ec0:	cset	w0, ne  // ne = any
   22ec4:	and	w0, w0, #0xff
   22ec8:	cmp	w0, #0x0
   22ecc:	b.eq	22f08 <__sanitizer_set_report_fd@@Base+0x8d5c>  // b.none
   22ed0:	ldr	x0, [sp, #56]
   22ed4:	ldr	w19, [x0, #8]
   22ed8:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
   22edc:	add	x0, x0, #0xd70
   22ee0:	ldr	x20, [x0]
   22ee4:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
   22ee8:	add	x0, x0, #0xd70
   22eec:	ldr	x0, [x0]
   22ef0:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   22ef4:	mov	x2, x0
   22ef8:	mov	x1, x20
   22efc:	mov	w0, w19
   22f00:	bl	1e3e4 <__sanitizer_set_report_fd@@Base+0x4238>
   22f04:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   22f08:	add	x0, sp, #0x48
   22f0c:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   22f10:	nop
   22f14:	ldr	x30, [sp, #16]
   22f18:	ldp	x19, x20, [sp], #80
   22f1c:	ret
   22f20:	stp	x19, x30, [sp, #-192]!
   22f24:	str	x0, [sp, #40]
   22f28:	str	x1, [sp, #32]
   22f2c:	str	x2, [sp, #24]
   22f30:	add	x0, sp, #0xa0
   22f34:	mov	w1, #0x0                   	// #0
   22f38:	bl	26098 <OnPrint@@Base+0xa78>
   22f3c:	add	x0, sp, #0x80
   22f40:	mov	x1, #0x1000                	// #4096
   22f44:	bl	89fc <__asan_backtrace_open@plt+0x1d8c>
   22f48:	add	x0, sp, #0x80
   22f4c:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   22f50:	mov	x1, x0
   22f54:	add	x0, sp, #0x30
   22f58:	mov	x2, #0x1000                	// #4096
   22f5c:	bl	21c64 <__sanitizer_set_report_fd@@Base+0x7ab8>
   22f60:	add	x1, sp, #0x30
   22f64:	add	x0, sp, #0xa0
   22f68:	bl	266a8 <OnPrint@@Base+0x1088>
   22f6c:	and	w0, w0, #0xff
   22f70:	cmp	w0, #0x0
   22f74:	b.eq	22fd8 <__sanitizer_set_report_fd@@Base+0x8e2c>  // b.none
   22f78:	add	x0, sp, #0x30
   22f7c:	bl	23110 <__sanitizer_set_report_fd@@Base+0x8f64>
   22f80:	and	w0, w0, #0xff
   22f84:	cmp	w0, #0x0
   22f88:	b.eq	22fac <__sanitizer_set_report_fd@@Base+0x8e00>  // b.none
   22f8c:	ldr	x0, [sp, #72]
   22f90:	mov	x1, x0
   22f94:	ldr	x0, [sp, #40]
   22f98:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   22f9c:	cmp	w0, #0x0
   22fa0:	b.ne	22fac <__sanitizer_set_report_fd@@Base+0x8e00>  // b.any
   22fa4:	mov	w0, #0x1                   	// #1
   22fa8:	b	22fb0 <__sanitizer_set_report_fd@@Base+0x8e04>
   22fac:	mov	w0, #0x0                   	// #0
   22fb0:	cmp	w0, #0x0
   22fb4:	b.eq	22f60 <__sanitizer_set_report_fd@@Base+0x8db4>  // b.none
   22fb8:	ldr	x1, [sp, #48]
   22fbc:	ldr	x0, [sp, #32]
   22fc0:	str	x1, [x0]
   22fc4:	ldr	x1, [sp, #56]
   22fc8:	ldr	x0, [sp, #24]
   22fcc:	str	x1, [x0]
   22fd0:	mov	w19, #0x1                   	// #1
   22fd4:	b	22fdc <__sanitizer_set_report_fd@@Base+0x8e30>
   22fd8:	mov	w19, #0x0                   	// #0
   22fdc:	add	x0, sp, #0x30
   22fe0:	bl	21ca0 <__sanitizer_set_report_fd@@Base+0x7af4>
   22fe4:	add	x0, sp, #0x80
   22fe8:	bl	9274 <__asan_backtrace_open@plt+0x2604>
   22fec:	add	x0, sp, #0xa0
   22ff0:	bl	26194 <OnPrint@@Base+0xb74>
   22ff4:	mov	w0, w19
   22ff8:	ldp	x19, x30, [sp], #192
   22ffc:	ret
   23000:	sub	sp, sp, #0x20
   23004:	str	x0, [sp, #8]
   23008:	ldr	x0, [sp, #8]
   2300c:	ldr	x0, [x0]
   23010:	str	x0, [sp, #24]
   23014:	ldr	x0, [sp, #24]
   23018:	ldr	x0, [x0, #16]
   2301c:	add	sp, sp, #0x20
   23020:	ret
   23024:	sub	sp, sp, #0x20
   23028:	str	x0, [sp, #8]
   2302c:	ldr	x0, [sp, #8]
   23030:	ldr	x0, [x0]
   23034:	str	x0, [sp, #24]
   23038:	ldr	x0, [sp, #24]
   2303c:	ldr	w0, [x0]
   23040:	cmp	w0, #0xb
   23044:	cset	w0, eq  // eq = none
   23048:	and	w0, w0, #0xff
   2304c:	add	sp, sp, #0x20
   23050:	ret
   23054:	sub	sp, sp, #0x10
   23058:	str	x0, [sp, #8]
   2305c:	ldr	x0, [sp, #8]
   23060:	ldr	x0, [x0]
   23064:	ldr	w0, [x0]
   23068:	add	sp, sp, #0x10
   2306c:	ret
   23070:	str	x30, [sp, #-32]!
   23074:	str	x0, [sp, #24]
   23078:	ldr	x0, [sp, #24]
   2307c:	bl	23054 <__sanitizer_set_report_fd@@Base+0x8ea8>
   23080:	cmp	w0, #0xb
   23084:	b.eq	230e8 <__sanitizer_set_report_fd@@Base+0x8f3c>  // b.none
   23088:	cmp	w0, #0xb
   2308c:	b.gt	23100 <__sanitizer_set_report_fd@@Base+0x8f54>
   23090:	cmp	w0, #0x8
   23094:	b.eq	230c4 <__sanitizer_set_report_fd@@Base+0x8f18>  // b.none
   23098:	cmp	w0, #0x8
   2309c:	b.gt	23100 <__sanitizer_set_report_fd@@Base+0x8f54>
   230a0:	cmp	w0, #0x7
   230a4:	b.eq	230f4 <__sanitizer_set_report_fd@@Base+0x8f48>  // b.none
   230a8:	cmp	w0, #0x7
   230ac:	b.gt	23100 <__sanitizer_set_report_fd@@Base+0x8f54>
   230b0:	cmp	w0, #0x4
   230b4:	b.eq	230d0 <__sanitizer_set_report_fd@@Base+0x8f24>  // b.none
   230b8:	cmp	w0, #0x6
   230bc:	b.eq	230dc <__sanitizer_set_report_fd@@Base+0x8f30>  // b.none
   230c0:	b	23100 <__sanitizer_set_report_fd@@Base+0x8f54>
   230c4:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   230c8:	add	x0, x0, #0x388
   230cc:	b	23108 <__sanitizer_set_report_fd@@Base+0x8f5c>
   230d0:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   230d4:	add	x0, x0, #0x390
   230d8:	b	23108 <__sanitizer_set_report_fd@@Base+0x8f5c>
   230dc:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   230e0:	add	x0, x0, #0x398
   230e4:	b	23108 <__sanitizer_set_report_fd@@Base+0x8f5c>
   230e8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   230ec:	add	x0, x0, #0x3a0
   230f0:	b	23108 <__sanitizer_set_report_fd@@Base+0x8f5c>
   230f4:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   230f8:	add	x0, x0, #0x3a8
   230fc:	b	23108 <__sanitizer_set_report_fd@@Base+0x8f5c>
   23100:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23104:	add	x0, x0, #0x3b0
   23108:	ldr	x30, [sp], #32
   2310c:	ret
   23110:	sub	sp, sp, #0x10
   23114:	str	x0, [sp, #8]
   23118:	ldr	x0, [sp, #8]
   2311c:	ldr	x0, [x0, #40]
   23120:	and	x0, x0, #0x4
   23124:	cmp	x0, #0x0
   23128:	cset	w0, ne  // ne = any
   2312c:	and	w0, w0, #0xff
   23130:	add	sp, sp, #0x10
   23134:	ret
   23138:	str	x30, [sp, #-16]!
   2313c:	bl	6b70 <getuid@plt>
   23140:	ldr	x30, [sp], #16
   23144:	ret
   23148:	str	x30, [sp, #-16]!
   2314c:	bl	6b60 <pthread_self@plt>
   23150:	ldr	x30, [sp], #16
   23154:	ret
   23158:	str	x30, [sp, #-64]!
   2315c:	str	x0, [sp, #24]
   23160:	str	x1, [sp, #16]
   23164:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   23168:	str	x0, [sp, #56]
   2316c:	ldr	x1, [sp, #56]
   23170:	ldr	x0, [sp, #24]
   23174:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   23178:	str	x0, [sp, #48]
   2317c:	ldr	x1, [sp, #56]
   23180:	ldr	x0, [sp, #16]
   23184:	bl	1d488 <__sanitizer_set_report_fd@@Base+0x32dc>
   23188:	str	x0, [sp, #40]
   2318c:	ldr	x1, [sp, #48]
   23190:	ldr	x0, [sp, #40]
   23194:	cmp	x1, x0
   23198:	b.cs	231bc <__sanitizer_set_report_fd@@Base+0x9010>  // b.hs, b.nlast
   2319c:	ldr	x3, [sp, #48]
   231a0:	ldr	x1, [sp, #40]
   231a4:	ldr	x0, [sp, #48]
   231a8:	sub	x0, x1, x0
   231ac:	mov	w2, #0x4                   	// #4
   231b0:	mov	x1, x0
   231b4:	mov	x0, x3
   231b8:	bl	6980 <madvise@plt>
   231bc:	nop
   231c0:	ldr	x30, [sp], #64
   231c4:	ret
   231c8:	str	x30, [sp, #-32]!
   231cc:	str	x0, [sp, #24]
   231d0:	str	x1, [sp, #16]
   231d4:	ldr	x0, [sp, #24]
   231d8:	mov	w2, #0xf                   	// #15
   231dc:	ldr	x1, [sp, #16]
   231e0:	bl	6980 <madvise@plt>
   231e4:	cmp	w0, #0x0
   231e8:	cset	w0, eq  // eq = none
   231ec:	and	w0, w0, #0xff
   231f0:	ldr	x30, [sp], #32
   231f4:	ret
   231f8:	str	x30, [sp, #-32]!
   231fc:	str	x0, [sp, #24]
   23200:	str	x1, [sp, #16]
   23204:	ldr	x0, [sp, #24]
   23208:	mov	w2, #0x10                  	// #16
   2320c:	ldr	x1, [sp, #16]
   23210:	bl	6980 <madvise@plt>
   23214:	cmp	w0, #0x0
   23218:	cset	w0, eq  // eq = none
   2321c:	and	w0, w0, #0xff
   23220:	ldr	x30, [sp], #32
   23224:	ret
   23228:	str	x30, [sp, #-64]!
   2322c:	str	w0, [sp, #28]
   23230:	str	xzr, [sp, #56]
   23234:	add	x0, sp, #0x20
   23238:	mov	x1, x0
   2323c:	ldr	w0, [sp, #28]
   23240:	bl	6bd0 <getrlimit@plt>
   23244:	sxtw	x0, w0
   23248:	str	x0, [sp, #48]
   2324c:	ldr	x1, [sp, #56]
   23250:	ldr	x0, [sp, #48]
   23254:	cmp	x1, x0
   23258:	cset	w0, ne  // ne = any
   2325c:	and	w0, w0, #0xff
   23260:	and	x0, x0, #0xff
   23264:	cmp	x0, #0x0
   23268:	b.eq	2328c <__sanitizer_set_report_fd@@Base+0x90e0>  // b.none
   2326c:	ldr	x4, [sp, #48]
   23270:	ldr	x3, [sp, #56]
   23274:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23278:	add	x2, x0, #0x530
   2327c:	mov	w1, #0x5a                  	// #90
   23280:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23284:	add	x0, x0, #0x558
   23288:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2328c:	ldr	x0, [sp, #32]
   23290:	ldr	x30, [sp], #64
   23294:	ret
   23298:	stp	x19, x30, [sp, #-48]!
   2329c:	str	w0, [sp, #28]
   232a0:	str	x1, [sp, #16]
   232a4:	ldr	x0, [sp, #16]
   232a8:	str	x0, [sp, #32]
   232ac:	ldr	x0, [sp, #16]
   232b0:	str	x0, [sp, #40]
   232b4:	add	x0, sp, #0x20
   232b8:	mov	x1, x0
   232bc:	ldr	w0, [sp, #28]
   232c0:	bl	6aa0 <setrlimit@plt>
   232c4:	cmp	w0, #0x0
   232c8:	cset	w0, ne  // ne = any
   232cc:	and	w0, w0, #0xff
   232d0:	cmp	w0, #0x0
   232d4:	b.eq	23304 <__sanitizer_set_report_fd@@Base+0x9158>  // b.none
   232d8:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   232dc:	ldr	x0, [x0, #4024]
   232e0:	ldr	x19, [x0]
   232e4:	bl	69d0 <__errno_location@plt>
   232e8:	ldr	w0, [x0]
   232ec:	mov	w2, w0
   232f0:	mov	x1, x19
   232f4:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   232f8:	add	x0, x0, #0x5a0
   232fc:	bl	25a74 <OnPrint@@Base+0x454>
   23300:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   23304:	nop
   23308:	ldp	x19, x30, [sp], #48
   2330c:	ret
   23310:	str	x30, [sp, #-16]!
   23314:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   23318:	ldrb	w0, [x0, #178]
   2331c:	cmp	w0, #0x0
   23320:	b.eq	23330 <__sanitizer_set_report_fd@@Base+0x9184>  // b.none
   23324:	mov	x1, #0x0                   	// #0
   23328:	mov	w0, #0x4                   	// #4
   2332c:	bl	23298 <__sanitizer_set_report_fd@@Base+0x90ec>
   23330:	nop
   23334:	ldr	x30, [sp], #16
   23338:	ret
   2333c:	str	x30, [sp, #-32]!
   23340:	mov	w0, #0x3                   	// #3
   23344:	bl	23228 <__sanitizer_set_report_fd@@Base+0x907c>
   23348:	str	x0, [sp, #24]
   2334c:	ldr	x0, [sp, #24]
   23350:	cmn	x0, #0x1
   23354:	cset	w0, eq  // eq = none
   23358:	and	w0, w0, #0xff
   2335c:	ldr	x30, [sp], #32
   23360:	ret
   23364:	str	x30, [sp, #-16]!
   23368:	mov	w0, #0x3                   	// #3
   2336c:	bl	23228 <__sanitizer_set_report_fd@@Base+0x907c>
   23370:	ldr	x30, [sp], #16
   23374:	ret
   23378:	str	x30, [sp, #-48]!
   2337c:	str	x0, [sp, #24]
   23380:	ldr	x1, [sp, #24]
   23384:	mov	w0, #0x3                   	// #3
   23388:	bl	23298 <__sanitizer_set_report_fd@@Base+0x90ec>
   2338c:	bl	2333c <__sanitizer_set_report_fd@@Base+0x9190>
   23390:	and	w0, w0, #0xff
   23394:	eor	w0, w0, #0x1
   23398:	and	w0, w0, #0xff
   2339c:	and	x0, x0, #0xff
   233a0:	str	x0, [sp, #40]
   233a4:	str	xzr, [sp, #32]
   233a8:	ldr	x1, [sp, #40]
   233ac:	ldr	x0, [sp, #32]
   233b0:	cmp	x1, x0
   233b4:	cset	w0, eq  // eq = none
   233b8:	and	w0, w0, #0xff
   233bc:	and	x0, x0, #0xff
   233c0:	cmp	x0, #0x0
   233c4:	b.eq	233e8 <__sanitizer_set_report_fd@@Base+0x923c>  // b.none
   233c8:	ldr	x4, [sp, #32]
   233cc:	ldr	x3, [sp, #40]
   233d0:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   233d4:	add	x2, x0, #0x5c8
   233d8:	mov	w1, #0x7a                  	// #122
   233dc:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   233e0:	add	x0, x0, #0x558
   233e4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   233e8:	nop
   233ec:	ldr	x30, [sp], #48
   233f0:	ret
   233f4:	str	x30, [sp, #-32]!
   233f8:	mov	w0, #0x9                   	// #9
   233fc:	bl	23228 <__sanitizer_set_report_fd@@Base+0x907c>
   23400:	str	x0, [sp, #24]
   23404:	ldr	x0, [sp, #24]
   23408:	cmn	x0, #0x1
   2340c:	cset	w0, eq  // eq = none
   23410:	and	w0, w0, #0xff
   23414:	ldr	x30, [sp], #32
   23418:	ret
   2341c:	str	x30, [sp, #-32]!
   23420:	mov	x1, #0xffffffffffffffff    	// #-1
   23424:	mov	w0, #0x9                   	// #9
   23428:	bl	23298 <__sanitizer_set_report_fd@@Base+0x90ec>
   2342c:	bl	233f4 <__sanitizer_set_report_fd@@Base+0x9248>
   23430:	and	w0, w0, #0xff
   23434:	and	x0, x0, #0xff
   23438:	str	x0, [sp, #24]
   2343c:	str	xzr, [sp, #16]
   23440:	ldr	x1, [sp, #24]
   23444:	ldr	x0, [sp, #16]
   23448:	cmp	x1, x0
   2344c:	cset	w0, eq  // eq = none
   23450:	and	w0, w0, #0xff
   23454:	and	x0, x0, #0xff
   23458:	cmp	x0, #0x0
   2345c:	b.eq	23480 <__sanitizer_set_report_fd@@Base+0x92d4>  // b.none
   23460:	ldr	x4, [sp, #16]
   23464:	ldr	x3, [sp, #24]
   23468:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   2346c:	add	x2, x0, #0x5f0
   23470:	mov	w1, #0x84                  	// #132
   23474:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23478:	add	x0, x0, #0x558
   2347c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   23480:	nop
   23484:	ldr	x30, [sp], #32
   23488:	ret
   2348c:	str	x30, [sp, #-32]!
   23490:	str	w0, [sp, #28]
   23494:	ldr	w0, [sp, #28]
   23498:	bl	6720 <sleep@plt>
   2349c:	nop
   234a0:	ldr	x30, [sp], #32
   234a4:	ret
   234a8:	str	x30, [sp, #-32]!
   234ac:	str	w0, [sp, #28]
   234b0:	ldr	w1, [sp, #28]
   234b4:	mov	w0, #0x3e8                 	// #1000
   234b8:	mul	w0, w1, w0
   234bc:	bl	6990 <usleep@plt>
   234c0:	nop
   234c4:	ldr	x30, [sp], #32
   234c8:	ret
   234cc:	str	x30, [sp, #-176]!
   234d0:	mov	w0, #0x6                   	// #6
   234d4:	bl	200b0 <__sanitizer_set_report_fd@@Base+0x5f04>
   234d8:	cmp	w0, #0x0
   234dc:	cset	w0, ne  // ne = any
   234e0:	and	w0, w0, #0xff
   234e4:	cmp	w0, #0x0
   234e8:	b.eq	23514 <__sanitizer_set_report_fd@@Base+0x9368>  // b.none
   234ec:	add	x0, sp, #0x18
   234f0:	mov	x2, #0x98                  	// #152
   234f4:	mov	w1, #0x0                   	// #0
   234f8:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   234fc:	str	xzr, [sp, #24]
   23500:	add	x0, sp, #0x18
   23504:	mov	x2, #0x0                   	// #0
   23508:	mov	x1, x0
   2350c:	mov	w0, #0x6                   	// #6
   23510:	bl	20adc <__sanitizer_set_report_fd@@Base+0x6930>
   23514:	bl	6ae0 <abort@plt>
   23518:	str	x30, [sp, #-32]!
   2351c:	str	x0, [sp, #24]
   23520:	ldr	x0, [sp, #24]
   23524:	bl	4a740 <__asan_backtrace_vector_release@@Base+0xb0>
   23528:	ldr	x30, [sp], #32
   2352c:	ret
   23530:	str	x30, [sp, #-32]!
   23534:	str	w0, [sp, #28]
   23538:	ldr	w0, [sp, #28]
   2353c:	bl	67a0 <isatty@plt>
   23540:	cmp	w0, #0x0
   23544:	cset	w0, ne  // ne = any
   23548:	and	w0, w0, #0xff
   2354c:	ldr	x30, [sp], #32
   23550:	ret
   23554:	str	x30, [sp, #-112]!
   23558:	str	xzr, [sp, #104]
   2355c:	add	x0, sp, #0x18
   23560:	mov	x1, x0
   23564:	mov	x0, #0x0                   	// #0
   23568:	bl	6be0 <sigaltstack@plt>
   2356c:	sxtw	x0, w0
   23570:	str	x0, [sp, #96]
   23574:	ldr	x1, [sp, #104]
   23578:	ldr	x0, [sp, #96]
   2357c:	cmp	x1, x0
   23580:	cset	w0, ne  // ne = any
   23584:	and	w0, w0, #0xff
   23588:	and	x0, x0, #0xff
   2358c:	cmp	x0, #0x0
   23590:	b.eq	235b4 <__sanitizer_set_report_fd@@Base+0x9408>  // b.none
   23594:	ldr	x4, [sp, #96]
   23598:	ldr	x3, [sp, #104]
   2359c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   235a0:	add	x2, x0, #0x620
   235a4:	mov	w1, #0xb0                  	// #176
   235a8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   235ac:	add	x0, x0, #0x558
   235b0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   235b4:	ldr	w0, [sp, #32]
   235b8:	and	w0, w0, #0x2
   235bc:	cmp	w0, #0x0
   235c0:	b.eq	23648 <__sanitizer_set_report_fd@@Base+0x949c>  // b.none
   235c4:	mov	w2, #0x0                   	// #0
   235c8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   235cc:	add	x1, x0, #0x650
   235d0:	mov	x0, #0x10000               	// #65536
   235d4:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   235d8:	str	x0, [sp, #88]
   235dc:	ldr	x0, [sp, #88]
   235e0:	str	x0, [sp, #48]
   235e4:	str	wzr, [sp, #56]
   235e8:	mov	x0, #0x10000               	// #65536
   235ec:	str	x0, [sp, #64]
   235f0:	str	xzr, [sp, #80]
   235f4:	add	x0, sp, #0x30
   235f8:	mov	x1, #0x0                   	// #0
   235fc:	bl	6be0 <sigaltstack@plt>
   23600:	sxtw	x0, w0
   23604:	str	x0, [sp, #72]
   23608:	ldr	x1, [sp, #80]
   2360c:	ldr	x0, [sp, #72]
   23610:	cmp	x1, x0
   23614:	cset	w0, ne  // ne = any
   23618:	and	w0, w0, #0xff
   2361c:	and	x0, x0, #0xff
   23620:	cmp	x0, #0x0
   23624:	b.eq	2364c <__sanitizer_set_report_fd@@Base+0x94a0>  // b.none
   23628:	ldr	x4, [sp, #72]
   2362c:	ldr	x3, [sp, #80]
   23630:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23634:	add	x2, x0, #0x668
   23638:	mov	w1, #0xbb                  	// #187
   2363c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23640:	add	x0, x0, #0x558
   23644:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   23648:	nop
   2364c:	ldr	x30, [sp], #112
   23650:	ret
   23654:	str	x30, [sp, #-80]!
   23658:	str	xzr, [sp, #40]
   2365c:	mov	w0, #0x2                   	// #2
   23660:	str	w0, [sp, #48]
   23664:	mov	x0, #0x10000               	// #65536
   23668:	str	x0, [sp, #56]
   2366c:	str	xzr, [sp, #72]
   23670:	add	x1, sp, #0x10
   23674:	add	x0, sp, #0x28
   23678:	bl	6be0 <sigaltstack@plt>
   2367c:	sxtw	x0, w0
   23680:	str	x0, [sp, #64]
   23684:	ldr	x1, [sp, #72]
   23688:	ldr	x0, [sp, #64]
   2368c:	cmp	x1, x0
   23690:	cset	w0, ne  // ne = any
   23694:	and	w0, w0, #0xff
   23698:	and	x0, x0, #0xff
   2369c:	cmp	x0, #0x0
   236a0:	b.eq	236c4 <__sanitizer_set_report_fd@@Base+0x9518>  // b.none
   236a4:	ldr	x4, [sp, #64]
   236a8:	ldr	x3, [sp, #72]
   236ac:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   236b0:	add	x2, x0, #0x698
   236b4:	mov	w1, #0xc3                  	// #195
   236b8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   236bc:	add	x0, x0, #0x558
   236c0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   236c4:	ldr	x0, [sp, #16]
   236c8:	ldr	x1, [sp, #32]
   236cc:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   236d0:	nop
   236d4:	ldr	x30, [sp], #80
   236d8:	ret
   236dc:	str	x30, [sp, #-208]!
   236e0:	str	w0, [sp, #28]
   236e4:	str	x1, [sp, #16]
   236e8:	ldr	w0, [sp, #28]
   236ec:	bl	200b0 <__sanitizer_set_report_fd@@Base+0x5f04>
   236f0:	cmp	w0, #0x0
   236f4:	cset	w0, eq  // eq = none
   236f8:	and	w0, w0, #0xff
   236fc:	cmp	w0, #0x0
   23700:	b.ne	237d0 <__sanitizer_set_report_fd@@Base+0x9624>  // b.any
   23704:	add	x0, sp, #0x28
   23708:	mov	x2, #0x98                  	// #152
   2370c:	mov	w1, #0x0                   	// #0
   23710:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   23714:	ldr	x0, [sp, #16]
   23718:	str	x0, [sp, #40]
   2371c:	mov	w0, #0x4                   	// #4
   23720:	movk	w0, #0x4000, lsl #16
   23724:	str	w0, [sp, #176]
   23728:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   2372c:	ldrb	w0, [x0, #97]
   23730:	cmp	w0, #0x0
   23734:	b.eq	23744 <__sanitizer_set_report_fd@@Base+0x9598>  // b.none
   23738:	ldr	w0, [sp, #176]
   2373c:	orr	w0, w0, #0x8000000
   23740:	str	w0, [sp, #176]
   23744:	str	xzr, [sp, #200]
   23748:	add	x0, sp, #0x28
   2374c:	mov	x2, #0x0                   	// #0
   23750:	mov	x1, x0
   23754:	ldr	w0, [sp, #28]
   23758:	bl	20adc <__sanitizer_set_report_fd@@Base+0x6930>
   2375c:	sxtw	x0, w0
   23760:	str	x0, [sp, #192]
   23764:	ldr	x1, [sp, #200]
   23768:	ldr	x0, [sp, #192]
   2376c:	cmp	x1, x0
   23770:	cset	w0, ne  // ne = any
   23774:	and	w0, w0, #0xff
   23778:	and	x0, x0, #0xff
   2377c:	cmp	x0, #0x0
   23780:	b.eq	237a4 <__sanitizer_set_report_fd@@Base+0x95f8>  // b.none
   23784:	ldr	x4, [sp, #192]
   23788:	ldr	x3, [sp, #200]
   2378c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23790:	add	x2, x0, #0x6c8
   23794:	mov	w1, #0xd2                  	// #210
   23798:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   2379c:	add	x0, x0, #0x558
   237a0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   237a4:	bl	9984 <__ubsan_default_options@@Base+0x320>
   237a8:	cmp	w0, #0x0
   237ac:	cset	w0, ne  // ne = any
   237b0:	and	w0, w0, #0xff
   237b4:	cmp	w0, #0x0
   237b8:	b.eq	237d4 <__sanitizer_set_report_fd@@Base+0x9628>  // b.none
   237bc:	ldr	w1, [sp, #28]
   237c0:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   237c4:	add	x0, x0, #0x708
   237c8:	bl	25a74 <OnPrint@@Base+0x454>
   237cc:	b	237d4 <__sanitizer_set_report_fd@@Base+0x9628>
   237d0:	nop
   237d4:	ldr	x30, [sp], #208
   237d8:	ret
   237dc:	str	x30, [sp, #-32]!
   237e0:	str	x0, [sp, #24]
   237e4:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   237e8:	ldrb	w0, [x0, #97]
   237ec:	cmp	w0, #0x0
   237f0:	b.eq	237f8 <__sanitizer_set_report_fd@@Base+0x964c>  // b.none
   237f4:	bl	23554 <__sanitizer_set_report_fd@@Base+0x93a8>
   237f8:	ldr	x1, [sp, #24]
   237fc:	mov	w0, #0xb                   	// #11
   23800:	bl	236dc <__sanitizer_set_report_fd@@Base+0x9530>
   23804:	ldr	x1, [sp, #24]
   23808:	mov	w0, #0x7                   	// #7
   2380c:	bl	236dc <__sanitizer_set_report_fd@@Base+0x9530>
   23810:	ldr	x1, [sp, #24]
   23814:	mov	w0, #0x6                   	// #6
   23818:	bl	236dc <__sanitizer_set_report_fd@@Base+0x9530>
   2381c:	ldr	x1, [sp, #24]
   23820:	mov	w0, #0x8                   	// #8
   23824:	bl	236dc <__sanitizer_set_report_fd@@Base+0x9530>
   23828:	ldr	x1, [sp, #24]
   2382c:	mov	w0, #0x4                   	// #4
   23830:	bl	236dc <__sanitizer_set_report_fd@@Base+0x9530>
   23834:	ldr	x1, [sp, #24]
   23838:	mov	w0, #0x5                   	// #5
   2383c:	bl	236dc <__sanitizer_set_report_fd@@Base+0x9530>
   23840:	nop
   23844:	ldr	x30, [sp], #32
   23848:	ret
   2384c:	stp	x19, x30, [sp, #-48]!
   23850:	str	x0, [sp, #24]
   23854:	ldr	x0, [sp, #24]
   23858:	ldr	x19, [x0, #16]
   2385c:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   23860:	add	x1, x19, x0
   23864:	ldr	x0, [sp, #24]
   23868:	ldr	x0, [x0, #32]
   2386c:	cmp	x1, x0
   23870:	b.ls	2389c <__sanitizer_set_report_fd@@Base+0x96f0>  // b.plast
   23874:	ldr	x0, [sp, #24]
   23878:	ldr	x1, [x0, #16]
   2387c:	ldr	x0, [sp, #24]
   23880:	ldr	x2, [x0, #32]
   23884:	mov	x0, #0xffff                	// #65535
   23888:	add	x0, x2, x0
   2388c:	cmp	x1, x0
   23890:	b.cs	2389c <__sanitizer_set_report_fd@@Base+0x96f0>  // b.hs, b.nlast
   23894:	mov	w0, #0x1                   	// #1
   23898:	b	238a0 <__sanitizer_set_report_fd@@Base+0x96f4>
   2389c:	mov	w0, #0x0                   	// #0
   238a0:	strb	w0, [sp, #47]
   238a4:	ldr	x0, [sp, #24]
   238a8:	ldr	x0, [x0]
   238ac:	str	x0, [sp, #32]
   238b0:	ldrb	w0, [sp, #47]
   238b4:	cmp	w0, #0x0
   238b8:	b.eq	238fc <__sanitizer_set_report_fd@@Base+0x9750>  // b.none
   238bc:	ldr	x0, [sp, #32]
   238c0:	ldr	w1, [x0, #8]
   238c4:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   238c8:	ldr	x0, [x0, #3768]
   238cc:	ldr	w0, [x0]
   238d0:	cmp	w1, w0
   238d4:	b.eq	238f4 <__sanitizer_set_report_fd@@Base+0x9748>  // b.none
   238d8:	ldr	x0, [sp, #32]
   238dc:	ldr	w1, [x0, #8]
   238e0:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   238e4:	ldr	x0, [x0, #3784]
   238e8:	ldr	w0, [x0]
   238ec:	cmp	w1, w0
   238f0:	b.ne	238fc <__sanitizer_set_report_fd@@Base+0x9750>  // b.any
   238f4:	mov	w0, #0x1                   	// #1
   238f8:	b	23900 <__sanitizer_set_report_fd@@Base+0x9754>
   238fc:	mov	w0, #0x0                   	// #0
   23900:	ldp	x19, x30, [sp], #48
   23904:	ret
   23908:	str	x30, [sp, #-112]!
   2390c:	str	x0, [sp, #24]
   23910:	str	x1, [sp, #16]
   23914:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   23918:	str	x0, [sp, #96]
   2391c:	ldr	x0, [sp, #16]
   23920:	str	x0, [sp, #88]
   23924:	ldr	x1, [sp, #96]
   23928:	mov	x0, x1
   2392c:	lsl	x0, x0, #2
   23930:	add	x0, x0, x1
   23934:	lsl	x0, x0, #1
   23938:	str	x0, [sp, #80]
   2393c:	ldr	x1, [sp, #88]
   23940:	ldr	x0, [sp, #80]
   23944:	cmp	x1, x0
   23948:	cset	w0, cs  // cs = hs, nlast
   2394c:	and	w0, w0, #0xff
   23950:	and	x0, x0, #0xff
   23954:	cmp	x0, #0x0
   23958:	b.eq	2397c <__sanitizer_set_report_fd@@Base+0x97d0>  // b.none
   2395c:	ldr	x4, [sp, #80]
   23960:	ldr	x3, [sp, #88]
   23964:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23968:	add	x2, x0, #0x730
   2396c:	mov	w1, #0x118                 	// #280
   23970:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23974:	add	x0, x0, #0x558
   23978:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2397c:	add	x0, sp, #0x30
   23980:	bl	6630 <pipe@plt>
   23984:	cmp	w0, #0x0
   23988:	cset	w0, ne  // ne = any
   2398c:	and	w0, w0, #0xff
   23990:	cmp	w0, #0x0
   23994:	b.eq	239a0 <__sanitizer_set_report_fd@@Base+0x97f4>  // b.none
   23998:	mov	w0, #0x0                   	// #0
   2399c:	b	23a54 <__sanitizer_set_report_fd@@Base+0x98a8>
   239a0:	ldr	w0, [sp, #52]
   239a4:	ldr	x1, [sp, #24]
   239a8:	ldr	x2, [sp, #16]
   239ac:	bl	1e3e4 <__sanitizer_set_report_fd@@Base+0x4238>
   239b0:	str	x0, [sp, #72]
   239b4:	add	x0, sp, #0x2c
   239b8:	mov	x1, x0
   239bc:	ldr	x0, [sp, #72]
   239c0:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   239c4:	and	w0, w0, #0xff
   239c8:	cmp	w0, #0x0
   239cc:	b.eq	23a2c <__sanitizer_set_report_fd@@Base+0x9880>  // b.none
   239d0:	mov	x0, #0xe                   	// #14
   239d4:	str	x0, [sp, #64]
   239d8:	ldr	w0, [sp, #44]
   239dc:	sxtw	x0, w0
   239e0:	str	x0, [sp, #56]
   239e4:	ldr	x1, [sp, #64]
   239e8:	ldr	x0, [sp, #56]
   239ec:	cmp	x1, x0
   239f0:	cset	w0, ne  // ne = any
   239f4:	and	w0, w0, #0xff
   239f8:	and	x0, x0, #0xff
   239fc:	cmp	x0, #0x0
   23a00:	b.eq	23a24 <__sanitizer_set_report_fd@@Base+0x9878>  // b.none
   23a04:	ldr	x4, [sp, #56]
   23a08:	ldr	x3, [sp, #64]
   23a0c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23a10:	add	x2, x0, #0x750
   23a14:	mov	w1, #0x121                 	// #289
   23a18:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23a1c:	add	x0, x0, #0x558
   23a20:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   23a24:	strb	wzr, [sp, #111]
   23a28:	b	23a40 <__sanitizer_set_report_fd@@Base+0x9894>
   23a2c:	ldr	x1, [sp, #72]
   23a30:	ldr	x0, [sp, #16]
   23a34:	cmp	x1, x0
   23a38:	cset	w0, eq  // eq = none
   23a3c:	strb	w0, [sp, #111]
   23a40:	ldr	w0, [sp, #48]
   23a44:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   23a48:	ldr	w0, [sp, #52]
   23a4c:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   23a50:	ldrb	w0, [sp, #111]
   23a54:	ldr	x30, [sp], #112
   23a58:	ret
   23a5c:	str	x30, [sp, #-32]!
   23a60:	str	x0, [sp, #24]
   23a64:	bl	26204 <OnPrint@@Base+0xbe4>
   23a68:	nop
   23a6c:	ldr	x30, [sp], #32
   23a70:	ret
   23a74:	sub	sp, sp, #0x140
   23a78:	str	x30, [sp]
   23a7c:	str	x0, [sp, #24]
   23a80:	str	x1, [sp, #16]
   23a84:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   23a88:	ldrb	w0, [x0, #215]
   23a8c:	eor	w0, w0, #0x1
   23a90:	and	w0, w0, #0xff
   23a94:	cmp	w0, #0x0
   23a98:	b.eq	23aa4 <__sanitizer_set_report_fd@@Base+0x98f8>  // b.none
   23a9c:	mov	w0, #0xffffffff            	// #-1
   23aa0:	b	23c40 <__sanitizer_set_report_fd@@Base+0x9a94>
   23aa4:	ldr	x0, [sp, #24]
   23aa8:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   23aac:	cmp	x0, #0xbd
   23ab0:	cset	w0, ls  // ls = plast
   23ab4:	and	w0, w0, #0xff
   23ab8:	and	x0, x0, #0xff
   23abc:	str	x0, [sp, #312]
   23ac0:	str	xzr, [sp, #304]
   23ac4:	ldr	x1, [sp, #312]
   23ac8:	ldr	x0, [sp, #304]
   23acc:	cmp	x1, x0
   23ad0:	cset	w0, eq  // eq = none
   23ad4:	and	w0, w0, #0xff
   23ad8:	and	x0, x0, #0xff
   23adc:	cmp	x0, #0x0
   23ae0:	b.eq	23b04 <__sanitizer_set_report_fd@@Base+0x9958>  // b.none
   23ae4:	ldr	x4, [sp, #304]
   23ae8:	ldr	x3, [sp, #312]
   23aec:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23af0:	add	x2, x0, #0x770
   23af4:	mov	w1, #0x13c                 	// #316
   23af8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23afc:	add	x0, x0, #0x558
   23b00:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   23b04:	bl	1ef9c <__sanitizer_set_report_fd@@Base+0x4df0>
   23b08:	add	x5, sp, #0x28
   23b0c:	ldr	x4, [sp, #24]
   23b10:	mov	x3, x0
   23b14:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23b18:	add	x2, x0, #0x7a8
   23b1c:	mov	x1, #0xc8                  	// #200
   23b20:	mov	x0, x5
   23b24:	bl	25b20 <OnPrint@@Base+0x500>
   23b28:	add	x0, sp, #0x28
   23b2c:	mov	w2, #0x1c0                 	// #448
   23b30:	mov	w1, #0x242                 	// #578
   23b34:	bl	65f0 <shm_open@plt>
   23b38:	str	w0, [sp, #300]
   23b3c:	ldrsw	x0, [sp, #300]
   23b40:	str	x0, [sp, #288]
   23b44:	str	xzr, [sp, #280]
   23b48:	ldr	x1, [sp, #288]
   23b4c:	ldr	x0, [sp, #280]
   23b50:	cmp	x1, x0
   23b54:	cset	w0, cc  // cc = lo, ul, last
   23b58:	and	w0, w0, #0xff
   23b5c:	and	x0, x0, #0xff
   23b60:	cmp	x0, #0x0
   23b64:	b.eq	23b88 <__sanitizer_set_report_fd@@Base+0x99dc>  // b.none
   23b68:	ldr	x4, [sp, #280]
   23b6c:	ldr	x3, [sp, #288]
   23b70:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23b74:	add	x2, x0, #0x7b8
   23b78:	mov	w1, #0x140                 	// #320
   23b7c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23b80:	add	x0, x0, #0x558
   23b84:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   23b88:	ldr	x1, [sp, #16]
   23b8c:	ldr	w0, [sp, #300]
   23b90:	bl	1e460 <__sanitizer_set_report_fd@@Base+0x42b4>
   23b94:	str	w0, [sp, #276]
   23b98:	str	xzr, [sp, #264]
   23b9c:	ldrsw	x0, [sp, #276]
   23ba0:	str	x0, [sp, #256]
   23ba4:	ldr	x1, [sp, #264]
   23ba8:	ldr	x0, [sp, #256]
   23bac:	cmp	x1, x0
   23bb0:	cset	w0, ne  // ne = any
   23bb4:	and	w0, w0, #0xff
   23bb8:	and	x0, x0, #0xff
   23bbc:	cmp	x0, #0x0
   23bc0:	b.eq	23be4 <__sanitizer_set_report_fd@@Base+0x9a38>  // b.none
   23bc4:	ldr	x4, [sp, #256]
   23bc8:	ldr	x3, [sp, #264]
   23bcc:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23bd0:	add	x2, x0, #0x7c8
   23bd4:	mov	w1, #0x142                 	// #322
   23bd8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23bdc:	add	x0, x0, #0x558
   23be0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   23be4:	add	x0, sp, #0x28
   23be8:	bl	69a0 <shm_unlink@plt>
   23bec:	str	w0, [sp, #276]
   23bf0:	str	xzr, [sp, #248]
   23bf4:	ldrsw	x0, [sp, #276]
   23bf8:	str	x0, [sp, #240]
   23bfc:	ldr	x1, [sp, #248]
   23c00:	ldr	x0, [sp, #240]
   23c04:	cmp	x1, x0
   23c08:	cset	w0, ne  // ne = any
   23c0c:	and	w0, w0, #0xff
   23c10:	and	x0, x0, #0xff
   23c14:	cmp	x0, #0x0
   23c18:	b.eq	23c3c <__sanitizer_set_report_fd@@Base+0x9a90>  // b.none
   23c1c:	ldr	x4, [sp, #240]
   23c20:	ldr	x3, [sp, #248]
   23c24:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23c28:	add	x2, x0, #0x7c8
   23c2c:	mov	w1, #0x144                 	// #324
   23c30:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23c34:	add	x0, x0, #0x558
   23c38:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   23c3c:	ldr	w0, [sp, #300]
   23c40:	ldr	x30, [sp]
   23c44:	add	sp, sp, #0x140
   23c48:	ret
   23c4c:	stp	x19, x30, [sp, #-80]!
   23c50:	str	x0, [sp, #40]
   23c54:	str	x1, [sp, #32]
   23c58:	str	x2, [sp, #24]
   23c5c:	ldr	x0, [sp, #24]
   23c60:	cmp	x0, #0x0
   23c64:	b.eq	23c78 <__sanitizer_set_report_fd@@Base+0x9acc>  // b.none
   23c68:	ldr	x1, [sp, #32]
   23c6c:	ldr	x0, [sp, #24]
   23c70:	bl	23a74 <__sanitizer_set_report_fd@@Base+0x98c8>
   23c74:	b	23c7c <__sanitizer_set_report_fd@@Base+0x9ad0>
   23c78:	mov	w0, #0xffffffff            	// #-1
   23c7c:	str	w0, [sp, #72]
   23c80:	mov	w0, #0x4012                	// #16402
   23c84:	str	w0, [sp, #76]
   23c88:	ldr	w0, [sp, #72]
   23c8c:	cmn	w0, #0x1
   23c90:	b.ne	23ca0 <__sanitizer_set_report_fd@@Base+0x9af4>  // b.any
   23c94:	ldr	w0, [sp, #76]
   23c98:	orr	w0, w0, #0x20
   23c9c:	str	w0, [sp, #76]
   23ca0:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   23ca4:	str	x0, [sp, #64]
   23ca8:	ldr	x0, [sp, #64]
   23cac:	neg	x1, x0
   23cb0:	ldr	x0, [sp, #40]
   23cb4:	and	x0, x1, x0
   23cb8:	mov	x19, x0
   23cbc:	ldr	x1, [sp, #64]
   23cc0:	ldr	x0, [sp, #32]
   23cc4:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   23cc8:	mov	x1, x0
   23ccc:	ldr	w0, [sp, #76]
   23cd0:	mov	x5, #0x0                   	// #0
   23cd4:	ldr	w4, [sp, #72]
   23cd8:	mov	w3, w0
   23cdc:	mov	w2, #0x3                   	// #3
   23ce0:	mov	x0, x19
   23ce4:	bl	1e21c <__sanitizer_set_report_fd@@Base+0x4070>
   23ce8:	str	x0, [sp, #56]
   23cec:	add	x0, sp, #0x34
   23cf0:	mov	x1, x0
   23cf4:	ldr	x0, [sp, #56]
   23cf8:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   23cfc:	and	w0, w0, #0xff
   23d00:	cmp	w0, #0x0
   23d04:	b.eq	23d40 <__sanitizer_set_report_fd@@Base+0x9b94>  // b.none
   23d08:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   23d0c:	ldr	x0, [x0, #4024]
   23d10:	ldr	x0, [x0]
   23d14:	ldr	w1, [sp, #52]
   23d18:	mov	w5, w1
   23d1c:	ldr	x4, [sp, #40]
   23d20:	ldr	x3, [sp, #32]
   23d24:	ldr	x2, [sp, #32]
   23d28:	mov	x1, x0
   23d2c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23d30:	add	x0, x0, #0x7e0
   23d34:	bl	25a74 <OnPrint@@Base+0x454>
   23d38:	mov	w0, #0x0                   	// #0
   23d3c:	b	23d4c <__sanitizer_set_report_fd@@Base+0x9ba0>
   23d40:	ldr	x0, [sp, #32]
   23d44:	bl	14298 <__sancov_default_options@@Base+0x3eec>
   23d48:	mov	w0, #0x1                   	// #1
   23d4c:	ldp	x19, x30, [sp], #80
   23d50:	ret
   23d54:	str	x30, [sp, #-48]!
   23d58:	str	x0, [sp, #40]
   23d5c:	str	x1, [sp, #32]
   23d60:	str	x2, [sp, #24]
   23d64:	str	x3, [sp, #16]
   23d68:	ldr	x0, [sp, #16]
   23d6c:	cmp	x0, #0x0
   23d70:	b.eq	23d88 <__sanitizer_set_report_fd@@Base+0x9bdc>  // b.none
   23d74:	mov	x2, #0x0                   	// #0
   23d78:	ldr	x1, [sp, #32]
   23d7c:	ldr	x0, [sp, #16]
   23d80:	bl	23f58 <__sanitizer_set_report_fd@@Base+0x9dac>
   23d84:	b	23d90 <__sanitizer_set_report_fd@@Base+0x9be4>
   23d88:	ldr	x0, [sp, #32]
   23d8c:	bl	23fd4 <__sanitizer_set_report_fd@@Base+0x9e28>
   23d90:	ldr	x1, [sp, #40]
   23d94:	str	x0, [x1]
   23d98:	ldr	x0, [sp, #40]
   23d9c:	ldr	x1, [sp, #32]
   23da0:	str	x1, [x0, #8]
   23da4:	ldr	x0, [sp, #40]
   23da8:	ldr	x1, [sp, #24]
   23dac:	str	x1, [x0, #16]
   23db0:	ldr	x0, [sp, #40]
   23db4:	ldr	x0, [x0]
   23db8:	ldr	x30, [sp], #48
   23dbc:	ret
   23dc0:	str	x30, [sp, #-48]!
   23dc4:	str	x0, [sp, #40]
   23dc8:	str	x1, [sp, #32]
   23dcc:	str	x2, [sp, #24]
   23dd0:	ldr	x1, [sp, #24]
   23dd4:	ldr	x0, [sp, #32]
   23dd8:	bl	2267c <__sanitizer_set_report_fd@@Base+0x84d0>
   23ddc:	ldr	x30, [sp], #48
   23de0:	ret
   23de4:	str	x30, [sp, #-48]!
   23de8:	str	x0, [sp, #40]
   23dec:	str	x1, [sp, #32]
   23df0:	str	x2, [sp, #24]
   23df4:	ldr	x1, [sp, #24]
   23df8:	ldr	x0, [sp, #32]
   23dfc:	bl	22658 <__sanitizer_set_report_fd@@Base+0x84ac>
   23e00:	ldr	x30, [sp], #48
   23e04:	ret
   23e08:	str	x30, [sp, #-80]!
   23e0c:	str	x0, [sp, #40]
   23e10:	str	x1, [sp, #32]
   23e14:	str	x2, [sp, #24]
   23e18:	ldr	x0, [sp, #24]
   23e1c:	str	x0, [sp, #72]
   23e20:	ldr	x0, [sp, #40]
   23e24:	ldr	x0, [x0, #8]
   23e28:	str	x0, [sp, #64]
   23e2c:	ldr	x1, [sp, #72]
   23e30:	ldr	x0, [sp, #64]
   23e34:	cmp	x1, x0
   23e38:	cset	w0, hi  // hi = pmore
   23e3c:	and	w0, w0, #0xff
   23e40:	and	x0, x0, #0xff
   23e44:	cmp	x0, #0x0
   23e48:	b.eq	23e6c <__sanitizer_set_report_fd@@Base+0x9cc0>  // b.none
   23e4c:	ldr	x4, [sp, #64]
   23e50:	ldr	x3, [sp, #72]
   23e54:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23e58:	add	x2, x0, #0x830
   23e5c:	mov	w1, #0x175                 	// #373
   23e60:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23e64:	add	x0, x0, #0x558
   23e68:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   23e6c:	ldr	x0, [sp, #40]
   23e70:	ldr	x0, [x0]
   23e74:	mov	x1, x0
   23e78:	ldr	x0, [sp, #32]
   23e7c:	cmp	x0, x1
   23e80:	b.ne	23ebc <__sanitizer_set_report_fd@@Base+0x9d10>  // b.any
   23e84:	ldr	x0, [sp, #40]
   23e88:	ldr	x0, [x0, #8]
   23e8c:	ldr	x1, [sp, #24]
   23e90:	cmp	x1, x0
   23e94:	b.eq	23eac <__sanitizer_set_report_fd@@Base+0x9d00>  // b.none
   23e98:	ldr	x1, [sp, #32]
   23e9c:	ldr	x0, [sp, #24]
   23ea0:	add	x0, x1, x0
   23ea4:	mov	x1, x0
   23ea8:	b	23eb0 <__sanitizer_set_report_fd@@Base+0x9d04>
   23eac:	mov	x1, #0x0                   	// #0
   23eb0:	ldr	x0, [sp, #40]
   23eb4:	str	x1, [x0]
   23eb8:	b	23f28 <__sanitizer_set_report_fd@@Base+0x9d7c>
   23ebc:	ldr	x1, [sp, #32]
   23ec0:	ldr	x0, [sp, #24]
   23ec4:	add	x0, x1, x0
   23ec8:	str	x0, [sp, #56]
   23ecc:	ldr	x0, [sp, #40]
   23ed0:	ldr	x0, [x0]
   23ed4:	mov	x1, x0
   23ed8:	ldr	x0, [sp, #40]
   23edc:	ldr	x0, [x0, #8]
   23ee0:	add	x0, x1, x0
   23ee4:	str	x0, [sp, #48]
   23ee8:	ldr	x1, [sp, #56]
   23eec:	ldr	x0, [sp, #48]
   23ef0:	cmp	x1, x0
   23ef4:	cset	w0, ne  // ne = any
   23ef8:	and	w0, w0, #0xff
   23efc:	and	x0, x0, #0xff
   23f00:	cmp	x0, #0x0
   23f04:	b.eq	23f28 <__sanitizer_set_report_fd@@Base+0x9d7c>  // b.none
   23f08:	ldr	x4, [sp, #48]
   23f0c:	ldr	x3, [sp, #56]
   23f10:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23f14:	add	x2, x0, #0x848
   23f18:	mov	w1, #0x17a                 	// #378
   23f1c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   23f20:	add	x0, x0, #0x558
   23f24:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   23f28:	ldr	x0, [sp, #40]
   23f2c:	ldr	x1, [x0, #8]
   23f30:	ldr	x0, [sp, #24]
   23f34:	sub	x1, x1, x0
   23f38:	ldr	x0, [sp, #40]
   23f3c:	str	x1, [x0, #8]
   23f40:	ldr	x0, [sp, #32]
   23f44:	ldr	x1, [sp, #24]
   23f48:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   23f4c:	nop
   23f50:	ldr	x30, [sp], #80
   23f54:	ret
   23f58:	str	x30, [sp, #-64]!
   23f5c:	str	x0, [sp, #40]
   23f60:	str	x1, [sp, #32]
   23f64:	str	x2, [sp, #24]
   23f68:	ldr	x0, [sp, #24]
   23f6c:	cmp	x0, #0x0
   23f70:	b.eq	23f84 <__sanitizer_set_report_fd@@Base+0x9dd8>  // b.none
   23f74:	ldr	x1, [sp, #32]
   23f78:	ldr	x0, [sp, #24]
   23f7c:	bl	23a74 <__sanitizer_set_report_fd@@Base+0x98c8>
   23f80:	b	23f88 <__sanitizer_set_report_fd@@Base+0x9ddc>
   23f84:	mov	w0, #0xffffffff            	// #-1
   23f88:	str	w0, [sp, #56]
   23f8c:	mov	w0, #0x4012                	// #16402
   23f90:	str	w0, [sp, #60]
   23f94:	ldr	w0, [sp, #56]
   23f98:	cmn	w0, #0x1
   23f9c:	b.ne	23fac <__sanitizer_set_report_fd@@Base+0x9e00>  // b.any
   23fa0:	ldr	w0, [sp, #60]
   23fa4:	orr	w0, w0, #0x20
   23fa8:	str	w0, [sp, #60]
   23fac:	ldr	x0, [sp, #40]
   23fb0:	ldr	w1, [sp, #60]
   23fb4:	mov	x5, #0x0                   	// #0
   23fb8:	ldr	w4, [sp, #56]
   23fbc:	mov	w3, w1
   23fc0:	mov	w2, #0x0                   	// #0
   23fc4:	ldr	x1, [sp, #32]
   23fc8:	bl	1e21c <__sanitizer_set_report_fd@@Base+0x4070>
   23fcc:	ldr	x30, [sp], #64
   23fd0:	ret
   23fd4:	str	x30, [sp, #-48]!
   23fd8:	str	x0, [sp, #24]
   23fdc:	mov	w0, #0x4022                	// #16418
   23fe0:	str	w0, [sp, #44]
   23fe4:	ldr	w0, [sp, #44]
   23fe8:	mov	x5, #0x0                   	// #0
   23fec:	mov	w4, #0xffffffff            	// #-1
   23ff0:	mov	w3, w0
   23ff4:	mov	w2, #0x0                   	// #0
   23ff8:	ldr	x1, [sp, #24]
   23ffc:	mov	x0, #0x0                   	// #0
   24000:	bl	1e21c <__sanitizer_set_report_fd@@Base+0x4070>
   24004:	ldr	x30, [sp], #48
   24008:	ret
   2400c:	str	x30, [sp, #-48]!
   24010:	str	x0, [sp, #40]
   24014:	str	x1, [sp, #32]
   24018:	str	x2, [sp, #24]
   2401c:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   24020:	ldr	x0, [x0, #3832]
   24024:	cmp	x0, #0x0
   24028:	b.eq	24040 <__sanitizer_set_report_fd@@Base+0x9e94>  // b.none
   2402c:	ldr	x2, [sp, #24]
   24030:	ldr	x1, [sp, #32]
   24034:	ldr	x0, [sp, #40]
   24038:	bl	6710 <real_pthread_attr_getstack@plt>
   2403c:	b	24054 <__sanitizer_set_report_fd@@Base+0x9ea8>
   24040:	ldr	x2, [sp, #24]
   24044:	ldr	x1, [sp, #32]
   24048:	ldr	x0, [sp, #40]
   2404c:	bl	6950 <pthread_attr_getstack@plt>
   24050:	nop
   24054:	ldr	x30, [sp], #48
   24058:	ret
   2405c:	str	x30, [sp, #-80]!
   24060:	str	x0, [sp, #24]
   24064:	ldr	x0, [sp, #24]
   24068:	str	x0, [sp, #72]
   2406c:	str	xzr, [sp, #48]
   24070:	str	xzr, [sp, #40]
   24074:	add	x1, sp, #0x28
   24078:	add	x0, sp, #0x30
   2407c:	mov	x2, x1
   24080:	mov	x1, x0
   24084:	ldr	x0, [sp, #72]
   24088:	bl	2400c <__sanitizer_set_report_fd@@Base+0x9e60>
   2408c:	ldr	x0, [sp, #48]
   24090:	cmp	x0, #0x0
   24094:	b.eq	240b4 <__sanitizer_set_report_fd@@Base+0x9f08>  // b.none
   24098:	ldr	x1, [sp, #48]
   2409c:	ldr	x0, [sp, #40]
   240a0:	add	x0, x1, x0
   240a4:	cmp	x0, #0x0
   240a8:	b.eq	240b4 <__sanitizer_set_report_fd@@Base+0x9f08>  // b.none
   240ac:	mov	w0, #0x1                   	// #1
   240b0:	b	240b8 <__sanitizer_set_report_fd@@Base+0x9f0c>
   240b4:	mov	w0, #0x0                   	// #0
   240b8:	strb	w0, [sp, #71]
   240bc:	bl	21218 <__sanitizer_set_report_fd@@Base+0x706c>
   240c0:	add	x0, x0, #0x20, lsl #12
   240c4:	str	x0, [sp, #56]
   240c8:	ldr	x0, [sp, #40]
   240cc:	ldr	x1, [sp, #56]
   240d0:	cmp	x1, x0
   240d4:	b.ls	2415c <__sanitizer_set_report_fd@@Base+0x9fb0>  // b.plast
   240d8:	ldrb	w0, [sp, #71]
   240dc:	eor	w0, w0, #0x1
   240e0:	and	w0, w0, #0xff
   240e4:	cmp	w0, #0x0
   240e8:	b.eq	24138 <__sanitizer_set_report_fd@@Base+0x9f8c>  // b.none
   240ec:	ldr	x0, [sp, #40]
   240f0:	cmp	x0, #0x0
   240f4:	b.eq	2415c <__sanitizer_set_report_fd@@Base+0x9fb0>  // b.none
   240f8:	bl	9984 <__ubsan_default_options@@Base+0x320>
   240fc:	cmp	w0, #0x0
   24100:	cset	w0, ne  // ne = any
   24104:	and	w0, w0, #0xff
   24108:	cmp	w0, #0x0
   2410c:	b.eq	24128 <__sanitizer_set_report_fd@@Base+0x9f7c>  // b.none
   24110:	ldr	x0, [sp, #40]
   24114:	ldr	x2, [sp, #56]
   24118:	mov	x1, x0
   2411c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   24120:	add	x0, x0, #0x888
   24124:	bl	259c8 <OnPrint@@Base+0x3a8>
   24128:	ldr	x1, [sp, #56]
   2412c:	ldr	x0, [sp, #72]
   24130:	bl	6960 <pthread_attr_setstacksize@plt>
   24134:	b	2415c <__sanitizer_set_report_fd@@Base+0x9fb0>
   24138:	ldr	x0, [sp, #40]
   2413c:	ldr	x2, [sp, #56]
   24140:	mov	x1, x0
   24144:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   24148:	add	x0, x0, #0x8b8
   2414c:	bl	259c8 <OnPrint@@Base+0x3a8>
   24150:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   24154:	add	x0, x0, #0x8f8
   24158:	bl	259c8 <OnPrint@@Base+0x3a8>
   2415c:	nop
   24160:	ldr	x30, [sp], #80
   24164:	ret
   24168:	str	x30, [sp, #-32]!
   2416c:	str	x0, [sp, #24]
   24170:	ldr	x0, [sp, #24]
   24174:	ldr	x0, [x0]
   24178:	ldr	w0, [x0]
   2417c:	cmn	w0, #0x1
   24180:	b.eq	24194 <__sanitizer_set_report_fd@@Base+0x9fe8>  // b.none
   24184:	ldr	x0, [sp, #24]
   24188:	ldr	x0, [x0]
   2418c:	ldr	w0, [x0]
   24190:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   24194:	ldr	x0, [sp, #24]
   24198:	ldr	x0, [x0, #8]
   2419c:	ldr	w0, [x0]
   241a0:	cmn	w0, #0x1
   241a4:	b.eq	241b8 <__sanitizer_set_report_fd@@Base+0xa00c>  // b.none
   241a8:	ldr	x0, [sp, #24]
   241ac:	ldr	x0, [x0, #8]
   241b0:	ldr	w0, [x0]
   241b4:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   241b8:	ldr	x0, [sp, #24]
   241bc:	ldr	x0, [x0, #16]
   241c0:	ldr	w0, [x0]
   241c4:	cmn	w0, #0x1
   241c8:	b.eq	241dc <__sanitizer_set_report_fd@@Base+0xa030>  // b.none
   241cc:	ldr	x0, [sp, #24]
   241d0:	ldr	x0, [x0, #16]
   241d4:	ldr	w0, [x0]
   241d8:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   241dc:	nop
   241e0:	ldr	x30, [sp], #32
   241e4:	ret
   241e8:	stp	x19, x30, [sp, #-144]!
   241ec:	str	x0, [sp, #72]
   241f0:	str	x1, [sp, #64]
   241f4:	str	w2, [sp, #60]
   241f8:	str	w3, [sp, #56]
   241fc:	str	w4, [sp, #52]
   24200:	add	x0, sp, #0x3c
   24204:	str	x0, [sp, #112]
   24208:	add	x0, sp, #0x38
   2420c:	str	x0, [sp, #120]
   24210:	add	x0, sp, #0x34
   24214:	str	x0, [sp, #128]
   24218:	add	x2, sp, #0x10
   2421c:	add	x3, sp, #0x70
   24220:	ldp	x0, x1, [x3]
   24224:	stp	x0, x1, [x2]
   24228:	ldr	x0, [x3, #16]
   2422c:	str	x0, [x2, #16]
   24230:	add	x0, sp, #0x10
   24234:	add	x1, sp, #0x58
   24238:	mov	x8, x1
   2423c:	bl	2448c <__sanitizer_set_report_fd@@Base+0xa2e0>
   24240:	bl	1f0ac <__sanitizer_set_report_fd@@Base+0x4f00>
   24244:	str	w0, [sp, #136]
   24248:	ldr	w0, [sp, #136]
   2424c:	cmp	w0, #0x0
   24250:	b.ge	24288 <__sanitizer_set_report_fd@@Base+0xa0dc>  // b.tcont
   24254:	ldrsw	x0, [sp, #136]
   24258:	add	x1, sp, #0x54
   2425c:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   24260:	and	w0, w0, #0xff
   24264:	cmp	w0, #0x0
   24268:	b.eq	24280 <__sanitizer_set_report_fd@@Base+0xa0d4>  // b.none
   2426c:	ldr	w0, [sp, #84]
   24270:	mov	w1, w0
   24274:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   24278:	add	x0, x0, #0x928
   2427c:	bl	25a74 <OnPrint@@Base+0x454>
   24280:	ldr	w19, [sp, #136]
   24284:	b	24354 <__sanitizer_set_report_fd@@Base+0xa1a8>
   24288:	ldr	w0, [sp, #136]
   2428c:	cmp	w0, #0x0
   24290:	b.ne	24350 <__sanitizer_set_report_fd@@Base+0xa1a4>  // b.any
   24294:	ldr	w0, [sp, #60]
   24298:	cmn	w0, #0x1
   2429c:	b.eq	242bc <__sanitizer_set_report_fd@@Base+0xa110>  // b.none
   242a0:	mov	w0, #0x0                   	// #0
   242a4:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   242a8:	ldr	w0, [sp, #60]
   242ac:	mov	w1, #0x0                   	// #0
   242b0:	bl	1e5a4 <__sanitizer_set_report_fd@@Base+0x43f8>
   242b4:	ldr	w0, [sp, #60]
   242b8:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   242bc:	ldr	w0, [sp, #56]
   242c0:	cmn	w0, #0x1
   242c4:	b.eq	242e4 <__sanitizer_set_report_fd@@Base+0xa138>  // b.none
   242c8:	mov	w0, #0x1                   	// #1
   242cc:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   242d0:	ldr	w0, [sp, #56]
   242d4:	mov	w1, #0x1                   	// #1
   242d8:	bl	1e5a4 <__sanitizer_set_report_fd@@Base+0x43f8>
   242dc:	ldr	w0, [sp, #56]
   242e0:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   242e4:	ldr	w0, [sp, #52]
   242e8:	cmn	w0, #0x1
   242ec:	b.eq	2430c <__sanitizer_set_report_fd@@Base+0xa160>  // b.none
   242f0:	mov	w0, #0x2                   	// #2
   242f4:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   242f8:	ldr	w0, [sp, #52]
   242fc:	mov	w1, #0x2                   	// #2
   24300:	bl	1e5a4 <__sanitizer_set_report_fd@@Base+0x43f8>
   24304:	ldr	w0, [sp, #52]
   24308:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   2430c:	mov	w0, #0x4                   	// #4
   24310:	bl	6b40 <sysconf@plt>
   24314:	str	w0, [sp, #140]
   24318:	ldr	w0, [sp, #140]
   2431c:	cmp	w0, #0x2
   24320:	b.le	2433c <__sanitizer_set_report_fd@@Base+0xa190>
   24324:	ldr	w0, [sp, #140]
   24328:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   2432c:	ldr	w0, [sp, #140]
   24330:	sub	w0, w0, #0x1
   24334:	str	w0, [sp, #140]
   24338:	b	24318 <__sanitizer_set_report_fd@@Base+0xa16c>
   2433c:	ldr	x1, [sp, #64]
   24340:	ldr	x0, [sp, #72]
   24344:	bl	6620 <execv@plt>
   24348:	mov	w0, #0x1                   	// #1
   2434c:	bl	1e67c <__sanitizer_set_report_fd@@Base+0x44d0>
   24350:	ldr	w19, [sp, #136]
   24354:	add	x0, sp, #0x58
   24358:	bl	244d4 <__sanitizer_set_report_fd@@Base+0xa328>
   2435c:	mov	w0, w19
   24360:	ldp	x19, x30, [sp], #144
   24364:	ret
   24368:	str	x30, [sp, #-48]!
   2436c:	str	w0, [sp, #28]
   24370:	add	x0, sp, #0x24
   24374:	mov	w2, #0x1                   	// #1
   24378:	mov	x1, x0
   2437c:	ldr	w0, [sp, #28]
   24380:	bl	1ef60 <__sanitizer_set_report_fd@@Base+0x4db4>
   24384:	str	x0, [sp, #40]
   24388:	add	x0, sp, #0x20
   2438c:	mov	x1, x0
   24390:	ldr	x0, [sp, #40]
   24394:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   24398:	and	w0, w0, #0xff
   2439c:	cmp	w0, #0x0
   243a0:	b.eq	243d8 <__sanitizer_set_report_fd@@Base+0xa22c>  // b.none
   243a4:	bl	9984 <__ubsan_default_options@@Base+0x320>
   243a8:	cmp	w0, #0x0
   243ac:	cset	w0, ne  // ne = any
   243b0:	and	w0, w0, #0xff
   243b4:	cmp	w0, #0x0
   243b8:	b.eq	243d0 <__sanitizer_set_report_fd@@Base+0xa224>  // b.none
   243bc:	ldr	w0, [sp, #32]
   243c0:	mov	w1, w0
   243c4:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   243c8:	add	x0, x0, #0x950
   243cc:	bl	25a74 <OnPrint@@Base+0x454>
   243d0:	mov	w0, #0x0                   	// #0
   243d4:	b	243e8 <__sanitizer_set_report_fd@@Base+0xa23c>
   243d8:	ldr	x0, [sp, #40]
   243dc:	cmp	x0, #0x0
   243e0:	cset	w0, eq  // eq = none
   243e4:	and	w0, w0, #0xff
   243e8:	ldr	x30, [sp], #48
   243ec:	ret
   243f0:	str	x30, [sp, #-48]!
   243f4:	str	w0, [sp, #28]
   243f8:	add	x0, sp, #0x24
   243fc:	mov	w2, #0x0                   	// #0
   24400:	mov	x1, x0
   24404:	ldr	w0, [sp, #28]
   24408:	bl	1ef60 <__sanitizer_set_report_fd@@Base+0x4db4>
   2440c:	str	x0, [sp, #40]
   24410:	add	x0, sp, #0x20
   24414:	mov	x1, x0
   24418:	ldr	x0, [sp, #40]
   2441c:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   24420:	and	w0, w0, #0xff
   24424:	cmp	w0, #0x0
   24428:	b.eq	24460 <__sanitizer_set_report_fd@@Base+0xa2b4>  // b.none
   2442c:	bl	9984 <__ubsan_default_options@@Base+0x320>
   24430:	cmp	w0, #0x0
   24434:	cset	w0, ne  // ne = any
   24438:	and	w0, w0, #0xff
   2443c:	cmp	w0, #0x0
   24440:	b.eq	24458 <__sanitizer_set_report_fd@@Base+0xa2ac>  // b.none
   24444:	ldr	w0, [sp, #32]
   24448:	mov	w1, w0
   2444c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   24450:	add	x0, x0, #0x950
   24454:	bl	25a74 <OnPrint@@Base+0x454>
   24458:	mov	w0, #0xffffffff            	// #-1
   2445c:	b	24464 <__sanitizer_set_report_fd@@Base+0xa2b8>
   24460:	ldr	w0, [sp, #36]
   24464:	ldr	x30, [sp], #48
   24468:	ret
   2446c:	sub	sp, sp, #0x10
   24470:	str	w0, [sp, #12]
   24474:	ldr	w0, [sp, #12]
   24478:	cmp	w0, #0x1
   2447c:	cset	w0, eq  // eq = none
   24480:	and	w0, w0, #0xff
   24484:	add	sp, sp, #0x10
   24488:	ret
   2448c:	stp	x19, x20, [sp, #-64]!
   24490:	str	x30, [sp, #16]
   24494:	mov	x19, x8
   24498:	mov	x20, x0
   2449c:	add	x2, sp, #0x20
   244a0:	mov	x3, x20
   244a4:	ldp	x0, x1, [x3]
   244a8:	stp	x0, x1, [x2]
   244ac:	ldr	x0, [x3, #16]
   244b0:	str	x0, [x2, #16]
   244b4:	add	x0, sp, #0x20
   244b8:	mov	x1, x0
   244bc:	mov	x0, x19
   244c0:	bl	244f0 <__sanitizer_set_report_fd@@Base+0xa344>
   244c4:	mov	x0, x19
   244c8:	ldr	x30, [sp, #16]
   244cc:	ldp	x19, x20, [sp], #64
   244d0:	ret
   244d4:	str	x30, [sp, #-32]!
   244d8:	str	x0, [sp, #24]
   244dc:	ldr	x0, [sp, #24]
   244e0:	bl	24168 <__sanitizer_set_report_fd@@Base+0x9fbc>
   244e4:	nop
   244e8:	ldr	x30, [sp], #32
   244ec:	ret
   244f0:	str	x19, [sp, #-32]!
   244f4:	str	x0, [sp, #24]
   244f8:	mov	x19, x1
   244fc:	ldr	x0, [sp, #24]
   24500:	mov	x2, x0
   24504:	mov	x3, x19
   24508:	ldp	x0, x1, [x3]
   2450c:	stp	x0, x1, [x2]
   24510:	ldr	x0, [x3, #16]
   24514:	str	x0, [x2, #16]
   24518:	nop
   2451c:	ldr	x19, [sp], #32
   24520:	ret
   24524:	sub	sp, sp, #0x20
   24528:	str	x0, [sp, #24]
   2452c:	str	x1, [sp, #16]
   24530:	strb	w2, [sp, #15]
   24534:	ldr	x0, [sp, #24]
   24538:	ldr	x0, [x0]
   2453c:	ldr	x1, [sp, #16]
   24540:	cmp	x1, x0
   24544:	b.ls	2456c <__sanitizer_set_report_fd@@Base+0xa3c0>  // b.plast
   24548:	ldr	x0, [sp, #24]
   2454c:	ldr	x0, [x0]
   24550:	ldrb	w1, [sp, #15]
   24554:	strb	w1, [x0]
   24558:	ldr	x0, [sp, #24]
   2455c:	ldr	x0, [x0]
   24560:	add	x1, x0, #0x1
   24564:	ldr	x0, [sp, #24]
   24568:	str	x1, [x0]
   2456c:	mov	w0, #0x1                   	// #1
   24570:	add	sp, sp, #0x20
   24574:	ret
   24578:	sub	sp, sp, #0x140
   2457c:	str	x30, [sp]
   24580:	str	x0, [sp, #40]
   24584:	str	x1, [sp, #32]
   24588:	str	x2, [sp, #24]
   2458c:	strb	w3, [sp, #23]
   24590:	strb	w4, [sp, #22]
   24594:	strb	w5, [sp, #21]
   24598:	strb	w6, [sp, #20]
   2459c:	strb	w7, [sp, #19]
   245a0:	mov	x0, #0x1e                  	// #30
   245a4:	str	x0, [sp, #304]
   245a8:	ldrb	w0, [sp, #23]
   245ac:	cmp	w0, #0xa
   245b0:	cset	w0, ne  // ne = any
   245b4:	and	w0, w0, #0xff
   245b8:	and	x0, x0, #0xff
   245bc:	cmp	x0, #0x0
   245c0:	b.eq	245e8 <__sanitizer_set_report_fd@@Base+0xa43c>  // b.none
   245c4:	ldrb	w0, [sp, #23]
   245c8:	cmp	w0, #0x10
   245cc:	cset	w0, ne  // ne = any
   245d0:	and	w0, w0, #0xff
   245d4:	and	x0, x0, #0xff
   245d8:	cmp	x0, #0x0
   245dc:	b.eq	245e8 <__sanitizer_set_report_fd@@Base+0xa43c>  // b.none
   245e0:	mov	w0, #0x1                   	// #1
   245e4:	b	245ec <__sanitizer_set_report_fd@@Base+0xa440>
   245e8:	mov	w0, #0x0                   	// #0
   245ec:	and	x0, x0, #0xff
   245f0:	cmp	x0, #0x0
   245f4:	b.eq	24608 <__sanitizer_set_report_fd@@Base+0xa45c>  // b.none
   245f8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   245fc:	add	x0, x0, #0x9d8
   24600:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   24604:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   24608:	ldrb	w0, [sp, #23]
   2460c:	cmp	w0, #0xa
   24610:	cset	w0, ne  // ne = any
   24614:	and	w0, w0, #0xff
   24618:	and	x0, x0, #0xff
   2461c:	cmp	x0, #0x0
   24620:	b.eq	24638 <__sanitizer_set_report_fd@@Base+0xa48c>  // b.none
   24624:	ldrb	w0, [sp, #20]
   24628:	cmp	x0, #0x0
   2462c:	b.eq	24638 <__sanitizer_set_report_fd@@Base+0xa48c>  // b.none
   24630:	mov	w0, #0x1                   	// #1
   24634:	b	2463c <__sanitizer_set_report_fd@@Base+0xa490>
   24638:	mov	w0, #0x0                   	// #0
   2463c:	and	x0, x0, #0xff
   24640:	cmp	x0, #0x0
   24644:	b.eq	24658 <__sanitizer_set_report_fd@@Base+0xa4ac>  // b.none
   24648:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   2464c:	add	x0, x0, #0x9f8
   24650:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   24654:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   24658:	ldr	x0, [sp, #24]
   2465c:	cmp	x0, #0x0
   24660:	cset	w0, eq  // eq = none
   24664:	and	w0, w0, #0xff
   24668:	and	x0, x0, #0xff
   2466c:	cmp	x0, #0x0
   24670:	b.eq	24688 <__sanitizer_set_report_fd@@Base+0xa4dc>  // b.none
   24674:	ldrb	w0, [sp, #20]
   24678:	cmp	x0, #0x0
   2467c:	b.eq	24688 <__sanitizer_set_report_fd@@Base+0xa4dc>  // b.none
   24680:	mov	w0, #0x1                   	// #1
   24684:	b	2468c <__sanitizer_set_report_fd@@Base+0xa4e0>
   24688:	mov	w0, #0x0                   	// #0
   2468c:	and	x0, x0, #0xff
   24690:	cmp	x0, #0x0
   24694:	b.eq	246a8 <__sanitizer_set_report_fd@@Base+0xa4fc>  // b.none
   24698:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   2469c:	add	x0, x0, #0xa10
   246a0:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   246a4:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   246a8:	ldrb	w0, [sp, #22]
   246ac:	cmp	w0, #0x1d
   246b0:	cset	w0, hi  // hi = pmore
   246b4:	and	w0, w0, #0xff
   246b8:	and	x0, x0, #0xff
   246bc:	cmp	x0, #0x0
   246c0:	b.eq	246d4 <__sanitizer_set_report_fd@@Base+0xa528>  // b.none
   246c4:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   246c8:	add	x0, x0, #0xa30
   246cc:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   246d0:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   246d4:	str	wzr, [sp, #316]
   246d8:	ldrb	w0, [sp, #20]
   246dc:	cmp	w0, #0x0
   246e0:	b.eq	246fc <__sanitizer_set_report_fd@@Base+0xa550>  // b.none
   246e4:	ldrb	w0, [sp, #22]
   246e8:	cmp	w0, #0x0
   246ec:	b.eq	246fc <__sanitizer_set_report_fd@@Base+0xa550>  // b.none
   246f0:	ldrb	w0, [sp, #22]
   246f4:	sub	w0, w0, #0x1
   246f8:	strb	w0, [sp, #22]
   246fc:	ldrb	w0, [sp, #20]
   24700:	cmp	w0, #0x0
   24704:	b.eq	24734 <__sanitizer_set_report_fd@@Base+0xa588>  // b.none
   24708:	ldrb	w0, [sp, #21]
   2470c:	cmp	w0, #0x0
   24710:	b.eq	24734 <__sanitizer_set_report_fd@@Base+0xa588>  // b.none
   24714:	mov	w2, #0x2d                  	// #45
   24718:	ldr	x1, [sp, #32]
   2471c:	ldr	x0, [sp, #40]
   24720:	bl	24524 <__sanitizer_set_report_fd@@Base+0xa378>
   24724:	mov	w1, w0
   24728:	ldr	w0, [sp, #316]
   2472c:	add	w0, w0, w1
   24730:	str	w0, [sp, #316]
   24734:	str	wzr, [sp, #312]
   24738:	ldrsw	x0, [sp, #312]
   2473c:	cmp	x0, #0x1d
   24740:	cset	w0, hi  // hi = pmore
   24744:	and	w0, w0, #0xff
   24748:	and	x0, x0, #0xff
   2474c:	cmp	x0, #0x0
   24750:	b.eq	24764 <__sanitizer_set_report_fd@@Base+0xa5b8>  // b.none
   24754:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   24758:	add	x0, x0, #0xa50
   2475c:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   24760:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   24764:	ldrb	w1, [sp, #23]
   24768:	ldr	w2, [sp, #312]
   2476c:	add	w0, w2, #0x1
   24770:	str	w0, [sp, #312]
   24774:	ldr	x0, [sp, #24]
   24778:	udiv	x3, x0, x1
   2477c:	mul	x1, x3, x1
   24780:	sub	x3, x0, x1
   24784:	sxtw	x0, w2
   24788:	lsl	x0, x0, #3
   2478c:	add	x1, sp, #0x38
   24790:	str	x3, [x1, x0]
   24794:	ldrb	w0, [sp, #23]
   24798:	ldr	x1, [sp, #24]
   2479c:	udiv	x0, x1, x0
   247a0:	str	x0, [sp, #24]
   247a4:	ldr	x0, [sp, #24]
   247a8:	cmp	x0, #0x0
   247ac:	b.eq	247b4 <__sanitizer_set_report_fd@@Base+0xa608>  // b.none
   247b0:	b	24738 <__sanitizer_set_report_fd@@Base+0xa58c>
   247b4:	ldrb	w0, [sp, #22]
   247b8:	ldr	w1, [sp, #312]
   247bc:	cmp	w1, w0
   247c0:	b.ge	24800 <__sanitizer_set_report_fd@@Base+0xa654>  // b.tcont
   247c4:	add	x1, sp, #0x38
   247c8:	ldrsw	x0, [sp, #312]
   247cc:	lsl	x0, x0, #3
   247d0:	add	x3, x1, x0
   247d4:	ldrb	w1, [sp, #22]
   247d8:	ldr	w0, [sp, #312]
   247dc:	sub	w0, w1, w0
   247e0:	sxtw	x0, w0
   247e4:	lsl	x0, x0, #3
   247e8:	mov	x2, x0
   247ec:	mov	w1, #0x0                   	// #0
   247f0:	mov	x0, x3
   247f4:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   247f8:	ldrb	w0, [sp, #22]
   247fc:	str	w0, [sp, #312]
   24800:	ldr	w0, [sp, #312]
   24804:	cmp	w0, #0x0
   24808:	cset	w0, le
   2480c:	and	w0, w0, #0xff
   24810:	and	x0, x0, #0xff
   24814:	cmp	x0, #0x0
   24818:	b.eq	2482c <__sanitizer_set_report_fd@@Base+0xa680>  // b.none
   2481c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   24820:	add	x0, x0, #0xa70
   24824:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   24828:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2482c:	ldr	w0, [sp, #312]
   24830:	sub	w0, w0, #0x1
   24834:	str	w0, [sp, #312]
   24838:	ldr	w0, [sp, #312]
   2483c:	cmp	w0, #0x0
   24840:	b.lt	248b4 <__sanitizer_set_report_fd@@Base+0xa708>  // b.tstop
   24844:	ldrsw	x0, [sp, #312]
   24848:	lsl	x0, x0, #3
   2484c:	add	x1, sp, #0x38
   24850:	ldr	x0, [x1, x0]
   24854:	cmp	x0, #0x0
   24858:	b.ne	248b4 <__sanitizer_set_report_fd@@Base+0xa708>  // b.any
   2485c:	ldrb	w0, [sp, #21]
   24860:	cmp	w0, #0x0
   24864:	b.ne	24874 <__sanitizer_set_report_fd@@Base+0xa6c8>  // b.any
   24868:	ldr	w0, [sp, #312]
   2486c:	cmp	w0, #0x0
   24870:	b.ne	2487c <__sanitizer_set_report_fd@@Base+0xa6d0>  // b.any
   24874:	mov	w0, #0x30                  	// #48
   24878:	b	24880 <__sanitizer_set_report_fd@@Base+0xa6d4>
   2487c:	mov	w0, #0x20                  	// #32
   24880:	strb	w0, [sp, #303]
   24884:	ldrb	w2, [sp, #303]
   24888:	ldr	x1, [sp, #32]
   2488c:	ldr	x0, [sp, #40]
   24890:	bl	24524 <__sanitizer_set_report_fd@@Base+0xa378>
   24894:	mov	w1, w0
   24898:	ldr	w0, [sp, #316]
   2489c:	add	w0, w0, w1
   248a0:	str	w0, [sp, #316]
   248a4:	ldr	w0, [sp, #312]
   248a8:	sub	w0, w0, #0x1
   248ac:	str	w0, [sp, #312]
   248b0:	b	24838 <__sanitizer_set_report_fd@@Base+0xa68c>
   248b4:	ldrb	w0, [sp, #20]
   248b8:	cmp	w0, #0x0
   248bc:	b.eq	248f4 <__sanitizer_set_report_fd@@Base+0xa748>  // b.none
   248c0:	ldrb	w0, [sp, #21]
   248c4:	eor	w0, w0, #0x1
   248c8:	and	w0, w0, #0xff
   248cc:	cmp	w0, #0x0
   248d0:	b.eq	248f4 <__sanitizer_set_report_fd@@Base+0xa748>  // b.none
   248d4:	mov	w2, #0x2d                  	// #45
   248d8:	ldr	x1, [sp, #32]
   248dc:	ldr	x0, [sp, #40]
   248e0:	bl	24524 <__sanitizer_set_report_fd@@Base+0xa378>
   248e4:	mov	w1, w0
   248e8:	ldr	w0, [sp, #316]
   248ec:	add	w0, w0, w1
   248f0:	str	w0, [sp, #316]
   248f4:	ldr	w0, [sp, #312]
   248f8:	cmp	w0, #0x0
   248fc:	b.lt	24990 <__sanitizer_set_report_fd@@Base+0xa7e4>  // b.tstop
   24900:	ldrsw	x0, [sp, #312]
   24904:	lsl	x0, x0, #3
   24908:	add	x1, sp, #0x38
   2490c:	ldr	x0, [x1, x0]
   24910:	strb	w0, [sp, #302]
   24914:	ldrb	w0, [sp, #302]
   24918:	cmp	w0, #0x9
   2491c:	b.hi	24930 <__sanitizer_set_report_fd@@Base+0xa784>  // b.pmore
   24920:	ldrb	w0, [sp, #302]
   24924:	add	w0, w0, #0x30
   24928:	and	w0, w0, #0xff
   2492c:	b	2495c <__sanitizer_set_report_fd@@Base+0xa7b0>
   24930:	ldrb	w0, [sp, #19]
   24934:	cmp	w0, #0x0
   24938:	b.eq	24944 <__sanitizer_set_report_fd@@Base+0xa798>  // b.none
   2493c:	mov	w0, #0x41                  	// #65
   24940:	b	24948 <__sanitizer_set_report_fd@@Base+0xa79c>
   24944:	mov	w0, #0x61                  	// #97
   24948:	ldrb	w1, [sp, #302]
   2494c:	add	w0, w0, w1
   24950:	and	w0, w0, #0xff
   24954:	sub	w0, w0, #0xa
   24958:	and	w0, w0, #0xff
   2495c:	strb	w0, [sp, #302]
   24960:	ldrb	w2, [sp, #302]
   24964:	ldr	x1, [sp, #32]
   24968:	ldr	x0, [sp, #40]
   2496c:	bl	24524 <__sanitizer_set_report_fd@@Base+0xa378>
   24970:	mov	w1, w0
   24974:	ldr	w0, [sp, #316]
   24978:	add	w0, w0, w1
   2497c:	str	w0, [sp, #316]
   24980:	ldr	w0, [sp, #312]
   24984:	sub	w0, w0, #0x1
   24988:	str	w0, [sp, #312]
   2498c:	b	248f4 <__sanitizer_set_report_fd@@Base+0xa748>
   24990:	ldr	w0, [sp, #316]
   24994:	ldr	x30, [sp]
   24998:	add	sp, sp, #0x140
   2499c:	ret
   249a0:	str	x30, [sp, #-48]!
   249a4:	str	x0, [sp, #40]
   249a8:	str	x1, [sp, #32]
   249ac:	str	x2, [sp, #24]
   249b0:	strb	w3, [sp, #23]
   249b4:	strb	w4, [sp, #22]
   249b8:	strb	w5, [sp, #21]
   249bc:	strb	w6, [sp, #20]
   249c0:	ldrb	w7, [sp, #20]
   249c4:	mov	w6, #0x0                   	// #0
   249c8:	ldrb	w5, [sp, #21]
   249cc:	ldrb	w4, [sp, #22]
   249d0:	ldrb	w3, [sp, #23]
   249d4:	ldr	x2, [sp, #24]
   249d8:	ldr	x1, [sp, #32]
   249dc:	ldr	x0, [sp, #40]
   249e0:	bl	24578 <__sanitizer_set_report_fd@@Base+0xa3cc>
   249e4:	ldr	x30, [sp], #48
   249e8:	ret
   249ec:	str	x30, [sp, #-64]!
   249f0:	str	x0, [sp, #40]
   249f4:	str	x1, [sp, #32]
   249f8:	str	x2, [sp, #24]
   249fc:	strb	w3, [sp, #23]
   24a00:	strb	w4, [sp, #22]
   24a04:	ldr	x0, [sp, #24]
   24a08:	lsr	x0, x0, #63
   24a0c:	strb	w0, [sp, #63]
   24a10:	ldrb	w0, [sp, #63]
   24a14:	cmp	w0, #0x0
   24a18:	b.eq	24a28 <__sanitizer_set_report_fd@@Base+0xa87c>  // b.none
   24a1c:	ldr	x0, [sp, #24]
   24a20:	neg	x0, x0
   24a24:	b	24a2c <__sanitizer_set_report_fd@@Base+0xa880>
   24a28:	ldr	x0, [sp, #24]
   24a2c:	mov	w7, #0x0                   	// #0
   24a30:	ldrb	w6, [sp, #63]
   24a34:	ldrb	w5, [sp, #22]
   24a38:	ldrb	w4, [sp, #23]
   24a3c:	mov	w3, #0xa                   	// #10
   24a40:	mov	x2, x0
   24a44:	ldr	x1, [sp, #32]
   24a48:	ldr	x0, [sp, #40]
   24a4c:	bl	24578 <__sanitizer_set_report_fd@@Base+0xa3cc>
   24a50:	ldr	x30, [sp], #64
   24a54:	ret
   24a58:	str	x30, [sp, #-64]!
   24a5c:	str	x0, [sp, #40]
   24a60:	str	x1, [sp, #32]
   24a64:	str	w2, [sp, #28]
   24a68:	str	w3, [sp, #24]
   24a6c:	str	x4, [sp, #16]
   24a70:	ldr	x0, [sp, #16]
   24a74:	cmp	x0, #0x0
   24a78:	b.ne	24a88 <__sanitizer_set_report_fd@@Base+0xa8dc>  // b.any
   24a7c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   24a80:	add	x0, x0, #0xa78
   24a84:	str	x0, [sp, #16]
   24a88:	str	wzr, [sp, #60]
   24a8c:	ldr	x0, [sp, #16]
   24a90:	ldrb	w0, [x0]
   24a94:	cmp	w0, #0x0
   24a98:	b.eq	24af4 <__sanitizer_set_report_fd@@Base+0xa948>  // b.none
   24a9c:	ldr	w0, [sp, #24]
   24aa0:	cmp	w0, #0x0
   24aa4:	b.lt	24ab8 <__sanitizer_set_report_fd@@Base+0xa90c>  // b.tstop
   24aa8:	ldr	w1, [sp, #60]
   24aac:	ldr	w0, [sp, #24]
   24ab0:	cmp	w1, w0
   24ab4:	b.ge	24af0 <__sanitizer_set_report_fd@@Base+0xa944>  // b.tcont
   24ab8:	ldr	x0, [sp, #16]
   24abc:	ldrb	w0, [x0]
   24ac0:	mov	w2, w0
   24ac4:	ldr	x1, [sp, #32]
   24ac8:	ldr	x0, [sp, #40]
   24acc:	bl	24524 <__sanitizer_set_report_fd@@Base+0xa378>
   24ad0:	mov	w1, w0
   24ad4:	ldr	w0, [sp, #60]
   24ad8:	add	w0, w0, w1
   24adc:	str	w0, [sp, #60]
   24ae0:	ldr	x0, [sp, #16]
   24ae4:	add	x0, x0, #0x1
   24ae8:	str	x0, [sp, #16]
   24aec:	b	24a8c <__sanitizer_set_report_fd@@Base+0xa8e0>
   24af0:	nop
   24af4:	ldr	w0, [sp, #60]
   24af8:	neg	w0, w0
   24afc:	ldr	w1, [sp, #28]
   24b00:	cmp	w1, w0
   24b04:	b.ge	24b2c <__sanitizer_set_report_fd@@Base+0xa980>  // b.tcont
   24b08:	mov	w2, #0x20                  	// #32
   24b0c:	ldr	x1, [sp, #32]
   24b10:	ldr	x0, [sp, #40]
   24b14:	bl	24524 <__sanitizer_set_report_fd@@Base+0xa378>
   24b18:	mov	w1, w0
   24b1c:	ldr	w0, [sp, #60]
   24b20:	add	w0, w0, w1
   24b24:	str	w0, [sp, #60]
   24b28:	b	24af4 <__sanitizer_set_report_fd@@Base+0xa948>
   24b2c:	ldr	w0, [sp, #60]
   24b30:	ldr	x30, [sp], #64
   24b34:	ret
   24b38:	str	x30, [sp, #-64]!
   24b3c:	str	x0, [sp, #40]
   24b40:	str	x1, [sp, #32]
   24b44:	str	x2, [sp, #24]
   24b48:	str	wzr, [sp, #60]
   24b4c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   24b50:	add	x4, x0, #0xa80
   24b54:	mov	w3, #0xffffffff            	// #-1
   24b58:	mov	w2, #0x0                   	// #0
   24b5c:	ldr	x1, [sp, #32]
   24b60:	ldr	x0, [sp, #40]
   24b64:	bl	24a58 <__sanitizer_set_report_fd@@Base+0xa8ac>
   24b68:	mov	w1, w0
   24b6c:	ldr	w0, [sp, #60]
   24b70:	add	w0, w0, w1
   24b74:	str	w0, [sp, #60]
   24b78:	mov	w6, #0x0                   	// #0
   24b7c:	mov	w5, #0x1                   	// #1
   24b80:	mov	w4, #0xc                   	// #12
   24b84:	mov	w3, #0x10                  	// #16
   24b88:	ldr	x2, [sp, #24]
   24b8c:	ldr	x1, [sp, #32]
   24b90:	ldr	x0, [sp, #40]
   24b94:	bl	249a0 <__sanitizer_set_report_fd@@Base+0xa7f4>
   24b98:	mov	w1, w0
   24b9c:	ldr	w0, [sp, #60]
   24ba0:	add	w0, w0, w1
   24ba4:	str	w0, [sp, #60]
   24ba8:	ldr	w0, [sp, #60]
   24bac:	ldr	x30, [sp], #64
   24bb0:	ret
   24bb4:	stp	x19, x30, [sp, #-144]!
   24bb8:	str	x0, [sp, #40]
   24bbc:	str	w1, [sp, #36]
   24bc0:	str	x2, [sp, #24]
   24bc4:	mov	x19, x3
   24bc8:	ldr	x0, [sp, #24]
   24bcc:	cmp	x0, #0x0
   24bd0:	cset	w0, eq  // eq = none
   24bd4:	and	w0, w0, #0xff
   24bd8:	and	x0, x0, #0xff
   24bdc:	cmp	x0, #0x0
   24be0:	b.eq	24bf4 <__sanitizer_set_report_fd@@Base+0xaa48>  // b.none
   24be4:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   24be8:	add	x0, x0, #0xae0
   24bec:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   24bf0:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   24bf4:	ldr	w0, [sp, #36]
   24bf8:	cmp	w0, #0x0
   24bfc:	cset	w0, le
   24c00:	and	w0, w0, #0xff
   24c04:	and	x0, x0, #0xff
   24c08:	cmp	x0, #0x0
   24c0c:	b.eq	24c20 <__sanitizer_set_report_fd@@Base+0xaa74>  // b.none
   24c10:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   24c14:	add	x0, x0, #0xae8
   24c18:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   24c1c:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   24c20:	ldr	x1, [sp, #40]
   24c24:	ldrsw	x0, [sp, #36]
   24c28:	sub	x0, x0, #0x1
   24c2c:	add	x0, x1, x0
   24c30:	str	x0, [sp, #112]
   24c34:	ldr	x0, [sp, #24]
   24c38:	str	x0, [sp, #136]
   24c3c:	str	wzr, [sp, #132]
   24c40:	ldr	x0, [sp, #136]
   24c44:	ldrb	w0, [x0]
   24c48:	cmp	w0, #0x0
   24c4c:	b.eq	255ac <__sanitizer_set_report_fd@@Base+0xb400>  // b.none
   24c50:	ldr	x0, [sp, #136]
   24c54:	ldrb	w0, [x0]
   24c58:	cmp	w0, #0x25
   24c5c:	b.eq	24c8c <__sanitizer_set_report_fd@@Base+0xaae0>  // b.none
   24c60:	ldr	x0, [sp, #136]
   24c64:	ldrb	w1, [x0]
   24c68:	add	x0, sp, #0x28
   24c6c:	mov	w2, w1
   24c70:	ldr	x1, [sp, #112]
   24c74:	bl	24524 <__sanitizer_set_report_fd@@Base+0xa378>
   24c78:	mov	w1, w0
   24c7c:	ldr	w0, [sp, #132]
   24c80:	add	w0, w0, w1
   24c84:	str	w0, [sp, #132]
   24c88:	b	2559c <__sanitizer_set_report_fd@@Base+0xb3f0>
   24c8c:	ldr	x0, [sp, #136]
   24c90:	add	x0, x0, #0x1
   24c94:	str	x0, [sp, #136]
   24c98:	ldr	x0, [sp, #136]
   24c9c:	ldrb	w0, [x0]
   24ca0:	cmp	w0, #0x2d
   24ca4:	cset	w0, eq  // eq = none
   24ca8:	strb	w0, [sp, #111]
   24cac:	ldrb	w0, [sp, #111]
   24cb0:	cmp	w0, #0x0
   24cb4:	b.eq	24cc4 <__sanitizer_set_report_fd@@Base+0xab18>  // b.none
   24cb8:	ldr	x0, [sp, #136]
   24cbc:	add	x0, x0, #0x1
   24cc0:	str	x0, [sp, #136]
   24cc4:	ldr	x0, [sp, #136]
   24cc8:	ldrb	w0, [x0]
   24ccc:	cmp	w0, #0x2f
   24cd0:	b.ls	24cec <__sanitizer_set_report_fd@@Base+0xab40>  // b.plast
   24cd4:	ldr	x0, [sp, #136]
   24cd8:	ldrb	w0, [x0]
   24cdc:	cmp	w0, #0x39
   24ce0:	b.hi	24cec <__sanitizer_set_report_fd@@Base+0xab40>  // b.pmore
   24ce4:	mov	w0, #0x1                   	// #1
   24ce8:	b	24cf0 <__sanitizer_set_report_fd@@Base+0xab44>
   24cec:	mov	w0, #0x0                   	// #0
   24cf0:	strb	w0, [sp, #110]
   24cf4:	ldr	x0, [sp, #136]
   24cf8:	ldrb	w0, [x0]
   24cfc:	cmp	w0, #0x30
   24d00:	cset	w0, eq  // eq = none
   24d04:	strb	w0, [sp, #109]
   24d08:	str	wzr, [sp, #128]
   24d0c:	ldrb	w0, [sp, #110]
   24d10:	cmp	w0, #0x0
   24d14:	b.eq	24d70 <__sanitizer_set_report_fd@@Base+0xabc4>  // b.none
   24d18:	ldr	x0, [sp, #136]
   24d1c:	ldrb	w0, [x0]
   24d20:	cmp	w0, #0x2f
   24d24:	b.ls	24d70 <__sanitizer_set_report_fd@@Base+0xabc4>  // b.plast
   24d28:	ldr	x0, [sp, #136]
   24d2c:	ldrb	w0, [x0]
   24d30:	cmp	w0, #0x39
   24d34:	b.hi	24d70 <__sanitizer_set_report_fd@@Base+0xabc4>  // b.pmore
   24d38:	ldr	w1, [sp, #128]
   24d3c:	mov	w0, w1
   24d40:	lsl	w0, w0, #2
   24d44:	add	w0, w0, w1
   24d48:	lsl	w0, w0, #1
   24d4c:	mov	w2, w0
   24d50:	ldr	x0, [sp, #136]
   24d54:	add	x1, x0, #0x1
   24d58:	str	x1, [sp, #136]
   24d5c:	ldrb	w0, [x0]
   24d60:	add	w0, w2, w0
   24d64:	sub	w0, w0, #0x30
   24d68:	str	w0, [sp, #128]
   24d6c:	b	24d18 <__sanitizer_set_report_fd@@Base+0xab6c>
   24d70:	ldr	x0, [sp, #136]
   24d74:	ldrb	w0, [x0]
   24d78:	cmp	w0, #0x2e
   24d7c:	b.ne	24d9c <__sanitizer_set_report_fd@@Base+0xabf0>  // b.any
   24d80:	ldr	x0, [sp, #136]
   24d84:	add	x0, x0, #0x1
   24d88:	ldrb	w0, [x0]
   24d8c:	cmp	w0, #0x2a
   24d90:	b.ne	24d9c <__sanitizer_set_report_fd@@Base+0xabf0>  // b.any
   24d94:	mov	w0, #0x1                   	// #1
   24d98:	b	24da0 <__sanitizer_set_report_fd@@Base+0xabf4>
   24d9c:	mov	w0, #0x0                   	// #0
   24da0:	strb	w0, [sp, #108]
   24da4:	mov	w0, #0xffffffff            	// #-1
   24da8:	str	w0, [sp, #124]
   24dac:	ldrb	w0, [sp, #108]
   24db0:	cmp	w0, #0x0
   24db4:	b.eq	24e1c <__sanitizer_set_report_fd@@Base+0xac70>  // b.none
   24db8:	ldr	x0, [sp, #136]
   24dbc:	add	x0, x0, #0x2
   24dc0:	str	x0, [sp, #136]
   24dc4:	ldr	w1, [x19, #24]
   24dc8:	ldr	x0, [x19]
   24dcc:	cmp	w1, #0x0
   24dd0:	b.lt	24de4 <__sanitizer_set_report_fd@@Base+0xac38>  // b.tstop
   24dd4:	add	x1, x0, #0xb
   24dd8:	and	x1, x1, #0xfffffffffffffff8
   24ddc:	str	x1, [x19]
   24de0:	b	24e14 <__sanitizer_set_report_fd@@Base+0xac68>
   24de4:	add	w2, w1, #0x8
   24de8:	str	w2, [x19, #24]
   24dec:	ldr	w2, [x19, #24]
   24df0:	cmp	w2, #0x0
   24df4:	b.le	24e08 <__sanitizer_set_report_fd@@Base+0xac5c>
   24df8:	add	x1, x0, #0xb
   24dfc:	and	x1, x1, #0xfffffffffffffff8
   24e00:	str	x1, [x19]
   24e04:	b	24e14 <__sanitizer_set_report_fd@@Base+0xac68>
   24e08:	ldr	x2, [x19, #8]
   24e0c:	sxtw	x0, w1
   24e10:	add	x0, x2, x0
   24e14:	ldr	w0, [x0]
   24e18:	str	w0, [sp, #124]
   24e1c:	ldr	x0, [sp, #136]
   24e20:	ldrb	w0, [x0]
   24e24:	cmp	w0, #0x7a
   24e28:	cset	w0, eq  // eq = none
   24e2c:	strb	w0, [sp, #107]
   24e30:	ldrb	w0, [sp, #107]
   24e34:	ldr	x1, [sp, #136]
   24e38:	add	x0, x1, x0
   24e3c:	str	x0, [sp, #136]
   24e40:	ldrb	w0, [sp, #107]
   24e44:	eor	w0, w0, #0x1
   24e48:	and	w0, w0, #0xff
   24e4c:	cmp	w0, #0x0
   24e50:	b.eq	24e80 <__sanitizer_set_report_fd@@Base+0xacd4>  // b.none
   24e54:	ldr	x0, [sp, #136]
   24e58:	ldrb	w0, [x0]
   24e5c:	cmp	w0, #0x6c
   24e60:	b.ne	24e80 <__sanitizer_set_report_fd@@Base+0xacd4>  // b.any
   24e64:	ldr	x0, [sp, #136]
   24e68:	add	x0, x0, #0x1
   24e6c:	ldrb	w0, [x0]
   24e70:	cmp	w0, #0x6c
   24e74:	b.ne	24e80 <__sanitizer_set_report_fd@@Base+0xacd4>  // b.any
   24e78:	mov	w0, #0x1                   	// #1
   24e7c:	b	24e84 <__sanitizer_set_report_fd@@Base+0xacd8>
   24e80:	mov	w0, #0x0                   	// #0
   24e84:	strb	w0, [sp, #106]
   24e88:	ldrb	w0, [sp, #106]
   24e8c:	lsl	w0, w0, #1
   24e90:	sxtw	x0, w0
   24e94:	ldr	x1, [sp, #136]
   24e98:	add	x0, x1, x0
   24e9c:	str	x0, [sp, #136]
   24ea0:	ldrb	w0, [sp, #107]
   24ea4:	cmp	w0, #0x0
   24ea8:	b.ne	24eb8 <__sanitizer_set_report_fd@@Base+0xad0c>  // b.any
   24eac:	ldrb	w0, [sp, #106]
   24eb0:	cmp	w0, #0x0
   24eb4:	b.eq	24ec0 <__sanitizer_set_report_fd@@Base+0xad14>  // b.none
   24eb8:	mov	w0, #0x1                   	// #1
   24ebc:	b	24ec4 <__sanitizer_set_report_fd@@Base+0xad18>
   24ec0:	mov	w0, #0x0                   	// #0
   24ec4:	strb	w0, [sp, #105]
   24ec8:	ldrb	w0, [sp, #110]
   24ecc:	cmp	w0, #0x0
   24ed0:	b.ne	24ee0 <__sanitizer_set_report_fd@@Base+0xad34>  // b.any
   24ed4:	ldrb	w0, [sp, #105]
   24ed8:	cmp	w0, #0x0
   24edc:	b.eq	24ee8 <__sanitizer_set_report_fd@@Base+0xad3c>  // b.none
   24ee0:	mov	w0, #0x1                   	// #1
   24ee4:	b	24eec <__sanitizer_set_report_fd@@Base+0xad40>
   24ee8:	mov	w0, #0x0                   	// #0
   24eec:	strb	w0, [sp, #104]
   24ef0:	ldr	w0, [sp, #124]
   24ef4:	cmp	w0, #0x0
   24ef8:	b.ge	24f10 <__sanitizer_set_report_fd@@Base+0xad64>  // b.tcont
   24efc:	ldrb	w0, [sp, #111]
   24f00:	eor	w0, w0, #0x1
   24f04:	and	w0, w0, #0xff
   24f08:	cmp	w0, #0x0
   24f0c:	b.ne	24f20 <__sanitizer_set_report_fd@@Base+0xad74>  // b.any
   24f10:	ldr	x0, [sp, #136]
   24f14:	ldrb	w0, [x0]
   24f18:	cmp	w0, #0x73
   24f1c:	b.ne	24f28 <__sanitizer_set_report_fd@@Base+0xad7c>  // b.any
   24f20:	mov	w0, #0x1                   	// #1
   24f24:	b	24f2c <__sanitizer_set_report_fd@@Base+0xad80>
   24f28:	mov	w0, #0x0                   	// #0
   24f2c:	and	x0, x0, #0xff
   24f30:	str	x0, [sp, #96]
   24f34:	str	xzr, [sp, #88]
   24f38:	ldr	x1, [sp, #96]
   24f3c:	ldr	x0, [sp, #88]
   24f40:	cmp	x1, x0
   24f44:	cset	w0, eq  // eq = none
   24f48:	and	w0, w0, #0xff
   24f4c:	and	x0, x0, #0xff
   24f50:	cmp	x0, #0x0
   24f54:	b.eq	24f78 <__sanitizer_set_report_fd@@Base+0xadcc>  // b.none
   24f58:	ldr	x4, [sp, #88]
   24f5c:	ldr	x3, [sp, #96]
   24f60:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   24f64:	add	x2, x0, #0xaf8
   24f68:	mov	w1, #0xa9                  	// #169
   24f6c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   24f70:	add	x0, x0, #0xb38
   24f74:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   24f78:	ldr	x0, [sp, #136]
   24f7c:	ldrb	w0, [x0]
   24f80:	cmp	w0, #0x78
   24f84:	b.eq	2514c <__sanitizer_set_report_fd@@Base+0xafa0>  // b.none
   24f88:	cmp	w0, #0x78
   24f8c:	b.gt	25588 <__sanitizer_set_report_fd@@Base+0xb3dc>
   24f90:	cmp	w0, #0x75
   24f94:	b.eq	2514c <__sanitizer_set_report_fd@@Base+0xafa0>  // b.none
   24f98:	cmp	w0, #0x75
   24f9c:	b.gt	25588 <__sanitizer_set_report_fd@@Base+0xb3dc>
   24fa0:	cmp	w0, #0x73
   24fa4:	b.eq	25378 <__sanitizer_set_report_fd@@Base+0xb1cc>  // b.none
   24fa8:	cmp	w0, #0x73
   24fac:	b.gt	25588 <__sanitizer_set_report_fd@@Base+0xb3dc>
   24fb0:	cmp	w0, #0x70
   24fb4:	b.eq	252e0 <__sanitizer_set_report_fd@@Base+0xb134>  // b.none
   24fb8:	cmp	w0, #0x70
   24fbc:	b.gt	25588 <__sanitizer_set_report_fd@@Base+0xb3dc>
   24fc0:	cmp	w0, #0x64
   24fc4:	b.eq	24ff4 <__sanitizer_set_report_fd@@Base+0xae48>  // b.none
   24fc8:	cmp	w0, #0x64
   24fcc:	b.gt	25588 <__sanitizer_set_report_fd@@Base+0xb3dc>
   24fd0:	cmp	w0, #0x63
   24fd4:	b.eq	254a8 <__sanitizer_set_report_fd@@Base+0xb2fc>  // b.none
   24fd8:	cmp	w0, #0x63
   24fdc:	b.gt	25588 <__sanitizer_set_report_fd@@Base+0xb3dc>
   24fe0:	cmp	w0, #0x25
   24fe4:	b.eq	25544 <__sanitizer_set_report_fd@@Base+0xb398>  // b.none
   24fe8:	cmp	w0, #0x58
   24fec:	b.eq	2514c <__sanitizer_set_report_fd@@Base+0xafa0>  // b.none
   24ff0:	b	25588 <__sanitizer_set_report_fd@@Base+0xb3dc>
   24ff4:	ldrb	w0, [sp, #106]
   24ff8:	cmp	w0, #0x0
   24ffc:	b.eq	25058 <__sanitizer_set_report_fd@@Base+0xaeac>  // b.none
   25000:	ldr	w1, [x19, #24]
   25004:	ldr	x0, [x19]
   25008:	cmp	w1, #0x0
   2500c:	b.lt	25020 <__sanitizer_set_report_fd@@Base+0xae74>  // b.tstop
   25010:	add	x1, x0, #0xf
   25014:	and	x1, x1, #0xfffffffffffffff8
   25018:	str	x1, [x19]
   2501c:	b	25050 <__sanitizer_set_report_fd@@Base+0xaea4>
   25020:	add	w2, w1, #0x8
   25024:	str	w2, [x19, #24]
   25028:	ldr	w2, [x19, #24]
   2502c:	cmp	w2, #0x0
   25030:	b.le	25044 <__sanitizer_set_report_fd@@Base+0xae98>
   25034:	add	x1, x0, #0xf
   25038:	and	x1, x1, #0xfffffffffffffff8
   2503c:	str	x1, [x19]
   25040:	b	25050 <__sanitizer_set_report_fd@@Base+0xaea4>
   25044:	ldr	x2, [x19, #8]
   25048:	sxtw	x0, w1
   2504c:	add	x0, x2, x0
   25050:	ldr	x0, [x0]
   25054:	b	25114 <__sanitizer_set_report_fd@@Base+0xaf68>
   25058:	ldrb	w0, [sp, #107]
   2505c:	cmp	w0, #0x0
   25060:	b.eq	250bc <__sanitizer_set_report_fd@@Base+0xaf10>  // b.none
   25064:	ldr	w1, [x19, #24]
   25068:	ldr	x0, [x19]
   2506c:	cmp	w1, #0x0
   25070:	b.lt	25084 <__sanitizer_set_report_fd@@Base+0xaed8>  // b.tstop
   25074:	add	x1, x0, #0xf
   25078:	and	x1, x1, #0xfffffffffffffff8
   2507c:	str	x1, [x19]
   25080:	b	250b4 <__sanitizer_set_report_fd@@Base+0xaf08>
   25084:	add	w2, w1, #0x8
   25088:	str	w2, [x19, #24]
   2508c:	ldr	w2, [x19, #24]
   25090:	cmp	w2, #0x0
   25094:	b.le	250a8 <__sanitizer_set_report_fd@@Base+0xaefc>
   25098:	add	x1, x0, #0xf
   2509c:	and	x1, x1, #0xfffffffffffffff8
   250a0:	str	x1, [x19]
   250a4:	b	250b4 <__sanitizer_set_report_fd@@Base+0xaf08>
   250a8:	ldr	x2, [x19, #8]
   250ac:	sxtw	x0, w1
   250b0:	add	x0, x2, x0
   250b4:	ldr	x0, [x0]
   250b8:	b	25114 <__sanitizer_set_report_fd@@Base+0xaf68>
   250bc:	ldr	w1, [x19, #24]
   250c0:	ldr	x0, [x19]
   250c4:	cmp	w1, #0x0
   250c8:	b.lt	250dc <__sanitizer_set_report_fd@@Base+0xaf30>  // b.tstop
   250cc:	add	x1, x0, #0xb
   250d0:	and	x1, x1, #0xfffffffffffffff8
   250d4:	str	x1, [x19]
   250d8:	b	2510c <__sanitizer_set_report_fd@@Base+0xaf60>
   250dc:	add	w2, w1, #0x8
   250e0:	str	w2, [x19, #24]
   250e4:	ldr	w2, [x19, #24]
   250e8:	cmp	w2, #0x0
   250ec:	b.le	25100 <__sanitizer_set_report_fd@@Base+0xaf54>
   250f0:	add	x1, x0, #0xb
   250f4:	and	x1, x1, #0xfffffffffffffff8
   250f8:	str	x1, [x19]
   250fc:	b	2510c <__sanitizer_set_report_fd@@Base+0xaf60>
   25100:	ldr	x2, [x19, #8]
   25104:	sxtw	x0, w1
   25108:	add	x0, x2, x0
   2510c:	ldr	w0, [x0]
   25110:	sxtw	x0, w0
   25114:	str	x0, [sp, #64]
   25118:	ldr	w0, [sp, #128]
   2511c:	and	w1, w0, #0xff
   25120:	add	x0, sp, #0x28
   25124:	ldrb	w4, [sp, #109]
   25128:	mov	w3, w1
   2512c:	ldr	x2, [sp, #64]
   25130:	ldr	x1, [sp, #112]
   25134:	bl	249ec <__sanitizer_set_report_fd@@Base+0xa840>
   25138:	mov	w1, w0
   2513c:	ldr	w0, [sp, #132]
   25140:	add	w0, w0, w1
   25144:	str	w0, [sp, #132]
   25148:	b	2559c <__sanitizer_set_report_fd@@Base+0xb3f0>
   2514c:	ldrb	w0, [sp, #106]
   25150:	cmp	w0, #0x0
   25154:	b.eq	251b0 <__sanitizer_set_report_fd@@Base+0xb004>  // b.none
   25158:	ldr	w1, [x19, #24]
   2515c:	ldr	x0, [x19]
   25160:	cmp	w1, #0x0
   25164:	b.lt	25178 <__sanitizer_set_report_fd@@Base+0xafcc>  // b.tstop
   25168:	add	x1, x0, #0xf
   2516c:	and	x1, x1, #0xfffffffffffffff8
   25170:	str	x1, [x19]
   25174:	b	251a8 <__sanitizer_set_report_fd@@Base+0xaffc>
   25178:	add	w2, w1, #0x8
   2517c:	str	w2, [x19, #24]
   25180:	ldr	w2, [x19, #24]
   25184:	cmp	w2, #0x0
   25188:	b.le	2519c <__sanitizer_set_report_fd@@Base+0xaff0>
   2518c:	add	x1, x0, #0xf
   25190:	and	x1, x1, #0xfffffffffffffff8
   25194:	str	x1, [x19]
   25198:	b	251a8 <__sanitizer_set_report_fd@@Base+0xaffc>
   2519c:	ldr	x2, [x19, #8]
   251a0:	sxtw	x0, w1
   251a4:	add	x0, x2, x0
   251a8:	ldr	x0, [x0]
   251ac:	b	2526c <__sanitizer_set_report_fd@@Base+0xb0c0>
   251b0:	ldrb	w0, [sp, #107]
   251b4:	cmp	w0, #0x0
   251b8:	b.eq	25214 <__sanitizer_set_report_fd@@Base+0xb068>  // b.none
   251bc:	ldr	w1, [x19, #24]
   251c0:	ldr	x0, [x19]
   251c4:	cmp	w1, #0x0
   251c8:	b.lt	251dc <__sanitizer_set_report_fd@@Base+0xb030>  // b.tstop
   251cc:	add	x1, x0, #0xf
   251d0:	and	x1, x1, #0xfffffffffffffff8
   251d4:	str	x1, [x19]
   251d8:	b	2520c <__sanitizer_set_report_fd@@Base+0xb060>
   251dc:	add	w2, w1, #0x8
   251e0:	str	w2, [x19, #24]
   251e4:	ldr	w2, [x19, #24]
   251e8:	cmp	w2, #0x0
   251ec:	b.le	25200 <__sanitizer_set_report_fd@@Base+0xb054>
   251f0:	add	x1, x0, #0xf
   251f4:	and	x1, x1, #0xfffffffffffffff8
   251f8:	str	x1, [x19]
   251fc:	b	2520c <__sanitizer_set_report_fd@@Base+0xb060>
   25200:	ldr	x2, [x19, #8]
   25204:	sxtw	x0, w1
   25208:	add	x0, x2, x0
   2520c:	ldr	x0, [x0]
   25210:	b	2526c <__sanitizer_set_report_fd@@Base+0xb0c0>
   25214:	ldr	w1, [x19, #24]
   25218:	ldr	x0, [x19]
   2521c:	cmp	w1, #0x0
   25220:	b.lt	25234 <__sanitizer_set_report_fd@@Base+0xb088>  // b.tstop
   25224:	add	x1, x0, #0xb
   25228:	and	x1, x1, #0xfffffffffffffff8
   2522c:	str	x1, [x19]
   25230:	b	25264 <__sanitizer_set_report_fd@@Base+0xb0b8>
   25234:	add	w2, w1, #0x8
   25238:	str	w2, [x19, #24]
   2523c:	ldr	w2, [x19, #24]
   25240:	cmp	w2, #0x0
   25244:	b.le	25258 <__sanitizer_set_report_fd@@Base+0xb0ac>
   25248:	add	x1, x0, #0xb
   2524c:	and	x1, x1, #0xfffffffffffffff8
   25250:	str	x1, [x19]
   25254:	b	25264 <__sanitizer_set_report_fd@@Base+0xb0b8>
   25258:	ldr	x2, [x19, #8]
   2525c:	sxtw	x0, w1
   25260:	add	x0, x2, x0
   25264:	ldr	w0, [x0]
   25268:	mov	w0, w0
   2526c:	str	x0, [sp, #56]
   25270:	ldr	x0, [sp, #136]
   25274:	ldrb	w0, [x0]
   25278:	cmp	w0, #0x58
   2527c:	cset	w0, eq  // eq = none
   25280:	strb	w0, [sp, #55]
   25284:	ldr	x0, [sp, #136]
   25288:	ldrb	w0, [x0]
   2528c:	cmp	w0, #0x75
   25290:	b.ne	2529c <__sanitizer_set_report_fd@@Base+0xb0f0>  // b.any
   25294:	mov	w0, #0xa                   	// #10
   25298:	b	252a0 <__sanitizer_set_report_fd@@Base+0xb0f4>
   2529c:	mov	w0, #0x10                  	// #16
   252a0:	ldr	w1, [sp, #128]
   252a4:	and	w1, w1, #0xff
   252a8:	add	x7, sp, #0x28
   252ac:	ldrb	w6, [sp, #55]
   252b0:	ldrb	w5, [sp, #109]
   252b4:	mov	w4, w1
   252b8:	mov	w3, w0
   252bc:	ldr	x2, [sp, #56]
   252c0:	ldr	x1, [sp, #112]
   252c4:	mov	x0, x7
   252c8:	bl	249a0 <__sanitizer_set_report_fd@@Base+0xa7f4>
   252cc:	mov	w1, w0
   252d0:	ldr	w0, [sp, #132]
   252d4:	add	w0, w0, w1
   252d8:	str	w0, [sp, #132]
   252dc:	b	2559c <__sanitizer_set_report_fd@@Base+0xb3f0>
   252e0:	ldrb	w0, [sp, #104]
   252e4:	cmp	x0, #0x0
   252e8:	b.eq	25300 <__sanitizer_set_report_fd@@Base+0xb154>  // b.none
   252ec:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
   252f0:	add	x0, x0, #0xd78
   252f4:	ldr	x0, [x0]
   252f8:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   252fc:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   25300:	ldr	w1, [x19, #24]
   25304:	ldr	x0, [x19]
   25308:	cmp	w1, #0x0
   2530c:	b.lt	25320 <__sanitizer_set_report_fd@@Base+0xb174>  // b.tstop
   25310:	add	x1, x0, #0xf
   25314:	and	x1, x1, #0xfffffffffffffff8
   25318:	str	x1, [x19]
   2531c:	b	25350 <__sanitizer_set_report_fd@@Base+0xb1a4>
   25320:	add	w2, w1, #0x8
   25324:	str	w2, [x19, #24]
   25328:	ldr	w2, [x19, #24]
   2532c:	cmp	w2, #0x0
   25330:	b.le	25344 <__sanitizer_set_report_fd@@Base+0xb198>
   25334:	add	x1, x0, #0xf
   25338:	and	x1, x1, #0xfffffffffffffff8
   2533c:	str	x1, [x19]
   25340:	b	25350 <__sanitizer_set_report_fd@@Base+0xb1a4>
   25344:	ldr	x2, [x19, #8]
   25348:	sxtw	x0, w1
   2534c:	add	x0, x2, x0
   25350:	ldr	x1, [x0]
   25354:	add	x0, sp, #0x28
   25358:	mov	x2, x1
   2535c:	ldr	x1, [sp, #112]
   25360:	bl	24b38 <__sanitizer_set_report_fd@@Base+0xa98c>
   25364:	mov	w1, w0
   25368:	ldr	w0, [sp, #132]
   2536c:	add	w0, w0, w1
   25370:	str	w0, [sp, #132]
   25374:	b	2559c <__sanitizer_set_report_fd@@Base+0xb3f0>
   25378:	ldrb	w0, [sp, #105]
   2537c:	cmp	x0, #0x0
   25380:	b.eq	25398 <__sanitizer_set_report_fd@@Base+0xb1ec>  // b.none
   25384:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
   25388:	add	x0, x0, #0xd78
   2538c:	ldr	x0, [x0]
   25390:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   25394:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   25398:	ldrb	w0, [sp, #110]
   2539c:	eor	w0, w0, #0x1
   253a0:	and	w0, w0, #0xff
   253a4:	cmp	w0, #0x0
   253a8:	b.ne	253b8 <__sanitizer_set_report_fd@@Base+0xb20c>  // b.any
   253ac:	ldrb	w0, [sp, #111]
   253b0:	cmp	w0, #0x0
   253b4:	b.eq	253c0 <__sanitizer_set_report_fd@@Base+0xb214>  // b.none
   253b8:	mov	w0, #0x1                   	// #1
   253bc:	b	253c4 <__sanitizer_set_report_fd@@Base+0xb218>
   253c0:	mov	w0, #0x0                   	// #0
   253c4:	and	x0, x0, #0xff
   253c8:	str	x0, [sp, #80]
   253cc:	str	xzr, [sp, #72]
   253d0:	ldr	x1, [sp, #80]
   253d4:	ldr	x0, [sp, #72]
   253d8:	cmp	x1, x0
   253dc:	cset	w0, eq  // eq = none
   253e0:	and	w0, w0, #0xff
   253e4:	and	x0, x0, #0xff
   253e8:	cmp	x0, #0x0
   253ec:	b.eq	25410 <__sanitizer_set_report_fd@@Base+0xb264>  // b.none
   253f0:	ldr	x4, [sp, #72]
   253f4:	ldr	x3, [sp, #80]
   253f8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   253fc:	add	x2, x0, #0xb78
   25400:	mov	w1, #0xc6                  	// #198
   25404:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   25408:	add	x0, x0, #0xb38
   2540c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   25410:	ldrb	w0, [sp, #111]
   25414:	cmp	w0, #0x0
   25418:	b.eq	25428 <__sanitizer_set_report_fd@@Base+0xb27c>  // b.none
   2541c:	ldr	w0, [sp, #128]
   25420:	neg	w2, w0
   25424:	b	2542c <__sanitizer_set_report_fd@@Base+0xb280>
   25428:	ldr	w2, [sp, #128]
   2542c:	ldr	w1, [x19, #24]
   25430:	ldr	x0, [x19]
   25434:	cmp	w1, #0x0
   25438:	b.lt	2544c <__sanitizer_set_report_fd@@Base+0xb2a0>  // b.tstop
   2543c:	add	x1, x0, #0xf
   25440:	and	x1, x1, #0xfffffffffffffff8
   25444:	str	x1, [x19]
   25448:	b	2547c <__sanitizer_set_report_fd@@Base+0xb2d0>
   2544c:	add	w3, w1, #0x8
   25450:	str	w3, [x19, #24]
   25454:	ldr	w3, [x19, #24]
   25458:	cmp	w3, #0x0
   2545c:	b.le	25470 <__sanitizer_set_report_fd@@Base+0xb2c4>
   25460:	add	x1, x0, #0xf
   25464:	and	x1, x1, #0xfffffffffffffff8
   25468:	str	x1, [x19]
   2546c:	b	2547c <__sanitizer_set_report_fd@@Base+0xb2d0>
   25470:	ldr	x3, [x19, #8]
   25474:	sxtw	x0, w1
   25478:	add	x0, x3, x0
   2547c:	ldr	x1, [x0]
   25480:	add	x0, sp, #0x28
   25484:	mov	x4, x1
   25488:	ldr	w3, [sp, #124]
   2548c:	ldr	x1, [sp, #112]
   25490:	bl	24a58 <__sanitizer_set_report_fd@@Base+0xa8ac>
   25494:	mov	w1, w0
   25498:	ldr	w0, [sp, #132]
   2549c:	add	w0, w0, w1
   254a0:	str	w0, [sp, #132]
   254a4:	b	2559c <__sanitizer_set_report_fd@@Base+0xb3f0>
   254a8:	ldrb	w0, [sp, #104]
   254ac:	cmp	x0, #0x0
   254b0:	b.eq	254c8 <__sanitizer_set_report_fd@@Base+0xb31c>  // b.none
   254b4:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
   254b8:	add	x0, x0, #0xd78
   254bc:	ldr	x0, [x0]
   254c0:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   254c4:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   254c8:	ldr	w1, [x19, #24]
   254cc:	ldr	x0, [x19]
   254d0:	cmp	w1, #0x0
   254d4:	b.lt	254e8 <__sanitizer_set_report_fd@@Base+0xb33c>  // b.tstop
   254d8:	add	x1, x0, #0xb
   254dc:	and	x1, x1, #0xfffffffffffffff8
   254e0:	str	x1, [x19]
   254e4:	b	25518 <__sanitizer_set_report_fd@@Base+0xb36c>
   254e8:	add	w2, w1, #0x8
   254ec:	str	w2, [x19, #24]
   254f0:	ldr	w2, [x19, #24]
   254f4:	cmp	w2, #0x0
   254f8:	b.le	2550c <__sanitizer_set_report_fd@@Base+0xb360>
   254fc:	add	x1, x0, #0xb
   25500:	and	x1, x1, #0xfffffffffffffff8
   25504:	str	x1, [x19]
   25508:	b	25518 <__sanitizer_set_report_fd@@Base+0xb36c>
   2550c:	ldr	x2, [x19, #8]
   25510:	sxtw	x0, w1
   25514:	add	x0, x2, x0
   25518:	ldr	w0, [x0]
   2551c:	and	w1, w0, #0xff
   25520:	add	x0, sp, #0x28
   25524:	mov	w2, w1
   25528:	ldr	x1, [sp, #112]
   2552c:	bl	24524 <__sanitizer_set_report_fd@@Base+0xa378>
   25530:	mov	w1, w0
   25534:	ldr	w0, [sp, #132]
   25538:	add	w0, w0, w1
   2553c:	str	w0, [sp, #132]
   25540:	b	2559c <__sanitizer_set_report_fd@@Base+0xb3f0>
   25544:	ldrb	w0, [sp, #104]
   25548:	cmp	x0, #0x0
   2554c:	b.eq	25564 <__sanitizer_set_report_fd@@Base+0xb3b8>  // b.none
   25550:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
   25554:	add	x0, x0, #0xd78
   25558:	ldr	x0, [x0]
   2555c:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   25560:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   25564:	add	x0, sp, #0x28
   25568:	mov	w2, #0x25                  	// #37
   2556c:	ldr	x1, [sp, #112]
   25570:	bl	24524 <__sanitizer_set_report_fd@@Base+0xa378>
   25574:	mov	w1, w0
   25578:	ldr	w0, [sp, #132]
   2557c:	add	w0, w0, w1
   25580:	str	w0, [sp, #132]
   25584:	b	2559c <__sanitizer_set_report_fd@@Base+0xb3f0>
   25588:	adrp	x0, 79000 <__asan_cplus_demangle_builtin_types@@Base+0x29c8>
   2558c:	add	x0, x0, #0xd78
   25590:	ldr	x0, [x0]
   25594:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   25598:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2559c:	ldr	x0, [sp, #136]
   255a0:	add	x0, x0, #0x1
   255a4:	str	x0, [sp, #136]
   255a8:	b	24c40 <__sanitizer_set_report_fd@@Base+0xaa94>
   255ac:	ldr	x0, [sp, #40]
   255b0:	ldr	x1, [sp, #112]
   255b4:	cmp	x1, x0
   255b8:	cset	w0, cc  // cc = lo, ul, last
   255bc:	and	w0, w0, #0xff
   255c0:	and	x0, x0, #0xff
   255c4:	cmp	x0, #0x0
   255c8:	b.eq	255dc <__sanitizer_set_report_fd@@Base+0xb430>  // b.none
   255cc:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   255d0:	add	x0, x0, #0xba8
   255d4:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   255d8:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   255dc:	ldr	x0, [sp, #112]
   255e0:	add	x1, x0, #0x1
   255e4:	add	x0, sp, #0x28
   255e8:	mov	w2, #0x0                   	// #0
   255ec:	bl	24524 <__sanitizer_set_report_fd@@Base+0xa378>
   255f0:	ldr	w0, [sp, #132]
   255f4:	ldp	x19, x30, [sp], #144
   255f8:	ret
   255fc:	sub	sp, sp, #0x10
   25600:	str	x0, [sp, #8]
   25604:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   25608:	add	x0, x0, #0xdd8
   2560c:	ldr	x1, [sp, #8]
   25610:	str	x1, [x0]
   25614:	nop
   25618:	add	sp, sp, #0x10
   2561c:	ret

0000000000025620 <OnPrint@@Base>:
   25620:	sub	sp, sp, #0x10
   25624:	str	x0, [sp, #8]
   25628:	nop
   2562c:	add	sp, sp, #0x10
   25630:	ret
   25634:	str	x30, [sp, #-32]!
   25638:	str	x0, [sp, #24]
   2563c:	ldr	x0, [sp, #24]
   25640:	bl	65b0 <OnPrint@plt>
   25644:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   25648:	add	x0, x0, #0xdd8
   2564c:	ldr	x0, [x0]
   25650:	cmp	x0, #0x0
   25654:	b.eq	2566c <OnPrint@@Base+0x4c>  // b.none
   25658:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   2565c:	add	x0, x0, #0xdd8
   25660:	ldr	x1, [x0]
   25664:	ldr	x0, [sp, #24]
   25668:	blr	x1
   2566c:	nop
   25670:	ldr	x30, [sp], #32
   25674:	ret
   25678:	stp	x19, x30, [sp, #-160]!
   2567c:	strb	w0, [sp, #79]
   25680:	str	x1, [sp, #64]
   25684:	str	w2, [sp, #72]
   25688:	str	x3, [sp, #56]
   2568c:	mov	x19, x4
   25690:	add	x2, sp, #0x58
   25694:	mov	x3, x19
   25698:	ldp	x0, x1, [x3]
   2569c:	stp	x0, x1, [x2]
   256a0:	ldp	x0, x1, [x3, #16]
   256a4:	stp	x0, x1, [x2, #16]
   256a8:	mov	w0, #0x4000                	// #16384
   256ac:	str	w0, [sp, #136]
   256b0:	ldr	x0, [sp, #64]
   256b4:	str	x0, [sp, #144]
   256b8:	str	wzr, [sp, #140]
   256bc:	ldr	w0, [sp, #140]
   256c0:	cmp	w0, #0x1
   256c4:	b.gt	25928 <OnPrint@@Base+0x308>
   256c8:	ldr	w0, [sp, #140]
   256cc:	cmp	w0, #0x0
   256d0:	b.eq	2570c <OnPrint@@Base+0xec>  // b.none
   256d4:	mov	x3, x19
   256d8:	add	x2, sp, #0x58
   256dc:	ldp	x0, x1, [x2]
   256e0:	stp	x0, x1, [x3]
   256e4:	ldp	x0, x1, [x2, #16]
   256e8:	stp	x0, x1, [x3, #16]
   256ec:	mov	w2, #0x0                   	// #0
   256f0:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   256f4:	add	x1, x0, #0xbc0
   256f8:	mov	x0, #0x4000                	// #16384
   256fc:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   25700:	str	x0, [sp, #144]
   25704:	mov	w0, #0x4000                	// #16384
   25708:	str	w0, [sp, #72]
   2570c:	str	wzr, [sp, #156]
   25710:	ldrb	w0, [sp, #79]
   25714:	cmp	w0, #0x0
   25718:	b.eq	2585c <OnPrint@@Base+0x23c>  // b.none
   2571c:	bl	1ef9c <__sanitizer_set_report_fd@@Base+0x4df0>
   25720:	str	w0, [sp, #132]
   25724:	bl	14598 <__sancov_default_options@@Base+0x41ec>
   25728:	str	x0, [sp, #120]
   2572c:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   25730:	ldrb	w0, [x0, #48]
   25734:	cmp	w0, #0x0
   25738:	b.eq	25750 <OnPrint@@Base+0x130>  // b.none
   2573c:	ldr	x0, [sp, #120]
   25740:	cmp	x0, #0x0
   25744:	b.eq	25750 <OnPrint@@Base+0x130>  // b.none
   25748:	mov	w0, #0x1                   	// #1
   2574c:	b	25754 <OnPrint@@Base+0x134>
   25750:	mov	w0, #0x0                   	// #0
   25754:	cmp	w0, #0x0
   25758:	b.eq	257d0 <OnPrint@@Base+0x1b0>  // b.none
   2575c:	ldrsw	x1, [sp, #72]
   25760:	ldr	x3, [sp, #120]
   25764:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   25768:	add	x2, x0, #0xbc8
   2576c:	ldr	x0, [sp, #144]
   25770:	bl	25b20 <OnPrint@@Base+0x500>
   25774:	mov	w1, w0
   25778:	ldr	w0, [sp, #156]
   2577c:	add	w0, w0, w1
   25780:	str	w0, [sp, #156]
   25784:	ldr	w1, [sp, #156]
   25788:	ldr	w0, [sp, #72]
   2578c:	cmp	w1, w0
   25790:	b.lt	257d0 <OnPrint@@Base+0x1b0>  // b.tstop
   25794:	ldr	w0, [sp, #140]
   25798:	cmp	w0, #0x0
   2579c:	b.eq	25900 <OnPrint@@Base+0x2e0>  // b.none
   257a0:	ldr	w1, [sp, #156]
   257a4:	mov	w0, #0x3fff                	// #16383
   257a8:	cmp	w1, w0
   257ac:	cset	w0, gt
   257b0:	and	w0, w0, #0xff
   257b4:	and	x0, x0, #0xff
   257b8:	cmp	x0, #0x0
   257bc:	b.eq	257d0 <OnPrint@@Base+0x1b0>  // b.none
   257c0:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   257c4:	add	x0, x0, #0xbd0
   257c8:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   257cc:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   257d0:	ldrsw	x0, [sp, #156]
   257d4:	ldr	x1, [sp, #144]
   257d8:	add	x4, x1, x0
   257dc:	ldr	w1, [sp, #72]
   257e0:	ldr	w0, [sp, #156]
   257e4:	sub	w0, w1, w0
   257e8:	sxtw	x1, w0
   257ec:	ldr	w3, [sp, #132]
   257f0:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   257f4:	add	x2, x0, #0xbf0
   257f8:	mov	x0, x4
   257fc:	bl	25b20 <OnPrint@@Base+0x500>
   25800:	mov	w1, w0
   25804:	ldr	w0, [sp, #156]
   25808:	add	w0, w0, w1
   2580c:	str	w0, [sp, #156]
   25810:	ldr	w1, [sp, #156]
   25814:	ldr	w0, [sp, #72]
   25818:	cmp	w1, w0
   2581c:	b.lt	2585c <OnPrint@@Base+0x23c>  // b.tstop
   25820:	ldr	w0, [sp, #140]
   25824:	cmp	w0, #0x0
   25828:	b.eq	25908 <OnPrint@@Base+0x2e8>  // b.none
   2582c:	ldr	w1, [sp, #156]
   25830:	mov	w0, #0x3fff                	// #16383
   25834:	cmp	w1, w0
   25838:	cset	w0, gt
   2583c:	and	w0, w0, #0xff
   25840:	and	x0, x0, #0xff
   25844:	cmp	x0, #0x0
   25848:	b.eq	2585c <OnPrint@@Base+0x23c>  // b.none
   2584c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   25850:	add	x0, x0, #0xbd0
   25854:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   25858:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2585c:	ldrsw	x0, [sp, #156]
   25860:	ldr	x1, [sp, #144]
   25864:	add	x4, x1, x0
   25868:	ldr	w1, [sp, #72]
   2586c:	ldr	w0, [sp, #156]
   25870:	sub	w5, w1, w0
   25874:	add	x2, sp, #0x10
   25878:	mov	x3, x19
   2587c:	ldp	x0, x1, [x3]
   25880:	stp	x0, x1, [x2]
   25884:	ldp	x0, x1, [x3, #16]
   25888:	stp	x0, x1, [x2, #16]
   2588c:	add	x0, sp, #0x10
   25890:	mov	x3, x0
   25894:	ldr	x2, [sp, #56]
   25898:	mov	w1, w5
   2589c:	mov	x0, x4
   258a0:	bl	24bb4 <__sanitizer_set_report_fd@@Base+0xaa08>
   258a4:	mov	w1, w0
   258a8:	ldr	w0, [sp, #156]
   258ac:	add	w0, w0, w1
   258b0:	str	w0, [sp, #156]
   258b4:	ldr	w1, [sp, #156]
   258b8:	ldr	w0, [sp, #72]
   258bc:	cmp	w1, w0
   258c0:	b.lt	25924 <OnPrint@@Base+0x304>  // b.tstop
   258c4:	ldr	w0, [sp, #140]
   258c8:	cmp	w0, #0x0
   258cc:	b.eq	25910 <OnPrint@@Base+0x2f0>  // b.none
   258d0:	ldr	w1, [sp, #156]
   258d4:	mov	w0, #0x3fff                	// #16383
   258d8:	cmp	w1, w0
   258dc:	cset	w0, gt
   258e0:	and	w0, w0, #0xff
   258e4:	and	x0, x0, #0xff
   258e8:	cmp	x0, #0x0
   258ec:	b.eq	25924 <OnPrint@@Base+0x304>  // b.none
   258f0:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   258f4:	add	x0, x0, #0xbd0
   258f8:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   258fc:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   25900:	nop
   25904:	b	25914 <OnPrint@@Base+0x2f4>
   25908:	nop
   2590c:	b	25914 <OnPrint@@Base+0x2f4>
   25910:	nop
   25914:	ldr	w0, [sp, #140]
   25918:	add	w0, w0, #0x1
   2591c:	str	w0, [sp, #140]
   25920:	b	256bc <OnPrint@@Base+0x9c>
   25924:	nop
   25928:	ldr	x0, [sp, #144]
   2592c:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   25930:	ldr	x0, [sp, #144]
   25934:	bl	13ecc <__sancov_default_options@@Base+0x3b20>
   25938:	ldr	x0, [sp, #144]
   2593c:	bl	25634 <OnPrint@@Base+0x14>
   25940:	ldr	x0, [sp, #144]
   25944:	bl	21940 <__sanitizer_set_report_fd@@Base+0x7794>
   25948:	ldr	x1, [sp, #144]
   2594c:	ldr	x0, [sp, #64]
   25950:	cmp	x1, x0
   25954:	b.eq	25968 <OnPrint@@Base+0x348>  // b.none
   25958:	ldrsw	x0, [sp, #72]
   2595c:	mov	x1, x0
   25960:	ldr	x0, [sp, #144]
   25964:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   25968:	nop
   2596c:	ldp	x19, x30, [sp], #160
   25970:	ret
   25974:	stp	x19, x30, [sp, #-464]!
   25978:	strb	w0, [sp, #63]
   2597c:	str	x1, [sp, #48]
   25980:	mov	x19, x2
   25984:	add	x2, sp, #0x10
   25988:	mov	x3, x19
   2598c:	ldp	x0, x1, [x3]
   25990:	stp	x0, x1, [x2]
   25994:	ldp	x0, x1, [x3, #16]
   25998:	stp	x0, x1, [x2, #16]
   2599c:	add	x1, sp, #0x10
   259a0:	add	x0, sp, #0x40
   259a4:	mov	x4, x1
   259a8:	ldr	x3, [sp, #48]
   259ac:	mov	w2, #0x190                 	// #400
   259b0:	mov	x1, x0
   259b4:	ldrb	w0, [sp, #63]
   259b8:	bl	25678 <OnPrint@@Base+0x58>
   259bc:	nop
   259c0:	ldp	x19, x30, [sp], #464
   259c4:	ret
   259c8:	sub	sp, sp, #0x120
   259cc:	str	x30, [sp]
   259d0:	str	x0, [sp, #56]
   259d4:	str	x1, [sp, #232]
   259d8:	str	x2, [sp, #240]
   259dc:	str	x3, [sp, #248]
   259e0:	str	x4, [sp, #256]
   259e4:	str	x5, [sp, #264]
   259e8:	str	x6, [sp, #272]
   259ec:	str	x7, [sp, #280]
   259f0:	str	q0, [sp, #96]
   259f4:	str	q1, [sp, #112]
   259f8:	str	q2, [sp, #128]
   259fc:	str	q3, [sp, #144]
   25a00:	str	q4, [sp, #160]
   25a04:	str	q5, [sp, #176]
   25a08:	str	q6, [sp, #192]
   25a0c:	str	q7, [sp, #208]
   25a10:	add	x0, sp, #0x120
   25a14:	str	x0, [sp, #64]
   25a18:	add	x0, sp, #0x120
   25a1c:	str	x0, [sp, #72]
   25a20:	add	x0, sp, #0xe0
   25a24:	str	x0, [sp, #80]
   25a28:	mov	w0, #0xffffffc8            	// #-56
   25a2c:	str	w0, [sp, #88]
   25a30:	mov	w0, #0xffffff80            	// #-128
   25a34:	str	w0, [sp, #92]
   25a38:	add	x2, sp, #0x10
   25a3c:	add	x3, sp, #0x40
   25a40:	ldp	x0, x1, [x3]
   25a44:	stp	x0, x1, [x2]
   25a48:	ldp	x0, x1, [x3, #16]
   25a4c:	stp	x0, x1, [x2, #16]
   25a50:	add	x0, sp, #0x10
   25a54:	mov	x2, x0
   25a58:	ldr	x1, [sp, #56]
   25a5c:	mov	w0, #0x0                   	// #0
   25a60:	bl	25974 <OnPrint@@Base+0x354>
   25a64:	nop
   25a68:	ldr	x30, [sp]
   25a6c:	add	sp, sp, #0x120
   25a70:	ret
   25a74:	sub	sp, sp, #0x120
   25a78:	str	x30, [sp]
   25a7c:	str	x0, [sp, #56]
   25a80:	str	x1, [sp, #232]
   25a84:	str	x2, [sp, #240]
   25a88:	str	x3, [sp, #248]
   25a8c:	str	x4, [sp, #256]
   25a90:	str	x5, [sp, #264]
   25a94:	str	x6, [sp, #272]
   25a98:	str	x7, [sp, #280]
   25a9c:	str	q0, [sp, #96]
   25aa0:	str	q1, [sp, #112]
   25aa4:	str	q2, [sp, #128]
   25aa8:	str	q3, [sp, #144]
   25aac:	str	q4, [sp, #160]
   25ab0:	str	q5, [sp, #176]
   25ab4:	str	q6, [sp, #192]
   25ab8:	str	q7, [sp, #208]
   25abc:	add	x0, sp, #0x120
   25ac0:	str	x0, [sp, #64]
   25ac4:	add	x0, sp, #0x120
   25ac8:	str	x0, [sp, #72]
   25acc:	add	x0, sp, #0xe0
   25ad0:	str	x0, [sp, #80]
   25ad4:	mov	w0, #0xffffffc8            	// #-56
   25ad8:	str	w0, [sp, #88]
   25adc:	mov	w0, #0xffffff80            	// #-128
   25ae0:	str	w0, [sp, #92]
   25ae4:	add	x2, sp, #0x10
   25ae8:	add	x3, sp, #0x40
   25aec:	ldp	x0, x1, [x3]
   25af0:	stp	x0, x1, [x2]
   25af4:	ldp	x0, x1, [x3, #16]
   25af8:	stp	x0, x1, [x2, #16]
   25afc:	add	x0, sp, #0x10
   25b00:	mov	x2, x0
   25b04:	ldr	x1, [sp, #56]
   25b08:	mov	w0, #0x1                   	// #1
   25b0c:	bl	25974 <OnPrint@@Base+0x354>
   25b10:	nop
   25b14:	ldr	x30, [sp]
   25b18:	add	sp, sp, #0x120
   25b1c:	ret
   25b20:	sub	sp, sp, #0x130
   25b24:	str	x30, [sp]
   25b28:	str	x0, [sp, #72]
   25b2c:	str	x1, [sp, #64]
   25b30:	str	x2, [sp, #56]
   25b34:	str	x3, [sp, #264]
   25b38:	str	x4, [sp, #272]
   25b3c:	str	x5, [sp, #280]
   25b40:	str	x6, [sp, #288]
   25b44:	str	x7, [sp, #296]
   25b48:	str	q0, [sp, #128]
   25b4c:	str	q1, [sp, #144]
   25b50:	str	q2, [sp, #160]
   25b54:	str	q3, [sp, #176]
   25b58:	str	q4, [sp, #192]
   25b5c:	str	q5, [sp, #208]
   25b60:	str	q6, [sp, #224]
   25b64:	str	q7, [sp, #240]
   25b68:	add	x0, sp, #0x130
   25b6c:	str	x0, [sp, #88]
   25b70:	add	x0, sp, #0x130
   25b74:	str	x0, [sp, #96]
   25b78:	add	x0, sp, #0x100
   25b7c:	str	x0, [sp, #104]
   25b80:	mov	w0, #0xffffffd8            	// #-40
   25b84:	str	w0, [sp, #112]
   25b88:	mov	w0, #0xffffff80            	// #-128
   25b8c:	str	w0, [sp, #116]
   25b90:	ldr	x0, [sp, #64]
   25b94:	mov	w4, w0
   25b98:	add	x2, sp, #0x10
   25b9c:	add	x3, sp, #0x58
   25ba0:	ldp	x0, x1, [x3]
   25ba4:	stp	x0, x1, [x2]
   25ba8:	ldp	x0, x1, [x3, #16]
   25bac:	stp	x0, x1, [x2, #16]
   25bb0:	add	x0, sp, #0x10
   25bb4:	mov	x3, x0
   25bb8:	ldr	x2, [sp, #56]
   25bbc:	mov	w1, w4
   25bc0:	ldr	x0, [sp, #72]
   25bc4:	bl	24bb4 <__sanitizer_set_report_fd@@Base+0xaa08>
   25bc8:	str	w0, [sp, #124]
   25bcc:	ldr	w0, [sp, #124]
   25bd0:	ldr	x30, [sp]
   25bd4:	add	sp, sp, #0x130
   25bd8:	ret
   25bdc:	stp	x19, x30, [sp, #-304]!
   25be0:	str	x0, [sp, #56]
   25be4:	str	x1, [sp, #48]
   25be8:	str	x2, [sp, #256]
   25bec:	str	x3, [sp, #264]
   25bf0:	str	x4, [sp, #272]
   25bf4:	str	x5, [sp, #280]
   25bf8:	str	x6, [sp, #288]
   25bfc:	str	x7, [sp, #296]
   25c00:	str	q0, [sp, #128]
   25c04:	str	q1, [sp, #144]
   25c08:	str	q2, [sp, #160]
   25c0c:	str	q3, [sp, #176]
   25c10:	str	q4, [sp, #192]
   25c14:	str	q5, [sp, #208]
   25c18:	str	q6, [sp, #224]
   25c1c:	str	q7, [sp, #240]
   25c20:	ldr	x0, [sp, #56]
   25c24:	ldr	x0, [x0, #24]
   25c28:	str	x0, [sp, #120]
   25c2c:	ldr	x0, [sp, #56]
   25c30:	bl	1a278 <__sanitizer_set_report_fd@@Base+0xcc>
   25c34:	str	x0, [sp, #112]
   25c38:	ldr	x1, [sp, #120]
   25c3c:	ldr	x0, [sp, #112]
   25c40:	cmp	x1, x0
   25c44:	cset	w0, cs  // cs = hs, nlast
   25c48:	and	w0, w0, #0xff
   25c4c:	and	x0, x0, #0xff
   25c50:	cmp	x0, #0x0
   25c54:	b.eq	25c78 <OnPrint@@Base+0x658>  // b.none
   25c58:	ldr	x4, [sp, #112]
   25c5c:	ldr	x3, [sp, #120]
   25c60:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   25c64:	add	x2, x0, #0xbf8
   25c68:	mov	w1, #0x15c                 	// #348
   25c6c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   25c70:	add	x0, x0, #0xb38
   25c74:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   25c78:	add	x0, sp, #0x130
   25c7c:	str	x0, [sp, #64]
   25c80:	add	x0, sp, #0x130
   25c84:	str	x0, [sp, #72]
   25c88:	add	x0, sp, #0x100
   25c8c:	str	x0, [sp, #80]
   25c90:	mov	w0, #0xffffffd0            	// #-48
   25c94:	str	w0, [sp, #88]
   25c98:	mov	w0, #0xffffff80            	// #-128
   25c9c:	str	w0, [sp, #92]
   25ca0:	ldr	x0, [sp, #56]
   25ca4:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   25ca8:	mov	x1, x0
   25cac:	ldr	x0, [sp, #56]
   25cb0:	ldr	x0, [x0, #24]
   25cb4:	add	x19, x1, x0
   25cb8:	ldr	x0, [sp, #56]
   25cbc:	bl	1a278 <__sanitizer_set_report_fd@@Base+0xcc>
   25cc0:	mov	w1, w0
   25cc4:	ldr	x0, [sp, #56]
   25cc8:	ldr	x0, [x0, #24]
   25ccc:	sub	w0, w1, w0
   25cd0:	mov	w4, w0
   25cd4:	add	x2, sp, #0x10
   25cd8:	add	x3, sp, #0x40
   25cdc:	ldp	x0, x1, [x3]
   25ce0:	stp	x0, x1, [x2]
   25ce4:	ldp	x0, x1, [x3, #16]
   25ce8:	stp	x0, x1, [x2, #16]
   25cec:	add	x0, sp, #0x10
   25cf0:	mov	x3, x0
   25cf4:	ldr	x2, [sp, #48]
   25cf8:	mov	w1, w4
   25cfc:	mov	x0, x19
   25d00:	bl	24bb4 <__sanitizer_set_report_fd@@Base+0xaa08>
   25d04:	ldr	x0, [sp, #56]
   25d08:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   25d0c:	mov	x1, x0
   25d10:	ldr	x0, [sp, #56]
   25d14:	ldr	x0, [x0, #24]
   25d18:	add	x0, x1, x0
   25d1c:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   25d20:	mov	x1, x0
   25d24:	ldr	x0, [sp, #56]
   25d28:	ldr	x0, [x0, #24]
   25d2c:	add	x1, x1, x0
   25d30:	ldr	x0, [sp, #56]
   25d34:	str	x1, [x0, #24]
   25d38:	ldr	x0, [sp, #56]
   25d3c:	ldr	x0, [x0, #24]
   25d40:	str	x0, [sp, #104]
   25d44:	ldr	x0, [sp, #56]
   25d48:	bl	1a278 <__sanitizer_set_report_fd@@Base+0xcc>
   25d4c:	str	x0, [sp, #96]
   25d50:	ldr	x1, [sp, #104]
   25d54:	ldr	x0, [sp, #96]
   25d58:	cmp	x1, x0
   25d5c:	cset	w0, cs  // cs = hs, nlast
   25d60:	and	w0, w0, #0xff
   25d64:	and	x0, x0, #0xff
   25d68:	cmp	x0, #0x0
   25d6c:	b.eq	25d90 <OnPrint@@Base+0x770>  // b.none
   25d70:	ldr	x4, [sp, #96]
   25d74:	ldr	x3, [sp, #104]
   25d78:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   25d7c:	add	x2, x0, #0xbf8
   25d80:	mov	w1, #0x162                 	// #354
   25d84:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   25d88:	add	x0, x0, #0xb38
   25d8c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   25d90:	nop
   25d94:	ldp	x19, x30, [sp], #304
   25d98:	ret
   25d9c:	sub	sp, sp, #0x10
   25da0:	strb	w0, [sp, #15]
   25da4:	ldrb	w0, [sp, #15]
   25da8:	cmp	w0, #0x2f
   25dac:	b.ls	25dc8 <OnPrint@@Base+0x7a8>  // b.plast
   25db0:	ldrb	w0, [sp, #15]
   25db4:	cmp	w0, #0x39
   25db8:	b.hi	25dc8 <OnPrint@@Base+0x7a8>  // b.pmore
   25dbc:	ldrb	w0, [sp, #15]
   25dc0:	sub	w0, w0, #0x30
   25dc4:	b	25e14 <OnPrint@@Base+0x7f4>
   25dc8:	ldrb	w0, [sp, #15]
   25dcc:	cmp	w0, #0x60
   25dd0:	b.ls	25dec <OnPrint@@Base+0x7cc>  // b.plast
   25dd4:	ldrb	w0, [sp, #15]
   25dd8:	cmp	w0, #0x66
   25ddc:	b.hi	25dec <OnPrint@@Base+0x7cc>  // b.pmore
   25de0:	ldrb	w0, [sp, #15]
   25de4:	sub	w0, w0, #0x57
   25de8:	b	25e14 <OnPrint@@Base+0x7f4>
   25dec:	ldrb	w0, [sp, #15]
   25df0:	cmp	w0, #0x40
   25df4:	b.ls	25e10 <OnPrint@@Base+0x7f0>  // b.plast
   25df8:	ldrb	w0, [sp, #15]
   25dfc:	cmp	w0, #0x46
   25e00:	b.hi	25e10 <OnPrint@@Base+0x7f0>  // b.pmore
   25e04:	ldrb	w0, [sp, #15]
   25e08:	sub	w0, w0, #0x37
   25e0c:	b	25e14 <OnPrint@@Base+0x7f4>
   25e10:	mov	w0, #0xffffffff            	// #-1
   25e14:	add	sp, sp, #0x10
   25e18:	ret
   25e1c:	str	x30, [sp, #-64]!
   25e20:	str	x0, [sp, #24]
   25e24:	str	w1, [sp, #20]
   25e28:	str	xzr, [sp, #56]
   25e2c:	ldr	w0, [sp, #20]
   25e30:	cmp	w0, #0x1
   25e34:	b.le	25e4c <OnPrint@@Base+0x82c>
   25e38:	ldr	w0, [sp, #20]
   25e3c:	cmp	w0, #0x10
   25e40:	b.gt	25e4c <OnPrint@@Base+0x82c>
   25e44:	mov	w0, #0x1                   	// #1
   25e48:	b	25e50 <OnPrint@@Base+0x830>
   25e4c:	mov	w0, #0x0                   	// #0
   25e50:	and	x0, x0, #0xff
   25e54:	str	x0, [sp, #48]
   25e58:	str	xzr, [sp, #40]
   25e5c:	ldr	x1, [sp, #48]
   25e60:	ldr	x0, [sp, #40]
   25e64:	cmp	x1, x0
   25e68:	cset	w0, eq  // eq = none
   25e6c:	and	w0, w0, #0xff
   25e70:	and	x0, x0, #0xff
   25e74:	cmp	x0, #0x0
   25e78:	b.eq	25e9c <OnPrint@@Base+0x87c>  // b.none
   25e7c:	ldr	x4, [sp, #40]
   25e80:	ldr	x3, [sp, #48]
   25e84:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   25e88:	add	x2, x0, #0xd80
   25e8c:	mov	w1, #0x27                  	// #39
   25e90:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   25e94:	add	x0, x0, #0xda8
   25e98:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   25e9c:	ldr	x0, [sp, #24]
   25ea0:	ldr	x0, [x0]
   25ea4:	ldrb	w0, [x0]
   25ea8:	bl	25d9c <OnPrint@@Base+0x77c>
   25eac:	str	w0, [sp, #36]
   25eb0:	ldr	w0, [sp, #36]
   25eb4:	cmp	w0, #0x0
   25eb8:	b.lt	25ed4 <OnPrint@@Base+0x8b4>  // b.tstop
   25ebc:	ldr	w1, [sp, #36]
   25ec0:	ldr	w0, [sp, #20]
   25ec4:	cmp	w1, w0
   25ec8:	b.ge	25ed4 <OnPrint@@Base+0x8b4>  // b.tcont
   25ecc:	mov	w0, #0x1                   	// #1
   25ed0:	b	25ed8 <OnPrint@@Base+0x8b8>
   25ed4:	mov	w0, #0x0                   	// #0
   25ed8:	cmp	w0, #0x0
   25edc:	b.eq	25f10 <OnPrint@@Base+0x8f0>  // b.none
   25ee0:	ldrsw	x1, [sp, #20]
   25ee4:	ldr	x0, [sp, #56]
   25ee8:	mul	x1, x1, x0
   25eec:	ldrsw	x0, [sp, #36]
   25ef0:	add	x0, x1, x0
   25ef4:	str	x0, [sp, #56]
   25ef8:	ldr	x0, [sp, #24]
   25efc:	ldr	x0, [x0]
   25f00:	add	x1, x0, #0x1
   25f04:	ldr	x0, [sp, #24]
   25f08:	str	x1, [x0]
   25f0c:	b	25e9c <OnPrint@@Base+0x87c>
   25f10:	ldr	x0, [sp, #56]
   25f14:	ldr	x30, [sp], #64
   25f18:	ret
   25f1c:	str	x30, [sp, #-48]!
   25f20:	strb	w0, [sp, #31]
   25f24:	ldrb	w0, [sp, #31]
   25f28:	bl	25d9c <OnPrint@@Base+0x77c>
   25f2c:	str	w0, [sp, #44]
   25f30:	ldr	w0, [sp, #44]
   25f34:	cmp	w0, #0x0
   25f38:	b.lt	25f50 <OnPrint@@Base+0x930>  // b.tstop
   25f3c:	ldr	w0, [sp, #44]
   25f40:	cmp	w0, #0x9
   25f44:	b.gt	25f50 <OnPrint@@Base+0x930>
   25f48:	mov	w0, #0x1                   	// #1
   25f4c:	b	25f54 <OnPrint@@Base+0x934>
   25f50:	mov	w0, #0x0                   	// #0
   25f54:	ldr	x30, [sp], #48
   25f58:	ret
   25f5c:	str	x30, [sp, #-32]!
   25f60:	str	x0, [sp, #24]
   25f64:	mov	w1, #0xa                   	// #10
   25f68:	ldr	x0, [sp, #24]
   25f6c:	bl	25e1c <OnPrint@@Base+0x7fc>
   25f70:	ldr	x30, [sp], #32
   25f74:	ret
   25f78:	str	x30, [sp, #-48]!
   25f7c:	strb	w0, [sp, #31]
   25f80:	ldrb	w0, [sp, #31]
   25f84:	bl	25d9c <OnPrint@@Base+0x77c>
   25f88:	str	w0, [sp, #44]
   25f8c:	ldr	w0, [sp, #44]
   25f90:	cmp	w0, #0x0
   25f94:	b.lt	25fac <OnPrint@@Base+0x98c>  // b.tstop
   25f98:	ldr	w0, [sp, #44]
   25f9c:	cmp	w0, #0xf
   25fa0:	b.gt	25fac <OnPrint@@Base+0x98c>
   25fa4:	mov	w0, #0x1                   	// #1
   25fa8:	b	25fb0 <OnPrint@@Base+0x990>
   25fac:	mov	w0, #0x0                   	// #0
   25fb0:	ldr	x30, [sp], #48
   25fb4:	ret
   25fb8:	str	x30, [sp, #-32]!
   25fbc:	str	x0, [sp, #24]
   25fc0:	mov	w1, #0x10                  	// #16
   25fc4:	ldr	x0, [sp, #24]
   25fc8:	bl	25e1c <OnPrint@@Base+0x7fc>
   25fcc:	ldr	x30, [sp], #32
   25fd0:	ret
   25fd4:	stp	x19, x20, [sp, #-64]!
   25fd8:	stp	x21, x30, [sp, #16]
   25fdc:	str	x0, [sp, #40]
   25fe0:	str	x1, [sp, #32]
   25fe4:	ldr	x0, [sp, #40]
   25fe8:	ldr	x0, [x0, #72]
   25fec:	cmp	x0, #0x0
   25ff0:	cset	w0, eq  // eq = none
   25ff4:	and	w0, w0, #0xff
   25ff8:	and	x0, x0, #0xff
   25ffc:	str	x0, [sp, #56]
   26000:	str	xzr, [sp, #48]
   26004:	ldr	x1, [sp, #56]
   26008:	ldr	x0, [sp, #48]
   2600c:	cmp	x1, x0
   26010:	cset	w0, eq  // eq = none
   26014:	and	w0, w0, #0xff
   26018:	and	x0, x0, #0xff
   2601c:	cmp	x0, #0x0
   26020:	b.eq	26044 <OnPrint@@Base+0xa24>  // b.none
   26024:	ldr	x4, [sp, #48]
   26028:	ldr	x3, [sp, #56]
   2602c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   26030:	add	x2, x0, #0xdf0
   26034:	mov	w1, #0x43                  	// #67
   26038:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   2603c:	add	x0, x0, #0xda8
   26040:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   26044:	ldr	x0, [sp, #40]
   26048:	ldr	x19, [x0]
   2604c:	ldr	x0, [sp, #40]
   26050:	ldr	x20, [x0, #8]
   26054:	ldr	x0, [sp, #40]
   26058:	bl	23110 <__sanitizer_set_report_fd@@Base+0x8f64>
   2605c:	and	w21, w0, #0xff
   26060:	ldr	x0, [sp, #40]
   26064:	bl	265d0 <OnPrint@@Base+0xfb0>
   26068:	and	w0, w0, #0xff
   2606c:	mov	x5, #0x0                   	// #0
   26070:	mov	w4, w0
   26074:	mov	w3, w21
   26078:	mov	x2, x20
   2607c:	mov	x1, x19
   26080:	ldr	x0, [sp, #32]
   26084:	bl	14150 <__sancov_default_options@@Base+0x3da4>
   26088:	nop
   2608c:	ldp	x21, x30, [sp, #16]
   26090:	ldp	x19, x20, [sp], #64
   26094:	ret
   26098:	str	x30, [sp, #-64]!
   2609c:	str	x0, [sp, #24]
   260a0:	strb	w1, [sp, #23]
   260a4:	ldrb	w0, [sp, #23]
   260a8:	cmp	w0, #0x0
   260ac:	b.eq	260b4 <OnPrint@@Base+0xa94>  // b.none
   260b0:	bl	26204 <OnPrint@@Base+0xbe4>
   260b4:	ldr	x0, [sp, #24]
   260b8:	bl	265f8 <OnPrint@@Base+0xfd8>
   260bc:	ldrb	w0, [sp, #23]
   260c0:	cmp	w0, #0x0
   260c4:	b.eq	260e0 <OnPrint@@Base+0xac0>  // b.none
   260c8:	ldr	x0, [sp, #24]
   260cc:	ldr	x0, [x0, #8]
   260d0:	cmp	x0, #0x0
   260d4:	b.ne	260e0 <OnPrint@@Base+0xac0>  // b.any
   260d8:	ldr	x0, [sp, #24]
   260dc:	bl	262a0 <OnPrint@@Base+0xc80>
   260e0:	ldr	x0, [sp, #24]
   260e4:	ldr	x0, [x0, #8]
   260e8:	str	x0, [sp, #56]
   260ec:	str	xzr, [sp, #48]
   260f0:	ldr	x1, [sp, #56]
   260f4:	ldr	x0, [sp, #48]
   260f8:	cmp	x1, x0
   260fc:	cset	w0, ls  // ls = plast
   26100:	and	w0, w0, #0xff
   26104:	and	x0, x0, #0xff
   26108:	cmp	x0, #0x0
   2610c:	b.eq	26130 <OnPrint@@Base+0xb10>  // b.none
   26110:	ldr	x4, [sp, #48]
   26114:	ldr	x3, [sp, #56]
   26118:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   2611c:	add	x2, x0, #0xe08
   26120:	mov	w1, #0x51                  	// #81
   26124:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   26128:	add	x0, x0, #0xda8
   2612c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   26130:	ldr	x0, [sp, #24]
   26134:	ldr	x0, [x0, #16]
   26138:	str	x0, [sp, #40]
   2613c:	str	xzr, [sp, #32]
   26140:	ldr	x1, [sp, #40]
   26144:	ldr	x0, [sp, #32]
   26148:	cmp	x1, x0
   2614c:	cset	w0, ls  // ls = plast
   26150:	and	w0, w0, #0xff
   26154:	and	x0, x0, #0xff
   26158:	cmp	x0, #0x0
   2615c:	b.eq	26180 <OnPrint@@Base+0xb60>  // b.none
   26160:	ldr	x4, [sp, #32]
   26164:	ldr	x3, [sp, #40]
   26168:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   2616c:	add	x2, x0, #0xe38
   26170:	mov	w1, #0x52                  	// #82
   26174:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   26178:	add	x0, x0, #0xda8
   2617c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   26180:	ldr	x0, [sp, #24]
   26184:	bl	261e0 <OnPrint@@Base+0xbc0>
   26188:	nop
   2618c:	ldr	x30, [sp], #64
   26190:	ret
   26194:	str	x30, [sp, #-32]!
   26198:	str	x0, [sp, #24]
   2619c:	ldr	x0, [sp, #24]
   261a0:	ldr	x1, [x0]
   261a4:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   261a8:	add	x0, x0, #0xde0
   261ac:	ldr	x0, [x0]
   261b0:	cmp	x1, x0
   261b4:	b.eq	261d4 <OnPrint@@Base+0xbb4>  // b.none
   261b8:	ldr	x0, [sp, #24]
   261bc:	ldr	x2, [x0]
   261c0:	ldr	x0, [sp, #24]
   261c4:	ldr	x0, [x0, #8]
   261c8:	mov	x1, x0
   261cc:	mov	x0, x2
   261d0:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   261d4:	nop
   261d8:	ldr	x30, [sp], #32
   261dc:	ret
   261e0:	sub	sp, sp, #0x10
   261e4:	str	x0, [sp, #8]
   261e8:	ldr	x0, [sp, #8]
   261ec:	ldr	x1, [x0]
   261f0:	ldr	x0, [sp, #8]
   261f4:	str	x1, [x0, #24]
   261f8:	nop
   261fc:	add	sp, sp, #0x10
   26200:	ret
   26204:	str	x30, [sp, #-48]!
   26208:	add	x0, sp, #0x18
   2620c:	bl	265f8 <OnPrint@@Base+0xfd8>
   26210:	ldr	x0, [sp, #32]
   26214:	cmp	x0, #0x0
   26218:	b.eq	26294 <OnPrint@@Base+0xc74>  // b.none
   2621c:	add	x2, sp, #0x10
   26220:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   26224:	add	x1, x0, #0xdf8
   26228:	mov	x0, x2
   2622c:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   26230:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   26234:	add	x0, x0, #0xde0
   26238:	ldr	x0, [x0, #8]
   2623c:	cmp	x0, #0x0
   26240:	b.eq	26268 <OnPrint@@Base+0xc48>  // b.none
   26244:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   26248:	add	x0, x0, #0xde0
   2624c:	ldr	x2, [x0]
   26250:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   26254:	add	x0, x0, #0xde0
   26258:	ldr	x0, [x0, #8]
   2625c:	mov	x1, x0
   26260:	mov	x0, x2
   26264:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   26268:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   2626c:	add	x0, x0, #0xde0
   26270:	mov	x3, x0
   26274:	add	x2, sp, #0x18
   26278:	ldp	x0, x1, [x2]
   2627c:	stp	x0, x1, [x3]
   26280:	ldr	x0, [x2, #16]
   26284:	str	x0, [x3, #16]
   26288:	add	x0, sp, #0x10
   2628c:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   26290:	b	26298 <OnPrint@@Base+0xc78>
   26294:	nop
   26298:	ldr	x30, [sp], #48
   2629c:	ret
   262a0:	str	x30, [sp, #-48]!
   262a4:	str	x0, [sp, #24]
   262a8:	add	x2, sp, #0x28
   262ac:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   262b0:	add	x1, x0, #0xdf8
   262b4:	mov	x0, x2
   262b8:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   262bc:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   262c0:	add	x0, x0, #0xde0
   262c4:	ldr	x0, [x0]
   262c8:	cmp	x0, #0x0
   262cc:	b.eq	262f4 <OnPrint@@Base+0xcd4>  // b.none
   262d0:	ldr	x1, [sp, #24]
   262d4:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   262d8:	add	x0, x0, #0xde0
   262dc:	mov	x2, x1
   262e0:	mov	x3, x0
   262e4:	ldp	x0, x1, [x3]
   262e8:	stp	x0, x1, [x2]
   262ec:	ldr	x0, [x3, #16]
   262f0:	str	x0, [x2, #16]
   262f4:	add	x0, sp, #0x28
   262f8:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   262fc:	nop
   26300:	ldr	x30, [sp], #48
   26304:	ret
   26308:	stp	x19, x30, [sp, #-240]!
   2630c:	str	x0, [sp, #24]
   26310:	str	x1, [sp, #16]
   26314:	ldr	x0, [sp, #24]
   26318:	bl	261e0 <OnPrint@@Base+0xbc0>
   2631c:	add	x0, sp, #0xb8
   26320:	mov	x1, #0x1000                	// #4096
   26324:	bl	89fc <__asan_backtrace_open@plt+0x1d8c>
   26328:	add	x0, sp, #0xb8
   2632c:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   26330:	mov	x19, x0
   26334:	add	x0, sp, #0xb8
   26338:	bl	1a278 <__sanitizer_set_report_fd@@Base+0xcc>
   2633c:	mov	x1, x0
   26340:	add	x0, sp, #0x68
   26344:	mov	x2, x1
   26348:	mov	x1, x19
   2634c:	bl	21c64 <__sanitizer_set_report_fd@@Base+0x7ab8>
   26350:	str	xzr, [sp, #232]
   26354:	add	x0, sp, #0x68
   26358:	mov	x1, x0
   2635c:	ldr	x0, [sp, #24]
   26360:	bl	266a8 <OnPrint@@Base+0x1088>
   26364:	and	w0, w0, #0xff
   26368:	cmp	w0, #0x0
   2636c:	b.eq	263f8 <OnPrint@@Base+0xdd8>  // b.none
   26370:	ldr	x0, [sp, #128]
   26374:	str	x0, [sp, #224]
   26378:	ldr	x0, [sp, #224]
   2637c:	ldrb	w0, [x0]
   26380:	cmp	w0, #0x0
   26384:	b.eq	263e4 <OnPrint@@Base+0xdc4>  // b.none
   26388:	ldr	x0, [sp, #232]
   2638c:	cmp	x0, #0x0
   26390:	b.eq	2639c <OnPrint@@Base+0xd7c>  // b.none
   26394:	ldr	x0, [sp, #104]
   26398:	b	263a0 <OnPrint@@Base+0xd80>
   2639c:	mov	x0, #0x0                   	// #0
   263a0:	ldr	x1, [sp, #120]
   263a4:	sub	x0, x0, x1
   263a8:	str	x0, [sp, #216]
   263ac:	add	x0, sp, #0x20
   263b0:	bl	21bc0 <__sanitizer_set_report_fd@@Base+0x7a14>
   263b4:	add	x0, sp, #0x20
   263b8:	ldr	x2, [sp, #216]
   263bc:	ldr	x1, [sp, #224]
   263c0:	bl	13ffc <__sancov_default_options@@Base+0x3c50>
   263c4:	add	x1, sp, #0x20
   263c8:	add	x0, sp, #0x68
   263cc:	bl	25fd4 <OnPrint@@Base+0x9b4>
   263d0:	add	x0, sp, #0x20
   263d4:	mov	x1, x0
   263d8:	ldr	x0, [sp, #16]
   263dc:	bl	21db4 <__sanitizer_set_report_fd@@Base+0x7c08>
   263e0:	b	263e8 <OnPrint@@Base+0xdc8>
   263e4:	nop
   263e8:	ldr	x0, [sp, #232]
   263ec:	add	x0, x0, #0x1
   263f0:	str	x0, [sp, #232]
   263f4:	b	26354 <OnPrint@@Base+0xd34>
   263f8:	add	x0, sp, #0x68
   263fc:	bl	21ca0 <__sanitizer_set_report_fd@@Base+0x7af4>
   26400:	add	x0, sp, #0xb8
   26404:	bl	9274 <__asan_backtrace_open@plt+0x2604>
   26408:	nop
   2640c:	ldp	x19, x30, [sp], #240
   26410:	ret
   26414:	str	x30, [sp, #-112]!
   26418:	str	x0, [sp, #40]
   2641c:	str	x1, [sp, #32]
   26420:	str	x2, [sp, #24]
   26424:	str	xzr, [sp, #80]
   26428:	str	xzr, [sp, #72]
   2642c:	str	xzr, [sp, #64]
   26430:	add	x2, sp, #0x40
   26434:	add	x1, sp, #0x48
   26438:	add	x0, sp, #0x50
   2643c:	mov	x5, #0x0                   	// #0
   26440:	mov	x4, #0x4000000             	// #67108864
   26444:	mov	x3, x2
   26448:	mov	x2, x1
   2644c:	mov	x1, x0
   26450:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   26454:	add	x0, x0, #0xe60
   26458:	bl	19bf0 <__sanitizer_cov_pcs_init@@Base+0x412c>
   2645c:	and	w0, w0, #0xff
   26460:	eor	w0, w0, #0x1
   26464:	and	w0, w0, #0xff
   26468:	cmp	w0, #0x0
   2646c:	b.ne	265c4 <OnPrint@@Base+0xfa4>  // b.any
   26470:	str	xzr, [sp, #104]
   26474:	strb	wzr, [sp, #103]
   26478:	ldr	x0, [sp, #80]
   2647c:	str	x0, [sp, #56]
   26480:	ldr	x1, [sp, #80]
   26484:	ldr	x0, [sp, #64]
   26488:	add	x1, x1, x0
   2648c:	ldr	x0, [sp, #56]
   26490:	cmp	x1, x0
   26494:	b.ls	265b4 <OnPrint@@Base+0xf94>  // b.plast
   26498:	ldr	x0, [sp, #56]
   2649c:	ldrb	w0, [x0]
   264a0:	bl	25f78 <OnPrint@@Base+0x958>
   264a4:	and	w0, w0, #0xff
   264a8:	cmp	w0, #0x0
   264ac:	b.eq	26504 <OnPrint@@Base+0xee4>  // b.none
   264b0:	add	x0, sp, #0x38
   264b4:	bl	25fb8 <OnPrint@@Base+0x998>
   264b8:	str	x0, [sp, #104]
   264bc:	ldr	x0, [sp, #56]
   264c0:	ldrb	w0, [x0]
   264c4:	cmp	w0, #0x2f
   264c8:	b.eq	264ec <OnPrint@@Base+0xecc>  // b.none
   264cc:	ldr	x0, [sp, #56]
   264d0:	ldrb	w0, [x0]
   264d4:	cmp	w0, #0xa
   264d8:	b.ls	264ec <OnPrint@@Base+0xecc>  // b.plast
   264dc:	ldr	x0, [sp, #56]
   264e0:	add	x0, x0, #0x1
   264e4:	str	x0, [sp, #56]
   264e8:	b	264bc <OnPrint@@Base+0xe9c>
   264ec:	ldr	x0, [sp, #56]
   264f0:	ldrb	w0, [x0]
   264f4:	cmp	w0, #0x2f
   264f8:	cset	w0, eq  // eq = none
   264fc:	strb	w0, [sp, #103]
   26500:	b	2658c <OnPrint@@Base+0xf6c>
   26504:	ldr	x3, [sp, #56]
   26508:	mov	x2, #0x4                   	// #4
   2650c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   26510:	add	x1, x0, #0xe78
   26514:	mov	x0, x3
   26518:	bl	1cb4c <__sanitizer_set_report_fd@@Base+0x29a0>
   2651c:	cmp	w0, #0x0
   26520:	cset	w0, eq  // eq = none
   26524:	and	w0, w0, #0xff
   26528:	cmp	w0, #0x0
   2652c:	b.eq	2658c <OnPrint@@Base+0xf6c>  // b.none
   26530:	ldr	x0, [sp, #56]
   26534:	ldrb	w0, [x0]
   26538:	bl	25f1c <OnPrint@@Base+0x8fc>
   2653c:	and	w0, w0, #0xff
   26540:	eor	w0, w0, #0x1
   26544:	and	w0, w0, #0xff
   26548:	cmp	w0, #0x0
   2654c:	b.eq	26560 <OnPrint@@Base+0xf40>  // b.none
   26550:	ldr	x0, [sp, #56]
   26554:	add	x0, x0, #0x1
   26558:	str	x0, [sp, #56]
   2655c:	b	26530 <OnPrint@@Base+0xf10>
   26560:	add	x0, sp, #0x38
   26564:	bl	25f5c <OnPrint@@Base+0x93c>
   26568:	lsl	x0, x0, #10
   2656c:	str	x0, [sp, #88]
   26570:	ldr	x5, [sp, #40]
   26574:	ldr	x4, [sp, #24]
   26578:	ldr	x3, [sp, #32]
   2657c:	ldrb	w2, [sp, #103]
   26580:	ldr	x1, [sp, #88]
   26584:	ldr	x0, [sp, #104]
   26588:	blr	x5
   2658c:	ldr	x0, [sp, #56]
   26590:	add	x1, x0, #0x1
   26594:	str	x1, [sp, #56]
   26598:	ldrb	w0, [x0]
   2659c:	cmp	w0, #0xa
   265a0:	cset	w0, ne  // ne = any
   265a4:	and	w0, w0, #0xff
   265a8:	cmp	w0, #0x0
   265ac:	b.eq	26480 <OnPrint@@Base+0xe60>  // b.none
   265b0:	b	2658c <OnPrint@@Base+0xf6c>
   265b4:	ldr	x0, [sp, #80]
   265b8:	ldr	x1, [sp, #72]
   265bc:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   265c0:	b	265c8 <OnPrint@@Base+0xfa8>
   265c4:	nop
   265c8:	ldr	x30, [sp], #112
   265cc:	ret
   265d0:	sub	sp, sp, #0x10
   265d4:	str	x0, [sp, #8]
   265d8:	ldr	x0, [sp, #8]
   265dc:	ldr	x0, [x0, #40]
   265e0:	and	x0, x0, #0x2
   265e4:	cmp	x0, #0x0
   265e8:	cset	w0, ne  // ne = any
   265ec:	and	w0, w0, #0xff
   265f0:	add	sp, sp, #0x10
   265f4:	ret
   265f8:	str	x30, [sp, #-32]!
   265fc:	str	x0, [sp, #24]
   26600:	ldr	x1, [sp, #24]
   26604:	ldr	x0, [sp, #24]
   26608:	add	x2, x0, #0x8
   2660c:	ldr	x0, [sp, #24]
   26610:	add	x0, x0, #0x10
   26614:	mov	x5, #0x0                   	// #0
   26618:	mov	x4, #0x4000000             	// #67108864
   2661c:	mov	x3, x0
   26620:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   26624:	add	x0, x0, #0xfb8
   26628:	bl	19bf0 <__sanitizer_cov_pcs_init@@Base+0x412c>
   2662c:	and	w0, w0, #0xff
   26630:	eor	w0, w0, #0x1
   26634:	and	w0, w0, #0xff
   26638:	cmp	w0, #0x0
   2663c:	b.eq	26658 <OnPrint@@Base+0x1038>  // b.none
   26640:	ldr	x0, [sp, #24]
   26644:	str	xzr, [x0]
   26648:	ldr	x0, [sp, #24]
   2664c:	str	xzr, [x0, #8]
   26650:	ldr	x0, [sp, #24]
   26654:	str	xzr, [x0, #16]
   26658:	nop
   2665c:	ldr	x30, [sp], #32
   26660:	ret
   26664:	sub	sp, sp, #0x10
   26668:	strb	w0, [sp, #15]
   2666c:	strb	w1, [sp, #14]
   26670:	strb	w2, [sp, #13]
   26674:	ldrb	w1, [sp, #15]
   26678:	ldrb	w0, [sp, #14]
   2667c:	cmp	w1, w0
   26680:	b.eq	26694 <OnPrint@@Base+0x1074>  // b.none
   26684:	ldrb	w1, [sp, #15]
   26688:	ldrb	w0, [sp, #13]
   2668c:	cmp	w1, w0
   26690:	b.ne	2669c <OnPrint@@Base+0x107c>  // b.any
   26694:	mov	w0, #0x1                   	// #1
   26698:	b	266a0 <OnPrint@@Base+0x1080>
   2669c:	mov	w0, #0x0                   	// #0
   266a0:	add	sp, sp, #0x10
   266a4:	ret
   266a8:	str	x30, [sp, #-224]!
   266ac:	str	x0, [sp, #24]
   266b0:	str	x1, [sp, #16]
   266b4:	ldr	x0, [sp, #24]
   266b8:	ldr	x1, [x0]
   266bc:	ldr	x0, [sp, #24]
   266c0:	ldr	x0, [x0, #16]
   266c4:	add	x0, x1, x0
   266c8:	str	x0, [sp, #208]
   266cc:	ldr	x0, [sp, #24]
   266d0:	ldr	x0, [x0, #24]
   266d4:	ldr	x1, [sp, #208]
   266d8:	cmp	x1, x0
   266dc:	b.hi	266e8 <OnPrint@@Base+0x10c8>  // b.pmore
   266e0:	mov	w0, #0x0                   	// #0
   266e4:	b	26d9c <OnPrint@@Base+0x177c>
   266e8:	ldr	x0, [sp, #24]
   266ec:	ldr	x3, [x0, #24]
   266f0:	ldr	x0, [sp, #24]
   266f4:	ldr	x0, [x0, #24]
   266f8:	ldr	x1, [sp, #208]
   266fc:	sub	x0, x1, x0
   26700:	mov	x2, x0
   26704:	mov	w1, #0xa                   	// #10
   26708:	mov	x0, x3
   2670c:	bl	1c588 <__sanitizer_set_report_fd@@Base+0x23dc>
   26710:	str	x0, [sp, #216]
   26714:	ldr	x0, [sp, #216]
   26718:	cmp	x0, #0x0
   2671c:	b.ne	26728 <OnPrint@@Base+0x1108>  // b.any
   26720:	ldr	x0, [sp, #208]
   26724:	str	x0, [sp, #216]
   26728:	ldr	x0, [sp, #24]
   2672c:	add	x0, x0, #0x18
   26730:	bl	25fb8 <OnPrint@@Base+0x998>
   26734:	mov	x1, x0
   26738:	ldr	x0, [sp, #16]
   2673c:	str	x1, [x0]
   26740:	ldr	x0, [sp, #24]
   26744:	ldr	x0, [x0, #24]
   26748:	add	x2, x0, #0x1
   2674c:	ldr	x1, [sp, #24]
   26750:	str	x2, [x1, #24]
   26754:	ldrb	w0, [x0]
   26758:	and	x0, x0, #0xff
   2675c:	str	x0, [sp, #200]
   26760:	mov	x0, #0x2d                  	// #45
   26764:	str	x0, [sp, #192]
   26768:	ldr	x1, [sp, #200]
   2676c:	ldr	x0, [sp, #192]
   26770:	cmp	x1, x0
   26774:	cset	w0, ne  // ne = any
   26778:	and	w0, w0, #0xff
   2677c:	and	x0, x0, #0xff
   26780:	cmp	x0, #0x0
   26784:	b.eq	267a8 <OnPrint@@Base+0x1188>  // b.none
   26788:	ldr	x4, [sp, #192]
   2678c:	ldr	x3, [sp, #200]
   26790:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   26794:	add	x2, x0, #0xfc8
   26798:	mov	w1, #0x28                  	// #40
   2679c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   267a0:	add	x0, x0, #0xfe8
   267a4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   267a8:	ldr	x0, [sp, #24]
   267ac:	add	x0, x0, #0x18
   267b0:	bl	25fb8 <OnPrint@@Base+0x998>
   267b4:	mov	x1, x0
   267b8:	ldr	x0, [sp, #16]
   267bc:	str	x1, [x0, #8]
   267c0:	ldr	x0, [sp, #24]
   267c4:	ldr	x0, [x0, #24]
   267c8:	add	x2, x0, #0x1
   267cc:	ldr	x1, [sp, #24]
   267d0:	str	x2, [x1, #24]
   267d4:	ldrb	w0, [x0]
   267d8:	and	x0, x0, #0xff
   267dc:	str	x0, [sp, #184]
   267e0:	mov	x0, #0x20                  	// #32
   267e4:	str	x0, [sp, #176]
   267e8:	ldr	x1, [sp, #184]
   267ec:	ldr	x0, [sp, #176]
   267f0:	cmp	x1, x0
   267f4:	cset	w0, ne  // ne = any
   267f8:	and	w0, w0, #0xff
   267fc:	and	x0, x0, #0xff
   26800:	cmp	x0, #0x0
   26804:	b.eq	26828 <OnPrint@@Base+0x1208>  // b.none
   26808:	ldr	x4, [sp, #176]
   2680c:	ldr	x3, [sp, #184]
   26810:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   26814:	add	x2, x0, #0x30
   26818:	mov	w1, #0x2a                  	// #42
   2681c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   26820:	add	x0, x0, #0xfe8
   26824:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   26828:	ldr	x0, [sp, #24]
   2682c:	ldr	x0, [x0, #24]
   26830:	ldrb	w0, [x0]
   26834:	mov	w2, #0x72                  	// #114
   26838:	mov	w1, #0x2d                  	// #45
   2683c:	bl	26664 <OnPrint@@Base+0x1044>
   26840:	and	w0, w0, #0xff
   26844:	and	x0, x0, #0xff
   26848:	str	x0, [sp, #168]
   2684c:	str	xzr, [sp, #160]
   26850:	ldr	x1, [sp, #168]
   26854:	ldr	x0, [sp, #160]
   26858:	cmp	x1, x0
   2685c:	cset	w0, eq  // eq = none
   26860:	and	w0, w0, #0xff
   26864:	and	x0, x0, #0xff
   26868:	cmp	x0, #0x0
   2686c:	b.eq	26890 <OnPrint@@Base+0x1270>  // b.none
   26870:	ldr	x4, [sp, #160]
   26874:	ldr	x3, [sp, #168]
   26878:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2687c:	add	x2, x0, #0x50
   26880:	mov	w1, #0x2b                  	// #43
   26884:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   26888:	add	x0, x0, #0xfe8
   2688c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   26890:	ldr	x0, [sp, #16]
   26894:	str	xzr, [x0, #40]
   26898:	ldr	x0, [sp, #24]
   2689c:	ldr	x0, [x0, #24]
   268a0:	add	x2, x0, #0x1
   268a4:	ldr	x1, [sp, #24]
   268a8:	str	x2, [x1, #24]
   268ac:	ldrb	w0, [x0]
   268b0:	cmp	w0, #0x72
   268b4:	cset	w0, eq  // eq = none
   268b8:	and	w0, w0, #0xff
   268bc:	cmp	w0, #0x0
   268c0:	b.eq	268d8 <OnPrint@@Base+0x12b8>  // b.none
   268c4:	ldr	x0, [sp, #16]
   268c8:	ldr	x0, [x0, #40]
   268cc:	orr	x1, x0, #0x1
   268d0:	ldr	x0, [sp, #16]
   268d4:	str	x1, [x0, #40]
   268d8:	ldr	x0, [sp, #24]
   268dc:	ldr	x0, [x0, #24]
   268e0:	ldrb	w0, [x0]
   268e4:	mov	w2, #0x77                  	// #119
   268e8:	mov	w1, #0x2d                  	// #45
   268ec:	bl	26664 <OnPrint@@Base+0x1044>
   268f0:	and	w0, w0, #0xff
   268f4:	and	x0, x0, #0xff
   268f8:	str	x0, [sp, #152]
   268fc:	str	xzr, [sp, #144]
   26900:	ldr	x1, [sp, #152]
   26904:	ldr	x0, [sp, #144]
   26908:	cmp	x1, x0
   2690c:	cset	w0, eq  // eq = none
   26910:	and	w0, w0, #0xff
   26914:	and	x0, x0, #0xff
   26918:	cmp	x0, #0x0
   2691c:	b.eq	26940 <OnPrint@@Base+0x1320>  // b.none
   26920:	ldr	x4, [sp, #144]
   26924:	ldr	x3, [sp, #152]
   26928:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2692c:	add	x2, x0, #0x80
   26930:	mov	w1, #0x2e                  	// #46
   26934:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   26938:	add	x0, x0, #0xfe8
   2693c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   26940:	ldr	x0, [sp, #24]
   26944:	ldr	x0, [x0, #24]
   26948:	add	x2, x0, #0x1
   2694c:	ldr	x1, [sp, #24]
   26950:	str	x2, [x1, #24]
   26954:	ldrb	w0, [x0]
   26958:	cmp	w0, #0x77
   2695c:	cset	w0, eq  // eq = none
   26960:	and	w0, w0, #0xff
   26964:	cmp	w0, #0x0
   26968:	b.eq	26980 <OnPrint@@Base+0x1360>  // b.none
   2696c:	ldr	x0, [sp, #16]
   26970:	ldr	x0, [x0, #40]
   26974:	orr	x1, x0, #0x2
   26978:	ldr	x0, [sp, #16]
   2697c:	str	x1, [x0, #40]
   26980:	ldr	x0, [sp, #24]
   26984:	ldr	x0, [x0, #24]
   26988:	ldrb	w0, [x0]
   2698c:	mov	w2, #0x78                  	// #120
   26990:	mov	w1, #0x2d                  	// #45
   26994:	bl	26664 <OnPrint@@Base+0x1044>
   26998:	and	w0, w0, #0xff
   2699c:	and	x0, x0, #0xff
   269a0:	str	x0, [sp, #136]
   269a4:	str	xzr, [sp, #128]
   269a8:	ldr	x1, [sp, #136]
   269ac:	ldr	x0, [sp, #128]
   269b0:	cmp	x1, x0
   269b4:	cset	w0, eq  // eq = none
   269b8:	and	w0, w0, #0xff
   269bc:	and	x0, x0, #0xff
   269c0:	cmp	x0, #0x0
   269c4:	b.eq	269e8 <OnPrint@@Base+0x13c8>  // b.none
   269c8:	ldr	x4, [sp, #128]
   269cc:	ldr	x3, [sp, #136]
   269d0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   269d4:	add	x2, x0, #0xb0
   269d8:	mov	w1, #0x30                  	// #48
   269dc:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   269e0:	add	x0, x0, #0xfe8
   269e4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   269e8:	ldr	x0, [sp, #24]
   269ec:	ldr	x0, [x0, #24]
   269f0:	add	x2, x0, #0x1
   269f4:	ldr	x1, [sp, #24]
   269f8:	str	x2, [x1, #24]
   269fc:	ldrb	w0, [x0]
   26a00:	cmp	w0, #0x78
   26a04:	cset	w0, eq  // eq = none
   26a08:	and	w0, w0, #0xff
   26a0c:	cmp	w0, #0x0
   26a10:	b.eq	26a28 <OnPrint@@Base+0x1408>  // b.none
   26a14:	ldr	x0, [sp, #16]
   26a18:	ldr	x0, [x0, #40]
   26a1c:	orr	x1, x0, #0x4
   26a20:	ldr	x0, [sp, #16]
   26a24:	str	x1, [x0, #40]
   26a28:	ldr	x0, [sp, #24]
   26a2c:	ldr	x0, [x0, #24]
   26a30:	ldrb	w0, [x0]
   26a34:	mov	w2, #0x70                  	// #112
   26a38:	mov	w1, #0x73                  	// #115
   26a3c:	bl	26664 <OnPrint@@Base+0x1044>
   26a40:	and	w0, w0, #0xff
   26a44:	and	x0, x0, #0xff
   26a48:	str	x0, [sp, #120]
   26a4c:	str	xzr, [sp, #112]
   26a50:	ldr	x1, [sp, #120]
   26a54:	ldr	x0, [sp, #112]
   26a58:	cmp	x1, x0
   26a5c:	cset	w0, eq  // eq = none
   26a60:	and	w0, w0, #0xff
   26a64:	and	x0, x0, #0xff
   26a68:	cmp	x0, #0x0
   26a6c:	b.eq	26a90 <OnPrint@@Base+0x1470>  // b.none
   26a70:	ldr	x4, [sp, #112]
   26a74:	ldr	x3, [sp, #120]
   26a78:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   26a7c:	add	x2, x0, #0xe0
   26a80:	mov	w1, #0x32                  	// #50
   26a84:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   26a88:	add	x0, x0, #0xfe8
   26a8c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   26a90:	ldr	x0, [sp, #24]
   26a94:	ldr	x0, [x0, #24]
   26a98:	add	x2, x0, #0x1
   26a9c:	ldr	x1, [sp, #24]
   26aa0:	str	x2, [x1, #24]
   26aa4:	ldrb	w0, [x0]
   26aa8:	cmp	w0, #0x73
   26aac:	cset	w0, eq  // eq = none
   26ab0:	and	w0, w0, #0xff
   26ab4:	cmp	w0, #0x0
   26ab8:	b.eq	26ad0 <OnPrint@@Base+0x14b0>  // b.none
   26abc:	ldr	x0, [sp, #16]
   26ac0:	ldr	x0, [x0, #40]
   26ac4:	orr	x1, x0, #0x8
   26ac8:	ldr	x0, [sp, #16]
   26acc:	str	x1, [x0, #40]
   26ad0:	ldr	x0, [sp, #24]
   26ad4:	ldr	x0, [x0, #24]
   26ad8:	add	x2, x0, #0x1
   26adc:	ldr	x1, [sp, #24]
   26ae0:	str	x2, [x1, #24]
   26ae4:	ldrb	w0, [x0]
   26ae8:	and	x0, x0, #0xff
   26aec:	str	x0, [sp, #104]
   26af0:	mov	x0, #0x20                  	// #32
   26af4:	str	x0, [sp, #96]
   26af8:	ldr	x1, [sp, #104]
   26afc:	ldr	x0, [sp, #96]
   26b00:	cmp	x1, x0
   26b04:	cset	w0, ne  // ne = any
   26b08:	and	w0, w0, #0xff
   26b0c:	and	x0, x0, #0xff
   26b10:	cmp	x0, #0x0
   26b14:	b.eq	26b38 <OnPrint@@Base+0x1518>  // b.none
   26b18:	ldr	x4, [sp, #96]
   26b1c:	ldr	x3, [sp, #104]
   26b20:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   26b24:	add	x2, x0, #0x30
   26b28:	mov	w1, #0x34                  	// #52
   26b2c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   26b30:	add	x0, x0, #0xfe8
   26b34:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   26b38:	ldr	x0, [sp, #24]
   26b3c:	add	x0, x0, #0x18
   26b40:	bl	25fb8 <OnPrint@@Base+0x998>
   26b44:	mov	x1, x0
   26b48:	ldr	x0, [sp, #16]
   26b4c:	str	x1, [x0, #16]
   26b50:	ldr	x0, [sp, #24]
   26b54:	ldr	x0, [x0, #24]
   26b58:	add	x2, x0, #0x1
   26b5c:	ldr	x1, [sp, #24]
   26b60:	str	x2, [x1, #24]
   26b64:	ldrb	w0, [x0]
   26b68:	and	x0, x0, #0xff
   26b6c:	str	x0, [sp, #88]
   26b70:	mov	x0, #0x20                  	// #32
   26b74:	str	x0, [sp, #80]
   26b78:	ldr	x1, [sp, #88]
   26b7c:	ldr	x0, [sp, #80]
   26b80:	cmp	x1, x0
   26b84:	cset	w0, ne  // ne = any
   26b88:	and	w0, w0, #0xff
   26b8c:	and	x0, x0, #0xff
   26b90:	cmp	x0, #0x0
   26b94:	b.eq	26bb8 <OnPrint@@Base+0x1598>  // b.none
   26b98:	ldr	x4, [sp, #80]
   26b9c:	ldr	x3, [sp, #88]
   26ba0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   26ba4:	add	x2, x0, #0x30
   26ba8:	mov	w1, #0x36                  	// #54
   26bac:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   26bb0:	add	x0, x0, #0xfe8
   26bb4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   26bb8:	ldr	x0, [sp, #24]
   26bbc:	add	x0, x0, #0x18
   26bc0:	bl	25fb8 <OnPrint@@Base+0x998>
   26bc4:	ldr	x0, [sp, #24]
   26bc8:	ldr	x0, [x0, #24]
   26bcc:	add	x2, x0, #0x1
   26bd0:	ldr	x1, [sp, #24]
   26bd4:	str	x2, [x1, #24]
   26bd8:	ldrb	w0, [x0]
   26bdc:	and	x0, x0, #0xff
   26be0:	str	x0, [sp, #72]
   26be4:	mov	x0, #0x3a                  	// #58
   26be8:	str	x0, [sp, #64]
   26bec:	ldr	x1, [sp, #72]
   26bf0:	ldr	x0, [sp, #64]
   26bf4:	cmp	x1, x0
   26bf8:	cset	w0, ne  // ne = any
   26bfc:	and	w0, w0, #0xff
   26c00:	and	x0, x0, #0xff
   26c04:	cmp	x0, #0x0
   26c08:	b.eq	26c2c <OnPrint@@Base+0x160c>  // b.none
   26c0c:	ldr	x4, [sp, #64]
   26c10:	ldr	x3, [sp, #72]
   26c14:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   26c18:	add	x2, x0, #0x110
   26c1c:	mov	w1, #0x38                  	// #56
   26c20:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   26c24:	add	x0, x0, #0xfe8
   26c28:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   26c2c:	ldr	x0, [sp, #24]
   26c30:	add	x0, x0, #0x18
   26c34:	bl	25fb8 <OnPrint@@Base+0x998>
   26c38:	ldr	x0, [sp, #24]
   26c3c:	ldr	x0, [x0, #24]
   26c40:	add	x2, x0, #0x1
   26c44:	ldr	x1, [sp, #24]
   26c48:	str	x2, [x1, #24]
   26c4c:	ldrb	w0, [x0]
   26c50:	and	x0, x0, #0xff
   26c54:	str	x0, [sp, #56]
   26c58:	mov	x0, #0x20                  	// #32
   26c5c:	str	x0, [sp, #48]
   26c60:	ldr	x1, [sp, #56]
   26c64:	ldr	x0, [sp, #48]
   26c68:	cmp	x1, x0
   26c6c:	cset	w0, ne  // ne = any
   26c70:	and	w0, w0, #0xff
   26c74:	and	x0, x0, #0xff
   26c78:	cmp	x0, #0x0
   26c7c:	b.eq	26ca0 <OnPrint@@Base+0x1680>  // b.none
   26c80:	ldr	x4, [sp, #48]
   26c84:	ldr	x3, [sp, #56]
   26c88:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   26c8c:	add	x2, x0, #0x30
   26c90:	mov	w1, #0x3a                  	// #58
   26c94:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x7970>
   26c98:	add	x0, x0, #0xfe8
   26c9c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   26ca0:	ldr	x0, [sp, #24]
   26ca4:	ldr	x0, [x0, #24]
   26ca8:	ldrb	w0, [x0]
   26cac:	bl	25f1c <OnPrint@@Base+0x8fc>
   26cb0:	and	w0, w0, #0xff
   26cb4:	cmp	w0, #0x0
   26cb8:	b.eq	26cd4 <OnPrint@@Base+0x16b4>  // b.none
   26cbc:	ldr	x0, [sp, #24]
   26cc0:	ldr	x0, [x0, #24]
   26cc4:	add	x1, x0, #0x1
   26cc8:	ldr	x0, [sp, #24]
   26ccc:	str	x1, [x0, #24]
   26cd0:	b	26ca0 <OnPrint@@Base+0x1680>
   26cd4:	ldr	x0, [sp, #24]
   26cd8:	ldr	x0, [x0, #24]
   26cdc:	ldr	x1, [sp, #216]
   26ce0:	cmp	x1, x0
   26ce4:	b.ls	26d14 <OnPrint@@Base+0x16f4>  // b.plast
   26ce8:	ldr	x0, [sp, #24]
   26cec:	ldr	x0, [x0, #24]
   26cf0:	ldrb	w0, [x0]
   26cf4:	cmp	w0, #0x20
   26cf8:	b.ne	26d14 <OnPrint@@Base+0x16f4>  // b.any
   26cfc:	ldr	x0, [sp, #24]
   26d00:	ldr	x0, [x0, #24]
   26d04:	add	x1, x0, #0x1
   26d08:	ldr	x0, [sp, #24]
   26d0c:	str	x1, [x0, #24]
   26d10:	b	26cd4 <OnPrint@@Base+0x16b4>
   26d14:	ldr	x0, [sp, #16]
   26d18:	ldr	x0, [x0, #24]
   26d1c:	cmp	x0, #0x0
   26d20:	b.eq	26d88 <OnPrint@@Base+0x1768>  // b.none
   26d24:	ldr	x0, [sp, #24]
   26d28:	ldr	x0, [x0, #24]
   26d2c:	ldr	x1, [sp, #216]
   26d30:	sub	x0, x1, x0
   26d34:	mov	x2, x0
   26d38:	ldr	x0, [sp, #16]
   26d3c:	ldr	x0, [x0, #32]
   26d40:	sub	x0, x0, #0x1
   26d44:	mov	x1, x0
   26d48:	mov	x0, x2
   26d4c:	bl	9374 <__asan_backtrace_open@plt+0x2704>
   26d50:	str	x0, [sp, #40]
   26d54:	ldr	x0, [sp, #16]
   26d58:	ldr	x3, [x0, #24]
   26d5c:	ldr	x0, [sp, #24]
   26d60:	ldr	x0, [x0, #24]
   26d64:	ldr	x2, [sp, #40]
   26d68:	mov	x1, x0
   26d6c:	mov	x0, x3
   26d70:	bl	1cf6c <__sanitizer_set_report_fd@@Base+0x2dc0>
   26d74:	ldr	x0, [sp, #16]
   26d78:	ldr	x1, [x0, #24]
   26d7c:	ldr	x0, [sp, #40]
   26d80:	add	x0, x1, x0
   26d84:	strb	wzr, [x0]
   26d88:	ldr	x0, [sp, #216]
   26d8c:	add	x1, x0, #0x1
   26d90:	ldr	x0, [sp, #24]
   26d94:	str	x1, [x0, #24]
   26d98:	mov	w0, #0x1                   	// #1
   26d9c:	ldr	x30, [sp], #224
   26da0:	ret
   26da4:	sub	sp, sp, #0x10
   26da8:	str	x0, [sp, #8]
   26dac:	ldr	x0, [sp, #8]
   26db0:	ldr	x0, [x0]
   26db4:	ldr	w0, [x0, #8]
   26db8:	add	sp, sp, #0x10
   26dbc:	ret
   26dc0:	str	x30, [sp, #-32]!
   26dc4:	str	x0, [sp, #24]
   26dc8:	ldr	x0, [sp, #24]
   26dcc:	ldr	x0, [x0]
   26dd0:	add	x0, x0, #0xc
   26dd4:	mov	w1, #0x1                   	// #1
   26dd8:	bl	9b44 <__ubsan_default_options@@Base+0x4e0>
   26ddc:	and	w0, w0, #0xfffff
   26de0:	ldr	x30, [sp], #32
   26de4:	ret
   26de8:	str	x30, [sp, #-64]!
   26dec:	str	x0, [sp, #24]
   26df0:	ldr	x0, [sp, #24]
   26df4:	ldr	x0, [x0]
   26df8:	add	x0, x0, #0xc
   26dfc:	mov	w2, #0x1                   	// #1
   26e00:	mov	w1, #0x1                   	// #1
   26e04:	bl	27754 <OnPrint@@Base+0x2134>
   26e08:	and	w0, w0, #0xfffff
   26e0c:	str	w0, [sp, #60]
   26e10:	ldr	w0, [sp, #60]
   26e14:	add	w0, w0, #0x1
   26e18:	mov	w0, w0
   26e1c:	str	x0, [sp, #48]
   26e20:	mov	x0, #0x100000              	// #1048576
   26e24:	str	x0, [sp, #40]
   26e28:	ldr	x1, [sp, #48]
   26e2c:	ldr	x0, [sp, #40]
   26e30:	cmp	x1, x0
   26e34:	cset	w0, cs  // cs = hs, nlast
   26e38:	and	w0, w0, #0xff
   26e3c:	and	x0, x0, #0xff
   26e40:	cmp	x0, #0x0
   26e44:	b.eq	26e68 <OnPrint@@Base+0x1848>  // b.none
   26e48:	ldr	x4, [sp, #40]
   26e4c:	ldr	x3, [sp, #48]
   26e50:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   26e54:	add	x2, x0, #0x260
   26e58:	mov	w1, #0x61                  	// #97
   26e5c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   26e60:	add	x0, x0, #0x290
   26e64:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   26e68:	nop
   26e6c:	ldr	x30, [sp], #64
   26e70:	ret
   26e74:	str	x30, [sp, #-16]!
   26e78:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   26e7c:	add	x0, x0, #0xe00
   26e80:	bl	277c0 <OnPrint@@Base+0x21a0>
   26e84:	ldr	x30, [sp], #16
   26e88:	ret
   26e8c:	str	x30, [sp, #-48]!
   26e90:	stp	x0, x1, [sp, #16]
   26e94:	mov	x3, #0x0                   	// #0
   26e98:	ldp	x1, x2, [sp, #16]
   26e9c:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   26ea0:	add	x0, x0, #0xe00
   26ea4:	bl	277e0 <OnPrint@@Base+0x21c0>
   26ea8:	str	x0, [sp, #40]
   26eac:	add	x0, sp, #0x28
   26eb0:	bl	27210 <OnPrint@@Base+0x1bf0>
   26eb4:	and	w0, w0, #0xff
   26eb8:	cmp	w0, #0x0
   26ebc:	b.eq	26ecc <OnPrint@@Base+0x18ac>  // b.none
   26ec0:	add	x0, sp, #0x28
   26ec4:	bl	26da4 <OnPrint@@Base+0x1784>
   26ec8:	b	26ed0 <OnPrint@@Base+0x18b0>
   26ecc:	mov	w0, #0x0                   	// #0
   26ed0:	ldr	x30, [sp], #48
   26ed4:	ret
   26ed8:	str	x30, [sp, #-32]!
   26edc:	stp	x0, x1, [sp, #16]
   26ee0:	mov	x3, #0x0                   	// #0
   26ee4:	ldp	x1, x2, [sp, #16]
   26ee8:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   26eec:	add	x0, x0, #0xe00
   26ef0:	bl	277e0 <OnPrint@@Base+0x21c0>
   26ef4:	ldr	x30, [sp], #32
   26ef8:	ret
   26efc:	str	x30, [sp, #-32]!
   26f00:	str	w0, [sp, #28]
   26f04:	ldr	w1, [sp, #28]
   26f08:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   26f0c:	add	x0, x0, #0xe00
   26f10:	bl	27af4 <OnPrint@@Base+0x24d4>
   26f14:	ldr	x30, [sp], #32
   26f18:	ret
   26f1c:	str	x30, [sp, #-16]!
   26f20:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   26f24:	add	x0, x0, #0xe00
   26f28:	bl	27c84 <OnPrint@@Base+0x2664>
   26f2c:	nop
   26f30:	ldr	x30, [sp], #16
   26f34:	ret
   26f38:	str	x30, [sp, #-16]!
   26f3c:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   26f40:	add	x0, x0, #0xe00
   26f44:	bl	27cd0 <OnPrint@@Base+0x26b0>
   26f48:	nop
   26f4c:	ldr	x30, [sp], #16
   26f50:	ret
   26f54:	sub	sp, sp, #0x10
   26f58:	str	x0, [sp, #8]
   26f5c:	str	x1, [sp]
   26f60:	ldr	x0, [sp, #8]
   26f64:	ldr	w1, [x0]
   26f68:	ldr	x0, [sp]
   26f6c:	ldr	w0, [x0]
   26f70:	cmp	w1, w0
   26f74:	cset	w0, cc  // cc = lo, ul, last
   26f78:	and	w0, w0, #0xff
   26f7c:	add	sp, sp, #0x10
   26f80:	ret
   26f84:	stp	x19, x30, [sp, #-80]!
   26f88:	str	x0, [sp, #24]
   26f8c:	ldr	x0, [sp, #24]
   26f90:	bl	27d40 <OnPrint@@Base+0x2720>
   26f94:	ldr	x19, [sp, #24]
   26f98:	bl	26e74 <OnPrint@@Base+0x1854>
   26f9c:	ldr	x0, [x0]
   26fa0:	add	x0, x0, #0x64
   26fa4:	mov	x1, x0
   26fa8:	mov	x0, x19
   26fac:	bl	27d60 <OnPrint@@Base+0x2740>
   26fb0:	str	wzr, [sp, #76]
   26fb4:	ldr	w1, [sp, #76]
   26fb8:	mov	w0, #0xfffff               	// #1048575
   26fbc:	cmp	w1, w0
   26fc0:	b.gt	27044 <OnPrint@@Base+0x1a24>
   26fc4:	ldrsw	x0, [sp, #76]
   26fc8:	lsl	x1, x0, #3
   26fcc:	adrp	x0, 1ca000 <__ubsan_vptr_type_cache@@Base+0x1501b8>
   26fd0:	add	x0, x0, #0xe00
   26fd4:	add	x0, x1, x0
   26fd8:	str	x0, [sp, #56]
   26fdc:	mov	w1, #0x2                   	// #2
   26fe0:	ldr	x0, [sp, #56]
   26fe4:	bl	11080 <__sancov_default_options@@Base+0xcd4>
   26fe8:	str	x0, [sp, #48]
   26fec:	ldr	x0, [sp, #48]
   26ff0:	and	x0, x0, #0xfffffffffffffffe
   26ff4:	str	x0, [sp, #64]
   26ff8:	ldr	x0, [sp, #64]
   26ffc:	cmp	x0, #0x0
   27000:	b.eq	27034 <OnPrint@@Base+0x1a14>  // b.none
   27004:	ldr	x0, [sp, #64]
   27008:	ldr	w0, [x0, #8]
   2700c:	str	w0, [sp, #32]
   27010:	ldr	x0, [sp, #64]
   27014:	str	x0, [sp, #40]
   27018:	ldr	x0, [sp, #24]
   2701c:	add	x1, sp, #0x20
   27020:	bl	27da8 <OnPrint@@Base+0x2788>
   27024:	ldr	x0, [sp, #64]
   27028:	ldr	x0, [x0]
   2702c:	str	x0, [sp, #64]
   27030:	b	26ff8 <OnPrint@@Base+0x19d8>
   27034:	ldr	w0, [sp, #76]
   27038:	add	w0, w0, #0x1
   2703c:	str	w0, [sp, #76]
   27040:	b	26fb4 <OnPrint@@Base+0x1994>
   27044:	ldr	x0, [sp, #24]
   27048:	bl	27e8c <OnPrint@@Base+0x286c>
   2704c:	mov	x19, x0
   27050:	ldr	x0, [sp, #24]
   27054:	bl	27ea4 <OnPrint@@Base+0x2884>
   27058:	mov	x1, x0
   2705c:	adrp	x0, 26000 <OnPrint@@Base+0x9e0>
   27060:	add	x2, x0, #0xf54
   27064:	mov	x0, x19
   27068:	bl	27ebc <OnPrint@@Base+0x289c>
   2706c:	nop
   27070:	ldp	x19, x30, [sp], #80
   27074:	ret
   27078:	stp	x19, x30, [sp, #-96]!
   2707c:	str	x0, [sp, #24]
   27080:	str	w1, [sp, #20]
   27084:	ldr	x0, [sp, #24]
   27088:	bl	27ea4 <OnPrint@@Base+0x2884>
   2708c:	cmp	x0, #0x0
   27090:	cset	w0, eq  // eq = none
   27094:	and	w0, w0, #0xff
   27098:	cmp	w0, #0x0
   2709c:	b.eq	270b0 <OnPrint@@Base+0x1a90>  // b.none
   270a0:	add	x0, sp, #0x38
   270a4:	bl	27160 <OnPrint@@Base+0x1b40>
   270a8:	ldp	x0, x1, [sp, #56]
   270ac:	b	27158 <OnPrint@@Base+0x1b38>
   270b0:	stp	xzr, xzr, [sp, #40]
   270b4:	ldr	w0, [sp, #20]
   270b8:	str	w0, [sp, #40]
   270bc:	ldr	x19, [sp, #24]
   270c0:	ldr	x0, [sp, #24]
   270c4:	bl	27ea4 <OnPrint@@Base+0x2884>
   270c8:	mov	x2, x0
   270cc:	add	x1, sp, #0x28
   270d0:	adrp	x0, 26000 <OnPrint@@Base+0x9e0>
   270d4:	add	x4, x0, #0xf54
   270d8:	mov	x3, x1
   270dc:	mov	x1, #0x0                   	// #0
   270e0:	mov	x0, x19
   270e4:	bl	28144 <OnPrint@@Base+0x2b24>
   270e8:	str	x0, [sp, #88]
   270ec:	ldr	x0, [sp, #24]
   270f0:	bl	27ea4 <OnPrint@@Base+0x2884>
   270f4:	mov	x1, x0
   270f8:	ldr	x0, [sp, #88]
   270fc:	cmp	x0, x1
   27100:	b.hi	27120 <OnPrint@@Base+0x1b00>  // b.pmore
   27104:	ldr	x0, [sp, #24]
   27108:	ldr	x1, [sp, #88]
   2710c:	bl	281cc <OnPrint@@Base+0x2bac>
   27110:	ldr	w0, [x0]
   27114:	ldr	w1, [sp, #20]
   27118:	cmp	w1, w0
   2711c:	b.eq	27128 <OnPrint@@Base+0x1b08>  // b.none
   27120:	mov	w0, #0x1                   	// #1
   27124:	b	2712c <OnPrint@@Base+0x1b0c>
   27128:	mov	w0, #0x0                   	// #0
   2712c:	cmp	w0, #0x0
   27130:	b.eq	27144 <OnPrint@@Base+0x1b24>  // b.none
   27134:	add	x0, sp, #0x48
   27138:	bl	27160 <OnPrint@@Base+0x1b40>
   2713c:	ldp	x0, x1, [sp, #72]
   27140:	b	27158 <OnPrint@@Base+0x1b38>
   27144:	ldr	x0, [sp, #24]
   27148:	ldr	x1, [sp, #88]
   2714c:	bl	281cc <OnPrint@@Base+0x2bac>
   27150:	ldr	x0, [x0, #8]
   27154:	bl	27700 <OnPrint@@Base+0x20e0>
   27158:	ldp	x19, x30, [sp], #96
   2715c:	ret
   27160:	sub	sp, sp, #0x10
   27164:	str	x0, [sp, #8]
   27168:	ldr	x0, [sp, #8]
   2716c:	str	xzr, [x0]
   27170:	ldr	x0, [sp, #8]
   27174:	str	wzr, [x0, #8]
   27178:	ldr	x0, [sp, #8]
   2717c:	str	wzr, [x0, #12]
   27180:	nop
   27184:	add	sp, sp, #0x10
   27188:	ret
   2718c:	sub	sp, sp, #0x20
   27190:	str	x0, [sp, #24]
   27194:	str	x1, [sp, #16]
   27198:	str	w2, [sp, #12]
   2719c:	str	w3, [sp, #8]
   271a0:	ldr	x0, [sp, #24]
   271a4:	ldr	x1, [sp, #16]
   271a8:	str	x1, [x0]
   271ac:	ldr	x0, [sp, #24]
   271b0:	ldr	w1, [sp, #12]
   271b4:	str	w1, [x0, #8]
   271b8:	ldr	x0, [sp, #24]
   271bc:	ldr	w1, [sp, #8]
   271c0:	str	w1, [x0, #12]
   271c4:	nop
   271c8:	add	sp, sp, #0x20
   271cc:	ret
   271d0:	sub	sp, sp, #0x10
   271d4:	str	x0, [sp, #8]
   271d8:	ldr	x0, [sp, #8]
   271dc:	str	xzr, [x0]
   271e0:	nop
   271e4:	add	sp, sp, #0x10
   271e8:	ret
   271ec:	sub	sp, sp, #0x10
   271f0:	str	x0, [sp, #8]
   271f4:	str	x1, [sp]
   271f8:	ldr	x0, [sp, #8]
   271fc:	ldr	x1, [sp]
   27200:	str	x1, [x0]
   27204:	nop
   27208:	add	sp, sp, #0x10
   2720c:	ret
   27210:	sub	sp, sp, #0x10
   27214:	str	x0, [sp, #8]
   27218:	ldr	x0, [sp, #8]
   2721c:	ldr	x0, [x0]
   27220:	cmp	x0, #0x0
   27224:	cset	w0, ne  // ne = any
   27228:	and	w0, w0, #0xff
   2722c:	add	sp, sp, #0x10
   27230:	ret
   27234:	str	x30, [sp, #-48]!
   27238:	str	x0, [sp, #24]
   2723c:	str	x1, [sp, #16]
   27240:	ldr	x0, [sp, #24]
   27244:	add	x0, x0, #0x8
   27248:	mov	w1, #0x4                   	// #4
   2724c:	bl	11080 <__sancov_default_options@@Base+0xcd4>
   27250:	str	x0, [sp, #32]
   27254:	ldr	x0, [sp, #24]
   27258:	add	x0, x0, #0x10
   2725c:	mov	w1, #0x4                   	// #4
   27260:	bl	11080 <__sancov_default_options@@Base+0xcd4>
   27264:	str	x0, [sp, #40]
   27268:	ldr	x0, [sp, #32]
   2726c:	cmp	x0, #0x0
   27270:	b.eq	2728c <OnPrint@@Base+0x1c6c>  // b.none
   27274:	ldr	x1, [sp, #32]
   27278:	ldr	x0, [sp, #16]
   2727c:	add	x0, x1, x0
   27280:	ldr	x1, [sp, #40]
   27284:	cmp	x1, x0
   27288:	b.cs	27294 <OnPrint@@Base+0x1c74>  // b.hs, b.nlast
   2728c:	mov	x0, #0x0                   	// #0
   27290:	b	272d0 <OnPrint@@Base+0x1cb0>
   27294:	ldr	x0, [sp, #24]
   27298:	add	x4, x0, #0x8
   2729c:	ldr	x1, [sp, #32]
   272a0:	ldr	x0, [sp, #16]
   272a4:	add	x1, x1, x0
   272a8:	add	x0, sp, #0x20
   272ac:	mov	w3, #0x4                   	// #4
   272b0:	mov	x2, x1
   272b4:	mov	x1, x0
   272b8:	mov	x0, x4
   272bc:	bl	2778c <OnPrint@@Base+0x216c>
   272c0:	and	w0, w0, #0xff
   272c4:	cmp	w0, #0x0
   272c8:	b.eq	27240 <OnPrint@@Base+0x1c20>  // b.none
   272cc:	ldr	x0, [sp, #32]
   272d0:	ldr	x30, [sp], #48
   272d4:	ret
   272d8:	stp	x19, x30, [sp, #-64]!
   272dc:	str	x0, [sp, #24]
   272e0:	str	x1, [sp, #16]
   272e4:	ldr	x1, [sp, #16]
   272e8:	ldr	x0, [sp, #24]
   272ec:	bl	27234 <OnPrint@@Base+0x1c14>
   272f0:	str	x0, [sp, #48]
   272f4:	ldr	x0, [sp, #48]
   272f8:	cmp	x0, #0x0
   272fc:	b.eq	27308 <OnPrint@@Base+0x1ce8>  // b.none
   27300:	ldr	x19, [sp, #48]
   27304:	b	273c8 <OnPrint@@Base+0x1da8>
   27308:	ldr	x1, [sp, #24]
   2730c:	add	x0, sp, #0x20
   27310:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   27314:	ldr	x1, [sp, #16]
   27318:	ldr	x0, [sp, #24]
   2731c:	bl	27234 <OnPrint@@Base+0x1c14>
   27320:	str	x0, [sp, #48]
   27324:	ldr	x0, [sp, #48]
   27328:	cmp	x0, #0x0
   2732c:	b.eq	27340 <OnPrint@@Base+0x1d20>  // b.none
   27330:	ldr	x19, [sp, #48]
   27334:	add	x0, sp, #0x20
   27338:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   2733c:	b	273c8 <OnPrint@@Base+0x1da8>
   27340:	ldr	x0, [sp, #24]
   27344:	add	x0, x0, #0x8
   27348:	mov	w2, #0x1                   	// #1
   2734c:	mov	x1, #0x0                   	// #0
   27350:	bl	11104 <__sancov_default_options@@Base+0xd58>
   27354:	mov	x0, #0x10000               	// #65536
   27358:	str	x0, [sp, #56]
   2735c:	ldr	x1, [sp, #56]
   27360:	ldr	x0, [sp, #16]
   27364:	cmp	x1, x0
   27368:	b.cs	27374 <OnPrint@@Base+0x1d54>  // b.hs, b.nlast
   2736c:	ldr	x0, [sp, #16]
   27370:	str	x0, [sp, #56]
   27374:	mov	w2, #0x0                   	// #0
   27378:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2737c:	add	x1, x0, #0x250
   27380:	ldr	x0, [sp, #56]
   27384:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   27388:	str	x0, [sp, #40]
   2738c:	ldr	x0, [sp, #24]
   27390:	add	x3, x0, #0x10
   27394:	ldr	x1, [sp, #40]
   27398:	ldr	x0, [sp, #56]
   2739c:	add	x0, x1, x0
   273a0:	mov	w2, #0x8                   	// #8
   273a4:	mov	x1, x0
   273a8:	mov	x0, x3
   273ac:	bl	11104 <__sancov_default_options@@Base+0xd58>
   273b0:	ldr	x0, [sp, #24]
   273b4:	add	x0, x0, #0x8
   273b8:	mov	w2, #0x8                   	// #8
   273bc:	ldr	x1, [sp, #40]
   273c0:	bl	11104 <__sancov_default_options@@Base+0xd58>
   273c4:	b	27314 <OnPrint@@Base+0x1cf4>
   273c8:	mov	x0, x19
   273cc:	ldp	x19, x30, [sp], #64
   273d0:	ret
   273d4:	str	x30, [sp, #-32]!
   273d8:	str	x0, [sp, #24]
   273dc:	ldr	x1, [sp, #24]
   273e0:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   273e4:	ldr	x0, [x0, #3824]
   273e8:	bl	272d8 <OnPrint@@Base+0x1cb8>
   273ec:	ldr	x30, [sp], #32
   273f0:	ret
   273f4:	str	x30, [sp, #-64]!
   273f8:	str	x0, [sp, #40]
   273fc:	str	w1, [sp, #36]
   27400:	str	x2, [sp, #24]
   27404:	ldr	x0, [sp, #40]
   27408:	add	x0, x0, #0xc
   2740c:	mov	w1, #0x1                   	// #1
   27410:	bl	9b44 <__ubsan_default_options@@Base+0x4e0>
   27414:	and	w0, w0, #0xfff00000
   27418:	str	w0, [sp, #52]
   2741c:	ldr	w0, [sp, #36]
   27420:	and	w0, w0, #0xfff00000
   27424:	ldr	w1, [sp, #52]
   27428:	cmp	w1, w0
   2742c:	b.ne	27460 <OnPrint@@Base+0x1e40>  // b.any
   27430:	ldr	x0, [sp, #24]
   27434:	ldr	w1, [x0, #8]
   27438:	ldr	x0, [sp, #40]
   2743c:	ldr	w0, [x0, #16]
   27440:	cmp	w1, w0
   27444:	b.ne	27460 <OnPrint@@Base+0x1e40>  // b.any
   27448:	ldr	x0, [sp, #24]
   2744c:	ldr	w1, [x0, #12]
   27450:	ldr	x0, [sp, #40]
   27454:	ldr	w0, [x0, #20]
   27458:	cmp	w1, w0
   2745c:	b.eq	27468 <OnPrint@@Base+0x1e48>  // b.none
   27460:	mov	w0, #0x0                   	// #0
   27464:	b	274d8 <OnPrint@@Base+0x1eb8>
   27468:	str	xzr, [sp, #56]
   2746c:	ldr	x0, [sp, #40]
   27470:	ldr	w0, [x0, #16]
   27474:	mov	w0, w0
   27478:	ldr	x1, [sp, #56]
   2747c:	cmp	x1, x0
   27480:	b.cs	274d4 <OnPrint@@Base+0x1eb4>  // b.hs, b.nlast
   27484:	ldr	x1, [sp, #40]
   27488:	ldr	x0, [sp, #56]
   2748c:	add	x0, x0, #0x2
   27490:	lsl	x0, x0, #3
   27494:	add	x0, x1, x0
   27498:	ldr	x1, [x0, #8]
   2749c:	ldr	x0, [sp, #24]
   274a0:	ldr	x2, [x0]
   274a4:	ldr	x0, [sp, #56]
   274a8:	lsl	x0, x0, #3
   274ac:	add	x0, x2, x0
   274b0:	ldr	x0, [x0]
   274b4:	cmp	x1, x0
   274b8:	b.eq	274c4 <OnPrint@@Base+0x1ea4>  // b.none
   274bc:	mov	w0, #0x0                   	// #0
   274c0:	b	274d8 <OnPrint@@Base+0x1eb8>
   274c4:	ldr	x0, [sp, #56]
   274c8:	add	x0, x0, #0x1
   274cc:	str	x0, [sp, #56]
   274d0:	b	2746c <OnPrint@@Base+0x1e4c>
   274d4:	mov	w0, #0x1                   	// #1
   274d8:	ldr	x30, [sp], #64
   274dc:	ret
   274e0:	sub	sp, sp, #0x10
   274e4:	str	x0, [sp, #8]
   274e8:	ldr	x0, [sp, #8]
   274ec:	ldr	w0, [x0, #8]
   274f0:	sub	w0, w0, #0x1
   274f4:	mov	w0, w0
   274f8:	add	x0, x0, #0x4
   274fc:	lsl	x0, x0, #3
   27500:	add	sp, sp, #0x10
   27504:	ret
   27508:	sub	sp, sp, #0x30
   2750c:	str	x0, [sp, #8]
   27510:	mov	w0, #0xe995                	// #59797
   27514:	movk	w0, #0x5bd1, lsl #16
   27518:	str	w0, [sp, #28]
   2751c:	mov	w0, #0xb28c                	// #45708
   27520:	movk	w0, #0x9747, lsl #16
   27524:	str	w0, [sp, #24]
   27528:	mov	w0, #0x18                  	// #24
   2752c:	str	w0, [sp, #20]
   27530:	ldr	x0, [sp, #8]
   27534:	ldr	w0, [x0, #8]
   27538:	lsl	w1, w0, #3
   2753c:	mov	w0, #0xb28c                	// #45708
   27540:	movk	w0, #0x9747, lsl #16
   27544:	eor	w0, w1, w0
   27548:	str	w0, [sp, #44]
   2754c:	str	xzr, [sp, #32]
   27550:	ldr	x0, [sp, #8]
   27554:	ldr	w0, [x0, #8]
   27558:	mov	w0, w0
   2755c:	ldr	x1, [sp, #32]
   27560:	cmp	x1, x0
   27564:	b.cs	275f4 <OnPrint@@Base+0x1fd4>  // b.hs, b.nlast
   27568:	ldr	x0, [sp, #8]
   2756c:	ldr	x1, [x0]
   27570:	ldr	x0, [sp, #32]
   27574:	lsl	x0, x0, #3
   27578:	add	x0, x1, x0
   2757c:	ldr	x0, [x0]
   27580:	str	w0, [sp, #16]
   27584:	ldr	w1, [sp, #16]
   27588:	mov	w0, #0xe995                	// #59797
   2758c:	movk	w0, #0x5bd1, lsl #16
   27590:	mul	w0, w1, w0
   27594:	str	w0, [sp, #16]
   27598:	ldr	w0, [sp, #16]
   2759c:	lsr	w0, w0, #24
   275a0:	ldr	w1, [sp, #16]
   275a4:	eor	w0, w1, w0
   275a8:	str	w0, [sp, #16]
   275ac:	ldr	w1, [sp, #16]
   275b0:	mov	w0, #0xe995                	// #59797
   275b4:	movk	w0, #0x5bd1, lsl #16
   275b8:	mul	w0, w1, w0
   275bc:	str	w0, [sp, #16]
   275c0:	ldr	w1, [sp, #44]
   275c4:	mov	w0, #0xe995                	// #59797
   275c8:	movk	w0, #0x5bd1, lsl #16
   275cc:	mul	w0, w1, w0
   275d0:	str	w0, [sp, #44]
   275d4:	ldr	w1, [sp, #44]
   275d8:	ldr	w0, [sp, #16]
   275dc:	eor	w0, w1, w0
   275e0:	str	w0, [sp, #44]
   275e4:	ldr	x0, [sp, #32]
   275e8:	add	x0, x0, #0x1
   275ec:	str	x0, [sp, #32]
   275f0:	b	27550 <OnPrint@@Base+0x1f30>
   275f4:	ldr	w0, [sp, #44]
   275f8:	lsr	w0, w0, #13
   275fc:	ldr	w1, [sp, #44]
   27600:	eor	w0, w1, w0
   27604:	str	w0, [sp, #44]
   27608:	ldr	w1, [sp, #44]
   2760c:	mov	w0, #0xe995                	// #59797
   27610:	movk	w0, #0x5bd1, lsl #16
   27614:	mul	w0, w1, w0
   27618:	str	w0, [sp, #44]
   2761c:	ldr	w0, [sp, #44]
   27620:	lsr	w0, w0, #15
   27624:	ldr	w1, [sp, #44]
   27628:	eor	w0, w1, w0
   2762c:	str	w0, [sp, #44]
   27630:	ldr	w0, [sp, #44]
   27634:	add	sp, sp, #0x30
   27638:	ret
   2763c:	sub	sp, sp, #0x10
   27640:	str	x0, [sp, #8]
   27644:	ldr	x0, [sp, #8]
   27648:	ldr	w0, [x0, #8]
   2764c:	cmp	w0, #0x0
   27650:	b.eq	2766c <OnPrint@@Base+0x204c>  // b.none
   27654:	ldr	x0, [sp, #8]
   27658:	ldr	x0, [x0]
   2765c:	cmp	x0, #0x0
   27660:	b.eq	2766c <OnPrint@@Base+0x204c>  // b.none
   27664:	mov	w0, #0x1                   	// #1
   27668:	b	27670 <OnPrint@@Base+0x2050>
   2766c:	mov	w0, #0x0                   	// #0
   27670:	add	sp, sp, #0x10
   27674:	ret
   27678:	str	x30, [sp, #-48]!
   2767c:	str	x0, [sp, #40]
   27680:	str	x1, [sp, #32]
   27684:	str	w2, [sp, #28]
   27688:	ldr	x0, [sp, #40]
   2768c:	add	x3, x0, #0xc
   27690:	ldr	w0, [sp, #28]
   27694:	and	w0, w0, #0xfff00000
   27698:	mov	w2, #0x1                   	// #1
   2769c:	mov	w1, w0
   276a0:	mov	x0, x3
   276a4:	bl	1b8fc <__sanitizer_set_report_fd@@Base+0x1750>
   276a8:	ldr	x0, [sp, #32]
   276ac:	ldr	w1, [x0, #8]
   276b0:	ldr	x0, [sp, #40]
   276b4:	str	w1, [x0, #16]
   276b8:	ldr	x0, [sp, #32]
   276bc:	ldr	w1, [x0, #12]
   276c0:	ldr	x0, [sp, #40]
   276c4:	str	w1, [x0, #20]
   276c8:	ldr	x0, [sp, #40]
   276cc:	add	x3, x0, #0x18
   276d0:	ldr	x0, [sp, #32]
   276d4:	ldr	x1, [x0]
   276d8:	ldr	x0, [sp, #40]
   276dc:	ldr	w0, [x0, #16]
   276e0:	mov	w0, w0
   276e4:	lsl	x0, x0, #3
   276e8:	mov	x2, x0
   276ec:	mov	x0, x3
   276f0:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   276f4:	nop
   276f8:	ldr	x30, [sp], #48
   276fc:	ret
   27700:	str	x30, [sp, #-48]!
   27704:	str	x0, [sp, #24]
   27708:	ldr	x0, [sp, #24]
   2770c:	add	x1, x0, #0x18
   27710:	ldr	x0, [sp, #24]
   27714:	ldr	w2, [x0, #16]
   27718:	ldr	x0, [sp, #24]
   2771c:	ldr	w3, [x0, #20]
   27720:	add	x0, sp, #0x20
   27724:	bl	2718c <OnPrint@@Base+0x1b6c>
   27728:	ldp	x0, x1, [sp, #32]
   2772c:	ldr	x30, [sp], #48
   27730:	ret
   27734:	str	x30, [sp, #-48]!
   27738:	str	x0, [sp, #24]
   2773c:	add	x0, sp, #0x28
   27740:	ldr	x1, [sp, #24]
   27744:	bl	271ec <OnPrint@@Base+0x1bcc>
   27748:	ldr	x0, [sp, #40]
   2774c:	ldr	x30, [sp], #48
   27750:	ret
   27754:	sub	sp, sp, #0x10
   27758:	str	x0, [sp, #8]
   2775c:	str	w1, [sp, #4]
   27760:	str	w2, [sp]
   27764:	ldr	x0, [sp, #8]
   27768:	ldr	w1, [sp, #4]
   2776c:	ldxr	w2, [x0]
   27770:	add	w3, w2, w1
   27774:	stlxr	w4, w3, [x0]
   27778:	cbnz	w4, 2776c <OnPrint@@Base+0x214c>
   2777c:	dmb	ish
   27780:	mov	w0, w2
   27784:	add	sp, sp, #0x10
   27788:	ret
   2778c:	str	x30, [sp, #-48]!
   27790:	str	x0, [sp, #40]
   27794:	str	x1, [sp, #32]
   27798:	str	x2, [sp, #24]
   2779c:	str	w3, [sp, #20]
   277a0:	ldr	w3, [sp, #20]
   277a4:	ldr	x2, [sp, #24]
   277a8:	ldr	x1, [sp, #32]
   277ac:	ldr	x0, [sp, #40]
   277b0:	bl	28248 <OnPrint@@Base+0x2c28>
   277b4:	and	w0, w0, #0xff
   277b8:	ldr	x30, [sp], #48
   277bc:	ret
   277c0:	sub	sp, sp, #0x10
   277c4:	str	x0, [sp, #8]
   277c8:	ldr	x1, [sp, #8]
   277cc:	mov	x0, #0x400                 	// #1024
   277d0:	movk	x0, #0x80, lsl #16
   277d4:	add	x0, x1, x0
   277d8:	add	sp, sp, #0x10
   277dc:	ret
   277e0:	str	x30, [sp, #-176]!
   277e4:	str	x0, [sp, #40]
   277e8:	stp	x1, x2, [sp, #24]
   277ec:	str	x3, [sp, #16]
   277f0:	ldr	x0, [sp, #16]
   277f4:	cmp	x0, #0x0
   277f8:	b.eq	27804 <OnPrint@@Base+0x21e4>  // b.none
   277fc:	ldr	x0, [sp, #16]
   27800:	strb	wzr, [x0]
   27804:	add	x0, sp, #0x18
   27808:	bl	2763c <OnPrint@@Base+0x201c>
   2780c:	and	w0, w0, #0xff
   27810:	eor	w0, w0, #0x1
   27814:	and	w0, w0, #0xff
   27818:	cmp	w0, #0x0
   2781c:	b.eq	27830 <OnPrint@@Base+0x2210>  // b.none
   27820:	add	x0, sp, #0x30
   27824:	bl	271d0 <OnPrint@@Base+0x1bb0>
   27828:	ldr	x0, [sp, #48]
   2782c:	b	27aec <OnPrint@@Base+0x24cc>
   27830:	add	x0, sp, #0x18
   27834:	bl	27508 <OnPrint@@Base+0x1ee8>
   27838:	mov	w0, w0
   2783c:	str	x0, [sp, #168]
   27840:	ldr	x0, [sp, #168]
   27844:	and	x0, x0, #0xfffff
   27848:	lsl	x0, x0, #3
   2784c:	ldr	x1, [sp, #40]
   27850:	add	x0, x1, x0
   27854:	str	x0, [sp, #160]
   27858:	mov	w1, #0x2                   	// #2
   2785c:	ldr	x0, [sp, #160]
   27860:	bl	11080 <__sancov_default_options@@Base+0xcd4>
   27864:	str	x0, [sp, #152]
   27868:	ldr	x0, [sp, #152]
   2786c:	and	x0, x0, #0xfffffffffffffffe
   27870:	str	x0, [sp, #144]
   27874:	ldr	x0, [sp, #168]
   27878:	mov	w3, w0
   2787c:	ldp	x1, x2, [sp, #24]
   27880:	ldr	x0, [sp, #144]
   27884:	bl	282c0 <OnPrint@@Base+0x2ca0>
   27888:	str	x0, [sp, #136]
   2788c:	ldr	x0, [sp, #136]
   27890:	cmp	x0, #0x0
   27894:	b.eq	278a4 <OnPrint@@Base+0x2284>  // b.none
   27898:	ldr	x0, [sp, #136]
   2789c:	bl	27734 <OnPrint@@Base+0x2114>
   278a0:	b	27aec <OnPrint@@Base+0x24cc>
   278a4:	ldr	x0, [sp, #160]
   278a8:	bl	28320 <OnPrint@@Base+0x2d00>
   278ac:	str	x0, [sp, #128]
   278b0:	ldr	x1, [sp, #128]
   278b4:	ldr	x0, [sp, #144]
   278b8:	cmp	x1, x0
   278bc:	b.eq	278fc <OnPrint@@Base+0x22dc>  // b.none
   278c0:	ldr	x0, [sp, #168]
   278c4:	mov	w3, w0
   278c8:	ldp	x1, x2, [sp, #24]
   278cc:	ldr	x0, [sp, #128]
   278d0:	bl	282c0 <OnPrint@@Base+0x2ca0>
   278d4:	str	x0, [sp, #136]
   278d8:	ldr	x0, [sp, #136]
   278dc:	cmp	x0, #0x0
   278e0:	b.eq	278fc <OnPrint@@Base+0x22dc>  // b.none
   278e4:	ldr	x1, [sp, #128]
   278e8:	ldr	x0, [sp, #160]
   278ec:	bl	283c8 <OnPrint@@Base+0x2da8>
   278f0:	ldr	x0, [sp, #136]
   278f4:	bl	27734 <OnPrint@@Base+0x2114>
   278f8:	b	27aec <OnPrint@@Base+0x24cc>
   278fc:	ldr	x0, [sp, #168]
   27900:	and	x0, x0, #0xfffff
   27904:	lsr	x0, x0, #12
   27908:	str	x0, [sp, #120]
   2790c:	ldr	x0, [sp, #120]
   27910:	add	x0, x0, #0x200, lsl #12
   27914:	lsl	x0, x0, #2
   27918:	ldr	x1, [sp, #40]
   2791c:	add	x0, x1, x0
   27920:	mov	w2, #0x1                   	// #1
   27924:	mov	w1, #0x1                   	// #1
   27928:	bl	27754 <OnPrint@@Base+0x2134>
   2792c:	add	w0, w0, #0x1
   27930:	str	w0, [sp, #116]
   27934:	ldr	x0, [sp, #40]
   27938:	add	x0, x0, #0x800, lsl #12
   2793c:	ldr	x0, [x0, #1024]
   27940:	add	x1, x0, #0x1
   27944:	ldr	x0, [sp, #40]
   27948:	add	x0, x0, #0x800, lsl #12
   2794c:	str	x1, [x0, #1024]
   27950:	ldr	w0, [sp, #116]
   27954:	str	x0, [sp, #104]
   27958:	mov	x0, #0x800000              	// #8388608
   2795c:	str	x0, [sp, #96]
   27960:	ldr	x1, [sp, #104]
   27964:	ldr	x0, [sp, #96]
   27968:	cmp	x1, x0
   2796c:	cset	w0, cs  // cs = hs, nlast
   27970:	and	w0, w0, #0xff
   27974:	and	x0, x0, #0xff
   27978:	cmp	x0, #0x0
   2797c:	b.eq	279a0 <OnPrint@@Base+0x2380>  // b.none
   27980:	ldr	x4, [sp, #96]
   27984:	ldr	x3, [sp, #104]
   27988:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2798c:	add	x2, x0, #0x2d8
   27990:	mov	w1, #0x77                  	// #119
   27994:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   27998:	add	x0, x0, #0x2f0
   2799c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   279a0:	ldr	x0, [sp, #120]
   279a4:	lsl	w0, w0, #23
   279a8:	ldr	w1, [sp, #116]
   279ac:	orr	w0, w1, w0
   279b0:	str	w0, [sp, #116]
   279b4:	ldr	w0, [sp, #116]
   279b8:	str	x0, [sp, #88]
   279bc:	str	xzr, [sp, #80]
   279c0:	ldr	x1, [sp, #88]
   279c4:	ldr	x0, [sp, #80]
   279c8:	cmp	x1, x0
   279cc:	cset	w0, eq  // eq = none
   279d0:	and	w0, w0, #0xff
   279d4:	and	x0, x0, #0xff
   279d8:	cmp	x0, #0x0
   279dc:	b.eq	27a00 <OnPrint@@Base+0x23e0>  // b.none
   279e0:	ldr	x4, [sp, #80]
   279e4:	ldr	x3, [sp, #88]
   279e8:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   279ec:	add	x2, x0, #0x338
   279f0:	mov	w1, #0x79                  	// #121
   279f4:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   279f8:	add	x0, x0, #0x2f0
   279fc:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   27a00:	ldr	w0, [sp, #116]
   27a04:	and	x0, x0, #0x7fffffff
   27a08:	str	x0, [sp, #72]
   27a0c:	ldr	w0, [sp, #116]
   27a10:	str	x0, [sp, #64]
   27a14:	ldr	x1, [sp, #72]
   27a18:	ldr	x0, [sp, #64]
   27a1c:	cmp	x1, x0
   27a20:	cset	w0, ne  // ne = any
   27a24:	and	w0, w0, #0xff
   27a28:	and	x0, x0, #0xff
   27a2c:	cmp	x0, #0x0
   27a30:	b.eq	27a54 <OnPrint@@Base+0x2434>  // b.none
   27a34:	ldr	x4, [sp, #64]
   27a38:	ldr	x3, [sp, #72]
   27a3c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   27a40:	add	x2, x0, #0x348
   27a44:	mov	w1, #0x7a                  	// #122
   27a48:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   27a4c:	add	x0, x0, #0x2f0
   27a50:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   27a54:	add	x0, sp, #0x18
   27a58:	bl	274e0 <OnPrint@@Base+0x1ec0>
   27a5c:	str	x0, [sp, #56]
   27a60:	ldr	x0, [sp, #56]
   27a64:	bl	273d4 <OnPrint@@Base+0x1db4>
   27a68:	str	x0, [sp, #144]
   27a6c:	ldr	x0, [sp, #40]
   27a70:	add	x0, x0, #0x800, lsl #12
   27a74:	ldr	x1, [x0, #1032]
   27a78:	ldr	x0, [sp, #56]
   27a7c:	add	x1, x1, x0
   27a80:	ldr	x0, [sp, #40]
   27a84:	add	x0, x0, #0x800, lsl #12
   27a88:	str	x1, [x0, #1032]
   27a8c:	ldr	x0, [sp, #144]
   27a90:	ldr	w1, [sp, #116]
   27a94:	str	w1, [x0, #8]
   27a98:	ldr	x0, [sp, #168]
   27a9c:	mov	w1, w0
   27aa0:	add	x0, sp, #0x18
   27aa4:	mov	w2, w1
   27aa8:	mov	x1, x0
   27aac:	ldr	x0, [sp, #144]
   27ab0:	bl	27678 <OnPrint@@Base+0x2058>
   27ab4:	ldr	x0, [sp, #144]
   27ab8:	ldr	x1, [sp, #128]
   27abc:	str	x1, [x0]
   27ac0:	ldr	x1, [sp, #144]
   27ac4:	ldr	x0, [sp, #160]
   27ac8:	bl	283c8 <OnPrint@@Base+0x2da8>
   27acc:	ldr	x0, [sp, #16]
   27ad0:	cmp	x0, #0x0
   27ad4:	b.eq	27ae4 <OnPrint@@Base+0x24c4>  // b.none
   27ad8:	ldr	x0, [sp, #16]
   27adc:	mov	w1, #0x1                   	// #1
   27ae0:	strb	w1, [x0]
   27ae4:	ldr	x0, [sp, #144]
   27ae8:	bl	27734 <OnPrint@@Base+0x2114>
   27aec:	ldr	x30, [sp], #176
   27af0:	ret
   27af4:	str	x30, [sp, #-144]!
   27af8:	str	x0, [sp, #24]
   27afc:	str	w1, [sp, #20]
   27b00:	ldr	w0, [sp, #20]
   27b04:	cmp	w0, #0x0
   27b08:	b.ne	27b1c <OnPrint@@Base+0x24fc>  // b.any
   27b0c:	add	x0, sp, #0x20
   27b10:	bl	27160 <OnPrint@@Base+0x1b40>
   27b14:	ldp	x0, x1, [sp, #32]
   27b18:	b	27c7c <OnPrint@@Base+0x265c>
   27b1c:	ldr	w0, [sp, #20]
   27b20:	and	x0, x0, #0x7fffffff
   27b24:	str	x0, [sp, #120]
   27b28:	ldr	w0, [sp, #20]
   27b2c:	str	x0, [sp, #112]
   27b30:	ldr	x1, [sp, #120]
   27b34:	ldr	x0, [sp, #112]
   27b38:	cmp	x1, x0
   27b3c:	cset	w0, ne  // ne = any
   27b40:	and	w0, w0, #0xff
   27b44:	and	x0, x0, #0xff
   27b48:	cmp	x0, #0x0
   27b4c:	b.eq	27b70 <OnPrint@@Base+0x2550>  // b.none
   27b50:	ldr	x4, [sp, #112]
   27b54:	ldr	x3, [sp, #120]
   27b58:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   27b5c:	add	x2, x0, #0x348
   27b60:	mov	w1, #0x8c                  	// #140
   27b64:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   27b68:	add	x0, x0, #0x2f0
   27b6c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   27b70:	ldr	w0, [sp, #20]
   27b74:	lsr	w0, w0, #23
   27b78:	mov	w0, w0
   27b7c:	str	x0, [sp, #104]
   27b80:	str	wzr, [sp, #140]
   27b84:	ldr	w0, [sp, #140]
   27b88:	cmp	w0, #0x1, lsl #12
   27b8c:	b.eq	27c70 <OnPrint@@Base+0x2650>  // b.none
   27b90:	ldr	x0, [sp, #104]
   27b94:	lsl	x1, x0, #12
   27b98:	ldrsw	x0, [sp, #140]
   27b9c:	add	x0, x1, x0
   27ba0:	str	x0, [sp, #96]
   27ba4:	ldr	x0, [sp, #96]
   27ba8:	str	x0, [sp, #88]
   27bac:	mov	x0, #0x100000              	// #1048576
   27bb0:	str	x0, [sp, #80]
   27bb4:	ldr	x1, [sp, #88]
   27bb8:	ldr	x0, [sp, #80]
   27bbc:	cmp	x1, x0
   27bc0:	cset	w0, cs  // cs = hs, nlast
   27bc4:	and	w0, w0, #0xff
   27bc8:	and	x0, x0, #0xff
   27bcc:	cmp	x0, #0x0
   27bd0:	b.eq	27bf4 <OnPrint@@Base+0x25d4>  // b.none
   27bd4:	ldr	x4, [sp, #80]
   27bd8:	ldr	x3, [sp, #88]
   27bdc:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   27be0:	add	x2, x0, #0x378
   27be4:	mov	w1, #0x91                  	// #145
   27be8:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   27bec:	add	x0, x0, #0x2f0
   27bf0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   27bf4:	ldr	x0, [sp, #96]
   27bf8:	lsl	x0, x0, #3
   27bfc:	ldr	x1, [sp, #24]
   27c00:	add	x0, x1, x0
   27c04:	str	x0, [sp, #72]
   27c08:	mov	w1, #0x2                   	// #2
   27c0c:	ldr	x0, [sp, #72]
   27c10:	bl	11080 <__sancov_default_options@@Base+0xcd4>
   27c14:	str	x0, [sp, #64]
   27c18:	ldr	x0, [sp, #64]
   27c1c:	and	x0, x0, #0xfffffffffffffffe
   27c20:	str	x0, [sp, #128]
   27c24:	ldr	x0, [sp, #128]
   27c28:	cmp	x0, #0x0
   27c2c:	b.eq	27c60 <OnPrint@@Base+0x2640>  // b.none
   27c30:	ldr	x0, [sp, #128]
   27c34:	ldr	w0, [x0, #8]
   27c38:	ldr	w1, [sp, #20]
   27c3c:	cmp	w1, w0
   27c40:	b.ne	27c50 <OnPrint@@Base+0x2630>  // b.any
   27c44:	ldr	x0, [sp, #128]
   27c48:	bl	27700 <OnPrint@@Base+0x20e0>
   27c4c:	b	27c7c <OnPrint@@Base+0x265c>
   27c50:	ldr	x0, [sp, #128]
   27c54:	ldr	x0, [x0]
   27c58:	str	x0, [sp, #128]
   27c5c:	b	27c24 <OnPrint@@Base+0x2604>
   27c60:	ldr	w0, [sp, #140]
   27c64:	add	w0, w0, #0x1
   27c68:	str	w0, [sp, #140]
   27c6c:	b	27b84 <OnPrint@@Base+0x2564>
   27c70:	add	x0, sp, #0x30
   27c74:	bl	27160 <OnPrint@@Base+0x1b40>
   27c78:	ldp	x0, x1, [sp, #48]
   27c7c:	ldr	x30, [sp], #144
   27c80:	ret
   27c84:	str	x30, [sp, #-48]!
   27c88:	str	x0, [sp, #24]
   27c8c:	str	wzr, [sp, #44]
   27c90:	ldr	w1, [sp, #44]
   27c94:	mov	w0, #0xfffff               	// #1048575
   27c98:	cmp	w1, w0
   27c9c:	b.gt	27cc4 <OnPrint@@Base+0x26a4>
   27ca0:	ldrsw	x0, [sp, #44]
   27ca4:	lsl	x0, x0, #3
   27ca8:	ldr	x1, [sp, #24]
   27cac:	add	x0, x1, x0
   27cb0:	bl	28320 <OnPrint@@Base+0x2d00>
   27cb4:	ldr	w0, [sp, #44]
   27cb8:	add	w0, w0, #0x1
   27cbc:	str	w0, [sp, #44]
   27cc0:	b	27c90 <OnPrint@@Base+0x2670>
   27cc4:	nop
   27cc8:	ldr	x30, [sp], #48
   27ccc:	ret
   27cd0:	str	x30, [sp, #-64]!
   27cd4:	str	x0, [sp, #24]
   27cd8:	str	wzr, [sp, #60]
   27cdc:	ldr	w1, [sp, #60]
   27ce0:	mov	w0, #0xfffff               	// #1048575
   27ce4:	cmp	w1, w0
   27ce8:	b.gt	27d34 <OnPrint@@Base+0x2714>
   27cec:	ldrsw	x0, [sp, #60]
   27cf0:	lsl	x0, x0, #3
   27cf4:	ldr	x1, [sp, #24]
   27cf8:	add	x0, x1, x0
   27cfc:	str	x0, [sp, #48]
   27d00:	mov	w1, #0x1                   	// #1
   27d04:	ldr	x0, [sp, #48]
   27d08:	bl	11080 <__sancov_default_options@@Base+0xcd4>
   27d0c:	str	x0, [sp, #40]
   27d10:	ldr	x0, [sp, #40]
   27d14:	and	x0, x0, #0xfffffffffffffffe
   27d18:	mov	x1, x0
   27d1c:	ldr	x0, [sp, #48]
   27d20:	bl	283c8 <OnPrint@@Base+0x2da8>
   27d24:	ldr	w0, [sp, #60]
   27d28:	add	w0, w0, #0x1
   27d2c:	str	w0, [sp, #60]
   27d30:	b	27cdc <OnPrint@@Base+0x26bc>
   27d34:	nop
   27d38:	ldr	x30, [sp], #64
   27d3c:	ret
   27d40:	str	x30, [sp, #-32]!
   27d44:	str	x0, [sp, #24]
   27d48:	ldr	x0, [sp, #24]
   27d4c:	mov	x1, #0x1                   	// #1
   27d50:	bl	283f4 <OnPrint@@Base+0x2dd4>
   27d54:	nop
   27d58:	ldr	x30, [sp], #32
   27d5c:	ret
   27d60:	str	x30, [sp, #-32]!
   27d64:	str	x0, [sp, #24]
   27d68:	str	x1, [sp, #16]
   27d6c:	ldr	x0, [sp, #24]
   27d70:	bl	28430 <OnPrint@@Base+0x2e10>
   27d74:	mov	x1, x0
   27d78:	ldr	x0, [sp, #16]
   27d7c:	cmp	x0, x1
   27d80:	cset	w0, hi  // hi = pmore
   27d84:	and	w0, w0, #0xff
   27d88:	cmp	w0, #0x0
   27d8c:	b.eq	27d9c <OnPrint@@Base+0x277c>  // b.none
   27d90:	ldr	x1, [sp, #16]
   27d94:	ldr	x0, [sp, #24]
   27d98:	bl	2844c <OnPrint@@Base+0x2e2c>
   27d9c:	nop
   27da0:	ldr	x30, [sp], #32
   27da4:	ret
   27da8:	stp	x19, x30, [sp, #-64]!
   27dac:	str	x0, [sp, #24]
   27db0:	str	x1, [sp, #16]
   27db4:	ldr	x0, [sp, #24]
   27db8:	ldr	x0, [x0, #16]
   27dbc:	str	x0, [sp, #56]
   27dc0:	ldr	x0, [sp, #24]
   27dc4:	bl	28430 <OnPrint@@Base+0x2e10>
   27dc8:	str	x0, [sp, #48]
   27dcc:	ldr	x1, [sp, #56]
   27dd0:	ldr	x0, [sp, #48]
   27dd4:	cmp	x1, x0
   27dd8:	cset	w0, hi  // hi = pmore
   27ddc:	and	w0, w0, #0xff
   27de0:	and	x0, x0, #0xff
   27de4:	cmp	x0, #0x0
   27de8:	b.eq	27e0c <OnPrint@@Base+0x27ec>  // b.none
   27dec:	ldr	x4, [sp, #48]
   27df0:	ldr	x3, [sp, #56]
   27df4:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   27df8:	add	x2, x0, #0x390
   27dfc:	mov	w1, #0x1be                 	// #446
   27e00:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   27e04:	add	x0, x0, #0x180
   27e08:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   27e0c:	ldr	x0, [sp, #24]
   27e10:	ldr	x19, [x0, #16]
   27e14:	ldr	x0, [sp, #24]
   27e18:	bl	28430 <OnPrint@@Base+0x2e10>
   27e1c:	cmp	x19, x0
   27e20:	cset	w0, eq  // eq = none
   27e24:	and	w0, w0, #0xff
   27e28:	cmp	w0, #0x0
   27e2c:	b.eq	27e50 <OnPrint@@Base+0x2830>  // b.none
   27e30:	ldr	x0, [sp, #24]
   27e34:	ldr	x0, [x0, #16]
   27e38:	add	x0, x0, #0x1
   27e3c:	bl	20578 <__sanitizer_set_report_fd@@Base+0x63cc>
   27e40:	str	x0, [sp, #40]
   27e44:	ldr	x1, [sp, #40]
   27e48:	ldr	x0, [sp, #24]
   27e4c:	bl	2844c <OnPrint@@Base+0x2e2c>
   27e50:	ldr	x0, [sp, #24]
   27e54:	ldr	x1, [x0]
   27e58:	ldr	x0, [sp, #24]
   27e5c:	ldr	x0, [x0, #16]
   27e60:	add	x3, x0, #0x1
   27e64:	ldr	x2, [sp, #24]
   27e68:	str	x3, [x2, #16]
   27e6c:	lsl	x0, x0, #4
   27e70:	add	x0, x1, x0
   27e74:	mov	x2, #0x10                  	// #16
   27e78:	ldr	x1, [sp, #16]
   27e7c:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   27e80:	nop
   27e84:	ldp	x19, x30, [sp], #64
   27e88:	ret
   27e8c:	sub	sp, sp, #0x10
   27e90:	str	x0, [sp, #8]
   27e94:	ldr	x0, [sp, #8]
   27e98:	ldr	x0, [x0]
   27e9c:	add	sp, sp, #0x10
   27ea0:	ret
   27ea4:	sub	sp, sp, #0x10
   27ea8:	str	x0, [sp, #8]
   27eac:	ldr	x0, [sp, #8]
   27eb0:	ldr	x0, [x0, #16]
   27eb4:	add	sp, sp, #0x10
   27eb8:	ret
   27ebc:	str	x30, [sp, #-112]!
   27ec0:	str	x0, [sp, #40]
   27ec4:	str	x1, [sp, #32]
   27ec8:	str	x2, [sp, #24]
   27ecc:	ldr	x0, [sp, #32]
   27ed0:	cmp	x0, #0x1
   27ed4:	b.ls	28138 <OnPrint@@Base+0x2b18>  // b.plast
   27ed8:	mov	x0, #0x1                   	// #1
   27edc:	str	x0, [sp, #104]
   27ee0:	ldr	x1, [sp, #104]
   27ee4:	ldr	x0, [sp, #32]
   27ee8:	cmp	x1, x0
   27eec:	b.cs	27f9c <OnPrint@@Base+0x297c>  // b.hs, b.nlast
   27ef0:	ldr	x0, [sp, #104]
   27ef4:	str	x0, [sp, #96]
   27ef8:	ldr	x0, [sp, #96]
   27efc:	cmp	x0, #0x0
   27f00:	b.eq	27f8c <OnPrint@@Base+0x296c>  // b.none
   27f04:	ldr	x0, [sp, #96]
   27f08:	sub	x0, x0, #0x1
   27f0c:	lsr	x0, x0, #1
   27f10:	str	x0, [sp, #64]
   27f14:	ldr	x0, [sp, #64]
   27f18:	lsl	x0, x0, #4
   27f1c:	ldr	x1, [sp, #40]
   27f20:	add	x3, x1, x0
   27f24:	ldr	x0, [sp, #96]
   27f28:	lsl	x0, x0, #4
   27f2c:	ldr	x1, [sp, #40]
   27f30:	add	x0, x1, x0
   27f34:	ldr	x2, [sp, #24]
   27f38:	mov	x1, x0
   27f3c:	mov	x0, x3
   27f40:	blr	x2
   27f44:	and	w0, w0, #0xff
   27f48:	cmp	w0, #0x0
   27f4c:	b.eq	27f88 <OnPrint@@Base+0x2968>  // b.none
   27f50:	ldr	x0, [sp, #96]
   27f54:	lsl	x0, x0, #4
   27f58:	ldr	x1, [sp, #40]
   27f5c:	add	x2, x1, x0
   27f60:	ldr	x0, [sp, #64]
   27f64:	lsl	x0, x0, #4
   27f68:	ldr	x1, [sp, #40]
   27f6c:	add	x0, x1, x0
   27f70:	mov	x1, x0
   27f74:	mov	x0, x2
   27f78:	bl	2858c <OnPrint@@Base+0x2f6c>
   27f7c:	ldr	x0, [sp, #64]
   27f80:	str	x0, [sp, #96]
   27f84:	b	27ef8 <OnPrint@@Base+0x28d8>
   27f88:	nop
   27f8c:	ldr	x0, [sp, #104]
   27f90:	add	x0, x0, #0x1
   27f94:	str	x0, [sp, #104]
   27f98:	b	27ee0 <OnPrint@@Base+0x28c0>
   27f9c:	ldr	x0, [sp, #32]
   27fa0:	sub	x0, x0, #0x1
   27fa4:	str	x0, [sp, #88]
   27fa8:	ldr	x0, [sp, #88]
   27fac:	cmp	x0, #0x0
   27fb0:	b.eq	2813c <OnPrint@@Base+0x2b1c>  // b.none
   27fb4:	ldr	x0, [sp, #88]
   27fb8:	lsl	x0, x0, #4
   27fbc:	ldr	x1, [sp, #40]
   27fc0:	add	x0, x1, x0
   27fc4:	mov	x1, x0
   27fc8:	ldr	x0, [sp, #40]
   27fcc:	bl	2858c <OnPrint@@Base+0x2f6c>
   27fd0:	str	xzr, [sp, #80]
   27fd4:	ldr	x1, [sp, #80]
   27fd8:	ldr	x0, [sp, #88]
   27fdc:	cmp	x1, x0
   27fe0:	b.cs	28128 <OnPrint@@Base+0x2b08>  // b.hs, b.nlast
   27fe4:	ldr	x0, [sp, #80]
   27fe8:	lsl	x0, x0, #1
   27fec:	add	x0, x0, #0x1
   27ff0:	str	x0, [sp, #56]
   27ff4:	ldr	x0, [sp, #80]
   27ff8:	add	x0, x0, #0x1
   27ffc:	lsl	x0, x0, #1
   28000:	str	x0, [sp, #48]
   28004:	ldr	x0, [sp, #80]
   28008:	str	x0, [sp, #72]
   2800c:	ldr	x1, [sp, #56]
   28010:	ldr	x0, [sp, #88]
   28014:	cmp	x1, x0
   28018:	b.cs	28060 <OnPrint@@Base+0x2a40>  // b.hs, b.nlast
   2801c:	ldr	x0, [sp, #72]
   28020:	lsl	x0, x0, #4
   28024:	ldr	x1, [sp, #40]
   28028:	add	x3, x1, x0
   2802c:	ldr	x0, [sp, #56]
   28030:	lsl	x0, x0, #4
   28034:	ldr	x1, [sp, #40]
   28038:	add	x0, x1, x0
   2803c:	ldr	x2, [sp, #24]
   28040:	mov	x1, x0
   28044:	mov	x0, x3
   28048:	blr	x2
   2804c:	and	w0, w0, #0xff
   28050:	cmp	w0, #0x0
   28054:	b.eq	28060 <OnPrint@@Base+0x2a40>  // b.none
   28058:	mov	w0, #0x1                   	// #1
   2805c:	b	28064 <OnPrint@@Base+0x2a44>
   28060:	mov	w0, #0x0                   	// #0
   28064:	cmp	w0, #0x0
   28068:	b.eq	28074 <OnPrint@@Base+0x2a54>  // b.none
   2806c:	ldr	x0, [sp, #56]
   28070:	str	x0, [sp, #72]
   28074:	ldr	x1, [sp, #48]
   28078:	ldr	x0, [sp, #88]
   2807c:	cmp	x1, x0
   28080:	b.cs	280c8 <OnPrint@@Base+0x2aa8>  // b.hs, b.nlast
   28084:	ldr	x0, [sp, #72]
   28088:	lsl	x0, x0, #4
   2808c:	ldr	x1, [sp, #40]
   28090:	add	x3, x1, x0
   28094:	ldr	x0, [sp, #48]
   28098:	lsl	x0, x0, #4
   2809c:	ldr	x1, [sp, #40]
   280a0:	add	x0, x1, x0
   280a4:	ldr	x2, [sp, #24]
   280a8:	mov	x1, x0
   280ac:	mov	x0, x3
   280b0:	blr	x2
   280b4:	and	w0, w0, #0xff
   280b8:	cmp	w0, #0x0
   280bc:	b.eq	280c8 <OnPrint@@Base+0x2aa8>  // b.none
   280c0:	mov	w0, #0x1                   	// #1
   280c4:	b	280cc <OnPrint@@Base+0x2aac>
   280c8:	mov	w0, #0x0                   	// #0
   280cc:	cmp	w0, #0x0
   280d0:	b.eq	280dc <OnPrint@@Base+0x2abc>  // b.none
   280d4:	ldr	x0, [sp, #48]
   280d8:	str	x0, [sp, #72]
   280dc:	ldr	x1, [sp, #72]
   280e0:	ldr	x0, [sp, #80]
   280e4:	cmp	x1, x0
   280e8:	b.eq	28124 <OnPrint@@Base+0x2b04>  // b.none
   280ec:	ldr	x0, [sp, #80]
   280f0:	lsl	x0, x0, #4
   280f4:	ldr	x1, [sp, #40]
   280f8:	add	x2, x1, x0
   280fc:	ldr	x0, [sp, #72]
   28100:	lsl	x0, x0, #4
   28104:	ldr	x1, [sp, #40]
   28108:	add	x0, x1, x0
   2810c:	mov	x1, x0
   28110:	mov	x0, x2
   28114:	bl	2858c <OnPrint@@Base+0x2f6c>
   28118:	ldr	x0, [sp, #72]
   2811c:	str	x0, [sp, #80]
   28120:	b	27fd4 <OnPrint@@Base+0x29b4>
   28124:	nop
   28128:	ldr	x0, [sp, #88]
   2812c:	sub	x0, x0, #0x1
   28130:	str	x0, [sp, #88]
   28134:	b	27fa8 <OnPrint@@Base+0x2988>
   28138:	nop
   2813c:	ldr	x30, [sp], #112
   28140:	ret
   28144:	str	x30, [sp, #-80]!
   28148:	str	x0, [sp, #56]
   2814c:	str	x1, [sp, #48]
   28150:	str	x2, [sp, #40]
   28154:	str	x3, [sp, #32]
   28158:	str	x4, [sp, #24]
   2815c:	ldr	x1, [sp, #40]
   28160:	ldr	x0, [sp, #48]
   28164:	cmp	x1, x0
   28168:	b.ls	281c0 <OnPrint@@Base+0x2ba0>  // b.plast
   2816c:	ldr	x1, [sp, #48]
   28170:	ldr	x0, [sp, #40]
   28174:	add	x0, x1, x0
   28178:	lsr	x0, x0, #1
   2817c:	str	x0, [sp, #72]
   28180:	ldr	x0, [sp, #56]
   28184:	ldr	x1, [sp, #72]
   28188:	bl	285cc <OnPrint@@Base+0x2fac>
   2818c:	ldr	x2, [sp, #24]
   28190:	ldr	x1, [sp, #32]
   28194:	blr	x2
   28198:	and	w0, w0, #0xff
   2819c:	cmp	w0, #0x0
   281a0:	b.eq	281b4 <OnPrint@@Base+0x2b94>  // b.none
   281a4:	ldr	x0, [sp, #72]
   281a8:	add	x0, x0, #0x1
   281ac:	str	x0, [sp, #48]
   281b0:	b	2815c <OnPrint@@Base+0x2b3c>
   281b4:	ldr	x0, [sp, #72]
   281b8:	str	x0, [sp, #40]
   281bc:	b	2815c <OnPrint@@Base+0x2b3c>
   281c0:	ldr	x0, [sp, #48]
   281c4:	ldr	x30, [sp], #80
   281c8:	ret
   281cc:	str	x30, [sp, #-48]!
   281d0:	str	x0, [sp, #24]
   281d4:	str	x1, [sp, #16]
   281d8:	ldr	x0, [sp, #16]
   281dc:	str	x0, [sp, #40]
   281e0:	ldr	x0, [sp, #24]
   281e4:	ldr	x0, [x0, #16]
   281e8:	str	x0, [sp, #32]
   281ec:	ldr	x1, [sp, #40]
   281f0:	ldr	x0, [sp, #32]
   281f4:	cmp	x1, x0
   281f8:	cset	w0, cs  // cs = hs, nlast
   281fc:	and	w0, w0, #0xff
   28200:	and	x0, x0, #0xff
   28204:	cmp	x0, #0x0
   28208:	b.eq	2822c <OnPrint@@Base+0x2c0c>  // b.none
   2820c:	ldr	x4, [sp, #32]
   28210:	ldr	x3, [sp, #40]
   28214:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   28218:	add	x2, x0, #0x3b0
   2821c:	mov	w1, #0x1b6                 	// #438
   28220:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   28224:	add	x0, x0, #0x180
   28228:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2822c:	ldr	x0, [sp, #24]
   28230:	ldr	x1, [x0]
   28234:	ldr	x0, [sp, #16]
   28238:	lsl	x0, x0, #4
   2823c:	add	x0, x1, x0
   28240:	ldr	x30, [sp], #48
   28244:	ret
   28248:	sub	sp, sp, #0x30
   2824c:	str	x0, [sp, #24]
   28250:	str	x1, [sp, #16]
   28254:	str	x2, [sp, #8]
   28258:	str	w3, [sp, #4]
   2825c:	ldr	x0, [sp, #16]
   28260:	ldr	x0, [x0]
   28264:	str	x0, [sp, #40]
   28268:	ldr	x1, [sp, #24]
   2826c:	ldr	x2, [sp, #40]
   28270:	ldr	x3, [sp, #8]
   28274:	ldxr	x0, [x1]
   28278:	cmp	x0, x2
   2827c:	b.ne	28288 <OnPrint@@Base+0x2c68>  // b.any
   28280:	stlxr	w4, x3, [x1]
   28284:	cbnz	w4, 28274 <OnPrint@@Base+0x2c54>
   28288:	dmb	ish
   2828c:	str	x0, [sp, #32]
   28290:	ldr	x1, [sp, #32]
   28294:	ldr	x0, [sp, #40]
   28298:	cmp	x1, x0
   2829c:	b.ne	282a8 <OnPrint@@Base+0x2c88>  // b.any
   282a0:	mov	w0, #0x1                   	// #1
   282a4:	b	282b8 <OnPrint@@Base+0x2c98>
   282a8:	ldr	x0, [sp, #16]
   282ac:	ldr	x1, [sp, #32]
   282b0:	str	x1, [x0]
   282b4:	mov	w0, #0x0                   	// #0
   282b8:	add	sp, sp, #0x30
   282bc:	ret
   282c0:	str	x30, [sp, #-48]!
   282c4:	str	x0, [sp, #40]
   282c8:	stp	x1, x2, [sp, #24]
   282cc:	str	w3, [sp, #20]
   282d0:	ldr	x0, [sp, #40]
   282d4:	cmp	x0, #0x0
   282d8:	b.eq	28314 <OnPrint@@Base+0x2cf4>  // b.none
   282dc:	add	x0, sp, #0x18
   282e0:	mov	x2, x0
   282e4:	ldr	w1, [sp, #20]
   282e8:	ldr	x0, [sp, #40]
   282ec:	bl	273f4 <OnPrint@@Base+0x1dd4>
   282f0:	and	w0, w0, #0xff
   282f4:	cmp	w0, #0x0
   282f8:	b.eq	28304 <OnPrint@@Base+0x2ce4>  // b.none
   282fc:	ldr	x0, [sp, #40]
   28300:	b	28318 <OnPrint@@Base+0x2cf8>
   28304:	ldr	x0, [sp, #40]
   28308:	ldr	x0, [x0]
   2830c:	str	x0, [sp, #40]
   28310:	b	282d0 <OnPrint@@Base+0x2cb0>
   28314:	mov	x0, #0x0                   	// #0
   28318:	ldr	x30, [sp], #48
   2831c:	ret
   28320:	str	x30, [sp, #-48]!
   28324:	str	x0, [sp, #24]
   28328:	str	wzr, [sp, #44]
   2832c:	mov	w1, #0x1                   	// #1
   28330:	ldr	x0, [sp, #24]
   28334:	bl	11080 <__sancov_default_options@@Base+0xcd4>
   28338:	str	x0, [sp, #32]
   2833c:	ldr	x0, [sp, #32]
   28340:	and	x0, x0, #0x1
   28344:	cmp	x0, #0x0
   28348:	b.ne	28380 <OnPrint@@Base+0x2d60>  // b.any
   2834c:	ldr	x0, [sp, #32]
   28350:	orr	x1, x0, #0x1
   28354:	add	x0, sp, #0x20
   28358:	mov	w3, #0x4                   	// #4
   2835c:	mov	x2, x1
   28360:	mov	x1, x0
   28364:	ldr	x0, [sp, #24]
   28368:	bl	2778c <OnPrint@@Base+0x216c>
   2836c:	and	w0, w0, #0xff
   28370:	cmp	w0, #0x0
   28374:	b.eq	28380 <OnPrint@@Base+0x2d60>  // b.none
   28378:	mov	w0, #0x1                   	// #1
   2837c:	b	28384 <OnPrint@@Base+0x2d64>
   28380:	mov	w0, #0x0                   	// #0
   28384:	cmp	w0, #0x0
   28388:	b.eq	28394 <OnPrint@@Base+0x2d74>  // b.none
   2838c:	ldr	x0, [sp, #32]
   28390:	b	283c0 <OnPrint@@Base+0x2da0>
   28394:	ldr	w0, [sp, #44]
   28398:	cmp	w0, #0x9
   2839c:	b.gt	283ac <OnPrint@@Base+0x2d8c>
   283a0:	mov	w0, #0xa                   	// #10
   283a4:	bl	ef6c <__ubsan_handle_cfi_bad_type@@Base+0x850>
   283a8:	b	283b0 <OnPrint@@Base+0x2d90>
   283ac:	bl	1e668 <__sanitizer_set_report_fd@@Base+0x44bc>
   283b0:	ldr	w0, [sp, #44]
   283b4:	add	w0, w0, #0x1
   283b8:	str	w0, [sp, #44]
   283bc:	b	2832c <OnPrint@@Base+0x2d0c>
   283c0:	ldr	x30, [sp], #48
   283c4:	ret
   283c8:	str	x30, [sp, #-32]!
   283cc:	str	x0, [sp, #24]
   283d0:	str	x1, [sp, #16]
   283d4:	ldr	x0, [sp, #16]
   283d8:	mov	w2, #0x8                   	// #8
   283dc:	mov	x1, x0
   283e0:	ldr	x0, [sp, #24]
   283e4:	bl	11104 <__sancov_default_options@@Base+0xd58>
   283e8:	nop
   283ec:	ldr	x30, [sp], #32
   283f0:	ret
   283f4:	str	x30, [sp, #-32]!
   283f8:	str	x0, [sp, #24]
   283fc:	str	x1, [sp, #16]
   28400:	ldr	x0, [sp, #24]
   28404:	str	xzr, [x0, #8]
   28408:	ldr	x0, [sp, #24]
   2840c:	str	xzr, [x0, #16]
   28410:	ldr	x0, [sp, #24]
   28414:	str	xzr, [x0]
   28418:	ldr	x1, [sp, #16]
   2841c:	ldr	x0, [sp, #24]
   28420:	bl	27d60 <OnPrint@@Base+0x2740>
   28424:	nop
   28428:	ldr	x30, [sp], #32
   2842c:	ret
   28430:	sub	sp, sp, #0x10
   28434:	str	x0, [sp, #8]
   28438:	ldr	x0, [sp, #8]
   2843c:	ldr	x0, [x0, #8]
   28440:	lsr	x0, x0, #4
   28444:	add	sp, sp, #0x10
   28448:	ret
   2844c:	stp	x19, x30, [sp, #-80]!
   28450:	str	x0, [sp, #24]
   28454:	str	x1, [sp, #16]
   28458:	ldr	x0, [sp, #16]
   2845c:	str	x0, [sp, #72]
   28460:	str	xzr, [sp, #64]
   28464:	ldr	x1, [sp, #72]
   28468:	ldr	x0, [sp, #64]
   2846c:	cmp	x1, x0
   28470:	cset	w0, ls  // ls = plast
   28474:	and	w0, w0, #0xff
   28478:	and	x0, x0, #0xff
   2847c:	cmp	x0, #0x0
   28480:	b.eq	284a4 <OnPrint@@Base+0x2e84>  // b.none
   28484:	ldr	x4, [sp, #64]
   28488:	ldr	x3, [sp, #72]
   2848c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   28490:	add	x2, x0, #0x3c8
   28494:	mov	w1, #0x1fc                 	// #508
   28498:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2849c:	add	x0, x0, #0x180
   284a0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   284a4:	ldr	x0, [sp, #24]
   284a8:	ldr	x0, [x0, #16]
   284ac:	str	x0, [sp, #56]
   284b0:	ldr	x0, [sp, #16]
   284b4:	str	x0, [sp, #48]
   284b8:	ldr	x1, [sp, #56]
   284bc:	ldr	x0, [sp, #48]
   284c0:	cmp	x1, x0
   284c4:	cset	w0, hi  // hi = pmore
   284c8:	and	w0, w0, #0xff
   284cc:	and	x0, x0, #0xff
   284d0:	cmp	x0, #0x0
   284d4:	b.eq	284f8 <OnPrint@@Base+0x2ed8>  // b.none
   284d8:	ldr	x4, [sp, #48]
   284dc:	ldr	x3, [sp, #56]
   284e0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   284e4:	add	x2, x0, #0x3e8
   284e8:	mov	w1, #0x1fd                 	// #509
   284ec:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   284f0:	add	x0, x0, #0x180
   284f4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   284f8:	ldr	x0, [sp, #16]
   284fc:	lsl	x19, x0, #4
   28500:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   28504:	mov	x1, x0
   28508:	mov	x0, x19
   2850c:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   28510:	str	x0, [sp, #40]
   28514:	mov	w2, #0x0                   	// #0
   28518:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2851c:	add	x1, x0, #0x408
   28520:	ldr	x0, [sp, #40]
   28524:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   28528:	str	x0, [sp, #32]
   2852c:	ldr	x0, [sp, #24]
   28530:	ldr	x1, [x0]
   28534:	ldr	x0, [sp, #24]
   28538:	ldr	x0, [x0, #16]
   2853c:	lsl	x0, x0, #4
   28540:	mov	x2, x0
   28544:	ldr	x0, [sp, #32]
   28548:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   2854c:	ldr	x0, [sp, #24]
   28550:	ldr	x2, [x0]
   28554:	ldr	x0, [sp, #24]
   28558:	ldr	x0, [x0, #8]
   2855c:	mov	x1, x0
   28560:	mov	x0, x2
   28564:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   28568:	ldr	x0, [sp, #24]
   2856c:	ldr	x1, [sp, #32]
   28570:	str	x1, [x0]
   28574:	ldr	x0, [sp, #24]
   28578:	ldr	x1, [sp, #40]
   2857c:	str	x1, [x0, #8]
   28580:	nop
   28584:	ldp	x19, x30, [sp], #80
   28588:	ret
   2858c:	sub	sp, sp, #0x20
   28590:	str	x0, [sp, #8]
   28594:	str	x1, [sp]
   28598:	ldr	x0, [sp, #8]
   2859c:	ldp	x0, x1, [x0]
   285a0:	stp	x0, x1, [sp, #16]
   285a4:	ldr	x2, [sp, #8]
   285a8:	ldr	x0, [sp]
   285ac:	ldp	x0, x1, [x0]
   285b0:	stp	x0, x1, [x2]
   285b4:	ldr	x2, [sp]
   285b8:	ldp	x0, x1, [sp, #16]
   285bc:	stp	x0, x1, [x2]
   285c0:	nop
   285c4:	add	sp, sp, #0x20
   285c8:	ret
   285cc:	str	x30, [sp, #-48]!
   285d0:	str	x0, [sp, #24]
   285d4:	str	x1, [sp, #16]
   285d8:	ldr	x0, [sp, #16]
   285dc:	str	x0, [sp, #40]
   285e0:	ldr	x0, [sp, #24]
   285e4:	ldr	x0, [x0, #16]
   285e8:	str	x0, [sp, #32]
   285ec:	ldr	x1, [sp, #40]
   285f0:	ldr	x0, [sp, #32]
   285f4:	cmp	x1, x0
   285f8:	cset	w0, cs  // cs = hs, nlast
   285fc:	and	w0, w0, #0xff
   28600:	and	x0, x0, #0xff
   28604:	cmp	x0, #0x0
   28608:	b.eq	2862c <OnPrint@@Base+0x300c>  // b.none
   2860c:	ldr	x4, [sp, #32]
   28610:	ldr	x3, [sp, #40]
   28614:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   28618:	add	x2, x0, #0x3b0
   2861c:	mov	w1, #0x1ba                 	// #442
   28620:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   28624:	add	x0, x0, #0x180
   28628:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2862c:	ldr	x0, [sp, #24]
   28630:	ldr	x1, [x0]
   28634:	ldr	x0, [sp, #16]
   28638:	lsl	x0, x0, #4
   2863c:	add	x0, x1, x0
   28640:	ldr	x30, [sp], #48
   28644:	ret
   28648:	sub	sp, sp, #0x20
   2864c:	str	x0, [sp, #24]
   28650:	str	x1, [sp, #16]
   28654:	str	x2, [sp, #8]
   28658:	ldr	x1, [sp, #24]
   2865c:	ldr	x0, [sp, #8]
   28660:	cmp	x1, x0
   28664:	b.ls	28684 <OnPrint@@Base+0x3064>  // b.plast
   28668:	ldr	x0, [sp, #16]
   2866c:	sub	x0, x0, #0x10
   28670:	ldr	x1, [sp, #24]
   28674:	cmp	x1, x0
   28678:	b.cs	28684 <OnPrint@@Base+0x3064>  // b.hs, b.nlast
   2867c:	mov	w0, #0x1                   	// #1
   28680:	b	28688 <OnPrint@@Base+0x3068>
   28684:	mov	w0, #0x0                   	// #0
   28688:	add	sp, sp, #0x20
   2868c:	ret
   28690:	sub	sp, sp, #0x10
   28694:	str	x0, [sp, #8]
   28698:	ldr	x0, [sp, #8]
   2869c:	add	x0, x0, #0x4
   286a0:	add	sp, sp, #0x10
   286a4:	ret
   286a8:	str	x30, [sp, #-16]!
   286ac:	mov	x0, x30
   286b0:	ldr	x30, [sp], #16
   286b4:	ret
   286b8:	str	x30, [sp, #-64]!
   286bc:	str	x0, [sp, #40]
   286c0:	str	x1, [sp, #32]
   286c4:	str	x2, [sp, #24]
   286c8:	str	x3, [sp, #16]
   286cc:	ldr	x0, [sp, #16]
   286d0:	cmp	x0, #0x0
   286d4:	cset	w0, ne  // ne = any
   286d8:	and	w0, w0, #0xff
   286dc:	mov	w1, w0
   286e0:	ldr	x0, [sp, #24]
   286e4:	add	w1, w1, w0
   286e8:	ldr	x0, [sp, #40]
   286ec:	str	w1, [x0, #8]
   286f0:	ldr	x0, [sp, #40]
   286f4:	ldr	w0, [x0, #8]
   286f8:	mov	w0, w0
   286fc:	str	x0, [sp, #56]
   28700:	mov	x0, #0x100                 	// #256
   28704:	str	x0, [sp, #48]
   28708:	ldr	x1, [sp, #56]
   2870c:	ldr	x0, [sp, #48]
   28710:	cmp	x1, x0
   28714:	cset	w0, hi  // hi = pmore
   28718:	and	w0, w0, #0xff
   2871c:	and	x0, x0, #0xff
   28720:	cmp	x0, #0x0
   28724:	b.eq	28748 <OnPrint@@Base+0x3128>  // b.none
   28728:	ldr	x4, [sp, #48]
   2872c:	ldr	x3, [sp, #56]
   28730:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   28734:	add	x2, x0, #0x478
   28738:	mov	w1, #0x22                  	// #34
   2873c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   28740:	add	x0, x0, #0x498
   28744:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   28748:	ldr	x0, [sp, #40]
   2874c:	add	x3, x0, #0x10
   28750:	ldr	x0, [sp, #24]
   28754:	lsl	x0, x0, #3
   28758:	mov	x2, x0
   2875c:	ldr	x1, [sp, #32]
   28760:	mov	x0, x3
   28764:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   28768:	ldr	x0, [sp, #16]
   2876c:	cmp	x0, #0x0
   28770:	b.eq	28788 <OnPrint@@Base+0x3168>  // b.none
   28774:	ldr	x0, [sp, #40]
   28778:	ldr	x1, [sp, #24]
   2877c:	add	x1, x1, #0x2
   28780:	ldr	x2, [sp, #16]
   28784:	str	x2, [x0, x1, lsl #3]
   28788:	ldr	x0, [sp, #40]
   2878c:	str	xzr, [x0, #2064]
   28790:	nop
   28794:	ldr	x30, [sp], #64
   28798:	ret
   2879c:	sub	sp, sp, #0x20
   287a0:	str	x0, [sp, #24]
   287a4:	str	x1, [sp, #16]
   287a8:	str	x2, [sp, #8]
   287ac:	ldr	x0, [sp, #24]
   287b0:	add	sp, sp, #0x20
   287b4:	ret
   287b8:	str	x30, [sp, #-112]!
   287bc:	str	x0, [sp, #56]
   287c0:	str	x1, [sp, #48]
   287c4:	str	x2, [sp, #40]
   287c8:	str	x3, [sp, #32]
   287cc:	str	x4, [sp, #24]
   287d0:	str	w5, [sp, #20]
   287d4:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   287d8:	str	x0, [sp, #88]
   287dc:	ldr	w0, [sp, #20]
   287e0:	str	x0, [sp, #80]
   287e4:	mov	x0, #0x2                   	// #2
   287e8:	str	x0, [sp, #72]
   287ec:	ldr	x1, [sp, #80]
   287f0:	ldr	x0, [sp, #72]
   287f4:	cmp	x1, x0
   287f8:	cset	w0, cc  // cc = lo, ul, last
   287fc:	and	w0, w0, #0xff
   28800:	and	x0, x0, #0xff
   28804:	cmp	x0, #0x0
   28808:	b.eq	2882c <OnPrint@@Base+0x320c>  // b.none
   2880c:	ldr	x4, [sp, #72]
   28810:	ldr	x3, [sp, #80]
   28814:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   28818:	add	x2, x0, #0x4e0
   2881c:	mov	w1, #0x47                  	// #71
   28820:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   28824:	add	x0, x0, #0x498
   28828:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2882c:	ldr	x0, [sp, #56]
   28830:	ldr	x1, [sp, #48]
   28834:	str	x1, [x0, #16]
   28838:	ldr	x0, [sp, #56]
   2883c:	mov	w1, #0x1                   	// #1
   28840:	str	w1, [x0, #8]
   28844:	ldr	x0, [sp, #32]
   28848:	cmp	x0, #0xfff
   2884c:	b.ls	28940 <OnPrint@@Base+0x3320>  // b.plast
   28850:	ldr	x2, [sp, #24]
   28854:	ldr	x1, [sp, #32]
   28858:	ldr	x0, [sp, #40]
   2885c:	bl	2879c <OnPrint@@Base+0x317c>
   28860:	str	x0, [sp, #104]
   28864:	ldr	x0, [sp, #24]
   28868:	str	x0, [sp, #96]
   2886c:	ldr	x0, [sp, #104]
   28870:	ldr	x2, [sp, #96]
   28874:	ldr	x1, [sp, #32]
   28878:	bl	28648 <OnPrint@@Base+0x3028>
   2887c:	and	w0, w0, #0xff
   28880:	cmp	w0, #0x0
   28884:	b.eq	288bc <OnPrint@@Base+0x329c>  // b.none
   28888:	ldr	x0, [sp, #104]
   2888c:	mov	x1, #0x8                   	// #8
   28890:	bl	10e18 <__sancov_default_options@@Base+0xa6c>
   28894:	and	w0, w0, #0xff
   28898:	cmp	w0, #0x0
   2889c:	b.eq	288bc <OnPrint@@Base+0x329c>  // b.none
   288a0:	ldr	x0, [sp, #56]
   288a4:	ldr	w0, [x0, #8]
   288a8:	ldr	w1, [sp, #20]
   288ac:	cmp	w1, w0
   288b0:	b.ls	288bc <OnPrint@@Base+0x329c>  // b.plast
   288b4:	mov	w0, #0x1                   	// #1
   288b8:	b	288c0 <OnPrint@@Base+0x32a0>
   288bc:	mov	w0, #0x0                   	// #0
   288c0:	cmp	w0, #0x0
   288c4:	b.eq	2894c <OnPrint@@Base+0x332c>  // b.none
   288c8:	ldr	x0, [sp, #104]
   288cc:	ldr	x0, [x0, #8]
   288d0:	str	x0, [sp, #64]
   288d4:	ldr	x1, [sp, #64]
   288d8:	ldr	x0, [sp, #88]
   288dc:	cmp	x1, x0
   288e0:	b.cc	28948 <OnPrint@@Base+0x3328>  // b.lo, b.ul, b.last
   288e4:	ldr	x1, [sp, #64]
   288e8:	ldr	x0, [sp, #48]
   288ec:	cmp	x1, x0
   288f0:	b.eq	2891c <OnPrint@@Base+0x32fc>  // b.none
   288f4:	ldr	x0, [sp, #56]
   288f8:	ldr	w0, [x0, #8]
   288fc:	add	w2, w0, #0x1
   28900:	ldr	x1, [sp, #56]
   28904:	str	w2, [x1, #8]
   28908:	ldr	x1, [sp, #56]
   2890c:	mov	w0, w0
   28910:	add	x0, x0, #0x2
   28914:	ldr	x2, [sp, #64]
   28918:	str	x2, [x1, x0, lsl #3]
   2891c:	ldr	x0, [sp, #104]
   28920:	str	x0, [sp, #96]
   28924:	ldr	x0, [sp, #104]
   28928:	ldr	x0, [x0]
   2892c:	ldr	x2, [sp, #96]
   28930:	ldr	x1, [sp, #32]
   28934:	bl	2879c <OnPrint@@Base+0x317c>
   28938:	str	x0, [sp, #104]
   2893c:	b	2886c <OnPrint@@Base+0x324c>
   28940:	nop
   28944:	b	2894c <OnPrint@@Base+0x332c>
   28948:	nop
   2894c:	ldr	x30, [sp], #112
   28950:	ret
   28954:	str	x30, [sp, #-64]!
   28958:	str	x0, [sp, #24]
   2895c:	str	x1, [sp, #16]
   28960:	ldr	x0, [sp, #16]
   28964:	str	x0, [sp, #48]
   28968:	ldr	x0, [sp, #24]
   2896c:	ldr	w0, [x0, #8]
   28970:	mov	w0, w0
   28974:	str	x0, [sp, #40]
   28978:	ldr	x1, [sp, #48]
   2897c:	ldr	x0, [sp, #40]
   28980:	cmp	x1, x0
   28984:	cset	w0, cs  // cs = hs, nlast
   28988:	and	w0, w0, #0xff
   2898c:	and	x0, x0, #0xff
   28990:	cmp	x0, #0x0
   28994:	b.eq	289b8 <OnPrint@@Base+0x3398>  // b.none
   28998:	ldr	x4, [sp, #40]
   2899c:	ldr	x3, [sp, #48]
   289a0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   289a4:	add	x2, x0, #0x4f8
   289a8:	mov	w1, #0x78                  	// #120
   289ac:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   289b0:	add	x0, x0, #0x498
   289b4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   289b8:	ldr	x0, [sp, #24]
   289bc:	ldr	w0, [x0, #8]
   289c0:	ldr	x1, [sp, #16]
   289c4:	sub	w1, w0, w1
   289c8:	ldr	x0, [sp, #24]
   289cc:	str	w1, [x0, #8]
   289d0:	str	xzr, [sp, #56]
   289d4:	ldr	x0, [sp, #24]
   289d8:	ldr	w0, [x0, #8]
   289dc:	mov	w0, w0
   289e0:	ldr	x1, [sp, #56]
   289e4:	cmp	x1, x0
   289e8:	b.cs	28a24 <OnPrint@@Base+0x3404>  // b.hs, b.nlast
   289ec:	ldr	x1, [sp, #56]
   289f0:	ldr	x0, [sp, #16]
   289f4:	add	x1, x1, x0
   289f8:	ldr	x0, [sp, #24]
   289fc:	add	x1, x1, #0x2
   28a00:	ldr	x2, [x0, x1, lsl #3]
   28a04:	ldr	x0, [sp, #24]
   28a08:	ldr	x1, [sp, #56]
   28a0c:	add	x1, x1, #0x2
   28a10:	str	x2, [x0, x1, lsl #3]
   28a14:	ldr	x0, [sp, #56]
   28a18:	add	x0, x0, #0x1
   28a1c:	str	x0, [sp, #56]
   28a20:	b	289d4 <OnPrint@@Base+0x33b4>
   28a24:	nop
   28a28:	ldr	x30, [sp], #64
   28a2c:	ret
   28a30:	sub	sp, sp, #0x10
   28a34:	str	x0, [sp, #8]
   28a38:	str	x1, [sp]
   28a3c:	ldr	x1, [sp, #8]
   28a40:	ldr	x0, [sp]
   28a44:	cmp	x1, x0
   28a48:	b.cs	28a5c <OnPrint@@Base+0x343c>  // b.hs, b.nlast
   28a4c:	ldr	x1, [sp]
   28a50:	ldr	x0, [sp, #8]
   28a54:	sub	x0, x1, x0
   28a58:	b	28a68 <OnPrint@@Base+0x3448>
   28a5c:	ldr	x1, [sp, #8]
   28a60:	ldr	x0, [sp]
   28a64:	sub	x0, x1, x0
   28a68:	add	sp, sp, #0x10
   28a6c:	ret
   28a70:	stp	x19, x30, [sp, #-48]!
   28a74:	str	x0, [sp, #24]
   28a78:	str	x1, [sp, #16]
   28a7c:	str	xzr, [sp, #40]
   28a80:	mov	x0, #0x1                   	// #1
   28a84:	str	x0, [sp, #32]
   28a88:	ldr	x0, [sp, #24]
   28a8c:	ldr	w0, [x0, #8]
   28a90:	mov	w0, w0
   28a94:	ldr	x1, [sp, #32]
   28a98:	cmp	x1, x0
   28a9c:	b.cs	28b10 <OnPrint@@Base+0x34f0>  // b.hs, b.nlast
   28aa0:	ldr	x0, [sp, #24]
   28aa4:	ldr	x1, [x0]
   28aa8:	ldr	x0, [sp, #32]
   28aac:	lsl	x0, x0, #3
   28ab0:	add	x0, x1, x0
   28ab4:	ldr	x0, [x0]
   28ab8:	ldr	x1, [sp, #16]
   28abc:	bl	28a30 <OnPrint@@Base+0x3410>
   28ac0:	mov	x19, x0
   28ac4:	ldr	x0, [sp, #24]
   28ac8:	ldr	x1, [x0]
   28acc:	ldr	x0, [sp, #40]
   28ad0:	lsl	x0, x0, #3
   28ad4:	add	x0, x1, x0
   28ad8:	ldr	x0, [x0]
   28adc:	ldr	x1, [sp, #16]
   28ae0:	bl	28a30 <OnPrint@@Base+0x3410>
   28ae4:	cmp	x19, x0
   28ae8:	cset	w0, cc  // cc = lo, ul, last
   28aec:	and	w0, w0, #0xff
   28af0:	cmp	w0, #0x0
   28af4:	b.eq	28b00 <OnPrint@@Base+0x34e0>  // b.none
   28af8:	ldr	x0, [sp, #32]
   28afc:	str	x0, [sp, #40]
   28b00:	ldr	x0, [sp, #32]
   28b04:	add	x0, x0, #0x1
   28b08:	str	x0, [sp, #32]
   28b0c:	b	28a88 <OnPrint@@Base+0x3468>
   28b10:	ldr	x0, [sp, #40]
   28b14:	ldp	x19, x30, [sp], #48
   28b18:	ret
   28b1c:	stp	x19, x20, [sp, #-208]!
   28b20:	stp	x21, x22, [sp, #16]
   28b24:	str	x30, [sp, #32]
   28b28:	str	x0, [sp, #56]
   28b2c:	ldr	x0, [sp, #56]
   28b30:	ldr	x0, [x0]
   28b34:	cmp	x0, #0x0
   28b38:	b.eq	28b4c <OnPrint@@Base+0x352c>  // b.none
   28b3c:	ldr	x0, [sp, #56]
   28b40:	ldr	w0, [x0, #8]
   28b44:	cmp	w0, #0x0
   28b48:	b.ne	28b5c <OnPrint@@Base+0x353c>  // b.any
   28b4c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   28b50:	add	x0, x0, #0x580
   28b54:	bl	259c8 <OnPrint@@Base+0x3a8>
   28b58:	b	28dc0 <OnPrint@@Base+0x37a0>
   28b5c:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   28b60:	lsl	x1, x0, #1
   28b64:	add	x0, sp, #0x68
   28b68:	bl	89fc <__asan_backtrace_open@plt+0x1d8c>
   28b6c:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   28b70:	mov	x1, x0
   28b74:	add	x0, sp, #0x48
   28b78:	bl	89fc <__asan_backtrace_open@plt+0x1d8c>
   28b7c:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   28b80:	ldr	w0, [x0, #184]
   28b84:	str	w0, [sp, #204]
   28b88:	str	xzr, [sp, #192]
   28b8c:	str	xzr, [sp, #184]
   28b90:	ldr	x0, [sp, #56]
   28b94:	ldr	w0, [x0, #8]
   28b98:	mov	w0, w0
   28b9c:	ldr	x1, [sp, #184]
   28ba0:	cmp	x1, x0
   28ba4:	b.cs	28d70 <OnPrint@@Base+0x3750>  // b.hs, b.nlast
   28ba8:	ldr	x0, [sp, #56]
   28bac:	ldr	x1, [x0]
   28bb0:	ldr	x0, [sp, #184]
   28bb4:	lsl	x0, x0, #3
   28bb8:	add	x0, x1, x0
   28bbc:	ldr	x0, [x0]
   28bc0:	cmp	x0, #0x0
   28bc4:	b.eq	28d70 <OnPrint@@Base+0x3750>  // b.none
   28bc8:	ldr	x0, [sp, #56]
   28bcc:	ldr	x1, [x0]
   28bd0:	ldr	x0, [sp, #184]
   28bd4:	lsl	x0, x0, #3
   28bd8:	add	x0, x1, x0
   28bdc:	ldr	x0, [x0]
   28be0:	str	x0, [sp, #136]
   28be4:	ldr	x0, [sp, #136]
   28be8:	sub	x0, x0, #0x4
   28bec:	str	x0, [sp, #168]
   28bf0:	bl	2e194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f0c>
   28bf4:	ldr	x1, [sp, #168]
   28bf8:	bl	2e48c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5204>
   28bfc:	str	x0, [sp, #160]
   28c00:	ldr	x0, [sp, #160]
   28c04:	str	x0, [sp, #152]
   28c08:	str	xzr, [sp, #144]
   28c0c:	ldr	x1, [sp, #152]
   28c10:	ldr	x0, [sp, #144]
   28c14:	cmp	x1, x0
   28c18:	cset	w0, eq  // eq = none
   28c1c:	and	w0, w0, #0xff
   28c20:	and	x0, x0, #0xff
   28c24:	cmp	x0, #0x0
   28c28:	b.eq	28c4c <OnPrint@@Base+0x362c>  // b.none
   28c2c:	ldr	x4, [sp, #144]
   28c30:	ldr	x3, [sp, #152]
   28c34:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   28c38:	add	x2, x0, #0x598
   28c3c:	mov	w1, #0x22                  	// #34
   28c40:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   28c44:	add	x0, x0, #0x5b0
   28c48:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   28c4c:	ldr	x0, [sp, #160]
   28c50:	str	x0, [sp, #176]
   28c54:	ldr	x0, [sp, #176]
   28c58:	cmp	x0, #0x0
   28c5c:	b.eq	28d58 <OnPrint@@Base+0x3738>  // b.none
   28c60:	add	x0, sp, #0x68
   28c64:	bl	8a38 <__asan_backtrace_open@plt+0x1dc8>
   28c68:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   28c6c:	ldr	x19, [x0, #192]
   28c70:	ldr	x0, [sp, #192]
   28c74:	add	x1, x0, #0x1
   28c78:	str	x1, [sp, #192]
   28c7c:	mov	w22, w0
   28c80:	ldr	x0, [sp, #176]
   28c84:	add	x20, x0, #0x8
   28c88:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   28c8c:	ldrb	w21, [x0, #181]
   28c90:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   28c94:	ldr	x1, [x0, #24]
   28c98:	add	x7, sp, #0x68
   28c9c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   28ca0:	add	x6, x0, #0x600
   28ca4:	mov	x5, x1
   28ca8:	mov	w4, w21
   28cac:	mov	x3, x20
   28cb0:	mov	w2, w22
   28cb4:	mov	x1, x19
   28cb8:	mov	x0, x7
   28cbc:	bl	2a2f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x106c>
   28cc0:	add	x0, sp, #0x68
   28cc4:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   28cc8:	mov	x1, x0
   28ccc:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   28cd0:	add	x0, x0, #0x608
   28cd4:	bl	259c8 <OnPrint@@Base+0x3a8>
   28cd8:	ldr	w0, [sp, #204]
   28cdc:	sub	w1, w0, #0x1
   28ce0:	str	w1, [sp, #204]
   28ce4:	cmp	w0, #0x0
   28ce8:	cset	w0, gt
   28cec:	and	w0, w0, #0xff
   28cf0:	cmp	w0, #0x0
   28cf4:	b.eq	28d48 <OnPrint@@Base+0x3728>  // b.none
   28cf8:	add	x0, sp, #0x48
   28cfc:	bl	f518 <__ubsan_get_current_report_data@@Base+0x234>
   28d00:	cmp	x0, #0x0
   28d04:	cset	w0, ne  // ne = any
   28d08:	and	w0, w0, #0xff
   28d0c:	cmp	w0, #0x0
   28d10:	b.eq	28d28 <OnPrint@@Base+0x3708>  // b.none
   28d14:	add	x2, sp, #0x48
   28d18:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   28d1c:	add	x1, x0, #0x610
   28d20:	mov	x0, x2
   28d24:	bl	25bdc <OnPrint@@Base+0x5bc>
   28d28:	ldr	x0, [sp, #176]
   28d2c:	ldr	x0, [x0, #40]
   28d30:	cmp	x0, #0x0
   28d34:	b.eq	28d48 <OnPrint@@Base+0x3728>  // b.none
   28d38:	ldr	x0, [sp, #176]
   28d3c:	ldr	x1, [x0, #40]
   28d40:	add	x0, sp, #0x48
   28d44:	bl	25bdc <OnPrint@@Base+0x5bc>
   28d48:	ldr	x0, [sp, #176]
   28d4c:	ldr	x0, [x0]
   28d50:	str	x0, [sp, #176]
   28d54:	b	28c54 <OnPrint@@Base+0x3634>
   28d58:	ldr	x0, [sp, #160]
   28d5c:	bl	2d200 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f78>
   28d60:	ldr	x0, [sp, #184]
   28d64:	add	x0, x0, #0x1
   28d68:	str	x0, [sp, #184]
   28d6c:	b	28b90 <OnPrint@@Base+0x3570>
   28d70:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   28d74:	add	x0, x0, #0x618
   28d78:	bl	259c8 <OnPrint@@Base+0x3a8>
   28d7c:	add	x0, sp, #0x48
   28d80:	bl	f518 <__ubsan_get_current_report_data@@Base+0x234>
   28d84:	cmp	x0, #0x0
   28d88:	cset	w0, ne  // ne = any
   28d8c:	and	w0, w0, #0xff
   28d90:	cmp	w0, #0x0
   28d94:	b.eq	28db0 <OnPrint@@Base+0x3790>  // b.none
   28d98:	add	x0, sp, #0x48
   28d9c:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   28da0:	mov	x1, x0
   28da4:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   28da8:	add	x0, x0, #0x620
   28dac:	bl	259c8 <OnPrint@@Base+0x3a8>
   28db0:	add	x0, sp, #0x48
   28db4:	bl	9274 <__asan_backtrace_open@plt+0x2604>
   28db8:	add	x0, sp, #0x68
   28dbc:	bl	9274 <__asan_backtrace_open@plt+0x2604>
   28dc0:	ldp	x21, x22, [sp, #16]
   28dc4:	ldr	x30, [sp, #32]
   28dc8:	ldp	x19, x20, [sp], #208
   28dcc:	ret
   28dd0:	str	x30, [sp, #-80]!
   28dd4:	str	x0, [sp, #72]
   28dd8:	str	w1, [sp, #68]
   28ddc:	str	x2, [sp, #56]
   28de0:	str	x3, [sp, #48]
   28de4:	str	x4, [sp, #40]
   28de8:	str	x5, [sp, #32]
   28dec:	str	x6, [sp, #24]
   28df0:	strb	w7, [sp, #67]
   28df4:	ldr	w0, [sp, #68]
   28df8:	cmp	w0, #0x0
   28dfc:	b.eq	28e08 <OnPrint@@Base+0x37e8>  // b.none
   28e00:	ldr	x0, [sp, #48]
   28e04:	b	28e0c <OnPrint@@Base+0x37ec>
   28e08:	mov	x0, #0x0                   	// #0
   28e0c:	ldr	x1, [sp, #72]
   28e10:	str	x0, [x1, #2064]
   28e14:	ldr	w0, [sp, #68]
   28e18:	cmp	w0, #0x0
   28e1c:	b.ne	28e2c <OnPrint@@Base+0x380c>  // b.any
   28e20:	ldr	x0, [sp, #72]
   28e24:	str	wzr, [x0, #8]
   28e28:	b	28ec4 <OnPrint@@Base+0x38a4>
   28e2c:	ldr	w0, [sp, #68]
   28e30:	cmp	w0, #0x1
   28e34:	b.ne	28e54 <OnPrint@@Base+0x3834>  // b.any
   28e38:	ldr	x0, [sp, #72]
   28e3c:	mov	w1, #0x1                   	// #1
   28e40:	str	w1, [x0, #8]
   28e44:	ldr	x0, [sp, #72]
   28e48:	ldr	x1, [sp, #56]
   28e4c:	str	x1, [x0, #16]
   28e50:	b	28ec4 <OnPrint@@Base+0x38a4>
   28e54:	ldrb	w0, [sp, #67]
   28e58:	bl	292b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30>
   28e5c:	and	w0, w0, #0xff
   28e60:	eor	w0, w0, #0x1
   28e64:	and	w0, w0, #0xff
   28e68:	cmp	w0, #0x0
   28e6c:	b.eq	28ea8 <OnPrint@@Base+0x3888>  // b.none
   28e70:	ldr	x0, [sp, #40]
   28e74:	cmp	x0, #0x0
   28e78:	b.eq	28e94 <OnPrint@@Base+0x3874>  // b.none
   28e7c:	ldr	w3, [sp, #68]
   28e80:	ldr	x2, [sp, #40]
   28e84:	ldr	x1, [sp, #56]
   28e88:	ldr	x0, [sp, #72]
   28e8c:	bl	33814 <__sanitizer_set_death_callback@@Base+0x2264>
   28e90:	b	28ec4 <OnPrint@@Base+0x38a4>
   28e94:	ldr	w2, [sp, #68]
   28e98:	ldr	x1, [sp, #56]
   28e9c:	ldr	x0, [sp, #72]
   28ea0:	bl	33724 <__sanitizer_set_death_callback@@Base+0x2174>
   28ea4:	b	28ec4 <OnPrint@@Base+0x38a4>
   28ea8:	ldr	w5, [sp, #68]
   28eac:	ldr	x4, [sp, #24]
   28eb0:	ldr	x3, [sp, #32]
   28eb4:	ldr	x2, [sp, #48]
   28eb8:	ldr	x1, [sp, #56]
   28ebc:	ldr	x0, [sp, #72]
   28ec0:	bl	287b8 <OnPrint@@Base+0x3198>
   28ec4:	ldr	x30, [sp], #80
   28ec8:	ret
   28ecc:	str	x30, [sp, #-64]!
   28ed0:	str	x0, [sp, #40]
   28ed4:	str	x1, [sp, #32]
   28ed8:	str	x2, [sp, #24]
   28edc:	str	x3, [sp, #16]
   28ee0:	str	xzr, [sp, #48]
   28ee4:	bl	2e194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f0c>
   28ee8:	mov	x4, x0
   28eec:	add	x0, sp, #0x30
   28ef0:	ldr	x3, [sp, #16]
   28ef4:	mov	x2, x0
   28ef8:	ldr	x1, [sp, #40]
   28efc:	mov	x0, x4
   28f00:	bl	2e738 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54b0>
   28f04:	strb	w0, [sp, #63]
   28f08:	ldrb	w0, [sp, #63]
   28f0c:	eor	w0, w0, #0x1
   28f10:	and	w0, w0, #0xff
   28f14:	cmp	w0, #0x0
   28f18:	b.eq	28f24 <OnPrint@@Base+0x3904>  // b.none
   28f1c:	mov	w0, #0x0                   	// #0
   28f20:	b	28f68 <OnPrint@@Base+0x3948>
   28f24:	ldr	x0, [sp, #32]
   28f28:	cmp	x0, #0x0
   28f2c:	b.eq	28f64 <OnPrint@@Base+0x3944>  // b.none
   28f30:	ldr	x0, [sp, #24]
   28f34:	cmp	x0, #0x0
   28f38:	b.eq	28f64 <OnPrint@@Base+0x3944>  // b.none
   28f3c:	ldr	x0, [sp, #48]
   28f40:	ldr	x2, [sp, #24]
   28f44:	mov	x1, x0
   28f48:	ldr	x0, [sp, #32]
   28f4c:	bl	1cf6c <__sanitizer_set_report_fd@@Base+0x2dc0>
   28f50:	ldr	x0, [sp, #24]
   28f54:	sub	x0, x0, #0x1
   28f58:	ldr	x1, [sp, #32]
   28f5c:	add	x0, x1, x0
   28f60:	strb	wzr, [x0]
   28f64:	mov	w0, #0x1                   	// #1
   28f68:	ldr	x30, [sp], #64
   28f6c:	ret

0000000000028f70 <__sanitizer_symbolize_pc@@Base>:
   28f70:	stp	x19, x20, [sp, #-160]!
   28f74:	stp	x21, x30, [sp, #16]
   28f78:	str	x0, [sp, #56]
   28f7c:	str	x1, [sp, #48]
   28f80:	str	x2, [sp, #40]
   28f84:	str	x3, [sp, #32]
   28f88:	ldr	x0, [sp, #32]
   28f8c:	cmp	x0, #0x0
   28f90:	b.eq	2919c <__sanitizer_symbolize_pc@@Base+0x22c>  // b.none
   28f94:	ldr	x0, [sp, #56]
   28f98:	str	x0, [sp, #96]
   28f9c:	ldr	x0, [sp, #96]
   28fa0:	sub	x0, x0, #0x4
   28fa4:	str	x0, [sp, #56]
   28fa8:	bl	2e194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f0c>
   28fac:	ldr	x1, [sp, #56]
   28fb0:	bl	2e48c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5204>
   28fb4:	str	x0, [sp, #136]
   28fb8:	ldr	x0, [sp, #136]
   28fbc:	cmp	x0, #0x0
   28fc0:	b.ne	28ff0 <__sanitizer_symbolize_pc@@Base+0x80>  // b.any
   28fc4:	ldr	x2, [sp, #32]
   28fc8:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   28fcc:	add	x1, x0, #0x638
   28fd0:	ldr	x0, [sp, #40]
   28fd4:	bl	1cf6c <__sanitizer_set_report_fd@@Base+0x2dc0>
   28fd8:	ldr	x0, [sp, #32]
   28fdc:	sub	x0, x0, #0x1
   28fe0:	ldr	x1, [sp, #40]
   28fe4:	add	x0, x1, x0
   28fe8:	strb	wzr, [x0]
   28fec:	b	291a0 <__sanitizer_symbolize_pc@@Base+0x230>
   28ff0:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   28ff4:	mov	x1, x0
   28ff8:	add	x0, sp, #0x40
   28ffc:	bl	89fc <__asan_backtrace_open@plt+0x1d8c>
   29000:	str	xzr, [sp, #152]
   29004:	ldr	x0, [sp, #32]
   29008:	sub	x0, x0, #0x1
   2900c:	ldr	x1, [sp, #40]
   29010:	add	x0, x1, x0
   29014:	str	x0, [sp, #128]
   29018:	ldr	x0, [sp, #136]
   2901c:	str	x0, [sp, #144]
   29020:	ldr	x0, [sp, #144]
   29024:	cmp	x0, #0x0
   29028:	b.eq	29128 <__sanitizer_symbolize_pc@@Base+0x1b8>  // b.none
   2902c:	ldr	x1, [sp, #40]
   29030:	ldr	x0, [sp, #128]
   29034:	cmp	x1, x0
   29038:	b.cs	29128 <__sanitizer_symbolize_pc@@Base+0x1b8>  // b.hs, b.nlast
   2903c:	add	x0, sp, #0x40
   29040:	bl	8a38 <__asan_backtrace_open@plt+0x1dc8>
   29044:	ldr	x0, [sp, #152]
   29048:	add	x1, x0, #0x1
   2904c:	str	x1, [sp, #152]
   29050:	mov	w21, w0
   29054:	ldr	x0, [sp, #144]
   29058:	add	x19, x0, #0x8
   2905c:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   29060:	ldrb	w20, [x0, #181]
   29064:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   29068:	ldr	x1, [x0, #24]
   2906c:	add	x7, sp, #0x40
   29070:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29074:	add	x6, x0, #0x600
   29078:	mov	x5, x1
   2907c:	mov	w4, w20
   29080:	mov	x3, x19
   29084:	mov	w2, w21
   29088:	ldr	x1, [sp, #48]
   2908c:	mov	x0, x7
   29090:	bl	2a2f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x106c>
   29094:	add	x0, sp, #0x40
   29098:	bl	f518 <__ubsan_get_current_report_data@@Base+0x234>
   2909c:	cmp	x0, #0x0
   290a0:	cset	w0, eq  // eq = none
   290a4:	and	w0, w0, #0xff
   290a8:	cmp	w0, #0x0
   290ac:	b.ne	29114 <__sanitizer_symbolize_pc@@Base+0x1a4>  // b.any
   290b0:	ldr	x1, [sp, #128]
   290b4:	ldr	x0, [sp, #40]
   290b8:	sub	x0, x1, x0
   290bc:	sub	x0, x0, #0x1
   290c0:	str	x0, [sp, #120]
   290c4:	add	x0, sp, #0x40
   290c8:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   290cc:	ldr	x2, [sp, #120]
   290d0:	mov	x1, x0
   290d4:	ldr	x0, [sp, #40]
   290d8:	bl	1cf6c <__sanitizer_set_report_fd@@Base+0x2dc0>
   290dc:	add	x0, sp, #0x40
   290e0:	bl	f518 <__ubsan_get_current_report_data@@Base+0x234>
   290e4:	mov	x1, x0
   290e8:	ldr	x0, [sp, #120]
   290ec:	bl	9374 <__asan_backtrace_open@plt+0x2704>
   290f0:	mov	x1, x0
   290f4:	ldr	x0, [sp, #40]
   290f8:	add	x0, x0, x1
   290fc:	str	x0, [sp, #40]
   29100:	ldr	x0, [sp, #40]
   29104:	add	x1, x0, #0x1
   29108:	str	x1, [sp, #40]
   2910c:	strb	wzr, [x0]
   29110:	b	29118 <__sanitizer_symbolize_pc@@Base+0x1a8>
   29114:	nop
   29118:	ldr	x0, [sp, #144]
   2911c:	ldr	x0, [x0]
   29120:	str	x0, [sp, #144]
   29124:	b	29020 <__sanitizer_symbolize_pc@@Base+0xb0>
   29128:	ldr	x1, [sp, #40]
   2912c:	ldr	x0, [sp, #128]
   29130:	cmp	x1, x0
   29134:	cset	w0, ls  // ls = plast
   29138:	and	w0, w0, #0xff
   2913c:	and	x0, x0, #0xff
   29140:	str	x0, [sp, #112]
   29144:	str	xzr, [sp, #104]
   29148:	ldr	x1, [sp, #112]
   2914c:	ldr	x0, [sp, #104]
   29150:	cmp	x1, x0
   29154:	cset	w0, eq  // eq = none
   29158:	and	w0, w0, #0xff
   2915c:	and	x0, x0, #0xff
   29160:	cmp	x0, #0x0
   29164:	b.eq	29188 <__sanitizer_symbolize_pc@@Base+0x218>  // b.none
   29168:	ldr	x4, [sp, #104]
   2916c:	ldr	x3, [sp, #112]
   29170:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29174:	add	x2, x0, #0x650
   29178:	mov	w1, #0x84                  	// #132
   2917c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29180:	add	x0, x0, #0x5b0
   29184:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   29188:	ldr	x0, [sp, #40]
   2918c:	strb	wzr, [x0]
   29190:	add	x0, sp, #0x40
   29194:	bl	9274 <__asan_backtrace_open@plt+0x2604>
   29198:	b	291a0 <__sanitizer_symbolize_pc@@Base+0x230>
   2919c:	nop
   291a0:	ldp	x21, x30, [sp, #16]
   291a4:	ldp	x19, x20, [sp], #160
   291a8:	ret

00000000000291ac <__sanitizer_symbolize_global@@Base>:
   291ac:	str	x30, [sp, #-144]!
   291b0:	str	x0, [sp, #40]
   291b4:	str	x1, [sp, #32]
   291b8:	str	x2, [sp, #24]
   291bc:	str	x3, [sp, #16]
   291c0:	ldr	x0, [sp, #16]
   291c4:	cmp	x0, #0x0
   291c8:	b.eq	29274 <__sanitizer_symbolize_global@@Base+0xc8>  // b.none
   291cc:	ldr	x0, [sp, #24]
   291d0:	strb	wzr, [x0]
   291d4:	add	x0, sp, #0x50
   291d8:	bl	2d248 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fc0>
   291dc:	bl	2e194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f0c>
   291e0:	mov	x3, x0
   291e4:	add	x0, sp, #0x50
   291e8:	mov	x2, x0
   291ec:	ldr	x1, [sp, #40]
   291f0:	mov	x0, x3
   291f4:	bl	2e5d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x534c>
   291f8:	and	w0, w0, #0xff
   291fc:	eor	w0, w0, #0x1
   29200:	and	w0, w0, #0xff
   29204:	cmp	w0, #0x0
   29208:	b.ne	2927c <__sanitizer_symbolize_global@@Base+0xd0>  // b.any
   2920c:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   29210:	mov	x1, x0
   29214:	add	x0, sp, #0x30
   29218:	bl	89fc <__asan_backtrace_open@plt+0x1d8c>
   2921c:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   29220:	ldr	x2, [x0, #24]
   29224:	add	x1, sp, #0x50
   29228:	add	x0, sp, #0x30
   2922c:	mov	x3, x2
   29230:	mov	x2, x1
   29234:	ldr	x1, [sp, #32]
   29238:	bl	2a7e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1558>
   2923c:	add	x0, sp, #0x30
   29240:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   29244:	ldr	x2, [sp, #16]
   29248:	mov	x1, x0
   2924c:	ldr	x0, [sp, #24]
   29250:	bl	1cf6c <__sanitizer_set_report_fd@@Base+0x2dc0>
   29254:	ldr	x0, [sp, #16]
   29258:	sub	x0, x0, #0x1
   2925c:	ldr	x1, [sp, #24]
   29260:	add	x0, x1, x0
   29264:	strb	wzr, [x0]
   29268:	add	x0, sp, #0x30
   2926c:	bl	9274 <__asan_backtrace_open@plt+0x2604>
   29270:	b	29280 <__sanitizer_symbolize_global@@Base+0xd4>
   29274:	nop
   29278:	b	29280 <__sanitizer_symbolize_global@@Base+0xd4>
   2927c:	nop
   29280:	ldr	x30, [sp], #144
   29284:	ret

0000000000029288 <__sanitizer_get_module_and_offset_for_pc@@Base>:
   29288:	str	x30, [sp, #-48]!
   2928c:	str	x0, [sp, #40]
   29290:	str	x1, [sp, #32]
   29294:	str	x2, [sp, #24]
   29298:	str	x3, [sp, #16]
   2929c:	ldr	x3, [sp, #16]
   292a0:	ldr	x2, [sp, #24]
   292a4:	ldr	x1, [sp, #32]
   292a8:	ldr	x0, [sp, #40]
   292ac:	bl	28ecc <OnPrint@@Base+0x38ac>
   292b0:	ldr	x30, [sp], #48
   292b4:	ret
   292b8:	sub	sp, sp, #0x10
   292bc:	strb	w0, [sp, #15]
   292c0:	ldrb	w0, [sp, #15]
   292c4:	add	sp, sp, #0x10
   292c8:	ret
   292cc:	stp	x19, x30, [sp, #-80]!
   292d0:	str	x0, [sp, #40]
   292d4:	str	x1, [sp, #32]
   292d8:	str	x2, [sp, #24]
   292dc:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   292e0:	ldrb	w0, [x0, #60]
   292e4:	eor	w0, w0, #0x1
   292e8:	and	w0, w0, #0xff
   292ec:	cmp	w0, #0x0
   292f0:	b.ne	29370 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe8>  // b.any
   292f4:	add	x0, sp, #0x30
   292f8:	mov	x1, #0x400                 	// #1024
   292fc:	bl	89fc <__asan_backtrace_open@plt+0x1d8c>
   29300:	add	x3, sp, #0x30
   29304:	ldr	x2, [sp, #40]
   29308:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2930c:	add	x1, x0, #0x890
   29310:	mov	x0, x3
   29314:	bl	25bdc <OnPrint@@Base+0x5bc>
   29318:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   2931c:	ldrb	w19, [x0, #181]
   29320:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   29324:	ldr	x1, [x0, #24]
   29328:	add	x7, sp, #0x30
   2932c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29330:	add	x6, x0, #0x868
   29334:	mov	x5, x1
   29338:	mov	w4, w19
   2933c:	ldr	x3, [sp, #32]
   29340:	mov	w2, #0x0                   	// #0
   29344:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29348:	add	x1, x0, #0x898
   2934c:	mov	x0, x7
   29350:	bl	2a2f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x106c>
   29354:	add	x0, sp, #0x30
   29358:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   2935c:	ldr	x1, [sp, #24]
   29360:	bl	13e3c <__sancov_default_options@@Base+0x3a90>
   29364:	add	x0, sp, #0x30
   29368:	bl	9274 <__asan_backtrace_open@plt+0x2604>
   2936c:	b	29374 <__sanitizer_get_module_and_offset_for_pc@@Base+0xec>
   29370:	nop
   29374:	ldp	x19, x30, [sp], #80
   29378:	ret
   2937c:	stp	x19, x30, [sp, #-48]!
   29380:	str	x0, [sp, #24]
   29384:	ldr	x0, [sp, #24]
   29388:	ldr	x1, [x0]
   2938c:	add	x0, sp, #0x28
   29390:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   29394:	ldr	x0, [sp, #24]
   29398:	bl	19844 <__sanitizer_cov_pcs_init@@Base+0x3d80>
   2939c:	ldr	x0, [sp, #24]
   293a0:	ldr	w0, [x0, #8]
   293a4:	bl	23530 <__sanitizer_set_report_fd@@Base+0x9384>
   293a8:	and	w19, w0, #0xff
   293ac:	nop
   293b0:	add	x0, sp, #0x28
   293b4:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   293b8:	mov	w0, w19
   293bc:	ldp	x19, x30, [sp], #48
   293c0:	ret
   293c4:	str	x30, [sp, #-16]!
   293c8:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   293cc:	ldr	x0, [x0, #3976]
   293d0:	bl	2937c <__sanitizer_get_module_and_offset_for_pc@@Base+0xf4>
   293d4:	and	w0, w0, #0xff
   293d8:	ldr	x30, [sp], #16
   293dc:	ret
   293e0:	str	x30, [sp, #-32]!
   293e4:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   293e8:	ldr	x0, [x0, #112]
   293ec:	str	x0, [sp, #24]
   293f0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   293f4:	add	x1, x0, #0x8a0
   293f8:	ldr	x0, [sp, #24]
   293fc:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   29400:	cmp	w0, #0x0
   29404:	b.eq	29430 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a8>  // b.none
   29408:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2940c:	add	x1, x0, #0x8a8
   29410:	ldr	x0, [sp, #24]
   29414:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   29418:	cmp	w0, #0x0
   2941c:	b.ne	29438 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b0>  // b.any
   29420:	bl	293c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13c>
   29424:	and	w0, w0, #0xff
   29428:	cmp	w0, #0x0
   2942c:	b.eq	29438 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b0>  // b.none
   29430:	mov	w0, #0x1                   	// #1
   29434:	b	2943c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b4>
   29438:	mov	w0, #0x0                   	// #0
   2943c:	ldr	x30, [sp], #32
   29440:	ret
   29444:	str	x30, [sp, #-80]!
   29448:	str	x0, [sp, #40]
   2944c:	str	x1, [sp, #32]
   29450:	str	x2, [sp, #24]
   29454:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   29458:	ldrb	w0, [x0, #60]
   2945c:	eor	w0, w0, #0x1
   29460:	and	w0, w0, #0xff
   29464:	cmp	w0, #0x0
   29468:	b.ne	294dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x254>  // b.any
   2946c:	ldr	x0, [sp, #32]
   29470:	ldr	w0, [x0, #8]
   29474:	cmp	w0, #0x0
   29478:	b.ne	2948c <__sanitizer_get_module_and_offset_for_pc@@Base+0x204>  // b.any
   2947c:	mov	x1, #0x0                   	// #0
   29480:	ldr	x0, [sp, #40]
   29484:	bl	13e3c <__sancov_default_options@@Base+0x3a90>
   29488:	b	294e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x258>
   2948c:	ldr	x0, [sp, #32]
   29490:	ldr	x0, [x0]
   29494:	ldr	x0, [x0]
   29498:	str	x0, [sp, #56]
   2949c:	ldr	x0, [sp, #56]
   294a0:	sub	x0, x0, #0x4
   294a4:	str	x0, [sp, #72]
   294a8:	bl	2e194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f0c>
   294ac:	ldr	x1, [sp, #72]
   294b0:	bl	2e48c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5204>
   294b4:	str	x0, [sp, #64]
   294b8:	ldr	x0, [sp, #64]
   294bc:	add	x0, x0, #0x8
   294c0:	ldr	x2, [sp, #24]
   294c4:	mov	x1, x0
   294c8:	ldr	x0, [sp, #40]
   294cc:	bl	292cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x44>
   294d0:	ldr	x0, [sp, #64]
   294d4:	bl	2d200 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f78>
   294d8:	b	294e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x258>
   294dc:	nop
   294e0:	ldr	x30, [sp], #80
   294e4:	ret
   294e8:	stp	x29, x30, [sp, #-144]!
   294ec:	mov	x29, sp
   294f0:	str	x19, [sp, #16]
   294f4:	mov	x19, x30
   294f8:	str	w0, [x29, #44]
   294fc:	ldr	w0, [x29, #44]
   29500:	and	w0, w0, #0x6
   29504:	cmp	w0, #0x6
   29508:	b.ne	29634 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ac>  // b.any
   2950c:	add	x0, x29, #0x68
   29510:	bl	29cec <__sanitizer_get_module_and_offset_for_pc@@Base+0xa64>
   29514:	add	x0, x29, #0x60
   29518:	bl	9134 <__asan_backtrace_open@plt+0x24c4>
   2951c:	add	x0, x29, #0x48
   29520:	mov	x1, #0x1                   	// #1
   29524:	bl	29ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc60>
   29528:	add	x0, x29, #0x48
   2952c:	bl	29f34 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcac>
   29530:	str	x0, [x29, #136]
   29534:	ldr	x0, [x29, #136]
   29538:	bl	29eac <__sanitizer_get_module_and_offset_for_pc@@Base+0xc24>
   2953c:	str	xzr, [x29, #64]
   29540:	str	xzr, [x29, #56]
   29544:	mov	x0, x29
   29548:	str	x0, [x29, #128]
   2954c:	mov	x0, x19
   29550:	str	x0, [x29, #120]
   29554:	add	x0, x29, #0x30
   29558:	str	x0, [x29, #112]
   2955c:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   29560:	ldrb	w0, [x0, #33]
   29564:	strb	w0, [x29, #111]
   29568:	ldrb	w0, [x29, #111]
   2956c:	cmp	w0, #0x0
   29570:	b.eq	2958c <__sanitizer_get_module_and_offset_for_pc@@Base+0x304>  // b.none
   29574:	add	x1, x29, #0x38
   29578:	add	x0, x29, #0x40
   2957c:	mov	x2, x1
   29580:	mov	x1, x0
   29584:	mov	w0, #0x0                   	// #0
   29588:	bl	20b2c <__sanitizer_set_report_fd@@Base+0x6980>
   2958c:	ldr	x0, [x29, #64]
   29590:	ldr	x1, [x29, #56]
   29594:	ldrb	w7, [x29, #111]
   29598:	mov	x6, x1
   2959c:	mov	x5, x0
   295a0:	mov	x4, #0x0                   	// #0
   295a4:	ldr	x3, [x29, #128]
   295a8:	ldr	x2, [x29, #120]
   295ac:	mov	w1, #0x100                 	// #256
   295b0:	ldr	x0, [x29, #136]
   295b4:	bl	28dd0 <OnPrint@@Base+0x37b0>
   295b8:	add	x0, x29, #0x60
   295bc:	bl	91c0 <__asan_backtrace_open@plt+0x2550>
   295c0:	mov	x1, x0
   295c4:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   295c8:	add	x0, x0, #0x8b0
   295cc:	bl	259c8 <OnPrint@@Base+0x3a8>
   295d0:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   295d4:	ldr	x0, [x0, #4024]
   295d8:	ldr	x0, [x0]
   295dc:	mov	x1, x0
   295e0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   295e4:	add	x0, x0, #0x8b8
   295e8:	bl	25a74 <OnPrint@@Base+0x454>
   295ec:	add	x0, x29, #0x60
   295f0:	bl	918c <__asan_backtrace_open@plt+0x251c>
   295f4:	mov	x1, x0
   295f8:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   295fc:	add	x0, x0, #0x8b0
   29600:	bl	259c8 <OnPrint@@Base+0x3a8>
   29604:	ldr	x0, [x29, #136]
   29608:	bl	28b1c <OnPrint@@Base+0x34fc>
   2960c:	mov	x2, #0x0                   	// #0
   29610:	ldr	x1, [x29, #136]
   29614:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29618:	add	x0, x0, #0x8e8
   2961c:	bl	29444 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bc>
   29620:	add	x0, x29, #0x48
   29624:	bl	29f18 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc90>
   29628:	add	x0, x29, #0x68
   2962c:	bl	29d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0xb14>
   29630:	b	29638 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b0>
   29634:	nop
   29638:	ldr	x19, [sp, #16]
   2963c:	ldp	x29, x30, [sp], #144
   29640:	ret
   29644:	stp	x19, x30, [sp, #-16]!
   29648:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   2964c:	ldr	x0, [x0, #4024]
   29650:	ldr	x19, [x0]
   29654:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   29658:	ldr	x0, [x0, #4024]
   2965c:	ldr	x0, [x0]
   29660:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   29664:	mov	x1, x0
   29668:	mov	x0, x19
   2966c:	bl	197e4 <__sanitizer_cov_pcs_init@@Base+0x3d20>
   29670:	mov	x1, #0xe                   	// #14
   29674:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29678:	add	x0, x0, #0x8f8
   2967c:	bl	197e4 <__sanitizer_cov_pcs_init@@Base+0x3d20>
   29680:	nop
   29684:	ldp	x19, x30, [sp], #16
   29688:	ret
   2968c:	str	x30, [sp, #-144]!
   29690:	str	x0, [sp, #24]
   29694:	add	x0, sp, #0x70
   29698:	mov	w1, #0x1                   	// #1
   2969c:	bl	26098 <OnPrint@@Base+0xa78>
   296a0:	add	x0, sp, #0x20
   296a4:	mov	x2, #0x0                   	// #0
   296a8:	mov	x1, #0x0                   	// #0
   296ac:	bl	21c64 <__sanitizer_set_report_fd@@Base+0x7ab8>
   296b0:	add	x1, sp, #0x20
   296b4:	add	x0, sp, #0x70
   296b8:	bl	266a8 <OnPrint@@Base+0x1088>
   296bc:	and	w0, w0, #0xff
   296c0:	cmp	w0, #0x0
   296c4:	b.eq	29728 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a0>  // b.none
   296c8:	ldr	x0, [sp, #32]
   296cc:	ldr	x1, [sp, #24]
   296d0:	cmp	x1, x0
   296d4:	b.cc	2970c <__sanitizer_get_module_and_offset_for_pc@@Base+0x484>  // b.lo, b.ul, b.last
   296d8:	ldr	x0, [sp, #40]
   296dc:	ldr	x1, [sp, #24]
   296e0:	cmp	x1, x0
   296e4:	b.cs	2970c <__sanitizer_get_module_and_offset_for_pc@@Base+0x484>  // b.hs, b.nlast
   296e8:	add	x0, sp, #0x20
   296ec:	bl	23110 <__sanitizer_set_report_fd@@Base+0x8f64>
   296f0:	and	w0, w0, #0xff
   296f4:	eor	w0, w0, #0x1
   296f8:	and	w0, w0, #0xff
   296fc:	cmp	w0, #0x0
   29700:	b.eq	2970c <__sanitizer_get_module_and_offset_for_pc@@Base+0x484>  // b.none
   29704:	mov	w0, #0x1                   	// #1
   29708:	b	29710 <__sanitizer_get_module_and_offset_for_pc@@Base+0x488>
   2970c:	mov	w0, #0x0                   	// #0
   29710:	cmp	w0, #0x0
   29714:	b.eq	296b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x428>  // b.none
   29718:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2971c:	add	x0, x0, #0x908
   29720:	bl	25a74 <OnPrint@@Base+0x454>
   29724:	b	296b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x428>
   29728:	add	x0, sp, #0x20
   2972c:	bl	21ca0 <__sanitizer_set_report_fd@@Base+0x7af4>
   29730:	add	x0, sp, #0x70
   29734:	bl	26194 <OnPrint@@Base+0xb74>
   29738:	nop
   2973c:	ldr	x30, [sp], #144
   29740:	ret
   29744:	stp	x19, x20, [sp, #-80]!
   29748:	stp	x21, x30, [sp, #16]
   2974c:	str	x0, [sp, #56]
   29750:	str	x1, [sp, #48]
   29754:	strb	w2, [sp, #47]
   29758:	add	x0, sp, #0x48
   2975c:	bl	9134 <__asan_backtrace_open@plt+0x24c4>
   29760:	add	x0, sp, #0x48
   29764:	bl	29e60 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbd8>
   29768:	mov	x21, x0
   2976c:	ldrb	w0, [sp, #47]
   29770:	asr	w19, w0, #4
   29774:	ldrb	w0, [sp, #47]
   29778:	and	w20, w0, #0xf
   2977c:	add	x0, sp, #0x48
   29780:	bl	918c <__asan_backtrace_open@plt+0x251c>
   29784:	mov	x6, x0
   29788:	mov	w5, w20
   2978c:	mov	w4, w19
   29790:	mov	x3, x21
   29794:	ldr	x2, [sp, #48]
   29798:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2979c:	add	x1, x0, #0x948
   297a0:	ldr	x0, [sp, #56]
   297a4:	bl	25bdc <OnPrint@@Base+0x5bc>
   297a8:	nop
   297ac:	ldp	x21, x30, [sp, #16]
   297b0:	ldp	x19, x20, [sp], #80
   297b4:	ret
   297b8:	str	x30, [sp, #-80]!
   297bc:	str	x0, [sp, #24]
   297c0:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   297c4:	ldrb	w0, [x0, #232]
   297c8:	eor	w0, w0, #0x1
   297cc:	and	w0, w0, #0xff
   297d0:	cmp	w0, #0x0
   297d4:	b.ne	297ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x564>  // b.any
   297d8:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   297dc:	mov	x1, x0
   297e0:	ldr	x0, [sp, #24]
   297e4:	cmp	x0, x1
   297e8:	b.cs	297f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56c>  // b.hs, b.nlast
   297ec:	mov	w0, #0x1                   	// #1
   297f0:	b	297f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x570>
   297f4:	mov	w0, #0x0                   	// #0
   297f8:	cmp	w0, #0x0
   297fc:	b.ne	298d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x648>  // b.any
   29800:	add	x0, sp, #0x28
   29804:	mov	x1, #0x400                 	// #1024
   29808:	bl	89fc <__asan_backtrace_open@plt+0x1d8c>
   2980c:	add	x2, sp, #0x28
   29810:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29814:	add	x1, x0, #0x958
   29818:	mov	x0, x2
   2981c:	bl	25bdc <OnPrint@@Base+0x5bc>
   29820:	mov	x1, #0x10                  	// #16
   29824:	ldr	x0, [sp, #24]
   29828:	bl	23908 <__sanitizer_set_report_fd@@Base+0x975c>
   2982c:	and	w0, w0, #0xff
   29830:	cmp	w0, #0x0
   29834:	b.eq	29898 <__sanitizer_get_module_and_offset_for_pc@@Base+0x610>  // b.none
   29838:	str	wzr, [sp, #76]
   2983c:	ldr	w0, [sp, #76]
   29840:	cmp	w0, #0xf
   29844:	b.gt	29880 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f8>
   29848:	ldrsw	x1, [sp, #76]
   2984c:	ldr	x0, [sp, #24]
   29850:	add	x0, x1, x0
   29854:	ldrb	w0, [x0]
   29858:	add	x3, sp, #0x28
   2985c:	mov	w2, w0
   29860:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29864:	add	x1, x0, #0x868
   29868:	mov	x0, x3
   2986c:	bl	29744 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4bc>
   29870:	ldr	w0, [sp, #76]
   29874:	add	w0, w0, #0x1
   29878:	str	w0, [sp, #76]
   2987c:	b	2983c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b4>
   29880:	add	x2, sp, #0x28
   29884:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29888:	add	x1, x0, #0x980
   2988c:	mov	x0, x2
   29890:	bl	25bdc <OnPrint@@Base+0x5bc>
   29894:	b	298ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x624>
   29898:	add	x2, sp, #0x28
   2989c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   298a0:	add	x1, x0, #0x988
   298a4:	mov	x0, x2
   298a8:	bl	25bdc <OnPrint@@Base+0x5bc>
   298ac:	add	x0, sp, #0x28
   298b0:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   298b4:	mov	x1, x0
   298b8:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   298bc:	add	x0, x0, #0x8b0
   298c0:	bl	25a74 <OnPrint@@Base+0x454>
   298c4:	add	x0, sp, #0x28
   298c8:	bl	9274 <__asan_backtrace_open@plt+0x2604>
   298cc:	b	298d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64c>
   298d0:	nop
   298d4:	ldr	x30, [sp], #80
   298d8:	ret
   298dc:	str	x30, [sp, #-32]!
   298e0:	str	x0, [sp, #24]
   298e4:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   298e8:	ldrb	w0, [x0, #233]
   298ec:	eor	w0, w0, #0x1
   298f0:	and	w0, w0, #0xff
   298f4:	cmp	w0, #0x0
   298f8:	b.ne	29908 <__sanitizer_get_module_and_offset_for_pc@@Base+0x680>  // b.any
   298fc:	ldr	x0, [sp, #24]
   29900:	bl	20298 <__sanitizer_set_report_fd@@Base+0x60ec>
   29904:	b	2990c <__sanitizer_get_module_and_offset_for_pc@@Base+0x684>
   29908:	nop
   2990c:	ldr	x30, [sp], #32
   29910:	ret
   29914:	str	x30, [sp, #-96]!
   29918:	str	x0, [sp, #40]
   2991c:	str	w1, [sp, #36]
   29920:	str	x2, [sp, #24]
   29924:	str	x3, [sp, #16]
   29928:	add	x0, sp, #0x50
   2992c:	bl	9134 <__asan_backtrace_open@plt+0x24c4>
   29930:	add	x0, sp, #0x50
   29934:	bl	91c0 <__asan_backtrace_open@plt+0x2550>
   29938:	mov	x1, x0
   2993c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29940:	add	x0, x0, #0x8b0
   29944:	bl	259c8 <OnPrint@@Base+0x3a8>
   29948:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   2994c:	ldr	x0, [x0, #4024]
   29950:	ldr	x1, [x0]
   29954:	ldr	x0, [sp, #40]
   29958:	ldr	x0, [x0, #16]
   2995c:	mov	x2, x0
   29960:	ldr	x0, [sp, #40]
   29964:	ldr	x0, [x0, #24]
   29968:	mov	x3, x0
   2996c:	ldr	x0, [sp, #40]
   29970:	ldr	x0, [x0, #40]
   29974:	mov	x4, x0
   29978:	ldr	x0, [sp, #40]
   2997c:	ldr	x0, [x0, #32]
   29980:	ldr	w7, [sp, #36]
   29984:	mov	x6, x0
   29988:	mov	x5, x4
   2998c:	mov	x4, x3
   29990:	mov	x3, x2
   29994:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29998:	add	x2, x0, #0x998
   2999c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   299a0:	add	x0, x0, #0x9a8
   299a4:	bl	25a74 <OnPrint@@Base+0x454>
   299a8:	add	x0, sp, #0x50
   299ac:	bl	918c <__asan_backtrace_open@plt+0x251c>
   299b0:	mov	x1, x0
   299b4:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   299b8:	add	x0, x0, #0x8b0
   299bc:	bl	259c8 <OnPrint@@Base+0x3a8>
   299c0:	add	x0, sp, #0x38
   299c4:	mov	x1, #0x1                   	// #1
   299c8:	bl	29ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc60>
   299cc:	add	x0, sp, #0x38
   299d0:	bl	29f34 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcac>
   299d4:	str	x0, [sp, #88]
   299d8:	ldr	x0, [sp, #88]
   299dc:	bl	29eac <__sanitizer_get_module_and_offset_for_pc@@Base+0xc24>
   299e0:	ldr	x3, [sp, #24]
   299e4:	ldr	x2, [sp, #88]
   299e8:	ldr	x1, [sp, #16]
   299ec:	ldr	x0, [sp, #40]
   299f0:	blr	x3
   299f4:	ldr	x0, [sp, #88]
   299f8:	bl	28b1c <OnPrint@@Base+0x34fc>
   299fc:	mov	x2, #0x0                   	// #0
   29a00:	ldr	x1, [sp, #88]
   29a04:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29a08:	add	x0, x0, #0x998
   29a0c:	bl	29444 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bc>
   29a10:	add	x0, sp, #0x38
   29a14:	bl	29f18 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc90>
   29a18:	nop
   29a1c:	ldr	x30, [sp], #96
   29a20:	ret
   29a24:	stp	x19, x30, [sp, #-112]!
   29a28:	str	x0, [sp, #40]
   29a2c:	str	w1, [sp, #36]
   29a30:	str	x2, [sp, #24]
   29a34:	str	x3, [sp, #16]
   29a38:	add	x0, sp, #0x50
   29a3c:	bl	9134 <__asan_backtrace_open@plt+0x24c4>
   29a40:	add	x0, sp, #0x50
   29a44:	bl	91c0 <__asan_backtrace_open@plt+0x2550>
   29a48:	mov	x1, x0
   29a4c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29a50:	add	x0, x0, #0x8b0
   29a54:	bl	259c8 <OnPrint@@Base+0x3a8>
   29a58:	ldr	x0, [sp, #40]
   29a5c:	bl	23070 <__sanitizer_set_report_fd@@Base+0x8ec4>
   29a60:	str	x0, [sp, #104]
   29a64:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   29a68:	ldr	x0, [x0, #4024]
   29a6c:	ldr	x1, [x0]
   29a70:	ldr	x0, [sp, #40]
   29a74:	ldr	x0, [x0, #16]
   29a78:	mov	x2, x0
   29a7c:	ldr	x0, [sp, #40]
   29a80:	ldr	x0, [x0, #24]
   29a84:	mov	x3, x0
   29a88:	ldr	x0, [sp, #40]
   29a8c:	ldr	x0, [x0, #40]
   29a90:	mov	x4, x0
   29a94:	ldr	x0, [sp, #40]
   29a98:	ldr	x0, [x0, #32]
   29a9c:	ldr	w7, [sp, #36]
   29aa0:	mov	x6, x0
   29aa4:	mov	x5, x4
   29aa8:	mov	x4, x3
   29aac:	mov	x3, x2
   29ab0:	ldr	x2, [sp, #104]
   29ab4:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29ab8:	add	x0, x0, #0x9e0
   29abc:	bl	25a74 <OnPrint@@Base+0x454>
   29ac0:	add	x0, sp, #0x50
   29ac4:	bl	918c <__asan_backtrace_open@plt+0x251c>
   29ac8:	mov	x1, x0
   29acc:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29ad0:	add	x0, x0, #0x8b0
   29ad4:	bl	259c8 <OnPrint@@Base+0x3a8>
   29ad8:	ldr	x0, [sp, #40]
   29adc:	ldr	x19, [x0, #24]
   29ae0:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   29ae4:	cmp	x19, x0
   29ae8:	cset	w0, cc  // cc = lo, ul, last
   29aec:	and	w0, w0, #0xff
   29af0:	cmp	w0, #0x0
   29af4:	b.eq	29b04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x87c>  // b.none
   29af8:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29afc:	add	x0, x0, #0xa20
   29b00:	bl	25a74 <OnPrint@@Base+0x454>
   29b04:	ldr	x0, [sp, #40]
   29b08:	ldrb	w0, [x0, #48]
   29b0c:	cmp	w0, #0x0
   29b10:	b.eq	29b94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x90c>  // b.none
   29b14:	ldr	x0, [sp, #40]
   29b18:	ldr	w0, [x0, #52]
   29b1c:	cmp	w0, #0x2
   29b20:	b.eq	29b4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x8c4>  // b.none
   29b24:	ldr	x0, [sp, #40]
   29b28:	ldr	w0, [x0, #52]
   29b2c:	cmp	w0, #0x1
   29b30:	b.ne	29b40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>  // b.any
   29b34:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29b38:	add	x0, x0, #0xa48
   29b3c:	b	29b54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8cc>
   29b40:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29b44:	add	x0, x0, #0xa50
   29b48:	b	29b54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8cc>
   29b4c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29b50:	add	x0, x0, #0xa58
   29b54:	str	x0, [sp, #96]
   29b58:	ldr	x1, [sp, #96]
   29b5c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29b60:	add	x0, x0, #0xa60
   29b64:	bl	25a74 <OnPrint@@Base+0x454>
   29b68:	ldr	x0, [sp, #40]
   29b6c:	ldr	x19, [x0, #16]
   29b70:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   29b74:	cmp	x19, x0
   29b78:	cset	w0, cc  // cc = lo, ul, last
   29b7c:	and	w0, w0, #0xff
   29b80:	cmp	w0, #0x0
   29b84:	b.eq	29b94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x90c>  // b.none
   29b88:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29b8c:	add	x0, x0, #0xa90
   29b90:	bl	25a74 <OnPrint@@Base+0x454>
   29b94:	ldr	x0, [sp, #40]
   29b98:	ldr	x0, [x0, #24]
   29b9c:	bl	2968c <__sanitizer_get_module_and_offset_for_pc@@Base+0x404>
   29ba0:	add	x0, sp, #0x38
   29ba4:	mov	x1, #0x1                   	// #1
   29ba8:	bl	29ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc60>
   29bac:	add	x0, sp, #0x38
   29bb0:	bl	29f34 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcac>
   29bb4:	str	x0, [sp, #88]
   29bb8:	ldr	x0, [sp, #88]
   29bbc:	bl	29eac <__sanitizer_get_module_and_offset_for_pc@@Base+0xc24>
   29bc0:	ldr	x3, [sp, #24]
   29bc4:	ldr	x2, [sp, #88]
   29bc8:	ldr	x1, [sp, #16]
   29bcc:	ldr	x0, [sp, #40]
   29bd0:	blr	x3
   29bd4:	ldr	x0, [sp, #88]
   29bd8:	bl	28b1c <OnPrint@@Base+0x34fc>
   29bdc:	ldr	x0, [sp, #40]
   29be0:	ldr	x0, [x0, #24]
   29be4:	bl	297b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x530>
   29be8:	ldr	x0, [sp, #40]
   29bec:	ldr	x0, [x0, #8]
   29bf0:	bl	298dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x654>
   29bf4:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   29bf8:	ldr	x0, [x0, #4024]
   29bfc:	ldr	x0, [x0]
   29c00:	mov	x1, x0
   29c04:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29c08:	add	x0, x0, #0xab8
   29c0c:	bl	259c8 <OnPrint@@Base+0x3a8>
   29c10:	mov	x2, #0x0                   	// #0
   29c14:	ldr	x1, [sp, #88]
   29c18:	ldr	x0, [sp, #104]
   29c1c:	bl	29444 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bc>
   29c20:	add	x0, sp, #0x38
   29c24:	bl	29f18 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc90>
   29c28:	nop
   29c2c:	ldp	x19, x30, [sp], #112
   29c30:	ret
   29c34:	str	x30, [sp, #-48]!
   29c38:	str	x0, [sp, #40]
   29c3c:	str	w1, [sp, #36]
   29c40:	str	x2, [sp, #24]
   29c44:	str	x3, [sp, #16]
   29c48:	ldr	x0, [sp, #40]
   29c4c:	bl	2384c <__sanitizer_set_report_fd@@Base+0x96a0>
   29c50:	and	w0, w0, #0xff
   29c54:	cmp	w0, #0x0
   29c58:	b.eq	29c74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9ec>  // b.none
   29c5c:	ldr	x3, [sp, #16]
   29c60:	ldr	x2, [sp, #24]
   29c64:	ldr	w1, [sp, #36]
   29c68:	ldr	x0, [sp, #40]
   29c6c:	bl	29914 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68c>
   29c70:	b	29c88 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa00>
   29c74:	ldr	x3, [sp, #16]
   29c78:	ldr	x2, [sp, #24]
   29c7c:	ldr	w1, [sp, #36]
   29c80:	ldr	x0, [sp, #40]
   29c84:	bl	29a24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x79c>
   29c88:	nop
   29c8c:	ldr	x30, [sp], #48
   29c90:	ret
   29c94:	str	x30, [sp, #-128]!
   29c98:	str	x0, [sp, #56]
   29c9c:	str	x1, [sp, #48]
   29ca0:	str	w2, [sp, #44]
   29ca4:	str	x3, [sp, #32]
   29ca8:	str	x4, [sp, #24]
   29cac:	bl	29644 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bc>
   29cb0:	add	x0, sp, #0x78
   29cb4:	bl	29cec <__sanitizer_get_module_and_offset_for_pc@@Base+0xa64>
   29cb8:	add	x0, sp, #0x40
   29cbc:	ldr	x2, [sp, #48]
   29cc0:	ldr	x1, [sp, #56]
   29cc4:	bl	29de8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb60>
   29cc8:	add	x0, sp, #0x40
   29ccc:	ldr	x3, [sp, #24]
   29cd0:	ldr	x2, [sp, #32]
   29cd4:	ldr	w1, [sp, #44]
   29cd8:	bl	29c34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9ac>
   29cdc:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29ce0:	add	x0, x0, #0xae0
   29ce4:	bl	25a74 <OnPrint@@Base+0x454>
   29ce8:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   29cec:	stp	x19, x30, [sp, #-48]!
   29cf0:	str	x0, [sp, #24]
   29cf4:	bl	23148 <__sanitizer_set_report_fd@@Base+0x8f9c>
   29cf8:	str	x0, [sp, #40]
   29cfc:	str	xzr, [sp, #32]
   29d00:	add	x0, sp, #0x20
   29d04:	mov	w3, #0x1                   	// #1
   29d08:	ldr	x2, [sp, #40]
   29d0c:	mov	x1, x0
   29d10:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   29d14:	add	x0, x0, #0x210
   29d18:	bl	28248 <OnPrint@@Base+0x2c28>
   29d1c:	and	w0, w0, #0xff
   29d20:	cmp	w0, #0x0
   29d24:	b.eq	29d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xab0>  // b.none
   29d28:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   29d2c:	add	x0, x0, #0x218
   29d30:	bl	ef80 <__ubsan_handle_cfi_bad_type@@Base+0x864>
   29d34:	b	29d94 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb0c>
   29d38:	ldr	x0, [sp, #32]
   29d3c:	ldr	x1, [sp, #40]
   29d40:	cmp	x1, x0
   29d44:	b.ne	29d8c <__sanitizer_get_module_and_offset_for_pc@@Base+0xb04>  // b.any
   29d48:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   29d4c:	ldr	x0, [x0, #4024]
   29d50:	ldr	x19, [x0]
   29d54:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   29d58:	ldr	x0, [x0, #4024]
   29d5c:	ldr	x0, [x0]
   29d60:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   29d64:	mov	x1, x0
   29d68:	mov	x0, x19
   29d6c:	bl	197e4 <__sanitizer_cov_pcs_init@@Base+0x3d20>
   29d70:	mov	x1, #0x2b                  	// #43
   29d74:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29d78:	add	x0, x0, #0xaf0
   29d7c:	bl	197e4 <__sanitizer_cov_pcs_init@@Base+0x3d20>
   29d80:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   29d84:	ldr	w0, [x0, #216]
   29d88:	bl	1e67c <__sanitizer_set_report_fd@@Base+0x44d0>
   29d8c:	bl	1e668 <__sanitizer_set_report_fd@@Base+0x44bc>
   29d90:	b	29cfc <__sanitizer_get_module_and_offset_for_pc@@Base+0xa74>
   29d94:	ldp	x19, x30, [sp], #48
   29d98:	ret
   29d9c:	str	x30, [sp, #-32]!
   29da0:	str	x0, [sp, #24]
   29da4:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   29da8:	add	x0, x0, #0x218
   29dac:	bl	efe4 <__ubsan_handle_cfi_bad_type@@Base+0x8c8>
   29db0:	mov	x1, #0x0                   	// #0
   29db4:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   29db8:	add	x0, x0, #0x210
   29dbc:	bl	21d8c <__sanitizer_set_report_fd@@Base+0x7be0>
   29dc0:	nop
   29dc4:	ldr	x30, [sp], #32
   29dc8:	ret
   29dcc:	str	x30, [sp, #-16]!
   29dd0:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   29dd4:	add	x0, x0, #0x218
   29dd8:	bl	1a1e8 <__sanitizer_set_report_fd@@Base+0x3c>
   29ddc:	nop
   29de0:	ldr	x30, [sp], #16
   29de4:	ret
   29de8:	str	x30, [sp, #-48]!
   29dec:	str	x0, [sp, #40]
   29df0:	str	x1, [sp, #32]
   29df4:	str	x2, [sp, #24]
   29df8:	ldr	x0, [sp, #40]
   29dfc:	ldr	x1, [sp, #32]
   29e00:	str	x1, [x0]
   29e04:	ldr	x0, [sp, #40]
   29e08:	ldr	x1, [sp, #24]
   29e0c:	str	x1, [x0, #8]
   29e10:	ldr	x0, [sp, #40]
   29e14:	bl	23000 <__sanitizer_set_report_fd@@Base+0x8e54>
   29e18:	mov	x1, x0
   29e1c:	ldr	x0, [sp, #40]
   29e20:	str	x1, [x0, #16]
   29e24:	ldr	x0, [sp, #40]
   29e28:	bl	23024 <__sanitizer_set_report_fd@@Base+0x8e78>
   29e2c:	and	w1, w0, #0xff
   29e30:	ldr	x0, [sp, #40]
   29e34:	strb	w1, [x0, #48]
   29e38:	ldr	x0, [sp, #40]
   29e3c:	bl	20230 <__sanitizer_set_report_fd@@Base+0x6084>
   29e40:	mov	w1, w0
   29e44:	ldr	x0, [sp, #40]
   29e48:	str	w1, [x0, #52]
   29e4c:	ldr	x0, [sp, #40]
   29e50:	bl	20304 <__sanitizer_set_report_fd@@Base+0x6158>
   29e54:	nop
   29e58:	ldr	x30, [sp], #48
   29e5c:	ret
   29e60:	str	x30, [sp, #-32]!
   29e64:	str	x0, [sp, #24]
   29e68:	ldr	x0, [sp, #24]
   29e6c:	bl	29e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbf0>
   29e70:	ldr	x30, [sp], #32
   29e74:	ret
   29e78:	sub	sp, sp, #0x10
   29e7c:	str	x0, [sp, #8]
   29e80:	ldr	x0, [sp, #8]
   29e84:	ldrb	w0, [x0]
   29e88:	cmp	w0, #0x0
   29e8c:	b.eq	29e9c <__sanitizer_get_module_and_offset_for_pc@@Base+0xc14>  // b.none
   29e90:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29e94:	add	x0, x0, #0x880
   29e98:	b	29ea4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc1c>
   29e9c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   29ea0:	add	x0, x0, #0x868
   29ea4:	add	sp, sp, #0x10
   29ea8:	ret
   29eac:	str	x30, [sp, #-48]!
   29eb0:	str	x0, [sp, #24]
   29eb4:	ldr	x0, [sp, #24]
   29eb8:	add	x1, x0, #0x10
   29ebc:	add	x0, sp, #0x20
   29ec0:	mov	w2, #0x0                   	// #0
   29ec4:	bl	8be8 <__asan_backtrace_open@plt+0x1f78>
   29ec8:	ldr	x2, [sp, #24]
   29ecc:	ldp	x0, x1, [sp, #32]
   29ed0:	stp	x0, x1, [x2]
   29ed4:	ldr	x0, [sp, #24]
   29ed8:	str	xzr, [x0, #2064]
   29edc:	nop
   29ee0:	ldr	x30, [sp], #48
   29ee4:	ret
   29ee8:	str	x30, [sp, #-32]!
   29eec:	str	x0, [sp, #24]
   29ef0:	str	x1, [sp, #16]
   29ef4:	ldr	x0, [sp, #24]
   29ef8:	ldr	x1, [sp, #16]
   29efc:	bl	29f4c <__sanitizer_get_module_and_offset_for_pc@@Base+0xcc4>
   29f00:	ldr	x0, [sp, #24]
   29f04:	ldr	x1, [sp, #16]
   29f08:	bl	29f88 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd00>
   29f0c:	nop
   29f10:	ldr	x30, [sp], #32
   29f14:	ret
   29f18:	str	x30, [sp, #-32]!
   29f1c:	str	x0, [sp, #24]
   29f20:	ldr	x0, [sp, #24]
   29f24:	bl	2a030 <__sanitizer_get_module_and_offset_for_pc@@Base+0xda8>
   29f28:	nop
   29f2c:	ldr	x30, [sp], #32
   29f30:	ret
   29f34:	sub	sp, sp, #0x10
   29f38:	str	x0, [sp, #8]
   29f3c:	ldr	x0, [sp, #8]
   29f40:	ldr	x0, [x0]
   29f44:	add	sp, sp, #0x10
   29f48:	ret
   29f4c:	str	x30, [sp, #-32]!
   29f50:	str	x0, [sp, #24]
   29f54:	str	x1, [sp, #16]
   29f58:	ldr	x0, [sp, #24]
   29f5c:	str	xzr, [x0, #8]
   29f60:	ldr	x0, [sp, #24]
   29f64:	str	xzr, [x0, #16]
   29f68:	ldr	x0, [sp, #24]
   29f6c:	str	xzr, [x0]
   29f70:	ldr	x1, [sp, #16]
   29f74:	ldr	x0, [sp, #24]
   29f78:	bl	2a060 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdd8>
   29f7c:	nop
   29f80:	ldr	x30, [sp], #32
   29f84:	ret
   29f88:	str	x30, [sp, #-32]!
   29f8c:	str	x0, [sp, #24]
   29f90:	str	x1, [sp, #16]
   29f94:	ldr	x0, [sp, #24]
   29f98:	ldr	x0, [x0, #16]
   29f9c:	ldr	x1, [sp, #16]
   29fa0:	cmp	x1, x0
   29fa4:	b.ls	2a018 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd90>  // b.plast
   29fa8:	ldr	x1, [sp, #16]
   29fac:	ldr	x0, [sp, #24]
   29fb0:	bl	2a060 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdd8>
   29fb4:	ldr	x0, [sp, #24]
   29fb8:	ldr	x2, [x0]
   29fbc:	ldr	x0, [sp, #24]
   29fc0:	ldr	x1, [x0, #16]
   29fc4:	mov	x0, x1
   29fc8:	lsl	x0, x0, #6
   29fcc:	add	x0, x0, x1
   29fd0:	lsl	x0, x0, #2
   29fd4:	sub	x0, x0, x1
   29fd8:	lsl	x0, x0, #3
   29fdc:	add	x3, x2, x0
   29fe0:	ldr	x0, [sp, #24]
   29fe4:	ldr	x0, [x0, #16]
   29fe8:	ldr	x1, [sp, #16]
   29fec:	sub	x1, x1, x0
   29ff0:	mov	x0, x1
   29ff4:	lsl	x0, x0, #6
   29ff8:	add	x0, x0, x1
   29ffc:	lsl	x0, x0, #2
   2a000:	sub	x0, x0, x1
   2a004:	lsl	x0, x0, #3
   2a008:	mov	x2, x0
   2a00c:	mov	w1, #0x0                   	// #0
   2a010:	mov	x0, x3
   2a014:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   2a018:	ldr	x0, [sp, #24]
   2a01c:	ldr	x1, [sp, #16]
   2a020:	str	x1, [x0, #16]
   2a024:	nop
   2a028:	ldr	x30, [sp], #32
   2a02c:	ret
   2a030:	str	x30, [sp, #-32]!
   2a034:	str	x0, [sp, #24]
   2a038:	ldr	x0, [sp, #24]
   2a03c:	ldr	x2, [x0]
   2a040:	ldr	x0, [sp, #24]
   2a044:	ldr	x0, [x0, #8]
   2a048:	mov	x1, x0
   2a04c:	mov	x0, x2
   2a050:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   2a054:	nop
   2a058:	ldr	x30, [sp], #32
   2a05c:	ret
   2a060:	str	x30, [sp, #-32]!
   2a064:	str	x0, [sp, #24]
   2a068:	str	x1, [sp, #16]
   2a06c:	ldr	x0, [sp, #24]
   2a070:	bl	2a0a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe20>
   2a074:	mov	x1, x0
   2a078:	ldr	x0, [sp, #16]
   2a07c:	cmp	x0, x1
   2a080:	cset	w0, hi  // hi = pmore
   2a084:	and	w0, w0, #0xff
   2a088:	cmp	w0, #0x0
   2a08c:	b.eq	2a09c <__sanitizer_get_module_and_offset_for_pc@@Base+0xe14>  // b.none
   2a090:	ldr	x1, [sp, #16]
   2a094:	ldr	x0, [sp, #24]
   2a098:	bl	2a0dc <__sanitizer_get_module_and_offset_for_pc@@Base+0xe54>
   2a09c:	nop
   2a0a0:	ldr	x30, [sp], #32
   2a0a4:	ret
   2a0a8:	sub	sp, sp, #0x10
   2a0ac:	str	x0, [sp, #8]
   2a0b0:	ldr	x0, [sp, #8]
   2a0b4:	ldr	x0, [x0, #8]
   2a0b8:	lsr	x1, x0, #3
   2a0bc:	mov	x0, #0x11cb                	// #4555
   2a0c0:	movk	x0, #0x1fa, lsl #16
   2a0c4:	movk	x0, #0x1caa, lsl #32
   2a0c8:	movk	x0, #0x1fa1, lsl #48
   2a0cc:	umulh	x0, x1, x0
   2a0d0:	lsr	x0, x0, #5
   2a0d4:	add	sp, sp, #0x10
   2a0d8:	ret
   2a0dc:	stp	x19, x30, [sp, #-80]!
   2a0e0:	str	x0, [sp, #24]
   2a0e4:	str	x1, [sp, #16]
   2a0e8:	ldr	x0, [sp, #16]
   2a0ec:	str	x0, [sp, #72]
   2a0f0:	str	xzr, [sp, #64]
   2a0f4:	ldr	x1, [sp, #72]
   2a0f8:	ldr	x0, [sp, #64]
   2a0fc:	cmp	x1, x0
   2a100:	cset	w0, ls  // ls = plast
   2a104:	and	w0, w0, #0xff
   2a108:	and	x0, x0, #0xff
   2a10c:	cmp	x0, #0x0
   2a110:	b.eq	2a134 <__sanitizer_get_module_and_offset_for_pc@@Base+0xeac>  // b.none
   2a114:	ldr	x4, [sp, #64]
   2a118:	ldr	x3, [sp, #72]
   2a11c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a120:	add	x2, x0, #0xb78
   2a124:	mov	w1, #0x1fc                 	// #508
   2a128:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a12c:	add	x0, x0, #0xb38
   2a130:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2a134:	ldr	x0, [sp, #24]
   2a138:	ldr	x0, [x0, #16]
   2a13c:	str	x0, [sp, #56]
   2a140:	ldr	x0, [sp, #16]
   2a144:	str	x0, [sp, #48]
   2a148:	ldr	x1, [sp, #56]
   2a14c:	ldr	x0, [sp, #48]
   2a150:	cmp	x1, x0
   2a154:	cset	w0, hi  // hi = pmore
   2a158:	and	w0, w0, #0xff
   2a15c:	and	x0, x0, #0xff
   2a160:	cmp	x0, #0x0
   2a164:	b.eq	2a188 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf00>  // b.none
   2a168:	ldr	x4, [sp, #48]
   2a16c:	ldr	x3, [sp, #56]
   2a170:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a174:	add	x2, x0, #0xb98
   2a178:	mov	w1, #0x1fd                 	// #509
   2a17c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a180:	add	x0, x0, #0xb38
   2a184:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2a188:	ldr	x1, [sp, #16]
   2a18c:	mov	x0, x1
   2a190:	lsl	x0, x0, #6
   2a194:	add	x0, x0, x1
   2a198:	lsl	x0, x0, #2
   2a19c:	sub	x0, x0, x1
   2a1a0:	lsl	x0, x0, #3
   2a1a4:	mov	x19, x0
   2a1a8:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   2a1ac:	mov	x1, x0
   2a1b0:	mov	x0, x19
   2a1b4:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   2a1b8:	str	x0, [sp, #40]
   2a1bc:	mov	w2, #0x0                   	// #0
   2a1c0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a1c4:	add	x1, x0, #0xbb8
   2a1c8:	ldr	x0, [sp, #40]
   2a1cc:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   2a1d0:	str	x0, [sp, #32]
   2a1d4:	ldr	x0, [sp, #24]
   2a1d8:	ldr	x3, [x0]
   2a1dc:	ldr	x0, [sp, #24]
   2a1e0:	ldr	x1, [x0, #16]
   2a1e4:	mov	x0, x1
   2a1e8:	lsl	x0, x0, #6
   2a1ec:	add	x0, x0, x1
   2a1f0:	lsl	x0, x0, #2
   2a1f4:	sub	x0, x0, x1
   2a1f8:	lsl	x0, x0, #3
   2a1fc:	mov	x2, x0
   2a200:	mov	x1, x3
   2a204:	ldr	x0, [sp, #32]
   2a208:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   2a20c:	ldr	x0, [sp, #24]
   2a210:	ldr	x2, [x0]
   2a214:	ldr	x0, [sp, #24]
   2a218:	ldr	x0, [x0, #8]
   2a21c:	mov	x1, x0
   2a220:	mov	x0, x2
   2a224:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   2a228:	ldr	x0, [sp, #24]
   2a22c:	ldr	x1, [sp, #32]
   2a230:	str	x1, [x0]
   2a234:	ldr	x0, [sp, #24]
   2a238:	ldr	x1, [sp, #40]
   2a23c:	str	x1, [x0, #8]
   2a240:	nop
   2a244:	ldp	x19, x30, [sp], #80
   2a248:	ret
   2a24c:	str	x30, [sp, #-48]!
   2a250:	str	x0, [sp, #24]
   2a254:	str	x1, [sp, #16]
   2a258:	ldr	x0, [sp, #24]
   2a25c:	cmp	x0, #0x0
   2a260:	b.ne	2a26c <__sanitizer_get_module_and_offset_for_pc@@Base+0xfe4>  // b.any
   2a264:	mov	x0, #0x0                   	// #0
   2a268:	b	2a2c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x103c>
   2a26c:	ldr	x0, [sp, #16]
   2a270:	cmp	x0, #0x0
   2a274:	b.ne	2a280 <__sanitizer_get_module_and_offset_for_pc@@Base+0xff8>  // b.any
   2a278:	ldr	x0, [sp, #24]
   2a27c:	b	2a2c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x103c>
   2a280:	ldr	x0, [sp, #16]
   2a284:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   2a288:	str	x0, [sp, #40]
   2a28c:	ldr	x2, [sp, #40]
   2a290:	ldr	x1, [sp, #16]
   2a294:	ldr	x0, [sp, #24]
   2a298:	bl	1cb4c <__sanitizer_set_report_fd@@Base+0x29a0>
   2a29c:	cmp	w0, #0x0
   2a2a0:	cset	w0, eq  // eq = none
   2a2a4:	and	w0, w0, #0xff
   2a2a8:	cmp	w0, #0x0
   2a2ac:	b.eq	2a2c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1038>  // b.none
   2a2b0:	ldr	x1, [sp, #24]
   2a2b4:	ldr	x0, [sp, #40]
   2a2b8:	add	x0, x1, x0
   2a2bc:	b	2a2c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x103c>
   2a2c0:	ldr	x0, [sp, #24]
   2a2c4:	ldr	x30, [sp], #48
   2a2c8:	ret
   2a2cc:	sub	sp, sp, #0x10
   2a2d0:	str	x0, [sp, #8]
   2a2d4:	ldr	x0, [sp, #8]
   2a2d8:	cmp	x0, #0x0
   2a2dc:	b.ne	2a2e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1060>  // b.any
   2a2e0:	mov	x0, #0x0                   	// #0
   2a2e4:	b	2a2ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1064>
   2a2e8:	ldr	x0, [sp, #8]
   2a2ec:	add	sp, sp, #0x10
   2a2f0:	ret
   2a2f4:	str	x30, [sp, #-80]!
   2a2f8:	str	x0, [sp, #56]
   2a2fc:	str	x1, [sp, #48]
   2a300:	str	w2, [sp, #44]
   2a304:	str	x3, [sp, #32]
   2a308:	strb	w4, [sp, #43]
   2a30c:	str	x5, [sp, #24]
   2a310:	str	x6, [sp, #16]
   2a314:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a318:	add	x1, x0, #0xcf0
   2a31c:	ldr	x0, [sp, #48]
   2a320:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   2a324:	cmp	w0, #0x0
   2a328:	cset	w0, eq  // eq = none
   2a32c:	and	w0, w0, #0xff
   2a330:	cmp	w0, #0x0
   2a334:	b.eq	2a344 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10bc>  // b.none
   2a338:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a33c:	add	x0, x0, #0xcd8
   2a340:	str	x0, [sp, #48]
   2a344:	ldr	x0, [sp, #48]
   2a348:	str	x0, [sp, #72]
   2a34c:	ldr	x0, [sp, #72]
   2a350:	ldrb	w0, [x0]
   2a354:	cmp	w0, #0x0
   2a358:	b.eq	2a7d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x154c>  // b.none
   2a35c:	ldr	x0, [sp, #72]
   2a360:	ldrb	w0, [x0]
   2a364:	cmp	w0, #0x25
   2a368:	b.eq	2a38c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1104>  // b.none
   2a36c:	ldr	x0, [sp, #72]
   2a370:	ldrb	w0, [x0]
   2a374:	mov	w2, w0
   2a378:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a37c:	add	x1, x0, #0xcf8
   2a380:	ldr	x0, [sp, #56]
   2a384:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a388:	b	2a7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x153c>
   2a38c:	ldr	x0, [sp, #72]
   2a390:	add	x0, x0, #0x1
   2a394:	str	x0, [sp, #72]
   2a398:	ldr	x0, [sp, #72]
   2a39c:	ldrb	w0, [x0]
   2a3a0:	cmp	w0, #0x73
   2a3a4:	b.eq	2a56c <__sanitizer_get_module_and_offset_for_pc@@Base+0x12e4>  // b.none
   2a3a8:	cmp	w0, #0x73
   2a3ac:	b.gt	2a790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1508>
   2a3b0:	cmp	w0, #0x71
   2a3b4:	b.eq	2a534 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12ac>  // b.none
   2a3b8:	cmp	w0, #0x71
   2a3bc:	b.gt	2a790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1508>
   2a3c0:	cmp	w0, #0x70
   2a3c4:	b.eq	2a4a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1218>  // b.none
   2a3c8:	cmp	w0, #0x70
   2a3cc:	b.gt	2a790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1508>
   2a3d0:	cmp	w0, #0x6f
   2a3d4:	b.eq	2a4e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1260>  // b.none
   2a3d8:	cmp	w0, #0x6f
   2a3dc:	b.gt	2a790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1508>
   2a3e0:	cmp	w0, #0x6e
   2a3e4:	b.eq	2a488 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1200>  // b.none
   2a3e8:	cmp	w0, #0x6e
   2a3ec:	b.gt	2a790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1508>
   2a3f0:	cmp	w0, #0x6d
   2a3f4:	b.eq	2a4c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1238>  // b.none
   2a3f8:	cmp	w0, #0x6d
   2a3fc:	b.gt	2a790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1508>
   2a400:	cmp	w0, #0x6c
   2a404:	b.eq	2a594 <__sanitizer_get_module_and_offset_for_pc@@Base+0x130c>  // b.none
   2a408:	cmp	w0, #0x6c
   2a40c:	b.gt	2a790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1508>
   2a410:	cmp	w0, #0x66
   2a414:	b.eq	2a508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1280>  // b.none
   2a418:	cmp	w0, #0x66
   2a41c:	b.gt	2a790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1508>
   2a420:	cmp	w0, #0x63
   2a424:	b.eq	2a5b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x132c>  // b.none
   2a428:	cmp	w0, #0x63
   2a42c:	b.gt	2a790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1508>
   2a430:	cmp	w0, #0x53
   2a434:	b.eq	2a64c <__sanitizer_get_module_and_offset_for_pc@@Base+0x13c4>  // b.none
   2a438:	cmp	w0, #0x53
   2a43c:	b.gt	2a790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1508>
   2a440:	cmp	w0, #0x4d
   2a444:	b.eq	2a70c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1484>  // b.none
   2a448:	cmp	w0, #0x4d
   2a44c:	b.gt	2a790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1508>
   2a450:	cmp	w0, #0x4c
   2a454:	b.eq	2a67c <__sanitizer_get_module_and_offset_for_pc@@Base+0x13f4>  // b.none
   2a458:	cmp	w0, #0x4c
   2a45c:	b.gt	2a790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1508>
   2a460:	cmp	w0, #0x25
   2a464:	b.eq	2a474 <__sanitizer_get_module_and_offset_for_pc@@Base+0x11ec>  // b.none
   2a468:	cmp	w0, #0x46
   2a46c:	b.eq	2a5d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x134c>  // b.none
   2a470:	b	2a790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1508>
   2a474:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a478:	add	x1, x0, #0xd00
   2a47c:	ldr	x0, [sp, #56]
   2a480:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a484:	b	2a7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x153c>
   2a488:	ldr	w2, [sp, #44]
   2a48c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a490:	add	x1, x0, #0xd08
   2a494:	ldr	x0, [sp, #56]
   2a498:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a49c:	b	2a7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x153c>
   2a4a0:	ldr	x0, [sp, #32]
   2a4a4:	ldr	x0, [x0]
   2a4a8:	mov	x2, x0
   2a4ac:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a4b0:	add	x1, x0, #0xd10
   2a4b4:	ldr	x0, [sp, #56]
   2a4b8:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a4bc:	b	2a7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x153c>
   2a4c0:	ldr	x0, [sp, #32]
   2a4c4:	ldr	x0, [x0, #8]
   2a4c8:	ldr	x1, [sp, #24]
   2a4cc:	bl	13d40 <__sancov_default_options@@Base+0x3994>
   2a4d0:	mov	x2, x0
   2a4d4:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a4d8:	add	x1, x0, #0xd18
   2a4dc:	ldr	x0, [sp, #56]
   2a4e0:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a4e4:	b	2a7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x153c>
   2a4e8:	ldr	x0, [sp, #32]
   2a4ec:	ldr	x0, [x0, #16]
   2a4f0:	mov	x2, x0
   2a4f4:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a4f8:	add	x1, x0, #0xd10
   2a4fc:	ldr	x0, [sp, #56]
   2a500:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a504:	b	2a7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x153c>
   2a508:	ldr	x0, [sp, #32]
   2a50c:	ldr	x0, [x0, #32]
   2a510:	ldr	x1, [sp, #16]
   2a514:	bl	2a24c <__sanitizer_get_module_and_offset_for_pc@@Base+0xfc4>
   2a518:	bl	2a2cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1044>
   2a51c:	mov	x2, x0
   2a520:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a524:	add	x1, x0, #0xd18
   2a528:	ldr	x0, [sp, #56]
   2a52c:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a530:	b	2a7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x153c>
   2a534:	ldr	x0, [sp, #32]
   2a538:	ldr	x0, [x0, #40]
   2a53c:	cmn	x0, #0x1
   2a540:	b.eq	2a550 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12c8>  // b.none
   2a544:	ldr	x0, [sp, #32]
   2a548:	ldr	x0, [x0, #40]
   2a54c:	b	2a554 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12cc>
   2a550:	mov	x0, #0x0                   	// #0
   2a554:	mov	x2, x0
   2a558:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a55c:	add	x1, x0, #0xd10
   2a560:	ldr	x0, [sp, #56]
   2a564:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a568:	b	2a7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x153c>
   2a56c:	ldr	x0, [sp, #32]
   2a570:	ldr	x0, [x0, #48]
   2a574:	ldr	x1, [sp, #24]
   2a578:	bl	13d40 <__sancov_default_options@@Base+0x3994>
   2a57c:	mov	x2, x0
   2a580:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a584:	add	x1, x0, #0xd18
   2a588:	ldr	x0, [sp, #56]
   2a58c:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a590:	b	2a7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x153c>
   2a594:	ldr	x0, [sp, #32]
   2a598:	ldr	w0, [x0, #56]
   2a59c:	mov	w2, w0
   2a5a0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a5a4:	add	x1, x0, #0xd20
   2a5a8:	ldr	x0, [sp, #56]
   2a5ac:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a5b0:	b	2a7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x153c>
   2a5b4:	ldr	x0, [sp, #32]
   2a5b8:	ldr	w0, [x0, #60]
   2a5bc:	mov	w2, w0
   2a5c0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a5c4:	add	x1, x0, #0xd20
   2a5c8:	ldr	x0, [sp, #56]
   2a5cc:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a5d0:	b	2a7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x153c>
   2a5d4:	ldr	x0, [sp, #32]
   2a5d8:	ldr	x0, [x0, #32]
   2a5dc:	cmp	x0, #0x0
   2a5e0:	b.eq	2a7b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1530>  // b.none
   2a5e4:	ldr	x0, [sp, #32]
   2a5e8:	ldr	x0, [x0, #32]
   2a5ec:	ldr	x1, [sp, #16]
   2a5f0:	bl	2a24c <__sanitizer_get_module_and_offset_for_pc@@Base+0xfc4>
   2a5f4:	bl	2a2cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1044>
   2a5f8:	mov	x2, x0
   2a5fc:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a600:	add	x1, x0, #0xd28
   2a604:	ldr	x0, [sp, #56]
   2a608:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a60c:	ldr	x0, [sp, #32]
   2a610:	ldr	x0, [x0, #48]
   2a614:	cmp	x0, #0x0
   2a618:	b.ne	2a7b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1530>  // b.any
   2a61c:	ldr	x0, [sp, #32]
   2a620:	ldr	x0, [x0, #40]
   2a624:	cmn	x0, #0x1
   2a628:	b.eq	2a7b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1530>  // b.none
   2a62c:	ldr	x0, [sp, #32]
   2a630:	ldr	x0, [x0, #40]
   2a634:	mov	x2, x0
   2a638:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a63c:	add	x1, x0, #0xd30
   2a640:	ldr	x0, [sp, #56]
   2a644:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a648:	b	2a7b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1530>
   2a64c:	ldr	x0, [sp, #32]
   2a650:	ldr	x1, [x0, #48]
   2a654:	ldr	x0, [sp, #32]
   2a658:	ldr	w2, [x0, #56]
   2a65c:	ldr	x0, [sp, #32]
   2a660:	ldr	w0, [x0, #60]
   2a664:	ldr	x5, [sp, #24]
   2a668:	ldrb	w4, [sp, #43]
   2a66c:	mov	w3, w0
   2a670:	ldr	x0, [sp, #56]
   2a674:	bl	2a944 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16bc>
   2a678:	b	2a7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x153c>
   2a67c:	ldr	x0, [sp, #32]
   2a680:	ldr	x0, [x0, #48]
   2a684:	cmp	x0, #0x0
   2a688:	b.eq	2a6bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1434>  // b.none
   2a68c:	ldr	x0, [sp, #32]
   2a690:	ldr	x1, [x0, #48]
   2a694:	ldr	x0, [sp, #32]
   2a698:	ldr	w2, [x0, #56]
   2a69c:	ldr	x0, [sp, #32]
   2a6a0:	ldr	w0, [x0, #60]
   2a6a4:	ldr	x5, [sp, #24]
   2a6a8:	ldrb	w4, [sp, #43]
   2a6ac:	mov	w3, w0
   2a6b0:	ldr	x0, [sp, #56]
   2a6b4:	bl	2a944 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16bc>
   2a6b8:	b	2a7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x153c>
   2a6bc:	ldr	x0, [sp, #32]
   2a6c0:	ldr	x0, [x0, #8]
   2a6c4:	cmp	x0, #0x0
   2a6c8:	b.eq	2a6f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1470>  // b.none
   2a6cc:	ldr	x0, [sp, #32]
   2a6d0:	ldr	x1, [x0, #8]
   2a6d4:	ldr	x0, [sp, #32]
   2a6d8:	ldr	x2, [x0, #16]
   2a6dc:	ldr	x0, [sp, #32]
   2a6e0:	ldr	w0, [x0, #24]
   2a6e4:	ldr	x4, [sp, #24]
   2a6e8:	mov	w3, w0
   2a6ec:	ldr	x0, [sp, #56]
   2a6f0:	bl	2aa38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17b0>
   2a6f4:	b	2a7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x153c>
   2a6f8:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a6fc:	add	x1, x0, #0xd38
   2a700:	ldr	x0, [sp, #56]
   2a704:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a708:	b	2a7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x153c>
   2a70c:	ldr	x0, [sp, #32]
   2a710:	ldr	x0, [x0]
   2a714:	and	x0, x0, #0x1000000000000000
   2a718:	cmp	x0, #0x0
   2a71c:	b.ne	2a7c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1538>  // b.any
   2a720:	ldr	x0, [sp, #32]
   2a724:	ldr	x0, [x0, #8]
   2a728:	cmp	x0, #0x0
   2a72c:	b.eq	2a770 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14e8>  // b.none
   2a730:	ldr	x0, [sp, #32]
   2a734:	ldr	x0, [x0, #8]
   2a738:	bl	13dec <__sancov_default_options@@Base+0x3a40>
   2a73c:	mov	x5, x0
   2a740:	ldr	x0, [sp, #32]
   2a744:	ldr	x1, [x0, #16]
   2a748:	ldr	x0, [sp, #32]
   2a74c:	ldr	w2, [x0, #24]
   2a750:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a754:	add	x4, x0, #0xc10
   2a758:	mov	w3, w2
   2a75c:	mov	x2, x1
   2a760:	mov	x1, x5
   2a764:	ldr	x0, [sp, #56]
   2a768:	bl	2aa38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17b0>
   2a76c:	b	2a7c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1538>
   2a770:	ldr	x0, [sp, #32]
   2a774:	ldr	x0, [x0]
   2a778:	mov	x2, x0
   2a77c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a780:	add	x1, x0, #0xd50
   2a784:	ldr	x0, [sp, #56]
   2a788:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a78c:	b	2a7c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1538>
   2a790:	ldr	x0, [sp, #72]
   2a794:	ldrb	w0, [x0]
   2a798:	mov	w1, w0
   2a79c:	ldr	x0, [sp, #72]
   2a7a0:	ldrb	w0, [x0]
   2a7a4:	mov	w2, w0
   2a7a8:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a7ac:	add	x0, x0, #0xd58
   2a7b0:	bl	25a74 <OnPrint@@Base+0x454>
   2a7b4:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2a7b8:	nop
   2a7bc:	b	2a7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x153c>
   2a7c0:	nop
   2a7c4:	ldr	x0, [sp, #72]
   2a7c8:	add	x0, x0, #0x1
   2a7cc:	str	x0, [sp, #72]
   2a7d0:	b	2a34c <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c4>
   2a7d4:	nop
   2a7d8:	ldr	x30, [sp], #80
   2a7dc:	ret
   2a7e0:	str	x30, [sp, #-64]!
   2a7e4:	str	x0, [sp, #40]
   2a7e8:	str	x1, [sp, #32]
   2a7ec:	str	x2, [sp, #24]
   2a7f0:	str	x3, [sp, #16]
   2a7f4:	ldr	x0, [sp, #32]
   2a7f8:	str	x0, [sp, #56]
   2a7fc:	ldr	x0, [sp, #56]
   2a800:	ldrb	w0, [x0]
   2a804:	cmp	w0, #0x0
   2a808:	b.eq	2a938 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16b0>  // b.none
   2a80c:	ldr	x0, [sp, #56]
   2a810:	ldrb	w0, [x0]
   2a814:	cmp	w0, #0x25
   2a818:	b.eq	2a83c <__sanitizer_get_module_and_offset_for_pc@@Base+0x15b4>  // b.none
   2a81c:	ldr	x0, [sp, #56]
   2a820:	ldrb	w0, [x0]
   2a824:	mov	w2, w0
   2a828:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a82c:	add	x1, x0, #0xcf8
   2a830:	ldr	x0, [sp, #40]
   2a834:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a838:	b	2a928 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16a0>
   2a83c:	ldr	x0, [sp, #56]
   2a840:	add	x0, x0, #0x1
   2a844:	str	x0, [sp, #56]
   2a848:	ldr	x0, [sp, #56]
   2a84c:	ldrb	w0, [x0]
   2a850:	cmp	w0, #0x73
   2a854:	b.eq	2a898 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1610>  // b.none
   2a858:	cmp	w0, #0x73
   2a85c:	b.gt	2a900 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1678>
   2a860:	cmp	w0, #0x6c
   2a864:	b.eq	2a8c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1638>  // b.none
   2a868:	cmp	w0, #0x6c
   2a86c:	b.gt	2a900 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1678>
   2a870:	cmp	w0, #0x25
   2a874:	b.eq	2a884 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15fc>  // b.none
   2a878:	cmp	w0, #0x67
   2a87c:	b.eq	2a8e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1658>  // b.none
   2a880:	b	2a900 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1678>
   2a884:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a888:	add	x1, x0, #0xd00
   2a88c:	ldr	x0, [sp, #40]
   2a890:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a894:	b	2a928 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16a0>
   2a898:	ldr	x0, [sp, #24]
   2a89c:	ldr	x0, [x0, #24]
   2a8a0:	ldr	x1, [sp, #16]
   2a8a4:	bl	13d40 <__sancov_default_options@@Base+0x3994>
   2a8a8:	mov	x2, x0
   2a8ac:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a8b0:	add	x1, x0, #0xd18
   2a8b4:	ldr	x0, [sp, #40]
   2a8b8:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a8bc:	b	2a928 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16a0>
   2a8c0:	ldr	x0, [sp, #24]
   2a8c4:	ldr	x0, [x0, #32]
   2a8c8:	mov	x2, x0
   2a8cc:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a8d0:	add	x1, x0, #0xd20
   2a8d4:	ldr	x0, [sp, #40]
   2a8d8:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a8dc:	b	2a928 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16a0>
   2a8e0:	ldr	x0, [sp, #24]
   2a8e4:	ldr	x0, [x0, #40]
   2a8e8:	mov	x2, x0
   2a8ec:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a8f0:	add	x1, x0, #0xd18
   2a8f4:	ldr	x0, [sp, #40]
   2a8f8:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a8fc:	b	2a928 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16a0>
   2a900:	ldr	x0, [sp, #56]
   2a904:	ldrb	w0, [x0]
   2a908:	mov	w1, w0
   2a90c:	ldr	x0, [sp, #56]
   2a910:	ldrb	w0, [x0]
   2a914:	mov	w2, w0
   2a918:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a91c:	add	x0, x0, #0xd58
   2a920:	bl	25a74 <OnPrint@@Base+0x454>
   2a924:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2a928:	ldr	x0, [sp, #56]
   2a92c:	add	x0, x0, #0x1
   2a930:	str	x0, [sp, #56]
   2a934:	b	2a7fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1574>
   2a938:	nop
   2a93c:	ldr	x30, [sp], #64
   2a940:	ret
   2a944:	str	x30, [sp, #-64]!
   2a948:	str	x0, [sp, #56]
   2a94c:	str	x1, [sp, #48]
   2a950:	str	w2, [sp, #44]
   2a954:	str	w3, [sp, #40]
   2a958:	strb	w4, [sp, #39]
   2a95c:	str	x5, [sp, #24]
   2a960:	ldrb	w0, [sp, #39]
   2a964:	cmp	w0, #0x0
   2a968:	b.eq	2a9d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1748>  // b.none
   2a96c:	ldr	w0, [sp, #44]
   2a970:	cmp	w0, #0x0
   2a974:	b.le	2a9d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1748>
   2a978:	ldr	x1, [sp, #24]
   2a97c:	ldr	x0, [sp, #48]
   2a980:	bl	13d40 <__sancov_default_options@@Base+0x3994>
   2a984:	ldr	w3, [sp, #44]
   2a988:	mov	x2, x0
   2a98c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a990:	add	x1, x0, #0xd98
   2a994:	ldr	x0, [sp, #56]
   2a998:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a99c:	ldr	w0, [sp, #40]
   2a9a0:	cmp	w0, #0x0
   2a9a4:	b.le	2a9bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1734>
   2a9a8:	ldr	w2, [sp, #40]
   2a9ac:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a9b0:	add	x1, x0, #0xda0
   2a9b4:	ldr	x0, [sp, #56]
   2a9b8:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a9bc:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a9c0:	add	x1, x0, #0xda8
   2a9c4:	ldr	x0, [sp, #56]
   2a9c8:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a9cc:	b	2aa30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17a8>
   2a9d0:	ldr	x1, [sp, #24]
   2a9d4:	ldr	x0, [sp, #48]
   2a9d8:	bl	13d40 <__sancov_default_options@@Base+0x3994>
   2a9dc:	mov	x2, x0
   2a9e0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2a9e4:	add	x1, x0, #0xd18
   2a9e8:	ldr	x0, [sp, #56]
   2a9ec:	bl	25bdc <OnPrint@@Base+0x5bc>
   2a9f0:	ldr	w0, [sp, #44]
   2a9f4:	cmp	w0, #0x0
   2a9f8:	b.le	2aa30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17a8>
   2a9fc:	ldr	w2, [sp, #44]
   2aa00:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2aa04:	add	x1, x0, #0xdb0
   2aa08:	ldr	x0, [sp, #56]
   2aa0c:	bl	25bdc <OnPrint@@Base+0x5bc>
   2aa10:	ldr	w0, [sp, #40]
   2aa14:	cmp	w0, #0x0
   2aa18:	b.le	2aa30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17a8>
   2aa1c:	ldr	w2, [sp, #40]
   2aa20:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2aa24:	add	x1, x0, #0xdb0
   2aa28:	ldr	x0, [sp, #56]
   2aa2c:	bl	25bdc <OnPrint@@Base+0x5bc>
   2aa30:	ldr	x30, [sp], #64
   2aa34:	ret
   2aa38:	str	x30, [sp, #-64]!
   2aa3c:	str	x0, [sp, #56]
   2aa40:	str	x1, [sp, #48]
   2aa44:	str	x2, [sp, #40]
   2aa48:	str	w3, [sp, #36]
   2aa4c:	str	x4, [sp, #24]
   2aa50:	ldr	x1, [sp, #24]
   2aa54:	ldr	x0, [sp, #48]
   2aa58:	bl	13d40 <__sancov_default_options@@Base+0x3994>
   2aa5c:	mov	x2, x0
   2aa60:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2aa64:	add	x1, x0, #0xdb8
   2aa68:	ldr	x0, [sp, #56]
   2aa6c:	bl	25bdc <OnPrint@@Base+0x5bc>
   2aa70:	ldr	w0, [sp, #36]
   2aa74:	cmp	w0, #0x0
   2aa78:	b.eq	2aa98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1810>  // b.none
   2aa7c:	ldr	w0, [sp, #36]
   2aa80:	bl	2aab8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1830>
   2aa84:	mov	x2, x0
   2aa88:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2aa8c:	add	x1, x0, #0xdc0
   2aa90:	ldr	x0, [sp, #56]
   2aa94:	bl	25bdc <OnPrint@@Base+0x5bc>
   2aa98:	ldr	x2, [sp, #40]
   2aa9c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2aaa0:	add	x1, x0, #0xdc8
   2aaa4:	ldr	x0, [sp, #56]
   2aaa8:	bl	25bdc <OnPrint@@Base+0x5bc>
   2aaac:	nop
   2aab0:	ldr	x30, [sp], #64
   2aab4:	ret
   2aab8:	str	x30, [sp, #-48]!
   2aabc:	str	w0, [sp, #28]
   2aac0:	ldr	w0, [sp, #28]
   2aac4:	cmp	w0, #0x8
   2aac8:	b.eq	2aba8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1920>  // b.none
   2aacc:	cmp	w0, #0x8
   2aad0:	b.gt	2abb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x192c>
   2aad4:	cmp	w0, #0x7
   2aad8:	b.eq	2ab9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1914>  // b.none
   2aadc:	cmp	w0, #0x7
   2aae0:	b.gt	2abb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x192c>
   2aae4:	cmp	w0, #0x6
   2aae8:	b.eq	2ab90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1908>  // b.none
   2aaec:	cmp	w0, #0x6
   2aaf0:	b.gt	2abb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x192c>
   2aaf4:	cmp	w0, #0x5
   2aaf8:	b.eq	2ab84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18fc>  // b.none
   2aafc:	cmp	w0, #0x5
   2ab00:	b.gt	2abb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x192c>
   2ab04:	cmp	w0, #0x4
   2ab08:	b.eq	2ab78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18f0>  // b.none
   2ab0c:	cmp	w0, #0x4
   2ab10:	b.gt	2abb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x192c>
   2ab14:	cmp	w0, #0x3
   2ab18:	b.eq	2ab6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x18e4>  // b.none
   2ab1c:	cmp	w0, #0x3
   2ab20:	b.gt	2abb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x192c>
   2ab24:	cmp	w0, #0x2
   2ab28:	b.eq	2ab60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18d8>  // b.none
   2ab2c:	cmp	w0, #0x2
   2ab30:	b.gt	2abb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x192c>
   2ab34:	cmp	w0, #0x0
   2ab38:	b.eq	2ab48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18c0>  // b.none
   2ab3c:	cmp	w0, #0x1
   2ab40:	b.eq	2ab54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18cc>  // b.none
   2ab44:	b	2abb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x192c>
   2ab48:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2ab4c:	add	x0, x0, #0xc10
   2ab50:	b	2ac04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x197c>
   2ab54:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2ab58:	add	x0, x0, #0xc18
   2ab5c:	b	2ac04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x197c>
   2ab60:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2ab64:	add	x0, x0, #0xc20
   2ab68:	b	2ac04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x197c>
   2ab6c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2ab70:	add	x0, x0, #0xc28
   2ab74:	b	2ac04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x197c>
   2ab78:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2ab7c:	add	x0, x0, #0xc30
   2ab80:	b	2ac04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x197c>
   2ab84:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2ab88:	add	x0, x0, #0xc38
   2ab8c:	b	2ac04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x197c>
   2ab90:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2ab94:	add	x0, x0, #0xc40
   2ab98:	b	2ac04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x197c>
   2ab9c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2aba0:	add	x0, x0, #0xc48
   2aba4:	b	2ac04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x197c>
   2aba8:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2abac:	add	x0, x0, #0xc50
   2abb0:	b	2ac04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x197c>
   2abb4:	str	xzr, [sp, #40]
   2abb8:	str	xzr, [sp, #32]
   2abbc:	ldr	x1, [sp, #40]
   2abc0:	ldr	x0, [sp, #32]
   2abc4:	cmp	x1, x0
   2abc8:	cset	w0, eq  // eq = none
   2abcc:	and	w0, w0, #0xff
   2abd0:	and	x0, x0, #0xff
   2abd4:	cmp	x0, #0x0
   2abd8:	b.eq	2abfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1974>  // b.none
   2abdc:	ldr	x4, [sp, #32]
   2abe0:	ldr	x3, [sp, #40]
   2abe4:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2abe8:	add	x2, x0, #0xc58
   2abec:	mov	w1, #0x2a9                 	// #681
   2abf0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2abf4:	add	x0, x0, #0xc80
   2abf8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2abfc:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2ac00:	add	x0, x0, #0xc10
   2ac04:	ldr	x30, [sp], #48
   2ac08:	ret
   2ac0c:	str	x30, [sp, #-64]!
   2ac10:	str	x0, [sp, #24]
   2ac14:	str	x1, [sp, #16]
   2ac18:	ldr	x0, [sp, #24]
   2ac1c:	add	x0, x0, #0x8
   2ac20:	ldr	x1, [sp, #16]
   2ac24:	bl	2b83c <__sanitizer_get_module_and_offset_for_pc@@Base+0x25b4>
   2ac28:	and	w0, w0, #0xff
   2ac2c:	cmp	w0, #0x0
   2ac30:	b.eq	2ac3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x19b4>  // b.none
   2ac34:	mov	w0, #0x0                   	// #0
   2ac38:	b	2ae08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b80>
   2ac3c:	ldr	x0, [sp, #16]
   2ac40:	mov	x3, #0x0                   	// #0
   2ac44:	mov	x2, #0x0                   	// #0
   2ac48:	mov	w1, w0
   2ac4c:	mov	w0, #0x10                  	// #16
   2ac50:	bl	1ef1c <__sanitizer_set_report_fd@@Base+0x4d70>
   2ac54:	mov	x2, x0
   2ac58:	add	x0, sp, #0x34
   2ac5c:	mov	x1, x0
   2ac60:	mov	x0, x2
   2ac64:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   2ac68:	and	w0, w0, #0xff
   2ac6c:	cmp	w0, #0x0
   2ac70:	b.eq	2acac <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a24>  // b.none
   2ac74:	bl	9984 <__ubsan_default_options@@Base+0x320>
   2ac78:	cmp	w0, #0x0
   2ac7c:	cset	w0, ne  // ne = any
   2ac80:	and	w0, w0, #0xff
   2ac84:	cmp	w0, #0x0
   2ac88:	b.eq	2aca4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a1c>  // b.none
   2ac8c:	ldr	w0, [sp, #52]
   2ac90:	mov	w2, w0
   2ac94:	ldr	x1, [sp, #16]
   2ac98:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2ac9c:	add	x0, x0, #0xff0
   2aca0:	bl	25a74 <OnPrint@@Base+0x454>
   2aca4:	mov	w0, #0x0                   	// #0
   2aca8:	b	2ae08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b80>
   2acac:	bl	9984 <__ubsan_default_options@@Base+0x320>
   2acb0:	sxtw	x0, w0
   2acb4:	cmp	x0, #0x1
   2acb8:	cset	w0, hi  // hi = pmore
   2acbc:	and	w0, w0, #0xff
   2acc0:	cmp	w0, #0x0
   2acc4:	b.eq	2acd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a50>  // b.none
   2acc8:	ldr	x1, [sp, #16]
   2accc:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2acd0:	add	x0, x0, #0x20
   2acd4:	bl	25a74 <OnPrint@@Base+0x454>
   2acd8:	ldr	x0, [sp, #16]
   2acdc:	mov	w3, w0
   2ace0:	add	x0, sp, #0x30
   2ace4:	mov	w2, #0x40000000            	// #1073741824
   2ace8:	mov	x1, x0
   2acec:	mov	w0, w3
   2acf0:	bl	1ef60 <__sanitizer_set_report_fd@@Base+0x4db4>
   2acf4:	str	x0, [sp, #56]
   2acf8:	add	x0, sp, #0x28
   2acfc:	mov	x1, x0
   2ad00:	ldr	x0, [sp, #56]
   2ad04:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   2ad08:	and	w0, w0, #0xff
   2ad0c:	cmp	w0, #0x0
   2ad10:	b.eq	2ad28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1aa0>  // b.none
   2ad14:	ldr	w0, [sp, #40]
   2ad18:	cmp	w0, #0x4
   2ad1c:	b.ne	2ad28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1aa0>  // b.any
   2ad20:	mov	w0, #0x1                   	// #1
   2ad24:	b	2ad2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1aa4>
   2ad28:	mov	w0, #0x0                   	// #0
   2ad2c:	cmp	w0, #0x0
   2ad30:	b.eq	2ad38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ab0>  // b.none
   2ad34:	b	2acd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a50>
   2ad38:	add	x0, sp, #0x2c
   2ad3c:	mov	x1, x0
   2ad40:	ldr	x0, [sp, #56]
   2ad44:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   2ad48:	and	w0, w0, #0xff
   2ad4c:	cmp	w0, #0x0
   2ad50:	b.eq	2ada4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b1c>  // b.none
   2ad54:	bl	9984 <__ubsan_default_options@@Base+0x320>
   2ad58:	cmp	w0, #0x0
   2ad5c:	cset	w0, ne  // ne = any
   2ad60:	and	w0, w0, #0xff
   2ad64:	cmp	w0, #0x0
   2ad68:	b.eq	2ad84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1afc>  // b.none
   2ad6c:	ldr	w0, [sp, #44]
   2ad70:	mov	w2, w0
   2ad74:	ldr	x1, [sp, #16]
   2ad78:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2ad7c:	add	x0, x0, #0x40
   2ad80:	bl	25a74 <OnPrint@@Base+0x454>
   2ad84:	ldr	x0, [sp, #16]
   2ad88:	mov	x3, #0x0                   	// #0
   2ad8c:	mov	x2, #0x0                   	// #0
   2ad90:	mov	w1, w0
   2ad94:	mov	w0, #0x11                  	// #17
   2ad98:	bl	1ef1c <__sanitizer_set_report_fd@@Base+0x4d70>
   2ad9c:	mov	w0, #0x0                   	// #0
   2ada0:	b	2ae08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b80>
   2ada4:	ldr	w0, [sp, #48]
   2ada8:	and	w0, w0, #0xff
   2adac:	cmp	w0, #0x7f
   2adb0:	b.ne	2adf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b6c>  // b.any
   2adb4:	ldr	w0, [sp, #48]
   2adb8:	asr	w0, w0, #8
   2adbc:	and	w0, w0, #0xff
   2adc0:	cmp	w0, #0x13
   2adc4:	b.eq	2adf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b6c>  // b.none
   2adc8:	ldr	x0, [sp, #16]
   2adcc:	mov	w1, w0
   2add0:	ldr	w0, [sp, #48]
   2add4:	asr	w0, w0, #8
   2add8:	mov	w0, w0
   2addc:	and	x0, x0, #0xff
   2ade0:	mov	x3, x0
   2ade4:	mov	x2, #0x0                   	// #0
   2ade8:	mov	w0, #0x7                   	// #7
   2adec:	bl	1ef1c <__sanitizer_set_report_fd@@Base+0x4d70>
   2adf0:	b	2acd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a50>
   2adf4:	ldr	x0, [sp, #24]
   2adf8:	add	x0, x0, #0x8
   2adfc:	ldr	x1, [sp, #16]
   2ae00:	bl	2b8c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x263c>
   2ae04:	mov	w0, #0x1                   	// #1
   2ae08:	ldr	x30, [sp], #64
   2ae0c:	ret
   2ae10:	str	x30, [sp, #-48]!
   2ae14:	str	x0, [sp, #24]
   2ae18:	str	xzr, [sp, #40]
   2ae1c:	ldr	x0, [sp, #24]
   2ae20:	add	x0, x0, #0x8
   2ae24:	bl	2b820 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2598>
   2ae28:	mov	x1, x0
   2ae2c:	ldr	x0, [sp, #40]
   2ae30:	cmp	x0, x1
   2ae34:	cset	w0, cc  // cc = lo, ul, last
   2ae38:	and	w0, w0, #0xff
   2ae3c:	cmp	w0, #0x0
   2ae40:	b.eq	2af04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c7c>  // b.none
   2ae44:	ldr	x0, [sp, #24]
   2ae48:	add	x0, x0, #0x8
   2ae4c:	ldr	x1, [sp, #40]
   2ae50:	bl	2b7a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2518>
   2ae54:	str	w0, [sp, #36]
   2ae58:	mov	x3, #0x0                   	// #0
   2ae5c:	mov	x2, #0x0                   	// #0
   2ae60:	ldr	w1, [sp, #36]
   2ae64:	mov	w0, #0x11                  	// #17
   2ae68:	bl	1ef1c <__sanitizer_set_report_fd@@Base+0x4d70>
   2ae6c:	mov	x2, x0
   2ae70:	add	x0, sp, #0x20
   2ae74:	mov	x1, x0
   2ae78:	mov	x0, x2
   2ae7c:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   2ae80:	and	w0, w0, #0xff
   2ae84:	eor	w0, w0, #0x1
   2ae88:	and	w0, w0, #0xff
   2ae8c:	cmp	w0, #0x0
   2ae90:	b.eq	2aec4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c3c>  // b.none
   2ae94:	bl	9984 <__ubsan_default_options@@Base+0x320>
   2ae98:	sxtw	x0, w0
   2ae9c:	cmp	x0, #0x1
   2aea0:	cset	w0, hi  // hi = pmore
   2aea4:	and	w0, w0, #0xff
   2aea8:	cmp	w0, #0x0
   2aeac:	b.eq	2aef4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c6c>  // b.none
   2aeb0:	ldr	w1, [sp, #36]
   2aeb4:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2aeb8:	add	x0, x0, #0x78
   2aebc:	bl	25a74 <OnPrint@@Base+0x454>
   2aec0:	b	2aef4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c6c>
   2aec4:	bl	9984 <__ubsan_default_options@@Base+0x320>
   2aec8:	cmp	w0, #0x0
   2aecc:	cset	w0, ne  // ne = any
   2aed0:	and	w0, w0, #0xff
   2aed4:	cmp	w0, #0x0
   2aed8:	b.eq	2aef4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c6c>  // b.none
   2aedc:	ldr	w0, [sp, #32]
   2aee0:	mov	w2, w0
   2aee4:	ldr	w1, [sp, #36]
   2aee8:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2aeec:	add	x0, x0, #0x98
   2aef0:	bl	25a74 <OnPrint@@Base+0x454>
   2aef4:	ldr	x0, [sp, #40]
   2aef8:	add	x0, x0, #0x1
   2aefc:	str	x0, [sp, #40]
   2af00:	b	2ae1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b94>
   2af04:	nop
   2af08:	ldr	x30, [sp], #48
   2af0c:	ret
   2af10:	str	x30, [sp, #-48]!
   2af14:	str	x0, [sp, #24]
   2af18:	str	xzr, [sp, #40]
   2af1c:	ldr	x0, [sp, #24]
   2af20:	add	x0, x0, #0x8
   2af24:	bl	2b820 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2598>
   2af28:	mov	x1, x0
   2af2c:	ldr	x0, [sp, #40]
   2af30:	cmp	x0, x1
   2af34:	cset	w0, cc  // cc = lo, ul, last
   2af38:	and	w0, w0, #0xff
   2af3c:	cmp	w0, #0x0
   2af40:	b.eq	2af78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cf0>  // b.none
   2af44:	ldr	x0, [sp, #24]
   2af48:	add	x0, x0, #0x8
   2af4c:	ldr	x1, [sp, #40]
   2af50:	bl	2b7a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2518>
   2af54:	mov	x3, #0x0                   	// #0
   2af58:	mov	x2, #0x0                   	// #0
   2af5c:	mov	w1, w0
   2af60:	mov	w0, #0x8                   	// #8
   2af64:	bl	1ef1c <__sanitizer_set_report_fd@@Base+0x4d70>
   2af68:	ldr	x0, [sp, #40]
   2af6c:	add	x0, x0, #0x1
   2af70:	str	x0, [sp, #40]
   2af74:	b	2af1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c94>
   2af78:	nop
   2af7c:	ldr	x30, [sp], #48
   2af80:	ret
   2af84:	stp	x19, x30, [sp, #-128]!
   2af88:	str	x0, [sp, #24]
   2af8c:	ldr	x0, [sp, #24]
   2af90:	ldr	w1, [x0, #40]
   2af94:	add	x0, sp, #0x38
   2af98:	bl	1f4f8 <__sanitizer_set_report_fd@@Base+0x534c>
   2af9c:	mov	w0, #0x1                   	// #1
   2afa0:	strb	w0, [sp, #127]
   2afa4:	add	x0, sp, #0x20
   2afa8:	bl	2bf28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ca0>
   2afac:	add	x0, sp, #0x20
   2afb0:	mov	x1, #0x80                  	// #128
   2afb4:	bl	2bf64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cdc>
   2afb8:	str	wzr, [sp, #120]
   2afbc:	ldr	w0, [sp, #120]
   2afc0:	cmp	w0, #0x1d
   2afc4:	b.gt	2b0ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e24>
   2afc8:	ldrb	w0, [sp, #127]
   2afcc:	eor	w0, w0, #0x1
   2afd0:	and	w0, w0, #0xff
   2afd4:	cmp	w0, #0x0
   2afd8:	b.ne	2b0ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e24>  // b.any
   2afdc:	strb	wzr, [sp, #127]
   2afe0:	add	x1, sp, #0x20
   2afe4:	add	x0, sp, #0x38
   2afe8:	bl	1f59c <__sanitizer_set_report_fd@@Base+0x53f0>
   2afec:	cmp	w0, #0x2
   2aff0:	b.eq	2b02c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1da4>  // b.none
   2aff4:	cmp	w0, #0x2
   2aff8:	b.gt	2b030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1da8>
   2affc:	cmp	w0, #0x0
   2b000:	b.eq	2b010 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d88>  // b.none
   2b004:	cmp	w0, #0x1
   2b008:	b.eq	2b020 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d98>  // b.none
   2b00c:	b	2b030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1da8>
   2b010:	ldr	x0, [sp, #24]
   2b014:	bl	2ae10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b88>
   2b018:	mov	w19, #0x0                   	// #0
   2b01c:	b	2b0c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e3c>
   2b020:	mov	w0, #0x1                   	// #1
   2b024:	strb	w0, [sp, #127]
   2b028:	b	2b030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1da8>
   2b02c:	nop
   2b030:	add	x0, sp, #0x20
   2b034:	str	x0, [sp, #104]
   2b038:	ldr	x0, [sp, #104]
   2b03c:	bl	2bfac <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d24>
   2b040:	str	x0, [sp, #112]
   2b044:	ldr	x0, [sp, #104]
   2b048:	bl	2bfc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d3c>
   2b04c:	str	x0, [sp, #96]
   2b050:	ldr	x1, [sp, #112]
   2b054:	ldr	x0, [sp, #96]
   2b058:	cmp	x1, x0
   2b05c:	b.eq	2b09c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e14>  // b.none
   2b060:	ldr	x0, [sp, #112]
   2b064:	ldr	x0, [x0]
   2b068:	str	x0, [sp, #88]
   2b06c:	ldr	x1, [sp, #88]
   2b070:	ldr	x0, [sp, #24]
   2b074:	bl	2ac0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1984>
   2b078:	and	w0, w0, #0xff
   2b07c:	cmp	w0, #0x0
   2b080:	b.eq	2b08c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e04>  // b.none
   2b084:	mov	w0, #0x1                   	// #1
   2b088:	strb	w0, [sp, #127]
   2b08c:	ldr	x0, [sp, #112]
   2b090:	add	x0, x0, #0x8
   2b094:	str	x0, [sp, #112]
   2b098:	b	2b050 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1dc8>
   2b09c:	ldr	w0, [sp, #120]
   2b0a0:	add	w0, w0, #0x1
   2b0a4:	str	w0, [sp, #120]
   2b0a8:	b	2afbc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d34>
   2b0ac:	ldr	x0, [sp, #24]
   2b0b0:	add	x0, x0, #0x8
   2b0b4:	bl	2b820 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2598>
   2b0b8:	cmp	x0, #0x0
   2b0bc:	cset	w0, ne  // ne = any
   2b0c0:	and	w19, w0, #0xff
   2b0c4:	add	x0, sp, #0x20
   2b0c8:	bl	2bf48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cc0>
   2b0cc:	add	x0, sp, #0x38
   2b0d0:	bl	1f9c4 <__sanitizer_set_report_fd@@Base+0x5818>
   2b0d4:	mov	w0, w19
   2b0d8:	ldp	x19, x30, [sp], #128
   2b0dc:	ret
   2b0e0:	str	x30, [sp, #-32]!
   2b0e4:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   2b0e8:	add	x0, x0, #0x220
   2b0ec:	ldr	x0, [x0]
   2b0f0:	str	x0, [sp, #24]
   2b0f4:	ldr	x0, [sp, #24]
   2b0f8:	cmp	x0, #0x0
   2b0fc:	b.eq	2b124 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e9c>  // b.none
   2b100:	bl	1ef9c <__sanitizer_set_report_fd@@Base+0x4df0>
   2b104:	mov	x1, x0
   2b108:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   2b10c:	ldr	x0, [x0, #3848]
   2b110:	ldr	x0, [x0]
   2b114:	cmp	x1, x0
   2b118:	b.ne	2b124 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e9c>  // b.any
   2b11c:	mov	w0, #0x1                   	// #1
   2b120:	b	2b128 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ea0>
   2b124:	mov	w0, #0x0                   	// #0
   2b128:	cmp	w0, #0x0
   2b12c:	b.eq	2b144 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ebc>  // b.none
   2b130:	ldr	x0, [sp, #24]
   2b134:	bl	2af10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c88>
   2b138:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   2b13c:	add	x0, x0, #0x220
   2b140:	str	xzr, [x0]
   2b144:	nop
   2b148:	ldr	x30, [sp], #32
   2b14c:	ret
   2b150:	str	x30, [sp, #-112]!
   2b154:	str	w0, [sp, #44]
   2b158:	str	x1, [sp, #32]
   2b15c:	str	x2, [sp, #24]
   2b160:	add	x0, sp, #0x30
   2b164:	ldr	x2, [sp, #24]
   2b168:	ldr	x1, [sp, #32]
   2b16c:	bl	29de8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb60>
   2b170:	ldr	x0, [sp, #64]
   2b174:	ldr	x1, [sp, #72]
   2b178:	ldr	x2, [sp, #80]
   2b17c:	mov	x4, x2
   2b180:	mov	x3, x1
   2b184:	mov	x2, x0
   2b188:	ldr	w1, [sp, #44]
   2b18c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2b190:	add	x0, x0, #0xe8
   2b194:	bl	259c8 <OnPrint@@Base+0x3a8>
   2b198:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   2b19c:	add	x0, x0, #0x220
   2b1a0:	ldr	x0, [x0]
   2b1a4:	str	x0, [sp, #104]
   2b1a8:	ldr	x0, [sp, #104]
   2b1ac:	cmp	x0, #0x0
   2b1b0:	b.eq	2b238 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1fb0>  // b.none
   2b1b4:	ldr	w0, [sp, #44]
   2b1b8:	cmp	w0, #0x6
   2b1bc:	b.ne	2b1cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f44>  // b.any
   2b1c0:	ldr	x0, [sp, #104]
   2b1c4:	bl	2af10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c88>
   2b1c8:	b	2b1d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f4c>
   2b1cc:	ldr	x0, [sp, #104]
   2b1d0:	bl	2ae10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b88>
   2b1d4:	adrp	x0, 2b000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d78>
   2b1d8:	add	x0, x0, #0xe0
   2b1dc:	bl	31370 <__sanitizer_get_module_and_offset_for_pc@@Base+0x80e8>
   2b1e0:	and	w0, w0, #0xff
   2b1e4:	eor	w0, w0, #0x1
   2b1e8:	and	w0, w0, #0xff
   2b1ec:	and	x0, x0, #0xff
   2b1f0:	cmp	x0, #0x0
   2b1f4:	cset	w0, ne  // ne = any
   2b1f8:	and	w0, w0, #0xff
   2b1fc:	cmp	w0, #0x0
   2b200:	b.eq	2b214 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f8c>  // b.none
   2b204:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2b208:	add	x0, x0, #0x120
   2b20c:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   2b210:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2b214:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   2b218:	add	x0, x0, #0x220
   2b21c:	str	xzr, [x0]
   2b220:	ldr	x0, [sp, #104]
   2b224:	ldr	x0, [x0]
   2b228:	add	x0, x0, #0x68
   2b22c:	mov	w2, #0x1                   	// #1
   2b230:	mov	x1, #0x1                   	// #1
   2b234:	bl	11104 <__sancov_default_options@@Base+0xd58>
   2b238:	ldr	w0, [sp, #44]
   2b23c:	cmp	w0, #0x6
   2b240:	b.ne	2b24c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1fc4>  // b.any
   2b244:	mov	w0, #0x1                   	// #1
   2b248:	b	2b250 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1fc8>
   2b24c:	mov	w0, #0x2                   	// #2
   2b250:	bl	1e67c <__sanitizer_set_report_fd@@Base+0x44d0>
   2b254:	stp	x19, x30, [sp, #-304]!
   2b258:	str	x0, [sp, #24]
   2b25c:	ldr	x0, [sp, #24]
   2b260:	str	x0, [sp, #280]
   2b264:	mov	x4, #0x0                   	// #0
   2b268:	mov	x3, #0x0                   	// #0
   2b26c:	mov	x2, #0x0                   	// #0
   2b270:	mov	x1, #0x9                   	// #9
   2b274:	mov	w0, #0x1                   	// #1
   2b278:	bl	1f034 <__sanitizer_set_report_fd@@Base+0x4e88>
   2b27c:	bl	1efb0 <__sanitizer_set_report_fd@@Base+0x4e04>
   2b280:	mov	x1, x0
   2b284:	ldr	x0, [sp, #280]
   2b288:	ldr	x0, [x0, #112]
   2b28c:	cmp	x1, x0
   2b290:	cset	w0, ne  // ne = any
   2b294:	and	w0, w0, #0xff
   2b298:	cmp	w0, #0x0
   2b29c:	b.eq	2b2a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2020>  // b.none
   2b2a0:	mov	w0, #0x4                   	// #4
   2b2a4:	bl	1e67c <__sanitizer_set_report_fd@@Base+0x44d0>
   2b2a8:	ldr	x0, [sp, #280]
   2b2ac:	add	x0, x0, #0x10
   2b2b0:	bl	1ed20 <__sanitizer_set_report_fd@@Base+0x4b74>
   2b2b4:	ldr	x0, [sp, #280]
   2b2b8:	add	x0, x0, #0x10
   2b2bc:	bl	1edfc <__sanitizer_set_report_fd@@Base+0x4c50>
   2b2c0:	adrp	x0, 2b000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d78>
   2b2c4:	add	x0, x0, #0xe0
   2b2c8:	bl	31308 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8080>
   2b2cc:	and	w0, w0, #0xff
   2b2d0:	eor	w0, w0, #0x1
   2b2d4:	and	w0, w0, #0xff
   2b2d8:	and	x0, x0, #0xff
   2b2dc:	cmp	x0, #0x0
   2b2e0:	cset	w0, ne  // ne = any
   2b2e4:	and	w0, w0, #0xff
   2b2e8:	cmp	w0, #0x0
   2b2ec:	b.eq	2b300 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2078>  // b.none
   2b2f0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2b2f4:	add	x0, x0, #0x150
   2b2f8:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   2b2fc:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2b300:	bl	1efb0 <__sanitizer_set_report_fd@@Base+0x4e04>
   2b304:	mov	w1, w0
   2b308:	add	x0, sp, #0xe8
   2b30c:	ldr	x2, [sp, #280]
   2b310:	bl	2bbfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2974>
   2b314:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   2b318:	add	x0, x0, #0x220
   2b31c:	add	x1, sp, #0xe8
   2b320:	str	x1, [x0]
   2b324:	add	x0, sp, #0xd0
   2b328:	mov	x1, #0x2000                	// #8192
   2b32c:	bl	92b0 <__asan_backtrace_open@plt+0x2640>
   2b330:	add	x0, sp, #0xb8
   2b334:	mov	x2, #0x18                  	// #24
   2b338:	mov	w1, #0x0                   	// #0
   2b33c:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   2b340:	add	x0, sp, #0xd0
   2b344:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   2b348:	str	x0, [sp, #184]
   2b34c:	mov	x0, #0x2000                	// #8192
   2b350:	str	x0, [sp, #200]
   2b354:	add	x0, sp, #0xb8
   2b358:	mov	x1, #0x0                   	// #0
   2b35c:	bl	1f080 <__sanitizer_set_report_fd@@Base+0x4ed4>
   2b360:	str	xzr, [sp, #296]
   2b364:	ldr	x0, [sp, #296]
   2b368:	cmp	x0, #0x6
   2b36c:	b.hi	2b3c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x213c>  // b.pmore
   2b370:	add	x0, sp, #0x20
   2b374:	mov	x2, #0x98                  	// #152
   2b378:	mov	w1, #0x0                   	// #0
   2b37c:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   2b380:	adrp	x0, 2b000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d78>
   2b384:	add	x0, x0, #0x150
   2b388:	str	x0, [sp, #32]
   2b38c:	mov	w0, #0x4                   	// #4
   2b390:	movk	w0, #0x800, lsl #16
   2b394:	str	w0, [sp, #168]
   2b398:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2b39c:	add	x0, x0, #0xc8
   2b3a0:	ldr	x1, [sp, #296]
   2b3a4:	ldr	w0, [x0, x1, lsl #2]
   2b3a8:	add	x1, sp, #0x20
   2b3ac:	mov	x2, #0x0                   	// #0
   2b3b0:	bl	1f0c8 <__sanitizer_set_report_fd@@Base+0x4f1c>
   2b3b4:	ldr	x0, [sp, #296]
   2b3b8:	add	x0, x0, #0x1
   2b3bc:	str	x0, [sp, #296]
   2b3c0:	b	2b364 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20dc>
   2b3c4:	str	wzr, [sp, #292]
   2b3c8:	add	x0, sp, #0xe8
   2b3cc:	bl	2af84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cfc>
   2b3d0:	and	w0, w0, #0xff
   2b3d4:	eor	w0, w0, #0x1
   2b3d8:	and	w0, w0, #0xff
   2b3dc:	cmp	w0, #0x0
   2b3e0:	b.eq	2b414 <__sanitizer_get_module_and_offset_for_pc@@Base+0x218c>  // b.none
   2b3e4:	bl	9984 <__ubsan_default_options@@Base+0x320>
   2b3e8:	cmp	w0, #0x0
   2b3ec:	cset	w0, ne  // ne = any
   2b3f0:	and	w0, w0, #0xff
   2b3f4:	cmp	w0, #0x0
   2b3f8:	b.eq	2b408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2180>  // b.none
   2b3fc:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2b400:	add	x0, x0, #0x178
   2b404:	bl	25a74 <OnPrint@@Base+0x454>
   2b408:	mov	w0, #0x3                   	// #3
   2b40c:	str	w0, [sp, #292]
   2b410:	b	2b448 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21c0>
   2b414:	ldr	x0, [sp, #280]
   2b418:	ldr	x19, [x0]
   2b41c:	add	x0, sp, #0xe8
   2b420:	bl	2bc88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a00>
   2b424:	mov	x2, x0
   2b428:	ldr	x0, [sp, #280]
   2b42c:	ldr	x0, [x0, #8]
   2b430:	mov	x1, x0
   2b434:	mov	x0, x2
   2b438:	blr	x19
   2b43c:	add	x0, sp, #0xe8
   2b440:	bl	2ae10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b88>
   2b444:	str	wzr, [sp, #292]
   2b448:	adrp	x0, 2b000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d78>
   2b44c:	add	x0, x0, #0xe0
   2b450:	bl	31370 <__sanitizer_get_module_and_offset_for_pc@@Base+0x80e8>
   2b454:	and	w0, w0, #0xff
   2b458:	eor	w0, w0, #0x1
   2b45c:	and	w0, w0, #0xff
   2b460:	and	x0, x0, #0xff
   2b464:	cmp	x0, #0x0
   2b468:	cset	w0, ne  // ne = any
   2b46c:	and	w0, w0, #0xff
   2b470:	cmp	w0, #0x0
   2b474:	b.eq	2b488 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2200>  // b.none
   2b478:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2b47c:	add	x0, x0, #0x120
   2b480:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   2b484:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2b488:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   2b48c:	add	x0, x0, #0x220
   2b490:	str	xzr, [x0]
   2b494:	ldr	x0, [sp, #280]
   2b498:	add	x0, x0, #0x68
   2b49c:	mov	w2, #0x1                   	// #1
   2b4a0:	mov	x1, #0x1                   	// #1
   2b4a4:	bl	11104 <__sancov_default_options@@Base+0xd58>
   2b4a8:	ldr	w19, [sp, #292]
   2b4ac:	add	x0, sp, #0xd0
   2b4b0:	bl	92e0 <__asan_backtrace_open@plt+0x2670>
   2b4b4:	add	x0, sp, #0xe8
   2b4b8:	bl	2bca0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a18>
   2b4bc:	mov	w0, w19
   2b4c0:	ldp	x19, x30, [sp], #304
   2b4c4:	ret
   2b4c8:	sub	sp, sp, #0x100
   2b4cc:	str	x30, [sp]
   2b4d0:	str	x0, [sp, #24]
   2b4d4:	str	x1, [sp, #16]
   2b4d8:	add	x0, sp, #0xc0
   2b4dc:	bl	2be04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b7c>
   2b4e0:	add	x0, sp, #0x48
   2b4e4:	bl	2bf08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c80>
   2b4e8:	ldr	x0, [sp, #24]
   2b4ec:	str	x0, [sp, #72]
   2b4f0:	ldr	x0, [sp, #16]
   2b4f4:	str	x0, [sp, #80]
   2b4f8:	bl	1ef9c <__sanitizer_set_report_fd@@Base+0x4df0>
   2b4fc:	str	x0, [sp, #184]
   2b500:	add	x0, sp, #0x48
   2b504:	add	x0, x0, #0x68
   2b508:	mov	w2, #0x1                   	// #1
   2b50c:	mov	x1, #0x0                   	// #0
   2b510:	bl	11104 <__sancov_default_options@@Base+0xd58>
   2b514:	mov	x0, #0x200000              	// #2097152
   2b518:	str	x0, [sp, #240]
   2b51c:	add	x0, sp, #0x30
   2b520:	mov	x1, #0x200000              	// #2097152
   2b524:	bl	2bcc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a38>
   2b528:	add	x0, sp, #0x48
   2b52c:	add	x0, x0, #0x10
   2b530:	bl	1ed20 <__sanitizer_set_report_fd@@Base+0x4b74>
   2b534:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   2b538:	add	x0, x0, #0x228
   2b53c:	bl	1f278 <__sanitizer_set_report_fd@@Base+0x50cc>
   2b540:	str	xzr, [sp, #248]
   2b544:	ldr	x0, [sp, #248]
   2b548:	cmp	x0, #0x6
   2b54c:	b.hi	2b580 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22f8>  // b.pmore
   2b550:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2b554:	add	x0, x0, #0xc8
   2b558:	ldr	x1, [sp, #248]
   2b55c:	ldr	w0, [x0, x1, lsl #2]
   2b560:	mov	w1, w0
   2b564:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   2b568:	add	x0, x0, #0x228
   2b56c:	bl	1f2c0 <__sanitizer_set_report_fd@@Base+0x5114>
   2b570:	ldr	x0, [sp, #248]
   2b574:	add	x0, x0, #0x1
   2b578:	str	x0, [sp, #248]
   2b57c:	b	2b544 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22bc>
   2b580:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   2b584:	add	x2, x0, #0x2a8
   2b588:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   2b58c:	add	x1, x0, #0x228
   2b590:	mov	w0, #0x0                   	// #0
   2b594:	bl	1f22c <__sanitizer_set_report_fd@@Base+0x5080>
   2b598:	str	w0, [sp, #236]
   2b59c:	ldrsw	x0, [sp, #236]
   2b5a0:	str	x0, [sp, #224]
   2b5a4:	str	xzr, [sp, #216]
   2b5a8:	ldr	x1, [sp, #224]
   2b5ac:	ldr	x0, [sp, #216]
   2b5b0:	cmp	x1, x0
   2b5b4:	cset	w0, ne  // ne = any
   2b5b8:	and	w0, w0, #0xff
   2b5bc:	and	x0, x0, #0xff
   2b5c0:	cmp	x0, #0x0
   2b5c4:	b.eq	2b5e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2360>  // b.none
   2b5c8:	ldr	x4, [sp, #216]
   2b5cc:	ldr	x3, [sp, #224]
   2b5d0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2b5d4:	add	x2, x0, #0x1f0
   2b5d8:	mov	w1, #0x1ac                 	// #428
   2b5dc:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2b5e0:	add	x0, x0, #0xf98
   2b5e4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2b5e8:	add	x0, sp, #0x30
   2b5ec:	bl	2bdd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b4c>
   2b5f0:	mov	x1, x0
   2b5f4:	add	x0, sp, #0x48
   2b5f8:	mov	x6, #0x0                   	// #0
   2b5fc:	mov	x5, #0x0                   	// #0
   2b600:	mov	x4, #0x0                   	// #0
   2b604:	mov	x3, x0
   2b608:	mov	w2, #0x700                 	// #1792
   2b60c:	movk	w2, #0x80, lsl #16
   2b610:	adrp	x0, 2b000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d78>
   2b614:	add	x0, x0, #0x254
   2b618:	bl	1fec4 <__sanitizer_set_report_fd@@Base+0x5d18>
   2b61c:	str	x0, [sp, #208]
   2b620:	mov	x2, #0x0                   	// #0
   2b624:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   2b628:	add	x1, x0, #0x2a8
   2b62c:	mov	w0, #0x2                   	// #2
   2b630:	bl	1f22c <__sanitizer_set_report_fd@@Base+0x5080>
   2b634:	str	wzr, [sp, #44]
   2b638:	add	x0, sp, #0x2c
   2b63c:	mov	x1, x0
   2b640:	ldr	x0, [sp, #208]
   2b644:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   2b648:	and	w0, w0, #0xff
   2b64c:	cmp	w0, #0x0
   2b650:	b.eq	2b690 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2408>  // b.none
   2b654:	bl	9984 <__ubsan_default_options@@Base+0x320>
   2b658:	cmp	w0, #0x0
   2b65c:	cset	w0, ne  // ne = any
   2b660:	and	w0, w0, #0xff
   2b664:	cmp	w0, #0x0
   2b668:	b.eq	2b680 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23f8>  // b.none
   2b66c:	ldr	w0, [sp, #44]
   2b670:	mov	w1, w0
   2b674:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2b678:	add	x0, x0, #0x200
   2b67c:	bl	25a74 <OnPrint@@Base+0x454>
   2b680:	add	x0, sp, #0x48
   2b684:	add	x0, x0, #0x10
   2b688:	bl	1edfc <__sanitizer_set_report_fd@@Base+0x4c50>
   2b68c:	b	2b780 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24f8>
   2b690:	add	x0, sp, #0x28
   2b694:	ldr	x1, [sp, #208]
   2b698:	bl	2bea0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c18>
   2b69c:	mov	x4, #0x0                   	// #0
   2b6a0:	mov	x3, #0x0                   	// #0
   2b6a4:	mov	x2, #0x0                   	// #0
   2b6a8:	ldr	x1, [sp, #208]
   2b6ac:	mov	w0, #0x6d61                	// #28001
   2b6b0:	movk	w0, #0x5961, lsl #16
   2b6b4:	bl	1f034 <__sanitizer_set_report_fd@@Base+0x4e88>
   2b6b8:	add	x0, sp, #0x48
   2b6bc:	add	x0, x0, #0x10
   2b6c0:	bl	1edfc <__sanitizer_set_report_fd@@Base+0x4c50>
   2b6c4:	add	x0, sp, #0x48
   2b6c8:	add	x0, x0, #0x68
   2b6cc:	mov	w1, #0x1                   	// #1
   2b6d0:	bl	11080 <__sancov_default_options@@Base+0xcd4>
   2b6d4:	cmp	x0, #0x0
   2b6d8:	cset	w0, eq  // eq = none
   2b6dc:	and	w0, w0, #0xff
   2b6e0:	cmp	w0, #0x0
   2b6e4:	b.eq	2b6f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2468>  // b.none
   2b6e8:	bl	69e0 <sched_yield@plt>
   2b6ec:	b	2b6c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x243c>
   2b6f0:	ldr	x0, [sp, #208]
   2b6f4:	mov	w2, #0x40000000            	// #1073741824
   2b6f8:	mov	x1, #0x0                   	// #0
   2b6fc:	bl	1ef60 <__sanitizer_set_report_fd@@Base+0x4db4>
   2b700:	str	x0, [sp, #200]
   2b704:	add	x0, sp, #0x2c
   2b708:	mov	x1, x0
   2b70c:	ldr	x0, [sp, #200]
   2b710:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   2b714:	and	w0, w0, #0xff
   2b718:	eor	w0, w0, #0x1
   2b71c:	and	w0, w0, #0xff
   2b720:	cmp	w0, #0x0
   2b724:	b.ne	2b76c <__sanitizer_get_module_and_offset_for_pc@@Base+0x24e4>  // b.any
   2b728:	ldr	w0, [sp, #44]
   2b72c:	cmp	w0, #0x4
   2b730:	b.eq	2b764 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24dc>  // b.none
   2b734:	bl	9984 <__ubsan_default_options@@Base+0x320>
   2b738:	cmp	w0, #0x0
   2b73c:	cset	w0, ne  // ne = any
   2b740:	and	w0, w0, #0xff
   2b744:	cmp	w0, #0x0
   2b748:	b.eq	2b774 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24ec>  // b.none
   2b74c:	ldr	w0, [sp, #44]
   2b750:	mov	w1, w0
   2b754:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2b758:	add	x0, x0, #0x230
   2b75c:	bl	25a74 <OnPrint@@Base+0x454>
   2b760:	b	2b774 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24ec>
   2b764:	nop
   2b768:	b	2b6f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2468>
   2b76c:	nop
   2b770:	b	2b778 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24f0>
   2b774:	nop
   2b778:	add	x0, sp, #0x28
   2b77c:	bl	2bedc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c54>
   2b780:	add	x0, sp, #0x30
   2b784:	bl	2bd94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b0c>
   2b788:	add	x0, sp, #0xc0
   2b78c:	bl	2be64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bdc>
   2b790:	nop
   2b794:	ldr	x30, [sp]
   2b798:	add	sp, sp, #0x100
   2b79c:	ret
   2b7a0:	str	x30, [sp, #-48]!
   2b7a4:	str	x0, [sp, #24]
   2b7a8:	str	x1, [sp, #16]
   2b7ac:	ldr	x0, [sp, #16]
   2b7b0:	str	x0, [sp, #40]
   2b7b4:	ldr	x0, [sp, #24]
   2b7b8:	add	x0, x0, #0x8
   2b7bc:	bl	20ac4 <__sanitizer_set_report_fd@@Base+0x6918>
   2b7c0:	str	x0, [sp, #32]
   2b7c4:	ldr	x1, [sp, #40]
   2b7c8:	ldr	x0, [sp, #32]
   2b7cc:	cmp	x1, x0
   2b7d0:	cset	w0, cs  // cs = hs, nlast
   2b7d4:	and	w0, w0, #0xff
   2b7d8:	and	x0, x0, #0xff
   2b7dc:	cmp	x0, #0x0
   2b7e0:	b.eq	2b804 <__sanitizer_get_module_and_offset_for_pc@@Base+0x257c>  // b.none
   2b7e4:	ldr	x4, [sp, #32]
   2b7e8:	ldr	x3, [sp, #40]
   2b7ec:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2b7f0:	add	x2, x0, #0x268
   2b7f4:	mov	w1, #0x202                 	// #514
   2b7f8:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2b7fc:	add	x0, x0, #0xf98
   2b800:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2b804:	ldr	x0, [sp, #24]
   2b808:	add	x0, x0, #0x8
   2b80c:	ldr	x1, [sp, #16]
   2b810:	bl	2bff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d68>
   2b814:	ldr	x0, [x0]
   2b818:	ldr	x30, [sp], #48
   2b81c:	ret
   2b820:	str	x30, [sp, #-32]!
   2b824:	str	x0, [sp, #24]
   2b828:	ldr	x0, [sp, #24]
   2b82c:	add	x0, x0, #0x8
   2b830:	bl	20ac4 <__sanitizer_set_report_fd@@Base+0x6918>
   2b834:	ldr	x30, [sp], #32
   2b838:	ret
   2b83c:	str	x30, [sp, #-48]!
   2b840:	str	x0, [sp, #24]
   2b844:	str	x1, [sp, #16]
   2b848:	str	xzr, [sp, #40]
   2b84c:	ldr	x0, [sp, #24]
   2b850:	add	x0, x0, #0x8
   2b854:	bl	20ac4 <__sanitizer_set_report_fd@@Base+0x6918>
   2b858:	mov	x1, x0
   2b85c:	ldr	x0, [sp, #40]
   2b860:	cmp	x0, x1
   2b864:	cset	w0, cc  // cc = lo, ul, last
   2b868:	and	w0, w0, #0xff
   2b86c:	cmp	w0, #0x0
   2b870:	b.eq	2b8b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2630>  // b.none
   2b874:	ldr	x0, [sp, #24]
   2b878:	add	x0, x0, #0x8
   2b87c:	ldr	x1, [sp, #40]
   2b880:	bl	2bff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d68>
   2b884:	ldr	x0, [x0]
   2b888:	ldr	x1, [sp, #16]
   2b88c:	cmp	x1, x0
   2b890:	cset	w0, eq  // eq = none
   2b894:	and	w0, w0, #0xff
   2b898:	cmp	w0, #0x0
   2b89c:	b.eq	2b8a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2620>  // b.none
   2b8a0:	mov	w0, #0x1                   	// #1
   2b8a4:	b	2b8bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2634>
   2b8a8:	ldr	x0, [sp, #40]
   2b8ac:	add	x0, x0, #0x1
   2b8b0:	str	x0, [sp, #40]
   2b8b4:	b	2b84c <__sanitizer_get_module_and_offset_for_pc@@Base+0x25c4>
   2b8b8:	mov	w0, #0x0                   	// #0
   2b8bc:	ldr	x30, [sp], #48
   2b8c0:	ret
   2b8c4:	str	x30, [sp, #-32]!
   2b8c8:	str	x0, [sp, #24]
   2b8cc:	str	x1, [sp, #16]
   2b8d0:	ldr	x0, [sp, #24]
   2b8d4:	add	x0, x0, #0x8
   2b8d8:	add	x1, sp, #0x10
   2b8dc:	bl	206e0 <__sanitizer_set_report_fd@@Base+0x6534>
   2b8e0:	nop
   2b8e4:	ldr	x30, [sp], #32
   2b8e8:	ret
   2b8ec:	sub	sp, sp, #0x160
   2b8f0:	str	x30, [sp]
   2b8f4:	str	x0, [sp, #40]
   2b8f8:	str	x1, [sp, #32]
   2b8fc:	str	x2, [sp, #24]
   2b900:	str	x3, [sp, #16]
   2b904:	ldr	x0, [sp, #40]
   2b908:	ldr	x0, [x0]
   2b90c:	add	x0, x0, #0x18
   2b910:	ldr	x2, [x0]
   2b914:	ldr	x1, [sp, #32]
   2b918:	ldr	x0, [sp, #40]
   2b91c:	blr	x2
   2b920:	str	w0, [sp, #348]
   2b924:	add	x0, sp, #0x48
   2b928:	str	x0, [sp, #48]
   2b92c:	mov	x0, #0x110                 	// #272
   2b930:	str	x0, [sp, #56]
   2b934:	add	x0, sp, #0x30
   2b938:	mov	x3, x0
   2b93c:	mov	x2, #0x1                   	// #1
   2b940:	ldr	w1, [sp, #348]
   2b944:	mov	w0, #0x4204                	// #16900
   2b948:	bl	1ef1c <__sanitizer_set_report_fd@@Base+0x4d70>
   2b94c:	mov	x2, x0
   2b950:	add	x0, sp, #0x44
   2b954:	mov	x1, x0
   2b958:	mov	x0, x2
   2b95c:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4024>
   2b960:	strb	w0, [sp, #347]
   2b964:	ldrb	w0, [sp, #347]
   2b968:	cmp	w0, #0x0
   2b96c:	b.eq	2b9bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2734>  // b.none
   2b970:	bl	9984 <__ubsan_default_options@@Base+0x320>
   2b974:	cmp	w0, #0x0
   2b978:	cset	w0, ne  // ne = any
   2b97c:	and	w0, w0, #0xff
   2b980:	cmp	w0, #0x0
   2b984:	b.eq	2b9a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2718>  // b.none
   2b988:	ldr	w0, [sp, #68]
   2b98c:	mov	w2, w0
   2b990:	ldr	w1, [sp, #348]
   2b994:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2b998:	add	x0, x0, #0x290
   2b99c:	bl	25a74 <OnPrint@@Base+0x454>
   2b9a0:	ldr	w0, [sp, #68]
   2b9a4:	cmp	w0, #0x3
   2b9a8:	b.ne	2b9b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x272c>  // b.any
   2b9ac:	mov	w0, #0xffffffff            	// #-1
   2b9b0:	b	2b9e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2758>
   2b9b4:	mov	w0, #0x0                   	// #0
   2b9b8:	b	2b9e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2758>
   2b9bc:	ldr	x1, [sp, #320]
   2b9c0:	ldr	x0, [sp, #16]
   2b9c4:	str	x1, [x0]
   2b9c8:	add	x0, sp, #0x48
   2b9cc:	mov	x2, #0x110                 	// #272
   2b9d0:	mov	x1, x0
   2b9d4:	ldr	x0, [sp, #24]
   2b9d8:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   2b9dc:	mov	w0, #0x1                   	// #1
   2b9e0:	ldr	x30, [sp]
   2b9e4:	add	sp, sp, #0x160
   2b9e8:	ret
   2b9ec:	sub	sp, sp, #0x10
   2b9f0:	str	x0, [sp, #8]
   2b9f4:	mov	x0, #0x22                  	// #34
   2b9f8:	add	sp, sp, #0x10
   2b9fc:	ret
   2ba00:	str	x30, [sp, #-64]!
   2ba04:	str	x0, [sp, #40]
   2ba08:	str	x1, [sp, #32]
   2ba0c:	str	x2, [sp, #24]
   2ba10:	str	x3, [sp, #16]
   2ba14:	str	xzr, [sp, #56]
   2ba18:	str	xzr, [sp, #48]
   2ba1c:	ldr	x1, [sp, #56]
   2ba20:	ldr	x0, [sp, #48]
   2ba24:	cmp	x1, x0
   2ba28:	cset	w0, eq  // eq = none
   2ba2c:	and	w0, w0, #0xff
   2ba30:	and	x0, x0, #0xff
   2ba34:	cmp	x0, #0x0
   2ba38:	b.eq	2ba5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x27d4>  // b.none
   2ba3c:	ldr	x4, [sp, #48]
   2ba40:	ldr	x3, [sp, #56]
   2ba44:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2ba48:	add	x2, x0, #0xee8
   2ba4c:	mov	w1, #0x24                  	// #36
   2ba50:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2ba54:	add	x0, x0, #0xf08
   2ba58:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2ba5c:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2ba60:	str	x30, [sp, #-48]!
   2ba64:	str	x0, [sp, #24]
   2ba68:	str	xzr, [sp, #40]
   2ba6c:	str	xzr, [sp, #32]
   2ba70:	ldr	x1, [sp, #40]
   2ba74:	ldr	x0, [sp, #32]
   2ba78:	cmp	x1, x0
   2ba7c:	cset	w0, eq  // eq = none
   2ba80:	and	w0, w0, #0xff
   2ba84:	and	x0, x0, #0xff
   2ba88:	cmp	x0, #0x0
   2ba8c:	b.eq	2bab0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2828>  // b.none
   2ba90:	ldr	x4, [sp, #32]
   2ba94:	ldr	x3, [sp, #40]
   2ba98:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2ba9c:	add	x2, x0, #0xee8
   2baa0:	mov	w1, #0x28                  	// #40
   2baa4:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2baa8:	add	x0, x0, #0xf08
   2baac:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2bab0:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2bab4:	str	x30, [sp, #-48]!
   2bab8:	str	x0, [sp, #24]
   2babc:	str	xzr, [sp, #40]
   2bac0:	str	xzr, [sp, #32]
   2bac4:	ldr	x1, [sp, #40]
   2bac8:	ldr	x0, [sp, #32]
   2bacc:	cmp	x1, x0
   2bad0:	cset	w0, eq  // eq = none
   2bad4:	and	w0, w0, #0xff
   2bad8:	and	x0, x0, #0xff
   2badc:	cmp	x0, #0x0
   2bae0:	b.eq	2bb04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x287c>  // b.none
   2bae4:	ldr	x4, [sp, #32]
   2bae8:	ldr	x3, [sp, #40]
   2baec:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2baf0:	add	x2, x0, #0xee8
   2baf4:	mov	w1, #0x29                  	// #41
   2baf8:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2bafc:	add	x0, x0, #0xf08
   2bb00:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2bb04:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2bb08:	str	x30, [sp, #-48]!
   2bb0c:	str	x0, [sp, #24]
   2bb10:	str	x1, [sp, #16]
   2bb14:	str	xzr, [sp, #40]
   2bb18:	str	xzr, [sp, #32]
   2bb1c:	ldr	x1, [sp, #40]
   2bb20:	ldr	x0, [sp, #32]
   2bb24:	cmp	x1, x0
   2bb28:	cset	w0, eq  // eq = none
   2bb2c:	and	w0, w0, #0xff
   2bb30:	and	x0, x0, #0xff
   2bb34:	cmp	x0, #0x0
   2bb38:	b.eq	2bb5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x28d4>  // b.none
   2bb3c:	ldr	x4, [sp, #32]
   2bb40:	ldr	x3, [sp, #40]
   2bb44:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2bb48:	add	x2, x0, #0xee8
   2bb4c:	mov	w1, #0x2a                  	// #42
   2bb50:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2bb54:	add	x0, x0, #0xf08
   2bb58:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2bb5c:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2bb60:	sub	sp, sp, #0x10
   2bb64:	str	x0, [sp, #8]
   2bb68:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   2bb6c:	add	x1, x0, #0xe08
   2bb70:	ldr	x0, [sp, #8]
   2bb74:	str	x1, [x0]
   2bb78:	nop
   2bb7c:	add	sp, sp, #0x10
   2bb80:	ret
   2bb84:	str	x30, [sp, #-32]!
   2bb88:	str	x0, [sp, #24]
   2bb8c:	ldr	x0, [sp, #24]
   2bb90:	bl	2bb60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x28d8>
   2bb94:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   2bb98:	add	x1, x0, #0xdd8
   2bb9c:	ldr	x0, [sp, #24]
   2bba0:	str	x1, [x0]
   2bba4:	ldr	x0, [sp, #24]
   2bba8:	add	x0, x0, #0x8
   2bbac:	bl	2bf28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ca0>
   2bbb0:	ldr	x0, [sp, #24]
   2bbb4:	add	x0, x0, #0x8
   2bbb8:	mov	x1, #0x400                 	// #1024
   2bbbc:	bl	2bf64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cdc>
   2bbc0:	nop
   2bbc4:	ldr	x30, [sp], #32
   2bbc8:	ret
   2bbcc:	str	x30, [sp, #-32]!
   2bbd0:	str	x0, [sp, #24]
   2bbd4:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   2bbd8:	add	x1, x0, #0xdd8
   2bbdc:	ldr	x0, [sp, #24]
   2bbe0:	str	x1, [x0]
   2bbe4:	ldr	x0, [sp, #24]
   2bbe8:	add	x0, x0, #0x8
   2bbec:	bl	2bf48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cc0>
   2bbf0:	nop
   2bbf4:	ldr	x30, [sp], #32
   2bbf8:	ret
   2bbfc:	str	x30, [sp, #-64]!
   2bc00:	str	x0, [sp, #40]
   2bc04:	str	w1, [sp, #36]
   2bc08:	str	x2, [sp, #24]
   2bc0c:	ldr	x0, [sp, #40]
   2bc10:	ldr	x1, [sp, #24]
   2bc14:	str	x1, [x0]
   2bc18:	ldr	x0, [sp, #40]
   2bc1c:	add	x0, x0, #0x8
   2bc20:	bl	2bb84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x28fc>
   2bc24:	ldr	x0, [sp, #40]
   2bc28:	ldr	w1, [sp, #36]
   2bc2c:	str	w1, [x0, #40]
   2bc30:	ldrsw	x0, [sp, #36]
   2bc34:	str	x0, [sp, #56]
   2bc38:	str	xzr, [sp, #48]
   2bc3c:	ldr	x1, [sp, #56]
   2bc40:	ldr	x0, [sp, #48]
   2bc44:	cmp	x1, x0
   2bc48:	cset	w0, cc  // cc = lo, ul, last
   2bc4c:	and	w0, w0, #0xff
   2bc50:	and	x0, x0, #0xff
   2bc54:	cmp	x0, #0x0
   2bc58:	b.eq	2bc7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x29f4>  // b.none
   2bc5c:	ldr	x4, [sp, #48]
   2bc60:	ldr	x3, [sp, #56]
   2bc64:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2bc68:	add	x2, x0, #0xf80
   2bc6c:	mov	w1, #0x7a                  	// #122
   2bc70:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2bc74:	add	x0, x0, #0xf98
   2bc78:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2bc7c:	nop
   2bc80:	ldr	x30, [sp], #64
   2bc84:	ret
   2bc88:	sub	sp, sp, #0x10
   2bc8c:	str	x0, [sp, #8]
   2bc90:	ldr	x0, [sp, #8]
   2bc94:	add	x0, x0, #0x8
   2bc98:	add	sp, sp, #0x10
   2bc9c:	ret
   2bca0:	str	x30, [sp, #-32]!
   2bca4:	str	x0, [sp, #24]
   2bca8:	ldr	x0, [sp, #24]
   2bcac:	add	x0, x0, #0x8
   2bcb0:	bl	2bbcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2944>
   2bcb4:	nop
   2bcb8:	ldr	x30, [sp], #32
   2bcbc:	ret
   2bcc0:	str	x30, [sp, #-48]!
   2bcc4:	str	x0, [sp, #24]
   2bcc8:	str	x1, [sp, #16]
   2bccc:	ldr	x0, [sp, #24]
   2bcd0:	ldr	x1, [sp, #16]
   2bcd4:	str	x1, [x0]
   2bcd8:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   2bcdc:	mov	x1, x0
   2bce0:	ldr	x0, [sp, #24]
   2bce4:	str	x1, [x0, #8]
   2bce8:	ldr	x0, [sp, #24]
   2bcec:	ldr	x1, [x0]
   2bcf0:	ldr	x0, [sp, #24]
   2bcf4:	ldr	x0, [x0, #8]
   2bcf8:	add	x3, x1, x0
   2bcfc:	mov	w2, #0x0                   	// #0
   2bd00:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2bd04:	add	x1, x0, #0x198
   2bd08:	mov	x0, x3
   2bd0c:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   2bd10:	mov	x1, x0
   2bd14:	ldr	x0, [sp, #24]
   2bd18:	str	x1, [x0, #16]
   2bd1c:	ldr	x0, [sp, #24]
   2bd20:	ldr	x2, [x0, #16]
   2bd24:	ldr	x0, [sp, #24]
   2bd28:	ldr	x0, [x0, #8]
   2bd2c:	mov	x1, x0
   2bd30:	mov	x0, x2
   2bd34:	bl	226a0 <__sanitizer_set_report_fd@@Base+0x84f4>
   2bd38:	and	w0, w0, #0xff
   2bd3c:	and	x0, x0, #0xff
   2bd40:	str	x0, [sp, #40]
   2bd44:	str	xzr, [sp, #32]
   2bd48:	ldr	x1, [sp, #40]
   2bd4c:	ldr	x0, [sp, #32]
   2bd50:	cmp	x1, x0
   2bd54:	cset	w0, eq  // eq = none
   2bd58:	and	w0, w0, #0xff
   2bd5c:	and	x0, x0, #0xff
   2bd60:	cmp	x0, #0x0
   2bd64:	b.eq	2bd88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b00>  // b.none
   2bd68:	ldr	x4, [sp, #32]
   2bd6c:	ldr	x3, [sp, #40]
   2bd70:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2bd74:	add	x2, x0, #0x1b0
   2bd78:	mov	w1, #0x152                 	// #338
   2bd7c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2bd80:	add	x0, x0, #0xf98
   2bd84:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2bd88:	nop
   2bd8c:	ldr	x30, [sp], #48
   2bd90:	ret
   2bd94:	str	x30, [sp, #-32]!
   2bd98:	str	x0, [sp, #24]
   2bd9c:	ldr	x0, [sp, #24]
   2bda0:	ldr	x0, [x0, #16]
   2bda4:	mov	x2, x0
   2bda8:	ldr	x0, [sp, #24]
   2bdac:	ldr	x1, [x0]
   2bdb0:	ldr	x0, [sp, #24]
   2bdb4:	ldr	x0, [x0, #8]
   2bdb8:	add	x0, x1, x0
   2bdbc:	mov	x1, x0
   2bdc0:	mov	x0, x2
   2bdc4:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   2bdc8:	nop
   2bdcc:	ldr	x30, [sp], #32
   2bdd0:	ret
   2bdd4:	sub	sp, sp, #0x10
   2bdd8:	str	x0, [sp, #8]
   2bddc:	ldr	x0, [sp, #8]
   2bde0:	ldr	x1, [x0, #16]
   2bde4:	ldr	x0, [sp, #8]
   2bde8:	ldr	x0, [x0]
   2bdec:	add	x1, x1, x0
   2bdf0:	ldr	x0, [sp, #8]
   2bdf4:	ldr	x0, [x0, #8]
   2bdf8:	add	x0, x1, x0
   2bdfc:	add	sp, sp, #0x10
   2be00:	ret
   2be04:	str	x30, [sp, #-32]!
   2be08:	str	x0, [sp, #24]
   2be0c:	mov	x4, #0x0                   	// #0
   2be10:	mov	x3, #0x0                   	// #0
   2be14:	mov	x2, #0x0                   	// #0
   2be18:	mov	x1, #0x0                   	// #0
   2be1c:	mov	w0, #0x3                   	// #3
   2be20:	bl	1f034 <__sanitizer_set_report_fd@@Base+0x4e88>
   2be24:	mov	w1, w0
   2be28:	ldr	x0, [sp, #24]
   2be2c:	str	w1, [x0]
   2be30:	ldr	x0, [sp, #24]
   2be34:	ldr	w0, [x0]
   2be38:	cmp	w0, #0x0
   2be3c:	b.ne	2be58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bd0>  // b.any
   2be40:	mov	x4, #0x0                   	// #0
   2be44:	mov	x3, #0x0                   	// #0
   2be48:	mov	x2, #0x0                   	// #0
   2be4c:	mov	x1, #0x1                   	// #1
   2be50:	mov	w0, #0x4                   	// #4
   2be54:	bl	1f034 <__sanitizer_set_report_fd@@Base+0x4e88>
   2be58:	nop
   2be5c:	ldr	x30, [sp], #32
   2be60:	ret
   2be64:	str	x30, [sp, #-32]!
   2be68:	str	x0, [sp, #24]
   2be6c:	ldr	x0, [sp, #24]
   2be70:	ldr	w0, [x0]
   2be74:	cmp	w0, #0x0
   2be78:	b.ne	2be94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c0c>  // b.any
   2be7c:	mov	x4, #0x0                   	// #0
   2be80:	mov	x3, #0x0                   	// #0
   2be84:	mov	x2, #0x0                   	// #0
   2be88:	mov	x1, #0x0                   	// #0
   2be8c:	mov	w0, #0x4                   	// #4
   2be90:	bl	1f034 <__sanitizer_set_report_fd@@Base+0x4e88>
   2be94:	nop
   2be98:	ldr	x30, [sp], #32
   2be9c:	ret
   2bea0:	str	x30, [sp, #-32]!
   2bea4:	str	x0, [sp, #24]
   2bea8:	str	x1, [sp, #16]
   2beac:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   2beb0:	ldr	x0, [x0, #3848]
   2beb4:	ldr	x1, [sp, #16]
   2beb8:	str	x1, [x0]
   2bebc:	bl	1ef9c <__sanitizer_set_report_fd@@Base+0x4df0>
   2bec0:	mov	x1, x0
   2bec4:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   2bec8:	ldr	x0, [x0, #3840]
   2becc:	str	x1, [x0]
   2bed0:	nop
   2bed4:	ldr	x30, [sp], #32
   2bed8:	ret
   2bedc:	sub	sp, sp, #0x10
   2bee0:	str	x0, [sp, #8]
   2bee4:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   2bee8:	ldr	x0, [x0, #3848]
   2beec:	str	xzr, [x0]
   2bef0:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   2bef4:	ldr	x0, [x0, #3840]
   2bef8:	str	xzr, [x0]
   2befc:	nop
   2bf00:	add	sp, sp, #0x10
   2bf04:	ret
   2bf08:	str	x30, [sp, #-32]!
   2bf0c:	str	x0, [sp, #24]
   2bf10:	ldr	x0, [sp, #24]
   2bf14:	add	x0, x0, #0x10
   2bf18:	bl	1ecfc <__sanitizer_set_report_fd@@Base+0x4b50>
   2bf1c:	nop
   2bf20:	ldr	x30, [sp], #32
   2bf24:	ret
   2bf28:	str	x30, [sp, #-32]!
   2bf2c:	str	x0, [sp, #24]
   2bf30:	ldr	x0, [sp, #24]
   2bf34:	mov	x1, #0x1                   	// #1
   2bf38:	bl	2c06c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2de4>
   2bf3c:	nop
   2bf40:	ldr	x30, [sp], #32
   2bf44:	ret
   2bf48:	str	x30, [sp, #-32]!
   2bf4c:	str	x0, [sp, #24]
   2bf50:	ldr	x0, [sp, #24]
   2bf54:	bl	2c0a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e20>
   2bf58:	nop
   2bf5c:	ldr	x30, [sp], #32
   2bf60:	ret
   2bf64:	str	x30, [sp, #-32]!
   2bf68:	str	x0, [sp, #24]
   2bf6c:	str	x1, [sp, #16]
   2bf70:	ldr	x0, [sp, #24]
   2bf74:	bl	20968 <__sanitizer_set_report_fd@@Base+0x67bc>
   2bf78:	mov	x1, x0
   2bf7c:	ldr	x0, [sp, #16]
   2bf80:	cmp	x0, x1
   2bf84:	cset	w0, hi  // hi = pmore
   2bf88:	and	w0, w0, #0xff
   2bf8c:	cmp	w0, #0x0
   2bf90:	b.eq	2bfa0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d18>  // b.none
   2bf94:	ldr	x1, [sp, #16]
   2bf98:	ldr	x0, [sp, #24]
   2bf9c:	bl	20984 <__sanitizer_set_report_fd@@Base+0x67d8>
   2bfa0:	nop
   2bfa4:	ldr	x30, [sp], #32
   2bfa8:	ret
   2bfac:	str	x30, [sp, #-32]!
   2bfb0:	str	x0, [sp, #24]
   2bfb4:	ldr	x0, [sp, #24]
   2bfb8:	bl	2c0d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e50>
   2bfbc:	ldr	x30, [sp], #32
   2bfc0:	ret
   2bfc4:	stp	x19, x30, [sp, #-32]!
   2bfc8:	str	x0, [sp, #24]
   2bfcc:	ldr	x0, [sp, #24]
   2bfd0:	bl	2c0d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e50>
   2bfd4:	mov	x19, x0
   2bfd8:	ldr	x0, [sp, #24]
   2bfdc:	bl	20ac4 <__sanitizer_set_report_fd@@Base+0x6918>
   2bfe0:	lsl	x0, x0, #3
   2bfe4:	add	x0, x19, x0
   2bfe8:	ldp	x19, x30, [sp], #32
   2bfec:	ret
   2bff0:	str	x30, [sp, #-48]!
   2bff4:	str	x0, [sp, #24]
   2bff8:	str	x1, [sp, #16]
   2bffc:	ldr	x0, [sp, #16]
   2c000:	str	x0, [sp, #40]
   2c004:	ldr	x0, [sp, #24]
   2c008:	ldr	x0, [x0, #16]
   2c00c:	str	x0, [sp, #32]
   2c010:	ldr	x1, [sp, #40]
   2c014:	ldr	x0, [sp, #32]
   2c018:	cmp	x1, x0
   2c01c:	cset	w0, cs  // cs = hs, nlast
   2c020:	and	w0, w0, #0xff
   2c024:	and	x0, x0, #0xff
   2c028:	cmp	x0, #0x0
   2c02c:	b.eq	2c050 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dc8>  // b.none
   2c030:	ldr	x4, [sp, #32]
   2c034:	ldr	x3, [sp, #40]
   2c038:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2c03c:	add	x2, x0, #0x2c8
   2c040:	mov	w1, #0x1ba                 	// #442
   2c044:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x8970>
   2c048:	add	x0, x0, #0xe20
   2c04c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2c050:	ldr	x0, [sp, #24]
   2c054:	ldr	x1, [x0]
   2c058:	ldr	x0, [sp, #16]
   2c05c:	lsl	x0, x0, #3
   2c060:	add	x0, x1, x0
   2c064:	ldr	x30, [sp], #48
   2c068:	ret
   2c06c:	str	x30, [sp, #-32]!
   2c070:	str	x0, [sp, #24]
   2c074:	str	x1, [sp, #16]
   2c078:	ldr	x0, [sp, #24]
   2c07c:	str	xzr, [x0, #8]
   2c080:	ldr	x0, [sp, #24]
   2c084:	str	xzr, [x0, #16]
   2c088:	ldr	x0, [sp, #24]
   2c08c:	str	xzr, [x0]
   2c090:	ldr	x1, [sp, #16]
   2c094:	ldr	x0, [sp, #24]
   2c098:	bl	2bf64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cdc>
   2c09c:	nop
   2c0a0:	ldr	x30, [sp], #32
   2c0a4:	ret
   2c0a8:	str	x30, [sp, #-32]!
   2c0ac:	str	x0, [sp, #24]
   2c0b0:	ldr	x0, [sp, #24]
   2c0b4:	ldr	x2, [x0]
   2c0b8:	ldr	x0, [sp, #24]
   2c0bc:	ldr	x0, [x0, #8]
   2c0c0:	mov	x1, x0
   2c0c4:	mov	x0, x2
   2c0c8:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   2c0cc:	nop
   2c0d0:	ldr	x30, [sp], #32
   2c0d4:	ret
   2c0d8:	sub	sp, sp, #0x10
   2c0dc:	str	x0, [sp, #8]
   2c0e0:	ldr	x0, [sp, #8]
   2c0e4:	ldr	x0, [x0]
   2c0e8:	add	sp, sp, #0x10
   2c0ec:	ret
   2c0f0:	str	x30, [sp, #-64]!
   2c0f4:	str	x0, [sp, #40]
   2c0f8:	str	x1, [sp, #32]
   2c0fc:	str	w2, [sp, #28]
   2c100:	ldr	x0, [sp, #40]
   2c104:	ldr	x1, [sp, #32]
   2c108:	str	x1, [x0]
   2c10c:	ldr	x0, [sp, #40]
   2c110:	ldr	w1, [sp, #28]
   2c114:	str	w1, [x0, #8]
   2c118:	ldr	x0, [sp, #40]
   2c11c:	add	x0, x0, #0x10
   2c120:	bl	2ca58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37d0>
   2c124:	ldr	x0, [sp, #40]
   2c128:	mov	w1, #0x1                   	// #1
   2c12c:	strb	w1, [x0, #72]
   2c130:	ldr	x0, [sp, #40]
   2c134:	ldr	w0, [x0, #8]
   2c138:	sxtw	x0, w0
   2c13c:	str	x0, [sp, #56]
   2c140:	mov	x0, #0x20                  	// #32
   2c144:	str	x0, [sp, #48]
   2c148:	ldr	x1, [sp, #56]
   2c14c:	ldr	x0, [sp, #48]
   2c150:	cmp	x1, x0
   2c154:	cset	w0, hi  // hi = pmore
   2c158:	and	w0, w0, #0xff
   2c15c:	and	x0, x0, #0xff
   2c160:	cmp	x0, #0x0
   2c164:	b.eq	2c188 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f00>  // b.none
   2c168:	ldr	x4, [sp, #48]
   2c16c:	ldr	x3, [sp, #56]
   2c170:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2c174:	add	x2, x0, #0x4d0
   2c178:	mov	w1, #0x1c                  	// #28
   2c17c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2c180:	add	x0, x0, #0x508
   2c184:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2c188:	ldr	x0, [sp, #40]
   2c18c:	add	x3, x0, #0x28
   2c190:	ldr	x0, [sp, #40]
   2c194:	ldr	w0, [x0, #8]
   2c198:	sxtw	x0, w0
   2c19c:	mov	x2, x0
   2c1a0:	mov	w1, #0x0                   	// #0
   2c1a4:	mov	x0, x3
   2c1a8:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   2c1ac:	nop
   2c1b0:	ldr	x30, [sp], #64
   2c1b4:	ret
   2c1b8:	stp	x19, x30, [sp, #-96]!
   2c1bc:	str	x0, [sp, #40]
   2c1c0:	str	x1, [sp, #32]
   2c1c4:	str	x2, [sp, #24]
   2c1c8:	add	x0, sp, #0x30
   2c1cc:	mov	x1, #0x1000                	// #4096
   2c1d0:	bl	89fc <__asan_backtrace_open@plt+0x1d8c>
   2c1d4:	add	x0, sp, #0x30
   2c1d8:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   2c1dc:	mov	x19, x0
   2c1e0:	add	x0, sp, #0x30
   2c1e4:	bl	1a278 <__sanitizer_set_report_fd@@Base+0xcc>
   2c1e8:	mov	x1, x0
   2c1ec:	mov	x0, x19
   2c1f0:	bl	14678 <__sancov_default_options@@Base+0x42cc>
   2c1f4:	cmp	x0, #0x0
   2c1f8:	cset	w0, ne  // ne = any
   2c1fc:	and	w0, w0, #0xff
   2c200:	cmp	w0, #0x0
   2c204:	b.eq	2c290 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3008>  // b.none
   2c208:	add	x0, sp, #0x30
   2c20c:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   2c210:	bl	13dec <__sancov_default_options@@Base+0x3a40>
   2c214:	str	x0, [sp, #88]
   2c218:	add	x0, sp, #0x30
   2c21c:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   2c220:	mov	x1, x0
   2c224:	ldr	x0, [sp, #88]
   2c228:	sub	x0, x0, x1
   2c22c:	str	x0, [sp, #80]
   2c230:	add	x0, sp, #0x30
   2c234:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   2c238:	mov	x19, x0
   2c23c:	ldr	x0, [sp, #24]
   2c240:	sub	x0, x0, #0x1
   2c244:	mov	x1, x0
   2c248:	ldr	x0, [sp, #80]
   2c24c:	bl	9374 <__asan_backtrace_open@plt+0x2704>
   2c250:	mov	x2, x0
   2c254:	mov	x1, x19
   2c258:	ldr	x0, [sp, #32]
   2c25c:	bl	1ce3c <__sanitizer_set_report_fd@@Base+0x2c90>
   2c260:	ldr	x0, [sp, #32]
   2c264:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   2c268:	mov	x1, x0
   2c26c:	ldr	x0, [sp, #24]
   2c270:	sub	x0, x0, x1
   2c274:	sub	x0, x0, #0x1
   2c278:	mov	x2, x0
   2c27c:	ldr	x1, [sp, #40]
   2c280:	ldr	x0, [sp, #32]
   2c284:	bl	1ce3c <__sanitizer_set_report_fd@@Base+0x2c90>
   2c288:	mov	w19, #0x1                   	// #1
   2c28c:	b	2c294 <__sanitizer_get_module_and_offset_for_pc@@Base+0x300c>
   2c290:	mov	w19, #0x0                   	// #0
   2c294:	add	x0, sp, #0x30
   2c298:	bl	9274 <__asan_backtrace_open@plt+0x2604>
   2c29c:	mov	w0, w19
   2c2a0:	ldp	x19, x30, [sp], #96
   2c2a4:	ret
   2c2a8:	stp	x19, x30, [sp, #-96]!
   2c2ac:	str	x0, [sp, #24]
   2c2b0:	str	x1, [sp, #16]
   2c2b4:	ldr	x0, [sp, #16]
   2c2b8:	ldrb	w0, [x0]
   2c2bc:	cmp	w0, #0x0
   2c2c0:	b.eq	2c40c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3184>  // b.none
   2c2c4:	add	x0, sp, #0x40
   2c2c8:	mov	x1, #0x1000                	// #4096
   2c2cc:	bl	89fc <__asan_backtrace_open@plt+0x1d8c>
   2c2d0:	ldr	x0, [sp, #16]
   2c2d4:	bl	1e720 <__sanitizer_set_report_fd@@Base+0x4574>
   2c2d8:	and	w0, w0, #0xff
   2c2dc:	eor	w0, w0, #0x1
   2c2e0:	and	w0, w0, #0xff
   2c2e4:	cmp	w0, #0x0
   2c2e8:	b.eq	2c340 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30b8>  // b.none
   2c2ec:	ldr	x0, [sp, #16]
   2c2f0:	bl	22e34 <__sanitizer_set_report_fd@@Base+0x8c88>
   2c2f4:	and	w0, w0, #0xff
   2c2f8:	eor	w0, w0, #0x1
   2c2fc:	and	w0, w0, #0xff
   2c300:	cmp	w0, #0x0
   2c304:	b.eq	2c340 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30b8>  // b.none
   2c308:	add	x0, sp, #0x40
   2c30c:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   2c310:	mov	x19, x0
   2c314:	add	x0, sp, #0x40
   2c318:	bl	1a278 <__sanitizer_set_report_fd@@Base+0xcc>
   2c31c:	mov	x2, x0
   2c320:	mov	x1, x19
   2c324:	ldr	x0, [sp, #16]
   2c328:	bl	2c1b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f30>
   2c32c:	and	w0, w0, #0xff
   2c330:	cmp	w0, #0x0
   2c334:	b.eq	2c340 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30b8>  // b.none
   2c338:	mov	w0, #0x1                   	// #1
   2c33c:	b	2c344 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30bc>
   2c340:	mov	w0, #0x0                   	// #0
   2c344:	cmp	w0, #0x0
   2c348:	b.eq	2c358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30d0>  // b.none
   2c34c:	add	x0, sp, #0x40
   2c350:	bl	93d4 <__asan_backtrace_open@plt+0x2764>
   2c354:	str	x0, [sp, #16]
   2c358:	bl	9984 <__ubsan_default_options@@Base+0x320>
   2c35c:	cmp	w0, #0x0
   2c360:	cset	w0, ne  // ne = any
   2c364:	and	w0, w0, #0xff
   2c368:	cmp	w0, #0x0
   2c36c:	b.eq	2c390 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3108>  // b.none
   2c370:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   2c374:	ldr	x0, [x0, #4024]
   2c378:	ldr	x0, [x0]
   2c37c:	ldr	x2, [sp, #16]
   2c380:	mov	x1, x0
   2c384:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2c388:	add	x0, x0, #0x550
   2c38c:	bl	259c8 <OnPrint@@Base+0x3a8>
   2c390:	add	x2, sp, #0x28
   2c394:	add	x1, sp, #0x30
   2c398:	add	x0, sp, #0x38
   2c39c:	mov	x5, #0x0                   	// #0
   2c3a0:	mov	x4, #0x4000000             	// #67108864
   2c3a4:	mov	x3, x2
   2c3a8:	mov	x2, x1
   2c3ac:	mov	x1, x0
   2c3b0:	ldr	x0, [sp, #16]
   2c3b4:	bl	19bf0 <__sanitizer_cov_pcs_init@@Base+0x412c>
   2c3b8:	and	w0, w0, #0xff
   2c3bc:	eor	w0, w0, #0x1
   2c3c0:	and	w0, w0, #0xff
   2c3c4:	cmp	w0, #0x0
   2c3c8:	b.eq	2c3f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3168>  // b.none
   2c3cc:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   2c3d0:	ldr	x0, [x0, #4024]
   2c3d4:	ldr	x0, [x0]
   2c3d8:	ldr	x2, [sp, #16]
   2c3dc:	mov	x1, x0
   2c3e0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2c3e4:	add	x0, x0, #0x578
   2c3e8:	bl	259c8 <OnPrint@@Base+0x3a8>
   2c3ec:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2c3f0:	ldr	x0, [sp, #56]
   2c3f4:	mov	x1, x0
   2c3f8:	ldr	x0, [sp, #24]
   2c3fc:	bl	2c584 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32fc>
   2c400:	add	x0, sp, #0x40
   2c404:	bl	9274 <__asan_backtrace_open@plt+0x2604>
   2c408:	b	2c410 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3188>
   2c40c:	nop
   2c410:	ldp	x19, x30, [sp], #96
   2c414:	ret
   2c418:	str	x30, [sp, #-64]!
   2c41c:	str	x0, [sp, #40]
   2c420:	str	x1, [sp, #32]
   2c424:	str	x2, [sp, #24]
   2c428:	str	x3, [sp, #16]
   2c42c:	ldr	x0, [sp, #40]
   2c430:	strb	wzr, [x0, #72]
   2c434:	ldr	x1, [sp, #24]
   2c438:	ldr	x0, [sp, #40]
   2c43c:	bl	2c884 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35fc>
   2c440:	and	w0, w0, #0xff
   2c444:	eor	w0, w0, #0x1
   2c448:	and	w0, w0, #0xff
   2c44c:	cmp	w0, #0x0
   2c450:	b.eq	2c45c <__sanitizer_get_module_and_offset_for_pc@@Base+0x31d4>  // b.none
   2c454:	mov	w0, #0x0                   	// #0
   2c458:	b	2c50c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3284>
   2c45c:	str	xzr, [sp, #56]
   2c460:	ldr	x0, [sp, #40]
   2c464:	add	x0, x0, #0x10
   2c468:	bl	2ca78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37f0>
   2c46c:	mov	x1, x0
   2c470:	ldr	x0, [sp, #56]
   2c474:	cmp	x0, x1
   2c478:	cset	w0, cc  // cc = lo, ul, last
   2c47c:	and	w0, w0, #0xff
   2c480:	cmp	w0, #0x0
   2c484:	b.eq	2c508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3280>  // b.none
   2c488:	ldr	x0, [sp, #40]
   2c48c:	add	x0, x0, #0x10
   2c490:	ldr	x1, [sp, #56]
   2c494:	bl	2ca90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3808>
   2c498:	str	x0, [sp, #48]
   2c49c:	ldr	x0, [sp, #48]
   2c4a0:	ldr	x0, [x0]
   2c4a4:	ldr	x1, [sp, #24]
   2c4a8:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   2c4ac:	cmp	w0, #0x0
   2c4b0:	b.ne	2c4d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3250>  // b.any
   2c4b4:	ldr	x0, [sp, #48]
   2c4b8:	ldr	x0, [x0, #8]
   2c4bc:	ldr	x1, [sp, #32]
   2c4c0:	bl	14378 <__sancov_default_options@@Base+0x3fcc>
   2c4c4:	and	w0, w0, #0xff
   2c4c8:	cmp	w0, #0x0
   2c4cc:	b.eq	2c4d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3250>  // b.none
   2c4d0:	mov	w0, #0x1                   	// #1
   2c4d4:	b	2c4dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3254>
   2c4d8:	mov	w0, #0x0                   	// #0
   2c4dc:	cmp	w0, #0x0
   2c4e0:	b.eq	2c4f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3270>  // b.none
   2c4e4:	ldr	x0, [sp, #16]
   2c4e8:	ldr	x1, [sp, #48]
   2c4ec:	str	x1, [x0]
   2c4f0:	mov	w0, #0x1                   	// #1
   2c4f4:	b	2c50c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3284>
   2c4f8:	ldr	x0, [sp, #56]
   2c4fc:	add	x0, x0, #0x1
   2c500:	str	x0, [sp, #56]
   2c504:	b	2c460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31d8>
   2c508:	mov	w0, #0x0                   	// #0
   2c50c:	ldr	x30, [sp], #64
   2c510:	ret
   2c514:	sub	sp, sp, #0x10
   2c518:	str	x0, [sp, #8]
   2c51c:	str	x1, [sp]
   2c520:	ldr	x0, [sp, #8]
   2c524:	cmp	x0, #0x0
   2c528:	b.eq	2c560 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32d8>  // b.none
   2c52c:	ldr	x0, [sp, #8]
   2c530:	ldrb	w1, [x0]
   2c534:	ldr	x0, [sp]
   2c538:	ldrb	w0, [x0]
   2c53c:	cmp	w1, w0
   2c540:	b.ne	2c560 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32d8>  // b.any
   2c544:	ldr	x0, [sp, #8]
   2c548:	add	x0, x0, #0x1
   2c54c:	str	x0, [sp, #8]
   2c550:	ldr	x0, [sp]
   2c554:	add	x0, x0, #0x1
   2c558:	str	x0, [sp]
   2c55c:	b	2c520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3298>
   2c560:	ldr	x0, [sp]
   2c564:	ldrb	w0, [x0]
   2c568:	cmp	w0, #0x0
   2c56c:	b.ne	2c578 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32f0>  // b.any
   2c570:	ldr	x0, [sp, #8]
   2c574:	b	2c57c <__sanitizer_get_module_and_offset_for_pc@@Base+0x32f4>
   2c578:	mov	x0, #0x0                   	// #0
   2c57c:	add	sp, sp, #0x10
   2c580:	ret
   2c584:	str	x30, [sp, #-128]!
   2c588:	str	x0, [sp, #24]
   2c58c:	str	x1, [sp, #16]
   2c590:	ldr	x0, [sp, #24]
   2c594:	ldrb	w0, [x0, #72]
   2c598:	and	x0, x0, #0xff
   2c59c:	str	x0, [sp, #88]
   2c5a0:	str	xzr, [sp, #80]
   2c5a4:	ldr	x1, [sp, #88]
   2c5a8:	ldr	x0, [sp, #80]
   2c5ac:	cmp	x1, x0
   2c5b0:	cset	w0, eq  // eq = none
   2c5b4:	and	w0, w0, #0xff
   2c5b8:	and	x0, x0, #0xff
   2c5bc:	cmp	x0, #0x0
   2c5c0:	b.eq	2c5e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x335c>  // b.none
   2c5c4:	ldr	x4, [sp, #80]
   2c5c8:	ldr	x3, [sp, #88]
   2c5cc:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2c5d0:	add	x2, x0, #0x5a8
   2c5d4:	mov	w1, #0x6a                  	// #106
   2c5d8:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2c5dc:	add	x0, x0, #0x508
   2c5e0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2c5e4:	ldr	x0, [sp, #16]
   2c5e8:	str	x0, [sp, #120]
   2c5ec:	ldr	x0, [sp, #120]
   2c5f0:	cmp	x0, #0x0
   2c5f4:	b.eq	2c85c <__sanitizer_get_module_and_offset_for_pc@@Base+0x35d4>  // b.none
   2c5f8:	ldr	x0, [sp, #120]
   2c5fc:	ldrb	w0, [x0]
   2c600:	cmp	w0, #0x20
   2c604:	b.eq	2c618 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3390>  // b.none
   2c608:	ldr	x0, [sp, #120]
   2c60c:	ldrb	w0, [x0]
   2c610:	cmp	w0, #0x9
   2c614:	b.ne	2c628 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33a0>  // b.any
   2c618:	ldr	x0, [sp, #120]
   2c61c:	add	x0, x0, #0x1
   2c620:	str	x0, [sp, #120]
   2c624:	b	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3370>
   2c628:	mov	w1, #0xa                   	// #10
   2c62c:	ldr	x0, [sp, #120]
   2c630:	bl	1cbfc <__sanitizer_set_report_fd@@Base+0x2a50>
   2c634:	str	x0, [sp, #112]
   2c638:	ldr	x0, [sp, #112]
   2c63c:	cmp	x0, #0x0
   2c640:	b.ne	2c65c <__sanitizer_get_module_and_offset_for_pc@@Base+0x33d4>  // b.any
   2c644:	ldr	x0, [sp, #120]
   2c648:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   2c64c:	mov	x1, x0
   2c650:	ldr	x0, [sp, #120]
   2c654:	add	x0, x0, x1
   2c658:	str	x0, [sp, #112]
   2c65c:	ldr	x1, [sp, #120]
   2c660:	ldr	x0, [sp, #112]
   2c664:	cmp	x1, x0
   2c668:	b.eq	2c838 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35b0>  // b.none
   2c66c:	ldr	x0, [sp, #120]
   2c670:	ldrb	w0, [x0]
   2c674:	cmp	w0, #0x23
   2c678:	b.eq	2c838 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35b0>  // b.none
   2c67c:	ldr	x0, [sp, #112]
   2c680:	str	x0, [sp, #104]
   2c684:	ldr	x1, [sp, #120]
   2c688:	ldr	x0, [sp, #104]
   2c68c:	cmp	x1, x0
   2c690:	b.eq	2c6e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3458>  // b.none
   2c694:	ldr	x0, [sp, #104]
   2c698:	sub	x0, x0, #0x1
   2c69c:	ldrb	w0, [x0]
   2c6a0:	cmp	w0, #0x20
   2c6a4:	b.eq	2c6d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3448>  // b.none
   2c6a8:	ldr	x0, [sp, #104]
   2c6ac:	sub	x0, x0, #0x1
   2c6b0:	ldrb	w0, [x0]
   2c6b4:	cmp	w0, #0x9
   2c6b8:	b.eq	2c6d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3448>  // b.none
   2c6bc:	ldr	x0, [sp, #104]
   2c6c0:	sub	x0, x0, #0x1
   2c6c4:	ldrb	w0, [x0]
   2c6c8:	cmp	w0, #0xd
   2c6cc:	b.ne	2c6e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3458>  // b.any
   2c6d0:	ldr	x0, [sp, #104]
   2c6d4:	sub	x0, x0, #0x1
   2c6d8:	str	x0, [sp, #104]
   2c6dc:	b	2c684 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33fc>
   2c6e0:	str	wzr, [sp, #100]
   2c6e4:	ldr	x0, [sp, #24]
   2c6e8:	ldr	w0, [x0, #8]
   2c6ec:	ldr	w1, [sp, #100]
   2c6f0:	cmp	w1, w0
   2c6f4:	b.ge	2c764 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34dc>  // b.tcont
   2c6f8:	ldr	x0, [sp, #24]
   2c6fc:	ldr	x1, [x0]
   2c700:	ldrsw	x0, [sp, #100]
   2c704:	lsl	x0, x0, #3
   2c708:	add	x0, x1, x0
   2c70c:	ldr	x0, [x0]
   2c710:	mov	x1, x0
   2c714:	ldr	x0, [sp, #120]
   2c718:	bl	2c514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x328c>
   2c71c:	str	x0, [sp, #72]
   2c720:	ldr	x0, [sp, #72]
   2c724:	cmp	x0, #0x0
   2c728:	b.eq	2c754 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34cc>  // b.none
   2c72c:	ldr	x0, [sp, #72]
   2c730:	ldrb	w0, [x0]
   2c734:	cmp	w0, #0x3a
   2c738:	b.ne	2c754 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34cc>  // b.any
   2c73c:	ldr	x0, [sp, #72]
   2c740:	add	x0, x0, #0x1
   2c744:	str	x0, [sp, #72]
   2c748:	ldr	x0, [sp, #72]
   2c74c:	str	x0, [sp, #120]
   2c750:	b	2c764 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34dc>
   2c754:	ldr	w0, [sp, #100]
   2c758:	add	w0, w0, #0x1
   2c75c:	str	w0, [sp, #100]
   2c760:	b	2c6e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x345c>
   2c764:	ldr	x0, [sp, #24]
   2c768:	ldr	w0, [x0, #8]
   2c76c:	ldr	w1, [sp, #100]
   2c770:	cmp	w1, w0
   2c774:	b.ne	2c798 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3510>  // b.any
   2c778:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   2c77c:	ldr	x0, [x0, #4024]
   2c780:	ldr	x0, [x0]
   2c784:	mov	x1, x0
   2c788:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2c78c:	add	x0, x0, #0x5c0
   2c790:	bl	259c8 <OnPrint@@Base+0x3a8>
   2c794:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2c798:	add	x0, sp, #0x28
   2c79c:	bl	2ca34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37ac>
   2c7a0:	ldr	x0, [sp, #24]
   2c7a4:	ldr	x1, [x0]
   2c7a8:	ldrsw	x0, [sp, #100]
   2c7ac:	lsl	x0, x0, #3
   2c7b0:	add	x0, x1, x0
   2c7b4:	ldr	x0, [x0]
   2c7b8:	str	x0, [sp, #40]
   2c7bc:	ldr	x1, [sp, #104]
   2c7c0:	ldr	x0, [sp, #120]
   2c7c4:	sub	x0, x1, x0
   2c7c8:	add	x0, x0, #0x1
   2c7cc:	mov	x2, #0x0                   	// #0
   2c7d0:	mov	x1, #0x0                   	// #0
   2c7d4:	bl	107a8 <__sancov_default_options@@Base+0x3fc>
   2c7d8:	str	x0, [sp, #48]
   2c7dc:	ldr	x3, [sp, #48]
   2c7e0:	ldr	x1, [sp, #104]
   2c7e4:	ldr	x0, [sp, #120]
   2c7e8:	sub	x0, x1, x0
   2c7ec:	mov	x2, x0
   2c7f0:	ldr	x1, [sp, #120]
   2c7f4:	mov	x0, x3
   2c7f8:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   2c7fc:	ldr	x0, [sp, #48]
   2c800:	ldr	x2, [sp, #104]
   2c804:	ldr	x1, [sp, #120]
   2c808:	sub	x1, x2, x1
   2c80c:	add	x0, x0, x1
   2c810:	strb	wzr, [x0]
   2c814:	ldr	x0, [sp, #24]
   2c818:	add	x0, x0, #0x10
   2c81c:	add	x1, sp, #0x28
   2c820:	bl	2cb0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3884>
   2c824:	ldr	x1, [sp, #24]
   2c828:	ldrsw	x0, [sp, #100]
   2c82c:	add	x0, x1, x0
   2c830:	mov	w1, #0x1                   	// #1
   2c834:	strb	w1, [x0, #40]
   2c838:	ldr	x0, [sp, #112]
   2c83c:	ldrb	w0, [x0]
   2c840:	cmp	w0, #0x0
   2c844:	b.eq	2c858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35d0>  // b.none
   2c848:	ldr	x0, [sp, #112]
   2c84c:	add	x0, x0, #0x1
   2c850:	str	x0, [sp, #120]
   2c854:	b	2c5ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x3364>
   2c858:	nop
   2c85c:	nop
   2c860:	ldr	x30, [sp], #128
   2c864:	ret
   2c868:	str	x30, [sp, #-32]!
   2c86c:	str	x0, [sp, #24]
   2c870:	ldr	x0, [sp, #24]
   2c874:	add	x0, x0, #0x10
   2c878:	bl	2ca78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37f0>
   2c87c:	ldr	x30, [sp], #32
   2c880:	ret
   2c884:	str	x30, [sp, #-48]!
   2c888:	str	x0, [sp, #24]
   2c88c:	str	x1, [sp, #16]
   2c890:	str	wzr, [sp, #44]
   2c894:	ldr	x0, [sp, #24]
   2c898:	ldr	w0, [x0, #8]
   2c89c:	ldr	w1, [sp, #44]
   2c8a0:	cmp	w1, w0
   2c8a4:	b.ge	2c904 <__sanitizer_get_module_and_offset_for_pc@@Base+0x367c>  // b.tcont
   2c8a8:	ldr	x0, [sp, #24]
   2c8ac:	ldr	x1, [x0]
   2c8b0:	ldrsw	x0, [sp, #44]
   2c8b4:	lsl	x0, x0, #3
   2c8b8:	add	x0, x1, x0
   2c8bc:	ldr	x0, [x0]
   2c8c0:	mov	x1, x0
   2c8c4:	ldr	x0, [sp, #16]
   2c8c8:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   2c8cc:	cmp	w0, #0x0
   2c8d0:	cset	w0, eq  // eq = none
   2c8d4:	and	w0, w0, #0xff
   2c8d8:	cmp	w0, #0x0
   2c8dc:	b.eq	2c8f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x366c>  // b.none
   2c8e0:	ldr	x1, [sp, #24]
   2c8e4:	ldrsw	x0, [sp, #44]
   2c8e8:	add	x0, x1, x0
   2c8ec:	ldrb	w0, [x0, #40]
   2c8f0:	b	2c908 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3680>
   2c8f4:	ldr	w0, [sp, #44]
   2c8f8:	add	w0, w0, #0x1
   2c8fc:	str	w0, [sp, #44]
   2c900:	b	2c894 <__sanitizer_get_module_and_offset_for_pc@@Base+0x360c>
   2c904:	mov	w0, #0x0                   	// #0
   2c908:	ldr	x30, [sp], #48
   2c90c:	ret
   2c910:	str	x30, [sp, #-48]!
   2c914:	str	x0, [sp, #24]
   2c918:	str	x1, [sp, #16]
   2c91c:	ldr	x0, [sp, #16]
   2c920:	str	x0, [sp, #40]
   2c924:	ldr	x0, [sp, #24]
   2c928:	add	x0, x0, #0x10
   2c92c:	bl	2ca78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37f0>
   2c930:	str	x0, [sp, #32]
   2c934:	ldr	x1, [sp, #40]
   2c938:	ldr	x0, [sp, #32]
   2c93c:	cmp	x1, x0
   2c940:	cset	w0, cs  // cs = hs, nlast
   2c944:	and	w0, w0, #0xff
   2c948:	and	x0, x0, #0xff
   2c94c:	cmp	x0, #0x0
   2c950:	b.eq	2c974 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36ec>  // b.none
   2c954:	ldr	x4, [sp, #32]
   2c958:	ldr	x3, [sp, #40]
   2c95c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2c960:	add	x2, x0, #0x5e8
   2c964:	mov	w1, #0x9e                  	// #158
   2c968:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2c96c:	add	x0, x0, #0x508
   2c970:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2c974:	ldr	x0, [sp, #24]
   2c978:	add	x0, x0, #0x10
   2c97c:	ldr	x1, [sp, #16]
   2c980:	bl	2cbf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3968>
   2c984:	ldr	x30, [sp], #48
   2c988:	ret
   2c98c:	stp	x19, x30, [sp, #-48]!
   2c990:	str	x0, [sp, #24]
   2c994:	str	x1, [sp, #16]
   2c998:	str	xzr, [sp, #40]
   2c99c:	ldr	x0, [sp, #24]
   2c9a0:	add	x0, x0, #0x10
   2c9a4:	bl	2ca78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37f0>
   2c9a8:	mov	x1, x0
   2c9ac:	ldr	x0, [sp, #40]
   2c9b0:	cmp	x0, x1
   2c9b4:	cset	w0, cc  // cc = lo, ul, last
   2c9b8:	and	w0, w0, #0xff
   2c9bc:	cmp	w0, #0x0
   2c9c0:	b.eq	2ca28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37a0>  // b.none
   2c9c4:	ldr	x0, [sp, #24]
   2c9c8:	add	x0, x0, #0x10
   2c9cc:	ldr	x1, [sp, #40]
   2c9d0:	bl	2ca90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3808>
   2c9d4:	add	x0, x0, #0x10
   2c9d8:	bl	2cc6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x39e4>
   2c9dc:	cmp	w0, #0x0
   2c9e0:	cset	w0, ne  // ne = any
   2c9e4:	and	w0, w0, #0xff
   2c9e8:	cmp	w0, #0x0
   2c9ec:	b.eq	2ca18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3790>  // b.none
   2c9f0:	ldr	x19, [sp, #16]
   2c9f4:	ldr	x0, [sp, #24]
   2c9f8:	add	x0, x0, #0x10
   2c9fc:	ldr	x1, [sp, #40]
   2ca00:	bl	2ca90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3808>
   2ca04:	str	x0, [sp, #32]
   2ca08:	add	x0, sp, #0x20
   2ca0c:	mov	x1, x0
   2ca10:	mov	x0, x19
   2ca14:	bl	2cc88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a00>
   2ca18:	ldr	x0, [sp, #40]
   2ca1c:	add	x0, x0, #0x1
   2ca20:	str	x0, [sp, #40]
   2ca24:	b	2c99c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3714>
   2ca28:	nop
   2ca2c:	ldp	x19, x30, [sp], #48
   2ca30:	ret
   2ca34:	str	x30, [sp, #-32]!
   2ca38:	str	x0, [sp, #24]
   2ca3c:	mov	x2, #0x20                  	// #32
   2ca40:	mov	w1, #0x0                   	// #0
   2ca44:	ldr	x0, [sp, #24]
   2ca48:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   2ca4c:	nop
   2ca50:	ldr	x30, [sp], #32
   2ca54:	ret
   2ca58:	str	x30, [sp, #-32]!
   2ca5c:	str	x0, [sp, #24]
   2ca60:	ldr	x0, [sp, #24]
   2ca64:	mov	x1, #0x1                   	// #1
   2ca68:	bl	2cd6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ae4>
   2ca6c:	nop
   2ca70:	ldr	x30, [sp], #32
   2ca74:	ret
   2ca78:	sub	sp, sp, #0x10
   2ca7c:	str	x0, [sp, #8]
   2ca80:	ldr	x0, [sp, #8]
   2ca84:	ldr	x0, [x0, #16]
   2ca88:	add	sp, sp, #0x10
   2ca8c:	ret
   2ca90:	str	x30, [sp, #-48]!
   2ca94:	str	x0, [sp, #24]
   2ca98:	str	x1, [sp, #16]
   2ca9c:	ldr	x0, [sp, #16]
   2caa0:	str	x0, [sp, #40]
   2caa4:	ldr	x0, [sp, #24]
   2caa8:	ldr	x0, [x0, #16]
   2caac:	str	x0, [sp, #32]
   2cab0:	ldr	x1, [sp, #40]
   2cab4:	ldr	x0, [sp, #32]
   2cab8:	cmp	x1, x0
   2cabc:	cset	w0, cs  // cs = hs, nlast
   2cac0:	and	w0, w0, #0xff
   2cac4:	and	x0, x0, #0xff
   2cac8:	cmp	x0, #0x0
   2cacc:	b.eq	2caf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3868>  // b.none
   2cad0:	ldr	x4, [sp, #32]
   2cad4:	ldr	x3, [sp, #40]
   2cad8:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2cadc:	add	x2, x0, #0x610
   2cae0:	mov	w1, #0x1b6                 	// #438
   2cae4:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2cae8:	add	x0, x0, #0x3a8
   2caec:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2caf0:	ldr	x0, [sp, #24]
   2caf4:	ldr	x1, [x0]
   2caf8:	ldr	x0, [sp, #16]
   2cafc:	lsl	x0, x0, #5
   2cb00:	add	x0, x1, x0
   2cb04:	ldr	x30, [sp], #48
   2cb08:	ret
   2cb0c:	stp	x19, x30, [sp, #-64]!
   2cb10:	str	x0, [sp, #24]
   2cb14:	str	x1, [sp, #16]
   2cb18:	ldr	x0, [sp, #24]
   2cb1c:	ldr	x0, [x0, #16]
   2cb20:	str	x0, [sp, #56]
   2cb24:	ldr	x0, [sp, #24]
   2cb28:	bl	2cda8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b20>
   2cb2c:	str	x0, [sp, #48]
   2cb30:	ldr	x1, [sp, #56]
   2cb34:	ldr	x0, [sp, #48]
   2cb38:	cmp	x1, x0
   2cb3c:	cset	w0, hi  // hi = pmore
   2cb40:	and	w0, w0, #0xff
   2cb44:	and	x0, x0, #0xff
   2cb48:	cmp	x0, #0x0
   2cb4c:	b.eq	2cb70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38e8>  // b.none
   2cb50:	ldr	x4, [sp, #48]
   2cb54:	ldr	x3, [sp, #56]
   2cb58:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2cb5c:	add	x2, x0, #0x628
   2cb60:	mov	w1, #0x1be                 	// #446
   2cb64:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2cb68:	add	x0, x0, #0x3a8
   2cb6c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2cb70:	ldr	x0, [sp, #24]
   2cb74:	ldr	x19, [x0, #16]
   2cb78:	ldr	x0, [sp, #24]
   2cb7c:	bl	2cda8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b20>
   2cb80:	cmp	x19, x0
   2cb84:	cset	w0, eq  // eq = none
   2cb88:	and	w0, w0, #0xff
   2cb8c:	cmp	w0, #0x0
   2cb90:	b.eq	2cbb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x392c>  // b.none
   2cb94:	ldr	x0, [sp, #24]
   2cb98:	ldr	x0, [x0, #16]
   2cb9c:	add	x0, x0, #0x1
   2cba0:	bl	20578 <__sanitizer_set_report_fd@@Base+0x63cc>
   2cba4:	str	x0, [sp, #40]
   2cba8:	ldr	x1, [sp, #40]
   2cbac:	ldr	x0, [sp, #24]
   2cbb0:	bl	2cdc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b3c>
   2cbb4:	ldr	x0, [sp, #24]
   2cbb8:	ldr	x1, [x0]
   2cbbc:	ldr	x0, [sp, #24]
   2cbc0:	ldr	x0, [x0, #16]
   2cbc4:	add	x3, x0, #0x1
   2cbc8:	ldr	x2, [sp, #24]
   2cbcc:	str	x3, [x2, #16]
   2cbd0:	lsl	x0, x0, #5
   2cbd4:	add	x0, x1, x0
   2cbd8:	mov	x2, #0x20                  	// #32
   2cbdc:	ldr	x1, [sp, #16]
   2cbe0:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   2cbe4:	nop
   2cbe8:	ldp	x19, x30, [sp], #64
   2cbec:	ret
   2cbf0:	str	x30, [sp, #-48]!
   2cbf4:	str	x0, [sp, #24]
   2cbf8:	str	x1, [sp, #16]
   2cbfc:	ldr	x0, [sp, #16]
   2cc00:	str	x0, [sp, #40]
   2cc04:	ldr	x0, [sp, #24]
   2cc08:	ldr	x0, [x0, #16]
   2cc0c:	str	x0, [sp, #32]
   2cc10:	ldr	x1, [sp, #40]
   2cc14:	ldr	x0, [sp, #32]
   2cc18:	cmp	x1, x0
   2cc1c:	cset	w0, cs  // cs = hs, nlast
   2cc20:	and	w0, w0, #0xff
   2cc24:	and	x0, x0, #0xff
   2cc28:	cmp	x0, #0x0
   2cc2c:	b.eq	2cc50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x39c8>  // b.none
   2cc30:	ldr	x4, [sp, #32]
   2cc34:	ldr	x3, [sp, #40]
   2cc38:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2cc3c:	add	x2, x0, #0x610
   2cc40:	mov	w1, #0x1ba                 	// #442
   2cc44:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2cc48:	add	x0, x0, #0x3a8
   2cc4c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2cc50:	ldr	x0, [sp, #24]
   2cc54:	ldr	x1, [x0]
   2cc58:	ldr	x0, [sp, #16]
   2cc5c:	lsl	x0, x0, #5
   2cc60:	add	x0, x1, x0
   2cc64:	ldr	x30, [sp], #48
   2cc68:	ret
   2cc6c:	str	x30, [sp, #-32]!
   2cc70:	str	x0, [sp, #24]
   2cc74:	mov	w1, #0x1                   	// #1
   2cc78:	ldr	x0, [sp, #24]
   2cc7c:	bl	9b44 <__ubsan_default_options@@Base+0x4e0>
   2cc80:	ldr	x30, [sp], #32
   2cc84:	ret
   2cc88:	stp	x19, x30, [sp, #-64]!
   2cc8c:	str	x0, [sp, #24]
   2cc90:	str	x1, [sp, #16]
   2cc94:	ldr	x0, [sp, #24]
   2cc98:	ldr	x0, [x0, #16]
   2cc9c:	str	x0, [sp, #56]
   2cca0:	ldr	x0, [sp, #24]
   2cca4:	bl	2cf04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c7c>
   2cca8:	str	x0, [sp, #48]
   2ccac:	ldr	x1, [sp, #56]
   2ccb0:	ldr	x0, [sp, #48]
   2ccb4:	cmp	x1, x0
   2ccb8:	cset	w0, hi  // hi = pmore
   2ccbc:	and	w0, w0, #0xff
   2ccc0:	and	x0, x0, #0xff
   2ccc4:	cmp	x0, #0x0
   2ccc8:	b.eq	2ccec <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a64>  // b.none
   2cccc:	ldr	x4, [sp, #48]
   2ccd0:	ldr	x3, [sp, #56]
   2ccd4:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2ccd8:	add	x2, x0, #0x628
   2ccdc:	mov	w1, #0x1be                 	// #446
   2cce0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2cce4:	add	x0, x0, #0x3a8
   2cce8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2ccec:	ldr	x0, [sp, #24]
   2ccf0:	ldr	x19, [x0, #16]
   2ccf4:	ldr	x0, [sp, #24]
   2ccf8:	bl	2cf04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c7c>
   2ccfc:	cmp	x19, x0
   2cd00:	cset	w0, eq  // eq = none
   2cd04:	and	w0, w0, #0xff
   2cd08:	cmp	w0, #0x0
   2cd0c:	b.eq	2cd30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3aa8>  // b.none
   2cd10:	ldr	x0, [sp, #24]
   2cd14:	ldr	x0, [x0, #16]
   2cd18:	add	x0, x0, #0x1
   2cd1c:	bl	20578 <__sanitizer_set_report_fd@@Base+0x63cc>
   2cd20:	str	x0, [sp, #40]
   2cd24:	ldr	x1, [sp, #40]
   2cd28:	ldr	x0, [sp, #24]
   2cd2c:	bl	2cf20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c98>
   2cd30:	ldr	x0, [sp, #24]
   2cd34:	ldr	x1, [x0]
   2cd38:	ldr	x0, [sp, #24]
   2cd3c:	ldr	x0, [x0, #16]
   2cd40:	add	x3, x0, #0x1
   2cd44:	ldr	x2, [sp, #24]
   2cd48:	str	x3, [x2, #16]
   2cd4c:	lsl	x0, x0, #3
   2cd50:	add	x0, x1, x0
   2cd54:	mov	x2, #0x8                   	// #8
   2cd58:	ldr	x1, [sp, #16]
   2cd5c:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   2cd60:	nop
   2cd64:	ldp	x19, x30, [sp], #64
   2cd68:	ret
   2cd6c:	str	x30, [sp, #-32]!
   2cd70:	str	x0, [sp, #24]
   2cd74:	str	x1, [sp, #16]
   2cd78:	ldr	x0, [sp, #24]
   2cd7c:	str	xzr, [x0, #8]
   2cd80:	ldr	x0, [sp, #24]
   2cd84:	str	xzr, [x0, #16]
   2cd88:	ldr	x0, [sp, #24]
   2cd8c:	str	xzr, [x0]
   2cd90:	ldr	x1, [sp, #16]
   2cd94:	ldr	x0, [sp, #24]
   2cd98:	bl	2d060 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd8>
   2cd9c:	nop
   2cda0:	ldr	x30, [sp], #32
   2cda4:	ret
   2cda8:	sub	sp, sp, #0x10
   2cdac:	str	x0, [sp, #8]
   2cdb0:	ldr	x0, [sp, #8]
   2cdb4:	ldr	x0, [x0, #8]
   2cdb8:	lsr	x0, x0, #5
   2cdbc:	add	sp, sp, #0x10
   2cdc0:	ret
   2cdc4:	stp	x19, x30, [sp, #-80]!
   2cdc8:	str	x0, [sp, #24]
   2cdcc:	str	x1, [sp, #16]
   2cdd0:	ldr	x0, [sp, #16]
   2cdd4:	str	x0, [sp, #72]
   2cdd8:	str	xzr, [sp, #64]
   2cddc:	ldr	x1, [sp, #72]
   2cde0:	ldr	x0, [sp, #64]
   2cde4:	cmp	x1, x0
   2cde8:	cset	w0, ls  // ls = plast
   2cdec:	and	w0, w0, #0xff
   2cdf0:	and	x0, x0, #0xff
   2cdf4:	cmp	x0, #0x0
   2cdf8:	b.eq	2ce1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b94>  // b.none
   2cdfc:	ldr	x4, [sp, #64]
   2ce00:	ldr	x3, [sp, #72]
   2ce04:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2ce08:	add	x2, x0, #0x648
   2ce0c:	mov	w1, #0x1fc                 	// #508
   2ce10:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2ce14:	add	x0, x0, #0x3a8
   2ce18:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2ce1c:	ldr	x0, [sp, #24]
   2ce20:	ldr	x0, [x0, #16]
   2ce24:	str	x0, [sp, #56]
   2ce28:	ldr	x0, [sp, #16]
   2ce2c:	str	x0, [sp, #48]
   2ce30:	ldr	x1, [sp, #56]
   2ce34:	ldr	x0, [sp, #48]
   2ce38:	cmp	x1, x0
   2ce3c:	cset	w0, hi  // hi = pmore
   2ce40:	and	w0, w0, #0xff
   2ce44:	and	x0, x0, #0xff
   2ce48:	cmp	x0, #0x0
   2ce4c:	b.eq	2ce70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3be8>  // b.none
   2ce50:	ldr	x4, [sp, #48]
   2ce54:	ldr	x3, [sp, #56]
   2ce58:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2ce5c:	add	x2, x0, #0x668
   2ce60:	mov	w1, #0x1fd                 	// #509
   2ce64:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2ce68:	add	x0, x0, #0x3a8
   2ce6c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2ce70:	ldr	x0, [sp, #16]
   2ce74:	lsl	x19, x0, #5
   2ce78:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   2ce7c:	mov	x1, x0
   2ce80:	mov	x0, x19
   2ce84:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   2ce88:	str	x0, [sp, #40]
   2ce8c:	mov	w2, #0x0                   	// #0
   2ce90:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2ce94:	add	x1, x0, #0x688
   2ce98:	ldr	x0, [sp, #40]
   2ce9c:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   2cea0:	str	x0, [sp, #32]
   2cea4:	ldr	x0, [sp, #24]
   2cea8:	ldr	x1, [x0]
   2ceac:	ldr	x0, [sp, #24]
   2ceb0:	ldr	x0, [x0, #16]
   2ceb4:	lsl	x0, x0, #5
   2ceb8:	mov	x2, x0
   2cebc:	ldr	x0, [sp, #32]
   2cec0:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   2cec4:	ldr	x0, [sp, #24]
   2cec8:	ldr	x2, [x0]
   2cecc:	ldr	x0, [sp, #24]
   2ced0:	ldr	x0, [x0, #8]
   2ced4:	mov	x1, x0
   2ced8:	mov	x0, x2
   2cedc:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   2cee0:	ldr	x0, [sp, #24]
   2cee4:	ldr	x1, [sp, #32]
   2cee8:	str	x1, [x0]
   2ceec:	ldr	x0, [sp, #24]
   2cef0:	ldr	x1, [sp, #40]
   2cef4:	str	x1, [x0, #8]
   2cef8:	nop
   2cefc:	ldp	x19, x30, [sp], #80
   2cf00:	ret
   2cf04:	sub	sp, sp, #0x10
   2cf08:	str	x0, [sp, #8]
   2cf0c:	ldr	x0, [sp, #8]
   2cf10:	ldr	x0, [x0, #8]
   2cf14:	lsr	x0, x0, #3
   2cf18:	add	sp, sp, #0x10
   2cf1c:	ret
   2cf20:	stp	x19, x30, [sp, #-80]!
   2cf24:	str	x0, [sp, #24]
   2cf28:	str	x1, [sp, #16]
   2cf2c:	ldr	x0, [sp, #16]
   2cf30:	str	x0, [sp, #72]
   2cf34:	str	xzr, [sp, #64]
   2cf38:	ldr	x1, [sp, #72]
   2cf3c:	ldr	x0, [sp, #64]
   2cf40:	cmp	x1, x0
   2cf44:	cset	w0, ls  // ls = plast
   2cf48:	and	w0, w0, #0xff
   2cf4c:	and	x0, x0, #0xff
   2cf50:	cmp	x0, #0x0
   2cf54:	b.eq	2cf78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cf0>  // b.none
   2cf58:	ldr	x4, [sp, #64]
   2cf5c:	ldr	x3, [sp, #72]
   2cf60:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2cf64:	add	x2, x0, #0x648
   2cf68:	mov	w1, #0x1fc                 	// #508
   2cf6c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2cf70:	add	x0, x0, #0x3a8
   2cf74:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2cf78:	ldr	x0, [sp, #24]
   2cf7c:	ldr	x0, [x0, #16]
   2cf80:	str	x0, [sp, #56]
   2cf84:	ldr	x0, [sp, #16]
   2cf88:	str	x0, [sp, #48]
   2cf8c:	ldr	x1, [sp, #56]
   2cf90:	ldr	x0, [sp, #48]
   2cf94:	cmp	x1, x0
   2cf98:	cset	w0, hi  // hi = pmore
   2cf9c:	and	w0, w0, #0xff
   2cfa0:	and	x0, x0, #0xff
   2cfa4:	cmp	x0, #0x0
   2cfa8:	b.eq	2cfcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d44>  // b.none
   2cfac:	ldr	x4, [sp, #48]
   2cfb0:	ldr	x3, [sp, #56]
   2cfb4:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2cfb8:	add	x2, x0, #0x668
   2cfbc:	mov	w1, #0x1fd                 	// #509
   2cfc0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2cfc4:	add	x0, x0, #0x3a8
   2cfc8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2cfcc:	ldr	x0, [sp, #16]
   2cfd0:	lsl	x19, x0, #3
   2cfd4:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   2cfd8:	mov	x1, x0
   2cfdc:	mov	x0, x19
   2cfe0:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   2cfe4:	str	x0, [sp, #40]
   2cfe8:	mov	w2, #0x0                   	// #0
   2cfec:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2cff0:	add	x1, x0, #0x688
   2cff4:	ldr	x0, [sp, #40]
   2cff8:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   2cffc:	str	x0, [sp, #32]
   2d000:	ldr	x0, [sp, #24]
   2d004:	ldr	x1, [x0]
   2d008:	ldr	x0, [sp, #24]
   2d00c:	ldr	x0, [x0, #16]
   2d010:	lsl	x0, x0, #3
   2d014:	mov	x2, x0
   2d018:	ldr	x0, [sp, #32]
   2d01c:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   2d020:	ldr	x0, [sp, #24]
   2d024:	ldr	x2, [x0]
   2d028:	ldr	x0, [sp, #24]
   2d02c:	ldr	x0, [x0, #8]
   2d030:	mov	x1, x0
   2d034:	mov	x0, x2
   2d038:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   2d03c:	ldr	x0, [sp, #24]
   2d040:	ldr	x1, [sp, #32]
   2d044:	str	x1, [x0]
   2d048:	ldr	x0, [sp, #24]
   2d04c:	ldr	x1, [sp, #40]
   2d050:	str	x1, [x0, #8]
   2d054:	nop
   2d058:	ldp	x19, x30, [sp], #80
   2d05c:	ret
   2d060:	str	x30, [sp, #-32]!
   2d064:	str	x0, [sp, #24]
   2d068:	str	x1, [sp, #16]
   2d06c:	ldr	x0, [sp, #24]
   2d070:	bl	2cda8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b20>
   2d074:	mov	x1, x0
   2d078:	ldr	x0, [sp, #16]
   2d07c:	cmp	x0, x1
   2d080:	cset	w0, hi  // hi = pmore
   2d084:	and	w0, w0, #0xff
   2d088:	cmp	w0, #0x0
   2d08c:	b.eq	2d09c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e14>  // b.none
   2d090:	ldr	x1, [sp, #16]
   2d094:	ldr	x0, [sp, #24]
   2d098:	bl	2cdc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b3c>
   2d09c:	nop
   2d0a0:	ldr	x30, [sp], #32
   2d0a4:	ret
   2d0a8:	str	x30, [sp, #-32]!
   2d0ac:	str	x0, [sp, #24]
   2d0b0:	mov	x2, #0x40                  	// #64
   2d0b4:	mov	w1, #0x0                   	// #0
   2d0b8:	ldr	x0, [sp, #24]
   2d0bc:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   2d0c0:	ldr	x0, [sp, #24]
   2d0c4:	mov	x1, #0xffffffffffffffff    	// #-1
   2d0c8:	str	x1, [x0, #40]
   2d0cc:	nop
   2d0d0:	ldr	x30, [sp], #32
   2d0d4:	ret
   2d0d8:	str	x30, [sp, #-32]!
   2d0dc:	str	x0, [sp, #24]
   2d0e0:	ldr	x0, [sp, #24]
   2d0e4:	ldr	x0, [x0, #8]
   2d0e8:	mov	x1, #0x0                   	// #0
   2d0ec:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   2d0f0:	ldr	x0, [sp, #24]
   2d0f4:	ldr	x0, [x0, #32]
   2d0f8:	mov	x1, #0x0                   	// #0
   2d0fc:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   2d100:	ldr	x0, [sp, #24]
   2d104:	ldr	x0, [x0, #48]
   2d108:	mov	x1, #0x0                   	// #0
   2d10c:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   2d110:	mov	x2, #0x40                  	// #64
   2d114:	mov	w1, #0x0                   	// #0
   2d118:	ldr	x0, [sp, #24]
   2d11c:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   2d120:	ldr	x0, [sp, #24]
   2d124:	mov	x1, #0xffffffffffffffff    	// #-1
   2d128:	str	x1, [x0, #40]
   2d12c:	nop
   2d130:	ldr	x30, [sp], #32
   2d134:	ret
   2d138:	str	x30, [sp, #-48]!
   2d13c:	str	x0, [sp, #40]
   2d140:	str	x1, [sp, #32]
   2d144:	str	x2, [sp, #24]
   2d148:	str	w3, [sp, #20]
   2d14c:	ldr	x0, [sp, #32]
   2d150:	bl	1ca68 <__sanitizer_set_report_fd@@Base+0x28bc>
   2d154:	mov	x1, x0
   2d158:	ldr	x0, [sp, #40]
   2d15c:	str	x1, [x0, #8]
   2d160:	ldr	x0, [sp, #40]
   2d164:	ldr	x1, [sp, #24]
   2d168:	str	x1, [x0, #16]
   2d16c:	ldr	x0, [sp, #40]
   2d170:	ldr	w1, [sp, #20]
   2d174:	str	w1, [x0, #24]
   2d178:	nop
   2d17c:	ldr	x30, [sp], #48
   2d180:	ret
   2d184:	str	x30, [sp, #-32]!
   2d188:	str	x0, [sp, #24]
   2d18c:	ldr	x0, [sp, #24]
   2d190:	str	xzr, [x0]
   2d194:	ldr	x0, [sp, #24]
   2d198:	add	x0, x0, #0x8
   2d19c:	bl	2d0a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e20>
   2d1a0:	nop
   2d1a4:	ldr	x30, [sp], #32
   2d1a8:	ret
   2d1ac:	stp	x19, x30, [sp, #-48]!
   2d1b0:	str	x0, [sp, #24]
   2d1b4:	mov	x2, #0x0                   	// #0
   2d1b8:	mov	x1, #0x0                   	// #0
   2d1bc:	mov	x0, #0x48                  	// #72
   2d1c0:	bl	107a8 <__sancov_default_options@@Base+0x3fc>
   2d1c4:	str	x0, [sp, #40]
   2d1c8:	ldr	x0, [sp, #40]
   2d1cc:	mov	x1, x0
   2d1d0:	mov	x0, #0x48                  	// #72
   2d1d4:	bl	911c <__asan_backtrace_open@plt+0x24ac>
   2d1d8:	mov	x19, x0
   2d1dc:	mov	x0, x19
   2d1e0:	bl	2d184 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3efc>
   2d1e4:	str	x19, [sp, #32]
   2d1e8:	ldr	x0, [sp, #32]
   2d1ec:	ldr	x1, [sp, #24]
   2d1f0:	str	x1, [x0, #8]
   2d1f4:	ldr	x0, [sp, #32]
   2d1f8:	ldp	x19, x30, [sp], #48
   2d1fc:	ret
   2d200:	str	x30, [sp, #-32]!
   2d204:	str	x0, [sp, #24]
   2d208:	ldr	x0, [sp, #24]
   2d20c:	add	x0, x0, #0x8
   2d210:	bl	2d0d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e50>
   2d214:	ldr	x0, [sp, #24]
   2d218:	ldr	x0, [x0]
   2d21c:	cmp	x0, #0x0
   2d220:	b.eq	2d230 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fa8>  // b.none
   2d224:	ldr	x0, [sp, #24]
   2d228:	ldr	x0, [x0]
   2d22c:	bl	2d200 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f78>
   2d230:	mov	x1, #0x0                   	// #0
   2d234:	ldr	x0, [sp, #24]
   2d238:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   2d23c:	nop
   2d240:	ldr	x30, [sp], #32
   2d244:	ret
   2d248:	str	x30, [sp, #-32]!
   2d24c:	str	x0, [sp, #24]
   2d250:	mov	x2, #0x40                  	// #64
   2d254:	mov	w1, #0x0                   	// #0
   2d258:	ldr	x0, [sp, #24]
   2d25c:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   2d260:	nop
   2d264:	ldr	x30, [sp], #32
   2d268:	ret
   2d26c:	str	x30, [sp, #-32]!
   2d270:	str	x0, [sp, #24]
   2d274:	ldr	x0, [sp, #24]
   2d278:	ldr	x0, [x0]
   2d27c:	mov	x1, #0x0                   	// #0
   2d280:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   2d284:	ldr	x0, [sp, #24]
   2d288:	ldr	x0, [x0, #24]
   2d28c:	mov	x1, #0x0                   	// #0
   2d290:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   2d294:	ldr	x0, [sp, #24]
   2d298:	ldr	x0, [x0, #40]
   2d29c:	mov	x1, #0x0                   	// #0
   2d2a0:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   2d2a4:	mov	x2, #0x40                  	// #64
   2d2a8:	mov	w1, #0x0                   	// #0
   2d2ac:	ldr	x0, [sp, #24]
   2d2b0:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   2d2b4:	nop
   2d2b8:	ldr	x30, [sp], #32
   2d2bc:	ret
   2d2c0:	sub	sp, sp, #0x10
   2d2c4:	str	x0, [sp, #8]
   2d2c8:	ldr	x0, [sp, #8]
   2d2cc:	strb	wzr, [x0, #104]
   2d2d0:	nop
   2d2d4:	add	sp, sp, #0x10
   2d2d8:	ret
   2d2dc:	str	x30, [sp, #-64]!
   2d2e0:	str	x0, [sp, #40]
   2d2e4:	str	x1, [sp, #32]
   2d2e8:	str	x2, [sp, #24]
   2d2ec:	ldr	x0, [sp, #40]
   2d2f0:	ldr	x0, [x0, #224]
   2d2f4:	cmp	x0, #0x0
   2d2f8:	b.ne	2d314 <__sanitizer_get_module_and_offset_for_pc@@Base+0x408c>  // b.any
   2d2fc:	ldr	x0, [sp, #40]
   2d300:	ldr	x0, [x0, #232]
   2d304:	cmp	x0, #0x0
   2d308:	b.ne	2d314 <__sanitizer_get_module_and_offset_for_pc@@Base+0x408c>  // b.any
   2d30c:	mov	w0, #0x1                   	// #1
   2d310:	b	2d318 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4090>
   2d314:	mov	w0, #0x0                   	// #0
   2d318:	and	x0, x0, #0xff
   2d31c:	str	x0, [sp, #56]
   2d320:	str	xzr, [sp, #48]
   2d324:	ldr	x1, [sp, #56]
   2d328:	ldr	x0, [sp, #48]
   2d32c:	cmp	x1, x0
   2d330:	cset	w0, eq  // eq = none
   2d334:	and	w0, w0, #0xff
   2d338:	and	x0, x0, #0xff
   2d33c:	cmp	x0, #0x0
   2d340:	b.eq	2d364 <__sanitizer_get_module_and_offset_for_pc@@Base+0x40dc>  // b.none
   2d344:	ldr	x4, [sp, #48]
   2d348:	ldr	x3, [sp, #56]
   2d34c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2d350:	add	x2, x0, #0x818
   2d354:	mov	w1, #0x4e                  	// #78
   2d358:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2d35c:	add	x0, x0, #0x848
   2d360:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2d364:	ldr	x0, [sp, #40]
   2d368:	ldr	x1, [sp, #32]
   2d36c:	str	x1, [x0, #224]
   2d370:	ldr	x0, [sp, #40]
   2d374:	ldr	x1, [sp, #24]
   2d378:	str	x1, [x0, #232]
   2d37c:	nop
   2d380:	ldr	x30, [sp], #64
   2d384:	ret
   2d388:	str	x30, [sp, #-48]!
   2d38c:	str	x0, [sp, #24]
   2d390:	str	x1, [sp, #16]
   2d394:	ldr	x0, [sp, #24]
   2d398:	ldr	x0, [x0, #32]
   2d39c:	bl	1eea8 <__sanitizer_set_report_fd@@Base+0x4cfc>
   2d3a0:	ldr	x0, [sp, #24]
   2d3a4:	ldr	x0, [x0, #24]
   2d3a8:	cmp	x0, #0x0
   2d3ac:	b.eq	2d3d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4148>  // b.none
   2d3b0:	ldr	x0, [sp, #24]
   2d3b4:	ldr	x0, [x0, #24]
   2d3b8:	ldr	x1, [sp, #16]
   2d3bc:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   2d3c0:	cmp	w0, #0x0
   2d3c4:	b.ne	2d3d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4148>  // b.any
   2d3c8:	mov	w0, #0x1                   	// #1
   2d3cc:	b	2d3d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x414c>
   2d3d0:	mov	w0, #0x0                   	// #0
   2d3d4:	cmp	w0, #0x0
   2d3d8:	b.eq	2d3e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4160>  // b.none
   2d3dc:	ldr	x0, [sp, #24]
   2d3e0:	ldr	x0, [x0, #24]
   2d3e4:	b	2d4a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x421c>
   2d3e8:	str	xzr, [sp, #40]
   2d3ec:	ldr	x0, [sp, #24]
   2d3f0:	bl	2d660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43d8>
   2d3f4:	mov	x1, x0
   2d3f8:	ldr	x0, [sp, #40]
   2d3fc:	cmp	x0, x1
   2d400:	cset	w0, cc  // cc = lo, ul, last
   2d404:	and	w0, w0, #0xff
   2d408:	cmp	w0, #0x0
   2d40c:	b.eq	2d470 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41e8>  // b.none
   2d410:	ldr	x0, [sp, #24]
   2d414:	ldr	x1, [sp, #40]
   2d418:	bl	2d678 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43f0>
   2d41c:	ldr	x0, [x0]
   2d420:	ldr	x1, [sp, #16]
   2d424:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   2d428:	cmp	w0, #0x0
   2d42c:	cset	w0, eq  // eq = none
   2d430:	and	w0, w0, #0xff
   2d434:	cmp	w0, #0x0
   2d438:	b.eq	2d460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41d8>  // b.none
   2d43c:	ldr	x0, [sp, #24]
   2d440:	ldr	x1, [sp, #40]
   2d444:	bl	2d678 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43f0>
   2d448:	ldr	x1, [x0]
   2d44c:	ldr	x0, [sp, #24]
   2d450:	str	x1, [x0, #24]
   2d454:	ldr	x0, [sp, #24]
   2d458:	ldr	x0, [x0, #24]
   2d45c:	b	2d4a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x421c>
   2d460:	ldr	x0, [sp, #40]
   2d464:	add	x0, x0, #0x1
   2d468:	str	x0, [sp, #40]
   2d46c:	b	2d3ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x4164>
   2d470:	ldr	x0, [sp, #16]
   2d474:	bl	1ca68 <__sanitizer_set_report_fd@@Base+0x28bc>
   2d478:	mov	x1, x0
   2d47c:	ldr	x0, [sp, #24]
   2d480:	str	x1, [x0, #24]
   2d484:	ldr	x2, [sp, #24]
   2d488:	ldr	x0, [sp, #24]
   2d48c:	add	x0, x0, #0x18
   2d490:	mov	x1, x0
   2d494:	mov	x0, x2
   2d498:	bl	2d6f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x446c>
   2d49c:	ldr	x0, [sp, #24]
   2d4a0:	ldr	x0, [x0, #24]
   2d4a4:	ldr	x30, [sp], #48
   2d4a8:	ret
   2d4ac:	stp	x19, x30, [sp, #-32]!
   2d4b0:	str	x0, [sp, #24]
   2d4b4:	mov	x19, x1
   2d4b8:	ldr	x2, [sp, #24]
   2d4bc:	ldr	x0, [sp, #24]
   2d4c0:	add	x0, x0, #0x70
   2d4c4:	mov	x1, x0
   2d4c8:	mov	x0, x2
   2d4cc:	bl	2d5b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4330>
   2d4d0:	ldr	x0, [sp, #24]
   2d4d4:	add	x0, x0, #0x28
   2d4d8:	bl	1dde8 <__sanitizer_set_report_fd@@Base+0x3c3c>
   2d4dc:	ldr	x0, [sp, #24]
   2d4e0:	add	x0, x0, #0x48
   2d4e4:	bl	1dde8 <__sanitizer_set_report_fd@@Base+0x3c3c>
   2d4e8:	ldr	x0, [sp, #24]
   2d4ec:	strb	wzr, [x0, #104]
   2d4f0:	ldr	x0, [sp, #24]
   2d4f4:	add	x0, x0, #0x70
   2d4f8:	bl	1ecfc <__sanitizer_set_report_fd@@Base+0x4b50>
   2d4fc:	ldr	x0, [sp, #24]
   2d500:	add	x0, x0, #0xc8
   2d504:	mov	x2, x0
   2d508:	mov	x3, x19
   2d50c:	ldp	x0, x1, [x3]
   2d510:	stp	x0, x1, [x2]
   2d514:	ldr	x0, [x3, #16]
   2d518:	str	x0, [x2, #16]
   2d51c:	ldr	x0, [sp, #24]
   2d520:	str	xzr, [x0, #224]
   2d524:	ldr	x0, [sp, #24]
   2d528:	str	xzr, [x0, #232]
   2d52c:	nop
   2d530:	ldp	x19, x30, [sp], #32
   2d534:	ret
   2d538:	str	x30, [sp, #-32]!
   2d53c:	str	x0, [sp, #24]
   2d540:	str	x1, [sp, #16]
   2d544:	ldr	x0, [sp, #24]
   2d548:	ldr	x1, [sp, #16]
   2d54c:	str	x1, [x0]
   2d550:	ldr	x0, [sp, #24]
   2d554:	ldr	x0, [x0]
   2d558:	ldr	x0, [x0, #224]
   2d55c:	cmp	x0, #0x0
   2d560:	b.eq	2d574 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42ec>  // b.none
   2d564:	ldr	x0, [sp, #24]
   2d568:	ldr	x0, [x0]
   2d56c:	ldr	x0, [x0, #224]
   2d570:	blr	x0
   2d574:	nop
   2d578:	ldr	x30, [sp], #32
   2d57c:	ret
   2d580:	str	x30, [sp, #-32]!
   2d584:	str	x0, [sp, #24]
   2d588:	ldr	x0, [sp, #24]
   2d58c:	ldr	x0, [x0]
   2d590:	ldr	x0, [x0, #232]
   2d594:	cmp	x0, #0x0
   2d598:	b.eq	2d5ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4324>  // b.none
   2d59c:	ldr	x0, [sp, #24]
   2d5a0:	ldr	x0, [x0]
   2d5a4:	ldr	x0, [x0, #232]
   2d5a8:	blr	x0
   2d5ac:	nop
   2d5b0:	ldr	x30, [sp], #32
   2d5b4:	ret
   2d5b8:	str	x30, [sp, #-32]!
   2d5bc:	str	x0, [sp, #24]
   2d5c0:	str	x1, [sp, #16]
   2d5c4:	ldr	x0, [sp, #24]
   2d5c8:	bl	2d5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4370>
   2d5cc:	ldr	x0, [sp, #24]
   2d5d0:	str	xzr, [x0, #24]
   2d5d4:	ldr	x0, [sp, #24]
   2d5d8:	ldr	x1, [sp, #16]
   2d5dc:	str	x1, [x0, #32]
   2d5e0:	ldr	x0, [sp, #24]
   2d5e4:	mov	x1, #0x3e8                 	// #1000
   2d5e8:	bl	2d618 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4390>
   2d5ec:	nop
   2d5f0:	ldr	x30, [sp], #32
   2d5f4:	ret
   2d5f8:	str	x30, [sp, #-32]!
   2d5fc:	str	x0, [sp, #24]
   2d600:	ldr	x0, [sp, #24]
   2d604:	mov	x1, #0x1                   	// #1
   2d608:	bl	2d7d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4550>
   2d60c:	nop
   2d610:	ldr	x30, [sp], #32
   2d614:	ret
   2d618:	str	x30, [sp, #-32]!
   2d61c:	str	x0, [sp, #24]
   2d620:	str	x1, [sp, #16]
   2d624:	ldr	x0, [sp, #24]
   2d628:	bl	2d814 <__sanitizer_get_module_and_offset_for_pc@@Base+0x458c>
   2d62c:	mov	x1, x0
   2d630:	ldr	x0, [sp, #16]
   2d634:	cmp	x0, x1
   2d638:	cset	w0, hi  // hi = pmore
   2d63c:	and	w0, w0, #0xff
   2d640:	cmp	w0, #0x0
   2d644:	b.eq	2d654 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43cc>  // b.none
   2d648:	ldr	x1, [sp, #16]
   2d64c:	ldr	x0, [sp, #24]
   2d650:	bl	2d830 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45a8>
   2d654:	nop
   2d658:	ldr	x30, [sp], #32
   2d65c:	ret
   2d660:	sub	sp, sp, #0x10
   2d664:	str	x0, [sp, #8]
   2d668:	ldr	x0, [sp, #8]
   2d66c:	ldr	x0, [x0, #16]
   2d670:	add	sp, sp, #0x10
   2d674:	ret
   2d678:	str	x30, [sp, #-48]!
   2d67c:	str	x0, [sp, #24]
   2d680:	str	x1, [sp, #16]
   2d684:	ldr	x0, [sp, #16]
   2d688:	str	x0, [sp, #40]
   2d68c:	ldr	x0, [sp, #24]
   2d690:	ldr	x0, [x0, #16]
   2d694:	str	x0, [sp, #32]
   2d698:	ldr	x1, [sp, #40]
   2d69c:	ldr	x0, [sp, #32]
   2d6a0:	cmp	x1, x0
   2d6a4:	cset	w0, cs  // cs = hs, nlast
   2d6a8:	and	w0, w0, #0xff
   2d6ac:	and	x0, x0, #0xff
   2d6b0:	cmp	x0, #0x0
   2d6b4:	b.eq	2d6d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4450>  // b.none
   2d6b8:	ldr	x4, [sp, #32]
   2d6bc:	ldr	x3, [sp, #40]
   2d6c0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2d6c4:	add	x2, x0, #0x890
   2d6c8:	mov	w1, #0x1b6                 	// #438
   2d6cc:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2d6d0:	add	x0, x0, #0x6f0
   2d6d4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2d6d8:	ldr	x0, [sp, #24]
   2d6dc:	ldr	x1, [x0]
   2d6e0:	ldr	x0, [sp, #16]
   2d6e4:	lsl	x0, x0, #3
   2d6e8:	add	x0, x1, x0
   2d6ec:	ldr	x30, [sp], #48
   2d6f0:	ret
   2d6f4:	stp	x19, x30, [sp, #-64]!
   2d6f8:	str	x0, [sp, #24]
   2d6fc:	str	x1, [sp, #16]
   2d700:	ldr	x0, [sp, #24]
   2d704:	ldr	x0, [x0, #16]
   2d708:	str	x0, [sp, #56]
   2d70c:	ldr	x0, [sp, #24]
   2d710:	bl	2d814 <__sanitizer_get_module_and_offset_for_pc@@Base+0x458c>
   2d714:	str	x0, [sp, #48]
   2d718:	ldr	x1, [sp, #56]
   2d71c:	ldr	x0, [sp, #48]
   2d720:	cmp	x1, x0
   2d724:	cset	w0, hi  // hi = pmore
   2d728:	and	w0, w0, #0xff
   2d72c:	and	x0, x0, #0xff
   2d730:	cmp	x0, #0x0
   2d734:	b.eq	2d758 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44d0>  // b.none
   2d738:	ldr	x4, [sp, #48]
   2d73c:	ldr	x3, [sp, #56]
   2d740:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2d744:	add	x2, x0, #0x8a8
   2d748:	mov	w1, #0x1be                 	// #446
   2d74c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2d750:	add	x0, x0, #0x6f0
   2d754:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2d758:	ldr	x0, [sp, #24]
   2d75c:	ldr	x19, [x0, #16]
   2d760:	ldr	x0, [sp, #24]
   2d764:	bl	2d814 <__sanitizer_get_module_and_offset_for_pc@@Base+0x458c>
   2d768:	cmp	x19, x0
   2d76c:	cset	w0, eq  // eq = none
   2d770:	and	w0, w0, #0xff
   2d774:	cmp	w0, #0x0
   2d778:	b.eq	2d79c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4514>  // b.none
   2d77c:	ldr	x0, [sp, #24]
   2d780:	ldr	x0, [x0, #16]
   2d784:	add	x0, x0, #0x1
   2d788:	bl	20578 <__sanitizer_set_report_fd@@Base+0x63cc>
   2d78c:	str	x0, [sp, #40]
   2d790:	ldr	x1, [sp, #40]
   2d794:	ldr	x0, [sp, #24]
   2d798:	bl	2d830 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45a8>
   2d79c:	ldr	x0, [sp, #24]
   2d7a0:	ldr	x1, [x0]
   2d7a4:	ldr	x0, [sp, #24]
   2d7a8:	ldr	x0, [x0, #16]
   2d7ac:	add	x3, x0, #0x1
   2d7b0:	ldr	x2, [sp, #24]
   2d7b4:	str	x3, [x2, #16]
   2d7b8:	lsl	x0, x0, #3
   2d7bc:	add	x0, x1, x0
   2d7c0:	mov	x2, #0x8                   	// #8
   2d7c4:	ldr	x1, [sp, #16]
   2d7c8:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   2d7cc:	nop
   2d7d0:	ldp	x19, x30, [sp], #64
   2d7d4:	ret
   2d7d8:	str	x30, [sp, #-32]!
   2d7dc:	str	x0, [sp, #24]
   2d7e0:	str	x1, [sp, #16]
   2d7e4:	ldr	x0, [sp, #24]
   2d7e8:	str	xzr, [x0, #8]
   2d7ec:	ldr	x0, [sp, #24]
   2d7f0:	str	xzr, [x0, #16]
   2d7f4:	ldr	x0, [sp, #24]
   2d7f8:	str	xzr, [x0]
   2d7fc:	ldr	x1, [sp, #16]
   2d800:	ldr	x0, [sp, #24]
   2d804:	bl	2d618 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4390>
   2d808:	nop
   2d80c:	ldr	x30, [sp], #32
   2d810:	ret
   2d814:	sub	sp, sp, #0x10
   2d818:	str	x0, [sp, #8]
   2d81c:	ldr	x0, [sp, #8]
   2d820:	ldr	x0, [x0, #8]
   2d824:	lsr	x0, x0, #3
   2d828:	add	sp, sp, #0x10
   2d82c:	ret
   2d830:	stp	x19, x30, [sp, #-80]!
   2d834:	str	x0, [sp, #24]
   2d838:	str	x1, [sp, #16]
   2d83c:	ldr	x0, [sp, #16]
   2d840:	str	x0, [sp, #72]
   2d844:	str	xzr, [sp, #64]
   2d848:	ldr	x1, [sp, #72]
   2d84c:	ldr	x0, [sp, #64]
   2d850:	cmp	x1, x0
   2d854:	cset	w0, ls  // ls = plast
   2d858:	and	w0, w0, #0xff
   2d85c:	and	x0, x0, #0xff
   2d860:	cmp	x0, #0x0
   2d864:	b.eq	2d888 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4600>  // b.none
   2d868:	ldr	x4, [sp, #64]
   2d86c:	ldr	x3, [sp, #72]
   2d870:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2d874:	add	x2, x0, #0x8c8
   2d878:	mov	w1, #0x1fc                 	// #508
   2d87c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2d880:	add	x0, x0, #0x6f0
   2d884:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2d888:	ldr	x0, [sp, #24]
   2d88c:	ldr	x0, [x0, #16]
   2d890:	str	x0, [sp, #56]
   2d894:	ldr	x0, [sp, #16]
   2d898:	str	x0, [sp, #48]
   2d89c:	ldr	x1, [sp, #56]
   2d8a0:	ldr	x0, [sp, #48]
   2d8a4:	cmp	x1, x0
   2d8a8:	cset	w0, hi  // hi = pmore
   2d8ac:	and	w0, w0, #0xff
   2d8b0:	and	x0, x0, #0xff
   2d8b4:	cmp	x0, #0x0
   2d8b8:	b.eq	2d8dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4654>  // b.none
   2d8bc:	ldr	x4, [sp, #48]
   2d8c0:	ldr	x3, [sp, #56]
   2d8c4:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2d8c8:	add	x2, x0, #0x8e8
   2d8cc:	mov	w1, #0x1fd                 	// #509
   2d8d0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2d8d4:	add	x0, x0, #0x6f0
   2d8d8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2d8dc:	ldr	x0, [sp, #16]
   2d8e0:	lsl	x19, x0, #3
   2d8e4:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   2d8e8:	mov	x1, x0
   2d8ec:	mov	x0, x19
   2d8f0:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   2d8f4:	str	x0, [sp, #40]
   2d8f8:	mov	w2, #0x0                   	// #0
   2d8fc:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2d900:	add	x1, x0, #0x908
   2d904:	ldr	x0, [sp, #40]
   2d908:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   2d90c:	str	x0, [sp, #32]
   2d910:	ldr	x0, [sp, #24]
   2d914:	ldr	x1, [x0]
   2d918:	ldr	x0, [sp, #24]
   2d91c:	ldr	x0, [x0, #16]
   2d920:	lsl	x0, x0, #3
   2d924:	mov	x2, x0
   2d928:	ldr	x0, [sp, #32]
   2d92c:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   2d930:	ldr	x0, [sp, #24]
   2d934:	ldr	x2, [x0]
   2d938:	ldr	x0, [sp, #24]
   2d93c:	ldr	x0, [x0, #8]
   2d940:	mov	x1, x0
   2d944:	mov	x0, x2
   2d948:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   2d94c:	ldr	x0, [sp, #24]
   2d950:	ldr	x1, [sp, #32]
   2d954:	str	x1, [x0]
   2d958:	ldr	x0, [sp, #24]
   2d95c:	ldr	x1, [sp, #40]
   2d960:	str	x1, [x0, #8]
   2d964:	nop
   2d968:	ldp	x19, x30, [sp], #80
   2d96c:	ret
   2d970:	str	x30, [sp, #-80]!
   2d974:	str	x0, [sp, #40]
   2d978:	str	x1, [sp, #32]
   2d97c:	str	x2, [sp, #24]
   2d980:	ldr	x0, [sp, #24]
   2d984:	str	x0, [sp, #72]
   2d988:	ldr	x0, [sp, #72]
   2d98c:	ldr	x1, [x0, #8]
   2d990:	ldr	x0, [sp, #32]
   2d994:	add	x0, x1, x0
   2d998:	add	x0, x0, #0x1
   2d99c:	str	x0, [sp, #64]
   2d9a0:	ldr	x0, [sp, #72]
   2d9a4:	ldr	x0, [x0, #16]
   2d9a8:	ldr	x1, [sp, #64]
   2d9ac:	cmp	x1, x0
   2d9b0:	b.ls	2da48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47c0>  // b.plast
   2d9b4:	ldr	x0, [sp, #72]
   2d9b8:	ldr	x0, [x0, #16]
   2d9bc:	lsl	x1, x0, #1
   2d9c0:	ldr	x0, [sp, #72]
   2d9c4:	str	x1, [x0, #16]
   2d9c8:	ldr	x0, [sp, #72]
   2d9cc:	ldr	x0, [x0, #16]
   2d9d0:	ldr	x1, [sp, #64]
   2d9d4:	cmp	x1, x0
   2d9d8:	b.ls	2d9e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4760>  // b.plast
   2d9dc:	ldr	x0, [sp, #72]
   2d9e0:	ldr	x1, [sp, #64]
   2d9e4:	str	x1, [x0, #16]
   2d9e8:	ldr	x0, [sp, #72]
   2d9ec:	ldr	x0, [x0, #16]
   2d9f0:	mov	x2, #0x0                   	// #0
   2d9f4:	mov	x1, #0x0                   	// #0
   2d9f8:	bl	107a8 <__sancov_default_options@@Base+0x3fc>
   2d9fc:	str	x0, [sp, #56]
   2da00:	ldr	x0, [sp, #72]
   2da04:	ldr	x0, [x0]
   2da08:	cmp	x0, #0x0
   2da0c:	b.eq	2da3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x47b4>  // b.none
   2da10:	ldr	x0, [sp, #72]
   2da14:	ldr	x1, [x0]
   2da18:	ldr	x0, [sp, #72]
   2da1c:	ldr	x0, [x0, #8]
   2da20:	mov	x2, x0
   2da24:	ldr	x0, [sp, #56]
   2da28:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   2da2c:	ldr	x0, [sp, #72]
   2da30:	ldr	x0, [x0]
   2da34:	mov	x1, #0x0                   	// #0
   2da38:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   2da3c:	ldr	x0, [sp, #72]
   2da40:	ldr	x1, [sp, #56]
   2da44:	str	x1, [x0]
   2da48:	ldr	x0, [sp, #72]
   2da4c:	ldr	x1, [x0]
   2da50:	ldr	x0, [sp, #72]
   2da54:	ldr	x0, [x0, #8]
   2da58:	add	x0, x1, x0
   2da5c:	ldr	x2, [sp, #32]
   2da60:	ldr	x1, [sp, #40]
   2da64:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   2da68:	ldr	x0, [sp, #72]
   2da6c:	ldr	x1, [x0]
   2da70:	ldr	x0, [sp, #72]
   2da74:	ldr	x2, [x0, #8]
   2da78:	ldr	x0, [sp, #32]
   2da7c:	add	x0, x2, x0
   2da80:	add	x0, x1, x0
   2da84:	strb	wzr, [x0]
   2da88:	ldr	x0, [sp, #72]
   2da8c:	ldr	x1, [x0, #8]
   2da90:	ldr	x0, [sp, #32]
   2da94:	add	x1, x1, x0
   2da98:	ldr	x0, [sp, #72]
   2da9c:	str	x1, [x0, #8]
   2daa0:	nop
   2daa4:	ldr	x30, [sp], #80
   2daa8:	ret
   2daac:	str	x30, [sp, #-64]!
   2dab0:	str	x0, [sp, #24]
   2dab4:	str	xzr, [sp, #32]
   2dab8:	str	xzr, [sp, #40]
   2dabc:	str	xzr, [sp, #48]
   2dac0:	add	x0, sp, #0x20
   2dac4:	mov	x3, x0
   2dac8:	adrp	x0, 2d000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d78>
   2dacc:	add	x2, x0, #0x970
   2dad0:	mov	w1, #0x3                   	// #3
   2dad4:	ldr	x0, [sp, #24]
   2dad8:	bl	6c30 <__asan_cplus_demangle_v3_callback@plt>
   2dadc:	cmp	w0, #0x0
   2dae0:	cset	w0, ne  // ne = any
   2dae4:	and	w0, w0, #0xff
   2dae8:	cmp	w0, #0x0
   2daec:	b.eq	2db2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48a4>  // b.none
   2daf0:	ldr	x0, [sp, #40]
   2daf4:	add	x1, x0, #0x40
   2daf8:	ldr	x0, [sp, #48]
   2dafc:	cmp	x1, x0
   2db00:	b.ls	2db0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4884>  // b.plast
   2db04:	ldr	x0, [sp, #32]
   2db08:	b	2db48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48c0>
   2db0c:	ldr	x0, [sp, #32]
   2db10:	bl	1ca68 <__sanitizer_set_report_fd@@Base+0x28bc>
   2db14:	str	x0, [sp, #56]
   2db18:	ldr	x0, [sp, #32]
   2db1c:	mov	x1, #0x0                   	// #0
   2db20:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   2db24:	ldr	x0, [sp, #56]
   2db28:	b	2db48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48c0>
   2db2c:	ldr	x0, [sp, #32]
   2db30:	cmp	x0, #0x0
   2db34:	b.eq	2db44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48bc>  // b.none
   2db38:	ldr	x0, [sp, #32]
   2db3c:	mov	x1, #0x0                   	// #0
   2db40:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   2db44:	mov	x0, #0x0                   	// #0
   2db48:	ldr	x30, [sp], #64
   2db4c:	ret
   2db50:	str	x30, [sp, #-96]!
   2db54:	str	x0, [sp, #24]
   2db58:	str	x1, [sp, #16]
   2db5c:	ldr	x0, [sp, #24]
   2db60:	ldr	x0, [x0, #8]
   2db64:	str	x0, [sp, #88]
   2db68:	str	xzr, [sp, #80]
   2db6c:	ldr	x1, [sp, #88]
   2db70:	ldr	x0, [sp, #80]
   2db74:	cmp	x1, x0
   2db78:	cset	w0, eq  // eq = none
   2db7c:	and	w0, w0, #0xff
   2db80:	and	x0, x0, #0xff
   2db84:	cmp	x0, #0x0
   2db88:	b.eq	2dbac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4924>  // b.none
   2db8c:	ldr	x4, [sp, #80]
   2db90:	ldr	x3, [sp, #88]
   2db94:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2db98:	add	x2, x0, #0xa48
   2db9c:	mov	w1, #0x5c                  	// #92
   2dba0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2dba4:	add	x0, x0, #0xa58
   2dba8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2dbac:	ldr	x0, [sp, #24]
   2dbb0:	ldr	x0, [x0, #16]
   2dbb4:	cmp	x0, #0x0
   2dbb8:	b.eq	2dc20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4998>  // b.none
   2dbbc:	ldr	x0, [sp, #16]
   2dbc0:	bl	2d1ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f24>
   2dbc4:	str	x0, [sp, #72]
   2dbc8:	ldr	x0, [sp, #72]
   2dbcc:	add	x0, x0, #0x8
   2dbd0:	str	x0, [sp, #64]
   2dbd4:	ldr	x0, [sp, #24]
   2dbd8:	ldr	x0, [x0]
   2dbdc:	ldr	x1, [x0, #16]
   2dbe0:	ldr	x0, [sp, #24]
   2dbe4:	ldr	x0, [x0]
   2dbe8:	ldr	x2, [x0, #24]
   2dbec:	ldr	x0, [sp, #24]
   2dbf0:	ldr	x0, [x0]
   2dbf4:	ldr	w0, [x0, #32]
   2dbf8:	mov	w3, w0
   2dbfc:	ldr	x0, [sp, #64]
   2dc00:	bl	2d138 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3eb0>
   2dc04:	ldr	x0, [sp, #24]
   2dc08:	ldr	x0, [x0, #8]
   2dc0c:	ldr	x1, [sp, #72]
   2dc10:	str	x1, [x0]
   2dc14:	ldr	x0, [sp, #24]
   2dc18:	ldr	x1, [sp, #72]
   2dc1c:	str	x1, [x0, #8]
   2dc20:	ldr	x0, [sp, #16]
   2dc24:	str	x0, [sp, #56]
   2dc28:	ldr	x0, [sp, #24]
   2dc2c:	ldr	x0, [x0]
   2dc30:	ldr	x0, [x0, #8]
   2dc34:	str	x0, [sp, #48]
   2dc38:	ldr	x1, [sp, #56]
   2dc3c:	ldr	x0, [sp, #48]
   2dc40:	cmp	x1, x0
   2dc44:	cset	w0, ne  // ne = any
   2dc48:	and	w0, w0, #0xff
   2dc4c:	and	x0, x0, #0xff
   2dc50:	cmp	x0, #0x0
   2dc54:	b.eq	2dc78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49f0>  // b.none
   2dc58:	ldr	x4, [sp, #48]
   2dc5c:	ldr	x3, [sp, #56]
   2dc60:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2dc64:	add	x2, x0, #0xaa8
   2dc68:	mov	w1, #0x65                  	// #101
   2dc6c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2dc70:	add	x0, x0, #0xa58
   2dc74:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2dc78:	ldr	x0, [sp, #16]
   2dc7c:	str	x0, [sp, #40]
   2dc80:	ldr	x0, [sp, #24]
   2dc84:	ldr	x0, [x0, #8]
   2dc88:	ldr	x0, [x0, #8]
   2dc8c:	str	x0, [sp, #32]
   2dc90:	ldr	x1, [sp, #40]
   2dc94:	ldr	x0, [sp, #32]
   2dc98:	cmp	x1, x0
   2dc9c:	cset	w0, ne  // ne = any
   2dca0:	and	w0, w0, #0xff
   2dca4:	and	x0, x0, #0xff
   2dca8:	cmp	x0, #0x0
   2dcac:	b.eq	2dcd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a48>  // b.none
   2dcb0:	ldr	x4, [sp, #32]
   2dcb4:	ldr	x3, [sp, #40]
   2dcb8:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2dcbc:	add	x2, x0, #0xad0
   2dcc0:	mov	w1, #0x66                  	// #102
   2dcc4:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2dcc8:	add	x0, x0, #0xa58
   2dccc:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2dcd0:	ldr	x0, [sp, #24]
   2dcd4:	ldr	x0, [x0, #8]
   2dcd8:	add	x0, x0, #0x8
   2dcdc:	ldr	x30, [sp], #96
   2dce0:	ret
   2dce4:	str	x30, [sp, #-80]!
   2dce8:	str	x0, [sp, #56]
   2dcec:	str	x1, [sp, #48]
   2dcf0:	str	x2, [sp, #40]
   2dcf4:	str	w3, [sp, #36]
   2dcf8:	str	x4, [sp, #24]
   2dcfc:	ldr	x0, [sp, #56]
   2dd00:	str	x0, [sp, #72]
   2dd04:	ldr	x0, [sp, #24]
   2dd08:	cmp	x0, #0x0
   2dd0c:	b.eq	2dd78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4af0>  // b.none
   2dd10:	ldr	x1, [sp, #48]
   2dd14:	ldr	x0, [sp, #72]
   2dd18:	bl	2db50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48c8>
   2dd1c:	str	x0, [sp, #64]
   2dd20:	mov	w1, #0x1                   	// #1
   2dd24:	ldr	x0, [sp, #24]
   2dd28:	bl	2dfd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d50>
   2dd2c:	mov	x1, x0
   2dd30:	ldr	x0, [sp, #64]
   2dd34:	str	x1, [x0, #32]
   2dd38:	ldr	x0, [sp, #40]
   2dd3c:	cmp	x0, #0x0
   2dd40:	b.eq	2dd58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ad0>  // b.none
   2dd44:	ldr	x0, [sp, #40]
   2dd48:	bl	1ca68 <__sanitizer_set_report_fd@@Base+0x28bc>
   2dd4c:	mov	x1, x0
   2dd50:	ldr	x0, [sp, #64]
   2dd54:	str	x1, [x0, #48]
   2dd58:	ldr	x0, [sp, #64]
   2dd5c:	ldr	w1, [sp, #36]
   2dd60:	str	w1, [x0, #56]
   2dd64:	ldr	x0, [sp, #72]
   2dd68:	ldr	x0, [x0, #16]
   2dd6c:	add	x1, x0, #0x1
   2dd70:	ldr	x0, [sp, #72]
   2dd74:	str	x1, [x0, #16]
   2dd78:	mov	w0, #0x0                   	// #0
   2dd7c:	ldr	x30, [sp], #80
   2dd80:	ret
   2dd84:	str	x30, [sp, #-80]!
   2dd88:	str	x0, [sp, #56]
   2dd8c:	str	x1, [sp, #48]
   2dd90:	str	x2, [sp, #40]
   2dd94:	str	x3, [sp, #32]
   2dd98:	str	x4, [sp, #24]
   2dd9c:	ldr	x0, [sp, #56]
   2dda0:	str	x0, [sp, #72]
   2dda4:	ldr	x0, [sp, #40]
   2dda8:	cmp	x0, #0x0
   2ddac:	b.eq	2ddec <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b64>  // b.none
   2ddb0:	ldr	x1, [sp, #48]
   2ddb4:	ldr	x0, [sp, #72]
   2ddb8:	bl	2db50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48c8>
   2ddbc:	str	x0, [sp, #64]
   2ddc0:	mov	w1, #0x1                   	// #1
   2ddc4:	ldr	x0, [sp, #40]
   2ddc8:	bl	2dfd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d50>
   2ddcc:	mov	x1, x0
   2ddd0:	ldr	x0, [sp, #64]
   2ddd4:	str	x1, [x0, #32]
   2ddd8:	ldr	x0, [sp, #72]
   2dddc:	ldr	x0, [x0, #16]
   2dde0:	add	x1, x0, #0x1
   2dde4:	ldr	x0, [sp, #72]
   2dde8:	str	x1, [x0, #16]
   2ddec:	nop
   2ddf0:	ldr	x30, [sp], #80
   2ddf4:	ret
   2ddf8:	str	x30, [sp, #-80]!
   2ddfc:	str	x0, [sp, #56]
   2de00:	str	x1, [sp, #48]
   2de04:	str	x2, [sp, #40]
   2de08:	str	x3, [sp, #32]
   2de0c:	str	x4, [sp, #24]
   2de10:	ldr	x0, [sp, #56]
   2de14:	str	x0, [sp, #72]
   2de18:	ldr	x0, [sp, #40]
   2de1c:	cmp	x0, #0x0
   2de20:	b.eq	2de60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4bd8>  // b.none
   2de24:	ldr	x0, [sp, #32]
   2de28:	cmp	x0, #0x0
   2de2c:	b.eq	2de60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4bd8>  // b.none
   2de30:	mov	w1, #0x1                   	// #1
   2de34:	ldr	x0, [sp, #40]
   2de38:	bl	2dfd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d50>
   2de3c:	mov	x1, x0
   2de40:	ldr	x0, [sp, #72]
   2de44:	str	x1, [x0, #40]
   2de48:	ldr	x0, [sp, #72]
   2de4c:	ldr	x1, [sp, #32]
   2de50:	str	x1, [x0, #48]
   2de54:	ldr	x0, [sp, #72]
   2de58:	ldr	x1, [sp, #24]
   2de5c:	str	x1, [x0, #56]
   2de60:	nop
   2de64:	ldr	x30, [sp], #80
   2de68:	ret
   2de6c:	sub	sp, sp, #0x20
   2de70:	str	x0, [sp, #24]
   2de74:	str	x1, [sp, #16]
   2de78:	str	w2, [sp, #12]
   2de7c:	nop
   2de80:	add	sp, sp, #0x20
   2de84:	ret
   2de88:	stp	x19, x30, [sp, #-48]!
   2de8c:	str	x0, [sp, #24]
   2de90:	mov	x3, #0x0                   	// #0
   2de94:	adrp	x0, 2d000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d78>
   2de98:	add	x2, x0, #0xe6c
   2de9c:	mov	w1, #0x0                   	// #0
   2dea0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2dea4:	add	x0, x0, #0xaf8
   2dea8:	bl	68d0 <__asan_backtrace_create_state@plt>
   2deac:	str	x0, [sp, #40]
   2deb0:	ldr	x0, [sp, #40]
   2deb4:	cmp	x0, #0x0
   2deb8:	b.ne	2dec4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c3c>  // b.any
   2debc:	mov	x19, #0x0                   	// #0
   2dec0:	b	2dee0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c58>
   2dec4:	ldr	x1, [sp, #24]
   2dec8:	mov	x0, #0x18                  	// #24
   2decc:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
   2ded0:	mov	x19, x0
   2ded4:	ldr	x1, [sp, #40]
   2ded8:	mov	x0, x19
   2dedc:	bl	2e158 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ed0>
   2dee0:	mov	x0, x19
   2dee4:	ldp	x19, x30, [sp], #48
   2dee8:	ret
   2deec:	str	x30, [sp, #-80]!
   2def0:	str	x0, [sp, #40]
   2def4:	str	x1, [sp, #32]
   2def8:	str	x2, [sp, #24]
   2defc:	ldr	x0, [sp, #24]
   2df00:	str	x0, [sp, #56]
   2df04:	ldr	x0, [sp, #24]
   2df08:	str	x0, [sp, #64]
   2df0c:	str	xzr, [sp, #72]
   2df10:	ldr	x0, [sp, #40]
   2df14:	ldr	x5, [x0, #16]
   2df18:	add	x0, sp, #0x38
   2df1c:	mov	x4, x0
   2df20:	adrp	x0, 2d000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d78>
   2df24:	add	x3, x0, #0xe6c
   2df28:	adrp	x0, 2d000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d78>
   2df2c:	add	x2, x0, #0xce4
   2df30:	ldr	x1, [sp, #32]
   2df34:	mov	x0, x5
   2df38:	bl	6610 <__asan_backtrace_pcinfo@plt>
   2df3c:	ldr	x0, [sp, #72]
   2df40:	cmp	x0, #0x0
   2df44:	b.eq	2df50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cc8>  // b.none
   2df48:	mov	w0, #0x1                   	// #1
   2df4c:	b	2df8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d04>
   2df50:	ldr	x0, [sp, #40]
   2df54:	ldr	x5, [x0, #16]
   2df58:	add	x0, sp, #0x38
   2df5c:	mov	x4, x0
   2df60:	adrp	x0, 2d000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d78>
   2df64:	add	x3, x0, #0xe6c
   2df68:	adrp	x0, 2d000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d78>
   2df6c:	add	x2, x0, #0xd84
   2df70:	ldr	x1, [sp, #32]
   2df74:	mov	x0, x5
   2df78:	bl	6760 <__asan_backtrace_syminfo@plt>
   2df7c:	ldr	x0, [sp, #72]
   2df80:	cmp	x0, #0x0
   2df84:	cset	w0, ne  // ne = any
   2df88:	and	w0, w0, #0xff
   2df8c:	ldr	x30, [sp], #80
   2df90:	ret
   2df94:	str	x30, [sp, #-48]!
   2df98:	str	x0, [sp, #40]
   2df9c:	str	x1, [sp, #32]
   2dfa0:	str	x2, [sp, #24]
   2dfa4:	ldr	x0, [sp, #40]
   2dfa8:	ldr	x5, [x0, #16]
   2dfac:	ldr	x4, [sp, #24]
   2dfb0:	adrp	x0, 2d000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d78>
   2dfb4:	add	x3, x0, #0xe6c
   2dfb8:	adrp	x0, 2d000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d78>
   2dfbc:	add	x2, x0, #0xdf8
   2dfc0:	ldr	x1, [sp, #32]
   2dfc4:	mov	x0, x5
   2dfc8:	bl	6760 <__asan_backtrace_syminfo@plt>
   2dfcc:	mov	w0, #0x1                   	// #1
   2dfd0:	ldr	x30, [sp], #48
   2dfd4:	ret
   2dfd8:	str	x30, [sp, #-48]!
   2dfdc:	str	x0, [sp, #24]
   2dfe0:	strb	w1, [sp, #23]
   2dfe4:	ldr	x0, [sp, #24]
   2dfe8:	bl	2daac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4824>
   2dfec:	str	x0, [sp, #40]
   2dff0:	ldr	x0, [sp, #40]
   2dff4:	cmp	x0, #0x0
   2dff8:	b.eq	2e004 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d7c>  // b.none
   2dffc:	ldr	x0, [sp, #40]
   2e000:	b	2e020 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d98>
   2e004:	ldrb	w0, [sp, #23]
   2e008:	cmp	w0, #0x0
   2e00c:	b.eq	2e01c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d94>  // b.none
   2e010:	ldr	x0, [sp, #24]
   2e014:	bl	1ca68 <__sanitizer_set_report_fd@@Base+0x28bc>
   2e018:	b	2e020 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d98>
   2e01c:	mov	x0, #0x0                   	// #0
   2e020:	ldr	x30, [sp], #48
   2e024:	ret
   2e028:	str	x30, [sp, #-32]!
   2e02c:	str	x0, [sp, #24]
   2e030:	str	x1, [sp, #16]
   2e034:	mov	w1, #0x0                   	// #0
   2e038:	ldr	x0, [sp, #16]
   2e03c:	bl	2dfd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d50>
   2e040:	ldr	x30, [sp], #32
   2e044:	ret
   2e048:	sub	sp, sp, #0x10
   2e04c:	str	x0, [sp, #8]
   2e050:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   2e054:	add	x1, x0, #0xe68
   2e058:	ldr	x0, [sp, #8]
   2e05c:	str	x1, [x0]
   2e060:	ldr	x0, [sp, #8]
   2e064:	str	xzr, [x0, #8]
   2e068:	nop
   2e06c:	add	sp, sp, #0x10
   2e070:	ret
   2e074:	str	x30, [sp, #-64]!
   2e078:	str	x0, [sp, #40]
   2e07c:	str	x1, [sp, #32]
   2e080:	str	x2, [sp, #24]
   2e084:	str	xzr, [sp, #56]
   2e088:	str	xzr, [sp, #48]
   2e08c:	ldr	x1, [sp, #56]
   2e090:	ldr	x0, [sp, #48]
   2e094:	cmp	x1, x0
   2e098:	cset	w0, eq  // eq = none
   2e09c:	and	w0, w0, #0xff
   2e0a0:	and	x0, x0, #0xff
   2e0a4:	cmp	x0, #0x0
   2e0a8:	b.eq	2e0cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e44>  // b.none
   2e0ac:	ldr	x4, [sp, #48]
   2e0b0:	ldr	x3, [sp, #56]
   2e0b4:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2e0b8:	add	x2, x0, #0x9d8
   2e0bc:	mov	w1, #0x33                  	// #51
   2e0c0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2e0c4:	add	x0, x0, #0x9f8
   2e0c8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2e0cc:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2e0d0:	str	x30, [sp, #-64]!
   2e0d4:	str	x0, [sp, #40]
   2e0d8:	str	x1, [sp, #32]
   2e0dc:	str	x2, [sp, #24]
   2e0e0:	str	xzr, [sp, #56]
   2e0e4:	str	xzr, [sp, #48]
   2e0e8:	ldr	x1, [sp, #56]
   2e0ec:	ldr	x0, [sp, #48]
   2e0f0:	cmp	x1, x0
   2e0f4:	cset	w0, eq  // eq = none
   2e0f8:	and	w0, w0, #0xff
   2e0fc:	and	x0, x0, #0xff
   2e100:	cmp	x0, #0x0
   2e104:	b.eq	2e128 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ea0>  // b.none
   2e108:	ldr	x4, [sp, #48]
   2e10c:	ldr	x3, [sp, #56]
   2e110:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2e114:	add	x2, x0, #0x9d8
   2e118:	mov	w1, #0x39                  	// #57
   2e11c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2e120:	add	x0, x0, #0x9f8
   2e124:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2e128:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2e12c:	sub	sp, sp, #0x10
   2e130:	str	x0, [sp, #8]
   2e134:	nop
   2e138:	add	sp, sp, #0x10
   2e13c:	ret
   2e140:	sub	sp, sp, #0x10
   2e144:	str	x0, [sp, #8]
   2e148:	str	x1, [sp]
   2e14c:	mov	x0, #0x0                   	// #0
   2e150:	add	sp, sp, #0x10
   2e154:	ret
   2e158:	str	x30, [sp, #-32]!
   2e15c:	str	x0, [sp, #24]
   2e160:	str	x1, [sp, #16]
   2e164:	ldr	x0, [sp, #24]
   2e168:	bl	2e048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dc0>
   2e16c:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   2e170:	add	x1, x0, #0xe38
   2e174:	ldr	x0, [sp, #24]
   2e178:	str	x1, [x0]
   2e17c:	ldr	x0, [sp, #24]
   2e180:	ldr	x1, [sp, #16]
   2e184:	str	x1, [x0, #16]
   2e188:	nop
   2e18c:	ldr	x30, [sp], #32
   2e190:	ret
   2e194:	stp	x19, x30, [sp, #-48]!
   2e198:	add	x2, sp, #0x18
   2e19c:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   2e1a0:	ldr	x1, [x0, #3984]
   2e1a4:	mov	x0, x2
   2e1a8:	bl	f1e0 <__ubsan_handle_cfi_bad_type@@Base+0xac4>
   2e1ac:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   2e1b0:	ldr	x0, [x0, #3936]
   2e1b4:	ldr	x0, [x0]
   2e1b8:	cmp	x0, #0x0
   2e1bc:	b.eq	2e1d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f48>  // b.none
   2e1c0:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   2e1c4:	ldr	x0, [x0, #3936]
   2e1c8:	ldr	x19, [x0]
   2e1cc:	b	2e244 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fbc>
   2e1d0:	bl	30790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7508>
   2e1d4:	mov	x1, x0
   2e1d8:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   2e1dc:	ldr	x0, [x0, #3936]
   2e1e0:	str	x1, [x0]
   2e1e4:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   2e1e8:	ldr	x0, [x0, #3936]
   2e1ec:	ldr	x0, [x0]
   2e1f0:	str	x0, [sp, #40]
   2e1f4:	str	xzr, [sp, #32]
   2e1f8:	ldr	x1, [sp, #40]
   2e1fc:	ldr	x0, [sp, #32]
   2e200:	cmp	x1, x0
   2e204:	cset	w0, eq  // eq = none
   2e208:	and	w0, w0, #0xff
   2e20c:	and	x0, x0, #0xff
   2e210:	cmp	x0, #0x0
   2e214:	b.eq	2e238 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fb0>  // b.none
   2e218:	ldr	x4, [sp, #32]
   2e21c:	ldr	x3, [sp, #40]
   2e220:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2e224:	add	x2, x0, #0xd00
   2e228:	mov	w1, #0x17                  	// #23
   2e22c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2e230:	add	x0, x0, #0xd18
   2e234:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2e238:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   2e23c:	ldr	x0, [x0, #3936]
   2e240:	ldr	x19, [x0]
   2e244:	add	x0, sp, #0x18
   2e248:	bl	f210 <__ubsan_handle_cfi_bad_type@@Base+0xaf4>
   2e24c:	mov	x0, x19
   2e250:	ldp	x19, x30, [sp], #48
   2e254:	ret
   2e258:	str	x30, [sp, #-64]!
   2e25c:	str	x0, [sp, #40]
   2e260:	str	x1, [sp, #32]
   2e264:	str	x2, [sp, #24]
   2e268:	ldr	x1, [sp, #32]
   2e26c:	ldr	x0, [sp, #40]
   2e270:	bl	1c9ec <__sanitizer_set_report_fd@@Base+0x2840>
   2e274:	str	x0, [sp, #48]
   2e278:	ldr	x0, [sp, #48]
   2e27c:	add	x0, x0, #0x1
   2e280:	mov	x2, #0x0                   	// #0
   2e284:	mov	x1, #0x0                   	// #0
   2e288:	bl	107a8 <__sancov_default_options@@Base+0x3fc>
   2e28c:	mov	x1, x0
   2e290:	ldr	x0, [sp, #24]
   2e294:	str	x1, [x0]
   2e298:	ldr	x0, [sp, #24]
   2e29c:	ldr	x0, [x0]
   2e2a0:	ldr	x2, [sp, #48]
   2e2a4:	ldr	x1, [sp, #40]
   2e2a8:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   2e2ac:	ldr	x0, [sp, #24]
   2e2b0:	ldr	x1, [x0]
   2e2b4:	ldr	x0, [sp, #48]
   2e2b8:	add	x0, x1, x0
   2e2bc:	strb	wzr, [x0]
   2e2c0:	ldr	x1, [sp, #40]
   2e2c4:	ldr	x0, [sp, #48]
   2e2c8:	add	x0, x1, x0
   2e2cc:	str	x0, [sp, #56]
   2e2d0:	ldr	x0, [sp, #56]
   2e2d4:	ldrb	w0, [x0]
   2e2d8:	cmp	w0, #0x0
   2e2dc:	b.eq	2e2ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x5064>  // b.none
   2e2e0:	ldr	x0, [sp, #56]
   2e2e4:	add	x0, x0, #0x1
   2e2e8:	str	x0, [sp, #56]
   2e2ec:	ldr	x0, [sp, #56]
   2e2f0:	ldr	x30, [sp], #64
   2e2f4:	ret
   2e2f8:	str	x30, [sp, #-64]!
   2e2fc:	str	x0, [sp, #40]
   2e300:	str	x1, [sp, #32]
   2e304:	str	x2, [sp, #24]
   2e308:	add	x0, sp, #0x30
   2e30c:	mov	x2, x0
   2e310:	ldr	x1, [sp, #32]
   2e314:	ldr	x0, [sp, #40]
   2e318:	bl	2e258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fd0>
   2e31c:	str	x0, [sp, #56]
   2e320:	ldr	x0, [sp, #48]
   2e324:	cmp	x0, #0x0
   2e328:	b.eq	2e340 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50b8>  // b.none
   2e32c:	ldr	x0, [sp, #48]
   2e330:	bl	1c568 <__sanitizer_set_report_fd@@Base+0x23bc>
   2e334:	mov	w1, w0
   2e338:	ldr	x0, [sp, #24]
   2e33c:	str	w1, [x0]
   2e340:	ldr	x0, [sp, #48]
   2e344:	mov	x1, #0x0                   	// #0
   2e348:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   2e34c:	ldr	x0, [sp, #56]
   2e350:	ldr	x30, [sp], #64
   2e354:	ret
   2e358:	str	x30, [sp, #-64]!
   2e35c:	str	x0, [sp, #40]
   2e360:	str	x1, [sp, #32]
   2e364:	str	x2, [sp, #24]
   2e368:	add	x0, sp, #0x30
   2e36c:	mov	x2, x0
   2e370:	ldr	x1, [sp, #32]
   2e374:	ldr	x0, [sp, #40]
   2e378:	bl	2e258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fd0>
   2e37c:	str	x0, [sp, #56]
   2e380:	ldr	x0, [sp, #48]
   2e384:	cmp	x0, #0x0
   2e388:	b.eq	2e3a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5118>  // b.none
   2e38c:	ldr	x0, [sp, #48]
   2e390:	bl	1c568 <__sanitizer_set_report_fd@@Base+0x23bc>
   2e394:	mov	x1, x0
   2e398:	ldr	x0, [sp, #24]
   2e39c:	str	x1, [x0]
   2e3a0:	ldr	x0, [sp, #48]
   2e3a4:	mov	x1, #0x0                   	// #0
   2e3a8:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   2e3ac:	ldr	x0, [sp, #56]
   2e3b0:	ldr	x30, [sp], #64
   2e3b4:	ret
   2e3b8:	str	x30, [sp, #-80]!
   2e3bc:	str	x0, [sp, #40]
   2e3c0:	str	x1, [sp, #32]
   2e3c4:	str	x2, [sp, #24]
   2e3c8:	ldr	x1, [sp, #32]
   2e3cc:	ldr	x0, [sp, #40]
   2e3d0:	bl	1d060 <__sanitizer_set_report_fd@@Base+0x2eb4>
   2e3d4:	str	x0, [sp, #64]
   2e3d8:	ldr	x0, [sp, #64]
   2e3dc:	cmp	x0, #0x0
   2e3e0:	b.eq	2e3f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x516c>  // b.none
   2e3e4:	ldr	x1, [sp, #64]
   2e3e8:	ldr	x0, [sp, #40]
   2e3ec:	sub	x0, x1, x0
   2e3f0:	b	2e3fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5174>
   2e3f4:	ldr	x0, [sp, #40]
   2e3f8:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   2e3fc:	str	x0, [sp, #56]
   2e400:	ldr	x0, [sp, #56]
   2e404:	add	x0, x0, #0x1
   2e408:	mov	x2, #0x0                   	// #0
   2e40c:	mov	x1, #0x0                   	// #0
   2e410:	bl	107a8 <__sancov_default_options@@Base+0x3fc>
   2e414:	mov	x1, x0
   2e418:	ldr	x0, [sp, #24]
   2e41c:	str	x1, [x0]
   2e420:	ldr	x0, [sp, #24]
   2e424:	ldr	x0, [x0]
   2e428:	ldr	x2, [sp, #56]
   2e42c:	ldr	x1, [sp, #40]
   2e430:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   2e434:	ldr	x0, [sp, #24]
   2e438:	ldr	x1, [x0]
   2e43c:	ldr	x0, [sp, #56]
   2e440:	add	x0, x1, x0
   2e444:	strb	wzr, [x0]
   2e448:	ldr	x1, [sp, #40]
   2e44c:	ldr	x0, [sp, #56]
   2e450:	add	x0, x1, x0
   2e454:	str	x0, [sp, #72]
   2e458:	ldr	x0, [sp, #72]
   2e45c:	ldrb	w0, [x0]
   2e460:	cmp	w0, #0x0
   2e464:	b.eq	2e480 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51f8>  // b.none
   2e468:	ldr	x0, [sp, #32]
   2e46c:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   2e470:	mov	x1, x0
   2e474:	ldr	x0, [sp, #72]
   2e478:	add	x0, x0, x1
   2e47c:	str	x0, [sp, #72]
   2e480:	ldr	x0, [sp, #72]
   2e484:	ldr	x30, [sp], #80
   2e488:	ret
   2e48c:	stp	x19, x20, [sp, #-128]!
   2e490:	str	x30, [sp, #16]
   2e494:	str	x0, [sp, #40]
   2e498:	str	x1, [sp, #32]
   2e49c:	ldr	x0, [sp, #40]
   2e4a0:	add	x1, x0, #0x70
   2e4a4:	add	x0, sp, #0x60
   2e4a8:	bl	1e018 <__sanitizer_set_report_fd@@Base+0x3e6c>
   2e4ac:	ldr	x0, [sp, #32]
   2e4b0:	bl	2d1ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f24>
   2e4b4:	str	x0, [sp, #120]
   2e4b8:	add	x2, sp, #0x4c
   2e4bc:	add	x1, sp, #0x50
   2e4c0:	add	x0, sp, #0x58
   2e4c4:	mov	x4, x2
   2e4c8:	mov	x3, x1
   2e4cc:	mov	x2, x0
   2e4d0:	ldr	x1, [sp, #32]
   2e4d4:	ldr	x0, [sp, #40]
   2e4d8:	bl	2e97c <__sanitizer_get_module_and_offset_for_pc@@Base+0x56f4>
   2e4dc:	and	w0, w0, #0xff
   2e4e0:	eor	w0, w0, #0x1
   2e4e4:	and	w0, w0, #0xff
   2e4e8:	cmp	w0, #0x0
   2e4ec:	b.eq	2e4f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5270>  // b.none
   2e4f0:	ldr	x19, [sp, #120]
   2e4f4:	b	2e5bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5334>
   2e4f8:	ldr	x0, [sp, #120]
   2e4fc:	add	x0, x0, #0x8
   2e500:	ldr	x1, [sp, #88]
   2e504:	ldr	x2, [sp, #80]
   2e508:	ldr	w3, [sp, #76]
   2e50c:	bl	2d138 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3eb0>
   2e510:	ldr	x0, [sp, #40]
   2e514:	add	x0, x0, #0xc8
   2e518:	str	x0, [sp, #112]
   2e51c:	ldr	x0, [sp, #112]
   2e520:	bl	2fb9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6914>
   2e524:	str	x0, [sp, #64]
   2e528:	ldr	x0, [sp, #112]
   2e52c:	bl	2fbc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6938>
   2e530:	str	x0, [sp, #56]
   2e534:	add	x0, sp, #0x40
   2e538:	ldr	x1, [sp, #56]
   2e53c:	bl	2fbe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6958>
   2e540:	and	w0, w0, #0xff
   2e544:	cmp	w0, #0x0
   2e548:	b.eq	2e5b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5330>  // b.none
   2e54c:	add	x0, sp, #0x40
   2e550:	bl	2fc34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x69ac>
   2e554:	str	x0, [sp, #104]
   2e558:	add	x0, sp, #0x30
   2e55c:	ldr	x1, [sp, #40]
   2e560:	bl	2d538 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42b0>
   2e564:	ldr	x0, [sp, #104]
   2e568:	ldr	x0, [x0]
   2e56c:	ldr	x3, [x0]
   2e570:	ldr	x2, [sp, #120]
   2e574:	ldr	x1, [sp, #32]
   2e578:	ldr	x0, [sp, #104]
   2e57c:	blr	x3
   2e580:	and	w0, w0, #0xff
   2e584:	cmp	w0, #0x0
   2e588:	b.eq	2e598 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5310>  // b.none
   2e58c:	ldr	x19, [sp, #120]
   2e590:	mov	w20, #0x0                   	// #0
   2e594:	b	2e59c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5314>
   2e598:	mov	w20, #0x1                   	// #1
   2e59c:	add	x0, sp, #0x30
   2e5a0:	bl	2d580 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42f8>
   2e5a4:	cmp	w20, #0x1
   2e5a8:	b.ne	2e5bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5334>  // b.any
   2e5ac:	add	x0, sp, #0x40
   2e5b0:	bl	2fc0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6984>
   2e5b4:	b	2e534 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52ac>
   2e5b8:	ldr	x19, [sp, #120]
   2e5bc:	add	x0, sp, #0x60
   2e5c0:	bl	1e048 <__sanitizer_set_report_fd@@Base+0x3e9c>
   2e5c4:	mov	x0, x19
   2e5c8:	ldr	x30, [sp, #16]
   2e5cc:	ldp	x19, x20, [sp], #128
   2e5d0:	ret
   2e5d4:	stp	x19, x20, [sp, #-144]!
   2e5d8:	str	x30, [sp, #16]
   2e5dc:	str	x0, [sp, #56]
   2e5e0:	str	x1, [sp, #48]
   2e5e4:	str	x2, [sp, #40]
   2e5e8:	mov	w19, #0x0                   	// #0
   2e5ec:	ldr	x0, [sp, #56]
   2e5f0:	add	x1, x0, #0x70
   2e5f4:	add	x0, sp, #0x78
   2e5f8:	bl	1e018 <__sanitizer_set_report_fd@@Base+0x3e6c>
   2e5fc:	add	x2, sp, #0x64
   2e600:	add	x1, sp, #0x68
   2e604:	add	x0, sp, #0x70
   2e608:	mov	x4, x2
   2e60c:	mov	x3, x1
   2e610:	mov	x2, x0
   2e614:	ldr	x1, [sp, #48]
   2e618:	ldr	x0, [sp, #56]
   2e61c:	bl	2e97c <__sanitizer_get_module_and_offset_for_pc@@Base+0x56f4>
   2e620:	and	w0, w0, #0xff
   2e624:	eor	w0, w0, #0x1
   2e628:	and	w0, w0, #0xff
   2e62c:	cmp	w0, #0x0
   2e630:	b.eq	2e63c <__sanitizer_get_module_and_offset_for_pc@@Base+0x53b4>  // b.none
   2e634:	mov	w19, #0x0                   	// #0
   2e638:	b	2e720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5498>
   2e63c:	ldr	x0, [sp, #40]
   2e640:	bl	2d26c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fe4>
   2e644:	ldr	x0, [sp, #112]
   2e648:	bl	1ca68 <__sanitizer_set_report_fd@@Base+0x28bc>
   2e64c:	mov	x1, x0
   2e650:	ldr	x0, [sp, #40]
   2e654:	str	x1, [x0]
   2e658:	ldr	x1, [sp, #104]
   2e65c:	ldr	x0, [sp, #40]
   2e660:	str	x1, [x0, #8]
   2e664:	ldr	w1, [sp, #100]
   2e668:	ldr	x0, [sp, #40]
   2e66c:	str	w1, [x0, #16]
   2e670:	ldr	x0, [sp, #56]
   2e674:	add	x0, x0, #0xc8
   2e678:	str	x0, [sp, #136]
   2e67c:	ldr	x0, [sp, #136]
   2e680:	bl	2fb9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6914>
   2e684:	str	x0, [sp, #88]
   2e688:	ldr	x0, [sp, #136]
   2e68c:	bl	2fbc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6938>
   2e690:	str	x0, [sp, #80]
   2e694:	add	x0, sp, #0x58
   2e698:	ldr	x1, [sp, #80]
   2e69c:	bl	2fbe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6958>
   2e6a0:	and	w0, w0, #0xff
   2e6a4:	cmp	w0, #0x0
   2e6a8:	b.eq	2e71c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5494>  // b.none
   2e6ac:	add	x0, sp, #0x58
   2e6b0:	bl	2fc34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x69ac>
   2e6b4:	str	x0, [sp, #128]
   2e6b8:	add	x0, sp, #0x48
   2e6bc:	ldr	x1, [sp, #56]
   2e6c0:	bl	2d538 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42b0>
   2e6c4:	ldr	x0, [sp, #128]
   2e6c8:	ldr	x0, [x0]
   2e6cc:	add	x0, x0, #0x8
   2e6d0:	ldr	x3, [x0]
   2e6d4:	ldr	x2, [sp, #40]
   2e6d8:	ldr	x1, [sp, #48]
   2e6dc:	ldr	x0, [sp, #128]
   2e6e0:	blr	x3
   2e6e4:	and	w0, w0, #0xff
   2e6e8:	cmp	w0, #0x0
   2e6ec:	b.eq	2e6fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5474>  // b.none
   2e6f0:	mov	w19, #0x1                   	// #1
   2e6f4:	mov	w20, #0x0                   	// #0
   2e6f8:	b	2e700 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5478>
   2e6fc:	mov	w20, #0x1                   	// #1
   2e700:	add	x0, sp, #0x48
   2e704:	bl	2d580 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42f8>
   2e708:	cmp	w20, #0x1
   2e70c:	b.ne	2e720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5498>  // b.any
   2e710:	add	x0, sp, #0x58
   2e714:	bl	2fc0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6984>
   2e718:	b	2e694 <__sanitizer_get_module_and_offset_for_pc@@Base+0x540c>
   2e71c:	mov	w19, #0x1                   	// #1
   2e720:	add	x0, sp, #0x78
   2e724:	bl	1e048 <__sanitizer_set_report_fd@@Base+0x3e9c>
   2e728:	mov	w0, w19
   2e72c:	ldr	x30, [sp, #16]
   2e730:	ldp	x19, x20, [sp], #144
   2e734:	ret
   2e738:	stp	x19, x30, [sp, #-80]!
   2e73c:	str	x0, [sp, #40]
   2e740:	str	x1, [sp, #32]
   2e744:	str	x2, [sp, #24]
   2e748:	str	x3, [sp, #16]
   2e74c:	ldr	x0, [sp, #40]
   2e750:	add	x1, x0, #0x70
   2e754:	add	x0, sp, #0x48
   2e758:	bl	1e018 <__sanitizer_set_report_fd@@Base+0x3e6c>
   2e75c:	str	xzr, [sp, #64]
   2e760:	add	x1, sp, #0x3c
   2e764:	add	x0, sp, #0x40
   2e768:	mov	x4, x1
   2e76c:	ldr	x3, [sp, #16]
   2e770:	mov	x2, x0
   2e774:	ldr	x1, [sp, #32]
   2e778:	ldr	x0, [sp, #40]
   2e77c:	bl	2e97c <__sanitizer_get_module_and_offset_for_pc@@Base+0x56f4>
   2e780:	and	w0, w0, #0xff
   2e784:	eor	w0, w0, #0x1
   2e788:	and	w0, w0, #0xff
   2e78c:	cmp	w0, #0x0
   2e790:	b.eq	2e79c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5514>  // b.none
   2e794:	mov	w19, #0x0                   	// #0
   2e798:	b	2e7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x553c>
   2e79c:	ldr	x0, [sp, #24]
   2e7a0:	cmp	x0, #0x0
   2e7a4:	b.eq	2e7c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5538>  // b.none
   2e7a8:	ldr	x0, [sp, #40]
   2e7ac:	ldr	x1, [sp, #64]
   2e7b0:	bl	2d388 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4100>
   2e7b4:	mov	x1, x0
   2e7b8:	ldr	x0, [sp, #24]
   2e7bc:	str	x1, [x0]
   2e7c0:	mov	w19, #0x1                   	// #1
   2e7c4:	add	x0, sp, #0x48
   2e7c8:	bl	1e048 <__sanitizer_set_report_fd@@Base+0x3e9c>
   2e7cc:	mov	w0, w19
   2e7d0:	ldp	x19, x30, [sp], #80
   2e7d4:	ret
   2e7d8:	str	x30, [sp, #-80]!
   2e7dc:	str	x0, [sp, #24]
   2e7e0:	ldr	x0, [sp, #24]
   2e7e4:	add	x1, x0, #0x70
   2e7e8:	add	x0, sp, #0x38
   2e7ec:	bl	1e018 <__sanitizer_set_report_fd@@Base+0x3e6c>
   2e7f0:	ldr	x0, [sp, #24]
   2e7f4:	add	x0, x0, #0xc8
   2e7f8:	str	x0, [sp, #72]
   2e7fc:	ldr	x0, [sp, #72]
   2e800:	bl	2fb9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6914>
   2e804:	str	x0, [sp, #48]
   2e808:	ldr	x0, [sp, #72]
   2e80c:	bl	2fbc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6938>
   2e810:	str	x0, [sp, #40]
   2e814:	add	x0, sp, #0x30
   2e818:	ldr	x1, [sp, #40]
   2e81c:	bl	2fbe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6958>
   2e820:	and	w0, w0, #0xff
   2e824:	cmp	w0, #0x0
   2e828:	b.eq	2e870 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55e8>  // b.none
   2e82c:	add	x0, sp, #0x30
   2e830:	bl	2fc34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x69ac>
   2e834:	str	x0, [sp, #64]
   2e838:	add	x0, sp, #0x20
   2e83c:	ldr	x1, [sp, #24]
   2e840:	bl	2d538 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42b0>
   2e844:	ldr	x0, [sp, #64]
   2e848:	ldr	x0, [x0]
   2e84c:	add	x0, x0, #0x10
   2e850:	ldr	x1, [x0]
   2e854:	ldr	x0, [sp, #64]
   2e858:	blr	x1
   2e85c:	add	x0, sp, #0x20
   2e860:	bl	2d580 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42f8>
   2e864:	add	x0, sp, #0x30
   2e868:	bl	2fc0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6984>
   2e86c:	b	2e814 <__sanitizer_get_module_and_offset_for_pc@@Base+0x558c>
   2e870:	add	x0, sp, #0x38
   2e874:	bl	1e048 <__sanitizer_set_report_fd@@Base+0x3e9c>
   2e878:	nop
   2e87c:	ldr	x30, [sp], #80
   2e880:	ret
   2e884:	stp	x19, x20, [sp, #-112]!
   2e888:	str	x30, [sp, #16]
   2e88c:	str	x0, [sp, #40]
   2e890:	str	x1, [sp, #32]
   2e894:	ldr	x0, [sp, #40]
   2e898:	add	x1, x0, #0x70
   2e89c:	add	x0, sp, #0x50
   2e8a0:	bl	1e018 <__sanitizer_set_report_fd@@Base+0x3e6c>
   2e8a4:	ldr	x0, [sp, #40]
   2e8a8:	add	x0, x0, #0xc8
   2e8ac:	str	x0, [sp, #104]
   2e8b0:	ldr	x0, [sp, #104]
   2e8b4:	bl	2fb9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6914>
   2e8b8:	str	x0, [sp, #72]
   2e8bc:	ldr	x0, [sp, #104]
   2e8c0:	bl	2fbc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6938>
   2e8c4:	str	x0, [sp, #64]
   2e8c8:	add	x0, sp, #0x48
   2e8cc:	ldr	x1, [sp, #64]
   2e8d0:	bl	2fbe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6958>
   2e8d4:	and	w0, w0, #0xff
   2e8d8:	cmp	w0, #0x0
   2e8dc:	b.eq	2e950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56c8>  // b.none
   2e8e0:	add	x0, sp, #0x48
   2e8e4:	bl	2fc34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x69ac>
   2e8e8:	str	x0, [sp, #96]
   2e8ec:	add	x0, sp, #0x38
   2e8f0:	ldr	x1, [sp, #40]
   2e8f4:	bl	2d538 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42b0>
   2e8f8:	ldr	x0, [sp, #96]
   2e8fc:	ldr	x0, [x0]
   2e900:	add	x0, x0, #0x18
   2e904:	ldr	x2, [x0]
   2e908:	ldr	x1, [sp, #32]
   2e90c:	ldr	x0, [sp, #96]
   2e910:	blr	x2
   2e914:	str	x0, [sp, #88]
   2e918:	ldr	x0, [sp, #88]
   2e91c:	cmp	x0, #0x0
   2e920:	b.eq	2e930 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56a8>  // b.none
   2e924:	ldr	x20, [sp, #88]
   2e928:	mov	w19, #0x0                   	// #0
   2e92c:	b	2e934 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56ac>
   2e930:	mov	w19, #0x1                   	// #1
   2e934:	add	x0, sp, #0x38
   2e938:	bl	2d580 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42f8>
   2e93c:	cmp	w19, #0x1
   2e940:	b.ne	2e964 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56dc>  // b.any
   2e944:	add	x0, sp, #0x48
   2e948:	bl	2fc0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6984>
   2e94c:	b	2e8c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5640>
   2e950:	ldr	x1, [sp, #32]
   2e954:	ldr	x0, [sp, #40]
   2e958:	bl	30300 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7078>
   2e95c:	mov	x20, x0
   2e960:	nop
   2e964:	add	x0, sp, #0x50
   2e968:	bl	1e048 <__sanitizer_set_report_fd@@Base+0x3e9c>
   2e96c:	mov	x0, x20
   2e970:	ldr	x30, [sp, #16]
   2e974:	ldp	x19, x20, [sp], #112
   2e978:	ret
   2e97c:	str	x30, [sp, #-80]!
   2e980:	str	x0, [sp, #56]
   2e984:	str	x1, [sp, #48]
   2e988:	str	x2, [sp, #40]
   2e98c:	str	x3, [sp, #32]
   2e990:	str	x4, [sp, #24]
   2e994:	ldr	x1, [sp, #48]
   2e998:	ldr	x0, [sp, #56]
   2e99c:	bl	2eb00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5878>
   2e9a0:	str	x0, [sp, #72]
   2e9a4:	ldr	x0, [sp, #72]
   2e9a8:	cmp	x0, #0x0
   2e9ac:	b.ne	2e9b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5730>  // b.any
   2e9b0:	mov	w0, #0x0                   	// #0
   2e9b4:	b	2ea00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5778>
   2e9b8:	ldr	x0, [sp, #72]
   2e9bc:	bl	1ddb8 <__sanitizer_set_report_fd@@Base+0x3c0c>
   2e9c0:	mov	x1, x0
   2e9c4:	ldr	x0, [sp, #40]
   2e9c8:	str	x1, [x0]
   2e9cc:	ldr	x0, [sp, #72]
   2e9d0:	bl	2f83c <__sanitizer_get_module_and_offset_for_pc@@Base+0x65b4>
   2e9d4:	mov	x1, x0
   2e9d8:	ldr	x0, [sp, #48]
   2e9dc:	sub	x1, x0, x1
   2e9e0:	ldr	x0, [sp, #32]
   2e9e4:	str	x1, [x0]
   2e9e8:	ldr	x0, [sp, #72]
   2e9ec:	bl	2f854 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65cc>
   2e9f0:	mov	w1, w0
   2e9f4:	ldr	x0, [sp, #24]
   2e9f8:	str	w1, [x0]
   2e9fc:	mov	w0, #0x1                   	// #1
   2ea00:	ldr	x30, [sp], #80
   2ea04:	ret
   2ea08:	str	x30, [sp, #-32]!
   2ea0c:	str	x0, [sp, #24]
   2ea10:	ldr	x0, [sp, #24]
   2ea14:	add	x0, x0, #0x28
   2ea18:	bl	21610 <__sanitizer_set_report_fd@@Base+0x7464>
   2ea1c:	ldr	x0, [sp, #24]
   2ea20:	add	x0, x0, #0x48
   2ea24:	bl	21670 <__sanitizer_set_report_fd@@Base+0x74c4>
   2ea28:	ldr	x0, [sp, #24]
   2ea2c:	add	x0, x0, #0x28
   2ea30:	bl	2f86c <__sanitizer_get_module_and_offset_for_pc@@Base+0x65e4>
   2ea34:	cmp	x0, #0x0
   2ea38:	cset	w0, eq  // eq = none
   2ea3c:	and	w0, w0, #0xff
   2ea40:	and	x0, x0, #0xff
   2ea44:	cmp	x0, #0x0
   2ea48:	cset	w0, ne  // ne = any
   2ea4c:	and	w0, w0, #0xff
   2ea50:	cmp	w0, #0x0
   2ea54:	b.eq	2ea68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57e0>  // b.none
   2ea58:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2ea5c:	add	x0, x0, #0xd68
   2ea60:	bl	19814 <__sanitizer_cov_pcs_init@@Base+0x3d50>
   2ea64:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2ea68:	ldr	x0, [sp, #24]
   2ea6c:	mov	w1, #0x1                   	// #1
   2ea70:	strb	w1, [x0, #104]
   2ea74:	nop
   2ea78:	ldr	x30, [sp], #32
   2ea7c:	ret
   2ea80:	str	x30, [sp, #-48]!
   2ea84:	str	x0, [sp, #24]
   2ea88:	str	x1, [sp, #16]
   2ea8c:	str	xzr, [sp, #40]
   2ea90:	ldr	x0, [sp, #24]
   2ea94:	bl	2f86c <__sanitizer_get_module_and_offset_for_pc@@Base+0x65e4>
   2ea98:	mov	x1, x0
   2ea9c:	ldr	x0, [sp, #40]
   2eaa0:	cmp	x0, x1
   2eaa4:	cset	w0, cc  // cc = lo, ul, last
   2eaa8:	and	w0, w0, #0xff
   2eaac:	cmp	w0, #0x0
   2eab0:	b.eq	2eaf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x586c>  // b.none
   2eab4:	ldr	x1, [sp, #40]
   2eab8:	ldr	x0, [sp, #24]
   2eabc:	bl	2f884 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65fc>
   2eac0:	ldr	x1, [sp, #16]
   2eac4:	bl	141fc <__sancov_default_options@@Base+0x3e50>
   2eac8:	and	w0, w0, #0xff
   2eacc:	cmp	w0, #0x0
   2ead0:	b.eq	2eae4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x585c>  // b.none
   2ead4:	ldr	x1, [sp, #40]
   2ead8:	ldr	x0, [sp, #24]
   2eadc:	bl	2f884 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65fc>
   2eae0:	b	2eaf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5870>
   2eae4:	ldr	x0, [sp, #40]
   2eae8:	add	x0, x0, #0x1
   2eaec:	str	x0, [sp, #40]
   2eaf0:	b	2ea90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5808>
   2eaf4:	mov	x0, #0x0                   	// #0
   2eaf8:	ldr	x30, [sp], #48
   2eafc:	ret
   2eb00:	str	x30, [sp, #-48]!
   2eb04:	str	x0, [sp, #24]
   2eb08:	str	x1, [sp, #16]
   2eb0c:	strb	wzr, [sp, #47]
   2eb10:	ldr	x0, [sp, #24]
   2eb14:	ldrb	w0, [x0, #104]
   2eb18:	eor	w0, w0, #0x1
   2eb1c:	and	w0, w0, #0xff
   2eb20:	cmp	w0, #0x0
   2eb24:	b.eq	2eb38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58b0>  // b.none
   2eb28:	ldr	x0, [sp, #24]
   2eb2c:	bl	2ea08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5780>
   2eb30:	mov	w0, #0x1                   	// #1
   2eb34:	strb	w0, [sp, #47]
   2eb38:	ldr	x0, [sp, #24]
   2eb3c:	add	x0, x0, #0x28
   2eb40:	ldr	x1, [sp, #16]
   2eb44:	bl	2ea80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57f8>
   2eb48:	str	x0, [sp, #32]
   2eb4c:	ldr	x0, [sp, #32]
   2eb50:	cmp	x0, #0x0
   2eb54:	b.eq	2eb60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58d8>  // b.none
   2eb58:	ldr	x0, [sp, #32]
   2eb5c:	b	2ebdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5954>
   2eb60:	ldrb	w0, [sp, #47]
   2eb64:	eor	w0, w0, #0x1
   2eb68:	and	w0, w0, #0xff
   2eb6c:	cmp	w0, #0x0
   2eb70:	b.eq	2eba4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x591c>  // b.none
   2eb74:	ldr	x0, [sp, #24]
   2eb78:	bl	2ea08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5780>
   2eb7c:	ldr	x0, [sp, #24]
   2eb80:	add	x0, x0, #0x28
   2eb84:	ldr	x1, [sp, #16]
   2eb88:	bl	2ea80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57f8>
   2eb8c:	str	x0, [sp, #32]
   2eb90:	ldr	x0, [sp, #32]
   2eb94:	cmp	x0, #0x0
   2eb98:	b.eq	2eba4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x591c>  // b.none
   2eb9c:	ldr	x0, [sp, #32]
   2eba0:	b	2ebdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5954>
   2eba4:	ldr	x0, [sp, #24]
   2eba8:	add	x0, x0, #0x48
   2ebac:	bl	2f86c <__sanitizer_get_module_and_offset_for_pc@@Base+0x65e4>
   2ebb0:	cmp	x0, #0x0
   2ebb4:	cset	w0, ne  // ne = any
   2ebb8:	and	w0, w0, #0xff
   2ebbc:	cmp	w0, #0x0
   2ebc0:	b.eq	2ebd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>  // b.none
   2ebc4:	ldr	x0, [sp, #24]
   2ebc8:	add	x0, x0, #0x48
   2ebcc:	ldr	x1, [sp, #16]
   2ebd0:	bl	2ea80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57f8>
   2ebd4:	str	x0, [sp, #32]
   2ebd8:	ldr	x0, [sp, #32]
   2ebdc:	ldr	x30, [sp], #48
   2ebe0:	ret
   2ebe4:	stp	x19, x30, [sp, #-48]!
   2ebe8:	str	x0, [sp, #40]
   2ebec:	str	x1, [sp, #32]
   2ebf0:	str	x2, [sp, #24]
   2ebf4:	ldr	x0, [sp, #40]
   2ebf8:	bl	2e048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dc0>
   2ebfc:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   2ec00:	add	x1, x0, #0xec0
   2ec04:	ldr	x0, [sp, #40]
   2ec08:	str	x1, [x0]
   2ec0c:	ldr	x1, [sp, #24]
   2ec10:	mov	x0, #0x4028                	// #16424
   2ec14:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
   2ec18:	mov	x19, x0
   2ec1c:	ldr	x1, [sp, #32]
   2ec20:	mov	x0, x19
   2ec24:	bl	2f9b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6728>
   2ec28:	ldr	x0, [sp, #40]
   2ec2c:	str	x19, [x0, #16]
   2ec30:	nop
   2ec34:	ldp	x19, x30, [sp], #48
   2ec38:	ret
   2ec3c:	str	x30, [sp, #-80]!
   2ec40:	str	x0, [sp, #24]
   2ec44:	str	x1, [sp, #16]
   2ec48:	str	xzr, [sp, #32]
   2ec4c:	add	x0, sp, #0x20
   2ec50:	mov	x2, x0
   2ec54:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2ec58:	add	x1, x0, #0xdc0
   2ec5c:	ldr	x0, [sp, #16]
   2ec60:	bl	2e258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fd0>
   2ec64:	str	x0, [sp, #16]
   2ec68:	ldr	x0, [sp, #32]
   2ec6c:	str	x0, [sp, #56]
   2ec70:	str	xzr, [sp, #48]
   2ec74:	ldr	x1, [sp, #56]
   2ec78:	ldr	x0, [sp, #48]
   2ec7c:	cmp	x1, x0
   2ec80:	cset	w0, eq  // eq = none
   2ec84:	and	w0, w0, #0xff
   2ec88:	and	x0, x0, #0xff
   2ec8c:	cmp	x0, #0x0
   2ec90:	b.eq	2ecb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a2c>  // b.none
   2ec94:	ldr	x4, [sp, #48]
   2ec98:	ldr	x3, [sp, #56]
   2ec9c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2eca0:	add	x2, x0, #0xdc8
   2eca4:	mov	w1, #0x10d                 	// #269
   2eca8:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2ecac:	add	x0, x0, #0xd18
   2ecb0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2ecb4:	ldr	x0, [sp, #32]
   2ecb8:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   2ecbc:	str	x0, [sp, #40]
   2ecc0:	ldr	x0, [sp, #40]
   2ecc4:	cmp	x0, #0x0
   2ecc8:	b.eq	2edf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b6c>  // b.none
   2eccc:	ldr	x1, [sp, #32]
   2ecd0:	ldr	x0, [sp, #40]
   2ecd4:	sub	x0, x0, #0x1
   2ecd8:	add	x0, x1, x0
   2ecdc:	str	x0, [sp, #72]
   2ece0:	str	wzr, [sp, #68]
   2ece4:	ldr	w0, [sp, #68]
   2ece8:	cmp	w0, #0x1
   2ecec:	b.gt	2edd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b4c>
   2ecf0:	ldr	x0, [sp, #32]
   2ecf4:	ldr	x1, [sp, #72]
   2ecf8:	cmp	x1, x0
   2ecfc:	b.ls	2ed20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a98>  // b.plast
   2ed00:	ldr	x0, [sp, #72]
   2ed04:	ldrb	w0, [x0]
   2ed08:	bl	1d510 <__sanitizer_set_report_fd@@Base+0x3364>
   2ed0c:	and	w0, w0, #0xff
   2ed10:	cmp	w0, #0x0
   2ed14:	b.eq	2ed20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a98>  // b.none
   2ed18:	mov	w0, #0x1                   	// #1
   2ed1c:	b	2ed24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a9c>
   2ed20:	mov	w0, #0x0                   	// #0
   2ed24:	cmp	w0, #0x0
   2ed28:	b.eq	2ed3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ab4>  // b.none
   2ed2c:	ldr	x0, [sp, #72]
   2ed30:	sub	x0, x0, #0x1
   2ed34:	str	x0, [sp, #72]
   2ed38:	b	2ecf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a68>
   2ed3c:	ldr	x0, [sp, #72]
   2ed40:	ldrb	w0, [x0]
   2ed44:	cmp	w0, #0x3a
   2ed48:	b.ne	2ed70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ae8>  // b.any
   2ed4c:	ldr	x0, [sp, #72]
   2ed50:	add	x0, x0, #0x1
   2ed54:	ldrb	w0, [x0]
   2ed58:	bl	1d510 <__sanitizer_set_report_fd@@Base+0x3364>
   2ed5c:	and	w0, w0, #0xff
   2ed60:	eor	w0, w0, #0x1
   2ed64:	and	w0, w0, #0xff
   2ed68:	cmp	w0, #0x0
   2ed6c:	b.eq	2ed78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5af0>  // b.none
   2ed70:	mov	w0, #0x1                   	// #1
   2ed74:	b	2ed7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5af4>
   2ed78:	mov	w0, #0x0                   	// #0
   2ed7c:	cmp	w0, #0x0
   2ed80:	b.ne	2edd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b48>  // b.any
   2ed84:	ldr	x0, [sp, #24]
   2ed88:	ldr	w1, [x0, #56]
   2ed8c:	ldr	x0, [sp, #24]
   2ed90:	str	w1, [x0, #60]
   2ed94:	ldr	x0, [sp, #72]
   2ed98:	add	x0, x0, #0x1
   2ed9c:	bl	1c568 <__sanitizer_set_report_fd@@Base+0x23bc>
   2eda0:	mov	w1, w0
   2eda4:	ldr	x0, [sp, #24]
   2eda8:	str	w1, [x0, #56]
   2edac:	ldr	x0, [sp, #72]
   2edb0:	strb	wzr, [x0]
   2edb4:	ldr	x0, [sp, #72]
   2edb8:	sub	x0, x0, #0x1
   2edbc:	str	x0, [sp, #72]
   2edc0:	ldr	w0, [sp, #68]
   2edc4:	add	w0, w0, #0x1
   2edc8:	str	w0, [sp, #68]
   2edcc:	b	2ece4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a5c>
   2edd0:	nop
   2edd4:	ldr	x3, [sp, #32]
   2edd8:	ldr	x0, [sp, #24]
   2eddc:	add	x0, x0, #0x30
   2ede0:	mov	x2, x0
   2ede4:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2ede8:	add	x1, x0, #0xb48
   2edec:	mov	x0, x3
   2edf0:	bl	2e258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fd0>
   2edf4:	ldr	x0, [sp, #32]
   2edf8:	mov	x1, #0x0                   	// #0
   2edfc:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   2ee00:	ldr	x0, [sp, #16]
   2ee04:	ldr	x30, [sp], #80
   2ee08:	ret
   2ee0c:	str	x30, [sp, #-96]!
   2ee10:	str	x0, [sp, #24]
   2ee14:	str	x1, [sp, #16]
   2ee18:	mov	w0, #0x1                   	// #1
   2ee1c:	strb	w0, [sp, #95]
   2ee20:	ldr	x0, [sp, #16]
   2ee24:	str	x0, [sp, #80]
   2ee28:	str	xzr, [sp, #40]
   2ee2c:	add	x0, sp, #0x28
   2ee30:	mov	x2, x0
   2ee34:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2ee38:	add	x1, x0, #0xdc0
   2ee3c:	ldr	x0, [sp, #24]
   2ee40:	bl	2e258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fd0>
   2ee44:	str	x0, [sp, #24]
   2ee48:	ldr	x0, [sp, #40]
   2ee4c:	str	x0, [sp, #64]
   2ee50:	str	xzr, [sp, #56]
   2ee54:	ldr	x1, [sp, #64]
   2ee58:	ldr	x0, [sp, #56]
   2ee5c:	cmp	x1, x0
   2ee60:	cset	w0, eq  // eq = none
   2ee64:	and	w0, w0, #0xff
   2ee68:	and	x0, x0, #0xff
   2ee6c:	cmp	x0, #0x0
   2ee70:	b.eq	2ee94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c0c>  // b.none
   2ee74:	ldr	x4, [sp, #56]
   2ee78:	ldr	x3, [sp, #64]
   2ee7c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2ee80:	add	x2, x0, #0xde8
   2ee84:	mov	w1, #0x12c                 	// #300
   2ee88:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2ee8c:	add	x0, x0, #0xd18
   2ee90:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2ee94:	ldr	x0, [sp, #40]
   2ee98:	ldrb	w0, [x0]
   2ee9c:	cmp	w0, #0x0
   2eea0:	b.ne	2eeb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c2c>  // b.any
   2eea4:	ldr	x0, [sp, #40]
   2eea8:	mov	x1, #0x0                   	// #0
   2eeac:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   2eeb0:	b	2efd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d4c>
   2eeb4:	ldrb	w0, [sp, #95]
   2eeb8:	cmp	w0, #0x0
   2eebc:	b.eq	2eed0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c48>  // b.none
   2eec0:	ldr	x0, [sp, #16]
   2eec4:	str	x0, [sp, #72]
   2eec8:	strb	wzr, [sp, #95]
   2eecc:	b	2ef20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c98>
   2eed0:	ldr	x0, [sp, #16]
   2eed4:	ldr	x0, [x0, #8]
   2eed8:	bl	2d1ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f24>
   2eedc:	str	x0, [sp, #72]
   2eee0:	ldr	x0, [sp, #72]
   2eee4:	add	x4, x0, #0x8
   2eee8:	ldr	x0, [sp, #16]
   2eeec:	ldr	x1, [x0, #16]
   2eef0:	ldr	x0, [sp, #16]
   2eef4:	ldr	x2, [x0, #24]
   2eef8:	ldr	x0, [sp, #16]
   2eefc:	ldr	w0, [x0, #32]
   2ef00:	mov	w3, w0
   2ef04:	mov	x0, x4
   2ef08:	bl	2d138 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3eb0>
   2ef0c:	ldr	x0, [sp, #80]
   2ef10:	ldr	x1, [sp, #72]
   2ef14:	str	x1, [x0]
   2ef18:	ldr	x0, [sp, #72]
   2ef1c:	str	x0, [sp, #80]
   2ef20:	ldr	x0, [sp, #72]
   2ef24:	add	x0, x0, #0x8
   2ef28:	str	x0, [sp, #48]
   2ef2c:	ldr	x1, [sp, #40]
   2ef30:	ldr	x0, [sp, #48]
   2ef34:	str	x1, [x0, #32]
   2ef38:	ldr	x1, [sp, #24]
   2ef3c:	ldr	x0, [sp, #48]
   2ef40:	bl	2ec3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x59b4>
   2ef44:	str	x0, [sp, #24]
   2ef48:	ldr	x0, [sp, #48]
   2ef4c:	ldr	x2, [x0, #32]
   2ef50:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2ef54:	add	x1, x0, #0xe08
   2ef58:	mov	x0, x2
   2ef5c:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   2ef60:	cmp	w0, #0x0
   2ef64:	cset	w0, eq  // eq = none
   2ef68:	and	w0, w0, #0xff
   2ef6c:	cmp	w0, #0x0
   2ef70:	b.eq	2ef8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d04>  // b.none
   2ef74:	ldr	x0, [sp, #48]
   2ef78:	ldr	x0, [x0, #32]
   2ef7c:	mov	x1, #0x0                   	// #0
   2ef80:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   2ef84:	ldr	x0, [sp, #48]
   2ef88:	str	xzr, [x0, #32]
   2ef8c:	ldr	x0, [sp, #48]
   2ef90:	ldr	x2, [x0, #48]
   2ef94:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2ef98:	add	x1, x0, #0xe08
   2ef9c:	mov	x0, x2
   2efa0:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   2efa4:	cmp	w0, #0x0
   2efa8:	cset	w0, eq  // eq = none
   2efac:	and	w0, w0, #0xff
   2efb0:	cmp	w0, #0x0
   2efb4:	b.eq	2ee28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ba0>  // b.none
   2efb8:	ldr	x0, [sp, #48]
   2efbc:	ldr	x0, [x0, #48]
   2efc0:	mov	x1, #0x0                   	// #0
   2efc4:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   2efc8:	ldr	x0, [sp, #48]
   2efcc:	str	xzr, [x0, #48]
   2efd0:	b	2ee28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ba0>
   2efd4:	ldr	x30, [sp], #96
   2efd8:	ret
   2efdc:	str	x30, [sp, #-32]!
   2efe0:	str	x0, [sp, #24]
   2efe4:	str	x1, [sp, #16]
   2efe8:	ldr	x0, [sp, #16]
   2efec:	add	x0, x0, #0x28
   2eff0:	mov	x2, x0
   2eff4:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2eff8:	add	x1, x0, #0xdc0
   2effc:	ldr	x0, [sp, #24]
   2f000:	bl	2e258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fd0>
   2f004:	str	x0, [sp, #24]
   2f008:	ldr	x0, [sp, #16]
   2f00c:	add	x0, x0, #0x30
   2f010:	mov	x2, x0
   2f014:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f018:	add	x1, x0, #0xe10
   2f01c:	ldr	x0, [sp, #24]
   2f020:	bl	2e358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50d0>
   2f024:	str	x0, [sp, #24]
   2f028:	ldr	x0, [sp, #16]
   2f02c:	add	x0, x0, #0x38
   2f030:	mov	x2, x0
   2f034:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f038:	add	x1, x0, #0xdc0
   2f03c:	ldr	x0, [sp, #24]
   2f040:	bl	2e358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50d0>
   2f044:	str	x0, [sp, #24]
   2f048:	nop
   2f04c:	ldr	x30, [sp], #32
   2f050:	ret
   2f054:	str	x30, [sp, #-64]!
   2f058:	str	x0, [sp, #40]
   2f05c:	str	x1, [sp, #32]
   2f060:	str	x2, [sp, #24]
   2f064:	ldr	x0, [sp, #24]
   2f068:	add	x0, x0, #0x8
   2f06c:	str	x0, [sp, #56]
   2f070:	ldr	x0, [sp, #56]
   2f074:	ldr	x1, [x0, #8]
   2f078:	ldr	x0, [sp, #56]
   2f07c:	ldr	x2, [x0, #16]
   2f080:	ldr	x0, [sp, #56]
   2f084:	ldr	w0, [x0, #24]
   2f088:	mov	w4, w0
   2f08c:	mov	x3, x2
   2f090:	mov	x2, x1
   2f094:	mov	w1, #0x0                   	// #0
   2f098:	ldr	x0, [sp, #40]
   2f09c:	bl	2f164 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5edc>
   2f0a0:	str	x0, [sp, #48]
   2f0a4:	ldr	x0, [sp, #48]
   2f0a8:	cmp	x0, #0x0
   2f0ac:	b.eq	2f0c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e3c>  // b.none
   2f0b0:	ldr	x1, [sp, #24]
   2f0b4:	ldr	x0, [sp, #48]
   2f0b8:	bl	2ee0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b84>
   2f0bc:	mov	w0, #0x1                   	// #1
   2f0c0:	b	2f0c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e40>
   2f0c4:	mov	w0, #0x0                   	// #0
   2f0c8:	ldr	x30, [sp], #64
   2f0cc:	ret
   2f0d0:	str	x30, [sp, #-64]!
   2f0d4:	str	x0, [sp, #40]
   2f0d8:	str	x1, [sp, #32]
   2f0dc:	str	x2, [sp, #24]
   2f0e0:	ldr	x0, [sp, #24]
   2f0e4:	ldr	x1, [x0]
   2f0e8:	ldr	x0, [sp, #24]
   2f0ec:	ldr	x2, [x0, #8]
   2f0f0:	ldr	x0, [sp, #24]
   2f0f4:	ldr	w0, [x0, #16]
   2f0f8:	mov	w4, w0
   2f0fc:	mov	x3, x2
   2f100:	mov	x2, x1
   2f104:	mov	w1, #0x1                   	// #1
   2f108:	ldr	x0, [sp, #40]
   2f10c:	bl	2f164 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5edc>
   2f110:	str	x0, [sp, #56]
   2f114:	ldr	x0, [sp, #56]
   2f118:	cmp	x0, #0x0
   2f11c:	b.eq	2f158 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ed0>  // b.none
   2f120:	ldr	x1, [sp, #24]
   2f124:	ldr	x0, [sp, #56]
   2f128:	bl	2efdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d54>
   2f12c:	ldr	x0, [sp, #24]
   2f130:	ldr	x1, [x0, #48]
   2f134:	ldr	x0, [sp, #24]
   2f138:	ldr	x0, [x0, #8]
   2f13c:	ldr	x2, [sp, #32]
   2f140:	sub	x0, x2, x0
   2f144:	add	x1, x1, x0
   2f148:	ldr	x0, [sp, #24]
   2f14c:	str	x1, [x0, #48]
   2f150:	mov	w0, #0x1                   	// #1
   2f154:	b	2f15c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ed4>
   2f158:	mov	w0, #0x0                   	// #0
   2f15c:	ldr	x30, [sp], #64
   2f160:	ret
   2f164:	stp	x19, x30, [sp, #-80]!
   2f168:	str	x0, [sp, #40]
   2f16c:	strb	w1, [sp, #39]
   2f170:	str	x2, [sp, #24]
   2f174:	str	x3, [sp, #16]
   2f178:	str	w4, [sp, #32]
   2f17c:	ldr	x0, [sp, #24]
   2f180:	str	x0, [sp, #72]
   2f184:	str	xzr, [sp, #64]
   2f188:	ldr	x1, [sp, #72]
   2f18c:	ldr	x0, [sp, #64]
   2f190:	cmp	x1, x0
   2f194:	cset	w0, eq  // eq = none
   2f198:	and	w0, w0, #0xff
   2f19c:	and	x0, x0, #0xff
   2f1a0:	cmp	x0, #0x0
   2f1a4:	b.eq	2f1c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f40>  // b.none
   2f1a8:	ldr	x4, [sp, #64]
   2f1ac:	ldr	x3, [sp, #72]
   2f1b0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f1b4:	add	x2, x0, #0xe18
   2f1b8:	mov	w1, #0x173                 	// #371
   2f1bc:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f1c0:	add	x0, x0, #0xd18
   2f1c4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2f1c8:	ldrb	w0, [sp, #39]
   2f1cc:	cmp	w0, #0x0
   2f1d0:	b.eq	2f1e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f58>  // b.none
   2f1d4:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f1d8:	add	x0, x0, #0xe30
   2f1dc:	b	2f1e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f60>
   2f1e0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f1e4:	add	x0, x0, #0xb48
   2f1e8:	str	x0, [sp, #56]
   2f1ec:	ldr	w0, [sp, #32]
   2f1f0:	cmp	w0, #0x0
   2f1f4:	b.ne	2f250 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5fc8>  // b.any
   2f1f8:	ldr	x0, [sp, #40]
   2f1fc:	add	x6, x0, #0x18
   2f200:	ldr	x5, [sp, #16]
   2f204:	ldr	x4, [sp, #24]
   2f208:	ldr	x3, [sp, #56]
   2f20c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f210:	add	x2, x0, #0xe38
   2f214:	mov	x1, #0x4000                	// #16384
   2f218:	mov	x0, x6
   2f21c:	bl	25b20 <OnPrint@@Base+0x500>
   2f220:	mov	w1, w0
   2f224:	mov	w0, #0x3fff                	// #16383
   2f228:	cmp	w1, w0
   2f22c:	cset	w0, gt
   2f230:	and	w0, w0, #0xff
   2f234:	cmp	w0, #0x0
   2f238:	b.eq	2f2b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x602c>  // b.none
   2f23c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f240:	add	x0, x0, #0xe48
   2f244:	bl	25a74 <OnPrint@@Base+0x454>
   2f248:	mov	x0, #0x0                   	// #0
   2f24c:	b	2f2d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6050>
   2f250:	ldr	x0, [sp, #40]
   2f254:	add	x19, x0, #0x18
   2f258:	ldr	w0, [sp, #32]
   2f25c:	bl	2aab8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1830>
   2f260:	ldr	x6, [sp, #16]
   2f264:	mov	x5, x0
   2f268:	ldr	x4, [sp, #24]
   2f26c:	ldr	x3, [sp, #56]
   2f270:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f274:	add	x2, x0, #0xe70
   2f278:	mov	x1, #0x4000                	// #16384
   2f27c:	mov	x0, x19
   2f280:	bl	25b20 <OnPrint@@Base+0x500>
   2f284:	mov	w1, w0
   2f288:	mov	w0, #0x3fff                	// #16383
   2f28c:	cmp	w1, w0
   2f290:	cset	w0, gt
   2f294:	and	w0, w0, #0xff
   2f298:	cmp	w0, #0x0
   2f29c:	b.eq	2f2b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x602c>  // b.none
   2f2a0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f2a4:	add	x0, x0, #0xe48
   2f2a8:	bl	25a74 <OnPrint@@Base+0x454>
   2f2ac:	mov	x0, #0x0                   	// #0
   2f2b0:	b	2f2d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6050>
   2f2b4:	ldr	x0, [sp, #40]
   2f2b8:	ldr	x0, [x0, #16]
   2f2bc:	mov	x2, x0
   2f2c0:	ldr	x0, [sp, #40]
   2f2c4:	add	x0, x0, #0x18
   2f2c8:	mov	x1, x0
   2f2cc:	mov	x0, x2
   2f2d0:	bl	2f464 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61dc>
   2f2d4:	nop
   2f2d8:	ldp	x19, x30, [sp], #80
   2f2dc:	ret
   2f2e0:	str	x30, [sp, #-80]!
   2f2e4:	str	x0, [sp, #40]
   2f2e8:	str	x1, [sp, #32]
   2f2ec:	strb	w2, [sp, #31]
   2f2f0:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   2f2f4:	add	x1, x0, #0xe98
   2f2f8:	ldr	x0, [sp, #40]
   2f2fc:	str	x1, [x0]
   2f300:	ldr	x0, [sp, #40]
   2f304:	ldr	x1, [sp, #32]
   2f308:	str	x1, [x0, #8]
   2f30c:	ldr	x0, [sp, #40]
   2f310:	mov	w1, #0xffffffff            	// #-1
   2f314:	str	w1, [x0, #16]
   2f318:	ldr	x0, [sp, #40]
   2f31c:	mov	w1, #0xffffffff            	// #-1
   2f320:	str	w1, [x0, #20]
   2f324:	ldr	x0, [sp, #40]
   2f328:	str	xzr, [x0, #16408]
   2f32c:	ldr	x0, [sp, #40]
   2f330:	add	x0, x0, #0x4, lsl #12
   2f334:	strb	wzr, [x0, #32]
   2f338:	ldr	x0, [sp, #40]
   2f33c:	add	x0, x0, #0x4, lsl #12
   2f340:	strb	wzr, [x0, #33]
   2f344:	ldr	x0, [sp, #40]
   2f348:	add	x0, x0, #0x4, lsl #12
   2f34c:	ldrb	w1, [sp, #31]
   2f350:	strb	w1, [x0, #34]
   2f354:	ldr	x0, [sp, #40]
   2f358:	ldr	x0, [x0, #8]
   2f35c:	str	x0, [sp, #72]
   2f360:	str	xzr, [sp, #64]
   2f364:	ldr	x1, [sp, #72]
   2f368:	ldr	x0, [sp, #64]
   2f36c:	cmp	x1, x0
   2f370:	cset	w0, eq  // eq = none
   2f374:	and	w0, w0, #0xff
   2f378:	and	x0, x0, #0xff
   2f37c:	cmp	x0, #0x0
   2f380:	b.eq	2f3a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x611c>  // b.none
   2f384:	ldr	x4, [sp, #64]
   2f388:	ldr	x3, [sp, #72]
   2f38c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f390:	add	x2, x0, #0xe88
   2f394:	mov	w1, #0x18f                 	// #399
   2f398:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f39c:	add	x0, x0, #0xd18
   2f3a0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2f3a4:	ldr	x0, [sp, #40]
   2f3a8:	ldr	x0, [x0, #8]
   2f3ac:	ldrb	w0, [x0]
   2f3b0:	and	x0, x0, #0xff
   2f3b4:	str	x0, [sp, #56]
   2f3b8:	str	xzr, [sp, #48]
   2f3bc:	ldr	x1, [sp, #56]
   2f3c0:	ldr	x0, [sp, #48]
   2f3c4:	cmp	x1, x0
   2f3c8:	cset	w0, eq  // eq = none
   2f3cc:	and	w0, w0, #0xff
   2f3d0:	and	x0, x0, #0xff
   2f3d4:	cmp	x0, #0x0
   2f3d8:	b.eq	2f3fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6174>  // b.none
   2f3dc:	ldr	x4, [sp, #48]
   2f3e0:	ldr	x3, [sp, #56]
   2f3e4:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f3e8:	add	x2, x0, #0xea0
   2f3ec:	mov	w1, #0x190                 	// #400
   2f3f0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f3f4:	add	x0, x0, #0xd18
   2f3f8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2f3fc:	nop
   2f400:	ldr	x30, [sp], #80
   2f404:	ret
   2f408:	str	x30, [sp, #-48]!
   2f40c:	str	x0, [sp, #24]
   2f410:	bl	14598 <__sancov_default_options@@Base+0x41ec>
   2f414:	str	x0, [sp, #40]
   2f418:	ldr	x0, [sp, #40]
   2f41c:	cmp	x0, #0x0
   2f420:	b.eq	2f458 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61d0>  // b.none
   2f424:	ldr	x0, [sp, #24]
   2f428:	bl	13dec <__sancov_default_options@@Base+0x3a40>
   2f42c:	str	x0, [sp, #32]
   2f430:	ldr	x0, [sp, #32]
   2f434:	cmp	x0, #0x0
   2f438:	b.eq	2f458 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61d0>  // b.none
   2f43c:	ldr	x1, [sp, #32]
   2f440:	ldr	x0, [sp, #40]
   2f444:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   2f448:	cmp	w0, #0x0
   2f44c:	cset	w0, eq  // eq = none
   2f450:	and	w0, w0, #0xff
   2f454:	b	2f45c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61d4>
   2f458:	mov	w0, #0x0                   	// #0
   2f45c:	ldr	x30, [sp], #48
   2f460:	ret
   2f464:	str	x30, [sp, #-48]!
   2f468:	str	x0, [sp, #24]
   2f46c:	str	x1, [sp, #16]
   2f470:	ldr	x0, [sp, #24]
   2f474:	add	x0, x0, #0x4, lsl #12
   2f478:	ldrb	w0, [x0, #32]
   2f47c:	cmp	w0, #0x0
   2f480:	b.eq	2f48c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6204>  // b.none
   2f484:	mov	x0, #0x0                   	// #0
   2f488:	b	2f558 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62d0>
   2f48c:	ldr	x0, [sp, #24]
   2f490:	ldr	x0, [x0, #8]
   2f494:	bl	2f408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6180>
   2f498:	and	w0, w0, #0xff
   2f49c:	cmp	w0, #0x0
   2f4a0:	b.eq	2f4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6240>  // b.none
   2f4a4:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f4a8:	add	x0, x0, #0xec0
   2f4ac:	bl	25a74 <OnPrint@@Base+0x454>
   2f4b0:	ldr	x0, [sp, #24]
   2f4b4:	add	x0, x0, #0x4, lsl #12
   2f4b8:	mov	w1, #0x1                   	// #1
   2f4bc:	strb	w1, [x0, #32]
   2f4c0:	mov	x0, #0x0                   	// #0
   2f4c4:	b	2f558 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62d0>
   2f4c8:	ldr	x0, [sp, #24]
   2f4cc:	ldr	x0, [x0, #16408]
   2f4d0:	cmp	x0, #0x4
   2f4d4:	b.hi	2f51c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6294>  // b.pmore
   2f4d8:	ldr	x1, [sp, #16]
   2f4dc:	ldr	x0, [sp, #24]
   2f4e0:	bl	2f560 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62d8>
   2f4e4:	str	x0, [sp, #40]
   2f4e8:	ldr	x0, [sp, #40]
   2f4ec:	cmp	x0, #0x0
   2f4f0:	b.eq	2f4fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6274>  // b.none
   2f4f4:	ldr	x0, [sp, #40]
   2f4f8:	b	2f558 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62d0>
   2f4fc:	ldr	x0, [sp, #24]
   2f500:	bl	2f61c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6394>
   2f504:	ldr	x0, [sp, #24]
   2f508:	ldr	x0, [x0, #16408]
   2f50c:	add	x1, x0, #0x1
   2f510:	ldr	x0, [sp, #24]
   2f514:	str	x1, [x0, #16408]
   2f518:	b	2f4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6240>
   2f51c:	ldr	x0, [sp, #24]
   2f520:	add	x0, x0, #0x4, lsl #12
   2f524:	ldrb	w0, [x0, #32]
   2f528:	eor	w0, w0, #0x1
   2f52c:	and	w0, w0, #0xff
   2f530:	cmp	w0, #0x0
   2f534:	b.eq	2f554 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62cc>  // b.none
   2f538:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f53c:	add	x0, x0, #0xef8
   2f540:	bl	25a74 <OnPrint@@Base+0x454>
   2f544:	ldr	x0, [sp, #24]
   2f548:	add	x0, x0, #0x4, lsl #12
   2f54c:	mov	w1, #0x1                   	// #1
   2f550:	strb	w1, [x0, #32]
   2f554:	mov	x0, #0x0                   	// #0
   2f558:	ldr	x30, [sp], #48
   2f55c:	ret
   2f560:	str	x30, [sp, #-32]!
   2f564:	str	x0, [sp, #24]
   2f568:	str	x1, [sp, #16]
   2f56c:	ldr	x0, [sp, #24]
   2f570:	ldr	w0, [x0, #16]
   2f574:	cmn	w0, #0x1
   2f578:	b.eq	2f58c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6304>  // b.none
   2f57c:	ldr	x0, [sp, #24]
   2f580:	ldr	w0, [x0, #20]
   2f584:	cmn	w0, #0x1
   2f588:	b.ne	2f594 <__sanitizer_get_module_and_offset_for_pc@@Base+0x630c>  // b.any
   2f58c:	mov	x0, #0x0                   	// #0
   2f590:	b	2f614 <__sanitizer_get_module_and_offset_for_pc@@Base+0x638c>
   2f594:	ldr	x0, [sp, #16]
   2f598:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   2f59c:	mov	x2, x0
   2f5a0:	ldr	x1, [sp, #16]
   2f5a4:	ldr	x0, [sp, #24]
   2f5a8:	bl	2f7a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6518>
   2f5ac:	and	w0, w0, #0xff
   2f5b0:	eor	w0, w0, #0x1
   2f5b4:	and	w0, w0, #0xff
   2f5b8:	cmp	w0, #0x0
   2f5bc:	b.eq	2f5c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6340>  // b.none
   2f5c0:	mov	x0, #0x0                   	// #0
   2f5c4:	b	2f614 <__sanitizer_get_module_and_offset_for_pc@@Base+0x638c>
   2f5c8:	ldr	x0, [sp, #24]
   2f5cc:	ldr	x0, [x0]
   2f5d0:	add	x0, x0, #0x10
   2f5d4:	ldr	x3, [x0]
   2f5d8:	ldr	x0, [sp, #24]
   2f5dc:	add	x0, x0, #0x18
   2f5e0:	mov	x2, #0x4000                	// #16384
   2f5e4:	mov	x1, x0
   2f5e8:	ldr	x0, [sp, #24]
   2f5ec:	blr	x3
   2f5f0:	and	w0, w0, #0xff
   2f5f4:	eor	w0, w0, #0x1
   2f5f8:	and	w0, w0, #0xff
   2f5fc:	cmp	w0, #0x0
   2f600:	b.eq	2f60c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6384>  // b.none
   2f604:	mov	x0, #0x0                   	// #0
   2f608:	b	2f614 <__sanitizer_get_module_and_offset_for_pc@@Base+0x638c>
   2f60c:	ldr	x0, [sp, #24]
   2f610:	add	x0, x0, #0x18
   2f614:	ldr	x30, [sp], #32
   2f618:	ret
   2f61c:	str	x30, [sp, #-32]!
   2f620:	str	x0, [sp, #24]
   2f624:	ldr	x0, [sp, #24]
   2f628:	ldr	w0, [x0, #16]
   2f62c:	cmn	w0, #0x1
   2f630:	b.eq	2f640 <__sanitizer_get_module_and_offset_for_pc@@Base+0x63b8>  // b.none
   2f634:	ldr	x0, [sp, #24]
   2f638:	ldr	w0, [x0, #16]
   2f63c:	bl	227b0 <__sanitizer_set_report_fd@@Base+0x8604>
   2f640:	ldr	x0, [sp, #24]
   2f644:	ldr	w0, [x0, #20]
   2f648:	cmn	w0, #0x1
   2f64c:	b.eq	2f65c <__sanitizer_get_module_and_offset_for_pc@@Base+0x63d4>  // b.none
   2f650:	ldr	x0, [sp, #24]
   2f654:	ldr	w0, [x0, #20]
   2f658:	bl	227b0 <__sanitizer_set_report_fd@@Base+0x8604>
   2f65c:	ldr	x0, [sp, #24]
   2f660:	bl	30054 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6dcc>
   2f664:	and	w0, w0, #0xff
   2f668:	ldr	x30, [sp], #32
   2f66c:	ret
   2f670:	str	x30, [sp, #-80]!
   2f674:	str	x0, [sp, #40]
   2f678:	str	x1, [sp, #32]
   2f67c:	str	x2, [sp, #24]
   2f680:	ldr	x0, [sp, #24]
   2f684:	cmp	x0, #0x0
   2f688:	b.ne	2f694 <__sanitizer_get_module_and_offset_for_pc@@Base+0x640c>  // b.any
   2f68c:	mov	w0, #0x1                   	// #1
   2f690:	b	2f798 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6510>
   2f694:	str	xzr, [sp, #72]
   2f698:	str	xzr, [sp, #56]
   2f69c:	ldr	x0, [sp, #40]
   2f6a0:	ldr	w5, [x0, #16]
   2f6a4:	ldr	x1, [sp, #32]
   2f6a8:	ldr	x0, [sp, #72]
   2f6ac:	add	x6, x1, x0
   2f6b0:	ldr	x1, [sp, #24]
   2f6b4:	ldr	x0, [sp, #72]
   2f6b8:	sub	x0, x1, x0
   2f6bc:	sub	x0, x0, #0x1
   2f6c0:	add	x1, sp, #0x38
   2f6c4:	mov	x4, #0x0                   	// #0
   2f6c8:	mov	x3, x1
   2f6cc:	mov	x2, x0
   2f6d0:	mov	x1, x6
   2f6d4:	mov	w0, w5
   2f6d8:	bl	227cc <__sanitizer_set_report_fd@@Base+0x8620>
   2f6dc:	strb	w0, [sp, #71]
   2f6e0:	ldrb	w0, [sp, #71]
   2f6e4:	eor	w0, w0, #0x1
   2f6e8:	and	w0, w0, #0xff
   2f6ec:	cmp	w0, #0x0
   2f6f0:	b.ne	2f700 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6478>  // b.any
   2f6f4:	ldr	x0, [sp, #56]
   2f6f8:	cmp	x0, #0x0
   2f6fc:	b.ne	2f720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6498>  // b.any
   2f700:	ldr	x0, [sp, #40]
   2f704:	ldr	w0, [x0, #16]
   2f708:	mov	w1, w0
   2f70c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f710:	add	x0, x0, #0xf38
   2f714:	bl	25a74 <OnPrint@@Base+0x454>
   2f718:	mov	w0, #0x0                   	// #0
   2f71c:	b	2f798 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6510>
   2f720:	ldr	x0, [sp, #56]
   2f724:	ldr	x1, [sp, #72]
   2f728:	add	x0, x1, x0
   2f72c:	str	x0, [sp, #72]
   2f730:	ldr	x0, [sp, #40]
   2f734:	ldr	x0, [x0]
   2f738:	ldr	x3, [x0]
   2f73c:	ldr	x2, [sp, #72]
   2f740:	ldr	x1, [sp, #32]
   2f744:	ldr	x0, [sp, #40]
   2f748:	blr	x3
   2f74c:	and	w0, w0, #0xff
   2f750:	cmp	w0, #0x0
   2f754:	b.ne	2f780 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64f8>  // b.any
   2f758:	ldr	x0, [sp, #72]
   2f75c:	add	x0, x0, #0x1
   2f760:	ldr	x1, [sp, #24]
   2f764:	cmp	x1, x0
   2f768:	b.ne	2f698 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6410>  // b.any
   2f76c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f770:	add	x0, x0, #0xf68
   2f774:	bl	25a74 <OnPrint@@Base+0x454>
   2f778:	str	xzr, [sp, #72]
   2f77c:	b	2f784 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64fc>
   2f780:	nop
   2f784:	ldr	x1, [sp, #32]
   2f788:	ldr	x0, [sp, #72]
   2f78c:	add	x0, x1, x0
   2f790:	strb	wzr, [x0]
   2f794:	mov	w0, #0x1                   	// #1
   2f798:	ldr	x30, [sp], #80
   2f79c:	ret
   2f7a0:	str	x30, [sp, #-64]!
   2f7a4:	str	x0, [sp, #40]
   2f7a8:	str	x1, [sp, #32]
   2f7ac:	str	x2, [sp, #24]
   2f7b0:	ldr	x0, [sp, #24]
   2f7b4:	cmp	x0, #0x0
   2f7b8:	b.ne	2f7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x653c>  // b.any
   2f7bc:	mov	w0, #0x1                   	// #1
   2f7c0:	b	2f834 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65ac>
   2f7c4:	str	xzr, [sp, #48]
   2f7c8:	ldr	x0, [sp, #40]
   2f7cc:	ldr	w0, [x0, #20]
   2f7d0:	add	x1, sp, #0x30
   2f7d4:	mov	x4, #0x0                   	// #0
   2f7d8:	mov	x3, x1
   2f7dc:	ldr	x2, [sp, #24]
   2f7e0:	ldr	x1, [sp, #32]
   2f7e4:	bl	2283c <__sanitizer_set_report_fd@@Base+0x8690>
   2f7e8:	strb	w0, [sp, #63]
   2f7ec:	ldrb	w0, [sp, #63]
   2f7f0:	eor	w0, w0, #0x1
   2f7f4:	and	w0, w0, #0xff
   2f7f8:	cmp	w0, #0x0
   2f7fc:	b.ne	2f810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6588>  // b.any
   2f800:	ldr	x0, [sp, #48]
   2f804:	ldr	x1, [sp, #24]
   2f808:	cmp	x1, x0
   2f80c:	b.eq	2f830 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65a8>  // b.none
   2f810:	ldr	x0, [sp, #40]
   2f814:	ldr	w0, [x0, #20]
   2f818:	mov	w1, w0
   2f81c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f820:	add	x0, x0, #0xf90
   2f824:	bl	25a74 <OnPrint@@Base+0x454>
   2f828:	mov	w0, #0x0                   	// #0
   2f82c:	b	2f834 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65ac>
   2f830:	mov	w0, #0x1                   	// #1
   2f834:	ldr	x30, [sp], #64
   2f838:	ret
   2f83c:	sub	sp, sp, #0x10
   2f840:	str	x0, [sp, #8]
   2f844:	ldr	x0, [sp, #8]
   2f848:	ldr	x0, [x0, #8]
   2f84c:	add	sp, sp, #0x10
   2f850:	ret
   2f854:	sub	sp, sp, #0x10
   2f858:	str	x0, [sp, #8]
   2f85c:	ldr	x0, [sp, #8]
   2f860:	ldr	w0, [x0, #24]
   2f864:	add	sp, sp, #0x10
   2f868:	ret
   2f86c:	str	x30, [sp, #-32]!
   2f870:	str	x0, [sp, #24]
   2f874:	ldr	x0, [sp, #24]
   2f878:	bl	1dfe4 <__sanitizer_set_report_fd@@Base+0x3e38>
   2f87c:	ldr	x30, [sp], #32
   2f880:	ret
   2f884:	str	x30, [sp, #-48]!
   2f888:	str	x0, [sp, #24]
   2f88c:	str	x1, [sp, #16]
   2f890:	ldr	x0, [sp, #16]
   2f894:	str	x0, [sp, #40]
   2f898:	ldr	x0, [sp, #24]
   2f89c:	bl	1dfe4 <__sanitizer_set_report_fd@@Base+0x3e38>
   2f8a0:	str	x0, [sp, #32]
   2f8a4:	ldr	x1, [sp, #40]
   2f8a8:	ldr	x0, [sp, #32]
   2f8ac:	cmp	x1, x0
   2f8b0:	cset	w0, cs  // cs = hs, nlast
   2f8b4:	and	w0, w0, #0xff
   2f8b8:	and	x0, x0, #0xff
   2f8bc:	cmp	x0, #0x0
   2f8c0:	b.eq	2f8e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x665c>  // b.none
   2f8c4:	ldr	x4, [sp, #32]
   2f8c8:	ldr	x3, [sp, #40]
   2f8cc:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f8d0:	add	x2, x0, #0xc08
   2f8d4:	mov	w1, #0x2f9                 	// #761
   2f8d8:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f8dc:	add	x0, x0, #0xbb8
   2f8e0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2f8e4:	ldr	x0, [sp, #24]
   2f8e8:	ldr	x1, [sp, #16]
   2f8ec:	bl	2fb14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x688c>
   2f8f0:	ldr	x30, [sp], #48
   2f8f4:	ret
   2f8f8:	str	x30, [sp, #-64]!
   2f8fc:	str	x0, [sp, #40]
   2f900:	str	x1, [sp, #32]
   2f904:	str	x2, [sp, #24]
   2f908:	str	xzr, [sp, #56]
   2f90c:	str	xzr, [sp, #48]
   2f910:	ldr	x1, [sp, #56]
   2f914:	ldr	x0, [sp, #48]
   2f918:	cmp	x1, x0
   2f91c:	cset	w0, eq  // eq = none
   2f920:	and	w0, w0, #0xff
   2f924:	and	x0, x0, #0xff
   2f928:	cmp	x0, #0x0
   2f92c:	b.eq	2f950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66c8>  // b.none
   2f930:	ldr	x4, [sp, #48]
   2f934:	ldr	x3, [sp, #56]
   2f938:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f93c:	add	x2, x0, #0xc90
   2f940:	mov	w1, #0x4e                  	// #78
   2f944:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f948:	add	x0, x0, #0xcb0
   2f94c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2f950:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2f954:	str	x30, [sp, #-64]!
   2f958:	str	x0, [sp, #40]
   2f95c:	str	x1, [sp, #32]
   2f960:	str	x2, [sp, #24]
   2f964:	str	xzr, [sp, #56]
   2f968:	str	xzr, [sp, #48]
   2f96c:	ldr	x1, [sp, #56]
   2f970:	ldr	x0, [sp, #48]
   2f974:	cmp	x1, x0
   2f978:	cset	w0, eq  // eq = none
   2f97c:	and	w0, w0, #0xff
   2f980:	and	x0, x0, #0xff
   2f984:	cmp	x0, #0x0
   2f988:	b.eq	2f9ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x6724>  // b.none
   2f98c:	ldr	x4, [sp, #48]
   2f990:	ldr	x3, [sp, #56]
   2f994:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f998:	add	x2, x0, #0xc90
   2f99c:	mov	w1, #0x57                  	// #87
   2f9a0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2f9a4:	add	x0, x0, #0xcb0
   2f9a8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2f9ac:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   2f9b0:	str	x30, [sp, #-32]!
   2f9b4:	str	x0, [sp, #24]
   2f9b8:	str	x1, [sp, #16]
   2f9bc:	ldr	x0, [sp, #24]
   2f9c0:	mov	w2, #0x0                   	// #0
   2f9c4:	ldr	x1, [sp, #16]
   2f9c8:	bl	2f2e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6058>
   2f9cc:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   2f9d0:	add	x1, x0, #0xef0
   2f9d4:	ldr	x0, [sp, #24]
   2f9d8:	str	x1, [x0]
   2f9dc:	nop
   2f9e0:	ldr	x30, [sp], #32
   2f9e4:	ret
   2f9e8:	sub	sp, sp, #0x20
   2f9ec:	str	x0, [sp, #24]
   2f9f0:	str	x1, [sp, #16]
   2f9f4:	str	x2, [sp, #8]
   2f9f8:	ldr	x0, [sp, #8]
   2f9fc:	cmp	x0, #0x1
   2fa00:	b.ls	2fa44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x67bc>  // b.plast
   2fa04:	ldr	x0, [sp, #8]
   2fa08:	sub	x0, x0, #0x1
   2fa0c:	ldr	x1, [sp, #16]
   2fa10:	add	x0, x1, x0
   2fa14:	ldrb	w0, [x0]
   2fa18:	cmp	w0, #0xa
   2fa1c:	b.ne	2fa44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x67bc>  // b.any
   2fa20:	ldr	x0, [sp, #8]
   2fa24:	sub	x0, x0, #0x2
   2fa28:	ldr	x1, [sp, #16]
   2fa2c:	add	x0, x1, x0
   2fa30:	ldrb	w0, [x0]
   2fa34:	cmp	w0, #0xa
   2fa38:	b.ne	2fa44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x67bc>  // b.any
   2fa3c:	mov	w0, #0x1                   	// #1
   2fa40:	b	2fa48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x67c0>
   2fa44:	mov	w0, #0x0                   	// #0
   2fa48:	add	sp, sp, #0x20
   2fa4c:	ret
   2fa50:	str	x30, [sp, #-80]!
   2fa54:	str	x0, [sp, #40]
   2fa58:	str	x1, [sp, #32]
   2fa5c:	str	x2, [sp, #24]
   2fa60:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2fa64:	add	x0, x0, #0xd80
   2fa68:	str	x0, [sp, #72]
   2fa6c:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   2fa70:	ldrb	w0, [x0, #180]
   2fa74:	cmp	w0, #0x0
   2fa78:	b.eq	2fa88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6800>  // b.none
   2fa7c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2fa80:	add	x0, x0, #0xd98
   2fa84:	b	2fa90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6808>
   2fa88:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2fa8c:	add	x0, x0, #0xda8
   2fa90:	str	x0, [sp, #64]
   2fa94:	str	wzr, [sp, #60]
   2fa98:	ldr	w0, [sp, #60]
   2fa9c:	add	w1, w0, #0x1
   2faa0:	str	w1, [sp, #60]
   2faa4:	ldr	x1, [sp, #24]
   2faa8:	sxtw	x0, w0
   2faac:	ldr	x2, [sp, #32]
   2fab0:	str	x2, [x1, x0, lsl #3]
   2fab4:	ldr	w0, [sp, #60]
   2fab8:	add	w1, w0, #0x1
   2fabc:	str	w1, [sp, #60]
   2fac0:	ldr	x1, [sp, #24]
   2fac4:	sxtw	x0, w0
   2fac8:	ldr	x2, [sp, #64]
   2facc:	str	x2, [x1, x0, lsl #3]
   2fad0:	ldr	w0, [sp, #60]
   2fad4:	add	w1, w0, #0x1
   2fad8:	str	w1, [sp, #60]
   2fadc:	ldr	x1, [sp, #24]
   2fae0:	sxtw	x0, w0
   2fae4:	adrp	x2, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2fae8:	add	x2, x2, #0xd80
   2faec:	str	x2, [x1, x0, lsl #3]
   2faf0:	ldr	w0, [sp, #60]
   2faf4:	add	w1, w0, #0x1
   2faf8:	str	w1, [sp, #60]
   2fafc:	ldr	x1, [sp, #24]
   2fb00:	sxtw	x0, w0
   2fb04:	str	xzr, [x1, x0, lsl #3]
   2fb08:	nop
   2fb0c:	ldr	x30, [sp], #80
   2fb10:	ret
   2fb14:	str	x30, [sp, #-48]!
   2fb18:	str	x0, [sp, #24]
   2fb1c:	str	x1, [sp, #16]
   2fb20:	ldr	x0, [sp, #16]
   2fb24:	str	x0, [sp, #40]
   2fb28:	ldr	x0, [sp, #24]
   2fb2c:	ldr	x0, [x0, #16]
   2fb30:	str	x0, [sp, #32]
   2fb34:	ldr	x1, [sp, #40]
   2fb38:	ldr	x0, [sp, #32]
   2fb3c:	cmp	x1, x0
   2fb40:	cset	w0, cs  // cs = hs, nlast
   2fb44:	and	w0, w0, #0xff
   2fb48:	and	x0, x0, #0xff
   2fb4c:	cmp	x0, #0x0
   2fb50:	b.eq	2fb74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68ec>  // b.none
   2fb54:	ldr	x4, [sp, #32]
   2fb58:	ldr	x3, [sp, #40]
   2fb5c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2fb60:	add	x2, x0, #0xfc0
   2fb64:	mov	w1, #0x1ba                 	// #442
   2fb68:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x9970>
   2fb6c:	add	x0, x0, #0xbb8
   2fb70:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2fb74:	ldr	x0, [sp, #24]
   2fb78:	ldr	x2, [x0]
   2fb7c:	ldr	x1, [sp, #16]
   2fb80:	mov	x0, x1
   2fb84:	lsl	x0, x0, #3
   2fb88:	add	x0, x0, x1
   2fb8c:	lsl	x0, x0, #3
   2fb90:	add	x0, x2, x0
   2fb94:	ldr	x30, [sp], #48
   2fb98:	ret
   2fb9c:	str	x30, [sp, #-48]!
   2fba0:	str	x0, [sp, #24]
   2fba4:	ldr	x0, [sp, #24]
   2fba8:	ldr	x1, [x0, #8]
   2fbac:	add	x0, sp, #0x28
   2fbb0:	bl	2fc4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2fbb4:	ldr	x0, [sp, #40]
   2fbb8:	ldr	x30, [sp], #48
   2fbbc:	ret
   2fbc0:	str	x30, [sp, #-48]!
   2fbc4:	str	x0, [sp, #24]
   2fbc8:	add	x0, sp, #0x28
   2fbcc:	mov	x1, #0x0                   	// #0
   2fbd0:	bl	2fc4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2fbd4:	ldr	x0, [sp, #40]
   2fbd8:	ldr	x30, [sp], #48
   2fbdc:	ret
   2fbe0:	sub	sp, sp, #0x10
   2fbe4:	str	x0, [sp, #8]
   2fbe8:	str	x1, [sp]
   2fbec:	ldr	x0, [sp, #8]
   2fbf0:	ldr	x1, [x0]
   2fbf4:	ldr	x0, [sp]
   2fbf8:	cmp	x1, x0
   2fbfc:	cset	w0, ne  // ne = any
   2fc00:	and	w0, w0, #0xff
   2fc04:	add	sp, sp, #0x10
   2fc08:	ret
   2fc0c:	sub	sp, sp, #0x10
   2fc10:	str	x0, [sp, #8]
   2fc14:	ldr	x0, [sp, #8]
   2fc18:	ldr	x0, [x0]
   2fc1c:	ldr	x1, [x0, #8]
   2fc20:	ldr	x0, [sp, #8]
   2fc24:	str	x1, [x0]
   2fc28:	ldr	x0, [sp, #8]
   2fc2c:	add	sp, sp, #0x10
   2fc30:	ret
   2fc34:	sub	sp, sp, #0x10
   2fc38:	str	x0, [sp, #8]
   2fc3c:	ldr	x0, [sp, #8]
   2fc40:	ldr	x0, [x0]
   2fc44:	add	sp, sp, #0x10
   2fc48:	ret
   2fc4c:	sub	sp, sp, #0x10
   2fc50:	str	x0, [sp, #8]
   2fc54:	str	x1, [sp]
   2fc58:	ldr	x0, [sp, #8]
   2fc5c:	ldr	x1, [sp]
   2fc60:	str	x1, [x0]
   2fc64:	nop
   2fc68:	add	sp, sp, #0x10
   2fc6c:	ret
   2fc70:	str	x30, [sp, #-48]!
   2fc74:	str	x0, [sp, #24]
   2fc78:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   2fc7c:	ldr	x0, [x0, #3880]
   2fc80:	cmp	x0, #0x0
   2fc84:	b.eq	2fcb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a2c>  // b.none
   2fc88:	mov	x3, #0x0                   	// #0
   2fc8c:	mov	x2, #0x0                   	// #0
   2fc90:	mov	x1, #0x0                   	// #0
   2fc94:	ldr	x0, [sp, #24]
   2fc98:	bl	6860 <__cxa_demangle@plt>
   2fc9c:	str	x0, [sp, #40]
   2fca0:	ldr	x0, [sp, #40]
   2fca4:	cmp	x0, #0x0
   2fca8:	b.eq	2fcb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a2c>  // b.none
   2fcac:	ldr	x0, [sp, #40]
   2fcb0:	b	2fcb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a30>
   2fcb4:	ldr	x0, [sp, #24]
   2fcb8:	ldr	x30, [sp], #48
   2fcbc:	ret
   2fcc0:	str	x30, [sp, #-16]!
   2fcc4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   2fcc8:	add	x1, x0, #0x1c0
   2fccc:	mov	x0, #0x0                   	// #0
   2fcd0:	bl	6740 <dlsym@plt>
   2fcd4:	mov	x1, x0
   2fcd8:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   2fcdc:	add	x0, x0, #0x348
   2fce0:	str	x1, [x0]
   2fce4:	bl	67b0 <dlerror@plt>
   2fce8:	nop
   2fcec:	ldr	x30, [sp], #16
   2fcf0:	ret
   2fcf4:	stp	x19, x30, [sp, #-32]!
   2fcf8:	str	x0, [sp, #24]
   2fcfc:	ldr	x0, [sp, #24]
   2fd00:	cmp	x0, #0x0
   2fd04:	b.ne	2fd10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a88>  // b.any
   2fd08:	mov	x0, #0x0                   	// #0
   2fd0c:	b	2fd84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6afc>
   2fd10:	ldr	x0, [sp, #24]
   2fd14:	ldrb	w0, [x0]
   2fd18:	cmp	w0, #0x5f
   2fd1c:	b.ne	2fd34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6aac>  // b.any
   2fd20:	ldr	x0, [sp, #24]
   2fd24:	add	x0, x0, #0x1
   2fd28:	ldrb	w0, [x0]
   2fd2c:	cmp	w0, #0x54
   2fd30:	b.eq	2fd3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ab4>  // b.none
   2fd34:	mov	x0, #0x0                   	// #0
   2fd38:	b	2fd84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6afc>
   2fd3c:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   2fd40:	add	x0, x0, #0x348
   2fd44:	ldr	x0, [x0]
   2fd48:	cmp	x0, #0x0
   2fd4c:	b.eq	2fd80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6af8>  // b.none
   2fd50:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   2fd54:	add	x0, x0, #0x348
   2fd58:	ldr	x19, [x0]
   2fd5c:	ldr	x0, [sp, #24]
   2fd60:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   2fd64:	mov	w4, #0x0                   	// #0
   2fd68:	mov	x3, #0x0                   	// #0
   2fd6c:	mov	x2, #0x0                   	// #0
   2fd70:	mov	x1, x0
   2fd74:	ldr	x0, [sp, #24]
   2fd78:	blr	x19
   2fd7c:	b	2fd84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6afc>
   2fd80:	mov	x0, #0x0                   	// #0
   2fd84:	ldp	x19, x30, [sp], #32
   2fd88:	ret
   2fd8c:	str	x30, [sp, #-48]!
   2fd90:	str	x0, [sp, #24]
   2fd94:	ldr	x0, [sp, #24]
   2fd98:	cmp	x0, #0x0
   2fd9c:	b.ne	2fda8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6b20>  // b.any
   2fda0:	mov	x0, #0x0                   	// #0
   2fda4:	b	2fdd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6b4c>
   2fda8:	ldr	x0, [sp, #24]
   2fdac:	bl	2fcf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a6c>
   2fdb0:	str	x0, [sp, #40]
   2fdb4:	ldr	x0, [sp, #40]
   2fdb8:	cmp	x0, #0x0
   2fdbc:	b.eq	2fdc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6b40>  // b.none
   2fdc0:	ldr	x0, [sp, #40]
   2fdc4:	b	2fdd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6b4c>
   2fdc8:	ldr	x0, [sp, #24]
   2fdcc:	bl	2fc70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x69e8>
   2fdd0:	nop
   2fdd4:	ldr	x30, [sp], #48
   2fdd8:	ret
   2fddc:	str	x30, [sp, #-144]!
   2fde0:	str	x0, [sp, #24]
   2fde4:	str	x1, [sp, #16]
   2fde8:	str	xzr, [sp, #136]
   2fdec:	str	xzr, [sp, #128]
   2fdf0:	str	wzr, [sp, #124]
   2fdf4:	ldr	w0, [sp, #124]
   2fdf8:	cmp	w0, #0x4
   2fdfc:	b.gt	2ff68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ce0>
   2fe00:	add	x1, sp, #0x28
   2fe04:	ldrsw	x0, [sp, #124]
   2fe08:	lsl	x0, x0, #3
   2fe0c:	add	x0, x1, x0
   2fe10:	bl	6630 <pipe@plt>
   2fe14:	cmn	w0, #0x1
   2fe18:	cset	w0, eq  // eq = none
   2fe1c:	and	w0, w0, #0xff
   2fe20:	cmp	w0, #0x0
   2fe24:	b.eq	2fe7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6bf4>  // b.none
   2fe28:	str	wzr, [sp, #120]
   2fe2c:	ldr	w1, [sp, #120]
   2fe30:	ldr	w0, [sp, #124]
   2fe34:	cmp	w1, w0
   2fe38:	b.ge	2fe74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6bec>  // b.tcont
   2fe3c:	ldrsw	x0, [sp, #120]
   2fe40:	lsl	x0, x0, #3
   2fe44:	add	x1, sp, #0x28
   2fe48:	ldr	w0, [x1, x0]
   2fe4c:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   2fe50:	ldrsw	x0, [sp, #120]
   2fe54:	lsl	x0, x0, #3
   2fe58:	add	x1, sp, #0x2c
   2fe5c:	ldr	w0, [x1, x0]
   2fe60:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   2fe64:	ldr	w0, [sp, #120]
   2fe68:	add	w0, w0, #0x1
   2fe6c:	str	w0, [sp, #120]
   2fe70:	b	2fe2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ba4>
   2fe74:	mov	w0, #0x0                   	// #0
   2fe78:	b	3004c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6dc4>
   2fe7c:	ldrsw	x0, [sp, #124]
   2fe80:	lsl	x0, x0, #3
   2fe84:	add	x1, sp, #0x28
   2fe88:	ldr	w0, [x1, x0]
   2fe8c:	cmp	w0, #0x2
   2fe90:	b.le	2ff54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ccc>
   2fe94:	ldrsw	x0, [sp, #124]
   2fe98:	lsl	x0, x0, #3
   2fe9c:	add	x1, sp, #0x2c
   2fea0:	ldr	w0, [x1, x0]
   2fea4:	cmp	w0, #0x2
   2fea8:	b.le	2ff54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ccc>
   2feac:	ldr	x0, [sp, #136]
   2feb0:	cmp	x0, #0x0
   2feb4:	b.ne	2fed0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c48>  // b.any
   2feb8:	add	x1, sp, #0x28
   2febc:	ldrsw	x0, [sp, #124]
   2fec0:	lsl	x0, x0, #3
   2fec4:	add	x0, x1, x0
   2fec8:	str	x0, [sp, #136]
   2fecc:	b	2ff54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ccc>
   2fed0:	add	x1, sp, #0x28
   2fed4:	ldrsw	x0, [sp, #124]
   2fed8:	lsl	x0, x0, #3
   2fedc:	add	x0, x1, x0
   2fee0:	str	x0, [sp, #128]
   2fee4:	str	wzr, [sp, #116]
   2fee8:	ldr	w1, [sp, #116]
   2feec:	ldr	w0, [sp, #124]
   2fef0:	cmp	w1, w0
   2fef4:	b.ge	2ff64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6cdc>  // b.tcont
   2fef8:	add	x1, sp, #0x28
   2fefc:	ldrsw	x0, [sp, #116]
   2ff00:	lsl	x0, x0, #3
   2ff04:	add	x0, x1, x0
   2ff08:	ldr	x1, [sp, #136]
   2ff0c:	cmp	x1, x0
   2ff10:	b.eq	2ff40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6cb8>  // b.none
   2ff14:	ldrsw	x0, [sp, #116]
   2ff18:	lsl	x0, x0, #3
   2ff1c:	add	x1, sp, #0x28
   2ff20:	ldr	w0, [x1, x0]
   2ff24:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   2ff28:	ldrsw	x0, [sp, #116]
   2ff2c:	lsl	x0, x0, #3
   2ff30:	add	x1, sp, #0x2c
   2ff34:	ldr	w0, [x1, x0]
   2ff38:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   2ff3c:	b	2ff44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6cbc>
   2ff40:	nop
   2ff44:	ldr	w0, [sp, #116]
   2ff48:	add	w0, w0, #0x1
   2ff4c:	str	w0, [sp, #116]
   2ff50:	b	2fee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c60>
   2ff54:	ldr	w0, [sp, #124]
   2ff58:	add	w0, w0, #0x1
   2ff5c:	str	w0, [sp, #124]
   2ff60:	b	2fdf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6b6c>
   2ff64:	nop
   2ff68:	ldr	x0, [sp, #136]
   2ff6c:	str	x0, [sp, #104]
   2ff70:	str	xzr, [sp, #96]
   2ff74:	ldr	x1, [sp, #104]
   2ff78:	ldr	x0, [sp, #96]
   2ff7c:	cmp	x1, x0
   2ff80:	cset	w0, eq  // eq = none
   2ff84:	and	w0, w0, #0xff
   2ff88:	and	x0, x0, #0xff
   2ff8c:	cmp	x0, #0x0
   2ff90:	b.eq	2ffb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d2c>  // b.none
   2ff94:	ldr	x4, [sp, #96]
   2ff98:	ldr	x3, [sp, #104]
   2ff9c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   2ffa0:	add	x2, x0, #0x1d0
   2ffa4:	mov	w1, #0x87                  	// #135
   2ffa8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   2ffac:	add	x0, x0, #0x1e0
   2ffb0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   2ffb4:	ldr	x0, [sp, #128]
   2ffb8:	str	x0, [sp, #88]
   2ffbc:	str	xzr, [sp, #80]
   2ffc0:	ldr	x1, [sp, #88]
   2ffc4:	ldr	x0, [sp, #80]
   2ffc8:	cmp	x1, x0
   2ffcc:	cset	w0, eq  // eq = none
   2ffd0:	and	w0, w0, #0xff
   2ffd4:	and	x0, x0, #0xff
   2ffd8:	cmp	x0, #0x0
   2ffdc:	b.eq	30000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d78>  // b.none
   2ffe0:	ldr	x4, [sp, #80]
   2ffe4:	ldr	x3, [sp, #88]
   2ffe8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   2ffec:	add	x2, x0, #0x230
   2fff0:	mov	w1, #0x88                  	// #136
   2fff4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   2fff8:	add	x0, x0, #0x1e0
   2fffc:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   30000:	ldr	x0, [sp, #136]
   30004:	ldr	w1, [x0]
   30008:	ldr	x0, [sp, #24]
   3000c:	str	w1, [x0]
   30010:	ldr	x0, [sp, #24]
   30014:	add	x0, x0, #0x4
   30018:	ldr	x1, [sp, #136]
   3001c:	ldr	w1, [x1, #4]
   30020:	str	w1, [x0]
   30024:	ldr	x0, [sp, #128]
   30028:	ldr	w1, [x0]
   3002c:	ldr	x0, [sp, #16]
   30030:	str	w1, [x0]
   30034:	ldr	x0, [sp, #16]
   30038:	add	x0, x0, #0x4
   3003c:	ldr	x1, [sp, #128]
   30040:	ldr	w1, [x1, #4]
   30044:	str	w1, [x0]
   30048:	mov	w0, #0x1                   	// #1
   3004c:	ldr	x30, [sp], #144
   30050:	ret
   30054:	str	x30, [sp, #-144]!
   30058:	str	x0, [sp, #24]
   3005c:	ldr	x0, [sp, #24]
   30060:	ldr	x0, [x0, #8]
   30064:	bl	1e720 <__sanitizer_set_report_fd@@Base+0x4574>
   30068:	and	w0, w0, #0xff
   3006c:	eor	w0, w0, #0x1
   30070:	and	w0, w0, #0xff
   30074:	cmp	w0, #0x0
   30078:	b.eq	300bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e34>  // b.none
   3007c:	ldr	x0, [sp, #24]
   30080:	add	x0, x0, #0x4, lsl #12
   30084:	ldrb	w0, [x0, #33]
   30088:	eor	w0, w0, #0x1
   3008c:	and	w0, w0, #0xff
   30090:	cmp	w0, #0x0
   30094:	b.eq	300b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e2c>  // b.none
   30098:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3009c:	add	x0, x0, #0x248
   300a0:	bl	25a74 <OnPrint@@Base+0x454>
   300a4:	ldr	x0, [sp, #24]
   300a8:	add	x0, x0, #0x4, lsl #12
   300ac:	mov	w1, #0x1                   	// #1
   300b0:	strb	w1, [x0, #33]
   300b4:	mov	w0, #0x0                   	// #0
   300b8:	b	30294 <__sanitizer_get_module_and_offset_for_pc@@Base+0x700c>
   300bc:	mov	w0, #0xffffffff            	// #-1
   300c0:	str	w0, [sp, #140]
   300c4:	add	x0, sp, #0x60
   300c8:	mov	x2, #0x8                   	// #8
   300cc:	mov	w1, #0x0                   	// #0
   300d0:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   300d4:	add	x0, sp, #0x58
   300d8:	mov	x2, #0x8                   	// #8
   300dc:	mov	w1, #0x0                   	// #0
   300e0:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   300e4:	add	x1, sp, #0x58
   300e8:	add	x0, sp, #0x60
   300ec:	bl	2fddc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6b54>
   300f0:	and	w0, w0, #0xff
   300f4:	eor	w0, w0, #0x1
   300f8:	and	w0, w0, #0xff
   300fc:	cmp	w0, #0x0
   30100:	b.eq	30124 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e9c>  // b.none
   30104:	bl	69d0 <__errno_location@plt>
   30108:	ldr	w0, [x0]
   3010c:	mov	w1, w0
   30110:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30114:	add	x0, x0, #0x278
   30118:	bl	25a74 <OnPrint@@Base+0x454>
   3011c:	mov	w0, #0x0                   	// #0
   30120:	b	30294 <__sanitizer_get_module_and_offset_for_pc@@Base+0x700c>
   30124:	ldr	x0, [sp, #24]
   30128:	add	x0, x0, #0x4, lsl #12
   3012c:	ldrb	w0, [x0, #34]
   30130:	cmp	w0, #0x0
   30134:	b.eq	30184 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6efc>  // b.none
   30138:	str	xzr, [sp, #112]
   3013c:	str	xzr, [sp, #104]
   30140:	ldr	x1, [sp, #112]
   30144:	ldr	x0, [sp, #104]
   30148:	cmp	x1, x0
   3014c:	cset	w0, eq  // eq = none
   30150:	and	w0, w0, #0xff
   30154:	and	x0, x0, #0xff
   30158:	cmp	x0, #0x0
   3015c:	b.eq	30180 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ef8>  // b.none
   30160:	ldr	x4, [sp, #104]
   30164:	ldr	x3, [sp, #112]
   30168:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3016c:	add	x2, x0, #0x150
   30170:	mov	w1, #0xde                  	// #222
   30174:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30178:	add	x0, x0, #0x1e0
   3017c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   30180:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   30184:	ldr	x0, [sp, #24]
   30188:	ldr	x0, [x0]
   3018c:	add	x0, x0, #0x8
   30190:	ldr	x3, [x0]
   30194:	ldr	x0, [sp, #24]
   30198:	ldr	x0, [x0, #8]
   3019c:	add	x1, sp, #0x28
   301a0:	mov	x2, x1
   301a4:	mov	x1, x0
   301a8:	ldr	x0, [sp, #24]
   301ac:	blr	x3
   301b0:	ldr	x0, [sp, #24]
   301b4:	ldr	x0, [x0, #8]
   301b8:	ldr	w2, [sp, #88]
   301bc:	ldr	w3, [sp, #100]
   301c0:	add	x1, sp, #0x28
   301c4:	mov	w4, #0xffffffff            	// #-1
   301c8:	bl	241e8 <__sanitizer_set_report_fd@@Base+0xa03c>
   301cc:	str	w0, [sp, #140]
   301d0:	ldr	w0, [sp, #140]
   301d4:	cmp	w0, #0x0
   301d8:	b.ge	301f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6f6c>  // b.tcont
   301dc:	ldr	w0, [sp, #96]
   301e0:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   301e4:	ldr	w0, [sp, #92]
   301e8:	bl	1e2dc <__sanitizer_set_report_fd@@Base+0x4130>
   301ec:	mov	w0, #0x0                   	// #0
   301f0:	b	30294 <__sanitizer_get_module_and_offset_for_pc@@Base+0x700c>
   301f4:	ldr	w1, [sp, #96]
   301f8:	ldr	x0, [sp, #24]
   301fc:	str	w1, [x0, #16]
   30200:	ldr	w1, [sp, #92]
   30204:	ldr	x0, [sp, #24]
   30208:	str	w1, [x0, #20]
   3020c:	ldrsw	x0, [sp, #140]
   30210:	str	x0, [sp, #128]
   30214:	str	xzr, [sp, #120]
   30218:	ldr	x1, [sp, #128]
   3021c:	ldr	x0, [sp, #120]
   30220:	cmp	x1, x0
   30224:	cset	w0, ls  // ls = plast
   30228:	and	w0, w0, #0xff
   3022c:	and	x0, x0, #0xff
   30230:	cmp	x0, #0x0
   30234:	b.eq	30258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6fd0>  // b.none
   30238:	ldr	x4, [sp, #120]
   3023c:	ldr	x3, [sp, #128]
   30240:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30244:	add	x2, x0, #0x2c8
   30248:	mov	w1, #0xef                  	// #239
   3024c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30250:	add	x0, x0, #0x1e0
   30254:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   30258:	mov	w0, #0xa                   	// #10
   3025c:	bl	234a8 <__sanitizer_set_report_fd@@Base+0x92fc>
   30260:	ldr	w0, [sp, #140]
   30264:	bl	24368 <__sanitizer_set_report_fd@@Base+0xa1bc>
   30268:	and	w0, w0, #0xff
   3026c:	eor	w0, w0, #0x1
   30270:	and	w0, w0, #0xff
   30274:	cmp	w0, #0x0
   30278:	b.eq	30290 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7008>  // b.none
   3027c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30280:	add	x0, x0, #0x2d8
   30284:	bl	25a74 <OnPrint@@Base+0x454>
   30288:	mov	w0, #0x0                   	// #0
   3028c:	b	30294 <__sanitizer_get_module_and_offset_for_pc@@Base+0x700c>
   30290:	mov	w0, #0x1                   	// #1
   30294:	ldr	x30, [sp], #144
   30298:	ret
   3029c:	str	x30, [sp, #-64]!
   302a0:	str	x0, [sp, #40]
   302a4:	str	x1, [sp, #32]
   302a8:	str	x2, [sp, #24]
   302ac:	mov	x0, #0x8                   	// #8
   302b0:	str	x0, [sp, #56]
   302b4:	ldr	x0, [sp, #24]
   302b8:	cmp	x0, #0x8
   302bc:	b.hi	302c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7040>  // b.pmore
   302c0:	mov	w0, #0x0                   	// #0
   302c4:	b	302f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7070>
   302c8:	ldr	x0, [sp, #24]
   302cc:	sub	x0, x0, #0x8
   302d0:	ldr	x1, [sp, #32]
   302d4:	add	x3, x1, x0
   302d8:	mov	x2, #0x8                   	// #8
   302dc:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   302e0:	add	x1, x0, #0x338
   302e4:	mov	x0, x3
   302e8:	bl	1c674 <__sanitizer_set_report_fd@@Base+0x24c8>
   302ec:	cmp	w0, #0x0
   302f0:	cset	w0, eq  // eq = none
   302f4:	and	w0, w0, #0xff
   302f8:	ldr	x30, [sp], #64
   302fc:	ret
   30300:	str	x30, [sp, #-32]!
   30304:	str	x0, [sp, #24]
   30308:	str	x1, [sp, #16]
   3030c:	ldr	x0, [sp, #16]
   30310:	bl	2fd8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6b04>
   30314:	ldr	x30, [sp], #32
   30318:	ret
   3031c:	stp	x19, x30, [sp, #-80]!
   30320:	str	x0, [sp, #24]
   30324:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   30328:	ldr	x0, [x0, #8]
   3032c:	str	x0, [sp, #72]
   30330:	ldr	x0, [sp, #72]
   30334:	cmp	x0, #0x0
   30338:	b.eq	30348 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70c0>  // b.none
   3033c:	ldr	x0, [sp, #72]
   30340:	bl	13dec <__sancov_default_options@@Base+0x3a40>
   30344:	b	30350 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70c8>
   30348:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3034c:	add	x0, x0, #0x3a0
   30350:	str	x0, [sp, #64]
   30354:	ldr	x0, [sp, #72]
   30358:	cmp	x0, #0x0
   3035c:	b.eq	303a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7118>  // b.none
   30360:	ldr	x0, [sp, #72]
   30364:	ldrb	w0, [x0]
   30368:	cmp	w0, #0x0
   3036c:	b.ne	303a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7118>  // b.any
   30370:	bl	9984 <__ubsan_default_options@@Base+0x320>
   30374:	sxtw	x0, w0
   30378:	cmp	x0, #0x1
   3037c:	cset	w0, hi  // hi = pmore
   30380:	and	w0, w0, #0xff
   30384:	cmp	w0, #0x0
   30388:	b.eq	30398 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7110>  // b.none
   3038c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30390:	add	x0, x0, #0x3a8
   30394:	bl	25a74 <OnPrint@@Base+0x454>
   30398:	mov	x19, #0x0                   	// #0
   3039c:	b	30624 <__sanitizer_get_module_and_offset_for_pc@@Base+0x739c>
   303a0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   303a4:	add	x1, x0, #0x3d8
   303a8:	ldr	x0, [sp, #64]
   303ac:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   303b0:	cmp	w0, #0x0
   303b4:	cset	w0, eq  // eq = none
   303b8:	and	w0, w0, #0xff
   303bc:	cmp	w0, #0x0
   303c0:	b.eq	30414 <__sanitizer_get_module_and_offset_for_pc@@Base+0x718c>  // b.none
   303c4:	bl	9984 <__ubsan_default_options@@Base+0x320>
   303c8:	sxtw	x0, w0
   303cc:	cmp	x0, #0x1
   303d0:	cset	w0, hi  // hi = pmore
   303d4:	and	w0, w0, #0xff
   303d8:	cmp	w0, #0x0
   303dc:	b.eq	303f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7168>  // b.none
   303e0:	ldr	x1, [sp, #72]
   303e4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   303e8:	add	x0, x0, #0x3e8
   303ec:	bl	25a74 <OnPrint@@Base+0x454>
   303f0:	ldr	x1, [sp, #24]
   303f4:	mov	x0, #0x4018                	// #16408
   303f8:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
   303fc:	mov	x19, x0
   30400:	ldr	x2, [sp, #24]
   30404:	ldr	x1, [sp, #72]
   30408:	mov	x0, x19
   3040c:	bl	2ebe4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x595c>
   30410:	b	30624 <__sanitizer_get_module_and_offset_for_pc@@Base+0x739c>
   30414:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30418:	add	x1, x0, #0x420
   3041c:	ldr	x0, [sp, #64]
   30420:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   30424:	cmp	w0, #0x0
   30428:	cset	w0, eq  // eq = none
   3042c:	and	w0, w0, #0xff
   30430:	cmp	w0, #0x0
   30434:	b.eq	30448 <__sanitizer_get_module_and_offset_for_pc@@Base+0x71c0>  // b.none
   30438:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3043c:	add	x0, x0, #0x428
   30440:	bl	25a74 <OnPrint@@Base+0x454>
   30444:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   30448:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3044c:	add	x1, x0, #0x460
   30450:	ldr	x0, [sp, #64]
   30454:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   30458:	cmp	w0, #0x0
   3045c:	cset	w0, eq  // eq = none
   30460:	and	w0, w0, #0xff
   30464:	cmp	w0, #0x0
   30468:	b.eq	304bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x7234>  // b.none
   3046c:	bl	9984 <__ubsan_default_options@@Base+0x320>
   30470:	sxtw	x0, w0
   30474:	cmp	x0, #0x1
   30478:	cset	w0, hi  // hi = pmore
   3047c:	and	w0, w0, #0xff
   30480:	cmp	w0, #0x0
   30484:	b.eq	30498 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7210>  // b.none
   30488:	ldr	x1, [sp, #72]
   3048c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30490:	add	x0, x0, #0x470
   30494:	bl	25a74 <OnPrint@@Base+0x454>
   30498:	ldr	x1, [sp, #24]
   3049c:	mov	x0, #0x38                  	// #56
   304a0:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
   304a4:	mov	x19, x0
   304a8:	ldr	x2, [sp, #24]
   304ac:	ldr	x1, [sp, #72]
   304b0:	mov	x0, x19
   304b4:	bl	309f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x776c>
   304b8:	b	30624 <__sanitizer_get_module_and_offset_for_pc@@Base+0x739c>
   304bc:	ldr	x0, [sp, #72]
   304c0:	cmp	x0, #0x0
   304c4:	b.eq	304dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x7254>  // b.none
   304c8:	ldr	x1, [sp, #72]
   304cc:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   304d0:	add	x0, x0, #0x4a0
   304d4:	bl	25a74 <OnPrint@@Base+0x454>
   304d8:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   304dc:	ldr	x0, [sp, #72]
   304e0:	cmp	x0, #0x0
   304e4:	cset	w0, eq  // eq = none
   304e8:	and	w0, w0, #0xff
   304ec:	and	x0, x0, #0xff
   304f0:	str	x0, [sp, #56]
   304f4:	str	xzr, [sp, #48]
   304f8:	ldr	x1, [sp, #56]
   304fc:	ldr	x0, [sp, #48]
   30500:	cmp	x1, x0
   30504:	cset	w0, eq  // eq = none
   30508:	and	w0, w0, #0xff
   3050c:	and	x0, x0, #0xff
   30510:	cmp	x0, #0x0
   30514:	b.eq	30538 <__sanitizer_get_module_and_offset_for_pc@@Base+0x72b0>  // b.none
   30518:	ldr	x4, [sp, #48]
   3051c:	ldr	x3, [sp, #56]
   30520:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30524:	add	x2, x0, #0x538
   30528:	mov	w1, #0x1db                 	// #475
   3052c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30530:	add	x0, x0, #0x1e0
   30534:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   30538:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3053c:	add	x0, x0, #0x3d8
   30540:	bl	1a014 <__sanitizer_cov_pcs_init@@Base+0x4550>
   30544:	str	x0, [sp, #40]
   30548:	ldr	x0, [sp, #40]
   3054c:	cmp	x0, #0x0
   30550:	b.eq	305a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x731c>  // b.none
   30554:	bl	9984 <__ubsan_default_options@@Base+0x320>
   30558:	sxtw	x0, w0
   3055c:	cmp	x0, #0x1
   30560:	cset	w0, hi  // hi = pmore
   30564:	and	w0, w0, #0xff
   30568:	cmp	w0, #0x0
   3056c:	b.eq	30580 <__sanitizer_get_module_and_offset_for_pc@@Base+0x72f8>  // b.none
   30570:	ldr	x1, [sp, #40]
   30574:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30578:	add	x0, x0, #0x558
   3057c:	bl	25a74 <OnPrint@@Base+0x454>
   30580:	ldr	x1, [sp, #24]
   30584:	mov	x0, #0x4018                	// #16408
   30588:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
   3058c:	mov	x19, x0
   30590:	ldr	x2, [sp, #24]
   30594:	ldr	x1, [sp, #40]
   30598:	mov	x0, x19
   3059c:	bl	2ebe4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x595c>
   305a0:	b	30624 <__sanitizer_get_module_and_offset_for_pc@@Base+0x739c>
   305a4:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   305a8:	ldrb	w0, [x0, #16]
   305ac:	cmp	w0, #0x0
   305b0:	b.eq	30620 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7398>  // b.none
   305b4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   305b8:	add	x0, x0, #0x460
   305bc:	bl	1a014 <__sanitizer_cov_pcs_init@@Base+0x4550>
   305c0:	str	x0, [sp, #32]
   305c4:	ldr	x0, [sp, #32]
   305c8:	cmp	x0, #0x0
   305cc:	b.eq	30620 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7398>  // b.none
   305d0:	bl	9984 <__ubsan_default_options@@Base+0x320>
   305d4:	sxtw	x0, w0
   305d8:	cmp	x0, #0x1
   305dc:	cset	w0, hi  // hi = pmore
   305e0:	and	w0, w0, #0xff
   305e4:	cmp	w0, #0x0
   305e8:	b.eq	305fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x7374>  // b.none
   305ec:	ldr	x1, [sp, #32]
   305f0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   305f4:	add	x0, x0, #0x580
   305f8:	bl	25a74 <OnPrint@@Base+0x454>
   305fc:	ldr	x1, [sp, #24]
   30600:	mov	x0, #0x38                  	// #56
   30604:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
   30608:	mov	x19, x0
   3060c:	ldr	x2, [sp, #24]
   30610:	ldr	x1, [sp, #32]
   30614:	mov	x0, x19
   30618:	bl	309f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x776c>
   3061c:	b	30624 <__sanitizer_get_module_and_offset_for_pc@@Base+0x739c>
   30620:	mov	x19, #0x0                   	// #0
   30624:	mov	x0, x19
   30628:	ldp	x19, x30, [sp], #80
   3062c:	ret
   30630:	str	x30, [sp, #-64]!
   30634:	str	x0, [sp, #24]
   30638:	str	x1, [sp, #16]
   3063c:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   30640:	ldrb	w0, [x0]
   30644:	eor	w0, w0, #0x1
   30648:	and	w0, w0, #0xff
   3064c:	cmp	w0, #0x0
   30650:	b.eq	30680 <__sanitizer_get_module_and_offset_for_pc@@Base+0x73f8>  // b.none
   30654:	bl	9984 <__ubsan_default_options@@Base+0x320>
   30658:	sxtw	x0, w0
   3065c:	cmp	x0, #0x1
   30660:	cset	w0, hi  // hi = pmore
   30664:	and	w0, w0, #0xff
   30668:	cmp	w0, #0x0
   3066c:	b.eq	30784 <__sanitizer_get_module_and_offset_for_pc@@Base+0x74fc>  // b.none
   30670:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30674:	add	x0, x0, #0x5a0
   30678:	bl	25a74 <OnPrint@@Base+0x454>
   3067c:	b	30784 <__sanitizer_get_module_and_offset_for_pc@@Base+0x74fc>
   30680:	bl	10cbc <__sancov_default_options@@Base+0x910>
   30684:	and	w0, w0, #0xff
   30688:	cmp	w0, #0x0
   3068c:	b.eq	306bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x7434>  // b.none
   30690:	bl	9984 <__ubsan_default_options@@Base+0x320>
   30694:	sxtw	x0, w0
   30698:	cmp	x0, #0x1
   3069c:	cset	w0, hi  // hi = pmore
   306a0:	and	w0, w0, #0xff
   306a4:	cmp	w0, #0x0
   306a8:	b.eq	3070c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7484>  // b.none
   306ac:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   306b0:	add	x0, x0, #0x5c0
   306b4:	bl	25a74 <OnPrint@@Base+0x454>
   306b8:	b	3070c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7484>
   306bc:	ldr	x0, [sp, #16]
   306c0:	bl	30c68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x79e0>
   306c4:	str	x0, [sp, #56]
   306c8:	ldr	x0, [sp, #56]
   306cc:	cmp	x0, #0x0
   306d0:	b.eq	3070c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7484>  // b.none
   306d4:	bl	9984 <__ubsan_default_options@@Base+0x320>
   306d8:	sxtw	x0, w0
   306dc:	cmp	x0, #0x1
   306e0:	cset	w0, hi  // hi = pmore
   306e4:	and	w0, w0, #0xff
   306e8:	cmp	w0, #0x0
   306ec:	b.eq	306fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x7474>  // b.none
   306f0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   306f4:	add	x0, x0, #0x5f0
   306f8:	bl	25a74 <OnPrint@@Base+0x454>
   306fc:	ldr	x1, [sp, #56]
   30700:	ldr	x0, [sp, #24]
   30704:	bl	31080 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7df8>
   30708:	b	30788 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7500>
   3070c:	ldr	x0, [sp, #16]
   30710:	bl	2de88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c00>
   30714:	str	x0, [sp, #48]
   30718:	ldr	x0, [sp, #48]
   3071c:	cmp	x0, #0x0
   30720:	b.eq	3075c <__sanitizer_get_module_and_offset_for_pc@@Base+0x74d4>  // b.none
   30724:	bl	9984 <__ubsan_default_options@@Base+0x320>
   30728:	sxtw	x0, w0
   3072c:	cmp	x0, #0x1
   30730:	cset	w0, hi  // hi = pmore
   30734:	and	w0, w0, #0xff
   30738:	cmp	w0, #0x0
   3073c:	b.eq	3074c <__sanitizer_get_module_and_offset_for_pc@@Base+0x74c4>  // b.none
   30740:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30744:	add	x0, x0, #0x610
   30748:	bl	25a74 <OnPrint@@Base+0x454>
   3074c:	ldr	x1, [sp, #48]
   30750:	ldr	x0, [sp, #24]
   30754:	bl	31080 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7df8>
   30758:	b	30788 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7500>
   3075c:	ldr	x0, [sp, #16]
   30760:	bl	3031c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7094>
   30764:	str	x0, [sp, #40]
   30768:	ldr	x0, [sp, #40]
   3076c:	cmp	x0, #0x0
   30770:	b.eq	30788 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7500>  // b.none
   30774:	ldr	x1, [sp, #40]
   30778:	ldr	x0, [sp, #24]
   3077c:	bl	31080 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7df8>
   30780:	b	30788 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7500>
   30784:	nop
   30788:	ldr	x30, [sp], #64
   3078c:	ret
   30790:	stp	x19, x30, [sp, #-96]!
   30794:	add	x0, sp, #0x30
   30798:	bl	31118 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7e90>
   3079c:	add	x2, sp, #0x30
   307a0:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   307a4:	ldr	x1, [x0, #3968]
   307a8:	mov	x0, x2
   307ac:	bl	30630 <__sanitizer_get_module_and_offset_for_pc@@Base+0x73a8>
   307b0:	add	x2, sp, #0x48
   307b4:	add	x3, sp, #0x30
   307b8:	ldp	x0, x1, [x3]
   307bc:	stp	x0, x1, [x2]
   307c0:	ldr	x0, [x3, #16]
   307c4:	str	x0, [x2, #16]
   307c8:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   307cc:	ldr	x1, [x0, #3968]
   307d0:	mov	x0, #0xf0                  	// #240
   307d4:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
   307d8:	mov	x19, x0
   307dc:	add	x2, sp, #0x10
   307e0:	add	x3, sp, #0x48
   307e4:	ldp	x0, x1, [x3]
   307e8:	stp	x0, x1, [x2]
   307ec:	ldr	x0, [x3, #16]
   307f0:	str	x0, [x2, #16]
   307f4:	add	x0, sp, #0x10
   307f8:	mov	x1, x0
   307fc:	mov	x0, x19
   30800:	bl	2d4ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4224>
   30804:	mov	x0, x19
   30808:	ldp	x19, x30, [sp], #96
   3080c:	ret
   30810:	str	x30, [sp, #-16]!
   30814:	bl	2e194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f0c>
   30818:	bl	2fcc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a38>
   3081c:	nop
   30820:	ldr	x30, [sp], #16
   30824:	ret
   30828:	str	x30, [sp, #-48]!
   3082c:	str	x0, [sp, #40]
   30830:	str	x1, [sp, #32]
   30834:	str	x2, [sp, #24]
   30838:	ldr	x0, [sp, #40]
   3083c:	mov	w2, #0x0                   	// #0
   30840:	ldr	x1, [sp, #32]
   30844:	bl	2f2e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6058>
   30848:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   3084c:	add	x1, x0, #0xf78
   30850:	ldr	x0, [sp, #40]
   30854:	str	x1, [x0]
   30858:	ldr	x0, [sp, #24]
   3085c:	bl	1ca68 <__sanitizer_set_report_fd@@Base+0x28bc>
   30860:	mov	x1, x0
   30864:	ldr	x0, [sp, #40]
   30868:	str	x1, [x0, #16424]
   3086c:	nop
   30870:	ldr	x30, [sp], #48
   30874:	ret
   30878:	sub	sp, sp, #0x10
   3087c:	str	x0, [sp, #8]
   30880:	ldr	x0, [sp, #8]
   30884:	ldr	x0, [x0, #16424]
   30888:	add	sp, sp, #0x10
   3088c:	ret
   30890:	sub	sp, sp, #0x30
   30894:	str	x0, [sp, #24]
   30898:	str	x1, [sp, #16]
   3089c:	str	x2, [sp, #8]
   308a0:	str	wzr, [sp, #44]
   308a4:	ldr	w0, [sp, #44]
   308a8:	add	w1, w0, #0x1
   308ac:	str	w1, [sp, #44]
   308b0:	ldr	x1, [sp, #8]
   308b4:	sxtw	x0, w0
   308b8:	ldr	x2, [sp, #16]
   308bc:	str	x2, [x1, x0, lsl #3]
   308c0:	ldr	w0, [sp, #44]
   308c4:	add	w1, w0, #0x1
   308c8:	str	w1, [sp, #44]
   308cc:	ldr	x1, [sp, #8]
   308d0:	sxtw	x0, w0
   308d4:	adrp	x2, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   308d8:	add	x2, x2, #0x318
   308dc:	str	x2, [x1, x0, lsl #3]
   308e0:	ldr	w0, [sp, #44]
   308e4:	add	w1, w0, #0x1
   308e8:	str	w1, [sp, #44]
   308ec:	ldr	x1, [sp, #24]
   308f0:	ldr	x2, [x1, #16424]
   308f4:	ldr	x1, [sp, #8]
   308f8:	sxtw	x0, w0
   308fc:	str	x2, [x1, x0, lsl #3]
   30900:	ldr	w0, [sp, #44]
   30904:	add	w1, w0, #0x1
   30908:	str	w1, [sp, #44]
   3090c:	ldr	x1, [sp, #8]
   30910:	sxtw	x0, w0
   30914:	str	xzr, [x1, x0, lsl #3]
   30918:	nop
   3091c:	add	sp, sp, #0x30
   30920:	ret
   30924:	str	x30, [sp, #-80]!
   30928:	str	x0, [sp, #40]
   3092c:	str	x1, [sp, #32]
   30930:	str	x2, [sp, #24]
   30934:	ldr	x0, [sp, #40]
   30938:	ldr	x2, [sp, #24]
   3093c:	ldr	x1, [sp, #32]
   30940:	bl	2f670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x63e8>
   30944:	and	w0, w0, #0xff
   30948:	eor	w0, w0, #0x1
   3094c:	and	w0, w0, #0xff
   30950:	cmp	w0, #0x0
   30954:	b.eq	30960 <__sanitizer_get_module_and_offset_for_pc@@Base+0x76d8>  // b.none
   30958:	mov	w0, #0x0                   	// #0
   3095c:	b	309ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x7764>
   30960:	ldr	x0, [sp, #32]
   30964:	ldrb	w0, [x0]
   30968:	cmp	w0, #0x0
   3096c:	b.ne	30978 <__sanitizer_get_module_and_offset_for_pc@@Base+0x76f0>  // b.any
   30970:	mov	w0, #0x1                   	// #1
   30974:	b	309ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x7764>
   30978:	ldr	x0, [sp, #32]
   3097c:	add	x2, x0, #0x1
   30980:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30984:	add	x1, x0, #0x338
   30988:	mov	x0, x2
   3098c:	bl	1d060 <__sanitizer_set_report_fd@@Base+0x2eb4>
   30990:	str	x0, [sp, #72]
   30994:	ldr	x0, [sp, #72]
   30998:	str	x0, [sp, #64]
   3099c:	str	xzr, [sp, #56]
   309a0:	ldr	x1, [sp, #64]
   309a4:	ldr	x0, [sp, #56]
   309a8:	cmp	x1, x0
   309ac:	cset	w0, eq  // eq = none
   309b0:	and	w0, w0, #0xff
   309b4:	and	x0, x0, #0xff
   309b8:	cmp	x0, #0x0
   309bc:	b.eq	309e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7758>  // b.none
   309c0:	ldr	x4, [sp, #56]
   309c4:	ldr	x3, [sp, #64]
   309c8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   309cc:	add	x2, x0, #0x320
   309d0:	mov	w1, #0x11e                 	// #286
   309d4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   309d8:	add	x0, x0, #0x1e0
   309dc:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   309e0:	ldr	x0, [sp, #72]
   309e4:	strb	wzr, [x0]
   309e8:	mov	w0, #0x1                   	// #1
   309ec:	ldr	x30, [sp], #80
   309f0:	ret
   309f4:	str	x30, [sp, #-48]!
   309f8:	str	x0, [sp, #40]
   309fc:	str	x1, [sp, #32]
   30a00:	str	x2, [sp, #24]
   30a04:	ldr	x0, [sp, #40]
   30a08:	bl	2e048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dc0>
   30a0c:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   30a10:	add	x1, x0, #0xf48
   30a14:	ldr	x0, [sp, #40]
   30a18:	str	x1, [x0]
   30a1c:	ldr	x0, [sp, #40]
   30a20:	ldr	x1, [sp, #32]
   30a24:	str	x1, [x0, #16]
   30a28:	ldr	x0, [sp, #40]
   30a2c:	ldr	x1, [sp, #24]
   30a30:	str	x1, [x0, #24]
   30a34:	ldr	x0, [sp, #40]
   30a38:	add	x0, x0, #0x20
   30a3c:	bl	30ea0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c18>
   30a40:	ldr	x0, [sp, #40]
   30a44:	add	x0, x0, #0x20
   30a48:	mov	x1, #0x10                  	// #16
   30a4c:	bl	30ec0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c38>
   30a50:	nop
   30a54:	ldr	x30, [sp], #48
   30a58:	ret
   30a5c:	str	x30, [sp, #-64]!
   30a60:	str	x0, [sp, #40]
   30a64:	str	x1, [sp, #32]
   30a68:	str	x2, [sp, #24]
   30a6c:	ldr	x0, [sp, #24]
   30a70:	ldr	x1, [x0, #16]
   30a74:	ldr	x0, [sp, #24]
   30a78:	ldr	x0, [x0, #24]
   30a7c:	mov	x2, x0
   30a80:	ldr	x0, [sp, #40]
   30a84:	bl	30ad4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x784c>
   30a88:	str	x0, [sp, #56]
   30a8c:	ldr	x0, [sp, #56]
   30a90:	cmp	x0, #0x0
   30a94:	b.eq	30aac <__sanitizer_get_module_and_offset_for_pc@@Base+0x7824>  // b.none
   30a98:	ldr	x1, [sp, #24]
   30a9c:	ldr	x0, [sp, #56]
   30aa0:	bl	2ee0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b84>
   30aa4:	mov	w0, #0x1                   	// #1
   30aa8:	b	30ab0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7828>
   30aac:	mov	w0, #0x0                   	// #0
   30ab0:	ldr	x30, [sp], #64
   30ab4:	ret
   30ab8:	sub	sp, sp, #0x20
   30abc:	str	x0, [sp, #24]
   30ac0:	str	x1, [sp, #16]
   30ac4:	str	x2, [sp, #8]
   30ac8:	mov	w0, #0x0                   	// #0
   30acc:	add	sp, sp, #0x20
   30ad0:	ret
   30ad4:	stp	x19, x30, [sp, #-144]!
   30ad8:	str	x0, [sp, #40]
   30adc:	str	x1, [sp, #32]
   30ae0:	str	x2, [sp, #24]
   30ae4:	str	xzr, [sp, #112]
   30ae8:	str	xzr, [sp, #136]
   30aec:	ldr	x0, [sp, #40]
   30af0:	add	x0, x0, #0x20
   30af4:	bl	30f08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c80>
   30af8:	mov	x1, x0
   30afc:	ldr	x0, [sp, #136]
   30b00:	cmp	x0, x1
   30b04:	cset	w0, cc  // cc = lo, ul, last
   30b08:	and	w0, w0, #0xff
   30b0c:	cmp	w0, #0x0
   30b10:	b.eq	30b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x78f0>  // b.none
   30b14:	ldr	x0, [sp, #40]
   30b18:	add	x0, x0, #0x20
   30b1c:	ldr	x1, [sp, #136]
   30b20:	bl	30f20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c98>
   30b24:	ldr	x0, [x0]
   30b28:	bl	30878 <__sanitizer_get_module_and_offset_for_pc@@Base+0x75f0>
   30b2c:	mov	x1, x0
   30b30:	ldr	x0, [sp, #32]
   30b34:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   30b38:	cmp	w0, #0x0
   30b3c:	cset	w0, eq  // eq = none
   30b40:	and	w0, w0, #0xff
   30b44:	cmp	w0, #0x0
   30b48:	b.eq	30b68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x78e0>  // b.none
   30b4c:	ldr	x0, [sp, #40]
   30b50:	add	x0, x0, #0x20
   30b54:	ldr	x1, [sp, #136]
   30b58:	bl	30f20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c98>
   30b5c:	ldr	x0, [x0]
   30b60:	str	x0, [sp, #112]
   30b64:	b	30b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x78f0>
   30b68:	ldr	x0, [sp, #136]
   30b6c:	add	x0, x0, #0x1
   30b70:	str	x0, [sp, #136]
   30b74:	b	30aec <__sanitizer_get_module_and_offset_for_pc@@Base+0x7864>
   30b78:	ldr	x0, [sp, #112]
   30b7c:	cmp	x0, #0x0
   30b80:	b.ne	30bc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7940>  // b.any
   30b84:	ldr	x0, [sp, #40]
   30b88:	ldr	x0, [x0, #24]
   30b8c:	mov	x1, x0
   30b90:	mov	x0, #0x4030                	// #16432
   30b94:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
   30b98:	mov	x19, x0
   30b9c:	ldr	x0, [sp, #40]
   30ba0:	ldr	x0, [x0, #16]
   30ba4:	ldr	x2, [sp, #32]
   30ba8:	mov	x1, x0
   30bac:	mov	x0, x19
   30bb0:	bl	30828 <__sanitizer_get_module_and_offset_for_pc@@Base+0x75a0>
   30bb4:	str	x19, [sp, #112]
   30bb8:	ldr	x0, [sp, #40]
   30bbc:	add	x0, x0, #0x20
   30bc0:	add	x1, sp, #0x70
   30bc4:	bl	30f9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7d14>
   30bc8:	str	xzr, [sp, #128]
   30bcc:	ldr	x0, [sp, #112]
   30bd0:	bl	30878 <__sanitizer_get_module_and_offset_for_pc@@Base+0x75f0>
   30bd4:	mov	x1, x0
   30bd8:	ldr	x0, [sp, #32]
   30bdc:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   30be0:	sxtw	x0, w0
   30be4:	str	x0, [sp, #120]
   30be8:	ldr	x1, [sp, #128]
   30bec:	ldr	x0, [sp, #120]
   30bf0:	cmp	x1, x0
   30bf4:	cset	w0, ne  // ne = any
   30bf8:	and	w0, w0, #0xff
   30bfc:	and	x0, x0, #0xff
   30c00:	cmp	x0, #0x0
   30c04:	b.eq	30c28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x79a0>  // b.none
   30c08:	ldr	x4, [sp, #120]
   30c0c:	ldr	x3, [sp, #128]
   30c10:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30c14:	add	x2, x0, #0x348
   30c18:	mov	w1, #0x15c                 	// #348
   30c1c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30c20:	add	x0, x0, #0x1e0
   30c24:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   30c28:	add	x5, sp, #0x30
   30c2c:	mov	x4, #0xffffffffffffffff    	// #-1
   30c30:	ldr	x3, [sp, #24]
   30c34:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30c38:	add	x2, x0, #0x390
   30c3c:	mov	x1, #0x40                  	// #64
   30c40:	mov	x0, x5
   30c44:	bl	25b20 <OnPrint@@Base+0x500>
   30c48:	ldr	x0, [sp, #112]
   30c4c:	mov	x2, x0
   30c50:	add	x0, sp, #0x30
   30c54:	mov	x1, x0
   30c58:	mov	x0, x2
   30c5c:	bl	2f464 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61dc>
   30c60:	ldp	x19, x30, [sp], #144
   30c64:	ret
   30c68:	stp	x19, x30, [sp, #-32]!
   30c6c:	str	x0, [sp, #24]
   30c70:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   30c74:	ldr	x0, [x0, #3888]
   30c78:	cmp	x0, #0x0
   30c7c:	b.eq	30cac <__sanitizer_get_module_and_offset_for_pc@@Base+0x7a24>  // b.none
   30c80:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   30c84:	ldr	x0, [x0, #3856]
   30c88:	cmp	x0, #0x0
   30c8c:	b.eq	30cac <__sanitizer_get_module_and_offset_for_pc@@Base+0x7a24>  // b.none
   30c90:	ldr	x1, [sp, #24]
   30c94:	mov	x0, #0x4010                	// #16400
   30c98:	bl	99a0 <__ubsan_default_options@@Base+0x33c>
   30c9c:	mov	x19, x0
   30ca0:	mov	x0, x19
   30ca4:	bl	30e74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7bec>
   30ca8:	b	30cb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7a28>
   30cac:	mov	x19, #0x0                   	// #0
   30cb0:	mov	x0, x19
   30cb4:	ldp	x19, x30, [sp], #32
   30cb8:	ret
   30cbc:	str	x30, [sp, #-64]!
   30cc0:	str	x0, [sp, #40]
   30cc4:	str	x1, [sp, #32]
   30cc8:	str	x2, [sp, #24]
   30ccc:	ldr	x0, [sp, #24]
   30cd0:	ldr	x4, [x0, #16]
   30cd4:	ldr	x0, [sp, #24]
   30cd8:	ldr	x1, [x0, #24]
   30cdc:	ldr	x0, [sp, #40]
   30ce0:	add	x0, x0, #0x10
   30ce4:	mov	w3, #0x4000                	// #16384
   30ce8:	mov	x2, x0
   30cec:	mov	x0, x4
   30cf0:	bl	6870 <__sanitizer_symbolize_code@plt>
   30cf4:	strb	w0, [sp, #63]
   30cf8:	ldrb	w0, [sp, #63]
   30cfc:	cmp	w0, #0x0
   30d00:	b.eq	30d14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7a8c>  // b.none
   30d04:	ldr	x0, [sp, #40]
   30d08:	add	x0, x0, #0x10
   30d0c:	ldr	x1, [sp, #24]
   30d10:	bl	2ee0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b84>
   30d14:	ldrb	w0, [sp, #63]
   30d18:	ldr	x30, [sp], #64
   30d1c:	ret
   30d20:	str	x30, [sp, #-64]!
   30d24:	str	x0, [sp, #40]
   30d28:	str	x1, [sp, #32]
   30d2c:	str	x2, [sp, #24]
   30d30:	ldr	x0, [sp, #24]
   30d34:	ldr	x4, [x0]
   30d38:	ldr	x0, [sp, #24]
   30d3c:	ldr	x1, [x0, #8]
   30d40:	ldr	x0, [sp, #40]
   30d44:	add	x0, x0, #0x10
   30d48:	mov	w3, #0x4000                	// #16384
   30d4c:	mov	x2, x0
   30d50:	mov	x0, x4
   30d54:	bl	6790 <__sanitizer_symbolize_data@plt>
   30d58:	strb	w0, [sp, #63]
   30d5c:	ldrb	w0, [sp, #63]
   30d60:	cmp	w0, #0x0
   30d64:	b.eq	30d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7b14>  // b.none
   30d68:	ldr	x0, [sp, #40]
   30d6c:	add	x0, x0, #0x10
   30d70:	ldr	x1, [sp, #24]
   30d74:	bl	2efdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d54>
   30d78:	ldr	x0, [sp, #24]
   30d7c:	ldr	x1, [x0, #48]
   30d80:	ldr	x0, [sp, #24]
   30d84:	ldr	x0, [x0, #8]
   30d88:	ldr	x2, [sp, #32]
   30d8c:	sub	x0, x2, x0
   30d90:	add	x1, x1, x0
   30d94:	ldr	x0, [sp, #24]
   30d98:	str	x1, [x0, #48]
   30d9c:	ldrb	w0, [sp, #63]
   30da0:	ldr	x30, [sp], #64
   30da4:	ret
   30da8:	str	x30, [sp, #-32]!
   30dac:	str	x0, [sp, #24]
   30db0:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   30db4:	ldr	x0, [x0, #3904]
   30db8:	cmp	x0, #0x0
   30dbc:	b.eq	30dc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7b3c>  // b.none
   30dc0:	bl	68c0 <__sanitizer_symbolize_flush@plt>
   30dc4:	nop
   30dc8:	ldr	x30, [sp], #32
   30dcc:	ret
   30dd0:	str	x30, [sp, #-64]!
   30dd4:	str	x0, [sp, #24]
   30dd8:	str	x1, [sp, #16]
   30ddc:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   30de0:	ldr	x0, [x0, #3808]
   30de4:	cmp	x0, #0x0
   30de8:	b.eq	30e68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7be0>  // b.none
   30dec:	mov	x0, #0x400                 	// #1024
   30df0:	str	x0, [sp, #56]
   30df4:	ldr	x0, [sp, #56]
   30df8:	cmp	x0, #0x20, lsl #12
   30dfc:	b.hi	30e68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7be0>  // b.pmore
   30e00:	mov	x2, #0x0                   	// #0
   30e04:	mov	x1, #0x0                   	// #0
   30e08:	ldr	x0, [sp, #56]
   30e0c:	bl	107a8 <__sancov_default_options@@Base+0x3fc>
   30e10:	str	x0, [sp, #48]
   30e14:	ldr	x0, [sp, #56]
   30e18:	mov	w2, w0
   30e1c:	ldr	x1, [sp, #48]
   30e20:	ldr	x0, [sp, #16]
   30e24:	bl	66b0 <__sanitizer_symbolize_demangle@plt>
   30e28:	sxtw	x0, w0
   30e2c:	str	x0, [sp, #40]
   30e30:	ldr	x1, [sp, #40]
   30e34:	ldr	x0, [sp, #56]
   30e38:	cmp	x1, x0
   30e3c:	b.ls	30e5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7bd4>  // b.plast
   30e40:	ldr	x0, [sp, #40]
   30e44:	add	x0, x0, #0x1
   30e48:	str	x0, [sp, #56]
   30e4c:	mov	x1, #0x0                   	// #0
   30e50:	ldr	x0, [sp, #48]
   30e54:	bl	109f8 <__sancov_default_options@@Base+0x64c>
   30e58:	b	30e64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7bdc>
   30e5c:	ldr	x0, [sp, #48]
   30e60:	b	30e6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7be4>
   30e64:	b	30df4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7b6c>
   30e68:	ldr	x0, [sp, #16]
   30e6c:	ldr	x30, [sp], #64
   30e70:	ret
   30e74:	str	x30, [sp, #-32]!
   30e78:	str	x0, [sp, #24]
   30e7c:	ldr	x0, [sp, #24]
   30e80:	bl	2e048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dc0>
   30e84:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   30e88:	add	x1, x0, #0xf18
   30e8c:	ldr	x0, [sp, #24]
   30e90:	str	x1, [x0]
   30e94:	nop
   30e98:	ldr	x30, [sp], #32
   30e9c:	ret
   30ea0:	str	x30, [sp, #-32]!
   30ea4:	str	x0, [sp, #24]
   30ea8:	ldr	x0, [sp, #24]
   30eac:	mov	x1, #0x1                   	// #1
   30eb0:	bl	3114c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7ec4>
   30eb4:	nop
   30eb8:	ldr	x30, [sp], #32
   30ebc:	ret
   30ec0:	str	x30, [sp, #-32]!
   30ec4:	str	x0, [sp, #24]
   30ec8:	str	x1, [sp, #16]
   30ecc:	ldr	x0, [sp, #24]
   30ed0:	bl	31188 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f00>
   30ed4:	mov	x1, x0
   30ed8:	ldr	x0, [sp, #16]
   30edc:	cmp	x0, x1
   30ee0:	cset	w0, hi  // hi = pmore
   30ee4:	and	w0, w0, #0xff
   30ee8:	cmp	w0, #0x0
   30eec:	b.eq	30efc <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c74>  // b.none
   30ef0:	ldr	x1, [sp, #16]
   30ef4:	ldr	x0, [sp, #24]
   30ef8:	bl	311a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f1c>
   30efc:	nop
   30f00:	ldr	x30, [sp], #32
   30f04:	ret
   30f08:	sub	sp, sp, #0x10
   30f0c:	str	x0, [sp, #8]
   30f10:	ldr	x0, [sp, #8]
   30f14:	ldr	x0, [x0, #16]
   30f18:	add	sp, sp, #0x10
   30f1c:	ret
   30f20:	str	x30, [sp, #-48]!
   30f24:	str	x0, [sp, #24]
   30f28:	str	x1, [sp, #16]
   30f2c:	ldr	x0, [sp, #16]
   30f30:	str	x0, [sp, #40]
   30f34:	ldr	x0, [sp, #24]
   30f38:	ldr	x0, [x0, #16]
   30f3c:	str	x0, [sp, #32]
   30f40:	ldr	x1, [sp, #40]
   30f44:	ldr	x0, [sp, #32]
   30f48:	cmp	x1, x0
   30f4c:	cset	w0, cs  // cs = hs, nlast
   30f50:	and	w0, w0, #0xff
   30f54:	and	x0, x0, #0xff
   30f58:	cmp	x0, #0x0
   30f5c:	b.eq	30f80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7cf8>  // b.none
   30f60:	ldr	x4, [sp, #32]
   30f64:	ldr	x3, [sp, #40]
   30f68:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30f6c:	add	x2, x0, #0x630
   30f70:	mov	w1, #0x1b6                 	// #438
   30f74:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30f78:	add	x0, x0, #0x28
   30f7c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   30f80:	ldr	x0, [sp, #24]
   30f84:	ldr	x1, [x0]
   30f88:	ldr	x0, [sp, #16]
   30f8c:	lsl	x0, x0, #3
   30f90:	add	x0, x1, x0
   30f94:	ldr	x30, [sp], #48
   30f98:	ret
   30f9c:	stp	x19, x30, [sp, #-64]!
   30fa0:	str	x0, [sp, #24]
   30fa4:	str	x1, [sp, #16]
   30fa8:	ldr	x0, [sp, #24]
   30fac:	ldr	x0, [x0, #16]
   30fb0:	str	x0, [sp, #56]
   30fb4:	ldr	x0, [sp, #24]
   30fb8:	bl	31188 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f00>
   30fbc:	str	x0, [sp, #48]
   30fc0:	ldr	x1, [sp, #56]
   30fc4:	ldr	x0, [sp, #48]
   30fc8:	cmp	x1, x0
   30fcc:	cset	w0, hi  // hi = pmore
   30fd0:	and	w0, w0, #0xff
   30fd4:	and	x0, x0, #0xff
   30fd8:	cmp	x0, #0x0
   30fdc:	b.eq	31000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7d78>  // b.none
   30fe0:	ldr	x4, [sp, #48]
   30fe4:	ldr	x3, [sp, #56]
   30fe8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30fec:	add	x2, x0, #0x648
   30ff0:	mov	w1, #0x1be                 	// #446
   30ff4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   30ff8:	add	x0, x0, #0x28
   30ffc:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   31000:	ldr	x0, [sp, #24]
   31004:	ldr	x19, [x0, #16]
   31008:	ldr	x0, [sp, #24]
   3100c:	bl	31188 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f00>
   31010:	cmp	x19, x0
   31014:	cset	w0, eq  // eq = none
   31018:	and	w0, w0, #0xff
   3101c:	cmp	w0, #0x0
   31020:	b.eq	31044 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7dbc>  // b.none
   31024:	ldr	x0, [sp, #24]
   31028:	ldr	x0, [x0, #16]
   3102c:	add	x0, x0, #0x1
   31030:	bl	20578 <__sanitizer_set_report_fd@@Base+0x63cc>
   31034:	str	x0, [sp, #40]
   31038:	ldr	x1, [sp, #40]
   3103c:	ldr	x0, [sp, #24]
   31040:	bl	311a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f1c>
   31044:	ldr	x0, [sp, #24]
   31048:	ldr	x1, [x0]
   3104c:	ldr	x0, [sp, #24]
   31050:	ldr	x0, [x0, #16]
   31054:	add	x3, x0, #0x1
   31058:	ldr	x2, [sp, #24]
   3105c:	str	x3, [x2, #16]
   31060:	lsl	x0, x0, #3
   31064:	add	x0, x1, x0
   31068:	mov	x2, #0x8                   	// #8
   3106c:	ldr	x1, [sp, #16]
   31070:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   31074:	nop
   31078:	ldp	x19, x30, [sp], #64
   3107c:	ret
   31080:	str	x30, [sp, #-32]!
   31084:	str	x0, [sp, #24]
   31088:	str	x1, [sp, #16]
   3108c:	ldr	x0, [sp, #24]
   31090:	bl	312e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x805c>
   31094:	and	w0, w0, #0xff
   31098:	cmp	w0, #0x0
   3109c:	b.eq	310d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7e4c>  // b.none
   310a0:	ldr	x0, [sp, #16]
   310a4:	str	xzr, [x0, #8]
   310a8:	ldr	x0, [sp, #24]
   310ac:	ldr	x1, [sp, #16]
   310b0:	str	x1, [x0, #16]
   310b4:	ldr	x0, [sp, #24]
   310b8:	ldr	x1, [x0, #16]
   310bc:	ldr	x0, [sp, #24]
   310c0:	str	x1, [x0, #8]
   310c4:	ldr	x0, [sp, #24]
   310c8:	mov	x1, #0x1                   	// #1
   310cc:	str	x1, [x0]
   310d0:	b	3110c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7e84>
   310d4:	ldr	x0, [sp, #16]
   310d8:	str	xzr, [x0, #8]
   310dc:	ldr	x0, [sp, #24]
   310e0:	ldr	x0, [x0, #16]
   310e4:	ldr	x1, [sp, #16]
   310e8:	str	x1, [x0, #8]
   310ec:	ldr	x0, [sp, #24]
   310f0:	ldr	x1, [sp, #16]
   310f4:	str	x1, [x0, #16]
   310f8:	ldr	x0, [sp, #24]
   310fc:	ldr	x0, [x0]
   31100:	add	x1, x0, #0x1
   31104:	ldr	x0, [sp, #24]
   31108:	str	x1, [x0]
   3110c:	nop
   31110:	ldr	x30, [sp], #32
   31114:	ret
   31118:	sub	sp, sp, #0x10
   3111c:	str	x0, [sp, #8]
   31120:	ldr	x0, [sp, #8]
   31124:	str	xzr, [x0, #16]
   31128:	ldr	x0, [sp, #8]
   3112c:	ldr	x1, [x0, #16]
   31130:	ldr	x0, [sp, #8]
   31134:	str	x1, [x0, #8]
   31138:	ldr	x0, [sp, #8]
   3113c:	str	xzr, [x0]
   31140:	nop
   31144:	add	sp, sp, #0x10
   31148:	ret
   3114c:	str	x30, [sp, #-32]!
   31150:	str	x0, [sp, #24]
   31154:	str	x1, [sp, #16]
   31158:	ldr	x0, [sp, #24]
   3115c:	str	xzr, [x0, #8]
   31160:	ldr	x0, [sp, #24]
   31164:	str	xzr, [x0, #16]
   31168:	ldr	x0, [sp, #24]
   3116c:	str	xzr, [x0]
   31170:	ldr	x1, [sp, #16]
   31174:	ldr	x0, [sp, #24]
   31178:	bl	30ec0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c38>
   3117c:	nop
   31180:	ldr	x30, [sp], #32
   31184:	ret
   31188:	sub	sp, sp, #0x10
   3118c:	str	x0, [sp, #8]
   31190:	ldr	x0, [sp, #8]
   31194:	ldr	x0, [x0, #8]
   31198:	lsr	x0, x0, #3
   3119c:	add	sp, sp, #0x10
   311a0:	ret
   311a4:	stp	x19, x30, [sp, #-80]!
   311a8:	str	x0, [sp, #24]
   311ac:	str	x1, [sp, #16]
   311b0:	ldr	x0, [sp, #16]
   311b4:	str	x0, [sp, #72]
   311b8:	str	xzr, [sp, #64]
   311bc:	ldr	x1, [sp, #72]
   311c0:	ldr	x0, [sp, #64]
   311c4:	cmp	x1, x0
   311c8:	cset	w0, ls  // ls = plast
   311cc:	and	w0, w0, #0xff
   311d0:	and	x0, x0, #0xff
   311d4:	cmp	x0, #0x0
   311d8:	b.eq	311fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f74>  // b.none
   311dc:	ldr	x4, [sp, #64]
   311e0:	ldr	x3, [sp, #72]
   311e4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   311e8:	add	x2, x0, #0x668
   311ec:	mov	w1, #0x1fc                 	// #508
   311f0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   311f4:	add	x0, x0, #0x28
   311f8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   311fc:	ldr	x0, [sp, #24]
   31200:	ldr	x0, [x0, #16]
   31204:	str	x0, [sp, #56]
   31208:	ldr	x0, [sp, #16]
   3120c:	str	x0, [sp, #48]
   31210:	ldr	x1, [sp, #56]
   31214:	ldr	x0, [sp, #48]
   31218:	cmp	x1, x0
   3121c:	cset	w0, hi  // hi = pmore
   31220:	and	w0, w0, #0xff
   31224:	and	x0, x0, #0xff
   31228:	cmp	x0, #0x0
   3122c:	b.eq	31250 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fc8>  // b.none
   31230:	ldr	x4, [sp, #48]
   31234:	ldr	x3, [sp, #56]
   31238:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3123c:	add	x2, x0, #0x688
   31240:	mov	w1, #0x1fd                 	// #509
   31244:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   31248:	add	x0, x0, #0x28
   3124c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   31250:	ldr	x0, [sp, #16]
   31254:	lsl	x19, x0, #3
   31258:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   3125c:	mov	x1, x0
   31260:	mov	x0, x19
   31264:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   31268:	str	x0, [sp, #40]
   3126c:	mov	w2, #0x0                   	// #0
   31270:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   31274:	add	x1, x0, #0x6a8
   31278:	ldr	x0, [sp, #40]
   3127c:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   31280:	str	x0, [sp, #32]
   31284:	ldr	x0, [sp, #24]
   31288:	ldr	x1, [x0]
   3128c:	ldr	x0, [sp, #24]
   31290:	ldr	x0, [x0, #16]
   31294:	lsl	x0, x0, #3
   31298:	mov	x2, x0
   3129c:	ldr	x0, [sp, #32]
   312a0:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   312a4:	ldr	x0, [sp, #24]
   312a8:	ldr	x2, [x0]
   312ac:	ldr	x0, [sp, #24]
   312b0:	ldr	x0, [x0, #8]
   312b4:	mov	x1, x0
   312b8:	mov	x0, x2
   312bc:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   312c0:	ldr	x0, [sp, #24]
   312c4:	ldr	x1, [sp, #32]
   312c8:	str	x1, [x0]
   312cc:	ldr	x0, [sp, #24]
   312d0:	ldr	x1, [sp, #40]
   312d4:	str	x1, [x0, #8]
   312d8:	nop
   312dc:	ldp	x19, x30, [sp], #80
   312e0:	ret
   312e4:	sub	sp, sp, #0x10
   312e8:	str	x0, [sp, #8]
   312ec:	ldr	x0, [sp, #8]
   312f0:	ldr	x0, [x0]
   312f4:	cmp	x0, #0x0
   312f8:	cset	w0, eq  // eq = none
   312fc:	and	w0, w0, #0xff
   31300:	add	sp, sp, #0x10
   31304:	ret
   31308:	sub	sp, sp, #0x20
   3130c:	str	x0, [sp, #8]
   31310:	str	wzr, [sp, #28]
   31314:	ldr	w0, [sp, #28]
   31318:	cmp	w0, #0x4
   3131c:	b.gt	31364 <__sanitizer_get_module_and_offset_for_pc@@Base+0x80dc>
   31320:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   31324:	add	x0, x0, #0x350
   31328:	ldrsw	x1, [sp, #28]
   3132c:	ldr	x0, [x0, x1, lsl #3]
   31330:	cmp	x0, #0x0
   31334:	b.ne	31354 <__sanitizer_get_module_and_offset_for_pc@@Base+0x80cc>  // b.any
   31338:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   3133c:	add	x0, x0, #0x350
   31340:	ldrsw	x1, [sp, #28]
   31344:	ldr	x2, [sp, #8]
   31348:	str	x2, [x0, x1, lsl #3]
   3134c:	mov	w0, #0x1                   	// #1
   31350:	b	31368 <__sanitizer_get_module_and_offset_for_pc@@Base+0x80e0>
   31354:	ldr	w0, [sp, #28]
   31358:	add	w0, w0, #0x1
   3135c:	str	w0, [sp, #28]
   31360:	b	31314 <__sanitizer_get_module_and_offset_for_pc@@Base+0x808c>
   31364:	mov	w0, #0x0                   	// #0
   31368:	add	sp, sp, #0x20
   3136c:	ret
   31370:	str	x30, [sp, #-48]!
   31374:	str	x0, [sp, #24]
   31378:	str	wzr, [sp, #44]
   3137c:	ldr	w0, [sp, #44]
   31380:	cmp	w0, #0x4
   31384:	b.gt	3141c <__sanitizer_get_module_and_offset_for_pc@@Base+0x8194>
   31388:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   3138c:	add	x0, x0, #0x350
   31390:	ldrsw	x1, [sp, #44]
   31394:	ldr	x0, [x0, x1, lsl #3]
   31398:	ldr	x1, [sp, #24]
   3139c:	cmp	x1, x0
   313a0:	b.ne	3140c <__sanitizer_get_module_and_offset_for_pc@@Base+0x8184>  // b.any
   313a4:	ldrsw	x0, [sp, #44]
   313a8:	lsl	x1, x0, #3
   313ac:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   313b0:	add	x0, x0, #0x350
   313b4:	add	x3, x1, x0
   313b8:	ldr	w0, [sp, #44]
   313bc:	add	w0, w0, #0x1
   313c0:	sxtw	x0, w0
   313c4:	lsl	x1, x0, #3
   313c8:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   313cc:	add	x0, x0, #0x350
   313d0:	add	x4, x1, x0
   313d4:	mov	w1, #0x4                   	// #4
   313d8:	ldr	w0, [sp, #44]
   313dc:	sub	w0, w1, w0
   313e0:	sxtw	x0, w0
   313e4:	lsl	x0, x0, #3
   313e8:	mov	x2, x0
   313ec:	mov	x1, x4
   313f0:	mov	x0, x3
   313f4:	bl	1c78c <__sanitizer_set_report_fd@@Base+0x25e0>
   313f8:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   313fc:	add	x0, x0, #0x350
   31400:	str	xzr, [x0, #32]
   31404:	mov	w0, #0x1                   	// #1
   31408:	b	31420 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8198>
   3140c:	ldr	w0, [sp, #44]
   31410:	add	w0, w0, #0x1
   31414:	str	w0, [sp, #44]
   31418:	b	3137c <__sanitizer_get_module_and_offset_for_pc@@Base+0x80f4>
   3141c:	mov	w0, #0x0                   	// #0
   31420:	ldr	x30, [sp], #48
   31424:	ret
   31428:	sub	sp, sp, #0x10
   3142c:	str	x0, [sp, #8]
   31430:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   31434:	add	x0, x0, #0x378
   31438:	ldr	x1, [sp, #8]
   3143c:	str	x1, [x0]
   31440:	nop
   31444:	add	sp, sp, #0x10
   31448:	ret
   3144c:	str	x30, [sp, #-32]!
   31450:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   31454:	add	x0, x0, #0x378
   31458:	ldr	x0, [x0]
   3145c:	cmp	x0, #0x0
   31460:	b.eq	31474 <__sanitizer_get_module_and_offset_for_pc@@Base+0x81ec>  // b.none
   31464:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   31468:	add	x0, x0, #0x378
   3146c:	ldr	x0, [x0]
   31470:	blr	x0
   31474:	mov	w0, #0x4                   	// #4
   31478:	str	w0, [sp, #28]
   3147c:	ldr	w0, [sp, #28]
   31480:	cmp	w0, #0x0
   31484:	b.lt	314c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x823c>  // b.tstop
   31488:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   3148c:	add	x0, x0, #0x350
   31490:	ldrsw	x1, [sp, #28]
   31494:	ldr	x0, [x0, x1, lsl #3]
   31498:	cmp	x0, #0x0
   3149c:	b.eq	314b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x822c>  // b.none
   314a0:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   314a4:	add	x0, x0, #0x350
   314a8:	ldrsw	x1, [sp, #28]
   314ac:	ldr	x0, [x0, x1, lsl #3]
   314b0:	blr	x0
   314b4:	ldr	w0, [sp, #28]
   314b8:	sub	w0, w0, #0x1
   314bc:	str	w0, [sp, #28]
   314c0:	b	3147c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81f4>
   314c4:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   314c8:	ldrb	w0, [x0, #220]
   314cc:	cmp	w0, #0x0
   314d0:	b.eq	314d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8250>  // b.none
   314d4:	bl	234cc <__sanitizer_set_report_fd@@Base+0x9320>
   314d8:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   314dc:	ldr	w0, [x0, #216]
   314e0:	bl	1e67c <__sanitizer_set_report_fd@@Base+0x44d0>
   314e4:	sub	sp, sp, #0x10
   314e8:	str	x0, [sp, #8]
   314ec:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   314f0:	add	x0, x0, #0x380
   314f4:	ldr	x1, [sp, #8]
   314f8:	str	x1, [x0]
   314fc:	nop
   31500:	add	sp, sp, #0x10
   31504:	ret
   31508:	str	x30, [sp, #-64]!
   3150c:	str	x0, [sp, #56]
   31510:	str	w1, [sp, #52]
   31514:	str	x2, [sp, #40]
   31518:	str	x3, [sp, #32]
   3151c:	str	x4, [sp, #24]
   31520:	mov	w2, #0x1                   	// #1
   31524:	mov	w1, #0x1                   	// #1
   31528:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   3152c:	add	x0, x0, #0x388
   31530:	bl	27754 <OnPrint@@Base+0x2134>
   31534:	cmp	w0, #0xa
   31538:	cset	w0, hi  // hi = pmore
   3153c:	and	w0, w0, #0xff
   31540:	cmp	w0, #0x0
   31544:	b.eq	31554 <__sanitizer_get_module_and_offset_for_pc@@Base+0x82cc>  // b.none
   31548:	mov	w0, #0x2                   	// #2
   3154c:	bl	2348c <__sanitizer_set_report_fd@@Base+0x92e0>
   31550:	bl	315cc <__sanitizer_set_death_callback@@Base+0x1c>
   31554:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   31558:	add	x0, x0, #0x380
   3155c:	ldr	x0, [x0]
   31560:	cmp	x0, #0x0
   31564:	b.eq	3158c <__sanitizer_get_module_and_offset_for_pc@@Base+0x8304>  // b.none
   31568:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   3156c:	add	x0, x0, #0x380
   31570:	ldr	x5, [x0]
   31574:	ldr	x4, [sp, #24]
   31578:	ldr	x3, [sp, #32]
   3157c:	ldr	x2, [sp, #40]
   31580:	ldr	w1, [sp, #52]
   31584:	ldr	x0, [sp, #56]
   31588:	blr	x5
   3158c:	ldr	x5, [sp, #24]
   31590:	ldr	x4, [sp, #32]
   31594:	ldr	x3, [sp, #40]
   31598:	ldr	w2, [sp, #52]
   3159c:	ldr	x1, [sp, #56]
   315a0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   315a4:	add	x0, x0, #0x720
   315a8:	bl	25a74 <OnPrint@@Base+0x454>
   315ac:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>

00000000000315b0 <__sanitizer_set_death_callback@@Base>:
   315b0:	str	x30, [sp, #-32]!
   315b4:	str	x0, [sp, #24]
   315b8:	ldr	x0, [sp, #24]
   315bc:	bl	31428 <__sanitizer_get_module_and_offset_for_pc@@Base+0x81a0>
   315c0:	nop
   315c4:	ldr	x30, [sp], #32
   315c8:	ret
   315cc:	brk	#0x3e8
   315d0:	str	x30, [sp, #-32]!
   315d4:	str	x0, [sp, #24]
   315d8:	str	w1, [sp, #20]
   315dc:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   315e0:	add	x1, x0, #0xfa0
   315e4:	ldr	x0, [sp, #24]
   315e8:	str	x1, [x0]
   315ec:	ldr	x0, [sp, #24]
   315f0:	ldr	w1, [sp, #20]
   315f4:	str	w1, [x0, #8]
   315f8:	ldr	x0, [sp, #24]
   315fc:	str	xzr, [x0, #16]
   31600:	ldr	x0, [sp, #24]
   31604:	str	wzr, [x0, #24]
   31608:	ldr	x0, [sp, #24]
   3160c:	str	xzr, [x0, #32]
   31610:	ldr	x0, [sp, #24]
   31614:	str	xzr, [x0, #40]
   31618:	ldr	x0, [sp, #24]
   3161c:	str	wzr, [x0, #112]
   31620:	ldr	x0, [sp, #24]
   31624:	strb	wzr, [x0, #116]
   31628:	ldr	x0, [sp, #24]
   3162c:	strb	wzr, [x0, #117]
   31630:	ldr	x0, [sp, #24]
   31634:	str	wzr, [x0, #120]
   31638:	ldr	x0, [sp, #24]
   3163c:	str	xzr, [x0, #128]
   31640:	ldr	x0, [sp, #24]
   31644:	strb	wzr, [x0, #48]
   31648:	ldr	x0, [sp, #24]
   3164c:	add	x0, x0, #0x88
   31650:	mov	w2, #0x8                   	// #8
   31654:	mov	w1, #0x0                   	// #0
   31658:	bl	1b8fc <__sanitizer_set_report_fd@@Base+0x1750>
   3165c:	nop
   31660:	ldr	x30, [sp], #32
   31664:	ret
   31668:	str	x30, [sp, #-48]!
   3166c:	str	x0, [sp, #24]
   31670:	adrp	x0, 75000 <__asan_backtrace_vector_release@@Base+0x2a970>
   31674:	add	x1, x0, #0xfa0
   31678:	ldr	x0, [sp, #24]
   3167c:	str	x1, [x0]
   31680:	str	xzr, [sp, #40]
   31684:	str	xzr, [sp, #32]
   31688:	ldr	x1, [sp, #40]
   3168c:	ldr	x0, [sp, #32]
   31690:	cmp	x1, x0
   31694:	cset	w0, eq  // eq = none
   31698:	and	w0, w0, #0xff
   3169c:	and	x0, x0, #0xff
   316a0:	cmp	x0, #0x0
   316a4:	b.eq	316c8 <__sanitizer_set_death_callback@@Base+0x118>  // b.none
   316a8:	ldr	x4, [sp, #32]
   316ac:	ldr	x3, [sp, #40]
   316b0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   316b4:	add	x2, x0, #0x7a8
   316b8:	mov	w1, #0x1b                  	// #27
   316bc:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   316c0:	add	x0, x0, #0x7b8
   316c4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   316c8:	nop
   316cc:	ldr	x30, [sp], #48
   316d0:	ret
   316d4:	str	x30, [sp, #-32]!
   316d8:	str	x0, [sp, #24]
   316dc:	str	x1, [sp, #16]
   316e0:	ldr	x0, [sp, #24]
   316e4:	strb	wzr, [x0, #48]
   316e8:	ldr	x0, [sp, #16]
   316ec:	cmp	x0, #0x0
   316f0:	b.eq	31710 <__sanitizer_set_death_callback@@Base+0x160>  // b.none
   316f4:	ldr	x0, [sp, #24]
   316f8:	add	x0, x0, #0x30
   316fc:	mov	x2, #0x40                  	// #64
   31700:	ldr	x1, [sp, #16]
   31704:	bl	1cf6c <__sanitizer_set_report_fd@@Base+0x2dc0>
   31708:	ldr	x0, [sp, #24]
   3170c:	strb	wzr, [x0, #111]
   31710:	nop
   31714:	ldr	x30, [sp], #32
   31718:	ret
   3171c:	str	x30, [sp, #-48]!
   31720:	str	x0, [sp, #24]
   31724:	ldr	x0, [sp, #24]
   31728:	ldr	w0, [x0, #112]
   3172c:	cmp	w0, #0x2
   31730:	b.eq	31744 <__sanitizer_set_death_callback@@Base+0x194>  // b.none
   31734:	ldr	x0, [sp, #24]
   31738:	ldr	w0, [x0, #112]
   3173c:	cmp	w0, #0x3
   31740:	b.ne	3174c <__sanitizer_set_death_callback@@Base+0x19c>  // b.any
   31744:	mov	w0, #0x1                   	// #1
   31748:	b	31750 <__sanitizer_set_death_callback@@Base+0x1a0>
   3174c:	mov	w0, #0x0                   	// #0
   31750:	and	x0, x0, #0xff
   31754:	str	x0, [sp, #40]
   31758:	str	xzr, [sp, #32]
   3175c:	ldr	x1, [sp, #40]
   31760:	ldr	x0, [sp, #32]
   31764:	cmp	x1, x0
   31768:	cset	w0, eq  // eq = none
   3176c:	and	w0, w0, #0xff
   31770:	and	x0, x0, #0xff
   31774:	cmp	x0, #0x0
   31778:	b.eq	3179c <__sanitizer_set_death_callback@@Base+0x1ec>  // b.none
   3177c:	ldr	x4, [sp, #32]
   31780:	ldr	x3, [sp, #40]
   31784:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   31788:	add	x2, x0, #0x800
   3178c:	mov	w1, #0x27                  	// #39
   31790:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   31794:	add	x0, x0, #0x7b8
   31798:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   3179c:	ldr	x0, [sp, #24]
   317a0:	mov	w1, #0x4                   	// #4
   317a4:	str	w1, [x0, #112]
   317a8:	ldr	x0, [sp, #24]
   317ac:	str	xzr, [x0, #40]
   317b0:	ldr	x0, [sp, #24]
   317b4:	ldr	x0, [x0]
   317b8:	ldr	x1, [x0]
   317bc:	ldr	x0, [sp, #24]
   317c0:	blr	x1
   317c4:	nop
   317c8:	ldr	x30, [sp], #48
   317cc:	ret
   317d0:	str	x30, [sp, #-32]!
   317d4:	str	x0, [sp, #24]
   317d8:	ldr	x0, [sp, #24]
   317dc:	add	x0, x0, #0x88
   317e0:	mov	w2, #0x8                   	// #8
   317e4:	mov	w1, #0x1                   	// #1
   317e8:	bl	1b8fc <__sanitizer_set_report_fd@@Base+0x1750>
   317ec:	nop
   317f0:	ldr	x30, [sp], #32
   317f4:	ret
   317f8:	str	x30, [sp, #-32]!
   317fc:	str	x0, [sp, #24]
   31800:	ldr	x0, [sp, #24]
   31804:	add	x0, x0, #0x88
   31808:	mov	w1, #0x4                   	// #4
   3180c:	bl	9b44 <__ubsan_default_options@@Base+0x4e0>
   31810:	cmp	w0, #0x0
   31814:	cset	w0, ne  // ne = any
   31818:	and	w0, w0, #0xff
   3181c:	ldr	x30, [sp], #32
   31820:	ret
   31824:	str	x30, [sp, #-64]!
   31828:	str	x0, [sp, #24]
   3182c:	str	x1, [sp, #16]
   31830:	str	xzr, [sp, #56]
   31834:	ldr	x0, [sp, #24]
   31838:	ldrb	w0, [x0, #116]
   3183c:	and	x0, x0, #0xff
   31840:	str	x0, [sp, #48]
   31844:	ldr	x1, [sp, #56]
   31848:	ldr	x0, [sp, #48]
   3184c:	cmp	x1, x0
   31850:	cset	w0, ne  // ne = any
   31854:	and	w0, w0, #0xff
   31858:	and	x0, x0, #0xff
   3185c:	cmp	x0, #0x0
   31860:	b.eq	31884 <__sanitizer_set_death_callback@@Base+0x2d4>  // b.none
   31864:	ldr	x4, [sp, #48]
   31868:	ldr	x3, [sp, #56]
   3186c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   31870:	add	x2, x0, #0x850
   31874:	mov	w1, #0x38                  	// #56
   31878:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3187c:	add	x0, x0, #0x7b8
   31880:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   31884:	mov	x0, #0x3                   	// #3
   31888:	str	x0, [sp, #40]
   3188c:	ldr	x0, [sp, #24]
   31890:	ldr	w0, [x0, #112]
   31894:	mov	w0, w0
   31898:	str	x0, [sp, #32]
   3189c:	ldr	x1, [sp, #40]
   318a0:	ldr	x0, [sp, #32]
   318a4:	cmp	x1, x0
   318a8:	cset	w0, ne  // ne = any
   318ac:	and	w0, w0, #0xff
   318b0:	and	x0, x0, #0xff
   318b4:	cmp	x0, #0x0
   318b8:	b.eq	318dc <__sanitizer_set_death_callback@@Base+0x32c>  // b.none
   318bc:	ldr	x4, [sp, #32]
   318c0:	ldr	x3, [sp, #40]
   318c4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   318c8:	add	x2, x0, #0x870
   318cc:	mov	w1, #0x39                  	// #57
   318d0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   318d4:	add	x0, x0, #0x7b8
   318d8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   318dc:	ldr	x0, [sp, #24]
   318e0:	mov	w1, #0x4                   	// #4
   318e4:	str	w1, [x0, #112]
   318e8:	ldr	x0, [sp, #24]
   318ec:	str	xzr, [x0, #40]
   318f0:	ldr	x0, [sp, #24]
   318f4:	ldr	x0, [x0]
   318f8:	add	x0, x0, #0x8
   318fc:	ldr	x2, [x0]
   31900:	ldr	x1, [sp, #16]
   31904:	ldr	x0, [sp, #24]
   31908:	blr	x2
   3190c:	nop
   31910:	ldr	x30, [sp], #64
   31914:	ret
   31918:	str	x30, [sp, #-32]!
   3191c:	str	x0, [sp, #24]
   31920:	ldr	x0, [sp, #24]
   31924:	ldrb	w0, [x0, #116]
   31928:	eor	w0, w0, #0x1
   3192c:	and	w0, w0, #0xff
   31930:	cmp	w0, #0x0
   31934:	b.ne	31948 <__sanitizer_set_death_callback@@Base+0x398>  // b.any
   31938:	ldr	x0, [sp, #24]
   3193c:	ldr	w0, [x0, #112]
   31940:	cmp	w0, #0x1
   31944:	b.ne	31954 <__sanitizer_set_death_callback@@Base+0x3a4>  // b.any
   31948:	ldr	x0, [sp, #24]
   3194c:	mov	w1, #0x3                   	// #3
   31950:	str	w1, [x0, #112]
   31954:	ldr	x0, [sp, #24]
   31958:	ldr	x0, [x0]
   3195c:	add	x0, x0, #0x10
   31960:	ldr	x1, [x0]
   31964:	ldr	x0, [sp, #24]
   31968:	blr	x1
   3196c:	nop
   31970:	ldr	x30, [sp], #32
   31974:	ret
   31978:	str	x30, [sp, #-48]!
   3197c:	str	x0, [sp, #40]
   31980:	str	x1, [sp, #32]
   31984:	strb	w2, [sp, #31]
   31988:	str	x3, [sp, #16]
   3198c:	ldr	x0, [sp, #40]
   31990:	mov	w1, #0x2                   	// #2
   31994:	str	w1, [x0, #112]
   31998:	ldr	x0, [sp, #40]
   3199c:	ldr	x1, [sp, #32]
   319a0:	str	x1, [x0, #32]
   319a4:	ldr	x0, [sp, #40]
   319a8:	ldrb	w1, [sp, #31]
   319ac:	strb	w1, [x0, #117]
   319b0:	ldr	x0, [sp, #40]
   319b4:	ldr	x0, [x0]
   319b8:	add	x0, x0, #0x18
   319bc:	ldr	x2, [x0]
   319c0:	ldr	x1, [sp, #16]
   319c4:	ldr	x0, [sp, #40]
   319c8:	blr	x2
   319cc:	nop
   319d0:	ldr	x30, [sp], #48
   319d4:	ret
   319d8:	str	x30, [sp, #-64]!
   319dc:	str	x0, [sp, #56]
   319e0:	str	x1, [sp, #48]
   319e4:	str	x2, [sp, #40]
   319e8:	strb	w3, [sp, #39]
   319ec:	str	w4, [sp, #32]
   319f0:	str	x5, [sp, #24]
   319f4:	ldr	x0, [sp, #56]
   319f8:	mov	w1, #0x1                   	// #1
   319fc:	str	w1, [x0, #112]
   31a00:	ldr	x0, [sp, #56]
   31a04:	ldr	x1, [sp, #48]
   31a08:	str	x1, [x0, #40]
   31a0c:	ldr	x0, [sp, #56]
   31a10:	ldr	x1, [sp, #40]
   31a14:	str	x1, [x0, #16]
   31a18:	ldr	x0, [sp, #56]
   31a1c:	ldrb	w1, [sp, #39]
   31a20:	strb	w1, [x0, #116]
   31a24:	ldr	x0, [sp, #56]
   31a28:	ldr	w0, [x0, #8]
   31a2c:	cmp	w0, #0x0
   31a30:	b.eq	31a40 <__sanitizer_set_death_callback@@Base+0x490>  // b.none
   31a34:	ldr	x0, [sp, #56]
   31a38:	ldr	w1, [sp, #32]
   31a3c:	str	w1, [x0, #120]
   31a40:	ldr	x0, [sp, #56]
   31a44:	ldr	x0, [x0]
   31a48:	add	x0, x0, #0x20
   31a4c:	ldr	x2, [x0]
   31a50:	ldr	x1, [sp, #24]
   31a54:	ldr	x0, [sp, #56]
   31a58:	blr	x2
   31a5c:	nop
   31a60:	ldr	x30, [sp], #64
   31a64:	ret
   31a68:	str	x30, [sp, #-32]!
   31a6c:	str	x0, [sp, #24]
   31a70:	ldr	x0, [sp, #24]
   31a74:	str	wzr, [x0, #112]
   31a78:	mov	x1, #0x0                   	// #0
   31a7c:	ldr	x0, [sp, #24]
   31a80:	bl	316d4 <__sanitizer_set_death_callback@@Base+0x124>
   31a84:	ldr	x0, [sp, #24]
   31a88:	add	x0, x0, #0x88
   31a8c:	mov	w2, #0x8                   	// #8
   31a90:	mov	w1, #0x0                   	// #0
   31a94:	bl	1b8fc <__sanitizer_set_report_fd@@Base+0x1750>
   31a98:	ldr	x0, [sp, #24]
   31a9c:	ldr	x0, [x0]
   31aa0:	add	x0, x0, #0x28
   31aa4:	ldr	x1, [x0]
   31aa8:	ldr	x0, [sp, #24]
   31aac:	blr	x1
   31ab0:	nop
   31ab4:	ldr	x30, [sp], #32
   31ab8:	ret
   31abc:	str	x30, [sp, #-48]!
   31ac0:	str	x0, [sp, #40]
   31ac4:	str	x1, [sp, #32]
   31ac8:	str	w2, [sp, #28]
   31acc:	str	w3, [sp, #24]
   31ad0:	str	w4, [sp, #20]
   31ad4:	ldr	x0, [sp, #40]
   31ad8:	ldr	x1, [sp, #32]
   31adc:	str	x1, [x0]
   31ae0:	ldr	x0, [sp, #40]
   31ae4:	ldr	w1, [sp, #28]
   31ae8:	str	w1, [x0, #8]
   31aec:	ldr	x0, [sp, #40]
   31af0:	ldr	w1, [sp, #24]
   31af4:	str	w1, [x0, #12]
   31af8:	ldr	x0, [sp, #40]
   31afc:	ldr	w1, [sp, #20]
   31b00:	str	w1, [x0, #16]
   31b04:	ldr	x0, [sp, #40]
   31b08:	add	x0, x0, #0x18
   31b0c:	bl	1ecfc <__sanitizer_set_report_fd@@Base+0x4b50>
   31b10:	ldr	x0, [sp, #40]
   31b14:	str	wzr, [x0, #112]
   31b18:	ldr	x0, [sp, #40]
   31b1c:	str	xzr, [x0, #120]
   31b20:	ldr	x0, [sp, #40]
   31b24:	str	xzr, [x0, #128]
   31b28:	ldr	x0, [sp, #40]
   31b2c:	str	xzr, [x0, #136]
   31b30:	ldr	x0, [sp, #40]
   31b34:	str	xzr, [x0, #144]
   31b38:	ldr	x0, [sp, #40]
   31b3c:	ldr	w0, [x0, #8]
   31b40:	mov	w0, w0
   31b44:	lsl	x3, x0, #3
   31b48:	mov	w2, #0x0                   	// #0
   31b4c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   31b50:	add	x1, x0, #0x8a0
   31b54:	mov	x0, x3
   31b58:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   31b5c:	mov	x1, x0
   31b60:	ldr	x0, [sp, #40]
   31b64:	str	x1, [x0, #152]
   31b68:	ldr	x0, [sp, #40]
   31b6c:	add	x0, x0, #0xa0
   31b70:	bl	32d34 <__sanitizer_set_death_callback@@Base+0x1784>
   31b74:	ldr	x0, [sp, #40]
   31b78:	add	x0, x0, #0xb8
   31b7c:	bl	32d34 <__sanitizer_set_death_callback@@Base+0x1784>
   31b80:	nop
   31b84:	ldr	x30, [sp], #48
   31b88:	ret
   31b8c:	str	x30, [sp, #-64]!
   31b90:	str	x0, [sp, #40]
   31b94:	str	x1, [sp, #32]
   31b98:	str	x2, [sp, #24]
   31b9c:	str	x3, [sp, #16]
   31ba0:	ldr	x0, [sp, #40]
   31ba4:	add	x1, x0, #0x18
   31ba8:	add	x0, sp, #0x38
   31bac:	bl	1e018 <__sanitizer_set_report_fd@@Base+0x3e6c>
   31bb0:	ldr	x0, [sp, #32]
   31bb4:	cmp	x0, #0x0
   31bb8:	b.eq	31bd0 <__sanitizer_set_death_callback@@Base+0x620>  // b.none
   31bbc:	ldr	x0, [sp, #40]
   31bc0:	ldr	w0, [x0, #112]
   31bc4:	mov	w1, w0
   31bc8:	ldr	x0, [sp, #32]
   31bcc:	str	x1, [x0]
   31bd0:	ldr	x0, [sp, #24]
   31bd4:	cmp	x0, #0x0
   31bd8:	b.eq	31bec <__sanitizer_set_death_callback@@Base+0x63c>  // b.none
   31bdc:	ldr	x0, [sp, #40]
   31be0:	ldr	x1, [x0, #144]
   31be4:	ldr	x0, [sp, #24]
   31be8:	str	x1, [x0]
   31bec:	ldr	x0, [sp, #16]
   31bf0:	cmp	x0, #0x0
   31bf4:	b.eq	31c08 <__sanitizer_set_death_callback@@Base+0x658>  // b.none
   31bf8:	ldr	x0, [sp, #40]
   31bfc:	ldr	x1, [x0, #128]
   31c00:	ldr	x0, [sp, #16]
   31c04:	str	x1, [x0]
   31c08:	add	x0, sp, #0x38
   31c0c:	bl	1e048 <__sanitizer_set_report_fd@@Base+0x3e9c>
   31c10:	nop
   31c14:	ldr	x30, [sp], #64
   31c18:	ret
   31c1c:	stp	x19, x30, [sp, #-48]!
   31c20:	str	x0, [sp, #24]
   31c24:	ldr	x0, [sp, #24]
   31c28:	add	x1, x0, #0x18
   31c2c:	add	x0, sp, #0x28
   31c30:	bl	1e018 <__sanitizer_set_report_fd@@Base+0x3e6c>
   31c34:	ldr	x0, [sp, #24]
   31c38:	ldr	x19, [x0, #136]
   31c3c:	add	x0, sp, #0x28
   31c40:	bl	1e048 <__sanitizer_set_report_fd@@Base+0x3e9c>
   31c44:	mov	x0, x19
   31c48:	ldp	x19, x30, [sp], #48
   31c4c:	ret
   31c50:	stp	x19, x30, [sp, #-160]!
   31c54:	str	x0, [sp, #40]
   31c58:	str	x1, [sp, #32]
   31c5c:	strb	w2, [sp, #31]
   31c60:	str	w3, [sp, #24]
   31c64:	str	x4, [sp, #16]
   31c68:	ldr	x0, [sp, #40]
   31c6c:	add	x1, x0, #0x18
   31c70:	add	x0, sp, #0x38
   31c74:	bl	1e018 <__sanitizer_set_report_fd@@Base+0x3e6c>
   31c78:	mov	w0, #0xffffffff            	// #-1
   31c7c:	str	w0, [sp, #156]
   31c80:	ldr	x0, [sp, #40]
   31c84:	bl	32c20 <__sanitizer_set_death_callback@@Base+0x1670>
   31c88:	str	x0, [sp, #144]
   31c8c:	ldr	x0, [sp, #144]
   31c90:	cmp	x0, #0x0
   31c94:	b.eq	31ca8 <__sanitizer_set_death_callback@@Base+0x6f8>  // b.none
   31c98:	ldr	x0, [sp, #144]
   31c9c:	ldr	w0, [x0, #8]
   31ca0:	str	w0, [sp, #156]
   31ca4:	b	31d34 <__sanitizer_set_death_callback@@Base+0x784>
   31ca8:	ldr	x0, [sp, #40]
   31cac:	ldr	w1, [x0, #112]
   31cb0:	ldr	x0, [sp, #40]
   31cb4:	ldr	w0, [x0, #8]
   31cb8:	cmp	w1, w0
   31cbc:	b.cs	31d0c <__sanitizer_set_death_callback@@Base+0x75c>  // b.hs, b.nlast
   31cc0:	ldr	x0, [sp, #40]
   31cc4:	ldr	w0, [x0, #112]
   31cc8:	add	w2, w0, #0x1
   31ccc:	ldr	x1, [sp, #40]
   31cd0:	str	w2, [x1, #112]
   31cd4:	str	w0, [sp, #156]
   31cd8:	ldr	x0, [sp, #40]
   31cdc:	ldr	x1, [x0]
   31ce0:	ldr	w0, [sp, #156]
   31ce4:	blr	x1
   31ce8:	str	x0, [sp, #144]
   31cec:	ldr	x0, [sp, #40]
   31cf0:	ldr	x1, [x0, #152]
   31cf4:	ldr	w0, [sp, #156]
   31cf8:	lsl	x0, x0, #3
   31cfc:	add	x0, x1, x0
   31d00:	ldr	x1, [sp, #144]
   31d04:	str	x1, [x0]
   31d08:	b	31d34 <__sanitizer_set_death_callback@@Base+0x784>
   31d0c:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   31d10:	ldr	x0, [x0, #4024]
   31d14:	ldr	x1, [x0]
   31d18:	ldr	x0, [sp, #40]
   31d1c:	ldr	w0, [x0, #8]
   31d20:	mov	w2, w0
   31d24:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   31d28:	add	x0, x0, #0x8b0
   31d2c:	bl	25a74 <OnPrint@@Base+0x454>
   31d30:	bl	3144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x81c4>
   31d34:	ldr	x0, [sp, #144]
   31d38:	str	x0, [sp, #136]
   31d3c:	str	xzr, [sp, #128]
   31d40:	ldr	x1, [sp, #136]
   31d44:	ldr	x0, [sp, #128]
   31d48:	cmp	x1, x0
   31d4c:	cset	w0, eq  // eq = none
   31d50:	and	w0, w0, #0xff
   31d54:	and	x0, x0, #0xff
   31d58:	cmp	x0, #0x0
   31d5c:	b.eq	31d80 <__sanitizer_set_death_callback@@Base+0x7d0>  // b.none
   31d60:	ldr	x4, [sp, #128]
   31d64:	ldr	x3, [sp, #136]
   31d68:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   31d6c:	add	x2, x0, #0x8e0
   31d70:	mov	w1, #0x9c                  	// #156
   31d74:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   31d78:	add	x0, x0, #0x7b8
   31d7c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   31d80:	ldr	w0, [sp, #156]
   31d84:	str	x0, [sp, #120]
   31d88:	mov	x0, #0xffffffff            	// #4294967295
   31d8c:	str	x0, [sp, #112]
   31d90:	ldr	x1, [sp, #120]
   31d94:	ldr	x0, [sp, #112]
   31d98:	cmp	x1, x0
   31d9c:	cset	w0, eq  // eq = none
   31da0:	and	w0, w0, #0xff
   31da4:	and	x0, x0, #0xff
   31da8:	cmp	x0, #0x0
   31dac:	b.eq	31dd0 <__sanitizer_set_death_callback@@Base+0x820>  // b.none
   31db0:	ldr	x4, [sp, #112]
   31db4:	ldr	x3, [sp, #120]
   31db8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   31dbc:	add	x2, x0, #0x8f8
   31dc0:	mov	w1, #0x9d                  	// #157
   31dc4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   31dc8:	add	x0, x0, #0x7b8
   31dcc:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   31dd0:	ldr	w0, [sp, #156]
   31dd4:	str	x0, [sp, #104]
   31dd8:	ldr	x0, [sp, #40]
   31ddc:	ldr	w0, [x0, #8]
   31de0:	mov	w0, w0
   31de4:	str	x0, [sp, #96]
   31de8:	ldr	x1, [sp, #104]
   31dec:	ldr	x0, [sp, #96]
   31df0:	cmp	x1, x0
   31df4:	cset	w0, cs  // cs = hs, nlast
   31df8:	and	w0, w0, #0xff
   31dfc:	and	x0, x0, #0xff
   31e00:	cmp	x0, #0x0
   31e04:	b.eq	31e28 <__sanitizer_set_death_callback@@Base+0x878>  // b.none
   31e08:	ldr	x4, [sp, #96]
   31e0c:	ldr	x3, [sp, #104]
   31e10:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   31e14:	add	x2, x0, #0x918
   31e18:	mov	w1, #0x9e                  	// #158
   31e1c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   31e20:	add	x0, x0, #0x7b8
   31e24:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   31e28:	ldr	x0, [sp, #144]
   31e2c:	ldr	w0, [x0, #112]
   31e30:	mov	w0, w0
   31e34:	str	x0, [sp, #88]
   31e38:	str	xzr, [sp, #80]
   31e3c:	ldr	x1, [sp, #88]
   31e40:	ldr	x0, [sp, #80]
   31e44:	cmp	x1, x0
   31e48:	cset	w0, ne  // ne = any
   31e4c:	and	w0, w0, #0xff
   31e50:	and	x0, x0, #0xff
   31e54:	cmp	x0, #0x0
   31e58:	b.eq	31e7c <__sanitizer_set_death_callback@@Base+0x8cc>  // b.none
   31e5c:	ldr	x4, [sp, #80]
   31e60:	ldr	x3, [sp, #88]
   31e64:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   31e68:	add	x2, x0, #0x938
   31e6c:	mov	w1, #0x9f                  	// #159
   31e70:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   31e74:	add	x0, x0, #0x7b8
   31e78:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   31e7c:	ldr	x0, [sp, #40]
   31e80:	ldr	x0, [x0, #128]
   31e84:	add	x1, x0, #0x1
   31e88:	ldr	x0, [sp, #40]
   31e8c:	str	x1, [x0, #128]
   31e90:	ldr	x0, [sp, #40]
   31e94:	ldr	x1, [x0, #136]
   31e98:	ldr	x0, [sp, #40]
   31e9c:	ldr	x0, [x0, #128]
   31ea0:	cmp	x1, x0
   31ea4:	b.cs	31f14 <__sanitizer_set_death_callback@@Base+0x964>  // b.hs, b.nlast
   31ea8:	ldr	x0, [sp, #40]
   31eac:	ldr	x0, [x0, #136]
   31eb0:	add	x1, x0, #0x1
   31eb4:	ldr	x0, [sp, #40]
   31eb8:	str	x1, [x0, #136]
   31ebc:	ldr	x0, [sp, #40]
   31ec0:	ldr	x0, [x0, #128]
   31ec4:	str	x0, [sp, #72]
   31ec8:	ldr	x0, [sp, #40]
   31ecc:	ldr	x0, [x0, #136]
   31ed0:	str	x0, [sp, #64]
   31ed4:	ldr	x1, [sp, #72]
   31ed8:	ldr	x0, [sp, #64]
   31edc:	cmp	x1, x0
   31ee0:	cset	w0, ne  // ne = any
   31ee4:	and	w0, w0, #0xff
   31ee8:	and	x0, x0, #0xff
   31eec:	cmp	x0, #0x0
   31ef0:	b.eq	31f14 <__sanitizer_set_death_callback@@Base+0x964>  // b.none
   31ef4:	ldr	x4, [sp, #64]
   31ef8:	ldr	x3, [sp, #72]
   31efc:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   31f00:	add	x2, x0, #0x968
   31f04:	mov	w1, #0xa3                  	// #163
   31f08:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   31f0c:	add	x0, x0, #0x7b8
   31f10:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   31f14:	ldr	x0, [sp, #40]
   31f18:	ldr	x0, [x0, #120]
   31f1c:	add	x2, x0, #0x1
   31f20:	ldr	x1, [sp, #40]
   31f24:	str	x2, [x1, #120]
   31f28:	ldr	x5, [sp, #16]
   31f2c:	ldr	w4, [sp, #24]
   31f30:	ldrb	w3, [sp, #31]
   31f34:	mov	x2, x0
   31f38:	ldr	x1, [sp, #32]
   31f3c:	ldr	x0, [sp, #144]
   31f40:	bl	319d8 <__sanitizer_set_death_callback@@Base+0x428>
   31f44:	ldr	w19, [sp, #156]
   31f48:	add	x0, sp, #0x38
   31f4c:	bl	1e048 <__sanitizer_set_report_fd@@Base+0x3e9c>
   31f50:	mov	w0, w19
   31f54:	ldp	x19, x30, [sp], #160
   31f58:	ret
   31f5c:	str	x30, [sp, #-64]!
   31f60:	str	x0, [sp, #40]
   31f64:	str	x1, [sp, #32]
   31f68:	str	x2, [sp, #24]
   31f6c:	ldr	x0, [sp, #40]
   31f70:	bl	32d14 <__sanitizer_set_death_callback@@Base+0x1764>
   31f74:	str	wzr, [sp, #60]
   31f78:	ldr	x0, [sp, #40]
   31f7c:	ldr	w0, [x0, #112]
   31f80:	ldr	w1, [sp, #60]
   31f84:	cmp	w1, w0
   31f88:	b.cs	31fdc <__sanitizer_set_death_callback@@Base+0xa2c>  // b.hs, b.nlast
   31f8c:	ldr	x0, [sp, #40]
   31f90:	ldr	x1, [x0, #152]
   31f94:	ldr	w0, [sp, #60]
   31f98:	lsl	x0, x0, #3
   31f9c:	add	x0, x1, x0
   31fa0:	ldr	x0, [x0]
   31fa4:	str	x0, [sp, #48]
   31fa8:	ldr	x0, [sp, #48]
   31fac:	cmp	x0, #0x0
   31fb0:	b.eq	31fc8 <__sanitizer_set_death_callback@@Base+0xa18>  // b.none
   31fb4:	ldr	x2, [sp, #32]
   31fb8:	ldr	x1, [sp, #24]
   31fbc:	ldr	x0, [sp, #48]
   31fc0:	blr	x2
   31fc4:	b	31fcc <__sanitizer_set_death_callback@@Base+0xa1c>
   31fc8:	nop
   31fcc:	ldr	w0, [sp, #60]
   31fd0:	add	w0, w0, #0x1
   31fd4:	str	w0, [sp, #60]
   31fd8:	b	31f78 <__sanitizer_set_death_callback@@Base+0x9c8>
   31fdc:	nop
   31fe0:	ldr	x30, [sp], #64
   31fe4:	ret
   31fe8:	stp	x19, x30, [sp, #-80]!
   31fec:	str	x0, [sp, #40]
   31ff0:	str	x1, [sp, #32]
   31ff4:	str	x2, [sp, #24]
   31ff8:	ldr	x0, [sp, #40]
   31ffc:	add	x1, x0, #0x18
   32000:	add	x0, sp, #0x38
   32004:	bl	1e018 <__sanitizer_set_report_fd@@Base+0x3e6c>
   32008:	str	wzr, [sp, #76]
   3200c:	ldr	x0, [sp, #40]
   32010:	ldr	w0, [x0, #112]
   32014:	ldr	w1, [sp, #76]
   32018:	cmp	w1, w0
   3201c:	b.cs	32094 <__sanitizer_set_death_callback@@Base+0xae4>  // b.hs, b.nlast
   32020:	ldr	x0, [sp, #40]
   32024:	ldr	x1, [x0, #152]
   32028:	ldr	w0, [sp, #76]
   3202c:	lsl	x0, x0, #3
   32030:	add	x0, x1, x0
   32034:	ldr	x0, [x0]
   32038:	str	x0, [sp, #64]
   3203c:	ldr	x0, [sp, #64]
   32040:	cmp	x0, #0x0
   32044:	b.eq	3206c <__sanitizer_set_death_callback@@Base+0xabc>  // b.none
   32048:	ldr	x2, [sp, #32]
   3204c:	ldr	x1, [sp, #24]
   32050:	ldr	x0, [sp, #64]
   32054:	blr	x2
   32058:	and	w0, w0, #0xff
   3205c:	cmp	w0, #0x0
   32060:	b.eq	3206c <__sanitizer_set_death_callback@@Base+0xabc>  // b.none
   32064:	mov	w0, #0x1                   	// #1
   32068:	b	32070 <__sanitizer_set_death_callback@@Base+0xac0>
   3206c:	mov	w0, #0x0                   	// #0
   32070:	cmp	w0, #0x0
   32074:	b.eq	32084 <__sanitizer_set_death_callback@@Base+0xad4>  // b.none
   32078:	ldr	x0, [sp, #64]
   3207c:	ldr	w19, [x0, #8]
   32080:	b	32098 <__sanitizer_set_death_callback@@Base+0xae8>
   32084:	ldr	w0, [sp, #76]
   32088:	add	w0, w0, #0x1
   3208c:	str	w0, [sp, #76]
   32090:	b	3200c <__sanitizer_set_death_callback@@Base+0xa5c>
   32094:	mov	w19, #0xffffffff            	// #-1
   32098:	add	x0, sp, #0x38
   3209c:	bl	1e048 <__sanitizer_set_report_fd@@Base+0x3e9c>
   320a0:	mov	w0, w19
   320a4:	ldp	x19, x30, [sp], #80
   320a8:	ret
   320ac:	str	x30, [sp, #-64]!
   320b0:	str	x0, [sp, #40]
   320b4:	str	x1, [sp, #32]
   320b8:	str	x2, [sp, #24]
   320bc:	ldr	x0, [sp, #40]
   320c0:	bl	32d14 <__sanitizer_set_death_callback@@Base+0x1764>
   320c4:	str	wzr, [sp, #60]
   320c8:	ldr	x0, [sp, #40]
   320cc:	ldr	w0, [x0, #112]
   320d0:	ldr	w1, [sp, #60]
   320d4:	cmp	w1, w0
   320d8:	b.cs	3214c <__sanitizer_set_death_callback@@Base+0xb9c>  // b.hs, b.nlast
   320dc:	ldr	x0, [sp, #40]
   320e0:	ldr	x1, [x0, #152]
   320e4:	ldr	w0, [sp, #60]
   320e8:	lsl	x0, x0, #3
   320ec:	add	x0, x1, x0
   320f0:	ldr	x0, [x0]
   320f4:	str	x0, [sp, #48]
   320f8:	ldr	x0, [sp, #48]
   320fc:	cmp	x0, #0x0
   32100:	b.eq	32128 <__sanitizer_set_death_callback@@Base+0xb78>  // b.none
   32104:	ldr	x2, [sp, #32]
   32108:	ldr	x1, [sp, #24]
   3210c:	ldr	x0, [sp, #48]
   32110:	blr	x2
   32114:	and	w0, w0, #0xff
   32118:	cmp	w0, #0x0
   3211c:	b.eq	32128 <__sanitizer_set_death_callback@@Base+0xb78>  // b.none
   32120:	mov	w0, #0x1                   	// #1
   32124:	b	3212c <__sanitizer_set_death_callback@@Base+0xb7c>
   32128:	mov	w0, #0x0                   	// #0
   3212c:	cmp	w0, #0x0
   32130:	b.eq	3213c <__sanitizer_set_death_callback@@Base+0xb8c>  // b.none
   32134:	ldr	x0, [sp, #48]
   32138:	b	32150 <__sanitizer_set_death_callback@@Base+0xba0>
   3213c:	ldr	w0, [sp, #60]
   32140:	add	w0, w0, #0x1
   32144:	str	w0, [sp, #60]
   32148:	b	320c8 <__sanitizer_set_death_callback@@Base+0xb18>
   3214c:	mov	x0, #0x0                   	// #0
   32150:	ldr	x30, [sp], #64
   32154:	ret
   32158:	sub	sp, sp, #0x10
   3215c:	str	x0, [sp, #8]
   32160:	str	x1, [sp]
   32164:	ldr	x0, [sp, #8]
   32168:	ldr	x1, [x0, #32]
   3216c:	ldr	x0, [sp]
   32170:	cmp	x1, x0
   32174:	b.ne	321a0 <__sanitizer_set_death_callback@@Base+0xbf0>  // b.any
   32178:	ldr	x0, [sp, #8]
   3217c:	ldr	w0, [x0, #112]
   32180:	cmp	w0, #0x0
   32184:	b.eq	321a0 <__sanitizer_set_death_callback@@Base+0xbf0>  // b.none
   32188:	ldr	x0, [sp, #8]
   3218c:	ldr	w0, [x0, #112]
   32190:	cmp	w0, #0x4
   32194:	b.eq	321a0 <__sanitizer_set_death_callback@@Base+0xbf0>  // b.none
   32198:	mov	w0, #0x1                   	// #1
   3219c:	b	321a4 <__sanitizer_set_death_callback@@Base+0xbf4>
   321a0:	mov	w0, #0x0                   	// #0
   321a4:	add	sp, sp, #0x10
   321a8:	ret
   321ac:	str	x30, [sp, #-32]!
   321b0:	str	x0, [sp, #24]
   321b4:	str	x1, [sp, #16]
   321b8:	ldr	x0, [sp, #16]
   321bc:	mov	x2, x0
   321c0:	adrp	x0, 32000 <__sanitizer_set_death_callback@@Base+0xa50>
   321c4:	add	x1, x0, #0x158
   321c8:	ldr	x0, [sp, #24]
   321cc:	bl	320ac <__sanitizer_set_death_callback@@Base+0xafc>
   321d0:	ldr	x30, [sp], #32
   321d4:	ret
   321d8:	str	x30, [sp, #-112]!
   321dc:	str	x0, [sp, #40]
   321e0:	str	w1, [sp, #36]
   321e4:	str	x2, [sp, #24]
   321e8:	ldr	x0, [sp, #40]
   321ec:	add	x1, x0, #0x18
   321f0:	add	x0, sp, #0x30
   321f4:	bl	1e018 <__sanitizer_set_report_fd@@Base+0x3e6c>
   321f8:	ldr	w0, [sp, #36]
   321fc:	str	x0, [sp, #104]
   32200:	ldr	x0, [sp, #40]
   32204:	ldr	w0, [x0, #112]
   32208:	mov	w0, w0
   3220c:	str	x0, [sp, #96]
   32210:	ldr	x1, [sp, #104]
   32214:	ldr	x0, [sp, #96]
   32218:	cmp	x1, x0
   3221c:	cset	w0, cs  // cs = hs, nlast
   32220:	and	w0, w0, #0xff
   32224:	and	x0, x0, #0xff
   32228:	cmp	x0, #0x0
   3222c:	b.eq	32250 <__sanitizer_set_death_callback@@Base+0xca0>  // b.none
   32230:	ldr	x4, [sp, #96]
   32234:	ldr	x3, [sp, #104]
   32238:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3223c:	add	x2, x0, #0x998
   32240:	mov	w1, #0xd7                  	// #215
   32244:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32248:	add	x0, x0, #0x7b8
   3224c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   32250:	ldr	x0, [sp, #40]
   32254:	ldr	x1, [x0, #152]
   32258:	ldr	w0, [sp, #36]
   3225c:	lsl	x0, x0, #3
   32260:	add	x0, x1, x0
   32264:	ldr	x0, [x0]
   32268:	str	x0, [sp, #88]
   3226c:	ldr	x0, [sp, #88]
   32270:	str	x0, [sp, #80]
   32274:	str	xzr, [sp, #72]
   32278:	ldr	x1, [sp, #80]
   3227c:	ldr	x0, [sp, #72]
   32280:	cmp	x1, x0
   32284:	cset	w0, eq  // eq = none
   32288:	and	w0, w0, #0xff
   3228c:	and	x0, x0, #0xff
   32290:	cmp	x0, #0x0
   32294:	b.eq	322b8 <__sanitizer_set_death_callback@@Base+0xd08>  // b.none
   32298:	ldr	x4, [sp, #72]
   3229c:	ldr	x3, [sp, #80]
   322a0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   322a4:	add	x2, x0, #0x8e0
   322a8:	mov	w1, #0xd9                  	// #217
   322ac:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   322b0:	add	x0, x0, #0x7b8
   322b4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   322b8:	mov	x0, #0x2                   	// #2
   322bc:	str	x0, [sp, #64]
   322c0:	ldr	x0, [sp, #88]
   322c4:	ldr	w0, [x0, #112]
   322c8:	mov	w0, w0
   322cc:	str	x0, [sp, #56]
   322d0:	ldr	x1, [sp, #64]
   322d4:	ldr	x0, [sp, #56]
   322d8:	cmp	x1, x0
   322dc:	cset	w0, ne  // ne = any
   322e0:	and	w0, w0, #0xff
   322e4:	and	x0, x0, #0xff
   322e8:	cmp	x0, #0x0
   322ec:	b.eq	32310 <__sanitizer_set_death_callback@@Base+0xd60>  // b.none
   322f0:	ldr	x4, [sp, #56]
   322f4:	ldr	x3, [sp, #64]
   322f8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   322fc:	add	x2, x0, #0x9b8
   32300:	mov	w1, #0xda                  	// #218
   32304:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32308:	add	x0, x0, #0x7b8
   3230c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   32310:	ldr	x1, [sp, #24]
   32314:	ldr	x0, [sp, #88]
   32318:	bl	316d4 <__sanitizer_set_death_callback@@Base+0x124>
   3231c:	add	x0, sp, #0x30
   32320:	bl	1e048 <__sanitizer_set_report_fd@@Base+0x3e9c>
   32324:	nop
   32328:	ldr	x30, [sp], #112
   3232c:	ret
   32330:	stp	x19, x30, [sp, #-80]!
   32334:	str	x0, [sp, #40]
   32338:	str	x1, [sp, #32]
   3233c:	str	x2, [sp, #24]
   32340:	ldr	x0, [sp, #40]
   32344:	add	x1, x0, #0x18
   32348:	add	x0, sp, #0x38
   3234c:	bl	1e018 <__sanitizer_set_report_fd@@Base+0x3e6c>
   32350:	str	wzr, [sp, #76]
   32354:	ldr	x0, [sp, #40]
   32358:	ldr	w0, [x0, #112]
   3235c:	ldr	w1, [sp, #76]
   32360:	cmp	w1, w0
   32364:	b.cs	323d8 <__sanitizer_set_death_callback@@Base+0xe28>  // b.hs, b.nlast
   32368:	ldr	x0, [sp, #40]
   3236c:	ldr	x1, [x0, #152]
   32370:	ldr	w0, [sp, #76]
   32374:	lsl	x0, x0, #3
   32378:	add	x0, x1, x0
   3237c:	ldr	x0, [x0]
   32380:	str	x0, [sp, #64]
   32384:	ldr	x0, [sp, #64]
   32388:	cmp	x0, #0x0
   3238c:	b.eq	323c8 <__sanitizer_set_death_callback@@Base+0xe18>  // b.none
   32390:	ldr	x0, [sp, #64]
   32394:	ldr	x0, [x0, #40]
   32398:	ldr	x1, [sp, #32]
   3239c:	cmp	x1, x0
   323a0:	b.ne	323c8 <__sanitizer_set_death_callback@@Base+0xe18>  // b.any
   323a4:	ldr	x0, [sp, #64]
   323a8:	ldr	w0, [x0, #112]
   323ac:	cmp	w0, #0x0
   323b0:	b.eq	323c8 <__sanitizer_set_death_callback@@Base+0xe18>  // b.none
   323b4:	ldr	x1, [sp, #24]
   323b8:	ldr	x0, [sp, #64]
   323bc:	bl	316d4 <__sanitizer_set_death_callback@@Base+0x124>
   323c0:	mov	w19, #0x0                   	// #0
   323c4:	b	323dc <__sanitizer_set_death_callback@@Base+0xe2c>
   323c8:	ldr	w0, [sp, #76]
   323cc:	add	w0, w0, #0x1
   323d0:	str	w0, [sp, #76]
   323d4:	b	32354 <__sanitizer_set_death_callback@@Base+0xda4>
   323d8:	mov	w19, #0x1                   	// #1
   323dc:	add	x0, sp, #0x38
   323e0:	bl	1e048 <__sanitizer_set_report_fd@@Base+0x3e9c>
   323e4:	cmp	w19, #0x1
   323e8:	ldp	x19, x30, [sp], #80
   323ec:	ret
   323f0:	stp	x19, x30, [sp, #-96]!
   323f4:	str	x0, [sp, #40]
   323f8:	str	w1, [sp, #36]
   323fc:	str	x2, [sp, #24]
   32400:	ldr	x0, [sp, #40]
   32404:	add	x1, x0, #0x18
   32408:	add	x0, sp, #0x30
   3240c:	bl	1e018 <__sanitizer_set_report_fd@@Base+0x3e6c>
   32410:	ldr	w0, [sp, #36]
   32414:	str	x0, [sp, #88]
   32418:	ldr	x0, [sp, #40]
   3241c:	ldr	w0, [x0, #112]
   32420:	mov	w0, w0
   32424:	str	x0, [sp, #80]
   32428:	ldr	x1, [sp, #88]
   3242c:	ldr	x0, [sp, #80]
   32430:	cmp	x1, x0
   32434:	cset	w0, cs  // cs = hs, nlast
   32438:	and	w0, w0, #0xff
   3243c:	and	x0, x0, #0xff
   32440:	cmp	x0, #0x0
   32444:	b.eq	32468 <__sanitizer_set_death_callback@@Base+0xeb8>  // b.none
   32448:	ldr	x4, [sp, #80]
   3244c:	ldr	x3, [sp, #88]
   32450:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32454:	add	x2, x0, #0x998
   32458:	mov	w1, #0xed                  	// #237
   3245c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32460:	add	x0, x0, #0x7b8
   32464:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   32468:	ldr	x0, [sp, #40]
   3246c:	ldr	x1, [x0, #152]
   32470:	ldr	w0, [sp, #36]
   32474:	lsl	x0, x0, #3
   32478:	add	x0, x1, x0
   3247c:	ldr	x0, [x0]
   32480:	str	x0, [sp, #72]
   32484:	ldr	x0, [sp, #72]
   32488:	str	x0, [sp, #64]
   3248c:	str	xzr, [sp, #56]
   32490:	ldr	x1, [sp, #64]
   32494:	ldr	x0, [sp, #56]
   32498:	cmp	x1, x0
   3249c:	cset	w0, eq  // eq = none
   324a0:	and	w0, w0, #0xff
   324a4:	and	x0, x0, #0xff
   324a8:	cmp	x0, #0x0
   324ac:	b.eq	324d0 <__sanitizer_set_death_callback@@Base+0xf20>  // b.none
   324b0:	ldr	x4, [sp, #56]
   324b4:	ldr	x3, [sp, #64]
   324b8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   324bc:	add	x2, x0, #0x8e0
   324c0:	mov	w1, #0xef                  	// #239
   324c4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   324c8:	add	x0, x0, #0x7b8
   324cc:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   324d0:	ldr	x0, [sp, #72]
   324d4:	ldr	w0, [x0, #112]
   324d8:	cmp	w0, #0x0
   324dc:	b.ne	32504 <__sanitizer_set_death_callback@@Base+0xf54>  // b.any
   324e0:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   324e4:	ldr	x0, [x0, #4024]
   324e8:	ldr	x0, [x0]
   324ec:	mov	x1, x0
   324f0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   324f4:	add	x0, x0, #0xa00
   324f8:	bl	25a74 <OnPrint@@Base+0x454>
   324fc:	mov	w19, #0x0                   	// #0
   32500:	b	32558 <__sanitizer_set_death_callback@@Base+0xfa8>
   32504:	ldr	x0, [sp, #72]
   32508:	ldr	x0, [x0]
   3250c:	add	x0, x0, #0x30
   32510:	ldr	x2, [x0]
   32514:	ldr	x1, [sp, #24]
   32518:	ldr	x0, [sp, #72]
   3251c:	blr	x2
   32520:	ldr	x0, [sp, #72]
   32524:	ldr	w0, [x0, #112]
   32528:	cmp	w0, #0x3
   3252c:	b.ne	32548 <__sanitizer_set_death_callback@@Base+0xf98>  // b.any
   32530:	ldr	x0, [sp, #72]
   32534:	bl	3171c <__sanitizer_set_death_callback@@Base+0x16c>
   32538:	ldr	x1, [sp, #72]
   3253c:	ldr	x0, [sp, #40]
   32540:	bl	32adc <__sanitizer_set_death_callback@@Base+0x152c>
   32544:	b	32554 <__sanitizer_set_death_callback@@Base+0xfa4>
   32548:	ldr	x0, [sp, #72]
   3254c:	mov	w1, #0x1                   	// #1
   32550:	strb	w1, [x0, #116]
   32554:	mov	w19, #0x1                   	// #1
   32558:	add	x0, sp, #0x30
   3255c:	bl	1e048 <__sanitizer_set_report_fd@@Base+0x3e9c>
   32560:	cmp	w19, #0x1
   32564:	ldp	x19, x30, [sp], #96
   32568:	ret
   3256c:	stp	x19, x30, [sp, #-112]!
   32570:	str	x0, [sp, #40]
   32574:	str	w1, [sp, #36]
   32578:	str	x2, [sp, #24]
   3257c:	strb	wzr, [sp, #111]
   32580:	ldr	x0, [sp, #40]
   32584:	add	x1, x0, #0x18
   32588:	add	x0, sp, #0x38
   3258c:	bl	1e018 <__sanitizer_set_report_fd@@Base+0x3e6c>
   32590:	ldr	w0, [sp, #36]
   32594:	str	x0, [sp, #96]
   32598:	ldr	x0, [sp, #40]
   3259c:	ldr	w0, [x0, #112]
   325a0:	mov	w0, w0
   325a4:	str	x0, [sp, #88]
   325a8:	ldr	x1, [sp, #96]
   325ac:	ldr	x0, [sp, #88]
   325b0:	cmp	x1, x0
   325b4:	cset	w0, cs  // cs = hs, nlast
   325b8:	and	w0, w0, #0xff
   325bc:	and	x0, x0, #0xff
   325c0:	cmp	x0, #0x0
   325c4:	b.eq	325e8 <__sanitizer_set_death_callback@@Base+0x1038>  // b.none
   325c8:	ldr	x4, [sp, #88]
   325cc:	ldr	x3, [sp, #96]
   325d0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   325d4:	add	x2, x0, #0x998
   325d8:	mov	w1, #0x102                 	// #258
   325dc:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   325e0:	add	x0, x0, #0x7b8
   325e4:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   325e8:	ldr	x0, [sp, #40]
   325ec:	ldr	x1, [x0, #152]
   325f0:	ldr	w0, [sp, #36]
   325f4:	lsl	x0, x0, #3
   325f8:	add	x0, x1, x0
   325fc:	ldr	x0, [x0]
   32600:	str	x0, [sp, #80]
   32604:	ldr	x0, [sp, #80]
   32608:	str	x0, [sp, #72]
   3260c:	str	xzr, [sp, #64]
   32610:	ldr	x1, [sp, #72]
   32614:	ldr	x0, [sp, #64]
   32618:	cmp	x1, x0
   3261c:	cset	w0, eq  // eq = none
   32620:	and	w0, w0, #0xff
   32624:	and	x0, x0, #0xff
   32628:	cmp	x0, #0x0
   3262c:	b.eq	32650 <__sanitizer_set_death_callback@@Base+0x10a0>  // b.none
   32630:	ldr	x4, [sp, #64]
   32634:	ldr	x3, [sp, #72]
   32638:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3263c:	add	x2, x0, #0x8e0
   32640:	mov	w1, #0x104                 	// #260
   32644:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32648:	add	x0, x0, #0x7b8
   3264c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   32650:	ldr	x0, [sp, #80]
   32654:	ldr	w0, [x0, #112]
   32658:	cmp	w0, #0x0
   3265c:	b.ne	32684 <__sanitizer_set_death_callback@@Base+0x10d4>  // b.any
   32660:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   32664:	ldr	x0, [x0, #4024]
   32668:	ldr	x0, [x0]
   3266c:	mov	x1, x0
   32670:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32674:	add	x0, x0, #0xa28
   32678:	bl	25a74 <OnPrint@@Base+0x454>
   3267c:	mov	w19, #0x0                   	// #0
   32680:	b	326b8 <__sanitizer_set_death_callback@@Base+0x1108>
   32684:	ldr	x0, [sp, #80]
   32688:	bl	317f8 <__sanitizer_set_death_callback@@Base+0x248>
   3268c:	strb	w0, [sp, #111]
   32690:	ldrb	w0, [sp, #111]
   32694:	cmp	w0, #0x0
   32698:	b.eq	326b4 <__sanitizer_set_death_callback@@Base+0x1104>  // b.none
   3269c:	ldr	x1, [sp, #24]
   326a0:	ldr	x0, [sp, #80]
   326a4:	bl	31824 <__sanitizer_set_death_callback@@Base+0x274>
   326a8:	ldr	x1, [sp, #80]
   326ac:	ldr	x0, [sp, #40]
   326b0:	bl	32adc <__sanitizer_set_death_callback@@Base+0x152c>
   326b4:	mov	w19, #0x1                   	// #1
   326b8:	add	x0, sp, #0x38
   326bc:	bl	1e048 <__sanitizer_set_report_fd@@Base+0x3e9c>
   326c0:	cmp	w19, #0x1
   326c4:	b.ne	326f0 <__sanitizer_set_death_callback@@Base+0x1140>  // b.any
   326c8:	ldrb	w0, [sp, #111]
   326cc:	eor	w0, w0, #0x1
   326d0:	and	w0, w0, #0xff
   326d4:	cmp	w0, #0x0
   326d8:	b.eq	326e0 <__sanitizer_set_death_callback@@Base+0x1130>  // b.none
   326dc:	bl	1e668 <__sanitizer_set_report_fd@@Base+0x44bc>
   326e0:	ldrb	w0, [sp, #111]
   326e4:	cmp	w0, #0x0
   326e8:	b.ne	326f0 <__sanitizer_set_death_callback@@Base+0x1140>  // b.any
   326ec:	b	32580 <__sanitizer_set_death_callback@@Base+0xfd0>
   326f0:	ldp	x19, x30, [sp], #112
   326f4:	ret
   326f8:	str	x30, [sp, #-144]!
   326fc:	str	x0, [sp, #24]
   32700:	str	w1, [sp, #20]
   32704:	ldr	x0, [sp, #24]
   32708:	add	x1, x0, #0x18
   3270c:	add	x0, sp, #0x28
   32710:	bl	1e018 <__sanitizer_set_report_fd@@Base+0x3e6c>
   32714:	ldr	x0, [sp, #24]
   32718:	ldr	x0, [x0, #128]
   3271c:	str	x0, [sp, #128]
   32720:	str	xzr, [sp, #120]
   32724:	ldr	x1, [sp, #128]
   32728:	ldr	x0, [sp, #120]
   3272c:	cmp	x1, x0
   32730:	cset	w0, ls  // ls = plast
   32734:	and	w0, w0, #0xff
   32738:	and	x0, x0, #0xff
   3273c:	cmp	x0, #0x0
   32740:	b.eq	32764 <__sanitizer_set_death_callback@@Base+0x11b4>  // b.none
   32744:	ldr	x4, [sp, #120]
   32748:	ldr	x3, [sp, #128]
   3274c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32750:	add	x2, x0, #0xa50
   32754:	mov	w1, #0x11a                 	// #282
   32758:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3275c:	add	x0, x0, #0x7b8
   32760:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   32764:	ldr	x0, [sp, #24]
   32768:	ldr	x0, [x0, #128]
   3276c:	sub	x1, x0, #0x1
   32770:	ldr	x0, [sp, #24]
   32774:	str	x1, [x0, #128]
   32778:	ldr	w0, [sp, #20]
   3277c:	str	x0, [sp, #112]
   32780:	ldr	x0, [sp, #24]
   32784:	ldr	w0, [x0, #112]
   32788:	mov	w0, w0
   3278c:	str	x0, [sp, #104]
   32790:	ldr	x1, [sp, #112]
   32794:	ldr	x0, [sp, #104]
   32798:	cmp	x1, x0
   3279c:	cset	w0, cs  // cs = hs, nlast
   327a0:	and	w0, w0, #0xff
   327a4:	and	x0, x0, #0xff
   327a8:	cmp	x0, #0x0
   327ac:	b.eq	327d0 <__sanitizer_set_death_callback@@Base+0x1220>  // b.none
   327b0:	ldr	x4, [sp, #104]
   327b4:	ldr	x3, [sp, #112]
   327b8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   327bc:	add	x2, x0, #0x998
   327c0:	mov	w1, #0x11c                 	// #284
   327c4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   327c8:	add	x0, x0, #0x7b8
   327cc:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   327d0:	ldr	x0, [sp, #24]
   327d4:	ldr	x1, [x0, #152]
   327d8:	ldr	w0, [sp, #20]
   327dc:	lsl	x0, x0, #3
   327e0:	add	x0, x1, x0
   327e4:	ldr	x0, [x0]
   327e8:	str	x0, [sp, #96]
   327ec:	ldr	x0, [sp, #96]
   327f0:	str	x0, [sp, #88]
   327f4:	str	xzr, [sp, #80]
   327f8:	ldr	x1, [sp, #88]
   327fc:	ldr	x0, [sp, #80]
   32800:	cmp	x1, x0
   32804:	cset	w0, eq  // eq = none
   32808:	and	w0, w0, #0xff
   3280c:	and	x0, x0, #0xff
   32810:	cmp	x0, #0x0
   32814:	b.eq	32838 <__sanitizer_set_death_callback@@Base+0x1288>  // b.none
   32818:	ldr	x4, [sp, #80]
   3281c:	ldr	x3, [sp, #88]
   32820:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32824:	add	x2, x0, #0x8e0
   32828:	mov	w1, #0x11e                 	// #286
   3282c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32830:	add	x0, x0, #0x7b8
   32834:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   32838:	ldr	x0, [sp, #96]
   3283c:	ldrb	w0, [x0, #116]
   32840:	strb	w0, [sp, #143]
   32844:	ldr	x0, [sp, #96]
   32848:	ldr	w0, [x0, #112]
   3284c:	cmp	w0, #0x2
   32850:	b.ne	328bc <__sanitizer_set_death_callback@@Base+0x130c>  // b.any
   32854:	ldr	x0, [sp, #24]
   32858:	ldr	x0, [x0, #144]
   3285c:	str	x0, [sp, #56]
   32860:	str	xzr, [sp, #48]
   32864:	ldr	x1, [sp, #56]
   32868:	ldr	x0, [sp, #48]
   3286c:	cmp	x1, x0
   32870:	cset	w0, ls  // ls = plast
   32874:	and	w0, w0, #0xff
   32878:	and	x0, x0, #0xff
   3287c:	cmp	x0, #0x0
   32880:	b.eq	328a4 <__sanitizer_set_death_callback@@Base+0x12f4>  // b.none
   32884:	ldr	x4, [sp, #48]
   32888:	ldr	x3, [sp, #56]
   3288c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32890:	add	x2, x0, #0xa70
   32894:	mov	w1, #0x121                 	// #289
   32898:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3289c:	add	x0, x0, #0x7b8
   328a0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   328a4:	ldr	x0, [sp, #24]
   328a8:	ldr	x0, [x0, #144]
   328ac:	sub	x1, x0, #0x1
   328b0:	ldr	x0, [sp, #24]
   328b4:	str	x1, [x0, #144]
   328b8:	b	3291c <__sanitizer_set_death_callback@@Base+0x136c>
   328bc:	ldr	x0, [sp, #96]
   328c0:	ldr	w0, [x0, #112]
   328c4:	mov	w0, w0
   328c8:	str	x0, [sp, #72]
   328cc:	mov	x0, #0x1                   	// #1
   328d0:	str	x0, [sp, #64]
   328d4:	ldr	x1, [sp, #72]
   328d8:	ldr	x0, [sp, #64]
   328dc:	cmp	x1, x0
   328e0:	cset	w0, ne  // ne = any
   328e4:	and	w0, w0, #0xff
   328e8:	and	x0, x0, #0xff
   328ec:	cmp	x0, #0x0
   328f0:	b.eq	32914 <__sanitizer_set_death_callback@@Base+0x1364>  // b.none
   328f4:	ldr	x4, [sp, #64]
   328f8:	ldr	x3, [sp, #72]
   328fc:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32900:	add	x2, x0, #0xa90
   32904:	mov	w1, #0x125                 	// #293
   32908:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3290c:	add	x0, x0, #0x7b8
   32910:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   32914:	mov	w0, #0x1                   	// #1
   32918:	strb	w0, [sp, #143]
   3291c:	ldr	x0, [sp, #96]
   32920:	bl	31918 <__sanitizer_set_death_callback@@Base+0x368>
   32924:	ldrb	w0, [sp, #143]
   32928:	cmp	w0, #0x0
   3292c:	b.eq	32944 <__sanitizer_set_death_callback@@Base+0x1394>  // b.none
   32930:	ldr	x0, [sp, #96]
   32934:	bl	3171c <__sanitizer_set_death_callback@@Base+0x16c>
   32938:	ldr	x1, [sp, #96]
   3293c:	ldr	x0, [sp, #24]
   32940:	bl	32adc <__sanitizer_set_death_callback@@Base+0x152c>
   32944:	ldr	x0, [sp, #96]
   32948:	bl	317d0 <__sanitizer_set_death_callback@@Base+0x220>
   3294c:	add	x0, sp, #0x28
   32950:	bl	1e048 <__sanitizer_set_report_fd@@Base+0x3e9c>
   32954:	nop
   32958:	ldr	x30, [sp], #144
   3295c:	ret
   32960:	str	x30, [sp, #-112]!
   32964:	str	x0, [sp, #40]
   32968:	str	w1, [sp, #36]
   3296c:	str	x2, [sp, #24]
   32970:	strb	w3, [sp, #35]
   32974:	str	x4, [sp, #16]
   32978:	ldr	x0, [sp, #40]
   3297c:	add	x1, x0, #0x18
   32980:	add	x0, sp, #0x30
   32984:	bl	1e018 <__sanitizer_set_report_fd@@Base+0x3e6c>
   32988:	ldr	x0, [sp, #40]
   3298c:	ldr	x0, [x0, #144]
   32990:	add	x1, x0, #0x1
   32994:	ldr	x0, [sp, #40]
   32998:	str	x1, [x0, #144]
   3299c:	ldr	w0, [sp, #36]
   329a0:	str	x0, [sp, #104]
   329a4:	ldr	x0, [sp, #40]
   329a8:	ldr	w0, [x0, #112]
   329ac:	mov	w0, w0
   329b0:	str	x0, [sp, #96]
   329b4:	ldr	x1, [sp, #104]
   329b8:	ldr	x0, [sp, #96]
   329bc:	cmp	x1, x0
   329c0:	cset	w0, cs  // cs = hs, nlast
   329c4:	and	w0, w0, #0xff
   329c8:	and	x0, x0, #0xff
   329cc:	cmp	x0, #0x0
   329d0:	b.eq	329f4 <__sanitizer_set_death_callback@@Base+0x1444>  // b.none
   329d4:	ldr	x4, [sp, #96]
   329d8:	ldr	x3, [sp, #104]
   329dc:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   329e0:	add	x2, x0, #0x998
   329e4:	mov	w1, #0x134                 	// #308
   329e8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   329ec:	add	x0, x0, #0x7b8
   329f0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   329f4:	ldr	x0, [sp, #40]
   329f8:	ldr	x1, [x0, #152]
   329fc:	ldr	w0, [sp, #36]
   32a00:	lsl	x0, x0, #3
   32a04:	add	x0, x1, x0
   32a08:	ldr	x0, [x0]
   32a0c:	str	x0, [sp, #88]
   32a10:	ldr	x0, [sp, #88]
   32a14:	str	x0, [sp, #80]
   32a18:	str	xzr, [sp, #72]
   32a1c:	ldr	x1, [sp, #80]
   32a20:	ldr	x0, [sp, #72]
   32a24:	cmp	x1, x0
   32a28:	cset	w0, eq  // eq = none
   32a2c:	and	w0, w0, #0xff
   32a30:	and	x0, x0, #0xff
   32a34:	cmp	x0, #0x0
   32a38:	b.eq	32a5c <__sanitizer_set_death_callback@@Base+0x14ac>  // b.none
   32a3c:	ldr	x4, [sp, #72]
   32a40:	ldr	x3, [sp, #80]
   32a44:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32a48:	add	x2, x0, #0x8e0
   32a4c:	mov	w1, #0x136                 	// #310
   32a50:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32a54:	add	x0, x0, #0x7b8
   32a58:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   32a5c:	mov	x0, #0x1                   	// #1
   32a60:	str	x0, [sp, #64]
   32a64:	ldr	x0, [sp, #88]
   32a68:	ldr	w0, [x0, #112]
   32a6c:	mov	w0, w0
   32a70:	str	x0, [sp, #56]
   32a74:	ldr	x1, [sp, #64]
   32a78:	ldr	x0, [sp, #56]
   32a7c:	cmp	x1, x0
   32a80:	cset	w0, ne  // ne = any
   32a84:	and	w0, w0, #0xff
   32a88:	and	x0, x0, #0xff
   32a8c:	cmp	x0, #0x0
   32a90:	b.eq	32ab4 <__sanitizer_set_death_callback@@Base+0x1504>  // b.none
   32a94:	ldr	x4, [sp, #56]
   32a98:	ldr	x3, [sp, #64]
   32a9c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32aa0:	add	x2, x0, #0xac0
   32aa4:	mov	w1, #0x137                 	// #311
   32aa8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32aac:	add	x0, x0, #0x7b8
   32ab0:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   32ab4:	ldr	x3, [sp, #16]
   32ab8:	ldrb	w2, [sp, #35]
   32abc:	ldr	x1, [sp, #24]
   32ac0:	ldr	x0, [sp, #88]
   32ac4:	bl	31978 <__sanitizer_set_death_callback@@Base+0x3c8>
   32ac8:	add	x0, sp, #0x30
   32acc:	bl	1e048 <__sanitizer_set_report_fd@@Base+0x3e9c>
   32ad0:	nop
   32ad4:	ldr	x30, [sp], #112
   32ad8:	ret
   32adc:	str	x30, [sp, #-48]!
   32ae0:	str	x0, [sp, #24]
   32ae4:	str	x1, [sp, #16]
   32ae8:	ldr	x0, [sp, #16]
   32aec:	ldr	w0, [x0, #8]
   32af0:	cmp	w0, #0x0
   32af4:	b.eq	32c04 <__sanitizer_set_death_callback@@Base+0x1654>  // b.none
   32af8:	ldr	x0, [sp, #24]
   32afc:	add	x0, x0, #0xa0
   32b00:	ldr	x1, [sp, #16]
   32b04:	bl	32d68 <__sanitizer_set_death_callback@@Base+0x17b8>
   32b08:	ldr	x0, [sp, #24]
   32b0c:	add	x0, x0, #0xa0
   32b10:	bl	32e00 <__sanitizer_set_death_callback@@Base+0x1850>
   32b14:	mov	x1, x0
   32b18:	ldr	x0, [sp, #24]
   32b1c:	ldr	w0, [x0, #12]
   32b20:	mov	w0, w0
   32b24:	cmp	x1, x0
   32b28:	cset	w0, ls  // ls = plast
   32b2c:	and	w0, w0, #0xff
   32b30:	cmp	w0, #0x0
   32b34:	b.ne	32c0c <__sanitizer_set_death_callback@@Base+0x165c>  // b.any
   32b38:	ldr	x0, [sp, #24]
   32b3c:	add	x0, x0, #0xa0
   32b40:	bl	32e18 <__sanitizer_set_death_callback@@Base+0x1868>
   32b44:	str	x0, [sp, #16]
   32b48:	ldr	x0, [sp, #24]
   32b4c:	add	x0, x0, #0xa0
   32b50:	bl	32e30 <__sanitizer_set_death_callback@@Base+0x1880>
   32b54:	ldr	x0, [sp, #16]
   32b58:	ldr	w0, [x0, #112]
   32b5c:	mov	w0, w0
   32b60:	str	x0, [sp, #40]
   32b64:	mov	x0, #0x4                   	// #4
   32b68:	str	x0, [sp, #32]
   32b6c:	ldr	x1, [sp, #40]
   32b70:	ldr	x0, [sp, #32]
   32b74:	cmp	x1, x0
   32b78:	cset	w0, ne  // ne = any
   32b7c:	and	w0, w0, #0xff
   32b80:	and	x0, x0, #0xff
   32b84:	cmp	x0, #0x0
   32b88:	b.eq	32bac <__sanitizer_set_death_callback@@Base+0x15fc>  // b.none
   32b8c:	ldr	x4, [sp, #32]
   32b90:	ldr	x3, [sp, #40]
   32b94:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32b98:	add	x2, x0, #0xaf0
   32b9c:	mov	w1, #0x143                 	// #323
   32ba0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32ba4:	add	x0, x0, #0x7b8
   32ba8:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   32bac:	ldr	x0, [sp, #16]
   32bb0:	bl	31a68 <__sanitizer_set_death_callback@@Base+0x4b8>
   32bb4:	ldr	x0, [sp, #16]
   32bb8:	ldr	w0, [x0, #24]
   32bbc:	add	w1, w0, #0x1
   32bc0:	ldr	x0, [sp, #16]
   32bc4:	str	w1, [x0, #24]
   32bc8:	ldr	x0, [sp, #24]
   32bcc:	ldr	w0, [x0, #16]
   32bd0:	cmp	w0, #0x0
   32bd4:	b.eq	32bf0 <__sanitizer_set_death_callback@@Base+0x1640>  // b.none
   32bd8:	ldr	x0, [sp, #16]
   32bdc:	ldr	w1, [x0, #24]
   32be0:	ldr	x0, [sp, #24]
   32be4:	ldr	w0, [x0, #16]
   32be8:	cmp	w1, w0
   32bec:	b.cs	32c14 <__sanitizer_set_death_callback@@Base+0x1664>  // b.hs, b.nlast
   32bf0:	ldr	x0, [sp, #24]
   32bf4:	add	x0, x0, #0xb8
   32bf8:	ldr	x1, [sp, #16]
   32bfc:	bl	32d68 <__sanitizer_set_death_callback@@Base+0x17b8>
   32c00:	b	32c18 <__sanitizer_set_death_callback@@Base+0x1668>
   32c04:	nop
   32c08:	b	32c18 <__sanitizer_set_death_callback@@Base+0x1668>
   32c0c:	nop
   32c10:	b	32c18 <__sanitizer_set_death_callback@@Base+0x1668>
   32c14:	nop
   32c18:	ldr	x30, [sp], #48
   32c1c:	ret
   32c20:	str	x30, [sp, #-48]!
   32c24:	str	x0, [sp, #24]
   32c28:	ldr	x0, [sp, #24]
   32c2c:	add	x0, x0, #0xb8
   32c30:	bl	32e00 <__sanitizer_set_death_callback@@Base+0x1850>
   32c34:	cmp	x0, #0x0
   32c38:	cset	w0, eq  // eq = none
   32c3c:	and	w0, w0, #0xff
   32c40:	cmp	w0, #0x0
   32c44:	b.eq	32c50 <__sanitizer_set_death_callback@@Base+0x16a0>  // b.none
   32c48:	mov	x0, #0x0                   	// #0
   32c4c:	b	32c70 <__sanitizer_set_death_callback@@Base+0x16c0>
   32c50:	ldr	x0, [sp, #24]
   32c54:	add	x0, x0, #0xb8
   32c58:	bl	32e18 <__sanitizer_set_death_callback@@Base+0x1868>
   32c5c:	str	x0, [sp, #40]
   32c60:	ldr	x0, [sp, #24]
   32c64:	add	x0, x0, #0xb8
   32c68:	bl	32e30 <__sanitizer_set_death_callback@@Base+0x1880>
   32c6c:	ldr	x0, [sp, #40]
   32c70:	ldr	x30, [sp], #48
   32c74:	ret
   32c78:	sub	sp, sp, #0x10
   32c7c:	str	x0, [sp, #8]
   32c80:	nop
   32c84:	add	sp, sp, #0x10
   32c88:	ret
   32c8c:	sub	sp, sp, #0x10
   32c90:	str	x0, [sp, #8]
   32c94:	str	x1, [sp]
   32c98:	nop
   32c9c:	add	sp, sp, #0x10
   32ca0:	ret
   32ca4:	sub	sp, sp, #0x10
   32ca8:	str	x0, [sp, #8]
   32cac:	nop
   32cb0:	add	sp, sp, #0x10
   32cb4:	ret
   32cb8:	sub	sp, sp, #0x10
   32cbc:	str	x0, [sp, #8]
   32cc0:	str	x1, [sp]
   32cc4:	nop
   32cc8:	add	sp, sp, #0x10
   32ccc:	ret
   32cd0:	sub	sp, sp, #0x10
   32cd4:	str	x0, [sp, #8]
   32cd8:	str	x1, [sp]
   32cdc:	nop
   32ce0:	add	sp, sp, #0x10
   32ce4:	ret
   32ce8:	sub	sp, sp, #0x10
   32cec:	str	x0, [sp, #8]
   32cf0:	nop
   32cf4:	add	sp, sp, #0x10
   32cf8:	ret
   32cfc:	sub	sp, sp, #0x10
   32d00:	str	x0, [sp, #8]
   32d04:	str	x1, [sp]
   32d08:	nop
   32d0c:	add	sp, sp, #0x10
   32d10:	ret
   32d14:	str	x30, [sp, #-32]!
   32d18:	str	x0, [sp, #24]
   32d1c:	ldr	x0, [sp, #24]
   32d20:	add	x0, x0, #0x18
   32d24:	bl	1eea8 <__sanitizer_set_report_fd@@Base+0x4cfc>
   32d28:	nop
   32d2c:	ldr	x30, [sp], #32
   32d30:	ret
   32d34:	sub	sp, sp, #0x10
   32d38:	str	x0, [sp, #8]
   32d3c:	ldr	x0, [sp, #8]
   32d40:	str	xzr, [x0, #16]
   32d44:	ldr	x0, [sp, #8]
   32d48:	ldr	x1, [x0, #16]
   32d4c:	ldr	x0, [sp, #8]
   32d50:	str	x1, [x0, #8]
   32d54:	ldr	x0, [sp, #8]
   32d58:	str	xzr, [x0]
   32d5c:	nop
   32d60:	add	sp, sp, #0x10
   32d64:	ret
   32d68:	str	x30, [sp, #-32]!
   32d6c:	str	x0, [sp, #24]
   32d70:	str	x1, [sp, #16]
   32d74:	ldr	x0, [sp, #24]
   32d78:	bl	32ee4 <__sanitizer_set_death_callback@@Base+0x1934>
   32d7c:	and	w0, w0, #0xff
   32d80:	cmp	w0, #0x0
   32d84:	b.eq	32dbc <__sanitizer_set_death_callback@@Base+0x180c>  // b.none
   32d88:	ldr	x0, [sp, #16]
   32d8c:	str	xzr, [x0, #128]
   32d90:	ldr	x0, [sp, #24]
   32d94:	ldr	x1, [sp, #16]
   32d98:	str	x1, [x0, #16]
   32d9c:	ldr	x0, [sp, #24]
   32da0:	ldr	x1, [x0, #16]
   32da4:	ldr	x0, [sp, #24]
   32da8:	str	x1, [x0, #8]
   32dac:	ldr	x0, [sp, #24]
   32db0:	mov	x1, #0x1                   	// #1
   32db4:	str	x1, [x0]
   32db8:	b	32df4 <__sanitizer_set_death_callback@@Base+0x1844>
   32dbc:	ldr	x0, [sp, #16]
   32dc0:	str	xzr, [x0, #128]
   32dc4:	ldr	x0, [sp, #24]
   32dc8:	ldr	x0, [x0, #16]
   32dcc:	ldr	x1, [sp, #16]
   32dd0:	str	x1, [x0, #128]
   32dd4:	ldr	x0, [sp, #24]
   32dd8:	ldr	x1, [sp, #16]
   32ddc:	str	x1, [x0, #16]
   32de0:	ldr	x0, [sp, #24]
   32de4:	ldr	x0, [x0]
   32de8:	add	x1, x0, #0x1
   32dec:	ldr	x0, [sp, #24]
   32df0:	str	x1, [x0]
   32df4:	nop
   32df8:	ldr	x30, [sp], #32
   32dfc:	ret
   32e00:	sub	sp, sp, #0x10
   32e04:	str	x0, [sp, #8]
   32e08:	ldr	x0, [sp, #8]
   32e0c:	ldr	x0, [x0]
   32e10:	add	sp, sp, #0x10
   32e14:	ret
   32e18:	sub	sp, sp, #0x10
   32e1c:	str	x0, [sp, #8]
   32e20:	ldr	x0, [sp, #8]
   32e24:	ldr	x0, [x0, #8]
   32e28:	add	sp, sp, #0x10
   32e2c:	ret
   32e30:	str	x30, [sp, #-48]!
   32e34:	str	x0, [sp, #24]
   32e38:	ldr	x0, [sp, #24]
   32e3c:	bl	32ee4 <__sanitizer_set_death_callback@@Base+0x1934>
   32e40:	and	w0, w0, #0xff
   32e44:	eor	w0, w0, #0x1
   32e48:	and	w0, w0, #0xff
   32e4c:	and	x0, x0, #0xff
   32e50:	str	x0, [sp, #40]
   32e54:	str	xzr, [sp, #32]
   32e58:	ldr	x1, [sp, #40]
   32e5c:	ldr	x0, [sp, #32]
   32e60:	cmp	x1, x0
   32e64:	cset	w0, eq  // eq = none
   32e68:	and	w0, w0, #0xff
   32e6c:	and	x0, x0, #0xff
   32e70:	cmp	x0, #0x0
   32e74:	b.eq	32e98 <__sanitizer_set_death_callback@@Base+0x18e8>  // b.none
   32e78:	ldr	x4, [sp, #32]
   32e7c:	ldr	x3, [sp, #40]
   32e80:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32e84:	add	x2, x0, #0xb20
   32e88:	mov	w1, #0x40                  	// #64
   32e8c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32e90:	add	x0, x0, #0xb38
   32e94:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   32e98:	ldr	x0, [sp, #24]
   32e9c:	ldr	x0, [x0, #8]
   32ea0:	ldr	x1, [x0, #128]
   32ea4:	ldr	x0, [sp, #24]
   32ea8:	str	x1, [x0, #8]
   32eac:	ldr	x0, [sp, #24]
   32eb0:	ldr	x0, [x0, #8]
   32eb4:	cmp	x0, #0x0
   32eb8:	b.ne	32ec4 <__sanitizer_set_death_callback@@Base+0x1914>  // b.any
   32ebc:	ldr	x0, [sp, #24]
   32ec0:	str	xzr, [x0, #16]
   32ec4:	ldr	x0, [sp, #24]
   32ec8:	ldr	x0, [x0]
   32ecc:	sub	x1, x0, #0x1
   32ed0:	ldr	x0, [sp, #24]
   32ed4:	str	x1, [x0]
   32ed8:	nop
   32edc:	ldr	x30, [sp], #48
   32ee0:	ret
   32ee4:	sub	sp, sp, #0x10
   32ee8:	str	x0, [sp, #8]
   32eec:	ldr	x0, [sp, #8]
   32ef0:	ldr	x0, [x0]
   32ef4:	cmp	x0, #0x0
   32ef8:	cset	w0, eq  // eq = none
   32efc:	and	w0, w0, #0xff
   32f00:	add	sp, sp, #0x10
   32f04:	ret
   32f08:	str	x30, [sp, #-32]!
   32f0c:	str	x0, [sp, #24]
   32f10:	str	x1, [sp, #16]
   32f14:	ldr	x0, [sp, #16]
   32f18:	cmp	x0, #0x0
   32f1c:	b.eq	32f7c <__sanitizer_set_death_callback@@Base+0x19cc>  // b.none
   32f20:	bl	9984 <__ubsan_default_options@@Base+0x320>
   32f24:	sxtw	x0, w0
   32f28:	cmp	x0, #0x1
   32f2c:	cset	w0, hi  // hi = pmore
   32f30:	and	w0, w0, #0xff
   32f34:	cmp	w0, #0x0
   32f38:	b.eq	32f50 <__sanitizer_set_death_callback@@Base+0x19a0>  // b.none
   32f3c:	ldr	x2, [sp, #16]
   32f40:	ldr	x1, [sp, #24]
   32f44:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32f48:	add	x0, x0, #0xcb0
   32f4c:	bl	25a74 <OnPrint@@Base+0x454>
   32f50:	ldr	x0, [sp, #16]
   32f54:	lsl	x0, x0, #4
   32f58:	mov	x1, x0
   32f5c:	ldr	x0, [sp, #24]
   32f60:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   32f64:	mov	w2, #0x1                   	// #1
   32f68:	mov	x1, #0x1                   	// #1
   32f6c:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   32f70:	add	x0, x0, #0x390
   32f74:	bl	14cb0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x33c>
   32f78:	b	32f80 <__sanitizer_set_death_callback@@Base+0x19d0>
   32f7c:	nop
   32f80:	ldr	x30, [sp], #32
   32f84:	ret
   32f88:	str	x30, [sp, #-80]!
   32f8c:	str	x0, [sp, #24]
   32f90:	mrs	x1, tpidr_el0
   32f94:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   32f98:	ldr	x0, [x0, #3752]
   32f9c:	add	x0, x1, x0
   32fa0:	ldr	x0, [x0]
   32fa4:	ldr	x1, [sp, #24]
   32fa8:	cmp	x1, x0
   32fac:	b.ls	33158 <__sanitizer_set_death_callback@@Base+0x1ba8>  // b.plast
   32fb0:	ldr	x0, [sp, #24]
   32fb4:	bl	20578 <__sanitizer_set_report_fd@@Base+0x63cc>
   32fb8:	str	x0, [sp, #24]
   32fbc:	mov	x1, #0x100                 	// #256
   32fc0:	ldr	x0, [sp, #24]
   32fc4:	bl	93a4 <__asan_backtrace_open@plt+0x2734>
   32fc8:	str	x0, [sp, #24]
   32fcc:	ldr	x0, [sp, #24]
   32fd0:	lsl	x3, x0, #4
   32fd4:	mov	w2, #0x0                   	// #0
   32fd8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   32fdc:	add	x1, x0, #0xcd8
   32fe0:	mov	x0, x3
   32fe4:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   32fe8:	str	x0, [sp, #72]
   32fec:	mov	w2, #0x1                   	// #1
   32ff0:	mov	x1, #0x1                   	// #1
   32ff4:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   32ff8:	add	x0, x0, #0x390
   32ffc:	bl	14c78 <__sanitizer_install_malloc_and_free_hooks@@Base+0x304>
   33000:	str	x0, [sp, #64]
   33004:	bl	9984 <__ubsan_default_options@@Base+0x320>
   33008:	sxtw	x0, w0
   3300c:	cmp	x0, #0x1
   33010:	cset	w0, hi  // hi = pmore
   33014:	and	w0, w0, #0xff
   33018:	cmp	w0, #0x0
   3301c:	b.eq	33044 <__sanitizer_set_death_callback@@Base+0x1a94>  // b.none
   33020:	mrs	x1, tpidr_el0
   33024:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   33028:	ldr	x0, [x0, #3752]
   3302c:	add	x0, x1, x0
   33030:	ldr	x2, [sp, #64]
   33034:	mov	x1, x0
   33038:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3303c:	add	x0, x0, #0xce8
   33040:	bl	25a74 <OnPrint@@Base+0x454>
   33044:	ldr	x0, [sp, #64]
   33048:	str	x0, [sp, #56]
   3304c:	mov	x0, #0x100000              	// #1048576
   33050:	str	x0, [sp, #48]
   33054:	ldr	x1, [sp, #56]
   33058:	ldr	x0, [sp, #48]
   3305c:	cmp	x1, x0
   33060:	cset	w0, cs  // cs = hs, nlast
   33064:	and	w0, w0, #0xff
   33068:	and	x0, x0, #0xff
   3306c:	cmp	x0, #0x0
   33070:	b.eq	33094 <__sanitizer_set_death_callback@@Base+0x1ae4>  // b.none
   33074:	ldr	x4, [sp, #48]
   33078:	ldr	x3, [sp, #56]
   3307c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   33080:	add	x2, x0, #0xd10
   33084:	mov	w1, #0x3c                  	// #60
   33088:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3308c:	add	x0, x0, #0xd30
   33090:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   33094:	mrs	x1, tpidr_el0
   33098:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   3309c:	ldr	x0, [x0, #3752]
   330a0:	add	x0, x1, x0
   330a4:	ldr	x0, [x0]
   330a8:	str	x0, [sp, #40]
   330ac:	mrs	x1, tpidr_el0
   330b0:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   330b4:	ldr	x0, [x0, #3752]
   330b8:	add	x0, x1, x0
   330bc:	ldr	x0, [x0, #8]
   330c0:	str	x0, [sp, #32]
   330c4:	ldr	x0, [sp, #40]
   330c8:	cmp	x0, #0x0
   330cc:	b.eq	3310c <__sanitizer_set_death_callback@@Base+0x1b5c>  // b.none
   330d0:	mrs	x1, tpidr_el0
   330d4:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   330d8:	ldr	x0, [x0, #3752]
   330dc:	add	x0, x1, x0
   330e0:	ldr	x3, [x0, #8]
   330e4:	mrs	x1, tpidr_el0
   330e8:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   330ec:	ldr	x0, [x0, #3752]
   330f0:	add	x0, x1, x0
   330f4:	ldr	x0, [x0]
   330f8:	lsl	x0, x0, #4
   330fc:	mov	x2, x0
   33100:	mov	x1, x3
   33104:	ldr	x0, [sp, #72]
   33108:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   3310c:	mrs	x1, tpidr_el0
   33110:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   33114:	ldr	x0, [x0, #3752]
   33118:	add	x0, x1, x0
   3311c:	ldr	x1, [sp, #72]
   33120:	str	x1, [x0, #8]
   33124:	mrs	x1, tpidr_el0
   33128:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   3312c:	ldr	x0, [x0, #3752]
   33130:	add	x0, x1, x0
   33134:	ldr	x1, [sp, #24]
   33138:	str	x1, [x0]
   3313c:	ldr	x0, [sp, #40]
   33140:	cmp	x0, #0x0
   33144:	b.eq	3315c <__sanitizer_set_death_callback@@Base+0x1bac>  // b.none
   33148:	ldr	x1, [sp, #40]
   3314c:	ldr	x0, [sp, #32]
   33150:	bl	32f08 <__sanitizer_set_death_callback@@Base+0x1958>
   33154:	b	3315c <__sanitizer_set_death_callback@@Base+0x1bac>
   33158:	nop
   3315c:	ldr	x30, [sp], #80
   33160:	ret
   33164:	str	x30, [sp, #-32]!
   33168:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   3316c:	ldrb	w0, [x0, #121]
   33170:	eor	w0, w0, #0x1
   33174:	and	w0, w0, #0xff
   33178:	cmp	w0, #0x0
   3317c:	b.ne	33220 <__sanitizer_set_death_callback@@Base+0x1c70>  // b.any
   33180:	bl	9984 <__ubsan_default_options@@Base+0x320>
   33184:	sxtw	x0, w0
   33188:	cmp	x0, #0x1
   3318c:	cset	w0, hi  // hi = pmore
   33190:	and	w0, w0, #0xff
   33194:	cmp	w0, #0x0
   33198:	b.eq	331d0 <__sanitizer_set_death_callback@@Base+0x1c20>  // b.none
   3319c:	mrs	x1, tpidr_el0
   331a0:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   331a4:	ldr	x0, [x0, #3752]
   331a8:	add	x0, x1, x0
   331ac:	ldr	x2, [x0]
   331b0:	mrs	x1, tpidr_el0
   331b4:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   331b8:	ldr	x0, [x0, #3752]
   331bc:	add	x0, x1, x0
   331c0:	mov	x1, x0
   331c4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   331c8:	add	x0, x0, #0xd78
   331cc:	bl	25a74 <OnPrint@@Base+0x454>
   331d0:	mrs	x1, tpidr_el0
   331d4:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   331d8:	ldr	x0, [x0, #3752]
   331dc:	add	x0, x1, x0
   331e0:	ldr	x0, [x0]
   331e4:	str	x0, [sp, #24]
   331e8:	mrs	x1, tpidr_el0
   331ec:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   331f0:	ldr	x0, [x0, #3752]
   331f4:	add	x0, x1, x0
   331f8:	mov	x1, #0xffffffffffffffff    	// #-1
   331fc:	str	x1, [x0]
   33200:	mrs	x1, tpidr_el0
   33204:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   33208:	ldr	x0, [x0, #3752]
   3320c:	add	x0, x1, x0
   33210:	ldr	x0, [x0, #8]
   33214:	ldr	x1, [sp, #24]
   33218:	bl	32f08 <__sanitizer_set_death_callback@@Base+0x1958>
   3321c:	b	33224 <__sanitizer_set_death_callback@@Base+0x1c74>
   33220:	nop
   33224:	ldr	x30, [sp], #32
   33228:	ret
   3322c:	stp	x19, x20, [sp, #-112]!
   33230:	stp	x21, x30, [sp, #16]
   33234:	str	x0, [sp, #56]
   33238:	str	x1, [sp, #48]
   3323c:	str	x2, [sp, #40]
   33240:	str	x3, [sp, #32]
   33244:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   33248:	ldrb	w0, [x0, #121]
   3324c:	eor	w0, w0, #0x1
   33250:	and	w0, w0, #0xff
   33254:	cmp	w0, #0x0
   33258:	b.eq	33264 <__sanitizer_set_death_callback@@Base+0x1cb4>  // b.none
   3325c:	mov	x0, #0x0                   	// #0
   33260:	b	33534 <__sanitizer_set_death_callback@@Base+0x1f84>
   33264:	ldr	x0, [sp, #56]
   33268:	str	x0, [sp, #96]
   3326c:	ldr	x0, [sp, #96]
   33270:	ldr	x0, [x0]
   33274:	str	x0, [sp, #88]
   33278:	mrs	x1, tpidr_el0
   3327c:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   33280:	ldr	x0, [x0, #3752]
   33284:	add	x0, x1, x0
   33288:	ldr	x0, [x0]
   3328c:	cmn	x0, #0x1
   33290:	b.ne	3329c <__sanitizer_set_death_callback@@Base+0x1cec>  // b.any
   33294:	mov	x0, #0x0                   	// #0
   33298:	b	33534 <__sanitizer_set_death_callback@@Base+0x1f84>
   3329c:	ldr	x0, [sp, #88]
   332a0:	add	x0, x0, #0x1
   332a4:	bl	32f88 <__sanitizer_set_death_callback@@Base+0x19d8>
   332a8:	mrs	x1, tpidr_el0
   332ac:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   332b0:	ldr	x0, [x0, #3752]
   332b4:	add	x0, x1, x0
   332b8:	ldr	x1, [x0, #8]
   332bc:	ldr	x0, [sp, #88]
   332c0:	lsl	x0, x0, #4
   332c4:	add	x0, x1, x0
   332c8:	ldr	x0, [x0]
   332cc:	cmp	x0, #0x0
   332d0:	b.eq	332dc <__sanitizer_set_death_callback@@Base+0x1d2c>  // b.none
   332d4:	mov	x0, #0x0                   	// #0
   332d8:	b	33534 <__sanitizer_set_death_callback@@Base+0x1f84>
   332dc:	str	xzr, [sp, #104]
   332e0:	ldr	x1, [sp, #48]
   332e4:	ldr	x0, [sp, #96]
   332e8:	ldr	x0, [x0, #8]
   332ec:	sub	x0, x1, x0
   332f0:	str	x0, [sp, #72]
   332f4:	bl	9984 <__ubsan_default_options@@Base+0x320>
   332f8:	sxtw	x0, w0
   332fc:	cmp	x0, #0x1
   33300:	cset	w0, hi  // hi = pmore
   33304:	and	w0, w0, #0xff
   33308:	cmp	w0, #0x0
   3330c:	b.eq	33364 <__sanitizer_set_death_callback@@Base+0x1db4>  // b.none
   33310:	ldr	x0, [sp, #96]
   33314:	ldr	x19, [x0]
   33318:	ldr	x0, [sp, #96]
   3331c:	ldr	x20, [x0, #8]
   33320:	ldr	x21, [sp, #72]
   33324:	mov	w1, #0x1                   	// #1
   33328:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   3332c:	add	x0, x0, #0x390
   33330:	bl	11080 <__sancov_default_options@@Base+0xcd4>
   33334:	mov	x1, x0
   33338:	add	x0, sp, #0x48
   3333c:	mov	x7, x1
   33340:	mov	x6, x0
   33344:	mov	x5, x21
   33348:	ldr	x4, [sp, #48]
   3334c:	mov	x3, x20
   33350:	mov	x2, x19
   33354:	ldr	x1, [sp, #96]
   33358:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3335c:	add	x0, x0, #0xda8
   33360:	bl	25a74 <OnPrint@@Base+0x454>
   33364:	mrs	x1, tpidr_el0
   33368:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   3336c:	ldr	x0, [x0, #3752]
   33370:	add	x0, x1, x0
   33374:	ldr	x1, [x0, #24]
   33378:	ldr	x0, [sp, #72]
   3337c:	cmp	x1, x0
   33380:	b.ne	333d4 <__sanitizer_set_death_callback@@Base+0x1e24>  // b.any
   33384:	mrs	x1, tpidr_el0
   33388:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   3338c:	ldr	x0, [x0, #3752]
   33390:	add	x0, x1, x0
   33394:	ldr	x0, [x0, #16]
   33398:	str	x0, [sp, #104]
   3339c:	bl	9984 <__ubsan_default_options@@Base+0x320>
   333a0:	sxtw	x0, w0
   333a4:	cmp	x0, #0x1
   333a8:	cset	w0, hi  // hi = pmore
   333ac:	and	w0, w0, #0xff
   333b0:	cmp	w0, #0x0
   333b4:	b.eq	334c4 <__sanitizer_set_death_callback@@Base+0x1f14>  // b.none
   333b8:	ldr	x0, [sp, #72]
   333bc:	ldr	x2, [sp, #104]
   333c0:	mov	x1, x0
   333c4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   333c8:	add	x0, x0, #0xdf8
   333cc:	bl	25a74 <OnPrint@@Base+0x454>
   333d0:	b	334c4 <__sanitizer_set_death_callback@@Base+0x1f14>
   333d4:	ldr	x0, [sp, #72]
   333d8:	ldr	x1, [sp, #40]
   333dc:	cmp	x1, x0
   333e0:	b.hi	3342c <__sanitizer_set_death_callback@@Base+0x1e7c>  // b.pmore
   333e4:	ldr	x0, [sp, #72]
   333e8:	ldr	x1, [sp, #32]
   333ec:	cmp	x1, x0
   333f0:	b.ls	3342c <__sanitizer_set_death_callback@@Base+0x1e7c>  // b.plast
   333f4:	bl	9984 <__ubsan_default_options@@Base+0x320>
   333f8:	sxtw	x0, w0
   333fc:	cmp	x0, #0x1
   33400:	cset	w0, hi  // hi = pmore
   33404:	and	w0, w0, #0xff
   33408:	cmp	w0, #0x0
   3340c:	b.eq	33424 <__sanitizer_set_death_callback@@Base+0x1e74>  // b.none
   33410:	ldr	x0, [sp, #72]
   33414:	mov	x1, x0
   33418:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3341c:	add	x0, x0, #0xe30
   33420:	bl	25a74 <OnPrint@@Base+0x454>
   33424:	str	xzr, [sp, #104]
   33428:	b	334c4 <__sanitizer_set_death_callback@@Base+0x1f14>
   3342c:	ldr	x0, [sp, #72]
   33430:	and	x0, x0, #0xfff
   33434:	cmp	x0, #0x10
   33438:	b.ne	33498 <__sanitizer_set_death_callback@@Base+0x1ee8>  // b.any
   3343c:	ldr	x0, [sp, #72]
   33440:	sub	x0, x0, #0x10
   33444:	str	x0, [sp, #80]
   33448:	ldr	x0, [sp, #80]
   3344c:	ldr	x0, [x0]
   33450:	str	x0, [sp, #104]
   33454:	ldr	x0, [sp, #80]
   33458:	ldr	x0, [x0, #8]
   3345c:	str	x0, [sp, #72]
   33460:	bl	9984 <__ubsan_default_options@@Base+0x320>
   33464:	sxtw	x0, w0
   33468:	cmp	x0, #0x1
   3346c:	cset	w0, hi  // hi = pmore
   33470:	and	w0, w0, #0xff
   33474:	cmp	w0, #0x0
   33478:	b.eq	334c4 <__sanitizer_set_death_callback@@Base+0x1f14>  // b.none
   3347c:	ldr	x0, [sp, #72]
   33480:	ldr	x2, [sp, #104]
   33484:	mov	x1, x0
   33488:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3348c:	add	x0, x0, #0xe50
   33490:	bl	25a74 <OnPrint@@Base+0x454>
   33494:	b	334c4 <__sanitizer_set_death_callback@@Base+0x1f14>
   33498:	bl	9984 <__ubsan_default_options@@Base+0x320>
   3349c:	sxtw	x0, w0
   334a0:	cmp	x0, #0x1
   334a4:	cset	w0, hi  // hi = pmore
   334a8:	and	w0, w0, #0xff
   334ac:	cmp	w0, #0x0
   334b0:	b.eq	334c0 <__sanitizer_set_death_callback@@Base+0x1f10>  // b.none
   334b4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   334b8:	add	x0, x0, #0xe88
   334bc:	bl	25a74 <OnPrint@@Base+0x454>
   334c0:	str	xzr, [sp, #104]
   334c4:	mrs	x1, tpidr_el0
   334c8:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   334cc:	ldr	x0, [x0, #3752]
   334d0:	add	x0, x1, x0
   334d4:	ldr	x1, [x0, #8]
   334d8:	ldr	x0, [sp, #88]
   334dc:	lsl	x0, x0, #4
   334e0:	add	x0, x1, x0
   334e4:	ldr	x1, [sp, #72]
   334e8:	str	x1, [x0]
   334ec:	mrs	x1, tpidr_el0
   334f0:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   334f4:	ldr	x0, [x0, #3752]
   334f8:	add	x0, x1, x0
   334fc:	ldr	x1, [x0, #8]
   33500:	ldr	x0, [sp, #88]
   33504:	lsl	x0, x0, #4
   33508:	add	x0, x1, x0
   3350c:	ldr	x1, [sp, #104]
   33510:	str	x1, [x0, #8]
   33514:	mrs	x1, tpidr_el0
   33518:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   3351c:	ldr	x0, [x0, #3752]
   33520:	add	x0, x1, x0
   33524:	ldr	x1, [x0, #8]
   33528:	ldr	x0, [sp, #88]
   3352c:	lsl	x0, x0, #4
   33530:	add	x0, x1, x0
   33534:	ldp	x21, x30, [sp, #16]
   33538:	ldp	x19, x20, [sp], #112
   3353c:	ret
   33540:	str	x30, [sp, #-32]!
   33544:	str	x0, [sp, #24]
   33548:	str	x1, [sp, #16]
   3354c:	bl	8918 <__asan_backtrace_open@plt+0x1ca8>
   33550:	ldrb	w0, [x0, #121]
   33554:	eor	w0, w0, #0x1
   33558:	and	w0, w0, #0xff
   3355c:	cmp	w0, #0x0
   33560:	b.ne	335c8 <__sanitizer_set_death_callback@@Base+0x2018>  // b.any
   33564:	bl	9984 <__ubsan_default_options@@Base+0x320>
   33568:	sxtw	x0, w0
   3356c:	cmp	x0, #0x1
   33570:	cset	w0, hi  // hi = pmore
   33574:	and	w0, w0, #0xff
   33578:	cmp	w0, #0x0
   3357c:	b.eq	33594 <__sanitizer_set_death_callback@@Base+0x1fe4>  // b.none
   33580:	ldr	x2, [sp, #16]
   33584:	ldr	x1, [sp, #24]
   33588:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3358c:	add	x0, x0, #0xeb8
   33590:	bl	25a74 <OnPrint@@Base+0x454>
   33594:	ldr	x1, [sp, #24]
   33598:	mrs	x2, tpidr_el0
   3359c:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   335a0:	ldr	x0, [x0, #3752]
   335a4:	add	x0, x2, x0
   335a8:	str	x1, [x0, #24]
   335ac:	mrs	x1, tpidr_el0
   335b0:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   335b4:	ldr	x0, [x0, #3752]
   335b8:	add	x0, x1, x0
   335bc:	ldr	x1, [sp, #16]
   335c0:	str	x1, [x0, #16]
   335c4:	b	335cc <__sanitizer_set_death_callback@@Base+0x201c>
   335c8:	nop
   335cc:	ldr	x30, [sp], #32
   335d0:	ret
   335d4:	mrs	x1, tpidr_el0
   335d8:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   335dc:	ldr	x0, [x0, #3752]
   335e0:	add	x0, x1, x0
   335e4:	ret
   335e8:	sub	sp, sp, #0x10
   335ec:	str	x0, [sp, #8]
   335f0:	ldr	x0, [sp, #8]
   335f4:	ldr	x0, [x0]
   335f8:	cmn	x0, #0x1
   335fc:	cset	w0, eq  // eq = none
   33600:	and	w0, w0, #0xff
   33604:	add	sp, sp, #0x10
   33608:	ret
   3360c:	str	x30, [sp, #-32]!
   33610:	str	x0, [sp, #24]
   33614:	ldr	x0, [sp, #24]
   33618:	bl	6970 <_Unwind_GetIP@plt>
   3361c:	ldr	x30, [sp], #32
   33620:	ret
   33624:	str	x30, [sp, #-80]!
   33628:	str	x0, [sp, #24]
   3362c:	str	x1, [sp, #16]
   33630:	ldr	x0, [sp, #16]
   33634:	str	x0, [sp, #72]
   33638:	ldr	x0, [sp, #72]
   3363c:	ldr	x0, [x0]
   33640:	ldr	w0, [x0, #8]
   33644:	mov	w0, w0
   33648:	str	x0, [sp, #64]
   3364c:	ldr	x0, [sp, #72]
   33650:	ldr	w0, [x0, #8]
   33654:	mov	w0, w0
   33658:	str	x0, [sp, #56]
   3365c:	ldr	x1, [sp, #64]
   33660:	ldr	x0, [sp, #56]
   33664:	cmp	x1, x0
   33668:	cset	w0, cs  // cs = hs, nlast
   3366c:	and	w0, w0, #0xff
   33670:	and	x0, x0, #0xff
   33674:	cmp	x0, #0x0
   33678:	b.eq	3369c <__sanitizer_set_death_callback@@Base+0x20ec>  // b.none
   3367c:	ldr	x4, [sp, #56]
   33680:	ldr	x3, [sp, #64]
   33684:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   33688:	add	x2, x0, #0xf48
   3368c:	mov	w1, #0x6d                  	// #109
   33690:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   33694:	add	x0, x0, #0xf78
   33698:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   3369c:	ldr	x0, [sp, #24]
   336a0:	bl	3360c <__sanitizer_set_death_callback@@Base+0x205c>
   336a4:	str	x0, [sp, #48]
   336a8:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   336ac:	str	x0, [sp, #40]
   336b0:	ldr	x1, [sp, #48]
   336b4:	ldr	x0, [sp, #40]
   336b8:	cmp	x1, x0
   336bc:	b.cs	336c8 <__sanitizer_set_death_callback@@Base+0x2118>  // b.hs, b.nlast
   336c0:	mov	w0, #0x4                   	// #4
   336c4:	b	3371c <__sanitizer_set_death_callback@@Base+0x216c>
   336c8:	ldr	x0, [sp, #72]
   336cc:	ldr	x2, [x0]
   336d0:	ldr	x0, [sp, #72]
   336d4:	ldr	x0, [x0]
   336d8:	ldr	w1, [x0, #8]
   336dc:	add	w3, w1, #0x1
   336e0:	str	w3, [x0, #8]
   336e4:	mov	w0, w1
   336e8:	add	x0, x0, #0x2
   336ec:	ldr	x1, [sp, #48]
   336f0:	str	x1, [x2, x0, lsl #3]
   336f4:	ldr	x0, [sp, #72]
   336f8:	ldr	x0, [x0]
   336fc:	ldr	w1, [x0, #8]
   33700:	ldr	x0, [sp, #72]
   33704:	ldr	w0, [x0, #8]
   33708:	cmp	w1, w0
   3370c:	b.ne	33718 <__sanitizer_set_death_callback@@Base+0x2168>  // b.any
   33710:	mov	w0, #0x4                   	// #4
   33714:	b	3371c <__sanitizer_set_death_callback@@Base+0x216c>
   33718:	mov	w0, #0x0                   	// #0
   3371c:	ldr	x30, [sp], #80
   33720:	ret
   33724:	str	x30, [sp, #-96]!
   33728:	str	x0, [sp, #40]
   3372c:	str	x1, [sp, #32]
   33730:	str	w2, [sp, #28]
   33734:	ldr	w0, [sp, #28]
   33738:	str	x0, [sp, #80]
   3373c:	mov	x0, #0x2                   	// #2
   33740:	str	x0, [sp, #72]
   33744:	ldr	x1, [sp, #80]
   33748:	ldr	x0, [sp, #72]
   3374c:	cmp	x1, x0
   33750:	cset	w0, cc  // cc = lo, ul, last
   33754:	and	w0, w0, #0xff
   33758:	and	x0, x0, #0xff
   3375c:	cmp	x0, #0x0
   33760:	b.eq	33784 <__sanitizer_set_death_callback@@Base+0x21d4>  // b.none
   33764:	ldr	x4, [sp, #72]
   33768:	ldr	x3, [sp, #80]
   3376c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   33770:	add	x2, x0, #0xfc8
   33774:	mov	w1, #0x7a                  	// #122
   33778:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   3377c:	add	x0, x0, #0xf78
   33780:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   33784:	ldr	x0, [sp, #40]
   33788:	str	wzr, [x0, #8]
   3378c:	ldr	x0, [sp, #40]
   33790:	str	x0, [sp, #56]
   33794:	ldr	w0, [sp, #28]
   33798:	add	w0, w0, #0x1
   3379c:	mov	w1, #0x100                 	// #256
   337a0:	bl	33a3c <__sanitizer_set_death_callback@@Base+0x248c>
   337a4:	str	w0, [sp, #64]
   337a8:	add	x0, sp, #0x38
   337ac:	mov	x1, x0
   337b0:	adrp	x0, 33000 <__sanitizer_set_death_callback@@Base+0x1a50>
   337b4:	add	x0, x0, #0x624
   337b8:	bl	6580 <_Unwind_Backtrace@plt>
   337bc:	ldr	x1, [sp, #32]
   337c0:	ldr	x0, [sp, #40]
   337c4:	bl	28a70 <OnPrint@@Base+0x3450>
   337c8:	str	x0, [sp, #88]
   337cc:	ldr	x0, [sp, #88]
   337d0:	cmp	x0, #0x0
   337d4:	b.ne	337f0 <__sanitizer_set_death_callback@@Base+0x2240>  // b.any
   337d8:	ldr	x0, [sp, #40]
   337dc:	ldr	w0, [x0, #8]
   337e0:	cmp	w0, #0x1
   337e4:	b.ls	337f0 <__sanitizer_set_death_callback@@Base+0x2240>  // b.plast
   337e8:	mov	x0, #0x1                   	// #1
   337ec:	str	x0, [sp, #88]
   337f0:	ldr	x1, [sp, #88]
   337f4:	ldr	x0, [sp, #40]
   337f8:	bl	28954 <OnPrint@@Base+0x3334>
   337fc:	ldr	x0, [sp, #40]
   33800:	ldr	x1, [sp, #32]
   33804:	str	x1, [x0, #16]
   33808:	nop
   3380c:	ldr	x30, [sp], #96
   33810:	ret
   33814:	stp	x19, x30, [sp, #-144]!
   33818:	str	x0, [sp, #40]
   3381c:	str	x1, [sp, #32]
   33820:	str	x2, [sp, #24]
   33824:	str	w3, [sp, #20]
   33828:	ldr	w0, [sp, #20]
   3382c:	str	x0, [sp, #128]
   33830:	mov	x0, #0x2                   	// #2
   33834:	str	x0, [sp, #120]
   33838:	ldr	x1, [sp, #128]
   3383c:	ldr	x0, [sp, #120]
   33840:	cmp	x1, x0
   33844:	cset	w0, cc  // cc = lo, ul, last
   33848:	and	w0, w0, #0xff
   3384c:	and	x0, x0, #0xff
   33850:	cmp	x0, #0x0
   33854:	b.eq	33878 <__sanitizer_set_death_callback@@Base+0x22c8>  // b.none
   33858:	ldr	x4, [sp, #120]
   3385c:	ldr	x3, [sp, #128]
   33860:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   33864:	add	x2, x0, #0xfc8
   33868:	mov	w1, #0x94                  	// #148
   3386c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   33870:	add	x0, x0, #0xf78
   33874:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   33878:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   3387c:	add	x0, x0, #0x3a8
   33880:	ldr	x0, [x0]
   33884:	cmp	x0, #0x0
   33888:	b.ne	338a0 <__sanitizer_set_death_callback@@Base+0x22f0>  // b.any
   3388c:	ldr	w2, [sp, #20]
   33890:	ldr	x1, [sp, #32]
   33894:	ldr	x0, [sp, #40]
   33898:	bl	33724 <__sanitizer_set_death_callback@@Base+0x2174>
   3389c:	b	33a34 <__sanitizer_set_death_callback@@Base+0x2484>
   338a0:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   338a4:	add	x0, x0, #0x398
   338a8:	ldr	x0, [x0]
   338ac:	blr	x0
   338b0:	str	x0, [sp, #112]
   338b4:	ldr	x0, [sp, #112]
   338b8:	str	x0, [sp, #104]
   338bc:	str	xzr, [sp, #96]
   338c0:	ldr	x1, [sp, #104]
   338c4:	ldr	x0, [sp, #96]
   338c8:	cmp	x1, x0
   338cc:	cset	w0, eq  // eq = none
   338d0:	and	w0, w0, #0xff
   338d4:	and	x0, x0, #0xff
   338d8:	cmp	x0, #0x0
   338dc:	b.eq	33900 <__sanitizer_set_death_callback@@Base+0x2350>  // b.none
   338e0:	ldr	x4, [sp, #96]
   338e4:	ldr	x3, [sp, #104]
   338e8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   338ec:	add	x2, x0, #0xfe0
   338f0:	mov	w1, #0x9b                  	// #155
   338f4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   338f8:	add	x0, x0, #0xf78
   338fc:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   33900:	add	x0, sp, #0x30
   33904:	mov	x1, #0x100                 	// #256
   33908:	bl	33a6c <__sanitizer_set_death_callback@@Base+0x24bc>
   3390c:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   33910:	add	x0, x0, #0x3a8
   33914:	ldr	x19, [x0]
   33918:	add	x0, sp, #0x30
   3391c:	bl	33ab8 <__sanitizer_set_death_callback@@Base+0x2508>
   33920:	mov	x1, x0
   33924:	ldr	w0, [sp, #20]
   33928:	mov	x5, x0
   3392c:	mov	x4, #0x0                   	// #0
   33930:	mov	x3, x1
   33934:	ldr	x2, [sp, #112]
   33938:	ldr	x1, [sp, #24]
   3393c:	mov	x0, #0x0                   	// #0
   33940:	blr	x19
   33944:	str	x0, [sp, #88]
   33948:	adrp	x0, 9cb000 <__ubsan_vptr_type_cache@@Base+0x9511b8>
   3394c:	add	x0, x0, #0x3a0
   33950:	ldr	x1, [x0]
   33954:	ldr	x0, [sp, #112]
   33958:	blr	x1
   3395c:	ldr	x0, [sp, #88]
   33960:	cmp	x0, #0x0
   33964:	b.ge	33970 <__sanitizer_set_death_callback@@Base+0x23c0>  // b.tcont
   33968:	mov	w19, #0x0                   	// #0
   3396c:	b	33a28 <__sanitizer_set_death_callback@@Base+0x2478>
   33970:	ldr	x0, [sp, #88]
   33974:	str	x0, [sp, #80]
   33978:	mov	x0, #0x100                 	// #256
   3397c:	str	x0, [sp, #72]
   33980:	ldr	x1, [sp, #80]
   33984:	ldr	x0, [sp, #72]
   33988:	cmp	x1, x0
   3398c:	cset	w0, hi  // hi = pmore
   33990:	and	w0, w0, #0xff
   33994:	and	x0, x0, #0xff
   33998:	cmp	x0, #0x0
   3399c:	b.eq	339c0 <__sanitizer_set_death_callback@@Base+0x2410>  // b.none
   339a0:	ldr	x4, [sp, #72]
   339a4:	ldr	x3, [sp, #80]
   339a8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   339ac:	add	x2, x0, #0xff0
   339b0:	mov	w1, #0xa3                  	// #163
   339b4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0xa970>
   339b8:	add	x0, x0, #0xf78
   339bc:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   339c0:	ldr	x0, [sp, #40]
   339c4:	str	wzr, [x0, #8]
   339c8:	str	xzr, [sp, #136]
   339cc:	ldr	x1, [sp, #136]
   339d0:	ldr	x0, [sp, #88]
   339d4:	cmp	x1, x0
   339d8:	b.ge	33a24 <__sanitizer_set_death_callback@@Base+0x2474>  // b.tcont
   339dc:	ldr	x1, [sp, #136]
   339e0:	add	x0, sp, #0x30
   339e4:	bl	33ad0 <__sanitizer_set_death_callback@@Base+0x2520>
   339e8:	ldr	x1, [x0]
   339ec:	ldr	x0, [sp, #40]
   339f0:	ldr	w0, [x0, #8]
   339f4:	add	w3, w0, #0x1
   339f8:	ldr	x2, [sp, #40]
   339fc:	str	w3, [x2, #8]
   33a00:	add	x2, x1, #0x2
   33a04:	ldr	x1, [sp, #40]
   33a08:	mov	w0, w0
   33a0c:	add	x0, x0, #0x2
   33a10:	str	x2, [x1, x0, lsl #3]
   33a14:	ldr	x0, [sp, #136]
   33a18:	add	x0, x0, #0x1
   33a1c:	str	x0, [sp, #136]
   33a20:	b	339cc <__sanitizer_set_death_callback@@Base+0x241c>
   33a24:	mov	w19, #0x1                   	// #1
   33a28:	add	x0, sp, #0x30
   33a2c:	bl	33a9c <__sanitizer_set_death_callback@@Base+0x24ec>
   33a30:	cmp	w19, #0x1
   33a34:	ldp	x19, x30, [sp], #144
   33a38:	ret
   33a3c:	sub	sp, sp, #0x10
   33a40:	str	w0, [sp, #12]
   33a44:	str	w1, [sp, #8]
   33a48:	ldr	w1, [sp, #12]
   33a4c:	ldr	w0, [sp, #8]
   33a50:	cmp	w1, w0
   33a54:	b.cs	33a60 <__sanitizer_set_death_callback@@Base+0x24b0>  // b.hs, b.nlast
   33a58:	ldr	w0, [sp, #12]
   33a5c:	b	33a64 <__sanitizer_set_death_callback@@Base+0x24b4>
   33a60:	ldr	w0, [sp, #8]
   33a64:	add	sp, sp, #0x10
   33a68:	ret
   33a6c:	str	x30, [sp, #-32]!
   33a70:	str	x0, [sp, #24]
   33a74:	str	x1, [sp, #16]
   33a78:	ldr	x0, [sp, #24]
   33a7c:	ldr	x1, [sp, #16]
   33a80:	bl	33b58 <__sanitizer_set_death_callback@@Base+0x25a8>
   33a84:	ldr	x0, [sp, #24]
   33a88:	ldr	x1, [sp, #16]
   33a8c:	bl	33b94 <__sanitizer_set_death_callback@@Base+0x25e4>
   33a90:	nop
   33a94:	ldr	x30, [sp], #32
   33a98:	ret
   33a9c:	str	x30, [sp, #-32]!
   33aa0:	str	x0, [sp, #24]
   33aa4:	ldr	x0, [sp, #24]
   33aa8:	bl	33c2c <__sanitizer_set_death_callback@@Base+0x267c>
   33aac:	nop
   33ab0:	ldr	x30, [sp], #32
   33ab4:	ret
   33ab8:	sub	sp, sp, #0x10
   33abc:	str	x0, [sp, #8]
   33ac0:	ldr	x0, [sp, #8]
   33ac4:	ldr	x0, [x0]
   33ac8:	add	sp, sp, #0x10
   33acc:	ret
   33ad0:	str	x30, [sp, #-48]!
   33ad4:	str	x0, [sp, #24]
   33ad8:	str	x1, [sp, #16]
   33adc:	ldr	x0, [sp, #16]
   33ae0:	str	x0, [sp, #40]
   33ae4:	ldr	x0, [sp, #24]
   33ae8:	ldr	x0, [x0, #16]
   33aec:	str	x0, [sp, #32]
   33af0:	ldr	x1, [sp, #40]
   33af4:	ldr	x0, [sp, #32]
   33af8:	cmp	x1, x0
   33afc:	cset	w0, cs  // cs = hs, nlast
   33b00:	and	w0, w0, #0xff
   33b04:	and	x0, x0, #0xff
   33b08:	cmp	x0, #0x0
   33b0c:	b.eq	33b30 <__sanitizer_set_death_callback@@Base+0x2580>  // b.none
   33b10:	ldr	x4, [sp, #32]
   33b14:	ldr	x3, [sp, #40]
   33b18:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   33b1c:	add	x2, x0, #0x18
   33b20:	mov	w1, #0x1b6                 	// #438
   33b24:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   33b28:	add	x0, x0, #0x30
   33b2c:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   33b30:	ldr	x0, [sp, #24]
   33b34:	ldr	x2, [x0]
   33b38:	ldr	x1, [sp, #16]
   33b3c:	mov	x0, x1
   33b40:	lsl	x0, x0, #1
   33b44:	add	x0, x0, x1
   33b48:	lsl	x0, x0, #3
   33b4c:	add	x0, x2, x0
   33b50:	ldr	x30, [sp], #48
   33b54:	ret
   33b58:	str	x30, [sp, #-32]!
   33b5c:	str	x0, [sp, #24]
   33b60:	str	x1, [sp, #16]
   33b64:	ldr	x0, [sp, #24]
   33b68:	str	xzr, [x0, #8]
   33b6c:	ldr	x0, [sp, #24]
   33b70:	str	xzr, [x0, #16]
   33b74:	ldr	x0, [sp, #24]
   33b78:	str	xzr, [x0]
   33b7c:	ldr	x1, [sp, #16]
   33b80:	ldr	x0, [sp, #24]
   33b84:	bl	33c5c <__sanitizer_set_death_callback@@Base+0x26ac>
   33b88:	nop
   33b8c:	ldr	x30, [sp], #32
   33b90:	ret
   33b94:	str	x30, [sp, #-32]!
   33b98:	str	x0, [sp, #24]
   33b9c:	str	x1, [sp, #16]
   33ba0:	ldr	x0, [sp, #24]
   33ba4:	ldr	x0, [x0, #16]
   33ba8:	ldr	x1, [sp, #16]
   33bac:	cmp	x1, x0
   33bb0:	b.ls	33c14 <__sanitizer_set_death_callback@@Base+0x2664>  // b.plast
   33bb4:	ldr	x1, [sp, #16]
   33bb8:	ldr	x0, [sp, #24]
   33bbc:	bl	33c5c <__sanitizer_set_death_callback@@Base+0x26ac>
   33bc0:	ldr	x0, [sp, #24]
   33bc4:	ldr	x2, [x0]
   33bc8:	ldr	x0, [sp, #24]
   33bcc:	ldr	x1, [x0, #16]
   33bd0:	mov	x0, x1
   33bd4:	lsl	x0, x0, #1
   33bd8:	add	x0, x0, x1
   33bdc:	lsl	x0, x0, #3
   33be0:	add	x3, x2, x0
   33be4:	ldr	x0, [sp, #24]
   33be8:	ldr	x0, [x0, #16]
   33bec:	ldr	x1, [sp, #16]
   33bf0:	sub	x1, x1, x0
   33bf4:	mov	x0, x1
   33bf8:	lsl	x0, x0, #1
   33bfc:	add	x0, x0, x1
   33c00:	lsl	x0, x0, #3
   33c04:	mov	x2, x0
   33c08:	mov	w1, #0x0                   	// #0
   33c0c:	mov	x0, x3
   33c10:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   33c14:	ldr	x0, [sp, #24]
   33c18:	ldr	x1, [sp, #16]
   33c1c:	str	x1, [x0, #16]
   33c20:	nop
   33c24:	ldr	x30, [sp], #32
   33c28:	ret
   33c2c:	str	x30, [sp, #-32]!
   33c30:	str	x0, [sp, #24]
   33c34:	ldr	x0, [sp, #24]
   33c38:	ldr	x2, [x0]
   33c3c:	ldr	x0, [sp, #24]
   33c40:	ldr	x0, [x0, #8]
   33c44:	mov	x1, x0
   33c48:	mov	x0, x2
   33c4c:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   33c50:	nop
   33c54:	ldr	x30, [sp], #32
   33c58:	ret
   33c5c:	str	x30, [sp, #-32]!
   33c60:	str	x0, [sp, #24]
   33c64:	str	x1, [sp, #16]
   33c68:	ldr	x0, [sp, #24]
   33c6c:	bl	33ca4 <__sanitizer_set_death_callback@@Base+0x26f4>
   33c70:	mov	x1, x0
   33c74:	ldr	x0, [sp, #16]
   33c78:	cmp	x0, x1
   33c7c:	cset	w0, hi  // hi = pmore
   33c80:	and	w0, w0, #0xff
   33c84:	cmp	w0, #0x0
   33c88:	b.eq	33c98 <__sanitizer_set_death_callback@@Base+0x26e8>  // b.none
   33c8c:	ldr	x1, [sp, #16]
   33c90:	ldr	x0, [sp, #24]
   33c94:	bl	33ccc <__sanitizer_set_death_callback@@Base+0x271c>
   33c98:	nop
   33c9c:	ldr	x30, [sp], #32
   33ca0:	ret
   33ca4:	sub	sp, sp, #0x10
   33ca8:	str	x0, [sp, #8]
   33cac:	ldr	x0, [sp, #8]
   33cb0:	ldr	x1, [x0, #8]
   33cb4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   33cb8:	movk	x0, #0xaaab
   33cbc:	umulh	x0, x1, x0
   33cc0:	lsr	x0, x0, #4
   33cc4:	add	sp, sp, #0x10
   33cc8:	ret
   33ccc:	stp	x19, x30, [sp, #-80]!
   33cd0:	str	x0, [sp, #24]
   33cd4:	str	x1, [sp, #16]
   33cd8:	ldr	x0, [sp, #16]
   33cdc:	str	x0, [sp, #72]
   33ce0:	str	xzr, [sp, #64]
   33ce4:	ldr	x1, [sp, #72]
   33ce8:	ldr	x0, [sp, #64]
   33cec:	cmp	x1, x0
   33cf0:	cset	w0, ls  // ls = plast
   33cf4:	and	w0, w0, #0xff
   33cf8:	and	x0, x0, #0xff
   33cfc:	cmp	x0, #0x0
   33d00:	b.eq	33d24 <__sanitizer_set_death_callback@@Base+0x2774>  // b.none
   33d04:	ldr	x4, [sp, #64]
   33d08:	ldr	x3, [sp, #72]
   33d0c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   33d10:	add	x2, x0, #0x70
   33d14:	mov	w1, #0x1fc                 	// #508
   33d18:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   33d1c:	add	x0, x0, #0x30
   33d20:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   33d24:	ldr	x0, [sp, #24]
   33d28:	ldr	x0, [x0, #16]
   33d2c:	str	x0, [sp, #56]
   33d30:	ldr	x0, [sp, #16]
   33d34:	str	x0, [sp, #48]
   33d38:	ldr	x1, [sp, #56]
   33d3c:	ldr	x0, [sp, #48]
   33d40:	cmp	x1, x0
   33d44:	cset	w0, hi  // hi = pmore
   33d48:	and	w0, w0, #0xff
   33d4c:	and	x0, x0, #0xff
   33d50:	cmp	x0, #0x0
   33d54:	b.eq	33d78 <__sanitizer_set_death_callback@@Base+0x27c8>  // b.none
   33d58:	ldr	x4, [sp, #48]
   33d5c:	ldr	x3, [sp, #56]
   33d60:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   33d64:	add	x2, x0, #0x90
   33d68:	mov	w1, #0x1fd                 	// #509
   33d6c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   33d70:	add	x0, x0, #0x30
   33d74:	bl	31508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8280>
   33d78:	ldr	x1, [sp, #16]
   33d7c:	mov	x0, x1
   33d80:	lsl	x0, x0, #1
   33d84:	add	x0, x0, x1
   33d88:	lsl	x0, x0, #3
   33d8c:	mov	x19, x0
   33d90:	bl	8924 <__asan_backtrace_open@plt+0x1cb4>
   33d94:	mov	x1, x0
   33d98:	mov	x0, x19
   33d9c:	bl	8990 <__asan_backtrace_open@plt+0x1d20>
   33da0:	str	x0, [sp, #40]
   33da4:	mov	w2, #0x0                   	// #0
   33da8:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   33dac:	add	x1, x0, #0xb0
   33db0:	ldr	x0, [sp, #40]
   33db4:	bl	220c8 <__sanitizer_set_report_fd@@Base+0x7f1c>
   33db8:	str	x0, [sp, #32]
   33dbc:	ldr	x0, [sp, #24]
   33dc0:	ldr	x3, [x0]
   33dc4:	ldr	x0, [sp, #24]
   33dc8:	ldr	x1, [x0, #16]
   33dcc:	mov	x0, x1
   33dd0:	lsl	x0, x0, #1
   33dd4:	add	x0, x0, x1
   33dd8:	lsl	x0, x0, #3
   33ddc:	mov	x2, x0
   33de0:	mov	x1, x3
   33de4:	ldr	x0, [sp, #32]
   33de8:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   33dec:	ldr	x0, [sp, #24]
   33df0:	ldr	x2, [x0]
   33df4:	ldr	x0, [sp, #24]
   33df8:	ldr	x0, [x0, #8]
   33dfc:	mov	x1, x0
   33e00:	mov	x0, x2
   33e04:	bl	2216c <__sanitizer_set_report_fd@@Base+0x7fc0>
   33e08:	ldr	x0, [sp, #24]
   33e0c:	ldr	x1, [sp, #32]
   33e10:	str	x1, [x0]
   33e14:	ldr	x0, [sp, #24]
   33e18:	ldr	x1, [sp, #40]
   33e1c:	str	x1, [x0, #8]
   33e20:	nop
   33e24:	ldp	x19, x30, [sp], #80
   33e28:	ret
   33e2c:	str	x30, [sp, #-48]!
   33e30:	str	x0, [sp, #40]
   33e34:	str	x1, [sp, #32]
   33e38:	str	x2, [sp, #24]
   33e3c:	str	x3, [sp, #16]
   33e40:	ldr	x1, [sp, #40]
   33e44:	mov	x0, #0xffffffffffffffff    	// #-1
   33e48:	bl	6740 <dlsym@plt>
   33e4c:	mov	x1, x0
   33e50:	ldr	x0, [sp, #32]
   33e54:	str	x1, [x0]
   33e58:	ldr	x0, [sp, #32]
   33e5c:	ldr	x0, [x0]
   33e60:	cmp	x0, #0x0
   33e64:	b.ne	33e80 <__sanitizer_set_death_callback@@Base+0x28d0>  // b.any
   33e68:	ldr	x1, [sp, #40]
   33e6c:	mov	x0, #0x0                   	// #0
   33e70:	bl	6740 <dlsym@plt>
   33e74:	mov	x1, x0
   33e78:	ldr	x0, [sp, #32]
   33e7c:	str	x1, [x0]
   33e80:	ldr	x1, [sp, #24]
   33e84:	ldr	x0, [sp, #16]
   33e88:	cmp	x1, x0
   33e8c:	cset	w0, eq  // eq = none
   33e90:	and	w0, w0, #0xff
   33e94:	ldr	x30, [sp], #48
   33e98:	ret
   33e9c:	str	x30, [sp, #-32]!
   33ea0:	str	x0, [sp, #24]
   33ea4:	str	x1, [sp, #16]
   33ea8:	ldr	x2, [sp, #16]
   33eac:	ldr	x1, [sp, #24]
   33eb0:	mov	x0, #0xffffffffffffffff    	// #-1
   33eb4:	bl	6680 <dlvsym@plt>
   33eb8:	ldr	x30, [sp], #32
   33ebc:	ret
   33ec0:	stp	x29, x30, [sp, #-48]!
   33ec4:	mov	x29, sp
   33ec8:	str	x0, [sp, #40]
   33ecc:	str	x1, [sp, #32]
   33ed0:	str	x2, [sp, #24]
   33ed4:	str	x3, [sp, #16]
   33ed8:	ldr	x0, [sp, #32]
   33edc:	ldr	x1, [x0, #16]
   33ee0:	ldr	x0, [sp, #32]
   33ee4:	ldr	x0, [x0, #8]
   33ee8:	add	x1, x1, x0
   33eec:	ldr	x0, [sp, #32]
   33ef0:	str	x1, [x0, #16]
   33ef4:	ldr	x0, [sp, #32]
   33ef8:	str	xzr, [x0, #8]
   33efc:	ldr	x3, [sp, #16]
   33f00:	ldr	x2, [sp, #24]
   33f04:	ldr	x1, [sp, #32]
   33f08:	ldr	x0, [sp, #40]
   33f0c:	bl	6840 <__asan_backtrace_vector_release@plt>
   33f10:	nop
   33f14:	ldp	x29, x30, [sp], #48
   33f18:	ret
   33f1c:	stp	x29, x30, [sp, #-240]!
   33f20:	mov	x29, sp
   33f24:	str	x0, [sp, #24]
   33f28:	str	x1, [sp, #16]
   33f2c:	ldr	x0, [sp, #24]
   33f30:	ldr	x2, [x0]
   33f34:	ldr	x0, [sp, #24]
   33f38:	ldr	x1, [x0, #16]
   33f3c:	ldr	x0, [sp, #24]
   33f40:	ldr	x0, [x0, #8]
   33f44:	sub	x0, x1, x0
   33f48:	add	x6, sp, #0x28
   33f4c:	mov	w5, w0
   33f50:	mov	x4, x2
   33f54:	ldr	x3, [sp, #16]
   33f58:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   33f5c:	add	x2, x0, #0xc8
   33f60:	mov	x1, #0xc8                  	// #200
   33f64:	mov	x0, x6
   33f68:	bl	6940 <snprintf@plt>
   33f6c:	ldr	x0, [sp, #24]
   33f70:	ldr	x3, [x0, #40]
   33f74:	ldr	x0, [sp, #24]
   33f78:	ldr	x0, [x0, #48]
   33f7c:	add	x1, sp, #0x28
   33f80:	mov	w2, #0x0                   	// #0
   33f84:	blr	x3
   33f88:	nop
   33f8c:	ldp	x29, x30, [sp], #240
   33f90:	ret
   33f94:	stp	x29, x30, [sp, #-32]!
   33f98:	mov	x29, sp
   33f9c:	str	x0, [sp, #24]
   33fa0:	str	x1, [sp, #16]
   33fa4:	ldr	x0, [sp, #24]
   33fa8:	ldr	x0, [x0, #24]
   33fac:	ldr	x1, [sp, #16]
   33fb0:	cmp	x1, x0
   33fb4:	b.hi	33fc0 <__sanitizer_set_death_callback@@Base+0x2a10>  // b.pmore
   33fb8:	mov	w0, #0x1                   	// #1
   33fbc:	b	33ff0 <__sanitizer_set_death_callback@@Base+0x2a40>
   33fc0:	ldr	x0, [sp, #24]
   33fc4:	ldr	w0, [x0, #56]
   33fc8:	cmp	w0, #0x0
   33fcc:	b.ne	33fec <__sanitizer_set_death_callback@@Base+0x2a3c>  // b.any
   33fd0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   33fd4:	add	x1, x0, #0xd8
   33fd8:	ldr	x0, [sp, #24]
   33fdc:	bl	33f1c <__sanitizer_set_death_callback@@Base+0x296c>
   33fe0:	ldr	x0, [sp, #24]
   33fe4:	mov	w1, #0x1                   	// #1
   33fe8:	str	w1, [x0, #56]
   33fec:	mov	w0, #0x0                   	// #0
   33ff0:	ldp	x29, x30, [sp], #32
   33ff4:	ret
   33ff8:	stp	x29, x30, [sp, #-32]!
   33ffc:	mov	x29, sp
   34000:	str	x0, [sp, #24]
   34004:	str	x1, [sp, #16]
   34008:	ldr	x1, [sp, #16]
   3400c:	ldr	x0, [sp, #24]
   34010:	bl	33f94 <__sanitizer_set_death_callback@@Base+0x29e4>
   34014:	cmp	w0, #0x0
   34018:	b.ne	34024 <__sanitizer_set_death_callback@@Base+0x2a74>  // b.any
   3401c:	mov	w0, #0x0                   	// #0
   34020:	b	34058 <__sanitizer_set_death_callback@@Base+0x2aa8>
   34024:	ldr	x0, [sp, #24]
   34028:	ldr	x1, [x0, #16]
   3402c:	ldr	x0, [sp, #16]
   34030:	add	x1, x1, x0
   34034:	ldr	x0, [sp, #24]
   34038:	str	x1, [x0, #16]
   3403c:	ldr	x0, [sp, #24]
   34040:	ldr	x1, [x0, #24]
   34044:	ldr	x0, [sp, #16]
   34048:	sub	x1, x1, x0
   3404c:	ldr	x0, [sp, #24]
   34050:	str	x1, [x0, #24]
   34054:	mov	w0, #0x1                   	// #1
   34058:	ldp	x29, x30, [sp], #32
   3405c:	ret
   34060:	stp	x29, x30, [sp, #-64]!
   34064:	mov	x29, sp
   34068:	str	x0, [sp, #24]
   3406c:	ldr	x0, [sp, #24]
   34070:	ldr	x0, [x0, #16]
   34074:	str	x0, [sp, #56]
   34078:	ldr	x0, [sp, #24]
   3407c:	ldr	x0, [x0, #24]
   34080:	mov	x1, x0
   34084:	ldr	x0, [sp, #56]
   34088:	bl	6a40 <__asan_internal_strnlen@plt>
   3408c:	str	x0, [sp, #48]
   34090:	ldr	x0, [sp, #48]
   34094:	add	x0, x0, #0x1
   34098:	str	x0, [sp, #40]
   3409c:	ldr	x1, [sp, #40]
   340a0:	ldr	x0, [sp, #24]
   340a4:	bl	33ff8 <__sanitizer_set_death_callback@@Base+0x2a48>
   340a8:	cmp	w0, #0x0
   340ac:	b.ne	340b8 <__sanitizer_set_death_callback@@Base+0x2b08>  // b.any
   340b0:	mov	x0, #0x0                   	// #0
   340b4:	b	340bc <__sanitizer_set_death_callback@@Base+0x2b0c>
   340b8:	ldr	x0, [sp, #56]
   340bc:	ldp	x29, x30, [sp], #64
   340c0:	ret
   340c4:	stp	x29, x30, [sp, #-48]!
   340c8:	mov	x29, sp
   340cc:	str	x0, [sp, #24]
   340d0:	ldr	x0, [sp, #24]
   340d4:	ldr	x0, [x0, #16]
   340d8:	str	x0, [sp, #40]
   340dc:	mov	x1, #0x1                   	// #1
   340e0:	ldr	x0, [sp, #24]
   340e4:	bl	33ff8 <__sanitizer_set_death_callback@@Base+0x2a48>
   340e8:	cmp	w0, #0x0
   340ec:	b.ne	340f8 <__sanitizer_set_death_callback@@Base+0x2b48>  // b.any
   340f0:	mov	w0, #0x0                   	// #0
   340f4:	b	34100 <__sanitizer_set_death_callback@@Base+0x2b50>
   340f8:	ldr	x0, [sp, #40]
   340fc:	ldrb	w0, [x0]
   34100:	ldp	x29, x30, [sp], #48
   34104:	ret
   34108:	stp	x29, x30, [sp, #-48]!
   3410c:	mov	x29, sp
   34110:	str	x0, [sp, #24]
   34114:	ldr	x0, [sp, #24]
   34118:	ldr	x0, [x0, #16]
   3411c:	str	x0, [sp, #40]
   34120:	mov	x1, #0x1                   	// #1
   34124:	ldr	x0, [sp, #24]
   34128:	bl	33ff8 <__sanitizer_set_death_callback@@Base+0x2a48>
   3412c:	cmp	w0, #0x0
   34130:	b.ne	3413c <__sanitizer_set_death_callback@@Base+0x2b8c>  // b.any
   34134:	mov	w0, #0x0                   	// #0
   34138:	b	34158 <__sanitizer_set_death_callback@@Base+0x2ba8>
   3413c:	ldr	x0, [sp, #40]
   34140:	ldrb	w0, [x0]
   34144:	eor	w0, w0, #0xffffff80
   34148:	and	w0, w0, #0xff
   3414c:	sub	w0, w0, #0x80
   34150:	and	w0, w0, #0xff
   34154:	sxtb	w0, w0
   34158:	ldp	x29, x30, [sp], #48
   3415c:	ret
   34160:	stp	x29, x30, [sp, #-48]!
   34164:	mov	x29, sp
   34168:	str	x0, [sp, #24]
   3416c:	ldr	x0, [sp, #24]
   34170:	ldr	x0, [x0, #16]
   34174:	str	x0, [sp, #40]
   34178:	mov	x1, #0x2                   	// #2
   3417c:	ldr	x0, [sp, #24]
   34180:	bl	33ff8 <__sanitizer_set_death_callback@@Base+0x2a48>
   34184:	cmp	w0, #0x0
   34188:	b.ne	34194 <__sanitizer_set_death_callback@@Base+0x2be4>  // b.any
   3418c:	mov	w0, #0x0                   	// #0
   34190:	b	34200 <__sanitizer_set_death_callback@@Base+0x2c50>
   34194:	ldr	x0, [sp, #24]
   34198:	ldr	w0, [x0, #32]
   3419c:	cmp	w0, #0x0
   341a0:	b.eq	341d4 <__sanitizer_set_death_callback@@Base+0x2c24>  // b.none
   341a4:	ldr	x0, [sp, #40]
   341a8:	ldrb	w0, [x0]
   341ac:	lsl	w0, w0, #8
   341b0:	sxth	w1, w0
   341b4:	ldr	x0, [sp, #40]
   341b8:	add	x0, x0, #0x1
   341bc:	ldrb	w0, [x0]
   341c0:	sxth	w0, w0
   341c4:	orr	w0, w1, w0
   341c8:	sxth	w0, w0
   341cc:	and	w0, w0, #0xffff
   341d0:	b	34200 <__sanitizer_set_death_callback@@Base+0x2c50>
   341d4:	ldr	x0, [sp, #40]
   341d8:	add	x0, x0, #0x1
   341dc:	ldrb	w0, [x0]
   341e0:	lsl	w0, w0, #8
   341e4:	sxth	w1, w0
   341e8:	ldr	x0, [sp, #40]
   341ec:	ldrb	w0, [x0]
   341f0:	sxth	w0, w0
   341f4:	orr	w0, w1, w0
   341f8:	sxth	w0, w0
   341fc:	and	w0, w0, #0xffff
   34200:	ldp	x29, x30, [sp], #48
   34204:	ret
   34208:	stp	x29, x30, [sp, #-48]!
   3420c:	mov	x29, sp
   34210:	str	x0, [sp, #24]
   34214:	ldr	x0, [sp, #24]
   34218:	ldr	x0, [x0, #16]
   3421c:	str	x0, [sp, #40]
   34220:	mov	x1, #0x4                   	// #4
   34224:	ldr	x0, [sp, #24]
   34228:	bl	33ff8 <__sanitizer_set_death_callback@@Base+0x2a48>
   3422c:	cmp	w0, #0x0
   34230:	b.ne	3423c <__sanitizer_set_death_callback@@Base+0x2c8c>  // b.any
   34234:	mov	w0, #0x0                   	// #0
   34238:	b	342d8 <__sanitizer_set_death_callback@@Base+0x2d28>
   3423c:	ldr	x0, [sp, #24]
   34240:	ldr	w0, [x0, #32]
   34244:	cmp	w0, #0x0
   34248:	b.eq	34294 <__sanitizer_set_death_callback@@Base+0x2ce4>  // b.none
   3424c:	ldr	x0, [sp, #40]
   34250:	ldrb	w0, [x0]
   34254:	lsl	w1, w0, #24
   34258:	ldr	x0, [sp, #40]
   3425c:	add	x0, x0, #0x1
   34260:	ldrb	w0, [x0]
   34264:	lsl	w0, w0, #16
   34268:	orr	w1, w1, w0
   3426c:	ldr	x0, [sp, #40]
   34270:	add	x0, x0, #0x2
   34274:	ldrb	w0, [x0]
   34278:	lsl	w0, w0, #8
   3427c:	orr	w0, w1, w0
   34280:	ldr	x1, [sp, #40]
   34284:	add	x1, x1, #0x3
   34288:	ldrb	w1, [x1]
   3428c:	orr	w0, w0, w1
   34290:	b	342d8 <__sanitizer_set_death_callback@@Base+0x2d28>
   34294:	ldr	x0, [sp, #40]
   34298:	add	x0, x0, #0x3
   3429c:	ldrb	w0, [x0]
   342a0:	lsl	w1, w0, #24
   342a4:	ldr	x0, [sp, #40]
   342a8:	add	x0, x0, #0x2
   342ac:	ldrb	w0, [x0]
   342b0:	lsl	w0, w0, #16
   342b4:	orr	w1, w1, w0
   342b8:	ldr	x0, [sp, #40]
   342bc:	add	x0, x0, #0x1
   342c0:	ldrb	w0, [x0]
   342c4:	lsl	w0, w0, #8
   342c8:	orr	w0, w1, w0
   342cc:	ldr	x1, [sp, #40]
   342d0:	ldrb	w1, [x1]
   342d4:	orr	w0, w0, w1
   342d8:	ldp	x29, x30, [sp], #48
   342dc:	ret
   342e0:	stp	x29, x30, [sp, #-48]!
   342e4:	mov	x29, sp
   342e8:	str	x0, [sp, #24]
   342ec:	ldr	x0, [sp, #24]
   342f0:	ldr	x0, [x0, #16]
   342f4:	str	x0, [sp, #40]
   342f8:	mov	x1, #0x8                   	// #8
   342fc:	ldr	x0, [sp, #24]
   34300:	bl	33ff8 <__sanitizer_set_death_callback@@Base+0x2a48>
   34304:	cmp	w0, #0x0
   34308:	b.ne	34314 <__sanitizer_set_death_callback@@Base+0x2d64>  // b.any
   3430c:	mov	x0, #0x0                   	// #0
   34310:	b	34490 <__sanitizer_set_death_callback@@Base+0x2ee0>
   34314:	ldr	x0, [sp, #24]
   34318:	ldr	w0, [x0, #32]
   3431c:	cmp	w0, #0x0
   34320:	b.eq	343dc <__sanitizer_set_death_callback@@Base+0x2e2c>  // b.none
   34324:	ldr	x0, [sp, #40]
   34328:	ldrb	w0, [x0]
   3432c:	and	x0, x0, #0xff
   34330:	lsl	x1, x0, #56
   34334:	ldr	x0, [sp, #40]
   34338:	add	x0, x0, #0x1
   3433c:	ldrb	w0, [x0]
   34340:	and	x0, x0, #0xff
   34344:	lsl	x0, x0, #48
   34348:	orr	x1, x1, x0
   3434c:	ldr	x0, [sp, #40]
   34350:	add	x0, x0, #0x2
   34354:	ldrb	w0, [x0]
   34358:	and	x0, x0, #0xff
   3435c:	lsl	x0, x0, #40
   34360:	orr	x1, x1, x0
   34364:	ldr	x0, [sp, #40]
   34368:	add	x0, x0, #0x3
   3436c:	ldrb	w0, [x0]
   34370:	and	x0, x0, #0xff
   34374:	lsl	x0, x0, #32
   34378:	orr	x1, x1, x0
   3437c:	ldr	x0, [sp, #40]
   34380:	add	x0, x0, #0x4
   34384:	ldrb	w0, [x0]
   34388:	and	x0, x0, #0xff
   3438c:	lsl	x0, x0, #24
   34390:	orr	x1, x1, x0
   34394:	ldr	x0, [sp, #40]
   34398:	add	x0, x0, #0x5
   3439c:	ldrb	w0, [x0]
   343a0:	and	x0, x0, #0xff
   343a4:	lsl	x0, x0, #16
   343a8:	orr	x1, x1, x0
   343ac:	ldr	x0, [sp, #40]
   343b0:	add	x0, x0, #0x6
   343b4:	ldrb	w0, [x0]
   343b8:	and	x0, x0, #0xff
   343bc:	lsl	x0, x0, #8
   343c0:	orr	x1, x1, x0
   343c4:	ldr	x0, [sp, #40]
   343c8:	add	x0, x0, #0x7
   343cc:	ldrb	w0, [x0]
   343d0:	and	x0, x0, #0xff
   343d4:	orr	x0, x1, x0
   343d8:	b	34490 <__sanitizer_set_death_callback@@Base+0x2ee0>
   343dc:	ldr	x0, [sp, #40]
   343e0:	add	x0, x0, #0x7
   343e4:	ldrb	w0, [x0]
   343e8:	and	x0, x0, #0xff
   343ec:	lsl	x1, x0, #56
   343f0:	ldr	x0, [sp, #40]
   343f4:	add	x0, x0, #0x6
   343f8:	ldrb	w0, [x0]
   343fc:	and	x0, x0, #0xff
   34400:	lsl	x0, x0, #48
   34404:	orr	x1, x1, x0
   34408:	ldr	x0, [sp, #40]
   3440c:	add	x0, x0, #0x5
   34410:	ldrb	w0, [x0]
   34414:	and	x0, x0, #0xff
   34418:	lsl	x0, x0, #40
   3441c:	orr	x1, x1, x0
   34420:	ldr	x0, [sp, #40]
   34424:	add	x0, x0, #0x4
   34428:	ldrb	w0, [x0]
   3442c:	and	x0, x0, #0xff
   34430:	lsl	x0, x0, #32
   34434:	orr	x1, x1, x0
   34438:	ldr	x0, [sp, #40]
   3443c:	add	x0, x0, #0x3
   34440:	ldrb	w0, [x0]
   34444:	and	x0, x0, #0xff
   34448:	lsl	x0, x0, #24
   3444c:	orr	x1, x1, x0
   34450:	ldr	x0, [sp, #40]
   34454:	add	x0, x0, #0x2
   34458:	ldrb	w0, [x0]
   3445c:	and	x0, x0, #0xff
   34460:	lsl	x0, x0, #16
   34464:	orr	x1, x1, x0
   34468:	ldr	x0, [sp, #40]
   3446c:	add	x0, x0, #0x1
   34470:	ldrb	w0, [x0]
   34474:	and	x0, x0, #0xff
   34478:	lsl	x0, x0, #8
   3447c:	orr	x1, x1, x0
   34480:	ldr	x0, [sp, #40]
   34484:	ldrb	w0, [x0]
   34488:	and	x0, x0, #0xff
   3448c:	orr	x0, x1, x0
   34490:	ldp	x29, x30, [sp], #48
   34494:	ret
   34498:	stp	x29, x30, [sp, #-32]!
   3449c:	mov	x29, sp
   344a0:	str	x0, [sp, #24]
   344a4:	str	w1, [sp, #20]
   344a8:	ldr	w0, [sp, #20]
   344ac:	cmp	w0, #0x0
   344b0:	b.eq	344c0 <__sanitizer_set_death_callback@@Base+0x2f10>  // b.none
   344b4:	ldr	x0, [sp, #24]
   344b8:	bl	342e0 <__sanitizer_set_death_callback@@Base+0x2d30>
   344bc:	b	344cc <__sanitizer_set_death_callback@@Base+0x2f1c>
   344c0:	ldr	x0, [sp, #24]
   344c4:	bl	34208 <__sanitizer_set_death_callback@@Base+0x2c58>
   344c8:	mov	w0, w0
   344cc:	ldp	x29, x30, [sp], #32
   344d0:	ret
   344d4:	stp	x29, x30, [sp, #-32]!
   344d8:	mov	x29, sp
   344dc:	str	x0, [sp, #24]
   344e0:	str	w1, [sp, #20]
   344e4:	ldr	w0, [sp, #20]
   344e8:	cmp	w0, #0x8
   344ec:	b.eq	34568 <__sanitizer_set_death_callback@@Base+0x2fb8>  // b.none
   344f0:	ldr	w0, [sp, #20]
   344f4:	cmp	w0, #0x8
   344f8:	b.gt	34574 <__sanitizer_set_death_callback@@Base+0x2fc4>
   344fc:	ldr	w0, [sp, #20]
   34500:	cmp	w0, #0x4
   34504:	b.eq	34558 <__sanitizer_set_death_callback@@Base+0x2fa8>  // b.none
   34508:	ldr	w0, [sp, #20]
   3450c:	cmp	w0, #0x4
   34510:	b.gt	34574 <__sanitizer_set_death_callback@@Base+0x2fc4>
   34514:	ldr	w0, [sp, #20]
   34518:	cmp	w0, #0x1
   3451c:	b.eq	34530 <__sanitizer_set_death_callback@@Base+0x2f80>  // b.none
   34520:	ldr	w0, [sp, #20]
   34524:	cmp	w0, #0x2
   34528:	b.eq	34544 <__sanitizer_set_death_callback@@Base+0x2f94>  // b.none
   3452c:	b	34574 <__sanitizer_set_death_callback@@Base+0x2fc4>
   34530:	ldr	x0, [sp, #24]
   34534:	bl	340c4 <__sanitizer_set_death_callback@@Base+0x2b14>
   34538:	and	w0, w0, #0xff
   3453c:	and	x0, x0, #0xff
   34540:	b	34588 <__sanitizer_set_death_callback@@Base+0x2fd8>
   34544:	ldr	x0, [sp, #24]
   34548:	bl	34160 <__sanitizer_set_death_callback@@Base+0x2bb0>
   3454c:	and	w0, w0, #0xffff
   34550:	and	x0, x0, #0xffff
   34554:	b	34588 <__sanitizer_set_death_callback@@Base+0x2fd8>
   34558:	ldr	x0, [sp, #24]
   3455c:	bl	34208 <__sanitizer_set_death_callback@@Base+0x2c58>
   34560:	mov	w0, w0
   34564:	b	34588 <__sanitizer_set_death_callback@@Base+0x2fd8>
   34568:	ldr	x0, [sp, #24]
   3456c:	bl	342e0 <__sanitizer_set_death_callback@@Base+0x2d30>
   34570:	b	34588 <__sanitizer_set_death_callback@@Base+0x2fd8>
   34574:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   34578:	add	x1, x0, #0xe8
   3457c:	ldr	x0, [sp, #24]
   34580:	bl	33f1c <__sanitizer_set_death_callback@@Base+0x296c>
   34584:	mov	x0, #0x0                   	// #0
   34588:	ldp	x29, x30, [sp], #32
   3458c:	ret
   34590:	sub	sp, sp, #0x10
   34594:	str	x0, [sp, #8]
   34598:	str	w1, [sp, #4]
   3459c:	ldr	w0, [sp, #4]
   345a0:	cmp	w0, #0x8
   345a4:	b.eq	3462c <__sanitizer_set_death_callback@@Base+0x307c>  // b.none
   345a8:	ldr	w0, [sp, #4]
   345ac:	cmp	w0, #0x8
   345b0:	b.gt	34640 <__sanitizer_set_death_callback@@Base+0x3090>
   345b4:	ldr	w0, [sp, #4]
   345b8:	cmp	w0, #0x4
   345bc:	b.eq	34614 <__sanitizer_set_death_callback@@Base+0x3064>  // b.none
   345c0:	ldr	w0, [sp, #4]
   345c4:	cmp	w0, #0x4
   345c8:	b.gt	34640 <__sanitizer_set_death_callback@@Base+0x3090>
   345cc:	ldr	w0, [sp, #4]
   345d0:	cmp	w0, #0x1
   345d4:	b.eq	345e8 <__sanitizer_set_death_callback@@Base+0x3038>  // b.none
   345d8:	ldr	w0, [sp, #4]
   345dc:	cmp	w0, #0x2
   345e0:	b.eq	345fc <__sanitizer_set_death_callback@@Base+0x304c>  // b.none
   345e4:	b	34640 <__sanitizer_set_death_callback@@Base+0x3090>
   345e8:	ldr	x0, [sp, #8]
   345ec:	cmp	x0, #0xff
   345f0:	cset	w0, eq  // eq = none
   345f4:	and	w0, w0, #0xff
   345f8:	b	34644 <__sanitizer_set_death_callback@@Base+0x3094>
   345fc:	ldr	x1, [sp, #8]
   34600:	mov	x0, #0xffff                	// #65535
   34604:	cmp	x1, x0
   34608:	cset	w0, eq  // eq = none
   3460c:	and	w0, w0, #0xff
   34610:	b	34644 <__sanitizer_set_death_callback@@Base+0x3094>
   34614:	ldr	x1, [sp, #8]
   34618:	mov	x0, #0xffffffff            	// #4294967295
   3461c:	cmp	x1, x0
   34620:	cset	w0, eq  // eq = none
   34624:	and	w0, w0, #0xff
   34628:	b	34644 <__sanitizer_set_death_callback@@Base+0x3094>
   3462c:	ldr	x0, [sp, #8]
   34630:	cmn	x0, #0x1
   34634:	cset	w0, eq  // eq = none
   34638:	and	w0, w0, #0xff
   3463c:	b	34644 <__sanitizer_set_death_callback@@Base+0x3094>
   34640:	mov	w0, #0x0                   	// #0
   34644:	add	sp, sp, #0x10
   34648:	ret
   3464c:	stp	x29, x30, [sp, #-64]!
   34650:	mov	x29, sp
   34654:	str	x0, [sp, #24]
   34658:	str	xzr, [sp, #56]
   3465c:	str	wzr, [sp, #52]
   34660:	str	wzr, [sp, #48]
   34664:	ldr	x0, [sp, #24]
   34668:	ldr	x0, [x0, #16]
   3466c:	str	x0, [sp, #40]
   34670:	mov	x1, #0x1                   	// #1
   34674:	ldr	x0, [sp, #24]
   34678:	bl	33ff8 <__sanitizer_set_death_callback@@Base+0x2a48>
   3467c:	cmp	w0, #0x0
   34680:	b.ne	3468c <__sanitizer_set_death_callback@@Base+0x30dc>  // b.any
   34684:	mov	x0, #0x0                   	// #0
   34688:	b	34704 <__sanitizer_set_death_callback@@Base+0x3154>
   3468c:	ldr	x0, [sp, #40]
   34690:	ldrb	w0, [x0]
   34694:	strb	w0, [sp, #39]
   34698:	ldr	w0, [sp, #52]
   3469c:	cmp	w0, #0x3f
   346a0:	b.hi	346c4 <__sanitizer_set_death_callback@@Base+0x3114>  // b.pmore
   346a4:	ldrb	w0, [sp, #39]
   346a8:	and	x1, x0, #0x7f
   346ac:	ldr	w0, [sp, #52]
   346b0:	lsl	x0, x1, x0
   346b4:	ldr	x1, [sp, #56]
   346b8:	orr	x0, x1, x0
   346bc:	str	x0, [sp, #56]
   346c0:	b	346e8 <__sanitizer_set_death_callback@@Base+0x3138>
   346c4:	ldr	w0, [sp, #48]
   346c8:	cmp	w0, #0x0
   346cc:	b.ne	346e8 <__sanitizer_set_death_callback@@Base+0x3138>  // b.any
   346d0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   346d4:	add	x1, x0, #0x108
   346d8:	ldr	x0, [sp, #24]
   346dc:	bl	33f1c <__sanitizer_set_death_callback@@Base+0x296c>
   346e0:	mov	w0, #0x1                   	// #1
   346e4:	str	w0, [sp, #48]
   346e8:	ldr	w0, [sp, #52]
   346ec:	add	w0, w0, #0x7
   346f0:	str	w0, [sp, #52]
   346f4:	ldrsb	w0, [sp, #39]
   346f8:	cmp	w0, #0x0
   346fc:	b.lt	34664 <__sanitizer_set_death_callback@@Base+0x30b4>  // b.tstop
   34700:	ldr	x0, [sp, #56]
   34704:	ldp	x29, x30, [sp], #64
   34708:	ret
   3470c:	stp	x29, x30, [sp, #-64]!
   34710:	mov	x29, sp
   34714:	str	x0, [sp, #24]
   34718:	str	xzr, [sp, #56]
   3471c:	str	wzr, [sp, #52]
   34720:	str	wzr, [sp, #48]
   34724:	ldr	x0, [sp, #24]
   34728:	ldr	x0, [x0, #16]
   3472c:	str	x0, [sp, #40]
   34730:	mov	x1, #0x1                   	// #1
   34734:	ldr	x0, [sp, #24]
   34738:	bl	33ff8 <__sanitizer_set_death_callback@@Base+0x2a48>
   3473c:	cmp	w0, #0x0
   34740:	b.ne	3474c <__sanitizer_set_death_callback@@Base+0x319c>  // b.any
   34744:	mov	x0, #0x0                   	// #0
   34748:	b	347f8 <__sanitizer_set_death_callback@@Base+0x3248>
   3474c:	ldr	x0, [sp, #40]
   34750:	ldrb	w0, [x0]
   34754:	strb	w0, [sp, #39]
   34758:	ldr	w0, [sp, #52]
   3475c:	cmp	w0, #0x3f
   34760:	b.hi	34784 <__sanitizer_set_death_callback@@Base+0x31d4>  // b.pmore
   34764:	ldrb	w0, [sp, #39]
   34768:	and	x1, x0, #0x7f
   3476c:	ldr	w0, [sp, #52]
   34770:	lsl	x0, x1, x0
   34774:	ldr	x1, [sp, #56]
   34778:	orr	x0, x1, x0
   3477c:	str	x0, [sp, #56]
   34780:	b	347a8 <__sanitizer_set_death_callback@@Base+0x31f8>
   34784:	ldr	w0, [sp, #48]
   34788:	cmp	w0, #0x0
   3478c:	b.ne	347a8 <__sanitizer_set_death_callback@@Base+0x31f8>  // b.any
   34790:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   34794:	add	x1, x0, #0x128
   34798:	ldr	x0, [sp, #24]
   3479c:	bl	33f1c <__sanitizer_set_death_callback@@Base+0x296c>
   347a0:	mov	w0, #0x1                   	// #1
   347a4:	str	w0, [sp, #48]
   347a8:	ldr	w0, [sp, #52]
   347ac:	add	w0, w0, #0x7
   347b0:	str	w0, [sp, #52]
   347b4:	ldrsb	w0, [sp, #39]
   347b8:	cmp	w0, #0x0
   347bc:	b.lt	34724 <__sanitizer_set_death_callback@@Base+0x3174>  // b.tstop
   347c0:	ldrb	w0, [sp, #39]
   347c4:	and	w0, w0, #0x40
   347c8:	cmp	w0, #0x0
   347cc:	b.eq	347f4 <__sanitizer_set_death_callback@@Base+0x3244>  // b.none
   347d0:	ldr	w0, [sp, #52]
   347d4:	cmp	w0, #0x3f
   347d8:	b.hi	347f4 <__sanitizer_set_death_callback@@Base+0x3244>  // b.pmore
   347dc:	ldr	w0, [sp, #52]
   347e0:	mov	x1, #0xffffffffffffffff    	// #-1
   347e4:	lsl	x0, x1, x0
   347e8:	ldr	x1, [sp, #56]
   347ec:	orr	x0, x1, x0
   347f0:	str	x0, [sp, #56]
   347f4:	ldr	x0, [sp, #56]
   347f8:	ldp	x29, x30, [sp], #64
   347fc:	ret
   34800:	sub	sp, sp, #0x20
   34804:	str	x0, [sp, #8]
   34808:	mov	x0, #0x1                   	// #1
   3480c:	str	x0, [sp, #24]
   34810:	b	3482c <__sanitizer_set_death_callback@@Base+0x327c>
   34814:	ldr	x0, [sp, #8]
   34818:	add	x0, x0, #0x1
   3481c:	str	x0, [sp, #8]
   34820:	ldr	x0, [sp, #24]
   34824:	add	x0, x0, #0x1
   34828:	str	x0, [sp, #24]
   3482c:	ldr	x0, [sp, #8]
   34830:	ldrb	w0, [x0]
   34834:	sxtb	w0, w0
   34838:	cmp	w0, #0x0
   3483c:	b.lt	34814 <__sanitizer_set_death_callback@@Base+0x3264>  // b.tstop
   34840:	ldr	x0, [sp, #24]
   34844:	add	sp, sp, #0x20
   34848:	ret
   3484c:	stp	x29, x30, [sp, #-48]!
   34850:	mov	x29, sp
   34854:	str	x0, [sp, #24]
   34858:	str	x1, [sp, #16]
   3485c:	ldr	x0, [sp, #24]
   34860:	bl	34208 <__sanitizer_set_death_callback@@Base+0x2c58>
   34864:	mov	w0, w0
   34868:	str	x0, [sp, #40]
   3486c:	ldr	x1, [sp, #40]
   34870:	mov	x0, #0xffffffff            	// #4294967295
   34874:	cmp	x1, x0
   34878:	b.ne	34898 <__sanitizer_set_death_callback@@Base+0x32e8>  // b.any
   3487c:	ldr	x0, [sp, #24]
   34880:	bl	342e0 <__sanitizer_set_death_callback@@Base+0x2d30>
   34884:	str	x0, [sp, #40]
   34888:	ldr	x0, [sp, #16]
   3488c:	mov	w1, #0x1                   	// #1
   34890:	str	w1, [x0]
   34894:	b	348a0 <__sanitizer_set_death_callback@@Base+0x32f0>
   34898:	ldr	x0, [sp, #16]
   3489c:	str	wzr, [x0]
   348a0:	ldr	x0, [sp, #40]
   348a4:	ldp	x29, x30, [sp], #48
   348a8:	ret
   348ac:	stp	x29, x30, [sp, #-64]!
   348b0:	mov	x29, sp
   348b4:	str	x0, [sp, #40]
   348b8:	str	x1, [sp, #32]
   348bc:	str	x2, [sp, #24]
   348c0:	str	x3, [sp, #16]
   348c4:	str	xzr, [sp, #56]
   348c8:	b	34924 <__sanitizer_set_death_callback@@Base+0x3374>
   348cc:	ldr	x0, [sp, #32]
   348d0:	ldr	x1, [x0, #8]
   348d4:	ldr	x0, [sp, #56]
   348d8:	lsl	x0, x0, #5
   348dc:	add	x0, x1, x0
   348e0:	ldr	x5, [x0, #24]
   348e4:	ldr	x0, [sp, #32]
   348e8:	ldr	x1, [x0, #8]
   348ec:	ldr	x0, [sp, #56]
   348f0:	lsl	x0, x0, #5
   348f4:	add	x0, x1, x0
   348f8:	ldr	x0, [x0, #16]
   348fc:	lsl	x0, x0, #3
   34900:	ldr	x4, [sp, #16]
   34904:	ldr	x3, [sp, #24]
   34908:	mov	x2, x0
   3490c:	mov	x1, x5
   34910:	ldr	x0, [sp, #40]
   34914:	bl	6ac0 <__asan_backtrace_free@plt>
   34918:	ldr	x0, [sp, #56]
   3491c:	add	x0, x0, #0x1
   34920:	str	x0, [sp, #56]
   34924:	ldr	x0, [sp, #32]
   34928:	ldr	x0, [x0]
   3492c:	ldr	x1, [sp, #56]
   34930:	cmp	x1, x0
   34934:	b.cc	348cc <__sanitizer_set_death_callback@@Base+0x331c>  // b.lo, b.ul, b.last
   34938:	ldr	x0, [sp, #32]
   3493c:	ldr	x1, [x0, #8]
   34940:	ldr	x0, [sp, #32]
   34944:	ldr	x0, [x0]
   34948:	lsl	x0, x0, #5
   3494c:	ldr	x4, [sp, #16]
   34950:	ldr	x3, [sp, #24]
   34954:	mov	x2, x0
   34958:	ldr	x0, [sp, #40]
   3495c:	bl	6ac0 <__asan_backtrace_free@plt>
   34960:	ldr	x0, [sp, #32]
   34964:	str	xzr, [x0]
   34968:	ldr	x0, [sp, #32]
   3496c:	str	xzr, [x0, #8]
   34970:	nop
   34974:	ldp	x29, x30, [sp], #64
   34978:	ret
   3497c:	sub	sp, sp, #0x70
   34980:	stp	x29, x30, [sp, #16]
   34984:	add	x29, sp, #0x10
   34988:	str	w0, [sp, #76]
   3498c:	str	x1, [sp, #64]
   34990:	str	w2, [sp, #72]
   34994:	str	w3, [sp, #60]
   34998:	str	w4, [sp, #56]
   3499c:	str	x5, [sp, #48]
   349a0:	str	x6, [sp, #40]
   349a4:	str	x7, [sp, #32]
   349a8:	mov	x2, #0x10                  	// #16
   349ac:	mov	w1, #0x0                   	// #0
   349b0:	ldr	x0, [sp, #112]
   349b4:	bl	6770 <__asan_internal_memset@plt>
   349b8:	ldr	w1, [sp, #76]
   349bc:	mov	w0, #0x1f21                	// #7969
   349c0:	cmp	w1, w0
   349c4:	b.eq	34f90 <__sanitizer_set_death_callback@@Base+0x39e0>  // b.none
   349c8:	ldr	w1, [sp, #76]
   349cc:	mov	w0, #0x1f21                	// #7969
   349d0:	cmp	w1, w0
   349d4:	b.hi	35014 <__sanitizer_set_death_callback@@Base+0x3a64>  // b.pmore
   349d8:	ldr	w1, [sp, #76]
   349dc:	mov	w0, #0x1f20                	// #7968
   349e0:	cmp	w1, w0
   349e4:	b.eq	34f48 <__sanitizer_set_death_callback@@Base+0x3998>  // b.none
   349e8:	ldr	w1, [sp, #76]
   349ec:	mov	w0, #0x1f20                	// #7968
   349f0:	cmp	w1, w0
   349f4:	b.hi	35014 <__sanitizer_set_death_callback@@Base+0x3a64>  // b.pmore
   349f8:	ldr	w1, [sp, #76]
   349fc:	mov	w0, #0x1f02                	// #7938
   34a00:	cmp	w1, w0
   34a04:	b.eq	34f20 <__sanitizer_set_death_callback@@Base+0x3970>  // b.none
   34a08:	ldr	w1, [sp, #76]
   34a0c:	mov	w0, #0x1f02                	// #7938
   34a10:	cmp	w1, w0
   34a14:	b.hi	35014 <__sanitizer_set_death_callback@@Base+0x3a64>  // b.pmore
   34a18:	ldr	w0, [sp, #76]
   34a1c:	cmp	w0, #0x20
   34a20:	b.hi	34a58 <__sanitizer_set_death_callback@@Base+0x34a8>  // b.pmore
   34a24:	ldr	w0, [sp, #76]
   34a28:	cmp	w0, #0x0
   34a2c:	b.eq	35014 <__sanitizer_set_death_callback@@Base+0x3a64>  // b.none
   34a30:	ldr	w0, [sp, #76]
   34a34:	sub	w0, w0, #0x1
   34a38:	cmp	w0, #0x1f
   34a3c:	b.hi	35014 <__sanitizer_set_death_callback@@Base+0x3a64>  // b.pmore
   34a40:	adrp	x1, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   34a44:	add	x1, x1, #0x1b0
   34a48:	ldr	w0, [x1, w0, uxtw #2]
   34a4c:	adr	x1, 34a58 <__sanitizer_set_death_callback@@Base+0x34a8>
   34a50:	add	x0, x1, w0, sxtw #2
   34a54:	br	x0
   34a58:	ldr	w1, [sp, #76]
   34a5c:	mov	w0, #0x1f01                	// #7937
   34a60:	cmp	w1, w0
   34a64:	b.eq	34ef8 <__sanitizer_set_death_callback@@Base+0x3948>  // b.none
   34a68:	b	35014 <__sanitizer_set_death_callback@@Base+0x3a64>
   34a6c:	ldr	x0, [sp, #112]
   34a70:	mov	w1, #0x1                   	// #1
   34a74:	str	w1, [x0]
   34a78:	ldr	w1, [sp, #56]
   34a7c:	ldr	x0, [sp, #64]
   34a80:	bl	344d4 <__sanitizer_set_death_callback@@Base+0x2f24>
   34a84:	mov	x1, x0
   34a88:	ldr	x0, [sp, #112]
   34a8c:	str	x1, [x0, #8]
   34a90:	mov	w0, #0x1                   	// #1
   34a94:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34a98:	ldr	x0, [sp, #112]
   34a9c:	mov	w1, #0xa                   	// #10
   34aa0:	str	w1, [x0]
   34aa4:	ldr	x0, [sp, #64]
   34aa8:	bl	34160 <__sanitizer_set_death_callback@@Base+0x2bb0>
   34aac:	and	w0, w0, #0xffff
   34ab0:	and	x0, x0, #0xffff
   34ab4:	mov	x1, x0
   34ab8:	ldr	x0, [sp, #64]
   34abc:	bl	33ff8 <__sanitizer_set_death_callback@@Base+0x2a48>
   34ac0:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34ac4:	ldr	x0, [sp, #112]
   34ac8:	mov	w1, #0xa                   	// #10
   34acc:	str	w1, [x0]
   34ad0:	ldr	x0, [sp, #64]
   34ad4:	bl	34208 <__sanitizer_set_death_callback@@Base+0x2c58>
   34ad8:	mov	w0, w0
   34adc:	mov	x1, x0
   34ae0:	ldr	x0, [sp, #64]
   34ae4:	bl	33ff8 <__sanitizer_set_death_callback@@Base+0x2a48>
   34ae8:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34aec:	ldr	x0, [sp, #112]
   34af0:	mov	w1, #0x2                   	// #2
   34af4:	str	w1, [x0]
   34af8:	ldr	x0, [sp, #64]
   34afc:	bl	34160 <__sanitizer_set_death_callback@@Base+0x2bb0>
   34b00:	and	w0, w0, #0xffff
   34b04:	and	x1, x0, #0xffff
   34b08:	ldr	x0, [sp, #112]
   34b0c:	str	x1, [x0, #8]
   34b10:	mov	w0, #0x1                   	// #1
   34b14:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34b18:	ldr	x0, [sp, #112]
   34b1c:	mov	w1, #0x2                   	// #2
   34b20:	str	w1, [x0]
   34b24:	ldr	x0, [sp, #64]
   34b28:	bl	34208 <__sanitizer_set_death_callback@@Base+0x2c58>
   34b2c:	mov	w1, w0
   34b30:	ldr	x0, [sp, #112]
   34b34:	str	x1, [x0, #8]
   34b38:	mov	w0, #0x1                   	// #1
   34b3c:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34b40:	ldr	x0, [sp, #112]
   34b44:	mov	w1, #0x2                   	// #2
   34b48:	str	w1, [x0]
   34b4c:	ldr	x0, [sp, #64]
   34b50:	bl	342e0 <__sanitizer_set_death_callback@@Base+0x2d30>
   34b54:	mov	x1, x0
   34b58:	ldr	x0, [sp, #112]
   34b5c:	str	x1, [x0, #8]
   34b60:	mov	w0, #0x1                   	// #1
   34b64:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34b68:	ldr	x0, [sp, #112]
   34b6c:	mov	w1, #0x4                   	// #4
   34b70:	str	w1, [x0]
   34b74:	ldr	x0, [sp, #64]
   34b78:	bl	34060 <__sanitizer_set_death_callback@@Base+0x2ab0>
   34b7c:	mov	x1, x0
   34b80:	ldr	x0, [sp, #112]
   34b84:	str	x1, [x0, #8]
   34b88:	ldr	x0, [sp, #112]
   34b8c:	ldr	x0, [x0, #8]
   34b90:	cmp	x0, #0x0
   34b94:	cset	w0, ne  // ne = any
   34b98:	and	w0, w0, #0xff
   34b9c:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34ba0:	ldr	x0, [sp, #112]
   34ba4:	mov	w1, #0xa                   	// #10
   34ba8:	str	w1, [x0]
   34bac:	ldr	x0, [sp, #64]
   34bb0:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   34bb4:	mov	x1, x0
   34bb8:	ldr	x0, [sp, #64]
   34bbc:	bl	33ff8 <__sanitizer_set_death_callback@@Base+0x2a48>
   34bc0:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34bc4:	ldr	x0, [sp, #112]
   34bc8:	mov	w1, #0xa                   	// #10
   34bcc:	str	w1, [x0]
   34bd0:	ldr	x0, [sp, #64]
   34bd4:	bl	340c4 <__sanitizer_set_death_callback@@Base+0x2b14>
   34bd8:	and	w0, w0, #0xff
   34bdc:	and	x0, x0, #0xff
   34be0:	mov	x1, x0
   34be4:	ldr	x0, [sp, #64]
   34be8:	bl	33ff8 <__sanitizer_set_death_callback@@Base+0x2a48>
   34bec:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34bf0:	ldr	x0, [sp, #112]
   34bf4:	mov	w1, #0x2                   	// #2
   34bf8:	str	w1, [x0]
   34bfc:	ldr	x0, [sp, #64]
   34c00:	bl	340c4 <__sanitizer_set_death_callback@@Base+0x2b14>
   34c04:	and	w0, w0, #0xff
   34c08:	and	x1, x0, #0xff
   34c0c:	ldr	x0, [sp, #112]
   34c10:	str	x1, [x0, #8]
   34c14:	mov	w0, #0x1                   	// #1
   34c18:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34c1c:	ldr	x0, [sp, #112]
   34c20:	mov	w1, #0x2                   	// #2
   34c24:	str	w1, [x0]
   34c28:	ldr	x0, [sp, #64]
   34c2c:	bl	340c4 <__sanitizer_set_death_callback@@Base+0x2b14>
   34c30:	and	w0, w0, #0xff
   34c34:	and	x1, x0, #0xff
   34c38:	ldr	x0, [sp, #112]
   34c3c:	str	x1, [x0, #8]
   34c40:	mov	w0, #0x1                   	// #1
   34c44:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34c48:	ldr	x0, [sp, #112]
   34c4c:	mov	w1, #0x3                   	// #3
   34c50:	str	w1, [x0]
   34c54:	ldr	x0, [sp, #64]
   34c58:	bl	3470c <__sanitizer_set_death_callback@@Base+0x315c>
   34c5c:	mov	x1, x0
   34c60:	ldr	x0, [sp, #112]
   34c64:	str	x1, [x0, #8]
   34c68:	mov	w0, #0x1                   	// #1
   34c6c:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34c70:	ldr	w1, [sp, #72]
   34c74:	ldr	x0, [sp, #64]
   34c78:	bl	34498 <__sanitizer_set_death_callback@@Base+0x2ee8>
   34c7c:	str	x0, [sp, #88]
   34c80:	ldr	x1, [sp, #88]
   34c84:	ldr	x0, [sp, #40]
   34c88:	cmp	x1, x0
   34c8c:	b.cc	34ca8 <__sanitizer_set_death_callback@@Base+0x36f8>  // b.lo, b.ul, b.last
   34c90:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   34c94:	add	x1, x0, #0x150
   34c98:	ldr	x0, [sp, #64]
   34c9c:	bl	33f1c <__sanitizer_set_death_callback@@Base+0x296c>
   34ca0:	mov	w0, #0x0                   	// #0
   34ca4:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34ca8:	ldr	x0, [sp, #112]
   34cac:	mov	w1, #0x4                   	// #4
   34cb0:	str	w1, [x0]
   34cb4:	ldr	x1, [sp, #48]
   34cb8:	ldr	x0, [sp, #88]
   34cbc:	add	x1, x1, x0
   34cc0:	ldr	x0, [sp, #112]
   34cc4:	str	x1, [x0, #8]
   34cc8:	mov	w0, #0x1                   	// #1
   34ccc:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34cd0:	ldr	x0, [sp, #112]
   34cd4:	mov	w1, #0x2                   	// #2
   34cd8:	str	w1, [x0]
   34cdc:	ldr	x0, [sp, #64]
   34ce0:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   34ce4:	mov	x1, x0
   34ce8:	ldr	x0, [sp, #112]
   34cec:	str	x1, [x0, #8]
   34cf0:	mov	w0, #0x1                   	// #1
   34cf4:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34cf8:	ldr	x0, [sp, #112]
   34cfc:	mov	w1, #0x6                   	// #6
   34d00:	str	w1, [x0]
   34d04:	ldr	w0, [sp, #60]
   34d08:	cmp	w0, #0x2
   34d0c:	b.ne	34d2c <__sanitizer_set_death_callback@@Base+0x377c>  // b.any
   34d10:	ldr	w1, [sp, #56]
   34d14:	ldr	x0, [sp, #64]
   34d18:	bl	344d4 <__sanitizer_set_death_callback@@Base+0x2f24>
   34d1c:	mov	x1, x0
   34d20:	ldr	x0, [sp, #112]
   34d24:	str	x1, [x0, #8]
   34d28:	b	34d44 <__sanitizer_set_death_callback@@Base+0x3794>
   34d2c:	ldr	w1, [sp, #72]
   34d30:	ldr	x0, [sp, #64]
   34d34:	bl	34498 <__sanitizer_set_death_callback@@Base+0x2ee8>
   34d38:	mov	x1, x0
   34d3c:	ldr	x0, [sp, #112]
   34d40:	str	x1, [x0, #8]
   34d44:	mov	w0, #0x1                   	// #1
   34d48:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34d4c:	ldr	x0, [sp, #112]
   34d50:	mov	w1, #0x5                   	// #5
   34d54:	str	w1, [x0]
   34d58:	ldr	x0, [sp, #64]
   34d5c:	bl	340c4 <__sanitizer_set_death_callback@@Base+0x2b14>
   34d60:	and	w0, w0, #0xff
   34d64:	and	x1, x0, #0xff
   34d68:	ldr	x0, [sp, #112]
   34d6c:	str	x1, [x0, #8]
   34d70:	mov	w0, #0x1                   	// #1
   34d74:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34d78:	ldr	x0, [sp, #112]
   34d7c:	mov	w1, #0x5                   	// #5
   34d80:	str	w1, [x0]
   34d84:	ldr	x0, [sp, #64]
   34d88:	bl	34160 <__sanitizer_set_death_callback@@Base+0x2bb0>
   34d8c:	and	w0, w0, #0xffff
   34d90:	and	x1, x0, #0xffff
   34d94:	ldr	x0, [sp, #112]
   34d98:	str	x1, [x0, #8]
   34d9c:	mov	w0, #0x1                   	// #1
   34da0:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34da4:	ldr	x0, [sp, #112]
   34da8:	mov	w1, #0x5                   	// #5
   34dac:	str	w1, [x0]
   34db0:	ldr	x0, [sp, #64]
   34db4:	bl	34208 <__sanitizer_set_death_callback@@Base+0x2c58>
   34db8:	mov	w1, w0
   34dbc:	ldr	x0, [sp, #112]
   34dc0:	str	x1, [x0, #8]
   34dc4:	mov	w0, #0x1                   	// #1
   34dc8:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34dcc:	ldr	x0, [sp, #112]
   34dd0:	mov	w1, #0x5                   	// #5
   34dd4:	str	w1, [x0]
   34dd8:	ldr	x0, [sp, #64]
   34ddc:	bl	342e0 <__sanitizer_set_death_callback@@Base+0x2d30>
   34de0:	mov	x1, x0
   34de4:	ldr	x0, [sp, #112]
   34de8:	str	x1, [x0, #8]
   34dec:	mov	w0, #0x1                   	// #1
   34df0:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34df4:	ldr	x0, [sp, #112]
   34df8:	mov	w1, #0x5                   	// #5
   34dfc:	str	w1, [x0]
   34e00:	ldr	x0, [sp, #64]
   34e04:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   34e08:	mov	x1, x0
   34e0c:	ldr	x0, [sp, #112]
   34e10:	str	x1, [x0, #8]
   34e14:	mov	w0, #0x1                   	// #1
   34e18:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34e1c:	ldr	x0, [sp, #64]
   34e20:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   34e24:	str	x0, [sp, #96]
   34e28:	ldr	x0, [sp, #96]
   34e2c:	mov	w8, w0
   34e30:	ldr	x0, [sp, #112]
   34e34:	str	x0, [sp]
   34e38:	ldr	x7, [sp, #32]
   34e3c:	ldr	x6, [sp, #40]
   34e40:	ldr	x5, [sp, #48]
   34e44:	ldr	w4, [sp, #56]
   34e48:	ldr	w3, [sp, #60]
   34e4c:	ldr	w2, [sp, #72]
   34e50:	ldr	x1, [sp, #64]
   34e54:	mov	w0, w8
   34e58:	bl	3497c <__sanitizer_set_death_callback@@Base+0x33cc>
   34e5c:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34e60:	ldr	x0, [sp, #112]
   34e64:	mov	w1, #0x8                   	// #8
   34e68:	str	w1, [x0]
   34e6c:	ldr	w1, [sp, #72]
   34e70:	ldr	x0, [sp, #64]
   34e74:	bl	34498 <__sanitizer_set_death_callback@@Base+0x2ee8>
   34e78:	mov	x1, x0
   34e7c:	ldr	x0, [sp, #112]
   34e80:	str	x1, [x0, #8]
   34e84:	mov	w0, #0x1                   	// #1
   34e88:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34e8c:	ldr	x0, [sp, #112]
   34e90:	mov	w1, #0xb                   	// #11
   34e94:	str	w1, [x0]
   34e98:	ldr	x0, [sp, #64]
   34e9c:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   34ea0:	mov	x1, x0
   34ea4:	ldr	x0, [sp, #64]
   34ea8:	bl	33ff8 <__sanitizer_set_death_callback@@Base+0x2a48>
   34eac:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34eb0:	ldr	x0, [sp, #112]
   34eb4:	mov	w1, #0x2                   	// #2
   34eb8:	str	w1, [x0]
   34ebc:	ldr	x0, [sp, #112]
   34ec0:	mov	x1, #0x1                   	// #1
   34ec4:	str	x1, [x0, #8]
   34ec8:	mov	w0, #0x1                   	// #1
   34ecc:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34ed0:	ldr	x0, [sp, #112]
   34ed4:	mov	w1, #0x9                   	// #9
   34ed8:	str	w1, [x0]
   34edc:	ldr	x0, [sp, #64]
   34ee0:	bl	342e0 <__sanitizer_set_death_callback@@Base+0x2d30>
   34ee4:	mov	x1, x0
   34ee8:	ldr	x0, [sp, #112]
   34eec:	str	x1, [x0, #8]
   34ef0:	mov	w0, #0x1                   	// #1
   34ef4:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34ef8:	ldr	x0, [sp, #112]
   34efc:	mov	w1, #0x8                   	// #8
   34f00:	str	w1, [x0]
   34f04:	ldr	x0, [sp, #64]
   34f08:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   34f0c:	mov	x1, x0
   34f10:	ldr	x0, [sp, #112]
   34f14:	str	x1, [x0, #8]
   34f18:	mov	w0, #0x1                   	// #1
   34f1c:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34f20:	ldr	x0, [sp, #112]
   34f24:	mov	w1, #0x8                   	// #8
   34f28:	str	w1, [x0]
   34f2c:	ldr	x0, [sp, #64]
   34f30:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   34f34:	mov	x1, x0
   34f38:	ldr	x0, [sp, #112]
   34f3c:	str	x1, [x0, #8]
   34f40:	mov	w0, #0x1                   	// #1
   34f44:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34f48:	ldr	w1, [sp, #72]
   34f4c:	ldr	x0, [sp, #64]
   34f50:	bl	34498 <__sanitizer_set_death_callback@@Base+0x2ee8>
   34f54:	mov	x1, x0
   34f58:	ldr	x0, [sp, #112]
   34f5c:	str	x1, [x0, #8]
   34f60:	ldr	x0, [sp, #32]
   34f64:	cmp	x0, #0x0
   34f68:	b.ne	34f7c <__sanitizer_set_death_callback@@Base+0x39cc>  // b.any
   34f6c:	ldr	x0, [sp, #112]
   34f70:	str	wzr, [x0]
   34f74:	mov	w0, #0x1                   	// #1
   34f78:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34f7c:	ldr	x0, [sp, #112]
   34f80:	mov	w1, #0x7                   	// #7
   34f84:	str	w1, [x0]
   34f88:	mov	w0, #0x1                   	// #1
   34f8c:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34f90:	ldr	w1, [sp, #72]
   34f94:	ldr	x0, [sp, #64]
   34f98:	bl	34498 <__sanitizer_set_death_callback@@Base+0x2ee8>
   34f9c:	str	x0, [sp, #104]
   34fa0:	ldr	x0, [sp, #32]
   34fa4:	cmp	x0, #0x0
   34fa8:	b.ne	34fbc <__sanitizer_set_death_callback@@Base+0x3a0c>  // b.any
   34fac:	ldr	x0, [sp, #112]
   34fb0:	str	wzr, [x0]
   34fb4:	mov	w0, #0x1                   	// #1
   34fb8:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34fbc:	ldr	x0, [sp, #32]
   34fc0:	ldr	x0, [x0, #112]
   34fc4:	ldr	x1, [sp, #104]
   34fc8:	cmp	x1, x0
   34fcc:	b.cc	34fe8 <__sanitizer_set_death_callback@@Base+0x3a38>  // b.lo, b.ul, b.last
   34fd0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   34fd4:	add	x1, x0, #0x170
   34fd8:	ldr	x0, [sp, #64]
   34fdc:	bl	33f1c <__sanitizer_set_death_callback@@Base+0x296c>
   34fe0:	mov	w0, #0x0                   	// #0
   34fe4:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   34fe8:	ldr	x0, [sp, #112]
   34fec:	mov	w1, #0x4                   	// #4
   34ff0:	str	w1, [x0]
   34ff4:	ldr	x0, [sp, #32]
   34ff8:	ldr	x1, [x0, #104]
   34ffc:	ldr	x0, [sp, #104]
   35000:	add	x1, x1, x0
   35004:	ldr	x0, [sp, #112]
   35008:	str	x1, [x0, #8]
   3500c:	mov	w0, #0x1                   	// #1
   35010:	b	35028 <__sanitizer_set_death_callback@@Base+0x3a78>
   35014:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   35018:	add	x1, x0, #0x198
   3501c:	ldr	x0, [sp, #64]
   35020:	bl	33f1c <__sanitizer_set_death_callback@@Base+0x296c>
   35024:	mov	w0, #0x0                   	// #0
   35028:	ldp	x29, x30, [sp, #16]
   3502c:	add	sp, sp, #0x70
   35030:	ret
   35034:	sub	sp, sp, #0x30
   35038:	str	x0, [sp, #8]
   3503c:	str	x1, [sp]
   35040:	ldr	x0, [sp, #8]
   35044:	str	x0, [sp, #40]
   35048:	ldr	x0, [sp]
   3504c:	ldr	x0, [x0]
   35050:	str	x0, [sp, #32]
   35054:	ldr	x0, [sp, #40]
   35058:	ldr	x0, [x0]
   3505c:	str	x0, [sp, #24]
   35060:	ldr	x0, [sp, #32]
   35064:	ldr	x0, [x0, #24]
   35068:	ldr	x1, [sp, #24]
   3506c:	cmp	x1, x0
   35070:	b.cs	3507c <__sanitizer_set_death_callback@@Base+0x3acc>  // b.hs, b.nlast
   35074:	mov	w0, #0xffffffff            	// #-1
   35078:	b	3509c <__sanitizer_set_death_callback@@Base+0x3aec>
   3507c:	ldr	x0, [sp, #32]
   35080:	ldr	x0, [x0, #32]
   35084:	ldr	x1, [sp, #24]
   35088:	cmp	x1, x0
   3508c:	b.cc	35098 <__sanitizer_set_death_callback@@Base+0x3ae8>  // b.lo, b.ul, b.last
   35090:	mov	w0, #0x1                   	// #1
   35094:	b	3509c <__sanitizer_set_death_callback@@Base+0x3aec>
   35098:	mov	w0, #0x0                   	// #0
   3509c:	add	sp, sp, #0x30
   350a0:	ret
   350a4:	stp	x29, x30, [sp, #-64]!
   350a8:	mov	x29, sp
   350ac:	str	x0, [sp, #40]
   350b0:	str	x1, [sp, #32]
   350b4:	str	x2, [sp, #24]
   350b8:	add	x5, sp, #0x18
   350bc:	adrp	x0, 35000 <__sanitizer_set_death_callback@@Base+0x3a50>
   350c0:	add	x4, x0, #0x34
   350c4:	mov	x3, #0x8                   	// #8
   350c8:	ldr	x2, [sp, #32]
   350cc:	ldr	x1, [sp, #40]
   350d0:	mov	x0, x5
   350d4:	bl	6af0 <bsearch@plt>
   350d8:	str	x0, [sp, #56]
   350dc:	ldr	x0, [sp, #56]
   350e0:	cmp	x0, #0x0
   350e4:	b.eq	350f4 <__sanitizer_set_death_callback@@Base+0x3b44>  // b.none
   350e8:	ldr	x0, [sp, #56]
   350ec:	ldr	x0, [x0]
   350f0:	b	350f8 <__sanitizer_set_death_callback@@Base+0x3b48>
   350f4:	mov	x0, #0x0                   	// #0
   350f8:	ldp	x29, x30, [sp], #64
   350fc:	ret
   35100:	stp	x29, x30, [sp, #-48]!
   35104:	mov	x29, sp
   35108:	str	x0, [sp, #24]
   3510c:	str	x1, [sp, #16]
   35110:	ldr	x0, [sp, #24]
   35114:	str	x0, [sp, #40]
   35118:	ldr	x0, [sp, #16]
   3511c:	str	x0, [sp, #32]
   35120:	ldr	x0, [sp, #40]
   35124:	ldr	x1, [x0]
   35128:	ldr	x0, [sp, #32]
   3512c:	ldr	x0, [x0]
   35130:	cmp	x1, x0
   35134:	b.cs	35140 <__sanitizer_set_death_callback@@Base+0x3b90>  // b.hs, b.nlast
   35138:	mov	w0, #0xffffffff            	// #-1
   3513c:	b	351c4 <__sanitizer_set_death_callback@@Base+0x3c14>
   35140:	ldr	x0, [sp, #40]
   35144:	ldr	x1, [x0]
   35148:	ldr	x0, [sp, #32]
   3514c:	ldr	x0, [x0]
   35150:	cmp	x1, x0
   35154:	b.ls	35160 <__sanitizer_set_death_callback@@Base+0x3bb0>  // b.plast
   35158:	mov	w0, #0x1                   	// #1
   3515c:	b	351c4 <__sanitizer_set_death_callback@@Base+0x3c14>
   35160:	ldr	x0, [sp, #40]
   35164:	ldr	x1, [x0, #8]
   35168:	ldr	x0, [sp, #32]
   3516c:	ldr	x0, [x0, #8]
   35170:	cmp	x1, x0
   35174:	b.cs	35180 <__sanitizer_set_death_callback@@Base+0x3bd0>  // b.hs, b.nlast
   35178:	mov	w0, #0x1                   	// #1
   3517c:	b	351c4 <__sanitizer_set_death_callback@@Base+0x3c14>
   35180:	ldr	x0, [sp, #40]
   35184:	ldr	x1, [x0, #8]
   35188:	ldr	x0, [sp, #32]
   3518c:	ldr	x0, [x0, #8]
   35190:	cmp	x1, x0
   35194:	b.ls	351a0 <__sanitizer_set_death_callback@@Base+0x3bf0>  // b.plast
   35198:	mov	w0, #0xffffffff            	// #-1
   3519c:	b	351c4 <__sanitizer_set_death_callback@@Base+0x3c14>
   351a0:	ldr	x0, [sp, #40]
   351a4:	ldr	x0, [x0, #16]
   351a8:	ldr	x2, [x0]
   351ac:	ldr	x0, [sp, #32]
   351b0:	ldr	x0, [x0, #16]
   351b4:	ldr	x0, [x0]
   351b8:	mov	x1, x0
   351bc:	mov	x0, x2
   351c0:	bl	6a30 <__asan_internal_strcmp@plt>
   351c4:	ldp	x29, x30, [sp], #48
   351c8:	ret
   351cc:	sub	sp, sp, #0x30
   351d0:	str	x0, [sp, #8]
   351d4:	str	x1, [sp]
   351d8:	ldr	x0, [sp, #8]
   351dc:	str	x0, [sp, #40]
   351e0:	ldr	x0, [sp]
   351e4:	str	x0, [sp, #32]
   351e8:	ldr	x0, [sp, #40]
   351ec:	ldr	x0, [x0]
   351f0:	str	x0, [sp, #24]
   351f4:	ldr	x0, [sp, #32]
   351f8:	ldr	x0, [x0]
   351fc:	ldr	x1, [sp, #24]
   35200:	cmp	x1, x0
   35204:	b.cs	35210 <__sanitizer_set_death_callback@@Base+0x3c60>  // b.hs, b.nlast
   35208:	mov	w0, #0xffffffff            	// #-1
   3520c:	b	35230 <__sanitizer_set_death_callback@@Base+0x3c80>
   35210:	ldr	x0, [sp, #32]
   35214:	ldr	x0, [x0, #8]
   35218:	ldr	x1, [sp, #24]
   3521c:	cmp	x1, x0
   35220:	b.cc	3522c <__sanitizer_set_death_callback@@Base+0x3c7c>  // b.lo, b.ul, b.last
   35224:	mov	w0, #0x1                   	// #1
   35228:	b	35230 <__sanitizer_set_death_callback@@Base+0x3c80>
   3522c:	mov	w0, #0x0                   	// #0
   35230:	add	sp, sp, #0x30
   35234:	ret
   35238:	stp	x29, x30, [sp, #-96]!
   3523c:	mov	x29, sp
   35240:	str	x19, [sp, #16]
   35244:	str	x0, [sp, #72]
   35248:	str	x1, [sp, #64]
   3524c:	mov	x19, x2
   35250:	str	x3, [sp, #56]
   35254:	str	x4, [sp, #48]
   35258:	str	x5, [sp, #40]
   3525c:	ldr	x1, [x19]
   35260:	ldr	x0, [sp, #64]
   35264:	add	x0, x1, x0
   35268:	str	x0, [x19]
   3526c:	ldr	x1, [x19, #8]
   35270:	ldr	x0, [sp, #64]
   35274:	add	x0, x1, x0
   35278:	str	x0, [x19, #8]
   3527c:	ldr	x0, [sp, #40]
   35280:	ldr	x0, [x0, #24]
   35284:	cmp	x0, #0x0
   35288:	b.eq	35320 <__sanitizer_set_death_callback@@Base+0x3d70>  // b.none
   3528c:	ldr	x0, [sp, #40]
   35290:	ldr	x2, [x0]
   35294:	ldr	x0, [sp, #40]
   35298:	ldr	x1, [x0, #24]
   3529c:	mov	x0, x1
   352a0:	lsl	x0, x0, #1
   352a4:	add	x0, x0, x1
   352a8:	lsl	x0, x0, #3
   352ac:	sub	x0, x0, #0x18
   352b0:	add	x0, x2, x0
   352b4:	str	x0, [sp, #88]
   352b8:	ldr	x1, [x19]
   352bc:	ldr	x0, [sp, #88]
   352c0:	ldr	x0, [x0, #8]
   352c4:	cmp	x1, x0
   352c8:	b.eq	352e4 <__sanitizer_set_death_callback@@Base+0x3d34>  // b.none
   352cc:	ldr	x1, [x19]
   352d0:	ldr	x0, [sp, #88]
   352d4:	ldr	x0, [x0, #8]
   352d8:	add	x0, x0, #0x1
   352dc:	cmp	x1, x0
   352e0:	b.ne	35320 <__sanitizer_set_death_callback@@Base+0x3d70>  // b.any
   352e4:	ldr	x1, [x19, #16]
   352e8:	ldr	x0, [sp, #88]
   352ec:	ldr	x0, [x0, #16]
   352f0:	cmp	x1, x0
   352f4:	b.ne	35320 <__sanitizer_set_death_callback@@Base+0x3d70>  // b.any
   352f8:	ldr	x1, [x19, #8]
   352fc:	ldr	x0, [sp, #88]
   35300:	ldr	x0, [x0, #8]
   35304:	cmp	x1, x0
   35308:	b.ls	35318 <__sanitizer_set_death_callback@@Base+0x3d68>  // b.plast
   3530c:	ldr	x1, [x19, #8]
   35310:	ldr	x0, [sp, #88]
   35314:	str	x1, [x0, #8]
   35318:	mov	w0, #0x1                   	// #1
   3531c:	b	35388 <__sanitizer_set_death_callback@@Base+0x3dd8>
   35320:	ldr	x0, [sp, #40]
   35324:	mov	x4, x0
   35328:	ldr	x3, [sp, #48]
   3532c:	ldr	x2, [sp, #56]
   35330:	mov	x1, #0x18                  	// #24
   35334:	ldr	x0, [sp, #72]
   35338:	bl	6750 <__asan_backtrace_vector_grow@plt>
   3533c:	str	x0, [sp, #88]
   35340:	ldr	x0, [sp, #88]
   35344:	cmp	x0, #0x0
   35348:	b.ne	35354 <__sanitizer_set_death_callback@@Base+0x3da4>  // b.any
   3534c:	mov	w0, #0x0                   	// #0
   35350:	b	35388 <__sanitizer_set_death_callback@@Base+0x3dd8>
   35354:	ldr	x0, [sp, #88]
   35358:	mov	x2, x0
   3535c:	mov	x3, x19
   35360:	ldp	x0, x1, [x3]
   35364:	stp	x0, x1, [x2]
   35368:	ldr	x0, [x3, #16]
   3536c:	str	x0, [x2, #16]
   35370:	ldr	x0, [sp, #40]
   35374:	ldr	x0, [x0, #24]
   35378:	add	x1, x0, #0x1
   3537c:	ldr	x0, [sp, #40]
   35380:	str	x1, [x0, #24]
   35384:	mov	w0, #0x1                   	// #1
   35388:	ldr	x19, [sp, #16]
   3538c:	ldp	x29, x30, [sp], #96
   35390:	ret
   35394:	sub	sp, sp, #0x20
   35398:	str	x0, [sp, #8]
   3539c:	str	x1, [sp]
   353a0:	ldr	x0, [sp, #8]
   353a4:	str	x0, [sp, #24]
   353a8:	ldr	x0, [sp]
   353ac:	str	x0, [sp, #16]
   353b0:	ldr	x0, [sp, #24]
   353b4:	ldr	x1, [x0]
   353b8:	ldr	x0, [sp, #16]
   353bc:	ldr	x0, [x0]
   353c0:	cmp	x1, x0
   353c4:	b.cs	353d0 <__sanitizer_set_death_callback@@Base+0x3e20>  // b.hs, b.nlast
   353c8:	mov	w0, #0xffffffff            	// #-1
   353cc:	b	35484 <__sanitizer_set_death_callback@@Base+0x3ed4>
   353d0:	ldr	x0, [sp, #24]
   353d4:	ldr	x1, [x0]
   353d8:	ldr	x0, [sp, #16]
   353dc:	ldr	x0, [x0]
   353e0:	cmp	x1, x0
   353e4:	b.ls	353f0 <__sanitizer_set_death_callback@@Base+0x3e40>  // b.plast
   353e8:	mov	w0, #0x1                   	// #1
   353ec:	b	35484 <__sanitizer_set_death_callback@@Base+0x3ed4>
   353f0:	ldr	x0, [sp, #24]
   353f4:	ldr	x1, [x0, #8]
   353f8:	ldr	x0, [sp, #16]
   353fc:	ldr	x0, [x0, #8]
   35400:	cmp	x1, x0
   35404:	b.cs	35410 <__sanitizer_set_death_callback@@Base+0x3e60>  // b.hs, b.nlast
   35408:	mov	w0, #0x1                   	// #1
   3540c:	b	35484 <__sanitizer_set_death_callback@@Base+0x3ed4>
   35410:	ldr	x0, [sp, #24]
   35414:	ldr	x1, [x0, #8]
   35418:	ldr	x0, [sp, #16]
   3541c:	ldr	x0, [x0, #8]
   35420:	cmp	x1, x0
   35424:	b.ls	35430 <__sanitizer_set_death_callback@@Base+0x3e80>  // b.plast
   35428:	mov	w0, #0xffffffff            	// #-1
   3542c:	b	35484 <__sanitizer_set_death_callback@@Base+0x3ed4>
   35430:	ldr	x0, [sp, #24]
   35434:	ldr	x0, [x0, #16]
   35438:	ldr	x1, [x0, #56]
   3543c:	ldr	x0, [sp, #16]
   35440:	ldr	x0, [x0, #16]
   35444:	ldr	x0, [x0, #56]
   35448:	cmp	x1, x0
   3544c:	b.ge	35458 <__sanitizer_set_death_callback@@Base+0x3ea8>  // b.tcont
   35450:	mov	w0, #0xffffffff            	// #-1
   35454:	b	35484 <__sanitizer_set_death_callback@@Base+0x3ed4>
   35458:	ldr	x0, [sp, #24]
   3545c:	ldr	x0, [x0, #16]
   35460:	ldr	x1, [x0, #56]
   35464:	ldr	x0, [sp, #16]
   35468:	ldr	x0, [x0, #16]
   3546c:	ldr	x0, [x0, #56]
   35470:	cmp	x1, x0
   35474:	b.le	35480 <__sanitizer_set_death_callback@@Base+0x3ed0>
   35478:	mov	w0, #0x1                   	// #1
   3547c:	b	35484 <__sanitizer_set_death_callback@@Base+0x3ed4>
   35480:	mov	w0, #0x0                   	// #0
   35484:	add	sp, sp, #0x20
   35488:	ret
   3548c:	sub	sp, sp, #0x30
   35490:	str	x0, [sp, #8]
   35494:	str	x1, [sp]
   35498:	ldr	x0, [sp, #8]
   3549c:	str	x0, [sp, #40]
   354a0:	ldr	x0, [sp]
   354a4:	str	x0, [sp, #32]
   354a8:	ldr	x0, [sp, #40]
   354ac:	ldr	x0, [x0]
   354b0:	str	x0, [sp, #24]
   354b4:	ldr	x0, [sp, #32]
   354b8:	ldr	x0, [x0]
   354bc:	ldr	x1, [sp, #24]
   354c0:	cmp	x1, x0
   354c4:	b.cs	354d0 <__sanitizer_set_death_callback@@Base+0x3f20>  // b.hs, b.nlast
   354c8:	mov	w0, #0xffffffff            	// #-1
   354cc:	b	354f0 <__sanitizer_set_death_callback@@Base+0x3f40>
   354d0:	ldr	x0, [sp, #32]
   354d4:	ldr	x0, [x0, #8]
   354d8:	ldr	x1, [sp, #24]
   354dc:	cmp	x1, x0
   354e0:	b.cc	354ec <__sanitizer_set_death_callback@@Base+0x3f3c>  // b.lo, b.ul, b.last
   354e4:	mov	w0, #0x1                   	// #1
   354e8:	b	354f0 <__sanitizer_set_death_callback@@Base+0x3f40>
   354ec:	mov	w0, #0x0                   	// #0
   354f0:	add	sp, sp, #0x30
   354f4:	ret
   354f8:	sub	sp, sp, #0x20
   354fc:	str	x0, [sp, #8]
   35500:	str	x1, [sp]
   35504:	ldr	x0, [sp, #8]
   35508:	str	x0, [sp, #24]
   3550c:	ldr	x0, [sp]
   35510:	str	x0, [sp, #16]
   35514:	ldr	x0, [sp, #24]
   35518:	ldr	x1, [x0]
   3551c:	ldr	x0, [sp, #16]
   35520:	ldr	x0, [x0]
   35524:	cmp	x1, x0
   35528:	b.cs	35534 <__sanitizer_set_death_callback@@Base+0x3f84>  // b.hs, b.nlast
   3552c:	mov	w0, #0xffffffff            	// #-1
   35530:	b	35598 <__sanitizer_set_death_callback@@Base+0x3fe8>
   35534:	ldr	x0, [sp, #24]
   35538:	ldr	x1, [x0]
   3553c:	ldr	x0, [sp, #16]
   35540:	ldr	x0, [x0]
   35544:	cmp	x1, x0
   35548:	b.ls	35554 <__sanitizer_set_death_callback@@Base+0x3fa4>  // b.plast
   3554c:	mov	w0, #0x1                   	// #1
   35550:	b	35598 <__sanitizer_set_death_callback@@Base+0x3fe8>
   35554:	ldr	x0, [sp, #24]
   35558:	ldr	w1, [x0, #20]
   3555c:	ldr	x0, [sp, #16]
   35560:	ldr	w0, [x0, #20]
   35564:	cmp	w1, w0
   35568:	b.ge	35574 <__sanitizer_set_death_callback@@Base+0x3fc4>  // b.tcont
   3556c:	mov	w0, #0xffffffff            	// #-1
   35570:	b	35598 <__sanitizer_set_death_callback@@Base+0x3fe8>
   35574:	ldr	x0, [sp, #24]
   35578:	ldr	w1, [x0, #20]
   3557c:	ldr	x0, [sp, #16]
   35580:	ldr	w0, [x0, #20]
   35584:	cmp	w1, w0
   35588:	b.le	35594 <__sanitizer_set_death_callback@@Base+0x3fe4>
   3558c:	mov	w0, #0x1                   	// #1
   35590:	b	35598 <__sanitizer_set_death_callback@@Base+0x3fe8>
   35594:	mov	w0, #0x0                   	// #0
   35598:	add	sp, sp, #0x20
   3559c:	ret
   355a0:	sub	sp, sp, #0x30
   355a4:	str	x0, [sp, #8]
   355a8:	str	x1, [sp]
   355ac:	ldr	x0, [sp, #8]
   355b0:	str	x0, [sp, #40]
   355b4:	ldr	x0, [sp]
   355b8:	str	x0, [sp, #32]
   355bc:	ldr	x0, [sp, #40]
   355c0:	ldr	x0, [x0]
   355c4:	str	x0, [sp, #24]
   355c8:	ldr	x0, [sp, #32]
   355cc:	ldr	x0, [x0]
   355d0:	ldr	x1, [sp, #24]
   355d4:	cmp	x1, x0
   355d8:	b.cs	355e4 <__sanitizer_set_death_callback@@Base+0x4034>  // b.hs, b.nlast
   355dc:	mov	w0, #0xffffffff            	// #-1
   355e0:	b	35608 <__sanitizer_set_death_callback@@Base+0x4058>
   355e4:	ldr	x0, [sp, #32]
   355e8:	add	x0, x0, #0x18
   355ec:	ldr	x0, [x0]
   355f0:	ldr	x1, [sp, #24]
   355f4:	cmp	x1, x0
   355f8:	b.cc	35604 <__sanitizer_set_death_callback@@Base+0x4054>  // b.lo, b.ul, b.last
   355fc:	mov	w0, #0x1                   	// #1
   35600:	b	35608 <__sanitizer_set_death_callback@@Base+0x4058>
   35604:	mov	w0, #0x0                   	// #0
   35608:	add	sp, sp, #0x30
   3560c:	ret
   35610:	sub	sp, sp, #0x20
   35614:	str	x0, [sp, #8]
   35618:	str	x1, [sp]
   3561c:	ldr	x0, [sp, #8]
   35620:	str	x0, [sp, #24]
   35624:	ldr	x0, [sp]
   35628:	str	x0, [sp, #16]
   3562c:	ldr	x0, [sp, #24]
   35630:	ldr	x1, [x0]
   35634:	ldr	x0, [sp, #16]
   35638:	ldr	x0, [x0]
   3563c:	cmp	x1, x0
   35640:	b.cs	3564c <__sanitizer_set_death_callback@@Base+0x409c>  // b.hs, b.nlast
   35644:	mov	w0, #0xffffffff            	// #-1
   35648:	b	35670 <__sanitizer_set_death_callback@@Base+0x40c0>
   3564c:	ldr	x0, [sp, #24]
   35650:	ldr	x1, [x0]
   35654:	ldr	x0, [sp, #16]
   35658:	ldr	x0, [x0]
   3565c:	cmp	x1, x0
   35660:	b.ls	3566c <__sanitizer_set_death_callback@@Base+0x40bc>  // b.plast
   35664:	mov	w0, #0x1                   	// #1
   35668:	b	35670 <__sanitizer_set_death_callback@@Base+0x40c0>
   3566c:	mov	w0, #0x0                   	// #0
   35670:	add	sp, sp, #0x20
   35674:	ret
   35678:	stp	x29, x30, [sp, #-288]!
   3567c:	mov	x29, sp
   35680:	str	x0, [sp, #72]
   35684:	str	x1, [sp, #64]
   35688:	str	x2, [sp, #56]
   3568c:	str	x3, [sp, #48]
   35690:	str	w4, [sp, #44]
   35694:	str	x5, [sp, #32]
   35698:	str	x6, [sp, #24]
   3569c:	str	x7, [sp, #16]
   356a0:	ldr	x0, [sp, #16]
   356a4:	str	xzr, [x0]
   356a8:	ldr	x0, [sp, #16]
   356ac:	str	xzr, [x0, #8]
   356b0:	ldr	x1, [sp, #64]
   356b4:	ldr	x0, [sp, #48]
   356b8:	cmp	x1, x0
   356bc:	b.cc	356e0 <__sanitizer_set_death_callback@@Base+0x4130>  // b.lo, b.ul, b.last
   356c0:	ldr	x3, [sp, #32]
   356c4:	mov	w2, #0x0                   	// #0
   356c8:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   356cc:	add	x1, x0, #0x230
   356d0:	ldr	x0, [sp, #24]
   356d4:	blr	x3
   356d8:	mov	w0, #0x0                   	// #0
   356dc:	b	35a50 <__sanitizer_set_death_callback@@Base+0x44a0>
   356e0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   356e4:	add	x0, x0, #0x250
   356e8:	str	x0, [sp, #176]
   356ec:	ldr	x0, [sp, #56]
   356f0:	str	x0, [sp, #184]
   356f4:	ldr	x1, [sp, #56]
   356f8:	ldr	x0, [sp, #64]
   356fc:	add	x0, x1, x0
   35700:	str	x0, [sp, #192]
   35704:	ldr	x1, [sp, #48]
   35708:	ldr	x0, [sp, #64]
   3570c:	sub	x0, x1, x0
   35710:	str	x0, [sp, #200]
   35714:	ldr	w0, [sp, #44]
   35718:	str	w0, [sp, #208]
   3571c:	ldr	x0, [sp, #32]
   35720:	str	x0, [sp, #216]
   35724:	ldr	x0, [sp, #24]
   35728:	str	x0, [sp, #224]
   3572c:	str	wzr, [sp, #232]
   35730:	add	x0, sp, #0x70
   35734:	add	x1, sp, #0xb0
   35738:	ldp	x2, x3, [x1]
   3573c:	stp	x2, x3, [x0]
   35740:	ldp	x2, x3, [x1, #16]
   35744:	stp	x2, x3, [x0, #16]
   35748:	ldp	x2, x3, [x1, #32]
   3574c:	stp	x2, x3, [x0, #32]
   35750:	ldp	x2, x3, [x1, #48]
   35754:	stp	x2, x3, [x0, #48]
   35758:	str	xzr, [sp, #280]
   3575c:	b	357b4 <__sanitizer_set_death_callback@@Base+0x4204>
   35760:	ldr	w0, [sp, #168]
   35764:	cmp	w0, #0x0
   35768:	b.eq	35774 <__sanitizer_set_death_callback@@Base+0x41c4>  // b.none
   3576c:	mov	w0, #0x0                   	// #0
   35770:	b	35a50 <__sanitizer_set_death_callback@@Base+0x44a0>
   35774:	ldr	x0, [sp, #280]
   35778:	add	x0, x0, #0x1
   3577c:	str	x0, [sp, #280]
   35780:	add	x0, sp, #0x70
   35784:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   35788:	add	x0, sp, #0x70
   3578c:	bl	340c4 <__sanitizer_set_death_callback@@Base+0x2b14>
   35790:	b	3579c <__sanitizer_set_death_callback@@Base+0x41ec>
   35794:	add	x0, sp, #0x70
   35798:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   3579c:	add	x0, sp, #0x70
   357a0:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   357a4:	cmp	x0, #0x0
   357a8:	b.ne	35794 <__sanitizer_set_death_callback@@Base+0x41e4>  // b.any
   357ac:	add	x0, sp, #0x70
   357b0:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   357b4:	add	x0, sp, #0x70
   357b8:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   357bc:	cmp	x0, #0x0
   357c0:	b.ne	35760 <__sanitizer_set_death_callback@@Base+0x41b0>  // b.any
   357c4:	ldr	w0, [sp, #168]
   357c8:	cmp	w0, #0x0
   357cc:	b.eq	357d8 <__sanitizer_set_death_callback@@Base+0x4228>  // b.none
   357d0:	mov	w0, #0x0                   	// #0
   357d4:	b	35a50 <__sanitizer_set_death_callback@@Base+0x44a0>
   357d8:	ldr	x0, [sp, #280]
   357dc:	cmp	x0, #0x0
   357e0:	b.ne	357ec <__sanitizer_set_death_callback@@Base+0x423c>  // b.any
   357e4:	mov	w0, #0x1                   	// #1
   357e8:	b	35a50 <__sanitizer_set_death_callback@@Base+0x44a0>
   357ec:	ldr	x0, [sp, #280]
   357f0:	lsl	x0, x0, #5
   357f4:	ldr	x3, [sp, #24]
   357f8:	ldr	x2, [sp, #32]
   357fc:	mov	x1, x0
   35800:	ldr	x0, [sp, #72]
   35804:	bl	67f0 <__asan_backtrace_alloc@plt>
   35808:	mov	x1, x0
   3580c:	ldr	x0, [sp, #16]
   35810:	str	x1, [x0, #8]
   35814:	ldr	x0, [sp, #16]
   35818:	ldr	x0, [x0, #8]
   3581c:	cmp	x0, #0x0
   35820:	b.ne	3582c <__sanitizer_set_death_callback@@Base+0x427c>  // b.any
   35824:	mov	w0, #0x0                   	// #0
   35828:	b	35a50 <__sanitizer_set_death_callback@@Base+0x44a0>
   3582c:	ldr	x0, [sp, #16]
   35830:	ldr	x1, [sp, #280]
   35834:	str	x1, [x0]
   35838:	ldr	x0, [sp, #16]
   3583c:	ldr	x3, [x0, #8]
   35840:	ldr	x0, [sp, #280]
   35844:	lsl	x0, x0, #5
   35848:	mov	x2, x0
   3584c:	mov	w1, #0x0                   	// #0
   35850:	mov	x0, x3
   35854:	bl	6770 <__asan_internal_memset@plt>
   35858:	str	xzr, [sp, #280]
   3585c:	ldr	w0, [sp, #232]
   35860:	cmp	w0, #0x0
   35864:	b.ne	35a2c <__sanitizer_set_death_callback@@Base+0x447c>  // b.any
   35868:	add	x0, sp, #0xb0
   3586c:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   35870:	str	x0, [sp, #256]
   35874:	ldr	x0, [sp, #256]
   35878:	cmp	x0, #0x0
   3587c:	b.ne	358ac <__sanitizer_set_death_callback@@Base+0x42fc>  // b.any
   35880:	ldr	x0, [sp, #16]
   35884:	ldr	x4, [x0, #8]
   35888:	ldr	x0, [sp, #16]
   3588c:	ldr	x1, [x0]
   35890:	adrp	x0, 35000 <__sanitizer_set_death_callback@@Base+0x3a50>
   35894:	add	x3, x0, #0x610
   35898:	mov	x2, #0x20                  	// #32
   3589c:	mov	x0, x4
   358a0:	bl	65d0 <__asan_backtrace_qsort@plt>
   358a4:	mov	w0, #0x1                   	// #1
   358a8:	b	35a50 <__sanitizer_set_death_callback@@Base+0x44a0>
   358ac:	ldr	x0, [sp, #256]
   358b0:	str	x0, [sp, #80]
   358b4:	add	x0, sp, #0xb0
   358b8:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   358bc:	str	w0, [sp, #88]
   358c0:	add	x0, sp, #0xb0
   358c4:	bl	340c4 <__sanitizer_set_death_callback@@Base+0x2b14>
   358c8:	and	w0, w0, #0xff
   358cc:	str	w0, [sp, #92]
   358d0:	add	x0, sp, #0x70
   358d4:	add	x1, sp, #0xb0
   358d8:	ldp	x2, x3, [x1]
   358dc:	stp	x2, x3, [x0]
   358e0:	ldp	x2, x3, [x1, #16]
   358e4:	stp	x2, x3, [x0, #16]
   358e8:	ldp	x2, x3, [x1, #32]
   358ec:	stp	x2, x3, [x0, #32]
   358f0:	ldp	x2, x3, [x1, #48]
   358f4:	stp	x2, x3, [x0, #48]
   358f8:	str	xzr, [sp, #272]
   358fc:	b	35914 <__sanitizer_set_death_callback@@Base+0x4364>
   35900:	ldr	x0, [sp, #272]
   35904:	add	x0, x0, #0x1
   35908:	str	x0, [sp, #272]
   3590c:	add	x0, sp, #0x70
   35910:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   35914:	add	x0, sp, #0x70
   35918:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   3591c:	cmp	x0, #0x0
   35920:	b.ne	35900 <__sanitizer_set_death_callback@@Base+0x4350>  // b.any
   35924:	ldr	x0, [sp, #272]
   35928:	cmp	x0, #0x0
   3592c:	b.ne	35948 <__sanitizer_set_death_callback@@Base+0x4398>  // b.any
   35930:	str	xzr, [sp, #264]
   35934:	add	x0, sp, #0xb0
   35938:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   3593c:	add	x0, sp, #0xb0
   35940:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   35944:	b	359e0 <__sanitizer_set_death_callback@@Base+0x4430>
   35948:	ldr	x0, [sp, #272]
   3594c:	lsl	x0, x0, #3
   35950:	ldr	x3, [sp, #24]
   35954:	ldr	x2, [sp, #32]
   35958:	mov	x1, x0
   3595c:	ldr	x0, [sp, #72]
   35960:	bl	67f0 <__asan_backtrace_alloc@plt>
   35964:	str	x0, [sp, #264]
   35968:	ldr	x0, [sp, #264]
   3596c:	cmp	x0, #0x0
   35970:	b.eq	35a34 <__sanitizer_set_death_callback@@Base+0x4484>  // b.none
   35974:	str	xzr, [sp, #272]
   35978:	add	x0, sp, #0xb0
   3597c:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   35980:	str	x0, [sp, #248]
   35984:	add	x0, sp, #0xb0
   35988:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   3598c:	str	x0, [sp, #240]
   35990:	ldr	x0, [sp, #248]
   35994:	cmp	x0, #0x0
   35998:	b.eq	359dc <__sanitizer_set_death_callback@@Base+0x442c>  // b.none
   3599c:	ldr	x0, [sp, #272]
   359a0:	lsl	x0, x0, #3
   359a4:	ldr	x1, [sp, #264]
   359a8:	add	x0, x1, x0
   359ac:	ldr	x1, [sp, #248]
   359b0:	str	w1, [x0]
   359b4:	ldr	x0, [sp, #272]
   359b8:	lsl	x0, x0, #3
   359bc:	ldr	x1, [sp, #264]
   359c0:	add	x0, x1, x0
   359c4:	ldr	x1, [sp, #240]
   359c8:	str	w1, [x0, #4]
   359cc:	ldr	x0, [sp, #272]
   359d0:	add	x0, x0, #0x1
   359d4:	str	x0, [sp, #272]
   359d8:	b	35978 <__sanitizer_set_death_callback@@Base+0x43c8>
   359dc:	nop
   359e0:	ldr	x0, [sp, #272]
   359e4:	str	x0, [sp, #96]
   359e8:	ldr	x0, [sp, #264]
   359ec:	str	x0, [sp, #104]
   359f0:	ldr	x0, [sp, #16]
   359f4:	ldr	x1, [x0, #8]
   359f8:	ldr	x0, [sp, #280]
   359fc:	lsl	x0, x0, #5
   35a00:	add	x0, x1, x0
   35a04:	mov	x3, x0
   35a08:	add	x2, sp, #0x50
   35a0c:	ldp	x0, x1, [x2]
   35a10:	stp	x0, x1, [x3]
   35a14:	ldp	x0, x1, [x2, #16]
   35a18:	stp	x0, x1, [x3, #16]
   35a1c:	ldr	x0, [sp, #280]
   35a20:	add	x0, x0, #0x1
   35a24:	str	x0, [sp, #280]
   35a28:	b	3585c <__sanitizer_set_death_callback@@Base+0x42ac>
   35a2c:	nop
   35a30:	b	35a38 <__sanitizer_set_death_callback@@Base+0x4488>
   35a34:	nop
   35a38:	ldr	x3, [sp, #24]
   35a3c:	ldr	x2, [sp, #32]
   35a40:	ldr	x1, [sp, #16]
   35a44:	ldr	x0, [sp, #72]
   35a48:	bl	348ac <__sanitizer_set_death_callback@@Base+0x32fc>
   35a4c:	mov	w0, #0x0                   	// #0
   35a50:	ldp	x29, x30, [sp], #288
   35a54:	ret
   35a58:	stp	x29, x30, [sp, #-96]!
   35a5c:	mov	x29, sp
   35a60:	str	x0, [sp, #40]
   35a64:	str	x1, [sp, #32]
   35a68:	str	x2, [sp, #24]
   35a6c:	str	x3, [sp, #16]
   35a70:	ldr	x0, [sp, #32]
   35a74:	sub	x1, x0, #0x1
   35a78:	ldr	x0, [sp, #40]
   35a7c:	ldr	x0, [x0]
   35a80:	cmp	x1, x0
   35a84:	b.cs	35acc <__sanitizer_set_death_callback@@Base+0x451c>  // b.hs, b.nlast
   35a88:	ldr	x0, [sp, #40]
   35a8c:	ldr	x1, [x0, #8]
   35a90:	ldr	x0, [sp, #32]
   35a94:	lsl	x0, x0, #5
   35a98:	sub	x0, x0, #0x20
   35a9c:	add	x0, x1, x0
   35aa0:	ldr	x0, [x0]
   35aa4:	ldr	x1, [sp, #32]
   35aa8:	cmp	x1, x0
   35aac:	b.ne	35acc <__sanitizer_set_death_callback@@Base+0x451c>  // b.any
   35ab0:	ldr	x0, [sp, #40]
   35ab4:	ldr	x1, [x0, #8]
   35ab8:	ldr	x0, [sp, #32]
   35abc:	lsl	x0, x0, #5
   35ac0:	sub	x0, x0, #0x20
   35ac4:	add	x0, x1, x0
   35ac8:	b	35b40 <__sanitizer_set_death_callback@@Base+0x4590>
   35acc:	add	x0, sp, #0x38
   35ad0:	mov	x2, #0x20                  	// #32
   35ad4:	mov	w1, #0x0                   	// #0
   35ad8:	bl	6770 <__asan_internal_memset@plt>
   35adc:	ldr	x0, [sp, #32]
   35ae0:	str	x0, [sp, #56]
   35ae4:	ldr	x0, [sp, #40]
   35ae8:	ldr	x1, [x0, #8]
   35aec:	ldr	x0, [sp, #40]
   35af0:	ldr	x2, [x0]
   35af4:	add	x5, sp, #0x38
   35af8:	adrp	x0, 35000 <__sanitizer_set_death_callback@@Base+0x3a50>
   35afc:	add	x4, x0, #0x610
   35b00:	mov	x3, #0x20                  	// #32
   35b04:	mov	x0, x5
   35b08:	bl	6af0 <bsearch@plt>
   35b0c:	str	x0, [sp, #88]
   35b10:	ldr	x0, [sp, #88]
   35b14:	cmp	x0, #0x0
   35b18:	b.ne	35b3c <__sanitizer_set_death_callback@@Base+0x458c>  // b.any
   35b1c:	ldr	x3, [sp, #24]
   35b20:	mov	w2, #0x0                   	// #0
   35b24:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   35b28:	add	x1, x0, #0x260
   35b2c:	ldr	x0, [sp, #16]
   35b30:	blr	x3
   35b34:	mov	x0, #0x0                   	// #0
   35b38:	b	35b40 <__sanitizer_set_death_callback@@Base+0x4590>
   35b3c:	ldr	x0, [sp, #88]
   35b40:	ldp	x29, x30, [sp], #96
   35b44:	ret
   35b48:	stp	x29, x30, [sp, #-224]!
   35b4c:	mov	x29, sp
   35b50:	str	x0, [sp, #104]
   35b54:	str	x1, [sp, #96]
   35b58:	str	x2, [sp, #88]
   35b5c:	str	x3, [sp, #80]
   35b60:	str	x4, [sp, #72]
   35b64:	str	w5, [sp, #68]
   35b68:	str	x6, [sp, #56]
   35b6c:	str	x7, [sp, #48]
   35b70:	ldr	x1, [sp, #80]
   35b74:	ldr	x0, [sp, #48]
   35b78:	cmp	x1, x0
   35b7c:	b.cc	35ba0 <__sanitizer_set_death_callback@@Base+0x45f0>  // b.lo, b.ul, b.last
   35b80:	ldr	x3, [sp, #224]
   35b84:	mov	w2, #0x0                   	// #0
   35b88:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   35b8c:	add	x1, x0, #0x280
   35b90:	ldr	x0, [sp, #232]
   35b94:	blr	x3
   35b98:	mov	w0, #0x0                   	// #0
   35b9c:	b	35cf8 <__sanitizer_set_death_callback@@Base+0x4748>
   35ba0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   35ba4:	add	x0, x0, #0x2a0
   35ba8:	str	x0, [sp, #144]
   35bac:	ldr	x0, [sp, #56]
   35bb0:	str	x0, [sp, #152]
   35bb4:	ldr	x1, [sp, #56]
   35bb8:	ldr	x0, [sp, #80]
   35bbc:	add	x0, x1, x0
   35bc0:	str	x0, [sp, #160]
   35bc4:	ldr	x1, [sp, #48]
   35bc8:	ldr	x0, [sp, #80]
   35bcc:	sub	x0, x1, x0
   35bd0:	str	x0, [sp, #168]
   35bd4:	ldr	w0, [sp, #68]
   35bd8:	str	w0, [sp, #176]
   35bdc:	ldr	x0, [sp, #224]
   35be0:	str	x0, [sp, #184]
   35be4:	ldr	x0, [sp, #232]
   35be8:	str	x0, [sp, #192]
   35bec:	str	wzr, [sp, #200]
   35bf0:	ldr	w0, [sp, #200]
   35bf4:	cmp	w0, #0x0
   35bf8:	b.eq	35c04 <__sanitizer_set_death_callback@@Base+0x4654>  // b.none
   35bfc:	mov	w0, #0x0                   	// #0
   35c00:	b	35cf8 <__sanitizer_set_death_callback@@Base+0x4748>
   35c04:	ldr	x0, [sp, #88]
   35c08:	ldr	w1, [x0, #48]
   35c0c:	add	x0, sp, #0x90
   35c10:	bl	344d4 <__sanitizer_set_death_callback@@Base+0x2f24>
   35c14:	str	x0, [sp, #216]
   35c18:	ldr	x0, [sp, #88]
   35c1c:	ldr	w1, [x0, #48]
   35c20:	add	x0, sp, #0x90
   35c24:	bl	344d4 <__sanitizer_set_death_callback@@Base+0x2f24>
   35c28:	str	x0, [sp, #208]
   35c2c:	ldr	x0, [sp, #216]
   35c30:	cmp	x0, #0x0
   35c34:	b.ne	35c44 <__sanitizer_set_death_callback@@Base+0x4694>  // b.any
   35c38:	ldr	x0, [sp, #208]
   35c3c:	cmp	x0, #0x0
   35c40:	b.eq	35cdc <__sanitizer_set_death_callback@@Base+0x472c>  // b.none
   35c44:	ldr	x0, [sp, #88]
   35c48:	ldr	w0, [x0, #48]
   35c4c:	mov	w1, w0
   35c50:	ldr	x0, [sp, #216]
   35c54:	bl	34590 <__sanitizer_set_death_callback@@Base+0x2fe0>
   35c58:	cmp	w0, #0x0
   35c5c:	b.eq	35c6c <__sanitizer_set_death_callback@@Base+0x46bc>  // b.none
   35c60:	ldr	x0, [sp, #208]
   35c64:	str	x0, [sp, #72]
   35c68:	b	35bf0 <__sanitizer_set_death_callback@@Base+0x4640>
   35c6c:	ldr	x1, [sp, #216]
   35c70:	ldr	x0, [sp, #72]
   35c74:	add	x0, x1, x0
   35c78:	str	x0, [sp, #120]
   35c7c:	ldr	x1, [sp, #208]
   35c80:	ldr	x0, [sp, #72]
   35c84:	add	x0, x1, x0
   35c88:	str	x0, [sp, #128]
   35c8c:	ldr	x0, [sp, #88]
   35c90:	str	x0, [sp, #136]
   35c94:	add	x2, sp, #0x10
   35c98:	add	x3, sp, #0x78
   35c9c:	ldp	x0, x1, [x3]
   35ca0:	stp	x0, x1, [x2]
   35ca4:	ldr	x0, [x3, #16]
   35ca8:	str	x0, [x2, #16]
   35cac:	add	x0, sp, #0x10
   35cb0:	ldr	x5, [sp, #240]
   35cb4:	ldr	x4, [sp, #232]
   35cb8:	ldr	x3, [sp, #224]
   35cbc:	mov	x2, x0
   35cc0:	ldr	x1, [sp, #96]
   35cc4:	ldr	x0, [sp, #104]
   35cc8:	bl	35238 <__sanitizer_set_death_callback@@Base+0x3c88>
   35ccc:	cmp	w0, #0x0
   35cd0:	b.ne	35bf0 <__sanitizer_set_death_callback@@Base+0x4640>  // b.any
   35cd4:	mov	w0, #0x0                   	// #0
   35cd8:	b	35cf8 <__sanitizer_set_death_callback@@Base+0x4748>
   35cdc:	nop
   35ce0:	ldr	w0, [sp, #200]
   35ce4:	cmp	w0, #0x0
   35ce8:	b.eq	35cf4 <__sanitizer_set_death_callback@@Base+0x4744>  // b.none
   35cec:	mov	w0, #0x0                   	// #0
   35cf0:	b	35cf8 <__sanitizer_set_death_callback@@Base+0x4748>
   35cf4:	mov	w0, #0x1                   	// #1
   35cf8:	ldp	x29, x30, [sp], #224
   35cfc:	ret
   35d00:	sub	sp, sp, #0x110
   35d04:	stp	x29, x30, [sp, #48]
   35d08:	add	x29, sp, #0x30
   35d0c:	str	x0, [sp, #152]
   35d10:	str	x1, [sp, #144]
   35d14:	str	x2, [sp, #136]
   35d18:	str	x3, [sp, #128]
   35d1c:	str	x4, [sp, #120]
   35d20:	str	x5, [sp, #112]
   35d24:	str	x6, [sp, #104]
   35d28:	str	w7, [sp, #100]
   35d2c:	b	361cc <__sanitizer_set_death_callback@@Base+0x4c1c>
   35d30:	ldr	x0, [sp, #136]
   35d34:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   35d38:	str	x0, [sp, #208]
   35d3c:	ldr	x0, [sp, #208]
   35d40:	cmp	x0, #0x0
   35d44:	b.ne	35d50 <__sanitizer_set_death_callback@@Base+0x47a0>  // b.any
   35d48:	mov	w0, #0x1                   	// #1
   35d4c:	b	361e0 <__sanitizer_set_death_callback@@Base+0x4c30>
   35d50:	ldr	x0, [sp, #296]
   35d54:	add	x0, x0, #0x58
   35d58:	ldr	x3, [sp, #288]
   35d5c:	ldr	x2, [sp, #280]
   35d60:	ldr	x1, [sp, #208]
   35d64:	bl	35a58 <__sanitizer_set_death_callback@@Base+0x44a8>
   35d68:	str	x0, [sp, #200]
   35d6c:	ldr	x0, [sp, #200]
   35d70:	cmp	x0, #0x0
   35d74:	b.ne	35d80 <__sanitizer_set_death_callback@@Base+0x47d0>  // b.any
   35d78:	mov	w0, #0x0                   	// #0
   35d7c:	b	361e0 <__sanitizer_set_death_callback@@Base+0x4c30>
   35d80:	ldr	x0, [sp, #312]
   35d84:	cmp	x0, #0x0
   35d88:	b.eq	35d9c <__sanitizer_set_death_callback@@Base+0x47ec>  // b.none
   35d8c:	ldr	x0, [sp, #200]
   35d90:	ldr	w1, [x0, #8]
   35d94:	ldr	x0, [sp, #312]
   35d98:	str	w1, [x0]
   35d9c:	str	xzr, [sp, #264]
   35da0:	str	wzr, [sp, #260]
   35da4:	str	xzr, [sp, #248]
   35da8:	str	wzr, [sp, #244]
   35dac:	str	wzr, [sp, #240]
   35db0:	str	xzr, [sp, #232]
   35db4:	str	wzr, [sp, #228]
   35db8:	str	xzr, [sp, #216]
   35dbc:	b	36000 <__sanitizer_set_death_callback@@Base+0x4a50>
   35dc0:	ldr	x0, [sp, #200]
   35dc4:	ldr	x1, [x0, #24]
   35dc8:	ldr	x0, [sp, #216]
   35dcc:	lsl	x0, x0, #3
   35dd0:	add	x0, x1, x0
   35dd4:	ldr	w8, [x0, #4]
   35dd8:	ldr	x0, [sp, #296]
   35ddc:	ldr	w1, [x0, #44]
   35de0:	ldr	x0, [sp, #296]
   35de4:	ldr	w2, [x0, #40]
   35de8:	ldr	x0, [sp, #296]
   35dec:	ldr	w3, [x0, #48]
   35df0:	add	x0, sp, #0xb8
   35df4:	str	x0, [sp]
   35df8:	ldr	x7, [sp, #272]
   35dfc:	ldr	x6, [sp, #120]
   35e00:	ldr	x5, [sp, #128]
   35e04:	mov	w4, w3
   35e08:	mov	w3, w2
   35e0c:	mov	w2, w1
   35e10:	ldr	x1, [sp, #136]
   35e14:	mov	w0, w8
   35e18:	bl	3497c <__sanitizer_set_death_callback@@Base+0x33cc>
   35e1c:	cmp	w0, #0x0
   35e20:	b.ne	35e2c <__sanitizer_set_death_callback@@Base+0x487c>  // b.any
   35e24:	mov	w0, #0x0                   	// #0
   35e28:	b	361e0 <__sanitizer_set_death_callback@@Base+0x4c30>
   35e2c:	ldr	x0, [sp, #200]
   35e30:	ldr	x1, [x0, #24]
   35e34:	ldr	x0, [sp, #216]
   35e38:	lsl	x0, x0, #3
   35e3c:	add	x0, x1, x0
   35e40:	ldr	w0, [x0]
   35e44:	cmp	w0, #0x55
   35e48:	b.eq	35f00 <__sanitizer_set_death_callback@@Base+0x4950>  // b.none
   35e4c:	cmp	w0, #0x55
   35e50:	b.hi	35fc0 <__sanitizer_set_death_callback@@Base+0x4a10>  // b.pmore
   35e54:	cmp	w0, #0x1b
   35e58:	b.eq	35f94 <__sanitizer_set_death_callback@@Base+0x49e4>  // b.none
   35e5c:	cmp	w0, #0x1b
   35e60:	b.hi	35fc0 <__sanitizer_set_death_callback@@Base+0x4a10>  // b.pmore
   35e64:	cmp	w0, #0x12
   35e68:	b.eq	35eb8 <__sanitizer_set_death_callback@@Base+0x4908>  // b.none
   35e6c:	cmp	w0, #0x12
   35e70:	b.hi	35fc0 <__sanitizer_set_death_callback@@Base+0x4a10>  // b.pmore
   35e74:	cmp	w0, #0x11
   35e78:	b.eq	35e98 <__sanitizer_set_death_callback@@Base+0x48e8>  // b.none
   35e7c:	cmp	w0, #0x11
   35e80:	b.hi	35fc0 <__sanitizer_set_death_callback@@Base+0x4a10>  // b.pmore
   35e84:	cmp	w0, #0x3
   35e88:	b.eq	35f68 <__sanitizer_set_death_callback@@Base+0x49b8>  // b.none
   35e8c:	cmp	w0, #0x10
   35e90:	b.eq	35f2c <__sanitizer_set_death_callback@@Base+0x497c>  // b.none
   35e94:	b	35fc0 <__sanitizer_set_death_callback@@Base+0x4a10>
   35e98:	ldr	w0, [sp, #184]
   35e9c:	cmp	w0, #0x1
   35ea0:	b.ne	35fc8 <__sanitizer_set_death_callback@@Base+0x4a18>  // b.any
   35ea4:	ldr	x0, [sp, #192]
   35ea8:	str	x0, [sp, #264]
   35eac:	mov	w0, #0x1                   	// #1
   35eb0:	str	w0, [sp, #260]
   35eb4:	b	35fc8 <__sanitizer_set_death_callback@@Base+0x4a18>
   35eb8:	ldr	w0, [sp, #184]
   35ebc:	cmp	w0, #0x1
   35ec0:	b.ne	35ed8 <__sanitizer_set_death_callback@@Base+0x4928>  // b.any
   35ec4:	ldr	x0, [sp, #192]
   35ec8:	str	x0, [sp, #248]
   35ecc:	mov	w0, #0x1                   	// #1
   35ed0:	str	w0, [sp, #244]
   35ed4:	b	35fd0 <__sanitizer_set_death_callback@@Base+0x4a20>
   35ed8:	ldr	w0, [sp, #184]
   35edc:	cmp	w0, #0x2
   35ee0:	b.ne	35fd0 <__sanitizer_set_death_callback@@Base+0x4a20>  // b.any
   35ee4:	ldr	x0, [sp, #192]
   35ee8:	str	x0, [sp, #248]
   35eec:	mov	w0, #0x1                   	// #1
   35ef0:	str	w0, [sp, #244]
   35ef4:	mov	w0, #0x1                   	// #1
   35ef8:	str	w0, [sp, #240]
   35efc:	b	35fd0 <__sanitizer_set_death_callback@@Base+0x4a20>
   35f00:	ldr	w0, [sp, #184]
   35f04:	cmp	w0, #0x2
   35f08:	b.eq	35f18 <__sanitizer_set_death_callback@@Base+0x4968>  // b.none
   35f0c:	ldr	w0, [sp, #184]
   35f10:	cmp	w0, #0x8
   35f14:	b.ne	35fd8 <__sanitizer_set_death_callback@@Base+0x4a28>  // b.any
   35f18:	ldr	x0, [sp, #192]
   35f1c:	str	x0, [sp, #232]
   35f20:	mov	w0, #0x1                   	// #1
   35f24:	str	w0, [sp, #228]
   35f28:	b	35fd8 <__sanitizer_set_death_callback@@Base+0x4a28>
   35f2c:	ldr	x0, [sp, #200]
   35f30:	ldr	w0, [x0, #8]
   35f34:	cmp	w0, #0x11
   35f38:	b.ne	35fe0 <__sanitizer_set_death_callback@@Base+0x4a30>  // b.any
   35f3c:	ldr	w0, [sp, #184]
   35f40:	cmp	w0, #0x2
   35f44:	b.eq	35f54 <__sanitizer_set_death_callback@@Base+0x49a4>  // b.none
   35f48:	ldr	w0, [sp, #184]
   35f4c:	cmp	w0, #0x8
   35f50:	b.ne	35fe0 <__sanitizer_set_death_callback@@Base+0x4a30>  // b.any
   35f54:	ldr	x0, [sp, #192]
   35f58:	mov	x1, x0
   35f5c:	ldr	x0, [sp, #296]
   35f60:	str	x1, [x0, #56]
   35f64:	b	35fe0 <__sanitizer_set_death_callback@@Base+0x4a30>
   35f68:	ldr	x0, [sp, #200]
   35f6c:	ldr	w0, [x0, #8]
   35f70:	cmp	w0, #0x11
   35f74:	b.ne	35fe8 <__sanitizer_set_death_callback@@Base+0x4a38>  // b.any
   35f78:	ldr	w0, [sp, #184]
   35f7c:	cmp	w0, #0x4
   35f80:	b.ne	35fe8 <__sanitizer_set_death_callback@@Base+0x4a38>  // b.any
   35f84:	ldr	x1, [sp, #192]
   35f88:	ldr	x0, [sp, #296]
   35f8c:	str	x1, [x0, #64]
   35f90:	b	35fe8 <__sanitizer_set_death_callback@@Base+0x4a38>
   35f94:	ldr	x0, [sp, #200]
   35f98:	ldr	w0, [x0, #8]
   35f9c:	cmp	w0, #0x11
   35fa0:	b.ne	35ff0 <__sanitizer_set_death_callback@@Base+0x4a40>  // b.any
   35fa4:	ldr	w0, [sp, #184]
   35fa8:	cmp	w0, #0x4
   35fac:	b.ne	35ff0 <__sanitizer_set_death_callback@@Base+0x4a40>  // b.any
   35fb0:	ldr	x1, [sp, #192]
   35fb4:	ldr	x0, [sp, #296]
   35fb8:	str	x1, [x0, #72]
   35fbc:	b	35ff0 <__sanitizer_set_death_callback@@Base+0x4a40>
   35fc0:	nop
   35fc4:	b	35ff4 <__sanitizer_set_death_callback@@Base+0x4a44>
   35fc8:	nop
   35fcc:	b	35ff4 <__sanitizer_set_death_callback@@Base+0x4a44>
   35fd0:	nop
   35fd4:	b	35ff4 <__sanitizer_set_death_callback@@Base+0x4a44>
   35fd8:	nop
   35fdc:	b	35ff4 <__sanitizer_set_death_callback@@Base+0x4a44>
   35fe0:	nop
   35fe4:	b	35ff4 <__sanitizer_set_death_callback@@Base+0x4a44>
   35fe8:	nop
   35fec:	b	35ff4 <__sanitizer_set_death_callback@@Base+0x4a44>
   35ff0:	nop
   35ff4:	ldr	x0, [sp, #216]
   35ff8:	add	x0, x0, #0x1
   35ffc:	str	x0, [sp, #216]
   36000:	ldr	x0, [sp, #200]
   36004:	ldr	x0, [x0, #16]
   36008:	ldr	x1, [sp, #216]
   3600c:	cmp	x1, x0
   36010:	b.cc	35dc0 <__sanitizer_set_death_callback@@Base+0x4810>  // b.lo, b.ul, b.last
   36014:	ldr	x0, [sp, #200]
   36018:	ldr	w0, [x0, #8]
   3601c:	cmp	w0, #0x11
   36020:	b.eq	36034 <__sanitizer_set_death_callback@@Base+0x4a84>  // b.none
   36024:	ldr	x0, [sp, #200]
   36028:	ldr	w0, [x0, #8]
   3602c:	cmp	w0, #0x2e
   36030:	b.ne	3615c <__sanitizer_set_death_callback@@Base+0x4bac>  // b.any
   36034:	ldr	w0, [sp, #228]
   36038:	cmp	w0, #0x0
   3603c:	b.eq	3608c <__sanitizer_set_death_callback@@Base+0x4adc>  // b.none
   36040:	ldr	x0, [sp, #304]
   36044:	str	x0, [sp, #16]
   36048:	ldr	x0, [sp, #288]
   3604c:	str	x0, [sp, #8]
   36050:	ldr	x0, [sp, #280]
   36054:	str	x0, [sp]
   36058:	ldr	x7, [sp, #104]
   3605c:	ldr	x6, [sp, #112]
   36060:	ldr	w5, [sp, #100]
   36064:	ldr	x4, [sp, #264]
   36068:	ldr	x3, [sp, #232]
   3606c:	ldr	x2, [sp, #296]
   36070:	ldr	x1, [sp, #144]
   36074:	ldr	x0, [sp, #152]
   36078:	bl	35b48 <__sanitizer_set_death_callback@@Base+0x4598>
   3607c:	cmp	w0, #0x0
   36080:	b.ne	36120 <__sanitizer_set_death_callback@@Base+0x4b70>  // b.any
   36084:	mov	w0, #0x0                   	// #0
   36088:	b	361e0 <__sanitizer_set_death_callback@@Base+0x4c30>
   3608c:	ldr	w0, [sp, #260]
   36090:	cmp	w0, #0x0
   36094:	b.eq	36120 <__sanitizer_set_death_callback@@Base+0x4b70>  // b.none
   36098:	ldr	w0, [sp, #244]
   3609c:	cmp	w0, #0x0
   360a0:	b.eq	36120 <__sanitizer_set_death_callback@@Base+0x4b70>  // b.none
   360a4:	ldr	w0, [sp, #240]
   360a8:	cmp	w0, #0x0
   360ac:	b.eq	360c0 <__sanitizer_set_death_callback@@Base+0x4b10>  // b.none
   360b0:	ldr	x1, [sp, #248]
   360b4:	ldr	x0, [sp, #264]
   360b8:	add	x0, x1, x0
   360bc:	str	x0, [sp, #248]
   360c0:	ldr	x0, [sp, #264]
   360c4:	str	x0, [sp, #160]
   360c8:	ldr	x0, [sp, #248]
   360cc:	str	x0, [sp, #168]
   360d0:	ldr	x0, [sp, #296]
   360d4:	str	x0, [sp, #176]
   360d8:	add	x2, sp, #0x40
   360dc:	add	x3, sp, #0xa0
   360e0:	ldp	x0, x1, [x3]
   360e4:	stp	x0, x1, [x2]
   360e8:	ldr	x0, [x3, #16]
   360ec:	str	x0, [x2, #16]
   360f0:	add	x0, sp, #0x40
   360f4:	ldr	x5, [sp, #304]
   360f8:	ldr	x4, [sp, #288]
   360fc:	ldr	x3, [sp, #280]
   36100:	mov	x2, x0
   36104:	ldr	x1, [sp, #144]
   36108:	ldr	x0, [sp, #152]
   3610c:	bl	35238 <__sanitizer_set_death_callback@@Base+0x3c88>
   36110:	cmp	w0, #0x0
   36114:	b.ne	36120 <__sanitizer_set_death_callback@@Base+0x4b70>  // b.any
   36118:	mov	w0, #0x0                   	// #0
   3611c:	b	361e0 <__sanitizer_set_death_callback@@Base+0x4c30>
   36120:	ldr	x0, [sp, #200]
   36124:	ldr	w0, [x0, #8]
   36128:	cmp	w0, #0x11
   3612c:	b.ne	3615c <__sanitizer_set_death_callback@@Base+0x4bac>  // b.any
   36130:	ldr	w0, [sp, #228]
   36134:	cmp	w0, #0x0
   36138:	b.ne	36154 <__sanitizer_set_death_callback@@Base+0x4ba4>  // b.any
   3613c:	ldr	w0, [sp, #260]
   36140:	cmp	w0, #0x0
   36144:	b.eq	3615c <__sanitizer_set_death_callback@@Base+0x4bac>  // b.none
   36148:	ldr	w0, [sp, #244]
   3614c:	cmp	w0, #0x0
   36150:	b.eq	3615c <__sanitizer_set_death_callback@@Base+0x4bac>  // b.none
   36154:	mov	w0, #0x1                   	// #1
   36158:	b	361e0 <__sanitizer_set_death_callback@@Base+0x4c30>
   3615c:	ldr	x0, [sp, #200]
   36160:	ldr	w0, [x0, #12]
   36164:	cmp	w0, #0x0
   36168:	b.eq	361cc <__sanitizer_set_death_callback@@Base+0x4c1c>  // b.none
   3616c:	str	xzr, [sp, #40]
   36170:	ldr	x0, [sp, #304]
   36174:	str	x0, [sp, #32]
   36178:	ldr	x0, [sp, #296]
   3617c:	str	x0, [sp, #24]
   36180:	ldr	x0, [sp, #288]
   36184:	str	x0, [sp, #16]
   36188:	ldr	x0, [sp, #280]
   3618c:	str	x0, [sp, #8]
   36190:	ldr	x0, [sp, #272]
   36194:	str	x0, [sp]
   36198:	ldr	w7, [sp, #100]
   3619c:	ldr	x6, [sp, #104]
   361a0:	ldr	x5, [sp, #112]
   361a4:	ldr	x4, [sp, #120]
   361a8:	ldr	x3, [sp, #128]
   361ac:	ldr	x2, [sp, #136]
   361b0:	ldr	x1, [sp, #144]
   361b4:	ldr	x0, [sp, #152]
   361b8:	bl	35d00 <__sanitizer_set_death_callback@@Base+0x4750>
   361bc:	cmp	w0, #0x0
   361c0:	b.ne	361cc <__sanitizer_set_death_callback@@Base+0x4c1c>  // b.any
   361c4:	mov	w0, #0x0                   	// #0
   361c8:	b	361e0 <__sanitizer_set_death_callback@@Base+0x4c30>
   361cc:	ldr	x0, [sp, #136]
   361d0:	ldr	x0, [x0, #24]
   361d4:	cmp	x0, #0x0
   361d8:	b.ne	35d30 <__sanitizer_set_death_callback@@Base+0x4780>  // b.any
   361dc:	mov	w0, #0x1                   	// #1
   361e0:	ldp	x29, x30, [sp, #48]
   361e4:	add	sp, sp, #0x110
   361e8:	ret
   361ec:	sub	sp, sp, #0x170
   361f0:	stp	x29, x30, [sp, #48]
   361f4:	add	x29, sp, #0x30
   361f8:	str	x0, [sp, #120]
   361fc:	str	x1, [sp, #112]
   36200:	str	x2, [sp, #104]
   36204:	str	x3, [sp, #96]
   36208:	str	x4, [sp, #88]
   3620c:	str	x5, [sp, #80]
   36210:	str	x6, [sp, #72]
   36214:	str	x7, [sp, #64]
   36218:	str	xzr, [sp, #344]
   3621c:	ldr	x0, [sp, #416]
   36220:	mov	x2, #0x18                  	// #24
   36224:	mov	w1, #0x0                   	// #0
   36228:	bl	6770 <__asan_internal_memset@plt>
   3622c:	ldr	x0, [sp, #424]
   36230:	mov	x2, #0x18                  	// #24
   36234:	mov	w1, #0x0                   	// #0
   36238:	bl	6770 <__asan_internal_memset@plt>
   3623c:	ldr	x0, [sp, #416]
   36240:	str	xzr, [x0, #24]
   36244:	ldr	x0, [sp, #424]
   36248:	str	xzr, [x0, #24]
   3624c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   36250:	add	x0, x0, #0x2b0
   36254:	str	x0, [sp, #224]
   36258:	ldr	x0, [sp, #104]
   3625c:	str	x0, [sp, #232]
   36260:	ldr	x0, [sp, #104]
   36264:	str	x0, [sp, #240]
   36268:	ldr	x0, [sp, #96]
   3626c:	str	x0, [sp, #248]
   36270:	ldr	w0, [sp, #384]
   36274:	str	w0, [sp, #256]
   36278:	ldr	x0, [sp, #400]
   3627c:	str	x0, [sp, #264]
   36280:	ldr	x0, [sp, #408]
   36284:	str	x0, [sp, #272]
   36288:	str	wzr, [sp, #280]
   3628c:	add	x0, sp, #0xc8
   36290:	mov	x2, #0x18                  	// #24
   36294:	mov	w1, #0x0                   	// #0
   36298:	bl	6770 <__asan_internal_memset@plt>
   3629c:	str	xzr, [sp, #360]
   362a0:	b	36560 <__sanitizer_set_death_callback@@Base+0x4fb0>
   362a4:	ldr	w0, [sp, #280]
   362a8:	cmp	w0, #0x0
   362ac:	b.ne	365a8 <__sanitizer_set_death_callback@@Base+0x4ff8>  // b.any
   362b0:	ldr	x0, [sp, #240]
   362b4:	str	x0, [sp, #336]
   362b8:	add	x1, sp, #0xc4
   362bc:	add	x0, sp, #0xe0
   362c0:	bl	3484c <__sanitizer_set_death_callback@@Base+0x329c>
   362c4:	str	x0, [sp, #328]
   362c8:	add	x0, sp, #0x80
   362cc:	add	x1, sp, #0xe0
   362d0:	ldp	x2, x3, [x1]
   362d4:	stp	x2, x3, [x0]
   362d8:	ldp	x2, x3, [x1, #16]
   362dc:	stp	x2, x3, [x0, #16]
   362e0:	ldp	x2, x3, [x1, #32]
   362e4:	stp	x2, x3, [x0, #32]
   362e8:	ldp	x2, x3, [x1, #48]
   362ec:	stp	x2, x3, [x0, #48]
   362f0:	ldr	x0, [sp, #328]
   362f4:	str	x0, [sp, #152]
   362f8:	add	x0, sp, #0xe0
   362fc:	ldr	x1, [sp, #328]
   36300:	bl	33ff8 <__sanitizer_set_death_callback@@Base+0x2a48>
   36304:	cmp	w0, #0x0
   36308:	b.eq	365b0 <__sanitizer_set_death_callback@@Base+0x5000>  // b.none
   3630c:	add	x0, sp, #0x80
   36310:	bl	34160 <__sanitizer_set_death_callback@@Base+0x2bb0>
   36314:	and	w0, w0, #0xffff
   36318:	str	w0, [sp, #324]
   3631c:	ldr	w0, [sp, #324]
   36320:	cmp	w0, #0x1
   36324:	b.le	36334 <__sanitizer_set_death_callback@@Base+0x4d84>
   36328:	ldr	w0, [sp, #324]
   3632c:	cmp	w0, #0x4
   36330:	b.le	3634c <__sanitizer_set_death_callback@@Base+0x4d9c>
   36334:	add	x2, sp, #0x80
   36338:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   3633c:	add	x1, x0, #0x2c0
   36340:	mov	x0, x2
   36344:	bl	33f1c <__sanitizer_set_death_callback@@Base+0x296c>
   36348:	b	365e4 <__sanitizer_set_death_callback@@Base+0x5034>
   3634c:	add	x0, sp, #0xc8
   36350:	mov	x4, x0
   36354:	ldr	x3, [sp, #408]
   36358:	ldr	x2, [sp, #400]
   3635c:	mov	x1, #0x8                   	// #8
   36360:	ldr	x0, [sp, #120]
   36364:	bl	6750 <__asan_backtrace_vector_grow@plt>
   36368:	str	x0, [sp, #312]
   3636c:	ldr	x0, [sp, #312]
   36370:	cmp	x0, #0x0
   36374:	b.eq	365b8 <__sanitizer_set_death_callback@@Base+0x5008>  // b.none
   36378:	ldr	x3, [sp, #408]
   3637c:	ldr	x2, [sp, #400]
   36380:	mov	x1, #0x88                  	// #136
   36384:	ldr	x0, [sp, #120]
   36388:	bl	67f0 <__asan_backtrace_alloc@plt>
   3638c:	str	x0, [sp, #304]
   36390:	ldr	x0, [sp, #304]
   36394:	cmp	x0, #0x0
   36398:	b.eq	365c0 <__sanitizer_set_death_callback@@Base+0x5010>  // b.none
   3639c:	ldr	x0, [sp, #312]
   363a0:	ldr	x1, [sp, #304]
   363a4:	str	x1, [x0]
   363a8:	ldr	x0, [sp, #360]
   363ac:	add	x0, x0, #0x1
   363b0:	str	x0, [sp, #360]
   363b4:	ldr	x0, [sp, #304]
   363b8:	add	x0, x0, #0x58
   363bc:	mov	x2, #0x10                  	// #16
   363c0:	mov	w1, #0x0                   	// #0
   363c4:	bl	6770 <__asan_internal_memset@plt>
   363c8:	ldr	w1, [sp, #196]
   363cc:	add	x0, sp, #0x80
   363d0:	bl	34498 <__sanitizer_set_death_callback@@Base+0x2ee8>
   363d4:	str	x0, [sp, #296]
   363d8:	ldr	x0, [sp, #304]
   363dc:	add	x0, x0, #0x58
   363e0:	mov	x7, x0
   363e4:	ldr	x6, [sp, #408]
   363e8:	ldr	x5, [sp, #400]
   363ec:	ldr	w4, [sp, #384]
   363f0:	ldr	x3, [sp, #80]
   363f4:	ldr	x2, [sp, #88]
   363f8:	ldr	x1, [sp, #296]
   363fc:	ldr	x0, [sp, #120]
   36400:	bl	35678 <__sanitizer_set_death_callback@@Base+0x40c8>
   36404:	cmp	w0, #0x0
   36408:	b.eq	365c8 <__sanitizer_set_death_callback@@Base+0x5018>  // b.none
   3640c:	add	x0, sp, #0x80
   36410:	bl	340c4 <__sanitizer_set_death_callback@@Base+0x2b14>
   36414:	and	w0, w0, #0xff
   36418:	str	w0, [sp, #292]
   3641c:	ldr	x0, [sp, #304]
   36420:	ldr	x1, [sp, #344]
   36424:	str	x1, [x0, #24]
   36428:	ldr	w0, [sp, #196]
   3642c:	cmp	w0, #0x0
   36430:	b.eq	3643c <__sanitizer_set_death_callback@@Base+0x4e8c>  // b.none
   36434:	mov	x0, #0xc                   	// #12
   36438:	b	36440 <__sanitizer_set_death_callback@@Base+0x4e90>
   3643c:	mov	x0, #0x4                   	// #4
   36440:	ldr	x1, [sp, #328]
   36444:	add	x0, x0, x1
   36448:	ldr	x1, [sp, #344]
   3644c:	add	x0, x1, x0
   36450:	str	x0, [sp, #344]
   36454:	ldr	x0, [sp, #304]
   36458:	ldr	x1, [sp, #344]
   3645c:	str	x1, [x0, #32]
   36460:	ldr	x1, [sp, #144]
   36464:	ldr	x0, [sp, #304]
   36468:	str	x1, [x0]
   3646c:	ldr	x1, [sp, #152]
   36470:	ldr	x0, [sp, #304]
   36474:	str	x1, [x0, #8]
   36478:	ldr	x1, [sp, #144]
   3647c:	ldr	x0, [sp, #336]
   36480:	sub	x0, x1, x0
   36484:	mov	x1, x0
   36488:	ldr	x0, [sp, #304]
   3648c:	str	x1, [x0, #16]
   36490:	ldr	x0, [sp, #304]
   36494:	ldr	w1, [sp, #324]
   36498:	str	w1, [x0, #40]
   3649c:	ldr	w1, [sp, #196]
   364a0:	ldr	x0, [sp, #304]
   364a4:	str	w1, [x0, #44]
   364a8:	ldr	x0, [sp, #304]
   364ac:	ldr	w1, [sp, #292]
   364b0:	str	w1, [x0, #48]
   364b4:	ldr	x0, [sp, #304]
   364b8:	str	xzr, [x0, #64]
   364bc:	ldr	x0, [sp, #304]
   364c0:	str	xzr, [x0, #72]
   364c4:	ldr	x0, [sp, #304]
   364c8:	str	xzr, [x0, #80]
   364cc:	ldr	x0, [sp, #304]
   364d0:	str	xzr, [x0, #56]
   364d4:	ldr	x0, [sp, #304]
   364d8:	str	xzr, [x0, #104]
   364dc:	ldr	x0, [sp, #304]
   364e0:	str	xzr, [x0, #112]
   364e4:	ldr	x0, [sp, #304]
   364e8:	str	xzr, [x0, #120]
   364ec:	ldr	x0, [sp, #304]
   364f0:	str	xzr, [x0, #128]
   364f4:	add	x1, sp, #0x80
   364f8:	add	x0, sp, #0xc0
   364fc:	str	x0, [sp, #40]
   36500:	ldr	x0, [sp, #416]
   36504:	str	x0, [sp, #32]
   36508:	ldr	x0, [sp, #304]
   3650c:	str	x0, [sp, #24]
   36510:	ldr	x0, [sp, #408]
   36514:	str	x0, [sp, #16]
   36518:	ldr	x0, [sp, #400]
   3651c:	str	x0, [sp, #8]
   36520:	ldr	x0, [sp, #392]
   36524:	str	x0, [sp]
   36528:	ldr	w7, [sp, #384]
   3652c:	ldr	x6, [sp, #64]
   36530:	ldr	x5, [sp, #72]
   36534:	ldr	x4, [sp, #376]
   36538:	ldr	x3, [sp, #368]
   3653c:	mov	x2, x1
   36540:	ldr	x1, [sp, #112]
   36544:	ldr	x0, [sp, #120]
   36548:	bl	35d00 <__sanitizer_set_death_callback@@Base+0x4750>
   3654c:	cmp	w0, #0x0
   36550:	b.eq	365d0 <__sanitizer_set_death_callback@@Base+0x5020>  // b.none
   36554:	ldr	w0, [sp, #184]
   36558:	cmp	w0, #0x0
   3655c:	b.ne	365d8 <__sanitizer_set_death_callback@@Base+0x5028>  // b.any
   36560:	ldr	x0, [sp, #248]
   36564:	cmp	x0, #0x0
   36568:	b.ne	362a4 <__sanitizer_set_death_callback@@Base+0x4cf4>  // b.any
   3656c:	ldr	w0, [sp, #280]
   36570:	cmp	w0, #0x0
   36574:	b.ne	365e0 <__sanitizer_set_death_callback@@Base+0x5030>  // b.any
   36578:	ldr	x0, [sp, #424]
   3657c:	mov	x3, x0
   36580:	add	x2, sp, #0xc8
   36584:	ldp	x0, x1, [x2]
   36588:	stp	x0, x1, [x3]
   3658c:	ldr	x0, [x2, #16]
   36590:	str	x0, [x3, #16]
   36594:	ldr	x0, [sp, #424]
   36598:	ldr	x1, [sp, #360]
   3659c:	str	x1, [x0, #24]
   365a0:	mov	w0, #0x1                   	// #1
   365a4:	b	366c0 <__sanitizer_set_death_callback@@Base+0x5110>
   365a8:	nop
   365ac:	b	365e4 <__sanitizer_set_death_callback@@Base+0x5034>
   365b0:	nop
   365b4:	b	365e4 <__sanitizer_set_death_callback@@Base+0x5034>
   365b8:	nop
   365bc:	b	365e4 <__sanitizer_set_death_callback@@Base+0x5034>
   365c0:	nop
   365c4:	b	365e4 <__sanitizer_set_death_callback@@Base+0x5034>
   365c8:	nop
   365cc:	b	365e4 <__sanitizer_set_death_callback@@Base+0x5034>
   365d0:	nop
   365d4:	b	365e4 <__sanitizer_set_death_callback@@Base+0x5034>
   365d8:	nop
   365dc:	b	365e4 <__sanitizer_set_death_callback@@Base+0x5034>
   365e0:	nop
   365e4:	ldr	x0, [sp, #360]
   365e8:	cmp	x0, #0x0
   365ec:	b.eq	3668c <__sanitizer_set_death_callback@@Base+0x50dc>  // b.none
   365f0:	ldr	x0, [sp, #200]
   365f4:	str	x0, [sp, #312]
   365f8:	str	xzr, [sp, #352]
   365fc:	b	36664 <__sanitizer_set_death_callback@@Base+0x50b4>
   36600:	ldr	x0, [sp, #352]
   36604:	lsl	x0, x0, #3
   36608:	ldr	x1, [sp, #312]
   3660c:	add	x0, x1, x0
   36610:	ldr	x0, [x0]
   36614:	add	x0, x0, #0x58
   36618:	ldr	x3, [sp, #408]
   3661c:	ldr	x2, [sp, #400]
   36620:	mov	x1, x0
   36624:	ldr	x0, [sp, #120]
   36628:	bl	348ac <__sanitizer_set_death_callback@@Base+0x32fc>
   3662c:	ldr	x0, [sp, #352]
   36630:	lsl	x0, x0, #3
   36634:	ldr	x1, [sp, #312]
   36638:	add	x0, x1, x0
   3663c:	ldr	x0, [x0]
   36640:	ldr	x4, [sp, #408]
   36644:	ldr	x3, [sp, #400]
   36648:	mov	x2, #0x88                  	// #136
   3664c:	mov	x1, x0
   36650:	ldr	x0, [sp, #120]
   36654:	bl	6ac0 <__asan_backtrace_free@plt>
   36658:	ldr	x0, [sp, #352]
   3665c:	add	x0, x0, #0x1
   36660:	str	x0, [sp, #352]
   36664:	ldr	x1, [sp, #352]
   36668:	ldr	x0, [sp, #360]
   3666c:	cmp	x1, x0
   36670:	b.cc	36600 <__sanitizer_set_death_callback@@Base+0x5050>  // b.lo, b.ul, b.last
   36674:	add	x0, sp, #0xc8
   36678:	ldr	x3, [sp, #408]
   3667c:	ldr	x2, [sp, #400]
   36680:	mov	x1, x0
   36684:	ldr	x0, [sp, #120]
   36688:	bl	33ec0 <__sanitizer_set_death_callback@@Base+0x2910>
   3668c:	ldr	x0, [sp, #416]
   36690:	ldr	x0, [x0, #24]
   36694:	cmp	x0, #0x0
   36698:	b.eq	366bc <__sanitizer_set_death_callback@@Base+0x510c>  // b.none
   3669c:	ldr	x0, [sp, #416]
   366a0:	ldr	x3, [sp, #408]
   366a4:	ldr	x2, [sp, #400]
   366a8:	mov	x1, x0
   366ac:	ldr	x0, [sp, #120]
   366b0:	bl	33ec0 <__sanitizer_set_death_callback@@Base+0x2910>
   366b4:	ldr	x0, [sp, #416]
   366b8:	str	xzr, [x0, #24]
   366bc:	mov	w0, #0x0                   	// #0
   366c0:	ldp	x29, x30, [sp, #48]
   366c4:	add	sp, sp, #0x170
   366c8:	ret
   366cc:	stp	x29, x30, [sp, #-96]!
   366d0:	mov	x29, sp
   366d4:	str	x0, [sp, #72]
   366d8:	str	x1, [sp, #64]
   366dc:	str	x2, [sp, #56]
   366e0:	str	x3, [sp, #48]
   366e4:	str	w4, [sp, #44]
   366e8:	str	x5, [sp, #32]
   366ec:	str	x6, [sp, #24]
   366f0:	str	x7, [sp, #16]
   366f4:	ldr	x0, [sp, #16]
   366f8:	ldr	x0, [x0, #24]
   366fc:	cmp	x0, #0x0
   36700:	b.eq	36774 <__sanitizer_set_death_callback@@Base+0x51c4>  // b.none
   36704:	ldr	x0, [sp, #16]
   36708:	ldr	x2, [x0]
   3670c:	ldr	x0, [sp, #16]
   36710:	ldr	x1, [x0, #24]
   36714:	mov	x0, x1
   36718:	lsl	x0, x0, #1
   3671c:	add	x0, x0, x1
   36720:	lsl	x0, x0, #3
   36724:	sub	x0, x0, #0x18
   36728:	add	x0, x2, x0
   3672c:	str	x0, [sp, #88]
   36730:	ldr	x0, [sp, #88]
   36734:	ldr	x0, [x0]
   36738:	ldr	x1, [sp, #56]
   3673c:	cmp	x1, x0
   36740:	b.ne	36774 <__sanitizer_set_death_callback@@Base+0x51c4>  // b.any
   36744:	ldr	x0, [sp, #88]
   36748:	ldr	x0, [x0, #8]
   3674c:	ldr	x1, [sp, #48]
   36750:	cmp	x1, x0
   36754:	b.ne	36774 <__sanitizer_set_death_callback@@Base+0x51c4>  // b.any
   36758:	ldr	x0, [sp, #88]
   3675c:	ldr	w0, [x0, #16]
   36760:	ldr	w1, [sp, #44]
   36764:	cmp	w1, w0
   36768:	b.ne	36774 <__sanitizer_set_death_callback@@Base+0x51c4>  // b.any
   3676c:	mov	w0, #0x1                   	// #1
   36770:	b	36804 <__sanitizer_set_death_callback@@Base+0x5254>
   36774:	ldr	x0, [sp, #16]
   36778:	mov	x4, x0
   3677c:	ldr	x3, [sp, #24]
   36780:	ldr	x2, [sp, #32]
   36784:	mov	x1, #0x18                  	// #24
   36788:	ldr	x0, [sp, #72]
   3678c:	bl	6750 <__asan_backtrace_vector_grow@plt>
   36790:	str	x0, [sp, #88]
   36794:	ldr	x0, [sp, #88]
   36798:	cmp	x0, #0x0
   3679c:	b.ne	367a8 <__sanitizer_set_death_callback@@Base+0x51f8>  // b.any
   367a0:	mov	w0, #0x0                   	// #0
   367a4:	b	36804 <__sanitizer_set_death_callback@@Base+0x5254>
   367a8:	ldr	x0, [sp, #64]
   367ac:	ldr	x1, [x0, #16]
   367b0:	ldr	x0, [sp, #56]
   367b4:	add	x1, x1, x0
   367b8:	ldr	x0, [sp, #88]
   367bc:	str	x1, [x0]
   367c0:	ldr	x0, [sp, #88]
   367c4:	ldr	x1, [sp, #48]
   367c8:	str	x1, [x0, #8]
   367cc:	ldr	x0, [sp, #88]
   367d0:	ldr	w1, [sp, #44]
   367d4:	str	w1, [x0, #16]
   367d8:	ldr	x0, [sp, #16]
   367dc:	ldr	x0, [x0, #24]
   367e0:	mov	w1, w0
   367e4:	ldr	x0, [sp, #88]
   367e8:	str	w1, [x0, #20]
   367ec:	ldr	x0, [sp, #16]
   367f0:	ldr	x0, [x0, #24]
   367f4:	add	x1, x0, #0x1
   367f8:	ldr	x0, [sp, #16]
   367fc:	str	x1, [x0, #24]
   36800:	mov	w0, #0x1                   	// #1
   36804:	ldp	x29, x30, [sp], #96
   36808:	ret
   3680c:	stp	x29, x30, [sp, #-48]!
   36810:	mov	x29, sp
   36814:	str	x0, [sp, #40]
   36818:	str	x1, [sp, #32]
   3681c:	str	x2, [sp, #24]
   36820:	str	x3, [sp, #16]
   36824:	ldr	x0, [sp, #32]
   36828:	ldr	x0, [x0, #32]
   3682c:	cmp	x0, #0x0
   36830:	b.eq	3685c <__sanitizer_set_death_callback@@Base+0x52ac>  // b.none
   36834:	ldr	x0, [sp, #32]
   36838:	ldr	x1, [x0, #40]
   3683c:	ldr	x0, [sp, #32]
   36840:	ldr	x0, [x0, #32]
   36844:	lsl	x0, x0, #3
   36848:	ldr	x4, [sp, #16]
   3684c:	ldr	x3, [sp, #24]
   36850:	mov	x2, x0
   36854:	ldr	x0, [sp, #40]
   36858:	bl	6ac0 <__asan_backtrace_free@plt>
   3685c:	ldr	x0, [sp, #32]
   36860:	ldr	x1, [x0, #56]
   36864:	ldr	x0, [sp, #32]
   36868:	ldr	x0, [x0, #48]
   3686c:	lsl	x0, x0, #3
   36870:	ldr	x4, [sp, #16]
   36874:	ldr	x3, [sp, #24]
   36878:	mov	x2, x0
   3687c:	ldr	x0, [sp, #40]
   36880:	bl	6ac0 <__asan_backtrace_free@plt>
   36884:	nop
   36888:	ldp	x29, x30, [sp], #48
   3688c:	ret
   36890:	stp	x29, x30, [sp, #-224]!
   36894:	mov	x29, sp
   36898:	str	x19, [sp, #16]
   3689c:	str	x0, [sp, #72]
   368a0:	str	x1, [sp, #64]
   368a4:	str	w2, [sp, #60]
   368a8:	str	x3, [sp, #48]
   368ac:	str	x4, [sp, #40]
   368b0:	ldr	x0, [sp, #48]
   368b4:	bl	34160 <__sanitizer_set_death_callback@@Base+0x2bb0>
   368b8:	and	w0, w0, #0xffff
   368bc:	mov	w1, w0
   368c0:	ldr	x0, [sp, #40]
   368c4:	str	w1, [x0]
   368c8:	ldr	x0, [sp, #40]
   368cc:	ldr	w0, [x0]
   368d0:	cmp	w0, #0x1
   368d4:	b.le	368e8 <__sanitizer_set_death_callback@@Base+0x5338>
   368d8:	ldr	x0, [sp, #40]
   368dc:	ldr	w0, [x0]
   368e0:	cmp	w0, #0x4
   368e4:	b.le	36900 <__sanitizer_set_death_callback@@Base+0x5350>
   368e8:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   368ec:	add	x1, x0, #0x2e0
   368f0:	ldr	x0, [sp, #48]
   368f4:	bl	33f1c <__sanitizer_set_death_callback@@Base+0x296c>
   368f8:	mov	w0, #0x0                   	// #0
   368fc:	b	36ed0 <__sanitizer_set_death_callback@@Base+0x5920>
   36900:	ldr	w1, [sp, #60]
   36904:	ldr	x0, [sp, #48]
   36908:	bl	34498 <__sanitizer_set_death_callback@@Base+0x2ee8>
   3690c:	str	x0, [sp, #192]
   36910:	ldr	x1, [sp, #48]
   36914:	add	x0, sp, #0x50
   36918:	ldp	x2, x3, [x1]
   3691c:	stp	x2, x3, [x0]
   36920:	ldp	x2, x3, [x1, #16]
   36924:	stp	x2, x3, [x0, #16]
   36928:	ldp	x2, x3, [x1, #32]
   3692c:	stp	x2, x3, [x0, #32]
   36930:	ldp	x2, x3, [x1, #48]
   36934:	stp	x2, x3, [x0, #48]
   36938:	ldr	x0, [sp, #192]
   3693c:	str	x0, [sp, #104]
   36940:	ldr	x1, [sp, #192]
   36944:	ldr	x0, [sp, #48]
   36948:	bl	33ff8 <__sanitizer_set_death_callback@@Base+0x2a48>
   3694c:	cmp	w0, #0x0
   36950:	b.ne	3695c <__sanitizer_set_death_callback@@Base+0x53ac>  // b.any
   36954:	mov	w0, #0x0                   	// #0
   36958:	b	36ed0 <__sanitizer_set_death_callback@@Base+0x5920>
   3695c:	add	x0, sp, #0x50
   36960:	bl	340c4 <__sanitizer_set_death_callback@@Base+0x2b14>
   36964:	and	w0, w0, #0xff
   36968:	mov	w1, w0
   3696c:	ldr	x0, [sp, #40]
   36970:	str	w1, [x0, #4]
   36974:	ldr	x0, [sp, #40]
   36978:	ldr	w0, [x0]
   3697c:	cmp	w0, #0x3
   36980:	b.gt	36994 <__sanitizer_set_death_callback@@Base+0x53e4>
   36984:	ldr	x0, [sp, #40]
   36988:	mov	w1, #0x1                   	// #1
   3698c:	str	w1, [x0, #8]
   36990:	b	369ac <__sanitizer_set_death_callback@@Base+0x53fc>
   36994:	add	x0, sp, #0x50
   36998:	bl	340c4 <__sanitizer_set_death_callback@@Base+0x2b14>
   3699c:	and	w0, w0, #0xff
   369a0:	mov	w1, w0
   369a4:	ldr	x0, [sp, #40]
   369a8:	str	w1, [x0, #8]
   369ac:	add	x0, sp, #0x50
   369b0:	bl	340c4 <__sanitizer_set_death_callback@@Base+0x2b14>
   369b4:	add	x0, sp, #0x50
   369b8:	bl	34108 <__sanitizer_set_death_callback@@Base+0x2b58>
   369bc:	sxtb	w0, w0
   369c0:	mov	w1, w0
   369c4:	ldr	x0, [sp, #40]
   369c8:	str	w1, [x0, #12]
   369cc:	add	x0, sp, #0x50
   369d0:	bl	340c4 <__sanitizer_set_death_callback@@Base+0x2b14>
   369d4:	and	w0, w0, #0xff
   369d8:	mov	w1, w0
   369dc:	ldr	x0, [sp, #40]
   369e0:	str	w1, [x0, #16]
   369e4:	add	x0, sp, #0x50
   369e8:	bl	340c4 <__sanitizer_set_death_callback@@Base+0x2b14>
   369ec:	and	w0, w0, #0xff
   369f0:	mov	w1, w0
   369f4:	ldr	x0, [sp, #40]
   369f8:	str	w1, [x0, #20]
   369fc:	ldr	x1, [sp, #96]
   36a00:	ldr	x0, [sp, #40]
   36a04:	str	x1, [x0, #24]
   36a08:	ldr	x0, [sp, #40]
   36a0c:	ldr	w0, [x0, #20]
   36a10:	sub	w0, w0, #0x1
   36a14:	mov	w1, w0
   36a18:	add	x0, sp, #0x50
   36a1c:	bl	33ff8 <__sanitizer_set_death_callback@@Base+0x2a48>
   36a20:	cmp	w0, #0x0
   36a24:	b.ne	36a30 <__sanitizer_set_death_callback@@Base+0x5480>  // b.any
   36a28:	mov	w0, #0x0                   	// #0
   36a2c:	b	36ed0 <__sanitizer_set_death_callback@@Base+0x5920>
   36a30:	ldr	x0, [sp, #40]
   36a34:	str	xzr, [x0, #32]
   36a38:	ldr	x0, [sp, #96]
   36a3c:	str	x0, [sp, #216]
   36a40:	ldr	x0, [sp, #104]
   36a44:	ldr	x1, [sp, #216]
   36a48:	add	x0, x1, x0
   36a4c:	str	x0, [sp, #184]
   36a50:	b	36a90 <__sanitizer_set_death_callback@@Base+0x54e0>
   36a54:	ldr	x1, [sp, #184]
   36a58:	ldr	x0, [sp, #216]
   36a5c:	sub	x0, x1, x0
   36a60:	mov	x1, x0
   36a64:	ldr	x0, [sp, #216]
   36a68:	bl	6a40 <__asan_internal_strnlen@plt>
   36a6c:	add	x0, x0, #0x1
   36a70:	ldr	x1, [sp, #216]
   36a74:	add	x0, x1, x0
   36a78:	str	x0, [sp, #216]
   36a7c:	ldr	x0, [sp, #40]
   36a80:	ldr	x0, [x0, #32]
   36a84:	add	x1, x0, #0x1
   36a88:	ldr	x0, [sp, #40]
   36a8c:	str	x1, [x0, #32]
   36a90:	ldr	x1, [sp, #216]
   36a94:	ldr	x0, [sp, #184]
   36a98:	cmp	x1, x0
   36a9c:	b.cs	36ab0 <__sanitizer_set_death_callback@@Base+0x5500>  // b.hs, b.nlast
   36aa0:	ldr	x0, [sp, #216]
   36aa4:	ldrb	w0, [x0]
   36aa8:	cmp	w0, #0x0
   36aac:	b.ne	36a54 <__sanitizer_set_death_callback@@Base+0x54a4>  // b.any
   36ab0:	ldr	x0, [sp, #40]
   36ab4:	str	xzr, [x0, #40]
   36ab8:	ldr	x0, [sp, #40]
   36abc:	ldr	x0, [x0, #32]
   36ac0:	cmp	x0, #0x0
   36ac4:	b.eq	36b14 <__sanitizer_set_death_callback@@Base+0x5564>  // b.none
   36ac8:	ldr	x0, [sp, #40]
   36acc:	ldr	x0, [x0, #32]
   36ad0:	lsl	x1, x0, #3
   36ad4:	ldr	x0, [sp, #48]
   36ad8:	ldr	x2, [x0, #40]
   36adc:	ldr	x0, [sp, #48]
   36ae0:	ldr	x0, [x0, #48]
   36ae4:	mov	x3, x0
   36ae8:	ldr	x0, [sp, #72]
   36aec:	bl	67f0 <__asan_backtrace_alloc@plt>
   36af0:	mov	x1, x0
   36af4:	ldr	x0, [sp, #40]
   36af8:	str	x1, [x0, #40]
   36afc:	ldr	x0, [sp, #40]
   36b00:	ldr	x0, [x0, #40]
   36b04:	cmp	x0, #0x0
   36b08:	b.ne	36b14 <__sanitizer_set_death_callback@@Base+0x5564>  // b.any
   36b0c:	mov	w0, #0x0                   	// #0
   36b10:	b	36ed0 <__sanitizer_set_death_callback@@Base+0x5920>
   36b14:	str	xzr, [sp, #208]
   36b18:	b	36b84 <__sanitizer_set_death_callback@@Base+0x55d4>
   36b1c:	ldr	w0, [sp, #136]
   36b20:	cmp	w0, #0x0
   36b24:	b.eq	36b30 <__sanitizer_set_death_callback@@Base+0x5580>  // b.none
   36b28:	mov	w0, #0x0                   	// #0
   36b2c:	b	36ed0 <__sanitizer_set_death_callback@@Base+0x5920>
   36b30:	ldr	x0, [sp, #40]
   36b34:	ldr	x1, [x0, #40]
   36b38:	ldr	x0, [sp, #208]
   36b3c:	lsl	x0, x0, #3
   36b40:	add	x19, x1, x0
   36b44:	add	x0, sp, #0x50
   36b48:	bl	34060 <__sanitizer_set_death_callback@@Base+0x2ab0>
   36b4c:	str	x0, [x19]
   36b50:	ldr	x0, [sp, #40]
   36b54:	ldr	x1, [x0, #40]
   36b58:	ldr	x0, [sp, #208]
   36b5c:	lsl	x0, x0, #3
   36b60:	add	x0, x1, x0
   36b64:	ldr	x0, [x0]
   36b68:	cmp	x0, #0x0
   36b6c:	b.ne	36b78 <__sanitizer_set_death_callback@@Base+0x55c8>  // b.any
   36b70:	mov	w0, #0x0                   	// #0
   36b74:	b	36ed0 <__sanitizer_set_death_callback@@Base+0x5920>
   36b78:	ldr	x0, [sp, #208]
   36b7c:	add	x0, x0, #0x1
   36b80:	str	x0, [sp, #208]
   36b84:	ldr	x0, [sp, #96]
   36b88:	ldrb	w0, [x0]
   36b8c:	cmp	w0, #0x0
   36b90:	b.ne	36b1c <__sanitizer_set_death_callback@@Base+0x556c>  // b.any
   36b94:	add	x0, sp, #0x50
   36b98:	mov	x1, #0x1                   	// #1
   36b9c:	bl	33ff8 <__sanitizer_set_death_callback@@Base+0x2a48>
   36ba0:	cmp	w0, #0x0
   36ba4:	b.ne	36bb0 <__sanitizer_set_death_callback@@Base+0x5600>  // b.any
   36ba8:	mov	w0, #0x0                   	// #0
   36bac:	b	36ed0 <__sanitizer_set_death_callback@@Base+0x5920>
   36bb0:	ldr	x0, [sp, #40]
   36bb4:	str	xzr, [x0, #48]
   36bb8:	ldr	x0, [sp, #96]
   36bbc:	str	x0, [sp, #216]
   36bc0:	ldr	x0, [sp, #104]
   36bc4:	ldr	x1, [sp, #216]
   36bc8:	add	x0, x1, x0
   36bcc:	str	x0, [sp, #184]
   36bd0:	b	36c58 <__sanitizer_set_death_callback@@Base+0x56a8>
   36bd4:	ldr	x1, [sp, #184]
   36bd8:	ldr	x0, [sp, #216]
   36bdc:	sub	x0, x1, x0
   36be0:	mov	x1, x0
   36be4:	ldr	x0, [sp, #216]
   36be8:	bl	6a40 <__asan_internal_strnlen@plt>
   36bec:	add	x0, x0, #0x1
   36bf0:	ldr	x1, [sp, #216]
   36bf4:	add	x0, x1, x0
   36bf8:	str	x0, [sp, #216]
   36bfc:	ldr	x0, [sp, #216]
   36c00:	bl	34800 <__sanitizer_set_death_callback@@Base+0x3250>
   36c04:	mov	x1, x0
   36c08:	ldr	x0, [sp, #216]
   36c0c:	add	x0, x0, x1
   36c10:	str	x0, [sp, #216]
   36c14:	ldr	x0, [sp, #216]
   36c18:	bl	34800 <__sanitizer_set_death_callback@@Base+0x3250>
   36c1c:	mov	x1, x0
   36c20:	ldr	x0, [sp, #216]
   36c24:	add	x0, x0, x1
   36c28:	str	x0, [sp, #216]
   36c2c:	ldr	x0, [sp, #216]
   36c30:	bl	34800 <__sanitizer_set_death_callback@@Base+0x3250>
   36c34:	mov	x1, x0
   36c38:	ldr	x0, [sp, #216]
   36c3c:	add	x0, x0, x1
   36c40:	str	x0, [sp, #216]
   36c44:	ldr	x0, [sp, #40]
   36c48:	ldr	x0, [x0, #48]
   36c4c:	add	x1, x0, #0x1
   36c50:	ldr	x0, [sp, #40]
   36c54:	str	x1, [x0, #48]
   36c58:	ldr	x1, [sp, #216]
   36c5c:	ldr	x0, [sp, #184]
   36c60:	cmp	x1, x0
   36c64:	b.cs	36c78 <__sanitizer_set_death_callback@@Base+0x56c8>  // b.hs, b.nlast
   36c68:	ldr	x0, [sp, #216]
   36c6c:	ldrb	w0, [x0]
   36c70:	cmp	w0, #0x0
   36c74:	b.ne	36bd4 <__sanitizer_set_death_callback@@Base+0x5624>  // b.any
   36c78:	ldr	x0, [sp, #40]
   36c7c:	ldr	x0, [x0, #48]
   36c80:	lsl	x1, x0, #3
   36c84:	ldr	x0, [sp, #48]
   36c88:	ldr	x2, [x0, #40]
   36c8c:	ldr	x0, [sp, #48]
   36c90:	ldr	x0, [x0, #48]
   36c94:	mov	x3, x0
   36c98:	ldr	x0, [sp, #72]
   36c9c:	bl	67f0 <__asan_backtrace_alloc@plt>
   36ca0:	mov	x1, x0
   36ca4:	ldr	x0, [sp, #40]
   36ca8:	str	x1, [x0, #56]
   36cac:	ldr	x0, [sp, #40]
   36cb0:	ldr	x0, [x0, #56]
   36cb4:	cmp	x0, #0x0
   36cb8:	b.ne	36cc4 <__sanitizer_set_death_callback@@Base+0x5714>  // b.any
   36cbc:	mov	w0, #0x0                   	// #0
   36cc0:	b	36ed0 <__sanitizer_set_death_callback@@Base+0x5920>
   36cc4:	str	xzr, [sp, #208]
   36cc8:	b	36ea8 <__sanitizer_set_death_callback@@Base+0x58f8>
   36ccc:	ldr	w0, [sp, #136]
   36cd0:	cmp	w0, #0x0
   36cd4:	b.eq	36ce0 <__sanitizer_set_death_callback@@Base+0x5730>  // b.none
   36cd8:	mov	w0, #0x0                   	// #0
   36cdc:	b	36ed0 <__sanitizer_set_death_callback@@Base+0x5920>
   36ce0:	add	x0, sp, #0x50
   36ce4:	bl	34060 <__sanitizer_set_death_callback@@Base+0x2ab0>
   36ce8:	str	x0, [sp, #176]
   36cec:	ldr	x0, [sp, #176]
   36cf0:	cmp	x0, #0x0
   36cf4:	b.ne	36d00 <__sanitizer_set_death_callback@@Base+0x5750>  // b.any
   36cf8:	mov	w0, #0x0                   	// #0
   36cfc:	b	36ed0 <__sanitizer_set_death_callback@@Base+0x5920>
   36d00:	add	x0, sp, #0x50
   36d04:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   36d08:	str	x0, [sp, #168]
   36d0c:	ldr	x0, [sp, #176]
   36d10:	ldrb	w0, [x0]
   36d14:	cmp	w0, #0x2f
   36d18:	b.eq	36d38 <__sanitizer_set_death_callback@@Base+0x5788>  // b.none
   36d1c:	ldr	x0, [sp, #168]
   36d20:	cmp	x0, #0x0
   36d24:	b.ne	36d58 <__sanitizer_set_death_callback@@Base+0x57a8>  // b.any
   36d28:	ldr	x0, [sp, #64]
   36d2c:	ldr	x0, [x0, #72]
   36d30:	cmp	x0, #0x0
   36d34:	b.ne	36d58 <__sanitizer_set_death_callback@@Base+0x57a8>  // b.any
   36d38:	ldr	x0, [sp, #40]
   36d3c:	ldr	x1, [x0, #56]
   36d40:	ldr	x0, [sp, #208]
   36d44:	lsl	x0, x0, #3
   36d48:	add	x0, x1, x0
   36d4c:	ldr	x1, [sp, #176]
   36d50:	str	x1, [x0]
   36d54:	b	36e8c <__sanitizer_set_death_callback@@Base+0x58dc>
   36d58:	ldr	x0, [sp, #168]
   36d5c:	cmp	x0, #0x0
   36d60:	b.ne	36d74 <__sanitizer_set_death_callback@@Base+0x57c4>  // b.any
   36d64:	ldr	x0, [sp, #64]
   36d68:	ldr	x0, [x0, #72]
   36d6c:	str	x0, [sp, #200]
   36d70:	b	36dc8 <__sanitizer_set_death_callback@@Base+0x5818>
   36d74:	ldr	x0, [sp, #168]
   36d78:	sub	x1, x0, #0x1
   36d7c:	ldr	x0, [sp, #40]
   36d80:	ldr	x0, [x0, #32]
   36d84:	cmp	x1, x0
   36d88:	b.cs	36db0 <__sanitizer_set_death_callback@@Base+0x5800>  // b.hs, b.nlast
   36d8c:	ldr	x0, [sp, #40]
   36d90:	ldr	x1, [x0, #40]
   36d94:	ldr	x0, [sp, #168]
   36d98:	lsl	x0, x0, #3
   36d9c:	sub	x0, x0, #0x8
   36da0:	add	x0, x1, x0
   36da4:	ldr	x0, [x0]
   36da8:	str	x0, [sp, #200]
   36dac:	b	36dc8 <__sanitizer_set_death_callback@@Base+0x5818>
   36db0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   36db4:	add	x1, x0, #0x300
   36db8:	ldr	x0, [sp, #48]
   36dbc:	bl	33f1c <__sanitizer_set_death_callback@@Base+0x296c>
   36dc0:	mov	w0, #0x0                   	// #0
   36dc4:	b	36ed0 <__sanitizer_set_death_callback@@Base+0x5920>
   36dc8:	ldr	x0, [sp, #200]
   36dcc:	bl	66e0 <__asan_internal_strlen@plt>
   36dd0:	str	x0, [sp, #160]
   36dd4:	ldr	x0, [sp, #176]
   36dd8:	bl	66e0 <__asan_internal_strlen@plt>
   36ddc:	str	x0, [sp, #152]
   36de0:	ldr	x1, [sp, #160]
   36de4:	ldr	x0, [sp, #152]
   36de8:	add	x0, x1, x0
   36dec:	add	x1, x0, #0x2
   36df0:	ldr	x0, [sp, #48]
   36df4:	ldr	x2, [x0, #40]
   36df8:	ldr	x0, [sp, #48]
   36dfc:	ldr	x0, [x0, #48]
   36e00:	mov	x3, x0
   36e04:	ldr	x0, [sp, #72]
   36e08:	bl	67f0 <__asan_backtrace_alloc@plt>
   36e0c:	str	x0, [sp, #144]
   36e10:	ldr	x0, [sp, #144]
   36e14:	cmp	x0, #0x0
   36e18:	b.ne	36e24 <__sanitizer_set_death_callback@@Base+0x5874>  // b.any
   36e1c:	mov	w0, #0x0                   	// #0
   36e20:	b	36ed0 <__sanitizer_set_death_callback@@Base+0x5920>
   36e24:	ldr	x2, [sp, #160]
   36e28:	ldr	x1, [sp, #200]
   36e2c:	ldr	x0, [sp, #144]
   36e30:	bl	66d0 <__asan_internal_memcpy@plt>
   36e34:	ldr	x1, [sp, #144]
   36e38:	ldr	x0, [sp, #160]
   36e3c:	add	x0, x1, x0
   36e40:	mov	w1, #0x2f                  	// #47
   36e44:	strb	w1, [x0]
   36e48:	ldr	x0, [sp, #160]
   36e4c:	add	x0, x0, #0x1
   36e50:	ldr	x1, [sp, #144]
   36e54:	add	x3, x1, x0
   36e58:	ldr	x0, [sp, #152]
   36e5c:	add	x0, x0, #0x1
   36e60:	mov	x2, x0
   36e64:	ldr	x1, [sp, #176]
   36e68:	mov	x0, x3
   36e6c:	bl	66d0 <__asan_internal_memcpy@plt>
   36e70:	ldr	x0, [sp, #40]
   36e74:	ldr	x1, [x0, #56]
   36e78:	ldr	x0, [sp, #208]
   36e7c:	lsl	x0, x0, #3
   36e80:	add	x0, x1, x0
   36e84:	ldr	x1, [sp, #144]
   36e88:	str	x1, [x0]
   36e8c:	add	x0, sp, #0x50
   36e90:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   36e94:	add	x0, sp, #0x50
   36e98:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   36e9c:	ldr	x0, [sp, #208]
   36ea0:	add	x0, x0, #0x1
   36ea4:	str	x0, [sp, #208]
   36ea8:	ldr	x0, [sp, #96]
   36eac:	ldrb	w0, [x0]
   36eb0:	cmp	w0, #0x0
   36eb4:	b.ne	36ccc <__sanitizer_set_death_callback@@Base+0x571c>  // b.any
   36eb8:	ldr	w0, [sp, #136]
   36ebc:	cmp	w0, #0x0
   36ec0:	b.eq	36ecc <__sanitizer_set_death_callback@@Base+0x591c>  // b.none
   36ec4:	mov	w0, #0x0                   	// #0
   36ec8:	b	36ed0 <__sanitizer_set_death_callback@@Base+0x5920>
   36ecc:	mov	w0, #0x1                   	// #1
   36ed0:	ldr	x19, [sp, #16]
   36ed4:	ldp	x29, x30, [sp], #224
   36ed8:	ret
   36edc:	stp	x29, x30, [sp, #-208]!
   36ee0:	mov	x29, sp
   36ee4:	str	x0, [sp, #56]
   36ee8:	str	x1, [sp, #48]
   36eec:	str	x2, [sp, #40]
   36ef0:	str	x3, [sp, #32]
   36ef4:	str	x4, [sp, #24]
   36ef8:	str	x5, [sp, #16]
   36efc:	str	xzr, [sp, #200]
   36f00:	str	wzr, [sp, #196]
   36f04:	ldr	x0, [sp, #32]
   36f08:	ldr	x0, [x0, #48]
   36f0c:	cmp	x0, #0x0
   36f10:	b.eq	36f28 <__sanitizer_set_death_callback@@Base+0x5978>  // b.none
   36f14:	ldr	x0, [sp, #32]
   36f18:	ldr	x0, [x0, #56]
   36f1c:	ldr	x0, [x0]
   36f20:	str	x0, [sp, #184]
   36f24:	b	36f34 <__sanitizer_set_death_callback@@Base+0x5984>
   36f28:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   36f2c:	add	x0, x0, #0x338
   36f30:	str	x0, [sp, #184]
   36f34:	ldr	x0, [sp, #184]
   36f38:	str	x0, [sp, #176]
   36f3c:	mov	w0, #0x1                   	// #1
   36f40:	str	w0, [sp, #172]
   36f44:	b	37610 <__sanitizer_set_death_callback@@Base+0x6060>
   36f48:	ldr	x0, [sp, #24]
   36f4c:	bl	340c4 <__sanitizer_set_death_callback@@Base+0x2b14>
   36f50:	and	w0, w0, #0xff
   36f54:	str	w0, [sp, #152]
   36f58:	ldr	x0, [sp, #32]
   36f5c:	ldr	w0, [x0, #20]
   36f60:	ldr	w1, [sp, #152]
   36f64:	cmp	w1, w0
   36f68:	b.cc	37054 <__sanitizer_set_death_callback@@Base+0x5aa4>  // b.lo, b.ul, b.last
   36f6c:	ldr	x0, [sp, #32]
   36f70:	ldr	w0, [x0, #20]
   36f74:	ldr	w1, [sp, #152]
   36f78:	sub	w0, w1, w0
   36f7c:	str	w0, [sp, #152]
   36f80:	ldr	x0, [sp, #32]
   36f84:	ldr	w0, [x0, #16]
   36f88:	ldr	w1, [sp, #152]
   36f8c:	udiv	w0, w1, w0
   36f90:	str	w0, [sp, #76]
   36f94:	ldr	x0, [sp, #32]
   36f98:	ldr	w1, [x0, #4]
   36f9c:	ldr	w2, [sp, #196]
   36fa0:	ldr	w0, [sp, #76]
   36fa4:	add	w0, w2, w0
   36fa8:	mul	w1, w1, w0
   36fac:	ldr	x0, [sp, #32]
   36fb0:	ldr	w0, [x0, #8]
   36fb4:	udiv	w0, w1, w0
   36fb8:	mov	w0, w0
   36fbc:	ldr	x1, [sp, #200]
   36fc0:	add	x0, x1, x0
   36fc4:	str	x0, [sp, #200]
   36fc8:	ldr	w1, [sp, #196]
   36fcc:	ldr	w0, [sp, #76]
   36fd0:	add	w0, w1, w0
   36fd4:	ldr	x1, [sp, #32]
   36fd8:	ldr	w1, [x1, #8]
   36fdc:	udiv	w2, w0, w1
   36fe0:	mul	w1, w2, w1
   36fe4:	sub	w0, w0, w1
   36fe8:	str	w0, [sp, #196]
   36fec:	ldr	x0, [sp, #32]
   36ff0:	ldr	w2, [x0, #12]
   36ff4:	ldr	x0, [sp, #32]
   36ff8:	ldr	w1, [x0, #16]
   36ffc:	ldr	w0, [sp, #152]
   37000:	udiv	w3, w0, w1
   37004:	mul	w1, w3, w1
   37008:	sub	w0, w0, w1
   3700c:	add	w0, w2, w0
   37010:	ldr	w1, [sp, #172]
   37014:	add	w0, w1, w0
   37018:	str	w0, [sp, #172]
   3701c:	ldr	x0, [sp, #24]
   37020:	ldr	x1, [x0, #40]
   37024:	ldr	x0, [sp, #24]
   37028:	ldr	x0, [x0, #48]
   3702c:	ldr	x7, [sp, #16]
   37030:	mov	x6, x0
   37034:	mov	x5, x1
   37038:	ldr	w4, [sp, #172]
   3703c:	ldr	x3, [sp, #176]
   37040:	ldr	x2, [sp, #200]
   37044:	ldr	x1, [sp, #48]
   37048:	ldr	x0, [sp, #56]
   3704c:	bl	366cc <__sanitizer_set_death_callback@@Base+0x511c>
   37050:	b	37610 <__sanitizer_set_death_callback@@Base+0x6060>
   37054:	ldr	w0, [sp, #152]
   37058:	cmp	w0, #0x0
   3705c:	b.ne	372bc <__sanitizer_set_death_callback@@Base+0x5d0c>  // b.any
   37060:	ldr	x0, [sp, #24]
   37064:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   37068:	str	x0, [sp, #120]
   3706c:	ldr	x0, [sp, #24]
   37070:	bl	340c4 <__sanitizer_set_death_callback@@Base+0x2b14>
   37074:	and	w0, w0, #0xff
   37078:	str	w0, [sp, #152]
   3707c:	ldr	w0, [sp, #152]
   37080:	cmp	w0, #0x4
   37084:	b.eq	37284 <__sanitizer_set_death_callback@@Base+0x5cd4>  // b.none
   37088:	ldr	w0, [sp, #152]
   3708c:	cmp	w0, #0x4
   37090:	b.hi	37290 <__sanitizer_set_death_callback@@Base+0x5ce0>  // b.pmore
   37094:	ldr	w0, [sp, #152]
   37098:	cmp	w0, #0x3
   3709c:	b.eq	37100 <__sanitizer_set_death_callback@@Base+0x5b50>  // b.none
   370a0:	ldr	w0, [sp, #152]
   370a4:	cmp	w0, #0x3
   370a8:	b.hi	37290 <__sanitizer_set_death_callback@@Base+0x5ce0>  // b.pmore
   370ac:	ldr	w0, [sp, #152]
   370b0:	cmp	w0, #0x1
   370b4:	b.eq	370c8 <__sanitizer_set_death_callback@@Base+0x5b18>  // b.none
   370b8:	ldr	w0, [sp, #152]
   370bc:	cmp	w0, #0x2
   370c0:	b.eq	370e4 <__sanitizer_set_death_callback@@Base+0x5b34>  // b.none
   370c4:	b	37290 <__sanitizer_set_death_callback@@Base+0x5ce0>
   370c8:	str	xzr, [sp, #200]
   370cc:	str	wzr, [sp, #196]
   370d0:	ldr	x0, [sp, #184]
   370d4:	str	x0, [sp, #176]
   370d8:	mov	w0, #0x1                   	// #1
   370dc:	str	w0, [sp, #172]
   370e0:	b	37610 <__sanitizer_set_death_callback@@Base+0x6060>
   370e4:	ldr	x0, [sp, #40]
   370e8:	ldr	w0, [x0, #48]
   370ec:	mov	w1, w0
   370f0:	ldr	x0, [sp, #24]
   370f4:	bl	344d4 <__sanitizer_set_death_callback@@Base+0x2f24>
   370f8:	str	x0, [sp, #200]
   370fc:	b	37610 <__sanitizer_set_death_callback@@Base+0x6060>
   37100:	ldr	x0, [sp, #24]
   37104:	bl	34060 <__sanitizer_set_death_callback@@Base+0x2ab0>
   37108:	str	x0, [sp, #112]
   3710c:	ldr	x0, [sp, #112]
   37110:	cmp	x0, #0x0
   37114:	b.ne	37120 <__sanitizer_set_death_callback@@Base+0x5b70>  // b.any
   37118:	mov	w0, #0x0                   	// #0
   3711c:	b	37624 <__sanitizer_set_death_callback@@Base+0x6074>
   37120:	ldr	x0, [sp, #24]
   37124:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   37128:	str	w0, [sp, #108]
   3712c:	ldr	x0, [sp, #24]
   37130:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   37134:	ldr	x0, [sp, #24]
   37138:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   3713c:	ldr	x0, [sp, #112]
   37140:	ldrb	w0, [x0]
   37144:	cmp	w0, #0x2f
   37148:	b.ne	37158 <__sanitizer_set_death_callback@@Base+0x5ba8>  // b.any
   3714c:	ldr	x0, [sp, #112]
   37150:	str	x0, [sp, #176]
   37154:	b	37610 <__sanitizer_set_death_callback@@Base+0x6060>
   37158:	ldr	w0, [sp, #108]
   3715c:	cmp	w0, #0x0
   37160:	b.ne	37174 <__sanitizer_set_death_callback@@Base+0x5bc4>  // b.any
   37164:	ldr	x0, [sp, #40]
   37168:	ldr	x0, [x0, #72]
   3716c:	str	x0, [sp, #160]
   37170:	b	371d0 <__sanitizer_set_death_callback@@Base+0x5c20>
   37174:	ldr	w0, [sp, #108]
   37178:	sub	w0, w0, #0x1
   3717c:	mov	w1, w0
   37180:	ldr	x0, [sp, #32]
   37184:	ldr	x0, [x0, #32]
   37188:	cmp	x1, x0
   3718c:	b.cs	371b8 <__sanitizer_set_death_callback@@Base+0x5c08>  // b.hs, b.nlast
   37190:	ldr	x0, [sp, #32]
   37194:	ldr	x1, [x0, #40]
   37198:	ldr	w0, [sp, #108]
   3719c:	sub	w0, w0, #0x1
   371a0:	mov	w0, w0
   371a4:	lsl	x0, x0, #3
   371a8:	add	x0, x1, x0
   371ac:	ldr	x0, [x0]
   371b0:	str	x0, [sp, #160]
   371b4:	b	371d0 <__sanitizer_set_death_callback@@Base+0x5c20>
   371b8:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   371bc:	add	x1, x0, #0x340
   371c0:	ldr	x0, [sp, #24]
   371c4:	bl	33f1c <__sanitizer_set_death_callback@@Base+0x296c>
   371c8:	mov	w0, #0x0                   	// #0
   371cc:	b	37624 <__sanitizer_set_death_callback@@Base+0x6074>
   371d0:	ldr	x0, [sp, #160]
   371d4:	bl	66e0 <__asan_internal_strlen@plt>
   371d8:	str	x0, [sp, #96]
   371dc:	ldr	x0, [sp, #112]
   371e0:	bl	66e0 <__asan_internal_strlen@plt>
   371e4:	str	x0, [sp, #88]
   371e8:	ldr	x1, [sp, #96]
   371ec:	ldr	x0, [sp, #88]
   371f0:	add	x0, x1, x0
   371f4:	add	x1, x0, #0x2
   371f8:	ldr	x0, [sp, #24]
   371fc:	ldr	x2, [x0, #40]
   37200:	ldr	x0, [sp, #24]
   37204:	ldr	x0, [x0, #48]
   37208:	mov	x3, x0
   3720c:	ldr	x0, [sp, #56]
   37210:	bl	67f0 <__asan_backtrace_alloc@plt>
   37214:	str	x0, [sp, #80]
   37218:	ldr	x0, [sp, #80]
   3721c:	cmp	x0, #0x0
   37220:	b.ne	3722c <__sanitizer_set_death_callback@@Base+0x5c7c>  // b.any
   37224:	mov	w0, #0x0                   	// #0
   37228:	b	37624 <__sanitizer_set_death_callback@@Base+0x6074>
   3722c:	ldr	x2, [sp, #96]
   37230:	ldr	x1, [sp, #160]
   37234:	ldr	x0, [sp, #80]
   37238:	bl	66d0 <__asan_internal_memcpy@plt>
   3723c:	ldr	x1, [sp, #80]
   37240:	ldr	x0, [sp, #96]
   37244:	add	x0, x1, x0
   37248:	mov	w1, #0x2f                  	// #47
   3724c:	strb	w1, [x0]
   37250:	ldr	x0, [sp, #96]
   37254:	add	x0, x0, #0x1
   37258:	ldr	x1, [sp, #80]
   3725c:	add	x3, x1, x0
   37260:	ldr	x0, [sp, #88]
   37264:	add	x0, x0, #0x1
   37268:	mov	x2, x0
   3726c:	ldr	x1, [sp, #112]
   37270:	mov	x0, x3
   37274:	bl	66d0 <__asan_internal_memcpy@plt>
   37278:	ldr	x0, [sp, #80]
   3727c:	str	x0, [sp, #176]
   37280:	b	37610 <__sanitizer_set_death_callback@@Base+0x6060>
   37284:	ldr	x0, [sp, #24]
   37288:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   3728c:	b	37610 <__sanitizer_set_death_callback@@Base+0x6060>
   37290:	ldr	x0, [sp, #120]
   37294:	sub	x0, x0, #0x1
   37298:	mov	x1, x0
   3729c:	ldr	x0, [sp, #24]
   372a0:	bl	33ff8 <__sanitizer_set_death_callback@@Base+0x2a48>
   372a4:	cmp	w0, #0x0
   372a8:	b.ne	372b4 <__sanitizer_set_death_callback@@Base+0x5d04>  // b.any
   372ac:	mov	w0, #0x0                   	// #0
   372b0:	b	37624 <__sanitizer_set_death_callback@@Base+0x6074>
   372b4:	nop
   372b8:	b	37610 <__sanitizer_set_death_callback@@Base+0x6060>
   372bc:	ldr	w0, [sp, #152]
   372c0:	cmp	w0, #0xc
   372c4:	b.eq	375bc <__sanitizer_set_death_callback@@Base+0x600c>  // b.none
   372c8:	ldr	w0, [sp, #152]
   372cc:	cmp	w0, #0xc
   372d0:	b.hi	375c8 <__sanitizer_set_death_callback@@Base+0x6018>  // b.pmore
   372d4:	ldr	w0, [sp, #152]
   372d8:	cmp	w0, #0xb
   372dc:	b.eq	37610 <__sanitizer_set_death_callback@@Base+0x6060>  // b.none
   372e0:	ldr	w0, [sp, #152]
   372e4:	cmp	w0, #0xb
   372e8:	b.hi	375c8 <__sanitizer_set_death_callback@@Base+0x6018>  // b.pmore
   372ec:	ldr	w0, [sp, #152]
   372f0:	cmp	w0, #0xa
   372f4:	b.eq	37610 <__sanitizer_set_death_callback@@Base+0x6060>  // b.none
   372f8:	ldr	w0, [sp, #152]
   372fc:	cmp	w0, #0xa
   37300:	b.hi	375c8 <__sanitizer_set_death_callback@@Base+0x6018>  // b.pmore
   37304:	ldr	w0, [sp, #152]
   37308:	cmp	w0, #0x9
   3730c:	b.eq	37598 <__sanitizer_set_death_callback@@Base+0x5fe8>  // b.none
   37310:	ldr	w0, [sp, #152]
   37314:	cmp	w0, #0x9
   37318:	b.hi	375c8 <__sanitizer_set_death_callback@@Base+0x6018>  // b.pmore
   3731c:	ldr	w0, [sp, #152]
   37320:	cmp	w0, #0x8
   37324:	b.eq	37514 <__sanitizer_set_death_callback@@Base+0x5f64>  // b.none
   37328:	ldr	w0, [sp, #152]
   3732c:	cmp	w0, #0x8
   37330:	b.hi	375c8 <__sanitizer_set_death_callback@@Base+0x6018>  // b.pmore
   37334:	ldr	w0, [sp, #152]
   37338:	cmp	w0, #0x7
   3733c:	b.eq	37610 <__sanitizer_set_death_callback@@Base+0x6060>  // b.none
   37340:	ldr	w0, [sp, #152]
   37344:	cmp	w0, #0x7
   37348:	b.hi	375c8 <__sanitizer_set_death_callback@@Base+0x6018>  // b.pmore
   3734c:	ldr	w0, [sp, #152]
   37350:	cmp	w0, #0x6
   37354:	b.eq	37610 <__sanitizer_set_death_callback@@Base+0x6060>  // b.none
   37358:	ldr	w0, [sp, #152]
   3735c:	cmp	w0, #0x6
   37360:	b.hi	375c8 <__sanitizer_set_death_callback@@Base+0x6018>  // b.pmore
   37364:	ldr	w0, [sp, #152]
   37368:	cmp	w0, #0x5
   3736c:	b.eq	37508 <__sanitizer_set_death_callback@@Base+0x5f58>  // b.none
   37370:	ldr	w0, [sp, #152]
   37374:	cmp	w0, #0x5
   37378:	b.hi	375c8 <__sanitizer_set_death_callback@@Base+0x6018>  // b.pmore
   3737c:	ldr	w0, [sp, #152]
   37380:	cmp	w0, #0x4
   37384:	b.eq	3748c <__sanitizer_set_death_callback@@Base+0x5edc>  // b.none
   37388:	ldr	w0, [sp, #152]
   3738c:	cmp	w0, #0x4
   37390:	b.hi	375c8 <__sanitizer_set_death_callback@@Base+0x6018>  // b.pmore
   37394:	ldr	w0, [sp, #152]
   37398:	cmp	w0, #0x3
   3739c:	b.eq	37470 <__sanitizer_set_death_callback@@Base+0x5ec0>  // b.none
   373a0:	ldr	w0, [sp, #152]
   373a4:	cmp	w0, #0x3
   373a8:	b.hi	375c8 <__sanitizer_set_death_callback@@Base+0x6018>  // b.pmore
   373ac:	ldr	w0, [sp, #152]
   373b0:	cmp	w0, #0x1
   373b4:	b.eq	373c8 <__sanitizer_set_death_callback@@Base+0x5e18>  // b.none
   373b8:	ldr	w0, [sp, #152]
   373bc:	cmp	w0, #0x2
   373c0:	b.eq	37400 <__sanitizer_set_death_callback@@Base+0x5e50>  // b.none
   373c4:	b	375c8 <__sanitizer_set_death_callback@@Base+0x6018>
   373c8:	ldr	x0, [sp, #24]
   373cc:	ldr	x1, [x0, #40]
   373d0:	ldr	x0, [sp, #24]
   373d4:	ldr	x0, [x0, #48]
   373d8:	ldr	x7, [sp, #16]
   373dc:	mov	x6, x0
   373e0:	mov	x5, x1
   373e4:	ldr	w4, [sp, #172]
   373e8:	ldr	x3, [sp, #176]
   373ec:	ldr	x2, [sp, #200]
   373f0:	ldr	x1, [sp, #48]
   373f4:	ldr	x0, [sp, #56]
   373f8:	bl	366cc <__sanitizer_set_death_callback@@Base+0x511c>
   373fc:	b	37610 <__sanitizer_set_death_callback@@Base+0x6060>
   37400:	ldr	x0, [sp, #24]
   37404:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   37408:	str	x0, [sp, #128]
   3740c:	ldr	x0, [sp, #32]
   37410:	ldr	w0, [x0, #4]
   37414:	mov	w1, w0
   37418:	ldr	w2, [sp, #196]
   3741c:	ldr	x0, [sp, #128]
   37420:	add	x0, x2, x0
   37424:	mul	x1, x1, x0
   37428:	ldr	x0, [sp, #32]
   3742c:	ldr	w0, [x0, #8]
   37430:	mov	w0, w0
   37434:	udiv	x0, x1, x0
   37438:	ldr	x1, [sp, #200]
   3743c:	add	x0, x1, x0
   37440:	str	x0, [sp, #200]
   37444:	ldr	w1, [sp, #196]
   37448:	ldr	x0, [sp, #128]
   3744c:	add	x0, x1, x0
   37450:	ldr	x1, [sp, #32]
   37454:	ldr	w1, [x1, #8]
   37458:	mov	w1, w1
   3745c:	udiv	x2, x0, x1
   37460:	mul	x1, x2, x1
   37464:	sub	x0, x0, x1
   37468:	str	w0, [sp, #196]
   3746c:	b	37610 <__sanitizer_set_death_callback@@Base+0x6060>
   37470:	ldr	x0, [sp, #24]
   37474:	bl	3470c <__sanitizer_set_death_callback@@Base+0x315c>
   37478:	mov	w1, w0
   3747c:	ldr	w0, [sp, #172]
   37480:	add	w0, w0, w1
   37484:	str	w0, [sp, #172]
   37488:	b	37610 <__sanitizer_set_death_callback@@Base+0x6060>
   3748c:	ldr	x0, [sp, #24]
   37490:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   37494:	str	x0, [sp, #136]
   37498:	ldr	x0, [sp, #136]
   3749c:	cmp	x0, #0x0
   374a0:	b.ne	374b4 <__sanitizer_set_death_callback@@Base+0x5f04>  // b.any
   374a4:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   374a8:	add	x0, x0, #0x338
   374ac:	str	x0, [sp, #176]
   374b0:	b	37610 <__sanitizer_set_death_callback@@Base+0x6060>
   374b4:	ldr	x0, [sp, #136]
   374b8:	sub	x1, x0, #0x1
   374bc:	ldr	x0, [sp, #32]
   374c0:	ldr	x0, [x0, #48]
   374c4:	cmp	x1, x0
   374c8:	b.cc	374e4 <__sanitizer_set_death_callback@@Base+0x5f34>  // b.lo, b.ul, b.last
   374cc:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   374d0:	add	x1, x0, #0x370
   374d4:	ldr	x0, [sp, #24]
   374d8:	bl	33f1c <__sanitizer_set_death_callback@@Base+0x296c>
   374dc:	mov	w0, #0x0                   	// #0
   374e0:	b	37624 <__sanitizer_set_death_callback@@Base+0x6074>
   374e4:	ldr	x0, [sp, #32]
   374e8:	ldr	x1, [x0, #56]
   374ec:	ldr	x0, [sp, #136]
   374f0:	lsl	x0, x0, #3
   374f4:	sub	x0, x0, #0x8
   374f8:	add	x0, x1, x0
   374fc:	ldr	x0, [x0]
   37500:	str	x0, [sp, #176]
   37504:	b	37610 <__sanitizer_set_death_callback@@Base+0x6060>
   37508:	ldr	x0, [sp, #24]
   3750c:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   37510:	b	37610 <__sanitizer_set_death_callback@@Base+0x6060>
   37514:	ldr	x0, [sp, #32]
   37518:	ldr	w0, [x0, #20]
   3751c:	mov	w1, #0xff                  	// #255
   37520:	sub	w0, w1, w0
   37524:	str	w0, [sp, #152]
   37528:	ldr	x0, [sp, #32]
   3752c:	ldr	w0, [x0, #16]
   37530:	ldr	w1, [sp, #152]
   37534:	udiv	w0, w1, w0
   37538:	str	w0, [sp, #148]
   3753c:	ldr	x0, [sp, #32]
   37540:	ldr	w1, [x0, #4]
   37544:	ldr	w2, [sp, #196]
   37548:	ldr	w0, [sp, #148]
   3754c:	add	w0, w2, w0
   37550:	mul	w1, w1, w0
   37554:	ldr	x0, [sp, #32]
   37558:	ldr	w0, [x0, #8]
   3755c:	udiv	w0, w1, w0
   37560:	mov	w0, w0
   37564:	ldr	x1, [sp, #200]
   37568:	add	x0, x1, x0
   3756c:	str	x0, [sp, #200]
   37570:	ldr	w1, [sp, #196]
   37574:	ldr	w0, [sp, #148]
   37578:	add	w0, w1, w0
   3757c:	ldr	x1, [sp, #32]
   37580:	ldr	w1, [x1, #8]
   37584:	udiv	w2, w0, w1
   37588:	mul	w1, w2, w1
   3758c:	sub	w0, w0, w1
   37590:	str	w0, [sp, #196]
   37594:	b	37610 <__sanitizer_set_death_callback@@Base+0x6060>
   37598:	ldr	x0, [sp, #24]
   3759c:	bl	34160 <__sanitizer_set_death_callback@@Base+0x2bb0>
   375a0:	and	w0, w0, #0xffff
   375a4:	and	x0, x0, #0xffff
   375a8:	ldr	x1, [sp, #200]
   375ac:	add	x0, x1, x0
   375b0:	str	x0, [sp, #200]
   375b4:	str	wzr, [sp, #196]
   375b8:	b	37610 <__sanitizer_set_death_callback@@Base+0x6060>
   375bc:	ldr	x0, [sp, #24]
   375c0:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   375c4:	b	37610 <__sanitizer_set_death_callback@@Base+0x6060>
   375c8:	ldr	x0, [sp, #32]
   375cc:	ldr	x1, [x0, #24]
   375d0:	ldr	w0, [sp, #152]
   375d4:	sub	w0, w0, #0x1
   375d8:	mov	w0, w0
   375dc:	add	x0, x1, x0
   375e0:	ldrb	w0, [x0]
   375e4:	str	w0, [sp, #156]
   375e8:	b	37600 <__sanitizer_set_death_callback@@Base+0x6050>
   375ec:	ldr	x0, [sp, #24]
   375f0:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   375f4:	ldr	w0, [sp, #156]
   375f8:	sub	w0, w0, #0x1
   375fc:	str	w0, [sp, #156]
   37600:	ldr	w0, [sp, #156]
   37604:	cmp	w0, #0x0
   37608:	b.ne	375ec <__sanitizer_set_death_callback@@Base+0x603c>  // b.any
   3760c:	nop
   37610:	ldr	x0, [sp, #24]
   37614:	ldr	x0, [x0, #24]
   37618:	cmp	x0, #0x0
   3761c:	b.ne	36f48 <__sanitizer_set_death_callback@@Base+0x5998>  // b.any
   37620:	mov	w0, #0x1                   	// #1
   37624:	ldp	x29, x30, [sp], #208
   37628:	ret
   3762c:	stp	x29, x30, [sp, #-208]!
   37630:	mov	x29, sp
   37634:	str	x0, [sp, #72]
   37638:	str	x1, [sp, #64]
   3763c:	str	x2, [sp, #56]
   37640:	str	x3, [sp, #48]
   37644:	str	x4, [sp, #40]
   37648:	str	x5, [sp, #32]
   3764c:	str	x6, [sp, #24]
   37650:	str	x7, [sp, #16]
   37654:	add	x0, sp, #0xa0
   37658:	mov	x2, #0x18                  	// #24
   3765c:	mov	w1, #0x0                   	// #0
   37660:	bl	6770 <__asan_internal_memset@plt>
   37664:	str	xzr, [sp, #184]
   37668:	mov	x2, #0x40                  	// #64
   3766c:	mov	w1, #0x0                   	// #0
   37670:	ldr	x0, [sp, #32]
   37674:	bl	6770 <__asan_internal_memset@plt>
   37678:	ldr	x0, [sp, #40]
   3767c:	ldr	x0, [x0, #56]
   37680:	mov	x1, x0
   37684:	ldr	x0, [sp, #64]
   37688:	ldr	x0, [x0, #80]
   3768c:	cmp	x1, x0
   37690:	b.cc	376b0 <__sanitizer_set_death_callback@@Base+0x6100>  // b.lo, b.ul, b.last
   37694:	ldr	x3, [sp, #56]
   37698:	mov	w2, #0x0                   	// #0
   3769c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   376a0:	add	x1, x0, #0x3a0
   376a4:	ldr	x0, [sp, #48]
   376a8:	blr	x3
   376ac:	b	37878 <__sanitizer_set_death_callback@@Base+0x62c8>
   376b0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   376b4:	add	x0, x0, #0x3c0
   376b8:	str	x0, [sp, #96]
   376bc:	ldr	x0, [sp, #64]
   376c0:	ldr	x0, [x0, #72]
   376c4:	str	x0, [sp, #104]
   376c8:	ldr	x0, [sp, #64]
   376cc:	ldr	x0, [x0, #72]
   376d0:	ldr	x1, [sp, #40]
   376d4:	ldr	x1, [x1, #56]
   376d8:	add	x0, x0, x1
   376dc:	str	x0, [sp, #112]
   376e0:	ldr	x0, [sp, #64]
   376e4:	ldr	x0, [x0, #80]
   376e8:	ldr	x1, [sp, #40]
   376ec:	ldr	x1, [x1, #56]
   376f0:	sub	x0, x0, x1
   376f4:	str	x0, [sp, #120]
   376f8:	ldr	x0, [sp, #64]
   376fc:	ldr	w0, [x0, #120]
   37700:	str	w0, [sp, #128]
   37704:	ldr	x0, [sp, #56]
   37708:	str	x0, [sp, #136]
   3770c:	ldr	x0, [sp, #48]
   37710:	str	x0, [sp, #144]
   37714:	str	wzr, [sp, #152]
   37718:	add	x1, sp, #0x5c
   3771c:	add	x0, sp, #0x60
   37720:	bl	3484c <__sanitizer_set_death_callback@@Base+0x329c>
   37724:	str	x0, [sp, #200]
   37728:	ldr	x0, [sp, #200]
   3772c:	str	x0, [sp, #120]
   37730:	ldr	w0, [sp, #92]
   37734:	add	x1, sp, #0x60
   37738:	ldr	x4, [sp, #32]
   3773c:	mov	x3, x1
   37740:	mov	w2, w0
   37744:	ldr	x1, [sp, #40]
   37748:	ldr	x0, [sp, #72]
   3774c:	bl	36890 <__sanitizer_set_death_callback@@Base+0x52e0>
   37750:	cmp	w0, #0x0
   37754:	b.eq	3784c <__sanitizer_set_death_callback@@Base+0x629c>  // b.none
   37758:	add	x1, sp, #0xa0
   3775c:	add	x0, sp, #0x60
   37760:	mov	x5, x1
   37764:	mov	x4, x0
   37768:	ldr	x3, [sp, #32]
   3776c:	ldr	x2, [sp, #40]
   37770:	ldr	x1, [sp, #64]
   37774:	ldr	x0, [sp, #72]
   37778:	bl	36edc <__sanitizer_set_death_callback@@Base+0x592c>
   3777c:	cmp	w0, #0x0
   37780:	b.eq	37854 <__sanitizer_set_death_callback@@Base+0x62a4>  // b.none
   37784:	ldr	w0, [sp, #152]
   37788:	cmp	w0, #0x0
   3778c:	b.ne	3785c <__sanitizer_set_death_callback@@Base+0x62ac>  // b.any
   37790:	ldr	x0, [sp, #184]
   37794:	cmp	x0, #0x0
   37798:	b.eq	37864 <__sanitizer_set_death_callback@@Base+0x62b4>  // b.none
   3779c:	add	x0, sp, #0xa0
   377a0:	mov	x4, x0
   377a4:	ldr	x3, [sp, #48]
   377a8:	ldr	x2, [sp, #56]
   377ac:	mov	x1, #0x18                  	// #24
   377b0:	ldr	x0, [sp, #72]
   377b4:	bl	6750 <__asan_backtrace_vector_grow@plt>
   377b8:	str	x0, [sp, #192]
   377bc:	ldr	x0, [sp, #192]
   377c0:	cmp	x0, #0x0
   377c4:	b.eq	3786c <__sanitizer_set_death_callback@@Base+0x62bc>  // b.none
   377c8:	ldr	x0, [sp, #192]
   377cc:	mov	x1, #0xffffffffffffffff    	// #-1
   377d0:	str	x1, [x0]
   377d4:	ldr	x0, [sp, #192]
   377d8:	str	xzr, [x0, #8]
   377dc:	ldr	x0, [sp, #192]
   377e0:	str	wzr, [x0, #16]
   377e4:	ldr	x0, [sp, #192]
   377e8:	str	wzr, [x0, #20]
   377ec:	add	x0, sp, #0xa0
   377f0:	ldr	x3, [sp, #48]
   377f4:	ldr	x2, [sp, #56]
   377f8:	mov	x1, x0
   377fc:	ldr	x0, [sp, #72]
   37800:	bl	6840 <__asan_backtrace_vector_release@plt>
   37804:	cmp	w0, #0x0
   37808:	b.eq	37874 <__sanitizer_set_death_callback@@Base+0x62c4>  // b.none
   3780c:	ldr	x0, [sp, #160]
   37810:	str	x0, [sp, #192]
   37814:	ldr	x1, [sp, #184]
   37818:	adrp	x0, 35000 <__sanitizer_set_death_callback@@Base+0x3a50>
   3781c:	add	x3, x0, #0x4f8
   37820:	mov	x2, #0x18                  	// #24
   37824:	ldr	x0, [sp, #192]
   37828:	bl	65d0 <__asan_backtrace_qsort@plt>
   3782c:	ldr	x0, [sp, #24]
   37830:	ldr	x1, [sp, #192]
   37834:	str	x1, [x0]
   37838:	ldr	x1, [sp, #184]
   3783c:	ldr	x0, [sp, #16]
   37840:	str	x1, [x0]
   37844:	mov	w0, #0x1                   	// #1
   37848:	b	378bc <__sanitizer_set_death_callback@@Base+0x630c>
   3784c:	nop
   37850:	b	37878 <__sanitizer_set_death_callback@@Base+0x62c8>
   37854:	nop
   37858:	b	37878 <__sanitizer_set_death_callback@@Base+0x62c8>
   3785c:	nop
   37860:	b	37878 <__sanitizer_set_death_callback@@Base+0x62c8>
   37864:	nop
   37868:	b	37878 <__sanitizer_set_death_callback@@Base+0x62c8>
   3786c:	nop
   37870:	b	37878 <__sanitizer_set_death_callback@@Base+0x62c8>
   37874:	nop
   37878:	add	x0, sp, #0xa0
   3787c:	ldr	x3, [sp, #48]
   37880:	ldr	x2, [sp, #56]
   37884:	mov	x1, x0
   37888:	ldr	x0, [sp, #72]
   3788c:	bl	33ec0 <__sanitizer_set_death_callback@@Base+0x2910>
   37890:	ldr	x3, [sp, #48]
   37894:	ldr	x2, [sp, #56]
   37898:	ldr	x1, [sp, #32]
   3789c:	ldr	x0, [sp, #72]
   378a0:	bl	3680c <__sanitizer_set_death_callback@@Base+0x525c>
   378a4:	ldr	x0, [sp, #24]
   378a8:	mov	x1, #0xffffffffffffffff    	// #-1
   378ac:	str	x1, [x0]
   378b0:	ldr	x0, [sp, #16]
   378b4:	str	xzr, [x0]
   378b8:	mov	w0, #0x0                   	// #0
   378bc:	ldp	x29, x30, [sp], #208
   378c0:	ret
   378c4:	stp	x29, x30, [sp, #-96]!
   378c8:	mov	x29, sp
   378cc:	str	x0, [sp, #56]
   378d0:	str	x1, [sp, #48]
   378d4:	str	x2, [sp, #40]
   378d8:	str	x3, [sp, #32]
   378dc:	str	x4, [sp, #24]
   378e0:	str	x5, [sp, #16]
   378e4:	ldr	x0, [sp, #40]
   378e8:	ldr	w0, [x0]
   378ec:	cmp	w0, #0x31
   378f0:	b.eq	37904 <__sanitizer_set_death_callback@@Base+0x6354>  // b.none
   378f4:	cmp	w0, #0x47
   378f8:	b.eq	37904 <__sanitizer_set_death_callback@@Base+0x6354>  // b.none
   378fc:	mov	x0, #0x0                   	// #0
   37900:	b	37a74 <__sanitizer_set_death_callback@@Base+0x64c4>
   37904:	nop
   37908:	ldr	x0, [sp, #40]
   3790c:	ldr	w0, [x0, #4]
   37910:	cmp	w0, #0x20
   37914:	b.ne	37920 <__sanitizer_set_death_callback@@Base+0x6370>  // b.any
   37918:	mov	x0, #0x0                   	// #0
   3791c:	b	37a74 <__sanitizer_set_death_callback@@Base+0x64c4>
   37920:	ldr	x0, [sp, #32]
   37924:	ldr	w0, [x0]
   37928:	cmp	w0, #0x6
   3792c:	b.ne	379a0 <__sanitizer_set_death_callback@@Base+0x63f0>  // b.any
   37930:	ldr	x0, [sp, #56]
   37934:	ldr	x3, [x0, #40]
   37938:	ldr	x0, [sp, #56]
   3793c:	ldr	x1, [x0, #48]
   37940:	ldr	x0, [sp, #32]
   37944:	ldr	x0, [x0, #8]
   37948:	mov	x2, x0
   3794c:	mov	x0, x3
   37950:	bl	350a4 <__sanitizer_set_death_callback@@Base+0x3af4>
   37954:	str	x0, [sp, #72]
   37958:	ldr	x0, [sp, #72]
   3795c:	cmp	x0, #0x0
   37960:	b.ne	3796c <__sanitizer_set_death_callback@@Base+0x63bc>  // b.any
   37964:	mov	x0, #0x0                   	// #0
   37968:	b	37a74 <__sanitizer_set_death_callback@@Base+0x64c4>
   3796c:	ldr	x0, [sp, #32]
   37970:	ldr	x1, [x0, #8]
   37974:	ldr	x0, [sp, #72]
   37978:	ldr	x0, [x0, #24]
   3797c:	sub	x0, x1, x0
   37980:	str	x0, [sp, #64]
   37984:	ldr	x4, [sp, #16]
   37988:	ldr	x3, [sp, #24]
   3798c:	ldr	x2, [sp, #64]
   37990:	ldr	x1, [sp, #72]
   37994:	ldr	x0, [sp, #56]
   37998:	bl	37a7c <__sanitizer_set_death_callback@@Base+0x64cc>
   3799c:	b	37a74 <__sanitizer_set_death_callback@@Base+0x64c4>
   379a0:	ldr	x0, [sp, #32]
   379a4:	ldr	w0, [x0]
   379a8:	cmp	w0, #0x2
   379ac:	b.eq	379c0 <__sanitizer_set_death_callback@@Base+0x6410>  // b.none
   379b0:	ldr	x0, [sp, #32]
   379b4:	ldr	w0, [x0]
   379b8:	cmp	w0, #0x5
   379bc:	b.ne	379e4 <__sanitizer_set_death_callback@@Base+0x6434>  // b.any
   379c0:	ldr	x0, [sp, #32]
   379c4:	ldr	x0, [x0, #8]
   379c8:	ldr	x4, [sp, #16]
   379cc:	ldr	x3, [sp, #24]
   379d0:	mov	x2, x0
   379d4:	ldr	x1, [sp, #48]
   379d8:	ldr	x0, [sp, #56]
   379dc:	bl	37a7c <__sanitizer_set_death_callback@@Base+0x64cc>
   379e0:	b	37a74 <__sanitizer_set_death_callback@@Base+0x64c4>
   379e4:	ldr	x0, [sp, #32]
   379e8:	ldr	w0, [x0]
   379ec:	cmp	w0, #0x7
   379f0:	b.ne	37a70 <__sanitizer_set_death_callback@@Base+0x64c0>  // b.any
   379f4:	ldr	x0, [sp, #56]
   379f8:	ldr	x0, [x0, #8]
   379fc:	ldr	x3, [x0, #40]
   37a00:	ldr	x0, [sp, #56]
   37a04:	ldr	x0, [x0, #8]
   37a08:	ldr	x1, [x0, #48]
   37a0c:	ldr	x0, [sp, #32]
   37a10:	ldr	x0, [x0, #8]
   37a14:	mov	x2, x0
   37a18:	mov	x0, x3
   37a1c:	bl	350a4 <__sanitizer_set_death_callback@@Base+0x3af4>
   37a20:	str	x0, [sp, #88]
   37a24:	ldr	x0, [sp, #88]
   37a28:	cmp	x0, #0x0
   37a2c:	b.ne	37a38 <__sanitizer_set_death_callback@@Base+0x6488>  // b.any
   37a30:	mov	x0, #0x0                   	// #0
   37a34:	b	37a74 <__sanitizer_set_death_callback@@Base+0x64c4>
   37a38:	ldr	x0, [sp, #32]
   37a3c:	ldr	x1, [x0, #8]
   37a40:	ldr	x0, [sp, #88]
   37a44:	ldr	x0, [x0, #24]
   37a48:	sub	x0, x1, x0
   37a4c:	str	x0, [sp, #80]
   37a50:	ldr	x0, [sp, #56]
   37a54:	ldr	x0, [x0, #8]
   37a58:	ldr	x4, [sp, #16]
   37a5c:	ldr	x3, [sp, #24]
   37a60:	ldr	x2, [sp, #80]
   37a64:	ldr	x1, [sp, #88]
   37a68:	bl	37a7c <__sanitizer_set_death_callback@@Base+0x64cc>
   37a6c:	b	37a74 <__sanitizer_set_death_callback@@Base+0x64c4>
   37a70:	mov	x0, #0x0                   	// #0
   37a74:	ldp	x29, x30, [sp], #96
   37a78:	ret
   37a7c:	sub	sp, sp, #0xd0
   37a80:	stp	x29, x30, [sp, #16]
   37a84:	add	x29, sp, #0x10
   37a88:	str	x0, [sp, #72]
   37a8c:	str	x1, [sp, #64]
   37a90:	str	x2, [sp, #56]
   37a94:	str	x3, [sp, #48]
   37a98:	str	x4, [sp, #40]
   37a9c:	ldr	x0, [sp, #64]
   37aa0:	ldr	x0, [x0, #16]
   37aa4:	ldr	x1, [sp, #56]
   37aa8:	cmp	x1, x0
   37aac:	b.cc	37ad0 <__sanitizer_set_death_callback@@Base+0x6520>  // b.lo, b.ul, b.last
   37ab0:	ldr	x0, [sp, #64]
   37ab4:	ldr	x0, [x0, #16]
   37ab8:	ldr	x1, [sp, #56]
   37abc:	sub	x1, x1, x0
   37ac0:	ldr	x0, [sp, #64]
   37ac4:	ldr	x0, [x0, #8]
   37ac8:	cmp	x1, x0
   37acc:	b.cc	37af0 <__sanitizer_set_death_callback@@Base+0x6540>  // b.lo, b.ul, b.last
   37ad0:	ldr	x3, [sp, #48]
   37ad4:	mov	w2, #0x0                   	// #0
   37ad8:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   37adc:	add	x1, x0, #0x3d0
   37ae0:	ldr	x0, [sp, #40]
   37ae4:	blr	x3
   37ae8:	mov	x0, #0x0                   	// #0
   37aec:	b	37d64 <__sanitizer_set_death_callback@@Base+0x67b4>
   37af0:	ldr	x0, [sp, #64]
   37af4:	ldr	x0, [x0, #16]
   37af8:	ldr	x1, [sp, #56]
   37afc:	sub	x0, x1, x0
   37b00:	str	x0, [sp, #56]
   37b04:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   37b08:	add	x0, x0, #0x2b0
   37b0c:	str	x0, [sp, #104]
   37b10:	ldr	x0, [sp, #72]
   37b14:	ldr	x0, [x0, #56]
   37b18:	str	x0, [sp, #112]
   37b1c:	ldr	x0, [sp, #64]
   37b20:	ldr	x1, [x0]
   37b24:	ldr	x0, [sp, #56]
   37b28:	add	x0, x1, x0
   37b2c:	str	x0, [sp, #120]
   37b30:	ldr	x0, [sp, #64]
   37b34:	ldr	x1, [x0, #8]
   37b38:	ldr	x0, [sp, #56]
   37b3c:	sub	x0, x1, x0
   37b40:	str	x0, [sp, #128]
   37b44:	ldr	x0, [sp, #72]
   37b48:	ldr	w0, [x0, #120]
   37b4c:	str	w0, [sp, #136]
   37b50:	ldr	x0, [sp, #48]
   37b54:	str	x0, [sp, #144]
   37b58:	ldr	x0, [sp, #40]
   37b5c:	str	x0, [sp, #152]
   37b60:	str	wzr, [sp, #160]
   37b64:	add	x0, sp, #0x68
   37b68:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   37b6c:	str	x0, [sp, #184]
   37b70:	ldr	x0, [sp, #184]
   37b74:	cmp	x0, #0x0
   37b78:	b.ne	37b98 <__sanitizer_set_death_callback@@Base+0x65e8>  // b.any
   37b7c:	add	x2, sp, #0x68
   37b80:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   37b84:	add	x1, x0, #0x400
   37b88:	mov	x0, x2
   37b8c:	bl	33f1c <__sanitizer_set_death_callback@@Base+0x296c>
   37b90:	mov	x0, #0x0                   	// #0
   37b94:	b	37d64 <__sanitizer_set_death_callback@@Base+0x67b4>
   37b98:	ldr	x0, [sp, #64]
   37b9c:	add	x0, x0, #0x58
   37ba0:	ldr	x3, [sp, #40]
   37ba4:	ldr	x2, [sp, #48]
   37ba8:	ldr	x1, [sp, #184]
   37bac:	bl	35a58 <__sanitizer_set_death_callback@@Base+0x44a8>
   37bb0:	str	x0, [sp, #176]
   37bb4:	ldr	x0, [sp, #176]
   37bb8:	cmp	x0, #0x0
   37bbc:	b.ne	37bc8 <__sanitizer_set_death_callback@@Base+0x6618>  // b.any
   37bc0:	mov	x0, #0x0                   	// #0
   37bc4:	b	37d64 <__sanitizer_set_death_callback@@Base+0x67b4>
   37bc8:	str	xzr, [sp, #200]
   37bcc:	str	xzr, [sp, #192]
   37bd0:	b	37d4c <__sanitizer_set_death_callback@@Base+0x679c>
   37bd4:	ldr	x0, [sp, #176]
   37bd8:	ldr	x1, [x0, #24]
   37bdc:	ldr	x0, [sp, #192]
   37be0:	lsl	x0, x0, #3
   37be4:	add	x0, x1, x0
   37be8:	ldr	w8, [x0, #4]
   37bec:	ldr	x0, [sp, #64]
   37bf0:	ldr	w2, [x0, #44]
   37bf4:	ldr	x0, [sp, #64]
   37bf8:	ldr	w3, [x0, #40]
   37bfc:	ldr	x0, [sp, #64]
   37c00:	ldr	w4, [x0, #48]
   37c04:	ldr	x0, [sp, #72]
   37c08:	ldr	x5, [x0, #104]
   37c0c:	ldr	x0, [sp, #72]
   37c10:	ldr	x6, [x0, #112]
   37c14:	ldr	x0, [sp, #72]
   37c18:	ldr	x7, [x0, #8]
   37c1c:	add	x1, sp, #0x68
   37c20:	add	x0, sp, #0x58
   37c24:	str	x0, [sp]
   37c28:	mov	w0, w8
   37c2c:	bl	3497c <__sanitizer_set_death_callback@@Base+0x33cc>
   37c30:	cmp	w0, #0x0
   37c34:	b.ne	37c40 <__sanitizer_set_death_callback@@Base+0x6690>  // b.any
   37c38:	mov	x0, #0x0                   	// #0
   37c3c:	b	37d64 <__sanitizer_set_death_callback@@Base+0x67b4>
   37c40:	ldr	x0, [sp, #176]
   37c44:	ldr	x1, [x0, #24]
   37c48:	ldr	x0, [sp, #192]
   37c4c:	lsl	x0, x0, #3
   37c50:	add	x0, x1, x0
   37c54:	ldr	w0, [x0]
   37c58:	mov	w1, #0x2007                	// #8199
   37c5c:	cmp	w0, w1
   37c60:	b.eq	37cb8 <__sanitizer_set_death_callback@@Base+0x6708>  // b.none
   37c64:	mov	w1, #0x2007                	// #8199
   37c68:	cmp	w0, w1
   37c6c:	b.hi	37d1c <__sanitizer_set_death_callback@@Base+0x676c>  // b.pmore
   37c70:	cmp	w0, #0x6e
   37c74:	b.eq	37cb8 <__sanitizer_set_death_callback@@Base+0x6708>  // b.none
   37c78:	cmp	w0, #0x6e
   37c7c:	b.hi	37d1c <__sanitizer_set_death_callback@@Base+0x676c>  // b.pmore
   37c80:	cmp	w0, #0x3
   37c84:	b.eq	37c94 <__sanitizer_set_death_callback@@Base+0x66e4>  // b.none
   37c88:	cmp	w0, #0x47
   37c8c:	b.eq	37ccc <__sanitizer_set_death_callback@@Base+0x671c>  // b.none
   37c90:	b	37d1c <__sanitizer_set_death_callback@@Base+0x676c>
   37c94:	ldr	x0, [sp, #200]
   37c98:	cmp	x0, #0x0
   37c9c:	b.ne	37d24 <__sanitizer_set_death_callback@@Base+0x6774>  // b.any
   37ca0:	ldr	w0, [sp, #88]
   37ca4:	cmp	w0, #0x4
   37ca8:	b.ne	37d2c <__sanitizer_set_death_callback@@Base+0x677c>  // b.any
   37cac:	ldr	x0, [sp, #96]
   37cb0:	str	x0, [sp, #200]
   37cb4:	b	37d2c <__sanitizer_set_death_callback@@Base+0x677c>
   37cb8:	ldr	w0, [sp, #88]
   37cbc:	cmp	w0, #0x4
   37cc0:	b.ne	37d34 <__sanitizer_set_death_callback@@Base+0x6784>  // b.any
   37cc4:	ldr	x0, [sp, #96]
   37cc8:	b	37d64 <__sanitizer_set_death_callback@@Base+0x67b4>
   37ccc:	ldr	x0, [sp, #176]
   37cd0:	ldr	x1, [x0, #24]
   37cd4:	ldr	x0, [sp, #192]
   37cd8:	lsl	x0, x0, #3
   37cdc:	add	x0, x1, x0
   37ce0:	add	x1, sp, #0x58
   37ce4:	ldr	x5, [sp, #40]
   37ce8:	ldr	x4, [sp, #48]
   37cec:	mov	x3, x1
   37cf0:	mov	x2, x0
   37cf4:	ldr	x1, [sp, #64]
   37cf8:	ldr	x0, [sp, #72]
   37cfc:	bl	378c4 <__sanitizer_set_death_callback@@Base+0x6314>
   37d00:	str	x0, [sp, #168]
   37d04:	ldr	x0, [sp, #168]
   37d08:	cmp	x0, #0x0
   37d0c:	b.eq	37d3c <__sanitizer_set_death_callback@@Base+0x678c>  // b.none
   37d10:	ldr	x0, [sp, #168]
   37d14:	str	x0, [sp, #200]
   37d18:	b	37d3c <__sanitizer_set_death_callback@@Base+0x678c>
   37d1c:	nop
   37d20:	b	37d40 <__sanitizer_set_death_callback@@Base+0x6790>
   37d24:	nop
   37d28:	b	37d40 <__sanitizer_set_death_callback@@Base+0x6790>
   37d2c:	nop
   37d30:	b	37d40 <__sanitizer_set_death_callback@@Base+0x6790>
   37d34:	nop
   37d38:	b	37d40 <__sanitizer_set_death_callback@@Base+0x6790>
   37d3c:	nop
   37d40:	ldr	x0, [sp, #192]
   37d44:	add	x0, x0, #0x1
   37d48:	str	x0, [sp, #192]
   37d4c:	ldr	x0, [sp, #176]
   37d50:	ldr	x0, [x0, #16]
   37d54:	ldr	x1, [sp, #192]
   37d58:	cmp	x1, x0
   37d5c:	b.cc	37bd4 <__sanitizer_set_death_callback@@Base+0x6624>  // b.lo, b.ul, b.last
   37d60:	ldr	x0, [sp, #200]
   37d64:	ldp	x29, x30, [sp, #16]
   37d68:	add	sp, sp, #0xd0
   37d6c:	ret
   37d70:	stp	x29, x30, [sp, #-96]!
   37d74:	mov	x29, sp
   37d78:	str	x0, [sp, #72]
   37d7c:	str	x1, [sp, #64]
   37d80:	str	x2, [sp, #56]
   37d84:	str	x3, [sp, #48]
   37d88:	str	x4, [sp, #40]
   37d8c:	str	x5, [sp, #32]
   37d90:	str	x6, [sp, #24]
   37d94:	str	x7, [sp, #16]
   37d98:	ldr	x0, [sp, #64]
   37d9c:	ldr	x0, [x0, #16]
   37da0:	ldr	x1, [sp, #48]
   37da4:	add	x0, x1, x0
   37da8:	str	x0, [sp, #48]
   37dac:	ldr	x0, [sp, #64]
   37db0:	ldr	x0, [x0, #16]
   37db4:	ldr	x1, [sp, #40]
   37db8:	add	x0, x1, x0
   37dbc:	str	x0, [sp, #40]
   37dc0:	ldr	x0, [sp, #16]
   37dc4:	ldr	x0, [x0, #24]
   37dc8:	cmp	x0, #0x0
   37dcc:	b.eq	37e64 <__sanitizer_set_death_callback@@Base+0x68b4>  // b.none
   37dd0:	ldr	x0, [sp, #16]
   37dd4:	ldr	x2, [x0]
   37dd8:	ldr	x0, [sp, #16]
   37ddc:	ldr	x1, [x0, #24]
   37de0:	mov	x0, x1
   37de4:	lsl	x0, x0, #1
   37de8:	add	x0, x0, x1
   37dec:	lsl	x0, x0, #3
   37df0:	sub	x0, x0, #0x18
   37df4:	add	x0, x2, x0
   37df8:	str	x0, [sp, #88]
   37dfc:	ldr	x0, [sp, #88]
   37e00:	ldr	x0, [x0, #8]
   37e04:	ldr	x1, [sp, #48]
   37e08:	cmp	x1, x0
   37e0c:	b.eq	37e28 <__sanitizer_set_death_callback@@Base+0x6878>  // b.none
   37e10:	ldr	x0, [sp, #88]
   37e14:	ldr	x0, [x0, #8]
   37e18:	add	x0, x0, #0x1
   37e1c:	ldr	x1, [sp, #48]
   37e20:	cmp	x1, x0
   37e24:	b.ne	37e64 <__sanitizer_set_death_callback@@Base+0x68b4>  // b.any
   37e28:	ldr	x0, [sp, #88]
   37e2c:	ldr	x0, [x0, #16]
   37e30:	ldr	x1, [sp, #56]
   37e34:	cmp	x1, x0
   37e38:	b.ne	37e64 <__sanitizer_set_death_callback@@Base+0x68b4>  // b.any
   37e3c:	ldr	x0, [sp, #88]
   37e40:	ldr	x0, [x0, #8]
   37e44:	ldr	x1, [sp, #40]
   37e48:	cmp	x1, x0
   37e4c:	b.ls	37e5c <__sanitizer_set_death_callback@@Base+0x68ac>  // b.plast
   37e50:	ldr	x0, [sp, #88]
   37e54:	ldr	x1, [sp, #40]
   37e58:	str	x1, [x0, #8]
   37e5c:	mov	w0, #0x1                   	// #1
   37e60:	b	37ed4 <__sanitizer_set_death_callback@@Base+0x6924>
   37e64:	ldr	x0, [sp, #16]
   37e68:	mov	x4, x0
   37e6c:	ldr	x3, [sp, #24]
   37e70:	ldr	x2, [sp, #32]
   37e74:	mov	x1, #0x18                  	// #24
   37e78:	ldr	x0, [sp, #72]
   37e7c:	bl	6750 <__asan_backtrace_vector_grow@plt>
   37e80:	str	x0, [sp, #88]
   37e84:	ldr	x0, [sp, #88]
   37e88:	cmp	x0, #0x0
   37e8c:	b.ne	37e98 <__sanitizer_set_death_callback@@Base+0x68e8>  // b.any
   37e90:	mov	w0, #0x0                   	// #0
   37e94:	b	37ed4 <__sanitizer_set_death_callback@@Base+0x6924>
   37e98:	ldr	x0, [sp, #88]
   37e9c:	ldr	x1, [sp, #48]
   37ea0:	str	x1, [x0]
   37ea4:	ldr	x0, [sp, #88]
   37ea8:	ldr	x1, [sp, #40]
   37eac:	str	x1, [x0, #8]
   37eb0:	ldr	x0, [sp, #88]
   37eb4:	ldr	x1, [sp, #56]
   37eb8:	str	x1, [x0, #16]
   37ebc:	ldr	x0, [sp, #16]
   37ec0:	ldr	x0, [x0, #24]
   37ec4:	add	x1, x0, #0x1
   37ec8:	ldr	x0, [sp, #16]
   37ecc:	str	x1, [x0, #24]
   37ed0:	mov	w0, #0x1                   	// #1
   37ed4:	ldp	x29, x30, [sp], #96
   37ed8:	ret
   37edc:	stp	x29, x30, [sp, #-160]!
   37ee0:	mov	x29, sp
   37ee4:	str	x0, [sp, #72]
   37ee8:	str	x1, [sp, #64]
   37eec:	str	x2, [sp, #56]
   37ef0:	str	x3, [sp, #48]
   37ef4:	str	x4, [sp, #40]
   37ef8:	str	x5, [sp, #32]
   37efc:	str	x6, [sp, #24]
   37f00:	str	x7, [sp, #16]
   37f04:	ldr	x0, [sp, #64]
   37f08:	ldr	x0, [x0, #96]
   37f0c:	ldr	x1, [sp, #40]
   37f10:	cmp	x1, x0
   37f14:	b.cc	37f38 <__sanitizer_set_death_callback@@Base+0x6988>  // b.lo, b.ul, b.last
   37f18:	ldr	x3, [sp, #24]
   37f1c:	mov	w2, #0x0                   	// #0
   37f20:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   37f24:	add	x1, x0, #0x430
   37f28:	ldr	x0, [sp, #16]
   37f2c:	blr	x3
   37f30:	mov	w0, #0x0                   	// #0
   37f34:	b	3807c <__sanitizer_set_death_callback@@Base+0x6acc>
   37f38:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   37f3c:	add	x0, x0, #0x2a0
   37f40:	str	x0, [sp, #80]
   37f44:	ldr	x0, [sp, #64]
   37f48:	ldr	x0, [x0, #88]
   37f4c:	str	x0, [sp, #88]
   37f50:	ldr	x0, [sp, #64]
   37f54:	ldr	x1, [x0, #88]
   37f58:	ldr	x0, [sp, #40]
   37f5c:	add	x0, x1, x0
   37f60:	str	x0, [sp, #96]
   37f64:	ldr	x0, [sp, #64]
   37f68:	ldr	x1, [x0, #96]
   37f6c:	ldr	x0, [sp, #40]
   37f70:	sub	x0, x1, x0
   37f74:	str	x0, [sp, #104]
   37f78:	ldr	x0, [sp, #64]
   37f7c:	ldr	w0, [x0, #120]
   37f80:	str	w0, [sp, #112]
   37f84:	ldr	x0, [sp, #24]
   37f88:	str	x0, [sp, #120]
   37f8c:	ldr	x0, [sp, #16]
   37f90:	str	x0, [sp, #128]
   37f94:	str	wzr, [sp, #136]
   37f98:	ldr	w0, [sp, #136]
   37f9c:	cmp	w0, #0x0
   37fa0:	b.eq	37fac <__sanitizer_set_death_callback@@Base+0x69fc>  // b.none
   37fa4:	mov	w0, #0x0                   	// #0
   37fa8:	b	3807c <__sanitizer_set_death_callback@@Base+0x6acc>
   37fac:	ldr	x0, [sp, #56]
   37fb0:	ldr	w1, [x0, #48]
   37fb4:	add	x0, sp, #0x50
   37fb8:	bl	344d4 <__sanitizer_set_death_callback@@Base+0x2f24>
   37fbc:	str	x0, [sp, #152]
   37fc0:	ldr	x0, [sp, #56]
   37fc4:	ldr	w1, [x0, #48]
   37fc8:	add	x0, sp, #0x50
   37fcc:	bl	344d4 <__sanitizer_set_death_callback@@Base+0x2f24>
   37fd0:	str	x0, [sp, #144]
   37fd4:	ldr	x0, [sp, #152]
   37fd8:	cmp	x0, #0x0
   37fdc:	b.ne	37fec <__sanitizer_set_death_callback@@Base+0x6a3c>  // b.any
   37fe0:	ldr	x0, [sp, #144]
   37fe4:	cmp	x0, #0x0
   37fe8:	b.eq	38060 <__sanitizer_set_death_callback@@Base+0x6ab0>  // b.none
   37fec:	ldr	x0, [sp, #56]
   37ff0:	ldr	w0, [x0, #48]
   37ff4:	mov	w1, w0
   37ff8:	ldr	x0, [sp, #152]
   37ffc:	bl	34590 <__sanitizer_set_death_callback@@Base+0x2fe0>
   38000:	cmp	w0, #0x0
   38004:	b.eq	38014 <__sanitizer_set_death_callback@@Base+0x6a64>  // b.none
   38008:	ldr	x0, [sp, #144]
   3800c:	str	x0, [sp, #32]
   38010:	b	37f98 <__sanitizer_set_death_callback@@Base+0x69e8>
   38014:	ldr	x1, [sp, #152]
   38018:	ldr	x0, [sp, #32]
   3801c:	add	x2, x1, x0
   38020:	ldr	x1, [sp, #144]
   38024:	ldr	x0, [sp, #32]
   38028:	add	x0, x1, x0
   3802c:	ldr	x7, [sp, #160]
   38030:	ldr	x6, [sp, #16]
   38034:	ldr	x5, [sp, #24]
   38038:	mov	x4, x0
   3803c:	mov	x3, x2
   38040:	ldr	x2, [sp, #48]
   38044:	ldr	x1, [sp, #64]
   38048:	ldr	x0, [sp, #72]
   3804c:	bl	37d70 <__sanitizer_set_death_callback@@Base+0x67c0>
   38050:	cmp	w0, #0x0
   38054:	b.ne	37f98 <__sanitizer_set_death_callback@@Base+0x69e8>  // b.any
   38058:	mov	w0, #0x0                   	// #0
   3805c:	b	3807c <__sanitizer_set_death_callback@@Base+0x6acc>
   38060:	nop
   38064:	ldr	w0, [sp, #136]
   38068:	cmp	w0, #0x0
   3806c:	b.eq	38078 <__sanitizer_set_death_callback@@Base+0x6ac8>  // b.none
   38070:	mov	w0, #0x0                   	// #0
   38074:	b	3807c <__sanitizer_set_death_callback@@Base+0x6acc>
   38078:	mov	w0, #0x1                   	// #1
   3807c:	ldp	x29, x30, [sp], #160
   38080:	ret
   38084:	sub	sp, sp, #0x100
   38088:	stp	x29, x30, [sp, #16]
   3808c:	add	x29, sp, #0x10
   38090:	str	x0, [sp, #88]
   38094:	str	x1, [sp, #80]
   38098:	str	x2, [sp, #72]
   3809c:	str	x3, [sp, #64]
   380a0:	str	x4, [sp, #56]
   380a4:	str	x5, [sp, #48]
   380a8:	str	x6, [sp, #40]
   380ac:	str	x7, [sp, #32]
   380b0:	b	387f8 <__sanitizer_set_death_callback@@Base+0x7248>
   380b4:	ldr	x0, [sp, #56]
   380b8:	bl	3464c <__sanitizer_set_death_callback@@Base+0x309c>
   380bc:	str	x0, [sp, #168]
   380c0:	ldr	x0, [sp, #168]
   380c4:	cmp	x0, #0x0
   380c8:	b.ne	380d4 <__sanitizer_set_death_callback@@Base+0x6b24>  // b.any
   380cc:	mov	w0, #0x1                   	// #1
   380d0:	b	3880c <__sanitizer_set_death_callback@@Base+0x725c>
   380d4:	ldr	x0, [sp, #72]
   380d8:	add	x0, x0, #0x58
   380dc:	ldr	x3, [sp, #32]
   380e0:	ldr	x2, [sp, #40]
   380e4:	ldr	x1, [sp, #168]
   380e8:	bl	35a58 <__sanitizer_set_death_callback@@Base+0x44a8>
   380ec:	str	x0, [sp, #160]
   380f0:	ldr	x0, [sp, #160]
   380f4:	cmp	x0, #0x0
   380f8:	b.ne	38104 <__sanitizer_set_death_callback@@Base+0x6b54>  // b.any
   380fc:	mov	w0, #0x0                   	// #0
   38100:	b	3880c <__sanitizer_set_death_callback@@Base+0x725c>
   38104:	ldr	x0, [sp, #160]
   38108:	ldr	w0, [x0, #8]
   3810c:	cmp	w0, #0x2e
   38110:	b.eq	38134 <__sanitizer_set_death_callback@@Base+0x6b84>  // b.none
   38114:	ldr	x0, [sp, #160]
   38118:	ldr	w0, [x0, #8]
   3811c:	cmp	w0, #0x3
   38120:	b.eq	38134 <__sanitizer_set_death_callback@@Base+0x6b84>  // b.none
   38124:	ldr	x0, [sp, #160]
   38128:	ldr	w0, [x0, #8]
   3812c:	cmp	w0, #0x1d
   38130:	b.ne	3813c <__sanitizer_set_death_callback@@Base+0x6b8c>  // b.any
   38134:	mov	w0, #0x1                   	// #1
   38138:	b	38140 <__sanitizer_set_death_callback@@Base+0x6b90>
   3813c:	mov	w0, #0x0                   	// #0
   38140:	str	w0, [sp, #252]
   38144:	ldr	x0, [sp, #160]
   38148:	ldr	w0, [x0, #8]
   3814c:	cmp	w0, #0x1d
   38150:	b.ne	38160 <__sanitizer_set_death_callback@@Base+0x6bb0>  // b.any
   38154:	ldr	x0, [sp, #264]
   38158:	str	x0, [sp, #232]
   3815c:	b	38168 <__sanitizer_set_death_callback@@Base+0x6bb8>
   38160:	ldr	x0, [sp, #256]
   38164:	str	x0, [sp, #232]
   38168:	str	xzr, [sp, #240]
   3816c:	ldr	w0, [sp, #252]
   38170:	cmp	w0, #0x0
   38174:	b.eq	381b4 <__sanitizer_set_death_callback@@Base+0x6c04>  // b.none
   38178:	ldr	x3, [sp, #32]
   3817c:	ldr	x2, [sp, #40]
   38180:	mov	x1, #0x28                  	// #40
   38184:	ldr	x0, [sp, #88]
   38188:	bl	67f0 <__asan_backtrace_alloc@plt>
   3818c:	str	x0, [sp, #240]
   38190:	ldr	x0, [sp, #240]
   38194:	cmp	x0, #0x0
   38198:	b.ne	381a4 <__sanitizer_set_death_callback@@Base+0x6bf4>  // b.any
   3819c:	mov	w0, #0x0                   	// #0
   381a0:	b	3880c <__sanitizer_set_death_callback@@Base+0x725c>
   381a4:	mov	x2, #0x28                  	// #40
   381a8:	mov	w1, #0x0                   	// #0
   381ac:	ldr	x0, [sp, #240]
   381b0:	bl	6770 <__asan_internal_memset@plt>
   381b4:	str	xzr, [sp, #216]
   381b8:	str	wzr, [sp, #212]
   381bc:	str	xzr, [sp, #200]
   381c0:	str	wzr, [sp, #196]
   381c4:	str	wzr, [sp, #192]
   381c8:	str	xzr, [sp, #184]
   381cc:	str	wzr, [sp, #180]
   381d0:	str	wzr, [sp, #176]
   381d4:	str	xzr, [sp, #224]
   381d8:	b	385b4 <__sanitizer_set_death_callback@@Base+0x7004>
   381dc:	ldr	x0, [sp, #160]
   381e0:	ldr	x1, [x0, #24]
   381e4:	ldr	x0, [sp, #224]
   381e8:	lsl	x0, x0, #3
   381ec:	add	x0, x1, x0
   381f0:	ldr	w8, [x0, #4]
   381f4:	ldr	x0, [sp, #72]
   381f8:	ldr	w1, [x0, #44]
   381fc:	ldr	x0, [sp, #72]
   38200:	ldr	w2, [x0, #40]
   38204:	ldr	x0, [sp, #72]
   38208:	ldr	w3, [x0, #48]
   3820c:	ldr	x0, [sp, #80]
   38210:	ldr	x4, [x0, #104]
   38214:	ldr	x0, [sp, #80]
   38218:	ldr	x5, [x0, #112]
   3821c:	ldr	x0, [sp, #80]
   38220:	ldr	x6, [x0, #8]
   38224:	add	x0, sp, #0x80
   38228:	str	x0, [sp]
   3822c:	mov	x7, x6
   38230:	mov	x6, x5
   38234:	mov	x5, x4
   38238:	mov	w4, w3
   3823c:	mov	w3, w2
   38240:	mov	w2, w1
   38244:	ldr	x1, [sp, #56]
   38248:	mov	w0, w8
   3824c:	bl	3497c <__sanitizer_set_death_callback@@Base+0x33cc>
   38250:	cmp	w0, #0x0
   38254:	b.ne	38260 <__sanitizer_set_death_callback@@Base+0x6cb0>  // b.any
   38258:	mov	w0, #0x0                   	// #0
   3825c:	b	3880c <__sanitizer_set_death_callback@@Base+0x725c>
   38260:	ldr	x0, [sp, #160]
   38264:	ldr	w0, [x0, #8]
   38268:	cmp	w0, #0x11
   3826c:	b.ne	382a4 <__sanitizer_set_death_callback@@Base+0x6cf4>  // b.any
   38270:	ldr	x0, [sp, #160]
   38274:	ldr	x1, [x0, #24]
   38278:	ldr	x0, [sp, #224]
   3827c:	lsl	x0, x0, #3
   38280:	add	x0, x1, x0
   38284:	ldr	w0, [x0]
   38288:	cmp	w0, #0x11
   3828c:	b.ne	382a4 <__sanitizer_set_death_callback@@Base+0x6cf4>  // b.any
   38290:	ldr	w0, [sp, #128]
   38294:	cmp	w0, #0x1
   38298:	b.ne	382a4 <__sanitizer_set_death_callback@@Base+0x6cf4>  // b.any
   3829c:	ldr	x0, [sp, #136]
   382a0:	str	x0, [sp, #64]
   382a4:	ldr	w0, [sp, #252]
   382a8:	cmp	w0, #0x0
   382ac:	b.eq	3854c <__sanitizer_set_death_callback@@Base+0x6f9c>  // b.none
   382b0:	ldr	x0, [sp, #160]
   382b4:	ldr	x1, [x0, #24]
   382b8:	ldr	x0, [sp, #224]
   382bc:	lsl	x0, x0, #3
   382c0:	add	x0, x1, x0
   382c4:	ldr	w0, [x0]
   382c8:	mov	w1, #0x2007                	// #8199
   382cc:	cmp	w0, w1
   382d0:	b.eq	38494 <__sanitizer_set_death_callback@@Base+0x6ee4>  // b.none
   382d4:	mov	w1, #0x2007                	// #8199
   382d8:	cmp	w0, w1
   382dc:	b.hi	38554 <__sanitizer_set_death_callback@@Base+0x6fa4>  // b.pmore
   382e0:	cmp	w0, #0x6e
   382e4:	b.eq	38494 <__sanitizer_set_death_callback@@Base+0x6ee4>  // b.none
   382e8:	cmp	w0, #0x6e
   382ec:	b.hi	38554 <__sanitizer_set_death_callback@@Base+0x6fa4>  // b.pmore
   382f0:	cmp	w0, #0x59
   382f4:	b.eq	383e8 <__sanitizer_set_death_callback@@Base+0x6e38>  // b.none
   382f8:	cmp	w0, #0x59
   382fc:	b.hi	38554 <__sanitizer_set_death_callback@@Base+0x6fa4>  // b.pmore
   38300:	cmp	w0, #0x58
   38304:	b.eq	38364 <__sanitizer_set_death_callback@@Base+0x6db4>  // b.none
   38308:	cmp	w0, #0x58
   3830c:	b.hi	38554 <__sanitizer_set_death_callback@@Base+0x6fa4>  // b.pmore
   38310:	cmp	w0, #0x55
   38314:	b.eq	38520 <__sanitizer_set_death_callback@@Base+0x6f70>  // b.none
   38318:	cmp	w0, #0x55
   3831c:	b.hi	38554 <__sanitizer_set_death_callback@@Base+0x6fa4>  // b.pmore
   38320:	cmp	w0, #0x47
   38324:	b.eq	38408 <__sanitizer_set_death_callback@@Base+0x6e58>  // b.none
   38328:	cmp	w0, #0x47
   3832c:	b.hi	38554 <__sanitizer_set_death_callback@@Base+0x6fa4>  // b.pmore
   38330:	cmp	w0, #0x31
   38334:	b.eq	38408 <__sanitizer_set_death_callback@@Base+0x6e58>  // b.none
   38338:	cmp	w0, #0x31
   3833c:	b.hi	38554 <__sanitizer_set_death_callback@@Base+0x6fa4>  // b.pmore
   38340:	cmp	w0, #0x12
   38344:	b.eq	384d8 <__sanitizer_set_death_callback@@Base+0x6f28>  // b.none
   38348:	cmp	w0, #0x12
   3834c:	b.hi	38554 <__sanitizer_set_death_callback@@Base+0x6fa4>  // b.pmore
   38350:	cmp	w0, #0x3
   38354:	b.eq	38468 <__sanitizer_set_death_callback@@Base+0x6eb8>  // b.none
   38358:	cmp	w0, #0x11
   3835c:	b.eq	384b8 <__sanitizer_set_death_callback@@Base+0x6f08>  // b.none
   38360:	b	38554 <__sanitizer_set_death_callback@@Base+0x6fa4>
   38364:	ldr	w0, [sp, #128]
   38368:	cmp	w0, #0x2
   3836c:	b.ne	3855c <__sanitizer_set_death_callback@@Base+0x6fac>  // b.any
   38370:	ldr	x0, [sp, #136]
   38374:	cmp	x0, #0x0
   38378:	b.ne	38390 <__sanitizer_set_death_callback@@Base+0x6de0>  // b.any
   3837c:	ldr	x0, [sp, #240]
   38380:	adrp	x1, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   38384:	add	x1, x1, #0x338
   38388:	str	x1, [x0, #8]
   3838c:	b	3855c <__sanitizer_set_death_callback@@Base+0x6fac>
   38390:	ldr	x0, [sp, #136]
   38394:	sub	x1, x0, #0x1
   38398:	ldr	x0, [sp, #48]
   3839c:	ldr	x0, [x0, #48]
   383a0:	cmp	x1, x0
   383a4:	b.cc	383c0 <__sanitizer_set_death_callback@@Base+0x6e10>  // b.lo, b.ul, b.last
   383a8:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   383ac:	add	x1, x0, #0x458
   383b0:	ldr	x0, [sp, #56]
   383b4:	bl	33f1c <__sanitizer_set_death_callback@@Base+0x296c>
   383b8:	mov	w0, #0x0                   	// #0
   383bc:	b	3880c <__sanitizer_set_death_callback@@Base+0x725c>
   383c0:	ldr	x0, [sp, #48]
   383c4:	ldr	x1, [x0, #56]
   383c8:	ldr	x0, [sp, #136]
   383cc:	lsl	x0, x0, #3
   383d0:	sub	x0, x0, #0x8
   383d4:	add	x0, x1, x0
   383d8:	ldr	x1, [x0]
   383dc:	ldr	x0, [sp, #240]
   383e0:	str	x1, [x0, #8]
   383e4:	b	3855c <__sanitizer_set_death_callback@@Base+0x6fac>
   383e8:	ldr	w0, [sp, #128]
   383ec:	cmp	w0, #0x2
   383f0:	b.ne	38564 <__sanitizer_set_death_callback@@Base+0x6fb4>  // b.any
   383f4:	ldr	x0, [sp, #136]
   383f8:	mov	w1, w0
   383fc:	ldr	x0, [sp, #240]
   38400:	str	w1, [x0, #16]
   38404:	b	38564 <__sanitizer_set_death_callback@@Base+0x6fb4>
   38408:	ldr	w0, [sp, #176]
   3840c:	cmp	w0, #0x0
   38410:	b.ne	3856c <__sanitizer_set_death_callback@@Base+0x6fbc>  // b.any
   38414:	ldr	x0, [sp, #160]
   38418:	ldr	x1, [x0, #24]
   3841c:	ldr	x0, [sp, #224]
   38420:	lsl	x0, x0, #3
   38424:	add	x0, x1, x0
   38428:	add	x1, sp, #0x80
   3842c:	ldr	x5, [sp, #32]
   38430:	ldr	x4, [sp, #40]
   38434:	mov	x3, x1
   38438:	mov	x2, x0
   3843c:	ldr	x1, [sp, #72]
   38440:	ldr	x0, [sp, #80]
   38444:	bl	378c4 <__sanitizer_set_death_callback@@Base+0x6314>
   38448:	str	x0, [sp, #144]
   3844c:	ldr	x0, [sp, #144]
   38450:	cmp	x0, #0x0
   38454:	b.eq	38574 <__sanitizer_set_death_callback@@Base+0x6fc4>  // b.none
   38458:	ldr	x0, [sp, #240]
   3845c:	ldr	x1, [sp, #144]
   38460:	str	x1, [x0]
   38464:	b	38574 <__sanitizer_set_death_callback@@Base+0x6fc4>
   38468:	ldr	x0, [sp, #240]
   3846c:	ldr	x0, [x0]
   38470:	cmp	x0, #0x0
   38474:	b.ne	3857c <__sanitizer_set_death_callback@@Base+0x6fcc>  // b.any
   38478:	ldr	w0, [sp, #128]
   3847c:	cmp	w0, #0x4
   38480:	b.ne	38584 <__sanitizer_set_death_callback@@Base+0x6fd4>  // b.any
   38484:	ldr	x1, [sp, #136]
   38488:	ldr	x0, [sp, #240]
   3848c:	str	x1, [x0]
   38490:	b	38584 <__sanitizer_set_death_callback@@Base+0x6fd4>
   38494:	ldr	w0, [sp, #128]
   38498:	cmp	w0, #0x4
   3849c:	b.ne	3858c <__sanitizer_set_death_callback@@Base+0x6fdc>  // b.any
   384a0:	ldr	x1, [sp, #136]
   384a4:	ldr	x0, [sp, #240]
   384a8:	str	x1, [x0]
   384ac:	mov	w0, #0x1                   	// #1
   384b0:	str	w0, [sp, #176]
   384b4:	b	3858c <__sanitizer_set_death_callback@@Base+0x6fdc>
   384b8:	ldr	w0, [sp, #128]
   384bc:	cmp	w0, #0x1
   384c0:	b.ne	38594 <__sanitizer_set_death_callback@@Base+0x6fe4>  // b.any
   384c4:	ldr	x0, [sp, #136]
   384c8:	str	x0, [sp, #216]
   384cc:	mov	w0, #0x1                   	// #1
   384d0:	str	w0, [sp, #212]
   384d4:	b	38594 <__sanitizer_set_death_callback@@Base+0x6fe4>
   384d8:	ldr	w0, [sp, #128]
   384dc:	cmp	w0, #0x1
   384e0:	b.ne	384f8 <__sanitizer_set_death_callback@@Base+0x6f48>  // b.any
   384e4:	ldr	x0, [sp, #136]
   384e8:	str	x0, [sp, #200]
   384ec:	mov	w0, #0x1                   	// #1
   384f0:	str	w0, [sp, #196]
   384f4:	b	3859c <__sanitizer_set_death_callback@@Base+0x6fec>
   384f8:	ldr	w0, [sp, #128]
   384fc:	cmp	w0, #0x2
   38500:	b.ne	3859c <__sanitizer_set_death_callback@@Base+0x6fec>  // b.any
   38504:	ldr	x0, [sp, #136]
   38508:	str	x0, [sp, #200]
   3850c:	mov	w0, #0x1                   	// #1
   38510:	str	w0, [sp, #196]
   38514:	mov	w0, #0x1                   	// #1
   38518:	str	w0, [sp, #192]
   3851c:	b	3859c <__sanitizer_set_death_callback@@Base+0x6fec>
   38520:	ldr	w0, [sp, #128]
   38524:	cmp	w0, #0x2
   38528:	b.eq	38538 <__sanitizer_set_death_callback@@Base+0x6f88>  // b.none
   3852c:	ldr	w0, [sp, #128]
   38530:	cmp	w0, #0x8
   38534:	b.ne	385a4 <__sanitizer_set_death_callback@@Base+0x6ff4>  // b.any
   38538:	ldr	x0, [sp, #136]
   3853c:	str	x0, [sp, #184]
   38540:	mov	w0, #0x1                   	// #1
   38544:	str	w0, [sp, #180]
   38548:	b	385a4 <__sanitizer_set_death_callback@@Base+0x6ff4>
   3854c:	nop
   38550:	b	385a8 <__sanitizer_set_death_callback@@Base+0x6ff8>
   38554:	nop
   38558:	b	385a8 <__sanitizer_set_death_callback@@Base+0x6ff8>
   3855c:	nop
   38560:	b	385a8 <__sanitizer_set_death_callback@@Base+0x6ff8>
   38564:	nop
   38568:	b	385a8 <__sanitizer_set_death_callback@@Base+0x6ff8>
   3856c:	nop
   38570:	b	385a8 <__sanitizer_set_death_callback@@Base+0x6ff8>
   38574:	nop
   38578:	b	385a8 <__sanitizer_set_death_callback@@Base+0x6ff8>
   3857c:	nop
   38580:	b	385a8 <__sanitizer_set_death_callback@@Base+0x6ff8>
   38584:	nop
   38588:	b	385a8 <__sanitizer_set_death_callback@@Base+0x6ff8>
   3858c:	nop
   38590:	b	385a8 <__sanitizer_set_death_callback@@Base+0x6ff8>
   38594:	nop
   38598:	b	385a8 <__sanitizer_set_death_callback@@Base+0x6ff8>
   3859c:	nop
   385a0:	b	385a8 <__sanitizer_set_death_callback@@Base+0x6ff8>
   385a4:	nop
   385a8:	ldr	x0, [sp, #224]
   385ac:	add	x0, x0, #0x1
   385b0:	str	x0, [sp, #224]
   385b4:	ldr	x0, [sp, #160]
   385b8:	ldr	x0, [x0, #16]
   385bc:	ldr	x1, [sp, #224]
   385c0:	cmp	x1, x0
   385c4:	b.cc	381dc <__sanitizer_set_death_callback@@Base+0x6c2c>  // b.lo, b.ul, b.last
   385c8:	ldr	w0, [sp, #252]
   385cc:	cmp	w0, #0x0
   385d0:	b.eq	38600 <__sanitizer_set_death_callback@@Base+0x7050>  // b.none
   385d4:	ldr	x0, [sp, #240]
   385d8:	ldr	x0, [x0]
   385dc:	cmp	x0, #0x0
   385e0:	b.ne	38600 <__sanitizer_set_death_callback@@Base+0x7050>  // b.any
   385e4:	ldr	x4, [sp, #32]
   385e8:	ldr	x3, [sp, #40]
   385ec:	mov	x2, #0x28                  	// #40
   385f0:	ldr	x1, [sp, #240]
   385f4:	ldr	x0, [sp, #88]
   385f8:	bl	6ac0 <__asan_backtrace_free@plt>
   385fc:	str	wzr, [sp, #252]
   38600:	ldr	w0, [sp, #252]
   38604:	cmp	w0, #0x0
   38608:	b.eq	386d8 <__sanitizer_set_death_callback@@Base+0x7128>  // b.none
   3860c:	ldr	w0, [sp, #180]
   38610:	cmp	w0, #0x0
   38614:	b.eq	38654 <__sanitizer_set_death_callback@@Base+0x70a4>  // b.none
   38618:	ldr	x0, [sp, #232]
   3861c:	str	x0, [sp]
   38620:	ldr	x7, [sp, #32]
   38624:	ldr	x6, [sp, #40]
   38628:	ldr	x5, [sp, #64]
   3862c:	ldr	x4, [sp, #184]
   38630:	ldr	x3, [sp, #240]
   38634:	ldr	x2, [sp, #72]
   38638:	ldr	x1, [sp, #80]
   3863c:	ldr	x0, [sp, #88]
   38640:	bl	37edc <__sanitizer_set_death_callback@@Base+0x692c>
   38644:	cmp	w0, #0x0
   38648:	b.ne	386d8 <__sanitizer_set_death_callback@@Base+0x7128>  // b.any
   3864c:	mov	w0, #0x0                   	// #0
   38650:	b	3880c <__sanitizer_set_death_callback@@Base+0x725c>
   38654:	ldr	w0, [sp, #212]
   38658:	cmp	w0, #0x0
   3865c:	b.eq	386bc <__sanitizer_set_death_callback@@Base+0x710c>  // b.none
   38660:	ldr	w0, [sp, #196]
   38664:	cmp	w0, #0x0
   38668:	b.eq	386bc <__sanitizer_set_death_callback@@Base+0x710c>  // b.none
   3866c:	ldr	w0, [sp, #192]
   38670:	cmp	w0, #0x0
   38674:	b.eq	38688 <__sanitizer_set_death_callback@@Base+0x70d8>  // b.none
   38678:	ldr	x1, [sp, #200]
   3867c:	ldr	x0, [sp, #216]
   38680:	add	x0, x1, x0
   38684:	str	x0, [sp, #200]
   38688:	ldr	x7, [sp, #232]
   3868c:	ldr	x6, [sp, #32]
   38690:	ldr	x5, [sp, #40]
   38694:	ldr	x4, [sp, #200]
   38698:	ldr	x3, [sp, #216]
   3869c:	ldr	x2, [sp, #240]
   386a0:	ldr	x1, [sp, #80]
   386a4:	ldr	x0, [sp, #88]
   386a8:	bl	37d70 <__sanitizer_set_death_callback@@Base+0x67c0>
   386ac:	cmp	w0, #0x0
   386b0:	b.ne	386d8 <__sanitizer_set_death_callback@@Base+0x7128>  // b.any
   386b4:	mov	w0, #0x0                   	// #0
   386b8:	b	3880c <__sanitizer_set_death_callback@@Base+0x725c>
   386bc:	ldr	x4, [sp, #32]
   386c0:	ldr	x3, [sp, #40]
   386c4:	mov	x2, #0x28                  	// #40
   386c8:	ldr	x1, [sp, #240]
   386cc:	ldr	x0, [sp, #88]
   386d0:	bl	6ac0 <__asan_backtrace_free@plt>
   386d4:	str	wzr, [sp, #252]
   386d8:	ldr	x0, [sp, #160]
   386dc:	ldr	w0, [x0, #12]
   386e0:	cmp	w0, #0x0
   386e4:	b.eq	387f8 <__sanitizer_set_death_callback@@Base+0x7248>  // b.none
   386e8:	ldr	w0, [sp, #252]
   386ec:	cmp	w0, #0x0
   386f0:	b.ne	38738 <__sanitizer_set_death_callback@@Base+0x7188>  // b.any
   386f4:	ldr	x0, [sp, #264]
   386f8:	str	x0, [sp, #8]
   386fc:	ldr	x0, [sp, #256]
   38700:	str	x0, [sp]
   38704:	ldr	x7, [sp, #32]
   38708:	ldr	x6, [sp, #40]
   3870c:	ldr	x5, [sp, #48]
   38710:	ldr	x4, [sp, #56]
   38714:	ldr	x3, [sp, #64]
   38718:	ldr	x2, [sp, #72]
   3871c:	ldr	x1, [sp, #80]
   38720:	ldr	x0, [sp, #88]
   38724:	bl	38084 <__sanitizer_set_death_callback@@Base+0x6ad4>
   38728:	cmp	w0, #0x0
   3872c:	b.ne	387f8 <__sanitizer_set_death_callback@@Base+0x7248>  // b.any
   38730:	mov	w0, #0x0                   	// #0
   38734:	b	3880c <__sanitizer_set_death_callback@@Base+0x725c>
   38738:	add	x0, sp, #0x60
   3873c:	mov	x2, #0x20                  	// #32
   38740:	mov	w1, #0x0                   	// #0
   38744:	bl	6770 <__asan_internal_memset@plt>
   38748:	add	x0, sp, #0x60
   3874c:	str	x0, [sp, #8]
   38750:	ldr	x0, [sp, #256]
   38754:	str	x0, [sp]
   38758:	ldr	x7, [sp, #32]
   3875c:	ldr	x6, [sp, #40]
   38760:	ldr	x5, [sp, #48]
   38764:	ldr	x4, [sp, #56]
   38768:	ldr	x3, [sp, #64]
   3876c:	ldr	x2, [sp, #72]
   38770:	ldr	x1, [sp, #80]
   38774:	ldr	x0, [sp, #88]
   38778:	bl	38084 <__sanitizer_set_death_callback@@Base+0x6ad4>
   3877c:	cmp	w0, #0x0
   38780:	b.ne	3878c <__sanitizer_set_death_callback@@Base+0x71dc>  // b.any
   38784:	mov	w0, #0x0                   	// #0
   38788:	b	3880c <__sanitizer_set_death_callback@@Base+0x725c>
   3878c:	ldr	x0, [sp, #120]
   38790:	cmp	x0, #0x0
   38794:	b.eq	387f8 <__sanitizer_set_death_callback@@Base+0x7248>  // b.none
   38798:	add	x0, sp, #0x60
   3879c:	ldr	x3, [sp, #32]
   387a0:	ldr	x2, [sp, #40]
   387a4:	mov	x1, x0
   387a8:	ldr	x0, [sp, #88]
   387ac:	bl	6840 <__asan_backtrace_vector_release@plt>
   387b0:	cmp	w0, #0x0
   387b4:	b.ne	387c0 <__sanitizer_set_death_callback@@Base+0x7210>  // b.any
   387b8:	mov	w0, #0x0                   	// #0
   387bc:	b	3880c <__sanitizer_set_death_callback@@Base+0x725c>
   387c0:	ldr	x0, [sp, #96]
   387c4:	str	x0, [sp, #152]
   387c8:	ldr	x1, [sp, #120]
   387cc:	adrp	x0, 35000 <__sanitizer_set_death_callback@@Base+0x3a50>
   387d0:	add	x3, x0, #0x100
   387d4:	mov	x2, #0x18                  	// #24
   387d8:	ldr	x0, [sp, #152]
   387dc:	bl	65d0 <__asan_backtrace_qsort@plt>
   387e0:	ldr	x0, [sp, #240]
   387e4:	ldr	x1, [sp, #152]
   387e8:	str	x1, [x0, #24]
   387ec:	ldr	x1, [sp, #120]
   387f0:	ldr	x0, [sp, #240]
   387f4:	str	x1, [x0, #32]
   387f8:	ldr	x0, [sp, #56]
   387fc:	ldr	x0, [x0, #24]
   38800:	cmp	x0, #0x0
   38804:	b.ne	380b4 <__sanitizer_set_death_callback@@Base+0x6b04>  // b.any
   38808:	mov	w0, #0x1                   	// #1
   3880c:	ldp	x29, x30, [sp, #16]
   38810:	add	sp, sp, #0x100
   38814:	ret
   38818:	sub	sp, sp, #0xe0
   3881c:	stp	x29, x30, [sp, #16]
   38820:	add	x29, sp, #0x10
   38824:	str	x0, [sp, #88]
   38828:	str	x1, [sp, #80]
   3882c:	str	x2, [sp, #72]
   38830:	str	x3, [sp, #64]
   38834:	str	x4, [sp, #56]
   38838:	str	x5, [sp, #48]
   3883c:	str	x6, [sp, #40]
   38840:	str	x7, [sp, #32]
   38844:	ldr	x0, [sp, #40]
   38848:	cmp	x0, #0x0
   3884c:	b.eq	3885c <__sanitizer_set_death_callback@@Base+0x72ac>  // b.none
   38850:	ldr	x0, [sp, #40]
   38854:	str	x0, [sp, #216]
   38858:	b	38874 <__sanitizer_set_death_callback@@Base+0x72c4>
   3885c:	add	x0, sp, #0xa8
   38860:	mov	x2, #0x20                  	// #32
   38864:	mov	w1, #0x0                   	// #0
   38868:	bl	6770 <__asan_internal_memset@plt>
   3886c:	add	x0, sp, #0xa8
   38870:	str	x0, [sp, #216]
   38874:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   38878:	add	x0, x0, #0x2b0
   3887c:	str	x0, [sp, #104]
   38880:	ldr	x0, [sp, #80]
   38884:	ldr	x0, [x0, #56]
   38888:	str	x0, [sp, #112]
   3888c:	ldr	x0, [sp, #48]
   38890:	ldr	x0, [x0]
   38894:	str	x0, [sp, #120]
   38898:	ldr	x0, [sp, #48]
   3889c:	ldr	x0, [x0, #8]
   388a0:	str	x0, [sp, #128]
   388a4:	ldr	x0, [sp, #80]
   388a8:	ldr	w0, [x0, #120]
   388ac:	str	w0, [sp, #136]
   388b0:	ldr	x0, [sp, #64]
   388b4:	str	x0, [sp, #144]
   388b8:	ldr	x0, [sp, #56]
   388bc:	str	x0, [sp, #152]
   388c0:	str	wzr, [sp, #160]
   388c4:	b	38908 <__sanitizer_set_death_callback@@Base+0x7358>
   388c8:	add	x1, sp, #0x68
   388cc:	ldr	x0, [sp, #216]
   388d0:	str	x0, [sp, #8]
   388d4:	ldr	x0, [sp, #216]
   388d8:	str	x0, [sp]
   388dc:	ldr	x7, [sp, #56]
   388e0:	ldr	x6, [sp, #64]
   388e4:	ldr	x5, [sp, #72]
   388e8:	mov	x4, x1
   388ec:	mov	x3, #0x0                   	// #0
   388f0:	ldr	x2, [sp, #48]
   388f4:	ldr	x1, [sp, #80]
   388f8:	ldr	x0, [sp, #88]
   388fc:	bl	38084 <__sanitizer_set_death_callback@@Base+0x6ad4>
   38900:	cmp	w0, #0x0
   38904:	b.eq	389d0 <__sanitizer_set_death_callback@@Base+0x7420>  // b.none
   38908:	ldr	x0, [sp, #128]
   3890c:	cmp	x0, #0x0
   38910:	b.ne	388c8 <__sanitizer_set_death_callback@@Base+0x7318>  // b.any
   38914:	ldr	x0, [sp, #216]
   38918:	ldr	x0, [x0, #24]
   3891c:	cmp	x0, #0x0
   38920:	b.eq	389d8 <__sanitizer_set_death_callback@@Base+0x7428>  // b.none
   38924:	ldr	x0, [sp, #216]
   38928:	ldr	x0, [x0, #24]
   3892c:	str	x0, [sp, #200]
   38930:	ldr	x0, [sp, #40]
   38934:	cmp	x0, #0x0
   38938:	b.ne	3896c <__sanitizer_set_death_callback@@Base+0x73bc>  // b.any
   3893c:	add	x0, sp, #0xa8
   38940:	ldr	x3, [sp, #56]
   38944:	ldr	x2, [sp, #64]
   38948:	mov	x1, x0
   3894c:	ldr	x0, [sp, #88]
   38950:	bl	6840 <__asan_backtrace_vector_release@plt>
   38954:	cmp	w0, #0x0
   38958:	b.eq	389e0 <__sanitizer_set_death_callback@@Base+0x7430>  // b.none
   3895c:	ldr	x0, [sp, #216]
   38960:	ldr	x0, [x0]
   38964:	str	x0, [sp, #208]
   38968:	b	3899c <__sanitizer_set_death_callback@@Base+0x73ec>
   3896c:	ldr	x0, [sp, #40]
   38970:	ldr	x3, [sp, #56]
   38974:	ldr	x2, [sp, #64]
   38978:	mov	x1, x0
   3897c:	ldr	x0, [sp, #88]
   38980:	bl	6b90 <__asan_backtrace_vector_finish@plt>
   38984:	str	x0, [sp, #208]
   38988:	ldr	x0, [sp, #208]
   3898c:	cmp	x0, #0x0
   38990:	b.eq	389e8 <__sanitizer_set_death_callback@@Base+0x7438>  // b.none
   38994:	ldr	x0, [sp, #40]
   38998:	str	xzr, [x0, #24]
   3899c:	adrp	x0, 35000 <__sanitizer_set_death_callback@@Base+0x3a50>
   389a0:	add	x3, x0, #0x100
   389a4:	mov	x2, #0x18                  	// #24
   389a8:	ldr	x1, [sp, #200]
   389ac:	ldr	x0, [sp, #208]
   389b0:	bl	65d0 <__asan_backtrace_qsort@plt>
   389b4:	ldr	x0, [sp, #32]
   389b8:	ldr	x1, [sp, #208]
   389bc:	str	x1, [x0]
   389c0:	ldr	x0, [sp, #224]
   389c4:	ldr	x1, [sp, #200]
   389c8:	str	x1, [x0]
   389cc:	b	389ec <__sanitizer_set_death_callback@@Base+0x743c>
   389d0:	nop
   389d4:	b	389ec <__sanitizer_set_death_callback@@Base+0x743c>
   389d8:	nop
   389dc:	b	389ec <__sanitizer_set_death_callback@@Base+0x743c>
   389e0:	nop
   389e4:	b	389ec <__sanitizer_set_death_callback@@Base+0x743c>
   389e8:	nop
   389ec:	ldp	x29, x30, [sp, #16]
   389f0:	add	sp, sp, #0xe0
   389f4:	ret
   389f8:	stp	x29, x30, [sp, #-96]!
   389fc:	mov	x29, sp
   38a00:	str	x0, [sp, #56]
   38a04:	str	x1, [sp, #48]
   38a08:	str	x2, [sp, #40]
   38a0c:	str	x3, [sp, #32]
   38a10:	str	x4, [sp, #24]
   38a14:	str	x5, [sp, #16]
   38a18:	ldr	x0, [sp, #48]
   38a1c:	ldr	x0, [x0, #32]
   38a20:	cmp	x0, #0x0
   38a24:	b.ne	38a30 <__sanitizer_set_death_callback@@Base+0x7480>  // b.any
   38a28:	mov	w0, #0x0                   	// #0
   38a2c:	b	38b88 <__sanitizer_set_death_callback@@Base+0x75d8>
   38a30:	ldr	x0, [sp, #48]
   38a34:	ldr	x1, [x0, #24]
   38a38:	ldr	x0, [sp, #48]
   38a3c:	ldr	x2, [x0, #32]
   38a40:	add	x5, sp, #0x38
   38a44:	adrp	x0, 35000 <__sanitizer_set_death_callback@@Base+0x3a50>
   38a48:	add	x4, x0, #0x1cc
   38a4c:	mov	x3, #0x18                  	// #24
   38a50:	mov	x0, x5
   38a54:	bl	6af0 <bsearch@plt>
   38a58:	str	x0, [sp, #88]
   38a5c:	ldr	x0, [sp, #88]
   38a60:	cmp	x0, #0x0
   38a64:	b.ne	38a7c <__sanitizer_set_death_callback@@Base+0x74cc>  // b.any
   38a68:	mov	w0, #0x0                   	// #0
   38a6c:	b	38b88 <__sanitizer_set_death_callback@@Base+0x75d8>
   38a70:	ldr	x0, [sp, #88]
   38a74:	add	x0, x0, #0x18
   38a78:	str	x0, [sp, #88]
   38a7c:	ldr	x0, [sp, #48]
   38a80:	ldr	x0, [x0, #24]
   38a84:	ldr	x1, [sp, #88]
   38a88:	sub	x0, x1, x0
   38a8c:	asr	x1, x0, #3
   38a90:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   38a94:	movk	x0, #0xaaab
   38a98:	mul	x0, x1, x0
   38a9c:	add	x1, x0, #0x1
   38aa0:	ldr	x0, [sp, #48]
   38aa4:	ldr	x0, [x0, #32]
   38aa8:	cmp	x1, x0
   38aac:	b.cs	38ae0 <__sanitizer_set_death_callback@@Base+0x7530>  // b.hs, b.nlast
   38ab0:	ldr	x0, [sp, #88]
   38ab4:	add	x0, x0, #0x18
   38ab8:	ldr	x1, [x0]
   38abc:	ldr	x0, [sp, #56]
   38ac0:	cmp	x1, x0
   38ac4:	b.hi	38ae0 <__sanitizer_set_death_callback@@Base+0x7530>  // b.pmore
   38ac8:	ldr	x0, [sp, #88]
   38acc:	add	x0, x0, #0x18
   38ad0:	ldr	x1, [x0, #8]
   38ad4:	ldr	x0, [sp, #56]
   38ad8:	cmp	x1, x0
   38adc:	b.hi	38a70 <__sanitizer_set_death_callback@@Base+0x74c0>  // b.pmore
   38ae0:	ldr	x0, [sp, #88]
   38ae4:	ldr	x0, [x0, #16]
   38ae8:	str	x0, [sp, #80]
   38aec:	ldr	x0, [sp, #56]
   38af0:	ldr	x5, [sp, #16]
   38af4:	ldr	x4, [sp, #24]
   38af8:	ldr	x3, [sp, #32]
   38afc:	ldr	x2, [sp, #40]
   38b00:	ldr	x1, [sp, #80]
   38b04:	bl	389f8 <__sanitizer_set_death_callback@@Base+0x7448>
   38b08:	str	w0, [sp, #76]
   38b0c:	ldr	w0, [sp, #76]
   38b10:	cmp	w0, #0x0
   38b14:	b.eq	38b20 <__sanitizer_set_death_callback@@Base+0x7570>  // b.none
   38b18:	ldr	w0, [sp, #76]
   38b1c:	b	38b88 <__sanitizer_set_death_callback@@Base+0x75d8>
   38b20:	ldr	x1, [sp, #56]
   38b24:	ldr	x0, [sp, #24]
   38b28:	ldr	x2, [x0]
   38b2c:	ldr	x0, [sp, #16]
   38b30:	ldr	w3, [x0]
   38b34:	ldr	x0, [sp, #80]
   38b38:	ldr	x0, [x0]
   38b3c:	ldr	x5, [sp, #40]
   38b40:	mov	x4, x0
   38b44:	ldr	x0, [sp, #32]
   38b48:	blr	x5
   38b4c:	str	w0, [sp, #76]
   38b50:	ldr	w0, [sp, #76]
   38b54:	cmp	w0, #0x0
   38b58:	b.eq	38b64 <__sanitizer_set_death_callback@@Base+0x75b4>  // b.none
   38b5c:	ldr	w0, [sp, #76]
   38b60:	b	38b88 <__sanitizer_set_death_callback@@Base+0x75d8>
   38b64:	ldr	x0, [sp, #80]
   38b68:	ldr	x1, [x0, #8]
   38b6c:	ldr	x0, [sp, #24]
   38b70:	str	x1, [x0]
   38b74:	ldr	x0, [sp, #80]
   38b78:	ldr	w1, [x0, #16]
   38b7c:	ldr	x0, [sp, #16]
   38b80:	str	w1, [x0]
   38b84:	mov	w0, #0x0                   	// #0
   38b88:	ldp	x29, x30, [sp], #96
   38b8c:	ret
   38b90:	sub	sp, sp, #0x130
   38b94:	stp	x29, x30, [sp, #16]
   38b98:	add	x29, sp, #0x10
   38b9c:	str	x0, [sp, #88]
   38ba0:	str	x1, [sp, #80]
   38ba4:	str	x2, [sp, #72]
   38ba8:	str	x3, [sp, #64]
   38bac:	str	x4, [sp, #56]
   38bb0:	str	x5, [sp, #48]
   38bb4:	str	x6, [sp, #40]
   38bb8:	ldr	x0, [sp, #40]
   38bbc:	mov	w1, #0x1                   	// #1
   38bc0:	str	w1, [x0]
   38bc4:	ldr	x0, [sp, #80]
   38bc8:	ldr	x0, [x0, #32]
   38bcc:	cmp	x0, #0x0
   38bd0:	b.eq	38c00 <__sanitizer_set_death_callback@@Base+0x7650>  // b.none
   38bd4:	ldr	x0, [sp, #80]
   38bd8:	ldr	x1, [x0, #24]
   38bdc:	ldr	x0, [sp, #80]
   38be0:	ldr	x2, [x0, #32]
   38be4:	add	x5, sp, #0x48
   38be8:	adrp	x0, 35000 <__sanitizer_set_death_callback@@Base+0x3a50>
   38bec:	add	x4, x0, #0x48c
   38bf0:	mov	x3, #0x18                  	// #24
   38bf4:	mov	x0, x5
   38bf8:	bl	6af0 <bsearch@plt>
   38bfc:	b	38c04 <__sanitizer_set_death_callback@@Base+0x7654>
   38c00:	mov	x0, #0x0                   	// #0
   38c04:	str	x0, [sp, #296]
   38c08:	ldr	x0, [sp, #296]
   38c0c:	cmp	x0, #0x0
   38c10:	b.ne	38c30 <__sanitizer_set_death_callback@@Base+0x7680>  // b.any
   38c14:	ldr	x0, [sp, #40]
   38c18:	str	wzr, [x0]
   38c1c:	mov	w0, #0x0                   	// #0
   38c20:	b	39260 <__sanitizer_set_death_callback@@Base+0x7cb0>
   38c24:	ldr	x0, [sp, #296]
   38c28:	add	x0, x0, #0x18
   38c2c:	str	x0, [sp, #296]
   38c30:	ldr	x0, [sp, #80]
   38c34:	ldr	x0, [x0, #24]
   38c38:	ldr	x1, [sp, #296]
   38c3c:	sub	x0, x1, x0
   38c40:	asr	x1, x0, #3
   38c44:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   38c48:	movk	x0, #0xaaab
   38c4c:	mul	x0, x1, x0
   38c50:	add	x1, x0, #0x1
   38c54:	ldr	x0, [sp, #80]
   38c58:	ldr	x0, [x0, #32]
   38c5c:	cmp	x1, x0
   38c60:	b.cs	38c94 <__sanitizer_set_death_callback@@Base+0x76e4>  // b.hs, b.nlast
   38c64:	ldr	x0, [sp, #296]
   38c68:	add	x0, x0, #0x18
   38c6c:	ldr	x1, [x0]
   38c70:	ldr	x0, [sp, #72]
   38c74:	cmp	x1, x0
   38c78:	b.hi	38c94 <__sanitizer_set_death_callback@@Base+0x76e4>  // b.pmore
   38c7c:	ldr	x0, [sp, #296]
   38c80:	add	x0, x0, #0x18
   38c84:	ldr	x1, [x0, #8]
   38c88:	ldr	x0, [sp, #72]
   38c8c:	cmp	x1, x0
   38c90:	b.hi	38c24 <__sanitizer_set_death_callback@@Base+0x7674>  // b.pmore
   38c94:	ldr	x0, [sp, #296]
   38c98:	ldr	x0, [x0, #16]
   38c9c:	str	x0, [sp, #288]
   38ca0:	ldr	x0, [sp, #288]
   38ca4:	ldr	x0, [x0, #104]
   38ca8:	str	x0, [sp, #200]
   38cac:	b	38d00 <__sanitizer_set_death_callback@@Base+0x7750>
   38cb0:	ldr	x0, [sp, #88]
   38cb4:	ldr	w0, [x0, #8]
   38cb8:	cmp	w0, #0x0
   38cbc:	b.eq	38cd0 <__sanitizer_set_death_callback@@Base+0x7720>  // b.none
   38cc0:	ldr	x0, [sp, #288]
   38cc4:	add	x0, x0, #0x68
   38cc8:	ldar	x0, [x0]
   38ccc:	str	x0, [sp, #200]
   38cd0:	ldr	x0, [sp, #200]
   38cd4:	cmn	x0, #0x1
   38cd8:	b.ne	38d48 <__sanitizer_set_death_callback@@Base+0x7798>  // b.any
   38cdc:	ldr	x0, [sp, #296]
   38ce0:	sub	x0, x0, #0x18
   38ce4:	str	x0, [sp, #296]
   38ce8:	ldr	x0, [sp, #296]
   38cec:	ldr	x0, [x0, #16]
   38cf0:	str	x0, [sp, #288]
   38cf4:	ldr	x0, [sp, #288]
   38cf8:	ldr	x0, [x0, #104]
   38cfc:	str	x0, [sp, #200]
   38d00:	ldr	x0, [sp, #80]
   38d04:	ldr	x0, [x0, #24]
   38d08:	ldr	x1, [sp, #296]
   38d0c:	cmp	x1, x0
   38d10:	b.ls	38d4c <__sanitizer_set_death_callback@@Base+0x779c>  // b.plast
   38d14:	ldr	x0, [sp, #296]
   38d18:	sub	x0, x0, #0x18
   38d1c:	ldr	x1, [x0]
   38d20:	ldr	x0, [sp, #72]
   38d24:	cmp	x1, x0
   38d28:	b.hi	38d4c <__sanitizer_set_death_callback@@Base+0x779c>  // b.pmore
   38d2c:	ldr	x0, [sp, #296]
   38d30:	sub	x0, x0, #0x18
   38d34:	ldr	x1, [x0, #8]
   38d38:	ldr	x0, [sp, #72]
   38d3c:	cmp	x1, x0
   38d40:	b.hi	38cb0 <__sanitizer_set_death_callback@@Base+0x7700>  // b.pmore
   38d44:	b	38d4c <__sanitizer_set_death_callback@@Base+0x779c>
   38d48:	nop
   38d4c:	ldr	x0, [sp, #88]
   38d50:	ldr	w0, [x0, #8]
   38d54:	cmp	w0, #0x0
   38d58:	b.eq	38d6c <__sanitizer_set_death_callback@@Base+0x77bc>  // b.none
   38d5c:	ldr	x0, [sp, #288]
   38d60:	add	x0, x0, #0x68
   38d64:	ldar	x0, [x0]
   38d68:	str	x0, [sp, #200]
   38d6c:	str	wzr, [sp, #284]
   38d70:	ldr	x0, [sp, #200]
   38d74:	cmp	x0, #0x0
   38d78:	b.ne	38ec8 <__sanitizer_set_death_callback@@Base+0x7918>  // b.any
   38d7c:	str	xzr, [sp, #192]
   38d80:	str	xzr, [sp, #168]
   38d84:	ldr	x0, [sp, #296]
   38d88:	ldr	x0, [x0, #16]
   38d8c:	add	x3, sp, #0xa0
   38d90:	add	x2, sp, #0xc8
   38d94:	add	x1, sp, #0x60
   38d98:	mov	x7, x3
   38d9c:	mov	x6, x2
   38da0:	mov	x5, x1
   38da4:	mov	x4, x0
   38da8:	ldr	x3, [sp, #48]
   38dac:	ldr	x2, [sp, #56]
   38db0:	ldr	x1, [sp, #80]
   38db4:	ldr	x0, [sp, #88]
   38db8:	bl	3762c <__sanitizer_set_death_callback@@Base+0x607c>
   38dbc:	cmp	w0, #0x0
   38dc0:	b.eq	38e44 <__sanitizer_set_death_callback@@Base+0x7894>  // b.none
   38dc4:	ldr	x0, [sp, #88]
   38dc8:	ldr	w0, [x0, #8]
   38dcc:	cmp	w0, #0x0
   38dd0:	b.eq	38ddc <__sanitizer_set_death_callback@@Base+0x782c>  // b.none
   38dd4:	str	xzr, [sp, #272]
   38dd8:	b	38de8 <__sanitizer_set_death_callback@@Base+0x7838>
   38ddc:	ldr	x0, [sp, #80]
   38de0:	add	x0, x0, #0x80
   38de4:	str	x0, [sp, #272]
   38de8:	ldr	x0, [sp, #296]
   38dec:	ldr	x2, [x0, #16]
   38df0:	add	x3, sp, #0xc0
   38df4:	add	x1, sp, #0x60
   38df8:	add	x0, sp, #0xa8
   38dfc:	str	x0, [sp]
   38e00:	mov	x7, x3
   38e04:	ldr	x6, [sp, #272]
   38e08:	mov	x5, x2
   38e0c:	ldr	x4, [sp, #48]
   38e10:	ldr	x3, [sp, #56]
   38e14:	mov	x2, x1
   38e18:	ldr	x1, [sp, #80]
   38e1c:	ldr	x0, [sp, #88]
   38e20:	bl	38818 <__sanitizer_set_death_callback@@Base+0x7268>
   38e24:	add	x0, sp, #0x60
   38e28:	ldr	x3, [sp, #48]
   38e2c:	ldr	x2, [sp, #56]
   38e30:	mov	x1, x0
   38e34:	ldr	x0, [sp, #88]
   38e38:	bl	3680c <__sanitizer_set_death_callback@@Base+0x525c>
   38e3c:	mov	w0, #0x1                   	// #1
   38e40:	str	w0, [sp, #284]
   38e44:	ldr	x0, [sp, #88]
   38e48:	ldr	w0, [x0, #8]
   38e4c:	cmp	w0, #0x0
   38e50:	b.ne	38e88 <__sanitizer_set_death_callback@@Base+0x78d8>  // b.any
   38e54:	ldr	x1, [sp, #160]
   38e58:	ldr	x0, [sp, #288]
   38e5c:	str	x1, [x0, #112]
   38e60:	ldr	x1, [sp, #192]
   38e64:	ldr	x0, [sp, #288]
   38e68:	str	x1, [x0, #120]
   38e6c:	ldr	x1, [sp, #168]
   38e70:	ldr	x0, [sp, #288]
   38e74:	str	x1, [x0, #128]
   38e78:	ldr	x1, [sp, #200]
   38e7c:	ldr	x0, [sp, #288]
   38e80:	str	x1, [x0, #104]
   38e84:	b	38ec8 <__sanitizer_set_death_callback@@Base+0x7918>
   38e88:	ldr	x0, [sp, #288]
   38e8c:	add	x0, x0, #0x70
   38e90:	ldr	x1, [sp, #160]
   38e94:	stlr	x1, [x0]
   38e98:	ldr	x0, [sp, #288]
   38e9c:	add	x0, x0, #0x78
   38ea0:	ldr	x1, [sp, #192]
   38ea4:	stlr	x1, [x0]
   38ea8:	ldr	x0, [sp, #288]
   38eac:	add	x0, x0, #0x80
   38eb0:	ldr	x1, [sp, #168]
   38eb4:	stlr	x1, [x0]
   38eb8:	ldr	x0, [sp, #288]
   38ebc:	add	x0, x0, #0x68
   38ec0:	ldr	x1, [sp, #200]
   38ec4:	stlr	x1, [x0]
   38ec8:	ldr	x0, [sp, #200]
   38ecc:	cmn	x0, #0x1
   38ed0:	b.ne	38f2c <__sanitizer_set_death_callback@@Base+0x797c>  // b.any
   38ed4:	ldr	w0, [sp, #284]
   38ed8:	cmp	w0, #0x0
   38edc:	b.eq	38f08 <__sanitizer_set_death_callback@@Base+0x7958>  // b.none
   38ee0:	ldr	x0, [sp, #72]
   38ee4:	ldr	x6, [sp, #40]
   38ee8:	ldr	x5, [sp, #48]
   38eec:	ldr	x4, [sp, #56]
   38ef0:	ldr	x3, [sp, #64]
   38ef4:	mov	x2, x0
   38ef8:	ldr	x1, [sp, #80]
   38efc:	ldr	x0, [sp, #88]
   38f00:	bl	38b90 <__sanitizer_set_death_callback@@Base+0x75e0>
   38f04:	b	39260 <__sanitizer_set_death_callback@@Base+0x7cb0>
   38f08:	ldr	x0, [sp, #72]
   38f0c:	ldr	x5, [sp, #64]
   38f10:	mov	x4, #0x0                   	// #0
   38f14:	mov	w3, #0x0                   	// #0
   38f18:	mov	x2, #0x0                   	// #0
   38f1c:	mov	x1, x0
   38f20:	ldr	x0, [sp, #48]
   38f24:	blr	x5
   38f28:	b	39260 <__sanitizer_set_death_callback@@Base+0x7cb0>
   38f2c:	ldr	x1, [sp, #200]
   38f30:	ldr	x0, [sp, #296]
   38f34:	ldr	x0, [x0, #16]
   38f38:	ldr	x2, [x0, #112]
   38f3c:	add	x5, sp, #0x48
   38f40:	adrp	x0, 35000 <__sanitizer_set_death_callback@@Base+0x3a50>
   38f44:	add	x4, x0, #0x5a0
   38f48:	mov	x3, #0x18                  	// #24
   38f4c:	mov	x0, x5
   38f50:	bl	6af0 <bsearch@plt>
   38f54:	str	x0, [sp, #256]
   38f58:	ldr	x0, [sp, #256]
   38f5c:	cmp	x0, #0x0
   38f60:	b.ne	390b4 <__sanitizer_set_death_callback@@Base+0x7b04>  // b.any
   38f64:	ldr	x0, [sp, #296]
   38f68:	ldr	x0, [x0, #16]
   38f6c:	ldr	x0, [x0, #80]
   38f70:	cmp	x0, #0x0
   38f74:	b.ne	39088 <__sanitizer_set_death_callback@@Base+0x7ad8>  // b.any
   38f78:	ldr	x0, [sp, #296]
   38f7c:	ldr	x0, [x0, #16]
   38f80:	ldr	x0, [x0, #64]
   38f84:	str	x0, [sp, #264]
   38f88:	ldr	x0, [sp, #264]
   38f8c:	cmp	x0, #0x0
   38f90:	b.eq	39078 <__sanitizer_set_death_callback@@Base+0x7ac8>  // b.none
   38f94:	ldr	x0, [sp, #264]
   38f98:	ldrb	w0, [x0]
   38f9c:	cmp	w0, #0x2f
   38fa0:	b.eq	39078 <__sanitizer_set_death_callback@@Base+0x7ac8>  // b.none
   38fa4:	ldr	x0, [sp, #296]
   38fa8:	ldr	x0, [x0, #16]
   38fac:	ldr	x0, [x0, #72]
   38fb0:	cmp	x0, #0x0
   38fb4:	b.eq	39078 <__sanitizer_set_death_callback@@Base+0x7ac8>  // b.none
   38fb8:	ldr	x0, [sp, #264]
   38fbc:	bl	66e0 <__asan_internal_strlen@plt>
   38fc0:	str	x0, [sp, #232]
   38fc4:	ldr	x0, [sp, #296]
   38fc8:	ldr	x0, [x0, #16]
   38fcc:	ldr	x0, [x0, #72]
   38fd0:	str	x0, [sp, #224]
   38fd4:	ldr	x0, [sp, #224]
   38fd8:	bl	66e0 <__asan_internal_strlen@plt>
   38fdc:	str	x0, [sp, #216]
   38fe0:	ldr	x1, [sp, #216]
   38fe4:	ldr	x0, [sp, #232]
   38fe8:	add	x0, x1, x0
   38fec:	add	x0, x0, #0x2
   38ff0:	ldr	x3, [sp, #48]
   38ff4:	ldr	x2, [sp, #56]
   38ff8:	mov	x1, x0
   38ffc:	ldr	x0, [sp, #88]
   39000:	bl	67f0 <__asan_backtrace_alloc@plt>
   39004:	str	x0, [sp, #208]
   39008:	ldr	x0, [sp, #208]
   3900c:	cmp	x0, #0x0
   39010:	b.ne	39024 <__sanitizer_set_death_callback@@Base+0x7a74>  // b.any
   39014:	ldr	x0, [sp, #40]
   39018:	str	wzr, [x0]
   3901c:	mov	w0, #0x0                   	// #0
   39020:	b	39260 <__sanitizer_set_death_callback@@Base+0x7cb0>
   39024:	ldr	x2, [sp, #216]
   39028:	ldr	x1, [sp, #224]
   3902c:	ldr	x0, [sp, #208]
   39030:	bl	66d0 <__asan_internal_memcpy@plt>
   39034:	ldr	x1, [sp, #208]
   39038:	ldr	x0, [sp, #216]
   3903c:	add	x0, x1, x0
   39040:	mov	w1, #0x2f                  	// #47
   39044:	strb	w1, [x0]
   39048:	ldr	x0, [sp, #216]
   3904c:	add	x0, x0, #0x1
   39050:	ldr	x1, [sp, #208]
   39054:	add	x3, x1, x0
   39058:	ldr	x0, [sp, #232]
   3905c:	add	x0, x0, #0x1
   39060:	mov	x2, x0
   39064:	ldr	x1, [sp, #264]
   39068:	mov	x0, x3
   3906c:	bl	66d0 <__asan_internal_memcpy@plt>
   39070:	ldr	x0, [sp, #208]
   39074:	str	x0, [sp, #264]
   39078:	ldr	x0, [sp, #296]
   3907c:	ldr	x0, [x0, #16]
   39080:	ldr	x1, [sp, #264]
   39084:	str	x1, [x0, #80]
   39088:	ldr	x1, [sp, #72]
   3908c:	ldr	x0, [sp, #296]
   39090:	ldr	x0, [x0, #16]
   39094:	ldr	x0, [x0, #80]
   39098:	ldr	x5, [sp, #64]
   3909c:	mov	x4, #0x0                   	// #0
   390a0:	mov	w3, #0x0                   	// #0
   390a4:	mov	x2, x0
   390a8:	ldr	x0, [sp, #48]
   390ac:	blr	x5
   390b0:	b	39260 <__sanitizer_set_death_callback@@Base+0x7cb0>
   390b4:	ldr	x0, [sp, #296]
   390b8:	ldr	x0, [x0, #16]
   390bc:	ldr	x0, [x0, #128]
   390c0:	cmp	x0, #0x0
   390c4:	b.ne	390f4 <__sanitizer_set_death_callback@@Base+0x7b44>  // b.any
   390c8:	ldr	x1, [sp, #72]
   390cc:	ldr	x0, [sp, #256]
   390d0:	ldr	x2, [x0, #8]
   390d4:	ldr	x0, [sp, #256]
   390d8:	ldr	w0, [x0, #16]
   390dc:	ldr	x5, [sp, #64]
   390e0:	mov	x4, #0x0                   	// #0
   390e4:	mov	w3, w0
   390e8:	ldr	x0, [sp, #48]
   390ec:	blr	x5
   390f0:	b	39260 <__sanitizer_set_death_callback@@Base+0x7cb0>
   390f4:	ldr	x0, [sp, #296]
   390f8:	ldr	x0, [x0, #16]
   390fc:	ldr	x1, [x0, #120]
   39100:	ldr	x0, [sp, #296]
   39104:	ldr	x0, [x0, #16]
   39108:	ldr	x2, [x0, #128]
   3910c:	add	x5, sp, #0x48
   39110:	adrp	x0, 35000 <__sanitizer_set_death_callback@@Base+0x3a50>
   39114:	add	x4, x0, #0x1cc
   39118:	mov	x3, #0x18                  	// #24
   3911c:	mov	x0, x5
   39120:	bl	6af0 <bsearch@plt>
   39124:	str	x0, [sp, #192]
   39128:	ldr	x0, [sp, #192]
   3912c:	cmp	x0, #0x0
   39130:	b.ne	3916c <__sanitizer_set_death_callback@@Base+0x7bbc>  // b.any
   39134:	ldr	x1, [sp, #72]
   39138:	ldr	x0, [sp, #256]
   3913c:	ldr	x2, [x0, #8]
   39140:	ldr	x0, [sp, #256]
   39144:	ldr	w0, [x0, #16]
   39148:	ldr	x5, [sp, #64]
   3914c:	mov	x4, #0x0                   	// #0
   39150:	mov	w3, w0
   39154:	ldr	x0, [sp, #48]
   39158:	blr	x5
   3915c:	b	39260 <__sanitizer_set_death_callback@@Base+0x7cb0>
   39160:	ldr	x0, [sp, #192]
   39164:	add	x0, x0, #0x18
   39168:	str	x0, [sp, #192]
   3916c:	ldr	x1, [sp, #192]
   39170:	ldr	x0, [sp, #296]
   39174:	ldr	x0, [x0, #16]
   39178:	ldr	x0, [x0, #120]
   3917c:	sub	x0, x1, x0
   39180:	asr	x1, x0, #3
   39184:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   39188:	movk	x0, #0xaaab
   3918c:	mul	x0, x1, x0
   39190:	add	x0, x0, #0x1
   39194:	mov	x1, x0
   39198:	ldr	x0, [sp, #296]
   3919c:	ldr	x0, [x0, #16]
   391a0:	ldr	x0, [x0, #128]
   391a4:	cmp	x1, x0
   391a8:	b.cs	391dc <__sanitizer_set_death_callback@@Base+0x7c2c>  // b.hs, b.nlast
   391ac:	ldr	x0, [sp, #192]
   391b0:	add	x0, x0, #0x18
   391b4:	ldr	x1, [x0]
   391b8:	ldr	x0, [sp, #72]
   391bc:	cmp	x1, x0
   391c0:	b.hi	391dc <__sanitizer_set_death_callback@@Base+0x7c2c>  // b.pmore
   391c4:	ldr	x0, [sp, #192]
   391c8:	add	x0, x0, #0x18
   391cc:	ldr	x1, [x0, #8]
   391d0:	ldr	x0, [sp, #72]
   391d4:	cmp	x1, x0
   391d8:	b.hi	39160 <__sanitizer_set_death_callback@@Base+0x7bb0>  // b.pmore
   391dc:	ldr	x0, [sp, #192]
   391e0:	ldr	x0, [x0, #16]
   391e4:	str	x0, [sp, #248]
   391e8:	ldr	x0, [sp, #256]
   391ec:	ldr	x0, [x0, #8]
   391f0:	str	x0, [sp, #184]
   391f4:	ldr	x0, [sp, #256]
   391f8:	ldr	w0, [x0, #16]
   391fc:	str	w0, [sp, #180]
   39200:	ldr	x0, [sp, #72]
   39204:	add	x2, sp, #0xb4
   39208:	add	x1, sp, #0xb8
   3920c:	mov	x5, x2
   39210:	mov	x4, x1
   39214:	ldr	x3, [sp, #48]
   39218:	ldr	x2, [sp, #64]
   3921c:	ldr	x1, [sp, #248]
   39220:	bl	389f8 <__sanitizer_set_death_callback@@Base+0x7448>
   39224:	str	w0, [sp, #244]
   39228:	ldr	w0, [sp, #244]
   3922c:	cmp	w0, #0x0
   39230:	b.eq	3923c <__sanitizer_set_death_callback@@Base+0x7c8c>  // b.none
   39234:	ldr	w0, [sp, #244]
   39238:	b	39260 <__sanitizer_set_death_callback@@Base+0x7cb0>
   3923c:	ldr	x1, [sp, #72]
   39240:	ldr	x2, [sp, #184]
   39244:	ldr	w3, [sp, #180]
   39248:	ldr	x0, [sp, #248]
   3924c:	ldr	x0, [x0]
   39250:	ldr	x5, [sp, #64]
   39254:	mov	x4, x0
   39258:	ldr	x0, [sp, #48]
   3925c:	blr	x5
   39260:	ldp	x29, x30, [sp, #16]
   39264:	add	sp, sp, #0x130
   39268:	ret
   3926c:	stp	x29, x30, [sp, #-96]!
   39270:	mov	x29, sp
   39274:	str	x0, [sp, #56]
   39278:	str	x1, [sp, #48]
   3927c:	str	x2, [sp, #40]
   39280:	str	x3, [sp, #32]
   39284:	str	x4, [sp, #24]
   39288:	ldr	x0, [sp, #56]
   3928c:	ldr	w0, [x0, #8]
   39290:	cmp	w0, #0x0
   39294:	b.ne	3930c <__sanitizer_set_death_callback@@Base+0x7d5c>  // b.any
   39298:	ldr	x0, [sp, #56]
   3929c:	ldr	x0, [x0, #32]
   392a0:	str	x0, [sp, #88]
   392a4:	b	392fc <__sanitizer_set_death_callback@@Base+0x7d4c>
   392a8:	add	x0, sp, #0x48
   392ac:	mov	x6, x0
   392b0:	ldr	x5, [sp, #24]
   392b4:	ldr	x4, [sp, #32]
   392b8:	ldr	x3, [sp, #40]
   392bc:	ldr	x2, [sp, #48]
   392c0:	ldr	x1, [sp, #88]
   392c4:	ldr	x0, [sp, #56]
   392c8:	bl	38b90 <__sanitizer_set_death_callback@@Base+0x75e0>
   392cc:	str	w0, [sp, #76]
   392d0:	ldr	w0, [sp, #76]
   392d4:	cmp	w0, #0x0
   392d8:	b.ne	392e8 <__sanitizer_set_death_callback@@Base+0x7d38>  // b.any
   392dc:	ldr	w0, [sp, #72]
   392e0:	cmp	w0, #0x0
   392e4:	b.eq	392f0 <__sanitizer_set_death_callback@@Base+0x7d40>  // b.none
   392e8:	ldr	w0, [sp, #76]
   392ec:	b	393a4 <__sanitizer_set_death_callback@@Base+0x7df4>
   392f0:	ldr	x0, [sp, #88]
   392f4:	ldr	x0, [x0]
   392f8:	str	x0, [sp, #88]
   392fc:	ldr	x0, [sp, #88]
   39300:	cmp	x0, #0x0
   39304:	b.ne	392a8 <__sanitizer_set_death_callback@@Base+0x7cf8>  // b.any
   39308:	b	39388 <__sanitizer_set_death_callback@@Base+0x7dd8>
   3930c:	ldr	x0, [sp, #56]
   39310:	add	x0, x0, #0x20
   39314:	str	x0, [sp, #80]
   39318:	ldr	x0, [sp, #80]
   3931c:	ldar	x0, [x0]
   39320:	str	x0, [sp, #88]
   39324:	ldr	x0, [sp, #88]
   39328:	cmp	x0, #0x0
   3932c:	b.eq	39384 <__sanitizer_set_death_callback@@Base+0x7dd4>  // b.none
   39330:	add	x0, sp, #0x48
   39334:	mov	x6, x0
   39338:	ldr	x5, [sp, #24]
   3933c:	ldr	x4, [sp, #32]
   39340:	ldr	x3, [sp, #40]
   39344:	ldr	x2, [sp, #48]
   39348:	ldr	x1, [sp, #88]
   3934c:	ldr	x0, [sp, #56]
   39350:	bl	38b90 <__sanitizer_set_death_callback@@Base+0x75e0>
   39354:	str	w0, [sp, #76]
   39358:	ldr	w0, [sp, #76]
   3935c:	cmp	w0, #0x0
   39360:	b.ne	39370 <__sanitizer_set_death_callback@@Base+0x7dc0>  // b.any
   39364:	ldr	w0, [sp, #72]
   39368:	cmp	w0, #0x0
   3936c:	b.eq	39378 <__sanitizer_set_death_callback@@Base+0x7dc8>  // b.none
   39370:	ldr	w0, [sp, #76]
   39374:	b	393a4 <__sanitizer_set_death_callback@@Base+0x7df4>
   39378:	ldr	x0, [sp, #88]
   3937c:	str	x0, [sp, #80]
   39380:	b	39318 <__sanitizer_set_death_callback@@Base+0x7d68>
   39384:	nop
   39388:	ldr	x5, [sp, #40]
   3938c:	mov	x4, #0x0                   	// #0
   39390:	mov	w3, #0x0                   	// #0
   39394:	mov	x2, #0x0                   	// #0
   39398:	ldr	x1, [sp, #48]
   3939c:	ldr	x0, [sp, #24]
   393a0:	blr	x5
   393a4:	ldp	x29, x30, [sp], #96
   393a8:	ret
   393ac:	sub	sp, sp, #0x100
   393b0:	stp	x29, x30, [sp, #64]
   393b4:	add	x29, sp, #0x40
   393b8:	str	x0, [sp, #136]
   393bc:	str	x1, [sp, #128]
   393c0:	str	x2, [sp, #120]
   393c4:	str	x3, [sp, #112]
   393c8:	str	x4, [sp, #104]
   393cc:	str	x5, [sp, #96]
   393d0:	str	x6, [sp, #88]
   393d4:	str	x7, [sp, #80]
   393d8:	add	x0, sp, #0x98
   393dc:	str	x0, [sp, #56]
   393e0:	add	x0, sp, #0xb8
   393e4:	str	x0, [sp, #48]
   393e8:	ldr	x0, [sp, #312]
   393ec:	str	x0, [sp, #40]
   393f0:	ldr	x0, [sp, #304]
   393f4:	str	x0, [sp, #32]
   393f8:	ldr	x0, [sp, #296]
   393fc:	str	x0, [sp, #24]
   39400:	ldr	w0, [sp, #288]
   39404:	str	w0, [sp, #16]
   39408:	ldr	x0, [sp, #280]
   3940c:	str	x0, [sp, #8]
   39410:	ldr	x0, [sp, #272]
   39414:	str	x0, [sp]
   39418:	ldr	x7, [sp, #264]
   3941c:	ldr	x6, [sp, #256]
   39420:	ldr	x5, [sp, #80]
   39424:	ldr	x4, [sp, #88]
   39428:	ldr	x3, [sp, #112]
   3942c:	ldr	x2, [sp, #120]
   39430:	ldr	x1, [sp, #128]
   39434:	ldr	x0, [sp, #136]
   39438:	bl	361ec <__sanitizer_set_death_callback@@Base+0x4c3c>
   3943c:	cmp	w0, #0x0
   39440:	b.ne	3944c <__sanitizer_set_death_callback@@Base+0x7e9c>  // b.any
   39444:	mov	x0, #0x0                   	// #0
   39448:	b	395d4 <__sanitizer_set_death_callback@@Base+0x8024>
   3944c:	add	x0, sp, #0xb8
   39450:	ldr	x3, [sp, #312]
   39454:	ldr	x2, [sp, #304]
   39458:	mov	x1, x0
   3945c:	ldr	x0, [sp, #136]
   39460:	bl	6840 <__asan_backtrace_vector_release@plt>
   39464:	cmp	w0, #0x0
   39468:	b.ne	39474 <__sanitizer_set_death_callback@@Base+0x7ec4>  // b.any
   3946c:	mov	x0, #0x0                   	// #0
   39470:	b	395d4 <__sanitizer_set_death_callback@@Base+0x8024>
   39474:	add	x0, sp, #0x98
   39478:	ldr	x3, [sp, #312]
   3947c:	ldr	x2, [sp, #304]
   39480:	mov	x1, x0
   39484:	ldr	x0, [sp, #136]
   39488:	bl	6840 <__asan_backtrace_vector_release@plt>
   3948c:	cmp	w0, #0x0
   39490:	b.ne	3949c <__sanitizer_set_death_callback@@Base+0x7eec>  // b.any
   39494:	mov	x0, #0x0                   	// #0
   39498:	b	395d4 <__sanitizer_set_death_callback@@Base+0x8024>
   3949c:	ldr	x0, [sp, #184]
   394a0:	str	x0, [sp, #248]
   394a4:	ldr	x0, [sp, #152]
   394a8:	str	x0, [sp, #240]
   394ac:	ldr	x0, [sp, #208]
   394b0:	str	x0, [sp, #232]
   394b4:	ldr	x0, [sp, #176]
   394b8:	str	x0, [sp, #224]
   394bc:	adrp	x0, 35000 <__sanitizer_set_death_callback@@Base+0x3a50>
   394c0:	add	x3, x0, #0x394
   394c4:	mov	x2, #0x18                  	// #24
   394c8:	ldr	x1, [sp, #232]
   394cc:	ldr	x0, [sp, #248]
   394d0:	bl	65d0 <__asan_backtrace_qsort@plt>
   394d4:	ldr	x3, [sp, #312]
   394d8:	ldr	x2, [sp, #304]
   394dc:	mov	x1, #0xa0                  	// #160
   394e0:	ldr	x0, [sp, #136]
   394e4:	bl	67f0 <__asan_backtrace_alloc@plt>
   394e8:	str	x0, [sp, #216]
   394ec:	ldr	x0, [sp, #216]
   394f0:	cmp	x0, #0x0
   394f4:	b.ne	39500 <__sanitizer_set_death_callback@@Base+0x7f50>  // b.any
   394f8:	mov	x0, #0x0                   	// #0
   394fc:	b	395d4 <__sanitizer_set_death_callback@@Base+0x8024>
   39500:	ldr	x0, [sp, #216]
   39504:	str	xzr, [x0]
   39508:	ldr	x0, [sp, #216]
   3950c:	ldr	x1, [sp, #296]
   39510:	str	x1, [x0, #8]
   39514:	ldr	x0, [sp, #216]
   39518:	ldr	x1, [sp, #128]
   3951c:	str	x1, [x0, #16]
   39520:	ldr	x0, [sp, #216]
   39524:	ldr	x1, [sp, #248]
   39528:	str	x1, [x0, #24]
   3952c:	ldr	x0, [sp, #216]
   39530:	ldr	x1, [sp, #232]
   39534:	str	x1, [x0, #32]
   39538:	ldr	x0, [sp, #216]
   3953c:	ldr	x1, [sp, #240]
   39540:	str	x1, [x0, #40]
   39544:	ldr	x0, [sp, #216]
   39548:	ldr	x1, [sp, #224]
   3954c:	str	x1, [x0, #48]
   39550:	ldr	x0, [sp, #216]
   39554:	ldr	x1, [sp, #120]
   39558:	str	x1, [x0, #56]
   3955c:	ldr	x0, [sp, #216]
   39560:	ldr	x1, [sp, #112]
   39564:	str	x1, [x0, #64]
   39568:	ldr	x0, [sp, #216]
   3956c:	ldr	x1, [sp, #104]
   39570:	str	x1, [x0, #72]
   39574:	ldr	x0, [sp, #216]
   39578:	ldr	x1, [sp, #96]
   3957c:	str	x1, [x0, #80]
   39580:	ldr	x0, [sp, #216]
   39584:	ldr	x1, [sp, #256]
   39588:	str	x1, [x0, #88]
   3958c:	ldr	x0, [sp, #216]
   39590:	ldr	x1, [sp, #264]
   39594:	str	x1, [x0, #96]
   39598:	ldr	x0, [sp, #216]
   3959c:	ldr	x1, [sp, #272]
   395a0:	str	x1, [x0, #104]
   395a4:	ldr	x0, [sp, #216]
   395a8:	ldr	x1, [sp, #280]
   395ac:	str	x1, [x0, #112]
   395b0:	ldr	x0, [sp, #216]
   395b4:	ldr	w1, [sp, #288]
   395b8:	str	w1, [x0, #120]
   395bc:	ldr	x0, [sp, #216]
   395c0:	add	x0, x0, #0x80
   395c4:	mov	x2, #0x20                  	// #32
   395c8:	mov	w1, #0x0                   	// #0
   395cc:	bl	6770 <__asan_internal_memset@plt>
   395d0:	ldr	x0, [sp, #216]
   395d4:	ldp	x29, x30, [sp, #64]
   395d8:	add	sp, sp, #0x100
   395dc:	ret

00000000000395e0 <__asan_backtrace_dwarf_add@@Base>:
   395e0:	sub	sp, sp, #0xb0
   395e4:	stp	x29, x30, [sp, #64]
   395e8:	add	x29, sp, #0x40
   395ec:	str	x0, [sp, #136]
   395f0:	str	x1, [sp, #128]
   395f4:	str	x2, [sp, #120]
   395f8:	str	x3, [sp, #112]
   395fc:	str	x4, [sp, #104]
   39600:	str	x5, [sp, #96]
   39604:	str	x6, [sp, #88]
   39608:	str	x7, [sp, #80]
   3960c:	ldr	x0, [sp, #232]
   39610:	str	x0, [sp, #56]
   39614:	ldr	x0, [sp, #224]
   39618:	str	x0, [sp, #48]
   3961c:	ldr	x0, [sp, #216]
   39620:	str	x0, [sp, #40]
   39624:	ldr	w0, [sp, #208]
   39628:	str	w0, [sp, #32]
   3962c:	ldr	x0, [sp, #200]
   39630:	str	x0, [sp, #24]
   39634:	ldr	x0, [sp, #192]
   39638:	str	x0, [sp, #16]
   3963c:	ldr	x0, [sp, #184]
   39640:	str	x0, [sp, #8]
   39644:	ldr	x0, [sp, #176]
   39648:	str	x0, [sp]
   3964c:	ldr	x7, [sp, #80]
   39650:	ldr	x6, [sp, #88]
   39654:	ldr	x5, [sp, #96]
   39658:	ldr	x4, [sp, #104]
   3965c:	ldr	x3, [sp, #112]
   39660:	ldr	x2, [sp, #120]
   39664:	ldr	x1, [sp, #128]
   39668:	ldr	x0, [sp, #136]
   3966c:	bl	393ac <__sanitizer_set_death_callback@@Base+0x7dfc>
   39670:	str	x0, [sp, #152]
   39674:	ldr	x0, [sp, #152]
   39678:	cmp	x0, #0x0
   3967c:	b.ne	39688 <__asan_backtrace_dwarf_add@@Base+0xa8>  // b.any
   39680:	mov	w0, #0x0                   	// #0
   39684:	b	39768 <__asan_backtrace_dwarf_add@@Base+0x188>
   39688:	ldr	x0, [sp, #248]
   3968c:	cmp	x0, #0x0
   39690:	b.eq	396a0 <__asan_backtrace_dwarf_add@@Base+0xc0>  // b.none
   39694:	ldr	x0, [sp, #248]
   39698:	ldr	x1, [sp, #152]
   3969c:	str	x1, [x0]
   396a0:	ldr	x0, [sp, #136]
   396a4:	ldr	w0, [x0, #8]
   396a8:	cmp	w0, #0x0
   396ac:	b.ne	396ec <__asan_backtrace_dwarf_add@@Base+0x10c>  // b.any
   396b0:	ldr	x0, [sp, #136]
   396b4:	add	x0, x0, #0x20
   396b8:	str	x0, [sp, #168]
   396bc:	b	396cc <__asan_backtrace_dwarf_add@@Base+0xec>
   396c0:	ldr	x0, [sp, #168]
   396c4:	ldr	x0, [x0]
   396c8:	str	x0, [sp, #168]
   396cc:	ldr	x0, [sp, #168]
   396d0:	ldr	x0, [x0]
   396d4:	cmp	x0, #0x0
   396d8:	b.ne	396c0 <__asan_backtrace_dwarf_add@@Base+0xe0>  // b.any
   396dc:	ldr	x0, [sp, #168]
   396e0:	ldr	x1, [sp, #152]
   396e4:	str	x1, [x0]
   396e8:	b	39754 <__asan_backtrace_dwarf_add@@Base+0x174>
   396ec:	ldr	x0, [sp, #136]
   396f0:	add	x0, x0, #0x20
   396f4:	str	x0, [sp, #160]
   396f8:	ldr	x0, [sp, #160]
   396fc:	ldar	x0, [x0]
   39700:	str	x0, [sp, #144]
   39704:	ldr	x0, [sp, #144]
   39708:	cmp	x0, #0x0
   3970c:	b.eq	3971c <__asan_backtrace_dwarf_add@@Base+0x13c>  // b.none
   39710:	ldr	x0, [sp, #144]
   39714:	str	x0, [sp, #160]
   39718:	b	396f8 <__asan_backtrace_dwarf_add@@Base+0x118>
   3971c:	nop
   39720:	ldr	x1, [sp, #152]
   39724:	ldr	x0, [sp, #160]
   39728:	ldxr	x2, [x0]
   3972c:	cbnz	x2, 39738 <__asan_backtrace_dwarf_add@@Base+0x158>
   39730:	stlxr	w3, x1, [x0]
   39734:	cbnz	w3, 39728 <__asan_backtrace_dwarf_add@@Base+0x148>
   39738:	cmp	x2, #0x0
   3973c:	dmb	ish
   39740:	cset	w0, eq  // eq = none
   39744:	cmp	w0, #0x0
   39748:	b.ne	39750 <__asan_backtrace_dwarf_add@@Base+0x170>  // b.any
   3974c:	b	396ec <__asan_backtrace_dwarf_add@@Base+0x10c>
   39750:	nop
   39754:	ldr	x0, [sp, #240]
   39758:	adrp	x1, 39000 <__sanitizer_set_death_callback@@Base+0x7a50>
   3975c:	add	x1, x1, #0x26c
   39760:	str	x1, [x0]
   39764:	mov	w0, #0x1                   	// #1
   39768:	ldp	x29, x30, [sp, #64]
   3976c:	add	sp, sp, #0xb0
   39770:	ret
   39774:	stp	x29, x30, [sp, #-160]!
   39778:	mov	x29, sp
   3977c:	str	x0, [sp, #40]
   39780:	str	x1, [sp, #32]
   39784:	str	x2, [sp, #24]
   39788:	ldr	x0, [sp, #40]
   3978c:	ldr	w0, [x0, #8]
   39790:	cmp	w0, #0x0
   39794:	b.ne	397a8 <__asan_backtrace_dwarf_add@@Base+0x1c8>  // b.any
   39798:	ldr	x0, [sp, #40]
   3979c:	ldr	w0, [x0, #56]
   397a0:	str	w0, [sp, #156]
   397a4:	b	397b8 <__asan_backtrace_dwarf_add@@Base+0x1d8>
   397a8:	ldr	x0, [sp, #40]
   397ac:	add	x0, x0, #0x38
   397b0:	ldar	w0, [x0]
   397b4:	str	w0, [sp, #156]
   397b8:	ldr	w0, [sp, #156]
   397bc:	cmp	w0, #0x0
   397c0:	b.eq	397e4 <__asan_backtrace_dwarf_add@@Base+0x204>  // b.none
   397c4:	ldr	x3, [sp, #32]
   397c8:	mov	w2, #0xffffffff            	// #-1
   397cc:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   397d0:	add	x1, x0, #0x490
   397d4:	ldr	x0, [sp, #24]
   397d8:	blr	x3
   397dc:	mov	w0, #0x0                   	// #0
   397e0:	b	39aa8 <__asan_backtrace_dwarf_add@@Base+0x4c8>
   397e4:	ldr	x0, [sp, #40]
   397e8:	ldr	w0, [x0, #8]
   397ec:	cmp	w0, #0x0
   397f0:	b.ne	39804 <__asan_backtrace_dwarf_add@@Base+0x224>  // b.any
   397f4:	ldr	x0, [sp, #40]
   397f8:	ldr	x0, [x0, #24]
   397fc:	str	x0, [sp, #128]
   39800:	b	39814 <__asan_backtrace_dwarf_add@@Base+0x234>
   39804:	ldr	x0, [sp, #40]
   39808:	add	x0, x0, #0x18
   3980c:	ldar	x0, [x0]
   39810:	str	x0, [sp, #128]
   39814:	ldr	x0, [sp, #128]
   39818:	cmp	x0, #0x0
   3981c:	b.eq	39828 <__asan_backtrace_dwarf_add@@Base+0x248>  // b.none
   39820:	mov	w0, #0x1                   	// #1
   39824:	b	39aa8 <__asan_backtrace_dwarf_add@@Base+0x4c8>
   39828:	mov	w0, #0xffffffff            	// #-1
   3982c:	str	w0, [sp, #144]
   39830:	str	wzr, [sp, #148]
   39834:	str	wzr, [sp, #152]
   39838:	b	39978 <__asan_backtrace_dwarf_add@@Base+0x398>
   3983c:	ldr	w0, [sp, #152]
   39840:	cmp	w0, #0x4
   39844:	b.eq	398d8 <__asan_backtrace_dwarf_add@@Base+0x2f8>  // b.none
   39848:	ldr	w0, [sp, #152]
   3984c:	cmp	w0, #0x4
   39850:	b.gt	39908 <__asan_backtrace_dwarf_add@@Base+0x328>
   39854:	ldr	w0, [sp, #152]
   39858:	cmp	w0, #0x3
   3985c:	b.eq	398c8 <__asan_backtrace_dwarf_add@@Base+0x2e8>  // b.none
   39860:	ldr	w0, [sp, #152]
   39864:	cmp	w0, #0x3
   39868:	b.gt	39908 <__asan_backtrace_dwarf_add@@Base+0x328>
   3986c:	ldr	w0, [sp, #152]
   39870:	cmp	w0, #0x2
   39874:	b.eq	398b8 <__asan_backtrace_dwarf_add@@Base+0x2d8>  // b.none
   39878:	ldr	w0, [sp, #152]
   3987c:	cmp	w0, #0x2
   39880:	b.gt	39908 <__asan_backtrace_dwarf_add@@Base+0x328>
   39884:	ldr	w0, [sp, #152]
   39888:	cmp	w0, #0x0
   3988c:	b.eq	398a0 <__asan_backtrace_dwarf_add@@Base+0x2c0>  // b.none
   39890:	ldr	w0, [sp, #152]
   39894:	cmp	w0, #0x1
   39898:	b.eq	398b0 <__asan_backtrace_dwarf_add@@Base+0x2d0>  // b.none
   3989c:	b	39908 <__asan_backtrace_dwarf_add@@Base+0x328>
   398a0:	ldr	x0, [sp, #40]
   398a4:	ldr	x0, [x0]
   398a8:	str	x0, [sp, #136]
   398ac:	b	3990c <__asan_backtrace_dwarf_add@@Base+0x32c>
   398b0:	str	xzr, [sp, #136]
   398b4:	b	3990c <__asan_backtrace_dwarf_add@@Base+0x32c>
   398b8:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   398bc:	add	x0, x0, #0x4b8
   398c0:	str	x0, [sp, #136]
   398c4:	b	3990c <__asan_backtrace_dwarf_add@@Base+0x32c>
   398c8:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   398cc:	add	x0, x0, #0x4c8
   398d0:	str	x0, [sp, #136]
   398d4:	b	3990c <__asan_backtrace_dwarf_add@@Base+0x32c>
   398d8:	bl	68b0 <getpid@plt>
   398dc:	sxtw	x0, w0
   398e0:	add	x4, sp, #0x40
   398e4:	mov	x3, x0
   398e8:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   398ec:	add	x2, x0, #0x4e0
   398f0:	mov	x1, #0x40                  	// #64
   398f4:	mov	x0, x4
   398f8:	bl	6940 <snprintf@plt>
   398fc:	add	x0, sp, #0x40
   39900:	str	x0, [sp, #136]
   39904:	b	3990c <__asan_backtrace_dwarf_add@@Base+0x32c>
   39908:	bl	6ae0 <abort@plt>
   3990c:	ldr	x0, [sp, #136]
   39910:	cmp	x0, #0x0
   39914:	b.eq	39968 <__asan_backtrace_dwarf_add@@Base+0x388>  // b.none
   39918:	add	x0, sp, #0x3c
   3991c:	mov	x3, x0
   39920:	ldr	x2, [sp, #24]
   39924:	ldr	x1, [sp, #32]
   39928:	ldr	x0, [sp, #136]
   3992c:	bl	6c70 <__asan_backtrace_open@plt>
   39930:	str	w0, [sp, #144]
   39934:	ldr	w0, [sp, #144]
   39938:	cmp	w0, #0x0
   3993c:	b.ge	39958 <__asan_backtrace_dwarf_add@@Base+0x378>  // b.tcont
   39940:	ldr	w0, [sp, #60]
   39944:	cmp	w0, #0x0
   39948:	b.ne	39958 <__asan_backtrace_dwarf_add@@Base+0x378>  // b.any
   3994c:	mov	w0, #0x1                   	// #1
   39950:	str	w0, [sp, #148]
   39954:	b	3998c <__asan_backtrace_dwarf_add@@Base+0x3ac>
   39958:	ldr	w0, [sp, #144]
   3995c:	cmp	w0, #0x0
   39960:	b.ge	39988 <__asan_backtrace_dwarf_add@@Base+0x3a8>  // b.tcont
   39964:	b	3996c <__asan_backtrace_dwarf_add@@Base+0x38c>
   39968:	nop
   3996c:	ldr	w0, [sp, #152]
   39970:	add	w0, w0, #0x1
   39974:	str	w0, [sp, #152]
   39978:	ldr	w0, [sp, #152]
   3997c:	cmp	w0, #0x4
   39980:	b.le	3983c <__asan_backtrace_dwarf_add@@Base+0x25c>
   39984:	b	3998c <__asan_backtrace_dwarf_add@@Base+0x3ac>
   39988:	nop
   3998c:	ldr	w0, [sp, #144]
   39990:	cmp	w0, #0x0
   39994:	b.ge	399f4 <__asan_backtrace_dwarf_add@@Base+0x414>  // b.tcont
   39998:	ldr	w0, [sp, #148]
   3999c:	cmp	w0, #0x0
   399a0:	b.ne	399ec <__asan_backtrace_dwarf_add@@Base+0x40c>  // b.any
   399a4:	ldr	x0, [sp, #40]
   399a8:	ldr	x0, [x0]
   399ac:	cmp	x0, #0x0
   399b0:	b.eq	399d4 <__asan_backtrace_dwarf_add@@Base+0x3f4>  // b.none
   399b4:	ldr	x0, [sp, #40]
   399b8:	ldr	x0, [x0]
   399bc:	ldr	x3, [sp, #32]
   399c0:	mov	w2, #0x2                   	// #2
   399c4:	mov	x1, x0
   399c8:	ldr	x0, [sp, #24]
   399cc:	blr	x3
   399d0:	b	399ec <__asan_backtrace_dwarf_add@@Base+0x40c>
   399d4:	ldr	x3, [sp, #32]
   399d8:	mov	w2, #0x0                   	// #0
   399dc:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   399e0:	add	x1, x0, #0x4f8
   399e4:	ldr	x0, [sp, #24]
   399e8:	blr	x3
   399ec:	mov	w0, #0x1                   	// #1
   399f0:	str	w0, [sp, #156]
   399f4:	ldr	w0, [sp, #156]
   399f8:	cmp	w0, #0x0
   399fc:	b.ne	39a30 <__asan_backtrace_dwarf_add@@Base+0x450>  // b.any
   39a00:	add	x0, sp, #0x80
   39a04:	mov	x5, x0
   39a08:	ldr	x4, [sp, #24]
   39a0c:	ldr	x3, [sp, #32]
   39a10:	ldr	w2, [sp, #144]
   39a14:	ldr	x1, [sp, #136]
   39a18:	ldr	x0, [sp, #40]
   39a1c:	bl	6b10 <__asan_backtrace_initialize@plt>
   39a20:	cmp	w0, #0x0
   39a24:	b.ne	39a30 <__asan_backtrace_dwarf_add@@Base+0x450>  // b.any
   39a28:	mov	w0, #0x1                   	// #1
   39a2c:	str	w0, [sp, #156]
   39a30:	ldr	w0, [sp, #156]
   39a34:	cmp	w0, #0x0
   39a38:	b.eq	39a74 <__asan_backtrace_dwarf_add@@Base+0x494>  // b.none
   39a3c:	ldr	x0, [sp, #40]
   39a40:	ldr	w0, [x0, #8]
   39a44:	cmp	w0, #0x0
   39a48:	b.ne	39a5c <__asan_backtrace_dwarf_add@@Base+0x47c>  // b.any
   39a4c:	ldr	x0, [sp, #40]
   39a50:	mov	w1, #0x1                   	// #1
   39a54:	str	w1, [x0, #56]
   39a58:	b	39a6c <__asan_backtrace_dwarf_add@@Base+0x48c>
   39a5c:	ldr	x0, [sp, #40]
   39a60:	add	x0, x0, #0x38
   39a64:	mov	w1, #0x1                   	// #1
   39a68:	stlr	w1, [x0]
   39a6c:	mov	w0, #0x0                   	// #0
   39a70:	b	39aa8 <__asan_backtrace_dwarf_add@@Base+0x4c8>
   39a74:	ldr	x0, [sp, #40]
   39a78:	ldr	w0, [x0, #8]
   39a7c:	cmp	w0, #0x0
   39a80:	b.ne	39a94 <__asan_backtrace_dwarf_add@@Base+0x4b4>  // b.any
   39a84:	ldr	x1, [sp, #128]
   39a88:	ldr	x0, [sp, #40]
   39a8c:	str	x1, [x0, #24]
   39a90:	b	39aa4 <__asan_backtrace_dwarf_add@@Base+0x4c4>
   39a94:	ldr	x0, [sp, #40]
   39a98:	add	x0, x0, #0x18
   39a9c:	ldr	x1, [sp, #128]
   39aa0:	stlr	x1, [x0]
   39aa4:	mov	w0, #0x1                   	// #1
   39aa8:	ldp	x29, x30, [sp], #160
   39aac:	ret

0000000000039ab0 <__asan_backtrace_pcinfo@@Base>:
   39ab0:	stp	x29, x30, [sp, #-64]!
   39ab4:	mov	x29, sp
   39ab8:	str	x0, [sp, #56]
   39abc:	str	x1, [sp, #48]
   39ac0:	str	x2, [sp, #40]
   39ac4:	str	x3, [sp, #32]
   39ac8:	str	x4, [sp, #24]
   39acc:	ldr	x2, [sp, #24]
   39ad0:	ldr	x1, [sp, #32]
   39ad4:	ldr	x0, [sp, #56]
   39ad8:	bl	39774 <__asan_backtrace_dwarf_add@@Base+0x194>
   39adc:	cmp	w0, #0x0
   39ae0:	b.ne	39aec <__asan_backtrace_pcinfo@@Base+0x3c>  // b.any
   39ae4:	mov	w0, #0x0                   	// #0
   39ae8:	b	39b24 <__asan_backtrace_pcinfo@@Base+0x74>
   39aec:	ldr	x0, [sp, #56]
   39af0:	ldr	w0, [x0, #56]
   39af4:	cmp	w0, #0x0
   39af8:	b.eq	39b04 <__asan_backtrace_pcinfo@@Base+0x54>  // b.none
   39afc:	mov	w0, #0x0                   	// #0
   39b00:	b	39b24 <__asan_backtrace_pcinfo@@Base+0x74>
   39b04:	ldr	x0, [sp, #56]
   39b08:	ldr	x5, [x0, #24]
   39b0c:	ldr	x4, [sp, #24]
   39b10:	ldr	x3, [sp, #32]
   39b14:	ldr	x2, [sp, #40]
   39b18:	ldr	x1, [sp, #48]
   39b1c:	ldr	x0, [sp, #56]
   39b20:	blr	x5
   39b24:	ldp	x29, x30, [sp], #64
   39b28:	ret

0000000000039b2c <__asan_backtrace_syminfo@@Base>:
   39b2c:	stp	x29, x30, [sp, #-64]!
   39b30:	mov	x29, sp
   39b34:	str	x0, [sp, #56]
   39b38:	str	x1, [sp, #48]
   39b3c:	str	x2, [sp, #40]
   39b40:	str	x3, [sp, #32]
   39b44:	str	x4, [sp, #24]
   39b48:	ldr	x2, [sp, #24]
   39b4c:	ldr	x1, [sp, #32]
   39b50:	ldr	x0, [sp, #56]
   39b54:	bl	39774 <__asan_backtrace_dwarf_add@@Base+0x194>
   39b58:	cmp	w0, #0x0
   39b5c:	b.ne	39b68 <__asan_backtrace_syminfo@@Base+0x3c>  // b.any
   39b60:	mov	w0, #0x0                   	// #0
   39b64:	b	39ba4 <__asan_backtrace_syminfo@@Base+0x78>
   39b68:	ldr	x0, [sp, #56]
   39b6c:	ldr	w0, [x0, #56]
   39b70:	cmp	w0, #0x0
   39b74:	b.eq	39b80 <__asan_backtrace_syminfo@@Base+0x54>  // b.none
   39b78:	mov	w0, #0x0                   	// #0
   39b7c:	b	39ba4 <__asan_backtrace_syminfo@@Base+0x78>
   39b80:	ldr	x0, [sp, #56]
   39b84:	ldr	x5, [x0, #40]
   39b88:	ldr	x4, [sp, #24]
   39b8c:	ldr	x3, [sp, #32]
   39b90:	ldr	x2, [sp, #40]
   39b94:	ldr	x1, [sp, #48]
   39b98:	ldr	x0, [sp, #56]
   39b9c:	blr	x5
   39ba0:	mov	w0, #0x1                   	// #1
   39ba4:	ldp	x29, x30, [sp], #64
   39ba8:	ret

0000000000039bac <__asan_backtrace_open@@Base>:
   39bac:	stp	x29, x30, [sp, #-64]!
   39bb0:	mov	x29, sp
   39bb4:	str	x0, [sp, #40]
   39bb8:	str	x1, [sp, #32]
   39bbc:	str	x2, [sp, #24]
   39bc0:	str	x3, [sp, #16]
   39bc4:	ldr	x0, [sp, #16]
   39bc8:	cmp	x0, #0x0
   39bcc:	b.eq	39bd8 <__asan_backtrace_open@@Base+0x2c>  // b.none
   39bd0:	ldr	x0, [sp, #16]
   39bd4:	str	wzr, [x0]
   39bd8:	mov	w1, #0x80000               	// #524288
   39bdc:	ldr	x0, [sp, #40]
   39be0:	bl	66f0 <open@plt>
   39be4:	str	w0, [sp, #60]
   39be8:	ldr	w0, [sp, #60]
   39bec:	cmp	w0, #0x0
   39bf0:	b.ge	39c44 <__asan_backtrace_open@@Base+0x98>  // b.tcont
   39bf4:	ldr	x0, [sp, #16]
   39bf8:	cmp	x0, #0x0
   39bfc:	b.eq	39c20 <__asan_backtrace_open@@Base+0x74>  // b.none
   39c00:	bl	69d0 <__errno_location@plt>
   39c04:	ldr	w0, [x0]
   39c08:	cmp	w0, #0x2
   39c0c:	b.ne	39c20 <__asan_backtrace_open@@Base+0x74>  // b.any
   39c10:	ldr	x0, [sp, #16]
   39c14:	mov	w1, #0x1                   	// #1
   39c18:	str	w1, [x0]
   39c1c:	b	39c3c <__asan_backtrace_open@@Base+0x90>
   39c20:	bl	69d0 <__errno_location@plt>
   39c24:	ldr	w0, [x0]
   39c28:	ldr	x3, [sp, #32]
   39c2c:	mov	w2, w0
   39c30:	ldr	x1, [sp, #40]
   39c34:	ldr	x0, [sp, #24]
   39c38:	blr	x3
   39c3c:	mov	w0, #0xffffffff            	// #-1
   39c40:	b	39c58 <__asan_backtrace_open@@Base+0xac>
   39c44:	mov	w2, #0x1                   	// #1
   39c48:	mov	w1, #0x2                   	// #2
   39c4c:	ldr	w0, [sp, #60]
   39c50:	bl	6bf0 <fcntl@plt>
   39c54:	ldr	w0, [sp, #60]
   39c58:	ldp	x29, x30, [sp], #64
   39c5c:	ret

0000000000039c60 <__asan_backtrace_close@@Base>:
   39c60:	stp	x29, x30, [sp, #-48]!
   39c64:	mov	x29, sp
   39c68:	str	w0, [sp, #44]
   39c6c:	str	x1, [sp, #32]
   39c70:	str	x2, [sp, #24]
   39c74:	ldr	w0, [sp, #44]
   39c78:	bl	6a50 <close@plt>
   39c7c:	cmp	w0, #0x0
   39c80:	b.ge	39cac <__asan_backtrace_close@@Base+0x4c>  // b.tcont
   39c84:	bl	69d0 <__errno_location@plt>
   39c88:	ldr	w0, [x0]
   39c8c:	ldr	x3, [sp, #32]
   39c90:	mov	w2, w0
   39c94:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   39c98:	add	x1, x0, #0x528
   39c9c:	ldr	x0, [sp, #24]
   39ca0:	blr	x3
   39ca4:	mov	w0, #0x0                   	// #0
   39ca8:	b	39cb0 <__asan_backtrace_close@@Base+0x50>
   39cac:	mov	w0, #0x1                   	// #1
   39cb0:	ldp	x29, x30, [sp], #48
   39cb4:	ret
   39cb8:	sub	sp, sp, #0x30
   39cbc:	str	x0, [sp, #24]
   39cc0:	str	x1, [sp, #16]
   39cc4:	str	x2, [sp, #8]
   39cc8:	str	xzr, [sp, #40]
   39ccc:	b	39d1c <__asan_backtrace_close@@Base+0xbc>
   39cd0:	ldr	x0, [sp, #24]
   39cd4:	ldrb	w0, [x0]
   39cd8:	strb	w0, [sp, #39]
   39cdc:	ldr	x0, [sp, #16]
   39ce0:	ldrb	w1, [x0]
   39ce4:	ldr	x0, [sp, #24]
   39ce8:	strb	w1, [x0]
   39cec:	ldr	x0, [sp, #16]
   39cf0:	ldrb	w1, [sp, #39]
   39cf4:	strb	w1, [x0]
   39cf8:	ldr	x0, [sp, #40]
   39cfc:	add	x0, x0, #0x1
   39d00:	str	x0, [sp, #40]
   39d04:	ldr	x0, [sp, #24]
   39d08:	add	x0, x0, #0x1
   39d0c:	str	x0, [sp, #24]
   39d10:	ldr	x0, [sp, #16]
   39d14:	add	x0, x0, #0x1
   39d18:	str	x0, [sp, #16]
   39d1c:	ldr	x1, [sp, #40]
   39d20:	ldr	x0, [sp, #8]
   39d24:	cmp	x1, x0
   39d28:	b.cc	39cd0 <__asan_backtrace_close@@Base+0x70>  // b.lo, b.ul, b.last
   39d2c:	nop
   39d30:	nop
   39d34:	add	sp, sp, #0x30
   39d38:	ret

0000000000039d3c <__asan_backtrace_qsort@@Base>:
   39d3c:	stp	x29, x30, [sp, #-80]!
   39d40:	mov	x29, sp
   39d44:	str	x0, [sp, #40]
   39d48:	str	x1, [sp, #32]
   39d4c:	str	x2, [sp, #24]
   39d50:	str	x3, [sp, #16]
   39d54:	ldr	x0, [sp, #40]
   39d58:	str	x0, [sp, #72]
   39d5c:	ldr	x0, [sp, #32]
   39d60:	cmp	x0, #0x1
   39d64:	b.ls	39f10 <__asan_backtrace_qsort@@Base+0x1d4>  // b.plast
   39d68:	ldr	x0, [sp, #32]
   39d6c:	lsr	x1, x0, #1
   39d70:	ldr	x0, [sp, #24]
   39d74:	mul	x0, x1, x0
   39d78:	ldr	x1, [sp, #72]
   39d7c:	add	x0, x1, x0
   39d80:	ldr	x2, [sp, #24]
   39d84:	mov	x1, x0
   39d88:	ldr	x0, [sp, #72]
   39d8c:	bl	39cb8 <__asan_backtrace_close@@Base+0x58>
   39d90:	str	xzr, [sp, #56]
   39d94:	mov	x0, #0x1                   	// #1
   39d98:	str	x0, [sp, #64]
   39d9c:	b	39e2c <__asan_backtrace_qsort@@Base+0xf0>
   39da0:	ldr	x1, [sp, #64]
   39da4:	ldr	x0, [sp, #24]
   39da8:	mul	x0, x1, x0
   39dac:	ldr	x1, [sp, #72]
   39db0:	add	x0, x1, x0
   39db4:	ldr	x2, [sp, #16]
   39db8:	mov	x1, x0
   39dbc:	ldr	x0, [sp, #72]
   39dc0:	blr	x2
   39dc4:	cmp	w0, #0x0
   39dc8:	b.le	39e20 <__asan_backtrace_qsort@@Base+0xe4>
   39dcc:	ldr	x0, [sp, #56]
   39dd0:	add	x0, x0, #0x1
   39dd4:	str	x0, [sp, #56]
   39dd8:	ldr	x1, [sp, #64]
   39ddc:	ldr	x0, [sp, #56]
   39de0:	cmp	x1, x0
   39de4:	b.eq	39e20 <__asan_backtrace_qsort@@Base+0xe4>  // b.none
   39de8:	ldr	x1, [sp, #56]
   39dec:	ldr	x0, [sp, #24]
   39df0:	mul	x0, x1, x0
   39df4:	ldr	x1, [sp, #72]
   39df8:	add	x3, x1, x0
   39dfc:	ldr	x1, [sp, #64]
   39e00:	ldr	x0, [sp, #24]
   39e04:	mul	x0, x1, x0
   39e08:	ldr	x1, [sp, #72]
   39e0c:	add	x0, x1, x0
   39e10:	ldr	x2, [sp, #24]
   39e14:	mov	x1, x0
   39e18:	mov	x0, x3
   39e1c:	bl	39cb8 <__asan_backtrace_close@@Base+0x58>
   39e20:	ldr	x0, [sp, #64]
   39e24:	add	x0, x0, #0x1
   39e28:	str	x0, [sp, #64]
   39e2c:	ldr	x1, [sp, #64]
   39e30:	ldr	x0, [sp, #32]
   39e34:	cmp	x1, x0
   39e38:	b.cc	39da0 <__asan_backtrace_qsort@@Base+0x64>  // b.lo, b.ul, b.last
   39e3c:	ldr	x0, [sp, #56]
   39e40:	cmp	x0, #0x0
   39e44:	b.eq	39e6c <__asan_backtrace_qsort@@Base+0x130>  // b.none
   39e48:	ldr	x1, [sp, #56]
   39e4c:	ldr	x0, [sp, #24]
   39e50:	mul	x0, x1, x0
   39e54:	ldr	x1, [sp, #72]
   39e58:	add	x0, x1, x0
   39e5c:	ldr	x2, [sp, #24]
   39e60:	mov	x1, x0
   39e64:	ldr	x0, [sp, #72]
   39e68:	bl	39cb8 <__asan_backtrace_close@@Base+0x58>
   39e6c:	ldr	x0, [sp, #56]
   39e70:	lsl	x0, x0, #1
   39e74:	ldr	x1, [sp, #32]
   39e78:	cmp	x1, x0
   39e7c:	b.ls	39ec8 <__asan_backtrace_qsort@@Base+0x18c>  // b.plast
   39e80:	ldr	x3, [sp, #16]
   39e84:	ldr	x2, [sp, #24]
   39e88:	ldr	x1, [sp, #56]
   39e8c:	ldr	x0, [sp, #72]
   39e90:	bl	39d3c <__asan_backtrace_qsort@@Base>
   39e94:	ldr	x0, [sp, #56]
   39e98:	add	x1, x0, #0x1
   39e9c:	ldr	x0, [sp, #24]
   39ea0:	mul	x0, x1, x0
   39ea4:	ldr	x1, [sp, #72]
   39ea8:	add	x0, x1, x0
   39eac:	str	x0, [sp, #72]
   39eb0:	ldr	x1, [sp, #32]
   39eb4:	ldr	x0, [sp, #56]
   39eb8:	sub	x0, x1, x0
   39ebc:	sub	x0, x0, #0x1
   39ec0:	str	x0, [sp, #32]
   39ec4:	b	39d5c <__asan_backtrace_qsort@@Base+0x20>
   39ec8:	ldr	x0, [sp, #56]
   39ecc:	add	x1, x0, #0x1
   39ed0:	ldr	x0, [sp, #24]
   39ed4:	mul	x0, x1, x0
   39ed8:	ldr	x1, [sp, #72]
   39edc:	add	x4, x1, x0
   39ee0:	ldr	x1, [sp, #32]
   39ee4:	ldr	x0, [sp, #56]
   39ee8:	sub	x0, x1, x0
   39eec:	sub	x0, x0, #0x1
   39ef0:	ldr	x3, [sp, #16]
   39ef4:	ldr	x2, [sp, #24]
   39ef8:	mov	x1, x0
   39efc:	mov	x0, x4
   39f00:	bl	39d3c <__asan_backtrace_qsort@@Base>
   39f04:	ldr	x0, [sp, #56]
   39f08:	str	x0, [sp, #32]
   39f0c:	b	39d5c <__asan_backtrace_qsort@@Base+0x20>
   39f10:	nop
   39f14:	ldp	x29, x30, [sp], #80
   39f18:	ret

0000000000039f1c <__asan_backtrace_create_state@@Base>:
   39f1c:	stp	x29, x30, [sp, #-128]!
   39f20:	mov	x29, sp
   39f24:	str	x0, [sp, #40]
   39f28:	str	w1, [sp, #36]
   39f2c:	str	x2, [sp, #24]
   39f30:	str	x3, [sp, #16]
   39f34:	add	x0, sp, #0x30
   39f38:	mov	x2, #0x48                  	// #72
   39f3c:	mov	w1, #0x0                   	// #0
   39f40:	bl	6770 <__asan_internal_memset@plt>
   39f44:	ldr	x0, [sp, #40]
   39f48:	str	x0, [sp, #48]
   39f4c:	ldr	w0, [sp, #36]
   39f50:	str	w0, [sp, #56]
   39f54:	add	x0, sp, #0x30
   39f58:	ldr	x3, [sp, #16]
   39f5c:	ldr	x2, [sp, #24]
   39f60:	mov	x1, #0x48                  	// #72
   39f64:	bl	67f0 <__asan_backtrace_alloc@plt>
   39f68:	str	x0, [sp, #120]
   39f6c:	ldr	x0, [sp, #120]
   39f70:	cmp	x0, #0x0
   39f74:	b.ne	39f80 <__asan_backtrace_create_state@@Base+0x64>  // b.any
   39f78:	mov	x0, #0x0                   	// #0
   39f7c:	b	39fb8 <__asan_backtrace_create_state@@Base+0x9c>
   39f80:	ldr	x0, [sp, #120]
   39f84:	mov	x1, x0
   39f88:	add	x0, sp, #0x30
   39f8c:	ldp	x2, x3, [x0]
   39f90:	stp	x2, x3, [x1]
   39f94:	ldp	x2, x3, [x0, #16]
   39f98:	stp	x2, x3, [x1, #16]
   39f9c:	ldp	x2, x3, [x0, #32]
   39fa0:	stp	x2, x3, [x1, #32]
   39fa4:	ldp	x2, x3, [x0, #48]
   39fa8:	stp	x2, x3, [x1, #48]
   39fac:	ldr	x0, [x0, #64]
   39fb0:	str	x0, [x1, #64]
   39fb4:	ldr	x0, [sp, #120]
   39fb8:	ldp	x29, x30, [sp], #128
   39fbc:	ret
   39fc0:	sub	sp, sp, #0x10
   39fc4:	str	w0, [sp, #12]
   39fc8:	ldr	w0, [sp, #12]
   39fcc:	sub	w0, w0, #0x1c
   39fd0:	cmp	w0, #0x34
   39fd4:	cset	w1, hi  // hi = pmore
   39fd8:	and	w1, w1, #0xff
   39fdc:	cmp	w1, #0x0
   39fe0:	b.ne	3a014 <__asan_backtrace_create_state@@Base+0xf8>  // b.any
   39fe4:	mov	x1, #0x1                   	// #1
   39fe8:	lsl	x1, x1, x0
   39fec:	mov	x0, #0x1f                  	// #31
   39ff0:	movk	x0, #0x1a, lsl #48
   39ff4:	and	x0, x1, x0
   39ff8:	cmp	x0, #0x0
   39ffc:	cset	w0, ne  // ne = any
   3a000:	and	w0, w0, #0xff
   3a004:	cmp	w0, #0x0
   3a008:	b.eq	3a014 <__asan_backtrace_create_state@@Base+0xf8>  // b.none
   3a00c:	mov	w0, #0x1                   	// #1
   3a010:	b	3a01c <__asan_backtrace_create_state@@Base+0x100>
   3a014:	nop
   3a018:	mov	w0, #0x0                   	// #0
   3a01c:	add	sp, sp, #0x10
   3a020:	ret

000000000003a024 <__asan_cplus_demangle_fill_name@@Base>:
   3a024:	sub	sp, sp, #0x20
   3a028:	str	x0, [sp, #24]
   3a02c:	str	x1, [sp, #16]
   3a030:	str	w2, [sp, #12]
   3a034:	ldr	x0, [sp, #24]
   3a038:	cmp	x0, #0x0
   3a03c:	b.eq	3a058 <__asan_cplus_demangle_fill_name@@Base+0x34>  // b.none
   3a040:	ldr	x0, [sp, #16]
   3a044:	cmp	x0, #0x0
   3a048:	b.eq	3a058 <__asan_cplus_demangle_fill_name@@Base+0x34>  // b.none
   3a04c:	ldr	w0, [sp, #12]
   3a050:	cmp	w0, #0x0
   3a054:	b.gt	3a060 <__asan_cplus_demangle_fill_name@@Base+0x3c>
   3a058:	mov	w0, #0x0                   	// #0
   3a05c:	b	3a08c <__asan_cplus_demangle_fill_name@@Base+0x68>
   3a060:	ldr	x0, [sp, #24]
   3a064:	str	wzr, [x0, #4]
   3a068:	ldr	x0, [sp, #24]
   3a06c:	str	wzr, [x0]
   3a070:	ldr	x0, [sp, #24]
   3a074:	ldr	x1, [sp, #16]
   3a078:	str	x1, [x0, #8]
   3a07c:	ldr	x0, [sp, #24]
   3a080:	ldr	w1, [sp, #12]
   3a084:	str	w1, [x0, #16]
   3a088:	mov	w0, #0x1                   	// #1
   3a08c:	add	sp, sp, #0x20
   3a090:	ret

000000000003a094 <__asan_cplus_demangle_fill_extended_operator@@Base>:
   3a094:	sub	sp, sp, #0x20
   3a098:	str	x0, [sp, #24]
   3a09c:	str	w1, [sp, #20]
   3a0a0:	str	x2, [sp, #8]
   3a0a4:	ldr	x0, [sp, #24]
   3a0a8:	cmp	x0, #0x0
   3a0ac:	b.eq	3a0c8 <__asan_cplus_demangle_fill_extended_operator@@Base+0x34>  // b.none
   3a0b0:	ldr	w0, [sp, #20]
   3a0b4:	cmp	w0, #0x0
   3a0b8:	b.lt	3a0c8 <__asan_cplus_demangle_fill_extended_operator@@Base+0x34>  // b.tstop
   3a0bc:	ldr	x0, [sp, #8]
   3a0c0:	cmp	x0, #0x0
   3a0c4:	b.ne	3a0d0 <__asan_cplus_demangle_fill_extended_operator@@Base+0x3c>  // b.any
   3a0c8:	mov	w0, #0x0                   	// #0
   3a0cc:	b	3a100 <__asan_cplus_demangle_fill_extended_operator@@Base+0x6c>
   3a0d0:	ldr	x0, [sp, #24]
   3a0d4:	str	wzr, [x0, #4]
   3a0d8:	ldr	x0, [sp, #24]
   3a0dc:	mov	w1, #0x33                  	// #51
   3a0e0:	str	w1, [x0]
   3a0e4:	ldr	x0, [sp, #24]
   3a0e8:	ldr	w1, [sp, #20]
   3a0ec:	str	w1, [x0, #8]
   3a0f0:	ldr	x0, [sp, #24]
   3a0f4:	ldr	x1, [sp, #8]
   3a0f8:	str	x1, [x0, #16]
   3a0fc:	mov	w0, #0x1                   	// #1
   3a100:	add	sp, sp, #0x20
   3a104:	ret

000000000003a108 <__asan_cplus_demangle_fill_ctor@@Base>:
   3a108:	sub	sp, sp, #0x20
   3a10c:	str	x0, [sp, #24]
   3a110:	str	w1, [sp, #20]
   3a114:	str	x2, [sp, #8]
   3a118:	ldr	x0, [sp, #24]
   3a11c:	cmp	x0, #0x0
   3a120:	b.eq	3a148 <__asan_cplus_demangle_fill_ctor@@Base+0x40>  // b.none
   3a124:	ldr	x0, [sp, #8]
   3a128:	cmp	x0, #0x0
   3a12c:	b.eq	3a148 <__asan_cplus_demangle_fill_ctor@@Base+0x40>  // b.none
   3a130:	ldr	w0, [sp, #20]
   3a134:	cmp	w0, #0x0
   3a138:	b.le	3a148 <__asan_cplus_demangle_fill_ctor@@Base+0x40>
   3a13c:	ldr	w0, [sp, #20]
   3a140:	cmp	w0, #0x5
   3a144:	b.le	3a150 <__asan_cplus_demangle_fill_ctor@@Base+0x48>
   3a148:	mov	w0, #0x0                   	// #0
   3a14c:	b	3a180 <__asan_cplus_demangle_fill_ctor@@Base+0x78>
   3a150:	ldr	x0, [sp, #24]
   3a154:	str	wzr, [x0, #4]
   3a158:	ldr	x0, [sp, #24]
   3a15c:	mov	w1, #0x7                   	// #7
   3a160:	str	w1, [x0]
   3a164:	ldr	x0, [sp, #24]
   3a168:	ldr	w1, [sp, #20]
   3a16c:	str	w1, [x0, #8]
   3a170:	ldr	x0, [sp, #24]
   3a174:	ldr	x1, [sp, #8]
   3a178:	str	x1, [x0, #16]
   3a17c:	mov	w0, #0x1                   	// #1
   3a180:	add	sp, sp, #0x20
   3a184:	ret

000000000003a188 <__asan_cplus_demangle_fill_dtor@@Base>:
   3a188:	sub	sp, sp, #0x20
   3a18c:	str	x0, [sp, #24]
   3a190:	str	w1, [sp, #20]
   3a194:	str	x2, [sp, #8]
   3a198:	ldr	x0, [sp, #24]
   3a19c:	cmp	x0, #0x0
   3a1a0:	b.eq	3a1c8 <__asan_cplus_demangle_fill_dtor@@Base+0x40>  // b.none
   3a1a4:	ldr	x0, [sp, #8]
   3a1a8:	cmp	x0, #0x0
   3a1ac:	b.eq	3a1c8 <__asan_cplus_demangle_fill_dtor@@Base+0x40>  // b.none
   3a1b0:	ldr	w0, [sp, #20]
   3a1b4:	cmp	w0, #0x0
   3a1b8:	b.le	3a1c8 <__asan_cplus_demangle_fill_dtor@@Base+0x40>
   3a1bc:	ldr	w0, [sp, #20]
   3a1c0:	cmp	w0, #0x5
   3a1c4:	b.le	3a1d0 <__asan_cplus_demangle_fill_dtor@@Base+0x48>
   3a1c8:	mov	w0, #0x0                   	// #0
   3a1cc:	b	3a200 <__asan_cplus_demangle_fill_dtor@@Base+0x78>
   3a1d0:	ldr	x0, [sp, #24]
   3a1d4:	str	wzr, [x0, #4]
   3a1d8:	ldr	x0, [sp, #24]
   3a1dc:	mov	w1, #0x8                   	// #8
   3a1e0:	str	w1, [x0]
   3a1e4:	ldr	x0, [sp, #24]
   3a1e8:	ldr	w1, [sp, #20]
   3a1ec:	str	w1, [x0, #8]
   3a1f0:	ldr	x0, [sp, #24]
   3a1f4:	ldr	x1, [sp, #8]
   3a1f8:	str	x1, [x0, #16]
   3a1fc:	mov	w0, #0x1                   	// #1
   3a200:	add	sp, sp, #0x20
   3a204:	ret
   3a208:	sub	sp, sp, #0x20
   3a20c:	str	x0, [sp, #8]
   3a210:	ldr	x0, [sp, #8]
   3a214:	ldr	w1, [x0, #40]
   3a218:	ldr	x0, [sp, #8]
   3a21c:	ldr	w0, [x0, #44]
   3a220:	cmp	w1, w0
   3a224:	b.lt	3a230 <__asan_cplus_demangle_fill_dtor@@Base+0xa8>  // b.tstop
   3a228:	mov	x0, #0x0                   	// #0
   3a22c:	b	3a27c <__asan_cplus_demangle_fill_dtor@@Base+0xf4>
   3a230:	ldr	x0, [sp, #8]
   3a234:	ldr	x2, [x0, #32]
   3a238:	ldr	x0, [sp, #8]
   3a23c:	ldr	w0, [x0, #40]
   3a240:	sxtw	x1, w0
   3a244:	mov	x0, x1
   3a248:	lsl	x0, x0, #1
   3a24c:	add	x0, x0, x1
   3a250:	lsl	x0, x0, #3
   3a254:	add	x0, x2, x0
   3a258:	str	x0, [sp, #24]
   3a25c:	ldr	x0, [sp, #24]
   3a260:	str	wzr, [x0, #4]
   3a264:	ldr	x0, [sp, #8]
   3a268:	ldr	w0, [x0, #40]
   3a26c:	add	w1, w0, #0x1
   3a270:	ldr	x0, [sp, #8]
   3a274:	str	w1, [x0, #40]
   3a278:	ldr	x0, [sp, #24]
   3a27c:	add	sp, sp, #0x20
   3a280:	ret
   3a284:	stp	x29, x30, [sp, #-64]!
   3a288:	mov	x29, sp
   3a28c:	str	x0, [sp, #40]
   3a290:	str	w1, [sp, #36]
   3a294:	str	x2, [sp, #24]
   3a298:	str	x3, [sp, #16]
   3a29c:	ldr	w0, [sp, #36]
   3a2a0:	sub	w0, w0, #0x1
   3a2a4:	cmp	w0, #0x4f
   3a2a8:	b.hi	3a30c <__asan_cplus_demangle_fill_dtor@@Base+0x184>  // b.pmore
   3a2ac:	adrp	x1, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   3a2b0:	add	x1, x1, #0x530
   3a2b4:	ldr	w0, [x1, w0, uxtw #2]
   3a2b8:	adr	x1, 3a2c4 <__asan_cplus_demangle_fill_dtor@@Base+0x13c>
   3a2bc:	add	x0, x1, w0, sxtw #2
   3a2c0:	br	x0
   3a2c4:	ldr	x0, [sp, #24]
   3a2c8:	cmp	x0, #0x0
   3a2cc:	b.eq	3a2dc <__asan_cplus_demangle_fill_dtor@@Base+0x154>  // b.none
   3a2d0:	ldr	x0, [sp, #16]
   3a2d4:	cmp	x0, #0x0
   3a2d8:	b.ne	3a31c <__asan_cplus_demangle_fill_dtor@@Base+0x194>  // b.any
   3a2dc:	mov	x0, #0x0                   	// #0
   3a2e0:	b	3a370 <__asan_cplus_demangle_fill_dtor@@Base+0x1e8>
   3a2e4:	ldr	x0, [sp, #24]
   3a2e8:	cmp	x0, #0x0
   3a2ec:	b.ne	3a324 <__asan_cplus_demangle_fill_dtor@@Base+0x19c>  // b.any
   3a2f0:	mov	x0, #0x0                   	// #0
   3a2f4:	b	3a370 <__asan_cplus_demangle_fill_dtor@@Base+0x1e8>
   3a2f8:	ldr	x0, [sp, #16]
   3a2fc:	cmp	x0, #0x0
   3a300:	b.ne	3a32c <__asan_cplus_demangle_fill_dtor@@Base+0x1a4>  // b.any
   3a304:	mov	x0, #0x0                   	// #0
   3a308:	b	3a370 <__asan_cplus_demangle_fill_dtor@@Base+0x1e8>
   3a30c:	mov	x0, #0x0                   	// #0
   3a310:	b	3a370 <__asan_cplus_demangle_fill_dtor@@Base+0x1e8>
   3a314:	nop
   3a318:	b	3a330 <__asan_cplus_demangle_fill_dtor@@Base+0x1a8>
   3a31c:	nop
   3a320:	b	3a330 <__asan_cplus_demangle_fill_dtor@@Base+0x1a8>
   3a324:	nop
   3a328:	b	3a330 <__asan_cplus_demangle_fill_dtor@@Base+0x1a8>
   3a32c:	nop
   3a330:	ldr	x0, [sp, #40]
   3a334:	bl	3a208 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3a338:	str	x0, [sp, #56]
   3a33c:	ldr	x0, [sp, #56]
   3a340:	cmp	x0, #0x0
   3a344:	b.eq	3a36c <__asan_cplus_demangle_fill_dtor@@Base+0x1e4>  // b.none
   3a348:	ldr	x0, [sp, #56]
   3a34c:	ldr	w1, [sp, #36]
   3a350:	str	w1, [x0]
   3a354:	ldr	x0, [sp, #56]
   3a358:	ldr	x1, [sp, #24]
   3a35c:	str	x1, [x0, #8]
   3a360:	ldr	x0, [sp, #56]
   3a364:	ldr	x1, [sp, #16]
   3a368:	str	x1, [x0, #16]
   3a36c:	ldr	x0, [sp, #56]
   3a370:	ldp	x29, x30, [sp], #64
   3a374:	ret
   3a378:	stp	x29, x30, [sp, #-32]!
   3a37c:	mov	x29, sp
   3a380:	str	x0, [sp, #24]
   3a384:	str	x1, [sp, #16]
   3a388:	ldr	x0, [sp, #24]
   3a38c:	ldr	x0, [x0, #24]
   3a390:	ldrb	w0, [x0]
   3a394:	cmp	w0, #0x5f
   3a398:	b.ne	3a3b4 <__asan_cplus_demangle_fill_dtor@@Base+0x22c>  // b.any
   3a39c:	ldr	x0, [sp, #24]
   3a3a0:	ldr	x0, [x0, #24]
   3a3a4:	add	x0, x0, #0x1
   3a3a8:	ldrb	w0, [x0]
   3a3ac:	cmp	w0, #0x5a
   3a3b0:	b.eq	3a3d0 <__asan_cplus_demangle_fill_dtor@@Base+0x248>  // b.none
   3a3b4:	ldr	x0, [sp, #16]
   3a3b8:	bl	66e0 <__asan_internal_strlen@plt>
   3a3bc:	mov	w2, w0
   3a3c0:	ldr	x1, [sp, #16]
   3a3c4:	ldr	x0, [sp, #24]
   3a3c8:	bl	3a3f8 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   3a3cc:	b	3a3f0 <__asan_cplus_demangle_fill_dtor@@Base+0x268>
   3a3d0:	ldr	x0, [sp, #24]
   3a3d4:	ldr	x0, [x0, #24]
   3a3d8:	add	x1, x0, #0x2
   3a3dc:	ldr	x0, [sp, #24]
   3a3e0:	str	x1, [x0, #24]
   3a3e4:	mov	w1, #0x0                   	// #0
   3a3e8:	ldr	x0, [sp, #24]
   3a3ec:	bl	3a9e0 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   3a3f0:	ldp	x29, x30, [sp], #32
   3a3f4:	ret
   3a3f8:	stp	x29, x30, [sp, #-64]!
   3a3fc:	mov	x29, sp
   3a400:	str	x0, [sp, #40]
   3a404:	str	x1, [sp, #32]
   3a408:	str	w2, [sp, #28]
   3a40c:	ldr	x0, [sp, #40]
   3a410:	bl	3a208 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3a414:	str	x0, [sp, #56]
   3a418:	ldr	w2, [sp, #28]
   3a41c:	ldr	x1, [sp, #32]
   3a420:	ldr	x0, [sp, #56]
   3a424:	bl	66c0 <__asan_cplus_demangle_fill_name@plt>
   3a428:	cmp	w0, #0x0
   3a42c:	b.ne	3a438 <__asan_cplus_demangle_fill_dtor@@Base+0x2b0>  // b.any
   3a430:	mov	x0, #0x0                   	// #0
   3a434:	b	3a43c <__asan_cplus_demangle_fill_dtor@@Base+0x2b4>
   3a438:	ldr	x0, [sp, #56]
   3a43c:	ldp	x29, x30, [sp], #64
   3a440:	ret
   3a444:	stp	x29, x30, [sp, #-48]!
   3a448:	mov	x29, sp
   3a44c:	str	x0, [sp, #24]
   3a450:	str	x1, [sp, #16]
   3a454:	ldr	x0, [sp, #16]
   3a458:	cmp	x0, #0x0
   3a45c:	b.ne	3a468 <__asan_cplus_demangle_fill_dtor@@Base+0x2e0>  // b.any
   3a460:	mov	x0, #0x0                   	// #0
   3a464:	b	3a49c <__asan_cplus_demangle_fill_dtor@@Base+0x314>
   3a468:	ldr	x0, [sp, #24]
   3a46c:	bl	3a208 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3a470:	str	x0, [sp, #40]
   3a474:	ldr	x0, [sp, #40]
   3a478:	cmp	x0, #0x0
   3a47c:	b.eq	3a498 <__asan_cplus_demangle_fill_dtor@@Base+0x310>  // b.none
   3a480:	ldr	x0, [sp, #40]
   3a484:	mov	w1, #0x27                  	// #39
   3a488:	str	w1, [x0]
   3a48c:	ldr	x0, [sp, #40]
   3a490:	ldr	x1, [sp, #16]
   3a494:	str	x1, [x0, #8]
   3a498:	ldr	x0, [sp, #40]
   3a49c:	ldp	x29, x30, [sp], #48
   3a4a0:	ret
   3a4a4:	stp	x29, x30, [sp, #-48]!
   3a4a8:	mov	x29, sp
   3a4ac:	str	x0, [sp, #24]
   3a4b0:	str	x1, [sp, #16]
   3a4b4:	ldr	x0, [sp, #24]
   3a4b8:	bl	3a208 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3a4bc:	str	x0, [sp, #40]
   3a4c0:	ldr	x0, [sp, #40]
   3a4c4:	cmp	x0, #0x0
   3a4c8:	b.eq	3a4e4 <__asan_cplus_demangle_fill_dtor@@Base+0x35c>  // b.none
   3a4cc:	ldr	x0, [sp, #40]
   3a4d0:	mov	w1, #0x32                  	// #50
   3a4d4:	str	w1, [x0]
   3a4d8:	ldr	x0, [sp, #40]
   3a4dc:	ldr	x1, [sp, #16]
   3a4e0:	str	x1, [x0, #8]
   3a4e4:	ldr	x0, [sp, #40]
   3a4e8:	ldp	x29, x30, [sp], #48
   3a4ec:	ret
   3a4f0:	stp	x29, x30, [sp, #-64]!
   3a4f4:	mov	x29, sp
   3a4f8:	str	x0, [sp, #40]
   3a4fc:	str	w1, [sp, #36]
   3a500:	str	x2, [sp, #24]
   3a504:	ldr	x0, [sp, #40]
   3a508:	bl	3a208 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3a50c:	str	x0, [sp, #56]
   3a510:	ldr	x2, [sp, #24]
   3a514:	ldr	w1, [sp, #36]
   3a518:	ldr	x0, [sp, #56]
   3a51c:	bl	6a20 <__asan_cplus_demangle_fill_extended_operator@plt>
   3a520:	cmp	w0, #0x0
   3a524:	b.ne	3a530 <__asan_cplus_demangle_fill_dtor@@Base+0x3a8>  // b.any
   3a528:	mov	x0, #0x0                   	// #0
   3a52c:	b	3a534 <__asan_cplus_demangle_fill_dtor@@Base+0x3ac>
   3a530:	ldr	x0, [sp, #56]
   3a534:	ldp	x29, x30, [sp], #64
   3a538:	ret
   3a53c:	stp	x29, x30, [sp, #-64]!
   3a540:	mov	x29, sp
   3a544:	str	x0, [sp, #40]
   3a548:	str	w1, [sp, #36]
   3a54c:	str	x2, [sp, #24]
   3a550:	ldr	x0, [sp, #40]
   3a554:	bl	3a208 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3a558:	str	x0, [sp, #56]
   3a55c:	ldr	x0, [sp, #56]
   3a560:	cmp	x0, #0x0
   3a564:	b.eq	3a58c <__asan_cplus_demangle_fill_dtor@@Base+0x404>  // b.none
   3a568:	ldr	x0, [sp, #56]
   3a56c:	mov	w1, #0x47                  	// #71
   3a570:	str	w1, [x0]
   3a574:	ldr	x0, [sp, #56]
   3a578:	ldr	w1, [sp, #36]
   3a57c:	str	w1, [x0, #16]
   3a580:	ldr	x0, [sp, #56]
   3a584:	ldr	x1, [sp, #24]
   3a588:	str	x1, [x0, #8]
   3a58c:	ldr	x0, [sp, #56]
   3a590:	ldp	x29, x30, [sp], #64
   3a594:	ret
   3a598:	stp	x29, x30, [sp, #-64]!
   3a59c:	mov	x29, sp
   3a5a0:	str	x0, [sp, #40]
   3a5a4:	str	w1, [sp, #36]
   3a5a8:	str	x2, [sp, #24]
   3a5ac:	ldr	x0, [sp, #40]
   3a5b0:	bl	3a208 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3a5b4:	str	x0, [sp, #56]
   3a5b8:	ldr	x2, [sp, #24]
   3a5bc:	ldr	w1, [sp, #36]
   3a5c0:	ldr	x0, [sp, #56]
   3a5c4:	bl	6a90 <__asan_cplus_demangle_fill_ctor@plt>
   3a5c8:	cmp	w0, #0x0
   3a5cc:	b.ne	3a5d8 <__asan_cplus_demangle_fill_dtor@@Base+0x450>  // b.any
   3a5d0:	mov	x0, #0x0                   	// #0
   3a5d4:	b	3a5dc <__asan_cplus_demangle_fill_dtor@@Base+0x454>
   3a5d8:	ldr	x0, [sp, #56]
   3a5dc:	ldp	x29, x30, [sp], #64
   3a5e0:	ret
   3a5e4:	stp	x29, x30, [sp, #-64]!
   3a5e8:	mov	x29, sp
   3a5ec:	str	x0, [sp, #40]
   3a5f0:	str	w1, [sp, #36]
   3a5f4:	str	x2, [sp, #24]
   3a5f8:	ldr	x0, [sp, #40]
   3a5fc:	bl	3a208 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3a600:	str	x0, [sp, #56]
   3a604:	ldr	x2, [sp, #24]
   3a608:	ldr	w1, [sp, #36]
   3a60c:	ldr	x0, [sp, #56]
   3a610:	bl	6c50 <__asan_cplus_demangle_fill_dtor@plt>
   3a614:	cmp	w0, #0x0
   3a618:	b.ne	3a624 <__asan_cplus_demangle_fill_dtor@@Base+0x49c>  // b.any
   3a61c:	mov	x0, #0x0                   	// #0
   3a620:	b	3a628 <__asan_cplus_demangle_fill_dtor@@Base+0x4a0>
   3a624:	ldr	x0, [sp, #56]
   3a628:	ldp	x29, x30, [sp], #64
   3a62c:	ret
   3a630:	stp	x29, x30, [sp, #-48]!
   3a634:	mov	x29, sp
   3a638:	str	x0, [sp, #24]
   3a63c:	str	w1, [sp, #20]
   3a640:	ldr	x0, [sp, #24]
   3a644:	bl	3a208 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3a648:	str	x0, [sp, #40]
   3a64c:	ldr	x0, [sp, #40]
   3a650:	cmp	x0, #0x0
   3a654:	b.eq	3a670 <__asan_cplus_demangle_fill_dtor@@Base+0x4e8>  // b.none
   3a658:	ldr	x0, [sp, #40]
   3a65c:	mov	w1, #0x5                   	// #5
   3a660:	str	w1, [x0]
   3a664:	ldrsw	x1, [sp, #20]
   3a668:	ldr	x0, [sp, #40]
   3a66c:	str	x1, [x0, #8]
   3a670:	ldr	x0, [sp, #40]
   3a674:	ldp	x29, x30, [sp], #48
   3a678:	ret
   3a67c:	stp	x29, x30, [sp, #-48]!
   3a680:	mov	x29, sp
   3a684:	str	x0, [sp, #24]
   3a688:	str	w1, [sp, #20]
   3a68c:	ldr	x0, [sp, #24]
   3a690:	bl	3a208 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3a694:	str	x0, [sp, #40]
   3a698:	ldr	x0, [sp, #40]
   3a69c:	cmp	x0, #0x0
   3a6a0:	b.eq	3a6bc <__asan_cplus_demangle_fill_dtor@@Base+0x534>  // b.none
   3a6a4:	ldr	x0, [sp, #40]
   3a6a8:	mov	w1, #0x6                   	// #6
   3a6ac:	str	w1, [x0]
   3a6b0:	ldrsw	x1, [sp, #20]
   3a6b4:	ldr	x0, [sp, #40]
   3a6b8:	str	x1, [x0, #8]
   3a6bc:	ldr	x0, [sp, #40]
   3a6c0:	ldp	x29, x30, [sp], #48
   3a6c4:	ret
   3a6c8:	stp	x29, x30, [sp, #-64]!
   3a6cc:	mov	x29, sp
   3a6d0:	str	x0, [sp, #40]
   3a6d4:	str	x1, [sp, #32]
   3a6d8:	str	w2, [sp, #28]
   3a6dc:	ldr	x0, [sp, #40]
   3a6e0:	bl	3a208 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3a6e4:	str	x0, [sp, #56]
   3a6e8:	ldr	x0, [sp, #56]
   3a6ec:	cmp	x0, #0x0
   3a6f0:	b.eq	3a718 <__asan_cplus_demangle_fill_dtor@@Base+0x590>  // b.none
   3a6f4:	ldr	x0, [sp, #56]
   3a6f8:	mov	w1, #0x18                  	// #24
   3a6fc:	str	w1, [x0]
   3a700:	ldr	x0, [sp, #56]
   3a704:	ldr	x1, [sp, #32]
   3a708:	str	x1, [x0, #8]
   3a70c:	ldr	x0, [sp, #56]
   3a710:	ldr	w1, [sp, #28]
   3a714:	str	w1, [x0, #16]
   3a718:	ldr	x0, [sp, #56]
   3a71c:	ldp	x29, x30, [sp], #64
   3a720:	ret

000000000003a724 <__asan_cplus_demangle_mangled_name@@Base>:
   3a724:	stp	x29, x30, [sp, #-48]!
   3a728:	mov	x29, sp
   3a72c:	str	x0, [sp, #24]
   3a730:	str	w1, [sp, #20]
   3a734:	ldr	x0, [sp, #24]
   3a738:	ldr	x0, [x0, #24]
   3a73c:	ldrb	w0, [x0]
   3a740:	cmp	w0, #0x5f
   3a744:	b.ne	3a764 <__asan_cplus_demangle_mangled_name@@Base+0x40>  // b.any
   3a748:	ldr	x0, [sp, #24]
   3a74c:	ldr	x0, [x0, #24]
   3a750:	add	x1, x0, #0x1
   3a754:	ldr	x0, [sp, #24]
   3a758:	str	x1, [x0, #24]
   3a75c:	mov	w0, #0x0                   	// #0
   3a760:	b	3a768 <__asan_cplus_demangle_mangled_name@@Base+0x44>
   3a764:	mov	w0, #0x1                   	// #1
   3a768:	cmp	w0, #0x0
   3a76c:	b.eq	3a784 <__asan_cplus_demangle_mangled_name@@Base+0x60>  // b.none
   3a770:	ldr	w0, [sp, #20]
   3a774:	cmp	w0, #0x0
   3a778:	b.eq	3a784 <__asan_cplus_demangle_mangled_name@@Base+0x60>  // b.none
   3a77c:	mov	x0, #0x0                   	// #0
   3a780:	b	3a89c <__asan_cplus_demangle_mangled_name@@Base+0x178>
   3a784:	ldr	x0, [sp, #24]
   3a788:	ldr	x0, [x0, #24]
   3a78c:	ldrb	w0, [x0]
   3a790:	cmp	w0, #0x5a
   3a794:	b.ne	3a7b4 <__asan_cplus_demangle_mangled_name@@Base+0x90>  // b.any
   3a798:	ldr	x0, [sp, #24]
   3a79c:	ldr	x0, [x0, #24]
   3a7a0:	add	x1, x0, #0x1
   3a7a4:	ldr	x0, [sp, #24]
   3a7a8:	str	x1, [x0, #24]
   3a7ac:	mov	w0, #0x0                   	// #0
   3a7b0:	b	3a7b8 <__asan_cplus_demangle_mangled_name@@Base+0x94>
   3a7b4:	mov	w0, #0x1                   	// #1
   3a7b8:	cmp	w0, #0x0
   3a7bc:	b.eq	3a7c8 <__asan_cplus_demangle_mangled_name@@Base+0xa4>  // b.none
   3a7c0:	mov	x0, #0x0                   	// #0
   3a7c4:	b	3a89c <__asan_cplus_demangle_mangled_name@@Base+0x178>
   3a7c8:	ldr	w1, [sp, #20]
   3a7cc:	ldr	x0, [sp, #24]
   3a7d0:	bl	3a9e0 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   3a7d4:	str	x0, [sp, #40]
   3a7d8:	ldr	w0, [sp, #20]
   3a7dc:	cmp	w0, #0x0
   3a7e0:	b.eq	3a898 <__asan_cplus_demangle_mangled_name@@Base+0x174>  // b.none
   3a7e4:	ldr	x0, [sp, #24]
   3a7e8:	ldr	w0, [x0, #16]
   3a7ec:	and	w0, w0, #0x1
   3a7f0:	cmp	w0, #0x0
   3a7f4:	b.eq	3a898 <__asan_cplus_demangle_mangled_name@@Base+0x174>  // b.none
   3a7f8:	b	3a80c <__asan_cplus_demangle_mangled_name@@Base+0xe8>
   3a7fc:	ldr	x1, [sp, #40]
   3a800:	ldr	x0, [sp, #24]
   3a804:	bl	3f32c <__asan_cplus_demangle_type@@Base+0x2c98>
   3a808:	str	x0, [sp, #40]
   3a80c:	ldr	x0, [sp, #24]
   3a810:	ldr	x0, [x0, #24]
   3a814:	ldrb	w0, [x0]
   3a818:	cmp	w0, #0x2e
   3a81c:	b.ne	3a898 <__asan_cplus_demangle_mangled_name@@Base+0x174>  // b.any
   3a820:	ldr	x0, [sp, #24]
   3a824:	ldr	x0, [x0, #24]
   3a828:	add	x0, x0, #0x1
   3a82c:	ldrb	w0, [x0]
   3a830:	cmp	w0, #0x60
   3a834:	b.ls	3a850 <__asan_cplus_demangle_mangled_name@@Base+0x12c>  // b.plast
   3a838:	ldr	x0, [sp, #24]
   3a83c:	ldr	x0, [x0, #24]
   3a840:	add	x0, x0, #0x1
   3a844:	ldrb	w0, [x0]
   3a848:	cmp	w0, #0x7a
   3a84c:	b.ls	3a7fc <__asan_cplus_demangle_mangled_name@@Base+0xd8>  // b.plast
   3a850:	ldr	x0, [sp, #24]
   3a854:	ldr	x0, [x0, #24]
   3a858:	add	x0, x0, #0x1
   3a85c:	ldrb	w0, [x0]
   3a860:	cmp	w0, #0x5f
   3a864:	b.eq	3a7fc <__asan_cplus_demangle_mangled_name@@Base+0xd8>  // b.none
   3a868:	ldr	x0, [sp, #24]
   3a86c:	ldr	x0, [x0, #24]
   3a870:	add	x0, x0, #0x1
   3a874:	ldrb	w0, [x0]
   3a878:	cmp	w0, #0x2f
   3a87c:	b.ls	3a898 <__asan_cplus_demangle_mangled_name@@Base+0x174>  // b.plast
   3a880:	ldr	x0, [sp, #24]
   3a884:	ldr	x0, [x0, #24]
   3a888:	add	x0, x0, #0x1
   3a88c:	ldrb	w0, [x0]
   3a890:	cmp	w0, #0x39
   3a894:	b.ls	3a7fc <__asan_cplus_demangle_mangled_name@@Base+0xd8>  // b.plast
   3a898:	ldr	x0, [sp, #40]
   3a89c:	ldp	x29, x30, [sp], #48
   3a8a0:	ret
   3a8a4:	stp	x29, x30, [sp, #-32]!
   3a8a8:	mov	x29, sp
   3a8ac:	str	x0, [sp, #24]
   3a8b0:	ldr	x0, [sp, #24]
   3a8b4:	cmp	x0, #0x0
   3a8b8:	b.ne	3a8c4 <__asan_cplus_demangle_mangled_name@@Base+0x1a0>  // b.any
   3a8bc:	mov	w0, #0x0                   	// #0
   3a8c0:	b	3a95c <__asan_cplus_demangle_mangled_name@@Base+0x238>
   3a8c4:	ldr	x0, [sp, #24]
   3a8c8:	ldr	w0, [x0]
   3a8cc:	cmp	w0, #0x50
   3a8d0:	b.hi	3a91c <__asan_cplus_demangle_mangled_name@@Base+0x1f8>  // b.pmore
   3a8d4:	cmp	w0, #0x1c
   3a8d8:	b.cs	3a8f0 <__asan_cplus_demangle_mangled_name@@Base+0x1cc>  // b.hs, b.nlast
   3a8dc:	cmp	w0, #0x2
   3a8e0:	b.eq	3a924 <__asan_cplus_demangle_mangled_name@@Base+0x200>  // b.none
   3a8e4:	cmp	w0, #0x4
   3a8e8:	b.eq	3a934 <__asan_cplus_demangle_mangled_name@@Base+0x210>  // b.none
   3a8ec:	b	3a91c <__asan_cplus_demangle_mangled_name@@Base+0x1f8>
   3a8f0:	sub	w0, w0, #0x1c
   3a8f4:	mov	x1, #0x1                   	// #1
   3a8f8:	lsl	x1, x1, x0
   3a8fc:	mov	x0, #0x1f                  	// #31
   3a900:	movk	x0, #0x1a, lsl #48
   3a904:	and	x0, x1, x0
   3a908:	cmp	x0, #0x0
   3a90c:	cset	w0, ne  // ne = any
   3a910:	and	w0, w0, #0xff
   3a914:	cmp	w0, #0x0
   3a918:	b.ne	3a950 <__asan_cplus_demangle_mangled_name@@Base+0x22c>  // b.any
   3a91c:	mov	w0, #0x0                   	// #0
   3a920:	b	3a95c <__asan_cplus_demangle_mangled_name@@Base+0x238>
   3a924:	ldr	x0, [sp, #24]
   3a928:	ldr	x0, [x0, #16]
   3a92c:	bl	3a8a4 <__asan_cplus_demangle_mangled_name@@Base+0x180>
   3a930:	b	3a95c <__asan_cplus_demangle_mangled_name@@Base+0x238>
   3a934:	ldr	x0, [sp, #24]
   3a938:	ldr	x0, [x0, #8]
   3a93c:	bl	3a964 <__asan_cplus_demangle_mangled_name@@Base+0x240>
   3a940:	cmp	w0, #0x0
   3a944:	cset	w0, eq  // eq = none
   3a948:	and	w0, w0, #0xff
   3a94c:	b	3a95c <__asan_cplus_demangle_mangled_name@@Base+0x238>
   3a950:	ldr	x0, [sp, #24]
   3a954:	ldr	x0, [x0, #8]
   3a958:	bl	3a8a4 <__asan_cplus_demangle_mangled_name@@Base+0x180>
   3a95c:	ldp	x29, x30, [sp], #32
   3a960:	ret
   3a964:	stp	x29, x30, [sp, #-32]!
   3a968:	mov	x29, sp
   3a96c:	str	x0, [sp, #24]
   3a970:	ldr	x0, [sp, #24]
   3a974:	cmp	x0, #0x0
   3a978:	b.ne	3a984 <__asan_cplus_demangle_mangled_name@@Base+0x260>  // b.any
   3a97c:	mov	w0, #0x0                   	// #0
   3a980:	b	3a9d8 <__asan_cplus_demangle_mangled_name@@Base+0x2b4>
   3a984:	ldr	x0, [sp, #24]
   3a988:	ldr	w0, [x0]
   3a98c:	cmp	w0, #0x35
   3a990:	b.eq	3a9d4 <__asan_cplus_demangle_mangled_name@@Base+0x2b0>  // b.none
   3a994:	cmp	w0, #0x35
   3a998:	b.hi	3a9bc <__asan_cplus_demangle_mangled_name@@Base+0x298>  // b.pmore
   3a99c:	cmp	w0, #0x2
   3a9a0:	b.hi	3a9b0 <__asan_cplus_demangle_mangled_name@@Base+0x28c>  // b.pmore
   3a9a4:	cmp	w0, #0x0
   3a9a8:	b.ne	3a9c4 <__asan_cplus_demangle_mangled_name@@Base+0x2a0>  // b.any
   3a9ac:	b	3a9bc <__asan_cplus_demangle_mangled_name@@Base+0x298>
   3a9b0:	sub	w0, w0, #0x7
   3a9b4:	cmp	w0, #0x1
   3a9b8:	b.ls	3a9d4 <__asan_cplus_demangle_mangled_name@@Base+0x2b0>  // b.plast
   3a9bc:	mov	w0, #0x0                   	// #0
   3a9c0:	b	3a9d8 <__asan_cplus_demangle_mangled_name@@Base+0x2b4>
   3a9c4:	ldr	x0, [sp, #24]
   3a9c8:	ldr	x0, [x0, #16]
   3a9cc:	bl	3a964 <__asan_cplus_demangle_mangled_name@@Base+0x240>
   3a9d0:	b	3a9d8 <__asan_cplus_demangle_mangled_name@@Base+0x2b4>
   3a9d4:	mov	w0, #0x1                   	// #1
   3a9d8:	ldp	x29, x30, [sp], #32
   3a9dc:	ret
   3a9e0:	stp	x29, x30, [sp, #-64]!
   3a9e4:	mov	x29, sp
   3a9e8:	str	x0, [sp, #24]
   3a9ec:	str	w1, [sp, #20]
   3a9f0:	ldr	x0, [sp, #24]
   3a9f4:	ldr	x0, [x0, #24]
   3a9f8:	ldrb	w0, [x0]
   3a9fc:	strb	w0, [sp, #55]
   3aa00:	ldrb	w0, [sp, #55]
   3aa04:	cmp	w0, #0x47
   3aa08:	b.eq	3aa18 <__asan_cplus_demangle_mangled_name@@Base+0x2f4>  // b.none
   3aa0c:	ldrb	w0, [sp, #55]
   3aa10:	cmp	w0, #0x54
   3aa14:	b.ne	3aa28 <__asan_cplus_demangle_mangled_name@@Base+0x304>  // b.any
   3aa18:	ldr	x0, [sp, #24]
   3aa1c:	bl	3bc48 <__asan_cplus_demangle_mangled_name@@Base+0x1524>
   3aa20:	str	x0, [sp, #56]
   3aa24:	b	3ab68 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   3aa28:	ldr	x0, [sp, #24]
   3aa2c:	bl	3ac00 <__asan_cplus_demangle_mangled_name@@Base+0x4dc>
   3aa30:	str	x0, [sp, #56]
   3aa34:	ldr	x0, [sp, #56]
   3aa38:	cmp	x0, #0x0
   3aa3c:	b.eq	3ab68 <__asan_cplus_demangle_mangled_name@@Base+0x444>  // b.none
   3aa40:	ldr	w0, [sp, #20]
   3aa44:	cmp	w0, #0x0
   3aa48:	b.eq	3aac8 <__asan_cplus_demangle_mangled_name@@Base+0x3a4>  // b.none
   3aa4c:	ldr	x0, [sp, #24]
   3aa50:	ldr	w0, [x0, #16]
   3aa54:	and	w0, w0, #0x1
   3aa58:	cmp	w0, #0x0
   3aa5c:	b.ne	3aac8 <__asan_cplus_demangle_mangled_name@@Base+0x3a4>  // b.any
   3aa60:	b	3aa70 <__asan_cplus_demangle_mangled_name@@Base+0x34c>
   3aa64:	ldr	x0, [sp, #56]
   3aa68:	ldr	x0, [x0, #8]
   3aa6c:	str	x0, [sp, #56]
   3aa70:	ldr	x0, [sp, #56]
   3aa74:	ldr	w0, [x0]
   3aa78:	bl	39fc0 <__asan_backtrace_create_state@@Base+0xa4>
   3aa7c:	cmp	w0, #0x0
   3aa80:	b.ne	3aa64 <__asan_cplus_demangle_mangled_name@@Base+0x340>  // b.any
   3aa84:	ldr	x0, [sp, #56]
   3aa88:	ldr	w0, [x0]
   3aa8c:	cmp	w0, #0x2
   3aa90:	b.ne	3ab68 <__asan_cplus_demangle_mangled_name@@Base+0x444>  // b.any
   3aa94:	b	3aaac <__asan_cplus_demangle_mangled_name@@Base+0x388>
   3aa98:	ldr	x0, [sp, #56]
   3aa9c:	ldr	x0, [x0, #16]
   3aaa0:	ldr	x1, [x0, #8]
   3aaa4:	ldr	x0, [sp, #56]
   3aaa8:	str	x1, [x0, #16]
   3aaac:	ldr	x0, [sp, #56]
   3aab0:	ldr	x0, [x0, #16]
   3aab4:	ldr	w0, [x0]
   3aab8:	bl	39fc0 <__asan_backtrace_create_state@@Base+0xa4>
   3aabc:	cmp	w0, #0x0
   3aac0:	b.ne	3aa98 <__asan_cplus_demangle_mangled_name@@Base+0x374>  // b.any
   3aac4:	b	3ab68 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   3aac8:	ldr	x0, [sp, #24]
   3aacc:	ldr	x0, [x0, #24]
   3aad0:	ldrb	w0, [x0]
   3aad4:	strb	w0, [sp, #55]
   3aad8:	ldrb	w0, [sp, #55]
   3aadc:	cmp	w0, #0x0
   3aae0:	b.eq	3ab68 <__asan_cplus_demangle_mangled_name@@Base+0x444>  // b.none
   3aae4:	ldrb	w0, [sp, #55]
   3aae8:	cmp	w0, #0x45
   3aaec:	b.eq	3ab68 <__asan_cplus_demangle_mangled_name@@Base+0x444>  // b.none
   3aaf0:	ldr	x0, [sp, #56]
   3aaf4:	bl	3a8a4 <__asan_cplus_demangle_mangled_name@@Base+0x180>
   3aaf8:	mov	w1, w0
   3aafc:	ldr	x0, [sp, #24]
   3ab00:	bl	3d900 <__asan_cplus_demangle_type@@Base+0x126c>
   3ab04:	str	x0, [sp, #40]
   3ab08:	ldr	x0, [sp, #40]
   3ab0c:	cmp	x0, #0x0
   3ab10:	b.eq	3ab64 <__asan_cplus_demangle_mangled_name@@Base+0x440>  // b.none
   3ab14:	ldr	w0, [sp, #20]
   3ab18:	cmp	w0, #0x0
   3ab1c:	b.ne	3ab48 <__asan_cplus_demangle_mangled_name@@Base+0x424>  // b.any
   3ab20:	ldr	x0, [sp, #56]
   3ab24:	ldr	w0, [x0]
   3ab28:	cmp	w0, #0x2
   3ab2c:	b.ne	3ab48 <__asan_cplus_demangle_mangled_name@@Base+0x424>  // b.any
   3ab30:	ldr	x0, [sp, #40]
   3ab34:	ldr	w0, [x0]
   3ab38:	cmp	w0, #0x29
   3ab3c:	b.ne	3ab48 <__asan_cplus_demangle_mangled_name@@Base+0x424>  // b.any
   3ab40:	ldr	x0, [sp, #40]
   3ab44:	str	xzr, [x0, #8]
   3ab48:	ldr	x3, [sp, #40]
   3ab4c:	ldr	x2, [sp, #56]
   3ab50:	mov	w1, #0x3                   	// #3
   3ab54:	ldr	x0, [sp, #24]
   3ab58:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3ab5c:	str	x0, [sp, #56]
   3ab60:	b	3ab68 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   3ab64:	str	xzr, [sp, #56]
   3ab68:	ldr	x0, [sp, #56]
   3ab6c:	ldp	x29, x30, [sp], #64
   3ab70:	ret
   3ab74:	stp	x29, x30, [sp, #-64]!
   3ab78:	mov	x29, sp
   3ab7c:	str	x0, [sp, #24]
   3ab80:	str	x1, [sp, #16]
   3ab84:	ldr	x0, [sp, #24]
   3ab88:	ldr	x0, [x0, #64]
   3ab8c:	str	x0, [sp, #56]
   3ab90:	b	3abcc <__asan_cplus_demangle_mangled_name@@Base+0x4a8>
   3ab94:	ldr	x0, [sp, #24]
   3ab98:	ldr	x0, [x0, #24]
   3ab9c:	add	x1, x0, #0x1
   3aba0:	ldr	x0, [sp, #24]
   3aba4:	str	x1, [x0, #24]
   3aba8:	ldr	x0, [sp, #24]
   3abac:	bl	3b384 <__asan_cplus_demangle_mangled_name@@Base+0xc60>
   3abb0:	str	x0, [sp, #40]
   3abb4:	ldr	x3, [sp, #40]
   3abb8:	ldr	x2, [sp, #16]
   3abbc:	mov	w1, #0x4c                  	// #76
   3abc0:	ldr	x0, [sp, #24]
   3abc4:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3abc8:	str	x0, [sp, #16]
   3abcc:	ldr	x0, [sp, #24]
   3abd0:	ldr	x0, [x0, #24]
   3abd4:	ldrb	w0, [x0]
   3abd8:	strb	w0, [sp, #55]
   3abdc:	ldrb	w0, [sp, #55]
   3abe0:	cmp	w0, #0x42
   3abe4:	b.eq	3ab94 <__asan_cplus_demangle_mangled_name@@Base+0x470>  // b.none
   3abe8:	ldr	x0, [sp, #24]
   3abec:	ldr	x1, [sp, #56]
   3abf0:	str	x1, [x0, #64]
   3abf4:	ldr	x0, [sp, #16]
   3abf8:	ldp	x29, x30, [sp], #64
   3abfc:	ret
   3ac00:	stp	x29, x30, [sp, #-64]!
   3ac04:	mov	x29, sp
   3ac08:	str	x19, [sp, #16]
   3ac0c:	str	x0, [sp, #40]
   3ac10:	ldr	x0, [sp, #40]
   3ac14:	ldr	x0, [x0, #24]
   3ac18:	ldrb	w0, [x0]
   3ac1c:	strb	w0, [sp, #51]
   3ac20:	ldrb	w0, [sp, #51]
   3ac24:	cmp	w0, #0x5a
   3ac28:	b.eq	3ac64 <__asan_cplus_demangle_mangled_name@@Base+0x540>  // b.none
   3ac2c:	cmp	w0, #0x5a
   3ac30:	b.gt	3ad78 <__asan_cplus_demangle_mangled_name@@Base+0x654>
   3ac34:	cmp	w0, #0x55
   3ac38:	b.eq	3ac70 <__asan_cplus_demangle_mangled_name@@Base+0x54c>  // b.none
   3ac3c:	cmp	w0, #0x55
   3ac40:	b.gt	3ad78 <__asan_cplus_demangle_mangled_name@@Base+0x654>
   3ac44:	cmp	w0, #0x4e
   3ac48:	b.eq	3ac58 <__asan_cplus_demangle_mangled_name@@Base+0x534>  // b.none
   3ac4c:	cmp	w0, #0x53
   3ac50:	b.eq	3ac7c <__asan_cplus_demangle_mangled_name@@Base+0x558>  // b.none
   3ac54:	b	3ad78 <__asan_cplus_demangle_mangled_name@@Base+0x654>
   3ac58:	ldr	x0, [sp, #40]
   3ac5c:	bl	3ade4 <__asan_cplus_demangle_mangled_name@@Base+0x6c0>
   3ac60:	b	3add8 <__asan_cplus_demangle_mangled_name@@Base+0x6b4>
   3ac64:	ldr	x0, [sp, #40]
   3ac68:	bl	3ed94 <__asan_cplus_demangle_type@@Base+0x2700>
   3ac6c:	b	3add8 <__asan_cplus_demangle_mangled_name@@Base+0x6b4>
   3ac70:	ldr	x0, [sp, #40]
   3ac74:	bl	3b140 <__asan_cplus_demangle_mangled_name@@Base+0xa1c>
   3ac78:	b	3add8 <__asan_cplus_demangle_mangled_name@@Base+0x6b4>
   3ac7c:	ldr	x0, [sp, #40]
   3ac80:	ldr	x0, [x0, #24]
   3ac84:	add	x0, x0, #0x1
   3ac88:	ldrb	w0, [x0]
   3ac8c:	cmp	w0, #0x74
   3ac90:	b.eq	3acb0 <__asan_cplus_demangle_mangled_name@@Base+0x58c>  // b.none
   3ac94:	mov	w1, #0x0                   	// #0
   3ac98:	ldr	x0, [sp, #40]
   3ac9c:	bl	3f540 <__asan_cplus_demangle_type@@Base+0x2eac>
   3aca0:	str	x0, [sp, #56]
   3aca4:	mov	w0, #0x1                   	// #1
   3aca8:	str	w0, [sp, #52]
   3acac:	b	3ad14 <__asan_cplus_demangle_mangled_name@@Base+0x5f0>
   3acb0:	ldr	x0, [sp, #40]
   3acb4:	ldr	x0, [x0, #24]
   3acb8:	add	x1, x0, #0x2
   3acbc:	ldr	x0, [sp, #40]
   3acc0:	str	x1, [x0, #24]
   3acc4:	mov	w2, #0x3                   	// #3
   3acc8:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   3accc:	add	x1, x0, #0x670
   3acd0:	ldr	x0, [sp, #40]
   3acd4:	bl	3a3f8 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   3acd8:	mov	x19, x0
   3acdc:	ldr	x0, [sp, #40]
   3ace0:	bl	3b140 <__asan_cplus_demangle_mangled_name@@Base+0xa1c>
   3ace4:	mov	x3, x0
   3ace8:	mov	x2, x19
   3acec:	mov	w1, #0x1                   	// #1
   3acf0:	ldr	x0, [sp, #40]
   3acf4:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3acf8:	str	x0, [sp, #56]
   3acfc:	ldr	x0, [sp, #40]
   3ad00:	ldr	w0, [x0, #72]
   3ad04:	add	w1, w0, #0x3
   3ad08:	ldr	x0, [sp, #40]
   3ad0c:	str	w1, [x0, #72]
   3ad10:	str	wzr, [sp, #52]
   3ad14:	ldr	x0, [sp, #40]
   3ad18:	ldr	x0, [x0, #24]
   3ad1c:	ldrb	w0, [x0]
   3ad20:	cmp	w0, #0x49
   3ad24:	b.ne	3ad70 <__asan_cplus_demangle_mangled_name@@Base+0x64c>  // b.any
   3ad28:	ldr	w0, [sp, #52]
   3ad2c:	cmp	w0, #0x0
   3ad30:	b.ne	3ad50 <__asan_cplus_demangle_mangled_name@@Base+0x62c>  // b.any
   3ad34:	ldr	x1, [sp, #56]
   3ad38:	ldr	x0, [sp, #40]
   3ad3c:	bl	3f4bc <__asan_cplus_demangle_type@@Base+0x2e28>
   3ad40:	cmp	w0, #0x0
   3ad44:	b.ne	3ad50 <__asan_cplus_demangle_mangled_name@@Base+0x62c>  // b.any
   3ad48:	mov	x0, #0x0                   	// #0
   3ad4c:	b	3add8 <__asan_cplus_demangle_mangled_name@@Base+0x6b4>
   3ad50:	ldr	x0, [sp, #40]
   3ad54:	bl	3de08 <__asan_cplus_demangle_type@@Base+0x1774>
   3ad58:	mov	x3, x0
   3ad5c:	ldr	x2, [sp, #56]
   3ad60:	mov	w1, #0x4                   	// #4
   3ad64:	ldr	x0, [sp, #40]
   3ad68:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3ad6c:	str	x0, [sp, #56]
   3ad70:	ldr	x0, [sp, #56]
   3ad74:	b	3add8 <__asan_cplus_demangle_mangled_name@@Base+0x6b4>
   3ad78:	ldr	x0, [sp, #40]
   3ad7c:	bl	3b140 <__asan_cplus_demangle_mangled_name@@Base+0xa1c>
   3ad80:	str	x0, [sp, #56]
   3ad84:	ldr	x0, [sp, #40]
   3ad88:	ldr	x0, [x0, #24]
   3ad8c:	ldrb	w0, [x0]
   3ad90:	cmp	w0, #0x49
   3ad94:	b.ne	3add4 <__asan_cplus_demangle_mangled_name@@Base+0x6b0>  // b.any
   3ad98:	ldr	x1, [sp, #56]
   3ad9c:	ldr	x0, [sp, #40]
   3ada0:	bl	3f4bc <__asan_cplus_demangle_type@@Base+0x2e28>
   3ada4:	cmp	w0, #0x0
   3ada8:	b.ne	3adb4 <__asan_cplus_demangle_mangled_name@@Base+0x690>  // b.any
   3adac:	mov	x0, #0x0                   	// #0
   3adb0:	b	3add8 <__asan_cplus_demangle_mangled_name@@Base+0x6b4>
   3adb4:	ldr	x0, [sp, #40]
   3adb8:	bl	3de08 <__asan_cplus_demangle_type@@Base+0x1774>
   3adbc:	mov	x3, x0
   3adc0:	ldr	x2, [sp, #56]
   3adc4:	mov	w1, #0x4                   	// #4
   3adc8:	ldr	x0, [sp, #40]
   3adcc:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3add0:	str	x0, [sp, #56]
   3add4:	ldr	x0, [sp, #56]
   3add8:	ldr	x19, [sp, #16]
   3addc:	ldp	x29, x30, [sp], #64
   3ade0:	ret
   3ade4:	stp	x29, x30, [sp, #-64]!
   3ade8:	mov	x29, sp
   3adec:	str	x0, [sp, #24]
   3adf0:	ldr	x0, [sp, #24]
   3adf4:	ldr	x0, [x0, #24]
   3adf8:	ldrb	w0, [x0]
   3adfc:	cmp	w0, #0x4e
   3ae00:	b.ne	3ae20 <__asan_cplus_demangle_mangled_name@@Base+0x6fc>  // b.any
   3ae04:	ldr	x0, [sp, #24]
   3ae08:	ldr	x0, [x0, #24]
   3ae0c:	add	x1, x0, #0x1
   3ae10:	ldr	x0, [sp, #24]
   3ae14:	str	x1, [x0, #24]
   3ae18:	mov	w0, #0x0                   	// #0
   3ae1c:	b	3ae24 <__asan_cplus_demangle_mangled_name@@Base+0x700>
   3ae20:	mov	w0, #0x1                   	// #1
   3ae24:	cmp	w0, #0x0
   3ae28:	b.eq	3ae34 <__asan_cplus_demangle_mangled_name@@Base+0x710>  // b.none
   3ae2c:	mov	x0, #0x0                   	// #0
   3ae30:	b	3af04 <__asan_cplus_demangle_mangled_name@@Base+0x7e0>
   3ae34:	add	x0, sp, #0x28
   3ae38:	mov	w2, #0x1                   	// #1
   3ae3c:	mov	x1, x0
   3ae40:	ldr	x0, [sp, #24]
   3ae44:	bl	3d19c <__asan_cplus_demangle_type@@Base+0xb08>
   3ae48:	str	x0, [sp, #56]
   3ae4c:	ldr	x0, [sp, #56]
   3ae50:	cmp	x0, #0x0
   3ae54:	b.ne	3ae60 <__asan_cplus_demangle_mangled_name@@Base+0x73c>  // b.any
   3ae58:	mov	x0, #0x0                   	// #0
   3ae5c:	b	3af04 <__asan_cplus_demangle_mangled_name@@Base+0x7e0>
   3ae60:	mov	x1, #0x0                   	// #0
   3ae64:	ldr	x0, [sp, #24]
   3ae68:	bl	3d57c <__asan_cplus_demangle_type@@Base+0xee8>
   3ae6c:	str	x0, [sp, #48]
   3ae70:	ldr	x0, [sp, #24]
   3ae74:	bl	3af0c <__asan_cplus_demangle_mangled_name@@Base+0x7e8>
   3ae78:	mov	x1, x0
   3ae7c:	ldr	x0, [sp, #56]
   3ae80:	str	x1, [x0]
   3ae84:	ldr	x0, [sp, #56]
   3ae88:	ldr	x0, [x0]
   3ae8c:	cmp	x0, #0x0
   3ae90:	b.ne	3ae9c <__asan_cplus_demangle_mangled_name@@Base+0x778>  // b.any
   3ae94:	mov	x0, #0x0                   	// #0
   3ae98:	b	3af04 <__asan_cplus_demangle_mangled_name@@Base+0x7e0>
   3ae9c:	ldr	x0, [sp, #48]
   3aea0:	cmp	x0, #0x0
   3aea4:	b.eq	3aebc <__asan_cplus_demangle_mangled_name@@Base+0x798>  // b.none
   3aea8:	ldr	x1, [sp, #40]
   3aeac:	ldr	x0, [sp, #48]
   3aeb0:	str	x1, [x0, #8]
   3aeb4:	ldr	x0, [sp, #48]
   3aeb8:	str	x0, [sp, #40]
   3aebc:	ldr	x0, [sp, #24]
   3aec0:	ldr	x0, [x0, #24]
   3aec4:	ldrb	w0, [x0]
   3aec8:	cmp	w0, #0x45
   3aecc:	b.ne	3aeec <__asan_cplus_demangle_mangled_name@@Base+0x7c8>  // b.any
   3aed0:	ldr	x0, [sp, #24]
   3aed4:	ldr	x0, [x0, #24]
   3aed8:	add	x1, x0, #0x1
   3aedc:	ldr	x0, [sp, #24]
   3aee0:	str	x1, [x0, #24]
   3aee4:	mov	w0, #0x0                   	// #0
   3aee8:	b	3aef0 <__asan_cplus_demangle_mangled_name@@Base+0x7cc>
   3aeec:	mov	w0, #0x1                   	// #1
   3aef0:	cmp	w0, #0x0
   3aef4:	b.eq	3af00 <__asan_cplus_demangle_mangled_name@@Base+0x7dc>  // b.none
   3aef8:	mov	x0, #0x0                   	// #0
   3aefc:	b	3af04 <__asan_cplus_demangle_mangled_name@@Base+0x7e0>
   3af00:	ldr	x0, [sp, #40]
   3af04:	ldp	x29, x30, [sp], #64
   3af08:	ret
   3af0c:	stp	x29, x30, [sp, #-64]!
   3af10:	mov	x29, sp
   3af14:	str	x0, [sp, #24]
   3af18:	str	xzr, [sp, #56]
   3af1c:	ldr	x0, [sp, #24]
   3af20:	ldr	x0, [x0, #24]
   3af24:	ldrb	w0, [x0]
   3af28:	strb	w0, [sp, #39]
   3af2c:	ldrb	w0, [sp, #39]
   3af30:	cmp	w0, #0x0
   3af34:	b.ne	3af40 <__asan_cplus_demangle_mangled_name@@Base+0x81c>  // b.any
   3af38:	mov	x0, #0x0                   	// #0
   3af3c:	b	3b138 <__asan_cplus_demangle_mangled_name@@Base+0xa14>
   3af40:	mov	w0, #0x1                   	// #1
   3af44:	str	w0, [sp, #52]
   3af48:	ldrb	w0, [sp, #39]
   3af4c:	cmp	w0, #0x44
   3af50:	b.ne	3af9c <__asan_cplus_demangle_mangled_name@@Base+0x878>  // b.any
   3af54:	ldr	x0, [sp, #24]
   3af58:	ldr	x0, [x0, #24]
   3af5c:	ldrb	w0, [x0, #1]
   3af60:	strb	w0, [sp, #38]
   3af64:	ldrb	w0, [sp, #38]
   3af68:	cmp	w0, #0x54
   3af6c:	b.eq	3af7c <__asan_cplus_demangle_mangled_name@@Base+0x858>  // b.none
   3af70:	ldrb	w0, [sp, #38]
   3af74:	cmp	w0, #0x74
   3af78:	b.ne	3af8c <__asan_cplus_demangle_mangled_name@@Base+0x868>  // b.any
   3af7c:	ldr	x0, [sp, #24]
   3af80:	bl	6650 <__asan_cplus_demangle_type@plt>
   3af84:	str	x0, [sp, #40]
   3af88:	b	3b0c8 <__asan_cplus_demangle_mangled_name@@Base+0x9a4>
   3af8c:	ldr	x0, [sp, #24]
   3af90:	bl	3b140 <__asan_cplus_demangle_mangled_name@@Base+0xa1c>
   3af94:	str	x0, [sp, #40]
   3af98:	b	3b0c8 <__asan_cplus_demangle_mangled_name@@Base+0x9a4>
   3af9c:	ldrb	w0, [sp, #39]
   3afa0:	cmp	w0, #0x2f
   3afa4:	b.ls	3afb4 <__asan_cplus_demangle_mangled_name@@Base+0x890>  // b.plast
   3afa8:	ldrb	w0, [sp, #39]
   3afac:	cmp	w0, #0x39
   3afb0:	b.ls	3aff0 <__asan_cplus_demangle_mangled_name@@Base+0x8cc>  // b.plast
   3afb4:	ldrb	w0, [sp, #39]
   3afb8:	cmp	w0, #0x60
   3afbc:	b.ls	3afcc <__asan_cplus_demangle_mangled_name@@Base+0x8a8>  // b.plast
   3afc0:	ldrb	w0, [sp, #39]
   3afc4:	cmp	w0, #0x7a
   3afc8:	b.ls	3aff0 <__asan_cplus_demangle_mangled_name@@Base+0x8cc>  // b.plast
   3afcc:	ldrb	w0, [sp, #39]
   3afd0:	cmp	w0, #0x43
   3afd4:	b.eq	3aff0 <__asan_cplus_demangle_mangled_name@@Base+0x8cc>  // b.none
   3afd8:	ldrb	w0, [sp, #39]
   3afdc:	cmp	w0, #0x55
   3afe0:	b.eq	3aff0 <__asan_cplus_demangle_mangled_name@@Base+0x8cc>  // b.none
   3afe4:	ldrb	w0, [sp, #39]
   3afe8:	cmp	w0, #0x4c
   3afec:	b.ne	3b000 <__asan_cplus_demangle_mangled_name@@Base+0x8dc>  // b.any
   3aff0:	ldr	x0, [sp, #24]
   3aff4:	bl	3b140 <__asan_cplus_demangle_mangled_name@@Base+0xa1c>
   3aff8:	str	x0, [sp, #40]
   3affc:	b	3b0c8 <__asan_cplus_demangle_mangled_name@@Base+0x9a4>
   3b000:	ldrb	w0, [sp, #39]
   3b004:	cmp	w0, #0x53
   3b008:	b.ne	3b020 <__asan_cplus_demangle_mangled_name@@Base+0x8fc>  // b.any
   3b00c:	mov	w1, #0x1                   	// #1
   3b010:	ldr	x0, [sp, #24]
   3b014:	bl	3f540 <__asan_cplus_demangle_type@@Base+0x2eac>
   3b018:	str	x0, [sp, #40]
   3b01c:	b	3b0c8 <__asan_cplus_demangle_mangled_name@@Base+0x9a4>
   3b020:	ldrb	w0, [sp, #39]
   3b024:	cmp	w0, #0x49
   3b028:	b.ne	3b058 <__asan_cplus_demangle_mangled_name@@Base+0x934>  // b.any
   3b02c:	ldr	x0, [sp, #56]
   3b030:	cmp	x0, #0x0
   3b034:	b.ne	3b040 <__asan_cplus_demangle_mangled_name@@Base+0x91c>  // b.any
   3b038:	mov	x0, #0x0                   	// #0
   3b03c:	b	3b138 <__asan_cplus_demangle_mangled_name@@Base+0xa14>
   3b040:	mov	w0, #0x4                   	// #4
   3b044:	str	w0, [sp, #52]
   3b048:	ldr	x0, [sp, #24]
   3b04c:	bl	3de08 <__asan_cplus_demangle_type@@Base+0x1774>
   3b050:	str	x0, [sp, #40]
   3b054:	b	3b0c8 <__asan_cplus_demangle_mangled_name@@Base+0x9a4>
   3b058:	ldrb	w0, [sp, #39]
   3b05c:	cmp	w0, #0x54
   3b060:	b.ne	3b074 <__asan_cplus_demangle_mangled_name@@Base+0x950>  // b.any
   3b064:	ldr	x0, [sp, #24]
   3b068:	bl	3dd84 <__asan_cplus_demangle_type@@Base+0x16f0>
   3b06c:	str	x0, [sp, #40]
   3b070:	b	3b0c8 <__asan_cplus_demangle_mangled_name@@Base+0x9a4>
   3b074:	ldrb	w0, [sp, #39]
   3b078:	cmp	w0, #0x45
   3b07c:	b.ne	3b088 <__asan_cplus_demangle_mangled_name@@Base+0x964>  // b.any
   3b080:	ldr	x0, [sp, #56]
   3b084:	b	3b138 <__asan_cplus_demangle_mangled_name@@Base+0xa14>
   3b088:	ldrb	w0, [sp, #39]
   3b08c:	cmp	w0, #0x4d
   3b090:	b.ne	3b0c0 <__asan_cplus_demangle_mangled_name@@Base+0x99c>  // b.any
   3b094:	ldr	x0, [sp, #56]
   3b098:	cmp	x0, #0x0
   3b09c:	b.ne	3b0a8 <__asan_cplus_demangle_mangled_name@@Base+0x984>  // b.any
   3b0a0:	mov	x0, #0x0                   	// #0
   3b0a4:	b	3b138 <__asan_cplus_demangle_mangled_name@@Base+0xa14>
   3b0a8:	ldr	x0, [sp, #24]
   3b0ac:	ldr	x0, [x0, #24]
   3b0b0:	add	x1, x0, #0x1
   3b0b4:	ldr	x0, [sp, #24]
   3b0b8:	str	x1, [x0, #24]
   3b0bc:	b	3b134 <__asan_cplus_demangle_mangled_name@@Base+0xa10>
   3b0c0:	mov	x0, #0x0                   	// #0
   3b0c4:	b	3b138 <__asan_cplus_demangle_mangled_name@@Base+0xa14>
   3b0c8:	ldr	x0, [sp, #56]
   3b0cc:	cmp	x0, #0x0
   3b0d0:	b.ne	3b0e0 <__asan_cplus_demangle_mangled_name@@Base+0x9bc>  // b.any
   3b0d4:	ldr	x0, [sp, #40]
   3b0d8:	str	x0, [sp, #56]
   3b0dc:	b	3b0f8 <__asan_cplus_demangle_mangled_name@@Base+0x9d4>
   3b0e0:	ldr	x3, [sp, #40]
   3b0e4:	ldr	x2, [sp, #56]
   3b0e8:	ldr	w1, [sp, #52]
   3b0ec:	ldr	x0, [sp, #24]
   3b0f0:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3b0f4:	str	x0, [sp, #56]
   3b0f8:	ldrb	w0, [sp, #39]
   3b0fc:	cmp	w0, #0x53
   3b100:	b.eq	3af1c <__asan_cplus_demangle_mangled_name@@Base+0x7f8>  // b.none
   3b104:	ldr	x0, [sp, #24]
   3b108:	ldr	x0, [x0, #24]
   3b10c:	ldrb	w0, [x0]
   3b110:	cmp	w0, #0x45
   3b114:	b.eq	3af1c <__asan_cplus_demangle_mangled_name@@Base+0x7f8>  // b.none
   3b118:	ldr	x1, [sp, #56]
   3b11c:	ldr	x0, [sp, #24]
   3b120:	bl	3f4bc <__asan_cplus_demangle_type@@Base+0x2e28>
   3b124:	cmp	w0, #0x0
   3b128:	b.ne	3af1c <__asan_cplus_demangle_mangled_name@@Base+0x7f8>  // b.any
   3b12c:	mov	x0, #0x0                   	// #0
   3b130:	b	3b138 <__asan_cplus_demangle_mangled_name@@Base+0xa14>
   3b134:	b	3af1c <__asan_cplus_demangle_mangled_name@@Base+0x7f8>
   3b138:	ldp	x29, x30, [sp], #64
   3b13c:	ret
   3b140:	stp	x29, x30, [sp, #-48]!
   3b144:	mov	x29, sp
   3b148:	str	x0, [sp, #24]
   3b14c:	ldr	x0, [sp, #24]
   3b150:	ldr	x0, [x0, #24]
   3b154:	ldrb	w0, [x0]
   3b158:	strb	w0, [sp, #39]
   3b15c:	ldrb	w0, [sp, #39]
   3b160:	cmp	w0, #0x2f
   3b164:	b.ls	3b184 <__asan_cplus_demangle_mangled_name@@Base+0xa60>  // b.plast
   3b168:	ldrb	w0, [sp, #39]
   3b16c:	cmp	w0, #0x39
   3b170:	b.hi	3b184 <__asan_cplus_demangle_mangled_name@@Base+0xa60>  // b.pmore
   3b174:	ldr	x0, [sp, #24]
   3b178:	bl	3b384 <__asan_cplus_demangle_mangled_name@@Base+0xc60>
   3b17c:	str	x0, [sp, #40]
   3b180:	b	3b354 <__asan_cplus_demangle_mangled_name@@Base+0xc30>
   3b184:	ldrb	w0, [sp, #39]
   3b188:	cmp	w0, #0x60
   3b18c:	b.ls	3b270 <__asan_cplus_demangle_mangled_name@@Base+0xb4c>  // b.plast
   3b190:	ldrb	w0, [sp, #39]
   3b194:	cmp	w0, #0x7a
   3b198:	b.hi	3b270 <__asan_cplus_demangle_mangled_name@@Base+0xb4c>  // b.pmore
   3b19c:	ldrb	w0, [sp, #39]
   3b1a0:	cmp	w0, #0x6f
   3b1a4:	b.ne	3b1d4 <__asan_cplus_demangle_mangled_name@@Base+0xab0>  // b.any
   3b1a8:	ldr	x0, [sp, #24]
   3b1ac:	ldr	x0, [x0, #24]
   3b1b0:	add	x0, x0, #0x1
   3b1b4:	ldrb	w0, [x0]
   3b1b8:	cmp	w0, #0x6e
   3b1bc:	b.ne	3b1d4 <__asan_cplus_demangle_mangled_name@@Base+0xab0>  // b.any
   3b1c0:	ldr	x0, [sp, #24]
   3b1c4:	ldr	x0, [x0, #24]
   3b1c8:	add	x1, x0, #0x2
   3b1cc:	ldr	x0, [sp, #24]
   3b1d0:	str	x1, [x0, #24]
   3b1d4:	ldr	x0, [sp, #24]
   3b1d8:	bl	3b6b0 <__asan_cplus_demangle_mangled_name@@Base+0xf8c>
   3b1dc:	str	x0, [sp, #40]
   3b1e0:	ldr	x0, [sp, #40]
   3b1e4:	cmp	x0, #0x0
   3b1e8:	b.eq	3b350 <__asan_cplus_demangle_mangled_name@@Base+0xc2c>  // b.none
   3b1ec:	ldr	x0, [sp, #40]
   3b1f0:	ldr	w0, [x0]
   3b1f4:	cmp	w0, #0x32
   3b1f8:	b.ne	3b350 <__asan_cplus_demangle_mangled_name@@Base+0xc2c>  // b.any
   3b1fc:	ldr	x0, [sp, #24]
   3b200:	ldr	w0, [x0, #72]
   3b204:	mov	w1, w0
   3b208:	ldr	x0, [sp, #40]
   3b20c:	ldr	x0, [x0, #8]
   3b210:	ldr	w0, [x0, #16]
   3b214:	add	w0, w1, w0
   3b218:	add	w0, w0, #0x7
   3b21c:	mov	w1, w0
   3b220:	ldr	x0, [sp, #24]
   3b224:	str	w1, [x0, #72]
   3b228:	ldr	x0, [sp, #40]
   3b22c:	ldr	x0, [x0, #8]
   3b230:	ldr	x2, [x0]
   3b234:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   3b238:	add	x1, x0, #0x678
   3b23c:	mov	x0, x2
   3b240:	bl	6a30 <__asan_internal_strcmp@plt>
   3b244:	cmp	w0, #0x0
   3b248:	b.ne	3b350 <__asan_cplus_demangle_mangled_name@@Base+0xc2c>  // b.any
   3b24c:	ldr	x0, [sp, #24]
   3b250:	bl	3b384 <__asan_cplus_demangle_mangled_name@@Base+0xc60>
   3b254:	mov	x3, x0
   3b258:	ldr	x2, [sp, #40]
   3b25c:	mov	w1, #0x37                  	// #55
   3b260:	ldr	x0, [sp, #24]
   3b264:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3b268:	str	x0, [sp, #40]
   3b26c:	b	3b350 <__asan_cplus_demangle_mangled_name@@Base+0xc2c>
   3b270:	ldrb	w0, [sp, #39]
   3b274:	cmp	w0, #0x43
   3b278:	b.eq	3b288 <__asan_cplus_demangle_mangled_name@@Base+0xb64>  // b.none
   3b27c:	ldrb	w0, [sp, #39]
   3b280:	cmp	w0, #0x44
   3b284:	b.ne	3b298 <__asan_cplus_demangle_mangled_name@@Base+0xb74>  // b.any
   3b288:	ldr	x0, [sp, #24]
   3b28c:	bl	3c360 <__asan_cplus_demangle_mangled_name@@Base+0x1c3c>
   3b290:	str	x0, [sp, #40]
   3b294:	b	3b354 <__asan_cplus_demangle_mangled_name@@Base+0xc30>
   3b298:	ldrb	w0, [sp, #39]
   3b29c:	cmp	w0, #0x4c
   3b2a0:	b.ne	3b2f0 <__asan_cplus_demangle_mangled_name@@Base+0xbcc>  // b.any
   3b2a4:	ldr	x0, [sp, #24]
   3b2a8:	ldr	x0, [x0, #24]
   3b2ac:	add	x1, x0, #0x1
   3b2b0:	ldr	x0, [sp, #24]
   3b2b4:	str	x1, [x0, #24]
   3b2b8:	ldr	x0, [sp, #24]
   3b2bc:	bl	3b384 <__asan_cplus_demangle_mangled_name@@Base+0xc60>
   3b2c0:	str	x0, [sp, #40]
   3b2c4:	ldr	x0, [sp, #40]
   3b2c8:	cmp	x0, #0x0
   3b2cc:	b.ne	3b2d8 <__asan_cplus_demangle_mangled_name@@Base+0xbb4>  // b.any
   3b2d0:	mov	x0, #0x0                   	// #0
   3b2d4:	b	3b37c <__asan_cplus_demangle_mangled_name@@Base+0xc58>
   3b2d8:	ldr	x0, [sp, #24]
   3b2dc:	bl	3efb4 <__asan_cplus_demangle_type@@Base+0x2920>
   3b2e0:	cmp	w0, #0x0
   3b2e4:	b.ne	3b354 <__asan_cplus_demangle_mangled_name@@Base+0xc30>  // b.any
   3b2e8:	mov	x0, #0x0                   	// #0
   3b2ec:	b	3b37c <__asan_cplus_demangle_mangled_name@@Base+0xc58>
   3b2f0:	ldrb	w0, [sp, #39]
   3b2f4:	cmp	w0, #0x55
   3b2f8:	b.ne	3b348 <__asan_cplus_demangle_mangled_name@@Base+0xc24>  // b.any
   3b2fc:	ldr	x0, [sp, #24]
   3b300:	ldr	x0, [x0, #24]
   3b304:	add	x0, x0, #0x1
   3b308:	ldrb	w0, [x0]
   3b30c:	cmp	w0, #0x6c
   3b310:	b.eq	3b320 <__asan_cplus_demangle_mangled_name@@Base+0xbfc>  // b.none
   3b314:	cmp	w0, #0x74
   3b318:	b.eq	3b330 <__asan_cplus_demangle_mangled_name@@Base+0xc0c>  // b.none
   3b31c:	b	3b340 <__asan_cplus_demangle_mangled_name@@Base+0xc1c>
   3b320:	ldr	x0, [sp, #24]
   3b324:	bl	3f0a4 <__asan_cplus_demangle_type@@Base+0x2a10>
   3b328:	str	x0, [sp, #40]
   3b32c:	b	3b354 <__asan_cplus_demangle_mangled_name@@Base+0xc30>
   3b330:	ldr	x0, [sp, #24]
   3b334:	bl	3f220 <__asan_cplus_demangle_type@@Base+0x2b8c>
   3b338:	str	x0, [sp, #40]
   3b33c:	b	3b354 <__asan_cplus_demangle_mangled_name@@Base+0xc30>
   3b340:	mov	x0, #0x0                   	// #0
   3b344:	b	3b37c <__asan_cplus_demangle_mangled_name@@Base+0xc58>
   3b348:	mov	x0, #0x0                   	// #0
   3b34c:	b	3b37c <__asan_cplus_demangle_mangled_name@@Base+0xc58>
   3b350:	nop
   3b354:	ldr	x0, [sp, #24]
   3b358:	ldr	x0, [x0, #24]
   3b35c:	ldrb	w0, [x0]
   3b360:	cmp	w0, #0x42
   3b364:	b.ne	3b378 <__asan_cplus_demangle_mangled_name@@Base+0xc54>  // b.any
   3b368:	ldr	x1, [sp, #40]
   3b36c:	ldr	x0, [sp, #24]
   3b370:	bl	3ab74 <__asan_cplus_demangle_mangled_name@@Base+0x450>
   3b374:	str	x0, [sp, #40]
   3b378:	ldr	x0, [sp, #40]
   3b37c:	ldp	x29, x30, [sp], #48
   3b380:	ret
   3b384:	stp	x29, x30, [sp, #-48]!
   3b388:	mov	x29, sp
   3b38c:	str	x0, [sp, #24]
   3b390:	ldr	x0, [sp, #24]
   3b394:	bl	3b3d8 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   3b398:	str	w0, [sp, #44]
   3b39c:	ldr	w0, [sp, #44]
   3b3a0:	cmp	w0, #0x0
   3b3a4:	b.gt	3b3b0 <__asan_cplus_demangle_mangled_name@@Base+0xc8c>
   3b3a8:	mov	x0, #0x0                   	// #0
   3b3ac:	b	3b3d0 <__asan_cplus_demangle_mangled_name@@Base+0xcac>
   3b3b0:	ldr	w1, [sp, #44]
   3b3b4:	ldr	x0, [sp, #24]
   3b3b8:	bl	3b550 <__asan_cplus_demangle_mangled_name@@Base+0xe2c>
   3b3bc:	str	x0, [sp, #32]
   3b3c0:	ldr	x0, [sp, #24]
   3b3c4:	ldr	x1, [sp, #32]
   3b3c8:	str	x1, [x0, #64]
   3b3cc:	ldr	x0, [sp, #32]
   3b3d0:	ldp	x29, x30, [sp], #48
   3b3d4:	ret
   3b3d8:	sub	sp, sp, #0x20
   3b3dc:	str	x0, [sp, #8]
   3b3e0:	str	wzr, [sp, #28]
   3b3e4:	ldr	x0, [sp, #8]
   3b3e8:	ldr	x0, [x0, #24]
   3b3ec:	ldrb	w0, [x0]
   3b3f0:	strb	w0, [sp, #27]
   3b3f4:	ldrb	w0, [sp, #27]
   3b3f8:	cmp	w0, #0x6e
   3b3fc:	b.ne	3b42c <__asan_cplus_demangle_mangled_name@@Base+0xd08>  // b.any
   3b400:	mov	w0, #0x1                   	// #1
   3b404:	str	w0, [sp, #28]
   3b408:	ldr	x0, [sp, #8]
   3b40c:	ldr	x0, [x0, #24]
   3b410:	add	x1, x0, #0x1
   3b414:	ldr	x0, [sp, #8]
   3b418:	str	x1, [x0, #24]
   3b41c:	ldr	x0, [sp, #8]
   3b420:	ldr	x0, [x0, #24]
   3b424:	ldrb	w0, [x0]
   3b428:	strb	w0, [sp, #27]
   3b42c:	str	wzr, [sp, #20]
   3b430:	ldrb	w0, [sp, #27]
   3b434:	cmp	w0, #0x2f
   3b438:	b.ls	3b448 <__asan_cplus_demangle_mangled_name@@Base+0xd24>  // b.plast
   3b43c:	ldrb	w0, [sp, #27]
   3b440:	cmp	w0, #0x39
   3b444:	b.ls	3b468 <__asan_cplus_demangle_mangled_name@@Base+0xd44>  // b.plast
   3b448:	ldr	w0, [sp, #28]
   3b44c:	cmp	w0, #0x0
   3b450:	b.eq	3b460 <__asan_cplus_demangle_mangled_name@@Base+0xd3c>  // b.none
   3b454:	ldr	w0, [sp, #20]
   3b458:	neg	w0, w0
   3b45c:	str	w0, [sp, #20]
   3b460:	ldr	w0, [sp, #20]
   3b464:	b	3b4f8 <__asan_cplus_demangle_mangled_name@@Base+0xdd4>
   3b468:	ldrb	w0, [sp, #27]
   3b46c:	sub	w0, w0, #0x30
   3b470:	mov	w1, #0x7fffffff            	// #2147483647
   3b474:	sub	w0, w1, w0
   3b478:	mov	w1, #0x6667                	// #26215
   3b47c:	movk	w1, #0x6666, lsl #16
   3b480:	smull	x1, w0, w1
   3b484:	lsr	x1, x1, #32
   3b488:	asr	w1, w1, #2
   3b48c:	asr	w0, w0, #31
   3b490:	sub	w0, w1, w0
   3b494:	ldr	w1, [sp, #20]
   3b498:	cmp	w1, w0
   3b49c:	b.le	3b4a8 <__asan_cplus_demangle_mangled_name@@Base+0xd84>
   3b4a0:	mov	w0, #0xffffffff            	// #-1
   3b4a4:	b	3b4f8 <__asan_cplus_demangle_mangled_name@@Base+0xdd4>
   3b4a8:	ldr	w1, [sp, #20]
   3b4ac:	mov	w0, w1
   3b4b0:	lsl	w0, w0, #2
   3b4b4:	add	w0, w0, w1
   3b4b8:	lsl	w0, w0, #1
   3b4bc:	mov	w1, w0
   3b4c0:	ldrb	w0, [sp, #27]
   3b4c4:	add	w0, w1, w0
   3b4c8:	sub	w0, w0, #0x30
   3b4cc:	str	w0, [sp, #20]
   3b4d0:	ldr	x0, [sp, #8]
   3b4d4:	ldr	x0, [x0, #24]
   3b4d8:	add	x1, x0, #0x1
   3b4dc:	ldr	x0, [sp, #8]
   3b4e0:	str	x1, [x0, #24]
   3b4e4:	ldr	x0, [sp, #8]
   3b4e8:	ldr	x0, [x0, #24]
   3b4ec:	ldrb	w0, [x0]
   3b4f0:	strb	w0, [sp, #27]
   3b4f4:	b	3b430 <__asan_cplus_demangle_mangled_name@@Base+0xd0c>
   3b4f8:	add	sp, sp, #0x20
   3b4fc:	ret
   3b500:	stp	x29, x30, [sp, #-48]!
   3b504:	mov	x29, sp
   3b508:	str	x0, [sp, #24]
   3b50c:	ldr	x0, [sp, #24]
   3b510:	bl	3a208 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3b514:	str	x0, [sp, #40]
   3b518:	ldr	x0, [sp, #40]
   3b51c:	cmp	x0, #0x0
   3b520:	b.eq	3b544 <__asan_cplus_demangle_mangled_name@@Base+0xe20>  // b.none
   3b524:	ldr	x0, [sp, #40]
   3b528:	mov	w1, #0x42                  	// #66
   3b52c:	str	w1, [x0]
   3b530:	ldr	x0, [sp, #24]
   3b534:	bl	3b3d8 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   3b538:	sxtw	x1, w0
   3b53c:	ldr	x0, [sp, #40]
   3b540:	str	x1, [x0, #8]
   3b544:	ldr	x0, [sp, #40]
   3b548:	ldp	x29, x30, [sp], #48
   3b54c:	ret
   3b550:	stp	x29, x30, [sp, #-48]!
   3b554:	mov	x29, sp
   3b558:	str	x0, [sp, #24]
   3b55c:	str	w1, [sp, #20]
   3b560:	ldr	x0, [sp, #24]
   3b564:	ldr	x0, [x0, #24]
   3b568:	str	x0, [sp, #40]
   3b56c:	ldr	x0, [sp, #24]
   3b570:	ldr	x1, [x0, #8]
   3b574:	ldr	x0, [sp, #40]
   3b578:	sub	x1, x1, x0
   3b57c:	ldrsw	x0, [sp, #20]
   3b580:	cmp	x1, x0
   3b584:	b.ge	3b590 <__asan_cplus_demangle_mangled_name@@Base+0xe6c>  // b.tcont
   3b588:	mov	x0, #0x0                   	// #0
   3b58c:	b	3b6a8 <__asan_cplus_demangle_mangled_name@@Base+0xf84>
   3b590:	ldr	x0, [sp, #24]
   3b594:	ldr	x1, [x0, #24]
   3b598:	ldrsw	x0, [sp, #20]
   3b59c:	add	x1, x1, x0
   3b5a0:	ldr	x0, [sp, #24]
   3b5a4:	str	x1, [x0, #24]
   3b5a8:	ldr	x0, [sp, #24]
   3b5ac:	ldr	w0, [x0, #16]
   3b5b0:	and	w0, w0, #0x4
   3b5b4:	cmp	w0, #0x0
   3b5b8:	b.eq	3b5e4 <__asan_cplus_demangle_mangled_name@@Base+0xec0>  // b.none
   3b5bc:	ldr	x0, [sp, #24]
   3b5c0:	ldr	x0, [x0, #24]
   3b5c4:	ldrb	w0, [x0]
   3b5c8:	cmp	w0, #0x24
   3b5cc:	b.ne	3b5e4 <__asan_cplus_demangle_mangled_name@@Base+0xec0>  // b.any
   3b5d0:	ldr	x0, [sp, #24]
   3b5d4:	ldr	x0, [x0, #24]
   3b5d8:	add	x1, x0, #0x1
   3b5dc:	ldr	x0, [sp, #24]
   3b5e0:	str	x1, [x0, #24]
   3b5e4:	ldr	w0, [sp, #20]
   3b5e8:	cmp	w0, #0x9
   3b5ec:	b.le	3b698 <__asan_cplus_demangle_mangled_name@@Base+0xf74>
   3b5f0:	mov	x2, #0x8                   	// #8
   3b5f4:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   3b5f8:	add	x1, x0, #0x680
   3b5fc:	ldr	x0, [sp, #40]
   3b600:	bl	6b30 <__asan_internal_memcmp@plt>
   3b604:	cmp	w0, #0x0
   3b608:	b.ne	3b698 <__asan_cplus_demangle_mangled_name@@Base+0xf74>  // b.any
   3b60c:	ldr	x0, [sp, #40]
   3b610:	add	x0, x0, #0x8
   3b614:	str	x0, [sp, #32]
   3b618:	ldr	x0, [sp, #32]
   3b61c:	ldrb	w0, [x0]
   3b620:	cmp	w0, #0x2e
   3b624:	b.eq	3b648 <__asan_cplus_demangle_mangled_name@@Base+0xf24>  // b.none
   3b628:	ldr	x0, [sp, #32]
   3b62c:	ldrb	w0, [x0]
   3b630:	cmp	w0, #0x5f
   3b634:	b.eq	3b648 <__asan_cplus_demangle_mangled_name@@Base+0xf24>  // b.none
   3b638:	ldr	x0, [sp, #32]
   3b63c:	ldrb	w0, [x0]
   3b640:	cmp	w0, #0x24
   3b644:	b.ne	3b698 <__asan_cplus_demangle_mangled_name@@Base+0xf74>  // b.any
   3b648:	ldr	x0, [sp, #32]
   3b64c:	add	x0, x0, #0x1
   3b650:	ldrb	w0, [x0]
   3b654:	cmp	w0, #0x4e
   3b658:	b.ne	3b698 <__asan_cplus_demangle_mangled_name@@Base+0xf74>  // b.any
   3b65c:	ldr	x0, [sp, #24]
   3b660:	ldr	w0, [x0, #72]
   3b664:	mov	w1, w0
   3b668:	ldr	w0, [sp, #20]
   3b66c:	sub	w0, w1, w0
   3b670:	add	w0, w0, #0x16
   3b674:	mov	w1, w0
   3b678:	ldr	x0, [sp, #24]
   3b67c:	str	w1, [x0, #72]
   3b680:	mov	w2, #0x15                  	// #21
   3b684:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   3b688:	add	x1, x0, #0x690
   3b68c:	ldr	x0, [sp, #24]
   3b690:	bl	3a3f8 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   3b694:	b	3b6a8 <__asan_cplus_demangle_mangled_name@@Base+0xf84>
   3b698:	ldr	w2, [sp, #20]
   3b69c:	ldr	x1, [sp, #40]
   3b6a0:	ldr	x0, [sp, #24]
   3b6a4:	bl	3a3f8 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   3b6a8:	ldp	x29, x30, [sp], #48
   3b6ac:	ret
   3b6b0:	stp	x29, x30, [sp, #-96]!
   3b6b4:	mov	x29, sp
   3b6b8:	str	x19, [sp, #16]
   3b6bc:	str	x0, [sp, #40]
   3b6c0:	ldr	x0, [sp, #40]
   3b6c4:	ldr	x0, [x0, #24]
   3b6c8:	ldrb	w0, [x0]
   3b6cc:	cmp	w0, #0x0
   3b6d0:	b.eq	3b6f0 <__asan_cplus_demangle_mangled_name@@Base+0xfcc>  // b.none
   3b6d4:	ldr	x0, [sp, #40]
   3b6d8:	ldr	x0, [x0, #24]
   3b6dc:	add	x2, x0, #0x1
   3b6e0:	ldr	x1, [sp, #40]
   3b6e4:	str	x2, [x1, #24]
   3b6e8:	ldrb	w0, [x0]
   3b6ec:	b	3b6f4 <__asan_cplus_demangle_mangled_name@@Base+0xfd0>
   3b6f0:	mov	w0, #0x0                   	// #0
   3b6f4:	strb	w0, [sp, #79]
   3b6f8:	ldr	x0, [sp, #40]
   3b6fc:	ldr	x0, [x0, #24]
   3b700:	ldrb	w0, [x0]
   3b704:	cmp	w0, #0x0
   3b708:	b.eq	3b728 <__asan_cplus_demangle_mangled_name@@Base+0x1004>  // b.none
   3b70c:	ldr	x0, [sp, #40]
   3b710:	ldr	x0, [x0, #24]
   3b714:	add	x2, x0, #0x1
   3b718:	ldr	x1, [sp, #40]
   3b71c:	str	x2, [x1, #24]
   3b720:	ldrb	w0, [x0]
   3b724:	b	3b72c <__asan_cplus_demangle_mangled_name@@Base+0x1008>
   3b728:	mov	w0, #0x0                   	// #0
   3b72c:	strb	w0, [sp, #78]
   3b730:	ldrb	w0, [sp, #79]
   3b734:	cmp	w0, #0x76
   3b738:	b.ne	3b778 <__asan_cplus_demangle_mangled_name@@Base+0x1054>  // b.any
   3b73c:	ldrb	w0, [sp, #78]
   3b740:	cmp	w0, #0x2f
   3b744:	b.ls	3b778 <__asan_cplus_demangle_mangled_name@@Base+0x1054>  // b.plast
   3b748:	ldrb	w0, [sp, #78]
   3b74c:	cmp	w0, #0x39
   3b750:	b.hi	3b778 <__asan_cplus_demangle_mangled_name@@Base+0x1054>  // b.pmore
   3b754:	ldrb	w0, [sp, #78]
   3b758:	sub	w19, w0, #0x30
   3b75c:	ldr	x0, [sp, #40]
   3b760:	bl	3b384 <__asan_cplus_demangle_mangled_name@@Base+0xc60>
   3b764:	mov	x2, x0
   3b768:	mov	w1, w19
   3b76c:	ldr	x0, [sp, #40]
   3b770:	bl	3a4f0 <__asan_cplus_demangle_fill_dtor@@Base+0x368>
   3b774:	b	3b938 <__asan_cplus_demangle_mangled_name@@Base+0x1214>
   3b778:	ldrb	w0, [sp, #79]
   3b77c:	cmp	w0, #0x63
   3b780:	b.ne	3b820 <__asan_cplus_demangle_mangled_name@@Base+0x10fc>  // b.any
   3b784:	ldrb	w0, [sp, #78]
   3b788:	cmp	w0, #0x76
   3b78c:	b.ne	3b820 <__asan_cplus_demangle_mangled_name@@Base+0x10fc>  // b.any
   3b790:	ldr	x0, [sp, #40]
   3b794:	ldr	w0, [x0, #80]
   3b798:	str	w0, [sp, #72]
   3b79c:	ldr	x0, [sp, #40]
   3b7a0:	ldr	w0, [x0, #76]
   3b7a4:	cmp	w0, #0x0
   3b7a8:	cset	w0, eq  // eq = none
   3b7ac:	and	w0, w0, #0xff
   3b7b0:	mov	w1, w0
   3b7b4:	ldr	x0, [sp, #40]
   3b7b8:	str	w1, [x0, #80]
   3b7bc:	ldr	x0, [sp, #40]
   3b7c0:	bl	6650 <__asan_cplus_demangle_type@plt>
   3b7c4:	str	x0, [sp, #64]
   3b7c8:	ldr	x0, [sp, #40]
   3b7cc:	ldr	w0, [x0, #80]
   3b7d0:	cmp	w0, #0x0
   3b7d4:	b.eq	3b7f4 <__asan_cplus_demangle_mangled_name@@Base+0x10d0>  // b.none
   3b7d8:	mov	x3, #0x0                   	// #0
   3b7dc:	ldr	x2, [sp, #64]
   3b7e0:	mov	w1, #0x35                  	// #53
   3b7e4:	ldr	x0, [sp, #40]
   3b7e8:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3b7ec:	str	x0, [sp, #88]
   3b7f0:	b	3b80c <__asan_cplus_demangle_mangled_name@@Base+0x10e8>
   3b7f4:	mov	x3, #0x0                   	// #0
   3b7f8:	ldr	x2, [sp, #64]
   3b7fc:	mov	w1, #0x34                  	// #52
   3b800:	ldr	x0, [sp, #40]
   3b804:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3b808:	str	x0, [sp, #88]
   3b80c:	ldr	x0, [sp, #40]
   3b810:	ldr	w1, [sp, #72]
   3b814:	str	w1, [x0, #80]
   3b818:	ldr	x0, [sp, #88]
   3b81c:	b	3b938 <__asan_cplus_demangle_mangled_name@@Base+0x1214>
   3b820:	str	wzr, [sp, #84]
   3b824:	mov	w0, #0x43                  	// #67
   3b828:	str	w0, [sp, #80]
   3b82c:	ldr	w1, [sp, #80]
   3b830:	ldr	w0, [sp, #84]
   3b834:	sub	w0, w1, w0
   3b838:	lsr	w1, w0, #31
   3b83c:	add	w0, w1, w0
   3b840:	asr	w0, w0, #1
   3b844:	mov	w1, w0
   3b848:	ldr	w0, [sp, #84]
   3b84c:	add	w0, w0, w1
   3b850:	str	w0, [sp, #60]
   3b854:	ldrsw	x1, [sp, #60]
   3b858:	mov	x0, x1
   3b85c:	lsl	x0, x0, #1
   3b860:	add	x0, x0, x1
   3b864:	lsl	x0, x0, #3
   3b868:	mov	x1, x0
   3b86c:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   3b870:	ldr	x0, [x0, #3944]
   3b874:	add	x0, x1, x0
   3b878:	str	x0, [sp, #48]
   3b87c:	ldr	x0, [sp, #48]
   3b880:	ldr	x0, [x0]
   3b884:	ldrb	w0, [x0]
   3b888:	ldrb	w1, [sp, #79]
   3b88c:	cmp	w1, w0
   3b890:	b.ne	3b8c0 <__asan_cplus_demangle_mangled_name@@Base+0x119c>  // b.any
   3b894:	ldr	x0, [sp, #48]
   3b898:	ldr	x0, [x0]
   3b89c:	add	x0, x0, #0x1
   3b8a0:	ldrb	w0, [x0]
   3b8a4:	ldrb	w1, [sp, #78]
   3b8a8:	cmp	w1, w0
   3b8ac:	b.ne	3b8c0 <__asan_cplus_demangle_mangled_name@@Base+0x119c>  // b.any
   3b8b0:	ldr	x1, [sp, #48]
   3b8b4:	ldr	x0, [sp, #40]
   3b8b8:	bl	3a4a4 <__asan_cplus_demangle_fill_dtor@@Base+0x31c>
   3b8bc:	b	3b938 <__asan_cplus_demangle_mangled_name@@Base+0x1214>
   3b8c0:	ldr	x0, [sp, #48]
   3b8c4:	ldr	x0, [x0]
   3b8c8:	ldrb	w0, [x0]
   3b8cc:	ldrb	w1, [sp, #79]
   3b8d0:	cmp	w1, w0
   3b8d4:	b.cc	3b90c <__asan_cplus_demangle_mangled_name@@Base+0x11e8>  // b.lo, b.ul, b.last
   3b8d8:	ldr	x0, [sp, #48]
   3b8dc:	ldr	x0, [x0]
   3b8e0:	ldrb	w0, [x0]
   3b8e4:	ldrb	w1, [sp, #79]
   3b8e8:	cmp	w1, w0
   3b8ec:	b.ne	3b918 <__asan_cplus_demangle_mangled_name@@Base+0x11f4>  // b.any
   3b8f0:	ldr	x0, [sp, #48]
   3b8f4:	ldr	x0, [x0]
   3b8f8:	add	x0, x0, #0x1
   3b8fc:	ldrb	w0, [x0]
   3b900:	ldrb	w1, [sp, #78]
   3b904:	cmp	w1, w0
   3b908:	b.cs	3b918 <__asan_cplus_demangle_mangled_name@@Base+0x11f4>  // b.hs, b.nlast
   3b90c:	ldr	w0, [sp, #60]
   3b910:	str	w0, [sp, #80]
   3b914:	b	3b924 <__asan_cplus_demangle_mangled_name@@Base+0x1200>
   3b918:	ldr	w0, [sp, #60]
   3b91c:	add	w0, w0, #0x1
   3b920:	str	w0, [sp, #84]
   3b924:	ldr	w1, [sp, #84]
   3b928:	ldr	w0, [sp, #80]
   3b92c:	cmp	w1, w0
   3b930:	b.ne	3b82c <__asan_cplus_demangle_mangled_name@@Base+0x1108>  // b.any
   3b934:	mov	x0, #0x0                   	// #0
   3b938:	ldr	x19, [sp, #16]
   3b93c:	ldp	x29, x30, [sp], #96
   3b940:	ret
   3b944:	stp	x29, x30, [sp, #-48]!
   3b948:	mov	x29, sp
   3b94c:	str	x0, [sp, #24]
   3b950:	str	w1, [sp, #20]
   3b954:	ldr	x0, [sp, #24]
   3b958:	bl	3a208 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3b95c:	str	x0, [sp, #40]
   3b960:	ldr	x0, [sp, #40]
   3b964:	cmp	x0, #0x0
   3b968:	b.eq	3b984 <__asan_cplus_demangle_mangled_name@@Base+0x1260>  // b.none
   3b96c:	ldr	x0, [sp, #40]
   3b970:	mov	w1, #0x41                  	// #65
   3b974:	str	w1, [x0]
   3b978:	ldr	x0, [sp, #40]
   3b97c:	ldr	w1, [sp, #20]
   3b980:	str	w1, [x0, #8]
   3b984:	ldr	x0, [sp, #40]
   3b988:	ldp	x29, x30, [sp], #48
   3b98c:	ret
   3b990:	stp	x29, x30, [sp, #-80]!
   3b994:	mov	x29, sp
   3b998:	str	x0, [sp, #24]
   3b99c:	str	xzr, [sp, #72]
   3b9a0:	str	xzr, [sp, #64]
   3b9a4:	ldr	x0, [sp, #24]
   3b9a8:	bl	3b3d8 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   3b9ac:	str	w0, [sp, #60]
   3b9b0:	ldr	w0, [sp, #60]
   3b9b4:	cmp	w0, #0x1
   3b9b8:	b.gt	3b9c4 <__asan_cplus_demangle_mangled_name@@Base+0x12a0>
   3b9bc:	mov	x0, #0x0                   	// #0
   3b9c0:	b	3bc40 <__asan_cplus_demangle_mangled_name@@Base+0x151c>
   3b9c4:	ldr	x0, [sp, #24]
   3b9c8:	ldr	x0, [x0, #24]
   3b9cc:	ldrb	w0, [x0]
   3b9d0:	cmp	w0, #0x0
   3b9d4:	b.eq	3b9f8 <__asan_cplus_demangle_mangled_name@@Base+0x12d4>  // b.none
   3b9d8:	ldr	x0, [sp, #24]
   3b9dc:	ldr	x0, [x0, #24]
   3b9e0:	add	x2, x0, #0x1
   3b9e4:	ldr	x1, [sp, #24]
   3b9e8:	str	x2, [x1, #24]
   3b9ec:	ldrb	w0, [x0]
   3b9f0:	cmp	w0, #0x5f
   3b9f4:	b.eq	3ba00 <__asan_cplus_demangle_mangled_name@@Base+0x12dc>  // b.none
   3b9f8:	mov	x0, #0x0                   	// #0
   3b9fc:	b	3bc40 <__asan_cplus_demangle_mangled_name@@Base+0x151c>
   3ba00:	ldr	w0, [sp, #60]
   3ba04:	sub	w0, w0, #0x1
   3ba08:	str	w0, [sp, #60]
   3ba0c:	ldr	x0, [sp, #24]
   3ba10:	ldr	x0, [x0, #24]
   3ba14:	str	x0, [sp, #40]
   3ba18:	str	wzr, [sp, #56]
   3ba1c:	b	3bc18 <__asan_cplus_demangle_mangled_name@@Base+0x14f4>
   3ba20:	ldrsw	x0, [sp, #56]
   3ba24:	ldr	x1, [sp, #40]
   3ba28:	add	x0, x1, x0
   3ba2c:	ldrb	w0, [x0]
   3ba30:	strb	w0, [sp, #55]
   3ba34:	ldrb	w0, [sp, #55]
   3ba38:	cmp	w0, #0x0
   3ba3c:	b.ne	3ba48 <__asan_cplus_demangle_mangled_name@@Base+0x1324>  // b.any
   3ba40:	mov	x0, #0x0                   	// #0
   3ba44:	b	3bc40 <__asan_cplus_demangle_mangled_name@@Base+0x151c>
   3ba48:	ldrb	w0, [sp, #55]
   3ba4c:	cmp	w0, #0x24
   3ba50:	b.ne	3bb34 <__asan_cplus_demangle_mangled_name@@Base+0x1410>  // b.any
   3ba54:	ldr	w0, [sp, #56]
   3ba58:	add	w0, w0, #0x1
   3ba5c:	str	w0, [sp, #56]
   3ba60:	ldr	w0, [sp, #56]
   3ba64:	add	w1, w0, #0x1
   3ba68:	str	w1, [sp, #56]
   3ba6c:	sxtw	x0, w0
   3ba70:	ldr	x1, [sp, #40]
   3ba74:	add	x0, x1, x0
   3ba78:	ldrb	w0, [x0]
   3ba7c:	cmp	w0, #0x5f
   3ba80:	b.eq	3baa8 <__asan_cplus_demangle_mangled_name@@Base+0x1384>  // b.none
   3ba84:	cmp	w0, #0x5f
   3ba88:	b.gt	3bac0 <__asan_cplus_demangle_mangled_name@@Base+0x139c>
   3ba8c:	cmp	w0, #0x24
   3ba90:	b.eq	3bab4 <__asan_cplus_demangle_mangled_name@@Base+0x1390>  // b.none
   3ba94:	cmp	w0, #0x53
   3ba98:	b.ne	3bac0 <__asan_cplus_demangle_mangled_name@@Base+0x139c>  // b.any
   3ba9c:	mov	w0, #0x2f                  	// #47
   3baa0:	strb	w0, [sp, #55]
   3baa4:	b	3bac8 <__asan_cplus_demangle_mangled_name@@Base+0x13a4>
   3baa8:	mov	w0, #0x2e                  	// #46
   3baac:	strb	w0, [sp, #55]
   3bab0:	b	3bac8 <__asan_cplus_demangle_mangled_name@@Base+0x13a4>
   3bab4:	mov	w0, #0x24                  	// #36
   3bab8:	strb	w0, [sp, #55]
   3babc:	b	3bac8 <__asan_cplus_demangle_mangled_name@@Base+0x13a4>
   3bac0:	mov	x0, #0x0                   	// #0
   3bac4:	b	3bc40 <__asan_cplus_demangle_mangled_name@@Base+0x151c>
   3bac8:	ldrb	w0, [sp, #55]
   3bacc:	mov	w1, w0
   3bad0:	ldr	x0, [sp, #24]
   3bad4:	bl	3b944 <__asan_cplus_demangle_mangled_name@@Base+0x1220>
   3bad8:	str	x0, [sp, #64]
   3badc:	ldr	x0, [sp, #24]
   3bae0:	ldr	x1, [x0, #24]
   3bae4:	ldrsw	x0, [sp, #56]
   3bae8:	add	x1, x1, x0
   3baec:	ldr	x0, [sp, #24]
   3baf0:	str	x1, [x0, #24]
   3baf4:	ldr	x0, [sp, #24]
   3baf8:	ldr	x0, [x0, #24]
   3bafc:	str	x0, [sp, #40]
   3bb00:	ldr	w1, [sp, #60]
   3bb04:	ldr	w0, [sp, #56]
   3bb08:	sub	w0, w1, w0
   3bb0c:	str	w0, [sp, #60]
   3bb10:	str	wzr, [sp, #56]
   3bb14:	ldr	x0, [sp, #64]
   3bb18:	cmp	x0, #0x0
   3bb1c:	b.ne	3bbd4 <__asan_cplus_demangle_mangled_name@@Base+0x14b0>  // b.any
   3bb20:	mov	x0, #0x0                   	// #0
   3bb24:	b	3bc40 <__asan_cplus_demangle_mangled_name@@Base+0x151c>
   3bb28:	ldr	w0, [sp, #56]
   3bb2c:	add	w0, w0, #0x1
   3bb30:	str	w0, [sp, #56]
   3bb34:	ldr	w1, [sp, #56]
   3bb38:	ldr	w0, [sp, #60]
   3bb3c:	cmp	w1, w0
   3bb40:	b.ge	3bb74 <__asan_cplus_demangle_mangled_name@@Base+0x1450>  // b.tcont
   3bb44:	ldrsw	x0, [sp, #56]
   3bb48:	ldr	x1, [sp, #40]
   3bb4c:	add	x0, x1, x0
   3bb50:	ldrb	w0, [x0]
   3bb54:	cmp	w0, #0x0
   3bb58:	b.eq	3bb74 <__asan_cplus_demangle_mangled_name@@Base+0x1450>  // b.none
   3bb5c:	ldrsw	x0, [sp, #56]
   3bb60:	ldr	x1, [sp, #40]
   3bb64:	add	x0, x1, x0
   3bb68:	ldrb	w0, [x0]
   3bb6c:	cmp	w0, #0x24
   3bb70:	b.ne	3bb28 <__asan_cplus_demangle_mangled_name@@Base+0x1404>  // b.any
   3bb74:	ldr	w2, [sp, #56]
   3bb78:	ldr	x1, [sp, #40]
   3bb7c:	ldr	x0, [sp, #24]
   3bb80:	bl	3a3f8 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   3bb84:	str	x0, [sp, #64]
   3bb88:	ldr	x0, [sp, #24]
   3bb8c:	ldr	x1, [x0, #24]
   3bb90:	ldrsw	x0, [sp, #56]
   3bb94:	add	x1, x1, x0
   3bb98:	ldr	x0, [sp, #24]
   3bb9c:	str	x1, [x0, #24]
   3bba0:	ldr	x0, [sp, #24]
   3bba4:	ldr	x0, [x0, #24]
   3bba8:	str	x0, [sp, #40]
   3bbac:	ldr	w1, [sp, #60]
   3bbb0:	ldr	w0, [sp, #56]
   3bbb4:	sub	w0, w1, w0
   3bbb8:	str	w0, [sp, #60]
   3bbbc:	str	wzr, [sp, #56]
   3bbc0:	ldr	x0, [sp, #64]
   3bbc4:	cmp	x0, #0x0
   3bbc8:	b.ne	3bbd4 <__asan_cplus_demangle_mangled_name@@Base+0x14b0>  // b.any
   3bbcc:	mov	x0, #0x0                   	// #0
   3bbd0:	b	3bc40 <__asan_cplus_demangle_mangled_name@@Base+0x151c>
   3bbd4:	ldr	x0, [sp, #72]
   3bbd8:	cmp	x0, #0x0
   3bbdc:	b.ne	3bbec <__asan_cplus_demangle_mangled_name@@Base+0x14c8>  // b.any
   3bbe0:	ldr	x0, [sp, #64]
   3bbe4:	str	x0, [sp, #72]
   3bbe8:	b	3bc18 <__asan_cplus_demangle_mangled_name@@Base+0x14f4>
   3bbec:	ldr	x3, [sp, #64]
   3bbf0:	ldr	x2, [sp, #72]
   3bbf4:	mov	w1, #0x40                  	// #64
   3bbf8:	ldr	x0, [sp, #24]
   3bbfc:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3bc00:	str	x0, [sp, #72]
   3bc04:	ldr	x0, [sp, #72]
   3bc08:	cmp	x0, #0x0
   3bc0c:	b.ne	3bc18 <__asan_cplus_demangle_mangled_name@@Base+0x14f4>  // b.any
   3bc10:	mov	x0, #0x0                   	// #0
   3bc14:	b	3bc40 <__asan_cplus_demangle_mangled_name@@Base+0x151c>
   3bc18:	ldr	w0, [sp, #60]
   3bc1c:	cmp	w0, #0x0
   3bc20:	b.gt	3ba20 <__asan_cplus_demangle_mangled_name@@Base+0x12fc>
   3bc24:	mov	x3, #0x0                   	// #0
   3bc28:	ldr	x2, [sp, #72]
   3bc2c:	mov	w1, #0x3f                  	// #63
   3bc30:	ldr	x0, [sp, #24]
   3bc34:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3bc38:	str	x0, [sp, #72]
   3bc3c:	ldr	x0, [sp, #72]
   3bc40:	ldp	x29, x30, [sp], #80
   3bc44:	ret
   3bc48:	stp	x29, x30, [sp, #-64]!
   3bc4c:	mov	x29, sp
   3bc50:	str	x0, [sp, #24]
   3bc54:	ldr	x0, [sp, #24]
   3bc58:	ldr	w0, [x0, #72]
   3bc5c:	add	w1, w0, #0x14
   3bc60:	ldr	x0, [sp, #24]
   3bc64:	str	w1, [x0, #72]
   3bc68:	ldr	x0, [sp, #24]
   3bc6c:	ldr	x0, [x0, #24]
   3bc70:	ldrb	w0, [x0]
   3bc74:	cmp	w0, #0x54
   3bc78:	b.ne	3bc98 <__asan_cplus_demangle_mangled_name@@Base+0x1574>  // b.any
   3bc7c:	ldr	x0, [sp, #24]
   3bc80:	ldr	x0, [x0, #24]
   3bc84:	add	x1, x0, #0x1
   3bc88:	ldr	x0, [sp, #24]
   3bc8c:	str	x1, [x0, #24]
   3bc90:	mov	w0, #0x1                   	// #1
   3bc94:	b	3bc9c <__asan_cplus_demangle_mangled_name@@Base+0x1578>
   3bc98:	mov	w0, #0x0                   	// #0
   3bc9c:	cmp	w0, #0x0
   3bca0:	b.eq	3c070 <__asan_cplus_demangle_mangled_name@@Base+0x194c>  // b.none
   3bca4:	ldr	x0, [sp, #24]
   3bca8:	ldr	x0, [x0, #24]
   3bcac:	ldrb	w0, [x0]
   3bcb0:	cmp	w0, #0x0
   3bcb4:	b.eq	3bcd4 <__asan_cplus_demangle_mangled_name@@Base+0x15b0>  // b.none
   3bcb8:	ldr	x0, [sp, #24]
   3bcbc:	ldr	x0, [x0, #24]
   3bcc0:	add	x2, x0, #0x1
   3bcc4:	ldr	x1, [sp, #24]
   3bcc8:	str	x2, [x1, #24]
   3bccc:	ldrb	w0, [x0]
   3bcd0:	b	3bcd8 <__asan_cplus_demangle_mangled_name@@Base+0x15b4>
   3bcd4:	mov	w0, #0x0                   	// #0
   3bcd8:	cmp	w0, #0x76
   3bcdc:	b.eq	3be84 <__asan_cplus_demangle_mangled_name@@Base+0x1760>  // b.none
   3bce0:	cmp	w0, #0x76
   3bce4:	b.gt	3c068 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   3bce8:	cmp	w0, #0x68
   3bcec:	b.eq	3be44 <__asan_cplus_demangle_mangled_name@@Base+0x1720>  // b.none
   3bcf0:	cmp	w0, #0x68
   3bcf4:	b.gt	3c068 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   3bcf8:	cmp	w0, #0x63
   3bcfc:	b.eq	3bec4 <__asan_cplus_demangle_mangled_name@@Base+0x17a0>  // b.none
   3bd00:	cmp	w0, #0x63
   3bd04:	b.gt	3c068 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   3bd08:	cmp	w0, #0x57
   3bd0c:	b.eq	3c028 <__asan_cplus_demangle_mangled_name@@Base+0x1904>  // b.none
   3bd10:	cmp	w0, #0x57
   3bd14:	b.gt	3c068 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   3bd18:	cmp	w0, #0x56
   3bd1c:	b.eq	3bd9c <__asan_cplus_demangle_mangled_name@@Base+0x1678>  // b.none
   3bd20:	cmp	w0, #0x56
   3bd24:	b.gt	3c068 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   3bd28:	cmp	w0, #0x54
   3bd2c:	b.eq	3bdd0 <__asan_cplus_demangle_mangled_name@@Base+0x16ac>  // b.none
   3bd30:	cmp	w0, #0x54
   3bd34:	b.gt	3c068 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   3bd38:	cmp	w0, #0x53
   3bd3c:	b.eq	3be24 <__asan_cplus_demangle_mangled_name@@Base+0x1700>  // b.none
   3bd40:	cmp	w0, #0x53
   3bd44:	b.gt	3c068 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   3bd48:	cmp	w0, #0x4a
   3bd4c:	b.eq	3bfe8 <__asan_cplus_demangle_mangled_name@@Base+0x18c4>  // b.none
   3bd50:	cmp	w0, #0x4a
   3bd54:	b.gt	3c068 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   3bd58:	cmp	w0, #0x49
   3bd5c:	b.eq	3be04 <__asan_cplus_demangle_mangled_name@@Base+0x16e0>  // b.none
   3bd60:	cmp	w0, #0x49
   3bd64:	b.gt	3c068 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   3bd68:	cmp	w0, #0x48
   3bd6c:	b.eq	3c008 <__asan_cplus_demangle_mangled_name@@Base+0x18e4>  // b.none
   3bd70:	cmp	w0, #0x48
   3bd74:	b.gt	3c068 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   3bd78:	cmp	w0, #0x46
   3bd7c:	b.eq	3bfc8 <__asan_cplus_demangle_mangled_name@@Base+0x18a4>  // b.none
   3bd80:	cmp	w0, #0x46
   3bd84:	b.gt	3c068 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   3bd88:	cmp	w0, #0x41
   3bd8c:	b.eq	3c048 <__asan_cplus_demangle_mangled_name@@Base+0x1924>  // b.none
   3bd90:	cmp	w0, #0x43
   3bd94:	b.eq	3bf20 <__asan_cplus_demangle_mangled_name@@Base+0x17fc>  // b.none
   3bd98:	b	3c068 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   3bd9c:	ldr	x0, [sp, #24]
   3bda0:	ldr	w0, [x0, #72]
   3bda4:	sub	w1, w0, #0x5
   3bda8:	ldr	x0, [sp, #24]
   3bdac:	str	w1, [x0, #72]
   3bdb0:	ldr	x0, [sp, #24]
   3bdb4:	bl	6650 <__asan_cplus_demangle_type@plt>
   3bdb8:	mov	x3, #0x0                   	// #0
   3bdbc:	mov	x2, x0
   3bdc0:	mov	w1, #0x9                   	// #9
   3bdc4:	ldr	x0, [sp, #24]
   3bdc8:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3bdcc:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3bdd0:	ldr	x0, [sp, #24]
   3bdd4:	ldr	w0, [x0, #72]
   3bdd8:	sub	w1, w0, #0xa
   3bddc:	ldr	x0, [sp, #24]
   3bde0:	str	w1, [x0, #72]
   3bde4:	ldr	x0, [sp, #24]
   3bde8:	bl	6650 <__asan_cplus_demangle_type@plt>
   3bdec:	mov	x3, #0x0                   	// #0
   3bdf0:	mov	x2, x0
   3bdf4:	mov	w1, #0xa                   	// #10
   3bdf8:	ldr	x0, [sp, #24]
   3bdfc:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3be00:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3be04:	ldr	x0, [sp, #24]
   3be08:	bl	6650 <__asan_cplus_demangle_type@plt>
   3be0c:	mov	x3, #0x0                   	// #0
   3be10:	mov	x2, x0
   3be14:	mov	w1, #0xc                   	// #12
   3be18:	ldr	x0, [sp, #24]
   3be1c:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3be20:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3be24:	ldr	x0, [sp, #24]
   3be28:	bl	6650 <__asan_cplus_demangle_type@plt>
   3be2c:	mov	x3, #0x0                   	// #0
   3be30:	mov	x2, x0
   3be34:	mov	w1, #0xd                   	// #13
   3be38:	ldr	x0, [sp, #24]
   3be3c:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3be40:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3be44:	mov	w1, #0x68                  	// #104
   3be48:	ldr	x0, [sp, #24]
   3be4c:	bl	3c238 <__asan_cplus_demangle_mangled_name@@Base+0x1b14>
   3be50:	cmp	w0, #0x0
   3be54:	b.ne	3be60 <__asan_cplus_demangle_mangled_name@@Base+0x173c>  // b.any
   3be58:	mov	x0, #0x0                   	// #0
   3be5c:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3be60:	mov	w1, #0x0                   	// #0
   3be64:	ldr	x0, [sp, #24]
   3be68:	bl	3a9e0 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   3be6c:	mov	x3, #0x0                   	// #0
   3be70:	mov	x2, x0
   3be74:	mov	w1, #0xf                   	// #15
   3be78:	ldr	x0, [sp, #24]
   3be7c:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3be80:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3be84:	mov	w1, #0x76                  	// #118
   3be88:	ldr	x0, [sp, #24]
   3be8c:	bl	3c238 <__asan_cplus_demangle_mangled_name@@Base+0x1b14>
   3be90:	cmp	w0, #0x0
   3be94:	b.ne	3bea0 <__asan_cplus_demangle_mangled_name@@Base+0x177c>  // b.any
   3be98:	mov	x0, #0x0                   	// #0
   3be9c:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3bea0:	mov	w1, #0x0                   	// #0
   3bea4:	ldr	x0, [sp, #24]
   3bea8:	bl	3a9e0 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   3beac:	mov	x3, #0x0                   	// #0
   3beb0:	mov	x2, x0
   3beb4:	mov	w1, #0x10                  	// #16
   3beb8:	ldr	x0, [sp, #24]
   3bebc:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3bec0:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3bec4:	mov	w1, #0x0                   	// #0
   3bec8:	ldr	x0, [sp, #24]
   3becc:	bl	3c238 <__asan_cplus_demangle_mangled_name@@Base+0x1b14>
   3bed0:	cmp	w0, #0x0
   3bed4:	b.ne	3bee0 <__asan_cplus_demangle_mangled_name@@Base+0x17bc>  // b.any
   3bed8:	mov	x0, #0x0                   	// #0
   3bedc:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3bee0:	mov	w1, #0x0                   	// #0
   3bee4:	ldr	x0, [sp, #24]
   3bee8:	bl	3c238 <__asan_cplus_demangle_mangled_name@@Base+0x1b14>
   3beec:	cmp	w0, #0x0
   3bef0:	b.ne	3befc <__asan_cplus_demangle_mangled_name@@Base+0x17d8>  // b.any
   3bef4:	mov	x0, #0x0                   	// #0
   3bef8:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3befc:	mov	w1, #0x0                   	// #0
   3bf00:	ldr	x0, [sp, #24]
   3bf04:	bl	3a9e0 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   3bf08:	mov	x3, #0x0                   	// #0
   3bf0c:	mov	x2, x0
   3bf10:	mov	w1, #0x11                  	// #17
   3bf14:	ldr	x0, [sp, #24]
   3bf18:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3bf1c:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3bf20:	ldr	x0, [sp, #24]
   3bf24:	bl	6650 <__asan_cplus_demangle_type@plt>
   3bf28:	str	x0, [sp, #48]
   3bf2c:	ldr	x0, [sp, #24]
   3bf30:	bl	3b3d8 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   3bf34:	str	w0, [sp, #44]
   3bf38:	ldr	w0, [sp, #44]
   3bf3c:	cmp	w0, #0x0
   3bf40:	b.ge	3bf4c <__asan_cplus_demangle_mangled_name@@Base+0x1828>  // b.tcont
   3bf44:	mov	x0, #0x0                   	// #0
   3bf48:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3bf4c:	ldr	x0, [sp, #24]
   3bf50:	ldr	x0, [x0, #24]
   3bf54:	ldrb	w0, [x0]
   3bf58:	cmp	w0, #0x5f
   3bf5c:	b.ne	3bf7c <__asan_cplus_demangle_mangled_name@@Base+0x1858>  // b.any
   3bf60:	ldr	x0, [sp, #24]
   3bf64:	ldr	x0, [x0, #24]
   3bf68:	add	x1, x0, #0x1
   3bf6c:	ldr	x0, [sp, #24]
   3bf70:	str	x1, [x0, #24]
   3bf74:	mov	w0, #0x0                   	// #0
   3bf78:	b	3bf80 <__asan_cplus_demangle_mangled_name@@Base+0x185c>
   3bf7c:	mov	w0, #0x1                   	// #1
   3bf80:	cmp	w0, #0x0
   3bf84:	b.eq	3bf90 <__asan_cplus_demangle_mangled_name@@Base+0x186c>  // b.none
   3bf88:	mov	x0, #0x0                   	// #0
   3bf8c:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3bf90:	ldr	x0, [sp, #24]
   3bf94:	bl	6650 <__asan_cplus_demangle_type@plt>
   3bf98:	str	x0, [sp, #32]
   3bf9c:	ldr	x0, [sp, #24]
   3bfa0:	ldr	w0, [x0, #72]
   3bfa4:	add	w1, w0, #0x5
   3bfa8:	ldr	x0, [sp, #24]
   3bfac:	str	w1, [x0, #72]
   3bfb0:	ldr	x3, [sp, #48]
   3bfb4:	ldr	x2, [sp, #32]
   3bfb8:	mov	w1, #0xb                   	// #11
   3bfbc:	ldr	x0, [sp, #24]
   3bfc0:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3bfc4:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3bfc8:	ldr	x0, [sp, #24]
   3bfcc:	bl	6650 <__asan_cplus_demangle_type@plt>
   3bfd0:	mov	x3, #0x0                   	// #0
   3bfd4:	mov	x2, x0
   3bfd8:	mov	w1, #0xe                   	// #14
   3bfdc:	ldr	x0, [sp, #24]
   3bfe0:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3bfe4:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3bfe8:	ldr	x0, [sp, #24]
   3bfec:	bl	6650 <__asan_cplus_demangle_type@plt>
   3bff0:	mov	x3, #0x0                   	// #0
   3bff4:	mov	x2, x0
   3bff8:	mov	w1, #0x12                  	// #18
   3bffc:	ldr	x0, [sp, #24]
   3c000:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3c004:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3c008:	ldr	x0, [sp, #24]
   3c00c:	bl	3ac00 <__asan_cplus_demangle_mangled_name@@Base+0x4dc>
   3c010:	mov	x3, #0x0                   	// #0
   3c014:	mov	x2, x0
   3c018:	mov	w1, #0x14                  	// #20
   3c01c:	ldr	x0, [sp, #24]
   3c020:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3c024:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3c028:	ldr	x0, [sp, #24]
   3c02c:	bl	3ac00 <__asan_cplus_demangle_mangled_name@@Base+0x4dc>
   3c030:	mov	x3, #0x0                   	// #0
   3c034:	mov	x2, x0
   3c038:	mov	w1, #0x15                  	// #21
   3c03c:	ldr	x0, [sp, #24]
   3c040:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3c044:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3c048:	ldr	x0, [sp, #24]
   3c04c:	bl	3df78 <__asan_cplus_demangle_type@@Base+0x18e4>
   3c050:	mov	x3, #0x0                   	// #0
   3c054:	mov	x2, x0
   3c058:	mov	w1, #0x30                  	// #48
   3c05c:	ldr	x0, [sp, #24]
   3c060:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3c064:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3c068:	mov	x0, #0x0                   	// #0
   3c06c:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3c070:	ldr	x0, [sp, #24]
   3c074:	ldr	x0, [x0, #24]
   3c078:	ldrb	w0, [x0]
   3c07c:	cmp	w0, #0x47
   3c080:	b.ne	3c0a0 <__asan_cplus_demangle_mangled_name@@Base+0x197c>  // b.any
   3c084:	ldr	x0, [sp, #24]
   3c088:	ldr	x0, [x0, #24]
   3c08c:	add	x1, x0, #0x1
   3c090:	ldr	x0, [sp, #24]
   3c094:	str	x1, [x0, #24]
   3c098:	mov	w0, #0x1                   	// #1
   3c09c:	b	3c0a4 <__asan_cplus_demangle_mangled_name@@Base+0x1980>
   3c0a0:	mov	w0, #0x0                   	// #0
   3c0a4:	cmp	w0, #0x0
   3c0a8:	b.eq	3c22c <__asan_cplus_demangle_mangled_name@@Base+0x1b08>  // b.none
   3c0ac:	ldr	x0, [sp, #24]
   3c0b0:	ldr	x0, [x0, #24]
   3c0b4:	ldrb	w0, [x0]
   3c0b8:	cmp	w0, #0x0
   3c0bc:	b.eq	3c0dc <__asan_cplus_demangle_mangled_name@@Base+0x19b8>  // b.none
   3c0c0:	ldr	x0, [sp, #24]
   3c0c4:	ldr	x0, [x0, #24]
   3c0c8:	add	x2, x0, #0x1
   3c0cc:	ldr	x1, [sp, #24]
   3c0d0:	str	x2, [x1, #24]
   3c0d4:	ldrb	w0, [x0]
   3c0d8:	b	3c0e0 <__asan_cplus_demangle_mangled_name@@Base+0x19bc>
   3c0dc:	mov	w0, #0x0                   	// #0
   3c0e0:	cmp	w0, #0x72
   3c0e4:	b.eq	3c218 <__asan_cplus_demangle_mangled_name@@Base+0x1af4>  // b.none
   3c0e8:	cmp	w0, #0x72
   3c0ec:	b.gt	3c224 <__asan_cplus_demangle_mangled_name@@Base+0x1b00>
   3c0f0:	cmp	w0, #0x56
   3c0f4:	b.eq	3c124 <__asan_cplus_demangle_mangled_name@@Base+0x1a00>  // b.none
   3c0f8:	cmp	w0, #0x56
   3c0fc:	b.gt	3c224 <__asan_cplus_demangle_mangled_name@@Base+0x1b00>
   3c100:	cmp	w0, #0x54
   3c104:	b.eq	3c194 <__asan_cplus_demangle_mangled_name@@Base+0x1a70>  // b.none
   3c108:	cmp	w0, #0x54
   3c10c:	b.gt	3c224 <__asan_cplus_demangle_mangled_name@@Base+0x1b00>
   3c110:	cmp	w0, #0x41
   3c114:	b.eq	3c170 <__asan_cplus_demangle_mangled_name@@Base+0x1a4c>  // b.none
   3c118:	cmp	w0, #0x52
   3c11c:	b.eq	3c144 <__asan_cplus_demangle_mangled_name@@Base+0x1a20>  // b.none
   3c120:	b	3c224 <__asan_cplus_demangle_mangled_name@@Base+0x1b00>
   3c124:	ldr	x0, [sp, #24]
   3c128:	bl	3ac00 <__asan_cplus_demangle_mangled_name@@Base+0x4dc>
   3c12c:	mov	x3, #0x0                   	// #0
   3c130:	mov	x2, x0
   3c134:	mov	w1, #0x13                  	// #19
   3c138:	ldr	x0, [sp, #24]
   3c13c:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3c140:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3c144:	ldr	x0, [sp, #24]
   3c148:	bl	3ac00 <__asan_cplus_demangle_mangled_name@@Base+0x4dc>
   3c14c:	str	x0, [sp, #56]
   3c150:	ldr	x0, [sp, #24]
   3c154:	bl	3b500 <__asan_cplus_demangle_mangled_name@@Base+0xddc>
   3c158:	mov	x3, x0
   3c15c:	ldr	x2, [sp, #56]
   3c160:	mov	w1, #0x16                  	// #22
   3c164:	ldr	x0, [sp, #24]
   3c168:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3c16c:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3c170:	mov	w1, #0x0                   	// #0
   3c174:	ldr	x0, [sp, #24]
   3c178:	bl	3a9e0 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   3c17c:	mov	x3, #0x0                   	// #0
   3c180:	mov	x2, x0
   3c184:	mov	w1, #0x17                  	// #23
   3c188:	ldr	x0, [sp, #24]
   3c18c:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3c190:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3c194:	ldr	x0, [sp, #24]
   3c198:	ldr	x0, [x0, #24]
   3c19c:	ldrb	w0, [x0]
   3c1a0:	cmp	w0, #0x0
   3c1a4:	b.eq	3c1c4 <__asan_cplus_demangle_mangled_name@@Base+0x1aa0>  // b.none
   3c1a8:	ldr	x0, [sp, #24]
   3c1ac:	ldr	x0, [x0, #24]
   3c1b0:	add	x2, x0, #0x1
   3c1b4:	ldr	x1, [sp, #24]
   3c1b8:	str	x2, [x1, #24]
   3c1bc:	ldrb	w0, [x0]
   3c1c0:	b	3c1c8 <__asan_cplus_demangle_mangled_name@@Base+0x1aa4>
   3c1c4:	mov	w0, #0x0                   	// #0
   3c1c8:	cmp	w0, #0x6e
   3c1cc:	b.ne	3c1f4 <__asan_cplus_demangle_mangled_name@@Base+0x1ad0>  // b.any
   3c1d0:	mov	w1, #0x0                   	// #0
   3c1d4:	ldr	x0, [sp, #24]
   3c1d8:	bl	3a9e0 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   3c1dc:	mov	x3, #0x0                   	// #0
   3c1e0:	mov	x2, x0
   3c1e4:	mov	w1, #0x4a                  	// #74
   3c1e8:	ldr	x0, [sp, #24]
   3c1ec:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3c1f0:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3c1f4:	mov	w1, #0x0                   	// #0
   3c1f8:	ldr	x0, [sp, #24]
   3c1fc:	bl	3a9e0 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   3c200:	mov	x3, #0x0                   	// #0
   3c204:	mov	x2, x0
   3c208:	mov	w1, #0x49                  	// #73
   3c20c:	ldr	x0, [sp, #24]
   3c210:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3c214:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3c218:	ldr	x0, [sp, #24]
   3c21c:	bl	3b990 <__asan_cplus_demangle_mangled_name@@Base+0x126c>
   3c220:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3c224:	mov	x0, #0x0                   	// #0
   3c228:	b	3c230 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   3c22c:	mov	x0, #0x0                   	// #0
   3c230:	ldp	x29, x30, [sp], #64
   3c234:	ret
   3c238:	stp	x29, x30, [sp, #-32]!
   3c23c:	mov	x29, sp
   3c240:	str	x0, [sp, #24]
   3c244:	str	w1, [sp, #20]
   3c248:	ldr	w0, [sp, #20]
   3c24c:	cmp	w0, #0x0
   3c250:	b.ne	3c28c <__asan_cplus_demangle_mangled_name@@Base+0x1b68>  // b.any
   3c254:	ldr	x0, [sp, #24]
   3c258:	ldr	x0, [x0, #24]
   3c25c:	ldrb	w0, [x0]
   3c260:	cmp	w0, #0x0
   3c264:	b.eq	3c284 <__asan_cplus_demangle_mangled_name@@Base+0x1b60>  // b.none
   3c268:	ldr	x0, [sp, #24]
   3c26c:	ldr	x0, [x0, #24]
   3c270:	add	x2, x0, #0x1
   3c274:	ldr	x1, [sp, #24]
   3c278:	str	x2, [x1, #24]
   3c27c:	ldrb	w0, [x0]
   3c280:	b	3c288 <__asan_cplus_demangle_mangled_name@@Base+0x1b64>
   3c284:	mov	w0, #0x0                   	// #0
   3c288:	str	w0, [sp, #20]
   3c28c:	ldr	w0, [sp, #20]
   3c290:	cmp	w0, #0x68
   3c294:	b.ne	3c2a4 <__asan_cplus_demangle_mangled_name@@Base+0x1b80>  // b.any
   3c298:	ldr	x0, [sp, #24]
   3c29c:	bl	3b3d8 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   3c2a0:	b	3c310 <__asan_cplus_demangle_mangled_name@@Base+0x1bec>
   3c2a4:	ldr	w0, [sp, #20]
   3c2a8:	cmp	w0, #0x76
   3c2ac:	b.ne	3c308 <__asan_cplus_demangle_mangled_name@@Base+0x1be4>  // b.any
   3c2b0:	ldr	x0, [sp, #24]
   3c2b4:	bl	3b3d8 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   3c2b8:	ldr	x0, [sp, #24]
   3c2bc:	ldr	x0, [x0, #24]
   3c2c0:	ldrb	w0, [x0]
   3c2c4:	cmp	w0, #0x5f
   3c2c8:	b.ne	3c2e8 <__asan_cplus_demangle_mangled_name@@Base+0x1bc4>  // b.any
   3c2cc:	ldr	x0, [sp, #24]
   3c2d0:	ldr	x0, [x0, #24]
   3c2d4:	add	x1, x0, #0x1
   3c2d8:	ldr	x0, [sp, #24]
   3c2dc:	str	x1, [x0, #24]
   3c2e0:	mov	w0, #0x0                   	// #0
   3c2e4:	b	3c2ec <__asan_cplus_demangle_mangled_name@@Base+0x1bc8>
   3c2e8:	mov	w0, #0x1                   	// #1
   3c2ec:	cmp	w0, #0x0
   3c2f0:	b.eq	3c2fc <__asan_cplus_demangle_mangled_name@@Base+0x1bd8>  // b.none
   3c2f4:	mov	w0, #0x0                   	// #0
   3c2f8:	b	3c358 <__asan_cplus_demangle_mangled_name@@Base+0x1c34>
   3c2fc:	ldr	x0, [sp, #24]
   3c300:	bl	3b3d8 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   3c304:	b	3c310 <__asan_cplus_demangle_mangled_name@@Base+0x1bec>
   3c308:	mov	w0, #0x0                   	// #0
   3c30c:	b	3c358 <__asan_cplus_demangle_mangled_name@@Base+0x1c34>
   3c310:	ldr	x0, [sp, #24]
   3c314:	ldr	x0, [x0, #24]
   3c318:	ldrb	w0, [x0]
   3c31c:	cmp	w0, #0x5f
   3c320:	b.ne	3c340 <__asan_cplus_demangle_mangled_name@@Base+0x1c1c>  // b.any
   3c324:	ldr	x0, [sp, #24]
   3c328:	ldr	x0, [x0, #24]
   3c32c:	add	x1, x0, #0x1
   3c330:	ldr	x0, [sp, #24]
   3c334:	str	x1, [x0, #24]
   3c338:	mov	w0, #0x0                   	// #0
   3c33c:	b	3c344 <__asan_cplus_demangle_mangled_name@@Base+0x1c20>
   3c340:	mov	w0, #0x1                   	// #1
   3c344:	cmp	w0, #0x0
   3c348:	b.eq	3c354 <__asan_cplus_demangle_mangled_name@@Base+0x1c30>  // b.none
   3c34c:	mov	w0, #0x0                   	// #0
   3c350:	b	3c358 <__asan_cplus_demangle_mangled_name@@Base+0x1c34>
   3c354:	mov	w0, #0x1                   	// #1
   3c358:	ldp	x29, x30, [sp], #32
   3c35c:	ret
   3c360:	stp	x29, x30, [sp, #-48]!
   3c364:	mov	x29, sp
   3c368:	str	x0, [sp, #24]
   3c36c:	ldr	x0, [sp, #24]
   3c370:	ldr	x0, [x0, #64]
   3c374:	cmp	x0, #0x0
   3c378:	b.eq	3c3e8 <__asan_cplus_demangle_mangled_name@@Base+0x1cc4>  // b.none
   3c37c:	ldr	x0, [sp, #24]
   3c380:	ldr	x0, [x0, #64]
   3c384:	ldr	w0, [x0]
   3c388:	cmp	w0, #0x0
   3c38c:	b.ne	3c3b4 <__asan_cplus_demangle_mangled_name@@Base+0x1c90>  // b.any
   3c390:	ldr	x0, [sp, #24]
   3c394:	ldr	w1, [x0, #72]
   3c398:	ldr	x0, [sp, #24]
   3c39c:	ldr	x0, [x0, #64]
   3c3a0:	ldr	w0, [x0, #16]
   3c3a4:	add	w1, w1, w0
   3c3a8:	ldr	x0, [sp, #24]
   3c3ac:	str	w1, [x0, #72]
   3c3b0:	b	3c3e8 <__asan_cplus_demangle_mangled_name@@Base+0x1cc4>
   3c3b4:	ldr	x0, [sp, #24]
   3c3b8:	ldr	x0, [x0, #64]
   3c3bc:	ldr	w0, [x0]
   3c3c0:	cmp	w0, #0x18
   3c3c4:	b.ne	3c3e8 <__asan_cplus_demangle_mangled_name@@Base+0x1cc4>  // b.any
   3c3c8:	ldr	x0, [sp, #24]
   3c3cc:	ldr	w1, [x0, #72]
   3c3d0:	ldr	x0, [sp, #24]
   3c3d4:	ldr	x0, [x0, #64]
   3c3d8:	ldr	w0, [x0, #16]
   3c3dc:	add	w1, w1, w0
   3c3e0:	ldr	x0, [sp, #24]
   3c3e4:	str	w1, [x0, #72]
   3c3e8:	ldr	x0, [sp, #24]
   3c3ec:	ldr	x0, [x0, #24]
   3c3f0:	ldrb	w0, [x0]
   3c3f4:	cmp	w0, #0x43
   3c3f8:	b.eq	3c408 <__asan_cplus_demangle_mangled_name@@Base+0x1ce4>  // b.none
   3c3fc:	cmp	w0, #0x44
   3c400:	b.eq	3c51c <__asan_cplus_demangle_mangled_name@@Base+0x1df8>  // b.none
   3c404:	b	3c5e4 <__asan_cplus_demangle_mangled_name@@Base+0x1ec0>
   3c408:	str	wzr, [sp, #40]
   3c40c:	ldr	x0, [sp, #24]
   3c410:	ldr	x0, [x0, #24]
   3c414:	add	x0, x0, #0x1
   3c418:	ldrb	w0, [x0]
   3c41c:	cmp	w0, #0x49
   3c420:	b.ne	3c440 <__asan_cplus_demangle_mangled_name@@Base+0x1d1c>  // b.any
   3c424:	mov	w0, #0x1                   	// #1
   3c428:	str	w0, [sp, #40]
   3c42c:	ldr	x0, [sp, #24]
   3c430:	ldr	x0, [x0, #24]
   3c434:	add	x1, x0, #0x1
   3c438:	ldr	x0, [sp, #24]
   3c43c:	str	x1, [x0, #24]
   3c440:	ldr	x0, [sp, #24]
   3c444:	ldr	x0, [x0, #24]
   3c448:	add	x0, x0, #0x1
   3c44c:	ldrb	w0, [x0]
   3c450:	cmp	w0, #0x35
   3c454:	b.eq	3c4c4 <__asan_cplus_demangle_mangled_name@@Base+0x1da0>  // b.none
   3c458:	cmp	w0, #0x35
   3c45c:	b.gt	3c4d0 <__asan_cplus_demangle_mangled_name@@Base+0x1dac>
   3c460:	cmp	w0, #0x34
   3c464:	b.eq	3c4b8 <__asan_cplus_demangle_mangled_name@@Base+0x1d94>  // b.none
   3c468:	cmp	w0, #0x34
   3c46c:	b.gt	3c4d0 <__asan_cplus_demangle_mangled_name@@Base+0x1dac>
   3c470:	cmp	w0, #0x33
   3c474:	b.eq	3c4ac <__asan_cplus_demangle_mangled_name@@Base+0x1d88>  // b.none
   3c478:	cmp	w0, #0x33
   3c47c:	b.gt	3c4d0 <__asan_cplus_demangle_mangled_name@@Base+0x1dac>
   3c480:	cmp	w0, #0x31
   3c484:	b.eq	3c494 <__asan_cplus_demangle_mangled_name@@Base+0x1d70>  // b.none
   3c488:	cmp	w0, #0x32
   3c48c:	b.eq	3c4a0 <__asan_cplus_demangle_mangled_name@@Base+0x1d7c>  // b.none
   3c490:	b	3c4d0 <__asan_cplus_demangle_mangled_name@@Base+0x1dac>
   3c494:	mov	w0, #0x1                   	// #1
   3c498:	str	w0, [sp, #44]
   3c49c:	b	3c4d8 <__asan_cplus_demangle_mangled_name@@Base+0x1db4>
   3c4a0:	mov	w0, #0x2                   	// #2
   3c4a4:	str	w0, [sp, #44]
   3c4a8:	b	3c4d8 <__asan_cplus_demangle_mangled_name@@Base+0x1db4>
   3c4ac:	mov	w0, #0x3                   	// #3
   3c4b0:	str	w0, [sp, #44]
   3c4b4:	b	3c4d8 <__asan_cplus_demangle_mangled_name@@Base+0x1db4>
   3c4b8:	mov	w0, #0x4                   	// #4
   3c4bc:	str	w0, [sp, #44]
   3c4c0:	b	3c4d8 <__asan_cplus_demangle_mangled_name@@Base+0x1db4>
   3c4c4:	mov	w0, #0x5                   	// #5
   3c4c8:	str	w0, [sp, #44]
   3c4cc:	b	3c4d8 <__asan_cplus_demangle_mangled_name@@Base+0x1db4>
   3c4d0:	mov	x0, #0x0                   	// #0
   3c4d4:	b	3c5e8 <__asan_cplus_demangle_mangled_name@@Base+0x1ec4>
   3c4d8:	ldr	x0, [sp, #24]
   3c4dc:	ldr	x0, [x0, #24]
   3c4e0:	add	x1, x0, #0x2
   3c4e4:	ldr	x0, [sp, #24]
   3c4e8:	str	x1, [x0, #24]
   3c4ec:	ldr	w0, [sp, #40]
   3c4f0:	cmp	w0, #0x0
   3c4f4:	b.eq	3c500 <__asan_cplus_demangle_mangled_name@@Base+0x1ddc>  // b.none
   3c4f8:	ldr	x0, [sp, #24]
   3c4fc:	bl	6650 <__asan_cplus_demangle_type@plt>
   3c500:	ldr	x0, [sp, #24]
   3c504:	ldr	x0, [x0, #64]
   3c508:	mov	x2, x0
   3c50c:	ldr	w1, [sp, #44]
   3c510:	ldr	x0, [sp, #24]
   3c514:	bl	3a598 <__asan_cplus_demangle_fill_dtor@@Base+0x410>
   3c518:	b	3c5e8 <__asan_cplus_demangle_mangled_name@@Base+0x1ec4>
   3c51c:	ldr	x0, [sp, #24]
   3c520:	ldr	x0, [x0, #24]
   3c524:	add	x0, x0, #0x1
   3c528:	ldrb	w0, [x0]
   3c52c:	cmp	w0, #0x35
   3c530:	b.eq	3c5a0 <__asan_cplus_demangle_mangled_name@@Base+0x1e7c>  // b.none
   3c534:	cmp	w0, #0x35
   3c538:	b.gt	3c5ac <__asan_cplus_demangle_mangled_name@@Base+0x1e88>
   3c53c:	cmp	w0, #0x34
   3c540:	b.eq	3c594 <__asan_cplus_demangle_mangled_name@@Base+0x1e70>  // b.none
   3c544:	cmp	w0, #0x34
   3c548:	b.gt	3c5ac <__asan_cplus_demangle_mangled_name@@Base+0x1e88>
   3c54c:	cmp	w0, #0x32
   3c550:	b.eq	3c588 <__asan_cplus_demangle_mangled_name@@Base+0x1e64>  // b.none
   3c554:	cmp	w0, #0x32
   3c558:	b.gt	3c5ac <__asan_cplus_demangle_mangled_name@@Base+0x1e88>
   3c55c:	cmp	w0, #0x30
   3c560:	b.eq	3c570 <__asan_cplus_demangle_mangled_name@@Base+0x1e4c>  // b.none
   3c564:	cmp	w0, #0x31
   3c568:	b.eq	3c57c <__asan_cplus_demangle_mangled_name@@Base+0x1e58>  // b.none
   3c56c:	b	3c5ac <__asan_cplus_demangle_mangled_name@@Base+0x1e88>
   3c570:	mov	w0, #0x1                   	// #1
   3c574:	str	w0, [sp, #36]
   3c578:	b	3c5b4 <__asan_cplus_demangle_mangled_name@@Base+0x1e90>
   3c57c:	mov	w0, #0x2                   	// #2
   3c580:	str	w0, [sp, #36]
   3c584:	b	3c5b4 <__asan_cplus_demangle_mangled_name@@Base+0x1e90>
   3c588:	mov	w0, #0x3                   	// #3
   3c58c:	str	w0, [sp, #36]
   3c590:	b	3c5b4 <__asan_cplus_demangle_mangled_name@@Base+0x1e90>
   3c594:	mov	w0, #0x4                   	// #4
   3c598:	str	w0, [sp, #36]
   3c59c:	b	3c5b4 <__asan_cplus_demangle_mangled_name@@Base+0x1e90>
   3c5a0:	mov	w0, #0x5                   	// #5
   3c5a4:	str	w0, [sp, #36]
   3c5a8:	b	3c5b4 <__asan_cplus_demangle_mangled_name@@Base+0x1e90>
   3c5ac:	mov	x0, #0x0                   	// #0
   3c5b0:	b	3c5e8 <__asan_cplus_demangle_mangled_name@@Base+0x1ec4>
   3c5b4:	ldr	x0, [sp, #24]
   3c5b8:	ldr	x0, [x0, #24]
   3c5bc:	add	x1, x0, #0x2
   3c5c0:	ldr	x0, [sp, #24]
   3c5c4:	str	x1, [x0, #24]
   3c5c8:	ldr	x0, [sp, #24]
   3c5cc:	ldr	x0, [x0, #64]
   3c5d0:	mov	x2, x0
   3c5d4:	ldr	w1, [sp, #36]
   3c5d8:	ldr	x0, [sp, #24]
   3c5dc:	bl	3a5e4 <__asan_cplus_demangle_fill_dtor@@Base+0x45c>
   3c5e0:	b	3c5e8 <__asan_cplus_demangle_mangled_name@@Base+0x1ec4>
   3c5e4:	mov	x0, #0x0                   	// #0
   3c5e8:	ldp	x29, x30, [sp], #48
   3c5ec:	ret
   3c5f0:	sub	sp, sp, #0x20
   3c5f4:	str	x0, [sp, #8]
   3c5f8:	ldr	x0, [sp, #8]
   3c5fc:	ldr	x0, [x0, #24]
   3c600:	ldrb	w0, [x0]
   3c604:	strb	w0, [sp, #31]
   3c608:	ldrb	w0, [sp, #31]
   3c60c:	cmp	w0, #0x72
   3c610:	b.eq	3c62c <__asan_cplus_demangle_mangled_name@@Base+0x1f08>  // b.none
   3c614:	ldrb	w0, [sp, #31]
   3c618:	cmp	w0, #0x56
   3c61c:	b.eq	3c62c <__asan_cplus_demangle_mangled_name@@Base+0x1f08>  // b.none
   3c620:	ldrb	w0, [sp, #31]
   3c624:	cmp	w0, #0x4b
   3c628:	b.ne	3c634 <__asan_cplus_demangle_mangled_name@@Base+0x1f10>  // b.any
   3c62c:	mov	w0, #0x1                   	// #1
   3c630:	b	3c68c <__asan_cplus_demangle_mangled_name@@Base+0x1f68>
   3c634:	ldrb	w0, [sp, #31]
   3c638:	cmp	w0, #0x44
   3c63c:	b.ne	3c688 <__asan_cplus_demangle_mangled_name@@Base+0x1f64>  // b.any
   3c640:	ldr	x0, [sp, #8]
   3c644:	ldr	x0, [x0, #24]
   3c648:	ldrb	w0, [x0, #1]
   3c64c:	strb	w0, [sp, #31]
   3c650:	ldrb	w0, [sp, #31]
   3c654:	cmp	w0, #0x78
   3c658:	b.eq	3c680 <__asan_cplus_demangle_mangled_name@@Base+0x1f5c>  // b.none
   3c65c:	ldrb	w0, [sp, #31]
   3c660:	cmp	w0, #0x6f
   3c664:	b.eq	3c680 <__asan_cplus_demangle_mangled_name@@Base+0x1f5c>  // b.none
   3c668:	ldrb	w0, [sp, #31]
   3c66c:	cmp	w0, #0x4f
   3c670:	b.eq	3c680 <__asan_cplus_demangle_mangled_name@@Base+0x1f5c>  // b.none
   3c674:	ldrb	w0, [sp, #31]
   3c678:	cmp	w0, #0x77
   3c67c:	b.ne	3c688 <__asan_cplus_demangle_mangled_name@@Base+0x1f64>  // b.any
   3c680:	mov	w0, #0x1                   	// #1
   3c684:	b	3c68c <__asan_cplus_demangle_mangled_name@@Base+0x1f68>
   3c688:	mov	w0, #0x0                   	// #0
   3c68c:	add	sp, sp, #0x20
   3c690:	ret

000000000003c694 <__asan_cplus_demangle_type@@Base>:
   3c694:	stp	x29, x30, [sp, #-128]!
   3c698:	mov	x29, sp
   3c69c:	str	x19, [sp, #16]
   3c6a0:	str	x0, [sp, #40]
   3c6a4:	ldr	x0, [sp, #40]
   3c6a8:	bl	3c5f0 <__asan_cplus_demangle_mangled_name@@Base+0x1ecc>
   3c6ac:	cmp	w0, #0x0
   3c6b0:	b.eq	3c7c0 <__asan_cplus_demangle_type@@Base+0x12c>  // b.none
   3c6b4:	add	x0, sp, #0x50
   3c6b8:	mov	w2, #0x0                   	// #0
   3c6bc:	mov	x1, x0
   3c6c0:	ldr	x0, [sp, #40]
   3c6c4:	bl	3d19c <__asan_cplus_demangle_type@@Base+0xb08>
   3c6c8:	str	x0, [sp, #96]
   3c6cc:	ldr	x0, [sp, #96]
   3c6d0:	cmp	x0, #0x0
   3c6d4:	b.ne	3c6e0 <__asan_cplus_demangle_type@@Base+0x4c>  // b.any
   3c6d8:	mov	x0, #0x0                   	// #0
   3c6dc:	b	3d190 <__asan_cplus_demangle_type@@Base+0xafc>
   3c6e0:	ldr	x0, [sp, #40]
   3c6e4:	ldr	x0, [x0, #24]
   3c6e8:	ldrb	w0, [x0]
   3c6ec:	cmp	w0, #0x46
   3c6f0:	b.ne	3c70c <__asan_cplus_demangle_type@@Base+0x78>  // b.any
   3c6f4:	ldr	x0, [sp, #40]
   3c6f8:	bl	3d644 <__asan_cplus_demangle_type@@Base+0xfb0>
   3c6fc:	mov	x1, x0
   3c700:	ldr	x0, [sp, #96]
   3c704:	str	x1, [x0]
   3c708:	b	3c720 <__asan_cplus_demangle_type@@Base+0x8c>
   3c70c:	ldr	x0, [sp, #40]
   3c710:	bl	3c694 <__asan_cplus_demangle_type@@Base>
   3c714:	mov	x1, x0
   3c718:	ldr	x0, [sp, #96]
   3c71c:	str	x1, [x0]
   3c720:	ldr	x0, [sp, #96]
   3c724:	ldr	x0, [x0]
   3c728:	cmp	x0, #0x0
   3c72c:	b.ne	3c738 <__asan_cplus_demangle_type@@Base+0xa4>  // b.any
   3c730:	mov	x0, #0x0                   	// #0
   3c734:	b	3d190 <__asan_cplus_demangle_type@@Base+0xafc>
   3c738:	ldr	x0, [sp, #96]
   3c73c:	ldr	x0, [x0]
   3c740:	ldr	w0, [x0]
   3c744:	cmp	w0, #0x20
   3c748:	b.eq	3c760 <__asan_cplus_demangle_type@@Base+0xcc>  // b.none
   3c74c:	ldr	x0, [sp, #96]
   3c750:	ldr	x0, [x0]
   3c754:	ldr	w0, [x0]
   3c758:	cmp	w0, #0x1f
   3c75c:	b.ne	3c798 <__asan_cplus_demangle_type@@Base+0x104>  // b.any
   3c760:	ldr	x0, [sp, #96]
   3c764:	ldr	x0, [x0]
   3c768:	ldr	x0, [x0, #8]
   3c76c:	str	x0, [sp, #88]
   3c770:	ldr	x0, [sp, #96]
   3c774:	ldr	x0, [x0]
   3c778:	ldr	x1, [sp, #80]
   3c77c:	str	x1, [x0, #8]
   3c780:	ldr	x0, [sp, #96]
   3c784:	ldr	x0, [x0]
   3c788:	str	x0, [sp, #80]
   3c78c:	ldr	x0, [sp, #96]
   3c790:	ldr	x1, [sp, #88]
   3c794:	str	x1, [x0]
   3c798:	ldr	x0, [sp, #80]
   3c79c:	mov	x1, x0
   3c7a0:	ldr	x0, [sp, #40]
   3c7a4:	bl	3f4bc <__asan_cplus_demangle_type@@Base+0x2e28>
   3c7a8:	cmp	w0, #0x0
   3c7ac:	b.ne	3c7b8 <__asan_cplus_demangle_type@@Base+0x124>  // b.any
   3c7b0:	mov	x0, #0x0                   	// #0
   3c7b4:	b	3d190 <__asan_cplus_demangle_type@@Base+0xafc>
   3c7b8:	ldr	x0, [sp, #80]
   3c7bc:	b	3d190 <__asan_cplus_demangle_type@@Base+0xafc>
   3c7c0:	mov	w0, #0x1                   	// #1
   3c7c4:	str	w0, [sp, #124]
   3c7c8:	ldr	x0, [sp, #40]
   3c7cc:	ldr	x0, [x0, #24]
   3c7d0:	ldrb	w0, [x0]
   3c7d4:	strb	w0, [sp, #123]
   3c7d8:	ldrb	w0, [sp, #123]
   3c7dc:	sub	w0, w0, #0x30
   3c7e0:	cmp	w0, #0x4a
   3c7e4:	b.hi	3d14c <__asan_cplus_demangle_type@@Base+0xab8>  // b.pmore
   3c7e8:	adrp	x1, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   3c7ec:	add	x1, x1, #0xc80
   3c7f0:	ldr	w0, [x1, w0, uxtw #2]
   3c7f4:	adr	x1, 3c800 <__asan_cplus_demangle_type@@Base+0x16c>
   3c7f8:	add	x0, x1, w0, sxtw #2
   3c7fc:	br	x0
   3c800:	ldrb	w0, [sp, #123]
   3c804:	sub	w0, w0, #0x61
   3c808:	sxtw	x0, w0
   3c80c:	lsl	x1, x0, #5
   3c810:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   3c814:	ldr	x0, [x0, #3912]
   3c818:	add	x0, x1, x0
   3c81c:	mov	x1, x0
   3c820:	ldr	x0, [sp, #40]
   3c824:	bl	3a444 <__asan_cplus_demangle_fill_dtor@@Base+0x2bc>
   3c828:	str	x0, [sp, #80]
   3c82c:	ldr	x0, [sp, #40]
   3c830:	ldr	w1, [x0, #72]
   3c834:	ldr	x0, [sp, #80]
   3c838:	ldr	x0, [x0, #8]
   3c83c:	ldr	w0, [x0, #8]
   3c840:	add	w1, w1, w0
   3c844:	ldr	x0, [sp, #40]
   3c848:	str	w1, [x0, #72]
   3c84c:	str	wzr, [sp, #124]
   3c850:	ldr	x0, [sp, #40]
   3c854:	ldr	x0, [x0, #24]
   3c858:	add	x1, x0, #0x1
   3c85c:	ldr	x0, [sp, #40]
   3c860:	str	x1, [x0, #24]
   3c864:	b	3d160 <__asan_cplus_demangle_type@@Base+0xacc>
   3c868:	ldr	x0, [sp, #40]
   3c86c:	ldr	x0, [x0, #24]
   3c870:	add	x1, x0, #0x1
   3c874:	ldr	x0, [sp, #40]
   3c878:	str	x1, [x0, #24]
   3c87c:	ldr	x0, [sp, #40]
   3c880:	bl	3b384 <__asan_cplus_demangle_mangled_name@@Base+0xc60>
   3c884:	mov	x3, #0x0                   	// #0
   3c888:	mov	x2, x0
   3c88c:	mov	w1, #0x28                  	// #40
   3c890:	ldr	x0, [sp, #40]
   3c894:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3c898:	str	x0, [sp, #80]
   3c89c:	b	3d160 <__asan_cplus_demangle_type@@Base+0xacc>
   3c8a0:	ldr	x0, [sp, #40]
   3c8a4:	bl	3d644 <__asan_cplus_demangle_type@@Base+0xfb0>
   3c8a8:	str	x0, [sp, #80]
   3c8ac:	b	3d160 <__asan_cplus_demangle_type@@Base+0xacc>
   3c8b0:	ldr	x0, [sp, #40]
   3c8b4:	bl	3d9b4 <__asan_cplus_demangle_type@@Base+0x1320>
   3c8b8:	str	x0, [sp, #80]
   3c8bc:	b	3d160 <__asan_cplus_demangle_type@@Base+0xacc>
   3c8c0:	ldr	x0, [sp, #40]
   3c8c4:	bl	3d9d0 <__asan_cplus_demangle_type@@Base+0x133c>
   3c8c8:	str	x0, [sp, #80]
   3c8cc:	b	3d160 <__asan_cplus_demangle_type@@Base+0xacc>
   3c8d0:	ldr	x0, [sp, #40]
   3c8d4:	bl	3dc3c <__asan_cplus_demangle_type@@Base+0x15a8>
   3c8d8:	str	x0, [sp, #80]
   3c8dc:	b	3d160 <__asan_cplus_demangle_type@@Base+0xacc>
   3c8e0:	ldr	x0, [sp, #40]
   3c8e4:	bl	3dd84 <__asan_cplus_demangle_type@@Base+0x16f0>
   3c8e8:	str	x0, [sp, #80]
   3c8ec:	ldr	x0, [sp, #40]
   3c8f0:	ldr	x0, [x0, #24]
   3c8f4:	ldrb	w0, [x0]
   3c8f8:	cmp	w0, #0x49
   3c8fc:	b.ne	3d154 <__asan_cplus_demangle_type@@Base+0xac0>  // b.any
   3c900:	ldr	x0, [sp, #40]
   3c904:	ldr	w0, [x0, #80]
   3c908:	cmp	w0, #0x0
   3c90c:	b.ne	3c958 <__asan_cplus_demangle_type@@Base+0x2c4>  // b.any
   3c910:	ldr	x0, [sp, #80]
   3c914:	mov	x1, x0
   3c918:	ldr	x0, [sp, #40]
   3c91c:	bl	3f4bc <__asan_cplus_demangle_type@@Base+0x2e28>
   3c920:	cmp	w0, #0x0
   3c924:	b.ne	3c930 <__asan_cplus_demangle_type@@Base+0x29c>  // b.any
   3c928:	mov	x0, #0x0                   	// #0
   3c92c:	b	3d190 <__asan_cplus_demangle_type@@Base+0xafc>
   3c930:	ldr	x19, [sp, #80]
   3c934:	ldr	x0, [sp, #40]
   3c938:	bl	3de08 <__asan_cplus_demangle_type@@Base+0x1774>
   3c93c:	mov	x3, x0
   3c940:	mov	x2, x19
   3c944:	mov	w1, #0x4                   	// #4
   3c948:	ldr	x0, [sp, #40]
   3c94c:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3c950:	str	x0, [sp, #80]
   3c954:	b	3d154 <__asan_cplus_demangle_type@@Base+0xac0>
   3c958:	add	x0, sp, #0x38
   3c95c:	mov	x1, x0
   3c960:	ldr	x0, [sp, #40]
   3c964:	bl	3f8fc <__asan_cplus_demangle_type@@Base+0x3268>
   3c968:	ldr	x0, [sp, #40]
   3c96c:	bl	3de08 <__asan_cplus_demangle_type@@Base+0x1774>
   3c970:	str	x0, [sp, #112]
   3c974:	ldr	x0, [sp, #40]
   3c978:	ldr	x0, [x0, #24]
   3c97c:	ldrb	w0, [x0]
   3c980:	cmp	w0, #0x49
   3c984:	b.ne	3c9c8 <__asan_cplus_demangle_type@@Base+0x334>  // b.any
   3c988:	ldr	x0, [sp, #80]
   3c98c:	mov	x1, x0
   3c990:	ldr	x0, [sp, #40]
   3c994:	bl	3f4bc <__asan_cplus_demangle_type@@Base+0x2e28>
   3c998:	cmp	w0, #0x0
   3c99c:	b.ne	3c9a8 <__asan_cplus_demangle_type@@Base+0x314>  // b.any
   3c9a0:	mov	x0, #0x0                   	// #0
   3c9a4:	b	3d190 <__asan_cplus_demangle_type@@Base+0xafc>
   3c9a8:	ldr	x0, [sp, #80]
   3c9ac:	ldr	x3, [sp, #112]
   3c9b0:	mov	x2, x0
   3c9b4:	mov	w1, #0x4                   	// #4
   3c9b8:	ldr	x0, [sp, #40]
   3c9bc:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3c9c0:	str	x0, [sp, #80]
   3c9c4:	b	3d154 <__asan_cplus_demangle_type@@Base+0xac0>
   3c9c8:	add	x0, sp, #0x38
   3c9cc:	mov	x1, x0
   3c9d0:	ldr	x0, [sp, #40]
   3c9d4:	bl	3f954 <__asan_cplus_demangle_type@@Base+0x32c0>
   3c9d8:	b	3d154 <__asan_cplus_demangle_type@@Base+0xac0>
   3c9dc:	ldr	x0, [sp, #40]
   3c9e0:	ldr	x0, [x0, #24]
   3c9e4:	ldrb	w0, [x0, #1]
   3c9e8:	strb	w0, [sp, #111]
   3c9ec:	ldrb	w0, [sp, #111]
   3c9f0:	cmp	w0, #0x2f
   3c9f4:	b.ls	3ca04 <__asan_cplus_demangle_type@@Base+0x370>  // b.plast
   3c9f8:	ldrb	w0, [sp, #111]
   3c9fc:	cmp	w0, #0x39
   3ca00:	b.ls	3ca28 <__asan_cplus_demangle_type@@Base+0x394>  // b.plast
   3ca04:	ldrb	w0, [sp, #111]
   3ca08:	cmp	w0, #0x5f
   3ca0c:	b.eq	3ca28 <__asan_cplus_demangle_type@@Base+0x394>  // b.none
   3ca10:	ldrb	w0, [sp, #111]
   3ca14:	cmp	w0, #0x40
   3ca18:	b.ls	3ca7c <__asan_cplus_demangle_type@@Base+0x3e8>  // b.plast
   3ca1c:	ldrb	w0, [sp, #111]
   3ca20:	cmp	w0, #0x5a
   3ca24:	b.hi	3ca7c <__asan_cplus_demangle_type@@Base+0x3e8>  // b.pmore
   3ca28:	mov	w1, #0x0                   	// #0
   3ca2c:	ldr	x0, [sp, #40]
   3ca30:	bl	3f540 <__asan_cplus_demangle_type@@Base+0x2eac>
   3ca34:	str	x0, [sp, #80]
   3ca38:	ldr	x0, [sp, #40]
   3ca3c:	ldr	x0, [x0, #24]
   3ca40:	ldrb	w0, [x0]
   3ca44:	cmp	w0, #0x49
   3ca48:	b.ne	3ca74 <__asan_cplus_demangle_type@@Base+0x3e0>  // b.any
   3ca4c:	ldr	x19, [sp, #80]
   3ca50:	ldr	x0, [sp, #40]
   3ca54:	bl	3de08 <__asan_cplus_demangle_type@@Base+0x1774>
   3ca58:	mov	x3, x0
   3ca5c:	mov	x2, x19
   3ca60:	mov	w1, #0x4                   	// #4
   3ca64:	ldr	x0, [sp, #40]
   3ca68:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3ca6c:	str	x0, [sp, #80]
   3ca70:	b	3caac <__asan_cplus_demangle_type@@Base+0x418>
   3ca74:	str	wzr, [sp, #124]
   3ca78:	b	3caac <__asan_cplus_demangle_type@@Base+0x418>
   3ca7c:	ldr	x0, [sp, #40]
   3ca80:	bl	3d9b4 <__asan_cplus_demangle_type@@Base+0x1320>
   3ca84:	str	x0, [sp, #80]
   3ca88:	ldr	x0, [sp, #80]
   3ca8c:	cmp	x0, #0x0
   3ca90:	b.eq	3d15c <__asan_cplus_demangle_type@@Base+0xac8>  // b.none
   3ca94:	ldr	x0, [sp, #80]
   3ca98:	ldr	w0, [x0]
   3ca9c:	cmp	w0, #0x18
   3caa0:	b.ne	3d15c <__asan_cplus_demangle_type@@Base+0xac8>  // b.any
   3caa4:	str	wzr, [sp, #124]
   3caa8:	b	3d15c <__asan_cplus_demangle_type@@Base+0xac8>
   3caac:	b	3d15c <__asan_cplus_demangle_type@@Base+0xac8>
   3cab0:	ldr	x0, [sp, #40]
   3cab4:	ldr	x0, [x0, #24]
   3cab8:	add	x1, x0, #0x1
   3cabc:	ldr	x0, [sp, #40]
   3cac0:	str	x1, [x0, #24]
   3cac4:	ldr	x0, [sp, #40]
   3cac8:	bl	3c694 <__asan_cplus_demangle_type@@Base>
   3cacc:	mov	x3, #0x0                   	// #0
   3cad0:	mov	x2, x0
   3cad4:	mov	w1, #0x24                  	// #36
   3cad8:	ldr	x0, [sp, #40]
   3cadc:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3cae0:	str	x0, [sp, #80]
   3cae4:	b	3d160 <__asan_cplus_demangle_type@@Base+0xacc>
   3cae8:	ldr	x0, [sp, #40]
   3caec:	ldr	x0, [x0, #24]
   3caf0:	add	x1, x0, #0x1
   3caf4:	ldr	x0, [sp, #40]
   3caf8:	str	x1, [x0, #24]
   3cafc:	ldr	x0, [sp, #40]
   3cb00:	bl	3c694 <__asan_cplus_demangle_type@@Base>
   3cb04:	mov	x3, #0x0                   	// #0
   3cb08:	mov	x2, x0
   3cb0c:	mov	w1, #0x22                  	// #34
   3cb10:	ldr	x0, [sp, #40]
   3cb14:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3cb18:	str	x0, [sp, #80]
   3cb1c:	b	3d160 <__asan_cplus_demangle_type@@Base+0xacc>
   3cb20:	ldr	x0, [sp, #40]
   3cb24:	ldr	x0, [x0, #24]
   3cb28:	add	x1, x0, #0x1
   3cb2c:	ldr	x0, [sp, #40]
   3cb30:	str	x1, [x0, #24]
   3cb34:	ldr	x0, [sp, #40]
   3cb38:	bl	3c694 <__asan_cplus_demangle_type@@Base>
   3cb3c:	mov	x3, #0x0                   	// #0
   3cb40:	mov	x2, x0
   3cb44:	mov	w1, #0x23                  	// #35
   3cb48:	ldr	x0, [sp, #40]
   3cb4c:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3cb50:	str	x0, [sp, #80]
   3cb54:	b	3d160 <__asan_cplus_demangle_type@@Base+0xacc>
   3cb58:	ldr	x0, [sp, #40]
   3cb5c:	ldr	x0, [x0, #24]
   3cb60:	add	x1, x0, #0x1
   3cb64:	ldr	x0, [sp, #40]
   3cb68:	str	x1, [x0, #24]
   3cb6c:	ldr	x0, [sp, #40]
   3cb70:	bl	3c694 <__asan_cplus_demangle_type@@Base>
   3cb74:	mov	x3, #0x0                   	// #0
   3cb78:	mov	x2, x0
   3cb7c:	mov	w1, #0x25                  	// #37
   3cb80:	ldr	x0, [sp, #40]
   3cb84:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3cb88:	str	x0, [sp, #80]
   3cb8c:	b	3d160 <__asan_cplus_demangle_type@@Base+0xacc>
   3cb90:	ldr	x0, [sp, #40]
   3cb94:	ldr	x0, [x0, #24]
   3cb98:	add	x1, x0, #0x1
   3cb9c:	ldr	x0, [sp, #40]
   3cba0:	str	x1, [x0, #24]
   3cba4:	ldr	x0, [sp, #40]
   3cba8:	bl	3c694 <__asan_cplus_demangle_type@@Base>
   3cbac:	mov	x3, #0x0                   	// #0
   3cbb0:	mov	x2, x0
   3cbb4:	mov	w1, #0x26                  	// #38
   3cbb8:	ldr	x0, [sp, #40]
   3cbbc:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3cbc0:	str	x0, [sp, #80]
   3cbc4:	b	3d160 <__asan_cplus_demangle_type@@Base+0xacc>
   3cbc8:	ldr	x0, [sp, #40]
   3cbcc:	ldr	x0, [x0, #24]
   3cbd0:	add	x1, x0, #0x1
   3cbd4:	ldr	x0, [sp, #40]
   3cbd8:	str	x1, [x0, #24]
   3cbdc:	ldr	x0, [sp, #40]
   3cbe0:	bl	3b384 <__asan_cplus_demangle_mangled_name@@Base+0xc60>
   3cbe4:	str	x0, [sp, #80]
   3cbe8:	ldr	x0, [sp, #40]
   3cbec:	ldr	x0, [x0, #24]
   3cbf0:	ldrb	w0, [x0]
   3cbf4:	cmp	w0, #0x49
   3cbf8:	b.ne	3cc20 <__asan_cplus_demangle_type@@Base+0x58c>  // b.any
   3cbfc:	ldr	x19, [sp, #80]
   3cc00:	ldr	x0, [sp, #40]
   3cc04:	bl	3de08 <__asan_cplus_demangle_type@@Base+0x1774>
   3cc08:	mov	x3, x0
   3cc0c:	mov	x2, x19
   3cc10:	mov	w1, #0x4                   	// #4
   3cc14:	ldr	x0, [sp, #40]
   3cc18:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3cc1c:	str	x0, [sp, #80]
   3cc20:	ldr	x0, [sp, #40]
   3cc24:	bl	3c694 <__asan_cplus_demangle_type@@Base>
   3cc28:	mov	x1, x0
   3cc2c:	ldr	x0, [sp, #80]
   3cc30:	mov	x3, x0
   3cc34:	mov	x2, x1
   3cc38:	mov	w1, #0x21                  	// #33
   3cc3c:	ldr	x0, [sp, #40]
   3cc40:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3cc44:	str	x0, [sp, #80]
   3cc48:	b	3d160 <__asan_cplus_demangle_type@@Base+0xacc>
   3cc4c:	str	wzr, [sp, #124]
   3cc50:	ldr	x0, [sp, #40]
   3cc54:	ldr	x0, [x0, #24]
   3cc58:	add	x1, x0, #0x1
   3cc5c:	ldr	x0, [sp, #40]
   3cc60:	str	x1, [x0, #24]
   3cc64:	ldr	x0, [sp, #40]
   3cc68:	ldr	x0, [x0, #24]
   3cc6c:	ldrb	w0, [x0]
   3cc70:	cmp	w0, #0x0
   3cc74:	b.eq	3cc94 <__asan_cplus_demangle_type@@Base+0x600>  // b.none
   3cc78:	ldr	x0, [sp, #40]
   3cc7c:	ldr	x0, [x0, #24]
   3cc80:	add	x2, x0, #0x1
   3cc84:	ldr	x1, [sp, #40]
   3cc88:	str	x2, [x1, #24]
   3cc8c:	ldrb	w0, [x0]
   3cc90:	b	3cc98 <__asan_cplus_demangle_type@@Base+0x604>
   3cc94:	mov	w0, #0x0                   	// #0
   3cc98:	strb	w0, [sp, #123]
   3cc9c:	ldrb	w0, [sp, #123]
   3cca0:	cmp	w0, #0x76
   3cca4:	b.eq	3d0ec <__asan_cplus_demangle_type@@Base+0xa58>  // b.none
   3cca8:	cmp	w0, #0x76
   3ccac:	b.gt	3d140 <__asan_cplus_demangle_type@@Base+0xaac>
   3ccb0:	cmp	w0, #0x75
   3ccb4:	b.eq	3cf44 <__asan_cplus_demangle_type@@Base+0x8b0>  // b.none
   3ccb8:	cmp	w0, #0x75
   3ccbc:	b.gt	3d140 <__asan_cplus_demangle_type@@Base+0xaac>
   3ccc0:	cmp	w0, #0x74
   3ccc4:	b.eq	3cd80 <__asan_cplus_demangle_type@@Base+0x6ec>  // b.none
   3ccc8:	cmp	w0, #0x74
   3cccc:	b.gt	3d140 <__asan_cplus_demangle_type@@Base+0xaac>
   3ccd0:	cmp	w0, #0x73
   3ccd4:	b.eq	3cf80 <__asan_cplus_demangle_type@@Base+0x8ec>  // b.none
   3ccd8:	cmp	w0, #0x73
   3ccdc:	b.gt	3d140 <__asan_cplus_demangle_type@@Base+0xaac>
   3cce0:	cmp	w0, #0x70
   3cce4:	b.eq	3cdf0 <__asan_cplus_demangle_type@@Base+0x75c>  // b.none
   3cce8:	cmp	w0, #0x70
   3ccec:	b.gt	3d140 <__asan_cplus_demangle_type@@Base+0xaac>
   3ccf0:	cmp	w0, #0x6e
   3ccf4:	b.eq	3d104 <__asan_cplus_demangle_type@@Base+0xa70>  // b.none
   3ccf8:	cmp	w0, #0x6e
   3ccfc:	b.gt	3d140 <__asan_cplus_demangle_type@@Base+0xaac>
   3cd00:	cmp	w0, #0x69
   3cd04:	b.eq	3cfbc <__asan_cplus_demangle_type@@Base+0x928>  // b.none
   3cd08:	cmp	w0, #0x69
   3cd0c:	b.gt	3d140 <__asan_cplus_demangle_type@@Base+0xaac>
   3cd10:	cmp	w0, #0x68
   3cd14:	b.eq	3cf08 <__asan_cplus_demangle_type@@Base+0x874>  // b.none
   3cd18:	cmp	w0, #0x68
   3cd1c:	b.gt	3d140 <__asan_cplus_demangle_type@@Base+0xaac>
   3cd20:	cmp	w0, #0x66
   3cd24:	b.eq	3ce54 <__asan_cplus_demangle_type@@Base+0x7c0>  // b.none
   3cd28:	cmp	w0, #0x66
   3cd2c:	b.gt	3d140 <__asan_cplus_demangle_type@@Base+0xaac>
   3cd30:	cmp	w0, #0x65
   3cd34:	b.eq	3cecc <__asan_cplus_demangle_type@@Base+0x838>  // b.none
   3cd38:	cmp	w0, #0x65
   3cd3c:	b.gt	3d140 <__asan_cplus_demangle_type@@Base+0xaac>
   3cd40:	cmp	w0, #0x64
   3cd44:	b.eq	3ce90 <__asan_cplus_demangle_type@@Base+0x7fc>  // b.none
   3cd48:	cmp	w0, #0x64
   3cd4c:	b.gt	3d140 <__asan_cplus_demangle_type@@Base+0xaac>
   3cd50:	cmp	w0, #0x63
   3cd54:	b.eq	3ce38 <__asan_cplus_demangle_type@@Base+0x7a4>  // b.none
   3cd58:	cmp	w0, #0x63
   3cd5c:	b.gt	3d140 <__asan_cplus_demangle_type@@Base+0xaac>
   3cd60:	cmp	w0, #0x61
   3cd64:	b.eq	3ce1c <__asan_cplus_demangle_type@@Base+0x788>  // b.none
   3cd68:	cmp	w0, #0x61
   3cd6c:	b.gt	3d140 <__asan_cplus_demangle_type@@Base+0xaac>
   3cd70:	cmp	w0, #0x46
   3cd74:	b.eq	3cff8 <__asan_cplus_demangle_type@@Base+0x964>  // b.none
   3cd78:	cmp	w0, #0x54
   3cd7c:	b.ne	3d140 <__asan_cplus_demangle_type@@Base+0xaac>  // b.any
   3cd80:	ldr	x0, [sp, #40]
   3cd84:	bl	3eb48 <__asan_cplus_demangle_type@@Base+0x24b4>
   3cd88:	mov	x3, #0x0                   	// #0
   3cd8c:	mov	x2, x0
   3cd90:	mov	w1, #0x43                  	// #67
   3cd94:	ldr	x0, [sp, #40]
   3cd98:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3cd9c:	str	x0, [sp, #80]
   3cda0:	ldr	x0, [sp, #80]
   3cda4:	cmp	x0, #0x0
   3cda8:	b.eq	3cde4 <__asan_cplus_demangle_type@@Base+0x750>  // b.none
   3cdac:	ldr	x0, [sp, #40]
   3cdb0:	ldr	x0, [x0, #24]
   3cdb4:	ldrb	w0, [x0]
   3cdb8:	cmp	w0, #0x0
   3cdbc:	b.eq	3cde0 <__asan_cplus_demangle_type@@Base+0x74c>  // b.none
   3cdc0:	ldr	x0, [sp, #40]
   3cdc4:	ldr	x0, [x0, #24]
   3cdc8:	add	x2, x0, #0x1
   3cdcc:	ldr	x1, [sp, #40]
   3cdd0:	str	x2, [x1, #24]
   3cdd4:	ldrb	w0, [x0]
   3cdd8:	cmp	w0, #0x45
   3cddc:	b.eq	3cde4 <__asan_cplus_demangle_type@@Base+0x750>  // b.none
   3cde0:	str	xzr, [sp, #80]
   3cde4:	mov	w0, #0x1                   	// #1
   3cde8:	str	w0, [sp, #124]
   3cdec:	b	3d148 <__asan_cplus_demangle_type@@Base+0xab4>
   3cdf0:	ldr	x0, [sp, #40]
   3cdf4:	bl	3c694 <__asan_cplus_demangle_type@@Base>
   3cdf8:	mov	x3, #0x0                   	// #0
   3cdfc:	mov	x2, x0
   3ce00:	mov	w1, #0x4b                  	// #75
   3ce04:	ldr	x0, [sp, #40]
   3ce08:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3ce0c:	str	x0, [sp, #80]
   3ce10:	mov	w0, #0x1                   	// #1
   3ce14:	str	w0, [sp, #124]
   3ce18:	b	3d148 <__asan_cplus_demangle_type@@Base+0xab4>
   3ce1c:	mov	w2, #0x4                   	// #4
   3ce20:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   3ce24:	add	x1, x0, #0xc68
   3ce28:	ldr	x0, [sp, #40]
   3ce2c:	bl	3a3f8 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   3ce30:	str	x0, [sp, #80]
   3ce34:	b	3d148 <__asan_cplus_demangle_type@@Base+0xab4>
   3ce38:	mov	w2, #0xe                   	// #14
   3ce3c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   3ce40:	add	x1, x0, #0xc70
   3ce44:	ldr	x0, [sp, #40]
   3ce48:	bl	3a3f8 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   3ce4c:	str	x0, [sp, #80]
   3ce50:	b	3d148 <__asan_cplus_demangle_type@@Base+0xab4>
   3ce54:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   3ce58:	ldr	x0, [x0, #3912]
   3ce5c:	add	x1, x0, #0x340
   3ce60:	ldr	x0, [sp, #40]
   3ce64:	bl	3a444 <__asan_cplus_demangle_fill_dtor@@Base+0x2bc>
   3ce68:	str	x0, [sp, #80]
   3ce6c:	ldr	x0, [sp, #40]
   3ce70:	ldr	w1, [x0, #72]
   3ce74:	ldr	x0, [sp, #80]
   3ce78:	ldr	x0, [x0, #8]
   3ce7c:	ldr	w0, [x0, #8]
   3ce80:	add	w1, w1, w0
   3ce84:	ldr	x0, [sp, #40]
   3ce88:	str	w1, [x0, #72]
   3ce8c:	b	3d148 <__asan_cplus_demangle_type@@Base+0xab4>
   3ce90:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   3ce94:	ldr	x0, [x0, #3912]
   3ce98:	add	x1, x0, #0x360
   3ce9c:	ldr	x0, [sp, #40]
   3cea0:	bl	3a444 <__asan_cplus_demangle_fill_dtor@@Base+0x2bc>
   3cea4:	str	x0, [sp, #80]
   3cea8:	ldr	x0, [sp, #40]
   3ceac:	ldr	w1, [x0, #72]
   3ceb0:	ldr	x0, [sp, #80]
   3ceb4:	ldr	x0, [x0, #8]
   3ceb8:	ldr	w0, [x0, #8]
   3cebc:	add	w1, w1, w0
   3cec0:	ldr	x0, [sp, #40]
   3cec4:	str	w1, [x0, #72]
   3cec8:	b	3d148 <__asan_cplus_demangle_type@@Base+0xab4>
   3cecc:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   3ced0:	ldr	x0, [x0, #3912]
   3ced4:	add	x1, x0, #0x380
   3ced8:	ldr	x0, [sp, #40]
   3cedc:	bl	3a444 <__asan_cplus_demangle_fill_dtor@@Base+0x2bc>
   3cee0:	str	x0, [sp, #80]
   3cee4:	ldr	x0, [sp, #40]
   3cee8:	ldr	w1, [x0, #72]
   3ceec:	ldr	x0, [sp, #80]
   3cef0:	ldr	x0, [x0, #8]
   3cef4:	ldr	w0, [x0, #8]
   3cef8:	add	w1, w1, w0
   3cefc:	ldr	x0, [sp, #40]
   3cf00:	str	w1, [x0, #72]
   3cf04:	b	3d148 <__asan_cplus_demangle_type@@Base+0xab4>
   3cf08:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   3cf0c:	ldr	x0, [x0, #3912]
   3cf10:	add	x1, x0, #0x3a0
   3cf14:	ldr	x0, [sp, #40]
   3cf18:	bl	3a444 <__asan_cplus_demangle_fill_dtor@@Base+0x2bc>
   3cf1c:	str	x0, [sp, #80]
   3cf20:	ldr	x0, [sp, #40]
   3cf24:	ldr	w1, [x0, #72]
   3cf28:	ldr	x0, [sp, #80]
   3cf2c:	ldr	x0, [x0, #8]
   3cf30:	ldr	w0, [x0, #8]
   3cf34:	add	w1, w1, w0
   3cf38:	ldr	x0, [sp, #40]
   3cf3c:	str	w1, [x0, #72]
   3cf40:	b	3d148 <__asan_cplus_demangle_type@@Base+0xab4>
   3cf44:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   3cf48:	ldr	x0, [x0, #3912]
   3cf4c:	add	x1, x0, #0x3c0
   3cf50:	ldr	x0, [sp, #40]
   3cf54:	bl	3a444 <__asan_cplus_demangle_fill_dtor@@Base+0x2bc>
   3cf58:	str	x0, [sp, #80]
   3cf5c:	ldr	x0, [sp, #40]
   3cf60:	ldr	w1, [x0, #72]
   3cf64:	ldr	x0, [sp, #80]
   3cf68:	ldr	x0, [x0, #8]
   3cf6c:	ldr	w0, [x0, #8]
   3cf70:	add	w1, w1, w0
   3cf74:	ldr	x0, [sp, #40]
   3cf78:	str	w1, [x0, #72]
   3cf7c:	b	3d148 <__asan_cplus_demangle_type@@Base+0xab4>
   3cf80:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   3cf84:	ldr	x0, [x0, #3912]
   3cf88:	add	x1, x0, #0x3e0
   3cf8c:	ldr	x0, [sp, #40]
   3cf90:	bl	3a444 <__asan_cplus_demangle_fill_dtor@@Base+0x2bc>
   3cf94:	str	x0, [sp, #80]
   3cf98:	ldr	x0, [sp, #40]
   3cf9c:	ldr	w1, [x0, #72]
   3cfa0:	ldr	x0, [sp, #80]
   3cfa4:	ldr	x0, [x0, #8]
   3cfa8:	ldr	w0, [x0, #8]
   3cfac:	add	w1, w1, w0
   3cfb0:	ldr	x0, [sp, #40]
   3cfb4:	str	w1, [x0, #72]
   3cfb8:	b	3d148 <__asan_cplus_demangle_type@@Base+0xab4>
   3cfbc:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   3cfc0:	ldr	x0, [x0, #3912]
   3cfc4:	add	x1, x0, #0x400
   3cfc8:	ldr	x0, [sp, #40]
   3cfcc:	bl	3a444 <__asan_cplus_demangle_fill_dtor@@Base+0x2bc>
   3cfd0:	str	x0, [sp, #80]
   3cfd4:	ldr	x0, [sp, #40]
   3cfd8:	ldr	w1, [x0, #72]
   3cfdc:	ldr	x0, [sp, #80]
   3cfe0:	ldr	x0, [x0, #8]
   3cfe4:	ldr	w0, [x0, #8]
   3cfe8:	add	w1, w1, w0
   3cfec:	ldr	x0, [sp, #40]
   3cff0:	str	w1, [x0, #72]
   3cff4:	b	3d148 <__asan_cplus_demangle_type@@Base+0xab4>
   3cff8:	ldr	x0, [sp, #40]
   3cffc:	bl	3a208 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3d000:	str	x0, [sp, #80]
   3d004:	ldr	x0, [sp, #80]
   3d008:	mov	w1, #0x2c                  	// #44
   3d00c:	str	w1, [x0]
   3d010:	ldr	x0, [sp, #40]
   3d014:	ldr	x0, [x0, #24]
   3d018:	ldrb	w0, [x0]
   3d01c:	cmp	w0, #0x2f
   3d020:	b.ls	3d040 <__asan_cplus_demangle_type@@Base+0x9ac>  // b.plast
   3d024:	ldr	x0, [sp, #40]
   3d028:	ldr	x0, [x0, #24]
   3d02c:	ldrb	w0, [x0]
   3d030:	cmp	w0, #0x39
   3d034:	b.hi	3d040 <__asan_cplus_demangle_type@@Base+0x9ac>  // b.pmore
   3d038:	mov	w1, #0x1                   	// #1
   3d03c:	b	3d044 <__asan_cplus_demangle_type@@Base+0x9b0>
   3d040:	mov	w1, #0x0                   	// #0
   3d044:	ldr	x0, [sp, #80]
   3d048:	sxth	w1, w1
   3d04c:	strh	w1, [x0, #16]
   3d050:	ldrsh	w0, [x0, #16]
   3d054:	cmp	w0, #0x0
   3d058:	b.eq	3d064 <__asan_cplus_demangle_type@@Base+0x9d0>  // b.none
   3d05c:	ldr	x0, [sp, #40]
   3d060:	bl	3b3d8 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   3d064:	ldr	x19, [sp, #80]
   3d068:	ldr	x0, [sp, #40]
   3d06c:	bl	3c694 <__asan_cplus_demangle_type@@Base>
   3d070:	str	x0, [x19, #8]
   3d074:	ldr	x0, [sp, #80]
   3d078:	ldr	x0, [x0, #8]
   3d07c:	cmp	x0, #0x0
   3d080:	b.ne	3d08c <__asan_cplus_demangle_type@@Base+0x9f8>  // b.any
   3d084:	mov	x0, #0x0                   	// #0
   3d088:	b	3d190 <__asan_cplus_demangle_type@@Base+0xafc>
   3d08c:	ldr	x0, [sp, #40]
   3d090:	bl	3b3d8 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   3d094:	ldr	x0, [sp, #40]
   3d098:	ldr	x0, [x0, #24]
   3d09c:	ldrb	w0, [x0]
   3d0a0:	cmp	w0, #0x0
   3d0a4:	b.eq	3d0c4 <__asan_cplus_demangle_type@@Base+0xa30>  // b.none
   3d0a8:	ldr	x0, [sp, #40]
   3d0ac:	ldr	x0, [x0, #24]
   3d0b0:	add	x2, x0, #0x1
   3d0b4:	ldr	x1, [sp, #40]
   3d0b8:	str	x2, [x1, #24]
   3d0bc:	ldrb	w0, [x0]
   3d0c0:	b	3d0c8 <__asan_cplus_demangle_type@@Base+0xa34>
   3d0c4:	mov	w0, #0x0                   	// #0
   3d0c8:	strb	w0, [sp, #123]
   3d0cc:	ldrb	w0, [sp, #123]
   3d0d0:	cmp	w0, #0x73
   3d0d4:	cset	w0, eq  // eq = none
   3d0d8:	and	w1, w0, #0xff
   3d0dc:	ldr	x0, [sp, #80]
   3d0e0:	sxth	w1, w1
   3d0e4:	strh	w1, [x0, #18]
   3d0e8:	b	3d148 <__asan_cplus_demangle_type@@Base+0xab4>
   3d0ec:	ldr	x0, [sp, #40]
   3d0f0:	bl	3db68 <__asan_cplus_demangle_type@@Base+0x14d4>
   3d0f4:	str	x0, [sp, #80]
   3d0f8:	mov	w0, #0x1                   	// #1
   3d0fc:	str	w0, [sp, #124]
   3d100:	b	3d148 <__asan_cplus_demangle_type@@Base+0xab4>
   3d104:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   3d108:	ldr	x0, [x0, #3912]
   3d10c:	add	x1, x0, #0x420
   3d110:	ldr	x0, [sp, #40]
   3d114:	bl	3a444 <__asan_cplus_demangle_fill_dtor@@Base+0x2bc>
   3d118:	str	x0, [sp, #80]
   3d11c:	ldr	x0, [sp, #40]
   3d120:	ldr	w1, [x0, #72]
   3d124:	ldr	x0, [sp, #80]
   3d128:	ldr	x0, [x0, #8]
   3d12c:	ldr	w0, [x0, #8]
   3d130:	add	w1, w1, w0
   3d134:	ldr	x0, [sp, #40]
   3d138:	str	w1, [x0, #72]
   3d13c:	b	3d148 <__asan_cplus_demangle_type@@Base+0xab4>
   3d140:	mov	x0, #0x0                   	// #0
   3d144:	b	3d190 <__asan_cplus_demangle_type@@Base+0xafc>
   3d148:	b	3d160 <__asan_cplus_demangle_type@@Base+0xacc>
   3d14c:	mov	x0, #0x0                   	// #0
   3d150:	b	3d190 <__asan_cplus_demangle_type@@Base+0xafc>
   3d154:	nop
   3d158:	b	3d160 <__asan_cplus_demangle_type@@Base+0xacc>
   3d15c:	nop
   3d160:	ldr	w0, [sp, #124]
   3d164:	cmp	w0, #0x0
   3d168:	b.eq	3d18c <__asan_cplus_demangle_type@@Base+0xaf8>  // b.none
   3d16c:	ldr	x0, [sp, #80]
   3d170:	mov	x1, x0
   3d174:	ldr	x0, [sp, #40]
   3d178:	bl	3f4bc <__asan_cplus_demangle_type@@Base+0x2e28>
   3d17c:	cmp	w0, #0x0
   3d180:	b.ne	3d18c <__asan_cplus_demangle_type@@Base+0xaf8>  // b.any
   3d184:	mov	x0, #0x0                   	// #0
   3d188:	b	3d190 <__asan_cplus_demangle_type@@Base+0xafc>
   3d18c:	ldr	x0, [sp, #80]
   3d190:	ldr	x19, [sp, #16]
   3d194:	ldp	x29, x30, [sp], #128
   3d198:	ret
   3d19c:	stp	x29, x30, [sp, #-80]!
   3d1a0:	mov	x29, sp
   3d1a4:	str	x0, [sp, #40]
   3d1a8:	str	x1, [sp, #32]
   3d1ac:	str	w2, [sp, #28]
   3d1b0:	ldr	x0, [sp, #32]
   3d1b4:	str	x0, [sp, #72]
   3d1b8:	ldr	x0, [sp, #40]
   3d1bc:	ldr	x0, [x0, #24]
   3d1c0:	ldrb	w0, [x0]
   3d1c4:	strb	w0, [sp, #71]
   3d1c8:	b	3d4b4 <__asan_cplus_demangle_type@@Base+0xe20>
   3d1cc:	str	xzr, [sp, #56]
   3d1d0:	ldr	x0, [sp, #40]
   3d1d4:	ldr	x0, [x0, #24]
   3d1d8:	add	x1, x0, #0x1
   3d1dc:	ldr	x0, [sp, #40]
   3d1e0:	str	x1, [x0, #24]
   3d1e4:	ldrb	w0, [sp, #71]
   3d1e8:	cmp	w0, #0x72
   3d1ec:	b.ne	3d228 <__asan_cplus_demangle_type@@Base+0xb94>  // b.any
   3d1f0:	ldr	w0, [sp, #28]
   3d1f4:	cmp	w0, #0x0
   3d1f8:	b.eq	3d204 <__asan_cplus_demangle_type@@Base+0xb70>  // b.none
   3d1fc:	mov	w0, #0x1c                  	// #28
   3d200:	b	3d208 <__asan_cplus_demangle_type@@Base+0xb74>
   3d204:	mov	w0, #0x19                  	// #25
   3d208:	str	w0, [sp, #64]
   3d20c:	ldr	x0, [sp, #40]
   3d210:	ldr	w0, [x0, #72]
   3d214:	add	w0, w0, #0x9
   3d218:	mov	w1, w0
   3d21c:	ldr	x0, [sp, #40]
   3d220:	str	w1, [x0, #72]
   3d224:	b	3d45c <__asan_cplus_demangle_type@@Base+0xdc8>
   3d228:	ldrb	w0, [sp, #71]
   3d22c:	cmp	w0, #0x56
   3d230:	b.ne	3d26c <__asan_cplus_demangle_type@@Base+0xbd8>  // b.any
   3d234:	ldr	w0, [sp, #28]
   3d238:	cmp	w0, #0x0
   3d23c:	b.eq	3d248 <__asan_cplus_demangle_type@@Base+0xbb4>  // b.none
   3d240:	mov	w0, #0x1d                  	// #29
   3d244:	b	3d24c <__asan_cplus_demangle_type@@Base+0xbb8>
   3d248:	mov	w0, #0x1a                  	// #26
   3d24c:	str	w0, [sp, #64]
   3d250:	ldr	x0, [sp, #40]
   3d254:	ldr	w0, [x0, #72]
   3d258:	add	w0, w0, #0x9
   3d25c:	mov	w1, w0
   3d260:	ldr	x0, [sp, #40]
   3d264:	str	w1, [x0, #72]
   3d268:	b	3d45c <__asan_cplus_demangle_type@@Base+0xdc8>
   3d26c:	ldrb	w0, [sp, #71]
   3d270:	cmp	w0, #0x4b
   3d274:	b.ne	3d2b0 <__asan_cplus_demangle_type@@Base+0xc1c>  // b.any
   3d278:	ldr	w0, [sp, #28]
   3d27c:	cmp	w0, #0x0
   3d280:	b.eq	3d28c <__asan_cplus_demangle_type@@Base+0xbf8>  // b.none
   3d284:	mov	w0, #0x1e                  	// #30
   3d288:	b	3d290 <__asan_cplus_demangle_type@@Base+0xbfc>
   3d28c:	mov	w0, #0x1b                  	// #27
   3d290:	str	w0, [sp, #64]
   3d294:	ldr	x0, [sp, #40]
   3d298:	ldr	w0, [x0, #72]
   3d29c:	add	w0, w0, #0x6
   3d2a0:	mov	w1, w0
   3d2a4:	ldr	x0, [sp, #40]
   3d2a8:	str	w1, [x0, #72]
   3d2ac:	b	3d45c <__asan_cplus_demangle_type@@Base+0xdc8>
   3d2b0:	ldr	x0, [sp, #40]
   3d2b4:	ldr	x0, [x0, #24]
   3d2b8:	ldrb	w0, [x0]
   3d2bc:	cmp	w0, #0x0
   3d2c0:	b.eq	3d2e0 <__asan_cplus_demangle_type@@Base+0xc4c>  // b.none
   3d2c4:	ldr	x0, [sp, #40]
   3d2c8:	ldr	x0, [x0, #24]
   3d2cc:	add	x2, x0, #0x1
   3d2d0:	ldr	x1, [sp, #40]
   3d2d4:	str	x2, [x1, #24]
   3d2d8:	ldrb	w0, [x0]
   3d2dc:	b	3d2e4 <__asan_cplus_demangle_type@@Base+0xc50>
   3d2e0:	mov	w0, #0x0                   	// #0
   3d2e4:	strb	w0, [sp, #71]
   3d2e8:	ldrb	w0, [sp, #71]
   3d2ec:	cmp	w0, #0x78
   3d2f0:	b.ne	3d318 <__asan_cplus_demangle_type@@Base+0xc84>  // b.any
   3d2f4:	mov	w0, #0x4d                  	// #77
   3d2f8:	str	w0, [sp, #64]
   3d2fc:	ldr	x0, [sp, #40]
   3d300:	ldr	w0, [x0, #72]
   3d304:	add	w0, w0, #0x11
   3d308:	mov	w1, w0
   3d30c:	ldr	x0, [sp, #40]
   3d310:	str	w1, [x0, #72]
   3d314:	b	3d45c <__asan_cplus_demangle_type@@Base+0xdc8>
   3d318:	ldrb	w0, [sp, #71]
   3d31c:	cmp	w0, #0x6f
   3d320:	b.eq	3d330 <__asan_cplus_demangle_type@@Base+0xc9c>  // b.none
   3d324:	ldrb	w0, [sp, #71]
   3d328:	cmp	w0, #0x4f
   3d32c:	b.ne	3d3c0 <__asan_cplus_demangle_type@@Base+0xd2c>  // b.any
   3d330:	mov	w0, #0x4f                  	// #79
   3d334:	str	w0, [sp, #64]
   3d338:	ldr	x0, [sp, #40]
   3d33c:	ldr	w0, [x0, #72]
   3d340:	add	w0, w0, #0x9
   3d344:	mov	w1, w0
   3d348:	ldr	x0, [sp, #40]
   3d34c:	str	w1, [x0, #72]
   3d350:	ldrb	w0, [sp, #71]
   3d354:	cmp	w0, #0x4f
   3d358:	b.ne	3d458 <__asan_cplus_demangle_type@@Base+0xdc4>  // b.any
   3d35c:	ldr	x0, [sp, #40]
   3d360:	bl	3eb48 <__asan_cplus_demangle_type@@Base+0x24b4>
   3d364:	str	x0, [sp, #56]
   3d368:	ldr	x0, [sp, #56]
   3d36c:	cmp	x0, #0x0
   3d370:	b.ne	3d37c <__asan_cplus_demangle_type@@Base+0xce8>  // b.any
   3d374:	mov	x0, #0x0                   	// #0
   3d378:	b	3d574 <__asan_cplus_demangle_type@@Base+0xee0>
   3d37c:	ldr	x0, [sp, #40]
   3d380:	ldr	x0, [x0, #24]
   3d384:	ldrb	w0, [x0]
   3d388:	cmp	w0, #0x45
   3d38c:	b.ne	3d3ac <__asan_cplus_demangle_type@@Base+0xd18>  // b.any
   3d390:	ldr	x0, [sp, #40]
   3d394:	ldr	x0, [x0, #24]
   3d398:	add	x1, x0, #0x1
   3d39c:	ldr	x0, [sp, #40]
   3d3a0:	str	x1, [x0, #24]
   3d3a4:	mov	w0, #0x0                   	// #0
   3d3a8:	b	3d3b0 <__asan_cplus_demangle_type@@Base+0xd1c>
   3d3ac:	mov	w0, #0x1                   	// #1
   3d3b0:	cmp	w0, #0x0
   3d3b4:	b.eq	3d458 <__asan_cplus_demangle_type@@Base+0xdc4>  // b.none
   3d3b8:	mov	x0, #0x0                   	// #0
   3d3bc:	b	3d574 <__asan_cplus_demangle_type@@Base+0xee0>
   3d3c0:	ldrb	w0, [sp, #71]
   3d3c4:	cmp	w0, #0x77
   3d3c8:	b.ne	3d450 <__asan_cplus_demangle_type@@Base+0xdbc>  // b.any
   3d3cc:	mov	w0, #0x50                  	// #80
   3d3d0:	str	w0, [sp, #64]
   3d3d4:	ldr	x0, [sp, #40]
   3d3d8:	ldr	w0, [x0, #72]
   3d3dc:	add	w0, w0, #0x6
   3d3e0:	mov	w1, w0
   3d3e4:	ldr	x0, [sp, #40]
   3d3e8:	str	w1, [x0, #72]
   3d3ec:	ldr	x0, [sp, #40]
   3d3f0:	bl	3d78c <__asan_cplus_demangle_type@@Base+0x10f8>
   3d3f4:	str	x0, [sp, #56]
   3d3f8:	ldr	x0, [sp, #56]
   3d3fc:	cmp	x0, #0x0
   3d400:	b.ne	3d40c <__asan_cplus_demangle_type@@Base+0xd78>  // b.any
   3d404:	mov	x0, #0x0                   	// #0
   3d408:	b	3d574 <__asan_cplus_demangle_type@@Base+0xee0>
   3d40c:	ldr	x0, [sp, #40]
   3d410:	ldr	x0, [x0, #24]
   3d414:	ldrb	w0, [x0]
   3d418:	cmp	w0, #0x45
   3d41c:	b.ne	3d43c <__asan_cplus_demangle_type@@Base+0xda8>  // b.any
   3d420:	ldr	x0, [sp, #40]
   3d424:	ldr	x0, [x0, #24]
   3d428:	add	x1, x0, #0x1
   3d42c:	ldr	x0, [sp, #40]
   3d430:	str	x1, [x0, #24]
   3d434:	mov	w0, #0x0                   	// #0
   3d438:	b	3d440 <__asan_cplus_demangle_type@@Base+0xdac>
   3d43c:	mov	w0, #0x1                   	// #1
   3d440:	cmp	w0, #0x0
   3d444:	b.eq	3d45c <__asan_cplus_demangle_type@@Base+0xdc8>  // b.none
   3d448:	mov	x0, #0x0                   	// #0
   3d44c:	b	3d574 <__asan_cplus_demangle_type@@Base+0xee0>
   3d450:	mov	x0, #0x0                   	// #0
   3d454:	b	3d574 <__asan_cplus_demangle_type@@Base+0xee0>
   3d458:	nop
   3d45c:	ldr	x3, [sp, #56]
   3d460:	mov	x2, #0x0                   	// #0
   3d464:	ldr	w1, [sp, #64]
   3d468:	ldr	x0, [sp, #40]
   3d46c:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3d470:	mov	x1, x0
   3d474:	ldr	x0, [sp, #32]
   3d478:	str	x1, [x0]
   3d47c:	ldr	x0, [sp, #32]
   3d480:	ldr	x0, [x0]
   3d484:	cmp	x0, #0x0
   3d488:	b.ne	3d494 <__asan_cplus_demangle_type@@Base+0xe00>  // b.any
   3d48c:	mov	x0, #0x0                   	// #0
   3d490:	b	3d574 <__asan_cplus_demangle_type@@Base+0xee0>
   3d494:	ldr	x0, [sp, #32]
   3d498:	ldr	x0, [x0]
   3d49c:	add	x0, x0, #0x8
   3d4a0:	str	x0, [sp, #32]
   3d4a4:	ldr	x0, [sp, #40]
   3d4a8:	ldr	x0, [x0, #24]
   3d4ac:	ldrb	w0, [x0]
   3d4b0:	strb	w0, [sp, #71]
   3d4b4:	ldr	x0, [sp, #40]
   3d4b8:	bl	3c5f0 <__asan_cplus_demangle_mangled_name@@Base+0x1ecc>
   3d4bc:	cmp	w0, #0x0
   3d4c0:	b.ne	3d1cc <__asan_cplus_demangle_type@@Base+0xb38>  // b.any
   3d4c4:	ldr	w0, [sp, #28]
   3d4c8:	cmp	w0, #0x0
   3d4cc:	b.ne	3d570 <__asan_cplus_demangle_type@@Base+0xedc>  // b.any
   3d4d0:	ldrb	w0, [sp, #71]
   3d4d4:	cmp	w0, #0x46
   3d4d8:	b.ne	3d570 <__asan_cplus_demangle_type@@Base+0xedc>  // b.any
   3d4dc:	b	3d560 <__asan_cplus_demangle_type@@Base+0xecc>
   3d4e0:	ldr	x0, [sp, #72]
   3d4e4:	ldr	x0, [x0]
   3d4e8:	ldr	w0, [x0]
   3d4ec:	cmp	w0, #0x1b
   3d4f0:	b.eq	3d538 <__asan_cplus_demangle_type@@Base+0xea4>  // b.none
   3d4f4:	cmp	w0, #0x1b
   3d4f8:	b.hi	3d54c <__asan_cplus_demangle_type@@Base+0xeb8>  // b.pmore
   3d4fc:	cmp	w0, #0x19
   3d500:	b.eq	3d510 <__asan_cplus_demangle_type@@Base+0xe7c>  // b.none
   3d504:	cmp	w0, #0x1a
   3d508:	b.eq	3d524 <__asan_cplus_demangle_type@@Base+0xe90>  // b.none
   3d50c:	b	3d54c <__asan_cplus_demangle_type@@Base+0xeb8>
   3d510:	ldr	x0, [sp, #72]
   3d514:	ldr	x0, [x0]
   3d518:	mov	w1, #0x1c                  	// #28
   3d51c:	str	w1, [x0]
   3d520:	b	3d550 <__asan_cplus_demangle_type@@Base+0xebc>
   3d524:	ldr	x0, [sp, #72]
   3d528:	ldr	x0, [x0]
   3d52c:	mov	w1, #0x1d                  	// #29
   3d530:	str	w1, [x0]
   3d534:	b	3d550 <__asan_cplus_demangle_type@@Base+0xebc>
   3d538:	ldr	x0, [sp, #72]
   3d53c:	ldr	x0, [x0]
   3d540:	mov	w1, #0x1e                  	// #30
   3d544:	str	w1, [x0]
   3d548:	b	3d550 <__asan_cplus_demangle_type@@Base+0xebc>
   3d54c:	nop
   3d550:	ldr	x0, [sp, #72]
   3d554:	ldr	x0, [x0]
   3d558:	add	x0, x0, #0x8
   3d55c:	str	x0, [sp, #72]
   3d560:	ldr	x1, [sp, #72]
   3d564:	ldr	x0, [sp, #32]
   3d568:	cmp	x1, x0
   3d56c:	b.ne	3d4e0 <__asan_cplus_demangle_type@@Base+0xe4c>  // b.any
   3d570:	ldr	x0, [sp, #32]
   3d574:	ldp	x29, x30, [sp], #80
   3d578:	ret
   3d57c:	stp	x29, x30, [sp, #-48]!
   3d580:	mov	x29, sp
   3d584:	str	x0, [sp, #24]
   3d588:	str	x1, [sp, #16]
   3d58c:	ldr	x0, [sp, #16]
   3d590:	str	x0, [sp, #40]
   3d594:	ldr	x0, [sp, #24]
   3d598:	ldr	x0, [x0, #24]
   3d59c:	ldrb	w0, [x0]
   3d5a0:	strb	w0, [sp, #35]
   3d5a4:	ldrb	w0, [sp, #35]
   3d5a8:	cmp	w0, #0x52
   3d5ac:	b.eq	3d5bc <__asan_cplus_demangle_type@@Base+0xf28>  // b.none
   3d5b0:	ldrb	w0, [sp, #35]
   3d5b4:	cmp	w0, #0x4f
   3d5b8:	b.ne	3d638 <__asan_cplus_demangle_type@@Base+0xfa4>  // b.any
   3d5bc:	ldrb	w0, [sp, #35]
   3d5c0:	cmp	w0, #0x52
   3d5c4:	b.ne	3d5ec <__asan_cplus_demangle_type@@Base+0xf58>  // b.any
   3d5c8:	mov	w0, #0x1f                  	// #31
   3d5cc:	str	w0, [sp, #36]
   3d5d0:	ldr	x0, [sp, #24]
   3d5d4:	ldr	w0, [x0, #72]
   3d5d8:	add	w0, w0, #0x2
   3d5dc:	mov	w1, w0
   3d5e0:	ldr	x0, [sp, #24]
   3d5e4:	str	w1, [x0, #72]
   3d5e8:	b	3d60c <__asan_cplus_demangle_type@@Base+0xf78>
   3d5ec:	mov	w0, #0x20                  	// #32
   3d5f0:	str	w0, [sp, #36]
   3d5f4:	ldr	x0, [sp, #24]
   3d5f8:	ldr	w0, [x0, #72]
   3d5fc:	add	w0, w0, #0x3
   3d600:	mov	w1, w0
   3d604:	ldr	x0, [sp, #24]
   3d608:	str	w1, [x0, #72]
   3d60c:	ldr	x0, [sp, #24]
   3d610:	ldr	x0, [x0, #24]
   3d614:	add	x1, x0, #0x1
   3d618:	ldr	x0, [sp, #24]
   3d61c:	str	x1, [x0, #24]
   3d620:	mov	x3, #0x0                   	// #0
   3d624:	ldr	x2, [sp, #40]
   3d628:	ldr	w1, [sp, #36]
   3d62c:	ldr	x0, [sp, #24]
   3d630:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3d634:	str	x0, [sp, #40]
   3d638:	ldr	x0, [sp, #40]
   3d63c:	ldp	x29, x30, [sp], #48
   3d640:	ret
   3d644:	stp	x29, x30, [sp, #-48]!
   3d648:	mov	x29, sp
   3d64c:	str	x0, [sp, #24]
   3d650:	str	xzr, [sp, #40]
   3d654:	ldr	x0, [sp, #24]
   3d658:	ldr	w0, [x0, #16]
   3d65c:	and	w0, w0, #0x40000
   3d660:	cmp	w0, #0x0
   3d664:	b.ne	3d694 <__asan_cplus_demangle_type@@Base+0x1000>  // b.any
   3d668:	ldr	x0, [sp, #24]
   3d66c:	ldr	w0, [x0, #84]
   3d670:	cmp	w0, #0x800
   3d674:	b.ls	3d680 <__asan_cplus_demangle_type@@Base+0xfec>  // b.plast
   3d678:	mov	x0, #0x0                   	// #0
   3d67c:	b	3d784 <__asan_cplus_demangle_type@@Base+0x10f0>
   3d680:	ldr	x0, [sp, #24]
   3d684:	ldr	w0, [x0, #84]
   3d688:	add	w1, w0, #0x1
   3d68c:	ldr	x0, [sp, #24]
   3d690:	str	w1, [x0, #84]
   3d694:	ldr	x0, [sp, #24]
   3d698:	ldr	x0, [x0, #24]
   3d69c:	ldrb	w0, [x0]
   3d6a0:	cmp	w0, #0x46
   3d6a4:	b.ne	3d6c4 <__asan_cplus_demangle_type@@Base+0x1030>  // b.any
   3d6a8:	ldr	x0, [sp, #24]
   3d6ac:	ldr	x0, [x0, #24]
   3d6b0:	add	x1, x0, #0x1
   3d6b4:	ldr	x0, [sp, #24]
   3d6b8:	str	x1, [x0, #24]
   3d6bc:	mov	w0, #0x1                   	// #1
   3d6c0:	b	3d6c8 <__asan_cplus_demangle_type@@Base+0x1034>
   3d6c4:	mov	w0, #0x0                   	// #0
   3d6c8:	cmp	w0, #0x0
   3d6cc:	b.eq	3d758 <__asan_cplus_demangle_type@@Base+0x10c4>  // b.none
   3d6d0:	ldr	x0, [sp, #24]
   3d6d4:	ldr	x0, [x0, #24]
   3d6d8:	ldrb	w0, [x0]
   3d6dc:	cmp	w0, #0x59
   3d6e0:	b.ne	3d6f8 <__asan_cplus_demangle_type@@Base+0x1064>  // b.any
   3d6e4:	ldr	x0, [sp, #24]
   3d6e8:	ldr	x0, [x0, #24]
   3d6ec:	add	x1, x0, #0x1
   3d6f0:	ldr	x0, [sp, #24]
   3d6f4:	str	x1, [x0, #24]
   3d6f8:	mov	w1, #0x1                   	// #1
   3d6fc:	ldr	x0, [sp, #24]
   3d700:	bl	3d900 <__asan_cplus_demangle_type@@Base+0x126c>
   3d704:	str	x0, [sp, #40]
   3d708:	ldr	x1, [sp, #40]
   3d70c:	ldr	x0, [sp, #24]
   3d710:	bl	3d57c <__asan_cplus_demangle_type@@Base+0xee8>
   3d714:	str	x0, [sp, #40]
   3d718:	ldr	x0, [sp, #24]
   3d71c:	ldr	x0, [x0, #24]
   3d720:	ldrb	w0, [x0]
   3d724:	cmp	w0, #0x45
   3d728:	b.ne	3d748 <__asan_cplus_demangle_type@@Base+0x10b4>  // b.any
   3d72c:	ldr	x0, [sp, #24]
   3d730:	ldr	x0, [x0, #24]
   3d734:	add	x1, x0, #0x1
   3d738:	ldr	x0, [sp, #24]
   3d73c:	str	x1, [x0, #24]
   3d740:	mov	w0, #0x0                   	// #0
   3d744:	b	3d74c <__asan_cplus_demangle_type@@Base+0x10b8>
   3d748:	mov	w0, #0x1                   	// #1
   3d74c:	cmp	w0, #0x0
   3d750:	b.eq	3d758 <__asan_cplus_demangle_type@@Base+0x10c4>  // b.none
   3d754:	str	xzr, [sp, #40]
   3d758:	ldr	x0, [sp, #24]
   3d75c:	ldr	w0, [x0, #16]
   3d760:	and	w0, w0, #0x40000
   3d764:	cmp	w0, #0x0
   3d768:	b.ne	3d780 <__asan_cplus_demangle_type@@Base+0x10ec>  // b.any
   3d76c:	ldr	x0, [sp, #24]
   3d770:	ldr	w0, [x0, #84]
   3d774:	sub	w1, w0, #0x1
   3d778:	ldr	x0, [sp, #24]
   3d77c:	str	w1, [x0, #84]
   3d780:	ldr	x0, [sp, #40]
   3d784:	ldp	x29, x30, [sp], #48
   3d788:	ret
   3d78c:	stp	x29, x30, [sp, #-64]!
   3d790:	mov	x29, sp
   3d794:	str	x0, [sp, #24]
   3d798:	str	xzr, [sp, #32]
   3d79c:	add	x0, sp, #0x20
   3d7a0:	str	x0, [sp, #56]
   3d7a4:	ldr	x0, [sp, #24]
   3d7a8:	ldr	x0, [x0, #24]
   3d7ac:	ldrb	w0, [x0]
   3d7b0:	strb	w0, [sp, #55]
   3d7b4:	ldrb	w0, [sp, #55]
   3d7b8:	cmp	w0, #0x0
   3d7bc:	b.eq	3d878 <__asan_cplus_demangle_type@@Base+0x11e4>  // b.none
   3d7c0:	ldrb	w0, [sp, #55]
   3d7c4:	cmp	w0, #0x45
   3d7c8:	b.eq	3d878 <__asan_cplus_demangle_type@@Base+0x11e4>  // b.none
   3d7cc:	ldrb	w0, [sp, #55]
   3d7d0:	cmp	w0, #0x2e
   3d7d4:	b.eq	3d878 <__asan_cplus_demangle_type@@Base+0x11e4>  // b.none
   3d7d8:	ldrb	w0, [sp, #55]
   3d7dc:	cmp	w0, #0x52
   3d7e0:	b.eq	3d7f0 <__asan_cplus_demangle_type@@Base+0x115c>  // b.none
   3d7e4:	ldrb	w0, [sp, #55]
   3d7e8:	cmp	w0, #0x4f
   3d7ec:	b.ne	3d808 <__asan_cplus_demangle_type@@Base+0x1174>  // b.any
   3d7f0:	ldr	x0, [sp, #24]
   3d7f4:	ldr	x0, [x0, #24]
   3d7f8:	add	x0, x0, #0x1
   3d7fc:	ldrb	w0, [x0]
   3d800:	cmp	w0, #0x45
   3d804:	b.eq	3d874 <__asan_cplus_demangle_type@@Base+0x11e0>  // b.none
   3d808:	ldr	x0, [sp, #24]
   3d80c:	bl	6650 <__asan_cplus_demangle_type@plt>
   3d810:	str	x0, [sp, #40]
   3d814:	ldr	x0, [sp, #40]
   3d818:	cmp	x0, #0x0
   3d81c:	b.ne	3d828 <__asan_cplus_demangle_type@@Base+0x1194>  // b.any
   3d820:	mov	x0, #0x0                   	// #0
   3d824:	b	3d8f8 <__asan_cplus_demangle_type@@Base+0x1264>
   3d828:	mov	x3, #0x0                   	// #0
   3d82c:	ldr	x2, [sp, #40]
   3d830:	mov	w1, #0x2e                  	// #46
   3d834:	ldr	x0, [sp, #24]
   3d838:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3d83c:	mov	x1, x0
   3d840:	ldr	x0, [sp, #56]
   3d844:	str	x1, [x0]
   3d848:	ldr	x0, [sp, #56]
   3d84c:	ldr	x0, [x0]
   3d850:	cmp	x0, #0x0
   3d854:	b.ne	3d860 <__asan_cplus_demangle_type@@Base+0x11cc>  // b.any
   3d858:	mov	x0, #0x0                   	// #0
   3d85c:	b	3d8f8 <__asan_cplus_demangle_type@@Base+0x1264>
   3d860:	ldr	x0, [sp, #56]
   3d864:	ldr	x0, [x0]
   3d868:	add	x0, x0, #0x10
   3d86c:	str	x0, [sp, #56]
   3d870:	b	3d7a4 <__asan_cplus_demangle_type@@Base+0x1110>
   3d874:	nop
   3d878:	ldr	x0, [sp, #32]
   3d87c:	cmp	x0, #0x0
   3d880:	b.ne	3d88c <__asan_cplus_demangle_type@@Base+0x11f8>  // b.any
   3d884:	mov	x0, #0x0                   	// #0
   3d888:	b	3d8f8 <__asan_cplus_demangle_type@@Base+0x1264>
   3d88c:	ldr	x0, [sp, #32]
   3d890:	ldr	x0, [x0, #16]
   3d894:	cmp	x0, #0x0
   3d898:	b.ne	3d8f4 <__asan_cplus_demangle_type@@Base+0x1260>  // b.any
   3d89c:	ldr	x0, [sp, #32]
   3d8a0:	ldr	x0, [x0, #8]
   3d8a4:	ldr	w0, [x0]
   3d8a8:	cmp	w0, #0x27
   3d8ac:	b.ne	3d8f4 <__asan_cplus_demangle_type@@Base+0x1260>  // b.any
   3d8b0:	ldr	x0, [sp, #32]
   3d8b4:	ldr	x0, [x0, #8]
   3d8b8:	ldr	x0, [x0, #8]
   3d8bc:	ldr	w0, [x0, #28]
   3d8c0:	cmp	w0, #0x9
   3d8c4:	b.ne	3d8f4 <__asan_cplus_demangle_type@@Base+0x1260>  // b.any
   3d8c8:	ldr	x0, [sp, #24]
   3d8cc:	ldr	w1, [x0, #72]
   3d8d0:	ldr	x0, [sp, #32]
   3d8d4:	ldr	x0, [x0, #8]
   3d8d8:	ldr	x0, [x0, #8]
   3d8dc:	ldr	w0, [x0, #8]
   3d8e0:	sub	w1, w1, w0
   3d8e4:	ldr	x0, [sp, #24]
   3d8e8:	str	w1, [x0, #72]
   3d8ec:	ldr	x0, [sp, #32]
   3d8f0:	str	xzr, [x0, #8]
   3d8f4:	ldr	x0, [sp, #32]
   3d8f8:	ldp	x29, x30, [sp], #64
   3d8fc:	ret
   3d900:	stp	x29, x30, [sp, #-64]!
   3d904:	mov	x29, sp
   3d908:	str	x0, [sp, #24]
   3d90c:	str	w1, [sp, #20]
   3d910:	ldr	x0, [sp, #24]
   3d914:	ldr	x0, [x0, #24]
   3d918:	ldrb	w0, [x0]
   3d91c:	strb	w0, [sp, #55]
   3d920:	ldrb	w0, [sp, #55]
   3d924:	cmp	w0, #0x4a
   3d928:	b.ne	3d948 <__asan_cplus_demangle_type@@Base+0x12b4>  // b.any
   3d92c:	ldr	x0, [sp, #24]
   3d930:	ldr	x0, [x0, #24]
   3d934:	add	x1, x0, #0x1
   3d938:	ldr	x0, [sp, #24]
   3d93c:	str	x1, [x0, #24]
   3d940:	mov	w0, #0x1                   	// #1
   3d944:	str	w0, [sp, #20]
   3d948:	ldr	w0, [sp, #20]
   3d94c:	cmp	w0, #0x0
   3d950:	b.eq	3d974 <__asan_cplus_demangle_type@@Base+0x12e0>  // b.none
   3d954:	ldr	x0, [sp, #24]
   3d958:	bl	6650 <__asan_cplus_demangle_type@plt>
   3d95c:	str	x0, [sp, #56]
   3d960:	ldr	x0, [sp, #56]
   3d964:	cmp	x0, #0x0
   3d968:	b.ne	3d978 <__asan_cplus_demangle_type@@Base+0x12e4>  // b.any
   3d96c:	mov	x0, #0x0                   	// #0
   3d970:	b	3d9ac <__asan_cplus_demangle_type@@Base+0x1318>
   3d974:	str	xzr, [sp, #56]
   3d978:	ldr	x0, [sp, #24]
   3d97c:	bl	3d78c <__asan_cplus_demangle_type@@Base+0x10f8>
   3d980:	str	x0, [sp, #40]
   3d984:	ldr	x0, [sp, #40]
   3d988:	cmp	x0, #0x0
   3d98c:	b.ne	3d998 <__asan_cplus_demangle_type@@Base+0x1304>  // b.any
   3d990:	mov	x0, #0x0                   	// #0
   3d994:	b	3d9ac <__asan_cplus_demangle_type@@Base+0x1318>
   3d998:	ldr	x3, [sp, #40]
   3d99c:	ldr	x2, [sp, #56]
   3d9a0:	mov	w1, #0x29                  	// #41
   3d9a4:	ldr	x0, [sp, #24]
   3d9a8:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3d9ac:	ldp	x29, x30, [sp], #64
   3d9b0:	ret
   3d9b4:	stp	x29, x30, [sp, #-32]!
   3d9b8:	mov	x29, sp
   3d9bc:	str	x0, [sp, #24]
   3d9c0:	ldr	x0, [sp, #24]
   3d9c4:	bl	3ac00 <__asan_cplus_demangle_mangled_name@@Base+0x4dc>
   3d9c8:	ldp	x29, x30, [sp], #32
   3d9cc:	ret
   3d9d0:	stp	x29, x30, [sp, #-64]!
   3d9d4:	mov	x29, sp
   3d9d8:	str	x0, [sp, #24]
   3d9dc:	ldr	x0, [sp, #24]
   3d9e0:	ldr	x0, [x0, #24]
   3d9e4:	ldrb	w0, [x0]
   3d9e8:	cmp	w0, #0x41
   3d9ec:	b.ne	3da0c <__asan_cplus_demangle_type@@Base+0x1378>  // b.any
   3d9f0:	ldr	x0, [sp, #24]
   3d9f4:	ldr	x0, [x0, #24]
   3d9f8:	add	x1, x0, #0x1
   3d9fc:	ldr	x0, [sp, #24]
   3da00:	str	x1, [x0, #24]
   3da04:	mov	w0, #0x0                   	// #0
   3da08:	b	3da10 <__asan_cplus_demangle_type@@Base+0x137c>
   3da0c:	mov	w0, #0x1                   	// #1
   3da10:	cmp	w0, #0x0
   3da14:	b.eq	3da20 <__asan_cplus_demangle_type@@Base+0x138c>  // b.none
   3da18:	mov	x0, #0x0                   	// #0
   3da1c:	b	3db60 <__asan_cplus_demangle_type@@Base+0x14cc>
   3da20:	ldr	x0, [sp, #24]
   3da24:	ldr	x0, [x0, #24]
   3da28:	ldrb	w0, [x0]
   3da2c:	strb	w0, [sp, #55]
   3da30:	ldrb	w0, [sp, #55]
   3da34:	cmp	w0, #0x5f
   3da38:	b.ne	3da44 <__asan_cplus_demangle_type@@Base+0x13b0>  // b.any
   3da3c:	str	xzr, [sp, #56]
   3da40:	b	3db00 <__asan_cplus_demangle_type@@Base+0x146c>
   3da44:	ldrb	w0, [sp, #55]
   3da48:	cmp	w0, #0x2f
   3da4c:	b.ls	3dadc <__asan_cplus_demangle_type@@Base+0x1448>  // b.plast
   3da50:	ldrb	w0, [sp, #55]
   3da54:	cmp	w0, #0x39
   3da58:	b.hi	3dadc <__asan_cplus_demangle_type@@Base+0x1448>  // b.pmore
   3da5c:	ldr	x0, [sp, #24]
   3da60:	ldr	x0, [x0, #24]
   3da64:	str	x0, [sp, #40]
   3da68:	ldr	x0, [sp, #24]
   3da6c:	ldr	x0, [x0, #24]
   3da70:	add	x1, x0, #0x1
   3da74:	ldr	x0, [sp, #24]
   3da78:	str	x1, [x0, #24]
   3da7c:	ldr	x0, [sp, #24]
   3da80:	ldr	x0, [x0, #24]
   3da84:	ldrb	w0, [x0]
   3da88:	strb	w0, [sp, #55]
   3da8c:	ldrb	w0, [sp, #55]
   3da90:	cmp	w0, #0x2f
   3da94:	b.ls	3daa4 <__asan_cplus_demangle_type@@Base+0x1410>  // b.plast
   3da98:	ldrb	w0, [sp, #55]
   3da9c:	cmp	w0, #0x39
   3daa0:	b.ls	3da68 <__asan_cplus_demangle_type@@Base+0x13d4>  // b.plast
   3daa4:	ldr	x0, [sp, #24]
   3daa8:	ldr	x1, [x0, #24]
   3daac:	ldr	x0, [sp, #40]
   3dab0:	sub	x0, x1, x0
   3dab4:	mov	w2, w0
   3dab8:	ldr	x1, [sp, #40]
   3dabc:	ldr	x0, [sp, #24]
   3dac0:	bl	3a3f8 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   3dac4:	str	x0, [sp, #56]
   3dac8:	ldr	x0, [sp, #56]
   3dacc:	cmp	x0, #0x0
   3dad0:	b.ne	3dafc <__asan_cplus_demangle_type@@Base+0x1468>  // b.any
   3dad4:	mov	x0, #0x0                   	// #0
   3dad8:	b	3db60 <__asan_cplus_demangle_type@@Base+0x14cc>
   3dadc:	ldr	x0, [sp, #24]
   3dae0:	bl	3eb48 <__asan_cplus_demangle_type@@Base+0x24b4>
   3dae4:	str	x0, [sp, #56]
   3dae8:	ldr	x0, [sp, #56]
   3daec:	cmp	x0, #0x0
   3daf0:	b.ne	3db00 <__asan_cplus_demangle_type@@Base+0x146c>  // b.any
   3daf4:	mov	x0, #0x0                   	// #0
   3daf8:	b	3db60 <__asan_cplus_demangle_type@@Base+0x14cc>
   3dafc:	nop
   3db00:	ldr	x0, [sp, #24]
   3db04:	ldr	x0, [x0, #24]
   3db08:	ldrb	w0, [x0]
   3db0c:	cmp	w0, #0x5f
   3db10:	b.ne	3db30 <__asan_cplus_demangle_type@@Base+0x149c>  // b.any
   3db14:	ldr	x0, [sp, #24]
   3db18:	ldr	x0, [x0, #24]
   3db1c:	add	x1, x0, #0x1
   3db20:	ldr	x0, [sp, #24]
   3db24:	str	x1, [x0, #24]
   3db28:	mov	w0, #0x0                   	// #0
   3db2c:	b	3db34 <__asan_cplus_demangle_type@@Base+0x14a0>
   3db30:	mov	w0, #0x1                   	// #1
   3db34:	cmp	w0, #0x0
   3db38:	b.eq	3db44 <__asan_cplus_demangle_type@@Base+0x14b0>  // b.none
   3db3c:	mov	x0, #0x0                   	// #0
   3db40:	b	3db60 <__asan_cplus_demangle_type@@Base+0x14cc>
   3db44:	ldr	x0, [sp, #24]
   3db48:	bl	6650 <__asan_cplus_demangle_type@plt>
   3db4c:	mov	x3, x0
   3db50:	ldr	x2, [sp, #56]
   3db54:	mov	w1, #0x2a                  	// #42
   3db58:	ldr	x0, [sp, #24]
   3db5c:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3db60:	ldp	x29, x30, [sp], #64
   3db64:	ret
   3db68:	stp	x29, x30, [sp, #-48]!
   3db6c:	mov	x29, sp
   3db70:	str	x0, [sp, #24]
   3db74:	ldr	x0, [sp, #24]
   3db78:	ldr	x0, [x0, #24]
   3db7c:	ldrb	w0, [x0]
   3db80:	strb	w0, [sp, #39]
   3db84:	ldrb	w0, [sp, #39]
   3db88:	cmp	w0, #0x5f
   3db8c:	b.ne	3dbb4 <__asan_cplus_demangle_type@@Base+0x1520>  // b.any
   3db90:	ldr	x0, [sp, #24]
   3db94:	ldr	x0, [x0, #24]
   3db98:	add	x1, x0, #0x1
   3db9c:	ldr	x0, [sp, #24]
   3dba0:	str	x1, [x0, #24]
   3dba4:	ldr	x0, [sp, #24]
   3dba8:	bl	3eb48 <__asan_cplus_demangle_type@@Base+0x24b4>
   3dbac:	str	x0, [sp, #40]
   3dbb0:	b	3dbc0 <__asan_cplus_demangle_type@@Base+0x152c>
   3dbb4:	ldr	x0, [sp, #24]
   3dbb8:	bl	3b500 <__asan_cplus_demangle_mangled_name@@Base+0xddc>
   3dbbc:	str	x0, [sp, #40]
   3dbc0:	ldr	x0, [sp, #40]
   3dbc4:	cmp	x0, #0x0
   3dbc8:	b.ne	3dbd4 <__asan_cplus_demangle_type@@Base+0x1540>  // b.any
   3dbcc:	mov	x0, #0x0                   	// #0
   3dbd0:	b	3dc34 <__asan_cplus_demangle_type@@Base+0x15a0>
   3dbd4:	ldr	x0, [sp, #24]
   3dbd8:	ldr	x0, [x0, #24]
   3dbdc:	ldrb	w0, [x0]
   3dbe0:	cmp	w0, #0x5f
   3dbe4:	b.ne	3dc04 <__asan_cplus_demangle_type@@Base+0x1570>  // b.any
   3dbe8:	ldr	x0, [sp, #24]
   3dbec:	ldr	x0, [x0, #24]
   3dbf0:	add	x1, x0, #0x1
   3dbf4:	ldr	x0, [sp, #24]
   3dbf8:	str	x1, [x0, #24]
   3dbfc:	mov	w0, #0x0                   	// #0
   3dc00:	b	3dc08 <__asan_cplus_demangle_type@@Base+0x1574>
   3dc04:	mov	w0, #0x1                   	// #1
   3dc08:	cmp	w0, #0x0
   3dc0c:	b.eq	3dc18 <__asan_cplus_demangle_type@@Base+0x1584>  // b.none
   3dc10:	mov	x0, #0x0                   	// #0
   3dc14:	b	3dc34 <__asan_cplus_demangle_type@@Base+0x15a0>
   3dc18:	ldr	x0, [sp, #24]
   3dc1c:	bl	6650 <__asan_cplus_demangle_type@plt>
   3dc20:	mov	x3, x0
   3dc24:	ldr	x2, [sp, #40]
   3dc28:	mov	w1, #0x2d                  	// #45
   3dc2c:	ldr	x0, [sp, #24]
   3dc30:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3dc34:	ldp	x29, x30, [sp], #48
   3dc38:	ret
   3dc3c:	stp	x29, x30, [sp, #-48]!
   3dc40:	mov	x29, sp
   3dc44:	str	x0, [sp, #24]
   3dc48:	ldr	x0, [sp, #24]
   3dc4c:	ldr	x0, [x0, #24]
   3dc50:	ldrb	w0, [x0]
   3dc54:	cmp	w0, #0x4d
   3dc58:	b.ne	3dc78 <__asan_cplus_demangle_type@@Base+0x15e4>  // b.any
   3dc5c:	ldr	x0, [sp, #24]
   3dc60:	ldr	x0, [x0, #24]
   3dc64:	add	x1, x0, #0x1
   3dc68:	ldr	x0, [sp, #24]
   3dc6c:	str	x1, [x0, #24]
   3dc70:	mov	w0, #0x0                   	// #0
   3dc74:	b	3dc7c <__asan_cplus_demangle_type@@Base+0x15e8>
   3dc78:	mov	w0, #0x1                   	// #1
   3dc7c:	cmp	w0, #0x0
   3dc80:	b.eq	3dc8c <__asan_cplus_demangle_type@@Base+0x15f8>  // b.none
   3dc84:	mov	x0, #0x0                   	// #0
   3dc88:	b	3dce0 <__asan_cplus_demangle_type@@Base+0x164c>
   3dc8c:	ldr	x0, [sp, #24]
   3dc90:	bl	6650 <__asan_cplus_demangle_type@plt>
   3dc94:	str	x0, [sp, #40]
   3dc98:	ldr	x0, [sp, #40]
   3dc9c:	cmp	x0, #0x0
   3dca0:	b.ne	3dcac <__asan_cplus_demangle_type@@Base+0x1618>  // b.any
   3dca4:	mov	x0, #0x0                   	// #0
   3dca8:	b	3dce0 <__asan_cplus_demangle_type@@Base+0x164c>
   3dcac:	ldr	x0, [sp, #24]
   3dcb0:	bl	6650 <__asan_cplus_demangle_type@plt>
   3dcb4:	str	x0, [sp, #32]
   3dcb8:	ldr	x0, [sp, #32]
   3dcbc:	cmp	x0, #0x0
   3dcc0:	b.ne	3dccc <__asan_cplus_demangle_type@@Base+0x1638>  // b.any
   3dcc4:	mov	x0, #0x0                   	// #0
   3dcc8:	b	3dce0 <__asan_cplus_demangle_type@@Base+0x164c>
   3dccc:	ldr	x3, [sp, #32]
   3dcd0:	ldr	x2, [sp, #40]
   3dcd4:	mov	w1, #0x2b                  	// #43
   3dcd8:	ldr	x0, [sp, #24]
   3dcdc:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3dce0:	ldp	x29, x30, [sp], #48
   3dce4:	ret
   3dce8:	stp	x29, x30, [sp, #-48]!
   3dcec:	mov	x29, sp
   3dcf0:	str	x0, [sp, #24]
   3dcf4:	ldr	x0, [sp, #24]
   3dcf8:	ldr	x0, [x0, #24]
   3dcfc:	ldrb	w0, [x0]
   3dd00:	cmp	w0, #0x5f
   3dd04:	b.ne	3dd10 <__asan_cplus_demangle_type@@Base+0x167c>  // b.any
   3dd08:	str	wzr, [sp, #44]
   3dd0c:	b	3dd3c <__asan_cplus_demangle_type@@Base+0x16a8>
   3dd10:	ldr	x0, [sp, #24]
   3dd14:	ldr	x0, [x0, #24]
   3dd18:	ldrb	w0, [x0]
   3dd1c:	cmp	w0, #0x6e
   3dd20:	b.ne	3dd2c <__asan_cplus_demangle_type@@Base+0x1698>  // b.any
   3dd24:	mov	w0, #0xffffffff            	// #-1
   3dd28:	b	3dd7c <__asan_cplus_demangle_type@@Base+0x16e8>
   3dd2c:	ldr	x0, [sp, #24]
   3dd30:	bl	3b3d8 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   3dd34:	add	w0, w0, #0x1
   3dd38:	str	w0, [sp, #44]
   3dd3c:	ldr	w0, [sp, #44]
   3dd40:	cmp	w0, #0x0
   3dd44:	b.lt	3dd78 <__asan_cplus_demangle_type@@Base+0x16e4>  // b.tstop
   3dd48:	ldr	x0, [sp, #24]
   3dd4c:	ldr	x0, [x0, #24]
   3dd50:	ldrb	w0, [x0]
   3dd54:	cmp	w0, #0x5f
   3dd58:	b.ne	3dd78 <__asan_cplus_demangle_type@@Base+0x16e4>  // b.any
   3dd5c:	ldr	x0, [sp, #24]
   3dd60:	ldr	x0, [x0, #24]
   3dd64:	add	x1, x0, #0x1
   3dd68:	ldr	x0, [sp, #24]
   3dd6c:	str	x1, [x0, #24]
   3dd70:	ldr	w0, [sp, #44]
   3dd74:	b	3dd7c <__asan_cplus_demangle_type@@Base+0x16e8>
   3dd78:	mov	w0, #0xffffffff            	// #-1
   3dd7c:	ldp	x29, x30, [sp], #48
   3dd80:	ret
   3dd84:	stp	x29, x30, [sp, #-48]!
   3dd88:	mov	x29, sp
   3dd8c:	str	x0, [sp, #24]
   3dd90:	ldr	x0, [sp, #24]
   3dd94:	ldr	x0, [x0, #24]
   3dd98:	ldrb	w0, [x0]
   3dd9c:	cmp	w0, #0x54
   3dda0:	b.ne	3ddc0 <__asan_cplus_demangle_type@@Base+0x172c>  // b.any
   3dda4:	ldr	x0, [sp, #24]
   3dda8:	ldr	x0, [x0, #24]
   3ddac:	add	x1, x0, #0x1
   3ddb0:	ldr	x0, [sp, #24]
   3ddb4:	str	x1, [x0, #24]
   3ddb8:	mov	w0, #0x0                   	// #0
   3ddbc:	b	3ddc4 <__asan_cplus_demangle_type@@Base+0x1730>
   3ddc0:	mov	w0, #0x1                   	// #1
   3ddc4:	cmp	w0, #0x0
   3ddc8:	b.eq	3ddd4 <__asan_cplus_demangle_type@@Base+0x1740>  // b.none
   3ddcc:	mov	x0, #0x0                   	// #0
   3ddd0:	b	3de00 <__asan_cplus_demangle_type@@Base+0x176c>
   3ddd4:	ldr	x0, [sp, #24]
   3ddd8:	bl	3dce8 <__asan_cplus_demangle_type@@Base+0x1654>
   3dddc:	str	w0, [sp, #44]
   3dde0:	ldr	w0, [sp, #44]
   3dde4:	cmp	w0, #0x0
   3dde8:	b.ge	3ddf4 <__asan_cplus_demangle_type@@Base+0x1760>  // b.tcont
   3ddec:	mov	x0, #0x0                   	// #0
   3ddf0:	b	3de00 <__asan_cplus_demangle_type@@Base+0x176c>
   3ddf4:	ldr	w1, [sp, #44]
   3ddf8:	ldr	x0, [sp, #24]
   3ddfc:	bl	3a630 <__asan_cplus_demangle_fill_dtor@@Base+0x4a8>
   3de00:	ldp	x29, x30, [sp], #48
   3de04:	ret
   3de08:	stp	x29, x30, [sp, #-32]!
   3de0c:	mov	x29, sp
   3de10:	str	x0, [sp, #24]
   3de14:	ldr	x0, [sp, #24]
   3de18:	ldr	x0, [x0, #24]
   3de1c:	ldrb	w0, [x0]
   3de20:	cmp	w0, #0x49
   3de24:	b.eq	3de44 <__asan_cplus_demangle_type@@Base+0x17b0>  // b.none
   3de28:	ldr	x0, [sp, #24]
   3de2c:	ldr	x0, [x0, #24]
   3de30:	ldrb	w0, [x0]
   3de34:	cmp	w0, #0x4a
   3de38:	b.eq	3de44 <__asan_cplus_demangle_type@@Base+0x17b0>  // b.none
   3de3c:	mov	x0, #0x0                   	// #0
   3de40:	b	3de60 <__asan_cplus_demangle_type@@Base+0x17cc>
   3de44:	ldr	x0, [sp, #24]
   3de48:	ldr	x0, [x0, #24]
   3de4c:	add	x1, x0, #0x1
   3de50:	ldr	x0, [sp, #24]
   3de54:	str	x1, [x0, #24]
   3de58:	ldr	x0, [sp, #24]
   3de5c:	bl	3de68 <__asan_cplus_demangle_type@@Base+0x17d4>
   3de60:	ldp	x29, x30, [sp], #32
   3de64:	ret
   3de68:	stp	x29, x30, [sp, #-64]!
   3de6c:	mov	x29, sp
   3de70:	str	x0, [sp, #24]
   3de74:	ldr	x0, [sp, #24]
   3de78:	ldr	x0, [x0, #64]
   3de7c:	str	x0, [sp, #48]
   3de80:	ldr	x0, [sp, #24]
   3de84:	ldr	x0, [x0, #24]
   3de88:	ldrb	w0, [x0]
   3de8c:	cmp	w0, #0x45
   3de90:	b.ne	3dec0 <__asan_cplus_demangle_type@@Base+0x182c>  // b.any
   3de94:	ldr	x0, [sp, #24]
   3de98:	ldr	x0, [x0, #24]
   3de9c:	add	x1, x0, #0x1
   3dea0:	ldr	x0, [sp, #24]
   3dea4:	str	x1, [x0, #24]
   3dea8:	mov	x3, #0x0                   	// #0
   3deac:	mov	x2, #0x0                   	// #0
   3deb0:	mov	w1, #0x2f                  	// #47
   3deb4:	ldr	x0, [sp, #24]
   3deb8:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3debc:	b	3df70 <__asan_cplus_demangle_type@@Base+0x18dc>
   3dec0:	str	xzr, [sp, #32]
   3dec4:	add	x0, sp, #0x20
   3dec8:	str	x0, [sp, #56]
   3decc:	ldr	x0, [sp, #24]
   3ded0:	bl	3df78 <__asan_cplus_demangle_type@@Base+0x18e4>
   3ded4:	str	x0, [sp, #40]
   3ded8:	ldr	x0, [sp, #40]
   3dedc:	cmp	x0, #0x0
   3dee0:	b.ne	3deec <__asan_cplus_demangle_type@@Base+0x1858>  // b.any
   3dee4:	mov	x0, #0x0                   	// #0
   3dee8:	b	3df70 <__asan_cplus_demangle_type@@Base+0x18dc>
   3deec:	mov	x3, #0x0                   	// #0
   3def0:	ldr	x2, [sp, #40]
   3def4:	mov	w1, #0x2f                  	// #47
   3def8:	ldr	x0, [sp, #24]
   3defc:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3df00:	mov	x1, x0
   3df04:	ldr	x0, [sp, #56]
   3df08:	str	x1, [x0]
   3df0c:	ldr	x0, [sp, #56]
   3df10:	ldr	x0, [x0]
   3df14:	cmp	x0, #0x0
   3df18:	b.ne	3df24 <__asan_cplus_demangle_type@@Base+0x1890>  // b.any
   3df1c:	mov	x0, #0x0                   	// #0
   3df20:	b	3df70 <__asan_cplus_demangle_type@@Base+0x18dc>
   3df24:	ldr	x0, [sp, #56]
   3df28:	ldr	x0, [x0]
   3df2c:	add	x0, x0, #0x10
   3df30:	str	x0, [sp, #56]
   3df34:	ldr	x0, [sp, #24]
   3df38:	ldr	x0, [x0, #24]
   3df3c:	ldrb	w0, [x0]
   3df40:	cmp	w0, #0x45
   3df44:	b.ne	3decc <__asan_cplus_demangle_type@@Base+0x1838>  // b.any
   3df48:	ldr	x0, [sp, #24]
   3df4c:	ldr	x0, [x0, #24]
   3df50:	add	x1, x0, #0x1
   3df54:	ldr	x0, [sp, #24]
   3df58:	str	x1, [x0, #24]
   3df5c:	nop
   3df60:	ldr	x0, [sp, #24]
   3df64:	ldr	x1, [sp, #48]
   3df68:	str	x1, [x0, #64]
   3df6c:	ldr	x0, [sp, #32]
   3df70:	ldp	x29, x30, [sp], #64
   3df74:	ret
   3df78:	stp	x29, x30, [sp, #-48]!
   3df7c:	mov	x29, sp
   3df80:	str	x0, [sp, #24]
   3df84:	ldr	x0, [sp, #24]
   3df88:	ldr	x0, [x0, #24]
   3df8c:	ldrb	w0, [x0]
   3df90:	cmp	w0, #0x58
   3df94:	b.eq	3dfc0 <__asan_cplus_demangle_type@@Base+0x192c>  // b.none
   3df98:	cmp	w0, #0x58
   3df9c:	b.gt	3e044 <__asan_cplus_demangle_type@@Base+0x19b0>
   3dfa0:	cmp	w0, #0x4a
   3dfa4:	b.gt	3dfb4 <__asan_cplus_demangle_type@@Base+0x1920>
   3dfa8:	cmp	w0, #0x49
   3dfac:	b.ge	3e038 <__asan_cplus_demangle_type@@Base+0x19a4>  // b.tcont
   3dfb0:	b	3e044 <__asan_cplus_demangle_type@@Base+0x19b0>
   3dfb4:	cmp	w0, #0x4c
   3dfb8:	b.eq	3e02c <__asan_cplus_demangle_type@@Base+0x1998>  // b.none
   3dfbc:	b	3e044 <__asan_cplus_demangle_type@@Base+0x19b0>
   3dfc0:	ldr	x0, [sp, #24]
   3dfc4:	ldr	x0, [x0, #24]
   3dfc8:	add	x1, x0, #0x1
   3dfcc:	ldr	x0, [sp, #24]
   3dfd0:	str	x1, [x0, #24]
   3dfd4:	ldr	x0, [sp, #24]
   3dfd8:	bl	3eb48 <__asan_cplus_demangle_type@@Base+0x24b4>
   3dfdc:	str	x0, [sp, #40]
   3dfe0:	ldr	x0, [sp, #24]
   3dfe4:	ldr	x0, [x0, #24]
   3dfe8:	ldrb	w0, [x0]
   3dfec:	cmp	w0, #0x45
   3dff0:	b.ne	3e010 <__asan_cplus_demangle_type@@Base+0x197c>  // b.any
   3dff4:	ldr	x0, [sp, #24]
   3dff8:	ldr	x0, [x0, #24]
   3dffc:	add	x1, x0, #0x1
   3e000:	ldr	x0, [sp, #24]
   3e004:	str	x1, [x0, #24]
   3e008:	mov	w0, #0x0                   	// #0
   3e00c:	b	3e014 <__asan_cplus_demangle_type@@Base+0x1980>
   3e010:	mov	w0, #0x1                   	// #1
   3e014:	cmp	w0, #0x0
   3e018:	b.eq	3e024 <__asan_cplus_demangle_type@@Base+0x1990>  // b.none
   3e01c:	mov	x0, #0x0                   	// #0
   3e020:	b	3e04c <__asan_cplus_demangle_type@@Base+0x19b8>
   3e024:	ldr	x0, [sp, #40]
   3e028:	b	3e04c <__asan_cplus_demangle_type@@Base+0x19b8>
   3e02c:	ldr	x0, [sp, #24]
   3e030:	bl	3eb90 <__asan_cplus_demangle_type@@Base+0x24fc>
   3e034:	b	3e04c <__asan_cplus_demangle_type@@Base+0x19b8>
   3e038:	ldr	x0, [sp, #24]
   3e03c:	bl	3de08 <__asan_cplus_demangle_type@@Base+0x1774>
   3e040:	b	3e04c <__asan_cplus_demangle_type@@Base+0x19b8>
   3e044:	ldr	x0, [sp, #24]
   3e048:	bl	6650 <__asan_cplus_demangle_type@plt>
   3e04c:	ldp	x29, x30, [sp], #48
   3e050:	ret
   3e054:	stp	x29, x30, [sp, #-64]!
   3e058:	mov	x29, sp
   3e05c:	str	x0, [sp, #24]
   3e060:	strb	w1, [sp, #23]
   3e064:	str	xzr, [sp, #40]
   3e068:	add	x0, sp, #0x28
   3e06c:	str	x0, [sp, #56]
   3e070:	ldr	x0, [sp, #24]
   3e074:	ldr	x0, [x0, #24]
   3e078:	ldrb	w0, [x0]
   3e07c:	ldrb	w1, [sp, #23]
   3e080:	cmp	w1, w0
   3e084:	b.ne	3e0b4 <__asan_cplus_demangle_type@@Base+0x1a20>  // b.any
   3e088:	ldr	x0, [sp, #24]
   3e08c:	ldr	x0, [x0, #24]
   3e090:	add	x1, x0, #0x1
   3e094:	ldr	x0, [sp, #24]
   3e098:	str	x1, [x0, #24]
   3e09c:	mov	x3, #0x0                   	// #0
   3e0a0:	mov	x2, #0x0                   	// #0
   3e0a4:	mov	w1, #0x2e                  	// #46
   3e0a8:	ldr	x0, [sp, #24]
   3e0ac:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3e0b0:	b	3e150 <__asan_cplus_demangle_type@@Base+0x1abc>
   3e0b4:	ldr	x0, [sp, #24]
   3e0b8:	bl	3eb48 <__asan_cplus_demangle_type@@Base+0x24b4>
   3e0bc:	str	x0, [sp, #48]
   3e0c0:	ldr	x0, [sp, #48]
   3e0c4:	cmp	x0, #0x0
   3e0c8:	b.ne	3e0d4 <__asan_cplus_demangle_type@@Base+0x1a40>  // b.any
   3e0cc:	mov	x0, #0x0                   	// #0
   3e0d0:	b	3e150 <__asan_cplus_demangle_type@@Base+0x1abc>
   3e0d4:	mov	x3, #0x0                   	// #0
   3e0d8:	ldr	x2, [sp, #48]
   3e0dc:	mov	w1, #0x2e                  	// #46
   3e0e0:	ldr	x0, [sp, #24]
   3e0e4:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3e0e8:	mov	x1, x0
   3e0ec:	ldr	x0, [sp, #56]
   3e0f0:	str	x1, [x0]
   3e0f4:	ldr	x0, [sp, #56]
   3e0f8:	ldr	x0, [x0]
   3e0fc:	cmp	x0, #0x0
   3e100:	b.ne	3e10c <__asan_cplus_demangle_type@@Base+0x1a78>  // b.any
   3e104:	mov	x0, #0x0                   	// #0
   3e108:	b	3e150 <__asan_cplus_demangle_type@@Base+0x1abc>
   3e10c:	ldr	x0, [sp, #56]
   3e110:	ldr	x0, [x0]
   3e114:	add	x0, x0, #0x10
   3e118:	str	x0, [sp, #56]
   3e11c:	ldr	x0, [sp, #24]
   3e120:	ldr	x0, [x0, #24]
   3e124:	ldrb	w0, [x0]
   3e128:	ldrb	w1, [sp, #23]
   3e12c:	cmp	w1, w0
   3e130:	b.ne	3e0b4 <__asan_cplus_demangle_type@@Base+0x1a20>  // b.any
   3e134:	ldr	x0, [sp, #24]
   3e138:	ldr	x0, [x0, #24]
   3e13c:	add	x1, x0, #0x1
   3e140:	ldr	x0, [sp, #24]
   3e144:	str	x1, [x0, #24]
   3e148:	nop
   3e14c:	ldr	x0, [sp, #40]
   3e150:	ldp	x29, x30, [sp], #64
   3e154:	ret
   3e158:	sub	sp, sp, #0x20
   3e15c:	str	x0, [sp, #8]
   3e160:	ldr	x0, [sp, #8]
   3e164:	ldr	x0, [x0, #8]
   3e168:	ldr	x0, [x0]
   3e16c:	str	x0, [sp, #24]
   3e170:	ldr	x0, [sp, #24]
   3e174:	add	x0, x0, #0x1
   3e178:	ldrb	w0, [x0]
   3e17c:	cmp	w0, #0x63
   3e180:	b.ne	3e1cc <__asan_cplus_demangle_type@@Base+0x1b38>  // b.any
   3e184:	ldr	x0, [sp, #24]
   3e188:	ldrb	w0, [x0]
   3e18c:	cmp	w0, #0x73
   3e190:	b.eq	3e1c4 <__asan_cplus_demangle_type@@Base+0x1b30>  // b.none
   3e194:	ldr	x0, [sp, #24]
   3e198:	ldrb	w0, [x0]
   3e19c:	cmp	w0, #0x64
   3e1a0:	b.eq	3e1c4 <__asan_cplus_demangle_type@@Base+0x1b30>  // b.none
   3e1a4:	ldr	x0, [sp, #24]
   3e1a8:	ldrb	w0, [x0]
   3e1ac:	cmp	w0, #0x63
   3e1b0:	b.eq	3e1c4 <__asan_cplus_demangle_type@@Base+0x1b30>  // b.none
   3e1b4:	ldr	x0, [sp, #24]
   3e1b8:	ldrb	w0, [x0]
   3e1bc:	cmp	w0, #0x72
   3e1c0:	b.ne	3e1cc <__asan_cplus_demangle_type@@Base+0x1b38>  // b.any
   3e1c4:	mov	w0, #0x1                   	// #1
   3e1c8:	b	3e1d0 <__asan_cplus_demangle_type@@Base+0x1b3c>
   3e1cc:	mov	w0, #0x0                   	// #0
   3e1d0:	add	sp, sp, #0x20
   3e1d4:	ret
   3e1d8:	stp	x29, x30, [sp, #-160]!
   3e1dc:	mov	x29, sp
   3e1e0:	str	x0, [sp, #24]
   3e1e4:	ldr	x0, [sp, #24]
   3e1e8:	ldr	x0, [x0, #24]
   3e1ec:	ldrb	w0, [x0]
   3e1f0:	strb	w0, [sp, #71]
   3e1f4:	ldrb	w0, [sp, #71]
   3e1f8:	cmp	w0, #0x4c
   3e1fc:	b.ne	3e20c <__asan_cplus_demangle_type@@Base+0x1b78>  // b.any
   3e200:	ldr	x0, [sp, #24]
   3e204:	bl	3eb90 <__asan_cplus_demangle_type@@Base+0x24fc>
   3e208:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e20c:	ldrb	w0, [sp, #71]
   3e210:	cmp	w0, #0x54
   3e214:	b.ne	3e224 <__asan_cplus_demangle_type@@Base+0x1b90>  // b.any
   3e218:	ldr	x0, [sp, #24]
   3e21c:	bl	3dd84 <__asan_cplus_demangle_type@@Base+0x16f0>
   3e220:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e224:	ldrb	w0, [sp, #71]
   3e228:	cmp	w0, #0x73
   3e22c:	b.ne	3e2d4 <__asan_cplus_demangle_type@@Base+0x1c40>  // b.any
   3e230:	ldr	x0, [sp, #24]
   3e234:	ldr	x0, [x0, #24]
   3e238:	add	x0, x0, #0x1
   3e23c:	ldrb	w0, [x0]
   3e240:	cmp	w0, #0x72
   3e244:	b.ne	3e2d4 <__asan_cplus_demangle_type@@Base+0x1c40>  // b.any
   3e248:	ldr	x0, [sp, #24]
   3e24c:	ldr	x0, [x0, #24]
   3e250:	add	x1, x0, #0x2
   3e254:	ldr	x0, [sp, #24]
   3e258:	str	x1, [x0, #24]
   3e25c:	ldr	x0, [sp, #24]
   3e260:	bl	6650 <__asan_cplus_demangle_type@plt>
   3e264:	str	x0, [sp, #56]
   3e268:	ldr	x0, [sp, #24]
   3e26c:	bl	3b140 <__asan_cplus_demangle_mangled_name@@Base+0xa1c>
   3e270:	str	x0, [sp, #48]
   3e274:	ldr	x0, [sp, #24]
   3e278:	ldr	x0, [x0, #24]
   3e27c:	ldrb	w0, [x0]
   3e280:	cmp	w0, #0x49
   3e284:	b.eq	3e2a0 <__asan_cplus_demangle_type@@Base+0x1c0c>  // b.none
   3e288:	ldr	x3, [sp, #48]
   3e28c:	ldr	x2, [sp, #56]
   3e290:	mov	w1, #0x1                   	// #1
   3e294:	ldr	x0, [sp, #24]
   3e298:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3e29c:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e2a0:	ldr	x0, [sp, #24]
   3e2a4:	bl	3de08 <__asan_cplus_demangle_type@@Base+0x1774>
   3e2a8:	mov	x3, x0
   3e2ac:	ldr	x2, [sp, #48]
   3e2b0:	mov	w1, #0x4                   	// #4
   3e2b4:	ldr	x0, [sp, #24]
   3e2b8:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3e2bc:	mov	x3, x0
   3e2c0:	ldr	x2, [sp, #56]
   3e2c4:	mov	w1, #0x1                   	// #1
   3e2c8:	ldr	x0, [sp, #24]
   3e2cc:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3e2d0:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e2d4:	ldrb	w0, [sp, #71]
   3e2d8:	cmp	w0, #0x73
   3e2dc:	b.ne	3e32c <__asan_cplus_demangle_type@@Base+0x1c98>  // b.any
   3e2e0:	ldr	x0, [sp, #24]
   3e2e4:	ldr	x0, [x0, #24]
   3e2e8:	add	x0, x0, #0x1
   3e2ec:	ldrb	w0, [x0]
   3e2f0:	cmp	w0, #0x70
   3e2f4:	b.ne	3e32c <__asan_cplus_demangle_type@@Base+0x1c98>  // b.any
   3e2f8:	ldr	x0, [sp, #24]
   3e2fc:	ldr	x0, [x0, #24]
   3e300:	add	x1, x0, #0x2
   3e304:	ldr	x0, [sp, #24]
   3e308:	str	x1, [x0, #24]
   3e30c:	ldr	x0, [sp, #24]
   3e310:	bl	3e1d8 <__asan_cplus_demangle_type@@Base+0x1b44>
   3e314:	mov	x3, #0x0                   	// #0
   3e318:	mov	x2, x0
   3e31c:	mov	w1, #0x4b                  	// #75
   3e320:	ldr	x0, [sp, #24]
   3e324:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3e328:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e32c:	ldrb	w0, [sp, #71]
   3e330:	cmp	w0, #0x66
   3e334:	b.ne	3e3e0 <__asan_cplus_demangle_type@@Base+0x1d4c>  // b.any
   3e338:	ldr	x0, [sp, #24]
   3e33c:	ldr	x0, [x0, #24]
   3e340:	add	x0, x0, #0x1
   3e344:	ldrb	w0, [x0]
   3e348:	cmp	w0, #0x70
   3e34c:	b.ne	3e3e0 <__asan_cplus_demangle_type@@Base+0x1d4c>  // b.any
   3e350:	ldr	x0, [sp, #24]
   3e354:	ldr	x0, [x0, #24]
   3e358:	add	x1, x0, #0x2
   3e35c:	ldr	x0, [sp, #24]
   3e360:	str	x1, [x0, #24]
   3e364:	ldr	x0, [sp, #24]
   3e368:	ldr	x0, [x0, #24]
   3e36c:	ldrb	w0, [x0]
   3e370:	cmp	w0, #0x54
   3e374:	b.ne	3e394 <__asan_cplus_demangle_type@@Base+0x1d00>  // b.any
   3e378:	ldr	x0, [sp, #24]
   3e37c:	ldr	x0, [x0, #24]
   3e380:	add	x1, x0, #0x1
   3e384:	ldr	x0, [sp, #24]
   3e388:	str	x1, [x0, #24]
   3e38c:	str	wzr, [sp, #156]
   3e390:	b	3e3d0 <__asan_cplus_demangle_type@@Base+0x1d3c>
   3e394:	ldr	x0, [sp, #24]
   3e398:	bl	3dce8 <__asan_cplus_demangle_type@@Base+0x1654>
   3e39c:	str	w0, [sp, #156]
   3e3a0:	ldr	w1, [sp, #156]
   3e3a4:	mov	w0, #0x7fffffff            	// #2147483647
   3e3a8:	cmp	w1, w0
   3e3ac:	b.eq	3e3bc <__asan_cplus_demangle_type@@Base+0x1d28>  // b.none
   3e3b0:	ldr	w0, [sp, #156]
   3e3b4:	cmn	w0, #0x1
   3e3b8:	b.ne	3e3c4 <__asan_cplus_demangle_type@@Base+0x1d30>  // b.any
   3e3bc:	mov	x0, #0x0                   	// #0
   3e3c0:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e3c4:	ldr	w0, [sp, #156]
   3e3c8:	add	w0, w0, #0x1
   3e3cc:	str	w0, [sp, #156]
   3e3d0:	ldr	w1, [sp, #156]
   3e3d4:	ldr	x0, [sp, #24]
   3e3d8:	bl	3a67c <__asan_cplus_demangle_fill_dtor@@Base+0x4f4>
   3e3dc:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e3e0:	ldrb	w0, [sp, #71]
   3e3e4:	cmp	w0, #0x2f
   3e3e8:	b.ls	3e3f8 <__asan_cplus_demangle_type@@Base+0x1d64>  // b.plast
   3e3ec:	ldrb	w0, [sp, #71]
   3e3f0:	cmp	w0, #0x39
   3e3f4:	b.ls	3e41c <__asan_cplus_demangle_type@@Base+0x1d88>  // b.plast
   3e3f8:	ldrb	w0, [sp, #71]
   3e3fc:	cmp	w0, #0x6f
   3e400:	b.ne	3e498 <__asan_cplus_demangle_type@@Base+0x1e04>  // b.any
   3e404:	ldr	x0, [sp, #24]
   3e408:	ldr	x0, [x0, #24]
   3e40c:	add	x0, x0, #0x1
   3e410:	ldrb	w0, [x0]
   3e414:	cmp	w0, #0x6e
   3e418:	b.ne	3e498 <__asan_cplus_demangle_type@@Base+0x1e04>  // b.any
   3e41c:	ldrb	w0, [sp, #71]
   3e420:	cmp	w0, #0x6f
   3e424:	b.ne	3e43c <__asan_cplus_demangle_type@@Base+0x1da8>  // b.any
   3e428:	ldr	x0, [sp, #24]
   3e42c:	ldr	x0, [x0, #24]
   3e430:	add	x1, x0, #0x2
   3e434:	ldr	x0, [sp, #24]
   3e438:	str	x1, [x0, #24]
   3e43c:	ldr	x0, [sp, #24]
   3e440:	bl	3b140 <__asan_cplus_demangle_mangled_name@@Base+0xa1c>
   3e444:	str	x0, [sp, #32]
   3e448:	ldr	x0, [sp, #32]
   3e44c:	cmp	x0, #0x0
   3e450:	b.ne	3e45c <__asan_cplus_demangle_type@@Base+0x1dc8>  // b.any
   3e454:	mov	x0, #0x0                   	// #0
   3e458:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e45c:	ldr	x0, [sp, #24]
   3e460:	ldr	x0, [x0, #24]
   3e464:	ldrb	w0, [x0]
   3e468:	cmp	w0, #0x49
   3e46c:	b.ne	3e490 <__asan_cplus_demangle_type@@Base+0x1dfc>  // b.any
   3e470:	ldr	x0, [sp, #24]
   3e474:	bl	3de08 <__asan_cplus_demangle_type@@Base+0x1774>
   3e478:	mov	x3, x0
   3e47c:	ldr	x2, [sp, #32]
   3e480:	mov	w1, #0x4                   	// #4
   3e484:	ldr	x0, [sp, #24]
   3e488:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3e48c:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e490:	ldr	x0, [sp, #32]
   3e494:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e498:	ldrb	w0, [sp, #71]
   3e49c:	cmp	w0, #0x69
   3e4a0:	b.eq	3e4b0 <__asan_cplus_demangle_type@@Base+0x1e1c>  // b.none
   3e4a4:	ldrb	w0, [sp, #71]
   3e4a8:	cmp	w0, #0x74
   3e4ac:	b.ne	3e53c <__asan_cplus_demangle_type@@Base+0x1ea8>  // b.any
   3e4b0:	ldr	x0, [sp, #24]
   3e4b4:	ldr	x0, [x0, #24]
   3e4b8:	add	x0, x0, #0x1
   3e4bc:	ldrb	w0, [x0]
   3e4c0:	cmp	w0, #0x6c
   3e4c4:	b.ne	3e53c <__asan_cplus_demangle_type@@Base+0x1ea8>  // b.any
   3e4c8:	str	xzr, [sp, #144]
   3e4cc:	ldr	x0, [sp, #24]
   3e4d0:	ldr	x0, [x0, #24]
   3e4d4:	add	x1, x0, #0x2
   3e4d8:	ldr	x0, [sp, #24]
   3e4dc:	str	x1, [x0, #24]
   3e4e0:	ldrb	w0, [sp, #71]
   3e4e4:	cmp	w0, #0x74
   3e4e8:	b.ne	3e4f8 <__asan_cplus_demangle_type@@Base+0x1e64>  // b.any
   3e4ec:	ldr	x0, [sp, #24]
   3e4f0:	bl	6650 <__asan_cplus_demangle_type@plt>
   3e4f4:	str	x0, [sp, #144]
   3e4f8:	ldr	x0, [sp, #24]
   3e4fc:	ldr	x0, [x0, #24]
   3e500:	add	x0, x0, #0x1
   3e504:	ldrb	w0, [x0]
   3e508:	cmp	w0, #0x0
   3e50c:	b.ne	3e518 <__asan_cplus_demangle_type@@Base+0x1e84>  // b.any
   3e510:	mov	x0, #0x0                   	// #0
   3e514:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e518:	mov	w1, #0x45                  	// #69
   3e51c:	ldr	x0, [sp, #24]
   3e520:	bl	3e054 <__asan_cplus_demangle_type@@Base+0x19c0>
   3e524:	mov	x3, x0
   3e528:	ldr	x2, [sp, #144]
   3e52c:	mov	w1, #0x31                  	// #49
   3e530:	ldr	x0, [sp, #24]
   3e534:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3e538:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e53c:	str	xzr, [sp, #136]
   3e540:	ldr	x0, [sp, #24]
   3e544:	bl	3b6b0 <__asan_cplus_demangle_mangled_name@@Base+0xf8c>
   3e548:	str	x0, [sp, #40]
   3e54c:	ldr	x0, [sp, #40]
   3e550:	cmp	x0, #0x0
   3e554:	b.ne	3e560 <__asan_cplus_demangle_type@@Base+0x1ecc>  // b.any
   3e558:	mov	x0, #0x0                   	// #0
   3e55c:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e560:	ldr	x0, [sp, #40]
   3e564:	ldr	w0, [x0]
   3e568:	cmp	w0, #0x32
   3e56c:	b.ne	3e5dc <__asan_cplus_demangle_type@@Base+0x1f48>  // b.any
   3e570:	ldr	x0, [sp, #40]
   3e574:	ldr	x0, [x0, #8]
   3e578:	ldr	x0, [x0]
   3e57c:	str	x0, [sp, #136]
   3e580:	ldr	x0, [sp, #24]
   3e584:	ldr	w1, [x0, #72]
   3e588:	ldr	x0, [sp, #40]
   3e58c:	ldr	x0, [x0, #8]
   3e590:	ldr	w0, [x0, #16]
   3e594:	sub	w0, w0, #0x2
   3e598:	add	w1, w1, w0
   3e59c:	ldr	x0, [sp, #24]
   3e5a0:	str	w1, [x0, #72]
   3e5a4:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   3e5a8:	add	x1, x0, #0xa90
   3e5ac:	ldr	x0, [sp, #136]
   3e5b0:	bl	6a30 <__asan_internal_strcmp@plt>
   3e5b4:	cmp	w0, #0x0
   3e5b8:	b.ne	3e5dc <__asan_cplus_demangle_type@@Base+0x1f48>  // b.any
   3e5bc:	ldr	x0, [sp, #24]
   3e5c0:	bl	6650 <__asan_cplus_demangle_type@plt>
   3e5c4:	mov	x3, x0
   3e5c8:	ldr	x2, [sp, #40]
   3e5cc:	mov	w1, #0x37                  	// #55
   3e5d0:	ldr	x0, [sp, #24]
   3e5d4:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3e5d8:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e5dc:	ldr	x0, [sp, #40]
   3e5e0:	ldr	w0, [x0]
   3e5e4:	cmp	w0, #0x34
   3e5e8:	b.eq	3e630 <__asan_cplus_demangle_type@@Base+0x1f9c>  // b.none
   3e5ec:	cmp	w0, #0x34
   3e5f0:	b.hi	3e604 <__asan_cplus_demangle_type@@Base+0x1f70>  // b.pmore
   3e5f4:	cmp	w0, #0x32
   3e5f8:	b.eq	3e60c <__asan_cplus_demangle_type@@Base+0x1f78>  // b.none
   3e5fc:	cmp	w0, #0x33
   3e600:	b.eq	3e620 <__asan_cplus_demangle_type@@Base+0x1f8c>  // b.none
   3e604:	mov	x0, #0x0                   	// #0
   3e608:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e60c:	ldr	x0, [sp, #40]
   3e610:	ldr	x0, [x0, #8]
   3e614:	ldr	w0, [x0, #20]
   3e618:	str	w0, [sp, #132]
   3e61c:	b	3e63c <__asan_cplus_demangle_type@@Base+0x1fa8>
   3e620:	ldr	x0, [sp, #40]
   3e624:	ldr	w0, [x0, #8]
   3e628:	str	w0, [sp, #132]
   3e62c:	b	3e63c <__asan_cplus_demangle_type@@Base+0x1fa8>
   3e630:	mov	w0, #0x1                   	// #1
   3e634:	str	w0, [sp, #132]
   3e638:	nop
   3e63c:	ldr	w0, [sp, #132]
   3e640:	cmp	w0, #0x3
   3e644:	b.eq	3e924 <__asan_cplus_demangle_type@@Base+0x2290>  // b.none
   3e648:	ldr	w0, [sp, #132]
   3e64c:	cmp	w0, #0x3
   3e650:	b.gt	3eb3c <__asan_cplus_demangle_type@@Base+0x24a8>
   3e654:	ldr	w0, [sp, #132]
   3e658:	cmp	w0, #0x2
   3e65c:	b.eq	3e7ec <__asan_cplus_demangle_type@@Base+0x2158>  // b.none
   3e660:	ldr	w0, [sp, #132]
   3e664:	cmp	w0, #0x2
   3e668:	b.gt	3eb3c <__asan_cplus_demangle_type@@Base+0x24a8>
   3e66c:	ldr	w0, [sp, #132]
   3e670:	cmp	w0, #0x0
   3e674:	b.eq	3e688 <__asan_cplus_demangle_type@@Base+0x1ff4>  // b.none
   3e678:	ldr	w0, [sp, #132]
   3e67c:	cmp	w0, #0x1
   3e680:	b.eq	3e6a0 <__asan_cplus_demangle_type@@Base+0x200c>  // b.none
   3e684:	b	3eb3c <__asan_cplus_demangle_type@@Base+0x24a8>
   3e688:	mov	x3, #0x0                   	// #0
   3e68c:	ldr	x2, [sp, #40]
   3e690:	mov	w1, #0x36                  	// #54
   3e694:	ldr	x0, [sp, #24]
   3e698:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3e69c:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e6a0:	str	wzr, [sp, #116]
   3e6a4:	ldr	x0, [sp, #136]
   3e6a8:	cmp	x0, #0x0
   3e6ac:	b.eq	3e724 <__asan_cplus_demangle_type@@Base+0x2090>  // b.none
   3e6b0:	ldr	x0, [sp, #136]
   3e6b4:	ldrb	w0, [x0]
   3e6b8:	cmp	w0, #0x70
   3e6bc:	b.eq	3e6d0 <__asan_cplus_demangle_type@@Base+0x203c>  // b.none
   3e6c0:	ldr	x0, [sp, #136]
   3e6c4:	ldrb	w0, [x0]
   3e6c8:	cmp	w0, #0x6d
   3e6cc:	b.ne	3e724 <__asan_cplus_demangle_type@@Base+0x2090>  // b.any
   3e6d0:	ldr	x0, [sp, #136]
   3e6d4:	add	x0, x0, #0x1
   3e6d8:	ldrb	w1, [x0]
   3e6dc:	ldr	x0, [sp, #136]
   3e6e0:	ldrb	w0, [x0]
   3e6e4:	cmp	w1, w0
   3e6e8:	b.ne	3e724 <__asan_cplus_demangle_type@@Base+0x2090>  // b.any
   3e6ec:	ldr	x0, [sp, #24]
   3e6f0:	ldr	x0, [x0, #24]
   3e6f4:	ldrb	w0, [x0]
   3e6f8:	cmp	w0, #0x5f
   3e6fc:	b.ne	3e71c <__asan_cplus_demangle_type@@Base+0x2088>  // b.any
   3e700:	ldr	x0, [sp, #24]
   3e704:	ldr	x0, [x0, #24]
   3e708:	add	x1, x0, #0x1
   3e70c:	ldr	x0, [sp, #24]
   3e710:	str	x1, [x0, #24]
   3e714:	mov	w0, #0x0                   	// #0
   3e718:	b	3e720 <__asan_cplus_demangle_type@@Base+0x208c>
   3e71c:	mov	w0, #0x1                   	// #1
   3e720:	str	w0, [sp, #116]
   3e724:	ldr	x0, [sp, #40]
   3e728:	ldr	w0, [x0]
   3e72c:	cmp	w0, #0x34
   3e730:	b.ne	3e770 <__asan_cplus_demangle_type@@Base+0x20dc>  // b.any
   3e734:	ldr	x0, [sp, #24]
   3e738:	ldr	x0, [x0, #24]
   3e73c:	ldrb	w0, [x0]
   3e740:	cmp	w0, #0x5f
   3e744:	b.ne	3e770 <__asan_cplus_demangle_type@@Base+0x20dc>  // b.any
   3e748:	ldr	x0, [sp, #24]
   3e74c:	ldr	x0, [x0, #24]
   3e750:	add	x1, x0, #0x1
   3e754:	ldr	x0, [sp, #24]
   3e758:	str	x1, [x0, #24]
   3e75c:	mov	w1, #0x45                  	// #69
   3e760:	ldr	x0, [sp, #24]
   3e764:	bl	3e054 <__asan_cplus_demangle_type@@Base+0x19c0>
   3e768:	str	x0, [sp, #120]
   3e76c:	b	3e7b0 <__asan_cplus_demangle_type@@Base+0x211c>
   3e770:	ldr	x0, [sp, #136]
   3e774:	cmp	x0, #0x0
   3e778:	b.eq	3e7a4 <__asan_cplus_demangle_type@@Base+0x2110>  // b.none
   3e77c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   3e780:	add	x1, x0, #0xa58
   3e784:	ldr	x0, [sp, #136]
   3e788:	bl	6a30 <__asan_internal_strcmp@plt>
   3e78c:	cmp	w0, #0x0
   3e790:	b.ne	3e7a4 <__asan_cplus_demangle_type@@Base+0x2110>  // b.any
   3e794:	ldr	x0, [sp, #24]
   3e798:	bl	3de68 <__asan_cplus_demangle_type@@Base+0x17d4>
   3e79c:	str	x0, [sp, #120]
   3e7a0:	b	3e7b0 <__asan_cplus_demangle_type@@Base+0x211c>
   3e7a4:	ldr	x0, [sp, #24]
   3e7a8:	bl	3e1d8 <__asan_cplus_demangle_type@@Base+0x1b44>
   3e7ac:	str	x0, [sp, #120]
   3e7b0:	ldr	w0, [sp, #116]
   3e7b4:	cmp	w0, #0x0
   3e7b8:	b.eq	3e7d4 <__asan_cplus_demangle_type@@Base+0x2140>  // b.none
   3e7bc:	ldr	x3, [sp, #120]
   3e7c0:	ldr	x2, [sp, #120]
   3e7c4:	mov	w1, #0x39                  	// #57
   3e7c8:	ldr	x0, [sp, #24]
   3e7cc:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3e7d0:	str	x0, [sp, #120]
   3e7d4:	ldr	x3, [sp, #120]
   3e7d8:	ldr	x2, [sp, #40]
   3e7dc:	mov	w1, #0x37                  	// #55
   3e7e0:	ldr	x0, [sp, #24]
   3e7e4:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3e7e8:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e7ec:	ldr	x0, [sp, #136]
   3e7f0:	cmp	x0, #0x0
   3e7f4:	b.ne	3e800 <__asan_cplus_demangle_type@@Base+0x216c>  // b.any
   3e7f8:	mov	x0, #0x0                   	// #0
   3e7fc:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e800:	ldr	x0, [sp, #40]
   3e804:	bl	3e158 <__asan_cplus_demangle_type@@Base+0x1ac4>
   3e808:	cmp	w0, #0x0
   3e80c:	b.eq	3e820 <__asan_cplus_demangle_type@@Base+0x218c>  // b.none
   3e810:	ldr	x0, [sp, #24]
   3e814:	bl	6650 <__asan_cplus_demangle_type@plt>
   3e818:	str	x0, [sp, #104]
   3e81c:	b	3e84c <__asan_cplus_demangle_type@@Base+0x21b8>
   3e820:	ldr	x0, [sp, #136]
   3e824:	ldrb	w0, [x0]
   3e828:	cmp	w0, #0x66
   3e82c:	b.ne	3e840 <__asan_cplus_demangle_type@@Base+0x21ac>  // b.any
   3e830:	ldr	x0, [sp, #24]
   3e834:	bl	3b6b0 <__asan_cplus_demangle_mangled_name@@Base+0xf8c>
   3e838:	str	x0, [sp, #104]
   3e83c:	b	3e84c <__asan_cplus_demangle_type@@Base+0x21b8>
   3e840:	ldr	x0, [sp, #24]
   3e844:	bl	3e1d8 <__asan_cplus_demangle_type@@Base+0x1b44>
   3e848:	str	x0, [sp, #104]
   3e84c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   3e850:	add	x1, x0, #0x728
   3e854:	ldr	x0, [sp, #136]
   3e858:	bl	6a30 <__asan_internal_strcmp@plt>
   3e85c:	cmp	w0, #0x0
   3e860:	b.ne	3e878 <__asan_cplus_demangle_type@@Base+0x21e4>  // b.any
   3e864:	mov	w1, #0x45                  	// #69
   3e868:	ldr	x0, [sp, #24]
   3e86c:	bl	3e054 <__asan_cplus_demangle_type@@Base+0x19c0>
   3e870:	str	x0, [sp, #96]
   3e874:	b	3e8f8 <__asan_cplus_demangle_type@@Base+0x2264>
   3e878:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   3e87c:	add	x1, x0, #0x7c8
   3e880:	ldr	x0, [sp, #136]
   3e884:	bl	6a30 <__asan_internal_strcmp@plt>
   3e888:	cmp	w0, #0x0
   3e88c:	b.eq	3e8a8 <__asan_cplus_demangle_type@@Base+0x2214>  // b.none
   3e890:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   3e894:	add	x1, x0, #0x9d8
   3e898:	ldr	x0, [sp, #136]
   3e89c:	bl	6a30 <__asan_internal_strcmp@plt>
   3e8a0:	cmp	w0, #0x0
   3e8a4:	b.ne	3e8ec <__asan_cplus_demangle_type@@Base+0x2258>  // b.any
   3e8a8:	ldr	x0, [sp, #24]
   3e8ac:	bl	3b140 <__asan_cplus_demangle_mangled_name@@Base+0xa1c>
   3e8b0:	str	x0, [sp, #96]
   3e8b4:	ldr	x0, [sp, #24]
   3e8b8:	ldr	x0, [x0, #24]
   3e8bc:	ldrb	w0, [x0]
   3e8c0:	cmp	w0, #0x49
   3e8c4:	b.ne	3e8f8 <__asan_cplus_demangle_type@@Base+0x2264>  // b.any
   3e8c8:	ldr	x0, [sp, #24]
   3e8cc:	bl	3de08 <__asan_cplus_demangle_type@@Base+0x1774>
   3e8d0:	mov	x3, x0
   3e8d4:	ldr	x2, [sp, #96]
   3e8d8:	mov	w1, #0x4                   	// #4
   3e8dc:	ldr	x0, [sp, #24]
   3e8e0:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3e8e4:	str	x0, [sp, #96]
   3e8e8:	b	3e8f8 <__asan_cplus_demangle_type@@Base+0x2264>
   3e8ec:	ldr	x0, [sp, #24]
   3e8f0:	bl	3e1d8 <__asan_cplus_demangle_type@@Base+0x1b44>
   3e8f4:	str	x0, [sp, #96]
   3e8f8:	ldr	x3, [sp, #96]
   3e8fc:	ldr	x2, [sp, #104]
   3e900:	mov	w1, #0x39                  	// #57
   3e904:	ldr	x0, [sp, #24]
   3e908:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3e90c:	mov	x3, x0
   3e910:	ldr	x2, [sp, #40]
   3e914:	mov	w1, #0x38                  	// #56
   3e918:	ldr	x0, [sp, #24]
   3e91c:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3e920:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e924:	ldr	x0, [sp, #136]
   3e928:	cmp	x0, #0x0
   3e92c:	b.ne	3e938 <__asan_cplus_demangle_type@@Base+0x22a4>  // b.any
   3e930:	mov	x0, #0x0                   	// #0
   3e934:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e938:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   3e93c:	add	x1, x0, #0x9e8
   3e940:	ldr	x0, [sp, #136]
   3e944:	bl	6a30 <__asan_internal_strcmp@plt>
   3e948:	cmp	w0, #0x0
   3e94c:	b.ne	3e988 <__asan_cplus_demangle_type@@Base+0x22f4>  // b.any
   3e950:	ldr	x0, [sp, #24]
   3e954:	bl	3e1d8 <__asan_cplus_demangle_type@@Base+0x1b44>
   3e958:	str	x0, [sp, #88]
   3e95c:	ldr	x0, [sp, #24]
   3e960:	bl	3e1d8 <__asan_cplus_demangle_type@@Base+0x1b44>
   3e964:	str	x0, [sp, #80]
   3e968:	ldr	x0, [sp, #24]
   3e96c:	bl	3e1d8 <__asan_cplus_demangle_type@@Base+0x1b44>
   3e970:	str	x0, [sp, #72]
   3e974:	ldr	x0, [sp, #72]
   3e978:	cmp	x0, #0x0
   3e97c:	b.ne	3eafc <__asan_cplus_demangle_type@@Base+0x2468>  // b.any
   3e980:	mov	x0, #0x0                   	// #0
   3e984:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e988:	ldr	x0, [sp, #136]
   3e98c:	ldrb	w0, [x0]
   3e990:	cmp	w0, #0x66
   3e994:	b.ne	3e9d0 <__asan_cplus_demangle_type@@Base+0x233c>  // b.any
   3e998:	ldr	x0, [sp, #24]
   3e99c:	bl	3b6b0 <__asan_cplus_demangle_mangled_name@@Base+0xf8c>
   3e9a0:	str	x0, [sp, #88]
   3e9a4:	ldr	x0, [sp, #24]
   3e9a8:	bl	3e1d8 <__asan_cplus_demangle_type@@Base+0x1b44>
   3e9ac:	str	x0, [sp, #80]
   3e9b0:	ldr	x0, [sp, #24]
   3e9b4:	bl	3e1d8 <__asan_cplus_demangle_type@@Base+0x1b44>
   3e9b8:	str	x0, [sp, #72]
   3e9bc:	ldr	x0, [sp, #72]
   3e9c0:	cmp	x0, #0x0
   3e9c4:	b.ne	3eafc <__asan_cplus_demangle_type@@Base+0x2468>  // b.any
   3e9c8:	mov	x0, #0x0                   	// #0
   3e9cc:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3e9d0:	ldr	x0, [sp, #136]
   3e9d4:	ldrb	w0, [x0]
   3e9d8:	cmp	w0, #0x6e
   3e9dc:	b.ne	3eaf4 <__asan_cplus_demangle_type@@Base+0x2460>  // b.any
   3e9e0:	ldr	x0, [sp, #136]
   3e9e4:	add	x0, x0, #0x1
   3e9e8:	ldrb	w0, [x0]
   3e9ec:	cmp	w0, #0x77
   3e9f0:	b.eq	3ea10 <__asan_cplus_demangle_type@@Base+0x237c>  // b.none
   3e9f4:	ldr	x0, [sp, #136]
   3e9f8:	add	x0, x0, #0x1
   3e9fc:	ldrb	w0, [x0]
   3ea00:	cmp	w0, #0x61
   3ea04:	b.eq	3ea10 <__asan_cplus_demangle_type@@Base+0x237c>  // b.none
   3ea08:	mov	x0, #0x0                   	// #0
   3ea0c:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3ea10:	mov	w1, #0x5f                  	// #95
   3ea14:	ldr	x0, [sp, #24]
   3ea18:	bl	3e054 <__asan_cplus_demangle_type@@Base+0x19c0>
   3ea1c:	str	x0, [sp, #88]
   3ea20:	ldr	x0, [sp, #24]
   3ea24:	bl	6650 <__asan_cplus_demangle_type@plt>
   3ea28:	str	x0, [sp, #80]
   3ea2c:	ldr	x0, [sp, #24]
   3ea30:	ldr	x0, [x0, #24]
   3ea34:	ldrb	w0, [x0]
   3ea38:	cmp	w0, #0x45
   3ea3c:	b.ne	3ea5c <__asan_cplus_demangle_type@@Base+0x23c8>  // b.any
   3ea40:	ldr	x0, [sp, #24]
   3ea44:	ldr	x0, [x0, #24]
   3ea48:	add	x1, x0, #0x1
   3ea4c:	ldr	x0, [sp, #24]
   3ea50:	str	x1, [x0, #24]
   3ea54:	str	xzr, [sp, #72]
   3ea58:	b	3eafc <__asan_cplus_demangle_type@@Base+0x2468>
   3ea5c:	ldr	x0, [sp, #24]
   3ea60:	ldr	x0, [x0, #24]
   3ea64:	ldrb	w0, [x0]
   3ea68:	cmp	w0, #0x70
   3ea6c:	b.ne	3eab0 <__asan_cplus_demangle_type@@Base+0x241c>  // b.any
   3ea70:	ldr	x0, [sp, #24]
   3ea74:	ldr	x0, [x0, #24]
   3ea78:	add	x0, x0, #0x1
   3ea7c:	ldrb	w0, [x0]
   3ea80:	cmp	w0, #0x69
   3ea84:	b.ne	3eab0 <__asan_cplus_demangle_type@@Base+0x241c>  // b.any
   3ea88:	ldr	x0, [sp, #24]
   3ea8c:	ldr	x0, [x0, #24]
   3ea90:	add	x1, x0, #0x2
   3ea94:	ldr	x0, [sp, #24]
   3ea98:	str	x1, [x0, #24]
   3ea9c:	mov	w1, #0x45                  	// #69
   3eaa0:	ldr	x0, [sp, #24]
   3eaa4:	bl	3e054 <__asan_cplus_demangle_type@@Base+0x19c0>
   3eaa8:	str	x0, [sp, #72]
   3eaac:	b	3eafc <__asan_cplus_demangle_type@@Base+0x2468>
   3eab0:	ldr	x0, [sp, #24]
   3eab4:	ldr	x0, [x0, #24]
   3eab8:	ldrb	w0, [x0]
   3eabc:	cmp	w0, #0x69
   3eac0:	b.ne	3eaec <__asan_cplus_demangle_type@@Base+0x2458>  // b.any
   3eac4:	ldr	x0, [sp, #24]
   3eac8:	ldr	x0, [x0, #24]
   3eacc:	add	x0, x0, #0x1
   3ead0:	ldrb	w0, [x0]
   3ead4:	cmp	w0, #0x6c
   3ead8:	b.ne	3eaec <__asan_cplus_demangle_type@@Base+0x2458>  // b.any
   3eadc:	ldr	x0, [sp, #24]
   3eae0:	bl	3e1d8 <__asan_cplus_demangle_type@@Base+0x1b44>
   3eae4:	str	x0, [sp, #72]
   3eae8:	b	3eafc <__asan_cplus_demangle_type@@Base+0x2468>
   3eaec:	mov	x0, #0x0                   	// #0
   3eaf0:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3eaf4:	mov	x0, #0x0                   	// #0
   3eaf8:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3eafc:	ldr	x3, [sp, #72]
   3eb00:	ldr	x2, [sp, #80]
   3eb04:	mov	w1, #0x3c                  	// #60
   3eb08:	ldr	x0, [sp, #24]
   3eb0c:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3eb10:	mov	x3, x0
   3eb14:	ldr	x2, [sp, #88]
   3eb18:	mov	w1, #0x3b                  	// #59
   3eb1c:	ldr	x0, [sp, #24]
   3eb20:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3eb24:	mov	x3, x0
   3eb28:	ldr	x2, [sp, #40]
   3eb2c:	mov	w1, #0x3a                  	// #58
   3eb30:	ldr	x0, [sp, #24]
   3eb34:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3eb38:	b	3eb40 <__asan_cplus_demangle_type@@Base+0x24ac>
   3eb3c:	mov	x0, #0x0                   	// #0
   3eb40:	ldp	x29, x30, [sp], #160
   3eb44:	ret
   3eb48:	stp	x29, x30, [sp, #-48]!
   3eb4c:	mov	x29, sp
   3eb50:	str	x0, [sp, #24]
   3eb54:	ldr	x0, [sp, #24]
   3eb58:	ldr	w0, [x0, #76]
   3eb5c:	str	w0, [sp, #44]
   3eb60:	ldr	x0, [sp, #24]
   3eb64:	mov	w1, #0x1                   	// #1
   3eb68:	str	w1, [x0, #76]
   3eb6c:	ldr	x0, [sp, #24]
   3eb70:	bl	3e1d8 <__asan_cplus_demangle_type@@Base+0x1b44>
   3eb74:	str	x0, [sp, #32]
   3eb78:	ldr	x0, [sp, #24]
   3eb7c:	ldr	w1, [sp, #44]
   3eb80:	str	w1, [x0, #76]
   3eb84:	ldr	x0, [sp, #32]
   3eb88:	ldp	x29, x30, [sp], #48
   3eb8c:	ret
   3eb90:	stp	x29, x30, [sp, #-64]!
   3eb94:	mov	x29, sp
   3eb98:	str	x0, [sp, #24]
   3eb9c:	ldr	x0, [sp, #24]
   3eba0:	ldr	x0, [x0, #24]
   3eba4:	ldrb	w0, [x0]
   3eba8:	cmp	w0, #0x4c
   3ebac:	b.ne	3ebcc <__asan_cplus_demangle_type@@Base+0x2538>  // b.any
   3ebb0:	ldr	x0, [sp, #24]
   3ebb4:	ldr	x0, [x0, #24]
   3ebb8:	add	x1, x0, #0x1
   3ebbc:	ldr	x0, [sp, #24]
   3ebc0:	str	x1, [x0, #24]
   3ebc4:	mov	w0, #0x0                   	// #0
   3ebc8:	b	3ebd0 <__asan_cplus_demangle_type@@Base+0x253c>
   3ebcc:	mov	w0, #0x1                   	// #1
   3ebd0:	cmp	w0, #0x0
   3ebd4:	b.eq	3ebe0 <__asan_cplus_demangle_type@@Base+0x254c>  // b.none
   3ebd8:	mov	x0, #0x0                   	// #0
   3ebdc:	b	3ed8c <__asan_cplus_demangle_type@@Base+0x26f8>
   3ebe0:	ldr	x0, [sp, #24]
   3ebe4:	ldr	x0, [x0, #24]
   3ebe8:	ldrb	w0, [x0]
   3ebec:	cmp	w0, #0x5f
   3ebf0:	b.eq	3ec08 <__asan_cplus_demangle_type@@Base+0x2574>  // b.none
   3ebf4:	ldr	x0, [sp, #24]
   3ebf8:	ldr	x0, [x0, #24]
   3ebfc:	ldrb	w0, [x0]
   3ec00:	cmp	w0, #0x5a
   3ec04:	b.ne	3ec1c <__asan_cplus_demangle_type@@Base+0x2588>  // b.any
   3ec08:	mov	w1, #0x0                   	// #0
   3ec0c:	ldr	x0, [sp, #24]
   3ec10:	bl	6bb0 <__asan_cplus_demangle_mangled_name@plt>
   3ec14:	str	x0, [sp, #56]
   3ec18:	b	3ed44 <__asan_cplus_demangle_type@@Base+0x26b0>
   3ec1c:	ldr	x0, [sp, #24]
   3ec20:	bl	6650 <__asan_cplus_demangle_type@plt>
   3ec24:	str	x0, [sp, #40]
   3ec28:	ldr	x0, [sp, #40]
   3ec2c:	cmp	x0, #0x0
   3ec30:	b.ne	3ec3c <__asan_cplus_demangle_type@@Base+0x25a8>  // b.any
   3ec34:	mov	x0, #0x0                   	// #0
   3ec38:	b	3ed8c <__asan_cplus_demangle_type@@Base+0x26f8>
   3ec3c:	ldr	x0, [sp, #40]
   3ec40:	ldr	w0, [x0]
   3ec44:	cmp	w0, #0x27
   3ec48:	b.ne	3ec80 <__asan_cplus_demangle_type@@Base+0x25ec>  // b.any
   3ec4c:	ldr	x0, [sp, #40]
   3ec50:	ldr	x0, [x0, #8]
   3ec54:	ldr	w0, [x0, #28]
   3ec58:	cmp	w0, #0x0
   3ec5c:	b.eq	3ec80 <__asan_cplus_demangle_type@@Base+0x25ec>  // b.none
   3ec60:	ldr	x0, [sp, #24]
   3ec64:	ldr	w1, [x0, #72]
   3ec68:	ldr	x0, [sp, #40]
   3ec6c:	ldr	x0, [x0, #8]
   3ec70:	ldr	w0, [x0, #8]
   3ec74:	sub	w1, w1, w0
   3ec78:	ldr	x0, [sp, #24]
   3ec7c:	str	w1, [x0, #72]
   3ec80:	mov	w0, #0x3d                  	// #61
   3ec84:	str	w0, [sp, #52]
   3ec88:	ldr	x0, [sp, #24]
   3ec8c:	ldr	x0, [x0, #24]
   3ec90:	ldrb	w0, [x0]
   3ec94:	cmp	w0, #0x6e
   3ec98:	b.ne	3ecb8 <__asan_cplus_demangle_type@@Base+0x2624>  // b.any
   3ec9c:	mov	w0, #0x3e                  	// #62
   3eca0:	str	w0, [sp, #52]
   3eca4:	ldr	x0, [sp, #24]
   3eca8:	ldr	x0, [x0, #24]
   3ecac:	add	x1, x0, #0x1
   3ecb0:	ldr	x0, [sp, #24]
   3ecb4:	str	x1, [x0, #24]
   3ecb8:	ldr	x0, [sp, #24]
   3ecbc:	ldr	x0, [x0, #24]
   3ecc0:	str	x0, [sp, #32]
   3ecc4:	b	3ecf8 <__asan_cplus_demangle_type@@Base+0x2664>
   3ecc8:	ldr	x0, [sp, #24]
   3eccc:	ldr	x0, [x0, #24]
   3ecd0:	ldrb	w0, [x0]
   3ecd4:	cmp	w0, #0x0
   3ecd8:	b.ne	3ece4 <__asan_cplus_demangle_type@@Base+0x2650>  // b.any
   3ecdc:	mov	x0, #0x0                   	// #0
   3ece0:	b	3ed8c <__asan_cplus_demangle_type@@Base+0x26f8>
   3ece4:	ldr	x0, [sp, #24]
   3ece8:	ldr	x0, [x0, #24]
   3ecec:	add	x1, x0, #0x1
   3ecf0:	ldr	x0, [sp, #24]
   3ecf4:	str	x1, [x0, #24]
   3ecf8:	ldr	x0, [sp, #24]
   3ecfc:	ldr	x0, [x0, #24]
   3ed00:	ldrb	w0, [x0]
   3ed04:	cmp	w0, #0x45
   3ed08:	b.ne	3ecc8 <__asan_cplus_demangle_type@@Base+0x2634>  // b.any
   3ed0c:	ldr	x0, [sp, #24]
   3ed10:	ldr	x1, [x0, #24]
   3ed14:	ldr	x0, [sp, #32]
   3ed18:	sub	x0, x1, x0
   3ed1c:	mov	w2, w0
   3ed20:	ldr	x1, [sp, #32]
   3ed24:	ldr	x0, [sp, #24]
   3ed28:	bl	3a3f8 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   3ed2c:	mov	x3, x0
   3ed30:	ldr	x2, [sp, #40]
   3ed34:	ldr	w1, [sp, #52]
   3ed38:	ldr	x0, [sp, #24]
   3ed3c:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3ed40:	str	x0, [sp, #56]
   3ed44:	ldr	x0, [sp, #24]
   3ed48:	ldr	x0, [x0, #24]
   3ed4c:	ldrb	w0, [x0]
   3ed50:	cmp	w0, #0x45
   3ed54:	b.ne	3ed74 <__asan_cplus_demangle_type@@Base+0x26e0>  // b.any
   3ed58:	ldr	x0, [sp, #24]
   3ed5c:	ldr	x0, [x0, #24]
   3ed60:	add	x1, x0, #0x1
   3ed64:	ldr	x0, [sp, #24]
   3ed68:	str	x1, [x0, #24]
   3ed6c:	mov	w0, #0x0                   	// #0
   3ed70:	b	3ed78 <__asan_cplus_demangle_type@@Base+0x26e4>
   3ed74:	mov	w0, #0x1                   	// #1
   3ed78:	cmp	w0, #0x0
   3ed7c:	b.eq	3ed88 <__asan_cplus_demangle_type@@Base+0x26f4>  // b.none
   3ed80:	mov	x0, #0x0                   	// #0
   3ed84:	b	3ed8c <__asan_cplus_demangle_type@@Base+0x26f8>
   3ed88:	ldr	x0, [sp, #56]
   3ed8c:	ldp	x29, x30, [sp], #64
   3ed90:	ret
   3ed94:	stp	x29, x30, [sp, #-64]!
   3ed98:	mov	x29, sp
   3ed9c:	str	x0, [sp, #24]
   3eda0:	ldr	x0, [sp, #24]
   3eda4:	ldr	x0, [x0, #24]
   3eda8:	ldrb	w0, [x0]
   3edac:	cmp	w0, #0x5a
   3edb0:	b.ne	3edd0 <__asan_cplus_demangle_type@@Base+0x273c>  // b.any
   3edb4:	ldr	x0, [sp, #24]
   3edb8:	ldr	x0, [x0, #24]
   3edbc:	add	x1, x0, #0x1
   3edc0:	ldr	x0, [sp, #24]
   3edc4:	str	x1, [x0, #24]
   3edc8:	mov	w0, #0x0                   	// #0
   3edcc:	b	3edd4 <__asan_cplus_demangle_type@@Base+0x2740>
   3edd0:	mov	w0, #0x1                   	// #1
   3edd4:	cmp	w0, #0x0
   3edd8:	b.eq	3ede4 <__asan_cplus_demangle_type@@Base+0x2750>  // b.none
   3eddc:	mov	x0, #0x0                   	// #0
   3ede0:	b	3efac <__asan_cplus_demangle_type@@Base+0x2918>
   3ede4:	mov	w1, #0x0                   	// #0
   3ede8:	ldr	x0, [sp, #24]
   3edec:	bl	3a9e0 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   3edf0:	str	x0, [sp, #40]
   3edf4:	ldr	x0, [sp, #40]
   3edf8:	cmp	x0, #0x0
   3edfc:	b.ne	3ee08 <__asan_cplus_demangle_type@@Base+0x2774>  // b.any
   3ee00:	mov	x0, #0x0                   	// #0
   3ee04:	b	3efac <__asan_cplus_demangle_type@@Base+0x2918>
   3ee08:	ldr	x0, [sp, #24]
   3ee0c:	ldr	x0, [x0, #24]
   3ee10:	ldrb	w0, [x0]
   3ee14:	cmp	w0, #0x45
   3ee18:	b.ne	3ee38 <__asan_cplus_demangle_type@@Base+0x27a4>  // b.any
   3ee1c:	ldr	x0, [sp, #24]
   3ee20:	ldr	x0, [x0, #24]
   3ee24:	add	x1, x0, #0x1
   3ee28:	ldr	x0, [sp, #24]
   3ee2c:	str	x1, [x0, #24]
   3ee30:	mov	w0, #0x0                   	// #0
   3ee34:	b	3ee3c <__asan_cplus_demangle_type@@Base+0x27a8>
   3ee38:	mov	w0, #0x1                   	// #1
   3ee3c:	cmp	w0, #0x0
   3ee40:	b.eq	3ee4c <__asan_cplus_demangle_type@@Base+0x27b8>  // b.none
   3ee44:	mov	x0, #0x0                   	// #0
   3ee48:	b	3efac <__asan_cplus_demangle_type@@Base+0x2918>
   3ee4c:	ldr	x0, [sp, #24]
   3ee50:	ldr	x0, [x0, #24]
   3ee54:	ldrb	w0, [x0]
   3ee58:	cmp	w0, #0x73
   3ee5c:	b.ne	3eea8 <__asan_cplus_demangle_type@@Base+0x2814>  // b.any
   3ee60:	ldr	x0, [sp, #24]
   3ee64:	ldr	x0, [x0, #24]
   3ee68:	add	x1, x0, #0x1
   3ee6c:	ldr	x0, [sp, #24]
   3ee70:	str	x1, [x0, #24]
   3ee74:	ldr	x0, [sp, #24]
   3ee78:	bl	3efb4 <__asan_cplus_demangle_type@@Base+0x2920>
   3ee7c:	cmp	w0, #0x0
   3ee80:	b.ne	3ee8c <__asan_cplus_demangle_type@@Base+0x27f8>  // b.any
   3ee84:	mov	x0, #0x0                   	// #0
   3ee88:	b	3efac <__asan_cplus_demangle_type@@Base+0x2918>
   3ee8c:	mov	w2, #0xe                   	// #14
   3ee90:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   3ee94:	add	x1, x0, #0xdb0
   3ee98:	ldr	x0, [sp, #24]
   3ee9c:	bl	3a3f8 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   3eea0:	str	x0, [sp, #56]
   3eea4:	b	3ef68 <__asan_cplus_demangle_type@@Base+0x28d4>
   3eea8:	mov	w0, #0xffffffff            	// #-1
   3eeac:	str	w0, [sp, #52]
   3eeb0:	ldr	x0, [sp, #24]
   3eeb4:	ldr	x0, [x0, #24]
   3eeb8:	ldrb	w0, [x0]
   3eebc:	cmp	w0, #0x64
   3eec0:	b.ne	3eef8 <__asan_cplus_demangle_type@@Base+0x2864>  // b.any
   3eec4:	ldr	x0, [sp, #24]
   3eec8:	ldr	x0, [x0, #24]
   3eecc:	add	x1, x0, #0x1
   3eed0:	ldr	x0, [sp, #24]
   3eed4:	str	x1, [x0, #24]
   3eed8:	ldr	x0, [sp, #24]
   3eedc:	bl	3dce8 <__asan_cplus_demangle_type@@Base+0x1654>
   3eee0:	str	w0, [sp, #52]
   3eee4:	ldr	w0, [sp, #52]
   3eee8:	cmp	w0, #0x0
   3eeec:	b.ge	3eef8 <__asan_cplus_demangle_type@@Base+0x2864>  // b.tcont
   3eef0:	mov	x0, #0x0                   	// #0
   3eef4:	b	3efac <__asan_cplus_demangle_type@@Base+0x2918>
   3eef8:	ldr	x0, [sp, #24]
   3eefc:	bl	3ac00 <__asan_cplus_demangle_mangled_name@@Base+0x4dc>
   3ef00:	str	x0, [sp, #56]
   3ef04:	ldr	x0, [sp, #56]
   3ef08:	cmp	x0, #0x0
   3ef0c:	b.eq	3ef48 <__asan_cplus_demangle_type@@Base+0x28b4>  // b.none
   3ef10:	ldr	x0, [sp, #56]
   3ef14:	ldr	w0, [x0]
   3ef18:	cmp	w0, #0x46
   3ef1c:	b.eq	3ef48 <__asan_cplus_demangle_type@@Base+0x28b4>  // b.none
   3ef20:	ldr	x0, [sp, #56]
   3ef24:	ldr	w0, [x0]
   3ef28:	cmp	w0, #0x48
   3ef2c:	b.eq	3ef48 <__asan_cplus_demangle_type@@Base+0x28b4>  // b.none
   3ef30:	ldr	x0, [sp, #24]
   3ef34:	bl	3efb4 <__asan_cplus_demangle_type@@Base+0x2920>
   3ef38:	cmp	w0, #0x0
   3ef3c:	b.ne	3ef48 <__asan_cplus_demangle_type@@Base+0x28b4>  // b.any
   3ef40:	mov	x0, #0x0                   	// #0
   3ef44:	b	3efac <__asan_cplus_demangle_type@@Base+0x2918>
   3ef48:	ldr	w0, [sp, #52]
   3ef4c:	cmp	w0, #0x0
   3ef50:	b.lt	3ef68 <__asan_cplus_demangle_type@@Base+0x28d4>  // b.tstop
   3ef54:	ldr	x2, [sp, #56]
   3ef58:	ldr	w1, [sp, #52]
   3ef5c:	ldr	x0, [sp, #24]
   3ef60:	bl	3a53c <__asan_cplus_demangle_fill_dtor@@Base+0x3b4>
   3ef64:	str	x0, [sp, #56]
   3ef68:	ldr	x0, [sp, #40]
   3ef6c:	ldr	w0, [x0]
   3ef70:	cmp	w0, #0x3
   3ef74:	b.ne	3ef98 <__asan_cplus_demangle_type@@Base+0x2904>  // b.any
   3ef78:	ldr	x0, [sp, #40]
   3ef7c:	ldr	x0, [x0, #16]
   3ef80:	ldr	w0, [x0]
   3ef84:	cmp	w0, #0x29
   3ef88:	b.ne	3ef98 <__asan_cplus_demangle_type@@Base+0x2904>  // b.any
   3ef8c:	ldr	x0, [sp, #40]
   3ef90:	ldr	x0, [x0, #16]
   3ef94:	str	xzr, [x0, #8]
   3ef98:	ldr	x3, [sp, #56]
   3ef9c:	ldr	x2, [sp, #40]
   3efa0:	mov	w1, #0x2                   	// #2
   3efa4:	ldr	x0, [sp, #24]
   3efa8:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3efac:	ldp	x29, x30, [sp], #64
   3efb0:	ret
   3efb4:	stp	x29, x30, [sp, #-48]!
   3efb8:	mov	x29, sp
   3efbc:	str	x0, [sp, #24]
   3efc0:	mov	w0, #0x1                   	// #1
   3efc4:	str	w0, [sp, #44]
   3efc8:	ldr	x0, [sp, #24]
   3efcc:	ldr	x0, [x0, #24]
   3efd0:	ldrb	w0, [x0]
   3efd4:	cmp	w0, #0x5f
   3efd8:	b.eq	3efe4 <__asan_cplus_demangle_type@@Base+0x2950>  // b.none
   3efdc:	mov	w0, #0x1                   	// #1
   3efe0:	b	3f09c <__asan_cplus_demangle_type@@Base+0x2a08>
   3efe4:	ldr	x0, [sp, #24]
   3efe8:	ldr	x0, [x0, #24]
   3efec:	add	x1, x0, #0x1
   3eff0:	ldr	x0, [sp, #24]
   3eff4:	str	x1, [x0, #24]
   3eff8:	ldr	x0, [sp, #24]
   3effc:	ldr	x0, [x0, #24]
   3f000:	ldrb	w0, [x0]
   3f004:	cmp	w0, #0x5f
   3f008:	b.ne	3f02c <__asan_cplus_demangle_type@@Base+0x2998>  // b.any
   3f00c:	ldr	w0, [sp, #44]
   3f010:	add	w0, w0, #0x1
   3f014:	str	w0, [sp, #44]
   3f018:	ldr	x0, [sp, #24]
   3f01c:	ldr	x0, [x0, #24]
   3f020:	add	x1, x0, #0x1
   3f024:	ldr	x0, [sp, #24]
   3f028:	str	x1, [x0, #24]
   3f02c:	ldr	x0, [sp, #24]
   3f030:	bl	3b3d8 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   3f034:	str	w0, [sp, #40]
   3f038:	ldr	w0, [sp, #40]
   3f03c:	cmp	w0, #0x0
   3f040:	b.ge	3f04c <__asan_cplus_demangle_type@@Base+0x29b8>  // b.tcont
   3f044:	mov	w0, #0x0                   	// #0
   3f048:	b	3f09c <__asan_cplus_demangle_type@@Base+0x2a08>
   3f04c:	ldr	w0, [sp, #44]
   3f050:	cmp	w0, #0x1
   3f054:	b.le	3f098 <__asan_cplus_demangle_type@@Base+0x2a04>
   3f058:	ldr	w0, [sp, #40]
   3f05c:	cmp	w0, #0x9
   3f060:	b.le	3f098 <__asan_cplus_demangle_type@@Base+0x2a04>
   3f064:	ldr	x0, [sp, #24]
   3f068:	ldr	x0, [x0, #24]
   3f06c:	ldrb	w0, [x0]
   3f070:	cmp	w0, #0x5f
   3f074:	b.ne	3f090 <__asan_cplus_demangle_type@@Base+0x29fc>  // b.any
   3f078:	ldr	x0, [sp, #24]
   3f07c:	ldr	x0, [x0, #24]
   3f080:	add	x1, x0, #0x1
   3f084:	ldr	x0, [sp, #24]
   3f088:	str	x1, [x0, #24]
   3f08c:	b	3f098 <__asan_cplus_demangle_type@@Base+0x2a04>
   3f090:	mov	w0, #0x0                   	// #0
   3f094:	b	3f09c <__asan_cplus_demangle_type@@Base+0x2a08>
   3f098:	mov	w0, #0x1                   	// #1
   3f09c:	ldp	x29, x30, [sp], #48
   3f0a0:	ret
   3f0a4:	stp	x29, x30, [sp, #-64]!
   3f0a8:	mov	x29, sp
   3f0ac:	str	x0, [sp, #24]
   3f0b0:	ldr	x0, [sp, #24]
   3f0b4:	ldr	x0, [x0, #24]
   3f0b8:	ldrb	w0, [x0]
   3f0bc:	cmp	w0, #0x55
   3f0c0:	b.ne	3f0e0 <__asan_cplus_demangle_type@@Base+0x2a4c>  // b.any
   3f0c4:	ldr	x0, [sp, #24]
   3f0c8:	ldr	x0, [x0, #24]
   3f0cc:	add	x1, x0, #0x1
   3f0d0:	ldr	x0, [sp, #24]
   3f0d4:	str	x1, [x0, #24]
   3f0d8:	mov	w0, #0x0                   	// #0
   3f0dc:	b	3f0e4 <__asan_cplus_demangle_type@@Base+0x2a50>
   3f0e0:	mov	w0, #0x1                   	// #1
   3f0e4:	cmp	w0, #0x0
   3f0e8:	b.eq	3f0f4 <__asan_cplus_demangle_type@@Base+0x2a60>  // b.none
   3f0ec:	mov	x0, #0x0                   	// #0
   3f0f0:	b	3f218 <__asan_cplus_demangle_type@@Base+0x2b84>
   3f0f4:	ldr	x0, [sp, #24]
   3f0f8:	ldr	x0, [x0, #24]
   3f0fc:	ldrb	w0, [x0]
   3f100:	cmp	w0, #0x6c
   3f104:	b.ne	3f124 <__asan_cplus_demangle_type@@Base+0x2a90>  // b.any
   3f108:	ldr	x0, [sp, #24]
   3f10c:	ldr	x0, [x0, #24]
   3f110:	add	x1, x0, #0x1
   3f114:	ldr	x0, [sp, #24]
   3f118:	str	x1, [x0, #24]
   3f11c:	mov	w0, #0x0                   	// #0
   3f120:	b	3f128 <__asan_cplus_demangle_type@@Base+0x2a94>
   3f124:	mov	w0, #0x1                   	// #1
   3f128:	cmp	w0, #0x0
   3f12c:	b.eq	3f138 <__asan_cplus_demangle_type@@Base+0x2aa4>  // b.none
   3f130:	mov	x0, #0x0                   	// #0
   3f134:	b	3f218 <__asan_cplus_demangle_type@@Base+0x2b84>
   3f138:	ldr	x0, [sp, #24]
   3f13c:	bl	3d78c <__asan_cplus_demangle_type@@Base+0x10f8>
   3f140:	str	x0, [sp, #56]
   3f144:	ldr	x0, [sp, #56]
   3f148:	cmp	x0, #0x0
   3f14c:	b.ne	3f158 <__asan_cplus_demangle_type@@Base+0x2ac4>  // b.any
   3f150:	mov	x0, #0x0                   	// #0
   3f154:	b	3f218 <__asan_cplus_demangle_type@@Base+0x2b84>
   3f158:	ldr	x0, [sp, #24]
   3f15c:	ldr	x0, [x0, #24]
   3f160:	ldrb	w0, [x0]
   3f164:	cmp	w0, #0x45
   3f168:	b.ne	3f188 <__asan_cplus_demangle_type@@Base+0x2af4>  // b.any
   3f16c:	ldr	x0, [sp, #24]
   3f170:	ldr	x0, [x0, #24]
   3f174:	add	x1, x0, #0x1
   3f178:	ldr	x0, [sp, #24]
   3f17c:	str	x1, [x0, #24]
   3f180:	mov	w0, #0x0                   	// #0
   3f184:	b	3f18c <__asan_cplus_demangle_type@@Base+0x2af8>
   3f188:	mov	w0, #0x1                   	// #1
   3f18c:	cmp	w0, #0x0
   3f190:	b.eq	3f19c <__asan_cplus_demangle_type@@Base+0x2b08>  // b.none
   3f194:	mov	x0, #0x0                   	// #0
   3f198:	b	3f218 <__asan_cplus_demangle_type@@Base+0x2b84>
   3f19c:	ldr	x0, [sp, #24]
   3f1a0:	bl	3dce8 <__asan_cplus_demangle_type@@Base+0x1654>
   3f1a4:	str	w0, [sp, #52]
   3f1a8:	ldr	w0, [sp, #52]
   3f1ac:	cmp	w0, #0x0
   3f1b0:	b.ge	3f1bc <__asan_cplus_demangle_type@@Base+0x2b28>  // b.tcont
   3f1b4:	mov	x0, #0x0                   	// #0
   3f1b8:	b	3f218 <__asan_cplus_demangle_type@@Base+0x2b84>
   3f1bc:	ldr	x0, [sp, #24]
   3f1c0:	bl	3a208 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3f1c4:	str	x0, [sp, #40]
   3f1c8:	ldr	x0, [sp, #40]
   3f1cc:	cmp	x0, #0x0
   3f1d0:	b.eq	3f1f8 <__asan_cplus_demangle_type@@Base+0x2b64>  // b.none
   3f1d4:	ldr	x0, [sp, #40]
   3f1d8:	mov	w1, #0x46                  	// #70
   3f1dc:	str	w1, [x0]
   3f1e0:	ldr	x0, [sp, #40]
   3f1e4:	ldr	x1, [sp, #56]
   3f1e8:	str	x1, [x0, #8]
   3f1ec:	ldr	x0, [sp, #40]
   3f1f0:	ldr	w1, [sp, #52]
   3f1f4:	str	w1, [x0, #16]
   3f1f8:	ldr	x1, [sp, #40]
   3f1fc:	ldr	x0, [sp, #24]
   3f200:	bl	3f4bc <__asan_cplus_demangle_type@@Base+0x2e28>
   3f204:	cmp	w0, #0x0
   3f208:	b.ne	3f214 <__asan_cplus_demangle_type@@Base+0x2b80>  // b.any
   3f20c:	mov	x0, #0x0                   	// #0
   3f210:	b	3f218 <__asan_cplus_demangle_type@@Base+0x2b84>
   3f214:	ldr	x0, [sp, #40]
   3f218:	ldp	x29, x30, [sp], #64
   3f21c:	ret
   3f220:	stp	x29, x30, [sp, #-48]!
   3f224:	mov	x29, sp
   3f228:	str	x0, [sp, #24]
   3f22c:	ldr	x0, [sp, #24]
   3f230:	ldr	x0, [x0, #24]
   3f234:	ldrb	w0, [x0]
   3f238:	cmp	w0, #0x55
   3f23c:	b.ne	3f25c <__asan_cplus_demangle_type@@Base+0x2bc8>  // b.any
   3f240:	ldr	x0, [sp, #24]
   3f244:	ldr	x0, [x0, #24]
   3f248:	add	x1, x0, #0x1
   3f24c:	ldr	x0, [sp, #24]
   3f250:	str	x1, [x0, #24]
   3f254:	mov	w0, #0x0                   	// #0
   3f258:	b	3f260 <__asan_cplus_demangle_type@@Base+0x2bcc>
   3f25c:	mov	w0, #0x1                   	// #1
   3f260:	cmp	w0, #0x0
   3f264:	b.eq	3f270 <__asan_cplus_demangle_type@@Base+0x2bdc>  // b.none
   3f268:	mov	x0, #0x0                   	// #0
   3f26c:	b	3f324 <__asan_cplus_demangle_type@@Base+0x2c90>
   3f270:	ldr	x0, [sp, #24]
   3f274:	ldr	x0, [x0, #24]
   3f278:	ldrb	w0, [x0]
   3f27c:	cmp	w0, #0x74
   3f280:	b.ne	3f2a0 <__asan_cplus_demangle_type@@Base+0x2c0c>  // b.any
   3f284:	ldr	x0, [sp, #24]
   3f288:	ldr	x0, [x0, #24]
   3f28c:	add	x1, x0, #0x1
   3f290:	ldr	x0, [sp, #24]
   3f294:	str	x1, [x0, #24]
   3f298:	mov	w0, #0x0                   	// #0
   3f29c:	b	3f2a4 <__asan_cplus_demangle_type@@Base+0x2c10>
   3f2a0:	mov	w0, #0x1                   	// #1
   3f2a4:	cmp	w0, #0x0
   3f2a8:	b.eq	3f2b4 <__asan_cplus_demangle_type@@Base+0x2c20>  // b.none
   3f2ac:	mov	x0, #0x0                   	// #0
   3f2b0:	b	3f324 <__asan_cplus_demangle_type@@Base+0x2c90>
   3f2b4:	ldr	x0, [sp, #24]
   3f2b8:	bl	3dce8 <__asan_cplus_demangle_type@@Base+0x1654>
   3f2bc:	str	w0, [sp, #44]
   3f2c0:	ldr	w0, [sp, #44]
   3f2c4:	cmp	w0, #0x0
   3f2c8:	b.ge	3f2d4 <__asan_cplus_demangle_type@@Base+0x2c40>  // b.tcont
   3f2cc:	mov	x0, #0x0                   	// #0
   3f2d0:	b	3f324 <__asan_cplus_demangle_type@@Base+0x2c90>
   3f2d4:	ldr	x0, [sp, #24]
   3f2d8:	bl	3a208 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3f2dc:	str	x0, [sp, #32]
   3f2e0:	ldr	x0, [sp, #32]
   3f2e4:	cmp	x0, #0x0
   3f2e8:	b.eq	3f304 <__asan_cplus_demangle_type@@Base+0x2c70>  // b.none
   3f2ec:	ldr	x0, [sp, #32]
   3f2f0:	mov	w1, #0x48                  	// #72
   3f2f4:	str	w1, [x0]
   3f2f8:	ldrsw	x1, [sp, #44]
   3f2fc:	ldr	x0, [sp, #32]
   3f300:	str	x1, [x0, #8]
   3f304:	ldr	x1, [sp, #32]
   3f308:	ldr	x0, [sp, #24]
   3f30c:	bl	3f4bc <__asan_cplus_demangle_type@@Base+0x2e28>
   3f310:	cmp	w0, #0x0
   3f314:	b.ne	3f320 <__asan_cplus_demangle_type@@Base+0x2c8c>  // b.any
   3f318:	mov	x0, #0x0                   	// #0
   3f31c:	b	3f324 <__asan_cplus_demangle_type@@Base+0x2c90>
   3f320:	ldr	x0, [sp, #32]
   3f324:	ldp	x29, x30, [sp], #48
   3f328:	ret
   3f32c:	stp	x29, x30, [sp, #-64]!
   3f330:	mov	x29, sp
   3f334:	str	x0, [sp, #24]
   3f338:	str	x1, [sp, #16]
   3f33c:	ldr	x0, [sp, #24]
   3f340:	ldr	x0, [x0, #24]
   3f344:	str	x0, [sp, #48]
   3f348:	ldr	x0, [sp, #48]
   3f34c:	str	x0, [sp, #56]
   3f350:	ldr	x0, [sp, #56]
   3f354:	ldrb	w0, [x0]
   3f358:	cmp	w0, #0x2e
   3f35c:	b.ne	3f428 <__asan_cplus_demangle_type@@Base+0x2d94>  // b.any
   3f360:	ldr	x0, [sp, #56]
   3f364:	add	x0, x0, #0x1
   3f368:	ldrb	w0, [x0]
   3f36c:	cmp	w0, #0x60
   3f370:	b.ls	3f388 <__asan_cplus_demangle_type@@Base+0x2cf4>  // b.plast
   3f374:	ldr	x0, [sp, #56]
   3f378:	add	x0, x0, #0x1
   3f37c:	ldrb	w0, [x0]
   3f380:	cmp	w0, #0x7a
   3f384:	b.ls	3f39c <__asan_cplus_demangle_type@@Base+0x2d08>  // b.plast
   3f388:	ldr	x0, [sp, #56]
   3f38c:	add	x0, x0, #0x1
   3f390:	ldrb	w0, [x0]
   3f394:	cmp	w0, #0x5f
   3f398:	b.ne	3f428 <__asan_cplus_demangle_type@@Base+0x2d94>  // b.any
   3f39c:	ldr	x0, [sp, #56]
   3f3a0:	add	x0, x0, #0x2
   3f3a4:	str	x0, [sp, #56]
   3f3a8:	b	3f3b8 <__asan_cplus_demangle_type@@Base+0x2d24>
   3f3ac:	ldr	x0, [sp, #56]
   3f3b0:	add	x0, x0, #0x1
   3f3b4:	str	x0, [sp, #56]
   3f3b8:	ldr	x0, [sp, #56]
   3f3bc:	ldrb	w0, [x0]
   3f3c0:	cmp	w0, #0x60
   3f3c4:	b.ls	3f3d8 <__asan_cplus_demangle_type@@Base+0x2d44>  // b.plast
   3f3c8:	ldr	x0, [sp, #56]
   3f3cc:	ldrb	w0, [x0]
   3f3d0:	cmp	w0, #0x7a
   3f3d4:	b.ls	3f3ac <__asan_cplus_demangle_type@@Base+0x2d18>  // b.plast
   3f3d8:	ldr	x0, [sp, #56]
   3f3dc:	ldrb	w0, [x0]
   3f3e0:	cmp	w0, #0x5f
   3f3e4:	b.eq	3f3ac <__asan_cplus_demangle_type@@Base+0x2d18>  // b.none
   3f3e8:	b	3f428 <__asan_cplus_demangle_type@@Base+0x2d94>
   3f3ec:	ldr	x0, [sp, #56]
   3f3f0:	add	x0, x0, #0x2
   3f3f4:	str	x0, [sp, #56]
   3f3f8:	b	3f408 <__asan_cplus_demangle_type@@Base+0x2d74>
   3f3fc:	ldr	x0, [sp, #56]
   3f400:	add	x0, x0, #0x1
   3f404:	str	x0, [sp, #56]
   3f408:	ldr	x0, [sp, #56]
   3f40c:	ldrb	w0, [x0]
   3f410:	cmp	w0, #0x2f
   3f414:	b.ls	3f428 <__asan_cplus_demangle_type@@Base+0x2d94>  // b.plast
   3f418:	ldr	x0, [sp, #56]
   3f41c:	ldrb	w0, [x0]
   3f420:	cmp	w0, #0x39
   3f424:	b.ls	3f3fc <__asan_cplus_demangle_type@@Base+0x2d68>  // b.plast
   3f428:	ldr	x0, [sp, #56]
   3f42c:	ldrb	w0, [x0]
   3f430:	cmp	w0, #0x2e
   3f434:	b.ne	3f460 <__asan_cplus_demangle_type@@Base+0x2dcc>  // b.any
   3f438:	ldr	x0, [sp, #56]
   3f43c:	add	x0, x0, #0x1
   3f440:	ldrb	w0, [x0]
   3f444:	cmp	w0, #0x2f
   3f448:	b.ls	3f460 <__asan_cplus_demangle_type@@Base+0x2dcc>  // b.plast
   3f44c:	ldr	x0, [sp, #56]
   3f450:	add	x0, x0, #0x1
   3f454:	ldrb	w0, [x0]
   3f458:	cmp	w0, #0x39
   3f45c:	b.ls	3f3ec <__asan_cplus_demangle_type@@Base+0x2d58>  // b.plast
   3f460:	ldr	x0, [sp, #24]
   3f464:	ldr	x0, [x0, #24]
   3f468:	ldr	x2, [sp, #56]
   3f46c:	ldr	x1, [sp, #48]
   3f470:	sub	x1, x2, x1
   3f474:	add	x1, x0, x1
   3f478:	ldr	x0, [sp, #24]
   3f47c:	str	x1, [x0, #24]
   3f480:	ldr	x1, [sp, #56]
   3f484:	ldr	x0, [sp, #48]
   3f488:	sub	x0, x1, x0
   3f48c:	mov	w2, w0
   3f490:	ldr	x1, [sp, #48]
   3f494:	ldr	x0, [sp, #24]
   3f498:	bl	3a3f8 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   3f49c:	str	x0, [sp, #40]
   3f4a0:	ldr	x3, [sp, #40]
   3f4a4:	ldr	x2, [sp, #16]
   3f4a8:	mov	w1, #0x4e                  	// #78
   3f4ac:	ldr	x0, [sp, #24]
   3f4b0:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3f4b4:	ldp	x29, x30, [sp], #64
   3f4b8:	ret
   3f4bc:	sub	sp, sp, #0x10
   3f4c0:	str	x0, [sp, #8]
   3f4c4:	str	x1, [sp]
   3f4c8:	ldr	x0, [sp]
   3f4cc:	cmp	x0, #0x0
   3f4d0:	b.ne	3f4dc <__asan_cplus_demangle_type@@Base+0x2e48>  // b.any
   3f4d4:	mov	w0, #0x0                   	// #0
   3f4d8:	b	3f538 <__asan_cplus_demangle_type@@Base+0x2ea4>
   3f4dc:	ldr	x0, [sp, #8]
   3f4e0:	ldr	w1, [x0, #56]
   3f4e4:	ldr	x0, [sp, #8]
   3f4e8:	ldr	w0, [x0, #60]
   3f4ec:	cmp	w1, w0
   3f4f0:	b.lt	3f4fc <__asan_cplus_demangle_type@@Base+0x2e68>  // b.tstop
   3f4f4:	mov	w0, #0x0                   	// #0
   3f4f8:	b	3f538 <__asan_cplus_demangle_type@@Base+0x2ea4>
   3f4fc:	ldr	x0, [sp, #8]
   3f500:	ldr	x1, [x0, #48]
   3f504:	ldr	x0, [sp, #8]
   3f508:	ldr	w0, [x0, #56]
   3f50c:	sxtw	x0, w0
   3f510:	lsl	x0, x0, #3
   3f514:	add	x0, x1, x0
   3f518:	ldr	x1, [sp]
   3f51c:	str	x1, [x0]
   3f520:	ldr	x0, [sp, #8]
   3f524:	ldr	w0, [x0, #56]
   3f528:	add	w1, w0, #0x1
   3f52c:	ldr	x0, [sp, #8]
   3f530:	str	w1, [x0, #56]
   3f534:	mov	w0, #0x1                   	// #1
   3f538:	add	sp, sp, #0x10
   3f53c:	ret
   3f540:	stp	x29, x30, [sp, #-96]!
   3f544:	mov	x29, sp
   3f548:	str	x0, [sp, #24]
   3f54c:	str	w1, [sp, #20]
   3f550:	ldr	x0, [sp, #24]
   3f554:	ldr	x0, [x0, #24]
   3f558:	ldrb	w0, [x0]
   3f55c:	cmp	w0, #0x53
   3f560:	b.ne	3f580 <__asan_cplus_demangle_type@@Base+0x2eec>  // b.any
   3f564:	ldr	x0, [sp, #24]
   3f568:	ldr	x0, [x0, #24]
   3f56c:	add	x1, x0, #0x1
   3f570:	ldr	x0, [sp, #24]
   3f574:	str	x1, [x0, #24]
   3f578:	mov	w0, #0x0                   	// #0
   3f57c:	b	3f584 <__asan_cplus_demangle_type@@Base+0x2ef0>
   3f580:	mov	w0, #0x1                   	// #1
   3f584:	cmp	w0, #0x0
   3f588:	b.eq	3f594 <__asan_cplus_demangle_type@@Base+0x2f00>  // b.none
   3f58c:	mov	x0, #0x0                   	// #0
   3f590:	b	3f8f4 <__asan_cplus_demangle_type@@Base+0x3260>
   3f594:	ldr	x0, [sp, #24]
   3f598:	ldr	x0, [x0, #24]
   3f59c:	ldrb	w0, [x0]
   3f5a0:	cmp	w0, #0x0
   3f5a4:	b.eq	3f5c4 <__asan_cplus_demangle_type@@Base+0x2f30>  // b.none
   3f5a8:	ldr	x0, [sp, #24]
   3f5ac:	ldr	x0, [x0, #24]
   3f5b0:	add	x2, x0, #0x1
   3f5b4:	ldr	x1, [sp, #24]
   3f5b8:	str	x2, [x1, #24]
   3f5bc:	ldrb	w0, [x0]
   3f5c0:	b	3f5c8 <__asan_cplus_demangle_type@@Base+0x2f34>
   3f5c4:	mov	w0, #0x0                   	// #0
   3f5c8:	strb	w0, [sp, #95]
   3f5cc:	ldrb	w0, [sp, #95]
   3f5d0:	cmp	w0, #0x5f
   3f5d4:	b.eq	3f608 <__asan_cplus_demangle_type@@Base+0x2f74>  // b.none
   3f5d8:	ldrb	w0, [sp, #95]
   3f5dc:	cmp	w0, #0x2f
   3f5e0:	b.ls	3f5f0 <__asan_cplus_demangle_type@@Base+0x2f5c>  // b.plast
   3f5e4:	ldrb	w0, [sp, #95]
   3f5e8:	cmp	w0, #0x39
   3f5ec:	b.ls	3f608 <__asan_cplus_demangle_type@@Base+0x2f74>  // b.plast
   3f5f0:	ldrb	w0, [sp, #95]
   3f5f4:	cmp	w0, #0x40
   3f5f8:	b.ls	3f754 <__asan_cplus_demangle_type@@Base+0x30c0>  // b.plast
   3f5fc:	ldrb	w0, [sp, #95]
   3f600:	cmp	w0, #0x5a
   3f604:	b.hi	3f754 <__asan_cplus_demangle_type@@Base+0x30c0>  // b.pmore
   3f608:	str	wzr, [sp, #88]
   3f60c:	ldrb	w0, [sp, #95]
   3f610:	cmp	w0, #0x5f
   3f614:	b.eq	3f718 <__asan_cplus_demangle_type@@Base+0x3084>  // b.none
   3f618:	ldrb	w0, [sp, #95]
   3f61c:	cmp	w0, #0x2f
   3f620:	b.ls	3f65c <__asan_cplus_demangle_type@@Base+0x2fc8>  // b.plast
   3f624:	ldrb	w0, [sp, #95]
   3f628:	cmp	w0, #0x39
   3f62c:	b.hi	3f65c <__asan_cplus_demangle_type@@Base+0x2fc8>  // b.pmore
   3f630:	ldr	w1, [sp, #88]
   3f634:	mov	w0, w1
   3f638:	lsl	w0, w0, #3
   3f63c:	add	w0, w0, w1
   3f640:	lsl	w0, w0, #2
   3f644:	mov	w1, w0
   3f648:	ldrb	w0, [sp, #95]
   3f64c:	add	w0, w1, w0
   3f650:	sub	w0, w0, #0x30
   3f654:	str	w0, [sp, #84]
   3f658:	b	3f6a8 <__asan_cplus_demangle_type@@Base+0x3014>
   3f65c:	ldrb	w0, [sp, #95]
   3f660:	cmp	w0, #0x40
   3f664:	b.ls	3f6a0 <__asan_cplus_demangle_type@@Base+0x300c>  // b.plast
   3f668:	ldrb	w0, [sp, #95]
   3f66c:	cmp	w0, #0x5a
   3f670:	b.hi	3f6a0 <__asan_cplus_demangle_type@@Base+0x300c>  // b.pmore
   3f674:	ldr	w1, [sp, #88]
   3f678:	mov	w0, w1
   3f67c:	lsl	w0, w0, #3
   3f680:	add	w0, w0, w1
   3f684:	lsl	w0, w0, #2
   3f688:	mov	w1, w0
   3f68c:	ldrb	w0, [sp, #95]
   3f690:	add	w0, w1, w0
   3f694:	sub	w0, w0, #0x37
   3f698:	str	w0, [sp, #84]
   3f69c:	b	3f6a8 <__asan_cplus_demangle_type@@Base+0x3014>
   3f6a0:	mov	x0, #0x0                   	// #0
   3f6a4:	b	3f8f4 <__asan_cplus_demangle_type@@Base+0x3260>
   3f6a8:	ldr	w1, [sp, #84]
   3f6ac:	ldr	w0, [sp, #88]
   3f6b0:	cmp	w1, w0
   3f6b4:	b.cs	3f6c0 <__asan_cplus_demangle_type@@Base+0x302c>  // b.hs, b.nlast
   3f6b8:	mov	x0, #0x0                   	// #0
   3f6bc:	b	3f8f4 <__asan_cplus_demangle_type@@Base+0x3260>
   3f6c0:	ldr	w0, [sp, #84]
   3f6c4:	str	w0, [sp, #88]
   3f6c8:	ldr	x0, [sp, #24]
   3f6cc:	ldr	x0, [x0, #24]
   3f6d0:	ldrb	w0, [x0]
   3f6d4:	cmp	w0, #0x0
   3f6d8:	b.eq	3f6f8 <__asan_cplus_demangle_type@@Base+0x3064>  // b.none
   3f6dc:	ldr	x0, [sp, #24]
   3f6e0:	ldr	x0, [x0, #24]
   3f6e4:	add	x2, x0, #0x1
   3f6e8:	ldr	x1, [sp, #24]
   3f6ec:	str	x2, [x1, #24]
   3f6f0:	ldrb	w0, [x0]
   3f6f4:	b	3f6fc <__asan_cplus_demangle_type@@Base+0x3068>
   3f6f8:	mov	w0, #0x0                   	// #0
   3f6fc:	strb	w0, [sp, #95]
   3f700:	ldrb	w0, [sp, #95]
   3f704:	cmp	w0, #0x5f
   3f708:	b.ne	3f618 <__asan_cplus_demangle_type@@Base+0x2f84>  // b.any
   3f70c:	ldr	w0, [sp, #88]
   3f710:	add	w0, w0, #0x1
   3f714:	str	w0, [sp, #88]
   3f718:	ldr	x0, [sp, #24]
   3f71c:	ldr	w0, [x0, #56]
   3f720:	mov	w1, w0
   3f724:	ldr	w0, [sp, #88]
   3f728:	cmp	w0, w1
   3f72c:	b.cc	3f738 <__asan_cplus_demangle_type@@Base+0x30a4>  // b.lo, b.ul, b.last
   3f730:	mov	x0, #0x0                   	// #0
   3f734:	b	3f8f4 <__asan_cplus_demangle_type@@Base+0x3260>
   3f738:	ldr	x0, [sp, #24]
   3f73c:	ldr	x1, [x0, #48]
   3f740:	ldr	w0, [sp, #88]
   3f744:	lsl	x0, x0, #3
   3f748:	add	x0, x1, x0
   3f74c:	ldr	x0, [x0]
   3f750:	b	3f8f4 <__asan_cplus_demangle_type@@Base+0x3260>
   3f754:	ldr	x0, [sp, #24]
   3f758:	ldr	w0, [x0, #16]
   3f75c:	and	w0, w0, #0x8
   3f760:	cmp	w0, #0x0
   3f764:	cset	w0, ne  // ne = any
   3f768:	and	w0, w0, #0xff
   3f76c:	str	w0, [sp, #80]
   3f770:	ldr	w0, [sp, #80]
   3f774:	cmp	w0, #0x0
   3f778:	b.ne	3f7b8 <__asan_cplus_demangle_type@@Base+0x3124>  // b.any
   3f77c:	ldr	w0, [sp, #20]
   3f780:	cmp	w0, #0x0
   3f784:	b.eq	3f7b8 <__asan_cplus_demangle_type@@Base+0x3124>  // b.none
   3f788:	ldr	x0, [sp, #24]
   3f78c:	ldr	x0, [x0, #24]
   3f790:	ldrb	w0, [x0]
   3f794:	strb	w0, [sp, #47]
   3f798:	ldrb	w0, [sp, #47]
   3f79c:	cmp	w0, #0x43
   3f7a0:	b.eq	3f7b0 <__asan_cplus_demangle_type@@Base+0x311c>  // b.none
   3f7a4:	ldrb	w0, [sp, #47]
   3f7a8:	cmp	w0, #0x44
   3f7ac:	b.ne	3f7b8 <__asan_cplus_demangle_type@@Base+0x3124>  // b.any
   3f7b0:	mov	w0, #0x1                   	// #1
   3f7b4:	str	w0, [sp, #80]
   3f7b8:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   3f7bc:	add	x0, x0, #0xc00
   3f7c0:	str	x0, [sp, #32]
   3f7c4:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   3f7c8:	add	x0, x0, #0xa78
   3f7cc:	str	x0, [sp, #72]
   3f7d0:	b	3f8e0 <__asan_cplus_demangle_type@@Base+0x324c>
   3f7d4:	ldr	x0, [sp, #72]
   3f7d8:	ldrb	w0, [x0]
   3f7dc:	ldrb	w1, [sp, #95]
   3f7e0:	cmp	w1, w0
   3f7e4:	b.ne	3f8d4 <__asan_cplus_demangle_type@@Base+0x3240>  // b.any
   3f7e8:	ldr	x0, [sp, #72]
   3f7ec:	ldr	x0, [x0, #40]
   3f7f0:	cmp	x0, #0x0
   3f7f4:	b.eq	3f820 <__asan_cplus_demangle_type@@Base+0x318c>  // b.none
   3f7f8:	ldr	x0, [sp, #72]
   3f7fc:	ldr	x1, [x0, #40]
   3f800:	ldr	x0, [sp, #72]
   3f804:	ldr	w0, [x0, #48]
   3f808:	mov	w2, w0
   3f80c:	ldr	x0, [sp, #24]
   3f810:	bl	3a6c8 <__asan_cplus_demangle_fill_dtor@@Base+0x540>
   3f814:	mov	x1, x0
   3f818:	ldr	x0, [sp, #24]
   3f81c:	str	x1, [x0, #64]
   3f820:	ldr	w0, [sp, #80]
   3f824:	cmp	w0, #0x0
   3f828:	b.eq	3f848 <__asan_cplus_demangle_type@@Base+0x31b4>  // b.none
   3f82c:	ldr	x0, [sp, #72]
   3f830:	ldr	x0, [x0, #24]
   3f834:	str	x0, [sp, #64]
   3f838:	ldr	x0, [sp, #72]
   3f83c:	ldr	w0, [x0, #32]
   3f840:	str	w0, [sp, #60]
   3f844:	b	3f860 <__asan_cplus_demangle_type@@Base+0x31cc>
   3f848:	ldr	x0, [sp, #72]
   3f84c:	ldr	x0, [x0, #8]
   3f850:	str	x0, [sp, #64]
   3f854:	ldr	x0, [sp, #72]
   3f858:	ldr	w0, [x0, #16]
   3f85c:	str	w0, [sp, #60]
   3f860:	ldr	x0, [sp, #24]
   3f864:	ldr	w1, [x0, #72]
   3f868:	ldr	w0, [sp, #60]
   3f86c:	add	w1, w1, w0
   3f870:	ldr	x0, [sp, #24]
   3f874:	str	w1, [x0, #72]
   3f878:	ldr	w2, [sp, #60]
   3f87c:	ldr	x1, [sp, #64]
   3f880:	ldr	x0, [sp, #24]
   3f884:	bl	3a6c8 <__asan_cplus_demangle_fill_dtor@@Base+0x540>
   3f888:	str	x0, [sp, #48]
   3f88c:	ldr	x0, [sp, #24]
   3f890:	ldr	x0, [x0, #24]
   3f894:	ldrb	w0, [x0]
   3f898:	cmp	w0, #0x42
   3f89c:	b.ne	3f8cc <__asan_cplus_demangle_type@@Base+0x3238>  // b.any
   3f8a0:	ldr	x1, [sp, #48]
   3f8a4:	ldr	x0, [sp, #24]
   3f8a8:	bl	3ab74 <__asan_cplus_demangle_mangled_name@@Base+0x450>
   3f8ac:	str	x0, [sp, #48]
   3f8b0:	ldr	x1, [sp, #48]
   3f8b4:	ldr	x0, [sp, #24]
   3f8b8:	bl	3f4bc <__asan_cplus_demangle_type@@Base+0x2e28>
   3f8bc:	cmp	w0, #0x0
   3f8c0:	b.ne	3f8cc <__asan_cplus_demangle_type@@Base+0x3238>  // b.any
   3f8c4:	mov	x0, #0x0                   	// #0
   3f8c8:	b	3f8f4 <__asan_cplus_demangle_type@@Base+0x3260>
   3f8cc:	ldr	x0, [sp, #48]
   3f8d0:	b	3f8f4 <__asan_cplus_demangle_type@@Base+0x3260>
   3f8d4:	ldr	x0, [sp, #72]
   3f8d8:	add	x0, x0, #0x38
   3f8dc:	str	x0, [sp, #72]
   3f8e0:	ldr	x1, [sp, #72]
   3f8e4:	ldr	x0, [sp, #32]
   3f8e8:	cmp	x1, x0
   3f8ec:	b.cc	3f7d4 <__asan_cplus_demangle_type@@Base+0x3140>  // b.lo, b.ul, b.last
   3f8f0:	mov	x0, #0x0                   	// #0
   3f8f4:	ldp	x29, x30, [sp], #96
   3f8f8:	ret
   3f8fc:	sub	sp, sp, #0x10
   3f900:	str	x0, [sp, #8]
   3f904:	str	x1, [sp]
   3f908:	ldr	x0, [sp, #8]
   3f90c:	ldr	x1, [x0, #24]
   3f910:	ldr	x0, [sp]
   3f914:	str	x1, [x0]
   3f918:	ldr	x0, [sp, #8]
   3f91c:	ldr	w1, [x0, #40]
   3f920:	ldr	x0, [sp]
   3f924:	str	w1, [x0, #8]
   3f928:	ldr	x0, [sp, #8]
   3f92c:	ldr	w1, [x0, #56]
   3f930:	ldr	x0, [sp]
   3f934:	str	w1, [x0, #12]
   3f938:	ldr	x0, [sp, #8]
   3f93c:	ldr	w1, [x0, #72]
   3f940:	ldr	x0, [sp]
   3f944:	str	w1, [x0, #16]
   3f948:	nop
   3f94c:	add	sp, sp, #0x10
   3f950:	ret
   3f954:	sub	sp, sp, #0x10
   3f958:	str	x0, [sp, #8]
   3f95c:	str	x1, [sp]
   3f960:	ldr	x0, [sp]
   3f964:	ldr	x1, [x0]
   3f968:	ldr	x0, [sp, #8]
   3f96c:	str	x1, [x0, #24]
   3f970:	ldr	x0, [sp]
   3f974:	ldr	w1, [x0, #8]
   3f978:	ldr	x0, [sp, #8]
   3f97c:	str	w1, [x0, #40]
   3f980:	ldr	x0, [sp]
   3f984:	ldr	w1, [x0, #12]
   3f988:	ldr	x0, [sp, #8]
   3f98c:	str	w1, [x0, #56]
   3f990:	ldr	x0, [sp]
   3f994:	ldr	w1, [x0, #16]
   3f998:	ldr	x0, [sp, #8]
   3f99c:	str	w1, [x0, #72]
   3f9a0:	nop
   3f9a4:	add	sp, sp, #0x10
   3f9a8:	ret
   3f9ac:	stp	x29, x30, [sp, #-32]!
   3f9b0:	mov	x29, sp
   3f9b4:	str	x0, [sp, #24]
   3f9b8:	str	x1, [sp, #16]
   3f9bc:	ldr	x0, [sp, #24]
   3f9c0:	str	xzr, [x0]
   3f9c4:	ldr	x0, [sp, #24]
   3f9c8:	str	xzr, [x0, #8]
   3f9cc:	ldr	x0, [sp, #24]
   3f9d0:	str	xzr, [x0, #16]
   3f9d4:	ldr	x0, [sp, #24]
   3f9d8:	str	wzr, [x0, #24]
   3f9dc:	ldr	x0, [sp, #16]
   3f9e0:	cmp	x0, #0x0
   3f9e4:	b.eq	3f9f4 <__asan_cplus_demangle_type@@Base+0x3360>  // b.none
   3f9e8:	ldr	x1, [sp, #16]
   3f9ec:	ldr	x0, [sp, #24]
   3f9f0:	bl	3fa00 <__asan_cplus_demangle_type@@Base+0x336c>
   3f9f4:	nop
   3f9f8:	ldp	x29, x30, [sp], #32
   3f9fc:	ret
   3fa00:	stp	x29, x30, [sp, #-48]!
   3fa04:	mov	x29, sp
   3fa08:	str	x0, [sp, #24]
   3fa0c:	str	x1, [sp, #16]
   3fa10:	ldr	x0, [sp, #24]
   3fa14:	ldr	w0, [x0, #24]
   3fa18:	cmp	w0, #0x0
   3fa1c:	b.ne	3fad4 <__asan_cplus_demangle_type@@Base+0x3440>  // b.any
   3fa20:	ldr	x0, [sp, #24]
   3fa24:	ldr	x0, [x0, #16]
   3fa28:	cmp	x0, #0x0
   3fa2c:	b.eq	3fa3c <__asan_cplus_demangle_type@@Base+0x33a8>  // b.none
   3fa30:	ldr	x0, [sp, #24]
   3fa34:	ldr	x0, [x0, #16]
   3fa38:	b	3fa40 <__asan_cplus_demangle_type@@Base+0x33ac>
   3fa3c:	mov	x0, #0x2                   	// #2
   3fa40:	str	x0, [sp, #40]
   3fa44:	b	3fa54 <__asan_cplus_demangle_type@@Base+0x33c0>
   3fa48:	ldr	x0, [sp, #40]
   3fa4c:	lsl	x0, x0, #1
   3fa50:	str	x0, [sp, #40]
   3fa54:	ldr	x1, [sp, #40]
   3fa58:	ldr	x0, [sp, #16]
   3fa5c:	cmp	x1, x0
   3fa60:	b.cc	3fa48 <__asan_cplus_demangle_type@@Base+0x33b4>  // b.lo, b.ul, b.last
   3fa64:	ldr	x0, [sp, #24]
   3fa68:	ldr	x0, [x0]
   3fa6c:	ldr	x1, [sp, #40]
   3fa70:	bl	67d0 <realloc@plt>
   3fa74:	str	x0, [sp, #32]
   3fa78:	ldr	x0, [sp, #32]
   3fa7c:	cmp	x0, #0x0
   3fa80:	b.ne	3fab8 <__asan_cplus_demangle_type@@Base+0x3424>  // b.any
   3fa84:	ldr	x0, [sp, #24]
   3fa88:	ldr	x0, [x0]
   3fa8c:	bl	6780 <free@plt>
   3fa90:	ldr	x0, [sp, #24]
   3fa94:	str	xzr, [x0]
   3fa98:	ldr	x0, [sp, #24]
   3fa9c:	str	xzr, [x0, #8]
   3faa0:	ldr	x0, [sp, #24]
   3faa4:	str	xzr, [x0, #16]
   3faa8:	ldr	x0, [sp, #24]
   3faac:	mov	w1, #0x1                   	// #1
   3fab0:	str	w1, [x0, #24]
   3fab4:	b	3fad8 <__asan_cplus_demangle_type@@Base+0x3444>
   3fab8:	ldr	x0, [sp, #24]
   3fabc:	ldr	x1, [sp, #32]
   3fac0:	str	x1, [x0]
   3fac4:	ldr	x0, [sp, #24]
   3fac8:	ldr	x1, [sp, #40]
   3facc:	str	x1, [x0, #16]
   3fad0:	b	3fad8 <__asan_cplus_demangle_type@@Base+0x3444>
   3fad4:	nop
   3fad8:	ldp	x29, x30, [sp], #48
   3fadc:	ret
   3fae0:	stp	x29, x30, [sp, #-64]!
   3fae4:	mov	x29, sp
   3fae8:	str	x0, [sp, #40]
   3faec:	str	x1, [sp, #32]
   3faf0:	str	x2, [sp, #24]
   3faf4:	ldr	x0, [sp, #40]
   3faf8:	ldr	x1, [x0, #8]
   3fafc:	ldr	x0, [sp, #24]
   3fb00:	add	x0, x1, x0
   3fb04:	add	x0, x0, #0x1
   3fb08:	str	x0, [sp, #56]
   3fb0c:	ldr	x0, [sp, #40]
   3fb10:	ldr	x0, [x0, #16]
   3fb14:	ldr	x1, [sp, #56]
   3fb18:	cmp	x1, x0
   3fb1c:	b.ls	3fb2c <__asan_cplus_demangle_type@@Base+0x3498>  // b.plast
   3fb20:	ldr	x1, [sp, #56]
   3fb24:	ldr	x0, [sp, #40]
   3fb28:	bl	3fa00 <__asan_cplus_demangle_type@@Base+0x336c>
   3fb2c:	ldr	x0, [sp, #40]
   3fb30:	ldr	w0, [x0, #24]
   3fb34:	cmp	w0, #0x0
   3fb38:	b.ne	3fb98 <__asan_cplus_demangle_type@@Base+0x3504>  // b.any
   3fb3c:	ldr	x0, [sp, #40]
   3fb40:	ldr	x1, [x0]
   3fb44:	ldr	x0, [sp, #40]
   3fb48:	ldr	x0, [x0, #8]
   3fb4c:	add	x0, x1, x0
   3fb50:	ldr	x2, [sp, #24]
   3fb54:	ldr	x1, [sp, #32]
   3fb58:	bl	66d0 <__asan_internal_memcpy@plt>
   3fb5c:	ldr	x0, [sp, #40]
   3fb60:	ldr	x1, [x0]
   3fb64:	ldr	x0, [sp, #40]
   3fb68:	ldr	x2, [x0, #8]
   3fb6c:	ldr	x0, [sp, #24]
   3fb70:	add	x0, x2, x0
   3fb74:	add	x0, x1, x0
   3fb78:	strb	wzr, [x0]
   3fb7c:	ldr	x0, [sp, #40]
   3fb80:	ldr	x1, [x0, #8]
   3fb84:	ldr	x0, [sp, #24]
   3fb88:	add	x1, x1, x0
   3fb8c:	ldr	x0, [sp, #40]
   3fb90:	str	x1, [x0, #8]
   3fb94:	b	3fb9c <__asan_cplus_demangle_type@@Base+0x3508>
   3fb98:	nop
   3fb9c:	ldp	x29, x30, [sp], #64
   3fba0:	ret
   3fba4:	stp	x29, x30, [sp, #-64]!
   3fba8:	mov	x29, sp
   3fbac:	str	x0, [sp, #40]
   3fbb0:	str	x1, [sp, #32]
   3fbb4:	str	x2, [sp, #24]
   3fbb8:	ldr	x0, [sp, #24]
   3fbbc:	str	x0, [sp, #56]
   3fbc0:	ldr	x2, [sp, #32]
   3fbc4:	ldr	x1, [sp, #40]
   3fbc8:	ldr	x0, [sp, #56]
   3fbcc:	bl	3fae0 <__asan_cplus_demangle_type@@Base+0x344c>
   3fbd0:	nop
   3fbd4:	ldp	x29, x30, [sp], #64
   3fbd8:	ret
   3fbdc:	stp	x29, x30, [sp, #-32]!
   3fbe0:	mov	x29, sp
   3fbe4:	str	x0, [sp, #24]
   3fbe8:	str	x1, [sp, #16]
   3fbec:	ldr	x0, [sp, #16]
   3fbf0:	cmp	x0, #0x0
   3fbf4:	b.eq	3fd58 <__asan_cplus_demangle_type@@Base+0x36c4>  // b.none
   3fbf8:	ldr	x0, [sp, #16]
   3fbfc:	ldr	w0, [x0]
   3fc00:	cmp	w0, #0x50
   3fc04:	b.hi	3fd6c <__asan_cplus_demangle_type@@Base+0x36d8>  // b.pmore
   3fc08:	adrp	x1, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   3fc0c:	add	x1, x1, #0xf68
   3fc10:	ldr	w0, [x1, w0, uxtw #2]
   3fc14:	adr	x1, 3fc20 <__asan_cplus_demangle_type@@Base+0x358c>
   3fc18:	add	x0, x1, w0, sxtw #2
   3fc1c:	br	x0
   3fc20:	ldr	x0, [sp, #24]
   3fc24:	ldr	w0, [x0, #364]
   3fc28:	add	w1, w0, #0x1
   3fc2c:	ldr	x0, [sp, #24]
   3fc30:	str	w1, [x0, #364]
   3fc34:	b	3fc64 <__asan_cplus_demangle_type@@Base+0x35d0>
   3fc38:	ldr	x0, [sp, #16]
   3fc3c:	ldr	x0, [x0, #8]
   3fc40:	ldr	w0, [x0]
   3fc44:	cmp	w0, #0x5
   3fc48:	b.ne	3fc60 <__asan_cplus_demangle_type@@Base+0x35cc>  // b.any
   3fc4c:	ldr	x0, [sp, #24]
   3fc50:	ldr	w0, [x0, #348]
   3fc54:	add	w1, w0, #0x1
   3fc58:	ldr	x0, [sp, #24]
   3fc5c:	str	w1, [x0, #348]
   3fc60:	nop
   3fc64:	ldr	x0, [sp, #24]
   3fc68:	ldr	w0, [x0, #308]
   3fc6c:	cmp	w0, #0x800
   3fc70:	b.gt	3fd68 <__asan_cplus_demangle_type@@Base+0x36d4>
   3fc74:	ldr	x0, [sp, #24]
   3fc78:	ldr	w0, [x0, #308]
   3fc7c:	add	w1, w0, #0x1
   3fc80:	ldr	x0, [sp, #24]
   3fc84:	str	w1, [x0, #308]
   3fc88:	ldr	x0, [sp, #16]
   3fc8c:	ldr	x0, [x0, #8]
   3fc90:	mov	x1, x0
   3fc94:	ldr	x0, [sp, #24]
   3fc98:	bl	3fbdc <__asan_cplus_demangle_type@@Base+0x3548>
   3fc9c:	ldr	x0, [sp, #16]
   3fca0:	ldr	x0, [x0, #16]
   3fca4:	mov	x1, x0
   3fca8:	ldr	x0, [sp, #24]
   3fcac:	bl	3fbdc <__asan_cplus_demangle_type@@Base+0x3548>
   3fcb0:	ldr	x0, [sp, #24]
   3fcb4:	ldr	w0, [x0, #308]
   3fcb8:	sub	w1, w0, #0x1
   3fcbc:	ldr	x0, [sp, #24]
   3fcc0:	str	w1, [x0, #308]
   3fcc4:	b	3fd6c <__asan_cplus_demangle_type@@Base+0x36d8>
   3fcc8:	ldr	x0, [sp, #16]
   3fccc:	ldr	x0, [x0, #16]
   3fcd0:	mov	x1, x0
   3fcd4:	ldr	x0, [sp, #24]
   3fcd8:	bl	3fbdc <__asan_cplus_demangle_type@@Base+0x3548>
   3fcdc:	b	3fd6c <__asan_cplus_demangle_type@@Base+0x36d8>
   3fce0:	ldr	x0, [sp, #16]
   3fce4:	ldr	x0, [x0, #16]
   3fce8:	mov	x1, x0
   3fcec:	ldr	x0, [sp, #24]
   3fcf0:	bl	3fbdc <__asan_cplus_demangle_type@@Base+0x3548>
   3fcf4:	b	3fd6c <__asan_cplus_demangle_type@@Base+0x36d8>
   3fcf8:	ldr	x0, [sp, #16]
   3fcfc:	ldr	x0, [x0, #16]
   3fd00:	mov	x1, x0
   3fd04:	ldr	x0, [sp, #24]
   3fd08:	bl	3fbdc <__asan_cplus_demangle_type@@Base+0x3548>
   3fd0c:	b	3fd6c <__asan_cplus_demangle_type@@Base+0x36d8>
   3fd10:	ldr	x0, [sp, #16]
   3fd14:	ldr	x0, [x0, #8]
   3fd18:	mov	x1, x0
   3fd1c:	ldr	x0, [sp, #24]
   3fd20:	bl	3fbdc <__asan_cplus_demangle_type@@Base+0x3548>
   3fd24:	b	3fd6c <__asan_cplus_demangle_type@@Base+0x36d8>
   3fd28:	ldr	x0, [sp, #16]
   3fd2c:	ldr	x0, [x0, #8]
   3fd30:	mov	x1, x0
   3fd34:	ldr	x0, [sp, #24]
   3fd38:	bl	3fbdc <__asan_cplus_demangle_type@@Base+0x3548>
   3fd3c:	b	3fd6c <__asan_cplus_demangle_type@@Base+0x36d8>
   3fd40:	ldr	x0, [sp, #16]
   3fd44:	ldr	x0, [x0, #8]
   3fd48:	mov	x1, x0
   3fd4c:	ldr	x0, [sp, #24]
   3fd50:	bl	3fbdc <__asan_cplus_demangle_type@@Base+0x3548>
   3fd54:	b	3fd6c <__asan_cplus_demangle_type@@Base+0x36d8>
   3fd58:	nop
   3fd5c:	b	3fd6c <__asan_cplus_demangle_type@@Base+0x36d8>
   3fd60:	nop
   3fd64:	b	3fd6c <__asan_cplus_demangle_type@@Base+0x36d8>
   3fd68:	nop
   3fd6c:	ldp	x29, x30, [sp], #32
   3fd70:	ret
   3fd74:	stp	x29, x30, [sp, #-48]!
   3fd78:	mov	x29, sp
   3fd7c:	str	x0, [sp, #40]
   3fd80:	str	x1, [sp, #32]
   3fd84:	str	x2, [sp, #24]
   3fd88:	str	x3, [sp, #16]
   3fd8c:	ldr	x0, [sp, #40]
   3fd90:	str	xzr, [x0, #256]
   3fd94:	ldr	x0, [sp, #40]
   3fd98:	strb	wzr, [x0, #264]
   3fd9c:	ldr	x0, [sp, #40]
   3fda0:	str	xzr, [x0, #288]
   3fda4:	ldr	x0, [sp, #40]
   3fda8:	str	xzr, [x0, #296]
   3fdac:	ldr	x0, [sp, #40]
   3fdb0:	str	wzr, [x0, #316]
   3fdb4:	ldr	x0, [sp, #40]
   3fdb8:	str	xzr, [x0, #320]
   3fdbc:	ldr	x0, [sp, #40]
   3fdc0:	ldr	x1, [sp, #32]
   3fdc4:	str	x1, [x0, #272]
   3fdc8:	ldr	x0, [sp, #40]
   3fdcc:	ldr	x1, [sp, #24]
   3fdd0:	str	x1, [x0, #280]
   3fdd4:	ldr	x0, [sp, #40]
   3fdd8:	str	wzr, [x0, #304]
   3fddc:	ldr	x0, [sp, #40]
   3fde0:	str	wzr, [x0, #308]
   3fde4:	ldr	x0, [sp, #40]
   3fde8:	str	wzr, [x0, #312]
   3fdec:	ldr	x0, [sp, #40]
   3fdf0:	str	xzr, [x0, #328]
   3fdf4:	ldr	x0, [sp, #40]
   3fdf8:	str	xzr, [x0, #336]
   3fdfc:	ldr	x0, [sp, #40]
   3fe00:	str	wzr, [x0, #344]
   3fe04:	ldr	x0, [sp, #40]
   3fe08:	str	wzr, [x0, #348]
   3fe0c:	ldr	x0, [sp, #40]
   3fe10:	str	xzr, [x0, #352]
   3fe14:	ldr	x0, [sp, #40]
   3fe18:	str	wzr, [x0, #360]
   3fe1c:	ldr	x0, [sp, #40]
   3fe20:	str	wzr, [x0, #364]
   3fe24:	ldr	x1, [sp, #16]
   3fe28:	ldr	x0, [sp, #40]
   3fe2c:	bl	3fbdc <__asan_cplus_demangle_type@@Base+0x3548>
   3fe30:	ldr	x0, [sp, #40]
   3fe34:	ldr	w0, [x0, #308]
   3fe38:	cmp	w0, #0x7ff
   3fe3c:	b.gt	3fe48 <__asan_cplus_demangle_type@@Base+0x37b4>
   3fe40:	ldr	x0, [sp, #40]
   3fe44:	str	wzr, [x0, #308]
   3fe48:	ldr	x0, [sp, #40]
   3fe4c:	ldr	w1, [x0, #364]
   3fe50:	ldr	x0, [sp, #40]
   3fe54:	ldr	w0, [x0, #348]
   3fe58:	mul	w1, w1, w0
   3fe5c:	ldr	x0, [sp, #40]
   3fe60:	str	w1, [x0, #364]
   3fe64:	ldr	x0, [sp, #40]
   3fe68:	str	xzr, [x0, #368]
   3fe6c:	nop
   3fe70:	ldp	x29, x30, [sp], #48
   3fe74:	ret
   3fe78:	sub	sp, sp, #0x10
   3fe7c:	str	x0, [sp, #8]
   3fe80:	ldr	x0, [sp, #8]
   3fe84:	mov	w1, #0x1                   	// #1
   3fe88:	str	w1, [x0, #304]
   3fe8c:	nop
   3fe90:	add	sp, sp, #0x10
   3fe94:	ret
   3fe98:	sub	sp, sp, #0x10
   3fe9c:	str	x0, [sp, #8]
   3fea0:	ldr	x0, [sp, #8]
   3fea4:	ldr	w0, [x0, #304]
   3fea8:	cmp	w0, #0x0
   3feac:	cset	w0, ne  // ne = any
   3feb0:	and	w0, w0, #0xff
   3feb4:	add	sp, sp, #0x10
   3feb8:	ret
   3febc:	stp	x29, x30, [sp, #-32]!
   3fec0:	mov	x29, sp
   3fec4:	str	x0, [sp, #24]
   3fec8:	ldr	x0, [sp, #24]
   3fecc:	ldr	x0, [x0, #256]
   3fed0:	ldr	x1, [sp, #24]
   3fed4:	strb	wzr, [x1, x0]
   3fed8:	ldr	x0, [sp, #24]
   3fedc:	ldr	x3, [x0, #272]
   3fee0:	ldr	x4, [sp, #24]
   3fee4:	ldr	x0, [sp, #24]
   3fee8:	ldr	x1, [x0, #256]
   3feec:	ldr	x0, [sp, #24]
   3fef0:	ldr	x0, [x0, #280]
   3fef4:	mov	x2, x0
   3fef8:	mov	x0, x4
   3fefc:	blr	x3
   3ff00:	ldr	x0, [sp, #24]
   3ff04:	str	xzr, [x0, #256]
   3ff08:	ldr	x0, [sp, #24]
   3ff0c:	ldr	x0, [x0, #320]
   3ff10:	add	x1, x0, #0x1
   3ff14:	ldr	x0, [sp, #24]
   3ff18:	str	x1, [x0, #320]
   3ff1c:	nop
   3ff20:	ldp	x29, x30, [sp], #32
   3ff24:	ret
   3ff28:	stp	x29, x30, [sp, #-32]!
   3ff2c:	mov	x29, sp
   3ff30:	str	x0, [sp, #24]
   3ff34:	strb	w1, [sp, #23]
   3ff38:	ldr	x0, [sp, #24]
   3ff3c:	ldr	x0, [x0, #256]
   3ff40:	cmp	x0, #0xff
   3ff44:	b.ne	3ff50 <__asan_cplus_demangle_type@@Base+0x38bc>  // b.any
   3ff48:	ldr	x0, [sp, #24]
   3ff4c:	bl	3febc <__asan_cplus_demangle_type@@Base+0x3828>
   3ff50:	ldr	x0, [sp, #24]
   3ff54:	ldr	x0, [x0, #256]
   3ff58:	add	x2, x0, #0x1
   3ff5c:	ldr	x1, [sp, #24]
   3ff60:	str	x2, [x1, #256]
   3ff64:	ldr	x1, [sp, #24]
   3ff68:	ldrb	w2, [sp, #23]
   3ff6c:	strb	w2, [x1, x0]
   3ff70:	ldr	x0, [sp, #24]
   3ff74:	ldrb	w1, [sp, #23]
   3ff78:	strb	w1, [x0, #264]
   3ff7c:	nop
   3ff80:	ldp	x29, x30, [sp], #32
   3ff84:	ret
   3ff88:	stp	x29, x30, [sp, #-64]!
   3ff8c:	mov	x29, sp
   3ff90:	str	x0, [sp, #40]
   3ff94:	str	x1, [sp, #32]
   3ff98:	str	x2, [sp, #24]
   3ff9c:	str	xzr, [sp, #56]
   3ffa0:	b	3ffcc <__asan_cplus_demangle_type@@Base+0x3938>
   3ffa4:	ldr	x1, [sp, #32]
   3ffa8:	ldr	x0, [sp, #56]
   3ffac:	add	x0, x1, x0
   3ffb0:	ldrb	w0, [x0]
   3ffb4:	mov	w1, w0
   3ffb8:	ldr	x0, [sp, #40]
   3ffbc:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   3ffc0:	ldr	x0, [sp, #56]
   3ffc4:	add	x0, x0, #0x1
   3ffc8:	str	x0, [sp, #56]
   3ffcc:	ldr	x1, [sp, #56]
   3ffd0:	ldr	x0, [sp, #24]
   3ffd4:	cmp	x1, x0
   3ffd8:	b.cc	3ffa4 <__asan_cplus_demangle_type@@Base+0x3910>  // b.lo, b.ul, b.last
   3ffdc:	nop
   3ffe0:	nop
   3ffe4:	ldp	x29, x30, [sp], #64
   3ffe8:	ret
   3ffec:	stp	x29, x30, [sp, #-32]!
   3fff0:	mov	x29, sp
   3fff4:	str	x0, [sp, #24]
   3fff8:	str	x1, [sp, #16]
   3fffc:	ldr	x0, [sp, #16]
   40000:	bl	66e0 <__asan_internal_strlen@plt>
   40004:	mov	x2, x0
   40008:	ldr	x1, [sp, #16]
   4000c:	ldr	x0, [sp, #24]
   40010:	bl	3ff88 <__asan_cplus_demangle_type@@Base+0x38f4>
   40014:	nop
   40018:	ldp	x29, x30, [sp], #32
   4001c:	ret
   40020:	stp	x29, x30, [sp, #-64]!
   40024:	mov	x29, sp
   40028:	str	x0, [sp, #24]
   4002c:	str	w1, [sp, #20]
   40030:	add	x3, sp, #0x20
   40034:	ldr	w2, [sp, #20]
   40038:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   4003c:	add	x1, x0, #0xb0
   40040:	mov	x0, x3
   40044:	bl	6830 <sprintf@plt>
   40048:	add	x0, sp, #0x20
   4004c:	mov	x1, x0
   40050:	ldr	x0, [sp, #24]
   40054:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   40058:	nop
   4005c:	ldp	x29, x30, [sp], #64
   40060:	ret
   40064:	sub	sp, sp, #0x10
   40068:	str	x0, [sp, #8]
   4006c:	ldr	x0, [sp, #8]
   40070:	ldrb	w0, [x0, #264]
   40074:	add	sp, sp, #0x10
   40078:	ret

000000000004007c <__asan_cplus_demangle_print_callback@@Base>:
   4007c:	sub	sp, sp, #0x260
   40080:	stp	x29, x30, [sp]
   40084:	mov	x29, sp
   40088:	stp	x19, x20, [sp, #16]
   4008c:	stp	x21, x22, [sp, #32]
   40090:	stp	x23, x24, [sp, #48]
   40094:	stp	x25, x26, [sp, #64]
   40098:	str	x27, [sp, #80]
   4009c:	str	w0, [x29, #188]
   400a0:	str	x1, [x29, #176]
   400a4:	str	x2, [x29, #168]
   400a8:	str	x3, [x29, #160]
   400ac:	add	x0, x29, #0xc8
   400b0:	ldr	x3, [x29, #176]
   400b4:	ldr	x2, [x29, #160]
   400b8:	ldr	x1, [x29, #168]
   400bc:	bl	3fd74 <__asan_cplus_demangle_type@@Base+0x36e0>
   400c0:	mov	x0, sp
   400c4:	mov	x19, x0
   400c8:	ldr	w0, [x29, #548]
   400cc:	mov	w1, #0x1                   	// #1
   400d0:	cmp	w0, #0x0
   400d4:	csel	w0, w0, w1, gt
   400d8:	sxtw	x1, w0
   400dc:	sub	x1, x1, #0x1
   400e0:	str	x1, [x29, #600]
   400e4:	sxtw	x1, w0
   400e8:	str	x1, [x29, #144]
   400ec:	str	xzr, [x29, #152]
   400f0:	ldp	x2, x3, [x29, #144]
   400f4:	mov	x1, x2
   400f8:	lsr	x1, x1, #57
   400fc:	mov	x4, x3
   40100:	lsl	x27, x4, #7
   40104:	orr	x27, x1, x27
   40108:	mov	x1, x2
   4010c:	lsl	x26, x1, #7
   40110:	sxtw	x1, w0
   40114:	str	x1, [x29, #128]
   40118:	str	xzr, [x29, #136]
   4011c:	ldp	x2, x3, [x29, #128]
   40120:	mov	x1, x2
   40124:	lsr	x1, x1, #57
   40128:	mov	x4, x3
   4012c:	lsl	x25, x4, #7
   40130:	orr	x25, x1, x25
   40134:	mov	x1, x2
   40138:	lsl	x24, x1, #7
   4013c:	sxtw	x0, w0
   40140:	lsl	x0, x0, #4
   40144:	add	x0, x0, #0xf
   40148:	lsr	x0, x0, #4
   4014c:	lsl	x0, x0, #4
   40150:	sub	sp, sp, x0
   40154:	mov	x0, sp
   40158:	add	x0, x0, #0x7
   4015c:	lsr	x0, x0, #3
   40160:	lsl	x0, x0, #3
   40164:	str	x0, [x29, #592]
   40168:	ldr	w0, [x29, #564]
   4016c:	mov	w1, #0x1                   	// #1
   40170:	cmp	w0, #0x0
   40174:	csel	w0, w0, w1, gt
   40178:	sxtw	x1, w0
   4017c:	sub	x1, x1, #0x1
   40180:	str	x1, [x29, #584]
   40184:	sxtw	x1, w0
   40188:	str	x1, [x29, #112]
   4018c:	str	xzr, [x29, #120]
   40190:	ldp	x2, x3, [x29, #112]
   40194:	mov	x1, x2
   40198:	lsr	x1, x1, #57
   4019c:	mov	x4, x3
   401a0:	lsl	x23, x4, #7
   401a4:	orr	x23, x1, x23
   401a8:	mov	x1, x2
   401ac:	lsl	x22, x1, #7
   401b0:	sxtw	x1, w0
   401b4:	str	x1, [x29, #96]
   401b8:	str	xzr, [x29, #104]
   401bc:	ldp	x2, x3, [x29, #96]
   401c0:	mov	x1, x2
   401c4:	lsr	x1, x1, #57
   401c8:	mov	x4, x3
   401cc:	lsl	x21, x4, #7
   401d0:	orr	x21, x1, x21
   401d4:	mov	x1, x2
   401d8:	lsl	x20, x1, #7
   401dc:	sxtw	x0, w0
   401e0:	lsl	x0, x0, #4
   401e4:	add	x0, x0, #0xf
   401e8:	lsr	x0, x0, #4
   401ec:	lsl	x0, x0, #4
   401f0:	sub	sp, sp, x0
   401f4:	mov	x0, sp
   401f8:	add	x0, x0, #0x7
   401fc:	lsr	x0, x0, #3
   40200:	lsl	x0, x0, #3
   40204:	str	x0, [x29, #576]
   40208:	ldr	x0, [x29, #592]
   4020c:	str	x0, [x29, #536]
   40210:	ldr	x0, [x29, #576]
   40214:	str	x0, [x29, #552]
   40218:	add	x0, x29, #0xc8
   4021c:	ldr	x2, [x29, #176]
   40220:	ldr	w1, [x29, #188]
   40224:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   40228:	mov	sp, x19
   4022c:	add	x0, x29, #0xc8
   40230:	bl	3febc <__asan_cplus_demangle_type@@Base+0x3828>
   40234:	add	x0, x29, #0xc8
   40238:	bl	3fe98 <__asan_cplus_demangle_type@@Base+0x3804>
   4023c:	cmp	w0, #0x0
   40240:	cset	w0, eq  // eq = none
   40244:	and	w0, w0, #0xff
   40248:	mov	sp, x29
   4024c:	ldp	x19, x20, [sp, #16]
   40250:	ldp	x21, x22, [sp, #32]
   40254:	ldp	x23, x24, [sp, #48]
   40258:	ldp	x25, x26, [sp, #64]
   4025c:	ldr	x27, [sp, #80]
   40260:	ldp	x29, x30, [sp]
   40264:	add	sp, sp, #0x260
   40268:	ret

000000000004026c <__asan_cplus_demangle_print@@Base>:
   4026c:	stp	x29, x30, [sp, #-80]!
   40270:	mov	x29, sp
   40274:	str	w0, [sp, #44]
   40278:	str	x1, [sp, #32]
   4027c:	str	w2, [sp, #40]
   40280:	str	x3, [sp, #24]
   40284:	ldrsw	x1, [sp, #40]
   40288:	add	x0, sp, #0x30
   4028c:	bl	3f9ac <__asan_cplus_demangle_type@@Base+0x3318>
   40290:	add	x0, sp, #0x30
   40294:	mov	x3, x0
   40298:	adrp	x0, 3f000 <__asan_cplus_demangle_type@@Base+0x296c>
   4029c:	add	x2, x0, #0xba4
   402a0:	ldr	x1, [sp, #32]
   402a4:	ldr	w0, [sp, #44]
   402a8:	bl	6900 <__asan_cplus_demangle_print_callback@plt>
   402ac:	cmp	w0, #0x0
   402b0:	b.ne	402cc <__asan_cplus_demangle_print@@Base+0x60>  // b.any
   402b4:	ldr	x0, [sp, #48]
   402b8:	bl	6780 <free@plt>
   402bc:	ldr	x0, [sp, #24]
   402c0:	str	xzr, [x0]
   402c4:	mov	x0, #0x0                   	// #0
   402c8:	b	402f0 <__asan_cplus_demangle_print@@Base+0x84>
   402cc:	ldr	w0, [sp, #72]
   402d0:	cmp	w0, #0x0
   402d4:	b.ne	402e0 <__asan_cplus_demangle_print@@Base+0x74>  // b.any
   402d8:	ldr	x0, [sp, #64]
   402dc:	b	402e4 <__asan_cplus_demangle_print@@Base+0x78>
   402e0:	mov	x0, #0x1                   	// #1
   402e4:	ldr	x1, [sp, #24]
   402e8:	str	x0, [x1]
   402ec:	ldr	x0, [sp, #48]
   402f0:	ldp	x29, x30, [sp], #80
   402f4:	ret
   402f8:	sub	sp, sp, #0x20
   402fc:	str	x0, [sp, #8]
   40300:	str	w1, [sp, #4]
   40304:	ldr	w0, [sp, #4]
   40308:	cmp	w0, #0x0
   4030c:	b.ge	40318 <__asan_cplus_demangle_print@@Base+0xac>  // b.tcont
   40310:	ldr	x0, [sp, #8]
   40314:	b	4039c <__asan_cplus_demangle_print@@Base+0x130>
   40318:	ldr	x0, [sp, #8]
   4031c:	str	x0, [sp, #24]
   40320:	b	40360 <__asan_cplus_demangle_print@@Base+0xf4>
   40324:	ldr	x0, [sp, #24]
   40328:	ldr	w0, [x0]
   4032c:	cmp	w0, #0x2f
   40330:	b.eq	4033c <__asan_cplus_demangle_print@@Base+0xd0>  // b.none
   40334:	mov	x0, #0x0                   	// #0
   40338:	b	4039c <__asan_cplus_demangle_print@@Base+0x130>
   4033c:	ldr	w0, [sp, #4]
   40340:	cmp	w0, #0x0
   40344:	b.le	40370 <__asan_cplus_demangle_print@@Base+0x104>
   40348:	ldr	w0, [sp, #4]
   4034c:	sub	w0, w0, #0x1
   40350:	str	w0, [sp, #4]
   40354:	ldr	x0, [sp, #24]
   40358:	ldr	x0, [x0, #16]
   4035c:	str	x0, [sp, #24]
   40360:	ldr	x0, [sp, #24]
   40364:	cmp	x0, #0x0
   40368:	b.ne	40324 <__asan_cplus_demangle_print@@Base+0xb8>  // b.any
   4036c:	b	40374 <__asan_cplus_demangle_print@@Base+0x108>
   40370:	nop
   40374:	ldr	w0, [sp, #4]
   40378:	cmp	w0, #0x0
   4037c:	b.ne	4038c <__asan_cplus_demangle_print@@Base+0x120>  // b.any
   40380:	ldr	x0, [sp, #24]
   40384:	cmp	x0, #0x0
   40388:	b.ne	40394 <__asan_cplus_demangle_print@@Base+0x128>  // b.any
   4038c:	mov	x0, #0x0                   	// #0
   40390:	b	4039c <__asan_cplus_demangle_print@@Base+0x130>
   40394:	ldr	x0, [sp, #24]
   40398:	ldr	x0, [x0, #8]
   4039c:	add	sp, sp, #0x20
   403a0:	ret
   403a4:	stp	x29, x30, [sp, #-32]!
   403a8:	mov	x29, sp
   403ac:	str	x0, [sp, #24]
   403b0:	str	x1, [sp, #16]
   403b4:	ldr	x0, [sp, #24]
   403b8:	ldr	x0, [x0, #288]
   403bc:	cmp	x0, #0x0
   403c0:	b.ne	403d4 <__asan_cplus_demangle_print@@Base+0x168>  // b.any
   403c4:	ldr	x0, [sp, #24]
   403c8:	bl	3fe78 <__asan_cplus_demangle_type@@Base+0x37e4>
   403cc:	mov	x0, #0x0                   	// #0
   403d0:	b	403f8 <__asan_cplus_demangle_print@@Base+0x18c>
   403d4:	ldr	x0, [sp, #24]
   403d8:	ldr	x0, [x0, #288]
   403dc:	ldr	x0, [x0, #8]
   403e0:	ldr	x2, [x0, #16]
   403e4:	ldr	x0, [sp, #16]
   403e8:	ldr	x0, [x0, #8]
   403ec:	mov	w1, w0
   403f0:	mov	x0, x2
   403f4:	bl	402f8 <__asan_cplus_demangle_print@@Base+0x8c>
   403f8:	ldp	x29, x30, [sp], #32
   403fc:	ret
   40400:	stp	x29, x30, [sp, #-48]!
   40404:	mov	x29, sp
   40408:	str	x0, [sp, #24]
   4040c:	str	x1, [sp, #16]
   40410:	ldr	x0, [sp, #16]
   40414:	cmp	x0, #0x0
   40418:	b.ne	40424 <__asan_cplus_demangle_print@@Base+0x1b8>  // b.any
   4041c:	mov	x0, #0x0                   	// #0
   40420:	b	405bc <__asan_cplus_demangle_print@@Base+0x350>
   40424:	ldr	x0, [sp, #16]
   40428:	ldr	w0, [x0]
   4042c:	cmp	w0, #0x4c
   40430:	b.hi	4057c <__asan_cplus_demangle_print@@Base+0x310>  // b.pmore
   40434:	cmp	w0, #0x18
   40438:	b.cs	40480 <__asan_cplus_demangle_print@@Base+0x214>  // b.hs, b.nlast
   4043c:	cmp	w0, #0x8
   40440:	b.eq	40564 <__asan_cplus_demangle_print@@Base+0x2f8>  // b.none
   40444:	cmp	w0, #0x8
   40448:	b.hi	4057c <__asan_cplus_demangle_print@@Base+0x310>  // b.pmore
   4044c:	cmp	w0, #0x7
   40450:	b.eq	4054c <__asan_cplus_demangle_print@@Base+0x2e0>  // b.none
   40454:	cmp	w0, #0x7
   40458:	b.hi	4057c <__asan_cplus_demangle_print@@Base+0x310>  // b.pmore
   4045c:	cmp	w0, #0x6
   40460:	b.eq	4052c <__asan_cplus_demangle_print@@Base+0x2c0>  // b.none
   40464:	cmp	w0, #0x6
   40468:	b.hi	4057c <__asan_cplus_demangle_print@@Base+0x310>  // b.pmore
   4046c:	cmp	w0, #0x0
   40470:	b.eq	4052c <__asan_cplus_demangle_print@@Base+0x2c0>  // b.none
   40474:	cmp	w0, #0x5
   40478:	b.eq	404e8 <__asan_cplus_demangle_print@@Base+0x27c>  // b.none
   4047c:	b	4057c <__asan_cplus_demangle_print@@Base+0x310>
   40480:	sub	w0, w0, #0x18
   40484:	mov	x1, #0x1                   	// #1
   40488:	lsl	x0, x1, x0
   4048c:	mov	x1, #0x8001                	// #32769
   40490:	movk	x1, #0x410, lsl #16
   40494:	movk	x1, #0xc600, lsl #32
   40498:	movk	x1, #0x11, lsl #48
   4049c:	and	x1, x0, x1
   404a0:	cmp	x1, #0x0
   404a4:	cset	w1, ne  // ne = any
   404a8:	and	w1, w1, #0xff
   404ac:	cmp	w1, #0x0
   404b0:	b.ne	4052c <__asan_cplus_demangle_print@@Base+0x2c0>  // b.any
   404b4:	and	x1, x0, #0x8000000
   404b8:	cmp	x1, #0x0
   404bc:	cset	w1, ne  // ne = any
   404c0:	and	w1, w1, #0xff
   404c4:	cmp	w1, #0x0
   404c8:	b.ne	40534 <__asan_cplus_demangle_print@@Base+0x2c8>  // b.any
   404cc:	and	x0, x0, #0x8000000000000
   404d0:	cmp	x0, #0x0
   404d4:	cset	w0, ne  // ne = any
   404d8:	and	w0, w0, #0xff
   404dc:	cmp	w0, #0x0
   404e0:	b.ne	40524 <__asan_cplus_demangle_print@@Base+0x2b8>  // b.any
   404e4:	b	4057c <__asan_cplus_demangle_print@@Base+0x310>
   404e8:	ldr	x1, [sp, #16]
   404ec:	ldr	x0, [sp, #24]
   404f0:	bl	403a4 <__asan_cplus_demangle_print@@Base+0x138>
   404f4:	str	x0, [sp, #40]
   404f8:	ldr	x0, [sp, #40]
   404fc:	cmp	x0, #0x0
   40500:	b.eq	4051c <__asan_cplus_demangle_print@@Base+0x2b0>  // b.none
   40504:	ldr	x0, [sp, #40]
   40508:	ldr	w0, [x0]
   4050c:	cmp	w0, #0x2f
   40510:	b.ne	4051c <__asan_cplus_demangle_print@@Base+0x2b0>  // b.any
   40514:	ldr	x0, [sp, #40]
   40518:	b	405bc <__asan_cplus_demangle_print@@Base+0x350>
   4051c:	mov	x0, #0x0                   	// #0
   40520:	b	405bc <__asan_cplus_demangle_print@@Base+0x350>
   40524:	mov	x0, #0x0                   	// #0
   40528:	b	405bc <__asan_cplus_demangle_print@@Base+0x350>
   4052c:	mov	x0, #0x0                   	// #0
   40530:	b	405bc <__asan_cplus_demangle_print@@Base+0x350>
   40534:	ldr	x0, [sp, #16]
   40538:	ldr	x0, [x0, #16]
   4053c:	mov	x1, x0
   40540:	ldr	x0, [sp, #24]
   40544:	bl	40400 <__asan_cplus_demangle_print@@Base+0x194>
   40548:	b	405bc <__asan_cplus_demangle_print@@Base+0x350>
   4054c:	ldr	x0, [sp, #16]
   40550:	ldr	x0, [x0, #16]
   40554:	mov	x1, x0
   40558:	ldr	x0, [sp, #24]
   4055c:	bl	40400 <__asan_cplus_demangle_print@@Base+0x194>
   40560:	b	405bc <__asan_cplus_demangle_print@@Base+0x350>
   40564:	ldr	x0, [sp, #16]
   40568:	ldr	x0, [x0, #16]
   4056c:	mov	x1, x0
   40570:	ldr	x0, [sp, #24]
   40574:	bl	40400 <__asan_cplus_demangle_print@@Base+0x194>
   40578:	b	405bc <__asan_cplus_demangle_print@@Base+0x350>
   4057c:	ldr	x0, [sp, #16]
   40580:	ldr	x0, [x0, #8]
   40584:	mov	x1, x0
   40588:	ldr	x0, [sp, #24]
   4058c:	bl	40400 <__asan_cplus_demangle_print@@Base+0x194>
   40590:	str	x0, [sp, #40]
   40594:	ldr	x0, [sp, #40]
   40598:	cmp	x0, #0x0
   4059c:	b.eq	405a8 <__asan_cplus_demangle_print@@Base+0x33c>  // b.none
   405a0:	ldr	x0, [sp, #40]
   405a4:	b	405bc <__asan_cplus_demangle_print@@Base+0x350>
   405a8:	ldr	x0, [sp, #16]
   405ac:	ldr	x0, [x0, #16]
   405b0:	mov	x1, x0
   405b4:	ldr	x0, [sp, #24]
   405b8:	bl	40400 <__asan_cplus_demangle_print@@Base+0x194>
   405bc:	ldp	x29, x30, [sp], #48
   405c0:	ret
   405c4:	sub	sp, sp, #0x20
   405c8:	str	x0, [sp, #8]
   405cc:	str	wzr, [sp, #28]
   405d0:	b	405ec <__asan_cplus_demangle_print@@Base+0x380>
   405d4:	ldr	w0, [sp, #28]
   405d8:	add	w0, w0, #0x1
   405dc:	str	w0, [sp, #28]
   405e0:	ldr	x0, [sp, #8]
   405e4:	ldr	x0, [x0, #16]
   405e8:	str	x0, [sp, #8]
   405ec:	ldr	x0, [sp, #8]
   405f0:	cmp	x0, #0x0
   405f4:	b.eq	40618 <__asan_cplus_demangle_print@@Base+0x3ac>  // b.none
   405f8:	ldr	x0, [sp, #8]
   405fc:	ldr	w0, [x0]
   40600:	cmp	w0, #0x2f
   40604:	b.ne	40618 <__asan_cplus_demangle_print@@Base+0x3ac>  // b.any
   40608:	ldr	x0, [sp, #8]
   4060c:	ldr	x0, [x0, #8]
   40610:	cmp	x0, #0x0
   40614:	b.ne	405d4 <__asan_cplus_demangle_print@@Base+0x368>  // b.any
   40618:	ldr	w0, [sp, #28]
   4061c:	add	sp, sp, #0x20
   40620:	ret
   40624:	stp	x29, x30, [sp, #-64]!
   40628:	mov	x29, sp
   4062c:	str	x0, [sp, #24]
   40630:	str	x1, [sp, #16]
   40634:	str	wzr, [sp, #60]
   40638:	b	406b0 <__asan_cplus_demangle_print@@Base+0x444>
   4063c:	ldr	x0, [sp, #16]
   40640:	ldr	x0, [x0, #8]
   40644:	str	x0, [sp, #48]
   40648:	ldr	x0, [sp, #48]
   4064c:	cmp	x0, #0x0
   40650:	b.eq	406d0 <__asan_cplus_demangle_print@@Base+0x464>  // b.none
   40654:	ldr	x0, [sp, #48]
   40658:	ldr	w0, [x0]
   4065c:	cmp	w0, #0x4b
   40660:	b.ne	40698 <__asan_cplus_demangle_print@@Base+0x42c>  // b.any
   40664:	ldr	x0, [sp, #48]
   40668:	ldr	x0, [x0, #8]
   4066c:	mov	x1, x0
   40670:	ldr	x0, [sp, #24]
   40674:	bl	40400 <__asan_cplus_demangle_print@@Base+0x194>
   40678:	str	x0, [sp, #40]
   4067c:	ldr	x0, [sp, #40]
   40680:	bl	405c4 <__asan_cplus_demangle_print@@Base+0x358>
   40684:	mov	w1, w0
   40688:	ldr	w0, [sp, #60]
   4068c:	add	w0, w0, w1
   40690:	str	w0, [sp, #60]
   40694:	b	406a4 <__asan_cplus_demangle_print@@Base+0x438>
   40698:	ldr	w0, [sp, #60]
   4069c:	add	w0, w0, #0x1
   406a0:	str	w0, [sp, #60]
   406a4:	ldr	x0, [sp, #16]
   406a8:	ldr	x0, [x0, #16]
   406ac:	str	x0, [sp, #16]
   406b0:	ldr	x0, [sp, #16]
   406b4:	cmp	x0, #0x0
   406b8:	b.eq	406d4 <__asan_cplus_demangle_print@@Base+0x468>  // b.none
   406bc:	ldr	x0, [sp, #16]
   406c0:	ldr	w0, [x0]
   406c4:	cmp	w0, #0x2f
   406c8:	b.eq	4063c <__asan_cplus_demangle_print@@Base+0x3d0>  // b.none
   406cc:	b	406d4 <__asan_cplus_demangle_print@@Base+0x468>
   406d0:	nop
   406d4:	ldr	w0, [sp, #60]
   406d8:	ldp	x29, x30, [sp], #64
   406dc:	ret
   406e0:	stp	x29, x30, [sp, #-64]!
   406e4:	mov	x29, sp
   406e8:	str	x0, [sp, #40]
   406ec:	str	w1, [sp, #36]
   406f0:	str	x2, [sp, #24]
   406f4:	str	wzr, [sp, #60]
   406f8:	ldr	x0, [sp, #24]
   406fc:	ldr	w0, [x0]
   40700:	cmp	w0, #0x0
   40704:	b.eq	40738 <__asan_cplus_demangle_print@@Base+0x4cc>  // b.none
   40708:	ldr	x0, [sp, #24]
   4070c:	ldr	w0, [x0]
   40710:	cmp	w0, #0x1
   40714:	b.eq	40738 <__asan_cplus_demangle_print@@Base+0x4cc>  // b.none
   40718:	ldr	x0, [sp, #24]
   4071c:	ldr	w0, [x0]
   40720:	cmp	w0, #0x31
   40724:	b.eq	40738 <__asan_cplus_demangle_print@@Base+0x4cc>  // b.none
   40728:	ldr	x0, [sp, #24]
   4072c:	ldr	w0, [x0]
   40730:	cmp	w0, #0x6
   40734:	b.ne	40740 <__asan_cplus_demangle_print@@Base+0x4d4>  // b.any
   40738:	mov	w0, #0x1                   	// #1
   4073c:	str	w0, [sp, #60]
   40740:	ldr	w0, [sp, #60]
   40744:	cmp	w0, #0x0
   40748:	b.ne	40758 <__asan_cplus_demangle_print@@Base+0x4ec>  // b.any
   4074c:	mov	w1, #0x28                  	// #40
   40750:	ldr	x0, [sp, #40]
   40754:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   40758:	ldr	x2, [sp, #24]
   4075c:	ldr	w1, [sp, #36]
   40760:	ldr	x0, [sp, #40]
   40764:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   40768:	ldr	w0, [sp, #60]
   4076c:	cmp	w0, #0x0
   40770:	b.ne	40780 <__asan_cplus_demangle_print@@Base+0x514>  // b.any
   40774:	mov	w1, #0x29                  	// #41
   40778:	ldr	x0, [sp, #40]
   4077c:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   40780:	nop
   40784:	ldp	x29, x30, [sp], #64
   40788:	ret
   4078c:	stp	x29, x30, [sp, #-64]!
   40790:	mov	x29, sp
   40794:	str	x0, [sp, #24]
   40798:	str	x1, [sp, #16]
   4079c:	ldr	x0, [sp, #24]
   407a0:	ldr	w1, [x0, #344]
   407a4:	ldr	x0, [sp, #24]
   407a8:	ldr	w0, [x0, #348]
   407ac:	cmp	w1, w0
   407b0:	b.lt	407c0 <__asan_cplus_demangle_print@@Base+0x554>  // b.tstop
   407b4:	ldr	x0, [sp, #24]
   407b8:	bl	3fe78 <__asan_cplus_demangle_type@@Base+0x37e4>
   407bc:	b	408b8 <__asan_cplus_demangle_print@@Base+0x64c>
   407c0:	ldr	x0, [sp, #24]
   407c4:	ldr	x1, [x0, #336]
   407c8:	ldr	x0, [sp, #24]
   407cc:	ldr	w0, [x0, #344]
   407d0:	sxtw	x0, w0
   407d4:	lsl	x0, x0, #4
   407d8:	add	x0, x1, x0
   407dc:	str	x0, [sp, #40]
   407e0:	ldr	x0, [sp, #24]
   407e4:	ldr	w0, [x0, #344]
   407e8:	add	w1, w0, #0x1
   407ec:	ldr	x0, [sp, #24]
   407f0:	str	w1, [x0, #344]
   407f4:	ldr	x0, [sp, #40]
   407f8:	ldr	x1, [sp, #16]
   407fc:	str	x1, [x0]
   40800:	ldr	x0, [sp, #40]
   40804:	add	x0, x0, #0x8
   40808:	str	x0, [sp, #48]
   4080c:	ldr	x0, [sp, #24]
   40810:	ldr	x0, [x0, #288]
   40814:	str	x0, [sp, #56]
   40818:	b	408a4 <__asan_cplus_demangle_print@@Base+0x638>
   4081c:	ldr	x0, [sp, #24]
   40820:	ldr	w1, [x0, #360]
   40824:	ldr	x0, [sp, #24]
   40828:	ldr	w0, [x0, #364]
   4082c:	cmp	w1, w0
   40830:	b.lt	40840 <__asan_cplus_demangle_print@@Base+0x5d4>  // b.tstop
   40834:	ldr	x0, [sp, #24]
   40838:	bl	3fe78 <__asan_cplus_demangle_type@@Base+0x37e4>
   4083c:	b	408b8 <__asan_cplus_demangle_print@@Base+0x64c>
   40840:	ldr	x0, [sp, #24]
   40844:	ldr	x1, [x0, #352]
   40848:	ldr	x0, [sp, #24]
   4084c:	ldr	w0, [x0, #360]
   40850:	sxtw	x0, w0
   40854:	lsl	x0, x0, #4
   40858:	add	x0, x1, x0
   4085c:	str	x0, [sp, #32]
   40860:	ldr	x0, [sp, #24]
   40864:	ldr	w0, [x0, #360]
   40868:	add	w1, w0, #0x1
   4086c:	ldr	x0, [sp, #24]
   40870:	str	w1, [x0, #360]
   40874:	ldr	x0, [sp, #56]
   40878:	ldr	x1, [x0, #8]
   4087c:	ldr	x0, [sp, #32]
   40880:	str	x1, [x0, #8]
   40884:	ldr	x0, [sp, #48]
   40888:	ldr	x1, [sp, #32]
   4088c:	str	x1, [x0]
   40890:	ldr	x0, [sp, #32]
   40894:	str	x0, [sp, #48]
   40898:	ldr	x0, [sp, #56]
   4089c:	ldr	x0, [x0]
   408a0:	str	x0, [sp, #56]
   408a4:	ldr	x0, [sp, #56]
   408a8:	cmp	x0, #0x0
   408ac:	b.ne	4081c <__asan_cplus_demangle_print@@Base+0x5b0>  // b.any
   408b0:	ldr	x0, [sp, #48]
   408b4:	str	xzr, [x0]
   408b8:	ldp	x29, x30, [sp], #64
   408bc:	ret
   408c0:	sub	sp, sp, #0x20
   408c4:	str	x0, [sp, #8]
   408c8:	str	x1, [sp]
   408cc:	str	wzr, [sp, #28]
   408d0:	b	4091c <__asan_cplus_demangle_print@@Base+0x6b0>
   408d4:	ldr	x0, [sp, #8]
   408d8:	ldr	x1, [x0, #336]
   408dc:	ldrsw	x0, [sp, #28]
   408e0:	lsl	x0, x0, #4
   408e4:	add	x0, x1, x0
   408e8:	ldr	x0, [x0]
   408ec:	ldr	x1, [sp]
   408f0:	cmp	x1, x0
   408f4:	b.ne	40910 <__asan_cplus_demangle_print@@Base+0x6a4>  // b.any
   408f8:	ldr	x0, [sp, #8]
   408fc:	ldr	x1, [x0, #336]
   40900:	ldrsw	x0, [sp, #28]
   40904:	lsl	x0, x0, #4
   40908:	add	x0, x1, x0
   4090c:	b	40934 <__asan_cplus_demangle_print@@Base+0x6c8>
   40910:	ldr	w0, [sp, #28]
   40914:	add	w0, w0, #0x1
   40918:	str	w0, [sp, #28]
   4091c:	ldr	x0, [sp, #8]
   40920:	ldr	w0, [x0, #344]
   40924:	ldr	w1, [sp, #28]
   40928:	cmp	w1, w0
   4092c:	b.lt	408d4 <__asan_cplus_demangle_print@@Base+0x668>  // b.tstop
   40930:	mov	x0, #0x0                   	// #0
   40934:	add	sp, sp, #0x20
   40938:	ret
   4093c:	stp	x29, x30, [sp, #-96]!
   40940:	mov	x29, sp
   40944:	str	x0, [sp, #40]
   40948:	str	w1, [sp, #36]
   4094c:	str	x2, [sp, #24]
   40950:	ldr	x0, [sp, #24]
   40954:	ldr	x0, [x0, #8]
   40958:	ldr	x0, [x0, #8]
   4095c:	ldr	x0, [x0]
   40960:	str	x0, [sp, #72]
   40964:	ldr	x0, [sp, #72]
   40968:	ldrb	w0, [x0]
   4096c:	cmp	w0, #0x66
   40970:	b.eq	4097c <__asan_cplus_demangle_print@@Base+0x710>  // b.none
   40974:	mov	w0, #0x0                   	// #0
   40978:	b	40b20 <__asan_cplus_demangle_print@@Base+0x8b4>
   4097c:	ldr	x0, [sp, #24]
   40980:	ldr	x0, [x0, #16]
   40984:	str	x0, [sp, #64]
   40988:	ldr	x0, [sp, #64]
   4098c:	ldr	x0, [x0, #8]
   40990:	str	x0, [sp, #56]
   40994:	ldr	x0, [sp, #64]
   40998:	ldr	x0, [x0, #16]
   4099c:	str	x0, [sp, #88]
   409a0:	str	xzr, [sp, #80]
   409a4:	ldr	x0, [sp, #88]
   409a8:	ldr	w0, [x0]
   409ac:	cmp	w0, #0x3c
   409b0:	b.ne	409cc <__asan_cplus_demangle_print@@Base+0x760>  // b.any
   409b4:	ldr	x0, [sp, #88]
   409b8:	ldr	x0, [x0, #16]
   409bc:	str	x0, [sp, #80]
   409c0:	ldr	x0, [sp, #88]
   409c4:	ldr	x0, [x0, #8]
   409c8:	str	x0, [sp, #88]
   409cc:	ldr	x0, [sp, #40]
   409d0:	ldr	w0, [x0, #316]
   409d4:	str	w0, [sp, #52]
   409d8:	ldr	x0, [sp, #40]
   409dc:	mov	w1, #0xffffffff            	// #-1
   409e0:	str	w1, [x0, #316]
   409e4:	ldr	x0, [sp, #72]
   409e8:	add	x0, x0, #0x1
   409ec:	ldrb	w0, [x0]
   409f0:	cmp	w0, #0x72
   409f4:	b.eq	40a64 <__asan_cplus_demangle_print@@Base+0x7f8>  // b.none
   409f8:	cmp	w0, #0x72
   409fc:	b.gt	40b10 <__asan_cplus_demangle_print@@Base+0x8a4>
   40a00:	cmp	w0, #0x6c
   40a04:	b.eq	40a24 <__asan_cplus_demangle_print@@Base+0x7b8>  // b.none
   40a08:	cmp	w0, #0x6c
   40a0c:	b.gt	40b10 <__asan_cplus_demangle_print@@Base+0x8a4>
   40a10:	cmp	w0, #0x4c
   40a14:	b.eq	40aa4 <__asan_cplus_demangle_print@@Base+0x838>  // b.none
   40a18:	cmp	w0, #0x52
   40a1c:	b.eq	40aa4 <__asan_cplus_demangle_print@@Base+0x838>  // b.none
   40a20:	b	40b10 <__asan_cplus_demangle_print@@Base+0x8a4>
   40a24:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   40a28:	add	x1, x0, #0xb8
   40a2c:	ldr	x0, [sp, #40]
   40a30:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   40a34:	ldr	x2, [sp, #56]
   40a38:	ldr	w1, [sp, #36]
   40a3c:	ldr	x0, [sp, #40]
   40a40:	bl	43918 <__asan_cplus_demangle_print@@Base+0x36ac>
   40a44:	ldr	x2, [sp, #88]
   40a48:	ldr	w1, [sp, #36]
   40a4c:	ldr	x0, [sp, #40]
   40a50:	bl	406e0 <__asan_cplus_demangle_print@@Base+0x474>
   40a54:	mov	w1, #0x29                  	// #41
   40a58:	ldr	x0, [sp, #40]
   40a5c:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   40a60:	b	40b10 <__asan_cplus_demangle_print@@Base+0x8a4>
   40a64:	mov	w1, #0x28                  	// #40
   40a68:	ldr	x0, [sp, #40]
   40a6c:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   40a70:	ldr	x2, [sp, #88]
   40a74:	ldr	w1, [sp, #36]
   40a78:	ldr	x0, [sp, #40]
   40a7c:	bl	406e0 <__asan_cplus_demangle_print@@Base+0x474>
   40a80:	ldr	x2, [sp, #56]
   40a84:	ldr	w1, [sp, #36]
   40a88:	ldr	x0, [sp, #40]
   40a8c:	bl	43918 <__asan_cplus_demangle_print@@Base+0x36ac>
   40a90:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   40a94:	add	x1, x0, #0xc0
   40a98:	ldr	x0, [sp, #40]
   40a9c:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   40aa0:	b	40b10 <__asan_cplus_demangle_print@@Base+0x8a4>
   40aa4:	mov	w1, #0x28                  	// #40
   40aa8:	ldr	x0, [sp, #40]
   40aac:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   40ab0:	ldr	x2, [sp, #88]
   40ab4:	ldr	w1, [sp, #36]
   40ab8:	ldr	x0, [sp, #40]
   40abc:	bl	406e0 <__asan_cplus_demangle_print@@Base+0x474>
   40ac0:	ldr	x2, [sp, #56]
   40ac4:	ldr	w1, [sp, #36]
   40ac8:	ldr	x0, [sp, #40]
   40acc:	bl	43918 <__asan_cplus_demangle_print@@Base+0x36ac>
   40ad0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   40ad4:	add	x1, x0, #0x820
   40ad8:	ldr	x0, [sp, #40]
   40adc:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   40ae0:	ldr	x2, [sp, #56]
   40ae4:	ldr	w1, [sp, #36]
   40ae8:	ldr	x0, [sp, #40]
   40aec:	bl	43918 <__asan_cplus_demangle_print@@Base+0x36ac>
   40af0:	ldr	x2, [sp, #80]
   40af4:	ldr	w1, [sp, #36]
   40af8:	ldr	x0, [sp, #40]
   40afc:	bl	406e0 <__asan_cplus_demangle_print@@Base+0x474>
   40b00:	mov	w1, #0x29                  	// #41
   40b04:	ldr	x0, [sp, #40]
   40b08:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   40b0c:	nop
   40b10:	ldr	x0, [sp, #40]
   40b14:	ldr	w1, [sp, #52]
   40b18:	str	w1, [x0, #316]
   40b1c:	mov	w0, #0x1                   	// #1
   40b20:	ldp	x29, x30, [sp], #96
   40b24:	ret
   40b28:	sub	sp, sp, #0x200
   40b2c:	stp	x29, x30, [sp]
   40b30:	mov	x29, sp
   40b34:	str	x0, [sp, #40]
   40b38:	str	w1, [sp, #36]
   40b3c:	str	x2, [sp, #24]
   40b40:	str	xzr, [sp, #504]
   40b44:	str	wzr, [sp, #492]
   40b48:	ldr	x0, [sp, #24]
   40b4c:	cmp	x0, #0x0
   40b50:	b.ne	40b60 <__asan_cplus_demangle_print@@Base+0x8f4>  // b.any
   40b54:	ldr	x0, [sp, #40]
   40b58:	bl	3fe78 <__asan_cplus_demangle_type@@Base+0x37e4>
   40b5c:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   40b60:	ldr	x0, [sp, #40]
   40b64:	bl	3fe98 <__asan_cplus_demangle_type@@Base+0x3804>
   40b68:	cmp	w0, #0x0
   40b6c:	b.ne	42cfc <__asan_cplus_demangle_print@@Base+0x2a90>  // b.any
   40b70:	ldr	x0, [sp, #24]
   40b74:	ldr	w0, [x0]
   40b78:	cmp	w0, #0x50
   40b7c:	b.hi	42cf0 <__asan_cplus_demangle_print@@Base+0x2a84>  // b.pmore
   40b80:	adrp	x1, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   40b84:	add	x1, x1, #0x3e4
   40b88:	ldr	w0, [x1, w0, uxtw #2]
   40b8c:	adr	x1, 40b98 <__asan_cplus_demangle_print@@Base+0x92c>
   40b90:	add	x0, x1, w0, sxtw #2
   40b94:	br	x0
   40b98:	ldr	w0, [sp, #36]
   40b9c:	and	w0, w0, #0x4
   40ba0:	cmp	w0, #0x0
   40ba4:	b.ne	40bcc <__asan_cplus_demangle_print@@Base+0x960>  // b.any
   40ba8:	ldr	x0, [sp, #24]
   40bac:	ldr	x1, [x0, #8]
   40bb0:	ldr	x0, [sp, #24]
   40bb4:	ldr	w0, [x0, #16]
   40bb8:	sxtw	x0, w0
   40bbc:	mov	x2, x0
   40bc0:	ldr	x0, [sp, #40]
   40bc4:	bl	3ff88 <__asan_cplus_demangle_type@@Base+0x38f4>
   40bc8:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   40bcc:	ldr	x0, [sp, #24]
   40bd0:	ldr	x1, [x0, #8]
   40bd4:	ldr	x0, [sp, #24]
   40bd8:	ldr	w0, [x0, #16]
   40bdc:	mov	w2, w0
   40be0:	ldr	x0, [sp, #40]
   40be4:	bl	42e3c <__asan_cplus_demangle_print@@Base+0x2bd0>
   40be8:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   40bec:	ldr	x0, [sp, #24]
   40bf0:	ldr	x0, [x0, #8]
   40bf4:	mov	x2, x0
   40bf8:	ldr	w1, [sp, #36]
   40bfc:	ldr	x0, [sp, #40]
   40c00:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   40c04:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   40c08:	add	x1, x0, #0xc8
   40c0c:	ldr	x0, [sp, #40]
   40c10:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   40c14:	ldr	x0, [sp, #24]
   40c18:	ldr	x0, [x0, #16]
   40c1c:	mov	x2, x0
   40c20:	ldr	w1, [sp, #36]
   40c24:	ldr	x0, [sp, #40]
   40c28:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   40c2c:	mov	w1, #0x5d                  	// #93
   40c30:	ldr	x0, [sp, #40]
   40c34:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   40c38:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   40c3c:	ldr	x0, [sp, #24]
   40c40:	ldr	x0, [x0, #8]
   40c44:	mov	x2, x0
   40c48:	ldr	w1, [sp, #36]
   40c4c:	ldr	x0, [sp, #40]
   40c50:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   40c54:	ldr	w0, [sp, #36]
   40c58:	and	w0, w0, #0x4
   40c5c:	cmp	w0, #0x0
   40c60:	b.ne	40c78 <__asan_cplus_demangle_print@@Base+0xa0c>  // b.any
   40c64:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   40c68:	add	x1, x0, #0x858
   40c6c:	ldr	x0, [sp, #40]
   40c70:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   40c74:	b	40c84 <__asan_cplus_demangle_print@@Base+0xa18>
   40c78:	mov	w1, #0x2e                  	// #46
   40c7c:	ldr	x0, [sp, #40]
   40c80:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   40c84:	ldr	x0, [sp, #24]
   40c88:	ldr	x0, [x0, #16]
   40c8c:	str	x0, [sp, #480]
   40c90:	ldr	x0, [sp, #480]
   40c94:	ldr	w0, [x0]
   40c98:	cmp	w0, #0x47
   40c9c:	b.ne	40ce4 <__asan_cplus_demangle_print@@Base+0xa78>  // b.any
   40ca0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   40ca4:	add	x1, x0, #0xd0
   40ca8:	ldr	x0, [sp, #40]
   40cac:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   40cb0:	ldr	x0, [sp, #480]
   40cb4:	ldr	w0, [x0, #16]
   40cb8:	add	w0, w0, #0x1
   40cbc:	mov	w1, w0
   40cc0:	ldr	x0, [sp, #40]
   40cc4:	bl	40020 <__asan_cplus_demangle_type@@Base+0x398c>
   40cc8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   40ccc:	add	x1, x0, #0xe0
   40cd0:	ldr	x0, [sp, #40]
   40cd4:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   40cd8:	ldr	x0, [sp, #480]
   40cdc:	ldr	x0, [x0, #8]
   40ce0:	str	x0, [sp, #480]
   40ce4:	ldr	x2, [sp, #480]
   40ce8:	ldr	w1, [sp, #36]
   40cec:	ldr	x0, [sp, #40]
   40cf0:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   40cf4:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   40cf8:	ldr	x0, [sp, #40]
   40cfc:	ldr	x0, [x0, #296]
   40d00:	str	x0, [sp, #192]
   40d04:	ldr	x0, [sp, #40]
   40d08:	str	xzr, [x0, #296]
   40d0c:	str	wzr, [sp, #468]
   40d10:	ldr	x0, [sp, #24]
   40d14:	ldr	x0, [x0, #8]
   40d18:	str	x0, [sp, #472]
   40d1c:	b	40dd0 <__asan_cplus_demangle_print@@Base+0xb64>
   40d20:	ldr	w0, [sp, #468]
   40d24:	cmp	w0, #0x3
   40d28:	b.ls	40d38 <__asan_cplus_demangle_print@@Base+0xacc>  // b.plast
   40d2c:	ldr	x0, [sp, #40]
   40d30:	bl	3fe78 <__asan_cplus_demangle_type@@Base+0x37e4>
   40d34:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   40d38:	ldr	x0, [sp, #40]
   40d3c:	ldr	x2, [x0, #296]
   40d40:	ldr	w0, [sp, #468]
   40d44:	lsl	x0, x0, #5
   40d48:	add	x1, sp, #0x30
   40d4c:	str	x2, [x1, x0]
   40d50:	add	x1, sp, #0x30
   40d54:	ldr	w0, [sp, #468]
   40d58:	lsl	x0, x0, #5
   40d5c:	add	x1, x1, x0
   40d60:	ldr	x0, [sp, #40]
   40d64:	str	x1, [x0, #296]
   40d68:	ldr	w0, [sp, #468]
   40d6c:	lsl	x0, x0, #5
   40d70:	add	x1, sp, #0x38
   40d74:	ldr	x2, [sp, #472]
   40d78:	str	x2, [x1, x0]
   40d7c:	ldr	w0, [sp, #468]
   40d80:	lsl	x0, x0, #5
   40d84:	add	x1, sp, #0x40
   40d88:	str	wzr, [x1, x0]
   40d8c:	ldr	x0, [sp, #40]
   40d90:	ldr	x2, [x0, #288]
   40d94:	ldr	w0, [sp, #468]
   40d98:	lsl	x0, x0, #5
   40d9c:	add	x1, sp, #0x48
   40da0:	str	x2, [x1, x0]
   40da4:	ldr	w0, [sp, #468]
   40da8:	add	w0, w0, #0x1
   40dac:	str	w0, [sp, #468]
   40db0:	ldr	x0, [sp, #472]
   40db4:	ldr	w0, [x0]
   40db8:	bl	39fc0 <__asan_backtrace_create_state@@Base+0xa4>
   40dbc:	cmp	w0, #0x0
   40dc0:	b.eq	40de0 <__asan_cplus_demangle_print@@Base+0xb74>  // b.none
   40dc4:	ldr	x0, [sp, #472]
   40dc8:	ldr	x0, [x0, #8]
   40dcc:	str	x0, [sp, #472]
   40dd0:	ldr	x0, [sp, #472]
   40dd4:	cmp	x0, #0x0
   40dd8:	b.ne	40d20 <__asan_cplus_demangle_print@@Base+0xab4>  // b.any
   40ddc:	b	40de4 <__asan_cplus_demangle_print@@Base+0xb78>
   40de0:	nop
   40de4:	ldr	x0, [sp, #472]
   40de8:	cmp	x0, #0x0
   40dec:	b.ne	40dfc <__asan_cplus_demangle_print@@Base+0xb90>  // b.any
   40df0:	ldr	x0, [sp, #40]
   40df4:	bl	3fe78 <__asan_cplus_demangle_type@@Base+0x37e4>
   40df8:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   40dfc:	ldr	x0, [sp, #472]
   40e00:	ldr	w0, [x0]
   40e04:	cmp	w0, #0x2
   40e08:	b.ne	40f5c <__asan_cplus_demangle_print@@Base+0xcf0>  // b.any
   40e0c:	ldr	x0, [sp, #472]
   40e10:	ldr	x0, [x0, #16]
   40e14:	str	x0, [sp, #472]
   40e18:	ldr	x0, [sp, #472]
   40e1c:	ldr	w0, [x0]
   40e20:	cmp	w0, #0x47
   40e24:	b.ne	40e34 <__asan_cplus_demangle_print@@Base+0xbc8>  // b.any
   40e28:	ldr	x0, [sp, #472]
   40e2c:	ldr	x0, [x0, #8]
   40e30:	str	x0, [sp, #472]
   40e34:	ldr	x0, [sp, #472]
   40e38:	cmp	x0, #0x0
   40e3c:	b.ne	40f48 <__asan_cplus_demangle_print@@Base+0xcdc>  // b.any
   40e40:	ldr	x0, [sp, #40]
   40e44:	bl	3fe78 <__asan_cplus_demangle_type@@Base+0x37e4>
   40e48:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   40e4c:	ldr	w0, [sp, #468]
   40e50:	cmp	w0, #0x3
   40e54:	b.ls	40e64 <__asan_cplus_demangle_print@@Base+0xbf8>  // b.plast
   40e58:	ldr	x0, [sp, #40]
   40e5c:	bl	3fe78 <__asan_cplus_demangle_type@@Base+0x37e4>
   40e60:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   40e64:	ldr	w0, [sp, #468]
   40e68:	sub	w1, w0, #0x1
   40e6c:	ldr	w0, [sp, #468]
   40e70:	lsl	x2, x0, #5
   40e74:	add	x3, sp, #0x30
   40e78:	mov	w0, w1
   40e7c:	lsl	x0, x0, #5
   40e80:	add	x1, sp, #0x30
   40e84:	add	x2, x3, x2
   40e88:	add	x3, x1, x0
   40e8c:	ldp	x0, x1, [x3]
   40e90:	stp	x0, x1, [x2]
   40e94:	ldp	x0, x1, [x3, #16]
   40e98:	stp	x0, x1, [x2, #16]
   40e9c:	ldr	w0, [sp, #468]
   40ea0:	sub	w0, w0, #0x1
   40ea4:	add	x1, sp, #0x30
   40ea8:	mov	w0, w0
   40eac:	lsl	x0, x0, #5
   40eb0:	add	x2, x1, x0
   40eb4:	ldr	w0, [sp, #468]
   40eb8:	lsl	x0, x0, #5
   40ebc:	add	x1, sp, #0x30
   40ec0:	str	x2, [x1, x0]
   40ec4:	add	x1, sp, #0x30
   40ec8:	ldr	w0, [sp, #468]
   40ecc:	lsl	x0, x0, #5
   40ed0:	add	x1, x1, x0
   40ed4:	ldr	x0, [sp, #40]
   40ed8:	str	x1, [x0, #296]
   40edc:	ldr	w0, [sp, #468]
   40ee0:	sub	w0, w0, #0x1
   40ee4:	mov	w0, w0
   40ee8:	lsl	x0, x0, #5
   40eec:	add	x1, sp, #0x38
   40ef0:	ldr	x2, [sp, #472]
   40ef4:	str	x2, [x1, x0]
   40ef8:	ldr	w0, [sp, #468]
   40efc:	sub	w0, w0, #0x1
   40f00:	mov	w0, w0
   40f04:	lsl	x0, x0, #5
   40f08:	add	x1, sp, #0x40
   40f0c:	str	wzr, [x1, x0]
   40f10:	ldr	w0, [sp, #468]
   40f14:	sub	w1, w0, #0x1
   40f18:	ldr	x0, [sp, #40]
   40f1c:	ldr	x2, [x0, #288]
   40f20:	mov	w0, w1
   40f24:	lsl	x0, x0, #5
   40f28:	add	x1, sp, #0x48
   40f2c:	str	x2, [x1, x0]
   40f30:	ldr	w0, [sp, #468]
   40f34:	add	w0, w0, #0x1
   40f38:	str	w0, [sp, #468]
   40f3c:	ldr	x0, [sp, #472]
   40f40:	ldr	x0, [x0, #8]
   40f44:	str	x0, [sp, #472]
   40f48:	ldr	x0, [sp, #472]
   40f4c:	ldr	w0, [x0]
   40f50:	bl	39fc0 <__asan_backtrace_create_state@@Base+0xa4>
   40f54:	cmp	w0, #0x0
   40f58:	b.ne	40e4c <__asan_cplus_demangle_print@@Base+0xbe0>  // b.any
   40f5c:	ldr	x0, [sp, #472]
   40f60:	ldr	w0, [x0]
   40f64:	cmp	w0, #0x4
   40f68:	b.ne	40f8c <__asan_cplus_demangle_print@@Base+0xd20>  // b.any
   40f6c:	ldr	x0, [sp, #40]
   40f70:	ldr	x0, [x0, #288]
   40f74:	str	x0, [sp, #176]
   40f78:	ldr	x0, [sp, #40]
   40f7c:	add	x1, sp, #0xb0
   40f80:	str	x1, [x0, #288]
   40f84:	ldr	x0, [sp, #472]
   40f88:	str	x0, [sp, #184]
   40f8c:	ldr	x0, [sp, #24]
   40f90:	ldr	x0, [x0, #16]
   40f94:	mov	x2, x0
   40f98:	ldr	w1, [sp, #36]
   40f9c:	ldr	x0, [sp, #40]
   40fa0:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   40fa4:	ldr	x0, [sp, #472]
   40fa8:	ldr	w0, [x0]
   40fac:	cmp	w0, #0x4
   40fb0:	b.ne	41014 <__asan_cplus_demangle_print@@Base+0xda8>  // b.any
   40fb4:	ldr	x1, [sp, #176]
   40fb8:	ldr	x0, [sp, #40]
   40fbc:	str	x1, [x0, #288]
   40fc0:	b	41014 <__asan_cplus_demangle_print@@Base+0xda8>
   40fc4:	ldr	w0, [sp, #468]
   40fc8:	sub	w0, w0, #0x1
   40fcc:	str	w0, [sp, #468]
   40fd0:	ldr	w0, [sp, #468]
   40fd4:	lsl	x0, x0, #5
   40fd8:	add	x1, sp, #0x40
   40fdc:	ldr	w0, [x1, x0]
   40fe0:	cmp	w0, #0x0
   40fe4:	b.ne	41014 <__asan_cplus_demangle_print@@Base+0xda8>  // b.any
   40fe8:	mov	w1, #0x20                  	// #32
   40fec:	ldr	x0, [sp, #40]
   40ff0:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   40ff4:	ldr	w0, [sp, #468]
   40ff8:	lsl	x0, x0, #5
   40ffc:	add	x1, sp, #0x38
   41000:	ldr	x0, [x1, x0]
   41004:	mov	x2, x0
   41008:	ldr	w1, [sp, #36]
   4100c:	ldr	x0, [sp, #40]
   41010:	bl	432d8 <__asan_cplus_demangle_print@@Base+0x306c>
   41014:	ldr	w0, [sp, #468]
   41018:	cmp	w0, #0x0
   4101c:	b.ne	40fc4 <__asan_cplus_demangle_print@@Base+0xd58>  // b.any
   41020:	ldr	x0, [sp, #40]
   41024:	ldr	x1, [sp, #192]
   41028:	str	x1, [x0, #296]
   4102c:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41030:	ldr	x0, [sp, #40]
   41034:	ldr	x0, [x0, #368]
   41038:	str	x0, [sp, #216]
   4103c:	ldr	x0, [sp, #40]
   41040:	ldr	x1, [sp, #24]
   41044:	str	x1, [x0, #368]
   41048:	ldr	x0, [sp, #40]
   4104c:	ldr	x0, [x0, #296]
   41050:	str	x0, [sp, #208]
   41054:	ldr	x0, [sp, #40]
   41058:	str	xzr, [x0, #296]
   4105c:	ldr	x0, [sp, #24]
   41060:	ldr	x0, [x0, #8]
   41064:	str	x0, [sp, #200]
   41068:	ldr	w0, [sp, #36]
   4106c:	and	w0, w0, #0x4
   41070:	cmp	w0, #0x0
   41074:	b.eq	410e8 <__asan_cplus_demangle_print@@Base+0xe7c>  // b.none
   41078:	ldr	x0, [sp, #200]
   4107c:	ldr	w0, [x0]
   41080:	cmp	w0, #0x0
   41084:	b.ne	410e8 <__asan_cplus_demangle_print@@Base+0xe7c>  // b.any
   41088:	ldr	x0, [sp, #200]
   4108c:	ldr	w0, [x0, #16]
   41090:	cmp	w0, #0x6
   41094:	b.ne	410e8 <__asan_cplus_demangle_print@@Base+0xe7c>  // b.any
   41098:	ldr	x0, [sp, #200]
   4109c:	ldr	x3, [x0, #8]
   410a0:	mov	x2, #0x6                   	// #6
   410a4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   410a8:	add	x1, x0, #0xe8
   410ac:	mov	x0, x3
   410b0:	bl	6a70 <__asan_internal_strncmp@plt>
   410b4:	cmp	w0, #0x0
   410b8:	b.ne	410e8 <__asan_cplus_demangle_print@@Base+0xe7c>  // b.any
   410bc:	ldr	x0, [sp, #24]
   410c0:	ldr	x0, [x0, #16]
   410c4:	mov	x2, x0
   410c8:	ldr	w1, [sp, #36]
   410cc:	ldr	x0, [sp, #40]
   410d0:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   410d4:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   410d8:	add	x1, x0, #0x878
   410dc:	ldr	x0, [sp, #40]
   410e0:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   410e4:	b	41168 <__asan_cplus_demangle_print@@Base+0xefc>
   410e8:	ldr	x2, [sp, #200]
   410ec:	ldr	w1, [sp, #36]
   410f0:	ldr	x0, [sp, #40]
   410f4:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   410f8:	ldr	x0, [sp, #40]
   410fc:	bl	40064 <__asan_cplus_demangle_type@@Base+0x39d0>
   41100:	and	w0, w0, #0xff
   41104:	cmp	w0, #0x3c
   41108:	b.ne	41118 <__asan_cplus_demangle_print@@Base+0xeac>  // b.any
   4110c:	mov	w1, #0x20                  	// #32
   41110:	ldr	x0, [sp, #40]
   41114:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   41118:	mov	w1, #0x3c                  	// #60
   4111c:	ldr	x0, [sp, #40]
   41120:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   41124:	ldr	x0, [sp, #24]
   41128:	ldr	x0, [x0, #16]
   4112c:	mov	x2, x0
   41130:	ldr	w1, [sp, #36]
   41134:	ldr	x0, [sp, #40]
   41138:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   4113c:	ldr	x0, [sp, #40]
   41140:	bl	40064 <__asan_cplus_demangle_type@@Base+0x39d0>
   41144:	and	w0, w0, #0xff
   41148:	cmp	w0, #0x3e
   4114c:	b.ne	4115c <__asan_cplus_demangle_print@@Base+0xef0>  // b.any
   41150:	mov	w1, #0x20                  	// #32
   41154:	ldr	x0, [sp, #40]
   41158:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   4115c:	mov	w1, #0x3e                  	// #62
   41160:	ldr	x0, [sp, #40]
   41164:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   41168:	ldr	x0, [sp, #40]
   4116c:	ldr	x1, [sp, #208]
   41170:	str	x1, [x0, #296]
   41174:	ldr	x0, [sp, #40]
   41178:	ldr	x1, [sp, #216]
   4117c:	str	x1, [x0, #368]
   41180:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41184:	ldr	x0, [sp, #40]
   41188:	ldr	w0, [x0, #312]
   4118c:	cmp	w0, #0x0
   41190:	b.eq	411c4 <__asan_cplus_demangle_print@@Base+0xf58>  // b.none
   41194:	mov	x2, #0x5                   	// #5
   41198:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   4119c:	add	x1, x0, #0xf0
   411a0:	ldr	x0, [sp, #40]
   411a4:	bl	3ff88 <__asan_cplus_demangle_type@@Base+0x38f4>
   411a8:	ldr	x0, [sp, #24]
   411ac:	ldr	x0, [x0, #8]
   411b0:	add	w0, w0, #0x1
   411b4:	mov	w1, w0
   411b8:	ldr	x0, [sp, #40]
   411bc:	bl	40020 <__asan_cplus_demangle_type@@Base+0x398c>
   411c0:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   411c4:	ldr	x1, [sp, #24]
   411c8:	ldr	x0, [sp, #40]
   411cc:	bl	403a4 <__asan_cplus_demangle_print@@Base+0x138>
   411d0:	str	x0, [sp, #456]
   411d4:	ldr	x0, [sp, #456]
   411d8:	cmp	x0, #0x0
   411dc:	b.eq	41208 <__asan_cplus_demangle_print@@Base+0xf9c>  // b.none
   411e0:	ldr	x0, [sp, #456]
   411e4:	ldr	w0, [x0]
   411e8:	cmp	w0, #0x2f
   411ec:	b.ne	41208 <__asan_cplus_demangle_print@@Base+0xf9c>  // b.any
   411f0:	ldr	x0, [sp, #40]
   411f4:	ldr	w0, [x0, #316]
   411f8:	mov	w1, w0
   411fc:	ldr	x0, [sp, #456]
   41200:	bl	402f8 <__asan_cplus_demangle_print@@Base+0x8c>
   41204:	str	x0, [sp, #456]
   41208:	ldr	x0, [sp, #456]
   4120c:	cmp	x0, #0x0
   41210:	b.ne	41220 <__asan_cplus_demangle_print@@Base+0xfb4>  // b.any
   41214:	ldr	x0, [sp, #40]
   41218:	bl	3fe78 <__asan_cplus_demangle_type@@Base+0x37e4>
   4121c:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41220:	ldr	x0, [sp, #40]
   41224:	ldr	x0, [x0, #288]
   41228:	str	x0, [sp, #224]
   4122c:	ldr	x0, [sp, #224]
   41230:	ldr	x1, [x0]
   41234:	ldr	x0, [sp, #40]
   41238:	str	x1, [x0, #288]
   4123c:	ldr	x2, [sp, #456]
   41240:	ldr	w1, [sp, #36]
   41244:	ldr	x0, [sp, #40]
   41248:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   4124c:	ldr	x0, [sp, #40]
   41250:	ldr	x1, [sp, #224]
   41254:	str	x1, [x0, #288]
   41258:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4125c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   41260:	add	x1, x0, #0xf8
   41264:	ldr	x0, [sp, #40]
   41268:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   4126c:	ldr	x0, [sp, #24]
   41270:	ldr	x0, [x0, #8]
   41274:	mov	x2, x0
   41278:	ldr	w1, [sp, #36]
   4127c:	ldr	x0, [sp, #40]
   41280:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41284:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41288:	ldr	x0, [sp, #24]
   4128c:	ldr	x0, [x0, #16]
   41290:	mov	x2, x0
   41294:	ldr	w1, [sp, #36]
   41298:	ldr	x0, [sp, #40]
   4129c:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   412a0:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   412a4:	mov	w1, #0x7e                  	// #126
   412a8:	ldr	x0, [sp, #40]
   412ac:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   412b0:	ldr	x0, [sp, #24]
   412b4:	ldr	x0, [x0, #16]
   412b8:	mov	x2, x0
   412bc:	ldr	w1, [sp, #36]
   412c0:	ldr	x0, [sp, #40]
   412c4:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   412c8:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   412cc:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   412d0:	add	x1, x0, #0x118
   412d4:	ldr	x0, [sp, #40]
   412d8:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   412dc:	ldr	x0, [sp, #24]
   412e0:	ldr	x0, [x0, #8]
   412e4:	mov	x2, x0
   412e8:	ldr	w1, [sp, #36]
   412ec:	ldr	x0, [sp, #40]
   412f0:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   412f4:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   412f8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   412fc:	add	x1, x0, #0x128
   41300:	ldr	x0, [sp, #40]
   41304:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   41308:	ldr	x0, [sp, #24]
   4130c:	ldr	x0, [x0, #8]
   41310:	mov	x2, x0
   41314:	ldr	w1, [sp, #36]
   41318:	ldr	x0, [sp, #40]
   4131c:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41320:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41324:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   41328:	add	x1, x0, #0x138
   4132c:	ldr	x0, [sp, #40]
   41330:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   41334:	ldr	x0, [sp, #24]
   41338:	ldr	x0, [x0, #8]
   4133c:	mov	x2, x0
   41340:	ldr	w1, [sp, #36]
   41344:	ldr	x0, [sp, #40]
   41348:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   4134c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   41350:	add	x1, x0, #0x158
   41354:	ldr	x0, [sp, #40]
   41358:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   4135c:	ldr	x0, [sp, #24]
   41360:	ldr	x0, [x0, #16]
   41364:	mov	x2, x0
   41368:	ldr	w1, [sp, #36]
   4136c:	ldr	x0, [sp, #40]
   41370:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41374:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41378:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   4137c:	add	x1, x0, #0x160
   41380:	ldr	x0, [sp, #40]
   41384:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   41388:	ldr	x0, [sp, #24]
   4138c:	ldr	x0, [x0, #8]
   41390:	mov	x2, x0
   41394:	ldr	w1, [sp, #36]
   41398:	ldr	x0, [sp, #40]
   4139c:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   413a0:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   413a4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   413a8:	add	x1, x0, #0x170
   413ac:	ldr	x0, [sp, #40]
   413b0:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   413b4:	ldr	x0, [sp, #24]
   413b8:	ldr	x0, [x0, #8]
   413bc:	mov	x2, x0
   413c0:	ldr	w1, [sp, #36]
   413c4:	ldr	x0, [sp, #40]
   413c8:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   413cc:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   413d0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   413d4:	add	x1, x0, #0x188
   413d8:	ldr	x0, [sp, #40]
   413dc:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   413e0:	ldr	x0, [sp, #24]
   413e4:	ldr	x0, [x0, #8]
   413e8:	mov	x2, x0
   413ec:	ldr	w1, [sp, #36]
   413f0:	ldr	x0, [sp, #40]
   413f4:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   413f8:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   413fc:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   41400:	add	x1, x0, #0x1a0
   41404:	ldr	x0, [sp, #40]
   41408:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   4140c:	ldr	x0, [sp, #24]
   41410:	ldr	x0, [x0, #8]
   41414:	mov	x2, x0
   41418:	ldr	w1, [sp, #36]
   4141c:	ldr	x0, [sp, #40]
   41420:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41424:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41428:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   4142c:	add	x1, x0, #0x1b8
   41430:	ldr	x0, [sp, #40]
   41434:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   41438:	ldr	x0, [sp, #24]
   4143c:	ldr	x0, [x0, #8]
   41440:	mov	x2, x0
   41444:	ldr	w1, [sp, #36]
   41448:	ldr	x0, [sp, #40]
   4144c:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41450:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41454:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   41458:	add	x1, x0, #0x1d0
   4145c:	ldr	x0, [sp, #40]
   41460:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   41464:	ldr	x0, [sp, #24]
   41468:	ldr	x0, [x0, #8]
   4146c:	mov	x2, x0
   41470:	ldr	w1, [sp, #36]
   41474:	ldr	x0, [sp, #40]
   41478:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   4147c:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41480:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   41484:	add	x1, x0, #0x1f0
   41488:	ldr	x0, [sp, #40]
   4148c:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   41490:	ldr	x0, [sp, #24]
   41494:	ldr	x0, [x0, #8]
   41498:	mov	x2, x0
   4149c:	ldr	w1, [sp, #36]
   414a0:	ldr	x0, [sp, #40]
   414a4:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   414a8:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   414ac:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   414b0:	add	x1, x0, #0x200
   414b4:	ldr	x0, [sp, #40]
   414b8:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   414bc:	ldr	x0, [sp, #24]
   414c0:	ldr	x0, [x0, #8]
   414c4:	mov	x2, x0
   414c8:	ldr	w1, [sp, #36]
   414cc:	ldr	x0, [sp, #40]
   414d0:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   414d4:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   414d8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   414dc:	add	x1, x0, #0x218
   414e0:	ldr	x0, [sp, #40]
   414e4:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   414e8:	ldr	x0, [sp, #24]
   414ec:	ldr	x0, [x0, #8]
   414f0:	mov	x2, x0
   414f4:	ldr	w1, [sp, #36]
   414f8:	ldr	x0, [sp, #40]
   414fc:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41500:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41504:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   41508:	add	x1, x0, #0x230
   4150c:	ldr	x0, [sp, #40]
   41510:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   41514:	ldr	x0, [sp, #24]
   41518:	ldr	x0, [x0, #8]
   4151c:	mov	x2, x0
   41520:	ldr	w1, [sp, #36]
   41524:	ldr	x0, [sp, #40]
   41528:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   4152c:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41530:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   41534:	add	x1, x0, #0x250
   41538:	ldr	x0, [sp, #40]
   4153c:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   41540:	ldr	x0, [sp, #24]
   41544:	ldr	x0, [x0, #16]
   41548:	mov	x2, x0
   4154c:	ldr	w1, [sp, #36]
   41550:	ldr	x0, [sp, #40]
   41554:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41558:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   4155c:	add	x1, x0, #0x268
   41560:	ldr	x0, [sp, #40]
   41564:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   41568:	ldr	x0, [sp, #24]
   4156c:	ldr	x0, [x0, #8]
   41570:	mov	x2, x0
   41574:	ldr	w1, [sp, #36]
   41578:	ldr	x0, [sp, #40]
   4157c:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41580:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41584:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   41588:	add	x1, x0, #0x270
   4158c:	ldr	x0, [sp, #40]
   41590:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   41594:	ldr	x0, [sp, #24]
   41598:	ldr	x0, [x0, #8]
   4159c:	mov	x2, x0
   415a0:	ldr	w1, [sp, #36]
   415a4:	ldr	x0, [sp, #40]
   415a8:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   415ac:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   415b0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   415b4:	add	x1, x0, #0x288
   415b8:	ldr	x0, [sp, #40]
   415bc:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   415c0:	ldr	x0, [sp, #24]
   415c4:	ldr	x0, [x0, #8]
   415c8:	mov	x2, x0
   415cc:	ldr	w1, [sp, #36]
   415d0:	ldr	x0, [sp, #40]
   415d4:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   415d8:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   415dc:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   415e0:	add	x1, x0, #0x2a0
   415e4:	ldr	x0, [sp, #40]
   415e8:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   415ec:	ldr	x0, [sp, #24]
   415f0:	ldr	x0, [x0, #8]
   415f4:	mov	x2, x0
   415f8:	ldr	w1, [sp, #36]
   415fc:	ldr	x0, [sp, #40]
   41600:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41604:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41608:	ldr	x0, [sp, #24]
   4160c:	ldr	x1, [x0, #8]
   41610:	ldr	x0, [sp, #24]
   41614:	ldr	w0, [x0, #16]
   41618:	sxtw	x0, w0
   4161c:	mov	x2, x0
   41620:	ldr	x0, [sp, #40]
   41624:	bl	3ff88 <__asan_cplus_demangle_type@@Base+0x38f4>
   41628:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4162c:	ldr	x0, [sp, #40]
   41630:	ldr	x0, [x0, #296]
   41634:	str	x0, [sp, #448]
   41638:	b	416cc <__asan_cplus_demangle_print@@Base+0x1460>
   4163c:	ldr	x0, [sp, #448]
   41640:	ldr	w0, [x0, #16]
   41644:	cmp	w0, #0x0
   41648:	b.ne	416c0 <__asan_cplus_demangle_print@@Base+0x1454>  // b.any
   4164c:	ldr	x0, [sp, #448]
   41650:	ldr	x0, [x0, #8]
   41654:	ldr	w0, [x0]
   41658:	cmp	w0, #0x19
   4165c:	b.eq	41688 <__asan_cplus_demangle_print@@Base+0x141c>  // b.none
   41660:	ldr	x0, [sp, #448]
   41664:	ldr	x0, [x0, #8]
   41668:	ldr	w0, [x0]
   4166c:	cmp	w0, #0x1a
   41670:	b.eq	41688 <__asan_cplus_demangle_print@@Base+0x141c>  // b.none
   41674:	ldr	x0, [sp, #448]
   41678:	ldr	x0, [x0, #8]
   4167c:	ldr	w0, [x0]
   41680:	cmp	w0, #0x1b
   41684:	b.ne	416dc <__asan_cplus_demangle_print@@Base+0x1470>  // b.any
   41688:	ldr	x0, [sp, #448]
   4168c:	ldr	x0, [x0, #8]
   41690:	ldr	w1, [x0]
   41694:	ldr	x0, [sp, #24]
   41698:	ldr	w0, [x0]
   4169c:	cmp	w1, w0
   416a0:	b.ne	416c0 <__asan_cplus_demangle_print@@Base+0x1454>  // b.any
   416a4:	ldr	x0, [sp, #24]
   416a8:	ldr	x0, [x0, #8]
   416ac:	mov	x2, x0
   416b0:	ldr	w1, [sp, #36]
   416b4:	ldr	x0, [sp, #40]
   416b8:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   416bc:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   416c0:	ldr	x0, [sp, #448]
   416c4:	ldr	x0, [x0]
   416c8:	str	x0, [sp, #448]
   416cc:	ldr	x0, [sp, #448]
   416d0:	cmp	x0, #0x0
   416d4:	b.ne	4163c <__asan_cplus_demangle_print@@Base+0x13d0>  // b.any
   416d8:	b	418c4 <__asan_cplus_demangle_print@@Base+0x1658>
   416dc:	nop
   416e0:	b	418c4 <__asan_cplus_demangle_print@@Base+0x1658>
   416e4:	ldr	x0, [sp, #24]
   416e8:	ldr	x0, [x0, #8]
   416ec:	str	x0, [sp, #440]
   416f0:	ldr	x0, [sp, #40]
   416f4:	ldr	w0, [x0, #312]
   416f8:	cmp	w0, #0x0
   416fc:	b.ne	4186c <__asan_cplus_demangle_print@@Base+0x1600>  // b.any
   41700:	ldr	x0, [sp, #440]
   41704:	ldr	w0, [x0]
   41708:	cmp	w0, #0x5
   4170c:	b.ne	4186c <__asan_cplus_demangle_print@@Base+0x1600>  // b.any
   41710:	ldr	x1, [sp, #440]
   41714:	ldr	x0, [sp, #40]
   41718:	bl	408c0 <__asan_cplus_demangle_print@@Base+0x654>
   4171c:	str	x0, [sp, #240]
   41720:	ldr	x0, [sp, #240]
   41724:	cmp	x0, #0x0
   41728:	b.ne	4174c <__asan_cplus_demangle_print@@Base+0x14e0>  // b.any
   4172c:	ldr	x1, [sp, #440]
   41730:	ldr	x0, [sp, #40]
   41734:	bl	4078c <__asan_cplus_demangle_print@@Base+0x520>
   41738:	ldr	x0, [sp, #40]
   4173c:	bl	3fe98 <__asan_cplus_demangle_type@@Base+0x3804>
   41740:	cmp	w0, #0x0
   41744:	b.eq	417f0 <__asan_cplus_demangle_print@@Base+0x1584>  // b.none
   41748:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4174c:	str	wzr, [sp, #420]
   41750:	ldr	x0, [sp, #40]
   41754:	ldr	x0, [x0, #328]
   41758:	str	x0, [sp, #424]
   4175c:	b	417b4 <__asan_cplus_demangle_print@@Base+0x1548>
   41760:	ldr	x0, [sp, #424]
   41764:	ldr	x0, [x0]
   41768:	ldr	x1, [sp, #440]
   4176c:	cmp	x1, x0
   41770:	b.eq	4179c <__asan_cplus_demangle_print@@Base+0x1530>  // b.none
   41774:	ldr	x0, [sp, #424]
   41778:	ldr	x0, [x0]
   4177c:	ldr	x1, [sp, #24]
   41780:	cmp	x1, x0
   41784:	b.ne	417a8 <__asan_cplus_demangle_print@@Base+0x153c>  // b.any
   41788:	ldr	x0, [sp, #40]
   4178c:	ldr	x0, [x0, #328]
   41790:	ldr	x1, [sp, #424]
   41794:	cmp	x1, x0
   41798:	b.eq	417a8 <__asan_cplus_demangle_print@@Base+0x153c>  // b.none
   4179c:	mov	w0, #0x1                   	// #1
   417a0:	str	w0, [sp, #420]
   417a4:	b	417c0 <__asan_cplus_demangle_print@@Base+0x1554>
   417a8:	ldr	x0, [sp, #424]
   417ac:	ldr	x0, [x0, #8]
   417b0:	str	x0, [sp, #424]
   417b4:	ldr	x0, [sp, #424]
   417b8:	cmp	x0, #0x0
   417bc:	b.ne	41760 <__asan_cplus_demangle_print@@Base+0x14f4>  // b.any
   417c0:	ldr	w0, [sp, #420]
   417c4:	cmp	w0, #0x0
   417c8:	b.ne	417f0 <__asan_cplus_demangle_print@@Base+0x1584>  // b.any
   417cc:	ldr	x0, [sp, #40]
   417d0:	ldr	x0, [x0, #288]
   417d4:	str	x0, [sp, #496]
   417d8:	ldr	x0, [sp, #240]
   417dc:	ldr	x1, [x0, #8]
   417e0:	ldr	x0, [sp, #40]
   417e4:	str	x1, [x0, #288]
   417e8:	mov	w0, #0x1                   	// #1
   417ec:	str	w0, [sp, #492]
   417f0:	ldr	x1, [sp, #440]
   417f4:	ldr	x0, [sp, #40]
   417f8:	bl	403a4 <__asan_cplus_demangle_print@@Base+0x138>
   417fc:	str	x0, [sp, #432]
   41800:	ldr	x0, [sp, #432]
   41804:	cmp	x0, #0x0
   41808:	b.eq	41834 <__asan_cplus_demangle_print@@Base+0x15c8>  // b.none
   4180c:	ldr	x0, [sp, #432]
   41810:	ldr	w0, [x0]
   41814:	cmp	w0, #0x2f
   41818:	b.ne	41834 <__asan_cplus_demangle_print@@Base+0x15c8>  // b.any
   4181c:	ldr	x0, [sp, #40]
   41820:	ldr	w0, [x0, #316]
   41824:	mov	w1, w0
   41828:	ldr	x0, [sp, #432]
   4182c:	bl	402f8 <__asan_cplus_demangle_print@@Base+0x8c>
   41830:	str	x0, [sp, #432]
   41834:	ldr	x0, [sp, #432]
   41838:	cmp	x0, #0x0
   4183c:	b.ne	41864 <__asan_cplus_demangle_print@@Base+0x15f8>  // b.any
   41840:	ldr	w0, [sp, #492]
   41844:	cmp	w0, #0x0
   41848:	b.eq	41858 <__asan_cplus_demangle_print@@Base+0x15ec>  // b.none
   4184c:	ldr	x0, [sp, #40]
   41850:	ldr	x1, [sp, #496]
   41854:	str	x1, [x0, #288]
   41858:	ldr	x0, [sp, #40]
   4185c:	bl	3fe78 <__asan_cplus_demangle_type@@Base+0x37e4>
   41860:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41864:	ldr	x0, [sp, #432]
   41868:	str	x0, [sp, #440]
   4186c:	ldr	x0, [sp, #440]
   41870:	ldr	w0, [x0]
   41874:	cmp	w0, #0x23
   41878:	b.eq	41894 <__asan_cplus_demangle_print@@Base+0x1628>  // b.none
   4187c:	ldr	x0, [sp, #440]
   41880:	ldr	w1, [x0]
   41884:	ldr	x0, [sp, #24]
   41888:	ldr	w0, [x0]
   4188c:	cmp	w1, w0
   41890:	b.ne	418a0 <__asan_cplus_demangle_print@@Base+0x1634>  // b.any
   41894:	ldr	x0, [sp, #440]
   41898:	str	x0, [sp, #24]
   4189c:	b	418c4 <__asan_cplus_demangle_print@@Base+0x1658>
   418a0:	ldr	x0, [sp, #440]
   418a4:	ldr	w0, [x0]
   418a8:	cmp	w0, #0x24
   418ac:	b.ne	418c0 <__asan_cplus_demangle_print@@Base+0x1654>  // b.any
   418b0:	ldr	x0, [sp, #440]
   418b4:	ldr	x0, [x0, #8]
   418b8:	str	x0, [sp, #504]
   418bc:	b	418c4 <__asan_cplus_demangle_print@@Base+0x1658>
   418c0:	nop
   418c4:	ldr	x0, [sp, #40]
   418c8:	ldr	x0, [x0, #296]
   418cc:	str	x0, [sp, #48]
   418d0:	ldr	x0, [sp, #40]
   418d4:	add	x1, sp, #0x30
   418d8:	str	x1, [x0, #296]
   418dc:	ldr	x0, [sp, #24]
   418e0:	str	x0, [sp, #56]
   418e4:	str	wzr, [sp, #64]
   418e8:	ldr	x0, [sp, #40]
   418ec:	ldr	x0, [x0, #288]
   418f0:	str	x0, [sp, #72]
   418f4:	ldr	x0, [sp, #504]
   418f8:	cmp	x0, #0x0
   418fc:	b.ne	4190c <__asan_cplus_demangle_print@@Base+0x16a0>  // b.any
   41900:	ldr	x0, [sp, #24]
   41904:	ldr	x0, [x0, #8]
   41908:	str	x0, [sp, #504]
   4190c:	ldr	x2, [sp, #504]
   41910:	ldr	w1, [sp, #36]
   41914:	ldr	x0, [sp, #40]
   41918:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   4191c:	ldr	w0, [sp, #64]
   41920:	cmp	w0, #0x0
   41924:	b.ne	41938 <__asan_cplus_demangle_print@@Base+0x16cc>  // b.any
   41928:	ldr	x2, [sp, #24]
   4192c:	ldr	w1, [sp, #36]
   41930:	ldr	x0, [sp, #40]
   41934:	bl	432d8 <__asan_cplus_demangle_print@@Base+0x306c>
   41938:	ldr	x1, [sp, #48]
   4193c:	ldr	x0, [sp, #40]
   41940:	str	x1, [x0, #296]
   41944:	ldr	w0, [sp, #492]
   41948:	cmp	w0, #0x0
   4194c:	b.eq	42d04 <__asan_cplus_demangle_print@@Base+0x2a98>  // b.none
   41950:	ldr	x0, [sp, #40]
   41954:	ldr	x1, [sp, #496]
   41958:	str	x1, [x0, #288]
   4195c:	b	42d04 <__asan_cplus_demangle_print@@Base+0x2a98>
   41960:	ldr	w0, [sp, #36]
   41964:	and	w0, w0, #0x4
   41968:	cmp	w0, #0x0
   4196c:	b.ne	4199c <__asan_cplus_demangle_print@@Base+0x1730>  // b.any
   41970:	ldr	x0, [sp, #24]
   41974:	ldr	x0, [x0, #8]
   41978:	ldr	x1, [x0]
   4197c:	ldr	x0, [sp, #24]
   41980:	ldr	x0, [x0, #8]
   41984:	ldr	w0, [x0, #8]
   41988:	sxtw	x0, w0
   4198c:	mov	x2, x0
   41990:	ldr	x0, [sp, #40]
   41994:	bl	3ff88 <__asan_cplus_demangle_type@@Base+0x38f4>
   41998:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4199c:	ldr	x0, [sp, #24]
   419a0:	ldr	x0, [x0, #8]
   419a4:	ldr	x1, [x0, #16]
   419a8:	ldr	x0, [sp, #24]
   419ac:	ldr	x0, [x0, #8]
   419b0:	ldr	w0, [x0, #24]
   419b4:	sxtw	x0, w0
   419b8:	mov	x2, x0
   419bc:	ldr	x0, [sp, #40]
   419c0:	bl	3ff88 <__asan_cplus_demangle_type@@Base+0x38f4>
   419c4:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   419c8:	ldr	x0, [sp, #24]
   419cc:	ldr	x0, [x0, #8]
   419d0:	mov	x2, x0
   419d4:	ldr	w1, [sp, #36]
   419d8:	ldr	x0, [sp, #40]
   419dc:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   419e0:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   419e4:	ldr	w0, [sp, #36]
   419e8:	and	w0, w0, #0x20
   419ec:	cmp	w0, #0x0
   419f0:	b.eq	41a14 <__asan_cplus_demangle_print@@Base+0x17a8>  // b.none
   419f4:	ldr	w0, [sp, #36]
   419f8:	and	w1, w0, #0xffffff9f
   419fc:	ldr	x0, [sp, #40]
   41a00:	ldr	x0, [x0, #296]
   41a04:	mov	x3, x0
   41a08:	ldr	x2, [sp, #24]
   41a0c:	ldr	x0, [sp, #40]
   41a10:	bl	4358c <__asan_cplus_demangle_print@@Base+0x3320>
   41a14:	ldr	x0, [sp, #24]
   41a18:	ldr	x0, [x0, #8]
   41a1c:	cmp	x0, #0x0
   41a20:	b.eq	41a54 <__asan_cplus_demangle_print@@Base+0x17e8>  // b.none
   41a24:	ldr	w0, [sp, #36]
   41a28:	and	w0, w0, #0x20
   41a2c:	cmp	w0, #0x0
   41a30:	b.eq	41a54 <__asan_cplus_demangle_print@@Base+0x17e8>  // b.none
   41a34:	ldr	w0, [sp, #36]
   41a38:	and	w1, w0, #0xffffff9f
   41a3c:	ldr	x0, [sp, #24]
   41a40:	ldr	x0, [x0, #8]
   41a44:	mov	x2, x0
   41a48:	ldr	x0, [sp, #40]
   41a4c:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41a50:	b	41af4 <__asan_cplus_demangle_print@@Base+0x1888>
   41a54:	ldr	x0, [sp, #24]
   41a58:	ldr	x0, [x0, #8]
   41a5c:	cmp	x0, #0x0
   41a60:	b.eq	41af4 <__asan_cplus_demangle_print@@Base+0x1888>  // b.none
   41a64:	ldr	w0, [sp, #36]
   41a68:	and	w0, w0, #0x40
   41a6c:	cmp	w0, #0x0
   41a70:	b.ne	41af4 <__asan_cplus_demangle_print@@Base+0x1888>  // b.any
   41a74:	ldr	x0, [sp, #40]
   41a78:	ldr	x0, [x0, #296]
   41a7c:	str	x0, [sp, #48]
   41a80:	ldr	x0, [sp, #40]
   41a84:	add	x1, sp, #0x30
   41a88:	str	x1, [x0, #296]
   41a8c:	ldr	x0, [sp, #24]
   41a90:	str	x0, [sp, #56]
   41a94:	str	wzr, [sp, #64]
   41a98:	ldr	x0, [sp, #40]
   41a9c:	ldr	x0, [x0, #288]
   41aa0:	str	x0, [sp, #72]
   41aa4:	ldr	w0, [sp, #36]
   41aa8:	and	w1, w0, #0xffffff9f
   41aac:	ldr	x0, [sp, #24]
   41ab0:	ldr	x0, [x0, #8]
   41ab4:	mov	x2, x0
   41ab8:	ldr	x0, [sp, #40]
   41abc:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41ac0:	ldr	x1, [sp, #48]
   41ac4:	ldr	x0, [sp, #40]
   41ac8:	str	x1, [x0, #296]
   41acc:	ldr	w0, [sp, #64]
   41ad0:	cmp	w0, #0x0
   41ad4:	b.ne	42d0c <__asan_cplus_demangle_print@@Base+0x2aa0>  // b.any
   41ad8:	ldr	w0, [sp, #36]
   41adc:	and	w0, w0, #0x20
   41ae0:	cmp	w0, #0x0
   41ae4:	b.ne	41af4 <__asan_cplus_demangle_print@@Base+0x1888>  // b.any
   41ae8:	mov	w1, #0x20                  	// #32
   41aec:	ldr	x0, [sp, #40]
   41af0:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   41af4:	ldr	w0, [sp, #36]
   41af8:	and	w0, w0, #0x20
   41afc:	cmp	w0, #0x0
   41b00:	b.ne	42d14 <__asan_cplus_demangle_print@@Base+0x2aa8>  // b.any
   41b04:	ldr	w0, [sp, #36]
   41b08:	and	w1, w0, #0xffffff9f
   41b0c:	ldr	x0, [sp, #40]
   41b10:	ldr	x0, [x0, #296]
   41b14:	mov	x3, x0
   41b18:	ldr	x2, [sp, #24]
   41b1c:	ldr	x0, [sp, #40]
   41b20:	bl	4358c <__asan_cplus_demangle_print@@Base+0x3320>
   41b24:	b	42d14 <__asan_cplus_demangle_print@@Base+0x2aa8>
   41b28:	ldr	x0, [sp, #40]
   41b2c:	ldr	x0, [x0, #296]
   41b30:	str	x0, [sp, #248]
   41b34:	ldr	x0, [sp, #248]
   41b38:	str	x0, [sp, #48]
   41b3c:	ldr	x0, [sp, #40]
   41b40:	add	x1, sp, #0x30
   41b44:	str	x1, [x0, #296]
   41b48:	ldr	x0, [sp, #24]
   41b4c:	str	x0, [sp, #56]
   41b50:	str	wzr, [sp, #64]
   41b54:	ldr	x0, [sp, #40]
   41b58:	ldr	x0, [x0, #288]
   41b5c:	str	x0, [sp, #72]
   41b60:	mov	w0, #0x1                   	// #1
   41b64:	str	w0, [sp, #416]
   41b68:	ldr	x0, [sp, #248]
   41b6c:	str	x0, [sp, #408]
   41b70:	b	41c14 <__asan_cplus_demangle_print@@Base+0x19a8>
   41b74:	ldr	x0, [sp, #408]
   41b78:	ldr	w0, [x0, #16]
   41b7c:	cmp	w0, #0x0
   41b80:	b.ne	41c08 <__asan_cplus_demangle_print@@Base+0x199c>  // b.any
   41b84:	ldr	w0, [sp, #416]
   41b88:	cmp	w0, #0x3
   41b8c:	b.ls	41b9c <__asan_cplus_demangle_print@@Base+0x1930>  // b.plast
   41b90:	ldr	x0, [sp, #40]
   41b94:	bl	3fe78 <__asan_cplus_demangle_type@@Base+0x37e4>
   41b98:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41b9c:	ldr	w0, [sp, #416]
   41ba0:	lsl	x0, x0, #5
   41ba4:	add	x1, sp, #0x30
   41ba8:	ldr	x3, [sp, #408]
   41bac:	add	x2, x1, x0
   41bb0:	ldp	x0, x1, [x3]
   41bb4:	stp	x0, x1, [x2]
   41bb8:	ldp	x0, x1, [x3, #16]
   41bbc:	stp	x0, x1, [x2, #16]
   41bc0:	ldr	x0, [sp, #40]
   41bc4:	ldr	x2, [x0, #296]
   41bc8:	ldr	w0, [sp, #416]
   41bcc:	lsl	x0, x0, #5
   41bd0:	add	x1, sp, #0x30
   41bd4:	str	x2, [x1, x0]
   41bd8:	add	x1, sp, #0x30
   41bdc:	ldr	w0, [sp, #416]
   41be0:	lsl	x0, x0, #5
   41be4:	add	x1, x1, x0
   41be8:	ldr	x0, [sp, #40]
   41bec:	str	x1, [x0, #296]
   41bf0:	ldr	x0, [sp, #408]
   41bf4:	mov	w1, #0x1                   	// #1
   41bf8:	str	w1, [x0, #16]
   41bfc:	ldr	w0, [sp, #416]
   41c00:	add	w0, w0, #0x1
   41c04:	str	w0, [sp, #416]
   41c08:	ldr	x0, [sp, #408]
   41c0c:	ldr	x0, [x0]
   41c10:	str	x0, [sp, #408]
   41c14:	ldr	x0, [sp, #408]
   41c18:	cmp	x0, #0x0
   41c1c:	b.eq	41c5c <__asan_cplus_demangle_print@@Base+0x19f0>  // b.none
   41c20:	ldr	x0, [sp, #408]
   41c24:	ldr	x0, [x0, #8]
   41c28:	ldr	w0, [x0]
   41c2c:	cmp	w0, #0x19
   41c30:	b.eq	41b74 <__asan_cplus_demangle_print@@Base+0x1908>  // b.none
   41c34:	ldr	x0, [sp, #408]
   41c38:	ldr	x0, [x0, #8]
   41c3c:	ldr	w0, [x0]
   41c40:	cmp	w0, #0x1a
   41c44:	b.eq	41b74 <__asan_cplus_demangle_print@@Base+0x1908>  // b.none
   41c48:	ldr	x0, [sp, #408]
   41c4c:	ldr	x0, [x0, #8]
   41c50:	ldr	w0, [x0]
   41c54:	cmp	w0, #0x1b
   41c58:	b.eq	41b74 <__asan_cplus_demangle_print@@Base+0x1908>  // b.none
   41c5c:	ldr	x0, [sp, #24]
   41c60:	ldr	x0, [x0, #16]
   41c64:	mov	x2, x0
   41c68:	ldr	w1, [sp, #36]
   41c6c:	ldr	x0, [sp, #40]
   41c70:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41c74:	ldr	x0, [sp, #40]
   41c78:	ldr	x1, [sp, #248]
   41c7c:	str	x1, [x0, #296]
   41c80:	ldr	w0, [sp, #64]
   41c84:	cmp	w0, #0x0
   41c88:	b.ne	42d1c <__asan_cplus_demangle_print@@Base+0x2ab0>  // b.any
   41c8c:	b	41cbc <__asan_cplus_demangle_print@@Base+0x1a50>
   41c90:	ldr	w0, [sp, #416]
   41c94:	sub	w0, w0, #0x1
   41c98:	str	w0, [sp, #416]
   41c9c:	ldr	w0, [sp, #416]
   41ca0:	lsl	x0, x0, #5
   41ca4:	add	x1, sp, #0x38
   41ca8:	ldr	x0, [x1, x0]
   41cac:	mov	x2, x0
   41cb0:	ldr	w1, [sp, #36]
   41cb4:	ldr	x0, [sp, #40]
   41cb8:	bl	432d8 <__asan_cplus_demangle_print@@Base+0x306c>
   41cbc:	ldr	w0, [sp, #416]
   41cc0:	cmp	w0, #0x1
   41cc4:	b.hi	41c90 <__asan_cplus_demangle_print@@Base+0x1a24>  // b.pmore
   41cc8:	ldr	x0, [sp, #40]
   41ccc:	ldr	x0, [x0, #296]
   41cd0:	mov	x3, x0
   41cd4:	ldr	x2, [sp, #24]
   41cd8:	ldr	w1, [sp, #36]
   41cdc:	ldr	x0, [sp, #40]
   41ce0:	bl	437d8 <__asan_cplus_demangle_print@@Base+0x356c>
   41ce4:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41ce8:	ldr	x0, [sp, #40]
   41cec:	ldr	x0, [x0, #296]
   41cf0:	str	x0, [sp, #48]
   41cf4:	ldr	x0, [sp, #40]
   41cf8:	add	x1, sp, #0x30
   41cfc:	str	x1, [x0, #296]
   41d00:	ldr	x0, [sp, #24]
   41d04:	str	x0, [sp, #56]
   41d08:	str	wzr, [sp, #64]
   41d0c:	ldr	x0, [sp, #40]
   41d10:	ldr	x0, [x0, #288]
   41d14:	str	x0, [sp, #72]
   41d18:	ldr	x0, [sp, #24]
   41d1c:	ldr	x0, [x0, #16]
   41d20:	mov	x2, x0
   41d24:	ldr	w1, [sp, #36]
   41d28:	ldr	x0, [sp, #40]
   41d2c:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41d30:	ldr	w0, [sp, #64]
   41d34:	cmp	w0, #0x0
   41d38:	b.ne	41d4c <__asan_cplus_demangle_print@@Base+0x1ae0>  // b.any
   41d3c:	ldr	x2, [sp, #24]
   41d40:	ldr	w1, [sp, #36]
   41d44:	ldr	x0, [sp, #40]
   41d48:	bl	432d8 <__asan_cplus_demangle_print@@Base+0x306c>
   41d4c:	ldr	x1, [sp, #48]
   41d50:	ldr	x0, [sp, #40]
   41d54:	str	x1, [x0, #296]
   41d58:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41d5c:	ldr	x0, [sp, #24]
   41d60:	ldrsh	w0, [x0, #18]
   41d64:	cmp	w0, #0x0
   41d68:	b.eq	41d7c <__asan_cplus_demangle_print@@Base+0x1b10>  // b.none
   41d6c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   41d70:	add	x1, x0, #0x2c0
   41d74:	ldr	x0, [sp, #40]
   41d78:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   41d7c:	ldr	x0, [sp, #24]
   41d80:	ldr	x0, [x0, #8]
   41d84:	ldr	x1, [x0, #8]
   41d88:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   41d8c:	ldr	x0, [x0, #3912]
   41d90:	add	x0, x0, #0x100
   41d94:	cmp	x1, x0
   41d98:	b.eq	41dc0 <__asan_cplus_demangle_print@@Base+0x1b54>  // b.none
   41d9c:	ldr	x0, [sp, #24]
   41da0:	ldr	x0, [x0, #8]
   41da4:	mov	x2, x0
   41da8:	ldr	w1, [sp, #36]
   41dac:	ldr	x0, [sp, #40]
   41db0:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41db4:	mov	w1, #0x20                  	// #32
   41db8:	ldr	x0, [sp, #40]
   41dbc:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   41dc0:	ldr	x0, [sp, #24]
   41dc4:	ldrsh	w0, [x0, #16]
   41dc8:	cmp	w0, #0x0
   41dcc:	b.eq	41de4 <__asan_cplus_demangle_print@@Base+0x1b78>  // b.none
   41dd0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   41dd4:	add	x1, x0, #0x2c8
   41dd8:	ldr	x0, [sp, #40]
   41ddc:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   41de0:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41de4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   41de8:	add	x1, x0, #0x2d0
   41dec:	ldr	x0, [sp, #40]
   41df0:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   41df4:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41df8:	ldr	x0, [sp, #24]
   41dfc:	ldr	x0, [x0, #8]
   41e00:	cmp	x0, #0x0
   41e04:	b.eq	41e20 <__asan_cplus_demangle_print@@Base+0x1bb4>  // b.none
   41e08:	ldr	x0, [sp, #24]
   41e0c:	ldr	x0, [x0, #8]
   41e10:	mov	x2, x0
   41e14:	ldr	w1, [sp, #36]
   41e18:	ldr	x0, [sp, #40]
   41e1c:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41e20:	ldr	x0, [sp, #24]
   41e24:	ldr	x0, [x0, #16]
   41e28:	cmp	x0, #0x0
   41e2c:	b.eq	42d24 <__asan_cplus_demangle_print@@Base+0x2ab8>  // b.none
   41e30:	ldr	x0, [sp, #40]
   41e34:	ldr	x0, [x0, #256]
   41e38:	cmp	x0, #0xfd
   41e3c:	b.ls	41e48 <__asan_cplus_demangle_print@@Base+0x1bdc>  // b.plast
   41e40:	ldr	x0, [sp, #40]
   41e44:	bl	3febc <__asan_cplus_demangle_type@@Base+0x3828>
   41e48:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   41e4c:	add	x1, x0, #0x2d8
   41e50:	ldr	x0, [sp, #40]
   41e54:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   41e58:	ldr	x0, [sp, #40]
   41e5c:	ldr	x0, [x0, #256]
   41e60:	str	x0, [sp, #264]
   41e64:	ldr	x0, [sp, #40]
   41e68:	ldr	x0, [x0, #320]
   41e6c:	str	x0, [sp, #256]
   41e70:	ldr	x0, [sp, #24]
   41e74:	ldr	x0, [x0, #16]
   41e78:	mov	x2, x0
   41e7c:	ldr	w1, [sp, #36]
   41e80:	ldr	x0, [sp, #40]
   41e84:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41e88:	ldr	x0, [sp, #40]
   41e8c:	ldr	x0, [x0, #320]
   41e90:	ldr	x1, [sp, #256]
   41e94:	cmp	x1, x0
   41e98:	b.ne	42d24 <__asan_cplus_demangle_print@@Base+0x2ab8>  // b.any
   41e9c:	ldr	x0, [sp, #40]
   41ea0:	ldr	x0, [x0, #256]
   41ea4:	ldr	x1, [sp, #264]
   41ea8:	cmp	x1, x0
   41eac:	b.ne	42d24 <__asan_cplus_demangle_print@@Base+0x2ab8>  // b.any
   41eb0:	ldr	x0, [sp, #40]
   41eb4:	ldr	x0, [x0, #256]
   41eb8:	sub	x1, x0, #0x2
   41ebc:	ldr	x0, [sp, #40]
   41ec0:	str	x1, [x0, #256]
   41ec4:	b	42d24 <__asan_cplus_demangle_print@@Base+0x2ab8>
   41ec8:	ldr	x0, [sp, #24]
   41ecc:	ldr	x0, [x0, #8]
   41ed0:	str	x0, [sp, #280]
   41ed4:	ldr	x0, [sp, #24]
   41ed8:	ldr	x0, [x0, #16]
   41edc:	str	x0, [sp, #272]
   41ee0:	ldr	x0, [sp, #280]
   41ee4:	cmp	x0, #0x0
   41ee8:	b.eq	41efc <__asan_cplus_demangle_print@@Base+0x1c90>  // b.none
   41eec:	ldr	x2, [sp, #280]
   41ef0:	ldr	w1, [sp, #36]
   41ef4:	ldr	x0, [sp, #40]
   41ef8:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41efc:	mov	w1, #0x7b                  	// #123
   41f00:	ldr	x0, [sp, #40]
   41f04:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   41f08:	ldr	x2, [sp, #272]
   41f0c:	ldr	w1, [sp, #36]
   41f10:	ldr	x0, [sp, #40]
   41f14:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41f18:	mov	w1, #0x7d                  	// #125
   41f1c:	ldr	x0, [sp, #40]
   41f20:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   41f24:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41f28:	ldr	x0, [sp, #24]
   41f2c:	ldr	x0, [x0, #8]
   41f30:	str	x0, [sp, #288]
   41f34:	ldr	x0, [sp, #288]
   41f38:	ldr	w0, [x0, #16]
   41f3c:	str	w0, [sp, #404]
   41f40:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   41f44:	add	x1, x0, #0x2e0
   41f48:	ldr	x0, [sp, #40]
   41f4c:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   41f50:	ldr	x0, [sp, #288]
   41f54:	ldr	x0, [x0, #8]
   41f58:	ldrb	w0, [x0]
   41f5c:	cmp	w0, #0x60
   41f60:	b.ls	41f84 <__asan_cplus_demangle_print@@Base+0x1d18>  // b.plast
   41f64:	ldr	x0, [sp, #288]
   41f68:	ldr	x0, [x0, #8]
   41f6c:	ldrb	w0, [x0]
   41f70:	cmp	w0, #0x7a
   41f74:	b.hi	41f84 <__asan_cplus_demangle_print@@Base+0x1d18>  // b.pmore
   41f78:	mov	w1, #0x20                  	// #32
   41f7c:	ldr	x0, [sp, #40]
   41f80:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   41f84:	ldr	x0, [sp, #288]
   41f88:	ldr	x1, [x0, #8]
   41f8c:	ldrsw	x0, [sp, #404]
   41f90:	sub	x0, x0, #0x1
   41f94:	add	x0, x1, x0
   41f98:	ldrb	w0, [x0]
   41f9c:	cmp	w0, #0x20
   41fa0:	b.ne	41fb0 <__asan_cplus_demangle_print@@Base+0x1d44>  // b.any
   41fa4:	ldr	w0, [sp, #404]
   41fa8:	sub	w0, w0, #0x1
   41fac:	str	w0, [sp, #404]
   41fb0:	ldr	x0, [sp, #288]
   41fb4:	ldr	x0, [x0, #8]
   41fb8:	ldrsw	x1, [sp, #404]
   41fbc:	mov	x2, x1
   41fc0:	mov	x1, x0
   41fc4:	ldr	x0, [sp, #40]
   41fc8:	bl	3ff88 <__asan_cplus_demangle_type@@Base+0x38f4>
   41fcc:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41fd0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   41fd4:	add	x1, x0, #0x2f0
   41fd8:	ldr	x0, [sp, #40]
   41fdc:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   41fe0:	ldr	x0, [sp, #24]
   41fe4:	ldr	x0, [x0, #16]
   41fe8:	mov	x2, x0
   41fec:	ldr	w1, [sp, #36]
   41ff0:	ldr	x0, [sp, #40]
   41ff4:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   41ff8:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   41ffc:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   42000:	add	x1, x0, #0x2f0
   42004:	ldr	x0, [sp, #40]
   42008:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   4200c:	ldr	x2, [sp, #24]
   42010:	ldr	w1, [sp, #36]
   42014:	ldr	x0, [sp, #40]
   42018:	bl	439bc <__asan_cplus_demangle_print@@Base+0x3750>
   4201c:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42020:	ldr	x0, [sp, #24]
   42024:	ldr	x0, [x0, #8]
   42028:	mov	x2, x0
   4202c:	ldr	w1, [sp, #36]
   42030:	ldr	x0, [sp, #40]
   42034:	bl	43918 <__asan_cplus_demangle_print@@Base+0x36ac>
   42038:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4203c:	ldr	x0, [sp, #24]
   42040:	ldr	x0, [x0, #8]
   42044:	str	x0, [sp, #312]
   42048:	ldr	x0, [sp, #24]
   4204c:	ldr	x0, [x0, #16]
   42050:	str	x0, [sp, #392]
   42054:	str	xzr, [sp, #384]
   42058:	ldr	x0, [sp, #312]
   4205c:	ldr	w0, [x0]
   42060:	cmp	w0, #0x32
   42064:	b.ne	42114 <__asan_cplus_demangle_print@@Base+0x1ea8>  // b.any
   42068:	ldr	x0, [sp, #312]
   4206c:	ldr	x0, [x0, #8]
   42070:	ldr	x0, [x0]
   42074:	str	x0, [sp, #384]
   42078:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   4207c:	add	x1, x0, #0x6d8
   42080:	ldr	x0, [sp, #384]
   42084:	bl	6a30 <__asan_internal_strcmp@plt>
   42088:	cmp	w0, #0x0
   4208c:	b.ne	420d4 <__asan_cplus_demangle_print@@Base+0x1e68>  // b.any
   42090:	ldr	x0, [sp, #392]
   42094:	ldr	w0, [x0]
   42098:	cmp	w0, #0x3
   4209c:	b.ne	420d4 <__asan_cplus_demangle_print@@Base+0x1e68>  // b.any
   420a0:	ldr	x0, [sp, #392]
   420a4:	ldr	x0, [x0, #8]
   420a8:	ldr	w0, [x0]
   420ac:	cmp	w0, #0x1
   420b0:	b.ne	420d4 <__asan_cplus_demangle_print@@Base+0x1e68>  // b.any
   420b4:	ldr	x0, [sp, #392]
   420b8:	ldr	x0, [x0, #16]
   420bc:	ldr	w0, [x0]
   420c0:	cmp	w0, #0x29
   420c4:	b.ne	420d4 <__asan_cplus_demangle_print@@Base+0x1e68>  // b.any
   420c8:	ldr	x0, [sp, #392]
   420cc:	ldr	x0, [x0, #8]
   420d0:	str	x0, [sp, #392]
   420d4:	ldr	x0, [sp, #392]
   420d8:	ldr	w0, [x0]
   420dc:	cmp	w0, #0x39
   420e0:	b.ne	42114 <__asan_cplus_demangle_print@@Base+0x1ea8>  // b.any
   420e4:	ldr	x0, [sp, #392]
   420e8:	ldr	x0, [x0, #8]
   420ec:	str	x0, [sp, #392]
   420f0:	ldr	x2, [sp, #392]
   420f4:	ldr	w1, [sp, #36]
   420f8:	ldr	x0, [sp, #40]
   420fc:	bl	406e0 <__asan_cplus_demangle_print@@Base+0x474>
   42100:	ldr	x2, [sp, #312]
   42104:	ldr	w1, [sp, #36]
   42108:	ldr	x0, [sp, #40]
   4210c:	bl	43918 <__asan_cplus_demangle_print@@Base+0x36ac>
   42110:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42114:	ldr	x0, [sp, #384]
   42118:	cmp	x0, #0x0
   4211c:	b.eq	42164 <__asan_cplus_demangle_print@@Base+0x1ef8>  // b.none
   42120:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   42124:	add	x1, x0, #0xa70
   42128:	ldr	x0, [sp, #384]
   4212c:	bl	6a30 <__asan_internal_strcmp@plt>
   42130:	cmp	w0, #0x0
   42134:	b.ne	42164 <__asan_cplus_demangle_print@@Base+0x1ef8>  // b.any
   42138:	ldr	x1, [sp, #392]
   4213c:	ldr	x0, [sp, #40]
   42140:	bl	40400 <__asan_cplus_demangle_print@@Base+0x194>
   42144:	str	x0, [sp, #304]
   42148:	ldr	x0, [sp, #304]
   4214c:	bl	405c4 <__asan_cplus_demangle_print@@Base+0x358>
   42150:	str	w0, [sp, #300]
   42154:	ldr	w1, [sp, #300]
   42158:	ldr	x0, [sp, #40]
   4215c:	bl	40020 <__asan_cplus_demangle_type@@Base+0x398c>
   42160:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42164:	ldr	x0, [sp, #384]
   42168:	cmp	x0, #0x0
   4216c:	b.eq	421a8 <__asan_cplus_demangle_print@@Base+0x1f3c>  // b.none
   42170:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   42174:	add	x1, x0, #0xa58
   42178:	ldr	x0, [sp, #384]
   4217c:	bl	6a30 <__asan_internal_strcmp@plt>
   42180:	cmp	w0, #0x0
   42184:	b.ne	421a8 <__asan_cplus_demangle_print@@Base+0x1f3c>  // b.any
   42188:	ldr	x1, [sp, #392]
   4218c:	ldr	x0, [sp, #40]
   42190:	bl	40624 <__asan_cplus_demangle_print@@Base+0x3b8>
   42194:	str	w0, [sp, #296]
   42198:	ldr	w1, [sp, #296]
   4219c:	ldr	x0, [sp, #40]
   421a0:	bl	40020 <__asan_cplus_demangle_type@@Base+0x398c>
   421a4:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   421a8:	ldr	x0, [sp, #312]
   421ac:	ldr	w0, [x0]
   421b0:	cmp	w0, #0x34
   421b4:	b.eq	421cc <__asan_cplus_demangle_print@@Base+0x1f60>  // b.none
   421b8:	ldr	x2, [sp, #312]
   421bc:	ldr	w1, [sp, #36]
   421c0:	ldr	x0, [sp, #40]
   421c4:	bl	43918 <__asan_cplus_demangle_print@@Base+0x36ac>
   421c8:	b	421f4 <__asan_cplus_demangle_print@@Base+0x1f88>
   421cc:	mov	w1, #0x28                  	// #40
   421d0:	ldr	x0, [sp, #40]
   421d4:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   421d8:	ldr	x2, [sp, #312]
   421dc:	ldr	w1, [sp, #36]
   421e0:	ldr	x0, [sp, #40]
   421e4:	bl	43984 <__asan_cplus_demangle_print@@Base+0x3718>
   421e8:	mov	w1, #0x29                  	// #41
   421ec:	ldr	x0, [sp, #40]
   421f0:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   421f4:	ldr	x0, [sp, #384]
   421f8:	cmp	x0, #0x0
   421fc:	b.eq	4222c <__asan_cplus_demangle_print@@Base+0x1fc0>  // b.none
   42200:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   42204:	add	x1, x0, #0x850
   42208:	ldr	x0, [sp, #384]
   4220c:	bl	6a30 <__asan_internal_strcmp@plt>
   42210:	cmp	w0, #0x0
   42214:	b.ne	4222c <__asan_cplus_demangle_print@@Base+0x1fc0>  // b.any
   42218:	ldr	x2, [sp, #392]
   4221c:	ldr	w1, [sp, #36]
   42220:	ldr	x0, [sp, #40]
   42224:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   42228:	b	42290 <__asan_cplus_demangle_print@@Base+0x2024>
   4222c:	ldr	x0, [sp, #384]
   42230:	cmp	x0, #0x0
   42234:	b.eq	4227c <__asan_cplus_demangle_print@@Base+0x2010>  // b.none
   42238:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   4223c:	add	x1, x0, #0xa90
   42240:	ldr	x0, [sp, #384]
   42244:	bl	6a30 <__asan_internal_strcmp@plt>
   42248:	cmp	w0, #0x0
   4224c:	b.ne	4227c <__asan_cplus_demangle_print@@Base+0x2010>  // b.any
   42250:	mov	w1, #0x28                  	// #40
   42254:	ldr	x0, [sp, #40]
   42258:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   4225c:	ldr	x2, [sp, #392]
   42260:	ldr	w1, [sp, #36]
   42264:	ldr	x0, [sp, #40]
   42268:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   4226c:	mov	w1, #0x29                  	// #41
   42270:	ldr	x0, [sp, #40]
   42274:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   42278:	b	42290 <__asan_cplus_demangle_print@@Base+0x2024>
   4227c:	ldr	x2, [sp, #392]
   42280:	ldr	w1, [sp, #36]
   42284:	ldr	x0, [sp, #40]
   42288:	bl	406e0 <__asan_cplus_demangle_print@@Base+0x474>
   4228c:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42290:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42294:	ldr	x0, [sp, #24]
   42298:	ldr	x0, [x0, #16]
   4229c:	ldr	w0, [x0]
   422a0:	cmp	w0, #0x39
   422a4:	b.eq	422b4 <__asan_cplus_demangle_print@@Base+0x2048>  // b.none
   422a8:	ldr	x0, [sp, #40]
   422ac:	bl	3fe78 <__asan_cplus_demangle_type@@Base+0x37e4>
   422b0:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   422b4:	ldr	x0, [sp, #24]
   422b8:	ldr	x0, [x0, #8]
   422bc:	bl	3e158 <__asan_cplus_demangle_type@@Base+0x1ac4>
   422c0:	cmp	w0, #0x0
   422c4:	b.eq	42344 <__asan_cplus_demangle_print@@Base+0x20d8>  // b.none
   422c8:	ldr	x0, [sp, #24]
   422cc:	ldr	x0, [x0, #8]
   422d0:	mov	x2, x0
   422d4:	ldr	w1, [sp, #36]
   422d8:	ldr	x0, [sp, #40]
   422dc:	bl	43918 <__asan_cplus_demangle_print@@Base+0x36ac>
   422e0:	mov	w1, #0x3c                  	// #60
   422e4:	ldr	x0, [sp, #40]
   422e8:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   422ec:	ldr	x0, [sp, #24]
   422f0:	ldr	x0, [x0, #16]
   422f4:	ldr	x0, [x0, #8]
   422f8:	mov	x2, x0
   422fc:	ldr	w1, [sp, #36]
   42300:	ldr	x0, [sp, #40]
   42304:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   42308:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   4230c:	add	x1, x0, #0x300
   42310:	ldr	x0, [sp, #40]
   42314:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   42318:	ldr	x0, [sp, #24]
   4231c:	ldr	x0, [x0, #16]
   42320:	ldr	x0, [x0, #16]
   42324:	mov	x2, x0
   42328:	ldr	w1, [sp, #36]
   4232c:	ldr	x0, [sp, #40]
   42330:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   42334:	mov	w1, #0x29                  	// #41
   42338:	ldr	x0, [sp, #40]
   4233c:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   42340:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42344:	ldr	x2, [sp, #24]
   42348:	ldr	w1, [sp, #36]
   4234c:	ldr	x0, [sp, #40]
   42350:	bl	4093c <__asan_cplus_demangle_print@@Base+0x6d0>
   42354:	cmp	w0, #0x0
   42358:	b.ne	42d2c <__asan_cplus_demangle_print@@Base+0x2ac0>  // b.any
   4235c:	ldr	x0, [sp, #24]
   42360:	ldr	x0, [x0, #8]
   42364:	ldr	w0, [x0]
   42368:	cmp	w0, #0x32
   4236c:	b.ne	423b0 <__asan_cplus_demangle_print@@Base+0x2144>  // b.any
   42370:	ldr	x0, [sp, #24]
   42374:	ldr	x0, [x0, #8]
   42378:	ldr	x0, [x0, #8]
   4237c:	ldr	w0, [x0, #16]
   42380:	cmp	w0, #0x1
   42384:	b.ne	423b0 <__asan_cplus_demangle_print@@Base+0x2144>  // b.any
   42388:	ldr	x0, [sp, #24]
   4238c:	ldr	x0, [x0, #8]
   42390:	ldr	x0, [x0, #8]
   42394:	ldr	x0, [x0, #8]
   42398:	ldrb	w0, [x0]
   4239c:	cmp	w0, #0x3e
   423a0:	b.ne	423b0 <__asan_cplus_demangle_print@@Base+0x2144>  // b.any
   423a4:	mov	w1, #0x28                  	// #40
   423a8:	ldr	x0, [sp, #40]
   423ac:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   423b0:	ldr	x0, [sp, #24]
   423b4:	ldr	x0, [x0, #8]
   423b8:	ldr	x0, [x0, #8]
   423bc:	ldr	x2, [x0]
   423c0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   423c4:	add	x1, x0, #0x728
   423c8:	mov	x0, x2
   423cc:	bl	6a30 <__asan_internal_strcmp@plt>
   423d0:	cmp	w0, #0x0
   423d4:	b.ne	42438 <__asan_cplus_demangle_print@@Base+0x21cc>  // b.any
   423d8:	ldr	x0, [sp, #24]
   423dc:	ldr	x0, [x0, #16]
   423e0:	ldr	x0, [x0, #8]
   423e4:	ldr	w0, [x0]
   423e8:	cmp	w0, #0x3
   423ec:	b.ne	42438 <__asan_cplus_demangle_print@@Base+0x21cc>  // b.any
   423f0:	ldr	x0, [sp, #24]
   423f4:	ldr	x0, [x0, #16]
   423f8:	ldr	x0, [x0, #8]
   423fc:	str	x0, [sp, #320]
   42400:	ldr	x0, [sp, #320]
   42404:	ldr	x0, [x0, #16]
   42408:	ldr	w0, [x0]
   4240c:	cmp	w0, #0x29
   42410:	b.eq	4241c <__asan_cplus_demangle_print@@Base+0x21b0>  // b.none
   42414:	ldr	x0, [sp, #40]
   42418:	bl	3fe78 <__asan_cplus_demangle_type@@Base+0x37e4>
   4241c:	ldr	x0, [sp, #320]
   42420:	ldr	x0, [x0, #8]
   42424:	mov	x2, x0
   42428:	ldr	w1, [sp, #36]
   4242c:	ldr	x0, [sp, #40]
   42430:	bl	406e0 <__asan_cplus_demangle_print@@Base+0x474>
   42434:	b	42454 <__asan_cplus_demangle_print@@Base+0x21e8>
   42438:	ldr	x0, [sp, #24]
   4243c:	ldr	x0, [x0, #16]
   42440:	ldr	x0, [x0, #8]
   42444:	mov	x2, x0
   42448:	ldr	w1, [sp, #36]
   4244c:	ldr	x0, [sp, #40]
   42450:	bl	406e0 <__asan_cplus_demangle_print@@Base+0x474>
   42454:	ldr	x0, [sp, #24]
   42458:	ldr	x0, [x0, #8]
   4245c:	ldr	x0, [x0, #8]
   42460:	ldr	x2, [x0]
   42464:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   42468:	add	x1, x0, #0x870
   4246c:	mov	x0, x2
   42470:	bl	6a30 <__asan_internal_strcmp@plt>
   42474:	cmp	w0, #0x0
   42478:	b.ne	424b4 <__asan_cplus_demangle_print@@Base+0x2248>  // b.any
   4247c:	mov	w1, #0x5b                  	// #91
   42480:	ldr	x0, [sp, #40]
   42484:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   42488:	ldr	x0, [sp, #24]
   4248c:	ldr	x0, [x0, #16]
   42490:	ldr	x0, [x0, #16]
   42494:	mov	x2, x0
   42498:	ldr	w1, [sp, #36]
   4249c:	ldr	x0, [sp, #40]
   424a0:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   424a4:	mov	w1, #0x5d                  	// #93
   424a8:	ldr	x0, [sp, #40]
   424ac:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   424b0:	b	42510 <__asan_cplus_demangle_print@@Base+0x22a4>
   424b4:	ldr	x0, [sp, #24]
   424b8:	ldr	x0, [x0, #8]
   424bc:	ldr	x0, [x0, #8]
   424c0:	ldr	x2, [x0]
   424c4:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   424c8:	add	x1, x0, #0x728
   424cc:	mov	x0, x2
   424d0:	bl	6a30 <__asan_internal_strcmp@plt>
   424d4:	cmp	w0, #0x0
   424d8:	b.eq	424f4 <__asan_cplus_demangle_print@@Base+0x2288>  // b.none
   424dc:	ldr	x0, [sp, #24]
   424e0:	ldr	x0, [x0, #8]
   424e4:	mov	x2, x0
   424e8:	ldr	w1, [sp, #36]
   424ec:	ldr	x0, [sp, #40]
   424f0:	bl	43918 <__asan_cplus_demangle_print@@Base+0x36ac>
   424f4:	ldr	x0, [sp, #24]
   424f8:	ldr	x0, [x0, #16]
   424fc:	ldr	x0, [x0, #16]
   42500:	mov	x2, x0
   42504:	ldr	w1, [sp, #36]
   42508:	ldr	x0, [sp, #40]
   4250c:	bl	406e0 <__asan_cplus_demangle_print@@Base+0x474>
   42510:	ldr	x0, [sp, #24]
   42514:	ldr	x0, [x0, #8]
   42518:	ldr	w0, [x0]
   4251c:	cmp	w0, #0x32
   42520:	b.ne	42d34 <__asan_cplus_demangle_print@@Base+0x2ac8>  // b.any
   42524:	ldr	x0, [sp, #24]
   42528:	ldr	x0, [x0, #8]
   4252c:	ldr	x0, [x0, #8]
   42530:	ldr	w0, [x0, #16]
   42534:	cmp	w0, #0x1
   42538:	b.ne	42d34 <__asan_cplus_demangle_print@@Base+0x2ac8>  // b.any
   4253c:	ldr	x0, [sp, #24]
   42540:	ldr	x0, [x0, #8]
   42544:	ldr	x0, [x0, #8]
   42548:	ldr	x0, [x0, #8]
   4254c:	ldrb	w0, [x0]
   42550:	cmp	w0, #0x3e
   42554:	b.ne	42d34 <__asan_cplus_demangle_print@@Base+0x2ac8>  // b.any
   42558:	mov	w1, #0x29                  	// #41
   4255c:	ldr	x0, [sp, #40]
   42560:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   42564:	b	42d34 <__asan_cplus_demangle_print@@Base+0x2ac8>
   42568:	ldr	x0, [sp, #40]
   4256c:	bl	3fe78 <__asan_cplus_demangle_type@@Base+0x37e4>
   42570:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42574:	ldr	x0, [sp, #24]
   42578:	ldr	x0, [x0, #16]
   4257c:	ldr	w0, [x0]
   42580:	cmp	w0, #0x3b
   42584:	b.ne	425a0 <__asan_cplus_demangle_print@@Base+0x2334>  // b.any
   42588:	ldr	x0, [sp, #24]
   4258c:	ldr	x0, [x0, #16]
   42590:	ldr	x0, [x0, #16]
   42594:	ldr	w0, [x0]
   42598:	cmp	w0, #0x3c
   4259c:	b.eq	425ac <__asan_cplus_demangle_print@@Base+0x2340>  // b.none
   425a0:	ldr	x0, [sp, #40]
   425a4:	bl	3fe78 <__asan_cplus_demangle_type@@Base+0x37e4>
   425a8:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   425ac:	ldr	x2, [sp, #24]
   425b0:	ldr	w1, [sp, #36]
   425b4:	ldr	x0, [sp, #40]
   425b8:	bl	4093c <__asan_cplus_demangle_print@@Base+0x6d0>
   425bc:	cmp	w0, #0x0
   425c0:	b.ne	42d3c <__asan_cplus_demangle_print@@Base+0x2ad0>  // b.any
   425c4:	ldr	x0, [sp, #24]
   425c8:	ldr	x0, [x0, #8]
   425cc:	str	x0, [sp, #352]
   425d0:	ldr	x0, [sp, #24]
   425d4:	ldr	x0, [x0, #16]
   425d8:	ldr	x0, [x0, #8]
   425dc:	str	x0, [sp, #344]
   425e0:	ldr	x0, [sp, #24]
   425e4:	ldr	x0, [x0, #16]
   425e8:	ldr	x0, [x0, #16]
   425ec:	ldr	x0, [x0, #8]
   425f0:	str	x0, [sp, #336]
   425f4:	ldr	x0, [sp, #24]
   425f8:	ldr	x0, [x0, #16]
   425fc:	ldr	x0, [x0, #16]
   42600:	ldr	x0, [x0, #16]
   42604:	str	x0, [sp, #328]
   42608:	ldr	x0, [sp, #352]
   4260c:	ldr	x0, [x0, #8]
   42610:	ldr	x2, [x0]
   42614:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   42618:	add	x1, x0, #0x9e8
   4261c:	mov	x0, x2
   42620:	bl	6a30 <__asan_internal_strcmp@plt>
   42624:	cmp	w0, #0x0
   42628:	b.ne	42680 <__asan_cplus_demangle_print@@Base+0x2414>  // b.any
   4262c:	ldr	x2, [sp, #344]
   42630:	ldr	w1, [sp, #36]
   42634:	ldr	x0, [sp, #40]
   42638:	bl	406e0 <__asan_cplus_demangle_print@@Base+0x474>
   4263c:	ldr	x2, [sp, #352]
   42640:	ldr	w1, [sp, #36]
   42644:	ldr	x0, [sp, #40]
   42648:	bl	43918 <__asan_cplus_demangle_print@@Base+0x36ac>
   4264c:	ldr	x2, [sp, #336]
   42650:	ldr	w1, [sp, #36]
   42654:	ldr	x0, [sp, #40]
   42658:	bl	406e0 <__asan_cplus_demangle_print@@Base+0x474>
   4265c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   42660:	add	x1, x0, #0x308
   42664:	ldr	x0, [sp, #40]
   42668:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   4266c:	ldr	x2, [sp, #328]
   42670:	ldr	w1, [sp, #36]
   42674:	ldr	x0, [sp, #40]
   42678:	bl	406e0 <__asan_cplus_demangle_print@@Base+0x474>
   4267c:	b	42d44 <__asan_cplus_demangle_print@@Base+0x2ad8>
   42680:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   42684:	add	x1, x0, #0x310
   42688:	ldr	x0, [sp, #40]
   4268c:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   42690:	ldr	x0, [sp, #344]
   42694:	ldr	x0, [x0, #8]
   42698:	cmp	x0, #0x0
   4269c:	b.eq	426bc <__asan_cplus_demangle_print@@Base+0x2450>  // b.none
   426a0:	ldr	x2, [sp, #344]
   426a4:	ldr	w1, [sp, #36]
   426a8:	ldr	x0, [sp, #40]
   426ac:	bl	406e0 <__asan_cplus_demangle_print@@Base+0x474>
   426b0:	mov	w1, #0x20                  	// #32
   426b4:	ldr	x0, [sp, #40]
   426b8:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   426bc:	ldr	x2, [sp, #336]
   426c0:	ldr	w1, [sp, #36]
   426c4:	ldr	x0, [sp, #40]
   426c8:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   426cc:	ldr	x0, [sp, #328]
   426d0:	cmp	x0, #0x0
   426d4:	b.eq	42d44 <__asan_cplus_demangle_print@@Base+0x2ad8>  // b.none
   426d8:	ldr	x2, [sp, #328]
   426dc:	ldr	w1, [sp, #36]
   426e0:	ldr	x0, [sp, #40]
   426e4:	bl	406e0 <__asan_cplus_demangle_print@@Base+0x474>
   426e8:	b	42d44 <__asan_cplus_demangle_print@@Base+0x2ad8>
   426ec:	ldr	x0, [sp, #40]
   426f0:	bl	3fe78 <__asan_cplus_demangle_type@@Base+0x37e4>
   426f4:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   426f8:	str	wzr, [sp, #380]
   426fc:	ldr	x0, [sp, #24]
   42700:	ldr	x0, [x0, #8]
   42704:	ldr	w0, [x0]
   42708:	cmp	w0, #0x27
   4270c:	b.ne	428ec <__asan_cplus_demangle_print@@Base+0x2680>  // b.any
   42710:	ldr	x0, [sp, #24]
   42714:	ldr	x0, [x0, #8]
   42718:	ldr	x0, [x0, #8]
   4271c:	ldr	w0, [x0, #28]
   42720:	str	w0, [sp, #380]
   42724:	ldr	w0, [sp, #380]
   42728:	cmp	w0, #0x6
   4272c:	b.hi	42740 <__asan_cplus_demangle_print@@Base+0x24d4>  // b.pmore
   42730:	ldr	w0, [sp, #380]
   42734:	cmp	w0, #0x0
   42738:	b.ne	42750 <__asan_cplus_demangle_print@@Base+0x24e4>  // b.any
   4273c:	b	428f8 <__asan_cplus_demangle_print@@Base+0x268c>
   42740:	ldr	w0, [sp, #380]
   42744:	cmp	w0, #0x7
   42748:	b.eq	42860 <__asan_cplus_demangle_print@@Base+0x25f4>  // b.none
   4274c:	b	428f8 <__asan_cplus_demangle_print@@Base+0x268c>
   42750:	ldr	x0, [sp, #24]
   42754:	ldr	x0, [x0, #16]
   42758:	ldr	w0, [x0]
   4275c:	cmp	w0, #0x0
   42760:	b.ne	428f4 <__asan_cplus_demangle_print@@Base+0x2688>  // b.any
   42764:	ldr	x0, [sp, #24]
   42768:	ldr	w0, [x0]
   4276c:	cmp	w0, #0x3e
   42770:	b.ne	42780 <__asan_cplus_demangle_print@@Base+0x2514>  // b.any
   42774:	mov	w1, #0x2d                  	// #45
   42778:	ldr	x0, [sp, #40]
   4277c:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   42780:	ldr	x0, [sp, #24]
   42784:	ldr	x0, [x0, #16]
   42788:	mov	x2, x0
   4278c:	ldr	w1, [sp, #36]
   42790:	ldr	x0, [sp, #40]
   42794:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   42798:	ldr	w0, [sp, #380]
   4279c:	cmp	w0, #0x6
   427a0:	b.eq	42844 <__asan_cplus_demangle_print@@Base+0x25d8>  // b.none
   427a4:	ldr	w0, [sp, #380]
   427a8:	cmp	w0, #0x6
   427ac:	b.hi	42858 <__asan_cplus_demangle_print@@Base+0x25ec>  // b.pmore
   427b0:	ldr	w0, [sp, #380]
   427b4:	cmp	w0, #0x5
   427b8:	b.eq	42830 <__asan_cplus_demangle_print@@Base+0x25c4>  // b.none
   427bc:	ldr	w0, [sp, #380]
   427c0:	cmp	w0, #0x5
   427c4:	b.hi	42858 <__asan_cplus_demangle_print@@Base+0x25ec>  // b.pmore
   427c8:	ldr	w0, [sp, #380]
   427cc:	cmp	w0, #0x4
   427d0:	b.eq	4281c <__asan_cplus_demangle_print@@Base+0x25b0>  // b.none
   427d4:	ldr	w0, [sp, #380]
   427d8:	cmp	w0, #0x4
   427dc:	b.hi	42858 <__asan_cplus_demangle_print@@Base+0x25ec>  // b.pmore
   427e0:	ldr	w0, [sp, #380]
   427e4:	cmp	w0, #0x2
   427e8:	b.eq	427fc <__asan_cplus_demangle_print@@Base+0x2590>  // b.none
   427ec:	ldr	w0, [sp, #380]
   427f0:	cmp	w0, #0x3
   427f4:	b.eq	4280c <__asan_cplus_demangle_print@@Base+0x25a0>  // b.none
   427f8:	b	42858 <__asan_cplus_demangle_print@@Base+0x25ec>
   427fc:	mov	w1, #0x75                  	// #117
   42800:	ldr	x0, [sp, #40]
   42804:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   42808:	b	4285c <__asan_cplus_demangle_print@@Base+0x25f0>
   4280c:	mov	w1, #0x6c                  	// #108
   42810:	ldr	x0, [sp, #40]
   42814:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   42818:	b	4285c <__asan_cplus_demangle_print@@Base+0x25f0>
   4281c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   42820:	add	x1, x0, #0x318
   42824:	ldr	x0, [sp, #40]
   42828:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   4282c:	b	4285c <__asan_cplus_demangle_print@@Base+0x25f0>
   42830:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   42834:	add	x1, x0, #0x320
   42838:	ldr	x0, [sp, #40]
   4283c:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   42840:	b	4285c <__asan_cplus_demangle_print@@Base+0x25f0>
   42844:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   42848:	add	x1, x0, #0x328
   4284c:	ldr	x0, [sp, #40]
   42850:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   42854:	b	4285c <__asan_cplus_demangle_print@@Base+0x25f0>
   42858:	nop
   4285c:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42860:	ldr	x0, [sp, #24]
   42864:	ldr	x0, [x0, #16]
   42868:	ldr	w0, [x0]
   4286c:	cmp	w0, #0x0
   42870:	b.ne	428e4 <__asan_cplus_demangle_print@@Base+0x2678>  // b.any
   42874:	ldr	x0, [sp, #24]
   42878:	ldr	x0, [x0, #16]
   4287c:	ldr	w0, [x0, #16]
   42880:	cmp	w0, #0x1
   42884:	b.ne	428e4 <__asan_cplus_demangle_print@@Base+0x2678>  // b.any
   42888:	ldr	x0, [sp, #24]
   4288c:	ldr	w0, [x0]
   42890:	cmp	w0, #0x3d
   42894:	b.ne	428e4 <__asan_cplus_demangle_print@@Base+0x2678>  // b.any
   42898:	ldr	x0, [sp, #24]
   4289c:	ldr	x0, [x0, #16]
   428a0:	ldr	x0, [x0, #8]
   428a4:	ldrb	w0, [x0]
   428a8:	cmp	w0, #0x30
   428ac:	b.eq	428bc <__asan_cplus_demangle_print@@Base+0x2650>  // b.none
   428b0:	cmp	w0, #0x31
   428b4:	b.eq	428d0 <__asan_cplus_demangle_print@@Base+0x2664>  // b.none
   428b8:	b	428e8 <__asan_cplus_demangle_print@@Base+0x267c>
   428bc:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   428c0:	add	x1, x0, #0x330
   428c4:	ldr	x0, [sp, #40]
   428c8:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   428cc:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   428d0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   428d4:	add	x1, x0, #0x338
   428d8:	ldr	x0, [sp, #40]
   428dc:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   428e0:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   428e4:	nop
   428e8:	b	428f8 <__asan_cplus_demangle_print@@Base+0x268c>
   428ec:	nop
   428f0:	b	428f8 <__asan_cplus_demangle_print@@Base+0x268c>
   428f4:	nop
   428f8:	mov	w1, #0x28                  	// #40
   428fc:	ldr	x0, [sp, #40]
   42900:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   42904:	ldr	x0, [sp, #24]
   42908:	ldr	x0, [x0, #8]
   4290c:	mov	x2, x0
   42910:	ldr	w1, [sp, #36]
   42914:	ldr	x0, [sp, #40]
   42918:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   4291c:	mov	w1, #0x29                  	// #41
   42920:	ldr	x0, [sp, #40]
   42924:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   42928:	ldr	x0, [sp, #24]
   4292c:	ldr	w0, [x0]
   42930:	cmp	w0, #0x3e
   42934:	b.ne	42944 <__asan_cplus_demangle_print@@Base+0x26d8>  // b.any
   42938:	mov	w1, #0x2d                  	// #45
   4293c:	ldr	x0, [sp, #40]
   42940:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   42944:	ldr	w0, [sp, #380]
   42948:	cmp	w0, #0x8
   4294c:	b.ne	4295c <__asan_cplus_demangle_print@@Base+0x26f0>  // b.any
   42950:	mov	w1, #0x5b                  	// #91
   42954:	ldr	x0, [sp, #40]
   42958:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   4295c:	ldr	x0, [sp, #24]
   42960:	ldr	x0, [x0, #16]
   42964:	mov	x2, x0
   42968:	ldr	w1, [sp, #36]
   4296c:	ldr	x0, [sp, #40]
   42970:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   42974:	ldr	w0, [sp, #380]
   42978:	cmp	w0, #0x8
   4297c:	b.ne	42d4c <__asan_cplus_demangle_print@@Base+0x2ae0>  // b.any
   42980:	mov	w1, #0x5d                  	// #93
   42984:	ldr	x0, [sp, #40]
   42988:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   4298c:	b	42d4c <__asan_cplus_demangle_print@@Base+0x2ae0>
   42990:	ldr	x0, [sp, #24]
   42994:	ldr	x0, [x0, #8]
   42998:	mov	w1, w0
   4299c:	ldr	x0, [sp, #40]
   429a0:	bl	40020 <__asan_cplus_demangle_type@@Base+0x398c>
   429a4:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   429a8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   429ac:	add	x1, x0, #0x340
   429b0:	ldr	x0, [sp, #40]
   429b4:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   429b8:	ldr	x0, [sp, #24]
   429bc:	ldr	x0, [x0, #8]
   429c0:	mov	x2, x0
   429c4:	ldr	w1, [sp, #36]
   429c8:	ldr	x0, [sp, #40]
   429cc:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   429d0:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   429d4:	ldr	x0, [sp, #24]
   429d8:	ldr	x0, [x0, #8]
   429dc:	mov	x2, x0
   429e0:	ldr	w1, [sp, #36]
   429e4:	ldr	x0, [sp, #40]
   429e8:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   429ec:	ldr	x0, [sp, #24]
   429f0:	ldr	x0, [x0, #16]
   429f4:	mov	x2, x0
   429f8:	ldr	w1, [sp, #36]
   429fc:	ldr	x0, [sp, #40]
   42a00:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   42a04:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42a08:	ldr	x0, [sp, #24]
   42a0c:	ldr	w0, [x0, #8]
   42a10:	and	w0, w0, #0xff
   42a14:	mov	w1, w0
   42a18:	ldr	x0, [sp, #40]
   42a1c:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   42a20:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42a24:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   42a28:	add	x1, x0, #0x350
   42a2c:	ldr	x0, [sp, #40]
   42a30:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   42a34:	ldr	x0, [sp, #24]
   42a38:	ldr	x0, [x0, #8]
   42a3c:	mov	x2, x0
   42a40:	ldr	w1, [sp, #36]
   42a44:	ldr	x0, [sp, #40]
   42a48:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   42a4c:	mov	w1, #0x29                  	// #41
   42a50:	ldr	x0, [sp, #40]
   42a54:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   42a58:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42a5c:	ldr	x0, [sp, #24]
   42a60:	ldr	x0, [x0, #8]
   42a64:	mov	x1, x0
   42a68:	ldr	x0, [sp, #40]
   42a6c:	bl	40400 <__asan_cplus_demangle_print@@Base+0x194>
   42a70:	str	x0, [sp, #368]
   42a74:	ldr	x0, [sp, #368]
   42a78:	cmp	x0, #0x0
   42a7c:	b.ne	42aac <__asan_cplus_demangle_print@@Base+0x2840>  // b.any
   42a80:	ldr	x0, [sp, #24]
   42a84:	ldr	x0, [x0, #8]
   42a88:	mov	x2, x0
   42a8c:	ldr	w1, [sp, #36]
   42a90:	ldr	x0, [sp, #40]
   42a94:	bl	406e0 <__asan_cplus_demangle_print@@Base+0x474>
   42a98:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   42a9c:	add	x1, x0, #0x820
   42aa0:	ldr	x0, [sp, #40]
   42aa4:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   42aa8:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42aac:	ldr	x0, [sp, #368]
   42ab0:	bl	405c4 <__asan_cplus_demangle_print@@Base+0x358>
   42ab4:	str	w0, [sp, #364]
   42ab8:	ldr	x0, [sp, #24]
   42abc:	ldr	x0, [x0, #8]
   42ac0:	str	x0, [sp, #24]
   42ac4:	str	wzr, [sp, #376]
   42ac8:	b	42b18 <__asan_cplus_demangle_print@@Base+0x28ac>
   42acc:	ldr	x0, [sp, #40]
   42ad0:	ldr	w1, [sp, #376]
   42ad4:	str	w1, [x0, #316]
   42ad8:	ldr	x2, [sp, #24]
   42adc:	ldr	w1, [sp, #36]
   42ae0:	ldr	x0, [sp, #40]
   42ae4:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   42ae8:	ldr	w0, [sp, #364]
   42aec:	sub	w0, w0, #0x1
   42af0:	ldr	w1, [sp, #376]
   42af4:	cmp	w1, w0
   42af8:	b.ge	42b0c <__asan_cplus_demangle_print@@Base+0x28a0>  // b.tcont
   42afc:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   42b00:	add	x1, x0, #0x2d8
   42b04:	ldr	x0, [sp, #40]
   42b08:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   42b0c:	ldr	w0, [sp, #376]
   42b10:	add	w0, w0, #0x1
   42b14:	str	w0, [sp, #376]
   42b18:	ldr	w1, [sp, #376]
   42b1c:	ldr	w0, [sp, #364]
   42b20:	cmp	w1, w0
   42b24:	b.lt	42acc <__asan_cplus_demangle_print@@Base+0x2860>  // b.tstop
   42b28:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42b2c:	ldr	x0, [sp, #24]
   42b30:	ldr	x0, [x0, #8]
   42b34:	str	x0, [sp, #232]
   42b38:	ldr	x0, [sp, #232]
   42b3c:	cmp	x0, #0x0
   42b40:	b.ne	42b58 <__asan_cplus_demangle_print@@Base+0x28ec>  // b.any
   42b44:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   42b48:	add	x1, x0, #0x360
   42b4c:	ldr	x0, [sp, #40]
   42b50:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   42b54:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42b58:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   42b5c:	add	x1, x0, #0x368
   42b60:	ldr	x0, [sp, #40]
   42b64:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   42b68:	ldr	x0, [sp, #232]
   42b6c:	mov	w1, w0
   42b70:	ldr	x0, [sp, #40]
   42b74:	bl	40020 <__asan_cplus_demangle_type@@Base+0x398c>
   42b78:	mov	w1, #0x7d                  	// #125
   42b7c:	ldr	x0, [sp, #40]
   42b80:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   42b84:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42b88:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   42b8c:	add	x1, x0, #0x370
   42b90:	ldr	x0, [sp, #40]
   42b94:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   42b98:	ldr	x0, [sp, #24]
   42b9c:	ldr	x0, [x0, #8]
   42ba0:	mov	x2, x0
   42ba4:	ldr	w1, [sp, #36]
   42ba8:	ldr	x0, [sp, #40]
   42bac:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   42bb0:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42bb4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   42bb8:	add	x1, x0, #0x390
   42bbc:	ldr	x0, [sp, #40]
   42bc0:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   42bc4:	ldr	x0, [sp, #24]
   42bc8:	ldr	x0, [x0, #8]
   42bcc:	mov	x2, x0
   42bd0:	ldr	w1, [sp, #36]
   42bd4:	ldr	x0, [sp, #40]
   42bd8:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   42bdc:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42be0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   42be4:	add	x1, x0, #0x3b0
   42be8:	ldr	x0, [sp, #40]
   42bec:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   42bf0:	ldr	x0, [sp, #40]
   42bf4:	ldr	w0, [x0, #312]
   42bf8:	add	w1, w0, #0x1
   42bfc:	ldr	x0, [sp, #40]
   42c00:	str	w1, [x0, #312]
   42c04:	ldr	x0, [sp, #24]
   42c08:	ldr	x0, [x0, #8]
   42c0c:	mov	x2, x0
   42c10:	ldr	w1, [sp, #36]
   42c14:	ldr	x0, [sp, #40]
   42c18:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   42c1c:	ldr	x0, [sp, #40]
   42c20:	ldr	w0, [x0, #312]
   42c24:	sub	w1, w0, #0x1
   42c28:	ldr	x0, [sp, #40]
   42c2c:	str	w1, [x0, #312]
   42c30:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   42c34:	add	x1, x0, #0x3c0
   42c38:	ldr	x0, [sp, #40]
   42c3c:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   42c40:	ldr	x0, [sp, #24]
   42c44:	ldr	w0, [x0, #16]
   42c48:	add	w0, w0, #0x1
   42c4c:	mov	w1, w0
   42c50:	ldr	x0, [sp, #40]
   42c54:	bl	40020 <__asan_cplus_demangle_type@@Base+0x398c>
   42c58:	mov	w1, #0x7d                  	// #125
   42c5c:	ldr	x0, [sp, #40]
   42c60:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   42c64:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42c68:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   42c6c:	add	x1, x0, #0x3c8
   42c70:	ldr	x0, [sp, #40]
   42c74:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   42c78:	ldr	x0, [sp, #24]
   42c7c:	ldr	x0, [x0, #8]
   42c80:	add	w0, w0, #0x1
   42c84:	mov	w1, w0
   42c88:	ldr	x0, [sp, #40]
   42c8c:	bl	40020 <__asan_cplus_demangle_type@@Base+0x398c>
   42c90:	mov	w1, #0x7d                  	// #125
   42c94:	ldr	x0, [sp, #40]
   42c98:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   42c9c:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42ca0:	ldr	x0, [sp, #24]
   42ca4:	ldr	x0, [x0, #8]
   42ca8:	mov	x2, x0
   42cac:	ldr	w1, [sp, #36]
   42cb0:	ldr	x0, [sp, #40]
   42cb4:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   42cb8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   42cbc:	add	x1, x0, #0x3d8
   42cc0:	ldr	x0, [sp, #40]
   42cc4:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   42cc8:	ldr	x0, [sp, #24]
   42ccc:	ldr	x0, [x0, #16]
   42cd0:	mov	x2, x0
   42cd4:	ldr	w1, [sp, #36]
   42cd8:	ldr	x0, [sp, #40]
   42cdc:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   42ce0:	mov	w1, #0x5d                  	// #93
   42ce4:	ldr	x0, [sp, #40]
   42ce8:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   42cec:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42cf0:	ldr	x0, [sp, #40]
   42cf4:	bl	3fe78 <__asan_cplus_demangle_type@@Base+0x37e4>
   42cf8:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42cfc:	nop
   42d00:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42d04:	nop
   42d08:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42d0c:	nop
   42d10:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42d14:	nop
   42d18:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42d1c:	nop
   42d20:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42d24:	nop
   42d28:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42d2c:	nop
   42d30:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42d34:	nop
   42d38:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42d3c:	nop
   42d40:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42d44:	nop
   42d48:	b	42d50 <__asan_cplus_demangle_print@@Base+0x2ae4>
   42d4c:	nop
   42d50:	ldp	x29, x30, [sp]
   42d54:	add	sp, sp, #0x200
   42d58:	ret
   42d5c:	stp	x29, x30, [sp, #-64]!
   42d60:	mov	x29, sp
   42d64:	str	x0, [sp, #40]
   42d68:	str	w1, [sp, #36]
   42d6c:	str	x2, [sp, #24]
   42d70:	ldr	x0, [sp, #24]
   42d74:	cmp	x0, #0x0
   42d78:	b.eq	42d9c <__asan_cplus_demangle_print@@Base+0x2b30>  // b.none
   42d7c:	ldr	x0, [sp, #24]
   42d80:	ldr	w0, [x0, #4]
   42d84:	cmp	w0, #0x1
   42d88:	b.gt	42d9c <__asan_cplus_demangle_print@@Base+0x2b30>
   42d8c:	ldr	x0, [sp, #40]
   42d90:	ldr	w0, [x0, #308]
   42d94:	cmp	w0, #0x400
   42d98:	b.le	42da8 <__asan_cplus_demangle_print@@Base+0x2b3c>
   42d9c:	ldr	x0, [sp, #40]
   42da0:	bl	3fe78 <__asan_cplus_demangle_type@@Base+0x37e4>
   42da4:	b	42e34 <__asan_cplus_demangle_print@@Base+0x2bc8>
   42da8:	ldr	x0, [sp, #24]
   42dac:	ldr	w0, [x0, #4]
   42db0:	add	w1, w0, #0x1
   42db4:	ldr	x0, [sp, #24]
   42db8:	str	w1, [x0, #4]
   42dbc:	ldr	x0, [sp, #40]
   42dc0:	ldr	w0, [x0, #308]
   42dc4:	add	w1, w0, #0x1
   42dc8:	ldr	x0, [sp, #40]
   42dcc:	str	w1, [x0, #308]
   42dd0:	ldr	x0, [sp, #24]
   42dd4:	str	x0, [sp, #48]
   42dd8:	ldr	x0, [sp, #40]
   42ddc:	ldr	x0, [x0, #328]
   42de0:	str	x0, [sp, #56]
   42de4:	ldr	x0, [sp, #40]
   42de8:	add	x1, sp, #0x30
   42dec:	str	x1, [x0, #328]
   42df0:	ldr	x2, [sp, #24]
   42df4:	ldr	w1, [sp, #36]
   42df8:	ldr	x0, [sp, #40]
   42dfc:	bl	40b28 <__asan_cplus_demangle_print@@Base+0x8bc>
   42e00:	ldr	x1, [sp, #56]
   42e04:	ldr	x0, [sp, #40]
   42e08:	str	x1, [x0, #328]
   42e0c:	ldr	x0, [sp, #24]
   42e10:	ldr	w0, [x0, #4]
   42e14:	sub	w1, w0, #0x1
   42e18:	ldr	x0, [sp, #24]
   42e1c:	str	w1, [x0, #4]
   42e20:	ldr	x0, [sp, #40]
   42e24:	ldr	w0, [x0, #308]
   42e28:	sub	w1, w0, #0x1
   42e2c:	ldr	x0, [sp, #40]
   42e30:	str	w1, [x0, #308]
   42e34:	ldp	x29, x30, [sp], #64
   42e38:	ret
   42e3c:	stp	x29, x30, [sp, #-96]!
   42e40:	mov	x29, sp
   42e44:	str	x0, [sp, #40]
   42e48:	str	x1, [sp, #32]
   42e4c:	str	w2, [sp, #28]
   42e50:	ldrsw	x0, [sp, #28]
   42e54:	ldr	x1, [sp, #32]
   42e58:	add	x0, x1, x0
   42e5c:	str	x0, [sp, #56]
   42e60:	ldr	x0, [sp, #32]
   42e64:	str	x0, [sp, #88]
   42e68:	b	43000 <__asan_cplus_demangle_print@@Base+0x2d94>
   42e6c:	ldr	x1, [sp, #56]
   42e70:	ldr	x0, [sp, #88]
   42e74:	sub	x0, x1, x0
   42e78:	cmp	x0, #0x3
   42e7c:	b.le	42fe0 <__asan_cplus_demangle_print@@Base+0x2d74>
   42e80:	ldr	x0, [sp, #88]
   42e84:	ldrb	w0, [x0]
   42e88:	cmp	w0, #0x5f
   42e8c:	b.ne	42fe0 <__asan_cplus_demangle_print@@Base+0x2d74>  // b.any
   42e90:	ldr	x0, [sp, #88]
   42e94:	add	x0, x0, #0x1
   42e98:	ldrb	w0, [x0]
   42e9c:	cmp	w0, #0x5f
   42ea0:	b.ne	42fe0 <__asan_cplus_demangle_print@@Base+0x2d74>  // b.any
   42ea4:	ldr	x0, [sp, #88]
   42ea8:	add	x0, x0, #0x2
   42eac:	ldrb	w0, [x0]
   42eb0:	cmp	w0, #0x55
   42eb4:	b.ne	42fe0 <__asan_cplus_demangle_print@@Base+0x2d74>  // b.any
   42eb8:	str	xzr, [sp, #80]
   42ebc:	ldr	x0, [sp, #88]
   42ec0:	add	x0, x0, #0x3
   42ec4:	str	x0, [sp, #72]
   42ec8:	b	42f84 <__asan_cplus_demangle_print@@Base+0x2d18>
   42ecc:	ldr	x0, [sp, #72]
   42ed0:	ldrb	w0, [x0]
   42ed4:	cmp	w0, #0x2f
   42ed8:	b.ls	42f00 <__asan_cplus_demangle_print@@Base+0x2c94>  // b.plast
   42edc:	ldr	x0, [sp, #72]
   42ee0:	ldrb	w0, [x0]
   42ee4:	cmp	w0, #0x39
   42ee8:	b.hi	42f00 <__asan_cplus_demangle_print@@Base+0x2c94>  // b.pmore
   42eec:	ldr	x0, [sp, #72]
   42ef0:	ldrb	w0, [x0]
   42ef4:	sub	w0, w0, #0x30
   42ef8:	str	w0, [sp, #68]
   42efc:	b	42f64 <__asan_cplus_demangle_print@@Base+0x2cf8>
   42f00:	ldr	x0, [sp, #72]
   42f04:	ldrb	w0, [x0]
   42f08:	cmp	w0, #0x40
   42f0c:	b.ls	42f34 <__asan_cplus_demangle_print@@Base+0x2cc8>  // b.plast
   42f10:	ldr	x0, [sp, #72]
   42f14:	ldrb	w0, [x0]
   42f18:	cmp	w0, #0x46
   42f1c:	b.hi	42f34 <__asan_cplus_demangle_print@@Base+0x2cc8>  // b.pmore
   42f20:	ldr	x0, [sp, #72]
   42f24:	ldrb	w0, [x0]
   42f28:	sub	w0, w0, #0x37
   42f2c:	str	w0, [sp, #68]
   42f30:	b	42f64 <__asan_cplus_demangle_print@@Base+0x2cf8>
   42f34:	ldr	x0, [sp, #72]
   42f38:	ldrb	w0, [x0]
   42f3c:	cmp	w0, #0x60
   42f40:	b.ls	42f94 <__asan_cplus_demangle_print@@Base+0x2d28>  // b.plast
   42f44:	ldr	x0, [sp, #72]
   42f48:	ldrb	w0, [x0]
   42f4c:	cmp	w0, #0x66
   42f50:	b.hi	42f94 <__asan_cplus_demangle_print@@Base+0x2d28>  // b.pmore
   42f54:	ldr	x0, [sp, #72]
   42f58:	ldrb	w0, [x0]
   42f5c:	sub	w0, w0, #0x57
   42f60:	str	w0, [sp, #68]
   42f64:	ldr	x0, [sp, #80]
   42f68:	lsl	x1, x0, #4
   42f6c:	ldrsw	x0, [sp, #68]
   42f70:	add	x0, x1, x0
   42f74:	str	x0, [sp, #80]
   42f78:	ldr	x0, [sp, #72]
   42f7c:	add	x0, x0, #0x1
   42f80:	str	x0, [sp, #72]
   42f84:	ldr	x1, [sp, #72]
   42f88:	ldr	x0, [sp, #56]
   42f8c:	cmp	x1, x0
   42f90:	b.cc	42ecc <__asan_cplus_demangle_print@@Base+0x2c60>  // b.lo, b.ul, b.last
   42f94:	ldr	x1, [sp, #72]
   42f98:	ldr	x0, [sp, #56]
   42f9c:	cmp	x1, x0
   42fa0:	b.cs	42fe0 <__asan_cplus_demangle_print@@Base+0x2d74>  // b.hs, b.nlast
   42fa4:	ldr	x0, [sp, #72]
   42fa8:	ldrb	w0, [x0]
   42fac:	cmp	w0, #0x5f
   42fb0:	b.ne	42fe0 <__asan_cplus_demangle_print@@Base+0x2d74>  // b.any
   42fb4:	ldr	x0, [sp, #80]
   42fb8:	cmp	x0, #0xff
   42fbc:	b.hi	42fe0 <__asan_cplus_demangle_print@@Base+0x2d74>  // b.pmore
   42fc0:	ldr	x0, [sp, #80]
   42fc4:	and	w0, w0, #0xff
   42fc8:	mov	w1, w0
   42fcc:	ldr	x0, [sp, #40]
   42fd0:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   42fd4:	ldr	x0, [sp, #72]
   42fd8:	str	x0, [sp, #88]
   42fdc:	b	42ff4 <__asan_cplus_demangle_print@@Base+0x2d88>
   42fe0:	ldr	x0, [sp, #88]
   42fe4:	ldrb	w0, [x0]
   42fe8:	mov	w1, w0
   42fec:	ldr	x0, [sp, #40]
   42ff0:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   42ff4:	ldr	x0, [sp, #88]
   42ff8:	add	x0, x0, #0x1
   42ffc:	str	x0, [sp, #88]
   43000:	ldr	x1, [sp, #88]
   43004:	ldr	x0, [sp, #56]
   43008:	cmp	x1, x0
   4300c:	b.cc	42e6c <__asan_cplus_demangle_print@@Base+0x2c00>  // b.lo, b.ul, b.last
   43010:	nop
   43014:	nop
   43018:	ldp	x29, x30, [sp], #96
   4301c:	ret
   43020:	stp	x29, x30, [sp, #-80]!
   43024:	mov	x29, sp
   43028:	str	x0, [sp, #40]
   4302c:	str	w1, [sp, #36]
   43030:	str	x2, [sp, #24]
   43034:	str	w3, [sp, #32]
   43038:	ldr	x0, [sp, #24]
   4303c:	cmp	x0, #0x0
   43040:	b.eq	432cc <__asan_cplus_demangle_print@@Base+0x3060>  // b.none
   43044:	ldr	x0, [sp, #40]
   43048:	bl	3fe98 <__asan_cplus_demangle_type@@Base+0x3804>
   4304c:	cmp	w0, #0x0
   43050:	b.ne	432cc <__asan_cplus_demangle_print@@Base+0x3060>  // b.any
   43054:	ldr	x0, [sp, #24]
   43058:	ldr	w0, [x0, #16]
   4305c:	cmp	w0, #0x0
   43060:	b.ne	43088 <__asan_cplus_demangle_print@@Base+0x2e1c>  // b.any
   43064:	ldr	w0, [sp, #32]
   43068:	cmp	w0, #0x0
   4306c:	b.ne	430a8 <__asan_cplus_demangle_print@@Base+0x2e3c>  // b.any
   43070:	ldr	x0, [sp, #24]
   43074:	ldr	x0, [x0, #8]
   43078:	ldr	w0, [x0]
   4307c:	bl	39fc0 <__asan_backtrace_create_state@@Base+0xa4>
   43080:	cmp	w0, #0x0
   43084:	b.eq	430a8 <__asan_cplus_demangle_print@@Base+0x2e3c>  // b.none
   43088:	ldr	x0, [sp, #24]
   4308c:	ldr	x0, [x0]
   43090:	ldr	w3, [sp, #32]
   43094:	mov	x2, x0
   43098:	ldr	w1, [sp, #36]
   4309c:	ldr	x0, [sp, #40]
   430a0:	bl	43020 <__asan_cplus_demangle_print@@Base+0x2db4>
   430a4:	b	432d0 <__asan_cplus_demangle_print@@Base+0x3064>
   430a8:	ldr	x0, [sp, #24]
   430ac:	mov	w1, #0x1                   	// #1
   430b0:	str	w1, [x0, #16]
   430b4:	ldr	x0, [sp, #40]
   430b8:	ldr	x0, [x0, #288]
   430bc:	str	x0, [sp, #64]
   430c0:	ldr	x0, [sp, #24]
   430c4:	ldr	x1, [x0, #24]
   430c8:	ldr	x0, [sp, #40]
   430cc:	str	x1, [x0, #288]
   430d0:	ldr	x0, [sp, #24]
   430d4:	ldr	x0, [x0, #8]
   430d8:	ldr	w0, [x0]
   430dc:	cmp	w0, #0x29
   430e0:	b.ne	43118 <__asan_cplus_demangle_print@@Base+0x2eac>  // b.any
   430e4:	ldr	x0, [sp, #24]
   430e8:	ldr	x1, [x0, #8]
   430ec:	ldr	x0, [sp, #24]
   430f0:	ldr	x0, [x0]
   430f4:	mov	x3, x0
   430f8:	mov	x2, x1
   430fc:	ldr	w1, [sp, #36]
   43100:	ldr	x0, [sp, #40]
   43104:	bl	4358c <__asan_cplus_demangle_print@@Base+0x3320>
   43108:	ldr	x0, [sp, #40]
   4310c:	ldr	x1, [sp, #64]
   43110:	str	x1, [x0, #288]
   43114:	b	432d0 <__asan_cplus_demangle_print@@Base+0x3064>
   43118:	ldr	x0, [sp, #24]
   4311c:	ldr	x0, [x0, #8]
   43120:	ldr	w0, [x0]
   43124:	cmp	w0, #0x2a
   43128:	b.ne	43160 <__asan_cplus_demangle_print@@Base+0x2ef4>  // b.any
   4312c:	ldr	x0, [sp, #24]
   43130:	ldr	x1, [x0, #8]
   43134:	ldr	x0, [sp, #24]
   43138:	ldr	x0, [x0]
   4313c:	mov	x3, x0
   43140:	mov	x2, x1
   43144:	ldr	w1, [sp, #36]
   43148:	ldr	x0, [sp, #40]
   4314c:	bl	437d8 <__asan_cplus_demangle_print@@Base+0x356c>
   43150:	ldr	x0, [sp, #40]
   43154:	ldr	x1, [sp, #64]
   43158:	str	x1, [x0, #288]
   4315c:	b	432d0 <__asan_cplus_demangle_print@@Base+0x3064>
   43160:	ldr	x0, [sp, #24]
   43164:	ldr	x0, [x0, #8]
   43168:	ldr	w0, [x0]
   4316c:	cmp	w0, #0x2
   43170:	b.ne	43288 <__asan_cplus_demangle_print@@Base+0x301c>  // b.any
   43174:	ldr	x0, [sp, #40]
   43178:	ldr	x0, [x0, #296]
   4317c:	str	x0, [sp, #56]
   43180:	ldr	x0, [sp, #40]
   43184:	str	xzr, [x0, #296]
   43188:	ldr	x0, [sp, #24]
   4318c:	ldr	x0, [x0, #8]
   43190:	ldr	x0, [x0, #8]
   43194:	mov	x2, x0
   43198:	ldr	w1, [sp, #36]
   4319c:	ldr	x0, [sp, #40]
   431a0:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   431a4:	ldr	x0, [sp, #40]
   431a8:	ldr	x1, [sp, #56]
   431ac:	str	x1, [x0, #296]
   431b0:	ldr	w0, [sp, #36]
   431b4:	and	w0, w0, #0x4
   431b8:	cmp	w0, #0x0
   431bc:	b.ne	431d4 <__asan_cplus_demangle_print@@Base+0x2f68>  // b.any
   431c0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   431c4:	add	x1, x0, #0x858
   431c8:	ldr	x0, [sp, #40]
   431cc:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   431d0:	b	431e0 <__asan_cplus_demangle_print@@Base+0x2f74>
   431d4:	mov	w1, #0x2e                  	// #46
   431d8:	ldr	x0, [sp, #40]
   431dc:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   431e0:	ldr	x0, [sp, #24]
   431e4:	ldr	x0, [x0, #8]
   431e8:	ldr	x0, [x0, #16]
   431ec:	str	x0, [sp, #72]
   431f0:	ldr	x0, [sp, #72]
   431f4:	ldr	w0, [x0]
   431f8:	cmp	w0, #0x47
   431fc:	b.ne	43254 <__asan_cplus_demangle_print@@Base+0x2fe8>  // b.any
   43200:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   43204:	add	x1, x0, #0xd0
   43208:	ldr	x0, [sp, #40]
   4320c:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   43210:	ldr	x0, [sp, #72]
   43214:	ldr	w0, [x0, #16]
   43218:	add	w0, w0, #0x1
   4321c:	mov	w1, w0
   43220:	ldr	x0, [sp, #40]
   43224:	bl	40020 <__asan_cplus_demangle_type@@Base+0x398c>
   43228:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   4322c:	add	x1, x0, #0xe0
   43230:	ldr	x0, [sp, #40]
   43234:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   43238:	ldr	x0, [sp, #72]
   4323c:	ldr	x0, [x0, #8]
   43240:	str	x0, [sp, #72]
   43244:	b	43254 <__asan_cplus_demangle_print@@Base+0x2fe8>
   43248:	ldr	x0, [sp, #72]
   4324c:	ldr	x0, [x0, #8]
   43250:	str	x0, [sp, #72]
   43254:	ldr	x0, [sp, #72]
   43258:	ldr	w0, [x0]
   4325c:	bl	39fc0 <__asan_backtrace_create_state@@Base+0xa4>
   43260:	cmp	w0, #0x0
   43264:	b.ne	43248 <__asan_cplus_demangle_print@@Base+0x2fdc>  // b.any
   43268:	ldr	x2, [sp, #72]
   4326c:	ldr	w1, [sp, #36]
   43270:	ldr	x0, [sp, #40]
   43274:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   43278:	ldr	x0, [sp, #40]
   4327c:	ldr	x1, [sp, #64]
   43280:	str	x1, [x0, #288]
   43284:	b	432d0 <__asan_cplus_demangle_print@@Base+0x3064>
   43288:	ldr	x0, [sp, #24]
   4328c:	ldr	x0, [x0, #8]
   43290:	mov	x2, x0
   43294:	ldr	w1, [sp, #36]
   43298:	ldr	x0, [sp, #40]
   4329c:	bl	432d8 <__asan_cplus_demangle_print@@Base+0x306c>
   432a0:	ldr	x0, [sp, #40]
   432a4:	ldr	x1, [sp, #64]
   432a8:	str	x1, [x0, #288]
   432ac:	ldr	x0, [sp, #24]
   432b0:	ldr	x0, [x0]
   432b4:	ldr	w3, [sp, #32]
   432b8:	mov	x2, x0
   432bc:	ldr	w1, [sp, #36]
   432c0:	ldr	x0, [sp, #40]
   432c4:	bl	43020 <__asan_cplus_demangle_print@@Base+0x2db4>
   432c8:	b	432d0 <__asan_cplus_demangle_print@@Base+0x3064>
   432cc:	nop
   432d0:	ldp	x29, x30, [sp], #80
   432d4:	ret
   432d8:	stp	x29, x30, [sp, #-48]!
   432dc:	mov	x29, sp
   432e0:	str	x0, [sp, #40]
   432e4:	str	w1, [sp, #36]
   432e8:	str	x2, [sp, #24]
   432ec:	ldr	x0, [sp, #24]
   432f0:	ldr	w0, [x0]
   432f4:	sub	w0, w0, #0x3
   432f8:	cmp	w0, #0x4d
   432fc:	b.hi	4355c <__asan_cplus_demangle_print@@Base+0x32f0>  // b.pmore
   43300:	adrp	x1, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   43304:	add	x1, x1, #0x5b4
   43308:	ldr	w0, [x1, w0, uxtw #2]
   4330c:	adr	x1, 43318 <__asan_cplus_demangle_print@@Base+0x30ac>
   43310:	add	x0, x1, w0, sxtw #2
   43314:	br	x0
   43318:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   4331c:	add	x1, x0, #0x528
   43320:	ldr	x0, [sp, #40]
   43324:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   43328:	b	43584 <__asan_cplus_demangle_print@@Base+0x3318>
   4332c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   43330:	add	x1, x0, #0x538
   43334:	ldr	x0, [sp, #40]
   43338:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   4333c:	b	43584 <__asan_cplus_demangle_print@@Base+0x3318>
   43340:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   43344:	add	x1, x0, #0x548
   43348:	ldr	x0, [sp, #40]
   4334c:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   43350:	b	43584 <__asan_cplus_demangle_print@@Base+0x3318>
   43354:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   43358:	add	x1, x0, #0x550
   4335c:	ldr	x0, [sp, #40]
   43360:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   43364:	b	43584 <__asan_cplus_demangle_print@@Base+0x3318>
   43368:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   4336c:	add	x1, x0, #0x568
   43370:	ldr	x0, [sp, #40]
   43374:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   43378:	ldr	x0, [sp, #24]
   4337c:	ldr	x0, [x0, #16]
   43380:	cmp	x0, #0x0
   43384:	b.eq	43570 <__asan_cplus_demangle_print@@Base+0x3304>  // b.none
   43388:	mov	w1, #0x28                  	// #40
   4338c:	ldr	x0, [sp, #40]
   43390:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   43394:	ldr	x0, [sp, #24]
   43398:	ldr	x0, [x0, #16]
   4339c:	mov	x2, x0
   433a0:	ldr	w1, [sp, #36]
   433a4:	ldr	x0, [sp, #40]
   433a8:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   433ac:	mov	w1, #0x29                  	// #41
   433b0:	ldr	x0, [sp, #40]
   433b4:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   433b8:	b	43570 <__asan_cplus_demangle_print@@Base+0x3304>
   433bc:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   433c0:	add	x1, x0, #0x578
   433c4:	ldr	x0, [sp, #40]
   433c8:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   433cc:	ldr	x0, [sp, #24]
   433d0:	ldr	x0, [x0, #16]
   433d4:	cmp	x0, #0x0
   433d8:	b.eq	43578 <__asan_cplus_demangle_print@@Base+0x330c>  // b.none
   433dc:	mov	w1, #0x28                  	// #40
   433e0:	ldr	x0, [sp, #40]
   433e4:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   433e8:	ldr	x0, [sp, #24]
   433ec:	ldr	x0, [x0, #16]
   433f0:	mov	x2, x0
   433f4:	ldr	w1, [sp, #36]
   433f8:	ldr	x0, [sp, #40]
   433fc:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   43400:	mov	w1, #0x29                  	// #41
   43404:	ldr	x0, [sp, #40]
   43408:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   4340c:	b	43578 <__asan_cplus_demangle_print@@Base+0x330c>
   43410:	mov	w1, #0x20                  	// #32
   43414:	ldr	x0, [sp, #40]
   43418:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   4341c:	ldr	x0, [sp, #24]
   43420:	ldr	x0, [x0, #16]
   43424:	mov	x2, x0
   43428:	ldr	w1, [sp, #36]
   4342c:	ldr	x0, [sp, #40]
   43430:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   43434:	b	43584 <__asan_cplus_demangle_print@@Base+0x3318>
   43438:	ldr	w0, [sp, #36]
   4343c:	and	w0, w0, #0x4
   43440:	cmp	w0, #0x0
   43444:	b.ne	43580 <__asan_cplus_demangle_print@@Base+0x3314>  // b.any
   43448:	mov	w1, #0x2a                  	// #42
   4344c:	ldr	x0, [sp, #40]
   43450:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   43454:	b	43580 <__asan_cplus_demangle_print@@Base+0x3314>
   43458:	mov	w1, #0x20                  	// #32
   4345c:	ldr	x0, [sp, #40]
   43460:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   43464:	mov	w1, #0x26                  	// #38
   43468:	ldr	x0, [sp, #40]
   4346c:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   43470:	b	43584 <__asan_cplus_demangle_print@@Base+0x3318>
   43474:	mov	w1, #0x20                  	// #32
   43478:	ldr	x0, [sp, #40]
   4347c:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   43480:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   43484:	add	x1, x0, #0x6d0
   43488:	ldr	x0, [sp, #40]
   4348c:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   43490:	b	43584 <__asan_cplus_demangle_print@@Base+0x3318>
   43494:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   43498:	add	x1, x0, #0x580
   4349c:	ldr	x0, [sp, #40]
   434a0:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   434a4:	b	43584 <__asan_cplus_demangle_print@@Base+0x3318>
   434a8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   434ac:	add	x1, x0, #0x590
   434b0:	ldr	x0, [sp, #40]
   434b4:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   434b8:	b	43584 <__asan_cplus_demangle_print@@Base+0x3318>
   434bc:	ldr	x0, [sp, #40]
   434c0:	bl	40064 <__asan_cplus_demangle_type@@Base+0x39d0>
   434c4:	and	w0, w0, #0xff
   434c8:	cmp	w0, #0x28
   434cc:	b.eq	434dc <__asan_cplus_demangle_print@@Base+0x3270>  // b.none
   434d0:	mov	w1, #0x20                  	// #32
   434d4:	ldr	x0, [sp, #40]
   434d8:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   434dc:	ldr	x0, [sp, #24]
   434e0:	ldr	x0, [x0, #8]
   434e4:	mov	x2, x0
   434e8:	ldr	w1, [sp, #36]
   434ec:	ldr	x0, [sp, #40]
   434f0:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   434f4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   434f8:	add	x1, x0, #0x5a0
   434fc:	ldr	x0, [sp, #40]
   43500:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   43504:	b	43584 <__asan_cplus_demangle_print@@Base+0x3318>
   43508:	ldr	x0, [sp, #24]
   4350c:	ldr	x0, [x0, #8]
   43510:	mov	x2, x0
   43514:	ldr	w1, [sp, #36]
   43518:	ldr	x0, [sp, #40]
   4351c:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   43520:	b	43584 <__asan_cplus_demangle_print@@Base+0x3318>
   43524:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   43528:	add	x1, x0, #0x5a8
   4352c:	ldr	x0, [sp, #40]
   43530:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   43534:	ldr	x0, [sp, #24]
   43538:	ldr	x0, [x0, #8]
   4353c:	mov	x2, x0
   43540:	ldr	w1, [sp, #36]
   43544:	ldr	x0, [sp, #40]
   43548:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   4354c:	mov	w1, #0x29                  	// #41
   43550:	ldr	x0, [sp, #40]
   43554:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   43558:	b	43584 <__asan_cplus_demangle_print@@Base+0x3318>
   4355c:	ldr	x2, [sp, #24]
   43560:	ldr	w1, [sp, #36]
   43564:	ldr	x0, [sp, #40]
   43568:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   4356c:	b	43584 <__asan_cplus_demangle_print@@Base+0x3318>
   43570:	nop
   43574:	b	43584 <__asan_cplus_demangle_print@@Base+0x3318>
   43578:	nop
   4357c:	b	43584 <__asan_cplus_demangle_print@@Base+0x3318>
   43580:	nop
   43584:	ldp	x29, x30, [sp], #48
   43588:	ret
   4358c:	stp	x29, x30, [sp, #-80]!
   43590:	mov	x29, sp
   43594:	str	x0, [sp, #40]
   43598:	str	w1, [sp, #36]
   4359c:	str	x2, [sp, #24]
   435a0:	str	x3, [sp, #16]
   435a4:	str	wzr, [sp, #76]
   435a8:	str	wzr, [sp, #72]
   435ac:	ldr	x0, [sp, #16]
   435b0:	str	x0, [sp, #64]
   435b4:	b	43690 <__asan_cplus_demangle_print@@Base+0x3424>
   435b8:	ldr	x0, [sp, #64]
   435bc:	ldr	w0, [x0, #16]
   435c0:	cmp	w0, #0x0
   435c4:	b.ne	436a0 <__asan_cplus_demangle_print@@Base+0x3434>  // b.any
   435c8:	ldr	x0, [sp, #64]
   435cc:	ldr	x0, [x0, #8]
   435d0:	ldr	w0, [x0]
   435d4:	sub	w0, w0, #0x19
   435d8:	cmp	w0, #0x37
   435dc:	cset	w1, hi  // hi = pmore
   435e0:	and	w1, w1, #0xff
   435e4:	cmp	w1, #0x0
   435e8:	b.ne	4366c <__asan_cplus_demangle_print@@Base+0x3400>  // b.any
   435ec:	mov	x1, #0x1                   	// #1
   435f0:	lsl	x0, x1, x0
   435f4:	mov	x1, #0xf8                  	// #248
   435f8:	movk	x1, #0xd0, lsl #48
   435fc:	and	x1, x0, x1
   43600:	cmp	x1, #0x0
   43604:	cset	w1, ne  // ne = any
   43608:	and	w1, w1, #0xff
   4360c:	cmp	w1, #0x0
   43610:	b.ne	43674 <__asan_cplus_demangle_print@@Base+0x3408>  // b.any
   43614:	mov	x1, #0x3107                	// #12551
   43618:	movk	x1, #0x4, lsl #16
   4361c:	and	x1, x0, x1
   43620:	cmp	x1, #0x0
   43624:	cset	w1, ne  // ne = any
   43628:	and	w1, w1, #0xff
   4362c:	cmp	w1, #0x0
   43630:	b.ne	43658 <__asan_cplus_demangle_print@@Base+0x33ec>  // b.any
   43634:	and	x0, x0, #0xe00
   43638:	cmp	x0, #0x0
   4363c:	cset	w0, ne  // ne = any
   43640:	and	w0, w0, #0xff
   43644:	cmp	w0, #0x0
   43648:	b.eq	4366c <__asan_cplus_demangle_print@@Base+0x3400>  // b.none
   4364c:	mov	w0, #0x1                   	// #1
   43650:	str	w0, [sp, #76]
   43654:	b	43678 <__asan_cplus_demangle_print@@Base+0x340c>
   43658:	mov	w0, #0x1                   	// #1
   4365c:	str	w0, [sp, #72]
   43660:	mov	w0, #0x1                   	// #1
   43664:	str	w0, [sp, #76]
   43668:	b	43678 <__asan_cplus_demangle_print@@Base+0x340c>
   4366c:	nop
   43670:	b	43678 <__asan_cplus_demangle_print@@Base+0x340c>
   43674:	nop
   43678:	ldr	w0, [sp, #76]
   4367c:	cmp	w0, #0x0
   43680:	b.ne	436a8 <__asan_cplus_demangle_print@@Base+0x343c>  // b.any
   43684:	ldr	x0, [sp, #64]
   43688:	ldr	x0, [x0]
   4368c:	str	x0, [sp, #64]
   43690:	ldr	x0, [sp, #64]
   43694:	cmp	x0, #0x0
   43698:	b.ne	435b8 <__asan_cplus_demangle_print@@Base+0x334c>  // b.any
   4369c:	b	436ac <__asan_cplus_demangle_print@@Base+0x3440>
   436a0:	nop
   436a4:	b	436ac <__asan_cplus_demangle_print@@Base+0x3440>
   436a8:	nop
   436ac:	ldr	w0, [sp, #76]
   436b0:	cmp	w0, #0x0
   436b4:	b.eq	4372c <__asan_cplus_demangle_print@@Base+0x34c0>  // b.none
   436b8:	ldr	w0, [sp, #72]
   436bc:	cmp	w0, #0x0
   436c0:	b.ne	436f4 <__asan_cplus_demangle_print@@Base+0x3488>  // b.any
   436c4:	ldr	x0, [sp, #40]
   436c8:	bl	40064 <__asan_cplus_demangle_type@@Base+0x39d0>
   436cc:	and	w0, w0, #0xff
   436d0:	cmp	w0, #0x28
   436d4:	b.eq	436f4 <__asan_cplus_demangle_print@@Base+0x3488>  // b.none
   436d8:	ldr	x0, [sp, #40]
   436dc:	bl	40064 <__asan_cplus_demangle_type@@Base+0x39d0>
   436e0:	and	w0, w0, #0xff
   436e4:	cmp	w0, #0x2a
   436e8:	b.eq	436f4 <__asan_cplus_demangle_print@@Base+0x3488>  // b.none
   436ec:	mov	w0, #0x1                   	// #1
   436f0:	str	w0, [sp, #72]
   436f4:	ldr	w0, [sp, #72]
   436f8:	cmp	w0, #0x0
   436fc:	b.eq	43720 <__asan_cplus_demangle_print@@Base+0x34b4>  // b.none
   43700:	ldr	x0, [sp, #40]
   43704:	bl	40064 <__asan_cplus_demangle_type@@Base+0x39d0>
   43708:	and	w0, w0, #0xff
   4370c:	cmp	w0, #0x20
   43710:	b.eq	43720 <__asan_cplus_demangle_print@@Base+0x34b4>  // b.none
   43714:	mov	w1, #0x20                  	// #32
   43718:	ldr	x0, [sp, #40]
   4371c:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   43720:	mov	w1, #0x28                  	// #40
   43724:	ldr	x0, [sp, #40]
   43728:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   4372c:	ldr	x0, [sp, #40]
   43730:	ldr	x0, [x0, #296]
   43734:	str	x0, [sp, #56]
   43738:	ldr	x0, [sp, #40]
   4373c:	str	xzr, [x0, #296]
   43740:	mov	w3, #0x0                   	// #0
   43744:	ldr	x2, [sp, #16]
   43748:	ldr	w1, [sp, #36]
   4374c:	ldr	x0, [sp, #40]
   43750:	bl	43020 <__asan_cplus_demangle_print@@Base+0x2db4>
   43754:	ldr	w0, [sp, #76]
   43758:	cmp	w0, #0x0
   4375c:	b.eq	4376c <__asan_cplus_demangle_print@@Base+0x3500>  // b.none
   43760:	mov	w1, #0x29                  	// #41
   43764:	ldr	x0, [sp, #40]
   43768:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   4376c:	mov	w1, #0x28                  	// #40
   43770:	ldr	x0, [sp, #40]
   43774:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   43778:	ldr	x0, [sp, #24]
   4377c:	ldr	x0, [x0, #16]
   43780:	cmp	x0, #0x0
   43784:	b.eq	437a0 <__asan_cplus_demangle_print@@Base+0x3534>  // b.none
   43788:	ldr	x0, [sp, #24]
   4378c:	ldr	x0, [x0, #16]
   43790:	mov	x2, x0
   43794:	ldr	w1, [sp, #36]
   43798:	ldr	x0, [sp, #40]
   4379c:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   437a0:	mov	w1, #0x29                  	// #41
   437a4:	ldr	x0, [sp, #40]
   437a8:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   437ac:	mov	w3, #0x1                   	// #1
   437b0:	ldr	x2, [sp, #16]
   437b4:	ldr	w1, [sp, #36]
   437b8:	ldr	x0, [sp, #40]
   437bc:	bl	43020 <__asan_cplus_demangle_print@@Base+0x2db4>
   437c0:	ldr	x0, [sp, #40]
   437c4:	ldr	x1, [sp, #56]
   437c8:	str	x1, [x0, #296]
   437cc:	nop
   437d0:	ldp	x29, x30, [sp], #80
   437d4:	ret
   437d8:	stp	x29, x30, [sp, #-64]!
   437dc:	mov	x29, sp
   437e0:	str	x0, [sp, #40]
   437e4:	str	w1, [sp, #36]
   437e8:	str	x2, [sp, #24]
   437ec:	str	x3, [sp, #16]
   437f0:	mov	w0, #0x1                   	// #1
   437f4:	str	w0, [sp, #60]
   437f8:	ldr	x0, [sp, #16]
   437fc:	cmp	x0, #0x0
   43800:	b.eq	438b4 <__asan_cplus_demangle_print@@Base+0x3648>  // b.none
   43804:	str	wzr, [sp, #56]
   43808:	ldr	x0, [sp, #16]
   4380c:	str	x0, [sp, #48]
   43810:	b	43860 <__asan_cplus_demangle_print@@Base+0x35f4>
   43814:	ldr	x0, [sp, #48]
   43818:	ldr	w0, [x0, #16]
   4381c:	cmp	w0, #0x0
   43820:	b.ne	43854 <__asan_cplus_demangle_print@@Base+0x35e8>  // b.any
   43824:	ldr	x0, [sp, #48]
   43828:	ldr	x0, [x0, #8]
   4382c:	ldr	w0, [x0]
   43830:	cmp	w0, #0x2a
   43834:	b.ne	43840 <__asan_cplus_demangle_print@@Base+0x35d4>  // b.any
   43838:	str	wzr, [sp, #60]
   4383c:	b	4386c <__asan_cplus_demangle_print@@Base+0x3600>
   43840:	mov	w0, #0x1                   	// #1
   43844:	str	w0, [sp, #56]
   43848:	mov	w0, #0x1                   	// #1
   4384c:	str	w0, [sp, #60]
   43850:	b	4386c <__asan_cplus_demangle_print@@Base+0x3600>
   43854:	ldr	x0, [sp, #48]
   43858:	ldr	x0, [x0]
   4385c:	str	x0, [sp, #48]
   43860:	ldr	x0, [sp, #48]
   43864:	cmp	x0, #0x0
   43868:	b.ne	43814 <__asan_cplus_demangle_print@@Base+0x35a8>  // b.any
   4386c:	ldr	w0, [sp, #56]
   43870:	cmp	w0, #0x0
   43874:	b.eq	43888 <__asan_cplus_demangle_print@@Base+0x361c>  // b.none
   43878:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   4387c:	add	x1, x0, #0x6f0
   43880:	ldr	x0, [sp, #40]
   43884:	bl	3ffec <__asan_cplus_demangle_type@@Base+0x3958>
   43888:	mov	w3, #0x0                   	// #0
   4388c:	ldr	x2, [sp, #16]
   43890:	ldr	w1, [sp, #36]
   43894:	ldr	x0, [sp, #40]
   43898:	bl	43020 <__asan_cplus_demangle_print@@Base+0x2db4>
   4389c:	ldr	w0, [sp, #56]
   438a0:	cmp	w0, #0x0
   438a4:	b.eq	438b4 <__asan_cplus_demangle_print@@Base+0x3648>  // b.none
   438a8:	mov	w1, #0x29                  	// #41
   438ac:	ldr	x0, [sp, #40]
   438b0:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   438b4:	ldr	w0, [sp, #60]
   438b8:	cmp	w0, #0x0
   438bc:	b.eq	438cc <__asan_cplus_demangle_print@@Base+0x3660>  // b.none
   438c0:	mov	w1, #0x20                  	// #32
   438c4:	ldr	x0, [sp, #40]
   438c8:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   438cc:	mov	w1, #0x5b                  	// #91
   438d0:	ldr	x0, [sp, #40]
   438d4:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   438d8:	ldr	x0, [sp, #24]
   438dc:	ldr	x0, [x0, #8]
   438e0:	cmp	x0, #0x0
   438e4:	b.eq	43900 <__asan_cplus_demangle_print@@Base+0x3694>  // b.none
   438e8:	ldr	x0, [sp, #24]
   438ec:	ldr	x0, [x0, #8]
   438f0:	mov	x2, x0
   438f4:	ldr	w1, [sp, #36]
   438f8:	ldr	x0, [sp, #40]
   438fc:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   43900:	mov	w1, #0x5d                  	// #93
   43904:	ldr	x0, [sp, #40]
   43908:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   4390c:	nop
   43910:	ldp	x29, x30, [sp], #64
   43914:	ret
   43918:	stp	x29, x30, [sp, #-48]!
   4391c:	mov	x29, sp
   43920:	str	x0, [sp, #40]
   43924:	str	w1, [sp, #36]
   43928:	str	x2, [sp, #24]
   4392c:	ldr	x0, [sp, #24]
   43930:	ldr	w0, [x0]
   43934:	cmp	w0, #0x32
   43938:	b.ne	43968 <__asan_cplus_demangle_print@@Base+0x36fc>  // b.any
   4393c:	ldr	x0, [sp, #24]
   43940:	ldr	x0, [x0, #8]
   43944:	ldr	x1, [x0, #8]
   43948:	ldr	x0, [sp, #24]
   4394c:	ldr	x0, [x0, #8]
   43950:	ldr	w0, [x0, #16]
   43954:	sxtw	x0, w0
   43958:	mov	x2, x0
   4395c:	ldr	x0, [sp, #40]
   43960:	bl	3ff88 <__asan_cplus_demangle_type@@Base+0x38f4>
   43964:	b	43978 <__asan_cplus_demangle_print@@Base+0x370c>
   43968:	ldr	x2, [sp, #24]
   4396c:	ldr	w1, [sp, #36]
   43970:	ldr	x0, [sp, #40]
   43974:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   43978:	nop
   4397c:	ldp	x29, x30, [sp], #48
   43980:	ret
   43984:	stp	x29, x30, [sp, #-48]!
   43988:	mov	x29, sp
   4398c:	str	x0, [sp, #40]
   43990:	str	w1, [sp, #36]
   43994:	str	x2, [sp, #24]
   43998:	ldr	x0, [sp, #24]
   4399c:	ldr	x0, [x0, #8]
   439a0:	mov	x2, x0
   439a4:	ldr	w1, [sp, #36]
   439a8:	ldr	x0, [sp, #40]
   439ac:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   439b0:	nop
   439b4:	ldp	x29, x30, [sp], #48
   439b8:	ret
   439bc:	stp	x29, x30, [sp, #-64]!
   439c0:	mov	x29, sp
   439c4:	str	x0, [sp, #40]
   439c8:	str	w1, [sp, #36]
   439cc:	str	x2, [sp, #24]
   439d0:	ldr	x0, [sp, #40]
   439d4:	ldr	x0, [x0, #368]
   439d8:	cmp	x0, #0x0
   439dc:	b.eq	43a04 <__asan_cplus_demangle_print@@Base+0x3798>  // b.none
   439e0:	ldr	x0, [sp, #40]
   439e4:	ldr	x0, [x0, #288]
   439e8:	str	x0, [sp, #48]
   439ec:	ldr	x0, [sp, #40]
   439f0:	add	x1, sp, #0x30
   439f4:	str	x1, [x0, #288]
   439f8:	ldr	x0, [sp, #40]
   439fc:	ldr	x0, [x0, #368]
   43a00:	str	x0, [sp, #56]
   43a04:	ldr	x0, [sp, #24]
   43a08:	ldr	x0, [x0, #8]
   43a0c:	ldr	w0, [x0]
   43a10:	cmp	w0, #0x4
   43a14:	b.eq	43a50 <__asan_cplus_demangle_print@@Base+0x37e4>  // b.none
   43a18:	ldr	x0, [sp, #24]
   43a1c:	ldr	x0, [x0, #8]
   43a20:	mov	x2, x0
   43a24:	ldr	w1, [sp, #36]
   43a28:	ldr	x0, [sp, #40]
   43a2c:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   43a30:	ldr	x0, [sp, #40]
   43a34:	ldr	x0, [x0, #368]
   43a38:	cmp	x0, #0x0
   43a3c:	b.eq	43afc <__asan_cplus_demangle_print@@Base+0x3890>  // b.none
   43a40:	ldr	x1, [sp, #48]
   43a44:	ldr	x0, [sp, #40]
   43a48:	str	x1, [x0, #288]
   43a4c:	b	43afc <__asan_cplus_demangle_print@@Base+0x3890>
   43a50:	ldr	x0, [sp, #24]
   43a54:	ldr	x0, [x0, #8]
   43a58:	ldr	x0, [x0, #8]
   43a5c:	mov	x2, x0
   43a60:	ldr	w1, [sp, #36]
   43a64:	ldr	x0, [sp, #40]
   43a68:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   43a6c:	ldr	x0, [sp, #40]
   43a70:	ldr	x0, [x0, #368]
   43a74:	cmp	x0, #0x0
   43a78:	b.eq	43a88 <__asan_cplus_demangle_print@@Base+0x381c>  // b.none
   43a7c:	ldr	x1, [sp, #48]
   43a80:	ldr	x0, [sp, #40]
   43a84:	str	x1, [x0, #288]
   43a88:	ldr	x0, [sp, #40]
   43a8c:	bl	40064 <__asan_cplus_demangle_type@@Base+0x39d0>
   43a90:	and	w0, w0, #0xff
   43a94:	cmp	w0, #0x3c
   43a98:	b.ne	43aa8 <__asan_cplus_demangle_print@@Base+0x383c>  // b.any
   43a9c:	mov	w1, #0x20                  	// #32
   43aa0:	ldr	x0, [sp, #40]
   43aa4:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   43aa8:	mov	w1, #0x3c                  	// #60
   43aac:	ldr	x0, [sp, #40]
   43ab0:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   43ab4:	ldr	x0, [sp, #24]
   43ab8:	ldr	x0, [x0, #8]
   43abc:	ldr	x0, [x0, #16]
   43ac0:	mov	x2, x0
   43ac4:	ldr	w1, [sp, #36]
   43ac8:	ldr	x0, [sp, #40]
   43acc:	bl	42d5c <__asan_cplus_demangle_print@@Base+0x2af0>
   43ad0:	ldr	x0, [sp, #40]
   43ad4:	bl	40064 <__asan_cplus_demangle_type@@Base+0x39d0>
   43ad8:	and	w0, w0, #0xff
   43adc:	cmp	w0, #0x3e
   43ae0:	b.ne	43af0 <__asan_cplus_demangle_print@@Base+0x3884>  // b.any
   43ae4:	mov	w1, #0x20                  	// #32
   43ae8:	ldr	x0, [sp, #40]
   43aec:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   43af0:	mov	w1, #0x3e                  	// #62
   43af4:	ldr	x0, [sp, #40]
   43af8:	bl	3ff28 <__asan_cplus_demangle_type@@Base+0x3894>
   43afc:	nop
   43b00:	ldp	x29, x30, [sp], #64
   43b04:	ret

0000000000043b08 <__asan_cplus_demangle_init_info@@Base>:
   43b08:	sub	sp, sp, #0x20
   43b0c:	str	x0, [sp, #24]
   43b10:	str	w1, [sp, #20]
   43b14:	str	x2, [sp, #8]
   43b18:	str	x3, [sp]
   43b1c:	ldr	x0, [sp]
   43b20:	ldr	x1, [sp, #24]
   43b24:	str	x1, [x0]
   43b28:	ldr	x1, [sp, #24]
   43b2c:	ldr	x0, [sp, #8]
   43b30:	add	x1, x1, x0
   43b34:	ldr	x0, [sp]
   43b38:	str	x1, [x0, #8]
   43b3c:	ldr	x0, [sp]
   43b40:	ldr	w1, [sp, #20]
   43b44:	str	w1, [x0, #16]
   43b48:	ldr	x0, [sp]
   43b4c:	ldr	x1, [sp, #24]
   43b50:	str	x1, [x0, #24]
   43b54:	ldr	x0, [sp, #8]
   43b58:	lsl	w0, w0, #1
   43b5c:	mov	w1, w0
   43b60:	ldr	x0, [sp]
   43b64:	str	w1, [x0, #44]
   43b68:	ldr	x0, [sp]
   43b6c:	str	wzr, [x0, #40]
   43b70:	ldr	x0, [sp, #8]
   43b74:	mov	w1, w0
   43b78:	ldr	x0, [sp]
   43b7c:	str	w1, [x0, #60]
   43b80:	ldr	x0, [sp]
   43b84:	str	wzr, [x0, #56]
   43b88:	ldr	x0, [sp]
   43b8c:	str	xzr, [x0, #64]
   43b90:	ldr	x0, [sp]
   43b94:	str	wzr, [x0, #72]
   43b98:	ldr	x0, [sp]
   43b9c:	str	wzr, [x0, #76]
   43ba0:	ldr	x0, [sp]
   43ba4:	str	wzr, [x0, #80]
   43ba8:	ldr	x0, [sp]
   43bac:	str	wzr, [x0, #84]
   43bb0:	nop
   43bb4:	add	sp, sp, #0x20
   43bb8:	ret
   43bbc:	stp	x29, x30, [sp, #-400]!
   43bc0:	mov	x29, sp
   43bc4:	stp	x19, x20, [sp, #16]
   43bc8:	stp	x21, x22, [sp, #32]
   43bcc:	stp	x23, x24, [sp, #48]
   43bd0:	stp	x25, x26, [sp, #64]
   43bd4:	stp	x27, x28, [sp, #80]
   43bd8:	str	x0, [x29, #248]
   43bdc:	str	w1, [x29, #244]
   43be0:	str	x2, [x29, #232]
   43be4:	str	x3, [x29, #224]
   43be8:	ldr	x0, [x29, #248]
   43bec:	ldrb	w0, [x0]
   43bf0:	cmp	w0, #0x5f
   43bf4:	b.ne	43c18 <__asan_cplus_demangle_init_info@@Base+0x110>  // b.any
   43bf8:	ldr	x0, [x29, #248]
   43bfc:	add	x0, x0, #0x1
   43c00:	ldrb	w0, [x0]
   43c04:	cmp	w0, #0x5a
   43c08:	b.ne	43c18 <__asan_cplus_demangle_init_info@@Base+0x110>  // b.any
   43c0c:	mov	w0, #0x1                   	// #1
   43c10:	str	w0, [x29, #388]
   43c14:	b	43cf0 <__asan_cplus_demangle_init_info@@Base+0x1e8>
   43c18:	mov	x2, #0x8                   	// #8
   43c1c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0xb970>
   43c20:	add	x1, x0, #0x680
   43c24:	ldr	x0, [x29, #248]
   43c28:	bl	6a70 <__asan_internal_strncmp@plt>
   43c2c:	cmp	w0, #0x0
   43c30:	b.ne	43cd4 <__asan_cplus_demangle_init_info@@Base+0x1cc>  // b.any
   43c34:	ldr	x0, [x29, #248]
   43c38:	add	x0, x0, #0x8
   43c3c:	ldrb	w0, [x0]
   43c40:	cmp	w0, #0x2e
   43c44:	b.eq	43c70 <__asan_cplus_demangle_init_info@@Base+0x168>  // b.none
   43c48:	ldr	x0, [x29, #248]
   43c4c:	add	x0, x0, #0x8
   43c50:	ldrb	w0, [x0]
   43c54:	cmp	w0, #0x5f
   43c58:	b.eq	43c70 <__asan_cplus_demangle_init_info@@Base+0x168>  // b.none
   43c5c:	ldr	x0, [x29, #248]
   43c60:	add	x0, x0, #0x8
   43c64:	ldrb	w0, [x0]
   43c68:	cmp	w0, #0x24
   43c6c:	b.ne	43cd4 <__asan_cplus_demangle_init_info@@Base+0x1cc>  // b.any
   43c70:	ldr	x0, [x29, #248]
   43c74:	add	x0, x0, #0x9
   43c78:	ldrb	w0, [x0]
   43c7c:	cmp	w0, #0x44
   43c80:	b.eq	43c98 <__asan_cplus_demangle_init_info@@Base+0x190>  // b.none
   43c84:	ldr	x0, [x29, #248]
   43c88:	add	x0, x0, #0x9
   43c8c:	ldrb	w0, [x0]
   43c90:	cmp	w0, #0x49
   43c94:	b.ne	43cd4 <__asan_cplus_demangle_init_info@@Base+0x1cc>  // b.any
   43c98:	ldr	x0, [x29, #248]
   43c9c:	add	x0, x0, #0xa
   43ca0:	ldrb	w0, [x0]
   43ca4:	cmp	w0, #0x5f
   43ca8:	b.ne	43cd4 <__asan_cplus_demangle_init_info@@Base+0x1cc>  // b.any
   43cac:	ldr	x0, [x29, #248]
   43cb0:	add	x0, x0, #0x9
   43cb4:	ldrb	w0, [x0]
   43cb8:	cmp	w0, #0x49
   43cbc:	b.ne	43cc8 <__asan_cplus_demangle_init_info@@Base+0x1c0>  // b.any
   43cc0:	mov	w0, #0x2                   	// #2
   43cc4:	b	43ccc <__asan_cplus_demangle_init_info@@Base+0x1c4>
   43cc8:	mov	w0, #0x3                   	// #3
   43ccc:	str	w0, [x29, #388]
   43cd0:	b	43cf0 <__asan_cplus_demangle_init_info@@Base+0x1e8>
   43cd4:	ldr	w0, [x29, #244]
   43cd8:	and	w0, w0, #0x10
   43cdc:	cmp	w0, #0x0
   43ce0:	b.ne	43cec <__asan_cplus_demangle_init_info@@Base+0x1e4>  // b.any
   43ce4:	mov	w0, #0x0                   	// #0
   43ce8:	b	4404c <__asan_cplus_demangle_init_info@@Base+0x544>
   43cec:	str	wzr, [x29, #388]
   43cf0:	ldr	x0, [x29, #248]
   43cf4:	bl	66e0 <__asan_internal_strlen@plt>
   43cf8:	mov	x1, x0
   43cfc:	add	x0, x29, #0x100
   43d00:	mov	x3, x0
   43d04:	mov	x2, x1
   43d08:	ldr	w1, [x29, #244]
   43d0c:	ldr	x0, [x29, #248]
   43d10:	bl	65c0 <__asan_cplus_demangle_init_info@plt>
   43d14:	ldr	w0, [x29, #244]
   43d18:	and	w0, w0, #0x40000
   43d1c:	cmp	w0, #0x0
   43d20:	b.ne	43d38 <__asan_cplus_demangle_init_info@@Base+0x230>  // b.any
   43d24:	ldr	w0, [x29, #300]
   43d28:	cmp	w0, #0x800
   43d2c:	b.ls	43d38 <__asan_cplus_demangle_init_info@@Base+0x230>  // b.plast
   43d30:	mov	w0, #0x0                   	// #0
   43d34:	b	4404c <__asan_cplus_demangle_init_info@@Base+0x544>
   43d38:	mov	x0, sp
   43d3c:	mov	x28, x0
   43d40:	ldr	w2, [x29, #300]
   43d44:	sxtw	x0, w2
   43d48:	sub	x0, x0, #0x1
   43d4c:	str	x0, [x29, #376]
   43d50:	sxtw	x0, w2
   43d54:	str	x0, [x29, #176]
   43d58:	str	xzr, [x29, #184]
   43d5c:	ldp	x4, x5, [x29, #176]
   43d60:	mov	x0, x4
   43d64:	mov	x1, x5
   43d68:	lsr	x3, x0, #63
   43d6c:	lsl	x27, x1, #1
   43d70:	orr	x27, x3, x27
   43d74:	lsl	x26, x0, #1
   43d78:	mov	x0, x26
   43d7c:	mov	x1, x27
   43d80:	mov	x3, x4
   43d84:	adds	x3, x0, x3
   43d88:	mov	x4, x5
   43d8c:	adc	x0, x1, x4
   43d90:	str	x3, [x29, #112]
   43d94:	str	x0, [x29, #120]
   43d98:	ldp	x4, x5, [x29, #112]
   43d9c:	mov	x0, x4
   43da0:	lsr	x0, x0, #58
   43da4:	mov	x1, x5
   43da8:	lsl	x25, x1, #6
   43dac:	orr	x25, x0, x25
   43db0:	mov	x0, x4
   43db4:	lsl	x24, x0, #6
   43db8:	sxtw	x1, w2
   43dbc:	mov	x0, x1
   43dc0:	lsl	x0, x0, #1
   43dc4:	add	x0, x0, x1
   43dc8:	lsl	x0, x0, #3
   43dcc:	sxtw	x0, w2
   43dd0:	str	x0, [x29, #160]
   43dd4:	str	xzr, [x29, #168]
   43dd8:	ldp	x4, x5, [x29, #160]
   43ddc:	mov	x0, x4
   43de0:	mov	x1, x5
   43de4:	lsr	x3, x0, #63
   43de8:	lsl	x23, x1, #1
   43dec:	orr	x23, x3, x23
   43df0:	lsl	x22, x0, #1
   43df4:	mov	x0, x22
   43df8:	mov	x1, x23
   43dfc:	mov	x3, x4
   43e00:	adds	x3, x0, x3
   43e04:	mov	x4, x5
   43e08:	adc	x0, x1, x4
   43e0c:	str	x3, [x29, #96]
   43e10:	str	x0, [x29, #104]
   43e14:	ldp	x4, x5, [x29, #96]
   43e18:	mov	x0, x4
   43e1c:	lsr	x0, x0, #58
   43e20:	mov	x1, x5
   43e24:	lsl	x21, x1, #6
   43e28:	orr	x21, x0, x21
   43e2c:	mov	x0, x4
   43e30:	lsl	x20, x0, #6
   43e34:	sxtw	x1, w2
   43e38:	mov	x0, x1
   43e3c:	lsl	x0, x0, #1
   43e40:	add	x0, x0, x1
   43e44:	lsl	x0, x0, #3
   43e48:	add	x0, x0, #0xf
   43e4c:	lsr	x0, x0, #4
   43e50:	lsl	x0, x0, #4
   43e54:	sub	sp, sp, x0
   43e58:	mov	x0, sp
   43e5c:	add	x0, x0, #0x7
   43e60:	lsr	x0, x0, #3
   43e64:	lsl	x0, x0, #3
   43e68:	str	x0, [x29, #368]
   43e6c:	ldr	w0, [x29, #316]
   43e70:	sxtw	x1, w0
   43e74:	sub	x1, x1, #0x1
   43e78:	str	x1, [x29, #360]
   43e7c:	sxtw	x1, w0
   43e80:	str	x1, [x29, #144]
   43e84:	str	xzr, [x29, #152]
   43e88:	ldp	x2, x3, [x29, #144]
   43e8c:	mov	x1, x2
   43e90:	lsr	x1, x1, #58
   43e94:	mov	x4, x3
   43e98:	lsl	x4, x4, #6
   43e9c:	str	x4, [x29, #216]
   43ea0:	ldr	x4, [x29, #216]
   43ea4:	orr	x1, x1, x4
   43ea8:	str	x1, [x29, #216]
   43eac:	mov	x1, x2
   43eb0:	lsl	x1, x1, #6
   43eb4:	str	x1, [x29, #208]
   43eb8:	sxtw	x1, w0
   43ebc:	str	x1, [x29, #128]
   43ec0:	str	xzr, [x29, #136]
   43ec4:	ldp	x2, x3, [x29, #128]
   43ec8:	mov	x1, x2
   43ecc:	lsr	x1, x1, #58
   43ed0:	mov	x4, x3
   43ed4:	lsl	x4, x4, #6
   43ed8:	str	x4, [x29, #200]
   43edc:	ldr	x4, [x29, #200]
   43ee0:	orr	x1, x1, x4
   43ee4:	str	x1, [x29, #200]
   43ee8:	mov	x1, x2
   43eec:	lsl	x1, x1, #6
   43ef0:	str	x1, [x29, #192]
   43ef4:	sxtw	x0, w0
   43ef8:	lsl	x0, x0, #3
   43efc:	add	x0, x0, #0xf
   43f00:	lsr	x0, x0, #4
   43f04:	lsl	x0, x0, #4
   43f08:	sub	sp, sp, x0
   43f0c:	mov	x0, sp
   43f10:	add	x0, x0, #0x7
   43f14:	lsr	x0, x0, #3
   43f18:	lsl	x0, x0, #3
   43f1c:	str	x0, [x29, #352]
   43f20:	ldr	x0, [x29, #368]
   43f24:	str	x0, [x29, #288]
   43f28:	ldr	x0, [x29, #352]
   43f2c:	str	x0, [x29, #304]
   43f30:	ldr	w0, [x29, #388]
   43f34:	cmp	w0, #0x3
   43f38:	b.hi	43ff0 <__asan_cplus_demangle_init_info@@Base+0x4e8>  // b.pmore
   43f3c:	ldr	w0, [x29, #388]
   43f40:	cmp	w0, #0x2
   43f44:	b.cs	43f88 <__asan_cplus_demangle_init_info@@Base+0x480>  // b.hs, b.nlast
   43f48:	ldr	w0, [x29, #388]
   43f4c:	cmp	w0, #0x0
   43f50:	b.eq	43f64 <__asan_cplus_demangle_init_info@@Base+0x45c>  // b.none
   43f54:	ldr	w0, [x29, #388]
   43f58:	cmp	w0, #0x1
   43f5c:	b.eq	43f74 <__asan_cplus_demangle_init_info@@Base+0x46c>  // b.none
   43f60:	b	43ff0 <__asan_cplus_demangle_init_info@@Base+0x4e8>
   43f64:	add	x0, x29, #0x100
   43f68:	bl	6650 <__asan_cplus_demangle_type@plt>
   43f6c:	str	x0, [x29, #392]
   43f70:	b	43ff4 <__asan_cplus_demangle_init_info@@Base+0x4ec>
   43f74:	add	x0, x29, #0x100
   43f78:	mov	w1, #0x1                   	// #1
   43f7c:	bl	6bb0 <__asan_cplus_demangle_mangled_name@plt>
   43f80:	str	x0, [x29, #392]
   43f84:	b	43ff4 <__asan_cplus_demangle_init_info@@Base+0x4ec>
   43f88:	ldr	x0, [x29, #280]
   43f8c:	add	x0, x0, #0xb
   43f90:	str	x0, [x29, #280]
   43f94:	ldr	w0, [x29, #388]
   43f98:	cmp	w0, #0x2
   43f9c:	b.ne	43fa8 <__asan_cplus_demangle_init_info@@Base+0x4a0>  // b.any
   43fa0:	mov	w19, #0x44                  	// #68
   43fa4:	b	43fac <__asan_cplus_demangle_init_info@@Base+0x4a4>
   43fa8:	mov	w19, #0x45                  	// #69
   43fac:	ldr	x1, [x29, #280]
   43fb0:	add	x0, x29, #0x100
   43fb4:	bl	3a378 <__asan_cplus_demangle_fill_dtor@@Base+0x1f0>
   43fb8:	mov	x1, x0
   43fbc:	add	x0, x29, #0x100
   43fc0:	mov	x3, #0x0                   	// #0
   43fc4:	mov	x2, x1
   43fc8:	mov	w1, w19
   43fcc:	bl	3a284 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   43fd0:	str	x0, [x29, #392]
   43fd4:	ldr	x0, [x29, #280]
   43fd8:	bl	66e0 <__asan_internal_strlen@plt>
   43fdc:	mov	x1, x0
   43fe0:	ldr	x0, [x29, #280]
   43fe4:	add	x0, x0, x1
   43fe8:	str	x0, [x29, #280]
   43fec:	b	43ff4 <__asan_cplus_demangle_init_info@@Base+0x4ec>
   43ff0:	bl	6ae0 <abort@plt>
   43ff4:	ldr	w0, [x29, #244]
   43ff8:	and	w0, w0, #0x1
   43ffc:	cmp	w0, #0x0
   44000:	b.eq	44018 <__asan_cplus_demangle_init_info@@Base+0x510>  // b.none
   44004:	ldr	x0, [x29, #280]
   44008:	ldrb	w0, [x0]
   4400c:	cmp	w0, #0x0
   44010:	b.eq	44018 <__asan_cplus_demangle_init_info@@Base+0x510>  // b.none
   44014:	str	xzr, [x29, #392]
   44018:	ldr	x0, [x29, #392]
   4401c:	cmp	x0, #0x0
   44020:	b.eq	4403c <__asan_cplus_demangle_init_info@@Base+0x534>  // b.none
   44024:	ldr	x3, [x29, #224]
   44028:	ldr	x2, [x29, #232]
   4402c:	ldr	x1, [x29, #392]
   44030:	ldr	w0, [x29, #244]
   44034:	bl	6900 <__asan_cplus_demangle_print_callback@plt>
   44038:	b	44040 <__asan_cplus_demangle_init_info@@Base+0x538>
   4403c:	mov	w0, #0x0                   	// #0
   44040:	str	w0, [x29, #348]
   44044:	mov	sp, x28
   44048:	ldr	w0, [x29, #348]
   4404c:	mov	sp, x29
   44050:	ldp	x19, x20, [sp, #16]
   44054:	ldp	x21, x22, [sp, #32]
   44058:	ldp	x23, x24, [sp, #48]
   4405c:	ldp	x25, x26, [sp, #64]
   44060:	ldp	x27, x28, [sp, #80]
   44064:	ldp	x29, x30, [sp], #400
   44068:	ret
   4406c:	stp	x29, x30, [sp, #-96]!
   44070:	mov	x29, sp
   44074:	str	x0, [sp, #40]
   44078:	str	w1, [sp, #36]
   4407c:	str	x2, [sp, #24]
   44080:	add	x0, sp, #0x38
   44084:	mov	x1, #0x0                   	// #0
   44088:	bl	3f9ac <__asan_cplus_demangle_type@@Base+0x3318>
   4408c:	add	x0, sp, #0x38
   44090:	mov	x3, x0
   44094:	adrp	x0, 3f000 <__asan_cplus_demangle_type@@Base+0x296c>
   44098:	add	x2, x0, #0xba4
   4409c:	ldr	w1, [sp, #36]
   440a0:	ldr	x0, [sp, #40]
   440a4:	bl	43bbc <__asan_cplus_demangle_init_info@@Base+0xb4>
   440a8:	str	w0, [sp, #92]
   440ac:	ldr	w0, [sp, #92]
   440b0:	cmp	w0, #0x0
   440b4:	b.ne	440d0 <__asan_cplus_demangle_init_info@@Base+0x5c8>  // b.any
   440b8:	ldr	x0, [sp, #56]
   440bc:	bl	6780 <free@plt>
   440c0:	ldr	x0, [sp, #24]
   440c4:	str	xzr, [x0]
   440c8:	mov	x0, #0x0                   	// #0
   440cc:	b	440f4 <__asan_cplus_demangle_init_info@@Base+0x5ec>
   440d0:	ldr	w0, [sp, #80]
   440d4:	cmp	w0, #0x0
   440d8:	b.ne	440e4 <__asan_cplus_demangle_init_info@@Base+0x5dc>  // b.any
   440dc:	ldr	x0, [sp, #72]
   440e0:	b	440e8 <__asan_cplus_demangle_init_info@@Base+0x5e0>
   440e4:	mov	x0, #0x1                   	// #1
   440e8:	ldr	x1, [sp, #24]
   440ec:	str	x0, [x1]
   440f0:	ldr	x0, [sp, #56]
   440f4:	ldp	x29, x30, [sp], #96
   440f8:	ret

00000000000440fc <__asan_cplus_demangle_v3@@Base>:
   440fc:	stp	x29, x30, [sp, #-48]!
   44100:	mov	x29, sp
   44104:	str	x0, [sp, #24]
   44108:	str	w1, [sp, #20]
   4410c:	add	x0, sp, #0x28
   44110:	mov	x2, x0
   44114:	ldr	w1, [sp, #20]
   44118:	ldr	x0, [sp, #24]
   4411c:	bl	4406c <__asan_cplus_demangle_init_info@@Base+0x564>
   44120:	ldp	x29, x30, [sp], #48
   44124:	ret

0000000000044128 <__asan_cplus_demangle_v3_callback@@Base>:
   44128:	stp	x29, x30, [sp, #-48]!
   4412c:	mov	x29, sp
   44130:	str	x0, [sp, #40]
   44134:	str	w1, [sp, #36]
   44138:	str	x2, [sp, #24]
   4413c:	str	x3, [sp, #16]
   44140:	ldr	x3, [sp, #16]
   44144:	ldr	x2, [sp, #24]
   44148:	ldr	w1, [sp, #36]
   4414c:	ldr	x0, [sp, #40]
   44150:	bl	43bbc <__asan_cplus_demangle_init_info@@Base+0xb4>
   44154:	ldp	x29, x30, [sp], #48
   44158:	ret

000000000004415c <__asan_java_demangle_v3@@Base>:
   4415c:	stp	x29, x30, [sp, #-48]!
   44160:	mov	x29, sp
   44164:	str	x0, [sp, #24]
   44168:	add	x0, sp, #0x28
   4416c:	mov	x2, x0
   44170:	mov	w1, #0x25                  	// #37
   44174:	ldr	x0, [sp, #24]
   44178:	bl	4406c <__asan_cplus_demangle_init_info@@Base+0x564>
   4417c:	ldp	x29, x30, [sp], #48
   44180:	ret

0000000000044184 <__asan_java_demangle_v3_callback@@Base>:
   44184:	stp	x29, x30, [sp, #-48]!
   44188:	mov	x29, sp
   4418c:	str	x0, [sp, #40]
   44190:	str	x1, [sp, #32]
   44194:	str	x2, [sp, #24]
   44198:	ldr	x3, [sp, #24]
   4419c:	ldr	x2, [sp, #32]
   441a0:	mov	w1, #0x25                  	// #37
   441a4:	ldr	x0, [sp, #40]
   441a8:	bl	43bbc <__asan_cplus_demangle_init_info@@Base+0xb4>
   441ac:	ldp	x29, x30, [sp], #48
   441b0:	ret
   441b4:	stp	x29, x30, [sp, #-400]!
   441b8:	mov	x29, sp
   441bc:	stp	x19, x20, [sp, #16]
   441c0:	stp	x21, x22, [sp, #32]
   441c4:	stp	x23, x24, [sp, #48]
   441c8:	stp	x25, x26, [sp, #64]
   441cc:	str	x27, [sp, #80]
   441d0:	str	x0, [x29, #248]
   441d4:	str	x1, [x29, #240]
   441d8:	str	x2, [x29, #232]
   441dc:	ldr	x0, [x29, #240]
   441e0:	str	wzr, [x0]
   441e4:	ldr	x0, [x29, #232]
   441e8:	str	wzr, [x0]
   441ec:	ldr	x0, [x29, #248]
   441f0:	bl	66e0 <__asan_internal_strlen@plt>
   441f4:	mov	x1, x0
   441f8:	add	x0, x29, #0x108
   441fc:	mov	x3, x0
   44200:	mov	x2, x1
   44204:	mov	w1, #0x4000                	// #16384
   44208:	ldr	x0, [x29, #248]
   4420c:	bl	65c0 <__asan_cplus_demangle_init_info@plt>
   44210:	mov	x0, sp
   44214:	mov	x19, x0
   44218:	ldr	w2, [x29, #308]
   4421c:	sxtw	x0, w2
   44220:	sub	x0, x0, #0x1
   44224:	str	x0, [x29, #376]
   44228:	sxtw	x0, w2
   4422c:	str	x0, [x29, #176]
   44230:	str	xzr, [x29, #184]
   44234:	ldp	x4, x5, [x29, #176]
   44238:	mov	x0, x4
   4423c:	mov	x1, x5
   44240:	lsr	x3, x0, #63
   44244:	lsl	x27, x1, #1
   44248:	orr	x27, x3, x27
   4424c:	lsl	x26, x0, #1
   44250:	mov	x0, x26
   44254:	mov	x1, x27
   44258:	mov	x3, x4
   4425c:	adds	x3, x0, x3
   44260:	mov	x4, x5
   44264:	adc	x0, x1, x4
   44268:	str	x3, [x29, #112]
   4426c:	str	x0, [x29, #120]
   44270:	ldp	x4, x5, [x29, #112]
   44274:	mov	x0, x4
   44278:	lsr	x0, x0, #58
   4427c:	mov	x1, x5
   44280:	lsl	x25, x1, #6
   44284:	orr	x25, x0, x25
   44288:	mov	x0, x4
   4428c:	lsl	x24, x0, #6
   44290:	sxtw	x1, w2
   44294:	mov	x0, x1
   44298:	lsl	x0, x0, #1
   4429c:	add	x0, x0, x1
   442a0:	lsl	x0, x0, #3
   442a4:	sxtw	x0, w2
   442a8:	str	x0, [x29, #160]
   442ac:	str	xzr, [x29, #168]
   442b0:	ldp	x4, x5, [x29, #160]
   442b4:	mov	x0, x4
   442b8:	mov	x1, x5
   442bc:	lsr	x3, x0, #63
   442c0:	lsl	x23, x1, #1
   442c4:	orr	x23, x3, x23
   442c8:	lsl	x22, x0, #1
   442cc:	mov	x0, x22
   442d0:	mov	x1, x23
   442d4:	mov	x3, x4
   442d8:	adds	x3, x0, x3
   442dc:	mov	x4, x5
   442e0:	adc	x0, x1, x4
   442e4:	str	x3, [x29, #96]
   442e8:	str	x0, [x29, #104]
   442ec:	ldp	x4, x5, [x29, #96]
   442f0:	mov	x0, x4
   442f4:	lsr	x0, x0, #58
   442f8:	mov	x1, x5
   442fc:	lsl	x21, x1, #6
   44300:	orr	x21, x0, x21
   44304:	mov	x0, x4
   44308:	lsl	x20, x0, #6
   4430c:	sxtw	x1, w2
   44310:	mov	x0, x1
   44314:	lsl	x0, x0, #1
   44318:	add	x0, x0, x1
   4431c:	lsl	x0, x0, #3
   44320:	add	x0, x0, #0xf
   44324:	lsr	x0, x0, #4
   44328:	lsl	x0, x0, #4
   4432c:	sub	sp, sp, x0
   44330:	mov	x0, sp
   44334:	add	x0, x0, #0x7
   44338:	lsr	x0, x0, #3
   4433c:	lsl	x0, x0, #3
   44340:	str	x0, [x29, #368]
   44344:	ldr	w0, [x29, #324]
   44348:	sxtw	x1, w0
   4434c:	sub	x1, x1, #0x1
   44350:	str	x1, [x29, #360]
   44354:	sxtw	x1, w0
   44358:	str	x1, [x29, #144]
   4435c:	str	xzr, [x29, #152]
   44360:	ldp	x2, x3, [x29, #144]
   44364:	mov	x1, x2
   44368:	lsr	x1, x1, #58
   4436c:	mov	x4, x3
   44370:	lsl	x4, x4, #6
   44374:	str	x4, [x29, #216]
   44378:	ldr	x4, [x29, #216]
   4437c:	orr	x1, x1, x4
   44380:	str	x1, [x29, #216]
   44384:	mov	x1, x2
   44388:	lsl	x1, x1, #6
   4438c:	str	x1, [x29, #208]
   44390:	sxtw	x1, w0
   44394:	str	x1, [x29, #128]
   44398:	str	xzr, [x29, #136]
   4439c:	ldp	x2, x3, [x29, #128]
   443a0:	mov	x1, x2
   443a4:	lsr	x1, x1, #58
   443a8:	mov	x4, x3
   443ac:	lsl	x4, x4, #6
   443b0:	str	x4, [x29, #200]
   443b4:	ldr	x4, [x29, #200]
   443b8:	orr	x1, x1, x4
   443bc:	str	x1, [x29, #200]
   443c0:	mov	x1, x2
   443c4:	lsl	x1, x1, #6
   443c8:	str	x1, [x29, #192]
   443cc:	sxtw	x0, w0
   443d0:	lsl	x0, x0, #3
   443d4:	add	x0, x0, #0xf
   443d8:	lsr	x0, x0, #4
   443dc:	lsl	x0, x0, #4
   443e0:	sub	sp, sp, x0
   443e4:	mov	x0, sp
   443e8:	add	x0, x0, #0x7
   443ec:	lsr	x0, x0, #3
   443f0:	lsl	x0, x0, #3
   443f4:	str	x0, [x29, #352]
   443f8:	ldr	x0, [x29, #368]
   443fc:	str	x0, [x29, #296]
   44400:	ldr	x0, [x29, #352]
   44404:	str	x0, [x29, #312]
   44408:	add	x0, x29, #0x108
   4440c:	mov	w1, #0x1                   	// #1
   44410:	bl	6bb0 <__asan_cplus_demangle_mangled_name@plt>
   44414:	str	x0, [x29, #384]
   44418:	str	wzr, [x29, #396]
   4441c:	b	444d0 <__asan_java_demangle_v3_callback@@Base+0x34c>
   44420:	ldr	x0, [x29, #384]
   44424:	ldr	w0, [x0]
   44428:	cmp	w0, #0x8
   4442c:	b.eq	444b0 <__asan_java_demangle_v3_callback@@Base+0x32c>  // b.none
   44430:	cmp	w0, #0x8
   44434:	b.hi	44468 <__asan_java_demangle_v3_callback@@Base+0x2e4>  // b.pmore
   44438:	cmp	w0, #0x7
   4443c:	b.eq	44490 <__asan_java_demangle_v3_callback@@Base+0x30c>  // b.none
   44440:	cmp	w0, #0x7
   44444:	b.hi	44468 <__asan_java_demangle_v3_callback@@Base+0x2e4>  // b.pmore
   44448:	cmp	w0, #0x2
   4444c:	b.hi	4445c <__asan_java_demangle_v3_callback@@Base+0x2d8>  // b.pmore
   44450:	cmp	w0, #0x0
   44454:	b.ne	44480 <__asan_java_demangle_v3_callback@@Base+0x2fc>  // b.any
   44458:	b	44468 <__asan_java_demangle_v3_callback@@Base+0x2e4>
   4445c:	sub	w0, w0, #0x3
   44460:	cmp	w0, #0x1
   44464:	b.ls	44470 <__asan_java_demangle_v3_callback@@Base+0x2ec>  // b.plast
   44468:	str	xzr, [x29, #384]
   4446c:	b	444d0 <__asan_java_demangle_v3_callback@@Base+0x34c>
   44470:	ldr	x0, [x29, #384]
   44474:	ldr	x0, [x0, #8]
   44478:	str	x0, [x29, #384]
   4447c:	b	444d0 <__asan_java_demangle_v3_callback@@Base+0x34c>
   44480:	ldr	x0, [x29, #384]
   44484:	ldr	x0, [x0, #16]
   44488:	str	x0, [x29, #384]
   4448c:	b	444d0 <__asan_java_demangle_v3_callback@@Base+0x34c>
   44490:	ldr	x0, [x29, #384]
   44494:	ldr	w1, [x0, #8]
   44498:	ldr	x0, [x29, #240]
   4449c:	str	w1, [x0]
   444a0:	mov	w0, #0x1                   	// #1
   444a4:	str	w0, [x29, #396]
   444a8:	str	xzr, [x29, #384]
   444ac:	b	444d0 <__asan_java_demangle_v3_callback@@Base+0x34c>
   444b0:	ldr	x0, [x29, #384]
   444b4:	ldr	w1, [x0, #8]
   444b8:	ldr	x0, [x29, #232]
   444bc:	str	w1, [x0]
   444c0:	mov	w0, #0x1                   	// #1
   444c4:	str	w0, [x29, #396]
   444c8:	str	xzr, [x29, #384]
   444cc:	nop
   444d0:	ldr	x0, [x29, #384]
   444d4:	cmp	x0, #0x0
   444d8:	b.ne	44420 <__asan_java_demangle_v3_callback@@Base+0x29c>  // b.any
   444dc:	mov	sp, x19
   444e0:	ldr	w0, [x29, #396]
   444e4:	mov	sp, x29
   444e8:	ldp	x19, x20, [sp, #16]
   444ec:	ldp	x21, x22, [sp, #32]
   444f0:	ldp	x23, x24, [sp, #48]
   444f4:	ldp	x25, x26, [sp, #64]
   444f8:	ldr	x27, [sp, #80]
   444fc:	ldp	x29, x30, [sp], #400
   44500:	ret

0000000000044504 <__asan_is_gnu_v3_mangled_ctor@@Base>:
   44504:	stp	x29, x30, [sp, #-48]!
   44508:	mov	x29, sp
   4450c:	str	x0, [sp, #24]
   44510:	add	x1, sp, #0x28
   44514:	add	x0, sp, #0x2c
   44518:	mov	x2, x1
   4451c:	mov	x1, x0
   44520:	ldr	x0, [sp, #24]
   44524:	bl	441b4 <__asan_java_demangle_v3_callback@@Base+0x30>
   44528:	cmp	w0, #0x0
   4452c:	b.ne	44538 <__asan_is_gnu_v3_mangled_ctor@@Base+0x34>  // b.any
   44530:	mov	w0, #0x0                   	// #0
   44534:	b	4453c <__asan_is_gnu_v3_mangled_ctor@@Base+0x38>
   44538:	ldr	w0, [sp, #44]
   4453c:	ldp	x29, x30, [sp], #48
   44540:	ret

0000000000044544 <__asan_is_gnu_v3_mangled_dtor@@Base>:
   44544:	stp	x29, x30, [sp, #-48]!
   44548:	mov	x29, sp
   4454c:	str	x0, [sp, #24]
   44550:	add	x1, sp, #0x28
   44554:	add	x0, sp, #0x2c
   44558:	mov	x2, x1
   4455c:	mov	x1, x0
   44560:	ldr	x0, [sp, #24]
   44564:	bl	441b4 <__asan_java_demangle_v3_callback@@Base+0x30>
   44568:	cmp	w0, #0x0
   4456c:	b.ne	44578 <__asan_is_gnu_v3_mangled_dtor@@Base+0x34>  // b.any
   44570:	mov	w0, #0x0                   	// #0
   44574:	b	4457c <__asan_is_gnu_v3_mangled_dtor@@Base+0x38>
   44578:	ldr	w0, [sp, #40]
   4457c:	ldp	x29, x30, [sp], #48
   44580:	ret

0000000000044584 <__asan_internal_memcpy@@Base>:
   44584:	stp	x29, x30, [sp, #-48]!
   44588:	mov	x29, sp
   4458c:	str	x0, [sp, #40]
   44590:	str	x1, [sp, #32]
   44594:	str	x2, [sp, #24]
   44598:	ldr	x2, [sp, #24]
   4459c:	ldr	x1, [sp, #32]
   445a0:	ldr	x0, [sp, #40]
   445a4:	bl	1c71c <__sanitizer_set_report_fd@@Base+0x2570>
   445a8:	ldp	x29, x30, [sp], #48
   445ac:	ret

00000000000445b0 <__asan_internal_memset@@Base>:
   445b0:	stp	x29, x30, [sp, #-48]!
   445b4:	mov	x29, sp
   445b8:	str	x0, [sp, #40]
   445bc:	str	w1, [sp, #36]
   445c0:	str	x2, [sp, #24]
   445c4:	ldr	x2, [sp, #24]
   445c8:	ldr	w1, [sp, #36]
   445cc:	ldr	x0, [sp, #40]
   445d0:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x2718>
   445d4:	ldp	x29, x30, [sp], #48
   445d8:	ret

00000000000445dc <__asan_internal_memcmp@@Base>:
   445dc:	stp	x29, x30, [sp, #-48]!
   445e0:	mov	x29, sp
   445e4:	str	x0, [sp, #40]
   445e8:	str	x1, [sp, #32]
   445ec:	str	x2, [sp, #24]
   445f0:	ldr	x2, [sp, #24]
   445f4:	ldr	x1, [sp, #32]
   445f8:	ldr	x0, [sp, #40]
   445fc:	bl	1c674 <__sanitizer_set_report_fd@@Base+0x24c8>
   44600:	ldp	x29, x30, [sp], #48
   44604:	ret

0000000000044608 <__asan_internal_strcmp@@Base>:
   44608:	stp	x29, x30, [sp, #-32]!
   4460c:	mov	x29, sp
   44610:	str	x0, [sp, #24]
   44614:	str	x1, [sp, #16]
   44618:	ldr	x1, [sp, #16]
   4461c:	ldr	x0, [sp, #24]
   44620:	bl	1cac0 <__sanitizer_set_report_fd@@Base+0x2914>
   44624:	ldp	x29, x30, [sp], #32
   44628:	ret

000000000004462c <__asan_internal_strncmp@@Base>:
   4462c:	stp	x29, x30, [sp, #-48]!
   44630:	mov	x29, sp
   44634:	str	x0, [sp, #40]
   44638:	str	x1, [sp, #32]
   4463c:	str	x2, [sp, #24]
   44640:	ldr	x2, [sp, #24]
   44644:	ldr	x1, [sp, #32]
   44648:	ldr	x0, [sp, #40]
   4464c:	bl	1cb4c <__sanitizer_set_report_fd@@Base+0x29a0>
   44650:	ldp	x29, x30, [sp], #48
   44654:	ret

0000000000044658 <__asan_internal_strlen@@Base>:
   44658:	stp	x29, x30, [sp, #-32]!
   4465c:	mov	x29, sp
   44660:	str	x0, [sp, #24]
   44664:	ldr	x0, [sp, #24]
   44668:	bl	1cd1c <__sanitizer_set_report_fd@@Base+0x2b70>
   4466c:	ldp	x29, x30, [sp], #32
   44670:	ret

0000000000044674 <__asan_internal_strnlen@@Base>:
   44674:	stp	x29, x30, [sp, #-32]!
   44678:	mov	x29, sp
   4467c:	str	x0, [sp, #24]
   44680:	str	x1, [sp, #16]
   44684:	ldr	x1, [sp, #16]
   44688:	ldr	x0, [sp, #24]
   4468c:	bl	1d00c <__sanitizer_set_report_fd@@Base+0x2e60>
   44690:	ldp	x29, x30, [sp], #32
   44694:	ret
   44698:	sub	sp, sp, #0x30
   4469c:	str	w0, [sp, #28]
   446a0:	str	x1, [sp, #16]
   446a4:	str	x2, [sp, #8]
   446a8:	ldr	w0, [sp, #28]
   446ac:	mvn	w0, w0
   446b0:	str	w0, [sp, #28]
   446b4:	ldr	x1, [sp, #16]
   446b8:	ldr	x0, [sp, #8]
   446bc:	add	x0, x1, x0
   446c0:	str	x0, [sp, #40]
   446c4:	b	4470c <__asan_internal_strnlen@@Base+0x98>
   446c8:	ldr	x0, [sp, #16]
   446cc:	ldrb	w0, [x0]
   446d0:	mov	w1, w0
   446d4:	ldr	w0, [sp, #28]
   446d8:	eor	w0, w1, w0
   446dc:	and	w1, w0, #0xff
   446e0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   446e4:	add	x0, x0, #0xf38
   446e8:	mov	w1, w1
   446ec:	ldr	w1, [x0, x1, lsl #2]
   446f0:	ldr	w0, [sp, #28]
   446f4:	lsr	w0, w0, #8
   446f8:	eor	w0, w1, w0
   446fc:	str	w0, [sp, #28]
   44700:	ldr	x0, [sp, #16]
   44704:	add	x0, x0, #0x1
   44708:	str	x0, [sp, #16]
   4470c:	ldr	x1, [sp, #16]
   44710:	ldr	x0, [sp, #40]
   44714:	cmp	x1, x0
   44718:	b.cc	446c8 <__asan_internal_strnlen@@Base+0x54>  // b.lo, b.ul, b.last
   4471c:	ldr	w0, [sp, #28]
   44720:	mvn	w0, w0
   44724:	add	sp, sp, #0x30
   44728:	ret
   4472c:	stp	x29, x30, [sp, #-208]!
   44730:	mov	x29, sp
   44734:	str	x0, [sp, #40]
   44738:	str	w1, [sp, #36]
   4473c:	str	x2, [sp, #24]
   44740:	str	x3, [sp, #16]
   44744:	add	x0, sp, #0x48
   44748:	mov	x1, x0
   4474c:	ldr	w0, [sp, #36]
   44750:	bl	4a750 <__asan_backtrace_vector_release@@Base+0xc0>
   44754:	cmp	w0, #0x0
   44758:	b.ge	44784 <__asan_internal_strnlen@@Base+0x110>  // b.tcont
   4475c:	bl	69d0 <__errno_location@plt>
   44760:	ldr	w0, [x0]
   44764:	ldr	x3, [sp, #24]
   44768:	mov	w2, w0
   4476c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   44770:	add	x1, x0, #0x850
   44774:	ldr	x0, [sp, #16]
   44778:	blr	x3
   4477c:	mov	w0, #0x0                   	// #0
   44780:	b	447f8 <__asan_internal_strnlen@@Base+0x184>
   44784:	ldr	x0, [sp, #120]
   44788:	mov	x1, x0
   4478c:	add	x0, sp, #0x30
   44790:	mov	x6, x0
   44794:	ldr	x5, [sp, #16]
   44798:	ldr	x4, [sp, #24]
   4479c:	mov	x3, x1
   447a0:	mov	x2, #0x0                   	// #0
   447a4:	ldr	w1, [sp, #36]
   447a8:	ldr	x0, [sp, #40]
   447ac:	bl	69f0 <__asan_backtrace_get_view@plt>
   447b0:	cmp	w0, #0x0
   447b4:	b.ne	447c0 <__asan_internal_strnlen@@Base+0x14c>  // b.any
   447b8:	mov	w0, #0x0                   	// #0
   447bc:	b	447f8 <__asan_internal_strnlen@@Base+0x184>
   447c0:	ldr	x0, [sp, #48]
   447c4:	ldr	x1, [sp, #120]
   447c8:	mov	x2, x1
   447cc:	mov	x1, x0
   447d0:	mov	w0, #0x0                   	// #0
   447d4:	bl	44698 <__asan_internal_strnlen@@Base+0x24>
   447d8:	str	w0, [sp, #204]
   447dc:	add	x0, sp, #0x30
   447e0:	ldr	x3, [sp, #16]
   447e4:	ldr	x2, [sp, #24]
   447e8:	mov	x1, x0
   447ec:	ldr	x0, [sp, #40]
   447f0:	bl	6660 <__asan_backtrace_release_view@plt>
   447f4:	ldr	w0, [sp, #204]
   447f8:	ldp	x29, x30, [sp], #208
   447fc:	ret
   44800:	stp	x29, x30, [sp, #-64]!
   44804:	mov	x29, sp
   44808:	str	x0, [sp, #56]
   4480c:	str	x1, [sp, #48]
   44810:	str	x2, [sp, #40]
   44814:	str	x3, [sp, #32]
   44818:	str	x4, [sp, #24]
   4481c:	ldr	x3, [sp, #32]
   44820:	mov	w2, #0xffffffff            	// #-1
   44824:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   44828:	add	x1, x0, #0x858
   4482c:	ldr	x0, [sp, #24]
   44830:	blr	x3
   44834:	mov	w0, #0x0                   	// #0
   44838:	ldp	x29, x30, [sp], #64
   4483c:	ret
   44840:	stp	x29, x30, [sp, #-64]!
   44844:	mov	x29, sp
   44848:	str	x0, [sp, #56]
   4484c:	str	x1, [sp, #48]
   44850:	str	x2, [sp, #40]
   44854:	str	x3, [sp, #32]
   44858:	str	x4, [sp, #24]
   4485c:	ldr	x3, [sp, #32]
   44860:	mov	w2, #0xffffffff            	// #-1
   44864:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   44868:	add	x1, x0, #0x878
   4486c:	ldr	x0, [sp, #24]
   44870:	blr	x3
   44874:	nop
   44878:	ldp	x29, x30, [sp], #64
   4487c:	ret
   44880:	sub	sp, sp, #0x20
   44884:	str	x0, [sp, #8]
   44888:	str	x1, [sp]
   4488c:	ldr	x0, [sp, #8]
   44890:	str	x0, [sp, #24]
   44894:	ldr	x0, [sp]
   44898:	str	x0, [sp, #16]
   4489c:	ldr	x0, [sp, #24]
   448a0:	ldr	x1, [x0, #8]
   448a4:	ldr	x0, [sp, #16]
   448a8:	ldr	x0, [x0, #8]
   448ac:	cmp	x1, x0
   448b0:	b.cs	448bc <__asan_internal_strnlen@@Base+0x248>  // b.hs, b.nlast
   448b4:	mov	w0, #0xffffffff            	// #-1
   448b8:	b	448e0 <__asan_internal_strnlen@@Base+0x26c>
   448bc:	ldr	x0, [sp, #24]
   448c0:	ldr	x1, [x0, #8]
   448c4:	ldr	x0, [sp, #16]
   448c8:	ldr	x0, [x0, #8]
   448cc:	cmp	x1, x0
   448d0:	b.ls	448dc <__asan_internal_strnlen@@Base+0x268>  // b.plast
   448d4:	mov	w0, #0x1                   	// #1
   448d8:	b	448e0 <__asan_internal_strnlen@@Base+0x26c>
   448dc:	mov	w0, #0x0                   	// #0
   448e0:	add	sp, sp, #0x20
   448e4:	ret
   448e8:	sub	sp, sp, #0x30
   448ec:	str	x0, [sp, #8]
   448f0:	str	x1, [sp]
   448f4:	ldr	x0, [sp, #8]
   448f8:	str	x0, [sp, #40]
   448fc:	ldr	x0, [sp]
   44900:	str	x0, [sp, #32]
   44904:	ldr	x0, [sp, #40]
   44908:	ldr	x0, [x0]
   4490c:	str	x0, [sp, #24]
   44910:	ldr	x0, [sp, #32]
   44914:	ldr	x0, [x0, #8]
   44918:	ldr	x1, [sp, #24]
   4491c:	cmp	x1, x0
   44920:	b.cs	4492c <__asan_internal_strnlen@@Base+0x2b8>  // b.hs, b.nlast
   44924:	mov	w0, #0xffffffff            	// #-1
   44928:	b	44958 <__asan_internal_strnlen@@Base+0x2e4>
   4492c:	ldr	x0, [sp, #32]
   44930:	ldr	x1, [x0, #8]
   44934:	ldr	x0, [sp, #32]
   44938:	ldr	x0, [x0, #16]
   4493c:	add	x0, x1, x0
   44940:	ldr	x1, [sp, #24]
   44944:	cmp	x1, x0
   44948:	b.cc	44954 <__asan_internal_strnlen@@Base+0x2e0>  // b.lo, b.ul, b.last
   4494c:	mov	w0, #0x1                   	// #1
   44950:	b	44958 <__asan_internal_strnlen@@Base+0x2e4>
   44954:	mov	w0, #0x0                   	// #0
   44958:	add	sp, sp, #0x30
   4495c:	ret
   44960:	stp	x29, x30, [sp, #-144]!
   44964:	mov	x29, sp
   44968:	str	x0, [sp, #72]
   4496c:	str	x1, [sp, #64]
   44970:	str	x2, [sp, #56]
   44974:	str	x3, [sp, #48]
   44978:	str	x4, [sp, #40]
   4497c:	str	x5, [sp, #32]
   44980:	str	x6, [sp, #24]
   44984:	str	x7, [sp, #16]
   44988:	ldr	x1, [sp, #48]
   4498c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   44990:	movk	x0, #0xaaab
   44994:	umulh	x0, x1, x0
   44998:	lsr	x0, x0, #4
   4499c:	str	x0, [sp, #104]
   449a0:	ldr	x0, [sp, #56]
   449a4:	str	x0, [sp, #136]
   449a8:	str	xzr, [sp, #128]
   449ac:	str	xzr, [sp, #120]
   449b0:	b	44a10 <__asan_internal_strnlen@@Base+0x39c>
   449b4:	ldr	x0, [sp, #136]
   449b8:	ldrb	w0, [x0, #4]
   449bc:	and	w0, w0, #0xf
   449c0:	str	w0, [sp, #80]
   449c4:	ldr	w0, [sp, #80]
   449c8:	cmp	w0, #0x2
   449cc:	b.eq	449dc <__asan_internal_strnlen@@Base+0x368>  // b.none
   449d0:	ldr	w0, [sp, #80]
   449d4:	cmp	w0, #0x1
   449d8:	b.ne	449f8 <__asan_internal_strnlen@@Base+0x384>  // b.any
   449dc:	ldr	x0, [sp, #136]
   449e0:	ldrh	w0, [x0, #6]
   449e4:	cmp	w0, #0x0
   449e8:	b.eq	449f8 <__asan_internal_strnlen@@Base+0x384>  // b.none
   449ec:	ldr	x0, [sp, #128]
   449f0:	add	x0, x0, #0x1
   449f4:	str	x0, [sp, #128]
   449f8:	ldr	x0, [sp, #120]
   449fc:	add	x0, x0, #0x1
   44a00:	str	x0, [sp, #120]
   44a04:	ldr	x0, [sp, #136]
   44a08:	add	x0, x0, #0x18
   44a0c:	str	x0, [sp, #136]
   44a10:	ldr	x1, [sp, #120]
   44a14:	ldr	x0, [sp, #104]
   44a18:	cmp	x1, x0
   44a1c:	b.cc	449b4 <__asan_internal_strnlen@@Base+0x340>  // b.lo, b.ul, b.last
   44a20:	ldr	x1, [sp, #128]
   44a24:	mov	x0, x1
   44a28:	lsl	x0, x0, #1
   44a2c:	add	x0, x0, x1
   44a30:	lsl	x0, x0, #3
   44a34:	str	x0, [sp, #96]
   44a38:	ldr	x3, [sp, #16]
   44a3c:	ldr	x2, [sp, #24]
   44a40:	ldr	x1, [sp, #96]
   44a44:	ldr	x0, [sp, #72]
   44a48:	bl	67f0 <__asan_backtrace_alloc@plt>
   44a4c:	str	x0, [sp, #88]
   44a50:	ldr	x0, [sp, #88]
   44a54:	cmp	x0, #0x0
   44a58:	b.ne	44a64 <__asan_internal_strnlen@@Base+0x3f0>  // b.any
   44a5c:	mov	w0, #0x0                   	// #0
   44a60:	b	44cf4 <__asan_internal_strnlen@@Base+0x680>
   44a64:	ldr	x0, [sp, #56]
   44a68:	str	x0, [sp, #136]
   44a6c:	str	wzr, [sp, #116]
   44a70:	str	xzr, [sp, #120]
   44a74:	b	44ca8 <__asan_internal_strnlen@@Base+0x634>
   44a78:	ldr	x0, [sp, #136]
   44a7c:	ldrb	w0, [x0, #4]
   44a80:	and	w0, w0, #0xf
   44a84:	str	w0, [sp, #84]
   44a88:	ldr	w0, [sp, #84]
   44a8c:	cmp	w0, #0x2
   44a90:	b.eq	44aa0 <__asan_internal_strnlen@@Base+0x42c>  // b.none
   44a94:	ldr	w0, [sp, #84]
   44a98:	cmp	w0, #0x1
   44a9c:	b.ne	44c84 <__asan_internal_strnlen@@Base+0x610>  // b.any
   44aa0:	ldr	x0, [sp, #136]
   44aa4:	ldrh	w0, [x0, #6]
   44aa8:	cmp	w0, #0x0
   44aac:	b.eq	44c8c <__asan_internal_strnlen@@Base+0x618>  // b.none
   44ab0:	ldr	x0, [sp, #136]
   44ab4:	ldr	w0, [x0]
   44ab8:	mov	w0, w0
   44abc:	ldr	x1, [sp, #32]
   44ac0:	cmp	x1, x0
   44ac4:	b.hi	44b00 <__asan_internal_strnlen@@Base+0x48c>  // b.pmore
   44ac8:	ldr	x3, [sp, #24]
   44acc:	mov	w2, #0x0                   	// #0
   44ad0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   44ad4:	add	x1, x0, #0x8a0
   44ad8:	ldr	x0, [sp, #16]
   44adc:	blr	x3
   44ae0:	ldr	x4, [sp, #16]
   44ae4:	ldr	x3, [sp, #24]
   44ae8:	ldr	x2, [sp, #96]
   44aec:	ldr	x1, [sp, #88]
   44af0:	ldr	x0, [sp, #72]
   44af4:	bl	6ac0 <__asan_backtrace_free@plt>
   44af8:	mov	w0, #0x0                   	// #0
   44afc:	b	44cf4 <__asan_internal_strnlen@@Base+0x680>
   44b00:	ldr	x0, [sp, #136]
   44b04:	ldr	w0, [x0]
   44b08:	mov	w2, w0
   44b0c:	ldr	w1, [sp, #116]
   44b10:	mov	x0, x1
   44b14:	lsl	x0, x0, #1
   44b18:	add	x0, x0, x1
   44b1c:	lsl	x0, x0, #3
   44b20:	mov	x1, x0
   44b24:	ldr	x0, [sp, #88]
   44b28:	add	x0, x0, x1
   44b2c:	ldr	x1, [sp, #40]
   44b30:	add	x1, x1, x2
   44b34:	str	x1, [x0]
   44b38:	ldr	x0, [sp, #152]
   44b3c:	cmp	x0, #0x0
   44b40:	b.eq	44bcc <__asan_internal_strnlen@@Base+0x558>  // b.none
   44b44:	ldr	x0, [sp, #136]
   44b48:	ldr	x1, [x0, #8]
   44b4c:	ldr	x0, [sp, #152]
   44b50:	ldr	x0, [x0]
   44b54:	cmp	x1, x0
   44b58:	b.cc	44bcc <__asan_internal_strnlen@@Base+0x558>  // b.lo, b.ul, b.last
   44b5c:	ldr	x0, [sp, #136]
   44b60:	ldr	x1, [x0, #8]
   44b64:	ldr	x0, [sp, #152]
   44b68:	ldr	x2, [x0]
   44b6c:	ldr	x0, [sp, #152]
   44b70:	ldr	x0, [x0, #16]
   44b74:	add	x0, x2, x0
   44b78:	cmp	x1, x0
   44b7c:	b.cs	44bcc <__asan_internal_strnlen@@Base+0x558>  // b.hs, b.nlast
   44b80:	ldr	x0, [sp, #152]
   44b84:	ldr	x1, [x0, #8]
   44b88:	ldr	x0, [sp, #136]
   44b8c:	ldr	x2, [x0, #8]
   44b90:	ldr	x0, [sp, #152]
   44b94:	ldr	x0, [x0]
   44b98:	sub	x0, x2, x0
   44b9c:	add	x2, x1, x0
   44ba0:	ldr	w1, [sp, #116]
   44ba4:	mov	x0, x1
   44ba8:	lsl	x0, x0, #1
   44bac:	add	x0, x0, x1
   44bb0:	lsl	x0, x0, #3
   44bb4:	mov	x1, x0
   44bb8:	ldr	x0, [sp, #88]
   44bbc:	add	x0, x0, x1
   44bc0:	ldr	x1, [x2]
   44bc4:	str	x1, [x0, #8]
   44bc8:	b	44bf8 <__asan_internal_strnlen@@Base+0x584>
   44bcc:	ldr	w1, [sp, #116]
   44bd0:	mov	x0, x1
   44bd4:	lsl	x0, x0, #1
   44bd8:	add	x0, x0, x1
   44bdc:	lsl	x0, x0, #3
   44be0:	mov	x1, x0
   44be4:	ldr	x0, [sp, #88]
   44be8:	add	x0, x0, x1
   44bec:	ldr	x1, [sp, #136]
   44bf0:	ldr	x1, [x1, #8]
   44bf4:	str	x1, [x0, #8]
   44bf8:	ldr	w1, [sp, #116]
   44bfc:	mov	x0, x1
   44c00:	lsl	x0, x0, #1
   44c04:	add	x0, x0, x1
   44c08:	lsl	x0, x0, #3
   44c0c:	mov	x1, x0
   44c10:	ldr	x0, [sp, #88]
   44c14:	add	x0, x0, x1
   44c18:	ldr	x2, [x0, #8]
   44c1c:	ldr	w1, [sp, #116]
   44c20:	mov	x0, x1
   44c24:	lsl	x0, x0, #1
   44c28:	add	x0, x0, x1
   44c2c:	lsl	x0, x0, #3
   44c30:	mov	x1, x0
   44c34:	ldr	x0, [sp, #88]
   44c38:	add	x0, x0, x1
   44c3c:	ldr	x1, [sp, #64]
   44c40:	add	x1, x2, x1
   44c44:	str	x1, [x0, #8]
   44c48:	ldr	w1, [sp, #116]
   44c4c:	mov	x0, x1
   44c50:	lsl	x0, x0, #1
   44c54:	add	x0, x0, x1
   44c58:	lsl	x0, x0, #3
   44c5c:	mov	x1, x0
   44c60:	ldr	x0, [sp, #88]
   44c64:	add	x0, x0, x1
   44c68:	ldr	x1, [sp, #136]
   44c6c:	ldr	x1, [x1, #16]
   44c70:	str	x1, [x0, #16]
   44c74:	ldr	w0, [sp, #116]
   44c78:	add	w0, w0, #0x1
   44c7c:	str	w0, [sp, #116]
   44c80:	b	44c90 <__asan_internal_strnlen@@Base+0x61c>
   44c84:	nop
   44c88:	b	44c90 <__asan_internal_strnlen@@Base+0x61c>
   44c8c:	nop
   44c90:	ldr	x0, [sp, #120]
   44c94:	add	x0, x0, #0x1
   44c98:	str	x0, [sp, #120]
   44c9c:	ldr	x0, [sp, #136]
   44ca0:	add	x0, x0, #0x18
   44ca4:	str	x0, [sp, #136]
   44ca8:	ldr	x1, [sp, #120]
   44cac:	ldr	x0, [sp, #104]
   44cb0:	cmp	x1, x0
   44cb4:	b.cc	44a78 <__asan_internal_strnlen@@Base+0x404>  // b.lo, b.ul, b.last
   44cb8:	adrp	x0, 44000 <__asan_cplus_demangle_init_info@@Base+0x4f8>
   44cbc:	add	x3, x0, #0x880
   44cc0:	mov	x2, #0x18                  	// #24
   44cc4:	ldr	x1, [sp, #128]
   44cc8:	ldr	x0, [sp, #88]
   44ccc:	bl	65d0 <__asan_backtrace_qsort@plt>
   44cd0:	ldr	x0, [sp, #144]
   44cd4:	str	xzr, [x0]
   44cd8:	ldr	x0, [sp, #144]
   44cdc:	ldr	x1, [sp, #88]
   44ce0:	str	x1, [x0, #8]
   44ce4:	ldr	x0, [sp, #144]
   44ce8:	ldr	x1, [sp, #128]
   44cec:	str	x1, [x0, #16]
   44cf0:	mov	w0, #0x1                   	// #1
   44cf4:	ldp	x29, x30, [sp], #144
   44cf8:	ret
   44cfc:	sub	sp, sp, #0x30
   44d00:	str	x0, [sp, #8]
   44d04:	str	x1, [sp]
   44d08:	ldr	x0, [sp, #8]
   44d0c:	ldr	w0, [x0, #8]
   44d10:	cmp	w0, #0x0
   44d14:	b.ne	44d54 <__asan_internal_strnlen@@Base+0x6e0>  // b.any
   44d18:	ldr	x0, [sp, #8]
   44d1c:	add	x0, x0, #0x30
   44d20:	str	x0, [sp, #40]
   44d24:	b	44d34 <__asan_internal_strnlen@@Base+0x6c0>
   44d28:	ldr	x0, [sp, #40]
   44d2c:	ldr	x0, [x0]
   44d30:	str	x0, [sp, #40]
   44d34:	ldr	x0, [sp, #40]
   44d38:	ldr	x0, [x0]
   44d3c:	cmp	x0, #0x0
   44d40:	b.ne	44d28 <__asan_internal_strnlen@@Base+0x6b4>  // b.any
   44d44:	ldr	x0, [sp, #40]
   44d48:	ldr	x1, [sp]
   44d4c:	str	x1, [x0]
   44d50:	b	44dbc <__asan_internal_strnlen@@Base+0x748>
   44d54:	ldr	x0, [sp, #8]
   44d58:	add	x0, x0, #0x30
   44d5c:	str	x0, [sp, #32]
   44d60:	ldr	x0, [sp, #32]
   44d64:	ldar	x0, [x0]
   44d68:	str	x0, [sp, #24]
   44d6c:	ldr	x0, [sp, #24]
   44d70:	cmp	x0, #0x0
   44d74:	b.eq	44d84 <__asan_internal_strnlen@@Base+0x710>  // b.none
   44d78:	ldr	x0, [sp, #24]
   44d7c:	str	x0, [sp, #32]
   44d80:	b	44d60 <__asan_internal_strnlen@@Base+0x6ec>
   44d84:	nop
   44d88:	ldr	x1, [sp]
   44d8c:	ldr	x0, [sp, #32]
   44d90:	ldxr	x2, [x0]
   44d94:	cbnz	x2, 44da0 <__asan_internal_strnlen@@Base+0x72c>
   44d98:	stlxr	w3, x1, [x0]
   44d9c:	cbnz	w3, 44d90 <__asan_internal_strnlen@@Base+0x71c>
   44da0:	cmp	x2, #0x0
   44da4:	dmb	ish
   44da8:	cset	w0, eq  // eq = none
   44dac:	cmp	w0, #0x0
   44db0:	b.ne	44db8 <__asan_internal_strnlen@@Base+0x744>  // b.any
   44db4:	b	44d54 <__asan_internal_strnlen@@Base+0x6e0>
   44db8:	nop
   44dbc:	nop
   44dc0:	add	sp, sp, #0x30
   44dc4:	ret
   44dc8:	stp	x29, x30, [sp, #-96]!
   44dcc:	mov	x29, sp
   44dd0:	str	x0, [sp, #56]
   44dd4:	str	x1, [sp, #48]
   44dd8:	str	x2, [sp, #40]
   44ddc:	str	x3, [sp, #32]
   44de0:	str	x4, [sp, #24]
   44de4:	str	xzr, [sp, #80]
   44de8:	ldr	x0, [sp, #56]
   44dec:	ldr	w0, [x0, #8]
   44df0:	cmp	w0, #0x0
   44df4:	b.ne	44e5c <__asan_internal_strnlen@@Base+0x7e8>  // b.any
   44df8:	ldr	x0, [sp, #56]
   44dfc:	ldr	x0, [x0, #48]
   44e00:	str	x0, [sp, #88]
   44e04:	b	44e4c <__asan_internal_strnlen@@Base+0x7d8>
   44e08:	ldr	x0, [sp, #88]
   44e0c:	ldr	x1, [x0, #8]
   44e10:	ldr	x0, [sp, #88]
   44e14:	ldr	x2, [x0, #16]
   44e18:	add	x5, sp, #0x30
   44e1c:	adrp	x0, 44000 <__asan_cplus_demangle_init_info@@Base+0x4f8>
   44e20:	add	x4, x0, #0x8e8
   44e24:	mov	x3, #0x18                  	// #24
   44e28:	mov	x0, x5
   44e2c:	bl	6af0 <bsearch@plt>
   44e30:	str	x0, [sp, #80]
   44e34:	ldr	x0, [sp, #80]
   44e38:	cmp	x0, #0x0
   44e3c:	b.ne	44ec4 <__asan_internal_strnlen@@Base+0x850>  // b.any
   44e40:	ldr	x0, [sp, #88]
   44e44:	ldr	x0, [x0]
   44e48:	str	x0, [sp, #88]
   44e4c:	ldr	x0, [sp, #88]
   44e50:	cmp	x0, #0x0
   44e54:	b.ne	44e08 <__asan_internal_strnlen@@Base+0x794>  // b.any
   44e58:	b	44ed8 <__asan_internal_strnlen@@Base+0x864>
   44e5c:	ldr	x0, [sp, #56]
   44e60:	add	x0, x0, #0x30
   44e64:	str	x0, [sp, #72]
   44e68:	ldr	x0, [sp, #72]
   44e6c:	ldar	x0, [x0]
   44e70:	str	x0, [sp, #88]
   44e74:	ldr	x0, [sp, #88]
   44e78:	cmp	x0, #0x0
   44e7c:	b.eq	44ecc <__asan_internal_strnlen@@Base+0x858>  // b.none
   44e80:	ldr	x0, [sp, #88]
   44e84:	ldr	x1, [x0, #8]
   44e88:	ldr	x0, [sp, #88]
   44e8c:	ldr	x2, [x0, #16]
   44e90:	add	x5, sp, #0x30
   44e94:	adrp	x0, 44000 <__asan_cplus_demangle_init_info@@Base+0x4f8>
   44e98:	add	x4, x0, #0x8e8
   44e9c:	mov	x3, #0x18                  	// #24
   44ea0:	mov	x0, x5
   44ea4:	bl	6af0 <bsearch@plt>
   44ea8:	str	x0, [sp, #80]
   44eac:	ldr	x0, [sp, #80]
   44eb0:	cmp	x0, #0x0
   44eb4:	b.ne	44ed4 <__asan_internal_strnlen@@Base+0x860>  // b.any
   44eb8:	ldr	x0, [sp, #88]
   44ebc:	str	x0, [sp, #72]
   44ec0:	b	44e68 <__asan_internal_strnlen@@Base+0x7f4>
   44ec4:	nop
   44ec8:	b	44ed8 <__asan_internal_strnlen@@Base+0x864>
   44ecc:	nop
   44ed0:	b	44ed8 <__asan_internal_strnlen@@Base+0x864>
   44ed4:	nop
   44ed8:	ldr	x0, [sp, #80]
   44edc:	cmp	x0, #0x0
   44ee0:	b.ne	44f08 <__asan_internal_strnlen@@Base+0x894>  // b.any
   44ee4:	ldr	x0, [sp, #48]
   44ee8:	ldr	x5, [sp, #40]
   44eec:	mov	x4, #0x0                   	// #0
   44ef0:	mov	x3, #0x0                   	// #0
   44ef4:	mov	x2, #0x0                   	// #0
   44ef8:	mov	x1, x0
   44efc:	ldr	x0, [sp, #24]
   44f00:	blr	x5
   44f04:	b	44f34 <__asan_internal_strnlen@@Base+0x8c0>
   44f08:	ldr	x1, [sp, #48]
   44f0c:	ldr	x0, [sp, #80]
   44f10:	ldr	x2, [x0]
   44f14:	ldr	x0, [sp, #80]
   44f18:	ldr	x3, [x0, #8]
   44f1c:	ldr	x0, [sp, #80]
   44f20:	ldr	x0, [x0, #16]
   44f24:	ldr	x5, [sp, #40]
   44f28:	mov	x4, x0
   44f2c:	ldr	x0, [sp, #24]
   44f30:	blr	x5
   44f34:	nop
   44f38:	ldp	x29, x30, [sp], #96
   44f3c:	ret
   44f40:	stp	x29, x30, [sp, #-160]!
   44f44:	mov	x29, sp
   44f48:	str	x0, [sp, #24]
   44f4c:	add	x0, sp, #0x20
   44f50:	mov	x1, x0
   44f54:	ldr	x0, [sp, #24]
   44f58:	bl	4a760 <__asan_backtrace_vector_release@@Base+0xd0>
   44f5c:	cmp	w0, #0x0
   44f60:	b.ge	44f6c <__asan_internal_strnlen@@Base+0x8f8>  // b.tcont
   44f64:	mov	w0, #0x0                   	// #0
   44f68:	b	44f80 <__asan_internal_strnlen@@Base+0x90c>
   44f6c:	ldr	w0, [sp, #48]
   44f70:	and	w0, w0, #0xf000
   44f74:	cmp	w0, #0xa, lsl #12
   44f78:	cset	w0, eq  // eq = none
   44f7c:	and	w0, w0, #0xff
   44f80:	ldp	x29, x30, [sp], #160
   44f84:	ret
   44f88:	stp	x29, x30, [sp, #-96]!
   44f8c:	mov	x29, sp
   44f90:	str	x0, [sp, #56]
   44f94:	str	x1, [sp, #48]
   44f98:	str	x2, [sp, #40]
   44f9c:	str	x3, [sp, #32]
   44fa0:	str	x4, [sp, #24]
   44fa4:	mov	x0, #0x80                  	// #128
   44fa8:	str	x0, [sp, #88]
   44fac:	ldr	x3, [sp, #32]
   44fb0:	ldr	x2, [sp, #40]
   44fb4:	ldr	x1, [sp, #88]
   44fb8:	ldr	x0, [sp, #56]
   44fbc:	bl	67f0 <__asan_backtrace_alloc@plt>
   44fc0:	str	x0, [sp, #80]
   44fc4:	ldr	x0, [sp, #80]
   44fc8:	cmp	x0, #0x0
   44fcc:	b.ne	44fd8 <__asan_internal_strnlen@@Base+0x964>  // b.any
   44fd0:	mov	x0, #0x0                   	// #0
   44fd4:	b	45078 <__asan_internal_strnlen@@Base+0xa04>
   44fd8:	ldr	x2, [sp, #88]
   44fdc:	ldr	x1, [sp, #80]
   44fe0:	ldr	x0, [sp, #48]
   44fe4:	bl	65e0 <readlink@plt>
   44fe8:	str	x0, [sp, #72]
   44fec:	ldr	x0, [sp, #72]
   44ff0:	cmp	x0, #0x0
   44ff4:	b.ge	45018 <__asan_internal_strnlen@@Base+0x9a4>  // b.tcont
   44ff8:	ldr	x4, [sp, #32]
   44ffc:	ldr	x3, [sp, #40]
   45000:	ldr	x2, [sp, #88]
   45004:	ldr	x1, [sp, #80]
   45008:	ldr	x0, [sp, #56]
   4500c:	bl	6ac0 <__asan_backtrace_free@plt>
   45010:	mov	x0, #0x0                   	// #0
   45014:	b	45078 <__asan_internal_strnlen@@Base+0xa04>
   45018:	ldr	x0, [sp, #88]
   4501c:	sub	x1, x0, #0x1
   45020:	ldr	x0, [sp, #72]
   45024:	cmp	x1, x0
   45028:	b.ls	45050 <__asan_internal_strnlen@@Base+0x9dc>  // b.plast
   4502c:	ldr	x0, [sp, #72]
   45030:	ldr	x1, [sp, #80]
   45034:	add	x0, x1, x0
   45038:	strb	wzr, [x0]
   4503c:	ldr	x0, [sp, #24]
   45040:	ldr	x1, [sp, #88]
   45044:	str	x1, [x0]
   45048:	ldr	x0, [sp, #80]
   4504c:	b	45078 <__asan_internal_strnlen@@Base+0xa04>
   45050:	ldr	x4, [sp, #32]
   45054:	ldr	x3, [sp, #40]
   45058:	ldr	x2, [sp, #88]
   4505c:	ldr	x1, [sp, #80]
   45060:	ldr	x0, [sp, #56]
   45064:	bl	6ac0 <__asan_backtrace_free@plt>
   45068:	ldr	x0, [sp, #88]
   4506c:	lsl	x0, x0, #1
   45070:	str	x0, [sp, #88]
   45074:	b	44fac <__asan_internal_strnlen@@Base+0x938>
   45078:	ldp	x29, x30, [sp], #96
   4507c:	ret
   45080:	stp	x29, x30, [sp, #-144]!
   45084:	mov	x29, sp
   45088:	str	x0, [sp, #56]
   4508c:	str	x1, [sp, #48]
   45090:	str	x2, [sp, #40]
   45094:	str	x3, [sp, #32]
   45098:	str	x4, [sp, #24]
   4509c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   450a0:	add	x0, x0, #0x8c8
   450a4:	str	x0, [sp, #120]
   450a8:	ldr	x0, [sp, #120]
   450ac:	bl	66e0 <__asan_internal_strlen@plt>
   450b0:	str	x0, [sp, #112]
   450b4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   450b8:	add	x0, x0, #0x8e8
   450bc:	str	x0, [sp, #104]
   450c0:	ldr	x0, [sp, #104]
   450c4:	bl	66e0 <__asan_internal_strlen@plt>
   450c8:	str	x0, [sp, #96]
   450cc:	ldr	x0, [sp, #40]
   450d0:	lsl	x1, x0, #1
   450d4:	ldr	x0, [sp, #112]
   450d8:	add	x1, x1, x0
   450dc:	ldr	x0, [sp, #96]
   450e0:	add	x0, x1, x0
   450e4:	add	x0, x0, #0x2
   450e8:	str	x0, [sp, #88]
   450ec:	ldr	x3, [sp, #24]
   450f0:	ldr	x2, [sp, #32]
   450f4:	ldr	x1, [sp, #88]
   450f8:	ldr	x0, [sp, #56]
   450fc:	bl	67f0 <__asan_backtrace_alloc@plt>
   45100:	str	x0, [sp, #80]
   45104:	ldr	x0, [sp, #80]
   45108:	cmp	x0, #0x0
   4510c:	b.ne	45118 <__asan_internal_strnlen@@Base+0xaa4>  // b.any
   45110:	mov	w0, #0xffffffff            	// #-1
   45114:	b	45278 <__asan_internal_strnlen@@Base+0xc04>
   45118:	ldr	x0, [sp, #80]
   4511c:	str	x0, [sp, #136]
   45120:	ldr	x2, [sp, #112]
   45124:	ldr	x1, [sp, #120]
   45128:	ldr	x0, [sp, #136]
   4512c:	bl	66d0 <__asan_internal_memcpy@plt>
   45130:	ldr	x1, [sp, #136]
   45134:	ldr	x0, [sp, #112]
   45138:	add	x0, x1, x0
   4513c:	str	x0, [sp, #136]
   45140:	str	xzr, [sp, #128]
   45144:	b	45210 <__asan_internal_strnlen@@Base+0xb9c>
   45148:	ldr	x1, [sp, #48]
   4514c:	ldr	x0, [sp, #128]
   45150:	add	x0, x1, x0
   45154:	ldrb	w0, [x0]
   45158:	strb	w0, [sp, #75]
   4515c:	ldrb	w0, [sp, #75]
   45160:	lsr	w0, w0, #4
   45164:	strb	w0, [sp, #74]
   45168:	ldrb	w0, [sp, #74]
   4516c:	cmp	w0, #0x9
   45170:	b.hi	45184 <__asan_internal_strnlen@@Base+0xb10>  // b.pmore
   45174:	ldrb	w0, [sp, #74]
   45178:	add	w0, w0, #0x30
   4517c:	and	w1, w0, #0xff
   45180:	b	45190 <__asan_internal_strnlen@@Base+0xb1c>
   45184:	ldrb	w0, [sp, #74]
   45188:	add	w0, w0, #0x57
   4518c:	and	w1, w0, #0xff
   45190:	ldr	x0, [sp, #136]
   45194:	add	x2, x0, #0x1
   45198:	str	x2, [sp, #136]
   4519c:	strb	w1, [x0]
   451a0:	ldrb	w0, [sp, #75]
   451a4:	and	w0, w0, #0xf
   451a8:	strb	w0, [sp, #74]
   451ac:	ldrb	w0, [sp, #74]
   451b0:	cmp	w0, #0x9
   451b4:	b.hi	451c8 <__asan_internal_strnlen@@Base+0xb54>  // b.pmore
   451b8:	ldrb	w0, [sp, #74]
   451bc:	add	w0, w0, #0x30
   451c0:	and	w1, w0, #0xff
   451c4:	b	451d4 <__asan_internal_strnlen@@Base+0xb60>
   451c8:	ldrb	w0, [sp, #74]
   451cc:	add	w0, w0, #0x57
   451d0:	and	w1, w0, #0xff
   451d4:	ldr	x0, [sp, #136]
   451d8:	add	x2, x0, #0x1
   451dc:	str	x2, [sp, #136]
   451e0:	strb	w1, [x0]
   451e4:	ldr	x0, [sp, #128]
   451e8:	cmp	x0, #0x0
   451ec:	b.ne	45204 <__asan_internal_strnlen@@Base+0xb90>  // b.any
   451f0:	ldr	x0, [sp, #136]
   451f4:	add	x1, x0, #0x1
   451f8:	str	x1, [sp, #136]
   451fc:	mov	w1, #0x2f                  	// #47
   45200:	strb	w1, [x0]
   45204:	ldr	x0, [sp, #128]
   45208:	add	x0, x0, #0x1
   4520c:	str	x0, [sp, #128]
   45210:	ldr	x1, [sp, #128]
   45214:	ldr	x0, [sp, #40]
   45218:	cmp	x1, x0
   4521c:	b.cc	45148 <__asan_internal_strnlen@@Base+0xad4>  // b.lo, b.ul, b.last
   45220:	ldr	x2, [sp, #96]
   45224:	ldr	x1, [sp, #104]
   45228:	ldr	x0, [sp, #136]
   4522c:	bl	66d0 <__asan_internal_memcpy@plt>
   45230:	ldr	x1, [sp, #136]
   45234:	ldr	x0, [sp, #96]
   45238:	add	x0, x1, x0
   4523c:	strb	wzr, [x0]
   45240:	add	x0, sp, #0x44
   45244:	mov	x3, x0
   45248:	ldr	x2, [sp, #24]
   4524c:	ldr	x1, [sp, #32]
   45250:	ldr	x0, [sp, #80]
   45254:	bl	6c70 <__asan_backtrace_open@plt>
   45258:	str	w0, [sp, #76]
   4525c:	ldr	x4, [sp, #24]
   45260:	ldr	x3, [sp, #32]
   45264:	ldr	x2, [sp, #88]
   45268:	ldr	x1, [sp, #80]
   4526c:	ldr	x0, [sp, #56]
   45270:	bl	6ac0 <__asan_backtrace_free@plt>
   45274:	ldr	w0, [sp, #76]
   45278:	ldp	x29, x30, [sp], #144
   4527c:	ret
   45280:	stp	x29, x30, [sp, #-112]!
   45284:	mov	x29, sp
   45288:	str	x0, [sp, #72]
   4528c:	str	x1, [sp, #64]
   45290:	str	x2, [sp, #56]
   45294:	str	x3, [sp, #48]
   45298:	str	x4, [sp, #40]
   4529c:	str	x5, [sp, #32]
   452a0:	str	x6, [sp, #24]
   452a4:	str	x7, [sp, #16]
   452a8:	ldr	x0, [sp, #32]
   452ac:	bl	66e0 <__asan_internal_strlen@plt>
   452b0:	str	x0, [sp, #104]
   452b4:	ldr	x1, [sp, #56]
   452b8:	ldr	x0, [sp, #40]
   452bc:	add	x1, x1, x0
   452c0:	ldr	x0, [sp, #104]
   452c4:	add	x0, x1, x0
   452c8:	add	x0, x0, #0x1
   452cc:	str	x0, [sp, #96]
   452d0:	ldr	x3, [sp, #16]
   452d4:	ldr	x2, [sp, #24]
   452d8:	ldr	x1, [sp, #96]
   452dc:	ldr	x0, [sp, #72]
   452e0:	bl	67f0 <__asan_backtrace_alloc@plt>
   452e4:	str	x0, [sp, #88]
   452e8:	ldr	x0, [sp, #88]
   452ec:	cmp	x0, #0x0
   452f0:	b.ne	452fc <__asan_internal_strnlen@@Base+0xc88>  // b.any
   452f4:	mov	w0, #0xffffffff            	// #-1
   452f8:	b	4539c <__asan_internal_strnlen@@Base+0xd28>
   452fc:	ldr	x2, [sp, #56]
   45300:	ldr	x1, [sp, #64]
   45304:	ldr	x0, [sp, #88]
   45308:	bl	66d0 <__asan_internal_memcpy@plt>
   4530c:	ldr	x1, [sp, #88]
   45310:	ldr	x0, [sp, #56]
   45314:	add	x0, x1, x0
   45318:	ldr	x2, [sp, #40]
   4531c:	ldr	x1, [sp, #48]
   45320:	bl	66d0 <__asan_internal_memcpy@plt>
   45324:	ldr	x1, [sp, #56]
   45328:	ldr	x0, [sp, #40]
   4532c:	add	x0, x1, x0
   45330:	ldr	x1, [sp, #88]
   45334:	add	x0, x1, x0
   45338:	ldr	x2, [sp, #104]
   4533c:	ldr	x1, [sp, #32]
   45340:	bl	66d0 <__asan_internal_memcpy@plt>
   45344:	ldr	x1, [sp, #56]
   45348:	ldr	x0, [sp, #40]
   4534c:	add	x1, x1, x0
   45350:	ldr	x0, [sp, #104]
   45354:	add	x0, x1, x0
   45358:	ldr	x1, [sp, #88]
   4535c:	add	x0, x1, x0
   45360:	strb	wzr, [x0]
   45364:	add	x0, sp, #0x50
   45368:	mov	x3, x0
   4536c:	ldr	x2, [sp, #16]
   45370:	ldr	x1, [sp, #24]
   45374:	ldr	x0, [sp, #88]
   45378:	bl	6c70 <__asan_backtrace_open@plt>
   4537c:	str	w0, [sp, #84]
   45380:	ldr	x4, [sp, #16]
   45384:	ldr	x3, [sp, #24]
   45388:	ldr	x2, [sp, #96]
   4538c:	ldr	x1, [sp, #88]
   45390:	ldr	x0, [sp, #72]
   45394:	bl	6ac0 <__asan_backtrace_free@plt>
   45398:	ldr	w0, [sp, #84]
   4539c:	ldp	x29, x30, [sp], #112
   453a0:	ret
   453a4:	stp	x29, x30, [sp, #-176]!
   453a8:	mov	x29, sp
   453ac:	str	x19, [sp, #16]
   453b0:	str	x0, [sp, #72]
   453b4:	str	x1, [sp, #64]
   453b8:	str	x2, [sp, #56]
   453bc:	str	x3, [sp, #48]
   453c0:	str	x4, [sp, #40]
   453c4:	mov	w0, #0xffffffff            	// #-1
   453c8:	str	w0, [sp, #172]
   453cc:	str	xzr, [sp, #160]
   453d0:	str	xzr, [sp, #152]
   453d4:	b	45578 <__asan_internal_strnlen@@Base+0xf04>
   453d8:	add	x0, sp, #0x58
   453dc:	mov	x4, x0
   453e0:	ldr	x3, [sp, #40]
   453e4:	ldr	x2, [sp, #48]
   453e8:	ldr	x1, [sp, #64]
   453ec:	ldr	x0, [sp, #72]
   453f0:	bl	44f88 <__asan_internal_strnlen@@Base+0x914>
   453f4:	str	x0, [sp, #128]
   453f8:	ldr	x0, [sp, #128]
   453fc:	cmp	x0, #0x0
   45400:	b.eq	4558c <__asan_internal_strnlen@@Base+0xf18>  // b.none
   45404:	ldr	x0, [sp, #128]
   45408:	ldrb	w0, [x0]
   4540c:	cmp	w0, #0x2f
   45410:	b.ne	45420 <__asan_internal_strnlen@@Base+0xdac>  // b.any
   45414:	ldr	x0, [sp, #128]
   45418:	str	x0, [sp, #64]
   4541c:	b	45544 <__asan_internal_strnlen@@Base+0xed0>
   45420:	mov	w1, #0x2f                  	// #47
   45424:	ldr	x0, [sp, #64]
   45428:	bl	69c0 <strrchr@plt>
   4542c:	str	x0, [sp, #120]
   45430:	ldr	x0, [sp, #120]
   45434:	cmp	x0, #0x0
   45438:	b.ne	45448 <__asan_internal_strnlen@@Base+0xdd4>  // b.any
   4543c:	ldr	x0, [sp, #128]
   45440:	str	x0, [sp, #64]
   45444:	b	45544 <__asan_internal_strnlen@@Base+0xed0>
   45448:	ldr	x0, [sp, #120]
   4544c:	add	x0, x0, #0x1
   45450:	str	x0, [sp, #120]
   45454:	ldr	x1, [sp, #120]
   45458:	ldr	x0, [sp, #64]
   4545c:	sub	x0, x1, x0
   45460:	mov	x19, x0
   45464:	ldr	x0, [sp, #128]
   45468:	bl	66e0 <__asan_internal_strlen@plt>
   4546c:	add	x0, x19, x0
   45470:	add	x0, x0, #0x1
   45474:	str	x0, [sp, #112]
   45478:	ldr	x3, [sp, #40]
   4547c:	ldr	x2, [sp, #48]
   45480:	ldr	x1, [sp, #112]
   45484:	ldr	x0, [sp, #72]
   45488:	bl	67f0 <__asan_backtrace_alloc@plt>
   4548c:	str	x0, [sp, #104]
   45490:	ldr	x0, [sp, #104]
   45494:	cmp	x0, #0x0
   45498:	b.eq	456c8 <__asan_internal_strnlen@@Base+0x1054>  // b.none
   4549c:	ldr	x1, [sp, #120]
   454a0:	ldr	x0, [sp, #64]
   454a4:	sub	x0, x1, x0
   454a8:	mov	x2, x0
   454ac:	ldr	x1, [sp, #64]
   454b0:	ldr	x0, [sp, #104]
   454b4:	bl	66d0 <__asan_internal_memcpy@plt>
   454b8:	ldr	x1, [sp, #120]
   454bc:	ldr	x0, [sp, #64]
   454c0:	sub	x0, x1, x0
   454c4:	mov	x1, x0
   454c8:	ldr	x0, [sp, #104]
   454cc:	add	x19, x0, x1
   454d0:	ldr	x0, [sp, #128]
   454d4:	bl	66e0 <__asan_internal_strlen@plt>
   454d8:	mov	x2, x0
   454dc:	ldr	x1, [sp, #128]
   454e0:	mov	x0, x19
   454e4:	bl	66d0 <__asan_internal_memcpy@plt>
   454e8:	ldr	x1, [sp, #120]
   454ec:	ldr	x0, [sp, #64]
   454f0:	sub	x0, x1, x0
   454f4:	mov	x19, x0
   454f8:	ldr	x0, [sp, #128]
   454fc:	bl	66e0 <__asan_internal_strlen@plt>
   45500:	add	x0, x19, x0
   45504:	ldr	x1, [sp, #104]
   45508:	add	x0, x1, x0
   4550c:	strb	wzr, [x0]
   45510:	ldr	x0, [sp, #88]
   45514:	ldr	x4, [sp, #40]
   45518:	ldr	x3, [sp, #48]
   4551c:	mov	x2, x0
   45520:	ldr	x1, [sp, #128]
   45524:	ldr	x0, [sp, #72]
   45528:	bl	6ac0 <__asan_backtrace_free@plt>
   4552c:	ldr	x0, [sp, #104]
   45530:	str	x0, [sp, #64]
   45534:	ldr	x0, [sp, #104]
   45538:	str	x0, [sp, #128]
   4553c:	ldr	x0, [sp, #112]
   45540:	str	x0, [sp, #88]
   45544:	ldr	x0, [sp, #160]
   45548:	cmp	x0, #0x0
   4554c:	b.eq	45568 <__asan_internal_strnlen@@Base+0xef4>  // b.none
   45550:	ldr	x4, [sp, #40]
   45554:	ldr	x3, [sp, #48]
   45558:	ldr	x2, [sp, #152]
   4555c:	ldr	x1, [sp, #160]
   45560:	ldr	x0, [sp, #72]
   45564:	bl	6ac0 <__asan_backtrace_free@plt>
   45568:	ldr	x0, [sp, #128]
   4556c:	str	x0, [sp, #160]
   45570:	ldr	x0, [sp, #88]
   45574:	str	x0, [sp, #152]
   45578:	ldr	x0, [sp, #64]
   4557c:	bl	44f40 <__asan_internal_strnlen@@Base+0x8cc>
   45580:	cmp	w0, #0x0
   45584:	b.ne	453d8 <__asan_internal_strnlen@@Base+0xd64>  // b.any
   45588:	b	45590 <__asan_internal_strnlen@@Base+0xf1c>
   4558c:	nop
   45590:	mov	w1, #0x2f                  	// #47
   45594:	ldr	x0, [sp, #64]
   45598:	bl	69c0 <strrchr@plt>
   4559c:	str	x0, [sp, #120]
   455a0:	ldr	x0, [sp, #120]
   455a4:	cmp	x0, #0x0
   455a8:	b.ne	455c0 <__asan_internal_strnlen@@Base+0xf4c>  // b.any
   455ac:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   455b0:	add	x0, x0, #0x8f0
   455b4:	str	x0, [sp, #144]
   455b8:	str	xzr, [sp, #136]
   455bc:	b	455e4 <__asan_internal_strnlen@@Base+0xf70>
   455c0:	ldr	x0, [sp, #120]
   455c4:	add	x0, x0, #0x1
   455c8:	str	x0, [sp, #120]
   455cc:	ldr	x0, [sp, #64]
   455d0:	str	x0, [sp, #144]
   455d4:	ldr	x1, [sp, #120]
   455d8:	ldr	x0, [sp, #64]
   455dc:	sub	x0, x1, x0
   455e0:	str	x0, [sp, #136]
   455e4:	ldr	x7, [sp, #40]
   455e8:	ldr	x6, [sp, #48]
   455ec:	ldr	x5, [sp, #56]
   455f0:	mov	x4, #0x0                   	// #0
   455f4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   455f8:	add	x3, x0, #0x8f0
   455fc:	ldr	x2, [sp, #136]
   45600:	ldr	x1, [sp, #144]
   45604:	ldr	x0, [sp, #72]
   45608:	bl	45280 <__asan_internal_strnlen@@Base+0xc0c>
   4560c:	str	w0, [sp, #100]
   45610:	ldr	w0, [sp, #100]
   45614:	cmp	w0, #0x0
   45618:	b.lt	45628 <__asan_internal_strnlen@@Base+0xfb4>  // b.tstop
   4561c:	ldr	w0, [sp, #100]
   45620:	str	w0, [sp, #172]
   45624:	b	456d4 <__asan_internal_strnlen@@Base+0x1060>
   45628:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   4562c:	add	x0, x0, #0x8f8
   45630:	bl	66e0 <__asan_internal_strlen@plt>
   45634:	ldr	x7, [sp, #40]
   45638:	ldr	x6, [sp, #48]
   4563c:	ldr	x5, [sp, #56]
   45640:	mov	x4, x0
   45644:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   45648:	add	x3, x0, #0x8f8
   4564c:	ldr	x2, [sp, #136]
   45650:	ldr	x1, [sp, #144]
   45654:	ldr	x0, [sp, #72]
   45658:	bl	45280 <__asan_internal_strnlen@@Base+0xc0c>
   4565c:	str	w0, [sp, #100]
   45660:	ldr	w0, [sp, #100]
   45664:	cmp	w0, #0x0
   45668:	b.lt	45678 <__asan_internal_strnlen@@Base+0x1004>  // b.tstop
   4566c:	ldr	w0, [sp, #100]
   45670:	str	w0, [sp, #172]
   45674:	b	456d4 <__asan_internal_strnlen@@Base+0x1060>
   45678:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   4567c:	add	x0, x0, #0x900
   45680:	bl	66e0 <__asan_internal_strlen@plt>
   45684:	ldr	x7, [sp, #40]
   45688:	ldr	x6, [sp, #48]
   4568c:	ldr	x5, [sp, #56]
   45690:	ldr	x4, [sp, #136]
   45694:	ldr	x3, [sp, #144]
   45698:	mov	x2, x0
   4569c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   456a0:	add	x1, x0, #0x900
   456a4:	ldr	x0, [sp, #72]
   456a8:	bl	45280 <__asan_internal_strnlen@@Base+0xc0c>
   456ac:	str	w0, [sp, #100]
   456b0:	ldr	w0, [sp, #100]
   456b4:	cmp	w0, #0x0
   456b8:	b.lt	456d0 <__asan_internal_strnlen@@Base+0x105c>  // b.tstop
   456bc:	ldr	w0, [sp, #100]
   456c0:	str	w0, [sp, #172]
   456c4:	b	456d4 <__asan_internal_strnlen@@Base+0x1060>
   456c8:	nop
   456cc:	b	456d4 <__asan_internal_strnlen@@Base+0x1060>
   456d0:	nop
   456d4:	ldr	x0, [sp, #160]
   456d8:	cmp	x0, #0x0
   456dc:	b.eq	45704 <__asan_internal_strnlen@@Base+0x1090>  // b.none
   456e0:	ldr	x0, [sp, #152]
   456e4:	cmp	x0, #0x0
   456e8:	b.eq	45704 <__asan_internal_strnlen@@Base+0x1090>  // b.none
   456ec:	ldr	x4, [sp, #40]
   456f0:	ldr	x3, [sp, #48]
   456f4:	ldr	x2, [sp, #152]
   456f8:	ldr	x1, [sp, #160]
   456fc:	ldr	x0, [sp, #72]
   45700:	bl	6ac0 <__asan_backtrace_free@plt>
   45704:	ldr	w0, [sp, #172]
   45708:	ldr	x19, [sp, #16]
   4570c:	ldp	x29, x30, [sp], #176
   45710:	ret
   45714:	stp	x29, x30, [sp, #-80]!
   45718:	mov	x29, sp
   4571c:	str	x0, [sp, #56]
   45720:	str	x1, [sp, #48]
   45724:	str	x2, [sp, #40]
   45728:	str	w3, [sp, #36]
   4572c:	str	x4, [sp, #24]
   45730:	str	x5, [sp, #16]
   45734:	ldr	x4, [sp, #16]
   45738:	ldr	x3, [sp, #24]
   4573c:	ldr	x2, [sp, #40]
   45740:	ldr	x1, [sp, #48]
   45744:	ldr	x0, [sp, #56]
   45748:	bl	453a4 <__asan_internal_strnlen@@Base+0xd30>
   4574c:	str	w0, [sp, #76]
   45750:	ldr	w0, [sp, #76]
   45754:	cmp	w0, #0x0
   45758:	b.ge	45764 <__asan_internal_strnlen@@Base+0x10f0>  // b.tcont
   4575c:	mov	w0, #0xffffffff            	// #-1
   45760:	b	457b4 <__asan_internal_strnlen@@Base+0x1140>
   45764:	ldr	w0, [sp, #36]
   45768:	cmp	w0, #0x0
   4576c:	b.eq	457b0 <__asan_internal_strnlen@@Base+0x113c>  // b.none
   45770:	ldr	x3, [sp, #16]
   45774:	ldr	x2, [sp, #24]
   45778:	ldr	w1, [sp, #76]
   4577c:	ldr	x0, [sp, #56]
   45780:	bl	4472c <__asan_internal_strnlen@@Base+0xb8>
   45784:	str	w0, [sp, #72]
   45788:	ldr	w1, [sp, #72]
   4578c:	ldr	w0, [sp, #36]
   45790:	cmp	w1, w0
   45794:	b.eq	457b0 <__asan_internal_strnlen@@Base+0x113c>  // b.none
   45798:	ldr	x2, [sp, #16]
   4579c:	ldr	x1, [sp, #24]
   457a0:	ldr	w0, [sp, #76]
   457a4:	bl	6ba0 <__asan_backtrace_close@plt>
   457a8:	mov	w0, #0xffffffff            	// #-1
   457ac:	b	457b4 <__asan_internal_strnlen@@Base+0x1140>
   457b0:	ldr	w0, [sp, #76]
   457b4:	ldp	x29, x30, [sp], #80
   457b8:	ret
   457bc:	nop
   457c0:	ret
   457c4:	stp	x29, x30, [sp, #-80]!
   457c8:	mov	x29, sp
   457cc:	str	x0, [sp, #40]
   457d0:	str	x1, [sp, #32]
   457d4:	str	x2, [sp, #24]
   457d8:	str	x3, [sp, #16]
   457dc:	ldr	x0, [sp, #16]
   457e0:	ldr	w0, [x0]
   457e4:	str	w0, [sp, #76]
   457e8:	ldr	w0, [sp, #76]
   457ec:	cmp	w0, #0xe
   457f0:	b.ls	457fc <__asan_internal_strnlen@@Base+0x1188>  // b.plast
   457f4:	mov	w0, #0x1                   	// #1
   457f8:	b	458b0 <__asan_internal_strnlen@@Base+0x123c>
   457fc:	ldr	x0, [sp, #40]
   45800:	ldr	x0, [x0]
   45804:	str	x0, [sp, #64]
   45808:	ldr	x0, [sp, #24]
   4580c:	ldr	x0, [x0]
   45810:	str	x0, [sp, #56]
   45814:	ldr	x1, [sp, #32]
   45818:	ldr	x0, [sp, #64]
   4581c:	sub	x0, x1, x0
   45820:	cmp	x0, #0x3
   45824:	cset	w0, le
   45828:	and	w0, w0, #0xff
   4582c:	and	x0, x0, #0xff
   45830:	cmp	x0, #0x0
   45834:	b.eq	45844 <__asan_internal_strnlen@@Base+0x11d0>  // b.none
   45838:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   4583c:	mov	w0, #0x0                   	// #0
   45840:	b	458b0 <__asan_internal_strnlen@@Base+0x123c>
   45844:	ldr	x0, [sp, #64]
   45848:	ldr	w0, [x0]
   4584c:	str	w0, [sp, #52]
   45850:	ldr	w1, [sp, #52]
   45854:	ldr	w0, [sp, #76]
   45858:	lsl	x0, x1, x0
   4585c:	ldr	x1, [sp, #56]
   45860:	orr	x0, x1, x0
   45864:	str	x0, [sp, #56]
   45868:	ldr	w0, [sp, #76]
   4586c:	add	w0, w0, #0x20
   45870:	str	w0, [sp, #76]
   45874:	ldr	x0, [sp, #64]
   45878:	add	x0, x0, #0x4
   4587c:	str	x0, [sp, #64]
   45880:	ldr	x0, [sp, #64]
   45884:	prfm	pldl1strm, [x0]
   45888:	ldr	x0, [sp, #40]
   4588c:	ldr	x1, [sp, #64]
   45890:	str	x1, [x0]
   45894:	ldr	x0, [sp, #24]
   45898:	ldr	x1, [sp, #56]
   4589c:	str	x1, [x0]
   458a0:	ldr	x0, [sp, #16]
   458a4:	ldr	w1, [sp, #76]
   458a8:	str	w1, [x0]
   458ac:	mov	w0, #0x1                   	// #1
   458b0:	ldp	x29, x30, [sp], #80
   458b4:	ret
   458b8:	stp	x29, x30, [sp, #-304]!
   458bc:	mov	x29, sp
   458c0:	str	x0, [sp, #40]
   458c4:	str	x1, [sp, #32]
   458c8:	str	x2, [sp, #24]
   458cc:	str	x3, [sp, #16]
   458d0:	ldr	x0, [sp, #24]
   458d4:	add	x0, x0, #0x1, lsl #12
   458d8:	str	x0, [sp, #184]
   458dc:	add	x0, sp, #0x88
   458e0:	mov	x2, #0x20                  	// #32
   458e4:	mov	w1, #0x0                   	// #0
   458e8:	bl	6770 <__asan_internal_memset@plt>
   458ec:	str	xzr, [sp, #296]
   458f0:	b	45a5c <__asan_internal_strnlen@@Base+0x13e8>
   458f4:	ldr	x1, [sp, #40]
   458f8:	ldr	x0, [sp, #296]
   458fc:	add	x0, x1, x0
   45900:	ldrb	w0, [x0]
   45904:	cmp	w0, #0xf
   45908:	cset	w0, hi  // hi = pmore
   4590c:	and	w0, w0, #0xff
   45910:	and	x0, x0, #0xff
   45914:	cmp	x0, #0x0
   45918:	b.eq	45928 <__asan_internal_strnlen@@Base+0x12b4>  // b.none
   4591c:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   45920:	mov	w0, #0x0                   	// #0
   45924:	b	461d0 <__asan_internal_strnlen@@Base+0x1b5c>
   45928:	ldr	x1, [sp, #40]
   4592c:	ldr	x0, [sp, #296]
   45930:	add	x0, x1, x0
   45934:	ldrb	w0, [x0]
   45938:	sxtw	x0, w0
   4593c:	lsl	x0, x0, #1
   45940:	add	x1, sp, #0x88
   45944:	ldrh	w0, [x1, x0]
   45948:	cmp	w0, #0x0
   4594c:	b.ne	459ac <__asan_internal_strnlen@@Base+0x1338>  // b.any
   45950:	ldr	x1, [sp, #40]
   45954:	ldr	x0, [sp, #296]
   45958:	add	x0, x1, x0
   4595c:	ldrb	w0, [x0]
   45960:	mov	w1, w0
   45964:	ldr	x0, [sp, #296]
   45968:	and	w2, w0, #0xffff
   4596c:	sxtw	x0, w1
   45970:	lsl	x0, x0, #1
   45974:	add	x1, sp, #0x68
   45978:	strh	w2, [x1, x0]
   4597c:	ldr	x1, [sp, #40]
   45980:	ldr	x0, [sp, #296]
   45984:	add	x0, x1, x0
   45988:	ldrb	w0, [x0]
   4598c:	mov	w1, w0
   45990:	ldr	x0, [sp, #296]
   45994:	and	w2, w0, #0xffff
   45998:	sxtw	x0, w1
   4599c:	lsl	x0, x0, #1
   459a0:	add	x1, sp, #0x48
   459a4:	strh	w2, [x1, x0]
   459a8:	b	45a14 <__asan_internal_strnlen@@Base+0x13a0>
   459ac:	ldr	x1, [sp, #40]
   459b0:	ldr	x0, [sp, #296]
   459b4:	add	x0, x1, x0
   459b8:	ldrb	w0, [x0]
   459bc:	sxtw	x0, w0
   459c0:	lsl	x0, x0, #1
   459c4:	add	x1, sp, #0x48
   459c8:	ldrh	w0, [x1, x0]
   459cc:	and	x0, x0, #0xffff
   459d0:	lsl	x0, x0, #1
   459d4:	ldr	x1, [sp, #184]
   459d8:	add	x0, x1, x0
   459dc:	ldr	x1, [sp, #296]
   459e0:	and	w1, w1, #0xffff
   459e4:	strh	w1, [x0]
   459e8:	ldr	x1, [sp, #40]
   459ec:	ldr	x0, [sp, #296]
   459f0:	add	x0, x1, x0
   459f4:	ldrb	w0, [x0]
   459f8:	mov	w1, w0
   459fc:	ldr	x0, [sp, #296]
   45a00:	and	w2, w0, #0xffff
   45a04:	sxtw	x0, w1
   45a08:	lsl	x0, x0, #1
   45a0c:	add	x1, sp, #0x48
   45a10:	strh	w2, [x1, x0]
   45a14:	ldr	x1, [sp, #40]
   45a18:	ldr	x0, [sp, #296]
   45a1c:	add	x0, x1, x0
   45a20:	ldrb	w0, [x0]
   45a24:	mov	w3, w0
   45a28:	sxtw	x0, w3
   45a2c:	lsl	x0, x0, #1
   45a30:	add	x1, sp, #0x88
   45a34:	ldrh	w0, [x1, x0]
   45a38:	add	w0, w0, #0x1
   45a3c:	and	w2, w0, #0xffff
   45a40:	sxtw	x0, w3
   45a44:	lsl	x0, x0, #1
   45a48:	add	x1, sp, #0x88
   45a4c:	strh	w2, [x1, x0]
   45a50:	ldr	x0, [sp, #296]
   45a54:	add	x0, x0, #0x1
   45a58:	str	x0, [sp, #296]
   45a5c:	ldr	x1, [sp, #296]
   45a60:	ldr	x0, [sp, #32]
   45a64:	cmp	x1, x0
   45a68:	b.cc	458f4 <__asan_internal_strnlen@@Base+0x1280>  // b.lo, b.ul, b.last
   45a6c:	mov	x2, #0x800                 	// #2048
   45a70:	mov	w1, #0x0                   	// #0
   45a74:	ldr	x0, [sp, #16]
   45a78:	bl	6770 <__asan_internal_memset@plt>
   45a7c:	str	wzr, [sp, #284]
   45a80:	mov	x0, #0x1                   	// #1
   45a84:	str	x0, [sp, #288]
   45a88:	b	45ca8 <__asan_internal_strnlen@@Base+0x1634>
   45a8c:	ldr	x0, [sp, #288]
   45a90:	lsl	x0, x0, #1
   45a94:	add	x1, sp, #0x88
   45a98:	ldrh	w0, [x1, x0]
   45a9c:	str	w0, [sp, #172]
   45aa0:	ldr	w0, [sp, #172]
   45aa4:	cmp	w0, #0x0
   45aa8:	b.eq	45c98 <__asan_internal_strnlen@@Base+0x1624>  // b.none
   45aac:	ldr	x0, [sp, #288]
   45ab0:	mov	w1, w0
   45ab4:	mov	w0, #0x1                   	// #1
   45ab8:	lsl	w0, w0, w1
   45abc:	ldr	w1, [sp, #172]
   45ac0:	cmp	w1, w0
   45ac4:	cset	w0, hi  // hi = pmore
   45ac8:	and	w0, w0, #0xff
   45acc:	and	x0, x0, #0xff
   45ad0:	cmp	x0, #0x0
   45ad4:	b.eq	45ae4 <__asan_internal_strnlen@@Base+0x1470>  // b.none
   45ad8:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   45adc:	mov	w0, #0x0                   	// #0
   45ae0:	b	461d0 <__asan_internal_strnlen@@Base+0x1b5c>
   45ae4:	ldr	x0, [sp, #288]
   45ae8:	lsl	x0, x0, #1
   45aec:	add	x1, sp, #0x68
   45af0:	ldrh	w0, [x1, x0]
   45af4:	str	w0, [sp, #268]
   45af8:	str	xzr, [sp, #296]
   45afc:	b	45c84 <__asan_internal_strnlen@@Base+0x1610>
   45b00:	ldr	w0, [sp, #268]
   45b04:	and	w0, w0, #0xfffffe00
   45b08:	cmp	w0, #0x0
   45b0c:	cset	w0, ne  // ne = any
   45b10:	and	w0, w0, #0xff
   45b14:	and	x0, x0, #0xff
   45b18:	cmp	x0, #0x0
   45b1c:	b.eq	45b2c <__asan_internal_strnlen@@Base+0x14b8>  // b.none
   45b20:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   45b24:	mov	w0, #0x0                   	// #0
   45b28:	b	461d0 <__asan_internal_strnlen@@Base+0x1b5c>
   45b2c:	ldr	w0, [sp, #268]
   45b30:	and	w1, w0, #0xffff
   45b34:	ldr	x0, [sp, #288]
   45b38:	and	w0, w0, #0xffff
   45b3c:	sub	w0, w0, #0x1
   45b40:	and	w0, w0, #0xffff
   45b44:	ubfiz	w0, w0, #9, #7
   45b48:	and	w0, w0, #0xffff
   45b4c:	orr	w0, w1, w0
   45b50:	strh	w0, [sp, #170]
   45b54:	ldr	w0, [sp, #284]
   45b58:	str	x0, [sp, #256]
   45b5c:	b	45bd0 <__asan_internal_strnlen@@Base+0x155c>
   45b60:	ldr	x0, [sp, #256]
   45b64:	lsl	x0, x0, #1
   45b68:	ldr	x1, [sp, #16]
   45b6c:	add	x0, x1, x0
   45b70:	ldrh	w0, [x0]
   45b74:	cmp	w0, #0x0
   45b78:	cset	w0, ne  // ne = any
   45b7c:	and	w0, w0, #0xff
   45b80:	and	x0, x0, #0xff
   45b84:	cmp	x0, #0x0
   45b88:	b.eq	45b98 <__asan_internal_strnlen@@Base+0x1524>  // b.none
   45b8c:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   45b90:	mov	w0, #0x0                   	// #0
   45b94:	b	461d0 <__asan_internal_strnlen@@Base+0x1b5c>
   45b98:	ldr	x0, [sp, #256]
   45b9c:	lsl	x0, x0, #1
   45ba0:	ldr	x1, [sp, #16]
   45ba4:	add	x0, x1, x0
   45ba8:	ldrh	w1, [sp, #170]
   45bac:	strh	w1, [x0]
   45bb0:	ldr	x0, [sp, #288]
   45bb4:	mov	w1, w0
   45bb8:	mov	w0, #0x1                   	// #1
   45bbc:	lsl	w0, w0, w1
   45bc0:	sxtw	x0, w0
   45bc4:	ldr	x1, [sp, #256]
   45bc8:	add	x0, x1, x0
   45bcc:	str	x0, [sp, #256]
   45bd0:	ldr	x0, [sp, #256]
   45bd4:	cmp	x0, #0xff
   45bd8:	b.ls	45b60 <__asan_internal_strnlen@@Base+0x14ec>  // b.plast
   45bdc:	ldr	x0, [sp, #296]
   45be0:	add	x1, x0, #0x1
   45be4:	ldr	w0, [sp, #172]
   45be8:	cmp	x1, x0
   45bec:	b.cs	45c08 <__asan_internal_strnlen@@Base+0x1594>  // b.hs, b.nlast
   45bf0:	ldr	w0, [sp, #268]
   45bf4:	lsl	x0, x0, #1
   45bf8:	ldr	x1, [sp, #184]
   45bfc:	add	x0, x1, x0
   45c00:	ldrh	w0, [x0]
   45c04:	str	w0, [sp, #268]
   45c08:	ldr	x0, [sp, #288]
   45c0c:	sub	w0, w0, #0x1
   45c10:	mov	w1, #0x1                   	// #1
   45c14:	lsl	w0, w1, w0
   45c18:	str	w0, [sp, #252]
   45c1c:	b	45c2c <__asan_internal_strnlen@@Base+0x15b8>
   45c20:	ldr	w0, [sp, #252]
   45c24:	lsr	w0, w0, #1
   45c28:	str	w0, [sp, #252]
   45c2c:	ldr	w1, [sp, #284]
   45c30:	ldr	w0, [sp, #252]
   45c34:	and	w0, w1, w0
   45c38:	cmp	w0, #0x0
   45c3c:	b.ne	45c20 <__asan_internal_strnlen@@Base+0x15ac>  // b.any
   45c40:	ldr	w0, [sp, #252]
   45c44:	cmp	w0, #0x0
   45c48:	b.ne	45c54 <__asan_internal_strnlen@@Base+0x15e0>  // b.any
   45c4c:	str	wzr, [sp, #284]
   45c50:	b	45c78 <__asan_internal_strnlen@@Base+0x1604>
   45c54:	ldr	w0, [sp, #252]
   45c58:	sub	w0, w0, #0x1
   45c5c:	ldr	w1, [sp, #284]
   45c60:	and	w0, w1, w0
   45c64:	str	w0, [sp, #284]
   45c68:	ldr	w1, [sp, #284]
   45c6c:	ldr	w0, [sp, #252]
   45c70:	add	w0, w1, w0
   45c74:	str	w0, [sp, #284]
   45c78:	ldr	x0, [sp, #296]
   45c7c:	add	x0, x0, #0x1
   45c80:	str	x0, [sp, #296]
   45c84:	ldr	w0, [sp, #172]
   45c88:	ldr	x1, [sp, #296]
   45c8c:	cmp	x1, x0
   45c90:	b.cc	45b00 <__asan_internal_strnlen@@Base+0x148c>  // b.lo, b.ul, b.last
   45c94:	b	45c9c <__asan_internal_strnlen@@Base+0x1628>
   45c98:	nop
   45c9c:	ldr	x0, [sp, #288]
   45ca0:	add	x0, x0, #0x1
   45ca4:	str	x0, [sp, #288]
   45ca8:	ldr	x0, [sp, #288]
   45cac:	cmp	x0, #0x8
   45cb0:	b.ls	45a8c <__asan_internal_strnlen@@Base+0x1418>  // b.plast
   45cb4:	mov	x0, #0x9                   	// #9
   45cb8:	str	x0, [sp, #288]
   45cbc:	b	45e20 <__asan_internal_strnlen@@Base+0x17ac>
   45cc0:	ldr	x0, [sp, #288]
   45cc4:	lsl	x0, x0, #1
   45cc8:	add	x1, sp, #0x88
   45ccc:	ldrh	w0, [x1, x0]
   45cd0:	str	w0, [sp, #248]
   45cd4:	ldr	w0, [sp, #248]
   45cd8:	cmp	w0, #0x0
   45cdc:	b.eq	45e10 <__asan_internal_strnlen@@Base+0x179c>  // b.none
   45ce0:	ldr	x0, [sp, #288]
   45ce4:	sub	x0, x0, #0x9
   45ce8:	ldr	w1, [sp, #284]
   45cec:	and	w2, w1, #0xffff
   45cf0:	lsl	x0, x0, #1
   45cf4:	add	x1, sp, #0x38
   45cf8:	strh	w2, [x1, x0]
   45cfc:	str	wzr, [sp, #244]
   45d00:	b	45dd8 <__asan_internal_strnlen@@Base+0x1764>
   45d04:	ldr	w0, [sp, #244]
   45d08:	ldr	w1, [sp, #248]
   45d0c:	lsr	w0, w1, w0
   45d10:	and	w0, w0, #0x1
   45d14:	cmp	w0, #0x0
   45d18:	b.eq	45dcc <__asan_internal_strnlen@@Base+0x1758>  // b.none
   45d1c:	ldr	x0, [sp, #288]
   45d20:	mov	w1, w0
   45d24:	ldr	w0, [sp, #244]
   45d28:	sub	w0, w1, w0
   45d2c:	sub	w0, w0, #0x1
   45d30:	mov	w1, #0x1                   	// #1
   45d34:	lsl	w0, w1, w0
   45d38:	str	w0, [sp, #236]
   45d3c:	str	wzr, [sp, #240]
   45d40:	b	45d98 <__asan_internal_strnlen@@Base+0x1724>
   45d44:	ldr	w1, [sp, #284]
   45d48:	ldr	w0, [sp, #236]
   45d4c:	and	w0, w1, w0
   45d50:	cmp	w0, #0x0
   45d54:	b.ne	45d6c <__asan_internal_strnlen@@Base+0x16f8>  // b.any
   45d58:	ldr	w1, [sp, #284]
   45d5c:	ldr	w0, [sp, #236]
   45d60:	add	w0, w1, w0
   45d64:	str	w0, [sp, #284]
   45d68:	b	45db0 <__asan_internal_strnlen@@Base+0x173c>
   45d6c:	ldr	w0, [sp, #236]
   45d70:	mvn	w0, w0
   45d74:	ldr	w1, [sp, #284]
   45d78:	and	w0, w1, w0
   45d7c:	str	w0, [sp, #284]
   45d80:	ldr	w0, [sp, #240]
   45d84:	add	w0, w0, #0x1
   45d88:	str	w0, [sp, #240]
   45d8c:	ldr	w0, [sp, #236]
   45d90:	lsr	w0, w0, #1
   45d94:	str	w0, [sp, #236]
   45d98:	ldr	w1, [sp, #240]
   45d9c:	ldr	w0, [sp, #244]
   45da0:	ldr	x2, [sp, #288]
   45da4:	sub	x0, x2, x0
   45da8:	cmp	x1, x0
   45dac:	b.cc	45d44 <__asan_internal_strnlen@@Base+0x16d0>  // b.lo, b.ul, b.last
   45db0:	ldr	w0, [sp, #244]
   45db4:	mov	w1, #0x1                   	// #1
   45db8:	lsl	w0, w1, w0
   45dbc:	mvn	w0, w0
   45dc0:	ldr	w1, [sp, #248]
   45dc4:	and	w0, w1, w0
   45dc8:	str	w0, [sp, #248]
   45dcc:	ldr	w0, [sp, #244]
   45dd0:	add	w0, w0, #0x1
   45dd4:	str	w0, [sp, #244]
   45dd8:	ldr	w0, [sp, #244]
   45ddc:	ldr	x1, [sp, #288]
   45de0:	cmp	x1, x0
   45de4:	b.hi	45d04 <__asan_internal_strnlen@@Base+0x1690>  // b.pmore
   45de8:	ldr	w0, [sp, #248]
   45dec:	cmp	w0, #0x0
   45df0:	cset	w0, ne  // ne = any
   45df4:	and	w0, w0, #0xff
   45df8:	and	x0, x0, #0xff
   45dfc:	cmp	x0, #0x0
   45e00:	b.eq	45e14 <__asan_internal_strnlen@@Base+0x17a0>  // b.none
   45e04:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   45e08:	mov	w0, #0x0                   	// #0
   45e0c:	b	461d0 <__asan_internal_strnlen@@Base+0x1b5c>
   45e10:	nop
   45e14:	ldr	x0, [sp, #288]
   45e18:	add	x0, x0, #0x1
   45e1c:	str	x0, [sp, #288]
   45e20:	ldr	x0, [sp, #288]
   45e24:	cmp	x0, #0xf
   45e28:	b.ls	45cc0 <__asan_internal_strnlen@@Base+0x164c>  // b.plast
   45e2c:	str	xzr, [sp, #272]
   45e30:	mov	x0, #0xf                   	// #15
   45e34:	str	x0, [sp, #288]
   45e38:	b	461c0 <__asan_internal_strnlen@@Base+0x1b4c>
   45e3c:	ldr	x0, [sp, #288]
   45e40:	lsl	x0, x0, #1
   45e44:	add	x1, sp, #0x88
   45e48:	ldrh	w0, [x1, x0]
   45e4c:	str	w0, [sp, #180]
   45e50:	ldr	w0, [sp, #180]
   45e54:	cmp	w0, #0x0
   45e58:	b.eq	461b0 <__asan_internal_strnlen@@Base+0x1b3c>  // b.none
   45e5c:	ldr	x0, [sp, #288]
   45e60:	lsl	x0, x0, #1
   45e64:	add	x1, sp, #0x68
   45e68:	ldrh	w0, [x1, x0]
   45e6c:	str	w0, [sp, #232]
   45e70:	ldr	x0, [sp, #288]
   45e74:	sub	x0, x0, #0x9
   45e78:	lsl	x0, x0, #1
   45e7c:	add	x1, sp, #0x38
   45e80:	ldrh	w0, [x1, x0]
   45e84:	str	w0, [sp, #284]
   45e88:	mov	x0, #0x100                 	// #256
   45e8c:	str	x0, [sp, #224]
   45e90:	str	xzr, [sp, #216]
   45e94:	str	xzr, [sp, #208]
   45e98:	str	xzr, [sp, #296]
   45e9c:	b	4619c <__asan_internal_strnlen@@Base+0x1b28>
   45ea0:	ldr	w0, [sp, #284]
   45ea4:	and	x0, x0, #0xff
   45ea8:	ldr	x1, [sp, #224]
   45eac:	cmp	x1, x0
   45eb0:	b.eq	46010 <__asan_internal_strnlen@@Base+0x199c>  // b.none
   45eb4:	ldr	w0, [sp, #284]
   45eb8:	and	x0, x0, #0xff
   45ebc:	str	x0, [sp, #224]
   45ec0:	ldr	x0, [sp, #224]
   45ec4:	lsl	x0, x0, #1
   45ec8:	ldr	x1, [sp, #16]
   45ecc:	add	x0, x1, x0
   45ed0:	ldrh	w0, [x0]
   45ed4:	strh	w0, [sp, #178]
   45ed8:	ldrh	w0, [sp, #178]
   45edc:	cmp	w0, #0x0
   45ee0:	b.ne	45f90 <__asan_internal_strnlen@@Base+0x191c>  // b.any
   45ee4:	ldr	x0, [sp, #272]
   45ee8:	and	x0, x0, #0x1ff
   45eec:	ldr	x1, [sp, #272]
   45ef0:	cmp	x1, x0
   45ef4:	cset	w0, ne  // ne = any
   45ef8:	and	w0, w0, #0xff
   45efc:	and	x0, x0, #0xff
   45f00:	cmp	x0, #0x0
   45f04:	b.eq	45f14 <__asan_internal_strnlen@@Base+0x18a0>  // b.none
   45f08:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   45f0c:	mov	w0, #0x0                   	// #0
   45f10:	b	461d0 <__asan_internal_strnlen@@Base+0x1b5c>
   45f14:	ldr	x0, [sp, #272]
   45f18:	str	x0, [sp, #216]
   45f1c:	ldr	x0, [sp, #288]
   45f20:	sub	x0, x0, #0x8
   45f24:	str	x0, [sp, #208]
   45f28:	ldr	x0, [sp, #208]
   45f2c:	mov	w1, w0
   45f30:	mov	w0, #0x1                   	// #1
   45f34:	lsl	w0, w0, w1
   45f38:	sxtw	x0, w0
   45f3c:	ldr	x1, [sp, #272]
   45f40:	add	x0, x1, x0
   45f44:	str	x0, [sp, #272]
   45f48:	ldr	x0, [sp, #288]
   45f4c:	and	w0, w0, #0xffff
   45f50:	sub	w0, w0, #0x8
   45f54:	and	w0, w0, #0xffff
   45f58:	ubfiz	w0, w0, #9, #7
   45f5c:	and	w1, w0, #0xffff
   45f60:	ldr	x0, [sp, #216]
   45f64:	and	w0, w0, #0xffff
   45f68:	add	w0, w1, w0
   45f6c:	and	w1, w0, #0xffff
   45f70:	ldr	x0, [sp, #224]
   45f74:	lsl	x0, x0, #1
   45f78:	ldr	x2, [sp, #16]
   45f7c:	add	x0, x2, x0
   45f80:	add	w1, w1, #0x1, lsl #12
   45f84:	and	w1, w1, #0xffff
   45f88:	strh	w1, [x0]
   45f8c:	b	46010 <__asan_internal_strnlen@@Base+0x199c>
   45f90:	ldrh	w0, [sp, #178]
   45f94:	and	w0, w0, #0x1000
   45f98:	cmp	w0, #0x0
   45f9c:	cset	w0, eq  // eq = none
   45fa0:	and	w0, w0, #0xff
   45fa4:	and	x0, x0, #0xff
   45fa8:	cmp	x0, #0x0
   45fac:	b.eq	45fbc <__asan_internal_strnlen@@Base+0x1948>  // b.none
   45fb0:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   45fb4:	mov	w0, #0x0                   	// #0
   45fb8:	b	461d0 <__asan_internal_strnlen@@Base+0x1b5c>
   45fbc:	ldrh	w0, [sp, #178]
   45fc0:	and	x0, x0, #0x1ff
   45fc4:	str	x0, [sp, #216]
   45fc8:	ldrh	w0, [sp, #178]
   45fcc:	lsr	w0, w0, #9
   45fd0:	and	w0, w0, #0xffff
   45fd4:	and	x0, x0, #0xffff
   45fd8:	and	x0, x0, #0x7
   45fdc:	str	x0, [sp, #208]
   45fe0:	ldr	x0, [sp, #288]
   45fe4:	sub	x0, x0, #0x8
   45fe8:	ldr	x1, [sp, #208]
   45fec:	cmp	x1, x0
   45ff0:	cset	w0, cc  // cc = lo, ul, last
   45ff4:	and	w0, w0, #0xff
   45ff8:	and	x0, x0, #0xff
   45ffc:	cmp	x0, #0x0
   46000:	b.eq	46010 <__asan_internal_strnlen@@Base+0x199c>  // b.none
   46004:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   46008:	mov	w0, #0x0                   	// #0
   4600c:	b	461d0 <__asan_internal_strnlen@@Base+0x1b5c>
   46010:	ldr	w0, [sp, #232]
   46014:	and	w1, w0, #0xffff
   46018:	ldr	x0, [sp, #288]
   4601c:	and	w0, w0, #0xffff
   46020:	sub	w0, w0, #0x8
   46024:	and	w0, w0, #0xffff
   46028:	ubfiz	w0, w0, #9, #7
   4602c:	and	w0, w0, #0xffff
   46030:	orr	w0, w1, w0
   46034:	strh	w0, [sp, #176]
   46038:	ldr	w0, [sp, #284]
   4603c:	lsr	w0, w0, #8
   46040:	mov	w0, w0
   46044:	str	x0, [sp, #200]
   46048:	b	460d4 <__asan_internal_strnlen@@Base+0x1a60>
   4604c:	ldr	x1, [sp, #216]
   46050:	ldr	x0, [sp, #200]
   46054:	add	x0, x1, x0
   46058:	add	x0, x0, #0x100
   4605c:	lsl	x0, x0, #1
   46060:	ldr	x1, [sp, #16]
   46064:	add	x0, x1, x0
   46068:	ldrh	w0, [x0]
   4606c:	cmp	w0, #0x0
   46070:	cset	w0, ne  // ne = any
   46074:	and	w0, w0, #0xff
   46078:	and	x0, x0, #0xff
   4607c:	cmp	x0, #0x0
   46080:	b.eq	46090 <__asan_internal_strnlen@@Base+0x1a1c>  // b.none
   46084:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   46088:	mov	w0, #0x0                   	// #0
   4608c:	b	461d0 <__asan_internal_strnlen@@Base+0x1b5c>
   46090:	ldr	x1, [sp, #216]
   46094:	ldr	x0, [sp, #200]
   46098:	add	x0, x1, x0
   4609c:	add	x0, x0, #0x100
   460a0:	lsl	x0, x0, #1
   460a4:	ldr	x1, [sp, #16]
   460a8:	add	x0, x1, x0
   460ac:	ldrh	w1, [sp, #176]
   460b0:	strh	w1, [x0]
   460b4:	ldr	x0, [sp, #288]
   460b8:	sub	w0, w0, #0x8
   460bc:	mov	w1, #0x1                   	// #1
   460c0:	lsl	w0, w1, w0
   460c4:	mov	w0, w0
   460c8:	ldr	x1, [sp, #200]
   460cc:	add	x0, x1, x0
   460d0:	str	x0, [sp, #200]
   460d4:	ldr	x0, [sp, #208]
   460d8:	mov	w1, w0
   460dc:	mov	w0, #0x1                   	// #1
   460e0:	lsl	w0, w0, w1
   460e4:	mov	w0, w0
   460e8:	ldr	x1, [sp, #200]
   460ec:	cmp	x1, x0
   460f0:	b.cc	4604c <__asan_internal_strnlen@@Base+0x19d8>  // b.lo, b.ul, b.last
   460f4:	ldr	x0, [sp, #296]
   460f8:	add	x1, x0, #0x1
   460fc:	ldr	w0, [sp, #180]
   46100:	cmp	x1, x0
   46104:	b.cs	46120 <__asan_internal_strnlen@@Base+0x1aac>  // b.hs, b.nlast
   46108:	ldr	w0, [sp, #232]
   4610c:	lsl	x0, x0, #1
   46110:	ldr	x1, [sp, #184]
   46114:	add	x0, x1, x0
   46118:	ldrh	w0, [x0]
   4611c:	str	w0, [sp, #232]
   46120:	ldr	x0, [sp, #288]
   46124:	sub	w0, w0, #0x1
   46128:	mov	w1, #0x1                   	// #1
   4612c:	lsl	w0, w1, w0
   46130:	str	w0, [sp, #196]
   46134:	b	46144 <__asan_internal_strnlen@@Base+0x1ad0>
   46138:	ldr	w0, [sp, #196]
   4613c:	lsr	w0, w0, #1
   46140:	str	w0, [sp, #196]
   46144:	ldr	w1, [sp, #284]
   46148:	ldr	w0, [sp, #196]
   4614c:	and	w0, w1, w0
   46150:	cmp	w0, #0x0
   46154:	b.ne	46138 <__asan_internal_strnlen@@Base+0x1ac4>  // b.any
   46158:	ldr	w0, [sp, #196]
   4615c:	cmp	w0, #0x0
   46160:	b.ne	4616c <__asan_internal_strnlen@@Base+0x1af8>  // b.any
   46164:	str	wzr, [sp, #284]
   46168:	b	46190 <__asan_internal_strnlen@@Base+0x1b1c>
   4616c:	ldr	w0, [sp, #196]
   46170:	sub	w0, w0, #0x1
   46174:	ldr	w1, [sp, #284]
   46178:	and	w0, w1, w0
   4617c:	str	w0, [sp, #284]
   46180:	ldr	w1, [sp, #284]
   46184:	ldr	w0, [sp, #196]
   46188:	add	w0, w1, w0
   4618c:	str	w0, [sp, #284]
   46190:	ldr	x0, [sp, #296]
   46194:	add	x0, x0, #0x1
   46198:	str	x0, [sp, #296]
   4619c:	ldr	w0, [sp, #180]
   461a0:	ldr	x1, [sp, #296]
   461a4:	cmp	x1, x0
   461a8:	b.cc	45ea0 <__asan_internal_strnlen@@Base+0x182c>  // b.lo, b.ul, b.last
   461ac:	b	461b4 <__asan_internal_strnlen@@Base+0x1b40>
   461b0:	nop
   461b4:	ldr	x0, [sp, #288]
   461b8:	sub	x0, x0, #0x1
   461bc:	str	x0, [sp, #288]
   461c0:	ldr	x0, [sp, #288]
   461c4:	cmp	x0, #0x8
   461c8:	b.hi	45e3c <__asan_internal_strnlen@@Base+0x17c8>  // b.pmore
   461cc:	mov	w0, #0x1                   	// #1
   461d0:	ldp	x29, x30, [sp], #304
   461d4:	ret
   461d8:	stp	x29, x30, [sp, #-256]!
   461dc:	mov	x29, sp
   461e0:	str	x0, [sp, #56]
   461e4:	str	x1, [sp, #48]
   461e8:	str	x2, [sp, #40]
   461ec:	str	x3, [sp, #32]
   461f0:	str	x4, [sp, #24]
   461f4:	ldr	x0, [sp, #32]
   461f8:	str	x0, [sp, #200]
   461fc:	ldr	x1, [sp, #56]
   46200:	ldr	x0, [sp, #48]
   46204:	add	x0, x1, x0
   46208:	str	x0, [sp, #192]
   4620c:	ldr	x1, [sp, #32]
   46210:	ldr	x0, [sp, #24]
   46214:	add	x0, x1, x0
   46218:	str	x0, [sp, #184]
   4621c:	b	478b0 <__asan_internal_strnlen@@Base+0x323c>
   46220:	ldr	x0, [sp, #56]
   46224:	ldrb	w0, [x0]
   46228:	and	w0, w0, #0xf
   4622c:	cmp	w0, #0x8
   46230:	cset	w0, ne  // ne = any
   46234:	and	w0, w0, #0xff
   46238:	and	x0, x0, #0xff
   4623c:	cmp	x0, #0x0
   46240:	b.eq	46250 <__asan_internal_strnlen@@Base+0x1bdc>  // b.none
   46244:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   46248:	mov	w0, #0x0                   	// #0
   4624c:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   46250:	ldr	x0, [sp, #56]
   46254:	ldrb	w0, [x0]
   46258:	lsr	w0, w0, #4
   4625c:	and	w0, w0, #0xff
   46260:	cmp	w0, #0x7
   46264:	cset	w0, hi  // hi = pmore
   46268:	and	w0, w0, #0xff
   4626c:	and	x0, x0, #0xff
   46270:	cmp	x0, #0x0
   46274:	b.eq	46284 <__asan_internal_strnlen@@Base+0x1c10>  // b.none
   46278:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   4627c:	mov	w0, #0x0                   	// #0
   46280:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   46284:	ldr	x0, [sp, #56]
   46288:	add	x0, x0, #0x1
   4628c:	ldrb	w0, [x0]
   46290:	and	w0, w0, #0x20
   46294:	cmp	w0, #0x0
   46298:	cset	w0, ne  // ne = any
   4629c:	and	w0, w0, #0xff
   462a0:	and	x0, x0, #0xff
   462a4:	cmp	x0, #0x0
   462a8:	b.eq	462b8 <__asan_internal_strnlen@@Base+0x1c44>  // b.none
   462ac:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   462b0:	mov	w0, #0x0                   	// #0
   462b4:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   462b8:	ldr	x0, [sp, #56]
   462bc:	ldrb	w0, [x0]
   462c0:	lsl	w0, w0, #8
   462c4:	ldr	x1, [sp, #56]
   462c8:	add	x1, x1, #0x1
   462cc:	ldrb	w1, [x1]
   462d0:	orr	w0, w0, w1
   462d4:	sxtw	x0, w0
   462d8:	str	x0, [sp, #88]
   462dc:	ldr	x2, [sp, #88]
   462e0:	mov	x0, #0x4211                	// #16913
   462e4:	movk	x0, #0x2108, lsl #16
   462e8:	movk	x0, #0x1084, lsl #32
   462ec:	movk	x0, #0x842, lsl #48
   462f0:	umulh	x0, x2, x0
   462f4:	sub	x1, x2, x0
   462f8:	lsr	x1, x1, #1
   462fc:	add	x0, x0, x1
   46300:	lsr	x1, x0, #4
   46304:	mov	x0, x1
   46308:	lsl	x0, x0, #5
   4630c:	sub	x0, x0, x1
   46310:	sub	x1, x2, x0
   46314:	cmp	x1, #0x0
   46318:	cset	w0, ne  // ne = any
   4631c:	and	w0, w0, #0xff
   46320:	and	x0, x0, #0xff
   46324:	cmp	x0, #0x0
   46328:	b.eq	46338 <__asan_internal_strnlen@@Base+0x1cc4>  // b.none
   4632c:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   46330:	mov	w0, #0x0                   	// #0
   46334:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   46338:	ldr	x0, [sp, #56]
   4633c:	add	x0, x0, #0x2
   46340:	str	x0, [sp, #56]
   46344:	str	xzr, [sp, #88]
   46348:	str	wzr, [sp, #84]
   4634c:	b	46388 <__asan_internal_strnlen@@Base+0x1d14>
   46350:	ldr	x0, [sp, #56]
   46354:	ldrb	w0, [x0]
   46358:	and	x1, x0, #0xff
   4635c:	ldr	w0, [sp, #84]
   46360:	lsl	x1, x1, x0
   46364:	ldr	x0, [sp, #88]
   46368:	orr	x0, x1, x0
   4636c:	str	x0, [sp, #88]
   46370:	ldr	w0, [sp, #84]
   46374:	add	w0, w0, #0x8
   46378:	str	w0, [sp, #84]
   4637c:	ldr	x0, [sp, #56]
   46380:	add	x0, x0, #0x1
   46384:	str	x0, [sp, #56]
   46388:	ldr	x0, [sp, #56]
   4638c:	and	x0, x0, #0x3
   46390:	cmp	x0, #0x0
   46394:	b.ne	46350 <__asan_internal_strnlen@@Base+0x1cdc>  // b.any
   46398:	str	wzr, [sp, #252]
   4639c:	b	478a4 <__asan_internal_strnlen@@Base+0x3230>
   463a0:	add	x2, sp, #0x54
   463a4:	add	x1, sp, #0x58
   463a8:	add	x0, sp, #0x38
   463ac:	mov	x3, x2
   463b0:	mov	x2, x1
   463b4:	ldr	x1, [sp, #192]
   463b8:	bl	457c4 <__asan_internal_strnlen@@Base+0x1150>
   463bc:	cmp	w0, #0x0
   463c0:	b.ne	463cc <__asan_internal_strnlen@@Base+0x1d58>  // b.any
   463c4:	mov	w0, #0x0                   	// #0
   463c8:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   463cc:	ldr	x0, [sp, #88]
   463d0:	and	w0, w0, #0x1
   463d4:	str	w0, [sp, #252]
   463d8:	ldr	x0, [sp, #88]
   463dc:	lsr	x0, x0, #1
   463e0:	and	w0, w0, #0x3
   463e4:	str	w0, [sp, #180]
   463e8:	ldr	x0, [sp, #88]
   463ec:	lsr	x0, x0, #3
   463f0:	str	x0, [sp, #88]
   463f4:	ldr	w0, [sp, #84]
   463f8:	sub	w0, w0, #0x3
   463fc:	str	w0, [sp, #84]
   46400:	ldr	w0, [sp, #180]
   46404:	cmp	w0, #0x3
   46408:	cset	w0, eq  // eq = none
   4640c:	and	w0, w0, #0xff
   46410:	and	x0, x0, #0xff
   46414:	cmp	x0, #0x0
   46418:	b.eq	46428 <__asan_internal_strnlen@@Base+0x1db4>  // b.none
   4641c:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   46420:	mov	w0, #0x0                   	// #0
   46424:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   46428:	ldr	w0, [sp, #180]
   4642c:	cmp	w0, #0x0
   46430:	b.ne	46618 <__asan_internal_strnlen@@Base+0x1fa4>  // b.any
   46434:	b	46450 <__asan_internal_strnlen@@Base+0x1ddc>
   46438:	ldr	x0, [sp, #56]
   4643c:	sub	x0, x0, #0x1
   46440:	str	x0, [sp, #56]
   46444:	ldr	w0, [sp, #84]
   46448:	sub	w0, w0, #0x8
   4644c:	str	w0, [sp, #84]
   46450:	ldr	w0, [sp, #84]
   46454:	cmp	w0, #0x8
   46458:	b.hi	46438 <__asan_internal_strnlen@@Base+0x1dc4>  // b.pmore
   4645c:	str	xzr, [sp, #88]
   46460:	str	wzr, [sp, #84]
   46464:	ldr	x0, [sp, #56]
   46468:	ldr	x1, [sp, #192]
   4646c:	sub	x0, x1, x0
   46470:	cmp	x0, #0x3
   46474:	cset	w0, le
   46478:	and	w0, w0, #0xff
   4647c:	and	x0, x0, #0xff
   46480:	cmp	x0, #0x0
   46484:	b.eq	46494 <__asan_internal_strnlen@@Base+0x1e20>  // b.none
   46488:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   4648c:	mov	w0, #0x0                   	// #0
   46490:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   46494:	ldr	x0, [sp, #56]
   46498:	ldrb	w0, [x0]
   4649c:	sxth	w1, w0
   464a0:	ldr	x0, [sp, #56]
   464a4:	add	x0, x0, #0x1
   464a8:	ldrb	w0, [x0]
   464ac:	lsl	w0, w0, #8
   464b0:	sxth	w0, w0
   464b4:	orr	w0, w1, w0
   464b8:	sxth	w0, w0
   464bc:	strh	w0, [sp, #98]
   464c0:	ldr	x0, [sp, #56]
   464c4:	add	x0, x0, #0x2
   464c8:	ldrb	w0, [x0]
   464cc:	sxth	w1, w0
   464d0:	ldr	x0, [sp, #56]
   464d4:	add	x0, x0, #0x3
   464d8:	ldrb	w0, [x0]
   464dc:	lsl	w0, w0, #8
   464e0:	sxth	w0, w0
   464e4:	orr	w0, w1, w0
   464e8:	sxth	w0, w0
   464ec:	strh	w0, [sp, #96]
   464f0:	ldr	x0, [sp, #56]
   464f4:	add	x0, x0, #0x4
   464f8:	str	x0, [sp, #56]
   464fc:	ldrh	w0, [sp, #96]
   46500:	mvn	w0, w0
   46504:	strh	w0, [sp, #96]
   46508:	ldrh	w1, [sp, #98]
   4650c:	ldrh	w0, [sp, #96]
   46510:	cmp	w1, w0
   46514:	cset	w0, ne  // ne = any
   46518:	and	w0, w0, #0xff
   4651c:	and	x0, x0, #0xff
   46520:	cmp	x0, #0x0
   46524:	b.eq	46534 <__asan_internal_strnlen@@Base+0x1ec0>  // b.none
   46528:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   4652c:	mov	w0, #0x0                   	// #0
   46530:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   46534:	ldrh	w0, [sp, #98]
   46538:	ldr	x1, [sp, #56]
   4653c:	ldr	x2, [sp, #192]
   46540:	sub	x1, x2, x1
   46544:	cmp	w0, w1
   46548:	cset	w0, hi  // hi = pmore
   4654c:	and	w0, w0, #0xff
   46550:	and	x0, x0, #0xff
   46554:	cmp	x0, #0x0
   46558:	b.ne	46584 <__asan_internal_strnlen@@Base+0x1f10>  // b.any
   4655c:	ldrh	w0, [sp, #98]
   46560:	ldr	x2, [sp, #184]
   46564:	ldr	x1, [sp, #32]
   46568:	sub	x1, x2, x1
   4656c:	cmp	w0, w1
   46570:	cset	w0, hi  // hi = pmore
   46574:	and	w0, w0, #0xff
   46578:	and	x0, x0, #0xff
   4657c:	cmp	x0, #0x0
   46580:	b.eq	46590 <__asan_internal_strnlen@@Base+0x1f1c>  // b.none
   46584:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   46588:	mov	w0, #0x0                   	// #0
   4658c:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   46590:	ldr	x0, [sp, #56]
   46594:	ldrh	w1, [sp, #98]
   46598:	mov	x2, x1
   4659c:	mov	x1, x0
   465a0:	ldr	x0, [sp, #32]
   465a4:	bl	66d0 <__asan_internal_memcpy@plt>
   465a8:	ldrh	w0, [sp, #98]
   465ac:	ldr	x1, [sp, #32]
   465b0:	add	x0, x1, x0
   465b4:	str	x0, [sp, #32]
   465b8:	ldr	x1, [sp, #56]
   465bc:	ldrh	w0, [sp, #98]
   465c0:	add	x0, x1, x0
   465c4:	str	x0, [sp, #56]
   465c8:	b	46604 <__asan_internal_strnlen@@Base+0x1f90>
   465cc:	ldr	x0, [sp, #56]
   465d0:	ldrb	w0, [x0]
   465d4:	and	x1, x0, #0xff
   465d8:	ldr	w0, [sp, #84]
   465dc:	lsl	x1, x1, x0
   465e0:	ldr	x0, [sp, #88]
   465e4:	orr	x0, x1, x0
   465e8:	str	x0, [sp, #88]
   465ec:	ldr	w0, [sp, #84]
   465f0:	add	w0, w0, #0x8
   465f4:	str	w0, [sp, #84]
   465f8:	ldr	x0, [sp, #56]
   465fc:	add	x0, x0, #0x1
   46600:	str	x0, [sp, #56]
   46604:	ldr	x0, [sp, #56]
   46608:	and	x0, x0, #0x3
   4660c:	cmp	x0, #0x0
   46610:	b.ne	465cc <__asan_internal_strnlen@@Base+0x1f58>  // b.any
   46614:	b	478a4 <__asan_internal_strnlen@@Base+0x3230>
   46618:	ldr	w0, [sp, #180]
   4661c:	cmp	w0, #0x1
   46620:	b.ne	46640 <__asan_internal_strnlen@@Base+0x1fcc>  // b.any
   46624:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   46628:	add	x0, x0, #0x910
   4662c:	str	x0, [sp, #240]
   46630:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   46634:	add	x0, x0, #0xbf0
   46638:	str	x0, [sp, #232]
   4663c:	b	471b8 <__asan_internal_strnlen@@Base+0x2b44>
   46640:	add	x2, sp, #0x54
   46644:	add	x1, sp, #0x58
   46648:	add	x0, sp, #0x38
   4664c:	mov	x3, x2
   46650:	mov	x2, x1
   46654:	ldr	x1, [sp, #192]
   46658:	bl	457c4 <__asan_internal_strnlen@@Base+0x1150>
   4665c:	cmp	w0, #0x0
   46660:	b.ne	4666c <__asan_internal_strnlen@@Base+0x1ff8>  // b.any
   46664:	mov	w0, #0x0                   	// #0
   46668:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   4666c:	ldr	x0, [sp, #88]
   46670:	and	w0, w0, #0x1f
   46674:	add	w0, w0, #0x101
   46678:	str	w0, [sp, #176]
   4667c:	ldr	x0, [sp, #88]
   46680:	lsr	x0, x0, #5
   46684:	str	x0, [sp, #88]
   46688:	ldr	x0, [sp, #88]
   4668c:	and	w0, w0, #0x1f
   46690:	add	w0, w0, #0x1
   46694:	str	w0, [sp, #172]
   46698:	ldr	x0, [sp, #88]
   4669c:	lsr	x0, x0, #5
   466a0:	str	x0, [sp, #88]
   466a4:	ldr	x0, [sp, #88]
   466a8:	and	w0, w0, #0xf
   466ac:	add	w0, w0, #0x4
   466b0:	str	w0, [sp, #168]
   466b4:	ldr	x0, [sp, #88]
   466b8:	lsr	x0, x0, #4
   466bc:	str	x0, [sp, #88]
   466c0:	ldr	w0, [sp, #84]
   466c4:	sub	w0, w0, #0xe
   466c8:	str	w0, [sp, #84]
   466cc:	ldr	w0, [sp, #176]
   466d0:	cmp	w0, #0x11e
   466d4:	cset	w0, hi  // hi = pmore
   466d8:	and	w0, w0, #0xff
   466dc:	and	x0, x0, #0xff
   466e0:	cmp	x0, #0x0
   466e4:	b.ne	46704 <__asan_internal_strnlen@@Base+0x2090>  // b.any
   466e8:	ldr	w0, [sp, #172]
   466ec:	cmp	w0, #0x1e
   466f0:	cset	w0, hi  // hi = pmore
   466f4:	and	w0, w0, #0xff
   466f8:	and	x0, x0, #0xff
   466fc:	cmp	x0, #0x0
   46700:	b.eq	46710 <__asan_internal_strnlen@@Base+0x209c>  // b.none
   46704:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   46708:	mov	w0, #0x0                   	// #0
   4670c:	b	471b4 <__asan_internal_strnlen@@Base+0x2b40>
   46710:	add	x0, sp, #0x40
   46714:	mov	x2, #0x13                  	// #19
   46718:	mov	w1, #0x0                   	// #0
   4671c:	bl	6770 <__asan_internal_memset@plt>
   46720:	add	x2, sp, #0x54
   46724:	add	x1, sp, #0x58
   46728:	add	x0, sp, #0x38
   4672c:	mov	x3, x2
   46730:	mov	x2, x1
   46734:	ldr	x1, [sp, #192]
   46738:	bl	457c4 <__asan_internal_strnlen@@Base+0x1150>
   4673c:	cmp	w0, #0x0
   46740:	b.ne	4674c <__asan_internal_strnlen@@Base+0x20d8>  // b.any
   46744:	mov	w0, #0x0                   	// #0
   46748:	b	471b4 <__asan_internal_strnlen@@Base+0x2b40>
   4674c:	ldr	x0, [sp, #88]
   46750:	and	w0, w0, #0xff
   46754:	and	w0, w0, #0x7
   46758:	and	w0, w0, #0xff
   4675c:	strb	w0, [sp, #80]
   46760:	ldr	x0, [sp, #88]
   46764:	lsr	x0, x0, #3
   46768:	and	w0, w0, #0xff
   4676c:	and	w0, w0, #0x7
   46770:	and	w0, w0, #0xff
   46774:	strb	w0, [sp, #81]
   46778:	ldr	x0, [sp, #88]
   4677c:	lsr	x0, x0, #6
   46780:	and	w0, w0, #0xff
   46784:	and	w0, w0, #0x7
   46788:	and	w0, w0, #0xff
   4678c:	strb	w0, [sp, #82]
   46790:	ldr	x0, [sp, #88]
   46794:	lsr	x0, x0, #9
   46798:	and	w0, w0, #0xff
   4679c:	and	w0, w0, #0x7
   467a0:	and	w0, w0, #0xff
   467a4:	strb	w0, [sp, #64]
   467a8:	ldr	x0, [sp, #88]
   467ac:	lsr	x0, x0, #12
   467b0:	str	x0, [sp, #88]
   467b4:	ldr	w0, [sp, #84]
   467b8:	sub	w0, w0, #0xc
   467bc:	str	w0, [sp, #84]
   467c0:	ldr	w0, [sp, #168]
   467c4:	cmp	w0, #0x4
   467c8:	b.eq	46b90 <__asan_internal_strnlen@@Base+0x251c>  // b.none
   467cc:	ldr	x0, [sp, #88]
   467d0:	and	w0, w0, #0xff
   467d4:	and	w0, w0, #0x7
   467d8:	and	w0, w0, #0xff
   467dc:	strb	w0, [sp, #72]
   467e0:	ldr	x0, [sp, #88]
   467e4:	lsr	x0, x0, #3
   467e8:	str	x0, [sp, #88]
   467ec:	ldr	w0, [sp, #84]
   467f0:	sub	w0, w0, #0x3
   467f4:	str	w0, [sp, #84]
   467f8:	ldr	w0, [sp, #168]
   467fc:	cmp	w0, #0x5
   46800:	b.eq	46b98 <__asan_internal_strnlen@@Base+0x2524>  // b.none
   46804:	add	x2, sp, #0x54
   46808:	add	x1, sp, #0x58
   4680c:	add	x0, sp, #0x38
   46810:	mov	x3, x2
   46814:	mov	x2, x1
   46818:	ldr	x1, [sp, #192]
   4681c:	bl	457c4 <__asan_internal_strnlen@@Base+0x1150>
   46820:	cmp	w0, #0x0
   46824:	b.ne	46830 <__asan_internal_strnlen@@Base+0x21bc>  // b.any
   46828:	mov	w0, #0x0                   	// #0
   4682c:	b	471b4 <__asan_internal_strnlen@@Base+0x2b40>
   46830:	ldr	x0, [sp, #88]
   46834:	and	w0, w0, #0xff
   46838:	and	w0, w0, #0x7
   4683c:	and	w0, w0, #0xff
   46840:	strb	w0, [sp, #71]
   46844:	ldr	x0, [sp, #88]
   46848:	lsr	x0, x0, #3
   4684c:	str	x0, [sp, #88]
   46850:	ldr	w0, [sp, #84]
   46854:	sub	w0, w0, #0x3
   46858:	str	w0, [sp, #84]
   4685c:	ldr	w0, [sp, #168]
   46860:	cmp	w0, #0x6
   46864:	b.eq	46ba0 <__asan_internal_strnlen@@Base+0x252c>  // b.none
   46868:	ldr	x0, [sp, #88]
   4686c:	and	w0, w0, #0xff
   46870:	and	w0, w0, #0x7
   46874:	and	w0, w0, #0xff
   46878:	strb	w0, [sp, #73]
   4687c:	ldr	x0, [sp, #88]
   46880:	lsr	x0, x0, #3
   46884:	str	x0, [sp, #88]
   46888:	ldr	w0, [sp, #84]
   4688c:	sub	w0, w0, #0x3
   46890:	str	w0, [sp, #84]
   46894:	ldr	w0, [sp, #168]
   46898:	cmp	w0, #0x7
   4689c:	b.eq	46ba8 <__asan_internal_strnlen@@Base+0x2534>  // b.none
   468a0:	ldr	x0, [sp, #88]
   468a4:	and	w0, w0, #0xff
   468a8:	and	w0, w0, #0x7
   468ac:	and	w0, w0, #0xff
   468b0:	strb	w0, [sp, #70]
   468b4:	ldr	x0, [sp, #88]
   468b8:	lsr	x0, x0, #3
   468bc:	str	x0, [sp, #88]
   468c0:	ldr	w0, [sp, #84]
   468c4:	sub	w0, w0, #0x3
   468c8:	str	w0, [sp, #84]
   468cc:	ldr	w0, [sp, #168]
   468d0:	cmp	w0, #0x8
   468d4:	b.eq	46bb0 <__asan_internal_strnlen@@Base+0x253c>  // b.none
   468d8:	ldr	x0, [sp, #88]
   468dc:	and	w0, w0, #0xff
   468e0:	and	w0, w0, #0x7
   468e4:	and	w0, w0, #0xff
   468e8:	strb	w0, [sp, #74]
   468ec:	ldr	x0, [sp, #88]
   468f0:	lsr	x0, x0, #3
   468f4:	str	x0, [sp, #88]
   468f8:	ldr	w0, [sp, #84]
   468fc:	sub	w0, w0, #0x3
   46900:	str	w0, [sp, #84]
   46904:	ldr	w0, [sp, #168]
   46908:	cmp	w0, #0x9
   4690c:	b.eq	46bb8 <__asan_internal_strnlen@@Base+0x2544>  // b.none
   46910:	ldr	x0, [sp, #88]
   46914:	and	w0, w0, #0xff
   46918:	and	w0, w0, #0x7
   4691c:	and	w0, w0, #0xff
   46920:	strb	w0, [sp, #69]
   46924:	ldr	x0, [sp, #88]
   46928:	lsr	x0, x0, #3
   4692c:	str	x0, [sp, #88]
   46930:	ldr	w0, [sp, #84]
   46934:	sub	w0, w0, #0x3
   46938:	str	w0, [sp, #84]
   4693c:	ldr	w0, [sp, #168]
   46940:	cmp	w0, #0xa
   46944:	b.eq	46bc0 <__asan_internal_strnlen@@Base+0x254c>  // b.none
   46948:	add	x2, sp, #0x54
   4694c:	add	x1, sp, #0x58
   46950:	add	x0, sp, #0x38
   46954:	mov	x3, x2
   46958:	mov	x2, x1
   4695c:	ldr	x1, [sp, #192]
   46960:	bl	457c4 <__asan_internal_strnlen@@Base+0x1150>
   46964:	cmp	w0, #0x0
   46968:	b.ne	46974 <__asan_internal_strnlen@@Base+0x2300>  // b.any
   4696c:	mov	w0, #0x0                   	// #0
   46970:	b	471b4 <__asan_internal_strnlen@@Base+0x2b40>
   46974:	ldr	x0, [sp, #88]
   46978:	and	w0, w0, #0xff
   4697c:	and	w0, w0, #0x7
   46980:	and	w0, w0, #0xff
   46984:	strb	w0, [sp, #75]
   46988:	ldr	x0, [sp, #88]
   4698c:	lsr	x0, x0, #3
   46990:	str	x0, [sp, #88]
   46994:	ldr	w0, [sp, #84]
   46998:	sub	w0, w0, #0x3
   4699c:	str	w0, [sp, #84]
   469a0:	ldr	w0, [sp, #168]
   469a4:	cmp	w0, #0xb
   469a8:	b.eq	46bc8 <__asan_internal_strnlen@@Base+0x2554>  // b.none
   469ac:	ldr	x0, [sp, #88]
   469b0:	and	w0, w0, #0xff
   469b4:	and	w0, w0, #0x7
   469b8:	and	w0, w0, #0xff
   469bc:	strb	w0, [sp, #68]
   469c0:	ldr	x0, [sp, #88]
   469c4:	lsr	x0, x0, #3
   469c8:	str	x0, [sp, #88]
   469cc:	ldr	w0, [sp, #84]
   469d0:	sub	w0, w0, #0x3
   469d4:	str	w0, [sp, #84]
   469d8:	ldr	w0, [sp, #168]
   469dc:	cmp	w0, #0xc
   469e0:	b.eq	46bd0 <__asan_internal_strnlen@@Base+0x255c>  // b.none
   469e4:	ldr	x0, [sp, #88]
   469e8:	and	w0, w0, #0xff
   469ec:	and	w0, w0, #0x7
   469f0:	and	w0, w0, #0xff
   469f4:	strb	w0, [sp, #76]
   469f8:	ldr	x0, [sp, #88]
   469fc:	lsr	x0, x0, #3
   46a00:	str	x0, [sp, #88]
   46a04:	ldr	w0, [sp, #84]
   46a08:	sub	w0, w0, #0x3
   46a0c:	str	w0, [sp, #84]
   46a10:	ldr	w0, [sp, #168]
   46a14:	cmp	w0, #0xd
   46a18:	b.eq	46bd8 <__asan_internal_strnlen@@Base+0x2564>  // b.none
   46a1c:	ldr	x0, [sp, #88]
   46a20:	and	w0, w0, #0xff
   46a24:	and	w0, w0, #0x7
   46a28:	and	w0, w0, #0xff
   46a2c:	strb	w0, [sp, #67]
   46a30:	ldr	x0, [sp, #88]
   46a34:	lsr	x0, x0, #3
   46a38:	str	x0, [sp, #88]
   46a3c:	ldr	w0, [sp, #84]
   46a40:	sub	w0, w0, #0x3
   46a44:	str	w0, [sp, #84]
   46a48:	ldr	w0, [sp, #168]
   46a4c:	cmp	w0, #0xe
   46a50:	b.eq	46be0 <__asan_internal_strnlen@@Base+0x256c>  // b.none
   46a54:	ldr	x0, [sp, #88]
   46a58:	and	w0, w0, #0xff
   46a5c:	and	w0, w0, #0x7
   46a60:	and	w0, w0, #0xff
   46a64:	strb	w0, [sp, #77]
   46a68:	ldr	x0, [sp, #88]
   46a6c:	lsr	x0, x0, #3
   46a70:	str	x0, [sp, #88]
   46a74:	ldr	w0, [sp, #84]
   46a78:	sub	w0, w0, #0x3
   46a7c:	str	w0, [sp, #84]
   46a80:	ldr	w0, [sp, #168]
   46a84:	cmp	w0, #0xf
   46a88:	b.eq	46be8 <__asan_internal_strnlen@@Base+0x2574>  // b.none
   46a8c:	add	x2, sp, #0x54
   46a90:	add	x1, sp, #0x58
   46a94:	add	x0, sp, #0x38
   46a98:	mov	x3, x2
   46a9c:	mov	x2, x1
   46aa0:	ldr	x1, [sp, #192]
   46aa4:	bl	457c4 <__asan_internal_strnlen@@Base+0x1150>
   46aa8:	cmp	w0, #0x0
   46aac:	b.ne	46ab8 <__asan_internal_strnlen@@Base+0x2444>  // b.any
   46ab0:	mov	w0, #0x0                   	// #0
   46ab4:	b	471b4 <__asan_internal_strnlen@@Base+0x2b40>
   46ab8:	ldr	x0, [sp, #88]
   46abc:	and	w0, w0, #0xff
   46ac0:	and	w0, w0, #0x7
   46ac4:	and	w0, w0, #0xff
   46ac8:	strb	w0, [sp, #66]
   46acc:	ldr	x0, [sp, #88]
   46ad0:	lsr	x0, x0, #3
   46ad4:	str	x0, [sp, #88]
   46ad8:	ldr	w0, [sp, #84]
   46adc:	sub	w0, w0, #0x3
   46ae0:	str	w0, [sp, #84]
   46ae4:	ldr	w0, [sp, #168]
   46ae8:	cmp	w0, #0x10
   46aec:	b.eq	46bf0 <__asan_internal_strnlen@@Base+0x257c>  // b.none
   46af0:	ldr	x0, [sp, #88]
   46af4:	and	w0, w0, #0xff
   46af8:	and	w0, w0, #0x7
   46afc:	and	w0, w0, #0xff
   46b00:	strb	w0, [sp, #78]
   46b04:	ldr	x0, [sp, #88]
   46b08:	lsr	x0, x0, #3
   46b0c:	str	x0, [sp, #88]
   46b10:	ldr	w0, [sp, #84]
   46b14:	sub	w0, w0, #0x3
   46b18:	str	w0, [sp, #84]
   46b1c:	ldr	w0, [sp, #168]
   46b20:	cmp	w0, #0x11
   46b24:	b.eq	46bf8 <__asan_internal_strnlen@@Base+0x2584>  // b.none
   46b28:	ldr	x0, [sp, #88]
   46b2c:	and	w0, w0, #0xff
   46b30:	and	w0, w0, #0x7
   46b34:	and	w0, w0, #0xff
   46b38:	strb	w0, [sp, #65]
   46b3c:	ldr	x0, [sp, #88]
   46b40:	lsr	x0, x0, #3
   46b44:	str	x0, [sp, #88]
   46b48:	ldr	w0, [sp, #84]
   46b4c:	sub	w0, w0, #0x3
   46b50:	str	w0, [sp, #84]
   46b54:	ldr	w0, [sp, #168]
   46b58:	cmp	w0, #0x12
   46b5c:	b.eq	46c00 <__asan_internal_strnlen@@Base+0x258c>  // b.none
   46b60:	ldr	x0, [sp, #88]
   46b64:	and	w0, w0, #0xff
   46b68:	and	w0, w0, #0x7
   46b6c:	and	w0, w0, #0xff
   46b70:	strb	w0, [sp, #79]
   46b74:	ldr	x0, [sp, #88]
   46b78:	lsr	x0, x0, #3
   46b7c:	str	x0, [sp, #88]
   46b80:	ldr	w0, [sp, #84]
   46b84:	sub	w0, w0, #0x3
   46b88:	str	w0, [sp, #84]
   46b8c:	b	46c04 <__asan_internal_strnlen@@Base+0x2590>
   46b90:	nop
   46b94:	b	46c04 <__asan_internal_strnlen@@Base+0x2590>
   46b98:	nop
   46b9c:	b	46c04 <__asan_internal_strnlen@@Base+0x2590>
   46ba0:	nop
   46ba4:	b	46c04 <__asan_internal_strnlen@@Base+0x2590>
   46ba8:	nop
   46bac:	b	46c04 <__asan_internal_strnlen@@Base+0x2590>
   46bb0:	nop
   46bb4:	b	46c04 <__asan_internal_strnlen@@Base+0x2590>
   46bb8:	nop
   46bbc:	b	46c04 <__asan_internal_strnlen@@Base+0x2590>
   46bc0:	nop
   46bc4:	b	46c04 <__asan_internal_strnlen@@Base+0x2590>
   46bc8:	nop
   46bcc:	b	46c04 <__asan_internal_strnlen@@Base+0x2590>
   46bd0:	nop
   46bd4:	b	46c04 <__asan_internal_strnlen@@Base+0x2590>
   46bd8:	nop
   46bdc:	b	46c04 <__asan_internal_strnlen@@Base+0x2590>
   46be0:	nop
   46be4:	b	46c04 <__asan_internal_strnlen@@Base+0x2590>
   46be8:	nop
   46bec:	b	46c04 <__asan_internal_strnlen@@Base+0x2590>
   46bf0:	nop
   46bf4:	b	46c04 <__asan_internal_strnlen@@Base+0x2590>
   46bf8:	nop
   46bfc:	b	46c04 <__asan_internal_strnlen@@Base+0x2590>
   46c00:	nop
   46c04:	add	x0, sp, #0x40
   46c08:	ldr	x3, [sp, #40]
   46c0c:	ldr	x2, [sp, #40]
   46c10:	mov	x1, #0x13                  	// #19
   46c14:	bl	458b8 <__asan_internal_strnlen@@Base+0x1244>
   46c18:	cmp	w0, #0x0
   46c1c:	b.ne	46c28 <__asan_internal_strnlen@@Base+0x25b4>  // b.any
   46c20:	mov	w0, #0x0                   	// #0
   46c24:	b	471b4 <__asan_internal_strnlen@@Base+0x2b40>
   46c28:	ldr	x1, [sp, #40]
   46c2c:	mov	x0, #0x1278                	// #4728
   46c30:	add	x0, x1, x0
   46c34:	str	x0, [sp, #160]
   46c38:	ldr	x0, [sp, #160]
   46c3c:	str	x0, [sp, #224]
   46c40:	ldr	w1, [sp, #176]
   46c44:	ldr	w0, [sp, #172]
   46c48:	add	x0, x1, x0
   46c4c:	ldr	x1, [sp, #224]
   46c50:	add	x0, x1, x0
   46c54:	str	x0, [sp, #152]
   46c58:	b	470f4 <__asan_internal_strnlen@@Base+0x2a80>
   46c5c:	add	x2, sp, #0x54
   46c60:	add	x1, sp, #0x58
   46c64:	add	x0, sp, #0x38
   46c68:	mov	x3, x2
   46c6c:	mov	x2, x1
   46c70:	ldr	x1, [sp, #192]
   46c74:	bl	457c4 <__asan_internal_strnlen@@Base+0x1150>
   46c78:	cmp	w0, #0x0
   46c7c:	b.ne	46c88 <__asan_internal_strnlen@@Base+0x2614>  // b.any
   46c80:	mov	w0, #0x0                   	// #0
   46c84:	b	471b4 <__asan_internal_strnlen@@Base+0x2b40>
   46c88:	ldr	x0, [sp, #88]
   46c8c:	and	x0, x0, #0xff
   46c90:	lsl	x0, x0, #1
   46c94:	ldr	x1, [sp, #40]
   46c98:	add	x0, x1, x0
   46c9c:	ldrh	w0, [x0]
   46ca0:	strh	w0, [sp, #150]
   46ca4:	ldrh	w0, [sp, #150]
   46ca8:	and	w0, w0, #0x1000
   46cac:	cmp	w0, #0x0
   46cb0:	cset	w0, ne  // ne = any
   46cb4:	and	w0, w0, #0xff
   46cb8:	and	x0, x0, #0xff
   46cbc:	cmp	x0, #0x0
   46cc0:	b.eq	46cd0 <__asan_internal_strnlen@@Base+0x265c>  // b.none
   46cc4:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   46cc8:	mov	w0, #0x0                   	// #0
   46ccc:	b	471b4 <__asan_internal_strnlen@@Base+0x2b40>
   46cd0:	ldrh	w0, [sp, #150]
   46cd4:	lsr	w0, w0, #9
   46cd8:	and	w0, w0, #0xffff
   46cdc:	and	w0, w0, #0x7
   46ce0:	str	w0, [sp, #144]
   46ce4:	ldr	x1, [sp, #88]
   46ce8:	ldr	w0, [sp, #144]
   46cec:	add	w0, w0, #0x1
   46cf0:	lsr	x0, x1, x0
   46cf4:	str	x0, [sp, #88]
   46cf8:	ldr	w1, [sp, #84]
   46cfc:	ldr	w0, [sp, #144]
   46d00:	sub	w0, w1, w0
   46d04:	sub	w0, w0, #0x1
   46d08:	str	w0, [sp, #84]
   46d0c:	ldrh	w0, [sp, #150]
   46d10:	and	w0, w0, #0x1ff
   46d14:	strh	w0, [sp, #142]
   46d18:	ldrh	w0, [sp, #142]
   46d1c:	cmp	w0, #0xf
   46d20:	b.hi	46d40 <__asan_internal_strnlen@@Base+0x26cc>  // b.pmore
   46d24:	ldr	x0, [sp, #224]
   46d28:	add	x1, x0, #0x1
   46d2c:	str	x1, [sp, #224]
   46d30:	ldrh	w1, [sp, #142]
   46d34:	and	w1, w1, #0xff
   46d38:	strb	w1, [x0]
   46d3c:	b	470f4 <__asan_internal_strnlen@@Base+0x2a80>
   46d40:	ldrh	w0, [sp, #142]
   46d44:	cmp	w0, #0x10
   46d48:	b.ne	46eb0 <__asan_internal_strnlen@@Base+0x283c>  // b.any
   46d4c:	ldr	x1, [sp, #224]
   46d50:	ldr	x0, [sp, #160]
   46d54:	cmp	x1, x0
   46d58:	cset	w0, eq  // eq = none
   46d5c:	and	w0, w0, #0xff
   46d60:	and	x0, x0, #0xff
   46d64:	cmp	x0, #0x0
   46d68:	b.eq	46d78 <__asan_internal_strnlen@@Base+0x2704>  // b.none
   46d6c:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   46d70:	mov	w0, #0x0                   	// #0
   46d74:	b	471b4 <__asan_internal_strnlen@@Base+0x2b40>
   46d78:	ldr	x0, [sp, #88]
   46d7c:	and	w0, w0, #0x3
   46d80:	add	w0, w0, #0x3
   46d84:	str	w0, [sp, #128]
   46d88:	ldr	x0, [sp, #88]
   46d8c:	lsr	x0, x0, #2
   46d90:	str	x0, [sp, #88]
   46d94:	ldr	w0, [sp, #84]
   46d98:	sub	w0, w0, #0x2
   46d9c:	str	w0, [sp, #84]
   46da0:	ldr	x1, [sp, #152]
   46da4:	ldr	x0, [sp, #224]
   46da8:	sub	x0, x1, x0
   46dac:	mov	w1, w0
   46db0:	ldr	w0, [sp, #128]
   46db4:	cmp	w0, w1
   46db8:	cset	w0, hi  // hi = pmore
   46dbc:	and	w0, w0, #0xff
   46dc0:	and	x0, x0, #0xff
   46dc4:	cmp	x0, #0x0
   46dc8:	b.eq	46dd8 <__asan_internal_strnlen@@Base+0x2764>  // b.none
   46dcc:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   46dd0:	mov	w0, #0x0                   	// #0
   46dd4:	b	471b4 <__asan_internal_strnlen@@Base+0x2b40>
   46dd8:	ldr	x0, [sp, #224]
   46ddc:	sub	x0, x0, #0x1
   46de0:	ldrb	w0, [x0]
   46de4:	str	w0, [sp, #124]
   46de8:	ldr	w0, [sp, #128]
   46dec:	cmp	w0, #0x6
   46df0:	b.eq	46e1c <__asan_internal_strnlen@@Base+0x27a8>  // b.none
   46df4:	ldr	w0, [sp, #128]
   46df8:	cmp	w0, #0x6
   46dfc:	b.hi	46e64 <__asan_internal_strnlen@@Base+0x27f0>  // b.pmore
   46e00:	ldr	w0, [sp, #128]
   46e04:	cmp	w0, #0x4
   46e08:	b.eq	46e4c <__asan_internal_strnlen@@Base+0x27d8>  // b.none
   46e0c:	ldr	w0, [sp, #128]
   46e10:	cmp	w0, #0x5
   46e14:	b.eq	46e34 <__asan_internal_strnlen@@Base+0x27c0>  // b.none
   46e18:	b	46e64 <__asan_internal_strnlen@@Base+0x27f0>
   46e1c:	ldr	x0, [sp, #224]
   46e20:	add	x1, x0, #0x1
   46e24:	str	x1, [sp, #224]
   46e28:	ldr	w1, [sp, #124]
   46e2c:	and	w1, w1, #0xff
   46e30:	strb	w1, [x0]
   46e34:	ldr	x0, [sp, #224]
   46e38:	add	x1, x0, #0x1
   46e3c:	str	x1, [sp, #224]
   46e40:	ldr	w1, [sp, #124]
   46e44:	and	w1, w1, #0xff
   46e48:	strb	w1, [x0]
   46e4c:	ldr	x0, [sp, #224]
   46e50:	add	x1, x0, #0x1
   46e54:	str	x1, [sp, #224]
   46e58:	ldr	w1, [sp, #124]
   46e5c:	and	w1, w1, #0xff
   46e60:	strb	w1, [x0]
   46e64:	ldr	x0, [sp, #224]
   46e68:	add	x1, x0, #0x1
   46e6c:	str	x1, [sp, #224]
   46e70:	ldr	w1, [sp, #124]
   46e74:	and	w1, w1, #0xff
   46e78:	strb	w1, [x0]
   46e7c:	ldr	x0, [sp, #224]
   46e80:	add	x1, x0, #0x1
   46e84:	str	x1, [sp, #224]
   46e88:	ldr	w1, [sp, #124]
   46e8c:	and	w1, w1, #0xff
   46e90:	strb	w1, [x0]
   46e94:	ldr	x0, [sp, #224]
   46e98:	add	x1, x0, #0x1
   46e9c:	str	x1, [sp, #224]
   46ea0:	ldr	w1, [sp, #124]
   46ea4:	and	w1, w1, #0xff
   46ea8:	strb	w1, [x0]
   46eac:	b	470f4 <__asan_internal_strnlen@@Base+0x2a80>
   46eb0:	ldrh	w0, [sp, #142]
   46eb4:	cmp	w0, #0x11
   46eb8:	b.ne	47054 <__asan_internal_strnlen@@Base+0x29e0>  // b.any
   46ebc:	ldr	x0, [sp, #88]
   46ec0:	and	w0, w0, #0x7
   46ec4:	add	w0, w0, #0x3
   46ec8:	str	w0, [sp, #132]
   46ecc:	ldr	x0, [sp, #88]
   46ed0:	lsr	x0, x0, #3
   46ed4:	str	x0, [sp, #88]
   46ed8:	ldr	w0, [sp, #84]
   46edc:	sub	w0, w0, #0x3
   46ee0:	str	w0, [sp, #84]
   46ee4:	ldr	x1, [sp, #152]
   46ee8:	ldr	x0, [sp, #224]
   46eec:	sub	x0, x1, x0
   46ef0:	mov	w1, w0
   46ef4:	ldr	w0, [sp, #132]
   46ef8:	cmp	w0, w1
   46efc:	cset	w0, hi  // hi = pmore
   46f00:	and	w0, w0, #0xff
   46f04:	and	x0, x0, #0xff
   46f08:	cmp	x0, #0x0
   46f0c:	b.eq	46f1c <__asan_internal_strnlen@@Base+0x28a8>  // b.none
   46f10:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   46f14:	mov	w0, #0x0                   	// #0
   46f18:	b	471b4 <__asan_internal_strnlen@@Base+0x2b40>
   46f1c:	ldr	w0, [sp, #132]
   46f20:	cmp	w0, #0xa
   46f24:	b.eq	46fb0 <__asan_internal_strnlen@@Base+0x293c>  // b.none
   46f28:	ldr	w0, [sp, #132]
   46f2c:	cmp	w0, #0xa
   46f30:	b.hi	47020 <__asan_internal_strnlen@@Base+0x29ac>  // b.pmore
   46f34:	ldr	w0, [sp, #132]
   46f38:	cmp	w0, #0x9
   46f3c:	b.eq	46fc0 <__asan_internal_strnlen@@Base+0x294c>  // b.none
   46f40:	ldr	w0, [sp, #132]
   46f44:	cmp	w0, #0x9
   46f48:	b.hi	47020 <__asan_internal_strnlen@@Base+0x29ac>  // b.pmore
   46f4c:	ldr	w0, [sp, #132]
   46f50:	cmp	w0, #0x8
   46f54:	b.eq	46fd0 <__asan_internal_strnlen@@Base+0x295c>  // b.none
   46f58:	ldr	w0, [sp, #132]
   46f5c:	cmp	w0, #0x8
   46f60:	b.hi	47020 <__asan_internal_strnlen@@Base+0x29ac>  // b.pmore
   46f64:	ldr	w0, [sp, #132]
   46f68:	cmp	w0, #0x7
   46f6c:	b.eq	46fe0 <__asan_internal_strnlen@@Base+0x296c>  // b.none
   46f70:	ldr	w0, [sp, #132]
   46f74:	cmp	w0, #0x7
   46f78:	b.hi	47020 <__asan_internal_strnlen@@Base+0x29ac>  // b.pmore
   46f7c:	ldr	w0, [sp, #132]
   46f80:	cmp	w0, #0x6
   46f84:	b.eq	46ff0 <__asan_internal_strnlen@@Base+0x297c>  // b.none
   46f88:	ldr	w0, [sp, #132]
   46f8c:	cmp	w0, #0x6
   46f90:	b.hi	47020 <__asan_internal_strnlen@@Base+0x29ac>  // b.pmore
   46f94:	ldr	w0, [sp, #132]
   46f98:	cmp	w0, #0x4
   46f9c:	b.eq	47010 <__asan_internal_strnlen@@Base+0x299c>  // b.none
   46fa0:	ldr	w0, [sp, #132]
   46fa4:	cmp	w0, #0x5
   46fa8:	b.eq	47000 <__asan_internal_strnlen@@Base+0x298c>  // b.none
   46fac:	b	47020 <__asan_internal_strnlen@@Base+0x29ac>
   46fb0:	ldr	x0, [sp, #224]
   46fb4:	add	x1, x0, #0x1
   46fb8:	str	x1, [sp, #224]
   46fbc:	strb	wzr, [x0]
   46fc0:	ldr	x0, [sp, #224]
   46fc4:	add	x1, x0, #0x1
   46fc8:	str	x1, [sp, #224]
   46fcc:	strb	wzr, [x0]
   46fd0:	ldr	x0, [sp, #224]
   46fd4:	add	x1, x0, #0x1
   46fd8:	str	x1, [sp, #224]
   46fdc:	strb	wzr, [x0]
   46fe0:	ldr	x0, [sp, #224]
   46fe4:	add	x1, x0, #0x1
   46fe8:	str	x1, [sp, #224]
   46fec:	strb	wzr, [x0]
   46ff0:	ldr	x0, [sp, #224]
   46ff4:	add	x1, x0, #0x1
   46ff8:	str	x1, [sp, #224]
   46ffc:	strb	wzr, [x0]
   47000:	ldr	x0, [sp, #224]
   47004:	add	x1, x0, #0x1
   47008:	str	x1, [sp, #224]
   4700c:	strb	wzr, [x0]
   47010:	ldr	x0, [sp, #224]
   47014:	add	x1, x0, #0x1
   47018:	str	x1, [sp, #224]
   4701c:	strb	wzr, [x0]
   47020:	ldr	x0, [sp, #224]
   47024:	add	x1, x0, #0x1
   47028:	str	x1, [sp, #224]
   4702c:	strb	wzr, [x0]
   47030:	ldr	x0, [sp, #224]
   47034:	add	x1, x0, #0x1
   47038:	str	x1, [sp, #224]
   4703c:	strb	wzr, [x0]
   47040:	ldr	x0, [sp, #224]
   47044:	add	x1, x0, #0x1
   47048:	str	x1, [sp, #224]
   4704c:	strb	wzr, [x0]
   47050:	b	470f4 <__asan_internal_strnlen@@Base+0x2a80>
   47054:	ldrh	w0, [sp, #142]
   47058:	cmp	w0, #0x12
   4705c:	b.ne	470e8 <__asan_internal_strnlen@@Base+0x2a74>  // b.any
   47060:	ldr	x0, [sp, #88]
   47064:	and	w0, w0, #0x7f
   47068:	add	w0, w0, #0xb
   4706c:	str	w0, [sp, #136]
   47070:	ldr	x0, [sp, #88]
   47074:	lsr	x0, x0, #7
   47078:	str	x0, [sp, #88]
   4707c:	ldr	w0, [sp, #84]
   47080:	sub	w0, w0, #0x7
   47084:	str	w0, [sp, #84]
   47088:	ldr	x1, [sp, #152]
   4708c:	ldr	x0, [sp, #224]
   47090:	sub	x0, x1, x0
   47094:	mov	w1, w0
   47098:	ldr	w0, [sp, #136]
   4709c:	cmp	w0, w1
   470a0:	cset	w0, hi  // hi = pmore
   470a4:	and	w0, w0, #0xff
   470a8:	and	x0, x0, #0xff
   470ac:	cmp	x0, #0x0
   470b0:	b.eq	470c0 <__asan_internal_strnlen@@Base+0x2a4c>  // b.none
   470b4:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   470b8:	mov	w0, #0x0                   	// #0
   470bc:	b	471b4 <__asan_internal_strnlen@@Base+0x2b40>
   470c0:	ldr	w0, [sp, #136]
   470c4:	mov	x2, x0
   470c8:	mov	w1, #0x0                   	// #0
   470cc:	ldr	x0, [sp, #224]
   470d0:	bl	6770 <__asan_internal_memset@plt>
   470d4:	ldr	w0, [sp, #136]
   470d8:	ldr	x1, [sp, #224]
   470dc:	add	x0, x1, x0
   470e0:	str	x0, [sp, #224]
   470e4:	b	470f4 <__asan_internal_strnlen@@Base+0x2a80>
   470e8:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   470ec:	mov	w0, #0x0                   	// #0
   470f0:	b	471b4 <__asan_internal_strnlen@@Base+0x2b40>
   470f4:	ldr	x1, [sp, #224]
   470f8:	ldr	x0, [sp, #152]
   470fc:	cmp	x1, x0
   47100:	b.cc	46c5c <__asan_internal_strnlen@@Base+0x25e8>  // b.lo, b.ul, b.last
   47104:	ldr	x0, [sp, #160]
   47108:	str	x0, [sp, #224]
   4710c:	ldr	x0, [sp, #224]
   47110:	add	x0, x0, #0x100
   47114:	ldrb	w0, [x0]
   47118:	cmp	w0, #0x0
   4711c:	cset	w0, eq  // eq = none
   47120:	and	w0, w0, #0xff
   47124:	and	x0, x0, #0xff
   47128:	cmp	x0, #0x0
   4712c:	b.eq	4713c <__asan_internal_strnlen@@Base+0x2ac8>  // b.none
   47130:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   47134:	mov	w0, #0x0                   	// #0
   47138:	b	471b4 <__asan_internal_strnlen@@Base+0x2b40>
   4713c:	ldr	w0, [sp, #176]
   47140:	ldr	x3, [sp, #40]
   47144:	ldr	x2, [sp, #40]
   47148:	mov	x1, x0
   4714c:	ldr	x0, [sp, #224]
   47150:	bl	458b8 <__asan_internal_strnlen@@Base+0x1244>
   47154:	cmp	w0, #0x0
   47158:	b.ne	47164 <__asan_internal_strnlen@@Base+0x2af0>  // b.any
   4715c:	mov	w0, #0x0                   	// #0
   47160:	b	471b4 <__asan_internal_strnlen@@Base+0x2b40>
   47164:	ldr	w0, [sp, #176]
   47168:	ldr	x1, [sp, #224]
   4716c:	add	x4, x1, x0
   47170:	ldr	w1, [sp, #172]
   47174:	ldr	x0, [sp, #40]
   47178:	add	x0, x0, #0x800
   4717c:	mov	x3, x0
   47180:	ldr	x2, [sp, #40]
   47184:	mov	x0, x4
   47188:	bl	458b8 <__asan_internal_strnlen@@Base+0x1244>
   4718c:	cmp	w0, #0x0
   47190:	b.ne	4719c <__asan_internal_strnlen@@Base+0x2b28>  // b.any
   47194:	mov	w0, #0x0                   	// #0
   47198:	b	471b4 <__asan_internal_strnlen@@Base+0x2b40>
   4719c:	ldr	x0, [sp, #40]
   471a0:	str	x0, [sp, #240]
   471a4:	ldr	x0, [sp, #40]
   471a8:	add	x0, x0, #0x800
   471ac:	str	x0, [sp, #232]
   471b0:	b	471b8 <__asan_internal_strnlen@@Base+0x2b44>
   471b4:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   471b8:	add	x2, sp, #0x54
   471bc:	add	x1, sp, #0x58
   471c0:	add	x0, sp, #0x38
   471c4:	mov	x3, x2
   471c8:	mov	x2, x1
   471cc:	ldr	x1, [sp, #192]
   471d0:	bl	457c4 <__asan_internal_strnlen@@Base+0x1150>
   471d4:	cmp	w0, #0x0
   471d8:	b.ne	471e4 <__asan_internal_strnlen@@Base+0x2b70>  // b.any
   471dc:	mov	w0, #0x0                   	// #0
   471e0:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   471e4:	ldr	x0, [sp, #88]
   471e8:	and	x0, x0, #0xff
   471ec:	lsl	x0, x0, #1
   471f0:	ldr	x1, [sp, #240]
   471f4:	add	x0, x1, x0
   471f8:	ldrh	w0, [x0]
   471fc:	strh	w0, [sp, #122]
   47200:	ldrh	w0, [sp, #122]
   47204:	lsr	w0, w0, #9
   47208:	and	w0, w0, #0xffff
   4720c:	and	w0, w0, #0x7
   47210:	str	w0, [sp, #116]
   47214:	ldrh	w0, [sp, #122]
   47218:	and	w0, w0, #0x1ff
   4721c:	strh	w0, [sp, #114]
   47220:	ldrh	w0, [sp, #122]
   47224:	and	w0, w0, #0x1000
   47228:	cmp	w0, #0x0
   4722c:	b.ne	47264 <__asan_internal_strnlen@@Base+0x2bf0>  // b.any
   47230:	ldrh	w0, [sp, #114]
   47234:	str	w0, [sp, #220]
   47238:	ldr	x1, [sp, #88]
   4723c:	ldr	w0, [sp, #116]
   47240:	add	w0, w0, #0x1
   47244:	lsr	x0, x1, x0
   47248:	str	x0, [sp, #88]
   4724c:	ldr	w1, [sp, #84]
   47250:	ldr	w0, [sp, #116]
   47254:	sub	w0, w1, w0
   47258:	sub	w0, w0, #0x1
   4725c:	str	w0, [sp, #84]
   47260:	b	472f0 <__asan_internal_strnlen@@Base+0x2c7c>
   47264:	ldrh	w0, [sp, #114]
   47268:	add	w0, w0, #0x100
   4726c:	sxtw	x1, w0
   47270:	ldr	x0, [sp, #88]
   47274:	lsr	x2, x0, #8
   47278:	ldr	w0, [sp, #116]
   4727c:	mov	w3, #0x1                   	// #1
   47280:	lsl	w0, w3, w0
   47284:	sub	w0, w0, #0x1
   47288:	mov	w0, w0
   4728c:	and	x0, x2, x0
   47290:	add	x0, x1, x0
   47294:	lsl	x0, x0, #1
   47298:	ldr	x1, [sp, #240]
   4729c:	add	x0, x1, x0
   472a0:	ldrh	w0, [x0]
   472a4:	strh	w0, [sp, #122]
   472a8:	ldrh	w0, [sp, #122]
   472ac:	lsr	w0, w0, #9
   472b0:	and	w0, w0, #0xffff
   472b4:	and	w0, w0, #0x7
   472b8:	str	w0, [sp, #116]
   472bc:	ldrh	w0, [sp, #122]
   472c0:	and	w0, w0, #0x1ff
   472c4:	str	w0, [sp, #220]
   472c8:	ldr	x1, [sp, #88]
   472cc:	ldr	w0, [sp, #116]
   472d0:	add	w0, w0, #0x8
   472d4:	lsr	x0, x1, x0
   472d8:	str	x0, [sp, #88]
   472dc:	ldr	w1, [sp, #84]
   472e0:	ldr	w0, [sp, #116]
   472e4:	sub	w0, w1, w0
   472e8:	sub	w0, w0, #0x8
   472ec:	str	w0, [sp, #84]
   472f0:	ldr	w0, [sp, #220]
   472f4:	cmp	w0, #0xff
   472f8:	b.hi	4734c <__asan_internal_strnlen@@Base+0x2cd8>  // b.pmore
   472fc:	ldr	x1, [sp, #32]
   47300:	ldr	x0, [sp, #184]
   47304:	cmp	x1, x0
   47308:	cset	w0, eq  // eq = none
   4730c:	and	w0, w0, #0xff
   47310:	and	x0, x0, #0xff
   47314:	cmp	x0, #0x0
   47318:	b.eq	47328 <__asan_internal_strnlen@@Base+0x2cb4>  // b.none
   4731c:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   47320:	mov	w0, #0x0                   	// #0
   47324:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   47328:	ldr	x0, [sp, #32]
   4732c:	add	x1, x0, #0x1
   47330:	str	x1, [sp, #32]
   47334:	ldr	w1, [sp, #220]
   47338:	and	w1, w1, #0xff
   4733c:	strb	w1, [x0]
   47340:	ldr	x0, [sp, #32]
   47344:	prfm	pstl1keep, [x0]
   47348:	b	471b8 <__asan_internal_strnlen@@Base+0x2b44>
   4734c:	ldr	w0, [sp, #220]
   47350:	cmp	w0, #0x100
   47354:	b.ne	4735c <__asan_internal_strnlen@@Base+0x2ce8>  // b.any
   47358:	b	478a4 <__asan_internal_strnlen@@Base+0x3230>
   4735c:	ldr	w0, [sp, #220]
   47360:	cmp	w0, #0x108
   47364:	b.hi	47378 <__asan_internal_strnlen@@Base+0x2d04>  // b.pmore
   47368:	ldr	w0, [sp, #220]
   4736c:	sub	w0, w0, #0xfe
   47370:	str	w0, [sp, #212]
   47374:	b	4748c <__asan_internal_strnlen@@Base+0x2e18>
   47378:	ldr	w0, [sp, #220]
   4737c:	cmp	w0, #0x11d
   47380:	b.ne	47390 <__asan_internal_strnlen@@Base+0x2d1c>  // b.any
   47384:	mov	w0, #0x102                 	// #258
   47388:	str	w0, [sp, #212]
   4738c:	b	4748c <__asan_internal_strnlen@@Base+0x2e18>
   47390:	ldr	w0, [sp, #220]
   47394:	cmp	w0, #0x11d
   47398:	cset	w0, hi  // hi = pmore
   4739c:	and	w0, w0, #0xff
   473a0:	and	x0, x0, #0xff
   473a4:	cmp	x0, #0x0
   473a8:	b.eq	473b8 <__asan_internal_strnlen@@Base+0x2d44>  // b.none
   473ac:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   473b0:	mov	w0, #0x0                   	// #0
   473b4:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   473b8:	add	x2, sp, #0x54
   473bc:	add	x1, sp, #0x58
   473c0:	add	x0, sp, #0x38
   473c4:	mov	x3, x2
   473c8:	mov	x2, x1
   473cc:	ldr	x1, [sp, #192]
   473d0:	bl	457c4 <__asan_internal_strnlen@@Base+0x1150>
   473d4:	cmp	w0, #0x0
   473d8:	b.ne	473e4 <__asan_internal_strnlen@@Base+0x2d70>  // b.any
   473dc:	mov	w0, #0x0                   	// #0
   473e0:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   473e4:	ldr	w0, [sp, #220]
   473e8:	sub	w0, w0, #0x109
   473ec:	str	w0, [sp, #220]
   473f0:	ldr	w0, [sp, #220]
   473f4:	lsr	w0, w0, #2
   473f8:	add	w0, w0, #0x1
   473fc:	str	w0, [sp, #108]
   47400:	ldr	w0, [sp, #220]
   47404:	and	w1, w0, #0x3
   47408:	ldr	w0, [sp, #108]
   4740c:	lsl	w0, w1, w0
   47410:	str	w0, [sp, #212]
   47414:	ldr	w0, [sp, #212]
   47418:	add	w0, w0, #0xb
   4741c:	str	w0, [sp, #212]
   47420:	ldr	w0, [sp, #108]
   47424:	sub	w0, w0, #0x1
   47428:	mov	w1, #0x1                   	// #1
   4742c:	lsl	w0, w1, w0
   47430:	sub	w0, w0, #0x1
   47434:	lsl	w0, w0, #3
   47438:	ldr	w1, [sp, #212]
   4743c:	add	w0, w1, w0
   47440:	str	w0, [sp, #212]
   47444:	ldr	x0, [sp, #88]
   47448:	mov	w2, w0
   4744c:	ldr	w0, [sp, #108]
   47450:	mov	w1, #0xffffffff            	// #-1
   47454:	lsl	w0, w1, w0
   47458:	mvn	w0, w0
   4745c:	and	w0, w2, w0
   47460:	ldr	w1, [sp, #212]
   47464:	add	w0, w1, w0
   47468:	str	w0, [sp, #212]
   4746c:	ldr	x1, [sp, #88]
   47470:	ldr	w0, [sp, #108]
   47474:	lsr	x0, x1, x0
   47478:	str	x0, [sp, #88]
   4747c:	ldr	w1, [sp, #84]
   47480:	ldr	w0, [sp, #108]
   47484:	sub	w0, w1, w0
   47488:	str	w0, [sp, #84]
   4748c:	add	x2, sp, #0x54
   47490:	add	x1, sp, #0x58
   47494:	add	x0, sp, #0x38
   47498:	mov	x3, x2
   4749c:	mov	x2, x1
   474a0:	ldr	x1, [sp, #192]
   474a4:	bl	457c4 <__asan_internal_strnlen@@Base+0x1150>
   474a8:	cmp	w0, #0x0
   474ac:	b.ne	474b8 <__asan_internal_strnlen@@Base+0x2e44>  // b.any
   474b0:	mov	w0, #0x0                   	// #0
   474b4:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   474b8:	ldr	x0, [sp, #88]
   474bc:	and	x0, x0, #0xff
   474c0:	lsl	x0, x0, #1
   474c4:	ldr	x1, [sp, #232]
   474c8:	add	x0, x1, x0
   474cc:	ldrh	w0, [x0]
   474d0:	strh	w0, [sp, #122]
   474d4:	ldrh	w0, [sp, #122]
   474d8:	lsr	w0, w0, #9
   474dc:	and	w0, w0, #0xffff
   474e0:	and	w0, w0, #0x7
   474e4:	str	w0, [sp, #116]
   474e8:	ldrh	w0, [sp, #122]
   474ec:	and	w0, w0, #0x1ff
   474f0:	strh	w0, [sp, #114]
   474f4:	ldrh	w0, [sp, #122]
   474f8:	and	w0, w0, #0x1000
   474fc:	cmp	w0, #0x0
   47500:	b.ne	47538 <__asan_internal_strnlen@@Base+0x2ec4>  // b.any
   47504:	ldrh	w0, [sp, #114]
   47508:	str	w0, [sp, #216]
   4750c:	ldr	x1, [sp, #88]
   47510:	ldr	w0, [sp, #116]
   47514:	add	w0, w0, #0x1
   47518:	lsr	x0, x1, x0
   4751c:	str	x0, [sp, #88]
   47520:	ldr	w1, [sp, #84]
   47524:	ldr	w0, [sp, #116]
   47528:	sub	w0, w1, w0
   4752c:	sub	w0, w0, #0x1
   47530:	str	w0, [sp, #84]
   47534:	b	475c4 <__asan_internal_strnlen@@Base+0x2f50>
   47538:	ldrh	w0, [sp, #114]
   4753c:	add	w0, w0, #0x100
   47540:	sxtw	x1, w0
   47544:	ldr	x0, [sp, #88]
   47548:	lsr	x2, x0, #8
   4754c:	ldr	w0, [sp, #116]
   47550:	mov	w3, #0x1                   	// #1
   47554:	lsl	w0, w3, w0
   47558:	sub	w0, w0, #0x1
   4755c:	mov	w0, w0
   47560:	and	x0, x2, x0
   47564:	add	x0, x1, x0
   47568:	lsl	x0, x0, #1
   4756c:	ldr	x1, [sp, #232]
   47570:	add	x0, x1, x0
   47574:	ldrh	w0, [x0]
   47578:	strh	w0, [sp, #122]
   4757c:	ldrh	w0, [sp, #122]
   47580:	lsr	w0, w0, #9
   47584:	and	w0, w0, #0xffff
   47588:	and	w0, w0, #0x7
   4758c:	str	w0, [sp, #116]
   47590:	ldrh	w0, [sp, #122]
   47594:	and	w0, w0, #0x1ff
   47598:	str	w0, [sp, #216]
   4759c:	ldr	x1, [sp, #88]
   475a0:	ldr	w0, [sp, #116]
   475a4:	add	w0, w0, #0x8
   475a8:	lsr	x0, x1, x0
   475ac:	str	x0, [sp, #88]
   475b0:	ldr	w1, [sp, #84]
   475b4:	ldr	w0, [sp, #116]
   475b8:	sub	w0, w1, w0
   475bc:	sub	w0, w0, #0x8
   475c0:	str	w0, [sp, #84]
   475c4:	ldr	w0, [sp, #216]
   475c8:	cmp	w0, #0x0
   475cc:	b.ne	47668 <__asan_internal_strnlen@@Base+0x2ff4>  // b.any
   475d0:	ldr	x1, [sp, #32]
   475d4:	ldr	x0, [sp, #200]
   475d8:	cmp	x1, x0
   475dc:	cset	w0, eq  // eq = none
   475e0:	and	w0, w0, #0xff
   475e4:	and	x0, x0, #0xff
   475e8:	cmp	x0, #0x0
   475ec:	b.eq	475fc <__asan_internal_strnlen@@Base+0x2f88>  // b.none
   475f0:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   475f4:	mov	w0, #0x0                   	// #0
   475f8:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   475fc:	ldr	x1, [sp, #184]
   47600:	ldr	x0, [sp, #32]
   47604:	sub	x0, x1, x0
   47608:	mov	w1, w0
   4760c:	ldr	w0, [sp, #212]
   47610:	cmp	w0, w1
   47614:	cset	w0, hi  // hi = pmore
   47618:	and	w0, w0, #0xff
   4761c:	and	x0, x0, #0xff
   47620:	cmp	x0, #0x0
   47624:	b.eq	47634 <__asan_internal_strnlen@@Base+0x2fc0>  // b.none
   47628:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   4762c:	mov	w0, #0x0                   	// #0
   47630:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   47634:	ldr	x0, [sp, #32]
   47638:	sub	x0, x0, #0x1
   4763c:	ldrb	w0, [x0]
   47640:	mov	w1, w0
   47644:	ldr	w0, [sp, #212]
   47648:	mov	x2, x0
   4764c:	ldr	x0, [sp, #32]
   47650:	bl	6770 <__asan_internal_memset@plt>
   47654:	ldr	w0, [sp, #212]
   47658:	ldr	x1, [sp, #32]
   4765c:	add	x0, x1, x0
   47660:	str	x0, [sp, #32]
   47664:	b	471b8 <__asan_internal_strnlen@@Base+0x2b44>
   47668:	ldr	w0, [sp, #216]
   4766c:	cmp	w0, #0x1d
   47670:	cset	w0, hi  // hi = pmore
   47674:	and	w0, w0, #0xff
   47678:	and	x0, x0, #0xff
   4767c:	cmp	x0, #0x0
   47680:	b.eq	47690 <__asan_internal_strnlen@@Base+0x301c>  // b.none
   47684:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   47688:	mov	w0, #0x0                   	// #0
   4768c:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   47690:	ldr	w0, [sp, #216]
   47694:	cmp	w0, #0x3
   47698:	b.hi	476ac <__asan_internal_strnlen@@Base+0x3038>  // b.pmore
   4769c:	ldr	w0, [sp, #216]
   476a0:	add	w0, w0, #0x1
   476a4:	str	w0, [sp, #216]
   476a8:	b	47780 <__asan_internal_strnlen@@Base+0x310c>
   476ac:	add	x2, sp, #0x54
   476b0:	add	x1, sp, #0x58
   476b4:	add	x0, sp, #0x38
   476b8:	mov	x3, x2
   476bc:	mov	x2, x1
   476c0:	ldr	x1, [sp, #192]
   476c4:	bl	457c4 <__asan_internal_strnlen@@Base+0x1150>
   476c8:	cmp	w0, #0x0
   476cc:	b.ne	476d8 <__asan_internal_strnlen@@Base+0x3064>  // b.any
   476d0:	mov	w0, #0x0                   	// #0
   476d4:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   476d8:	ldr	w0, [sp, #216]
   476dc:	sub	w0, w0, #0x4
   476e0:	str	w0, [sp, #216]
   476e4:	ldr	w0, [sp, #216]
   476e8:	lsr	w0, w0, #1
   476ec:	add	w0, w0, #0x1
   476f0:	str	w0, [sp, #104]
   476f4:	ldr	w0, [sp, #216]
   476f8:	and	w1, w0, #0x1
   476fc:	ldr	w0, [sp, #104]
   47700:	lsl	w0, w1, w0
   47704:	str	w0, [sp, #216]
   47708:	ldr	w0, [sp, #216]
   4770c:	add	w0, w0, #0x5
   47710:	str	w0, [sp, #216]
   47714:	ldr	w0, [sp, #104]
   47718:	sub	w0, w0, #0x1
   4771c:	mov	w1, #0x1                   	// #1
   47720:	lsl	w0, w1, w0
   47724:	sub	w0, w0, #0x1
   47728:	lsl	w0, w0, #2
   4772c:	ldr	w1, [sp, #216]
   47730:	add	w0, w1, w0
   47734:	str	w0, [sp, #216]
   47738:	ldr	x0, [sp, #88]
   4773c:	mov	w2, w0
   47740:	ldr	w0, [sp, #104]
   47744:	mov	w1, #0xffffffff            	// #-1
   47748:	lsl	w0, w1, w0
   4774c:	mvn	w0, w0
   47750:	and	w0, w2, w0
   47754:	ldr	w1, [sp, #216]
   47758:	add	w0, w1, w0
   4775c:	str	w0, [sp, #216]
   47760:	ldr	x1, [sp, #88]
   47764:	ldr	w0, [sp, #104]
   47768:	lsr	x0, x1, x0
   4776c:	str	x0, [sp, #88]
   47770:	ldr	w1, [sp, #84]
   47774:	ldr	w0, [sp, #104]
   47778:	sub	w0, w1, w0
   4777c:	str	w0, [sp, #84]
   47780:	ldr	x1, [sp, #32]
   47784:	ldr	x0, [sp, #200]
   47788:	sub	x0, x1, x0
   4778c:	mov	w1, w0
   47790:	ldr	w0, [sp, #216]
   47794:	cmp	w0, w1
   47798:	cset	w0, hi  // hi = pmore
   4779c:	and	w0, w0, #0xff
   477a0:	and	x0, x0, #0xff
   477a4:	cmp	x0, #0x0
   477a8:	b.eq	477b8 <__asan_internal_strnlen@@Base+0x3144>  // b.none
   477ac:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   477b0:	mov	w0, #0x0                   	// #0
   477b4:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   477b8:	ldr	x1, [sp, #184]
   477bc:	ldr	x0, [sp, #32]
   477c0:	sub	x0, x1, x0
   477c4:	mov	w1, w0
   477c8:	ldr	w0, [sp, #212]
   477cc:	cmp	w0, w1
   477d0:	cset	w0, hi  // hi = pmore
   477d4:	and	w0, w0, #0xff
   477d8:	and	x0, x0, #0xff
   477dc:	cmp	x0, #0x0
   477e0:	b.eq	477f0 <__asan_internal_strnlen@@Base+0x317c>  // b.none
   477e4:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   477e8:	mov	w0, #0x0                   	// #0
   477ec:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   477f0:	ldr	w1, [sp, #216]
   477f4:	ldr	w0, [sp, #212]
   477f8:	cmp	w1, w0
   477fc:	b.cc	47894 <__asan_internal_strnlen@@Base+0x3220>  // b.lo, b.ul, b.last
   47800:	ldr	w0, [sp, #216]
   47804:	neg	x0, x0
   47808:	ldr	x1, [sp, #32]
   4780c:	add	x0, x1, x0
   47810:	ldr	w1, [sp, #212]
   47814:	mov	x2, x1
   47818:	mov	x1, x0
   4781c:	ldr	x0, [sp, #32]
   47820:	bl	66d0 <__asan_internal_memcpy@plt>
   47824:	ldr	w0, [sp, #212]
   47828:	ldr	x1, [sp, #32]
   4782c:	add	x0, x1, x0
   47830:	str	x0, [sp, #32]
   47834:	b	471b8 <__asan_internal_strnlen@@Base+0x2b44>
   47838:	ldr	w0, [sp, #212]
   4783c:	ldr	w2, [sp, #216]
   47840:	ldr	w1, [sp, #216]
   47844:	cmp	w2, w0
   47848:	csel	w0, w1, w0, ls  // ls = plast
   4784c:	str	w0, [sp, #100]
   47850:	ldr	w0, [sp, #216]
   47854:	neg	x0, x0
   47858:	ldr	x1, [sp, #32]
   4785c:	add	x0, x1, x0
   47860:	ldr	w1, [sp, #100]
   47864:	mov	x2, x1
   47868:	mov	x1, x0
   4786c:	ldr	x0, [sp, #32]
   47870:	bl	66d0 <__asan_internal_memcpy@plt>
   47874:	ldr	w1, [sp, #212]
   47878:	ldr	w0, [sp, #100]
   4787c:	sub	w0, w1, w0
   47880:	str	w0, [sp, #212]
   47884:	ldr	w0, [sp, #100]
   47888:	ldr	x1, [sp, #32]
   4788c:	add	x0, x1, x0
   47890:	str	x0, [sp, #32]
   47894:	ldr	w0, [sp, #212]
   47898:	cmp	w0, #0x0
   4789c:	b.ne	47838 <__asan_internal_strnlen@@Base+0x31c4>  // b.any
   478a0:	b	471b8 <__asan_internal_strnlen@@Base+0x2b44>
   478a4:	ldr	w0, [sp, #252]
   478a8:	cmp	w0, #0x0
   478ac:	b.eq	463a0 <__asan_internal_strnlen@@Base+0x1d2c>  // b.none
   478b0:	ldr	x0, [sp, #56]
   478b4:	ldr	x1, [sp, #192]
   478b8:	sub	x0, x1, x0
   478bc:	cmp	x0, #0x4
   478c0:	b.gt	46220 <__asan_internal_strnlen@@Base+0x1bac>
   478c4:	ldr	x1, [sp, #32]
   478c8:	ldr	x0, [sp, #184]
   478cc:	cmp	x1, x0
   478d0:	cset	w0, ne  // ne = any
   478d4:	and	w0, w0, #0xff
   478d8:	and	x0, x0, #0xff
   478dc:	cmp	x0, #0x0
   478e0:	b.eq	478f0 <__asan_internal_strnlen@@Base+0x327c>  // b.none
   478e4:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   478e8:	mov	w0, #0x0                   	// #0
   478ec:	b	478f4 <__asan_internal_strnlen@@Base+0x3280>
   478f0:	mov	w0, #0x1                   	// #1
   478f4:	ldp	x29, x30, [sp], #256
   478f8:	ret
   478fc:	stp	x29, x30, [sp, #-80]!
   47900:	mov	x29, sp
   47904:	str	x0, [sp, #40]
   47908:	str	x1, [sp, #32]
   4790c:	str	x2, [sp, #24]
   47910:	str	wzr, [sp, #72]
   47914:	str	wzr, [sp, #76]
   47918:	b	47948 <__asan_internal_strnlen@@Base+0x32d4>
   4791c:	ldr	w0, [sp, #72]
   47920:	lsl	w0, w0, #8
   47924:	ldr	w1, [sp, #76]
   47928:	ldr	x2, [sp, #40]
   4792c:	add	x1, x2, x1
   47930:	ldrb	w1, [x1]
   47934:	orr	w0, w0, w1
   47938:	str	w0, [sp, #72]
   4793c:	ldr	w0, [sp, #76]
   47940:	add	w0, w0, #0x1
   47944:	str	w0, [sp, #76]
   47948:	ldr	w0, [sp, #76]
   4794c:	cmp	w0, #0x3
   47950:	b.ls	4791c <__asan_internal_strnlen@@Base+0x32a8>  // b.plast
   47954:	mov	w0, #0x1                   	// #1
   47958:	str	w0, [sp, #60]
   4795c:	str	wzr, [sp, #56]
   47960:	ldr	x0, [sp, #32]
   47964:	str	x0, [sp, #64]
   47968:	ldr	x0, [sp, #24]
   4796c:	str	x0, [sp, #48]
   47970:	b	47cf8 <__asan_internal_strnlen@@Base+0x3684>
   47974:	str	wzr, [sp, #76]
   47978:	b	47c88 <__asan_internal_strnlen@@Base+0x3614>
   4797c:	ldr	x0, [sp, #64]
   47980:	add	x1, x0, #0x1
   47984:	str	x1, [sp, #64]
   47988:	ldrb	w0, [x0]
   4798c:	mov	w1, w0
   47990:	ldr	w0, [sp, #60]
   47994:	add	w0, w0, w1
   47998:	str	w0, [sp, #60]
   4799c:	ldr	w1, [sp, #56]
   479a0:	ldr	w0, [sp, #60]
   479a4:	add	w0, w1, w0
   479a8:	str	w0, [sp, #56]
   479ac:	ldr	x0, [sp, #64]
   479b0:	add	x1, x0, #0x1
   479b4:	str	x1, [sp, #64]
   479b8:	ldrb	w0, [x0]
   479bc:	mov	w1, w0
   479c0:	ldr	w0, [sp, #60]
   479c4:	add	w0, w0, w1
   479c8:	str	w0, [sp, #60]
   479cc:	ldr	w1, [sp, #56]
   479d0:	ldr	w0, [sp, #60]
   479d4:	add	w0, w1, w0
   479d8:	str	w0, [sp, #56]
   479dc:	ldr	x0, [sp, #64]
   479e0:	add	x1, x0, #0x1
   479e4:	str	x1, [sp, #64]
   479e8:	ldrb	w0, [x0]
   479ec:	mov	w1, w0
   479f0:	ldr	w0, [sp, #60]
   479f4:	add	w0, w0, w1
   479f8:	str	w0, [sp, #60]
   479fc:	ldr	w1, [sp, #56]
   47a00:	ldr	w0, [sp, #60]
   47a04:	add	w0, w1, w0
   47a08:	str	w0, [sp, #56]
   47a0c:	ldr	x0, [sp, #64]
   47a10:	add	x1, x0, #0x1
   47a14:	str	x1, [sp, #64]
   47a18:	ldrb	w0, [x0]
   47a1c:	mov	w1, w0
   47a20:	ldr	w0, [sp, #60]
   47a24:	add	w0, w0, w1
   47a28:	str	w0, [sp, #60]
   47a2c:	ldr	w1, [sp, #56]
   47a30:	ldr	w0, [sp, #60]
   47a34:	add	w0, w1, w0
   47a38:	str	w0, [sp, #56]
   47a3c:	ldr	x0, [sp, #64]
   47a40:	add	x1, x0, #0x1
   47a44:	str	x1, [sp, #64]
   47a48:	ldrb	w0, [x0]
   47a4c:	mov	w1, w0
   47a50:	ldr	w0, [sp, #60]
   47a54:	add	w0, w0, w1
   47a58:	str	w0, [sp, #60]
   47a5c:	ldr	w1, [sp, #56]
   47a60:	ldr	w0, [sp, #60]
   47a64:	add	w0, w1, w0
   47a68:	str	w0, [sp, #56]
   47a6c:	ldr	x0, [sp, #64]
   47a70:	add	x1, x0, #0x1
   47a74:	str	x1, [sp, #64]
   47a78:	ldrb	w0, [x0]
   47a7c:	mov	w1, w0
   47a80:	ldr	w0, [sp, #60]
   47a84:	add	w0, w0, w1
   47a88:	str	w0, [sp, #60]
   47a8c:	ldr	w1, [sp, #56]
   47a90:	ldr	w0, [sp, #60]
   47a94:	add	w0, w1, w0
   47a98:	str	w0, [sp, #56]
   47a9c:	ldr	x0, [sp, #64]
   47aa0:	add	x1, x0, #0x1
   47aa4:	str	x1, [sp, #64]
   47aa8:	ldrb	w0, [x0]
   47aac:	mov	w1, w0
   47ab0:	ldr	w0, [sp, #60]
   47ab4:	add	w0, w0, w1
   47ab8:	str	w0, [sp, #60]
   47abc:	ldr	w1, [sp, #56]
   47ac0:	ldr	w0, [sp, #60]
   47ac4:	add	w0, w1, w0
   47ac8:	str	w0, [sp, #56]
   47acc:	ldr	x0, [sp, #64]
   47ad0:	add	x1, x0, #0x1
   47ad4:	str	x1, [sp, #64]
   47ad8:	ldrb	w0, [x0]
   47adc:	mov	w1, w0
   47ae0:	ldr	w0, [sp, #60]
   47ae4:	add	w0, w0, w1
   47ae8:	str	w0, [sp, #60]
   47aec:	ldr	w1, [sp, #56]
   47af0:	ldr	w0, [sp, #60]
   47af4:	add	w0, w1, w0
   47af8:	str	w0, [sp, #56]
   47afc:	ldr	x0, [sp, #64]
   47b00:	add	x1, x0, #0x1
   47b04:	str	x1, [sp, #64]
   47b08:	ldrb	w0, [x0]
   47b0c:	mov	w1, w0
   47b10:	ldr	w0, [sp, #60]
   47b14:	add	w0, w0, w1
   47b18:	str	w0, [sp, #60]
   47b1c:	ldr	w1, [sp, #56]
   47b20:	ldr	w0, [sp, #60]
   47b24:	add	w0, w1, w0
   47b28:	str	w0, [sp, #56]
   47b2c:	ldr	x0, [sp, #64]
   47b30:	add	x1, x0, #0x1
   47b34:	str	x1, [sp, #64]
   47b38:	ldrb	w0, [x0]
   47b3c:	mov	w1, w0
   47b40:	ldr	w0, [sp, #60]
   47b44:	add	w0, w0, w1
   47b48:	str	w0, [sp, #60]
   47b4c:	ldr	w1, [sp, #56]
   47b50:	ldr	w0, [sp, #60]
   47b54:	add	w0, w1, w0
   47b58:	str	w0, [sp, #56]
   47b5c:	ldr	x0, [sp, #64]
   47b60:	add	x1, x0, #0x1
   47b64:	str	x1, [sp, #64]
   47b68:	ldrb	w0, [x0]
   47b6c:	mov	w1, w0
   47b70:	ldr	w0, [sp, #60]
   47b74:	add	w0, w0, w1
   47b78:	str	w0, [sp, #60]
   47b7c:	ldr	w1, [sp, #56]
   47b80:	ldr	w0, [sp, #60]
   47b84:	add	w0, w1, w0
   47b88:	str	w0, [sp, #56]
   47b8c:	ldr	x0, [sp, #64]
   47b90:	add	x1, x0, #0x1
   47b94:	str	x1, [sp, #64]
   47b98:	ldrb	w0, [x0]
   47b9c:	mov	w1, w0
   47ba0:	ldr	w0, [sp, #60]
   47ba4:	add	w0, w0, w1
   47ba8:	str	w0, [sp, #60]
   47bac:	ldr	w1, [sp, #56]
   47bb0:	ldr	w0, [sp, #60]
   47bb4:	add	w0, w1, w0
   47bb8:	str	w0, [sp, #56]
   47bbc:	ldr	x0, [sp, #64]
   47bc0:	add	x1, x0, #0x1
   47bc4:	str	x1, [sp, #64]
   47bc8:	ldrb	w0, [x0]
   47bcc:	mov	w1, w0
   47bd0:	ldr	w0, [sp, #60]
   47bd4:	add	w0, w0, w1
   47bd8:	str	w0, [sp, #60]
   47bdc:	ldr	w1, [sp, #56]
   47be0:	ldr	w0, [sp, #60]
   47be4:	add	w0, w1, w0
   47be8:	str	w0, [sp, #56]
   47bec:	ldr	x0, [sp, #64]
   47bf0:	add	x1, x0, #0x1
   47bf4:	str	x1, [sp, #64]
   47bf8:	ldrb	w0, [x0]
   47bfc:	mov	w1, w0
   47c00:	ldr	w0, [sp, #60]
   47c04:	add	w0, w0, w1
   47c08:	str	w0, [sp, #60]
   47c0c:	ldr	w1, [sp, #56]
   47c10:	ldr	w0, [sp, #60]
   47c14:	add	w0, w1, w0
   47c18:	str	w0, [sp, #56]
   47c1c:	ldr	x0, [sp, #64]
   47c20:	add	x1, x0, #0x1
   47c24:	str	x1, [sp, #64]
   47c28:	ldrb	w0, [x0]
   47c2c:	mov	w1, w0
   47c30:	ldr	w0, [sp, #60]
   47c34:	add	w0, w0, w1
   47c38:	str	w0, [sp, #60]
   47c3c:	ldr	w1, [sp, #56]
   47c40:	ldr	w0, [sp, #60]
   47c44:	add	w0, w1, w0
   47c48:	str	w0, [sp, #56]
   47c4c:	ldr	x0, [sp, #64]
   47c50:	add	x1, x0, #0x1
   47c54:	str	x1, [sp, #64]
   47c58:	ldrb	w0, [x0]
   47c5c:	mov	w1, w0
   47c60:	ldr	w0, [sp, #60]
   47c64:	add	w0, w0, w1
   47c68:	str	w0, [sp, #60]
   47c6c:	ldr	w1, [sp, #56]
   47c70:	ldr	w0, [sp, #60]
   47c74:	add	w0, w1, w0
   47c78:	str	w0, [sp, #56]
   47c7c:	ldr	w0, [sp, #76]
   47c80:	add	w0, w0, #0x10
   47c84:	str	w0, [sp, #76]
   47c88:	ldr	w1, [sp, #76]
   47c8c:	mov	w0, #0x15af                	// #5551
   47c90:	cmp	w1, w0
   47c94:	b.ls	4797c <__asan_internal_strnlen@@Base+0x3308>  // b.plast
   47c98:	ldr	x1, [sp, #48]
   47c9c:	mov	x0, #0xffffffffffffea50    	// #-5552
   47ca0:	add	x0, x1, x0
   47ca4:	str	x0, [sp, #48]
   47ca8:	ldr	w0, [sp, #60]
   47cac:	mov	w1, #0x8071                	// #32881
   47cb0:	movk	w1, #0x8007, lsl #16
   47cb4:	umull	x1, w0, w1
   47cb8:	lsr	x1, x1, #32
   47cbc:	lsr	w2, w1, #15
   47cc0:	mov	w1, #0xfff1                	// #65521
   47cc4:	mul	w1, w2, w1
   47cc8:	sub	w0, w0, w1
   47ccc:	str	w0, [sp, #60]
   47cd0:	ldr	w0, [sp, #56]
   47cd4:	mov	w1, #0x8071                	// #32881
   47cd8:	movk	w1, #0x8007, lsl #16
   47cdc:	umull	x1, w0, w1
   47ce0:	lsr	x1, x1, #32
   47ce4:	lsr	w2, w1, #15
   47ce8:	mov	w1, #0xfff1                	// #65521
   47cec:	mul	w1, w2, w1
   47cf0:	sub	w0, w0, w1
   47cf4:	str	w0, [sp, #56]
   47cf8:	ldr	x1, [sp, #48]
   47cfc:	mov	x0, #0x15af                	// #5551
   47d00:	cmp	x1, x0
   47d04:	b.hi	47974 <__asan_internal_strnlen@@Base+0x3300>  // b.pmore
   47d08:	b	48018 <__asan_internal_strnlen@@Base+0x39a4>
   47d0c:	ldr	x0, [sp, #64]
   47d10:	add	x1, x0, #0x1
   47d14:	str	x1, [sp, #64]
   47d18:	ldrb	w0, [x0]
   47d1c:	mov	w1, w0
   47d20:	ldr	w0, [sp, #60]
   47d24:	add	w0, w0, w1
   47d28:	str	w0, [sp, #60]
   47d2c:	ldr	w1, [sp, #56]
   47d30:	ldr	w0, [sp, #60]
   47d34:	add	w0, w1, w0
   47d38:	str	w0, [sp, #56]
   47d3c:	ldr	x0, [sp, #64]
   47d40:	add	x1, x0, #0x1
   47d44:	str	x1, [sp, #64]
   47d48:	ldrb	w0, [x0]
   47d4c:	mov	w1, w0
   47d50:	ldr	w0, [sp, #60]
   47d54:	add	w0, w0, w1
   47d58:	str	w0, [sp, #60]
   47d5c:	ldr	w1, [sp, #56]
   47d60:	ldr	w0, [sp, #60]
   47d64:	add	w0, w1, w0
   47d68:	str	w0, [sp, #56]
   47d6c:	ldr	x0, [sp, #64]
   47d70:	add	x1, x0, #0x1
   47d74:	str	x1, [sp, #64]
   47d78:	ldrb	w0, [x0]
   47d7c:	mov	w1, w0
   47d80:	ldr	w0, [sp, #60]
   47d84:	add	w0, w0, w1
   47d88:	str	w0, [sp, #60]
   47d8c:	ldr	w1, [sp, #56]
   47d90:	ldr	w0, [sp, #60]
   47d94:	add	w0, w1, w0
   47d98:	str	w0, [sp, #56]
   47d9c:	ldr	x0, [sp, #64]
   47da0:	add	x1, x0, #0x1
   47da4:	str	x1, [sp, #64]
   47da8:	ldrb	w0, [x0]
   47dac:	mov	w1, w0
   47db0:	ldr	w0, [sp, #60]
   47db4:	add	w0, w0, w1
   47db8:	str	w0, [sp, #60]
   47dbc:	ldr	w1, [sp, #56]
   47dc0:	ldr	w0, [sp, #60]
   47dc4:	add	w0, w1, w0
   47dc8:	str	w0, [sp, #56]
   47dcc:	ldr	x0, [sp, #64]
   47dd0:	add	x1, x0, #0x1
   47dd4:	str	x1, [sp, #64]
   47dd8:	ldrb	w0, [x0]
   47ddc:	mov	w1, w0
   47de0:	ldr	w0, [sp, #60]
   47de4:	add	w0, w0, w1
   47de8:	str	w0, [sp, #60]
   47dec:	ldr	w1, [sp, #56]
   47df0:	ldr	w0, [sp, #60]
   47df4:	add	w0, w1, w0
   47df8:	str	w0, [sp, #56]
   47dfc:	ldr	x0, [sp, #64]
   47e00:	add	x1, x0, #0x1
   47e04:	str	x1, [sp, #64]
   47e08:	ldrb	w0, [x0]
   47e0c:	mov	w1, w0
   47e10:	ldr	w0, [sp, #60]
   47e14:	add	w0, w0, w1
   47e18:	str	w0, [sp, #60]
   47e1c:	ldr	w1, [sp, #56]
   47e20:	ldr	w0, [sp, #60]
   47e24:	add	w0, w1, w0
   47e28:	str	w0, [sp, #56]
   47e2c:	ldr	x0, [sp, #64]
   47e30:	add	x1, x0, #0x1
   47e34:	str	x1, [sp, #64]
   47e38:	ldrb	w0, [x0]
   47e3c:	mov	w1, w0
   47e40:	ldr	w0, [sp, #60]
   47e44:	add	w0, w0, w1
   47e48:	str	w0, [sp, #60]
   47e4c:	ldr	w1, [sp, #56]
   47e50:	ldr	w0, [sp, #60]
   47e54:	add	w0, w1, w0
   47e58:	str	w0, [sp, #56]
   47e5c:	ldr	x0, [sp, #64]
   47e60:	add	x1, x0, #0x1
   47e64:	str	x1, [sp, #64]
   47e68:	ldrb	w0, [x0]
   47e6c:	mov	w1, w0
   47e70:	ldr	w0, [sp, #60]
   47e74:	add	w0, w0, w1
   47e78:	str	w0, [sp, #60]
   47e7c:	ldr	w1, [sp, #56]
   47e80:	ldr	w0, [sp, #60]
   47e84:	add	w0, w1, w0
   47e88:	str	w0, [sp, #56]
   47e8c:	ldr	x0, [sp, #64]
   47e90:	add	x1, x0, #0x1
   47e94:	str	x1, [sp, #64]
   47e98:	ldrb	w0, [x0]
   47e9c:	mov	w1, w0
   47ea0:	ldr	w0, [sp, #60]
   47ea4:	add	w0, w0, w1
   47ea8:	str	w0, [sp, #60]
   47eac:	ldr	w1, [sp, #56]
   47eb0:	ldr	w0, [sp, #60]
   47eb4:	add	w0, w1, w0
   47eb8:	str	w0, [sp, #56]
   47ebc:	ldr	x0, [sp, #64]
   47ec0:	add	x1, x0, #0x1
   47ec4:	str	x1, [sp, #64]
   47ec8:	ldrb	w0, [x0]
   47ecc:	mov	w1, w0
   47ed0:	ldr	w0, [sp, #60]
   47ed4:	add	w0, w0, w1
   47ed8:	str	w0, [sp, #60]
   47edc:	ldr	w1, [sp, #56]
   47ee0:	ldr	w0, [sp, #60]
   47ee4:	add	w0, w1, w0
   47ee8:	str	w0, [sp, #56]
   47eec:	ldr	x0, [sp, #64]
   47ef0:	add	x1, x0, #0x1
   47ef4:	str	x1, [sp, #64]
   47ef8:	ldrb	w0, [x0]
   47efc:	mov	w1, w0
   47f00:	ldr	w0, [sp, #60]
   47f04:	add	w0, w0, w1
   47f08:	str	w0, [sp, #60]
   47f0c:	ldr	w1, [sp, #56]
   47f10:	ldr	w0, [sp, #60]
   47f14:	add	w0, w1, w0
   47f18:	str	w0, [sp, #56]
   47f1c:	ldr	x0, [sp, #64]
   47f20:	add	x1, x0, #0x1
   47f24:	str	x1, [sp, #64]
   47f28:	ldrb	w0, [x0]
   47f2c:	mov	w1, w0
   47f30:	ldr	w0, [sp, #60]
   47f34:	add	w0, w0, w1
   47f38:	str	w0, [sp, #60]
   47f3c:	ldr	w1, [sp, #56]
   47f40:	ldr	w0, [sp, #60]
   47f44:	add	w0, w1, w0
   47f48:	str	w0, [sp, #56]
   47f4c:	ldr	x0, [sp, #64]
   47f50:	add	x1, x0, #0x1
   47f54:	str	x1, [sp, #64]
   47f58:	ldrb	w0, [x0]
   47f5c:	mov	w1, w0
   47f60:	ldr	w0, [sp, #60]
   47f64:	add	w0, w0, w1
   47f68:	str	w0, [sp, #60]
   47f6c:	ldr	w1, [sp, #56]
   47f70:	ldr	w0, [sp, #60]
   47f74:	add	w0, w1, w0
   47f78:	str	w0, [sp, #56]
   47f7c:	ldr	x0, [sp, #64]
   47f80:	add	x1, x0, #0x1
   47f84:	str	x1, [sp, #64]
   47f88:	ldrb	w0, [x0]
   47f8c:	mov	w1, w0
   47f90:	ldr	w0, [sp, #60]
   47f94:	add	w0, w0, w1
   47f98:	str	w0, [sp, #60]
   47f9c:	ldr	w1, [sp, #56]
   47fa0:	ldr	w0, [sp, #60]
   47fa4:	add	w0, w1, w0
   47fa8:	str	w0, [sp, #56]
   47fac:	ldr	x0, [sp, #64]
   47fb0:	add	x1, x0, #0x1
   47fb4:	str	x1, [sp, #64]
   47fb8:	ldrb	w0, [x0]
   47fbc:	mov	w1, w0
   47fc0:	ldr	w0, [sp, #60]
   47fc4:	add	w0, w0, w1
   47fc8:	str	w0, [sp, #60]
   47fcc:	ldr	w1, [sp, #56]
   47fd0:	ldr	w0, [sp, #60]
   47fd4:	add	w0, w1, w0
   47fd8:	str	w0, [sp, #56]
   47fdc:	ldr	x0, [sp, #64]
   47fe0:	add	x1, x0, #0x1
   47fe4:	str	x1, [sp, #64]
   47fe8:	ldrb	w0, [x0]
   47fec:	mov	w1, w0
   47ff0:	ldr	w0, [sp, #60]
   47ff4:	add	w0, w0, w1
   47ff8:	str	w0, [sp, #60]
   47ffc:	ldr	w1, [sp, #56]
   48000:	ldr	w0, [sp, #60]
   48004:	add	w0, w1, w0
   48008:	str	w0, [sp, #56]
   4800c:	ldr	x0, [sp, #48]
   48010:	sub	x0, x0, #0x10
   48014:	str	x0, [sp, #48]
   48018:	ldr	x0, [sp, #48]
   4801c:	cmp	x0, #0xf
   48020:	b.hi	47d0c <__asan_internal_strnlen@@Base+0x3698>  // b.pmore
   48024:	str	wzr, [sp, #76]
   48028:	b	48068 <__asan_internal_strnlen@@Base+0x39f4>
   4802c:	ldr	x0, [sp, #64]
   48030:	add	x1, x0, #0x1
   48034:	str	x1, [sp, #64]
   48038:	ldrb	w0, [x0]
   4803c:	mov	w1, w0
   48040:	ldr	w0, [sp, #60]
   48044:	add	w0, w0, w1
   48048:	str	w0, [sp, #60]
   4804c:	ldr	w1, [sp, #56]
   48050:	ldr	w0, [sp, #60]
   48054:	add	w0, w1, w0
   48058:	str	w0, [sp, #56]
   4805c:	ldr	w0, [sp, #76]
   48060:	add	w0, w0, #0x1
   48064:	str	w0, [sp, #76]
   48068:	ldr	w0, [sp, #76]
   4806c:	ldr	x1, [sp, #48]
   48070:	cmp	x1, x0
   48074:	b.hi	4802c <__asan_internal_strnlen@@Base+0x39b8>  // b.pmore
   48078:	ldr	w0, [sp, #60]
   4807c:	mov	w1, #0x8071                	// #32881
   48080:	movk	w1, #0x8007, lsl #16
   48084:	umull	x1, w0, w1
   48088:	lsr	x1, x1, #32
   4808c:	lsr	w2, w1, #15
   48090:	mov	w1, #0xfff1                	// #65521
   48094:	mul	w1, w2, w1
   48098:	sub	w0, w0, w1
   4809c:	str	w0, [sp, #60]
   480a0:	ldr	w0, [sp, #56]
   480a4:	mov	w1, #0x8071                	// #32881
   480a8:	movk	w1, #0x8007, lsl #16
   480ac:	umull	x1, w0, w1
   480b0:	lsr	x1, x1, #32
   480b4:	lsr	w2, w1, #15
   480b8:	mov	w1, #0xfff1                	// #65521
   480bc:	mul	w1, w2, w1
   480c0:	sub	w0, w0, w1
   480c4:	str	w0, [sp, #56]
   480c8:	ldr	w0, [sp, #56]
   480cc:	lsl	w1, w0, #16
   480d0:	ldr	w0, [sp, #60]
   480d4:	add	w0, w1, w0
   480d8:	ldr	w1, [sp, #72]
   480dc:	cmp	w1, w0
   480e0:	cset	w0, ne  // ne = any
   480e4:	and	w0, w0, #0xff
   480e8:	and	x0, x0, #0xff
   480ec:	cmp	x0, #0x0
   480f0:	b.eq	48100 <__asan_internal_strnlen@@Base+0x3a8c>  // b.none
   480f4:	bl	457bc <__asan_internal_strnlen@@Base+0x1148>
   480f8:	mov	w0, #0x0                   	// #0
   480fc:	b	48104 <__asan_internal_strnlen@@Base+0x3a90>
   48100:	mov	w0, #0x1                   	// #1
   48104:	ldp	x29, x30, [sp], #80
   48108:	ret
   4810c:	stp	x29, x30, [sp, #-64]!
   48110:	mov	x29, sp
   48114:	str	x0, [sp, #56]
   48118:	str	x1, [sp, #48]
   4811c:	str	x2, [sp, #40]
   48120:	str	x3, [sp, #32]
   48124:	str	x4, [sp, #24]
   48128:	ldr	x4, [sp, #24]
   4812c:	ldr	x3, [sp, #32]
   48130:	ldr	x2, [sp, #40]
   48134:	ldr	x1, [sp, #48]
   48138:	ldr	x0, [sp, #56]
   4813c:	bl	461d8 <__asan_internal_strnlen@@Base+0x1b64>
   48140:	cmp	w0, #0x0
   48144:	b.ne	48150 <__asan_internal_strnlen@@Base+0x3adc>  // b.any
   48148:	mov	w0, #0x0                   	// #0
   4814c:	b	48180 <__asan_internal_strnlen@@Base+0x3b0c>
   48150:	ldr	x0, [sp, #48]
   48154:	sub	x0, x0, #0x4
   48158:	ldr	x1, [sp, #56]
   4815c:	add	x0, x1, x0
   48160:	ldr	x2, [sp, #24]
   48164:	ldr	x1, [sp, #32]
   48168:	bl	478fc <__asan_internal_strnlen@@Base+0x3288>
   4816c:	cmp	w0, #0x0
   48170:	b.ne	4817c <__asan_internal_strnlen@@Base+0x3b08>  // b.any
   48174:	mov	w0, #0x0                   	// #0
   48178:	b	48180 <__asan_internal_strnlen@@Base+0x3b0c>
   4817c:	mov	w0, #0x1                   	// #1
   48180:	ldp	x29, x30, [sp], #64
   48184:	ret
   48188:	stp	x29, x30, [sp, #-112]!
   4818c:	mov	x29, sp
   48190:	str	x0, [sp, #72]
   48194:	str	x1, [sp, #64]
   48198:	str	x2, [sp, #56]
   4819c:	str	x3, [sp, #48]
   481a0:	str	x4, [sp, #40]
   481a4:	str	x5, [sp, #32]
   481a8:	str	x6, [sp, #24]
   481ac:	str	x7, [sp, #16]
   481b0:	ldr	x0, [sp, #24]
   481b4:	str	xzr, [x0]
   481b8:	ldr	x0, [sp, #16]
   481bc:	str	xzr, [x0]
   481c0:	ldr	x0, [sp, #56]
   481c4:	cmp	x0, #0xb
   481c8:	b.ls	481e8 <__asan_internal_strnlen@@Base+0x3b74>  // b.plast
   481cc:	mov	x2, #0x4                   	// #4
   481d0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   481d4:	add	x1, x0, #0xdf0
   481d8:	ldr	x0, [sp, #64]
   481dc:	bl	6b30 <__asan_internal_memcmp@plt>
   481e0:	cmp	w0, #0x0
   481e4:	b.eq	481f0 <__asan_internal_strnlen@@Base+0x3b7c>  // b.none
   481e8:	mov	w0, #0x1                   	// #1
   481ec:	b	482f0 <__asan_internal_strnlen@@Base+0x3c7c>
   481f0:	str	xzr, [sp, #104]
   481f4:	str	xzr, [sp, #96]
   481f8:	b	48230 <__asan_internal_strnlen@@Base+0x3bbc>
   481fc:	ldr	x0, [sp, #104]
   48200:	lsl	x1, x0, #8
   48204:	ldr	x0, [sp, #96]
   48208:	add	x0, x0, #0x4
   4820c:	ldr	x2, [sp, #64]
   48210:	add	x0, x2, x0
   48214:	ldrb	w0, [x0]
   48218:	and	x0, x0, #0xff
   4821c:	orr	x0, x1, x0
   48220:	str	x0, [sp, #104]
   48224:	ldr	x0, [sp, #96]
   48228:	add	x0, x0, #0x1
   4822c:	str	x0, [sp, #96]
   48230:	ldr	x0, [sp, #96]
   48234:	cmp	x0, #0x7
   48238:	b.ls	481fc <__asan_internal_strnlen@@Base+0x3b88>  // b.plast
   4823c:	ldr	x0, [sp, #24]
   48240:	ldr	x0, [x0]
   48244:	cmp	x0, #0x0
   48248:	b.eq	48270 <__asan_internal_strnlen@@Base+0x3bfc>  // b.none
   4824c:	ldr	x0, [sp, #16]
   48250:	ldr	x0, [x0]
   48254:	ldr	x1, [sp, #104]
   48258:	cmp	x1, x0
   4825c:	b.hi	48270 <__asan_internal_strnlen@@Base+0x3bfc>  // b.pmore
   48260:	ldr	x0, [sp, #24]
   48264:	ldr	x0, [x0]
   48268:	str	x0, [sp, #88]
   4826c:	b	4829c <__asan_internal_strnlen@@Base+0x3c28>
   48270:	ldr	x3, [sp, #32]
   48274:	ldr	x2, [sp, #40]
   48278:	ldr	x1, [sp, #104]
   4827c:	ldr	x0, [sp, #72]
   48280:	bl	67f0 <__asan_backtrace_alloc@plt>
   48284:	str	x0, [sp, #88]
   48288:	ldr	x0, [sp, #88]
   4828c:	cmp	x0, #0x0
   48290:	b.ne	4829c <__asan_internal_strnlen@@Base+0x3c28>  // b.any
   48294:	mov	w0, #0x0                   	// #0
   48298:	b	482f0 <__asan_internal_strnlen@@Base+0x3c7c>
   4829c:	ldr	x0, [sp, #64]
   482a0:	add	x5, x0, #0xc
   482a4:	ldr	x0, [sp, #56]
   482a8:	sub	x0, x0, #0xc
   482ac:	ldr	x4, [sp, #104]
   482b0:	ldr	x3, [sp, #88]
   482b4:	ldr	x2, [sp, #48]
   482b8:	mov	x1, x0
   482bc:	mov	x0, x5
   482c0:	bl	4810c <__asan_internal_strnlen@@Base+0x3a98>
   482c4:	cmp	w0, #0x0
   482c8:	b.ne	482d4 <__asan_internal_strnlen@@Base+0x3c60>  // b.any
   482cc:	mov	w0, #0x1                   	// #1
   482d0:	b	482f0 <__asan_internal_strnlen@@Base+0x3c7c>
   482d4:	ldr	x0, [sp, #24]
   482d8:	ldr	x1, [sp, #88]
   482dc:	str	x1, [x0]
   482e0:	ldr	x0, [sp, #16]
   482e4:	ldr	x1, [sp, #104]
   482e8:	str	x1, [x0]
   482ec:	mov	w0, #0x1                   	// #1
   482f0:	ldp	x29, x30, [sp], #112
   482f4:	ret
   482f8:	stp	x29, x30, [sp, #-96]!
   482fc:	mov	x29, sp
   48300:	str	x0, [sp, #72]
   48304:	str	x1, [sp, #64]
   48308:	str	x2, [sp, #56]
   4830c:	str	x3, [sp, #48]
   48310:	str	x4, [sp, #40]
   48314:	str	x5, [sp, #32]
   48318:	str	x6, [sp, #24]
   4831c:	str	x7, [sp, #16]
   48320:	ldr	x0, [sp, #24]
   48324:	str	xzr, [x0]
   48328:	ldr	x0, [sp, #16]
   4832c:	str	xzr, [x0]
   48330:	ldr	x0, [sp, #56]
   48334:	cmp	x0, #0x17
   48338:	b.hi	48344 <__asan_internal_strnlen@@Base+0x3cd0>  // b.pmore
   4833c:	mov	w0, #0x1                   	// #1
   48340:	b	4842c <__asan_internal_strnlen@@Base+0x3db8>
   48344:	ldr	x0, [sp, #64]
   48348:	str	x0, [sp, #80]
   4834c:	ldr	x0, [sp, #80]
   48350:	ldr	w0, [x0]
   48354:	cmp	w0, #0x1
   48358:	b.eq	48364 <__asan_internal_strnlen@@Base+0x3cf0>  // b.none
   4835c:	mov	w0, #0x1                   	// #1
   48360:	b	4842c <__asan_internal_strnlen@@Base+0x3db8>
   48364:	ldr	x0, [sp, #24]
   48368:	ldr	x0, [x0]
   4836c:	cmp	x0, #0x0
   48370:	b.eq	4839c <__asan_internal_strnlen@@Base+0x3d28>  // b.none
   48374:	ldr	x0, [sp, #16]
   48378:	ldr	x1, [x0]
   4837c:	ldr	x0, [sp, #80]
   48380:	ldr	x0, [x0, #8]
   48384:	cmp	x1, x0
   48388:	b.cc	4839c <__asan_internal_strnlen@@Base+0x3d28>  // b.lo, b.ul, b.last
   4838c:	ldr	x0, [sp, #24]
   48390:	ldr	x0, [x0]
   48394:	str	x0, [sp, #88]
   48398:	b	483d0 <__asan_internal_strnlen@@Base+0x3d5c>
   4839c:	ldr	x0, [sp, #80]
   483a0:	ldr	x0, [x0, #8]
   483a4:	ldr	x3, [sp, #32]
   483a8:	ldr	x2, [sp, #40]
   483ac:	mov	x1, x0
   483b0:	ldr	x0, [sp, #72]
   483b4:	bl	67f0 <__asan_backtrace_alloc@plt>
   483b8:	str	x0, [sp, #88]
   483bc:	ldr	x0, [sp, #88]
   483c0:	cmp	x0, #0x0
   483c4:	b.ne	483d0 <__asan_internal_strnlen@@Base+0x3d5c>  // b.any
   483c8:	mov	w0, #0x0                   	// #0
   483cc:	b	4842c <__asan_internal_strnlen@@Base+0x3db8>
   483d0:	ldr	x0, [sp, #64]
   483d4:	add	x5, x0, #0x18
   483d8:	ldr	x0, [sp, #56]
   483dc:	sub	x1, x0, #0x18
   483e0:	ldr	x0, [sp, #80]
   483e4:	ldr	x0, [x0, #8]
   483e8:	mov	x4, x0
   483ec:	ldr	x3, [sp, #88]
   483f0:	ldr	x2, [sp, #48]
   483f4:	mov	x0, x5
   483f8:	bl	4810c <__asan_internal_strnlen@@Base+0x3a98>
   483fc:	cmp	w0, #0x0
   48400:	b.ne	4840c <__asan_internal_strnlen@@Base+0x3d98>  // b.any
   48404:	mov	w0, #0x1                   	// #1
   48408:	b	4842c <__asan_internal_strnlen@@Base+0x3db8>
   4840c:	ldr	x0, [sp, #24]
   48410:	ldr	x1, [sp, #88]
   48414:	str	x1, [x0]
   48418:	ldr	x0, [sp, #80]
   4841c:	ldr	x1, [x0, #8]
   48420:	ldr	x0, [sp, #16]
   48424:	str	x1, [x0]
   48428:	mov	w0, #0x1                   	// #1
   4842c:	ldp	x29, x30, [sp], #96
   48430:	ret

0000000000048434 <__asan_backtrace_uncompress_zdebug@@Base>:
   48434:	stp	x29, x30, [sp, #-96]!
   48438:	mov	x29, sp
   4843c:	str	x0, [sp, #72]
   48440:	str	x1, [sp, #64]
   48444:	str	x2, [sp, #56]
   48448:	str	x3, [sp, #48]
   4844c:	str	x4, [sp, #40]
   48450:	str	x5, [sp, #32]
   48454:	str	x6, [sp, #24]
   48458:	ldr	x3, [sp, #40]
   4845c:	ldr	x2, [sp, #48]
   48460:	mov	x1, #0x13b4                	// #5044
   48464:	ldr	x0, [sp, #72]
   48468:	bl	67f0 <__asan_backtrace_alloc@plt>
   4846c:	str	x0, [sp, #88]
   48470:	ldr	x0, [sp, #88]
   48474:	cmp	x0, #0x0
   48478:	b.ne	48484 <__asan_backtrace_uncompress_zdebug@@Base+0x50>  // b.any
   4847c:	mov	w0, #0x0                   	// #0
   48480:	b	484c8 <__asan_backtrace_uncompress_zdebug@@Base+0x94>
   48484:	ldr	x7, [sp, #24]
   48488:	ldr	x6, [sp, #32]
   4848c:	ldr	x5, [sp, #40]
   48490:	ldr	x4, [sp, #48]
   48494:	ldr	x3, [sp, #88]
   48498:	ldr	x2, [sp, #56]
   4849c:	ldr	x1, [sp, #64]
   484a0:	ldr	x0, [sp, #72]
   484a4:	bl	48188 <__asan_internal_strnlen@@Base+0x3b14>
   484a8:	str	w0, [sp, #84]
   484ac:	ldr	x4, [sp, #40]
   484b0:	ldr	x3, [sp, #48]
   484b4:	mov	x2, #0x13b4                	// #5044
   484b8:	ldr	x1, [sp, #88]
   484bc:	ldr	x0, [sp, #72]
   484c0:	bl	6ac0 <__asan_backtrace_free@plt>
   484c4:	ldr	w0, [sp, #84]
   484c8:	ldp	x29, x30, [sp], #96
   484cc:	ret
   484d0:	sub	sp, sp, #0x4c0
   484d4:	stp	x29, x30, [sp, #80]
   484d8:	add	x29, sp, #0x50
   484dc:	str	x0, [sp, #152]
   484e0:	str	x1, [sp, #144]
   484e4:	str	w2, [sp, #140]
   484e8:	str	x3, [sp, #128]
   484ec:	str	x4, [sp, #120]
   484f0:	str	x5, [sp, #112]
   484f4:	str	x6, [sp, #104]
   484f8:	str	x7, [sp, #96]
   484fc:	ldr	w0, [sp, #1240]
   48500:	cmp	w0, #0x0
   48504:	b.ne	48518 <__asan_backtrace_uncompress_zdebug@@Base+0xe4>  // b.any
   48508:	ldr	x0, [sp, #96]
   4850c:	str	wzr, [x0]
   48510:	ldr	x0, [sp, #1216]
   48514:	str	wzr, [x0]
   48518:	str	wzr, [sp, #1204]
   4851c:	str	wzr, [sp, #1200]
   48520:	str	wzr, [sp, #1184]
   48524:	str	wzr, [sp, #1180]
   48528:	str	wzr, [sp, #1176]
   4852c:	str	xzr, [sp, #1168]
   48530:	str	wzr, [sp, #1164]
   48534:	str	wzr, [sp, #1160]
   48538:	str	xzr, [sp, #1152]
   4853c:	str	wzr, [sp, #1148]
   48540:	str	wzr, [sp, #1144]
   48544:	str	xzr, [sp, #1136]
   48548:	str	xzr, [sp, #1128]
   4854c:	str	wzr, [sp, #1124]
   48550:	str	wzr, [sp, #1100]
   48554:	str	xzr, [sp, #1080]
   48558:	add	x0, sp, #0x358
   4855c:	mov	x6, x0
   48560:	ldr	x5, [sp, #112]
   48564:	ldr	x4, [sp, #120]
   48568:	mov	x3, #0x40                  	// #64
   4856c:	mov	x2, #0x0                   	// #0
   48570:	ldr	w1, [sp, #140]
   48574:	ldr	x0, [sp, #152]
   48578:	bl	69f0 <__asan_backtrace_get_view@plt>
   4857c:	cmp	w0, #0x0
   48580:	b.eq	49894 <__asan_backtrace_uncompress_zdebug@@Base+0x1460>  // b.none
   48584:	ldr	x1, [sp, #856]
   48588:	add	x0, sp, #0x318
   4858c:	mov	x2, #0x40                  	// #64
   48590:	bl	66d0 <__asan_internal_memcpy@plt>
   48594:	add	x0, sp, #0x358
   48598:	ldr	x3, [sp, #112]
   4859c:	ldr	x2, [sp, #120]
   485a0:	mov	x1, x0
   485a4:	ldr	x0, [sp, #152]
   485a8:	bl	6660 <__asan_backtrace_release_view@plt>
   485ac:	ldrb	w0, [sp, #792]
   485b0:	cmp	w0, #0x7f
   485b4:	b.ne	485dc <__asan_backtrace_uncompress_zdebug@@Base+0x1a8>  // b.any
   485b8:	ldrb	w0, [sp, #793]
   485bc:	cmp	w0, #0x45
   485c0:	b.ne	485dc <__asan_backtrace_uncompress_zdebug@@Base+0x1a8>  // b.any
   485c4:	ldrb	w0, [sp, #794]
   485c8:	cmp	w0, #0x4c
   485cc:	b.ne	485dc <__asan_backtrace_uncompress_zdebug@@Base+0x1a8>  // b.any
   485d0:	ldrb	w0, [sp, #795]
   485d4:	cmp	w0, #0x46
   485d8:	b.eq	485f8 <__asan_backtrace_uncompress_zdebug@@Base+0x1c4>  // b.none
   485dc:	ldr	x3, [sp, #120]
   485e0:	mov	w2, #0x0                   	// #0
   485e4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   485e8:	add	x1, x0, #0xdf8
   485ec:	ldr	x0, [sp, #112]
   485f0:	blr	x3
   485f4:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   485f8:	ldrb	w0, [sp, #798]
   485fc:	cmp	w0, #0x1
   48600:	b.eq	48620 <__asan_backtrace_uncompress_zdebug@@Base+0x1ec>  // b.none
   48604:	ldr	x3, [sp, #120]
   48608:	mov	w2, #0x0                   	// #0
   4860c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   48610:	add	x1, x0, #0xe18
   48614:	ldr	x0, [sp, #112]
   48618:	blr	x3
   4861c:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   48620:	ldrb	w0, [sp, #796]
   48624:	cmp	w0, #0x2
   48628:	b.eq	48648 <__asan_backtrace_uncompress_zdebug@@Base+0x214>  // b.none
   4862c:	ldr	x3, [sp, #120]
   48630:	mov	w2, #0x0                   	// #0
   48634:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   48638:	add	x1, x0, #0xe48
   4863c:	ldr	x0, [sp, #112]
   48640:	blr	x3
   48644:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   48648:	ldrb	w0, [sp, #797]
   4864c:	cmp	w0, #0x1
   48650:	b.eq	4867c <__asan_backtrace_uncompress_zdebug@@Base+0x248>  // b.none
   48654:	ldrb	w0, [sp, #797]
   48658:	cmp	w0, #0x2
   4865c:	b.eq	4867c <__asan_backtrace_uncompress_zdebug@@Base+0x248>  // b.none
   48660:	ldr	x3, [sp, #120]
   48664:	mov	w2, #0x0                   	// #0
   48668:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   4866c:	add	x1, x0, #0xe70
   48670:	ldr	x0, [sp, #112]
   48674:	blr	x3
   48678:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4867c:	ldr	w0, [sp, #1232]
   48680:	cmp	w0, #0x0
   48684:	b.eq	4869c <__asan_backtrace_uncompress_zdebug@@Base+0x268>  // b.none
   48688:	ldrh	w0, [sp, #808]
   4868c:	cmp	w0, #0x3
   48690:	b.ne	4869c <__asan_backtrace_uncompress_zdebug@@Base+0x268>  // b.any
   48694:	mov	w0, #0xffffffff            	// #-1
   48698:	b	49aa0 <__asan_backtrace_uncompress_zdebug@@Base+0x166c>
   4869c:	ldr	x0, [sp, #832]
   486a0:	str	x0, [sp, #1064]
   486a4:	ldrh	w0, [sp, #852]
   486a8:	str	w0, [sp, #1212]
   486ac:	ldrh	w0, [sp, #854]
   486b0:	str	w0, [sp, #1208]
   486b4:	ldr	w0, [sp, #1212]
   486b8:	cmp	w0, #0x0
   486bc:	b.eq	486d0 <__asan_backtrace_uncompress_zdebug@@Base+0x29c>  // b.none
   486c0:	ldr	w1, [sp, #1208]
   486c4:	mov	w0, #0xffff                	// #65535
   486c8:	cmp	w1, w0
   486cc:	b.ne	48788 <__asan_backtrace_uncompress_zdebug@@Base+0x354>  // b.any
   486d0:	ldr	x0, [sp, #1064]
   486d4:	cmp	x0, #0x0
   486d8:	b.eq	48788 <__asan_backtrace_uncompress_zdebug@@Base+0x354>  // b.none
   486dc:	add	x0, sp, #0xc8
   486e0:	mov	x6, x0
   486e4:	ldr	x5, [sp, #112]
   486e8:	ldr	x4, [sp, #120]
   486ec:	mov	x3, #0x8                   	// #8
   486f0:	ldr	x2, [sp, #1064]
   486f4:	ldr	w1, [sp, #140]
   486f8:	ldr	x0, [sp, #152]
   486fc:	bl	69f0 <__asan_backtrace_get_view@plt>
   48700:	cmp	w0, #0x0
   48704:	b.eq	4989c <__asan_backtrace_uncompress_zdebug@@Base+0x1468>  // b.none
   48708:	ldr	x0, [sp, #200]
   4870c:	str	x0, [sp, #1056]
   48710:	ldr	w0, [sp, #1212]
   48714:	cmp	w0, #0x0
   48718:	b.ne	48728 <__asan_backtrace_uncompress_zdebug@@Base+0x2f4>  // b.any
   4871c:	ldr	x0, [sp, #1056]
   48720:	ldr	x0, [x0, #32]
   48724:	str	w0, [sp, #1212]
   48728:	ldr	w1, [sp, #1208]
   4872c:	mov	w0, #0xffff                	// #65535
   48730:	cmp	w1, w0
   48734:	b.ne	48770 <__asan_backtrace_uncompress_zdebug@@Base+0x33c>  // b.any
   48738:	ldr	x0, [sp, #1056]
   4873c:	ldr	w0, [x0, #40]
   48740:	str	w0, [sp, #1208]
   48744:	ldr	w1, [sp, #1208]
   48748:	ldr	w0, [sp, #1212]
   4874c:	cmp	w1, w0
   48750:	b.cc	48770 <__asan_backtrace_uncompress_zdebug@@Base+0x33c>  // b.lo, b.ul, b.last
   48754:	ldr	w1, [sp, #1208]
   48758:	mov	w0, #0xffff                	// #65535
   4875c:	cmp	w1, w0
   48760:	b.ls	48770 <__asan_backtrace_uncompress_zdebug@@Base+0x33c>  // b.plast
   48764:	ldr	w0, [sp, #1208]
   48768:	sub	w0, w0, #0x100
   4876c:	str	w0, [sp, #1208]
   48770:	add	x0, sp, #0xc8
   48774:	ldr	x3, [sp, #112]
   48778:	ldr	x2, [sp, #120]
   4877c:	mov	x1, x0
   48780:	ldr	x0, [sp, #152]
   48784:	bl	6660 <__asan_backtrace_release_view@plt>
   48788:	ldr	x0, [sp, #1064]
   4878c:	add	x0, x0, #0x40
   48790:	mov	x2, x0
   48794:	ldr	w0, [sp, #1212]
   48798:	sub	w0, w0, #0x1
   4879c:	mov	w0, w0
   487a0:	lsl	x0, x0, #6
   487a4:	add	x1, sp, #0x300
   487a8:	mov	x6, x1
   487ac:	ldr	x5, [sp, #112]
   487b0:	ldr	x4, [sp, #120]
   487b4:	mov	x3, x0
   487b8:	ldr	w1, [sp, #140]
   487bc:	ldr	x0, [sp, #152]
   487c0:	bl	69f0 <__asan_backtrace_get_view@plt>
   487c4:	cmp	w0, #0x0
   487c8:	b.eq	498a4 <__asan_backtrace_uncompress_zdebug@@Base+0x1470>  // b.none
   487cc:	mov	w0, #0x1                   	// #1
   487d0:	str	w0, [sp, #1204]
   487d4:	ldr	x0, [sp, #768]
   487d8:	str	x0, [sp, #1048]
   487dc:	ldr	w0, [sp, #1208]
   487e0:	sub	w0, w0, #0x1
   487e4:	mov	w0, w0
   487e8:	lsl	x0, x0, #6
   487ec:	ldr	x1, [sp, #1048]
   487f0:	add	x0, x1, x0
   487f4:	str	x0, [sp, #1040]
   487f8:	ldr	x0, [sp, #1040]
   487fc:	ldr	x0, [x0, #32]
   48800:	str	x0, [sp, #1032]
   48804:	ldr	x0, [sp, #1040]
   48808:	ldr	x0, [x0, #24]
   4880c:	str	x0, [sp, #1024]
   48810:	ldr	x0, [sp, #1040]
   48814:	ldr	x0, [x0, #32]
   48818:	add	x1, sp, #0x2e8
   4881c:	mov	x6, x1
   48820:	ldr	x5, [sp, #112]
   48824:	ldr	x4, [sp, #120]
   48828:	mov	x3, x0
   4882c:	ldr	x2, [sp, #1024]
   48830:	ldr	w1, [sp, #140]
   48834:	ldr	x0, [sp, #152]
   48838:	bl	69f0 <__asan_backtrace_get_view@plt>
   4883c:	cmp	w0, #0x0
   48840:	b.eq	498ac <__asan_backtrace_uncompress_zdebug@@Base+0x1478>  // b.none
   48844:	mov	w0, #0x1                   	// #1
   48848:	str	w0, [sp, #1200]
   4884c:	ldr	x0, [sp, #744]
   48850:	str	x0, [sp, #1016]
   48854:	str	wzr, [sp, #1196]
   48858:	str	wzr, [sp, #1192]
   4885c:	add	x0, sp, #0x1a8
   48860:	mov	x2, #0x140                 	// #320
   48864:	mov	w1, #0x0                   	// #0
   48868:	bl	6770 <__asan_internal_memset@plt>
   4886c:	mov	w0, #0x1                   	// #1
   48870:	str	w0, [sp, #1188]
   48874:	b	48d94 <__asan_backtrace_uncompress_zdebug@@Base+0x960>
   48878:	ldr	w0, [sp, #1188]
   4887c:	sub	w0, w0, #0x1
   48880:	mov	w0, w0
   48884:	lsl	x0, x0, #6
   48888:	ldr	x1, [sp, #1048]
   4888c:	add	x0, x1, x0
   48890:	str	x0, [sp, #936]
   48894:	ldr	x0, [sp, #936]
   48898:	ldr	w0, [x0, #4]
   4889c:	cmp	w0, #0x2
   488a0:	b.ne	488b0 <__asan_backtrace_uncompress_zdebug@@Base+0x47c>  // b.any
   488a4:	ldr	w0, [sp, #1188]
   488a8:	str	w0, [sp, #1196]
   488ac:	b	488c8 <__asan_backtrace_uncompress_zdebug@@Base+0x494>
   488b0:	ldr	x0, [sp, #936]
   488b4:	ldr	w0, [x0, #4]
   488b8:	cmp	w0, #0xb
   488bc:	b.ne	488c8 <__asan_backtrace_uncompress_zdebug@@Base+0x494>  // b.any
   488c0:	ldr	w0, [sp, #1188]
   488c4:	str	w0, [sp, #1192]
   488c8:	ldr	x0, [sp, #936]
   488cc:	ldr	w0, [x0]
   488d0:	str	w0, [sp, #932]
   488d4:	ldr	w0, [sp, #932]
   488d8:	ldr	x1, [sp, #1032]
   488dc:	cmp	x1, x0
   488e0:	b.hi	48900 <__asan_backtrace_uncompress_zdebug@@Base+0x4cc>  // b.pmore
   488e4:	ldr	x3, [sp, #120]
   488e8:	mov	w2, #0x0                   	// #0
   488ec:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   488f0:	add	x1, x0, #0xe98
   488f4:	ldr	x0, [sp, #112]
   488f8:	blr	x3
   488fc:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   48900:	ldr	w0, [sp, #932]
   48904:	ldr	x1, [sp, #1016]
   48908:	add	x0, x1, x0
   4890c:	str	x0, [sp, #920]
   48910:	str	wzr, [sp, #1076]
   48914:	b	489ac <__asan_backtrace_uncompress_zdebug@@Base+0x578>
   48918:	adrp	x0, 76000 <__asan_cplus_demangle_operators@@Base+0x28>
   4891c:	add	x0, x0, #0xc00
   48920:	ldrsw	x1, [sp, #1076]
   48924:	ldr	x0, [x0, x1, lsl #3]
   48928:	mov	x1, x0
   4892c:	ldr	x0, [sp, #920]
   48930:	bl	6a30 <__asan_internal_strcmp@plt>
   48934:	cmp	w0, #0x0
   48938:	b.ne	489a0 <__asan_backtrace_uncompress_zdebug@@Base+0x56c>  // b.any
   4893c:	ldr	x0, [sp, #936]
   48940:	ldr	x0, [x0, #24]
   48944:	mov	x2, x0
   48948:	ldrsw	x0, [sp, #1076]
   4894c:	lsl	x0, x0, #5
   48950:	add	x1, sp, #0x1a8
   48954:	str	x2, [x1, x0]
   48958:	ldr	x0, [sp, #936]
   4895c:	ldr	x2, [x0, #32]
   48960:	ldrsw	x0, [sp, #1076]
   48964:	lsl	x0, x0, #5
   48968:	add	x1, sp, #0x1b0
   4896c:	str	x2, [x1, x0]
   48970:	ldr	x0, [sp, #936]
   48974:	ldr	x0, [x0, #8]
   48978:	and	x0, x0, #0x800
   4897c:	cmp	x0, #0x0
   48980:	cset	w0, ne  // ne = any
   48984:	and	w0, w0, #0xff
   48988:	mov	w2, w0
   4898c:	ldrsw	x0, [sp, #1076]
   48990:	lsl	x0, x0, #5
   48994:	add	x1, sp, #0x1c0
   48998:	str	w2, [x1, x0]
   4899c:	b	489b8 <__asan_backtrace_uncompress_zdebug@@Base+0x584>
   489a0:	ldr	w0, [sp, #1076]
   489a4:	add	w0, w0, #0x1
   489a8:	str	w0, [sp, #1076]
   489ac:	ldr	w0, [sp, #1076]
   489b0:	cmp	w0, #0x9
   489b4:	b.le	48918 <__asan_backtrace_uncompress_zdebug@@Base+0x4e4>
   489b8:	ldr	w0, [sp, #1240]
   489bc:	cmp	w0, #0x0
   489c0:	b.eq	489d0 <__asan_backtrace_uncompress_zdebug@@Base+0x59c>  // b.none
   489c4:	ldr	x0, [sp, #1248]
   489c8:	cmp	x0, #0x0
   489cc:	b.eq	48b20 <__asan_backtrace_uncompress_zdebug@@Base+0x6ec>  // b.none
   489d0:	ldr	w0, [sp, #1176]
   489d4:	cmp	w0, #0x0
   489d8:	b.ne	48b20 <__asan_backtrace_uncompress_zdebug@@Base+0x6ec>  // b.any
   489dc:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   489e0:	add	x1, x0, #0xeb8
   489e4:	ldr	x0, [sp, #920]
   489e8:	bl	6a30 <__asan_internal_strcmp@plt>
   489ec:	cmp	w0, #0x0
   489f0:	b.ne	48b20 <__asan_backtrace_uncompress_zdebug@@Base+0x6ec>  // b.any
   489f4:	ldr	x0, [sp, #936]
   489f8:	ldr	x0, [x0, #24]
   489fc:	mov	x2, x0
   48a00:	ldr	x0, [sp, #936]
   48a04:	ldr	x0, [x0, #32]
   48a08:	add	x1, sp, #0x160
   48a0c:	mov	x6, x1
   48a10:	ldr	x5, [sp, #112]
   48a14:	ldr	x4, [sp, #120]
   48a18:	mov	x3, x0
   48a1c:	ldr	w1, [sp, #140]
   48a20:	ldr	x0, [sp, #152]
   48a24:	bl	69f0 <__asan_backtrace_get_view@plt>
   48a28:	cmp	w0, #0x0
   48a2c:	b.eq	498b4 <__asan_backtrace_uncompress_zdebug@@Base+0x1480>  // b.none
   48a30:	mov	w0, #0x1                   	// #1
   48a34:	str	w0, [sp, #1176]
   48a38:	ldr	x0, [sp, #352]
   48a3c:	str	x0, [sp, #912]
   48a40:	ldr	x0, [sp, #912]
   48a44:	ldr	w0, [x0, #8]
   48a48:	cmp	w0, #0x3
   48a4c:	b.ne	48ae8 <__asan_backtrace_uncompress_zdebug@@Base+0x6b4>  // b.any
   48a50:	ldr	x0, [sp, #912]
   48a54:	ldr	w0, [x0]
   48a58:	cmp	w0, #0x4
   48a5c:	b.ne	48ae8 <__asan_backtrace_uncompress_zdebug@@Base+0x6b4>  // b.any
   48a60:	ldr	x0, [sp, #912]
   48a64:	add	x3, x0, #0xc
   48a68:	mov	x2, #0x4                   	// #4
   48a6c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   48a70:	add	x1, x0, #0xed0
   48a74:	mov	x0, x3
   48a78:	bl	6a70 <__asan_internal_strncmp@plt>
   48a7c:	cmp	w0, #0x0
   48a80:	b.ne	48ae8 <__asan_backtrace_uncompress_zdebug@@Base+0x6b4>  // b.any
   48a84:	ldr	x0, [sp, #936]
   48a88:	ldr	x1, [x0, #32]
   48a8c:	ldr	x0, [sp, #912]
   48a90:	ldr	w0, [x0]
   48a94:	add	w0, w0, #0x3
   48a98:	and	w2, w0, #0xfffffffc
   48a9c:	ldr	x0, [sp, #912]
   48aa0:	ldr	w0, [x0, #4]
   48aa4:	add	w0, w2, w0
   48aa8:	add	w0, w0, #0xc
   48aac:	mov	w0, w0
   48ab0:	cmp	x1, x0
   48ab4:	b.hi	48ae8 <__asan_backtrace_uncompress_zdebug@@Base+0x6b4>  // b.pmore
   48ab8:	ldr	x0, [sp, #912]
   48abc:	add	x1, x0, #0xc
   48ac0:	ldr	x0, [sp, #912]
   48ac4:	ldr	w0, [x0]
   48ac8:	add	w0, w0, #0x3
   48acc:	mov	w0, w0
   48ad0:	and	x0, x0, #0xfffffffc
   48ad4:	add	x0, x1, x0
   48ad8:	str	x0, [sp, #1168]
   48adc:	ldr	x0, [sp, #912]
   48ae0:	ldr	w0, [x0, #4]
   48ae4:	str	w0, [sp, #1164]
   48ae8:	ldr	w0, [sp, #1256]
   48aec:	cmp	w0, #0x0
   48af0:	b.eq	48b20 <__asan_backtrace_uncompress_zdebug@@Base+0x6ec>  // b.none
   48af4:	ldr	w1, [sp, #1164]
   48af8:	ldr	w0, [sp, #1256]
   48afc:	cmp	w1, w0
   48b00:	b.ne	498bc <__asan_backtrace_uncompress_zdebug@@Base+0x1488>  // b.any
   48b04:	ldr	w0, [sp, #1164]
   48b08:	mov	x2, x0
   48b0c:	ldr	x1, [sp, #1248]
   48b10:	ldr	x0, [sp, #1168]
   48b14:	bl	6b30 <__asan_internal_memcmp@plt>
   48b18:	cmp	w0, #0x0
   48b1c:	b.ne	498c4 <__asan_backtrace_uncompress_zdebug@@Base+0x1490>  // b.any
   48b20:	ldr	w0, [sp, #1240]
   48b24:	cmp	w0, #0x0
   48b28:	b.ne	48bf8 <__asan_backtrace_uncompress_zdebug@@Base+0x7c4>  // b.any
   48b2c:	ldr	w0, [sp, #1160]
   48b30:	cmp	w0, #0x0
   48b34:	b.ne	48bf8 <__asan_backtrace_uncompress_zdebug@@Base+0x7c4>  // b.any
   48b38:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   48b3c:	add	x1, x0, #0xed8
   48b40:	ldr	x0, [sp, #920]
   48b44:	bl	6a30 <__asan_internal_strcmp@plt>
   48b48:	cmp	w0, #0x0
   48b4c:	b.ne	48bf8 <__asan_backtrace_uncompress_zdebug@@Base+0x7c4>  // b.any
   48b50:	ldr	x0, [sp, #936]
   48b54:	ldr	x0, [x0, #24]
   48b58:	mov	x2, x0
   48b5c:	ldr	x0, [sp, #936]
   48b60:	ldr	x0, [x0, #32]
   48b64:	add	x1, sp, #0x148
   48b68:	mov	x6, x1
   48b6c:	ldr	x5, [sp, #112]
   48b70:	ldr	x4, [sp, #120]
   48b74:	mov	x3, x0
   48b78:	ldr	w1, [sp, #140]
   48b7c:	ldr	x0, [sp, #152]
   48b80:	bl	69f0 <__asan_backtrace_get_view@plt>
   48b84:	cmp	w0, #0x0
   48b88:	b.eq	498cc <__asan_backtrace_uncompress_zdebug@@Base+0x1498>  // b.none
   48b8c:	mov	w0, #0x1                   	// #1
   48b90:	str	w0, [sp, #1160]
   48b94:	ldr	x0, [sp, #328]
   48b98:	str	x0, [sp, #904]
   48b9c:	ldr	x0, [sp, #936]
   48ba0:	ldr	x0, [x0, #32]
   48ba4:	mov	x1, x0
   48ba8:	ldr	x0, [sp, #904]
   48bac:	bl	6a40 <__asan_internal_strnlen@plt>
   48bb0:	str	x0, [sp, #896]
   48bb4:	ldr	x0, [sp, #896]
   48bb8:	add	x0, x0, #0x3
   48bbc:	and	x0, x0, #0xfffffffffffffffc
   48bc0:	str	x0, [sp, #896]
   48bc4:	ldr	x0, [sp, #896]
   48bc8:	add	x1, x0, #0x4
   48bcc:	ldr	x0, [sp, #936]
   48bd0:	ldr	x0, [x0, #32]
   48bd4:	cmp	x1, x0
   48bd8:	b.hi	48bf8 <__asan_backtrace_uncompress_zdebug@@Base+0x7c4>  // b.pmore
   48bdc:	ldr	x0, [sp, #904]
   48be0:	str	x0, [sp, #1152]
   48be4:	ldr	x1, [sp, #904]
   48be8:	ldr	x0, [sp, #896]
   48bec:	add	x0, x1, x0
   48bf0:	ldr	w0, [x0]
   48bf4:	str	w0, [sp, #1148]
   48bf8:	ldr	w0, [sp, #1144]
   48bfc:	cmp	w0, #0x0
   48c00:	b.ne	48cd0 <__asan_backtrace_uncompress_zdebug@@Base+0x89c>  // b.any
   48c04:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   48c08:	add	x1, x0, #0xee8
   48c0c:	ldr	x0, [sp, #920]
   48c10:	bl	6a30 <__asan_internal_strcmp@plt>
   48c14:	cmp	w0, #0x0
   48c18:	b.ne	48cd0 <__asan_backtrace_uncompress_zdebug@@Base+0x89c>  // b.any
   48c1c:	ldr	x0, [sp, #936]
   48c20:	ldr	x0, [x0, #24]
   48c24:	mov	x2, x0
   48c28:	ldr	x0, [sp, #936]
   48c2c:	ldr	x0, [x0, #32]
   48c30:	add	x1, sp, #0x130
   48c34:	mov	x6, x1
   48c38:	ldr	x5, [sp, #112]
   48c3c:	ldr	x4, [sp, #120]
   48c40:	mov	x3, x0
   48c44:	ldr	w1, [sp, #140]
   48c48:	ldr	x0, [sp, #152]
   48c4c:	bl	69f0 <__asan_backtrace_get_view@plt>
   48c50:	cmp	w0, #0x0
   48c54:	b.eq	498d4 <__asan_backtrace_uncompress_zdebug@@Base+0x14a0>  // b.none
   48c58:	mov	w0, #0x1                   	// #1
   48c5c:	str	w0, [sp, #1144]
   48c60:	ldr	x0, [sp, #304]
   48c64:	str	x0, [sp, #888]
   48c68:	ldr	x0, [sp, #888]
   48c6c:	str	x0, [sp, #1136]
   48c70:	ldr	x0, [sp, #936]
   48c74:	ldr	x0, [x0, #32]
   48c78:	mov	x1, x0
   48c7c:	ldr	x0, [sp, #888]
   48c80:	bl	6a40 <__asan_internal_strnlen@plt>
   48c84:	str	x0, [sp, #880]
   48c88:	ldr	x0, [sp, #936]
   48c8c:	ldr	x0, [x0, #32]
   48c90:	ldr	x1, [sp, #880]
   48c94:	cmp	x1, x0
   48c98:	b.cs	48cd0 <__asan_backtrace_uncompress_zdebug@@Base+0x89c>  // b.hs, b.nlast
   48c9c:	ldr	x0, [sp, #880]
   48ca0:	add	x0, x0, #0x1
   48ca4:	str	x0, [sp, #880]
   48ca8:	ldr	x1, [sp, #888]
   48cac:	ldr	x0, [sp, #880]
   48cb0:	add	x0, x1, x0
   48cb4:	str	x0, [sp, #1128]
   48cb8:	ldr	x0, [sp, #936]
   48cbc:	ldr	x0, [x0, #32]
   48cc0:	mov	w1, w0
   48cc4:	ldr	x0, [sp, #880]
   48cc8:	sub	w0, w1, w0
   48ccc:	str	w0, [sp, #1124]
   48cd0:	ldrh	w0, [sp, #810]
   48cd4:	cmp	w0, #0x15
   48cd8:	b.ne	48d88 <__asan_backtrace_uncompress_zdebug@@Base+0x954>  // b.any
   48cdc:	ldr	w0, [sp, #840]
   48ce0:	and	w0, w0, #0x2
   48ce4:	cmp	w0, #0x0
   48ce8:	b.ne	48d88 <__asan_backtrace_uncompress_zdebug@@Base+0x954>  // b.any
   48cec:	ldr	x0, [sp, #936]
   48cf0:	ldr	w0, [x0, #4]
   48cf4:	cmp	w0, #0x1
   48cf8:	b.ne	48d88 <__asan_backtrace_uncompress_zdebug@@Base+0x954>  // b.any
   48cfc:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   48d00:	add	x1, x0, #0xf00
   48d04:	ldr	x0, [sp, #920]
   48d08:	bl	6a30 <__asan_internal_strcmp@plt>
   48d0c:	cmp	w0, #0x0
   48d10:	b.ne	48d88 <__asan_backtrace_uncompress_zdebug@@Base+0x954>  // b.any
   48d14:	ldr	x0, [sp, #936]
   48d18:	ldr	x0, [x0, #24]
   48d1c:	mov	x2, x0
   48d20:	ldr	x0, [sp, #936]
   48d24:	ldr	x1, [x0, #32]
   48d28:	add	x0, sp, #0xe8
   48d2c:	add	x0, x0, #0x18
   48d30:	mov	x6, x0
   48d34:	ldr	x5, [sp, #112]
   48d38:	ldr	x4, [sp, #120]
   48d3c:	mov	x3, x1
   48d40:	ldr	w1, [sp, #140]
   48d44:	ldr	x0, [sp, #152]
   48d48:	bl	69f0 <__asan_backtrace_get_view@plt>
   48d4c:	cmp	w0, #0x0
   48d50:	b.eq	498dc <__asan_backtrace_uncompress_zdebug@@Base+0x14a8>  // b.none
   48d54:	add	x0, sp, #0xe8
   48d58:	str	x0, [sp, #1080]
   48d5c:	ldr	x0, [sp, #936]
   48d60:	ldr	x1, [x0, #16]
   48d64:	ldr	x0, [sp, #1080]
   48d68:	str	x1, [x0]
   48d6c:	ldr	x1, [sp, #256]
   48d70:	ldr	x0, [sp, #1080]
   48d74:	str	x1, [x0, #8]
   48d78:	ldr	x0, [sp, #936]
   48d7c:	ldr	x1, [x0, #32]
   48d80:	ldr	x0, [sp, #1080]
   48d84:	str	x1, [x0, #16]
   48d88:	ldr	w0, [sp, #1188]
   48d8c:	add	w0, w0, #0x1
   48d90:	str	w0, [sp, #1188]
   48d94:	ldr	w1, [sp, #1188]
   48d98:	ldr	w0, [sp, #1212]
   48d9c:	cmp	w1, w0
   48da0:	b.cc	48878 <__asan_backtrace_uncompress_zdebug@@Base+0x444>  // b.lo, b.ul, b.last
   48da4:	ldr	w0, [sp, #1196]
   48da8:	cmp	w0, #0x0
   48dac:	b.ne	48db8 <__asan_backtrace_uncompress_zdebug@@Base+0x984>  // b.any
   48db0:	ldr	w0, [sp, #1192]
   48db4:	str	w0, [sp, #1196]
   48db8:	ldr	w0, [sp, #1196]
   48dbc:	cmp	w0, #0x0
   48dc0:	b.eq	48f90 <__asan_backtrace_uncompress_zdebug@@Base+0xb5c>  // b.none
   48dc4:	ldr	w0, [sp, #1240]
   48dc8:	cmp	w0, #0x0
   48dcc:	b.ne	48f90 <__asan_backtrace_uncompress_zdebug@@Base+0xb5c>  // b.any
   48dd0:	ldr	w0, [sp, #1196]
   48dd4:	sub	w0, w0, #0x1
   48dd8:	mov	w0, w0
   48ddc:	lsl	x0, x0, #6
   48de0:	ldr	x1, [sp, #1048]
   48de4:	add	x0, x1, x0
   48de8:	str	x0, [sp, #1008]
   48dec:	ldr	x0, [sp, #1008]
   48df0:	ldr	w0, [x0, #40]
   48df4:	str	w0, [sp, #1004]
   48df8:	ldr	w1, [sp, #1004]
   48dfc:	ldr	w0, [sp, #1212]
   48e00:	cmp	w1, w0
   48e04:	b.cc	48e24 <__asan_backtrace_uncompress_zdebug@@Base+0x9f0>  // b.lo, b.ul, b.last
   48e08:	ldr	x3, [sp, #120]
   48e0c:	mov	w2, #0x0                   	// #0
   48e10:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   48e14:	add	x1, x0, #0xf08
   48e18:	ldr	x0, [sp, #112]
   48e1c:	blr	x3
   48e20:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   48e24:	ldr	w0, [sp, #1004]
   48e28:	sub	w0, w0, #0x1
   48e2c:	mov	w0, w0
   48e30:	lsl	x0, x0, #6
   48e34:	ldr	x1, [sp, #1048]
   48e38:	add	x0, x1, x0
   48e3c:	str	x0, [sp, #992]
   48e40:	ldr	x0, [sp, #1008]
   48e44:	ldr	x0, [x0, #24]
   48e48:	mov	x2, x0
   48e4c:	ldr	x0, [sp, #1008]
   48e50:	ldr	x0, [x0, #32]
   48e54:	add	x1, sp, #0x190
   48e58:	mov	x6, x1
   48e5c:	ldr	x5, [sp, #112]
   48e60:	ldr	x4, [sp, #120]
   48e64:	mov	x3, x0
   48e68:	ldr	w1, [sp, #140]
   48e6c:	ldr	x0, [sp, #152]
   48e70:	bl	69f0 <__asan_backtrace_get_view@plt>
   48e74:	cmp	w0, #0x0
   48e78:	b.eq	498e4 <__asan_backtrace_uncompress_zdebug@@Base+0x14b0>  // b.none
   48e7c:	mov	w0, #0x1                   	// #1
   48e80:	str	w0, [sp, #1184]
   48e84:	ldr	x0, [sp, #992]
   48e88:	ldr	x0, [x0, #24]
   48e8c:	mov	x2, x0
   48e90:	ldr	x0, [sp, #992]
   48e94:	ldr	x0, [x0, #32]
   48e98:	add	x1, sp, #0x178
   48e9c:	mov	x6, x1
   48ea0:	ldr	x5, [sp, #112]
   48ea4:	ldr	x4, [sp, #120]
   48ea8:	mov	x3, x0
   48eac:	ldr	w1, [sp, #140]
   48eb0:	ldr	x0, [sp, #152]
   48eb4:	bl	69f0 <__asan_backtrace_get_view@plt>
   48eb8:	cmp	w0, #0x0
   48ebc:	b.eq	498ec <__asan_backtrace_uncompress_zdebug@@Base+0x14b8>  // b.none
   48ec0:	mov	w0, #0x1                   	// #1
   48ec4:	str	w0, [sp, #1180]
   48ec8:	ldr	x3, [sp, #112]
   48ecc:	ldr	x2, [sp, #120]
   48ed0:	mov	x1, #0x18                  	// #24
   48ed4:	ldr	x0, [sp, #152]
   48ed8:	bl	67f0 <__asan_backtrace_alloc@plt>
   48edc:	str	x0, [sp, #984]
   48ee0:	ldr	x0, [sp, #984]
   48ee4:	cmp	x0, #0x0
   48ee8:	b.eq	498f4 <__asan_backtrace_uncompress_zdebug@@Base+0x14c0>  // b.none
   48eec:	ldr	x1, [sp, #400]
   48ef0:	ldr	x0, [sp, #1008]
   48ef4:	ldr	x2, [x0, #32]
   48ef8:	ldr	x3, [sp, #376]
   48efc:	ldr	x0, [sp, #992]
   48f00:	ldr	x4, [x0, #32]
   48f04:	ldr	x0, [sp, #1080]
   48f08:	str	x0, [sp, #8]
   48f0c:	ldr	x0, [sp, #984]
   48f10:	str	x0, [sp]
   48f14:	ldr	x7, [sp, #112]
   48f18:	ldr	x6, [sp, #120]
   48f1c:	mov	x5, x4
   48f20:	mov	x4, x3
   48f24:	mov	x3, x2
   48f28:	mov	x2, x1
   48f2c:	ldr	x1, [sp, #128]
   48f30:	ldr	x0, [sp, #152]
   48f34:	bl	44960 <__asan_internal_strnlen@@Base+0x2ec>
   48f38:	cmp	w0, #0x0
   48f3c:	b.ne	48f5c <__asan_backtrace_uncompress_zdebug@@Base+0xb28>  // b.any
   48f40:	ldr	x4, [sp, #112]
   48f44:	ldr	x3, [sp, #120]
   48f48:	mov	x2, #0x18                  	// #24
   48f4c:	ldr	x1, [sp, #984]
   48f50:	ldr	x0, [sp, #152]
   48f54:	bl	6ac0 <__asan_backtrace_free@plt>
   48f58:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   48f5c:	add	x0, sp, #0x190
   48f60:	ldr	x3, [sp, #112]
   48f64:	ldr	x2, [sp, #120]
   48f68:	mov	x1, x0
   48f6c:	ldr	x0, [sp, #152]
   48f70:	bl	6660 <__asan_backtrace_release_view@plt>
   48f74:	str	wzr, [sp, #1184]
   48f78:	ldr	x0, [sp, #96]
   48f7c:	mov	w1, #0x1                   	// #1
   48f80:	str	w1, [x0]
   48f84:	ldr	x1, [sp, #984]
   48f88:	ldr	x0, [sp, #152]
   48f8c:	bl	44cfc <__asan_internal_strnlen@@Base+0x688>
   48f90:	add	x0, sp, #0x300
   48f94:	ldr	x3, [sp, #112]
   48f98:	ldr	x2, [sp, #120]
   48f9c:	mov	x1, x0
   48fa0:	ldr	x0, [sp, #152]
   48fa4:	bl	6660 <__asan_backtrace_release_view@plt>
   48fa8:	str	wzr, [sp, #1204]
   48fac:	add	x0, sp, #0x2e8
   48fb0:	ldr	x3, [sp, #112]
   48fb4:	ldr	x2, [sp, #120]
   48fb8:	mov	x1, x0
   48fbc:	ldr	x0, [sp, #152]
   48fc0:	bl	6660 <__asan_backtrace_release_view@plt>
   48fc4:	str	wzr, [sp, #1200]
   48fc8:	ldr	x0, [sp, #1168]
   48fcc:	cmp	x0, #0x0
   48fd0:	b.eq	490e4 <__asan_backtrace_uncompress_zdebug@@Base+0xcb0>  // b.none
   48fd4:	ldr	w0, [sp, #1164]
   48fd8:	ldr	x4, [sp, #112]
   48fdc:	ldr	x3, [sp, #120]
   48fe0:	mov	x2, x0
   48fe4:	ldr	x1, [sp, #1168]
   48fe8:	ldr	x0, [sp, #152]
   48fec:	bl	45080 <__asan_internal_strnlen@@Base+0xa0c>
   48ff0:	str	w0, [sp, #980]
   48ff4:	ldr	w0, [sp, #980]
   48ff8:	cmp	w0, #0x0
   48ffc:	b.lt	490e4 <__asan_backtrace_uncompress_zdebug@@Base+0xcb0>  // b.tstop
   49000:	add	x0, sp, #0x160
   49004:	ldr	x3, [sp, #112]
   49008:	ldr	x2, [sp, #120]
   4900c:	mov	x1, x0
   49010:	ldr	x0, [sp, #152]
   49014:	bl	6660 <__asan_backtrace_release_view@plt>
   49018:	ldr	w0, [sp, #1160]
   4901c:	cmp	w0, #0x0
   49020:	b.eq	4903c <__asan_backtrace_uncompress_zdebug@@Base+0xc08>  // b.none
   49024:	add	x0, sp, #0x148
   49028:	ldr	x3, [sp, #112]
   4902c:	ldr	x2, [sp, #120]
   49030:	mov	x1, x0
   49034:	ldr	x0, [sp, #152]
   49038:	bl	6660 <__asan_backtrace_release_view@plt>
   4903c:	ldr	w0, [sp, #1144]
   49040:	cmp	w0, #0x0
   49044:	b.eq	49060 <__asan_backtrace_uncompress_zdebug@@Base+0xc2c>  // b.none
   49048:	add	x0, sp, #0x130
   4904c:	ldr	x3, [sp, #112]
   49050:	ldr	x2, [sp, #120]
   49054:	mov	x1, x0
   49058:	ldr	x0, [sp, #152]
   4905c:	bl	6660 <__asan_backtrace_release_view@plt>
   49060:	str	wzr, [sp, #40]
   49064:	str	xzr, [sp, #32]
   49068:	mov	w0, #0x1                   	// #1
   4906c:	str	w0, [sp, #24]
   49070:	str	wzr, [sp, #16]
   49074:	str	xzr, [sp, #8]
   49078:	ldr	x0, [sp, #1216]
   4907c:	str	x0, [sp]
   49080:	ldr	x7, [sp, #96]
   49084:	ldr	x6, [sp, #104]
   49088:	ldr	x5, [sp, #112]
   4908c:	ldr	x4, [sp, #120]
   49090:	ldr	x3, [sp, #128]
   49094:	ldr	w2, [sp, #980]
   49098:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   4909c:	add	x1, x0, #0x8f0
   490a0:	ldr	x0, [sp, #152]
   490a4:	bl	484d0 <__asan_backtrace_uncompress_zdebug@@Base+0x9c>
   490a8:	str	w0, [sp, #976]
   490ac:	ldr	w0, [sp, #976]
   490b0:	cmp	w0, #0x0
   490b4:	b.ge	490cc <__asan_backtrace_uncompress_zdebug@@Base+0xc98>  // b.tcont
   490b8:	ldr	x2, [sp, #112]
   490bc:	ldr	x1, [sp, #120]
   490c0:	ldr	w0, [sp, #980]
   490c4:	bl	6ba0 <__asan_backtrace_close@plt>
   490c8:	b	490dc <__asan_backtrace_uncompress_zdebug@@Base+0xca8>
   490cc:	ldr	x2, [sp, #112]
   490d0:	ldr	x1, [sp, #120]
   490d4:	ldr	w0, [sp, #140]
   490d8:	bl	6ba0 <__asan_backtrace_close@plt>
   490dc:	ldr	w0, [sp, #976]
   490e0:	b	49aa0 <__asan_backtrace_uncompress_zdebug@@Base+0x166c>
   490e4:	ldr	w0, [sp, #1176]
   490e8:	cmp	w0, #0x0
   490ec:	b.eq	4910c <__asan_backtrace_uncompress_zdebug@@Base+0xcd8>  // b.none
   490f0:	add	x0, sp, #0x160
   490f4:	ldr	x3, [sp, #112]
   490f8:	ldr	x2, [sp, #120]
   490fc:	mov	x1, x0
   49100:	ldr	x0, [sp, #152]
   49104:	bl	6660 <__asan_backtrace_release_view@plt>
   49108:	str	wzr, [sp, #1176]
   4910c:	ldr	x0, [sp, #1080]
   49110:	cmp	x0, #0x0
   49114:	b.eq	49138 <__asan_backtrace_uncompress_zdebug@@Base+0xd04>  // b.none
   49118:	ldr	x0, [sp, #1080]
   4911c:	add	x0, x0, #0x18
   49120:	ldr	x3, [sp, #112]
   49124:	ldr	x2, [sp, #120]
   49128:	mov	x1, x0
   4912c:	ldr	x0, [sp, #152]
   49130:	bl	6660 <__asan_backtrace_release_view@plt>
   49134:	str	xzr, [sp, #1080]
   49138:	ldr	x0, [sp, #1152]
   4913c:	cmp	x0, #0x0
   49140:	b.eq	49230 <__asan_backtrace_uncompress_zdebug@@Base+0xdfc>  // b.none
   49144:	ldr	x5, [sp, #112]
   49148:	ldr	x4, [sp, #120]
   4914c:	ldr	w3, [sp, #1148]
   49150:	ldr	x2, [sp, #1152]
   49154:	ldr	x1, [sp, #144]
   49158:	ldr	x0, [sp, #152]
   4915c:	bl	45714 <__asan_internal_strnlen@@Base+0x10a0>
   49160:	str	w0, [sp, #972]
   49164:	ldr	w0, [sp, #972]
   49168:	cmp	w0, #0x0
   4916c:	b.lt	49230 <__asan_backtrace_uncompress_zdebug@@Base+0xdfc>  // b.tstop
   49170:	add	x0, sp, #0x148
   49174:	ldr	x3, [sp, #112]
   49178:	ldr	x2, [sp, #120]
   4917c:	mov	x1, x0
   49180:	ldr	x0, [sp, #152]
   49184:	bl	6660 <__asan_backtrace_release_view@plt>
   49188:	ldr	w0, [sp, #1144]
   4918c:	cmp	w0, #0x0
   49190:	b.eq	491ac <__asan_backtrace_uncompress_zdebug@@Base+0xd78>  // b.none
   49194:	add	x0, sp, #0x130
   49198:	ldr	x3, [sp, #112]
   4919c:	ldr	x2, [sp, #120]
   491a0:	mov	x1, x0
   491a4:	ldr	x0, [sp, #152]
   491a8:	bl	6660 <__asan_backtrace_release_view@plt>
   491ac:	str	wzr, [sp, #40]
   491b0:	str	xzr, [sp, #32]
   491b4:	mov	w0, #0x1                   	// #1
   491b8:	str	w0, [sp, #24]
   491bc:	str	wzr, [sp, #16]
   491c0:	str	xzr, [sp, #8]
   491c4:	ldr	x0, [sp, #1216]
   491c8:	str	x0, [sp]
   491cc:	ldr	x7, [sp, #96]
   491d0:	ldr	x6, [sp, #104]
   491d4:	ldr	x5, [sp, #112]
   491d8:	ldr	x4, [sp, #120]
   491dc:	ldr	x3, [sp, #128]
   491e0:	ldr	w2, [sp, #972]
   491e4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0xc970>
   491e8:	add	x1, x0, #0x8f0
   491ec:	ldr	x0, [sp, #152]
   491f0:	bl	484d0 <__asan_backtrace_uncompress_zdebug@@Base+0x9c>
   491f4:	str	w0, [sp, #968]
   491f8:	ldr	w0, [sp, #968]
   491fc:	cmp	w0, #0x0
   49200:	b.ge	49218 <__asan_backtrace_uncompress_zdebug@@Base+0xde4>  // b.tcont
   49204:	ldr	x2, [sp, #112]
   49208:	ldr	x1, [sp, #120]
   4920c:	ldr	w0, [sp, #972]
   49210:	bl	6ba0 <__asan_backtrace_close@plt>
   49214:	b	49228 <__asan_backtrace_uncompress_zdebug@@Base+0xdf4>
   49218:	ldr	x2, [sp, #112]
   4921c:	ldr	x1, [sp, #120]
   49220:	ldr	w0, [sp, #140]
   49224:	bl	6ba0 <__asan_backtrace_close@plt>
   49228:	ldr	w0, [sp, #968]
   4922c:	b	49aa0 <__asan_backtrace_uncompress_zdebug@@Base+0x166c>
   49230:	ldr	w0, [sp, #1160]
   49234:	cmp	w0, #0x0
   49238:	b.eq	49258 <__asan_backtrace_uncompress_zdebug@@Base+0xe24>  // b.none
   4923c:	add	x0, sp, #0x148
   49240:	ldr	x3, [sp, #112]
   49244:	ldr	x2, [sp, #120]
   49248:	mov	x1, x0
   4924c:	ldr	x0, [sp, #152]
   49250:	bl	6660 <__asan_backtrace_release_view@plt>
   49254:	str	wzr, [sp, #1160]
   49258:	str	xzr, [sp, #224]
   4925c:	ldr	x0, [sp, #1136]
   49260:	cmp	x0, #0x0
   49264:	b.eq	49328 <__asan_backtrace_uncompress_zdebug@@Base+0xef4>  // b.none
   49268:	ldr	x5, [sp, #112]
   4926c:	ldr	x4, [sp, #120]
   49270:	mov	w3, #0x0                   	// #0
   49274:	ldr	x2, [sp, #1136]
   49278:	ldr	x1, [sp, #144]
   4927c:	ldr	x0, [sp, #152]
   49280:	bl	45714 <__asan_internal_strnlen@@Base+0x10a0>
   49284:	str	w0, [sp, #964]
   49288:	ldr	w0, [sp, #964]
   4928c:	cmp	w0, #0x0
   49290:	b.lt	49328 <__asan_backtrace_uncompress_zdebug@@Base+0xef4>  // b.tstop
   49294:	ldr	w0, [sp, #1124]
   49298:	str	w0, [sp, #40]
   4929c:	ldr	x0, [sp, #1128]
   492a0:	str	x0, [sp, #32]
   492a4:	mov	w0, #0x1                   	// #1
   492a8:	str	w0, [sp, #24]
   492ac:	str	wzr, [sp, #16]
   492b0:	add	x0, sp, #0xe0
   492b4:	str	x0, [sp, #8]
   492b8:	ldr	x0, [sp, #1216]
   492bc:	str	x0, [sp]
   492c0:	ldr	x7, [sp, #96]
   492c4:	ldr	x6, [sp, #104]
   492c8:	ldr	x5, [sp, #112]
   492cc:	ldr	x4, [sp, #120]
   492d0:	ldr	x3, [sp, #128]
   492d4:	ldr	w2, [sp, #964]
   492d8:	ldr	x1, [sp, #144]
   492dc:	ldr	x0, [sp, #152]
   492e0:	bl	484d0 <__asan_backtrace_uncompress_zdebug@@Base+0x9c>
   492e4:	str	w0, [sp, #960]
   492e8:	add	x0, sp, #0x130
   492ec:	ldr	x3, [sp, #112]
   492f0:	ldr	x2, [sp, #120]
   492f4:	mov	x1, x0
   492f8:	ldr	x0, [sp, #152]
   492fc:	bl	6660 <__asan_backtrace_release_view@plt>
   49300:	str	wzr, [sp, #1144]
   49304:	ldr	w0, [sp, #960]
   49308:	cmp	w0, #0x0
   4930c:	b.ge	49328 <__asan_backtrace_uncompress_zdebug@@Base+0xef4>  // b.tcont
   49310:	ldr	x2, [sp, #112]
   49314:	ldr	x1, [sp, #120]
   49318:	ldr	w0, [sp, #964]
   4931c:	bl	6ba0 <__asan_backtrace_close@plt>
   49320:	ldr	w0, [sp, #960]
   49324:	b	49aa0 <__asan_backtrace_uncompress_zdebug@@Base+0x166c>
   49328:	ldr	w0, [sp, #1144]
   4932c:	cmp	w0, #0x0
   49330:	b.eq	49350 <__asan_backtrace_uncompress_zdebug@@Base+0xf1c>  // b.none
   49334:	add	x0, sp, #0x130
   49338:	ldr	x3, [sp, #112]
   4933c:	ldr	x2, [sp, #120]
   49340:	mov	x1, x0
   49344:	ldr	x0, [sp, #152]
   49348:	bl	6660 <__asan_backtrace_release_view@plt>
   4934c:	str	wzr, [sp, #1144]
   49350:	str	xzr, [sp, #1112]
   49354:	str	xzr, [sp, #1104]
   49358:	str	wzr, [sp, #1188]
   4935c:	b	4940c <__asan_backtrace_uncompress_zdebug@@Base+0xfd8>
   49360:	ldr	w0, [sp, #1188]
   49364:	lsl	x0, x0, #5
   49368:	add	x1, sp, #0x1b0
   4936c:	ldr	x0, [x1, x0]
   49370:	cmp	x0, #0x0
   49374:	b.eq	493fc <__asan_backtrace_uncompress_zdebug@@Base+0xfc8>  // b.none
   49378:	ldr	x0, [sp, #1112]
   4937c:	cmp	x0, #0x0
   49380:	b.eq	493a0 <__asan_backtrace_uncompress_zdebug@@Base+0xf6c>  // b.none
   49384:	ldr	w0, [sp, #1188]
   49388:	lsl	x0, x0, #5
   4938c:	add	x1, sp, #0x1a8
   49390:	ldr	x0, [x1, x0]
   49394:	ldr	x1, [sp, #1112]
   49398:	cmp	x1, x0
   4939c:	b.le	493b4 <__asan_backtrace_uncompress_zdebug@@Base+0xf80>
   493a0:	ldr	w0, [sp, #1188]
   493a4:	lsl	x0, x0, #5
   493a8:	add	x1, sp, #0x1a8
   493ac:	ldr	x0, [x1, x0]
   493b0:	str	x0, [sp, #1112]
   493b4:	ldr	w0, [sp, #1188]
   493b8:	lsl	x0, x0, #5
   493bc:	add	x1, sp, #0x1a8
   493c0:	ldr	x0, [x1, x0]
   493c4:	mov	x2, x0
   493c8:	ldr	w0, [sp, #1188]
   493cc:	lsl	x0, x0, #5
   493d0:	add	x1, sp, #0x1b0
   493d4:	ldr	x0, [x1, x0]
   493d8:	add	x0, x2, x0
   493dc:	str	x0, [sp, #944]
   493e0:	ldr	x1, [sp, #944]
   493e4:	ldr	x0, [sp, #1104]
   493e8:	cmp	x1, x0
   493ec:	b.le	49400 <__asan_backtrace_uncompress_zdebug@@Base+0xfcc>
   493f0:	ldr	x0, [sp, #944]
   493f4:	str	x0, [sp, #1104]
   493f8:	b	49400 <__asan_backtrace_uncompress_zdebug@@Base+0xfcc>
   493fc:	nop
   49400:	ldr	w0, [sp, #1188]
   49404:	add	w0, w0, #0x1
   49408:	str	w0, [sp, #1188]
   4940c:	ldr	w0, [sp, #1188]
   49410:	cmp	w0, #0x9
   49414:	b.ls	49360 <__asan_backtrace_uncompress_zdebug@@Base+0xf2c>  // b.plast
   49418:	ldr	x0, [sp, #1112]
   4941c:	cmp	x0, #0x0
   49420:	b.eq	49430 <__asan_backtrace_uncompress_zdebug@@Base+0xffc>  // b.none
   49424:	ldr	x0, [sp, #1104]
   49428:	cmp	x0, #0x0
   4942c:	b.ne	49450 <__asan_backtrace_uncompress_zdebug@@Base+0x101c>  // b.any
   49430:	ldr	x2, [sp, #112]
   49434:	ldr	x1, [sp, #120]
   49438:	ldr	w0, [sp, #140]
   4943c:	bl	6ba0 <__asan_backtrace_close@plt>
   49440:	cmp	w0, #0x0
   49444:	b.eq	498fc <__asan_backtrace_uncompress_zdebug@@Base+0x14c8>  // b.none
   49448:	mov	w0, #0x1                   	// #1
   4944c:	b	49aa0 <__asan_backtrace_uncompress_zdebug@@Base+0x166c>
   49450:	ldr	x1, [sp, #1104]
   49454:	ldr	x0, [sp, #1112]
   49458:	sub	x0, x1, x0
   4945c:	mov	x1, x0
   49460:	add	x0, sp, #0x118
   49464:	mov	x6, x0
   49468:	ldr	x5, [sp, #112]
   4946c:	ldr	x4, [sp, #120]
   49470:	mov	x3, x1
   49474:	ldr	x2, [sp, #1112]
   49478:	ldr	w1, [sp, #140]
   4947c:	ldr	x0, [sp, #152]
   49480:	bl	69f0 <__asan_backtrace_get_view@plt>
   49484:	cmp	w0, #0x0
   49488:	b.eq	49904 <__asan_backtrace_uncompress_zdebug@@Base+0x14d0>  // b.none
   4948c:	mov	w0, #0x1                   	// #1
   49490:	str	w0, [sp, #1100]
   49494:	ldr	x2, [sp, #112]
   49498:	ldr	x1, [sp, #120]
   4949c:	ldr	w0, [sp, #140]
   494a0:	bl	6ba0 <__asan_backtrace_close@plt>
   494a4:	cmp	w0, #0x0
   494a8:	b.eq	4990c <__asan_backtrace_uncompress_zdebug@@Base+0x14d8>  // b.none
   494ac:	mov	w0, #0xffffffff            	// #-1
   494b0:	str	w0, [sp, #140]
   494b4:	str	wzr, [sp, #1096]
   494b8:	str	wzr, [sp, #1188]
   494bc:	b	49540 <__asan_backtrace_uncompress_zdebug@@Base+0x110c>
   494c0:	ldr	w0, [sp, #1188]
   494c4:	lsl	x0, x0, #5
   494c8:	add	x1, sp, #0x1b0
   494cc:	ldr	x0, [x1, x0]
   494d0:	cmp	x0, #0x0
   494d4:	b.ne	494ec <__asan_backtrace_uncompress_zdebug@@Base+0x10b8>  // b.any
   494d8:	ldr	w0, [sp, #1188]
   494dc:	lsl	x0, x0, #5
   494e0:	add	x1, sp, #0x1b8
   494e4:	str	xzr, [x1, x0]
   494e8:	b	49534 <__asan_backtrace_uncompress_zdebug@@Base+0x1100>
   494ec:	ldr	x0, [sp, #280]
   494f0:	ldr	w1, [sp, #1188]
   494f4:	lsl	x1, x1, #5
   494f8:	add	x2, sp, #0x1a8
   494fc:	ldr	x2, [x2, x1]
   49500:	ldr	x1, [sp, #1112]
   49504:	sub	x1, x2, x1
   49508:	add	x2, x0, x1
   4950c:	ldr	w0, [sp, #1188]
   49510:	lsl	x0, x0, #5
   49514:	add	x1, sp, #0x1b8
   49518:	str	x2, [x1, x0]
   4951c:	ldr	w0, [sp, #1188]
   49520:	cmp	w0, #0x4
   49524:	b.hi	49534 <__asan_backtrace_uncompress_zdebug@@Base+0x1100>  // b.pmore
   49528:	ldr	w0, [sp, #1096]
   4952c:	add	w0, w0, #0x1
   49530:	str	w0, [sp, #1096]
   49534:	ldr	w0, [sp, #1188]
   49538:	add	w0, w0, #0x1
   4953c:	str	w0, [sp, #1188]
   49540:	ldr	w0, [sp, #1188]
   49544:	cmp	w0, #0x9
   49548:	b.ls	494c0 <__asan_backtrace_uncompress_zdebug@@Base+0x108c>  // b.plast
   4954c:	str	xzr, [sp, #1088]
   49550:	str	wzr, [sp, #1188]
   49554:	b	49658 <__asan_backtrace_uncompress_zdebug@@Base+0x1224>
   49558:	ldr	w0, [sp, #1188]
   4955c:	add	w0, w0, #0x5
   49560:	add	x1, sp, #0x1a8
   49564:	mov	w0, w0
   49568:	lsl	x0, x0, #5
   4956c:	add	x0, x1, x0
   49570:	str	x0, [sp, #952]
   49574:	ldr	w0, [sp, #1188]
   49578:	lsl	x0, x0, #5
   4957c:	add	x1, sp, #0x1b0
   49580:	ldr	x0, [x1, x0]
   49584:	cmp	x0, #0x0
   49588:	b.ne	4964c <__asan_backtrace_uncompress_zdebug@@Base+0x1218>  // b.any
   4958c:	ldr	x0, [sp, #952]
   49590:	ldr	x0, [x0, #8]
   49594:	cmp	x0, #0x0
   49598:	b.eq	4964c <__asan_backtrace_uncompress_zdebug@@Base+0x1218>  // b.none
   4959c:	ldr	x0, [sp, #1088]
   495a0:	cmp	x0, #0x0
   495a4:	b.ne	495cc <__asan_backtrace_uncompress_zdebug@@Base+0x1198>  // b.any
   495a8:	ldr	x3, [sp, #112]
   495ac:	ldr	x2, [sp, #120]
   495b0:	mov	x1, #0x13b4                	// #5044
   495b4:	ldr	x0, [sp, #152]
   495b8:	bl	67f0 <__asan_backtrace_alloc@plt>
   495bc:	str	x0, [sp, #1088]
   495c0:	ldr	x0, [sp, #1088]
   495c4:	cmp	x0, #0x0
   495c8:	b.eq	49914 <__asan_backtrace_uncompress_zdebug@@Base+0x14e0>  // b.none
   495cc:	str	xzr, [sp, #192]
   495d0:	str	xzr, [sp, #184]
   495d4:	ldr	x0, [sp, #952]
   495d8:	ldr	x1, [x0, #16]
   495dc:	ldr	x0, [sp, #952]
   495e0:	ldr	x0, [x0, #8]
   495e4:	add	x3, sp, #0xb8
   495e8:	add	x2, sp, #0xc0
   495ec:	mov	x7, x3
   495f0:	mov	x6, x2
   495f4:	ldr	x5, [sp, #112]
   495f8:	ldr	x4, [sp, #120]
   495fc:	ldr	x3, [sp, #1088]
   49600:	mov	x2, x0
   49604:	ldr	x0, [sp, #152]
   49608:	bl	48188 <__asan_internal_strnlen@@Base+0x3b14>
   4960c:	cmp	w0, #0x0
   49610:	b.eq	4991c <__asan_backtrace_uncompress_zdebug@@Base+0x14e8>  // b.none
   49614:	ldr	x2, [sp, #192]
   49618:	ldr	w0, [sp, #1188]
   4961c:	lsl	x0, x0, #5
   49620:	add	x1, sp, #0x1b8
   49624:	str	x2, [x1, x0]
   49628:	ldr	x2, [sp, #184]
   4962c:	ldr	w0, [sp, #1188]
   49630:	lsl	x0, x0, #5
   49634:	add	x1, sp, #0x1b0
   49638:	str	x2, [x1, x0]
   4963c:	ldr	w0, [sp, #1188]
   49640:	lsl	x0, x0, #5
   49644:	add	x1, sp, #0x1c0
   49648:	str	wzr, [x1, x0]
   4964c:	ldr	w0, [sp, #1188]
   49650:	add	w0, w0, #0x1
   49654:	str	w0, [sp, #1188]
   49658:	ldr	w0, [sp, #1188]
   4965c:	cmp	w0, #0x4
   49660:	b.ls	49558 <__asan_backtrace_uncompress_zdebug@@Base+0x1124>  // b.plast
   49664:	str	wzr, [sp, #1188]
   49668:	b	49780 <__asan_backtrace_uncompress_zdebug@@Base+0x134c>
   4966c:	ldr	w0, [sp, #1188]
   49670:	lsl	x0, x0, #5
   49674:	add	x1, sp, #0x1b0
   49678:	ldr	x0, [x1, x0]
   4967c:	cmp	x0, #0x0
   49680:	b.eq	49770 <__asan_backtrace_uncompress_zdebug@@Base+0x133c>  // b.none
   49684:	ldr	w0, [sp, #1188]
   49688:	lsl	x0, x0, #5
   4968c:	add	x1, sp, #0x1c0
   49690:	ldr	w0, [x1, x0]
   49694:	cmp	w0, #0x0
   49698:	b.eq	49770 <__asan_backtrace_uncompress_zdebug@@Base+0x133c>  // b.none
   4969c:	ldr	x0, [sp, #1088]
   496a0:	cmp	x0, #0x0
   496a4:	b.ne	496cc <__asan_backtrace_uncompress_zdebug@@Base+0x1298>  // b.any
   496a8:	ldr	x3, [sp, #112]
   496ac:	ldr	x2, [sp, #120]
   496b0:	mov	x1, #0x13b4                	// #5044
   496b4:	ldr	x0, [sp, #152]
   496b8:	bl	67f0 <__asan_backtrace_alloc@plt>
   496bc:	str	x0, [sp, #1088]
   496c0:	ldr	x0, [sp, #1088]
   496c4:	cmp	x0, #0x0
   496c8:	b.eq	49924 <__asan_backtrace_uncompress_zdebug@@Base+0x14f0>  // b.none
   496cc:	str	xzr, [sp, #176]
   496d0:	str	xzr, [sp, #168]
   496d4:	ldr	w0, [sp, #1188]
   496d8:	lsl	x0, x0, #5
   496dc:	add	x1, sp, #0x1b8
   496e0:	ldr	x8, [x1, x0]
   496e4:	ldr	w0, [sp, #1188]
   496e8:	lsl	x0, x0, #5
   496ec:	add	x1, sp, #0x1b0
   496f0:	ldr	x0, [x1, x0]
   496f4:	add	x2, sp, #0xa8
   496f8:	add	x1, sp, #0xb0
   496fc:	mov	x7, x2
   49700:	mov	x6, x1
   49704:	ldr	x5, [sp, #112]
   49708:	ldr	x4, [sp, #120]
   4970c:	ldr	x3, [sp, #1088]
   49710:	mov	x2, x0
   49714:	mov	x1, x8
   49718:	ldr	x0, [sp, #152]
   4971c:	bl	482f8 <__asan_internal_strnlen@@Base+0x3c84>
   49720:	cmp	w0, #0x0
   49724:	b.eq	4992c <__asan_backtrace_uncompress_zdebug@@Base+0x14f8>  // b.none
   49728:	ldr	x2, [sp, #176]
   4972c:	ldr	w0, [sp, #1188]
   49730:	lsl	x0, x0, #5
   49734:	add	x1, sp, #0x1b8
   49738:	str	x2, [x1, x0]
   4973c:	ldr	x2, [sp, #168]
   49740:	ldr	w0, [sp, #1188]
   49744:	lsl	x0, x0, #5
   49748:	add	x1, sp, #0x1b0
   4974c:	str	x2, [x1, x0]
   49750:	ldr	w0, [sp, #1188]
   49754:	lsl	x0, x0, #5
   49758:	add	x1, sp, #0x1c0
   4975c:	str	wzr, [x1, x0]
   49760:	ldr	w0, [sp, #1096]
   49764:	sub	w0, w0, #0x1
   49768:	str	w0, [sp, #1096]
   4976c:	b	49774 <__asan_backtrace_uncompress_zdebug@@Base+0x1340>
   49770:	nop
   49774:	ldr	w0, [sp, #1188]
   49778:	add	w0, w0, #0x1
   4977c:	str	w0, [sp, #1188]
   49780:	ldr	w0, [sp, #1188]
   49784:	cmp	w0, #0x4
   49788:	b.ls	4966c <__asan_backtrace_uncompress_zdebug@@Base+0x1238>  // b.plast
   4978c:	ldr	x0, [sp, #1088]
   49790:	cmp	x0, #0x0
   49794:	b.eq	497b0 <__asan_backtrace_uncompress_zdebug@@Base+0x137c>  // b.none
   49798:	ldr	x4, [sp, #112]
   4979c:	ldr	x3, [sp, #120]
   497a0:	mov	x2, #0x13b4                	// #5044
   497a4:	ldr	x1, [sp, #1088]
   497a8:	ldr	x0, [sp, #152]
   497ac:	bl	6ac0 <__asan_backtrace_free@plt>
   497b0:	ldr	w0, [sp, #1100]
   497b4:	cmp	w0, #0x0
   497b8:	b.eq	497e4 <__asan_backtrace_uncompress_zdebug@@Base+0x13b0>  // b.none
   497bc:	ldr	w0, [sp, #1096]
   497c0:	cmp	w0, #0x0
   497c4:	b.ne	497e4 <__asan_backtrace_uncompress_zdebug@@Base+0x13b0>  // b.any
   497c8:	add	x0, sp, #0x118
   497cc:	ldr	x3, [sp, #112]
   497d0:	ldr	x2, [sp, #120]
   497d4:	mov	x1, x0
   497d8:	ldr	x0, [sp, #152]
   497dc:	bl	6660 <__asan_backtrace_release_view@plt>
   497e0:	str	wzr, [sp, #1100]
   497e4:	ldr	x8, [sp, #440]
   497e8:	ldr	x9, [sp, #432]
   497ec:	ldr	x10, [sp, #472]
   497f0:	ldr	x11, [sp, #464]
   497f4:	ldr	x6, [sp, #504]
   497f8:	ldr	x7, [sp, #496]
   497fc:	ldr	x0, [sp, #536]
   49800:	ldr	x1, [sp, #528]
   49804:	ldr	x2, [sp, #568]
   49808:	ldr	x3, [sp, #560]
   4980c:	ldrb	w4, [sp, #797]
   49810:	cmp	w4, #0x2
   49814:	cset	w4, eq  // eq = none
   49818:	and	w4, w4, #0xff
   4981c:	mov	w12, w4
   49820:	ldr	x4, [sp, #224]
   49824:	ldr	x5, [sp, #1224]
   49828:	str	x5, [sp, #72]
   4982c:	ldr	x5, [sp, #104]
   49830:	str	x5, [sp, #64]
   49834:	ldr	x5, [sp, #112]
   49838:	str	x5, [sp, #56]
   4983c:	ldr	x5, [sp, #120]
   49840:	str	x5, [sp, #48]
   49844:	str	x4, [sp, #40]
   49848:	str	w12, [sp, #32]
   4984c:	str	x3, [sp, #24]
   49850:	str	x2, [sp, #16]
   49854:	str	x1, [sp, #8]
   49858:	str	x0, [sp]
   4985c:	mov	x5, x11
   49860:	mov	x4, x10
   49864:	mov	x3, x9
   49868:	mov	x2, x8
   4986c:	ldr	x1, [sp, #128]
   49870:	ldr	x0, [sp, #152]
   49874:	bl	6670 <__asan_backtrace_dwarf_add@plt>
   49878:	cmp	w0, #0x0
   4987c:	b.eq	49934 <__asan_backtrace_uncompress_zdebug@@Base+0x1500>  // b.none
   49880:	ldr	x0, [sp, #1216]
   49884:	mov	w1, #0x1                   	// #1
   49888:	str	w1, [x0]
   4988c:	mov	w0, #0x1                   	// #1
   49890:	b	49aa0 <__asan_backtrace_uncompress_zdebug@@Base+0x166c>
   49894:	nop
   49898:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4989c:	nop
   498a0:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   498a4:	nop
   498a8:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   498ac:	nop
   498b0:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   498b4:	nop
   498b8:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   498bc:	nop
   498c0:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   498c4:	nop
   498c8:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   498cc:	nop
   498d0:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   498d4:	nop
   498d8:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   498dc:	nop
   498e0:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   498e4:	nop
   498e8:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   498ec:	nop
   498f0:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   498f4:	nop
   498f8:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   498fc:	nop
   49900:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   49904:	nop
   49908:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4990c:	nop
   49910:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   49914:	nop
   49918:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4991c:	nop
   49920:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   49924:	nop
   49928:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4992c:	nop
   49930:	b	49938 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   49934:	nop
   49938:	ldr	w0, [sp, #1204]
   4993c:	cmp	w0, #0x0
   49940:	b.eq	4995c <__asan_backtrace_uncompress_zdebug@@Base+0x1528>  // b.none
   49944:	add	x0, sp, #0x300
   49948:	ldr	x3, [sp, #112]
   4994c:	ldr	x2, [sp, #120]
   49950:	mov	x1, x0
   49954:	ldr	x0, [sp, #152]
   49958:	bl	6660 <__asan_backtrace_release_view@plt>
   4995c:	ldr	w0, [sp, #1200]
   49960:	cmp	w0, #0x0
   49964:	b.eq	49980 <__asan_backtrace_uncompress_zdebug@@Base+0x154c>  // b.none
   49968:	add	x0, sp, #0x2e8
   4996c:	ldr	x3, [sp, #112]
   49970:	ldr	x2, [sp, #120]
   49974:	mov	x1, x0
   49978:	ldr	x0, [sp, #152]
   4997c:	bl	6660 <__asan_backtrace_release_view@plt>
   49980:	ldr	w0, [sp, #1184]
   49984:	cmp	w0, #0x0
   49988:	b.eq	499a4 <__asan_backtrace_uncompress_zdebug@@Base+0x1570>  // b.none
   4998c:	add	x0, sp, #0x190
   49990:	ldr	x3, [sp, #112]
   49994:	ldr	x2, [sp, #120]
   49998:	mov	x1, x0
   4999c:	ldr	x0, [sp, #152]
   499a0:	bl	6660 <__asan_backtrace_release_view@plt>
   499a4:	ldr	w0, [sp, #1180]
   499a8:	cmp	w0, #0x0
   499ac:	b.eq	499c8 <__asan_backtrace_uncompress_zdebug@@Base+0x1594>  // b.none
   499b0:	add	x0, sp, #0x178
   499b4:	ldr	x3, [sp, #112]
   499b8:	ldr	x2, [sp, #120]
   499bc:	mov	x1, x0
   499c0:	ldr	x0, [sp, #152]
   499c4:	bl	6660 <__asan_backtrace_release_view@plt>
   499c8:	ldr	w0, [sp, #1160]
   499cc:	cmp	w0, #0x0
   499d0:	b.eq	499ec <__asan_backtrace_uncompress_zdebug@@Base+0x15b8>  // b.none
   499d4:	add	x0, sp, #0x148
   499d8:	ldr	x3, [sp, #112]
   499dc:	ldr	x2, [sp, #120]
   499e0:	mov	x1, x0
   499e4:	ldr	x0, [sp, #152]
   499e8:	bl	6660 <__asan_backtrace_release_view@plt>
   499ec:	ldr	w0, [sp, #1144]
   499f0:	cmp	w0, #0x0
   499f4:	b.eq	49a10 <__asan_backtrace_uncompress_zdebug@@Base+0x15dc>  // b.none
   499f8:	add	x0, sp, #0x130
   499fc:	ldr	x3, [sp, #112]
   49a00:	ldr	x2, [sp, #120]
   49a04:	mov	x1, x0
   49a08:	ldr	x0, [sp, #152]
   49a0c:	bl	6660 <__asan_backtrace_release_view@plt>
   49a10:	ldr	w0, [sp, #1176]
   49a14:	cmp	w0, #0x0
   49a18:	b.eq	49a34 <__asan_backtrace_uncompress_zdebug@@Base+0x1600>  // b.none
   49a1c:	add	x0, sp, #0x160
   49a20:	ldr	x3, [sp, #112]
   49a24:	ldr	x2, [sp, #120]
   49a28:	mov	x1, x0
   49a2c:	ldr	x0, [sp, #152]
   49a30:	bl	6660 <__asan_backtrace_release_view@plt>
   49a34:	ldr	w0, [sp, #1100]
   49a38:	cmp	w0, #0x0
   49a3c:	b.eq	49a58 <__asan_backtrace_uncompress_zdebug@@Base+0x1624>  // b.none
   49a40:	add	x0, sp, #0x118
   49a44:	ldr	x3, [sp, #112]
   49a48:	ldr	x2, [sp, #120]
   49a4c:	mov	x1, x0
   49a50:	ldr	x0, [sp, #152]
   49a54:	bl	6660 <__asan_backtrace_release_view@plt>
   49a58:	ldr	x0, [sp, #1080]
   49a5c:	cmp	x0, #0x0
   49a60:	b.eq	49a80 <__asan_backtrace_uncompress_zdebug@@Base+0x164c>  // b.none
   49a64:	ldr	x0, [sp, #1080]
   49a68:	add	x0, x0, #0x18
   49a6c:	ldr	x3, [sp, #112]
   49a70:	ldr	x2, [sp, #120]
   49a74:	mov	x1, x0
   49a78:	ldr	x0, [sp, #152]
   49a7c:	bl	6660 <__asan_backtrace_release_view@plt>
   49a80:	ldr	w0, [sp, #140]
   49a84:	cmn	w0, #0x1
   49a88:	b.eq	49a9c <__asan_backtrace_uncompress_zdebug@@Base+0x1668>  // b.none
   49a8c:	ldr	x2, [sp, #112]
   49a90:	ldr	x1, [sp, #120]
   49a94:	ldr	w0, [sp, #140]
   49a98:	bl	6ba0 <__asan_backtrace_close@plt>
   49a9c:	mov	w0, #0x0                   	// #0
   49aa0:	ldp	x29, x30, [sp, #80]
   49aa4:	add	sp, sp, #0x4c0
   49aa8:	ret
   49aac:	sub	sp, sp, #0x90
   49ab0:	stp	x29, x30, [sp, #48]
   49ab4:	add	x29, sp, #0x30
   49ab8:	str	x0, [sp, #88]
   49abc:	str	x1, [sp, #80]
   49ac0:	str	x2, [sp, #72]
   49ac4:	ldr	x0, [sp, #72]
   49ac8:	str	x0, [sp, #120]
   49acc:	ldr	x0, [sp, #88]
   49ad0:	ldr	x0, [x0, #8]
   49ad4:	cmp	x0, #0x0
   49ad8:	b.eq	49af0 <__asan_backtrace_uncompress_zdebug@@Base+0x16bc>  // b.none
   49adc:	ldr	x0, [sp, #88]
   49ae0:	ldr	x0, [x0, #8]
   49ae4:	ldrb	w0, [x0]
   49ae8:	cmp	w0, #0x0
   49aec:	b.ne	49b30 <__asan_backtrace_uncompress_zdebug@@Base+0x16fc>  // b.any
   49af0:	ldr	x0, [sp, #120]
   49af4:	ldr	w0, [x0, #56]
   49af8:	cmn	w0, #0x1
   49afc:	b.ne	49b08 <__asan_backtrace_uncompress_zdebug@@Base+0x16d4>  // b.any
   49b00:	mov	w0, #0x0                   	// #0
   49b04:	b	49c64 <__asan_backtrace_uncompress_zdebug@@Base+0x1830>
   49b08:	ldr	x0, [sp, #120]
   49b0c:	ldr	x0, [x0, #48]
   49b10:	str	x0, [sp, #136]
   49b14:	ldr	x0, [sp, #120]
   49b18:	ldr	w0, [x0, #56]
   49b1c:	str	w0, [sp, #132]
   49b20:	ldr	x0, [sp, #120]
   49b24:	mov	w1, #0xffffffff            	// #-1
   49b28:	str	w1, [x0, #56]
   49b2c:	b	49bc0 <__asan_backtrace_uncompress_zdebug@@Base+0x178c>
   49b30:	ldr	x0, [sp, #120]
   49b34:	ldr	w0, [x0, #56]
   49b38:	cmn	w0, #0x1
   49b3c:	b.eq	49b70 <__asan_backtrace_uncompress_zdebug@@Base+0x173c>  // b.none
   49b40:	ldr	x0, [sp, #120]
   49b44:	ldr	w3, [x0, #56]
   49b48:	ldr	x0, [sp, #120]
   49b4c:	ldr	x1, [x0, #8]
   49b50:	ldr	x0, [sp, #120]
   49b54:	ldr	x0, [x0, #16]
   49b58:	mov	x2, x0
   49b5c:	mov	w0, w3
   49b60:	bl	6ba0 <__asan_backtrace_close@plt>
   49b64:	ldr	x0, [sp, #120]
   49b68:	mov	w1, #0xffffffff            	// #-1
   49b6c:	str	w1, [x0, #56]
   49b70:	ldr	x0, [sp, #88]
   49b74:	ldr	x0, [x0, #8]
   49b78:	str	x0, [sp, #136]
   49b7c:	ldr	x0, [sp, #88]
   49b80:	ldr	x4, [x0, #8]
   49b84:	ldr	x0, [sp, #120]
   49b88:	ldr	x1, [x0, #8]
   49b8c:	ldr	x0, [sp, #120]
   49b90:	ldr	x0, [x0, #16]
   49b94:	add	x2, sp, #0x74
   49b98:	mov	x3, x2
   49b9c:	mov	x2, x0
   49ba0:	mov	x0, x4
   49ba4:	bl	6c70 <__asan_backtrace_open@plt>
   49ba8:	str	w0, [sp, #132]
   49bac:	ldr	w0, [sp, #132]
   49bb0:	cmp	w0, #0x0
   49bb4:	b.ge	49bc0 <__asan_backtrace_uncompress_zdebug@@Base+0x178c>  // b.tcont
   49bb8:	mov	w0, #0x0                   	// #0
   49bbc:	b	49c64 <__asan_backtrace_uncompress_zdebug@@Base+0x1830>
   49bc0:	ldr	x0, [sp, #120]
   49bc4:	ldr	x8, [x0]
   49bc8:	ldr	x0, [sp, #88]
   49bcc:	ldr	x1, [x0]
   49bd0:	ldr	x0, [sp, #120]
   49bd4:	ldr	x2, [x0, #8]
   49bd8:	ldr	x0, [sp, #120]
   49bdc:	ldr	x3, [x0, #16]
   49be0:	ldr	x0, [sp, #120]
   49be4:	ldr	x5, [x0, #32]
   49be8:	add	x4, sp, #0x68
   49bec:	str	wzr, [sp, #40]
   49bf0:	str	xzr, [sp, #32]
   49bf4:	str	wzr, [sp, #24]
   49bf8:	str	wzr, [sp, #16]
   49bfc:	str	xzr, [sp, #8]
   49c00:	add	x0, sp, #0x64
   49c04:	str	x0, [sp]
   49c08:	mov	x7, x5
   49c0c:	mov	x6, x4
   49c10:	mov	x5, x3
   49c14:	mov	x4, x2
   49c18:	mov	x3, x1
   49c1c:	ldr	w2, [sp, #132]
   49c20:	ldr	x1, [sp, #136]
   49c24:	mov	x0, x8
   49c28:	bl	484d0 <__asan_backtrace_uncompress_zdebug@@Base+0x9c>
   49c2c:	cmp	w0, #0x0
   49c30:	b.eq	49c60 <__asan_backtrace_uncompress_zdebug@@Base+0x182c>  // b.none
   49c34:	ldr	w0, [sp, #100]
   49c38:	cmp	w0, #0x0
   49c3c:	b.eq	49c60 <__asan_backtrace_uncompress_zdebug@@Base+0x182c>  // b.none
   49c40:	ldr	x0, [sp, #120]
   49c44:	ldr	x0, [x0, #40]
   49c48:	mov	w1, #0x1                   	// #1
   49c4c:	str	w1, [x0]
   49c50:	ldr	x0, [sp, #120]
   49c54:	ldr	x0, [x0, #24]
   49c58:	ldr	x1, [sp, #104]
   49c5c:	str	x1, [x0]
   49c60:	mov	w0, #0x0                   	// #0
   49c64:	ldp	x29, x30, [sp, #48]
   49c68:	add	sp, sp, #0x90
   49c6c:	ret

0000000000049c70 <__asan_backtrace_initialize@@Base>:
   49c70:	sub	sp, sp, #0xd0
   49c74:	stp	x29, x30, [sp, #48]
   49c78:	add	x29, sp, #0x30
   49c7c:	str	x0, [sp, #104]
   49c80:	str	x1, [sp, #96]
   49c84:	str	w2, [sp, #92]
   49c88:	str	x3, [sp, #80]
   49c8c:	str	x4, [sp, #72]
   49c90:	str	x5, [sp, #64]
   49c94:	adrp	x0, 44000 <__asan_cplus_demangle_init_info@@Base+0x4f8>
   49c98:	add	x0, x0, #0x800
   49c9c:	str	x0, [sp, #184]
   49ca0:	add	x2, sp, #0xc8
   49ca4:	add	x1, sp, #0xb8
   49ca8:	str	wzr, [sp, #40]
   49cac:	str	xzr, [sp, #32]
   49cb0:	str	wzr, [sp, #24]
   49cb4:	mov	w0, #0x1                   	// #1
   49cb8:	str	w0, [sp, #16]
   49cbc:	str	xzr, [sp, #8]
   49cc0:	add	x0, sp, #0xc4
   49cc4:	str	x0, [sp]
   49cc8:	mov	x7, x2
   49ccc:	mov	x6, x1
   49cd0:	ldr	x5, [sp, #72]
   49cd4:	ldr	x4, [sp, #80]
   49cd8:	mov	x3, #0x0                   	// #0
   49cdc:	ldr	w2, [sp, #92]
   49ce0:	ldr	x1, [sp, #96]
   49ce4:	ldr	x0, [sp, #104]
   49ce8:	bl	484d0 <__asan_backtrace_uncompress_zdebug@@Base+0x9c>
   49cec:	str	w0, [sp, #204]
   49cf0:	ldr	w0, [sp, #204]
   49cf4:	cmp	w0, #0x0
   49cf8:	b.ne	49d04 <__asan_backtrace_initialize@@Base+0x94>  // b.any
   49cfc:	mov	w0, #0x0                   	// #0
   49d00:	b	49e80 <__asan_backtrace_initialize@@Base+0x210>
   49d04:	ldr	x0, [sp, #104]
   49d08:	str	x0, [sp, #120]
   49d0c:	ldr	x0, [sp, #80]
   49d10:	str	x0, [sp, #128]
   49d14:	ldr	x0, [sp, #72]
   49d18:	str	x0, [sp, #136]
   49d1c:	add	x0, sp, #0xb8
   49d20:	str	x0, [sp, #144]
   49d24:	add	x0, sp, #0xc8
   49d28:	str	x0, [sp, #152]
   49d2c:	add	x0, sp, #0xc4
   49d30:	str	x0, [sp, #160]
   49d34:	ldr	x0, [sp, #96]
   49d38:	str	x0, [sp, #168]
   49d3c:	ldr	w0, [sp, #204]
   49d40:	cmp	w0, #0x0
   49d44:	b.ge	49d50 <__asan_backtrace_initialize@@Base+0xe0>  // b.tcont
   49d48:	ldr	w0, [sp, #92]
   49d4c:	b	49d54 <__asan_backtrace_initialize@@Base+0xe4>
   49d50:	mov	w0, #0xffffffff            	// #-1
   49d54:	str	w0, [sp, #176]
   49d58:	add	x0, sp, #0x78
   49d5c:	mov	x1, x0
   49d60:	adrp	x0, 49000 <__asan_backtrace_uncompress_zdebug@@Base+0xbcc>
   49d64:	add	x0, x0, #0xaac
   49d68:	bl	6880 <dl_iterate_phdr@plt>
   49d6c:	ldr	x0, [sp, #104]
   49d70:	ldr	w0, [x0, #8]
   49d74:	cmp	w0, #0x0
   49d78:	b.ne	49dc0 <__asan_backtrace_initialize@@Base+0x150>  // b.any
   49d7c:	ldr	w0, [sp, #200]
   49d80:	cmp	w0, #0x0
   49d84:	b.eq	49d9c <__asan_backtrace_initialize@@Base+0x12c>  // b.none
   49d88:	ldr	x0, [sp, #104]
   49d8c:	adrp	x1, 44000 <__asan_cplus_demangle_init_info@@Base+0x4f8>
   49d90:	add	x1, x1, #0xdc8
   49d94:	str	x1, [x0, #40]
   49d98:	b	49e0c <__asan_backtrace_initialize@@Base+0x19c>
   49d9c:	ldr	x0, [sp, #104]
   49da0:	ldr	x0, [x0, #40]
   49da4:	cmp	x0, #0x0
   49da8:	b.ne	49e0c <__asan_backtrace_initialize@@Base+0x19c>  // b.any
   49dac:	ldr	x0, [sp, #104]
   49db0:	adrp	x1, 44000 <__asan_cplus_demangle_init_info@@Base+0x4f8>
   49db4:	add	x1, x1, #0x840
   49db8:	str	x1, [x0, #40]
   49dbc:	b	49e0c <__asan_backtrace_initialize@@Base+0x19c>
   49dc0:	ldr	w0, [sp, #200]
   49dc4:	cmp	w0, #0x0
   49dc8:	b.eq	49de4 <__asan_backtrace_initialize@@Base+0x174>  // b.none
   49dcc:	ldr	x0, [sp, #104]
   49dd0:	add	x0, x0, #0x28
   49dd4:	adrp	x1, 44000 <__asan_cplus_demangle_init_info@@Base+0x4f8>
   49dd8:	add	x1, x1, #0xdc8
   49ddc:	stlr	x1, [x0]
   49de0:	b	49e0c <__asan_backtrace_initialize@@Base+0x19c>
   49de4:	ldr	x0, [sp, #104]
   49de8:	add	x0, x0, #0x28
   49dec:	adrp	x1, 44000 <__asan_cplus_demangle_init_info@@Base+0x4f8>
   49df0:	add	x1, x1, #0x840
   49df4:	ldxr	x2, [x0]
   49df8:	cbnz	x2, 49e04 <__asan_backtrace_initialize@@Base+0x194>
   49dfc:	stlxr	w3, x1, [x0]
   49e00:	cbnz	w3, 49df4 <__asan_backtrace_initialize@@Base+0x184>
   49e04:	cmp	x2, #0x0
   49e08:	dmb	ish
   49e0c:	ldr	x0, [sp, #104]
   49e10:	ldr	w0, [x0, #8]
   49e14:	cmp	w0, #0x0
   49e18:	b.ne	49e30 <__asan_backtrace_initialize@@Base+0x1c0>  // b.any
   49e1c:	ldr	x0, [sp, #104]
   49e20:	ldr	x1, [x0, #24]
   49e24:	ldr	x0, [sp, #64]
   49e28:	str	x1, [x0]
   49e2c:	b	49e48 <__asan_backtrace_initialize@@Base+0x1d8>
   49e30:	ldr	x0, [sp, #104]
   49e34:	add	x0, x0, #0x18
   49e38:	ldar	x0, [x0]
   49e3c:	mov	x1, x0
   49e40:	ldr	x0, [sp, #64]
   49e44:	str	x1, [x0]
   49e48:	ldr	x0, [sp, #64]
   49e4c:	ldr	x0, [x0]
   49e50:	cmp	x0, #0x0
   49e54:	b.eq	49e70 <__asan_backtrace_initialize@@Base+0x200>  // b.none
   49e58:	ldr	x0, [sp, #64]
   49e5c:	ldr	x1, [x0]
   49e60:	adrp	x0, 44000 <__asan_cplus_demangle_init_info@@Base+0x4f8>
   49e64:	add	x0, x0, #0x800
   49e68:	cmp	x1, x0
   49e6c:	b.ne	49e7c <__asan_backtrace_initialize@@Base+0x20c>  // b.any
   49e70:	ldr	x1, [sp, #184]
   49e74:	ldr	x0, [sp, #64]
   49e78:	str	x1, [x0]
   49e7c:	mov	w0, #0x1                   	// #1
   49e80:	ldp	x29, x30, [sp, #48]
   49e84:	add	sp, sp, #0xd0
   49e88:	ret

0000000000049e8c <__asan_backtrace_get_view@@Base>:
   49e8c:	stp	x29, x30, [sp, #-112]!
   49e90:	mov	x29, sp
   49e94:	str	x0, [sp, #72]
   49e98:	str	w1, [sp, #68]
   49e9c:	str	x2, [sp, #56]
   49ea0:	str	x3, [sp, #48]
   49ea4:	str	x4, [sp, #40]
   49ea8:	str	x5, [sp, #32]
   49eac:	str	x6, [sp, #24]
   49eb0:	bl	6b80 <getpagesize@plt>
   49eb4:	sxtw	x0, w0
   49eb8:	str	x0, [sp, #104]
   49ebc:	ldr	x0, [sp, #56]
   49ec0:	ldr	x1, [sp, #104]
   49ec4:	udiv	x2, x0, x1
   49ec8:	ldr	x1, [sp, #104]
   49ecc:	mul	x1, x2, x1
   49ed0:	sub	x0, x0, x1
   49ed4:	str	w0, [sp, #100]
   49ed8:	ldr	w0, [sp, #100]
   49edc:	ldr	x1, [sp, #56]
   49ee0:	sub	x0, x1, x0
   49ee4:	str	x0, [sp, #88]
   49ee8:	ldr	w0, [sp, #100]
   49eec:	ldr	x1, [sp, #48]
   49ef0:	add	x0, x1, x0
   49ef4:	str	x0, [sp, #48]
   49ef8:	ldr	x1, [sp, #104]
   49efc:	ldr	x0, [sp, #48]
   49f00:	add	x0, x1, x0
   49f04:	sub	x1, x0, #0x1
   49f08:	ldr	x0, [sp, #104]
   49f0c:	neg	x0, x0
   49f10:	and	x0, x1, x0
   49f14:	str	x0, [sp, #48]
   49f18:	ldr	x5, [sp, #88]
   49f1c:	ldr	w4, [sp, #68]
   49f20:	mov	w3, #0x2                   	// #2
   49f24:	mov	w2, #0x1                   	// #1
   49f28:	ldr	x1, [sp, #48]
   49f2c:	mov	x0, #0x0                   	// #0
   49f30:	bl	68e0 <mmap@plt>
   49f34:	str	x0, [sp, #80]
   49f38:	ldr	x0, [sp, #80]
   49f3c:	cmn	x0, #0x1
   49f40:	b.ne	49f6c <__asan_backtrace_get_view@@Base+0xe0>  // b.any
   49f44:	bl	69d0 <__errno_location@plt>
   49f48:	ldr	w0, [x0]
   49f4c:	ldr	x3, [sp, #40]
   49f50:	mov	w2, w0
   49f54:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0xd970>
   49f58:	add	x1, x0, #0x338
   49f5c:	ldr	x0, [sp, #32]
   49f60:	blr	x3
   49f64:	mov	w0, #0x0                   	// #0
   49f68:	b	49f9c <__asan_backtrace_get_view@@Base+0x110>
   49f6c:	ldr	w0, [sp, #100]
   49f70:	ldr	x1, [sp, #80]
   49f74:	add	x1, x1, x0
   49f78:	ldr	x0, [sp, #24]
   49f7c:	str	x1, [x0]
   49f80:	ldr	x0, [sp, #24]
   49f84:	ldr	x1, [sp, #80]
   49f88:	str	x1, [x0, #8]
   49f8c:	ldr	x0, [sp, #24]
   49f90:	ldr	x1, [sp, #48]
   49f94:	str	x1, [x0, #16]
   49f98:	mov	w0, #0x1                   	// #1
   49f9c:	ldp	x29, x30, [sp], #112
   49fa0:	ret

0000000000049fa4 <__asan_backtrace_release_view@@Base>:
   49fa4:	stp	x29, x30, [sp, #-64]!
   49fa8:	mov	x29, sp
   49fac:	str	x0, [sp, #40]
   49fb0:	str	x1, [sp, #32]
   49fb4:	str	x2, [sp, #24]
   49fb8:	str	x3, [sp, #16]
   49fbc:	ldr	x0, [sp, #32]
   49fc0:	ldr	x0, [x0, #8]
   49fc4:	str	x0, [sp, #56]
   49fc8:	ldr	x2, [sp, #56]
   49fcc:	ldr	x0, [sp, #32]
   49fd0:	ldr	x0, [x0, #16]
   49fd4:	mov	x1, x0
   49fd8:	mov	x0, x2
   49fdc:	bl	68f0 <munmap@plt>
   49fe0:	cmp	w0, #0x0
   49fe4:	b.ge	4a008 <__asan_backtrace_release_view@@Base+0x64>  // b.tcont
   49fe8:	bl	69d0 <__errno_location@plt>
   49fec:	ldr	w0, [x0]
   49ff0:	ldr	x3, [sp, #24]
   49ff4:	mov	w2, w0
   49ff8:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0xd970>
   49ffc:	add	x1, x0, #0x340
   4a000:	ldr	x0, [sp, #16]
   4a004:	blr	x3
   4a008:	nop
   4a00c:	ldp	x29, x30, [sp], #64
   4a010:	ret
   4a014:	sub	sp, sp, #0x40
   4a018:	str	x0, [sp, #24]
   4a01c:	str	x1, [sp, #16]
   4a020:	str	x2, [sp, #8]
   4a024:	ldr	x0, [sp, #8]
   4a028:	cmp	x0, #0xf
   4a02c:	b.ls	4a114 <__asan_backtrace_release_view@@Base+0x170>  // b.plast
   4a030:	str	xzr, [sp, #56]
   4a034:	str	xzr, [sp, #48]
   4a038:	ldr	x0, [sp, #24]
   4a03c:	add	x0, x0, #0x40
   4a040:	str	x0, [sp, #40]
   4a044:	b	4a094 <__asan_backtrace_release_view@@Base+0xf0>
   4a048:	ldr	x0, [sp, #48]
   4a04c:	cmp	x0, #0x0
   4a050:	b.eq	4a074 <__asan_backtrace_release_view@@Base+0xd0>  // b.none
   4a054:	ldr	x0, [sp, #40]
   4a058:	ldr	x0, [x0]
   4a05c:	ldr	x1, [x0, #8]
   4a060:	ldr	x0, [sp, #48]
   4a064:	ldr	x0, [x0]
   4a068:	ldr	x0, [x0, #8]
   4a06c:	cmp	x1, x0
   4a070:	b.cs	4a07c <__asan_backtrace_release_view@@Base+0xd8>  // b.hs, b.nlast
   4a074:	ldr	x0, [sp, #40]
   4a078:	str	x0, [sp, #48]
   4a07c:	ldr	x0, [sp, #56]
   4a080:	add	x0, x0, #0x1
   4a084:	str	x0, [sp, #56]
   4a088:	ldr	x0, [sp, #40]
   4a08c:	ldr	x0, [x0]
   4a090:	str	x0, [sp, #40]
   4a094:	ldr	x0, [sp, #40]
   4a098:	ldr	x0, [x0]
   4a09c:	cmp	x0, #0x0
   4a0a0:	b.ne	4a048 <__asan_backtrace_release_view@@Base+0xa4>  // b.any
   4a0a4:	ldr	x0, [sp, #56]
   4a0a8:	cmp	x0, #0xf
   4a0ac:	b.ls	4a0dc <__asan_backtrace_release_view@@Base+0x138>  // b.plast
   4a0b0:	ldr	x0, [sp, #48]
   4a0b4:	ldr	x0, [x0]
   4a0b8:	ldr	x0, [x0, #8]
   4a0bc:	ldr	x1, [sp, #8]
   4a0c0:	cmp	x1, x0
   4a0c4:	b.ls	4a110 <__asan_backtrace_release_view@@Base+0x16c>  // b.plast
   4a0c8:	ldr	x0, [sp, #48]
   4a0cc:	ldr	x0, [x0]
   4a0d0:	ldr	x1, [x0]
   4a0d4:	ldr	x0, [sp, #48]
   4a0d8:	str	x1, [x0]
   4a0dc:	ldr	x0, [sp, #16]
   4a0e0:	str	x0, [sp, #32]
   4a0e4:	ldr	x0, [sp, #24]
   4a0e8:	ldr	x1, [x0, #64]
   4a0ec:	ldr	x0, [sp, #32]
   4a0f0:	str	x1, [x0]
   4a0f4:	ldr	x0, [sp, #32]
   4a0f8:	ldr	x1, [sp, #8]
   4a0fc:	str	x1, [x0, #8]
   4a100:	ldr	x0, [sp, #24]
   4a104:	ldr	x1, [sp, #32]
   4a108:	str	x1, [x0, #64]
   4a10c:	b	4a114 <__asan_backtrace_release_view@@Base+0x170>
   4a110:	nop
   4a114:	add	sp, sp, #0x40
   4a118:	ret

000000000004a11c <__asan_backtrace_alloc@@Base>:
   4a11c:	stp	x29, x30, [sp, #-112]!
   4a120:	mov	x29, sp
   4a124:	str	x0, [sp, #40]
   4a128:	str	x1, [sp, #32]
   4a12c:	str	x2, [sp, #24]
   4a130:	str	x3, [sp, #16]
   4a134:	str	xzr, [sp, #104]
   4a138:	ldr	x0, [sp, #40]
   4a13c:	ldr	w0, [x0, #8]
   4a140:	cmp	w0, #0x0
   4a144:	b.ne	4a154 <__asan_backtrace_alloc@@Base+0x38>  // b.any
   4a148:	mov	w0, #0x1                   	// #1
   4a14c:	str	w0, [sp, #100]
   4a150:	b	4a180 <__asan_backtrace_alloc@@Base+0x64>
   4a154:	ldr	x0, [sp, #40]
   4a158:	add	x1, x0, #0x3c
   4a15c:	mov	w2, #0x1                   	// #1
   4a160:	ldxr	w0, [x1]
   4a164:	stxr	w3, w2, [x1]
   4a168:	cbnz	w3, 4a160 <__asan_backtrace_alloc@@Base+0x44>
   4a16c:	dmb	ish
   4a170:	cmp	w0, #0x0
   4a174:	cset	w0, eq  // eq = none
   4a178:	and	w0, w0, #0xff
   4a17c:	str	w0, [sp, #100]
   4a180:	ldr	w0, [sp, #100]
   4a184:	cmp	w0, #0x0
   4a188:	b.eq	4a264 <__asan_backtrace_alloc@@Base+0x148>  // b.none
   4a18c:	ldr	x0, [sp, #40]
   4a190:	add	x0, x0, #0x40
   4a194:	str	x0, [sp, #88]
   4a198:	b	4a238 <__asan_backtrace_alloc@@Base+0x11c>
   4a19c:	ldr	x0, [sp, #88]
   4a1a0:	ldr	x0, [x0]
   4a1a4:	ldr	x0, [x0, #8]
   4a1a8:	ldr	x1, [sp, #32]
   4a1ac:	cmp	x1, x0
   4a1b0:	b.hi	4a22c <__asan_backtrace_alloc@@Base+0x110>  // b.pmore
   4a1b4:	ldr	x0, [sp, #88]
   4a1b8:	ldr	x0, [x0]
   4a1bc:	str	x0, [sp, #80]
   4a1c0:	ldr	x0, [sp, #80]
   4a1c4:	ldr	x1, [x0]
   4a1c8:	ldr	x0, [sp, #88]
   4a1cc:	str	x1, [x0]
   4a1d0:	ldr	x0, [sp, #32]
   4a1d4:	add	x0, x0, #0x7
   4a1d8:	and	x0, x0, #0xfffffffffffffff8
   4a1dc:	str	x0, [sp, #32]
   4a1e0:	ldr	x0, [sp, #80]
   4a1e4:	ldr	x0, [x0, #8]
   4a1e8:	ldr	x1, [sp, #32]
   4a1ec:	cmp	x1, x0
   4a1f0:	b.cs	4a220 <__asan_backtrace_alloc@@Base+0x104>  // b.hs, b.nlast
   4a1f4:	ldr	x1, [sp, #80]
   4a1f8:	ldr	x0, [sp, #32]
   4a1fc:	add	x3, x1, x0
   4a200:	ldr	x0, [sp, #80]
   4a204:	ldr	x1, [x0, #8]
   4a208:	ldr	x0, [sp, #32]
   4a20c:	sub	x0, x1, x0
   4a210:	mov	x2, x0
   4a214:	mov	x1, x3
   4a218:	ldr	x0, [sp, #40]
   4a21c:	bl	4a014 <__asan_backtrace_release_view@@Base+0x70>
   4a220:	ldr	x0, [sp, #80]
   4a224:	str	x0, [sp, #104]
   4a228:	b	4a248 <__asan_backtrace_alloc@@Base+0x12c>
   4a22c:	ldr	x0, [sp, #88]
   4a230:	ldr	x0, [x0]
   4a234:	str	x0, [sp, #88]
   4a238:	ldr	x0, [sp, #88]
   4a23c:	ldr	x0, [x0]
   4a240:	cmp	x0, #0x0
   4a244:	b.ne	4a19c <__asan_backtrace_alloc@@Base+0x80>  // b.any
   4a248:	ldr	x0, [sp, #40]
   4a24c:	ldr	w0, [x0, #8]
   4a250:	cmp	w0, #0x0
   4a254:	b.eq	4a264 <__asan_backtrace_alloc@@Base+0x148>  // b.none
   4a258:	ldr	x0, [sp, #40]
   4a25c:	add	x0, x0, #0x3c
   4a260:	stlr	wzr, [x0]
   4a264:	ldr	x0, [sp, #104]
   4a268:	cmp	x0, #0x0
   4a26c:	b.ne	4a350 <__asan_backtrace_alloc@@Base+0x234>  // b.any
   4a270:	bl	6b80 <getpagesize@plt>
   4a274:	sxtw	x0, w0
   4a278:	str	x0, [sp, #72]
   4a27c:	ldr	x1, [sp, #32]
   4a280:	ldr	x0, [sp, #72]
   4a284:	add	x0, x1, x0
   4a288:	sub	x1, x0, #0x1
   4a28c:	ldr	x0, [sp, #72]
   4a290:	neg	x0, x0
   4a294:	and	x0, x1, x0
   4a298:	str	x0, [sp, #64]
   4a29c:	mov	x5, #0x0                   	// #0
   4a2a0:	mov	w4, #0xffffffff            	// #-1
   4a2a4:	mov	w3, #0x22                  	// #34
   4a2a8:	mov	w2, #0x3                   	// #3
   4a2ac:	ldr	x1, [sp, #64]
   4a2b0:	mov	x0, #0x0                   	// #0
   4a2b4:	bl	68e0 <mmap@plt>
   4a2b8:	str	x0, [sp, #56]
   4a2bc:	ldr	x0, [sp, #56]
   4a2c0:	cmn	x0, #0x1
   4a2c4:	b.ne	4a2f8 <__asan_backtrace_alloc@@Base+0x1dc>  // b.any
   4a2c8:	ldr	x0, [sp, #24]
   4a2cc:	cmp	x0, #0x0
   4a2d0:	b.eq	4a350 <__asan_backtrace_alloc@@Base+0x234>  // b.none
   4a2d4:	bl	69d0 <__errno_location@plt>
   4a2d8:	ldr	w0, [x0]
   4a2dc:	ldr	x3, [sp, #24]
   4a2e0:	mov	w2, w0
   4a2e4:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0xd970>
   4a2e8:	add	x1, x0, #0x348
   4a2ec:	ldr	x0, [sp, #16]
   4a2f0:	blr	x3
   4a2f4:	b	4a350 <__asan_backtrace_alloc@@Base+0x234>
   4a2f8:	ldr	x0, [sp, #32]
   4a2fc:	add	x0, x0, #0x7
   4a300:	and	x0, x0, #0xfffffffffffffff8
   4a304:	str	x0, [sp, #32]
   4a308:	ldr	x1, [sp, #32]
   4a30c:	ldr	x0, [sp, #64]
   4a310:	cmp	x1, x0
   4a314:	b.cs	4a348 <__asan_backtrace_alloc@@Base+0x22c>  // b.hs, b.nlast
   4a318:	ldr	x1, [sp, #56]
   4a31c:	ldr	x0, [sp, #32]
   4a320:	add	x5, x1, x0
   4a324:	ldr	x1, [sp, #64]
   4a328:	ldr	x0, [sp, #32]
   4a32c:	sub	x0, x1, x0
   4a330:	ldr	x4, [sp, #16]
   4a334:	ldr	x3, [sp, #24]
   4a338:	mov	x2, x0
   4a33c:	mov	x1, x5
   4a340:	ldr	x0, [sp, #40]
   4a344:	bl	6ac0 <__asan_backtrace_free@plt>
   4a348:	ldr	x0, [sp, #56]
   4a34c:	str	x0, [sp, #104]
   4a350:	ldr	x0, [sp, #104]
   4a354:	ldp	x29, x30, [sp], #112
   4a358:	ret

000000000004a35c <__asan_backtrace_free@@Base>:
   4a35c:	stp	x29, x30, [sp, #-80]!
   4a360:	mov	x29, sp
   4a364:	str	x0, [sp, #56]
   4a368:	str	x1, [sp, #48]
   4a36c:	str	x2, [sp, #40]
   4a370:	str	x3, [sp, #32]
   4a374:	str	x4, [sp, #24]
   4a378:	ldr	x1, [sp, #40]
   4a37c:	mov	x0, #0xffff                	// #65535
   4a380:	cmp	x1, x0
   4a384:	b.ls	4a3d8 <__asan_backtrace_free@@Base+0x7c>  // b.plast
   4a388:	bl	6b80 <getpagesize@plt>
   4a38c:	sxtw	x0, w0
   4a390:	str	x0, [sp, #64]
   4a394:	ldr	x0, [sp, #64]
   4a398:	sub	x1, x0, #0x1
   4a39c:	ldr	x0, [sp, #48]
   4a3a0:	and	x0, x1, x0
   4a3a4:	cmp	x0, #0x0
   4a3a8:	b.ne	4a3d8 <__asan_backtrace_free@@Base+0x7c>  // b.any
   4a3ac:	ldr	x0, [sp, #64]
   4a3b0:	sub	x1, x0, #0x1
   4a3b4:	ldr	x0, [sp, #40]
   4a3b8:	and	x0, x1, x0
   4a3bc:	cmp	x0, #0x0
   4a3c0:	b.ne	4a3d8 <__asan_backtrace_free@@Base+0x7c>  // b.any
   4a3c4:	ldr	x1, [sp, #40]
   4a3c8:	ldr	x0, [sp, #48]
   4a3cc:	bl	68f0 <munmap@plt>
   4a3d0:	cmp	w0, #0x0
   4a3d4:	b.eq	4a45c <__asan_backtrace_free@@Base+0x100>  // b.none
   4a3d8:	ldr	x0, [sp, #56]
   4a3dc:	ldr	w0, [x0, #8]
   4a3e0:	cmp	w0, #0x0
   4a3e4:	b.ne	4a3f4 <__asan_backtrace_free@@Base+0x98>  // b.any
   4a3e8:	mov	w0, #0x1                   	// #1
   4a3ec:	str	w0, [sp, #76]
   4a3f0:	b	4a420 <__asan_backtrace_free@@Base+0xc4>
   4a3f4:	ldr	x0, [sp, #56]
   4a3f8:	add	x1, x0, #0x3c
   4a3fc:	mov	w2, #0x1                   	// #1
   4a400:	ldxr	w0, [x1]
   4a404:	stxr	w3, w2, [x1]
   4a408:	cbnz	w3, 4a400 <__asan_backtrace_free@@Base+0xa4>
   4a40c:	dmb	ish
   4a410:	cmp	w0, #0x0
   4a414:	cset	w0, eq  // eq = none
   4a418:	and	w0, w0, #0xff
   4a41c:	str	w0, [sp, #76]
   4a420:	ldr	w0, [sp, #76]
   4a424:	cmp	w0, #0x0
   4a428:	b.eq	4a460 <__asan_backtrace_free@@Base+0x104>  // b.none
   4a42c:	ldr	x2, [sp, #40]
   4a430:	ldr	x1, [sp, #48]
   4a434:	ldr	x0, [sp, #56]
   4a438:	bl	4a014 <__asan_backtrace_release_view@@Base+0x70>
   4a43c:	ldr	x0, [sp, #56]
   4a440:	ldr	w0, [x0, #8]
   4a444:	cmp	w0, #0x0
   4a448:	b.eq	4a460 <__asan_backtrace_free@@Base+0x104>  // b.none
   4a44c:	ldr	x0, [sp, #56]
   4a450:	add	x0, x0, #0x3c
   4a454:	stlr	wzr, [x0]
   4a458:	b	4a460 <__asan_backtrace_free@@Base+0x104>
   4a45c:	nop
   4a460:	ldp	x29, x30, [sp], #80
   4a464:	ret

000000000004a468 <__asan_backtrace_vector_grow@@Base>:
   4a468:	stp	x29, x30, [sp, #-96]!
   4a46c:	mov	x29, sp
   4a470:	str	x0, [sp, #56]
   4a474:	str	x1, [sp, #48]
   4a478:	str	x2, [sp, #40]
   4a47c:	str	x3, [sp, #32]
   4a480:	str	x4, [sp, #24]
   4a484:	ldr	x0, [sp, #24]
   4a488:	ldr	x0, [x0, #16]
   4a48c:	ldr	x1, [sp, #48]
   4a490:	cmp	x1, x0
   4a494:	b.ls	4a5ec <__asan_backtrace_vector_grow@@Base+0x184>  // b.plast
   4a498:	bl	6b80 <getpagesize@plt>
   4a49c:	sxtw	x0, w0
   4a4a0:	str	x0, [sp, #80]
   4a4a4:	ldr	x0, [sp, #24]
   4a4a8:	ldr	x0, [x0, #8]
   4a4ac:	ldr	x1, [sp, #48]
   4a4b0:	add	x0, x1, x0
   4a4b4:	str	x0, [sp, #88]
   4a4b8:	ldr	x0, [sp, #24]
   4a4bc:	ldr	x0, [x0, #8]
   4a4c0:	cmp	x0, #0x0
   4a4c4:	b.ne	4a4d8 <__asan_backtrace_vector_grow@@Base+0x70>  // b.any
   4a4c8:	ldr	x0, [sp, #48]
   4a4cc:	lsl	x0, x0, #4
   4a4d0:	str	x0, [sp, #88]
   4a4d4:	b	4a53c <__asan_backtrace_vector_grow@@Base+0xd4>
   4a4d8:	ldr	x1, [sp, #88]
   4a4dc:	ldr	x0, [sp, #80]
   4a4e0:	cmp	x1, x0
   4a4e4:	b.cs	4a510 <__asan_backtrace_vector_grow@@Base+0xa8>  // b.hs, b.nlast
   4a4e8:	ldr	x0, [sp, #88]
   4a4ec:	lsl	x0, x0, #1
   4a4f0:	str	x0, [sp, #88]
   4a4f4:	ldr	x1, [sp, #88]
   4a4f8:	ldr	x0, [sp, #80]
   4a4fc:	cmp	x1, x0
   4a500:	b.ls	4a53c <__asan_backtrace_vector_grow@@Base+0xd4>  // b.plast
   4a504:	ldr	x0, [sp, #80]
   4a508:	str	x0, [sp, #88]
   4a50c:	b	4a53c <__asan_backtrace_vector_grow@@Base+0xd4>
   4a510:	ldr	x0, [sp, #88]
   4a514:	lsl	x0, x0, #1
   4a518:	str	x0, [sp, #88]
   4a51c:	ldr	x1, [sp, #88]
   4a520:	ldr	x0, [sp, #80]
   4a524:	add	x0, x1, x0
   4a528:	sub	x1, x0, #0x1
   4a52c:	ldr	x0, [sp, #80]
   4a530:	neg	x0, x0
   4a534:	and	x0, x1, x0
   4a538:	str	x0, [sp, #88]
   4a53c:	ldr	x3, [sp, #32]
   4a540:	ldr	x2, [sp, #40]
   4a544:	ldr	x1, [sp, #88]
   4a548:	ldr	x0, [sp, #56]
   4a54c:	bl	67f0 <__asan_backtrace_alloc@plt>
   4a550:	str	x0, [sp, #72]
   4a554:	ldr	x0, [sp, #72]
   4a558:	cmp	x0, #0x0
   4a55c:	b.ne	4a568 <__asan_backtrace_vector_grow@@Base+0x100>  // b.any
   4a560:	mov	x0, #0x0                   	// #0
   4a564:	b	4a638 <__asan_backtrace_vector_grow@@Base+0x1d0>
   4a568:	ldr	x0, [sp, #24]
   4a56c:	ldr	x0, [x0]
   4a570:	cmp	x0, #0x0
   4a574:	b.eq	4a5c8 <__asan_backtrace_vector_grow@@Base+0x160>  // b.none
   4a578:	ldr	x0, [sp, #24]
   4a57c:	ldr	x1, [x0]
   4a580:	ldr	x0, [sp, #24]
   4a584:	ldr	x0, [x0, #8]
   4a588:	mov	x2, x0
   4a58c:	ldr	x0, [sp, #72]
   4a590:	bl	66d0 <__asan_internal_memcpy@plt>
   4a594:	ldr	x0, [sp, #24]
   4a598:	ldr	x5, [x0]
   4a59c:	ldr	x0, [sp, #24]
   4a5a0:	ldr	x1, [x0, #8]
   4a5a4:	ldr	x0, [sp, #24]
   4a5a8:	ldr	x0, [x0, #16]
   4a5ac:	add	x0, x1, x0
   4a5b0:	ldr	x4, [sp, #32]
   4a5b4:	ldr	x3, [sp, #40]
   4a5b8:	mov	x2, x0
   4a5bc:	mov	x1, x5
   4a5c0:	ldr	x0, [sp, #56]
   4a5c4:	bl	6ac0 <__asan_backtrace_free@plt>
   4a5c8:	ldr	x0, [sp, #24]
   4a5cc:	ldr	x1, [sp, #72]
   4a5d0:	str	x1, [x0]
   4a5d4:	ldr	x0, [sp, #24]
   4a5d8:	ldr	x0, [x0, #8]
   4a5dc:	ldr	x1, [sp, #88]
   4a5e0:	sub	x1, x1, x0
   4a5e4:	ldr	x0, [sp, #24]
   4a5e8:	str	x1, [x0, #16]
   4a5ec:	ldr	x0, [sp, #24]
   4a5f0:	ldr	x1, [x0]
   4a5f4:	ldr	x0, [sp, #24]
   4a5f8:	ldr	x0, [x0, #8]
   4a5fc:	add	x0, x1, x0
   4a600:	str	x0, [sp, #64]
   4a604:	ldr	x0, [sp, #24]
   4a608:	ldr	x1, [x0, #8]
   4a60c:	ldr	x0, [sp, #48]
   4a610:	add	x1, x1, x0
   4a614:	ldr	x0, [sp, #24]
   4a618:	str	x1, [x0, #8]
   4a61c:	ldr	x0, [sp, #24]
   4a620:	ldr	x1, [x0, #16]
   4a624:	ldr	x0, [sp, #48]
   4a628:	sub	x1, x1, x0
   4a62c:	ldr	x0, [sp, #24]
   4a630:	str	x1, [x0, #16]
   4a634:	ldr	x0, [sp, #64]
   4a638:	ldp	x29, x30, [sp], #96
   4a63c:	ret

000000000004a640 <__asan_backtrace_vector_finish@@Base>:
   4a640:	sub	sp, sp, #0x30
   4a644:	str	x0, [sp, #24]
   4a648:	str	x1, [sp, #16]
   4a64c:	str	x2, [sp, #8]
   4a650:	str	x3, [sp]
   4a654:	ldr	x0, [sp, #16]
   4a658:	ldr	x0, [x0]
   4a65c:	str	x0, [sp, #40]
   4a660:	ldr	x0, [sp, #16]
   4a664:	ldr	x1, [x0]
   4a668:	ldr	x0, [sp, #16]
   4a66c:	ldr	x0, [x0, #8]
   4a670:	add	x1, x1, x0
   4a674:	ldr	x0, [sp, #16]
   4a678:	str	x1, [x0]
   4a67c:	ldr	x0, [sp, #16]
   4a680:	str	xzr, [x0, #8]
   4a684:	ldr	x0, [sp, #40]
   4a688:	add	sp, sp, #0x30
   4a68c:	ret

000000000004a690 <__asan_backtrace_vector_release@@Base>:
   4a690:	stp	x29, x30, [sp, #-80]!
   4a694:	mov	x29, sp
   4a698:	str	x0, [sp, #40]
   4a69c:	str	x1, [sp, #32]
   4a6a0:	str	x2, [sp, #24]
   4a6a4:	str	x3, [sp, #16]
   4a6a8:	ldr	x0, [sp, #32]
   4a6ac:	ldr	x0, [x0, #8]
   4a6b0:	str	x0, [sp, #72]
   4a6b4:	ldr	x0, [sp, #32]
   4a6b8:	ldr	x0, [x0, #16]
   4a6bc:	str	x0, [sp, #64]
   4a6c0:	ldr	x0, [sp, #72]
   4a6c4:	add	x0, x0, #0x7
   4a6c8:	and	x0, x0, #0xfffffffffffffff8
   4a6cc:	str	x0, [sp, #56]
   4a6d0:	ldr	x1, [sp, #72]
   4a6d4:	ldr	x0, [sp, #56]
   4a6d8:	sub	x0, x1, x0
   4a6dc:	ldr	x1, [sp, #64]
   4a6e0:	add	x0, x1, x0
   4a6e4:	str	x0, [sp, #64]
   4a6e8:	ldr	x0, [sp, #32]
   4a6ec:	ldr	x1, [x0]
   4a6f0:	ldr	x0, [sp, #56]
   4a6f4:	add	x0, x1, x0
   4a6f8:	ldr	x4, [sp, #16]
   4a6fc:	ldr	x3, [sp, #24]
   4a700:	ldr	x2, [sp, #64]
   4a704:	mov	x1, x0
   4a708:	ldr	x0, [sp, #40]
   4a70c:	bl	6ac0 <__asan_backtrace_free@plt>
   4a710:	ldr	x0, [sp, #32]
   4a714:	str	xzr, [x0, #16]
   4a718:	ldr	x0, [sp, #32]
   4a71c:	ldr	x0, [x0, #8]
   4a720:	cmp	x0, #0x0
   4a724:	b.ne	4a730 <__asan_backtrace_vector_release@@Base+0xa0>  // b.any
   4a728:	ldr	x0, [sp, #32]
   4a72c:	str	xzr, [x0]
   4a730:	mov	w0, #0x1                   	// #1
   4a734:	ldp	x29, x30, [sp], #80
   4a738:	ret
   4a73c:	nop
   4a740:	adrp	x2, 77000 <_Unwind_Backtrace@GCC_3.3>
   4a744:	mov	x1, #0x0                   	// #0
   4a748:	ldr	x2, [x2, #896]
   4a74c:	b	6930 <__cxa_atexit@plt>
   4a750:	mov	x2, x1
   4a754:	mov	w1, w0
   4a758:	mov	w0, #0x0                   	// #0
   4a75c:	b	6590 <__fxstat@plt>
   4a760:	mov	x2, x1
   4a764:	mov	x1, x0
   4a768:	mov	w0, #0x0                   	// #0
   4a76c:	b	6ad0 <__lxstat@plt>

Disassembly of section .fini:

000000000004a770 <.fini>:
   4a770:	stp	x29, x30, [sp, #-16]!
   4a774:	mov	x29, sp
   4a778:	ldp	x29, x30, [sp], #16
   4a77c:	ret
